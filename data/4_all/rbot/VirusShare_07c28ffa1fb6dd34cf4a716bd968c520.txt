push
call
pop
mov
sub
sub
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
fbstp
sar
call
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
ds
data16
xchg
sbb
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
mov
lret
mov
aad
inc
add
inc
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
das
ljmp
mov
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
and
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
cli
xchg
jb
les
adc
iret
mov
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
rep
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jo
jl
and
and
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
rorl
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
pop
lret
mov
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
stos
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
adcb
aaa
mov
inc
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
adc
pusha
inc
add
cmp
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
add
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
fcmovnb
mov
js
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
fdivp
lds
aas
outsb
lods
call
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
inc
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
imul
rorb
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
ja
xor
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
cwtl
inc
sahf
cmp
inc
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
fistpll
popf
rcrb
add
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
push
inc
mov
and
jmp
fildll
pop
fistps
imul
add
jo
fistps
add
popf
jmp
jmp
push
call
pop
scas
dec
mov
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
jmp
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
add
mov
enter
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
or
sub
sub
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
cmp
push
pop
std
push
add
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
adc
lret
and
inc
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
inc
add
inc
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
js
jp
mov
mov
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
adc
aas
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
out
ret
inc
jge
aas
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
pop
sbb
in
mov
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
out
inc
adc
mov
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jecxz
hlt
inc
adc
xchg
sub
dec
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
xor
add
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jno
xor
fistpll
dec
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
or
inc
fldl
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jecxz
pushf
imul
test
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
rorb
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
shrb
adc
aas
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
cmp
mov
pusha
inc
add
inc
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
icebp
mov
fcoml
ret
enter
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
stos
mov
fsubl
sub
mov
pop
inc
add
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
inc
sti
mov
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
cld
push
dec
mov
jmp
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
out
leave
popa
inc
js
cli
mov
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
xor
add
xchg
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
in
and
inc
leave
mov
jmp
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
pop
and
mov
jo
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
repnz
loopne
fs
test
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
loop
push
cmpsl
dec
push
mov
mov
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
and
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
inc
fildll
pop
fistps
imul
add
jo
fistps
add
popf
jmp
jmp
push
call
mov
enter
movb
jmp
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
push
add
aas
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sbb
std
inc
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
orl
nop
xchg
ljmp
dec
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
xor
das
and
test
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
jnp
adc
jmp
fildll
pop
fistps
imul
add
jo
fistps
add
popf
jmp
jmp
push
call
lods
dec
cs
jmp
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
repz
inc
xchg
sub
dec
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
fsubrp
push
xor
test
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
repz
jne
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
arpl
cltd
int3
test
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
leave
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
sbb
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
cwtl
mov
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
popa
mov
je
xlat
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
nopl
lahf
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
sub
sbb
add
aas
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
rep
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
or
inc
fildll
pop
fistps
imul
add
jnp
fistps
add
popf
jmp
jmp
push
call
in
imul
jo
jae
mov
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
or
mov
sarl
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
notrack
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
inc
nop
mov
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
pop
pop
sahf
sbb
in
jge
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jae
sti
xchg
mov
mov
jmp
fildll
pop
fistps
bnd
fistpll
fistps
add
popf
jmp
jmp
push
call
popf
aam
inc
jnp
aas
fildll
pop
fistps
bnd
fbstp
fistps
add
popf
jmp
jmp
push
call
cs
ret
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
call
movsl
xchg
mov
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
cs
jmp
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
pop
andl
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
hlt
xor
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
xchg
xchg
iret
and
add
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jae
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
popa
xor
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
icebp
sub
pop
xor
add
inc
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sub
jae
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
cwtl
loopne
mov
xor
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
daa
call
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
nop
les
insb
sbb
cmpl
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
aaa
inc
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
fcomps
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
dec
scas
jmp
fildll
pop
fistps
imul
add
jnp
fistps
add
popf
jmp
jmp
push
call
fnstsw
call
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
xchg
test
scas
dec
stc
mov
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
repz
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sub
in
push
jne
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
cs
sbb
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
stos
cltd
enter
jmp
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jmp
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
stos
lock
icebp
mov
call
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
or
dec
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
lcall
push
loop
jmp
jmp
jmp
fildll
pop
fistps
in
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
push
xchg
adc
xchg
push
add
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
adc
aas
rol
jmp
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
adc
mov
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
or
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
xchg
adc
aas
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
test
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
sub
out
adc
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
movsb
inc
popf
mov
add
add
cmp
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
lahf
mov
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
lret
inc
pop
sub
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
push
push
daa
std
pop
inc
imul
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
pop
xor
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
aad
mov
inc
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
lahf
adc
call
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sbb
jae
cmp
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jno
cltd
inc
lods
lods
out
cld
jae
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
subb
fildll
pop
fistps
repz
fbstp
fistps
add
popf
jmp
jmp
push
call
out
jge
push
add
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
jae
test
inc
fildll
pop
fistps
repz
fistpll
fistps
add
popf
jmp
jmp
push
call
pop
enter
add
add
inc
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
sub
inc
jb
das
dec
or
cmp
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
push
inc
bound
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
pop
jmp
fildll
pop
fistps
imul
add
jae
fistps
add
popf
jmp
jmp
push
call
repz
out
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
arpl
push
add
std
sti
jmp
fildll
pop
fistps
imul
add
jnp
fistps
add
popf
jmp
jmp
push
call
jbe
xchg
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
lds
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
xchg
sbb
call
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
int
lahf
jmp
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
and
lcall
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
fcomps
out
and
xchg
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
mov
mov
inc
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
push
mov
rep
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
sub
push
mov
inc
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
test
inc
and
push
idiv
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
and
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
pop
and
add
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
mov
mov
push
movd
add
jmp
fildll
pop
fistps
lock
fistpll
fistps
add
popf
jmp
jmp
push
call
inc
cmp
outsl
mov
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
sahf
xchg
push
inc
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
pop
adc
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
cmpb
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
into
sbbl
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
idivb
xor
fldpi
inc
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
push
inc
sbb
leave
jmp
fildll
pop
fistps
hlt
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
fs
sahf
mov
or
imul
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
inc
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jmp
fildll
pop
fistps
imul
add
js
fistps
add
popf
jmp
jmp
push
call
pop
stc
es
daa
lret
jmp
fildll
pop
fistps
icebp
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
into
out
scas
leave
cmc
aas
and
leave
jmp
fildll
pop
fistps
hlt
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
and
test
dec
dec
call
jmp
fildll
pop
fistps
icebp
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
jb
jmp
fildll
pop
fistps
lock
fbstp
fistps
add
popf
jmp
jmp
push
call
test
ret
jmp
fildll
pop
fistps
cmc
jmp
fbstp
fistps
add
popf
jmp
jmp
push
call
jmp
fildll
pop
fistps
imul
add
jne
fistps
add
popf
jmp
jmp
push
call
xlat
sarb
mov
jl
sub
aas
fildll
pop
fistps
bnd
fistpll
fistps
add
popf
jmp
jmp
push
call
dec
or
cmp
imul
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
shlb
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
clc
lea
jns
ret
jmp
fildll
pop
fistps
cmc
jmp
fistpll
fistps
add
popf
jmp
jmp
push
call
movb
add
add
add
pop
add
or
add
faddl
add
or
add
and
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
or
arpl
xchg
nop
mov
add
add
add
add
cmp
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
cmp
loop
or
loop
or
loop
or
add
add
mov
or
mov
or
mov
or
add
add
add
inc
popa
je
insb
inc
js
je
xchg
nop
add
or
add
add
add
lock
add
mov
cmpl
pop
call
push
push
add
fucomi
gs
add
and
pop
mov
je
push
mov
push
add
push
lea
jmp
jl
call
push
sti
dec
dec
mov
add
into
les
jle
pop
jne
pop
pushl
or
inc
inc
xor
push
aas
jno
and
pop
jno
adc
daa
push
icebp
jne
push
cwtl
or
or
cmp
jo
and
rorl
sbb
leave
ret
gs
push
call
test
pop
jle
add
lds
adc
xor
push
jne
sub
or
jmp
push
nop
movsb
enter
movsl
jns
repnz
sbb
pop
sub
ja
add
xor
cmp
inc
cmp
or
je
sarb
cmp
pusha
and
push
call
cmp
xor
inc
mov
push
mov
push
push
mov
mov
pushf
xor
add
xor
ret
call
sbb
cwtl
mov
andl
inc
ds
mov
jns
sbb
push
sub
add
sub
xor
enter
sbb
std
fistl
push
push
adc
xchg
or
push
push
sbb
mov
fisttpl
xor
mov
cld
inc
lds
jge
sbb
push
mov
mov
imul
cmp
mov
sbb
add
lock
jmp
mov
cwtl
ret
lock
push
add
and
or
push
push
xchg
push
or
add
pop
into
int3
je
or
push
rclb
fmuls
inc
push
and
cwtl
pop
aaa
push
inc
fisubl
lea
sub
mov
in
adc
and
call
pop
mov
test
mov
inc
pop
mov
or
dec
ret
adc
dec
or
pop
pop
inc
cmc
adc
and
and
dec
mov
and
add
std
pop
xor
hlt
push
and
fnsave
dec
push
mov
fxch
sti
sbb
dec
cmpsl
arpl
outsb
sub
bound
outsl
or
movsb
sub
bound
pop
fs
cli
into
ljmp
ss
push
inc
clc
cld
xor
cltd
inc
mulps
xor
xor
jno
lock
dec
fists
mov
lods
and
push
daa
or
sbb
outsl
rcrb
clc
adc
pop
or
add
dec
jmp
lock
out
add
sbb
or
and
clc
inc
push
lods
sbb
sbb
sub
push
in
mov
xor
inc
cmp
ja
push
mov
push
adc
lock
movsb
popf
sti
and
ja
xor
add
call
xchg
adc
mov
push
jle
add
push
xchg
outsb
jo
mov
aaa
sbb
ds
adc
push
rorb
adc
cmp
jb
mov
mov
adc
push
push
adc
clc
xchg
jg
jg
cmp
cmp
lahf
xchg
pop
pop
sub
mov
push
inc
nop
pop
lea
movsl
fdivs
sub
mov
fmuls
inc
mov
icebp
test
aam
mov
adc
movsl
xchg
jge
xor
je
test
int3
push
and
stc
inc
into
mov
mov
les
mov
std
adc
and
mov
dec
xor
mov
aas
sbb
daa
sub
xor
mov
or
sub
add
loopne
xor
xor
movsl
sub
fs
adc
pusha
in
subb
adc
call
aas
mov
adc
xchg
mov
aad
rol
cmpsb
and
cmp
and
mov
jmp
push
clc
push
add
es
xor
clc
sbbb
adc
push
cmpsb
andb
or
push
mov
call
and
add
xor
add
xor
ss
pushf
adc
mov
mov
das
inc
imul
mov
frstor
push
push
jl
mov
cmp
xchg
push
loopne
test
ja
dec
out
push
pop
push
inc
adc
adc
int3
add
mov
dec
lock
and
in
mov
dec
test
xchg
fs
dec
inc
test
cmpsb
mov
call
and
dec
addb
adc
mov
and
jecxz
or
pop
or
dec
mov
dec
es
adcl
jne
push
xchg
sbb
les
call
xor
inc
mov
add
faddp
out
loopne
add
xor
push
sbb
imul
enter
add
imul
orb
lcall
and
fsubrs
cltd
repz
iret
call
dec
cmp
xor
fcoms
gs
sbb
push
aam
mov
pop
adc
rcl
inc
cmp
jbe
sti
shlb
pop
lock
inc
ljmp
and
cs
je
imul
out
aad
je
mov
iret
in
add
push
inc
push
lret
stos
push
js
xchg
and
pop
mov
xor
gs
or
in
hlt
and
shrl
xchg
or
nop
and
or
call
push
lret
push
add
andl
cmc
push
mov
mov
loopne,pt
pop
push
sbb
inc
pop
cmp
pop
inc
jg
out
or
testl
lds
sub
inc
cmp
inc
xchg
bound
ss
jae
in
push
push
xchg
stos
adc
fcmovne
and
or
xchg
lock
mov
push
xchg
dec
adc
xchg
pop
cmpsb
push
adc
push
ljmp
xorb
inc
sbb
push
push
iret
je
gs
adc
or
stos
inc
inc
jb
mov
js
pushf
mov
xchg
jl
push
dec
mov
and
mov
orb
cmp
adc
mov
adc
push
movb
add
fistpll
fidivrs
sub
mov
int3
ret
push
adc
mov
test
es
cld
mov
adc
dec
sub
dec
or
jmp
insl
fisttpl
adc
call
mov
mov
add
inc
jl
cmp
adc
and
add
jmp
out
or
add
and
push
sub
loop
ret
test
ret
int
les
push
adc
lret
cmp
adc
push
dec
or
xchg
fstps
inc
pop
sahf
sbb
add
pop
lea
fs
xor
das
dec
ljmp
cmp
mov
cld
xor
push
dec
push
jae
call
daa
mov
sub
andb
push
mov
pop
shrl
add
clc
jns
or
out
cmp
jge
xchg
mov
pop
sbb
adc
insb
pusha
je
push
scas
jbe
push
jb
mov
insb
fbld
add
call
pop
divb
push
sbb
call
xor
std
and
inc
dec
mov
xor
inc
rol
cmp
dec
mov
push
lcall
pushl
pop
or
cmp
je
nop
xchg
pushf
push
int
push
adc
push
push
enter
aas
jmp
xchg
or
push
ret
sub
sbb
movsb
loope,pt
push
adc
adc
push
gs
mov
pop
loopne
inc
sbb
lret
aad
xor
je
dec
add
clc
rolb
test
stos
in
xor
xchg
inc
push
imul
mov
dec
add
xchg
mov
jmp
inc
fcomi
fstps
cmp
mov
inc
mov
push
push
mov
pop
roll
push
push
pop
xor
mov
inc
cld
push
or
orb
movsb
test
or
int3
jp
pop
cli
les
dec
push
push
mov
sbb
push
dec
fsubrs
xchg
roll
in
push
clc
and
cmp
mov
xchg
das
cld
or
xchg
adc
push
mov
dec
dec
push
add
sub
cmpsl
or
enter
xchg
imul
mov
pop
cmp
push
inc
ret
popf
jb
sub
jmp
es
inc
call
test
fs
rclb
pop
lods
lea
xchg
ud0
test
dec
push
ja
pop
bound
push
push
and
and
mov
pop
mov
fisubrs
test
hlt
add
clc
or
lock
push
cmpsb
sub
inc
push
jmp
push
and
pushf
pop
cmpsb
lcall
sbb
push
hlt
or
test
lock
and
jl
shll
inc
aaa
push
or
test
push
mov
push
nop
add
xor
mov
add
push
fsubr
outsb
fwait
or
inc
and
cmp
push
lds
adc
scas
jae
cli
stos
sub
cwtl
flds
adc
fidivs
sti
lcall
mov
inc
jge
push
dec
clc
imul
hlt
iret
or
loopne
push
shr
out
dec
add
dec
and
push
cmp
add
push
ficoml
aas
sub
pop
popf
push
mov
aam
or
inc
dec
test
rolb
loope
or
and
lods
push
aaa
mov
and
mov
cs
or
xlat
sbb
or
pushf
cli
xor
inc
mov
pusha
lea
xor
shrb
in
fs
xor
xor
xchg
push
xchg
repnz
rcll
push
push
out
sbb
sbb
call
sub
or
inc
sbb
or
testl
jmp
cmpsb
or
push
and
cltd
cmp
xchg
mov
js
pop
cltd
pushf
or
in
dec
shrb
sti
cld
xor
movsb
jmp
xchg
or
adc
test
push
inc
les
shlb
ret
push
fsubrp
orl
push
xchg
sub
cmp
mov
adc
dec
in
cld
and
inc
or
add
push
xlat
adc
call
xchg
sub
or
fisubs
nop
or
push
lret
adc
daa
xchg
add
cmp
jno
adc
in
cmp
or
mov
adc
adc
mov
dec
add
inc
or
jecxz
push
adc
push
loopne
and
and
sub
push
sub
sub
sub
push
pop
jno
mov
dec
push
cmp
adc
push
lret
clc
call
int3
jno
pop
jecxz
imul
andb
xor
nop
and
cld
cmp
leave
fcmovnb
ret
aam
in
adc
cld
or
sub
sub
dec
xor
and
push
xchg
cld
test
push
insb
pop
scas
xchg
sub
xor
stc
and
and
mov
add
pop
push
lcall
push
cmp
in
enter
push
cmc
xor
int3
jno
jge
jo
push
aam
xor
lret
pop
dec
adc
lret
pop
dec
push
inc
sub
fimull
mov
xor
inc
jbe
test
lret
hlt
add
imul
repnz
dec
je
mov
sub
mov
cli
es
push
or
xchg
xor
lock
fmuls
leave
adc
data16
dec
je
mov
fwait
sub
sbb
sub
push
or
add
cmpsl
clc
call
aaa
adc
inc
repnz
dec
int3
pop
push
fs
daa
push
adc
nop
cmp
mov
mov
mov
and
adc
mov
jmp
push
test
inc
push
es
inc
dec
je
sub
pop
and
popa
jno
or
rcr
adc
mov
inc
or
jmp
push
jns
or
jl
mov
dec
add
mov
and
lret
in
jmp
out
xchg
dec
inc
push
dec
inc
test
dec
cmp
pop
sub
and
push
lea
cmp
in
inc
scas
or
xchg
into
jl
adc
test
je
jbe
mov
add
xor
ljmp
test
popa
dec
lock
sub
pop
jmp
pop
ret
je
fistl
idivb
dec
sub
dec
sub
add
popa
shlb
mov
or
jne
lahf
pop
adc
push
call
test
and
push
cmpl
call
testb
sbb
push
outsb
push
lret
mov
dec
xor
sub
dec
pop
cltd
pop
cmpsb
pop
inc
mov
call
sahf
arpl
push
int
xchg
push
or
ds
adc
test
addl
pop
cld
xor
call
mov
out
push
cltd
inc
inc
hlt
mov
inc
xor
sub
mov
pop
mov
roll
pop
add
pusha
test
in
lcall
mov
pop
dec
xor
insb
pop
sbb
push
xchg
push
or
jbe
sub
push
adc
cmp
and
xor
data16
sub
add
push
pop
addr16
ja
repnz
xchg
add
jg
push
repz
cwtl
mov
inc
or
sub
movsb
jnp
pusha
testb
xor
leave
int
xor
icebp
js
enter
dec
jnp
sub
in
ljmpw
shrl
mov
repz
or
enter
test
std
mov
cmp
shl
adc
inc
xorl
inc
cld
jns
in
adc
mov
push
out
repz
xor
adc
adc
mov
out
sub
adc
sbb
push
fisttpl
jbe
insl
pop
and
pop
call
or
xor
call
push
or
sub
xchg
jle
push
mov
adc
scas
lds
arpl
cwtl
dec
jg
jp
inc
enter
leave
mov
mov
xchg
xor
sub
dec
dec
mov
push
pop
fcoml
mov
xchg
les
adcl
rorl
add
in
rorl
out
xchg
adc
les
lock
sbb
cld
push
dec
lcall
sub
and
stc
inc
or
pop
dec
dec
pop
push
subb
movsl
inc
add
cmp
adc
jmp
adc
mov
lods
inc
shlb
fnstenv
pop
pop
inc
push
enter
mov
push
adc
sbb
mov
cld
inc
in
xor
pop
mov
sub
inc
je
inc
aaa
mov
push
push
jle
xchg
xor
ja
movb
addb
pop
fsub
jle
push
jne
cmp
xor
sbb
and
and
or
out
adc
add
sbb
add
cmp
xchg
aad
or
inc
jl
mov
jl
movsl
in
inc
je
inc
pop
insb
lock
push
out
and
loope
repz
push
repnz
xchg
adc
je
jns
andl
inc
or
xchg
loope
and
lock
push
js
or
add
movsb
cmpb
inc
adc
lds
or
xchg
and
mov
mov
cmovb
mov
fcomps
sti
popa
scas
push
xor
out
subb
inc
mov
and
popa
xor
jge
mov
push
sbb
cmp
call
dec
out
or
push
jmp
lock
dec
xor
clc
or
push
cli
ljmp
mov
push
fs
xchg
adc
mov
xchg
mov
adc
hlt
xor
push
push
repz
mov
add
loopne
fildl
sub
adc
xchg
cmp
loope
pop
imul
bound
pop
sarb
mov
xor
cmp
lock
test
cmp
cld
dec
inc
inc
les
pop
push
into
mov
add
mov
mov
nop
mov
loopne
cwtl
xchg
sarb
jbe
and
loopne
ljmp
push
jmp
rclb
fildl
push
hlt
or
ret
imul
mov
dec
xchg
outsl
cltd
jl
or
aaa
cmp
bound
cltd
js
or
lods
rclb
adc
shlb
sub
push
inc
lds
in
test
adc
ljmp
add
mov
cld
stc
adc
mov
dec
or
pop
jbe
push
lret
jnp
push
inc
adc
push
fdivs
ljmp
push
mov
nop
sbb
push
cs
pop
cld
xchg
push
mov
cs
push
pop
adc
pcmpgtb
mov
cld
push
imul
jl
and
mov
inc
daa
xchg
xor
and
push
fcompl
sti
sahf
jg
xchg
outsb
adc
popf
pop
out
cmpsl
adc
and
xchg
add
lods
push
les
jmp
sbbl
lret
mov
inc
add
push
push
sahf
std
cmp
adc
out
mov
and
insb
daa
mov
cltd
movsl
loopne
cmp
call
jnp
cmc
mov
inc
jmp
xchg
repz
das
and
movsl
rcrb
cmp
adc
loopne
sbb
aaa
sub
inc
cmp
adc
mov
mov
push
fsubrs
push
lock
sub
test
push
hlt
std
lea
push
push
cld
or
cltd
test
mov
mov
sub
fsts
adc
xchg
mov
cld
and
ret
jne
xchg
and
xchg
dec
xchg
lcall
adc
xor
pop
lahf
mov
popa
or
and
mov
dec
push
mov
stos
pop
faddp
sbb
repz
inc
enter
jmp
les
and
inc
inc
pop
movsb
pop
test
inc
rcll
and
mov
sahf
enter
and
aad
pop
mov
pop
cmp
jl
dec
movsbl
jecxz
pop
add
jne
mov
inc
push
es
push
inc
insl
adc
cmp
pop
jns
mov
fadds
in
cwtl
xor
dec
dec
push
in
or
and
push
and
or
cmp
pushf
ds
jmp
rcrl
adc
test
push
inc
jnp
ss
and
cli
fisubl
addr16
out
jge
clc
shlb
hlt
mov
add
mov
ret
inc
xchg
leave
scas
push
dec
adc
testb
cmp
dec
scas
adc
aaa
scas
subb
and
sub
scas
lock
scas
movsl
mov
icebp
xchg
jns
js
mov
nop
sbb
pop
dec
in
ja
xorl
in
cld
pop
je
movsb
mov
out
pop
push
or
lea
push
push
ffree
push
add
inc
mov
add
hlt
mov
adc
mov
lods
pop
rcll
push
mov
rep
stc
leave
mov
inc
mov
nop
xor
push
mov
push
leave
add
test
and
add
sub
adc
or
and
test
or
mov
push
adc
xchg
or
pushf
adc
shlb
sbb
rclb
shll
fld1
mov
and
fst
repz
movsl
adc
in
pop
mov
xchg
loop
xlat
cmpsl
out
pop
sub
sbb
imul
icebp
adc
jmp
or
xor
imul
loop
pop
inc
popa
aaa
add
adc
pop
push
dec
push
mov
jmp
mov
popf
adc
sti
js
iret
jo
adc
xor
sub
add
push
mov
push
dec
pop
fbstp
fists
inc
loopne
popf
add
cmp
inc
dec
pop
xchg
shll
adc
ds
lods
cmp
adc
xor
test
or
and
cltd
push
adc
stc
popa
cli
or
mov
mov
fs
dec
add
rolb
adc
push
and
dec
pop
mov
movsl
stc
notl
push
int
mov
mov
pop
inc
in
adc
daa
mov
mov
inc
dec
pop
or
jo
push
cmp
clc
dec
subl
push
cmp
push
fs
mov
sub
ds
push
pusha
xchg
or
mov
add
add
lods
or
or
mov
push
enter
xor
test
push
les
add
or
das
and
push
leave
popl
dec
sbb
add
mov
push
sbb
mov
cwtl
ret
mov
test
ret
dec
jns
or
push
pop
or
call
push
popa
inc
inc
adc
cld
subb
inc
pop
test
lea
sub
adc
rclb
cmp
xchg
shll
jnp
movsl
jnp
jmp
add
sbb
sbb
lds
cmp
lock
jecxz
dec
out
dec
popa
dec
add
add
push
je
mov
jbe
cmp
mov
icebp
cmp
mov
pop
and
cwtl
sar
dec
sbb
xor
xor
dec
std
cmpb
repnz
iret
movsb
sbb
mov
xchg
cmp
psubsw
loop
xchg
leave
mov
scas
jmp
push
hlt
push
push
sbb
sub
mov
pop
mov
xor
sbbl
push
in
adc
dec
and
sbb
push
push
mov
clc
inc
and
push
xchg
push
mov
jo
mov
add
aaa
adc
add
add
mov
fs
mov
xor
inc
test
sti
sbb
dec
inc
dec
repz
leave
add
mov
rol
divb
jne
push
jmp
dec
push
cmp
das
je
jno
adc
enter
ret
push
push
jle
sub
inc
pop
bnd
mov
or
mov
pop
push
xchg
mov
sub
ja
adc
pop
adc
std
and
xor
mulb
push
and
or
ficoml
push
leave
inc
add
jl
jmp
push
mov
dec
les
or
xchg
pushf
mov
int3
loope
xor
frstor
loopne
adc
test
xorb
xchg
mov
in
int3
sbb
cwtl
xor
mov
mov
enter
mov
xchg
ja
xor
pop
out
push
dec
and
scas
adc
scas
xchg
outsl
aad
pushf
stos
jmp
in
lods
adc
add
out
dec
xchg
dec
push
inc
adc
inc
add
in
mov
sub
adc
in
adc
and
and
and
fidivs
xor
push
in
inc
push
mov
dec
cmp
xor
and
test
insb
dec
push
in
mov
inc
test
bound
push
jle
dec
sbb
push
in
adc
test
insb
out
test
and
bound
les
ret
les
mov
rorb
int
xchg
xchg
push
into
sbb
nop
mov
or
cmpsb
test
in
push
adc
mov
sbb
xchg
in
push
adc
cs
test
mov
add
jmp
lock
dec
add
add
mov
add
adc
adcb
mov
adc
fs
repz
hlt
std
or
add
and
push
sub
inc
jg
stos
push
sbb
jns
mov
subl
stc
sti
or
fcmovu
sub
and
ljmp
mov
and
push
pop
mov
sub
push
leave
and
incl
push
push
fisubl
popf
push
bound
or
cwtl
pop
loopne
mov
dec
shlb
jp
leave
inc
dec
sti
pop
xchg
jns
pop
lods
pop
xchg
test
adcb
test
sahf
int3
daa
into
adc
les
jge
push
pop
shlb
xor
orb
push
cltd
sbb
push
fsubl
test
and
cmp
idiv
push
sbb
js
xor
xchg
inc
in
int
cld
fmull
adcb
bound
test
insb
or
add
push
xor
test
sbb
inc
rclb
cmp
mov
and
stc
push
cltd
subb
hlt
cld
mov
enter
rolb
mov
push
xchg
push
xchg
lods
dec
cli
xchg
in
dec
sar
adc
sub
outsb
in
jb
repz
xchg
push
mov
insl
sbb
ss
pop
pop
adc
jo
xor
enter
aas
push
shr
jmp
ret
push
mov
scas
cmp
stos
sbb
adc
sbb
sbb
stc
mov
xchg
cmp
push
mov
pop
nop
mov
xchg
aad
sbb
mov
mov
decl
add
lea
data16
mov
push
sbb
xlat
test
cmp
out
int3
push
pop
xor
xchg
pusha
enter
es
push
inc
mov
enter
mov
flds
adc
shrl
ret
add
sub
int3
pop
loopne
add
xchg
dec
lret
call
adc
mov
repnz
xor
sbb
loope
mov
push
cmp
bound
lcall
cld
sbb
jmp
sbb
sub
repnz
adc
jmp
xchg
xorl
and
pop
cli
loopew
das
adc
shl
sub
lods
mov
xchg
cs
movsb
mov
push
add
xor
add
orb
mov
dec
repnz
enter
repz
or
add
stos
mov
xchg
das
inc
inc
mov
movsb
sub
mov
add
js
mov
cs
and
xchg
sahf
aaa
sub
lahf
mov
sbb
mov
cli
mov
popa
cs
adc
lock
and
and
std
sbb
mov
adc
cli
test
aad
push
scas
or
sahf
pop
mov
mov
xchg
push
call
adc
mov
andl
adc
xchg
mov
add
int3
je
sbb
or
mov
cwtl
mov
dec
lahf
or
leave
jle
inc
sti
jae
and
sub
sahf
jbe
lcall
jp
pop
fsubrp
jge
popl
rcll
or
dec
push
out
push
or
jge
mov
pop
and
jmp
mov
icebp
daa
fwait
xor
xor
cmpsl
xchg
mov
je
frstor
movsb
jne
popf
add
push
or
and
sub
push
adc
aam
mov
inc
ss
cltd
sbb
icebp
sbb
dec
adc
pushf
dec
in
call
adc
pop
je
out
hlt
loope
imul
test
fmuls
sub
in
xor
add
or
push
fs
and
or
cld
fildll
jge
or
or
fstpl
and
dec
adc
jg
es
imul
das
cld
shlb
jmp
add
cmpsb
stos
jo
fdivl
sub
and
fwait
lds
clc
mov
roll
jmp
push
dec
or
inc
and
les
pop
push
adc
jl
inc
xor
and
mov
cmp
xor
xchg
adc
inc
lret
push
lea
pop
cmp
iret
data16
and
and
pop
mov
mov
mov
call
xor
dec
sub
mov
jmp
add
call
add
inc
daa
pop
sbb
pushf
cmp
sbb
and
add
leave
test
pop
or
mov
xor
inc
cmp
and
push
push
add
call
push
sahf
sub
icebp
push
xchg
cmp
xor
mov
popf
or
sub
cwtl
out
fsubl
fwait
or
aam
or
add
mov
inc
lcall
ret
push
or
push
scas
or
cltd
idiv
test
jo
push
sub
sub
ret
in
mov
mov
inc
dec
add
jae
andb
mov
push
xchg
add
aas
inc
outsl
xorl
xor
dec
jae
int3
or
push
sbb
fdivrl
fadds
rolb
mov
pushf
sbb
enter
iret
repz
lock
hlt
clc
cmp
pop
xor
sbb
lock
or
adc
vunpckhpd
push
loopne
call
movsl
jno
inc
cwtl
add
xor
lea
push
mov
jge
mov
dec
insb
lock
les
xchg
lock
push
hlt
enter
and
xchg
mov
push
mov
movsb
push
push
call
loop
pop
daa
push
mov
xorb
xchg
lods
inc
sub
sbb
fwait
or
call
pop
xchg
push
cld
dec
cmpsl
mov
pop
cld
add
call
cmp
and
pop
jmp
mov
mov
int
sbb
sti
or
pusha
repnz
xor
mov
sbb
adc
lret
cmp
push
pop
mov
sbb
or
subb
jle
xor
sub
in
sbbl
sbb
push
adc
and
sub
mov
les
xchg
adc
sbb
push
dec
push
das
into
stos
adc
test
jmp
lcall
iret
adc
int3
pop
mov
fcom
inc
lea
cli
call
jge
push
cmc
dec
adc
jl
add
fs
mov
dec
fstpt
dec
or
insb
cmp
inc
lea
cmp
jne
add
inc
pop
ljmp
add
jge
add
pop
xor
call
cltd
shrl
mov
shll
fcom
push
subb
clc
lods
xor
sbb
jg
mov
mov
movsb
std
add
mov
fadds
das
jge
dec
and
sub
das
lods
xchg
mov
aaa
lds
sub
and
pop
dec
cmpsb
movsl
rcrl
sub
xchg
cld
dec
or
movl
mov
or
rsm
ljmp
inc
cmpsl
jb
sbb
enter
int
adc
mov
dec
pop
sahf
push
sbb
mull
sub
xchg
pop
dec
call
or
data16
dec
pop
xchg
or
popa
aam
sub
lret
push
or
and
pop
es
and
pop
bound
pop
ja
sti
scas
pop
cmp
adc
and
and
int3
scas
xor
xchg
sbb
add
mov
dec
sbb
fildl
and
js
int3
mov
stos
lods
rcll
daa
xlat
outsl
dec
mov
jno
sbb
pop
mov
adc
adc
lret
or
xchg
cmp
mov
repnz
cmp
sbb
adc
int
nop
pop
int3
sub
sbb
jp
xchg
es
xor
movsb
or
xchg
cltd
push
out
movsl
pop
std
pop
scas
dec
loop
adc
cmc
test
xchg
sbb
stos
in
dec
mov
xor
and
xchg
mov
mov
add
cs
and
xor
mov
call
int3
dec
je
and
xchg
rclb
push
mov
or
test
add
and
sub
shlb
push
clc
push
push
ret
push
add
inc
or
mov
sbb
xchg
and
clc
gs
call
sbb
call
lea
rorb
xchg
mov
xor
aam
adc
lret
mov
adc
push
outsl
ret
jg
fistpll
push
and
cmp
pop
call
cmp
out
cmpl
push
icebp
loope
and
in
mov
inc
and
sub
xor
and
or
out
push
enter
fistpl
mov
adc
sbb
out
xchg
and
pusha
fs
test
pop
jmp
adc
sub
jno
mov
loop
xchg
push
fistps
fs
and
leave
mov
shll
xchg
imul
adc
or
add
test
pop
xchg
add
cmpb
call
in
push
decb
lcall
jl
data16
sbb
mov
rclb
scas
xor
sbb
call
add
clc
fldl
push
add
jb
cmpw
add
lods
adc
push
add
jae
ret
in
push
cmp
pusha
push
mov
outsb
inc
xor
push
in
and
jmp
mov
xor
add
cld
push
scas
or
jbe
xor
mov
dec
daa
pop
pop
xchg
lods
push
ret
std
xlat
xchg
jbe
xchg
pop
sbb
adc
sbb
push
fs
inc
and
adc
inc
push
das
xor
inc
out
jb
sbb
and
imul
mov
add
lods
loop
sub
sub
adc
test
sub
adc
pop
cmp
cwtl
jae
xor
xchg
mov
inc
nop
loope
xchg
xchg
sbb
add
lock
jg
inc
rcll
jmp
push
mov
jo
jne
nop
int
pusha
xor
sarb
enter
test
and
add
push
pop
dec
int3
repz
inc
pop
es
hlt
push
dec
lret
adc
popf
or
cmp
lea
aaa
pop
sbb
int3
and
inc
add
cwtl
cmp
jb
lret
dec
das
imul
pop
adc
fwait
and
andl
pusha
adc
jl
add
call
andl
out
and
jmp
lods
xchg
add
rolb
push
push
mov
cmc
fcmovb
repnz
pop
dec
lret
lock
pop
std
mov
lahf
pop
fs
jne
ds
lcall
push
mov
pushf
adc
dec
cmp
xchg
hlt
jae
cmp
xchg
je
push
xchg
adc
or
push
add
dec
in
outsb
js
push
cld
and
cmp
subl
xchg
xlat
mov
imul
gs
xchg
dec
push
xchg
inc
xchg
sbb
xchg
popfw
push
dec
out
push
addr16
xchg
xchg
xor
pop
lds
add
mov
pop
ds
mov
pop
outsb
cmp
andb
neg
xchg
jp
clc
push
clc
sbb
mov
mov
sbb
and
cmp
add
inc
loop
sti
ret
inc
add
or
or
mov
mov
push
lea
xchg
cli
dec
rorl
adc
sub
adc
sub
mov
adc
mov
sbb
jnp
or
movsl
mov
push
push
mov
push
push
test
push
mov
sbb
lock
cwtl
and
inc
call
xchg
movsb
imul
data16
mov
inc
push
pop
test
call
sub
hlt
mov
lods
es
cwtl
popf
inc
xor
add
cmp
je
mov
test
mov
loop
int3
jns
jne
ucomiss
and
and
dec
loope
jle
push
or
test
sub
xor
iret
repnz
je
movsl
incl
fcomps
push
jmp
xchg
sbb
inc
push
nop
mov
pop
adcl
sub
push
loop
jl
in
sbb
mov
jp
jle
testb
hlt
sub
sub
add
cmp
jl
jecxz
loopne
pop
ret
mov
xor
clc
jno
adc
psubsb
push
dec
push
cmp
call
scas
push
add
in
popf
orl
or
fcomps
rolb
add
fidivrl
sahf
int3
cmp
rorb
rclb
into
inc
lock
mov
xchg
or
or
daa
push
and
lahf
gs
adc
movl
popa
xchg
pop
and
enter
fisttps
leave
sub
xor
jge
jle
pop
in
jg
inc
inc
or
push
mov
cli
ss
add
inc
xchg
push
aad
daa
test
sahf
repz
and
inc
xorl
ret
inc
jmp
and
push
sbb
mov
pop
jo
jo
sbb
lods
cmp
lock
adc
lock
cmp
addb
mov
scas
inc
push
mov
push
test
push
mov
mov
mov
push
pushl
dec
pop
cmpsb
test
clc
popa
aaa
push
and
mov
mov
pop
pop
xchg
pushf
adc
jp
jge
or
in
jne
sub
or
dec
popf
fadds
inc
bound
pop
adc
push
imul
inc
inc
stc
das
adc
aad
or
mov
jo
lods
pop
and
or
sub
sbb
jne
xchg
div
jmp
pop
adc
pusha
enter
clc
mov
pusha
jo
test
cmp
add
jb
or
add
mov
inc
lods
test
inc
xlat
jne
cmpsb
jmp
lret
xlat
and
ss
mov
adc
mov
xor
and
imul
adc
lods
jmp
rolb
cmpb
cmc
dec
mov
adc
ret
sbb
mov
test
push
push
mov
lea
mov
cmp
push
xchg
sbb
xchg
push
inc
icebp
push
sbb
scas
jle
scas
xchg
lahf
iret
and
negb
shrb
mov
mov
xor
test
push
andl
dec
adc
add
cmp
xlat
sub
adc
test
or
or
mov
push
and
pop
das
adc
pusha
cmp
call
xor
xor
inc
push
sub
mov
call
clc
pop
jb
sub
clc
lea
mov
dec
pop
bound
inc
out
jmp
and
mov
pop
lea
adc
adc
lcall
sub
mov
inc
lods
dec
xor
sbb
test
adc
loop
daa
jmp
cmp
mov
mov
push
inc
jp
lea
push
or
mov
inc
xor
dec
in
mov
popf
mov
adc
and
cltd
shlb
jle
in
call
adc
testl
call
pop
or
mov
adc
adc
dec
sti
int3
and
cmp
dec
jno
inc
call
shr
inc
lods
stc
test
movsb
dec
xor
pop
xchg
adc
stos
outsl
js
and
popf
pop
loope
jg
fdivp
sbb
repnz
dec
inc
dec
xor
xor
and
jg
lds
enter
mov
dec
dec
int3
mov
dec
push
inc
jmp
jmp
sbb
ret
adc
push
xchg
jnp
sub
push
pop
jp
cmpsb
and
mov
push
scas
mulb
movsb
xchg
push
sbb
and
push
shll
lock
inc
and
dec
clc
mov
pop
or
les
xchg
in
push
xchg
pop
stc
or
add
xchg
jmp
push
xchg
inc
inc
hlt
sbb
push
pop
lcall
das
dec
push
mov
push
xchg
mov
jno
push
jbe
jle
mov
cmp
pusha
subb
xor
and
cmc
adc
rcrb
and
dec
xor
inc
movb
addl
cs
aad
negl
and
pop
inc
into
dec
add
adc
nop
pop
sub
sahf
mov
add
call
jnp
adc
push
in
mov
mov
loopne
adc
or
cs
push
jmp
icebp
lods
inc
fwait
sbb
fiaddl
sbb
and
cmp
cmp
jnp
mov
data16
pop
or
push
sbb
cltd
lahf
xchg
add
dec
insl
ja
cmpsl
leave
les
mov
or
add
lea
sar
xchg
lock
lds
jmp
scas
popa
lret
jmp
cmp
sub
lods
jno
leave
shll
xor
xchg
sub
mov
leave
cmp
inc
cmp
testl
mov
xchg
gs
adc
insb
pusha
aam
jno
cmpsl
jmp
lret
clc
int
adc
sub
pop
push
inc
cltd
cs
lea
inc
leave
adc
out
sarb
xlat
or
xchg
test
repnz
bound
stc
mov
xchg
popa
ret
push
cmp
lock
pop
cltd
push
add
mov
push
pop
pop
cld
jmp
add
push
aas
inc
push
inc
cs
and
sub
data16
bound
mov
dec
js
sbb
test
adc
mov
cmp
push
xor
test
add
xchg
adc
pop
daa
pop
pop
gs
sub
sub
pop
xor
mov
cltd
xor
adc
lahf
inc
xchg
push
test
add
jns
imul
mov
sbb
mov
pcmpeqb
push
xor
inc
mov
add
sbb
xor
pop
xchg
sub
call
cmp
fisubl
adc
pop
daa
mov
adc
cmp
das
repz
jne
hlt
inc
push
xchg
inc
ret
or
dec
movsl
cwtl
sub
mov
jns
mov
push
mov
sub
aam
mov
rorl
push
push
sti
or
mov
sbb
and
push
lret
test
sbb
inc
mov
jno
dec
shl
mov
or
adc
xor
in
int
mov
jno
cmp
xchg
pop
push
fwait
sbb
dec
repnz
add
ja
sub
push
movsl
push
test
adc
pop
lock
mov
clc
fwait
mov
lret
mul
adc
jo
inc
push
add
xchg
pop
loope
xchg
cmp
pushf
imul
push
ja
or
adc
xchg
push
test
mov
inc
loope
aas
adc
pop
mov
dec
out
or
xchg
movsl
jno
adc
xor
push
or
cmpsb
fadds
sub
pop
dec
loop
pop
ret
dec
dec
fwait
add
push
mov
jns
pop
and
sub
aas
fcomps
fstl
adc
adcl
cmp
pop
push
mov
sbbb
in
inc
jb
jmp
or
mov
xchg
call
inc
mov
fdivrs
rcll
inc
or
int3
daa
xor
mov
test
pop
sbb
sbb
mov
test
mov
pop
fcomi
adc
sbb
dec
and
cwtl
push
push
xor
jmp
pushf
dec
lret
inc
cmp
xchg
mov
insb
xchg
pop
shlb
adc
or
xor
loope
xor
sbb
cld
and
sub
jae
jmp
imul
push
and
unpckhps
sbb
mov
push
inc
imul
inc
or
dec
mov
inc
lods
sub
adcb
mov
sbb
sti
jmp
aam
xchg
inc
cmpsb
sub
or
insb
push
jp
out
and
adc
jge
loope
mov
add
fdivrs
push
cld
or
mov
xchg
es
in
xchg
jl
daa
mov
xchg
jb
push
jle
leave
rolb
roll
call
add
cmpb
jne
in
das
push
or
xchg
or
dec
ljmp
and
pusha
movsl
pop
ljmp
sub
rcrb
out
mov
sbb
call
or
je
inc
imulb
pop
add
xchg
or
rsm
testl
push
and
push
or
in
or
cmpsb
push
lds
push
and
scas
fstps
push
cmp
pop
call
and
lea
jecxz
inc
adc
mov
add
dec
mov
pop
inc
out
es
push
or
movsl
testb
pop
jecxz
les
test
mov
pop
and
add
or
fsubl
cltd
call
xor
inc
adc
sbb
scas
mov
imul
lea
add
add
enter
xchg
and
jne
jns
pusha
enter
clc
ljmp
imull
fs
pop
test
aaa
push
lret
push
pop
addr16
cmp
scas
mov
xchg
and
and
adc
add
movl
xor
sbb
adc
clc
jmp
ret
add
repz
cltd
jge
cmp
push
adc
cmp
sbb
and
and
or
mov
rorl
jmp
add
and
fs
nop
inc
sbb
adc
xchg
mov
loope
mov
cltd
lods
enter
stc
mov
mov
adc
int
stos
xor
sub
adc
movsb
sub
pop
inc
push
push
pop
push
flds
ds
adc
jmp
mov
mov
movsb
inc
sub
add
shl
icebp
cmp
rorb
xchg
mov
cld
push
mov
push
lods
lock
divl
popa
jmp
mulb
cmp
cld
clc
inc
pop
cmp
mov
xchg
jmp
popa
jno
rsqrtps
ja
push
aad
imul
mov
push
hlt
inc
adc
jp
jmp
cmp
pop
or
dec
jae
mov
add
icebp
push
ss
and
mov
pop
push
or
cltd
das
push
aas
bound
popf
jle
jno
ret
add
and
loop
daa
addl
xor
jl
jno
adc
push
loope
mov
adc
std
adc
mov
sbb
dec
cmove
scas
xor
adcb
lahf
pop
fmuls
sbb
sbb
sbb
jle
mov
and
or
pop
inc
enter
add
xor
int3
dec
popa
pop
scas
andb
sub
jo
jmp
ja
inc
int
mov
les
fnstcw
dec
adc
add
add
push
repz
push
mov
dec
jmp
or
adc
jae
sub
lahf
and
pop
lcall
jmp
mov
mov
dec
inc
sbb
psubsw
insl
mov
test
sub
cli
pop
cmpsb
movups
pop
nop
test
cmp
mov
push
mov
sbb
cli
sbb
lods
xor
scas
fwait
pop
adc
lods
lock
ds
dec
mov
dec
mov
nop
and
lods
ficomps
mov
mov
shrb
jmp
cli
lret
aam
jno
call
mov
cmp
pushf
mov
aaa
movsl
jne
mov
jl
lret
dec
jecxz
rcll
sub
push
xchg
in
adc
adc
or
mov
mov
adc
adc
or
push
or
leave
jb
fisubrs
fnsave
sti
test
std
sti
arpl
sub
push
repz
adc
insb
into
pop
xchg
dec
in
push
test
and
lds
je
jns
insb
faddp
and
pop
psubq
push
dec
jp
xchg
mov
sub
cld
push
lea
xchg
movsb
cmp
adc
sub
push
adc
xor
or
call
mov
js
mov
test
adc
sbb
not
adc
mov
call
or
adc
test
adc
xor
push
or
sarb
sub
and
cmp
enter
push
adc
add
and
xor
mov
lods
xor
adc
call
or
jne
andb
jno
cmp
jnp
inc
push
imul
or
pop
pop
push
pop
mov
test
sub
clc
xor
push
bound
stc
dec
xchg
addr16
push
ja
loope
and
adc
add
popf
or
push
add
add
in
pop
xchg
pushf
cli
shr
adcl
adc
pop
push
subl
adc
jge
mov
decb
sbb
lcall
call
cmp
inc
or
repnz
jge
scas
mov
outsb
cli
adc
inc
push
cmp
mov
daa
movsl
xor
scas
lock
xchg
jae
daa
fsubr
pop
jmp
push
leave
imul
xchg
and
cmp
ret
rcll
stos
lret
loopne
pop
add
rorl
sbbb
cmp
push
add
xchg
lret
adc
daa
inc
pop
int3
inc
and
repnz
call
pop
out
push
or
dec
push
sub
std
int
xor
xor
adc
outsl
nop
mov
push
xor
jl
imul
cwtl
mov
sbb
sbb
rorl
leave
push
sbb
mov
dec
or
les
sbb
add
stos
sub
mov
test
imul
and
mov
or
call
inc
push
push
push
dec
divl
ret
mov
xor
lock
repz
gs
rcrb
add
push
inc
inc
pinsrw
jg
mov
inc
jmp
pop
cmp
out
adc
shlb
cmp
or
jle
inc
jne
test
test
add
hlt
mov
mov
mul
push
mov
notb
push
dec
adc
cld
dec
std
out
jne
and
push
dec
inc
sub
inc
and
orb
push
adc
dec
inc
shl
add
pop
not
adc
aam
ss
dec
in
adc
andl
sti
je
clc
add
push
mov
push
dec
push
cmpsl
inc
and
cld
test
sar
and
or
das
mov
push
xor
sub
push
push
aad
iret
pop
add
stc
gs
mov
repz
ret
or
sbb
mov
mov
or
inc
outsb
and
fs
fcomps
xchg
xchg
sub
push
daa
mov
sbb
sbb
push
jge
cmp
insb
or
jae
sub
test
fadds
lds
mov
adc
mov
or
jb
adc
sub
mov
push
pusha
sbb
sub
xor
sub
push
in
mov
es
cmp
inc
sub
int3
adc
adc
enter
xor
jo
mov
push
cmp
and
nop
fs
jge
pop
lock
ds
cmp
inc
adc
jo
cmp
pop
mov
mov
sub
jo
xor
pusha
xor
xor
dec
jp
test
and
push
dec
or
orb
and
or
in
xor
mov
mov
sub
inc
sbb
fcoms
or
sbb
clc
insl
adc
outsb
xchg
es
loop
outsl
and
in
bound
loop
inc
xor
enter
movsl
push
dec
and
sbb
out
dec
test
inc
enter
inc
mov
xchg
jle
push
push
scas
and
inc
jge
dec
or
and
add
sub
dec
out
js
mov
mov
mov
mov
repz
scas
shl
insb
cltd
filds
dec
xchg
mov
cmp
adc
push
mov
nop
xor
or
out
mov
inc
lods
and
jo
sbbb
outsb
xchg
and
adc
xor
mov
lods
adc
mov
cld
or
adc
push
push
loope
xchg
adc
mov
sbb
inc
outsb
mov
sbb
push
movsl
add
loopne
cmpsb
sub
or
xchg
and
pusha
adc
imul
or
sbb
sbb
xchg
or
or
enter
sbb
and
adc
movsb
outsb
or
xchg
and
xor
xor
addb
or
add
dec
sbb
bound
nop
sbb
cld
and
dec
mov
or
and
jl
adc
inc
in
and
xchg
and
add
pop
nop
lahf
and
add
and
nop
add
stc
adc
cld
push
sbb
sbb
push
or
sbb
push
and
sbb
dec
mov
sbb
movsl
fs
cltd
sbb
lea
movsb
insb
inc
je
dec
adc
sbb
int3
or
orb
addl
push
adcl
shll
cld
xchg
dec
iret
or
jl
mov
out
mov
dec
and
adc
lret
hlt
mov
mov
outsb
sub
mov
outsl
fs
in
cwtl
test
push
or
js
outsb
and
xchg
jo
sbb
sbbb
inc
xor
inc
push
es
scas
adc
inc
insb
xchg
adc
lret
mov
jo
orb
xor
push
mov
dec
sbb
lods
das
sub
dec
imul
in
dec
sbb
aam
inc
hlt
sub
or
sub
ret
adc
push
mov
xchg
nop
pushf
adc
or
inc
call
outsl
fs
xor
dec
xchg
jg
or
xchg
rorb
aas
jg
outsb
js
mov
and
call
mov
arpl
arpl
les
pop
adc
pop
push
cld
lret
ficoms
cmc
or
aam
dec
test
xchg
mov
push
in
js
adc
xchg
dec
adc
insb
push
mov
ds
repz
and
push
or
shlb
test
or
or
and
jno
or
test
and
adc
add
fmull
adc
test
push
arpl
aam
push
movsb
flds
or
sub
inc
movsb
adc
outsb
enter
jae
movsb
les
cmp
lock
sub
xor
sbb
test
mov
test
xchg
enter
ja
mov
and
fsub
push
pop
inc
pop
sti
sub
or
dec
or
xor
loope
je
stc
js
pop
in
dec
ret
inc
daa
iret
sub
movsb
adc
loop
or
pop
jmp
sti
and
xor
push
inc
sub
push
xchg
mov
ljmp
cmp
and
inc
inc
jb
sbb
and
out
mov
dec
and
add
lret
adc
cmp
cmp
pop
and
and
loop
sbb
lock
push
and
test
insb
fucom
les
mov
sbb
xchg
test
push
inc
push
mov
cmp
sbb
test
xchg
push
enter
in
mov
and
adc
enter
inc
cmp
dec
pop
adc
adc
push
lock
or
pop
jecxz
enter
jmp
xchg
jbe
xchg
cmp
adc
mov
movsl
mov
repnz
scas
jo
inc
sub
pop
push
mov
ss
adc
push
andb
call
mov
xor
in
or
lcall
push
xor
sti
xchg
test
xor
out
pop
mov
arpl
cmpl
inc
outsb
and
rcr
or
rorl
imul
cli
ret
jl
lahf
xlat
leave
add
sub
mov
push
cmp
je
or
or
rolb
enter
xor
inc
jle
jle
dec
xor
xchg
dec
ljmp
cmp
or
cmp
inc
cmp
jl
cmp
xor
jae
jle
inc
inc
cmp
aad
cltd
xchg
jno
scas
push
aad
or
out
adc
mov
rep
lea
cmpl
cmp
mov
inc
scas
adc
lock
cmp
jle
pop
or
inc
cmp
ss
add
pop
jl
ljmp
or
or
adc
cld
mov
jmp
nop
push
rcll
std
mov
push
adc
leave
sbb
dec
mov
jmp
pop
rcrl
push
fcomps
or
or
scas
rorb
push
or
clc
push
jg
push
test
or
sub
movd
add
add
jg
mov
sub
dec
adc
cmc
xchg
jl
dec
pusha
dec
orl
xor
jg
mov
add
imull
jle
add
push
lea
stos
int3
push
mov
pop
push
fldcw
adc
push
inc
inc
mov
pop
mov
or
das
or
dec
and
dec
jecxz
sbb
sub
sbb
or
jl
das
inc
push
push
mov
push
or
sbb
pop
jmp
outsl
sbb
lret
daa
sarb
sahf
fs
xchg
push
pop
out
adc
mov
dec
sbb
scas
mov
pop
mov
mov
mov
mov
push
push
mov
and
call
xor
mov
push
addb
hlt
push
xchg
push
shr
xchg
adc
ja
pop
gs
push
enter
push
insb
test
inc
leave
lea
test
cmp
mov
pop
inc
or
sub
das
fisubrs
push
das
jae
les
or
mov
xor
and
sub
lds
cwtl
jae
icebp
xchg
repz
dec
mov
sbb
sub
jg
mov
shrl
cmc
mov
ss
jmp
out
push
int3
int3
mov
dec
ljmp
push
push
roll
or
jno
or
jmp
je
and
jne
scas
or
pushf
aad
in
sub
lret
push
and
jb
push
mov
pop
jnp
adc
jns
movsl
fisubrs
jp
dec
adc
xchg
push
and
mov
adc
loopne
xchg
clc
repz
sbb
push
dec
fstps
leave
and
xor
lcall
push
and
dec
out
adc
aas
jge
mov
adc
outsl
icebp
cs
mov
or
adc
push
push
add
or
movsb
adc
aam
and
mov
data16
mov
mov
rclb
std
sub
sahf
aas
dec
or
add
daa
jg
scas
adc
mov
nop
cmpsb
push
mov
daa
push
mov
rorb
jae
xchg
mov
clc
jb
mov
nop
push
in
hlt
mov
xlat
in
clc
add
jne
push
jp
aam
test
in
add
dec
data16
pop
inc
adc
leave
data16
xor
cmp
jmp
push
mov
lods
lock
and
add
inc
push
rcr
dec
call
xor
mov
or
int
push
jmp
cmc
add
and
adc
loop
push
sbb
mov
inc
xor
scas
mov
adc
pop
cli
je
push
cmp
f2xm1
pushf
xlat
cmpsb
aam
add
shlb
jmp
fisubrs
mov
sbb
xor
fistl
lea
out
dec
sub
xchg
mov
not
push
dec
aaa
je
out
adc
int3
and
xchg
and
xor
adc
pop
pop
mov
cmp
xor
rorb
shlb
test
cmp
mov
push
and
or
std
pop
nop
in
inc
and
sar
sub
dec
loopne
cmpsl
test
and
push
adc
mov
in
std
popf
punpckhbw
hlt
mov
cmpsb
daa
sub
adc
xor
cltd
cs
jle
inc
movsb
inc
or
out
sub
cmp
shrb
push
sub
mov
adc
das
jp
cmp
mov
cld
adc
int
popa
outsb
cmpsl
mov
add
addr16
aas
xchg
jne
mov
push
adc
sub
loopne
call
jecxz
pushf
in
cmp
jmp
push
ja
xchg
pop
testl
mov
fwait
adc
fcom
dec
shll
push
enter
out
pop
pop
std
jnp
mov
out
inc
in
test
mov
iret
adc
push
sbb
loop
inc
int3
sub
xchg
xchg
pop
push
pop
test
cmp
jecxz
mov
jmp
lea
or
or
mov
xchg
xor
mov
movsl
push
adc
cmp
jp
popa
sub
adc
je
fstl
pop
push
jmp
mov
dec
sbb
sub
add
sbb
outsb
loopne
pop
and
or
cs
sbb
shrb
aas
jo
repz
pop
mov
fimuls
jne
in
cmpl
sub
enter
inc
mov
dec
dec
mov
clc
cwtl
test
sub
add
push
push
jg
jmp
popf
jne
adc
gs
int3
sbb
push
adc
pop
pop
inc
pop
adc
rclb
insb
adc
pop
pop
cmp
cmpsl
insb
xor
add
and
cmp
sbb
xchg
cmp
lds
ja
mov
ljmp
and
sbb
adc
and
or
aaa
enter
xlat
or
pushf
inc
int
test
ret
or
inc
mov
test
ja
movsl
mov
add
and
adc
mov
and
nop
xchg
mov
into
daa
outsl
in
daa
sarb
insl
add
ficoms
cli
pusha
add
mov
jge
inc
xchg
and
push
mov
push
addb
comiss
mov
and
cmp
test
pop
adc
mov
pop
lds
pop
mov
mov
mov
test
mov
test
inc
jb
aaa
sub
ret
call
sbb
or
ljmpw
or
icebp
sbb
add
add
add
add
push
or
mov
sti
push
cmpsb
and
jbe
es
iret
ja
push
lcall
ficoms
jns
sub
xchg
enter
or
daa
jle
dec
mov
hlt
dec
inc
daa
xor
adc
outsl
xor
adc
cmp
test
pop
int3
mov
js
mov
cmp
fs
cmp
xor
sub
push
jg
iret
mov
jmp
jno
inc
testl
shlb
xor
hlt
xor
xor
hlt
xor
js
mov
jp
rcr
test
adc
mov
dec
movsb
es
leave
cmp
stos
xor
je
fwait
pusha
adc
fcmovu
xchg
inc
add
lock
jl
clc
push
mov
adc
gs
cmpl
ret
sbb
mov
mov
std
push
jg
dec
pop
pop
mov
add
loopne
add
push
push
call
jnp
sub
pop
mov
add
and
test
jns
push
xlat
or
js
stos
cmpsb
xchg
or
mov
inc
sbb
lods
nop
and
push
cmp
stos
pop
mov
mov
sub
pop
pop
ret
push
jns
add
xlat
push
pop
push
mov
fsubrl
push
pop
mov
sub
jl
xlat
testb
mov
jne
orb
lods
push
inc
out
pop
sbb
jb
pushl
xor
orl
xchg
pop
xchg
adc
loopne
rol
loope
pop
adc
cmpb
enter
nop
inc
call
adc
andl
call
call
sub
mov
and
aam
xchg
pop
and
adc
test
push
or
dec
lea
dec
sub
jecxz
mov
inc
aas
add
and
pop
pop
xchg
adc
pop
les
jne
mov
mov
cltd
adc
cmp
or
rclb
xor
adc
add
mov
dec
gs
movsb
mov
fiaddl
mov
adc
fcoms
in
cs
cld
divb
dec
xor
mov
nop
or
fiadds
cs
pop
pop
xor
std
adc
or
pushf
aaa
sub
sbb
xlat
andl
inc
mov
inc
jb
bound
lea
lret
xchg
ret
out
push
lea
sbb
leave
jns
pop
in
popw
push
pop
enter
test
sbbl
adc
jbe
ljmp
push
stos
dec
cli
xor
arpl
loop
xlat
mov
jle
dec
hlt
fmuls
fistpll
xchg
mov
inc
sub
je
popf
jb
clc
cmp
cmpsl
dec
inc
add
int3
and
out
arpl
adc
cmp
dec
xchg
daa
es
jp
test
add
and
ja
or
xor
leave
pop
push
ret
xchg
jb
ljmp
push
mov
mov
dec
and
imul
aad
sub
and
leave
outsb
xor
and
es
add
fadd
add
fldenv
in
sub
lods
es
cld
fisubl
inc
jmp
mov
hlt
in
adc
imul
cmp
adc
std
jo
pop
jle
pop
adc
push
xor
cmp
add
adcb
inc
pushl
push
jno
mov
rolb
jl
mov
inc
mov
sbb
popf
mov
adc
jo
xor
pop
sbb
adc
mov
or
inc
mov
adc
cmp
and
outsb
fcoml
popa
sub
xchg
push
pop
mov
mov
and
cwtl
les
xchg
test
aam
jns
sbb
inc
jnp
test
aam
int3
inc
sbb
loopne
and
shl
arpl
and
rorb
push
mov
cmp
sub
inc
movsb
and
mov
sbb
xor
mov
shll
and
jl
pop
push
inc
xchg
enter
xor
rcrb
jge
adc
pop
gs
sub
push
xchg
cmp
inc
mov
and
inc
cmp
sbb
test
sarb
dec
mov
and
push
rorb
nop
push
test
xchg
and
iret
pop
and
push
and
jmp
cltd
outsl
inc
aam
sub
enter
test
and
cli
inc
xchg
je
mov
mull
sbb
adc
inc
call
call
into
leave
xor
cmp
jl
adc
popa
jg
shrl
out
jp
loopne
in
dec
shr
daa
xor
cmp
push
mov
cmp
or
fisubs
ret
xor
adc
mov
out
fcmovnu
and
jbe
push
dec
sub
mov
mov
into
xor
mov
inc
dec
push
hlt
pop
add
push
inc
add
pop
adc
ret
jmp
xor
jae
inc
sbb
sbb
or
xor
loope,pn
sub
enter
pop
cmp
scas
lret
inc
je
cmp
ret
rolb
and
pop
or
les
jnp
ja
je
push
add
or
pop
xor
and
xor
leave
pop
and
jg
frstor
pushf
test
shll
je
leave
or
inc
mov
mov
inc
stos
push
add
jl
sub
scas
sbb
sbb
ret
push
pop
mov
jle
test
mov
mov
jo
push
lds
daa
sub
dec
test
jne
push
les
out
adc
jge
enter
sub
cmp
pop
mov
or
roll
sbb
pop
adc
dec
and
xchg
data16
stc
ret
mov
sub
and
dec
push
mov
imul
xchg
in
mov
or
pop
clc
decb
loopne
adc
and
stos
popa
cmp
cmp
adc
sbb
push
dec
inc
pop
mov
mov
daa
lock
mov
or
sub
clc
test
cltd
xchg
sub
pop
push
sub
push
pop
mov
push
mov
icebp
mov
rol
aad
cs
mov
dec
push
scas
push
rcr
or
rolb
lcall
xor
or
scas
pop
fs
test
cmp
in
xor
call
insb
or
hlt
fs
movsb
pop
clc
in
lret
out
es
mov
lds
sbb
dec
test
in
pop
lods
stos
cltd
push
xchg
mov
and
sti
in
adc
fbld
popf
and
adc
sti
pusha
push
ds
pop
cmpsl
mov
push
xor
push
add
fiaddl
imul
addb
cmpsb
pop
cmpsl
pop
pop
pop
cld
sahf
pop
leave
or
into
and
cld
clc
bound
and
cmp
sarb
stc
fcoml
mull
adc
inc
sbb
mov
cli
icebp
jle
xor
call
cwtl
ret
add
or
dec
push
dec
and
sbb
rorb
mov
fists
jns
loope
mov
incb
xor
mov
inc
je
ret
adc
test
mov
sbb
add
call
test
and
jbe
mov
jecxz
xchg
fsts
jbe
cmpl
je
inc
rcrb
pop
rorl
fs
sbb
sub
pop
mov
call
daa
dec
outsb
sbb
dec
stc
jl
add
mov
aam
dec
jnp
dec
sub
jmp
test
push
mov
cs
lods
xchg
ss
fs
pop
in
leave
cmpsb
pusha
fmull
dec
leave
or
add
shrb
mov
aaa
movsl
jle
push
xor
inc
adc
add
call
mov
push
mov
push
push
sbbl
add
xchg
and
lret
pop
repz
add
in
gs
test
sub
sub
push
cmp
cmp
je
xchg
or
jne
mull
dec
lock
cmp
iret
clc
jbe
fbld
push
mov
std
subb
rcll
and
int
mov
mov
lea
fcoms
sub
dec
or
and
cmp
ja
lock
sbb
jb
or
cld
je
lds
enter
jecxz
lea
pop
or
and
je
mov
push
jl
jns
in
dec
sarb
std
ja
or
rcrl
jne
outsl
mov
fisubrl
sbb
hlt
pop
cmc
adc
push
add
iret
mov
push
or
mov
pop
std
lods
rclb
mov
sub
mov
and
mov
jg
sti
pop
push
dec
inc
aad
dec
test
in
adc
aam
xchg
repnz
adc
ret
orb
and
addr16
push
in
stos
arpl
adc
pop
into
adc
clc
sbb
mov
adc
imul
gs
mov
in
cli
mov
mov
fmull
add
mov
mov
mov
mov
stc
or
hlt
adc
fwait
dec
data16
sbb
and
mov
mov
rorb
xchg
cmp
loopne
and
mov
jns
pop
ret
sbb
fnstenv
xchg
adc
inc
and
mov
xchg
lock
test
push
cmp
jecxz
mov
jns
jp
ret
dec
adc
jne
xor
push
ret
clc
mov
jl
cmp
cmp
stc
out
clc
mov
in
popf
xchg
mov
or
cmp
insl
xor
and
loope
pop
dec
pop
mov
daa
mov
fisubs
or
jmp
or
jnp
pop
or
shrb
adc
push
leave
push
gs
add
clc
ljmp
movsl
clc
cmpsb
fstps
fisubl
in
jp
testb
push
in
and
aaa
inc
popf
test
push
aam
test
push
xor
jnp
fs
xor
arpl
jle
mov
enter
popf
sub
cmp
adc
or
pusha
mov
pop
aaa
xchg
cmpsb
push
jb
cmpl
daa
dec
cmp
sub
lea
popf
mov
mov
cmp
push
pop
mov
popa
pop
aam
or
sti
mov
xchg
add
lret
ja
lods
enter
pop
mov
mov
das
outsl
push
inc
rolb
xchg
cmp
sti
enter
mov
jne
xorl
and
outsl
push
xor
add
in
xchg
sbb
mov
xchg
cmc
sub
ret
push
sbb
pop
add
loope
jo
mov
xor
xor
clc
clc
aam
test
pop
adc
xor
adc
sub
iret
je
sub
insb
add
adc
and
outsb
jmp
movsb
mov
inc
fadds
adc
mov
or
fisttpll
movsb
negb
push
cmpsb
or
movb
lock
insb
sub
int3
push
movsb
pop
lahf
add
mov
jbe,pt
aaa
lea
roll
and
cmp
add
jmp
push
rolb
pop
xor
xchg
pop
and
outsb
xchg
pushf
int3
mov
leave
mov
sub
jl
int3
enter
push
add
jmp
insl
outsb
dec
mull
dec
mov
in
loope
jle
jle
adc
cmp
and
pop
jns
xor
mov
cs
jns
loope
sub
ret
clc
stc
add
push
jle
lea
push
shll
fdivp
or
jno
je
sysret
mov
add
inc
adc
negb
jmp
and
dec
addr16
rcl
lret
inc
scas
nop
pop
shr
jge
pop
ja
call
shlb
sbbl
pop
cld
loopne
mov
push
push
adc
aam
lds
out
and
ss
cmp
jg
mov
and
push
setb
jge
fldcw
and
orb
imul
fidivrs
mov
movsb
in
mov
xor
push
push
fldenv
fwait
sbb
mov
push
lret
or
sub
xor
jne
pop
popf
popa
sahf
pushf
dec
test
jle
jmp
mov
jne
test
bound
lret
inc
or
outsb
les
aam
mov
add
push
jno
aam
dec
mov
xor
cmpsl
xchg
push
jno
test
adc
out
ret
bound
test
outsb
nop
test
das
lret
cmp
xlat
call
inc
pop
fs
stos
jge
lahf
rclb
rcll
pop
mov
mov
hlt
les
pop
ljmp
in
leave
arpl
into
sbb
ja
lcall
and
fistpl
lret
mov
hlt
lods
in
ret
jno
or
inc
leave
test
adc
jmp
push
movsb
test
pop
outsl
nop
lret
push
lock
imul
dec
xchg
sub
aad
push
jae
mov
adc
enter
ret
into
or
pop
push
push
and
push
push
push
push
mov
pop
xor
scas
push
dec
push
mov
add
jle
loope
push
cs
xchg
mov
or
test
test
jb
sbb
push
xorb
mov
and
test
out
sub
mov
imul
or
mov
fwait
in
push
jno
cwtl
xchg
adcl
scas
sbb
sub
adc
cmpl
cs
mov
addl
mov
mov
cmp
sar
mov
jecxz
rol
jmp
rolb
mov
into
mov
stos
divl
dec
mov
jo
loopne
call
mov
dec
insl
inc
call
sarl
imul
clc
push
cmpsb
jmp
push
pop
mov
cld
xchg
les
mov
outsb
rorl
inc
cmp
sarb
outsb
aad
js
and
jbe
lea
and
loop
fimuls
add
or
mov
pop
stc
mov
loope
xchg
cs
adc
push
mov
pop
xor
mov
mov
xchg
mov
movl
xchg
mov
jge
and
fsubp
mov
sbb
test
fidivrl
data16
loopne
lds
test
mov
xchg
pushf
fcoml
adc
mov
mov
push
cmp
out
pushf
jb
rclb
stc
call
mov
loop
jmp
ret
inc
insb
mov
and
js
xchg
int3
cli
aam
jle
call
jmp
inc
mov
out
xchg
aam
jl
jmp
xor
or
fdivs
call
xchg
sahf
aam
ret
ja
dec
push
mov
mov
dec
repnz
stos
stos
lock
daa
lods
cmpsl
movsl
stc
xchg
xor
movsl
mov
cmp
insb
mov
mov
fadds
mov
fidivrl
sahf
loop
push
sub
fisubs
das
add
adc
cli
push
xchg
or
and
pop
je
and
or
jnp
lods
mov
dec
clc
add
aad
cmpsl
std
push
jecxz
mov
out
pop
aam
mov
stos
push
inc
add
mov
stos
xor
ret
and
rep
mov
mov
inc
mov
dec
faddl
xchg
insb
les
outsb
mov
jns
push
decb
orl
adc
cmc
mov
or
mov
ja
mov
dec
test
and
sbb
inc
cmpsb
fbstp
or
dec
rorb
pop
fmull
cs
mov
shlb
test
push
bound
pop
inc
adc
outsb
adc
xchg
dec
xor
jmp
xchg
adc
dec
leave
negl
aam
push
mov
and
jmp
fdivrs
mov
cwtl
cmp
bound
sbb
mov
out
cmp
sbb
decb
pop
pop
in
stos
lcall
dec
in
push
fcmovne
cmp
and
mov
add
push
pop
adc
rolb
shlb
push
xchg
jmp
xor
cld
pusha
inc
clc
data16
fidivrs
mov
lret
int3
xor
movsb
sbb
sbb
sbb
mov
ficoms
xor
ret
outsb
hlt
lods
xchg
sub
bound
stos
sub
inc
add
xlat
iret
or
pop
mov
pcmpgtb
es
mov
cmp
ret
test
addl
and
repnz
cmc
enter
loope
or
in
mov
xchg
fnstenv
aas
mov
pop
in
out
xor
ja
mov
xchg
cmp
out
mov
aad
dec
and
jo
cmp
dec
push
push
sbb
sbb
xor
dec
icebp
adc
test
popa
mov
hlt
stos
lahf
fsubs
in
jne
mov
inc
inc
adc
ret
jg
mov
push
test
and
ret
psubb
ljmp
add
xor
inc
sahf
js
add
adc
xor
comiss
mov
mov
mov
or
mov
mov
jne
mov
insl
xchg
sbb
xorb
cmpsb
mov
icebp
mov
orb
push
pop
dec
xor
test
adc
mov
xlat
scas
sbb
clc
das
dec
jmp
aam
xor
imul
pop
aaa
xchg
cmp
out
push
inc
mov
mov
mov
mov
mov
sub
pop
jmp
jl
pushf
push
mov
and
sub
pop
sbb
and
cmpsb
sbb
sahf
dec
or
pop
push
mov
stos
hlt
aas
add
test
push
cwtl
add
into
mov
xlat
pop
mov
pusha
gs
mov
and
into
mov
mov
js
sahf
mov
xor
es
xor
clc
sub
cmp
pop
mov
sub
das
lods
arpl
or
sbb
adc
jns
pop
cmp
mov
xlat
mov
or
test
std
aad
shlb
repz
ja
and
mov
dec
jo
lods
sbb
push
sti
sbb
mov
pusha
stc
das
lods
adc
pop
xor
jmp
xchg
std
scas
test
push
loope
lods
lds
mov
stos
mov
inc
gs
pop
cmp
out
jb
push
pop
jmp
inc
call
shlb
fnstsw
fdivrl
ret
xchg
push
adc
mov
adc
movsb
adc
in
jmp
cld
movsb
imul
sub
jle
lods
and
push
inc
jge
mov
mov
adc
call
push
or
shrb
mov
jle
cwtl
pop
push
sbb
stc
push
inc
les
das
movsb
ds
jne
incl
outsl
pop
push
mov
adc
adc
je
subb
xchg
call
addb
push
into
movsb
sub
fsubrl
pop
mov
gs
lods
lods
mov
push
stos
imul
push
gs
clc
sbb
fcomps
xchg
call
push
adc
test
repnz
push
and
pop
or
je
push
test
xor
sbb
je
adc
adc
cmpsl
pop
inc
xor
sbb
inc
or
adc
out
or
dec
orb
in
cmp
test
sub
mov
or
jo
fs
mov
push
cmp
mov
sub
pusha
or
outsb
ffree
pop
or
ffree
pop
inc
xchg
sbb
mov
xchg
inc
jo
test
lea
pusha
stos
daa
push
mov
jg
pop
call
lods
xchg
enter
aad
xor
iret
pop
mov
aas
mov
sub
test
push
sbb
mov
cs
push
sbb
and
and
and
mov
adc
pop
inc
shlb
pop
pop
or
nop
iret
enter
call
add
jmp
stos
cmp
decl
push
movsl
pop
and
push
jl
or
pop
push
mov
lret
mov
mov
mov
inc
add
lods
bound
dec
add
sbb
sub
insl
xchg
sbb
inc
lods
shlb
imulb
lods
addr16
les
add
or
and
insb
adc
pushf
enter
jo
pop
fldenv
add
pop
repz
jge
adc
push
shr
add
jmp
in
cmp
add
cmp
adc
adc
outsl
or
arpl
lods
jno
test
subb
adc
push
inc
or
stos
inc
sub
cltd
dec
mov
mov
lock
cwtl
mov
jnp
or
xchg
push
mov
mov
jne
enter
xor
adc
push
push
insb
jbe
dec
jo
cmpsb
mov
cmpsb
fsubrp
aaa
jg
dec
add
or
sbb
icebp
xor
push
test
push
ret
ljmp
sbb
out
add
shl
pop
mov
popf
fmul
test
testb
push
test
lods
and
ficoml
imul
js
xor
les
stos
mov
fisttpl
xchg
jecxz
cmpsl
fcompl
adc
sbb
and
fmulp
ja
mov
in
and
adc
sahf
jp
jmp
test
pop
push
fs
mov
es
dec
sub
popf
jbe
xchg
and
xchg
enter
push
sti
dec
xchg
and
aaa
call
dec
outsb
xchg
je
or
mov
je
or
sbb
adcl
add
pop
pop
loopne
cltd
das
jmp
jae
cmp
das
je,pn
bound
and
adc
inc
test
js
dec
dec
add
sahf
push
lea
push
mov
cli
scas
cltd
xchg
xor
cmp
fucomp
sub
mov
xchg
inc
inc
hlt
mov
xchg
mov
or
gs
push
dec
and
sti
pop
mov
adc
push
xor
and
push
adc
xchg
sbb
xor
test
call
mov
mov
inc
add
sub
cmp
add
adc
adc
mov
imul
pop
mov
adc
pushf
sub
repz
push
pop
adc
mov
mov
adc
push
pop
add
add
xor
es
cmp
dec
jns
xchg
add
cmp
mov
clc
enter
push
mov
jo
cmpb
and
xchg
repnz
pop
inc
mov
xchg
int
sub
daa
test
push
mov
mov
inc
and
fdivrl
sub
inc
popa
jp
rol
jp
or
fidivs
sub
dec
xorb
mov
push
xchg
fs
movsb
aaa
mov
scas
mov
adc
ret
pop
enter
dec
sub
xchg
and
xorb
mov
push
mov
adc
scas
pusha
xchg
dec
inc
push
subb
cmpsl
mov
xor
nop
jbe
mov
rol
das
push
fcmovu
dec
sub
call
pop
adc
test
sbb
and
stc
and
and
jns
mov
test
sbb
inc
inc
adc
and
mul
mov
xchg
in
cwtl
adc
shrb
sub
add
push
je
xchg
cmp
movsb
fldcw
je
loope
sahf
push
cmp
inc
movsb
adc
mov
jl
lret
test
and
movsl
cmp
and
rcrl
sub
outsl
test
push
and
and
jnp
movsb
addr16
or
stos
cmpsl
shl
in
dec
sub
shlb
and
xor
daa
add
mov
filds
loopne
adc
inc
sub
das
les
jb
nop
adc
sahf
sarb
fsubr
and
je
rcrb
add
push
inc
inc
test
lret
xorb
cmp
or
mov
adc
dec
sbb
push
jge
inc
dec
xchg
outsb
cmpsl
pop
mov
add
cmp
je
pop
stos
shll
push
inc
add
add
push
into
popf
pushf
push
scas
mov
push
test
pop
inc
sbb
fstpt
ja
mov
pop
xor
inc
imull
mov
in
push
int
fstl
xor
call
aad
imul
push
adc
and
jno
daa
dec
scas
push
adc
xor
push
push
cvttps2pi
mov
push
je
mov
and
or
call
xchg
int
addb
sbb
jmp
push
and
mov
push
push
jmp
icebp
mov
mov
sub
sarl
leave
mov
inc
jg
jmp
mov
mov
pop
lahf
fstps
sub
adc
sbb
loop
pop
test
or
inc
test
push
xchg
shrl
adc
movsb
es
and
test
pop
push
xchg
pushf
or
leave
dec
cltd
cwtl
js
ds
xchg
int3
inc
add
fwait
scas
sub
in
lock
dec
xor
mov
ds
test
mov
mov
fwait
clc
mov
push
pop
stos
dec
cmp
xchg
fidivrs
daa
test
mov
imull
adc
rorb
bound
or
adc
mov
mov
adc
mov
lods
mov
xchg
inc
cld
xor
daa
clc
add
int3
and
sub
enter
jae
nop
adc
inc
xchg
dec
mov
enter
push
fwait
stos
push
popf
xor
add
lea
dec
mov
mov
add
xor
arpl
test
cmp
je
mov
aam
adc
call
add
es
ljmp
movsl
je
into
dec
sbb
mov
sub
jbe
aam
fwait
cmpsl
pop
xor
insl
jmp
xor
fsubp
daa
jle
dec
jno
icebp
or
scas
adc
cmpsb
mov
lea
cmpb
in
mov
add
pop
or
cmp
or
push
push
push
or
mov
push
push
cwtl
into
mov
cmpb
enter
je
ds
aas
into
inc
cli
aas
jmp
idivl
bound
inc
lods
sub
fsubrs
and
insb
mov
inc
cmp
xor
int
adc
dec
mov
push
sbb
loope
arpl
stos
adc
pop
adc
lahf
cmp
inc
cmpsl
mov
ficompl
cmpsb
lahf
pusha
jno
add
xchg
or
daa
call
and
mov
cmp
test
adc
and
and
dec
add
shrl
mov
clc
movsb
dec
aas
lret
sbb
and
aam
inc
movsb
or
adc
enter
ret
in
mov
mov
and
xchg
adc
cs
lea
push
or
sub
xchg
cmc
dec
push
adc
xor
je
orl
cmp
jmp
insb
out
and
sub
dec
lods
sub
push
add
cltd
adc
fmuls
in
stc
push
push
ja
and
xchg
daa
sub
adc
lea
jl
lods
std
push
stc
mov
repnz
rorb
test
repz
addb
cmp
rorl
std
cmp
lret
add
shrd
clc
call
je
push
cmp
outsb
and
jo
sub
test
mov
sbb
pop
push
out
xor
dec
sub
inc
movsl
cli
in
lea
mov
adc
jl
adc
subb
rorl
dec
pop
and
nop
or
jg
jnp
mov
leave
test
xlat
nop
rcrl
xor
sbb
push
es
push
jno
push
adc
movsb
adc
mov
mov
push
outsl
nop
xchg
jne
push
mov
mov
pop
jmp
mov
inc
movsl
sbb
ret
push
leave
inc
call
adc
gs
or
sbb
repnz
or
jl
or
jle
push
add
and
pushf
pop
fldcw
or
adc
mov
mov
push
aas
repz
and
scas
in
dec
into
aam
xchg
adc
push
xlat
rorl
rclb
dec
mov
pushf
and
dec
andb
fisubl
xlat
cmp
push
pop
mov
fwait
adc
push
dec
inc
mov
dec
mov
pop
and
andb
add
push
push
jecxz
dec
das
mov
cmp
jge
inc
test
mov
or
lret
sbb
xchg
testb
add
cmp
repz
mov
inc
cmp
adc
adc
mov
sbb
mov
sub
and
sub
xchg
push
inc
bound
cmpl
sub
push
sub
sbb
adc
dec
adc
mov
add
test
in
dec
and
push
or
fmuls
mov
dec
or
test
in
lahf
inc
lea
in
adc
sbb
xchg
sti
or
fmuls
nop
int3
mov
rclb
enter
sub
add
lods
test
dec
and
push
int
inc
andb
pop
punpcklwd
movsb
or
test
mov
push
and
cmp
loope
sub
or
inc
sub
push
sbb
or
adc
or
inc
sub
inc
mov
push
jmp
or
mov
xchg
jno
sub
xlat
dec
adc
mov
pop
adc
lcall
jo
lods
inc
popf
adc
pop
and
mov
adc
adc
pop
sub
push
xor
xchg
adc
sub
push
adc
enter
sub
mov
inc
and
push
adc
and
xor
adc
push
inc
push
sub
inc
sbb
sbb
or
sbb
inc
adc
fildl
inc
sub
xchg
and
adc
and
xchg
mov
jne
inc
sub
mov
add
adc
sub
popf
aam
inc
je
movsl
pusha
dec
xchg
cwtl
test
sbb
aad
xor
aad
or
jo
movsb
test
fwait
sub
xchg
and
and
pushf
adc
or
pop
inc
mov
sbb
mov
pop
les
test
enter
and
inc
pusha
and
mov
sbb
cmp
adc
mov
sti
or
cmpsl
nop
pop
test
lcall
adc
mov
sbb
test
dec
mov
mov
imul
inc
adc
sbb
jl
nop
and
xor
lret
or
mov
ds
and
cmp
sbb
sub
adc
inc
cltd
lds
mov
lods
lock
dec
outsl
test
sub
jbe
jne
sbb
jl
fdivl
cltd
add
xchg
adc
pusha
mov
mov
push
fnstsw
adc
mov
jo
xchg
test
into
es
test
inc
movsb
and
push
sbb
cmp
cmp
or
test
fsubl
nop
mov
adc
mov
push
inc
xchg
and
mov
outsb
xor
pop
test
les
or
cmpsl
nop
inc
mov
cmp
or
xor
push
or
mov
cmp
and
sub
or
pop
xchg
push
sahf
stc
pop
cs
jbe
push
xchg
jae
adc
ljmp
call
jmp
cld
mov
ret
test
inc
clc
or
mov
ret
std
cltd
add
inc
xchg
inc
sub
in
adc
and
nop
in
pop
pop
test
sub
adc
xchg
or
inc
std
xchg
adc
xor
mov
mov
push
xor
sub
inc
mov
and
adc
test
inc
jae
pop
in
and
lock
cwtl
mov
les
test
enter
push
and
sub
mov
cs
push
adc
sbb
mov
shrb
mov
mov
out
movsb
or
jne
js
lea
sbb
test
enter
and
and
dec
fs
jb
adc
or
inc
nop
pop
mov
pop
sub
add
ss
bound
xchg
test
pop
enter
sub
inc
and
mov
or
les
nop
push
inc
mov
mov
cmp
bound
inc
dec
sub
inc
sub
and
xor
cwtl
cmp
or
les
push
push
inc
in
or
out
xchg
out
test
adc
subb
cmc
subb
dec
or
mov
add
push
adc
int3
mov
daa
test
inc
or
sbb
repz
jbe
mov
or
test
jne
mov
sub
andb
ljmp
leave
and
popf
xchg
push
inc
pop
xchg
dec
jg
push
add
std
fcoml
inc
cld
adc
mov
test
push
lea
adc
js
sub
and
xor
xchg
adc
test
inc
adc
mov
dec
mov
cwtl
adc
xchg
adc
and
mov
mov
dec
hlt
and
and
jle
out
jo
call
xchg
add
or
mov
cmp
and
and
paddusw
cmp
mov
and
es
mov
je
jno
cltd
aaa
lret
sbbb
lret
jecxz
cmc
loope
inc
adc
push
inc
inc
cmc
ss
es
push
fs
lret
pop
push
imul
adc
cmp
cld
mov
imul
test
clc
fnstcw
cltd
dec
xchg
and
nop
mov
imul
sbb
test
loop
jno
and
int3
mov
jno
cmp
adc
mov
adc
mov
dec
nop
mov
sub
je
adc
das
xchg
inc
mov
mov
shl
add
push
or
push
hlt
pop
call
push
or
rcrb
mov
ss
jb
pusha
and
or
call
fsubrs
mov
sub
cmpsl
xchg
cmp
push
lret
sub
sub
add
push
or
cltd
xor
pop
add
jmp
and
inc
adc
or
add
stos
xor
sbb
push
and
popa
movsl
adc
cmp
or
jmp
ss
push
jb
aad
adc
popf
nop
lods
imull
push
jmp
mov
adc
loopne
mov
jmp
movsl
mov
sbb
and
rclb
in
mov
jns
or
loope
lock
in
test
inc
xchg
adc
daa
and
test
push
popf
mov
ja
push
cmp
popa
ficomps
xor
pop
jmp
add
add
adc
ret
adc
pop
push
xchg
addb
ljmp
cmp
sbb
pushf
inc
lahf
and
and
mov
dec
push
add
jno
pushf
inc
pop
inc
jmp
and
and
cmp
inc
insb
and
sbb
xor
aaa
int3
dec
leave
fsubs
loop
push
gs
or
xor
and
mov
cmp
add
dec
inc
out
mov
and
inc
mov
pop
jns
inc
test
enter
and
adc
xchg
pop
into
sbb
test
enter
and
imul
out
sbb
inc
ss
and
push
inc
aaa
jb
inc
or
and
or
icebp
mov
adc
fisubrl
mov
or
inc
nop
clc
mov
inc
xchg
les
jle
and
pop
lds
mov
and
scas
jb
adc
or
cld
sbb
in
inc
int3
and
bound
xor
hlt
mov
cmp
sub
cs
fstl
jns
sbb
enter
and
adc
sbb
test
rcll
bound
nop
cwtl
mov
test
and
xchg
push
dec
and
or
fbld
test
adc
pop
adc
enter
mov
xor
fmull
in
and
adc
mov
pop
sub
test
enter
or
pop
loop
adc
js
mov
insb
and
and
pop
fs
jb
adc
add
pop
adc
or
test
daa
xchg
mov
dec
mov
jno
mov
les
and
push
inc
dec
and
mov
sub
cltd
xchg
jl
sbb
jg
les
and
sub
rcl
pop
and
insl
ja
inc
dec
sub
inc
pop
and
xor
or
test
pop
and
add
inc
xchg
fsts
inc
sahf
and
adc
mov
add
loopne
inc
stos
enter
and
loope
idivb
xlat
std
xchg
inc
and
shll
inc
loop
mov
pop
push
push
jecxz
sbb
push
shlb
aam
push
scas
pop
xchg
ret
pop
cmpsb
or
pushw
and
xchg
jl
pop
xchg
imul
cmpsl
jge
lea
fdivp
shl
movl
mov
jg
sbb
sbb
cmpsb
fs
lcall
inc
xlat
pusha
push
pushf
sub
lea
out
sub
mov
inc
nop
loope
jno
push
dec
lock
jns
loope
pop
dec
dec
cli
pushl
in
bts
mov
dec
mov
shl
lock
addb
cmp
add
adc
adc
test
mov
movsb
dec
mov
cmpsb
cmp
and
mov
pop
jge
cmp
jne
test
cmp
inc
test
sbbl
xor
shlb
cs
lret
pop
or
mov
or
bound
out
mov
and
loope
push
jle
call
lds
cwtl
adc
data16
rorl
inc
sub
dec
fnstenv
movsl
mov
xor
in
pop
test
push
cmp
push
jo
sub
or
daa
test
fucom
or
lea
das
push
call
clc
mov
sub
jmp
jle
lds
lcall
pop
pop
cwtl
xchg
fucomip
sbb
pop
sub
fs
mov
rcrb
sub
popf
or
dec
dec
and
hlt
mov
sub
iret
subl
push
push
sbb
pushf
scas
and
pop
pop
xchg
test
xchg
ret
and
scas
xor
cmp
pop
aas
std
fiadds
add
mov
add
pop
out
xorl
cli
rep
adc
xor
ret
add
adc
xor
cmp
inc
mov
cs
data16
repz
clc
sbb
and
and
or
mov
sbb
jmp
and
adc
cld
enter
outsl
inc
sub
adc
sub
inc
jnp
fidivrl
clc
lods
pop
push
icebp
cld
or
sub
or
push
push
and
push
pop
and
popf
pop
mov
pop
inc
test
and
mov
jl
cmp
jg
test
movsb
adc
jl
jl
test
insl
xor
and
push
jb
pop
sub
lcall
push
mov
mov
inc
and
xchg
in
mov
subb
inc
adc
dec
or
and
aaa
adc
or
or
sub
mov
fs
inc
jmp
loop
jnp
xchg
orb
jmp
call
clc
movsl
dec
repz
lahf
xchg
prefetch
or
xlat
pushf
pop
jmp
test
xor
jp
aaa
xchg
push
movsl
sub
test
lods
and
push
and
and
mov
test
inc
lods
inc
inc
or
adcb
add
mov
xchg
bound
daa
push
sub
stc
xchg
lock
add
push
push
push
lret
dec
inc
test
popl
shlb
insb
test
sub
mov
dec
and
jae
push
mov
dec
and
cmp
jbe
dec
push
lea
andb
mov
or
inc
adc
orl
jne
cmp
cs
aad
dec
or
mov
push
subl
fsubrs
adc
es
arpl
xor
jmp
cmp
enter
pop
imul
mov
scas
nop
sbb
push
inc
lods
arpl
stc
sti
pop
mov
je
cmpl
stos
sub
mov
inc
call
js
lds
and
adc
lea
jne
adc
fs
jl
test
pop
push
repz
xchg
or
cwtl
xchg
mov
test
add
repz
daa
mov
mov
adc
lea
pop
movsb
bound
je
xor
jl
push
push
xor
sub
dec
addr16
orb
leave
cmp
shll
cmp
cmp
dec
das
decb
movsbl
cmp
jl
stos
int
fs
stos
jecxz
and
xchg
push
sti
cmp
out
imul
push
push
stc
mov
mov
jle
cmp
add
or
ja
cmp
cmc
jge
jmp
call
cmp
jne
push
icebp
fistpll
dec
inc
jge
enter
adc
add
sbb
dec
mov
mov
pop
arpl
pop
push
inc
push
push
xchg
mov
cwtl
pop
mov
les
add
imul
inc
jns
xchg
jo
and
adc
rorl
or
cmp
scas
push
add
add
je
push
aaa
popa
jnp
jnp
dec
push
add
adc
inc
pop
in
jbe
orb
inc
xor
or
lcall
int
hlt
jne
shrb
sarb
xor
mov
sub
les
stc
test
cmp
adc
add
call
mov
cmpb
jne
cmp
pop
cmc
adc
orl
mov
jne
sbb
int
or
dec
jge
lods
dec
inc
sub
adc
cmp
js
inc
sbbl
fs
sub
loop
cmpsb
cli
and
test
xchg
jl
mov
xchg
je
jns
adc
add
mov
dec
mov
fs
inc
inc
jl
pop
test
aaa
push
cmp
lea
fcoms
mov
mov
inc
mov
testb
push
nop
fs
sub
imul
fldenv
data16
scas
les
aam
sti
or
xor
jns
or
sbb
cld
xor
sub
sub
in
push
xchg
shl
dec
leave
jmp
jae
rolb
out
push
cli
xchg
dec
loopne
inc
pusha
imul
clc
popa
fcomps
icebp
jns
clc
int3
lret
mov
hlt
sub
dec
orl
dec
sbb
gs
sub
stc
aam
stos
adc
jb
lar
adc
push
nop
out
mov
inc
and
stos
adc
sbb
clc
out
or
iret
sub
xor
mov
xor
jb
adc
or
mov
popf
nop
repnz
jp
ret
xchg
dec
pop
fsts
pop
sub
adc
adc
push
and
pushf
cmpsl
xchg
inc
mov
push
push
jns
cwtl
xor
mov
xchg
mov
ss
les
or
in
or
jb
or
nop
test
repnz
cmp
std
add
push
pushf
cmp
test
mov
mov
mov
out
inc
inc
push
and
inc
add
adc
cmpb
push
sarl
in
cmp
test
mov
popa
dec
mov
fmuls
cltd
push
mov
fldt
addr16
jbe
jmp
and
loop,pt
call
inc
ja
sbb
mov
xchg
jne
sub
out
and
xchg
push
dec
inc
icebp
sub
sbb
mov
loope
cwtl
inc
loop
fidivl
sbb
jb
xchg
adc
cltd
and
dec
out
cmpsl
daa
push
nop
dec
in
adc
xchg
push
clc
les
in
sbb
push
adc
outsl
daa
call
bound
inc
loop
nop
push
ret
inc
push
and
jo
in
loop
outsl
push
enter
dec
iret
rclb
sbb
and
or
fcoml
adc
jmp
outsl
inc
loop
and
aas
push
lcall
push
ljmp
sub
dec
cmp
jb
sub
inc
fucomip
sbb
pop
nop
ds
cwtl
repnz
and
outsb
jae
mov
or
sbb
sub
inc
shr
sbb
sub
outsb
jle
test
icebp
xor
and
dec
dec
jbe
lock
stc
cmp
dec
mov
movsb
test
xlat
loope
stc
sbb
inc
notl
movsb
clc
vpcmpeqb
xchg
add
in
lods
mov
and
pop
pusha
adc
adc
mov
push
push
test
outsb
adc
in
lds
jl
pop
cmp
imul
sbb
test
lret
test
jmp
push
mov
mov
sub
jae
add
jmp
daa
shr
pop
loope
jae
outsb
or
jg
aam
jns
bound
and
loopne
mov
inc
dec
jmp
loope
mov
pop
push
cmp
fdivs
rclb
xor
hlt
sub
jno
add
insl
cmp
jmp
insb
dec
cmpsb
ds
insl
punpckldq
cmpsl
sbb
sub
int3
xor
and
in
repz
sub
dec
cld
dec
cmp
test
out
movq
and
jns
mov
popf
ret
adc
cmp
jne
or
ljmp
fsubs
js
mov
add
inc
rcll
mov
push
sub
sub
push
xchg
repz
movsl
das
xorb
aam
mov
and
mov
pop
sub
testb
pushf
cmp
lds
or
cmpl
sbb
lods
fdivrs
xchg
loop
adc
int3
repnz
inc
ret
sbb
dec
and
imul
lret
bound
jno
fs
orb
test
sbb
adc
sub
pop
dec
jb
cmpsb
cld
xchg
repz
jo
adc
shrb
xor
or
sub
mov
mov
cwtl
push
push
adc
push
arpl
call
mov
je
ret
jle
and
push
imul
dec
sahf
inc
push
push
xchg
and
sub
inc
jmp
or
mov
pop
sbb
mov
inc
cld
or
outsl
stos
sub
mov
les
adc
sub
push
test
jmp
cmpsb
xchg
adc
mov
sbb
loop
xchg
and
mov
outsl
movsb
mov
sub
push
mov
push
jo
fs
aaa
sub
scas
insl
ss
cmp
mov
push
jmp
movsl
and
push
mov
xchg
or
xchg
xchg
or
inc
addr16
outsl
mov
sbb
outsl
xchg
cli
sbb
outsl
push
or
ja
in
xchg
sbb
pop
push
mov
mov
or
repz
pop
adc
jae
lea
add
xor
sbb
dec
dec
mov
jno
sub
iret
test
dec
lock
dec
aas
jmp
cmp
adc
and
push
outsb
jno
adc
sub
mov
and
adc
mov
imul
dec
and
imul
jle
es
stos
insb
test
cwtl
shll
test
xor
cmp
push
add
lret
mov
push
mov
lock
mov
sbb
sub
popf
pop
call
jp
sub
bound
and
cli
jb
adc
add
in
and
stc
loop
test
push
dec
add
imul
pusha
jbe
jmp
jns
test
push
mov
xchg
sub
push
and
jmp
shrb
pop
jno
loop
push
add
xchg
bound
xchg
out
ss
xor
dec
sub
shll
jns
mov
nop
adc
mov
mov
mov
fs
and
movsl
adcb
les
rcll
lock
push
mov
hlt
fiadds
pop
jecxz
pop
adc
cmp
dec
or
jns
ret
or
popa
adc
push
lret
sub
push
push
mov
push
cmp
fdivl
lods
in
call
jl
fisttpl
mov
gs
pop
adc
movsb
cmp
imul
cmp
mov
push
cmp
arpl
dec
push
sub
dec
inc
testl
sbb
sbb
ds
lods
xor
js
mov
mov
je
js
adcb
jno
test
jl
pushf
add
ds
xchg
dec
xchg
outsb
imul
adc
fistps
adc
and
ret
loope
mov
test
js
iret
push
je
fmuls
cmpsb
sbb
mov
hlt
mov
and
inc
enter
add
and
ja
push
sti
cld
imul
lods
push
lods
adc
movsl
fldcw
out
or
and
sbb
in
mov
push
cld
popa
sbb
xor
add
daa
shlb
test
sbb
jmp
push
cmp
sbb
mov
push
vmovntps
fs
sub
loope
roll
aam
test
xor
clc
mov
mov
pop
fisubrs
ficomps
xor
adc
into
fisubrl
ja
push
pushf
stc
jno
or
sub
cli
or
mov
jmp
dec
push
ret
inc
push
push
scas
bound
insb
mov
das
dec
and
sbb
orb
out
loop
inc
ret
pop
leave
push
jns
and
bound
scas
adc
shll
out
mov
xorl
mov
pusha
xor
xlat
pusha
test
cmp
fildl
shr
xchg
mov
push
push
dec
movsl
sbb
adc
cltd
push
fcoms
testl
mov
push
xlat
fisubrl
sbb
jno
filds
sub
pop
pop
or
cmp
dec
jg
jmp
sub
dec
dec
adc
and
xor
test
in
lcall
pop
dec
leave
push
orl
pop
popf
mov
in
adc
pop
lea
das
adc
das
scas
das
push
les
xor
out
out
push
or
xchg
pop
mov
adc
adc
data16
ja
dec
xchg
pop
inc
cwtl
nop
es
push
sbbl
rclb
inc
pop
mov
stos
loopne,pt
mov
das
aad
dec
aam
adc
push
push
sub
sub
inc
cmc
fstl
adc
or
jmp
push
clc
mov
je
add
cltd
sub
adc
cmp
mov
or
mov
pop
add
aaa
mov
adc
loop
imul
add
into
push
add
mov
add
cld
lds
cltd
sbb
inc
loope
add
add
dec
push
test
test
inc
inc
scas
inc
or
cmp
stos
xchg
nop
movsbl
inc
xchg
inc
inc
adc
push
or
cwtl
fidivrl
inc
adc
std
fs
dec
and
push
sbb
loop
fnstenv
or
fs
or
mov
lcall
xor
repz
setg
data16
js
jmp
and
push
xor
push
cwtl
sbb
push
xor
pushf
dec
mov
data16
arpl
push
imulb
push
mov
or
adc
xchg
pop
cwtl
loopne
jo
add
insb
and
call
sub
lahf
in
or
lahf
cmpsb
test
pop
jbe
cld
and
pop
bound
cmp
jb
xor
lcall
test
cmp
inc
scas
pop
repnz
jnp
pop
push
sub
inc
pop
xor
inc
push
xor
nop
aas
fisubrs
add
test
scas
imull
loop
mov
xchg
and
sub
or
ret
fisubs
test
pop
mov
loopne
jp
jle
inc
data16
mov
ret
fdivs
mov
xor
imul
pop
decl
inc
dec
lds
ficompl
enter
out
cmp
push
call
mov
pop
dec
neg
sub
push
inc
jo
sub
dec
xchg
fxch
or
jmp
bound
aaa
inc
aad
adc
add
popf
cmp
movsb
xor
das
sub
dec
dec
in
int3
dec
popf
jns
mov
out
in
call
mov
enter
sub
xchg
adc
adc
test
add
pop
inc
in
test
xor
popa
sbb
inc
in
mov
into
cmp
hlt
adc
fcompl
dec
mov
and
pusha
inc
outsl
insb
or
jmp
mov
push
or
adc
cmp
dec
mov
push
cmp
jo
pushw
jl
jb
push
dec
sbb
in
xchg
dec
xchg
mov
pop
push
cmpb
jne
enter
or
shr
in
add
daa
push
shrl
or
pop
das
clc
dec
xlat
jbe
loop
icebp
and
xchg
mov
mov
and
add
mov
popa
rcrb
adc
mov
inc
sahf
dec
xor
mov
jne
jg
mov
jno
mov
adc
dec
jne
das
mov
repz
das
adc
lds
and
push
inc
inc
adc
push
sti
sub
ret
repz
ficomps
and
xor
sbb
test
dec
mov
insb
and
cmpl
dec
or
mov
xchg
add
adc
sub
or
sub
adc
popf
push
cmp
mov
mov
push
lcall
pop
ficoml
jno
das
mov
lahf
push
or
jmp
jl
or
dec
outsl
and
or
pop
stc
inc
mov
add
daa
nop
outsb
adc
mov
adc
mov
jle
push
pusha
mov
es
adc
add
mov
aad
sub
mov
loopne
add
mov
sbb
nop
jb
sbb
and
ret
in
pushf
fildll
cmpsl
push
push
call
pop
push
pushf
and
pop
mov
mov
repnz
dec
push
mov
test
adc
mov
dec
sbb
xchg
or
jge
pop
jg
aaa
and
pop
rolb
mov
popf
cld
js
mov
inc
cmp
jae
orl
mov
call
bound
adc
ret
ja
inc
mov
sbb
out
push
shrb
mov
dec
fcoms
aas
sbb
sub
das
arpl
cmp
or
inc
scas
fmull
mov
mov
jo
jl
gs
popf
mov
popf
add
or
xor
pop
ja
lods
mov
xor
sbb
adc
adc
mov
and
subb
and
mov
shl
mov
xchg
cltd
xchg
ret
xor
movsb
push
mov
stos
cmp
jg,pn
fwait
popf
xor
aam
aaa
leave
pop
and
xor
sub
adc
cmp
adc
adc
notl
sbb
movsb
test
adc
push
mov
dec
lret
xor
in
dec
sub
cmpsb
les
fsubrs
add
into
jmp
stc
dec
and
push
xor
and
sahf
iret
mov
leave
xor
sub
cltd
pushf
xchg
and
push
mov
inc
ja
adc
mull
and
inc
in
ds
adc
pop
sbb
cmp
into
lods
ss
add
cli
push
outsl
adc
adc
jbe
mov
adc
sti
mov
push
aaa
mov
xchg
mov
pop
push
imul
enter
in
xor
pop
xchg
adc
adc
into
inc
add
push
adc
jno
push
sti
ret
inc
push
ljmp
fwait
add
shl
stos
adc
test
mov
cmp
adc
jb
push
bound
js
test
and
push
test
and
jmp
daa
stos
dec
or
pop
mov
pushf
pop
lcall
dec
clc
call
pusha
adc
pop
jmp
test
and
insb
ficomps
test
enter
and
push
cmp
xchg
incb
add
loope
inc
sbb
jle
mov
pop
inc
sbb
insl
stos
and
or
adc
adc
dec
fs
mov
sub
inc
push
sahf
jecxz
mov
pusha
cld
and
daa
adc
arpl
hlt
pushf
bound
pop
call
cmpsl
or
fmull
movsl
mov
xor
into
mov
lcall
sti
pop
dec
mov
psubsb
dec
push
push
xchg
xor
repz
nop
cltd
test
mov
loopne
inc
sbb
adc
sub
int3
mov
repnz
inc
outsl
adc
test
mov
jg
sub
push
mov
into
mov
dec
xor
cmpsl
jmp
outsl
push
xor
iret
movsl
gs
dec
movsl
cwtl
inc
mov
add
js
imul
push
push
std
mov
or
aas
jmp
xor
mov
adc
loopne
daa
pop
xor
lods
icebp
in
jmp
andb
int
adc
popf
push
mov
cmp
jge
mov
and
enter
lea
aas
mov
jmp
shll
bound
insl
pop
ret
adc
push
push
inc
or
cwtl
dec
dec
movsl
in
idivl
cmpl
lret
iret
aas
stos
pusha
adc
or
test
inc
scas
mov
inc
test
pop
dec
ret
pushf
inc
xchg
cltd
fistpll
out
adc
pop
mov
adc
cmpsl
scas
call
and
mov
and
cmpsl
adc
lcall
xor
test
dec
stc
fcoml
push
pop
movsb
int3
pop
pop
cwtl
push
inc
out
sbb
ja
rclb
std
ja
sbb
adc
mov
je
lods
in
push
push
in
inc
mov
dec
popf
roll
je
adc
and
sti
inc
sti
xchg
mov
adc
sub
mov
leave
mov
inc
add
mov
je
bound
jb
mov
dec
jns
sbb
inc
xchg
jmp
xchg
mov
push
cli
push
mov
rcr
test
dec
push
dec
adc
dec
mov
loopne
xchg
test
dec
xor
cmp
in
mov
movsl
inc
sub
mov
xchg
or
inc
or
mov
dec
adc
pop
cmp
andb
test
dec
les
popf
pop
ret
mov
push
xchg
aam
mov
out
mov
lds
out
fimuls
popf
jge
jg
push
or
dec
rolb
push
xchg
push
xchg
icebp
bound
or
enter
ficomps
test
mov
pop
inc
fdivrs
fcomi
xchg
je
push
mov
rorb
rolb
fdivl
inc
sub
pop
xchg
adc
rcrb
les
and
addb
push
ffreep
jno
les
and
nop
sbb
and
mulb
push
test
das
je
jne
xor
lret
or
shr
ds
pop
sahf
movsl
sbb
sbbl
test
shlb
leave
inc
inc
outsl
push
and
test
mov
and
lea
sbb
add
cmp
mov
out
cmp
test
aas
in
push
mulb
cwtl
mov
adc
push
dec
call
jne
mov
out
int3
ljmp
xor
inc
xchg
mov
add
ret
dec
mov
or
mov
inc
or
dec
mov
adc
rorb
mov
and
leave
lds
xchg
push
or
gs
mov
push
fildll
ljmp
dec
shrb
pushf
push
insb
mov
xchg
jle
bound
pop
cld
xor
cmp
imul
test
nop
lret
pop
mov
jl
bound
ja
xor
push
ss
pop
dec
pop
ss
ret
jmp
sub
adc
fdivs
out
sarl
mov
inc
push
fcomps
cld
push
fsubrl
jp
adc
xchg
mov
sbb
sbb
sbb
sbbl
push
sahf
cli
push
in
call
mov
repnz
push
ja
cmpsb
jge
ret
test
mov
adc
xchg
hlt
mov
adc
push
mull
or
push
stos
jo
or
mov
inc
out
inc
sub
mov
je
imul
xchg
push
ret
xor
call
inc
adc
in
sub
mov
or
jg
call
xchg
and
orl
out
and
xchg
out
dec
sbb
test
xor
or
es
adc
jne
sub
cmp
inc
or
je
cmpl
lds
jmp
decb
jmp
push
inc
cmp
jb
mov
jmp
jge
pop
inc
hlt
movsb
and
movsb
sbb
sub
cltd
push
xor
test
repnz
adc
inc
xchg
sub
stos
push
pop
adc
scas
cmp
dec
pop
mov
xor
push
jb
xor
adc
and
dec
push
les
xor
stos
push
fwait
mov
push
mov
mov
lds
push
mov
push
out
xor
or
xor
or
scas
mov
call
sub
mov
and
push
add
int3
jl
mov
les
mov
hlt
xchg
aam
jbe
mov
dec
mov
jmp
adc
cld
int3
or
push
int3
xlat
push
or
or
imulb
lret
lcall
cwtl
mov
or
loopne
mov
inc
sub
cli
sahf
lock
mov
clc
push
adc
aam
xor
cmp
cli
xchg
fsts
dec
je
lcall
nop
jg
jno
inc
scas
and
push
ret
sub
pop
xor
mov
outsl
dec
decl
out
jo
xchg
notb
push
inc
push
jbe
mov
rol
pushf
xchg
daa
sbb
je
and
test
out
loop
pop
mov
je
push
js
sub
pop
mov
mov
ljmp
and
hlt
sub
mov
aas
or
xchg
test
or
mov
mov
outsl
inc
push
in
or
call
imul
andb
cmc
sbb
ljmp
fcomps
lcall
inc
les
outsb
je
cmc
out
xchg
and
call
mov
test
dec
dec
jmp
jp
mov
cmp
fistpl
inc
inc
jmp
push
push
xor
adc
push
jbe
cs
sarl
push
and
jne
dec
jg
xor
lcall
push
stos
adc
add
push
jmp
sbb
aas
mov
roll
xor
lods
dec
dec
and
hlt
mov
shlb
inc
inc
int3
or
xchg
in
xor
fidivrl
dec
add
mov
sub
or
je
test
fistl
push
mov
and
out
push
imul
or
mov
inc
cwtl
into
sbb
sub
adc
dec
mov
sub
movsb
add
mov
std
call
inc
fdivrl
xchg
fnsave
insb
mov
je
and
shll
mov
loopne
xor
out
push
pop
sbb
adc
sub
out
in
fwait
addr16
jecxz
call
adc
jo
push
and
pushf
inc
cmpsl
cmp
test
jb
push
fldlg2
adc
sub
inc
cmp
pop
scas
push
cmpsb
lds
dec
mov
notl
add
lock
jne
add
call
jle
mov
xlat
xor
xchg
jmp
push
inc
lcall
mov
and
notl
je
orb
enter
int
in
sti
subb
jecxz
aas
adcb
push
xchg
or
xor
out
mov
fsubrl
push
cmc
loop
push
sti
outsl
add
sub
pop
repnz
and
stc
rclb
jmp
mov
xchg
sbb
mov
imul
in
sti
adc
das
mov
dec
xchg
and
int
leave
dec
ljmp
mov
shlb
ljmp
jo
dec
inc
scas
pop
adc
bound
outsb
or
mov
shlb
mov
push
push
sbb
mov
or
cmp
jle
inc
pop
inc
jb
push
pusha
insl
mov
movsb
daa
dec
jnp
sbb
cmp
jl
fidivrl
pop
adc
pusha
cmpl
mov
and
cmpsb
jle
aaa
andb
idivb
call
mov
add
inc
cmp
jl
mulb
sub
cmpsb
mov
sub
add
mov
xchg
imul
xchg
out
mov
inc
test
sarb
idiv
gs
rcrl
jle
lods
pop
adcl
mov
sub
cltd
dec
jb
inc
xor
jne,pn
dec
push
or
daa
inc
sbb
push
mov
stos
or
mov
mov
jecxz
and
loope
push
xchg
adc
loope
shrb
arpl
daa
orb
pop
mov
sbb
jne
mov
push
add
enter
and
and
lods
adc
popl
int
sbb
xchg
jp
push
inc
adc
pop
jno
xchg
jg
sbb
mov
and
add
mov
iret
lock
add
jo
mov
inc
scas
pop
push
sbb
jo
xchg
call
adc
mov
xchg
ds
cmp
or
sub
pop
cmp
add
pop
outsb
xlat
and
cmp
dec
insl
pop
clc
data16
jne
jecxz
shrb
sub
sti
or
mov
lock
neg
pop
pop
nop
push
jmp
mov
insl
cmp
mov
xchg
lea
or
mov
mov
test
adc
test
dec
clc
sub
pop
push
sbb
ret
aad
fcoms
mov
sub
dec
mov
loopne
push
mov
lahf
test
ds
ficompl
fcoms
hlt
stos
mov
push
je
dec
add
and
sbb
xlat
push
ret
inc
mov
push
dec
lret
cld
pop
mov
outsl
lods
push
sub
cmp
mov
cs
or
rcr
push
cwtl
int
add
into
fdiv
pop
adcl
mov
movl
xchg
mov
loop
adc
test
and
insl
aam
das
push
aad
lret
roll
xlat
idiv
in
test
jo
mov
jmp
inc
cmp
push
cmp
sti
mov
test
mov
call
cmpsl
pop
enter
jmp
and
in
xchg
clc
xchg
push
mov
addr16
inc
jmp
je
call
add
shlb
mov
adc
cmp
test
fnstenv
cld
mov
pop
ret
les
jbe
fdivs
xchg
mov
out
int
into
xorb
xor
push
lcall
in
pop
sub
aam
add
pusha
les
fildl
lretw
ss
xlat
cmp
or
test
pop
adc
jne
repnz
out
push
cmp
xchg
aas
jecxz
lret
movsl
jg
sbb
cmp
lods
xchg
inc
mov
fidivl
test
xchg
test
ret
fs
pop
cmp
cmpsl
mov
or
pop
push
cld
mov
fs
push
xchg
push
inc
in
cs
jmp
mov
push
jne
ret
inc
lock
das
call
testb
sbb
inc
adc
cmpsb
pop
mov
dec
push
dec
and
sbb
dec
ret
test
cmp
pop
test
fbstp
insb
inc
mov
or
and
xchg
jmp
xor
inc
cmp
arpl
addb
call
jl
and
xor
push
or
jne
daa
fcomps
mov
icebp
xchg
ss
icebp
rol
or
xchg
nop
cmp
jo
xchg
fs
js
inc
loope
mov
sub
cmp
dec
jmp
xor
pop
icebp
dec
daa
push
outsb
inc
clc
ret
insl
xor
pop
sub
pop
test
pop
cmp
fnstenv
insb
test
cmp
add
test
leave
push
add
enter
fadd
loop
cmp
push
loop
xor
and
adc
loopne
leave
ss
xchg
lea
push
negl
push
or
cwtl
push
pushf
mov
les
or
mov
hlt
les
xor
lret
or
and
push
in
xlat
cli
and
ss
gs
enter
jg
mov
dec
cmp
xchg
jnp
ljmp
rcll
xchg
inc
shll
cld
and
cmc
and
jb
mov
cmp
lcall
adc
jecxz
movsl
push
mov
sbb
or
notl
jae
jl
addb
arpl
adc
and
iret
xor
in
fiadds
pop
cwtl
ret
shrl
mov
stc
sti
es
nop
xor
adc
mov
int3
sbb
cmp
test
popa
mov
cmp
sbb
mov
and
inc
jg
lock
ljmp
out
xor
inc
loope
cmp
sub
outsb
push
or
ljmp
adc
clc
jnp
sub
xlat
orl
outsl
jmp
ss
inc
inc
aam
sub
ss
or
cld
insb
andl
out
xchg
adc
in
or
push
lock
xchg
push
sub
sub
je
dec
fwait
sub
push
lods
push
and
lds
jno
jmp
mov
xlat
or
sbb
flds
imul
mov
stos
repnz
fcmovne
stos
xor
or
cli
pop
xor
push
call
adc
push
pop
sbb
insl
mov
fs
call
fs
sbb
add
mov
jle
pop
push
les
imul
std
mov
call
and
xchg
iret
and
adc
inc
add
xor
shll
inc
adc
js
call
jmp
ret
push
lcall
inc
outsb
jle
out
mov
testl
adcl
add
and
lea
cmc
adc
or
or
and
and
push
xlat
xchg
xchg
test
mov
dec
xor
out
fcompl
ds
sbb
jle
inc
loopne
mov
shrb
enter
mov
les
mov
or
push
fmul
pminub
bound
add
in
loope
push
in
daa
fstl
fmuls
mov
and
add
dec
hlt
hlt
add
jne
fisubrs
mov
dec
mov
jmp
inc
ds
test
sbb
jecxz
fnstcw
subl
xor
dec
inc
pushl
rolb
cmp
mov
shlb
stc
or
or
add
adc
js
inc
mov
cmp
mov
fisubs
ja
fcompl
stos
mov
mov
leave
ds
sbb
lcall
jl
insl
je
push
inc
mov
fidivl
rclb
mov
adc
int
aas
mov
lock
adc
sbb
mov
add
cmp
stos
or
hlt
je
ja
inc
push
mov
inc
inc
sub
pop
jmp
out
pop
cltd
push
mov
xor
pop
or
xchg
sti
adc
or
push
jmp
xor
and
lods
inc
inc
cmp
out
or
and
gs
mov
es
mov
mov
shr
push
mov
push
push
xchg
mov
push
push
cmpsl
loop
add
inc
loop
xor
mov
sbb
addr16
jle
or
lock
cltd
xchg
hlt
xchg
mov
mov
movsb
xchg
cmpsl
ja
push
xor
test
scas
pop
mov
jnp
jp
ret
jmp
test
shrl
or
jp
lret
jne
xchg
xchg
mov
add
lods
mov
pop
movl
adc
loope
loopne
enter
loope
adc
je
sub
push
mov
sub
je
sub
sbb
and
nop
es
add
ret
add
shrb
in
sub
les
push
mov
push
es
fisubl
push
leave
pop
sub
jg
iret
mov
sti
fs
leave
fnstenv
sti
dec
cli
test
bnd
ja
cmp
push
jmp
push
xor
mov
jbe
xor
ss
cltd
pusha
push
loopne
inc
pop
jns
pop
stos
ret
nopl
and
pop
pop
pop
sub
mov
leave
jne
adc
call
cmp
mov
push
adc
iret
stos
adc
fdivs
xor
pop
pop
cmp
jne
inc
mov
push
mov
or
mov
roll
fimull
mov
lock
and
or
call
mov
push
mov
add
sbb
lds
shlb
push
mov
xor
xchg
inc
or
inc
add
inc
cmp
jb
sub
mov
add
push
push
push
or
xor
mov
jmp
into
pop
push
mov
jbe
and
inc
lret
pop
pop
add
adc
shll
or
sbbb
or
sbb
push
mov
adc
jb
mov
xchg
fsubrs
stos
sub
sub
sub
pop
push
pop
pop
fs
adc
les
das
mov
in
and
stos
shl
push
scas
mov
and
dec
push
js
and
or
mov
movsb
adcl
negb
fidivs
lea
sbb
jl
enter
cmp
pop
sub
gs
sbb
pop
mov
xchg
ljmp
add
aam
cmp
enter
dec
pop
xchg
adc
mov
in
sbb
hlt
and
lcall
sbb
push
or
or
jp
xchg
pop
test
mov
mov
shll
xor
or
aam
sti
test
loope
outsl
lods
sbb
aam
xor
leave
sub
repnz
cmp
sbb
mov
stos
and
or
je
test
mov
scas
jmp
jmp
data16
push
push
stos
xorb
adc
fnstenv
mov
mov
mov
sti
or
jbe
das
gs
bound
inc
add
mov
in
xor
and
add
ja
mov
rcrl
out
roll
adc
push
mov
pop
leave
add
push
dec
adc
loop
push
mov
push
cli
adcl
sub
pushf
add
or
sub
in
sbb
push
in
andl
xor
xor
xor
xor
xchg
push
cmp
pop
xor
inc
jle
aaa
mov
repnz
out
push
cwtl
mov
mov
add
paddb
call
dec
cld
pop
adc
lret
and
cmp
cltd
lock
pop
pop
mov
push
sbb
add
cli
out
sub
mov
insb
icebp
or
or
adc
inc
cmp
jb
add
jne
mov
test
sub
cli
test
call
sbb
gs
inc
dec
adc
push
cmc
insb
lds
sub
xor
mov
xor
pop
pusha
and
mov
dec
ds
inc
lret
fisttpll
scas
cmc
xor
mov
sub
mov
dec
idivb
ljmp
mov
inc
call
mov
iret
popf
pop
push
xchg
push
xchg
call
mov
std
in
cmpb
pop
leave
sahf
test
ljmp
jg
cmp
and
fadds
es
push
inc
adc
lcall
pop
icebp
je
idivl
mov
fs
or
clc
sub
xchg
int3
jle
hlt
sub
add
cmp
mov
mov
mov
je
push
mov
adc
and
pop
adc
xor
sub
les
add
enter
push
sub
jmp
inc
into
pop
push
dec
test
jb
les
dec
adc
int3
sbbb
sbb
jp
shrb
aaa
mov
and
repnz
stc
mov
adc
stc
and
imul
dec
lods
push
or
xor
mov
cs
mov
mov
push
int3
clc
loope
or
adc
lods
xor
pop
sbb
outsb
je
dec
xchg
sbb
mov
shrl
mov
cs
mov
adc
jg
sysenter
lcall
pop
pop
cmp
jle
push
xor
call
sbb
mov
cmpsb
dec
xchg
cld
xor
xor
xchg
lcall
std
fdivrl
adc
cmp
and
add
lret
dec
aad
sbb
add
leave
adc
and
and
hlt
dec
jo
loope
and
sbb
int3
lods
jne
lock
adc
icebp
inc
push
xlat
cld
or
sbb
push
mov
popf
push
ljmp
mov
jl
and
mov
mov
adc
xchg
in
out
call
and
and
dec
into
sub
sbb
fcoms
flds
mov
rclb
fidivrs
les
adc
rcrb
and
clc
mov
adc
adc
call
cld
into
cld
int3
decb
and
and
fs
cmc
lahf
lock
push
stos
cld
shr
in
test
pop
test
sub
jo
xchg
ja
inc
loopne
dec
xor
xchg
pusha
enter
in
mov
loop
xchg
inc
ljmp
popf
and
hlt
loop
sbb
sub
and
ror
or
subl
lret
sbb
push
and
stc
rcrb
and
loope
ret
jo
xchg
push
std
decl
je
scas
mov
adc
cmp
pop
sub
sub
mov
aaa
ret
imul
stos
or
test
push
push
pop
mov
les
mov
mov
lahf
leave
pop
add
lds
cs
sub
and
dec
imul
mov
cmp
sbb
xchg
outsb
icebp
outsl
inc
je
jmp
stos
je
mov
pop
in
sahf
sub
sbb
dec
mov
push
fucomip
push
add
jmp
aaa
mov
in
and
mov
cmp
push
adc
int
xchg
sub
push
sbb
push
xor
jb
das
xor
divb
xlat
sbb
shll
fs
push
sub
leave
sbb
push
and
pop
test
ja
jb
adcl
dec
and
and
inc
adc
inc
bound
adc
adc
xor
or
mov
sbb
test
mov
adc
jae
ret
sub
pop
sbb
add
ret
adc
mov
or
call
call
jg
scas
sub
dec
cmp
push
xchg
aaa
adc
jecxz
imul
jne
mov
dec
cmp
int3
or
dec
xor
mov
inc
dec
pop
and
pop
mov
mov
lods
test
xor
and
xchg
add
movsb
cmp
das
cmp
daa
ljmp
rorl
lret
add
sub
add
push
pop
push
popl
stos
inc
cmpsb
cltd
inc
movsl
push
mov
clc
loopne
cmp
or
mov
incb
or
jg
js
push
adc
mov
sub
xchg
out
mov
in
popa
push
cmp
jae
mov
xchg
sti
or
pop
push
mov
ljmp
cmp
push
pop
and
enter
pop
repz
loop
xor
mov
in
movsb
data16
jo
xchg
xor
mulb
mov
clc
mov
jmp
and
nop
inc
push
pop
lahf
inc
push
scas
out
sub
pop
aas
and
movsb
cli
and
pop
sub
test
pop
stc
mov
repnz
cmp
cmp
inc
jge
jge
push
call
or
cltd
and
sbb
mov
lret
leave
call
in
nop
pop
push
mov
mov
das
mov
mov
add
xchg
or
mov
jne
sub
sbb
jne
dec
push
push
and
in
test
add
or
xchg
push
nop
or
jmp
notb
mov
xchg
call
push
xlat
in
pop
jns
or
or
cld
clc
inc
dec
pop
mov
dec
push
lret
enter
jb
je
loop
add
dec
push
and
add
jno
mov
clc
mov
popa
in
inc
pusha
orb
sbbl
sub
data16
sar
out
int3
or
cmpsb
mov
popa
js
test
sbb
sub
out
std
dec
xchg
daa
cmpsl
sbb
test
bnd
adc
add
int3
testl
mov
sbb
inc
ret
enter
les
mov
xor
sbb
outsb
fs
jo
mov
test
and
daa
push
xchg
fs
mov
int
jnp
adc
shr
dec
sub
or
dec
jno
xchg
push
push
addr16
imull
or
fidivrl
fsubl
fidivs
push
sbb
shll
shl
sbb
add
test
sub
mov
xor
mov
cmp
xor
in
sahf
add
addr16
sbb
test
int3
aam
scas
mov
mov
fadds
js
and
and
les
fimuls
mov
pop
and
scas
adc
or
jmp
in
xor
adc
and
jae
lahf
lock
cmc
sbb
mov
push
mov
mul
sbb
or
add
push
xchg
aaa
data16
or
and
dec
movsl
push
or
cmpsb
lea
and
adc
sub
pop
xchg
sbb
repnz
aam
jb
mov
fidivrs
hlt
inc
dec
mov
icebp
pusha
mov
inc
and
les
repnz
ljmp
adc
xlat
adc
in
push
or
xchg
xlat
gs
and
pop
jmp
fiaddl
adc
or
dec
adc
icebp
cmpsb
adc
les
jecxz
dec
adcb
mov
jle
out
xor
mov
sbb
js
mov
imul
je
sarb
in
lretw
clc
and
repnz
push
repz
xor
xchg
xchg
jmp
jmp
subb
sub
add
jno
nop
add
xchg
es
xchg
mov
add
adc
and
cmp
sbb
pushf
ret
and
cmp
mov
dec
pop
loop
test
xchg
les
mov
cwtl
sub
push
or
rcl
push
test
sub
test
mov
mov
mov
jne
lock
and
and
scas
in
adcb
push
ljmp
adc
push
repz
cmp
jmp
or
mov
sbb
add
enter
jl
data16
in
sbb
pop
gs
in
sbb
push
mov
mov
and
in
adc
lea
and
outsl
xor
push
mov
push
inc
out
repnz
dec
adc
ja
movsl
test
push
bound
popf
test
pop
in
or
adc
sbb
and
mov
sub
or
adc
arpl
sub
and
sub
frstor
rorl
cmpsl
ficompl
into
sub
rclb
add
sub
popa
out
into
inc
push
cmp
call
mov
xchg
ffreep
repnz
push
into
mov
lret
adc
sbb
fisttpl
xchg
rolb
push
bound
inc
adc
jmp
dec
jecxz
push
mov
cltd
fidivl
adc
mov
add
es
imul
sbb
pop
movsl
lods
push
push
adc
lods
mov
mov
add
mov
pop
imul
add
jne
inc
xor
leave
andl
or
rcl
mov
test
addb
mov
xchg
push
leave
scas
mov
orb
sub
push
inc
dec
and
call
sbb
dec
repz
lods
fs
and
add
pop
je
sub
sti
dec
sub
and
int3
dec
jmp
or
jecxz
dec
mov
xor
movhps
xchg
adcb
sbb
sbbl
adc
adc
xor
scas
std
test
push
push
lret
push
sti
pop
push
mov
add
xor
outsb
loop
pop
out
add
decb
jl
jmp
pop
push
mov
mov
dec
mov
sub
aam
dec
xchg
out
inc
and
sbb
cmpsb
in
inc
lock
mov
sarl
subl
pop
test
enter
inc
retw
fistpl
cltd
lods
call
inc
data16
int
daa
pop
lods
or
int
aaa
psllq
xor
xchg
or
mov
sub
adc
mov
call
mov
loope
push
inc
dec
and
xchg
sbb
movsb
sbb
xor
push
test
xchg
adc
sbb
or
repz
ss
test
jge
xchg
xor
push
add
cli
pushl
mov
je
inc
jne
fsubrl
and
sahf
xchg
sub
or
sub
or
push
js
aam
and
mov
inc
push
adc
hlt
sbb
mov
pop
and
mov
popa
push
ret
movsb
or
push
inc
mov
pop
pop
xor
mov
cmp
test
jle
cmp
je
pop
dec
add
push
call
push
mov
mov
mov
xchg
iret
mov
dec
adc
xor
adc
push
daa
and
inc
mov
shll
es
and
sub
and
inc
lods
and
pop
ret
mov
xchg
in
cmpsl
mov
add
inc
and
or
shll
ret
out
aas
dec
fdivrp
xchg
jle
stc
adc
popa
sbb
sbb
arpl
push
lods
or
pop
and
fcoml
fsubl
push
repnz
loope
mov
or
mov
xor
or
or
dec
test
or
mov
leave
sbb
je
cmp
subb
mov
jmp
repz
sbb
cmp
push
sub
loope
add
jecxz
xor
add
nop
or
xchg
out
out
jmp
jl
pop
mov
or
lods
jg
repnz
push
mov
dec
mov
sbb
jne
or
inc
test
lret
inc
ja
out
sbb
repz
pop
jmp
and
push
rorb
mov
mov
std
jp
cmc
shl
push
dec
rol
or
clc
gs
mov
testb
mov
sub
xor
and
mov
or
adc
call
testb
inc
jbe
iret
cld
sub
or
push
ret
mov
pop
aam
jge
aam
ljmp
dec
jo
outsl
insb
jae
inc
or
or
mov
ja
xchg
pusha
sub
adc
inc
adc
and
mov
xchg
hlt
stos
dec
xchg
in
stos
call
cmp
repnz
fwait
push
in
xor
out
sub
mov
pop
push
sbb
rdtsc
mov
jne
push
out
test
cmp
sti
loopne
push
call
lcall
jecxz
adc
int3
jbe
adc
push
mov
sub
imul
movzwl
push
xor
and
mov
adc
jnp
ljmp
int
popa
sbb
mov
jmp
test
mov
sub
out
xchg
dec
adc
xor
and
inc
cli
add
cli
jecxz
and
ja
push
xchg
pop
sub
xchg
dec
and
pop
push
push
sbb
mov
cmp
sbb
sbb
lods
stos
pop
test
inc
adc
cmp
dec
cltd
pushf
cmc
in
and
or
js
movsl
sub
insb
sub
adc
jns
jp
int3
out
scas
fsubr
mov
cld
subb
pop
loopne
sub
adc
dec
push
cmc
add
mov
dec
mov
inc
fs
scas
and
fidivrl
idiv
pop
and
push
call
dec
subps
test
ret
push
xchg
xchg
fs
out
fsubr
pop
test
xor
inc
out
lahf
sbb
call
mov
aaa
push
lcall
mov
mov
add
cwtl
data16
daa
jmp
fimull
aaa
jl
push
in
inc
cmp
jb
mov
adc
nop
inc
rcll
or
mov
sub
add
stc
xor
sub
and
out
out
add
jo
cmp
jg
ret
adc
push
inc
dec
add
mov
inc
add
push
and
mov
sbbl
repz
lea
ret
aaa
nop
test
roll
mov
ljmp
in
sbb
jle
test
sbb
jge
dec
dec
shl
xchg
ds
sub
jne
push
cmp
out
sbb
xchg
add
xchg
cs
lret
adc
xor
loop
xchg
dec
dec
fdivrl
or
divl
fsubp
adc
add
inc
mov
ficoml
aad
dec
jmp
jg
fsubs
push
or
add
test
je
cmp
ljmp
adc
dec
cmp
cmc
mov
sub
mov
mov
sub
call
mov
mov
fdiv
add
pop
and
or
ds
mov
leave
roll
sti
testb
mov
dec
lret
or
dec
lahf
rolb
and
inc
xorb
mov
enter
pop
add
sbb
cmp
mov
pop
add
cmp
jge
cmp
and
xchg
adc
xchg
sbb
adc
fdivrs
or
inc
mov
out
call
les
add
cmp
clc
adc
lret
xchg
mov
pop
leave
imul
decl
add
push
mov
cmp
and
jne
mov
test
movsb
sysenter
mov
lret
mov
jmp
inc
push
mov
repnz
and
adc
cmp
jne
sbb
sbb
or
ret
imulb
push
decb
pop
mov
jbe
arpl
or
jb
dec
or
adc
in
cmp
mov
insl
jne
push
fwait
jo
movsl
or
es
in
cmp
or
test
sti
leave
pusha
jg
jecxz
push
divl
movl
cmpsb
pop
inc
test
push
cmp
sbb
cmpsb
mov
jle
rolb
mov
add
mov
dec
pop
shl
in
push
cmpsb
and
movsb
add
rcl
iret
dec
jmp
or
or
add
add
dec
add
shr
out
dec
add
sbb
push
inc
shlb
pop
cmp
sub
push
xchg
jmp
xor
lret
and
inc
testl
cmp
pop
pop
inc
lock
ret
sub
adc
sbb
mov
lods
mov
cmpsb
mov
lret
push
mov
popf
jnp
push
testb
adc
mov
int3
pushw
xor
or
adc
mov
xlat
lret
mov
pushw
rorl
jg
inc
hlt
mov
dec
in
lock
or
and
or
daa
cmc
jno
das
loop
dec
xorl
or
push
scas
inc
neg
dec
mov
inc
cmp
xor
add
mov
mov
push
and
and
dec
mov
outsl
jmp
and
dec
xor
dec
and
lock
orl
push
and
das
dec
inc
push
xchg
out
call
cwtl
cmovne
cmp
insb
xor
cli
jg
dec
jne
scas
mov
and
jb
sbb
jmp
pop
adc
or
push
cmc
xor
pusha
jne
clc
mov
test
dec
xor
dec
adc
roll
cmp
add
sub
adc
mov
loop
int3
stc
or
and
push
pop
jo
dec
sarb
jb
aad
out
jecxz
or
test
xor
lea
aas
nop
adc
orb
lods
or
inc
and
test
add
mov
adc
int3
or
mov
cmpsb
sub
movsb
and
inc
inc
inc
or
mov
dec
cltd
or
sub
and
sbb
adc
or
push
sbb
xor
call
jmp
and
jmp
and
call
mov
add
dec
clc
adc
icebp
dec
icebp
out
or
xor
pop
lcall
push
cli
push
adc
es
rclb
sub
lea
sarb
and
cmp
icebp
lock
mov
nop
and
adc
test
jo
lock
or
or
or
faddl
nop
cmp
loopne
dec
mov
inc
push
mov
aad
and
cmp
jle
dec
sub
nop
sub
and
dec
test
xchg
int3
push
lods
or
int3
dec
aam
out
push
adc
je
adc
dec
xchg
adc
pop
dec
xchg
or
pop
dec
cmp
xchg
and
xor
or
or
inc
sub
mov
mov
aad
dec
test
cmp
mov
pop
loopne
sbb
imul
add
mov
and
out
loopne,pn
dec
xchg
gs
fcomps
lret
adc
stos
stc
mov
and
push
or
rcrl
inc
fs
inc
jb
in
mov
xchg
inc
rol
or
inc
adc
and
adc
addl
incb
clc
dec
decb
in
sub
mov
adc
inc
mov
cmp
bound
sub
xchg
add
mov
cld
sbb
dec
lret
or
je
rep
ja
xchg
dec
dec
pop
ljmp
push
cmp
les
or
sub
sbb
jae
push
lds
in
and
inc
adc
push
ret
nop
popf
loop
jno
and
cmp
lds
or
jmp
or
adc
shr
adc
inc
add
sbb
adc
out
rcrb
ret
mov
nop
fdivs
shl
inc
in
cmp
ret
pop
add
mov
inc
arpl
sub
aam
pop
and
inc
lret
imul
mov
fsts
sub
adc
adc
sbb
sarb
cmpsb
outsb
push
adc
push
push
mov
pop
pop
push
test
push
sub
pop
push
jmp
add
je
jle
les
inc
xchg
sub
and
lsl
mov
test
or
inc
addr16
jmp
cmp
jle
sub
push
sub
jne
adc
xor
inc
adc
sbbb
inc
or
shrb
cmpb
shlb
add
iret
cmp
xchg
jne
neg
pop
ds
lahf
out
dec
stos
call
popf
pushl
fstl
xchg
in
call
sbb
jb
cmpb
jne
xchg
xchg
test
je
push
mov
sarb
and
inc
jmp
xchg
push
movsb
movsl
stos
out
jp
popf
decl
les
or
roll
repnz
andb
inc
roll
inc
jmp
cmp
lock
or
push
jne,pn
dec
add
jmp
lea
rorb
mov
clc
xchg
jb
fwait
and
add
sub
cmp
jb
not
mov
adc
pop
mov
dec
adc
jge
cld
ja
test
daa
dec
ret
aas
adc
sbb
jecxz
sbb
popa
inc
sub
lock
in
mov
loope
ds
or
inc
adc
pop
sub
and
mov
mov
std
jmp
pop
pop
push
push
xor
pop
mov
adc
push
and
scas
dec
das
mov
jns
je
jmp
cmp
rorl
jp
cmpsl
mov
cwtl
inc
out
mov
movsb
sub
cmp
sub
nop
sbb
xor
mov
inc
push
cld
fmuls
insb
adc
add
ja
and
xor
push
pop
cmp
dec
mov
adc
inc
inc
sub
test
imul
cmp
add
and
dec
lahf
sub
call
and
jmp
push
adc
insb
repz
sbbl
popa
cmc
int3
lret
cmp
push
dec
push
in
push
cmc
fildl
adc
mov
adcb
push
outsl
push
or
loopne
inc
or
inc
cmpsl
enter
cmp
nop
inc
push
cmp
nop
out
addr16
or
jge
sbb
adc
test
daa
ficompl
ficomps
xor
push
or
out
cmpsb
les
and
mov
pop
pop
lea
push
addb
mov
mov
cwtl
jnp
lret
and
add
inc
pop
add
xorb
sbb
nop
xchg
inc
mov
lock
pop
add
jecxz
out
add
test
je
push
mov
in
fiaddl
push
and
push
dec
pop
shl
lods
es
and
addl
push
and
mov
jg
dec
movsb
and
or
fs
push
xor
push
mov
push
xchg
sub
je
mov
xor
in
test
les
cmp
in
or
push
shrl
adc
or
divl
lret
pushf
inc
add
xor
pop
push
jle
dec
movb
loope
push
jne
sbb
xchg
pop
roll
stc
ds
out
xor
mov
mov
cld
cmp
adc
cmp
and
mov
and
inc
push
aam
jmp
pop
addr16
jo
pop
std
sbb
test
and
or
jg
scas
ss
or
rorb
jnp
popa
or
js
xchg
andb
mov
jmp
pop
shrb
je
pop
pop
mov
push
jne
andb
sbb
fwait
pop
dec
or
icebp
pop
dec
dec
lock
movsb
mov
lret
push
jp
das
jno
add
xor
sub
shlb
or
or
loop
adc
cli
jmp
lea
mov
int
sub
fcoms
cmp
inc
add
frstor
xor
fisubs
xchg
jmp
pusha
shrl
jmp
je
rcrb
or
movl
and
jne
ljmp
or
fwait
fwait
nop
loope
push
sub
or
mov
dec
dec
push
lods
xor
mov
mov
je
xchg
dec
loope
hlt
in
xchg
nop
push
adc
dec
div
jno
add
cld
ljmp
xchg
inc
adcl
push
sbb
sub
push
xchg
cmp
xchg
stc
aam
incb
std
ss
call
sub
sub
jle
add
mov
add
mov
dec
pop
adc
cs
rcll
xchg
rcl
add
cmp
inc
inc
dec
lock
addb
fsubr
lahf
add
std
ds
xor
xchg
aad
mov
shr
or
jbe
xchg
lret
adc
pop
icebp
sub
sbb
mov
and
push
cli
and
add
addb
fdiv
adc
inc
adc
xchg
stc
fisubs
into
xchg
adc
out
les
out
lea
ja
sub
jnp
ljmp
mov
movsb
mov
aam
lret
pop
add
dec
cmp
and
xchg
fdivrl
push
sub
mov
sub
jg
inc
mov
mov
lahf
and
lret
dec
push
add
sub
adc
ds
and
cmp
add
sub
xchg
cmp
mov
or
cltd
ljmp
sete
sub
mov
push
or
sbb
jbe
test
push
dec
cmp
aad
fsts
sub
aam
xchg
jg
and
xchg
sub
pop
mov
shr
sub
es
cmp
in
xchg
inc
jmp
inc
lret
mov
insl
adc
sub
mov
leave
ss
xor
inc
sub
sub
gs
popa
jmp
and
push
and
and
add
jmp
xor
mov
xchg
imul
movhps
imul
popf
push
jmp
adc
jb
icebp
dec
pop
push
cwtl
mov
xchg
sahf
pushf
enter
mov
jno
rcl
ljmp
or
sub
xchg
sbb
mov
loope
cmp
arpl
out
jmp
pop
in
push
lret
out
popa
pop
xor
daa
daa
dec
stos
mov
pop
jb
xchg
or
inc
mov
scas
or
imul
lods
jle
in
fbstp
and
flds
sbb
loope
or
mov
and
fmul
sti
xor
call
jp
sub
out
xor
inc
cmp
cmp
or
sbb
xor
imul
cli
mov
mov
in
and
add
fdivrs
jb
in
pop
sub
movsbl
cmp
pop
or
inc
inc
and
jg
test
add
mov
lock
cld
int
sub
xlat
mov
enter
shrl
inc
push
adc
push
ja
dec
or
xor
inc
jecxz
push
xor
fisubrl
inc
ret
adc
popa
enter
or
mul
ret
imul
jns
aas
cmp
add
loope
rcrl
das
call
inc
andb
ret
adc
mov
stos
push
test
xchg
rcll
jo
push
inc
js
mov
adc
inc
cmp
addb
test
jg
jno
pop
sbb
test
and
test
mov
ja
pushw
jbe
in
or
mov
jmp
cld
dec
aam
sbb
push
sbb
mov
repnz
xor
sbb
jb
cmpsb
lret
adc
jmp
repnz
pop
xor
shr
leave
fcmovnbe
ljmp
hlt
div
mov
push
out
je
enter
out
shll
push
cmp
or
pop
jecxz
pop
jbe
dec
lcall
aam
push
outsl
push
push
push
outsl
mov
jmp
test
and
jl
mov
lret
insb
fs
and
jbe
sub
adc
hlt
push
mov
cmpl
jge
add
adc
xchg
or
push
cmpl
mov
dec
in
sbb
sbb
sbb
sbb
daa
sahf
and
enter
sbb
inc
ret
shr
xchg
fstps
inc
daa
inc
sbb
sbb
adc
dec
popa
orb
pop
pop
scas
mov
or
sub
out
pop
cld
jne
jmp
fnstcw
test
sbb
or
pusha
sbb
and
add
addr16
or
mov
xchg
mov
popf
jg
jle
scas
ret
add
icebp
pop
ds
xor
sub
pop
push
pop
out
ljmp
inc
jmp
in
mov
pushf
mov
push
jne
sbb
es
adc
jbe
popf
lcall
adc
xlat
lock
les
cmp
jne
inc
inc
dec
cwtl
xchg
fists
inc
pop
cmp
xlat
inc
orl
push
sahf
adc
cld
pop
cmp
jnp
jecxz
ret
xchg
aam
mov
cmpsl
loop
loope
cld
int
iret
cmp
sub
mov
jle,pn
ljmp
jo
sbb
pop
or
std
les
lret
out
sbb
jbe
push
pop
adc
loop
xor
push
dec
js
xlat
dec
out
pop
inc
loop
das
inc
jne
mov
imul
fistps
dec
pop
mov
inc
sbb
movsb
mov
stos
aaa
dec
xchg
pop
xchg
mov
jmp
insl
mov
cmp
fistps
and
xchg
jle
notl
ljmp
rcrl
sub
pop
jge
ret
jmp
mov
clc
sub
cmc
enter
add
or
xor
pop
jmp
mov
popf
daa
or
sub
adc
xlat
inc
push
scas
cmp
jne
mov
call
or
push
or
and
or
xchg
add
mov
repz
insl
jns
cld
adc
std
jl
add
sub
sar
dec
dec
idivb
sti
pop
or
mov
or
push
inc
fidivrl
test
jne
les
xchg
inc
mov
add
data16
inc
mov
xorb
inc
mov
bound
std
pop
cmp
or
xor
push
sti
dec
xlat
int3
ja
jp
jbe
and
xchg
and
outsl
lea
in
lret
rorb
cs
rcr
cltd
sub
inc
mov
test
ret
lahf
lret
push
and
scas
scas
lods
pop
or
in
inc
jmp
push
mov
hlt
xchg
mov
fwait
dec
cmp
je
push
and
iret
mov
call
push
bound
or
into
scas
xchg
ljmp
mov
icebp
ficoms
adc
inc
add
add
xchg
sbbb
in
jne
sub
add
fcoml
nop
popa
mov
sbb
mov
test
mov
lea
lock
lret
roll
and
pop
sub
xchg
adc
mov
movsb
fnstsw
sub
adc
and
test
or
xchg
rcl
movsl
pop
push
cmp
or
push
test
add
jmp
in
gs
xchg
jno
orl
cmp
pop
daa
xchg
shrl
mov
popl
sarb
subb
orl
add
add
xor
cmp
into
mov
or
addr16
adc
pop
jne
push
pop
xor
push
dec
or
xor
stos
call
or
cwtl
cs
push
jne
push
ljmp
lods
pop
pop
add
dec
mov
add
mov
or
mov
mov
ds
pop
movsl
sbbl
mov
adc
and
push
dec
add
addl
jmp
jae
popf
js
stos
out
inc
outsb
mov
or
test
lret
add
imul
add
lahf
sub
push
mov
jmp
cmp
aas
mov
rorl
inc
dec
js
mov
and
add
dec
jg
jne
adc
test
and
lret
sbb
cmpl
insb
adc
jbe
testb
push
inc
and
clc
push
pop
adc
fstps
leave
je
mov
insb
mov
mov
add
nop
rorb
js
loopne
scas
addr16
cmp
mov
dec
dec
pop
loop
cmc
lcall
das
cmc
xchg
movsl
xchg
push
je
leave
cmp
xor
clc
stos
dec
and
jecxz
xchg
fnstenv
scas
dec
xchg
lret
jmp
repz
mov
sub
cmp
icebp
aam
enter
adc
mov
sbbb
jbe
leave
ficompl
jns
pop
outsl
xchg
sbb
js
not
add
pop
and
and
sbb
clc
xor
mov
xor
pop
das
outsl
insl
mov
cld
mov
adc
das
adc
or
inc
les
mov
adc
lea
pop
daa
push
dec
insl
bound
jmp
dec
dec
pop
push
movsb
xchg
int
jo
push
xchg
add
or
jne
dec
xchg
icebp
aam
sub
inc
hlt
sub
ds
cli
imul
mov
sbb
lret
test
adc
imulb
add
aaa
mov
leave
scas
ret
inc
movsb
xor
add
mov
and
arpl
stc
jns
mov
aad
lea
push
cmpl
das
outsb
les
and
test
push
mov
dec
or
pop
cmp
cmp
call
inc
mov
adc
sbb
call
lahf
ljmp
aas
orl
dec
out
aas
add
jle
inc
in
cltd
jne
jle
mov
xchg
and
xchg
pop
xlat
and
mov
ds
xchg
xchg
movsb
pop
orb
cmp
adc
jmp
push
scas
push
sbb
xchg
xor
add
mov
in
mov
inc
nop
out
cld
add
test
and
scas
les
inc
jne
push
call
js
cmp
jge
add
add
fs
xchg
ds
push
mov
in
add
jle
push
push
push
inc
push
popa
and
loop
out
test
std
or
sar
pop
loope
shr
loopne
ljmp
sbb
inc
mulb
mov
jo
jo
cmp
dec
mov
loope
pusha
mov
mov
cmp
pop
pop
mov
xchg
mov
daa
push
scas
cli
sbb
shrb
dec
sahf
hlt
pop
rorb
inc
nop
add
mov
xchg
push
inc
dec
lock
or
aas
rclb
push
push
in
jl
sbb
jl
or
pop
push
mov
mov
pushf
lcall
and
adc
roll
mov
rorb
xchg
stc
xchg
add
push
int3
push
fadds
loopne
in
cld
push
fsubr
js
lds
cmp
add
sub
dec
jecxz
adc
add
push
and
add
inc
xor
in
adc
adc
sti
sub
mov
xor
jge
js
jmp
and
lret
addr16
roll
jmp
in
add
inc
mov
lock
add
lret
push
cmp
push
mov
or
and
je
adc
sbb
ret
cmp
test
push
test
cmpb
jne
test
add
push
jno
ficoms
js
jmp
rcrb
movsb
sbb
into
sahf
lea
sbb
lea
and
cmpsl
sbb
data16
jmp
clc
jbe
sbb
gs
xchg
or
and
js
sbb
inc
jmp
lahf
adc
outsb
jo
or
cld
test
add
or
or
rorl
not
inc
add
sbb
mov
pop
mov
adc
adc
lcall
sbb
adc
test
and
xchg
sub
adc
mov
jmp
enter
add
and
inc
adc
cmp
movsl
jge
pushf
ss
xor
and
push
cmp
rcll
xchg
js
xchg
push
mov
out
jge
inc
dec
add
hlt
mov
data16
sub
sub
aas
pop
je
or
push
lds
cli
mov
or
js
pop
mov
popf
pop
mov
clc
jmp
push
call
jle
cmp
gs
fisttps
mov
in
scas
out
jmp
lret
cmp
mov
dec
push
clc
imul
xchg
stc
ret
jge
adc
or
mov
cwtl
dec
mov
push
mov
mov
repz
stos
mov
pop
and
in
pushf
dec
ss
and
pop
pop
add
pop
je
xchg
push
test
sub
mov
push
call
sbb
rolb
clc
imul
push
pop
daa
sub
sub
push
orl
sub
leave
insl
enter
mov
cmp
aam
mov
sbb
das
in
out
mov
sub
aaa
cmp
or
mov
ret
fbld
pop
mov
xor
out
es
add
jno
push
dec
and
or
jmp
sbb
and
loopne
loope
in
rorb
adc
xchg
testb
inc
lret
push
pusha
or
cwtl
in
xor
je,pt
and
sub
enter
xadd
or
mov
stos
repnz
cmp
or
sbb
je
in
jg
jl
ret
jae
adc
out
ficoml
jmp
sbb
add
xor
popf
scas
cmp
fincstp
mov
or
jne
in
imul
or
xchg
sub
sbb
cltd
push
push
push
push
jle
lret
push
call
or
ret
xor
shrb
movsl
sti
cmp
push
aam
clc
xorb
sbb
mov
mov
cmpb
xorb
cmp
jne
stos
mov
dec
inc
ret
and
add
push
aaa
cltd
fdivs
inc
or
test
sbb
ret
sub
or
add
or
cwtl
xchg
cmp
sub
int3
push
hlt
xor
jns
test
pop
lods
cmp
repz
xor
dec
pop
gs
xchg
or
mov
call
mov
or
push
jle
push
clc
adc
add
je
in
call
mov
jle
lea
fildll
ds
push
dec
sub
adc
mov
call
mov
cmpsb
shll
ss
or
cli
adc
xchg
xchg
flds
add
and
push
repz
xor
mov
dec
or
dec
add
push
hlt
adc
orl
in
xor
movsb
cltd
jle
dec
notl
lahf
adc
add
ret
lock
stos
mov
push
stos
push
jle
shlb
fmuls
or
pop
lods
lea
pop
and
mov
dec
jb
data16
insl
pop
adc
or
testb
adc
loop
pop
je
inc
orl
clc
pop
push
push
or
inc
shll
sbb
out
and
add
gs
adc
fldl
adc
rorb
mov
and
or
shlb
mov
outsb
or
rorb
pop
orl
adc
push
inc
cmp
bound
movb
in
xor
mov
xchg
out
adc
and
inc
jmp
ljmp
sti
movsb
sub
popf
fbld
push
rorb
inc
add
rorl
cmp
xor
jno
adc
shr
rorb
sbb
je
push
sub
jl
inc
imul
jne
addr16
jmp
cmpb
imulb
or
xor
inc
ror
and
sarb
pusha
sub
push
and
push
or
ja
xor
icebp
ss
jns
std
loope
cmc
dec
loop
add
out
leave
sbb
insl
jb
mov
sub
pop
scas
pop
bound
add
dec
ljmp
xchg
lcall
js
or
xchg
add
xor
outsb
xchg
dec
arpl
adc
xchg
pmaxsw
mov
dec
cmp
out
in
sbb
scas
in
outsl
shrb
sar
pop
push
data16
das
pop
fsts
or
sub
adc
add
xor
jle
or
imul
sub
adc
fs
cwtl
sub
mulb
jle
test
jmp
or
lea
ss
mov
cmp
adc
push
push
adc
push
mov
test
mov
add
das
frstor
jo
stos
or
pusha
or
icebp
pop
fstps
and
pusha
pop
mov
mov
inc
test
mov
sub
sub
push
mov
sub
outsb
mov
test
dec
in
cmp
rclb
xchg
enter
movb
gs
cmp
ret
dec
sub
xchg
inc
bound
push
mov
sub
lods
xchg
cvtps2pi
sahf
xor
inc
push
mov
push
cwtl
bound
mov
testb
mov
push
int3
ljmp
pop
push
je
enter
dec
sahf
pop
adc
dec
sub
jmp
mov
jle
ds
iret
sub
mov
ds
mov
outsl
xchg
adc
loope
adc
shl
fdivrs
cwtl
cmpsl
enter
sub
jmp
xchg
add
mov
mov
cmp
mov
incl
cmpsl
test
pop
imull
adc
or
rol
shl
jmp
adc
les
mov
sbb
xor
xchg
sbb
clc
fld
cmp
jne
dec
sub
jge
lock
add
push
pop
jmp
cmp
xor
popa
xorb
xor
jmp
or
push
jmp
adc
and
cmp
sub
or
sbb
mov
cmpsl
dec
and
push
mov
imul
cmp
pop
inc
mov
ss
cmp
and
ss
cmp
jae
loope
jmp
or
mov
and
rolb
lock
sub
inc
mov
and
and
and
nop
pushf
cmovb
scas
xor
enter
sarl
imul
add
dec
sbb
call
dec
dec
leave
push
xchg
inc
xchg
inc
sti
cltd
test
lods
add
jle
enter
lret
pop
subb
sar
add
dec
or
shll
pusha
iret
inc
jne
xor
xchg
inc
push
xchg
test
jl
lret
or
leave
in
lods
fstl
ret
cmp
xchg
lods
test
adc
mov
sahf
aam
dec
jb
lock
mov
adc
sub
inc
jg
sbb
push
xchg
adc
adc
adc
mov
ret
in
mov
fwait
dec
fcomps
add
xchg
dec
in
mov
jecxz
mov
jne,pt
sub
movsb
stos
leave
repnz
cmp
mov
push
and
mov
lret
push
faddl
pop
call
mov
add
in
adc
add
pop
ret
jne
cmpl
adc
cltd
mov
push
fcomps
call
pusha
pop
adc
lea
cltd
add
sbb
cmpsb
in
add
in
scas
jle
jmp
mov
adc
adc
dec
aaa
addl
xchg
sbb
and
push
mov
je
aas
or
cmp
xchg
or
insb
roll
add
aas
lea
shl
fcomip
mov
out
jo
je
aaa
push
insb
loope
inc
add
push
in
fimull
fsubp
pop
add
and
add
je
neg
mov
inc
lea
adc
jne
xor
rorb
push
mov
add
or
jmp
leave
ds
cmp
scas
data16
ja
pop
or
pop
repnz
ljmpw
ret
leave
cld
jle
in
rorb
push
jns
dec
xor
or
loope
sub
push
enter
lahf
mov
push
shl
mov
out
xchg
stc
mov
cmp
test
mov
test
pop
xor
add
and
gs
cwtl
es
sbb
jl
movsl
adc
cmp
imul
and
adc
jbe
push
cmovne
lods
int3
movsl
mov
or
pop
push
cltd
pop
ret
in
pushl
js,pt
cmpsl
or
cmp
ret
push
call
repnz
pushl
adc
sub
cmp
xor
sti
inc
push
call
cli
lock
dec
cmp
insb
lds
aad
push
pop
cmp
or
shlb
jbe
mov
shr
pop
inc
in
pop
pop
sbb
mov
cs
add
repz
fucomip
subb
or
gs
xchg
fs
sbb
out
popf
jno
xchg
add
popa
test
or
and
jecxz
xchg
mov
lods
in
jbe
sahf
xor
adc
mov
push
inc
sarb
pop
xor
rcrb
inc
rcll
sbb
fs
xchg
fstpt
or
fisubs
push
mov
adcl
and
or
xchg
fwait
push
sub
cs
push
faddl
decl
cmpsl
cmp
xacquire
add
out
sub
xchg
lea
loopne
rcrl
add
mov
or
lret
je
mov
ja
dec
and
cmp
ja
push
adc
mov
nop
inc
inc
ret
sub
inc
clc
insb
dec
push
or
movnti
rcll
add
adc
nop
lods
call
mov
jns
adc
mov
subl
cli
scas
push
adc
push
rorl
cmp
icebp
or
dec
sub
push
mov
or
ret
test
fiaddl
in
ret
sub
es
cmp
loop
bound
add
dec
push
decb
pusha
jmp
std
adc
jne
pop
lret
sbb
out
pop
je
sub
ret
enter
or
cmc
add
ja
adc
adc
adc
and
lea
xchg
lcall
adc
mov
xor
pushl
iret
or
push
lret
mov
test
add
jb
mov
test
rcll
lea
push
mov
dec
inc
cmp
ja
sub
mov
imul
jle
dec
test
push
mov
pushf
stos
inc
push
mov
addr16
rclb
pop
pop
push
lea
mov
jnp
push
push
les
lock
mov
inc
push
ja
stos
xor
dec
and
test
aad
arpl
cmp
xchg
lea
jae
mov
test
adc
sti
adc
hlt
nop
and
add
and
cmpb
sbb
and
mov
dec
loope
stc
sbb
dec
vprotw
xchg
dec
xor
xor
adc
or
push
mov
cmp
xchg
jmp
dec
cwtl
xchg
mov
xor
push
call
std
or
out
jmp
loopne
sbb
cs
jp
mov
jne
mov
rorl
or
shrl
adc
rcll
cmp
add
ja
xchg
jne
mov
je
in
inc
xor
dec
push
scas
es
sub
mov
orl
sbb
or
test
xor
lea
shll
mov
or
pop
xor
subl
pusha
cmpw
pop
lock
dec
dec
cmp
orb
sbb
movsb
inc
add
std
call
dec
or
sbb
dec
adc
xchg
repnz
dec
add
xor
insb
and
imul
in
subb
adc
jbe
dec
push
inc
imul
scas
cld
jle
adc
adc
and
popf
push
push
mov
jl
or
jp
add
jo
adc
inc
xchg
jle
xor
daa
mov
cmc
xor
xchg
adc
stc
push
adc
mov
sbb
inc
popf
into
call
das
add
push
adc
xorb
mov
cmp
xchg
loopne
cmp
jmp
cmp
push
rcl
xchg
loope
pusha
leave
clc
xchg
or
inc
sbb
hlt
adc
mov
or
push
hlt
mov
adcl
jb
push
cltd
mov
pop
lock
xchg
add
push
je
call
fadds
jne
imul
shll
pop
jne
cmpsl
pop
or
fsubl
push
mov
cmp
mov
out
insl
enter
jmp
add
jge
test
mov
imul
or
mov
js
push
clc
or
adc
bound
push
loope
cli
ret
adc
jb
into
dec
jns
call
mov
cli
jnp
cwtl
add
add
sub
shr
dec
push
imul
pop
add
mov
fbld
adc
or
adc
cmp
hlt
scas
push
inc
mov
jg
pop
or
jle
cli
add
je
push
aas
jbe
push
pop
mov
cmp
and
jae
imul
add
mov
inc
decb
jne
pop
and
aas
dec
in
sub
and
lods
sbb
test
pop
add
cld
frstor
push
or
pop
add
xchg
hlt
mov
cs
or
mov
xchg
xor
or
ficomps
scas
enter
jne
and
add
dec
pop
cmp
jbe
add
aam
cmp
cmp
and
arpl
in
inc
mov
sti
add
mov
or
and
dec
add
mov
loopne
push
sbb
inc
mov
setp
mov
or
aas
rcll
cmc
iret
out
imul
xchg
push
or
insb
pop
roll
mov
gs
pop
mov
cmp
push
jne
mov
dec
push
mov
psubsb
sbb
arpl
pusha
mov
and
sbb
inc
inc
scas
negl
jne
dec
and
es
push
and
mov
mov
dec
test
inc
inc
xor
insl
dec
or
and
dec
mov
cwtl
or
xor
loope
sbb
dec
or
add
data16
push
call
and
test
or
rolb
movsb
mov
ficompl
and
dec
push
inc
or
cmpb
jp
adc
jns
js
cmpsl
imul
mov
mov
adc
mov
cltd
negb
add
shl
ret
push
enter
pop
dec
adc
push
push
dec
jmp
ja
test
popf
repz
mov
test
jbe
dec
insl
or
das
lods
push
insb
inc
mov
movsl
jle
push
movaps
xor
push
call
mov
loope
mov
xadd
add
pop
pop
and
repnz
jmp
push
test
inc
in
adc
shr
pop
outsb
or
mov
ffreep
cwtl
or
mov
stc
in
and
iret
cmc
andb
testl
adc
aas
mov
test
daa
inc
adc
out
in
dec
jae
les
inc
sub
push
jmp
or
es
or
out
test
call
test
cmp
je
push
pop
pop
lahf
mov
inc
test
orl
cs
inc
enter
pop
xchg
mov
jne
sub
jo
and
sub
xchg
fbld
ret
dec
aam
movb
lahf
add
dec
xchg
sar
cmp
push
xlat
je
les
cwtl
xor
ja
xlat
or
dec
mov
sub
mov
lret
pop
add
loope
jmp
testl
pop
icebp
pop
mov
jge
cmp
push
aas
jle
out
aad
xchg
or
and
add
cmp
test
int3
add
seta
imull
cmp
inc
inc
and
inc
loopne
decb
jne
mov
lcall
or
dec
sbb
stos
sub
xchg
lcall
outsl
test
lea
fucomp
xchg
arpl
sbb
adc
jg
cmp
stos
test
rcrb
inc
sahf
push
in
push
mov
sahf
pop
shlb
inc
decb
sub
sub
sub
cmp
divl
mov
rcll
aad
jle
jl
jmp
das
sub
or
and
jnp
pop
lea
inc
or
daa
sub
cli
lock
cld
das
xor
into
jne
in
roll
mov
mov
lea
jnp
adc
cmp
cltd
mull
dec
pop
dec
data16
add
add
or
adc
or
jne
mov
jo
xchg
mov
scas
adc
adc
xchg
ds
pop
push
mov
inc
xchg
xor
xor
sub
fisubrl
loop
jge
adc
es
jbe
test
sbb
data16
xchg
test
cmpb
and
lret
mov
orl
mov
push
fs
push
dec
jno
sub
ret
push
ret
xor
imul
stc
adc
xor
or
dec
dec
pop
sti
xchg
shl
fnstsw
push
cmpb
xchg
sbb
xchg
sbb
cmp
cmp
lock
ret
repz
cmc
std
mov
movl
push
mov
add
sub
inc
adc
sub
or
test
pop
fmull
lods
sbb
adc
or
sahf
inc
xchg
inc
inc
imul
call
jne
add
js
mov
not
and
retw
jae
mov
sbb
loopne
lea
pop
sub
ljmp
jne
push
cld
dec
cmp
add
pop
cmp
sbb
mov
cmp
adc
add
mov
popl
xor
aas
mov
pop
adc
mov
cmp
dec
ret
jae
lds
lea
repnz
mov
pushf
nop
sahf
cmc
cmp
cmpsl
mov
or
jg
gs
xor
sub
add
jge
int
mov
sub
incl
fwait
mov
xor
loop
and
hlt
and
mov
adc
or
push
inc
fistpl
or
dec
cmp
jne
pop
mov
pop
inc
call
pushf
dec
mov
sub
mov
adc
and
daa
cmp
push
test
pushf
dec
or
adc
mov
pop
add
iret
out
and
sub
jmp
call
cmp
mov
movsb
dec
mov
xor
movsl
mov
push
leave
jmp
fcoms
mov
xchg
clc
jne
push
add
dec
cmp
das
jne
jo
insb
push
into
adc
jp
push
inc
insb
nop
dec
loop
inc
ja
out
and
ja
jno
or
aaa
add
popf
or
jbe
out
loop
add
sbb
xchg
jno
dec
sti
pop
pop
out
mov
scas
imul
mov
cmp
seta
inc
bound
and
dec
adc
movsl
cmpsb
cmp
test
or
lods
scas
ret
or
dec
sbb
dec
sbb
cmc
jmp
or
inc
sub
mov
push
aad
add
test
iret
dec
xor
imul
push
push
xor
add
cmp
jne
test
or
sbb
xor
mov
mov
inc
adc
xor
mov
outsb
sbb
dec
add
mov
sub
std
orl
ror
inc
mov
xor
xchg
cmp
jl
add
push
call
dec
mov
clc
push
jae
orb
add
lock
sbb
fmull
mov
inc
mov
and
ja
mov
pop
aam
rolb
xor
notl
mov
and
ss
xchg
lahf
test
push
mov
inc
stos
cmp
orb
out
dec
push
lds
or
inc
sub
jmp
lock
jae
movsb
mov
sub
fisttps
push
movsl
mov
clc
fcoms
fs
add
xchg
jle
pop
gs
sub
ret
jge
in
cwtl
push
in
push
add
sub
jns
pop
or
fmull
add
and
out
dec
inc
push
mov
gs
and
shll
call
xor
movsl
je
jnp
gs
mov
les
pop
mov
lret
sbb
jbe
or
mov
je
jmp
out
test
jne
ret
pop
sub
cmp
bnd
push
dec
or
stos
enter
loope
sbb
rcrl
push
jb
clc
or
or
jle
inc
sub
pop
stc
arpl
enter
mov
adc
adc
inc
add
pop
jne
pop
incl
push
daa
and
xchg
or
call
or
and
sti
out
mov
inc
mov
jle
or
sbb
adc
sub
testl
cmp
sub
add
cmp
lret
jl
sbb
pop
add
adc
mov
outsl
lods
or
cmc
dec
inc
sub
xchg
cmp
jb
mov
inc
orl
es
les
xor
or
push
inc
push
cld
call
es
orl
jge
clc
jb
inc
ss
mov
je
cli
hlt
sti
mov
aad
or
sub
cmp
test
push
or
popf
inc
and
mov
call
inc
ja
repz
sub
xchg
out
loopne
incb
ja
add
adc
add
cli
mov
push
roll
push
stos
mov
jne
jne
inc
sbbb
cli
hlt
push
cld
mov
jle
mov
mov
hlt
gs
sbb
ljmp
adc
inc
push
popf
jno
add
inc
push
jne
mov
and
or
enter
cmp
add
sbb
shlb
or
lret
inc
inc
adc
sub
lret
dec
mov
xchg
dec
decb
test
test
sbb
jmp
jbe
sub
bound
mov
push
sbb
lea
jg
or
push
or
cmp
lea
pop
and
and
adc
mov
loopne
popa
jmp
ret
mov
dec
cmp
add
jle
scas
sarb
add
jae
mov
xor
push
cmp
jmp
pop
movsb
jae
and
cs
and
mov
cmp
mov
cltd
pushf
pop
ret
jmp
inc
mov
jne
call
sbb
jae
notb
mov
roll
pop
rcrb
and
sbb
lock
push
sub
cwtl
add
mov
xchg
ret
daa
ret
adc
inc
imul
jmp
les
cmpsl
jo
sbb
mov
rcll
mov
sbb
psubq
or
jns
and
and
icebp
xchg
xchg
in
xor
inc
sub
orb
or
cmpsb
add
sub
mov
add
movsb
inc
loope
jmp
jae
aam
sarl
add
push
inc
rcll
adc
jae
mov
aaa
hlt
sbb
mov
push
out
arpl
ja
clc
lock
cmpsb
sub
jae
adc
mov
cmp
loopne
inc
xorb
pop
mov
push
inc
stos
and
add
sub
cmp
push
shrd
rcr
arpl
xchg
icebp
mov
cmp
jae
xchg
idiv
sbb
adc
sbb
jb
testb
je
push
adc
inc
daa
stos
bound
aad
mov
call
mov
and
xchg
lds
sbb
adc
sti
bound
xor
cmp
es
pop
andb
in
je
push
sbb
jo
popa
jmp
mov
and
pop
mov
push
pop
jecxz
cmp
lock
test
addw
and
lret
or
sub
ret
rorl
adc
push
and
add
inc
or
rcrl
lods
inc
push
and
cmp
pop
sahf
aad
enter
cmp
add
test
repz
nop
es
push
mov
or
adc
jne
cltd
xchg
xlat
and
push
or
xchg
ficoms
cltd
out
xor
add
neg
enter
xor
dec
sbb
add
mov
sub
mov
shrb
mov
mov
push
pop
call
movsb
sbb
push
xor
int
add
mov
cmp
adc
jl
cmp
sub
dec
xlat
mov
test
mov
mov
add
cmp
adc
inc
call
out
push
mov
xor
mov
lods
ret
jne
add
push
cmp
and
mov
adc
mov
pop
and
orb
push
xchg
out
lds
jle
daa
cmpsb
cld
push
movsb
mov
mov
dec
movsl
shll
or
lds
and
movsl
xchg
mov
pop
fiaddl
jge
movsl
push
xchg
movsl
push
adc
jb
loope
ja
mov
cmp
rolb
jle
out
or
or
daa
adc
rolb
mov
in
dec
ret
test
lds
shrl
ficompl
clc
push
jg
pusha
fsubr
sub
inc
iret
or
dec
adc
or
dec
lcall
mov
or
sub
mov
inc
mov
xlat
inc
jne
mov
xor
nop
sbb
pop
aaa
cld
and
inc
jmp
mov
jne
pop
or
jmp
bound
and
add
aad
cwtl
add
inc
test
cmp
push
aas
enter
xchg
jle
imul
jmp
sub
sahf
testl
sarb
loope
adc
outsb
lods
mov
jg
testb
jge
leave
jnp
jne
and
mov
xor
or
aas
push
sbb
dec
adc
rclb
les
jno
add
push
jle
mov
pop
xadd
je
testb
xor
xchg
push
std
cld
ret
in
jmp
mov
push
and
clc
push
rcrl
inc
mov
or
mov
fidivl
cmp
je
mov
cmc
lock
inc
push
decl
clc
data16
or
sbb
xor
out
mov
adc
add
stos
scas
mov
cmpsl
scas
mov
pop
aad
jecxz
mov
lods
dec
dec
icebp
imul
out
iret
cwtl
mov
xor
xchg
lret
sub
mov
mov
add
inc
jo
add
jo
push
sbb
jb
lret
cmp
pop
mov
mov
xorb
jl
inc
xor
lahf
pop
adc
mov
mov
push
stos
cs
sbb
mov
aad
idivb
mov
mov
add
mov
ja
mov
and
adc
enter
in
mov
jo
and
scas
test
or
jmp
shrl
sbb
xchg
push
addl
pop
or
jae
int
mov
aad
shll
or
adc
je
inc
repz
dec
xchg
pop
xchg
and
mov
inc
mov
inc
xor
dec
jne
adc
mov
jmp
pushf
mov
cld
pop
sbb
sbb
add
push
rclb
and
jne
loop
pop
je
hlt
push
loop
mov
sub
mov
ds
dec
outsb
pop
call
or
or
or
jns
pushf
rcll
push
add
push
inc
xchg
pop
and
movl
adc
test
pop
arpl
mov
lods
cmpsb
sub
inc
shll
add
jbe
pop
xor
cld
sub
or
xchg
add
pop
pop
mov
and
lock
inc
mov
jnp
sbb
xchg
add
sub
cmp
mov
cmp
sub
push
and
loope
je
out
push
insb
clc
or
mov
jb
mov
dec
icebp
push
xchg
or
je
imul
pop
inc
mov
mov
lret
mov
add
hlt
pop
fdivr
int
dec
and
stos
rorb
imul
sub
cli
push
in
cmp
sbb
adc
adc
and
mov
mov
sub
stc
add
or
call
xor
jo
scas
cmp
adc
lock
aas
fdivl
dec
push
insl
sbb
call
sbb
adc
stc
daa
mov
fwait
scas
lds
fidivrl
xlat
stos
insl
adc
cmpb
ret
jmp
frstor
clc
stos
mov
daa
adc
pop
je
lahf
mov
mov
cld
mov
arpl
nop
push
jne
lea
mov
sarl
pop
ret
lea
adc
mov
popl
add
cmp
sub
fnstenv
inc
imul
in
popa
or
idiv
call
or
sbb
fldl
jb
mov
les
je
incl
call
xchg
imull
cld
dec
adc
push
sub
sbb
pop
and
cmpb
daa
popf
andl
leave
lock
fisttpl
lahf
rcll
cmp
sub
ret
adc
test
int3
cmp
jb
sbb
call
pop
dec
push
rcrb
loop
adcl
jb
sbb
rcrb
xor
adc
stc
mov
cwtl
div
inc
les
adc
or
or
xor
fcoms
jo
test
loop
or
enter
sbbb
jge
dec
std
pop
dec
es
cmc
daa
test
repnz
add
jns
neg
and
sub
jl
aam
cmp
cltd
pop
idiv
or
rol
fcmove
das
or
mov
xchg
es
pop
gs
add
lock
adc
dec
xchg
sbb
rcrl
xor
ret
and
test
pop
int
push
shll
pop
pop
aad
imul
xor
or
add
dec
ret
or
in
and
lret
std
add
movb
lea
lods
dec
jo
dec
adc
pop
push
call
negl
add
clc
and
inc
mov
and
pop
pop
pusha
cli
add
inc
or
out
lock
jmp
into
or
lret
jl
inc
fs
pop
dec
pop
int3
push
adc
dec
scas
call
dec
frndint
sub
pop
adc
fsubrs
rcll
jmp
jmp
pop
xchg
xor
mov
cmp
pop
setl
mov
clc
dec
jbe
adc
adc
and
ror
or
pop
inc
sub
push
stc
and
push
push
xchg
xchg
fsubl
xchg
jmp
push
adc
adc
or
repnz
push
add
enter
and
lds
daa
out
das
loop
dec
xchg
and
jae
push
jge
or
xor
data16
adc
push
mov
sbb
clc
aad
in
sbb
adc
vpaddb
sub
das
mov
sbb
int
push
dec
lods
xor
roll
notl
rclb
and
les
or
lock
jne
dec
popa
stc
adc
test
and
sbb
add
mov
cmp
and
lret
inc
or
or
pop
xlat
stc
pop
test
and
dec
adc
std
cld
push
or
arpl
les
jbe
popa
or
and
inc
loopne
cmc
push
sbb
sbb
sub
inc
and
pop
cmp
int
imul
hlt
dec
sbb
push
jbe
push
mov
xchg
pop
movsl
rcll
mov
das
leave
ret
push
das
dec
add
and
push
xor
and
jns
push
mov
rcl
add
sub
hlt
and
call
inc
fisttps
addl
jmp
in
decl
stos
dec
adc
mov
shlb
mov
bound
test
sbb
cmpsb
adc
movsb
pop
call
add
testb
flds
jle
repnz
cmp
fstpt
rolb
adc
mov
or
mov
mov
ss
stos
mov
aam
loopne
enter
fistpl
je
push
lret
push
in
lds
nop
mov
jne
or
loope
lea
jle
fcoml
shlb
ja
jp
jmp
test
rclb
dec
bnd
push
cmp
lods
les
repz
add
dec
ret
sub
push
lods
ror
ja
sub
in
or
mov
lret
xor
test
mov
push
push
lea
pop
mov
add
push
mov
jae
lea
push
pop
inc
mov
pop
or
rolb
jmp
mov
cli
pop
int3
adc
es
shlb
or
adc
mov
sub
test
and
jo
jp
pop
sub
mov
xchg
addl
pusha
push
or
pop
cmp
inc
inc
adc
lock
in
cwtl
and
or
inc
call
sti
les
aad
add
push
decl
adc
push
test
scas
lret
mov
add
and
and
dec
fsubrs
fwait
movsl
test
add
jg
arpl
int3
insb
mov
je
dec
lods
into
adc
adc
pop
sub
jmp
dec
movsl
cmpsb
sub
adc
dec
mov
inc
sti
scas
cmc
loop
mov
je
mov
lea
mov
dec
fwait
dec
push
cmp
mov
adc
inc
jge
add
adc
bound
call
lods
jl
cmpl
aam
xor
or
xor
inc
add
lods
hlt
imul
leave
jg
sbb
test
pop
clc
lahf
xchg
loope
sar
fucom
pop
call
fcomp
add
pop
jle
pop
sarl
shlb
xchg
cmp
jne
lock
clc
sbb
icebp
out
mov
stos
fisubrl
jmp
pop
or
mov
sbb
mov
adc
xor
and
xchg
sub
roll
decb
fsts
push
dec
lods
dec
add
ret
dec
inc
xor
dec
pushf
test
adc
mov
adc
or
adc
xor
dec
jo
xchg
lcall
and
add
arpl
mov
stos
mov
add
out
lahf
dec
push
inc
je
add
int3
inc
pop
or
shll
add
or
add
mulb
in
movsb
push
dec
test
or
mov
enter
cmc
xchg
sti
xor
push
push
cmp
jge
lea
sub
or
mov
hlt
inc
sbb
or
dec
jne
mov
inc
je
xchg
test
dec
inc
or
jo
nop
sub
addl
inc
xchg
enter
cmp
add
cmp
adc
cmp
mov
mov
test
or
fucomp
inc
push
and
in
movsb
ljmp
add
pop
mov
mov
adc
mov
xchg
in
jl
dec
sar
lea
adc
jne
lea
mov
or
adc
je
psubsb
call
or
into
and
and
adc
out
or
inc
fadds
ds
or
and
std
sbb
ja
mov
push
je
sub
xchg
jle
test
mov
enter
mov
fmuls
xor
push
cmp
push
je
cmp
popl
add
cmc
movsb
or
pop
ds
mov
pop
test
dec
or
add
call
cmp
je
push
jp
addr16
inc
cmpb
xchg
and
daa
imul
push
repnz
out
add
add
pshufw
aam
fisttpll
test
mov
or
push
xor
pusha
dec
pop
cltd
adc
adc
mov
leave
jg
cwtl
sbb
inc
aam
adc
cmp
lock
popf
jle
lds
lea
sti
adc
out
or
mov
or
test
mov
stos
stc
xor
push
sahf
dec
xchg
pop
push
ss
push
adc
dec
mov
push
popf
sbb
rcrb
jno
andl
jne
imul
push
mov
and
stos
or
dec
push
and
inc
sub
add
inc
pop
std
cmp
add
add
inc
dec
or
jmp
stos
or
xchg
inc
bound
jmp
movsl
adc
lahf
mov
xchg
andl
sahf
int
rorl
je
adc
jne
xor
dec
adc
pushl
sahf
dec
out
leave
ret
sub
add
test
mov
mov
sbb
add
fsubrs
movsb
xchg
dec
sub
add
xchg
das
dec
cwtl
sbb
loopne
lock
mov
jmp
jo
or
mov
sete
jmp
rorl
adcb
push
sub
mov
les
xorl
jge
mov
aad
sub
fldcw
push
sbb
and
and
xor
and
add
aam
movsb
xor
and
cmovo
add
adc
pop
cmc
dec
xor
daa
dec
fcmove
lock
lods
rorl
jne
aad
rcr
cs
mov
scas
bound
btr
mov
adc
sbb
add
inc
xorl
push
ret
cmp
test
inc
cmp
sbb
stc
pop
or
sub
jg
jae
sar
xchg
rorl
stos
add
xor
xlat
shlb
jmp
je
xor
hlt
movsl
int
jo
and
cmp
scas
mov
mov
push
or
adc
sub
sub
add
dec
cmpsb
mov
je
popa
cmp
jecxz
mov
imulb
sti
out
enter
iret
imul
add
pop
popf
sub
xchg
cmpb
mov
pop
pop
sub
mov
jecxz
call
ret
sbb
xchg
mov
ret
dec
and
and
hlt
fisttpl
sbb
movb
or
cmc
inc
sbb
loop
stos
loop
insb
pop
data16
ja
xor
mov
xchg
idivb
rcr
jge
outsl
xchg
inc
sbb
lods
push
ja
cmp
mov
ret
jns
mov
addl
test
shll
andb
inc
inc
mov
mov
shrl
dec
jl
mov
dec
xor
pop
jle
push
add
pushl
pop
mov
dec
loope
xor
or
jne
dec
cmpsb
mov
add
ret
pop
outsl
addr16
popa
mov
incb
add
cmp
jl
lds
in
cmp
cmp
test
addl
push
negb
mov
ret
dec
leave
push
test
test
push
scas
addr16
or
jae
mov
mov
push
sub
mov
or
or
add
mov
stos
xchg
add
pop
outsb
stc
xchg
pop
push
enter
sbbl
scas
and
mov
mov
psubb
mov
add
lds
nop
popf
or
subl
insl
jp
xor
push
jo
or
mov
sahf
in
sub
or
mov
jl
jne
jne
push
xor
inc
sbb
push
adc
ret
sbb
popl
xlat
adc
mov
add
imul
and
cmpsb
pushf
mov
cmp
xor
add
dec
cs
xchg
add
pop
pop
ret
int3
pop
push
inc
xor
pop
dec
jge
xchg
adc
pop
fwait
push
or
inc
lcall
clc
push
xchg
sub
sub
insb
jle
jae
jnp
movsb
ret
lea
jbe
inc
jl
sub
test
test
mov
js
dec
push
lahf
push
adc
les
cmp
imul
clc
sbb
icebp
add
push
cmp
lods
or
jmp
xor
jmp
mov
dec
lret
inc
pop
push
xchg
sbbb
mov
call
inc
sbb
or
call
push
loop
and
popa
lea
cmp
jl
and
jg
bound
or
cmp
adc
out
dec
out
and
mov
pop
cmp
repz
adc
push
mov
outsb
out
cmp
sbb
loope
insl
jg
push
mov
sbb
icebp
adc
xchg
sbb
daa
sbb
jns
sub
aas
movsb
or
jno
cmp
jno
adc
lock
arpl
cmp
sub
dec
push
negl
pop
push
push
jl
insb
push
pop
cmpsb
push
and
mov
test
in
sub
aaa
test
aad
lds
dec
push
xlat
mov
pop
std
mov
adc
and
adc
aad
sub
inc
sub
jmp
in
into
stos
xor
or
call
iret
in
cltd
mov
jl
and
and
call
dec
mov
shlb
jbe
jns
push
sbb
imul
adc
inc
adc
mov
mov
jb
dec
sbb
sub
push
adc
push
pop
mov
and
pop
mov
adc
mov
shrb
test
cmp
jge
or
mov
mov
pop
cmc
in
outsb
pop
in
and
es
mov
sbb
push
sbb
out
mov
cmpsb
add
testl
movsb
pop
sar
fidivrl
ljmp
ret
mov
and
pop
push
jns
jns
lret
bound
cmc
push
dec
nop
push
add
ret
call
cmpb
adc
scas
adc
pop
add
cs
adc
cmpsb
jo
add
pop
xor
ror
gs
out
mov
movsl
out
popf
sar
adc
mov
or
pop
jg
cwtl
mov
cmp
cmp
les
jle
xor
adc
cmp
inc
cmp
lret
je
mov
cmp
or
pop
jmp
pop
adc
mov
mov
jle
cmp
sub
das
and
xchg
scas
or
sub
test
test
jne
push
jb
mov
adcb
test
pop
ds
push
push
aas
cli
shll
dec
inc
lret
mov
push
lret
bound
out
inc
inc
imul
shrl
inc
xor
or
test
shld
ret
dec
sarb
xchg
loop
and
scas
enter
add
je
cmp
lods
lock
fidivl
loope
loope
das
stc
adc
sbb
std
lds
stc
or
push
fcompl
negb
je
ljmp
xor
xor
ljmp
xchg
sti
int3
add
dec
out
loop
jge
ret
test
leave
loope
add
sbb
mov
movsl
or
add
pop
push
jle
dec
loope
xchg
sub
leave
add
imul
fs
or
push
pop
mov
and
fstpl
xchg
add
in
push
and
lahf
imul
xchg
mov
sub
out
sbb
pushl
arpl
mov
lock
cs
cwtl
leave
aad
aad
push
push
push
jmp
repz
xor
xchg
loopne
xchg
pusha
push
cmp
cmpsl
and
adc
push
lea
lahf
cmp
popf
shll
jg
and
js
pop
or
xor
or
lock
and
fcoml
inc
js
xor
subps
inc
inc
cmp
xor
sub
jg
and
js
test
xchg
mov
std
and
rolb
sbb
or
inc
fisubrs
int3
sbb
jo
fucomip
and
ficomps
dec
pop
les
or
mov
adc
and
dec
hlt
mov
fidivrs
and
dec
and
or
dec
mov
in
je
push
mov
mov
push
or
lea
jae
mov
cmp
dec
sub
and
cltd
adcb
test
stc
enter
inc
mov
cltd
call
push
xor
ret
sbb
cmpsl
push
mov
mov
add
jmp
call
fists
xchg
fildl
push
mov
push
sub
outsl
call
test
mov
call
fwait
or
hlt
js
into
or
test
pop
testb
cwtl
orl
pop
push
scas
adc
and
or
loop
push
push
pop
and
daa
aaa
shl
pop
xor
pop
dec
lods
mov
loopne
push
jne
cmc
push
jae
shrb
xlat
and
aam
mulb
add
add
aas
sub
sarb
pusha
pop
pop
aas
roll
pop
call
ljmp
adc
stos
push
imul
dec
sbb
jl
cmp
test
push
std
outsb
jp
call
incl
adc
or
mov
cmp
or
test
sarb
lcall
out
mov
and
sub
jmp
push
pop
adc
sbb
add
hlt
movsb
and
inc
sub
lds
cltd
je
xchg
or
stc
dec
cmp
les
mov
xchg
inc
xlat
push
ja
or
pop
fildll
das
pop
and
mov
jg
push
outsl
je
jp
js
dec
sbb
sbb
add
and
sbb
aaa
adc
aaa
cs
add
push
adc
and
xor
bound
test
je
or
shll
dec
adc
cmp
enter
mov
subl
decb
clc
stos
and
push
or
xchg
and
or
sbb
imul
fdivrs
fistps
sbb
ds
jmp
inc
lock
mov
testb
lret
push
mov
mov
jno
and
cmp
cs
test
movsb
cmpsl
inc
or
pop
mov
dec
repz
lret
or
int3
ja
mov
imul
cmp
jne
mov
cmp
cmp
dec
xchg
sahf
movsl
out
idivl
push
dec
xorl
xchg
outsb
adc
add
lock
ficoml
test
push
mov
sbb
pop
or
sti
leave
adc
lds
mov
scas
sbb
pop
aad
pop
dec
push
sbb
mov
addr16
or
icebp
adc
sub
fldcw
imul
sahf
not
and
or
ret
movsb
mov
das
cld
into
xchg
insl
dec
jg
imul
xor
mov
shll
or
adc
adc
mov
fmull
adc
iret
xlat
cli
push
sti
mov
push
mov
mov
xor
and
mov
int
loope
xchg
adc
je
cmp
jne
sub
mov
lds
rorl
sarl
int
in
lea
outsb
pop
add
pop
pop
pop
js
xchg
push
push
jnp
pop
pop
movsl
mov
addl
xchg
lea
dec
mov
inc
mov
imul
shll
jne
clc
or
mov
or
push
xor
or
dec
push
ret
jbe
cmp
pop
push
push
addl
dec
adc
shrl
lods
addr16
lock
jl
fists
test
sbb
lret
call
loop
rolb
sbb
inc
incb
jge
jecxz
filds
sbb
lods
and
mov
xchg
pop
push
xchg
and
mov
stos
mov
adc
jne
sbb
pop
pop
push
adc
call
push
dec
js
cmp
add
adc
std
loop
pop
add
mov
pop
divl
mov
pop
add
ret
sub
mov
enter
xchg
mov
adc
into
inc
mov
inc
mov
decl
push
push
cmovb
push
cld
dec
mov
pop
ficoms
mov
pop
rcll
adc
ficoml
rep
test
pop
add
mov
cmp
add
scas
scas
and
xchg
iret
stos
and
int3
inc
and
push
and
dec
sub
jge
pop
cld
or
test
daa
mov
cmp
xor
subb
sub
clc
mov
into
push
aaa
call
xlat
daa
sbb
ret
dec
xlat
mov
mov
cwtl
hlt
mov
jbe
jne
sub
pop
fnstsw
jb
jl
ret
push
push
adc
cmpl
das
jns
jns
sbb
pop
dec
or
fsts
xor
pop
push
in
flds
mov
and
jmp
aas
inc
push
clc
shl
and
add
hlt
mov
cmp
xor
loope
push
jns
sbb
and
hlt
jno
inc
pop
mov
adc
enter
adc
pop
mov
in
add
inc
pusha
mov
sub
dec
pop
icebp
sub
jmp
cmp
jg
sub
push
lock
pop
adc
adc
dec
mov
std
push
xchg
or
and
xchg
pop
sub
cwtl
xor
jl
cmp
fldcw
push
pop
push
mov
mul
push
adc
mov
dec
cmp
aaa
nop
mov
pop
scas
and
and
add
call
imul
or
push
mov
or
in
rcr
inc
aad
cmpsb
cs
clc
mov
popa
or
jne
pop
hlt
xor
xor
mov
mov
mov
and
add
xor
lods
aad
xchg
push
std
sbb
test
aas
sub
cmp
jge
ja
mov
add
movb
test
std
in
outsb
cmp
int3
mov
jl
stos
inc
and
pop
mov
sub
out
xor
jmp
push
cmp
cmp
ja
fbstp
push
cmc
inc
loope
xor
rclb
call
mov
dec
aaa
repnz
ja
push
push
dec
out
popa
push
mov
dec
ret
stc
push
aaa
test
icebp
pop
sub
xor
inc
mov
movsl
loop
out
xor
cmp
sbb
adc
xlat
mov
test
fisttpl
test
mov
data16
inc
adc
mov
enter
rcrl
mov
mov
adc
mov
and
pop
lods
stos
adc
in
dec
sub
mov
mov
and
call
inc
sub
data16
jmp
dec
inc
add
push
and
mov
loop
fldl
js
jnp
mov
into
sub
movsl
arpl
leave
mov
pop
or
lea
mov
add
lret
jmp
inc
adc
iret
lcall
popa
or
aam
mov
repz
inc
movzbl
mov
lods
popl
popa
pop
loop
add
lods
and
add
pop
bound
daa
or
movsb
das
js
mov
dec
les
push
std
ja
mov
push
int3
or
sbb
or
cltd
push
call
sub
jp
inc
add
mov
cmpsb
add
shlb
jmp
aad
push
or
loopne
push
mov
ja
int
scas
push
sbb
pop
mul
dec
adc
mov
add
cs
aad
das
push
out
jne
inc
inc
jp
pop
sbb
fwait
mov
loop
leave
mov
aas
push
mov
loop
and
dec
dec
inc
sbb
pop
int3
xor
sbb
mov
or
ja
cmp
push
in
mov
xchg
mov
xchg
sub
inc
lock
testb
mov
push
call
mov
cld
aas
add
and
xor
call
or
mov
mov
adc
pop
in
jmp
mov
pop
nop
push
cmp
dec
push
ds
push
testb
jmp
dec
dec
subb
test
sub
or
xor
inc
add
pop
and
xchg
dec
outsb
fstl
xchg
xlat
add
mov
xchg
hlt
test
jl
xchg
adc
pop
xchg
ret
jge
test
push
and
push
rclb
or
ds
fisubl
testb
movsl
mov
mov
mov
push
adc
fcoml
gs
cltd
hlt
jl
and
sbb
pop
or
or
pop
and
adc
jmp
or
xchg
mov
sub
dec
add
cmp
jb
inc
into
jae
xor
xor
pop
mov
imul
das
jl
push
aaa
imul
lret
fcoms
inc
push
clc
xor
mov
adc
add
inc
or
ja
xchg
xor
xchg
push
xor
add
cld
sahf
or
or
pop
fcomi
jmp
ret
outsl
xlat
out
add
ljmp
rcrl
fbstp
mov
repnz
cs
or
or
mov
sbb
jae
pop
xchg
jae
cmpsl
mov
stos
or
inc
orb
push
or
push
lahf
jb
pop
repz
movsl
pop
cld
call
push
or
add
pop
sub
frstor
mov
or
movsbl
loope
push
sbb
cmp
inc
push
jne
enter
lock
dec
or
mov
adc
loopne
out
cmc
stc
loope
mov
lret
sub
add
and
stc
cltd
adc
adc
stc
push
data16
pop
jmp
orb
inc
pop
xchg
in
gs
movsb
mov
rcrb
pop
call
xor
faddl
or
adc
and
inc
clc
in
jmp
and
ljmp
or
out
or
mov
add
or
xchg
nop
or
test
or
xor
cmp
pop
mov
jmp
jno
mov
add
nop
add
je
push
dec
fsubrl
aam
stos
gs
test
sbbb
into
pop
jmp
cmpsl
call
sahf
aam
mov
movsl
jle
scas
dec
dec
mov
mov
or
jmp
mov
mov
sbb
inc
jle
xor
jnp
gs
jb
adc
jmp
lock
rcl
cmpsb
enter
push
dec
lcall
or
mov
mov
mov
adc
jbe
push
ret
inc
mov
scas
cmc
insb
outsl
sarl
push
mov
dec
mov
adc
jmp
or
stos
test
sub
mov
or
test
mov
mov
fdivl
jne
out
pop
stos
add
xchg
repz
hlt
scas
sbb
mov
call
and
adc
int3
sub
aad
out
pop
lcall
jmp
mov
lea
and
inc
cmp
mov
outsb
dec
add
push
jmp
sub
orl
scas
imul
adc
or
jl
ret
and
push
pop
dec
jmp
pusha
jne
jmp
mov
sub
mov
pushl
ror
mov
sbbl
jmp
adcl
adc
movsl
xchg
inc
jmp
lock
sbb
popa
cmpsl
xor
aas
imull
leave
cmpsl
incb
pop
sbb
and
mov
pusha
or
push
adc
jg
ret
jno
popa
push
sbb
and
mov
add
pop
cli
mov
cmp
pop
cmp
add
add
imul
and
dec
shll
jmp
adc
movsl
push
mov
cmp
fcmovnu
aaa
repnz
clc
pop
mov
sti
dec
sbb
ja
push
in
mov
adc
fadds
dec
xchg
adc
sbb
pop
sub
jle
lahf
jne
fcmovnbe
stos
popa
fidivl
push
push
cmp
aam
gs
push
xor
mov
pop
jae
stos
push
rolb
pop
cmp
jp
inc
sarb
stos
adc
add
xchg
ret
xor
sti
jmp
mov
inc
hlt
stos
lods
or
xchg
add
adc
movsl
pop
test
or
jae
cs
add
in
mov
pop
dec
out
mov
mov
lock
and
icebp
inc
imul
adc
xor
inc
cs
pop
enter
sub
sarb
nop
and
in
out
out
call
jmp
in
and
inc
out
sti
add
mov
inc
add
sub
std
sbb
shlb
push
or
mov
sub
les
add
add
jmp
lock
jp
mov
cs
mov
movq
lret
sub
sti
push
incb
test
in
xchg
dec
mov
inc
and
push
and
cmp
shlb
pop
xchg
roll
outsb
shrl
or
cmp
xor
xchg
adc
shlb
sbb
rclb
dec
leave
out
or
gs
or
push
cli
imul
dec
jge,pt
lahf
mov
lret
in
mov
js
or
movswl
test
push
mov
call
inc
cmpw
aas
jb
and
inc
dec
sbb
testb
mov
insl
add
or
jmp
jge
adc
pop
inc
xchg
andl
sub
adc
mov
pop
jne
mov
fiadds
jle
sbb
ss
sub
nop
and
push
cli
ds
jne
in
sbb
push
sbb
sbb
adc
cmpsb
testl
lcall
inc
dec
add
or
lock
add
loopne
mov
stc
add
xor
shll
adc
icebp
popf
call
decl
sub
mov
push
in
jl
andb
mov
fs
or
xor
xchg
cltd
hlt
pop
fnstenv
add
xorb
arpl
rcr
dec
jo
pop
mov
pop
ljmp
stc
stos
cmp
cld
pushf
mov
and
xor
loope
jmp
subl
mov
nop
cli
mov
data16
in
add
pop
jmp
mov
fidivl
xchg
and
das
aas
pushw
dec
or
jae
xchg
in
jae
cltd
in
inc
pusha
push
xorl
lret
out
popaw
cmp
xor
or
jae
stc
mov
push
lods
sbb
std
jnp
and
ja
fsubs
cmp
jg
mov
adc
jno
and
cmp
mov
pop
pop
and
sub
sub
push
xor
inc
cmp
stos
add
push
adc
push
xor
imul
push
cwtl
cld
cwtl
and
or
inc
mov
dec
shrb
ljmp
shl
fstps
adc
mov
rol
cld
sbbl
push
pushl
xchg
xor
fcoml
xchg
cmpsl
popf
jmp
cmp
sbb
push
call
cld
adc
or
adcl
and
add
fimuls
call
adc
mov
pop
cmp
push
push
xor
negb
nop
xchg
add
mov
icebp
aas
rclb
dec
dec
xchg
mov
cmp
lock
jnp
icebp
cmp
xor
xchg
sub
sbb
adc
cmp
push
mov
xor
rcr
push
sub
push
lret
mov
aam
hlt
xor
and
sti
dec
or
push
test
adc
or
push
push
push
nop
fldenv
ss
mov
inc
xlat
in
in
fmuls
andl
push
inc
jo
mov
std
mov
add
je
jge
rorl
outsl
in
ljmp
jno
shlb
inc
and
adc
add
or
and
cmpl
popa
adc
hlt
adcl
aad
push
jb
call
in
mov
and
jns
inc
cmp
mov
dec
mov
sbb
pop
ja
sbb
and
and
cmc
sbb
aaa
and
shlb
sbb
je
aaa
pop
cmp
mov
jmp
in
mov
push
jno
leave
call
fcomps
pop
inc
out
das
test
lcall
xor
adc
ret
adc
rcrl
xchg
push
push
add
js
add
out
sub
aaa
test
aam
imul
mov
xchg
or
inc
adc
cltd
push
cltd
movsl
dec
push
lahf
xor
push
or
jae
or
test
in
ret
xchg
sbb
or
scas
mov
or
aad
adc
cmp
test
add
cmp
xor
lea
mov
int3
test
mov
cmp
dec
lock
push
inc
add
std
adc
push
add
dec
jl
ficoml
mov
cmp
mov
mov
jmp
jnp
xchg
notb
fildll
std
dec
push
xchg
rorl
push
dec
pop
mov
adc
xchg
mov
cltd
ja
sub
inc
mulb
fidivs
push
push
push
movsb
xchg
popa
dec
fists
call
mov
lods
rcll
shlb
jg
mov
inc
xchg
mov
inc
push
daa
inc
repz
and
mov
add
adc
out
mov
ud0
pop
or
mov
mov
sub
sar
clc
xchg
cltd
scas
scas
dec
nop
or
xor
dec
nop
es
cs
or
inc
jmp
and
bound
call
sbb
cld
insb
movsl
or
movsl
or
fsubl
mov
pop
les
and
push
movsb
mov
mov
and
imul
das
pop
lcall
data16
subl
aam
fildl
test
push
imul
push
add
insb
inc
sbb
or
es
xor
mov
inc
lea
cltd
xor
and
dec
xchg
pop
loop
fsubr
pop
xchg
cs
enter
je
adc
mov
dec
adc
jbe
xor
ret
pop
sbb
cmc
scas
repnz
clc
or
ret
add
mov
or
cmp
sbb
add
jnp
movsb
mov
sbbb
lea
mov
ss
loopne
sbb
jp
in
xchg
sti
or
test
sbb
fstp
fdivrl
pop
cmp
rcr
push
jo
lcall
in
jp
add
add
js
mov
mov
mov
and
loop
sti
aam
scas
add
iret
mov
mov
adc
imul
fcom
and
add
popl
add
aaa
sbbb
pushf
shlb
xchg
test
es
lock
sbb
cwtl
test
inc
addl
sub
lahf
nop
add
xor
cmp
add
cwtl
cltd
ret
sarb
das
inc
dec
dec
add
lods
fucomip
pop
js
add
lods
pusha
iret
cmp
pushf
push
add
scas
add
adc
fdivrs
nop
jb
mov
sub
inc
dec
and
add
add
int
out
mov
sub
mov
add
add
add
add
hlt
add
lret
test
decb
rclb
jb
or
adc
push
adc
leave
adc
sbb
push
test
inc
push
xor
add
cmp
add
adc
adc
pop
sbbb
std
push
and
rcrb
mov
addl
int
movsl
out
sbb
xorb
mov
and
and
into
jns
add
sti
rorl
and
rorb
push
jno
add
cmc
stc
jl
mov
jge
aas
lret
test
int
cwtl
jmp
sarb
cli
or
push
es
sbb
addl
popf
bound
test
push
sub
nop
add
jnp
cmpsb
shrb
popa
jne
faddl
lret
ficompl
mov
out
ljmp
push
nop
shll
daa
mov
mov
jecxz
mov
sub
incl
xchg
jae
hlt
mov
orb
add
outsl
adc
add
pop
and
sbb
push
mov
inc
add
cmp
sbb
cmp
pop
mov
ljmp
add
pop
dec
inc
pushf
cli
mov
cld
addl
add
fs
icebp
ret
hlt
cmp
xor
out
clc
or
xchg
push
mov
cmp
ds
xor
dec
push
dec
mov
int
xchg
inc
and
sbb
ds
mov
test
inc
xchg
adc
add
jae
arpl
in
jb
add
jl
je
mov
fistps
push
or
sbb
pop
in
jp,pt
adc
iret
rorb
cmp
lods
and
shlb
add
add
subb
js
jno,pt
sub
sbb
inc
pop
in
sarb
cmp
aam
insl
adc
and
pushf
sbb
inc
mov
mov
pop
mov
sbb
add
fwait
call
add
xchg
gs
pop
sub
add
inc
nop
sti
add
lea
shrb
add
dec
push
xor
loopne
add
sub
shrl
add
xchg
mov
or
mov
arpl
mov
pop
push
xorb
enter
mov
test
jne
add
push
push
rolb
call
dec
out
add
xchg
es
and
fildl
push
testb
add
cmp
pop
add
inc
loop
pop
cmpsb
aas
mov
pushf
inc
mov
sbb
mov
xor
jle
imul
add
dec
mov
add
mov
add
mulb
roll
xchg
sub
cmp
ss
add
mov
test
inc
out
add
sbb
stos
add
sub
adc
inc
fstl
scas
mov
add
rolb
fsubs
mov
cmp
xchg
xor
gs
jne
add
imul
ret
jp
popf
sahf
add
shlb
mov
jg
cmp
lcall
sbb
cmp
outsl
in
movl
jnp
faddl
cmp
test
jecxz
and
pop
add
test
adc
stos
sub
sub
fcomps
cwtl
dec
sbb
iret
flds
movsb
xchg
add
cli
add
stos
inc
mov
lahf
pop
mov
int3
add
push
sub
xchg
sbb
icebp
adc
repnz
mov
paddb
sub
loopne
add
jnp
pop
das
cmc
mov
addl
int3
cli
std
add
cmp
int
add
daa
stos
push
sub
stos
js
mov
sbb
cmpsl
ds
in
addb
xor
inc
scas
push
hlt
add
das
stc
test
jecxz
inc
insb
movl
rcrb
filds
clc
and
jo
dec
add
shll
adc
enter
cld
adc
test
repnz
mov
insb
insl
ds
inc
xor
shlb
arpl
clc
das
add
fldt
jl
in
add
negl
push
add
andl
and
nop
add
cltd
cmp
lcall
sti
xor
pop
out
add
aaa
int
stc
add
add
sti
cs
fldcw
dec
rolb
add
mov
cltd
dec
or
jns
pop
call
andb
add
dec
xchg
jo
mov
cli
or
mov
add
mov
lahf
mov
mov
sbb
cmp
or
andb
pop
jns
mov
imul
add
sbb
adc
cld
rcrb
pop
dec
in
mov
or
lahf
scas
out
adc
pop
test
prefetchwt1
mov
sbb
sbb
mov
sbbb
mov
jmp
add
or
jge
jmp
fsubs
repnz
mov
loope,pn
mov
loope
mov
test
sti
xor
js
pop
stc
dec
mov
add
aas
and
jno
icebp
add
mov
ret
jno
add
sub
xorl
adc
lcall
fstpt
cmp
add
imul
push
iret
cli
dec
push
fbld
push
cmp
test
cmp
outsb
dec
loopne
cmp
add
sti
lods
or
rcrl
dec
js
add
pop
lret
loope
inc
add
mov
cmpsl
adc
inc
lcall
movsl
dec
shlb
cwtl
ret
pop
mov
xchg
cmp
jl
dec
ret
xchg
add
or
add
ljmp
int
pop
adc
push
cmp
inc
lods
mov
icebp
jns
sbb
shl
jle
mov
add
pop
js
cmp
lret
and
movsb
add
inc
jl
xorb
mov
mov
pop
out
fnstsw
add
xor
or
push
mov
fiaddl
rorb
xor
pushf
sarb
addb
shl
sti
push
stc
mov
rcr
pop
inc
cmp
push
or
int3
xchg
add
leave
nop
and
lcall
inc
je
notl
lret
push
lret
outsb
push
scas
fucomi
jge
inc
pop
std
aas
xchg
add
jle
inc
push
data16
fwait
add
dec
sub
jp
mov
ficompl
xor
push
add
cmc
inc
jb
add
out
movsl
cmp
mov
xchg
xor
stc
jnp
rclb
mov
and
out
mov
add
enter
rolb
dec
cmp
mov
or
or
cs
xchg
sarb
aad
cmp
dec
add
jmp
add
insb
stos
fstpl
in
popa
inc
fsubr
dec
movsb
lods
icebp
add
jo
pushf
push
adc
add
out
add
rolb
lds
or
lock
faddl
addb
mov
push
add
js
rcll
das
std
mov
xor
iret
xchg
movsb
and
dec
inc
mov
cltd
add
add
mov
loop
add
push
cmp
scas
enter
mov
fstps
cmp
or
add
push
int3
decb
fidivs
lock
insb
lcall
or
in
mov
je
in
scas
mov
mov
add
mov
test
jmp
adc
mov
enter
inc
in
es
xor
add
aam
rolb
in
adc
ret
enter
mov
popl
test
sbb
rorb
lods
add
ret
inc
adc
push
add
mov
les
adc
out
scas
adc
inc
jae
cmp
sbb
psrld
leave
scas
test
or
add
fiaddl
dec
or
cmp
mov
das
jecxz
add
sub
rclb
addb
aas
imul
xchg
or
mov
add
mov
mov
pop
andb
lods
lds
add
xor
jle
add
sarl
push
push
out
add
sbb
ds
lahf
push
add
scas
fwait
mov
cli
repz
cmp
in
jp
inc
mov
mull
ljmp
leave
mov
sbb
cltd
add
adc
ljmp
aad
int3
and
add
sbb
add
sub
fwait
add
aas
xchg
cmp
xor
shlb
fisubs
cmp
inc
push
aam
cmp
sbb
mov
add
fildl
inc
nop
pusha
and
mov
cltd
pop
rolb
push
mov
hlt
std
call
pusha
add
inc
orb
add
sbb
mov
mov
cmp
jle
fcomps
cmpsb
lcall
or
imulb
out
ret
fsts
cmp
dec
cs
cli
sub
cwtl
add
pop
inc
pusha
inc
and
pop
lods
mov
add
xor
pop
add
btr
jns
addb
mov
scas
rcrl
mov
out
lret
mov
daa
and
and
mov
loopne
addl
and
mov
xchg
ss
into
xorb
pop
test
rclb
les
dec
mov
add
or
ds
js
fistl
or
dec
jp
rorb
mov
cmp
push
adc
adc
add
stos
and
stc
and
or
jbe
and
and
and
mov
fsubr
and
jge
sbbb
and
xorl
sbb
add
add
fiaddl
mov
psubsb
xchg
pop
dec
or
or
sbb
int
loopne
and
lcall
ljmp
and
add
and
dec
mov
sub
mov
adc
sub
inc
jp
cmp
sbb
jns
rorb
xchg
add
push
in
or
mov
lock
add
jo
inc
cpuid
lret
adc
add
sbb
cld
add
in
iret
decb
pop
fildl
add
mov
pop
jg
mov
andb
loopne
testl
sbb
xchg
add
inc
fsubl
or
push
repnz
nop
adc
fildl
add
sti
add
sbb
add
cmpsl
sbb
mov
mov
sub
cwtl
mov
out
add
ret
int
cmp
pop
dec
btc
pop
lods
out
popf
sbb
inc
insl
inc
or
add
push
loopne
scas
addb
sbb
mov
xchg
lods
push
add
lods
sbb
push
add
pop
rorb
call
in
and
rorl
cmp
pop
loop
shl
in
cmovl
push
cmp
int
or
mov
clc
loope
lcall
sbb
mov
int
mov
insl
add
ret
add
in
pop
mov
lods
cmc
inc
dec
loopne
ds
cs
fadds
add
cltd
pop
call
jo
dec
jl
and
outsb
add
in
lret
mov
add
ror
push
in
mov
std
aaa
and
mov
ret
add
add
add
insb
dec
decl
mov
nop
add
cmpsb
sahf
test
jge
lods
mov
add
in
xchg
aam
stos
mov
cli
and
cld
add
lds
sbb
test
add
pop
adc
arpl
out
lods
pop
add
shlb
push
add
call
mov
sub
mov
xor
loope
add
lahf
jb
jl
testb
dec
add
and
mov
scas
add
je
lcall
add
cmp
mov
xor
sarl
js
add
xor
aam
jge
js
push
test
jo
add
mov
test
push
out
aam
jnp
mov
in
addl
cld
outsl
add
xorl
popf
in
pushf
sbb
pusha
adc
stc
cmpl
scas
shlb
out
dec
fdivs
or
and
xorb
icebp
ret
hlt
sub
jecxz
call
pop
add
popf
loopne
int3
pop
rcrl
lea
insb
es
in
jns
js
dec
push
dec
sbb
out
or
add
pop
in
sbb
in
xchg
mov
pop
ret
inc
sbbb
cmp
movsl
pop
sbb
dec
mov
inc
roll
ret
sub
add
sbb
lret
aas
loopne
sbb
push
les
addr16
adc
in
aad
scas
or
cmp
mov
add
sbb
add
adc
xlat
dec
dec
pusha
je
inc
stos
add
inc
and
add
scas
mov
lret
mov
sbb
iret
push
ds
mov
mov
sbb
fwait
iret
add
adc
mov
sbb
add
mov
scas
xor
sub
insl
push
ret
add
shrl
mov
cltd
cld
mov
mov
sub
add
rol
loop
add
lods
ret
jmp
adc
push
sbbl
push
sbb
add
add
clc
cmp
xchg
dec
std
pop
jmp
sbb
mov
add
cmpsb
xorb
int3
or
shlb
pop
mov
mov
lock
add
jmp
lds
add
sub
in
pop
jp
pushf
rorl
test
pop
daa
das
sub
cltd
in
mov
adc
scas
fnstsw
testb
js
adc
ja
push
mov
jecxz
adc
ja
out
dec
in
mov
mov
sub
mov
test
leave
fldl
pop
xchg
out
insb
fildl
pop
out
lods
std
mulb
inc
iret
mov
and
mov
loop
jp
clc
add
mov
dec
ret
repnz
or
mov
and
lcall
rclb
js
enter
add
mov
fnstsw
or
push
add
cmp
lods
dec
adc
pop
cmpsb
sbb
popf
sbbl
mov
pop
sbbb
or
dec
mov
or
cltd
pop
sub
lahf
push
sub
dec
ljmp
loopne
fdivrs
xchg
addb
outsl
call
cli
add
loope
sbb
mov
scas
push
cmp
clc
adc
and
pushf
pop
shl
mov
push
push
test
sar
push
add
fyl2x
add
gs
mov
jge
jno
iret
loop
xchg
lods
cmpsb
push
cmp
aas
mov
setl
rolb
fsub
shlb
add
pop
stc
push
xor
movsl
add
mov
loopne
mov
sti
jmp
jge
add
dec
mov
sahf
lock
or
jg
mov
cmp
jmp
imul
sbb
les
js
cmp
sub
lret
mov
jne
add
jno
cmp
and
lcall
scas
es
mov
movsb
pusha
dec
fists
add
test
js
nop
mov
adc
clc
fmull
add
nop
add
in
filds
cmp
int3
and
add
xchg
aad
pop
dec
lret
or
xor
ficompl
pavgw
loopne
and
lea
add
sahf
stos
pop
add
lcall
add
leave
in
mov
rolb
jle
fcoml
sbb
add
inc
inc
jmp
mov
adc
leave
scas
stos
jae
fadds
jns
adc
in
mov
mov
lods
pop
filds
data16
add
fcoml
loopne
mov
pop
sbb
cld
xorl
dec
mov
add
rorl
or
repnz
add
test
push
pop
shl
sbb
pusha
jle
mov
add
jno
ret
fnstsw
aas
pop
add
loope
push
loopne
cld
inc
cmp
das
add
leave
inc
outsl
add
test
adcl
scas
rolb
cmpsl
cmpsb
andb
insb
nop
stos
jno
pusha
inc
int
add
test
aas
sub
in
insl
clc
movsl
add
sub
lea
add
loopne
push
dec
incb
sbb
scas
xchg
or
or
fdivrl
sbb
mov
inc
movsb
add
ljmp
xor
loopne
addb
pop
dec
and
outsl
add
lods
mov
sub
fnclex
add
mov
scas
out
inc
ja
jno
add
mov
add
fdivrl
mov
mov
xor
lcall
and
cmpsl
add
pop
xor
mov
fstpl
hlt
das
sub
add
and
shlb
sbb
stos
sbb
mov
pop
inc
cmp
adc
mov
sbb
sbb
and
aas
cmp
int3
cmp
sub
lcall
bound
test
inc
mov
sub
shrb
bound
outsl
jae
dec
add
gs
mov
dec
movsb
inc
cmpsl
adc
outsb
je
popa
jae
xor
push
aam
cmp
sarb
arpl
adc
xor
add
aad
sarl
insl
mov
cmp
mov
stos
adc
add
xor
xor
je
add
xor
inc
push
lods
mov
add
adc
dec
push
adc
lahf
cmp
cltd
add
bound
popa
insb
adc
sub
test
les
dec
sbb
cmp
xor
jns
outsl
mov
mov
dec
inc
adc
or
dec
nop
loopne
outsl
jo
sub
or
aam
mov
lods
push
outsb
push
or
push
push
dec
push
out
mov
mov
inc
mov
cmpsl
shlb
imul
flds
xchg
jns
js
cmpb
gs
call
push
add
stos
mov
int
daa
sub
imul
jno
and
dec
or
lds
std
je
js
adc
bound
or
or
push
mov
dec
inc
in
aam
and
popa
insb
cmp
and
outsb
or
lea
inc
adc
and
inc
inc
and
add
jo
outsl
imul
lcall
cmp
ficoms
jbe
cs
cmp
jne
jb
xor
dec
push
repnz
fildl
inc
popa
or
gs
inc
mov
mov
or
outsl
call
cs
xor
insb
sti
mov
outsl
ficompl
lea
mov
je
xchg
pop
shll
push
inc
cmpsl
addr16
mov
sub
jge
xchg
movzbl
adc
push
jno
cmc
dec
rorl
cmp
mov
xchg
clc
lods
fwait
push
sub
and
lret
mov
mov
push
insb
lcall
xor
test
std
sub
lcall
pop
call
ss
push
sub
sub
rcl
and
cs
jo
or
ja
pushf
imul
dec
adc
gs
mov
jbe
sti
out
idivl
arpl
filds
push
and
int
int
mov
inc
dec
popa
leave
sbb
pop
fidivl
lds
add
cmp
orl
inc
push
xor
movsb
push
adcl
jo
jo
cmp
sbb
std
addr16
sub
mov
adc
lcall
add
and
adc
sub
sbb
adc
xchg
jae
push
xor
add
loop
cli
das
jecxz
cmp
or
les
inc
dec
push
push
dec
inc
pop
loopne
ret
outsl
ja
inc
test
fmuls
rorb
and
pop
adc
inc
jl
mov
lock
or
mov
xchg
pop
and
nop
push
cmp
enter
xor
in
pop
sbb
aaa
xor
sbb
xchg
xor
sbb
loopne
adc
fdivrs
lods
sbb
cwtl
enter
sbb
cwtl
mov
pop
sbb
xchg
adc
and
mov
xor
mov
inc
sbb
rorb
ds
cmp
adc
shlb
nop
loop
inc
inc
and
aam
push
int3
or
dec
sbb
push
sbb
and
xor
test
xor
repnz
sbb
adc
das
fcoml
loop
cmp
repnz
nop
sub
cs
sbb
and
xchg
or
pop
and
and
or
or
adc
sub
sub
and
dec
cmp
adc
add
or
sub
fs
xor
rorb
and
dec
xchg
sbb
push
xor
sub
pop
jns
cmp
ja,pn
and
addr16
xorl
dec
outsl
jecxz
decl
repz
outsb
sbb
popa
xor
cltd
cmp
sbb
cwtl
cmp
jbe
xor
xor
imul
inc
pop
ret
outsl
arpl
jmp
jo
push
xchg
in
ja
repnz
loope
push
inc
or
das
xchg
xor
jge
fisttpll
sahf
fdivr
pushf
xor
cs
popa
jae
jl
out
xorb
xchg
sbb
leave
movsb
cwtl
inc
loopne
jne
outsb
aad
jecxz
sub
bound
dec
cli
gs
outsb
sub
jl
push
mov
daa
inc
scas
pushf
dec
jae
mov
mov
clc
push
outsb
and
xor
adc
inc
dec
rclb
push
and
test
push
push
js
pushf
sbb
dec
jne
bound
es
push
arpl
insb
cmp
fs
sub
adc
pop
and
aam
push
insl
mov
and
sbb
xchg
sarl
pushf
fildll
je
cmp
and
mov
popf
cmp
push
imul
pushf
sub
dec
dec
pop
lods
sub
push
jg
dec
bound
sbb
jnp
lea
and
pop
outsb
arpl
cmp
jnp
and
mov
fs
mov
xor
inc
dec
sbb
dec
inc
sbb
cmp
aaa
jb
imul
xor
jecxz
les
imul
and
nop
cmpsb
jo
adc
enter
pop
pushf
outsl
pushf
loope
dec
dec
mov
pop
pop
mov
jae
repz
sub
jb
push
inc
adcl
cmpsl
inc
rcrl
and
cmp
adc
add
fmul
imul
lret
dec
mov
int
inc
sub
sub
pop
imul
ljmp
or
cwtl
mov
sub
movsl
cmp
inc
mov
jae
pop
imul
aad
jmp
mov
xor
stos
popa
xchg
mov
popa
jne
je
xor
or
lods
dec
sub
dec
push
mov
inc
jb
imul
sbbl
scas
or
inc
push
inc
js
pop
and
inc
popa
dec
bound
sub
mov
push
stos
ss
pop
fsts
dec
pop
mov
sub
sahf
cmp
lahf
sbbl
data16
loope
or
xchg
pusha
xchg
mov
in
pop
leave
adc
inc
test
lods
dec
push
push
push
dec
xor
imul
push
gs
lods
pop
xor
and
mov
fs
and
or
outsb
imulb
dec
pop
movsl
ss
push
push
or
cmp
inc
data16
mov
xor
cmp
xchg
push
cmc
cmp
xorb
push
mov
sub
sbb
gs
sub
rcr
sub
inc
retw
pop
mov
dec
mov
pop
sarl
les
dec
inc
jg
xor
inc
xchg
jbe
push
cmp
imul
aad
dec
pop
mov
pop
outsb
dec
jns
and
pop
cmc
loop
xor
mov
and
nop
addr16
mov
lret
xchg
sbb
adcb
dec
xchg
xor
hlt
push
stc
jae
jae
jns
mov
add
arpl
dec
in
cmpsb
push
sti
sub
movsl
ja
test
adc
arpl
push
ja
js
fchs
lea
cmpsb
cmpb
fnstenv
mov
fcomip
jns
fisttpl
sub
pop
dec
sub
aam
mov
xor
xchg
pop
dec
cs
aaa
insl
scas
mov
test
cmp
fcmovnbe
stos
jo
xor
ffreep
jne
loope
repz
jns
sub
test
gs
dec
repnz
div
inc
and
dec
shlb
pop
dec
and
dec
je
fwait
inc
addr16
pop
sarb
xchg
mov
int
xchg
cwtl
jae
clc
pop
cmp
daa
push
cmp
and
inc
insb
add
and
lods
xor
add
jns
scas
xor
pop
sub
es
sub
push
inc
orb
das
aam
xchg
les
sbb
push
stos
or
sbb
xrelease
fs
sub
jo
jb
or
xor
jo
ret
cmc
sub
ret
jns
roll
or
adc
xor
data16
cli
addb
or
call
jo
cwtl
mov
imul
test
fsts
movsl
lcall
out
dec
loopne
lea
enter
imul
pop
shrb
xchg
push
sbb
sbb
jnp
adc
adc
add
mov
mov
filds
out
push
fldt
outsb
sbb
xchg
ds
repz
lret
add
xchg
lret
iret
data16
gs
shl
popf
es
lock
filds
pop
cwtl
cltd
fwait
sub
push
cltd
pusha
and
pop
adc
push
popf
repz
lret
insl
ss
sbb
jne
adc
inc
add
adc
fbld
fstps
mov
inc
int3
adc
mov
iret
insl
lret
fstps
movsl
cli
aaa
hlt
std
daa
jp
adc
je
jno
xor
enter
and
ret
shlb
ja
pop
jno
jge
cld
fiadds
cld
in
leave
jmp
cli
fdivr
jecxz
shr
mov
in
xor
addr16
lock
fwait
or
std
sar
sti
imull
loopne
out
push
ljmp
test
and
sti
lock
cmc
aad
mov
cli
fs
dec
dec
in
jne
loope
add
or
dec
xchg
out
int3
pusha
bound
add
aas
sbb
xor
cs
call
dec
sbb
test
pop
sub
sbb
mov
pop
pop
fdivrs
sti
adc
stos
jno
call
orl
jbe
jo
jle
xchg
das
push
sbb
dec
pushf
sti
push
mov
and
or
add
outsl
jmp
mov
jbe
fnstenv
rol
repz
push
cltd
outsb
jae
add
cmpsl
xor
cmp
or
stc
dec
pop
cmp
jo
sub
addr16
or
xor
sub
subb
and
or
lcall
ficomps
add
cli
insb
mov
jp
pop
jo
xorb
das
xchg
xor
cmp
add
nop
mov
imul
out
mov
push
adc
inc
adc
sbb
inc
inc
outsl
dec
mov
xchg
sti
insl
in
pop
xlat
arpl
leave
and
inc
or
pop
xlat
cmc
jb
xor
mov
and
cs
dec
push
push
adc
or
movsl
sbb
push
mov
jae
scas
cs
pop
xor
stc
sbb
or
int
jns
jmp
push
inc
clc
pop
push
js
xor
imul
sub
ja
mov
add
dec
hlt
outsb
out
outsl
int3
sub
scas
pop
js
xor
pop
adc
outsl
push
xchg
and
popf
std
xlat
and
mov
lcall
inc
mov
in
cmp
push
xor
and
into
jmp
and
sub
mov
sub
sub
jne
inc
inc
and
mov
orb
adc
rorl
mov
push
roll
mov
pop
mov
add
mov
adc
adc
pusha
add
jnp
mov
in
cli
xchg
xor
repnz
xorb
pop
std
int3
add
dec
mov
shlb
or
sbb
jl
or
icebp
loop
pop
dec
into
adc
outsb
jb
testb
inc
push
inc
xor
or
or
pusha
add
dec
push
add
mov
add
mov
sbb
adc
aas
test
inc
push
sbb
mov
lods
loopne
mov
jo
cmp
push
and
adc
enter
pop
and
or
nop
and
dec
and
push
mov
mov
aaa
and
add
pop
ljmp
nop
out
sub
add
add
js
or
imul
adc
mov
xor
xor
xchg
call
inc
jo
test
add
clc
mov
movsb
fsub
addl
push
jmp
add
add
xor
ficoml
and
and
or
in
sub
insl
sub
cltd
subb
dec
mov
daa
push
or
movsb
pop
mov
add
jl
movsl
or
or
and
xor
xor
xor
fmulp
clc
fs
outsl
or
fldenv
dec
cwtl
sub
int3
push
add
sbb
mov
lds
dec
sub
scas
or
add
push
jg
add
xor
cmp
jmp
out
popf
adc
or
pusha
dec
loopne
xchg
movsl
shl
imul
cmp
je
cmp
dec
movl
mov
add
rolb
cmp
mul
js
jae
cmp
jb
out
add
loopne
add
imul
insl
add
aaa
sub
mov
gs
sub
mov
test
cmp
pushf
add
jl
mov
mov
or
scas
adc
add
cld
loope
inc
lds
fs
arpl
lock
mov
dec
inc
das
out
adc
mov
and
sti
jns
fstpt
push
sub
insl
or
arpl
jns
push
adc
push
je
ja
lret
mov
test
push
push
mov
dec
jl
push
inc
dec
dec
icebp
push
pop
sub
push
jo
pop
mov
leavew
les
ja
movsl
js
nop
jne
lods
dec
sarl
stos
ja
inc
ror
push
xor
les
aaa
loop
inc
xor
pop
dec
pop
test
cmp
clc
shll
push
fs
dec
aad
jnp
jne
pop
mov
movl
push
xor
and
in
jmp
pushf
jae
xlat
inc
lea
jmp
xor
cwtl
out
pop
in
sub
test
fs
mov
outsl
jne
fs
mov
enter
push
cmp
jbe
hlt
mov
sbb
dec
gs
in
mov
les
sbb
adc
sub
or
dec
cld
jo
add
inc
loop
push
pcmpeqb
or
or
or
jbe
mov
bnd
jmp
lods
push
adc
inc
movsl
lahf
leave
mov
xor
inc
cmp
int3
jle
or
insb
cmpsb
int3
mov
mov
aad
add
xor
dec
arpl
rcll
fidivl
xor
movsb
push
ret
cmp
inc
jno
popf
xor
in
das
xor
inc
mull
xchg
push
push
mov
xor
lret
dec
lret
xor
push
shll
cmc
mov
mov
cs
jmp
icebp
in
cltd
dec
jl
mov
daa
insl
ret
adc
movsl
call
push
pop
pop
sub
pop
rorb
push
adc
push
fs
sbb
pop
adc
or
loopne
bound
xchg
das
jmp
sub
push
cs
adc
add
dec
and
adc
test
lock
sbb
sbb
mov
je
out
cmp
and
pop
fiaddl
xlat
xor
xor
jns
jne
lods
mov
inc
hlt
lcallw
adc
dec
cmp
fimull
push
mov
in
mov
sbb
inc
dec
mov
imul
movsb
movsb
pop
test
xchg
dec
jns
sbb
jo
outsl
mov
xchg
mov
hlt
xor
orb
inc
bound
push
push
or
or
mov
adc
xchg
nop
xlat
xor
sub
jl
dec
dec
inc
loopne
lret
add
addb
mov
jge
adc
sub
fmul
sbb
mov
add
lret
adc
leave
or
es
sbb
inc
stos
jns
jo
mov
adc
xchg
xor
insb
and
sub
and
adc
popf
push
or
cmp
ret
das
push
xor
xor
andl
push
inc
mov
insl
jns
mov
popa
xchg
cmc
sub
aaa
insb
sub
aas
adc
adc
adc
inc
loop
adc
xor
or
xor
pushl
test
cmp
mov
jo
xor
adc
or
lods
sub
inc
jno
cld
jo
es
popa
push
adc
mov
inc
popf
rolb
and
dec
popa
in
int
sub
mov
cmc
scas
adc
adc
int3
iret
xchg
cs
adc
lock
lret
outsb
aas
fsubrl
fsubp
mov
add
add
jns
test
mov
lahf
cmp
out
gs
addr16
repz
push
mov
lods
imul
cmpsl
cmp
sub
mov
outsb
iret
cmp
mov
imul
xchg
imul
sbb
adc
cmc
fimull
xorb
push
fcoms
inc
and
inc
dec
dec
push
add
dec
cmp
aaa
cmp
sub
das
sub
push
or
dec
inc
or
test
cmp
dec
rorb
push
push
dec
push
aam
mov
stos
jl
adc
gs
sub
imul
bound
fdivr
int
addr16
jle
cltd
jno
jmp
dec
mov
movsl
in
test
and
mov
mov
mov
imul
xlat
ret
lahf
inc
jne
sub
or
xor
add
pop
lock
int3
fsubp
stos
lret
scas
call
mov
lahf
sub
loop
das
mov
cmpsl
fmuls
xor
push
rcr
adc
sbb
popl
push
sbb
sbb
cmp
xchg
and
mov
lret
dec
push
outsl
movl
inc
dec
xchg
fisttps
clc
inc
cmpsb
or
insb
shll
jp
mov
shrb
or
inc
dec
clc
jmp
xchg
dec
adc
shll
cmpsb
daa
mov
lcall
in
push
xchg
jb,pn
sbb
inc
push
and
mov
and
pushf
jb
test
bound
inc
inc
xchg
jnp
lret
push
dec
aas
lcall
repnz
clc
cli
inc
pop
dec
inc
push
xchg
push
into
inc
or
shrb
jmp
outsl
negl
ljmp
pop
dec
inc
dec
push
jle
movsl
sub
popa
stc
icebp
jle
xchg
inc
jnp
out
dec
adc
xchg
push
lahf
xchg
jo
add
mov
xchg
mov
xchg
dec
push
push
inc
push
imul
mov
dec
inc
sub
jne
notb
pop
push
fdivrs
je
movsl
mov
cwtl
dec
sub
push
xor
cmc
pop
xor
repz
lods
fists
adc
sbb
insb
xchg
dec
ja
jmp
push
inc
bound
push
push
xchg
mov
enter
dec
hlt
mov
inc
popa
sbb
outsl
shr
xchg
mov
sbb
sub
dec
add
dec
push
gs
push
pop
adc
mov
adc
flds
jo
mov
xor
or
dec
mov
fiaddl
push
sub
jae
jge
movsl
pop
xor
je
or
sub
jne
jge
movsl
pop
xor
jbe
or
sub
ja
jge
movsl
pop
sub
cmp
lods
aas
xor
add
adc
iret
adc
jnp
xor
fs
cltd
add
cmp
dec
add
add
and
pop
adc
cmpsb
add
add
adc
xor
insb
add
sbb
cmpsb
add
add
insb
add
sbb
cmpsb
add
add
adc
cmp
in
inc
test
pushf
add
and
ret
ret
or
or
mov
sub
adc
or
pop
xchg
xchg
pop
pop
flds
push
daa
clc
push
or
xchg
xchg
test
inc
push
out
adc
push
frstor
dec
or
push
outsb
or
or
push
or
inc
xor
add
or
push
cmpsb
add
push
outsl
or
ljmp
lcall
fldl
inc
or
sub
xchg
add
aam
or
or
sub
jecxz
xchg
add
inc
or
or
push
dec
or
or
add
or
or
lods
sub
add
cmp
inc
and
or
dec
or
inc
test
arpl
push
movsl
add
pushf
dec
or
inc
out
cmp
push
outsb
or
insl
xchg
or
sub
mov
adc
mov
sbb
test
mov
aas
in
dec
pop
jl
in
inc
pop
inc
push
push
dec
push
pop
pop
dec
lock
gs
test
je
lods
or
in
jnp
cmp
pop
sub
push
mov
add
dec
in
gs
cltd
pop
idivl
stc
pop
pop
data16
jge
dec
dec
dec
inc
aad
xchg
inc
xchg
cmp
std
lods
pop
lods
in
cli
inc
push
inc
lods
pop
pop
jbe
jge
jecxz
in
je
cltd
sarl
jbe
jge
dec
inc
inc
push
mov
xchg
addr16
dec
add
inc
push
inc
dec
push
lods
pop
mov
in
gs
in
in
jge
dec
fsubrl
into
cld
and
mov
insl
pushf
pusha
out
or
imul
pusha
xchg
pusha
cmp
ficoms
bound
ficoms
fs
loope
gs
adc
popfw
loope
addr16
adc
push
cmp
adc
outsb
test
js
pop
dec
and
imul
movsb
add
or
addr16
scas
mov
rclb
popa
bound
test
sub
dec
adc
shll
insb
mov
push
cmpsl
loopne
xor
xor
cmpsl
arpl
push
push
add
gs
add
popa
jo
inc
scas
push
and
dec
xchg
adc
inc
pushf
inc
sub
sub
mov
cmc
stos
dec
dec
ss
jbe
sub
cmp
pop
inc
mov
xlat
daa
mov
xchg
adc
movsb
sahf
dec
lods
sub
insb
rclb
xor
outsl
arpl
fwait
and
std
loope
pop
xor
addb
jb
push
dec
xchg
inc
scas
push
loope
fs
pop
jb
push
dec
ficoms
outsl
stos
sbb
and
lret
push
adc
stos
push
mov
sub
mov
insb
cmpsb
mov
push
ret
adc
fsubl
ljmp
jb
pusha
inc
sbb
pop
dec
mov
adc
mov
push
dec
adc
sbb
inc
push
push
in
push
inc
outsb
cmp
cmpsb
nop
shl
outsl
icebp
dec
out
push
sbb
and
nop
xor
mov
shlb
adc
gs
push
push
fwait
adcl
mov
mov
sbb
sbb
dec
push
inc
inc
xor
mov
dec
pop
push
test
cld
dec
outsl
push
outsl
adc
or
sub
test
imul
arpl
inc
mov
clc
cmp
jns
aam
xchg
inc
and
sub
popa
das
xor
test
dec
imul
lods
sub
dec
dec
push
adc
loope
decl
dec
sub
es
push
mov
pop
hlt
shrb
and
outsb
or
xor
scas
fsqrt
pop
adc
xor
adc
cmp
scas
aas
nop
dec
mov
incl
js
sbb
jno
arpl
xchg
aaa
cmpsb
call
mov
dec
insl
lds
bound
jecxz
xchg
inc
sub
push
push
jne
gs
inc
or
sub
mov
xchg
pop
dec
mov
jp
imul
jbe
push
or
les
cmp
jl
jge
jmp
testb
insb
ljmp
aad
imul
imul
push
inc
xchg
cli
lret
cwtl
bound
or
and
push
js
cmp
dec
mov
loopne
inc
inc
dec
jae
dec
aad
sub
mov
enter
scas
push
hlt
or
in
inc
push
scas
cmp
dec
bound
je
adc
mov
xchg
and
movsb
cmp
pop
loope
out
xchg
adc
leave
pop
sub
push
clc
dec
fs
lret
lods
push
adc
ja
mov
adc
cltd
xor
addr16
pop
inc
lods
xchg
cmc
cwtl
ss
jge
push
mov
repz
mov
outsl
mov
mov
jae
pop
insl
data16
push
adc
fdivl
adc
mov
push
mov
pop
adc
xorb
or
repnz
imul
sbb
dec
outsl
es
push
cmc
jne
jmp
es
inc
cmpsb
stos
mov
or
insl
and
popf
push
xor
xor
out
adc
addl
inc
addr16
add
lea
bound
mov
mov
push
or
test
sub
andl
adc
xor
lret
insb
lcall
jb
fs
pop
push
imul
and
jnp
int
lret
loopne
or
inc
movsl
fwait
sub
cmc
inc
add
adc
pop
mov
dec
pop
xlat
xor
or
and
xchg
xchg
cmp
jns
sbb
ljmp
pop
daa
into
jnp
lods
ret
jne
and
movsl
fidivs
xchg
jae
sub
imul
sarb
xchg
mov
push
mov
adc
dec
sub
ljmp
bound
push
pop
outsb
inc
jnp
arpl
add
shrb
shrb
lock
mov
jmp
popf
xor
call
cmp
push
sbb
push
jns
push
repnz
jb
sbb
xor
sbb
dec
sbb
scas
xor
sub
sbb
sub
push
stos
rorb
jns
cmpsl
gs
inc
movsl
jbe
sbbb
jmp
stos
xor
leave
jae
lahf
pop
jl
loope
dec
push
sub
jge
push
clc
ds
leave
sub
add
je
xor
sbbb
mov
adc
jnp
xlat
mov
adc
icebp
rol
or
inc
xor
cmpsb
adc
xor
and
push
xor
imul
loope
outsl
jmp
pop
daa
mov
pushf
arpl
bound
sahf
jge
test
sub
sub
aas
das
das
jns
push
inc
pop
dec
inc
push
and
pop
fs
and
and
dec
test
and
push
xchg
cmc
push
dec
das
xor
push
andb
push
pop
ret
jge
out
mov
cmp
adc
pop
sbb
loopne
insl
imul
test
cmp
sahf
mov
mov
int3
adc
xor
and
jb
and
jb
and
dec
add
add
insb
adc
pop
adc
ljmp
adc
fs
or
daa
outsl
lock
push
or
and
imul
dec
or
pop
mov
lcall
adc
aad
pop
cmpsl
stos
lock
mov
xchg
loope
das
not
imul
dec
pop
or
sub
push
jge
xchg
sbb
pop
inc
inc
outsb
lret
aam
lret
icebp
mov
push
dec
lods
inc
jno
insb
dec
xchg
xchg
in
out
imul
es
and
cs
repz
jne
or
jb
or
sub
adc
iret
or
ss
mov
pop
xlat
ficoml
jne
xchg
pop
sub
and
dec
test
rcl
in
mov
add
fsts
sub
cld
jl
sub
mov
dec
ljmp
mov
mov
pop
test
fldenv
mov
js
or
adc
scas
data16
inc
mov
xchg
mov
movsb
xor
pop
sub
dec
jo
pop
xchg
xor
mov
aam
xchg
dec
xorl
xchg
movsb
in
adc
dec
xchg
in
mov
mov
movsl
in
jmp
xchg
out
arpl
and
cmp
shrl
sub
sub
add
testb
stc
loopne
cs
jo
adc
les
cltd
cmpsl
dec
mov
push
scas
xchg
fs
fldcw
inc
mov
sub
mull
dec
mov
dec
dec
mov
aaa
xor
outsb
repnz
mov
pop
mov
push
pop
add
cs
xor
js
fisttpll
inc
pop
test
mov
dec
jns
pushw
lods
scas
cmpsl
push
iret
adc
dec
loope
xor
hlt
mov
mov
cmpsl
xor
jno
and
imul
fwait
xor
mov
and
sub
add
fisubl
or
dec
sub
sbb
mov
or
xchg
daa
jae
test
inc
stos
out
xchg
in
and
fcmovnu
mov
addr16
or
movsl
ret
stos
imul
aam
mov
aam
mov
cmc
jp
sub
xchg
or
and
push
push
jns
pop
mov
sub
aam
xchg
mov
push
xchg
jne
sbb
sbb
ljmp
push
dec
ficoml
mov
rcr
mov
in
sub
lret
and
cmp
dec
mov
aad
xchg
sbb
cmp
mov
cs
cmc
xchg
shll
adc
int3
daa
push
dec
lahf
add
loop
pop
add
xchg
sub
in
jg
push
push
push
shll
dec
add
in
ljmp
jno
stos
cmp
sub
sub
out
mov
jg
mov
out
jne
xor
adc
pushf
mov
sub
or
push
mov
dec
outsl
imul
cmc
mov
les
inc
jne
push
inc
insb
inc
shll
lock
push
scas
bound
xchg
jne
int
imul
jno
fwait
inc
mov
mov
sub
icebp
dec
adc
inc
jne
clc
pop
bound
scas
mov
dec
mov
mov
and
popa
cmp
xor
leave
sub
xchg
enter
lahf
scas
test
cltd
push
int3
mov
sub
dec
cmp
cmp
mov
sub
jbe
push
scas
pop
dec
xchg
cmp
pop
sbb
test
jb
mov
dec
cmp
jo
gs
sub
dec
adc
outsb
xchg
dec
pop
sub
ror
mov
fidivrs
aam
jns
das
inc
lahf
sub
sub
cmp
movsb
loop
jb
in
cmpsl
mov
xchg
push
cmp
shrb
stc
lret
jns
or
movsb
cs
and
cmpsl
ret
gs
ret
ljmp
jge
movsb
jns
and
movsb
or
jbe
cmpsb
movsb
imul
lret
dec
pop
cmpsl
xor
repnz
movsb
scas
je
leave
adc
fstpt
ljmp
cli
movsb
sub
shr
enter
ret
aad
dec
outsl
movsl
call
sbb
js
push
imul
push
pop
push
ds
addr16
imul
ficompl
cmp
jno
movsl
sbb
loopne
push
xor
pop
scas
sbb
push
call
adc
dec
sub
sbb
mov
out
xchg
cmpsb
aam
push
inc
pushf
mov
cmpsl
loopne
mov
pop
ja
jnp
sub
ret
lcall
insb
push
and
cwtl
xchg
imul
dec
les
mov
dec
adc
or
xor
pop
mov
jl
imul
inc
push
cmp
push
pop
xor
mov
stos
sub
xchg
jns
sub
pop
push
gs
mov
mov
stos
adc
or
push
test
pop
inc
dec
push
push
dec
fisttpll
loopne
jo
lcall
sub
push
push
in
in
inc
aas
push
push
iret
mov
ljmp
jo
jns
shlb
movsb
out
and
xchg
in
adc
or
lods
repnz
fimuls
mov
inc
in
inc
push
sbb
cmp
test
sub
dec
and
push
mov
inc
movsb
pop
fs
cwtl
pop
xor
movsb
or
icebp
in
and
push
sbb
test
stc
xorb
mov
mov
scas
sub
jbe
sub
imul
xor
cmp
cmc
mov
fidivs
out
cmpl
or
and
jne
xchg
xor
jb
add
inc
stos
adc
jnp
or
jns
add
sub
aam
repnz
and
push
dec
pop
popf
inc
test
loope
fadds
loope
jl
dec
inc
mov
mov
or
push
test
in
inc
pop
and
pop
push
xlat
sti
call
cwtl
dec
mov
fmuls
inc
nop
mov
loope
cmp
sbb
and
inc
pop
nop
and
and
and
stc
sub
enter
sub
das
pop
nop
pop
cld
cmp
and
stc
pusha
bswap
jle
inc
and
cs
insb
push
jo
enter
nop
and
inc
xchg
and
and
es
sub
sub
das
xchg
pop
aas
and
daa
jle
pusha
bnd
nop
and
cs
enter
and
and
and
inc
repnz
nop
sub
das
aas
and
bswap
aas
jle
daa
repnz
pop
nop
jle
and
into
lds
jbe
and
and
mov
adc
pusha
test
insb
or
and
enter
js,pn
and
enter
and
sbb
aas
and
popa
jbe
sbb
test
inc
adc
dec
inc
dec
test
push
and
rclb
sbb
cs
add
decb
push
push
dec
test
mov
stos
fwait
sbb
popa
jns
dec
fwait
xchg
add
xor
dec
xchg
sbb
xor
lds
xor
inc
dec
dec
jns
push
pusha
cld
jno
imul
sbb
add
adc
mov
lock
push
nop
aaa
jno
mov
fsubs
or
xor
imul
cmpsb
mov
imul
ror
sub
xor
sbb
mov
jl
xor
jmp
push
fisubs
dec
add
int3
sbb
push
mov
and
push
adc
pop
inc
push
adc
inc
imul
cs
xor
scas
inc
dec
push
inc
imul
sub
loop
lods
mov
arpl
imul
ret
addr16
outsb
jbe
lea
dec
sub
pcmpeqw
addr16
fs
ja
mov
cmpsl
mov
jb
insb
cmp
pop
arpl
cli
jo
sub
data16
shr
sub
pusha
sahf
add
sub
or
outsb
imul
mov
xchg
or
ds
test
and
xor
cmp
xor
push
stos
dec
cmp
shl
dec
cmp
or
dec
jae
in
adc
or
and
dec
or
clc
jb
add
xorl
xchg
fs
dec
loopne
aam
int3
inc
les
and
push
add
rclb
movsb
xor
or
jo
insb
inc
push
pop
and
dec
dec
xchg
inc
and
xor
sbb
adc
pop
and
clc
xchg
inc
lock
cltd
adc
or
adc
and
push
lods
mov
movsb
int
pushf
or
and
dec
mov
insb
pusha
mov
dec
and
dec
inc
xchg
cmp
sub
and
mov
or
add
cld
xchg
or
xchg
hlt
and
inc
in
call
and
dec
rclb
mov
test
mov
xchg
dec
mov
js
mov
push
pusha
mov
push
and
dec
cmp
sbb
mov
or
inc
cld
xchg
or
or
mov
adc
sub
mov
or
mov
jl
or
js
fs
or
call
enter
cmp
xor
xor
mov
sbb
adc
or
add
cld
xchg
and
xchg
pop
pop
in
es
jb
pusha
insb
xor
imul
int
insb
adc
insl
idivb
cmpsl
inc
xor
sub
mov
mov
mov
test
pop
js
imul
push
scas
dec
fildl
jo
jno
fs
jbe
fs
push
mov
sbb
mov
mov
out
jno
pusha
sub
dec
adc
jo
xor
cmp
xor
or
not
jmp
inc
adc
cmpsl
sbb
adc
dec
es
or
adc
mov
cld
push
aam
mov
adc
push
les
mov
mov
and
xchg
imul
imul
rcrl
stc
and
xchg
shrb
call
lcall
arpl
in
mov
push
or
test
xchg
mov
and
movsb
nop
movsb
fwait
cmp
cltd
inc
bound
popa
inc
dec
jae
lret
data16
dec
jo
frstor
adc
push
dec
sbb
fs
test
lea
cs
jns
ja
jp
int3
or
scas
test
outsl
lahf
adc
movsb
or
xor
cmp
leave
dec
and
ret
mov
daa
or
jns
mov
push
in
or
jbe
xchg
fwait
mov
gs
ja
fisttps
test
fistpll
shrl
aam
cltd
or
jb
and
outsb
dec
jne
shl
fnstenv
je
adc
xchg
push
push
fimull
faddp
jnp
xor
adc
imul
ret
pusha
lahf
jae
lods
jle
in
adc
mov
or
lcall
movsl
or
inc
pushf
and
or
pushf
and
inc
insl
or
inc
pop
lods
ret
push
jo
fs
les
pop
sub
scas
dec
scas
dec
cld
movsl
gs
cmp
lods
dec
call
decl
mov
in
sub
addr16
in
clc
dec
xchg
jmp
xor
aad
mov
mov
pop
insb
xchg
data16
push
inc
in
test
mov
out
outsl
sbb
aas
pop
inc
lcall
dec
nop
lahf
xchg
jmp
mov
mov
dec
and
xor
xor
xchg
adc
and
sub
jns
addr16
push
sub
fldenv
repnz
mov
cmpsb
pop
test
and
cmpsb
push
xor
xor
inc
pop
pop
mov
mov
and
and
and
out
jns
scas
push
mov
les
mov
push
dec
or
xor
in
sbb
adc
imul
sbb
repnz
mov
rorb
sar
aad
leave
addr16
sub
push
or
dec
and
inc
mov
cmp
mov
sub
aam
dec
mov
sub
xchg
and
int
dec
sub
push
dec
test
or
push
jge
or
and
mov
push
and
inc
sub
mul
out
hlt
cmp
insb
test
stos
das
lods
sub
inc
push
push
es
sub
lahf
lds
or
stos
adc
cmp
or
xor
int3
aad
test
jp
sti
sub
loop,pn
fsubl
icebp
sub
inc
cmp
cmp
mov
mul
or
push
push
dec
add
push
xor
fisttpll
push
xor
mov
push
popf
ss
xchg
test
aam
dec
mov
push
jo
dec
insl
in
mov
imul
ds
movsb
push
xor
push
insl
pusha
dec
cmp
dec
sub
xchg
out
adc
xor
fistpll
xlat
cmpsl
imul
push
mov
mov
fidivrl
cs
hlt
mov
and
and
xchg
sub
cmp
pop
xor
and
jne
jp
cmp
sbb
inc
pop
push
jge
lret
insb
mov
lds
inc
je
lods
xor
in
fidivrl
pop
lds
gs
sub
dec
cwtl
xchg
jl
inc
gs
mov
xor
xor
and
mov
lds
push
inc
jecxz
xlat
jecxz
in
sub
push
dec
out
fsubrs
xchg
jo
test
xor
push
push
lret
and
cmp
das
mov
call
mov
sti
push
xor
je
das
repz
fs
int
dec
push
xchg
cmp
orb
pop
ljmp
outsl
mov
push
and
dec
insb
pause
xchg
mov
xlat
popa
ja
lds
je
imul
jmp
fnstenv
movsl
sub
and
cmp
jne
sub
stos
jge
push
sub
sub
idivb
push
data16
js
sti
hlt
es
cwtl
mov
inc
dec
into
lods
aad
dec
and
inc
and
dec
xor
fwait
xchg
movsb
jle
dec
push
divps
jb
sbb
movsl
cs
and
aas
pushf
insl
inc
sub
and
mov
call
cli
sub
pop
test
sahf
dec
dec
mov
lds
push
pop
imul
fsubs
sub
pop
lahf
fsts
xor
jb
in
lods
mov
sub
push
dec
push
in
movsl
outsb
imul
stos
cmp
jbe
test
mov
sahf
mov
scas
xor
mov
shrb
push
xor
lds
popf
and
jno
cmp
sarl
and
movsl
movsb
movsb
loopne
inc
push
push
mov
imul
sbb
ss
shrl
dec
cmp
test
ja
xor
mov
mov
leave
pop
sbb
inc
mov
dec
es
fwait
clc
movsb
push
push
mov
pop
pop
mov
xchg
push
xor
push
dec
jp
xchg
push
data16
xor
js
dec
insb
stos
jns
dec
and
and
sub
sbb
shlb
out
into
xchg
les
xor
sub
cmpsl
dec
stos
in
xor
dec
cs
inc
mov
mov
ljmp
sub
inc
mov
xchg
test
lcall
insb
jmp
jae
xor
cmc
popa
stos
dec
sbb
add
jns
insb
mov
push
push
xchg
xchg
dec
das
pop
adc
push
cmp
inc
dec
cld
dec
std
sub
gs
in
sub
lret
sbb
push
push
jno
sub
dec
jae
das
cmp
call
lods
clc
cmpl
push
imul
in
xor
sub
lods
pop
xlat
loop,pn
xchg
xor
push
push
inc
pop
inc
push
inc
lret
popf
mov
hlt
loop
mov
sub
arpl
adc
fmull
xor
jns
repnz
or
divl
jle
mov
mov
push
xchg
xlat
push
sbb
or
aaa
rorl
sub
dec
test
sub
and
mov
xchg
push
mov
xchg
sti
jns
das
mov
pop
adc
sub
stos
mov
notl
xor
mov
fsubr
pop
xor
and
mov
lret
aam
cld
rclb
dec
les
dec
je
dec
imul
cmp
dec
mov
pop
popf
lods
fidivrs
lock
sbb
ror
lods
rclb
mov
decl
fcomps
pop
push
dec
pop
in
pop
xor
pop
mov
fcmovnu
dec
aas
mov
loope
daa
xchg
fs
pop
cmp
dec
dec
daa
or
jg
repz
mov
popf
xchg
push
xor
clc
push
mov
cmp
cmpsl
ljmp
push
push
dec
mov
jge
sub
jns
aas
pop
inc
fwait
and
mov
data16
std
std
insl
push
push
adc
sub
sub
inc
orb
sub
shll
add
push
lahf
iret
lock
aad
push
popf
pop
scas
cmp
int3
scas
mov
xchg
mov
das
push
stc
lret
adc
dec
clc
inc
fsubrl
mov
sub
mov
sbb
shr
sti
pop
cmpsb
xor
xor
sub
add
pop
mov
das
jns
mov
in
aad
xor
sub
add
jle
jno
in
cwtl
cmp
push
cmp
inc
test
movsl
leave
dec
jg
lods
sub
dec
clc
and
or
sub
lcall
xor
std
mov
in
inc
lods
xor
cmp
movsb
xor
xchg
jne
sub
cs
fs
and
dec
push
data16
data16
cmpsl
test
jns
std
mov
aad
imul
xchg
sub
mov
insl
call
and
inc
daa
adc
cli
jno
movsl
mov
rcrb
test
bound
in
mov
leave
imul
pop
loop
xchg
frndint
ljmp
in
test
mov
pop
inc
lock
scas
mov
nop
pop
mov
or
pop
cmp
pop
push
pop
push
pop
xchg
cld
pop
or
adc
ja
sub
push
mov
xchg
imul
je
and
cli
mov
dec
sub
lods
sbb
add
jo
pop
sub
mov
fimuls
xchg
jbe
nop
cmovg
add
clc
pop
cmpsb
sbb
jo
or
pop
adc
xchg
js
int3
stos
roll
test
popf
inc
push
mov
out
fwait
icebp
test
push
or
jp
jbe
mov
stos
xchg
jp
fwait
pushf
sub
lea
stos
roll
mov
mov
pop
push
or
or
mov
sub
jns
or
pop
sub
jb
mov
ja
xor
push
jns
ficompl
adc
xchg
adc
push
popa
scas
xor
scas
scas
jmp
push
lret
mov
mov
fnstsw
nop
pop
pop
jmp
mov
lock
insl
xor
cld
mov
or
xchg
mov
test
movsl
sub
sbb
xchg
stos
cmp
xor
ds
xchg
sbb
iret
repnz
gs
sub
outsb
pop
in
das
mov
sbb
in
test
in
mov
cmp
test
pop
sub
pop
pop
fs
sbb
stos
push
imul
push
lods
or
out
cmp
cmpsl
sub
imul
call
pushf
ljmp
hlt
jecxz
mov
push
push
jb
arpl
daa
je
sbb
nop
push
iret
inc
jbe
push
gs
sub
test
lds
cmp
cmp
push
mov
je
jne
xor
mov
push
sub
in
mov
insb
sub
xlat
inc
sub
add
sbb
or
ja
jmp
and
int
or
pop
test
imul
addr16
lds
or
cmp
push
fs
outsb
add
daa
bound
xchg
aam
mov
test
jo
sbb
or
jno
sub
aam
dec
xchg
fs
in
ja
js
in
out
add
add
pop
jo
dec
mov
das
imul
fildl
in
inc
lret
xor
scas
xchg
jp
or
mov
push
pop
in
adc
dec
out
push
or
outsl
xchg
mov
push
xor
nop
imul
or
mov
pop
adc
or
dec
arpl
push
jg
movsb
xchg
dec
pop
dec
lret
push
xchg
jmp
in
mov
cmp
aam
xchg
mov
mov
stc
stc
inc
mov
in
sub
mov
adc
sbb
repnz
cmp
cmpsb
movsb
icebp
inc
shr
cwtl
fsub
push
cmovns
mov
insl
mov
fs
or
xchg
or
insb
insl
or
jbe
dec
sbb
or
rcrl
mov
addr16
or
dec
test
or
test
and
or
mov
imul
pop
inc
jmp
and
test
sub
sbb
test
dec
jne
jno
sbb
dec
lock
dec
mov
or
hlt
mov
icebp
shlb
movsb
sbb
pop
xchg
addr16
xor
stos
addr16
inc
push
or
mov
sahf
adc
in
cmpsb
inc
jmp
pop
cmpsb
adc
mov
or
push
jmp
sub
mov
adc
les
mov
jnp
das
adc
and
cltd
sbb
mov
pop
lret
dec
adc
mov
jmp
pop
mov
gs
mov
nop
xor
lods
nop
negb
and
xchg
test
mov
movsb
pop
mov
jo
aam
ja
or
je
xor
insb
cmp
inc
xor
and
lods
adc
adc
mov
push
push
cmp
mov
adc
xchg
sub
dec
leave
and
ret
mov
cmp
push
sbb
adc
insb
and
gs
ret
add
xor
pop
push
cmp
push
xchg
cs
hlt
scas
sbbl
push
and
outsl
mov
xchg
xor
xchg
scas
sub
pop
sub
xchg
repnz
cmp
lods
nop
mov
inc
dec
inc
push
movsl
and
rolb
in
xlat
lock
and
cmp
dec
mov
mov
xchg
lahf
js
mov
and
icebp
dec
pop
and
mov
negb
push
and
ds
inc
or
push
imul
in
dec
dec
lcall
sub
call
xor
test
lcall
mov
jo
jo
outsl
icebp
dec
cmpsl
imul
movsl
jg
stc
out
cmp
adc
xor
dec
stos
inc
or
xchg
add
popf
mov
daa
dec
orb
aad
push
in
jle
mov
adc
subb
aad
jle
imul
pop
movsl
mov
push
xchg
int
jo
test
and
test
in
cmpsl
push
cmpsl
test
sub
sub
dec
lret
in
cmpsb
loopne
cmpsl
sub
cmp
dec
fs
in
cld
xor
dec
sbb
push
dec
pushf
imul
lcall
sub
dec
imull
dec
fs
mov
push
cmp
movsl
pusha
leave
fistps
mov
adc
dec
or
cld
rcl
notb
movsl
mov
out
nop
and
and
adc
int3
fldt
stos
movsl
fstpt
lds
push
pushf
cmp
pop
jbe
inc
mov
jecxz
test
adc
jb
movsl
pop
cmpsb
popf
sub
outsb
jno
sub
xchg
mov
hlt
mov
xchg
mov
fwait
xchg
pop
test
mov
mov
jp
push
xor
outsl
iret
lock
xor
jne
lret
out
or
or
std
xor
sub
imul
jl
daa
dec
insb
and
faddl
or
dec
cmp
push
or
inc
or
cmp
push
xor
mov
out
sar
fstl
cld
sbb
jg
inc
xor
imul
dec
cmpsb
or
enter
cmp
inc
cmp
xor
adc
dec
nop
inc
fistl
xchg
dec
sbb
push
xchg
jle
das
je
gs
sub
leave
out
das
and
scas
xchg
inc
mov
pusha
push
pop
dec
or
push
sub
cmpsl
dec
movsl
out
stos
sbb
jp
jae
ja
repnz
loopne
push
int
movsb
sub
hlt
int3
sub
and
cmp
dec
clc
cmp
push
xchg
mov
sahf
push
movsb
cmp
mov
adcl
pop
push
lds
outsl
mov
inc
jo
lods
test
sbb
xchg
sbb
pop
movsb
and
xchg
jne
inc
outsb
adc
test
or
push
xor
aad
insl
mov
and
movsb
insl
dec
es
sarb
enter
cwtl
clc
jb
jnp
outsb
jb
lcall
mov
das
jbe
dec
shl
outsb
inc
pop
out
or
loopne
push
xor
and
dec
les
rcrl
lods
sub
mov
mov
leave
repz
dec
mov
inc
sub
mov
lods
sub
fs
outsb
pop
les
popf
movsb
ljmp
sub
pusha
ds
das
jno
dec
out
xor
or
xchg
inc
arpl
lcall
add
add
add
sbb
mov
jae
push
adc
loop
sbb
mov
sub
shlb
xor
mov
lods
push
or
or
jl
cmp
shlb
or
push
dec
js
inc
and
pop
sbb
push
pop
sbb
jo
or
subl
inc
jne
cwtl
xor
add
sub
in
ret
xor
call
add
push
call
xchg
cmp
cmpsl
loop
xor
aad
dec
jne
ret
jecxz
in
inc
ficomps
pop
je
add
pop
push
sub
inc
lahf
mov
lea
dec
inc
adc
stos
mov
stos
push
cmp
pushf
push
cwtl
add
add
test
ret
mov
lods
jp
xor
and
jle
jg
movsl
cmp
aaa
lcall
push
jp
dec
cltd
mov
sub
pop
push
jns
bound
sub
stos
mov
dec
inc
loop
imul
inc
push
daa
xor
inc
add
testl
jge
in
xor
xor
out
ret
lods
xor
jb
sbb
dec
out
pop
in
ja
pop
and
mov
testl
sub
in
inc
push
addr16
lock
dec
sub
ret
mov
js
mov
std
in
mov
sti
push
pop
pop
mov
dec
mov
movsb
mov
or
or
xlat
or
rolb
inc
daa
sbb
pop
mov
jne
sbb
mov
adc
mov
adc
add
rorl
add
shll
popa
fimull
imul
lahf
lock
test
test
mov
cmp
cmp
stc
rorl
or
add
sub
outsl
lret
mov
fs
jno
push
inc
jp
pop
out
push
push
pop
lods
pop
stos
shrb
pop
push
mov
xchg
xor
stos
mov
mov
addl
add
mov
imul
test
dec
das
xor
pop
addr16
mov
in
sahf
loope
and
stc
ljmp
pop
xchg
xchg
pop
icebp
daa
jl
int
jp
stos
cmpsb
add
mov
test
in
sbb
cmc
cltd
sub
mov
sub
pop
push
pop
cltd
in
sub
cltd
xor
or
insb
jmp
or
js
mov
rcrl
das
in
mov
sbb
sar
repnz
jmp
insb
clc
add
aas
js
insb
mov
and
jmp
mov
and
sarl
popa
addr16
inc
inc
push
fildll
jbe
and
repz
xlat
in
push
and
dec
mov
popa
das
xor
fnstsw
cmc
std
iret
int3
scas
fsubl
dec
sti
jle
ret
inc
xchg
das
jbe
push
add
push
inc
inc
push
inc
dec
and
ret
xor
add
cwtl
enter
movsb
addb
add
int3
and
xor
and
sub
add
rolb
push
cmc
add
sub
sub
dec
or
testb
push
nop
add
add
or
gs
rolb
test
pusha
jnp
add
test
movsb
add
cmpb
sbb
cmpsb
fbld
or
lahf
loopne
addb
sbb
fisubrl
xor
lds
or
jb
and
mov
in
call
nop
sub
or
pop
lret
cmp
pop
cmp
and
jo
fcoms
fsubp
stc
adc
jle
mov
sbb
roll
add
cmp
dec
add
into
cmp
adc
stos
stos
stos
dec
cmc
sbb
test
or
ljmp
shr
add
add
sbb
add
xchg
or
pop
inc
or
mov
sub
sbb
or
push
lcall
adc
lcall
cltd
adc
inc
mov
xor
push
sbb
gs
xor
sbb
and
dec
sbb
jb
lret
xorb
cltd
or
push
test
xchg
inc
sub
nop
sub
mov
xlat
cmp
pop
xchg
or
add
xchg
sbb
xchg
repnz
jb
push
inc
xchg
mov
in
cmp
xchg
cwtl
xchg
or
mov
add
sbb
sub
mov
jge
addb
sahf
mov
cmp
js
fs
adc
inc
sbb
inc
pop
inc
push
test
adc
inc
jo
mov
adc
adc
mov
push
cmpl
pusha
push
or
cwtl
shlb
rcr
inc
cwtl
push
or
jecxz
test
popf
hlt
pop
lods
add
cltd
fsubl
and
xor
or
add
cmp
call
cmp
mov
and
add
repnz
inc
or
push
ret
movhps
and
adc
push
andl
add
mov
and
pop
ret
add
lock
mov
sub
test
lds
std
and
dec
sbb
xor
xchg
add
xchg
inc
push
add
sahf
add
mov
adc
idivb
aad
iret
decl
js
jp
outsl
loopne
jmp
mov
test
push
daa
cmp
jl
add
mov
stc
popf
sti
jmp
add
jbe
int3
add
sub
test
adc
stos
clc
scas
push
jecxz
cli
clc
jmp
cmpsl
aam
mull
iret
add
int3
xchg
push
cmpsb
scas
add
or
cmp
dec
dec
pop
inc
in
cmpsl
xchg
cmp
xor
push
hlt
in
pop
cmp
sahf
xchg
pop
call
cmpsb
lock
movsl
mov
popa
rcrl
and
add
xchg
clc
repz
mov
fldl
xchg
and
mov
push
pusha
les
push
add
inc
sti
aas
jno
or
xlat
mov
add
cmp
dec
lea
xchg
outsb
adc
sub
add
loop
pop
mov
icebp
lock
push
and
cmpsl
out
lock
cmpsb
add
mov
add
cmp
aad
pop
mov
std
and
popa
test
ja
int3
stos
in
das
dec
pop
loope
les
mov
xchg
adcb
inc
aas
int
pop
lcall
cmp
lods
push
mov
incl
and
loop
cld
cmp
pop
popa
mov
add
sarl
jl
adc
das
lea
mov
sti
inc
dec
cld
movsl
cmp
cmp
sub
jge
mov
jl
rcr
push
add
arpl
int3
and
cmp
cmpl
inc
xor
lods
cmp
add
xchg
mov
cmp
mov
sbb
cmpsb
add
pop
add
cmp
sbb
and
xor
dec
nop
pop
add
cmpsb
xchg
js
add
mov
cmpsl
add
inc
pop
mov
sub
add
sub
scas
cmp
pop
add
rcr
add
call
mov
pop
push
xchg
cmp
push
andl
sbb
gs
std
rorb
adc
add
ror
add
cmpsb
fmuls
mov
fldl
mov
jmp
add
fwait
jne
ljmp
xchg
inc
iret
add
dec
add
adc
test
mov
cmp
add
scas
int3
cmp
cwtl
paddd
push
xor
push
ret
ss
mov
mov
fmul
filds
enter
push
mov
add
push
sbb
and
mov
cmp
dec
cld
inc
repnz
stc
inc
in
add
stc
add
shrb
add
sysret
and
daa
pusha
or
xchg
adc
cmc
js
pop
inc
xor
es
insl
xchg
add
pslld
ret
or
leave
out
jg
add
inc
cmp
cmpsb
aam
test
ds
cwtl
add
outsl
adc
movq
lahf
mov
pushf
pusha
fwait
aas
pop
xchg
rcrb
ds
cmpsl
insb
dec
divl
pop
scas
in
cmpsb
lods
mov
add
or
inc
xchg
or
repnz
cwtl
imul
adc
xchg
fiadds
jns
icebp
sbb
addr16
lods
aam
jl
pop
fwait
mov
cmp
pop
cld
mov
std
xchg
cmp
ret
mov
add
and
daa
inc
fmulp
add
cmp
inc
pop
inc
cwtl
push
mov
add
pop
aaa
mov
push
jle
test
adc
ljmp
mov
xor
mov
fsubs
push
add
out
ljmp
add
and
lods
inc
aam
sub
push
push
adc
sarb
pop
popf
xchg
add
dec
xchg
notb
cmpsb
stc
aad
xor
cmp
out
jbe
add
decl
clts
jnp
add
dec
repz
pop
cmp
and
test
cmp
cmp
jg
dec
pop
orl
jle
popf
test
dec
push
or
push
add
jns
rorl
sarb
inc
mov
and
inc
sub
mov
add
pop
sbb
add
out
shrb
sbb
addr16
sbb
xor
lea
addb
call
in
push
mov
aaa
mov
popf
shrb
mov
shll
enter
push
push
mov
add
leave
pop
xchg
add
ret
adc
roll
xchg
push
xor
pop
add
add
and
fiadds
fwait
sti
xchg
std
dec
lcall
stos
xchg
testl
out
xor
sub
add
inc
loope
shrl
dec
add
inc
mov
cwtl
jns
and
ret
or
int3
js
mov
add
dec
outsl
ja
fnstsw
inc
mov
and
push
lods
out
je
add
addr16
dec
xchg
rolb
push
mov
loopne
add
test
mov
jne
push
shlb
mov
jae
add
mov
in
jnp
add
mov
add
sub
pushf
adc
jns
pop
add
daa
xchg
les
loop
dec
lret
cmpsb
mov
nop
mov
mov
repnz
iret
loopne
inc
test
fcoml
fstps
stc
dec
and
mov
adc
mov
inc
cmp
ss
testl
fisttpl
js
add
push
insb
add
lret
jecxz
lds
addr16
cmp
add
divb
push
cmpsl
inc
pop
mov
add
jno
cli
imul
mov
in
cmpsl
xlat
cmp
jl
jnp
pop
push
inc
popf
xor
xor
jmp
inc
sti
mov
pop
xchg
test
into
ljmp
scas
ds
lahf
jb
push
xlat
sbb
sub
cmp
popl
test
jmp
xor
sahf
adc
fisttps
sbbl
outsl
test
add
xchg
fwait
cmc
test
lcall
inc
push
sub
test
add
mov
cwtl
sub
add
fstps
adc
mov
test
adc
xor
cld
jno
add
out
or
xor
dec
dec
shrb
xor
pop
or
popl
mov
out
sbb
mov
pop
cwtl
test
movsl
ficompl
stc
sub
js
and
in
xchg
and
xchg
or
cmpsl
cmpb
inc
xchg
xor
mov
inc
enter
imul
popa
dec
sub
push
cmpsl
jae
mov
pusha
add
cmp
pop
int
movl
lds
test
adc
add
add
add
and
mov
sti
adc
push
nop
test
cmpsb
in
popf
adc
and
iret
rorl
sbbb
push
sub
mov
mov
lea
jno
scas
xchg
stos
mov
xchg
xchg
sub
dec
stos
lahf
cwtl
jne
mov
jle
cmp
add
add
xor
sbb
int
or
sub
jl
xchg
add
pushf
inc
mov
and
dec
fisttps
xchg
inc
pop
mov
lods
push
add
shll
imul
aad
push
sub
push
ljmp
xor
call
push
jae
stos
into
rcrb
gs
lods
pusha
inc
add
mov
out
add
stos
test
ret
das
orb
pop
push
mov
pop
outsl
pop
add
or
scas
or
sub
les
inc
fisubrs
add
mov
xchg
push
adc
dec
add
lsl
add
pop
iret
subl
and
fsubs
call
sub
jbe
es
add
outsl
jns
stos
add
sub
popa
sub
hlt
mov
sbb
in
pop
push
iret
shlb
fucom
pop
pop
std
jbe
aas
adc
inc
or
add
lcall
pop
cmpsb
mov
xchg
sbb
add
xchg
cli
fldl
leave
or
mov
clc
popa
cmp
add
aam
push
cmp
push
add
rolb
mov
add
pushf
jb
sub
enter
popa
add
xchg
pop
inc
add
pusha
decl
in
pop
stos
add
cmp
and
xchg
leave
add
xchg
aaa
nop
add
push
inc
mov
push
add
or
adc
jle
call
push
add
lret
into
mov
test
push
push
add
sub
push
add
out
fwait
cmp
nop
clc
adc
mov
cmpsb
lds
pop
mov
nop
xor
rolb
shlb
sub
pop
repnz
pop
addr16
arpl
fwait
add
lods
jne
cmpsl
imul
dec
shr
mov
push
add
mov
fstps
ja
or
jle
add
jns
lcall
xchg
dec
add
mov
cmpsl
push
inc
pop
add
adc
add
add
lea
imul
lret
dec
fs
jg
push
inc
sbb
adc
outsl
aas
fimull
xor
pop
jbe
rcll
push
add
aas
stos
xchg
adcb
out
lock
inc
sub
loopne
lock
jne
push
push
mov
adcb
and
les
cmpb
push
pusha
push
mov
stc
sub
xchg
shlb
cmp
sbb
jns
add
or
fiaddl
pop
cs
sarl
mov
loopne
and
mov
clc
not
int
and
in
repz
sbb
mov
sbb
pop
out
add
into
cmpsb
xchg
fildll
dec
add
xlat
dec
cmpsl
pop
cmp
clc
add
add
mov
add
imul
pop
jns
xor
add
xor
js
mov
sbb
pop
loopne
mov
adc
jae
push
xor
add
lcall
add
jg
out
movsl
or
scas
mov
mov
fiaddl
pop
sub
dec
mov
test
je
cmp
dec
shlb
iret
sahf
xor
mov
cltd
clc
pop
pop
mov
lds
mov
pop
jle
popa
sahf
xor
push
add
out
fs
lcall
ja
test
enter
push
pop
addl
mov
movsbl
inc
jae
push
jns
jp
test
out
xchg
inc
fwait
int3
dec
stos
mov
cmp
addr16
lret
mov
or
jg
adc
rcr
dec
add
mov
and
add
xchg
jne
add
aaa
cltd
fsubs
daa
add
inc
das
xor
adc
add
clc
jg
mov
imul
cmovnp
subl
or
dec
add
sar
test
shld
rol
imul
mov
add
out
outsl
icebp
jo
xchg
add
mov
or
mov
add
ret
iret
in
lea
or
jl
mov
xchg
fwait
movsl
ret
mov
and
or
add
addr16
popf
push
insl
push
cmp
adcl
mov
jnp
mov
mov
mov
xchg
add
push
cs
icebp
subb
push
pop
add
adc
out
leave
clc
movsb
add
sbb
mov
movsl
xchg
mov
add
add
jmp
mov
pop
pop
rolb
addr16
xchg
adc
sbb
jl
push
or
cmp
xor
in
add
stos
or
rolb
mov
cmp
dec
adc
add
or
mov
sub
add
xchg
xor
imul
and
mov
add
mov
mov
cmp
push
dec
sar
push
add
enter
add
push
fwait
aas
cmp
lods
add
dec
insl
mov
movb
pop
xchg
int3
adcb
push
lcall
push
xchg
cmp
ficoml
dec
sbb
xor
add
mov
fstpt
imul
ja
add
imul
push
lods
loopne
mov
jg
add
scas
jne
add
out
lods
sahf
add
je
arpl
fidivl
rclb
mov
cmpsb
push
mov
push
push
addr16
cmp
xor
mov
and
cmp
ljmp
enter
out
push
movsl
mov
mov
add
shlb
add
cmc
sbb
pop
mov
add
or
mov
lea
fdivrp
mov
mov
dec
inc
xor
and
dec
pop
call
mov
add
xchg
pop
sbb
enter
jno
shll
push
sbb
push
sarb
and
inc
iret
add
cmp
and
xchg
test
mov
inc
push
jle
xor
hlt
and
lret
shl
mov
inc
dec
sub
movups
outsl
add
ss
out
mov
jbe
imul
mov
mov
clc
add
mov
cmp
pop
inc
call
sub
decb
rorb
clc
daa
sub
sub
scas
push
seta
jnp
pusha
in
aaa
mov
push
lods
cmp
das
add
push
inc
inc
loop
add
test
mov
incl
into
subb
mov
push
or
cmpl
in
add
popa
and
ds
add
pushf
adc
add
ret
pop
out
push
test
das
iret
push
lods
pusha
jne
stos
mov
pop
cmp
sti
pause
push
shl
xlat
and
mov
add
mov
add
and
add
push
xlat
enter
dec
into
cltd
iret
fisttpll
mov
adc
leave
push
loope
add
addr16
dec
pop
pop
imul
outsl
hlt
xchg
xchg
sub
add
subb
stos
loop
sub
mov
pop
test
add
mov
ror
or
pop
adc
pop
mov
rolb
inc
cmp
sub
scas
rolb
inc
test
xor
cwtl
cmp
dec
and
add
add
cli
lcall
pop
mov
js
xchg
mov
cmp
jo
arpl
js
loope
adc
xor
sbb
addr16
push
pop
cmp
les
fwait
xchg
push
mov
cmovo
out
sbb
das
push
es
add
cmp
idivl
sub
add
arpl
movsb
cltd
add
adc
push
dec
jecxz
add
rcr
cmpsb
or
add
sti
movl
mov
cmp
orb
int3
xor
dec
pop
sbb
dec
jg
pop
mov
cmpsb
jae
add
incl
ret
add
insl
adc
pop
add
or
pop
sub
mov
dec
mov
add
fildll
pop
test
fldt
or
add
aaa
push
cmp
xorb
fimull
mov
out
bound
push
out
mov
sub
addb
lret
and
outsl
scas
adc
push
push
shrb
xor
cltd
aad
cmp
and
andb
sbb
pop
sbb
je
test
jb
and
movsb
adc
jl
add
dec
push
xor
inc
pop
flds
lock
add
dec
pop
jp
push
fmuls
sahf
pop
add
sub
add
ja
or
fwait
push
into
clc
adc
mov
add
pop
and
pop
jns
or
bound
cmpsb
cli
pop
nop
sbb
cmpsl
add
jno
xchg
rol
call
fstpt
mov
add
imul
cmp
in
popa
xchg
mov
dec
pusha
ret
mov
bswap
add
in
inc
fdivs
sbb
xchg
dec
sub
roll
add
hlt
dec
xchg
das
add
int
jmp
add
sub
fiaddl
sti
pop
pop
movzwl
cmpsb
fmull
xor
arpl
fmull
push
and
push
sub
scas
add
cmp
add
mov
movsl
lea
pop
inc
sti
sub
popa
add
lahf
adc
jge
pop
gs
jne
add
xor
sbb
sahf
mov
xchg
xor
out
add
push
mov
add
in
js
scas
lret
mov
xor
pop
sbb
cmp
hlt
add
jo
and
xchg
lock
and
push
lldt
pushf
test
jnp
fcoms
xchg
movsb
imul
fcoms
jmp
push
sbbb
pcmpgtb
lods
push
inc
or
mov
pop
pop
ficompl
push
mov
jmp
cmp
push
add
xor
add
es
add
je
jg
pop
iret
add
cmpsb
pop
cwtl
mov
mov
ja
inc
fsub
inc
loopne
out
incb
inc
xchg
pop
cmc
or
mov
sub
sub
fildll
cmpsl
lea
or
jmp
cmp
mov
mov
dec
dec
into
rcr
add
mov
fs
push
push
mov
outsb
xchg
cltd
mov
and
lahf
cmp
mov
aas
inc
add
or
push
push
push
mov
pop
lret
add
adcl
cmp
mov
adc
lods
cltd
add
xchg
sbb
xor
mov
enter
and
in
xchg
sbb
push
daa
lea
add
mov
ljmp
add
aad
push
dec
lret
inc
adc
mov
add
test
fsubrs
inc
dec
and
adc
pop
inc
test
outsb
jecxz
adc
nop
adc
xchg
lods
add
cmp
test
add
imul
mov
mov
cmp
add
pop
sbb
das
rcrl
enter
add
adc
lods
add
ret
mov
scas
dec
add
jle
push
mov
stos
push
push
notb
mov
mov
sti
sbbl
fistps
inc
aaa
pop
add
fcmovnbe
mov
and
out
cmpsb
into
aad
xchg
cmp
test
notb
push
popl
add
push
or
and
lods
in
icebp
cmp
rolb
outsl
in
push
movzwl
jle
sub
in
aas
mov
add
sbb
in
call
xchg
add
push
or
pop
cmp
adc
pop
jmp
rcrl
xchg
mov
or
mov
and
into
adc
or
sub
out
rcll
add
push
add
add
lods
mov
mov
mov
sbb
or
js
hlt
ret
add
scas
xlat
push
mov
nop
cld
daa
add
push
fcmovu
mov
push
cmp
cmpsl
add
inc
sub
jl
das
push
add
xchg
rcrb
dec
push
pop
jns
mov
push
add
pop
jno
jle
shlb
rol
shll
test
adc
dec
out
inc
jns
mov
add
shl
add
loope
lcall
add
arpl
xor
jle
adc
das
or
add
push
lcall
mov
pusha
and
inc
out
push
adc
leave
jmp
adc
add
rcrl
arpl
mov
add
popa
in
mov
pop
inc
roll
and
push
push
sbb
setae
adc
add
sub
pop
xchg
xlat
xchg
push
sbb
cltd
cmpsl
and
ret
add
push
adc
cmp
mov
push
subb
mov
scas
out
sub
inc
dec
dec
dec
loopne
gs
enter
cmc
add
adc
clc
jg
neg
add
insb
jmp
inc
add
and
pop
ss
mov
add
rolb
ja
mov
inc
mov
add
notl
mov
adc
xor
sbb
mov
pop
mov
mov
or
mov
add
arpl
push
xor
roll
aas
inc
jecxz
imul
pusha
push
push
ss
add
and
fiadds
jnp
stos
lcall
add
pop
mov
stos
add
filds
lahf
jl
add
mov
mov
imul
xchg
push
es
xor
add
rcll
jnp
add
pop
push
adc
cmp
and
fdivr
pop
sbb
add
dec
aaa
adc
dec
pop
push
out
arpl
add
pop
and
add
dec
enter
jg
popa
mov
test
cs
and
fdivrl
jmp
add
cmp
call
test
mov
mov
push
mov
movsb
lds
jae
or
mov
sbbb
add
fld
sub
pop
aad
sti
mov
test
outsb
jno
and
mov
mov
fs
pop
mov
loopne
and
jecxz
add
xchg
mov
iret
ja
add
jns
loope
sub
mov
cmp
inc
cmp
inc
cwtl
test
add
mov
popf
xor
pop
leave
cmpsb
add
xchg
and
mov
push
js
jle
mov
shlb
pop
or
add
mov
test
add
scas
sub
in
mov
pop
ds
adc
add
push
call
xchg
add
shl
push
add
in
je
mov
add
daa
stc
icebp
cmpsb
es
xor
xor
test
or
stc
push
cs
add
mov
add
movsb
bound
pop
in
jmp
ja
xchg
inc
or
jg
cmp
hlt
aaa
add
out
addr16
mov
mov
ret
mov
cli
cmp
inc
sbb
test
pop
dec
addr16
fnstcw
cmp
leave
test
sub
add
xchg
enter
xchg
je
add
pop
jmp
cmpsb
add
pop
cmp
addb
add
lcall
dec
cld
lds
inc
fdivl
faddl
fldt
push
cmp
dec
loopne
pop
xchg
aam
push
add
les
add
ja
pop
js
mov
jmp
xor
int
adc
and
jns
mov
shufps
adc
dec
int3
addl
fsubrl
mov
call
and
cld
cmpsb
loope
stos
cwtl
lds
sbb
call
cmp
cmpsl
add
inc
pop
aas
mov
push
mov
dec
add
xchg
add
leave
jne
push
and
fadds
inc
call
sub
add
insb
jns
scas
std
or
jecxz
pop
jno
fxsave
pop
mov
sbb
sahf
mov
xor
push
es
sbb
leave
test
pop
std
in
dec
add
or
add
es
sbb
mov
sub
mov
add
int3
or
add
push
out
jbe
shlb
add
ret
icebp
push
test
push
rcrl
and
mov
jnp
add
mov
fistpll
orl
adc
pop
nop
daa
outsl
add
inc
loopne
call
sub
sbb
push
out
or
add
popa
js
adc
xchg
dec
xor
repz
into
fisttpl
into
adc
dec
ret
xchg
add
ja
pop
add
jge
in
jle
popf
add
push
push
add
movl
push
cmp
repz
imul
sbb
dec
jns
jbe
adc
inc
jl
add
add
add
xchg
les
fdivs
mov
call
add
pop
stos
cmp
pushf
addl
sti
pop
cltd
inc
add
arpl
adc
and
dec
repz
roll
mov
add
push
enter
in
stc
add
add
inc
sbb
add
enter
sbb
adc
inc
nop
xchg
mov
mov
xchg
pop
cmp
filds
jl
push
daa
dec
lods
mov
mov
push
int
add
jns
fldl
into
iret
rorb
dec
lods
add
bound
push
add
mov
icebp
fwait
pop
push
leave
out
in
or
jecxz
movsb
jno
mov
push
add
pop
mov
dec
jnp
or
jne
xor
ss
xor
das
scas
xor
cltd
add
pop
xchg
sbb
mov
repz
xchg
and
mov
aam
in
ljmp
inc
push
xor
jns
cmpsl
add
push
add
call
fistpll
stc
dec
inc
addl
insl
xchg
mov
test
loopne
bound
stos
sarb
pop
adc
or
dec
fldl
mov
jb
pushf
cmp
pop
ja
pop
popf
loopne,pt
push
test
arpl
inc
fldcw
mov
test
sbb
leave
mov
mov
and
sti
mov
popa
mov
sub
lds
nop
aas
rolb
adc
adc
ja
sahf
pop
xor
js
pop
add
cmc
roll
sbb
lahf
pop
fcomip
mov
sub
push
enter
pop
jmp
push
xchg
push
cmp
mov
inc
das
hlt
pop
cld
pop
cmova
cmp
fstps
shlb
scas
popf
xchg
addb
dec
add
aas
xlat
cs
sbb
mov
jg
loop
push
add
test
stc
stos
sbb
mov
mov
xchg
jnp
mov
add
pop
dec
sahf
sbb
xor
fidivrl
je
adc
mov
ja
mov
fisttps
subl
inc
or
add
adc
data16
movsl
ret
or
fimull
mov
and
jecxz
push
and
ljmp
fdivl
mov
mov
and
in
ja
sbb
sbb
cld
lahf
add
pop
adc
aad
daa
sbb
jns
xor
adc
ffree
push
in
push
call
pop
xchg
dec
pop
sub
mov
adc
add
xchg
add
xchg
inc
int3
add
and
sbb
add
lahf
test
push
stc
jae
inc
ret
dec
data16
testl
pop
jmp
add
mov
inc
iret
fisttpll
add
mov
rorl
ffreep
es
or
rclb
pop
mov
call
icebp
add
ds
add
sbb
scas
and
add
mov
jmp
jb
jne
jns
and
cld
call
or
out
push
jo
aad
lods
mov
ss
cmc
clc
inc
push
add
cmpsb
icebp
das
inc
add
sbb
adc
andb
sahf
push
insb
cwtl
add
inc
bound
jb
cmp
pop
arpl
or
cltd
into
sbb
xchg
jne
add
je
xor
push
add
mov
rolb
movsb
mov
movsl
mov
xchg
push
add
cs
pop
int3
xor
xchg
movl
xor
sbb
add
mov
add
inc
push
add
pusha
mov
and
cmpsl
xchg
fldl
sbb
insb
daa
adc
movsb
mov
leave
mov
sub
or
pop
mov
jmp
shlb
xchg
aad
insl
add
add
out
test
imul
adc
xchg
or
pop
fsubrs
mov
add
jmp
jge
push
cs
push
push
add
mov
dec
scas
add
push
repz
or
sub
sub
lods
incb
or
and
addr16
add
adc
data16
mov
adc
push
rol
lcall
add
mov
mov
popf
adc
inc
fwait
sbb
or
scas
push
test
add
and
aas
adc
test
les
pop
mov
jg
adc
cltd
fiadds
stc
test
mov
or
xlat
mov
loop
push
jmp
add
cmc
pop
and
and
and
pop
lret
sarb
push
jg
and
lods
add
jp
dec
add
mov
mov
add
jmp
push
xchg
movsb
pop
das
int3
in
pop
and
scas
mov
xor
popa
idivb
xor
fldl
mov
adc
fcoms
add
inc
xchg
dec
fiadds
add
daa
mov
les
cmp
shll
pop
sub
add
xchg
or
shll
jl
push
in
fcomps
lock
stc
sub
ret
xor
imul
ja
cmpsl
jno
cmp
dec
cmp
sub
out
sub
pop
xchg
iret
popf
jmp
add
sahf
cmp
cltd
cmp
js
mov
fildl
jge
push
pop
xor
mov
sub
gs
xchg
loopne
sub
pop
popa
into
or
push
mov
sahf
mov
xor
add
cli
sbb
xchg
add
mov
xchg
mov
and
pop
out
outsl
aaa
xor
inc
popa
ja
sbb
jl
add
outsl
daa
das
cmp
jo
inc
test
xchg
push
adc
aad
test
andl
inc
lods
mov
or
jbe
sbb
fnstcw
sbb
adc
mov
repz
lds
push
mov
cmp
add
out
jb
adc
or
rclb
jnp
stos
arpl
push
mov
cltd
add
or
shl
mov
outsl
or
sub
pop
add
pop
push
push
mov
add
mov
adc
mov
xor
flds
cltd
jmp
add
fnstsw
pop
icebp
push
mov
add
ret
pop
inc
cld
movsb
and
ds
add
daa
rorl
arpl
jmp
sbb
add
inc
stos
repz
push
mov
arpl
inc
pop
xor
filds
aad
jnp
sbb
add
ret
cmp
xorb
push
push
push
mov
add
jns
addr16
incb
adc
mov
add
or
shll
add
iret
dec
gs
cmpb
adc
aaa
adc
mov
pop
mov
add
hlt
es
outsb
sub
adc
add
push
mov
xchg
mov
add
xchg
imul
leave
add
jmp
ja
mov
cld
mov
outsb
and
push
or
std
call
add
insb
mov
mov
mov
mov
sub
and
mov
mov
rorw
push
inc
test
out
sbbb
psubb
enter
add
mov
cmp
lret
add
sbb
mov
push
insb
scas
inc
push
xchg
pop
add
adcb
pop
inc
mov
mov
sub
adc
push
or
xchg
add
jb
sbb
lea
and
inc
jmp
movsb
pop
sti
data16
movmskps
scas
js
popa
add
or
dec
std
or
mov
stc
test
adc
dec
xor
add
scas
lock
add
adc
add
xor
ja
sub
ret
les
mov
pop
add
cmp
add
mov
addl
add
in
ds
jmp
divb
add
cmp
add
inc
movnti
dec
add
and
out
xchg
add
mov
xchg
aas
sub
add
out
loop
cmc
aaa
arpl
scas
sbb
pop
sub
daa
cwtl
in
int
rcrb
das
popl
aas
xchg
push
push
add
or
mov
mov
jle
and
xchg
pop
outsb
fadds
mov
inc
fnsave
cmp
xlat
jp
adc
add
xor
inc
or
andl
das
mov
xor
jecxz
xorb
push
aas
les
dec
pop
mov
leave
and
and
push
push
or
inc
fnstsw
sbb
test
inc
inc
xchg
pop
add
jle
xchg
out
add
insb
ss
add
push
in
imul
inc
xchg
cmp
xchg
scas
sbb
adc
inc
cld
add
addr16
or
dec
loopne
add
fs
lcall
push
mov
add
pushf
rolb
int3
add
incb
icebp
daa
and
in
add
and
gs
and
xchg
dec
add
and
pop
inc
xor
inc
sbb
clc
cmp
cmp
fdivs
sarl
cwtl
mov
pop
mov
add
popf
iret
ja
jnp
aam
adc
ret
add
fwait
cld
add
mov
inc
xor
sub
ljmp
add
mov
mov
xor
daa
cmp
test
push
ss
xor
sbb
mov
mov
pop
mov
mov
stos
sub
add
sahf
lods
dec
mov
pop
js
xchg
outsl
aas
cmpsl
sbb
std
sub
sub
add
cmp
fdivp
jo
mulb
xchg
or
or
adc
imul
js
jns
addr16
leave
bswap
in
in
inc
imul
xchg
add
or
add
dec
fsts
cwtl
imul
add
xchg
sarb
sbb
lods
rol
push
or
inc
sbbl
lret
andnps
test
ss
scas
pop
movsl
mov
xchg
lea
jmp
inc
nop
fsubrs
add
enter
adc
flds
ret
or
jmp
add
lods
ret
arpl
sub
stos
lahf
sbb
ljmp
icebp
add
sub
fcoml
cmpsb
or
fldenv
lahf
outsb
jg
jecxz
mov
pop
dec
jae
icebp
xchg
mov
cmp
jg
add
iret
mov
imul
mov
inc
push
add
jmp
jle
out
xchg
sub
add
pop
aam
jmp
add
mov
repnz
rcr
cwtl
ret
jge
add
int
adc
add
xchg
xor
add
and
out
test
nop
add
and
ss
pushf
rolb
mov
jo
mov
inc
or
sub
sub
in
shlb
sub
push
jg
and
repnz
and
hlt
dec
ss
add
arpl
mov
add
xor
dec
lahf
lret
add
cmp
push
adc
mov
add
mov
add
in
add
ret
sahf
inc
leave
add
inc
xchg
mov
shrb
jmp
cmp
sahf
mov
add
aas
call
mov
add
pop
xor
mov
push
sbbb
add
and
js
mov
jno
scas
sbb
cmp
or
pop
add
rcrb
lods
jo
xchg
push
cmp
adcl
insl
jo
add
lds
xlat
dec
mov
add
std
or
and
push
add
rolb
xorb
or
and
rolb
shlb
sbbb
add
xor
mov
mov
pop
xchg
mov
fistpl
add
cli
add
add
loop
add
push
or
fdiv
add
outsb
push
mov
lcall
mov
icebp
sbb
inc
push
mov
cld
add
mov
adc
add
or
std
mov
ljmp
sysexit
fcomps
adcl
test
mov
shll
pop
rcll
mov
jmp
add
add
mov
push
xor
push
addl
fisttpll
or
sbb
sbb
xchg
push
jecxz
mov
cmp
add
mov
bound
jb
adc
data16
movsl
inc
add
ja
rolb
aaa
mov
pushf
ds
sbb
add
jmp
adc
inc
adc
lods
cld
movsb
cmc
outsl
rolb
pop
repz
rorb
cwtl
pop
aad
push
add
daa
jp
rorb
push
lret
or
pop
dec
xor
add
add
add
imul
mov
sahf
cmpsl
cld
sbb
sbbl
dec
lcall
cs
sub
insb
arpl
add
inc
sbb
add
cmp
fistps
ljmp
push
xlat
pop
jb
add
ret
mov
mov
testb
add
push
sbb
int
or
pusha
cmp
or
add
pop
push
out
sbb
outsl
stos
rcl
js
fadds
dec
ret
mov
outsb
mov
dec
mov
jmp
mov
cmpsl
add
mov
pop
gs
inc
sbb
mov
dec
xchg
nop
mov
and
adc
lock
lods
test
mov
push
shlb
adc
add
cwtl
aam
add
or
std
pop
mov
cmp
bound
or
jmpw
add
pop
xor
or
popa
les
cltd
out
bound
stos
adc
or
fucomi
repz
inc
test
add
lret
add
in
mov
xchg
and
add
push
jp
sub
hlt
dec
imul
adc
lock
xor
pop
sub
add
adc
scas
xchg
xor
testl
and
incb
sub
or
sbb
cmp
mov
repz
sti
mov
add
lock
add
call
pop
mov
ret
loopne
mov
int
imul
fsubr
mov
dec
sahf
dec
push
mov
add
xchg
enter
dec
push
or
mov
fucomp
jae
fldt
lret
xlat
stos
dec
mov
add
roll
test
inc
mov
leave
fsubrl
cwtl
lret
add
and
sub
add
sbb
add
fucomi
add
leave
loop
jo
subb
mov
cltd
lods
inc
sbb
xchg
stos
addl
pop
mov
stos
inc
add
xchg
test
xchg
dec
mov
sbb
addb
cmpsl
ret
add
call
cmpsb
inc
pop
cltd
cmp
xor
test
push
sub
mov
and
mov
mov
adc
add
mov
add
popf
stc
cmc
fstl
mov
pop
inc
add
std
mov
mov
mov
insb
enter
mov
push
add
sbb
adc
push
add
stos
out
cmp
pusha
cmpps
inc
cs
add
adc
or
cltd
add
xchg
fcmovbe
rorl
jg
roll
add
sar
loope
sub
lods
cld
jmp
inc
mov
dec
addr16
jle
stos
jns
das
cwtl
add
test
mov
insb
movb
pop
push
out
xlat
sub
or
or
add
mov
jp
sbb
mov
mov
mov
mov
aaa
lock
push
sarl
add
aas
jmp
add
add
inc
push
and
fimuls
xchg
clc
xchg
cltd
aad
clc
add
pop
std
xchg
data16
call
lea
inc
out
loopne
in
out
push
push
aas
cmp
add
xchg
jp
ret
ret
mov
es
sub
add
fwait
cmpsb
push
jno
add
ret
std
testl
push
add
mov
pop
cmp
stos
add
pop
imul
in
add
ljmp
dec
add
ja
aad
mov
test
jg
cmpsb
or
sub
pop
inc
push
inc
xchg
inc
add
imul
add
mov
sti
stos
fildl
test
shll
loope
add
mov
mov
pop
fildl
cmpsl
jbe
test
or
mov
sbb
loop
push
add
adc
add
xchg
das
adc
add
and
push
out
mov
push
xor
arpl
leave
mov
mov
xchg
adc
pop
cld
pop
pop
dec
dec
nop
flds
jg
cmp
push
add
fwait
cmp
pushf
pop
mov
mov
xlat
aam
test
les
mov
mov
cmp
pop
dec
testb
jno
sbb
add
and
daa
xchg
mov
add
leave
push
or
add
cs
icebp
mov
xor
sbb
pop
push
push
add
call
inc
add
cmpsb
ja
mov
xchg
in
mov
das
lret
popa
icebp
add
and
dec
data16
mov
inc
add
push
addr16
loope
mov
nop
call
inc
adc
sub
mov
nop
add
test
push
jl
add
adc
cld
int3
dec
mov
cmp
addb
mov
jmp
pop
xchg
sarl
js
daa
mov
ret
call
sub
dec
xchg
mov
adc
jge
jecxz
or
push
clc
adc
addl
add
test
or
icebp
jne
bound
fiadds
jns
cwtl
inc
inc
add
xchg
jns
mov
mov
movsb
push
loope,pt
cmp
test
inc
dec
mov
adc
lods
mov
pop
dec
out
rolb
int
pop
outsl
xchg
seto
pop
in
xor
xchg
add
push
test
notl
movsl
or
aas
sbb
xor
mov
xchg
rolb
aam
pop
sub
mov
cli
adc
lods
mov
mov
mov
out
sub
and
pop
xor
mov
les
in
in
jno
mov
imul
cmpsl
popa
fcmovne
mov
cmpxchg
pop
mov
push
push
add
push
cmp
inc
mov
or
mov
test
psrlw
in
das
xchg
add
xchg
jmp
add
daa
lret
lahf
insl
add
adc
mov
std
test
push
ss
cld
ja
xchg
sbbb
mov
es
int3
push
scas
xchg
xor
sbb
sub
and
cmp
mov
popa
add
cmpsl
jg
xor
mov
add
or
mov
add
xchg
sti
mov
xor
or
mov
loop
push
popa
in
cmp
ret
or
or
add
test
loopne
cmp
pop
lea
rcrb
add
push
roll
add
leave
out
mov
ja
in
test
mov
mov
cmp
add
clc
imul
pushf
sub
add
or
add
outsl
popf
mov
push
lods
push
add
lods
daa
pop
mov
movsl
ret
push
or
add
repnz
icebp
add
fstl
mov
inc
xchg
adc
les
sub
mov
jmp
or
shl
flds
mov
stos
pop
jb
add
jno
out
add
movsb
lret
adc
cwtl
add
inc
cmp
mov
shrb
lods
out
or
les
add
mov
mov
adc
les
sub
mov
adc
or
cmc
test
adc
or
rcrb
ret
and
les
or
add
aaa
lea
add
insl
loopne
xchg
mov
scas
mov
xor
cwtl
sar
scas
pop
verw
stos
data16
cmp
mov
xchg
jle
enter
les
mov
add
adc
jb
add
mov
jg
add
jae
popf
pop
data16
add
push
cwtl
dec
pop
out
bound
loopne
insb
xchg
cmp
add
test
mov
inc
add
dec
sahf
in
sbb
mov
xchg
pop
mov
pushf
in
inc
pusha
cltd
adc
cwtl
add
push
push
xor
add
add
mov
lods
data16
das
fnstenv
inc
insb
add
pop
and
pop
in
in
mov
out
and
or
mov
pop
bound
push
xlat
mulb
mov
and
rol
mov
jg
jb
pushf
sub
lods
dec
inc
sbb
jns
iret
mov
aad
testb
jmp
jecxz
xchg
cmpsl
xor
loope
fs
push
fcomi
mov
dec
rorl
xchg
inc
mov
sub
jns
push
pop
ret
xchg
sbb
addb
pop
add
rcll
add
mov
push
or
jnp
mov
cmc
ret
inc
cmp
aam
xorb
push
xor
inc
inc
add
ret
push
add
cltd
mov
outsb
and
movsb
or
sbbb
inc
inc
movsl
push
push
or
add
stos
jp
mov
add
dec
or
mov
notb
mov
add
push
dec
stos
add
push
js
leave
in
cli
add
inc
shrl
add
cmp
hlt
add
or
adc
insl
mov
outsl
mov
cmp
das
pushf
enter
dec
mov
push
aam
cmp
jb
pop
outsb
fadds
jne
inc
je
mov
cmp
fcmove
mov
int3
add
pop
hlt
push
sub
pmulhw
push
inc
popf
mov
xchg
and
add
xor
inc
movq
test
jnp
mov
enter
iret
cmp
mov
leave
pop
addl
add
jmp
add
les
ss
add
loopne
xchg
pop
mov
enter
xchg
dec
ret
and
adc
mov
mov
clc
stos
stos
shr
cmp
popf
enter
adc
mov
hlt
adc
mov
rclb
dec
popf
mov
jno
add
inc
add
ret
add
xchg
or
add
push
dec
lcall
pop
test
fldl
mov
push
mov
add
mov
arpl
int3
sbb
lods
mov
pop
push
cmp
sbb
rorl
aam
std
xchg
insb
add
and
pop
sub
add
jnp
xor
pop
or
rcrb
adc
dec
imul
mov
sub
add
scas
lods
adc
mov
sbb
test
loopne
mov
je,pn
bound
je
push
ja
add
cmc
mov
fucom
inc
add
sub
mov
adc
ret
fistl
and
jo
rorl
inc
lahf
inc
jecxz
bound
sub
lret
into
aas
insl
shlb
and
mov
xchg
add
sbb
ffree
aam
push
dec
add
adc
sub
and
pop
stos
sub
in
xchg
adc
sarl
mov
mov
outsl
push
dec
dec
dec
rorb
add
xchg
mov
add
cs
gs
add
stos
andb
es
pop
data16
push
pushf
insb
gs
xchg
dec
inc
roll
scas
mov
lret
inc
xchg
pop
mov
clc
rolb
repnz
pop
mov
sti
add
je
loopne
jp
cmp
idivb
adc
repz
mov
bound
mov
pop
in
cmp
add
push
or
test
data16
cltd
and
inc
add
mov
faddl
loope
sarb
pushf
xor
mov
aad
pusha
addr16
add
jae
xor
clc
dec
add
dec
int
sbb
adc
or
iret
les
je
add
gs
mov
dec
inc
mov
adc
movsb
into
test
inc
add
cmp
and
pop
int
add
sbb
mov
rorb
dec
test
cwtl
cmp
add
push
pusha
mov
loopne
push
out
mov
add
push
outsb
xor
mov
repz
push
pop
jae
lock
xchg
add
and
sbb
dec
mov
add
or
orl
xchg
jbe
add
mov
shlb
cmpsl
repz
xor
mov
bound
punpcklbw
mov
add
rcll
mov
sub
fstpl
fs
push
fcompl
and
or
pop
inc
bswap
aad
xchg
and
popa
stos
jnp
sti
xchg
xlat
data16
inc
mov
cmpsl
cmp
fsubrl
es
gs
cwtl
cmp
add
and
mov
imul
mov
ds
mov
sbb
stos
xor
testl
xor
aas
dec
mov
add
push
mov
clc
add
adc
mov
sahf
xor
popa
pop
das
roll
xchg
imul
or
in
out
cmp
dec
add
lcall
add
pusha
cmp
clc
add
lea
and
pop
pushf
push
push
xadd
lret
ja
sub
fisttpll
idiv
xchg
mov
mov
mov
cmp
pop
outsl
andb
pop
add
add
cmp
xchg
int3
lret
and
enter
addb
xchg
adc
cmp
in
ds
ss
add
cmpsl
cmp
adc
pop
gs
lahf
and
and
add
enter
add
jae
arpl
adc
mov
mov
push
add
and
xchg
adc
jge
add
sarb
inc
pop
or
sti
push
push
mov
decl
adc
push
push
sbb
mov
and
pop
movsb
sbb
les
add
ds
adc
pop
jne
cwtl
fdivr
sub
ljmp
add
jae
testl
into
pop
mov
popf
dec
arpl
mov
lahf
movb
sbb
cmc
jo
ljmp
or
iret
sbb
cltd
mov
daa
mov
mov
jnp
cmp
add
addb
mov
lea
or
cmpsl
movsl
les
cld
test
jns
or
add
lock
lahf
xchg
mov
cmc
sbb
add
cmpsb
and
flds
mov
pushf
xor
pop
mov
push
add
fcmovnbe
out
xor
pop
call
add
rorl
add
lcall
and
in
add
stos
mov
adc
push
or
dec
mov
lret
push
pop
cwtl
lahf
and
sahf
adc
jbe
jnp
add
jecxz
in
pushl
add
xor
gs
add
sarl
bound
mov
out
rcrl
mov
testb
jns
mov
add
sbb
xchg
adc
or
pusha
mov
enter
insl
and
add
fsubrs
das
jmp
cmp
mov
adc
std
in
add
jmp
lods
sub
pusha
adc
cmp
mov
out
and
jbe
aas
lret
pop
jle
add
sahf
sti
adc
aad
repz
add
je
les
xor
lods
popf
push
add
pushfw
loope
adc
add
jp
loop
jl
add
fiadds
les
leave
add
and
addr16
cmpsb
fbstp
das
repz
repnz
xor
adc
push
movsb
mov
call
add
sub
xchg
cmpsl
lock
and
and
pop
jge
add
in
jno
pop
loopne
add
rcrb
out
and
adc
lods
ficompl
sub
filds
inc
add
add
mov
cmpsb
pop
repz
psubq
and
xor
scas
mov
sub
mov
push
test
shrb
adc
loopne
dec
loopne
movsb
pop
mul
add
sub
lods
pop
add
lods
push
shl
mov
add
sbb
adc
push
pop
pop
cltd
mov
dec
mov
and
scas
inc
ja,pn
and
outsl
add
leave
push
les
mov
ja
bound
cmp
and
xorb
inc
add
pop
jl
cwtl
aas
and
add
out
daa
stos
sbb
adc
aaa
bnd
xchg
in
or
lods
rclb
add
sbb
xlat
xorb
in
pop
btr
adc
lods
lcall
cmp
add
sub
jp
sub
xchg
pop
cmp
movsl
xchg
int
repnz
pop
push
rolb
jecxz
mov
emms
les
mov
jp
add
xchg
mov
add
adc
push
call
dec
adc
mov
add
faddl
push
aaa
pop
xchg
add
lds
push
cmpsb
cli
shrl
ret
add
sbb
adc
jno
imul
cmp
add
je
and
add
es
sti
cwtl
aas
pushf
add
inc
xchg
jb
test
push
clc
mov
inc
mov
fsubl
mov
mov
mov
cmp
or
rcrb
jl
and
pop
daa
cli
add
pop
cmpsl
sub
pop
dec
xchg
aaa
add
cs
sub
gs
arpl
or
fadds
xor
fidivs
sub
scas
bound
and
mov
and
stos
pusha
dec
test
sbb
movb
dec
and
cmp
pop
incb
mov
mov
adc
mov
mov
push
int
rorb
nop
add
hlt
test
aaa
neg
pusha
add
or
cmp
lcall
mov
les
sbbl
push
sbb
add
pop
cmp
sahf
jo
aam
mov
sub
push
add
jge
sub
add
mov
cmp
mov
clc
add
popf
jg
iret
int3
or
testl
inc
mov
lods
add
jecxz
mov
jae
cmpb
add
scas
cmp
xlat
or
scas
add
pop
fchs
dec
iret
test
inc
out
jnp
jb
mov
jno
add
out
add
sbb
inc
push
adc
mov
fmull
hlt
lds
mov
adc
adc
inc
pop
adc
add
mov
insl
mov
add
mov
jmp
xor
add
push
jmp
ss
mulb
add
jle
insb
add
and
pop
sahf
pop
pop
add
mov
adc
lods
imul
jnp
repz
lods
aam
xorl
adc
mov
push
out
dec
mov
int
data16
sbb
inc
xor
outsl
flds
jno
sbb
mov
mov
shlb
mov
mov
dec
loopne
mov
cmc
arpl
aas
jmp
cld
add
ret
mov
notl
cmp
rolb
incl
sbb
loope,pt
out
and
pop
cmp
inc
xorb
mov
lds
adc
leave
xchg
das
adc
sub
mov
fwait
add
stc
pop
dec
adc
jp
mov
add
imul
or
rclb
popl
add
xor
dec
jb
or
jle
push
add
push
xor
jecxz
add
gs
add
idiv
fisttps
ljmp
les
repnz
sbb
add
jns
adc
and
inc
sub
sub
pop
ss
cwtl
add
ficomps
loop
adc
loopne
sbb
pop
inc
dec
test
mov
scas
push
sub
xor
add
cmp
add
sbb
cmp
pop
add
pop
aaa
in
imul
pusha
sahf
jl
aas
mov
xor
popf
add
std
xchg
mov
dec
mov
nopl
and
or
pop
cs
mov
xor
je
mov
push
addb
mov
xchg
and
clc
pop
cmp
and
nop
jg
std
pop
add
mov
add
out
jle
mov
js
popa
adc
call
mov
movsl
jno
mov
push
sub
shlb
adc
adc
ss
xor
cwtl
adc
or
add
cltd
ss
add
lret
in
cmp
pop
mov
insl
sbb
ja
add
cli
or
fstl
or
bound
sbb
mov
adc
xlat
xlat
sbb
adc
mov
sti
test
xorl
cmp
sub
and
mov
bound
and
pop
adc
xchg
das
mov
pop
add
mov
out
scas
jbe
pop
test
sti
add
add
notb
cmp
add
inc
and
test
xchg
mov
cmp
ljmp
or
adc
int
jl
push
fmull
test
jae
pop
or
fldcw
dec
adc
or
push
pop
imul
pop
mov
inc
xchg
add
aad
pushf
adc
lahf
mov
add
in
jno
cmp
jle
imul
add
sub
xlat
jb
add
addb
subl
xor
mov
test
fbstp
adc
in
arpl
orl
out
and
adc
int3
loop
enter
xor
arpl
shlb
cmp
xchg
jae
adc
lock
add
sub
add
mov
jb
adc
scas
dec
pop
pop
cltd
cltd
add
xor
cli
test
sbb
jns
mov
mov
push
add
lods
sarb
pop
pop
mov
adc
push
lods
adc
dec
js
add
mov
and
inc
xchg
icebp
add
dec
and
es
sub
inc
loopne
inc
loope
dec
lds
xchg
scas
sbb
ret
movsb
mov
test
cmp
add
push
pop
outsl
add
add
outsl
repz
stos
xchg
clc
inc
jecxz
adc
adc
cmp
lods
cmp
repz
sub
lea
lcall
jle
cmp
pop
sub
cmpsl
icebp
inc
es
xchg
adc
and
xor
rclb
jg
add
shl
add
mov
add
push
scas
push
add
pop
and
mov
adc
push
push
pop
or
into
sub
adc
add
add
cmp
clc
inc
movb
dec
xchg
das
or
icebp
add
and
push
fadds
add
test
and
lret
add
xor
jae
je
fidivs
or
sub
scas
xchg
je
jge
add
cmp
mov
sarl
pop
pop
mov
mov
cmp
stc
push
or
xor
adc
mov
pusha
enter
pop
das
and
adc
cmp
cmp
aas
mov
pop
testb
add
adc
rol
sti
outsl
insb
add
aaa
push
and
fs
add
repz
test
pop
sub
and
mov
mov
xchg
enter
adc
testl
pop
pop
mov
inc
mov
testb
jne
cmp
hlt
pop
fidivrl
sub
enter
inc
xor
add
mov
push
cmc
xchg
out
jae
mov
add
loop
mov
rolb
out
fwait
add
dec
movsb
mov
sub
in
movsb
add
xchg
stc
push
xor
cmpsl
pop
ja
and
adc
lods
enter
es
aas
add
fsubl
inc
adc
lods
ljmp
cmp
bound
push
adc
inc
adc
mov
adc
or
xor
movsb
and
imul
dec
cmp
inc
scas
add
popa
mov
int3
test
stc
outsb
dec
out
add
fcompl
or
or
inc
add
or
gs
mov
lahf
dec
add
test
sbb
and
inc
jns
inc
xchg
mov
imull
dec
sub
add
add
mov
sbb
shr
mov
out
jo
inc
xchg
mov
xchg
inc
add
popf
in
aad
mov
inc
cwtl
loopne
mov
dec
jg
add
aaa
scas
inc
mov
push
sbb
pushf
clc
test
xchg
mov
cmc
and
mov
xchg
mov
add
sbb
adc
or
nop
and
push
sbb
xor
stc
test
in
jns
or
add
pop
cltd
add
cmp
icebp
insl
add
or
lods
push
cwtl
add
test
fwait
in
add
and
icebp
mov
popa
negl
xor
inc
cmp
add
jl
repnz
adc
out
in
cltd
inc
cmp
stos
in
xor
xor
jae
add
adc
rorb
flds
mov
push
jns
mov
stc
dec
cmpsb
fcmovnb
mov
arpl
add
insb
repnz
push
test
add
or
mov
and
mov
pop
add
jl
lods
jno
mov
push
jle
add
aam
fstl
cwtl
cmp
inc
add
into
popa
loopne
test
jns
inc
mov
and
pop
adc
filds
lods
add
stos
inc
xor
pop
add
fmull
pop
push
jl
add
in
xchg
cli
test
loopne
ljmp
or
daa
xlat
dec
stc
add
jo
add
mov
push
cwtl
add
call
pusha
lret
cmpl
sbb
jg
add
cwtl
or
dec
incb
bound
xorb
adc
rcrl
xor
xor
adc
fmuls
rorb
pop
xor
add
or
dec
mov
add
jle
add
xor
adc
push
and
stos
roll
jo
in
outsb
shll
add
mov
mov
cmp
les
cmp
test
mov
divb
adc
clc
push
jbe
adc
in
cmp
ret
cwtl
movsb
sub
in
stos
push
lahf
data16
add
aas
std
adc
dec
push
les
cmp
mov
cmp
pop
ror
or
rorb
or
inc
lcall
jo
xlat
or
js
mov
add
pop
push
add
cmp
cwtl
cltd
mov
sbb
add
mov
cmp
mov
jmp
or
test
insl
push
xor
xchg
or
add
popf
jmp
shrl
mov
sub
jo
or
ret
and
lcall
jnp
fdivrs
ljmp
loop
add
cmp
mov
je
dec
test
inc
inc
jae
sub
mov
push
test
inc
fnsave
dec
add
and
fmuls
mov
loop
xor
push
mov
lidtl
push
mov
mov
jle
inc
xor
daa
pop
jo
adc
jnp
decl
add
mull
xchg
pop
add
sbb
scas
and
stos
bound
push
adc
and
loopne
fldt
add
outsb
fadds
sub
push
gs
mov
add
int
push
cmp
add
or
test
xchg
or
sub
cmp
adc
adc
lods
and
xchg
cmp
xchg
imul
ffree
and
out
daa
dec
inc
test
cmp
add
rcrl
sub
cwtl
mov
add
popa
and
cmpb
add
or
test
push
mov
xor
roll
mov
mov
fiaddl
or
mov
sarl
ret
out
fwait
dec
mov
data16
rcrb
pop
sub
add
jge
nop
scas
ret
ds
pop
sbb
mov
dec
add
inc
adc
test
popf
lret
je
les
and
fwait
addb
pop
add
add
inc
add
idivl
stc
out
cwtl
push
pop
std
mov
outsb
sub
aas
bound
add
add
mov
jge
add
and
push
daa
and
cmp
orb
add
pop
add
repz
mov
add
adc
aam
in
int3
pop
mov
mov
addr16
inc
mov
pop
xor
cs
add
gs
mov
fadds
xchg
test
mov
faddl
mov
jbe
inc
jl
cld
int3
std
add
pop
xchg
or
jl
and
fisttpl
dec
xrelease
jb,pt
add
lods
out
int
sub
les
cltd
push
jns
enter
popa
aad
add
mov
adc
dec
jg
add
inc
loopne
inc
and
or
aas
add
jbe
cwtl
mov
add
data16
test
and
lcall
sub
jl
or
fabs
mov
mov
and
xchg
lods
xor
ljmp
push
adc
xchg
xchg
cmpb
push
test
es
mov
stos
cs
add
add
in
add
test
inc
loop
sub
cmp
out
cltd
loope
and
add
cmp
lods
pushf
add
dec
lret
add
stos
xchg
mov
psllq
stc
cltd
pusha
cmpsl
mov
icebp
jns
sub
xor
add
or
dec
jbe
mov
sbbb
add
pusha
or
or
add
cmpb
test
mov
pop
add
adc
cltd
add
jg
cmpsl
dec
push
out
lahf
icebp
add
rcrb
pop
pop
xchg
mov
fdivrl
fwait
or
adc
push
add
in
mov
sarl
test
mov
into
in
mov
lret
add
and
jo
or
test
xor
mov
aaa
pop
ds
add
push
mov
bound
add
and
mov
add
adc
or
mov
mov
sbb
push
popa
or
sub
fcmovbe
pop
push
or
cwtl
je
mov
sbb
inc
dec
popf
sub
pushf
pop
push
mov
and
sahf
leave
dec
out
iret
xchg
pop
sbb
aam
sub
add
into
pop
mov
add
rcrb
mov
mov
popa
sbb
roll
sbb
les
jnp
shr
lods
cmp
sbb
cmp
shl
dec
in
sub
test
add
add
dec
jle
int
lods
jne
mov
loopne
dec
test
adc
nop
and
or
sbb
data16
and
mov
stc
jl
jb
adcl
aad
add
fisubrl
mov
sub
or
testb
jle
xor
xchg
and
mov
imul
rolb
sbb
outsb
xor
add
addl
jnp
mov
or
lahf
sub
sbb
movb
and
out
enter
pop
push
cmp
loope
cs
inc
lahf
in
add
and
pop
xor
loop
mov
mov
jmp
adc
sub
sub
or
les
dec
scas
ret
sti
add
arpl
inc
adc
add
dec
in
dec
cmp
add
idivb
or
sbb
jo
mov
and
es
add
and
dec
fcomps
shll
jle
repz
pop
out
and
nop
mov
push
hlt
jle
add
jb
fwait
sbbb
cmp
pop
mov
aad
cmp
lock
mov
push
mov
mov
aaa
sbb
pop
dec
lock
and
aam
les
test
cmpl
test
test
test
rolb
and
lret
das
add
std
add
push
and
or
mov
sub
or
add
pop
sub
push
sbb
repz
pop
in
dec
adc
inc
cmp
div
dec
add
imul
fcomps
mov
rclb
cmp
mov
hlt
add
sahf
and
sub
mov
mov
adc
lods
pop
pusha
ja
roll
adc
inc
sub
icebp
iret
mov
add
add
lret
push
add
shr
aad
mov
mov
push
cs
jnp
add
les
scas
lahf
cmp
orb
fcmovnu
iret
add
cmp
add
fidivs
cli
out
outsb
pop
popa
inc
cmpsb
dec
cmc
outsb
add
xor
and
sbb
loop
test
or
lods
inc
adc
mov
xchg
cmpsb
xor
and
add
add
add
push
pop
inc
sbbb
cmp
add
jg
and
inc
adc
popa
cmp
push
add
lds
cmp
ljmp
nop
adc
sub
cmp
add
jnp
daa
lods
and
pop
daa
nop
stc
dec
push
add
unpcklps
mov
and
jne
sub
aaa
roll
in
cltd
xchg
cmc
mov
cld
add
in
lods
inc
jg
sub
inc
roll
mov
pop
inc
mov
pop
mov
data16
aaa
popf
cmp
ret
dec
les
inc
pop
jl
bound
adc
cmp
imul
mov
cld
add
dec
test
add
and
jp
pop
add
fsts
pop
dec
add
and
mov
push
xor
aaa
xchg
adc
or
mov
add
xchg
add
add
or
mov
mov
jae
popf
push
add
movl
test
sbb
out
or
rorl
adc
int3
add
test
loopne
pushf
lcall
or
mov
push
je
add
sbb
cmpsl
aas
out
mov
sbb
push
mov
xor
repz
sbb
cmp
pusha
sub
jns
or
jo
push
cmp
mov
test
cmpl
sbb
mov
rorb
sbb
and
int
sbb
xor
inc
jnp
mov
cmp
xorl
mov
sbb
xorb
fldenv
adc
imul
or
add
rcll
sbb
mov
pop
sub
jnp
adc
jl
add
dec
mov
adc
adc
mov
or
mov
inc
mov
mov
push
add
add
adc
add
movl
xor
add
and
adc
mov
mov
mov
test
lock
sbb
xchg
or
mov
push
push
mov
or
sbb
data16
push
xchg
push
lock
mov
xchg
jns
add
jge
cmp
shr
sub
sbb
add
push
sbb
int3
add
jbe
inc
shll
sub
ljmp
or
mov
das
pop
loope
icebp
mov
inc
inc
out
bound
inc
adc
mov
add
mov
dec
repnz
lods
inc
add
mov
or
pusha
in
push
cmp
adc
in
add
mov
cld
add
repnz
inc
mov
sub
push
cwtl
add
int3
mov
mov
outsb
ret
xor
leave
imul
daa
push
cwtl
push
add
scas
data16
pop
xor
xor
lods
xchg
inc
mov
sub
lock
add
ljmp
loope
pop
xchg
push
fstpl
or
adc
aaa
xchg
dec
enter
add
mov
pushf
hlt
sub
inc
dec
push
sub
pop
mov
lahf
popa
pop
inc
stc
add
js
cmpsb
psubd
add
or
mov
push
sub
imul
mov
movb
mov
jo,pn
hlt
add
jbe
bound
mov
add
add
shl
pusha
adc
inc
or
mov
add
dec
stos
in
sub
inc
xor
ret
pop
in
mov
setbe
ror
sbb
outsl
mov
enter
cs
mov
add
pop
mov
or
out
mov
fisttps
pop
sbb
add
mov
pop
rcrb
repz
ds
xor
in
in
adc
cmpsb
or
sub
pop
repz
jnp
or
or
and
dec
mov
mov
adc
sub
mov
jne
add
cmpsl
push
add
test
add
test
mov
jle
add
ss
fiadds
out
insl
adc
stos
or
xchg
jp
inc
ljmp
sbb
loopne
adc
mov
mov
inc
jno
sub
inc
imul
or
inc
dec
add
iret
jnp
mov
fwait
jo
adcb
movsb
jl
cmp
mov
add
xchg
adc
rolb
rclb
add
push
imul
test
add
adc
or
add
fcmovnbe
data16
cmc
and
jnp
ja
rcrb
mov
cmp
inc
adc
xor
popf
and
enter
jl
add
fsts
mov
das
adc
mov
jnp
out
add
pop
pushf
jo
aas
add
push
pop
sub
outsb
add
int
testb
mov
and
mov
or
sbb
test
add
data16
mov
rcr
xchg
cmp
push
es
rolb
aad
out
scas
decb
ret
adc
loop
clc
sub
pop
sbb
pop
jmp
jmp
mov
lods
daa
mov
sub
jge
add
xlat
mov
add
lock
notb
add
cmp
mov
jbe
adc
popl
loop
xchg
and
xor
mov
adc
rcrb
inc
mov
adc
adc
add
push
pop
sub
xchg
add
and
arpl
mov
jle
jns
jge
cmp
mov
pop
add
xlat
jp
clc
int
pop
rol
out
dec
insb
out
inc
mov
out
add
and
adc
and
andb
leave
mov
add
sub
jg
ret
xchg
repz
imul
das
sub
add
aad
xor
test
int3
sbb
add
pop
fisubrs
xor
mov
adc
fisttpll
leave
xchg
add
andl
mov
and
mov
sub
cmp
pop
int3
add
and
jecxz
dec
sbb
loopne,pn
mov
lret
jle
add
daa
cwtl
pop
and
aas
mov
adc
adc
lods
xor
mov
stc
xchg
add
jl
add
jb
pop
outsb
mov
xor
add
bound
aam
std
or
push
mov
mov
cmp
out
mov
and
sbb
pop
jecxz
jl
cmp
inc
jae
dec
mov
mov
mov
mov
icebp
and
outsb
or
push
leave
xorb
pop
sbb
out
out
sub
push
adc
push
jmp
adc
les
xor
pop
negl
lea
mov
dec
add
imul
add
mov
and
xchg
je
and
movb
xor
fstps
popa
add
ss
pop
or
ret
stos
bound
dec
adc
shl
ss
mov
add
jae
test
cmpsb
add
ret
cs
add
scas
cmp
add
and
imul
lods
add
cmp
mov
out
addb
aaa
xlat
add
ss
sbb
mov
or
xchg
fstpl
add
mull
repnz
mov
loope
sub
repz
mov
scas
pop
push
xchg
mov
insl
and
outsl
outsb
ja
push
jno
das
adc
and
pop
xlat
fnstsw
add
lret
mov
fisubl
fnstsw
add
test
xlat
enter
movsb
mov
aas
dec
and
or
rolb
jle
pop
ja
jp
mov
sbbb
mov
cmc
faddl
mov
and
je
push
les
add
sub
mov
in
lods
aaa
or
es
in
cmp
int3
add
jbe
add
pop
inc
int
test
aam
call
jg
pop
add
sti
jp
ja
add
mov
jb
mov
out
cmc
movsb
add
mov
pop
xor
jecxz
xor
iret
negl
loopne
fstpt
fdivrs
push
add
mov
rol
divb
divl
adc
adc
xchg
adc
mov
xor
lahf
subb
mov
add
mov
sub
mov
add
or
add
fdivr
lods
push
iret
add
or
mov
mov
and
adc
add
xchg
jno
xchg
push
push
sbb
mov
adcb
pop
or
mov
inc
mov
mov
syscall
pop
jmp
loop
add
bound
fnstcw
in
lar
cmp
sub
arpl
ret
and
dec
xchg
aaa
add
push
cmc
sahf
xor
push
in
add
add
mov
xor
push
xorl
popf
fmuls
dec
or
push
int3
add
sarl
test
iret
inc
add
cli
inc
cmp
pushl
stos
jnp
test
sti
and
adc
push
cld
lods
lods
xchg
int3
mov
jnp
add
or
cld
adc
ficoms
add
mov
sub
and
pop
sub
jl
cld
add
loopne
mov
sbb
or
xchg
mov
cmp
rolb
mov
data16
fcmovnu
or
pop
in
add
jmp
add
pop
push
pushf
cmp
cmp
icebp
pusha
scas
pusha
test
or
and
add
inc
push
testb
iret
out
and
outsl
mov
add
jne
add
adc
rol
cmp
pushaw
out
and
add
mov
mov
mov
xchg
sub
cmp
dec
negb
adc
ljmp
push
jp
fs
jmp
xchg
mov
add
xor
dec
ficoml
rorb
hlt
push
jmp
add
daa
dec
scas
repz
sbbb
sbbb
lock
sub
push
push
clc
aam
je
add
mov
fildl
imul
sub
ficoml
add
xorb
mov
adc
push
add
fwait
push
pop
add
xor
loope
add
inc
stos
add
jns
add
add
sub
xor
pusha
fadds
mov
pop
dec
ja
fwait
nop
xor
jmp
add
loope
sarl
pavgw
sub
sbb
push
jb
mov
push
add
and
xor
xchg
cwtl
test
jmp
andl
dec
push
push
add
or
lea
aad
push
add
pop
adc
add
jl
mov
imul
lds
hlt
pop
add
call
xchg
mov
popa
pop
mov
mov
sub
mov
or
adc
lret
pop
jmp
popf
add
push
mov
das
cmpsl
pop
cld
add
cmp
sub
nop
add
xor
cmp
scas
add
mov
xchg
popf
into
add
jne
add
pusha
sbb
out
pop
scas
sbb
pop
mov
add
popa
jl,pt
and
js
ret
add
push
fs
and
add
fwait
cld
add
mov
out
stos
sub
pop
xlat
loope
mov
add
xor
pop
push
xor
mov
movsl
jl
adc
cwtl
add
add
add
cmp
frstor
mov
lods
popa
ret
add
cli
js
mov
subb
popf
test
pop
je
mov
jbe
cltd
add
adc
sbb
sbb
push
loope
jmp
mov
ljmp
sbb
cld
cmpsl
rolb
cltd
pop
xchg
add
in
jp
incl
pop
addb
add
mov
shrb
test
adc
lock
sbb
add
out
sub
inc
add
sbb
sbb
mov
mov
ficomps
mov
outsb
add
and
clc
or
inc
push
jne
leave
shlb
adc
jle
add
mov
jmp
cmc
push
pop
lock
aam
test
xor
sub
pop
xor
push
add
test
leave
jbe
pop
roll
jl
lock
scas
imul
fstl
outsl
test
in
add
scas
jl
cmpsl
cli
add
or
aas
add
lods
gs
in
add
mov
pushf
sti
popf
arpl
push
or
and
and
dec
je
mov
ret
pop
jbe
and
cmp
jae,pt
imul
sub
nop
xor
shll
ss
sbb
jb
add
out
push
lcall
add
arpl
stos
pop
movsb
xlat
mov
mov
adcb
jmp
add
and
popf
adc
insl
mov
jg
add
xchg
and
add
call
cltd
clc
jmp
add
pop
addr16
fisubrs
pop
mov
dec
push
add
loopne
sarb
lret
jns
pushf
lea
add
dec
pop
enter
add
iret
sahf
xor
fsubrs
shlb
in
sbb
and
mov
test
cmpb
jo
pop
lcall
fimuls
fists
pop
sbb
mov
insb
xchg
cmpb
mov
faddl
out
add
mov
and
xchg
sbb
inc
icebp
add
push
aad
mov
mov
sbb
out
or
cli
push
sbb
sarl
add
mov
scas
jge
stc
jae
pop
sbb
fsubrl
fistpl
bound
xchg
clc
jb
add
cmp
mov
stc
add
mov
sub
cwtl
add
cmp
mov
hlt
dec
testl
xor
and
shl
test
jmp
add
pop
sub
mov
xor
xor
mov
push
dec
mov
ljmp
cmpb
das
jmp
fwait
into
pop
mov
mov
cmp
popa
adc
rcll
sar
aas
call
fs
xchg
xchg
jmp
add
mov
add
std
out
add
leave
mov
xor
dec
add
push
xor
les
mov
scas
mov
iret
inc
pop
add
int
sub
add
lea
mov
lret
xor
sti
repnz
addr16
jle
jb
int3
add
stos
pop
dec
bound
xchg
cld
adc
add
les
clc
rcrb
lock
inc
xchg
or
sbb
lods
push
add
fwait
push
cmc
fstpt
add
xor
or
sub
leave
jge
push
dec
hlt
sub
into
icebp
add
mov
cwtl
add
stc
and
jae
add
mov
repnz
repz
int
pop
add
in
add
mov
sahf
sti
add
in
roll
push
mulb
rolb
and
imul
orl
into
out
pop
add
and
mov
clc
adc
xchg
xchg
gs
add
shll
dec
cld
add
inc
fsubl
out
and
push
es
mov
ljmp
xor
mov
cmp
push
mov
or
aam
xor
and
and
testb
fsubs
push
frstor
add
xchg
addb
lods
mov
pop
cmp
and
jge
cmp
mov
add
push
cmpsl
rolb
add
inc
inc
or
test
or
add
pop
out
pop
int3
cmp
mov
popl
psubb
lahf
add
sub
jl
add
cmpsl
rolb
fidivrs
inc
dec
cmp
daa
scas
jns
mov
xchg
sbb
push
pop
lret
jmp
add
dec
inc
add
sub
int3
cmp
mov
xor
adc
dec
stos
cwtl
add
add
daa
lods
fstpt
aad
fisubrs
and
nop
ds
mov
pushf
jno
int3
ret
sbb
mov
test
pop
push
cld
add
sub
inc
pusha
fxch
loop
arpl
mov
insl
cli
or
mov
mov
leave
cltd
movlhps
ret
jbe
in
rcrl
aam
and
bound
fwait
outsl
add
or
and
sbb
push
loop
and
jae
mov
xor
inc
repz
fidivrl
inc
daa
cwtl
rclb
loopne
pop
xorl
adc
add
fdivs
mov
pop
adc
cld
test
pop
in
jne
add
cli
and
xchg
lods
ja
outsb
jmp
mov
xor
ljmp
dec
mov
add
xchg
cmp
add
cli
fnstsw
out
mov
loope
clc
icebp
pop
in
roll
add
push
test
sbb
xchg
mov
push
push
mov
daa
jae
fiadds
lret
and
test
cld
add
or
jns
dec
roll
and
std
push
xchg
mov
ja
add
sbb
cmpsl
or
stc
pushf
dec
lods
stos
ds
push
add
mov
fwait
cmpsl
sbb
cwtl
adc
or
inc
jmp
hlt
xor
push
add
in
jne
add
adc
mov
mov
in
add
in
pop
add
mov
inc
jns
mov
xor
orl
rolb
add
add
mov
pop
or
xor
enter
jne
add
xor
repnz
xorb
test
mov
add
arpl
ret
mov
mov
into
cld
add
cmp
pop
mov
inc
xchg
push
inc
sub
add
imul
js
int3
lods
add
cwtl
int
fisubrs
add
and
repnz
ja
nop
push
push
dec
mov
add
aas
cmpsb
add
jmp
mov
add
dec
cmp
xchg
pusha
pushf
jno
add
push
scas
lret
mov
xor
xchg
fcoms
mov
add
lret
mov
add
dec
lock
mov
fidivrl
scas
mov
add
xor
sbb
call
hlt
fadds
cmp
je
je
lret
sarb
cmp
mov
mov
push
add
fists
in
negb
push
add
in
cmpsb
adc
icebp
or
test
mov
lods
sub
jp
pop
cmp
js
test
movl
or
cmp
test
cmp
cmp
out
add
in
xor
or
add
mov
add
and
inc
stos
and
movsb
cmova
mov
add
jmp
mov
push
xor
pop
add
popf
jle
dec
out
jp
jo
dec
fisubs
mov
cmp
pop
add
clc
movsl
rorl
sub
sub
testl
ss
mov
mov
dec
push
inc
add
int
xor
pop
add
hlt
cli
daa
aaa
fbstp
leave
adc
subl
cmpb
adc
or
mov
add
repnz
shl
jg
inc
adc
mov
movsl
mov
test
mov
push
sti
jp
pop
subb
sbb
aaa
mov
add
lcall
or
pusha
mov
mov
and
add
push
jnp
fldl
dec
sub
mov
inc
xchg
push
ja
pop
mov
pop
std
mov
fnstenv
add
cmp
loope
xchg
xchg
nop
add
push
adc
ds
inc
add
jo
mov
dec
add
aas
or
cmovno
lods
push
rclb
push
adc
cmp
hlt
scas
fcomps
add
xchg
add
movsb
int3
les
mov
test
ret
or
dec
hlt
add
adc
in
faddl
pushf
inc
xorb
ds
adcb
dec
jnp
add
sub
jne
cmp
mov
outsb
add
sub
add
sbb
or
push
imul
sbb
and
add
pusha
add
outsl
nop
int
add
mov
aam
rcrl
xchg
sub
jecxz
lods
push
sbb
push
stos
push
movb
xor
sub
lea
cmp
mov
mov
clc
cmpb
sti
add
and
cs
or
add
mov
add
test
xor
aas
adc
nop
add
cmp
jno
flds
mov
lret
rclb
xor
jge
cmp
jecxz
sti
scas
xor
insl
mov
pop
mov
lea
add
xchg
dec
int3
cmp
testb
push
pop
pop
outsl
fidivrl
dec
mov
mov
cmpsl
stc
xchg
pop
incb
xchg
mul
sub
andl
fiadds
aam
add
ret
add
outsl
fbld
lock
test
add
cli
mov
add
mov
sub
add
test
add
cli
or
hlt
push
add
mov
or
pop
or
fisubrs
pop
test
mov
push
faddl
les
adc
push
popf
iret
or
inc
jecxz
dec
lahf
inc
pop
mov
stc
push
out
jle
sbb
jl
fdivs
mov
add
nop
jbe
fwait
dec
cmp
mov
call
int
and
xor
push
cmc
out
mov
adc
daa
xchg
mov
add
sbb
movsb
add
cmpsb
fildl
sbbb
decb
add
ja
repz
jnp
inc
add
out
cmp
sub
xchg
inc
mov
lods
inc
pop
pop
cmpsb
mov
sub
cwtl
cli
push
in
repnz
xor
stc
mov
test
sahf
push
cmp
ret
add
add
mov
jne
int
in
add
loope
add
sub
popa
cmp
movsl
sbb
and
addr16
add
mov
cmp
and
mov
xchg
or
out
inc
adc
pop
xor
jbe
add
test
shlb
add
pop
out
mov
push
incb
bound
aas
jecxz
push
addr16
mov
add
cmp
jbe
pop
dec
ljmp
bound
call
lods
xchg
sbb
lea
jo
sub
xchg
out
out
mov
mov
dec
add
add
lock
ret
mov
loop
pop
inc
in
iret
mov
add
test
bound
test
pop
popf
in
lds
mov
mull
cmp
iret
sub
sub
mov
adc
notb
shll
mov
add
movsl
stos
in
push
arpl
mov
xor
push
je
add
mov
int3
xchg
push
mov
pushf
loope
and
scas
pop
filds
fisubl
adc
mov
mov
sbbl
mov
add
add
call
popf
push
fdivl
push
mov
jge
add
jp,pn
sti
shll
push
sbb
xor
jb
jns
add
call
aaa
fwait
arpl
dec
jae
push
jmp
sahf
popa
add
or
les
mov
dec
es
xchg
enter
adc
add
daa
es
add
sarb
lea
add
sbb
sub
stos
add
cmp
xor
xchg
add
inc
xchg
xlat
cmp
add
jns
jge
adcl
ffreep
mov
aas
add
dec
push
jne
mov
movb
fadds
stos
inc
push
cmp
add
mov
and
ficompl
iret
aad
jno
xchg
je
add
fwait
or
jp
aaa
stos
mov
test
loope
add
inc
hlt
enter
popf
pushw
scas
mov
roll
popf
scas
lret
cmp
sbb
aas
sahf
push
mov
arpl
jno
mov
cwtl
add
adc
call
lea
lahf
sbb
outsb
pop
movsl
jle
or
fiadds
fsubrs
movsl
add
jge
pop
inc
jmp
pop
jae
and
push
add
addr16
cmp
add
add
outsl
add
xlat
cltd
add
dec
inc
int
cmp
mov
add
cmp
mov
imul
es
in
and
bound
fisttps
test
jle
loop
shlb
dec
fcoms
mov
xchg
xor
add
cmp
mov
jne
sub
mov
test
leave
test
mov
add
aam
cmp
add
cmc
fmul
xor
fwait
in
aam
add
pop
inc
repnz
inc
jne
cld
cltd
add
sarl
repz
movsb
pop
mov
mov
mov
fstps
or
pusha
shlb
les
cli
cmp
nop
xchg
push
xor
adc
mov
inc
lea
adc
rolb
sub
testb
mov
pusha
mov
push
add
mov
dec
push
out
imul
out
push
add
jae
call
into
jnp
es
dec
and
add
jb
das
inc
aad
xlat
adc
add
and
pop
add
mov
sbb
xor
daa
add
jmp
out
sbb
test
shll
lods
pop
jle
add
std
adc
outsb
shrb
adc
adc
pop
cld
sti
xchg
cwtl
add
mov
data16
leave
cmp
add
mov
je
xor
xchg
jns
mov
pop
sahf
shl
xchg
add
cmpsb
push
pop
out
mov
mov
movb
sarl
pop
fiadds
adc
mov
cmp
xchg
xor
mov
pop
jns
sbb
shrl
xor
mov
push
andl
test
add
ss
sti
mov
dec
subb
icebp
das
mov
add
add
out
scas
inc
push
mov
pusha
inc
loope
lods
xchg
and
mov
sahf
outsl
sti
es
or
xor
adc
mov
data16
add
lahf
push
negb
add
jno
ljmp
int
sub
enter
scas
iret
add
add
bound
and
add
movsb
inc
or
add
scas
in
jb
push
fwait
pusha
cld
or
fisubrl
daa
leave
int
add
mov
add
scas
inc
and
adc
fsubs
or
fwait
cwtl
lods
loopne
mov
push
or
adcb
das
stc
in
jmp
fst
aad
add
xor
push
add
out
ffreep
add
cmp
cwtl
push
add
and
mov
sti
bound
or
push
jns
add
xchg
xorb
pop
xor
ret
daa
nop
jp
add
aad
ljmp
sti
aaa
lods
shr
add
pop
pop
add
outsl
in
popf
imul
add
cmp
adc
stos
adc
mov
and
add
loope
adc
imul
hlt
je
loopne
bswap
jp
dec
movb
mov
add
fistl
pop
push
outsl
push
and
in
dec
test
mov
out
sub
addb
aad
add
xor
or
outsl
push
rcll
mov
mov
add
pop
and
js
or
add
xchg
mov
sbb
jb,pn
jp
iret
xchg
pop
push
sub
cld
mov
scas
ret
lcall
mov
pop
add
mov
add
xchg
test
mov
mov
inc
lahf
add
add
fildl
add
or
cmp
out
sub
xchg
test
testb
orb
pop
lods
mov
pop
in
lret
add
xchg
movsl
push
mov
and
add
dec
filds
lods
jno
xchg
mov
mov
lods
and
fadds
add
lods
inc
mov
add
mov
inc
out
das
cwtl
mov
add
push
pop
push
addb
aam
inc
sbb
or
adc
movsl
lods
adc
add
popf
mov
cltd
add
sbb
sbb
dec
adc
dec
jo
movsl
loope
leave
sub
sbb
push
cld
push
push
add
add
popa
push
mov
xor
sbb
dec
scas
mov
mov
andb
adc
mov
add
and
add
enter
rcrl
add
adc
dec
sub
add
xchg
and
push
adc
subb
das
scas
out
sbb
sti
inc
push
iret
shlb
adc
xchg
fiaddl
add
popl
xor
pusha
pop
jg
add
out
pop
fdivs
add
mov
cmc
and
enter
add
xlat
xor
mov
clc
mov
out
adc
add
xor
dec
push
sti
jne
add
test
dec
jge
add
or
push
and
add
fs
cmp
icebp
sub
push
lods
and
fiaddl
nopl
out
loop
and
adc
popf
ss
or
and
jno
add
pop
inc
adc
les
pop
push
push
jl
or
inc
inc
and
daa
pop
sbb
sbb
call
pop
pop
outsb
mov
popf
sbb
cmp
call
xlat
mov
mov
jno
or
mov
ljmp
mov
add
stos
insb
add
nop
add
add
sbb
xchg
adc
mov
xlat
sub
add
or
cmp
push
add
add
add
dec
addr16
sub
sub
bound
test
add
push
or
cltd
dec
ljmp
add
pop
mov
sub
mov
add
pop
fdivrs
mov
adc
push
add
pop
popf
mov
nop
roll
cmp
xlat
fdivl
fidivrl
repz
sub
loopne
add
jp
in
mov
sub
mov
repnz
lret
call
ds
add
addr16
enter
ret
mov
mov
dec
dec
dec
lods
add
add
xchg
das
jmp
and
loopne
add
in
lahf
repz
lret
cmp
xchg
dec
ljmp
data16
push
add
xor
adc
sub
int
call
add
push
add
mov
lock
add
jp
roll
sub
inc
cmp
pop
mov
clc
outsl
mov
jne
pop
rclb
inc
add
add
add
pop
add
or
cli
je
loopne
sbb
mov
stc
loopne
sahf
fiadds
mov
add
xchg
dec
jmp
xchg
std
clc
or
out
push
popf
xchg
xor
pop
xlat
test
dec
mov
xchg
mov
xchg
or
mov
push
adc
add
add
pusha
add
hlt
iret
jb
xchg
ds
test
subb
cmp
fs
aaa
loopne
add
jns
orb
stos
sub
push
add
xor
or
add
add
fcoml
pop
push
dec
push
add
sbbl
sbb
adc
std
sbb
repnz
and
xlat
popf
imul
cmp
or
in
xchg
add
movb
scas
out
ss
dec
cmp
cmp
sbb
xor
pusha
or
test
dec
push
add
sub
ss
pop
in
mov
fmull
lahf
mov
lret
test
add
ret
cli
add
cmp
repnz
mov
flds
nop
mov
cmp
scas
filds
xchg
dec
pop
les
arpl
mov
jp
or
scas
jecxz
cmp
push
loope
jg
adc
xchg
add
sub
orb
stc
cld
adc
fst
pop
lods
roll
xor
xor
pop
push
jmp
push
gs
mov
lret
add
lock
push
sbb
or
mov
adc
out
mov
xchg
das
iret
ja
add
and
ja
add
mov
lcall
sub
jmp
shrb
and
fisubs
and
and
popa
pop
shll
fstps
lds
mov
in
jmp
xchg
xchg
xorb
dec
jle
add
sbb
push
jnp
add
mov
inc
arpl
adc
adc
sbb
in
lcall
add
dec
jb
add
mov
addb
stos
sti
add
sub
mov
mov
adc
ljmp
ljmp
add
lods
add
leave
pop
scas
jnp
or
add
pop
hlt
sub
rcrb
test
pop
data16
add
idivl
out
push
cltd
add
dec
xchg
dec
out
push
mov
int3
loopne
adc
popa
add
movsl
add
add
xchg
les
loopne
and
add
xor
test
add
inc
add
mov
dec
mov
mov
add
adc
push
mov
cmp
pop
xor
test
lret
ret
test
in
and
push
add
movsb
sbb
cmpsl
repnz
mov
add
xchg
aad
icebp
push
xchg
std
add
les
xlat
lds
add
pop
test
mov
adc
loopne
inc
add
stos
jecxz
orb
and
adc
mov
cmp
fdivl
add
imul
add
rcrb
outsb
insb
addl
fstpl
push
in
hlt
in
mov
add
and
adc
add
fwait
unpckhps
adcl
push
pop
xor
jge
ret
pop
push
add
lcall
loopne,pn
push
ljmp
popa
mov
mov
pushf
inc
add
push
lods
scas
mov
xor
add
test
mov
call
adc
push
pushf
out
mov
add
mov
or
add
jae
add
cmp
pusha
pop
jnp,pt
or
xchg
imul
inc
or
add
xchg
sbb
add
jns
adc
xlat
inc
int
testb
lock
and
clc
sub
addl
xchg
pop
lods
jno
xchg
adc
rorb
push
add
mov
lcall
sub
mov
sub
inc
jp
cmp
inc
aaa
ficomps
lret
fstpl
sahf
cwtl
pop
dec
xchg
mov
in
cmp
inc
lods
mov
shrb
add
mov
cli
movsl
or
add
in
and
mov
shll
mov
dec
add
push
ljmp
xchg
mov
adc
mov
or
add
imul
dec
lods
rcrl
add
inc
adc
inc
mov
push
push
scas
pop
xor
add
jne
movsl
adc
dec
bound
pop
adc
push
add
mov
push
jns
add
shrl
mov
pop
and
jbe
mov
test
movb
adc
add
into
loope
fdivrl
xchg
sbb
cltd
or
mov
add
mov
xchg
add
ficoms
mov
inc
daa
jl
add
push
lret
cld
add
xchg
mov
or
aad
aam
iret
xor
add
dec
jp
and
cmp
inc
jns
jbe
cmpsl
fwait
push
movb
pop
pop
mov
pusha
jns
add
mov
pop
mov
ret
ret
xchg
cmp
mov
adc
or
add
adc
sbb
es
adc
mov
add
lret
inc
loope
mov
hlt
leave
mov
push
add
and
ret
hlt
mov
cmpsl
mov
mov
mov
mov
repz
sbb
adc
cltd
fiaddl
cmp
fdivrs
cmc
xor
jnp
sbb
cmpsb
and
and
sub
rcr
repz
xor
mov
push
js
pusha
mov
lahf
and
imul
roll
mov
jecxz
adc
push
aad
or
pop
cmc
fistl
mov
stos
fadds
testl
inc
push
pop
dec
add
jbe
lret
clc
clc
sub
lock
sbb
push
cmp
mov
aaa
or
pop
sub
int
sbb
and
sbb
mov
les
mov
test
push
addr16
jo
popa
pop
or
aaa
xchg
gs
push
mov
add
in
fcoms
test
rorl
aam
aad
ficoms
inc
pop
js
es
ja
add
outsl
mov
imul
nop
cltd
sti
pusha
or
sub
mov
dec
dec
setb
and
ret
pop
adc
ljmp
mov
add
lea
inc
loopne
push
add
popf
cmpsl
jge
and
mov
add
cld
into
stos
jnp
sbb
add
inc
dec
shll
testb
rorb
mov
xor
std
push
dec
inc
sub
inc
adc
cmc
inc
mov
aas
es
fildl
test
mov
mov
add
jl
and
adc
leave
std
out
bound
xor
dec
or
addb
daa
or
jae
mov
outsl
mov
hlt
add
mov
movsl
mov
add
aad
add
mov
and
out
adc
ds
cli
bound
ret
or
cld
cmp
ret
sbb
add
dec
cmp
adc
pop
shlb
mov
push
loope
arpl
decl
dec
xorl
ljmp
jge
ja
sbb
and
and
daa
ss
je
push
sbb
xor
xor
ret
loopne
std
imul
mov
cwtl
or
lcall
orb
mov
or
mov
xchg
add
ljmp
sarl
pop
xlat
add
dec
inc
mov
jne
add
pop
add
in
lods
add
jo
sti
dec
insb
add
ret
mov
add
xchg
cs
arpl
add
lret
pop
loop
cmp
lret
out
add
int
je
int
outsb
add
and
jg
sbb
cmpsl
add
in
roll
mov
xchg
mov
add
inc
stc
add
mov
and
je
inc
movsb
and
pop
add
adc
shrb
pop
xchg
xchg
cli
sub
add
jecxz
loopne
push
push
in
xchg
inc
in
fsubrs
cmp
mov
inc
js
shlb
lret
add
daa
inc
fists
pop
arpl
cli
or
inc
add
pop
xchg
mov
jo
mov
or
adc
lret
xchg
sub
or
mov
mov
mov
cmp
add
adc
loop
in
dec
xchg
adc
xor
sub
add
dec
sbb
stos
mov
adc
decl
aad
imul
mov
shr
jl
bound
jmp
faddl
lret
inc
loopne
inc
adc
cltd
scas
push
insl
in
cmp
or
adc
rclb
pop
scas
mov
shrb
ret
xchg
mov
sbb
rorb
fnsave
ficoml
cmp
pushf
stos
loopne
mov
add
aam
sti
cmp
mov
xchg
jo
or
in
adc
cld
sbb
mov
cmp
into
jge
out
mov
add
add
shlb
mov
sub
js
jl,pn
inc
sbb
add
inc
es
xchg
cld
add
je
and
cli
lret
push
leave
mov
inc
mov
dec
mov
cmp
mov
and
adc
cmpsl
cs
pop
gs
div
jp
mov
push
mov
fsubrl
popf
add
mov
jecxz
and
inc
lret
pushl
test
mov
push
jnp
inc
adc
cwtl
add
test
jne
lods
ja
daa
xchg
jae
mov
ja
add
insl
mov
cmpsl
iret
or
mov
loop
add
fistpll
cmpb
add
aad
fcomps
fidivs
add
jbe
pusha
scas
sub
sbbb
movsl
adc
je
sub
add
xor
dec
push
loope
shr
mov
bound
adc
insb
fisttps
or
sbbb
ret
add
mov
and
jns
cmp
mov
and
add
or
or
add
daa
test
add
shll
xor
ja
ds
sarb
mov
pop
cmp
enter
je,pn
lods
sub
loope
repz
pop
add
and
add
mov
add
clc
mov
and
nop
adc
clc
sbb
or
add
xor
add
add
sub
and
mov
jl
sub
add
pop
sbb
xor
mov
dec
mov
imul
mov
lock
mov
add
dec
add
stos
add
inc
test
inc
sysexit
lret
loopne
sbb
add
mov
adc
xchg
mov
jg
add
add
insl
or
add
pop
jo
popf
out
add
mov
push
jbe
dec
and
xor
jge
add
add
and
pop
pop
jns
pop
loope
movsl
js
lret
and
and
add
dec
std
scas
add
mov
adc
and
ja
stos
filds
add
gs
inc
cmpsb
add
hlt
cmp
push
js
add
cld
sbb
adc
ds
dec
sub
test
testb
xor
cli
ret
dec
add
sub
insb
jmp
testl
test
clc
dec
stos
dec
rcrl
mov
inc
push
push
repnz
rcr
dec
enter
int3
adc
adc
jmp
pop
insb
adc
ja
xor
jne
adc
das
or
ljmp
and
incb
lock
adc
jge
push
and
add
jae
test
pop
sbb
das
sub
inc
add
stos
imul
xchg
int
out
mov
out
push
xlat
shlb
rclb
out
mov
test
add
neg
das
adc
nop
xor
dec
or
int3
daa
movsl
fwait
jne
add
sub
add
or
dec
mov
adc
jb
repz
out
lret
repz
push
es
inc
test
inc
jne
sbb
subb
jno
mov
test
pusha
jb
test
es
mov
xor
add
inc
or
fisubrs
int3
sti
adc
mov
clc
add
adc
add
fdivs
in
sahf
add
shr
pop
in
add
lds
and
or
mov
sub
xor
sub
dec
mov
xchg
add
bound
jmp
orl
lock
sbb
test
or
mov
add
sub
mov
stc
out
std
mov
add
je
pop
jne
add
add
mov
mov
sbbb
lret
add
lds
cmp
add
pop
test
scas
cmpb
jo
or
add
test
jnp
pop
add
dec
jmp
pop
add
xor
add
jns
jb
fs
sahf
add
mov
andl
mov
test
mov
jecxz
add
push
fadds
adc
cs
test
ds
leave
sub
jl
dec
fldl
mov
aad
in
iret
add
cmc
pop
sahf
test
mov
ljmp
jp
jecxz
into
mov
sub
incl
dec
dec
je
sarl
mov
pop
les
lahf
addr16
aam
int
inc
out
add
inc
mov
jne
dec
add
sbb
cmp
jp
mov
cmp
mov
and
dec
or
test
loope
adcb
dec
div
dec
shl
add
dec
jp
pop
stc
add
sbb
mov
and
in
add
incb
mov
and
xor
lahf
cmpb
xlat
test
mov
cli
adc
popa
xchg
incb
adc
sbb
test
or
lcall
mov
mov
inc
lods
add
push
aam
cmp
add
pop
fwait
decl
add
les
add
mov
or
insl
inc
subb
mov
add
adc
add
sbbb
leave
inc
sarl
or
push
mov
inc
add
and
pop
xchg
jbe
in
test
jmp
xor
mov
mov
scas
push
add
inc
repz
cmp
bound
add
mov
jnp
add
sbbl
pusha
jg
jo
sbb
lret
push
jg
add
or
test
lds
and
cmpb
leave
int3
jge
add
mov
inc
sti
repnz
mov
mov
aam
add
enter
mov
bound
adc
adc
fdiv
and
cmp
sbb
out
jmp
rol
push
dec
mov
adc
or
test
es
mov
cld
cli
adc
sti
inc
mov
out
fiadds
mov
mov
add
sub
jns
add
add
add
lock
jg
mov
mov
hlt
xor
or
rol
movl
xchg
mov
add
jle
add
mov
repz
add
xor
push
add
lea
jns
pop
pop
lahf
sti
add
mov
sarl
xchg
jp
add
fldt
and
push
test
lds
add
ror
aam
int
fldenv
push
test
jg
lcall
and
int
mov
pop
mov
push
pop
add
mov
inc
mov
mov
add
or
push
lods
incb
cli
jge
add
inc
jbe
movb
jle
mov
mov
add
test
lods
ljmp
cmp
jp
add
or
or
stc
jl
xor
ret
and
adc
nop
cld
ljmp
jns
loop
mov
lret
jno
lret
out
fwait
add
into
movsl
mov
add
lods
nop
je
or
insl
pop
pop
jns
jecxz
adc
add
add
not
jne
mov
mov
adc
pop
lods
sbb
and
fimuls
insb
dec
dec
mov
add
js
push
add
repz
pop
lods
lods
jbe
xchg
adc
pusha
adc
enter
mov
mov
and
xchg
sahf
daa
sub
loopne
dec
pop
pop
mov
testl
add
sarb
fstps
mov
and
adc
repnz
pop
nop
incl
das
cmpsl
pop
sti
add
pop
xchg
mov
mov
pop
add
sti
mov
lds
rcll
shlb
or
push
or
mov
add
push
dec
mov
lea
dec
push
es
int
outsl
cmpsb
rclb
mov
and
adc
mov
jmp
jae
shl
cli
add
scas
bswap
dec
inc
lods
enter
jge
js
cltd
add
cmpsl
xlat
add
roll
push
add
add
test
test
inc
mov
sub
ret
inc
gs
in
popa
sub
test
and
imul
ljmp
sbbb
pop
sub
sbb
enter
mov
pusha
or
pop
push
in
add
add
pop
pop
and
xchg
mov
lret
mov
push
imul
les
add
sahf
loope
cmpsb
fildl
push
lods
stos
or
and
sbb
rcrl
fnstsw
and
mov
fwait
arpl
xchg
ljmp
mov
dec
out
jmp
fmuls
enter
test
loop
pusha
js
out
insb
add
or
leave
repz
sbb
push
roll
aad
fcompl
lock
subb
cld
dec
js
fiadds
cmp
push
xchg
mov
cmp
adc
lods
add
pop
movsb
mov
sti
fadds
out
stos
xor
pop
jb
into
idivb
pop
add
sub
repz
add
popa
mov
add
cmp
in
cmpl
jb
sahf
push
or
cmp
mov
movsb
push
xor
test
test
sub
mov
and
pop
xor
sub
or
jo
movb
mov
hlt
inc
add
sub
dec
ret
xchg
mov
mov
daa
and
jne
add
mov
addr16
inc
int
xor
mov
add
xchg
dec
lret
or
insb
aad
add
or
lahf
call
lds
cltd
mov
into
jns
push
lea
xchg
in
leave
iret
stos
sbb
arpl
sub
stos
mov
cmpsl
inc
nop
dec
inc
roll
push
aaa
sbb
jno
or
out
inc
call
add
lahf
jb
add
xchg
sarb
xchg
jp
rsm
mov
fnstsw
add
inc
inc
cmp
add
lods
leave
add
daa
push
sbb
mov
ret
fldenv
inc
mov
push
mov
jbe
xor
mov
dec
iret
jnp
add
rep
test
in
add
js
imul
adc
sbb
add
cli
enter
add
mov
add
dec
push
mov
inc
mov
and
hlt
scas
pop
and
add
mov
inc
outsb
mov
stos
bound
push
adc
sbb
in
int3
fildl
cmp
mov
andb
cmpsb
dec
adc
jbe
add
clc
add
pop
inc
and
pusha
loope
out
cmp
add
add
ror
jl
adc
pop
pushf
add
inc
aam
pop
sub
add
cmp
add
jge
xchg
repnz
jp
xchg
addl
add
xor
jle
incb
out
mov
scas
frstor
loopne
add
jb
xchg
sahf
mov
inc
ss
add
pushf
lds
mov
jge
stos
andb
dec
pop
fldcw
add
add
sarl
dec
and
add
in
mov
jl
jg
dec
call
mov
inc
mov
out
sbb
cmpsl
addl
pop
pop
and
push
jmp
lods
aam
cli
insl
add
lock
add
jg
iret
insl
pop
add
mov
xchg
push
outsb
push
add
add
jns
outsl
dec
add
cli
fwait
test
add
ror
ror
cld
pop
adc
add
add
sbb
stos
jmp
ds
mov
lods
pop
jne
das
mov
and
je
push
adc
sti
fcoml
pusha
add
popf
cld
ret
push
fadds
stos
test
stos
and
push
cs
add
mov
mov
and
add
or
add
dec
fsub
mov
add
add
sbb
test
loope
add
cmp
sbb
fwait
mov
cmp
pop
stc
bound
imul
addb
pop
add
inc
test
sub
push
or
lock
lea
mov
and
add
jno
fidivs
in
aas
or
movsl
xor
dec
mov
mov
or
scas
and
shlb
cmp
add
pop
iret
sbb
or
xchg
or
pop
stc
mov
pop
sar
scas
mov
or
test
in
cli
jae
mov
adc
inc
pop
les
and
inc
and
fyl2x
adc
ds
add
cltd
aaa
repnz
insb
mov
mov
les
add
inc
mov
int
rcrb
rolb
mov
or
inc
mov
lods
mov
add
pop
inc
push
mov
dec
sub
mov
cmp
imul
int
mov
add
jecxz
mov
add
scas
mov
jnp
add
mov
and
mov
mov
test
push
scas
rcrl
mov
dec
out
mov
xchg
fnstenv
mov
mov
add
dec
outsb
nop
cmp
iret
loopne
adc
mov
mov
or
jle
scas
or
aam
mov
je
or
loope
dec
ret
dec
sbb
cmpsl
lds
imul
push
sbb
xchg
jmp
dec
mov
ret
or
inc
and
call
in
jne
movsb
add
sub
push
push
fbld
arpl
out
inc
mov
cwtl
ljmp
test
cmp
stos
add
mov
pop
sahf
inc
ret
xchg
addb
add
lds
sbb
ja
aaa
mov
dec
cld
pop
sbb
test
and
pop
roll
inc
lret
xchg
sbb
and
inc
nop
add
orb
jmp
bound
mov
add
dec
sbb
cwtl
das
fwait
push
add
cmp
mov
sbb
pushf
in
inc
daa
psadbw
sub
cmp
add
lahf
pop
pop
test
shl
ret
jnp
mov
rolb
or
pop
cmp
sub
loopne
dec
push
add
inc
add
repnz
outsl
inc
inc
inc
cmp
ficompl
push
ja
lret
pusha
or
js
fldl
push
sub
jb
cmp
outsb
add
mov
lock
add
cmpsb
scas
out
insl
add
test
addb
cwtl
fcoml
rorl
or
mov
add
btc
sub
or
pop
and
sarb
mov
sbb
sbb
test
mov
mov
add
out
jns
test
js
cmp
add
scas
loop
adc
dec
add
jae
not
imul
add
mov
jb
add
cwtl
hlt
lea
jecxz
add
jae
add
cli
stos
bound
and
adc
roll
mov
dec
bound
out
mov
ja
jnp
es
dec
xchg
xor
xor
pop
in
adc
push
arpl
stc
sbb
cmpsl
cmp
faddl
popa
xchg
lcall
mov
pop
push
subl
xor
cmc
in
jp
xchg
testb
sub
xorb
or
xchg
roll
mov
imul
dec
mov
pop
add
movsl
enter
pop
stos
testb
nop
adc
inc
add
cmp
lock
and
out
ljmp
jo
pusha
inc
lret
add
push
mov
test
faddl
fildll
add
sub
add
xor
add
shrb
cmpb
fadds
pop
jae
jle
test
in
mov
pop
movsb
add
mov
imul
mov
arpl
push
movsb
sub
add
xchg
fnstcw
add
call
push
pop
or
mov
lcall
or
add
cmp
and
mov
sbb
pop
fcmove
cmpsl
xchg
loopne
jno
popf
hlt
add
sbb
add
push
and
adcl
pop
mov
or
roll
adc
mov
inc
xchg
loope
adc
sbb
jno
adc
hlt
shr
or
es
adc
add
jb
mov
daa
add
sub
rclb
lea
push
sub
jge
add
mov
aaa
loop
ret
push
sbb
aam
mov
mov
and
jns
add
fistpll
add
jecxz
jns
or
loopne
pusha
ss
add
jbe
popf
push
xchg
add
loope
rolb
push
roll
add
add
sbb
sub
test
add
and
adc
sub
adc
add
popf
xor
lods
mov
mov
add
inc
jnp
add
push
pusha
loop
pop
adc
dec
jo
jnp
sub
dec
dec
xor
jge
add
mov
add
push
fdiv
add
cld
loop
sub
cmovge
outsl
adc
imul
mov
test
std
add
or
shr
cmp
inc
mov
lret
or
daa
movsb
pop
sub
lret
fstl
lds
jbe
dec
loop
xchg
jmp
pop
cmp
mov
pop
sub
loopne
jle
fldl
pop
adc
mov
mov
inc
mov
mov
dec
or
jb
mov
fcompl
cli
popf
pop
mov
fcmovne
xchg
test
pop
call
sti
jle
mov
sbb
pop
xchg
shrb
mov
std
cmp
scas
or
dec
pop
leave
inc
pop
enter
push
xchg
cwtl
mov
adc
stos
xor
out
rolb
pop
outsl
lret
inc
ret
sub
push
pop
xorb
sub
mov
sbb
or
int3
add
test
add
mov
andb
movsb
pop
inc
xor
mov
hlt
faddl
add
push
adcb
dec
incl
outsb
lret
add
mov
add
cmpsb
cmp
rcr
inc
jmp
mov
sub
cli
lret
stos
add
pop
push
hlt
push
addb
stos
mov
add
out
and
mov
or
push
enter
jge
add
pop
cmp
mov
push
pushl
pushf
shlb
xor
inc
mov
pop
call
dec
sub
pop
xlat
add
mov
ret
faddl
orb
inc
das
imul
test
inc
aas
js
add
jg
sbbl
test
adc
push
add
dec
data16
cmp
jg
add
pushf
rorb
mov
xor
mov
add
add
inc
lods
add
outsw
imul
inc
jns
icebp
add
pop
inc
xchg
dec
push
add
inc
dec
in
jno
enter
std
cmp
xchg
cmp
jo
xchg
xchg
pop
add
lock
rcrb
call
lcall
pop
add
push
add
aaa
mov
in
lret
inc
cmp
cmpsb
inc
dec
sbb
add
das
adc
dec
std
int3
add
and
int3
inc
test
ja
inc
and
add
int
sub
rcrb
push
sub
jmp
lret
add
xchg
add
pop
jo
cbtw
je
pop
sbb
mov
jns
jno
cmp
sub
add
lods
dec
and
add
adc
fldcw
add
mov
out
hlt
xchg
cmc
jo
mov
loop
nop
and
jbe
adc
add
out
das
stos
test
add
pop
loopne
fcmovnb
call
and
add
jg
or
nop
adc
inc
cmp
add
das
daa
in
mov
dec
mov
lret
test
or
sub
lock
lods
push
popa
push
mov
popf
fdivp
sub
push
stc
in
or
add
lock
nop
leave
cpuid
mov
pop
rcl
or
adc
pop
or
dec
add
add
cld
add
ljmp
add
popa
dec
cltd
mov
fs
and
xchg
aaa
fmuls
and
mov
pop
js
add
push
aam
or
shl
jbe
push
lds
jecxz
loopne
addr16
test
xlat
lret
jb
in
imul
out
and
enter
mov
add
shll
add
add
cmp
and
sahf
xor
mov
imul
adc
or
adc
in
mov
add
cmp
sub
adc
push
cmp
cli
sub
mov
and
adc
pop
lods
add
dec
lret
sarb
test
jg
push
ljmp
bound
xor
mov
fiadds
push
jne
mov
add
movsb
in
mov
mov
xchg
lcall
add
in
jns
add
lret
push
adc
scas
xor
hlt
push
adc
addr16
daa
orl
add
cmpb
add
inc
ret
imul
add
sbb
out
xchg
mov
add
andb
cmp
sub
push
sbb
xchg
mov
push
mov
imul
mov
das
sbb
rclb
xor
add
inc
and
jp
add
fprem1
pop
and
mov
jae
mov
or
repz
mov
mov
push
insb
jmp
add
dec
loopne
jmp
sbb
jne
xor
addl
mov
in
add
mov
and
pop
scas
jns
inc
push
pop
add
sbb
or
sahf
imul
and
inc
add
ja
leave
add
sbb
lds
jmp
push
loop
jbe
dec
add
addb
push
roll
dec
jg
add
dec
inc
fnstsw
inc
push
imul
push
popw
or
jl
sbb
xchg
add
inc
push
movsl
add
punpckldq
stc
lahf
jno
push
push
in
add
push
mov
push
ds
in
xor
ja
mov
mov
test
mov
filds
arpl
dec
cmpsl
dec
daa
mov
cmp
mov
in
pshufw
testl
cmp
sbb
sub
mov
jbe
sbb
jecxz
and
jge
dec
jno
add
mov
mov
and
or
dec
add
lahf
cmp
clc
popf
mov
pop
sahf
mov
add
cli
mov
jno
into
ficompl
fldt
add
lods
dec
sti
and
add
sub
xchg
fiaddl
cmp
pusha
add
shlb
adc
sub
add
lods
and
adc
xor
enter
add
test
push
adc
popa
mov
or
add
pop
push
sub
add
add
push
mov
pop
adc
and
jo
adc
sbb
or
int3
add
ss
sti
and
pop
in
lret
add
xor
popf
fadds
add
mov
adcl
lcall
inc
rcrb
xlat
mov
push
imul
adc
subb
push
cs
jmp
and
aas
or
push
sahf
xchg
cmpsl
push
add
sbb
and
arpl
icebp
push
pop
ljmp
orb
aas
int3
mov
push
clc
add
pop
mov
jle
les
adc
and
adc
xchg
pop
add
mov
iret
call
add
pop
pop
dec
adc
cmp
xor
fadds
std
jbe
push
pop
fisttpll
scas
push
and
mov
inc
add
sub
sbb
ljmp
es
imul
or
add
xchg
int3
xor
insb
ret
xor
add
inc
mov
mov
cs
add
push
imul
in
inc
hlt
test
fs
xchg
enter
test
mov
add
sbb
incl
scas
pop
shlb
xchg
push
aam
and
pop
jo
or
pop
xchg
jle
out
and
xchg
adc
sub
sub
add
out
jecxz
adc
bound
gs
jae
or
enter
add
or
enter
in
rclb
ret
scas
and
jno
or
ret
sbb
add
js
add
imul
xchg
or
and
cli
fadds
addr16
or
mov
rorl
cmp
jne
jp
cli
fistpl
lret
pop
inc
dec
xor
mov
xor
pop
repz
and
aaa
dec
testb
add
pop
mov
cs
stos
add
jecxz
mov
and
add
xchg
lret
push
add
push
add
pop
in
sbb
mov
push
sbb
ficoml
js
cmpb
push
dec
and
int3
add
inc
rcl
add
cltd
push
jne
pop
jae
and
jb
cld
mov
je
repz
stos
lret
xchg
into
jns
mov
and
aad
repnz
in
add
jle
movsl
mov
pop
aad
mov
hlt
xchg
push
add
xor
push
ret
testl
rclb
std
add
ret
add
hlt
daa
adc
fcmovnbe
add
and
add
mov
jnp
jbe
inc
mov
es
jns
mov
sub
out
fiadds
cmpb
add
clc
int3
adc
out
cmpsl
add
mov
add
mov
out
notb
idivb
push
add
popf
cs
xchg
add
or
add
sbb
jbe
fmuls
rclb
in
movsb
cli
add
lods
and
inc
add
popa
adc
inc
mov
dec
add
inc
clc
daa
jb
push
mov
in
mov
stc
add
cmpsl
and
jp
out
push
hlt
inc
pusha
add
or
and
ljmp
pop
mov
jmp
add
adc
or
rcrl
cmp
pop
mov
adc
mov
hlt
mov
sbb
loope
jl
shlb
test
inc
mov
bound
insb
lret
sbbl
xchg
inc
mov
adc
mov
sbb
cli
outsl
lods
jp
fistpll
ficompl
jo
mov
push
and
push
adc
add
inc
push
das
cltd
add
shrl
xchg
add
xchg
sbb
xchg
cmp
into
add
fimuls
sti
popa
add
xor
push
jmp
rolb
mov
es
jno
add
push
arpl
add
mov
inc
pop
mov
in
mov
shlb
add
fsubrs
xor
rcll
push
cs
add
jne
push
mull
add
out
ljmp
push
xor
cli
dec
add
pop
sub
mov
or
mov
pop
addb
push
cs
mov
mov
addl
push
popa
stos
inc
add
addl
dec
push
xchg
mov
es
fmul
fists
and
stos
popa
add
xlat
adc
je
mov
decb
xor
inc
add
es
pop
cwtl
jmp
iret
addb
lret
xchg
add
mov
adc
idivl
testl
inc
inc
push
rorl
or
mov
pop
mov
dec
adc
in
xor
arpl
inc
loopne
xor
xchg
std
arpl
into
pop
fwait
cmc
outsb
add
and
cmpsb
pop
mov
add
fsubp
add
in
test
out
fstpt
add
mov
cld
add
rorl
in
add
lock
bound
repnz
add
cs
add
push
mov
cli
pushf
add
xchg
add
sbb
sub
cmp
jge
mov
in
rcl
in
add
sub
add
fisubs
sbb
loop
bound
pop
dec
cmc
xor
leave
pusha
movl
or
cmp
add
movsl
dec
sub
add
out
sub
mov
imul
shrl
arpl
add
xor
adc
add
jae
push
mov
add
add
dec
and
add
add
pop
push
jp
inc
enter
int3
add
sbb
sti
cmp
add
je
adc
test
add
sbb
jo
inc
imul
lahf
add
and
jecxz
and
adc
inc
add
push
lods
lret
out
js
lds
inc
sti
jno
rorl
aas
jecxz
and
ret
add
sub
push
out
ret
call
dec
jmp
push
loope
lret
imul
add
mov
and
fiadds
pop
rol
ja
test
or
pop
dec
mov
mov
cmp
pushf
lret
cltd
iret
cvtps2pd
faddl
mov
cmc
push
addl
add
enter
sub
push
mov
push
dec
ds
dec
mov
adc
fnstsw
add
test
gs
or
sbb
add
sarb
shrl
call
add
inc
mov
add
fs
xchg
addr16
sbb
test
mov
adc
stos
lahf
add
inc
outsl
push
sbbb
add
cwtl
mov
pop
add
or
add
repnz
mov
roll
and
inc
int3
clc
push
lock
add
ljmp
inc
add
in
mov
add
pop
scas
mov
jo
leave
loopne
test
and
pop
adc
mov
insl
xor
add
mov
ret
test
mov
div
adc
jecxz
fisttpl
dec
mov
movsb
or
cmpl
incl
loope
dec
pop
push
add
js
xor
and
cmp
xchg
int3
add
and
and
mov
xor
add
outsb
and
mov
jge
inc
xorb
jg
cmp
add
fs
add
fildl
pop
in
add
dec
xor
adc
xlat
adc
sub
fisttpll
out
enter
xchg
inc
add
adc
jg
push
cvttps2pi
pop
nop
pusha
ret
pop
lds
push
pop
stos
add
dec
push
adc
add
sbb
cmp
add
aad
pusha
scas
push
test
out
add
push
jb
jmp
les
mov
push
xchg
add
pusha
jnp
pop
xor
dec
mov
cmp
mov
inc
mov
rolb
and
es
inc
outsl
adc
inc
lcall
mov
orl
js
out
mov
push
or
fisttpl
loope
lods
out
sub
jne
mov
stc
scas
lea
xchg
outsl
out
jo
inc
cld
out
add
adcb
push
int
dec
cmpl
arpl
add
cmp
stos
xor
bound
jmp
roll
imul
mov
add
push
adc
mov
movsl
dec
callw
jl
inc
push
and
and
lcall
les
aad
fcomip
mov
add
add
imul
and
xchg
and
push
dec
lods
add
pop
xor
jo
test
inc
fwait
and
aas
ret
jle
ds
out
popa
add
adc
fs
push
mov
mov
leave
sub
and
out
add
imul
call
inc
add
leave
adc
add
mov
das
push
add
dec
push
add
sbb
adc
loop
fwait
or
or
add
xchg
sub
add
mov
lcall
add
pop
rorb
push
sti
std
out
inc
daa
and
pop
out
outsb
adc
fcmovnu
bound
inc
adc
nop
push
add
adcb
mov
add
add
nop
mov
add
stos
cmpb
imul
push
call
add
sbb
incb
ret
das
dec
push
push
cmp
jg
mov
dec
clc
add
push
add
pop
outsl
add
sbb
add
imulb
and
int
pop
cmpsl
push
mov
add
add
mov
inc
shll
stos
aad
add
test
leave
push
loopne
cli
or
out
add
hlt
stc
and
dec
mov
je
loop
ja
jle
mov
cld
jl
aas
addl
std
cltd
add
push
shlb
mov
push
test
adc
mov
mov
iret
roll
mov
lret
decl
inc
dec
leave
pop
dec
leave
jp
mov
dec
cmc
add
mov
adc
sbb
adc
dec
mov
adc
add
add
and
decl
jb
in
jb
mov
or
dec
and
or
fucom
sahf
aas
push
cwtl
push
jne
mov
sbb
xor
jae
adc
shlb
daa
out
in
push
mov
mov
add
jb
test
pop
mov
lods
nop
mov
add
addr16
mov
mov
stos
pushf
add
test
in
aas
push
jge
add
arpl
push
jmp
adc
aam
les
xlat
ja
add
negb
push
test
or
ret
mov
mov
loopne
pop
call
mov
mov
jg
ret
ljmp
add
fidivrs
mov
pop
lahf
jno
cmp
adc
or
sbb
inc
and
push
sub
pop
test
loopne
mov
repz
inc
lret
pusha
or
and
inc
enter
push
add
cmp
sbb
scas
jnp
add
push
hlt
xor
mov
cmpsl
aas
stc
add
cmp
add
xor
fildll
mov
test
adc
ja
bound
mov
fisubrs
mov
add
pushf
and
pop
lcall
push
mov
jmp
ret
loopne
popf
cmp
outsl
scas
mov
and
adc
lds
in
lret
push
add
insb
lar
hlt
and
jl
cwtl
add
mov
test
idivl
cwtl
mov
cltd
add
and
loopne
leave
add
add
andb
inc
test
sbb
push
push
addr16
mov
lods
add
add
mov
add
cld
add
inc
inc
aam
add
stos
mov
cmpsl
ret
mov
ss
shrl
adc
pop
mov
arpl
pushf
add
pop
clc
fwait
add
gs
sub
inc
jnp
jno
stos
mov
pop
mov
mov
adc
mov
mov
sub
and
add
xchg
mov
notb
cltd
add
or
xchg
adc
xchg
psubd
ror
testb
mov
dec
add
and
lea
rol
movsb
sarl
inc
das
loopne
mov
add
repnz
fistpll
pop
inc
xchg
negl
imul
add
icebp
lahf
push
jg
int3
call
adc
nop
push
add
sarb
clc
rclb
das
cwtl
mov
insb
out
loopne
lods
or
jge
add
mov
inc
cmp
test
push
xor
sahf
arpl
jne
stos
testl
loopne
ret
sti
mov
clc
and
addl
pop
jns
subb
inc
decb
hlt
sub
add
mov
jbe
jb
xchg
cmp
sbb
push
scas
inc
or
and
adc
mov
pushf
sti
adc
or
add
repnz
and
push
fildl
or
mov
fcompl
sub
cmp
mov
add
xor
out
lods
mov
add
xchg
stos
jle
add
divb
das
sub
xchg
add
mov
mov
inc
lcall
adc
ss
adc
jge
push
mov
fstpl
jge
test
adc
out
xchg
and
test
fwait
sub
mov
rol
ja
outsb
dec
call
add
int3
fldl
leave
dec
clc
cmp
outsb
mov
push
add
cmp
add
aad
xchg
xchg
add
and
pop
pop
pop
sbb
xchg
xchg
jle
push
sub
or
cld
aam
inc
cli
lret
es
xor
dec
add
sbb
xchg
xchg
dec
adc
jae
test
ficoms
push
icebp
pop
ljmp
ss
pop
jge
adc
mov
push
jmp
fs
orb
fwait
jne
std
outsb
add
and
pop
inc
enter
mov
ret
and
out
inc
sbb
or
sbb
imul
sbbb
lret
pop
mov
ss
xchg
fiadds
clc
mov
mov
popf
loop
push
lds
ds
pop
cli
sub
add
aas
push
aaa
lds
adc
jno
dec
add
push
push
jno
or
fistps
add
mov
add
notb
push
add
jp
dec
xor
xor
pop
pop
push
lods
sbb
mov
sub
xor
adc
cwtl
rolb
and
and
and
pop
inc
jg
fists
mov
or
add
repnz
push
or
mov
add
mov
and
ficompl
aam
mov
adc
sbb
mov
xchg
push
dec
movsl
out
add
mov
cmovno
lea
dec
adc
lahf
mov
cmp
loopne
lods
jns
or
add
repz
add
rcll
mov
fiaddl
push
clc
or
fadds
sbb
inc
nop
mov
fidivl
out
jp
ds
mov
loopne
jmp
stos
imul
mov
mov
jg
daa
scas
ljmp
test
cmp
add
xor
add
dec
pop
mov
xlat
lods
add
adc
fistps
add
popa
lret
les
xchg
push
sbb
dec
or
in
movsl
pop
jmp
add
nop
dec
out
sbb
and
adc
stos
ljmp
bound
rclb
in
or
xchg
ficompl
loop
add
inc
xchg
cltd
add
or
test
lahf
scas
jo
push
pop
or
push
cmp
fimuls
mov
je,pt
push
or
pushl
adc
test
sbb
mov
or
inc
scas
loopne
xor
add
ret
pop
movsl
and
pop
inc
sub
mov
cmp
push
add
or
jo
mov
rorb
cmpsl
xchg
jbe
clc
and
inc
push
ror
adc
add
cmc
out
loope
jg
pop
pop
fadds
xchg
test
mov
jmp
push
push
add
mov
and
adc
stos
pop
outsl
add
cmp
std
in
add
sub
ret
add
add
add
cli
mov
jg
inc
pop
test
shll
fmull
js
int
stc
add
int3
pop
adc
mov
scas
int3
add
add
js
scas
fadds
push
test
sti
jl
incl
iret
fs
or
dec
xchg
sbb
pusha
cs
xor
js
repnz
movsl
jne
add
mov
call
dec
xchg
ffreep
add
mov
jge
add
icebp
mov
stos
sub
and
and
pop
cmp
adc
cli
mov
sbb
mov
push
int
jo
adc
js
ljmp
push
and
add
sti
inc
add
fiaddl
jne
add
jns
test
pop
hlt
les
lods
mov
mov
fistpll
std
add
je
cltd
add
push
test
enter
sub
xchg
daa
movsb
roll
mov
push
add
shlb
adc
dec
adc
mov
jecxz
add
cwtl
mov
push
lods
add
adc
stos
nop
dec
pop
out
and
fcmovb
sub
pop
lods
add
imul
add
sbb
add
or
add
subb
pop
or
pop
add
jo
add
jae
pop
sub
dec
mov
flds
mov
mov
aad
pop
inc
ljmp
xor
xor
stos
les
jae
or
lahf
mov
sub
cmp
xor
test
into
std
stc
add
mov
fidivs
ja
add
das
jmp
xor
pop
jnp
loopne
in
cmc
add
int3
sub
clc
out
cwtl
add
lods
sbbb
test
outsl
sbb
add
jecxz
mov
nop
cwtl
mov
xlat
outsl
add
aad
jbe
add
call
mov
adc
pop
ds
int3
sub
outsb
scas
cmc
shrb
add
je
add
mull
and
incb
clc
aad
pop
dec
xchg
inc
inc
fmuls
jno
add
pop
adc
add
mov
rorl
aam
fs
sbb
adc
loopne
ror
imul
inc
adc
push
fldz
or
lret
and
mov
movsb
test
aaa
divl
add
inc
mov
out
and
mov
scas
ret
jg
add
das
mov
ret
mov
sub
nop
mov
movsl
mov
xor
or
mov
push
add
xchg
mov
push
push
add
cmp
add
xorb
mov
pop
out
test
jbe
lds
ja
push
fisubrs
xor
fwait
aad
add
jnp
fs
xchg
add
jmp
cmpsl
add
or
cmc
addb
ret
add
add
andb
mov
push
mov
aad
dec
mov
add
call
add
pushf
add
test
mov
iret
or
shl
pop
rorl
pusha
test
repnz
daa
out
loopne
add
add
repnz
adc
lods
das
in
sbb
push
add
ja
dec
in
mov
and
cmp
lods
cwtl
add
mov
test
outsb
xchg
test
hlt
stc
das
dec
jbe
push
pusha
or
mov
add
lret
mov
daa
xchg
cmp
or
fsubs
add
or
mov
sbb
and
cmc
out
fadds
or
inc
xchg
mov
arpl
add
mov
pop
pop
sbb
jmp
add
jno
call
enter
pop
into
nop
pop
jmp
add
test
mov
mov
jge
jg
xor
xchg
mov
push
add
jmp
mov
jmp
bound
xor
mov
adc
lea
push
scas
cltd
lock
clc
repz
lret
jb
mov
in
sbb
cmp
add
sub
dec
xor
out
mov
and
xor
gs
cs
add
int3
add
push
jl
fs
adc
int3
add
mov
mov
enter
pop
dec
add
aaa
outsl
and
pop
test
rorl
cmpsl
add
push
popf
movsb
or
test
push
inc
add
or
sub
add
xor
pop
test
popa
and
jno
inc
mov
xor
xorb
adc
mov
aaa
mov
aas
fistpl
jg
add
add
mov
mov
add
xchg
cmpsl
movsl
in
mov
push
mov
pop
mov
dec
xchg
mov
mov
int
adc
jmp
add
push
sub
jl
xchg
and
loop
dec
repz
and
mov
mov
cs
pop
xor
pushf
sbb
aam
mov
add
push
lahf
mov
dec
add
stos
mov
adc
mov
jno
scas
and
jge
add
outsl
cwtl
add
data16
dec
enter
sbb
jg
add
sub
mov
xchg
lds
inc
imul
call
add
inc
and
add
addl
aaa
rcl
jo
mov
add
adc
adc
dec
lods
std
lock
imul
inc
aaa
push
sub
imul
cwtl
imul
add
adc
out
add
inc
loope
inc
sbb
dec
add
cmp
push
scas
inc
add
push
add
jbe
cld
inc
daa
leave
int3
fstpl
add
push
add
roll
mov
add
sbb
dec
fwait
out
sub
add
push
adc
das
push
xchg
push
cli
jnp
add
xchg
aad
add
mov
mov
ja
add
adc
xor
test
pop
push
popa
add
imul
aaa
rcll
ror
scas
rcl
mov
imul
push
test
sbb
xchg
scas
cwtl
push
sbb
je
roll
testl
inc
mov
cmp
push
fadds
cmc
jl
faddl
lods
inc
jle
mov
add
and
mov
push
in
sahf
add
dec
inc
rolb
loop
popf
and
xor
inc
out
sub
inc
cld
mov
jb
push
ja
push
xchg
cli
fadds
cld
test
mov
popa
out
gs
dec
mov
pop
cltd
rcrb
xor
jge
adc
outsl
or
adc
xchg
sub
popa
add
insb
adc
lods
xlat
jns
xchg
or
mov
add
sub
adc
inc
pop
cs
fsubl
loopne
cmpsb
jecxz
mov
fildl
mov
lret
or
jle
xor
dec
adc
lods
jbe
loop
xchg
and
pop
mov
xor
imul
lock
adc
cmpsl
add
fiadds
mov
mov
shl
add
ret
mov
jb
jecxz
adc
cmpl
out
add
sbb
sub
mov
rcr
fnstcw
add
xchg
stos
cmpsl
add
mov
add
dec
cmp
sub
js
cmp
imul
in
cmp
add
roll
hlt
add
inc
adc
lods
incb
bound
adc
add
adcl
cltd
xor
add
and
pop
inc
ljmp
je
and
or
inc
je
in
jb
aas
in
and
add
fnstcw
nop
jae
push
push
or
cmp
dec
pop
inc
add
and
pop
cmp
popf
adc
mov
add
sub
xor
pop
inc
dec
fwait
pop
pop
mov
and
pop
jb
add
or
lahf
incb
push
add
xlat
hlt
repz
ljmp
xlat
lods
sarb
adc
pop
in
add
push
pushf
dec
lods
aad
sub
fs
xor
xchg
sub
add
scas
push
push
add
cmp
and
sub
or
sbb
test
mov
pop
ret
pop
js
xchg
leave
and
lods
cmp
loope
lret
or
imul
mov
popa
and
mov
loopne
sti
xchg
jle
shl
iret
add
mov
mov
add
xchg
mov
push
stos
test
mov
jmp
add
aaa
ljmp
aam
roll
mov
push
and
add
or
xor
js,pn
pop
xlat
int3
add
jne
and
fstps
mov
jg
push
mov
or
es
adc
xor
push
xchg
imul
nop
clc
inc
push
add
xchg
addb
ja
ret
or
out
roll
add
mov
add
mov
out
adc
loopne
cmpsb
shrl
mul
into
add
jns
adc
xor
inc
dec
sbb
enter
lods
dec
add
dec
mov
call
fadds
inc
test
mov
cmp
repnz
jg
add
or
test
gs
pop
mov
add
pop
cmp
pushf
mov
leave
cli
lods
cmc
push
add
add
in
divl
shrl
dec
clc
out
imul
in
add
into
stos
test
nop
xchg
mov
push
add
sub
cs
pop
jl
add
adc
sub
adc
sub
inc
pop
push
add
and
mov
add
mov
adc
ds
pop
iret
cmpl
enter
sub
and
xchg
jmp
test
mov
dec
fldt
push
xlat
fsts
test
mov
adc
add
add
fcoml
rcr
jns
ljmp
mov
fsubrl
pop
shlb
test
mov
pop
lcall
outsl
xchg
daa
cmp
pop
jle
hlt
add
std
fisttpll
js
pop
dec
pop
out
jp
add
push
pop
jg
enter
adc
or
stos
mov
imul
mov
add
or
xchg
push
cltd
aaa
xor
test
inc
leave
inc
adc
les
cmp
mov
pop
add
dec
out
aad
clc
jmp
adc
push
pop
ror
add
cmpl
in
aad
jecxz
mov
nop
inc
out
add
mov
mov
add
stos
mov
out
push
loopne
xchg
outsl
jb
jbe
movsb
add
jp
inc
test
sbb
adc
adc
divb
out
inc
dec
sbb
out
sub
les
inc
cmp
add
aam
inc
jge
sub
add
das
dec
call
mov
ss
fcoms
int3
into
add
jno
rorb
inc
push
gs
push
mov
andb
mov
add
fdivrs
sub
adc
adc
les
testb
incb
inc
adc
pop
and
and
xchg
or
add
andl
jno
mov
add
insb
imul
jbe
shrb
in
add
and
in
add
sub
xor
xchg
stc
add
mov
iret
lahf
incb
ret
and
adc
pop
jno
and
or
push
sub
add
clc
pop
adc
lods
scas
cltd
add
adc
and
dec
inc
out
mov
add
sbb
cld
push
mov
xor
mov
outsl
mov
cmpsb
add
fiadds
adc
and
add
cmp
lahf
push
add
das
mov
mov
fsubrs
test
jae
lods
faddl
clc
cs
push
sub
push
leave
lods
std
inc
add
and
fisttpl
jae
push
add
or
add
mov
pop
jne
xor
mov
jge
add
or
pusha
pusha
sub
in
arpl
out
adc
and
cmc
and
cmp
test
in
add
mov
xor
outsb
cmp
les
add
test
mov
int
add
icebp
jbe
mov
add
ss
xor
in
adc
inc
jae
or
push
add
xchg
pop
mov
add
jb
les
and
mov
inc
xor
add
mov
sahf
and
jne
add
inc
add
pusha
lea
iret
lock
cli
int3
add
inc
divb
push
pushf
cwtl
add
data16
xor
pushf
sbb
imul
das
test
loopne
ja
add
mov
lret
pusha
pop
pop
mov
clc
add
loopne
mov
mov
mov
pop
loope
daa
std
sbb
aad
pushf
test
push
inc
or
mov
pop
imulb
add
stos
loope
push
cmc
jp
add
sub
and
test
dec
or
inc
mov
mov
xor
out
pop
repz
ja
mov
aaa
push
add
ret
fstpt
push
data16
add
scas
pusha
mov
inc
ds
sub
xor
add
and
iret
out
shlb
dec
adc
xor
jo
pushf
sub
mov
sbb
add
inc
test
mov
pop
or
lret
call
or
push
mov
pop
push
jb
adc
mov
push
adc
fiadds
cli
jae
out
loopne
and
out
add
enter
dec
data16
movl
rolb
inc
repnz
xchg
aad
mov
add
fistl
pop
pop
mov
and
adc
outsl
dec
test
or
and
loop
cwtl
and
pop
cwtl
in
loopne
neg
into
fisttpl
add
fildl
rclb
daa
shrb
aas
add
push
popf
in
movl
std
add
fdecstp
jns
cwtl
add
jbe
push
or
pop
add
mov
mov
cmp
adc
xchg
mov
jo
and
jno
add
popf
lock
sbb
jno
out
pop
push
and
std
mov
mov
push
and
mov
xchg
jae
adc
loop
mov
dec
pop
add
xchg
sub
jl
outsb
nop
mov
add
in
mov
dec
push
stos
rcrb
mov
push
test
scas
out
sahf
add
or
adc
je
data16
and
pop
scas
jecxz
lock
inc
pusha
lds
dec
test
add
lock
leave
add
mov
aam
dec
in
pop
out
cli
bound
lods
adc
or
sbb
push
enter
inc
shr
fiadds
addb
sbb
in
add
mov
rclb
stos
and
fcomps
push
mov
in
lds
lods
sub
test
cmp
jb
add
shlb
stos
insl
add
mov
pop
pop
fildl
ficoml
or
push
adc
mov
push
adc
sub
out
jecxz
and
push
xchg
sti
lahf
add
push
stos
shrb
test
jge
add
mov
test
pusha
outsl
dec
test
adc
repz
mov
in
inc
add
icebp
adc
mov
jb
add
add
movsl
movsb
out
xchg
icebp
add
ss
outsl
add
int
ret
push
jae
or
push
add
mov
rorl
or
pop
add
mov
ja
push
or
clc
add
dec
jl
jo
sub
loop
push
inc
and
mov
cmc
fisttpll
sub
adc
or
mov
pop
jno
pop
jge
daa
mov
std
add
lahf
pop
add
sub
cld
jb
sbb
add
fs
insl
ljmp
or
inc
cmp
xor
lea
sti
add
add
sbb
filds
xor
sti
ljmp
cwtl
rolb
pop
jge
daa
addb
add
sbb
push
add
push
mov
and
push
jae
cmp
orb
shll
arpl
jg
add
xlat
cmp
add
mov
inc
test
cmpsl
insb
add
inc
or
into
inc
and
add
insb
pop
inc
imul
mov
pop
and
clc
add
jg
add
and
pusha
shlb
or
lret
aad
dec
es
out
test
mov
cwtl
pop
mov
or
ja
les
repz
ret
dec
sti
push
jge
push
inc
sbbb
les
mov
and
add
sbb
test
and
adc
popa
dec
es
and
cmp
cmp
imul
pop
add
imul
popl
loope
sub
add
daa
test
jg
add
jge
xor
push
cmpsb
and
fwait
add
add
and
jbe
xchg
adc
push
sar
enter
add
loop
in
pusha
aaa
pop
dec
add
add
mov
rol
xor
scas
loopne
add
mov
cli
inc
add
cli
mov
clc
pop
dec
pop
nop
cmp
xor
in
add
lret
dec
outsl
fucomip
add
mov
jno
xchg
outsw
popf
add
push
addr16
in
add
fistl
jne
lret
std
rclb
add
pop
xlat
loopne
aam
int3
add
push
jnp
mov
cmp
call
mov
adc
stos
or
in
add
lods
std
pop
pop
inc
mov
inc
xchg
ljmp
jbe
and
pop
and
mov
punpckhdq
add
jns
and
mov
repz
nop
scas
and
fildll
xchg
or
or
jp
inc
add
out
imul
adc
inc
xchg
jge
add
xchg
scas
shl
push
add
cwtl
inc
mov
jo
pop
adc
mov
jecxz
scas
scas
add
cmp
icebp
pop
push
popa
add
cmp
lock
repnz
add
cltd
dec
lods
dec
jmp
add
mov
push
add
je
xchg
rolb
xor
mov
sub
add
int3
adc
pop
stc
or
add
sbb
xlat
xchg
or
mov
sbb
lret
mov
xor
or
mov
add
sbb
cwtl
add
push
les
add
std
pop
in
sub
imul
add
sub
and
cld
add
mov
push
push
in
cltd
xadd
je
daa
inc
cmp
add
rcll
imul
aaa
out
cmp
out
std
iret
add
jo
pop
or
and
imul
jns
nop
int3
mov
call
sub
scas
xor
cs
sub
repnz
sub
outsl
add
imul
xchg
subb
sahf
mov
push
sarb
imul
xchg
popf
rclb
pushf
xorb
add
nop
sbb
add
sbb
enter
cld
add
daa
incb
subb
xchg
add
pop
mov
lcall
add
sbb
and
add
dec
sahf
out
lods
adc
sub
or
out
jne
push
pusha
cld
lods
mov
loopne
or
in
mov
incl
hlt
cmpsl
orb
jle
jb
inc
in
sub
bound
jno
and
add
je
mov
imul
shr
jle
lods
add
clc
mov
sbb
in
mov
popf
mov
lock
jmp
xchg
mov
imul
test
jle
test
mov
add
fsubs
cmc
jge
stos
lock
loope
pushf
in
loopne
fcomi
adc
es
xchg
shll
cltd
ret
push
add
popf
data16
pusha
adc
add
sub
jg
add
xchg
imul
ljmp
push
xchg
jge
lds
testb
xchg
adc
sub
mov
repz
jg
mov
out
dec
stos
out
jnp
mov
mov
xchg
jle,pn
adc
pusha
inc
inc
int3
dec
cmp
in
fxch
jl
loop
jno
sar
mov
aas
add
pop
pop
and
sbb
mov
pop
loope
mov
fs
fwait
and
comiss
xlat
mov
push
addb
jae
push
cmc
push
xor
jg
and
lods
mov
scas
adc
add
push
xor
sub
add
jb
adc
scas
inc
add
and
xchg
xchg
inc
add
fildl
pop
aaa
out
xor
jmp
add
adc
mov
xchg
xchg
jecxz
push
add
je
rolb
lret
add
stos
push
add
ss
in
dec
in
je
adc
push
mov
jl
outsl
add
cmp
inc
test
fs
stos
mov
mov
add
xchg
out
cmpsl
outsl
ss
gs
das
pop
orl
mov
adc
ja
add
outsl
inc
mov
sub
add
scas
and
mov
or
add
push
sub
xlat
jle
mov
add
cwtl
mov
push
jae
cli
add
mov
fidivl
sbb
in
int3
lahf
push
add
hlt
mov
aad
cmc
call
mov
out
xchg
lcall
add
mov
xchg
and
jno
std
leave
add
jmp
int3
inc
or
or
inc
inc
and
movsb
test
add
aam
pop
adc
call
js
jne
add
mov
lods
dec
add
in
fbld
add
iret
push
arpl
sub
sbb
test
adc
or
setne
jns
cwtl
pop
cmp
jle
pop
jno
das
aad
faddl
les
and
lock
out
sbb
lods
daa
pop
nop
subb
jns
sbb
and
std
mov
lods
and
hlt
add
or
stos
push
aam
stc
pop
or
add
xchg
push
pusha
push
ja
mov
inc
add
hlt
addr16
daa
xchg
add
dec
mov
add
sbb
xorb
outsl
jl
xchg
or
adc
imul
ret
subb
cmp
mov
ljmp
sahf
add
add
sub
cmc
jecxz
xorb
mov
mov
pop
addr16
jnp
cmp
jmp
insb
cmp
lahf
pop
inc
not
das
aad
pop
mov
adc
adc
fadd
sub
and
adc
add
ljmp
and
jbe
cltd
inc
outsl
push
push
mov
mov
mov
pop
pushf
adc
pop
mov
cld
add
int
sbb
orb
sbb
jecxz
mov
add
cmp
sbb
mov
add
pop
jp
add
repz
popf
add
adc
lcall
aam
bound
jnp
popa
push
add
and
aam
lahf
add
inc
cmpsl
arpl
cs
loop
lods
lds
fldt
xor
jmp
add
xchg
in
ror
push
hlt
cli
insl
mov
mov
cmp
fistps
inc
mov
adc
dec
push
jno
inc
ds
ss
lcall
add
test
aad
nop
inc
xchg
cmp
add
jb
add
imul
inc
test
sub
sbb
iret
adc
dec
dec
scas
jl
cltd
add
repnz
nop
call
pop
stc
xchg
dec
push
cli
popa
add
adc
packuswb
and
inc
add
jp
jl
adc
push
inc
cmp
cltd
mov
dec
test
xchg
or
dec
jg
lret
ret
in
add
push
js
add
jbe
negl
and
jg
add
and
add
out
sub
sbb
insl
push
xorb
mov
std
xor
jne
add
push
inc
sbb
sti
cmpsl
xchg
add
dec
hlt
adc
lds
ud1
mov
lds
out
adc
jmp
push
sti
cmp
cmp
and
and
pop
adc
inc
add
test
mov
push
inc
sbb
add
movsl
dec
xchg
int3
add
and
sbb
loop
mov
push
loopne
xor
pusha
repz
addr16
mov
or
scas
push
sahf
notl
xchg
xchg
pop
ja
add
xchg
add
sbb
ss
lahf
cli
idivb
dec
imul
dec
add
cmp
dec
inc
adc
ret
pop
add
push
sbb
lods
pusha
jge
add
dec
dec
mov
mov
and
mov
lret
orb
pop
jge
dec
add
add
popa
popf
cwtl
mov
mov
jae
or
and
and
ds
out
push
jp
push
in
mov
add
pop
cmp
andb
stos
sbb
inc
mov
test
lods
add
xlat
fs
cmp
add
dec
out
mov
cmp
xor
xchg
subb
xchg
inc
imull
pop
inc
jo
addb
xor
stos
mov
and
shlb
add
dec
or
or
psubd
leave
push
add
leave
inc
sub
sub
add
popf
jbe
add
les
sub
add
rcll
adcl
adc
faddl
cmp
mov
or
je
or
out
fnstenv
inc
test
loopne
dec
or
daa
sbb
add
fcoml
sbb
mov
mov
popf
cld
add
and
sub
xchg
cmp
mov
pop
test
adc
jecxz
adc
add
xchg
imul
push
in
add
shlb
aas
jmp
cmp
xchg
ja
inc
mov
add
aam
or
add
or
scas
push
sbb
dec
andl
or
jae
add
mov
jo
cmp
cmp
jge
jno
mov
nop
pop
add
ds
out
loopne
pop
pop
jl
add
cwtl
rcrb
xor
push
lret
sti
adc
test
and
ret
mov
xor
jp
lret
add
es
add
cs
xchg
test
movsl
pusha
add
xorb
pop
and
add
inc
mov
or
mov
cmpl
cmp
imul
daa
adc
push
mov
aad
xor
mov
pop
xchg
lods
sub
out
xor
push
adc
add
cmp
addb
and
ljmp
cltd
mov
clc
cmpb
loopne
dec
mov
call
fdiv
inc
dec
mov
sbb
push
je
rcl
inc
add
add
sbb
es
add
aaa
fstpl
idivl
int
xchg
mov
fsubs
jb
mov
xchg
rcr
std
jg
add
sarl
jae
lea
jns,pn
mov
inc
dec
add
mov
aaa
and
and
into
jo
stos
movsl
sbb
pop
sub
test
jg
add
cmp
imul
psadbw
add
addr16
sbb
add
mov
push
aam
in
and
enter
add
add
inc
xchg
add
inc
in
adc
shl
cwtl
cmpsb
decb
test
mov
add
test
xchg
cwtl
mov
xor
jb
rclb
cltd
add
adc
sub
out
or
jg
dec
lock
bound
sbb
add
or
push
inc
dec
adc
inc
push
xchg
add
jbe
shrl
hlt
xor
lods
add
and
xchg
into
xor
pop
add
stos
aam
add
mov
and
and
bound
mov
jne
mov
or
fld
xor
mov
add
popa
sub
into
loopne
lock
addb
cld
add
xchg
and
test
sub
mov
jo
jl
add
cs
adc
gs
add
pushf
pop
mov
cmp
je
xor
add
imulb
add
fadds
lret
or
pop
es
add
out
ljmp
in
jge
add
mov
dec
adc
or
in
idiv
mull
testl
stc
add
std
leave
pop
add
xchg
les
movsb
pop
hlt
add
aad
movsl
fsubs
outsl
daa
add
add
subb
dec
mov
mov
int3
arpl
or
int
fsubrs
das
push
mov
jle
rorb
adc
jae
dec
in
sub
dec
orl
and
in
cli
mov
lods
ss
and
cmc
add
sarb
ret
out
vpcmpeqw
mov
pop
add
mov
cli
adc
les
scas
xlat
cmp
adcb
rcll
dec
add
mov
add
gs
inc
outsb
and
pop
adc
and
movl
push
and
repz
adc
add
jl
dec
add
add
adc
sti
adc
aam
mov
ret
in
jne
sbb
mov
sbb
pop
mov
inc
js
subb
ljmp
ret
out
int3
js
cmpb
cmp
inc
popf
enter
adc
sub
mov
jle
jb
loopne
lods
scas
mov
mov
les
jae
xchg
sbbl
adc
cmp
lldt
enter
std
add
scas
ja
jo
add
popf
and
loopne
jg
cmp
cmp
cmp
outsb
cmpb
mov
cmp
push
dec
cmpsb
and
xchg
paddb
call
sub
mov
ljmp
pop
push
or
lcall
fistps
sub
push
mov
mov
sbb
jl
pop
pop
pop
in
and
add
mov
or
xor
mov
push
add
enter
insb
lock
push
lahf
inc
xor
sbb
mov
or
ja
inc
cmpb
adc
inc
enter
adc
rolb
pop
add
mov
xor
js
fstpl
sbb
in
orb
add
fldcw
out
add
aas
mov
dec
add
add
das
xchg
pop
xor
xchg
add
ja
inc
fs
push
je
mov
jae
add
push
and
cltd
push
or
jne
fidivrs
jmp
sub
cs
add
stos
jb
ds
pop
ljmp
adc
shrl
out
add
in
enter
inc
jl
das
incb
jne
mov
sbb
movsb
xor
ja
add
fistpl
les
add
insb
mov
test
lods
inc
fistpl
daa
enter
incl
dec
mov
in
mov
jl
jno
fdivrp
pop
ljmp
xchg
test
sub
aas
push
push
add
dec
es
mov
lahf
mov
test
ja
outsl
es
push
add
mov
sub
movsl
add
or
cmp
push
xchg
loopne
pop
dec
lahf
add
sub
xchg
shll
jbe
inc
push
popf
mov
add
subl
mov
sbb
pusha
es
ss
repnz
stos
or
in
and
add
loopne
inc
test
pushf
dec
add
stc
pusha
out
pop
sbb
or
ret
pop
fiadds
lcall
mov
hlt
imul
jo
push
inc
test
cs
mov
stos
adc
mov
ret
add
sbb
and
test
out
sub
sub
jmp
jg
add
xor
into
pop
in
dec
jmp
andb
inc
mov
mov
lock
mov
cmp
jg
hlt
nop
add
push
fstps
adc
pop
mov
fs
or
dec
add
pusha
cmpsb
imul
nop
insl
jmp
add
dec
mov
and
add
enter
pushf
pop
add
out
leave
cmpsb
loopne
fmul
pop
fsubl
add
adc
ja
and
jo
insb
in
cltd
adc
dec
push
into
lods
mov
pop
inc
add
or
lret
sbb
negb
mov
inc
lods
lcall
fldl
data16
mov
sahf
sbb
dec
popf
add
stos
cs
jbe
mov
rclb
cmpsb
hlt
xor
pop
mov
add
xchg
loopne
scas
test
sbb
jb
adc
pop
int
insb
cli
adc
xor
cld
mov
push
int3
fsubrp
pop
pushf
and
sbb
jge
inc
add
mov
push
push
out
daa
add
mov
in
mov
xchg
lds
cmp
sbb
cmp
faddl
add
pusha
test
out
add
loope
mov
or
push
inc
lret
aas
jge
subb
les
jae
or
jecxz
and
xor
arpl
and
mov
cmp
cltd
adc
xor
negl
inc
pop
imul
aam
sub
mov
sbb
clc
mov
popf
add
jno
inc
cmp
mov
pop
daa
nop
push
test
in
out
mov
sbb
xchg
or
enter
lods
add
sub
cmp
add
aad
test
fs
adc
adc
ds
pop
jmp
adc
push
lret
decl
sbb
aaa
jno
aas
arpl
mov
clc
or
add
stos
aad
in
cs
cld
lahf
mov
and
rcll
add
movsb
fistpl
aas
xchg
add
cmp
repnz
jne
sbb
insb
cmpsl
inc
inc
mov
scas
loopne
add
xchg
pop
lods
and
push
movups
dec
jl
fisttpll
jg
add
ljmp
aaa
add
dec
inc
dec
pop
push
xlat
arpl
imul
icebp
jne
adc
daa
adc
sbb
inc
lcall
add
fnstenv
mov
into
mov
fwait
jbe
ds
or
mov
repnz
outsl
ljmp
inc
dec
les
xchg
mov
jb
je
mov
add
add
int
js
mov
sbb
loopne
inc
xchg
jmp
into
mov
orl
bound
in
xchg
pusha
pushf
mov
setg
xchg
inc
mov
dec
dec
mov
and
lock
pop
jo
add
sub
add
outsb
fldcw
add
popf
jecxz
rorb
mov
cmp
lahf
cmp
out
mov
push
pop
repz
stos
cmpsb
add
inc
jo
add
sahf
aam
xorb
add
es
dec
add
cmpsl
pop
das
add
je
in
clc
or
pop
idivl
jecxz
add
loopne
pop
push
sub
inc
dec
mov
xchg
push
adc
dec
and
cmpsl
sub
mov
add
push
sarb
cmp
test
mov
add
mov
insl
cmp
rorb
out
add
and
push
cmpsb
xchg
pusha
das
icebp
vpmaddwd
or
mov
enter
inc
sbb
add
xchg
ficoms
jp
and
xor
add
cmpsb
dec
adc
inc
std
fcoms
loopne
shlb
add
pop
sbb
mov
sbb
mov
movsb
sbbl
add
push
push
lcall
dec
add
mov
fwait
push
adc
scas
xchg
cmpl
sub
cmpsl
push
xor
add
sbb
ds
add
jne
xchg
add
mov
adc
add
fsub
divb
shlb
lods
mov
test
popa
jecxz
adc
repnz
movsl
sahf
shlb
bound
mov
xchg
insl
and
and
pop
fdivs
movsb
dec
mov
add
popa
add
mov
jnp
testl
bound
xchg
jbe
out
lods
aas
fsubs
xor
dec
call
out
jb
mov
mov
hlt
and
cmp
or
lods
out
sbb
enter
inc
mov
es
and
faddl
pushf
add
add
insb
cmpsb
cmp
xor
fwait
sub
push
mov
pop
mov
test
notl
push
call
pop
cli
jo
mov
xchg
inc
xchg
fwait
sbb
aas
jo
and
pop
lret
call
push
scas
hlt
leave
mov
bound
ret
gs
dec
cs
mov
rclb
xchg
sub
ret
and
fbld
test
ret
in
pop
add
xchg
scas
lcall
push
test
push
or
jns
das
jnp
add
push
push
and
cli
pop
fcmovne
movsb
sub
int
cmp
out
lock
notl
enter
jge
loop
xchg
xor
nop
clc
mov
int
pusha
or
push
add
pop
mov
pop
ss
lods
or
xlat
std
mov
jle
mov
add
out
mov
pushf
adc
test
mov
mov
fstl
sbb
mov
sbb
lods
add
cmc
jns
mov
loopne
inc
aad
aas
xchg
fiadds
inc
test
fwait
ret
xchg
xchg
int
push
sub
or
push
out
or
insb
cmp
bnd
add
rcr
inc
repnz
mov
orl
mov
add
add
rcrb
add
fistpll
adc
xor
and
out
xchg
popf
ja
cltd
add
inc
pop
rorb
add
inc
xchg
xor
gs
pop
add
fmuls
sub
xchg
div
rcr
xchg
dec
sub
mov
dec
pusha
push
add
cwtl
fcmovnb
jbe
inc
bound
xor
mov
fs
push
nop
xchg
push
mov
rcrb
dec
es
add
ds
or
jge
push
add
jae
and
sbb
cmpl
clc
jne
add
rorl
sbb
addl
cmp
and
test
pop
pop
rorb
mov
pop
cmpsl
sbb
xchg
mov
fisttpl
shl
arpl
xchg
add
rcrl
in
scas
mov
movsl
sub
sahf
cmp
dec
aad
in
test
cmp
insb
mov
js
xor
mov
xchg
stos
mov
ja
xchg
jp
rolb
lahf
in
into
cs
scas
push
sub
mov
fdivr
mov
and
cmpsl
ljmp
or
imul
xor
add
gs
add
ror
xor
add
scas
pop
ficoml
and
out
pop
dec
imul
cs
mov
fwait
add
data16
out
mov
shlb
mov
jbe
in
dec
imul
mov
jp
mov
jle
stos
mov
add
sbbl
ljmp
add
inc
or
dec
jmp
lret
leave
icebp
add
add
test
add
loopne
xchg
pushf
dec
rolb
js
repz
mov
xchg
cmp
or
int3
pusha
and
inc
mov
mov
or
mov
cmp
push
dec
fwait
repnz
cmp
aad
xchg
or
add
jae
scas
mov
mov
cmp
mov
jg
imul
loop
repz
add
mov
inc
ljmp
sbb
cmp
popf
add
add
addb
sub
call
add
inc
xchg
push
push
mov
repnz
add
pop
inc
stc
gs
pusha
jp
insb
lea
lret
push
add
rcrl
cmp
xlat
add
sbb
rcpps
jmp
xchg
orps
cltd
outsb
mov
or
aam
cmc
add
insl
inc
pop
popf
jge
pop
add
ss
leave
and
add
dec
and
xchg
sub
lcall
cmp
outsb
lret
add
and
pusha
xabort
mov
les
sbb
pop
mov
pop
mov
adc
fldl
cmp
cmp
loope
pop
or
mov
mov
mov
movsl
daa
dec
cmp
jecxz
fiadds
dec
out
dec
mov
push
out
inc
add
dec
or
rcrl
mov
push
sahf
add
push
or
xchg
pop
sub
fcoms
add
jle
add
aas
in
push
aam
rorl
add
mov
add
jb
shlb
mov
jnp
add
pop
sbbl
rcr
in
xor
add
inc
lea
pop
lods
lahf
pop
shlb
imul
mov
adc
test
mov
push
test
jg
rolb
add
les
mov
add
dec
xchg
dec
add
in
add
movsb
and
and
pop
dec
mov
add
add
jnp
dec
aaa
cltd
adcb
pop
add
imul
cmpsb
in
inc
pop
push
adc
loopne
movsl
and
add
inc
jns
jne
enter
pop
insl
imul
xor
loopne
and
ss
push
jo
dec
jnp
add
popf
pushf
mov
sbb
xor
pop
mov
ja
cmp
mov
jmp
add
mov
cwtl
add
add
mov
stc
or
subl
int
sbb
mov
mov
adc
add
mov
ljmp
cmpsl
pop
iret
add
shlb
movsl
lcall
jmp
jge
ficoms
jecxz
or
test
das
add
jno
pop
dec
push
lret
add
clc
jmp
cmp
xchg
mov
jg
jnp
ret
push
xchg
add
loope
call
enter
ffree
mov
ljmp
push
jnp
xlat
xchg
push
inc
sbb
xor
pop
sbb
fcoms
mov
push
fstl
popf
add
cmp
pushf
imul
mov
sarb
sub
pusha
pop
int
adc
jmp
pop
xchg
bound
fstps
or
arpl
andl
ret
mov
adc
ret
lds
or
adc
cmpsl
sbb
dec
jge
sub
add
add
and
push
jnp
add
stc
mov
add
fs
insl
add
scas
mov
fadd
xchg
add
pop
xchg
pop
outsl
sahf
hlt
scas
mov
jl
pop
push
add
dec
out
cwtl
mov
and
adc
pop
sub
mov
out
jne
mov
cmp
lods
repnz
fidivrl
inc
sbb
xlat
adc
int3
fwait
add
push
addr16
add
ja
fisttpll
ud1
aaa
add
sbb
xchg
dec
sahf
sub
cli
inc
sbb
inc
cs
loopne
addps
add
movsl
scas
fidivs
in
push
call
ror
sbb
dec
pop
add
in
cmp
popf
mov
les
lods
mov
mov
arpl
mov
dec
inc
leave
jecxz
add
fsubl
roll
inc
mov
in
jecxz
cs
movsb
mov
shlb
pop
incb
inc
mov
cmpsb
sub
fdivl
push
inc
xchg
push
and
mov
mov
lea
aam
decb
fwait
push
lahf
mov
fcom
clc
push
ret
lret
pushf
cmp
cmp
push
xor
rorb
and
subb
paddsb
lods
scas
and
mov
jns
shrl
add
call
or
pop
cltd
orb
hlt
out
add
mov
loopne
and
dec
imul
sub
int
xchg
mov
leave
jg
mov
add
lods
sub
hlt
adc
bound
les
movsb
sub
push
inc
jp
pop
cmp
shrb
xchg
dec
wbinvd
mov
push
call
mov
xchg
cli
sahf
add
lds
dec
mov
mov
sub
sbb
stos
call
cli
fildll
xchg
scas
or
lret
add
test
aam
scas
pop
mov
xchg
gs
xchg
add
xchg
push
pop
ss
orl
inc
movsb
xor
lahf
pop
lods
ret
enter
lret
sub
sub
mov
ds
jne
inc
jmp
dec
push
mov
add
mov
mov
sbb
outsl
hlt
xchg
rcll
add
jns
fwait
sbb
ret
je
cwtl
mov
movl
rorb
jb
or
cs
push
and
add
push
cmp
out
orb
add
imul
loopne
sti
cli
or
pop
fisttps
test
xlat
mov
out
mov
xchg
add
and
bound
jbe
cmp
or
push
cmc
dec
add
mov
add
xchg
add
adc
dec
mov
jne
add
jbe
rcrl
movsb
add
test
adc
loopne
pop
rolb
pushf
dec
mov
add
jae
mov
xor
jbe
aaa
dec
fistps
shl
xchg
call
pop
or
data16
xchg
lods
mov
fcoml
or
insl
xchg
shl
test
ret
jnp
sahf
add
lock
addr16
fiaddl
push
fdivrp
fdivrl
pop
pop
cld
adc
mov
movsb
pop
xor
jge
dec
shrb
add
sub
cmp
fs
int3
lock
xlat
mov
mov
add
xchg
or
add
cltd
push
push
mov
cmp
xchg
pushf
xor
add
arpl
sub
push
mov
push
push
cmp
clc
pop
scas
add
inc
icebp
loopne
add
jb
xor
popf
in
test
sbb
jl
mov
lcall
push
add
cmc
mov
add
jmp
and
mov
scas
lods
or
aad
xorb
aaa
add
outsb
push
shrd
loopne
xor
push
fisubrs
cmp
fldl
sub
rcrb
and
sbb
push
mov
xor
mov
xchg
cmpsl
fdivl
mov
pushf
fimuls
jge
mov
insb
xorb
mov
add
pusha
dec
adc
pop
hlt
cmp
loop
icebp
dec
jae
repnz
fisttpl
sub
xor
or
mov
inc
xchg
dec
xor
jno
add
loopne
fbld
add
mov
lcall
sahf
add
stos
rolb
scas
cmp
sub
repnz
or
ret
stc
mov
inc
sub
stos
push
out
add
les
mov
ds
ja
jge
xor
xchg
ss
inc
jb
jo
jl
mov
decl
or
sbbb
mov
fwait
ja
jp
add
mov
adc
out
add
jle
imul
outsb
push
and
or
cmpb
xlat
mov
adc
in
aas
or
cmp
push
and
js
add
ficoml
mov
xor
lahf
and
inc
push
or
insl
in
das
add
mov
jo
inc
in
ret
jns
adc
or
daa
pop
fstp
mov
dec
lret
pop
pop
stc
mov
mov
mov
sbb
std
xchg
sbbb
sbb
add
push
adc
out
stos
push
or
jp
sbb
pushf
es
add
das
add
mov
add
add
or
test
and
inc
or
fstp
sub
add
js
mov
ljmp
add
sub
jecxz
cmp
add
or
stc
add
mov
out
pop
sub
lret
fidivs
and
jb
xor
xchg
pop
inc
iret
jl
ljmp
mov
add
jb
sbb
or
dec
ret
movsb
mov
test
push
xchg
pop
jb
lret
movsl
lds
rorb
push
sbb
fistpl
add
lahf
dec
shlb
jmp
addl
xchg
cmpsb
ja
xchg
inc
hlt
add
sub
mov
mov
lds
xchg
test
mov
push
cmc
pop
shlb
mov
js
add
cmp
add
and
sti
and
repnz
jno
insb
shlb
add
adcl
std
jle
addb
popa
mov
test
xchg
jl
add
ljmp
add
cmc
outsb
or
es
dec
shlb
mov
add
pop
or
aad
into
add
insb
push
adc
in
rcr
cmp
cmpl
xchg
adc
outsb
and
repnz
sbb
pop
or
or
mov
and
repz
push
je
cwtl
or
div
sub
dec
lret
andb
jp
pop
faddp
scas
in
dec
paddd
or
gs
add
jb
dec
out
cmc
add
jg
cmpsl
mov
add
xchg
mov
cmp
xor
lret
jno
out
xchg
cmp
add
mov
add
jnp
mov
add
xchg
sarl
mov
xor
pop
sub
add
ljmp
or
shrl
stos
in
jbe
add
sbb
push
int3
ja
add
mov
js
add
into
mov
xchg
lods
mov
faddl
ret
add
stos
mov
inc
add
dec
lret
addl
or
roll
and
enter
push
addl
mov
jmp
loopne
fucom
add
scas
sbb
cmc
leave
subb
jnp
rclb
push
dec
fs
xor
add
lret
pop
add
fstps
sbb
xor
add
hlt
sub
mov
cld
nop
mov
jbe
jmp
xchg
lods
imul
mov
cmp
add
or
pop
add
repz
mov
add
mov
sbb
sarb
xor
stos
inc
fimuls
xchg
add
test
add
rcll
add
sbbl
loop
shlb
mov
and
adc
add
stc
test
push
cltd
out
notb
add
leave
movsl
mov
aam
and
lods
stc
cmp
orl
orb
mov
lods
repnz
jl
add
jle
pop
sub
jp
add
sti
pop
adc
lods
sarb
sub
pop
xor
pop
sahf
cmp
testb
push
repz
add
sbbb
mov
inc
add
pop
hlt
stc
cmpsl
cmovs
add
fs
mov
loope
mov
mov
jg
fnstenv
cwtl
push
js
lock
sbb
xchg
int3
xor
push
inc
daa
cmp
mov
shlb
in
std
pop
scas
mov
mov
hlt
add
sbb
pop
mov
sbb
ret
mov
add
and
push
lcall
add
mov
sar
stos
cmpsb
mov
insl
mov
mov
jae
sbb
aam
inc
or
mov
xor
mov
test
rorl
repz
pusha
shlb
pusha
aad
sbb
faddl
pop
aas
sub
xlat
test
rorb
or
cmp
add
leave
dec
loope
inc
add
add
sbb
enter
dec
mov
nop
stos
sarb
push
jbe
mov
inc
add
and
cmp
push
add
push
cmp
pop
add
sarb
add
dec
sub
add
pushf
add
add
mov
movsl
into
ret
roll
inc
add
fistpl
loope
jnp
iret
inc
imul
or
int
sbb
loop
push
loope
in
addl
mov
mov
lock
inc
adc
lret
testb
dec
pop
add
popf
inc
pop
orl
add
out
loopne
scas
cmp
and
sub
outsl
and
cmc
ds
in
pop
out
add
daa
mov
das
sbb
jno
cwtl
and
push
and
dec
add
cmp
jbe
movsl
add
in
inc
sarb
int
popa
lock
test
scas
or
movsl
add
rcrb
add
ja
lret
les
sbb
add
pop
pop
pop
push
xor
in
addb
loopne
add
inc
shll
ja
enter
or
add
std
mov
add
add
ss
shlb
cmp
loop
add
dec
mov
incl
mov
aad
js
sub
int
movsl
xor
lods
fcomps
incl
sbb
mov
adc
gs
pop
pop
sub
adc
xor
mov
repnz
mov
sub
dec
jmp
add
repz
in
xorl
leave
xor
fnstenv
divl
add
cmc
dec
addb
or
push
rcr
jp
setle
fistl
jno
or
xchg
mov
sub
lods
push
aas
push
imul
push
adc
cmp
lds
and
add
inc
je
add
push
xor
ffreep
lods
cmc
lahf
xchg
add
fs
or
push
inc
pushf
pop
stos
sub
add
inc
push
or
popa
out
pop
xor
hlt
add
das
fucom
and
mov
popa
jno
add
mov
pop
jb
add
cmp
and
rorl
jg
jge
mov
mov
cltd
and
add
inc
push
add
jns
fs
testb
mov
or
out
addb
push
pop
jle
stos
movsb
adc
xchg
dec
jae
lock
test
js
scas
dec
popa
jne
pshufw
fmul
nop
testb
xorb
ret
lahf
or
subl
call
mov
pushf
jno
popf
xchg
cmp
fiaddl
pop
inc
mov
int
adc
je
movsb
jg
mov
xorb
loope
push
inc
imul
shll
pop
movsb
scas
insl
fs
filds
cltd
mov
mov
sahf
xor
dec
ja
push
pusha
outsb
cmp
mov
test
rorb
mov
das
add
sbbl
inc
adc
jge
nop
xchg
scas
fiadds
sbb
pop
dec
add
dec
sub
add
insb
repz
add
aas
pop
clc
and
loope
push
mov
outsb
ljmp
fdivr
sbb
mov
out
cmp
mov
sub
mov
and
sub
cmpsb
loopne,pt
movb
loopne
fistpll
movsl
out
fdivrs
mov
push
xchg
mov
ret
add
std
pop
js
test
imul
xchg
ja
icebp
stc
popa
int
cmpsb
add
cwtl
inc
mov
add
cmp
fwait
push
jle
jo
add
xor
mov
aam
fildl
call
cmp
bound
nop
daa
mov
jle
dec
mov
nop
jb
test
call
add
push
stos
inc
imul
jno
lds
sbb
lea
rclb
data16
mov
jge
sbb
lds
mov
sbb
pop
push
es
shl
dec
add
sbbl
lret
sub
mov
adc
add
push
out
ret
stc
mov
fldl
bndstx
jb
fadds
test
add
iret
rclb
mov
cmpsw
out
pop
cmp
xorl
icebp
ljmp
iret
lock
mov
jne
cltd
xchg
nop
sub
adc
clc
sub
out
test
xor
push
adc
jae
add
out
subl
sbb
mov
xor
arpl
je
cmp
or
add
nop
mov
dec
aam
add
pop
pop
mov
and
sarl
sub
lds
cmc
sub
lcall
add
jmp
ja
add
bound
ljmp
sub
mov
add
es
js
outsb
mov
add
adcl
out
push
mov
test
cwtl
loopne
xchg
dec
inc
cmp
cs
shlb
fsubl
add
outsl
xchg
mov
adc
mov
push
push
sahf
add
sub
mov
iret
hlt
pop
mov
ret
shr
jne
xor
add
or
popf
lahf
lret
js
inc
clc
test
cmp
pop
and
add
shlb
adc
push
ss
push
mov
mov
rolb
add
push
dec
adc
movsb
shrl
fdivl
fisubrs
mov
ljmp
daa
mov
ja
jp
push
add
hlt
cmpsb
jb
loopne
add
inc
insb
leave
gs
imul
jne
pop
add
dec
xchg
fwait
dec
adc
aas
lock
test
mov
xchg
cmpsb
cltd
add
mov
cld
cli
cmpsl
add
pop
dec
push
mov
es
mov
loopne
fiadds
sbb
jle
inc
add
lret
add
mov
add
jno
outsl
mov
add
xor
daa
ljmp
jecxz
repnz
jp
jno
add
stos
adc
pop
xor
ss
add
icebp
js
inc
mov
shll
add
outsl
orl
scas
sarb
xor
jbe
dec
ljmp
add
xor
mov
negl
add
dec
out
ret
adc
jo
mov
add
into
sbb
jne
adc
and
rclb
insb
fsubr
fadds
adc
aas
inc
add
jae
roll
test
pop
addb
mov
lock
cmpsl
loop
into
mov
inc
fadds
dec
jo
mov
dec
cmp
adc
xor
dec
cmp
sbb
faddl
mov
pop
add
mov
add
dec
notl
xchg
inc
add
pop
and
mov
into
imul
test
pop
fiaddl
movsb
cmpsl
sub
and
xchg
xor
xor
mov
push
dec
loopne
cmpsb
loope
mov
dec
in
adc
ljmp
jp
insb
shl
cmpsb
add
bound
sbb
xor
testb
ret
cmp
mov
call
sbb
aad
inc
test
sub
pop
ljmp
stos
inc
push
add
rol
bound
add
scas
pop
sub
mov
add
or
mov
jae
push
sbb
add
dec
lret
mov
add
mov
imul
sub
imul
mov
or
sub
sub
add
push
mov
add
ret
pop
je
cmp
shlb
cmpsl
add
adc
pop
xchg
mov
xor
es
int3
sbb
mov
jmp
mov
mov
add
push
adc
in
add
push
push
popa
rorb
mov
inc
push
cmp
mov
pop
mov
xor
add
jl
sarb
add
std
xchg
cmpl
mov
insl
int
add
bound
pop
jae
pusha
jp
aaa
push
or
add
daa
enter
add
sub
mov
addr16
jg
add
pusha
ret
sbb
dec
cmc
inc
push
push
mov
mov
pop
out
adcb
add
int
loope
and
pop
sbb
inc
es
sbbb
cmp
pushf
add
or
mov
fcmovne
sbbb
loopne
and
hlt
cli
pop
add
fwait
jo
fdivrl
gs
add
mov
xchg
adc
shll
push
rcl
push
jnp
adcb
insl
pop
outsb
shl
xchg
rol
leave
adc
pop
add
add
dec
xor
inc
leave
movsb
add
mov
inc
or
dec
add
xor
jg
mov
add
xor
push
sbb
mov
cmp
cmp
mov
jns
iret
jecxz
aas
add
add
cwtl
aad
jns
divl
pop
inc
dec
mov
xchg
xchg
mov
or
or
into
add
jnp
add
enter
inc
cmp
fucomp
xchg
jbe
add
or
add
inc
mov
das
jne
xchg
pop
cmp
mov
pop
loopne
jbe
push
add
inc
dec
fstps
pop
outsb
add
loope
xor
dec
outsl
add
ja
mov
push
aas
cmp
mov
bound
cld
sub
mov
inc
and
rol
add
jge
repz
adc
lock
aad
cld
lahf
pop
xor
outsb
and
cs
adcb
add
icebp
test
out
or
and
xor
stos
lcall
roll
pop
jmp
mov
xor
xchg
mov
inc
mov
pop
in
jae
lret
sbb
aad
inc
add
lds
add
jno
mov
pop
add
iret
push
lods
push
mov
rclb
fwait
inc
arpl
add
cmp
pop
insb
add
mov
pusha
loope
daa
and
sub
add
mov
out
mov
js
mov
fnsave
jbe
jno
out
mov
fwait
push
sub
inc
push
jl
add
pop
pop
add
xor
add
sar
add
arpl
cmpsl
pop
popl
roll
lret
add
icebp
imulb
sbb
mov
sar
push
shll
or
shlb
push
pop
push
out
push
cld
pop
add
ret
inc
popa
add
ret
and
sbb
out
dec
inc
jg
pop
sti
cs
rclb
mov
jp
fnstsw
push
in
mov
add
add
and
lods
in
jnp
sub
lods
shll
add
jge
cmp
mov
pop
mov
in
bound
push
or
and
and
jb
add
std
sbb
add
insl
je
and
xor
pusha
and
cwtl
adc
sbb
test
fistpl
add
push
xchg
lock
mov
out
add
les
test
add
pop
inc
popa
inc
dec
dec
dec
jnp
jl
add
cmp
add
xchg
inc
mov
pop
dec
jecxz
xor
sarl
xor
dec
sub
push
push
scas
test
mov
mov
aad
xor
or
xchg
inc
lret
ljmp
lock
loopne
add
adc
sub
in
idivl
xchg
fldenv
push
mov
or
dec
pop
je
mov
inc
jbe
cwtl
sbb
cmp
out
shrl
jo
jl
xor
repnz
mov
xchg
movsb
dec
or
or
lret
jmp
faddl
or
int3
test
and
pop
loop
pop
imul
paddd
adcb
jl
add
addr16
jo
add
pop
mov
stos
call
rcrl
xchg
add
mov
mov
pop
mov
movd
movsl
jecxz
mov
mov
aaa
sub
loope
mov
jae
adc
loopne
xchg
jge
add
mov
in
xchg
add
aam
mov
push
arpl
dec
in
mov
mov
outsb
sbb
scas
sbb
std
xchg
jno
cmp
jmp
add
and
test
fidivs
fs
cmp
hlt
int
fcoms
add
sbb
sub
cld
stc
enter
fnsave
loopne
pop
stos
dec
push
add
inc
test
scas
inc
push
xorl
mov
push
movsl
xchg
inc
repnz
pop
dec
mov
loop
call
js
nop
mov
xchg
sub
inc
sbb
cmp
lock
mov
cld
test
or
imul
xchg
adc
pop
mov
inc
jb
loopne
fldcw
mov
daa
jp
outsb
inc
cmc
jbe
add
push
sub
mov
jb
adc
mull
es
adc
inc
cwtl
ds
pop
mov
js
outsl
mov
adc
sub
sbb
mov
mov
shr
push
mov
push
sahf
xor
pop
add
xchg
mov
sbb
and
push
pushf
xor
in
cmpsl
add
ret
jae
cmc
insl
mov
and
iret
pop
jbe
jge
into
std
loopnew,pt
add
sahf
add
cmp
popa
sbb
mov
add
fnstenv
pop
into
das
dec
mov
inc
es
push
sub
cmp
shll
add
and
add
xchg
movsl
dec
pop
fcomps
mov
aas
mov
pop
inc
insl
sbb
inc
sbb
test
out
fistpll
add
imul
adc
mov
cld
inc
out
or
out
add
shll
cltd
dec
jp
or
int
push
out
lret
lods
add
mov
mov
movsb
jb
adc
adc
iret
add
mov
cmpsl
addl
test
aas
cwtl
out
add
jno
nop
jnp
and
mov
xor
add
scas
push
xlat
sbb
int3
iret
pop
mov
enter
call
jno
push
or
inc
dec
nop
idivb
push
lock
mov
pop
les
jmp
pop
jmp
xor
ja
andb
fimull
leave
jnp
xlat
mov
push
pushf
add
loopne
mov
fidivrs
xor
xor
popf
sbb
add
add
sbb
enter
iret
fidivrs
dec
sbb
popf
das
call
dec
xorb
lcall
pusha
pop
add
jno
shrb
jns
add
sbb
inc
jecxz
and
subb
int3
add
push
pop
enter
leave
dec
add
cli
adc
add
mov
push
sbb
insb
dec
or
aad
arpl
mov
cld
sbb
push
inc
add
jo
scas
dec
cs
clc
cmp
ficoml
fbld
xchg
push
popa
idivl
dec
cmpsb
sbb
int
inc
cmpsl
iret
lock
insb
add
pop
push
cli
sub
and
dec
jle
addb
xchg
sbb
mov
add
sarb
jp
arpl
pop
jmp
movsl
pop
outsl
imul
xchg
add
insl
xchg
rol
rcl
aas
out
pop
repnz
cltd
addb
xor
pop
jae
mov
push
xchg
roll
adc
xchg
mov
add
mov
jl
enter
mov
sbb
mov
inc
add
imul
ss
mov
stos
mov
aad
xlat
dec
inc
idivl
bound
fucom
enter
mov
pop
lods
mov
mov
dec
in
add
lcall
push
insb
les
mov
jl
inc
xchg
pop
sub
sbb
lahf
mov
jp
xchg
loope
push
outsb
adc
add
fldcw
add
pop
mov
or
in
dec
or
sbb
mov
adcl
sub
xchg
and
xchg
dec
sub
loopne
addr16
and
insl
pop
fcmove
cmpsb
popf
inc
gs
popa
aas
sbb
push
ret
stos
gs
cmp
xchg
out
mov
rcr
ficoms
jbe
nop
push
fsubl
rclb
test
pop
xor
je
inc
rol
pop
add
dec
dec
mov
dec
sbb
pop
lea
loop
inc
mov
je
dec
repnz
xchg
addl
sarl
nop
idivb
dec
cli
cltd
adc
imul
fwait
in
subb
nop
hlt
add
arpl
push
dec
aam
pushf
add
int3
mov
negl
aas
and
jge
pop
std
cld
adc
sbb
shlb
jb
push
add
xchg
test
mov
mov
add
adcl
add
sti
es
test
add
push
mov
mov
cmp
stc
xor
add
xchg
addr16
enter
push
sbb
shrl
add
jl
loope
sbb
or
daa
cmp
mov
imul
inc
cmpsb
dec
sbb
pop
xor
stos
or
rorb
int3
in
adc
add
push
push
insl
enter
dec
jp
sarb
jecxz
les
mov
lcall
pop
sub
pop
test
pushl
movsl
pop
cmp
jne
ds
dec
jno
add
je
iret
cmp
data16
fwait
mov
test
bswap
add
pop
push
push
pop
or
add
cli
popf
dec
mov
dec
mov
icebp
test
in
aaa
ror
out
outsb
or
sarl
filds
gs
movl
imul
inc
mov
cmp
mov
xor
sbb
dec
add
mov
ljmp
cmp
xor
pop
add
dec
adc
les
out
rolb
push
aas
ret
imul
push
jmp
lahf
jns
ds
addb
xchg
jg
cmpsl
cmp
flds
fucomip
add
int3
dec
dec
pushf
test
fisttpl
dec
loopne
push
push
pop
imul
cmp
ljmp
add
mov
cltd
inc
jb
dec
cmp
mov
inc
cwtl
repz
sahf
icebp
or
ficomps
and
lahf
fldenv
or
jnp
xor
sbb
ret
xchg
adc
lds
out
push
dec
push
xor
push
add
mov
test
add
fcomps
cmpsl
add
cmp
outsb
cmp
test
sbb
inc
sbb
pop
xor
mov
xchg
outsb
sbb
jmp
test
in
push
or
mov
add
push
lds
fucomi
adc
nop
add
xchg
in
add
jg
cmp
repz
inc
xchg
rorb
movsl
add
mov
cmpsb
or
xor
sbb
ja
mov
pop
adc
loopne
dec
scas
aaa
or
pop
dec
mov
jo
clc
js
add
dec
fs
test
jns
or
cmp
cmp
filds
mov
popf
cli
and
and
ljmp
sub
mov
aas
xlat
shll
adc
xchg
xchg
jo
dec
pop
add
mov
cmp
cs
sbbb
sub
cld
insb
pop
push
adc
cs
push
cmp
ljmp
jl
mov
dec
scas
lret
in
add
loope
cwtl
lret
cld
mov
jns
xlat
cwtl
jg
shll
jge
pop
out
loop
xchg
das
xor
aad
add
sbb
push
incb
inc
call
ret
inc
mov
xchg
and
push
mov
xchg
dec
cld
xchg
add
cmp
insl
dec
jge
cmp
pushf
lea
and
push
fldcw
repnz
test
cli
cmp
sbb
fisttpl
jl
sub
add
fs
push
insb
repz
jge
add
rcrl
mov
mov
popf
hlt
mov
call
push
inc
sarb
pop
sbb
dec
inc
fstps
pop
mov
aas
xor
jo
lds
in
fiaddl
sbb
cmp
add
inc
mov
in
dec
add
je
pop
add
test
fstps
sub
pop
call
jo
sbb
mov
dec
js
push
xor
or
loope
push
add
pop
mov
fistl
push
sub
clc
movsb
pop
inc
sbb
xchg
sub
fadds
iret
add
out
adc
xor
mov
sbb
mov
fwait
sbb
mov
add
cmp
mov
or
cmp
xchg
xchg
pop
add
sbb
add
cld
mov
cmpb
xchg
inc
inc
leave
pushl
cmp
xchg
jb
mov
add
xor
mov
cmpsl
addl
adc
xor
push
jo
lret
in
push
jae
add
cs
cltd
loop
dec
pop
xor
adc
add
pop
xchg
fincstp
and
fcmovne
sbb
inc
pop
cs
pop
sbb
add
and
std
xchg
jno
movzbl
sub
add
xchg
test
call
xor
js
ds
push
daa
fidivrs
sar
sbb
or
arpl
pop
adcb
xchg
add
xor
stos
dec
cmp
sub
aas
inc
sub
push
fmul
inc
insb
pop
adc
inc
mov
add
je
add
insb
ja
jnp
add
les
xorl
dec
add
les
dec
je
cltd
push
push
push
cs
ror
out
in
sar
pop
popl
rcl
pop
cmp
push
add
lahf
je
sbb
xchg
imul
inc
shrl
or
add
test
lahf
cs
fadds
lock
stc
push
out
outsb
enter
add
sub
leave
add
icebp
push
movsl
add
test
jmp
int3
test
lahf
jno
nop
add
or
mov
xor
pop
andb
sbb
das
jno
je
lds
xor
mov
and
cmp
xchg
imull
add
sub
push
xlat
out
cmp
xchg
movl
mov
dec
and
cmp
out
lock
pushf
test
xlat
addr16
xchg
sub
out
dec
push
mov
mov
lret
test
dec
out
int3
mov
pop
xlat
jl
xchg
loope
inc
cli
test
insl
pop
enter
add
sahf
jo
add
xor
pop
dec
loopne
je
dec
aam
xchg
pop
xor
pop
mov
mov
pusha
mov
inc
sbb
lock
rep
stos
gs
add
push
je
add
rolb
or
fldcw
cmp
lcall
rolb
mov
sti
ss
ds
inc
pushf
adc
sbbb
or
push
cld
cwtl
add
add
sarl
fdivrl
mov
outsb
or
and
jp
add
pushf
mov
sbb
loop
mov
and
stos
stos
jbe
mov
inc
inc
movsb
add
dec
mov
jae
add
icebp
push
xor
loopne
lahf
add
int3
test
rcr
imul
pushf
xor
in
add
aaa
dec
add
cmc
lcall
add
leave
in
dec
ss
pop
add
push
jle
pop
xor
add
cmp
out
inc
adc
mov
movsb
popa
mov
lahf
add
and
out
cmp
and
in
jmp
pop
lahf
dec
add
cmpsb
test
in
xor
xor
scas
out
ja
cmp
mov
pop
mov
pusha
xchg
jg
icebp
jle
scas
push
shlb
fstpt
mov
cmp
inc
je
repnz
or
pop
add
lea
stos
and
test
hlt
mov
mov
xor
jmp
clc
mov
push
add
xor
jg
add
movl
dec
dec
inc
hlt
outsb
int3
lds
add
pushf
fs
cmp
lea
jo
in
jl
mov
jbe
add
mov
cmp
filds
fndisi(8087
and
sub
or
aam
xlat
add
mov
jnp
add
xchg
jmp
outsl
or
addb
shrb
cs
addl
mov
pop
je
xor
es
xor
sti
add
jno
add
daa
sub
not
sbb
xlat
fists
cwtl
gs
shrb
or
add
ss
insb
lahf
loope
pop
sbb
mov
addb
xor
add
ss
inc
add
mov
sub
nop
xor
outsl
cmc
xchg
pusha
sbb
vmwrite
bound
mov
int3
lcall
stc
mov
cmp
mov
div
cmpb
jo
cld
adc
pop
pop
ret
sbb
pop
and
add
dec
jbe
jne
push
add
fstp
mov
loope
incb
inc
sbb
std
out
add
enter
je
add
adc
dec
int
pop
mov
sub
cld
dec
sbb
dec
fucomip
sbb
add
roll
stos
daa
mov
pop
call
and
loopne
in
jle
jo
idiv
xchg
andb
and
sbb
xchg
loop
add
push
lea
add
dec
push
in
sub
fstpl
and
add
cmpsb
out
sbb
mov
inc
and
add
sub
xor
mov
ja
cltd
jbe
dec
clc
adc
out
mov
fsts
dec
pop
shrb
imul
into
mov
sbb
outsb
fbld
mov
mov
subb
push
add
xchg
xchg
add
and
stc
inc
xor
add
mul
imul
pop
mov
ds
loop
jmp
loopne
fsubl
out
ret
add
jp
add
rorb
adc
sbb
add
movsl
xchg
mov
popf
mov
add
test
sti
jno
mov
pop
movsb
sbbb
jg
and
sbb
movb
dec
mov
jnp
mov
ljmp
cmp
add
jp
inc
les
inc
inc
add
pop
ret
test
enter
pop
jo
std
mov
jp
dec
xchg
popa
mov
push
or
shrl
sbb
push
push
pusha
mov
loopne
mov
rclb
aas
jecxz
add
push
and
push
mov
push
faddl
lea
in
pushf
pop
icebp
add
and
pop
mov
rorb
and
pcmpgtw
aas
cwtl
loopne
cs
stos
dec
roll
jb
xchg
adc
cwtl
js
add
mov
push
mov
adc
daa
pop
pop
shll
popf
xor
leave
out
push
xor
mov
xchg
push
pusha
sub
filds
adc
push
flds
and
stos
mov
push
int
js
add
ret
adc
aad
test
mov
pop
pop
popa
xor
lcall
xlat
sbb
ret
pop
adc
aaa
shlb
cmpsb
or
lret
sahf
stos
dec
dec
hlt
add
out
mov
push
push
fstpl
pop
xor
xor
dec
lahf
pop
aaa
rolb
add
sbb
test
add
or
fchs
js
mov
rolb
mov
pop
test
push
pop
dec
mov
andb
es
pushf
scas
sbb
in
filds
and
push
and
push
jae
add
push
pop
imul
mov
icebp
popa
incb
push
mov
add
cld
clc
jno
scas
leave
cmp
mov
imul
ds
push
dec
jl
add
repz
mov
fmuls
mov
test
xchg
mov
insb
add
cmp
push
movsb
in
fiadds
xchg
and
cs
add
into
stc
punpckldq
or
lret
add
loopne
add
nop
sbb
add
aas
and
sub
push
dec
and
jae
stos
add
iret
clc
inc
not
out
and
gs
inc
xchg
ss
mov
dec
loopne
jle
popa
sub
jb
pop
ret
sti
add
add
fildll
aas
pop
add
dec
pextrw
cwtl
test
stos
lock
cs
cmp
add
jmp
gs
inc
popf
popa
mov
jo
dec
add
sub
les
out
or
idivb
jl
push
enter
shll
mov
mov
add
or
ret
ud0
adc
mov
xchg
iret
xor
dec
cmp
mov
lret
push
cmp
cmp
sbb
mov
dec
mov
inc
dec
pop
or
and
jmp
add
mov
out
add
ffreep
push
aaa
fwait
out
xor
xchg
lods
dec
sahf
fcoml
inc
loopne
cmp
push
sbbb
mov
pushf
test
push
xchg
push
pop
adcb
pushf
dec
popf
call
adc
lret
jbe
lods
inc
xchg
add
jle
ficoml
mov
iret
rorl
jae
in
xor
leave
push
andl
jns
add
or
add
add
add
mov
and
subb
in
adc
andb
mov
add
mov
push
out
xchg
loope
or
rcr
add
addr16
mov
fmull
movsb
es
testb
add
jge
mov
mov
sbb
xor
xchg
bound
rcrl
cmc
mov
dec
and
push
add
fldenv
punpcklbw
adc
and
jle
add
add
lea
mov
test
sub
ret
add
and
adcl
push
adc
call
iret
dec
mov
sbb
mov
mov
fisubl
faddp
push
jo
jl
or
into
ret
push
sbb
cmp
inc
stc
and
andl
out
addl
rcrb
and
cltd
pop
bound
xchg
jmp
adcb
mov
aam
add
xor
loope
jne
add
pop
add
push
adcl
sbb
outsb
inc
and
xor
addl
nop
aam
testl
outsb
rorl
repz
ret
dec
out
add
mov
clc
jmp
xchg
mov
sbb
add
mov
call
jl
or
add
pop
jae
fildl
lahf
arpl
pop
cmp
push
xchg
out
mov
sbb
pop
add
xor
pushf
inc
mov
push
pop
imul
mov
sbb
add
mov
fistpl
scas
mov
in
sub
orb
std
stos
xor
incl
enter
push
mov
and
lods
mov
mov
add
jge
daa
fwait
push
cmpsb
arpl
cltd
lea
xchg
test
mov
movsb
sbbb
inc
add
fmuls
mov
and
shll
adc
mov
add
cs
add
fistpll
add
stc
sti
loope
orb
add
fdivrs
pop
add
or
lods
pop
outsb
movb
std
faddp
add
add
add
or
int
mov
hlt
mov
enter
mov
jae
mov
add
xlat
sbb
cmp
add
pop
mov
fsubrl
sbb
std
lret
inc
mov
pushf
or
roll
push
mov
pop
mov
xor
scas
sbb
add
mov
fildl
fdiv
call
fwait
pop
loop
xlat
mov
lods
cmp
mov
lods
outsl
sbb
mov
mov
fnstenv
lcall
test
add
and
xor
scas
repz
out
repnz
sbb
add
or
add
inc
push
std
xor
mov
add
xor
pop
sub
sbb
enter
je
xor
add
pop
sti
adc
jecxz
mull
repz
pop
ret
inc
and
add
enter
add
mov
ret
outsb
mov
adc
add
rcr
mov
jne
add
fneni(8087
mov
popf
or
arpl
add
add
repnz
cs
add
push
mov
add
mov
or
in
and
cmpsb
sbb
add
mov
fisttpl
xchg
scas
mov
lods
out
outsb
add
icebp
mov
lods
mov
cs
aas
add
pusha
in
dec
lcall
test
xchg
andl
add
jb
adc
test
add
and
xor
xchg
insb
jns
test
push
add
popa
fninit
adc
mov
cwtl
jo
push
and
add
out
andl
sub
sub
mov
mov
pusha
jmp
mov
cwtl
sti
xchg
pop
inc
add
insl
repnz
shlb
add
mov
adc
adc
stc
pusha
call
rcrl
out
push
les
test
mov
idivb
sub
aam
mov
add
in
cwtl
jbe
pop
jb
mov
sub
xchg
aaa
aam
test
dec
add
sbb
inc
inc
jns
mov
mov
mov
add
inc
add
mov
mov
aaa
mov
add
mov
add
lods
nop
add
mov
lret
jecxz
pop
mov
cmp
subb
addb
add
test
mov
add
add
mov
add
add
mov
push
cli
mov
add
lcall
sbb
es
mov
lock
and
inc
shlb
cmp
cmpb
repnz
lods
mov
add
jp
stos
enter
add
insb
mov
lods
dec
sbb
or
push
sbb
add
cmp
push
pop
fistl
mov
movsb
cli
and
jg
push
lock
add
xchg
popa
jp
or
add
pop
outsl
movsb
int3
loope
jne
out
xlat
adc
cwtl
dec
add
jbe
repz
add
cmpsb
adc
outsl
js
adc
lods
sbb
add
jne
jae
ret
add
push
inc
fidivl
cmp
pop
xor
dec
mov
rolb
dec
ljmp
add
jmp
cs
jle
add
ljmp
or
mov
out
sbb
imul
popf
add
mov
push
mov
in
mov
xor
int
in
lods
lds
ss
arpl
mov
mov
xlat
or
ljmp
mov
cwtl
xor
leave
cs
push
fst
inc
add
stos
or
loopne
lock
add
dec
int3
test
adc
shr
sahf
stos
sbb
jbe
jp
fs
xchg
push
dec
sub
add
push
xchg
mov
xchg
sbb
sub
add
add
mov
pop
add
jl
aas
and
sbb
cwtl
shrl
cmp
mov
add
call
pop
sub
sbb
inc
push
fildll
pop
sbbl
roll
shll
adc
pop
out
jmp
loopne
push
call
jge
fwait
cs
insb
pop
xchg
inc
or
aas
sub
cmc
and
adc
repnz
xor
daa
mov
cmpsb
and
or
test
ja
xor
xor
jo
jp
mov
push
add
mov
dec
std
inc
sbb
inc
jnp
daa
sub
cmpsb
jns
mov
ljmp
insb
fnstenv
pop
lea
ret
jmp
dec
sub
test
mov
inc
mov
jne
enter
lods
inc
add
inc
mov
xor
push
jno
and
jbe
mov
scas
cli
push
jno
jo
les
cmpl
push
mov
fbstp
adc
inc
hlt
jo
out
mov
mov
xchg
pop
fs
and
sahf
hlt
xchg
mov
stc
push
jae
and
and
pop
sub
push
xor
insb
loop
cmp
cmp
enter
push
rcll
push
xchg
cs
jo
mov
jnp
movnti
xor
dec
hlt
push
sahf
xchg
pusha
cmpsl
add
dec
out
rcrl
mov
push
and
aas
jae
pop
and
xor
cmp
push
xor
xchg
inc
jle
add
cld
aaa
sbb
lea
lahf
clc
sahf
adc
add
inc
mov
mov
mov
dec
pop
aas
xchg
or
add
idivb
gs
jo
pop
aam
clc
jecxz
mov
mov
enter
push
add
sub
xchg
stos
bnd
jae
cmpb
inc
aas
std
fsubl
mov
and
imul
cmpb
xchg
imul
inc
out
sub
mov
jnp
pop
cmp
clc
sbb
in
inc
jne
add
lods
in
std
ret
mov
cwtl
fistps
add
and
add
popl
repz
in
icebp
outsl
iret
xchg
lret
inc
test
add
cmp
xor
test
push
por
jle
cmp
movsb
cmp
xchg
pop
adc
mov
add
sbb
lods
jb
cmc
adc
or
pop
es
movl
test
push
mov
sbb
imul
aas
test
inc
dec
js
add
arpl
loope
aas
aas
add
inc
out
popa
jbe
repz
or
mov
faddl
inc
xchg
sti
lock
ror
aas
or
xchg
xchg
test
bound
xlat
or
lahf
pusha
ret
adc
xchg
dec
bound
dec
icebp
and
lcall
adc
popa
xchg
cmp
cmc
and
adc
inc
loop
aas
add
pop
or
xchg
add
add
test
and
mov
call
ds
es
adc
jne
cmpsl
pop
mov
pop
ljmp
or
pop
mov
popa
mov
lcall
sbb
push
and
inc
xlat
loopne
sub
pop
xchg
xor
push
movzwl
add
xor
lret
cld
add
cmp
imul
jno
fiaddl
ljmp
jmp
aas
aaa
stos
loope
stos
shll
sbb
ds
add
mov
cld
inc
xchg
xor
aam
in
jnp
add
inc
ret
pushf
sar
add
push
jb
clc
pusha
xchg
ret
jae
rcll
cmc
cmp
adc
cmp
push
aas
cltd
loopne
repnz
fs
jmp
and
xchg
mov
lods
pop
decb
jns
push
mov
arpl
sbb
mov
stos
ds
ja
inc
jp
add
movsl
jmp
std
pop
icebp
or
test
sbb
dec
cmp
clc
in
lock
test
sub
les
popl
aas
or
jne
sbb
int
mov
out
repnz
in
add
push
mov
inc
adc
xchg
cmc
mov
sti
add
out
lock
adc
out
jge
mov
call
adc
adc
lods
ret
add
xchg
int3
xor
rorb
rorb
jnp
add
lea
les
dec
mov
and
out
loopne
mov
ds
mov
mov
push
or
xchg
aas
shl
mov
cmp
ret
push
lock
fimull
or
nop
add
and
rcl
enter
add
fldt
push
inc
jnp
fsubs
cli
add
mov
cmp
pop
adc
ds
jae
sub
mov
mov
dec
inc
xchg
cmp
aad
push
jg
cwtl
xchg
lahf
sbb
int3
cmc
inc
data16
int
adc
dec
hlt
adc
jnp
jecxz
mov
push
lods
mov
pop
and
fisubrl
jo
andb
and
test
or
inc
mov
mov
into
popa
test
push
xchg
sahf
cmp
clc
cmp
test
and
or
jno
inc
enter
mov
adc
jge
mov
in
mov
nop
movsl
cmp
mov
leave
jbe
pop
jmp
fldenv
stos
outsl
test
sub
outsl
and
rcrb
inc
jb
jnp
jae
pop
les
fldenv
jp
jnp
in
push
test
push
cmp
data16
pop
mov
sbb
adc
fidivl
jb
add
fmuls
lahf
cmpsb
ret
js
and
lock
dec
add
adcl
adc
data16
sub
mov
cmc
nop
fsubl
aad
lret
xor
andl
sub
in
int
xchg
cmc
daa
fisubrs
cmp
inc
mov
lock
push
or
dec
mov
mov
test
sub
cmp
in
sub
ss
nop
mov
xor
add
inc
jmp
loope
push
jmp
mov
and
add
xchg
iret
push
inc
lods
adcl
mov
and
cld
add
add
nop
mov
mov
pop
sbb
iret
ss
pusha
dec
in
sub
sub
aaa
clc
pop
pop
sbb
mov
push
push
pop
ret
in
push
and
icebp
jl
adc
cmp
sub
test
xchg
fnstsw
add
hlt
int
imul
sub
xor
dec
jno
js
call
jb
add
cmp
and
lahf
xchg
adcb
pop
adc
adc
stos
add
cs
add
dec
inc
jmp
xchg
add
test
mov
add
pop
push
xchg
jmp
adc
jo
into
test
sub
in
int3
paddb
push
stos
inc
cmc
cld
add
xorl
inc
dec
hlt
sub
add
mov
rol
inc
dec
xchg
loop
ds
cld
imul
mov
subb
jnp
or
into
pop
jmp
jle
ljmp
test
jge
adc
mov
xchg
mov
pop
xchg
sti
jl
jne
mov
iret
mov
mov
aas
cld
inc
cld
or
test
or
daa
sub
lahf
pop
cmp
in
add
lret
xor
or
aad
adcb
jbe
xor
jnp
clc
iret
mov
push
ds
push
or
test
jge
cmpsl
push
stos
bound
in
sarb
push
cmp
loopne
xchg
xor
stos
or
dec
add
scas
push
test
movsb
nop
ds
add
mov
jg
add
inc
movsl
loop
orb
push
adc
mov
into
rorl
sbb
jle
les
rcl
adc
iret
mov
js
adc
data16
daa
es
aad
xchg
inc
in
clc
inc
add
out
push
lahf
mov
lret
pop
push
push
loopne
cs
pop
or
xchg
xchg
cmp
cmp
addr16
push
imul
mov
cwtl
shlb
es
xchg
pop
mov
fistps
mov
sbb
loopne
dec
and
iret
nop
addr16
stc
test
pop
push
jmp
add
sbb
pop
mov
clc
data16
adc
jecxz
lcall
leave
repz
ds
icebp
lret
sub
mov
idiv
clc
add
enter
ret
add
movsb
push
jp
shlb
cwtl
rcrb
gs
test
lret
xor
mov
inc
push
and
and
inc
jle
add
mov
pop
cli
jle
jmp
fstps
mov
repz
and
sub
and
cmp
fwait
pop
jnp
add
or
add
jl
inc
sub
xor
aaa
or
out
cmp
cmp
pop
mov
andb
test
sub
sub
sub
jmp
cwtl
les
fsubr
in
in
stc
ds
and
dec
cltd
loop
sbb
xchg
xchg
jmp
mov
adc
leave
jo
test
lea
cmp
mov
push
mov
sbb
lock
test
mov
in
add
popa
aaa
dec
adc
inc
cmpsl
sub
dec
int3
dec
xor
inc
or
pop
add
cmp
nop
inc
mov
loope
repz
cmc
es
xor
inc
sbbb
cmp
mov
mov
int
mov
nop
and
jae
push
jo
outsl
addr16
insl
mov
je
bound
pop
outsb
xor
fs
cmpsl
push
imul
pop
inc
push
inc
push
or
add
insb
inc
pop
adc
loopne
pop
orl
and
push
ss
inc
sub
push
add
sub
in
bound
and
roll
jo
push
inc
mov
nop
cmp
add
iret
lods
.byte
