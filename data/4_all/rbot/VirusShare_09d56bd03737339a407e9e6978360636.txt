push
call
ret
ret
sbb
loop
xchg
nop
loopne
adc
loopne
lcall
sub
adc
dec
dec
pop
ja
push
xor
sbb
cmpsb
daa
jmp
mov
ret
jp
addl
sub
jo
stos
mov
ret
jae
je
nop
outsl
xor
ffreep
xor
mov
aad
dec
lcall
movl
xchg
lret
movsb
inc
pusha
pusha
push
xor
xchg
fsqrt
add
or
icebp
jns
mov
xchg
neg
xor
mov
mov
sub
push
sub
testb
dec
dec
lret
jge
push
mull
jge
loopne
mov
out
sbb
or
out
sub
mov
cli
push
or
cli
lods
mov
or
jmp
inc
test
push
ljmp
leave
leave
jae
orl
push
jle
sti
mov
and
dec
loopne
adc
mov
mov
xchg
dec
xlat
jg
push
into
sub
mov
cld
icebp
dec
pusha
scas
dec
fstpl
xchg
push
movsl
or
cmpb
dec
sub
stc
adc
push
push
pop
dec
push
adc
cmp
je
jns
clc
pop
mov
xchg
out
dec
mov
cmp
das
stc
test
in
mov
out
xchg
roll
mov
xchg
dec
mov
test
aaa
or
mov
push
mov
insl
sbb
repnz
xlat
aam
nop
xor
lods
inc
test
daa
insl
loop
scas
dec
jmp
xor
or
sarb
mov
mov
cli
ficoms
jmp
imul
pop
and
mov
xchg
add
mov
out
sub
xchg
and
mov
lea
imul
or
and
xchg
ret
and
cmp
xchg
mov
cld
add
mov
sbb
push
bound
sbb
cs
sahf
pop
out
or
adc
push
lahf
mov
lret
cmpsb
outsl
cmp
sub
ret
test
or
dec
rorl
sti
stos
mov
testb
add
les
fs
pusha
mov
cmp
je
dec
push
mov
xor
repz
shl
and
pop
push
arpl
sbb
les
fs
fistps
dec
arpl
and
gs
stos
insb
out
shll
inc
jae
xor
cmp
jecxz
fistl
in
jmp
pop
sbbl
enter
lret
pop
cmp
mov
push
or
mov
push
test
movsb
idivb
icebp
mov
mov
rorb
pop
roll
inc
adc
push
inc
add
dec
int
adc
jo
popl
nop
xor
and
data16
scas
addr16
jno
xlat
mov
and
sbb
or
sti
enter
mov
test
add
and
and
sti
pop
lret
xchg
inc
add
loopne
popa
iret
aaa
push
out
rorl
fsubrs
xor
gs
mov
ja
std
push
adc
pop
mov
mov
rorl
inc
mov
mov
hlt
jae
dec
int3
mov
mov
add
mov
lret
shll
mov
jno
push
pop
out
in
mov
sub
fsts
test
inc
xlat
push
mov
pushf
jbe
lcall
jae
pop
pop
xchg
push
cld
dec
pop
xchg
daa
sbb
andb
jp
xor
inc
flds
dec
in
ficoml
xlat
mov
iret
mov
jl
cmp
push
mov
andb
mov
pop
loopne
push
mov
sub
adc
movsl
and
loope
rcrb
pop
rcrb
repz
xor
lahf
or
dec
pop
or
xchg
sbb
xchg
add
out
jge
mov
dec
add
out
mov
negl
rcrb
mov
inc
push
jle
mov
jl
lret
leave
dec
cmp
aad
ljmp
xchg
xor
jo
push
dec
push
pop
sbb
wrmsr
mov
or
sbb
inc
loopne
mov
adc
jne
adc
mov
mov
pop
hlt
outsb
push
cmp
out
mov
jno
push
mov
dec
pop
add
adc
movsb
push
cmp
sbbb
push
push
cmp
cltd
mov
xchg
out
jne
imul
das
xchg
fsubs
scas
sub
push
arpl
stc
scas
call
mov
jne
sbb
pop
cmp
jno
cmp
add
dec
and
cli
push
xlat
scas
ret
jb
int3
scas
or
dec
test
jmp
pxor
inc
dec
loopne
aas
inc
sbb
shll
call
out
imul
sub
test
xor
icebp
inc
inc
mov
cmpsb
mov
jg
pushf
out
cmp
sub
or
icebp
stc
xchg
pmulhuw
loop
xchg
lret
mov
pop
xor
pushf
sub
push
pxor
fimull
adc
inc
enter
movsl
sub
lret
sbbb
mov
icebp
mov
sbb
jge
xchg
or
out
aas
mov
cmpsb
add
cmp
lcall
lret
sarl
out
and
xacquire
pushf
cmp
fisubs
movl
add
pop
shll
dec
cld
mov
sahf
or
inc
insb
adc
mov
loopne
mov
inc
mov
cwtl
dec
and
daa
sub
aad
xor
nop
xchg
decb
adc
shl
push
fdivrs
arpl
jp
and
and
and
repnz
inc
pop
pop
pusha
sub
push
xor
push
xchg
out
sbb
cltd
pop
in
cmp
mov
pop
outsl
fdivs
stc
cmc
jno,pn
xor
stos
nop
ficoml
sub
mov
mov
idivb
dec
ja
and
sbb
adc
and
scas
outsb
push
loopne
push
cmc
lods
je
push
dec
ja
xor
imul
add
cmpsl
out
out
insb
fbld
pop
dec
push
adc
rcrl
push
push
mov
clc
pop
outsl
push
pop
xchg
loopne
xchg
pop
or
inc
jae
mov
mov
or
cli
and
and
pop
xchg
sarb
fadd
flds
mov
cli
pop
mov
sub
xchg
pop
loop
test
test
mov
mov
xor
lds
sbb
fs
mov
in
inc
push
xor
aam
xchg
pop
mov
out
pop
jne
xchg
stc
lds
test
pop
lds
sub
lods
push
andl
inc
mov
aas
addr16
popf
repnz
mov
mov
xlat
daa
mov
xor
xchg
dec
iret
hlt
aad
push
scas
cmp
lds
lock
rcl
or
xchg
adc
das
out
std
pusha
inc
or
scas
sub
push
push
cmpb
cmpsb
push
cltd
ret
mov
xchg
pop
sub
rclb
cmp
and
sub
xchg
add
xchg
std
jnp
cs
adc
mov
push
in
sbb
mov
pop
test
xor
sarl
xor
and
cmpsl
in
sahf
sbb
sub
jbe
js
dec
xor
jge
adc
int3
and
inc
in
xchg
sbb
cld
mov
mov
xchg
ret
dec
push
lahf
inc
shrl
mov
adc
jl
in
push
add
cwtl
ret
clc
nop
les
dec
push
push
mov
xlat
test
add
jbe
mov
pop
cmp
adc
addl
sbb
push
lods
push
rolb
dec
push
cmp
inc
sbb
add
test
xchg
add
add
push
push
repz
jmp
sub
ret
dec
stos
rcrb
xor
imul
pop
dec
fcmovb
sub
pop
popa
xor
push
outsb
call
fmul
test
leave
lret
inc
or
sbb
nop
aad
push
cmp
ficoml
cmpsl
xchg
hlt
out
dec
in
pop
xchg
mov
bnd
imul
jnp
jle
dec
jbe
fnstenv
mov
dec
mov
iret
xor
push
sbb
mov
scas
out
and
mov
jbe
sub
jb
hlt
xchg
test
enter
pusha
jl
mov
movsl
loopne
cmp
lret
out
lret
cli
stos
fisttpl
add
mov
out
aad
or
inc
pushf
mov
adc
push
jo
pop
sahf
xlat
push
mov
mov
fisubrl
lahf
cmpb
idiv
enter
jnp
and
std
cmpl
mov
and
xchg
mov
in
test
fwait
imul
or
xchg
xchg
repz
out
pop
push
sub
adc
mov
adc
mov
mov
aam
xor
rorb
cmpsl
test
pusha
mov
jae
push
jge
in
xlat
dec
ret
shrb
lret
cwtl
pusha
and
movsl
push
nop
out
clc
lods
cmp
or
imul
push
repnz
sahf
mov
out
xchg
adc
arpl
cmp
fsubs
jp
in
jbe
rol
jno
fcmovbe
jb
push
mov
jge
adc
je
sbb
cli
xor
fdivrs
push
hlt
mov
add
inc
adc
push
fistpl
push
out
pop
loope
lcall
push
sub
add
pop
mov
sbb
lahf
call
sub
in
inc
and
dec
push
add
adc
mov
hlt
mov
lds
addr16
into
add
stos
sbb
loop
inc
shl
clc
and
ret
sbb
add
clc
sbbb
in
xchg
cmp
or
dec
es
lods
clc
ret
pop
mov
out
jl
test
aas
daa
cmp
adc
or
add
pop
push
fyl2xp1
jmp
in
aas
popf
in
pop
jns
mov
add
xorb
sub
mov
push
push
outsb
out
ret
adc
xchg
fsubrl
and
mov
cwtl
cmp
jns
mov
inc
add
xchg
and
fimuls
inc
cmpsb
cld
push
sub
push
out
test
fcomps
push
adc
arpl
dec
pop
test
daa
das
call
push
dec
cmp
in
imulb
xor
push
or
mov
push
test
aad
mov
call
inc
xchg
pop
xchg
in
push
dec
adc
in
adc
test
push
mov
jmp
xlat
fwait
xchg
and
jne
data16
push
ret
mov
cmpsb
cmpsl
jp
mov
ds
stos
pop
xchg
mov
mov
mov
dec
xor
inc
cmp
movsl
xorb
mov
jmp
xchg
push
insb
jmp
mov
sbb
addr16
push
cltd
je
lock
shrl
cld
mov
push
loopne
imul
pusha
dec
movsl
jp
push
scas
out
cmp
mov
add
push
clc
pop
dec
cli
push
dec
out
inc
loopne
adc
mov
jno
lods
arpl
shrb
insl
inc
shlb
mov
std
les
test
mov
stos
and
push
fidivl
pusha
xchg
sbb
sub
out
sbb
xchg
mov
and
pop
inc
faddp
sub
aas
vhsubps
xlat
popa
lock
xchg
mov
or
jge
sbb
xor
scas
aas
rorb
int
add
jae
popl
sbb
cwtl
jb
jae
mov
test
fwait
cld
popa
xor
into
push
sbb
aas
data16
jg
in
jecxz
sub
repz
mov
loope
pop
mov
mov
xchg
sbb
push
xchg
jp
xor
dec
fs
push
in
in
pop
idiv
xchg
sub
int3
jae
xorl
xchg
mov
std
rdpmc
mov
inc
lods
sub
rorl
adc
fisubs
stos
add
cmpsl
hlt
mov
lret
mov
shrb
cltd
cwtl
shll
int3
aad
mov
outsl
inc
outsb
jne
push
les
and
mov
adc
sbb
mov
lock
rorl
pusha
mov
jle
and
xchg
mov
pop
sub
cltd
repz
fidivrl
test
push
movsb
data16
inc
cmpsl
mov
push
and
sub
pop
adc
inc
pusha
sub
stc
xchg
mov
popf
push
adc
cmp
xchg
incb
sbb
test
inc
push
stos
scas
pop
mov
xchg
mov
jp
aam
mov
mov
data16
and
jp
mov
repz
mov
gs
jnp
pusha
loop
leave
cs
jns
mov
js
stos
bound
jae
push
or
aas
sub
push
sbb
jle
aad
inc
push
adc
test
fsts
or
mov
icebp
pop
dec
push
mov
mov
mov
imulb
add
fisttps
les
xor
lods
fcoms
mov
cltd
jno
fisttps
repnz
push
aam
fbstp
outsb
out
add
xor
fcmovb
dec
xor
fstl
insl
mov
into
lea
call
nop
push
inc
or
mov
popf
add
scas
aad
rcrb
sbb
js
je
loop
cmp
mov
gs
icebp
push
sub
jp
pop
pop
mov
cmp
test
cmp
mov
jno
in
int3
stc
cmp
ljmp
jge
lret
mov
lea
jo
mov
lods
ret
rep
stos
sbb
out
in
dec
cmp
push
xchg
repz
hlt
lret
cmp
ds
inc
inc
or
stos
or
in
mov
jo
add
jno
and
push
loope
out
test
dec
mov
or
inc
sbb
dec
xlat
jbe
inc
mov
push
inc
movsl
fmuls
jb
pop
outsl
adc
pop
push
out
je
fsubrl
loop
or
jl
mov
jns
aaa
es
mov
sbb
pop
xlat
pop
mov
fs
lds
xor
sbb
call
jl
inc
cmp
jne
xchg
test
inc
cli
jp
sub
sub
xchg
and
sub
flds
push
mov
push
roll
push
pop
in
outsl
aad
add
mov
push
in
iret
in
test
cmp
add
es
inc
cli
mov
out
addr16
fdivl
xchg
mov
push
add
pop
mov
cmp
das
jecxz
outsl
les
roll
lcall
adc
push
mov
je
pusha
call
xchg
pop
dec
add
pop
add
fstpl
lds
mov
aad
add
jp
in
jg
lret
insl
push
insl
cwtl
inc
outsb
mov
sarb
dec
or
dec
testb
shl
sub
adc
sub
and
mov
iret
lret
lea
into
pop
push
rcrl
fs
testl
test
pop
jle
xchg
cltd
movsb
inc
mov
clc
xchg
mov
dec
jecxz
mov
push
mov
enter
push
arpl
pop
lods
fcompp
mull
imul
dec
sbb
mov
call
mov
dec
xchg
pushf
dec
jae
shrl
cmp
xchg
std
mov
dec
and
dec
sub
sbb
pushl
imul
mov
es
test
out
cmpsl
aad
xor
adc
pop
pop
fwait
xor
push
in
adc
push
icebp
add
test
lds
inc
ret
mov
fld
sti
push
aas
sbb
and
xchg
pop
movl
leave
sarl
push
fs
je
lods
je
cmp
ds
xlat
pop
adc
inc
or
jmp
mov
sbb
nop
ret
add
xor
iret
pusha
ja
insl
mov
cmp
dec
imul
popa
loop
jg
out
icebp
xor
addr16
insb
fwait
xlat
test
sbb
inc
stos
add
mov
sarl
push
insb
push
xchg
sbb
sar
cmp
shll
fmuls
jns
push
movsb
cmp
out
dec
ss
sub
cmc
xor
clc
fsts
daa
adc
adc
xor
cmp
dec
jle
xor
daa
aad
pop
test
xor
dec
cmp
xchg
loope
pop
les
je
lahf
jecxz
mov
subb
out
sbb
sbb
or
test
mov
cmc
outsb
fildl
rorb
hlt
mov
in
sub
stc
sbb
out
and
out
lcall
ja
mov
inc
mov
lea
aam
jb
mov
sub
std
mov
orb
pusha
jl
jmp
or
scas
shlb
arpl
ret
mov
lret
cmp
mov
lods
lret
add
in
inc
imul
adc
xorl
andl
loopne
scas
shrb
bound
pushf
xchg
lea
mov
cwtl
cmp
xchg
pusha
outsb
fwait
add
stos
inc
mov
inc
sti
xchg
cmp
ljmp
pop
je
stc
mul
sbb
in
test
cmpsl
in
jle
pop
inc
shll
or
sub
sahf
in
in
shl
jb
sti
mov
testb
scas
sub
mov
mov
sbbl
jp
mov
and
insb
orb
pop
rolb
adcb
mov
testb
dec
shll
inc
loop
ss
push
inc
roll
pop
and
and
push
push
push
jmp
mov
pop
and
fcoml
pop
out
rcll
scas
fisubs
cli
jb
aas
insb
repz
fcomi
mov
inc
clc
xchg
mov
jmp
iret
inc
loop
mov
outsb
mov
out
mov
inc
clc
dec
sahf
push
idivl
fsubl
push
add
push
cmpsl
out
dec
push
mov
aaa
push
pop
push
into
lret
lods
add
mov
nop
clc
cmp
cmc
add
pop
xchg
mov
jno
inc
aam
int
inc
icebp
xor
mov
movsb
mov
mov
add
mov
inc
dec
sti
mov
mov
out
in
xor
fs
clc
adc
iret
mov
or
pop
sub
out
in
jno
cmp
pop
push
fists
mov
jp
mov
xchg
in
or
mov
xchg
cmc
mov
data16
das
pusha
mov
std
mov
pop
cmc
gs
or
xchg
jge
fcmovnbe
jns
adc
hlt
bound
ficoml
loopne
ud0
inc
inc
and
call
mov
xor
adc
ret
xchg
jae
and
sub
jle
data16
sbb
and
mov
popa
jo
cmp
in
mov
mov
addr16
inc
imul
std
jle
lds
push
xchg
out
jae
add
popf
mov
dec
cwtl
jne
ret
aaa
pop
sahf
xor
add
xchg
push
rcrl
push
inc
jecxz
jg
mov
icebp
jnp
xorl
loope
push
xchg
sbb
fdivrl
mov
pop
mov
outsl
and
shll
pop
sbb
mov
aas
jbe
and
push
sbb
jo
cmp
pushf
sub
cmpsb
sarb
imul
imul
pop
popa
and
nop
pop
ljmp
push
mov
sbb
add
xchg
cwtl
fs
arpl
fisttps
xchg
lret
out
icebp
xchg
cmp
or
cmp
ss
je
mov
cmpsl
xor
cmc
pop
sbb
inc
sysexit
add
jbe
push
movsl
stos
aad
stc
leave
sbb
dec
xchg
xor
xor
jmp
es
adc
dec
xchg
sahf
call
inc
inc
pop
lret
decl
pushf
aam
xchg
incl
mov
ror
xchg
jbe
inc
sti
addb
sub
fwait
out
sti
imul
xor
inc
xor
sbb
out
dec
adc
das
gs
push
int
test
adc
dec
test
rorl
daa
fs
fdivr
sub
sub
jp
roll
xchg
das
push
dec
outsb
shlb
sti
add
sub
sub
shll
mov
lea
xchg
ds
push
sahf
outsl
xchg
aas
out
adc
or
inc
testb
bt
pop
or
mov
xchg
test
repnz
sub
sub
cld
xchg
pop
pop
jno
sarb
ljmp
in
icebp
andb
sub
cltd
mov
add
adc
mov
stos
sub
shll
in
adc
leave
out
xchg
clc
sub
pusha
mov
inc
xchg
jg
in
scas
shl
push
jecxz
jb
pusha
jmp
jg
xchg
rol
mov
jp
inc
es
rorb
out
mov
lock
jmp
pop
push
bound
dec
pusha
stos
jnp
fwait
test
pop
jnp
pushf
das
pusha
rcrb
xchg
lock
sbb
lret
pop
adc
and
adc
cvtps2pd
cmpsb
out
push
xor
daa
movsb
scas
daa
inc
adc
sbb
loopne
or
mov
mov
add
push
test
sbb
hlt
daa
out
mov
hlt
cmp
jno
adc
lcall
push
imul
push
cmp
mov
subl
push
mov
pop
xchg
mov
test
ret
cmc
push
mov
xor
je
xor
pop
aaa
shll
dec
addr16
jne
adc
js
xchg
push
testl
cmp
mulb
pop
cmpsl
ret
into
in
idivb
pop
pop
outsb
shlb
into
pop
popa
iret
sti
sub
bound
mov
mov
iret
and
jle
mov
rcr
push
pop
jg
add
mov
orl
push
jb
fidivl
pop
pop
lret
aaa
loop
sub
pushf
add
test
loop
je
in
pop
xchg
jmp
out
into
orb
insb
rclb
cmp
das
add
sbb
out
rol
pop
hlt
mov
push
mov
xorb
pop
ror
push
and
mov
adc
add
push
aaa
cmpsb
add
add
loope
into
shr
pop
das
add
movsb
pop
dec
xor
inc
sbb
jmp
sbb
orb
ret
out
shrb
or
jle
sbb
ds
push
dec
mov
cmc
es
and
and
rclb
in
xor
xor
outsb
mov
xchg
sti
out
or
mov
sbb
call
cmp
cwtl
pusha
icebp
inc
inc
adc
push
aad
adc
fsubr
pushf
sbb
sbb
dec
les
daa
popa
ja
and
add
js
mov
cmp
mov
fidivs
cs
dec
and
xchg
leave
stos
xor
xor
xorl
mov
add
mov
dec
daa
xchg
ljmp
ds
mov
das
xchg
imulb
mov
bnd
cmpsb
pushf
xchg
lods
inc
aad
dec
out
jge
or
fsubp
ds
inc
ljmp
or
aas
push
xchg
or
test
sbb
mov
test
xchg
push
out
outsl
decl
or
das
mov
fs
ss
cltd
sub
xor
xchg
rol
push
mov
cwtl
ret
int
stos
rcr
cmp
cld
sar
cmp
insb
rolb
pusha
aad
mov
lds
rcrl
daa
stos
rorb
mov
scas
shrl
jl
push
enter
mov
imul
sub
out
lea
cmpsl
xor
adc
pop
jecxz
imul
inc
mov
or
ljmp
mov
ja
enter
cmp
push
pop
adc
and
divb
mov
loope
fcmovnb
fmull
rcll
inc
pop
pop
xor
outsb
in
ret
mov
mov
lds
inc
push
jg
test
rep
or
insb
or
inc
jns
clc
add
pop
dec
jmp
jnp
xor
mov
cmpsl
repz
jmp
fwait
mov
mov
jns
xchg
xchg
add
dec
outsb
mov
or
push
mov
nop
jne
in
addl
mov
movsb
mov
shlb
out
int
mov
pop
xchg
xchg
bound
out
test
stos
in
cmp
sbb
fstps
push
pop
sarl
xchg
xchg
push
jl
es
pop
and
mov
mov
movsb
add
cli
push
repnz
decl
and
dec
int
enter
mov
pop
pop
insl
int
add
sbb
js
mov
mov
push
inc
inc
mul
fiaddl
push
mov
cmpsb
mov
mov
add
ja
leave
mov
inc
repnz
inc
mov
dec
adc
pop
pusha
jmp
mov
pushf
es
adc
mov
pop
mov
gs
mov
std
xor
xchg
push
imul
es
sti
in
shr
ret
xchg
test
add
pop
xchg
xchg
ret
addr16
cmp
aaa
lret
in
mov
enter
sbb
dec
call
fnstcw
es
popf
add
mov
xchg
adc
sub
stos
insb
push
push
pop
andl
mov
fimull
cmc
mov
ret
mov
push
icebp
js
lods
call
lret
outsb
dec
inc
pop
sub
lods
shlb
or
out
pop
push
add
out
fdivs
xchg
mov
lods
mov
push
pop
sub
mov
and
mov
std
push
lret
mov
scas
sarb
lea
aam
ss
insb
mov
cli
jo
mov
jae
push
dec
sti
or
ret
pusha
sti
ja
adc
push
popf
dec
push
cltd
scas
adc
adc
sub
cwtl
lahf
mov
add
mov
daa
jl
mov
ds
add
iret
into
adc
cs
add
iret
ficomps
test
inc
popf
cs
imul
scas
xchg
mov
sub
xchg
xchg
ljmp
and
divb
adc
js
in
sub
push
repz
jnp
pop
xlat
jmp
push
mov
mov
mov
and
les
in
sub
adc
inc
enter
sti
in
add
inc
inc
sub
pop
aam
es
mov
push
stc
cmp
pop
dec
fcoml
sarl
inc
mov
mov
stos
mov
das
jnp
inc
subl
dec
push
test
add
hlt
mov
fistps
enter
dec
inc
sbb
stc
and
loop
xchg
pop
adc
scas
out
das
inc
dec
mov
int3
test
mov
xchg
jge
mov
push
iret
shr
fprem
jbe
loopne
mov
adc
xor
aaa
lds
sbb
outsb
mov
adc
outsl
sbb
ljmp
sub
nop
out
scas
std
push
mov
dec
repnz
xlat
jae
lods
dec
inc
xor
ret
jno
pop
dec
ficomps
mov
negl
sbb
loop
inc
mov
arpl
xchg
in
aam
mov
or
inc
or
and
adc
xchg
xor
jg
dec
shr
add
sbb
fmuls
loopne
test
mov
inc
jne
mov
aas
les
xor
out
xlat
iret
mov
and
mov
and
mov
push
pop
insl
lds
ficoml
subb
call
jle
les
rclb
es
outsl
dec
jno
and
int
jg
in
divl
in
sbb
adc
js
or
cmp
pop
or
ret
sub
cmp
or
mov
mov
in
cmp
in
xchg
and
pop
dec
cltd
ret
xchg
aam
fldl
nop
mov
add
mov
xchg
mov
cmp
sbb
negl
and
xor
sbbb
dec
jo
mov
fmuls
stos
push
pop
push
je
mov
push
ret
mov
fdivl
dec
sarb
std
out
or
loope
fst
lods
repz
cltd
push
mov
cltd
stos
pusha
ds
or
das
jp
sbb
cmp
inc
mov
call
mov
aas
les
pop
or
xchg
xor
fnstsw
lret
adc
mov
cld
shlb
dec
xor
or
mov
lret
and
adc
enter
addb
nop
out
cmp
stc
xchg
xchg
pushf
mov
pop
nop
push
sbb
hlt
das
rorl
in
inc
scas
mov
inc
in
jmp
test
jmp
pop
jp
add
xchg
inc
dec
notb
imul
push
lret
lds
pushl
pop
inc
jae
pop
lea
mov
arpl
cli
lret
bound
xor
xor
add
jecxz
jno
ficomps
jbe
lahf
repz
cmpsl
subl
add
sarl
add
pop
outsb
inc
pushl
cmpl
push
in
cmp
sarl
rorl
sub
xchg
aam
sub
dec
or
and
js
addb
pop
cmp
ret
sub
in
push
sub
test
mov
xchg
xor
lret
jne
scas
lret
movsl
aas
les
out
outsb
in
xchg
and
xor
pop
sbb
test
pop
sbb
ss
dec
push
jl
and
fnstenv
fucom
mov
dec
mov
mov
ret
out
mov
gs
cmp
cmp
mov
std
frstor
xchg
dec
test
lret
dec
ror
cld
cld
cmpsl
loop
adc
and
xchg
xchg
push
adc
outsl
sbb
push
mov
out
outsl
out
xor
rcll
dec
pop
xor
sbb
pop
nop
std
add
push
and
roll
sbb
out
xchg
aad
in
shlb
out
daa
movsb
jns
nop
dec
sahf
mov
inc
push
bound
mov
subl
iret
jge
lods
imul
lds
loopne
movsl
push
adc
xor
push
pop
mov
mov
cltd
xchg
mov
bound
and
mul
dec
dec
mov
arpl
jae
insl
pop
mov
das
push
xor
mov
pushf
push
and
pop
outsb
push
call
adc
dec
adc
xchg
in
scas
adc
xor
mov
out
shl
in
cmp
addr16
adc
pushf
push
sbb
std
imul
or
push
enter
jbe
dec
add
add
jge
or
loope
jo
fdivs
testl
mov
ror
or
hlt
loope
shl
mov
sub
into
les
aas
cltd
dec
xadd
ret
add
jecxz
xchg
lcall
loop
xor
daa
in
xchg
or
cli
ss
in
jno
cmp
dec
arpl
jge
inc
cwtl
xor
pusha
mov
inc
inc
jecxz
mov
arpl
pop
and
loop
inc
jp
xor
fs
adc
sbb
inc
into
inc
pop
nop
xchg
sub
mov
push
xorl
stos
push
inc
jae
call
jne
pop
lods
xchg
repz
cli
fbstp
orl
ljmp
out
xor
mov
sbb
into
xor
xor
mov
add
pop
jnp
mov
sbb
jo
sbb
cmp
pop
movsl
cld
insl
jbe
int3
push
mov
movsb
mov
jg
mov
mov
lahf
shll
mov
gs
imul
dec
sub
in
xchg
in
jle
xchg
mov
dec
aam
jmp
lret
mov
movsl
pushf
jnp
push
loop
lret
dec
lock
cmp
adc
orl
outsb
mov
pop
sbbb
pop
fwait
add
mov
cs
sub
cmp
loope
pushf
jg
pop
adc
popa
lock
mov
fldcw
mov
sub
jecxz
dec
add
jns
sahf
stc
test
in
sti
cltd
repnz
xchg
popa
imul
cmp
jp
mov
into
int3
pop
sbb
push
mov
ja
pop
gs
and
mov
aaa
or
nop
dec
dec
xchg
cs
nop
aaa
mov
in
fadds
shlb
incb
aad
jne
jo
lods
incl
jo
jb
das
insl
xor
inc
fidivrs
dec
inc
loope
push
xor
xor
ss
movsl
loope
push
pop
inc
roll
or
mov
loopne
adc
mov
mov
mov
add
rclb
and
ljmp
daa
stos
adc
lahf
outsb
mov
sbb
add
std
sbb
jp
push
int3
call
call
or
sbb
dec
push
jno
and
jl
call
sahf
cmc
leave
aas
adc
bound
pop
mov
mov
std
andb
and
xchg
pusha
push
push
inc
outsb
cmc
sub
es
sbb
push
repnz
push
scas
adc
sub
repz
in
push
imul
cmp
ss
xchg
idiv
dec
lahf
lds
mov
fistpl
cmp
adc
lea
jmp
insl
add
and
lods
cmpsb
sbb
cmc
rcrl
mov
f2xm1
test
lahf
in
idivb
addr16
mov
and
leave
popa
sub
iret
adc
pop
mov
lcall
frstor
dec
sbb
push
sub
call
loope
sub
inc
mov
push
call
gs
inc
into
jecxz
or
pop
add
icebp
pop
loopne
cwtl
or
lcall
aas
mov
jmp
hlt
jl
fcomps
cmpsl
adc
xor
or
push
push
int3
mov
push
xchg
jb
movsl
das
sbb
das
mov
dec
adcb
cmp
xchg
aaa
xchg
xor
dec
adc
jecxz
das
mov
ficoms
fnsave
lds
jne
inc
sub
mov
retw
cmp
pop
fiaddl
movl
mov
or
adc
or
aaa
loopne
es
enter
negb
arpl
jae
fdivr
push
mov
popl
xor
fcomps
xor
pop
add
push
inc
cmpsl
xor
sub
mov
lods
inc
insl
scas
fiadds
and
int3
xor
es
decb
sub
push
ljmp
fmull
addr16
outsb
nop
jge
test
push
sub
jl
and
aas
jno
mov
or
sub
push
rcrl
imul
cmpsb
mov
add
sub
lcall
insb
dec
int3
jns
fcmovnbe
add
cmpsb
mov
in
test
mov
and
cmp
sub
pushf
sbb
mov
jle
test
jns
xchg
xchg
xchg
and
addr16
aad
or
dec
xchg
push
in
add
push
mov
stos
fwait
ds
ljmp
and
fcoms
add
cld
js
push
xchg
push
and
nop
sub
std
mov
push
in
and
jo
movsb
movsb
divb
sbb
int3
movl
in
repz
ja
xchg
lods
es
xchg
xlat
or
insl
repnz
mov
call
shr
inc
aam
adcl
xchg
mov
cmp
mov
jb
or
sbb
jle
dec
and
push
push
cmp
sbb
les
mov
pop
mov
sbb
loope
lea
lahf
gs
inc
les
xchg
lods
inc
inc
pop
xchg
add
es
rorl
cwtl
mov
outsl
dec
lret
scas
lahf
sbb
xor
pop
mov
adcb
cmpsl
popa
mov
jae
mov
cmp
push
daa
xabort
sbb
fistl
stc
pusha
loope
xor
repz
bound
idivl
test
xchg
enter
jmp
popa
outsl
pop
jp
mov
popf
xchg
add
xchg
push
or
dec
add
jns
in
add
dec
or
loop
jnp
mov
sbb
xchg
add
or
jle
std
add
lds
adc
xchg
fdivr
mov
mov
outsl
out
mov
sub
repz
pop
add
in
pop
pop
jns
sahf
mov
push
lea
in
aaa
xor
sahf
lea
movsb
and
hlt
xlat
cmp
mov
loop
jbe
sub
mov
push
ja
sbbb
mov
mov
pop
mov
popa
jl
sti
mov
aas
pushf
sub
push
lods
adc
hlt
sbb
stos
std
and
insb
adc
jnp
testb
pop
xchg
ret
scas
or
es
xchg
or
mov
mov
arpl
cmc
mov
mov
aaa
sarb
cmpsb
and
clc
add
or
lret
movsb
sbb
sti
sbb
xchg
inc
shll
mov
je
adc
cmp
xchg
sarl
pop
outsb
or
dec
jnp
jle
xlat
sub
imul
adc
stos
jecxz
int
lcall
jle
fmul
movsb
xchg
out
sbb
jns
jb
insl
sub
pop
jp
dec
insb
push
sbb
jns
pushf
loopne
dec
dec
pop
lds
out
pop
out
imul
enter
push
mov
jecxz
std
loop
push
mov
mov
cmp
pop
into
lahf
je
cmp
bound
scas
push
push
inc
or
xchg
sub
insb
xorl
mov
push
push
jnp
jae
dec
cltd
mov
sbb
scas
outsb
add
icebp
sub
dec
xor
in
mov
lea
lret
pop
mov
inc
and
mov
lock
xchg
xchg
pop
pop
inc
outsb
jg
lds
lds
cmp
data16
jg
hlt
stc
repnz
cmc
fimuls
jmp
pop
xchg
loop
lods
call
mov
mov
mov
pop
jge
aad
push
lret
xor
andb
and
arpl
stos
mov
mov
mov
je
fs
daa
in
push
fdivrl
hlt
sarl
sub
movsb
andb
inc
xor
jl
mov
and
cmpb
dec
int3
icebp
daa
and
int3
enter
mov
sub
in
leave
dec
dec
inc
and
fildll
or
xchg
imul
push
mov
push
cmp
cmp
bound
into
sbb
insb
jae
adc
mov
add
and
dec
bound
pop
pop
cwtl
dec
push
cwtl
mov
jle
cmp
push
pop
mov
sti
mov
xlat
ja
in
mov
jb
mov
mov
xchg
mov
xor
push
or
pop
test
stos
repz
and
or
hlt
scas
cmp
call
out
out
pop
movsb
lcall
xchg
adc
repz
ret
ljmp
adc
leave
sub
cltd
adc
call
daa
fistpll
sbb
scas
inc
adc
dec
repz
subb
pop
push
inc
cmp
mov
cltd
jmp
scas
dec
xchg
dec
jnp
cmp
add
mov
sahf
icebp
mov
cld
sbbb
pop
push
cmc
aam
movsl
dec
mov
test
cmpsb
into
push
jmp
arpl
pop
pushl
jg
fadds
dec
sub
dec
pop
addr16
dec
pop
popa
inc
pusha
arpl
dec
jnp
hlt
lea
aam
pop
int3
sub
cmp
in
jle
or
lret
mov
push
popa
dec
hlt
aas
lret
lgs
push
cmp
in
iret
mov
fdivs
mov
test
enter
xor
clc
mov
inc
pop
pop
sbb
ja
xchg
lret
loop
or
xchg
cmpsb
test
idivl
es
sahf
or
movl
gs
pushf
mov
dec
fisttpl
or
push
pop
add
mov
fldt
data16
mov
jl
jno
scas
push
sub
dec
push
leave
dec
enter
and
dec
jmp
repnz
cmp
lret
pop
fdivl
pop
clc
jecxz
nop
mov
mov
dec
cmp
and
pop
movl
cmp
mov
in
outsl
jno
xchg
mov
dec
ljmp
cmp
div
push
aad
dec
jbe
push
xchg
dec
stos
or
lds
test
es
xor
pop
lcall
jno
loop
dec
pop
ret
arpl
inc
push
mov
add
insl
xorl
and
pop
neg
insb
pop
add
xchg
and
bound
test
add
xchg
push
icebp
scas
inc
push
leave
js
xchg
clc
out
test
out
popa
cwtl
inc
lea
mov
or
jmp
jns
or
xchg
xchg
lock
daa
in
push
je
mov
jae
fwait
sbb
mov
jno
xchg
addr16
shrl
mov
fadd
clc
ja
lahf
data16
data16
int
dec
sahf
jnp
stos
push
std
adc
mov
pusha
mov
jecxz
xchg
int3
je
std
xchg
out
mov
jo
add
xlat
sysenter
add
idivl
ds
es
loop
andb
xor
jbe
add
daa
clc
outsb
sbb
jg
cmp
xchg
clc
inc
push
cmp
mov
xor
jp
pushf
xchg
jns
sub
mov
sub
adc
sbb
or
inc
inc
dec
push
mov
out
jmp
and
dec
add
sub
push
cmc
push
push
inc
in
or
and
fnstsw
les
in
mov
jns
jg
pop
xchg
sub
into
sub
mov
in
sbb
or
pop
fwait
jl
and
fucomp
pop
out
sbb
push
stos
sub
inc
cltd
stos
or
jmp
mov
mov
addb
cmp
inc
mov
lret
mov
mov
xchg
inc
xchg
sti
push
cwtl
arpl
gs
add
mov
lahf
rcrl
pop
cli
sbb
imul
xchg
cmp
shlb
scas
mov
xor
test
add
cwtl
into
fmuls
aaa
xchg
inc
push
push
addr16
std
push
filds
inc
cmp
enter
push
adcl
stc
pop
xchg
lea
int
or
into
roll
cld
dec
icebp
add
bound
push
adc
stos
rorb
cltd
push
xor
iret
xchg
lds
test
leave
pop
test
sbb
pop
into
mov
cmp
mov
mulb
jg
fcomip
cmp
jg
mov
imul
call
inc
xchg
pop
in
ds
cmpsb
cld
push
out
add
call
and
cmp
int
je
lret
cmp
mov
or
fdivs
mov
test
push
dec
push
push
jne
adc
jg
push
sbb
inc
pop
mov
cltd
sbb
cmpsl
or
push
iret
lods
or
pop
fisubrl
fsubr
scas
test
sub
adc
hlt
add
push
or
add
mov
jmp
lcall
nop
push
push
or
sbb
jge,pn
outsl
outsl
xor
cmp
mov
bound
xor
fdivr
cmp
pop
test
test
movsl
and
out
scas
sbb
aam
out
ljmp
cli
sbb
aas
xchg
adcl
cmp
adc
stos
inc
cmp
shll
and
cmp
mov
jge
je
clc
xchg
mov
xor
inc
mov
loop
adc
sbb
subb
push
leave
dec
aam
pop
pop
cmc
xor
loopne
dec
insb
push
fwait
push
orb
loope
les
dec
cli
inc
ljmp
stc
lods
xlat
bound
bound
movb
ja
in
pusha
mov
pop
push
fs
xor
clc
sbb
xchg
sbb
cmp
or
and
cltd
jmp
cmpsb
xchg
adc
lea
and
imul
das
mov
test
xor
popl
jmp
lea
xchg
mov
test
sbb
imul
xor
push
push
xorb
clc
aaa
outsl
aam
ret
shll
inc
cmp
inc
in
cmp
clc
fsubl
aam
int3
adc
sbb
push
lret
cmc
xor
xor
pop
icebp
fdivs
addl
ja
adc
cmp
jo
pop
lds
add
call
outsl
out
pop
shll
sub
scas
fst
add
inc
imul
push
add
push
sub
int3
push
dec
test
jne
jge
rorb
push
loop
fsubrs
xorb
xor
mov
mov
out
fmuls
mov
lcall
sahf
push
jns
fcmovb
xor
loop
outsb
aad
insl
pop
inc
mov
sub
sub
lods
mov
inc
push
and
push
add
pop
std
push
popa
adc
js
push
cmp
cmp
xchg
xor
sub
testl
adc
mov
je
push
cmove
or
pushf
sbb
xor
cs
add
loop
adc
sbb
cld
sbb
adc
sbb
fwait
and
lea
insl
dec
js
loopne
movsb
jbe
pop
mov
fsub
xor
add
push
js
std
enter
sub
mov
dec
pop
pop
xchg
mov
out
in
test
dec
cltd
dec
pusha
and
inc
cmpsl
mov
insl
stos
inc
inc
jb
mov
sub
cmpl
mov
cmp
mov
jo
fcomi
xor
push
mov
inc
push
loopne
insb
dec
adc
sbb
push
jae
repnz
mov
dec
mov
cmpsb
stos
add
mov
repnz
and
jns
sub
inc
push
and
xor
outsb
gs
add
jmp
js
cli
ljmp
jbe
sub
add
daa
push
push
xchg
stc
pop
popf
push
fwait
shr
cmp
xchg
dec
sub
push
add
xchg
sub
sub
jbe
mov
sbb
push
mov
imul
xchg
scas
mov
dec
dec
push
std
mov
and
push
xlat
jmp
or
mov
stos
adc
mov
loopne
mov
xlat
xchg
xchg
push
test
pop
push
mov
sub
pushf
push
insl
xchg
mov
sahf
or
bound
inc
xchg
lds
icebp
pop
or
out
mov
das
or
outsl
stos
cmp
dec
fldcw
out
and
push
mov
pop
pop
rclb
cwtl
sbb
adc
pop
or
xlat
cmp
mov
jmp
add
fwait
inc
js
mov
rcll
mov
mov
popa
outsb
mov
rsqrtps
jmp
loop
mov
cmp
or
add
cmpsl
movsl
sbb
xor
adc
sbb
outsb
adc
ja
pusha
pushl
pop
arpl
fs
pop
mov
shrl
push
ja
dec
outsl
loopne
ficompl
mov
jae
xor
mov
xor
inc
sbb
cmpsb
inc
aad
insl
jbe
sti
test
jns
jmp
lret
stc
jp
pusha
cs
out
jne
clc
rclb
enter
mov
adc
push
pop
xchg
scas
mov
mov
push
add
add
sbb
cmpsl
daa
mov
mov
ljmp
push
rcrb
sbbb
enter
hlt
or
push
stos
sbb
mov
jno
jp
lods
adc
outsb
aas
cwtl
pop
sbb
enter
or
orb
bnd
pop
outsb
jle
or
pop
jb
mov
sbb
hlt
jne
testb
addb
mov
sti
sbb
pop
in
xchg
xlat
jle
add
inc
pop
mov
xchg
into
push
pusha
inc
push
cmpsl
ret
cmp
pop
es
out
add
cmc
xorb
jle
lds
leave
lret
push
sbb
sbb
push
repz
sbb
push
fsts
test
in
les
int
in
inc
xchg
test
mov
and
in
test
add
mov
leave
out
loop
arpl
and
shl
sub
mov
push
fsubl
dec
int
mov
jnp
mov
inc
push
dec
and
xchg
cmp
das
dec
outsl
cmp
iret
ja
adc
int3
sarl
aas
jo
popf
adc
imul
insl
aaa
mov
fdivl
fnstcw
stos
adc
rolb
cmp
add
fistps
mov
cmp
rolb
add
jle
sbb
in
dec
std
adcb
loopne
add
shl
mov
dec
adc
adc
in
jnp
fdivrl
push
and
dec
push
cmp
push
mov
movsb
rcll
mov
stos
negl
addr16
push
mov
mov
cs
xor
clc
fimuls
pop
jo
push
sbb
mov
mov
push
aas
add
sbb
mov
mov
rclb
sub
lods
inc
or
aad
and
icebp
pop
push
xor
dec
sub
ret
in
push
insb
jnp
pop
out
push
xchg
nop
mov
fsub
mov
or
pop
call
push
les
cmc
fsubrs
jae,pn
in
mov
shrl
shll
outsl
aaa
in
pop
sub
push
and
mov
and
mov
loope
fimull
push
mov
pop
fstp
pop
sahf
outsb
pop
popa
add
test
movsb
inc
jne
call
jae
sbb
and
bound
adc
dec
xchg
pushf
push
not
rorl
out
cmpl
xorl
sti
and
jbe
jle
or
or
iret
sub
mov
xchg
mov
mov
push
push
ror
lods
fimuls
out
rorl
mov
pop
sub
cmp
lret
scas
mov
inc
leave
insl
push
lret
xor
jne
scas
frstor
insb
loopne
inc
jns
addps
xor
xor
pop
into
mov
into
outsb
notb
jb
aas
neg
mov
sub
fisttpll
and
out
and
and
leave
into
and
in
mov
cmp
mov
pop
add
ret
push
fs
stos
cld
inc
xchg
sub
sub
xchg
fisubrs
and
mov
adc
rcrb
aam
fistl
lea
out
add
out
mov
enter
pop
mov
icebp
mov
maskmovq
idivl
pop
pop
sbb
dec
cmp
je
push
std
cmp
xchg
xor
das
cltd
pop
dec
inc
push
xor
mov
call
mov
aaa
out
push
inc
aaa
insb
sbb
jp
dec
lret
cli
xor
add
dec
or
arpl
xor
lock
roll
mov
pop
adc
mov
or
psrlq
xor
fildll
pop
xchg
jae
test
hlt
dec
pop
ret
mov
cmp
aas
cmp
std
mov
pop
add
sub
add
andnps
out
ds
push
dec
adc
pop
cmp
sahf
js
sub
fcompl
mov
int3
shr
dec
fisttps
aad
andb
ss
fisubl
or
stc
or
mov
and
decl
mov
sbb
dec
subl
mov
sbb
mov
sbb
hlt
add
adc
loope
mov
aam
inc
fcmove
adc
xor
dec
scas
pop
out
inc
imul
das
sbb
dec
sbb
push
jg
mov
mov
cmc
test
nopl
stos
loopne
mov
neg
mov
sbb
gs
adc
shlb
testb
daa
pop
int3
and
dec
push
test
and
in
jae
add
cmc
sahf
mov
sbb
ret
subb
mov
test
xchg
mov
sbb
fucomip
and
movsl
movsb
aad
add
push
push
fwait
xlat
mov
sbb
dec
cli
and
fwait
and
jb
insb
jg
jecxz
pop
dec
dec
dec
int
jge
mov
sub
lret
in
movsb
add
cmpsl
iret
lds
shlb
cli
lods
adc
jnp
add
push
test
mov
stc
sub
lods
push
das
push
aaa
rorb
pop
inc
shll
push
cmp
stc
cs
out
aas
jo
jecxz
sub
icebp
out
out
mov
add
lea
fcmovne
dec
pop
rcll
mov
shlb
inc
inc
lahf
daa
cltd
test
aam
nop
xchg
call
icebp
fcompl
repnz
lea
or
daa
out
and
leave
xchg
jns
ds
or
sub
in
fadd
mov
push
mov
push
sbb
mov
fistpll
xor
pop
jb
shlb
xor
ret
sub
inc
inc
vunpcklpd
pop
jae
cmpb
sub
ljmp
cmp
test
lea
mov
out
scas
mov
sbbb
into
push
push
out
xchg
notl
pop
adc
rorl
mov
jle
xor
mov
xchg
int
and
jmp
fstpt
je
jle
and
call
sbb
cmp
mov
jo
icebp
jge
loop
pop
jmp
cli
stos
pop
es
lods
inc
mov
bswap
push
cmp
out
xchg
xor
cld
cmpsb
clc
add
cmp
mov
sub
sub
data16
lcall
outsb
sub
add
ds
xor
ss
ja
inc
push
push
movb
cmp
mov
jne
stc
dec
mov
in
adc
pushf
outsl
inc
sub
std
fistps
xor
jecxz
js
repz
ucomiss
je
les
sub
flds
push
popf
and
outsl
mov
mov
dec
shlb
ja
push
or
add
das
sub
push
mov
adcl
mov
lcall
pop
mov
stos
dec
jl
inc
mov
sub
stos
les
shrl
sbb
stos
les
ds
and
ds
xchg
sbb
push
add
cmp
popf
pop
dec
pop
out
cmp
scas
jmp
mov
mov
mov
fwait
dec
jbe
mov
dec
push
imul
loopne
lret
xor
cmp
adc
std
mov
pop
mov
sub
fs
lret
jno
loopne
dec
pusha
rcr
roll
mov
push
sahf
das
mov
aam
insl
shrb
dec
pop
or
mov
pop
fsubrs
jl
sub
or
jbe
nop
shr
add
add
cmp
ret
lds
or
lret
lock
or
xchg
mov
inc
shll
lahf
loopne
test
jns
inc
add
lret
subb
sbb
xchg
popf
mov
test
mov
push
fstl
pop
fs
int3
rclb
aas
pop
mov
pushf
inc
call
cmc
xchg
jnp
in
sbb
scas
stc
fisttpl
fdivrs
insl
sti
lahf
sub
and
fcoml
sbb
add
test
mov
ret
in
into
mov
cmp
ret
adc
insl
pop
lahf
cltd
es
les
adc
mov
leave
shrl
int
mov
pushw
adc
mov
fs
jge
gs
orl
push
xchg
sahf
xlat
jne
inc
or
repnz
out
and
repz
mov
ss
fcompl
xchg
xor
stos
and
and
mov
popf
mov
imul
stos
mov
inc
xor
test
cmp
sar
xor
cltd
cmc
or
lea
xor
xchg
sub
lods
inc
xor
shlb
jo
jge
push
jmp
fcomp
movsl
outsb
loop
sbb
loopne
jns
xchg
out
mov
mov
mov
add
sbb
repnz
loope
sbb
dec
adc
scas
daa
mul
fimull
and
orl
mov
inc
rclb
push
pushf
rcl
hlt
test
jnp
rol
jmp
shlb
movsl
xchg
mov
cwtl
enter
into
lcall
pop
gs
pop
rcr
aas
jbe
dec
test
ljmp
xchg
inc
loop
or
out
sbb
pop
jg
add
fsts
sar
loopne
cwtl
or
jg
inc
cmpsb
test
inc
mov
xor
jp
mov
sub
hlt
stc
aam
fmuls
mov
popa
enter
loopne
pop
andb
adc
lods
mov
clc
sub
sbb
xchg
pushf
cmc
jmp
or
pop
sub
dec
cmp
jne
push
out
insb
rcrb
or
stos
mov
inc
out
inc
mov
adc
iret
pop
in
mov
mov
loope
movsl
sub
add
popf
pop
ds
pop
dec
lock
jb,pn
and
rorl
idiv
add
mov
pop
mov
or
lock
in
aad
push
xchg
iret
rclb
mov
arpl
out
rorb
cwtl
loopne
cmpsl
mov
div
imul
cmpsb
cld
cmp
ret
or
mov
jbe,pt
add
lds
pop
xor
bound
sbb
or
ret
cwtl
lahf
xchg
push
xchg
mov
popf
dec
push
std
jl
cwtl
outsb
mov
dec
xchg
aam
mov
jns
push
pop
mov
call
push
ret
adc
jmp
imulb
mov
ret
xlat
lea
out
fldcw
leave
mov
push
movsb
xchg
daa
jae
xor
adc
in
adc
lock
gs
or
mov
xchg
mov
sbb
push
mov
aas
outsl
mov
push
mov
ret
mov
ror
jmp
popf
pop
pop
test
push
sti
sarb
adc
arpl
mov
hlt
adcb
xchg
clc
jmp
adc
mov
push
stos
shrb
jmp
scas
and
imul
push
push
inc
pop
stc
sub
mov
pop
mov
cmp
imul
and
jno
lret
cs
jecxz
aad
pop
push
adc
nop
pop
repz
cmp
inc
push
mov
mov
sub
or
shrl
or
insl
pop
pop
imul
icebp
test
push
data16
test
add
jae
js
dec
stc
ja
mov
sub
hlt
in
sbbb
fs
daa
out
dec
rcrb
dec
dec
rclb
xor
pop
xchg
xor
loope
sbb
jmp
dec
outsb
leave
add
push
adc
mov
in
dec
mov
push
popa
ret
xor
subl
or
cmpsl
scas
out
jbe
repnz
fwait
mov
popf
arpl
inc
cmpsb
jns
adc
mov
push
inc
bound
pop
int3
outsl
outsb
or
into
mov
or
and
enter
push
lret
aad
xchg
pop
mov
stos
pop
fcompl
add
nop
lcall
xchg
clc
sbbb
loope
sbb
xchg
mov
lods
movsb
clc
push
inc
shlb
call
mov
mov
add
sub
cs
ret
in
xchg
sbb
scas
xorl
test
sbb
jmp
sar
lock
fs
dec
popfw
jo
cwtl
mov
adc
mov
sahf
popa
and
jno
and
mov
pop
inc
in
incl
loopne
sub
or
in
outsb
jge
dec
mov
ret
out
scas
adc
push
xchg
bound
stos
and
movl
push
mov
test
add
xor
mov
data16
dec
fldenv
je
mov
jbe
jnp
pop
xor
shrb
xor
dec
jne
insb
icebp
sbb
aas
scas
insl
aas
loopne
jbe
jmp
sbb
imul
pusha
jmp
imul
add
dec
jbe
cld
inc
add
xor
imul
test
jns
sbb
scas
adcb
mov
stos
cmp
insl
std
push
test
xor
add
dec
out
pop
pop
ret
daa
insb
xchg
out
jo
test
mov
pushf
inc
fs
mov
inc
push
xor
inc
out
and
adc
repz
pop
push
jo
jle
sub
inc
jmp
mov
mov
fs
pushf
clc
sbb
filds
push
mov
cmp
cld
lods
or
invd
jmp
shll
xchg
outsl
add
dec
push
js
mov
and
xor
fldl
movl
pop
addr16
movsb
sub
ret
xchg
inc
int
cmp
inc
subl
pop
test
movsl
adc
mov
mov
adc
in
push
sub
je
sti
mov
ficoms
sub
cmpb
andb
int3
pushf
addr16
vprotd
sub
dec
test
aas
imul
adc
xor
add
sarl
xor
rcll
cld
jbe
jp
in
vunpcklps
scas
leave
cltd
repnz
and
pushf
int
add
hlt
adcl
xchg
clc
push
dec
pop
in
repnz
cmpsl
push
cmpl
mov
mov
fsubr
or
sub
aaa
add
sub
inc
aam
cmp
cltd
add
cwtl
pop
add
add
mov
jle
push
push
mov
and
cld
add
mov
cmp
ss
stc
mov
cmp
je
es
push
cld
mov
test
push
loopne
jae
push
push
sbb
lret
insb
frstor
dec
js
or
jle
test
push
out
sub
lret
and
aad
les
negb
dec
inc
xor
mov
xor
push
pop
in
jo
pop
sbb
fisttpl
ret
lahf
inc
xor
ljmp
sbb
sar
or
jmp
sub
ror
dec
add
add
jge
iret
stos
xchg
test
mov
or
clc
hlt
movsb
mov
jbe
push
jbe
sbb
mov
divl
pop
xchg
sub
bound
test
addb
sbb
mov
rorb
dec
inc
inc
add
cmp
int
push
xor
loop
in
jne
add
add
into
push
sub
push
out
test
push
aam
lahf
pop
lock
dec
push
or
xchg
js
in
jle
les
sub
mov
fdivr
out
sbb
popa
sbb
mov
mov
push
lahf
scas
ja
daa
in
mov
pop
jne
cmp
adc
fs
xor
jmp
outsl
std
movl
adcb
push
fisubl
aaa
mov
jbe
fmuls
xchg
jne
and
cmpsb
xor
sbb
cmpsl
cs
test
scas
sbb
iret
popf
movsl
mov
or
shll
sub
add
iret
pop
ja
xlat
out
ror
mov
mov
iret
dec
clc
pop
das
jne
iret
lret
xor
mov
imul
cmp
stc
xchg
jmp
mov
or
cmovns
inc
dec
test
scas
dec
sbb
jle
xor
decl
out
popa
in
pop
fnstcw
loop
xorb
push
push
sbb
xor
cmp
inc
jbe
jno
adc
mov
inc
sub
imul
lock
and
push
jae
fcomps
adc
lock
lahf
inc
fidivl
xor
sarb
mov
pop
mov
sbb
fadds
rcrb
jo
fwait
mov
push
ss
in
dec
imulb
into
xor
jb
and
xchg
xor
mul
shll
push
loopne
push
ret
das
test
loop
add
in
cmpl
pop
xor
or
mov
shl
push
xchg
pop
fistps
loope
add
test
cwtl
pop
mov
mov
jp
push
stos
and
add
int
fwait
mov
jp
push
mov
jg
dec
leave
xchg
and
inc
rep
out
lods
in
mov
sbb
xor
mov
push
cwtl
mov
xchg
movsb
jecxz
push
lods
mov
lds
in
daa
subb
iret
sub
mov
cli
sbb
pop
adc
outsb
inc
or
add
jg
jo
fstps
cltd
mov
pop
add
inc
xor
rcll
push
enter
in
nop
cmp
jns
jg
bound
bound
divl
mov
mov
stc
pop
xor
xchg
icebp
clc
pop
test
pop
pop
in
mov
cwtl
cmpsb
test
fstpl
rcrl
adcb
add
mov
das
and
call
fwait
jae
iret
push
ret
cmc
pop
push
jg
jb
lahf
es
xchg
sbb
movsb
or
mov
xchg
ret
cmp
or
adc
pop
fwait
in
lret
xor
sarb
mov
in
jbe
xorb
dec
and
mov
cmp
mov
jo
xor
or
or
orb
push
movsb
in
sahf
test
aas
mov
jo
xor
mov
ret
push
stc
icebp
js
cmp
pop
pop
ficoms
cltd
outsl
ret
pop
inc
dec
gs
clc
adc
inc
inc
insl
cmpsl
mov
mov
xlat
inc
leave
es
sub
sbb
rorb
mov
popf
sbb
cmc
cmpsl
or
sub
pop
mov
jns
jecxz
mov
cmp
and
es
add
ja
loope
sub
jg
mov
mov
leave
lods
mov
dec
xchg
mov
adc
mov
or
xchg
mov
pop
dec
xor
cmpsl
dec
insb
ror
nop
xor
scas
out
addr16
stos
repz
push
neg
sbb
bound
jl
lahf
mov
jp
inc
sub
push
jge
idiv
push
rcrl
jne
aad
cmp
inc
loopne
or
test
scas
push
mov
aas
loopne
out
addb
popa
fwait
sub
add
adc
into
xor
cmp
xorb
cmp
sarb
sub
jmp
mov
push
jecxz
gs
and
iret
movhps
in
push
cmpsl
fwait
aad
lea
jg
inc
jns
or
or
ja
pusha
roll
cld
cmp
fstl
fisttpll
xchg
xor
xor
jbe
aaa
std
sbb
jbe
pop
pop
ds
lods
leave
pop
notl
adc
arpl
lods
shrb
sbb
faddl
push
sbb
cmpsb
jge
shll
sub
cmp
in
lret
and
mov
clc
sub
dec
scas
mov
ja
xor
adc
scas
pop
fcomps
rorl
fsub
cli
mov
push
xlat
dec
mov
outsb
jg
subb
notb
jg
push
sub
adc
cmpsl
int
mov
inc
or
lods
sub
and
std
loope
pusha
lret
or
push
sbb
outsb
pop
in
jp
xchg
std
mov
subb
addr16
lret
scas
xchg
xorl
nop
cmpsl
lea
and
fistps
mov
aam
push
out
mov
mov
xchg
cmp
push
add
repnz
adc
pop
pop
sub
lahf
shrb
xchg
sahf
or
out
rorl
pop
pop
push
jmp
mov
and
ret
xor
fcomps
push
roll
cmc
cld
fsubs
mov
call
pop
lret
dec
fsts
aas
sub
scas
jl
stos
cmpl
add
mov
pop
and
xor
nop
jmp
les
ror
mov
xchg
mov
test
orl
jae,pn
jae
mov
mov
les
xor
adc
fdivl
sbbb
sub
push
mov
loopne
and
push
loopne
imul
or
dec
xlat
mov
cmp
inc
daa
push
outsl
jno
addl
ja
push
mov
in
aas
mov
pop
mov
subb
sub
insl
mov
jge
inc
inc
dec
push
hlt
push
adc
pop
xchg
sbb
xchg
loope
lret
mov
rol
jae
xlat
cmp
push
mov
call
pop
mov
push
sub
mov
xlat
dec
imul
jb
aam
imul
sbb
repz
movsb
or
nop
jg
out
mov
ja
xlat
mov
rcll
dec
jae
outsl
cli
addr16
outsb
pusha
es
pop
nop
test
fstpt
decb
sahf
outsl
pop
out
xor
inc
icebp
inc
lds
cmp
ljmp
push
pop
out
adc
mov
inc
scas
xor
or
data16
sub
arpl
adc
mov
mov
mov
testb
add
loopne
cmpsl
shrb
push
test
aaa
frstpm(287
add
out
dec
sub
int3
mov
bound
xor
cltd
adc
mov
insl
inc
xchg
or
xchg
mov
jp
mov
mov
in
push
sbb
mov
ja
int
inc
ret
push
mov
xor
cmp
sbb
daa
mov
outsl
js
mov
gs
ds
or
imul
into
xchg
add
and
adc
xchg
jno
inc
lret
sbb
iret
or
out
sbb
jnp
sub
fwait
add
loopne
call
cld
jge
sub
cmc
pop
adc
inc
mov
rcrl
add
out
inc
ja
dec
dec
fwait
mov
out
mov
lret
iret
cmp
test
jno
loopne
jmp
xchg
push
jnp
pop
nop
je
cmc
pusha
sahf
adc
orl
fisubrl
pop
xchg
push
dec
and
test
data16
hlt
arpl
hlt
pop
mov
sbb
sub
jecxz
test
push
add
pop
testl
inc
fldcw
int
xor
cmp
pop
int3
sub
mov
pusha
loope
lock
xchg
stc
mov
jmp
enter
cmp
std
jo
movsl
inc
and
xlat
rclb
xchg
pop
mov
leave
int
push
leave
add
xchg
mov
test
sbb
mov
pushf
xchg
clc
mov
adc
aas
les
jns
lahf
push
inc
xchg
lods
rolb
mov
mov
movsb
mov
mov
stos
lds
dec
sub
push
insb
push
stos
mov
cs
sti
outsl
shrb
cld
mov
xlat
dec
xor
adc
int3
out
insl
pop
in
in
lret
adcb
rcrl
aam
push
test
mov
fdivl
push
sbb
push
sti
bound
adc
pop
mov
test
cld
push
repnz
mov
outsl
adc
gs
add
aad
pop
js
pop
xor
inc
inc
fstl
adc
xchg
call
xchg
repnz
test
mov
test
adc
psllw
mov
sub
adc
or
int
iret
jbe
mov
inc
or
lret
aaa
lret
enter
fdivs
mov
addl
fs
sub
sub
daa
cmp
rcrw
lret
cmp
orb
shll
int
mov
sub
outsl
stos
fimull
daa
std
out
inc
fsubrl
or
dec
fsubp
pusha
sbb
mov
idivb
sub
jnp
xchg
cltd
xchg
mov
or
pop
mov
or
shlb
test
cmp
adc
mov
out
mov
loope
not
push
das
test
jns
pop
lret
cmpsb
movsl
mov
sub
jecxz
add
push
lds
cmp
push
nop
xor
xchg
shll
add
jae
mov
ljmp
roll
cmp
mov
cmp
stos
push
mov
jle
fcomps
pop
inc
push
dec
idivb
sub
xor
pop
pop
insb
in
jnp
lret
inc
sub
or
push
inc
mull
bound
xor
mov
inc
xchg
dec
lock
mov
pop
sti
cmc
imull
add
pop
sub
push
imul
fildl
aaa
getsec
scas
test
jno
cmp
and
pop
xchg
xor
sbb
mov
rcrl
jno
imul
scas
jns
dec
xor
sbb
push
call
mov
shlb
daa
push
lret
mov
mov
mov
xor
and
mov
outsb
mov
in
xchg
mov
repz
movsl
mov
call
cwtl
insb
jbe
hlt
movsb
addr16
rcrb
and
repnz
iret
loope
xchg
pusha
icebp
repz
xor
lock
loopne
add
cli
xor
adc
imul
xchg
xchg
lret
and
insl
sbb
push
les
dec
pop
in
dec
mov
std
repz
std
fimuls
push
dec
or
pushf
xor
push
inc
and
xchg
jbe
cmp
cli
sub
xor
ss
jo
shlb
pop
fidivl
vsqrtss
sub
test
flds
add
push
sahf
fcompl
movsb
dec
and
arpl
lahf
mov
testb
inc
movsb
fdivrl
cmp
mov
jae
imul
mov
cwtl
into
and
dec
add
cmp
push
pusha
and
push
sub
fcomp
cmpsb
xchg
repnz
cwtl
xchg
fimuls
mov
iret
mov
roll
arpl
dec
mov
mov
mov
pushf
sbb
xchg
mov
adc
mov
loope
aam
imul
inc
jmp
dec
cmp
mov
mov
mov
mov
xchg
insb
jmp
and
pop
cli
test
fnstcw
pushf
in
adc
adc
jb
jmp
cmp
jmp
jge
sbb
dec
ret
stos
sbb
mov
mov
and
xchg
lds
jne
ljmp
aad
xchg
add
insb
lods
stos
ds
insb
cmp
aam
and
je
pop
sti
test
cld
data16
inc
rcrl
pop
xchg
add
fadds
push
push
xor
mov
mov
push
jecxz
lock
das
pop
lods
jle
mov
inc
pop
out
icebp
sub
and
jne
mov
popf
lea
xorb
inc
aad
loope
pop
fistpl
fisubrl
push
shl
pusha
enter
daa
jecxz
or
nop
divb
in
in
cmpsb
adc
inc
pop
push
pop
inc
dec
mov
pop
fbstp
sub
xlat
fcomps
cmpsl
fwait
imul
test
lods
ret
xor
mov
in
inc
sub
loope
inc
cwtl
jp
enter
sbb
cmpsl
dec
mov
js
test
mov
repnz
out
test
add
test
push
xchg
pop
movsb
lea
aas
mov
xor
cmp
pop
decl
test
lock
jns
push
je
or
sbb
add
das
or
push
int3
fcomip
repz
mov
lret
sub
imul
sub
into
cs
aaa
pop
xor
push
enter
cmpsb
mov
scas
mov
in
lcall
fstpt
mov
out
mov
test
fstps
fcmovnu
stos
jl
sub
mul
and
jae
scas
inc
dec
jae
sti
iret
fwait
mov
fistps
decb
adc
adc
shlb
dec
rcrl
sahf
inc
pop
test
xchg
xchg
sbb
cld
inc
rcrl
xchg
inc
mov
clc
xchg
add
sub
leave
sbb
popa
pop
add
in
adc
in
mov
sahf
sti
jo
cmc
xorb
call
inc
jl
cli
sti
test
out
mov
mov
cmc
addr16
mov
clc
lret
pop
or
cmp
lds
or
das
shll
push
loope
sbb
xor
mov
push
dec
jle
push
xchg
call
sub
test
lcall
dec
mov
iret
fwait
cmp
lods
pop
pop
adc
jmp
imul
xor
ljmp
in
lahf
sti
fbstp
mov
mov
sbb
test
fucom
test
mov
test
jb
or
adc
je
push
pop
addl
call
sub
rcll
fsub
jp
movsb
cmp
pop
mov
mov
lcall
sbb
cli
add
push
jnp
xchg
xor
push
les
icebp
shl
mov
notb
call
movsb
sbb
lret
or
xor
cmp
repnz
push
pop
loopne
mov
loope
or
dec
out
je
stos
inc
test
movsl
mov
pop
inc
and
push
test
inc
sub
lret
icebp
loope
sti
test
in
mov
es
mov
addb
stc
fcomip
ds
sarb
xchg
mov
xchg
push
cmp
inc
add
test
add
movsl
lahf
hlt
mov
cmp
cmp
dec
leave
sbb
stos
xor
push
jb
jg
push
into
or
xor
js
jne
mov
iret
mov
jo
xchg
xor
and
or
push
mov
adc
pop
cmp
sahf
or
xor
negl
pop
mov
or
mov
adc
xor
push
test
or
dec
pop
pop
push
mov
jns
out
enter
inc
xchg
into
out
int3
fisttps
inc
das
sub
xor
xor
xor
xchg
adc
xchg
mov
adc
push
ja
pop
dec
fdivr
adc
or
in
mov
inc
andl
adc
rcrl
sbb
jo
mov
sahf
mov
jno
fdivl
aam
mov
mov
push
and
test
jmp
aam
int3
dec
or
fnstenv
cs
outsl
inc
mov
sbb
pop
loop
fcomps
and
push
mov
mov
pop
scas
mov
jns
int3
mov
daa
xor
loop
negb
inc
clc
out
orl
lea
and
jp
and
clc
data16
fscale
jg
jmp
mov
in
sub
push
jg
jp
mov
adc
leave
xchg
xchg
not
js
lods
jge
push
mov
in
fistl
push
push
cmp
jbe
icebp
mov
addl
daa
jno
pushf
jl
mov
fbstp
int3
icebp
sub
push
cmpsb
adc
push
mov
cmp
xchg
push
arpl
jnp
pusha
mov
sbbl
cmp
adc
bound
aam
int3
inc
test
int
daa
pusha
lods
fdiv
mov
and
gs
inc
mov
xlat
inc
and
mov
movsbl
cmpsb
call
inc
push
xchg
cmpsl
sub
lock
jl
xchg
dec
arpl
add
mov
xchg
jp
cs
setae
in
and
pop
loope
int3
popf
xor
mov
and
push
outsl
pop
jno
mov
scas
add
xchg
clc
or
mov
je
jnp
fsubl
push
xchg
clc
mov
jle
dec
mov
pop
inc
insl
scas
xlat
jns
pop
stos
data16
and
out
adc
in
adc
in
add
cmp
cwtl
stc
ror
xor
enter
sub
or
movsl
cmp
and
andl
sbb
xor
bnd
leave
add
push
fmul
xor
cmp
jnp
js
jmp
mov
jbe
aas
push
add
das
xchg
lret
mov
std
call
mov
movb
pop
xor
add
outsb
cmpsl
jecxz
je
xor
out
in
adc
xchg
mov
push
xchg
sbbb
lahf
insb
mov
mov
cld
aas
daa
xorb
adc
popf
push
jmp
xchg
pushl
jne
popa
test
inc
cwtl
stos
enter
out
pusha
adc
mov
and
pop
push
mov
lcall
addr16
test
insb
push
mov
push
aad
gs
daa
arpl
aaa
inc
adc
jmp
xchg
fcoms
aad
mov
int3
xor
lcall
sbb
sub
mov
fistpll
push
int3
addb
clc
shlb
and
or
xchg
push
fdivs
dec
cmp
xchg
mov
mov
sub
idivb
jl
lock
gs
jae
lods
int
cmp
push
mov
add
repz
mov
xor
mov
ret
jne
invd
aad
xor
mov
mov
addr16
inc
cmp
dec
je
inc
icebp
mov
jmp
mov
enter
xchg
icebp
add
push
sub
outsb
cwtl
sub
leave
insl
repnz
sub
shr
add
and
mov
sub
mov
fsubrs
ret
adc
push
iret
int
dec
inc
fcmove
mov
fsubrl
nop
push
pusha
mov
jecxz
xor
inc
mov
mov
rorb
into
xor
jmp
mov
cltd
pop
adc
and
jg
cmp
std
iret
orl
push
push
in
xchg
cmp
push
sahf
les
add
dec
add
rcl
int3
insl
mov
scas
jo
aam
dec
lods
mov
push
lret
xor
repnz
add
push
fildll
cwtl
cmpsb
outsb
sbb
imul
cmp
call
rcll
jns
cmp
es
xchg
les
cwtl
js
pop
push
ficomps
rolb
gs
shrb
repnz
cmc
and
in
sbb
aad
int
dec
aam
arpl
mov
inc
enter
jnp
adc
or
out
jns
lock
or
pop
dec
sub
push
push
ror
mov
lret
mov
pop
mov
jp
repz
leave
mov
jmp
mov
sub
out
ds
into
xchg
pcmpgtw
and
call
mov
mov
sub
xor
sbb
adc
repz
lods
push
jns
jne
pusha
mov
cltd
nop
xchg
aaa
or
repz
sbb
cs
or
das
add
push
es
ret
xor
mov
xchg
inc
lea
xchg
shlb
enter
repz
push
fisttps
shll
lcall
sahf
lea
fs
scas
adc
imul
stos
mov
in
add
dec
clc
xchg
clc
pushf
and
imul
data16
outsl
test
mov
imul
mov
inc
inc
out
in
out
sub
adc
mov
std
out
and
mov
loopne
repnz
ret
aaa
push
fwait
aad
lods
sub
mov
mov
mov
mov
dec
inc
adc
cld
xchg
sub
xchg
popf
sbb
aam
insb
movsb
cltd
test
loop
xlat
loop
sahf
inc
cmp
or
inc
stos
ret
adc
imul
ret
fwait
xor
shll
ror
stos
loop
jno
mov
push
cmc
mov
add
lock
repnz
bswap
or
loope
cwtl
mov
and
push
dec
xchg
mov
push
jns
xchg
cmp
pop
xor
inc
movsb
xor
out
neg
mov
cmp
pop
push
mov
pop
scas
mov
push
les
sub
push
jg
movsl
dec
xchg
xlat
add
ret
sbbb
push
arpl
dec
dec
mov
leave
mov
scas
cmp
adc
out
mov
in
cmp
fcmovnu
dec
ds
pop
xchg
jne
push
popf
lock
xor
adc
jge
mov
int3
das
adc
loopw
out
push
fwait
addl
jae
lcall
sub
mov
mov
mov
mov
ja
push
sbb
mov
dec
sub
pop
aas
orb
or
fdivr
adc
mov
out
add
xlat
cmp
insb
fimuls
incl
mov
xor
mov
jno
mov
imul
and
insb
mov
dec
ret
pop
loop
pop
pop
push
str
cmp
xor
or
fwait
xchg
test
dec
fistpl
popf
pop
ja
enter
jb
mov
sbb
jle
sub
pop
fstl
mov
scas
sub
xchg
adc
lcall
adc
add
test
sbb
inc
cltd
dec
outsl
mov
lds
insl
mov
shrl
loope
inc
test
aas
scas
sub
out
adc
xchg
pop
or
pushf
push
xor
jne
push
negl
push
push
xor
loop
ret
ja
movl
sbb
mov
jbe
nop
sub
aad
es
mov
pusha
stos
repnz
gs
std
test
arpl
rolb
push
cmp
out
adc
gs
aaa
dec
ret
mov
outsl
xchg
out
cs
adc
into
shrb
add
sub
fcmovnu
xchg
xchg
lock
push
ds
mov
scas
mov
push
out
xor
cmp
test
jl,pt
cs
movsl
jo
mov
sbb
or
cmp
mov
insl
or
sub
and
mov
push
std
mov
les
jg
jb
js
sub
cmp
rol
jg
push
jmp
adc
sub
es
adc
dec
popf
sub
mov
lret
add
or
and
or
notl
aam
cmp
sbb
xor
or
inc
mov
mov
cmc
pop
popf
push
jge
mov
mov
xchg
scas
inc
lds
pop
shrl
sbb
inc
test
adc
mov
shr
or
stos
or
pop
and
mov
fldenv
dec
cwtl
pop
push
xlat
insb
and
imulb
fwait
push
lods
mov
js
fcmovbe
mov
addr16
ret
call
mov
sub
pop
jg
pop
push
sarb
pusha
lea
ljmp
inc
push
cmp
movsb
xchg
mov
push
inc
add
jne
push
cmpsl
fdivs
ficomps
and
mov
mov
gs
out
mov
inc
or
jmp
bound
jg
aas
or
cld
imul
out
ror
mov
adc
adc
fwait
out
xchg
push
push
jb
mov
pop
inc
into
pusha
addr16
push
mov
into
or
push
push
lods
cwtl
jb
stos
mov
jmp
ss
inc
shl
fstpl
cmpsl
icebp
fimuls
xchg
dec
push
push
ljmp
stos
jmp
pop
xchg
inc
push
push
pop
push
loop
call
xlat
push
pop
outsb
les
push
into
mov
push
mov
adc
clc
fidivs
aas
xchg
sbb
xchg
in
lret
pushf
movsb
shrb
push
loopne
stos
push
sub
push
mov
push
ds
mov
jp
or
nop
clc
pcmpgtb
jl
mov
sub
lods
add
or
gs
dec
mov
daa
dec
faddl
or
enter
cmp
cli
xchg
mov
jbe
cmp
insb
xlat
mov
xchg
dec
xchg
mov
test
fwait
insb
mov
push
pop
cmp
mov
ret
sahf
xchg
daa
sub
lock
mov
push
and
or
jbe
adc
mov
push
lahf
add
scas
jl
cli
or
push
sarb
jmp
addr16
outsb
les
or
cli
iret
pop
inc
es
and
pop
popf
xchg
aas
ljmp
test
mov
pop
push
addr16
add
cld
notl
adc
jp
or
mov
invd
sbb
pavgb
inc
adc
ds
adc
out
mov
mov
out
mov
imul
scas
gs
push
mov
jnp
mov
cmp
or
jecxz
rcr
ljmp
aad
fs
in
ja
inc
xor
pop
adc
adc
aad
push
mov
sbb
cwtl
pop
cmc
dec
xor
mov
dec
jnp
pop
or
push
sbb
jb
ret
stc
adc
and
sbb
sub
cs
scas
ds
add
add
jns
push
js
cli
rolb
xchg
out
mov
pushf
mov
add
add
outsb
sbbb
aaa
xchg
iret
insl
xchg
out
int
add
sub
push
xor
or
rcrb
mov
xorb
loopne
xchg
nop
pop
int3
push
shrb
and
mov
cmp
jp
jae
rorb
loopne
jbe
push
xchg
mov
mov
jmp
sbb
and
in
xchg
int3
in
mov
add
inc
mov
in
enter
fimuls
aam
fistps
lds
push
xor
jge
in
sbb
icebp
jbe
clc
or
sti
sbb
mov
lcall
lcall
enter
mov
jle
xchg
sub
pusha
inc
imul
and
push
leave
dec
hlt
in
pop
push
ja
mov
lods
test
push
push
sub
and
ss
mov
xchg
into
je
jl
mov
and
dec
mov
or
xor
pop
mov
out
jg
mov
add
jecxz
call
sub
ficompl
mov
xorl
inc
das
push
js
sbb
scas
mov
add
cs
mov
fnstenv
sti
jl
cs
je
sbb
inc
jmp
mov
cmpsl
cli
add
inc
scas
inc
xchg
jb
jno
pushf
pop
sarb
inc
test
test
jae
pop
cmp
xchg
mov
add
push
inc
ljmp
test
mov
sbb
test
pusha
and
sbb
cltd
popl
jns
sbb
dec
cmp
ja
cmp
cmp
rcrl
movsb
ds
sbb
xor
mov
push
add
sbb
pop
jne
test
in
mov
fsubl
out
fstpl
loope
adc
mov
xor
cli
mov
scas
dec
in
int
mov
pushf
mov
push
ret
cmp
movsb
dec
xor
mov
pop
cs
dec
or
imull
ret
je
jnp
sub
mov
push
stos
dec
push
enter
mov
push
rcrb
push
mov
sbb
mov
das
fidivl
push
push
jg
ja
popf
add
inc
inc
shr
xchg
and
and
inc
js
mov
xchg
inc
sub
pop
popa
mov
fstpt
push
insb
inc
negb
pop
or
dec
ja
cltd
imul
fs
jns
xchg
ret
scas
lods
movsb
into
out
or
fisubl
pop
push
daa
lret
inc
mov
and
lock
mov
iret
test
push
pop
dec
out
test
xlat
cmp
push
xchg
dec
sarb
pop
or
stc
cwtl
cltd
cmp
xchg
or
xchg
int
push
cmp
inc
dec
test
movsl
loopne
scas
pushf
jl
or
loop
and
popf
ret
mov
out
jp
mov
stos
dec
std
sbb
add
cs
mov
add
jg
sub
jg
inc
sub
mov
cld
adcb
ja
or
shr
push
adc
dec
or
mov
out
mov
pushf
mov
sub
dec
inc
mov
and
loop
push
das
out
movsl
or
hlt
fistl
fistpll
lods
cld
es
pop
arpl
lret
bound
and
std
ljmp
imul
je
sub
mov
loope
push
push
push
mov
push
jnp
hlt
int
sbb
ljmp
pop
jb
mov
mov
mov
mov
xchg
push
adc
xchg
pop
push
xlat
aaa
jecxz
ja
repnz
add
mov
mov
in
xlat
das
insl
outsl
and
loop
addr16
adc
ffree
ret
divb
movsb
ds
icebp
sbb
pop
mov
jae
mov
jb
pop
push
mov
je
fbstp
adc
sbb
outsb
cmc
pop
push
jnp
or
jl
lods
push
mov
int
ds
xor
pushf
dec
pop
xchg
repnz
mov
xchg
mov
add
sti
ret
into
sbb
outsl
jne
mov
mov
cmp
add
jae,pn
pop
adcb
adc
sub
and
lds
xor
mov
scas
sbb
or
lret
xchg
pop
adc
test
daa
add
ss
shrl
or
mov
iret
orl
out
fldt
cmpsb
fldt
je
mov
mov
ljmpw
in
xchg
mov
pop
aaa
clc
lahf
mov
ret
or
imul
sbb
sub
dec
mov
or
sub
in
mov
ja
sti
lods
mov
pop
movsb
addb
call
push
add
gs
and
ljmp
shlb
jae
push
sub
push
cmpsl
das
fidivrl
addb
lods
jg
push
xor
sub
movsl
mov
loope
call
nop
xor
rcl
inc
mov
sub
inc
mov
or
jmp
mov
outsl
mov
cwtl
dec
addr16
out
push
sub
xchg
test
cmp
inc
in
repnz
notb
xchg
mov
or
xor
movsb
imul
aad
inc
mov
mov
pop
das
test
mov
sbb
ljmp
cs
sbb
sbb
jae
ret
js
inc
imul
jecxz
jge
ret
out
call
pop
jbe
loopne
push
dec
sahf
inc
lea
insl
push
loop
add
ret
inc
dec
out
mov
dec
repnz
fld
cwtl
adc
ret
mov
dec
mov
cmp
dec
out
pop
mov
push
out
cmp
inc
fdivs
imul
or
mov
add
nop
lods
mov
js
mov
sti
fucomip
xor
inc
cmp
ljmp
push
dec
lds
fistl
mov
mul
dec
add
xor
outsb
in
or
adc
push
test
xor
lret
cltd
mov
adc
test
push
cmp
cmpsl
popf
or
scas
jbe
mov
xlat
ss
ljmp
cmc
push
imul
mov
mov
pop
pop
mov
xchg
out
enter
nop
mov
pop
dec
dec
pusha
sbb
pop
pusha
sub
test
push
std
mov
out
adc
in
lret
sbb
or
xor
subb
mov
mov
testl
jge
inc
cmpsb
mov
add
xor
dec
iret
mov
and
inc
jo
adc
icebp
outsl
sub
data16
add
cmpsb
shlb
push
cltd
jg
into
ret
sahf
int3
xchg
sub
cmp
xorl
push
sbb
jp
sbb
sub
xchg
jne
pop
loop
shll
pop
pop
hlt
int
push
push
push
scas
ret
nop
idivl
inc
mov
test
pop
pop
ja
daa
clc
inc
test
daa
arpl
xchg
jg
mov
lcall
orl
fcoml
xchg
xor
xchg
sbb
in
mov
sti
jbe
dec
insb
rorb
inc
mov
icebp
and
fbstp
subb
mov
dec
in
scas
out
fsub
movaps
in
mov
xchg
movsl
scas
lret
xchg
mov
inc
mov
nop
xchg
mov
cmp
pusha
movsb
dec
push
clc
cltd
jno
mov
loopne
pushw
mov
loope
in
pop
jmp
xchg
mov
push
mov
pop
cmp
stos
xor
test
icebp
loopne
jno
mov
in
or
cli
rolb
xor
scas
jnp
dec
xchg
popa
pop
adc
mov
icebp
pop
in
icebp
or
adc
fs
adc
dec
rcrb
push
add
dec
out
enter
or
push
sbb
or
dec
cmp
xorb
jmp
inc
pop
jl
shrb
hlt
das
cmp
mov
jno
jp
xlat
sbb
push
jmp
out
xor
xchg
inc
mov
jae
mov
pop
sub
push
xor
pop
lods
mov
jno
inc
push
ss
sub
mov
xchg
pop
xchg
subb
xchg
jb
dec
sbb
and
cmp
out
dec
int3
jb
out
inc
sub
shll
and
cmp
nop
pop
div
inc
inc
cmpsb
mov
test
notb
jmp
mov
push
xchg
push
pop
cmp
sub
outsl
subb
mov
testl
sub
std
aas
scas
or
popa
jne
aaa
lret
insb
js
sbb
lret
adc
or
pop
lcall
inc
or
xchg
and
sahf
mov
repnz
out
dec
bswap
pushl
and
sbb
jl
scas
xor
daa
clc
mov
mov
push
cmp
add
pop
ljmp
cmp
xchg
sbb
addb
sahf
dec
sub
push
inc
push
push
xchg
pop
inc
mov
and
xchg
add
lods
sbbb
inc
addb
jae
repz
xor
adc
adc
add
cmp
int
mov
add
sahf
xor
decl
pop
dec
mov
xchg
pusha
mov
loope
lahf
ljmp
mov
stos
mov
mov
xor
pop
stos
repnz
imul
fs
movl
nop
rcrl
cmp
hlt
cmp
js
jmp
xor
push
push
xchg
lods
jae
bound
dec
sbb
sahf
add
mov
cltd
test
cli
test
xor
sub
mov
cmp
call
mov
scas
aam
jmp
popa
xchg
xchg
stos
mov
xchg
inc
and
ljmp
pop
xchg
test
jnp
in
sbb
je
jne
pop
movb
mov
jae
cwtl
packssdw
jp
sub
xchg
into
dec
jae
mov
aas
gs
push
lret
stos
jmp
stos
fxch
xchg
addr16
xlat
or
jb
pop
mov
fildll
movl
into
dec
xchg
idivb
pusha
loope
loope
lea
lods
fwait
adc
pushf
ds
mov
fcoml
pop
scas
addr16
sub
sub
shlb
stos
addl
mov
xor
inc
loop
add
flds
loope
cli
in
mov
xor
inc
jp
imul
xor
in
xchg
outsb
das
fcmovu
xchg
mov
enter
mov
mov
out
bound
clc
sub
loopne
dec
lds
jle
and
fs
pusha
cltd
and
mov
push
mov
or
dec
jbe
mov
push
jmp
push
jge
cmpsl
repz
movsl
iret
lock
mov
ret
fcoml
xor
mov
popa
xchg
push
mov
jecxz
mov
ret
or
mov
aas
cwtl
jg
hlt
das
cmp
sub
inc
clc
sub
xchg
mov
int3
cmp
repnz
mov
jge
sbb
add
ss
in
iret
xchg
cmp
jne,pn
mov
push
or
xchg
lods
outsb
dec
pop
test
stc
sarl
div
mov
mov
out
ja
movsl
mulb
sbb
jno
dec
repnz
repz
sub
adc
insl
lods
and
add
xchg
mov
imul
push
pop
cmp
adc
aad
push
and
fstpt
cmp
mov
cmp
xor
orl
stos
addr16
mov
lcall
outsl
das
xchg
xchg
les
bound
lret
add
loope
mov
loopne
lods
rcr
jmp
mov
aad
xor
idivb
jp
outsb
sahf
sbb
stc
imul
cwtl
daa
cmc
add
popf
ss
stc
sbb
xlat
xchg
sbbl
lock
push
mov
jb
jo
addl
leave
sti
jnp
jns
in
inc
sub
movsb
int
imul
sbb
dec
insb
add
jecxz
ljmp
fcmovb
sub
in
add
je
mov
repz
leave
fmull
daa
sahf
xor
stos
jmp
scas
xchg
roll
dec
push
shlb
pop
in
sbb
int3
sub
lods
or
rolb
cmp
or
test
pop
xchg
ret
daa
aad
dec
ds
mov
jle
jae
lcall
jae
push
mov
shll
and
icebp
fiadds
ret
jno
loope
pop
insb
jge
aam
leave
leave
stos
dec
lahf
fistpll
ja
cmpsb
and
lret
pop
jne
sbb
adc
out
nop
jge
mov
mov
in
pop
pop
addr16
sti
fs
aaa
sti
pop
mov
jg
int
push
call
test
add
sub
mov
pop
dec
or
inc
jo
arpl
and
jecxz
shll
aas
loopne
rorb
repnz
rclb
rcrb
arpl
pop
xchg
sbb
adc
dec
and
push
aas
xchg
stos
push
in
enter
cmpsb
xchg
out
and
jno
push
movl
xchg
lods
sub
adc
fwait
dec
xor
sbb
pop
loop
jle
je
fildll
jno
in
pushf
out
ret
jne
xchg
dec
mov
mov
xor
xchg
push
sbbb
xor
add
or
jl
pop
mov
mov
scas
mov
push
sub
xlat
test
pop
lea
push
shrl
add
jl
add
scas
mov
push
js
adc
adc
aad
xor
push
stos
mov
scas
xchg
mov
pop
sbb
cmp
add
cmc
hlt
cmp
pop
popa
jbe
push
ljmp
and
mov
push
lret
mov
pop
adc
out
test
arpl
bound
cmp
xor
mov
sti
je
jl
ds
insl
in
dec
sti
fs
jne
adcl
cmpl
pop
rolb
scas
loop
dec
mov
xor
out
add
in
clc
jle
adc
addb
xchg
in
popf
arpl
add
inc
sub
stos
andl
pushf
andl
outsb
push
xchg
or
shrl
adc
jb
fmull
push
jl
mov
xor
js
cmpsb
inc
fimull
xchg
rol
std
ficompl
push
insl
fstpt
inc
pop
xchg
jb
lret
test
sbb
jo
dec
mov
mov
cwtl
cltd
adc
sub
je
xorl
adc
mov
mov
and
imul
xchg
inc
sbb
fimuls
stc
cld
js
flds
cs
mov
hlt
cli
cmp
adc
add
mov
sub
mov
outsl
pop
gs
mov
lock
jge
add
mov
jmp
mov
mov
xor
inc
enter
jb
out
jmp
sbb
out
push
push
subl
jp
pop
and
mov
rcrb
fiadds
mov
les
orb
idiv
lret
lds
add
pop
pop
cmp
adc
dec
or
decl
inc
out
mov
in
cmovno
cmpsl
shrl
and
insl
shlb
imul
adc
mov
mov
or
pusha
xchg
lret
fdivrs
xchg
mov
in
aas
lret
sahf
sub
lods
sbb
pop
imul
jecxz
ret
es
pop
fistps
pushf
leave
sub
popa
mov
cmp
jl
sti
inc
inc
inc
inc
shlb
lock
cs
mov
inc
in
decb
cmp
mov
xor
icebp
shrl
fbstp
jecxz
cmp
dec
loope
gs
es
xor
cmp
ficompl
cwtl
inc
rolb
clc
sub
mov
sub
out
lret
out
mov
pop
enter
dec
mov
xchg
hlt
mov
pop
pushf
and
loopne
mov
data16
into
loope
mov
int
out
out
mov
inc
sbbb
pop
cmp
pop
pop
rolb
xchg
mov
fldl
xor
or
mov
loope
dec
in
inc
arpl
jl
push
movsl
call
xchg
fcmovu
mov
push
cld
push
in
and
in
sbb
pop
pop
jno
sbb
push
xchg
mov
sub
or
subl
push
xchg
dec
adc
adc
nop
je
popf
arpl
loop
mov
xchg
es
mov
inc
fcomi
jecxz
sarl
test
sub
mov
fbld
push
nop
cltd
add
adc
jnp
lods
sbb
in
aam
pop
lahf
sub
dec
mov
mov
inc
mov
outsl
addr16
xchg
pop
mov
push
bnd
pop
xchg
cltd
xor
scas
fcoml
or
daa
mov
ljmp
aam
add
fcmovu
cli
and
shl
popf
dec
jmp
mov
popf
scas
movsl
addr16
cmpsl
mov
aaa
addps
cmp
sbb
mov
pushf
cmp
das
pop
xchg
and
pop
ja
inc
or
clc
loop
loope
and
push
or
cmpsl
fwait
insl
es
adc
push
je
clc
sub
adc
es
sbb
pop
mov
lods
push
pop
xor
lret
hlt
nop
ss
lea
inc
push
add
lods
cmc
pop
cmp
sub
xor
sbb
pop
in
fcmovnb
jo
cmp
mov
test
mov
push
std
and
cmp
iret
lock
inc
jae
lret
pop
add
int
ljmp
sbb
and
ror
mov
nop
sub
out
outsl
mov
xchg
sub
ficompl
andb
inc
xor
pushf
and
sti
stos
in
lret
sub
xor
movsb
mull
inc
testl
roll
adc
adc
insl
add
push
and
insl
pop
out
mov
in
pop
addr16
sbb
pop
xchg
shrl
aad
incl
mov
out
inc
jo
push
into
ret
insl
or
ret
adc
sahf
scas
dec
lcall
sbb
mov
cmp
push
fisttps
sub
mov
daa
add
loope
test
mov
cli
xor
jne
xor
lea
xor
xchg
inc
sub
xchg
enter
or
sbb
cs
inc
dec
and
iret
cld
xchg
popf
repz
enter
push
xchg
loop
aad
push
push
or
jge
movsb
mov
jl
sbb
jb
and
adc
icebp
stc
cmpsl
data16
push
cmpsl
pop
jecxz
fstl
cmp
or
lret
fiadds
inc
jecxz
jne
and
cwtl
sbb
mov
inc
inc
sub
or
xchg
pop
hlt
cmp
or
push
pop
adc
pop
jb
jle
addb
dec
in
or
pusha
mov
jge
icebp
pusha
inc
jb
shrb
and
or
loop
popf
cwtl
cmpsl
movsb
xchg
shlb
xchg
pop
js
inc
cmp
dec
outsb
adc
add
pop
inc
dec
ret
pop
pop
xor
adc
outsb
int3
cmp
add
fmuls
adc
lcall
pop
movsb
loop
les
fstpt
pusha
lds
add
fistl
imulb
or
inc
mov
mov
cld
jg
pop
les
push
add
or
mov
and
cmp
mov
test
jae
sbb
bound
mov
pop
jmp
loop
fsubrs
fstpl
xchg
and
add
xchg
jmp
les
jno
xchg
mov
sti
cmp
mov
jno
adc
inc
xchg
es
xchg
mov
inc
mov
cmp
cmp
sub
xor
fsubr
inc
xor
imul
push
xchg
out
scas
insb
in
fdivr
or
movsl
cmp
push
loope
ret
out
jg
pop
add
sahf
test
sub
enter
inc
stos
stos
mov
pop
les
or
aaa
cli
sub
push
inc
sbb
fnstenv
mov
push
fsubrs
jns
mov
gs
mov
loope
xlat
outsb
xor
dec
jl
mov
jmp
cltd
ucomiss
ds
imul
mov
in
hlt
gs
shll
sbb
outsb
push
sbb
sbb
mov
add
dec
inc
fstp
cmp
dec
mov
rcrl
fs
sbb
imul
push
std
int
add
shl
dec
test
lods
in
jmp
adc
push
or
sahf
cmpsl
sahf
dec
and
fldt
shlb
out
mov
sub
ret
aaa
pop
xchg
movsl
hlt
cmp
mov
push
insb
mov
fcomp
imul
imul
lcall
std
cmp
mov
cmpsb
xor
mov
cmp
mov
in
mov
inc
jmp
cmp
inc
jns
xchg
stos
cmp
or
ret
xor
xchg
cltd
fwait
push
mov
push
cs
push
push
in
xor
ljmp
sub
sbb
pop
mov
addl
dec
jns
cmp
push
cmpsb
insl
xchg
in
fdivrs
add
subl
jnp
dec
iret
mov
mov
or
inc
mov
dec
fimuls
das
rclb
add
or
test
cltd
adc
mov
call
xor
hlt
cmp
sbb
pop
push
ljmp
shll
add
jecxz
leave
push
mov
xchg
dec
stos
xchg
lahf
mov
sbb
sub
mov
or
and
xor
mov
mov
and
loope
and
rcll
dec
loopne
std
adc
test
test
mov
push
insb
mov
mov
movsb
scas
push
cmpsl
mov
fs
pop
push
and
jle
push
insb
jb
icebp
mov
outsl
or
adc
add
mov
pop
cmpb
cmc
je
stos
movsb
dec
push
outsl
lock
push
mov
cmp
mov
stc
adc
out
xchg
adc
add
cmp
jmp
mov
aam
sub
and
dec
push
mov
push
test
xor
mov
push
jbe
jnp
push
inc
mov
popf
daa
push
icebp
and
cmp
push
xchg
mov
lods
cmp
xchg
add
pushf
sub
icebp
bound
mov
int3
pop
dec
in
popa
imul
push
mov
add
fsts
stos
jae
adc
cld
fs
into
add
pop
testb
push
adc
pop
mov
cmpsb
add
dec
mov
lods
mov
push
and
sbb
xor
dec
lret
jge
test
aas
xor
test
mov
push
mov
cmp
insl
fbld
push
xchg
jge
inc
inc
or
outsl
test
pushf
sbb
aaa
jmp
mov
cwtl
out
jne
sar
cmp
mov
and
fwait
pop
pop
lods
add
addr16
nop
fidivl
rolb
jp
int3
sbb
pop
jnp
cmc
std
pop
pop
cld
idivb
ficomps
inc
addr16
clc
andb
mov
adc
xchg
ret
sbb
mov
xor
xlat
test
aad
xchg
xchg
scas
popf
push
xor
adc
sub
mov
sbb
mov
cmc
negb
fmuls
jecxz
mov
stos
mov
push
sbb
cmp
aas
std
ss
xchg
xchg
sbb
cwtl
push
movsb
incl
pusha
fmull
mov
into
mov
jno
pop
jmp
jmp
loopne
dec
push
hlt
shll
mov
xchg
sbb
imul
xchg
daa
mov
jg
cli
mov
leave
imul
and
movsl
aas
cmp
lret
sbb
int
push
adc
mov
divl
push
mov
stos
or
push
inc
pushf
mov
push
fwait
sub
jmp
rorl
jb
mov
stos
pop
push
enter
fisubl
xor
jg
push
lret
mov
mov
jle
fs
jbe
out
jbe
cltd
fucomip
in
jnp
lret
aas
sub
xchg
ret
add
mov
sub
adc
clc
hlt
pop
xchg
stc
or
lret
xlat
push
loop
dec
xchg
xchg
xor
mov
fstl
and
int
pop
jno
mov
dec
mov
inc
aaa
cmp
rcr
or
dec
fbld
cmp
xchg
jns
mov
insb
mov
mov
in
pop
jecxz
mov
push
les
rcrl
pop
test
out
jns
pop
sub
or
test
cmp
xchg
lcall
popf
sbb
int
mov
jecxz
jg
fisubl
lret
pop
mov
lahf
fcmovbe
sbb
add
movsb
stos
mov
dec
pop
call
adc
cltd
xor
pop
push
in
pop
sarb
inc
pop
adc
xor
sbb
ret
cmpsl
test
aaa
mov
mov
push
jle
mov
insb
xchg
add
das
int
mov
loope
xchg
xchg
xchg
lcall
jl
in
jbe
imul
pinsrw
pop
ds
stos
push
mov
clc
xchg
fsubrs
inc
stos
sbb
mov
ds
loopne
push
push
cmp
xchg
sbb
test
loop
test
rol
and
push
ds
pop
or
lret
xor
add
fisttpll
shll
int
ja
push
xor
xor
ret
xor
popf
jecxz
mov
lods
mov
movsb
xchg
dec
jg
jecxz
clc
add
jge
cmpxchg
in
mov
push
adc
sahf
mov
and
xchg
mov
pop
xor
incl
data16
sbb
xchg
sahf
or
and
rcll
cmp
xor
fsubrl
mov
or
and
sbb
test
mov
or
pushf
add
and
jne
and
xor
jnp
mov
push
and
mov
addr16
es
movsl
test
mov
mov
and
pop
sub
mov
mov
mov
mov
jnp
test
paddusw
add
ja
in
pop
test
add
push
mov
mov
xchg
test
sar
es
xchg
push
sahf
pop
btc
jo
push
fisttps
cwtl
adc
idivl
mov
xchg
ficoml
js
sbb
cmpsl
jecxz
shr
add
push
cmp
cmp
or
or
jmp
push
push
cmp
lods
fnstsw
pop
rcr
lcall
lcall
lock
pop
sbb
adc
nop
dec
out
jne
pop
rorb
mov
popf
push
test
inc
addps
jne
fildl
xor
sub
pop
fsubs
pop
mov
jle
movsl
cmp
adc
scas
xchg
fsubl
sub
bound
add
lea
push
xchg
imul
mov
jo
push
inc
mov
jg
inc
sbb
enter
sbb
stos
or
cwtl
cli
shrl
dec
movsb
mov
push
adc
test
call
inc
jl
test
cmp
rol
clc
ffree
mov
shll
jg
pusha
jb
pop
cmp
mov
out
jne
inc
std
jo
scas
sbb
push
test
dec
dec
loopne
sbb
movsl
or
into
or
xchg
imul
imul
xchg
ja
hlt
xchg
lret
ljmp
cmp
xor
fisttpl
repz
adcl
mov
and
test
sbb
sahf
mov
mov
mov
sbb
lahf
xchg
mov
pop
mov
push
push
iret
inc
sub
ja
jmp
scas
add
xchg
rcll
mov
add
dec
stos
jae
or
push
sbb
xchg
je
ficoml
push
les
popa
inc
xchg
pusha
repnz
push
adc
xchg
adc
xor
sarl
cli
movsl
fldl
pop
push
cs
imul
dec
les
arpl
shll
xchg
cmpsb
push
cmp
jns
scas
pusha
cltd
sahf
ret
ret
out
mov
and
xchg
lahf
cltd
and
mov
add
cmp
dec
mov
add
mov
int
push
fcoms
and
out
out
fneni(8087
cmpsb
or
cwtl
sahf
fs
lret
sbb
out
insl
out
les
cltd
push
and
int3
sbb
xchg
add
xchg
and
add
inc
lahf
inc
mov
icebp
roll
lods
and
std
pop
aam
test
sbb
call
jbe
jo
inc
xlat
pop
popf
push
mov
fildll
sub
xchg
jge
sbb
popa
into
insl
inc
pop
int3
mov
lret
cli
scas
pop
push
ret
or
mov
icebp
inc
popf
in
insl
repnz
mov
adc
and
and
cmpsl
jle
cwtl
rorb
loop
imul
inc
mov
stos
jl
mov
lds
jb
lock
or
jle
and
fildl
xor
sub
rorb
mov
push
in
rcrb
push
and
out
cmp
xor
test
jmp
pop
pop
dec
inc
mov
enter
or
mov
aad
dec
dec
std
int
inc
sbb
pop
inc
in
cmp
aas
mov
pop
icebp
or
test
adc
xchg
test
fs
imul
out
test
addr16
fs
inc
mov
cwtl
sbb
inc
ret
clc
mov
jo
and
outsl
jne
lock
mov
movsb
or
add
mov
pop
subl
lods
pop
pop
fmuls
xchg
mov
jo
pusha
and
out
or
test
loop
clc
ret
xchg
int3
dec
outsl
into
lock
or
ret
gs
inc
jp
cmpsl
xor
and
and
cmpsb
cwtl
push
jne
xchg
jnp
rcll
pop
aad
jae
sub
push
sbb
cmp
push
int
and
out
cs
pop
cmc
push
sub
imul
sti
leave
hlt
pop
mov
mov
fcmovb
in
cmp
subb
cmp
push
jo
push
mov
sub
popa
xchg
ja
jl
pop
daa
out
loopne
enter
push
shll
xchg
pop
and
test
add
xchg
pop
rorb
mov
fsubs
sbb
in
push
pop
rclb
jns
les
ret
mov
fildll
hlt
cmp
es
out
xor
pop
and
and
jbe
pop
test
mov
out
jl
pop
loopne
adc
out
inc
add
xchg
daa
pop
jp
mov
pop
insb
movd
imul
bound
cmpsl
call
add
dec
adc
mov
adc
jg
rorb
testl
and
dec
push
pusha
mov
lret
mov
and
scas
jae
inc
inc
mov
lahf
add
jno
mov
inc
dec
push
je
dec
inc
and
in
inc
inc
xchg
ja
pop
mov
dec
push
xchg
pop
je
mov
fisubrs
adc
mov
lock
push
jge
xlat
arpl
mov
jge
sti
lock
repnz
sar
ljmp
cmpsb
sbb
lcall
mov
mov
push
xor
mov
fs
daa
or
ret
pop
add
and
fs
or
test
test
popf
adc
jmp
and
sbb
cwtl
mov
xor
cli
shrb
push
rclb
repz
enter
sti
jge
sbb
xor
push
ret
stos
xchg
push
aas
lahf
pop
pop
js
jmp
ljmp
decl
xor
imul
test
mov
cmp
shlb
movsb
data16
insb
lahf
pop
les
pop
fdivl
fsub
sti
inc
mov
jl
sbb
out
xor
jns
fs
insl
xor
js
shrb
test
sahf
jns
adc
push
fwait
and
int
add
loopne
outsb
pop
dec
push
mov
inc
pushf
sub
xchg
cltd
test
pop
imul
mov
push
cwtl
imul
std
ja
jp
mov
fdivrs
leave
cmp
sti
xchg
xchg
andb
pop
mov
sbb
out
lahf
xchg
in
in
and
imul
mov
inc
fstps
xchg
iret
and
xchg
sbb
into
fdivr
cmp
xchg
or
and
jge
stos
out
pcmpgtb
fistps
test
mov
push
or
in
lods
in
cmp
negb
aas
lods
mov
xchg
vucomisd
xchg
repz
jnp
and
push
jl
nop
xchg
jmp
fcoml
xorl
addr16
repnz
or
xchg
loope
in
cmp
lods
fisubl
pop
jns
cmp
mov
push
pop
gs
rorb
and
jp
pop
cmp
enter
fwait
push
jbe
push
cmc
insl
sub
test
fcos
jp
jns
xor
jg
call
mov
xchg
mov
cmp
dec
add
mov
inc
sahf
in
or
hlt
xchg
sbb
adc
sbb
inc
pop
push
not
mov
xchg
int3
mov
dec
scas
mov
push
bound
jb
insb
iret
aad
or
mov
mov
daa
into
in
jae
sub
inc
cwtl
mov
ret
ss
add
add
out
and
sbb
add
pop
ss
roll
arpl
jo
das
push
xsave
ss
js
je
imul
xchg
xchg
testl
mov
mov
ret
leave
xlat
jae
outsb
pop
jg
in
lahf
sar
rcr
int3
jbe
in
in
ja
mov
xor
jo
sub
mov
adc
sub
jl
mov
fwait
xchg
cmp
aad
push
mov
std
mov
xor
movsb
or
jl
mov
jl
push
xor
push
stos
pop
into
inc
cs
icebp
repz
lods
int
mov
adc
xor
push
mov
mov
lods
lret
pusha
roll
mov
sti
and
mov
push
test
idivb
jp
sbb
and
test
popa
dec
mov
pop
cmpsl
sub
sub
sbb
adc
push
stos
xor
push
cli
and
test
imul
repz
cmpsl
pop
sbb
push
lock
pop
adc
mov
jo
add
pop
mov
notl
cs
mov
std
sub
mov
inc
sbb
push
adc
out
les
mov
adc
call
shrl
sti
orl
bound
inc
test
dec
jnp
ja
sub
jbe
pop
mov
cmp
or
mov
pop
add
xchg
push
lret
jb
mov
fidivl
mov
into
das
int3
sbb
sbb
in
cld
aam
nop
mov
push
cmp
clc
mov
loop
pop
loop
push
nop
push
adc
fisubrl
mov
pop
inc
mov
inc
inc
mov
mov
test
dec
pop
and
scas
call
xor
filds
mov
scas
fsubrs
sub
mov
rclb
lds
lret
adcb
popl
rcr
jecxz
push
cmp
testl
and
jae
cmc
and
and
in
stos
popf
aam
adc
test
mov
imul
stos
dec
jae
ret
adc
xchg
int3
jl
and
adc
enter
fistps
ss
mov
stos
inc
and
pushf
mov
shll
and
ret
sub
and
mov
cmpsb
out
sbb
std
add
ret
xlat
jbe
lock
or
jnp
dec
lods
add
in
cmpsw
pop
dec
hlt
sub
mov
xchg
lcall
cmp
xchg
sbb
and
fsubl
add
in
repnz
test
dec
xor
outsb
push
inc
add
cmp
add
push
ret
mov
int3
sbb
fnstcw
cmp
fsubr
push
and
push
sbb
push
xchg
pop
call
stc
jo
cmpsb
cld
mov
mov
xchg
ds
stos
test
dec
insb
pop
push
cmpsb
xchg
mov
out
mov
adc
add
xor
inc
hlt
xor
sub
in
stos
aam
cmp
mov
push
nop
cmp
pop
sub
lcall
mov
mov
and
pop
cmc
ficoms
push
mov
scas
pop
jae
aas
clc
xor
mov
pusha
test
aaa
scas
nop
or
sarb
stos
data16
lret
dec
ficomps
lods
sub
and
jg
arpl
jbe
sbb
fsin
cmova
pop
sub
jae
icebp
mov
aaa
dec
stc
or
xchg
adc
pop
shll
xor
das
mov
pop
cmp
int
or
inc
add
popf
xor
pop
insb
movsl
test
add
das
sbb
les
aad
jno
sbbb
and
adc
xor
imul
xchg
pop
jle
dec
daa
insb
mov
jb
sbb
daa
jnp
shll
lahf
adc
cmp
dec
mov
or
push
std
fwait
xchg
stos
pop
mov
out
or
xchg
fnstsw
sub
loop
sbb
les
iret
inc
jo
lea
popl
mov
loopne
push
in
aad
or
sub
sbb
mov
movsb
pop
imul
and
out
sbb
pop
mov
inc
mov
shll
push
mov
dec
mov
enter
ret
fs
das
adc
insl
or
int
pop
into
hlt
sarl
iret
ret
icebp
test
test
xor
mov
mov
sub
divl
push
lcall
aam
stos
mov
out
mov
scas
pushl
fisubs
and
fs
data16
mov
mov
jns
mov
shr
addb
lea
mov
incl
pop
or
pop
jecxz
and
sbb
out
cmp
adc
jle
aaa
shl
sub
pop
fptan
dec
jecxz
jnp
int
xchg
lret
fisubrl
sbb
insl
lds
mov
inc
sub
mov
xor
mov
dec
loopne
mov
dec
ret
xor
pushf
sbb
add
mov
mov
loopne
test
push
mov
inc
mul
mov
mov
addr16
testl
mov
pop
sub
adc
xor
dec
loope
mov
repnz
push
test
outsb
mov
jnp
mov
pop
aam
xor
push
test
push
jnp
bound
sub
cmp
ds
mov
testl
lret
pop
mov
roll
int
cmp
push
cmp
xchg
xchg
xchg
mov
lcall
fwait
xchg
int3
dec
cmpsb
mov
xchg
fildll
in
nop
jnp
enter
inc
fdivl
dec
xlat
push
add
xchg
subl
jmp
inc
out
inc
outsl
test
mov
in
add
loope
or
jle
lret
push
hlt
mov
jmp
cmpsb
jne
jne
bswap
jns
fsub
push
or
dec
stos
xchg
cwtl
mov
push
push
sbb
call
lret
push
in
sbb
lret
cmp
jmp
fadd
pop
imul
mov
cmp
push
xchg
add
jo
popa
jle
mov
mov
or
fstl
jg
test
int
dec
call
push
movswl
jge
cmpsl
testl
push
pop
loopne
xor
jne
pop
mov
cmp
jno
inc
sar
imul
inc
adc
xchg
cmc
icebp
out
push
jnp
xchg
sub
and
stc
mov
xor
ds
jg
out
jl
lea
sbb
xchg
push
lcall
inc
cmpb
mov
xchg
pusha
repz
jp
xchg
xchg
mov
sub
push
jb
rorb
pop
fs
pop
lret
xchg
jl
mov
push
cltd
call
sbb
inc
dec
mov
mov
mov
jae
sub
cmpsl
mov
cmp
out
xor
in
dec
stos
xorb
jo
push
sbb
test
int
or
sbb
add
jl
lret
pushf
clc
sub
lea
frstor
inc
cmp
andb
loope
inc
jmp
in
fldenv
push
stos
dec
aas
adc
loope
adcl
push
fstpl
sub
lods
mov
pushf
sar
mov
clc
loop
cmc
push
mov
fwait
jb
xorl
or
xchg
shr
mov
sbb
sti
or
iret
lret
fists
and
clc
or
jmp
outsb
adc
jg
pushf
ret
or
lret
pusha
fdivs
dec
enter
int
adc
xchg
pop
test
sub
bound
sahf
xchg
sbbb
xor
mov
or
jmp
in
idivb
or
xlat
ss
out
imul
repnz
xor
jae
mov
push
icebp
addr16
ds
add
in
jl
cmp
dec
or
lods
push
imul
sti
sub
nop
mov
lods
pushf
push
pusha
cli
loop
psrlw
repnz
xchg
shr
push
int3
inc
in
xor
stos
adc
aaa
or
in
movsb
mov
sahf
fisttps
mov
jp
and
in
aaa
popa
in
jns
cli
insb
addb
popa
and
in
icebp
push
rorl
cli
cmp
push
loope
jmp
aad
sbb
hlt
das
cmp
fcompl
insb
dec
jle
stc
mov
out
mov
add
sbb
or
ljmp
dec
xchg
ror
dec
call
inc
shll
sub
push
jae
and
inc
jo
add
mov
jbe
scas
jb
sahf
push
aam
aad
repz
sbb
xor
arpl
incb
aam
inc
push
fwait
scas
pop
scas
xor
push
int
mov
dec
adc
popa
mov
xor
repz
int
xchg
dec
orb
out
call
cli
xchg
push
out
jge
jp
lcall
lds
cld
and
out
mov
pop
movsl
shll
jbe
test
pop
push
scas
lcall
out
and
sub
push
shl
cwtl
ret
mov
sub
push
test
dec
es
inc
nop
add
cmp
xchg
inc
loopne
pop
lret
ja
adc
fucom
stc
cmc
loope
mov
leave
pusha
xor
int
popf
lock
mov
test
jmp
dec
push
ljmp
xor
jmp
mov
imul
ja
outsl
aas
jb
mov
push
jmp
imul
jae
and
push
leave
push
dec
daa
adc
and
ficompl
dec
leave
clc
popa
add
popa
jp
sbb
dec
test
fcmovnb
add
sbb
xchg
lock
dec
rorl
rcrl
jb
cmp
nop
mov
xlat
pop
in
leave
insl
push
das
leave
push
fs
jbe
adc
push
adc
dec
into
push
in
cltd
jb
lods
sbb
push
or
push
pop
jne
pop
lds
lahf
fiadds
add
cmp
add
jbe
xchg
jbe
and
inc
pop
clc
dec
pop
into
xchg
mov
dec
add
lock
sbb
out
or
mov
sbb
xchg
jo
lret
xor
daa
mov
dec
lock
out
or
loop
mov
inc
loop
cmp
xchg
imul
js
fcmovu
clc
ror
cmpsb
cmp
dec
mov
dec
inc
or
mov
jg
sbb
dec
stc
shl
sbb
sub
jnp
iret
insb
test
or
cli
jle
movsb
lods
add
pop
outsb
out
adc
sbb
cmp
rcr
mov
cwtl
test
daa
mov
fadds
call
jno
mov
insb
adc
xchg
cmpsb
into
das
subb
mov
jle
inc
mov
add
lcall
pop
arpl
cmp
out
sarl
sub
jo
sarb
xor
in
cld
loope
or
gs
inc
pop
jbe
and
xchg
aam
sbb
adc
insb
shr
cwtl
and
mov
jbe
popf
sub
dec
mov
xchg
ret
rcrl
lcall
xchg
push
gs
mov
inc
or
xor
shrb
add
aam
mov
fdivl
add
pop
or
jnp
mov
mov
sti
add
xchg
inc
test
adc
mov
mov
ficoms
test
mov
dec
ss
stc
shl
sti
push
mov
dec
leave
jbe
decl
pop
bound
xchg
jnp
sbb
sub
jb
int3
aas
mov
movsl
jns
sub
jp
aaa
out
pop
das
into
sub
pop
adc
nop
jge
rorb
jnp
cmp
aad
xchg
hlt
dec
sub
mov
dec
cmp
out
popa
in
jp
gs
adc
mov
add
in
mov
xor
inc
lahf
test
mov
inc
xchg
sub
mov
cmc
push
push
ljmp
xchg
xchg
cmp
dec
xchg
push
mov
add
xor
das
sbb
xchg
and
or
addb
xlat
pop
cmp
das
test
mov
mov
jbe
jle
or
jbe
xor
xchg
push
insl
icebp
xchg
adc
jo
les
xor
out
jno
pusha
dec
dec
push
cmpsb
jp
addl
mov
dec
mov
pop
mov
nop
mov
aam
int
mov
fwait
adc
cmp
mov
xchg
sub
mov
pop
outsl
dec
sub
cli
in
les
ret
jg
mov
cmc
hlt
push
mov
pusha
lcall
jo
loop
out
sub
inc
neg
loopne
gs
push
xchg
cmp
jle
addr16
enter
dec
xchg
mov
jle
jl
fildl
cld
rol
sbb
inc
mov
ret
lock
loope,pt
stc
pop
xchg
mov
add
fcomi
notb
stos
cs
in
inc
orb
xor
rcrb
pop
in
lahf
into
call
loopne
leave
lods
movsb
jnp
movsl
roll
sub
cld
test
mov
call
dec
rorl
add
lahf
mov
out
ret
inc
cli
je
movsl
jecxz
sub
insl
xor
mov
std
mov
out
outsl
stos
int3
in
jg
inc
adc
shll
bound
push
jne
outsl
shlb
and
into
sub
data16
stc
pop
or
fwait
das
inc
adc
mov
xor
nop
nop
in
sbb
bound
call
shrb
sahf
dec
pxor
sbb
xchg
mov
jno
jg
sub
cmpsl
into
mov
cmpsb
adc
icebp
add
cmp
das
xlat
loopne
stos
js
cmp
xchg
mov
jp
data16
xchg
jge
jge
fidivrs
inc
adc
mov
xlat
add
imul
or
jb
cmpsb
cmp
stos
shl
jecxz
sub
cmp
jle
lods
cmc
push
push
add
shll
test
outsl
xchg
movsl
xor
test
pop
xlat
mov
mov
js
aam
mov
mov
adc
mov
xchg
cmp
xorb
xchg
dec
jmp
sub
das
jne
lcall
or
pop
fnstcw
xchg
test
fsubrs
cs
jle
int3
or
sub
out
jle
cmp
xor
sub
push
ret
pop
push
inc
inc
push
mov
movsb
mov
ret
xchg
and
ds
cltd
mov
call
mov
aam
add
xchg
lret
insl
cld
out
or
xor
xchg
imul
adc
mov
aaa
cld
mov
mov
xchg
cs
scas
mov
hlt
mov
sbb
aaa
and
ret
xchg
dec
pop
xor
inc
lahf
adc
pop
iret
test
mov
ss
out
or
clc
xchg
inc
xor
fisubrl
js
mov
xor
push
lea
je
nop
jle
pop
into
pop
mov
inc
mov
sub
enter
pop
into
mov
in
shrb
xchg
xor
iret
sbb
das
sub
adc
in
in
cmp
and
out
pop
into
adc
test
mov
dec
mov
sbb
lock
jb
notb
pop
pop
xchg
clc
je
mov
jb
xlat
stos
arpl
pop
adc
rcrb
and
mov
aam
daa
cltd
popf
insb
stc
mov
jae
sahf
push
sbb
cmp
mov
pop
push
or
sub
push
out
je
jno
ficompl
jne
jno
addb
dec
int
and
pop
sbb
mov
iret
fucomp
adc
xchg
fisubl
cwtl
and
jne
gs
or
mov
out
lea
lret
cmp
sub
aaa
in
push
sbb
add
int
dec
fwait
push
cs
sbb
mov
loop
mov
add
mov
jno
xlat
ficoms
lret
or
push
repnz
cmpsb
dec
jno
aas
and
pop
mov
out
aad
lret
and
xchg
data16
jne
cmp
or
pop
js
subl
imul
or
add
xchg
pushf
imul
fcompl
xor
jae
inc
jle
pop
mov
lock
std
mov
in
outsb
xor
clc
adcl
adc
adc
sub
into
push
cmp
addr16
xor
xchg
or
mov
outsl
mov
loop
in
sub
mov
pop
xor
dec
pusha
test
out
outsb
fadd
mov
sub
pop
in
in
xor
fdivrs
popf
imul
je
cs
sbb
ret
outsl
mov
add
out
xchg
jne
repz
roll
jp
mov
and
push
cwtl
stos
mov
push
ja
jnp
xchg
fdivp
insl
push
dec
inc
imul
jmp
insl
rcrb
imul
pop
fistpll
in
ja
mov
loope
in
adc
xchg
sub
mov
outsb
stc
jmp
cmpsb
xchg
sbb
mov
pop
fdivs
mov
aas
jle
jae
jne
push
adc
popa
mov
mov
cmc
inc
mov
fs
or
ds
jb
sahf
sbb
pop
mov
fidivs
jae
adc
or
insb
sbb
insb
mov
insl
mov
mov
push
push
sbbb
mov
insb
sarb
icebp
in
inc
std
lcall
xchg
dec
mov
fadd
mov
or
cwtl
push
mov
push
jbe
es
jae
xor
rclb
pop
sub
addb
mov
mov
clc
shlb
std
loopne
add
sub
and
dec
into
fcoml
popa
mov
add
insl
adc
scas
add
push
inc
lea
mov
cmp
add
inc
jecxz
into
sub
cli
inc
test
mov
fisubl
idivb
jns
pop
js
pop
pop
repnz
lods
cwtl
aad
add
or
nop
cs
inc
cli
aaa
jne
enter
jmp
aam
lahf
dec
mov
cmp
xlat
add
stos
bound
mov
in
sbb
shrl
fs
out
test
inc
mov
rolb
sbb
lods
outsl
rcll
or
es
fldcw
pop
sbb
shl
cwtl
pushf
les
or
xor
or
mov
lds
mov
mov
test
add
lret
or
mov
mov
jbe
stos
or
xor
stos
and
test
std
clc
mov
mov
int3
mov
jl
aam
sub
bound
adc
mov
in
sub
jb
dec
cld
loopne
push
loope
test
sbb
lcall
xchg
imul
addr16
add
movsb
les
jl
sbb
negb
jmp
xor
cmp
movsl
sbb
dec
or
fadds
ret
push
lahf
test
int3
clc
xor
lds
shl
sub
pop
dec
pusha
mov
ja
cld
lahf
fcoml
xchg
cmpsb
in
mov
add
mov
les
xor
mov
repnz
sub
imull
les
ds
push
shlb
jo
out
mov
fstpt
cmp
mov
adc
mov
cmpsb
inc
mov
test
mov
cmp
ljmp
or
adc
jmp
arpl
xchg
adc
mov
cmp
lods
mov
lea
int
cmpsl
outsb
enter
mov
lods
std
add
loopne
jb
sahf
mov
add
xchg
add
out
sub
add
testb
jp
xor
xor
push
stos
in
outsb
test
negl
out
pop
mov
das
lea
mov
fstpl
outsl
leave
cmp
and
cli
jbe
and
rorl
lcall
or
dec
cmpsb
shrl
aam
pop
sub
popw
push
mov
fwait
out
negl
xchg
sub
cld
xchg
movsb
popa
pop
insb
int3
or
fldt
lock
fisttpl
xor
mov
hlt
add
imul
mov
inc
sub
jmp
pop
decl
aam
sbbb
movl
out
dec
mov
jg
enter
mov
add
loope
cmp
sub
test
and
mov
jp
pop
inc
jnp
repnz
sti
and
mov
scas
mov
mov
clc
xor
movsb
xchg
js
dec
les
mov
in
sahf
cmc
cmp
xchg
sbb
leave
lods
xchg
outsl
cmc
xchg
cld
xor
jle
idiv
lods
pop
cld
dec
repnz
mov
pop
push
js
into
arpl
js
pop
add
xor
jl
cmpsl
and
push
stos
shlb
or
adc
add
lds
mov
mov
jae
jg
mov
inc
mov
ret
mov
ds
cld
dec
lcall
aam
je
jns
sbb
int3
in
adc
xchg
test
xchg
das
add
inc
repz
cmp
jecxz
jo
shld
mov
out
mov
xor
sahf
mov
xchg
mov
mov
fstps
jge
xchg
mov
push
sub
shlb
out
sarb
lods
mov
push
add
sub
imulb
jmp
incl
test
fimull
add
cmpsb
mov
xor
pop
daa
testb
lcall
or
int
ds
into
or
lret
pop
adc
rolb
inc
lock
out
sub
jecxz
xor
ret
adc
jns
sbb
std
lods
dec
cmp
je
fst
dec
call
imul
lock
aad
push
in
jo
rcr
dec
lock
add
jno
out
notb
int
stos
or
pop
pop
aad
jnp
outsl
jb
pusha
stos
inc
jae
xorl
adc
adc
decl
test
iret
in
xchg
push
cmp
add
sbb
xlat
jmp
stos
lock
cli
cmpsb
out
clc
sub
sub
jne
cmp
loop
inc
popa
imul
cmp
shr
or
push
xchg
pusha
or
mov
dec
dec
or
clc
lahf
testb
mov
sub
xor
cli
dec
pop
mov
jmp
push
or
sub
out
pop
test
aam
lcall
inc
int3
jnp
scas
jne
sub
adc
mov
jge
pop
popa
xlat
push
or
xchg
daa
in
mov
mov
dec
imul
mov
sbb
in
cmp
jb
sarl
movsb
mov
xchg
ds
sbb
push
out
cmp
outsb
mov
xchg
lock
jne
sbbl
or
or
jg
rorb
sub
push
sbb
cmpsb
decl
cmc
repnz
add
pop
jg
out
push
mov
push
inc
fcompl
mov
addr16
and
push
add
mov
in
sub
pop
stos
sub
imul
pop
aas
jl
xchg
rol
push
dec
scas
mov
push
bnd
mov
xor
lea
and
fstps
push
scas
icebp
mov
aad
mov
cmp
lea
xchg
loope
les
mov
scas
das
call
leave
rcrl
xchg
or
push
scas
pop
lods
ljmp
sub
mov
mov
aad
enter
fs
pop
sti
jge
jp
jecxz
faddp
add
aad
test
add
cli
mov
fs
and
xchg
mov
and
aaa
js
add
mov
lock
lret
imul
or
fldlg2
imul
pop
sub
sarl
lret
gs
xor
addr16
mov
jno
enter
inc
cmp
mov
es
dec
pop
gs
imul
ljmp
daa
add
les
sahf
jle
je
cmp
mov
repz
jmp
mov
outsb
in
out
incl
inc
push
fstpl
cltd
push
scas
jge
rclb
cltd
xchg
loop
ret
pop
pusha
test
movsl
sbb
inc
insl
or
pop
faddl
mov
push
addr16
rcl
push
cmp
aam
jb
push
cmpb
ret
mov
hlt
das
mov
inc
mov
gs
cmp
aas
inc
setbe
mov
xchg
pop
fsubs
shrb
add
xchg
sub
inc
adc
xchg
jno
lret
mov
push
cmp
clc
sub
lret
lahf
jmp
mov
jns
ja
and
mov
lods
pusha
clc
and
and
mov
jle
movsl
add
enter
std
mov
pushf
cli
sbb
ja
mov
and
pushf
out
andl
cmp
inc
xchg
inc
pop
lock
pop
pushf
lea
mov
xchg
rcrb
lods
jmp
xchg
mov
rcr
fwait
sbb
lods
and
push
ret
pop
cmp
nopl
ret
dec
js
insb
xchg
xchg
mov
dec
in
stos
mov
insb
jge
jle
cmp
rorl
and
fsubrs
push
lock
sbb
push
sub
and
lods
aam
xchg
jp
or
push
push
vunpcklps
push
aam
mov
outsl
rcrb
ret
jg
sbb
stos
xchg
adc
or
sub
mov
xor
push
gs
cmc
stos
jne
aas
jno
xlat
xchg
push
in
paddusw
inc
mov
icebp
out
add
pushf
sub
and
out
hlt
test
sbb
ljmp
sub
or
js
mov
jo
cmp
jg
xchg
stos
sti
mov
xor
sbb
xor
add
sub
sbb
ret
lahf
mov
xchg
adc
or
inc
xor
sub
mov
pop
push
add
adc
ja
lds
jb
dec
rclb
add
fwait
sub
loop
stos
imul
mov
or
aad
xor
dec
addb
insl
or
xchg
push
mov
and
in
int3
mov
imul
sbb
inc
pop
cld
lret
cmp
mov
aas
xor
int
mov
sub
add
sub
xchg
mov
add
fisubrs
mov
lahf
sub
xlat
gs
xor
mov
adc
mov
shlb
or
mov
mov
ret
out
or
pushl
les
mov
jl
sahf
loop
pop
add
div
xchg
fwait
or
dec
dec
mov
ds
scas
test
jae
js
inc
push
mov
mov
popa
jle
gs
fiadds
dec
and
and
jnp
loope
insb
adc
push
push
sti
xor
xlat
clc
cmp
adc
cmpsl
pop
or
popl
mov
xchg
loope
popa
mov
lcall
sub
and
jmp
cmp
insb
mov
lods
out
addl
mov
add
add
cmp
mov
inc
mov
add
fwait
les
xchg
cmpsl
jecxz
xchg
pop
gs
in
dec
xor
mov
push
pushf
xchg
out
jo
mov
or
les
xor
vxorpd
jge
xchg
shr
mov
insb
mov
imul
adc
insl
jle
lods
loope
ret
and
loop
add
cmp
notl
xchg
push
dec
inc
js
inc
mov
fs
pop
or
in
add
jg
dec
mov
leave
pop
xor
and
pop
icebp
push
out
jl
xchg
sahf
push
and
into
mov
lods
shrl
xor
or
add
xchg
dec
mov
ror
inc
inc
sub
xchg
scas
jle
mov
or
xchg
mov
push
popa
ss
mov
adc
aaa
xor
movsb
into
push
sbb
fmuls
sarb
adc
xchg
repnz
pop
fistl
xchg
mov
fcmovnb
sahf
mull
adcl
add
jmp
mov
nop
dec
xor
add
xchg
adc
lret
jb
jp
mov
movsb
pop
fstpt
cmc
es
push
fucom
imul
imul
jmp
inc
and
mov
xor
inc
inc
dec
test
jl
adc
test
mov
jnp
inc
lock
rcrb
jmp
je
stc
in
rcll
push
out
imul
std
mov
push
xor
or
xchg
out
les
loop
xchg
push
pop
mov
fsts
in
scas
out
push
icebp
aaa
test
sub
jno
aam
sar
out
dec
push
adc
ljmp
mov
dec
rclb
fisubl
cmpsb
and
mov
xor
jne
in
out
adc
xchg
mov
mov
push
out
sub
stos
sub
jbe
arpl
in
push
add
shll
sbb
cmpsl
cmc
mov
stos
xor
pushf
and
cmp
call
movsl
inc
mov
imul
or
fsubr
push
inc
stc
xlat
push
std
or
ret
sahf
insl
mov
xor
xor
pop
mov
jg
movsb
je
outsb
push
xchg
mov
les
sti
pop
jae
xorl
mov
fsub
pop
cltd
mov
out
jecxz
out
iret
inc
nop
cmp
dec
xchg
pushf
inc
cli
mov
add
in
jge
outsl
pop
mov
movsl
xchg
sub
push
imul
mov
xor
lahf
xor
adc
cmp
pusha
pop
jae
addr16
inc
daa
cli
adc
xor
pusha
sbb
mov
scas
mov
sub
test
and
jg
lret
mov
fmulp
in
aaa
js
aaa
mov
aaa
inc
mov
jle
inc
mov
xchg
lods
dec
xor
mov
sti
ljmp
or
imul
jne
push
cwtl
in
push
push
push
out
insb
or
test
cs
ja
data16
xor
inc
and
jbe
in
mov
mov
ret
ja
mov
or
subl
outsb
test
imul
push
lret
idivl
sub
mov
dec
jp
pop
pop
cmpsl
hlt
std
mov
or
test
add
sub
movsb
stos
testb
out
xchg
fnstsw
test
imul
push
xor
mov
leave
cmp
test
scas
shl
cmp
xchg
dec
inc
mov
repnz
mov
arpl
sti
in
out
jae
mov
repnz
jecxz
push
cmc
pop
lret
push
or
sub
add
cmp
inc
aaa
jmp
push
loopne
cmp
jge
adc
arpl
fcoml
cmpsb
push
call
movsl
addr16
push
pop
dec
push
inc
outsl
out
roll
jo
int
subb
sub
mov
sub
je
jle
lcall
cmp
push
ret
lds
rcll
orl
xor
push
mov
loope
mov
aaa
fcmovb
or
lods
jmp
push
xchg
mov
bound
call
outsb
push
and
hlt
movsl
stos
rcrl
cmp
inc
mov
imul
add
dec
dec
and
loope
adc
sbb
lret
out
lahf
lods
fucompp
and
out
sbb
pop
mov
subl
loopne
mov
jge
sbb
add
xchg
out
jae
xchg
jno
or
inc
addr16
adc
sbb
inc
xchg
stc
sub
xchg
or
aaa
stos
inc
jno
iret
cmovl
aaa
loopne
lock
cwtl
cmc
addr16
test
dec
add
xchg
adc
lret
ret
mov
dec
leave
imul
les
loope
stc
xor
ljmp
aaa
cmpb
or
pop
push
movsl
pushf
outsb
js
push
xor
xlat
push
outsl
pusha
or
mov
and
gs
xchg
push
pop
or
xor
sbb
inc
sarb
int
lret
out
jp
cld
jbe
stc
cmp
lds
fmuls
jecxz
pop
sub
push
push
aad
das
sbb
pushf
xchg
cwtl
jbe
xchg
push
insb
popf
jl
dec
test
pop
shlb
push
sarl
sbb
scas
dec
loopne
mov
or
pushf
lcall
ja
sbb
ds
mov
fs
imul
loop
cmp
push
push
or
leave
popa
and
xor
daa
pop
out
push
jmp
jmp
testl
dec
push
rcrb
cmp
cmp
cli
sub
into
jae
inc
inc
dec
mov
rolb
jo
add
adc
sar
imul
or
repnz
adc
inc
ret
jae
and
mov
mov
inc
pop
out
jns
test
jmp
or
loop
inc
outsb
xor
mov
xor
dec
xchg
xchg
ret
push
shll
add
inc
jno
jne
xor
adc
mov
inc
pop
fildl
cmpsb
mov
repz
xor
pusha
add
aad
cmp
nop
and
aam
sub
cs
fucom
sub
inc
push
jl
or
sar
stc
test
mov
and
iret
xchg
pop
out
in
sbb
jne
adcb
lock
aam
scas
push
negl
adc
sub
fst
imul
lahf
dec
fs
das
adc
xchg
pushf
xlat
and
test
stc
sbb
lock
movsb
jl
sbb
mov
es
mov
sub
hlt
mov
push
xchg
mov
push
mov
or
clc
lcall
addb
push
outsb
mov
pop
sar
jno
ljmp
mov
xorl
xchg
cld
stos
test
jmp
xchg
lea
repnz
stos
jae
lock
dec
in
lcall
aam
js
push
pop
push
push
xor
notb
aam
das
sub
roll
add
test
das
ret
xchg
add
push
mov
aad
inc
fnsave
out
mov
sahf
mov
sub
dec
and
rolb
or
add
jo
sub
push
and
pop
xchg
cmpsb
popa
inc
ret
mov
inc
add
add
mov
jnp
pusha
sub
loop
lods
xlat
inc
mov
repz
add
push
cli
imul
mov
inc
loopne
inc
add
inc
pusha
out
pop
leave
add
cmpl
mov
hlt
icebp
mov
repnz
or
es
loope
dec
mov
xor
pop
inc
test
int3
movsl
add
fnstenv
insb
jle
out
jle
add
stos
in
xor
and
test
mov
rorl
cmp
repnz
rcrb
push
sbb
pop
pop
pop
mov
jbe
adc
xchg
inc
xor
lcall
jg
fidivrl
fdivl
insb
and
gs
aas
mov
mov
addr16
inc
sbb
lock
xor
enter
fistpll
mov
add
int3
pop
stos
adc
xchg
movsb
inc
mov
xor
mov
nop
pop
lods
jo
lret
jbe
sbb
mov
fisttpl
call
mov
rcrl
idivb
and
xchg
mov
cmp
sbb
xchg
add
or
arpl
or
add
fbstp
pop
stos
dec
add
icebp
mov
push
xor
pop
data16
in
xchg
cmc
stos
xchg
mov
lahf
inc
mov
in
movsb
cmp
aad
adc
sbb
jbe
dec
xorl
sbb
mov
cmp
test
xor
adc
mov
aad
sbb
decl
mov
das
inc
mov
mov
repnz
sub
adcl
jb
add
pop
push
jle
icebp
lahf
lods
push
jge
mov
pop
and
lods
cmp
out
push
xlat
movntps
mov
in
jge
mov
stos
jle
push
jne
cmp
lds
inc
leave
fmulp
rcr
shlb
sbb
cmc
sub
neg
cmp
jg
cld
jbe
sub
pop
repz
popf
mov
insl
or
dec
adc
aas
mov
jg
mov
inc
push
xor
sahf
int
dec
push
lea
pop
xchg
cld
in
in
adcl
cmp
xor
jno
push
xor
mull
or
add
ficompl
shld
shlb
push
fistl
stos
cmp
pop
outsl
xor
jmp
inc
mov
aaa
mov
mov
ja
or
xchg
aas
pop
leave
repz
lret
and
jb
and
lret
icebp
fistpll
aam
jmp
mov
int
sbb
mov
push
mov
cmp
shl
and
cltd
popf
out
loopne
mov
std
jo
inc
adc
pop
or
jg
mov
push
rclb
push
xchg
in
ds
popf
pop
int
mov
outsl
aaa
mov
xor
ljmp
ret
xorl
pusha
pop
push
xlat
adc
cmp
ss
into
dec
push
fwait
add
push
js
clc
aam
dec
outsb
dec
imul
jae
fsubl
cmp
lea
add
aas
aaa
test
scas
subb
jo
sub
mov
test
imul
push
mov
int3
pop
sub
mov
sub
dec
mov
push
inc
mov
lahf
or
and
ds
xor
jecxz
call
lahf
cld
mov
xlat
nop
dec
aaa
mov
mov
gs
punpckhwd
movsl
pop
pop
nop
test
xor
xor
imul
popf
cmp
add
or
cmpsl
sbb
fbstp
mov
sub
jns
mov
in
mov
cmpsb
fsub
loop
cwtl
lods
and
fdivrs
xchg
stos
jns
hlt
pushf
repnz
xor
and
sbb
inc
hlt
jg
and
mov
mov
push
jmp
push
sbb
sub
cld
cs
movsl
dec
fnsave
mov
pop
and
xor
fdivs
sub
inc
cld
out
jns
shl
adc
xor
stos
loope
lock
mov
mov
xor
aas
enter
adc
bswap
fldenv
pop
dec
aaa
scas
xor
xchg
test
jecxz
jmp
xchg
cld
mov
mov
and
mov
pop
cwtl
jb
subl
pop
mov
mov
and
mov
push
add
add
jg
inc
mov
and
push
mov
dec
fisubrs
or
icebp
or
lods
inc
ret
fsts
movsb
daa
aad
jnp
sbb
dec
jae
data16
pop
pop
movsb
outsb
inc
bound
ss
or
pop
fldt
aam
rcrl
inc
sub
lock
mov
dec
xchg
cmc
jo
dec
out
jo
cs
xchg
sbb
push
test
dec
jae
and
pop
dec
xor
or
aad
adc
ret
jb
lret
sbb
fsubl
dec
in
es
mov
cmp
pop
jecxz
pop
jecxz
pop
pop
or
imulb
jbe
xor
dec
stc
and
adc
in
xor
xchg
mov
mov
addr16
dec
adc
xchg
and
pusha
aaa
jo
js
out
out
and
cld
fistps
ss
sub
mov
mov
xor
stos
imul
inc
sub
jo
pop
mov
aaa
dec
mov
imul
cmp
push
mov
aaa
push
out
sbb
out
jmp
in
pop
cmpsl
mov
xchg
jmp
push
pop
add
sub
orl
mov
cmp
pop
ss
sub
jle
rorb
fistpl
fs
or
lds
sbb
lods
call
lds
sbb
sub
lret
sahf
xor
fcmovnu
jge
or
cld
add
adc
arpl
shll
test
orl
mov
mov
shlb
pop
aas
nop
push
jecxz
clc
clc
inc
jne
xchg
shr
es
adc
push
dec
mov
imul
mov
sub
cmp
sub
cmp
dec
sarl
jb
push
ss
ficompl
pop
dec
mov
or
xchg
in
dec
out
in
cmp
out
into
push
or
ret
je
ds
in
push
cmp
mov
les
sub
push
rclb
rcrb
hlt
and
xchg
inc
lods
test
mov
aas
int3
pusha
movsl
shll
lods
or
jmp
adc
add
call
mov
pop
inc
adc
mov
imul
push
fistl
dec
pop
lock
clc
lcall
sub
sbb
in
jecxz
jb
sbb
sti
mov
dec
adc
push
sbb
test
mov
fiaddl
scas
leave
push
lods
fstpl
daa
push
aad
outsl
jns
bound
xchg
les
mov
jne
cmc
jge
clc
push
or
movsl
rcll
in
popf
sbb
adc
dec
repnz
imull
movsl
int
push
lods
sbb
xchg
dec
xor
mov
jecxz
jne
adc
cmp
pop
dec
mov
out
stc
mov
sbb
mov
cmp
out
mov
call
lods
lret
adc
pop
fwait
int
mov
xchg
pushw
or
sbb
xor
xchg
cmpl
leave
mov
std
pop
stos
mov
inc
fiadds
mov
aam
cld
dec
push
in
mov
cmp
mov
jmp
aaa
movsb
es
mov
arpl
jmp
es
rdpmc
scas
test
jge
fsubrl
cmp
clc
lahf
mov
cli
gs
loopne
mov
out
add
call
in
ss
and
or
outsb
test
jmp
into
popa
xchg
dec
add
in
mov
push
nop
pusha
or
jae
and
das
xor
paddw
sbb
or
pop
fstpl
jg
add
sbb
jnp
pop
aaa
jns
loop
stos
scas
ret
push
nop
cmpsl
loope
adc
stos
mov
cmp
cmp
fsts
xor
test
shlb
cmpsl
sub
push
fsubp
push
movsb
cmpsl
dec
lret
adc
sub
adc
outsl
adc
and
cmp
subps
push
iret
loop
aam
test
loop
jge
lock
lock
push
jo
fs
nop
cmp
les
cmc
out
mov
insl
out
nop
cmc
lods
pop
jecxz,pn
idivb
dec
shll
sub
push
popf
mov
hlt
pop
or
jl
push
mov
push
movsl
outsb
mov
dec
std
or
inc
sub
dec
stc
mov
fwait
mov
scas
daa
pop
mov
lds
add
xor
lret
popa
pushf
in
sub
push
sbb
lds
pop
push
popa
push
pop
xor
mov
bound
loop
daa
jns
movsl
lret
outsb
enter
shrl
jo
inc
in
lock
fisubrl
add
dec
dec
fadds
push
jle
orl
cld
xchg
and
xor
add
sub
mov
repz
in
popa
xchg
jge
fstpl
xchg
jge
cmp
mov
inc
mov
test
add
aad
pop
daa
jg
push
out
sub
call
mov
ss
sub
push
negb
mov
mov
sahf
mov
jbe
gs
or
mov
fistps
movl
push
push
fwait
jne
in
jno
ret
push
call
ss
insl
sub
repnz
inc
or
ret
push
repz
bound
xchg
inc
pop
xor
add
mov
bound
push
sbbb
ljmp
lock
pusha
icebp
cmpsl
insb
test
dec
sub
in
sahf
add
adcl
sub
bound
dec
inc
out
and
bnd
mov
jge
xor
mov
jb
xor
jns
cs
scas
pop
leave
pop
lock
sarl
lods
aad
gs
mov
movsb
adc
lods
addr16
xlat
data16
xor
scas
leave
push
push
pop
mov
sbb
mov
shrb
mov
mov
movaps
push
lock
mov
mov
je
dec
lret
rclb
pusha
xchg
xor
gs
dec
loop
dec
mov
add
insl
stc
test
jns
stc
jb
push
stos
xchg
mov
adc
xchg
mov
out
and
pushf
or
xchg
push
in
in
ficoms
ja
jns
sti
dec
popf
shr
jo
and
addr16
incl
sub
inc
cwtl
add
addl
loopne
cmc
cmp
insb
std
sub
cmpsb
dec
push
mov
and
and
out
push
out
out
push
rcrb
call
mov
cmc
xchg
pop
push
inc
adc
imul
push
std
xchg
mov
cs
push
push
out
pop
cmc
sahf
mov
orl
addl
mov
xor
test
movsl
push
stos
mov
ffree
bound
and
adc
mov
mov
mov
xor
push
push
lods
je
test
jmp
pop
pusha
aaa
jge,pn
aaa
in
test
pop
pop
sub
rorb
dec
scas
int
arpl
lcall
add
jbe
iret
in
or
xchg
xchg
das
cmpb
sbb
imulb
sub
adc
and
inc
mov
jno
ljmp
out
lock
ret
adc
adcb
inc
out
push
aad
out
jne
test
adc
inc
xchg
cli
or
mov
in
xor
and
mov
adc
ds
or
xor
sbb
mov
loope
push
xchg
lret
bound
adcb
inc
jbe
xchg
rorl
stc
mov
xchg
pusha
dec
add
cli
lea
lea
push
xchg
jbe
mov
sub
gs
outsb
aad
ds
in
mov
cmp
cmp
insb
inc
or
repnz
and
shrb
inc
mov
mov
sub
aaa
sahf
xlat
and
fistl
data16
sbb
adcb
ret
mov
into
stc
das
push
add
cmp
adc
jbe
xchg
jbe
lret
xchg
xor
sarb
rol
scas
rol
push
scas
adc
push
xor
sub
inc
sbb
or
fsubr
pop
sub
sbb
and
cmp
out
sub
inc
dec
loop
shl
jno
ss
fdivr
dec
inc
in
adc
lock
sub
loope
push
cmp
cli
movsb
sbb
fcompl
stc
or
add
pop
mov
lsl
negl
sti
mulb
push
fisubs
pop
js
fisttpll
loope
add
pop
sarl
mov
test
sarb
add
into
xlat
jo
movl
lret
pop
lret
dec
fld
lret
push
pop
and
mov
cmp
cmpsl
push
outsb
daa
xlat
out
lahf
in
jg
stc
call
push
nop
stos
notb
mov
add
pop
leave
insl
sub
lcall
rcrl
push
dec
out
lods
data16
mov
pop
stos
aam
jle
inc
jno
adc
dec
jno
pop
scas
xchg
add
mov
fistpll
jnp
movb
push
sub
xor
xlat
mov
icebp
jns
adc
mov
or
hlt
dec
notb
xlat
sub
push
pop
lds
mov
dec
mov
xor
xor
movsb
test
or
sub
cmp
jbe
fdivrl
call
jne
das
leave
loopne
mov
xchg
imul
iret
fs
push
daa
add
ret
inc
jnp
sub
jno
jl
sbb
inc
nop
test
or
pop
xlat
xorl
fisubrs
inc
cltd
imul
cmc
enter
or
jne
cmp
pushf
stc
cli
mov
ljmp
sbb
cmp
dec
mov
mov
jae
repnz
adc
enter
sub
prefetchwt1
push
pop
mov
cltd
out
jg
mov
popf
cmc
push
movsl
xor
jb
xor
test
mov
jb
mov
call
jle
sbb
adc
jecxz
aam
sub
adc
negl
pop
push
push
sarb
in
inc
pop
and
ficomps
int3
push
mov
hlt
test
icebp
jo
shll
jno
and
out
decl
ret
jo
aaa
pop
mov
mov
aas
cmc
fs
cld
shrb
or
jge
push
and
jle
mov
and
clc
or
insl
dec
lods
or
pop
adc
ds
mov
mov
sub
push
enter
in
jecxz
sbb
pop
add
xlat
cmc
fidivl
cmc
jae
xchg
mov
clc
pop
aas
push
jne
sub
mov
ret
aam
jg
aas
cmp
fs
xor
aam
ret
insb
inc
cmp
mov
shl
insb
jecxz
mov
aaa
pop
adc
addl
insl
fidivrl
scas
push
xchg
jge
clc
cltd
lods
jmp
xchg
pop
jae
sub
xchg
dec
pop
fnstcw
and
mov
call
pop
rorb
lret
adcl
xchg
and
push
xor
repnz
sarb
ja
cmpsb
jbe
push
xchg
xor
lahf
xchg
mov
jl
fs
cmp
jb
xor
push
dec
cwtl
lods
test
mov
fnstsw
cwtl
jle
push
scas
enter
outsb
jnp
xor
jne
sbb
popa
push
ret
addr16
jb
cmpsb
push
add
mov
push
dec
mov
ss
adc
cld
add
sub
inc
imul
xchg
dec
fwait
push
push
cmp
les
scas
sahf
sbb
test
fcomps
test
mov
xchg
popf
mov
outsl
and
cld
dec
mov
fcompl
arpl
inc
or
and
bound
fists
jns
ret
pop
xor
mov
xchg
cmp
arpl
jg
pop
fnstcw
and
mov
adc
pop
push
cld
xor
sbb
test
xchg
jge
and
inc
mov
sbb
ja
cmp
jge
cmova
adc
cmp
xor
stos
mov
scas
pusha
jge
mov
sbb
sub
aad
dec
popf
and
cwtl
ret
inc
jle
pop
pop
aas
mov
add
loop
sahf
mov
and
push
aam
bound
adc
add
mov
les
fs
dec
dec
mov
add
mov
mov
lcall
loop
cmp
sub
loope
pop
pop
inc
rcll
mov
adc
push
jo
js
dec
xchg
nop
frstor
and
in
imul
add
dec
or
mov
dec
fdivs
sbb
daa
movsl
push
push
sahf
movsb
xchg
mov
mov
aad
dec
divb
xorb
xor
sub
lods
xor
ja
mov
xchg
sbb
clc
ficoms
mov
sbb
pop
mov
push
inc
dec
rcll
bound
popa
and
cmp
push
jo
js
mov
push
sahf
notb
and
jb
fs
xchg
push
int3
push
inc
cmp
mov
imul
inc
inc
movsb
inc
fwait
push
fists
stc
fcoml
fimull
fisubs
js
push
or
and
fwait
sub
rclb
xchg
mov
mov
shl
movsl
push
xor
lcall
inc
push
push
pop
xchg
cmp
mov
flds
mov
lcall
aad
add
push
test
push
and
xor
sub
je
cld
xor
xchg
inc
dec
dec
pop
mov
inc
movsb
fldenv
jp
push
pop
inc
and
jns
test
call
push
call
frstor
cmp
les
or
xchg
inc
gs
pop
aas
cmpsl
fs
fsubs
nop
sub
repz
push
lods
mov
movsb
mov
test
inc
movsl
jecxz
mov
mov
addl
pop
jae
inc
mov
adc
in
sbb
pop
pop
outsb
movsl
jecxz
xchg
cli
fs
js
xchg
sub
clc
or
pop
and
test
inc
push
mov
inc
cmp
call
outsl
in
je
retw
mov
jmp
negb
jae
enter
out
jns
cmpsl
xchg
xchg
and
pop
bound
aaa
movsl
popf
js
les
aas
sti
sahf
test
cmp
mov
gs
cmp
mov
rcrb
ffreep
pushf
mov
inc
mov
neg
pop
rcrl
xor
invlpg
aam
jb
insb
sbb
or
pop
xor
sub
xchg
xorl
dec
dec
sahf
stos
pop
jae
mov
push
sahf
add
pop
adc
rorb
adc
jo
push
test
cmc
bound
in
pusha
leave
push
and
cld
add
ds
les
add
adc
pusha
test
cmc
fwait
sbb
lcall
test
mov
cmp
add
sbb
push
fldcw
jbe
sbb
in
push
lock
mov
call
stos
divl
mov
adcb
push
or
fadd
pop
shlb
push
cmpsl
jecxz
mov
sub
pusha
bnd
out
pop
jge
jb
xor
add
popa
mov
je
imulb
xlat
cmp
mov
test
test
lahf
jp
cmp
inc
subl
xor
pop
pusha
dec
mov
stos
ljmp
aaa
stos
std
sbb
imul
scas
add
sbb
lcall
cmc
xchg
jb,pn
jg
decl
sbb
or
dec
subb
dec
repnz
mov
jp
sbb
sbb
dec
cs
push
clc
repz
outsb
imul
pop
sbb
pop
insb
lock
pop
add
cmc
jg
jge
xchg
mov
addr16
mov
cltd
push
lods
rclb
inc
out
aam
push
mov
ja
je
test
mov
popf
mov
and
nopl
es
adcb
cmpsb
mov
enter
add
jmp
lods
cmp
add
orb
test
or
push
orl
stos
mov
push
repnz
cld
pop
gs
or
fsubrs
pop
insl
cli
mov
xchg
sbb
cmp
test
cmpsb
push
pop
mov
sub
subb
sbb
pop
cli
add
mov
sbb
mov
clc
mov
push
loop
add
out
mov
test
sbb
mov
imul
push
das
mov
iret
das
loop
out
and
mov
cmc
inc
imul
shll
push
pusha
and
sbb
fdivrs
out
inc
push
das
sarb
sbb
into
inc
jb
and
andl
sub
out
int3
lret
das
xlat
into
mov
push
mov
scas
sub
jne
icebp
clc
rcr
pusha
cmp
shll
imul
mull
fwait
stos
mov
fldt
enter
pop
mov
ret
out
sti
es
out
and
mov
aam
ret
adc
inc
xchg
add
and
dec
cmp
or
xchg
cld
loop
addb
icebp
mov
popf
idiv
sahf
dec
push
dec
inc
push
and
inc
les
ljmp
mov
inc
fstps
arpl
jnp
mov
cmp
xor
mov
js
test
xchg
xor
cmpsb
adc
mov
test
repnz
add
sub
xchg
dec
dec
adc
nop
mov
push
lahf
adc
xor
icebp
fistpl
add
test
in
sbb
cmp
out
sub
jbe
aaa
mov
addr16
jmp
sub
shrl
cs
jmp
jmp
push
test
jb
xchg
test
decb
and
mov
cld
pop
out
add
loope
lds
mulb
jo
or
fldl
inc
sub
sub
xchg
push
jle
add
cmp
lcall
testl
and
data16
int3
xor
out
xchg
loop
das
and
outsl
mov
cmp
cmp
lea
xchg
sbb
mov
cmp
jae
outsl
mov
push
les
stc
cmc
andb
add
lcall
shlb
je
push
cltd
aaa
imul
popf
cli
sahf
sub
cmp
js
inc
in
imull
xor
push
lret
jl
lods
lods
or
pop
xor
add
inc
popa
pop
sbb
jbe
and
xlat
push
je
cmp
rolb
lret
lret
lret
lret
sbb
ljmp
mov
or
add
out
xlat
cmpsl
jge
lret
inc
inc
das
in
sbb
aas
les
inc
jp
cwtl
pop
pop
je
mov
aam
pop
lcall
int3
push
sbb
sbb
imul
jo
insl
sub
outsb
cmp
pusha
xchg
es
icebp
xchg
nop
xlat
fsts
lea
jge
ljmp
mov
or
and
insb
lret
cld
push
xchg
fisttps
cld
cmpsb
inc
adc
les
pop
and
mov
inc
add
stos
dec
gs
sbb
xchg
mov
or
mov
mov
rorl
leave
mov
mov
or
xchg
scas
xor
xor
in
out
loopne
pop
sub
sarb
divb
into
mov
or
add
add
push
int3
ljmp
sbb
inc
aaa
outsl
icebp
inc
mov
in
pop
xchg
gs
and
add
dec
aad
or
push
notb
aam
pop
xchg
push
dec
and
pusha
icebp
ret
aas
sarb
aad
sub
sti
and
sbb
fists
aaa
sbb
add
dec
stos
sub
cmp
push
inc
ffree
scas
dec
or
and
pop
xchg
lret
mov
mov
push
subb
xchg
adc
dec
xchg
jmp
fdivs
xlat
or
imul
sbb
pop
jp
cli
xchg
jmp
popa
daa
out
outsl
inc
sub
xchg
jle
shrl
fisubl
jnp
xchg
insb
ds
pop
dec
dec
jg
fcompl
push
fwait
xchg
push
xor
loop
sub
lods
aam
mov
dec
and
jo
pop
and
jge
outsb
test
and
sahf
ds
nop
lcall
sub
movsb
xchg
stos
or
outsb
cmc
cli
inc
and
scas
test
js
add
jp,pn
jl
cmp
shll
dec
insl
push
es
xchg
mov
mov
xorl
xor
ljmp
jbe
jp
es
imul
imul
mov
loope
pop
sahf
hlt
pushf
nop
mov
adc
add
dec
dec
cmpsb
in
ficoml
push
rolb
cmp
jae
out
pop
ficomps
or
xlat
movsl
mov
sbb
outsl
xor
in
sbb
jns
pop
xchg
jns
xlat
stos
sti
pop
inc
xchg
jne
mov
repz
push
adc
inc
cmpsl
ja
aam
test
cmc
xchg
ret
dec
mov
add
jge
xchg
or
addb
loope
stos
dec
pop
mov
xchg
mov
scas
movsl
or
fwait
dec
push
jo
mov
push
lods
dec
push
movsb
test
clc
push
ret
mov
scas
xchg
or
mov
mov
lcall
outsl
aad
sub
lcall
fisubrs
movsb
das
fwait
lcall
dec
xchg
sub
jb
ds
pop
lahf
fidivrs
pop
mov
jg
inc
mov
push
cmp
cmpsb
mov
inc
push
out
mov
mov
lea
arpl
jmp
sti
and
int
addr16
aas
imul
sub
mov
sub
data16
sbb
dec
and
fldt
out
ja
sbb
addl
faddl
pop
out
mov
pop
sbb
mov
jo
out
jg
mov
fstps
scas
addl
adc
mov
adc
imul
ja
jmp
sub
pop
bound
jns
jmp
mov
std
out
push
or
cmp
lcall
pop
jmp
sub
loope
notl
mov
or
xchg
lock
or
add
xchg
mov
out
cwtl
ja
fisttpl
sarl
sub
adc
dec
push
jge
ret
sbb
mov
xchg
out
jge
jbe
lods
insb
incl
jb
je
mov
ja
ja
sub
fists
clc
jb
mov
push
dec
xchg
pop
scas
pop
jno
xor
or
push
push
dec
insb
xchg
push
nop
pop
mov
push
insb
inc
scas
mov
ds
lret
xchg
mov
or
xchg
xor
xchg
insb
sub
and
jecxz,pn
outsb
fistpl
shrb
mov
out
jmp
rcrl
xlat
xor
mov
call
xchg
push
mov
aas
gs
cmc
add
test
xchg
pop
xor
sub
lahf
pop
pop
dec
dec
jl
and
push
xchg
jns
and
mov
outsb
sbb
cmpsl
dec
pusha
xor
cmp
iret
inc
and
icebp
mull
cmp
arpl
push
mov
rorb
push
out
fisttps
xchg
adc
mov
test
stos
lret
sbb
daa
in
pusha
sub
adc
ja
fdivs
pop
mov
sub
stos
pop
push
sub
mov
sbb
cmp
outsb
ljmp
outsl
pminub
test
cld
out
in
aaa
jp
inc
cs
mov
or
jae
jmp
mov
mov
mov
push
int3
pop
xor
adc
jo
sub
pop
out
jg
sub
pusha
loope
adc
dec
cmp
push
pop
dec
loope
pop
jbe
and
mov
imul
loope
push
mov
xchg
jnp
fisttpl
int
popa
in
xchg
fisubs
push
xlat
out
push
xchg
jae
sbb
int
pop
adc
in
mov
push
mov
gs
mov
rcl
sbb
inc
shlb
xor
pop
ret
pop
aad
movsb
or
aas
sbb
loope
or
jp
mov
jns
cli
fs
mov
cmp
repz
scas
push
cmp
in
or
mov
movsb
push
xor
lcall
xchg
mov
dec
scas
xor
jno
in
add
jno
jmp
inc
and
test
add
movsb
lods
inc
push
xor
fisubrl
xchg
inc
xchg
imul
loope
imul
sub
pop
push
jl
mov
aas
lods
test
icebp
mov
sbb
pop
je
cmp
ja
add
mov
mov
dec
sbb
out
cwtl
xchg
scas
lock
xor
data16
push
clc
vshufps
out
sahf
pushl
xchg
sub
fnsave
rolb
pop
or
in
or
xchg
inc
pop
adc
push
aaa
stos
cmovne
dec
fsubl
shll
out
subb
out
jbe
adc
in
push
rcll
movb
jl
loop
and
jns
or
lea
and
addr16
cwtl
cmp
push
call
movsb
add
mov
jne
pushf
cmp
xorl
aas
js
loopne
jbe
jae
ret
mov
outsb
sahf
jb
stos
repz
adc
paddusw
cmp
mov
mov
inc
bound
dec
divl
push
divb
shll
xchg
push
mov
or
and
sbb
xchg
add
inc
roll
adc
pop
out
hlt
mov
or
nop
xor
movsl
or
test
adc
inc
outsb
cmp
and
pop
dec
fdiv
pop
sub
into
test
cli
ret
xchg
mov
add
sub
popa
mov
mov
imul
mov
jns
mov
ret
inc
sub
ror
test
sbb
push
lods
sub
popa
incb
push
jp
insb
jns
out
jns
add
lahf
dec
adc
test
jle
adc
imul
xchg
mov
lock
lods
pop
jae
cmp
out
mov
dec
int3
sub
test
flds
into
push
dec
dec
insb
orl
call
out
das
test
and
insl
mov
stos
add
test
push
push
lcall
out
repz
adc
push
mov
ret
imul
adc
enter
inc
iret
rcrb
inc
stc
inc
jno
nop
pop
pop
rclb
mov
dec
and
dec
xchg
sbbl
jo
leave
mov
add
nop
or
ljmp
and
fnsave
lds
mov
add
popa
out
iret
fisttpll
lcall
loop
mov
pop
mov
mov
xlat
into
es
add
hlt
popa
movsb
lcall
movsl
sbb
dec
js
es
les
mov
cmc
mov
dec
je
rcll
add
pop
adc
flds
mov
push
das
xor
arpl
sbb
popa
push
sbbb
out
mov
inc
pop
push
jg
push
shll
out
fcmovnb
les
and
das
nop
in
jmp
bound
lock
inc
sbb
call
mov
es
test
lds
ljmp
movsl
xchg
ret
push
and
popf
jno
call
cmp
jae
andl
shrb
int
cmp
int3
js
dec
or
test
cmpsl
leave
sub
jae
cmc
add
mov
call
mov
jb
es
aad
push
inc
shlb
movsb
or
mov
and
jmp
std
mov
adc
lock
mov
pop
imul
test
mov
scas
shlb
fiadds
fists
adc
addr16
mov
fnstcw
mov
mov
data16
or
fwait
imul
jo
push
iret
mov
shrb
ror
cs
gs
icebp
pop
push
mov
test
imul
jp
std
orl
jb
arpl
or
jb
sub
adc
pop
inc
jecxz
popa
add
adc
and
stc
ljmp
jbe
adc
adc
ss
cmpsl
push
mov
pop
or
xor
std
shll
daa
ljmp
fldl
cmpsb
sbb
cmp
fwait
adc
sbb
ss
pop
push
mov
jl
arpl
enter
mov
lods
sbb
mov
jb
cs
ffreep
pop
mov
inc
xor
add
stc
inc
pop
repnz
inc
xchg
push
andl
push
and
mov
xor
std
sbb
int
outsl
xor
mov
jecxz
sub
addr16
out
and
jecxz
lcall
repnz
push
icebp
shll
mov
out
mov
mov
decl
daa
bound
push
movsl
lock
lds
and
dec
mov
lods
scas
icebp
adc
mov
add
dec
push
negb
mov
repnz
ficoms
out
jmp
icebp
mov
mov
stc
jp
xchg
mov
into
and
cmp
lret
dec
sub
add
addr16
into
cs
arpl
and
repnz
mov
scas
ror
jno
mov
popa
shrl
ljmp
movd
xor
sub
daa
cmp
in
gs
mov
lds
push
push
mov
cmp
jg
addr16
jbe
stos
ds
mov
jl
inc
mov
ljmp
sahf
sbb
pushf
push
inc
cli
cmp
inc
push
daa
aas
cs
mov
int
inc
adc
mov
cmc
mov
pop
js
push
in
test
dec
mov
or
inc
mov
jae
aaa
xchg
and
rorl
xor
idivl
add
add
mov
add
ret
pop
test
and
xor
mov
jns
in
mov
mov
pop
mov
leave
mov
cs
inc
sub
add
mov
xchg
sub
and
xchg
sbb
hlt
icebp
push
mov
push
inc
xlat
push
sub
sub
aam
sbb
pop
xchg
enter
scas
jl
inc
push
arpl
or
into
pop
push
mov
dec
jno
and
pop
orb
test
adc
mov
jb
sbb
push
ret
shl
lods
pop
fs
jns
test
mov
fwait
and
shlb
fs
push
jge
icebp
stos
xchg
jno
jg
sub
jmp
das
out
or
test
sarb
adc
cwtl
dec
sbb
jp
lret
ss
insb
xchg
fidivl
ret
jecxz
fwait
dec
sub
int
pop
ds
pusha
loope
jecxz
in
xchg
sub
fwait
mov
enter
xchg
sbb
mov
sub
fsubrs
mov
sbb
dec
int
daa
fcomi
test
cli
dec
movsl
scas
clc
shll
pushf
inc
rorb
mov
adc
dec
orl
mov
lahf
andl
push
je
ret
out
mov
ret
icebp
test
mov
pop
mov
xchg
sub
sub
pop
idivl
out
int3
loopne
addl
xlat
sub
movsl
fldl
inc
push
repnz
imul
fcompl
lods
mov
mov
mov
filds
popf
xchg
cmp
jo
inc
xor
dec
loop
xlat
or
dec
les
loopne
mov
js
mov
or
sbb
pop
loopne
push
xor
sub
sbb
aas
repnz
xchg
stc
arpl
xchg
lahf
mov
ja
cs
cmp
mov
xchg
lret
imul
fs
arpl
dec
pushf
jbe
orl
in
pusha
das
sub
jmp
xor
sarl
or
shlb
test
mov
add
idivb
inc
jl
jae
add
mov
cld
pop
outsl
pop
mov
aad
or
adc
mov
std
scas
clc
fwait
fs
dec
stos
cmp
sub
out
daa
jnp
adc
das
lds
pushf
pop
dec
inc
daa
dec
pop
cli
aas
leave
mov
push
notb
pop
ss
outsl
outsb
int3
les
ret
xchg
lods
fists
mov
pop
jle
lret
mov
cmpsb
cmp
out
sub
scas
xor
mov
mov
mov
jg
test
pop
pusha
shr
das
cmp
push
add
mov
js
movsb
push
insb
push
mov
sarb
gs
aam
sub
in
loopne
insb
sbb
cltd
jnp
push
jl
scas
inc
out
dec
mov
mov
xchg
and
inc
lods
mov
pop
imul
fnstenv
into
sahf
add
popa
nop
rclb
aad
cli
or
daa
sti
in
cld
ss
pop
xlat
scas
pop
add
lcall
or
cmp
pop
shlb
fimuls
dec
pop
jmp
call
adc
mov
aas
sub
jae
aaa
cmp
lock
adc
or
pop
scas
adc
inc
ficompl
xchg
mov
shl
clc
aaa
mov
fs
lods
jns
sub
xchg
sbb
fistl
sbb
shrl
cmp
scas
divb
arpl
dec
icebp
pop
pop
xchg
cmp
pop
out
movl
pop
mov
xchg
adc
jbe
shlb
hlt
sbb
xor
dec
mov
lods
pop
iret
repz
or
mov
xchg
out
and
fnstenv
or
je
sbb
or
repnz
cli
out
stos
iret
mov
je
push
mov
mov
pusha
sarb
sub
popf
daa
add
pop
call
cmp
pop
ljmp
pop
clc
cld
jge
repz
pop
mov
pop
pop
test
xchg
sub
ss
mov
cli
jnp
xchg
jecxz
cwtl
inc
das
ss
adc
je
sub
jp
pop
cmp
mov
push
jl
adc
pop
push
inc
pop
xor
es
inc
and
push
jle
loopne
xor
lcall
dec
push
cmp
jl
pop
xchg
js
testb
das
cmc
or
loop
jge
cs
aaa
orb
cmpb
push
and
fsubrs
sub
jg
cwtl
pusha
or
cmpsb
or
sbb
and
mov
jmp
lcall
test
push
into
lahf
in
and
jnp
leave
loopne
out
xchg
stos
adcl
mov
das
dec
jbe
aad
mov
jg
flds
push
jnp
push
aam
shlb
jno
mov
jne
jno
mov
mov
mov
dec
pushf
js
fisubrs
mov
lret
xchg
loope
and
stos
test
sbb
test
std
dec
pop
xchg
nop
xchg
loop
pop
cmpsl
push
sub
jecxz
idivl
shlb
aam
add
scas
add
inc
mov
inc
sti
aaa
mov
test
icebp
test
and
push
shlb
push
daa
mov
ret
jb
xchg
jle
sub
mov
test
cmp
fsubrl
or
add
xchg
and
mov
add
cmp
repz
jbe
mov
add
add
ficoms
test
mov
push
dec
pop
test
pop
xchg
iret
outsb
and
addr16
sub
inc
aas
jge
out
inc
adc
xor
push
push
test
test
sub
xchg
or
clc
inc
sub
sub
subl
jns
push
test
xchg
jae,pn
stos
loop
mov
cmp
popa
out
xchg
sbb
xor
lea
divb
adc
dec
test
std
adc
pop
xchg
mov
fwait
cld
cmpsl
mov
push
daa
rcrl
and
testb
lcall
pop
aad
mov
fildll
mov
adc
and
or
mov
mov
sbb
mov
pop
xchg
aam
add
push
mov
xchg
push
jno
scas
xchg
jl
cmp
jae
inc
fidivrs
adc
cld
adc
cmp
xlat
pop
or
shll
mov
addb
add
daa
insb
lods
push
out
fiadds
jbe,pt
add
mov
pop
lock
jmp
insb
je
jl
push
sub
push
scas
into
insl
mov
sub
test
dec
inc
shlb
mov
cli
xchg
mov
xor
add
mov
push
mov
dec
nop
jl
divb
lods
sbb
mov
jno
pop
add
js
mov
repnz
js
xchg
dec
mov
mov
sub
loope
js
aam
fists
aad
popf
std
jb
dec
loop
out
mov
loopne
push
gs
das
xchg
addr16
and
sbb
xchg
cwtl
int
pop
sub
inc
and
rclb
mov
sahf
mov
mov
ret
ds
je
jle
pushf
or
test
and
add
imul
mov
push
mov
xchg
scas
push
movsb
and
mov
stos
fisttps
les
sub
fistpll
fmuls
or
out
sbb
mov
or
test
jge
subb
or
mov
adc
push
popa
sbb
aam
xor
xchg
int
xchg
or
fcompl
sub
jne
loope
adc
mov
xchg
cmp
bound
or
push
mov
adc
es
mov
mov
ficomps
xor
dec
icebp
add
or
add
lret
adc
push
mov
jmp
fimuls
pop
mov
out
xor
jmp
mov
cmp
rolb
cmc
mov
in
loop
adc
ja
mov
cmp
jnp
inc
imul
cwtl
mov
clc
andb
mov
movsb
xor
imul
pop
int
sub
xor
cmp
aam
leave
ljmp
push
and
mov
in
call
imul
dec
rcl
imul
jnp
pop
inc
mov
cmp
xlat
xchg
jmp
adc
xchg
repz
daa
pusha
mov
mov
jnp
andb
cli
daa
stc
and
mov
mov
dec
push
pop
lea
jg
or
add
aas
inc
notl
inc
shr
adc
cmc
adc
pop
dec
cltd
mov
scas
sti
sahf
sbbl
mov
aam
push
fisttpll
enter
subl
aam
push
mov
sbb
repz
negb
lds
xchg
jg
mov
mov
cmp
ret
cltd
jo
mov
nop
sbb
pop
lock
dec
lret
add
movsl
push
dec
test
jne
xor
jecxz
sbb
outsb
rorb
sub
cwtl
add
jb
cli
nop
js
psubusw
jp
lea
xor
movsb
dec
sbb
push
js
lods
in
xor
jne
and
roll
outsl
notb
mov
mov
add
rcll
push
outsl
imul
aas
cmp
adc
cmpsl
push
ret
mov
add
lods
dec
sub
test
loop
ss
rclb
outsl
sbbl
lods
dec
xchg
xchg
nop
cmpsb
mov
repz
jmp
shl
int3
ljmp
adc
ficomps
dec
pushl
xchg
inc
and
sub
mov
cmc
movsb
mov
adc
cli
clc
pop
popf
mov
push
inc
sbb
test
mov
jmp
sub
xchg
sub
mov
fimuls
mov
aam
cmp
pop
sub
lahf
sbb
cmpsl
push
mov
popa
sti
pop
das
sbbb
mov
xor
sbb
dec
ja
mov
or
fwait
out
ljmp
mov
adc
shlb
fstps
ljmp
mov
stc
lods
pop
nop
lahf
or
dec
jnp
jle
into
enter
negl
push
xorb
in
mov
aas
imul
insb
sbb
rorb
xor
mov
or
mov
in
push
lods
scas
or
repnz
jge
or
sarb
imul
mov
add
jns
aam
jb
fmuls
inc
or
jmp
jmp
in
inc
sub
cmpb
adc
push
out
push
or
lods
or
lret
sub
push
and
cmp
das
fnstsw
ret
aam
dec
clc
mov
mov
jecxz
aad
icebp
ss
adc
jmp
pop
pop
mov
pop
cmp
scas
sbb
cmp
or
push
xchg
cli
push
mov
mov
mov
push
movsl
test
pushf
mov
jb
sub
push
and
imulb
addr16
mov
pop
shll
out
jno
inc
outsl
rolb
ret
mov
jle
dec
inc
popa
lcall
cmp
inc
lods
ja
sbb
add
mov
repz
test
je
imul
ja
fwait
pop
addr16
mov
push
enter
jne
or
repz
out
jb
push
jbe
scas
xlat
xor
iret
or
mov
jle
sahf
push
lods
aam
mov
sbb
push
sub
jne
lea
inc
cmpsl
jne
fistpl
jmp
movsl
push
add
scas
cld
add
mov
add
testb
or
stc
xchg
stos
push
sti
mov
ret
pop
sbb
sbb
cmp
sub
out
cmp
sub
sub
add
jmp
sub
lods
in
scas
scas
fimuls
les
mov
mov
lahf
add
loopne
inc
cmp
mov
push
inc
sub
sub
mov
test
pmuludq
cmpsl
jecxz
push
popa
adc
and
xchg
mov
xor
jnp
mov
test
push
and
xchg
mov
cli
pop
fcompl
repz
dec
cmpb
and
pop
enter
inc
mov
inc
dec
mov
rorb
icebp
xlat
std
pop
out
sub
xor
rclb
pop
jmp
xchg
mov
mov
pop
aaa
in
mov
ja
jge
ret
and
int3
int3
inc
es
int
lods
jne
add
mov
xor
lahf
ss
loope
nop
mov
test
ret
loopne
sbb
sbb
pop
shl
jecxz
jecxz
icebp
push
sub
aad
and
int3
in
bound
es
cmp
cmp
mov
mov
push
scas
mov
mov
mov
leave
inc
mov
jp
aam
mov
jmp
xchg
ss
inc
pop
test
orl
and
mov
jg
test
mov
add
loopne
pop
aam
push
lds
mov
xlat
xor
mov
imul
dec
in
dec
mov
lahf
mov
pop
popf
xchg
mov
sbb
rcr
fsubs
hlt
inc
xor
mov
inc
xorb
cmp
dec
fld
filds
mov
push
shrb
mov
sbb
jne
shll
loopne
jo
adc
or
insl
pop
jl
cs
dec
clc
adc
mov
dec
outsb
sub
rol
and
cmp
fisttpll
daa
cs
cmc
fiadds
cmp
pop
imul
and
sbb
out
imul
xchg
imul
in
sub
in
subl
mov
in
cmp
pop
pop
adc
pop
mov
adc
sub
adc
iret
leave
jb
lret
iret
sbb
sbbb
add
fcomip
repnz
inc
add
test
dec
adc
mov
mov
mov
fcmovnu
in
loope
mov
imulb
sahf
cs
insb
xchg
and
mov
jbe
pop
enter
pop
dec
cmpsl
test
mov
or
fwait
inc
xchg
lds
lods
adcl
or
inc
imulb
aam
aad
cmp
dec
jge
mov
cmp
jno
xor
or
ljmp
loopne
push
mov
shll
cltd
insb
xor
push
pop
fisttps
popf
mov
or
cmp
in
xchg
xchg
jle
ret
dec
lahf
lahf
fs
std
cmp
enter
addr16
pop
add
push
repz
flds
fstpt
sbb
push
mov
out
jl
push
outsl
jle
push
xlat
mov
repz
sti
popa
xor
push
sbb
rcr
aad
orb
in
push
push
adc
insb
in
jle
or
jb
and
jns
or
popf
pop
insl
mov
subl
dec
les
mov
or
dec
inc
cmp
adc
xor
and
jp
clc
mov
ret
cmp
int
hlt
cmpl
test
add
push
sbb
daa
cli
xchg
mov
aas
rcl
push
aam
call
jle
xor
mov
add
sub
fldcw
mov
movsb
rol
jle
loopne
mov
adc
or
out
lea
push
rcrl
mov
in
push
sub
cmp
test
shrl
imul
aad
cmovg
andl
stos
cmp
and
mov
sub
mov
repnz
frstor
inc
cltd
decl
std
jbe
mov
add
fadd
xor
sarb
mov
xor
push
dec
sub
dec
sarb
push
mov
adc
xchg
cmpsl
and
mov
cwtl
fisttps
cmpsl
pusha
push
movsl
push
add
sbb
mov
enter
sub
in
cmpsb
push
fdivp
xor
rcr
fadds
pop
mov
aas
adc
push
sbb
ret
into
push
pop
push
push
or
fwait
stos
out
stos
cmpsb
push
mov
xchg
lcall
xchg
lods
test
pop
sub
push
push
cltd
scas
ret
mov
loope
mov
mov
push
scas
aad
or
cltd
js
xor
notb
movsb
cmp
inc
rorb
dec
arpl
inc
jge
loope
sbb
or
sub
in
push
cmovnp
sbb
test
enter
or
sti
and
mov
xchg
lods
outsb
mov
outsb
mov
jb
mov
cmp
mov
sti
and
sub
xchg
cmp
repnz
scas
xlat
out
iret
dec
aas
and
xchg
fistl
xchg
sbb
jno
and
pop
js
push
and
mov
or
jl
xchg
mov
xchg
cmp
leave
lods
and
es
mov
lret
int
mov
push
adc
fwait
inc
lret
xchg
and
sbb
jle
scas
je
movsb
sbb
lahf
jns
out
or
push
and
mov
test
lcall
std
in
adc
fsubrs
lea
into
into
jecxz
adc
arpl
mov
push
lds
and
sub
loope
cmp
xchg
stos
mov
fwait
stos
lahf
faddl
inc
mov
das
pop
bnd
pop
adc
fwait
pop
adc
sub
and
std
ret
dec
mov
stos
mov
enter
arpl
in
xchg
push
sub
ja
mov
rcll
cmp
int3
mov
mov
fnstenv
inc
rorb
pop
out
hlt
pop
test
dec
jne
fsts
push
lea
mov
loope
sub
cmp
in
ret
insl
add
xchg
jo
jnp
adc
daa
pop
push
xchg
fs
shll
sar
shlb
xor
cwtl
pop
pop
jne,pt
scas
inc
xor
popa
xchg
pop
push
sub
mov
pop
sub
jbe
and
loop
adc
hlt
push
pop
cmp
pop
out
int
cmp
pop
adc
outsl
cmp
or
xor
sbb
mov
test
test
je
push
clc
adc
jo
mov
mov
roll
adc
jecxz
gs
out
loope
roll
scas
add
inc
stos
jno
jno
cli
outsl
loop
mov
mov
loopne
adc
aam
sbb
add
inc
cmp
sub
pop
dec
mov
xchg
cmp
insb
jp
xchg
cmpsb
add
sub
jle
cmp
js
js
push
dec
bound
sub
mov
stos
cmp
sti
fisubrs
dec
shr
popf
idiv
testl
pop
dec
pop
sub
imul
or
ficoms
push
jb
scas
andl
fadds
cmc
ss
and
mov
adc
and
push
lret
test
xchg
lret
lods
outsb
cmp
sub
lds
loop
fwait
cmp
jg
add
cmpsl
pushf
push
fadd
call
negl
aam
sub
pop
stos
insb
mov
sbb
popf
punpcklwd
cmc
mov
test
push
testl
leave
int3
pop
ja
xor
rol
mov
cld
mov
add
mov
sub
sbb
jo
sbb
mov
inc
inc
paddsb
lcall
aad
pop
adc
add
das
scas
jecxz
xchg
mov
into
insb
movsl
push
add
pop
cld
add
adc
movl
sbb
push
mov
aas
cmp
xor
pop
or
mov
clc
and
hlt
push
jecxz
mov
out
mov
xor
and
clc
nop
jg
and
movsl
jno
xbegin
dec
and
pop
push
je
mov
js
in
dec
dec
or
pusha
cmp
outsl
xchg
cmp
or
mov
sbb
inc
xor
dec
ljmp
ret
dec
in
mov
fldl
in
loop
sahf
insb
pop
mov
icebp
jns
or
std
and
sub
pop
lods
push
imul
cmp
push
xchg
lds
icebp
lahf
js
fnop
adc
and
xchg
inc
jmp
stc
rcrb
rcll
add
xor
adc
jnp
mov
jl
and
add
add
arpl
pop
aad
pop
repz
loop
lods
mov
jmp
push
or
mov
mov
mov
int
int3
icebp
cmp
aad
pushl
sti
jns
pop
mov
outsb
push
adc
cmp
jnp
jecxz
ds
ss
push
mov
call
or
lods
es
imul
push
push
fildl
sub
out
jno
inc
pop
xchg
lds
stos
sub
loopne
mov
aaa
push
or
cmp
and
jle
js
into
je
stc
test
fisubl
clc
aam
jne
aaa
cltd
test
and
push
lds
dec
jne
fistps
adc
orb
cmp
xchg
xor
int3
nop
push
imul
xor
rorb
push
cwtl
sub
andb
cmp
add
lret
mov
xchg
sahf
shlb
orl
aaa
fisttpll
stc
aas
movl
dec
push
jl
pavgw
mov
pop
inc
pop
ss
xchg
lods
fstpl
xor
xor
das
push
loopw
push
push
or
mov
xor
sahf
mov
add
lret
jae
mov
movsb
mov
movsl
add
mov
jge
xlat
add
lcall
out
ret
jg
hlt
mov
mov
je
ja
adc
sub
out
mov
inc
out
cli
push
mov
xor
notl
ds
loop
lds
test
add
mov
call
add
es
stc
icebp
repnz
xchg
dec
pop
inc
mov
pushf
mov
ret
shlb
dec
mov
mov
adc
inc
sahf
and
xchg
loope
xchg
xchg
fists
imul
mov
push
sbb
inc
push
cmp
sbb
add
andl
and
loope
les
in
mov
rep
pop
fwait
cltd
xlat
scas
adc
ret
pop
jmp
bound
xlat
insb
adc
shrl
out
dec
mov
jge
and
cmp
sbb
ja
inc
inc
enter
dec
inc
es
rolb
int3
adc
pusha
scas
jnp
push
push
add
lret
jge
pop
negb
mov
pop
shlb
xor
arpl
hlt
sti
insb
adc
xchg
and
jmp
sub
cld
int3
subb
lcall
lret
and
arpl
and
divl
in
gs
dec
inc
and
jle
or
insb
mov
mov
xor
sbb
mov
scas
mov
outsl
mov
inc
xchg
jb
dec
mov
hlt
rol
out
mov
test
adc
jl
stos
push
out
xchg
mov
push
sub
jecxz
shlb
sbb
mov
jbe
pop
push
out
pop
jmp
int
sub
xchg
arpl
mov
leave
mov
dec
add
imul
inc
popa
push
add
std
push
pop
insl
cmpsl
pop
push
js
mov
es
js
inc
shlb
cwtl
xchg
push
push
nop
push
movsl
pop
hlt
jae
add
popa
dec
xor
jae
and
push
mov
in
outsl
inc
xor
aam
push
xchg
jmp
sar
xlat
scas
pushf
xchg
movsb
data16
mov
mov
out
rolb
cltd
and
sub
xchg
in
test
xchg
jns
push
lahf
hlt
mov
ficoml
jne
data16
dec
lret
int
cwtl
xor
cmp
lret
mov
dec
arpl
std
pop
ljmp
les
lcall
push
test
xor
pop
fs
mov
fdiv
cmp
clc
mov
in
mov
jo
or
icebp
mov
lcall
inc
fdivl
inc
insb
adc
xor
and
inc
test
jae
enter
pusha
pop
inc
aaa
add
repz
lahf
addb
push
push
ds
jo
inc
xchg
repnz
call
int
fisttpl
in
push
into
pop
xor
scas
xchg
gs
and
jbe
mov
jl
cmc
xchg
add
inc
sbb
cmp
lea
in
pop
andl
lret
inc
jno
pop
in
adc
out
stos
loop
ficomps
mov
out
inc
inc
push
push
jnp
lds
xchg
add
jbe
ja
rclb
rcll
stos
push
mov
ja
insb
jb
test
in
fld
aaa
shll
or
push
div
xor
rcl
mov
mov
cli
jno
adc
stc
testb
test
sub
cmp
shll
dec
push
stos
test
mov
andb
mov
mull
rcl
pop
sub
add
jbe
imul
insb
loope
rcl
jg
outsl
jnp
mov
call
in
pop
sbb
pop
pop
stos
mov
jg
push
pusha
cli
movsl
outsl
mov
shrl
imul
jns
outsb
enter
and
cmpsb
xor
lahf
cmpsl
shll
enter
add
jp
stc
jae
dec
int3
jo
xor
pop
inc
dec
sbb
mov
xchg
fidivl
pop
sub
outsb
and
shrb
cmp
jmp
dec
mov
sbb
jge
and
orb
or
cmp
jo
mov
leave
xchg
add
lahf
inc
sbb
inc
add
adc
or
jae
xchg
xor
outsl
insb
jnp
out
stc
lret
enter
ds
pop
xor
inc
mov
cld
ficompl
cmp
xchg
mov
into
or
aam
mov
jl
adc
in
jle
lret
sub
aas
mov
xor
push
incl
xchg
lds
insb
stos
aaa
xchg
lret
adc
fwait
aam
mov
inc
call
or
cld
mov
add
sub
or
cs
lods
sbbb
jp,pn
pop
mov
fdivrl
pop
stos
sti
add
dec
pop
rorb
xchg
pop
scas
xor
sub
roll
or
imul
popf
fdivs
lret
adc
mov
ja
pop
movsb
lds
fdivs
dec
loop
imul
fdivl
cmp
cmp
jne
mov
pop
inc
int3
jbe
sbb
adc
nop
cmp
rcrb
les
frstor
je
cmpb
add
dec
push
in
dec
repnz
lahf
mov
stos
nop
sbb
ret
pop
mov
test
fimull
sub
sahf
ret
inc
insl
inc
out
test
and
inc
inc
in
loope
jae
jmp
adc
lock
add
stc
pop
jne
mov
dec
inc
decl
std
out
push
jmp
cmp
nop
fstl
mov
inc
sbbl
stos
lds
jae
stos
shll
cltd
loope
xor
filds
int3
test
imul
fcmovbe
leave
inc
cli
lods
xchg
daa
int3
pop
fists
dec
pop
lea
inc
out
jmp
out
or
jle
bound
push
mov
mov
dec
jl
mov
jmp
jp
adc
or
xchg
mov
xchg
ja
daa
mov
push
pop
or
mov
inc
testl
int
lods
notb
push
adc
and
sub
hlt
test
rcll
dec
cld
mov
fs
fimull
imul
inc
jmp
ljmp
mov
jp
aam
insb
pop
sbb
test
inc
pushf
fs
and
xlat
mov
pop
mov
sub
int3
jmp
adc
sub
xchg
xchg
fcomps
rol
cmpsb
aaa
int
lret
and
test
into
loopne
push
and
jbe
popa
nop
test
dec
or
jp
mov
cltd
ja
jmp
fninit
add
push
aam
cmc
xchg
push
mov
mov
outsl
sbb
std
jl
jl
xchg
adc
hlt
and
fbld
leave
in
pop
stos
mov
mov
insl
dec
push
xor
sub
xor
pop
jle
aam
lcall
jne
stos
adc
fldcw
mov
pop
inc
or
jno
mov
jle
popf
inc
inc
pop
rol
sub
popa
popa
lods
scas
or
and
jle
sbb
sbb
mov
ds
mov
je
sbb
mov
jo
mov
loop
cwtl
pop
xchg
cltd
stos
hlt
push
mov
std
mov
dec
std
in
adc
sub
scas
ljmp
cmp
pop
jae
fisttpll
pushw
dec
jno
jmp
and
and
jae
shlb
movsl
fs
int3
sarb
leave
movsb
leave
xor
push
das
stos
pop
jo
cmpsb
push
scas
adc
bound
add
dec
cmp
xlat
call
lcall
test
mov
jne
cli
jle
dec
xor
dec
stos
dec
or
pop
sahf
out
addr16
mov
imul
das
mov
mov
xor
add
sbb
dec
inc
xorl
jae
gs
jg
cli
xor
adc
push
cmpsb
cmp
push
xchg
xchg
xor
fwait
cli
insb
fildll
mov
rolb
jmp
fcomps
adc
mov
pusha
mov
lds
out
mov
xchg
faddp
clc
xlat
mov
xchg
das
movsl
mov
lcall
fiadds
pop
loope
sbb
inc
daa
aaa
jmp
xchg
nop
jne
insl
jmp
jmp
scas
adc
jge
mov
pop
mov
pop
clc
mov
mov
clc
jle
adc
or
xor
cld
cmpsb
push
lret
sbb
hlt
into
repz
jp
cmpsl
push
insl
jp
gs
sbb
shrb
mov
mov
imul
lcall
adc
lods
popf
fnsave
jp
fistpl
dec
mov
push
xchg
iret
pop
rcll
std
jae
add
adc
jmp
cmp
xchg
dec
iret
jbe
sbb
movsb
mov
xor
fbstp
inc
mov
nop
add
out
add
shrl
pop
jmp
adc
xlat
in
hlt
popf
ljmp
xchg
test
mov
and
sbb
movsl
ss
jmp
pop
push
add
add
lret
dec
data16
popf
xchg
xchg
jmp
movd
cmp
loop
orl
loope
xchg
adc
inc
mov
sbb
inc
fdivl
fstpt
and
std
test
daa
movsl
dec
adc
pop
pop
adc
jae
jl
in
push
int
sahf
or
rorb
push
gs
subb
cltd
imul
jmp
leave
mov
lea
cmp
scas
cld
dec
fs
outsl
cmp
mov
xlat
inc
fs
hlt
pop
mov
sti
cmp
sarl
test
insl
adc
aam
lods
scas
inc
dec
cwtl
xor
pusha
sbbl
mov
js
pusha
adc
or
insl
test
pop
adc
nop
dec
mov
sti
sub
lcall
arpl
adc
xor
and
test
add
cmp
and
xor
dec
add
mov
aad
imul
sarb
in
pop
mov
jno
dec
xchg
pop
out
aam
sbb
or
push
push
xlat
fldcw
lods
mov
xchg
jnp
pop
inc
mov
int
nop
fdivrs
jl
test
xchg
pusha
ficomps
mov
adc
lahf
sahf
cmp
sarb
push
push
inc
rol
or
andl
sub
pop
ret
adc
add
add
pop
jo
cmp
jbe
inc
fidivrs
adc
inc
and
subb
xchg
sbb
xlat
or
sbb
cmpsb
popw
pop
out
sub
cmp
inc
mov
cs
cli
pop
cmp
cli
push
insl
sbb
or
cmp
mov
xchg
push
jmp
inc
movsl
mov
stc
out
dec
xor
jp
pop
ss
mov
or
inc
aam
iret
sbb
mov
ret
mov
add
xchg
xchg
and
jle
popf
xchg
pop
daa
or
and
stc
ja
pop
aas
sub
pop
sub
stos
jno
sub
cmpsb
pusha
std
sahf
add
divb
aaa
push
adc
and
cmp
sbbl
fcom
jmp
in
or
pop
sbb
xchg
shr
mov
mov
dec
dec
gs
add
xor
pop
mov
fprem1
xchg
fstl
dec
xchg
adc
push
pop
mov
test
cmp
or
rolb
or
imul
lret
nop
push
ret
in
push
fstpt
push
ret
pushf
dec
movsb
add
xchg
inc
dec
scas
push
sbb
ja
test
movsb
into
jp
clc
sbb
aas
ss
icebp
popa
jl
cmp
jl
int
dec
hlt
fnstsw
sub
popa
inc
shll
sbb
mov
cmp
or
bound
rorb
add
and
cmp
aad
js
inc
outsl
push
ds
sbb
fs
rcll
cmpsb
ss
mov
add
sub
adc
frstor
adc
idivb
fisubrs
bnd
mov
fiadds
out
and
mov
test
mov
idivl
leave
int
pop
pusha
testb
inc
xor
imul
push
xlat
push
cld
jecxz
fcmovb
lods
xchg
sbb
xchg
adc
int
mov
leave
add
bound
push
outsl
cmp
cmp
inc
sbb
cmpsl
adc
dec
outsb
xor
pop
jnp
mov
push
push
ret
jle
fisubs
push
js
mov
and
roll
jne
push
divl
in
pushf
sbb
in
sbb
push
outsl
mov
xorl
sub
adc
pop
jl
push
ds
jnp
jae
mov
add
dec
add
jg
in
pop
or
cmpsl
sbb
test
inc
clc
mov
std
jl
daa
ljmp
xchg
mov
adc
jecxz
push
xorb
lahf
mov
popa
push
call
js
sub
mov
shl
fs
inc
nopl
andb
lods
loop
in
mov
pop
fidivrs
and
aad
push
orb
nop
popa
pop
imul
pop
cltd
cltd
scas
test
jno
and
test
cmp
enter
out
push
or
es
ret
pop
lods
sbb
lahf
sahf
cmp
adc
add
inc
and
insl
hlt
jae
sub
clc
ja
icebp
and
mov
cmp
push
jbe
mov
cmc
jp
popf
or
out
xor
jns
cmovbe
imul
sahf
mov
js
mov
jno
mov
movb
call
jp
mov
mov
mov
add
imul
faddp
cli
mov
int3
cs
movsb
sub
xchg
iret
ja
hlt
and
add
push
push
mov
cmpsb
sub
sbb
les
jl
or
xlat
push
jae
es
dec
sbb
cmp
imul
mov
fidivrs
mov
rcrb
cmp
aaa
mov
dec
mov
movsb
sbb
xchg
xchg
dec
jno
push
fs
inc
shlb
pusha
cmp
notl
jns
mov
dec
out
and
lret
stos
fmuls
std
daa
cmp
repnz
cmp
jl
xor
dec
push
pop
push
jae
mulb
fwait
in
lods
inc
jle
push
xchg
mov
pop
shll
jp
push
jg
inc
add
js
jo
jg
bound
enter
or
sbb
inc
jbe
sbb
aaa
lock
movsl
repnz
jmp
push
iret
mov
sbb
faddl
or
push
pop
bound
loopne
lods
push
xlat
aaa
nop
mov
lods
jnp
outsl
loope,pt
and
fsubl
xor
icebp
jmp
hlt
shll
lods
mov
imul
outsl
push
into
ret
jmp
xchg
ror
push
stos
cld
mov
movsb
fstpl
sub
sub
push
pop
notl
repnz
dec
xor
cs
loopne
rorb
mov
jae
mov
xor
mov
in
mov
lret
mov
fnstcw
fsubl
push
test
insb
add
jmp
cwtl
dec
cmp
ljmp
pop
decl
mov
fs
loop
jno
roll
rclb
stc
mov
push
loopne
sub
fsubl
sar
scas
test
rorl
cmp
xor
push
mov
mov
lock
aaa
xchg
stc
xchg
push
arpl
mov
jmp
cli
scas
mov
and
add
cmpsb
fdiv
dec
ret
jmp
dec
movsb
jl
sub
add
xor
push
jl
popa
and
xor
es
dec
jnp
faddl
lea
outsb
insl
sbb
cwtl
cmp
paddd
mov
mov
sahf
jecxz
call
sub
sbb
jmp
int3
cli
sbb
fdivrp
sbb
sbb
mov
xor
adc
rcll
cs
jmp
push
shll
das
mov
push
sbbl
adcb
cmpsb
mov
in
sar
in
fsubrl
jl
roll
mov
pop
cmp
testb
out
cltd
leave
pop
and
lds
cmpsb
movsb
dec
popf
mov
cmc
mov
test
mov
hlt
enter
repz
push
xchg
leave
lds
outsb
jne
and
jbe
fbld
xchg
pop
dec
in
mov
mov
pop
or
pushf
loop
repz
add
jb
mov
ret
jno
jmp
loope
dec
aas
dec
insl
popf
movsl
xchg
xor
and
ljmp
icebp
popa
sub
inc
int3
adc
orl
je
push
es
xor
dec
push
pushf
push
movsb
mov
loopne
rcll
mov
iret
cmc
lret
mov
fsubl
dec
nop
mov
sub
aad
data16
cmp
fwait
push
jecxz
jge
xor
faddp
loopne
cwtl
lds
imul
adc
pop
lods
rclb
mov
and
pop
push
mov
pusha
add
add
pop
mov
mov
cmp
mov
and
adc
mull
sub
sbb
push
sub
sbb
mov
loop
pop
mov
cmp
out
adc
sub
jbe
and
xchg
push
pop
hlt
jl
xlat
xchg
push
push
scas
cwtl
jb
daa
dec
hlt
es
iret
jg
shll
mov
nop
test
outsb
les
stos
xor
cld
mov
outsb
and
fsubrl
lock
stos
roll
leave
add
push
inc
add
mov
lods
add
mov
pop
or
pop
push
das
cmpl
adc
cltd
and
movsl
imul
jmp
push
into
jo
rcrb
xchg
lods
mov
or
in
cmp
std
mov
mov
and
jne
popl
cmc
scas
jge
dec
call
repnz
int
sbbb
mov
fildl
adc
in
nop
mov
sub
cmpl
adc
aaa
push
xchg
arpl
mov
add
lock
push
pop
xadd
push
xor
loop
xchg
dec
call
jbe
push
cmp
test
out
negb
mov
mov
jg
rorb
movsb
fisubl
and
lea
mov
aas
faddl
das
sub
cwtl
lcall
jbe
dec
repnz
hlt
or
mov
xor
es
jg
dec
outsb
xchg
in
sbb
cs
pop
pop
or
adc
jne
sub
test
push
js
insb
add
out
mull
and
xor
cmp
lahf
scas
lock
sar
and
cmp
add
add
fisttpl
mov
mov
dec
mov
or
inc
lret
stos
mov
imul
jbe
jg
mov
pusha
ds
pop
add
mov
repnz
mov
add
mov
fimuls
xchg
sub
adc
inc
pop
fdivs
mov
out
fidivrs
ret
or
xor
dec
lock
bnd
imul
in
and
mov
clc
jmp
and
addr16
test
add
js
mov
and
sbb
inc
outsb
rorb
mov
xor
pop
mov
lds
jns
mov
push
mov
ret
adc
xor
mov
out
mov
addr16
fwait
push
shll
jo
adc
add
sub
stc
insl
push
inc
and
xor
jno
sbb
cmpsl
sahf
and
hlt
mov
fs
ja
jge
int
jns
pusha
test
scas
ret
jno
cli
dec
mov
lea
std
bswap
or
mov
sbb
adc
shlb
and
xorl
xor
mov
adc
jns
test
xor
mov
imul
sbb
pushf
data16
dec
data16
ret
fs
pusha
jne
cmp
test
das
fcmovu
cli
lock
std
je
dec
aas
insb
out
mov
repnz
or
cmpsl
testl
or
rcrl
jno
inc
in
xor
addr16
pop
ret
mov
inc
subb
lods
mov
loope
inc
and
loope
pop
and
lret
loopne
pop
cli
mov
pop
sub
cwtl
push
mov
push
mov
mov
pop
ret
cmp
in
adc
mov
lods
push
cmp
fisttpll
sbb
jle
mov
hlt
xchg
fcomi
inc
lods
std
adc
mov
in
loope
pop
inc
push
inc
mov
out
cs
mov
sub
jp
aaa
push
test
xchg
mov
push
xchg
insl
cmp
and
lock
cltd
fadds
in
mov
and
or
mov
imul
xlat
ret
sti
cld
xor
and
lcall
hlt
add
pop
lret
lds
sub
inc
cmpsl
xchg
test
dec
jg
ds
scas
fldt
add
mov
pop
icebp
xchg
arpl
in
cmp
jecxz
movsb
lds
ss
pop
pop
lea
jo
call
lcall
sarl
outsb
jb
leave
pop
add
and
or
lods
subl
out
xchg
or
pusha
fildll
nop
xchg
clc
and
insb
popa
js
mov
shll
popa
scas
xlat
in
nop
shll
out
mov
cmpsb
mov
cmc
ret
lahf
jo
jmp
pop
es
mov
jecxz
mov
jle
xor
mov
scas
test
add
std
sub
test
inc
push
adcl
psadbw
mov
adc
push
outsl
and
fldcw
sarl
jnp
ja
mov
pop
xchg
aaa
push
loop
push
sahf
jmp
gs
push
add
mov
push
out
fisttpl
outsb
test
xchg
lock
ficompl
inc
pop
dec
imul
pushf
add
loop
cmp
mov
jecxz
pop
push
or
lock
mov
mov
sbb
and
inc
and
subb
incb
xlat
pop
adc
ljmp
outsb
scas
push
iret
les
dec
xor
pushf
cltd
scas
mov
testl
inc
insl
outsb
cmp
sub
jmp
adc
cmpsb
int
cld
dec
xchg
mov
jecxz
jbe
or
inc
pop
cmpsl
jecxz
push
insl
inc
xor
dec
jns
pusha
hlt
push
cmpb
shrb
dec
dec
lds
lcall
inc
pop
das
sbb
rorb
pop
cmp
sbb
pop
mov
mov
ds
ljmp
jnp
xchg
rorl
xchg
aaa
das
stos
adc
sbb
mov
push
adc
and
cmpsl
js
cmp
fsubs
es
cmp
ss
rorl
and
jno
sahf
lds
pushl
mov
adc
dec
dec
and
stc
xchg
notb
lcall
mov
xchg
and
int
jecxz
loopne
shlb
subl
cmp
or
sbb
xchg
sub
daa
std
test
insl
repz
xchg
fwait
loop
xorb
lahf
sbb
ret
push
xlat
add
or
fisttpl
sbb
adc
sbb
das
push
pop
icebp
dec
xchg
mov
aas
cmp
and
in
cltd
dec
test
sbb
add
into
sbb
inc
lret
movsl
les
cmp
or
sub
lahf
neg
test
rclb
pop
sbb
mov
int
xlat
cs
mov
xchg
call
leave
lods
xchg
call
add
fsts
sbb
js
lret
cli
adc
mov
inc
out
pop
hlt
setp
push
push
test
gs
into
clc
mov
pop
jge
mov
xorl
addb
out
cs
adc
pusha
imul
or
iretw
stos
sbb
ret
mov
sub
adc
lods
mov
js
pusha
xlat
mov
les
or
fsubrl
push
push
xlat
imul
icebp
inc
and
pop
jle
adc
mov
popa
jl
push
xor
cmp
mov
movsb
push
dec
mov
cld
push
dec
or
fimull
xchg
cmpsl
or
push
pushf
mov
pop
shll
inc
leave
fucomi
je
ds
fiaddl
fldcw
mov
pop
je
sbb
push
jne
outsb
adc
leave
and
jg
adc
loope
fisubl
or
int3
lcall
mov
js
sub
in
and
mov
add
push
aas
xchg
test
lcall
iret
incb
int3
fldl
cmc
fwait
pop
out
sahf
adc
jle
fsts
mov
adc
loopne
jmp
jb
call
xchg
out
add
jne
frstor
sbb
sbb
divl
push
mov
rol
xchg
pop
mov
jle
lret
ja
xor
iret
cmp
iret
mov
or
adc
jl
or
in
ljmp
sbbl
push
mov
imul
test
loop
daa
aaa
insb
bound
ret
repz
popa
ds
inc
or
wbinvd
adc
cmpl
push
push
dec
fs
mov
clc
jne
test
or
fistpl
dec
mov
in
fldt
ss
sub
adc
je
ljmp
mov
ljmp
adc
mov
insl
lret
jmp
clc
or
mov
pushf
pop
loopne
push
adc
and
test
stos
out
rcll
jecxz
leave
jne
mov
loopne
gs
pop
aam
pop
imul
shlb
push
sti
hlt
mov
data16
out
add
mov
ds
cmp
jae
bound
fchs
and
cmp
mov
popa
ret
mov
es
inc
sbb
or
dec
es
dec
jbe
lret
insb
mov
dec
push
lret
cmp
out
int
das
mov
pop
pop
clc
repz
fidivl
sti
xchg
lock
jecxz
jns
les
sbb
mov
cmp
or
icebp
push
dec
popa
repz
nop
sbb
cmp
jmp
in
pop
mov
je
lcall
jmp
pop
imul
mov
xchg
clc
inc
rorb
jns
bound
aam
pop
jg
arpl
mov
repz
loopne
imul
cltd
and
popa
into
dec
imul
ljmp
inc
add
insl
or
sub
ficompl
mov
xchg
mov
and
fldenv
add
popf
imul
pusha
les
push
xchg
sub
popf
inc
out
pop
and
sub
xor
out
hlt
dec
add
add
inc
ja
mov
push
add
lea
sub
stos
aas
in
ficomps
cld
inc
daa
xor
in
push
and
mov
mov
jmp
int
xchg
pop
mov
jmp
rorb
in
push
lods
or
cmp
and
cmp
es
into
mov
or
ja
nop
or
jmp
ds
cwtl
lahf
dec
gs
mov
pop
imul
pop
rcrl
mov
or
enter
inc
add
xchg
xchg
in
dec
pop
ljmp
and
and
adc
jae
dec
mov
dec
sub
sar
push
outsb
add
jmp
or
test
push
push
pop
ret
ret
mov
xor
push
test
sbb
loope
jo
les
mov
int3
or
cmp
daa
cmp
dec
xchg
lret
xor
lret
pop
xor
dec
mov
daa
cmp
adc
add
xorb
adc
adc
and
inc
pop
not
push
or
call
xor
mov
nop
and
out
mov
add
test
xorb
sbb
xorl
movb
jb
pop
sti
es
xor
insl
pop
sub
outsb
test
mov
fsts
call
cmp
out
mov
mov
cmpsl
insl
andl
dec
cmpsb
outsl
jecxz
clc
ss
xchg
and
inc
popa
jns
xchg
xor
sub
sbb
test
icebp
push
xor
fisttps
push
or
mov
xor
pop
cmp
int3
push
jbe
xor
ljmp
push
aas
or
leave
adc
mov
or
inc
in
je
pop
shll
sbb
cmp
je
movsl
add
movsb
adc
jns
data16
movsb
cltd
mov
sahf
pop
das
cli
sar
test
push
push
xor
jg
int
xchg
jns
mov
jl
mov
adc
leave
hlt
and
repnz
fnsave
test
adc
jmp
jg
mov
jne
hlt
cmp
mov
jne
push
mov
fdivrl
ljmp
jnp
sub
cs
fldt
and
pop
test
push
movb
insl
jecxz
test
xchg
cmp
pop
sub
mov
push
sbb
inc
lret
pusha
push
sbb
aaa
icebp
dec
out
xor
pop
adc
shrl
insl
pop
pop
sbb
stos
test
fistl
mov
mov
push
mov
pop
mov
pop
add
ljmp
popa
sub
ljmp
and
test
in
inc
pop
fistpl
xor
dec
cmp
and
mov
add
jns
jg
int
adc
sub
and
jo
pop
mov
jo
stc
jmp
dec
pop
push
stc
aaa
push
xor
sub
fcmovnb
sbb
pop
xor
adc
jo
pop
push
enter
loop
cmpsl
inc
hlt
orl
inc
cmp
lret
insb
sbb
and
jb
and
insl
mov
and
shlb
adc
ret
mov
test
aas
mov
and
pushf
hlt
cmp
dec
lods
xchg
mov
and
pop
sahf
jns
in
add
cmp
mov
movsb
dec
fs
popf
inc
sbb
jb
adcl
cwtl
mov
push
pushf
dec
cmp
mov
ret
pop
shl
int
jb
push
hlt
dec
lods
jne
adc
subl
sar
or
jbe
bound
aad
cmp
ret
movsb
ror
sbb
sbb
pop
mov
mov
mov
ffree
mov
outsl
outsl
cmp
lret
cmp
xchg
push
outsb
mov
pop
aas
out
sbb
shrb
or
mov
adc
push
and
xchg
iret
ret
cmp
daa
cmpsl
ret
js
cltd
mov
jne
negl
mov
pusha
sahf
mov
dec
outsb
sub
xlat
jo
cmp
mov
mov
ret
xchg
push
je
add
sub
std
push
gs
xchg
mov
push
xchg
xchg
into
daa
pop
les
dec
xor
lcall
sbb
and
lahf
dec
push
pop
loopne
and
data16
or
insl
xorb
movsl
jp
rcrb
jmp
cmp
cmpsl
repnz
adc
pop
lahf
jne
mov
jno
scas
test
fs
imulb
adcb
nop
xor
push
add
std
mov
frstor
push
sbbl
loope
into
mov
sub
out
mov
jle
cmp
xchg
fwait
xlat
push
mov
rcr
stos
into
dec
jmp
cmp
or
cmp
popl
xor
clc
mov
and
mov
jg
xor
fcomps
or
stc
or
ljmp
leave
movsb
push
inc
sub
fistps
pop
sahf
cltd
imul
and
push
add
and
push
jae
jg
adc
in
addr16
add
rorl
xor
mulb
gs
test
xchg
iret
inc
xchg
sub
add
push
add
adc
shlb
jb
cmp
mov
xor
shl
int3
push
outsb
addr16
or
mov
push
inc
or
xchg
ljmp
lcall
jb
pop
movsl
dec
in
and
mov
test
xor
les
add
shr
shlb
movsl
mov
popf
or
push
push
jle
out
lahf
loop
pusha
test
push
or
push
pop
push
loopne
push
ret
sahf
jp
incl
std
js
sbb
and
jne
xor
aaa
add
sbb
hlt
jb
or
out
pop
mov
or
pop
in
dec
mov
js
idivl
icebp
jp
push
adc
inc
pop
push
inc
or
popf
and
pop
mov
pop
sbb
add
call
enter
cmp
adc
jmp
push
mov
sbb
jns
sbb
pushf
dec
les
adc
and
or
or
dec
cmpsb
mov
movsl
mov
out
add
ja
mov
adc
stos
push
shrl
jno
xchg
inc
jmp
fdivr
movsb
aas
adcl
movsl
mov
jecxz
in
fimull
movb
out
jge
cmpsl
mov
fsubl
cwtl
or
fwait
mov
adc
shll
fwait
add
pop
adc
clc
subb
inc
inc
push
xchg
loopne
jno
xchg
addr16
arpl
hlt
test
inc
cmp
inc
cmp
addb
hlt
adc
inc
scas
test
xor
jns
fwait
sub
and
nop
mov
into
and
pop
pop
jbe
mov
jl
xor
xor
jge
sub
mov
dec
cltd
stos
xor
xor
lret
dec
bound
fisttpl
sub
mov
ficomps
lods
scas
mov
dec
and
or
add
cmp
outsb
jp
xlat
sti
sub
lea
shr
pop
ja
sub
xchg
pop
push
cltd
cmp
dec
cmp
loopne
adc
out
into
cli
fsubl
fyl2x
add
mov
mov
inc
ret
popa
outsb
push
dec
movsl
lods
mov
out
mov
jo
mov
lahf
movsl
jo
flds
xchg
mov
fisttps
sbbl
scas
mov
aam
jns
xchg
in
popa
and
sti
pop
dec
jns
mull
repnz
jnp
inc
adc
aam
cmpsl
mov
out
mov
jo
mulb
lock
inc
fstpl
cmpl
fildl
add
ljmp
xor
dec
and
les
ss
fistl
test
mov
dec
sarb
das
push
mov
dec
dec
pop
xchg
push
rcr
jno
cmp
jns
xchg
xchg
xor
push
sub
subl
and
ja
xchg
jecxz
mov
mov
ret
inc
mov
adc
adc
ret
jle
dec
out
out
cwtl
mov
or
pop
bound
cs
pop
mov
ret
inc
shll
pop
mov
int3
push
mov
xchg
xchg
lds
call
aas
fsubrs
orb
inc
sbb
insl
lahf
jl
jno
addr16
insb
mov
inc
push
cltd
sbb
std
mov
mov
push
dec
mov
es
jo
xchg
cmc
data16
or
sub
out
frstor
xchg
mov
pop
pop
pop
mov
jg
loop
lahf
and
mov
sub
inc
outsl
imul
add
fcmovbe
push
aam
repz
sub
and
inc
xchg
jge
js
push
adc
or
and
mov
adc
dec
lds
jmp
add
push
adc
add
in
aaa
lret
push
dec
mov
mov
inc
cmova
mov
mov
hlt
scas
js
mov
add
inc
ret
cmpsb
arpl
test
jo
pushf
ret
lds
and
mov
mov
inc
enter
fdivl
sub
popf
in
imul
mov
outsb
leave
xor
cmpsl
rcrb
in
lock
adc
add
jns
jne
dec
out
int3
mov
push
add
mov
jp
and
movswl
sbb
sbb
inc
lcall
cmp
mov
addb
pop
inc
add
fwait
hlt
pushf
jp
push
aad
ss
mov
ds
jo
xchg
jp
clc
or
xor
jo
pop
sub
call
inc
or
jmp
aaa
stos
repnz
shrl
push
sub
jo
dec
jo
fwait
mov
je
jno
cmp
mov
jmp
rolb
imul
pop
cmpsl
jp
lret
sbb
rcrb
jne
setge
fcoms
cld
fistpl
sub
sbbl
push
jno
lds
or
pop
shl
in
arpl
lock
ljmp
mov
and
fildl
xor
mov
lahf
daa
adc
pop
movsl
stc
movsb
sahf
mov
repz
sbb
inc
fnstenv
gs
clc
shrb
hlt
dec
mov
leave
push
test
xchg
push
xchg
inc
pop
pop
pusha
int3
or
mov
jp
or
icebp
sbb
push
xlat
push
loop
ljmp
les
outsb
xor
hlt
inc
test
mov
jmp
inc
and
das
movsb
cmpsl
push
adc
aaa
scas
or
mov
add
cmc
ja
push
add
mov
dec
int3
jne
inc
mov
addr16
mov
xlat
xchg
jno
dec
sbb
pop
cwtl
push
jl
xchg
sti
push
cltd
xor
mov
mov
fisubrl
jge
add
cs
or
push
hlt
inc
adc
pusha
gs
push
arpl
lods
addr16
cmpsl
cmc
sahf
adc
xchg
cs
lahf
push
dec
jne
jb
pop
jbe
and
mov
fidivrs
pop
test
out
and
xlat
push
inc
push
rorb
mov
aam
add
inc
jnp
fimuls
out
adc
mov
cmpsb
rorl
es
adc
and
imul
jnp
pusha
push
jg
inc
fistpl
lret
add
push
mov
pop
mov
jne
into
cwtl
xor
inc
add
and
movsb
cmpl
sub
and
xor
sub
pop
jnp
sahf
pop
add
jecxz
push
aaa
std
test
mov
pop
arpl
fldt
fldcw
lret
pop
xchg
mov
fcompl
pop
jecxz
xor
dec
ss
lea
testl
loop
repz
das
mov
rcrl
cmp
jns
push
loopne
in
fdivl
and
push
dec
ds
xorb
or
xchg
sub
mov
xor
inc
push
push
sub
in
cltd
mov
jg
movsb
jbe
dec
pop
cld
inc
imul
jbe
insl
push
call
mov
jmp
push
lcall
push
sbb
push
pop
jg
iret
push
test
mov
pusha
pop
inc
pop
pop
aas
arpl
pushf
adcl
jle
sbb
stos
cld
test
pop
into
daa
jae
xor
mov
xchg
push
mov
mov
mov
mov
ja
movhps
stos
adc
dec
imul
out
mov
mov
data16
stos
ret
gs
jp
mov
push
and
mov
arpl
sub
stos
popa
inc
fsubrs
stc
or
test
test
push
add
les
add
push
mov
add
enter
xchg
jg
pop
jmp
leave
in
mov
insl
enter
adcl
push
test
clc
cmpsb
jns
into
cmp
sbb
jmp
fstl
or
push
jp
insl
sahf
xor
pop
aam
add
mov
push
pop
rorl
roll
cltd
xor
sbb
setge
xor
test
lcall
pop
pop
popf
dec
ja
jl
jl
mov
loope
xchg
imul
fimuls
cmp
xchg
dec
push
bound
dec
or
dec
sahf
sub
shll
and
sub
imul
and
sub
int
and
aam
pop
push
and
testb
jle
shl
xchg
xchg
xchg
fildll
mov
and
sbb
loop
mov
int3
dec
lods
pop
jg
insl
and
bound
mov
mul
inc
mov
movsl
dec
in
push
lret
daa
scas
add
jmp
mov
test
shlb
sti
cmpsl
mov
xlat
push
mov
sbb
lock
cmpsl
ret
icebp
test
mov
adc
jge
roll
lods
push
inc
data16
ss
dec
cmp
es
and
cmp
xor
cmp
dec
mov
xlat
sarb
xchg
mov
add
dec
sbb
or
out
xor
sub
enter
adc
fsubs
popa
shrb
in
adc
and
cmp
das
pusha
xor
xchg
adc
push
sbb
in
lcall
cmp
cltd
outsl
lock
add
mov
mov
jne
stos
inc
ja
jo
push
inc
subb
scas
aad
cmp
adc
test
movsl
stc
push
mov
sbb
inc
shr
add
cmpsb
lods
or
sub
pop
jge
adc
push
mov
mov
roll
testb
mov
push
jnp
add
dec
xor
out
and
and
ljmp
push
mov
sub
pusha
imull
rorb
pushf
fists
popa
sbb
outsl
push
lahf
adcl
cmp
inc
adc
nop
jp
inc
xor
pop
lods
mov
sbb
adc
mov
dec
not
add
cltd
fdivp
jb
or
lods
push
mov
xor
rorl
fdivr
adc
pop
mov
aaa
xor
jnp
fstp
sub
cmc
mov
xor
or
push
imul
jle
add
rclb
loope
aam
aam
fistpll
mov
or
and
test
enter
fsubp
repnz
mov
pop
push
adc
adc
mov
ficoml
sahf
divl
pop
cmpsl
mov
or
test
dec
adc
fs
cli
jge
movsl
es
xchg
cli
outsb
stos
pop
xchg
jb
shlb
cmp
xchg
and
das
mov
pop
and
push
pushw
jae
xchg
or
push
and
mov
push
dec
in
inc
ljmp
das
pushf
push
lock
lcall
and
xor
fwait
shl
cld
iret
cmp
mov
dec
test
dec
rolb
jle
dec
add
es
jmp
loope
fidivrs
idivl
push
cmp
lea
jmp
ss
add
sub
bound
add
stos
mov
inc
pop
push
xor
xor
inc
xchg
stos
xor
pushf
cltd
pop
rcrl
dec
mov
inc
in
xchg
or
push
pop
test
inc
pop
clc
insl
in
add
out
loop
mov
jle
cwtl
out
add
sbb
inc
cmc
xor
fs
adc
cmp
cli
push
jno
scas
loopne
inc
mov
sub
decb
pusha
and
rorb
push
sub
fldl
sti
popf
sbb
pusha
push
or
aaa
jp
shlb
hlt
sarl
xchg
or
popf
cmpsb
addr16
lret
adc
jno
xor
lock
mov
dec
fwait
cmc
or
mov
movsl
push
repnz
scas
mov
push
add
sbb
xor
leave
sti
imul
decb
pop
push
icebp
adc
mov
inc
mov
xor
fcmovbe
sbb
jg
sti
pop
mov
jae,pn
daa
jae
rcrl
rclb
nop
pushf
mov
xchg
mov
test
pop
push
cmc
xor
hlt
adc
stc
jmp
movsb
lret
jo
sbbl
ret
clc
xchg
push
daa
jbe
lret
jno
das
xchg
test
dec
fs
pusha
xchg
xchg
fistps
cmpsl
inc
inc
mov
scas
js
lods
adc
mov
push
int3
mov
pop
add
add
or
sbb
or
jmp
insb
mov
and
sub
sub
xor
adc
and
mov
outsb
inc
mov
jle
lahf
ds
mov
jle
xchg
cmc
jmp
push
jno
sub
adc
dec
fdiv
lds
stc
shlb
daa
jmp
pop
xor
sub
call
cmp
iret
fnstcw
xor
adc
clc
adc
imul
ret
inc
dec
adc
mov
xor
xchg
cmpsl
ret
jns
aas
and
mov
cltd
das
ja
in
std
hlt
and
clc
test
sbb
and
push
std
jb
xchg
inc
cmp
in
pop
imul
call
ja
lds
insb
jns
sbb
mov
bound
adc
mov
ret
iret
xchg
mov
sti
push
scas
insb
cmp
pusha
inc
push
icebp
add
mov
outsl
aaa
mov
xor
sub
notl
cmp
inc
add
daa
scas
jb
or
push
sub
cmp
icebp
mov
daa
roll
scas
push
insb
jno,pn
sub
mov
push
shlb
dec
pushf
sar
test
dec
nop
xor
mov
fwait
pop
xor
lret
xchg
mov
inc
push
call
scas
mov
xorl
sub
insb
sub
lahf
sub
ja
inc
or
mov
add
sbb
daa
adc
fs
pop
xor
ror
call
into
mov
cmp
pop
jne
in
push
ss
cmpsl
dec
inc
iret
ss
mov
mov
ret
adc
xlat
xor
push
mov
or
cs
xchg
xor
inc
inc
mov
cmp
xor
inc
sar
pop
int3
or
stos
mov
sbb
imul
in
lea
xchg
xor
es
push
outsb
mov
jbe
int
adc
push
push
jo
stos
dec
rcrl
cmp
fidivrs
push
ret
mov
mov
adc
xlat
or
mov
mov
stos
mov
xor
dec
or
xor
dec
lods
push
sahf
jns
cmpsb
jle
mov
mov
mov
ja
aas
add
cld
xchg
jp
xchg
outsl
ja
cli
jl
mov
xlat
jbe
mov
jae
inc
insb
incb
cmp
adc
lds
hlt
mov
adc
fdivl
repnz
dec
dec
ja
mov
lcall
add
mov
and
push
cld
push
mov
push
out
cmpsb
repz
outsl
in
mov
jg
addr16
scas
mov
adc
loop
mov
jbe
and
int3
jp
fsts
xchg
pop
add
sub
xchg
inc
fsubp
outsl
gs
mul
push
cmpsb
pop
test
or
or
xchg
dec
and
sub
inc
insb
add
pop
imul
notl
bound
jns
insl
mov
sbb
mov
fsts
lcall
push
and
test
sarl
jle
mov
and
mov
test
ljmp
aas
sbbl
add
pop
frstor
iret
idivb
lea
push
sbb
or
or
lret
jbe
and
dec
inc
jp
inc
pop
test
lea
data16
pop
imul
adc
and
cmpsb
jae
or
mov
jne
or
jb
lods
push
adc
mov
mov
fistps
mov
cld
out
pusha
jno
push
mov
pop
jecxz
push
xor
test
imul
imul
fcmovnbe
movsl
xchg
jns
leave
sub
cmp
rorb
fs
cmp
xchg
jne
jb
mov
mov
and
shl
leave
popa
mov
xor
mov
cmpsb
test
lock
sub
testb
sbb
mov
mov
push
pop
mov
pop
xor
mov
push
mov
dec
cli
inc
push
popa
push
in
lds
data16
adc
xchg
lahf
pop
daa
xorl
pop
push
cvttps2pi
mov
in
cmp
jne
shlb
push
jbe
leave
dec
aad
into
xlat
stos
jnp
repnz
cli
call
outsl
scas
mov
dec
sbb
jno
fldcw
ret
test
push
lea
orb
add
in
or
data16
lcall
adc
rcll
sub
sub
and
lret
mov
mov
aam
enter
adc
xchg
sbb
stc
stos
jecxz
jmp
out
popf
aam
lods
mov
rolb
xchg
cmp
mov
xchg
xor
adc
test
inc
out
mov
sbb
xor
pushl
pop
inc
fpatan
inc
inc
repnz
stos
jns
mov
cmp
test
jp
sub
mov
pushf
test
aam
fs
push
lods
leave
cmc
push
jbe
popa
xlat
or
sub
mov
in
and
je
stos
jg
xor
dec
repnz
cwtl
movsl
out
push
enter
dec
inc
mov
outsb
jl
call
sbb
cmc
dec
call
jno
lds
push
les
stos
mov
xchg
mov
loop
cmp
sbb
inc
push
add
push
das
push
inc
or
les
and
sub
cmpsl
mov
mov
out
aas
mov
mov
push
adc
iret
decl
or
sub
negl
pop
jb
and
and
xchg
mov
cmpl
jecxz
sub
sbb
sub
adc
fwait
mov
xchg
in
insl
aam
jb
pop
movsb
sbb
cmpsl
sbb
leave
out
jl
ret
pop
fcmovbe
pop
into
aas
aas
inc
sub
jnp
sub
scas
jne
mov
cmp
out
ljmp
nop
cmpsb
mov
fdivs
lcall
jns
out
xchg
dec
ret
mov
add
cmp
and
cld
push
mov
mov
xor
cltd
pop
sbb
stc
adc
loope
push
mov
outsb
xchg
push
add
push
lret
pop
mov
fsubrs
scas
dec
decl
push
cmpsl
sub
or
lods
adc
es
sbb
and
pop
lret
xchg
dec
lods
push
fcmovne
aam
dec
push
rol
test
adc
aad
shl
sbb
cwtl
xor
dec
inc
pop
jg
insb
repz
mov
dec
in
lret
imul
imul
ret
movsl
or
mov
mov
movswl
sar
test
mov
mov
pushf
nop
jle
hlt
adc
rcrl
aad
push
dec
cmp
pusha
std
push
testb
sub
dec
inc
roll
jnp
popa
icebp
data16
enter
cmp
js
cli
lret
test
insb
mov
jle
icebp
mov
out
push
mov
ror
call
mov
js
push
mov
orl
inc
xchg
pop
test
dec
jo
test
or
movsb
inc
sbb
js
lahf
stos
stos
adc
jle
sbb
jne
fs
std
pop
cmp
pop
fs
mov
xor
inc
xor
repnz
pop
xor
daa
push
pop
mov
ret
sub
and
jp
adc
fisubl
stos
xor
jp
lcall
stos
mov
je
push
mov
mov
xchg
sub
inc
insb
push
fsubrl
mov
xor
xchg
add
pop
loope
pushf
mov
int3
mov
jae
mov
lret
dec
adc
sub
int3
mov
cmc
cmp
dec
or
fldl
loopne
mov
or
hlt
fmul
mov
mov
pop
lret
xchg
add
mov
popa
idivb
and
out
ss
xchg
dec
mov
jle
push
and
xor
adc
gs
mov
dec
adc
mov
aas
adc
sub
inc
lret
and
cmp
cltd
jb
in
fiaddl
leave
mov
xor
cmp
xchg
popf
aad
jae
mov
xchg
add
mov
inc
adc
aam
insb
dec
or
cwtl
cltd
sbb
xchg
xor
fstpt
movsl
lret
mov
daa
cs
ficomps
mov
addl
popa
sahf
jl
push
adc
inc
daa
or
enter
psubq
pop
out
call
notb
ljmp
sbb
or
and
or
inc
xchg
xorb
pop
and
test
jle
fisubl
in
mov
jbe
imulb
sbb
cmpsb
mov
sbb
inc
jno
shll
add
pop
jno
jno
or
in
aad
out
repz
dec
jae
jnp
jnp
sub
jns
ds
cmpsw
cltd
cmp
add
jg
ret
cmpsb
movsb
in
mov
bound
pop
push
ljmp
inc
aaa
lahf
loop
test
jge
cmp
test
xor
adcl
mov
sbb
xor
aad
push
inc
mov
xchg
push
adc
or
mul
sub
ret
jae
adc
pusha
xchg
sbb
scas
sub
dec
in
cwtl
in
mov
sbb
sub
pop
sbb
xor
or
mov
push
or
pop
push
test
dec
pop
insb
jnp
clc
pop
cmp
repz
out
insl
sub
stos
arpl
jecxz
xor
inc
xchg
ret
lret
and
lods
dec
sub
sti
jmp
enter
divl
push
ficoml
jge
shl
cmc
repnz
xchg
das
inc
addr16
xchg
cmpsl
mov
cmc
loopne
xchg
in
xchg
push
add
movsb
inc
jge
mov
outsl
pop
jnp
ret
and
xor
leave
cmp
mov
xor
pop
loop
sbb
idivb
or
jp
add
in
jns
pop
sbb
fidivrs
and
mov
fstps
mov
pop
fidivs
repz
mov
or
mov
sbb
lock
ds
mov
add
xchg
pop
out
mov
dec
and
scas
nop
sub
mov
test
sahf
push
out
cmpsl
sub
inc
mov
or
aad
loop
inc
test
fdivs
mov
jp
sbb
ss
jp
fstps
shr
jo
out
jge
fs
mov
out
cmc
mov
jmp
cld
pushf
out
mov
data16
lea
icebp
sbb
xor
sbb
enter
dec
mov
mov
pop
add
sbb
testb
adc
aaa
lahf
adc
inc
psubd
mov
les
inc
in
stos
dec
lods
das
mov
in
and
dec
shl
xor
imul
loop
fldt
mov
addb
sbb
push
or
bound
leave
orb
testb
pop
dec
pop
cmc
movsb
repnz
stc
mov
xchg
jg
mov
fsubrl
and
push
push
pop
add
mov
icebp
mov
ja
jne
out
dec
fimuls
lret
push
in
lahf
inc
adc
cmp
jae
sti
clc
pop
or
mov
jbe
cmp
sub
movl
cmp
sbb
jo
push
adc
sub
stos
xor
or
mov
sub
mov
out
lahf
xchg
sbb
les
test
sub
incb
test
jecxz
in
xor
jg
stc
movsl
psllq
push
or
push
cmp
enter
add
pop
cmpsb
xchg
lret
xchg
mov
cmp
lds
xchg
fcmove
push
repz
xor
add
pop
jns
push
inc
mov
divl
popa
je
fbld
jno
js
sub
daa
jno
mov
shlb
loop
or
cmp
cli
fsts
loop
or
jp
jnp
mov
test
push
outsb
lods
test
push
pop
clc
jmp
lret
add
xchg
pop
jge
adc
jl
js
adc
std
std
mov
in
sti
pop
sbb
scas
add
aad
faddl
int3
xchg
inc
push
faddl
mov
addb
rcrl
loop
push
ror
arpl
jecxz
xorl
push
xchg
movsb
mov
aam
push
cmpsl
or
pop
fsubr
push
fimull
cltd
ret
es
adc
xor
sub
pop
sub
cld
lret
push
add
sbb
mov
loop
int
mov
aaa
jnp
hlt
fbld
lds
cmc
jle
data16
lcall
jmp
dec
inc
imul
push
and
xchg
jns
aad
lret
mov
inc
xor
inc
ss
xor
dec
xchg
ret
xchg
imul
mov
add
js
xchg
push
mov
cmp
fxch
int
xchg
mov
imul
jmp
xlat
mov
out
repz
out
mov
xorl
jp
dec
adc
outsb
pop
daa
xchg
ljmp
out
adc
sti
outsl
add
cmpb
xor
mov
xor
mov
fwait
cmp
popf
insl
insl
dec
mov
pop
js
push
jns,pn
insb
mov
push
outsb
sbb
mov
cs
lock
mov
cmp
mov
mov
ret
sbb
inc
push
fimuls
xlat
pop
mov
pop
ret
push
cmp
cmp
orl
fwait
and
or
sti
mov
lds
xor
fcmovbe
ss
xor
lahf
and
cld
mov
ret
dec
int
push
es
sbbl
pop
outsb
adc
cmpsl
fcmovu
cmp
xchg
cwtl
jno
pushf
sub
cmp
in
leave
rorb
push
pusha
inc
mov
cmp
cmp
jge
out
shlb
or
lret
pusha
mov
test
mov
fnsave
add
loop
xchg
mov
lea
jp
cltd
in
cld
mov
mov
cmpsl
sar
dec
push
jge
pop
push
shlb
xor
lcall
mov
mov
fdiv
enter
and
test
popa
subb
jno
enter
fwait
push
xchg
subb
ds
pop
dec
icebp
aaa
push
sti
arpl
mov
fiaddl
mov
jg
sub
gs
dec
roll
ret
gs
repnz
add
sbb
mov
or
pushf
movsl
or
xchg
fs
jns
out
mov
dec
push
out
and
jg
mov
lret
push
out
sub
ret
lods
add
xor
popf
mov
es
or
repnz
cmp
jns
pop
and
xor
adc
cmp
cmp
push
push
jno
mov
adc
push
push
mov
mov
add
add
movsl
xor
lcall
jae
pop
fwait
fwait
add
pop
jae
std
lcall
sarl
mov
aaa
jnp
dec
popf
xor
mov
sbb
jmp
ds
jg
adc
adc
xor
ljmp
mov
or
fsubrs
mov
xchg
xchg
xor
jl
int3
mov
out
ljmp
xor
lds
repz
jle
idiv
sbb
imul
