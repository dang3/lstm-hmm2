push
add
push
mov
xor
idivb
in
push
dec
push
jecxz
add
ja
outsb
aaa
mov
sarb
pop
or
or
push
mov
push
adc
cwtl
push
cld
ds
inc
sub
movsb
or
mov
sub
mov
lods
jb
pop
pop
pop
pop
leave
ret
mov
mov
into
incl
push
push
lea
mov
add
push
fnstenv
ret
lods
out
inc
add
test
inc
xchg
add
inc
dec
jne
pop
jg
pop
pop
not
ret
cmpsl
push
xor
push
mov
cli
movl
loope
mov
call
clc
pop
test
shlb
or
sbb
inc
pop
call
lock
or
test
incl
or
call
add
jmp
xor
rcrb
dec
push
push
add
mov
xor
xor
cld
mov
push
scas
dec
daa
sbb
lea
push
pushf
push
int3
inc
adc
les
int
add
and
dec
add
or
sub
or
shll
add
cmp
add
pop
add
sub
push
add
sub
fcompl
add
fimuls
inc
add
push
add
add
loop
or
and
push
out
cmp
inc
adc
inc
or
inc
and
inc
xor
les
out
push
add
dec
add
cmp
adc
inc
add
pop
add
aaa
add
sbb
notl
clc
sub
stc
sbb
rclb
pop
mov
adc
xchg
mov
or
mov
sbb
add
sbb
shl
sbb
sub
adc
es
push
add
shll
pop
adc
outsl
push
xor
in
add
jns
push
pop
inc
mov
out
sbb
dec
cmp
or
cmp
icebp
jb
mov
mov
cmp
sahf
mov
adc
add
add
and
inc
mov
jge
mov
or
sbb
push
adc
xchg
jge
or
add
inc
and
dec
push
test
repz
or
sbb
push
mov
fisubs
add
xor
and
push
inc
cmp
cmp
jb
cmpsl
push
fs
xor
xor
cmp
adc
and
inc
test
pop
mov
push
repnz
es
inc
cmp
and
or
sbb
sbb
iret
mov
popa
movl
push
outsb
fsubrs
or
sbb
mov
test
or
fisubs
sub
dec
sub
jne
and
or
dec
adc
xorb
lock
aaa
push
hlt
or
inc
adc
andb
mov
and
mov
jno
insb
adc
jmp
les
cmp
enter
push
aas
dec
add
mov
nop
stc
or
sbb
push
push
hlt
scas
cld
push
pop
adc
fnstsw
push
xor
mov
xorl
sbbl
icebp
mov
decl
mov
add
jmp
push
movsb
leave
rclb
and
jno
and
test
cmp
dec
lahf
enter
testl
adc
adc
ret
cvtpi2ps
mov
push
push
jp
cmp
and
stos
data16
cld
dec
push
push
adc
test
fbld
sti
rol
or
dec
push
and
out
in
push
or
cli
orb
mov
arpl
aaa
cwtl
es
xor
pop
cmpb
mov
or
mov
mov
cmp
popa
sbb
sbb
push
add
mov
add
adc
jb
mov
ss
shl
adc
adc
les
mov
je
es
in
or
pushf
mov
sbb
mov
xchg
cmp
sti
cmpsb
sub
je
or
pop
push
mov
dec
je
and
jns
mov
insb
imul
sbb
aaa
test
sub
stc
push
mov
xor
dec
lcall
fs
xor
pop
mov
cld
adc
js
scas
inc
vmread
add
je
push
lret
dec
loope
fwait
call
cmp
in
sub
and
sub
adc
movsb
cmpb
or
push
jne
cmpl
jle
mov
jo
call
mov
dec
push
dec
cmpsb
lcall
pop
or
sub
pop
pop
and
adc
add
daa
je
adc
inc
ret
insb
aas
add
clc
aad
inc
ds
dec
mov
aad
mul
or
dec
stc
sbb
xor
roll
dec
or
test
ret
call
and
ds
pushf
and
lahf
loope
mov
enter
inc
xchg
clc
sbb
sbb
xlat
imul
dec
mov
xchg
jne
mov
push
dec
push
rolb
test
out
mov
jae
jne
sub
cmp
add
sub
or
js
sub
mov
fistpll
xlat
inc
mov
push
jbe
adc
push
push
inc
pop
mov
pusha
fiaddl
mov
aas
mov
fcomps
push
mov
push
cs
or
inc
fisubl
cmp
pusha
lret
push
int3
call
clc
add
inc
lock
inc
pop
je
decl
dec
mov
cld
cmp
lds
add
and
je
inc
popf
push
lcall
xor
and
fldenv
mov
jmp
sbb
addr16
cltd
sbb
jo
les
dec
jns
enter
or
inc
hlt
push
mov
jg
pop
movsb
sbbb
rcrb
ret
int3
lea
or
push
mov
fs
or
xor
mov
and
or
scas
das
pop
lcall
repnz
or
push
xchg
dec
pop
or
hlt
or
and
adc
sbb
sub
int
or
idiv
ret
imul
sbb
push
lods
push
imul
push
in
pop
and
add
sub
adc
mov
lcall
jne
sbb
mov
hlt
xchg
or
decl
push
sub
inc
add
psubq
mov
mov
cmp
sbb
inc
sbb
dec
inc
les
pop
test
inc
fsubr
aas
aaa
addl
mov
cwtl
sbb
je
jmp
aas
or
mov
call
test
push
sbb
add
or
fldt
ret
cmp
enter
pop
mov
add
jne
hlt
adc
pop
lcall
xchg
addl
adc
cwtl
mov
cmp
push
xor
fsubrl
mov
xchg
sub
es
jo
inc
xchg
sub
pusha
shrl
adc
adc
mov
adc
pop
mov
mov
adc
mov
sub
lahf
pop
xchg
mov
iret
mov
xor
jle
mov
inc
pop
jno
xchg
push
push
sti
xchg
mov
sti
sbb
inc
adc
push
aaa
call
sub
sub
repz
or
orl
fldt
dec
cli
xchg
inc
jge
add
xor
loopne
cltd
jmp
jmp
xchg
jns
xor
movsb
js
mov
int3
loopne
fadds
push
jge
jle
fistpl
sbb
mov
xor
pop
sbb
shll
cld
sbb
inc
mov
pop
enter
jne
fbld
or
or
or
xchg
sbb
or
lret
push
inc
push
pop
lret
adc
adc
and
imul
mov
lods
sub
xor
push
xor
lea
pop
pop
push
call
pop
push
add
dec
mov
inc
and
sub
cmp
pushf
push
mulb
ret
in
daa
xchg
pop
pop
aad
stc
add
sbb
pop
add
lcall
adc
test
nop
xchg
in
testl
sarl
cmp
jnp
fs
push
push
and
inc
sub
sti
push
cmpb
xlat
xor
repnz
or
aam
inc
or
adc
fisubs
mov
addr16
sti
mov
out
ss
inc
xchg
gs
jp
lock
or
call
sub
test
stos
dec
xor
ja
mov
aaa
mov
scas
faddl
or
sub
mov
pop
repz
and
inc
push
push
jne
push
jl
call
add
push
sub
jmp
jo
or
inc
out
xor
fsubs
call
mov
push
and
jge
test
xchg
cli
add
std
xor
pop
jb
jg
sbb
inc
inc
xchg
mov
sub
in
sub
and
mov
inc
sub
push
cmp
inc
loope
push
adc
test
mov
test
jl
adc
mov
dec
adc
push
fcomp
or
push
ljmp
cmp
mov
push
sub
sub
push
pop
test
shrb
jecxz
aad
and
mov
xchg
sub
and
movsb
je
push
xor
repz
lock
mov
pop
sub
inc
bound
in
cmp
push
and
mov
rcrb
xor
push
inc
inc
scas
test
jecxz
or
push
adc
or
lods
loopne
cs
mov
jne
push
dec
mov
in
adc
inc
mov
or
js
sahf
cmpb
idivb
pop
sub
mov
lods
cwtl
je,pn
adc
add
add
mov
jo
cmpsl
test
jecxz
or
je
push
add
cmp
test
add
ret
clc
repz
ja
je
shll
pop
xor
inc
add
xchg
push
xor
mov
inc
adc
fisubrl
mov
jnp
or
and
cwtl
add
test
daa
xchg
test
mov
push
cmp
movsl
mov
adc
sbb
add
mov
jl
rorb
fadds
mov
call
or
loope
nop
sbb
iret
arpl
or
lret
and
mov
xchg
dec
movsb
pop
in
xor
mov
push
ds
cmp
add
sbb
inc
daa
mov
inc
shr
les
popf
adc
mov
jecxz
xor
and
adc
mov
and
pop
js
fmull
dec
sbb
inc
or
loop
test
inc
adc
xchg
leave
inc
andb
add
lcall
add
test
and
mov
insb
adc
lods
add
in
pop
adc
sub
pop
cwtl
xor
and
sbb
jl
sub
popa
fldl
jl
push
push
psrad
fwait
lcall
adc
icebp
dec
or
adcl
iret
cltd
cmp
xchg
sbb
inc
or
and
jns
test
mov
test
mov
adc
sbb
jbe
jns
inc
or
inc
xchg
push
lock
lea
das
imul
add
xor
inc
out
loop
subb
clc
ljmp
xor
xchg
lea
xchg
nop
mov
mov
cld
xchg
xchg
and
adc
aad
add
cmp
stos
sub
icebp
enter
enter
ss
jne
dec
xor
push
mov
cmp
xchg
ss
es
repz
sbb
sbb
adc
xor
jmp
fists
shl
sbb
loope
add
jae
lods
and
mov
icebp
nop
sbb
aas
and
je
mov
sbb
cmp
push
push
sti
and
mov
mov
mov
adc
dec
cltd
adc
and
xor
push
popa
sbb
pop
jmp
shll
sub
movsb
push
ror
or
and
pushf
jae
xor
push
or
repz
icebp
sbb
jno
push
xlat
dec
sbb
sub
cmp
movsb
pop
aad
cmp
scas
inc
dec
and
hlt
into
test
jno
aad
adc
test
int3
cmp
inc
jg
adc
repnz
popa
adc
adc
nop
mov
or
push
lcall
hlt
push
sub
loopne
mov
movsl
sub
pusha
inc
push
incb
lds
or
in
jns
or
mov
mov
cmp
add
xor
xchg
sbb
inc
jl
add
adc
je
xor
or
test
loop
jae
arpl
jne
mov
xchg
rol
or
xor
mov
cs
sahf
add
or
sub
mov
inc
xor
adc
lahf
adc
cmp
jmp
pop
adc
inc
sti
shrl
fsqrt
xchg
add
mov
mov
xchg
clts
adc
lea
dec
and
push
xorl
inc
xor
lock
mov
test
repz
rorb
arpl
dec
adc
xor
xor
cmp
lea
mov
lods
sbb
jo
cld
pop
test
bound
je
xchg
inc
and
cmp
xor
dec
movsl
xchg
out
cwtl
mov
call
outsb
mov
xor
stc
dec
adc
insl
sub
inc
inc
mov
enter
inc
mov
les
fmul
rolb
loopne
adc
or
out
add
mov
test
std
xor
sbb
in
mov
jp
mov
or
in
test
pop
mov
adc
js
jo
jl
push
cmp
inc
in
inc
mov
mov
sbb
test
mov
mov
inc
or
rcrl
or
repz
cli
test
fimuls
add
call
test
lea
notb
inc
sbb
mov
or
add
jle
push
dec
sub
dec
lcall
jle
adc
in
rorb
stc
aaa
mov
push
cli
loope
add
mov
ret
and
call
adc
xchg
xchg
shlb
enter
scas
push
sub
jmp
xchg
mov
sub
pop
xchg
adc
bswap
xchg
jmp
and
sbb
js
xor
adc
adcl
enter
add
and
mov
pop
sbb
inc
push
call
pop
pop
bound
sbb
jne
daa
mov
dec
lret
jbe
and
add
add
mov
lods
adc
and
mov
nop
call
and
in
or
nop
push
enter
sub
inc
pop
and
adc
mov
bound
pusha
xchg
and
adc
flds
adc
mov
sbb
into
or
jmp
mov
or
mov
push
inc
lods
and
sbb
les
adc
pop
addr16
inc
sub
cmp
pushf
adc
sbb
test
xchg
or
jmp
sub
enter
bound
repnz
adc
fisttpll
inc
adc
mov
inc
adc
dec
pop
nop
cwtl
lret
adc
subl
inc
andb
pop
add
daa
add
xchg
adc
movsb
test
mov
mov
sub
mov
and
adc
mov
inc
hlt
sbb
mov
push
adc
adc
lret
cmp
xlat
mov
sub
mov
test
pop
or
push
inc
jns
adc
sbb
adc
and
xchg
adc
and
inc
cmp
mov
sub
push
aad
shlb
mov
push
je
push
call
push
lret
sub
push
les
pop
push
push
in
mov
or
mov
xor
int
inc
push
inc
dec
mov
push
inc
xor
push
mov
test
or
test
inc
daa
push
shlb
or
bound
add
push
icebp
pop
sbb
jecxz
jg
adcl
cltd
and
mov
push
xor
jg
std
or
dec
sub
pop
adc
fs
shrb
sub
sbb
add
pushf
inc
add
lods
adc
sbb
or
nop
loopne
in
aam
popf
xchg
and
mov
adc
adc
cmp
mov
mov
jmp
mov
inc
sub
pop
and
lods
or
or
inc
nop
vexpandps
loop
adc
inc
int
nop
adc
or
test
repz
bound
mov
sbb
or
test
mov
or
lahf
fsts
in
mov
sbb
pop
lea
test
enter
and
inc
sbb
inc
ss
and
push
and
adc
nop
mov
enter
not
test
jl
les
xchg
and
jne
gs
pop
movsb
add
icebp
mov
or
push
aam
jmp
int3
xchg
dec
push
xor
test
sbb
mov
push
xor
mov
and
sub
adc
fs
and
and
adc
movsb
mov
mov
or
mov
mov
inc
adc
xchg
sbb
and
roll
sub
mov
xchg
and
fs
or
clc
ret
adc
or
inc
jg
push
xchg
or
nop
aas
enter
sub
inc
push
and
or
inc
sbb
test
push
sub
xchg
and
adc
sbb
rclb
sti
or
ret
fs
xor
mov
xchg
mov
test
enter
and
inc
lods
and
shll
sub
pop
push
or
mov
jmp
dec
sub
cmp
dec
nop
iret
cmp
and
push
sbb
jbe
adc
mov
in
mov
jmp
add
cmc
xor
fs
sbb
insb
notb
pop
ret
into
addr16
sub
icebp
xor
les
inc
incl
jl
sub
mov
push
mov
sti
mov
sub
cli
push
ljmp
inc
xchg
movsl
test
push
call
sub
shlb
mov
in
rol
jno
stos
xlat
and
cltd
popa
fcomps
jmp
sbb
and
or
adc
xor
adc
into
test
std
or
fistl
testl
nop
fwait
enter
sub
xchg
and
xchg
and
nop
fmull
test
and
mov
dec
push
and
adc
xor
or
test
les
dec
or
or
test
hlt
int
jne
cmp
and
jb
pop
xor
jo
sub
and
shlb
xor
lods
mov
enter
pop
in
popa
adc
adc
aaa
and
in
lock
sbb
outsl
xor
jo
inc
jae
jmp
cmp
sub
adc
mov
sbb
jl
jmp
push
rcll
mov
test
int3
sbb
adc
dec
icebp
fsubs
xchg
inc
xchg
sub
xor
and
jb
es
dec
jle
sub
adc
test
and
jp
sub
sbb
xchg
or
pop
aaa
mov
mov
cmp
ret
mov
mov
or
ss
xor
inc
mov
push
call
ja
mov
idivl
or
sarl
push
enter
aam
mov
inc
arpl
and
outsb
lods
mov
sub
xchg
push
sbb
adc
mov
mov
inc
mov
negb
int3
mov
movsb
scas
add
inc
cmp
jne
sbb
dec
in
mov
aas
loope
jp
xor
lea
and
sub
dec
pop
in
cld
mov
mov
pop
mov
loope
xchg
push
pop
testb
add
test
push
into
inc
push
adc
adc
add
sarb
inc
xor
xchg
jno
sub
enter
cmp
mov
jle
and
add
mov
dec
sbb
and
inc
das
pusha
add
cmp
mov
xor
inc
cmp
jge
sub
in
testl
fdivrs
or
mov
xchg
imul
test
in
js
sbb
mov
fs
sub
daa
mov
adc
xor
sbb
push
mov
lea
add
mov
or
xchg
mov
pop
and
add
jnp
sub
sar
and
inc
cmp
inc
clc
mov
push
in
es
mov
out
sbb
inc
sub
ljmp
iret
popw
mulb
xor
inc
pop
pop
dec
cmpl
or
push
jmp
dec
fwait
out
xor
sub
cltd
inc
jle
loope
and
test
pusha
inc
mov
push
mov
mov
popf
jmp
sub
in
out
xor
mov
sub
popf
fs
bound
mov
movsb
aaa
inc
inc
mov
jg
sub
pop
aam
loopne
jns
mov
pop
les
pop
repz
ffree
sbb
aad
dec
int3
and
inc
or
sbb
mov
push
jmp
sub
cmpsb
ds
rorb
and
shlb
mov
push
sbbb
incb
and
dec
mov
mov
or
jmp
mov
dec
xchg
cmp
es
inc
add
sete
mov
lea
mov
sbb
outsl
xor
and
add
pop
popf
in
bound
ja
jp
mov
test
mov
cmp
and
addb
pop
pop
jne
pop
inc
or
xor
push
or
or
add
ds
mov
adc
shll
mov
dec
cwtl
mov
inc
sbb
adc
jo
pop
mov
sbbb
lcall
cltd
js
and
inc
leave
push
test
xchg
mov
inc
idivb
xchg
call
push
leave
xchg
mov
sub
daa
or
test
jmp
stc
mov
push
jl
mov
add
ficompl
mov
punpckhdq
mov
cltd
fcmove
inc
adc
inc
dec
faddl
mov
enter
out
movsl
jno
pop
mov
dec
lock
out
pop
jo
sbb
pop
in
or
xchg
mov
inc
ja
loopne
mov
and
mov
jbe
out
or
das
fs
out
xchg
or
jmp
pop
out
sub
jns
pushf
aaa
or
je
inc
cld
into
sub
daa
jmp
pop
jg
aaa
xorb
push
imul
jmp
std
push
pop
add
jecxz
ds
mov
adc
xor
sbb
and
icebp
push
movsb
insb
and
inc
sbb
rorl
mov
pop
shlb
sbb
pop
jmp
push
call
bound
sub
in
dec
imul
push
mov
sbb
mov
add
lock
pop
lea
icebp
pop
mov
fcom
push
xchg
sbb
insl
jns
cmp
movsl
aad
lret
xchg
mov
or
mov
out
cmp
arpl
push
in
inc
cmp
jae
adcl
clc
call
cmp
or
sahf
jge
push
fildll
sbb
sahf
fcoms
and
cltd
jmp
push
call
pop
and
push
cmpsb
mov
cmpl
aam
bound
sbb
fbstp
pop
hlt
popa
adc
xor
sbb
push
test
bound
sbb
shl
xor
nop
sbb
push
and
je
insb
cwtl
push
mov
shl
mov
rclb
inc
fs
adc
adc
mov
and
inc
mov
mov
shlb
xchg
xlat
mov
mov
movsl
ss
stos
dec
cmp
pushf
fs
das
mov
push
sub
mov
subl
test
cmp
inc
add
sbb
push
cs
and
stc
pusha
adc
int3
fsubl
insb
ljmp
sub
dec
and
mov
sbb
and
ljmp
dec
jmp
pusha
mov
cmc
mov
jmp
hlt
repz
insb
int3
test
mov
jb
loop
ljmp
pop
shr
ljmp
fildl
fucomip
inc
push
mov
aaa
push
test
cltd
rol
cmp
push
out
push
sbb
movsl
xor
jmp
inc
lret
hlt
dec
or
jne
and
les
add
jno
mov
inc
or
mov
js
hlt
xchg
hlt
adc
sub
out
dec
mov
push
aam
mov
out
loop
push
stc
scas
mov
adc
mov
mov
movsb
cmpsl
xor
in
add
sbb
jmp
push
or
jmp
or
testl
ds
adc
jmp
sbb
aad
ret
sbb
and
push
clc
jbe
mov
mov
and
xchg
push
jge
mov
lret
dec
pop
pop
dec
clc
and
mov
mov
adc
les
mov
jb
cmp
fstps
inc
and
stc
insb
and
jo
and
adc
insl
pusha
pop
sub
mov
imul
cwtl
mov
pop
fdivrl
xlat
cmpsb
adcb
cltd
mov
pop
loopne
pop
shll
mov
adc
movsl
or
jl
aam
and
scas
push
and
das
int3
outsb
xor
cli
test
fdivr
bound
cli
rolb
xchg
je
cld
adc
mov
adcl
and
mov
test
push
in
push
adc
adc
xchg
hlt
and
aaa
or
ret
or
test
mov
pop
sub
sahf
icebp
inc
xor
fsubrl
lret
cwtl
sub
fs
add
insl
and
add
sbb
idivb
adc
cmp
pop
or
adc
into
mov
inc
lods
and
cmc
and
mov
loopne
sub
mov
push
in
xchg
mov
ljmp
dec
movsl
adc
enter
in
cmc
inc
push
xor
in
cmc
sar
cmc
test
cmp
sub
cmp
fisttpl
or
sbb
inc
xlat
cmp
push
and
ss
enter
cmpb
add
aaa
mov
pusha
enter
cmp
sbb
lea
inc
repz
test
lods
inc
popa
mov
xchg
cmp
sub
or
out
mov
adc
loop
aad
mov
inc
push
cwtl
xchg
jmp
jns
lock
stc
mov
inc
arpl
jnp
test
inc
and
sbb
xchg
je
push
arpl
inc
jmp
daa
pop
ret
sbb
sbb
push
push
sub
or
gs
push
adc
jb
nop
sub
icebp
addb
mov
rolb
popa
sub
jmp
push
xchg
cmpb
scas
add
sbb
call
movl
and
ret
dec
ret
mov
xchg
fisubl
and
mov
and
sbb
in
lcall
mov
ret
std
adc
rcll
cmc
or
std
lods
jmp
push
and
pop
adc
xchg
aaa
xchg
adc
sub
int3
cmpsb
ljmp
add
imul
push
adc
dec
loope
cmp
xchg
in
adc
and
cmp
and
mov
test
cs
xorl
mov
mov
sbb
test
popf
or
add
mov
sub
jne
cmp
daa
je
jns
or
cmpsb
outsl
push
popf
in
std
mov
js
dec
pop
aaa
mov
nop
and
sbb
cmp
push
cwtl
test
mov
dec
or
adc
mov
popf
dec
mov
push
sub
test
adc
es
in
push
das
sub
cmpsl
adc
sbb
mov
cmp
jg
inc
inc
jae
and
inc
xchg
sub
cld
sub
dec
mov
and
in
pusha
test
and
or
inc
daa
sub
cld
sub
inc
inc
ljmp
xchg
test
leave
cmp
mov
pop
mov
inc
cmpsl
mov
test
sub
xor
sub
adc
movsb
inc
add
and
inc
mov
movl
sbb
jo
lods
inc
inc
shlb
loop
xor
lods
inc
adc
pushf
lds
adc
ljmp
cltd
mov
idiv
mov
sub
aam
das
ret
cmpsb
sti
push
xor
fcompl
inc
test
ja
xchg
mov
sbb
lcall
lock
xchg
in
inc
xor
inc
nop
sub
fdivs
or
das
cmpsb
lds
mov
mov
inc
clc
movsl
sbb
popf
xor
test
enter
icebp
or
inc
mov
adc
inc
sbb
xchg
push
push
and
and
and
xchg
sub
mov
orl
push
and
jp
push
sbb
pop
push
xchg
adc
repnz
ss
movsl
inc
ljmp
xor
inc
pop
and
pop
and
fs
sub
dec
push
stos
mov
movsb
inc
je
sbb
test
push
movsb
push
addr16
dec
xor
out
xchg
push
adc
lods
les
and
push
pop
dec
mov
stc
mov
cmc
movsb
hlt
mov
rolb
mov
sbb
pop
push
es
inc
mov
xor
clc
out
loop
inc
out
fdivs
or
xchg
shlb
or
cmp
roll
and
sub
cmp
test
mull
add
repz
lcall
pop
sbb
xchg
repnz
sbb
test
es
scas
cmc
mov
dec
mov
sub
cmc
mov
add
inc
sub
mov
ret
addr16
inc
mov
cld
sbb
cmc
jp
mov
scas
adc
out
jmp
les
and
xchg
dec
sub
sub
call
daa
adc
sbb
push
mov
bound
adc
mov
pop
mov
nop
pushf
repnz
cmp
popa
mov
and
lods
cmpsl
lret
and
push
notb
dec
pop
mov
test
inc
lahf
test
or
sarl
and
adc
nop
jno
push
cmp
mov
sbb
sub
enter
mov
dec
sub
aam
inc
in
sahf
xchg
xchg
mov
inc
je
or
movl
movsb
in
pop
js
add
fwait
shl
pop
pop
push
mov
or
mov
inc
mov
fisubrl
sbb
or
cwtl
clc
lock
daa
iret
or
inc
or
mov
sbb
and
stos
test
adc
or
sbb
pop
jecxz
mov
and
adc
pushf
mov
sbb
test
enter
and
inc
sbb
cld
adc
mov
sbb
inc
sub
test
add
test
ljmp
rorl
adc
cmp
fadds
enter
and
adc
and
inc
ja
arpl
sub
dec
std
cmp
inc
xor
mov
and
fs
jb
adc
and
and
mov
test
test
lock
adc
mov
loopne
inc
xchg
enter
and
icebp
sbb
inc
sub
test
mov
cmp
mov
mov
push
or
popf
nop
movsb
mov
pop
xchg
aaa
mov
adc
test
jg
or
xor
sbb
push
adc
mov
xchg
sub
mov
and
clc
xor
test
and
cmp
pop
sbb
or
adc
push
call
sub
cs
adc
imull
cmp
icebp
fstpl
out
fcompl
pop
jne
sbb
inc
icebp
mov
xchg
scas
mov
pop
cmpsl
mov
push
mov
jne
dec
xchg
icebp
icebp
lret
pushf
pop
js
inc
and
sub
lcall
pop
outsl
popa
sub
cmp
or
icebp
xchg
ss
push
test
xor
ljmp
stos
mov
push
and
xchg
add
adc
sub
add
pop
adc
push
adc
jns
cmpsb
mov
push
and
scas
inc
pop
test
das
inc
push
adc
inc
lock
ret
jo
in
sbb
push
and
lcall
xchg
and
loope
les
xor
xor
adc
lock
and
loop
jmp
pushf
or
mov
xchg
add
pusha
enter
test
mov
adc
or
or
jb
xor
lods
xlat
sahf
sbb
push
jae
add
movsb
dec
push
sbb
mov
adc
xor
xchg
sbb
add
dec
push
mov
sbb
pop
int
mov
or
or
ror
jno
push
mov
loope,pn
dec
inc
fmuls
or
cmp
movsb
test
arpl
and
dec
adc
and
mov
cmp
and
jno
call
xor
push
les
push
je
or
scas
movsb
push
movsb
repz
xor
das
sbb
hlt
psubsb
pusha
ret
jne
mov
hlt
aas
xor
or
and
adc
clc
in
addb
inc
movsb
mov
repz
inc
cwtl
mov
inc
xchg
mov
or
test
adc
movsb
xchg
lods
daa
inc
test
sbb
popa
and
pop
cmpsb
xchg
jo
xor
mov
mov
sbb
xor
inc
and
xor
pop
es
jns
or
popl
push
push
jle
bnd
pop
push
or
dec
stos
add
or
dec
mov
dec
pop
add
push
call
sarl
test
add
xor
adc
and
adc
fs
and
add
push
scas
or
and
mov
jecxz
xchg
popa
push
call
inc
pop
and
mov
call
test
and
xchg
stc
aas
cmp
adc
lret
in
outsb
nop
test
push
or
push
call
and
fisttpl
and
dec
aaa
adc
or
test
and
mov
faddl
mov
lock
push
outsl
mov
and
or
mov
cmp
in
insl
es
xchg
int3
sti
nop
pop
fdivs
jp
inc
inc
cmpsb
mov
adc
inc
sub
mov
lock
adc
xchg
mov
mov
cmp
cmp
xchg
xchg
or
lret
cmp
or
enter
mov
leave
jp
dec
mov
inc
mov
sub
fs
or
adc
scas
sub
adc
inc
pop
cwtl
adc
fisubl
mov
sub
push
dec
inc
movsb
test
lret
fs
out
lahf
or
repnz
fisttpl
fs
loopne
test
add
nop
xchg
mov
sub
or
inc
jnp
and
dec
and
dec
mov
cmp
test
and
push
inc
leave
and
mov
icebp
sahf
or
sub
pop
xchg
mov
and
fs
adc
adc
sbb
xchg
pop
fistpl
test
enter
and
inc
popa
and
mov
and
je
inc
cmp
shl
mov
and
and
and
nop
mov
pop
stos
sbb
test
hlt
popf
inc
mov
mov
or
cmpsl
nop
js
pop
mov
mov
and
adc
and
adc
cmp
sub
inc
pop
and
adc
in
push
sbb
test
enter
and
xor
and
bound
testl
mov
loopne
and
mov
sbb
test
les
fwait
or
push
xchg
adc
xchg
xchg
xor
cmp
jb
push
or
pop
pop
pop
negb
mov
adc
out
adc
sbb
iret
mov
and
fs
fwait
cmp
jns
cmpb
and
pushf
pop
or
fs
and
test
or
hlt
mov
iret
jge
popa
and
loope
data16
in
jne
mov
push
sbb
mov
test
call
cmp
or
int
xchg
mov
sbb
jmp
and
in
fmuls
push
mov
pop
add
xchg
mov
in
lcall
leave
sbb
lods
repnz
leave
adc
xacquire
pop
lret
loop
and
sub
mov
xchg
les
mov
pusha
push
lret
sub
fs
out
push
pop
sbb
pop
clc
mov
mov
loop
lahf
int3
pusha
and
pop
leave
sbb
inc
lea
pop
lret
je
push
addr16
mov
mov
adc
and
cltd
dec
mov
pop
test
rolb
and
fcoml
xchg
mov
adc
call
adc
insb
inc
and
sub
inc
adc
je
dec
mov
adc
in
test
into
fnsave
clc
inc
pop
sub
mov
inc
mov
or
mov
icebp
cwtl
adc
test
push
inc
xor
add
mov
cmp
es
push
sub
adc
mov
gs
pop
fadds
loopne
xchg
and
inc
nop
outsl
mov
push
sbb
pop
enter
and
inc
into
and
adc
mov
add
adc
xchg
loop
inc
and
xchg
adc
push
add
enter
cmp
test
enter
inc
and
jo
xor
movsl
sbb
mov
mov
cmp
lds
xchg
repnz
dec
mov
test
pop
pushf
lods
xchg
mov
sbb
adc
loop
inc
and
sub
jo
test
mov
xchg
adc
or
or
or
mov
xor
mov
add
outsl
pop
mov
sub
mov
mov
push
inc
imul
shrb
sbb
mov
movw
iret
inc
or
or
mov
call
jmp
inc
sbb
inc
push
mov
push
mov
mov
sbb
pop
sub
daa
jle
out
or
es
sub
cmovbe
and
pop
and
mov
sub
mov
inc
mov
mov
adc
sub
xor
pop
in
cmc
mov
mov
fmull
adc
mov
jno
adc
add
sahf
mov
mov
daa
push
jnp
loop
lcall
fs
bound
lods
in
fstl
or
and
xchg
jp
pusha
cmp
xchg
addr16
push
or
push
std
jmp
call
mov
test
rolb
adc
adc
and
int
inc
mov
or
mov
sub
inc
adc
jp
xorb
mov
test
mov
and
mov
sub
sbb
adc
sbb
add
les
js
ja
mov
aam
ret
adc
sub
xchg
out
push
mov
xchg
inc
pop
and
in
or
inc
xor
xor
dec
jmp
sbb
jle
add
push
jg
or
cmp
or
data16
out
mov
movsb
xorb
orb
dec
push
and
clc
mov
mov
out
jb
data16
int3
push
lock
out
push
push
outsl
into
nop
ds
aam
inc
adc
jg
adc
test
pushf
cmp
and
mov
aaa
sbb
xor
in
icebp
mov
inc
jg
dec
dec
and
and
and
adc
loopne
sbb
cld
clc
mov
adc
addr16
push
xchg
lods
jle
sub
or
sub
inc
mov
faddl
mov
pop
sahf
es
mov
inc
mov
mov
mov
sub
xchg
xor
jle
lahf
push
jo
push
push
call
into
clc
clc
xor
je
adc
call
rclb
jmp
push
cmp
inc
js
sub
jecxz
inc
adc
pop
movb
js
cmp
cmpsb
add
mov
jmp
mov
test
xchg
js
or
loop
repz
call
push
xchg
mov
rcrb
dec
xchg
mov
clc
orps
cmp
std
stos
xor
push
or
pop
sbb
sahf
mov
jno
or
mov
push
inc
adc
xchg
pop
adc
inc
les
adc
cmpsb
ds
repz
or
or
adc
cmp
push
jmp
or
out
dec
inc
pop
aam
cmp
daa
adc
dec
add
sbb
inc
push
pop
mov
xlat
mov
ficoms
out
sbb
and
add
push
pop
lods
mov
cmc
test
inc
cmp
xor
or
adcb
addl
or
ss
icebp
cmc
mov
adc
jp
mov
mov
scas
add
and
roll
push
mov
pop
xor
jnp
fs
mov
stos
push
xchg
xor
pusha
test
add
and
inc
cwtl
mov
mov
test
mov
stos
adc
push
xchg
mov
xchg
or
xchg
test
xor
fists
je
and
popa
les
call
clc
negl
cmpsb
cmpsb
xchg
in
mov
pop
std
ret
imul
loop
out
inc
sub
fstps
stc
dec
sar
out
jmp
push
arpl
cltd
mov
xor
or
pop
daa
or
dec
jbe
sub
aaa
pop
cmp
or
cwtl
sub
stos
or
adc
inc
stc
sub
popf
je
fisubrs
or
mov
push
add
mov
sub
adc
es
mov
mov
xor
enter
mov
loope
push
es
adc
jmp
jl
inc
scas
sbbb
xor
xorps
repnz
shl
js
dec
daa
mov
mov
add
adc
daa
adc
pop
and
mov
shrl
adc
ljmp
mov
mov
and
jl
inc
pop
jp
pop
test
je
push
dec
stc
clc
pop
sub
mov
mov
jl
sti
adc
mov
mov
mov
stos
mov
mov
mov
mov
mov
mov
in
mov
or
pop
jle
cld
test
xor
sub
scas
mov
add
fistpll
hlt
mov
or
enter
sbb
inc
sahf
fs
xchg
js
mov
pop
lea
cwtl
nop
or
enter
push
mov
jle
xor
or
sarb
lret
dec
sar
aaa
or
test
inc
inc
xor
adc
and
mull
test
adc
adc
inc
push
and
adc
inc
mov
lcall
sbb
mov
or
add
sbb
mov
xchg
cmpl
adc
sbb
movsl
xor
dec
inc
or
cmp
pop
adc
mov
and
inc
in
ds
push
test
sti
and
pushf
inc
xor
imul
pop
cmp
pop
insl
pop
cmpsb
sbb
enter
movsl
dec
sub
push
popf
daa
fwait
sbb
sbb
add
jge
adc
dec
mov
shll
jl
dec
mov
fdivr
pop
js
and
cmovne
inc
jmp
pop
stc
jge
push
or
les
into
js
popa
pushl
and
cmpl
ljmp
cltd
bound
xchg
iret
add
sub
lock
test
adc
iret
je
test
sub
inc
scas
es
outsb
inc
cmp
mov
cmp
sbb
loop
cmpsb
aad
stc
ja
and
inc
ja
loop
or
inc
ja
or
ja,pt
pop
subl
cltd
pop
xchg
out
dec
hlt
les
jb
test
pop
push
insl
out
stc
or
inc
clc
cmp
inc
adc
mov
cmp
sub
test
inc
dec
jp
daa
dec
cmp
jl
inc
in
clc
sbb
into
inc
inc
les
adc
into
loopne
mov
inc
stos
shlb
jbe
test
es
dec
lret
je
imul
cmc
pop
mov
push
fcmovbe
into
mov
in
adc
push
out
xor
pop
pop
in
es
adc
or
jns
add
ljmp
inc
jns
push
push
sub
cmp
loop
out
adc
enter
push
inc
cmp
inc
out
mov
inc
mov
lods
jp
out
out
test
add
adc
jle
ret
insb
add
popf
mov
cmp
imul
in
or
adc
pop
test
ja
inc
cwtl
sub
icebp
adc
lret
pop
inc
sbb
sbb
adc
adc
add
and
jb
jbe
cmp
movsb
push
popa
mov
loopne
push
adc
push
cmp
sbb
cwtl
mov
inc
flds
sbb
mov
call
dec
hlt
cmp
and
das
aad
sbb
jo
mov
mov
lock
xchg
xor
test
test
gs
repnz
adc
mov
js,pt
les
in
sbb
ja
adc
adc
les
sub
adc
mov
jl
and
popf
call
repz
cwtl
iret
sbb
inc
jno
sbb
lret
inc
cwtl
xor
call
cmp
sub
les
adc
inc
jbe
and
and
mov
xchg
inc
lea
cwtl
shll
rorl
das
repz
sub
inc
add
jae
xor
sub
call
call
push
dec
lds
stc
cmp
lds
ret
and
sbb
xchg
or
sbb
sub
test
ret
cmp
lds
ss
cmp
cs
add
jl
push
cld
bound
push
jmp
xor
pop
sub
fsts
mov
xor
push
xchg
add
int
sub
jbe
mov
gs
and
aad
or
test
or
call
xor
inc
jmp
out
inc
xchg
in
or
cmp
mov
imul
jo
popa
jb
loop
fsubrl
adc
sbb
xchg
push
or
adc
sbb
mov
test
push
jo
xorl
cmp
gs
xchg
loop
adc
loope
push
cmp
sarb
mov
icebp
lods
loop
jb
adc
repz
push
xchg
or
ret
xchg
fists
mov
jbe
pop
push
les
jmp
push
dec
or
pusha
in
and
pop
sub
or
les
cld
iret
cld
sarb
aas
cmp
lods
and
mov
add
stos
jae
int3
xor
aad
ret
inc
jb
daa
addr16
andl
rclb
jae
bound
rorb
popa
and
jne
or
mov
les
jmp
pushf
jle
inc
ret
test
xor
push
adc
call
cmp
mov
jmp
xor
adc
adc
adc
push
les
call
adc
jne
outsb
adc
sbb
gs
pop
cmp
jb
dec
clc
adc
inc
mov
mov
push
mov
das
pop
cmpsb
jmp
cmp
mov
sub
movsl
divb
dec
xchg
jns
daa
push
jb
push
nop
dec
xor
xor
test
cmp
push
inc
imul
sub
inc
call
or
jp
jno
xchg
rcl
mov
int
xor
mov
push
icebp
cmp
jp
inc
fmull
in
insb
sub
mov
mov
mov
dec
dec
fsubrl
int
adc
cmpsl
xchg
cmp
ds
push
pop
shrl
stc
pop
test
fmul
sbb
lds
ret
sbb
sub
sbb
mov
repz
push
call
imul
xor
clc
cmp
mov
cwtl
cmpsb
jns
test
jl
push
js
mov
lcall
xchg
add
aam
imul
mov
mov
adc
repz
mov
mov
or
mov
nop
pop
sub
inc
adc
lcall
or
jge
push
adc
adc
shrl
stos
pop
push
inc
push
jnp
cwtl
or
push
je
mov
inc
lds
inc
pop
sahf
jecxz
jbe
leave
push
ds
mov
sbb
stos
test
aad
scas
adc
enter
stos
push
add
jmp
mov
loope
stc
dec
clc
lods
inc
adc
test
add
jb
push
sbb
xchg
dec
xchg
inc
dec
fisubs
cmp
adc
or
imul
mov
mov
mov
dec
fnsave
incb
pop
or
pop
insl
cmpsl
loop
add
int
insb
fists
fldl
insb
fistps
testb
out
js
cmp
pop
faddl
fsub
xchg
addr16
pop
fnstsw
aad
inc
addr16
jae
aam
loopne
push
adc
adc
fcomp
inc
push
fcompl
xor
xor
jmp
sub
sarb
loop
imul
sub
sub
mov
enter
cmp
je
orl
push
and
pushw
imul
pop
mov
daa
adc
jmp
cmp
pop
and
or
adc
pop
xor
addr16
and
xchg
cmp
inc
addr16
rorb
and
or
xchg
or
out
fstps
push
shlb
call
cld
mov
or
adc
repz
aaa
adc
mov
adc
mov
sub
movups
aaa
mov
push
and
push
xchg
push
mov
clc
inc
jmp
cld
or
nop
jbe
cs
loope
mov
data16
rorb
mov
add
pusha
xor
test
rolb
insb
and
out
cmc
dec
ja
les
push
inc
cmp
inc
cmp
sub
adc
ja
pop
xchg
imull
dec
cmp
sub
aad
jmp
daa
fcoms
push
push
sub
cld
add
int
xchg
jg
cmpsl
adc
or
sub
mov
mov
adc
mov
inc
mov
adc
lock
imul
cli
std
jb
mov
jp
jns
adc
enter
xchg
inc
ss
gs
imul
mov
call
repnz
mov
jge
mov
add
jmp
and
push
and
xlat
or
fists
jg
push
adcb
push
es
imul
or
inc
addr16
bound
sub
pop
mov
sub
ficompl
repnz
mov
xchg
xchg
iret
ret
loop
mov
sub
popl
into
imul
push
imul
mov
pop
je
pop
push
xchg
pop
or
in
mov
mov
xor
data16
hlt
xlat
and
sub
aam
cmp
arpl
inc
sarb
bound
inc
adc
sbb
mov
cmp
sbb
shll
inc
and
js
nop
ficomps
push
jae
push
mov
pop
data16
or
sub
call
jl
jb
nop
movsl
ss
mov
test
mov
adc
xor
aad
popf
test
pop
jp
bound
aam
mov
clc
in
xchg
hlt
push
cmp
rolb
in
inc
xor
and
pop
inc
xor
test
cwtl
aas
iret
xor
cltd
mul
gs
test
push
jmp
dec
or
popa
cmpsb
or
icebp
or
mov
or
mov
xor
and
cli
rol
pop
cmp
mov
out
rorb
sub
or
adc
sub
mov
cmp
fdivrs
and
sub
mov
imul
scas
and
aaa
lcall
inc
fmull
or
pop
sub
ret
sub
push
enter
dec
std
repnz
dec
xor
pusha
sub
psubsw
mov
sub
xor
pop
imulb
fiaddl
jb
sub
push
mov
push
fdivr
outsb
enter
pop
loop
jne
movsl
mov
hlt
rolb
mov
popf
cmp
ljmp
fimuls
imul
das
dec
loopne
call
lret
mov
add
sub
fwait
in
mov
jns
fs
jae
mulb
inc
loope
jl
xor
mov
mov
inc
fisubl
loop
sbb
ror
push
push
int3
nop
or
mov
push
or
push
jge
mov
pop
je
int3
and
inc
sbb
bound
mov
pop
bound
jecxz
push
add
mov
pop
in
pop
adc
es
movsb
push
xchg
cmp
push
pop
pop
sub
pushf
mull
pop
and
loop
and
pop
test
and
popf
jmp
and
sub
arpl
shll
inc
or
fisttpl
nop
psubsw
stos
shlb
and
inc
or
add
cmp
mov
adc
cmp
dec
inc
fxtract
leave
push
in
push
cmp
and
mov
xor
jecxz
pop
add
push
add
inc
lds
mov
adc
aam
or
leave
movsl
hlt
xchg
pop
cld
aaa
xor
add
mov
cmp
push
sub
sub
dec
push
mov
movb
mov
and
cmp
lret
mov
psubsw
lret
lcall
fimull
pop
mov
add
push
sahf
stos
popf
inc
fdivrl
inc
and
xchg
mov
inc
or
and
rorb
mov
sub
fdivs
cwtl
mov
inc
add
add
pop
stos
cmp
inc
dec
sbb
pop
dec
test
das
and
fidivrs
js
call
test
mov
movups
and
cs
sub
xchg
js
jge
push
sub
outsl
movsb
out
popa
int
lock
cmp
enter
xor
cwtl
inc
sbb
sub
jno
mov
movsb
pushf
sub
mov
call
push
mulb
dec
and
xchg
lods
ret
sub
cmp
pop
or
loope
or
xchg
inc
test
hlt
xor
mov
and
lods
jo
cmpsl
adc
into
test
loope
pop
sub
adc
mov
rolb
push
sbbb
adc
mov
add
loopne
mov
xor
push
popa
push
sub
sbb
out
adc
sub
inc
mov
and
in
and
cwtl
and
add
jno
inc
aas
and
roll
inc
xor
int
mov
cmpsb
adc
sub
mov
xor
xlat
rorl
pop
imul
shr
xchg
adc
enter
xor
inc
sub
popf
repz
adc
or
insl
push
sbb
inc
adc
insl
mov
and
cmp
xor
jmp
stos
or
add
push
test
push
mov
or
iret
test
adc
mov
push
push
inc
sbb
inc
outsl
cmovno
out
or
sub
rcrl
mov
xchg
inc
mov
push
mov
rdmsr
inc
sub
and
inc
cmp
inc
test
mov
loop
sarb
in
lret
adc
xchg
add
out
jne
mov
cmpl
scas
adc
adc
adc
in
jnp
jno
daa
pop
xlat
sub
jne
shll
xlat
xchg
mov
aam
fildl
call
mov
pop
seto
push
add
arpl
js
xor
cmp
sbb
inc
mov
jmp
in
or
ficoml
fs
jb
sbb
sub
push
nop
push
mov
jmp
pop
or
inc
call
imul
xor
cmp
loopne
pop
cmpsb
daa
xchg
pop
mov
ret
movsb
inc
bound
jge
push
adcl
imul
nop
mov
test
sub
out
sub
fcoml
repnz
cld
ja
push
lock
cmp
lods
fldl2e
push
lea
stos
sub
insb
lret
jo
pop
pop
je
push
inc
ja
mov
imul
call
out
les
nop
mov
xor
hlt
jl
std
and
sub
mov
push
and
enter
xor
or
xchg
cld
inc
nop
xchg
lret
inc
lods
xor
movsb
inc
inc
enter
adc
lret
mov
sbb
sbb
jge
fs
inc
and
jae
aaa
sub
cmp
movsb
inc
sbb
push
js
adc
clc
and
mov
daa
add
jecxz
or
add
in
sbb
adc
loope
jg
jmp
jns
pushf
mov
sub
xor
sbb
xchg
daa
addb
and
xor
adc
dec
sbb
sbb
pop
repz
test
cli
sbb
or
and
push
hlt
jl
lods
lock
mov
adc
inc
mov
sub
nop
les
fldl
pushf
scas
scas
inc
mov
or
mov
int3
xor
dec
jp
or
rclb
sub
or
fadds
or
sub
or
push
push
and
dec
mov
inc
xor
sbb
xchg
sub
cmp
adc
sbb
jb
lods
adc
or
xor
inc
mov
mov
enter
or
inc
push
sbb
or
jo
xor
pushf
or
mov
and
pop
loop
inc
sbb
inc
inc
mov
les
sbb
and
add
dec
and
les
cld
mov
fwait
or
and
test
vpmacssdqh
cld
scas
je
dec
dec
std
push
sbb
aas
into
in
xor
sub
into
push
mov
cmp
out
movsb
or
mov
test
jmp
pusha
insl
rorl
lret
test
inc
mov
sub
cwtl
test
cmp
enter
jg
inc
or
orb
or
sub
cmp
clc
inc
pop
sbb
mov
sub
out
movsl
add
dec
sub
loopne
adc
sbb
sub
or
les
shlb
pop
or
mov
adc
bound
in
xchg
adc
inc
enter
bound
xchg
and
mov
and
xchg
and
outsb
in
adc
inc
xchg
dec
dec
add
fdivrl
daa
inc
in
and
test
adc
enter
dec
inc
sbb
or
loopne
filds
movsb
sbb
sub
or
cmp
and
js
mov
js
push
or
sbb
jo
test
and
nop
ror
loope
xchg
xor
sbb
fdivs
mov
mov
enter
inc
jl
cltd
xchg
cmp
and
push
inc
je
adc
mov
jno
mov
and
adc
pop
inc
push
and
fs
shl
sbb
loopne
push
inc
mov
adc
inc
lods
and
es
lret
jno
inc
adc
inc
js
dec
enter
pop
or
add
movsl
and
rcrb
adc
loopne
inc
aam
hlt
xchg
inc
or
cmp
sbb
dec
dec
mov
mov
les
ret
mov
leave
adc
inc
or
lret
xchg
lds
cmp
in
push
xor
add
pop
in
rorl
in
inc
sbb
push
sbbl
dec
hlt
mov
pop
je
pop
fbld
xor
enter
and
les
push
pop
decl
hlt
inc
push
inc
xor
sub
mov
jno
inc
adc
xor
adc
enter
xor
inc
and
mov
dec
inc
adc
adc
add
sbb
inc
pushf
and
xchg
inc
sahf
ljmp
adc
pop
adc
or
push
inc
andb
inc
mov
inc
cmpb
adc
jbe
xor
sub
and
mov
add
mov
nop
xor
push
dec
or
cmc
pusha
imulb
xchg
inc
and
pop
inc
inc
and
mov
jbe
loopne
loop
mov
dec
and
inc
mov
jge
dec
and
nop
in
push
cld
or
push
inc
movsb
xor
je
je
fsub
movsb
sub
nop
dec
mov
ds
sub
and
mov
dec
mov
push
sub
sbb
jl
and
push
mov
mov
or
mov
pop
pop
fdivrs
inc
enter
les
sub
ja
adc
pop
inc
pusha
and
push
lock
push
ficomps
pop
pop
ret
test
mov
push
push
jle
xor
jge
je
sub
pop
push
mov
add
or
dec
daa
in
or
push
adc
sub
pop
mov
pop
and
adc
loop
sbb
jb
sbb
inc
and
inc
adc
sbb
pop
xor
dec
or
out
sbb
or
test
and
inc
sub
and
sub
xor
test
dec
pop
daa
or
xor
cmp
rcrb
or
repz
cmp
and
mov
dec
push
inc
mov
cmp
xchg
mov
adc
dec
and
adc
jge
fucom
inc
push
jb
sbb
sub
dec
pop
and
and
loop
sbb
enter
cmp
loope
push
mov
xchg
sbb
adc
jp
adc
adc
adc
scas
mov
mov
or
lea
popf
xor
inc
loopne
iret
jo
sbb
pop
sbb
inc
outsb
pop
dec
pop
test
lock
inc
jnp
out
pushf
leave
xor
call
xor
aam
cmp
or
and
jne
or
movd
or
ja
enter
or
test
pop
add
adc
rcrb
pushl
mov
dec
xadd
loopne
ret
mov
adc
or
test
je
call
mov
sbb
and
push
push
pushf
pop
subb
add
mov
xor
and
sub
lock
inc
test
and
or
pop
push
push
mov
mov
and
push
push
cmp
movsl
mov
push
loope
inc
cmp
push
push
bound
cmp
je
xchg
push
mov
out
dec
push
and
jno
movsb
push
adcl
outsl
pop
sub
push
and
jbe,pt
lea
stc
xchg
cmpsb
mov
inc
add
cmp
jb
icebp
jmp
xor
pop
fwait
fs
out
hlt
jmp
lahf
or
adc
dec
lods
mov
repz
inc
cmpsl
or
lods
or
test
sahf
jl
lret
xacquire
cmp
mov
jne
in
and
lds
lods
add
fmul
push
shll
out
sbb
lea
push
add
mov
sbb
movl
jmp
and
test
xchg
or
roll
pop
jmp
jg
call
mov
lock
jne
jle
enter
cmp
sub
inc
push
divl
jbe
or
mov
mov
add
testb
insb
pop
movsl
clc
xchg
daa
cmc
dec
or
xlat
or
add
mov
xor
add
stos
mov
outsl
ret
and
inc
cli
mov
xor
jle
call
or
xchg
dec
push
loop
sbb
fmull
or
or
mov
cmc
xchg
mov
inc
dec
mov
hlt
dec
pop
xchg
push
pop
mov
adc
mov
jle
mov
cmpb
aad
inc
addr16
call
mov
pop
lock
adc
xchg
jl
mov
mov
pop
mov
jne
popf
sbb
mov
or
or
cmpsb
inc
dec
push
xchg
dec
lcall
test
push
sti
pop
push
add
sub
cmp
jl
repnz
movsl
adc
pop
mov
mov
and
lret
sub
adc
repnz
add
jb
or
clc
negl
hlt
fistpll
pushf
pop
push
int3
mov
sub
dec
mov
and
loop
mov
mov
adc
xchg
fidivrs
mov
fs
js
mov
inc
stos
or
pop
jne
adc
mov
jl
xchg
push
inc
mov
arpl
movsb
mov
pop
movsb
daa
add
test
adc
jne
mov
push
add
push
push
inc
mov
and
add
mov
adc
pop
fdivrs
jecxz
stos
inc
mov
test
inc
cmp
mov
inc
jg
das
sbb
je
push
sbbb
ljmp
xor
jge
cmp
arpl
ja
mov
dec
cmp
push
in
dec
push
daa
pop
inc
jmp
push
in
jbe
fcoms
das
inc
mov
xor
cwtl
in
add
pop
test
push
test
mov
test
inc
mov
add
mov
push
inc
je
lea
hlt
dec
inc
call
fcomps
mov
jmp
or
dec
ret
xchg
xchg
hlt
xlat
rol
add
inc
aas
cmp
lret
jmp
cmpsl
lea
mov
mov
idivb
mov
dec
and
add
ret
mov
or
push
and
adc
das
jae
pop
mov
test
scas
pop
or
push
fmull
gs
mov
shrl
jno
jbe
repnz
mov
mov
pop
lea
dec
xchg
jnp
ja
clc
add
push
lea
adc
push
xchg
adc
and
push
stc
push
mov
dec
push
inc
fadds
xchg
mov
enter
mov
xor
add
es
gs
imul
inc
push
ds
out
adc
fisubl
push
call
mov
dec
sti
fs
repnz
das
jno
adc
xorl
xchg
call
ja
cmp
jmp
push
int3
xor
add
and
inc
lods
lods
pusha
loope
ret
inc
pop
jns
xor
sub
js
mov
sub
and
or
pop
daa
orl
add
mov
aam
loopne
lahf
push
adc
andb
or
pop
mov
movsb
popa
pop
add
inc
ret
mov
shl
sbb
call
or
push
mov
dec
cmpsb
nop
or
add
stos
mov
out
add
sahf
addb
sbb
or
sbb
or
cmp
ret
fwait
or
jne
inc
ds
cmp
cmp
adc
ja
push
push
fmull
xor
or
in
jge
adc
cs
nop
and
mov
add
stos
xchg
pop
test
cmp
sbb
add
mov
xor
jne
sub
inc
stos
adc
repnz
test
add
cmp
cmpb
add
add
cmp
adc
jmp
or
cmc
lcall
sub
push
xor
iret
mov
es
cmpsb
push
adc
push
or
mov
sbb
and
sub
inc
adc
insb
mov
repz
movsl
in
movl
es
mov
sub
test
test
scas
push
jne
xchg
dec
repnz
xor
sub
push
sbb
add
out
jne
sbb
sub
clc
xchg
test
aas
stos
mov
jo
and
test
mov
lea
std
dec
sbb
push
push
call
fildl
in
cmp
jle
ss
dec
xor
xchg
jmp
mov
cmp
je
cmc
pop
mov
xchg
sub
sub
mov
mov
out
ljmp
adc
push
sub
dec
aaa
repz
lea
xchg
adc
lds
movsl
ljmp
loop
pop
jb
jnp
sub
inc
mov
sarl
or
mov
mov
pop
add
jne
test
jle
cmp
popf
test
ffreep
cmc
ret
lcall
inc
orb
xor
insb
sub
cmp
xorl
stc
dec
xchg
jmp
and
cmp
adc
inc
pop
and
lods
je
xchg
push
push
shlb
mov
mov
and
dec
push
xchg
xchg
xchg
xchg
add
or
sbb
nop
cmp
enter
int3
add
jo
xchg
in
aam
mov
mov
cmp
test
dec
mov
cltd
or
or
xchg
and
jnp
and
dec
jp
lock
push
orl
pop
imul
jle
jle
jle
push
dec
cmp
lods
or
mov
or
adc
lret
adc
or
lea
inc
inc
push
or
mov
imul
lock
inc
xor
add
popa
adc
inc
mov
mov
or
pop
sbb
das
adc
adc
js
loop
inc
hlt
jecxz
adc
or
jge
pop
cmpb
je
jne
push
inc
or
sub
mov
sub
or
cmp
insb
cmp
sub
lahf
sbb
test
inc
sbbl
pusha
dec
cmp
add
cmp
je
cmp
and
lahf
cmpsl
mov
cmp
jl
call
test
xor
jmp
sti
ds
add
add
andb
shl
pop
sar
cmp
mov
push
incl
mov
test
push
pop
push
sbb
add
sbb
or
sub
adc
pop
movsb
and
jmp
js
ljmp
add
sbb
push
cmp
outsl
sbb
sbb
add
adc
popa
inc
jne
cmc
pop
mov
cmp
js
xchg
mov
adc
lret
add
xor
icebp
adc
inc
xor
adc
add
or
les
cmp
or
xor
gs
push
sub
xchg
mov
lret
push
cmp
dec
mov
push
mov
add
nop
loop
inc
fimull
push
push
xor
and
push
in
lret
cltd
dec
and
sbb
movb
clc
nop
loopne
cmp
cli
adc
push
inc
nop
and
or
push
repnz
fisttpll
sahf
push
insb
sub
iret
cltd
xchg
shll
pop
or
lea
call
and
and
push
cmp
mov
lds
pop
sub
inc
stc
inc
push
adc
clc
or
push
xchg
mov
and
jecxz
xchg
and
push
lods
inc
out
inc
cmp
xchg
enter
dec
mov
pop
lock
sbb
adc
adc
es
sub
xchg
mov
adc
mov
inc
fsubs
test
dec
scas
std
sbb
inc
and
inc
popf
xor
cmp
add
dec
mov
int3
jne
push
sub
xchg
sbb
push
js
sub
cmp
movsl
ret
push
dec
push
test
xor
dec
mov
cmp
in
xor
push
pop
loope
out
dec
clc
xchg
pushl
lea
cmpsb
dec
mov
lock
xor
mov
dec
adc
push
jo
in
mov
dec
ret
push
sub
inc
je
mov
sbb
jno
cmpb
or
and
push
and
xor
icebp
or
mov
adc
and
rcrb
nop
push
jo
subl
mov
sbb
push
push
mov
or
stos
mov
mov
sub
push
add
les
lret
mov
inc
or
cmp
es
dec
gs
sub
inc
xchg
adc
aaa
test
cmc
push
cmp
add
stc
mov
sub
push
xor
mov
dec
in
pop
adc
clc
mov
pop
daa
push
push
test
mov
sub
pop
cmp
adc
outsb
xor
inc
pushf
pop
repz
and
fadd
pop
fwait
adc
aaa
sub
add
and
inc
lods
mov
inc
ficoms
call
push
loopne
cmp
and
aas
cltd
lret
dec
gs
repnz
or
pop
fs
add
push
push
push
mov
mov
shlb
mov
cmp
out
pop
jl
leave
aad
aam
bound
popf
shl
mov
inc
push
jg
lock
sbb
sbb
pop
call
aas
add
jmp
sbb
add
xor
pop
xor
and
cld
pop
std
add
xchg
fsubl
daa
test
add
push
xor
mov
xchg
push
mov
aaa
push
push
sbb
mov
mov
test
xchg
mov
push
daa
rorb
add
rorb
icebp
mov
sub
imul
iret
or
adc
or
pop
xor
and
inc
add
aas
pushf
inc
movsb
inc
and
das
pushf
and
std
adc
lock
xchg
add
adc
test
sub
adc
hlt
inc
xchg
mov
test
movsb
xor
mov
pop
mov
std
enter
es
jl
bound
add
pop
call
cld
mov
les
sbb
movsb
or
rcrb
and
fs
enter
mov
dec
fs
and
mov
mov
pop
out
xor
out
repnz
mov
mov
sbb
popl
xorl
mov
xchg
ret
sbb
and
call
test
mov
dec
pop
xchg
mov
out
or
mov
pop
lret
out
push
mov
and
push
sarb
test
and
sub
subb
or
mov
push
sbb
inc
jns
xchg
negb
mov
xchg
sub
add
icebp
and
mov
pop
dec
ljmp
call
pop
bound
and
sahf
pop
leave
push
cmp
int
lea
jge,pt
sahf
ds
mov
xchg
inc
pop
xchg
jmp
imul
sbb
push
int
out
adc
adc
imul
cld
add
popa
adc
mov
repnz
jno
adc
aam
lcall
cltd
jg
jmp
mov
lahf
sbb
sbb
enter
scas
fisubs
cmc
sub
dec
lods
mov
add
jmp
dec
hlt
or
push
jmp
sbb
adc
int
xchg
faddl
and
fcomps
cmp
loope
cmp
stos
test
ficoml
adc
xor
in
lret
cmpsl
xor
out
punpckhbw
add
clc
test
fsubrs
lea
lods
shlb
clc
scas
test
mov
push
jecxz
xor
sub
insl
das
adc
bound
pop
aas
sbb
mov
call
mov
loope
xchg
jnp
xchg
lret
mov
call
rorb
pushw
fsubr
outsb
loopne
mov
or
test
out
fisttps
call
fs
or
dec
lock
repnz
xchg
clc
dec
gs
testb
and
data16
or
and
cmpsl
pop
lods
mov
and
mov
int
dec
test
lods
inc
inc
xchg
adc
out
int3
cmp
push
enter
push
mov
stc
add
or
dec
push
rclb
cltd
push
lret
xchg
ss
sub
xor
adc
push
rcrl
pop
cld
xchg
mov
outsl
dec
push
mov
adc
hlt
mov
lret
sub
aas
lea
out
outsl
ljmp
sbb
jns
add
dec
push
lock
mov
in
cmp
je
data16
test
mov
add
jge
push
sub
or
sub
pusha
cmpw
xchg
mov
push
mov
or
notb
mov
add
dec
fs
add
orb
cltd
inc
fsubs
imul
mov
pop
imul
pop
push
mov
stos
shll
pop
mov
dec
je
lea
pop
pop
pop
jmp
sub
nop
pop
cltd
stos
adc
xor
roll
inc
je
and
push
sbb
ss
jne
inc
sub
icebp
stos
xchg
dec
mov
inc
sub
jnp
push
fsubrl
pop
push
inc
in
adc
sub
fiaddl
hlt
scas
xchg
call
fadds
loop
mov
pop
sbb
mov
daa
sub
imul
cli
outsb
test
clc
es
loopne
mov
mov
xor
mov
outsl
insb
push
or
rcr
and
std
cwtl
faddp
adc
fucomi
nop
test
les
fcomps
test
stos
adc
das
nop
insb
sub
les
rol
pop
or
adc
sub
or
add
sbb
lcall
pop
mov
addr16
rcl
fs
mov
dec
daa
push
mov
pusha
dec
call
out
in
push
addl
inc
sub
dec
jecxz
xchg
or
lods
loopne
xor
dec
and
lcall
cs
cmp
das
rol
push
push
sbb
xchg
xor
mov
adc
mov
test
sti
mov
movsb
dec
pushf
cs
cmp
scas
and
enter
mov
lcall
xchg
sar
cwtl
inc
jae
test
stc
pop
daa
fsubs
mov
daa
call
inc
popf
cli
mov
mov
sbb
and
push
or
cld
cwtl
jbe
push
call
jmp
pop
clc
dec
jo
jl
popa
mov
xlat
xchg
adc
sub
jbe
and
pop
mov
and
push
push
in
mov
es
mov
pop
mov
push
sub
xchg
lock
mov
int3
mov
aam
cmpsl
fisttps
nop
cmp
ficoml
adc
scas
push
repnz
mull
and
fwait
aam
adc
pop
push
inc
ja
adc
dec
jne
stc
out
pop
daa
les
pop
sub
and
test
into
sbb
lahf
and
enter
adc
push
xchg
mov
cmp
imul
lods
cmpl
stos
je
int3
inc
fcoms
jp
and
lcall
lea
dec
call
loopne
ret
sub
into
sbb
lea
dec
pop
pop
dec
mov
xor
scas
lret
into
mov
sub
and
rol
movsb
imul
xor
lahf
int3
test
sbb
sbb
sbb
sahf
pop
dec
push
repnz
addr16
and
mov
push
test
sahf
les
jmp
icebp
jg
test
icebp
push
hlt
dec
adc
aaa
pusha
xchg
cld
repnz
jge
mov
sti
mov
test
daa
push
out
sub
insl
pop
xchg
push
pop
sub
fnsave
mov
inc
aam
test
jbe
adc
mov
fs
sub
mov
and
adc
loop
sbb
or
adc
mov
and
out
jno
or
push
push
out
mov
jnp
mov
data16
jmp
jmp
and
pusha
je
jo
mov
pop
push
aad
insl
sbb
sub
or
fmull
add
inc
hlt
cltd
ss
and
ficomps
call
clc
pop
test
mov
test
and
lcall
pop
je
fdivs
ret
js
mov
fld
fmuls
push
mov
or
inc
inc
lock
je
testb
call
fcomps
mov
addr16
cld
std
inc
push
push
or
jnp
xor
jo
stos
mov
mov
xchg
inc
cmpsw
aad
or
xor
adc
jge
push
add
clc
jg
popf
ret
ja
cmp
add
xchg
mov
add
shr
pop
sub
pop
push
enter
arpl
sti
mov
sub
test
pop
ss
mov
test
mov
pop
sbb
dec
sbb
xor
jnp
lds
adc
sti
sub
jns
mov
fwait
pusha
pop
inc
das
adc
mov
call
sub
mov
inc
mov
cmp
adc
cli
cmpsb
rcrb
and
andb
ljmp
in
sbb
out
add
leave
fsubl
aad
jg
call
mov
push
jge
stos
data16
or
lahf
cld
das
fwait
dec
sbb
mov
dec
pop
lcall
sbb
mov
xor
mov
mov
aad
jecxz
lahf
inc
addl
imul
pop
xchg
push
test
pop
mov
dec
ret
adc
hlt
call
adc
xor
dec
dec
mov
pop
dec
mov
dec
shr
es
test
or
rolb
enter
and
ret
add
push
aas
int
cs
mov
cmovs
sbb
incl
mov
call
inc
fcoms
push
jmp
inc
sbbb
dec
sub
and
pop
jl
sbb
sub
ljmp
test
loop
push
lods
adcl
and
push
push
sub
push
pop
push
dec
bound
adc
push
jae
ret
std
and
insl
jae
sbb
decb
in
cld
inc
mov
adc
clc
clc
mov
mov
push
push
aad
adc
pop
lods
shlb
sbb
jno
addl
rolb
shlb
jmp
pop
iret
pop
icebp
jae
push
ja
mov
mov
inc
push
lods
movsb
push
les
je
lahf
sahf
leave
cmpsl
cmp
pop
cld
xchg
js
pop
sub
pmullw
inc
add
sbb
push
cwtl
faddl
and
fstps
icebp
dec
xchg
fistl
or
xor
xchg
cmp
les
cli
xchg
cmp
push
cs
daa
or
aaa
aaa
bound
sti
fwait
pop
adc
gs
int3
dec
pop
hlt
sbb
inc
fistl
sub
pop
sub
sub
mov
addr16
mov
ret
xchg
xor
adc
dec
push
jbe
xchg
test
es
and
sbb
xor
and
sub
cli
mov
inc
sahf
sub
pop
mov
jmp
push
adc
pop
lret
adc
push
push
repz
pop
xor
std
lahf
div
pushw
ds
add
imul
stc
js
lcall
or
jnp
dec
gs
fbstp
push
daa
sbb
loop
pop
testb
rcrl
dec
xchg
sub
cld
cltd
rorb
xchg
out
je
or
xchg
sbb
mov
xor
mov
sub
pop
xchg
cmpb
sbb
subb
inc
pushf
in
sbb
xor
je
push
or
jle
or
pop
insb
cmp
and
adc
call
add
push
push
mov
test
es
xor
test
xor
jmp
outsb
repnz
dec
nop
cld
mulb
call
push
adc
or
sbb
je
cmpsl
and
jne
adc
pop
mov
pop
mov
in
jle
push
in
sub
mov
fs
push
dec
negb
roll
mov
fbstp
fimull
and
xorb
pop
call
mov
dec
pop
push
fisttpll
shl
js
cmp
insl
xchg
fmull
mov
xor
and
and
adc
jecxz
jl
pop
lock
js
pop
adc
cmp
cltd
inc
repz
adc
cmp
fcompl
mov
pop
stos
xorb
cmp
mov
ret
aas
inc
jbe
inc
rcrb
push
pop
jmp
pop
add
inc
out
cmpsl
movsb
repz
filds
faddl
pop
fmuls
jo
lea
push
mov
push
scas
or
jbe
mov
cmp
jge
shr
mov
sbb
cli
and
add
movsb
pop
mov
fcoml
sar
cmp
cwtl
loop
mov
in
int3
and
push
add
invlpg
add
inc
icebp
nop
cs
and
bound
inc
movaps
and
add
xor
mov
xchg
push
add
inc
add
push
int3
mov
push
adc
add
mov
push
jmp
pop
mov
pop
xor
jae
sub
or
cmp
aas
dec
sub
in
loopne
and
fwait
xchg
pop
or
call
rolb
lock
xchg
mov
pcmpgtb
ja
test
adc
xchg
lcall
es
popa
adc
mov
sub
rcrb
std
test
push
or
adc
mov
aas
push
call
push
lret
or
loop
mov
fisubs
mov
jge
cmp
je
add
pop
shll
dec
add
add
decl
inc
cmp
mov
and
pop
andb
scas
movsl
shll
lea
mov
xchg
rep
and
push
adc
fisubrs
mov
mov
pop
add
adc
and
cmp
push
test
cmpsb
or
nop
jge
mov
dec
and
inc
mov
push
pushf
pop
ss
or
xor
xchg
leave
cmc
push
cmpsl
aas
inc
push
push
stc
shrb
jo
mov
test
jge
stos
stos
mov
mov
loopne
sub
fisttpll
icebp
in
cs
xchg
cwtl
aad
repnz
and
cmp
es
es
mov
aas
push
xor
dec
in
lea
pushf
sbb
mov
subl
push
mov
out
int
sbb
aad
adc
adc
repz
out
movzbl
push
xchg
mov
pop
ljmp
inc
hlt
int3
add
cmp
and
je
jne
imul
lea
mov
test
call
lods
aas
in
add
lock
mov
and
push
call
fisubl
mov
and
pop
pop
mov
inc
dec
mov
mov
pop
push
add
pop
mov
les
push
xchg
pop
dec
imulb
push
add
mov
xor
outsb
xchg
jo
xchg
cmp
movsb
in
lds
test
inc
xlat
ror
add
mov
mov
fadds
jle
addl
cmp
add
cmp
mov
test
clc
jo
push
jp
dec
adc
aam
adc
std
sub
repnz
mov
jae
cmpsb
add
xchg
inc
or
les
cmp
inc
add
sbb
mov
inc
xchg
enter
cmp
leave
fcompl
lret
pop
xchg
push
test
jae
add
or
iret
mov
jg
sub
sub
add
and
clc
mov
xor
xchg
xor
imul
nop
mov
stc
push
pop
dec
add
pusha
dec
mov
addl
xchg
sbb
jae
je
mov
sbb
sbb
repnz
push
push
jle
adc
jbe
add
sbb
incb
jmp
xor
insl
jge
mov
pop
movsb
shlb
add
or
test
ret
adc
mov
std
ffreep
sub
inc
add
bound
or
pop
call
push
stos
enter
addr16
pop
adc
fldl
xchg
ret
cmp
lods
mov
adc
inc
ds
sub
je
aaa
imulb
imul
dec
stc
pop
test
add
ljmp
adc
cwtl
push
int
pop
int
xor
sbb
push
mov
loope
cmp
lret
pop
adc
sbb
rol
mov
add
sbb
jmp
cmp
test
cmp
jl
mov
lods
xchg
es
ret
test
lahf
xchg
cmp
inc
sbb
push
movups
adc
sbb
jecxz
stc
xor
mov
or
push
or
xor
and
push
xchg
push
sub
std
sbb
inc
bound
add
cmp
aam
mov
in
sub
movsb
jae,pt
lods
fmuls
add
jecxz
mov
es
sub
push
jns
fisubs
aaa
or
xchg
stc
mov
xor
inc
cmpsl
lret
clc
aas
dec
ja
aas
pop
jns
sar
mov
mov
mov
mov
icebp
cld
gs
incb
idiv
mov
or
xor
test
lock
sub
xor
call
ret
mov
ret
dec
call
movsl
clc
add
xchg
xchg
imul
sub
into
das
dec
sbb
adc
push
fbstp
sti
xchg
loop
push
mov
dec
dec
hlt
sub
pop
fwait
sahf
test
mov
inc
sbb
mov
je
adc
dec
mov
and
pcmpgtd
sub
jp
fsubl
lods
mov
or
add
jl
movsb
pop
sub
insb
mov
sub
testb
add
or
xor
add
jb
pusha
inc
push
push
mov
insb
cmp
cmpb
mov
fildll
insl
cmp
dec
pop
sub
aas
sub
mov
lea
cmp
xor
xor
jg
inc
adc
adc
xchg
mov
push
std
sbb
and
cltd
xor
mov
xor
leave
push
cld
call
xor
addl
lock
sbb
and
push
js
stos
pop
adc
rol
shrl
cmp
cmp
xchg
cmp
xor
xor
xor
test
and
es
data16
stos
push
xchg
ss
sbb
mov
ret
cmovae
or
pop
xor
inc
pop
fsubl
add
xchg
inc
push
and
pop
pop
popl
addr16
and
adc
sbb
inc
and
dec
imul
call
sbb
and
fnstcw
mov
test
sub
cs
add
mov
rcll
insb
test
inc
push
add
push
or
rclb
adc
stos
dec
and
push
bound
xor
mov
popf
pop
dec
enter
adc
sub
adc
mov
jecxz
sub
add
aas
and
dec
js
ss
push
adc
sbb
xchg
xor
mov
fs
cwtl
addb
enter
mov
fs
dec
add
out
fcomps
inc
stc
loop
imul
in
push
es
jmp
rolb
and
lahf
push
movsb
sub
das
call
or
adc
inc
cmp
or
test
stc
or
js
imul
int3
jge
cwtl
movsb
or
lea
adc
sbb
test
add
fdivl
and
or
inc
pop
mov
add
pop
pop
xor
sahf
sub
dec
push
js
loop
imul
mov
mov
inc
mov
call
pop
jmp
xchg
sub
cmp
in
in
xchg
sub
inc
lret
push
push
call
loopne
lea
inc
pop
sub
inc
inc
adc
leave
add
or
loop
and
subb
adc
pop
bound
lahf
adc
push
push
sbb
mov
lds
dec
sbb
sub
mov
sub
test
xchg
push
sbb
lock
arpl
pop
adc
and
sub
or
mov
jmp
pop
imul
sbb
fnstcw
or
push
lock
lock
sbb
sub
and
xlat
ret
add
inc
jne
or
push
or
sti
mov
test
sbb
lods
rcl
jmp
lods
fildll
fmuls
mov
pop
push
dec
or
out
aaa
sbb
xchg
push
call
rolb
add
jne
rcll
in
push
lret
mov
mov
adc
out
sbb
repnz
or
movsb
sbb
shll
mov
cltd
push
mov
in
and
xchg
sub
xor
les
int3
clc
adc
insb
pushf
gs
sub
xchg
rclb
adc
mov
or
inc
int3
mov
push
test
out
mul
xchg
cmp
cltd
inc
cli
dec
add
aad
push
sub
mov
jne
and
xchg
dec
sbb
icebp
sahf
mov
test
sub
pop
xor
jne
outsb
cld
cmp
add
mov
dec
repz
outsb
adc
jmp
pop
jbe
jle
mov
xlat
inc
data16
imul
roll
cmovp
add
imul
icebp
xchg
inc
or
cltd
repz
xchg
mov
adc
dec
push
xchg
push
in
add
cmp
je
jl
cli
push
andb
lahf
je
mov
mov
inc
sbb
sub
decb
sarl
cld
xchg
push
incb
mov
nop
add
pusha
das
out
sbb
loopne
nop
pusha
mov
inc
movsl
rcll
jae
cmp
xchg
in
fcomi
sub
fcompl
and
push
lea
adc
lods
cs
in
xorl
xchg
icebp
xor
inc
add
add
xchg
push
lahf
inc
mov
testl
clc
mov
cli
lcall
fwait
sub
cld
stos
jns
cld
sub
fstl
scas
mov
cmp
test
add
cld
inc
movsl
cmp
lea
aas
jno
jne
lock
mov
adc
xor
jp
jne
mov
or
xor
xchg
rol
push
cmp
out
in
and
adc
int
add
adc
repnz
pop
xor
scas
addr16
mov
clc
lahf
mov
mov
mov
cmp
data16
jbe
sub
push
mov
mov
inc
cmp
jle
adc
jl
cmp
dec
adc
mov
push
stos
and
adc
out
adc
pop
mov
mov
rcll
fnstcw
dec
or
icebp
roll
enter
xchg
cmp
push
pop
call
fisubl
or
adcb
and
mov
fadds
je
or
or
and
push
inc
xchg
sub
push
aad
das
int
pop
sbb
push
add
xchg
inc
and
adc
mov
aam
mov
ljmp
out
and
push
jmp
and
adc
mov
and
or
in
sbb
jno
ret
add
in
shr
gs
in
je
and
xchg
sbb
je
inc
in
in
mov
and
icebp
and
call
ret
xchg
ret
xchg
iret
repz
push
call
clc
mov
pop
push
imul
jge
and
mov
mov
psubusb
ss
sub
dec
or
add
mov
cmp
int
insl
xor
leave
mov
push
int
xchg
mov
sub
xor
pop
mov
add
test
push
or
mov
mov
cli
sti
stc
mov
add
lods
outsl
push
jo
jle
lea
and
nop
cmp
jmp
pop
inc
outsb
push
push
in
jl
jle
dec
inc
pushf
dec
push
jmp
inc
jle,pt
lods
imul
jmp
dec
and
sub
in
mov
loopne
xor
shrb
sbbb
add
scas
hlt
push
lods
mov
popf
arpl
nop
mov
adc
mov
movsb
or
sbb
xor
pop
rorb
insb
hlt
into
push
mov
sar
push
test
cwtl
push
mov
push
es
test
push
push
pushf
mov
sbbb
call
push
adc
push
sub
inc
push
dec
mov
cmpsb
fwait
into
into
adc
xchg
insb
mov
mov
fwait
add
dec
mov
pop
pushl
and
push
call
inc
mov
jno
movsb
int
sbb
addr16
mov
in
sti
fnstcw
xchg
adc
nop
adc
push
ljmp
popf
movsb
dec
loope,pn
dec
or
faddl
in
ds
or
or
stc
aas
push
add
mov
ljmp
in
daa
xchg
push
call
add
inc
pop
leave
push
xor
out
ds
fnstenv
xor
jne
cmp
stos
and
pop
push
loopne
popf
popa
sub
gs
stos
div
sti
into
pop
adc
xor
and
pop
pop
xchg
pop
push
test
mov
push
insb
dec
adc
mov
iret
sbb
inc
bound
push
je
pop
shll
or
stos
fmul
imul
push
call
mov
in
push
adcb
and
and
xorb
sbb
jns
or
ret
aam
stc
adc
mov
lahf
pop
inc
xchg
push
xor
out
in
inc
jne
push
jle
xlat
inc
test
lret
push
push
fistps
mov
je
push
jecxz
clc
nop
aas
test
mov
mov
ffree
orb
testl
imul
int
and
add
pop
ret
xchg
push
gs
jb
ja
cltd
and
popa
add
mov
mov
and
scas
leave
inc
aas
xchg
inc
aam
repnz
push
rorl
ljmp
mov
fwait
xor
jnp
push
push
mov
bound
xor
pop
stc
fcomps
pop
jmp
sbb
dec
addr16
outsb
enter
mov
mov
out
fsts
adc
pop
add
mov
jmp
or
test
popf
and
orb
push
lea
sti
and
enter
push
leave
add
lret
and
data16
mov
fidivrl
push
push
xchg
fidivrl
push
call
pmaddwd
sbb
sti
adc
xchg
mov
or
mov
mov
cmp
jne
jp
clc
subb
ljmp
test
imul
add
leave
cmp
lea
je
inc
add
jg
mov
or
jne
cmpl
sub
adc
inc
mov
fcompl
dec
and
shr
std
outsl
mov
lods
dec
aas
aam
sarl
xchg
inc
xor
or
inc
adc
je
add
sbb
es
push
jae
push
lea
mov
inc
mov
dec
xor
ljmp
jmp
in
inc
xchg
adc
jl
inc
call
sbb
push
emms
out
sub
jbe
sub
les
xor
cli
es
dec
adc
lods
mov
les
xchg
cmp
inc
push
xchg
stos
adc
and
sbb
clc
xor
push
adc
push
sub
inc
mov
movsb
inc
and
jmp
lds
imul
mov
mov
imul
cmp
mov
sbb
fs
daa
mov
fs
or
sbb
push
jg
sbb
pop
adc
lods
aam
or
xor
push
nop
or
inc
or
mov
call
inc
push
mov
dec
dec
push
inc
fs
lahf
cmp
sarl
stos
xor
add
pop
icebp
mov
icebp
arpl
outsl
bound
cld
cmp
cmp
clc
sub
pop
es
mov
cli
inc
xor
adc
iret
hlt
push
push
cld
loop
inc
daa
and
sbb
jp
loope
push
push
push
push
or
mov
loope
daa
loop
mov
leave
or
jl
jae
pop
sub
xor
push
insl
push
sti
cltd
xchg
inc
sbb
fimuls
xchg
xchg
inc
mov
adc
andb
nop
dec
lret
xchg
or
mov
and
sbb
pop
cmp
lds
mov
inc
in
jmp
mov
mov
jae
pop
fs
lods
decb
mov
xor
and
bound
sbb
sub
and
pushf
jmp
xchg
into
or
jne
inc
sbb
lods
test
mov
cwtl
fisttps
jmp
cmp
fsubl
pop
pop
xchg
add
jl
mov
xor
pop
dec
adc
jns
dec
aad
lea
inc
pushl
gs
bound
insb
sub
cmp
push
ljmp
add
std
neg
lock
and
in
sbb
imull
jge
aas
pusha
rolb
or
jne
push
jns
mov
push
inc
cli
push
scas
fs
sbb
mov
mov
je
push
repz
cmp
push
call
movsl
popf
enter
xchg
call
push
daa
mov
cli
mov
popl
xor
mov
nop
fcompl
imul
or
cmpsl
idiv
and
or
push
xchg
aam
cld
xor
std
push
and
push
and
jg
jmp
push
pop
js
fsubs
sub
mov
mov
sub
push
jl
fdiv
orl
popf
inc
stc
add
ret
test
inc
aad
mov
in
push
adc
cmpsl
mov
mov
sbb
mov
mov
loopne
cmp
divl
rcrl
dec
mov
lea
lea
and
xchg
jb
or
inc
jae
loope
add
cltd
mov
mov
push
jge
jmpw
in
mov
xlat
or
xor
sub
xchg
jae
xor
push
or
pop
enter
cld
dec
add
je
cmp
xchg
mov
in
xor
enter
pop
sub
popf
enter
push
add
dec
popa
lahf
jmp
xchg
scas
cmpsl
sbb
fiadds
or
or
ret
pop
int3
stc
es
ljmp
add
jns
push
xor
xchg
mov
mov
fwait
rcrb
and
and
mov
pop
jbe
push
rorl
xor
sbb
and
popa
dec
or
cmp
cmpsl
shr
add
pop
dec
xor
mov
add
xor
inc
push
inc
hlt
das
or
testb
sbb
std
lret
sub
andb
jb
mov
cltd
inc
outsb
lds
icebp
jmp
mov
test
daa
inc
jae
xchg
adc
rolb
pop
push
jle
ds
orl
andl
aad
jmp
ret
lods
mov
xor
sub
out
adc
push
cmp
and
push
jmp
test
mov
add
inc
out
clc
xor
add
adc
inc
mov
and
push
sbb
call
and
mov
jle
std
int3
pop
mov
jl
popa
push
push
adc
pusha
xchg
mov
fcmovnb
pop
sbbb
mov
cmp
push
mov
call
cmpl
call
inc
mov
xchg
and
scas
and
push
pop
ret
inc
call
and
inc
cwtl
sarl
inc
and
into
cmp
or
dec
ja
jmp
mov
roll
xchg
cwtl
cltd
mov
sbb
jmp
outsb
test
inc
and
loope
add
imul
xchg
adc
push
and
xchg
push
add
jne
push
std
inc
sbb
jmp
scas
push
push
pop
push
and
pop
inc
pop
test
dec
mov
and
les
jno
xchg
pushl
lock
fidivs
push
inc
icebp
inc
cltd
dec
adc
jle
das
je
je
inc
mov
push
pop
cld
jmp
call
xchg
popa
push
and
es
enter
jbe
mov
data16
xor
es
leave
or
cmpb
adc
sbb
adc
sub
addl
cs
xchg
push
test
movsbl
mov
dec
pop
inc
inc
pushf
dec
push
sbb
dec
mov
jb
xchg
push
push
in
cld
ljmp
pop
push
stos
and
pop
push
add
dec
lcall
add
or
push
or
cmp
adc
sahf
sbb
add
cmp
popf
cmp
jg
mov
push
adc
pop
dec
pop
push
xchg
jg
xchg
movsb
frstor
sar
call
test
push
scas
cmp
adc
jge
sarb
jl
push
jmp
push
mov
cmp
inc
and
push
imul
mov
jno
sub
mov
inc
adc
mov
dec
or
add
mov
dec
adc
push
in
aam
mov
dec
pushf
mov
cmp
adc
mov
aam
hlt
dec
push
sbb
cwtl
int3
and
cld
adc
push
stos
je
jne
ljmp
cmpsb
test
or
mov
pop
pop
lcall
dec
mov
fcmovu
aaa
mov
insb
cli
and
pop
cld
push
clc
call
push
jge
push
jae
xor
adc
jo
xchg
aam
dec
fs
push
mov
jmp
add
test
lahf
adc
cmp
aaa
push
xor
sbb
dec
or
call
cld
testl
mov
and
sbb
add
cmp
push
push
out
push
cmpsl
dec
adc
popf
hlt
or
push
xchg
lock
xor
out
hlt
das
je
and
or
js
hlt
adc
in
push
push
je
outsb
xchg
js
les
in
or
aad
iret
add
je
mov
or
xor
dec
jne
and
push
cltd
int
adc
insb
cli
sub
jl
jno
xchg
cmp
js
jbe
fs
fwait
decb
push
xor
and
cwtl
leave
inc
add
jp
cmp
pop
jo
adc
in
mov
pop
daa
jge
repz
inc
mov
andb
in
mov
sbb
rcr
xchg
sbb
and
mov
or
ja
add
movzwl
jbe
inc
or
push
adc
dec
repnz
insl
or
add
cmpl
and
dec
aam
out
add
or
clc
xchg
cmpsb
cmp
inc
and
sbb
sbb
xor
repz
sbb
dec
jmp
mov
fadds
mov
repz
and
ret
repnz
push
lea
mov
in
aaa
call
push
push
pop
adc
jbe
pop
pop
mov
xchg
jns
pop
sub
popl
arpl
jmp
shrl
daa
and
or
sub
push
sub
icebp
ljmp
and
dec
call
inc
es
scas
pop
sti
xchg
jg
xchg
inc
aas
sbb
sbb
outsb
fs
loopne
fdivrl
icebp
ret
inc
outsb
fildl
vprotw
pop
rcll
icebp
or
adc
lock
xchg
push
test
call
test
and
cs
or
push
pop
cs
xchg
lock
adc
ljmp
leave
fsub
pop
or
add
xor
push
cmpsb
sahf
dec
push
fstps
or
scas
sub
mov
fincstp
xchg
xor
scas
adc
sbb
sbb
fs
dec
or
ss
cmp
test
or
mov
add
pop
xor
push
dec
mov
xor
add
lea
ret
xchg
and
pusha
adc
cmpb
in
insb
mov
imul
or
jae
mov
jl
test
neg
mov
sub
int3
lods
push
push
adc
lret
adc
cmc
arpl
xor
xchg
xchg
xchg
push
in
insb
jnp
mov
and
call
stos
push
andb
jle,pt
sbb
mov
call
ret
jbe
mov
xchg
jns
in
bnd
add
das
stc
pushf
in
data16
xchg
sub
mov
adc
jb
jo
imulb
mov
rclb
sub
dec
div
jl
inc
and
or
push
and
out
adc
sbb
sub
mov
bound
push
mov
imul
sub
imul
jno
cmp
call
nop
das
adc
sbb
xchg
sti
cmp
pop
nop
and
cmp
pop
sub
sbb
pop
xorl
mov
or
xor
pop
cmp
xchg
inc
call
and
push
cwtl
push
cwtl
mov
in
push
repz
mov
mov
stc
fisttps
hlt
mov
sbb
out
cld
xchg
inc
mov
push
stos
lret
fisttpll
int
and
adc
cs
jle
mov
xchg
sti
mov
loopne
dec
pop
mov
jg
push
fdivr
sub
push
out
jecxz
sbb
orb
cmpsb
pushl
es
aas
push
mov
cmp
aas
mov
mov
hlt
push
cmp
or
add
mov
daa
xchg
xchg
mov
adc
loop
sbb
and
lcall
lods
add
push
jp
subb
inc
dec
adc
pop
movl
call
cmp
jne
mov
add
lock
push
add
add
inc
insb
add
and
xchg
sub
insb
leave
pushf
push
push
jecxz
ret
xchg
bound
push
xchg
jmp
adc
jmp
enter
call
rorb
ror
inc
fcoml
fsubl
mov
and
adc
test
sub
and
test
pop
inc
les
and
xchg
loopne
leave
xchg
add
inc
rorb
stos
enter
jno
cmp
push
cmp
or
push
jmp
and
dec
sti
xchg
push
sub
cwtl
and
xchg
movsb
mov
pop
lahf
in
loop
mov
pusha
inc
mov
shlb
dec
cli
lock
inc
lods
and
mov
xor
dec
call
mov
jge
call
scas
cmc
mov
dec
ljmp
lods
dec
pop
sub
adc
push
enter
ficomps
pop
xchg
mov
mov
movsl
jmp
inc
lock
ljmp
mov
push
inc
mov
test
xchg
xchg
mov
cmpsb
xchg
pop
and
popl
int3
lea
sub
pop
pop
push
fidivl
int3
or
adc
imul
push
push
loopne
jne
cltd
pop
icebp
mov
inc
mov
dec
loope
or
push
lods
push
data16
and
cmpsb
dec
ret
adc
adc
test
and
sbbb
jle
jmp
out
cld
call
outsb
dec
enter
adc
jmp
jl
fdivs
out
xor
sti
les
stc
not
inc
mov
lds
adc
aas
sti
xchg
lock
dec
sbb
adc
push
in
call
jmp
push
aas
inc
js
sub
inc
add
push
inc
adc
and
mov
push
add
lea
popf
or
and
push
out
int
jne
adc
lds
cmpsb
jne
std
ss
test
outsl
and
nop
jb
es
adc
stos
adc
or
ljmp
push
std
iret
push
lea
push
cli
inc
inc
nop
push
inc
outsb
je
and
push
cmp
mov
icebp
call
call
adc
jecxz
add
adc
inc
push
ss
or
fcompl
sub
push
jmp
mov
jnp
or
push
clc
xor
inc
rorl
jb
aas
mov
inc
rol
dec
rcll
xchg
pushf
push
jl
cmpsl
mov
pop
cmpsb
loope
push
inc
test
test
sub
daa
dec
adc
mov
push
jg
hlt
push
cmc
mov
xor
mov
je
pop
dec
adc
sub
sub
fldt
or
popa
inc
pop
pop
popf
in
xorb
call
loop
xchg
shr
pushf
push
inc
cltd
xor
add
in
std
hlt
ja
pop
mov
pop
cli
ljmp
idivb
xor
sub
push
inc
sahf
add
es
das
pop
sub
addr16
xchg
cmp
pushf
or
imul
adc
push
mov
push
subb
test
inc
daa
mov
or
loop
in
shlb
cmp
loopne
xchg
in
add
fcoms
stc
add
adc
xchg
mov
lock
and
push
inc
pop
pop
test
fwait
lock
lcall
fstpl
into
sub
enter
rol
mov
xchg
pushf
enter
xchg
out
in
sti
adc
ret
xchg
test
push
and
inc
jl
sbb
push
jmp
mov
adc
shl
outsb
push
inc
daa
adc
push
and
pop
jo
mov
enter
mov
mov
inc
pop
jno
dec
mov
push
les
and
and
dec
lahf
push
mov
sub
xchg
xchg
enter
push
mov
pop
imul
mov
test
icebp
lods
aas
loope
aas
mov
sbb
xor
dec
cli
lock
lret
cmpsl
pop
gs
std
sbb
in
pop
mov
push
hlt
cmc
add
cmp
ret
jne
pop
dec
dec
icebp
cmp
inc
adcl
cmp
mov
fcoms
les
xchg
pop
xor
jbe
adc
cli
inc
scas
jmp
mov
cltd
adc
in
add
add
xor
push
xor
ret
je
xor
ljmp
add
dec
inc
push
xlat
enter
jmp
or
sub
dec
mov
or
lods
leave
shll
inc
sbb
cld
or
arpl
push
pop
inc
les
gs
mov
adc
jo
push
hlt
jne
add
imul
ja
loop
push
xor
fadd
jle
push
mov
dec
addr16
lock
mov
push
sarl
mov
inc
iret
and
mov
inc
add
js
fsts
adc
and
adc
pop
jmp
and
call
inc
outsb
and
inc
mov
jle
xchg
push
filds
sbb
cmp
clc
jnp
push
daa
mov
push
adc
or
mov
test
stc
inc
pop
push
inc
mov
test
clc
out
addr16
icebp
imul
push
bound
icebp
test
call
cltd
lods
into
les
or
adc
cltd
push
fmull
fisubl
sbb
orb
xchg
in
mov
scas
xchg
stos
out
xor
dec
hlt
test
jne
lds
xor
jmp
and
test
inc
inc
inc
sbb
jecxz
fnstcw
xorl
dec
aam
leave
sub
int
loope
flds
and
mov
bound
xor
popf
ret
clc
add
sub
stc
dec
or
jne
cli
or
add
or
mov
mov
cmp
dec
sbb
mov
data16
jo
cwtl
sub
in
push
insl
je
push
xorl
mov
fsubl
sub
adc
mov
or
push
or
mov
jno
or
jbe
out
dec
push
jmp
mov
cmp
addb
push
mov
add
mov
pop
xor
scas
jmp
testl
or
pop
add
dec
sti
mov
or
push
jmp
xchg
bound
cmc
cmpsb
nop
inc
out
cmp
pusha
push
pop
jne
movsb
adc
gs
cs
add
cmp
jbe
dec
and
lock
cmpsb
clc
push
es
dec
xchg
mov
call
sahf
loope
ja
fisubrs
jmp
test
pushf
inc
jmp
lock
adc
in
mov
lret
std
and
inc
pop
sub
pop
cli
fucomp
daa
pop
fxtract
adc
orl
ret
push
es
cmp
mov
add
jae
xchg
test
mov
and
pop
sub
mov
sub
mov
sub
xchg
testb
std
add
mov
inc
adc
adc
popa
mov
bswap
jl
bound
aas
add
lods
pop
leave
fdiv
adc
push
daa
mov
add
mov
sahf
mov
push
fidivrl
sbb
leave
cltd
leave
adc
or
or
sub
les
fdivs
xchg
sub
adc
jmp
xchg
pop
inc
and
fs
cmp
inc
jg
sub
subb
dec
pop
pop
sub
loop
gs
jno
or
aam
int
pushf
das
sbb
dec
into
adc
push
loope
add
ljmp
mov
daa
mov
adc
cmpsb
fwait
mov
jno
and
pop
enter
pushf
cmp
push
mov
dec
in
xor
pop
pusha
inc
loopne
or
je
mov
into
cmpsl
jae
call
push
popa
push
les
nop
inc
call
jle
enter
sub
mov
sub
dec
in
xor
les
fistps
ds
icebp
inc
shlb
mov
xchg
mov
and
in
stc
sbb
mov
int3
cmp
fimuls
pop
call
and
in
xor
jno
sbb
pop
call
fadds
nop
dec
cld
pop
adc
xlat
shll
clc
mov
repnz
nop
pop
mov
push
xchg
aas
ret
shrl
xchg
shrb
lcall
pop
cmp
ljmp
sti
cmp
adc
iret
jae
stc
add
or
loopne
xchg
sti
pop
sub
lret
and
gs
adc
daa
push
push
das
test
and
cld
jbe
mov
pop
pusha
and
mov
dec
movsl
sub
outsl
imul
mov
inc
sbb
push
mov
push
leave
loop
or
push
mov
sbb
dec
icebp
in
into
fidivrs
adc
xchg
addb
clc
andb
push
loope
popf
sub
pop
xor
mov
test
xchg
movsb
decb
jp
mov
adc
xorl
add
aad
push
push
jl
rol
ret
push
xor
jno
fs
stos
mov
sahf
dec
iret
ja
fmuls
sub
xchg
cltd
inc
push
jo
fdivs
sbb
je
cltd
and
and
mov
movl
mov
in
cli
repnz
scas
jns
out
push
lods
cmp
or
cmp
xchg
shrb
dec
test
pop
or
sbb
and
mov
movsl
call
lret
pop
adc
push
pop
repz
jle
in
outsl
and
iret
mov
out
mov
mov
icebp
mov
pop
les
or
or
and
xchg
mov
add
cmpb
mov
push
ret
jle
lahf
movb
dec
out
movsl
xchg
mov
stc
dec
pop
cmp
in
or
test
mov
sub
sbb
lret
and
jbe
js
push
cmp
inc
mov
mov
xor
xchg
and
les
aaa
add
adc
mov
fists
xor
mov
mov
shlb
and
cmpsb
roll
adc
inc
adc
lea
mov
xchg
push
leave
stos
and
adc
loop
or
cmovb
clc
push
lcall
adc
jmp
inc
push
add
movsb
scas
ret
sahf
imul
or
inc
shrb
ss
or
push
stos
fs
test
mov
shr
sarb
std
orb
aas
sub
jle
movsb
mov
movsb
mov
pop
jne
aaa
xlat
je
xchg
cmp
cs
push
imul
xchg
sbb
adcb
jle
jecxz
rclb
lds
and
dec
ffree
mov
lock
push
sub
and
hlt
xor
fnstenv
mov
push
adc
mov
test
aas
repnz
fistpl
or
mov
mov
jne
jne
int3
dec
das
dec
iret
jns
inc
rolb
mov
cmp
out
pop
jb
or
and
xchg
jb
and
mov
cld
out
xor
nop
test
xchg
push
lds
nop
xchg
inc
push
push
mov
cltd
fsubs
mov
movsl
call
je
scas
sub
std
mov
sti
add
inc
and
cmp
adcl
adc
lea
call
xor
cmp
push
mov
arpl
inc
movsb
inc
sub
adc
add
or
call
lock
jmp
testb
xorb
xchg
sbb
pop
subl
push
adc
adc
test
push
push
and
jge
cs
add
cmp
adc
or
sbb
add
xor
lea
setbe
sub
mov
pop
add
repnz
add
add
jnp
call
test
jbe
fwait
xchg
mov
js
push
jmp
inc
xchg
loop
aad
out
pop
push
adc
mov
pushf
and
pop
cwtl
jo
into
xchg
lahf
fld
ficoml
dec
xchg
inc
push
incb
je
or
inc
lar
add
sbb
adc
pop
mov
push
call
inc
subl
pop
and
add
mov
adc
fadds
ret
mov
call
and
daa
mov
call
cmp
pop
sub
lods
lahf
fld
movsl
test
clc
mov
and
adc
enter
xchg
dec
cmp
adc
mov
test
ret
jbe
call
mov
mov
fadds
hlt
xor
outsb
je
and
sub
cli
mov
xor
repz
in
cmp
push
fs
and
stos
jno
cmpsl
xor
daa
lret
gs
cmc
clc
push
push
sub
inc
sbb
or
test
sub
and
inc
cmp
es
jl
das
scas
dec
push
call
shlb
test
into
adc
push
jne
mov
insl
sub
scas
sbb
jne
insb
je
push
dec
int
xor
popf
cltd
pop
in
jmp
int3
add
fcmovu
inc
jp
pop
pop
test
leave
sub
dec
inc
scas
pop
mov
jmp
push
ljmp
xorb
pop
je
mov
add
pop
out
int3
push
pushl
inc
hlt
jbe
and
inc
fs
adc
outsl
mov
cs
jmp
lods
fcomps
or
xchg
lods
pop
mov
test
and
xor
mov
add
push
cmpsl
dec
lret
fnstcw
sbb
push
xchg
add
dec
es
test
leave
push
dec
mov
adc
dec
sub
xchg
mov
cmp
pop
add
dec
adc
push
cmpsl
xor
xchg
and
nop
in
inc
push
setne
sti
push
sub
test
and
sub
nop
lret
jnp
pop
mov
cmc
fisubs
push
mov
dec
cmc
shlb
sub
in
nop
sbb
add
hlt
leave
ja
push
jo
jecxz
insb
xchg
test
outsl
adc
sub
lods
cmp
xchg
xchg
push
leave
xchg
jle
push
inc
sub
insl
jbe
xor
pop
sbb
cmp
inc
les
cmp
and
and
test
out
insb
jl
push
shll
mov
dec
pop
mov
adc
mov
mov
test
dec
cld
punpckldq
mov
test
pop
jge
ljmp
mov
pop
loop
sub
adc
xchg
mov
out
push
leave
xor
mov
jb
xchg
rcrl
adc
stos
sbb
xchg
add
mov
lock
jne
push
popf
stc
mov
test
pop
inc
aam
jmp
imul
pop
call
call
lret
call
sub
dec
hlt
sub
adc
mov
xchg
enter
test
push
aam
sub
push
sub
dec
in
dec
push
or
mov
rorb
xor
push
test
pusha
pop
adc
xchg
dec
repz
pop
sbb
pop
imul
stos
adc
fldenv
data16
dec
inc
push
call
xor
in
dec
clc
bound
inc
mov
pushf
push
sub
hlt
inc
cld
and
sbb
int3
push
and
adc
mov
lea
xor
cmpb
stos
or
test
les
xchg
or
push
pop
sub
decb
dec
test
adc
and
movsl
xlat
and
xchg
sbb
pop
fstpt
je
cmp
sbb
xor
sbb
adc
mov
mov
xor
mov
aaa
andnps
xor
outsl
enter
or
aam
xchg
lds
pop
cmp
dec
inc
lods
xchg
inc
push
in
data16
aam
lea
xlat
cltd
jmp
movsl
mov
insb
std
or
js
imul
std
dec
push
fisubs
call
xor
insb
sti
add
fcompl
adc
data16
sbb
push
dec
cltd
mov
insb
std
adc
addr16
sti
sbb
es
mov
mov
xor
xchg
out
cs
xchg
adc
out
dec
movsl
or
cmpsb
jbe
jl
mov
pop
push
daa
jmp
pop
cmp
mov
push
loopne
ja
cltd
pop
fidivl
add
out
pop
ss
jge
sub
push
mov
test
jne
stos
shlb
lock
stos
ret
cmp
mov
sti
jb
adc
into
or
jge
xor
xor
orb
push
fdiv
inc
inc
out
call
bound
stos
lea
sbb
push
xor
inc
in
aad
push
push
dec
dec
push
in
or
call
or
add
push
push
and
push
push
and
stc
cltd
in
fimuls
and
inc
add
ficompl
rolb
mov
pusha
sub
cs
push
movsl
lods
xchg
cli
movsl
outsb
adc
decb
subb
dec
aas
fs
xchg
ret
mov
push
sub
push
xchg
pop
push
pop
adc
jo
int3
lret
cld
notb
shr
adc
add
push
mov
sarl
stos
cltd
adc
sbb
test
ret
adc
outsb
imul
popa
fmuls
adc
pop
nop
mov
xchg
xor
fmuls
mov
and
call
and
scas
lods
pop
lea
or
lock
xor
int3
inc
xor
jmp
fsubs
xorb
inc
dec
inc
sub
xchg
mov
sub
pop
test
ljmp
inc
dec
adc
pop
shr
ror
jg
jl
sbb
sbb
jae
cs
mov
mov
sti
and
xor
popf
and
push
xchg
mov
aam
pop
cs
add
and
insb
arpl
sbb
mov
mov
clc
out
outsl
dec
shlb
cmpsb
push
cmpb
lea
ljmp
mov
jae
pop
xor
mov
stc
pop
adc
enter
xchg
pop
pop
je
loopne
add
mov
lret
jne
fdivl
mov
xor
push
sbb
popf
sti
dec
sub
mov
fwait
arpl
enter
and
pop
add
ret
pop
ljmp
push
lcall
sub
jne
pop
jns
mov
repnz
inc
and
dec
insl
fs
shlb
mov
addr16
mov
and
in
push
xchg
adc
mov
das
push
jl
jb
xchg
sub
testb
call
popa
inc
sub
mov
outsl
rorb
xchg
pop
and
into
rolb
mov
sbb
outsb
dec
or
orb
add
je
xor
shl
dec
push
adc
enter
fidivs
sbb
sbb
in
xchg
mov
imul
int
jnp
sbb
adc
lds
lock
push
xor
sbb
adc
dec
sub
mov
push
push
mov
cmp
rcrb
jmp
jmp
lods
push
xor
fucompp
mov
and
cmc
dec
popa
ret
or
cld
sub
mov
sbb
and
pusha
rcrb
xor
jge
mov
jg
sarb
outsl
addl
adc
push
sbb
push
lret
aad
cmp
inc
mov
dec
test
dec
sbb
lea
and
add
push
rclb
dec
mov
mov
dec
inc
test
sar
adc
subb
and
adc
mov
push
mov
es
cmpsl
jne
mov
mov
inc
fcomps
dec
xor
cli
rolb
mov
jle
mov
shlb
mov
popf
stc
adc
out
loop
sbb
cmp
inc
call
xchg
enter
or
idiv
shlb
adc
out
jg
inc
jne
dec
mov
push
xor
dec
test
or
jl
shld
mov
into
icebp
lods
or
ret
pop
sbb
mov
clc
and
xchg
int3
sar
push
xor
mov
mov
pop
push
dec
add
and
popf
icebp
mov
or
test
test
cld
sub
ficoms
xor
sbb
jp
in
inc
fmulp
test
in
mov
loopne
or
push
gs
cmp
movsb
adc
mov
push
cmp
imul
inc
repnz
adc
cmp
jge
test
and
inc
and
lods
into
or
add
push
mov
xor
out
imul
mov
pop
fistps
push
pop
dec
dec
ds
sub
icebp
ret
aaa
pop
jne
fldenv
xor
mov
mov
xlat
mov
mov
and
mov
icebp
lods
pop
sbb
test
sahf
mov
rorl
adc
fists
push
jo
dec
test
les
add
jb
sub
fwait
dec
adc
pop
jo
jge
or
or
popf
lock
fstpt
xor
mov
dec
aaa
mov
inc
ret
xchg
mov
cmp
in
sub
nop
mov
fwait
mov
pop
movl
or
xchg
rcll
daa
push
add
dec
jne
fs
int
sub
jnp
mov
sbbl
push
sbb
out
mov
insb
jae
mov
and
push
push
push
xchg
fidivs
das
pop
pop
dec
xor
inc
das
mov
ss
pop
adc
pop
mov
sbb
xchg
dec
ja
arpl
sbb
test
push
adc
sbb
scas
sbb
pop
clc
xor
divl
mov
mov
test
in
sub
cld
jne
mov
sub
cmp
bound
flds
outsb
cltd
sarb
fsubrp
shlb
rorb
repnz
addr16
cmp
int3
and
mov
pop
mov
push
pop
and
sub
mov
mov
lds
int3
inc
push
les
imul
and
push
or
xor
xchg
stc
les
lret
pop
gs
mov
daa
mov
cli
fiadds
and
inc
test
test
ficoms
aam
xchg
mov
les
scas
xchg
mov
fcoml
test
mov
mov
adc
pop
xchg
loop
mov
insb
je
lds
fwait
test
les
dec
ss
sub
mov
and
xor
divb
mov
loop
and
adc
jae
cwtl
das
mov
movsl
js
xchg
repnz
test
sub
xchg
sbbb
mov
aaa
ret
or
test
push
mov
mov
mov
nop
or
xchg
adc
cwtl
push
xchg
pushf
sub
sbb
std
sbb
push
mov
mov
and
mov
adc
aas
sbb
int3
aad
or
stos
cmc
les
push
call
es
jge
push
shrb
loope
ljmp
sbb
sub
imul
jl
dec
movsb
or
cmc
leave
lods
popf
push
sbb
mov
sbb
fstl
cwtl
xlat
sub
push
mov
and
dec
sbbb
hlt
and
loop
or
rclb
push
insb
sbb
lods
aam
and
or
or
add
aam
call
loopne
jns
push
out
loope
inc
xchg
mov
arpl
push
sub
loop
pop
fisubs
in
call
xor
mov
xchg
mov
scas
std
mov
in
in
pusha
addr16
inc
push
push
inc
mov
rcrl
imul
mov
jmp
das
adc
addr16
lods
jno
leave
add
inc
add
and
sar
cmp
popa
mov
mov
fistpl
ljmp
inc
jne
into
rorb
mov
sti
cs
inc
pop
scas
pop
xor
or
sar
push
les
std
adc
push
sbb
inc
adc
stc
adc
jo
enter
cmpsl
xor
loop
sbb
push
and
jle
cmp
xchg
sub
pop
cmpsb
jno
sub
adc
inc
outsb
push
ljmp
push
xchg
rolb
mov
std
add
push
xchg
mov
subl
mov
stos
add
push
clc
xchg
je
mov
lret
ficoml
or
push
faddp
xor
adc
je
sub
nop
shl
arpl
and
dec
sbb
sahf
loopne
jmp
scas
fldenv
cmpsb
sbb
push
sbb
ret
jg
dec
addr16
push
jmp
mov
cmp
mull
jle
jl
call
pop
test
push
push
mov
lock
add
pop
cmpsb
and
adc
lods
loopne
jmp
mov
and
inc
and
adc
movl
cmc
push
push
sub
jecxz
loopne
pushf
adc
jmp
aaa
cli
xor
clc
and
dec
movsl
push
pop
cmpsb
les
and
imul
fdivl
or
push
jg
dec
arpl
push
aam
mov
inc
pop
xchg
mov
jnp
dec
and
mov
lods
and
push
inc
mov
icebp
push
adc
scas
and
xchg
loopne
mov
std
mov
sar
and
lods
es
push
mov
dec
fsubr
push
test
jmp
xchg
xor
std
test
inc
nop
xchg
leave
lods
sbb
pushf
stos
xchg
lcall
pop
xchg
subl
ds
test
mov
bound
pop
aas
dec
es
mov
push
aas
xor
jb
pop
mov
les
jae
mov
test
bound
ja
xchg
imul
fistps
mull
sub
movsb
mov
push
fs
xchg
and
stos
or
or
out
loopne
call
add
ffree
mov
jmp
mov
ret
jbe
inc
jne
jne
or
in
cwtl
lcall
adc
mov
pushf
inc
movzbl
inc
pushf
mov
xor
inc
sbb
and
jmp
cmpsb
push
hlt
je
dec
sbb
cmp
cld
rcrb
ss
fisubrs
shrl
mov
dec
test
inc
shll
mov
or
dec
push
mov
mov
adc
adc
or
mov
enter
and
mov
into
sbb
and
ret
mov
mov
gs
mov
test
sbb
adc
divl
in
xchg
fs
bound
mov
mov
fs
or
stc
pop
lods
sbb
rolb
mov
es
iret
adc
popf
inc
fcoml
mov
mov
lods
jns
in
mov
adc
jmp
clc
aad
pop
icebp
movsl
fs
and
pop
add
repnz
fs
and
jmp
movl
add
loopne
mov
les
inc
sbb
push
jne
ret
inc
push
mov
roll
hlt
jne
xchg
jmp
dec
inc
pop
xor
jmpw
jle
pop
in
lret
test
mov
mov
push
outsb
mov
and
cwtl
mov
outsl
xchg
movsb
xor
push
sti
test
lods
mov
loopne
mov
sbb
mov
stos
and
mov
ds
ret
dec
and
mov
and
dec
mov
imul
jl
push
or
cld
adc
je
xchg
sub
add
cmp
lock
push
addb
adcb
inc
jl
inc
sub
test
xor
dec
lods
push
movsb
mov
and
xchg
lods
jno
movsb
mov
push
aas
movb
mov
inc
hlt
add
shll
adc
dec
orb
mov
xchg
sub
pop
cwtl
cmp
or
lock
fs
xor
das
mov
adc
push
push
sub
and
mov
pop
scas
sub
xor
sub
mov
mov
xor
push
push
sahf
xchg
and
mov
push
dec
stos
and
aad
mov
push
xchg
enter
mov
pop
jbe
inc
sti
das
rcrb
xchg
and
mulb
pop
sarl
inc
leave
sub
aad
pusha
ret
decl
sub
jae
dec
mov
mov
cmpsb
mov
testl
jmp
lods
iret
lds
enter
cwtl
push
lock
xchg
sbb
dec
inc
fildl
lret
mov
insb
mov
adc
push
inc
jecxz
dec
sti
into
movsl
dec
mov
push
lods
dec
stos
sub
mov
pop
loope
ds
stos
cmpsl
decl
pop
xchg
jp
ret
push
pop
push
les
out
dec
stos
and
stos
mov
push
mov
lds
pop
aad
fmull
add
sahf
rorb
pushf
insl
out
inc
popa
and
sbb
and
xchg
ret
aad
sub
xor
cld
adcl
enter
xor
mov
mov
pop
xchg
push
dec
daa
pop
cmp
or
mov
iret
mov
lcall
mov
int
xor
push
mov
sbb
cmp
mov
mov
cld
dec
and
leave
push
jnp
add
adc
push
addb
mov
mov
and
bound
xchg
mov
bound
xchg
mov
test
or
loopne
test
rcrb
enter
adc
ljmp
aam
inc
adc
fmuls
sbb
inc
pop
or
inc
nop
repz
stos
sbb
sbb
add
jae
pop
cld
push
fsub
push
fs
cs
mov
das
mov
out
scas
jbe
dec
jb
lret
xchg
jg
aas
pop
add
dec
dec
or
clc
enter
stc
out
ja
rolb
pop
mov
rolb
pshufw
xchg
nop
push
add
dec
lahf
lret
xchg
and
hlt
fstpl
mov
call
std
mov
push
jecxz
jbe
inc
xor
rorl
lahf
xor
xor
mov
mov
add
sahf
inc
and
adc
fwait
cltd
push
mov
mov
repz
push
es
push
inc
dec
pusha
xor
popf
push
xor
js
mov
and
cmp
fnstenv
dec
adc
pminsw
ret
add
scas
rcl
je
ret
mov
mov
mov
pop
or
mov
lret
mov
mov
push
xor
out
scas
in
filds
cli
push
push
xor
pusha
adc
mov
or
rclb
mov
lock
fs
test
xchg
inc
pop
lock
push
aam
mov
ret
mov
xchg
addl
je
cmp
add
jmp
mov
cmp
adc
das
add
pop
mov
pop
and
orb
xchg
add
test
or
call
push
mov
dec
lret
test
lock
mov
lods
les
pop
and
rep
sub
cmp
push
push
adcb
sub
adcb
rcrl
js
push
xchg
pushl
mov
jl
dec
mov
test
sar
pop
je
mov
ffree
mov
rcl
sti
inc
xchg
shl
and
scas
leave
clc
jne
pusha
xchg
mov
sub
ds
xor
pop
xchg
lds
inc
test
testl
inc
xchg
repnz
sub
sahf
cmp
imul
fs
push
inc
push
xchg
cmp
inc
push
and
cmp
cltd
inc
jns
sahf
jne
mov
pushf
loop
and
inc
enter
lea
inc
sbb
push
cltd
stos
roll
and
sahf
test
loop
loop
mov
dec
stos
inc
scas
mov
cwtl
adc
daa
outsb
dec
jle
pusha
mov
out
icebp
jmp
loopne
ret
xchg
push
lock
pushf
or
fisubrs
jge
push
adcl
mov
inc
popf
das
sub
orb
cmp
cmpl
adc
push
shrl
push
xor
mov
jne
push
inc
and
call
dec
cwtl
scas
outsb
adc
movsb
call
xor
je
jle
fdivrs
int
xchg
cmp
jge
cmp
je
lea
lcall
xor
dec
adc
gs
aas
or
add
push
cmp
push
xor
mov
push
add
repnz
sbb
testl
adc
adc
sub
xchg
push
imull
push
bound
dec
imul
adc
fucomp
adc
pop
and
sbb
mov
pop
cmp
gs
or
and
lock
push
sar
lcall
push
xor
call
sbb
jo
jg
mov
xchg
jmp
outsb
subl
pop
xchg
and
stos
aad
ja
cwtl
inc
push
and
outsl
rorl
adc
add
or
je
push
push
jbe
push
jb
sbbl
mov
cmp
cltd
inc
pop
pop
cmp
das
ret
xchg
sbb
jge
dec
mov
cmp
imul
stos
das
pop
in
leave
fists
lods
in
push
sub
push
mov
je
ret
das
das
or
or
hlt
or
ja
push
dec
sub
add
popf
fnstenv
mov
inc
faddl
push
ficoml
mov
mov
enter
sub
mov
push
nop
adcl
push
enter
add
cmp
mov
sub
adc
or
mov
sub
ret
sahf
cli
cmc
push
sub
dec
inc
lods
dec
fcomps
xor
push
xchg
push
pusha
mov
lock
shrl
lahf
or
out
add
out
add
xchg
pusha
lea
cmp
fisubrl
inc
std
ror
push
mov
dec
add
inc
dec
les
repnz
and
lods
aaa
dec
mov
pop
data16
dec
mov
push
les
sub
cmp
sub
push
push
push
or
push
leave
push
pop
lcall
dec
mov
and
xor
push
out
movsb
push
sbb
jl
adc
cli
or
sbb
clc
inc
sub
adc
or
jmp
lcall
inc
andl
xor
js
mov
or
adc
mov
sti
add
pop
mov
adc
pop
adc
add
adc
inc
adc
rorb
leave
push
mov
push
push
lahf
loopne
push
xlat
and
mov
mov
pop
dec
and
jbe
lock
ret
sbb
hlt
adc
je
adc
or
xor
jmp
in
outsl
adc
mov
or
dec
arpl
dec
cmp
jno
mov
add
cmp
jg
mov
cmp
ret
sbb
mov
inc
movl
push
andl
paddusb
subl
inc
sub
mov
mov
cmp
adc
sub
pop
repnz
lret
call
cltd
xchg
or
inc
or
ljmp
lahf
mov
push
inc
cld
clc
lea
and
outsl
adc
test
mov
xchg
push
lods
stc
or
push
push
lret
ja
bound
cld
adc
mov
add
cmc
jno
cmp
push
in
enter
push
cmc
push
aaa
and
int3
rcrb
stc
testb
add
add
ds
inc
pop
mov
adc
mov
ds
mov
push
lods
mulb
and
mov
mov
and
mov
pop
test
cmp
xchg
adc
test
adc
mov
adc
addl
test
sub
adc
enter
xor
push
gs
jns
insb
sub
lcall
mov
or
jo
loope
adc
sbb
leave
imul
fildll
adc
or
xchg
push
xor
xchg
mov
iret
int
add
mov
inc
xchg
in
test
xlat
push
sub
mov
daa
adc
adc
lahf
jnp
dec
pop
push
mov
test
int3
push
push
cld
jne
leave
and
xchg
push
sub
jnp
or
add
test
adc
scas
sbb
cmc
arpl
pop
or
push
adc
cltd
push
lcall
es
lods
std
mov
hlt
cmp
stos
outsb
cmpsl
push
pop
jg
rcrl
xchg
mov
push
xor
data16
icebp
and
sti
mov
aas
mov
cli
sub
aas
mov
and
push
or
xor
ja
add
adc
enter
push
adc
inc
insl
adc
add
mov
dec
shll
dec
pop
in
addr16
movsb
cmp
adc
push
nop
outsb
repz
sbb
sbb
pop
das
add
test
repz
add
lret
or
mov
ja
add
mov
and
pop
std
xchg
sahf
push
sti
sub
cmpsl
mov
dec
xor
pop
lcall
cld
push
cmp
test
inc
imul
je
pop
pop
loopne
call
mov
cmp
or
stos
lds
ret
mov
xor
xlat
repnz
sbb
test
add
mov
sbb
pop
mov
jmp
mov
int3
into
mov
sti
mov
aas
cmpsb
enter
adc
adc
mov
int
and
mov
ljmp
inc
jnp
cmp
mov
rorb
xor
or
frstor
dec
stos
inc
inc
sbb
pop
mov
loopne
or
push
rcll
mull
or
sbb
dec
add
pop
outsl
repz
jbe
push
aad
mov
adc
or
sahf
lcall
adc
ret
adc
movsl
cs
aaa
fs
push
mov
cs
stos
imul
add
iret
adc
mov
ja
pop
icebp
and
and
cld
enter
cmp
push
add
daa
lahf
rcrb
xchg
adc
repz
jg
push
dec
inc
inc
lods
push
test
xor
and
push
in
sbbl
push
and
shrl
nop
sahf
adc
out
ret
xchg
cmp
cmp
in
mov
mov
pop
pop
daa
cmp
inc
add
cmc
nop
fwait
call
push
repz
xor
gs
xchg
std
mov
mov
pop
in
fsubrs
push
lock
sub
test
push
hlt
cwtl
inc
cmp
ret
jl
cld
or
iret
enter
mov
inc
dec
call
cld
dec
std
cli
and
nop
pop
and
adc
mov
adc
out
leave
and
cwtl
push
dec
pop
lcall
es
mov
incb
sub
dec
popa
subl
mov
clc
push
xor
movsl
push
cmp
mov
push
xchg
jae
cld
adc
nop
repnz
cmp
push
push
outsl
stos
xchg
pop
clc
lcall
jmp
add
push
test
xchg
mov
cmp
pop
jmp
push
es
inc
inc
and
xchg
jne
push
pushf
dec
shlb
loopne
and
dec
mov
test
enter
sti
test
xor
sub
inc
sub
inc
dec
and
popl
ljmp
je
push
adc
cmpl
push
xchg
dec
loope
hlt
negb
clc
scas
mov
push
ret
push
adc
jg
inc
les
inc
xchg
adc
mov
daa
and
lahf
stc
xor
call
sbbl
xlat
repnz
enter
stc
adc
enter
jl
andl
adc
inc
or
inc
mov
xchg
pop
leave
pop
push
or
sbb
dec
daa
adc
mov
xor
mov
pop
xor
add
mov
mov
outsl
mov
jp
inc
ficompl
call
add
and
jae
xchg
sbb
jle
cli
inc
sub
jecxz
dec
mov
fldenv
and
std
popf
xor
and
sub
daa
in
xchg
jno
lret
push
dec
xchg
jo
rolb
sub
call
adc
repnz
cmp
mov
inc
xor
sub
mov
xor
call
mov
je
xchg
sub
mov
js
lahf
pop
or
sti
jae
mov
sub
icebp
lods
sahf
jle
and
push
in
jp
push
cltd
insl
idivb
or
mov
mov
scas
adc
xor
dec
test
push
or
jmp
adc
push
mov
cmp
push
icebp
cmp
sarl
daa
movsl
test
dec
mov
inc
call
and
and
movsb
popa
add
pop
arpl
sub
jmp
push
pop
cwtl
ja
mov
nop
in
inc
xchg
dec
and
inc
nop
inc
xor
data16
or
push
jmp
mov
das
or
in
adc
push
rorb
dec
xchg
xor
inc
add
xchg
adc
sti
popl
jge
or
or
push
orb
ss
nop
sbb
jg
test
and
lea
rolb
mov
add
push
mov
rolb
adc
loope
cmp
ds
icebp
push
sub
adc
mov
mov
adc
mov
aad
adc
add
pop
push
and
adc
mov
dec
ja
xor
adc
mov
mov
pop
push
jnp
add
sub
xchg
lea
ret
pop
pop
jmp
mov
bnd
jge
mov
cli
test
xchg
jae
int3
inc
sbb
lret
or
rcll
sub
inc
cs
lds
leave
lods
leave
add
sbb
xor
xor
xor
and
lods
shll
push
repnz
push
pop
cmp
mov
add
icebp
jge
mov
fisttpll
imul
scas
ljmp
or
pusha
and
cltd
mov
mov
or
push
mov
ljmp
shlb
movb
inc
jmp
dec
popa
gs
cmp
jb
or
out
jmp
andb
dec
sti
sub
pushf
and
cwtl
or
xor
dec
jae
int3
or
push
sbb
and
sti
enter
test
xchg
jo
and
cli
xchg
dec
sbb
or
xchg
scas
dec
push
hlt
cmp
xchg
cltd
add
inc
xchg
jle
sbb
or
push
pop
xchg
shl
nop
adc
pop
jecxz
call
aam
cwtl
add
xor
pop
dec
movsl
mov
jns
jge
pop
dec
mov
adc
lea
nop
push
lock
nop
mov
sub
ret
sub
pop
and
xchg
dec
std
jp
in
xor
inc
inc
sti
ja
pop
test
stc
andl
push
sub
and
dec
sbb
int3
push
inc
cld
clc
adc
sti
lods
enter
ret
and
dec
lea
cmp
pop
push
popf
in
jmp
adc
jle
jmp
cmp
mov
xor
mov
add
adc
outsb
loope
repz
ss
pop
sahf
scas
dec
or
outsl
mov
adc
mov
mov
mov
pop
and
xchg
loop
and
ret
push
cmp
addb
daa
xchg
sub
addr16
push
aam
outsl
xchg
jns
mov
pushf
test
and
aad
push
pop
jl
stos
and
and
or
lea
jne
flds
out
and
jo
mov
xchg
clc
and
pop
icebp
divl
leave
push
cmp
roll
inc
leave
sbb
cmp
push
or
pop
push
fwait
sbb
jne
int3
jne
pushf
pop
mov
std
add
shlb
adc
hlt
xchg
adc
pop
das
cli
and
and
jmp
pushf
sbb
fdivr
inc
mov
test
test
xchg
fs
lds
and
or
mov
and
pop
daa
cmp
dec
sbb
dec
popa
add
cld
inc
cmp
pop
jmp
popa
and
dec
shlb
xchg
push
jecxz
xor
inc
out
jmp
std
mov
push
adc
and
mov
orb
in
rcr
mov
mov
dec
pop
adc
pop
cmpb
adc
in
push
or
xchg
cmp
mov
push
pop
ljmp
and
jo
sbb
js
push
mov
andl
call
sbb
add
std
scas
lods
jle
and
call
bound
shl
jg
cwtl
inc
mov
and
xor
mov
push
rorl
pop
pushf
add
pushf
and
pop
mov
and
pop
mov
je
psubusw
decb
adc
sti
lea
inc
insb
outsl
in
xlat
dec
push
push
mov
xchg
or
mov
rorb
inc
shll
in
xchg
sbb
pusha
psubsb
imul
ret
inc
mov
cwtl
bound
push
repnz
std
jns
jg
outsl
leave
pop
lret
scas
shr
in
je
push
sbb
test
call
add
fwait
inc
adcl
ret
push
js
mov
xor
inc
pop
mov
fisubs
xor
dec
inc
test
add
mov
nop
outsb
pop
and
enter
lea
cmp
push
mov
sub
sub
outsl
xor
clc
add
jmp
test
xchg
notb
test
mov
sbb
stc
and
adc
aas
and
imul
rorb
cmpsb
push
push
push
test
aas
push
sarl
cli
adc
sbb
inc
call
dec
jl
mov
xor
call
mov
inc
lea
mov
push
push
xor
shll
add
sbb
xor
cmp
rclb
addw
or
lods
adc
jnp
dec
jae
icebp
loop
cmp
pusha
or
aaa
jge
lea
cmpsb
sbbl
rcrb
and
int
ret
push
ret
lods
wbinvd
jbe
xor
movsb
in
pop
dec
pop
lods
sub
std
jmp
lret
jl
and
mov
adc
jp
mov
jp
inc
add
inc
sub
sbb
pop
xchg
adc
sbb
pop
mov
out
sti
push
sbb
jb
lods
popf
aaa
ficomps
cmc
dec
cwtl
std
push
mov
inc
fs
adc
cli
rcrl
test
cmpsb
fs
jmp
gs
xlat
or
add
xor
pop
stos
sub
clc
cltd
mov
mov
push
pop
add
lock
jg
std
pop
cld
cmp
imul
push
push
xchg
clc
push
sbb
inc
jnp
sbb
int
jle
jno
lock
jp
push
and
cmp
or
fisubs
add
push
pop
dec
int3
rep
sbb
ljmp
push
xor
test
push
adc
call
sbb
cltd
sub
call
adc
add
out
aas
clc
jae
jmp
dec
das
outsb
pop
inc
xchg
pop
aad
ljmp
and
adc
jl
add
call
test
insb
or
fldcw
loopne
add
inc
sbb
push
lea
movl
push
mov
and
lock
jae
pop
jmp
dec
dec
adcl
push
into
sub
mov
mov
es
sarb
std
test
movsb
and
cmp
fdivrs
fisttpll
inc
je
je
sub
push
or
sbb
loopne
and
sarb
adc
pop
jb
add
push
dec
insb
xlat
nop
mov
jo
gs
inc
inc
pop
bound
inc
imul
call
pop
xchg
xchg
imul
mov
xor
jecxz
inc
mov
loope
and
add
jae
mov
dec
push
adc
xchg
insb
sub
mov
xor
mov
jecxz
add
out
inc
sbb
jp
push
jnp
mov
lahf
mov
dec
dec
push
lds
ret
push
lea
cwtl
cmp
aas
xor
or
dec
sbb
or
leave
push
sub
xor
mov
mov
jne
push
mov
clc
mov
mov
push
xchg
add
aad
adc
push
cld
cli
mov
inc
sarb
ljmp
mov
xchg
in
mov
pop
mov
inc
add
test
and
add
ss
das
in
jle
lret
jbe
ja
jno
mov
test
mov
out
adc
jne
cli
and
clc
xchg
jge
jle
jbe
cmp
dec
shlb
push
jb
push
xor
std
jns
fsubr
das
roll
sbb
nop
ror
sbb
jbe
testl
xchg
js
test
xchg
dec
pop
mov
stos
adc
outsl
call
clc
or
adc
orl
inc
ret
cld
rcll
fnstcw
shlb
mov
xor
add
dec
mov
into
in
and
push
out
adc
inc
into
in
or
xor
pop
test
or
inc
adcb
mov
xor
inc
adc
lods
push
out
sbb
push
mov
push
rorl
jmp
dec
push
sbb
adc
lahf
pop
sbb
sbb
adc
cmp
lahf
xor
inc
mov
sbb
mov
inc
punpckhbw
jo
adc
test
jmp
inc
inc
aad
sar
lcall
or
daa
or
jns,pn
dec
aam
add
imul
xor
mov
mov
aad
mov
push
lret
cmp
nop
or
add
aas
add
fbld
adc
push
adc
mov
mov
iret
adc
sysenter
and
xor
push
sub
mov
jae
mov
jne
addr16
mov
xchg
and
adc
push
pop
aaa
push
mov
ret
xchg
add
jle
inc
adc
inc
mov
or
test
push
sbb
or
sbb
add
mov
test
or
movsb
jmp
cmp
dec
mov
cmc
adc
ja
push
movsb
adc
mov
cld
inc
cmp
push
sti
dec
jnp
adc
push
dec
cmpb
push
pop
mov
ja
repz
sub
mov
je
add
cmp
cmp
or
imull
int3
cli
lock
jge
addr16
mov
xchg
lock
clc
jp
mov
push
adc
push
add
mov
sbb
dec
inc
stos
push
mov
mov
loopne
jb
bound
or
inc
pop
dec
mov
out
mulps
dec
shlb
std
int
or
negb
jl
xor
mov
adc
mov
and
lcall
inc
inc
mov
lret
pop
sub
vpsubsb
jb
cmp
enter
mov
sbb
fimull
test
aaa
cld
push
adc
adc
add
lret
add
xchg
stos
mov
dec
inc
mov
test
jp
push
mov
jle
cld
pop
jmp
lods
jge
jae
push
cs
and
mov
jmp
fbstp
dec
dec
mov
fmulp
scas
mov
push
pop
xor
pop
ss
push
pusha
jle
es
fnsave
adc
jno
mov
cmc
xor
incl
mov
movsb
lcall
daa
int3
sbb
xchg
push
inc
lahf
xchg
es
fwait
sahf
std
cmp
inc
and
and
incl
repz
sbb
add
cmc
xor
jae
inc
add
xchg
pop
sub
mov
sbb
cli
test
aaa
push
adc
lock
push
jle
inc
ds
jmp
cmc
ret
sub
or
mov
mov
push
mov
popf
es
clc
xchg
jp
inc
sub
dec
pop
mov
cmp
pop
pop
and
aam
push
call
xchg
xchg
sub
xchg
jge
add
jo
jne
rep
add
xchg
fwait
jl
inc
shlb
int3
outsl
sub
mov
insl
xor
dec
sbb
lods
outsl
jl
or
hlt
add
jp
test
faddp
fldl
push
addr16
test
inc
aad
sub
cwtl
test
cmp
and
or
jge
adc
and
ds
dec
std
mov
mov
dec
sub
jle
std
and
or
lahf
cs
jne
add
cmp
jl
out
mov
pop
push
ret
mov
jmp
jno
mov
pop
jb
ret
push
imull
pop
ficomps
lds
xchg
lods
loop
data16
sbb
mov
loopne
dec
ficoml
popa
in
mov
in
je
inc
sbb
or
push
data16
and
sbb
sarb
mov
push
xchg
push
push
jmp
adc
test
push
jno
xchg
push
pop
enter
mov
jne
jle
push
cmpsb
inc
sub
push
or
ss
xchg
imul
mov
subl
and
in
ja
negb
out
ja
mov
pop
jmp
enter
test
pop
outsl
ffree
leave
jbe
cpuid
mov
jbe
insb
pop
inc
stc
fwait
xor
pop
fadd
sbb
testl
ja
pop
pop
inc
sub
add
push
call
das
adc
scas
andb
mov
clc
xor
xor
jl
or
out
and
push
mov
or
mov
and
dec
dec
inc
ret
out
push
in
add
jbe
rolb
dec
push
push
pop
dec
dec
push
loop
repz
mov
push
add
hlt
jge
jnp
jae
cmp
mov
mov
xor
or
or
lock
enter
rclb
cmp
push
jg
dec
cmpb
jne
sbb
add
dec
or
je
cmp
or
movl
fdivr
or
pop
sub
and
pushf
jl
cmp
xor
push
adc
adc
inc
add
sbb
cmpl
adc
loope
pop
inc
outsb
sarb
mov
orl
mov
jo
and
add
in
pushf
add
pop
jl
or
jp
pop
sub
xor
adc
sub
jge
inc
sbb
mov
xchg
mov
pop
mov
lahf
adc
sub
call
or
incb
popf
jle
dec
int3
inc
sahf
jg
ffreep
push
fcomps
pop
pop
add
cmc
stc
sub
pop
or
hlt
incb
sub
and
jle
add
roll
push
jge
dec
sub
rorb
mov
jo
push
clc
cli
mov
dec
rclb
mov
dec
sub
xchg
add
mov
fsts
stos
sub
push
push
in
cs
xchg
pushf
xor
adc
adcl
dec
pop
rorb
jg
or
jne
pop
inc
mov
sbb
jb
sbb
add
das
sub
fdivrl
dec
dec
mov
sub
xor
aad
and
int3
das
sub
fs
sub
sbb
dec
ss
js
adc
inc
sbb
or
aas
dec
mov
or
inc
jg
cmp
mov
cmp
je
rorb
sub
add
push
push
or
pop
adc
insb
lds
or
movsb
cmc
push
sti
xor
or
leave
jb
pop
and
push
lret
pop
pop
out
lret
scas
and
add
in
and
cs
mov
fbstp
adc
pop
hlt
lods
dec
popa
das
lret
pusha
sub
dec
lds
repz
fs
mov
cmp
jg
fldl
imul
push
push
ss
jmp
pusha
out
ret
sub
inc
inc
or
xor
cli
sti
add
adc
fadds
dec
out
pop
fcomps
push
lea
jo
inc
adc
push
xchg
xchg
lods
test
cmpsb
jle
push
dec
cli
add
xchg
xchg
sbb
dec
popa
xor
call
jl
add
inc
fiaddl
pop
and
pop
xchg
cmp
je
jnp
incl
jle
jecxz
mov
sub
movsb
pushf
inc
clc
or
popf
adc
and
rcrl
mov
add
scas
xor
scas
cmp
jbe
and
inc
push
sbb
sbb
cmp
push
and
push
push
std
insb
cmc
and
pusha
push
les
hlt
and
out
test
ret
ljmp
jl
push
mov
cmp
int
aam
ret
arpl
sub
sbb
je
adc
pushf
xchg
and
mov
data16
mov
or
insb
outsb
sbbb
cmp
push
repz
daa
pop
lods
cltd
xor
add
and
push
pop
call
popf
push
add
cwtl
mov
pop
lds
push
icebp
jle
inc
cmc
adc
and
cwtl
das
xor
mov
out
pop
gs
cmpsl
sbb
hlt
bound
or
and
jmp
fisubrs
lret
movsb
sub
hlt
cmpsb
in
and
cmc
test
out
mov
sarl
pop
jge
cmp
jne
mov
adc
lret
mov
and
test
addr16
mov
cli
add
pop
mov
jge
add
dec
pushf
lcall
adc
push
dec
inc
cli
xor
inc
xchg
sub
lahf
fcompl
mov
push
insb
cs
push
cmp
pop
hlt
daa
ja
pusha
and
ss
and
dec
test
lock
imul
add
push
shrb
or
dec
or
out
dec
insl
sbb
push
or
or
aas
xchg
test
sub
push
sbb
lods
call
xorb
add
adcl
repnz
sub
lahf
or
loop
call
sbb
sar
jmp
cs
dec
dec
nop
in
les
mov
notl
push
lods
insb
into
out
jbe
lock
mov
or
or
push
loopne
dec
neg
das
or
jp
sub
pop
lahf
daa
imull
mov
mov
lea
enter
add
mov
push
rorl
push
adc
sti
jns
mov
popa
mov
mov
pop
sub
into
cmp
mov
jmp
lea
push
and
rclb
pop
inc
dec
xor
hlt
call
sbb
out
ret
sbb
orb
filds
popa
out
jne
cmp
or
xlat
mov
stos
cmpsl
and
adc
and
clc
add
add
pop
xor
push
push
jg
mov
or
jp
xor
data16
pop
and
shrb
push
and
daa
xor
push
and
pop
ja
or
sbb
ds
push
rorl
movsb
mov
xchg
xchg
aas
xorl
and
je
dec
mov
fsubr
ljmp
push
and
push
icebp
adc
pop
or
adc
ds
xlat
or
test
adc
test
or
scas
or
adc
xchg
xor
sbb
push
adc
and
adc
jge
mov
jl
dec
outsl
les
mov
ja
je
pop
lea
stc
adc
pusha
movzbl
aas
or
popa
imul
adc
ss
and
inc
pushf
pop
sub
rolb
sub
adc
sub
cld
dec
fisttps
adc
and
dec
mov
icebp
inc
popa
iret
insb
pop
adc
mov
sahf
ret
sbb
rclb
in
and
dec
mov
inc
in
mov
add
add
aad
mov
add
push
or
mov
add
and
mov
daa
roll
sbb
out
std
mov
pushf
and
std
lcall
mov
xor
jge
sbb
ljmp
movsl
addr16
mov
js
jae
inc
or
inc
nop
push
cmp
das
inc
and
pop
push
into
or
iret
cld
lock
lock
in
iret
fcom
enter
push
out
rorl
pop
cmp
inc
scas
xchg
mov
mov
xchg
cmp
sub
xor
cli
cmpsl
aam
and
inc
rol
and
push
push
jl
daa
adcl
pop
mov
inc
mov
lds
negb
dec
push
outsb
mov
leave
test
mov
mov
xchg
pop
loope
call
orb
adc
icebp
cmp
and
call
sub
push
pop
lock
or
mov
ret
adc
jmp
cmpsl
inc
dec
mov
cs
cmc
cmp
les
sub
and
pop
pop
and
and
xor
lock
pop
add
or
incb
mov
push
xchg
mov
fstpl
mov
xlat
or
add
add
or
push
mov
insb
inc
shll
sub
xor
mov
pop
faddl
or
jg
push
adc
outsl
pop
mov
cli
or
dec
gs
je
dec
lock
push
in
call
adc
sub
push
dec
push
xor
rorb
into
cmp
in
imull
mov
jo
dec
mov
sbb
or
or
jle
xchg
or
sbb
loopne
jne
adcb
das
jne
subb
xchg
cltd
or
pop
push
shlb
mov
dec
xlat
sub
xchg
call
and
push
mov
add
jle
test
repz
sbb
cld
cmpsb
not
adc
push
and
pop
subb
or
fiadds
sub
xor
dec
pop
lods
jbe
test
mov
push
jae
gs
inc
popa
and
insl
fdivl
jb
mov
mov
jbe
mov
and
mov
add
push
enter
push
in
or
xchg
adc
pop
stc
out
adc
pop
xor
cmp
mov
lods
pop
ljmp
xor
arpl
push
jl
xchg
xchg
in
fistpll
pop
pop
xchg
sbb
es
icebp
cmp
adc
and
ficoms
xor
pop
cmp
inc
mov
fdiv
jmp
add
dec
lock
lcall
jo
push
test
push
pop
pop
dec
ret
into
push
mov
inc
shlb
nop
sub
adc
and
or
es
leave
and
outsl
dec
rol
std
outsb
icebp
mov
fdivl
int3
dec
test
pop
sarb
imull
or
call
call
xchg
lods
adc
stos
xchg
push
dec
std
pop
inc
out
adc
add
in
std
lret
inc
add
jle
pop
adc
add
xor
mov
add
cld
xchg
leave
inc
popf
movsl
pop
shlb
xor
xor
nop
push
inc
mov
pop
aam
jge
mov
adc
and
push
cmp
pop
jge
jne
cmp
pushf
xchg
negb
sub
lods
or
test
add
inc
shlb
push
jnp
jbe
inc
adc
dec
dec
or
mov
test
pop
dec
or
inc
pop
and
int3
std
or
dec
or
sbb
inc
pop
and
mov
sbb
xchg
stc
pop
in
cmp
into
test
sbb
push
jle
and
push
enter
mov
mov
sub
and
or
push
icebp
ljmp
notl
rorb
and
mov
cmpsl
enter
xor
cmp
enter
push
push
adc
sub
xchg
dec
enter
js
xchg
and
sti
jecxz
and
sbb
push
ds
shlb
xor
pushf
and
cmpsl
pop
mov
and
or
sub
movsl
outsb
cs
sbb
hlt
enter
aad
adc
call
adc
cmpsb
fwait
xor
test
push
fbld
pop
jae
pushf
in
addr16
push
lret
or
add
repz
pop
mov
mov
cli
pop
add
sub
pop
jmp
clc
jg
lea
imul
cltd
inc
mov
dec
push
and
add
movl
cmp
jb
jmp
dec
cmp
inc
lcall
inc
jnp
or
dec
das
xchg
pop
push
and
int3
ja
mov
cmp
cmpsl
push
cli
xchg
mov
or
sub
ror
hlt
jne
loop
adc
mov
jnp
sbb
dec
push
add
or
and
inc
adc
jne
bound
fsubr
fldl
cmp
leave
test
and
mov
cld
inc
stos
push
add
jl
sub
scas
sbb
sbb
lret
jne
or
adc
test
in
loopne
fnsave
sbb
ret
mov
xor
sub
dec
xor
jne
push
dec
test
pop
cmc
and
pop
ds
pop
aaa
sub
cmp
pop
mov
or
ret
push
or
or
imul
jb
pop
or
jge
adc
lds
call
lcall
sbb
daa
popa
adc
push
sub
or
xchg
out
sub
sbb
clc
jle
pop
jle
in
nop
adc
cld
xor
popa
bound
sbb
adc
push
fs
dec
lods
mov
adc
inc
cmp
sbb
push
repnz
lea
ja
icebp
or
xor
xchg
adc
sub
xor
mov
cmp
shrb
mov
pop
add
fs
lahf
movsb
ja
xor
popa
xor
fdivl
push
add
dec
clc
add
mov
sbb
mov
fcom
enter
pop
xor
ss
inc
dec
sub
dec
push
pop
push
add
mov
rorb
mov
sbb
adc
push
xor
xchg
push
inc
adc
cld
dec
xor
push
psubsb
mov
out
push
movl
je
dec
mov
pop
es
xor
or
mov
pushl
test
inc
sbb
je
pushl
pop
mov
xor
cmp
adc
xor
subl
fwait
mov
jb
jmp
mov
fs
dec
xlat
dec
fwait
cld
scas
jecxz
sub
and
int
dec
das
popf
jns
xor
adc
es
or
icebp
add
inc
sub
faddl
cmpl
xchg
add
push
stc
and
outsb
inc
call
mov
lahf
int3
inc
std
xor
sub
scas
lods
cld
mov
push
adc
sbb
mov
sbb
sti
clc
and
mov
loope
inc
adc
dec
sub
or
pop
mov
inc
mov
movsl
inc
mov
icebp
adc
push
sbb
shr
test
and
dec
mov
xchg
push
sbb
jne
push
adc
jmp
mov
xor
cli
ret
adc
jmp
or
call
clc
data16
push
lret
sub
aad
xor
and
push
cli
repnz
lds
fstl
popa
pop
rcrl
orl
mov
dec
adc
pusha
loope
hlt
or
mov
in
lock
testb
aad
mov
or
mov
sub
sbb
jns
sbb
es
and
iret
or
xchg
jne
in
outsb
push
test
mov
or
cltd
cld
stos
outsb
movsb
xor
mov
mov
xchg
jmp
sub
mov
inc
test
out
cltd
pop
inc
ljmp
cli
ss
int
mov
push
push
lret
or
cmc
dec
mov
and
sub
es
add
dec
pop
outsb
adc
aam
dec
sub
sub
das
mov
pop
sbb
push
pop
sbb
lret
xchg
and
jg
call
leave
or
inc
push
mov
dec
mov
hlt
clc
arpl
orb
jge
sbb
xchg
jmp
xchg
xchg
stc
mov
add
or
xchg
or
add
and
in
push
fs
adcb
push
inc
cmp
jb
sahf
lds
jge
add
sar
sbb
jle
arpl
push
xor
adc
add
test
sub
push
pop
andb
push
mov
push
adc
add
push
pop
xchg
pop
mov
dec
or
and
sbb
lea
sub
mov
mov
cmc
or
cmpsl
loopne
mov
push
cmpsb
out
sbb
or
and
lock
cmp
enter
push
cmp
pop
subl
loop
and
pop
imul
push
int
jbe
xchg
inc
imulb
mov
sahf
pop
sbb
das
movsb
mov
push
int3
push
cld
jge
ffree
and
push
daa
mov
mov
or
ljmp
in
lahf
mov
xchg
fimull
fsubs
clc
sub
movsb
sbb
fs
inc
je
push
jb
fstpl
addw
dec
stos
xor
or
in
dec
xor
mov
ljmp
inc
cmp
movsb
cmp
jb
dec
push
pop
adc
stos
jmp
sbb
push
mov
jne
xlat
cmp
mov
mov
pop
inc
inc
push
in
scas
and
mov
dec
scas
pop
mov
in
inc
inc
je
jecxz
inc
das
ret
fdivrl
add
push
or
les
adc
jecxz
pop
cmp
sbb
mov
push
pop
dec
test
les
inc
and
add
mov
xor
sbb
xlat
test
xchg
int
mov
das
repz
xchg
adc
rorb
cli
leave
dec
mov
dec
jge
mov
adc
adc
add
jns
and
ret
push
and
sbb
stc
cmc
and
inc
push
fs
push
xor
cmpsb
cltd
lahf
int3
addb
pop
and
int
cmp
sbb
and
or
out
insb
jb
lods
inc
arpl
aam
adc
push
cmc
cmpsb
daa
in
push
mov
scas
ja
jne
push
in
clc
dec
shrb
js
stc
test
dec
mov
mov
and
adc
flds
sub
inc
dec
sub
mov
mov
lods
aas
add
push
jmp
xchg
je
mov
addb
ds
mov
daa
adcl
and
xor
push
jle
jnp
insl
orb
and
and
std
stc
xchg
mov
and
lahf
rcll
jbe
xor
shlb
int3
dec
cmp
incb
bound
inc
xchg
dec
pop
push
mov
mov
lods
or
push
jne
lret
mov
stos
movsl
mov
xchg
test
and
adc
push
and
or
sub
sti
pop
dec
inc
mov
pop
loopne
inc
inc
and
sub
loopne
and
jmp
dec
or
stos
cmp
je
or
enter
cmp
pop
inc
and
out
dec
and
push
push
push
and
and
popa
ljmp
dec
pop
mov
or
fcoml
jns
sbb
in
mov
test
inc
xchg
cld
push
or
inc
rorb
inc
roll
and
cmp
push
nop
rol
cmp
mov
mov
mov
or
xchg
jno
dec
sbb
enter
adc
pop
fbld
add
mov
test
adc
loop
loopne
mov
pushf
das
aad
mov
pop
inc
shr
inc
mov
inc
push
dec
or
and
mov
inc
pop
sbb
dec
lret
nop
loope
sub
mov
mov
test
sbb
inc
and
jl
add
ret
xchg
sub
fmuls
xchg
inc
push
mov
in
xlat
adc
fcomp
adc
xor
push
pop
in
mov
push
mov
push
out
cmpsb
xchg
lret
fidivrl
add
dec
insl
lea
call
push
sub
mov
ja
sbb
or
pop
out
pop
decb
push
lods
rol
and
scas
push
or
sub
jo
mov
jecxz
arpl
or
adc
outsl
jle
hlt
cltd
std
shrl
pop
and
mov
cmpsl
inc
rcrb
adc
lret
adc
fisttpl
cltd
pusha
and
lock
popa
fisttpl
or
xchg
and
mov
push
jmp
out
xchg
es
sub
cmp
jae
insl
add
jmp
push
add
ja
xor
je
add
sub
fs
cmp
dec
and
fmuls
fsts
das
sbb
pop
sahf
jne
mov
lret
jge
clc
mov
imul
mov
fsubs
enter
call
shrb
jno
or
mov
repnz
insb
js
lret
push
pop
or
add
notl
enter
inc
mov
rol
iret
aam
fsub
xor
lock
xchg
adc
pushf
xor
inc
sbb
mov
mov
xchg
mov
rol
or
pop
lods
adc
pop
xor
adc
inc
and
clc
sub
call
test
pop
dec
adc
int
xchg
push
daa
adc
cmp
movaps
shr
cmc
xchg
ficoms
fsubrs
jo
cld
test
add
in
adc
imul
cmp
out
dec
imull
lds
cmp
mov
mov
adc
lods
cmp
iret
enter
es
dec
jg
ret
roll
cltd
add
cs
xor
leave
xchg
adc
push
xor
mull
push
les
push
add
mov
xchg
xlat
test
in
out
pushf
out
mov
pop
mov
push
xchg
pop
cmp
jg
jbe
mov
mov
repz
out
push
inc
lea
jge
and
repz
push
cmc
pop
sbb
std
mov
stc
push
mov
popf
inc
repz
push
xor
mov
push
decb
pop
xchg
push
popf
sub
add
cmp
mov
or
add
pop
popf
dec
bound
jmp
push
aam
lret
aad
add
pushf
jge
negb
movsb
inc
jnp
inc
and
cmp
push
add
or
jbe
dec
push
ja
inc
inc
sysret
sbb
add
and
adc
sub
inc
dec
sbb
dec
push
in
cmp
leave
imul
scas
ja
jb
add
ficomps
fcoml
xor
lret
sbb
nop
sahf
add
pop
jb
cmp
mov
aaa
push
and
and
inc
adc
inc
bound
adc
adc
xor
or
mov
sbb
test
mov
adc
jae
out
pusha
and
sbb
or
ret
adc
fists
and
pop
add
out
mov
das
and
cmp
pop
lds
fisttpl
stc
cmp
pop
push
cmp
popf
cmp
and
lods
and
cwtl
mov
ffreep
cld
mov
xor
jo
cmp
or
imul
pop
mov
add
adc
sbb
test
mov
les
jge
int3
loopne
das
cmp
daa
push
inc
xor
push
sbb
ficoml
shlb
inc
jne
or
cmp
xor
pop
or
mov
xor
pop
mov
add
in
or
sub
daa
cld
rcl
hlt
lock
cmc
pop
dec
jno
cmp
cs
imul
xor
mov
sbb
lods
or
sbb
test
inc
cwtl
std
inc
hlt
push
lahf
notb
mov
lcall
or
scas
inc
movsb
aaa
pop
popa
iret
mov
inc
mov
xor
inc
loope
clc
ror
sbb
or
pop
xchg
cmp
pop
mov
and
pop
daa
xor
jne
pop
push
in
pop
jle
int3
inc
adc
or
cli
xchg
shrb
decl
repnz
cmp
cmp
mov
cwtl
mov
add
aam
les
loope
xchg
and
mov
iret
lea
push
or
imul
inc
ds
jg
push
xchg
in
mov
push
addb
mov
lcall
mov
cmp
jne
sub
sbb
nop
dec
sbb
sub
push
es
ss
push
adc
inc
add
outsb
or
mov
or
imul
or
pop
jge
and
repnz
outsb
les
xchg
shll
rdtsc
pop
lds
inc
push
gs
and
jmp
cmpsl
push
nop
enter
xor
loopne
hlt
adcb
mov
lods
xor
repnz
fwait
push
in
xor
aaa
stc
test
cmp
cltd
mov
jo
mov
push
stos
rcll
test
push
arpl
fadds
inc
loopne
loop
jecxz
sbbb
movsb
cmp
xor
test
icebp
cmp
jbe
push
adc
enter
or
add
rcrb
push
imul
popa
inc
loopne
sbb
xor
fsubl
xor
dec
push
lahf
jmp
xor
in
xor
sbb
imul
daa
push
jns
mov
pop
adc
pop
movsl
clc
clc
jecxz
dec
scas
leave
ficoms
mov
cmp
add
test
adc
bound
push
pop
and
inc
cli
cmc
push
and
adc
cmp
mov
pop
sbb
scas
jo
xchg
test
movsb
cli
or
cmp
sub
jp
ret
cli
mov
cmpsl
lds
aad
call
or
xchg
dec
popf
in
pop
leave
jo
cmp
or
scas
sti
stos
mov
sub
add
stc
jle
lret
mov
push
call
xor
les
jb
inc
das
ds
test
and
mov
add
cmp
cmp
and
and
cld
push
dec
hlt
push
xor
dec
orb
sub
mov
out
add
les
and
inc
and
sub
es
test
sub
or
adc
mov
sub
dec
sbb
push
or
loop
pop
and
mov
jge
lret
adc
jg
or
je
inc
test
dec
push
mov
or
and
adc
out
pop
cmpsb
nop
ss
adcl
and
adc
test
lock
leave
adc
add
mov
mov
movsl
ss
addr16
in
jnp
jmp
add
fisttps
pop
adc
sub
push
mov
pop
out
daa
fnstenv
push
rcll
scas
int3
mov
test
scas
aaa
popf
pop
and
outsb
test
lret
cwtl
pop
in
or
dec
imul
and
jns
rclb
xor
mov
sub
adc
dec
push
repz
cltd
push
push
dec
rorb
pop
add
inc
sbb
mov
sub
mov
sbb
inc
bound
test
sbb
dec
test
mov
test
adc
adcb
pop
pop
mov
mov
xchg
xchg
cwtl
pop
adc
sub
push
pop
and
jo
les
js
and
call
dec
mov
mov
std
in
or
mov
xlat
or
addr16
enter
adc
jmp
pop
sti
sahf
insl
dec
mov
insb
dec
xchg
sti
icebp
and
mov
jl
xchg
mov
cmp
inc
lods
daa
xor
jle
loope
jne
outsb
mov
cld
mov
lods
sub
push
dec
sbb
arpl
test
sub
cmp
add
cmovbe
mov
test
lock
cmp
add
mov
ret
cmp
cld
pop
inc
imul
jge
and
xor
aas
mov
add
jne
inc
sub
in
jl
scas
or
jge
xor
mov
mov
in
call
push
sbb
ficoml
mov
jns
or
int3
adc
mov
add
add
and
out
in
cmp
mov
sub
pop
and
xor
xchg
sbb
cwtl
lret
in
movsb
xchg
movsl
xor
int3
pop
xchg
and
or
aam
test
inc
pop
popl
and
movsb
or
and
and
addr16
adc
add
test
mov
shlb
and
fxch
cmc
mov
arpl
enter
insl
and
add
data16
xchg
push
je
insb
or
scas
adc
and
popf
shr
inc
add
lret
sub
sahf
xchg
fistps
mov
and
pop
push
clc
lds
or
call
lahf
pop
sbb
pop
push
xor
dec
adc
pusha
and
inc
mov
push
jge
mov
movsb
mov
push
adc
sub
fs
cli
or
or
mov
in
pusha
sbb
sub
mov
das
sub
je
jp
sub
add
fistl
or
cld
jmp
push
push
push
cli
push
add
stos
enter
fsub
mov
jmp
stc
dec
test
mov
push
push
adc
fdivr
and
add
pop
jmp
dec
xor
jo
mov
push
mov
xchg
pop
jle
add
adc
ret
xchg
mov
test
dec
enter
adc
stos
adc
data16
js
data16
test
push
or
adc
or
call
sbb
inc
clc
aas
jmp
testl
int
outsl
mov
xchg
jae
leave
inc
mov
jb
les
inc
insb
mov
add
xchg
sub
and
xor
mov
sahf
inc
mov
call
add
les
cmpl
pusha
cmpsl
sub
dec
push
xor
lock
jmp
jo
push
enter
inc
cmp
addr16
mov
push
add
push
popa
lahf
or
cmp
pop
jne
les
mov
jge
jmp
adc
aas
mov
mov
cmp
imul
sbb
lock
lahf
jl
gs
or
add
dec
sub
push
dec
xchg
xor
cmp
mov
push
shrl
aad
adc
xchg
jge
sub
js
loope
test
test
aam
dec
and
or
push
jmp
push
dec
sbb
cmp
test
dec
jne
mov
adc
inc
dec
popf
cmp
out
imul
sbb
nop
xor
adc
xlat
jmp
pop
or
or
dec
xorl
lret
xor
sub
dec
sub
mov
sahf
call
sbbb
fcomip
scas
push
add
ja
mov
mov
pop
adc
stos
repnz
pop
and
test
adc
add
popa
mov
xor
add
mov
jle
rolb
test
add
mov
je
mov
addr16
xor
ret
lods
lret
fisttpl
adc
add
int
lea
push
sub
rol
push
inc
std
enter
add
mov
inc
add
push
mov
and
repnz
mull
jb
int3
movl
fcoms
dec
shlb
pop
fnstcw
mov
daa
mov
icebp
or
push
cmp
pop
bound
cld
stc
and
sub
dec
std
adc
fisubrl
int3
add
and
xchg
shrl
mov
or
test
pop
mov
test
sub
inc
xor
xchg
sub
subb
xchg
stc
outsl
pop
orb
outsb
bound
cwtl
je
and
push
cmpl
or
mov
or
push
mov
push
dec
push
sub
adc
dec
loope
xor
fnstsw
push
enter
adc
push
mov
pop
xor
lcall
daa
adc
mov
rcrb
test
inc
test
add
mov
loope
daa
hlt
repnz
jae
add
inc
shlb
xchg
adc
adcb
sub
in
in
adc
xchg
adc
or
std
xlat
push
or
or
fildll
jmp
mov
jb
dec
mov
sbb
aad
rol
not
xchg
xlat
xor
cs
adc
hlt
inc
aaa
mov
pusha
loopne
je
call
xorb
adc
cltd
or
scas
dec
dec
bound
data16
push
push
rorb
mov
mov
cmp
cmp
clc
test
movsb
and
mov
sub
pusha
and
sub
js
add
call
imul
test
inc
test
xor
xor
sub
mov
cli
ret
cmpsb
jecxz
loop
daa
xchg
pop
fstpl
ja
or
in
jbe
xchg
pop
or
pop
push
add
inc
arpl
xchg
sbbb
mov
dec
cmpsl
mov
jb
into
sub
aam
and
jne
lods
testl
dec
movsb
mov
cwtl
imul
adc
mov
adc
pop
dec
adc
and
inc
or
jmp
fdivr
aad
orl
push
adc
mov
xor
sbb
mov
adc
inc
dec
or
xchg
mov
xchg
cmp
jbe
push
orl
dec
push
xorl
mov
js
push
or
fnstsw
sbb
or
xchg
add
lods
lock
add
dec
and
adc
clc
add
das
cmc
inc
es
add
mov
dec
mov
inc
and
or
leave
mov
cmp
nop
inc
push
fs
push
addl
inc
add
aaa
sub
das
and
in
add
sbb
fwait
push
mov
xor
scas
push
dec
mov
sbb
adc
stos
adc
call
cwtl
jmp
jne
repz
clc
jmp
push
pop
dec
adc
pushf
sbb
cs
ret
sbb
loope,pn
out
dec
rcl
nop
stos
pop
mov
testb
mov
nop
inc
lret
sbb
lret
sub
jo
adc
js
jp
or
sbb
cli
and
or
xlat
add
and
sti
pop
xchg
mov
inc
out
add
mov
add
icebp
jns
push
adc
loope
popa
sbb
lock
aam
mov
lods
inc
xchg
enter
popa
push
lds
popa
fidivrl
popf
js
push
or
and
add
inc
or
loop
add
dec
xlat
jae
lret
fistl
jle
inc
jbe
sub
adc
push
mov
jle
cli
add
leave
ficompl
lock
pop
pop
test
and
nop
outsb
icebp
push
pusha
sbb
mov
inc
call
cld
scas
jns
sub
daa
jae
and
lcall
jne
push
sbb
mov
or
pop
cmpsb
push
cli
jmp
and
push
push
add
cmp
add
test
ror
mov
enter
rol
imul
subb
mov
jg
or
mov
dec
and
xlat
adc
repnz
sub
icebp
xchg
sahf
shll
or
jne
add
mov
inc
adc
outsb
mov
mov
add
mov
jno
pop
adc
adc
test
dec
sub
rclb
dec
or
lea
sub
movsl
sub
out
mov
cld
add
call
in
cmp
push
sbb
nop
lods
fildll
dec
mov
xor
push
mov
loop
dec
sub
rorl
push
das
push
or
outsl
insb
les
mov
or
push
lcall
int3
inc
cmp
push
adc
mov
mov
jmp
mov
mov
adc
pop
sub
iret
inc
or
mov
out
sub
add
mov
jmp
mov
mov
enter
add
push
fcoms
pop
add
pop
sub
lods
inc
mov
out
test
addr16
cs
addr16
iret
rcrb
pop
test
imul
lcall
jle
jbe
fidivs
inc
push
and
adc
mov
sarb
in
or
inc
push
xchg
das
push
nop
mov
inc
mov
push
test
add
pop
inc
pop
mov
ret
pop
add
dec
push
mov
das
add
sub
or
sub
jmp
or
adc
mov
dec
pop
fbld
and
jmp
sub
add
je
mov
fwait
xchg
test
je
bound
push
mov
sub
bound
xor
or
adc
mov
sbb
mov
add
inc
lea
pop
dec
les
dec
adc
xchg
jl
lea
imul
fcoms
test
lret
jb
mov
push
add
int3
add
flds
add
cmp
xchg
das
add
push
pop
adc
cmp
sub
loopne
fs
cmc
and
outsl
or
xchg
and
jne
mov
mov
cld
cmp
enter
cmp
faddl
mov
sub
inc
mov
cmp
or
mov
sbb
push
in
addl
bnd
stos
std
data16
test
mov
add
jp
push
inc
adc
add
push
loop
xlat
sbb
and
icebp
or
sbb
test
jl
mov
sub
mov
and
dec
aaa
sub
jp
adcb
mov
lock
mov
popf
loop
push
adc
arpl
cmpsl
pop
push
inc
test
loopne
pushf
jl
test
enter
movups
pusha
dec
js
mov
mov
loop
push
pop
mov
mov
arpl
pop
mov
in
xchg
orb
repnz
add
cmpsb
jmp
push
je
je
inc
dec
adc
jae
nop
in
cwtl
stc
in
and
loop
push
pop
xchg
in
into
inc
cld
mov
bound
mov
add
lahf
and
push
lds
xor
aas
jmp
fimull
pop
dec
xor
mov
repz
lods
or
adc
mov
cmp
xchg
lds
shlb
into
mov
das
dec
lret
xchg
dec
mov
nop
in
push
ret
pop
xchg
loopne
inc
add
sbb
jmp
or
xor
orl
shr
mov
adc
xchg
test
rcrb
loopne
push
lahf
or
add
ja
incl
and
test
inc
daa
nop
fidivrl
insb
and
mov
sub
jne
dec
leave
lcall
xchg
dec
mov
cmp
jmp
adc
sub
and
or
std
push
js
cld
mov
mov
jl
add
inc
mov
sbb
insb
outsb
pop
add
add
adc
add
mov
mov
pop
and
dec
jp
int3
sbb
or
addb
sbb
cmp
mov
pop
jmp
jne
lock
pusha
rcll
cmp
cmp
jo
inc
xchg
movsb
or
out
nop
xlat
and
movsl
sahf
jae
int
ret
fs
loopne
mov
pop
enter
loopne
arpl
fldcw
dec
pop
adc
push
sub
jo
jne
adcl
cmp
dec
push
call
das
xor
and
std
ss
test
mov
outsl
aaa
push
aam
mov
cli
xchg
or
dec
loope
push
dec
call
xor
push
fdivl
inc
hlt
push
pushf
xor
xchg
ljmp
pop
lcall
int3
and
movsb
inc
jns
jo
lds
decl
sub
push
popf
loopne
xlat
mov
jo
loopne
add
push
addr16
cwtl
dec
pop
imul
xor
repnz
sbb
mov
adc
fsub
inc
cltd
pop
mov
into
clc
lods
fmull
sub
mov
daa
je
adc
insb
mov
fcmovne
xor
dec
stc
dec
sub
dec
or
xor
or
and
cli
and
inc
call
loope
mov
scas
pop
adc
xor
cli
pop
imul
cmp
fisttpl
ds
or
mov
sub
cwtl
cwtl
mov
addb
pop
ljmp
push
adc
add
cmc
les
pop
movsl
cld
jns
out
sub
mov
dec
pop
inc
pop
jmp
mov
jb
and
cs
mov
outsl
and
jmp
pop
insb
xor
mov
leave
fs
lahf
dec
mov
ficoml
adc
insl
cmp
clc
and
cmp
nop
mov
jmp
pop
es
jno
adc
push
xor
dec
and
shrl
sbb
pop
push
inc
mov
jl
and
in
or
test
jbe
inc
or
movsb
loopne
xor
ret
lods
xor
imul
adc
pop
dec
mov
imul
fwait
push
shlb
popf
sub
fstpt
add
mov
mov
pop
jmp
loop
or
lods
sbb
rcrb
xchg
add
data16
imul
dec
ds
xchg
mov
dec
sub
xor
lcall
or
mull
mov
fwait
enter
cmc
push
daa
pusha
dec
mov
push
adc
inc
scas
sbb
sti
sbbb
in
inc
push
mov
call
nop
inc
push
inc
pop
leave
icebp
mov
sub
pop
popa
pop
jle
pop
fbld
clc
outsb
lock
je
movsb
add
push
testl
cmpsl
cmpsl
mov
ret
or
loope
jge
xchg
xchg
add
jne
push
pop
nop
sbb
inc
mov
ss
inc
add
push
std
or
insb
xchg
das
or
mov
pop
and
pusha
push
adc
mov
sub
sub
and
mov
push
inc
sub
inc
je
imul
dec
xor
or
movsl
mov
adc
hlt
cmpsb
int
outsl
jo,pt
loopne
dec
fdivrl
aas
sti
ss
push
inc
scas
dec
adc
cmp
rcr
dec
in
jmp
sub
int3
aad
sbb
sub
cmp
mov
outsb
test
cmp
sbb
add
jo
sbb
dec
jg
mov
stc
sub
mov
fadd
loop
dec
fstpt
loope
jmp
dec
sub
or
mov
dec
sub
adc
xchg
dec
and
mov
jno
movsl
adc
fcmovnb
jp
cmpsb
ficoms
fisttpl
and
push
scas
jg
or
je
inc
push
shlb
call
or
push
call
adc
test
xchg
xchg
xchg
mov
fiaddl
fists
sub
dec
jo
xchg
jmp
enter
dec
enter
or
push
mov
sbb
sub
or
ret
sub
jle
divb
mov
jns
or
jns
nop
jge
jns
adc
sub
cmp
lcall
inc
and
xor
loopne
adc
push
mov
pop
rolb
mov
test
mov
mov
movsl
mov
pop
mov
inc
test
jecxz
and
jne
and
mov
or
jmp
xor
and
lea
sarb
or
pop
and
adc
push
call
push
inc
fadd
add
sub
pop
push
cld
xor
add
out
clc
cmp
xchg
xchg
pop
jne
nop
or
sub
jns
je
mov
push
xchg
inc
push
push
push
pushf
mov
mov
pop
icebp
and
rorl
fsubrs
cmp
xor
mov
int
cli
sub
push
imul
mov
push
sub
movsb
lea
flds
mov
xor
push
jo
pop
js
call
cmpsb
mov
mov
jecxz
fsubl
rcrl
xchg
out
shlb
divb
sbb
push
lahf
outsb
ja
or
lret
nop
pop
out
adc
test
stos
aam
add
je
adc
addl
je
jns
js
mov
sbb
mov
push
pop
jae
push
sub
add
fsubr
hlt
and
fcompl
call
add
xchg
int3
sti
cmp
sub
stos
xchg
sbb
dec
out
dec
xor
dec
cs
push
xor
sbb
fiadds
mov
in
and
adc
mov
sbb
sub
dec
fsubr
push
inc
out
or
xchg
mov
cli
adc
bound
cld
dec
inc
pop
addr16
lret
jmp
lock
push
mov
subl
bound
popa
fildl
mov
push
test
adc
or
inc
xor
out
push
or
clc
mov
mov
test
popf
adc
mov
addl
adc
imul
or
frstor
xchg
and
xchg
fwait
mov
mov
or
mov
mov
faddl
fidivl
pop
or
mov
xchg
shrb
adc
mov
shr
adc
inc
add
pushf
push
ds
mov
adc
jb
clc
push
insl
inc
adc
mov
inc
xor
leave
out
ja
ret
cmpsl
push
inc
mov
test
xor
stc
pushf
add
neg
loopne
add
add
mov
inc
dec
jne
mov
mov
adc
and
jmp
rep
ja
xchg
dec
dec
arpl
ret
sub
or
and
push
push
mov
and
daa
jnp
dec
aaa
adcl
and
daa
je
js
push
sub
sbb
pop
add
push
and
test
das
dec
jne
mov
into
test
or
pop
mov
out
xchg
cmp
pop
cli
inc
push
xchg
push
mov
lods
mov
cli
and
mov
ds
adc
push
ffree
ds
adc
push
test
sub
div
push
daa
test
or
jne
push
je
sbb
cmp
lcall
ss
or
icebp
pop
inc
pusha
jne
push
mov
test
movsb
cs
and
mov
call
mov
pop
mov
lock
std
fmul
or
adc
inc
pusha
gs
ljmp
dec
in
mov
mov
xor
lock
scas
adc
add
cmpl
adc
int
insb
push
popf
scas
cmp
pop
add
mov
in
jmp
test
xor
sub
pop
or
lods
or
stos
inc
lds
scas
repnz
inc
aam
push
neg
scas
pop
adc
cmpsl
inc
hlt
adc
lret
and
test
and
and
mov
movsl
and
lock
mov
out
push
clc
call
and
or
xor
hlt
add
sub
xlat
ret
xchg
ds
orl
jb
test
and
jle
jmp
xchg
ljmp
hlt
ds
sarb
xchg
sbb
add
pushf
adc
fcompl
imul
push
sbb
call
jge
sbb
ret
sbb
rol
xchg
mov
mov
inc
cmpsl
jns
dec
push
and
add
push
adc
sbb
mov
and
daa
jne
data16
loope
jmp
mov
sub
mov
mov
gs
addr16
inc
sub
adc
aad
and
dec
outsl
test
or
std
push
mov
xchg
or
adc
push
dec
adc
inc
adc
mov
inc
mov
add
jmp
cmpl
lret
je
push
not
xor
dec
pop
popf
inc
mov
adc
aam
popf
lcall
add
dec
incb
and
dec
pop
nop
adc
lea
pop
call
cltd
mov
loopne
orb
xchg
xor
jbe
sahf
lahf
xchg
aam
fcoml
pop
loope
push
lds
pop
scas
adc
sub
dec
pusha
push
fadd
inc
das
or
adc
sahf
daa
xchg
sub
mov
ss
jge
out
jg
dec
clc
cmpsb
dec
pop
mov
popa
inc
xchg
mov
fsubrs
dec
push
inc
sbb
add
pop
or
lods
jl
inc
dec
add
cmpsb
dec
loopne
lcall
xchg
pcmpeqw
adc
push
push
outsl
mov
cmp
stos
add
call
pop
dec
adc
push
push
call
pop
add
imul
add
call
adc
inc
in
jle
sbb
daa
mov
push
and
xor
xchg
dec
lar
jno
mov
dec
test
inc
cmp
cmc
adc
test
or
jne
cmc
nop
pop
nop
and
ret
adc
cli
jmp
lea
mov
pop
dec
sbb
and
loopne
les
gs
cbtw
xor
and
jmp
pusha
pusha
imul
add
ret
mov
inc
push
sub
and
mov
test
adc
adc
into
fs
sahf
faddl
iret
arpl
add
call
dec
push
jp
iret
bound
push
lret
dec
xchg
rclb
pop
shrl
lds
jmp
pop
out
inc
and
xchg
shlb
push
jge
sbb
iret
mov
and
sub
push
out
cli
cmp
sub
imul
in
and
stos
repz
push
movb
aaa
cmp
rcll
popa
shr
xchg
pop
adc
and
je
movsl
daa
sub
cmp
sbbl
adc
jno
jmp
dec
sub
test
lods
push
push
xchg
stc
pop
jne
rcrb
in
xor
jne,pn
push
imul
pop
push
ss
inc
lret
xchg
cmp
or
std
fcoms
in
xlat
cs
stc
lret
mov
and
loope
fiaddl
add
cs
push
outsb
mov
adc
push
outsb
leave
rcrl
outsl
inc
jge
jne
test
jl
das
adcb
pusha
clc
mov
cmp
push
ljmp
call
push
sti
cltd
sub
sub
sbb
cs
cmp
adc
cld
jbe
cmp
bswap
xlat
fucomp
adc
in
and
sbb
xchg
inc
stos
cmp
add
jmp
push
xchg
push
push
cld
lea
ret
and
cmp
jl
nop
adc
cli
test
lcall
mov
and
rcl
jb
adcl
test
test
jae
or
sbb
loope
lds
add
rcrb
dec
lock
jns
inc
adc
ss
lods
sub
rcll
xor
push
cmp
adc
aam
fucomip
xor
mov
or
popa
orb
shll
xchg
sbb
xor
jl
dec
add
inc
int
and
js
sqrtps
orb
sbb
pushl
adc
and
loop
adc
lock
cmp
and
cltd
mov
mov
ret
and
or
pop
fidivl
push
inc
jl
cld
aad
scas
lods
inc
lock
jo
stc
out
mov
je
shrb
pop
pop
cld
test
mov
pop
pusha
pop
jnp
es
sub
xchg
clc
cmpsl
rcll
bnd
and
sbb
and
stos
out
push
adc
ds
inc
or
stos
shlb
or
sub
or
adc
sti
inc
scas
hlt
adc
sub
scas
inc
test
imul
jle
int
jnp
loop
int3
adc
dec
enter
cmpsb
call
inc
adc
je
push
rorb
lea
mov
clc
js
sub
push
pop
jne
pop
jmp
outsl
jge
jne
pop
mov
mov
js
popa
cltd
push
jb
xchg
xchg
fiadds
adc
adc
rclb
inc
and
push
cwtl
push
call
rorl
test
adc
adc
clc
hlt
pop
pushf
lods
or
les
jmp
clc
data16
adc
push
xor
or
push
xor
fdivrs
inc
xchg
inc
test
or
aaa
lret
push
pop
inc
mov
test
jb
adc
loopne
or
xchg
sar
cmp
movsl
dec
add
cmp
push
in
ja
jecxz
jns
stc
das
daa
and
jmp
and
inc
rolb
negb
mov
lds
adc
shr
jb
loop
inc
dec
add
imul
pop
mov
adc
jge
andb
adc
in
jbe
cmp
cmp
xchg
cmp
cli
dec
push
cmp
stos
inc
inc
nop
imul
jg
inc
dec
adcb
adc
popa
and
pop
rorb
inc
mov
ss
sbb
cld
jmp
push
jecxz
daa
mov
sub
pop
mull
mov
repnz
adc
movsl
aad
dec
xchg
adc
jo
mov
call
leave
mov
add
cmp
insb
xchg
add
xor
cmp
push
push
lods
stos
xchg
shlb
cmpsl
cmp
das
jmp
or
and
imul
dec
inc
cmpsl
repz
add
or
repnz
inc
and
or
adc
pop
cmp
je
test
bound
lret
add
jecxz
rcr
jg
insl
testl
jmp
fmuls
inc
cmpl
dec
and
rorl
inc
fcomp
jl
pop
or
push
movsb
imul
cmpsb
shll
adc
movsl
out
jnp
and
inc
sbb
push
jns
lods
or
iret
or
call
or
pusha
sbb
lods
mov
inc
dec
arpl
and
mov
adc
loope
xor
adc
popf
xor
jb
pop
data16
movb
pop
or
rorl
out
jecxz
dec
push
lea
fdivs
daa
inc
jl
mov
mov
inc
cmp
mov
push
movsb
adc
jne
or
add
outsl
push
adc
jmp
lock
icebp
ljmp
mov
add
fisubrl
mov
popl
lcall
and
and
shr
mov
cmp
fdivs
cmp
or
iret
sub
out
adc
adc
inc
aam
xchg
inc
pop
mov
push
std
mov
dec
adc
mov
add
fsubrs
or
popa
adc
int
sbb
clc
sbb
sub
push
add
dec
inc
cmpsb
mov
and
shl
inc
xchg
ds
xor
jmp
sub
test
mov
push
test
aam
jp
mov
mov
out
xchg
jle
dec
adc
mov
dec
xor
iret
decb
and
aam
xchg
xor
pusha
shlb
sub
add
out
jns
shl
mov
insl
enter
add
adc
aam
dec
sbb
push
pop
mov
das
mov
jo
outsb
xchg
stos
sbb
mov
sbb
nop
lds
jmp
xchg
mov
insb
inc
cmpsb
nop
imul
bound
cmp
pop
loop
sub
mov
push
push
pop
mov
xchg
sub
nop
js
cmp
es
dec
call
pusha
pop
sub
pop
insb
or
js
cs
pop
inc
adc
pop
sub
cld
sub
loopne
pop
aas
mov
jae
xchg
adc
fwait
or
mov
push
and
push
enter
cmp
aas
insl
mov
repz
mov
push
xchg
push
push
sahf
repnz
lcall
and
fs
and
and
bound
sbb
pop
dec
lcall
add
sub
add
push
lds
test
rorb
mov
pop
inc
jae
xor
cmpsb
or
or
lret
pop
xchg
insl
or
add
cvtdq2ps
jb
clc
jbe
xchg
jmp
shlb
dec
jmp
inc
xchg
leave
adc
add
imul
adc
adcb
adc
push
cmpb
jbe
add
jb
push
adc
shrl
sub
movsl
jmp
xchg
pop
or
add
sub
jb
or
loopne
enter
jo
or
lea
aas
nop
adc
mov
rclb
and
mov
add
scas
adc
mov
adc
bound
es
mov
xchg
nop
and
inc
inc
inc
mov
xor
cmp
or
sub
mov
adc
or
adc
mov
mov
pop
dec
xchg
in
je
lock
dec
xchg
hlt
je
clc
pop
dec
xchg
cld
je
lea
mov
adc
icebp
dec
icebp
jo
or
dec
lcall
or
cli
enter
stos
push
push
mov
xor
cmp
or
jo
std
mov
lock
neg
dec
data16
nop
inc
stc
and
or
or
or
or
sub
push
pop
faddl
and
mov
dec
test
cmp
movsb
out
push
dec
out
jle
mov
pop
nop
dec
sub
lods
jno
and
scas
and
mov
and
pcmpgtb
les
int3
inc
aam
mov
sbb
xchg
and
adc
cs
and
adc
cs
and
daa
cwtl
xchg
and
or
and
mov
mov
adc
mov
inc
xchg
test
es
adc
dec
pop
sub
sbb
aam
addr16
or
inc
jg
xor
mov
imul
lahf
call
ret
cmpsl
cmp
ss
or
lock
stc
dec
lods
fistl
shr
hlt
jmp
addr16
or
jmp
pop
lods
les
and
xor
push
hlt
push
xchg
roll
mov
push
adc
lahf
fwait
sbb
dec
faddl
cld
clc
sbb
and
pushf
mov
sub
sbb
jbe
mov
mov
fnsave
pop
clc
jo
fsubrl
fnstsw
div
inc
je
movsl
jge
cmpsl
ret
jmp
cmpsb
mov
jl
nop
out
addb
pop
mov
jnp
insb
lock
call
jo
std
push
call
test
mov
in
mulb
pop
das
mov
inc
xchg
loopne
push
nop
jns
fnstenv
enter
loopne
inc
fmuls
lock
xchg
xor
loopne
shrb
xor
daa
faddl
mov
lahf
and
add
hlt
fstcw
jge
aaa
es
addb
int3
fistpll
hlt
or
call
lret
xor
pop
rcrl
sub
pop
ret
aaa
cmp
cmp
dec
inc
mov
dec
mov
les
sar
and
mov
xchg
push
loop
pop
loope
xor
cld
jp
dec
sbb
mov
pop
loope
arpl
mov
popfw
sbb
or
inc
inc
pop
pop
xchg
and
adc
jno
dec
stos
imul
or
inc
or
xchg
iret
mov
xchg
test
adc
inc
std
out
xor
pop
clc
sub
adc
cld
scas
mov
pop
xor
daa
hlt
js
mov
xchg
lahf
insl
xor
hlt
or
xchg
inc
sub
xorl
ret
jo
sbb
lock
movsb
or
sbbl
daa
in
fcompl
call
mov
pop
xchg
bound
sub
pop
sbb
mov
xchg
mov
pop
jo
loop
sbb
lret
sub
in
call
xlat
xor
adc
inc
sbb
das
sbb
mov
gs
mov
jmp
and
gs
lret
fcoml
pop
cmp
inc
int3
int3
mov
xchg
out
dec
stos
adc
push
xor
orl
sbbb
fsubrs
adc
int3
cs
adcb
mov
sub
data16
adc
or
inc
and
jp
cwtl
dec
push
and
and
push
inc
adc
sub
sbb
and
in
fstps
mov
enter
pop
inc
imul
lret
scas
inc
jl
push
clc
test
loopne
lock
xchg
sub
mov
cmp
pop
add
or
dec
xor
sbb
adc
lds
cmp
mov
ret
jle
test
or
lods
sti
mulb
mov
push
loopne,pn
enter
enter
cmp
js
ja
aam
jbe
xchg
mov
xchg
xchg
mov
nop
cmpsl
add
mov
adc
mov
xchg
inc
movsl
hlt
loopne
inc
xor
mov
out
lods
xchg
add
lret
lcall
jo
andl
ret
bound
cs
push
or
adc
decl
jo
or
mov
mov
inc
xor
add
jne
push
int3
cld
inc
outsl
call
jmp
fs
cld
xchg
das
jnp
cmpsl
jle
sub
inc
or
imul
outsb
push
imul
pushf
mov
insb
add
or
inc
add
imul
mov
lods
adc
fwait
push
or
jbe
insb
push
lea
das
push
ret
mov
pop
or
push
bound
or
xor
cld
or
in
repnz
clc
test
pop
call
xor
xor
mov
test
dec
je
insb
and
js
scas
les
shlb
int3
inc
loopne
push
stos
les
sub
inc
sbb
inc
sbb
sbb
mov
inc
sbb
push
sbb
cmp
add
pop
or
adc
sbb
and
aaa
push
mov
pop
and
or
jl
jecxz
scas
dec
mov
pop
out
sbb
iret
popf
sub
sub
push
mov
jbe
adc
je
mov
pop
push
out
jb
das
pop
cwtl
xor
cmp
xchg
pop
in
movsl
cwtl
roll
mov
dec
daa
imul
mov
xor
cwtl
mov
sbb
mov
and
ret
sbb
pop
sub
mov
push
jae
push
sub
adc
std
shrl
aas
les
mov
mov
cmp
sub
add
mov
adc
inc
stos
adcb
lcall
repz
mov
lea
jbe
pop
xchg
and
adc
xor
jnp
inc
push
shr
and
call
adc
cmc
add
push
call
inc
lret
jbe
cwtl
inc
test
push
inc
subl
pop
fdivrl
loope
mov
or
cli
xor
testb
mov
rcrb
loopne
clc
mov
jl
mov
mulb
or
sahf
addb
jecxz
es
out
xchg
adcl
call
lret
xchg
push
mov
xor
dec
je
or
jne
xchg
ror
ret
aad
in
or
stos
inc
jno
adc
or
and
add
jo
mov
mov
sbb
mov
call
cmp
xchg
out
xchg
mov
cmp
mov
or
dec
lret
les
add
adc
push
imul
pop
lea
js
fwait
cmp
fisubl
daa
push
inc
cmp
xor
leave
subb
and
push
add
xchg
pop
xchg
loopne
sbb
cmovl
movb
fs
xchg
jmp
enter
popa
adc
sti
and
movl
xor
nop
roll
and
inc
fdivrs
mov
xchg
mov
jge
xor
ret
je
ficompl
int3
pop
or
mov
dec
pop
and
sub
shlb
jmp
frstor
push
sbb
adc
enter
subb
or
push
adc
cmp
inc
jo
and
push
popa
jae
adc
sub
xor
lret
pop
xchg
xor
pop
or
jo
dec
inc
and
mov
imul
daa
jae
or
icebp
mov
push
loopne
add
mov
or
dec
fistl
push
sbb
orb
test
and
xchg
mov
add
sub
sahf
ds
loopne
pushf
sub
cmp
and
jmp
push
movl
icebp
lods
insl
jns
push
call
cld
scas
decl
mov
int3
adc
fs
lret
jne
loope
scas
push
or
and
cld
fs
cmp
sbb
pop
aaa
int3
imul
les
les
in
push
repnz
clc
push
push
outsl
pop
mov
scas
push
les
cmp
mov
lods
inc
pop
or
xchg
mov
dec
sbb
or
pop
or
add
xlat
mov
bound
and
cmp
cmp
repz
push
dec
jecxz
push
hlt
and
adc
imul
mov
stos
fstpt
dec
jns
and
mov
push
push
outsl
nop
or
jmp
mov
xlat
cmp
push
fiadds
shr
xchg
mov
sub
and
cli
xchg
call
inc
or
in
sub
iret
pop
sub
fisubrl
sbb
mov
sbb
mov
or
adc
jmp
cld
xchg
xor
or
shr
dec
fisttpl
leave
jne
or
repz
sub
je
iret
xor
shll
arpl
push
ja
ret
pop
pop
sbb
dec
lcall
push
sub
inc
push
adc
leave
pop
cwtl
or
sbb
push
test
and
jl
mov
lret
insb
fs
and
jbe
sub
adc
hlt
push
mov
cmpl
mov
mov
test
jge
inc
ss
push
je
loopne
sub
adc
jno
adc
adc
adc
dec
inc
cmp
jmp
fnstcw
daa
fs
sbb
inc
adc
adc
mov
out
xor
data16
mov
mov
xor
and
das
mov
popa
and
or
xor
inc
mov
add
loopne
mov
jmp
les
pop
shlb
pop
mov
dec
daa
mov
je
adc
mov
sbb
xor
fidivrs
mov
gs
push
inc
sbb
jmp
inc
mov
and
in
adc
and
cmpsb
sbb
lock
andl
cmpb
cmpsl
mov
aam
jmp
adc
popf
dec
aad
imull
addb
pop
push
and
push
insb
or
lret
dec
daa
xchg
mov
shll
or
and
stos
enter
or
das
jbe
sbb
adc
and
jae
in
dec
cmp
shlb
push
jg
pop
cltd
cmpsl
push
adc
aad
cmp
and
in
insl
add
push
das
adc
dec
inc
adc
mov
rolb
add
mov
inc
add
js
movsb
outsb
push
adc
push
jecxz
test
enter
push
fdivrp
push
mov
gs
inc
sub
rcl
pop
cmp
ret
pop
in
mov
mov
or
lds
pop
cltd
sbb
and
js
mov
jge
and
dec
pop
mov
jg
sahf
add
xor
add
or
dec
or
jmp
into
mov
shrl
adc
mov
jbe
lret
imul
or
mov
test
push
cmp
pcmpeqw
inc
dec
fistpl
cmp
pop
inc
cmovle
jb
adc
mov
call
divps
mov
stos
loopne
ss
sub
cmpsl
js
and
push
into
dec
adc
fistps
add
pop
lea
mov
and
cmp
jne
out
sbb
jbe
push
adc
and
loop
cmp
push
ret
and
bound
fiadds
or
inc
jl
add
mov
push
xor
ljmp
pop
mov
int3
push
adc
push
in
and
jnp
and
jmp
ret
jbe
dec
ds
pop
push
loop
mov
repz
les
inc
mov
int3
add
data16
push
sub
dec
mov
mov
mul
stc
jbe
jo
mov
add
jmp
mov
lahf
arpl
push
rorb
mov
pop
movsl
cmp
into
leave
add
pop
add
repnz
and
pop
or
fprem1
pop
sbb
rcr
or
stc
in
fwait
lock
imull
mov
push
pushf
mov
xchg
jmp
mov
mov
jle
mov
repnz
mov
jo
ds
jp
xor
dec
clc
out
sub
pop
rorb
nop
cld
sub
xor
or
rcll
push
mov
push
cmpb
mov
dec
jp
stc
xor
jae
sub
mov
mov
mov
fmull
data16
pop
mov
nop
daa
push
adc
fdivl
test
and
ljmp
mov
mov
jg
loop
mov
sbb
xchg
lea
mov
test
lods
dec
adc
jnp
sub
in
scas
jae
lock
xchg
movsb
pop
or
aas
ljmp
xor
add
pop
mov
fiadds
clc
je
inc
or
mov
aad
scas
fxtract
imul
mov
pop
lods
pop
add
popf
jmp
push
ret
aad
and
mov
jl
inc
mov
lds
aaa
cltd
xchg
pop
add
push
adc
pop
test
pop
sbb
loopne
xchg
movsb
pop
or
call
das
movsb
lahf
mov
dec
or
mov
sub
pop
mov
adc
adc
or
xor
aas
mov
sbb
sub
and
iret
or
sbb
lidtl
push
imull
adc
mov
and
flds
pop
add
mov
cli
cmc
mov
dec
rorl
mov
pusha
rolb
ret
shlb
jae
and
lods
add
mov
lret
sub
dec
repnz
pushf
pushf
add
adc
push
aad
std
repz
mov
outsb
mov
dec
in
push
lds
cwtl
adc
adc
int
or
xlat
gs
or
cli
and
or
adc
std
ss
lock
cmp
inc
mov
sub
roll
adc
or
push
adc
iret
cmp
andl
add
shlb
cs
jl
frstor
xchg
sti
adc
or
mov
push
xchg
pop
sub
lahf
mov
sbb
shl
mov
xchg
adc
mov
fcoms
aam
add
inc
sar
addb
imul
and
add
pusha
dec
in
or
pushl
jle
or
movl
adc
call
jp
add
push
addr16
dec
adc
mov
and
sub
ja
in
inc
adc
clc
add
aaa
push
dec
test
and
fsubl
xchg
loopne
push
sub
sub
or
test
addr16
fcom
inc
cmp
adc
pushf
mov
addr16
or
aas
lods
push
aad
adc
sub
orb
push
or
and
xchg
and
lea
mov
pusha
pop
mov
arpl
cli
test
sbb
adc
das
or
jne
push
inc
stos
shrb
sbb
daa
xchg
xor
push
and
jns
shll
mov
xor
mov
arpl
mov
pop
pop
mov
call
stc
mov
fisttps
lock
subb
test
jle
decl
jns
jg
adc
repnz
inc
xor
push
pop
test
loop
and
addl
out
bound
sbb
add
mov
xor
push
jl
mov
push
jno
push
dec
clc
fildll
popf
les
push
aam
fs
mov
or
mov
adc
mov
xlat
mov
prefetch
notb
call
dec
das
add
arpl
rolb
nop
out
jne
inc
pop
ret
cmpsb
scas
inc
dec
sub
or
sub
fisubs
call
inc
ffreep
push
push
or
dec
pop
cmp
jnp
scas
and
je
repnz
push
mov
aas
lret
jbe
adc
lea
push
mov
iret
mov
les
push
mov
call
jmp
push
push
inc
xor
lret
sbb
jnp
mov
xor
sub
pop
jl
push
gs
lds
inc
outsb
test
xorl
fisttpl
xchg
mov
shlb
push
mov
iret
dec
pop
or
mov
push
mov
push
pop
push
jl
jge
call
and
icebp
inc
push
mov
outsb
repnz
shl
fstps
test
daa
mov
dec
xor
adc
cmp
push
loop
adc
pop
addr16
cmp
enter
mov
and
mov
or
in
adc
push
add
std
insb
orl
das
jmp
xor
adc
frstor
movsbl
push
xchg
jg
iret
inc
sub
adc
adc
call
push
mov
sub
push
out
dec
adc
add
repz
adc
sub
xchg
push
and
mov
sub
imul
in
push
sub
fs
xchg
ljmp
cmp
pop
mov
inc
in
fs
nop
mov
and
inc
pusha
jl
popf
rcll
fisubrs
sbb
outsl
fmuls
inc
or
inc
xor
out
je
sbb
mov
push
xor
test
aaa
cmp
or
mov
inc
add
dec
push
sub
mov
and
adc
mov
int3
enter
mov
arpl
push
mov
hlt
out
or
leave
pusha
push
int3
cwtl
jl
out
test
inc
mov
add
push
call
cmpsl
scas
fimuls
les
mov
lock
stos
or
add
jae
sahf
pushf
cmc
dec
shll
stos
jns
or
add
or
pop
fmuls
sub
je
call
sub
jo
stc
sub
sub
loop
mov
jns
and
jns
pop
sbb
push
daa
sbb
mov
dec
lcall
pop
movsl
push
or
pop
repz
gs
out
sub
or
add
xchg
xchg
ja
rolb
leave
add
test
movb
cmpsl
sub
mov
cli
cmp
pop
lods
mov
in
inc
xor
cmp
mov
inc
push
std
scas
jmp
add
repnz
pop
fwait
int
or
negl
mov
and
mov
pop
adc
jg
mov
mov
adc
cltd
call
lods
sub
popa
pop
xor
and
push
sbb
nop
in
adc
ror
mov
sub
nop
adc
inc
loop
aad
and
sub
fucom
pop
rclb
frstor
jp
push
mov
and
sbb
ljmp
dec
or
leave
outsb
add
push
dec
push
sub
xor
inc
hlt
jne
and
popa
push
clc
and
pop
stos
dec
mov
adc
and
testl
adc
arpl
jo
xchg
cmp
dec
test
in
sarb
fs
xchg
or
jmp
out
cld
stos
push
inc
mov
inc
lahf
out
pop
mov
mov
int
inc
js
fisubs
or
mov
das
js
or
push
sbb
sahf
int3
push
xchg
les
inc
aas
jne
push
xchg
clc
inc
pop
or
xlat
lods
gs
cmp
xor
imul
adc
pop
out
sub
std
inc
push
jne
sub
insb
sbb
lds
push
adc
nop
shr
push
cltd
cli
push
and
add
mov
dec
push
or
inc
lret
test
dec
push
mov
shrb
std
pop
mov
sub
scas
jp
shlb
jmp
mov
sbb
mov
jns
mov
es
iret
jo
inc
dec
inc
xor
call
daa
adc
cmp
or
sub
aad
jb
mov
adc
pop
test
arpl
push
cmp
int3
pop
xchg
xor
movsb
mov
cmpsb
push
cmpsb
ds
xchg
sbb
sbb
loope
push
cmp
mov
mov
rorb
push
adc
mov
jns
mov
jne
loopne
cld
xchg
adc
or
movsl
cmc
ret
enter
cltd
jge
ret
mov
mov
inc
movsb
cmp
arpl
rcrl
dec
jmp
inc
xor
pop
cmpsl
ds
mov
pop
or
daa
testl
subb
outsl
lea
mov
jae
jnp
lahf
enter
hlt
jbe
jl
mov
push
push
imul
push
sbb
pop
pop
test
shrb
js
cmp
push
call
mov
push
and
mov
push
call
add
lods
or
jns
push
jnp
fnstenv
jmp
dec
mov
pop
push
adc
andb
scas
pop
mov
and
sub
or
mov
mov
and
xlat
mov
repz
pop
loopne
loopne
enter
or
int3
rolb
push
push
insl
clc
das
jle
pop
in
lret
mov
mov
add
sbb
stos
ja
cltd
in
bound
cmp
push
pushf
mov
adc
pop
hlt
dec
jle,pn
or
inc
fsubr
mov
stos
sub
xor
push
test
mov
orl
jle
adc
ds
ds
and
add
loop
add
jb
add
iret
test
loop
and
sub
sbb
out
lds
xor
sub
xchg
jo
popf
xor
test
loopne
mov
filds
jmp
push
add
stos
jge
lret
sbb
xchg
pushw
inc
jns
cmp
ja
xor
jecxz
shll
or
repz
loopne
adc
sbb
sub
push
push
adc
xchg
sbb
pop
cld
push
adc
pop
add
add
adc
push
jmp
inc
roll
mov
inc
mov
dec
mov
je
aam
std
or
sub
jns
fimuls
adcl
add
fcoms
je
pop
repnz
xor
dec
push
imul
shr
inc
call
cmp
iret
cmp
lahf
lret
stc
push
and
dec
fisubs
sbb
imul
push
push
xor
jle
adc
mov
dec
orl
jmp
adc
push
repnz
xor
leave
fsts
push
mov
and
add
mov
rorb
lods
das
jmp
adc
jb
lods
cltd
in
jae
fists
cltd
dec
inc
or
fsubr
push
mov
xchg
dec
nop
fsubl
je
fldcw
cmp
and
mov
cwtl
jmp
mov
imull
data16
adc
pop
cmp
dec
cmpsb
cmpsb
sti
inc
pop
jne
aaa
sahf
movsl
stos
into
jecxz
dec
test
mov
pushf
and
push
icebp
mov
fcoml
pop
mov
and
das
leave
pop
pop
xchg
jbe
and
jp,pt
and
jge
sahf
jne
or
fisttps
jmp
call
push
jns
mov
repz
into
inc
add
loopne
sbb
jbe
push
or
push
enter
test
adcl
ret
es
jg
ror
imul
nop
int
push
ret
shr
adc
push
scas
or
call
or
insl
mov
mov
dec
dec
in
fs
loopne
int3
fmull
cmp
mov
mov
negl
mov
faddl
pop
jmp
or
pop
push
jecxz
xor
sub
mov
cltd
cmp
es
dec
push
insb
call
dec
add
adc
mov
and
rcrb
sub
cmpb
xchg
lds
pop
bound
notl
loop
cmc
jno
loope
jmp
scas
and
adc
lahf
dec
and
lret
hlt
jae
gs
stos
mov
movsl
xchg
mov
call
scas
outsl
leave
insl
leave
pusha
cmc
jb
mov
add
adc
iret
mov
jbe
ds
adc
cmc
mov
dec
mov
xchg
jne
es
gs
hlt
insl
dec
xchg
loopne
fmuls
jno
jmp
xor
loopne
lret
in
sbb
pop
faddl
adc
adc
jmp
sarb
outsl
push
push
push
sub
or
jmp
fistl
dec
cmp
es
imul
fistpll
and
test
ljmp
loope
cmpsl
repnz
sub
clc
pop
mov
sub
std
js
sbb
and
pop
cmp
or
push
mov
sub
mov
lea
out
xchg
stc
test
mov
adc
lcall
mov
hlt
loope
clc
clc
inc
adc
mov
ja
dec
xlat
sub
das
ror
in
outsl
addb
inc
jg
pop
dec
cmp
lahf
push
or
jne
xchg
xchg
adc
pop
sub
add
mov
or
push
jl
mov
cmp
inc
sbb
fwait
push
add
mov
cmp
sbb
int3
adc
popf
mov
cmp
push
xchg
fcmovne
dec
jbe
mov
sub
test
adc
push
jo
clc
mov
xlat
test
dec
xchg
mov
movsb
test
lcall
cs
rclb
dec
adc
enter
pop
sub
and
sub
out
pop
mov
jae
scas
cmp
stos
xorl
mov
rorl
xchg
or
jl
sub
cltd
and
shll
andps
daa
shr
xchg
pusha
lcall
dec
loopne
xor
push
mov
fincstp
cmp
inc
or
repnz
or
cmp
mov
adc
adc
movzwl
or
add
xor
adc
mov
or
fidivrl
sahf
dec
xchg
sarb
popf
pop
xor
add
rclb
adc
or
cld
mov
pop
test
adc
clc
ljmp
push
cmpsb
or
cmp
rolb
add
inc
or
push
rcrb
jae
mov
ljmp
mov
jl
movsb
lods
clc
mov
mov
push
stos
idivb
adc
add
cltd
outsl
daa
pushf
pop
mov
adc
aas
or
sbb
or
inc
adc
and
imul
shlb
pusha
push
or
rclb
mov
xchg
xchg
jg
jg
cmpsb
mov
push
enter
pop
mov
adc
xchg
sub
add
mov
mov
mov
xchg
sub
push
inc
adc
iret
movsb
in
cmp
stc
add
gs
push
pushf
and
popa
mov
cmp
or
mov
mov
dec
cmp
and
out
out
imul
fldenv
lret
adc
ss
xchg
fwait
sbbb
aam
out
aas
nop
aam
enter
aam
inc
aam
enter
sub
sbb
push
mov
outsb
shlb
sti
jmp
cli
hlt
fdivr
imul
and
sub
adc
mov
jmp
flds
sbb
inc
dec
and
ss
or
push
out
push
enter
pop
dec
mov
adc
aam
cmp
lods
sar
mov
dec
enter
mov
mov
push
and
daa
in
cmpb
and
ds
adc
addr16
stos
xor
mov
and
pushf
lods
mov
shr
adc
cmc
xchg
mov
add
daa
daa
add
cmp
mov
fsubs
mov
inc
mov
shll
push
ljmp
int3
or
dec
jecxz
sub
adc
xor
mov
or
adc
xor
adc
and
sub
sbb
push
mov
and
mov
adc
mov
ja
out
fistps
mov
test
fs
je
mull
imul
dec
mov
pop
add
adc
test
adc
call
or
or
cmp
call
cltd
inc
cwtl
sbb
sbb
mov
loopne
in
dec
push
sub
inc
pop
dec
lods
fstps
mov
jae
or
xor
test
jmp
xor
les
test
mov
cmpb
aam
dec
and
pop
repnz
or
imul
test
sub
lret
hlt
mov
mov
and
test
xchg
cmp
cmp
push
xchg
ret
xchg
out
shrb
shrl
mov
xchg
sub
push
push
mov
loop
sub
insb
push
push
adc
pop
filds
stc
add
xor
push
jns
mov
add
push
leave
lock
stc
leave
mov
stc
dec
add
call
mov
jno
mov
into
add
gs
cli
test
mov
enter
xor
mov
pop
adc
add
ja
jns
dec
pushf
or
push
push
inc
orl
gs
xchg
les
jl
cs
jmp
inc
imul
lea
xchg
add
mov
stos
push
and
mov
xchg
sbb
and
jns
shl
pop
fcmovnbe
repnz
out
imul
fldcw
cli
fdiv
shrb
jl
in
int3
aas
jle
int3
addr16
cmp
sti
lea
add
push
sub
movsb
xchg
js
out
iret
imull
stos
aam
dec
shll
mov
mov
mov
adc
inc
jne
adc
dec
pop
loopne
jmp
xchg
test
lds
ret
mov
lea
fbld
stc
or
sub
add
fadds
add
inc
out
sub
lods
stos
cmpsl
cld
mov
call
or
mov
into
rcr
mov
stos
mov
jl
adc
cmp
inc
and
push
pop
mov
hlt
mov
cli
stos
mov
mov
push
sbb
and
adc
cmp
rorb
adc
pop
int
jg
sub
rclb
add
pop
xchg
mov
cmp
or
adc
outsl
sub
inc
xchg
pop
and
ficompl
sub
dec
fsubr
push
popf
sarl
cld
push
cmp
jne
stc
iret
adc
sbbb
fnstenv
ds
xlat
or
rclb
shl
outsb
add
jne
pusha
dec
xchg
cmp
jne
lock
in
adc
leave
adc
in
sub
sti
sub
enter
mov
cmp
mov
xchg
pusha
cld
push
push
jmp
inc
adc
mov
push
adcb
dec
call
mov
dec
ficomps
repz
cmc
aam
xor
adc
add
jecxz
in
nop
sub
aam
dec
je
pop
mov
sub
clc
and
mov
mov
jne
dec
jns
xchg
jle
aas
and
add
lea
or
clc
xchg
shll
xchg
add
adc
adc
jnp
movsb
movlps
adc
out
pop
xor
xor
xorl
fwait
fsubrl
add
pop
cmp
xor
pop
xor
hlt
cmp
cmpb
pop
bound
push
cmp
push
jmp
lods
push
add
fsub
dec
xor
push
aam
push
cltd
outsb
or
sbb
addr16
inc
push
push
in
in
push
in
push
test
xchg
mov
inc
test
es
inc
sub
sahf
pop
mov
loope
cld
ret
add
std
lods
push
push
mov
gs
out
inc
shlb
add
test
in
std
in
rclb
into
xor
or
dec
test
das
add
xor
mov
add
inc
aam
push
adc
in
inc
in
or
jle
xor
add
add
cmp
push
in
daa
dec
aam
push
cmp
lods
js
sahf
arpl
fs
out
push
inc
rcr
and
lret
repnz
push
sub
inc
dec
int
nop
loopne
fidivrl
or
mov
sbb
push
scas
aaa
lods
nop
aam
mov
inc
fsubs
out
push
dec
inc
inc
add
in
mov
cmp
add
rdtsc
testb
leave
jmp
xlat
pop
or
dec
mov
imul
or
sahf
outsb
and
inc
pop
cmp
dec
push
sub
out
dec
int
aas
ret
mov
cmp
test
pop
repnz
xor
leave
lods
loopne
xchg
shl
clc
pop
xchg
sub
leave
icebp
add
data16
mov
fs
in
jnp
testl
cmc
mov
sbb
out
dec
subb
cld
xor
cld
inc
fmuls
shrl
movsl
iret
stc
and
or
jle
jge
dec
clc
inc
pop
mov
dec
and
enter
and
ss
sbb
js
pop
and
repz
sbb
adc
popf
loope
fsubl
mov
pop
decb
fiaddl
mov
fmull
pop
sub
aam
fcomp
cmc
or
mov
test
mov
push
lods
popf
mov
aam
cld
lahf
popa
pop
inc
jne
test
pop
mov
jnp
jmp
jg
sub
push
pop
xor
cmp
pop
ja
mov
mov
ljmp
jl
ret
push
push
xchg
pop
push
sub
andb
add
les
dec
and
dec
push
decl
jg
lea
cmp
mov
cmp
pop
fs
mov
dec
or
pop
xchg
rolb
jmp
rcll
sub
call
push
adc
adc
or
cmp
add
es
xor
inc
push
mov
xchg
nop
mov
and
adc
push
add
push
and
ja
call
sub
mov
add
push
inc
fdivrs
lods
add
sbb
push
aam
push
push
ds
and
add
lea
cld
sub
ret
mov
xchg
ficoml
ret
psllw
inc
adc
rolb
mov
cmp
mov
xchg
dec
mov
push
jge
stos
pop
loop
adc
cmpl
icebp
inc
add
adc
jmp
mov
lret
aas
stos
insb
dec
cmp
pop
das
mov
sub
lods
notb
jg
lock
and
adc
sarb
cmp
or
add
mov
mov
xor
pop
and
in
and
add
jmp
pop
fs
aam
notl
out
add
sub
incl
xchg
inc
add
add
cwtl
cmp
sub
in
rclb
lea
and
sub
sub
and
sub
and
cmc
mov
add
call
testb
lock
inc
pushf
cmp
jg
xchg
add
fmull
or
je
xchg
pop
sbb
dec
fimuls
pop
loope
sub
rorl
test
cmc
test
add
inc
and
cld
lret
sub
sub
and
rcrb
repz
sub
or
mov
je
xchg
xchg
sub
cs
xor
or
ret
mov
add
jmp
mov
xor
adc
sbb
inc
dec
adc
adc
repnz
sub
ss
icebp
adc
add
or
popa
or
std
jg
inc
sub
cmp
adc
loop
push
je
mov
push
adc
mov
hlt
lods
add
add
pop
movsl
mov
mov
cmpl
jne
inc
mov
inc
rclb
inc
les
or
addr16
xor
cld
jo
sbb
orl
loopne
mov
mov
stc
xor
scas
popl
or
or
lahf
pop
addl
and
mov
cs
inc
test
push
pusha
and
adc
xor
pushf
and
jne
cli
adc
repnz
push
add
inc
cld
sahf
arpl
ljmp
sbb
jl
cmpsb
adc
or
subl
dec
adc
jb
mov
push
cmp
xor
push
test
cwtl
outsl
hlt
sahf
jns
arpl
adc
push
lods
mov
jle
sub
push
fadds
adc
lret
mov
push
out
and
test
mov
xor
adcb
div
inc
add
or
orb
idiv
loop
jmp
das
outsl
fs
xor
in
inc
jecxz
adc
lahf
adc
and
mov
sbb
cli
xor
mov
sub
push
movsl
pop
mov
or
or
mov
icebp
popf
xor
stc
imul
xchg
test
inc
mov
scas
mov
scas
push
adc
insb
hlt
add
callw
lea
and
adc
mov
sub
call
adc
cmp
sub
test
shl
or
gs
lret
pop
loopne
dec
pop
dec
mov
pop
andb
xchg
das
sub
shlb
mov
mov
xchg
cs
popf
xchg
inc
jns
das
mov
xchg
sti
add
mov
je
xchg
cmp
push
jne
dec
out
dec
mov
and
mov
jno
dec
mov
les
or
adc
xchg
fstp
lcall
inc
adc
cs
cmp
adc
mov
lods
jg
jle
sbb
pop
fcoml
jbe
popa
mov
sub
lds
loope
popa
fisttps
les
and
add
shlb
xor
xor
xor
xor
jp
inc
jnp
daa
pop
subl
ljmp
pop
lea
jmp
jle
adc
xchg
ficoms
mov
jmp
pop
push
popf
cmp
int3
push
pop
mov
and
adc
std
sub
icebp
ret
inc
lods
mov
lret
or
push
adc
scas
and
std
sbb
subb
mov
ss
and
inc
inc
xchg
sub
and
push
sub
imul
jg
or
mov
jne
sub
adc
pop
jg
xlat
add
lock
dec
mov
pop
xchg
aam
dec
je
adc
test
push
mov
sub
jns
mov
cmp
pop
loopne
and
jecxz
insl
test
xor
pop
nop
ret
mov
adc
xor
dec
adc
nop
pusha
pop
andb
stc
lcall
xchg
xor
inc
mov
fcmovbe
dec
cld
mov
cmp
sti
xchg
aas
test
rorl
mov
add
fsubl
cmpsb
xchg
mov
xchg
imul
or
repnz
dec
xor
push
ljmp
inc
in
lret
lods
add
jp
xchg
insl
pop
push
mov
add
mov
or
xor
scas
or
int
mov
movb
adc
fistl
jmp
cmp
mov
cmp
dec
fucom
pushl
jge
sbb
ret
and
mov
inc
mov
clc
mov
notl
lods
in
fndisi(8087
adc
sti
lds
push
aam
push
leave
and
stos
jne
inc
ljmp
inc
push
push
sbb
adc
add
or
dec
jge
xor
pop
gs
jp
ret
pop
testb
stc
js
mov
fcmovnu
cwtl
cmp
mov
sub
mov
movsl
subb
pop
cli
push
and
or
jno
add
xchg
sub
arpl
loope
inc
add
es
jae
push
aaa
fistl
cltd
enter
add
les
repnz
test
sahf
out
mov
je
loope
rcrb
xor
sub
or
push
add
cmc
bnd
loopne
in
adc
pushl
cmpsl
lock
pop
hlt
ljmp
mov
pop
scas
icebp
sbb
sub
sub
cld
sub
imul
or
into
jge
jg
push
jp
inc
js
mov
mov
sbb
popf
daa
xchg
ljmp
mov
mov
inc
inc
or
and
sub
fucom
and
bound
or
fildl
ret
adc
decl
insl
cmpl
cmp
mov
sbb
add
jnp
std
pop
xchg
mov
packssdw
std
mov
mov
jmp
mov
xor
scas
jg
mov
jmp
cld
mov
jmp
inc
push
ljmp
or
nop
and
cmp
cvtpi2ps
std
mov
lock
push
negl
pop
stos
xchg
sub
loop
dec
out
inc
xchg
int3
or
cmp
or
ret
cld
lret
jbe
inc
aam
rorl
test
push
cmp
pop
mov
popf
and
lds
mov
pop
popa
lds
xchg
mov
push
sub
sub
add
sahf
gs
rclb
mov
testb
or
out
fs
js
pop
add
mov
fcoms
dec
lods
jae
mov
dec
pusha
jg
lea
in
jl
pushl
repnz
and
in
loop
adc
inc
or
ja
xchg
add
test
pop
sub
mov
mov
jb
ss
daa
cmc
ljmp
dec
push
jl
std
pop
dec
add
mov
nop
cltd
cmp
lock
xor
testb
add
stos
dec
xchg
xchg
nop
xor
sti
push
jmp
subb
cmp
jl
xor
ret
sbb
scas
push
cmp
lcall
cmp
lcall
rolb
inc
xchg
or
cmp
jge
sbb
inc
popf
and
dec
insl
mov
pop
and
cmp
inc
stc
adc
das
lea
cmp
or
sub
pop
decb
aad
jbe
add
mov
adc
or
and
jne
inc
xchg
shll
movsl
roll
loopne
cmp
ljmp
and
shrb
add
or
in
push
add
adc
jecxz
or
shr
std
lods
leave
push
lea
push
mov
stos
in
or
add
adc
dec
jb
xor
nop
adc
jecxz
jl
shl
inc
scas
and
xchg
lods
in
outsl
lods
fprem1
xchg
and
push
jnp
icebp
or
push
pop
and
scas
bound
fwait
pop
mov
ret
jmp
sub
mov
test
sbb
out
push
mov
sahf
ss
roll
ljmp
adc
or
shl
mov
push
push
jge
mov
adc
add
pushf
test
push
mov
sub
push
mov
push
add
sbb
lea
cmp
jmp
fstps
xchg
test
cmp
and
neg
cmp
jo
bound
cwtl
adcb
and
mov
adc
popl
sub
movb
mov
jmp
mov
pop
mov
andps
mov
push
loopne
push
mov
or
lcall
mov
cmp
pop
call
pop
lea
push
ja
in
fs
adc
inc
lock
sub
mov
and
pop
mov
sbb
dec
popf
add
int
popf
lds
xchg
clc
out
lret
xchg
addr16
mov
cmp
movsb
shl
movsb
cwtl
sub
inc
push
dec
dec
test
mov
and
push
add
jmp
xchg
dec
xor
xor
je
pop
fs
adcl
cmp
fcoml
lods
dec
test
mov
push
inc
or
cmp
mov
or
jmp
stc
in
lret
call
mulb
dec
daa
sub
mul
cmc
adc
inc
imulb
jmp
fstl
and
out
lret
dec
jmp
mov
mov
and
jmp
or
mov
adc
call
mov
leave
call
mov
and
mov
ds
and
mov
addb
push
aas
and
and
or
jae
jne
sub
insb
mov
cmp
adc
jne
mov
insl
inc
and
sbb
sbb
sub
fs
outsb
lahf
jns
pushl
pop
xor
pop
push
pop
jne
mov
inc
cmp
xchg
in
mov
inc
and
push
stos
dec
jne
imul
mov
jp
test
out
push
xchg
or
push
xchg
arpl
stos
inc
xor
xchg
cli
push
adc
pusha
adc
shrl
pop
cmpl
daa
sub
mov
dec
sub
or
inc
dec
adc
and
push
jmp
repz
testb
std
and
sbb
or
mov
popl
cli
daa
or
bound
jns
daa
mov
and
add
test
stc
das
adc
cmp
jns
cmpsb
xchg
mov
je
lds
incl
inc
nop
push
cli
and
loopne
orb
loop
dec
xchg
jne
cmp
inc
inc
or
push
cmpsl
imul
mov
mov
jns
leave
pop
int3
inc
adc
dec
popf
movsl
popf
aam
add
into
mov
mov
sub
mov
jmp
ret
andl
pop
ja
popa
inc
pushf
dec
or
cmp
std
inc
dec
cwtl
notb
call
add
in
mov
movsb
dec
ficoms
cli
test
mov
push
lahf
add
inc
mov
jne
cmp
mov
jae
leave
and
push
inc
adc
mov
test
mov
pop
add
sti
push
loop
sbb
xchg
int
cmp
adc
xorb
jo
pushf
or
sbb
aaa
pop
mov
add
addr16
mov
jo
inc
add
mov
jmp
jb
or
jmp
mov
loopne
sbb
lods
mov
mov
movsb
inc
add
and
lahf
jbe
nop
or
sbb
cwtl
xor
dec
jmp
dec
jne
pushf
fucom
paddsb
in
push
dec
in
mov
adc
add
add
loop
dec
adc
dec
popf
xchg
je
sbb
adc
test
lods
push
test
pop
mov
sbb
dec
pop
decl
sub
xor
inc
push
adc
test
sub
pushf
outsb
arpl
pop
popf
sub
mov
movsl
dec
dec
sub
pop
adcb
dec
xchg
or
in
add
iret
pop
dec
or
or
repnz
mov
push
scas
dec
push
add
cld
fsubl
addr16
lods
imul
jno
pop
sub
or
push
push
sbb
cmpb
je
or
ja
adc
or
or
gs
adc
sbb
and
adc
add
push
inc
lret
adc
and
mov
and
mov
les
fstps
mov
das
imul
or
add
inc
jl
ja
rcrl
lock
movaps
mov
or
add
out
dec
lret
in
push
push
mov
inc
mov
in
popa
mov
cmp
into
fstpl
jmp
and
add
les
fsubrl
sbb
ss
and
inc
sub
stos
and
mov
mov
and
sbb
leave
and
jmp
popf
and
rclb
cmp
adc
inc
inc
mov
inc
inc
push
mov
pop
in
movsb
shlb
call
fldenv
outsb
jbe
lods
cmp
push
sub
pop
adc
sbb
or
popl
cli
sbb
aad
ja
cwtl
adc
sahf
cmpsl
mov
dec
adc
sub
xchg
sbb
or
dec
jne
mov
cltd
aaa
subl
or
add
add
addl
add
push
xchg
pop
push
das
or
movsl
imulb
or
jge
adc
imul
je
sarb
sti
das
gs
sti
aaa
popa
enter
out
nop
call
faddl
lret
and
jmp
dec
mov
dec
jno
push
clc
fbld
adc
cmp
inc
pop
sub
sub
cmpsb
cmp
adc
faddl
xchg
nop
xor
int
pop
dec
imul
or
adc
or
sbb
mov
mov
sbb
clc
push
xchg
push
xchg
xor
lods
mov
and
or
pop
mov
add
cmp
or
mov
or
nop
dec
lods
into
mov
sti
dec
arpl
dec
stos
jae
pop
mov
mov
pop
xor
lret
add
adc
pop
add
sbb
out
scas
pmovmskb
out
cmp
and
shlb
clc
ffreep
mov
pusha
and
adc
xchg
jne
shl
cmpb
pushf
jg
mov
inc
xchg
cmc
xor
je
pop
adc
jbe
cmpb
sbb
dec
loope
mov
mov
adc
xlat
sub
inc
imul
sbb
movsb
mov
pop
sbb
and
and
das
and
push
xchg
ljmp
ljmp
fsubs
pushf
xchg
and
xor
jne
sbb
pusha
fimuls
fldl
inc
testl
pop
mov
je
adc
mov
in
or
flds
cmp
cmp
test
sar
jae
xchg
in
ret
out
sub
mov
pop
lret
dec
jne
enterw
xor
sbb
cmp
jl
inc
sub
int3
adc
mov
jg
mov
insb
pop
jmp
mov
xchg
or
leave
jno
xchg
shrl
cli
xchg
pop
adc
pop
ljmp
ja
lea
or
lcall
scas
fiaddl
mov
cmpb
or
data16
push
out
jns
aas
push
mov
adc
or
call
fsubl
movsl
or
das
xchg
pop
adc
inc
popf
addr16
pop
jmp
adc
lcall
ljmp
test
ret
push
inc
and
sbb
jmp
int3
js
xchg
xchg
or
dec
push
mov
cmp
adc
into
pop
lock
add
add
cmp
mov
aam
loop
pushw
adc
sbb
and
jne
jmp
mov
std
mov
mov
stos
loop
push
cmpl
repnz
neg
out
stos
or
sbb
popa
imul
and
add
and
jmp
and
xchg
xor
push
inc
cli
daa
dec
lea
inc
enter
or
out
jl
test
addb
sbb
and
dec
aas
ret
inc
push
cs
ja
jl
cmp
cwtl
sbb
inc
jp
divl
outsb
pop
dec
out
cltd
sub
cltd
jl
sub
push
js
subl
pushf
adc
adc
enter
int
ds
test
mov
inc
jmp
es
mov
cmp
es
sbb
xor
das
xchg
das
cmp
addl
xor
push
or
dec
jg
addr16
test
ficoml
adc
inc
rclb
mov
or
test
cmp
insl
inc
dec
pop
add
xchg
push
xchg
xor
movsl
cltd
data16
ret
add
cli
vmovups
pop
jns
movsb
xor
pop
mov
adc
xor
jmp
push
leave
loopne
mov
xchg
and
inc
xor
sahf
fsubl
shr
jo
fdivr
bound
pop
cmp
jae
xchg
xor
jmp
adc
loope
push
mov
push
cmp
pop
xor
test
adc
push
cmp
cmc
or
or
lea
je
out
xor
mov
cld
lcall
sbb
out
dec
movsb
jno
and
lahf
sub
push
xchg
outsl
adc
push
inc
or
and
icebp
jmp
pop
push
pop
neg
fs
lods
int3
lds
mov
push
ss
mov
xchg
or
leave
xchg
push
sub
sub
loop
mov
loop
test
sbb
mov
in
nop
or
mov
or
arpl
adc
imul
and
cs
call
arpl
adc
jmp
adc
in
addr16
push
add
jl
cmpsl
mov
mov
ljmp
add
push
xchg
mov
das
or
imul
mov
or
popf
imul
cwtl
push
jnp
pushf
xchg
test
push
push
movsb
popf
xchg
fsts
aas
aad
push
fcmovbe
push
jmp
lret
je
inc
cmc
adc
int3
mov
rcrb
add
sub
sub
and
aam
push
xlat
loop
daa
sub
pop
int3
xor
xor
pop
xor
sub
pop
movsb
or
les
inc
jne
or
sub
or
daa
sub
adc
je
call
stos
mov
and
mov
mov
add
jns
insb
push
dec
or
bound
sbb
pop
enter
inc
mov
or
xor
and
dec
pop
imul
pop
fs
cltd
dec
xor
jae
push
inc
push
pop
leave
or
and
aas
dec
nop
sbb
push
enter
push
inc
sti
add
sbb
xor
inc
and
add
adc
pop
jl
call
sub
fsts
sub
sub
mov
sbb
or
jae
sub
sbbb
mov
dec
in
and
jns
not
mov
cmp
inc
pop
in
and
fisttpl
adc
adc
mov
adc
ss
shl
icebp
je
fiadds
xor
ja
pop
popf
inc
and
jnp
shlb
sbb
and
mov
lret
cmp
mov
int3
sbb
inc
inc
cwtl
mov
ja
inc
ljmp
fisubrs
dec
or
sbb
sbb
cmpsl
jno
inc
dec
xor
jbe
xor
insb
fmuls
xchg
imul
dec
imul
lahf
adc
leave
adc
pop
mov
in
jl
rcrb
enter
push
inc
add
cmp
mov
in
or
adcb
cmp
inc
and
call
test
adc
adc
add
and
and
push
es
add
loope
call
push
lahf
gs
insb
adc
pop
lcall
or
test
nop
lea
je
or
and
push
push
or
je
fiadds
outsl
in
adc
call
fists
sbb
add
push
mov
je
sub
cmp
or
sbb
popa
daa
jl
loop
sbb
je
clc
mov
add
pop
into
adc
mov
cli
out
or
jge
jmp
movl
or
popl
dec
ljmp
fsubs
sbb
inc
gs
mov
add
popl
insb
add
add
xchg
or
mov
pop
add
add
add
cmpsw
xchg
les
aaa
xchg
add
xchg
or
and
int3
or
sbb
mov
sbb
or
dec
sub
xlat
push
add
mov
mov
add
and
or
lahf
or
adc
or
mov
jns
jle
pop
jl
sbb
cld
mov
ret
repz
lret
adc
out
push
shll
das
fiadds
inc
pop
adc
add
jmp
mov
dec
stos
roll
jle
scas
mov
mov
or
or
in
cmp
sarb
pusha
mov
jg
dec
jae
jne
fisttpl
mov
adc
daa
pop
add
es
add
push
cld
and
or
push
push
stos
adc
inc
and
dec
adcl
inc
push
inc
push
push
and
pop
push
push
je
add
or
leave
or
lret
adc
xchg
fdivrs
dec
add
mov
mov
clc
sub
jae
mov
mov
lret
adc
push
mov
add
movl
inc
push
dec
stos
add
inc
adc
xchg
jl
imul
dec
les
vpcmpeqw
out
gs
daa
xor
dec
cmp
push
dec
out
je
sti
mov
jbe
cmp
mov
jl
xor
or
push
mov
je
scas
cmpsl
pop
or
insb
popa
sub
xchg
pop
adc
sbb
dec
xor
xchg
xor
mov
sbb
add
inc
sahf
loopne
push
enter
or
pop
cmpl
inc
sbb
fwait
push
test
push
dec
imul
shlb
push
push
call
rorl
aaa
fistpll
or
jne
xchg
dec
scas
xchg
loopne
add
sbb
ljmp
inc
mov
and
sbb
imul
xchg
xor
push
movsl
mov
xchg
enter
mov
adc
cmp
jge
xor
pusha
clc
jno
xor
cmp
push
add
jnp
ss
cmp
lea
clc
stc
ret
scas
pop
cld
pop
dec
sbb
lock
inc
jmp
pop
cmp
adc
sub
sbb
cmp
mov
and
int
lahf
jmp
mov
in
cmp
mov
dec
add
test
sub
mov
ja
leave
mov
push
mov
lret
lock
or
jo
jmp
mov
les
mov
dec
cmpsb
decb
loopne
mov
adc
dec
sti
xorb
dec
pushf
dec
inc
push
orb
test
fs
push
mov
xor
outsb
fdivrs
test
inc
fsubp
std
sbb
aam
inc
mov
fadds
mov
xchg
test
lahf
cmp
rcll
and
and
push
mov
lret
outsb
xlat
jb
fs
test
adc
or
stc
push
mov
jp
push
movups
add
jo
daa
addl
pop
adc
sahf
sarl
dec
cmpl
sbb
adc
push
mov
and
dec
les
dec
dec
adc
or
jne
adc
cmpsb
and
jmp
xor
cmp
and
pop
cld
imul
mov
shl
mov
movsb
add
mov
inc
pop
adc
lret
jbe
je
cmp
xchg
pusha
unpckhps
pop
mulb
movups
adc
fwait
or
int3
dec
inc
or
adc
adc
rcrl
pop
add
nop
clc
addl
sub
movsl
cmp
sbb
test
nop
adc
daa
adc
adc
pop
in
push
sbb
cmpl
daa
mov
add
rol
test
and
inc
pop
xchg
add
lahf
inc
aad
dec
push
mov
gs
push
sub
add
pop
and
add
pop
jmp
and
jmp
fisubs
cld
std
add
jno
mov
mov
rcrb
adcb
or
dec
push
xor
inc
push
pop
and
orl
shll
test
xchg
xchg
xor
rolb
stos
inc
mov
xchg
adcb
push
addr16
sub
lock
adc
adc
mov
adc
sub
stos
dec
stc
jb
xor
and
dec
cmp
inc
insl
push
mov
dec
or
push
test
cmc
cmp
xlat
clc
push
pop
pop
adc
or
xor
adc
fs
and
icebp
xchg
popa
inc
les
sbb
call
adc
repz
pop
mov
mov
inc
enter
data16
call
mov
pusha
xchg
je
xor
sbb
shl
pushf
dec
mov
pop
jns
adc
cwtl
test
mov
fdivrl
insl
gs
insb
ror
pop
bnd
xchg
push
loopne
pop
or
daa
or
sub
sub
dec
inc
lea
jmp
test
hlt
scas
xor
sbb
mov
mov
decb
xor
data16
jno
das
xor
push
mull
cmc
mov
mov
add
out
lret
fucomip
inc
mov
mov
mov
lock
lret
popa
sub
add
push
cld
mov
adc
data16
rorl
scas
es
out
adc
lds
sub
sub
jb
mov
push
aas
inc
es
jge
push
sbb
mov
and
or
loopne
cmp
stos
and
stos
mov
jp
call
div
sbb
aaa
enter
push
sarb
pop
ficomps
push
pop
rclb
dec
add
push
adc
sahf
inc
dec
add
int3
mov
jge
ret
or
push
and
jne
cmpsl
les
sbb
enter
push
jg
pop
push
je
lods
test
mov
dec
pop
sub
lcall
and
loop
or
out
xor
xor
push
xchg
sti
aad
dec
faddl
add
lret
jle
das
jge
jp
inc
cmp
imul
xchg
or
lret
push
push
mov
mov
xor
add
rorl
mov
xchg
addr16
inc
popf
sbb
cltd
mov
inc
nop
mov
and
test
movsb
push
stos
in
setae
pop
shlb
mov
popf
pop
mov
jl
sub
rcll
aam
or
sub
insl
xchg
rorl
aam
cli
shr
cs
or
cli
addb
sbb
cltd
std
les
adc
popa
daa
push
dec
das
ja
pop
push
or
jns
jno
inc
push
xchg
mov
inc
mov
rclb
rclb
add
fcoms
and
popf
scas
movsb
or
mov
push
jns
cltd
and
mov
loope
pushf
push
cmp
cli
or
adc
clc
xchg
pop
xchg
addr16
jp
adc
jns
lea
cltd
xchg
in
lock
adc
lret
into
push
call
xor
in
jnp
add
and
leave
push
ficomps
call
adc
lea
sbbl
jle
lahf
pop
add
iret
dec
adc
and
sbbl
cmp
adc
xor
mov
shlb
adc
dec
sub
mov
push
mov
or
adc
inc
aas
sub
or
mov
xchg
xchg
insl
mov
or
rorb
out
aam
add
enter
divb
adc
leave
push
pop
lahf
adc
and
cli
sub
and
pop
adc
pop
fs
aam
jmp
leave
sub
aas
enter
mov
or
lds
and
cltd
adc
or
call
dec
xchg
subb
lret
push
sub
jns
fdivrl
mov
xor
push
dec
test
xorb
out
arpl
int3
fnstsw
inc
xor
mov
mov
pop
stos
sub
lret
das
xchg
aas
or
jnp
sbb
shrb
mov
jmp
mov
sti
dec
xchg
sti
rolb
lret
adc
hlt
mov
sbb
and
push
push
push
out
das
cld
fs
or
jg
movsb
or
push
sbb
mov
push
daa
decb
jbe
cmc
jb
stos
cmp
and
sub
fildl
jbe
popa
and
push
inc
and
lock
jmp
outsl
and
dec
mov
cmp
decb
mov
xchg
pop
push
xchg
sub
sub
sub
addr16
pop
dec
xchg
mov
cltd
or
jne
dec
cs
cwtl
pop
pop
mov
in
xor
mov
hlt
es
add
pop
add
dec
adc
adc
test
test
xchg
sub
je
mov
shrd
push
inc
les
sti
sbb
popf
mulb
sub
mov
mov
push
test
sarl
xchg
test
pmaxub
clc
movsl
mov
jmp
fnsave
xchg
notb
inc
in
inc
inc
mov
cmp
rcll
mov
and
ret
sar
ret
inc
or
hlt
or
xchg
ss
lcall
outsl
push
stos
and
sub
les
xlat
sbb
sahf
test
adcl
dec
lock
push
dec
xor
sub
adc
sub
mov
xor
test
or
add
movsl
mov
dec
adc
xchg
adc
rcl
pop
ljmp
stos
xchg
or
stos
ret
jbe
stos
push
cmp
adc
and
jle
pop
dec
sbb
bound
mov
and
dec
mov
adc
pop
jnp
andb
jne
dec
mov
movsb
jmp
fucompp
icebp
pop
cmp
jmp
sub
push
add
sub
sbb
je
or
arpl
sub
lcall
inc
loopne
mov
cmp
les
and
int3
movb
testb
or
fsubrp
push
int
adc
aam
or
bound
repnz
cwtl
xchg
pop
dec
and
xlat
shrb
mov
in
lret
mov
jb
jmp
pop
and
or
inc
xchg
clc
pop
mov
ffree
cmpsl
sub
lods
push
xchg
das
cli
dec
js
adc
cmp
pop
pop
and
sbb
ds
xchg
or
or
xor
mov
scas
or
movsl
wrmsr
or
pop
lret
add
jmp
lea
out
add
scas
fists
dec
sub
sbb
push
xchg
push
cwtl
in
clc
inc
std
push
and
push
add
mov
fisubl
je
mov
add
call
push
cmp
adcl
cmpsl
cltd
movsl
pushf
xor
cmpsl
test
sbb
xchg
addb
hlt
inc
sbb
dec
and
jg
lret
test
sub
cmp
clc
sbb
mov
je
dec
jmp
xor
mov
add
mov
adc
mov
dec
xor
rcrb
pusha
and
pop
xchg
aas
frstor
ja
ret
enter
adc
mov
jo
sub
shlb
jle
fwait
xchg
les
fwait
pop
pop
sbb
ljmp
mov
xor
dec
adc
pushf
loop
cmp
fnstenv
and
and
rorb
or
lock
lcall
lock
jno
scas
sub
outsb
rorb
daa
imul
orb
and
in
fwait
jecxz
in
outsb
ror
xor
push
sub
mov
and
insb
sahf
xchg
push
xchg
xor
shl
inc
ret
dec
add
or
pop
pop
mov
jbe
pop
sbb
pop
mov
bound
adc
insb
push
jge
rolb
iret
or
pop
int3
aad
sbb
je
mov
les
or
fwait
arpl
inc
les
rclb
fsubl
dec
les
lods
add
imulb
pop
cmp
dec
add
xlat
pop
and
cmp
push
scas
jmp
sub
pop
daa
movsl
cmpb
gs
add
in
pop
mov
and
sbb
push
xchg
push
or
andl
loop
adc
jbe
sbb
call
push
inc
ja
cmp
sahf
fs
xchg
inc
xchg
cs
outsb
aad
xchg
fcomps
mov
repnz
and
add
ficoml
dec
popa
or
lret
sub
adc
je
mov
ds
cltd
add
ret
in
aaa
push
pop
ret
adc
or
into
mov
inc
push
pop
imul
mov
push
xchg
jp
pop
xor
jmp
insb
in
imul
add
fwait
xchg
dec
push
sub
push
test
inc
cld
add
lods
fs
loop
rorb
loopne
sbb
lret
pop
outsl
scas
or
je
jl
gs
out
push
gs
jne
mov
rcll
pop
test
cmpsb
sti
cmp
sub
push
push
xor
loopne
imul
les
out
and
decb
jmp
cmp
je
into
orl
dec
fdivs
cmp
xor
dec
sub
lock
push
and
jmp
fnstsw
xchg
adc
sub
add
jbe
cmp
cmp
lods
mov
je
andb
cmpsl
push
aad
pusha
pop
ja
iret
jp
jns
fiadds
jb
sbb
enter
jbe
in
add
int3
sbb
jne
inc
mov
and
dec
add
in
mov
lock
int3
adcl
lock
fdivl
cli
sub
jmp
cmp
cmp
cli
scas
inc
mov
inc
faddl
and
add
add
add
int3
add
add
or
or
add
push
jle
int3
and
mov
in
add
sbb
or
mov
or
out
dec
ret
or
push
loopne
mov
mov
aas
jmp
or
test
dec
fisttps
movsl
fistl
rclb
popf
dec
inc
repz
pop
adc
xchg
sbb
pop
push
cmp
and
jmp
push
loopne
mov
ficoml
xchg
stos
xchg
aaa
adc
icebp
mov
push
jo
lea
jg
add
call
jle
mov
gs
fbld
imul
mov
cld
sti
mov
inc
inc
cmp
jne
call
enter
mov
mov
adc
jp
xor
and
fs
repz
or
or
sub
inc
push
dec
std
xor
sbb
cmp
dec
cltd
loope
or
aaa
loop
sbb
sub
stc
adc
xchg
mov
mov
sbb
push
jmp
loop
and
push
push
outsb
fstps
and
dec
movsb
and
adc
xor
push
test
sub
mov
shrl
bound
jmp
xchg
mov
enter
sbb
sub
add
mov
js
and
repnz
bound
push
sbb
mov
jl
sub
or
and
inc
sub
add
sbb
cwtl
rolb
jnp
sub
or
or
adc
lret
and
rorb
out
sub
cmp
ljmp
call
sbb
out
iret
aaa
and
movsl
pop
adc
push
addb
or
push
fildll
movsl
pop
jge
aas
inc
xchg
dec
mov
leave
jo
mov
mov
nop
loop
adc
dec
pavgb
xchg
push
jns
inc
adc
or
inc
lods
xor
call
and
ficompl
rolb
loope
or
testl
dec
and
neg
sbb
leave
inc
adc
rcll
imul
scas
imul
mov
std
pop
and
dec
addr16
sub
jp
xchg
jle
outsb
jbe
ror
cmove
daa
hlt
clc
stos
xor
std
mov
js
clc
push
jnp
test
sahf
push
inc
adc
and
dec
pushf
and
mov
ja
dec
or
sub
popf
pop
popa
and
or
dec
or
or
mov
lret
push
xor
adc
cld
jae
and
push
and
adc
push
pop
mov
cmp
xor
mov
push
loope
jecxz
push
and
inc
hlt
fs
cmp
fmull
adc
and
add
js
mov
sbb
lret
cmpsb
loop
shll
jl
outsl
hlt
pop
push
mov
and
adc
fs
or
outsl
xor
shll
sub
dec
insl
sbb
jp
adc
add
jb
imul
add
pusha
and
ljmp
stos
cltd
adc
ja
add
cmp
add
mov
outsl
dec
loop
dec
jl
shr
insb
es
or
sbb
lods
push
adc
hlt
cmp
filds
jno
cmp
add
leave
or
xchg
mov
test
test
adc
mov
jno
sbb
scas
gs
out
fstps
add
xlat
or
cmpsb
ret
out
into
lcall
and
adc
out
inc
inc
testl
enter
xchg
or
and
xchg
mov
in
xchg
push
sahf
movsl
lcall
mov
pop
mov
xor
je
inc
jmp
imul
ja
test
ret
pop
push
testl
add
push
stos
cmpsb
cltd
dec
push
xor
loop
pop
xor
mov
nop
loopne
xchg
or
je
cmpl
cmp
and
jmp
inc
or
enter
mov
sbb
fisubrs
inc
jne
jmp
cmp
mov
inc
or
push
add
xor
dec
pop
adc
aas
clc
mov
inc
jno
sbb
test
and
mov
jmp
inc
jno
or
and
mov
int3
and
ds
adc
lret
rol
or
mov
or
fcmovnbe
adc
mov
dec
ror
fwait
fs
push
clc
lods
mov
daa
push
mov
add
test
lods
sub
push
add
out
add
lret
mov
lock
mov
in
nop
jae
into
mov
fcomps
fisttpll
inc
lock
push
jmp
sub
mov
add
push
jns
mov
test
and
outsl
adc
xchg
lods
jnp
push
push
jmp
or
dec
cmpsb
shll
add
and
mov
push
sbb
jmp
loope
je
push
or
inc
inc
hlt
sbb
pop
inc
inc
mov
or
aas
ss
je
push
stos
sub
out
xor
mov
ja
cmp
adc
sub
out
mov
rcrb
divb
mov
inc
rorl
push
inc
ficoms
adc
ljmp
sub
pop
and
jmp
adc
test
dec
stos
mov
daa
add
test
xor
sbb
mov
and
and
mov
jg
mov
add
por
sbb
insl
fldt
xchg
sarl
mov
xchg
lock
sbb
int3
adc
sub
push
or
add
mov
aam
and
loopne
aam
les
scas
ja
popf
inc
xor
or
mov
add
add
mov
lret
cli
and
stos
mov
pop
mov
mov
xchg
mov
or
xchg
or
mov
fstpl
push
jno
lock
mov
cld
leave
outsl
xor
movsb
nop
xlat
mov
fisubl
das
int3
cmp
jmp
add
jge
enter
mov
lock
mov
out
inc
cmpsb
pop
add
repnz
lock
decb
movsl
shll
jge
push
clc
jne
push
icebp
mov
popa
and
call
inc
add
dec
lods
fs
dec
cmp
bound
xor
jno
fs
sub
pop
pop
arpl
shl
jo
push
push
dec
je
add
divb
fstl
cmp
je
sbb
das
mov
mov
mov
scas
mov
rclb
xchg
inc
stos
int3
push
test
xor
iret
jg
in
cmpsl
cwtl
into
lock
push
frstor
xor
mov
xchg
test
gs
subb
fsubrp
sbb
ljmp
cmpl
out
jp
or
in
ja
push
sub
push
jns
mov
cs
fisubrl
mov
movsb
or
xor
sti
xlat
and
xchg
imul
or
push
push
stc
inc
jb
and
fistl
and
lods
pusha
mov
adc
and
ja
not
es
push
jecxz
and
rolb
sub
or
fldt
into
push
fwait
sub
adc
and
pop
sub
inc
xor
int3
mov
les
mov
cmp
out
add
fdivp
fstp
xchg
inc
and
push
fldpi
mov
jns
ret
addb
xchg
sbb
cs
das
cmc
ss
mov
mov
cmp
popa
inc
dec
inc
pop
mov
xchg
push
jmp
sbb
jne
int
sahf
push
insl
jb
lock
mov
nop
cmp
in
jns
push
out
into
rclb
adc
inc
out
sub
push
jmp
adc
push
incl
jg
adc
bound
mov
push
fistps
inc
loop
xchg
mov
add
adc
stos
mov
dec
pop
sbb
pop
add
in
xor
push
js
mov
pop
outsl
ss
mov
leave
leave
adc
jle
std
loop
sbb
leave
dec
xlat
lret
pusha
xchg
out
xor
xchg
jl
sub
or
mov
jmp
and
lods
daa
push
xchg
or
in
mov
jne
gs
inc
ljmp
out
jbe
js
cmp
stc
xor
pop
adc
in
dec
push
xchg
push
adc
sti
xor
adc
jmp
pop
dec
out
pop
movsb
call
and
fstl
cmp
mov
daa
and
jge
adc
je
pushl
adc
outsb
sbb
cmpsl
aam
test
daa
gs
clc
mov
loopne
sub
outsb
hlt
and
and
test
data16
je
jmp
sub
jg
sub
add
xor
aas
enter
ret
mov
xchg
mov
idivl
xchg
fmul
xchg
inc
movsb
loopne
popa
push
sbb
je
mov
mov
test
leave
jge
sbbb
cmp
movsl
loop
xor
jne
scas
xor
int3
bound
stc
or
ljmp
xchg
daa
xchg
push
push
bound
pop
les
and
in
sub
out
pop
adc
ret
in
sub
dec
pop
xchg
mov
jnp
or
sbb
mov
xchg
cmp
jl
dec
mov
jno
stc
sahf
inc
or
enter
jmp
mov
push
sub
xor
inc
out
push
xchg
jnp
add
sbb
mov
lock
xchg
adc
repnz
cmpsb
xchg
xchg
shll
rorl
dec
arpl
mov
das
mov
outsl
xchg
mov
pop
lea
push
pop
dec
outsl
adc
lods
test
or
or
jp
push
and
movsl
push
mov
jmp
xor
cld
dec
add
or
jae
cmpb
push
and
push
mov
test
mov
fisubs
and
pushf
add
into
xor
jg
dec
cmp
add
pop
or
pop
or
xchg
cmp
dec
mov
jmp
lods
adc
lds
shrl
or
push
cwtl
sbb
lock
cmp
rcrb
mov
enter
sbb
xchg
fs
int3
cwtl
stc
movsw
shlb
mov
push
cmp
inc
sub
gs
int3
setl
mov
scas
adc
les
push
jl
in
inc
testb
inc
repnz
cld
scas
inc
adc
cmp
mov
mov
mov
imul
addb
std
test
sarl
and
or
arpl
jecxz
dec
sti
inc
adc
xor
inc
data16
cmp
and
jge
jmp
pop
lds
int3
xor
mov
divl
movsb
sub
or
test
decb
lods
mov
xlat
or
cmp
or
add
sbb
call
dec
int3
loop,pn
in
das
rclb
jg
sbb
std
mov
push
push
mov
call
stos
xor
fstps
pop
jns
add
cmc
cmpl
jne
dec
cltd
in
js
mov
pop
sbb
inc
fidivl
cltd
cs
aas
fsts
imul
stc
das
stc
jo
and
push
push
mov
repz
movsb
mov
push
sbb
stos
in
jno
das
jno
test
jl
sti
cmc
mov
xlat
dec
jecxz
add
jno
or
cli
and
test
int3
mov
sbb
iret
imul
test
mov
cmp
js
cs
and
pushf
push
test
or
inc
jo
adc
sbb
bound
das
cltd
adc
xchg
inc
les
pop
lods
jb
jns
jle
adc
call
jmp
stos
test
rcrb
mov
cwtl
lock
imul
in
imul
enter
adc
cmp
jg
lcall
lret
add
pminsw
inc
sbb
push
add
imul
jnp
cmp
and
pop
stos
in
in
and
popf
movsb
push
adc
movsb
cmp
or
xchg
mov
pusha
sbb
movsl
insl
ret
call
movsl
shlb
jge
call
mov
pop
outsb
stos
lret
mov
add
mov
sub
push
or
addb
sub
gs
insb
or
lahf
data16
or
aas
cmp
push
jge
jo
rorb
movsb
in
mov
inc
and
xchg
rclb
or
xchg
mov
cmc
sbb
test
xor
es
sbb
mov
dec
fwait
cmp
ss
mov
imul
jne
sbb
sbb
sbb
or
adc
aam
add
aaa
ja
cmpsl
pop
ljmp
clc
jl
rclb
popf
repz
call
add
inc
add
repnz
insl
mov
xchg
nop
pop
cmpsl
add
clc
loope
or
test
rorb
xor
dec
and
mov
push
data16
in
inc
shrb
or
shrl
inc
add
mov
test
push
clc
xor
es
imul
into
jbe
jne
lods
or
mov
fidivl
les
or
dec
repnz
sbb
inc
add
jle
in
icebp
gs
das
mov
je
jle
xchg
xchg
sub
cmp
cld
or
and
jne
xchg
or
dec
test
push
lret
xchg
int3
mov
add
cmp
pop
cli
fs
or
pop
lahf
ret
push
dec
repnz
enter
imul
and
jne
fdivrl
push
or
in
push
xchg
jl
aam
xchg
jo
repz
rorb
stos
xor
int3
call
inc
xor
and
add
cld
insb
cs
cmp
mov
mov
cltd
imulb
add
dec
in
addr16
cmpsl
add
insl
cmc
xor
xor
dec
std
hlt
test
pushl
sbb
dec
or
xor
fnsave
inc
mov
sbb
mov
jge
mov
mov
les
jecxz
cmpsb
xorb
aam
cmp
or
mov
fcomps
call
insb
iret
ss
test
or
test
sub
fisubrl
or
je
cmp
adc
in
xchg
xchg
cmp
movsb
adc
xor
aam
popa
in
mov
test
push
in
adc
inc
pop
or
mov
pop
scas
int3
test
cld
cld
adc
in
xchg
mov
inc
fidivrl
mov
xor
push
xchg
out
mov
or
adc
or
mov
add
nop
inc
lea
dec
in
sub
es
pusha
pop
lods
in
inc
pusha
sbb
int3
sub
dec
inc
push
adc
nop
and
hlt
or
jbe
loope
out
jb
das
or
sub
mov
pop
or
sbb
in
add
pop
push
ja
repz
push
pop
pushf
jmp
stos
jb
adc
inc
and
add
sbb
pop
adc
lcall
aam
dec
sub
add
adc
mov
mov
xlat
lods
jae
adc
lcall
popa
dec
xor
fs
sbb
movb
sbb
mov
add
aad
test
sbb
or
or
int3
fisubrs
adcl
sub
cmp
push
loope
xor
and
movsl
cs
xchg
int
mov
popf
jb
test
adc
cmp
and
jae
push
inc
dec
dec
rcrb
pusha
xchg
cmc
add
xor
sub
das
mov
jnp
cs
adc
sub
push
daa
sub
fcoms
mov
or
data16
push
cmp
jmp
sbb
adc
orb
and
xor
cmp
xchg
dec
movsb
add
pop
jnp
xlat
imulb
mov
mov
cmpsb
jo
or
cltd
arpl
div
jl
daa
clc
inc
shlb
pop
or
lock
dec
add
into
xor
or
push
jge
push
mov
push
lcall
mov
cs
cmp
cmp
and
call
fstpl
sub
cmp
sub
pusha
sbb
pop
pop
leave
cmp
or
xor
sbb
scas
push
lock
pop
mov
inc
pusha
adc
cwtl
sbb
imul
and
movsb
pop
in
lods
loope
push
fdivrl
out
mov
push
mov
adc
mov
lds
jecxz
jne
jo
subb
addb
nop
es
inc
and
lods
ficompl
pop
mov
ret
or
inc
jl
orl
out
sub
add
dec
movsl
aam
pop
lahf
loopne
push
rolb
aam
xor
inc
pop
imul
sub
clc
add
push
sub
rcrb
int
je
mov
xadd
cmp
push
push
addr16
cmp
enter
mov
pop
les
incl
loopne
call
or
and
sbb
pop
imul
or
rorb
or
jl
in
scas
mov
iret
inc
add
mov
inc
loopne
iret
cmpsb
or
and
cmp
enter
ljmp
dec
dec
push
xchg
jle
mov
cli
popa
push
pop
call
adc
adc
sub
push
je
or
gs
stos
testb
cltd
add
sbb
xlat
outsb
fcompl
cmp
leave
test
shl
xchg
outsw
inc
and
dec
scas
shlb
pop
and
mov
bnd
sub
and
mov
sub
orl
ds
je
sbb
push
mov
jne
mov
pop
push
sbb
ljmp
mov
mov
aaa
jo
add
pop
adc
dec
or
sub
cmp
js
nop
push
enter
rorb
fistpll
or
test
push
lods
inc
test
or
rcl
or
push
insl
int
jno
mov
xor
je
cmp
jmp
pop
xor
xchg
outsb
pop
inc
xchg
data16
cmp
rcrl
push
sub
fistpll
loop
xchg
lret
push
inc
inc
add
add
or
push
jg
rclb
shll
fiaddl
call
ficoms
inc
mov
or
lock
jmp
out
and
cmp
outsb
movsb
data16
fs
adcb
gs
jle
jb
cmc
pop
jle
arpl
inc
test
sbb
xchg
sub
lock
sub
inc
or
add
add
imul
adc
push
dec
inc
pusha
call
pop
movl
and
adc
and
stos
xor
add
mov
push
imul
lock
add
xlat
mov
mov
adc
shrb
ret
push
jnp
mov
ret
sub
fnstsw
loope
fcomip
xlat
jns
enter
gs
out
mov
les
daa
xchg
nop
aad
and
cmp
fadds
and
xlat
sub
sbb
pop
sub
insb
mov
daa
push
push
imul
push
push
int3
cmp
adc
outsb
pop
xor
push
sarb
loope
cli
mov
or
lds
jne
or
orl
or
xchg
in
stos
aam
aaa
lds
mov
nop
mov
inc
decb
bound
addl
and
and
xchg
push
arpl
xchg
cmp
clc
shr
xchg
outsb
sub
sarb
jge
push
lcall
adc
add
pop
sbb
push
push
jge
loope
ret
test
lcall
pop
cs
pusha
leave
cmp
sub
and
ret
ja
adc
pop
pop
pushf
pop
cs
push
and
lret
xorb
out
mov
jmp
pushf
rorb
inc
push
mov
les
push
pop
testb
repnz
mov
jmp
movsl
mov
fldenv
mov
repz
adc
in
jo
mov
js
adc
adc
in
adcb
push
addl
inc
xchg
push
xor
mov
pop
call
stos
fisttpl
and
push
pop
mov
mov
stc
xor
inc
xorb
xor
add
loop
icebp
mov
dec
in
jmp
push
sub
adc
xor
fadd
cli
push
jns
ror
repnz
out
sub
adc
mov
sub
sbb
inc
mov
xabort
test
mov
dec
mov
clc
ret
mov
incl
mov
push
outsl
and
add
jae
ds
mov
jmp
cmp
repnz
std
mov
cli
ret
lret
jge
in
je
push
jae
add
jne
out
pop
scas
daa
in
mov
push
out
sbb
push
sub
insl
stc
push
adc
lock
pop
in
mov
in
fsubl
lds
mov
mov
aas
inc
sub
mull
je,pn
scas
mov
adc
jmp
push
mov
push
sub
and
je
pop
sti
jae
cmpsb
inc
adc
popf
sub
xchg
cmp
ss
mov
sbb
subl
dec
dec
xor
xchg
pop
cmp
cmp
sub
or
inc
mov
inc
xlat
cli
call
lock
stos
pop
adc
mov
test
sbb
pop
imul
repnz
outsb
mov
jno
push
stos
jle
lea
push
mov
loop
testl
or
sub
test
push
or
jno
sub
jae
call
cs
mov
or
sub
fildll
fnstsw
lcall
in
jmp
mov
dec
adc
loopne
xor
adc
addb
cs
pop
inc
sahf
call
imul
jno
test
das
mov
mov
xchg
stos
lods
hlt
push
and
movsl
and
mov
xchg
xor
cli
fdivrp
or
jb
sbb
pushf
xchg
jne
push
or
sub
std
push
dec
popa
out
mov
xchg
or
outsl
dec
mov
int
bound
xor
inc
xchg
sbb
jl
or
add
fnstsw
or
mov
xlat
xchg
and
xorl
mov
ljmp
and
movsb
lods
cmc
mov
je
xchg
pop
jne
sti
cmp
jmp
outsl
movsl
pusha
adc
add
fidivl
mov
inc
xor
mov
cmpb
mov
jne
xor
lock
push
xchg
sub
push
in
jl
lock
jmp
fldl2t
pushf
adc
mov
out
mov
and
mov
sub
or
push
and
jecxz
and
sbb
adc
aaa
clc
imul
nop
movsl
dec
mov
sti
and
cmp
add
call
pusha
loope
mov
cmp
or
addl
in
out
adc
sti
jb
dec
dec
or
in
mov
sti
mov
mov
or
or
sahf
mov
decl
jp
nop
cmp
jae
imul
lds
cmp
pop
mov
adc
mov
in
sub
cmpsb
rclb
adc
pop
push
sub
xor
or
dec
orb
inc
sub
add
daa
mov
xchg
pop
jmp
inc
jnp
push
gs
sahf
out
call
lock
mov
adc
and
mov
in
out
push
shr
xor
iret
sub
pop
adc
push
xchg
cmp
movsb
test
mov
pop
movsl
std
and
shrb
or
leave
dec
scas
push
mov
pop
pop
inc
pop
or
or
mov
lret
mov
pop
mov
pop
sbb
jo
pop
sbb
jne
fisubrl
lcall
in
in
test
jmp
adc
push
int
add
xor
lret
inc
inc
sbb
push
xchg
or
or
jmp
cmpsb
sub
mov
add
out
cmp
jle
sub
xor
dec
jns
jne
mov
lret
jmp
ds
pop
test
movsb
stc
dec
sub
jg
fisubs
pop
ljmp
xchg
shll
mov
xlat
xchg
daa
lret
cs
popf
lsl
clc
jo
jecxz
pop
rcl
mov
jae
pop
fmul
or
cmp
fsubr
js
test
xchg
int3
pop
faddl
sub
orb
mov
es
push
fcomps
push
adc
fsubl
dec
inc
mov
fadds
push
adc
repz
adc
and
mov
daa
dec
jmp
cmp
aas
pop
jo
sub
xchg
divb
test
aaa
push
or
loopne
mulb
loopne
rorl
loopne
push
xchg
jmp
add
jmp
xchg
mov
sbb
xor
push
imul
add
xor
and
test
aam
loopne
xor
ret
xor
pop
push
sbb
mov
mov
dec
clc
cmpsl
rcrb
in
dec
mov
pop
scas
push
sbb
add
mov
adc
sub
scas
sub
adc
and
pop
dec
push
and
idivb
xor
xchg
xlat
and
push
arpl
pop
out
lds
jp
ret
cmp
inc
in
jecxz
lods
mov
pop
rcrb
jl
lret
dec
ja
sub
push
repz
call
stc
push
dec
add
rorl
mov
rcl
out
xchg
mov
bound
les
in
pop
mov
dec
or
inc
add
jmp
les
mov
cmp
lock
adc
pop
jmp
cmpl
mov
inc
jmp
pop
rorl
pop
inc
dec
add
test
pop
push
dec
xchg
xchg
pop
and
test
inc
dec
inc
lea
or
inc
adc
sbb
aad
push
pop
xchg
shlb
xor
jle
push
test
and
inc
in
or
mov
sub
xor
sub
adc
sbbb
push
jne
cmp
inc
loope
push
leave
mov
jae
add
rclb
sbb
pop
mov
sti
lea
jge
inc
or
daa
mov
loop
rolb
jno
call
call
jo
pop
jmp
sub
mov
jg
clc
xchg
pop
pop
pop
or
and
jno
sbb
les
jg
out
sub
popf
loop
sbb
cld
movsl
adcb
mov
test
loop
adc
cmp
mov
add
push
leave
xlat
sarl
lret
push
sub
lea
or
add
int3
adc
lret
pop
pop
das
mov
in
or
push
call
mov
inc
add
scas
mov
nop
xchg
enter
aam
stos
cmpsb
ds
xchg
inc
sub
jne
jmp
add
in
cmpl
daa
push
inc
out
and
testl
roll
cltd
xchg
out
dec
aad
mov
psubq
xchg
fs
ficoms
ljmp
movsb
dec
jmp
sbb
rolb
les
imul
inc
push
xchg
xchg
stc
mov
or
aad
pop
push
fs
jle
fistpll
jbe
and
stos
xor
lret
iret
mov
js
push
mov
add
call
dec
pop
xor
or
xlat
inc
in
test
hlt
xor
cld
punpckhwd
jne
add
cli
fstpl
stos
push
sbb
xchg
xchg
repnz
dec
xor
mov
lahf
jmp
mov
scas
out
fdivs
je
xchg
loope
jo
mov
enter
mov
inc
in
xchg
ret
lret
int3
stos
out
jp
in
dec
pop
and
adc
cmp
out
push
fimuls
jb
out
adc
movb
aaa
add
cmpsl
jmp
jmp
pop
and
sub
mov
push
shrl
dec
dec
hlt
test
movsb
jmp
insb
aad
test
sti
fucomp
imul
or
xchg
sub
test
mov
mov
lea
outsl
mov
outsb
cs
and
jne
jmp
push
ror
and
jmp
jmp
dec
lods
dec
insb
sbb
pop
adc
sahf
and
test
add
fsubrs
mov
loope
jp
or
lock
push
hlt
inc
div
movsl
lds
call
dec
xchg
xlat
inc
cmp
pop
mov
jae,pt
lea
das
scas
adc
xchg
leave
rcll
push
dec
and
enter
pop
push
jns
pop
mov
inc
sbb
push
and
xchg
movsb
addr16
stos
or
or
lods
push
mov
dec
push
sbb
push
inc
cltd
movsb
in
pop
sub
sub
jns
arpl
cmp
or
or
call
sub
frstor
and
xlat
mov
jne
mov
cmpl
ljmp
adc
and
data16
xor
inc
and
out
pop
sub
add
push
das
notl
mov
adc
push
cmc
mov
lahf
gs
mov
xchg
mov
add
mov
aam
sub
in
es
dec
lret
inc
xlat
daa
fptan
adc
mov
cld
push
jge
and
and
sbb
mov
inc
xchg
ret
movsl
jne
ds
push
adc
and
and
pop
push
jp
dec
daa
dec
jno
and
mov
push
xchg
cmp
mov
dec
mov
inc
ror
lret
inc
push
mov
jne
stc
movsl
int3
fsubrs
sub
push
dec
dec
sub
inc
fsubrp
into
cmp
jne
cli
mov
dec
cmpsb
fisubs
mov
outsl
outsb
je
adc
and
jl
push
adc
push
mov
call
mov
pushf
mov
sbb
call
mov
xchg
and
in
add
mov
and
in
inc
sbb
push
cld
jae
pop
movb
inc
stos
xor
sbb
das
insb
mov
mov
cmp
cli
cmpsb
lock
stos
and
lods
flds
rclb
adc
add
mov
mov
mov
mov
cmp
adc
sbb
testl
ret
lea
sti
test
adc
sbbl
or
xor
push
sbb
inc
arpl
dec
dec
and
lea
aad
mov
mov
push
push
xchg
fstpl
push
das
mov
aaa
shll
addr16
or
pushl
std
loope
mov
ds
aam
loopne
push
jne
mov
cmp
push
test
push
jbe
lods
inc
mov
scas
cs
or
jmp
loop
and
or
xchg
add
sti
inc
dec
adc
cmp
scas
imulb
inc
xor
mov
data16
sub
pop
inc
inc
ret
fs
out
mov
pusha
dec
mov
sbbl
push
pop
mov
lods
jae
pop
pop
sbbl
pop
out
xchg
loopne
sub
mov
aad
lahf
cli
xchg
inc
lods
or
sarb
or
dec
mov
mov
inc
inc
cmpsl
sub
ja
frstor
cmp
cmp
or
jp
push
xor
pop
jns
sub
pusha
dec
inc
je
test
inc
and
sub
add
jae
or
shrl
or
cwtl
into
jmp
mov
jo
mov
nop
add
jmp
xor
adc
adc
test
inc
and
sub
inc
xchg
call
sub
sub
inc
or
inc
sbb
xor
and
popf
or
divb
adc
pop
add
adc
out
insl
int3
cs
push
fisubl
lds
adcl
and
jl
leave
xor
repz
in
jns
enter
inc
mov
jne
xchg
leave
mov
dec
int
int
pop
push
sti
fs
stc
rolb
jmp
dec
jecxz
xchg
jbe
lock
push
mov
mov
lea
insl
adc
xchg
cmovp
es
das
popf
mov
cmp
sub
sub
movsb
pop
sahf
out
lea
push
fwait
mov
gs
fbld
sbb
les
call
mov
sbb
dec
adc
pusha
fbld
inc
out
hlt
cmp
or
adc
lret
cmp
or
mov
jl
jb
in
mov
mov
xchg
imul
adc
pushf
xor
ficomps
push
nop
sub
lock
dec
cmp
jo,pn
std
movsl
and
call
fstl
mov
jl
push
mov
aaa
xor
push
sbb
mov
adc
xor
dec
mov
xorb
adc
jbe
imul
fldcw
ret
xchg
mov
push
pop
shl
gs
cli
sub
cmp
sub
adc
pop
shll
push
or
dec
fdivr
cwtl
xchg
clc
rcrb
dec
inc
or
add
or
push
repnz
imul
mov
mov
jge
mov
stos
jg
shrl
jmp
ljmp
int3
mov
nop
pop
push
lods
repz
xchg
cli
cmp
sub
and
pop
mov
jg
adc
push
sub
lock
mov
into
inc
addb
xchg
cmpsl
hlt
inc
leave
ret
fs
mov
add
leave
push
push
xchg
leave
and
adc
sub
je
fwait
movhps
outsb
dec
lods
cmpsb
jno
add
xchg
and
sub
ljmp
adc
nop
out
pop
push
push
mov
je
or
rolb
adc
add
je
or
pop
adc
cmp
xchg
test
lods
dec
sub
sub
in
pop
rorb
dec
jne
stc
cmp
cmp
push
das
mov
shrb
pop
das
push
inc
fiadds
lock
xor
cltd
stc
or
pop
jle
imul
jmp
sub
jnp
nop
iret
mov
mov
mov
sub
mov
and
or
sub
adc
push
inc
scas
mov
and
or
addb
rclb
jno
je
pop
dec
mov
mov
sbb
js
push
cmc
add
push
and
les
scas
or
mov
hlt
and
or
or
push
or
xchg
jbe
arpl
cmpsb
mov
jnp
gs
cli
mov
jns
faddl
aas
add
cld
sub
inc
or
jge
shll
inc
rclb
movsl
add
add
cmp
leave
in
push
cmp
xchg
lret
xchg
xchg
aad
adc
mov
inc
popf
ret
lcall
movsb
scas
sub
push
xor
sub
add
clc
inc
test
in
sub
xor
xchg
scas
pop
adc
sbb
adc
push
mov
xor
mov
inc
and
cmp
daa
ja
aas
lods
ds
or
xor
xlat
or
lock
hlt
bound
ja
movsb
dec
dec
xor
ja
push
test
pcmpgtb
xor
cli
mov
repnz
rcrb
xor
and
fdivs
call
dec
dec
push
testb
fmul
xor
jmp
xchg
and
mov
sub
in
jne
push
in
fs
and
sbb
add
fisttps
cwtl
dec
xchg
xor
push
movl
adc
loopne
clc
stos
sbb
mov
cmp
cld
jle
mov
clc
dec
mov
cld
fildl
fildll
push
mov
sbb
mov
jb
adc
inc
or
movsl
mov
add
dec
cmp
inc
sub
and
push
cmp
das
stc
sbb
fwait
or
test
add
mov
push
add
add
xchg
mov
xlat
sub
adc
int
push
push
roll
cmc
vunpckhps
and
pusha
mov
push
pop
mov
mov
sbb
dec
jb
test
sbb
insb
push
pusha
sbb
in
push
clc
push
mov
in
ss
sub
xchg
push
loope
push
xor
and
mov
xchg
and
pop
jae
insb
rorb
push
xor
push
jno
cs
addl
dec
xchg
fdivl
test
push
lcall
push
jae
push
inc
lods
repz
lcall
push
call
jo
fs
pop
out
and
xchg
in
push
pop
pushf
mov
jmp
dec
inc
popa
adc
fmuls
adc
out
inc
lret
shrl
sub
cmp
idiv
mov
mov
decl
lahf
aad
lods
or
cmp
xchg
xchg
andb
mov
mov
iret
scas
xor
mov
in
movsl
sti
iret
ja
cld
popf
arpl
inc
sahf
arpl
ret
xchg
call
adc
push
sbb
pop
daa
inc
push
rcrl
adc
lds
sub
div
out
mov
jae
inc
dec
dec
mov
test
push
xchg
add
jmp
enter
negb
xor
sbb
lods
fists
hlt
dec
push
cmp
out
jge
adc
add
add
call
sub
dec
mov
and
nop
movsb
mov
and
gs
xchg
out
jp
xchg
sub
adc
push
sbb
and
in
loope
or
xor
sbb
add
or
loope
push
test
sahf
vpsubd
loopne
pop
jae
movsl
fistl
sbb
enter
push
sbb
push
mov
movsl
mov
iret
or
push
mov
or
mov
out
sub
nop
push
push
or
adc
cmp
pop
jne
mov
mov
mov
lahf
imul
and
unpcklps
add
mov
mov
imul
lahf
sbb
sbb
nop
jmp
in
sarb
mov
mov
cmp
and
mov
cmp
adc
lret
mov
test
push
and
ret
pop
pop
lahf
ret
mov
dec
adc
subb
jge
adc
repnz
xor
call
hlt
mov
cmp
push
cs
and
jmp
enter
mov
jp
lods
jl
fists
nop
xor
inc
jb
shlb
out
in
cmp
in
dec
test
cmp
adc
ja
sub
inc
in
mul
adc
mov
dec
sub
mov
and
jne
pop
adc
or
pop
dec
pop
jl
ds
lret
dec
xlat
inc
xor
fidivrs
in
sbb
stos
jae
stos
fwait
sbb
and
inc
sbb
stos
cmp
aam
in
push
xchg
lds
loop
push
pop
out
clc
pusha
pop
shlb
mov
mov
clc
mov
notb
push
dec
cmc
lret
mov
xchg
clc
ja
enter
mov
cs
jl
sbb
ds
xor
test
rorb
mov
repnz
mov
jmp
pop
adc
inc
bound
and
lret
outsb
in
mov
push
in
mov
inc
or
movsb
scas
mov
int
jnp
loop
cwtl
sub
mov
repnz
or
into
dec
jae
jle
repnz
out
mov
fwait
dec
in
mov
pop
jecxz
jg
ja
jmp
cmp
stc
imul
dec
mov
sub
test
or
enter
adc
movsb
xlat
dec
dec
aam
cmp
mov
cmp
add
ds
sbb
sub
adcb
inc
sub
lret
push
call
out
outsl
pop
jb
mov
jmp
sub
jmp
or
ss
sub
sbb
daa
xor
daa
aas
jbe
shlb
cltd
test
mov
sbb
pop
push
int3
jns
jae
loope
stc
jg
or
dec
adc
jg
or
je
subl
xor
adc
jns
jmp
or
testb
add
or
pop
mov
cltd
nop
inc
xchg
adc
fisubs
sub
in
push
jnp
lea
arpl
addb
xor
adc
fdivrl
sbb
int3
pop
and
add
or
not
xor
lock
loop
xchg
stos
mov
ja
or
adc
sbb
fadds
or
ret
mov
decb
ret
int
stos
and
xchg
and
cltd
or
outsl
in
push
dec
call
cli
inc
ss
bnd
xchg
pop
xor
sbb
or
push
inc
add
mov
fcoms
int3
or
leave
sbb
fdivp
hlt
stos
cld
daa
mov
adc
push
xorb
in
mov
sbb
in
cmp
into
dec
mov
call
sbb
inc
addl
aas
ret
jbe
inc
hlt
jnp
in
aas
xor
repnz
sahf
ss
enter
in
daa
ljmp
out
and
loope
jnp
sbb
mov
imul
and
xchg
push
add
sbb
fpatan
je
jmp
lods
int3
rol
cmp
inc
add
call
cmp
dec
dec
cmc
lea
sarl
dec
lret
and
out
inc
sahf
das
dec
aad
lret
push
lea
push
test
fcompl
out
stc
dec
lods
inc
jnp
clc
sbb
das
xchg
les
push
push
cld
adc
adc
mov
pop
pop
xchg
mov
mov
lds
jns
adc
pop
stc
xchg
mov
insb
xor
gs
dec
inc
mov
hlt
inc
imul
jle
and
xor
dec
mov
or
popl
icebp
loop
push
push
rclb
fs
mov
mov
jle
inc
xor
cmp
pop
sub
nop
mov
jo
lahf
xchg
sub
pop
sbb
xchg
mov
or
out
cmp
cs
fsubr
cmp
adc
pusha
jg
sbb
adc
imul
adc
bound
sahf
movsb
cli
or
dec
mov
dec
mov
mov
dec
cmc
xlat
jg
mov
incb
lea
push
inc
test
addl
adc
xchg
out
pop
dec
repnz
cmp
or
dec
adc
leave
and
cmp
mov
pusha
pop
movzbw
mov
cmpsb
and
lods
negb
push
insl
jno
jle
jp
or
adc
cli
mov
and
push
outsl
and
lods
mov
aaa
jecxz
or
lods
dec
mov
gs
inc
mov
xchg
pop
adc
leave
js
jmp
jnp
mov
fs
cmp
xor
or
test
shld
ret
ret
mov
scas
out
pop
cmpsl
loop
adc
or
jo
xor
out
mov
adc
es
inc
cld
inc
pop
pop
push
out
push
inc
jo
cwtl
inc
pusha
lods
jo
dec
mov
lret
jge
imul
dec
and
or
xchg
leave
xlat
dec
rcl
dec
or
mov
dec
repnz
sub
test
xor
into
sbb
xorb
push
ds
cmc
xor
push
lock
je
aaa
in
cltd
jmp
dec
push
pop
adc
call
aam
dec
push
add
addr16
lcall
xor
cmc
dec
inc
popf
pop
mov
call
mov
xor
fildl
ret
out
jb
mov
and
mov
sar
or
pop
mov
fs
mov
test
or
adc
aas
in
cmp
xor
cwtl
xlat
mul
jle
mov
or
js
call
fistl
xchg
dec
sbb
imul
add
scas
test
rclb
push
add
or
pop
dec
xchg
or
rorl
out
loopne
push
xchg
add
adc
arpl
call
rclb
jmp
enter
sbb
out
inc
dec
mov
pop
add
and
inc
add
mov
fs
and
aam
mov
fsubrs
sbb
and
in
push
mov
bound
or
xor
adc
xor
lahf
notb
hlt
jo
or
cltd
movsl
mov
xchg
pop
inc
cmc
or
or
pop
shr
and
cmp
mov
dec
ret
or
xchg
push
or
inc
lahf
scas
push
push
pusha
pop
and
subw
sub
cwtd
push
leave
add
lcall
dec
or
jmp
or
out
imul
sub
ds
adc
test
pop
inc
inc
mov
call
fs
ja
dec
or
fs
and
cmp
add
repz
push
add
dec
cmc
sbb
inc
imul
rolw
and
mov
sbb
add
sbb
data16
fs
or
repz
cmpb
adc
fidivrs
push
int
test
mov
and
jns
dec
or
inc
mov
in
xchg
mulb
loop
jo
out
imul
and
dec
decl
xor
xlat
imul
adc
add
or
out
and
jb
dec
fucomip
das
add
and
inc
test
pop
and
test
cmp
clc
daa
lock
outsb
or
mov
sub
cmp
dec
inc
adc
add
mov
call
sub
push
dec
sbb
sub
mov
leave
jns
lahf
jmp
stos
lret
add
mov
add
sbb
repnz
cltd
push
jae
adc
rol
bound
lret
adc
mov
inc
nop
add
ret
push
cmp
mov
in
pop
xchg
jecxz
shl
push
pushf
jae
adc
mov
scas
nop
dec
shrb
add
mov
pop
mov
das
cmc
lods
push
shrb
mov
es
adc
mov
shrb
sub
dec
divl
xor
mov
rol
les
push
ficoms
call
lret
in
lret
xchg
jl
je
lock
xchg
pop
dec
and
push
add
xlat
mov
outsl
and
in
lret
mov
mov
mov
jmp
lret
add
and
movsb
xchg
sbb
xchg
cmp
call
and
xor
xor
dec
adc
fld
cld
ret
pop
mov
ljmp
je
jg
mov
mov
fisttpll
xor
or
push
push
std
inc
int3
cld
push
dec
push
jmp
in
and
rorl
sub
add
ficomps
push
push
leave
or
aas
push
jmp
lea
mov
in
mov
dec
pop
add
push
shlb
xchg
repz
sbb
mov
mov
lret
dec
je
sbb
scas
and
add
icebp
mov
mov
pop
sbb
mov
std
pop
push
call
xor
lahf
fnstenv
cltd
cli
sub
subl
push
cmp
ja
es
xor
sub
adc
mov
sub
mov
inc
test
dec
jl
repz
push
xchg
adc
or
mov
xor
adc
push
cmp
sbb
mov
pop
xchg
xor
mov
lods
inc
inc
lret
push
in
mov
mov
sbb
inc
sub
call
mov
pop
mov
sarl
add
jg
cli
inc
jno
outsl
leave
add
xlat
cli
jo
int
mov
add
adc
xor
adc
or
in
popf
adc
push
jle
pop
std
outsl
cmpsb
xchg
nop
and
mov
jnp
pop
mov
sahf
cmpsb
xchg
push
shlb
dec
xchg
mov
sar
inc
lea
aad
cli
xor
fs
push
push
sub
fsubp
int3
mov
xchg
pop
pop
lods
stos
cltd
sub
mov
inc
sti
call
xor
adcb
scas
dec
xor
add
adc
inc
mov
mov
pop
push
dec
sbb
and
add
mov
mov
xchg
jno
jo
xchg
xor
jno
xchg
or
je
mov
int3
and
loopne
popf
int
or
stos
dec
jl
fs
mov
stc
push
dec
inc
mov
icebp
pop
imul
jmp
mov
mov
divb
popf
mov
sub
pop
call
out
mov
jmp
push
xor
aam
mov
jns
leave
jmp
outsb
jecxz
dec
sbb
and
mov
jae
adc
push
ficoml
imul
and
insl
or
xchg
adc
shr
lds
mov
call
insl
in
ljmp
sub
mov
mov
lcall
enter
dec
cli
je
sub
andb
das
cmpb
or
push
add
and
out
mov
inc
push
dec
add
mov
aad
and
shlb
mov
jg
pop
xchg
dec
bound
js
pop
loop
daa
daa
scas
aad
and
ss
push
xor
jmp
and
or
das
sub
sbb
cmp
sahf
xchg
cli
fs
ret
ss
sub
mov
or
adc
cmp
sbb
lret
les
lahf
repz
scas
repnz
mov
loopne
dec
mov
or
fimull
and
ljmp
xchg
popf
pop
xor
rorl
call
cmp
insb
adc
jne
data16
sarl
adc
sti
add
push
test
pop
adc
push
mov
mov
and
mov
int
pop
imul
dec
mov
cli
adc
jge
push
sarb
dec
dec
fistpll
in
out
call
mov
and
sub
inc
push
or
adc
iret
lcall
xlat
jae
mov
mov
cmp
das
add
add
adc
test
push
mov
add
and
push
xchg
and
pop
in
and
and
movl
cmp
add
mov
or
push
xorb
xchg
icebp
push
lret
pop
adc
test
jmp
pop
pop
rol
test
test
jns
mov
daa
cmp
fisubrs
inc
pop
and
push
sbb
sarb
add
pop
lcall
jns
pop
movsb
int3
push
inc
or
mov
cmp
rol
das
jmp
and
rcrb
insl
jb
aas
pushf
push
push
lret
pop
xchg
cld
lahf
imul
and
test
mov
sbb
inc
mov
aas
loopne
push
or
ja
lea
test
lds
lds
mov
push
inc
xor
and
xor
xchg
or
or
lods
es
orl
jo
lds
orl
jmp
add
daa
xchg
and
and
xchg
test
out
mov
mov
push
adc
dec
lcall
ret
fidivl
inc
xchg
or
loope
mov
sub
mov
faddl
shr
jbe
int
push
pop
pop
adc
test
jns
mov
mov
jno
rclb
mov
test
cmp
or
pop
cmp
cmp
jmp
dec
adc
mov
test
sbb
sub
and
mov
xor
dec
lods
lret
cmp
fists
add
cmp
mov
add
inc
dec
rorb
dec
fildll
neg
dec
xor
jge
mov
jae
pop
push
mov
dec
dec
sbb
outsl
xchg
xchg
insl
pusha
xor
movsl
daa
std
pop
cmp
mov
sub
jmp
outsl
imul
loop
fdivs
lret
dec
cmpsl
and
out
or
std
xchg
sbb
cmp
jne
mov
xchg
cmpsb
aaa
push
xchg
mov
push
and
test
loope
pop
pushf
push
inc
sahf
enter
enter
add
pop
mov
lret
lahf
jmp
pop
jbe
sbb
sbb
and
sbb
push
adc
push
enter
push
and
xor
nop
lods
imul
inc
jns
cmpsb
inc
sub
insb
add
mov
lret
dec
and
stc
or
jp
leave
repnz
sarl
data16
sub
and
cmc
inc
adc
push
push
ja
sbb
sbb
mov
fwait
iret
inc
sub
jle
sbb
inc
aas
outsb
cmpsb
cmp
inc
cmp
sub
sub
jmp
cmp
xor
and
jmp
ret
or
stos
and
fsts
mov
leave
call
pop
gs
sbb
push
jl
xor
xchg
adc
sub
inc
js
pop
pop
out
cmp
jge
add
ja
adc
jbe
lea
gs
inc
lods
aas
dec
fdivl
call
pushl
test
add
add
cltd
mov
cld
mov
fcomps
outsb
sbb
sub
cmpsb
sbb
imul
push
add
js
int
sub
hlt
loope
sbb
das
and
aaa
hlt
jmp
add
xchg
and
add
jl
shl
inc
mov
mov
or
outsb
jmp
xchg
mov
xchg
jb
inc
mov
jb
dec
lods
or
pop
mov
add
jne
and
mov
pushf
test
cmp
add
xchg
lea
sti
or
xchg
mov
inc
adc
dec
mov
or
js
adc
rclb
sub
pop
sub
and
mov
daa
add
add
shll
sub
inc
jl
test
pop
inc
jl
sub
push
popa
and
inc
neg
movsb
dec
shrb
jo
push
push
lods
fstpl
call
ljmp
aam
call
and
mov
sub
adc
popl
dec
jns
push
mov
push
mov
fsubr
out
add
adc
inc
adc
ss
add
enter
dec
insl
push
push
cmp
fidivl
xor
repz
sub
inc
out
dec
mov
arpl
lock
dec
xchg
repz
aam
ret
adc
push
ret
dec
xor
dec
add
movsb
imulb
inc
iret
sbbl
or
loop
dec
pop
adc
xor
xor
lods
pop
nop
adc
xor
xorl
cmp
mov
cmp
xor
pop
nop
and
sub
sub
testb
sub
sub
xor
cs
mov
sbb
test
sbb
xor
jp
and
inc
inc
and
cmp
inc
cmp
das
and
inc
and
cmp
dec
test
dec
sbb
nop
fistpll
test
push
or
mov
dec
and
cmp
enter
and
add
and
dec
enter
push
dec
jno
add
cmp
or
jo
cmp
test
mov
bnd
cmp
imul
jl
cmp
imulb
enter
test
aas
nop
or
out
mov
and
jns
or
mov
repnz
sbb
addb
pop
or
pushf
sub
pop
nop
mov
mov
pop
inc
movsb
and
mov
or
add
movsl
push
inc
shlb
cmc
dec
sar
dec
test
call
dec
out
pushf
bound
adc
push
sub
je
scas
mov
in
or
sbb
das
xor
xchg
fs
mov
add
insb
and
std
mov
in
inc
mov
shll
add
ss
xor
lea
cmp
xchg
fnstcw
xchg
inc
inc
jne
nop
inc
and
and
dec
sbb
xor
push
add
ss
pop
jge
xchg
shll
xchg
and
lret
enter
mov
add
insb
je
cwtl
sbb
js
xchg
jl
jbe
xchg
mov
add
mov
adcb
and
mov
es
nop
and
fs
xor
xchg
and
pushf
or
inc
xchg
movsb
xchg
enter
les
mov
xor
xchg
push
add
push
out
aam
rcrl
inc
sbb
clc
or
fisubrs
test
inc
inc
and
xor
rclb
pop
cld
push
cmp
push
js
adc
push
jbe
enter
pop
shlb
test
adc
cmpsb
js
mov
inc
rorb
or
cmp
lds
adc
adc
mov
and
movsb
push
adc
adc
adc
cmp
dec
xor
sub
sub
adc
movsb
xchg
sbb
mov
jl
or
push
and
shlb
adc
test
scas
adc
mov
ja
sub
mov
pushf
ret
fldt
cmpsl
sub
hlt
jecxz
ret
adc
cmp
int
js
adc
xor
mov
push
arpl
adc
mov
cmp
mov
or
fs
popf
jo
out
adc
aad
imul
jnp
imul
adc
jl
mov
and
jmp
or
inc
inc
cmp
mov
test
test
out
jne
loop
or
mov
sahf
lods
je
pop
lock
pushf
and
aaa
cltd
push
mov
lods
jns
or
out
fs
outsb
add
imul
lods
mov
mov
loop
adc
pmulhuw
sbb
dec
mov
sub
in
xor
or
jbe
push
pusha
pop
sbb
aas
sbb
lea
or
sub
mov
xchg
inc
fwait
push
cld
test
enter
hlt
or
add
pop
adc
jns
mov
adc
testl
push
nop
fdivrs
test
sbb
sbb
lcall
dec
icebp
or
and
dec
fs
push
in
sub
and
inc
sbb
call
sbb
ud2
enter
lock
and
out
sbb
test
sub
push
in
das
and
jns
pop
sub
je
and
inc
push
jg
sahf
inc
sub
jp
sar
add
idiv
jno
or
imul
mov
jg
adc
icebp
push
jg
sub
in
or
and
and
inc
and
mov
outsl
cltd
xchg
jg
and
jo
push
add
push
adc
push
dec
fmul
mov
jns
notb
ret
pop
daa
push
lods
sbb
nop
adc
shrb
sbb
or
push
inc
add
nop
lret
mov
xor
mov
in
or
push
aam
in
fsubs
addl
loop
xchg
xchg
dec
pushl
cmpl
orb
pop
or
lea
mov
push
add
mov
in
add
call
push
mov
jp
mov
jp
mull
cmp
lahf
cmpsl
jle
outsl
xchg
out
mov
call
cmp
jg
xor
add
mov
dec
mov
jno
rorb
mov
pminub
std
les
xchg
sarb
js
push
fdivr
xchg
scas
cltd
xchg
stc
pop
in
sbb
dec
out
inc
mov
adc
fsts
push
in
mov
push
es
inc
sbb
jmp
adc
dec
scas
sub
pop
sub
cli
add
sbb
adc
aas
movsl
aad
fucomip
inc
mov
pop
or
xchg
jp
adc
sub
pop
ret
mov
adc
hlt
mov
test
negb
mov
ret
adc
jl
rclb
adc
mov
test
sbb
mov
adc
push
jl
fmuls
loope
mov
sbb
mov
mov
aas
aad
enter
push
push
fcoms
dec
int3
hlt
dec
sub
add
and
mov
mov
mov
call
pop
adc
fsts
sub
rclb
and
imul
dec
or
or
stos
add
adc
repz
out
call
adc
add
mov
add
ret
cs
xchg
cmp
cmp
lea
cmp
lcall
cs
adc
or
pop
int3
aaa
pop
jmp
subb
mov
decl
and
xchg
out
int3
jg
sbb
adc
push
jp
mulb
adc
orl
mov
call
loope
mov
push
fbld
mov
push
or
pop
imul
dec
lcall
aaa
or
fwait
sub
adc
mov
and
mov
lret
and
adc
loope
adc
dec
dec
pop
jo
mov
ja
and
movsb
adc
dec
sbb
lods
inc
test
hlt
dec
jae
sub
inc
out
fldz
das
incb
mov
sbb
dec
push
fwait
jle
int3
xor
pop
cld
test
push
xor
mov
sbb
aas
dec
adc
inc
adc
dec
and
sbb
cmp
add
icebp
or
or
sub
push
pusha
clc
std
inc
xchg
das
ja
insl
or
bound
and
and
ret
popf
xor
ret
popf
lret
adc
jge
push
adc
push
shll
mov
jmp
mov
imul
or
sub
hlt
notb
inc
inc
cwtl
pop
and
leave
add
add
xchg
rol
or
push
je
popf
rorb
and
hlt
inc
pushf
and
ss
ffreep
das
mov
mov
push
jb
test
xchg
add
and
rcll
add
sqrtps
loopne
xchg
pusha
or
das
dec
nop
adc
test
jo
push
pop
lea
hlt
xchg
and
mov
lock
cwtl
pop
and
adc
pop
test
out
dec
push
pop
xor
lret
cmp
mov
insl
and
mov
mov
mov
imul
pop
roll
push
pop
mov
add
add
pop
jne
pop
cmc
lret
mov
mov
movsl
mov
mov
dec
jmp
ficoms
mov
mov
cld
dec
and
inc
or
mov
cmp
sub
sbb
add
mov
push
add
jl
jo
xor
gs
add
dec
push
add
mov
jle
in
push
adc
xchg
adc
lods
sub
and
push
and
push
int3
mov
aad
out
test
dec
adc
je
cmp
inc
xchg
addr16
xor
xor
mov
ud0
imul
or
sub
mov
jg
mov
repz
jecxz
dec
cmp
inc
js
add
aaa
xor
dec
mov
cmpsb
lock
popw
cmpsb
leave
fsubl
jb
js
fs
daa
xlat
inc
je
stos
fisubl
bound
dec
inc
add
add
xor
inc
mov
adc
loop
add
mov
sarl
cmp
adc
pop
jmp
pop
ds
xchg
test
or
mov
and
cmp
mov
and
mov
and
leave
add
inc
cmp
test
add
jb
test
shlb
lods
or
add
jae
adc
jo
xor
push
enter
push
xchg
sbb
nop
test
bound
lret
xchg
test
sub
cltd
push
sub
push
or
incb
repnz
push
test
adc
inc
jmp
cmpsl
sub
dec
mov
pop
gs
push
out
mov
clc
mov
cmp
cmp
sahf
cmp
call
adc
mov
mov
inc
add
notb
int
lahf
sar
inc
loop
pusha
scas
or
shlb
out
enter
adc
xchg
push
pop
cmp
js
push
fdivrs
lds
das
pop
mov
or
push
int
dec
mov
push
add
xor
push
xchg
and
mov
sbb
lock
jle
mov
lock
ja
imul
push
mov
das
test
jb
insl
loop
jl
or
stc
push
repnz
mov
xchg
and
push
mov
jg
add
in
and
leave
dec
sub
or
xchg
lock
xchg
test
jae
or
push
dec
out
addr16
add
mull
dec
or
mov
and
adc
mov
nop
add
push
add
sub
and
loopne
cld
mov
jo
push
and
and
inc
mov
test
or
pop
leave
test
adc
mov
clc
shll
sub
adc
xor
xchg
mov
std
add
add
mov
ja
mov
xchg
jp
clc
imul
inc
ja
fimull
cmp
mov
repnz
ret
mov
or
ds
mov
mov
mov
cli
aam
mov
dec
sti
mov
das
jl
fmull
data16
mov
mov
sbb
addb
adc
adc
mov
inc
pop
outsl
jmp
sahf
push
icebp
rcl
jl
mov
mov
insl
js
jmp
lret
int3
add
adc
xor
and
jg
mov
xor
cmpsb
gs
shl
cld
hlt
dec
call
data16
add
xchg
aas
and
nop
xor
add
or
add
ret
add
sub
xchg
push
sub
cld
cmp
nop
adc
clc
add
add
jbe
or
rcll
imul
jne
push
sub
leave
pop
iret
mov
pop
outsb
mov
hlt
in
jno
lods
xlat
ret
adc
jne
out
pop
adc
das
push
and
jns
cmp
cld
loopne
cmp
call
adc
out
mov
inc
xchg
jno
enter
mov
mov
and
test
pop
nop
xchg
dec
stos
test
mov
xor
or
push
insb
mov
and
push
sbb
enter
call
out
sbb
sti
ret
sbb
lcall
je
xor
lock
push
nop
ret
lea
push
and
push
or
lods
mov
xchg
movsb
cmpsb
ret
test
adc
xorb
adc
xor
mov
pop
jl
loopne
or
adc
push
push
pop
push
cmp
clc
lea
adc
out
push
push
push
jle
jno
mov
in
aaa
push
cmp
sbb
cmpsb
gs
jl
test
xchg
jl
inc
jmp
xchg
hlt
loop
xor
shll
dec
pop
jge
push
stos
sub
adc
pop
scas
cmp
aad
lds
in
push
cmp
push
aam
xchg
sub
js
mov
mov
outsb
fsubl
cld
jb
hlt
ss
or
aad
mov
push
int3
dec
idivl
test
mov
jne
test
push
adc
popa
ljmp
outsb
xor
mov
mov
ror
mov
aam
scas
cmpsl
sbb
orl
and
xlat
data16
popf
hlt
pop
dec
repnz
jl
dec
sbb
push
add
mov
mov
movsl
cmpsb
or
mov
push
addr16
ljmp
hlt
and
or
add
or
clc
sub
or
out
push
fs
leave
add
mov
gs
or
sub
jne
adc
cmp
and
inc
jns
mov
sti
mov
stos
fnsave
mov
adc
sub
je
jg
jle
dec
push
add
and
subb
in
addr16
mov
movsb
or
bound
xor
mov
test
fmulp
insl
xchg
cmp
push
std
adc
jmp
adc
xchg
fadds
lods
xchg
xchg
ljmp
loop
out
psubsw
or
dec
sbb
push
loopne
lock
loop
jmp
lcall
inc
mov
adc
fists
js
cmp
dec
or
out
and
enter
data16
pop
xchg
or
pop
lods
cld
in
out
sub
pop
adc
bound
stos
fmuls
pushf
mov
leave
fwait
and
jnp
push
test
or
les
stos
mov
clc
test
pop
and
in
les
sahf
cmpb
xor
dec
call
mov
push
les
adc
scas
or
xchg
nop
add
cld
dec
push
jne
xchg
or
or
pop
mov
cmpb
sub
or
repz
xchg
daa
and
sbb
adc
push
aas
lahf
aam
pavgw
loop
notl
je
dec
push
push
sarb
pushf
inc
movsl
push
orl
sbb
jne
pop
mov
imul
mov
add
and
std
and
mov
cmp
pop
adc
jl
ljmp
push
in
jle
jge
and
dec
sub
dec
push
mov
or
xchg
daa
inc
and
inc
or
repz
push
and
adc
push
mov
negb
cmp
add
les
or
dec
stc
ja
mov
xor
and
and
lahf
cld
xor
jbe
mov
sbb
xor
adc
lods
jecxz
jmp
bound
insb
xchg
or
decl
cmp
inc
jge
xor
mov
or
cwtl
push
sarl
inc
cltd
sub
mov
push
jbe
test
adc
mov
addr16
les
icebp
sbb
pop
adc
movsb
dec
xor
daa
jbe
xchg
sub
dec
and
call
sub
or
jmp
sub
push
in
jnp
jns
or
pop
inc
dec
mov
inc
and
xor
gs
xor
dec
adc
push
add
sub
jmp
mov
and
adc
rolb
adcl
test
ja
mov
pushf
cmp
or
mov
inc
mov
int3
jo
repz
xor
lahf
xor
and
pop
pushw
mov
xorl
jbe
ljmp
andb
mov
ret
scas
mov
cmp
rorl
clc
inc
or
or
inc
dec
into
add
xchg
mov
push
mov
jp
enter
push
pop
add
push
enterw
adc
jg
int3
and
jbe
inc
sub
orb
movl
clc
push
repz
dec
shl
std
xor
lods
data16
sbb
into
rcr
and
test
dec
fs
dec
xor
into
dec
pushf
and
sbb
push
pop
sbb
sbb
pop
in
cltd
and
clc
stos
loope
data16
gs
lods
mov
adc
or
sub
sbb
xchg
hlt
inc
filds
icebp
aas
std
or
cmpsb
xor
bound
fsubs
xchg
xchg
loope
cmp
push
dec
mov
lahf
clc
jle
nop
adc
pop
cmp
push
mov
lret
call
xor
mov
in
pop
in
pop
mov
lock
xchg
fildll
dec
dec
mov
fcompl
rcrl
mov
sub
bswap
inc
sub
cmc
les
or
and
and
hlt
dec
push
add
inc
das
jmp
dec
icebp
ds
cmp
xor
cwtl
lock
stos
leave
jl
rcr
cmp
lahf
and
dec
mov
sub
clc
inc
inc
sub
and
push
dec
inc
adc
mov
jmp
and
inc
sub
jg
mov
pop
fs
es
jp
push
out
jae
dec
sub
test
jge
add
mov
repz
and
xchg
push
push
ss
stos
fwait
inc
xor
xor
ficompl
sbb
jae
or
je
rorb
jbe
test
sti
adc
js
andb
jns
mov
test
mov
lods
outsb
add
cmp
xlat
and
ds
mov
add
jecxz
sub
stos
fs
or
inc
jmp
sub
adc
or
enter
jecxz
stos
test
repnz
imul
jmp
ret
push
and
leave
xchg
loope
mov
pop
hlt
adc
mov
int3
and
lods
inc
scas
scas
mov
dec
mov
mov
mov
mov
xor
mov
adc
ret
data16
cmp
leave
cwtl
cmpsl
sbb
sbb
adc
jmp
dec
dec
dec
add
inc
add
adc
and
sbb
mov
ret
jge
adc
stos
xor
sub
dec
inc
hlt
inc
aas
add
xor
cmp
inc
inc
jbe
cli
ljmp
jae
cltd
dec
andl
jp
push
cmp
rcrb
daa
push
sbb
inc
adc
ljmp
add
mov
jbe
dec
lret
xchg
in
jmp
jne
dec
ret
lock
inc
inc
cmpsl
mov
orl
roll
loop
xor
push
add
mov
test
xchg
loop
cli
lret
arpl
xchg
inc
mov
out
shll
mov
and
imul
test
data16
inc
xchg
or
add
sub
test
shl
push
loopne
push
push
shlb
daa
and
xor
ror
push
mov
and
fadd
adc
dec
and
fcoml
stc
mov
orl
push
lods
push
and
out
pop
push
push
dec
push
movsb
push
sbb
push
stos
sbb
inc
mov
add
inc
and
es
and
popf
pop
add
lea
or
sbb
sub
aam
mov
outsl
pop
mulb
shl
int
das
out
add
retw
in
into
fdivrl
cld
sub
in
dec
jle
xor
lods
enter
push
das
testb
out
sub
in
int3
popf
les
xor
in
xor
xor
cwtl
or
in
pop
or
in
lcall
pop
shrl
hlt
xor
shll
and
cli
fcoms
jmp
xor
in
and
cmp
and
pop
lods
popa
jmp
pop
aad
xorb
and
mov
loope
adc
mov
mov
jmp
pop
mov
jp
cmp
xor
fists
adc
es
xchg
sub
xchg
jno
aas
or
popf
scas
dec
call
test
lock
scas
cmp
xor
sub
mov
mov
or
adc
std
cmc
lahf
pop
and
inc
mov
nop
stc
ret
lret
and
dec
cmp
xchg
mov
outsb
inc
sti
push
lds
scas
fldl
cltd
cmp
cs
bound
xchg
aas
lods
xchg
sbb
add
mov
ret
sub
cmp
jo
sbb
shlb
je
scas
lods
jo
add
lea
cld
sub
or
mov
jo
push
mov
pop
xchg
lock
cmp
xor
hlt
jnp
sbb
test
nop
sbb
jns
xchg
mov
jno
aas
xor
inc
sub
adc
clc
mov
xchg
fisubrl
je
movb
mov
and
inc
jg
mov
push
sub
inc
cwtl
cmp
mov
insb
push
inc
mov
xor
or
aaa
push
sbb
andb
subb
inc
test
jl
xor
or
inc
xor
sbb
and
xchg
xor
add
inc
or
adc
xor
xor
adc
pop
inc
test
push
adc
inc
loop
pop
dec
xlat
mov
dec
pusha
jo
inc
test
sahf
inc
adc
lds
jnp
xchg
cmp
fadd
call
dec
jg
in
mov
out
sub
dec
sub
and
sbb
mov
fs
cmp
push
adc
dec
inc
cmp
jno
add
inc
sub
add
inc
mov
movsl
push
sbb
add
push
mov
sti
cmp
outsb
dec
test
out
test
dec
or
xlat
shll
in
adc
jnp
jmp
in
ja
xor
ss
mov
push
jle
xchg
popf
stc
jo
call
mov
push
imul
push
cmp
push
aaa
and
inc
stos
cmp
mov
int3
push
sti
inc
jp
inc
inc
imulb
pushf
xlat
xor
addb
mov
or
mov
test
fadds
inc
movsb
sahf
popa
fs
sub
sbb
push
mov
adc
enter
adc
xor
insb
mov
push
adc
sbb
test
pop
mov
or
adc
and
call
js
out
ret
mov
jge
mov
popf
or
pop
jmp
adc
or
add
pop
cmp
andb
adc
jns
mov
out
jno
mov
inc
fnstcw
inc
insl
xor
sub
adc
movsb
je
scas
cld
dec
mov
and
push
pop
aad
pop
adc
mov
test
shlb
ljmp
test
mov
aas
cld
adc
mov
and
push
ja
pop
lods
jne
call
sub
jnp
dec
sbb
fdivl
roll
push
inc
mov
add
jecxz
cmp
lea
push
stos
mov
inc
dec
test
movsb
cli
testl
lods
fdivr
sub
push
sbb
and
or
inc
push
mov
sbb
and
mov
adc
add
and
sub
orl
inc
rorl
arpl
add
adc
jmp
push
push
push
pop
push
push
pop
dec
or
inc
mov
inc
loope
cltd
mov
xchg
fstl
idiv
adc
jo
or
and
adc
pop
or
push
stos
and
imulb
or
add
div
and
cltd
sub
and
mov
fld1
mov
or
pushf
mov
jb
sub
xor
sbb
jns
dec
sbb
sub
stc
add
xor
xor
insl
push
and
mov
in
aam
push
pop
mov
inc
adc
add
jns
mov
std
and
call
sbb
jns
dec
jge
pushf
or
cli
sub
cli
sub
pop
jl
cmp
mov
mov
adc
hlt
mov
push
mov
cli
adc
and
mov
mov
test
inc
inc
sbb
shlb
sti
cltd
inc
adc
call
jns
stos
add
lcall
dec
adcb
push
fs
xor
pop
sar
cmpsl
adc
push
inc
jmp
xlat
add
jmp
clc
xor
sub
jnp
test
or
and
push
cmpl
pop
adc
outsl
mov
inc
popl
daa
nop
cmp
fisttpl
pop
jle
add
inc
adc
or
pop
leave
cltd
or
sub
push
add
test
add
add
pop
clc
or
or
and
dec
or
push
adc
adc
adc
xchg
cmp
sahf
rolb
mov
dec
imul
and
testl
mov
lods
and
xchg
fs
mov
push
fwait
jg
add
insb
xchg
int
out
pop
mov
jle
pop
xchg
sbb
or
stc
xchg
or
mov
sbb
jmp
dec
and
dec
pop
mov
mov
or
xchg
mov
jge
mov
jbe
pop
je
jecxz
sti
roll
push
inc
adc
mov
in
repnz
adc
push
push
dec
clc
gs
sbb
and
xor
or
jb
push
xor
dec
xor
fidivl
test
add
add
add
xlat
jmp
jle
xchg
pop
xchg
pushf
leave
pop
pop
xor
pop
cmpsl
sub
and
bound
ret
adc
mov
shlb
leave
cmpsb
lock
movlps
pop
xchg
rcl
cwtl
or
rorb
out
test
mov
add
jg
ret
sub
push
mov
or
inc
jmp
dec
jge
sti
aaa
jl
outsl
icebp
and
push
fs
xchg
inc
jmp
push
add
add
dec
and
pop
jmp
mov
cmp
add
dec
sub
or
mov
xor
sbb
mov
in
add
aam
push
daa
cwtl
pop
adc
mov
out
out
push
push
jmp
sub
xchg
jne
test
pusha
pop
scas
and
or
lock
sbbb
add
daa
jmp
or
insl
cmp
or
pop
imul
daa
hlt
add
mov
jb
clc
xchg
and
lock
push
aaa
xor
xor
das
mov
hlt
adc
jmp
dec
jg
outsb
mov
test
movsb
xlat
imul
xchg
imul
add
out
mov
ja
pop
decl
fnstsw
pop
push
fdivrl
imul
mov
inc
lods
lahf
adc
daa
jne
xchg
inc
push
jmp
or
and
mov
mov
inc
adc
lret
inc
into
or
pushf
sti
cld
addr16
cmp
insl
stos
hlt
jmp
mov
fadds
scas
aas
ret
scas
mov
jecxz
inc
cwtl
adc
clc
movsl
mov
nop
ljmp
sub
sbb
adc
out
xchg
and
inc
data16
mov
stos
adc
or
add
add
aas
add
add
add
or
or
mov
or
mov
dec
fwait
lods
jnp
inc
test
mov
lds
lea
pop
lahf
dec
mov
and
ds
and
mov
push
je
test
inc
jmp
ret
out
cmp
call
mov
xchg
xchg
mov
subl
imul
and
mov
dec
lea
xlat
cmp
inc
cmpsb
inc
xchg
lods
hlt
mov
adc
mov
arpl
testb
push
cltd
ret
mov
or
sub
and
push
sub
pop
mov
test
sbb
pop
in
push
xchg
xlat
in
andb
mull
adc
adc
add
nop
dec
mov
push
push
and
sbb
dec
inc
push
or
or
push
inc
adc
xor
xchg
xor
movb
pusha
int
repnz
roll
sahf
das
mov
sbb
dec
mov
sar
repnz
or
inc
pop
and
mov
push
pop
or
push
fs
adc
cmp
push
inc
clc
jle
icebp
adc
inc
push
xchg
pop
add
and
mov
inc
lock
dec
stc
xor
jmp
dec
mov
mov
pop
jno,pt
pop
jmp
jbe
ds
fsubrs
or
push
out
fwait
and
xchg
jne
out
dec
outsb
adc
into
shrl
cld
adc
rorb
scas
sbb
int3
subl
mov
fcomi
and
jne
stos
xchg
fsubrs
sbb
and
mov
lea
ficoms
aaa
imul
inc
in
mov
pop
fsubl
add
inc
stos
daa
push
cld
sbb
sbb
fistps
cmc
or
lret
jne
push
ss
adc
inc
push
incb
adc
adc
pop
movsb
nop
xor
loopne
xchg
push
cmpl
push
xor
push
push
push
xchg
mov
fmul
jo
mov
sti
add
lea
and
mov
or
and
or
roll
xor
fisubl
sbb
cld
jb
inc
fdivl
clc
xchg
adc
les
dec
xor
xor
mov
pushf
fwait
and
mov
in
adcb
mov
lock
xchg
push
jg
fcompl
jmp
sub
andl
and
mov
inc
mov
fldt
xchg
push
or
inc
pop
je
dec
fdiv
push
push
or
call
pop
fdivrs
loopne
pop
cmp
xchg
aad
adc
xor
in
push
jmp
scas
pusha
icebp
insl
arpl
pop
pop
jbe
sub
lcall
xlat
jg
adc
lahf
sbb
popl
loopne
out
icebp
loope
sbb
push
inc
adc
cmp
out
inc
or
aaa
adc
stc
adc
dec
mov
pop
mov
jae
negl
cmc
jmp
xor
lock
pop
in
mov
pop
lods
leave
je
xchg
decb
push
inc
dec
ljmp
pop
mov
bound
lret
mov
aam
dec
inc
push
and
jecxz
loopne
out
ss
cmp
into
cs
xchg
dec
fstl
jge
jo
loopne
push
jge
pusha
inc
rorb
fs
aam
scas
sub
or
mov
pop
cld
or
adc
lods
push
and
sub
or
pop
gs
dec
xor
dec
pop
xor
lret
adc
sub
call
addl
push
mov
stos
popf
aaa
xor
add
cs
shll
mov
ret
ds
mov
cmp
lcall
xlat
lret
leave
add
jp
xchg
mov
dec
xchg
xchg
mov
jl
into
jmp
repz
jge
shl
popf
jg
sar
dec
mov
pusha
mov
int3
sbb
mov
jl
jmp
fcoml
leave
scas
les
fmuls
rolb
sub
je
xor
jl
mov
js
popf
xchg
test
jb
mov
push
fadds
aaa
xchg
enter
test
cli
mov
fidivl
and
adc
jne
aad
ja,pt
cs
cmp
ljmp
mov
daa
add
frstor
adc
cli
xchg
mov
adc
xchg
jae
jmp
and
adc
jg
bound
sbb
inc
jge
sub
sub
xchg
loop
cld
push
xchg
adc
jmp
push
in
sub
in
xchg
repnz
push
insl
cld
and
mov
or
popa
lahf
out
sti
pop
in
sub
enter
cmp
adc
sub
adc
xor
xchg
std
idivb
repnz
mov
loop
jbe
shlb
mov
adc
pop
xchg
stos
xor
int3
adc
xchg
push
jmp
popf
out
inc
out
mov
push
hlt
or
mov
movsb
call
pusha
popf
jp
jbe
mov
std
imul
jnp
xchg
fnsave
jg
sahf
mov
ljmp
rorl
daa
or
addr16
push
stos
int3
shl
jns
in
call
out
add
incb
jmp
jne
sub
jnp
cld
xchg
pop
mov
dec
xchg
mov
icebp
out
lock
mov
lods
test
mov
daa
sti
fists
jmp
and
test
cld
dec
stos
cwtl
xchg
push
jo
mov
sti
jb
mov
and
shlb
rorl
inc
cmp
lret
xchg
mov
jp
add
push
adc
cltd
push
je
push
pop
lock
cmp
jg
push
hlt
jnp
or
movups
daa
push
jge
mov
push
pop
scas
pop
lods
jmp
imul
sbb
inc
int
mov
test
movsl
push
adc
mov
aam
pcmpgtb
push
jg
sub
and
aam
faddl
in
lret
pop
and
cmp
mov
lods
xchg
jp
aaa
mov
frstor
and
dec
push
add
in
cld
and
fdivl
popf
testb
sbb
in
sbb
aam
rcr
sbb
and
movl
push
mov
sbb
mov
push
int3
or
xchg
sub
sub
fwait
mov
inc
mov
and
hlt
sbb
jmp
ss
lods
jns
cmc
aas
mov
rcl
inc
enter
xchg
mov
nop
pop
fwait
add
fs
mov
xor
ja
test
xchg
les
pop
add
add
or
add
or
dec
sbb
sbb
xchg
cli
mov
dec
stc
imul
mov
jp
test
icebp
ds
lret
je
xor
pop
xchg
cmp
jge
cmp
or
stos
xor
add
mov
sub
add
mov
repz
inc
mov
xor
push
cmpb
sub
fisubl
push
push
sbb
test
adc
test
push
nop
roll
add
outsb
and
lret
ss
cmp
sahf
call
pop
xor
sub
fcompl
adcl
adc
jl
push
xor
shlb
add
sub
jg
xchg
fstp
adc
scas
arpl
inc
jns
divl
mov
bnd
out
pop
push
jo
addr16
into
mov
and
lea
ret
mov
repnz
adc
pop
jno
push
xor
or
mov
popa
mov
adc
sbb
je
mov
inc
sahf
xchg
mov
out
xchg
loopne
mov
fiaddl
cmp
fsubrs
bound
inc
add
pop
mov
and
jnp
loopne
add
jns
ret
pushf
xchg
lods
imul
scas
cmp
mov
daa
push
nop
into
cmp
mov
jne
lods
jp
jae
stc
aas
out
pop
mov
jb
inc
not
and
mov
testb
cmp
or
push
add
sti
add
mov
sub
pop
aas
pushf
push
push
push
call
scas
cmpsb
adc
mov
inc
push
mov
aas
jne
push
call
add
add
arpl
and
push
mov
insb
shll
mov
and
nop
mov
add
and
mov
lods
adc
call
in
add
xchg
cmp
xchg
inc
jmp
xchg
call
or
mov
cli
dec
adcl
or
xchg
xor
data16
push
inc
shl
push
mov
inc
push
and
adc
stos
jno
jmp
pop
dec
or
jne
mov
push
nop
cmpsl
push
cmpb
adc
xchg
shr
in
sti
and
arpl
mov
push
stos
shl
add
dec
or
jns
xchg
mov
fisubl
xchg
in
jb
pusha
mov
xchg
add
mov
movsl
sbb
repnz
push
jg
imul
xor
cmp
and
mulb
cmc
rcll
xor
loope
add
jecxz
push
ljmp
in
aam
mov
insb
adc
lret
lock
out
adc
sarl
aas
pminsw
add
loope
adc
xchg
mov
fs
push
test
pop
rorl
add
adc
adc
data16
int
daa
idivl
pop
into
sub
mov
jnp
mov
outsb
adc
jmp
push
inc
or
add
in
and
sbb
aad
dec
mov
or
jle
xchg
push
int
movsl
lods
jo
adc
push
outsl
add
mov
sbb
aad
inc
cmpsl
lret
jb
dec
mov
add
ds
jle
lcall
dec
lcall
jne
lahf
adc
sub
inc
push
jmp
sub
hlt
fs
movzbw
or
jl
mov
mov
stc
adc
std
cltd
jp
xchg
mov
xchg
or
inc
out
push
rorb
cmp
or
adc
sbb
mov
adc
and
scas
dec
xchg
push
icebp
add
pop
dec
mov
xchg
int3
nop
leave
inc
cmp
cmp
push
ja
lret
add
jno
std
call
loope
mov
or
push
es
sbb
inc
jge
xchg
mulb
push
mov
adc
or
push
pop
xchg
mov
mov
push
fs
sbb
sub
cmp
movl
icebp
ret
cmp
in
test
sub
lds
and
je
push
jmp
imul
pop
test
push
sbb
fstpl
adc
enter
fwait
cmp
mov
test
dec
sbb
mov
call
outsb
push
push
dec
fs
jb
ljmp
sbb
add
xchg
dec
adc
imul
fisttps
out
lea
clc
call
mov
adc
xchg
mov
mov
push
ss
lods
sbbb
inc
push
nop
sbbb
lret
mov
jg
jge
pushl
scas
and
insb
add
and
nop
lods
and
mov
inc
insl
cmp
xchg
inc
mov
cmp
test
sbb
inc
or
out
inc
popa
repz
call
stos
adc
dec
pop
in
inc
testb
std
loop
adc
dec
in
inc
mov
fdiv
mov
cwtl
jne
jp
leave
push
mov
inc
xor
mov
ret
push
bound
daa
or
js
or
enter
xor
or
xchg
and
enter
xor
or
xchg
and
enter
xor
xor
xchg
and
sub
insb
arpl
jo
je
js
inc
jl
adcb
xor
xchg
and
lods
xor
xchg
and
nop
enter
xor
sbb
or
xchg
and
nop
in
call
sbb
or
xchg
jo
and
or
or
adc
adc
sbb
xchg
and
sub
sub
xor
xor
cmp
xchg
clc
bound
push
inc
dec
and
enter
xor
or
insb
xchg
and
enter
xor
inc
nop
and
mov
or
xchg
and
shlb
sbb
or
xchg
and
nop
fmul
fsubl
in
call
lock
nop
clc
enter
gs
add
or
or
adc
fs
xor
push
or
xchg
and
inc
enter
xor
sbb
xor
nop
and
and
sbb
adc
adc
nop
add
and
mov
pop
mov
jl
push
testl
scas
dec
adc
dec
sbb
cmpb
pop
sub
jecxz
je
leave
cmp
mov
inc
or
fdivrs
mov
jns
inc
sbb
jecxz
add
rorl
dec
jnp
popf
fidivs
lods
rcr
push
and
fcmovu
popa
mov
ljmp
ss
or
call
in
mov
call
jne
aam
sub
and
hlt
scas
je
cli
xchg
loop
mov
sub
mov
cmp
je
fstl
ficoms
sub
jns
fcmovu
xor
or
jns
push
lods
das
cmp
je
jne
fsubrl
mov
inc
int
push
dec
dec
adc
cmc
rcll
leave
dec
lock
ret
pop
jp
or
std
hlt
arpl
inc
or
push
movsl
xchg
jne
dec
aaa
icebp
xchg
cmp
ljmp
addr16
xlat
testb
jo
leave
cmc
icebp
es
inc
cmp
dec
testl
xchg
icebp
pop
mov
xor
js
add
jne
dec
push
push
outsb
imul
daa
or
pop
icebp
cmp
sarl
mov
int3
stos
cmp
dec
adc
mov
inc
pushl
sbb
test
rcr
mov
es
jmp
xchg
pop
ds
jo
xor
nop
rcrb
xchg
pop
push
movsb
add
adc
call
scas
popf
sbb
scas
inc
and
or
lahf
inc
adc
pop
les
pop
ja
push
es
jg
adc
xor
inc
insl
or
add
loopne
rorb
lahf
ret
jo
cmp
or
and
adc
roll
push
push
mov
js
lea
repz
movsl
mov
hlt
pop
inc
adc
push
std
adc
and
insb
xchg
inc
subb
insl
in
adc
mov
jmp
xchg
xor
mov
sbb
cli
pop
jg
cmp
pop
movsl
sub
sub
xor
cmp
adc
pop
jno
outsl
mov
repz
mov
insl
mov
shlb
mov
jmp
les
lcall
stos
cwtl
lock
push
sub
mov
leave
dec
fisubl
dec
sti
cwtl
pop
and
dec
mov
cld
mov
jp
shrb
cwtl
icebp
inc
pusha
fsubrs
cmp
and
dec
jl
cmp
dec
and
push
lods
ja
adcb
sahf
popa
mov
stc
add
mov
cmp
cmc
lods
and
mov
and
idivb
ja
mov
outsb
das
and
in
jae
push
jo
aaa
xchg
mov
mov
sub
xor
fisttpll
jb
pop
sub
aam
in
or
add
movsl
push
sbb
into
lret
push
mov
or
sbb
scas
jecxz
int
stc
cmp
sub
iret
pushl
enter
sbb
mov
mov
pop
adc
sub
mov
sbb
cmp
cmp
xor
sub
fcoml
pop
mov
aas
bound
mov
jae
push
pop
adc
or
outsb
sbb
jmp
pop
inc
jne
ficoms
clc
ficoms
fstpl
adc
sbb
add
jne
shlb
jmp
test
dec
sar
xchg
and
lret
sub
dec
int3
sbb
dec
push
adc
and
push
cmp
in
fldcw
inc
stos
jns
add
mov
pusha
adc
xchg
loop
or
mov
cmpsl
dec
xchg
iret
sahf
adc
adc
adc
pusha
sbb
int3
in
nop
inc
or
test
cmp
es
sub
sbb
idiv
inc
nop
or
sbb
adc
mov
or
xor
and
dec
push
adc
add
add
add
dec
pop
inc
ret
or
adc
lods
add
pop
add
popa
push
out
mov
sbb
insl
mov
xor
mov
add
fdivrl
cld
aad
loopne
xchg
sub
mov
pop
sub
sbb
mov
repnz
mov
add
in
push
insl
push
mov
hlt
movl
test
fs
stc
std
in
leave
mov
pop
add
insb
push
arpl
cmp
or
outsb
add
pop
adc
in
pusha
add
jb
addr16
add
add
add
std
test
or
insb
cwtl
mov
inc
leave
mov
lods
jecxz
fdivs
jne
filds
add
shrl
cmp
ficoms
nop
xlat
enter
sarb
and
les
iret
femms
movsl
mov
sub
mov
or
and
or
mov
jl
das
adc
pop
stos
sbb
data16
push
jno
add
mov
adc
pxor
mov
push
movsl
add
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
add
hlt
push
imul
jge
add
xor
dec
xchg
cli
jnp
movsl
add
shl
adcb
pmaddwd
fnstenv
mov
ljmp
mov
bound
sub
rorl
pop
popa
mov
into
inc
sub
add
inc
movsl
fisttps
xlat
xchg
fadd
les
shll
jmp
fldcw
inc
mov
lods
sarb
add
in
add
pop
dec
add
stos
leave
jl
fnstsw
cmp
push
xchg
daa
adc
or
leave
and
test
add
aam
mov
add
stc
ficomps
leave
fldcw
jne
add
mov
test
pop
cmp
or
mov
mov
in
add
loop
add
cmp
ljmp
add
add
push
fdivl
or
arpl
test
fs
ds
insl
or
loopne
push
in
decl
or
mov
pop
jge
inc
add
lock
add
push
inc
push
imul
xorb
insb
sbb
shrb
sbb
incb
loopne
rorl
add
dec
frstor
fistpll
mov
pop
aad
mov
call
jle
shll
add
fisttps
addr16
cmpsb
add
push
mov
dec
ss
add
sub
scas
pop
testb
pusha
jp
inc
ret
out
in
fbstp
cmp
orb
inc
add
mov
shrb
ss
push
add
inc
or
and
es
mov
mov
pop
add
cmpsl
incl
xlat
ret
shlb
sub
scas
ficomps
clc
fs
add
repnz
pushf
mov
xchg
insl
add
add
jmp
addr16
jb
push
loopne
add
jp
loop
scas
sub
or
fwait
mov
xchg
or
mov
fdivrl
fisttpl
jg
push
roll
clc
mov
push
pop
int
mov
mov
outsl
out
or
jle
push
incl
lret
pop
or
adc
sahf
add
imul
add
loop
mov
xlat
push
addl
mov
add
popa
cmpsl
notl
add
dec
inc
imul
dec
push
scas
fcompl
fldenv
filds
cmp
fdivs
push
cmpb
jg
mov
jmp
sbb
mov
lret
mov
add
ss
fadds
xlat
int
sub
push
mov
jp,pn
mov
dec
popa
les
add
push
sub
aaa
mov
or
filds
add
sub
add
inc
push
cmp
das
cmp
jbe
pop
xor
xor
je
cmp
and
lret
push
ja
jmp
dec
gs
aad
mov
jns
jno
pop
mov
push
movsl
add
xor
cmc
ret
pushl
mov
ret
push
or
and
or
and
sbbb
push
aas
inc
mov
or
bound
cmp
inc
inc
or
data16
mov
adc
jb
popa
insl
and
and
aad
sbb
inc
push
insb
imul
addr16
loope
push
adc
push
or
adc
mov
int
inc
and
xchg
mov
enter
movb
aam
push
sbb
gs
jns
push
leave
aam
cmp
roll
pop
pop
out
ds
jo
inc
or
push
lds
fs
push
gs
pop
fs
jns
dec
fisttpll
scas
or
adc
stc
fucomi
jne
dec
dec
push
and
es
aad
pushf
pop
push
sub
cmp
mov
push
adc
je
sbb
mov
sub
add
jo
imul
cmp
icebp
push
or
popa
sbb
andb
cmpsb
xchg
cmp
jl
sub
and
pushf
es
cmpb
xchg
xor
jl
pop
jg
cmp
add
inc
sub
outsb
or
lret
bound
jb
sbb
jns
loop
xchg
icebp
add
push
inc
pop
jmp
mov
outsl
xor
adc
or
es
cmp
push
dec
adc
dec
jae
inc
test
dec
sub
push
outsl
cwtl
test
mov
inc
push
xchg
or
jo
out
dec
fmulp
jb
loopne
scas
fucomp
jecxz
sub
lods
mov
mov
and
shl
sub
ret
sub
inc
adc
sbb
shr
xchg
fs
mov
or
or
dec
pop
dec
pusha
fcompl
inc
dec
scas
sub
and
push
mov
sub
test
sub
in
js
cltd
cmp
fisubrl
bound
rolb
mov
push
inc
xchg
or
push
dec
sub
push
sub
inc
and
dec
dec
or
arpl
pop
sub
dec
xorb
or
shlb
mov
adc
iret
gs
xor
daa
lea
sub
decl
push
hlt
mov
repz
sub
jo
data16
mov
inc
sub
nop
sbb
repnz
mov
addr16
sti
in
pop
mov
mov
ja
and
insb
sub
pop
pop
dec
inc
inc
push
inc
aaa
inc
inc
push
push
inc
mov
cmpsl
addr16
cmp
adc
dec
cs
inc
push
dec
loopne
gs
adc
push
out
inc
push
jle
or
jmp
fs
xor
sti
dec
loope
cmp
mov
mov
xor
jno
fsubr
add
xor
imul
arpl
xor
dec
bound
fisubl
insl
popf
cmp
outsl
or
mov
jle
movsl
and
mov
imul
or
dec
and
sub
inc
sub
pop
loop
and
dec
enter
cmp
and
insb
and
adc
adc
imul
pushf
sbb
loope
dec
and
push
cmp
aaa
jae
enter
cs
mov
jo
clc
pusha
lods
mov
jae
popa
push
sti
mov
jae
js
pop
cs
push
dec
mov
outsb
lock
xlat
and
xchg
and
add
rorl
inc
outsb
sbb
xor
and
mov
fs
movaps
cmp
push
mov
xchg
int
cmpsb
dec
pop
mov
sub
aaa
xchg
data16
jo
dec
out
cmpsw
push
sbb
les
data16
and
in
clc
hlt
das
repnz
lock
loope
add
roll
js
or
and
std
lods
imul
fs
test
push
cmpsb
sbb
cmp
movsl
fwait
or
lret
lds
aam
inc
dec
and
das
jb
in
loop
adc
insb
outsb
mov
push
jo
xchg
inc
sbb
sub
adc
dec
bound
rcrb
lcall
cmovnp
pop
dec
adc
jmp
adc
mov
inc
jp
push
sarb
jg
test
lods
dec
data16
and
jne
arpl
xor
fs
rcrb
test
jno
inc
xchg
push
aam
call
pusha
mov
mulb
jge
jb
xor
dec
es
nop
ja
push
ficomps
sub
jecxz
add
inc
sub
push
push
push
add
or
jns
cmpsb
shll
mov
xchg
js
xchg
cwtl
pusha
xchg
lods
and
mov
dec
test
adc
mov
mov
inc
mov
js
mov
or
dec
or
dec
nop
repnz
pop
push
jno
xchg
xor
lahf
data16
leave
adc
dec
or
into
dec
mov
shl
repnz
bound
push
cmp
aaa
lods
loope
iret
jo
push
cmp
xor
gs
repnz
ds
jo
les
hlt
fimull
mov
addr16
cmc
inc
pop
in
inc
add
adc
clc
or
inc
or
cmp
inc
inc
test
inc
cmp
inc
dec
test
dec
cmp
dec
mov
js
dec
xchg
out
pop
mov
inc
dec
daa
sbb
push
pop
mov
and
dec
cli
push
mov
adc
aam
inc
mov
stos
pop
insl
fsubrs
sub
nop
mov
pop
sub
loopne
jp
xchg
fs
and
movsb
sub
adc
hlt
bt
xchg
lods
jl
xor
je
sti
or
push
add
or
push
add
cli
add
add
inc
add
push
ret
sub
loopne
pop
jo
cmp
xor
push
pop
aam
push
xorl
add
inc
aaa
cmp
sbb
out
orb
test
outsb
push
or
iret
sub
mov
dec
je
test
out
fldenv
adc
bound
test
sub
shlb
or
and
pop
jns
or
adc
mov
xor
insl
outsl
xor
jns
jmp
mov
test
sub
mov
outsl
insb
imul
push
pop
or
call
xor
pop
adc
cmp
mov
xor
fadds
or
xor
xchg
or
adcb
idivl
inc
fisttpl
inc
dec
in
leave
jmp
dec
inc
es
dec
xor
daa
adc
xor
lret
loopne
jo
jbe
int
or
adc
pushf
or
in
ret
sub
ds
dec
shlb
pusha
adc
addr16
sub
sbb
adc
or
lods
dec
dec
push
inc
or
fwait
lahf
adc
jo
or
dec
andl
or
fldcw
sbb
dec
scas
arpl
cmc
pop
or
lret
xor
or
adc
dec
adc
cmp
sub
dec
cltd
call
ljmp
cld
stos
andb
adc
or
int
outsb
jbe
mov
jl
xchg
ds
in
mov
adc
pushf
movsb
jb
push
cmc
cli
ret
adc
mov
sbb
imul
dec
dec
inc
inc
faddl
inc
dec
dec
inc
inc
adc
cmp
adc
ljmp
jp
sbb
and
aaa
dec
push
enter
or
shr
jo
xchg
dec
sbb
add
ja
xchg
cmp
jno
adc
imul
xor
jbe
imul
jo
push
push
xor
xor
pusha
xchg
pop
mov
das
shlb
mov
clc
repnz
aam
xchg
xchg
sub
cmp
dec
out
pop
test
and
aaa
repnz
loop
shrd
push
and
xchg
sbb
xchg
push
xor
push
mov
cmp
imul
xchg
cmp
mov
pusha
mov
dec
fildll
addr16
pop
cmp
xchg
mov
push
mov
mov
xchg
sbb
mov
std
fsubrl
push
and
pop
aad
push
push
fwait
jne
adc
adc
push
push
fs
js
sbb
cmp
imul
int
or
pop
scas
dec
js
insl
out
ret
test
sub
inc
rorb
push
push
popf
leave
inc
pop
inc
jge
mov
scas
sarb
int3
push
sbb
inc
jbe
mov
push
push
popa
mov
outsb
add
loop
or
or
pushl
adcb
jo
dec
mov
push
outsl
jbe
push
idivb
jae
mov
call
inc
mov
jg
jne
or
jbe
sbbb
push
mov
mov
out
or
jo
and
sbb
fs
inc
ret
pop
jg
sub
dec
subl
hlt
imul
jp
mov
sub
mov
jne
add
and
add
inc
data16
fdivs
insl
rcll
mov
mov
shrl
and
mov
mov
jne
mov
dec
pop
inc
jno
mov
rclb
sbb
mov
ret
sbb
mov
inc
inc
pusha
into
dec
test
and
mov
cmpsl
addr16
test
in
fsubrs
dec
fnsave
cli
lret
ficomps
xchg
or
sbb
cmc
xor
xor
and
clc
inc
pop
push
in
or
push
push
mov
push
fs
push
and
test
lods
imul
or
in
repz
lods
es
pop
stos
add
mov
inc
add
aaa
or
push
push
mov
and
jl
test
jle
lahf
or
nop
sub
das
mov
mov
and
cwtl
jp
gs
sub
push
or
xchg
sbb
ror
mov
call
sbb
push
cmp
inc
and
mov
add
or
dec
pushf
pop
push
fsubp
xor
sub
adc
int
rcll
xchg
rorb
cmp
mov
xor
dec
mov
es
and
insl
pop
rclb
mov
xor
push
fs
repz
cmp
cltd
lods
call
and
je
jbe
rcll
adc
test
rcrl
in
sbb
sub
jl
adc
je
arpl
bound
shrl
adc
push
cmp
dec
cmp
push
jb
push
outsb
in
pushf
mov
adc
sbb
sahf
adc
movsb
imul
sub
sbb
aas
sub
cmpsb
loop
jle
add
cwtl
js
pop
mov
sti
sbb
lock
lods
adc
mov
lea
inc
adc
rclb
out
daa
dec
xor
fldcw
sbb
cmc
sub
imul
sbb
pusha
push
mov
out
jp
or
push
bound
adc
clc
jb
or
jg
bound
adc
je
push
mov
and
sub
dec
push
mov
subl
js
aad
jae
xchg
adc
ret
pusha
addr16
xchg
stc
lret
dec
sub
push
fs
and
fucomp
sbb
or
sti
add
jbe
dec
ja
mov
jp
adc
or
or
dec
inc
push
or
loop
in
adc
test
sbb
and
dec
inc
test
js
jo
mov
sub
sbb
cmp
int
xor
and
lods
or
repz
fildll
and
inc
xchg
das
and
mov
adc
je
mov
cli
mov
arpl
fs
adc
adc
or
mov
cmc
dec
push
xchg
xor
mov
popa
jno
test
rorl
pusha
pop
and
or
xor
mov
cmp
xor
dec
dec
enter
pop
std
mov
jo
cwtl
addl
jne
or
xor
push
jne
push
xorb
sub
and
je
or
xor
push
dec
sub
pop
inc
popf
sbb
xchg
xchg
pushf
pop
ja
push
arpl
cmpsl
shr
add
adc
add
or
arpl
push
movsb
adc
fiaddl
loop
mov
cmp
les
adc
add
xchg
xor
shlb
add
lcall
mov
and
inc
xor
mov
xorb
mov
adc
das
adc
movsb
xchg
cwtl
push
repz
insb
pop
push
nop
inc
mov
pusha
adc
jl
fs
jae
pop
gs
xor
sbb
leave
popa
shlb
arpl
insl
loopne
mov
and
mov
movsb
arpl
push
add
inc
test
jl
or
cmp
add
push
add
or
sbb
add
pop
sub
add
sbb
adcb
adc
adc
or
gs
push
and
sbbb
inc
nop
push
repnz
add
mov
dec
adc
xchg
cmp
call
or
repnz
and
add
pop
or
sbb
jo
mov
inc
xor
cmp
add
icebp
loop
mov
addl
loope
inc
adc
and
and
sbb
adc
mov
add
sub
cltd
sbb
or
dec
test
adc
add
sub
sub
and
stos
and
insb
lret
lods
in
sub
clc
jmp
ret
adc
dec
andb
repnz
cmp
inc
mov
cmc
hlt
imul
mov
add
add
add
adc
cmc
fmull
jl
pop
lock
or
rcll
cwtl
and
or
lret
sbb
xor
movsl
sbb
add
sbbb
or
out
cwtl
adc
adc
push
or
push
mov
pop
push
inc
pop
cltd
or
push
mov
mov
imul
jns
dec
inc
subl
gs
fs
je
outsl
jae
jmp
cs
out
insb
jb
jns,pt
popf
imul
gs
cs
aas
shlb
loop
push
imul
sbb
insb
xor
cs
js
ja
push
pop
je
popa
shll
sbb
fs
jae
push
sahf
jo
frstor
push
inc
addr16
outsb
sbb
jl
inc
jae
xchg
cs
sub
dec
pop
mov
insb
jo
push
sub
loopne
mov
push
outsl
add
xchg
pop
dec
mov
cmpsb
jae
inc
cmp
out
push
hlt
clc
imul
inc
mov
popf
cmp
dec
dec
inc
xor
ja
push
dec
cmp
aad
aaa
ss
jo
xchg
lock
cmp
dec
js
push
jno
arpl
data16
icebp
int3
bound
outsb
mov
insl
das
push
in
pushl
xchg
dec
xchg
inc
loopne
push
or
jo
jl
test
mov
mov
dec
rclb
call
sub
pop
aam
dec
push
clc
sbb
or
or
and
dec
xor
cmp
mov
push
and
dec
push
inc
addb
dec
cwtl
xchg
mov
mov
and
dec
in
in
and
inc
cld
add
pop
or
adc
sbb
and
sub
cmp
inc
inc
dec
push
mov
pusha
and
dec
jo
js
jl
orb
dec
mov
inc
int3
fmuls
lock
clc
mov
or
adc
sbb
sbb
and
xchg
sub
xor
cmp
and
dec
push
xchg
pop
and
insb
mov
and
dec
test
pushf
movsb
mov
dec
rclb
in
mov
adc
and
psllw
or
adc
mov
xor
dec
dec
xchg
push
and
js
adcb
and
dec
pushf
xchg
movsb
and
int3
adc
and
dec
loopne
call
cld
mov
fldl2t
or
adc
and
dec
sub
inc
dec
mov
sub
je
or
inc
mov
inc
and
cmp
xor
add
popa
insb
gs
sub
inc
add
mov
cld
and
xor
xor
lahf
jle
mov
in
pop
jb
into
loop
push
adc
pop
dec
cmp
rorb
jmp
hlt
data16
adc
push
outsb
inc
jo
mov
fs
sbb
push
aas
andl
inc
cmp
adc
mov
mov
mov
ljmp
mov
aaa
rclb
ja
hlt
xor
and
and
or
pop
adc
or
jno
jo
mov
xor
sub
test
aaa
mov
sbb
inc
xor
imulb
sbb
adc
cmp
outsl
movsb
sub
out
insl
push
or
jne
push
js
insb
mov
jno
popa
mov
cmp
movsl
or
mov
cwtl
mov
out
jno
mov
sub
mov
push
adc
rol
inc
jo
leave
bound
mov
inc
out
xor
sahf
sbb
or
ds
into
push
push
es
adc
or
outsl
cli
addb
hlt
jp
ja
cmp
or
cmp
mov
imul
js
jae
mov
jno
jp
dec
jae
jbe
js
mov
adc
outsl
mov
or
int3
adc
int3
pop
mov
nop
nop
lds
sbb
pop
jl
notl
adc
outsb
and
bound
xor
adc
push
pop
mov
out
jb
nop
cltd
ret
lds
xchg
imul
mov
sbb
push
dec
jb
jns
inc
addr16
or
fistpl
xchg
inc
pop
xchg
ret
mov
mov
xor
jne
sub
lea
test
mov
js
dec
xchg
call
push
loopne
or
sub
mov
outsb
or
inc
or
fs
fs
mov
cmpsb
and
pop
test
and
dec
adc
adcl
adc
xchg
sub
jo
movsb
adc
test
adc
aas
outsl
enter
add
push
cltd
loopne
imul
lret
aam
adc
leave
xchg
imul
stc
popa
adc
adc
adc
pusha
subb
mov
ss
call
jo
cs
mov
sbb
or
mov
cmp
out
add
or
and
outsb
and
js
sub
pop
out
fcmovnbe
and
cmp
xor
andb
sbb
jo
arpl
sbb
inc
push
leave
dec
lods
xorl
sub
and
inc
xchg
mov
inc
xchg
imul
sbbb
pop
out
cmc
cmp
cmpl
and
xchg
mov
or
sbb
mov
jg
adc
push
int3
pop
je
xor
xor
xor
pop
pusha
and
cmp
cmpb
sub
mov
in
push
inc
push
sbb
or
dec
inc
dec
rcll
push
mov
cmp
adc
dec
inc
cmpsb
inc
dec
adc
outsl
xor
test
lcall
dec
dec
stos
push
sbb
dec
or
jb
cmp
or
inc
adc
ljmp
or
aam
push
testl
fldcw
push
dec
dec
push
push
mov
mov
dec
cmp
push
push
adc
push
push
dec
sub
cmp
inc
xor
insb
loope
xor
dec
sbb
les
mov
add
push
dec
push
inc
lcall
xchg
or
inc
aas
push
dec
imul
sbb
xchg
cmp
adc
rolb
sub
push
dec
lods
adc
add
mov
les
scas
push
arpl
xchg
xlat
fiaddl
daa
cmp
dec
push
dec
cmp
call
adc
dec
data16
mov
adc
negl
jp
popl
xchg
jl
mov
je
lods
sbb
shrb
pop
or
sub
jns
cli
sti
lea
mov
enter
dec
push
leave
jle
mov
mov
cwtl
sub
push
sub
nop
int3
xchg
xchg
pop
push
xchg
dec
xchg
je
pop
jo
lock
and
bound
pop
sahf
shlb
push
in
je
or
js
outsl
jmp
ret
push
cmp
adc
jno
sub
fnstcw
lret
sub
sbb
dec
and
cmp
insl
gs
mov
mov
pushf
add
pop
jnp
fs
fnstcw
dec
jae
sub
or
xor
clc
sbb
mov
push
mov
xor
mov
cmp
xchg
scas
jb
cli
mov
mov
in
and
outsl
inc
shr
in
jbe
int3
sbb
movsl
sbb
dec
fs
mov
dec
and
add
xor
jbe
ljmp
cmpsl
dec
pop
out
dec
ds
cmp
push
js
fists
lock
pushf
push
mov
xor
fdivrs
imul
mov
mov
cmp
mov
mov
cmp
data16
das
imul
xchg
cwtl
out
popl
inc
and
inc
insb
jecxz
jo
bound
fs
xor
shll
fisttpll
dec
inc
and
pusha
cmpsl
push
cmpsb
mov
jae
insl
jne
push
daa
jns
pop
add
add
mov
and
cmp
jo
and
or
es
add
pop
push
ljmp
ja
cltd
mov
mov
aam
bound
ljmp
sub
cmp
jo
dec
in
sub
sbb
mov
pop
outsl
leave
mov
jge
xchg
pop
in
jl
outsl
icebp
cmp
sub
lock
sub
pop
popf
enter
enter
push
es
jb
push
push
fs
shlb
or
fs
pop
adc
dec
dec
adc
test
aam
xor
mov
arpl
or
and
sub
adc
xor
cs
push
sbb
add
adc
aas
mov
pop
sbb
mov
repz
and
sub
dec
cmp
xor
nop
and
mov
rcrl
pushf
movsb
adc
das
jo
fsubl
out
push
inc
mov
cmpsl
sbb
adc
adc
jecxz
push
mov
pushf
js
insl
imul
push
mov
mov
int
and
adc
pop
sub
icebp
and
push
rorb
lds
mov
or
sbb
mov
sub
push
jbe
xchg
aam
push
or
je
sbb
gs
jl
dec
or
xor
or
sub
push
sbb
fildll
or
sbb
sub
xor
sub
sbb
xor
sbb
movsb
lret
mov
and
popa
outsb
xchg
aam
sbb
mov
cmpsb
movb
or
or
xor
lods
xlat
inc
sbb
aam
andb
mov
sbb
test
outsl
push
xchg
fcomps
cmp
push
jbe
pop
or
movsl
push
lods
in
test
inc
iret
push
inc
lcall
inc
cmp
inc
cmp
jne
fisubrs
test
mov
or
insb
or
add
lds
test
mov
and
iret
mov
jmp
push
and
adc
xchg
or
nop
adc
mov
and
or
lea
add
mov
adc
movsb
and
or
dec
ljmp
push
ljmp
inc
js
in
adc
es
or
stc
mov
or
cmp
push
sbbb
dec
imul
outsb
popa
inc
outsw
jbe
scas
nop
sbb
fsubs
js
imul
das
sub
repnz
inc
inc
mov
stos
pushf
in
mov
mov
sub
rcll
int
aaa
lods
xchg
or
adc
dec
sbb
insb
aam
pop
and
xchg
sub
lods
sbb
adc
popf
mov
imul
sbb
xchg
stos
je
jne
lods
xchg
mov
repnz
lds
cmpsb
xor
mov
loop
fldcw
mov
outsb
arpl
adc
sub
pop
sub
or
movsb
popa
subps
nopl
push
push
pop
push
xchg
push
insl
inc
cmp
inc
sbb
mov
and
push
push
decb
or
cmp
test
sbb
ds
or
dec
jne
sub
mov
loopne
ficoml
mov
lds
xor
mov
inc
pusha
add
data16
jl
mov
sbb
inc
adc
aas
sbb
ljmp
scas
sub
pop
in
push
xor
fs
mov
fs
dec
push
lea
imul
jg
sub
cltd
sbb
arpl
jmp
or
andb
test
push
out
pop
dec
push
cwtl
es
adc
dec
cmp
fnstenv
mov
or
or
in
rorb
ret
jns
sub
dec
pop
lock
cmpsl
mov
jl
jl,pt
mov
jp
and
adc
add
push
std
popa
and
daa
call
sbb
sub
and
mov
pusha
idivb
lret
pop
sbb
push
cmp
loop
push
movsl
dec
push
outsl
pop
pushf
fisubrl
cmp
cltd
and
sbb
cmpsb
movsl
mov
shlb
mov
jo
xchg
scas
pusha
jb
in
inc
nop
dec
lea
jne
mov
test
lds
out
mov
popa
xchg
pop
mov
pop
xchg
or
mov
lret
test
psllw
jle
push
push
scas
cmp
dec
and
test
lods
jo
push
xchg
mov
iret
dec
lahf
cmpsl
jmp
sbb
dec
inc
pop
jge
cmp
subl
sahf
insl
xchg
jl
sub
push
mov
sub
pop
pop
and
test
stc
neg
push
mov
imul
adc
jne
or
je
test
leave
mov
dec
dec
cmp
insb
jns
stc
movsb
mov
ljmp
inc
call
inc
cmp
nop
inc
aas
es
sbb
rep
inc
lods
insb
insl
dec
sbb
add
or
pop
jl
jmp
pop
xchg
icebp
lcall
shrl
in
xchg
dec
mov
fcmovnu
sbb
jb
mov
jg
push
or
cmp
test
xchg
cmp
je
mov
call
fstl
push
outsl
jb
cmp
mov
jo
int3
in
adc
mov
jbe
mov
jl
je
mov
cmp
dec
and
or
cmp
adc
mov
push
jl
xchg
push
xor
lds
inc
adc
inc
aam
adc
cmp
push
jle
repz
pop
and
cmp
inc
adc
imul
imull
inc
call
jp
std
arpl
jnp
add
dec
adc
adc
push
inc
or
rcll
stc
pop
or
sbb
cs
mov
mov
in
movsl
imul
movsl
int
sbb
pop
adc
mov
mov
push
and
and
test
imul
adc
xor
cld
dec
lcall
shl
push
out
mov
fsubl
fs
mov
pop
mov
pushf
cmc
fnsave
and
push
dec
test
jb
ja
and
jo,pn
mov
iret
pop
inc
mov
dec
movsl
sbb
imul
fbstp
cmp
cmp
addr16
hlt
daa
and
outsl
negb
repz
out
cs
sub
dec
out
gs
call
jmp
adc
repz
imul
sub
push
inc
or
add
adc
dec
mov
call
ror
sarb
loop
or
push
mov
rcrl
dec
sub
and
fs
mov
outsl
sub
in
add
je
lret
int3
adc
loopne
jne
jo
out
ljmp
rclb
sahf
xchg
jp
cli
xlat
hlt
mov
pop
dec
repnz
xor
loop
in
scas
sub
ds
push
mov
ljmp
imul
push
mov
test
pusha
shll
fs
mov
mov
cmp
adc
fs
pop
push
sbb
xor
in
loopne
xchg
pop
sub
decb
daa
into
test
adc
mov
and
adc
xor
shll
mov
sub
cld
pop
insl
sub
or
movsl
bound
int
shrl
and
outsl
stos
loop
fisubrl
xchg
or
or
jae
aas
pop
fs
mov
mov
push
fs
and
std
fistps
cmp
test
jno
dec
aaa
and
push
sub
test
jo
xor
test
dec
push
add
xor
dec
inc
pop
gs
jbe
shlb
jl
aad
cs
popf
inc
xor
dec
sbb
inc
lods
pop
jo
jae
xchg
repnz
push
adc
dec
aas
inc
xor
fiaddl
cmp
cmpsl
add
sub
insb
test
push
add
push
add
stc
sbb
dec
or
inc
pop
imul
iret
lock
adc
cmp
cmp
mov
hlt
imul
dec
test
dec
pop
movsb
adc
nop
lock
push
sub
mov
shl
cmpsb
popa
shrb
hlt
das
cld
sarb
pop
cld
imul
pop
mov
shlb
mov
fwait
popf
push
pop
xor
enter
inc
xor
or
sub
lcall
sub
stc
aam
repnz
xchg
ds
xchg
test
dec
sarl
test
call
mov
gs
insl
xorl
jp
movsb
xchg
daa
ljmp
cmpsl
insb
cmpsl
iret
xlat
xor
jbe
xlat
or
xor
fsincos
sub
push
arpl
sbb
ret
or
lock
lods
lods
call
pop
mov
loope
imul
sub
xorb
mov
in
and
push
js
xchg
movsl
in
std
dec
jbe
xor
push
jae
mov
cmpsb
and
movsl
addl
arpl
inc
pushl
mov
sbb
clc
hlt
xchg
inc
mov
movsl
pusha
dec
jbe
out
push
dec
loop
jbe
gs
ja
cmp
jge
dec
inc
test
scas
daa
push
mov
mov
cmp
inc
shrl
inc
movsl
imul
movsb
mov
insb
in
push
cmp
leave
sub
rcrb
sub
andl
or
pop
cmp
pop
std
jl
movsl
xlat
movsl
mov
mov
prefetcht2
inc
gs
cmp
fs
rcrb
adc
adc
sub
lcall
add
push
ds
aam
fs
and
aaa
jg
jns
or
inc
sub
test
mov
push
rolb
jbe,pn
pop
sub
xor
dec
ljmp
ja
fsubrl
imul
xor
ja
and
sub
xor
fs
inc
imul
inc
mov
test
test
add
cmp
cli
test
cmp
xor
insl
adc
inc
sbb
mov
in
fs
inc
cmp
ljmp
jl
push
cs
xchg
push
jnp
pop
push
fwait
lock
xchg
outsl
add
and
pop
int
jae
stc
jns
sub
sub
pop
xor
jge
cltd
sub
je
adc
inc
xchg
adc
and
fcompl
xor
ja
int
aaa
fs
cmp
lahf
dec
add
cs
adc
inc
je
insb
loop
mov
mov
clc
jo
mov
jg
scas
jmp
xchg
add
sbb
cs
sub
fcom
sub
sub
jnp
cmp
sub
cmp
push
sbb
ja
dec
es
enter
ret
mov
adc
dec
pop
or
in
mov
js
xchg
clc
shlb
mov
nop
and
mov
cs
and
pushf
lea
sti
das
mov
clc
xchg
out
push
xchg
dec
adc
xchg
repz
cmp
push
sbb
xor
or
pop
cmp
adc
push
mov
cmpsb
insl
pop
xchg
in
ja
cmp
dec
xchg
xchg
xchg
ret
into
imul
outsb
stos
int3
and
sub
dec
jl
cli
cld
push
xor
in
mov
or
addr16
and
movsl
lds
dec
sbb
popf
and
jns
or
mov
or
jb
loope
test
cmc
insl
cmp
sub
cmp
das
inc
add
cmp
dec
jmp
sub
sarl
lret
sbb
sbb
ret
push
jmp
repnz
out
shll
adc
mov
or
mov
fstps
xor
cs
sbb
xchg
inc
int3
xchg
or
je
lret
dec
mov
sub
fstps
lahf
addr16
jnp
lds
inc
and
cmp
push
ja
je
insl
lcall
or
hlt
stos
sub
dec
test
stos
je
stos
bound
cmp
or
mov
and
sub
out
jns
sub
insl
push
rorl
mov
pop
inc
stos
ds
fdivl
or
adc
sub
aam
sub
repz
cwtl
push
test
jmp
mov
add
in
lret
sub
sbb
xchg
shrl
es
mov
push
mov
dec
jo
movsl
jns
jp
xor
js
dec
push
cmpsl
push
jnp
jp
lahf
cmp
dec
push
push
jne
jno
dec
or
or
imul
insl
jmp
fiadds
ds
leave
inc
xchg
jmp
std
data16
iret
adc
or
nop
rcrb
mov
xor
ficompl
dec
push
aas
daa
lea
loop
push
adcb
cmp
and
je
mov
sbb
or
dec
pop
mov
xor
jne
xchg
mov
ljmp
adc
ret
pop
lods
xorl
pop
sub
dec
dec
sub
dec
push
sarl
movsl
jne
or
clc
push
xor
pop
dec
push
lds
scas
pop
cmc
div
call
pop
je
xor
pop
lods
daa
and
dec
movsl
pop
mov
jmp
and
push
jbe
pop
dec
data16
shlb
pop
mov
cmp
out
inc
cmp
xor
push
int3
sub
mov
pushf
das
push
xor
sarl
push
sbb
ja
push
mov
cltd
xor
jl
shr
cmp
cs
icebp
fsubs
sbb
xchg
xchg
popf
push
lods
sub
pop
or
popa
xor
or
icebp
repnz
fbld
lret
cld
loopne
imul
imulb
out
xchg
xchg
fcompl
xchg
js
mov
jns
gs
dec
cmpsb
insl
imul
xchg
push
sahf
and
mov
sahf
je
sub
icebp
jmp
fsubr
hlt
hlt
jmp
inc
imul
scas
mov
mov
mov
fnstcw
add
insb
xchg
lcall
cmp
xlat
out
push
and
popf
dec
xchg
js
imul
aad
xor
cmpsb
in
gs
clc
inc
js
inc
adc
xlat
pop
push
cmpsl
imul
adc
aam
xlat
shrb
push
mov
mov
out
sub
data16
outsb
nop
dec
inc
cwtl
xor
push
jge
movsl
shrl
pop
jp
loopne
xchg
dec
pop
mov
lds
stos
aam
push
xchg
daa
mov
xchg
pop
xchg
mov
dec
jae
or
sbb
cmpsl
in
jns
adc
les
and
xchg
inc
scas
data16
and
mov
cmp
jae
adc
fs
arpl
pop
xor
sub
push
xchg
pop
inc
movsl
sbb
in
loope
jge
cld
or
loope
hlt
or
adc
out
and
jnp
jne
and
and
adc
adc
mov
mov
inc
in
movsl
test
mov
inc
dec
imul
lods
mov
mov
add
fs
push
daa
mov
pop
push
inc
dec
jne
xchg
xchg
push
jb
push
les
jl
and
imul
and
inc
rdmsr
dec
lods
fs
lods
pop
inc
mov
mov
test
mov
repz
adc
outsl
mov
cwtl
mov
insl
test
addr16
jne
popa
sbb
mov
adc
test
bound
sbb
jle
xchg
pop
mov
dec
add
jb
mov
dec
pushf
lahf
mov
dec
repnz
in
js
out
cmc
dec
loopne
inc
sbb
and
pop
adc
pop
cltd
mov
sub
outsl
pop
adc
or
js
pusha
xor
pop
mov
outsl
cmc
inc
outsl
sbb
lcall
and
adc
repz
push
sub
lret
sub
push
cmpsl
inc
xchg
jmp
fisttps
or
xchg
cli
leave
jl
inc
jae
shlb
inc
push
or
call
es
xor
and
cs
jnp
mov
stc
push
movsl
jbe
addr16
sbb
rorb
sbb
es
sbb
sub
push
loope
adc
and
push
sbb
test
cmpsb
loopne
ja
or
dec
popa
dec
xchg
repz
cld
movsl
pop
sti
push
gs
and
imul
aam
push
xchg
stos
dec
call
mov
xor
cmp
mov
jns
push
insb
cmp
sub
in
push
sub
lret
dec
mov
cmp
subb
xor
sub
pop
sub
jbe
lret
adc
imul
sub
dec
pop
inc
and
sub
xor
push
insl
mov
popa
add
mov
or
mov
in
push
dec
outsl
bound
cwtl
inc
jne
sbb
xor
push
dec
inc
cmpsb
adc
or
mov
pop
sbb
mov
xchg
or
pop
dec
rorb
push
jmp
xchg
sub
sbbb
inc
hlt
mov
pop
jb
inc
scas
ret
mov
subl
jae
inc
mov
lahf
dec
mov
lret
fcoms
and
adc
das
xor
sub
inc
jbe
push
xor
xchg
adc
push
leave
inc
leave
adc
sbb
dec
mov
inc
push
xor
xchg
mov
mov
mov
bound
sub
dec
enter
mov
stc
jbe
pushl
dec
inc
mov
cmpsb
js
cs
in
and
lret
push
jp
lahf
dec
fcompl
dec
jo
out
xchg
jg
pop
int
sub
inc
mov
fbstp
sub
repz
xchg
fnsave
push
or
cmp
inc
rcrl
mov
sbb
push
into
cmp
dec
xchg
xor
sub
jl
subb
dec
xor
loope
jo
out
lock
out
rorl
dec
sbb
xchg
hlt
jns
outsb
push
vpaddw
mov
or
push
mov
jle
and
jge
inc
sub
scas
in
sub
mov
push
fistpll
aad
cmp
and
pop
hlt
jg
jo
xchg
nop
jge
jns
mov
insl
ret
jmp
pop
push
dec
sbb
mov
shrb
punpckhdq
daa
jbe
push
popa
hlt
mov
sub
or
add
adc
jne
pop
cmp
sub
movsl
pusha
sbb
cmp
xlat
mov
or
adc
dec
js
andb
inc
nop
cwtl
mov
dec
mov
inc
fsub
mov
adc
or
or
adc
mov
cmp
dec
dec
xchg
push
and
pusha
insb
mov
andb
nop
xchg
pushf
and
les
int3
and
dec
fcoml
clc
shrl
inc
xchg
or
and
xor
mov
dec
and
dec
pop
mov
adc
xchg
test
mov
mov
fsubl
dec
hlt
mov
mov
sbb
dec
sub
inc
dec
mov
and
dec
js
test
nop
inc
cwtl
mov
and
dec
aam
loopne
in
inc
cld
add
push
mov
adc
and
dec
sub
xor
cmp
dec
push
mov
and
dec
js
andb
inc
xchg
mov
and
dec
rclb
in
lock
and
add
dec
sbb
xor
mov
dec
dec
xchg
push
and
jo
js
test
dec
xchg
xchg
pushf
and
adc
and
dec
fcoms
lock
mov
orl
and
sub
xor
cmp
and
dec
push
xchg
pop
and
js
adcb
and
dec
cwtl
xchg
mov
rorb
dec
in
xchg
clc
dec
and
sbb
and
sub
xor
inc
xchg
dec
and
pop
mov
and
dec
mov
test
mov
dec
aam
loopne
call
or
adc
sbb
sub
xchg
inc
and
pop
mov
and
dec
test
pushf
movsb
mov
les
fsub
mov
adc
sub
adc
sbb
and
mov
adc
dec
dec
push
xchg
pop
and
je
js
andb
nop
xchg
cwtl
and
mov
dec
aam
loopne
in
lock
mov
or
mov
cmp
dec
dec
xchg
push
and
adc
test
xchg
cwtl
and
mov
dec
aam
fsubl
call
or
leave
or
and
sub
xor
cmp
mov
and
dec
fs
insb
and
orb
movsb
dec
lods
xchg
mov
mov
aam
fsubl
dec
hlt
mov
adc
sbb
and
sub
xor
cmp
mov
and
dec
push
inc
test
lods
dec
mov
mov
aam
loopne
call
mov
adc
and
and
mov
cmp
dec
dec
push
xchg
pop
and
js
adcb
and
dec
pushf
xchg
movsb
and
adc
and
dec
lock
cld
sbb
shll
or
inc
and
xor
inc
and
dec
push
xchg
pop
and
jl
test
mov
dec
mov
inc
mov
aam
fmull
xchg
in
and
inc
cld
or
loope
js
and
sub
mov
push
and
dec
fs
insb
and
test
and
dec
mov
inc
rcl
mov
adc
and
dec
clc
mov
adc
and
sub
cmp
xchg
dec
and
pop
mov
js
test
xchg
cwtl
and
adc
and
dec
fcoml
clc
shll
inc
xchg
or
and
xor
mov
dec
dec
xchg
pop
and
push
test
dec
xchg
xchg
mov
mov
and
dec
fcoms
lock
mov
lods
dec
mov
or
adc
and
inc
dec
mov
pusha
and
pop
loop
test
test
mov
mov
aam
fcoml
in
in
dec
hlt
xchg
cld
sbb
jns
and
sbb
and
mov
adc
das
shll
dec
inc
pop
mov
and
dec
mov
mov
shlb
aam
loopne
call
add
adcl
dec
and
sub
xor
cmp
and
dec
push
xchg
pop
and
je
jl
test
dec
xchg
xchg
pushf
and
adc
and
dec
call
aaa
or
dec
mov
and
inc
cmp
and
dec
pop
xchg
pusha
and
jl
test
mov
dec
pushf
xchg
movsb
and
adc
and
dec
fcoml
clc
mov
icebp
or
mov
sub
xor
cmp
inc
push
mov
pusha
and
dec
je
les
pushf
dec
test
lods
and
adc
and
dec
call
and
and
sub
dec
inc
xchg
dec
and
pop
mov
and
dec
test
pushf
movsb
mov
dec
enter
loopne
in
clc
mov
orl
and
sub
cmp
adc
pop
dec
pusha
xchg
push
mov
movsb
dec
mov
mov
fmull
clc
pop
sbb
and
sbb
mov
xor
inc
dec
dec
xchg
push
and
je
jl
mov
dec
pushf
xchg
movsb
and
enter
fmuls
xchg
lock
aaa
add
inc
repnz
xor
push
and
pusha
push
and
dec
nop
xchg
pushf
and
adc
and
dec
fcoml
cld
add
adcl
and
dec
xor
inc
and
push
pop
mov
push
xchg
test
mov
mov
dec
rclb
loopne
call
dec
cld
mov
adcb
and
inc
sub
mov
adc
shll
dec
inc
push
pop
mov
and
dec
test
pushf
movsb
mov
int3
xchg
aam
faddl
mov
adc
addl
and
dec
and
xor
cmp
dec
push
mov
push
xchg
mov
xchg
inc
mov
mov
xchg
fsubs
in
in
hlt
mov
adc
add
adc
sbb
and
xor
cli
and
dec
pop
xchg
pusha
and
jo
mov
dec
xchg
xchg
mov
mov
and
dec
fcoml
hlt
cld
mov
and
dec
xor
cmp
mov
and
dec
fs
insb
and
mov
mov
and
inc
rcr
mov
adc
and
dec
clc
mov
adc
sbb
and
sub
xor
inc
and
push
pop
mov
fs
dec
jo
js
test
mov
mov
inc
shl
mov
adc
and
pop
adc
sbb
cmp
inc
dec
push
mov
insb
and
dec
adcb
lods
mov
aam
fsubl
in
in
hlt
mov
adc
add
adc
xchg
and
sub
xor
mov
dec
push
xchg
pop
and
push
test
dec
pushf
xchg
test
mov
mov
shlb
dec
loopne
call
fabs
or
sbb
and
sub
xor
cmp
adc
dec
pusha
xchg
push
test
mov
and
adc
and
dec
lock
clc
sbb
mov
movsb
pop
or
adc
and
dec
inc
xchg
push
and
fs
mov
and
dec
pushf
xchg
test
mov
mov
loopne
call
jo
mov
or
mov
sub
dec
xor
cmp
dec
inc
push
pop
mov
and
dec
jl
test
nop
inc
cwtl
mov
and
dec
les
loopne
mov
adc
popf
inc
je
les
stc
pop
enter
or
push
inc
pop
mov
and
dec
test
adc
xchg
les
int3
inc
aam
mov
adc
and
inc
add
jmp
inc
repnz
xchg
or
dec
xchg
push
and
je
jl
test
dec
xchg
xchg
pushf
and
les
shlb
dec
in
hlt
jo
mov
xchg
js
and
sub
mov
and
dec
insb
xchg
je
jl
test
and
dec
mov
mov
aam
fcoml
call
mov
adc
sub
cmp
adc
dec
insb
xchg
js
jl
test
lods
dec
mov
mov
aam
fcoml
in
in
dec
hlt
xchg
cld
inc
lods
push
in
inc
adc
mov
adc
xor
cmp
inc
dec
mov
and
fdivl
jb
jp
imul
push
shrl
or
push
fs
imul
dec
insb
xchg
iret
push
adc
jle
test
outsl
jb
outsb
mov
jmp
jae
jnp
ret
sti
arpl
or
imul
icebp
sahf
or
adc
arpl
lods
sbb
outsb
lods
jb
push
test
push
adc
ficompl
or
adc
adc
je
popa
mov
mov
jo
mov
and
mov
outsl
push
sub
push
mov
jne
adc
jae
sub
mov
or
dec
test
adc
push
sbb
pop
in
gs
movsl
imul
jo
adc
popa
xor
je
mov
addr16
cmpsb
js
xchg
jnp
or
js
add
jbe
out
cmp
int
bound
imul
jl
dec
push
jp
insl
test
push
outsb
jne
adc
mov
xor
fs
adc
pop
jbe
adc
popf
jp
fs
cmpsl
sub
push
imul
or
and
test
adc
or
gs
or
adc
inc
insb
push
imul
repnz
push
fimuls
adc
push
pop
adc
pop
inc
push
lock
imul
sarb
mov
adc
jns
or
adc
sub
mov
sbb
out
or
jecxz
xchg
outsb
pop
mov
adc
arpl
push
jmp
insl
stos
leave
adc
sbb
adc
push
outsl
sub
lret
xchg
xchg
insb
adc
xchg
xchg
lods
mov
fs
cmp
mov
lods
outsb
mov
adc
and
sbb
insl
into
sub
in
push
je
lret
stos
adc
and
repnz
ljmp
sub
sbb
arpl
jg
bnd
sub
and
sub
xor
shll
movsb
cmp
enter
adcb
mov
mov
jp
je
mov
mov
jns
jo
addr16
call
lea
loope
mov
push
scas
adc
mov
dec
bound
ja
gs
ret
xchg
or
test
stos
adc
push
sbb
inc
inc
out
stos
adc
inc
mov
or
les
sbb
mov
je
sub
mov
jns
sbb
test
adc
push
inc
lahf
inc
sbb
jo
sub
test
or
mov
sbb
adc
mov
cmp
pop
xor
adc
xchg
dec
adc
adc
mov
or
sub
or
sub
ds
insb
adc
pushf
pop
jns
cmp
pusha
jl
gs
sub
push
or
sbb
mov
sbb
mov
gs
inc
adc
push
lods
test
rclb
or
adc
mov
imull
test
or
mov
inc
mov
mov
mulb
rclb
jno
imul
adc
ljmp
repz
or
aam
out
je
mov
or
sub
scas
int3
cld
inc
push
popa
sub
insb
ss
dec
gs
adc
mov
aas
push
or
xchg
orb
push
or
push
js
movsb
or
lods
insb
jne
or
jge
mov
xchg
jae
cmp
aam
dec
or
popf
incl
jae
adc
decl
mov
mov
repnz
mov
pop
xor
sub
jae
rcll
aam
sub
xchg
loopne
xchg
and
or
push
mov
adc
sbb
jo
mov
adc
cltd
cmp
or
jns
mov
cwtl
jmp
imul
incl
call
or
or
push
or
jp
or
pusha
movsl
movsl
mov
and
enter
sub
sbb
ljmp
sbb
shlb
arpl
pop
sub
insb
sbb
out
adc
into
clc
jns
or
cltd
adc
lods
insl
je
pop
dec
jl
bound
inc
mov
mov
xchg
fldt
or
fs
or
cmpl
shlb
dec
out
sub
adc
xchg
popa
adc
and
lods
adc
pop
repz
cmp
pusha
insl
adc
into
in
js
adc
jl
fwait
les
ret
push
js
outsb
and
or
xchg
mov
adc
nop
test
int
inc
xchg
push
inc
movsl
inc
sbb
cld
leave
test
add
inc
insl
bound
sbb
and
mov
loopne
mov
sub
add
xchg
daa
push
je
sbb
mov
adc
add
xchg
inc
dec
pop
gs
cs
sub
clc
dec
repnz
rcrl
dec
pop
push
daa
inc
mov
lea
xchg
sbb
xlat
cltd
int3
mov
jecxz
adc
aaa
adc
push
push
jno
inc
or
das
jno
jb
inc
filds
repz
sti
rclb
pop
lods
inc
or
jne
sbb
or
out
jbe
sbb
jp
push
outsb
cli
es
adc
std
bound
inc
inc
loop
push
xchg
add
mov
mov
mul
xlat
inc
outsl
adc
ret
int3
jp
push
cmp
and
es
popf
clc
mov
jne
xor
gs
leave
xor
adc
mov
cmp
fwait
fwait
movsb
inc
adc
jae
sbb
adc
xorb
fldcw
sbb
je
mov
int3
pop
add
test
adc
stc
push
sbb
cmc
js
bound
mov
outsb
dec
sub
ja
int
sub
leave
imul
and
mov
dec
sbb
or
es
sbb
sub
das
sbb
jo
jo
and
int3
adc
mov
outsl
push
xor
mov
inc
lods
fbld
dec
mov
leave
sub
scas
iret
adc
pop
imul
mov
inc
xchg
cmp
fxam
adc
loopne
adc
addl
cld
movsl
lods
loop
mov
inc
or
mov
daa
or
js
imul
or
sbb
sub
insb
mov
pop
pop
sbb
adc
decl
inc
inc
or
push
xchg
or
dec
mov
fidivs
xor
adc
popf
fisubl
rcrb
scas
pop
dec
cltd
adc
sub
clc
add
popf
dec
insb
mov
xchg
roll
ja
xor
fwait
sbb
es
subl
adc
loope
jnp
cmp
jb
mov
imul
pop
dec
push
sub
adc
sbb
decb
and
or
rcrb
sbb
sub
imul
push
push
adc
adc
pop
enter
test
jne
imul
or
dec
insl
adc
dec
adc
inc
inc
in
xlat
xchg
data16
pop
addr16
pop
lea
pop
xor
or
fmuls
xor
xor
arpl
or
fs
adc
pusha
mov
pop
and
sbb
xor
adc
addr16
movsl
jmp
sbb
ret
or
repnz
rclb
js
les
jo
gs
jns
mov
xor
dec
sbb
mov
bound
and
nop
add
stos
or
xchg
sbb
imul
imul
adc
push
test
sub
or
lods
in
lret
sbb
std
aas
adc
or
addr16
pop
into
pop
or
ret
scas
lods
rcrl
fstl
cwtl
mov
and
dec
ficomps
push
and
es
add
or
dec
pop
adc
adc
mov
xchg
adc
adc
jns
outsl
mov
inc
mov
test
js
jp
push
shlb
dec
outsb
daa
inc
lret
mov
inc
fs
adc
adc
xlat
leave
xor
sbb
dec
rol
xchg
inc
or
pop
and
and
mov
nop
mov
adc
ja
and
pop
js
outsb
adc
and
xor
sub
cmp
imul
jmp
and
in
adc
push
arpl
or
cwtl
sub
or
mov
stos
adc
pop
mov
imul
xchg
data16
fstl
mov
sub
jne
mov
or
xchg
dec
and
aaa
test
jo
mov
loopne
insb
lret
or
inc
test
ja
jns
jp
cmp
bound
mov
fcomp
adc
test
or
popa
or
je
arpl
out
das
mov
xchg
sub
adc
jecxz
push
lret
dec
mov
fisubrl
jl
lods
xchg
data16
jo
sub
add
sbb
push
in
cmpsb
movsb
pop
jns
sub
dec
popa
jno
cs
sarb
adc
fisubs
mov
jns
xchg
sahf
mov
inc
or
jmp
jns
insb
or
jno
mov
cltd
fldcw
xchg
lea
rorl
popa
or
or
jg
sub
adc
or
mov
xor
mov
leave
rcrl
sbb
sub
ds
pop
fwait
adc
or
adc
dec
push
jb
adc
jo
xor
icebp
ja
mov
orb
or
and
sbb
fsts
mov
or
push
fs
les
mov
or
rorl
push
and
or
flds
lahf
sbb
fs
mov
lret
das
or
or
repnz
jle
or
ja,pn
push
gs
ret
test
jb
out
mov
mov
push
or
sub
adc
scas
mov
add
outsb
inc
adc
subb
in
pop
adc
or
fwait
pusha
dec
adc
loop
jmp
pop
adc
mov
fs
arpl
inc
or
je
dec
pop
lcall
js
out
in
xchg
and
push
pop
repz
push
icebp
or
cmc
or
data16
cmc
xchg
sbb
inc
and
imul
adc
ficoml
mov
push
outsl
bound
insl
adc
in
popa
adc
jne
mov
ljmp
fwait
orb
and
repz
in
cmpb
xor
jbe
xchg
cmc
cmp
push
hlt
inc
push
mov
jae
push
jns
push
dec
and
sub
mov
mov
aad
fcompl
es
addr16
stos
add
pop
stos
aas
imul
data16
push
sub
gs
or
std
xchg
adc
xchg
insb
cmp
repz
adc
and
adc
lock
jns
adc
xchg
std
mov
imul
sar
jno
cmp
sbb
adc
jae
pop
sub
mov
mov
mov
das
outsb
xor
addr16
jnp
or
insl
or
js
adc
shl
or
jp
loope
jo
mov
inc
or
xor
lcall
mov
push
and
adc
shll
popf
adc
inc
xchg
shrb
in
sbb
fdiv
jbe
adc
adc
mov
in
in
or
xchg
and
aad
xchg
mov
xchg
ss
adc
jp
pusha
adc
outsb
popf
adc
adc
loopne
push
add
add
fs
jbe
sbb
sbb
cmc
ss
inc
or
mov
xlat
mov
or
cmpsb
mov
dec
or
jbe
outsb
push
or
fnstcw
imul
mov
aas
cli
or
adc
fs
cmp
and
push
adc
mov
adc
cmp
push
sub
enter
push
repnz
cmpsl
sbb
inc
or
xchg
dec
orb
popa
and
xchg
sbb
cmp
jl
test
arpl
in
ret
xchg
or
dec
or
mov
testb
or
mov
sub
jp
adc
test
mov
or
jb
and
cmp
scas
popa
mov
sub
jne
enter
jnp
adc
popf
mov
push
mov
adc
arpl
push
ficoml
repz
pop
sub
adc
loopne
push
fs
lods
sbb
js
dec
inc
mov
in
jp
push
or
sbb
sub
sub
adc
cmp
pop
sub
arpl
dec
adc
pusha
or
inc
xchg
inc
fsts
xor
in
bound
cwtl
fistpl
fwait
std
sbb
push
shrl
xchg
adc
test
pop
outsl
sbb
xor
adcl
in
cmp
imul
fs
mov
dec
sbb
cli
jae
sbb
shrb
mov
insb
mov
mov
stc
sbb
ljmp
sub
adc
mov
mov
imul
adc
adc
cmp
andb
xchg
pop
dec
mov
pop
mov
dec
mov
inc
or
cs
test
push
in
adc
in
xor
or
ja
scas
rcl
xchg
int3
adc
cwtl
fnstenvs
and
push
jne
out
xchg
adc
lret
and
adc
lret
cltd
adc
dec
lcall
dec
leave
push
out
or
mov
stos
or
dec
rorb
sub
dec
push
in
sub
xor
adc
loope
push
or
push
popa
sbb
pop
dec
adc
daa
les
cs
aam
nop
or
loop
jne
or
sub
test
and
pop
sub
adc
inc
nop
jecxz
cltd
sub
jl
jne
xchg
adc
loop
hlt
adc
adc
adc
jb
mov
sahf
test
enter
stos
mov
adc
and
sysenter
adc
les
push
xchg
push
and
sub
mov
in
dec
adc
nop
sbb
int3
sub
data16
sbb
stos
or
in
adc
push
or
aad
dec
outsb
dec
je
sub
gs
cltd
or
jg
sbbl
outsl
mov
addr16
fwait
xchg
dec
sbb
cmp
mov
sub
lret
ficompl
data16
ficoms
gs
jo
push
push
adc
jbe
adc
sti
or
jns
xchg
test
dec
sub
jb
or
insb
push
pusha
int3
sbb
dec
sbb
lret
mov
stos
adc
in
adc
inc
or
pop
or
sbb
cwtl
insl
lods
dec
lret
or
lcall
aaa
or
adc
stc
mov
lcall
push
in
xchg
or
inc
into
mov
adc
hlt
cmp
push
out
imul
ret
scas
hlt
or
push
outsb
adc
or
imulb
or
mov
fidivrs
outsl
adc
adc
adc
lret
pop
adc
in
test
das
dec
add
pop
cltd
push
rcr
sbb
push
jnp
stc
sub
adc
sarl
adc
adc
es
cmp
inc
adc
imul
push
xchg
pop
jo
sub
ficoml
push
sub
sub
fdivs
sub
outsb
insb
adc
sub
xchg
insb
xchg
and
and
in
mov
inc
div
imul
push
rorb
push
repz
adc
push
cltd
adc
and
mov
inc
dec
mov
test
or
stc
mov
outsl
jae
pushf
loop
mov
adc
js
fisubrs
sahf
cmp
stos
cmp
mov
jl
imul
jns
dec
lahf
adc
add
hlt
cltd
adc
enter
xchg
push
cltd
jns
push
je
je
arpl
sbb
adc
insl
adc
insl
sbb
or
insl
cmpsb
xchg
fstl
jo
jp
push
push
les
loope,pt
jo
ficoml
push
mulb
js
mov
cmpsb
sbb
out
ja,pt
shlb
cmc
dec
mov
js
arpl
std
or
dec
adc
inc
lcallw
rorl
sbb
and
add
cmp
jle
xor
mov
lock
pop
and
inc
dec
loop
xchg
or
jl
and
scas
inc
int
sbb
imul
dec
adc
bound
inc
js
addr16
fsts
imul
imul
lret
add
in
stc
call
sub
inc
les
sbb
or
or
jg
jae
outsb
cltd
sti
inc
and
adc
jbe
or
mov
sbb
or
jmp
movsl
pop
mov
mov
es
adc
cmp
jns
jnp
mov
lcall
std
pop
fdivrl
movsb
adc
lret
js
xchg
jno
or
fsubr
sbb
lret
xor
sbb
mov
imul
js
fwait
rol
mov
adc
dec
dec
les
push
and
jg
push
jmp
adc
jb
imul
fstl
stos
cld
aas
es
mov
adc
imul
imul
mov
loope
fistl
invd
dec
xor
adc
mov
leave
cmp
inc
out
lret
sbb
push
arpl
adc
bound
mov
out
call
push
mov
or
push
lds
mov
push
movsl
xor
adc
dec
pop
repz
jne
adc
mov
mov
jb
rcll
or
mov
sbb
dec
mov
jecxz
dec
idivl
enter
xor
and
sbb
inc
repnz
mov
dec
or
and
jp
push
sbb
inc
or
mov
test
and
fisubrs
xchg
jne
push
mov
dec
rcrb
movl
js
outsl
or
adc
out
loop
xchg
outsl
and
jae
fists
imul
push
fists
adc
add
test
lods
int
push
lock
push
lods
adc
je
movsb
sbb
nop
and
mov
ja
xor
and
sub
pop
loopne
jl
mov
or
fnsave
mov
shlb
lret
popa
adc
in
adc
dec
push
fs
adc
and
adc
std
fs
sbbl
sub
mov
int
mov
adcb
or
dec
adc
jno
adc
ficoms
imul
adc
push
jo
sbbb
insb
movsb
and
and
bound
dec
or
add
cmpsl
in
cld
lret
sbb
insb
lret
adc
mov
shlb
adc
adc
rcrl
push
push
push
xchg
or
les
icebp
cwtl
pop
or
xor
imul
ficomps
ja
fnstcw
pop
push
or
in
adc
lcall
mov
fs
adc
bound
adc
add
test
int3
push
inc
sbb
push
dec
arpl
insb
dec
and
adc
cmp
or
addr16
pop
stos
pop
mov
les
mov
lods
sub
sbb
and
jo
ret
xchg
in
ficomps
out
xchg
and
stc
sub
cmp
push
inc
pandn
adc
xchg
arpl
or
in
pop
sti
inc
bound
jne
cmp
xchg
inc
jmp
aam
push
mov
sbb
dec
or
jb
movsb
mov
pop
fildll
mov
sub
dec
add
and
jmp
adc
or
insb
popa
lret
mov
cltd
jns
xor
outsl
adc
loop
outsl
mov
insl
or
insb
xor
jae
and
sbb
adc
subl
int
pop
or
push
leave
in
jb
lea
jno
xor
mov
ss
adc
je
dec
lds
push
and
popf
jecxz
sub
add
clc
or
js
xchg
and
xor
inc
addr16
adc
dec
pop
mov
repnz
xchg
or
and
xchg
xchg
add
adc
xchg
insl
adc
push
jbe
and
jo
or
mov
jb
push
cli
inc
jl
push
sarl
adc
adc
out
hlt
bound
popf
adc
mov
sub
adc
pop
in
outsl
sbb
in
adc
cmpsl
cmpsl
dec
mov
loop
inc
xchg
add
and
jl
cmp
adc
adc
adc
dec
adc
mov
or
xchg
push
fdivs
addr16
cmp
sbb
jmp
addl
or
leave
mov
jae,pt
mov
stc
sbb
nop
sub
rolb
add
js
mov
xor
or
cmp
rolb
or
test
and
pop
sbb
xor
mov
push
cmp
or
adc
inc
jne
repz
push
add
pop
push
cmp
popa
test
je
sar
rcl
add
or
shl
pop
dec
std
sbb
sub
mov
call
ret
icebp
outsl
mov
add
pop
and
test
push
cmpsb
ret
pop
pop
add
push
add
inc
ljmp
stos
push
push
push
loop
jb
pusha
add
add
test
ret
pop
fs
xchg
loop
in
and
adc
sti
iret
pop
or
inc
bnd
mov
xchg
imul
xchg
or
pusha
and
push
movsl
xor
mov
or
mov
or
in
xchg
inc
sub
cmp
push
inc
or
das
inc
xor
inc
into
xor
xor
icebp
mov
mov
xor
push
dec
xor
dec
dec
inc
lahf
inc
mov
mov
push
push
shl
cmpsl
inc
fs
ljmp
mov
add
sbb
add
mov
sbb
xchg
jmp
pop
dec
xor
enter
xor
cltd
loop
xchg
jle
sahf
jo
cwtl
jg
ret
and
fbld
jmp
xchg
repnz
imul
pop
movsl
lcall
jp
jg
add
lea
cmc
cmpsb
sbbb
repz
shrb
in
xchg
add
pop
popf
fdivrl
ret
adc
adc
mov
je
pop
stos
push
fildl
cld
fistpl
test
adc
movd
pop
xchg
addr16
repz
in
fsubl
xchg
lret
iret
data16
gs
shl
popf
enter
leave
add
cwtl
repz
xor
sub
loope
int3
and
add
ficomps
int
insl
ss
or
sbb
adc
pusha
inc
xor
adc
cltd
fbld
pop
in
cwtl
test
adc
or
add
movsl
cli
hlt
std
daa
out
inc
cmp
decb
adc
pusha
enter
dec
ret
shlb
jnp
cvtps2pd
addr16
leave
jmp
sbb
fdivr
jnp
jno
xor
out
adc
loope
push
or
clc
std
jg
sti
in
leave
loopne
xor
ljmp
cmpsl
stc
data16
mov
and
lock
call
popl
jmp
das
inc
je
outsl
pop
xchg
mov
push
cmp
jge
add
in
cmp
sbb
xor
or
pop
push
dec
fstl
je
sub
dec
inc
nop
jne
inc
inc
sbb
xchg
dec
inc
dec
rorb
sub
ja
sbb
int
loope
scas
or
xchg
movaps
imul
gs
sbb
inc
cmpsl
je
les
pop
sub
scas
push
nop
mov
cmp
addr16
insl
mov
jmp
mov
cmp
pminsw
jle
pop
scas
dec
mov
mov
xor
addr16
xor
hlt
jp
sub
xor
imul
lahf
inc
repnz
jp
repz
and
loope
negb
sbb
xor
cmp
enter
inc
sub
sub
adc
adc
outsl
pop
mov
lret
cmpsl
push
les
sub
movsl
cmp
fisubrs
and
outsl
out
shr
sub
dec
test
mov
mov
mov
nop
mov
xchg
pop
lds
shrl
cltd
std
je
js
adc
iret
mov
outsl
dec
mov
jl
inc
dec
push
mov
inc
insl
cmp
xchg
push
shr
xor
inc
add
add
std
push
jg
lcall
jns
dec
enter
push
adc
loopne
add
and
push
push
dec
sub
xchg
flds
inc
dec
lock
xor
dec
lret
dec
push
mov
pop
fildl
daa
aam
mov
inc
xor
xor
xor
push
dec
dec
sbb
pop
xor
xor
cs
leave
push
and
ljmp
arpl
or
add
or
jno
xchg
push
orb
addl
inc
push
inc
sbb
push
and
test
xor
outsb
add
fsubrs
inc
clc
addl
dec
dec
dec
sahf
add
push
push
push
push
push
add
push
pop
pop
pop
popa
bound
arpl
addr16
insb
insl
mov
jno
inc
xchg
jne
add
js
jp
mov
das
ss
pusha
adc
sub
call
push
arpl
negl
mov
or
adc
add
imul
lret
cmpsl
adc
cli
xchg
and
fisttpl
rolb
mov
push
mov
add
rep
pop
xor
push
add
or
sahf
nop
aam
maxps
shl
call
inc
and
lea
jl
inc
cmp
andl
lock
mov
add
adc
jl
cltd
shlb
int3
mov
leave
mov
jge
add
repz
je
inc
jmp
enter
jg
add
popa
ret
pusha
mov
pop
mov
mov
js
ds
sbb
or
clc
sar
rcrl
mov
mov
out
testb
inc
std
add
push
inc
sbb
pop
outsb
push
icebp
inc
mov
jecxz
and
icebp
inc
cmp
push
add
dec
sbb
pop
and
jmp
cmp
jge
lock
sub
call
loopne
pop
ror
cld
jmp
hlt
cmp
jne
dec
in
add
or
nop
adc
mov
fnstsw
pop
xchg
xor
les
fdivr
call
mov
dec
adc
loopne,pn
cltd
lods
test
nop
mov
and
push
push
and
jne
inc
mov
or
shufps
fs
mov
test
andps
mov
jl
or
add
mulb
jmp
in
into
nop
jb
cwtl
add
mov
push
jmp
call
dec
jg
jmp
nop
scas
add
and
adc
and
mov
sub
add
xor
mov
arpl
mov
mov
pushf
mov
sub
ds
adc
aad
sub
daa
aam
xchg
fisttpl
adc
jle
mov
in
sub
pop
sbb
jmp
add
pop
xorl
push
jmp
loop
inc
add
push
out
xchg
inc
pop
jle
push
lahf
cmp
xchg
scas
outsl
ret
nopl
hlt
fisttps
xor
mov
pop
xor
cmp
jg
inc
push
stos
jno
adc
test
ljmp
mov
inc
imull
js
add
xchg
mov
cmc
rolb
inc
xor
adc
pop
jp
sub
xor
mov
rcll
sub
add
jbe
pop
sbb
in
sub
rcl
xchg
outsl
xorb
xchg
ss
repz
in
add
je
xchg
imul
push
dec
mov
add
cmpb
rcll
push
push
pop
mov
pusha
push
xor
fnstcw
je
cmp
out
loope
add
mov
cmpl
add
push
push
and
sbb
lea
cmp
js
push
pop
xorb
loop
pop
push
jecxz
je
sbbb
cltd
adc
loopne
pop
ds
ss
adc
mov
sbb
lods
lds
loopne
addl
imul
xchg
inc
into
mov
cmp
nop
mov
mov
dec
das
jmp
mov
xor
call
mov
out
or
in
mov
call
rep
xor
xor
js
add
sbb
xor
test
sub
sarl
mov
or
sub
pop
in
dec
adc
add
ja
jo
arpl
cmp
je
push
ja
cmp
enter
jo
roll
add
js
inc
mov
cmp
pop
add
lahf
call
adc
adc
jmp
movsb
adc
stc
imul
sub
push
mov
leave
adc
dec
jbe
nop
adc
int3
xor
psubusw
add
xchg
xor
add
adc
leave
rolb
fnstcw
xor
xor
pop
inc
fdivl
inc
pop
das
popa
jg
call
add
sub
add
sub
push
gs
xchg
add
add
lret
addr16
in
add
push
test
imul
mov
imul
push
add
jno
jmp
pop
or
sbb
inc
mov
enter
xor
xchg
cmp
and
mov
ret
add
or
ror
call
in
loopne
es
add
iret
sbb
xchg
jae
lea
mov
add
inc
aad
or
lds
jle
lret
cmc
hlt
push
movsb
std
push
arpl
or
shl
lcall
not
je
mov
xchg
xchg
and
nop
scas
mov
dec
mov
pop
or
xchg
lea
jnp
xrelease
push
add
loope
xor
test
popf
mov
js
mov
mov
cmp
mov
fwait
sarl
mov
arpl
pop
in
cmpsl
shl
pop
loopne
popf
xor
repnz
outsb
lahf
loopne
aam
or
nop
and
into
or
pushf
lea
mov
pop
pusha
mov
push
shlb
sbb
sbb
inc
cmp
xlat
xchg
lock
push
das
fnstsw
adc
int3
add
cmp
push
adc
mov
ds
cmc
add
js
popf
orb
mov
aaa
cmp
pop
xchg
fdivl
sbb
out
mov
inc
mov
dec
lcall
fwait
aad
inc
sub
fstpl
dec
mov
and
inc
roll
add
xchg
push
mov
add
lret
push
aas
and
imul
or
and
call
negl
dec
fistpll
inc
push
push
out
aam
out
adc
scas
add
outsb
jns
outsl
dec
fisubrl
cmp
scas
jl
jmp
xor
ljmp
adc
and
and
xor
subl
call
scas
push
movsb
sbb
xor
pop
xchg
mov
or
xor
pusha
xor
das
pop
lret
fs
and
push
inc
sub
inc
pop
dec
test
mov
jnp
inc
inc
jb
dec
pop
xchg
dec
inc
mov
rcr
imul
clc
jmp
insl
and
out
sub
pop
pop
pop
xlat
into
sbb
inc
push
dec
push
mov
cmp
pop
push
push
mov
out
push
add
lds
add
pop
dec
pushl
out
mov
cs
push
cmp
dec
jo
xor
dec
dec
pop
inc
push
pop
in
sub
inc
push
test
nop
pop
push
cmp
cmc
insb
mov
sbb
sbb
fsub
and
inc
popa
cs
fs
imul
js
xchg
pop
inc
sub
sub
movsl
pop
nop
xchg
inc
aam
and
roll
adc
dec
mov
aad
xchg
test
xchg
outsb
push
int3
test
inc
popf
js
das
push
insl
insb
jno
out
cltd
test
iret
xor
xor
pop
lret
imul
fs
dec
add
and
dec
cmp
jae
out
stos
pop
das
lds
cmp
popa
dec
mov
add
insl
jns
xchg
mov
or
sub
out
out
arpl
lret
cltd
pop
mov
stos
pop
mov
cmp
mov
push
sub
lret
pushl
mov
gs
mov
lret
arpl
aad
sbb
inc
aas
sub
add
inc
dec
push
lods
and
lds
call
mov
imul
cmp
lcall
sbb
dec
lret
or
dec
sub
lock
mov
out
xor
fists
int
lods
mov
imul
xor
data16
pop
shll
xchg
out
into
and
cmp
cmp
cltd
dec
ss
adc
adc
inc
lahf
in
cmp
dec
cld
cmc
mov
es
xchg
mov
das
adc
ljmp
rclb
pusha
gs
imul
dec
push
inc
mov
cmp
sub
inc
and
jmp
cmpsl
fbstp
fildl
pop
mov
or
movsb
fwait
inc
and
dec
clc
inc
fs
push
jb
xchg
sub
push
ljmp
enter
push
inc
dec
push
push
inc
jns
xor
push
xchg
sub
dec
dec
in
push
inc
sahf
aas
loop
inc
inc
movsl
xchg
jae
test
popa
daa
push
test
push
xchg
push
inc
push
jge,pn
lock
dec
enter
and
das
push
fs
add
or
xor
test
xor
notl
xor
aad
test
mov
mov
cmp
es
adc
das
test
lods
sbb
mov
lods
sub
in
xor
shll
cld
mov
repnz
dec
dec
or
or
xor
xchg
divb
cmpsl
or
xor
or
in
imul
call
or
rcll
fbstp
out
cwtl
fbstp
adc
dec
in
test
jmp
cld
imul
sbb
lock
push
clc
dec
xchg
fdivp
imul
mov
dec
arpl
sarb
mov
inc
test
orl
into
mov
inc
and
stos
mov
lret
je
inc
jae
enter
sub
mov
xchg
in
fmull
iret
jle
test
inc
mov
mov
fnsetpm(287
sub
das
jbe
jo
sub
dec
push
or
scas
sbb
sub
insl
mov
cmp
inc
push
aas
push
push
arpl
idivb
loope
or
sub
push
mov
ljmp
adc
sub
dec
or
xchg
push
and
das
test
fimuls
std
inc
mov
mov
arpl
inc
sub
dec
lahf
inc
mov
pop
push
ds
inc
xchg
push
test
cmpl
push
cs
outsb
psrlq
or
hlt
iret
shl
mov
int
jb
add
cltd
mov
dec
pop
adc
jmp
ja
jo
jle
pushf
sub
notb
js
xlat
dec
jge
jo
jle
inc
inc
cmpsb
inc
test
enter
hlt
sub
inc
xchg
cs
sub
jl
mov
pop
push
push
js
fimull
shrl
xlat
mov
imul
dec
cmp
push
mov
mov
push
push
xchg
imul
arpl
sub
sarb
lods
push
xchg
cld
jns
adc
inc
inc
inc
mov
adc
lds
sbb
sbb
xchg
movsb
adcb
xchg
add
repnz
add
or
fsubrl
or
inc
pop
cltd
add
orl
pop
pop
pop
xchg
add
pop
inc
xor
pop
dec
add
or
mov
pop
push
sub
jae
jge
movsl
pop
xor
je
or
sub
jne
jge
movsl
pop
xor
jbe
or
sub
ja
jge
movsl
pop
xor
js
or
sub
jns
pop
xor
xchg
adc
mov
bound
xor
cmp
jle
sub
add
add
test
fwait
add
add
sub
add
add
test
fwait
add
add
sub
test
fwait
add
add
sub
add
add
test
lcall
cmp
add
ret
dec
add
add
and
or
adc
mov
mov
xchg
pop
ret
mov
clc
call
push
je
xor
dec
add
push
negl
push
fwait
and
push
or
or
add
mov
xchg
push
je
aaa
or
sti
inc
xchg
imul
or
or
add
rcl
roll
sub
fdivl
add
test
enter
pop
cltd
add
aam
or
lret
or
add
push
or
addr16
or
push
dec
or
or
add
or
or
add
insb
or
cltd
mov
cmp
inc
and
or
or
sub
arpl
dec
add
or
inc
pushf
pop
negl
dec
mov
or
lret
or
add
cmp
adc
ds
xchg
or
or
fsubl
arpl
adc
pop
inc
push
push
sub
sub
ds
push
dec
dec
xchg
pop
shl
pop
cmpsb
cltd
test
fs
dec
push
push
inc
push
xor
sub
xchg
adc
push
dec
dec
fiaddl
leave
mov
out
push
insb
icebp
sti
cmp
or
pop
mov
xor
fs
addr16
rolb
lods
pop
jmp
inc
out
dec
pushl
imul
aad
xchg
addr16
rorb
push
sti
pop
pop
sub
mov
movsb
cltd
add
push
inc
push
xor
mov
nop
adc
dec
stos
fdivl
pop
push
pushf
jl
ret
jae
xchg
sub
insl
mov
imul
sub
pop
pusha
jae
popf
loope
popa
mov
bound
ficoms
arpl
ficoms
gs
loope
cmp
adc
addr16
loope
push
imul
inc
popa
push
mov
add
pop
sti
in
ljmp
je
stc
lock
push
sub
sbb
and
sti
loopne
sub
xchg
push
leave
dec
sbb
fdivs
adc
or
xchg
sbb
cmp
stos
fnstcw
sub
in
and
and
and
inc
repnz
nop
sub
das
aas
and
bswap
aas
jle
daa
repnz
pop
nop
jle
and
test
inc
enter
inc
and
inc
pop
nop
and
and
and
stc
sub
enter
sub
das
pop
nop
pop
cld
cmp
and
stc
pusha
bswap
jle
inc
and
imul
and
and
and
inc
repnz
nop
sub
das
aas
and
bswap
aas
jle
daa
repnz
pop
nop
jle
and
loop
gs
fldenv
enter
cs
inc
sbb
inc
enter
and
and
jl
and
and
nop
and
inc
sbb
and
nop
and
and
inc
cmp
stos
xchg
andb
adc
add
aad
rolb
push
inc
push
cmp
push
inc
sbb
mov
dec
stos
dec
push
dec
inc
outsb
mov
push
push
dec
mov
call
mov
stc
add
pop
sub
dec
sbb
xor
clc
xchg
test
shrb
dec
dec
daa
push
enter
loop
js
push
cmp
rolb
clc
inc
cmp
push
aad
push
inc
mov
adc
dec
daa
out
insl
dec
das
jne
mov
pop
std
push
imul
adc
xchg
cld
push
enter
cmp
pop
sub
pop
push
push
inc
jmp
lds
cmp
jecxz
jbe
sbb
xchg
jl
imul
inc
cmp
xor
or
sbb
loope
cmp
rorl
cmp
movsb
testl
dec
xor
imul
mov
mov
dec
test
pop
mov
sets
int3
mov
inc
cmp
stc
pop
jo
shr
mov
add
xor
pushf
and
rorb
and
rclb
sub
and
dec
das
xor
cmp
ss
pushf
xorl
xchg
stc
jae
sub
dec
pop
loop
ja
mov
sub
adc
adc
cmp
pop
shlb
inc
std
in
ds
or
push
xor
xchg
inc
xor
adc
aas
xor
mov
mov
in
cmp
stos
cltd
movsb
xchg
push
outsb
ljmp
scas
pop
pop
test
das
mov
cmp
mull
scas
cmp
insl
sub
lods
mov
out
fs
cld
mov
and
xlat
push
xchg
xchg
fisubs
xchg
fidivs
jo
xor
sub
jl
inc
enter
movb
inc
xchg
push
cmp
xchg
rclb
jae
and
sub
adc
xchg
dec
jg
cmp
out
push
sub
jne
nop
fs
fbld
sub
push
push
mov
push
sbb
lea
inc
cs
pop
into
and
dec
sar
lcall
movsl
mov
daa
pop
movsb
cmp
dec
pop
repz
push
cs
imull
pop
imul
jns
cmp
dec
mov
movsb
bound
lcall
inc
jp
fisttpll
stos
pop
in
mov
xchg
ficoml
imul
push
sti
addr16
push
pop
sbb
shrl
push
jg
pop
cmpsl
mov
sub
lret
mov
xchg
sub
ret
jns
cli
pop
sti
xchg
insl
es
into
sub
inc
jl
cs
inc
mov
add
in
test
inc
mov
out
clc
js
push
add
dec
inc
push
pop
fwait
push
sahf
push
cwtl
pop
imul
fsts
stos
xchg
jb
xchg
pop
leave
ret
xor
mov
les
sub
aad
pop
leave
es
push
mov
lahf
inc
movsb
mov
jb
mov
lods
cs
jge
imul
movsb
xchg
popa
mov
rcl
xchg
sti
and
push
sar
repz
mov
add
or
add
pop
stos
xor
or
mov
mov
xchg
inc
jae
adc
dec
sub
jne
dec
inc
rcrl
rcrb
inc
dec
push
push
dec
inc
pop
loope
in
or
cmp
sbb
out
sbb
or
adc
lock
sbb
or
sbb
cltd
and
pop
sbb
insb
inc
nop
xchg
xchg
mov
enter
adc
jecxz
xor
or
inc
add
and
dec
mov
ljmp
and
push
cwtl
mov
sarb
add
or
sahf
cmp
les
enter
mov
in
js
int3
and
xor
mov
aam
ror
xchg
fcoms
and
jecxz
xor
fdivl
mov
inc
test
mov
pop
and
inc
in
inc
out
mov
call
mov
in
and
cmp
xor
lock
enter
clc
lods
sbb
popa
pop
loop
data16
clc
xor
enter
adc
loop
xchg
mov
push
enter
and
in
dec
or
and
icebp
cmp
pop
and
insb
sbb
mov
adc
push
aaa
sub
sub
dec
lods
sbb
xchg
enter
and
in
dec
clc
mov
hlt
icebp
adc
insb
sbb
pushf
adc
loopne
sbb
mov
cmc
sbb
cmp
dec
sub
mov
cwtl
xchg
lods
sub
inc
hlt
and
divb
or
in
push
push
mov
decb
imul
jge
jae
and
mov
and
push
loopne
sub
aad
test
xchg
jmp
dec
inc
insb
mov
inc
dec
mov
dec
jge
mov
sbb
pop
aam
inc
jne
das
and
pop
daa
incb
dec
or
sub
xchg
shlb
dec
lret
push
ffreep
inc
je
ljmp
xor
pop
sub
jo
jbe
cmc
dec
cmp
cmp
test
subb
mov
fs
cmp
dec
outsl
jl
jb
dec
jb
or
rorb
lea
and
pop
push
mov
xor
loopne
jns
cli
xchg
inc
and
outsl
jb
ss
or
and
orb
outsb
push
xor
jns
movsl
sub
mov
push
arpl
sbbb
mov
dec
push
loopne
inc
lods
clc
lea
or
and
fmull
or
test
pop
into
push
push
scas
cltd
sbb
test
xor
dec
loop
push
dec
or
andps
cmp
lret
test
mov
outsl
xchg
jge
push
inc
shr
cmc
dec
gs
addr16
testb
inc
test
push
bound
sub
pop
inc
dec
lea
arpl
fsubrl
adc
dec
idivb
jbe
jns
aas
inc
popa
jg
insb
mov
cmp
movsb
dec
push
cmp
mov
push
outsl
sahf
pusha
mov
insl
mov
fstl
daa
and
insb
scas
ss
push
pusha
xchg
xor
mov
pop
repnz
jg
dec
imul
adc
push
or
sub
push
push
jb
shlb
fwait
lods
push
add
dec
enter
dec
imul
pop
sbb
sub
sbb
pop
push
inc
pop
dec
push
xchg
test
das
sub
dec
jb
dec
xchg
nop
jns
pop
dec
outsb
xchg
ljmp
cmp
xchg
test
push
or
jg
sti
lahf
push
inc
cwtl
mov
mov
es
dec
cmp
jb
clc
mov
das
das
cld
out
pop
call
daa
inc
push
xchg
dec
into
in
test
jp
sub
xor
adc
stos
xchg
or
jo
jb
push
sub
scas
sbb
jns
fisttpl
loop
popa
mov
adc
push
sarl
pop
sbb
sub
and
pusha
push
mov
push
aas
cmpsb
xor
push
push
movsl
sub
sbb
inc
dec
imul
cmp
shl
push
push
test
inc
dec
das
xchg
xlat
xchg
cmp
adc
adc
out
and
push
xor
loopne
dec
dec
cmpsl
jg
or
dec
push
sbb
and
aam
push
xchg
test
cmp
mov
sbb
push
inc
xor
xor
push
aad
mov
rclb
inc
push
dec
push
dec
dec
movsb
dec
inc
repz
int3
push
inc
bound
js
dec
add
stos
jbe
cmc
push
cmc
scas
xchg
xchg
movd
push
dec
jns
jl,pt
insb
ds
sub
xor
inc
daa
xchg
inc
mov
in
mov
dec
push
pop
inc
ficompl
fwait
insb
popf
int
jnp
dec
shrb
xchg
lret
lods
sbb
jne
mov
adc
sarl
dec
fisubrs
xchg
inc
mov
inc
mov
jge
stc
sbb
inc
mov
mov
jmp
repnz
push
je
pusha
repnz
mov
popf
je
pop
dec
cli
fildll
dec
sti
sbb
sub
mov
insl
jo
rcrl
dec
cwtl
in
je
ja
subb
mov
daa
xor
bound
sahf
xchg
push
inc
mov
or
xchg
aad
mov
je
adc
dec
outsl
xlat
int3
rolb
sbb
pop
ja
mull
enter
jo
movsl
pop
pop
sahf
jbe
das
popa
adc
sub
mov
lret
sbb
je
xor
cs
out
xchg
imul
js
xor
popa
cmp
adc
ds
in
sbb
or
aad
mov
and
pop
out
xchg
pop
loopne
jge
scas
push
or
jle
aaa
inc
xor
mov
das
and
pop
inc
and
inc
mov
xchg
je
add
add
je
dec
sbb
stc
cmovs
adc
sbb
movsb
push
inc
mov
xor
sub
inc
inc
jle
pop
es
sbb
xor
xor
mov
mov
js
jbe
fs
aas
sub
jl
push
jg
cld
adc
xor
leave
std
out
nop
push
arpl
into
xlat
xchg
sub
fs
pop
cmpsb
mov
mov
addr16
je
fs
cs
mov
pop
aam
push
sub
clc
xchg
mov
and
movsb
bound
xor
push
push
test
inc
adc
in
lahf
je
jp
inc
sbbb
loopne
pop
dec
pop
ficoml
pop
sub
cli
outsl
mov
pop
sbb
pushf
gs
ss
imul
lret
inc
leave
outsb
jae
xor
loop
cmp
sub
test
cmc
pushf
adc
or
int3
loopne
dec
fs
and
push
aas
adc
int
push
shlb
dec
and
fucomp
mov
int
sub
loop
lcall
stc
and
imull
pop
je
out
sub
lods
cmp
or
test
mov
cmp
push
cwtl
cmc
cmp
push
sub
inc
mov
call
lcall
push
clc
insl
aas
bound
cwtl
pop
push
inc
jno
push
je
aam
clc
adc
dec
mov
push
repnz
popf
cld
mov
lahf
out
test
push
jge
inc
mov
inc
sti
mov
inc
cmp
mov
imul
inc
pop
call
push
mov
xor
inc
push
cwtl
call
out
adc
inc
adc
xor
dec
xor
mov
cs
leave
cli
repz
mov
push
cld
inc
mov
daa
pop
movsb
add
inc
notb
scas
and
mov
das
jmp
sbb
sub
cs
cli
in
mov
das
iret
mov
mov
repnz
cmp
arpl
cmc
xor
pushf
mov
in
dec
dec
repnz
jle
xor
mov
xlat
fisubrl
lcall
sub
dec
inc
movsb
inc
outsl
pop
jl
sbb
adc
dec
push
sub
push
sub
out
outsb
sub
pop
sbb
or
and
sub
sub
xor
xchg
cmp
cmp
inc
inc
mov
dec
and
dec
push
xchg
pop
and
mov
insb
and
dec
je
js
jl
addb
dec
xchg
xchg
cwtl
and
adc
mov
les
rorb
xchg
fsubs
faddl
mov
adc
and
add
xchg
and
sub
mov
and
dec
pop
xchg
pusha
and
je
jl
test
dec
cwtl
xchg
mov
mov
and
dec
loopne
call
or
adc
sbb
and
sub
cmp
inc
and
pop
pusha
mov
jo
js
adcb
lods
mov
int3
xchg
aam
faddl
mov
adc
pop
add
and
dec
and
cmp
mov
push
and
dec
fs
jo
jl
mov
and
dec
mov
inc
aam
mov
adc
and
inc
add
or
adc
and
sub
mov
and
dec
pusha
xchg
push
test
mov
and
inc
enter
adc
and
dec
lock
clc
jo
or
and
dec
sbb
xor
mov
and
dec
pop
xchg
and
je
mov
movsb
xchg
mov
mov
fcoml
call
xchg
cld
jo
or
or
adc
sbb
dec
sub
inc
dec
mov
pop
and
dec
insb
xchg
jo
js
jl
mov
nop
xchg
xchg
and
movsb
adc
xchg
mov
mov
les
enter
rclb
fsub
mov
adc
and
dec
hlt
xchg
clc
and
and
inc
or
mov
and
dec
sub
lods
cmp
xor
cmp
mov
mov
mov
sub
inc
adc
dec
pop
cltd
les
pop
adc
xor
int3
or
sbb
shlb
sbb
or
sbb
data16
orb
mov
and
dec
lods
xchg
mov
mov
int3
adc
and
dec
call
mov
or
fsubl
je
jns
enter
jo
popa
inc
jae
mov
addr16
dec
push
imul
inc
jp
mov
jbe
bound
xchg
insl
and
push
inc
mov
push
and
dec
push
xchg
dec
and
push
inc
mov
inc
and
dec
inc
xchg
dec
and
dec
dec
mov
pop
and
dec
push
xchg
inc
and
dec
push
ljmp
pop
xor
push
sbb
dec
addr16
push
inc
dec
pop
cmp
gs
les
aad
push
sbb
dec
jmp
xchg
pop
xor
aas
lea
cmc
nop
adc
outsl
roll
fs
js
cmpsb
mov
scas
adc
stos
adc
push
imul
jns
scas
popf
outsb
xchg
ss
leave
xchg
jg
xchg
adc
push
mov
add
insl
jo
adc
mov
out
xor
in
or
je
and
outsb
in
fisubrs
mov
loop
push
push
and
outsl
es
sbb
jne
sbb
in
inc
inc
ds
inc
sbb
inc
sub
dec
daa
and
push
dec
push
xor
xor
pushf
lea
repz
sbb
cmp
mov
mov
sbb
xor
cmpsb
mov
bound
xor
xchg
cmp
popf
dec
imul
push
push
je
inc
fmuls
add
stos
hlt
cld
push
mov
xor
mov
dec
push
mov
dec
test
gs
imul
dec
fs
xor
sbb
adc
and
imul
out
xchg
fs
sti
jnp
rol
cmp
push
push
sti
sbb
fwait
pop
aam
push
mov
xlat
ljmp
pop
push
dec
xchg
popa
insl
jns
imul
test
inc
or
fidivl
dec
jo
daa
stos
jge
push
push
mov
and
es
fisubrs
jecxz
and
adc
insl
pop
pop
inc
dec
lods
dec
push
jp
jb
xor
aam
insb
dec
bound
dec
lcall
xor
sbb
push
loopne
jne
mov
push
xor
adc
into
and
mov
dec
inc
jne
mov
push
sub
andb
sbb
fs
inc
pop
add
icebp
xchg
cmp
imul
shrb
xor
je
sub
movsb
inc
es
fsubl
sub
and
xchg
inc
or
xchg
and
outsl
nop
loope
jae
mov
fisubs
sbb
or
lcall
dec
in
xchg
pop
subb
popa
inc
xor
sarb
adc
dec
inc
dec
xor
imul
and
xchg
es
sbb
shll
push
mov
ss
insb
mov
stos
popf
sub
pop
je
sub
dec
dec
repnz
pop
test
push
push
inc
pop
inc
lcall
xor
ret
scas
imul
je
addr16
iret
je
cltd
movsb
xchg
jo
lods
inc
push
shlb
fcmovnbe
or
xchg
dec
cmp
xor
sub
hlt
xchg
je
outsl
mov
orb
jne
mov
in
cmc
nop
pusha
arpl
fs
mov
loope
clc
inc
pushf
xor
insl
xor
mov
cwtl
in
daa
xor
jbe
and
push
cbtw
dec
je
lahf
mov
xor
mov
dec
add
imul
and
xor
xor
jne
andb
out
mov
xchg
gs
int
xor
fstpl
add
out
xor
dec
pusha
aam
dec
cmp
in
dec
add
sub
cld
adc
xor
movsl
mov
mov
adc
in
jnp
pop
jge
and
je
hlt
and
dec
push
insb
push
orb
fs
js
insb
xlat
scas
sub
jo
sub
sub
sub
pop
ja
push
and
mov
cmp
insb
mov
mov
jge
inc
rcrl
testl
sub
dec
addr16
inc
data16
push
cmp
sub
dec
popa
bound
pop
inc
adc
inc
and
pop
js
insl
xchg
cmp
outsl
mov
and
dec
mov
mov
mov
js
lods
jp
mov
jns
lret
stc
mov
adc
lret
stos
dec
clc
shlb
or
adc
psllq
xchg
call
adc
sarb
enter
cmp
and
push
pop
push
nop
leave
push
es
pop
add
loopne
push
gs
cwtl
lds
pop
adc
xor
roll
jb
dec
sub
mov
in
je
nop
jb
jno
mov
aaa
sbb
outsl
data16
ljmp
mov
push
mov
and
mov
jne
mov
movsl
jge
adc
inc
xor
mov
or
dec
add
scas
insl
dec
add
stos
lods
cld
or
mov
fnstsw
lahf
pop
and
das
je
in
testb
xor
jp
outsl
xor
xor
sbb
pop
incl
adc
push
add
dec
or
push
cmpb
leave
adc
sub
xor
cld
sub
ret
scas
sbb
add
lret
adc
leave
or
es
sbb
inc
stos
jns
call
out
cld
rcll
sub
out
leave
in
inc
dec
sub
hlt
lahf
pop
mov
clc
cmp
mov
loop
fidivl
arpl
int3
stos
cld
pop
leave
inc
negl
or
mov
cmp
sbb
push
imul
mov
mov
cmp
sub
cmpsl
adc
pop
mov
das
call
xor
ret
xchg
imul
inc
mov
aaa
popa
jle
or
mov
jno
sub
cmpsl
add
mov
stc
cmc
stos
loop
mov
mov
icebp
adc
jl
je
sbb
or
xor
dec
enter
and
inc
pusha
push
and
dec
add
inc
std
sub
adc
and
sub
or
pop
push
stos
lea
or
icebp
jg
lock
jmp
cmp
mov
add
mov
inc
cmc
push
add
or
das
outsl
clc
or
and
imul
lods
int3
cmpsb
xlat
xchg
es
jnp
push
outsl
sub
sub
shrb
or
fsubs
or
movsl
pop
push
ljmp
ljmp
movl
imul
pop
stos
cmp
sbb
ss
xlat
movsw
jns
mov
pop
les
in
stos
mov
aas
inc
into
lods
or
xor
cmp
pop
inc
mov
outsl
pop
or
jo
int
xchg
mov
push
insb
pop
mov
movsl
mov
imul
aam
insb
adc
xor
pop
cmpsb
cltd
lahf
push
repz
xchg
inc
inc
jo
stos
sub
dec
jo
lret
lods
cmovs
shrl
test
xchg
jge
js
icebp
mov
jb
fisubrl
lods
lock
movsb
in
adc
inc
fiadds
call
jge
pop
imul
rcll
fcoms
mov
xchg
push
mov
dec
pop
in
scas
repz
loopne
jo
testb
sarb
mov
mov
mov
jle
out
mov
inc
xor
js
aad
sar
test
shll
sbb
jne
mov
lcall
and
adc
sub
imul
sub
cmp
scas
inc
cmp
jmp
pop
adc
mov
pop
in
dec
xor
stos
mov
inc
jae
loope
sub
aam
xor
inc
in
ljmp
mov
js
fs
shrb
adc
xchg
sti
dec
cmpsl
ja
fmull
repz
ss
std
scas
add
outsl
mov
and
ror
jbe
inc
sbb
inc
or
xchg
movsl
enter
and
jbe
movsb
test
jb
mov
test
push
in
cmpsb
scas
movsb
pop
xlat
dec
cmp
adc
aam
mov
gs
sbb
pop
xchg
incb
arpl
outsl
sbbl
and
push
and
mov
ss
or
xlat
lds
scas
and
leave
push
sub
sub
repz
fildl
jne
cmp
pop
js
dec
dec
mov
add
gs
pop
jmp
cmova
sub
int
test
push
and
pop
fs
xchg
inc
mov
movsb
dec
xchg
mov
stos
iret
xor
push
jmp
dec
inc
adc
mov
cmp
mov
inc
lret
imul
jae
xor
mov
pop
mov
adc
data16
adc
insl
push
inc
call
movsl
dec
cmp
jnp
or
test
mov
mov
jne
pop
mov
mov
das
popa
or
xchg
dec
push
lahf
cmp
pop
imul
aad
ror
into
jg
lahf
pop
mov
gs
push
ret
pop
mov
movsl
fmull
cmp
cmp
jle
loop
out
mov
mov
sub
aas
jg
int3
test
mov
pop
out
jmp
inc
bound
mov
and
dec
int
sub
daa
pop
lcall
sub
outsb
fiaddl
mov
leave
jae
push
push
std
scas
jns
gs
dec
push
pop
mov
xor
cs
in
adc
lea
pop
bound
lret
jp
bound
insb
fisttps
loopne
sbb
cmp
push
inc
mov
scas
lret
dec
sub
inc
hlt
dec
out
cltd
pop
push
std
lcall
jae
notl
leave
test
popa
push
pop
movsl
in
push
loope
sub
rcrb
xchg
push
xchg
stos
xchg
push
repnz
nop
mov
stos
sbb
loope
cmp
and
jbe
mov
pop
jmp
test
sub
ljmp
sub
sti
rcll
pop
das
bound
adc
sub
or
lret
daa
stc
xor
push
mov
aas
in
lret
movsb
stos
fs
pop
inc
mov
insl
or
cs
sub
mov
mov
mov
jle
sysexit
sbb
push
or
jne
rcrb
mov
or
xchg
jl
mov
mov
in
xchg
clc
adc
sub
dec
inc
xchg
push
and
js
test
xchg
and
push
insl
jae
push
data16
addr16
cmp
sub
clc
cmp
or
repz
das
jbe
ja
xor
push
data16
hlt
popa
les
scas
clc
les
and
mov
imul
sbb
push
aas
iret
mov
cli
push
popa
std
dec
sub
scas
xor
sub
or
inc
lock
push
push
or
mov
jae
pop
cmp
and
insb
and
xor
dec
xchg
inc
test
test
sub
or
js
lods
jl
jb
xchg
js
xor
adc
insb
push
sub
sbb
jg
xor
mov
sub
cli
std
shll
movsl
push
in
fdivl
lods
and
mov
rclb
mov
cmpsb
mov
pop
push
jnp
jmp
sbb
pop
xchg
or
or
dec
pop
sub
xchg
out
popf
stos
push
iret
pop
cli
imul
clc
xchg
push
xchg
in
fldt
fisttps
in
je
pop
movsb
sti
lahf
test
iret
fcmovu
add
xchg
cltd
pusha
jo
or
jl
or
push
inc
and
xchg
cmp
adc
pop
pop
notl
dec
lods
jmp
push
pop
dec
push
push
cld
mov
inc
sub
icebp
mov
and
cmp
stc
clc
cli
pop
mov
das
lods
lcall
shrb
sbb
ljmp
jne
imul
jne
out
inc
out
xchg
fmuls
push
push
push
xor
xor
and
scas
and
call
lcall
mov
cmp
and
aad
gs
das
adc
mov
xchg
jae
xchg
popf
scas
pop
push
pop
push
aam
push
clc
cld
pop
fwait
insb
fisttpl
imul
push
cs
inc
in
adc
outsb
shrb
jo
jb
in
push
pop
fs
hlt
sarb
insl
sbb
arpl
or
push
jne
insb
testb
push
scas
mov
stc
loop
or
hlt
mov
pop
fs
dec
fsubrl
add
jae
mov
mov
in
xchg
popa
or
jmp
push
in
sub
xor
shr
leave
push
mov
jecxz
mov
xchg
insb
fnsave
xchg
and
push
jns
push
inc
or
out
push
addr16
ja
dec
and
lods
xchg
adc
lcall
mov
adc
sub
mov
and
pusha
arpl
jbe
pop
ret
add
jb
movsb
bound
sub
xor
adc
inc
popa
mov
jns
cmc
xchg
les
bound
jne
push
fs
int3
mov
mov
jo
push
xor
add
movsl
sub
movsb
jg
pop
push
jbe
leave
adc
repnz
mov
scas
cmp
daa
bound
sub
inc
adc
jecxz
adc
cmp
jne
jo
and
insl
mov
arpl
aas
jo
popf
cmp
fldcw
cmp
add
rcrb
int3
shll
mov
push
and
jne
dec
jp
and
mul
daa
fnstcw
sbb
jae
jg
inc
mov
fwait
mov
xor
int
repz
cs
inc
sub
jne
and
sbb
dec
shlb
mov
inc
lret
sbb
repz
jg
sub
xor
jns
sub
add
imul
push
mov
call
mov
sub
dec
inc
dec
cmp
jmp
add
push
push
add
stos
adc
loope
push
jne
aas
jmp
pop
push
int
and
push
dec
lcall
jb
pop
mov
not
jl
jns
leave
jg
adc
sti
adc
jmp
dec
imul
lahf
pushf
xor
imul
add
out
lretw
das
inc
lcall
push
or
out
cwtl
pop
inc
mov
jg
test
adc
and
dec
cltd
jle
enter
sub
mov
cmpsl
add
push
adc
arpl
cs
pop
divb
and
adc
cmp
fimuls
adc
cmpsl
inc
sbb
add
or
adc
inc
xor
lds
cmp
adc
icebp
pusha
rcrb
or
or
arpl
jp
nop
mov
cs
cmpsb
add
loopne
push
aad
sub
or
xchg
and
sbb
or
cwtl
jae
push
pshufw
sbb
sbb
and
add
loopne
inc
cld
addb
jne
repnz
inc
pushf
adc
add
xor
add
add
xor
add
fucomip
add
fisubs
or
in
rcrl
pop
dec
lret
fldcw
adc
cmp
inc
inc
or
clc
sub
cs
pushf
cmp
sub
push
push
push
xchg
enter
loope
mov
jl
stos
add
add
add
sub
add
jnp
test
and
add
add
inc
lds
cli
xor
xor
stos
hlt
out
lods
mov
loope
or
or
roll
add
ret
add
or
jns
and
bound
movsl
mov
sbbl
ret
popa
shll
cmp
mov
xor
iret
mov
in
call
nop
adc
add
popf
rcrb
adc
mov
loopne
or
adc
push
popf
dec
je
add
and
sbb
and
dec
pop
xchg
or
or
or
cmpsb
cmp
or
dec
pop
adc
cmpsb
add
sbb
sbb
cmpsb
adc
and
push
xor
push
sbb
xor
push
cltd
pusha
pop
dec
jl
cmpsb
sbb
out
flds
jo
or
jb
xchg
push
xor
xorb
and
inc
xchg
sub
scas
nop
push
movsb
jo
cmpsl
xchg
mov
lret
xlat
jno
pop
es
and
sub
jae
adc
or
loop
xor
dec
fcoms
pop
enter
shlb
mov
xorl
cmp
xor
nop
and
push
inc
mov
mov
dec
or
jl
or
mov
and
dec
sbb
push
sbb
inc
dec
pop
xchg
cmp
and
mov
and
xor
xchg
jg
clc
pushl
out
dec
adc
lret
orb
adc
add
xor
cmp
nop
in
pop
adc
inc
cltd
adc
pop
dec
stos
hlt
sub
adc
or
les
hlt
xor
sub
xor
pop
add
sbb
cmp
dec
cltd
cmp
sbb
xchg
in
dec
or
mov
xchg
inc
xchg
enter
ja
sub
mov
adc
inc
adc
mov
out
cltd
insb
mov
cmpl
jmp
loopne
or
mov
loop
fdivrs
fwait
lock
xor
ret
xor
loop
adc
cmpl
stc
adc
push
and
inc
push
sbb
xchg
jo
mov
int3
xor
fcoml
add
andl
pop
jo
xchg
icebp
cmp
push
push
push
jle
lds
jle
mov
aad
gs
shlb
movsl
nop
and
push
push
dec
cmp
and
repz
cmpsb
aad
or
mov
xor
sub
mov
rorl
adc
push
das
or
insb
repnz
mov
or
jmp
dec
push
je
or
cmp
xor
enter
sub
bound
mov
call
mov
arpl
jl
push
jo
push
je
inc
sub
pinsrw
and
dec
xor
push
sub
sbb
pop
and
pop
xchg
push
or
push
sub
sub
or
push
and
or
or
fstl
mov
adc
fsubrl
and
flds
mov
pop
or
arpl
inc
sub
addl
jbe
sub
sub
or
adc
adc
add
push
or
or
mov
hlt
call
lret
dec
mov
aaa
or
imul
or
fcoms
fs
sub
sbbb
pop
adc
xor
or
mov
fs
sub
jbe
and
pop
or
mov
xchg
pop
push
fdivrl
inc
mov
mov
dec
inc
lods
fsubrl
aaa
pop
dec
sub
pop
pop
inc
jno
mov
test
xor
push
sbb
ficoms
mov
dec
lods
mov
pop
pop
rorb
mov
fdivl
inc
jo
icebp
or
or
lea
inc
sub
sub
sub
xor
pop
mov
and
sbb
push
xchg
in
mov
cmp
xchg
dec
pop
push
js
test
cmp
mov
pop
inc
adc
inc
sub
add
cwtl
pop
adc
pop
add
dec
shlb
add
jle
sbb
push
in
pushf
adc
inc
inc
or
xchg
or
or
pop
or
xor
insb
and
inc
jno
mov
dec
dec
add
pop
les
or
inc
inc
cmp
or
push
rcrl
loopne
icebp
sub
or
out
mov
push
in
and
fdivrs
push
stc
loopne
cmpsb
jo
enter
mov
mov
mov
xchg
js
add
cmp
inc
test
push
insb
stos
adc
or
pop
dec
movb
or
mov
sub
xchg
and
enter
pop
cld
in
xchg
dec
call
loop
int3
push
or
lock
lods
or
adcb
or
insb
lds
sub
xchg
sub
and
or
mov
xor
js
mov
or
push
or
nop
or
push
and
and
dec
sbb
add
inc
push
push
sarb
fwait
in
adc
outsb
and
js
mov
mov
call
and
or
rorb
dec
sarl
push
or
sbb
arpl
push
ljmp
call
shlb
sarb
icebp
xor
inc
sub
mov
lock
and
sbb
adc
adc
xchg
or
clc
out
cmp
in
fsubs
rolb
mov
mov
lods
and
pushf
adc
xchg
andb
push
jo
and
pusha
pop
mov
and
dec
sub
sub
and
sbb
mov
mov
pusha
rclb
adc
add
jg
add
popa
add
add
or
enter
or
jns
pushf
or
push
ret
ud2
or
adc
xchg
and
mov
mov
adc
pop
rorl
add
mov
sub
imul
dec
sbb
and
xchg
xlat
add
sub
mov
adc
mov
aad
iret
or
jp
outsl
movb
mov
or
mov
mov
cmp
divl
jl
loopne
mov
add
popf
sti
jmp
stos
push
inc
add
repnz
add
pop
stos
cmp
scas
xchg
shr
aam
jne
add
dec
jp
iret
inc
gs
add
xchg
push
cmpsb
scas
mov
inc
or
addl
in
xchg
cmp
xor
andb
hlt
mov
andb
add
std
mov
fadds
and
stos
xchg
add
repz
mov
subb
leave
fwait
xchg
and
les
int3
add
add
sti
aas
jno
or
mov
lock
add
fisttps
xchg
outsb
adc
shrl
pop
mov
icebp
add
mov
inc
sbb
lods
pop
lds
mov
insb
scas
pop
add
shlb
mov
aad
mov
std
loop
add
adc
stos
in
das
dec
add
dec
les
leave
js
add
jne
int
icebp
lcall
xchg
cmp
push
mov
out
lock
pop
loop
sarl
popa
mov
mov
jle
push
jl
mov
add
lea
mov
outsl
inc
dec
ret
movsl
jmp
jg
test
add
mov
add
fstl
arpl
add
and
call
cli
cmp
jp
and
lods
cmp
mov
cmp
add
xlat
cmp
mov
or
mov
jecxz
cmpsb
add
movb
inc
inc
pop
mov
jne
add
cmp
jno
shlb
lock
out
dec
nop
pop
cmp
push
fisubl
xor
add
adc
add
in
add
push
scas
into
imul
pop
add
movsb
rcr
jge
call
out
pop
push
xchg
cmp
mov
dec
dec
gs
std
add
adc
ror
add
frstor
jo
jo
aas
inc
push
daa
gs
jl
js
jno
cmpsl
sbb
pop
push
in
or
cmp
cmp
and
sbb
mov
test
pop
jae
mov
xchg
mov
and
pop
stc
xchg
bound
nop
cmp
add
test
bound
push
add
mov
or
dec
mov
andw
pusha
push
adc
outsl
xor
dec
add
out
xor
test
jb
bound
xchg
and
adc
mov
outsb
adc
dec
sahf
xchg
nop
and
fs
mov
adc
and
insl
add
dec
fcoml
mov
mov
dec
movsb
xchg
or
and
push
insb
mov
and
dec
mov
inc
shr
mov
adc
add
and
dec
dec
xchg
pop
and
jbe
mov
dec
into
xchg
fsubl
hlt
and
inc
xor
mov
clc
xchg
je
addb
mov
dec
out
xchg
cld
adc
imul
mov
and
dec
mov
and
push
adc
mov
adc
push
dec
xchg
jp
mov
mov
dec
repnz
sub
bound
xchg
mov
pushf
inc
mov
mov
adc
and
inc
or
xchg
xor
dec
inc
pop
and
dec
mov
lret
call
insl
add
dec
cs
cmp
push
inc
pusha
insb
mov
xchg
push
add
or
in
dec
adc
int
adcb
and
adc
stos
xor
adc
or
inc
or
adc
add
dec
adc
push
or
push
add
push
dec
gs
les
jno
repnz
imul
dec
push
push
cs
fisttps
push
jle
in
aaa
arpl
or
xor
pop
xor
sbb
add
push
gs
jne
or
popa
in
inc
or
inc
dec
inc
jge
stc
cltd
xor
dec
leave
data16
sub
add
pop
push
std
jp
arpl
push
lahf
lds
dec
dec
mov
je
jb
aam
jae
and
cmp
dec
aaa
popa
outsb
cmp
sbb
stc
in
je
fwait
push
adc
jge
aas
dec
sbb
add
popa
insl
dec
add
push
push
jns
jae
loop
imul
int
push
filds
roll
push
push
sbbl
repnz
dec
xchg
add
aam
andb
fsts
xchg
xor
jno
push
dec
popa
rolb
int
inc
add
jo
movsb
inc
push
jge
mov
mov
test
or
push
sub
enter
nop
cmp
push
scas
mov
and
bound
rorb
mov
dec
jne
js
test
imul
add
xlat
jno
push
and
add
sub
outsb
add
shlb
lahf
push
cs
sbb
inc
mov
ficoml
clc
outsl
mov
loope
dec
push
cmc
or
roll
jmp
inc
xchg
xchg
mov
push
fcmovne
adc
mov
push
fsts
xor
sbb
daa
and
jp
xor
jo
fidivs
in
andl
movsb
add
jb
jecxz
adc
xor
subb
mov
add
mov
adcb
mov
pop
and
xchg
cmc
cmpsl
push
xchg
les
jne
insb
mov
inc
xchg
or
jnp
mov
jo
lods
loopne
insl
scas
outsl
sahf
popa
or
push
inc
std
ret
mov
push
xchg
idivl
cmp
insl
push
mov
lds
out
enter
mov
bswap
or
cmpsb
mov
js
push
test
lea
outsb
or
xchg
mov
push
outsl
enter
out
add
ja
cwtl
mov
pop
fstl
and
mov
push
or
mov
push
aaa
push
insl
cmp
adc
cltd
add
icebp
xchg
fstps
mov
shll
es
adc
clc
aaa
sbb
mov
push
add
fisubrs
int
sub
ss
out
jo
sbb
test
sub
aam
or
inc
sbb
cli
dec
in
mov
popa
cmp
add
jle
jne
and
xchg
leave
and
sbb
sbb
cs
and
inc
into
loopne
loope
cmpsl
aaa
dec
inc
mov
xor
inc
ret
mov
shrl
and
lret
lahf
jno
xor
jo
gs
cwtd
pop
xchg
push
push
addr16
addr16
pop
xchg
push
fwait
xor
mov
leave
inc
jo
xchg
dec
add
push
inc
lods
jo
xchg
xchg
push
movsb
push
or
or
or
cmpsl
arpl
jo
repnz
pushf
add
fmul
arpl
xchg
jo
xor
aad
or
xchg
add
cld
imul
js
int3
pop
addr16
mov
sti
xchg
dec
add
aad
nop
mov
jne
sub
inc
or
imul
sub
adc
popa
mov
add
lea
cld
and
jl
xchg
inc
dec
ja
jo
loop
mov
inc
test
and
lods
and
push
jns
mov
les
je
cmpsl
sbb
jb
mov
inc
mov
popf
mov
mov
ljmp
gs
inc
bound
dec
inc
mov
inc
pop
fs
faddl
cli
xchg
std
push
and
xchg
mov
loopne
cwtl
inc
or
push
inc
call
sbb
je
fwait
cmpsb
adc
sub
es
idivb
mov
xchg
iret
dec
outsl
mov
adc
xchg
push
xor
xchg
scas
je
inc
fwait
andb
mov
sub
mov
fs
or
subb
push
pop
rorb
sub
adc
or
adc
sbb
std
cmp
ss
sbb
xchg
or
dec
or
cmpsl
push
call
std
dec
popa
and
aam
inc
add
clc
movsl
ds
inc
adc
push
push
mov
inc
push
ss
mov
or
sbb
hlt
aaa
sbb
andb
sub
and
nop
les
or
int
clc
inc
and
inc
and
mov
dec
sub
gs
push
mov
or
in
lret
xor
inc
data16
and
xchg
insb
outsb
or
adc
and
inc
jne
int3
das
test
push
pop
movsb
inc
das
popaw
mov
jmp
sub
jl
pop
fs
push
sub
add
mov
dec
adc
mov
mov
dec
xor
add
addb
add
loopne
popa
add
or
bswap
sub
inc
fsts
pop
jmp
mov
sub
cmp
inc
jp
jl
jle
jle
jle
jle
jle
sbb
xor
popf
dec
sbb
jns
sbbl
test
lahf
testl
movsl
xchg
out
loope
ss
outsb
roll
loopne
out
stc
clc
clc
add
adc
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
cmp
popf
cmp
popa
sahf
jae
jnp
xchg
lods
lahf
mov
mov
rcrb
lahf
ficomps
cli
mov
daa
sbb
push
lahf
pop
pop
bound
xchg
lahf
xchg
lahf
mov
lahf
mov
pop
in
call
mov
cld
leave
cld
pop
cmp
jns
cmpb
cmp
jl
call
cmp
push
dec
cmp
pop
ds
mov
ret
aam
jmp
aas
xor
cmp
dec
in
mov
and
xor
adc
cmp
jp
lea
loope
pop
xor
jo
out
iret
mov
mov
iret
repz
inc
adc
pop
xchg
jns
cmpsb
mov
shlb
push
xchg
and
insl
js
jp
jl
sbb
xor
addr16
jb
mov
lahf
int3
lahf
in
xchg
andl
inc
mov
scas
fistps
xacquire
aaa
adc
daa
dec
add
jno
xchg
jecxz
repz
sti
lock
sbb
cmp
jmp
inc
cmp
outsl
inc
andb
lods
cmpsl
mov
jecxz
cmp
leave
insb
roll
jmp
ljmp
sub
push
js
jp
jl
jle
jle
jle
jle
jle
jle
sbb
cmp
mov
ret
data16
clc
out
negl
out
out
out
out
loope
ds
sbb
xor
cmp
inc
jmp
insb
stc
test
mov
xchg
stc
scas
stc
mov
mov
stc
std
clc
add
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
loopne
loope
dec
and
cmp
cmp
ds
jg
test
aas
test
lods
aas
mov
aas
loope
testb
xor
dec
xor
divps
jl
xchg
mov
iret
iret
out
ret
add
sbb
pop
ret
insl
roll
repz
repz
or
inc
leave
dec
movsb
lcall
imul
jbe
js
jp
jl
jle
jle
inc
int3
idiv
or
xor
rcrl
repz
mov
lock
ss
push
call
lahf
jl
dec
fldl
xor
jo
test
iret
fxch
out
cmpsl
xchg
sbb
push
inc
imul
rorl
lcall
mov
sahf
jbe
in
nop
pushf
dec
popf
jg
mov
xlat
pop
outsb
cmp
test
or
and
inc
cwtl
push
fwait
clc
mov
in
cld
std
cld
adc
popf
std
loope
jmp
cli
inc
outsb
fmul
or
jb
dec
daa
jbe
pop
inc
hlt
mov
ret
std
roll
sub
sub
js
mov
xchg
hlt
pushf
clc
loopne
out
xchg
cmp
sbb
xor
popf
cmp
dec
ss
dec
lahf
sbbl
push
mov
fnstenv
xchg
in
mov
jle
jle
sbb
xor
lods
mov
ds
mov
adc
jbe
js
pop
jle
aas
lahf
aas
icebp
push
pop
ss
dec
dec
mov
js
orb
nop
iret
xchg
iret
enter
sti
ret
or
mov
jecxz
repz
pop
cmp
in
hlt
lock
cmp
cmp
cmp
lcall
pop
adc
mov
add
xchg
outsb
fdiv
in
clc
lock
cmp
in
call
dec
hlt
clc
mov
sbb
cmp
popf
xor
inc
ret
dec
sarl
mov
repnz
call
cmp
mov
out
aas
mull
std
mov
iret
data16
dec
xchg
sub
loope
jmp
loop
std
bound
add
xor
cmp
cmp
cmp
fdivrs
repz
adc
push
addr16
mov
jmp
xor
insb
in
jle
cmpsl
lcall
push
xor
scas
in
sbb
mov
xor
das
pop
sbb
lds
and
sahf
jg
test
lods
pop
mov
lahf
incl
push
xchg
loop
hlt
lock
cmp
in
lahf
lock
xor
je
jbe
js
jp
jl
jle
jle
jle
sbb
cmp
popf
xor
mov
and
repnz
cmp
test
mov
adc
imul
clc
or
add
imul
dec
or
cmp
gs
fcoms
fpatan
lock
cmp
dec
in
arpl
jp
xchg
clc
test
inc
jle
sbb
adc
ss
dec
movsl
mov
jmp
clc
clc
or
leave
xchg
cmpsl
pusha
lret
cmc
mov
loope
pop
and
add
push
inc
popf
cmp
jns
mov
lret
rcrb
lods
add
jb
dec
sbb
inc
cmp
jg
xchg
aas
lods
aas
loop
out
mov
fs
mov
stos
repz
mov
xor
cmp
inc
fldenv
insl
jmp
mov
pop
fidivl
das
popf
push
sbb
mov
dec
bound
pop
movsb
xchg
push
rclb
stc
mov
repnz
or
jb
dec
aaa
lcall
aas
stos
aas
shll
sbb
fldenv
jns
nop
icebp
cmpsl
sub
aas
aad
in
outsb
xchg
sbb
pop
push
jbe
lea
movsb
xchg
mov
and
cs
jo
popa
sbb
loope
clc
clc
cmp
je
dec
rorl
iret
cmpsl
test
in
rcrl
ret
out
shl
jecxz
lock
in
mov
js
jp
jl
jle
jle
dec
fadds
cmp
cmp
pop
mov
ret
xor
jle
jle
jle
nop
fs
je
jbe
js
jp
jl
loopne
jb
je
jbe
js
dec
insb
and
iret
repz
repz
testl
adc
pop
or
imul
jmp
add
jb
je
jbe
js
jp
sbb
xor
xchg
xor
dec
popa
not
or
pop
xchg
jp
xchg
shll
pop
leave
xchg
rolb
jb
je
pop
lea
ss
xchg
sbb
mov
loopne
aaa
sub
in
inc
xchg
sbb
shll
int
es
movsb
cmp
cmp
sub
sahf
popf
inc
sbb
mov
mov
cmp
pop
xchg
test
shl
sbb
in
call
shl
test
je
sbb
pusha
fcomi
mov
xchg
clc
cwtl
cld
es
push
cmp
jno
xchg
xchg
xchg
and
push
lock
scas
in
test
dec
xor
je
push
xchg
loopne
hlt
mov
arpl
imul
sbb
fidivl
je
jbe
js
dec
xchg
push
push
push
xchg
inc
dec
dec
mov
jbe
jle
test
inc
mov
ljmp
sub
mov
and
mov
out
cmc
andb
cmpsl
fs
xchg
inc
in
popa
add
or
inc
sbb
hlt
mov
mov
cmp
das
daa
pop
add
xor
pusha
leave
push
loope
jmp
in
call
in
jno
scas
stc
jecxz
idiv
adc
in
mov
clc
sbb
ds
mov
pushf
lock
sahf
push
pop
in
cmc
test
sub
iret
xchg
or
add
add
mov
xor
inc
out
test
or
loope
jmp
jb
dec
inc
femms
int3
psrlq
subb
pop
mov
jp
sbb
xchg
push
add
dec
iret
arpl
imul
sahf
lahf
rcll
fs
jp
orb
xchg
lret
xchg
loopne
pop
push
cmp
push
cmp
jnp
xchg
bnd
jle
jle
jle
dec
in
mov
ret
add
or
mov
ret
movsl
shll
repz
in
repz
adc
sbb
in
xchg
and
xchg
addr16
xchg
push
je
mov
lock
and
lcall
aas
sarl
in
icebp
or
dec
and
lods
xchg
xchg
pop
ficoms
mov
stos
jl
and
jmp
push
jb,pt
je
jbe
dec
xor
xchg
add
dec
stc
push
xor
pop
cld
gs
sub
jb
jns
jg
xchg
cltd
lahf
mov
mov
repz
fdiv
loopne
call
bound
xchg
inc
pop
gs
dec
aas
push
aas
pop
sub
ss
jb
jns
jg
xchg
repz
repz
mov
repz
fdivrs
jle
pop
lock
mov
mov
je
jbe
js
dec
daa
punpckhdq
iret
dec
lret
pop
movsb
mov
cld
test
mov
xchg
cld
cwtl
cld
lahf
cld
movsl
cld
lods
cld
mov
aam
mov
dec
movsb
fldenv
loopne
cld
push
mov
pop
js
dec
sub
jle
jle
jle
jle
jle
dec
insb
or
jns
in
xchg
sahf
pushf
adc
mov
iret
int
aad
in
in
iret
cmc
iret
std
ret
or
adc
sub
decl
dec
iret
push
iret
pop
iret
pusha
leave
data16
jae
sbb
subb
lcall
mov
es
jle
dec
rorl
mov
iret
jmp
ret
pop
xor
adc
stc
inc
cmp
inc
stc
dec
stc
push
stc
pop
stc
popa
stc
addr16
outsb
stc
je
jnp
cmp
cld
fwait
cld
mov
cld
mov
mov
cld
iret
cld
cld
fdivr
jecxz
in
pop
lock
notb
xchg
adc
adc
sar
ss
dec
push
dec
test
cld
imul
mov
pop
jg
test
xchg
iret
cltd
leave
lahf
popa
out
lods
stc
mov
mov
aas
sarb
fisubrs
stos
push
daa
sbb
xor
cmp
cld
cld
push
rcrb
lahf
sbbb
lahf
mov
mov
lock
jle
pop
jecxz
aam
ret
add
mov
and
repz
aas
js
jle
jle
jle
jle
jle
jle
jle
jle
dec
orl
movsl
in
cmpsb
loop
das
ret
call
inc
xchg
sbb
and
and
out
out
out
in
mov
cld
test
mov
movsb
clc
xor
mov
mov
lret
iret
ror
fsub
cmpsb
in
adc
repnz
xor
loope
cmp
adc
mov
xchg
cmp
inc
out
out
in
lock
imul
repz
repnz
jle
jle
pop
enter
dec
addr16
out
loope
cmp
call
sub
sahf
lock
dec
lahf
push
xchg
pop
addl
lock
dec
cvtps2pd
jp
mov
sar
fnstenv
sti
lock
or
push
call
and
sub
mov
dec
dec
paddsb
push
iret
test
mov
xchg
shl
jl
aas
mov
mov
push
adc
sbb
inc
inc
ss
jmp
mov
aas
shrl
push
cmp
js
cmp
push
sub
out
out
out
out
in
xchg
mov
lock
dec
in
push
lock
hlt
cmp
mov
pop
mov
inc
leave
xchg
mov
icebp
or
xor
in
pop
lock
fwait
clc
sar
fdivl
jecxz
fcoms
mov
leave
repnz
leave
and
sub
cmp
push
jmp
cld
sarl
addl
inc
mov
test
or
mov
call
mov
popf
add
push
xchg
insb
dec
testb
insb
andb
add
rcrl
cmp
cmp
inc
inc
adc
stc
sar
dec
xor
pop
call
push
jl
jle
and
ss
sbb
xchg
xor
lret
push
dec
lock
stc
mov
xlat
cld
loop
xchg
out
loope
cmp
je
mov
clc
idiv
add
addr16
xor
mov
cltd
repnz
and
adc
push
push
jp
jl
jle
dec
pslld
shl
add
and
imul
fldenv
daa
cmp
xchg
shrl
jae
test
adc
vorps
push
inc
ljmp
add
adc
dec
cmpsl
cmpsl
or
in
loopne
iret
cld
call
jb
dec
and
cmp
cmp
test
xchg
cld
mov
popa
clc
mov
test
fistl
lock
pop
in
mov
js
dec
push
or
fs
fmull
out
out
out
out
out
out
out
loope
xor
gs
cmp
dec
hlt
push
clc
push
mov
movsb
cld
scas
mov
inc
mov
loop
jmp
and
jo
pop
pop
test
imul
xchg
scas
mov
mov
es
pop
jmp
or
adc
sbb
mov
push
mov
pop
cmp
jp
mov
pusha
outsb
and
mov
dec
mov
insb
fcmovbe
inc
dec
cmp
dec
hlt
cmp
push
and
pop
xchg
cmp
and
pop
test
mov
cld
cld
int
fnstenv
daa
popf
inc
iret
addr16
pop
cmp
xor
cmpsb
pop
movsl
pop
iret
sbb
pop
dec
pop
or
mov
push
outsb
pop
int3
pop
rcrb
aas
ds
mov
inc
mov
sbb
aas
setge
sbb
push
xchg
pop
add
js
sbb
xor
sub
mov
dec
jl
dec
dec
push
push
mov
mov
and
mov
xor
arpl
pop
pop
cmp
into
pop
cmp
and
mov
adc
cmp
add
fadds
cmp
mov
and
cmp
sub
and
pop
or
mov
lret
and
out
enter
scas
push
xor
mov
test
rcll
cmp
cmp
test
xor
lods
xchg
cli
sbbb
js
jp
dec
mov
in
sub
popa
in
call
and
loop
push
aas
leave
dec
das
lfs
orl
inc
jle
pop
jmp
orl
push
inc
jb
je
jbe
push
je
xchg
clc
cmpsl
cld
mov
mov
add
push
jns
mov
xchg
pop
out
pop
fadds
sub
xlat
test
daa
in
fs
mov
push
call
mov
out
sbb
adc
sbb
and
xchg
dec
pop
inc
setb
jl
xchg
stos
shll
adc
repnz
pusha
pop
cli
xchg
or
and
dec
femms
push
iret
pop
lret
movsb
push
fdivl
in
xchg
fcoms
mov
cld
xor
idivb
gs
cmp
pop
xor
dec
and
cmpsl
xchg
leave
shll
add
mov
outsb
call
mov
hlt
inc
sbb
repz
lock
push
xchg
call
imul
movsb
mov
cld
push
xchg
mov
xchg
aam
mov
xchg
sub
ret
dec
rcrb
push
push
lods
mov
xchg
xchg
xchg
in
mov
aad
loope
or
cmp
cmp
push
cmp
sub
call
or
jo
jbe
pop
orl
les
clc
shr
jb
pop
sub
mov
mov
iret
lock
loope
and
and
dec
xor
outsb
subb
or
or
mov
add
push
xor
cmp
cmp
arpl
addr16
test
mov
testl
dec
popf
ret
js
rolb
xor
push
ret
enter
pop
es
rcrb
jbe
xchg
dec
movsl
mov
or
ljmp
fdivrp
or
das
pop
push
loop
mov
daa
hlt
and
xchg
out
push
dec
jl
fcom
js
pop
sahf
into
aas
jecxz
pop
and
addr16
xchg
in
lock
insb
mov
jp
jl
pop
repz
dec
xchg
gs
leave
js
push
cli
daa
pop
push
dec
dec
sbb
sarb
clc
pop
aas
dec
and
je
mov
imul
mov
mov
aas
fidivrs
out
jo
adc
inc
int3
pop
sub
pop
or
jle
test
dec
lret
add
or
adc
and
lahf
dec
push
jbe
and
pop
les
push
xchg
dec
mov
pop
mov
mov
fmul
and
daa
xor
shlb
cmp
push
das
jmp
push
sti
loope
xor
sub
das
cmp
cld
push
daa
popl
ret
stc
repz
cmp
push
scas
pop
mov
addr16
jle
jle
jle
jle
dec
loope
push
pop
pop
addr16
jle
cmpb
aas
shlb
stc
add
or
sub
jg
aam
ret
loop
call
and
das
push
sahf
addr16
insl
dec
push
lcall
xchg
cmp
xchg
cmp
dec
pop
add
adc
push
xchg
gs
sub
and
inc
leave
push
rorl
cmp
int3
pop
push
lock
dec
das
dec
jns
ss
das
rsm
mov
js
sbb
or
or
or
aas
sbb
js
dec
mov
sbb
adc
push
rorl
push
das
or
test
push
xchg
or
push
and
mov
shl
loop
stc
cld
push
cmp
sub
cmp
fs
dec
adc
cmpsb
inc
push
sbb
addr16
addb
aas
in
call
push
popf
pop
push
insb
sbbl
jecxz
repz
out
repnz
leave
pop
sbb
push
xor
out
mov
add
cmp
lds
aad
sarb
aas
in
jbe
mov
movb
rorl
test
pop
mov
xchg
aam
in
decb
adc
iret
insl
or
sub
dec
mov
jl
cmp
and
xor
adc
addr16
jl
iret
sahf
lret
scas
sar
stc
loop
repz
sub
cmp
rcr
stc
sarl
jecxz
clc
lahf
xchg
pop
cld
xchg
wbinvd
or
pop
jp
pop
dec
jp
inc
fisubs
cmp
in
cmc
shll
js
cmp
sub
pop
gs
in
cmp
mov
sahf
cld
push
xor
push
jo
icebp
imul
bnd
popa
orb
ds
scas
push
nop
dec
rclb
dec
xchg
aam
jmp
jmp
dec
xchg
or
les
out
mov
mov
cmp
xchg
jno
nop
lret
loop
dec
adc
cli
shrl
and
dec
je
pop
xchg
adc
aad
out
mov
std
cld
adc
dec
lock
hlt
mov
mov
cmp
nop
lods
in
lret
xchg
call
sub
pop
cmp
mov
and
js
js
cmp
xor
mov
dec
or
push
sub
and
xor
jne
hlt
mov
push
jbe
dec
das
sahf
test
cwtl
lahf
mov
fs
xchg
mov
out
jl
sbb
push
cltd
imul
pusha
cmp
je
jbe
xchg
cmp
dec
ljmp
push
jo
mov
jl
push
pop
int3
movsb
call
loope
add
cmp
ds
mov
cmpsl
jmp
cmp
xchg
arpl
jo
mov
xchg
dec
es
dec
popf
adc
loopne
aad
cli
cli
push
cmp
sub
push
cmp
cmp
mulb
and
xchg
mov
clc
mov
ret
clc
mov
xlat
jle
jle
pop
ljmp
inc
mov
push
addl
repz
repz
repnz
loopne
stos
sahf
clc
pop
push
ss
dec
xchg
in
aam
or
sbb
push
cmp
mov
lods
xchg
xchg
enter
loope
pusha
adc
je
ss
dec
mov
shrb
movsl
pop
sahf
mov
jecxz
call
add
aas
and
dec
aaa
adc
and
jbe
jnp
clc
jle
dec
xchg
and
test
and
mov
mov
je
cmp
push
cmp
cs
scas
sub
mov
mov
adc
xchg
push
mov
fadd
xor
bound
mov
ret
mov
pop
sbb
lahf
js
add
aas
push
cmp
outsb
test
cmp
lods
and
push
inc
pusha
or
test
xor
and
pop
jl
pop
pop
push
je
sub
ror
out
cld
leave
adc
pop
push
fsts
scas
push
jmp
push
add
dec
lock
jbe
aas
sahf
aas
mov
mov
lret
aas
fistpll
cmc
das
push
add
sub
pop
js
into
hlt
loop
xor
incl
pop
fcoml
jno
js
mov
cld
xlat
cld
jmp
lock
or
jo
inc
sbb
xor
ror
and
xor
mov
mov
mov
sub
sub
push
and
jbe
movsb
das
mov
jbe
jmp
cmp
pop
loopne
mov
push
mov
and
and
jno
and
leave
xor
jno
imul
popa
iret
mov
mov
add
loope
dec
popa
sub
cltd
icebp
mov
xlat
outsl
adc
xor
cmc
das
or
cmpsl
test
je
dec
xchg
ret
or
sar
inc
xor
jo
mov
popa
adc
pmulhuw
or
clc
mov
js
dec
lret
adcb
das
fadds
inc
cmp
jp
iret
incb
or
xchg
and
jmp
dec
xor
je
faddl
adc
dec
mov
pop
jecxz
pop
and
sbb
pop
nop
mov
cmp
inc
es
movsb
adc
add
sbb
test
cmp
daa
aaa
pop
nop
inc
out
out
in
lock
mov
adcb
or
es
cmp
mov
dec
cld
push
push
push
cs
mov
mov
mov
pop
xor
push
jbe
test
cld
ret
inc
rcl
jbe
pop
lcall
push
mov
or
or
test
pop
or
js
jle
dec
into
push
aas
repnz
xor
jns
adc
ret
dec
push
jecxz
repnz
pop
into
inc
mov
movsb
mov
mov
pop
fsts
or
push
cltd
dec
lods
mov
std
loope
xor
leave
cmp
arpl
lahf
and
hlt
pop
adc
ret
jo
dec
mov
sub
outsb
arpl
sbb
inc
insb
std
clc
pop
ss
cs
push
jo
insb
sbbl
int3
jbe
add
aaa
cmp
pushf
mov
hlt
ret
xchg
mov
add
js
mov
xchg
mov
jp
jl
dec
push
dec
cmp
outsl
das
cld
popa
rorb
shlw
jge
cwtl
ds
mov
adc
enter
int3
add
adc
sub
daa
popa
nop
dec
jmp
jnp
sub
and
leave
lcall
adc
adc
add
or
xchg
xchg
jg
push
xchg
jae
mov
mulb
mov
mov
call
addr16
test
lcall
pop
outsl
push
or
inc
popa
into
mov
ficoms
dec
sub
inc
in
jae
add
push
add
push
js
jp
jl
pop
loopne
in
push
pop
pop
sbb
and
xchg
add
pop
imul
inc
xchg
dec
inc
xlat
ret
sub
daa
imul
or
andl
mov
add
add
sarl
and
sti
lock
setle
hlt
cs
xor
ss
cmp
ds
inc
cld
inc
cld
dec
cld
jp
js
out
jle
dec
cld
ret
daa
sbb
sub
out
out
out
loope
cmp
js
and
jl
pop
aas
xchg
daa
mov
sub
inc
js
pop
mov
js
rcll
fs
jmp
and
inc
cmp
ds
aas
addr16
insb
sub
je
daa
ret
aam
push
pop
push
aas
or
in
xchg
cmp
test
shll
decb
popa
and
lods
cmpsb
adc
stos
iret
aad
das
test
push
loopne
stos
lock
pop
lock
fdiv
or
xor
cmp
mov
inc
enter
pop
add
add
adc
inc
das
popaw
xchg
je
jnp
lock
pop
lods
lcall
cs
xchg
fs
clc
xor
sarb
popf
xchg
pop
lock
cld
cld
mov
and
xchg
pop
pop
mov
leave
call
in
rcr
sub
push
and
push
xchg
xor
adc
xchg
add
push
and
mov
cmp
addr16
jle
jle
popf
subl
repnz
stos
sbb
lods
push
hlt
pop
clc
bound
movsl
cmp
je
rcll
cmp
push
cltd
mov
scas
popf
pop
insb
mov
in
test
sub
stos
cmp
push
inc
je
loope
insb
or
iret
mov
repz
cld
xchg
add
sahf
jno
xorl
mov
add
ss
pop
lahf
mov
test
icebp
repz
and
je
jnp
enter
jmp
xor
leave
and
mov
jl
dec
xchg
enter
ret
xchg
pop
dec
loope
data16
push
hlt
dec
dec
ret
pop
pushf
ret
movsl
rcl
pop
dec
pop
cld
xchg
xor
and
lock
mov
sub
bound
shrb
pop
or
pusha
mov
cltd
mov
xor
lock
test
mov
call
sub
cld
inc
cld
dec
cld
push
lahf
adc
xchg
bound
dec
mov
ret
lods
fdivrs
jbe
pop
das
mov
jp
mov
cmp
cmp
cmp
push
and
sub
push
cmp
movb
xchg
inc
dec
add
xor
or
loope
jnp
mov
repnz
cmp
sub
sbb
nop
cld
xchg
xchg
test
test
inc
shlb
test
jecxz
mov
ret
mov
sub
das
outsl
xchg
test
mov
xchg
test
xchg
push
aas
scas
and
adc
shl
fdivs
xchg
or
sub
xchg
test
rcl
daa
addl
sub
das
in
in
clc
adc
push
sub
push
fcompl
or
iret
jo
dec
add
pop
bound
xchg
aas
or
dec
out
in
loop
or
cmp
and
xchg
cld
sbb
sub
cmp
insb
or
movsb
inc
jns
sub
jbe
dec
imul
cmp
pop
mov
and
cli
sub
push
pop
bsf
inc
pusha
addr16
mov
cmpsl
lods
in
jmp
repz
sar
adc
pop
mov
or
jae
mov
xchg
dec
addr16
mov
mov
dec
jl
push
adc
adc
add
xbegin
mov
mov
and
andb
jo
push
xchg
pop
adcl
popa
cmp
sub
hlt
jl
pop
mov
and
stc
xor
dec
pushw
cwtl
or
inc
inc
mov
cmp
pop
adc
inc
push
and
mov
ljmp
xchg
andb
shrl
stc
fs
dec
outsl
test
ret
push
test
mov
repnz
clc
sbb
or
lret
push
js
jp
jl
jle
jle
jg
lret
add
pop
lock
adc
push
test
and
jmp
call
in
sti
mov
xchg
jne
jp
inc
movsl
jmp
js
aas
cli
or
mov
ds
and
inc
scas
lods
cmp
sub
test
dec
mov
dec
addb
jl
push
xchg
mov
add
fs
cvtps2pd
aam
in
nop
push
imul
scas
lahf
in
popa
cmp
or
jp
or
mov
ret
or
sub
mov
push
mov
shll
cmpsb
fisubrl
adc
inc
sbbb
fiadds
sbb
add
adc
jbe
lods
inc
lock
shlb
leave
je
jbe
pop
sbb
and
daa
xor
popa
xchg
fstps
inc
dec
insb
or
ss
mov
dec
cwtl
adc
js
dec
fsub
je
dec
paddd
xchg
or
or
les
mov
test
ljmp
lahf
or
cmp
inc
mov
sub
push
push
aas
orb
test
or
xor
pop
sub
cmp
mulb
dec
cmp
xchg
outsl
mov
clc
movsl
mov
in
lahf
lock
hlt
ret
sar
add
add
or
push
pop
test
aas
fs
in
pop
repnz
cmp
dec
and
pop
jge
dec
scas
aas
mov
nop
and
mov
in
hlt
in
lock
insb
cmp
xchg
sbb
push
popa
jl
sbb
shrb
mov
in
icebp
dec
lods
adc
dec
push
cmc
add
lock
lahf
mov
and
sbbb
jl
adc
dec
mov
jle
sbb
mov
push
in
xchg
sub
pop
mov
push
sbb
and
clc
xchg
jp
pop
push
cmp
pop
aam
fadds
push
call
push
clc
inc
loope
dec
sub
mov
cmpsl
cli
mov
inc
test
inc
lock
lcall
test
xchg
loop
push
mov
loopne
mov
cmpb
stos
insb
mov
mov
inc
xchg
jnp
ljmp
add
mov
push
js
dec
ret
push
movsb
mov
mov
clc
dec
bnd
push
or
lret
xchg
sub
jne
fcomps
push
ficoms
sahf
es
cmpsb
lock
int3
adc
ret
shl
out
cmp
cwtl
push
addl
in
lods
repnz
mov
ss
sub
inc
ret
leave
lret
je
add
cmpsb
cmp
mov
ds
leave
popf
shll
push
add
cmp
push
les
add
lock
mov
inc
in
pop
add
xchg
xchg
jecxz
repnz
notb
clc
jp
adc
xchg
sub
and
rorb
jb
stc
outsb
or
fsub
pop
loopne
pop
push
or
add
ja
into
mov
mov
jmp
loop
cmp
je
fiaddl
sbb
popf
and
mov
mov
hlt
int
push
pop
out
hlt
xchg
stc
shlb
and
xchg
jbe
pop
aas
or
push
jle
jle
sbb
xor
lock
hlt
lods
lahf
xchg
shr
pop
aaa
pop
daa
adc
gs
cld
out
sbb
scas
loope
aam
loopne
js
pop
pop
stc
and
pop
sbb
and
mov
in
xchg
xchg
cmpsl
mov
aam
out
repz
inc
mov
xchg
mov
mov
shl
push
pusha
les
pop
push
jbe
cmpb
mov
dec
sbb
mov
fsubs
fimuls
mov
inc
adc
sub
rcrl
push
or
dec
test
paddb
mov
imulb
testl
push
or
xchg
xor
adcb
add
in
jp
xor
and
loope
das
andl
sub
pop
testb
sub
je
pop
pop
pop
adc
jle
sbb
jp
pushf
push
adc
test
das
inc
popa
add
aas
sti
and
mov
or
inc
ret
jl
inc
mov
mul
in
clc
sub
mov
js
jle
jle
xchg
dec
cmpb
xor
mov
cld
fstps
or
lock
nop
sbb
push
mov
xor
mov
hlt
mov
pop
mov
out
popf
sarb
dec
sub
xor
ss
addb
or
loope
jl
ret
jle
push
movsb
orl
push
mov
lret
dec
in
fadds
aaa
mov
cmc
push
mov
sbb
hlt
inc
mov
mov
mov
outsb
cld
xchg
xchg
test
xchg
push
shll
xchg
and
xor
ds
pop
pop
and
sub
or
inc
cwtl
xchg
arpl
xchg
into
adc
loope
shrb
ror
fmul
out
pop
jle
pop
add
push
push
dec
sub
cmp
fimuls
push
pop
mov
mov
jl
jle
pop
in
lret
and
and
sarb
xor
sub
inc
ss
imul
xchg
mov
pop
xlat
cld
dec
lahf
test
fs
and
jo
into
and
xor
leave
pop
sub
lock
dec
shl
xor
xchg
jb
lods
and
scas
fisubl
push
cwtl
in
negb
adc
sbb
xor
and
in
test
fnsave
mov
ds
or
push
xor
push
loop
jl
sbb
loope
roll
mov
inc
je
dec
hlt
test
or
push
jle
pop
lods
pusha
daa
dec
popa
enter
cmp
popf
ficoms
call
jbe
fs
stos
or
rolb
push
pusha
stos
add
add
adc
and
and
insb
hlt
dec
iret
and
lret
ret
jle
aas
dec
pop
das
push
inc
test
insb
out
sub
sub
push
sbb
out
xchg
fidivrl
push
cmp
test
aas
push
push
movsb
and
adcl
add
xor
shlb
fildl
cmp
xchg
bound
dec
sub
push
mov
arpl
pop
test
jo
pause
es
push
xchg
iret
loopne
xlat
mov
xchg
fildll
inc
jo
insb
and
sti
add
sahf
sub
cmc
subb
test
mov
push
cwtl
aas
cmovle
movsb
loope
and
add
aas
sub
lock
shl
mov
or
sbb
fimull
int3
inc
sub
lret
stos
adc
mov
cld
mov
adc
mov
pop
push
sub
loop
iret
lret
frstor
and
pusha
ret
jmp
sub
icebp
mov
loop
or
dec
clc
movl
sub
cmp
rol
outsb
ret
jmp
ficomps
aam
les
stos
and
call
repnz
ret
dec
sub
rorb
push
popl
ret
leave
shr
jbe
pop
or
cmpsb
push
clc
sub
or
xchg
add
enter
cld
add
mov
inc
cmp
xor
in
mov
and
ret
ss
dec
dec
pop
dec
mov
mov
sub
fs
lret
das
add
mov
in
fs
rcr
push
lods
pop
das
js
fiaddl
fidivrs
lret
push
pop
notb
push
shll
xchg
pop
xor
sbb
cld
jno
cmp
jns
ds
imul
es
in
adc
inc
mov
dec
lods
shl
cmp
daa
and
rorb
xor
sub
mov
and
xchg
pop
in
ret
sbb
lock
pop
jb
sub
andl
shlb
inc
mov
lcall
out
jb
mov
test
inc
lret
xor
ret
push
outsb
mov
xchg
mov
mov
int3
inc
add
cmp
jo
dec
sbb
xor
test
mov
jb
mov
and
pop
lock
mov
orb
jne
xchg
es
and
inc
rcll
pop
test
inc
aas
test
or
inc
sbb
inc
addl
mov
dec
call
adc
sub
mov
inc
mov
push
pop
sub
lods
cmpsb
mov
inc
adc
imul
lods
inc
cmp
or
cmp
and
cmp
push
cmp
sub
ss
inc
lock
popf
test
imul
mov
mov
addb
fnstcw
ljmp
or
add
fs
jae
cli
xchg
pop
pop
ret
clc
in
aad
adc
mov
ja
pop
mov
popf
test
add
icebp
xor
cs
or
dec
fiaddl
cmp
mov
stos
mov
push
repnz
push
or
cmp
data16
clc
xor
std
test
lcall
dec
ret
out
mov
rclb
dec
addr16
xchg
mov
pusha
or
sbb
ret
xchg
push
cwtl
and
pushf
pop
adc
ret
js
mov
out
dec
fsubr
insb
adc
call
leave
cmp
jle
rcll
adc
sbb
daa
xchg
xor
jp
test
mov
inc
xchg
mov
dec
sub
mov
mov
lret
and
insb
sub
call
daa
cmc
inc
or
sbb
lcall
fisubrs
cmp
fidivrs
mov
push
aas
stos
sub
mov
in
pop
ljmp
lods
cmpsb
sub
repnz
push
push
les
je
pop
push
xchg
mulb
mov
bnd
clc
leave
xchg
pusha
cmpsb
or
adcb
pop
rorb
out
insl
dec
testb
adc
sub
add
inc
popa
shrl
mov
call
xor
lods
mov
daa
dec
shll
mov
mov
cmp
les
leave
lock
xor
add
mov
cmpsl
in
cli
rcrb
data16
add
dec
mov
xchg
stos
add
or
pop
leave
sub
pop
sub
pushf
pop
mov
js
repnz
insb
orb
push
mov
mov
ds
pop
call
xlat
jo
xor
sbb
cmpsl
data16
dec
incl
ds
scas
sbb
in
scas
add
mov
inc
jbe
push
clc
add
lret
pop
aam
repnz
out
pop
mov
inc
cwtl
push
cld
clc
das
or
sbb
orb
enter
xchg
mov
fs
repnz
shlb
iret
pop
fmuls
data16
aaa
aas
jb
dec
sbb
dec
popf
ret
hlt
mov
lahf
loopne
xor
sbb
push
pop
push
daa
jae
xor
nop
xchg
fwait
mov
mov
and
mov
ss
lods
mov
dec
jmp
push
bsf
add
aam
adc
lahf
popf
xchg
out
icebp
mov
inc
in
mov
push
loop
or
pusha
cmp
js
pop
jne
push
lahf
rep
repnz
mov
lock
rclb
mov
cld
pop
daa
cmp
shll
pushf
cmp
push
bound
adc
ret
sarb
outsb
adc
pop
sbb
push
mov
jns
mov
jle
pop
rcrb
pop
out
ret
push
or
je
dec
das
loopne
dec
mov
lcall
mov
sbb
sub
loop
icebp
or
and
sahf
fdivrp
lahf
adc
call
shrb
das
or
xchg
fisubs
cmpsb
cmpb
jne
push
jp
ljmp
adc
movsb
cmp
fsubrs
xor
mov
lock
cmp
lock
and
sbb
cli
fcompl
mov
xchg
lea
pinsrw
ret
push
jo
mov
clc
add
fmul
loop
test
or
adc
int3
xor
mov
push
add
mov
pop
or
adc
mov
mov
adc
or
in
mov
das
js
jp
jl
dec
or
cmpsl
or
das
repnz
daa
leave
inc
sub
fs
xchg
xor
xchg
cld
xchg
mov
mov
sarl
std
cld
pop
sub
js
dec
inc
ret
pop
test
xor
cld
lret
lahf
in
in
xorb
sbbb
push
cli
adc
push
pop
lahf
imul
stos
xchg
movsb
pop
mov
or
das
push
xchg
push
dec
icebp
jge
cvttps2pi
jmp
icebp
sub
or
adc
lock
push
mov
jl
mov
xchg
cs
ret
daa
mov
mov
mov
pop
xchg
xchg
cltd
lock
movsl
mov
fiaddl
out
lock
lahf
test
ficoms
dec
adcb
pop
dec
or
leave
ret
dec
je
outsl
or
adc
push
pop
test
mov
vmread
dec
dec
dec
mov
cmp
sub
je
popf
leave
cmp
pop
sub
mov
dec
push
fsubl
loop
enter
mov
lret
rol
in
stos
or
ljmp
xor
jl
dec
test
aas
mov
in
fs
ja
xor
xchg
push
push
or
js
dec
ss
dec
inc
push
rcll
rol
shlb
pushf
shll
xchg
mov
enter
pop
ds
stos
push
add
mov
xchg
enter
mov
push
or
ret
inc
in
mov
sub
pop
cmp
jbe
scas
mov
iret
push
iret
pop
lret
pop
inc
pushf
gs
imul
cld
jns
pop
fadds
xor
dec
in
inc
mov
pop
sbb
sub
andb
in
nop
je
imul
cmp
popa
adc
pop
push
push
leave
dec
lcall
jns
xor
loope
das
and
mov
ficoms
inc
mov
xor
mov
sti
mov
pop
jb
cs
xor
lds
loop
iret
cmpsb
iret
enter
ret
dec
jns
ljmp
pop
xchg
xchg
leave
pusha
add
mov
push
mov
inc
add
test
cmp
xlat
lock
popf
loope
xor
or
les
inc
lods
cmpb
mov
je
rcrl
or
sbb
mov
pop
es
jne
xchg
pop
mov
lahf
xchg
in
lock
pushf
mov
sbb
xadd
ret
dec
adc
add
xlat
mov
cmpsb
jp
cmp
jecxz
bnd
in
xchg
mov
inc
mov
inc
add
and
mov
or
jmp
xchg
adc
je
pop
sbb
cmp
and
je
icebp
lcall
fdiv
stos
xchg
add
lock
sub
mov
adc
ljmp
dec
mov
sub
aas
lods
daa
mov
out
in
jmp
push
je
adc
mov
mov
mov
push
ds
sub
sub
mov
adcb
in
test
mov
inc
pop
jle
test
mov
subl
jle
pop
fsubs
adc
enter
inc
cmp
adc
stos
test
sub
push
cmp
int3
aas
push
daa
push
pop
jl
jp
jle
dec
jp
mov
pop
pop
adc
in
stos
fs
enter
aam
pop
cld
mov
leave
pop
sub
movb
in
mov
xchg
pop
and
mov
mov
dec
les
mov
jo
jl
jl
push
mov
push
xchg
mov
lods
imul
pop
adc
mov
mov
pop
out
addb
jl
adc
subl
ret
pop
pop
jl
out
out
in
add
loope
pop
imul
and
pop
mov
and
aas
out
imul
add
pop
xchg
jl
rcl
popf
pop
jo
daa
dec
inc
push
mov
test
loopne
mov
test
mov
ficomps
mov
xor
lods
test
cmp
pop
mov
dec
ljmp
hlt
cmp
enter
dec
xor
ret
enter
dec
rorb
add
push
cmp
cmp
nop
dec
dec
xchg
lock
adc
push
pushf
leave
test
and
and
sub
add
xchg
dec
cmpsl
push
lds
jo
shll
xchg
push
jbe
sbb
mov
je
js
xor
mov
loopne
inc
xor
mov
sahf
add
loopne
insb
add
xchg
outsb
cmp
fdivrs
sbb
inc
popa
jb
cmp
dec
push
inc
and
insb
ljmp
dec
mov
mov
repnz
mov
inc
mov
loope
outsl
or
pop
inc
inc
push
and
mov
jp
fmull
cmp
fsubrl
mov
pop
scas
push
test
and
hlt
inc
adc
in
fsubl
add
and
cmp
loope
push
cmp
and
jo
jo
js
inc
mov
add
cld
test
and
cmp
pop
pop
jp
jo
mov
add
insb
icebp
cmp
or
daa
and
sub
pop
push
test
nop
lret
lds
lods
cmp
test
push
dec
mov
lahf
shll
dec
mov
cmp
aas
je
js
jl
add
xchg
or
int3
push
mov
shlb
les
add
in
in
stos
or
out
add
or
negb
aad
sub
xor
sub
add
xor
add
mov
dec
mov
push
iret
pop
leave
pop
pop
loopne
je
rolb
es
sub
leave
mov
add
pop
mov
xchg
dec
int3
ds
aam
pop
jle
dec
loopne
and
dec
xchg
lock
and
push
adc
enter
push
xchg
sub
xor
add
cmp
push
insb
in
xchg
outsb
pusha
dec
jo
stc
insb
and
je
notb
jl
in
mov
mov
xchg
test
sub
je
pop
lods
xchg
mov
inc
push
nop
insb
and
push
cwtl
nop
add
or
mov
mov
enter
rorb
daa
fsubs
loopne
jl
call
loope
clc
xor
xchg
inc
out
or
push
rcl
xor
sub
fdivrs
fidivs
inc
lock
dec
fwait
ss
pop
dec
cmp
cmp
mov
js
mov
dec
dec
nop
inc
cwtl
or
lock
dec
test
ljmp
test
shrb
or
jnp
scas
call
hlt
sub
daa
cld
pop
out
add
or
add
sub
push
inc
xor
ljmp
test
mov
push
xchg
inc
sbb
jle
ret
fcoms
insb
mov
rcrb
or
jbe
pop
mov
repnz
testb
call
test
rcr
sarb
sbb
dec
in
fsubr
popa
adc
sub
sub
leave
or
mov
ja
push
sbb
and
aas
das
sub
sbb
pop
cmp
pusha
leave
rorl
test
sbb
mov
push
mov
cwtl
sbb
repnz
push
mov
aas
les
enter
test
aas
fsubrs
cmp
hlt
js
daa
cld
pop
push
add
or
loopne
adc
sbb
sbb
and
mov
add
sbb
cld
dec
mov
push
pop
push
sbb
pop
mov
lock
je
shl
stc
cmp
sub
aas
mov
call
movsb
pop
fisubrl
sarb
fcmove
cld
shlb
mov
sbb
xchg
or
ficoms
ret
loopne
sbb
and
loop
je
xchg
jp
pop
ljmp
rorl
popa
lock
subb
mov
in
sbb
movsb
or
lods
pop
mov
mov
xchg
enter
into
pop
fcomps
add
repnz
jo
dec
hlt
ret
jge
lock
or
adc
orl
sub
jle
dec
xor
adc
inc
rcll
stc
dec
cmp
push
daa
pop
pop
push
pusha
in
loopne
insb
cld
jo
mov
cmpb
xchg
cwtl
popf
loope
mov
loope
mov
or
shll
stc
les
sub
lods
dec
and
in
in
ss
pushf
xor
adc
ficomps
and
and
cmp
sub
xor
jo
jle
dec
dec
push
lret
push
fstps
push
jle
js
inc
adc
adc
add
mov
loopne
mov
test
mov
rcll
int3
cmp
daa
fadds
call
lcall
or
pop
adc
adc
pusha
sub
aas
or
jo
pop
xor
rolb
inc
stc
inc
cmp
dec
js
dec
push
movd
leave
fs
pop
insb
pmulhuw
fadd
pop
xorb
loop
in
clc
jp
mov
les
int3
daa
shl
mov
das
or
loopne
cld
pop
call
pushf
push
cmp
or
adc
adc
bnd
dec
and
je
testl
lret
inc
pop
pusha
pop
dec
mov
cld
pop
cld
pop
cld
pusha
mov
loopne
das
or
faddl
js
mov
in
cld
fisubs
pushf
loope
movsb
das
addps
push
adc
jp
lock
aam
insb
pop
fcompl
in
cld
js
hlt
xchg
add
or
jl
dec
sbb
xchg
pop
inc
sub
xor
cmp
inc
pop
pushf
dec
in
lods
fs
stc
pusha
imul
push
je
or
je
push
test
nop
rcll
sub
mov
lahf
lods
xchg
mov
dec
and
rcrb
inc
int3
repnz
add
fdiv
and
in
or
in
lods
inc
and
ds
cmp
dec
or
repnz
ret
push
sbb
sbb
push
pop
and
sub
dec
xor
cmp
push
inc
mov
push
clc
pop
daa
pop
rcr
dec
pusha
subb
pop
inc
push
jo
mov
andb
nop
stc
xchg
jnp
nop
pushf
js
dec
movsb
mov
lods
cld
mov
add
sarb
call
inc
fdivrl
in
loop
in
mov
hlt
cld
clc
mov
loopne
mov
sbb
sbb
xchg
dec
inc
dec
dec
jle
in
dec
pop
or
add
mov
mov
daa
xchg
shr
stc
mov
aas
lods
daa
mov
in
mov
fsub
pop
enter
sahf
mov
fdiv
mov
jo
jle
dec
clc
push
add
test
dec
sub
insb
xor
cmp
or
and
je
pop
sarb
scas
or
mov
nop
lahf
xchg
xchg
cwtl
enter
repnz
mov
mov
daa
les
lods
mov
fsubrs
stc
in
stc
lock
or
clc
inc
adc
rcl
push
pop
adc
sbb
and
jle
pop
sub
and
jbe
test
or
jp
test
insb
and
dec
jp
mov
cltd
add
pop
dec
sbb
sbb
adc
xorb
add
sbb
mov
sub
sub
js
jb
insb
sub
pusha
sub
push
sub
dec
sub
cmp
sub
sub
sub
push
sub
sub
sub
push
sub
and
and
daa
sbb
jno
cmpsl
sbb
jno
cmpsl
sbb
jno
cmpsl
sbb
jno
cmpsl
sbb
jno
cmpsl
push
mov
mov
lds
cmp
stos
flds
add
enter
jp
js
les
je
adc
jo
outsb
dec
mov
and
inc
rorl
fimull
aas
push
cmp
incb
sub
sbb
subb
dec
xor
xor
mov
lock
xor
add
xchg
insb
xor
push
and
add
sahf
mov
pop
sub
hlt
push
pop
mov
adc
dec
dec
and
ds
cmp
xor
xchg
ss
dec
jl
nop
pop
push
push
or
push
dec
push
cwtl
repnz
lock
inc
adc
lock
cmp
inc
adc
daa
insb
in
dec
test
and
adc
or
pop
shr
js
and
add
mov
mov
nop
mov
jle
mov
insb
loopne
pop
or
dec
and
or
add
pop
fiaddl
mov
adc
fcoml
inc
ret
fdivrs
les
lock
sbb
fs
dec
or
popa
dec
test
ss
mov
fdivs
es
fsubs
pop
or
push
sbb
sub
cmp
pop
mov
push
push
add
dec
nop
mov
sub
jmp
sbbb
in
loopne
call
loopne
mov
adc
push
insb
stos
dec
push
inc
inc
rclb
mov
js
ret
mov
test
mov
mov
rclb
rcrb
leave
in
add
pusha
sub
add
lret
cmp
mov
rol
mov
gs
fcmove
cs
loope
jmp
das
add
add
str
mov
xchg
xchg
xchg
fistl
in
xchg
paddw
call
subl
pop
call
subl
mov
sub
mov
mov
pop
mov
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
push
lea
push
push
call
add
pop
lea
lea
mov
rep
add
push
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
pusha
pushl
push
call
mov
popa
ret
nop
add
adc
xor
add
xchg
arpl
add
or
xor
pop
jo
adc
pop
sub
or
or
test
and
sarl
cld
add
mov
call
idivb
push
or
shl
test
ss
mov
repnz
mov
adc
loopne
jne
stos
aas
jmp
and
sub
fs
inc
jmp
lods
shl
je
cmp
leave
sbbl
sti
jmp
cmp
or
push
cmp
ja
loop
pop
mov
mov
push
push
imull
lock
jne
push
mov
inc
adc
ret
ljmp
ja
pusha
out
jb
ret
sub
sbb
dec
call
in
outsl
cmp
lea
pop
add
call
call
popf
mov
sbb
call
or
pop
dec
add
jmp
or
push
push
test
dec
add
add
lea
xorl
and
push
add
cmp
push
mov
pcmpeqd
divb
fnstenv
pop
push
je
dec
inc
or
sbb
add
popf
dec
push
inc
fcos
xchg
xchg
cmpl
je
out
dec
fisubs
push
pop
jns
dec
and
mov
pop
push
and
mov
add
lret
and
pop
add
mov
xchg
sub
movl
into
jmp
adc
ss
cmpl
push
mov
mov
imul
pusha
clc
sbb
inc
and
ret
lcall
add
cmp
sldt
add
add
add
add
add
add
add
loopne
add
add
loopne
add
loopne
add
loopne
add
add
add
loopne
add
loopne
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
inc
jb
add
add
dec
outsl
popa
fs
imul
add
push
push
inc
push
xor
cs
dec
dec
add
add
dec
gs
popa
addr16
outsl
js
add
