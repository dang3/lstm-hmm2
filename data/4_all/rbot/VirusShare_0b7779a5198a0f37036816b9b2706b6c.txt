push
call
ret
ret
push
add
out
dec
xchg
jns
xchg
outsl
repz
adc
mov
pop
adc
mov
pop
dec
pop
lock
pop
or
rclb
cltd
lcall
ret
mov
jne
aam
dec
pop
sub
or
inc
push
adc
popa
ljmp
inc
dec
and
pop
clc
and
orl
mov
sub
andb
repz
maxps
in
cmp
cmp
test
add
sti
mov
push
adc
call
sub
fs
mov
inc
xor
call
or
add
jmp
movsb
inc
jg
jne
push
out
mov
mov
sbb
xorl
lret
rcl
jae
xchg
mov
mov
test
movsb
subb
xor
or
fnstsw
ret
in
sbb
sbb
jl
mov
mov
mov
imul
jnp
mov
mov
enter
mov
fidivs
mov
xchg
xlat
sbb
push
sti
stc
lods
pop
xlat
push
movsl
xor
hlt
test
jg
and
gs
lahf
mov
mov
mov
xchg
mov
std
xor
pop
xorb
push
popa
push
in
subb
ss
pop
jo
and
dec
cmp
inc
je
inc
ja
ret
sahf
cmp
mov
repz
sub
xchg
dec
lods
outsb
ljmp
mov
mov
test
pop
push
and
pop
pop
xchg
lods
inc
stc
rcr
movsb
mov
cmc
mov
test
int3
ja
sub
inc
lahf
mov
mov
fsubrs
es
ljmp
push
dec
adc
adc
xchg
sbb
mov
imul
mov
sbb
aaa
xor
mov
jb
mov
pop
loope
in
outsb
jp
into
lret
testb
pcmpgtd
ss
enter
ficompl
push
push
or
roll
jb
aaa
in
or
faddp
insl
imul
js
mov
mov
pop
into
mov
daa
jae
sbb
add
sbb
inc
aaa
fwait
lret
imul
ljmp
xlat
jl
out
outsl
movsl
and
xor
push
cli
mov
pop
jns
sub
cmp
xchg
xor
sbbb
ret
mov
jbe
add
neg
sub
inc
jp
jo
jle
mov
push
inc
pop
mov
stos
mov
cs
test
rolb
push
mov
shll
dec
aad
push
lock
test
mov
mov
mov
ret
lret
shl
aam
movb
jge
adcl
ret
mov
push
or
ja
push
stos
fnstsw
push
outsl
jne
sub
shlb
fs
scas
sub
push
adc
mov
pushf
mov
sub
or
mov
pop
test
sbb
mov
jp
outsb
je
cmpsl
cmp
dec
imul
addb
dec
push
fucomp
andb
add
mov
cwtl
sbb
hlt
sub
rorb
jb
das
and
das
xchg
arpl
push
lret
mov
gs
out
addr16
inc
mov
mov
mov
push
xlat
cld
pop
clc
enter
lods
cmpsl
or
and
mov
gs
lds
mov
pushf
sub
rorb
or
cmc
ss
lock
lea
adc
ss
cmc
cmp
ds
enter
cmpsb
jno
push
jne
nop
or
pop
pop
loope
push
pop
scas
aam
lds
xchg
lds
loope
sub
std
lret
mov
lret
inc
icebp
push
lret
mov
inc
xchg
ret
push
push
pop
ficomps
sbb
mov
icebp
jl
lods
loop
loop
cmp
push
jecxz
jge
les
scas
inc
jecxz
cmp
mov
add
push
mov
fwait
adc
dec
ficompl
mov
pop
fcoms
lds
mov
mov
repnz
xchg
mov
aas
es
push
test
out
jno
jge
xchg
mov
test
ljmp
pop
repnz
pop
cmc
push
xchg
or
and
sbb
test
mov
dec
push
mov
cmp
pop
inc
repnz
mov
dec
jns
push
add
mov
lock
clc
in
adc
cmc
cmp
inc
pop
out
jae
push
sub
je
and
push
rcrl
xchg
mov
aam
bound
push
mov
dec
mov
xchg
divl
adc
xchg
mov
repnz
outsb
scas
mov
popf
fadd
je
daa
jae
xchg
test
cmp
mov
push
fs
and
mov
cli
inc
jno
out
imulb
das
xchg
gs
dec
std
inc
icebp
mov
mov
mov
ds
cwtl
in
mov
dec
mov
icebp
jmp
incl
adc
hlt
cli
fldcw
inc
or
std
shrb
arpl
int
pop
stc
into
sarl
adc
push
inc
test
cs
jmp
test
aas
shlb
jo
jle
or
or
mov
fadd
inc
cmp
std
pop
cmp
or
fst
mov
out
hlt
mov
push
sahf
fwait
xchg
outsb
pop
std
jl
sbb
pushf
inc
mov
in
jmp
dec
popa
or
insl
jno
outsb
clc
sbb
xor
mov
movsl
add
test
xor
out
and
jne
repnz
cwtl
mov
mov
xchg
adc
mov
xorb
jp
sarb
xchg
adc
bound
out
inc
out
pop
rol
ss
inc
push
mov
js
adcl
adc
push
or
jmp
stos
sub
loop
cmpsb
inc
pop
mov
shlb
stos
cmpsl
test
push
popf
jb
sub
push
push
cmp
int
lcall
cmpsl
cmpsb
bound
repnz
sub
xor
mov
or
leave
pushf
neg
pop
mov
in
mov
subl
loope
scas
sbb
pop
fildll
sbb
fiaddl
add
mov
das
sub
adc
nop
aad
out
or
pop
gs
in
mov
sbb
cmp
test
mov
call
and
inc
in
jo
ficoms
jne
iret
dec
lret
test
jne
scas
cmpsl
outsb
inc
jg
adc
jbe
and
leave
sets
pop
or
mov
or
inc
jne
out
ds
inc
out
add
shlb
rcll
into
mov
jecxz
dec
lds
popa
cld
imulb
cs
xor
rclb
xchg
lods
shll
loope
and
icebp
push
ss
xchg
sahf
pop
inc
test
fdivs
sbb
inc
ja
dec
into
and
fidivrs
std
je
or
int3
out
jp
pop
data16
inc
mov
out
push
icebp
xor
mov
sub
fisubs
mov
imul
inc
jne
loope
sbb
adc
mov
and
mov
add
jbe
call
movsb
rcrb
push
outsl
mov
push
ret
cli
ror
fistl
stc
ds
testl
cmp
push
and
ret
jbe
rcrl
repnz
or
or
xor
rcl
xor
push
sub
sbb
jecxz
popa
out
dec
shrb
es
dec
fs
xchg
push
stc
push
in
lods
enter
xor
jg
cmp
fidivl
lds
mov
add
cmc
add
push
jg
daa
sarb
mov
mov
cs
ja
aas
jl
inc
push
test
loop
mov
int3
imul
rcrl
rol
adc
jp
rorl
inc
dec
pop
aas
dec
adc
or
lret
addb
js
int
and
xor
cmp
enter
adc
fisubrs
aam
es
sub
rcr
adc
xchg
push
lds
ror
push
mov
lock
fsubrl
sub
xchg
dec
or
cld
mov
cwtl
add
test
mov
jecxz
jno
push
sar
sbb
in
mov
cld
pop
xor
cltd
add
lock
icebp
jge
and
mov
adc
nop
xchg
sbb
std
mov
cmp
sub
out
jp
add
lret
pop
xor
adc
xchg
scas
push
lcall
jb
repnz
or
xchg
shll
cmp
mov
mov
lcall
imul
scas
ret
xor
addr16
hlt
aas
outsl
pop
cmc
imulb
outsb
adc
mov
jne
push
imul
push
mov
loopne
rol
cs
stos
jecxz
push
cwtl
pop
xchg
or
xor
inc
cmp
fmuls
pop
pop
jb
xchg
movsb
loop
mov
jo
sub
int
das
hlt
stos
jmp
sti
ja
xchg
inc
outsl
shll
stos
add
push
in
jae
sahf
inc
aam
cmp
lods
ss
dec
jge
jae
movl
dec
push
fidivl
or
sbb
ret
mov
xchg
out
data16
out
dec
mov
xorl
ret
lea
movsb
xchg
mov
ss
xchg
inc
jnp
cli
sub
dec
cs
mov
mov
dec
mov
jb
mov
cmp
fdivl
push
jge
inc
icebp
cmc
stc
mov
sub
adc
dec
mov
xlat
add
andl
lock
pop
sbb
inc
inc
in
xchg
paddd
adc
arpl
mov
movsb
divb
imul
aam
cmpl
sub
fiadds
dec
iret
ljmp
popa
aaa
shlb
cmpsl
loop
inc
push
dec
xor
fldenv
dec
rorb
push
jnp
xchg
cmp
nop
xor
adc
sub
insb
arpl
fldcw
xchg
and
cmp
jmp
jbe
andb
gs
or
adc
push
inc
call
sbb
out
mov
jmp
shll
call
sub
hlt
mov
mov
push
pop
in
push
lahf
les
xor
pushl
out
cmpl
lods
push
mov
sbb
dec
lock
lds
add
jne
fsubl
hlt
sub
sub
push
in
and
pop
mov
arpl
cmc
mov
cmp
aam
mov
cmc
call
pop
xchg
fldt
sub
push
push
jmp
add
sbb
rcr
imul
pushl
fsts
in
dec
je
jo
stc
xchg
or
js
test
xor
xor
push
jnp
adc
popf
adc
mov
inc
mov
insl
cmpsb
pop
mov
popf
idivl
cmp
fistpll
mov
jnp
jle
out
cmp
cmc
into
and
pop
outsl
repnz
push
notl
and
sub
jae
cli
loope
jle
push
imul
pushf
jl
daa
cmpb
sub
xchg
negl
mov
dec
fisubl
xchg
adc
fnstsw
jne
add
cli
xchg
push
dec
pop
sbb
and
sbb
xchg
into
cmp
xchg
cmpsb
or
sbb
or
xor
ljmp
mov
movsb
pop
mov
icebp
in
rcl
cwtl
jle
jnp
rcrl
jno
inc
xchg
mov
ror
pop
cmc
cmp
and
cltd
xchg
movsl
add
cwtl
jecxz
cwtl
popf
stos
mov
stos
movsl
pusha
arpl
popa
xor
and
ljmp
out
out
hlt
lret
jns
inc
jmp
aad
ja
mov
xor
mov
mov
mov
sahf
dec
xchg
mov
ret
imul
lods
rcl
lcall
test
mov
aad
xchg
push
xor
mov
nop
ljmp
call
mov
push
stos
adc
rclb
shll
popf
rcrb
in
jb
dec
push
clc
jp
push
sub
push
fiaddl
idiv
subb
inc
hlt
sbb
push
jnp
int3
pusha
popa
xchg
or
fisttpll
jns
mov
pop
adc
xchg
mov
imul
sbb
sbb
mov
pusha
clc
push
call
pushf
pop
pop
jne
je
mov
pop
xchg
sbb
ret
adc
mov
add
ret
movsb
xor
cmp
sub
sbb
xor
push
jl
aad
lock
pop
and
scas
inc
mov
xor
cmp
mov
lea
mov
or
xor
jb
ret
fcoms
js
shl
sahf
dec
andb
jp
add
popa
jnp
std
fs
add
mov
stos
add
xchg
pop
sub
andl
out
push
es
adc
adc
scas
mov
inc
lret
fdivrs
bswap
sarb
insb
xor
sti
pop
shrl
stc
or
or
xor
or
popf
ret
mov
int
mov
mov
sub
jne
jp
rolb
in
pop
shlb
sbb
mov
ret
mov
inc
add
push
lret
js
test
lock
lock
push
push
lods
cmp
push
or
inc
pop
lods
icebp
arpl
push
mov
pop
cmp
or
and
das
popf
sub
loope
mov
cmp
test
dec
adcl
testl
jns,pt
jae
sar
sub
mov
cmpb
mov
sub
xor
aas
jno
dec
dec
into
rcrl
mov
stos
jbe
mov
cmp
addr16
xchg
xchg
mov
mov
hlt
out
mov
rolb
fbstp
pusha
cld
pusha
push
cmp
mov
jne
jne
sub
gs
lret
sbbb
sub
or
loop
aam
testb
adc
daa
push
pusha
std
lret
jmp
aas
lret
repz
icebp
adc
inc
xorl
push
pop
enter
xchg
shrb
mov
mov
mov
mov
cmp
or
inc
lcall
jno
roll
dec
xor
idivl
cmpsl
push
lods
jae
inc
mov
add
and
dec
jae
repnz
sub
mov
mov
push
push
dec
cltd
iret
sbb
fistpll
cmp
sbb
xor
int3
stos
iret
push
push
clc
jl
push
sub
scas
mov
push
lods
cmp
rclb
inc
je
jbe
dec
sub
cmp
cmovae
push
mov
pop
enter
jl
sub
mov
add
jl
sub
pop
inc
fcmovb
roll
movsb
andb
cmp
lcall
cmp
fnsave
xchg
js
bound
mov
cld
xlat
popa
hlt
dec
ss
lds
clc
cmp
je
sbb
push
or
jp
push
inc
inc
mov
jmp
ds
mov
ror
loope
jg
adc
dec
faddl
lods
test
dec
filds
pop
inc
dec
push
rorb
int3
in
push
ljmp
and
in
sub
push
movsl
jns
xchg
movsl
sbb
cmpsl
sbb
xchg
pop
xor
arpl
mov
xchg
xchg
sub
push
hlt
xchg
jae
mov
fdivrs
mov
outsb
add
sbb
in
xor
push
mov
jne
mov
cwtl
sarl
adc
pop
call
pop
insb
add
and
and
add
jge
or
fs
pop
mov
addr16
movsb
int
mov
and
mov
add
cwtl
jge
popa
ficoms
ror
out
and
pop
fwait
aad
cli
adc
mulb
pop
cwtl
adc
mov
push
mov
sbb
or
ret
leave
out
rclb
sub
pushf
ret
ljmp
push
lahf
adc
cmpsb
cmpsl
xor
pop
inc
jecxz
inc
cmp
xchg
popa
add
stos
insb
lock
fsubs
inc
dec
into
repz
pushf
sub
cmp
enter
rcl
dec
xor
mulb
dec
dec
add
push
cmp
mov
jnp
xchg
sbb
dec
cmp
push
loop
xor
rorb
aaa
sbb
stc
in
call
mov
addr16
add
and
adc
or
xchg
in
les
fisubl
mov
insl
cmp
bound
jg
cltd
lea
leave
pop
pushf
fwait
psubusb
pop
push
mov
data16
pop
in
leave
insl
jb
dec
adc
jo
cs
fadd
es
dec
cmp
mov
das
in
lret
pusha
daa
clc
in
ds
enter
sub
enter
dec
icebp
imul
push
and
jl
outsb
fldl
adc
jl
iret
rorl
xchg
push
jns
cs
aad
data16
out
jmp
inc
jg
scas
jl
jo
xchg
xchg
xor
daa
cmp
xchg
out
mov
cmp
rcrl
xchg
scas
bound
leave
pop
pop
test
sbb
js
loope
xor
inc
call
loope
push
leave
dec
dec
imul
xchg
lea
shll
xchg
lock
lock
clc
enter
je
movsl
mov
mov
aaa
push
pop
sub
sub
pusha
mov
js
pop
repz
pop
fcompl
jb
xor
xchg
decl
loopne
out
loopne
pop
or
std
imul
adc
pop
shlb
xlat
fisubl
pop
pop
mov
cmp
mov
mov
adc
fs
shrl
dec
in
divb
add
jge
cmp
cmp
xor
popf
push
std
hlt
fdivrl
xor
add
les
sbb
mov
sub
stos
scas
daa
lret
dec
lcall
inc
push
jg
push
or
sbb
mov
scas
pop
push
bound
inc
xchg
cmc
mov
jl
lahf
pusha
es
jno
mov
pop
into
imul
jg
add
clc
fldl
out
push
pop
push
xor
pop
aad
sbb
push
xor
push
and
movsl
in
and
rorl
outsb
adc
xchg
mov
shlb
dec
inc
xchg
fs
lcall
jbe
movhps
xchg
fnstcw
cmp
dec
std
xchg
xchg
outsb
mov
ljmp
push
je
add
fcompl
inc
mov
or
test
dec
shlb
mov
ss
dec
loopne
mov
mov
aam
inc
aaa
inc
test
enter
mov
dec
mov
mov
mov
jge
ret
les
mov
push
adc
push
scas
cmp
or
shlb
cli
aas
add
fcoml
clc
or
in
insb
call
repz
sub
mov
add
mov
fcom
mov
mov
xchg
stos
sbb
cld
fadds
int
cmpb
mov
imul
pushf
pop
in
push
push
andps
mov
popf
fdivrl
adc
movsl
xchg
bound
ret
xchg
in
fnstenv
mov
pop
out
jecxz
mov
es
js
cltd
mov
shr
add
and
adc
imul
cmp
aam
cli
stos
mov
push
push
mov
andb
icebp
pop
xchg
cmp
in
adc
sti
xor
mov
adc
push
ss
fnstenv
lea
inc
in
jnp
adc
mov
pop
aam
push
outsb
daa
adc
aam
push
pop
out
lahf
aas
fisttps
leave
testb
and
sti
scas
popf
push
sub
push
mov
mov
jmp
and
insb
cmp
inc
sbb
or
sub
out
adc
mov
xchg
and
outsb
sbbl
mov
pop
cmp
or
popa
pusha
push
nop
xchg
mov
bound
and
loope
push
cmp
ds
mov
sbb
jge
cli
ret
or
scas
push
repz
movsb
sbb
jg
cs
mov
in
cmc
je
add
punpckhwd
fcmovbe
lock
mov
pop
rorb
xor
adc
or
and
inc
cmpsb
scas
das
xlat
imul
lds
mov
dec
in
in
xchg
push
xor
add
mov
pop
pushf
iret
add
mov
shrb
in
dec
mov
cli
mov
inc
dec
jmp
incl
test
cmp
dec
and
leave
mov
mov
inc
sarb
cmp
push
sub
xor
xchg
test
push
xorl
lret
fs
inc
xchg
call
push
mov
test
leave
ss
lea
scas
js
jo
ljmp
fiaddl
cmpl
adc
lods
lahf
addb
push
inc
test
xchg
sahf
add
and
adc
mov
idiv
or
jb
inc
mov
call
xchg
lea
out
push
mov
das
out
fadds
nop
cwtl
mov
mov
cmp
mov
cmc
adc
stos
cmp
subl
and
mov
nop
adc
push
aam
lahf
and
repz
dec
push
mov
sti
inc
pusha
fs
into
cmc
fisttpll
in
sub
pop
dec
add
mov
and
fsts
pushf
lahf
jbe
sahf
adc
es
enter
xor
scas
mov
jge
sarl
mov
lods
jecxz
mov
pop
test
sub
sub
arpl
cwtl
push
mov
scas
repz
aaa
push
lcall
cmpsl
fwait
cmp
xchg
loop
mov
or
test
pop
cmp
in
and
inc
jb
clc
add
je
aas
les
sub
ss
sbb
daa
test
repz
loopne
push
sbb
inc
cs
repnz
andl
dec
dec
lea
adc
push
push
cmp
fstl
fldt
sbb
inc
fstp
movb
insb
sti
dec
lcall
fnstsw
daa
cwtl
xlat
out
outsb
bound
aad
inc
inc
mov
jbe
sub
xor
push
pushl
dec
inc
and
jo
add
pop
or
jo
adc
mov
pop
mov
fildll
cmpsl
xor
add
mov
sub
stc
testb
xor
pop
imull
xor
popa
imul
aam
cld
cli
ds
pop
mov
adc
sti
lret
inc
out
xchg
mov
outsl
andl
jmp
xchg
movsb
ss
int
lcall
sub
xor
sub
push
fbld
test
imul
jmp
test
xchg
sarb
xorl
cltd
mov
sub
inc
leave
lahf
mov
ret
rcrl
insl
inc
imul
sub
sbb
sbb
xor
rcrb
jl
pop
arpl
jl
icebp
cmp
mov
add
int3
xchg
call
push
pop
adc
insl
div
push
mov
in
inc
notl
loop
sub
cltd
sbb
clc
mov
das
push
sbbl
mov
push
mov
test
imull
mov
adc
xchg
push
loop
shrl
rolb
and
pop
xlat
mov
xorb
mov
jp
js
mov
xchg
nop
and
insl
or
popa
lret
xchg
arpl
or
lock
pop
pushf
jo
stc
sbb
cmp
addr16
add
xchg
inc
ja
inc
mov
or
into
xor
outsb
push
and
out
fimull
daa
test
mov
outsl
mov
cwtl
sti
outsb
jnp
mov
push
adc
aas
and
pop
fstps
nop
call
fwait
sub
leave
test
out
inc
xorb
inc
sbb
and
fimull
fcompl
std
and
sub
inc
fadd
xchg
cmpsl
inc
push
test
push
xor
cmp
push
ds
or
jg
adc
mov
lods
or
cmpb
adc
mov
pop
sbb
sbb
push
clc
aaa
pop
and
sbb
ret
lahf
out
or
adcb
popa
adc
das
add
outsb
out
xchg
add
jne
fwait
xorl
jbe
decl
mov
fisttpl
out
xchg
push
cmp
fdivp
pop
dec
mov
xor
xor
nop
scas
mov
mov
enter
and
mov
bound
lret
jb
ja
jo
repz
xor
mov
stos
das
jb
in
shrb
repnz
insl
cmpsl
mov
push
movsb
adc
rcll
fwait
push
pop
mov
int
sub
pushf
inc
lods
xor
pushl
push
pop
mov
shl
xor
and
subl
andl
cmpsb
mov
ljmp
andl
imul
push
dec
xor
inc
div
sbb
pop
shlb
lcall
mov
dec
jbe
mov
stc
roll
mov
sahf
inc
in
dec
iret
int
or
dec
out
cltd
mov
sub
sahf
cmpl
adc
mov
cli
push
je
mov
and
je
mov
mov
in
mov
xor
mov
ja
mov
rcl
jmp
imul
je
repz
stos
inc
movsb
xchg
add
ret
jmp
lahf
sub
test
lods
nop
xlat
inc
and
xor
jo
ja
push
nop
fnstsw
inc
lret
into
arpl
mov
or
fimuls
lret
repnz
sbb
pop
test
sbb
cwtl
leave
cmc
push
push
xchg
sub
fimull
jge
jmp
sbb
cli
pop
adc
xor
mov
add
mov
inc
loop
rcll
insb
xchg
enter
idivb
decb
add
repz
sbb
insl
add
inc
in
pop
mov
cs
movsl
pop
dec
iret
stc
mov
push
cmp
and
sub
inc
pushf
cli
aaa
std
aas
int
cmp
add
sbb
repnz
loope
xchg
mov
jge
je
rcrl
sub
and
mov
sub
in
push
jp
repnz
out
xchg
adc
push
lods
das
adc
aam
addr16
in
out
lret
push
sbb
repz
mov
outsb
mov
mov
sbb
enter
pushf
inc
mov
mov
mov
out
dec
xor
hlt
jne
xchg
jns
stos
jecxz
pop
inc
lds
btcl
call
lods
repz
data16
enter
pop
xor
add
out
sti
dec
cmpl
jne
inc
cmpl
pop
lahf
nop
stos
add
std
fistps
loopne
fwait
sbb
pop
push
push
inc
sbb
cmp
scas
jecxz
stos
xchg
and
leave
jp
jge
lock
pushf
dec
stos
lock
daa
cs
mov
hlt
or
add
int3
mov
lods
jbe
das
std
or
mov
xchg
mul
pop
outsb
sahf
sbb
pop
cmp
je
pusha
shll
xchg
nop
sub
nop
jne
js
push
movsl
push
jnp
stos
inc
lods
mov
repnz
xor
inc
rorl
aad
movsb
in
mov
js
into
sbb
cwtl
ljmp
imul
mov
cmp
mull
out
cs
stos
push
in
sti
or
jo
inc
or
leave
inc
or
adc
repz
or
lret
xorl
mov
xchg
mov
xchg
fdivs
sbb
outsl
mov
daa
lock
mov
inc
jmp
enter
psllw
aas
lcall
test
in
dec
push
test
les
adc
push
jge
mov
push
dec
add
jmp
or
xchg
dec
cmp
loope
xchg
mov
insb
pop
movsb
fsubrl
inc
and
pop
jno
and
mov
jecxz
xchg
movsl
in
repz
es
movsl
sub
xchg
xor
adc
sub
mov
mov
loop
add
ret
out
cmp
cld
in
clc
cmp
pop
or
out
add
pop
dec
out
adc
push
mov
pushf
movsb
cmc
rcll
and
sbb
addr16
mov
into
adc
and
cmpsb
inc
insb
movb
inc
mov
jne
pusha
add
imul
and
rcl
push
stos
scas
pushf
push
jge
cmp
push
mov
sti
out
inc
shrb
rolb
pop
lods
fwait
xor
scas
push
push
das
mov
jecxz
xor
dec
fsubl
inc
ficoml
pop
outsl
into
inc
cltd
mov
dec
cmp
pop
xchg
ret
or
in
or
pop
sbb
popa
pop
int
shl
mov
xlat
xchg
pop
int
push
stc
popf
ret
adc
jo
aaa
insb
sub
mov
pop
dec
add
xor
scas
sub
adc
xor
fsts
or
arpl
xchg
ds
stos
out
out
xor
imul
decl
sub
shll
adc
jle
mov
flds
dec
movsl
rcrb
call
sbbl
shll
repz
stc
xor
pop
mov
insl
mov
add
jl
iret
fcompl
inc
mov
outsl
test
xchg
or
ja
mov
mov
add
imulb
adc
mov
sahf
jnp
in
and
xchg
lahf
inc
mov
add
out
and
push
adc
testb
add
cld
rcr
int3
mov
bnd
xor
or
pop
and
aaa
scas
push
jmp
adc
imul
jp
add
dec
inc
mull
xchg
ret
repnz
in
es
arpl
push
xor
cmp
and
dec
fistpll
adc
insb
repz
inc
in
push
negb
adc
jno
dec
nop
cs
scas
fisubl
jns
cmp
in
cmpsl
pop
mov
outsb
negl
imul
out
mov
and
adc
push
jmp
mov
inc
in
push
lret
push
dec
jmp
cwtl
pop
jl
jae
repz
xor
xchg
inc
push
and
pop
cmp
test
sub
rol
sub
sub
mov
loope
or
push
cltd
sti
arpl
cmp
fdivrl
jle
mov
pop
pop
push
xor
fmull
and
mov
imul
sbb
push
lret
mov
or
add
jecxz
in
cld
jno
pop
dec
inc
movl
sub
fldcw
inc
mov
lods
and
bound
adc
setg
xor
rorb
in
push
in
les
sarl
mov
mov
fbld
int3
aas
outsb
je
lret
xor
loop
stos
sbb
data16
addr16
push
and
cmp
stc
add
data16
cs
jmp
xchg
adc
pushf
mov
push
pop
push
adc
pop
mov
adc
jg
decb
repz
sub
cmpsb
popa
or
mov
jnp
cmpl
mov
jge
xor
loop
out
jg
movsl
ja
in
lds
iret
xor
pop
pop
dec
cmp
mov
shrl
mov
fldcw
pushf
jge
outsb
mov
test
testl
push
enter
xor
dec
or
mov
jbe
std
fldcw
push
xor
data16
movsb
sahf
jmp
and
mov
xchg
push
das
xor
pusha
iret
in
testl
loop
stos
pop
pop
push
lock
mov
xlat
and
test
rclb
push
pop
mov
je
xchg
fstps
sub
dec
jno
es
xchg
lret
sub
xchg
fisttpll
test
arpl
fstps
mov
inc
dec
lcall
and
add
xchg
xor
repz
fwait
jnp
inc
xchg
xlat
or
fwait
orl
cmpsb
add
jge
call
xchg
mov
mul
push
sbb
fstps
jmp
cmp
scas
ljmp
cs
shll
mov
stos
and
fcmovnb
or
fwait
mov
jns
addb
mov
or
bswap
sub
in
dec
in
ja
mov
rcrl
test
add
xor
addr16
jb
push
pop
pop
int
cmp
fdivr
cltd
inc
pop
daa
aas
add
mov
pop
add
test
sbb
jno
sahf
mov
lock
push
mov
sub
hlt
lds
sub
jmp
jo
inc
aaa
test
pop
xor
jmp
dec
push
sahf
dec
jb
inc
pop
jb
fisubrs
mov
js
xor
repnz
cmp
les
adc
subl
xor
sbb
mov
sub
jbe
sub
lods
push
jno
xor
fstpl
push
mov
adc
cli
and
cli
aas
inc
stos
mov
adc
es
fwait
mov
cs
stc
add
cld
adc
fisttpll
dec
adc
jle
inc
or
mov
push
shlb
jne
arpl
das
mov
out
dec
loopne
xchg
and
fiaddl
jge
or
fldenv
fsubl
inc
adc
sub
dec
insl
ja
adc
sti
add
ja
jb
mov
dec
arpl
add
adc
std
sub
xor
in
inc
inc
or
lret
jmp
test
scas
pop
xchg
sbb
pop
push
cmp
cmp
pop
cmpsl
xor
mov
aad
insb
cli
push
push
ds
test
sbbb
out
add
imul
ucomiss
lea
push
lahf
fs
std
and
out
das
jno
cmp
test
xchg
mov
xlat
in
sbb
gs
sub
pop
out
imul
data16
icebp
out
cmp
fbld
stos
xor
inc
xchg
jle
inc
mov
in
add
arpl
clc
notb
aad
int
mov
repz
push
add
sti
fdivl
sbb
das
pop
flds
and
insb
ljmp
dec
daa
int
push
push
cmp
xchg
jno
pusha
xchg
scas
outsb
lahf
cmp
in
gs
xor
cmp
push
dec
xor
inc
xor
jmp
xor
pushfw
icebp
fisttpll
adc
into
stos
fdivrp
loope
clc
push
in
out
fucomp
mov
and
mov
and
push
and
jmp
lods
cwtl
xor
jo
jns
scas
je
xchg
into
paddsw
and
push
pop
jle
hlt
jmp
push
mov
cmc
sbb
mov
and
test
das
jl
push
inc
mov
mov
xor
repnz
push
xchg
movsb
addr16
mov
cmp
mov
outsb
sti
adc
xor
xor
adc
sub
lock
push
push
shrl
mov
pusha
xlat
ror
sbb
push
mov
sub
and
ja
dec
xor
or
adc
out
and
sbb
jg
mov
cmp
pop
and
dec
leave
bound
mov
sbb
ds
fsub
cmp
xor
adc
mov
sbb
stos
insw
ret
adc
bound
ja
pop
cmp
lods
hlt
test
call
or
add
xchg
aas
iret
aad
push
and
or
out
dec
test
fists
movsl
mov
pushf
scas
add
lods
pusha
sarb
std
add
js
jne
std
and
test
sti
repz
adc
sarb
cli
aam
shl
sbb
out
js
mov
pop
or
dec
push
pop
out
jbe
fildl
sarl
sub
jg
mov
mov
jo
jnp
cli
cmp
pop
xor
shr
ftst
pusha
mov
mov
aas
test
cmpsl
xor
imul
jae
pop
mov
test
cmp
stc
ss
jge
jle
fsts
cwtl
jno
fiaddl
in
andl
test
mov
jo
cltd
stos
cmp
dec
pop
fisubrl
push
scas
or
notb
and
mov
leave
fildll
jno
mov
test
mov
data16
bound
fwait
or
int3
fwait
int
jle
adc
imul
push
int
push
lret
and
or
cmpl
adc
sub
out
add
icebp
das
add
das
xchg
fst
sbb
add
fs
add
pop
fdivrl
dec
jne
push
mov
push
dec
add
icebp
mov
xchg
inc
out
inc
mov
out
scas
jo
sbb
in
push
fadds
pop
xchg
mov
jg
scas
inc
iret
fstl
imul
das
adc
lods
pushf
pop
push
jne
adc
scas
jne
daa
add
sbb
stc
cltd
lret
cmp
mov
cmp
xchg
adc
mov
mov
cmp
iret
popf
js
and
ficoml
lret
add
add
in
mov
mov
mov
je
xchg
pushf
xor
pop
orb
je
xchg
in
pop
cmp
push
add
divb
out
ficoml
mov
inc
insl
and
shll
ud1
mov
jb
inc
push
cvtsi2sdl
jmp
cmp
xor
dec
jl
jg
push
cmp
mov
push
dec
daa
sahf
cwtl
cmp
add
fyl2x
and
inc
aad
js
xchg
and
in
dec
mov
xor
push
xchg
fwait
sub
pop
addr16
les
push
in
addl
repnz
gs
loop
mov
cmp
rolb
sub
rcl
stos
lods
sub
and
push
pop
cmp
testl
mov
pop
mov
dec
rol
clc
xor
push
xchg
faddl
repz
jp
mov
adc
andl
fwait
add
les
fcmovb
repz
sahf
lahf
inc
sbb
imul
xchg
fmull
ljmp
imul
ss
ret
imul
rclb
fstpl
xchg
mov
jecxz
pop
xorb
insb
jno
insl
push
cmp
jns
dec
out
rcll
int
dec
lret
out
mov
int
shr
cmpordps
movsb
arpl
stos
in
jmp
push
jle
mov
dec
orb
popa
pop
shlb
scas
pop
lock
mov
mov
jg
fistpll
fwait
addb
ret
in
mov
dec
mov
xchg
add
or
or
fisubs
test
xor
je
fcomip
jge
rorb
or
jnp
xchg
pop
insl
push
rorb
scas
xchg
stos
pop
cli
mov
inc
testl
bound
mov
pop
out
js
and
pop
ja
jecxz
test
xchg
orl
sbb
outsb
pusha
movb
incb
dec
stc
aaa
mov
sub
xchg
movsb
sbb
xchg
jmp
xor
pop
fcompl
rcl
pop
stos
adc
mov
cmp
sub
and
fisubs
cmpsl
fdivrl
mov
mov
sbbb
push
jns
inc
syscall
repnz
push
xor
int3
mov
test
cwtl
fnstenv
jae
insb
mov
lret
pop
mov
call
or
arpl
jne
popf
add
xor
fdivl
shr
and
std
inc
add
jp
jns
sub
fadd
je
addl
popf
adc
jmp
out
or
leave
cs
inc
dec
sub
mov
pusha
movsb
mov
dec
and
adc
les
xchg
sub
inc
insb
xchg
jnp
das
cmc
fidivl
inc
cmp
mov
stos
sahf
into
xchg
xor
sub
ret
cmc
rolb
lea
sti
push
xchg
mov
sbb
popf
jp
movsl
js
dec
test
mov
jne
cmp
push
mov
jge
fcmove
rorb
sahf
test
jge
and
fidivl
fsub
ror
cmp
insl
subl
mov
les
subb
repz
lods
cmpsl
mov
outsb
stos
sbb
ss
pop
int3
sbb
mov
aad
or
in
mov
sub
mov
jg
or
xor
bound
cmp
insb
xor
aam
movsb
mov
std
ret
mov
push
push
dec
in
xchg
aam
pop
imul
cmp
push
icebp
bound
xchg
int3
mov
lcall
mov
sbb
imul
testb
or
push
es
adc
mov
mov
das
jbe
iret
daa
cmc
pop
adc
inc
push
aad
out
or
out
inc
sub
cmp
call
out
popf
cmp
lahf
int3
fwait
and
pop
fisubs
push
adc
nop
xlat
daa
push
test
movb
dec
xor
push
inc
lods
mov
push
das
xchg
dec
inc
xor
xchg
push
mov
std
sbb
stc
cltd
sub
out
cmp
xor
jp
pop
lods
xor
sub
nop
cmp
xorl
mov
mov
or
jecxz
and
mov
sbb
leave
lock
inc
bound
cmpsl
loopne
sti
gs
xor
ror
ss
es
sbb
xchg
mov
add
adc
js
outsb
out
sahf
xor
xchg
and
sarb
mov
daa
sub
sbb
jno
loope
cmp
orps
and
xchg
xchg
test
mov
in
or
out
ss
negl
imul
rcl
mov
add
cmp
popf
push
adc
mov
mov
jge
loope
fmuls
test
or
int3
cmp
xchg
ja
fsts
pop
fbld
icebp
xor
push
sbb
adc
mov
xchg
in
lcall
rclb
fwait
mov
ja
adcb
rol
xlat
arpl
jge
xchg
add
js
popa
fs
out
iret
fwait
lea
xchg
enter
sub
sahf
popa
outsl
pop
bnd
jae
mov
xor
push
leave
jb
mov
es
dec
repz
int3
lret
jns
cmc
sub
xchg
scas
mov
test
push
xchg
loopne
call
mov
ret
in
cmovp
dec
or
mov
add
adc
jecxz
mov
xchg
push
mov
imul
and
mov
enter
aad
mov
adc
lcall
scas
ret
push
imul
pop
mov
ds
stos
jecxz
dec
mov
pop
dec
jge
adc
jecxz
mull
xor
adc
aad
xchg
push
insl
fst
inc
xchg
mov
je
lods
pop
inc
adc
mov
mov
imul
arpl
clc
adc
xchg
sbb
test
sbb
jnp
inc
nop
jmp
push
call
arpl
sbb
dec
out
jg
mov
rolb
cmc
pop
cmp
xchg
jg
je
mov
fucom
daa
daa
leave
cmc
notl
je
push
pop
sbb
hlt
xor
mov
fisttpll
sub
repz
lret
mov
arpl
test
hlt
pop
outsl
jle,pt
nop
sub
push
jo
dec
xor
push
movsl
xor
xchg
jbe
xor
shl
and
add
mov
into
cltd
cs
sub
insl
in
sbb
inc
add
sub
into
push
add
or
mov
pusha
sbb
pop
imul
mov
test
adc
imul
mov
cmpb
pop
xlat
lret
into
inc
push
inc
daa
inc
mov
addr16
daa
cmp
loopne
pop
xorb
in
inc
jbe
rcl
fs
add
sub
mov
jnp
hlt
in
jns
mov
jp
mov
daa
pop
pop
cmpsb
pop
jle
enter
int
in
out
add
jle
cltd
sahf
ds
arpl
adc
mov
lahf
cmp
fwait
pop
or
into
inc
test
out
movsb
xor
xor
mov
and
lods
cmp
mov
or
push
pop
mov
jmp
adc
push
cmp
pop
add
in
push
xor
scas
jne
push
insl
sbb
push
adc
push
push
or
xor
cmpsb
add
movsb
xchg
and
ss
fmuls
ljmp
rcrb
aaa
and
jns
sahf
inc
dec
in
repnz
xchg
sarb
outsl
out
push
pop
sub
and
jecxz
mov
stc
pop
aaa
jnp
push
add
in
popa
rorl
in
pop
xor
aad
sub
fmull
cmp
mov
inc
xor
jns
fwait
mov
inc
adc
or
jns
movsb
adc
adc
shlb
repz
add
les
ret
popa
inc
std
fcomps
enter
cmp
sub
mov
push
adc
aam
lock
mov
shll
mov
cmp
call
jbe
punpcklbw
mov
inc
and
push
cmp
mov
ljmp
sahf
arpl
add
push
cmp
rcrb
sti
cmpsb
test
adc
cmpsb
cmp
and
inc
mov
xchg
das
push
inc
jo
adc
jo
rorl
cmp
repnz
or
inc
add
cmpsb
pushf
push
cmp
hlt
mov
sbb
pop
mov
xchg
inc
adcb
mov
call
mov
ss
in
pop
cmp
sbb
outsl
sar
jp
mov
popl
push
repnz
pushf
in
mov
and
fwait
mov
into
fadd
nop
add
insb
add
fs
in
std
adc
mov
xchg
in
outsl
aaa
stos
mov
in
lock
movsl
cld
idiv
iret
add
dec
xor
lahf
fcoml
rorb
sbb
ficomps
push
mov
xor
pop
int3
push
lret
iret
inc
bound
mov
sbb
test
aad
repz
movsb
jno
je
out
jg
lods
cld
in
or
xchg
dec
mov
aas
lahf
sub
add
pushf
leave
lods
pop
push
rolb
pushf
inc
imul
aas
xor
push
sub
cltd
dec
cmp
ficoml
popf
xor
fwait
call
es
cltd
and
pop
stc
dec
lea
pushf
test
push
inc
mov
pop
into
aaa
pop
sbb
or
js
mov
fwait
jp
sbb
jle
dec
xor
fmull
pop
or
mov
inc
sarl
andb
stos
shll
jge
or
xchg
pop
sbb
or
stc
cmc
adcb
and
out
lock
mov
mov
mov
lods
and
js
addr16
add
jbe
or
cwtl
std
cmp
jmp
std
mov
push
add
popf
enter
dec
das
test
push
enter
lret
in
mov
sbb
cmc
xor
pop
enter
scas
mov
mov
clc
push
xchg
cmpsb
dec
sbbb
lret
adc
sub
push
sbb
je
out
das
call
xor
pop
or
sarb
setle
mov
push
add
cli
insb
mov
xchg
daa
jmp
ss
mov
lret
js
addb
loope
and
sbb
test
inc
cmp
or
pop
pop
mov
sub
addr16
mov
out
cmp
mov
mov
xorl
pop
push
daa
add
sbb
adc
xchg
mov
cmp
jmp
push
jbe
leave
sti
dec
shrl
lds
fisubrl
stos
inc
mov
mov
jb
ja
das
mov
aaa
daa
aas
xor
sub
add
or
fdivs
stos
scas
inc
cmp
dec
lea
ja
imul
mov
sub
test
jne
cmpsb
int
int3
pop
imul
movb
inc
push
int
repz
test
sbb
or
mov
xchg
sti
mov
out
mov
mov
in
xor
ja
divl
cmp
addb
mov
xchg
in
ficomps
sbb
lods
xor
push
iret
sbb
and
and
mov
cmp
jg
mov
pushf
daa
shrb
imul
xor
mov
push
jmp
xlat
mov
sbb
enter
fdivr
add
adc
push
add
lahf
pop
in
xchg
xchg
mov
sub
sub
cmp
leave
ret
pop
mov
pop
xchg
stc
add
rcrb
in
sbb
xchg
dec
add
add
and
scas
aaa
pop
lret
in
add
into
push
cmp
cld
out
and
jp
mov
xchg
cmp
jno
repnz
or
push
mov
inc
out
xor
mov
inc
pop
loope
adcb
sarl
jns
sub
out
inc
jmp
mov
icebp
hlt
jns
fstp
pop
jmp
push
nop
cmpsl
shlb
cli
andb
xchg
arpl
mov
and
push
xchg
xor
and
mov
push
mov
pop
aaa
test
inc
dec
mov
shlb
add
jecxz
outsl
inc
ret
pop
icebp
in
dec
mov
arpl
cwtl
push
insl
test
and
xchg
dec
arpl
inc
pop
flds
push
jo
movb
divb
imull
gs
sub
push
inc
das
dec
jecxz
mov
mov
xchg
jle
push
iret
imul
shlb
sub
leave
les
popf
ss
ficoml
mov
nop/reserved
shrb
test
stos
mov
mov
pop
addr16
cmp
std
incl
pop
js
inc
or
and
aaa
or
rolb
sub
fcomps
push
mov
push
sti
mov
clc
hlt
ds
cmpsb
fimull
mov
test
xchg
imul
or
fdivs
in
jge
mov
and
mov
mov
mov
push
xchg
gs
stos
sub
adc
sub
ja
push
movsb
rcrl
push
push
or
mov
mov
inc
int
scas
cmp
push
dec
mov
pop
andl
test
lds
xor
adc
imul
mov
xor
hlt
mov
mov
xchg
sub
xchg
push
push
les
mov
ja
lahf
or
add
add
jp
subl
movsl
or
xchg
dec
dec
das
push
or
jae
cli
or
nop
push
xchg
lret
rclb
je
out
pop
fdivs
gs
sahf
fs
sahf
mov
pop
push
fdivs
into
fisttps
push
mov
add
mov
mov
mov
loop
cmp
sahf
pop
scas
add
ja
in
cmp
mov
push
inc
pop
sar
insl
test
stos
aad
cmp
rcr
pop
dec
mov
les
jg
icebp
dec
xor
mov
pop
adc
mov
sub
dec
minps
mov
sahf
call
cs
out
ss
dec
popf
mov
adcl
push
in
jmp
xor
sub
ficoml
subb
mov
lret
pop
cmp
mov
ret
push
jnp
loope
xchg
jne
cltd
stc
mov
stos
adc
andb
xchg
sahf
mov
stos
pushf
ljmp
push
mov
popa
cmpsb
mov
push
jno
push
sbb
xchg
sub
lcall
sbb
stc
xor
loopne
dec
test
divl
mov
out
gs
sbb
sub
int
aas
fistpll
push
movsb
pusha
push
inc
stos
xor
das
cmp
adc
inc
loopne
add
repz
in
jg
add
ja
mov
dec
cmp
xor
inc
or
outsl
popf
pop
mov
lock
or
mov
push
add
mov
stos
mov
jmp
push
fldcw
mov
lods
add
sbb
mov
mov
mov
fidivs
inc
xchg
or
adc
xchg
sbb
leave
mov
mov
jo
out
sbb
dec
mov
sub
xchg
jo
cmp
iret
and
aaa
ljmp
lahf
mov
pop
sbb
and
sub
inc
push
lcall
jp
pop
icebp
pushf
xor
in
mov
cltd
sub
add
mov
add
dec
insb
xor
push
jmp
bound
sbb
mov
rolb
insb
jp
adc
adc
addr16
aas
cmpsl
repz
jnp
mov
mov
mov
cmpsl
clc
add
mov
xchg
mov
sub
xor
ss
dec
test
jns
aaa
jmp
sbb
ret
push
daa
pop
cld
mov
adc
sub
pop
icebp
mov
mov
push
mov
div
cmpsl
xchg
clc
mov
dec
or
fst
dec
xor
adc
inc
popf
xchg
test
and
jno
nop
je
mov
into
add
xor
push
pop
js
push
inc
xchg
cmpsb
push
aaa
inc
cwtl
add
jae
jb
jno
or
mov
jp
scas
repnz
fwait
mov
cli
lcall
push
add
shlb
ret
shlb
inc
jns
popa
mov
outsb
mov
cs
xchg
hlt
sub
xchg
lods
mull
cmp
inc
jle
sahf
nop
jp
jne
jl
pushf
popf
jnp,pt
mov
sub
adc
aaa
mov
loopne
gs
cmp
sarb
adc
out
and
aam
or
sub
out
out
fiaddl
add
xchg
test
dec
xor
dec
inc
lret
icebp
inc
jnp
mov
icebp
jae
mov
mov
dec
negb
std
push
into
and
inc
mov
lods
rcr
and
ret
into
les
pop
aas
pop
pop
inc
pop
test
shl
cld
rorl
xchg
xchg
loopew
push
rcrl
push
repz
ja
or
test
fdivl
sbb
leave
mov
cmp
xchg
sbb
xor
lea
mov
lcall
int3
repnz
xchg
ret
adc
cmp
outsb
hlt
lods
repnz
xor
fucomip
bound
pop
mov
cmc
sbbl
jecxz
mov
cmpsl
cmpsl
fstpl
jmp
xchg
ficoml
adc
in
sbb
adc
jo
mov
hlt
cmpl
jmp
std
dec
jo
mov
push
inc
push
mov
mov
xchg
push
and
shrb
jge
sbb
shrl
loope
into
lods
cmpsl
mov
fcmovu
cmp
jo
inc
pop
push
push
test
mov
mov
and
sahf
xor
dec
sti
jecxz
inc
xor
inc
adcl
push
scas
sarb
add
lcall
sbb
imul
dec
movsl
and
mov
fwait
xchg
stos
or
or
mov
mov
repnz
pop
xchg
xchg
mov
jo
aad
aam
ljmp
push
sahf
fisubrs
mov
movsl
orb
movsl
cmp
popa
pop
cltd
test
mov
jns
loopne
in
data16
lods
test
fnsave
gs
mov
movsb
cmpsl
dec
xchg
test
jo
leave
mull
lcall
fisttps
jae
xor
cs
loope
add
inc
stos
and
dec
mov
loope
aas
stos
push
popa
int3
sahf
mov
nop
imull
xor
fisubrl
les
sub
mov
rcr
dec
andb
inc
inc
jb
movsl
sbb
lcall
xor
sub
mov
int
xchg
inc
and
sub
cmc
jns
pop
cmp
pop
mov
cld
jge
mov
cmp
sbb
scas
and
sbb
mov
inc
sub
adc
mov
ffreep
inc
cmp
lea
push
push
push
nop
mov
add
or
push
out
out
add
mov
insb
push
and
pop
gs
cmc
sbb
xchg
add
test
pop
out
into
std
mov
sbb
clc
xor
in
dec
insl
nop
sub
inc
out
inc
jle
mov
enter
mov
dec
in
pop
mov
dec
dec
testb
mov
lds
cmp
add
dec
jl
push
movsb
cs
jle
sub
push
fcoms
dec
sti
pop
and
cli
fincstp
xchg
fldl
sbb
rorl
pop
xor
or
repnz
sub
mov
xor
jecxz
pop
mov
out
loop
inc
scas
pusha
sbb
emms
outsb
fnsave
pop
inc
mov
das
andb
inc
xor
outsb
jb
cwtl
xchg
arpl
aas
rcll
in
outsl
push
push
cmp
inc
inc
bound
outsl
test
push
nop
int3
xlat
dec
dec
scas
sub
mov
push
xchg
xor
cld
test
mov
sbb
jge
movsl
aam
je
or
mov
mov
fisubs
xchg
dec
push
sbb
and
sar
lods
call
sub
test
adc
push
scas
and
andl
out
xchg
fsubl
lret
jecxz
cmp
in
sub
pop
mov
movsl
repnz
mov
lea
xor
stc
jbe
les
cmp
xor
and
mov
jge
jmp
pop
push
sti
jnp
dec
jns
rcrb
sub
popf
mov
scas
push
push
xor
cmp
add
adc
in
std
out
loop
mov
or
mov
ja
lcall
inc
cs
sub
inc
cmp
lds
es
xchg
sbb
popa
sbb
imul
push
and
outsb
push
add
inc
dec
push
cli
mov
sub
out
dec
push
lea
mov
adc
cs
jae
insb
dec
int3
test
dec
sub
push
jg
dec
add
push
mov
adc
rcr
and
or
add
jg
inc
popa
outsb
mov
jns
test
mov
adc
sub
ret
insb
xor
jne
cmp
or
push
pop
dec
ror
std
mov
sbbb
xchg
nop
lods
sbb
inc
scas
adc
dec
sbb
stos
add
fiaddl
adc
jp
xchg
jl
mov
push
push
out
pop
xchg
push
mov
dec
xchg
xchg
scas
add
fcom
test
ds
sub
xchg
and
aam
es
outsb
data16
call
loopne
fsub
fs
or
mov
or
mov
fnsave
mov
sbb
cld
imul
jb
xor
jae
jl
cmp
sbbl
lahf
xchg
xchg
iret
xchg
adc
pusha
dec
call
sub
dec
cmc
clc
dec
bound
stos
inc
sbb
movsl
dec
fwait
pop
mov
addr16
mov
xchg
popa
aas
sbb
sbb
push
inc
stc
jmp
mov
std
stos
push
ret
pop
int
jg
sbb
push
xor
dec
out
mov
mov
adc
fcomip
cwtl
mov
outsl
cmp
push
fucomip
inc
les
inc
and
fs
adc
sbbb
lds
mov
inc
int3
add
jmp
nopl
add
push
imul
ret
mov
fcomip
iret
imul
cmp
das
in
arpl
std
nop
push
or
outsb
in
es
aas
and
xchg
aad
test
pop
ss
xor
in
call
lret
jmp
push
out
sbb
lret
xchg
cmp
int
dec
js
xchg
jno
adc
jmp
mov
or
movl
pop
mov
xchg
add
enter
pop
mov
sub
in
sti
push
xor
outsl
inc
xchg
xor
dec
or
jb
push
std
scas
add
xchg
mov
shlb
xchg
test
dec
test
int
xor
push
pop
aaa
or
sub
out
pushf
loop
cmp
jp
push
push
add
movsb
into
add
mov
fstps
out
cmp
pop
lea
orl
mov
jns
leave
rcll
cld
sarl
dec
daa
mov
jmp
mov
push
jg
sbb
or
arpl
sti
movsb
or
cmpl
sahf
sbb
popa
inc
push
test
sbb
loopne
in
adc
fisubs
inc
xchg
mov
push
pusha
scas
cmp
mov
push
pop
arpl
cltd
add
je
js
repz
and
xchg
push
or
mov
movb
out
ds
xchg
or
sub
dec
in
fsubp
addr16
mov
mov
xor
loop
or
add
push
add
inc
push
jle
out
test
and
xor
mov
loope
dec
jle
sbb
nop
cmp
rcrb
fidivl
lret
sub
add
or
ss
int3
xor
adc
stos
test
cltd
mov
xlat
mov
cmp
mov
lds
outsl
mov
add
xchg
dec
lea
iret
repnz
cmp
std
adc
pop
rcrb
into
push
fisubrs
aad
jl
pop
cmp
pushf
dec
cmpsl
pop
sbb
pop
daa
inc
das
push
rclb
in
jae
arpl
ret
mov
or
cmp
adc
ljmp
shl
jg
fildl
dec
lods
xlat
out
popa
xchg
negl
mov
mov
out
enter
or
or
pushf
es
sbb
pop
pop
add
idiv
push
cmp
add
add
adc
sbb
fwait
xchg
leave
repnz
shl
mov
jb
adc
mov
rorl
repnz
addr16
sub
into
movsl
xor
call
sbb
std
push
xor
daa
lds
fwait
rcr
mov
mov
test
mov
adc
icebp
sahf
inc
sar
sbbl
xchg
test
inc
mov
push
mov
out
fsubs
xchg
shll
and
mov
inc
fists
leave
fwait
fs
ds
jno,pn
popf
sbb
clc
mov
dec
and
or
mov
mov
sbb
ror
fistpl
frstor
and
mov
btr
inc
fdivl
pusha
inc
xchg
xchg
adc
stos
adc
cmp
scas
cmp
clc
cli
insb
xor
mov
push
jb
push
jmp
push
hlt
jbe
cmpsl
loop
out
mov
adc
jmp
dec
mov
enter
xchg
lods
or
pop
lcall
or
in
dec
xor
ret
add
sbb
mov
or
dec
sub
and
mov
add
add
bswap
hlt
test
fists
outsb
xor
pusha
sarl
sub
pop
sarb
scas
cmp
lds
push
test
dec
mov
jns,pt
add
in
les
fs
sbb
xchg
ljmp
adc
jecxz
fs
cli
sbb
add
add
enter
test
jg
out
xchg
mov
dec
dec
les
and
pop
bound
lea
adc
ss
fnstsw
cmpsb
and
mov
push
push
mov
rcr
jno
and
push
popa
lcall
imul
adc
mov
mov
stos
cld
and
ds
cmp
xorl
dec
leave
mov
arpl
and
mov
inc
add
call
cld
mov
rep
mov
mov
hlt
mov
repnz
pop
gs
inc
call
aad
cwtl
mov
xchg
repnz
push
addb
inc
pop
xchg
out
out
dec
test
jl
pushf
pushl
popf
xor
mov
outsl
push
xchg
inc
rolb
lds
push
dec
inc
jb
sub
pop
int3
movsb
mov
repnz
addr16
std
out
lods
movsl
sbb
sahf
into
mov
fldl
cmp
outsl
mov
dec
rorl
fldl2t
push
cld
adc
ljmp
mov
jb
mov
jne
add
xor
inc
out
mov
stos
popf
sub
push
push
and
add
mov
aad
inc
push
inc
shll
or
fcoms
adc
mov
in
rorl
xchg
in
jmp
dec
adc
pop
fucomip
imul
adc
mov
and
mov
jns
in
pop
addl
scas
pop
popa
inc
xchg
fists
inc
inc
loop
mov
dec
inc
push
jae
ljmp
xchg
fadd
insl
aam
mov
pop
mov
sbb
pop
sbbl
and
jo
pop
inc
stc
and
adc
int
call
test
stos
adc
fldl
pop
pop
sahf
repz
out
pop
xchg
xor
jbe
es
or
xchg
cmpsb
pushf
mov
inc
into
dec
sahf
adc
pop
sbb
xchg
inc
outsb
mov
xchg
pop
ljmp
notb
stc
mov
iret
jnp
shll
inc
idivb
push
sbb
or
pop
mov
stos
xor
or
xchg
nop
xor
mov
pushf
xor
aaa
pop
js
push
test
subb
add
stos
cmpsb
xor
fs
ljmp
sbb
pushf
sbb
mov
pop
inc
mov
sbb
pop
dec
les
sbb
rcll
ja
mov
ja
outsb
xor
js
jbe
enter
cmc
leave
jo
in
enter
inc
out
rcll
aas
cli
and
pushf
inc
hlt
lret
mov
lret
pushf
jg
inc
lret
out
push
es
je
incb
lcall
das
icebp
jmp
mov
fmuls
mov
in
mov
outsb
mov
inc
jmp
inc
add
shlb
inc
inc
mov
pop
push
shrl
jbe
fdivl
adc
imul
cmpsb
rorl
inc
popa
hlt
mov
xor
dec
pop
arpl
movsl
jl
enter
loope
pop
mov
loope
mov
dec
xor
in
insb
push
mov
dec
add
aas
out
dec
add
xor
shrb
mov
stos
scas
les
iret
mov
dec
pop
std
adc
mov
sahf
pushf
mov
cmp
mov
inc
imul
leave
dec
xchg
and
mov
sub
stos
sti
push
mov
insl
jl
xor
jmp
xchg
ljmp
ret
fisttpl
jp
add
out
mov
inc
mov
pop
shll
inc
fsts
insl
xchg
or
mov
adc
in
movsl
fdivs
cmp
pop
mov
sbb
insl
mov
and
mov
lea
dec
jo
xor
cmpsl
push
push
mov
stc
adc
push
sub
loope
ds
xchg
iret
and
jae
cmp
popf
and
sbb
in
lret
mov
insb
adcl
push
and
jecxz
call
xor
test
fwait
jg
pusha
movsl
and
iret
insb
xchg
pushf
mov
dec
sub
push
adc
aaa
push
jmp
int3
and
lret
push
inc
lods
pop
aad
pop
push
in
insl
sbb
jne
jecxz
repz
hlt
cmc
xchg
xchg
cmp
sti
inc
or
test
inc
mov
xchg
out
jge
sbb
fisubrs
sbb
xor
mov
adc
icebp
lods
jbe
xor
mov
push
xchg
mov
flds
jo
and
xchg
cmc
addr16
test
out
imul
dec
fsubs
push
aaa
insl
enter
aam
xor
or
sbb
mov
decb
sub
dec
gs
xchg
ljmp
lods
push
ss
imul
inc
int3
testl
ss
int3
int
shr
in
or
fisubl
add
jbe
mov
fidivl
mov
dec
movb
rcrb
xchg
ja
cmp
and
jmp
ret
push
scas
pop
test
imul
dec
xchg
sub
imul
mov
call
push
adc
test
jnp
pop
cld
sub
mov
in
jmp
movsb
jns
int3
lahf
clc
cmc
dec
mov
js
push
int3
std
jecxz
mov
pop
ja
outsl
repz
mov
rorb
std
sub
dec
dec
cmc
dec
ret
cli
add
jnp
sub
xor
addl
movsb
or
add
mov
lock
push
push
in
call
out
mov
add
adc
fnclex
into
andb
jae
jo
mov
cli
pop
add
mov
and
sub
push
outsb
xor
mov
or
mov
jne
pop
icebp
mov
mov
aaa
or
inc
cltd
or
mov
notl
add
dec
imul
push
jns
gs
cmpsb
xor
jno
dec
jne
shll
cld
cltd
test
cmp
addl
xchg
arpl
xor
in
imul
repz
test
repz
ret
jno
mov
cmc
cli
or
xchg
or
push
sbb
sahf
add
mov
mov
pop
out
add
inc
mov
jo
xchg
in
pop
sarb
pop
sbb
adc
ret
mov
sbb
cmpsb
stos
cmp
mov
dec
jecxz
xor
and
jle
popa
leave
movsl
jns
notl
incl
pop
dec
roll
jns
aad
pop
mov
push
adcb
enter
leave
xchg
movsl
push
cmp
loop
push
xchg
fiaddl
pop
mov
xchg
mov
and
lock
ret
push
cmp
sbb
test
cmp
andb
inc
xchg
popa
repnz
jo
push
lods
sbb
leave
or
cmpsb
fsts
push
andb
sub
fsub
out
ss
jp
movsl
mov
bnd
jle
lret
or
mov
popf
fstpt
gs
add
inc
gs
dec
dec
cmp
loope
push
mov
inc
push
sarb
into
jo
xchg
setg
inc
xor
sahf
cltd
out
dec
cmpsb
inc
xchg
push
cmp
cltd
or
hlt
pop
or
scas
inc
xor
inc
int
cmp
mov
aam
les
popa
mov
adc
push
leave
daa
in
cmp
sub
out
sbb
aaa
sub
cltd
das
notl
imulb
int
mov
into
add
and
shrl
pop
mov
outsl
ret
lods
in
fimull
sbb
lock
ret
in
lds
sbb
or
lods
sbb
popf
shll
movl
push
cmpsb
data16
rolb
ja
xchg
ret
stos
cs
inc
xchg
call
push
xchg
mov
cmpsb
inc
adc
dec
xchg
push
jmp
gs
pop
dec
or
test
rcrb
push
and
xlat
or
sar
xchg
jp
mov
push
lret
sbb
ss
jl
xchg
frstor
push
test
cwtl
jl
jmp
lods
movsb
inc
dec
stc
add
lods
xor
sub
loopne
add
cmp
stc
jg
in
sub
mov
mov
loop
sub
add
outsl
push
push
xchg
cwtl
add
ror
pop
cmpsb
pop
mov
push
sub
dec
jg
fs
shrb
push
addr16
push
mov
rorb
shlb
xchg
fadds
push
cmc
cli
sbb
popf
xlat
repz
lahf
push
and
int3
dec
jb
mov
into
rcll
add
jg
jo
fldcw
pop
loop
lahf
dec
sbbl
shlb
imul
cli
add
lahf
cmc
adc
mov
fldcw
lret
int3
outsl
jo
jmp
jns
inc
sub
cmc
jl
mov
std
lret
jg,pn
sub
movsl
adcl
adc
push
clc
inc
jno
mov
and
ret
mov
test
lock
xchg
lods
add
or
cmpb
aad
test
call
dec
popf
mov
ret
bound
outsb
outsb
fidivrs
insb
cld
andb
push
mov
lret
aaa
push
je
test
repnz
or
push
das
pop
je
cmp
fistl
in
push
dec
out
mov
xchg
outsl
cmp
jae
pop
aaa
subl
and
dec
cltd
jmp
mov
jg
out
test
addr16
jne
fwait
cmp
sbb
insl
and
xchg
lea
repz
push
sbb
push
sbb
mov
cli
jo
icebp
lods
jns
movsl
xchg
push
dec
cmc
jns
sub
sbb
rcrb
fidivrs
ljmp
cmp
ret
out
add
adcl
cmp
mov
xchg
add
xchg
int
icebp
pop
inc
jo
xchg
jle
std
test
popa
test
lret
lret
or
cmc
xor
imul
cmp
ja
pushf
cmp
aam
iret
test
jle
pop
pop
cwtl
mov
mov
jle
inc
cmpsb
push
mov
mov
test
mov
mov
leave
push
aam
or
dec
jno
and
push
add
mov
pop
movsb
roll
xchg
les
pusha
xchg
push
jne
enter
xchg
mov
lcall
hlt
pop
sub
pop
cmpsb
and
mov
data16
les
mov
out
mov
movsl
lret
movl
push
jo
mov
stos
push
sahf
pop
sbb
push
sub
fbstp
loopne
mov
jnp
pop
clc
lcall
adc
jle
xchg
loop
xchg
aam
lahf
cli
fwait
jnp
xchg
test
fcompl
pushl
pop
xchg
cld
mov
add
pxor
mov
or
xor
cmp
loop
mov
dec
out
sbb
fiaddl
dec
sti
test
mov
js
in
adc
dec
scas
mov
adc
out
insb
in
sbb
xchg
sbb
jne
pusha
push
test
xor
add
sub
mov
lret
cmpsb
jg
js
shll
add
in
andb
mov
outsl
push
mov
data16
enter
loop
pop
add
sbb
pop
pushl
inc
dec
iret
cs
sbb
dec
push
shld
or
imul
or
ret
test
incb
or
fildl
mov
push
das
push
xrelease
cmpsl
incl
xchg
push
xor
jne
data16
enter
outsb
lahf
pop
out
sub
inc
in
rolb
loopne
sub
adc
jmp
lret
rclb
loope
daa
repnz
xor
push
or
dec
cmp
ss
out
jg
push
ja
data16
jbe
pop
mov
pop
fistps
xchg
jmp
js
mov
popa
ficoml
mov
outsl
inc
push
or
xorl
pushf
mov
push
fisubrs
pop
xchg
sub
mov
mov
xchg
cwtl
leave
rcrl
fidivl
loop
mov
je
hlt
push
cmp
cs
enter
hlt
stos
push
jo
cld
sbb
addr16
mov
sbb
nop
xlat
xchg
adc
mov
gs
pop
lods
and
lods
and
cld
fisubrs
pop
jb
stos
out
arpl
sbb
mov
rcl
in
xlat
call
ret
sbbb
mov
movsl
lds
mov
hlt
mov
lea
or
xor
add
jmp
jne,pt
mov
test
dec
aaa
shlb
and
xchg
js
cltd
mov
shll
inc
inc
out
pop
xchg
push
je
cmp
mov
mov
daa
les
xor
mov
xor
enter
adc
rorb
pop
lcall
ds
push
lods
lds
jno
xchg
adc
push
push
mov
pop
xor
mov
xor
jno
push
push
fs
sub
lret
inc
cli
pop
mull
sbb
push
imul
dec
xor
daa
mov
mov
pop
movb
xorl
push
xchg
push
add
mov
imul
cmpsl
mov
sub
mov
cmp
fisttpll
jo
aaa
adc
test
sbb
sbb
mov
push
orb
ficoms
adc
loopne
iret
call
jle
push
fistl
mov
and
pop
je
inc
popa
dec
sbb
cmp
dec
sbb
and
mov
popl
cmpsl
out
mov
ja
jge
movsl
sub
in
mov
fildll
inc
hlt
dec
stos
add
and
outsl
mov
into
into
add
orb
sbb
and
iret
into
cmp
int3
mov
xor
and
pop
repnz
push
or
out
cli
mov
cmpsl
addr16
inc
mov
and
sahf
bound
cmp
movsb
dec
cmp
sbb
daa
ss
andb
adc
loopne
shlb
jno
sarb
adc
aas
adc
sbb
add
jge
fistpll
mov
out
ljmp
jns
aad
inc
jbe
fldenv
mov
mov
out
rcrb
mov
addb
lahf
not
addr16
sub
lret
inc
repz
mov
xor
jle
mov
sbb
loop
dec
sbb
subl
sti
mov
jno
rcll
lret
outsl
cmp
jnp
and
sbb
jmp
dec
lock
dec
cli
ja
cmp
shr
mov
mov
ljmp
push
nop
jg
pop
das
inc
out
xor
xor
push
daa
push
scas
out
data16
int
mov
pop
inc
aam
pop
repz
mov
push
imul
xchg
push
movsl
scas
in
xchg
lahf
cmp
inc
das
xor
std
rcr
xchg
dec
arpl
cmp
adcb
inc
popf
scas
jge
mov
test
jbe
sub
dec
fadds
ja
jl
jp
ljmp
sub
push
cmp
cmc
lret
pushf
inc
sbb
rolb
mov
or
mov
mov
mov
sti
sbb
idivl
jle
or
daa
mov
push
adc
in
add
or
lret
mov
adc
inc
mov
sbb
mov
popa
mov
in
sti
inc
fs
lods
cmpsl
sub
fwait
sub
mov
in
jno
in
fbstp
cmp
clc
sub
fisubrs
add
lcall
xchg
popa
cld
icebp
movsb
jmp
fsubrp
ret
xchg
push
mov
stos
fadd
cmpsl
and
fcmovnbe
dec
enter
jbe
dec
jno
xor
and
bound
pop
push
xchg
or
pop
cs
mov
adc
rorb
je
push
cmp
xchg
mov
popa
pop
mov
test
lds
js
nop
and
xchg
loope
xor
aam
lret
add
shll
sbb
sub
fs
leave
fnstsw
call
lahf
dec
push
aaa
loopne
mov
inc
sahf
inc
mov
mov
loop
jnp
cwtl
sti
jle
dec
sub
dec
lock
imul
sahf
imul
mov
test
xchg
movsl
scas
mov
adcl
mov
out
mov
fdivl
jno
mov
inc
jg
in
add
add
and
inc
sub
mov
enter
mov
stos
test
pop
orb
bound
lcall
test
arpl
and
daa
insb
imul
jmp
and
mov
aam
popf
mov
inc
das
adc
jmp
xchg
pop
daa
jnp
xor
negl
mov
push
movsl
stos
aad
in
in
mov
mov
add
inc
push
scas
repz
cmpsl
dec
lock
das
xchg
mov
mov
mov
inc
jmp
xchg
inc
cltd
int3
out
push
stc
idiv
std
mov
cwtl
push
arpl
xor
cmp
push
aam
xorl
xor
sahf
out
xor
fisttpl
addb
jo
or
dec
pop
sti
add
sbbb
cmp
mov
pop
jbe
xor
std
push
icebp
jnp
push
push
je
dec
arpl
pusha
mov
xchg
xchg
xchg
dec
out
data16
es
or
jg
popl
adc
pop
mov
jl
int
mov
popa
adc
jbe
lds
mov
mov
in
popf
andb
sub
pop
mov
loopne
imul
sti
test
sbb
pop
adcl
mov
mov
aad
lcall
adc
xchg
pushf
mov
lahf
es
pop
push
add
cmp
push
inc
mov
inc
cmp
frstor
inc
add
pop
sub
push
cwtl
fwait
lcall
sbb
jne
aad
test
das
inc
cmp
outsb
je
inc
imull
adc
inc
pop
push
pusha
dec
pop
adcl
fnstenv
fldenv
mov
fimull
lds
mov
out
inc
int
xchg
cmpsl
push
sub
aam
sub
push
sbb
popa
aad
pop
ja
fnstcw
and
out
outsb
cmpsb
fnstsw
or
sub
pop
daa
repnz
or
adc
jle
add
jae
fs
xchg
stos
xor
repnz
mov
test
mov
sub
or
pop
nop
sbb
cmovno
or
xor
mov
mov
fiaddl
rorb
add
mov
dec
xchg
mov
inc
fwait
push
aas
mov
in
push
or
rcrl
pop
out
popa
outsl
and
hlt
leave
mov
jno
jae
adc
or
popf
pop
adc
int3
and
iret
rcl
and
sbb
outsb
add
inc
xchg
push
cmpb
sub
dec
dec
hlt
insb
leave
subl
mov
jl
xchg
das
scas
add
push
icebp
ja
mov
or
pop
xor
mov
lock
inc
out
je
je
cmpsl
mov
pop
push
dec
mov
test
daa
mov
add
std
call
fstpt
movsbl
push
stos
mov
cmp
pop
fistpll
inc
fisubl
inc
js
mov
add
mov
cmp
cmc
in
movsl
and
mov
or
movsl
test
dec
and
and
rcrb
daa
inc
mov
loopne,pt
cmpsl
divl
sub
jmp
and
mov
cltd
cmp
cwtl
pop
insb
sbb
iret
test
jp
mov
pop
inc
insl
mov
ret
flds
ret
sub
std
mov
cltd
rcrl
cmp
add
inc
inc
outsl
cld
lds
xor
mov
stc
push
rcr
loop
jno
cmp
lahf
gs
cltd
mov
jge
or
scas
and
lret
jmp
mov
adc
sub
sete
adc
and
add
mov
dec
xchg
clc
xor
insl
sub
je
punpckldq
mov
mov
movsb
cmp
out
or
xor
loopne
dec
xlat
xor
aas
mov
mov
jge
js
cmp
out
call
test
dec
jg
xchg
fwait
or
sub
and
jle
sbbb
ds
inc
outsb
inc
dec
xlat
popf
test
fs
loope
cltd
mov
jne
sbb
inc
xchg
push
and
dec
xor
fs
cli
mov
add
xchg
dec
cmp
in
add
mov
sub
cli
ficomps
or
xchg
and
rcl
lcall
mov
mov
xchg
cmpsb
xlat
dec
sbb
movsb
cs
adc
sub
scas
imul
lds
int
dec
enter
mov
rolb
mov
mov
push
jno
pop
push
pop
fidivl
sbbl
mov
lret
shlb
mov
lahf
mov
pop
ljmp
jle
test
dec
push
jno
pop
pop
xchg
mov
int
pop
fst
movsb
mov
xor
mov
sub
aaa
int
stos
enter
icebp
push
cs
loop
lret
jb
push
jg
cmp
mov
insb
mov
fadds
dec
idiv
and
ucomiss
jb
xchg
popa
jne
jl
mov
sbb
outsb
out
aaa
cwtl
sarl
popa
sub
push
testl
lret
lea
ficompl
lret
xlat
dec
mov
add
lds
pop
mov
subb
je
jg
push
add
mov
add
icebp
dec
mov
ror
add
mov
in
mov
mov
std
repnz
aad
push
xchg
sarl
fdivrs
jle
outsb
testl
mov
jns
sub
cmp
sbb
andb
lret
out
dec
sub
fwait
mov
in
inc
enter
inc
xlat
mov
xchg
das
xchg
mov
adc
sub
mov
mov
loop
lods
fs
mov
lods
cmp
adc
jmp
stos
sub
sub
test
fnsave
cmp
in
adc
andb
xchg
shl
ljmp
aas
imul
push
push
jb
mov
in
dec
es
mov
pop
jns
ret
sub
jge
out
sub
ljmp
adc
stos
add
je
aaa
pushf
in
pop
push
jne
jb
adc
test
iret
inc
mov
mov
xor
mov
mov
arpl
cmp
jge
daa
jne
xor
dec
sub
push
cwtl
cltd
cs
push
jmp
loopne
push
hlt
jnp
sub
mov
hlt
cltd
mov
mov
shll
xchg
lods
dec
mov
add
test
ja
imull
cs
mov
pushf
jmp
push
movsb
int3
pop
adc
subb
jbe
mov
sarl
aaa
push
lods
push
pop
xchg
outsb
out
cmpb
pop
pusha
cmp
loopne
call
or
pop
insb
lock
mov
jae
scas
stos
cltd
cmp
into
std
aas
es
sbb
mov
pop
aad
out
push
add
dec
jo
jg
mov
loopne
mov
jb
out
xor
mov
mov
sti
mov
addr16
insl
inc
mov
xlat
dec
push
jb
mov
scas
mov
sub
mov
insb
inc
das
mov
adc
mov
add
addl
adc
xor
push
sbb
mov
dec
pushf
adc
mov
xor
push
or
lods
xorb
movsl
cmc
cmp
and
add
add
push
cld
ss
out
adc
aaa
aad
lret
cli
mov
xchg
inc
in
jp
sub
jp
mov
xor
jge
mov
je
xor
decl
jecxz
jo
adc
mov
stos
sbb
adc
sub
mov
inc
ja
mov
inc
fsubrl
mov
jl
test
jno
lret
mov
push
test
pushf
adc
dec
cmp
xchg
call
gs
dec
daa
cmc
cmp
adc
dec
mov
subb
andl
popa
repz
popf
push
arpl
dec
cwtl
or
shlb
jbe
out
testl
pop
faddl
sbb
mov
test
mov
add
or
push
jne
jecxz
dec
out
lret
jl
data16
adc
out
out
mov
out
xchg
lds
gs
adc
ss
jns
xchg
sahf
out
cld
dec
jnp
inc
cmpsb
mov
lret
jnp
mov
shrl
outsl
les
push
popf
adcl
dec
loope
lock
stc
sahf
lock
sub
mov
pop
in
adc
aas
sbb
test
addr16
or
cmpsb
fmull
mov
scas
mov
imul
std
int
popa
mov
data16
push
push
mov
add
cmpl
sbb
adc
shll
sbb
cmp
mov
mov
add
imul
pop
sub
pop
and
and
pusha
ja
jmp
mov
mov
push
jl
xchg
pop
push
arpl
sub
ficoms
pop
pop
out
in
jmp
shll
push
call
or
push
ljmp
int3
mov
aaa
jne
sarb
pop
nop
fdivrp
mov
xchg
jge
repnz
mov
push
fucomp
rclb
pop
mov
leave
adc
es
jb
lea
int
sub
aas
push
movsb
les
adc
xor
pushf
jb
mov
arpl
dec
je
sub
add
call
repz
inc
or
jnp
pop
or
aad
mov
add
dec
jo
inc
testb
mov
rol
or
pop
rcl
or
pop
xchg
daa
clc
pop
ret
push
pop
fcoms
scas
xor
cs
pop
cmp
pop
add
cmpsl
imul
outsb
ret
jb
pop
in
mov
dec
or
ret
mov
lods
add
loopne
mov
decb
mov
jbe
rorb
adc
aaa
jl
in
push
fstpt
inc
ss
push
jo
xchg
inc
pusha
aas
sub
daa
dec
mov
dec
push
mov
fcomps
mov
inc
xchg
test
inc
add
out
jp
add
mov
lahf
xchg
call
jnp
cmp
pop
pop
add
fists
pop
jecxz
xor
dec
rcll
inc
pop
hlt
stc
pop
or
cmp
mov
mov
xchg
push
ds
cwtl
xor
jmp
outsb
sub
pop
inc
mov
nop
or
dec
xor
insb
cmpsb
out
ret
mov
jecxz
pop
fs
add
add
pop
mov
cwtl
push
rcrl
repz
loopne
hlt
andl
jmp
aam
pop
jmp
bound
sub
in
orl
nop
xchg
xlat
popa
shrb
sarb
jle
ja
jge
mov
aad
mov
ljmp
sbb
mov
mov
sbb
push
imull
cmp
jmp
jae
lahf
xchg
aas
add
cmp
shll
lea
test
divps
xchg
mov
jmp
loop
and
sub
cmp
xor
mov
sbb
pusha
mov
pop
es
jbe
fldcw
repz
dec
js
test
ret
dec
pxor
das
orl
inc
movsb
inc
add
adc
fcoms
mov
or
test
mov
jo
sbb
and
and
ljmp
sbb
xchg
mov
loop
sub
mov
outsl
ja
in
scas
push
inc
rclb
lret
mov
pop
enter
incb
pop
sbb
push
or
sbb
stc
test
cwtl
sub
cmp
out
cmpsb
xlat
mov
dec
or
dec
popa
mov
jecxz
xlat
shll
aas
mov
push
ja
dec
adc
jmp
jbe
fcoml
cmp
sarb
aad
sub
or
jne
add
inc
sbb
xor
test
jl
imul
push
mov
lds
add
scas
ja
mov
xchg
fxch
orl
xchg
or
pusha
jmp
xchg
sub
mov
mov
outsb
nop
mov
xchg
jl
adc
lret
xchg
mov
in
and
lahf
bound
jecxz
insl
cs
cld
adc
add
repnz
sub
enter
js
in
aaa
cmpsb
jo
push
or
imul
xchg
sbb
fsubl
sti
xor
scas
push
pushf
into
imul
adc
je
xor
js
xchg
sahf
cmpsb
inc
pop
ja
pop
lock
cwtl
stos
fcompl
mov
popa
push
loope
addr16
int
and
cmp
jnp
add
jns
and
cmpsb
sub
jmp
dec
jo
dec
leave
and
inc
fdivl
movsb
fbld
push
mov
cltd
sub
lock
shl
sub
inc
mov
out
cmc
scas
inc
xchg
sbb
pop
push
int3
pop
dec
insl
lcall
xor
lods
xor
dec
jnp
xchg
adc
leave
cld
push
scas
xlat
dec
xchg
xor
mov
cltd
xchg
shll
cmp
or
inc
stos
imull
popa
pop
fisubl
add
movsl
dec
cmc
in
jge
aas
cmpl
js
inc
and
repnz
push
dec
jl,pt
mov
fisubs
mov
or
lret
mov
push
lock
int
or
inc
movsl
in
push
shrb
and
add
adc
jae
mov
stc
rcrl
das
cmpl
cld
mov
decb
ss
jno
jns
mov
lcall
repz
cld
xchg
cltd
add
jmp
xor
out
dec
mov
call
leave
scas
shl
push
lods
jbe
aaa
or
sbb
inc
popf
xor
or
add
mov
ficomps
push
push
out
lahf
jle
mov
imulb
test
and
or
jae
adc
inc
cmc
cmpb
movsb
jb
mov
scas
push
mov
shlb
sbb
out
stc
sbb
xor
test
or
xchg
ss
xchg
adc
cli
outsb
inc
mov
mov
das
sub
mov
push
fsub
push
pop
out
in
mov
arpl
xchg
shl
xchg
movsb
std
lods
in
ss
pop
jle
xor
cmpsl
lock
adc
in
movsl
int
mov
dec
jns
js
inc
pop
push
or
mov
xchg
ljmp
cmp
mov
daa
hlt
add
shlb
pop
mov
adc
test
push
sub
mov
xchg
xor
add
ljmp
sti
xchg
adc
pop
fwait
shl
bt
xchg
xor
lock
jo
cmp
xor
and
or
enter
and
lods
xchg
inc
clc
sbb
mov
and
mov
mov
mov
imul
sbb
bound
add
aam
inc
loope
shrl
mov
test
mov
and
cmp
dec
lret
dec
loopne
jae
xchg
inc
mov
pusha
fcompl
mov
cld
mov
movl
je
pop
mov
mov
ret
adc
loop
ficoms
iret
daa
mov
data16
sahf
gs
sbb
xor
jmp
sti
cmp
and
push
adc
mov
mov
pop
and
push
ljmp
add
add
xor
jo
cmp
out
pop
mov
push
dec
jno
daa
sti
nop
mov
ds
or
mov
add
test
stos
pushf
push
jmp
repz
out
inc
out
lcall
pop
jo
cwtl
rorb
ljmp
jnp
jle
xor
add
pop
int
xlat
cmp
mov
xchg
aaa
fld
adc
jo
cmpsb
mov
daa
sahf
xchg
jmp
les
stos
inc
pop
cmp
or
cmp
daa
js
pop
ffree
mov
jbe
push
jecxz
inc
push
ss
or
outsb
xor
pop
xchg
add
mov
xchg
divl
iret
shl
adc
mov
popa
dec
lods
jo
mov
mov
cmp
xchg
cwtl
int
fwait
movsb
sub
repz
pop
testl
add
dec
inc
mov
dec
xchg
jecxz
dec
into
sub
fs
out
mov
mov
jo
mov
mov
adc
xchg
test
lret
push
cmp
pusha
inc
xor
loope
xchg
add
jnp
outsl
jbe
clc
jo
inc
dec
mov
popf
jg
cmp
sub
das
stos
jae
mov
test
cmpb
jno
inc
inc
cmpsb
xor
ds
sbb
test
add
imul
adc
or
outsl
cmp
mov
aas
pop
jae
or
inc
loope
add
data16
mov
andb
divl
mov
xchg
outsl
cs
movsl
je
data16
call
jo
scas
adc
das
mov
adc
and
sbb
gs
mov
push
pop
lea
push
mov
repz
movd
shrb
xor
sub
dec
orb
mov
insb
icebp
iret
iretw
pop
scas
je
and
sbb
push
adc
xchg
push
test
pushl
mov
jo
xchg
das
mov
test
inc
cmp
xchg
sub
movsl
fwait
and
xchg
jno
xor
fs
xor
jp
xor
cltd
cmp
push
inc
mov
mov
jmp
inc
pop
pop
fidivl
pop
push
jp
pop
iret
enter
orb
int3
mov
pushf
or
or
cmp
out
jnp
rol
ficompl
and
jae
add
jle
movsb
out
push
mov
ljmp
pop
add
test
adc
mov
outsl
leave
adc
fimull
test
sub
dec
orl
fimull
jle
in
push
aas
stos
xchg
pop
es
adc
fldcw
push
es
mov
fldl
jl
add
aas
xor
sub
lods
adc
lret
sub
repz
fbld
jp
inc
mov
mov
loop
sahf
ffreep
daa
movb
lock
lahf
in
sti
stos
sahf
in
cmp
add
lahf
adc
repz
std
out
mov
and
mov
inc
xor
jbe
cmc
into
into
cmp
jnp
mov
inc
stos
mov
pop
pop
aaa
popa
xchg
push
sti
mov
int
pop
pop
push
jnp
dec
push
iret
jecxz
add
xchg
out
sub
mov
incl
hlt
out
divl
cltd
in
mov
popf
mov
dec
xor
shr
imul
and
mov
ljmp
cmp
and
das
add
xor
jns
rorl
xchg
and
divb
movb
popf
add
mov
jmp
add
cmp
ret
xchg
cmpb
stos
mov
aam
xor
pop
lods
xor
outsb
jl
push
jg
xor
sub
inc
xor
push
test
and
and
dec
sbb
add
sbb
push
xchg
push
jb
test
out
push
xor
test
pusha
out
sub
xor
movsb
mov
insl
xchg
mov
mov
or
cld
ror
cmp
jnp
xor
nop
mov
pusha
outsl
ret
in
ret
add
insl
aam
cs
adc
adc
push
bound
or
fcomps
in
cmp
into
arpl
sti
sbb
mov
loop
cmp
pop
fwait
xor
cltd
push
mov
xchg
das
xchg
push
mov
xchg
shll
decb
cltd
enter
mov
clc
sub
xchg
adc
jo
addl
repz
adc
test
aaa
mul
inc
sub
pop
mov
cmp
lcall
sub
jl
mov
daa
fs
mov
mov
xor
fists
xor
mov
mov
jbe
mov
insl
push
adc
fistl
xchg
out
lahf
pop
lods
les
sub
out
out
or
xchg
pop
ret
cmpsb
rorl
sub
mov
scas
leave
popa
in
cltd
lds
outsb
std
lds
and
xor
push
pop
push
jne
data16
inc
adc
lcall
sbb
xchg
push
lea
jae
push
stos
adc
in
pop
jne
xchg
fbld
inc
inc
pop
sysret
lods
mov
xchg
mov
mov
pop
in
jge
mov
mov
divb
lcall
incl
xor
sub
sub
sub
loopne
pop
test
test
jae
xor
outsl
ds
test
int3
xchg
fsubrs
xchg
in
or
adc
mov
sbb
or
jmp
jecxz
sti
sahf
mov
ljmp
push
pop
mov
mov
inc
sbb
pop
dec
cwtl
jne
pop
jecxz
fadd
lock
cmpsb
lcall
xor
mov
add
push
pop
dec
mov
add
mov
mov
idiv
and
jl
mov
lods
data16
pop
or
ficompl
jg
and
xchg
adc
xor
mov
lds
and
xor
push
sbb
lret
aad
pop
les
push
rorb
mov
shr
clc
rcll
insb
push
mov
xchg
into
lcall
popa
test
push
dec
jl
int
mov
mov
sub
roll
add
cmpl
sbbb
lods
lret
lret
pop
add
lahf
movsb
mov
mov
mov
iret
into
dec
pop
in
pop
inc
lahf
sub
fiaddl
fiadds
push
lret
nop
in
pop
dec
fisttpll
pop
mov
lods
mov
cmpsl
cli
movsb
rorl
jl
in
fdivrs
push
or
lahf
aad
popa
xlat
dec
pusha
into
inc
sti
or
pop
cmp
dec
call
pushl
cmp
xor
inc
jns
adc
mov
push
cmpsl
mov
sub
scas
cmpb
dec
repz
add
dec
and
test
fiaddl
and
sbb
ja
imul
les
bnd
pusha
xchg
das
inc
xor
inc
rcr
cs
loopne
or
divl
mov
jp
xchg
dec
lock
xchg
sbb
mov
xchg
lcall
jnp
jnp
insl
fisttpll
nop
dec
sub
fidivrs
cmc
dec
imul
filds
sti
mov
adc
and
fstps
pop
mov
js
aas
sub
loope
pop
xchg
test
gs
mov
call
loop
jne
mov
es
dec
shl
add
xor
mov
pop
xchg
or
addr16
lea
adc
jecxz
cmp
test
mov
cmp
jns
pop
pop
out
fidivl
repz
mov
test
fs
or
pop
mov
cmpl
dec
mov
leave
jmp
push
inc
inc
loopne
dec
stc
add
testl
lods
or
mov
test
jge
push
out
or
out
xor
adc
jmp
inc
jmp
sbb
push
adc
xor
daa
movsl
lds
and
loop
add
jecxz
test
out
ja
nop
stos
push
or
pop
addr16
inc
jle
push
loop
cmp
mov
stc
mov
push
dec
xchg
movsl
std
and
xchg
xchg
jle
das
mov
xor
mov
cmp
stc
push
test
lock
or
sub
fisubs
xor
scas
cmp
andb
pop
pushl
mov
popa
jl
jle
xchg
jno
je
mov
cli
mov
stc
jo
dec
in
loope
adc
xor
sub
jp
xor
stc
insl
and
lea
and
add
mov
sub
loopne
pusha
xor
leave
rclb
cmpsl
xchg
mov
xchg
in
mov
dec
xchg
aas
std
cmp
and
jno
sarl
adc
in
arpl
pop
or
xor
jbe
arpl
aas
pop
mov
add
xor
aas
mov
outsb
inc
inc
xchg
sbb
lahf
sub
and
push
mov
repnz
sbb
je
mov
jno
cmp
cmp
or
pop
mov
repz
lods
dec
cmp
je
jbe
daa
mov
xchg
cwtl
or
loopne
pop
sub
cltd
inc
xchg
bound
lret
jecxz,pn
insl
lahf
aad
and
sbb
xor
inc
pop
xchg
lea
push
mov
mov
mov
xor
clc
es
call
sbb
lock
stos
ret
adc
cmc
pop
fs
mov
sub
aad
pop
jbe
mov
cmpsl
xor
adc
les
push
rcll
push
and
inc
pop
arpl
cmp
cltd
test
outsl
cmp
push
out
fcoms
in
cmp
mov
int
lods
addl
das
repnz
dec
outsb
movsl
or
mov
jecxz
cmp
push
loop
sub
jmp
dec
inc
xchg
jae
out
insl
pop
pop
cmp
icebp
negl
add
jo
ret
fstpt
enter
or
jo
out
hlt
movsb
inc
xor
pushf
enter
add
ret
jne
les
leave
adc
push
inc
dec
cmp
aad
pop
dec
mov
popa
push
std
mov
jnp
mov
and
divb
mov
mov
lret
sbb
stos
xlat
cmp
andb
lret
or
lret
js
xorl
mov
dec
mov
lea
cmp
or
out
lret
stos
stos
push
pushl
iret
sub
cmp
and
pop
bound
push
mov
jecxz
lret
popf
clc
xor
das
jl
mov
icebp
insl
shll
ss
lret
push
cld
cmp
cmc
aam
aaa
lock
in
and
sub
jb
bound
out
cmp
fstps
lea
xchg
test
jns
cmp
or
xchg
setbe
ljmp
iret
insb
jmp
rcll
or
js
fmull
fwait
mov
out
sbb
loop
inc
mov
fldl
mov
movsl
mov
push
sub
sbb
into
lea
add
mov
inc
inc
xchg
lcall
int3
xchg
jmp
jg
pop
decb
jns
push
popa
test
aam
mov
and
push
fldt
rclb
pop
push
push
stos
sbb
jno
cmpsl
and
pop
mov
inc
and
cmpsl
nop
mov
fiadds
mov
adc
andl
mov
popa
in
aam
aad
adc
lahf
sub
cld
xor
adc
rcll
mov
aaa
bound
push
sbb
imul
xor
jge
xor
out
fstpt
and
xlat
or
mov
push
sbb
in
cmpsb
lea
outsb
popf
mov
test
xor
sbb
test
add
cmp
mov
lcall
and
lret
fisubl
add
ret
in
loope
cmpsl
or
dec
dec
mov
mov
inc
icebp
jo
jb
pop
int3
mov
ljmp
jge
test
push
pop
mov
push
lods
lods
add
mov
dec
inc
cmp
or
in
xchg
mov
cmp
mov
daa
and
nop
pop
aam
sub
push
pushf
sbb
rcr
mov
add
xchg
or
inc
push
clc
test
push
ja
jae
dec
dec
inc
shlb
fsubs
mov
mov
imul
in
stc
sbb
data16
push
sahf
cmpsl
jnp
loop
mov
cmc
lods
pop
jae
sbb
sbb
cmp
mov
inc
in
lock
mov
xchg
scas
mov
sbb
jne
jl
or
dec
pop
mov
sub
mov
addl
iret
lods
and
or
lods
into
and
pop
std
lds
bound
lock
cmp
int3
xchg
in
call
in
or
les
std
jbe
mov
mull
cmp
cmp
push
into
mov
add
sbb
in
aaa
push
imul
mov
in
daa
sbb
mov
add
xorb
or
adc
stos
addr16
push
arpl
push
push
imul
mov
repnz
int
call
icebp
inc
and
push
mov
and
adc
insb
pushf
out
sbb
push
jmp
hlt
lret
rcrl
mov
roll
cli
jbe
idivb
push
xchg
cmpsb
in
out
insb
sahf
mov
cmpsb
out
lret
push
subb
int
dec
inc
pushl
jmp
xor
and
int3
and
mov
pop
sahf
sub
mov
inc
add
dec
sub
aaa
cmp
jns
xchg
push
dec
frstor
and
aaa
sahf
bound
pop
out
nop
sub
sbbb
ljmp
xchg
push
lock
and
in
mov
aad
cmp
or
mov
adc
xchg
loope
in
and
jmp
in
out
mov
lods
xchg
xchg
sbb
add
in
jb
nop
js
mov
jo
sub
push
test
shll
stos
das
popa
fistl
shlb
jb
mov
adc
or
push
cmc
xor
pop
cmpb
cmp
mov
jmp
aam
mov
xchg
insb
or
mov
and
dec
mov
test
fdivs
orb
jecxz
pop
sub
add
mov
mov
push
add
xor
jae
ss
pop
outsb
jno
fiadds
cmp
out
jnp
or
addr16
std
cmp
or
sub
lahf
adc
push
lods
mov
and
popf
jge
imul
dec
cmpsb
pop
out
jg
sub
xchg
cwtl
jecxz
daa
and
jns
xor
js
mov
dec
lcall
and
jns
mov
mov
pop
jl
push
call
pusha
out
or
das
jmp
pop
je
adc
mov
adc
sahf
sub
adc
pop
int
mov
push
jp
pop
adc
jne
push
movsb
sbb
data16
movsb
and
mov
push
pop
or
cmpsb
int
sahf
xchg
or
into
fadds
jmp
sub
adc
sbb
mov
hlt
out
ret
cmp
inc
or
imul
cmpsb
in
leave
xchg
mov
pop
cmp
push
push
popa
sarb
mov
add
repnz
cmp
inc
pop
insb
test
cld
enter
adc
cmc
dec
cmp
nop
cmp
jae
cmp
sti
pop
aas
sahf
inc
and
adcl
jl
and
jmp
ret
sbb
dec
add
rclb
inc
mov
aad
push
popa
cmp
or
movsb
loop
inc
dec
inc
dec
xor
sub
push
sub
icebp
mov
inc
cmp
xchg
out
cmp
adc
insl
cmpsb
je
addl
xor
dec
das
out
sbb
inc
fbstp
mov
loopne
inc
mov
jo
mov
inc
mov
js
cmpsb
mov
and
sbb
push
pop
jae
xchg
xchg
sub
subl
adc
and
cmpsl
mov
cmp
xlat
jb
ljmp
and
jns
inc
arpl
mov
fmull
xchg
fidivl
jp
sub
lods
mov
pusha
jbe
movsl
add
jae
aad
addr16
fcomps
jno
jbe
inc
adc
xor
dec
adc
addr16
cwtl
lcall
std
repnz
movsb
dec
mov
sahf
test
imul
repz
into
sub
push
in
inc
aaa
arpl
adc
cwtl
into
jge
lods
inc
insb
dec
xor
out
dec
push
lahf
test
mov
adc
out
call
dec
inc
mov
fisubl
dec
in
arpl
mov
xor
cld
pop
test
scas
imul
cmp
repz
xor
add
adc
pop
jno
mov
rclb
out
ljmp
bound
ljmp
iret
pop
mov
test
or
test
test
mov
xor
jmp
repnz
lds
push
push
in
xchg
imul
fistl
inc
sub
in
lahf
mov
addr16
lods
jno
mov
sbb
in
sbb
push
push
xchg
xor
adc
test
and
fistl
in
cwtl
shrb
pop
int
scas
nop
je
addr16
sarl
jp
movb
cs
dec
inc
adc
out
dec
flds
mov
arpl
jg
arpl
imul
popf
enter
out
xor
dec
add
test
iret
xor
push
jge
jp
inc
out
in
movsb
pop
lcall
lods
mov
jge
pop
inc
and
aas
jne
jb
scas
daa
xor
frstor
add
mov
cmp
dec
out
xchg
in
pop
cmp
mov
arpl
insl
cli
andl
cmp
cs
cmpsb
xchg
sbb
jge
nop
fisubrl
lret
mov
push
xor
call
push
ficoml
or
lds
outsl
push
add
inc
dec
sbb
inc
push
repnz
xchg
xlat
pop
adc
fstl
add
setg
xor
leave
or
mov
test
jmp
testl
push
in
jle
mov
mov
pop
ds
shrb
cmp
cmp
xor
pop
xchg
lret
addb
mov
jo
loop
mov
fs
dec
push
negw
or
mov
mov
push
sub
add
add
push
repnz
out
sub
bound
push
adc
xchg
stos
movsl
dec
xchg
inc
jo
mov
dec
por
into
enter
enter
sub
add
cltd
inc
add
aaa
xchg
jl
popf
and
fnsave
arpl
xor
or
jae
cwtl
jg
push
mov
xor
clc
xchg
mov
ljmp
ret
ret
test
cltd
repnz
push
mov
cld
ret
push
sub
sub
call
pushf
mov
leave
pop
pop
out
ficompl
pop
das
cs
pop
ror
lea
iret
pop
loopne,pt
adc
pop
push
mov
inc
cwtl
xchg
lret
out
sbb
jl
xchg
add
out
shrb
cs
and
dec
mov
adc
pop
mov
adc
or
stc
mov
imulb
xor
cmp
test
pop
outsl
cmp
aam
into
dec
or
std
test
add
movsb
bnd
ficomps
jbe
and
repnz
sub
movsb
pop
or
dec
xorl
aas
push
mov
jmp
add
mov
push
and
jbe
cli
inc
sub
xchg
fimuls
es
dec
mov
and
repz
cmp
call
mov
push
jmp
inc
push
mov
insb
test
mov
rcrl
pmullw
push
cwtl
fistps
mov
pushf
out
cmpsb
jl
fcoms
jbe
dec
fisubrl
push
inc
mov
and
fdiv
sub
xchg
sub
mov
mov
jno
bound
add
mov
push
nop
fisttps
imul
lret
jnp
cmpsl
and
out
fcom
in
lret
loopne
popa
xchg
mov
ret
sahf
xorl
fs
add
mov
mov
clc
loope
and
cld
cmp
inc
push
add
fwait
sbb
mov
add
mov
add
sahf
cmp
stos
dec
inc
sub
int3
ret
call
adc
pusha
bound
aad
lahf
cmp
scas
in
loope
cmp
rorl
and
ret
jo
ret
ja
daa
inc
fwait
clc
pop
and
in
ja
add
jns
sbb
pop
or
dec
outsb
mov
jp
jbe
jbe
lds
inc
outsl
mov
sbb
imul
sbb
sub
call
add
les
mov
sbb
xor
lahf
imul
int3
push
adc
aam
push
xchg
inc
mov
mov
pushf
mov
pop
fsqrt
jmp
iret
not
call
mov
jbe
add
mov
fmul
ret
pop
mov
push
jge
jmp
pop
push
sahf
xor
cmp
xchg
dec
xchg
jns
and
xor
adcl
push
and
in
dec
mov
jge
insb
in
inc
jno
push
insb
test
mov
jbe
orl
sbb
fwait
inc
insl
sub
jp
jmp
sub
sub
cmp
jmp
inc
es
inc
daa
sbb
pop
nop
ror
sbb
dec
dec
adc
pop
ja
push
inc
int
push
fwait
insl
jp
or
int3
mov
mov
pop
jmp
aad
mov
inc
xchg
and
ret
sti
enter
ljmp
pop
cmp
sub
push
sahf
and
mov
push
push
stos
das
cli
push
xor
scas
enter
mov
lcall
popa
mov
inc
cmpsl
push
loop
push
jg
pop
inc
xor
cmp
idivb
cmp
in
imul
jae
jge
lods
test
add
daa
fidivrl
imul
je
sbb
inc
push
mov
lret
mov
popa
jmp
inc
cmp
jge
cmp
or
sub
in
dec
jl
pop
sub
sarb
dec
sub
mov
insb
fldt
inc
mov
dec
rorb
xchg
mov
leave
dec
pop
mov
je
scas
inc
mov
daa
mov
test
or
sbb
in
rcrl
push
xor
lahf
push
jg
in
inc
dec
push
icebp
xchg
and
dec
jb
shrb
or
loopne
add
imul
insb
into
push
imul
lock
ficoms
adc
jae
xor
sub
out
cmpsl
push
pop
xchg
rsqrtps
mov
incb
jp
mov
sbb
insb
cmp
insl
push
scas
mov
rol
andw
aas
es
push
push
fbld
lret
rolb
mov
test
and
xor
push
repz
fwait
aaa
fstl
mov
push
cmpsb
cltd
mov
xchg
mov
test
sbb
push
into
sti
addl
mov
jp
int3
add
mov
adc
cmp
pop
outsb
cltd
mov
jae
int
inc
add
xlat
inc
mov
jae
inc
inc
push
loope
std
sub
xor
sti
popa
push
push
fsubr
sub
mov
mov
mov
lret
js
mov
fisubrl
int3
test
ljmp
xlat
fwait
or
fninit
mov
mov
mov
pop
cmpsb
cmp
sahf
push
and
adc
icebp
pushf
pop
ret
jge
ret
sbb
mov
mov
push
add
sbbb
test
leave
lds
mov
push
fnstsw
mov
jecxz
jns
je
mull
push
mov
scas
mov
pusha
adc
lea
push
mov
div
cmp
daa
clc
pop
outsb
mov
lahf
sub
enter
cmpsb
int
fs
sahf
jg
pop
ss
cmc
dec
loopne
dec
mov
or
cld
jnp
popa
dec
xchg
sbb
hlt
adc
add
push
inc
xor
stos
jns
adc
sub
int3
inc
addr16
ja
xlat
and
push
ja
dec
scas
bound
lods
and
xor
imul
pop
mov
xchg
push
xor
test
fucom
subb
xchg
sub
stos
cmp
lcall
inc
je
pop
mov
dec
xor
pop
mov
sbb
ret
aam
mov
push
insb
clc
sar
popl
mov
xor
jg
inc
leave
inc
mov
rcrb
fstpl
pop
sub
insl
jae
sub
ret
pop
sahf
mulb
adc
dec
and
sarb
fwait
ljmp
iret
add
inc
add
outsb
adc
hlt
lcall
adc
shl
mov
inc
roll
pop
sbb
imul
out
pusha
dec
adc
xor
sub
push
inc
sti
clc
in
test
inc
inc
or
mov
sarb
scas
lea
xor
and
jge
xor
xchg
pop
xlat
xchg
movl
push
adc
test
cld
cmp
in
iret
mov
fs
movsb
push
add
sbb
xor
stos
and
mov
inc
xor
push
imul
mov
dec
cwtl
inc
scas
in
push
out
in
cltd
mov
mov
adc
outsl
inc
jp
jne
and
sbb
pop
mul
xchg
das
pop
add
outsl
add
mov
xchg
shlb
shl
and
sahf
sbbl
cmp
pop
cld
adc
rcrl
outsl
sbb
mov
aaa
dec
mov
idivl
int
mov
mov
popl
and
sub
add
mov
mov
xor
push
ret
in
repz
sarb
jbe
cs
in
mov
ja
mov
je
add
lods
ror
jns
outsb
add
sbb
ret
bnd
sub
fisubl
idivl
dec
ja
je
hlt
ja
sub
es
addl
inc
pushf
push
popf
rcrl
dec
push
ljmp
mov
pop
mov
inc
aad
lret
addr16
lds
sbb
test
fnsave
or
inc
je
and
orb
push
iret
leave
dec
mov
es
mulb
mov
add
pop
push
jle
pop
mov
popa
js
in
and
popf
sub
lea
dec
movsl
dec
outsb
ljmp
pop
cmpb
hlt
lcall
dec
dec
mov
xor
shl
sub
je
jg
and
mov
call
cli
push
xorl
mov
sbb
repz
mov
lods
pop
sub
pop
sbb
dec
pushf
in
sbb
pop
push
mov
je
mov
sbbb
adc
inc
or
lret
mov
pusha
cli
inc
sub
mov
push
scas
inc
inc
stos
movl
and
out
ss
dec
sbb
push
and
or
aaa
sti
mov
sbb
jo
add
ss
stos
int
jp
mov
sub
jge
repz
jb
jns
pop
xchg
adc
fs
add
jo
insb
sbb
stos
dec
aad
mov
push
mov
lcall
imul
sbb
dec
imul
dec
std
outsl
bnd
mov
and
mov
outsl
arpl
jo
and
cmc
adc
out
dec
lahf
loop
cmp
std
ret
mov
data16
add
or
inc
and
pop
push
je
dec
lock
rolb
pop
xlat
je
push
mov
sbb
out
stos
or
add
jmp
mov
mov
or
lret
push
dec
mov
push
cmpsb
adc
les
loope
imul
dec
int3
aam
pop
and
push
imul
cs
lock
push
and
adc
aaa
cltd
jno
fbld
out
fs
lds
hlt
sub
outsl
in
sbb
adc
enter
push
sbb
xchg
cmp
rolb
andb
mov
mov
pop
into
sbb
sub
scas
mov
adc
adc
xor
sub
and
movb
cld
clc
xor
es
mov
hlt
lods
push
iret
jns
push
xorl
andl
testl
mov
pop
jmp
cmp
mov
lock
mov
rcl
out
jp
pusha
fs
stc
xor
in
aaa
cmp
push
mov
nop
inc
or
push
pop
sbb
iret
data16
sti
incb
fisubl
xor
mov
ret
add
jge
sbb
jae
repz
xchg
sbb
pop
xlat
mov
fdivl
sbb
mov
sbb
sbb
xchg
ret
fldenv
push
out
adc
sbb
ds
xor
mov
fs
sti
nop
xchg
in
mov
addb
leave
push
imul
push
xor
dec
jp
test
dec
je
mul
out
pushf
aam
mov
js
xor
xchg
cld
jmp
push
rcl
mov
adc
aam
pop
fnstcw
cmc
mov
mov
jb
mov
push
dec
inc
mov
push
add
push
dec
pop
cwtl
add
or
and
push
dec
jb
shl
xor
sbb
xor
dec
cmc
loop
jg
scas
ds
shl
sub
test
ror
fdivr
mov
data16
ret
add
daa
and
mov
dec
jmp
inc
test
lods
mov
pusha
push
mov
lahf
hlt
sbb
les
fs
pusha
add
xor
mov
xchg
xor
jp
arpl
inc
cmc
cltd
sbb
push
dec
pusha
xchg
fwait
mov
scas
cmp
or
addr16
int3
dec
fsubrl
mov
test
and
xlat
sbb
rol
sub
add
jg
push
mov
pop
movsb
ror
sbb
in
mov
lea
dec
jns
bound
jmp
pop
sbb
outsl
sub
adc
pop
cld
inc
dec
cs
pop
adc
push
insl
add
call
mov
adc
mov
xchg
pushw
add
inc
test
or
adc
insb
js
bound
dec
rep
lret
ss
mov
fldl
inc
adc
or
sub
stc
push
imul
push
mov
daa
pop
add
fwait
mov
adc
mov
pop
push
push
xchg
cs
mov
or
push
out
out
push
out
cmpsl
mov
popf
arpl
jae
pop
push
mov
jmp
imul
sbb
jbe
gs
aas
sub
xor
add
or
dec
pushf
add
jle
sahf
lea
xor
dec
push
pop
xor
dec
push
xchg
dec
cld
shll
nop
mov
es
adc
cli
gs
outsl
int
mov
pop
fcomps
movsb
enter
xchg
jnp
aam
inc
push
lret
aad
inc
push
lods
out
int
test
pop
cmp
sub
lds
das
in
jbe,pt
push
loopne
add
aaa
cli
loopne
sahf
mov
scas
je
jno
incl
jns
imul
xor
cwtl
cmp
insb
js
das
pavgw
lret
push
sbb
rcrl
jae,pn
add
adc
jns
cli
dec
xchg
jmp
and
push
dec
fsubrp
pop
imul
jno
aam
fistps
fistl
cmp
pushf
dec
idiv
add
xchg
pop
andb
les
adc
imul
loop
jmp
sbbb
hlt
loope
xchg
in
repnz
pop
out
aas
bound
scas
dec
mov
lods
jecxz
jecxz
jae
lret
pop
mov
inc
mov
iret
cmp
push
dec
xor
imul
sub
push
ror
lods
adc
repnz
cmp
daa
push
outsl
xchg
fnstenv
stos
loopne
cmp
lods
push
icebp
data16
mov
sub
dec
stos
sbb
or
in
clc
inc
in
enter
std
cld
cmpsb
mov
xor
push
mov
mov
mov
jns
cmp
jmp
insl
movsb
pop
pop
pop
jmp
push
mov
mov
pop
mov
cli
pusha
pop
mov
pop
jb
loop
dec
pop
push
and
imul
jbe
xchg
push
shlb
push
scas
cmpsb
loope
sub
cmc
repnz
sar
dec
jge
fbstp
inc
xor
push
mov
fs
adc
pop
mov
cli
loop
mov
mov
popf
mov
mov
pop
ds
mov
scas
xchg
insb
xor
sub
ds
dec
testl
mov
inc
int3
leave
xchg
cli
inc
inc
xor
leave
xchg
negl
ds
mov
fildll
push
nop
movsl
xchg
push
lcall
xor
repnz
push
aas
lahf
mov
inc
ror
sub
mov
lahf
arpl
inc
jp
mov
js
shll
lods
jmp
scas
push
or
enter
rcll
cmp
aaa
cmp
cli
add
xor
pop
arpl
inc
push
movsb
add
das
jge
inc
mov
out
iret
loop
dec
aam
jecxz
ficomps
and
stos
fwait
insb
ret
ja
dec
insb
inc
lahf
lcall
lea
lods
lret
cmp
and
mov
sbb
sub
or
adc
cmp
cld
sub
insl
pop
es
dec
lock
faddp
mov
leave
fnsave
inc
insl
sub
in
ret
add
sub
outsl
mov
scas
adc
push
jg
ljmp
adc
int
mov
adc
sahf
add
rorb
hlt
jl
out
sbb
mov
shl
mov
jmp
cmp
xchg
out
jmp
shl
or
call
adc
xor
repnz
xor
pop
xchg
in
sub
sbb
mov
iret
movsl
ja
xor
mov
inc
ja
fcomp
movsb
sub
sbb
inc
lret
js
gs
pop
sti
mov
fsubrs
roll
hlt
jg
cwtl
sbb
rolb
in
icebp
and
xor
dec
jno
jge
call
add
jno
or
mov
aam
aas
pop
ret
xor
adcl
loope
cmp
lret
cmpsl
mov
pop
mov
loope
cmp
in
jns
pop
mov
sbb
pop
mov
push
pop
cltd
sbb
fwait
out
cmpsl
cmp
mov
test
inc
mov
jge
mov
aam
imul
in
adc
out
mov
add
adc
inc
or
add
in
rcll
call
mov
loop
rcll
pop
pop
xchg
mov
xchg
int
fcoml
lret
jecxz
add
mov
push
xchg
mov
movsl
jae
sbb
mov
testb
das
lea
orl
jb
xchg
mov
imul
ret
xorl
sti
xor
lahf
sbb
sarl
repz
sub
inc
mov
and
aad
lret
in
mov
daa
adc
into
push
imull
and
out
mov
test
pop
jmp
insb
xchg
pusha
pop
xor
pusha
data16
into
mov
jmp
mov
ja
mov
test
pop
xchg
popa
ret
mov
pop
dec
lea
addr16
pop
adc
repz
xchg
fcmovbe
and
paddd
xor
and
mov
adc
aam
mov
mov
insl
sbb
jae
pop
testl
call
lret
add
dec
fwait
arpl
xchg
lock
xor
mov
cmpsb
into
jle
mov
pop
loopne
pop
insb
or
aaa
mov
test
sahf
jge
in
and
fistps
jmp
sbb
out
sarl
out
add
iret
mov
and
adc
inc
sub
into
pop
jbe
in
sahf
inc
xchg
mov
push
ret
pop
jae
out
into
mov
cli
mov
loope
jl
lea
sahf
mov
sub
mov
ds
mov
push
xor
dec
inc
cmp
inc
mov
mov
int
fld1
nop
sti
imul
sbb
loop
mov
iret
int3
out
cmp
mov
inc
add
inc
scas
add
jmp
fldenv
cmp
scas
dec
jmp
pop
mov
sbbl
dec
cmpsb
lods
arpl
and
test
jne
sbb
repnz
adc
dec
sub
scas
pop
pop
cs
inc
flds
pop
pop
jnp
bound
cltd
sub
loope
lret
inc
pop
int
mov
call
dec
fmuls
cmp
or
sub
dec
xchg
arpl
cmc
cld
cwtl
lahf
out
inc
sbb
xchg
mov
push
das
nop
mov
lea
jmp
stos
or
push
test
push
in
mov
ror
mov
daa
or
test
data16
and
out
test
inc
push
je
mov
loop
ss
repnz
mov
test
sbb
stc
and
pusha
shlb
mov
mov
sbb
outsl
mov
and
push
mov
cli
inc
cmpsl
xchg
push
movsl
mov
outsb
push
aas
dec
aas
cltd
mov
aaa
mov
or
cmp
push
mov
push
addl
stc
dec
ret
incl
xlat
jp
cmpl
xor
jb
mov
andps
gs
insb
ret
sub
mov
dec
out
loop
hlt
cs
rol
xor
push
push
or
sahf
pop
cmp
add
jle
in
in
rcrl
cmc
pop
jbe
dec
push
mov
push
stos
addr16
leave
adc
or
mov
shlb
std
mov
inc
cmp
mov
insl
xchg
mov
push
pop
mov
cmp
jge
sub
movsl
paddusw
mov
adc
cmpsl
push
lret
xchg
pop
jbe
lds
loop
out
mov
aaa
test
cmc
lret
mov
xlat
in
xor
push
lret
xchg
xchg
xor
mov
mov
stos
mov
adc
cmp
xor
test
dec
pusha
inc
imul
push
imul
push
ficompl
outsb
push
lcall
jae
sbb
popf
bound
add
mov
arpl
ja
jns
aas
and
sub
leave
lds
pop
and
push
addr16
shll
and
sub
inc
lods
icebp
leave
sub
cld
and
push
add
cltd
lock
inc
shrb
cmp
sbb
adcb
xor
mov
loopne
mov
gs
pop
fadd
scas
hlt
xchg
iret
mov
xchg
fimull
popf
movsb
and
sbb
sti
incb
push
and
jo
leave
jno
iret
dec
sub
mov
scas
fcoms
js
shlb
roll
adc
pusha
mov
pop
adc
imulb
iret
mov
data16
push
aad
jne
or
mov
sarb
vfmaddps
repz
les
jl
daa
popa
sub
and
cmp
fxch
pop
fsubs
idivb
ret
dec
roll
das
mov
mov
fwait
cmp
push
insl
mov
outsl
mov
ret
cmp
jp
lcall
ds
sub
or
mov
push
dec
imul
jg
adc
fsubrl
iret
or
rcll
repz
outsl
ret
fwait
pushl
jp
mov
adc
xlat
xchg
outsb
xchg
jecxz
aas
xchg
fldt
add
pop
out
push
dec
xchg
inc
xor
in
or
jge
push
xor
fsts
xchg
movsl
lret
pop
adc
mov
dec
insl
mov
data16
mov
imulb
shll
mov
enter
jmp
adc
and
xchg
lods
insb
mov
sbb
imul
js
ficoml
add
popf
ds
lds
adc
jb
dec
stos
in
int
fsubl
je
out
out
lret
aaa
mov
jp
out
dec
scas
push
sbb
data16
stos
and
cmp
xor
out
loop
cmp
sub
push
fildll
push
xchg
scas
pushf
mov
push
cmc
xchg
sub
in
fdivrs
call
loope
inc
cmp
lahf
push
sub
fildl
adc
fbstp
adcl
inc
ja
and
addr16
xchg
in
inc
loopne
push
shll
jnp
daa
xchg
jbe
push
dec
or
stc
loopne
inc
or
lock
adc
cmp
es
add
xchg
pusha
or
rol
scas
mov
lods
mov
and
into
shrl
pop
and
lock
addb
mov
cltd
stc
cmp
xchg
je
xor
dec
mov
into
lods
outsb
sbb
pop
push
stos
mov
mov
push
stc
add
popa
int
push
dec
int
dec
add
hlt
les
popa
pop
mov
jl
sub
ret
mov
mov
or
scas
out
rorb
cmc
sti
cmp
clc
cld
lahf
sbb
sub
sti
mov
out
push
mov
cltd
sbb
cmp
nop
jp
xor
and
sub
popa
mov
cs
pusha
xchg
out
xchg
cwtl
mov
mov
mov
daa
mov
xor
lods
jb
inc
and
inc
aam
fnstsw
and
enter
adc
cmp
lahf
mov
push
jns
push
iret
bound
sbb
lods
cltd
lds
aaa
inc
lcall
and
pushf
or
cltd
push
fs
mov
jg
ret
arpl
test
cmp
cwtl
mov
jae
cmp
xchg
jno
es
mov
mov
jp
test
movl
adc
dec
sub
push
jmp
xor
gs
negb
xor
inc
xchg
xchg
in
scas
and
and
icebp
sub
push
dec
jp
add
jg
out
popa
and
ja
stc
outsl
rorl
cmp
je
push
sbb
out
and
js
push
out
mov
stos
mov
dec
inc
fldenv
and
mov
pop
push
xchg
or
inc
sub
jb
into
adc
shlb
lahf
aad
mov
test
test
aad
filds
jb
dec
jo
pop
movsl
jmp
fmul
inc
test
mov
push
lret
sbb
add
int
mov
cmp
sbb
xchg
repz
ffreep
or
adc
or
clc
xor
lds
pop
mov
dec
push
xor
jne
movsl
fs
lock
sarb
push
pop
frstor
push
sbbb
adc
inc
cltd
xchg
dec
movsl
pop
adc
add
imul
add
or
mov
fistpl
jmp
inc
mov
mov
pusha
cmc
adc
jecxz
or
frstor
mov
sbb
xchg
pop
add
xchg
dec
clc
mov
sbb
aas
dec
or
lds
insb
xor
ds
sub
adc
pushf
js
fsts
ss
jbe
push
jp
adc
cld
xor
push
pop
shrl
cld
bswap
loopne
ljmp
inc
xor
or
pop
stos
ds
or
mov
into
jbe
out
aam
shld
ret
in
mov
aas
ja
frstor
fcmovb
pop
fidivrl
jp
shl
mov
or
or
arpl
xorb
push
mov
dec
divl
cmpsl
or
sub
js
xor
out
sbb
das
inc
out
movsl
mov
mov
filds
sbb
insb
dec
push
jge
mov
sub
cmpsl
in
roll
shlb
hlt
mov
lds
popa
jmp
xchg
je
fimull
xor
cmp
fwait
dec
add
inc
lods
sub
or
inc
lret
mov
cmp
sub
out
sbb
push
xor
out
push
lods
cltd
ret
add
pop
gs
sub
xor
test
pusha
jbe
decb
mov
mov
adc
xor
pop
ja
mov
pop
fildl
lods
push
xor
cmp
inc
std
push
mov
or
mov
outsl
into
pushf
out
ret
mov
xchg
out
jns
pop
out
push
sahf
lods
iret
int3
in
fidivrl
xor
shlb
mov
fiadds
pusha
out
pushf
xor
adc
xor
xorb
lcall
insb
cmpsl
push
scas
pop
ljmp
jl
dec
into
fidivrl
aad
mov
pop
int3
inc
cmp
in
mov
call
or
push
push
pop
push
fdivs
push
jecxz
imul
adc
and
mov
or
xchg
sbb
imul
cmp
push
and
clc
inc
adc
scas
movsb
and
ret
cld
test
shrl
iret
data16
push
lds
sarb
mov
bound
add
aad
je
lret
cmp
jecxz
rclb
cli
les
xlat
addl
in
mov
mov
arpl
mov
ja
outsb
inc
pop
adc
mov
mov
adc
push
subb
xchg
mov
xchg
or
out
test
xlat
mov
sahf
fdiv
jle
ficoml
add
mov
sub
pop
rcrb
mov
jecxz
sub
in
stos
adc
add
or
push
dec
pop
mov
scas
adc
inc
add
sbb
sub
jp
or
xlat
movd
mov
mov
xchg
out
andl
pop
xchg
jge
dec
repz
fisubrl
loopne
shrb
rorl
adc
push
rolb
xor
call
jbe
ja
out
lret
lock
fxam
nop
adc
cmpsl
paddd
ror
pusha
cltd
sbb
xor
mov
push
push
test
xchg
ret
jge
and
dec
lcall
imul
arpl
jecxz
aaa
sub
scas
ljmp
xchg
scas
dec
push
add
mov
mov
push
cltd
pop
subb
dec
add
jae
ret
sbb
cmpsl
mov
lods
mov
cmc
imul
jecxz
cmp
add
loope
adc
or
jne
sub
pop
pop
loope
out
cmp
rol
inc
dec
jmp
pop
xor
lds
scas
mov
cmp
lret
movsl
ror
loop
xlat
aaa
hlt
mov
push
xchg
or
dec
xlat
sbb
incl
fs
rcrl
push
mov
mov
sub
test
add
clc
out
faddl
inc
lcall
sarl
adc
mulb
lock
call
pop
jb
daa
jnp
jb
and
lods
sar
and
mov
stos
roll
pop
push
jns
pop
jo
mov
roll
mov
and
xor
push
ljmp
add
and
mov
or
sarl
jb
sbb
xor
sub
cmp
jg
xor
push
testb
ds
pop
cmp
fsubrl
jae
je
cltd
repnz
inc
jg
inc
sbb
stos
mov
loop
pop
push
cs
shrl
mov
scas
mov
pushf
int3
icebp
mov
or
clc
jg
add
dec
push
mov
mov
call
pop
and
xchg
sbb
pop
dec
jecxz
imul
inc
cwtl
lds
lea
bound
test
or
fsubl
mov
mov
in
inc
mov
rolb
int
adc
jb
std
mov
sarb
cmp
mov
sbb
std
fwait
lea
out
lds
xor
icebp
lahf
je
lret
sti
xchg
mov
jl
lds
aaa
and
add
into
adc
xchg
or
jmp
xor
nop
loop
gs
fdivs
or
enter
inc
ret
pop
repz
pop
cli
ss
or
jae
out
xchg
lcall
sbb
loope
xchg
xchg
or
xrelease
inc
push
shl
ja
cmc
adc
je
fcmovb
mov
mov
xchg
jns
repz
or
inc
add
incb
arpl
xchg
mov
mov
lret
movsb
rcrb
mov
add
push
mov
and
orb
jge
test
cmp
aad
push
in
cmpsb
xchg
popa
addl
lcall
lea
sbb
xchg
pop
aad
es
lret
dec
push
cmp
sbb
jns
mov
xchg
aam
sub
outsl
cmp
push
jns
pop
pop
scas
or
loope
jmp
imul
jg
mov
push
sub
lods
and
add
imulb
or
insl
in
loope
repz
sahf
xor
js
dec
push
pop
sbb
pop
adc
mov
cmp
xor
dec
fildl
arpl
cmp
les
push
or
dec
int3
mov
mov
enter
pop
xchg
jle
mov
adc
and
mov
out
push
loop
xchg
nop
outsb
add
nop
sub
sbb
mov
repz
cli
pop
xor
ret
sub
pop
int3
mov
hlt
movsb
js
mov
jbe
adc
xor
call
mov
xchg
pop
iret
adcb
in
or
and
jmp
dec
adc
pop
or
orb
xchg
cmc
xor
repnz
dec
outsl
sub
sti
pop
and
mov
enter
pop
fsub
lret
iret
mov
out
sub
mov
ss
lcall
insl
lret
daa
mov
jge
pop
lcall
push
out
mov
pop
sahf
cli
xchg
call
inc
mov
sbb
push
add
ret
loop
cwtl
cmpsl
popa
cltd
int
in
bound
fs
jb
xchg
xor
jne
add
pop
rcrl
movsb
das
imul
xchg
cmc
fistl
cmp
push
mov
sar
mov
cmpsl
or
sub
mov
mov
add
mov
nop
les
lahf
arpl
jl
stos
into
cwtl
lea
shrb
and
adc
icebp
jae
adc
cmpb
push
das
dec
adc
daa
pushf
mov
and
add
add
das
repz
gs
in
adc
pop
sbb
fldcw
movsl
inc
sarl
mov
push
cmp
nop
imul
ds
loope
push
out
roll
pop
test
sbb
xchg
mov
mov
setg
dec
jp
es
fsubrl
adc
sarl
gs
popa
mov
xlat
incl
fdiv
xor
gs
mov
mov
imul
insb
cmp
pop
and
dec
lods
fwait
push
add
popf
daa
push
out
inc
jge
sub
push
cmc
repz
inc
psrad
cmp
stos
xchg
lds
out
lret
sub
je
pusha
test
jmp
mov
data16
fs
push
or
cmp
rcr
adc
mov
pop
xlat
jge
mov
out
clc
jle,pn
push
dec
ficomps
das
popa
cmpsl
pop
ss
loop
enter
into
sbb
cmpb
add
enter
insb
inc
push
mov
fdivl
js
sub
mov
or
clc
and
lods
mov
dec
or
jle
cli
popa
jmp
pop
out
shll
cli
mov
aad
cltd
inc
pushf
cmpsl
in
std
bound
out
dec
pusha
or
jmp
dec
inc
add
leave
cmp
lds
aad
xchg
jmp
icebp
cmpsl
in
jl
jne
test
pop
and
adc
cmpsl
insl
or
xchg
ljmp
sub
mov
filds
add
add
dec
mov
out
and
mov
push
sub
popa
into
fnstsw
shll
movsb
sti
add
outsb
lock
mov
and
scas
in
arpl
int
xchg
orl
jl
in
xchg
inc
jecxz
loop
icebp
push
js
scas
in
scas
insl
leave
xchg
js
dec
fimull
stos
dec
xchg
fld
sub
test
add
movsl
xchg
add
inc
sbb
jmp
lcall
mov
ret
pop
dec
ret
mov
paddd
jecxz
call
mov
mov
sub
cltd
aad
fwait
and
shrb
inc
stos
stos
jg
jns
lret
jbe
jnp
lea
fimull
adc
and
les
xchg
subl
pop
clc
adc
fcompl
mov
jge
cmp
rcrl
repz
fdivr
mov
loop
mov
cmpl
notl
cmp
dec
scas
mov
xor
gs
dec
ja
xchg
jbe
adc
xor
add
mov
jp
out
sbb
loop
mov
mov
pop
mov
mov
sbb
xchg
add
push
push
push
fs
jbe
insb
int3
mov
inc
inc
repnz
cmpsl
or
push
mov
cmpsb
or
sub
movsl
sub
mov
xor
mov
and
and
fwait
repz
fwait
lock
cmp
out
mov
inc
fsubrs
repz
push
and
pop
shr
cli
cmp
repnz
lcall
call
cmpsl
enter
inc
jg
push
mov
add
in
and
fisubl
cmp
or
adc
push
push
dec
jnp
sahf
lock
fucomi
nop
imul
sub
mov
cmp
xchg
enter
jae
mov
cli
int3
push
js
xchg
into
push
stc
fcoml
dec
lcall
jns
rolb
pop
xor
mov
ds
addr16
adc
addl
xlat
push
cmpsl
roll
sbb
xchg
dec
aad
xchg
lods
aaa
xchg
and
sti
mov
mov
cmp
test
cmp
pop
xor
sarl
mov
mov
sub
cli
dec
mov
leave
pop
mov
cli
mov
loopne
or
popa
test
fldl
jno
xchg
mov
out
imul
outsl
xor
lcall
mov
push
pop
shrb
inc
push
fistl
cmp
rcrb
mov
or
mov
ss
adc
jmp
iret
cmpsl
cld
cmp
loop
xor
sbb
mov
mov
clc
or
insl
dec
lret
shll
inc
lcall
aaa
xchg
dec
dec
push
pop
cmp
mov
adc
ds
jge
iret
push
mull
notl
test
ret
jecxz
mov
push
sbb
sub
or
xor
adc
mov
pusha
addr16
mov
loopne
adc
repnz
mov
fiadds
pop
xchg
dec
sub
daa
pushf
pop
mov
pop
movlps
lods
in
pop
mov
jl
sbbl
dec
jo
sub
sbbl
and
xchg
push
lock
or
push
bound
cld
mov
mov
pop
xchg
inc
xchg
jl
ret
sbb
xor
pop
std
mov
sub
ret
stc
daa
and
mov
dec
mov
adc
sbb
lahf
hlt
enter
dec
cmpsl
mov
xchg
rcrl
mov
jne
adc
cmp
aas
pop
fcompl
pop
test
cli
fstl
xchg
daa
scas
dec
cmp
xchg
sbb
xor
cmp
pop
sbb
jo
loopne
or
and
cwtl
xor
pop
fisubs
pushf
xchg
mov
sub
mov
les
jb
imul
dec
push
inc
pop
sbb
mov
cwtl
ss
mov
sar
xor
lcall
or
dec
sub
aas
ja
jne
ljmp
mov
mov
iret
mov
les
xorb
mov
sbb
pop
add
aam
jnp
mov
int3
idivb
fs
popf
dec
cmpsl
test
lds
jecxz
push
dec
mov
andb
ds
leave
sbb
jp
mov
cli
in
lock
adc
and
lods
bound
daa
add
out
mov
cltd
int3
ficoml
or
orb
sub
inc
aam
inc
ret
daa
imul
and
pop
xchg
sti
or
cmp
mov
jbe
inc
pop
pusha
shll
inc
test
addr16
into
inc
ds
scas
jno
xor
inc
adc
dec
mov
dec
call
jbe
testl
inc
jmp
and
dec
push
loop
pop
int
aam
mov
fwait
or
in
or
iret
pushf
fst
sub
adc
popa
push
imul
xor
mov
test
sub
lea
sub
jecxz
sub
pop
xchg
lret
or
push
add
pop
nop
adc
lret
fidivrs
and
push
adc
xor
cld
cmp
je
sbb
adc
nop
sbb
sub
or
adc
nop
test
out
roll
iret
bound
repnz
adc
outsb
jle
cmc
rorb
inc
sub
stos
push
jnp
ja
dec
cwtl
fildl
push
sub
cwtl
int
push
sbb
add
leave
hlt
and
cmp
jns
or
jge
inc
jp
into
cmp
idivb
jae
mov
lea
stc
xchg
fstps
pop
pop
out
push
xchg
xor
mov
lret
cmp
dec
dec
jne
adc
adc
ss
iret
dec
pushf
pop
pop
dec
mov
sbb
mov
xchg
ss
daa
mov
ficompl
jne
in
imul
fnstsw
jl
roll
repz
fcmovb
cld
mov
jmp
dec
lret
dec
aaa
dec
adcl
cmpsl
mov
mov
xor
dec
dec
push
fwait
mov
mov
push
dec
or
mov
movsl
ret
jge
adc
jg
and
xchg
ret
and
mov
insl
mov
dec
cmp
xchg
lock
lock
fcom
xor
mov
in
push
or
data16
out
jl
sbb
xor
xor
sti
xor
xchg
mov
lock
mov
nop
adc
sub
xchg
mov
f2xm1
and
test
iret
fwait
push
insl
sub
lahf
fisttpll
dec
imul
xchg
je
adc
adc
out
lahf
das
fisubs
inc
divps
imul
aad
sbb
fistl
out
out
jb
enter
addl
adc
lahf
jle
sub
mov
add
or
xchg
adc
call
lds
fstpt
fistpl
ja
idivb
mov
int
mov
mov
lret
pop
inc
inc
out
mov
cmpl
pop
or
adc
mov
xlat
aam
push
in
inc
adc
ja
jnp
jbe
jmp
cltd
outsl
push
cmp
lahf
fwait
popa
lcall
dec
insl
mov
fildll
sub
in
mov
push
shl
mov
ja
add
pop
dec
es
stos
mov
jb
out
sub
ss
and
xchg
adc
cmc
sbb
sbb
aaa
lods
sti
adcb
sub
std
leave
mov
outsb
sbb
xchg
mov
aad
xchg
in
push
cmpsl
push
mov
mov
imul
mov
test
xchg
outsb
int3
dec
repz
repnz
lock
bound
cmpsb
rclb
stos
mov
jp
dec
xor
add
out
push
imul
out
add
or
and
rcrb
mov
inc
cmc
mov
std
mov
int3
pusha
movlhps
js
and
in
ret
xchg
push
dec
popa
push
xchg
dec
mov
cmc
dec
mov
mov
mov
stos
subl
lds
inc
pusha
dec
stc
sub
mov
adc
add
sbb
pop
orl
sub
cmp
jmp
inc
test
imulb
mov
mov
mov
xchg
lcall
lret
push
and
sbb
dec
push
mov
shl
outsb
rcrl
mov
mov
mov
mov
das
rcrb
fwait
xchg
lods
std
mov
jecxz
fidivrl
lds
lahf
mov
rol
je
cmp
sub
xor
fisttps
and
leave
stc
pop
sahf
pop
jmp
dec
test
shlb
mov
das
cld
ljmp
mov
mov
xor
lock
cmp
div
iret
shrb
imul
ss
push
adc
push
in
and
rorb
js
push
mov
imul
xchg
lods
jg
cmp
in
pop
out
insb
sub
pop
sub
test
ret
test
decb
sub
or
mov
movsl
or
push
bound
inc
or
sbb
or
mov
fidivrl
mov
fidivl
lods
jecxz
das
push
data16
outsb
cmp
fdivs
sbb
mov
jge
pop
subl
pusha
lods
and
sub
mov
pop
mov
push
movsb
enter
js
cltd
mov
sbb
mov
push
push
hlt
and
iret
jae
fs
fildl
dec
ljmp
inc
pop
and
leave
xor
and
xor
js
xchg
shrl
repnz
cmp
pop
jp,pn
mov
jmp
xchg
loope
sbb
decb
out
jl
cmp
push
xor
movsb
mov
cli
mov
jns
push
cmp
jmp
jmp
adc
and
shlb
imul
xlat
mov
add
xlat
cmp
in
jl
fbld
int
lcall
and
cmp
cmp
lret
xor
insb
ss
push
jecxz
mov
lea
inc
mov
fwait
push
jb
cmpsb
ret
les
adc
or
adc
or
cmp
pop
dec
lea
mov
cltd
jo
cmpsl
dec
out
fdivl
jmp
lea
push
sbb
dec
ja
jae
aas
fidivrs
push
and
jp
jne
sbb
enter
test
sbb
scas
jne
push
push
subl
loope
dec
sbb
stc
mov
mov
adc
pop
xchg
dec
jp
xchg
and
xlat
cmpsl
aas
adc
mov
shll
js
push
in
cmp
movsl
int
nop
stos
test
cmp
push
sbb
or
rclb
imull
fldcw
int3
jp
jp
out
jge
outsb
rclb
mov
lock
stos
loopne
mov
int
and
cmpsl
mov
popa
cmp
hlt
aad
mov
in
push
pop
adc
push
call
insl
push
inc
mul
movsl
pop
pop
cld
fnstenv
mov
ja
int
fcomp
mov
push
aam
sbb
adc
xor
shr
push
and
out
inc
jae
pop
es
cmp
rcl
out
dec
xchg
and
je
xor
addr16
cmc
aas
and
andl
add
addr16
mov
popa
mov
dec
and
jge
adc
icebp
pop
jne,pt
push
rcll
fnsave
push
cld
test
cmp
filds
mov
outsb
pop
stos
out
pushf
stos
mov
push
sbb
inc
or
dec
sbbb
xchg
adc
pop
rorl
idivb
in
popf
and
mov
lret
push
mov
jle
cmp
lds
lock
cmp
hlt
push
push
push
mov
ret
mov
imul
inc
dec
stc
leave
xlat
push
jbe
lock
pop
out
ficompl
or
jb
push
push
lods
jp
mov
lcall
push
scas
popa
fdivr
inc
xchg
jle
xor
loopne
jb
pop
ljmp
xchg
jg
js
sub
fwait
aas
in
imul
mov
sub
ret
or
sbb
dec
inc
jnp
push
stc
popa
shlb
sub
push
stc
cmp
jle,pt
or
movsl
dec
xchg
jge
inc
out
jle
dec
dec
orl
test
int3
bound
dec
mov
add
and
aad
sub
jae
out
cmpsb
mov
dec
dec
outsb
mov
pop
ljmp
push
fldt
mov
testb
mov
xchg
das
scas
xchg
dec
sub
xchg
inc
lods
jo
adc
loop
repz
in
std
adc
imulb
out
shl
xchg
cs
push
and
int3
cltd
in
jg
xor
cmc
cmpsl
xchg
fs
cmpsb
or
pop
outsl
xchg
mov
aas
mov
loope
bound
inc
sub
shrb
insb
sbb
lods
cmp
rorl
ficompl
adc
aas
mov
sub
cmpsb
loop
jne
xchg
stos
call
mov
lret
sbb
or
inc
repz
nop
dec
dec
dec
mov
sub
mov
js
mov
fimull
adc
mov
in
out
mov
xor
stc
mov
and
popf
dec
insl
das
add
scas
mov
xchg
xchg
flds
and
inc
mov
call
sti
inc
pop
leave
ds
adc
das
mov
jge
xor
pop
fcmovu
adc
mov
mov
mov
lahf
dec
pushf
in
adc
insb
pop
or
and
sti
mov
xor
lods
lds
or
mul
and
fucomi
xchg
popf
rcll
push
xor
mov
or
icebp
push
ss
cmp
fildl
jb
test
repnz
daa
add
gs
sbb
pop
jecxz
enter
repz
repnz
fs
push
xor
fs
jge
jb
xor
fwait
js
inc
sbb
sahf
xchg
aad
jo
push
adc
std
mov
shl
int3
fisubrs
mov
xchg
add
xor
xor
xchg
stc
call
inc
jp
push
mov
jl
scas
ss
lret
jecxz
xorl
int3
sbb
div
jns
fwait
loop
scas
test
ljmp
je
push
lods
pop
mov
fldcw
or
mov
cwtl
andl
icebp
and
mov
fwait
inc
iret
cmpsl
movsb
and
sub
xchg
and
clc
dec
add
data16
nop
movsl
sub
inc
xchg
mov
cmpsl
push
aas
add
dec
inc
aam
push
pop
fistps
movsl
aas
lea
clc
negb
mov
xor
jae
dec
out
arpl
xchg
les
jg
cld
mov
pop
cmpsl
mov
addl
xor
jo
sbb
shlb
cmp
les
xor
sbb
stos
inc
or
dec
test
or
test
pop
and
cmp
leave
inc
add
lock
jne
imul
lahf
shrb
inc
icebp
lret
pop
stos
test
std
cmp
push
pop
sbb
sbbl
shrb
jmp
out
in
push
adc
das
int
enter
outsb
idiv
pushf
mov
xchg
cmp
add
sub
out
pcmpeqw
xchg
xor
lock
add
enter
pop
jle
js
jb
jns
mov
das
insl
cmp
xor
add
mov
jl
lret
lock
push
and
std
push
flds
enter
mov
into
pop
es
dec
and
out
aaa
cli
mov
push
jg
push
add
push
adc
cmp
imul
mov
pop
mov
in
xor
pop
inc
shrl
adc
std
sbb
lret
pop
mov
js
imul
adc
jecxz
mov
mov
mov
mov
test
sub
sub
inc
sti
hlt
sbb
cltd
sbb
fs
or
cltd
dec
test
daa
lock
xchg
enter
test
fmul
mov
push
sbb
std
fwait
pop
ja
out
adc
mov
int
add
iret
inc
aad
es
pop
xchg
push
and
ret
scas
push
push
and
lahf
mov
pop
in
cwtl
aad
mov
aaa
sbb
and
into
fst
imull
fstps
xor
dec
mov
cltd
jbe
xor
sbb
mov
hlt
nop
pop
andl
adc
xchg
mov
test
mov
add
in
sub
data16
mov
fdivl
addb
adc
xchg
mov
ficomps
out
shr
orb
jle
mov
mov
cmp
pop
sub
push
pop
repz
mov
mov
stos
and
add
xchg
dec
dec
jo
outsl
and
lods
add
sub
shlb
push
mov
push
xchg
cmp
adc
notb
or
dec
cmpsb
push
addr16
mov
add
xor
jecxz
test
cmp
sub
dec
aad
les
sbb
shr
nop
pop
enter
or
mov
icebp
or
jne
sbb
loop
into
hlt
cmpsb
subb
pusha
stos
iret
mov
adc
call
lock
inc
jns
mov
bound
test
adc
add
mov
sbb
inc
cmpsl
std
loopne
hlt
and
enter
cltd
ja
das
pop
xchg
push
push
lods
dec
sub
xor
std
add
sti
shrb
test
subl
lea
mov
enter
lods
inc
lods
es
leave
daa
icebp
cld
sbb
push
lcall
aam
arpl
outsb
inc
movsb
test
sbb
sub
pop
jecxz
adc
jmp
pop
cmc
fsub
sbb
inc
fisttpl
mov
lds
mov
mov
xchg
jmp
or
inc
inc
mov
inc
out
xchg
mov
shl
xchg
xor
in
aad
lea
push
rcl
cld
jg
push
fldcw
push
xchg
in
je
negb
cmc
adc
ret
ljmp
lds
dec
dec
sub
or
in
jne
fcoms
xchg
ljmp
test
std
push
lahf
sub
adcl
dec
mov
xchg
pop
xchg
sub
push
mov
mov
pop
arpl
pop
movsb
ljmp
repz
push
data16
mov
mov
mov
lret
es
rcrl
jb
das
in
addr16
and
xchg
mov
ds
inc
lods
aaa
xor
sub
clc
push
lods
or
lds
lds
adc
out
sti
mov
sub
dec
aas
xchg
outsl
lret
arpl
test
xor
icebp
in
cmp
sub
mov
xor
xor
lods
sahf
xchg
add
dec
adc
xlat
push
xorb
repnz
aad
sbb
pop
loopew
aas
xor
inc
mov
inc
scas
repnz
sbb
rclb
loop
mov
enter
push
or
lret
push
je
dec
inc
loop
popl
aas
sub
mov
lcall
popf
jae
pop
cmp
mov
mov
push
mov
adc
sbb
notl
pop
pop
cmp
mov
adc
xchg
dec
cmpsb
and
cmp
sbb
xchg
jnp
mov
cli
repnz
dec
gs
dec
sbb
mov
xor
xchg
jmp
enter
shrb
sub
xchg
nop
mov
add
int
sbb
cmpl
cltd
pushf
sub
and
xor
sub
add
rcr
add
adc
jo
ljmpw
mov
or
mov
rorb
push
in
outsb
nop
cmp
fiadds
mov
popf
adc
movsl
js
pop
test
jg
loopne
shl
or
cmp
mov
lcall
adc
fcmovnbe
sbb
fsubr
fcomps
in
rorl
mov
sub
mov
xchg
mov
adc
inc
jns
sbb
push
rol
xor
movntq
out
adc
sub
sbb
cltd
fdivl
add
cld
test
and
inc
sub
adc
int3
jl
addl
inc
scas
stos
mov
fnstsw
rorl
sub
test
xchg
and
cmp
add
sbb
shl
shl
mov
adc
mov
pop
and
and
pop
xor
xchg
or
push
pop
repz
repz
dec
lock
dec
mov
sub
das
push
sub
jbe
mov
ret
inc
dec
out
cld
pop
sbb
mov
dec
mov
shlb
xor
cmp
jmp
add
push
jmp
movsb
fistl
jb
adc
push
or
inc
jne
jle
jb
rcr
das
cmp
daa
test
jb
jbe
shll
sub
adc
les
dec
cwtl
or
and
dec
lods
cmp
dec
movsl
adcl
std
int3
sub
stos
add
xchg
lea
outsl
add
aam
dec
add
jge
push
jmp
mov
in
lahf
push
push
sub
dec
stc
jb
xlat
mov
mov
pop
call
xchg
pop
xor
or
shrl
push
pop
jp
mov
imul
pop
fstpl
popf
fwait
sub
ret
sahf
mov
add
fwait
sub
jp
sbb
mov
loop
enter
adc
adc
sbb
js
mov
dec
call
nop
gs
test
int
dec
and
inc
stc
addr16
loopw
outsb
bound
aam
in
int
fwait
xchg
loopne
lahf
rorb
mov
cmp
mov
pop
xor
xor
adc
jl
fmull
shrl
loopne
pop
and
mov
and
in
xchg
jo
jae
in
nop
xor
xlat
fdivrl
neg
jge
das
or
cmpsl
adc
sbb
inc
stos
xchg
shrb
and
mov
imul
sbbl
rcll
sub
bound
mov
nop
mov
xor
movsl
add
jns
mov
mov
and
scas
sub
in
out
cmpsb
xlat
xor
cwtl
cmp
pop
mov
divb
sub
inc
jbe
jp
and
mov
push
or
or
loopne
push
mov
imul
test
inc
call
lea
stc
call
loope
pop
xchg
repnz
or
push
andb
push
pop
add
mov
mov
rorb
xchg
and
in
cltd
test
mov
mov
mov
cmp
scas
fidivrs
mov
ror
adc
pop
incl
mov
sbbl
enter
sub
add
xor
jno
adcb
ds
cmp
add
mov
dec
fstps
imulb
jae
adc
push
add
or
cs
mov
cmp
icebp
je
cs
rcrl
faddl
sub
ret
and
popf
cli
pop
mov
xor
insl
mov
xor
jmp
fisubs
fdivr
dec
xor
jg
or
mulb
cmpsl
xchg
xchg
jmp
in
lods
push
loop
xlat
std
or
push
pop
repnz
xchg
out
fisttpll
clc
mov
sbb
les
arpl
out
xchg
jp
stos
push
jl
push
fistpl
lods
pusha
lret
dec
adc
out
aas
xchg
mov
pop
lods
mov
sbb
dec
or
pop
inc
cmp
jbe
jge
repnz
hlt
pop
pop
filds
test
sti
xor
jg
mov
fcom
popa
jbe
jns
dec
jp
push
icebp
daa
adc
xchg
cmp
mov
add
mov
mov
mov
lcall
adc
aam
in
call
jne
les
in
push
and
insl
das
xorl
pop
cmp
out
in
xchg
gs
add
lock
fs
xchg
loopne
outsb
ret
pop
clc
adc
js
mov
mov
popa
push
out
lods
xor
call
pop
jmp
inc
or
in
push
inc
pop
bound
lods
roll
jl
jmp
daa
fwait
iret
cmpsb
in
or
adcl
push
mov
mov
inc
stc
negl
xor
lods
pop
lds
out
outsl
cmp
rclb
lahf
dec
imul
pop
andb
jp
hlt
lea
mov
sahf
jbe
in
test
loopne
icebp
pop
cmp
in
add
lds
aas
lret
lea
fcomps
nop
sbb
insb
test
lds
pop
pusha
dec
cld
push
inc
addr16
insl
enter
adc
dec
or
add
mov
mov
cs
ficoml
pop
fdivs
cmp
pop
mov
fwait
dec
cmp
add
test
in
push
outsl
dec
mov
outsb
rcll
jg
in
jns
mov
cmp
mov
inc
xchg
cld
jo
sub
and
std
repz
mov
scas
push
in
ljmp
cmp
stc
inc
insb
cmpsl
repnz
dec
adc
enter
push
sub
fcmove
insb
iret
inc
mov
cltd
call
das
xchg
movsl
push
dec
add
sub
cmp
mov
movsb
cmp
lret
lods
call
nop
add
ja
jbe
ljmp
or
add
xchg
pop
and
mov
scas
sbb
movsl
icebp
aad
mov
push
in
insb
leave
iret
and
rcr
pop
xlat
mov
lret
fwait
aam
iret
bound
jno
fldz
jp
std
call
push
sub
jl
sub
jg
stos
mov
xchg
mov
std
ss
into
je
cmp
and
mov
scas
int3
std
hlt
sbb
cmp
fbld
inc
shlb
xchg
stos
adc
div
cwtl
shrb
mov
xor
or
cld
out
test
cmp
xchg
sub
int3
pushf
mov
push
jb
fidivs
sti
repz
sbb
cmp
ds
sub
cltd
movsb
in
inc
ror
sti
push
test
dec
insl
adc
addr16
xchg
neg
push
pop
or
pusha
jmp
icebp
push
repnz
fwait
pop
pop
dec
jb
test
push
mov
jle
push
stos
scas
imul
stc
mov
pop
out
repz
jge
sbb
mov
pop
pop
push
clc
mov
xchg
ja
dec
mov
dec
mov
xlat
sub
inc
pop
loop
add
pushf
pop
jae
or
lcall
data16
jmp
mov
dec
jno
dec
inc
out
in
shll
les
int
rcl
inc
add
inc
stc
cld
sub
and
mov
addl
jecxz
cmp
mov
and
jbe
pop
push
jnp
xchg
xor
fisttps
sbb
rol
xchg
out
adc
cmp
in
jecxz
cmpsb
lods
in
xor
test
or
dec
je
lods
cmp
push
cli
imul
enter
jp
cmp
bts
sub
test
lahf
out
insb
sub
sbb
repnz
fstps
fwait
movsl
add
xor
loop
sbb
nop
aas
push
cmp
ds
jmp
shlb
mov
dec
jmp
push
dec
jne
and
outsl
inc
lods
jmp
cmp
pop
inc
cmp
data16
adc
mov
lods
jae
pusha
loop
pop
test
pop
cmc
addr16
sbb
push
sub
jne
inc
clc
jp
cmp
out
xchg
comiss
lret
dec
test
pop
and
jmp
loop
mov
or
adc
pop
jmp
outsb
sbb
xchg
and
inc
and
mov
cmp
xchg
fiadds
cmp
bound
dec
faddl
push
jp
mov
mov
movsb
in
les
cmp
xchg
add
jmp
popf
into
in
jo
xchg
cwtl
jg
push
jp
out
dec
movb
sti
sub
and
sarl
inc
inc
jge
das
dec
jg
dec
in
data16
lahf
pop
popf
or
out
adc
lods
push
adc
idivb
jbe
inc
cmc
scas
jecxz
mov
sub
pop
xor
mov
and
or
pop
fwait
inc
push
cli
xchg
into
inc
push
adc
pop
loop
adcb
pushl
loop
push
push
lcall
inc
sub
out
outsl
out
cli
int3
mov
jbe
mov
out
cli
add
in
cmp
imul
jge
cmp
mov
sbb
xchg
bndldx
xchg
sbb
mov
pop
or
or
mov
and
enter
lock
mov
mov
insl
cmp
fstl
jmp
scas
repnz
mov
inc
in
daa
jnp
lret
stc
push
imul
movsb
pop
fists
stos
lock
dec
mov
dec
xlat
sarl
dec
pop
ss
pop
sbb
and
call
jae
push
sbb
arpl
pop
daa
repz
sub
push
out
adc
iret
dec
fwait
or
aam
adc
fstpl
push
sbb
adc
repnz
xchg
inc
lahf
mov
frstor
pop
mov
pusha
xchg
add
dec
jle
outsb
mov
pusha
jl
adc
jo
push
xor
mov
xor
fnsetpm(287
orl
inc
jmp
stc
lds
xchg
fidivrs
sbb
or
data16
fildl
icebp
insb
jg
lock
shlb
hlt
enter
ss
ds
xor
mov
and
icebp
decb
adcb
addb
mov
sbb
pop
stos
mov
scas
sbb
sub
je
inc
adc
mov
inc
imul
cmc
ljmp
lcall
fldl
xchg
pop
and
cld
mov
into
movsl
push
cmp
mov
test
mov
mov
mov
rorb
mov
mov
cmpsb
loope
flds
jns
mov
mov
loopne
sub
lock
repz
in
mov
out
lret
mov
test
dec
inc
test
fisttps
jle
rorb
dec
mov
andb
dec
lods
xchg
adc
aaa
dec
notb
add
clc
mov
push
insb
call
daa
xchg
add
add
js
out
sbb
pop
jp
push
sbb
ret
dec
jnp
mull
pop
pop
pop
jl
jbe
ret
push
or
cmpsb
das
mov
ja
mov
push
mov
sub
mov
push
xchg
xor
pushf
mov
cmp
sbb
add
ss
pop
call
inc
sbb
jae
imul
mov
or
fmul
mov
outsl
mov
sub
out
push
inc
inc
rorl
lret
outsb
ret
fldcw
fdivl
mov
in
inc
mov
cltd
or
cs
ret
push
test
fwait
mov
sub
in
mulb
push
mov
or
push
outsb
gs
scas
and
testb
imul
xchg
sub
icebp
push
std
add
jbe
into
mov
or
cmp
or
gs
outsb
jg
fdivl
xchg
shlb
repnz
daa
cmp
mov
ret
adc
mov
gs
rcl
jb
push
push
mov
lds
fistpl
sbb
stc
mov
shl
or
add
xor
add
adc
sub
cmp
cmpsb
sub
pop
push
xchg
in
mov
mov
mov
jecxz
popa
addr16
nop
scas
xlat
mov
cwtl
adc
mov
leave
jae
cmpsb
jb
sti
cmpsb
lcall
add
mov
add
adc
inc
fcoms
mov
mov
push
jnp
or
push
xchg
jmp
inc
mov
shl
xchg
in
bswap
inc
cmpsb
sti
out
mov
or
dec
enter
jmp
inc
popa
sub
or
aaa
and
push
adc
mov
fdivs
rclb
je
cld
cmpsb
mov
jns
adcb
cmpsb
cmpsl
xor
aad
test
xor
add
std
and
stos
xchg
cld
xor
add
les
scas
push
adc
push
xor
addr16
stos
push
dec
ret
xchg
jno
jnp
addr16
sub
mov
or
and
xlat
mov
jb
or
in
mov
ret
mov
push
in
and
dec
in
aaa
sbb
mov
mov
or
insb
ja
mov
fwait
pop
xchg
xor
sub
scas
dec
stos
push
scas
xor
lcall
jo
mov
and
incl
fdivl
mov
test
hlt
and
pop
insl
lods
jge
xor
in
pop
or
jae
rolb
addl
insl
and
cmp
jle
or
sub
push
dec
dec
sahf
call
push
subb
cwtl
pop
xchg
test
sbb
popa
pop
inc
repnz
je
push
ret
ret
xor
roll
scas
lahf
push
test
shr
stos
inc
aaa
cmpsl
xchg
pop
add
sub
add
mov
pop
push
dec
std
and
adc
insb
xchg
adc
pushf
mov
xchg
push
jecxz
movsl
arpl
push
jg
jl
push
clc
inc
stos
cmc
in
sub
rorl
arpl
xchg
mov
dec
and
js
push
cmp
mov
mov
int
inc
in
inc
push
or
mov
inc
pop
sahf
xlat
mov
cmp
sarl
push
sub
dec
icebp
mov
bound
sub
mov
or
outsl
mov
add
ficoml
les
and
hlt
jmp
popf
ja
fwait
out
mov
push
xor
sub
jo
inc
jnp
pop
popa
pushf
icebp
xlat
pop
and
or
xchg
or
out
mov
test
and
xchg
dec
mulb
sbb
in
xor
jl
xchg
or
faddl
inc
leave
addr16
lds
xor
mov
fnsave
sub
xchg
cli
scas
add
or
add
sbb
sahf
test
jns
lds
xchg
xchg
outsl
fidivrs
pop
jge
ret
push
xor
jg
cld
mov
out
sub
icebp
cmp
outsl
cwtl
dec
jae
cmp
scas
mov
jp
cld
ljmp
testl
daa
dec
stc
adc
das
paddsb
inc
xchg
xchg
sbb
mov
jb
or
add
mov
sub
divl
mov
sti
ret
adc
orl
int3
fimuls
arpl
hlt
sub
or
sub
arpl
aad
xchg
jns
lret
sub
pop
and
pop
xchg
sahf
iret
xchg
mov
jbe
sbb
mov
repz
loope
cltd
mov
mov
int3
mov
scas
cmp
cld
mov
xor
popa
les
out
icebp
loopne
push
pop
xchg
mov
xlat
pop
and
pop
inc
outsb
pop
push
xchg
pop
rorl
pushl
loopne
inc
pop
adc
or
jge
insb
or
inc
jae
push
jle
inc
stos
mov
bound
xchg
mov
or
shrl
push
iret
pop
xchg
xor
cmp
push
aad
addr16
movsl
ljmp
lods
shlb
sbb
mov
repnz
push
cmc
xor
lret
cmpsb
pop
adc
pop
outsb
lods
and
aas
imul
mov
xor
shrl
mov
data16
xor
fnstcw
rep
mov
add
div
movsl
fldenv
imul
adc
sub
jmp
dec
loope,pt
les
xchg
xor
mov
xchg
fs
jmp
inc
adc
add
sbb
stos
xchg
dec
dec
mov
xchg
mov
xchg
push
cs
dec
or
ds
pop
test
fstl
pop
outsl
ret
push
enter
iret
mov
push
sbb
fcomps
pop
push
push
fldt
lahf
and
sub
cmp
sbb
data16
xchg
or
or
and
push
movsb
or
jnp
xor
mov
push
or
dec
xor
or
or
test
mov
mov
adc
jg
lahf
add
int
in
pop
into
mov
adc
xchg
dec
enter
mov
sti
nopl
test
inc
in
mov
push
pop
jae
cld
sbbl
cmp
negb
out
std
mov
cwtl
repz
and
pop
out
push
mov
pop
stos
fnstenv
dec
ss
mov
dec
mov
add
push
cmp
cwtl
or
and
jno
dec
push
xor
xchg
add
mov
cmp
pop
dec
nop
insb
push
jmp
mov
stc
mov
rolb
daa
ret
and
fwait
xchg
adc
or
sbb
inc
aas
arpl
enter
mov
mov
jle
imul
ss
hlt
push
rcrb
pop
push
add
push
xor
ffreep
mov
xor
mov
adc
xor
sub
fimull
iret
rorl
lret
lahf
ljmp
push
or
xchg
cltd
pusha
mov
adc
mov
push
sub
in
addb
fiaddl
out
gs
in
ret
xchg
adc
adc
stos
push
mov
imul
sub
or
std
iret
lods
cmc
sbb
xchg
adc
hlt
ret
mov
fistps
or
movsl
or
ja
ja
das
mov
jne
clc
cmp
mov
dec
or
push
pop
mov
inc
add
int
and
adc
sbb
mov
outsb
cli
pop
fldenv
das
xchg
mov
enter
movsb
or
push
fstl
push
xchg
sbb
and
xor
ds
ljmp
arpl
sub
dec
jae
fxch
lods
bound
into
andb
mov
iret
xchg
fsts
es
shrb
xor
and
outsb
mov
or
pop
repnz
mov
xchg
sbbb
push
or
mov
loopne
mov
test
and
lock
inc
mov
cmpsb
imul
jbe
test
test
xlat
aam
adc
sbb
ss
push
es
arpl
sub
ret
rorb
repnz
xor
pop
outsb
mov
pusha
adc
mov
dec
and
sbb
push
sbb
cltd
repnz
mov
inc
int
xor
jno
sbb
add
add
fnstenv
out
ret
sti
int
push
fldl
mov
sub
nop
adc
dec
icebp
inc
cmp
lock
fistpl
imul
hlt
push
sub
mov
mov
lcall
ljmp
jp
adc
and
frstor
or
cmpsl
iret
addr16
repz
or
add
xchg
mov
mov
imul
enter
jns
sbb
adcb
or
adc
sbb
cmp
mov
lret
sub
loope
pop
xor
mov
pop
adc
xlat
xlat
pop
add
mov
pusha
testb
mov
lcall
xor
aad
adc
jne
cmp
aad
rorl
mov
adc
fcoms
call
sub
xchg
add
push
call
int3
pop
rclb
adc
sti
daa
sub
jge
xchg
leave
stos
les
pop
call
cs
mov
rorb
pop
adc
mov
or
adc
pop
push
cmc
xor
and
pop
mov
adc
mov
sub
sbb
push
lods
inc
and
jns
push
scas
inc
movsb
js
cmp
jecxz
push
push
je
inc
pop
cmp
aam
and
or
xchg
cmp
pop
pop
sub
or
popa
in
xchg
and
or
xchg
dec
mov
call
rcll
push
and
add
fwait
jnp
lods
lret
or
lahf
imul
mov
lcall
add
jmp
outsl
add
xchg
jg
jecxz
sub
jecxz
cmpb
jne
pop
int3
cmp
xor
cmpsl
dec
xor
popf
mov
sahf
inc
out
push
in
mov
cmp
sub
cmp
mov
jecxz
xor
addb
ja
ds
dec
xor
jb
popf
mov
inc
sub
xchg
jnp
repz
out
insl
nop
or
cmp
cmpb
pusha
pop
sub
push
sbb
and
loop
mov
add
fcmovnbe
xchg
imul
add
mov
pop
movups
and
inc
xor
mov
mov
enter
cmp
dec
jecxz
pop
mov
dec
dec
fnstsw
add
push
jecxz
xor
loope
inc
popa
mov
pusha
or
lods
stc
clc
xchg
pop
fs
jb
cmp
adc
das
mov
dec
sub
xchg
js
out
dec
pop
mov
adc
gs
cmp
push
push
sbb
les
pop
push
cmp
or
insb
sub
mov
pop
test
cltd
jle
in
pop
cmp
in
adc
inc
cmp
nop
je
add
mov
stc
mov
lcall
and
inc
mov
mov
mull
jne
mov
cmp
jle
inc
push
xor
shrb
mov
and
loopne
mov
js
xor
cli
insl
and
dec
or
ss
mov
mov
stc
mov
into
gs
fnstcw
pop
ficoml
mov
dec
into
jno
mov
pop
mov
jmp
loopne
jnp
push
adc
mov
jnp
sbb
lock
xor
daa
mov
insl
sahf
mov
es
rep
std
fisubl
dec
cmp
jmp
pavgw
push
adc
mov
jae
jo
adc
lret
fnsave
or
and
je,pn
push
mov
addr16
adc
dec
add
scas
mov
jle
icebp
fcoml
pop
leave
dec
xrelease
imul
sahf
arpl
scas
sbb
or
push
aam
std
dec
int3
push
mov
adc
les
iret
lods
push
inc
adc
and
mov
lahf
out
shlb
dec
mov
bswap
pop
mov
jno
pop
fwait
xor
test
mov
xor
shlb
out
push
mov
std
loop
xchg
imul
dec
mov
pop
fiaddl
and
cmpsb
dec
or
add
inc
enter
push
sub
dec
sbb
push
inc
ljmp
cmp
scas
xchg
inc
inc
ja
add
mov
xor
and
test
cmp
mov
cmp
mov
inc
into
scas
dec
data16
in
test
scas
dec
in
mov
cmpsb
or
mov
rclb
jb
push
scas
jecxz
cmp
xchg
dec
bound
mov
lds
xorb
mov
push
mov
sbb
bnd
stc
cmp
out
mov
scas
xor
dec
fidivl
sub
scas
leave
fisubrl
aas
leave
shrb
adc
js
mov
sbb
testl
dec
das
popa
test
aam
pop
ja
xor
jl
xchg
xor
mov
mov
sub
mov
das
scas
lahf
aad
outsl
push
push
fisttps
daa
adc
mov
sub
mov
jmp
stc
das
not
cwtl
ror
call
mov
and
xor
mov
out
subl
xchg
pop
insb
add
and
push
insl
test
sub
dec
push
out
push
xchg
aas
push
sub
insb
sbb
cmp
lret
or
jmp
inc
stos
adc
inc
ja
dec
repnz
fcmovnu
pop
call
and
inc
enter
stc
test
push
inc
xor
sub
stos
xchg
aas
jmp
dec
fdivrs
lock
mov
sbb
adc
dec
mov
jl
dec
add
lds
into
cmpsl
adc
cmpl
mov
imul
pop
enter
mov
pop
out
or
fisubrl
pushf
pop
adc
pop
fwait
into
sub
push
ds
sub
ret
test
loope
and
lahf
jge
dec
or
outsl
sbb
jp
jecxz
lret
adc
cld
ds
js
pop
and
xchg
add
ds
cmp
push
andb
dec
push
xchg
test
mov
je
test
arpl
dec
and
ret
push
inc
adc
push
cmp
cli
push
jle
mov
in
clc
pusha
xchg
jmp
clc
out
jg
inc
xor
int3
jg
jp
shrb
out
shll
test
in
cmp
xchg
xor
cltd
ror
lcall
add
xor
mul
rcll
mov
pop
push
mov
lcall
mov
add
xor
dec
mov
add
add
les
aad
mov
enter
test
in
repz
sbb
fcmovb
mov
cmp
mov
sbb
or
leave
mov
inc
cmp
sbb
jge
sub
jge
lods
cmpsb
outsb
sub
push
and
jo
bound
push
mov
imull
jge
pop
fcoms
shrb
dec
ret
and
cmc
xchg
mov
les
cs
sbb
or
dec
filds
cld
add
xor
jmp
sti
or
mov
pop
push
sbb
adc
das
imulb
jbe
fmul
cmp
cld
push
mov
and
fmuls
pop
insl
mov
or
sti
in
clc
fdivl
mov
sbb
and
xchg
pop
scas
ret
pop
push
or
sbb
mov
jge
pop
xor
or
xchg
push
mov
fcompl
add
sbb
imul
insl
pop
pop
nop
inc
xchg
push
mov
and
or
aas
ret
jbe
out
inc
sub
push
fdivp
push
push
sbb
or
cmpsl
cmc
sarl
test
xor
out
rol
lods
out
sarb
inc
js
cmp
sbb
add
arpl
adc
stc
std
jmp
scas
cmp
arpl
pop
sub
dec
cmp
dec
pop
push
mov
aas
dec
popa
jo
or
push
imul
lods
inc
orl
shll
xor
imul
sbb
fucomi
leave
jmp
push
lcall
out
rcrb
sbb
loope
xchg
fdivrl
xchg
dec
xchg
cld
mov
fimuls
mov
lods
jb
aam
dec
fwait
mov
jnp
inc
gs
jl
xor
les
add
hlt
pop
and
jl
pop
shll
dec
insb
das
xchg
cld
jmp
xchg
js
xchg
outsb
dec
xor
xor
adc
es
and
notl
flds
hlt
lahf
je
add
sub
jecxz
imul
cmp
pushf
clc
jno
aam
inc
loop
mov
aaa
mov
jb
jno
icebp
in
shrb
jbe
cmpsl
inc
insb
or
and
mov
lcall
sbb
fldt
pop
pop
dec
sub
mov
inc
pop
xchg
jle
cwtl
stc
cwtl
insb
mov
in
stc
in
cld
and
mov
xchg
loopne
orl
divl
mov
jmp
data16
mov
xor
lret
jne
int
lret
aad
adc
test
adc
jno
or
and
adc
ja
pop
in
push
and
mov
and
or
or
test
outsl
repnz
xor
add
jns
add
adc
jo
sub
push
test
int3
xor
testl
add
mov
mov
lock
mov
test
adc
stos
or
jp
fists
shrb
cli
popf
inc
jl
mov
mov
decb
int
adc
jno
stc
into
cmpsb
sbb
pop
data16
push
pop
adc
insl
mov
subb
inc
inc
js
mov
sub
lret
sub
mov
adc
lods
xchg
js
inc
adc
outsb
cltd
xchg
push
aas
xchg
inc
sbb
xchg
adc
int
sub
cltd
inc
fstl
inc
or
mov
ret
mov
xchg
incl
dec
sbb
aaa
ds
push
pop
ljmp
icebp
lcall
je
xor
jae
xor
pop
adc
xlat
shll
cmpb
xchg
xchg
bound
xchg
scas
inc
inc
pop
shr
test
jp
add
push
addr16
fmuls
xor
stos
lahf
es
iret
xor
cwtl
adc
mov
pop
into
sbb
sbb
mov
in
xor
xchg
enter
shll
sbb
sub
xor
mov
invd
push
cltd
repz
inc
les
cmc
pop
jno
aad
or
jae
lds
and
adc
mov
xor
arpl
lods
dec
jne
fidivrl
shr
in
adc
arpl
mov
orb
push
mov
mov
int
aaa
add
push
cli
stos
xchg
mov
adc
mov
mov
shrl
imul
pushf
sub
ja
loopne
jnp
adc
je
adc
out
ficoms
shll
dec
cwtl
scas
jmp
sbb
dec
sbb
addr16
cmpsb
stos
adc
mov
mov
cltd
out
fidivrl
sub
aad
or
sbb
or
out
pop
add
pushf
imul
imul
and
inc
inc
stos
and
inc
rcrl
fsts
mov
inc
add
je
pop
adc
mov
pop
in
adc
fmuls
lret
data16
dec
cs
fdiv
js
mov
add
mov
das
dec
out
cmpsb
cmp
sahf
aas
cwtl
scas
es
pop
pushf
icebp
cmp
loopne
xchg
inc
popf
mov
bound
pop
cld
mov
mov
cmp
cmp
push
data16
mov
movsl
jno
out
mov
out
sub
in
inc
loopne
popf
cmp
and
adc
sub
sub
rcrl
and
adc
jo
push
fldl
mov
mov
decl
mov
push
pop
sub
ja
cwtl
mov
stos
daa
hlt
int3
popa
add
mov
mov
dec
mov
loope
jg
push
push
mov
and
fmuls
lock
xor
enter
jns
add
sarb
imulb
xor
adc
cmp
outsb
shl
lret
or
mov
aad
rclb
out
jl
mov
mov
jecxz
xor
mov
sbb
aad
into
popa
clc
scas
mov
pop
movsl
into
in
dec
xorl
in
jnp
cmp
cld
fwait
addb
mov
std
daa
dec
mov
aad
hlt
mov
and
out
inc
lds
pop
sub
les
mov
outsb
pop
loopne
pop
jg
add
push
cmp
mov
arpl
hlt
call
push
jmp
dec
hlt
push
and
or
and
adc
sbb
fdivl
push
pop
mov
or
jbe
pusha
outsb
pop
sarl
sub
sub
lds
cld
dec
mov
add
push
pop
inc
sub
insl
stc
mov
into
xchg
pushf
ljmp
outsb
fcoml
jle
loop
out
xchg
add
inc
pop
imul
sahf
jl
popf
mov
xchg
ljmp
push
jno
mov
lea
pushf
ss
or
inc
add
push
pop
sti
cmpsb
adc
out
ret
mov
pop
adc
popa
aam
lcall
or
cmpsb
leave
adc
pop
push
nop
fs
jns
push
int
outsl
lds
jmp
xor
stc
rcrl
pop
mov
mov
xchg
pop
lds
mov
jbe
jae
inc
cmp
and
insb
bound
js
sbb
sbb
sub
sub
ret
loopne
inc
cmp
movsl
gs
fbstp
and
adc
nop
int3
out
call
xlat
clc
xlat
scas
mov
pop
movsl
mov
icebp
leave
adc
push
push
and
push
inc
pop
jmp
pop
xor
pop
and
enter
push
icebp
mov
add
pop
dec
mov
test
stc
cmc
sub
dec
cmp
fcompl
aas
movsw
pop
lahf
fnsave
and
aad
sbb
and
aas
daa
cmp
mov
mov
gs
imul
mov
popa
jecxz
ss
push
sub
insb
mov
sub
push
add
pop
in
je
idiv
sbb
mov
mov
repnz
lds
cmp
es
mov
xor
dec
btr
dec
lcall
aad
stos
and
jg
jae,pt
cmc
mov
iret
mov
sbb
mov
ds
sub
movsb
imull
mov
mov
xor
shrl
push
insl
xchg
push
mov
popa
and
xchg
xchg
int3
xor
pop
popa
loope
jmp
and
xor
enter
xchg
dec
or
or
addr16
sti
add
lea
mov
push
push
push
mov
addr16
push
mov
and
lds
jle
jns
dec
lahf
mov
dec
in
sbb
sahf
xor
inc
lret
jmp
xor
orl
pop
jmp
daa
cs
dec
xchg
cltd
push
mov
mov
loopne
outsl
loop
cltd
dec
popa
ret
push
cmp
rcl
sub
scas
cmp
lcall
mov
ret
push
or
sub
jl
add
insl
icebp
sub
or
dec
shl
mov
jge
xor
cmp
dec
inc
inc
pushf
in
call
sub
mov
fs
repz
cmp
es
push
xor
addr16
cwtl
fists
sbb
mov
inc
mov
test
mov
std
add
sbb
push
test
paddd
and
sti
dec
dec
mov
rcll
or
arpl
sbb
xchg
mov
sbb
push
das
movsb
mov
lret
or
adc
arpl
cs
aad
sbb
lret
icebp
cltd
inc
in
sub
lea
out
sbb
dec
test
sarb
icebp
shrl
dec
mov
xchg
and
enter
xchg
mov
out
leave
adc
mov
cmpsl
sbb
add
mov
out
cld
jnp
push
das
movsl
adc
cmp
nop
pop
inc
sub
scas
repnz
rcl
jo
mov
pop
int3
pop
arpl
inc
push
add
outsb
jg
mov
addb
sbb
out
mov
xchg
pop
pop
loope
pop
adc
stos
cld
cltd
insb
mov
fnstsw
mov
in
in
jne
ss
pop
pop
jge
loope
cmp
icebp
pop
sbb
int3
subl
mov
cmpsl
shll
sbb
lds
xor
xchg
mov
mov
pop
es
sbb
sbb
mov
cmp
jo
ja
lcall
xchg
sub
or
add
pop
leave
aam
imulb
push
inc
sub
and
pandn
xlat
cwtl
cmp
popa
xlat
mov
xorl
cmp
movl
daa
call
es
sbb
or
cmp
loope
cli
insb
sbb
insl
push
or
sbb
pop
add
sub
sahf
jno
sbb
loop
pop
leave
add
imulb
cmp
push
shl
add
or
cmp
sbb
test
hlt
dec
stc
icebp
jmp
mov
adc
sbb
xor
out
lods
jmp
hlt
stos
jbe
enter
lds
fcmovnu
jns
mov
push
mov
js
rcl
mov
sti
lods
push
push
push
lea
xlat
push
js
mov
and
add
mov
scas
aam
mov
ret
mov
pop
pop
outsl
dec
cmpsl
out
jmp
inc
int
mov
push
push
icebp
sbb
cmpsl
xchg
mov
rol
lcall
pop
scas
adc
adc
pop
mov
jecxz
xchg
xchg
lds
lods
icebp
xorl
jae
mov
mov
pop
icebp
rclb
int
dec
cmp
mov
fs
jae
dec
mov
int
mov
mov
adc
dec
in
divl
ffree
lahf
sub
loope
movsb
sub
add
cwtl
dec
and
mov
lret
inc
sbb
mov
push
inc
sbb
inc
mov
imul
mov
imul
adc
nop
fldenv
aas
in
out
loopne
xchg
test
ret
adc
js,pt
mov
cmpsl
pusha
sbb
push
inc
iret
and
stos
rorl
push
add
sti
pop
push
sub
xor
bound
pushf
daa
push
rclb
xchg
fsubs
mov
and
stc
cli
push
out
cmc
xor
sbb
stos
sub
fstps
adc
xor
mov
lahf
dec
int3
push
js
add
add
ds
mov
push
fstp
mov
push
mov
sbb
shrl
and
cmc
clc
cmp
loope
sub
jg
jge
cli
add
mov
fcompl
mov
inc
push
cmp
out
and
xor
mov
dec
mov
cmp
adc
xor
icebp
rcrl
icebp
outsl
inc
push
rcrl
cmc
lods
ret
ret
lods
push
and
jo
loopne
lods
lds
sahf
inc
test
test
sbb
dec
lret
push
gs
mov
rolb
sbb
mul
int
mov
out
int3
arpl
pop
cs
inc
add
jbe
mov
jns
sbb
xor
and
shl
das
js
pop
rcrl
in
cmc
ja
xor
pusha
jl
popa
ret
dec
fisubs
or
xor
mov
sub
jbe
mov
fstpl
xor
push
and
aad
pusha
shrb
jl
and
std
inc
cmpl
jecxz
sti
push
fsubl
add
int3
xchg
push
les
aaa
mov
xlat
mov
xor
jl
int3
inc
sub
sti
sub
pop
mov
pop
repnz
xlat
test
sub
iret
sbb
xchg
xchg
aas
stos
and
xchg
popa
mov
leave
fdivs
mov
xchg
mov
mov
sti
xchg
out
les
testl
cmpsl
push
inc
dec
shlb
out
fiadds
es
in
inc
or
rcll
mov
sub
xor
call
jge
inc
inc
ss
cltd
les
fstpt
stos
inc
mov
fidivl
outsl
add
add
into
jno
div
outsb
lock
aas
xor
loop
push
nop
aaa
push
mov
rcrb
dec
dec
jl
jae
sbb
in
loop
sahf
mov
mov
cmpsl
xchg
cld
jle
or
push
and
push
adc
sbb
lds
cmp
lock
cmp
fistl
sbb
sub
lret
loope
cld
sub
inc
movsb
inc
inc
dec
mov
cmp
test
sar
test
stos
repz
mov
jl
xor
mov
inc
cmp
loopne
xor
mov
gs
mov
mov
or
xor
add
pop
cmp
movsl
addl
sub
or
std
enter
mov
sub
pushf
mov
in
jle
lahf
pushf
dec
cmp
call
cmp
jmp
jb
ret
test
mov
pop
fisubs
fildll
push
and
xchg
push
daa
and
push
add
jg
rol
push
xor
inc
lock
leave
ss
jnp
push
jnp
mov
outsb
pop
mov
jp
clc
test
lock
push
xchg
ds
popa
incl
mov
and
push
push
xor
push
daa
popa
mov
notb
or
fisttps
ljmp
lock
mov
rolb
mov
pop
inc
push
ljmp
inc
push
vcmpsd
pop
xorl
out
mov
jne
test
mov
jmp
orb
aas
pop
popf
into
clc
jbe
ret
int
or
ss
loop
pop
mov
add
or
insb
lcall
add
sub
in
test
fcomps
pop
andl
mov
aaa
sbb
and
jecxz
xor
in
pop
add
gs
mov
pop
push
and
mov
push
test
cmp
out
pop
clc
sbb
sbb
incb
aaa
pushw
mov
and
inc
xchg
inc
mov
and
adc
fnstenv
cwtl
adc
add
cmc
inc
mov
xor
ljmp
xchg
data16
mov
test
lahf
mov
sub
in
filds
rcrl
pop
daa
sub
mov
lcall
mov
je
add
jle
jns
add
push
sub
inc
add
inc
rcrb
cltd
arpl
les
loope
sti
jp
push
std
sbb
jp
sar
in
nop
mov
sub
negb
cmpsl
popa
aas
cli
mov
int3
clc
mov
es
jno
lcall
das
daa
std
push
mov
or
movsl
adc
xchg
adc
daa
gs
sub
cwtl
loop
jl
lods
daa
xchg
xchg
mov
cpuid
dec
push
daa
adc
cli
sub
jg
lea
out
push
int3
repnz
add
dec
pop
cmp
push
and
dec
ja
push
pushf
mov
pop
xchg
iret
pushf
xor
rclb
arpl
xchg
js
xchg
push
lea
stos
arpl
dec
xchg
dec
and
mov
nop
mov
and
pop
dec
dec
jge
xchg
insl
mov
rcll
ret
aad
insl
sbb
scas
rcrb
or
push
std
dec
jecxz
xor
sti
je
mov
adc
cmp
push
lahf
mov
test
jbe
xchg
fildl
push
imul
adc
in
filds
in
inc
test
fcoml
leave
pop
mov
jbe
mov
repz
dec
loope
and
aaa
shrl
xchg
xor
inc
xchg
popa
cmpsl
and
xchg
inc
cmpsl
jg
xorb
idivl
push
mov
xorl
addr16
and
test
pop
lret
aam
lahf
movb
sbb
add
stc
sub
push
sub
lods
xlat
cmp
add
addr16
sub
shlb
push
daa
fucomi
inc
sbb
xor
ljmp
xchg
inc
pop
popf
out
mov
inc
out
inc
addr16
icebp
xchg
push
jle
sub
std
sub
inc
es
mov
jmp
imul
fcomip
xchg
repnz
lock
push
sbb
cmp
out
into
cmp
movsb
cmpsl
jge
cmp
sti
push
fcoml
add
lret
push
mov
stc
fnstcw
popa
mov
ss
fsubs
mov
sbb
mov
jle
pop
sub
fcmovnu
adc
mov
jo
jb
out
in
inc
dec
dec
lret
out
ss
lret
mov
mov
add
adc
cmp
js
rdmsr
mov
pop
arpl
mov
ret
mov
lods
and
cmp
add
daa
mov
mov
xor
fcmovu
mov
pusha
dec
js,pn
lret
orl
les
cmp
mov
ss
inc
arpl
mov
push
clc
xor
push
xlat
dec
adc
ja
push
cmp
pop
gs
fldenvs
in
push
ss
aam
stos
stos
xchg
xchg
lahf
rolb
pop
ret
xor
mov
int3
outsl
xchg
nop
adc
leave
call
push
imull
lds
outsl
inc
out
jmp
sub
xchg
xchg
rcr
add
pop
movsl
int
aas
add
gs
out
test
and
and
mov
pop
and
cmp
add
lret
and
sbb
inc
add
or
inc
stc
ljmp
insb
pop
aas
mov
adc
cltd
inc
aad
aas
test
jbe
in
dec
aaa
int3
xor
stc
or
push
aam
daa
loope
sarb
out
pop
lret
pop
sbb
popf
lcall
or
jnp
pushf
sbb
lds
into
xchg
cmp
cmc
insl
popa
js
pop
adc
and
inc
jo
jg
push
xchg
in
incb
xor
sbb
repz
xchg
cmpsb
jecxz
stos
iret
leave
push
shrb
out
dec
mov
push
dec
dec
mov
ds
cmp
movsb
sar
mov
mov
movsl
out
xchg
or
adc
or
popa
push
or
rcrl
scas
stos
adc
nop
rol
bound
xlat
jge
push
mov
pop
mov
mov
mov
lods
rcl
outsb
fiadds
sbb
mov
ja
sti
push
xchg
adc
or
cwtl
or
inc
xchg
xchg
popa
repz
test
int
and
rcrl
movsl
es
lahf
fadd
loop
or
cli
mov
push
sbb
fbld
mull
mov
and
push
test
dec
mov
shlb
iret
push
das
cmp
sti
out
test
cmp
insl
data16
inc
clc
jmp
push
pop
aam
mov
xchg
push
call
lahf
fwait
mov
mov
xchg
stc
sbb
fadds
std
sub
ljmp
mov
enter
mov
lcall
push
mov
mov
test
cs
push
fmuls
sbb
xor
push
pop
and
addl
in
out
hlt
outsb
push
and
push
fcompl
xchg
rcr
imul
pusha
pop
dec
xchg
and
and
dec
call
xorb
out
xor
lret
movsl
in
mov
lret
pop
mov
imulb
insb
dec
out
lahf
jo
fnstenv
mov
dec
mov
mov
pop
gs
lea
pop
aad
mov
out
mov
sbb
xchg
sbb
outsl
xchg
and
cmp
dec
inc
xor
jbe
push
xor
dec
jb
fsubr
lods
or
pop
loopne
shrb
pop
out
cs
jae
arpl
sub
dec
fstpt
fistps
imul
orb
fs
add
dec
ljmp
orb
ja
or
lock
and
push
xor
jne
mov
out
shl
addr16
or
mov
push
lea
test
or
enter
test
and
jecxz
jno
push
xchg
xchg
or
out
roll
sbb
and
and
mov
inc
mov
jo
ljmp
pop
pushf
push
jle
push
push
cmp
push
insl
aam
push
ficompl
xchg
in
jae
xor
xchg
push
cmpsb
iret
rcll
pusha
das
sub
fs
push
sbb
mov
fldt
pop
imul
xchg
cwtl
cmp
in
cmp
jo
outsl
jae
sbb
into
ret
sub
les
pop
inc
fwait
push
leave
jmp
leave
pushf
mov
pop
adc
orps
mov
lods
mov
lahf
pop
outsl
xor
push
aaa
fcmove
gs
cmp
xor
out
adc
cmc
sbb
fs
push
mov
pushf
push
ljmp
repnz
addr16
mov
push
mov
sbb
mov
mov
cmp
push
push
loopne
repnz
xchg
lret
inc
dec
call
fwait
dec
adc
jo
roll
movsb
mov
cmp
pop
inc
popf
sub
or
cs
mov
inc
aad
stos
cs
pushw
lods
push
mov
and
sbb
pop
inc
xor
out
mov
cld
fsubrl
lret
nop
sbb
arpl
ficompl
or
pop
xchg
scas
iret
add
or
mov
scas
mov
inc
ret
or
loopne
jge
adc
adc
mov
sbb
out
stos
js
pushf
mov
mov
xchg
sbb
inc
popa
in
mov
dec
insb
push
ds
xchg
mov
add
test
in
sub
xchg
fsubrp
ret
add
nop
adc
xchg
out
sub
xor
jmp
roll
cmp
lods
mov
or
sbb
xor
fnstcw
push
adc
adcl
sbb
mov
jbe
popa
xchg
insl
and
mov
pop
pop
dec
sub
or
in
mov
push
popf
repnz
jo
fs
jle
in
or
mov
pop
mov
mov
push
imul
and
fstl
xchg
lock
jge
mov
or
jbe
dec
imulb
or
imul
xor
xchg
mov
xor
pusha
xor
xchg
add
std
pop
imul
mov
ja
and
cmp
push
fsubrs
aas
xchg
mov
jo
sub
and
outsb
cmp
xchg
jb
rcl
mov
jnp
push
lahf
fs
xchg
push
popl
and
daa
mov
adc
or
js
mov
mov
or
aas
or
pop
cmpsb
loopne
xchg
cltd
mov
cmp
dec
xor
mov
adc
fdivl
int3
sbb
aam
sub
jno
into
iret
insl
xlat
inc
dec
cwtl
push
inc
sub
ror
mov
mov
lcall
loop
cld
je
sbb
pop
dec
ss
jne
mov
jnp
mov
or
push
cmpsb
mov
jg
mov
inc
push
mov
push
xchg
cmp
rcll
fcmovne
nop
sbb
enter
push
jl
stos
sbb
push
lods
movl
fwait
mov
into
in
daa
mov
jbe
push
jp
mov
inc
ret
lcall
test
add
mov
fadds
outsl
mov
push
imul
repz
mov
pop
loop
dec
ret
andb
fsub
sarb
sar
ret
push
inc
mov
jnp
int3
sti
std
sub
sub
les
cmc
jne
shll
je
flds
lds
leave
push
sti
mov
dec
mov
sahf
sub
jne
outsb
std
xor
ds
sub
or
scas
jo
inc
cmpsl
and
sti
xorb
shr
insb
sarl
and
daa
shll
fsubrs
jne
inc
ljmp
mov
sahf
push
or
pop
or
cmp
int3
shll
es
push
fs
pop
negb
fbld
add
pop
rcr
nop
xchg
aam
dec
cs
push
mov
and
and
je
int
lcall
insl
pop
ljmp
in
or
fmuls
imul
mov
jmp
mov
call
add
daa
mov
movl
xor
movsb
cld
inc
or
or
nop
mov
mov
lret
cwtl
sbb
ret
dec
fs
stos
inc
dec
pusha
sub
movsb
fstpt
inc
sub
je
out
xchg
lock
mov
jb
and
mov
inc
in
lds
mov
ja
ret
push
call
pop
shl
jbe
or
pop
pop
fadds
jne
mov
xchg
push
pop
cmc
dec
push
mov
xchg
and
lea
lea
mov
xor
pop
xor
cmp
les
add
enter
jmp
mov
gs
loope
add
jle
cmpsl
sub
push
jle
clc
jg
rclb
sub
pop
adcl
mov
add
daa
push
adcl
inc
push
push
and
mov
pop
sbb
addr16
mov
aaa
cltd
arpl
popa
sub
xor
lods
enter
out
xor
adc
jne
movsl
sub
nop
insb
push
ja
cmp
int3
sti
int
mov
pop
fs
jo
dec
stos
sti
xorb
mov
lret
hlt
or
lahf
rcll
dec
sbb
add
dec
mov
inc
mov
std
addl
movsl
aaa
scas
jnp
inc
adc
cmp
push
mov
add
mov
add
mov
movsl
pop
stos
pop
arpl
arpl
scas
inc
arpl
sbb
ja
inc
popf
push
xor
jecxz
xor
repz
into
cmp
mov
xor
sub
xchg
push
leave
lcall
movsl
std
int3
sarl
adc
cltd
sbb
cmp
lret
mov
xchg
int3
or
pop
pop
pop
scas
mov
push
adc
xchg
xor
and
clc
add
cmp
inc
cs
jne
fadd
clc
add
int3
jmp
in
jl
adc
jns
dec
in
add
idivb
orb
push
into
cmp
sbb
xchg
or
mov
sub
add
adc
inc
rclb
push
inc
and
cltd
mov
lret
iret
addb
subl
push
test
push
fdivs
jg
iret
aam
fbld
arpl
cmp
hlt
out
add
adc
sub
scas
cltd
xor
sahf
in
fsubs
mov
xchg
push
mov
xchg
xor
xor
xchg
cli
mov
mov
cmp
add
or
push
xchg
loop
addr16
inc
pop
imul
rcl
mov
jp
cmp
mov
pop
sbb
enter
test
ja
das
scas
pushf
loope
pop
xchg
sbb
jge
stc
mov
mov
sub
iret
addr16
cltd
mov
cltd
add
mov
out
rcrb
adc
in
jns
stos
mov
loopne
push
sahf
mov
notl
inc
jle
mov
cmp
fdiv
jmp
and
sub
imul
cmc
clc
xor
mov
inc
in
mov
and
rcrb
jb
and
aas
mov
sub
lcall
jg
push
data16
push
mov
das
fidivrs
jle
dec
popf
psubsb
mov
sub
imull
imul
mov
int3
mov
jns
xor
psllq
sbb
push
fadd
mov
std
pop
push
fidivl
sub
ja
scas
pop
jecxz
dec
fbstp
daa
inc
ds
jp
push
xor
je
adc
push
or
pop
cmp
sahf
cmp
pop
or
adc
jo
fiaddl
imul
push
cmp
test
pop
pop
mov
outsl
add
sbb
push
aaa
shrb
xor
add
adc
shrl
cmp
mov
orb
fidivrs
mov
hlt
aam
aas
cmpsl
or
xchg
mov
repz
pop
sub
mov
repz
addr16
mov
imul
inc
push
rcrb
pushf
repz
pushf
inc
push
dec
sub
mov
xchg
call
xchg
dec
and
push
test
mov
int3
cld
sbb
adc
filds
loop
leave
fwait
jp
cld
lret
jno
popa
clc
sarb
and
add
fwait
push
cmp
mov
sbb
add
sahf
ds
cmp
cmp
popa
ficomps
ljmp
pop
adc
pop
cwtl
lds
mov
xchg
pop
arpl
pop
mov
cltd
push
mov
and
jae
xor
das
in
pop
ret
or
lret
fmull
sub
mov
xchg
icebp
in
push
leave
jg
stos
movsb
gs
mov
push
popa
sahf
dec
lahf
add
fcomps
lret
mov
or
mov
enter
push
adc
rolb
inc
add
cmp
gs
inc
jo
cmp
inc
mov
test
add
sbb
cli
icebp
test
xor
test
dec
mov
rcr
push
out
add
push
mov
inc
in
mov
int
pop
or
fwait
mov
pop
and
inc
lods
push
es
xchg
lret
pop
sbb
in
jnp
andb
xchg
clc
mov
push
pop
iret
movsl
xor
js
enter
xor
add
pop
test
xchg
iret
dec
mov
push
notb
orb
enter
js
jne
mov
rorl
lret
xor
test
pop
out
cmp
jge
roll
mov
andl
clc
enter
push
aad
sarb
decl
leave
inc
js
mulb
push
pop
paddb
frstor
mov
cmp
loopne
faddp
or
inc
pop
mov
xorl
pop
jmp
movsl
or
repz
sbb
and
iret
ja
fidivl
popf
mov
aad
jmp
pop
jbe
das
dec
add
repnz
insb
fistpll
sub
ljmp
push
test
or
inc
in
movsl
jp
out
sub
popw
jo
ds
jge
dec
mov
in
cmc
cmp
iret
pop
mov
ljmp
sahf
sub
lds
test
cltd
inc
or
and
jnp
adc
int
icebp
mov
cli
repnz
jge
inc
sub
or
call
aas
xchg
xchg
cmpsl
jo
insb
rclb
sbb
stos
push
lahf
xor
das
adc
mov
mov
xor
cmp
inc
dec
inc
mov
out
adc
les
adc
test
mov
xor
ret
dec
sub
cmp
ljmp
xchg
imul
icebp
jecxz
sub
or
pop
add
xor
cld
fs
negb
fwait
mov
neg
cli
ret
ljmp
mov
mov
xor
add
cmp
pop
xor
adc
push
sar
push
insb
inc
push
cmp
adc
inc
inc
add
xchg
cmp
rcrl
je
jb
cwtl
mov
shr
outsb
gs
das
push
mov
mov
sub
enter
jne
scas
je
lods
loope
push
cmp
cmp
xchg
cs
dec
sbb
popf
ss
jmp
test
mov
sbb
pop
scas
je
movsb
and
clc
enter
xor
push
pop
mov
cld
leave
jg
test
mov
pop
inc
imul
in
add
stos
mov
std
dec
in
and
jo
ja
push
xor
push
aad
jb
jo
jbe
jbe
pop
aaa
sub
xor
jb
orl
xchg
sub
lea
inc
mov
andb
adc
cltd
push
add
stos
mov
cmp
lods
mov
iret
jne
inc
lret
push
in
jno
and
cld
cli
cmp
js
outsl
push
add
shrl
lods
xor
or
fsubs
mov
and
int
mov
sar
popf
into
mov
movsb
cmp
cmc
push
fmul
arpl
fistl
in
movsl
in
jb
mov
sbb
in
and
hlt
aaa
pop
xchg
push
cmp
enter
fwait
or
xor
mov
jo
insb
mov
subb
imul
cmc
cmpsb
push
jecxz
je
cmc
addr16
sub
inc
frstor
jp
cmp
and
pop
repnz
sbb
inc
insl
push
sub
adc
insl
push
adc
xchg
imul
pop
mov
mov
outsb
cmp
cwtl
dec
ret
into
test
mov
xor
jae
jg
dec
sbb
imul
mov
out
imul
adc
inc
leave
imul
jmp
ret
inc
pusha
test
lahf
sbb
dec
cmp
xchg
xchg
add
push
jmp
mov
jge
jmp
push
jecxz
test
inc
scas
lds
call
jmp
cli
cwtl
out
movsl
std
cs
clc
push
pushf
bnd
push
fstp
dec
clc
aam
cmp
add
add
sbb
loope
cmc
fdivrl
jl
cltd
push
mov
inc
mov
dec
jmp
cwtl
mov
jno
inc
jg
jg
jnp
mov
sbb
icebp
repz
popa
dec
mov
cs
jp
int
popa
xchg
push
lcall
enter
das
sbb
ljmp
and
shlb
jmp
stos
add
mov
inc
div
jo
jns
js
jo
mov
fildll
push
stos
shr
sbb
jns
rorb
cmp
pop
adc
dec
cmpsl
div
cmpsl
pop
jne
sub
out
ss
lret
nop
mov
mov
adc
mov
sti
fnstsw
stos
pusha
dec
or
cmc
or
movsl
in
stc
push
insb
jg
add
icebp
fnstsw
out
xchg
adc
js
test
sub
pop
mov
mov
mov
push
jnp
jno
fidivs
cmp
jg
in
push
loop
xchg
jmp
leave
ret
and
clc
cmpsl
fcompl
lock
loop
inc
dec
insl
mov
mov
adc
inc
ljmp
imul
shrb
cwtl
cmp
out
mov
sbb
jg
push
sti
repnz
loopne
mov
or
push
je
fidivrs
mov
dec
sbb
sbb
lock
lods
stos
inc
add
icebp
xchg
dec
shll
jmp
icebp
insl
pop
inc
dec
sub
adc
sub
mov
sbb
imul
popa
pop
xchg
push
pop
inc
jbe
lds
jnp
fildll
cmp
push
outsb
cmp
jge
mov
mov
into
in
shl
or
popf
mov
inc
and
add
pop
mov
in
push
dec
dec
icebp
adc
push
and
push
fucom
ret
cmpsl
cmp
pop
pop
and
test
cs
arpl
jno
lret
mov
arpl
adc
inc
jg
mov
sbb
push
or
jns
xchg
mov
jbe
out
out
in
dec
iret
scas
outsb
push
repz
mov
mov
ja
push
or
mov
inc
xor
mov
and
add
xor
nop
mov
add
xchg
or
inc
out
jecxz
lret
inc
xchg
mov
inc
dec
inc
fstpl
and
fwait
lods
enter
hlt
xor
test
sbb
es
cltd
cs
inc
fnsave
pusha
mov
mov
dec
and
xchg
in
nop
and
xchg
lods
push
iret
mov
outsl
push
xchg
insl
ret
and
loop
push
int3
clc
mov
test
xchg
mov
out
enter
jl
sub
not
mov
scas
aas
mov
push
mov
and
mov
or
push
or
jmp
add
mov
jp
insl
mov
rcll
or
jge
movsb
ja
sbbb
mov
inc
sub
sub
sub
adc
daa
jae
ret
pop
pop
jle
lret
jae
sbb
add
mov
scas
dec
stos
or
fsts
mov
pop
jb
jmp
push
push
pop
xor
sahf
cwtl
movsb
cld
inc
mov
scas
shlb
rcll
cld
add
inc
leave
imul
js
fisubs
fcmovnu
sub
imul
insb
dec
pop
div
ret
mov
loope
xchg
and
add
pop
lahf
mov
sub
mov
lahf
adc
dec
stc
mov
mov
aad
rcll
sub
int3
adc
sub
pusha
divb
cmp
push
cmc
xchg
cmp
jge
aaa
add
ret
inc
push
mov
fisubs
mov
push
fiadds
in
and
and
shrb
inc
lods
outsb
adc
sbbl
mov
mov
cmpsb
lea
cwtl
ret
loope
jb
cmpsl
into
loop
add
jns
jb
in
lds
dec
xorb
xchg
popl
stc
and
jecxz
mov
fbld
adc
mov
xchg
add
nop
sub
outsl
lock
xor
jns
or
sub
pop
ficoms
jns
pop
je
dec
lahf
mov
fs
or
push
lret
dec
mov
pop
sbb
lea
push
mov
pop
sub
cmp
imul
xchg
fimull
outsb
test
push
mov
test
xor
sbb
bound
mov
pop
sub
add
mov
stc
shlb
inc
jp
outsl
dec
cmp
or
xlat
or
ret
xorl
int3
sbb
jo
std
scas
mov
syscall
sbb
inc
xor
jecxz
mov
and
in
sbb
jno
jnp
and
jnp
mov
pop
dec
icebp
xor
adc
sub
lock
popf
xor
mov
ret
and
sub
js
mov
jp
jns
cmp
sarl
mov
into
cwtl
sbb
aas
scas
mov
mov
xor
jae
jns
jbe
hlt
fiaddl
jle
ss
stos
bound
test
lods
ss
pushf
jg
sub
popa
mov
mov
jge
sbb
xor
fstl
loope
insb
lods
ret
sub
mov
xchg
ja
faddl
mov
test
dec
pop
xor
adc
cmp
jbe
inc
pushf
stos
xchg
dec
aas
sbb
loop
les
lret
inc
and
movl
lock
mov
shrl
push
les
adc
sbb
das
mov
negb
out
jge
push
xor
arpl
mov
cmp
jg
ficoml
aaa
mov
pop
push
insl
mov
loope
xchg
out
pop
test
xor
sub
adc
jns
filds
or
push
icebp
js
xor
jg
push
fldcw
sub
or
leave
loope
sbb
leave
les
int3
adcb
jbe
stc
out
or
in
xchg
cmp
push
rorl
dec
or
dec
adc
mov
sbb
and
mov
int
cmp
test
xlat
jmp
cwtl
enter
inc
pop
xor
aaa
mov
mov
mov
dec
fcmove
fcomps
sub
add
mov
adc
aas
pop
fstpt
loope
cmpsb
mov
test
mov
cmc
xor
aam
mov
add
add
dec
push
or
push
add
or
push
fdivr
pop
lret
push
fsubrs
add
xor
inc
clts
lret
pop
pusha
divb
mov
add
mov
jp
popf
daa
cld
subl
out
xor
pop
aad
jnp
test
push
iret
add
dec
dec
and
gs
xchg
cmc
addb
pop
adc
mov
mov
lods
lret
cltd
pop
inc
add
mov
outsb
cmp
jb
cmp
push
or
mov
notl
cmp
xchg
imul
std
pop
mov
jno
jb
ljmp
xor
ja
imull
sub
rcrb
jge
sahf
jle
jmp
arpl
lods
push
test
jno
stos
nop
fadds
sbbl
repz
push
nop
pop
jg
pushf
cmpsb
insb
push
sub
cmpsl
inc
mov
cs
test
xor
xchg
daa
jg
fsts
inc
adc
in
outsb
loopne
pusha
pop
imul
sub
imulb
push
dec
das
add
ja
adc
xor
fs
or
push
push
pop
cmp
push
push
std
pop
incb
jmp
push
jge
pop
sahf
jle
dec
ss
lods
cmc
add
jne
bound
add
push
dec
icebp
mov
fadd
xor
mov
outsb
adc
sub
xchg
push
xor
xor
pop
mov
loopne
adc
cld
push
decl
dec
dec
mov
lret
xchg
std
jg
sbb
jmp
pop
test
incb
sbb
call
xchg
int3
sbbl
jnp,pn
out
inc
dec
enter
inc
sbb
mov
sarb
pushf
mov
dec
push
pusha
cmpsl
pop
ss
dec
ja
inc
dec
movl
mov
jge
sbb
and
mov
mov
add
cmp
addr16
sub
push
test
mov
in
adc
int3
icebp
enter
out
or
pushf
lock
pop
or
cltd
dec
icebp
jecxz
arpl
imul
and
push
dec
pop
push
fcmove
sub
insl
xchg
pop
push
inc
nop
aam
mov
add
mov
les
inc
fwait
shl
and
ja
xor
jb
mov
loop
mov
push
movsl
xchg
xor
stos
or
and
pop
movl
ljmp
lret
xor
lahf
push
rcr
popf
adc
dec
out
fimull
das
inc
xchg
jecxz
in
mov
daa
pop
pop
inc
and
std
imul
lods
shlb
jecxz
ja
add
xor
mov
pop
shlb
fmuls
dec
fstl
movl
loopne
jo
inc
pushw
pusha
loop
out
fsubrl
add
xor
jne
gs
push
popl
pop
mov
iret
pushf
cli
rcl
imul
adc
cmp
je
imul
pop
xor
pop
xor
movsl
mov
mov
jbe
jg
movsl
adc
daa
adc
mov
mov
xchg
lahf
mov
test
test
movsl
sub
mov
mov
jmp
dec
es
dec
mov
test
stc
pop
adc
cmpsb
pop
orl
into
sbb
mov
rcr
out
mov
icebp
aam
rcrb
inc
push
pop
insb
rolb
stos
loop
in
add
mov
sahf
ret
push
or
cmpl
fs
mov
imul
ljmp
in
xor
sub
cmp
xchg
fimuls
outsb
xchg
hlt
push
fwait
push
std
and
out
sbb
stos
xor
pop
pushf
xchg
gs
jne
lods
shl
cwtl
repz
push
rep
icebp
fninit
fcoms
lds
push
aad
mov
sbb
addl
add
rorl
pop
into
xor
negb
jle
fnstcw
pop
xchg
and
fnsave
outsl
imul
sti
mov
mov
and
fsubrl
cli
jnp
push
sub
mov
pop
bswap
ljmp
addb
add
aaa
loopne
ficomps
call
outsl
jle
cld
mov
nop
dec
test
cmpsb
or
xlat
fsubl
sbbb
aas
stos
sub
add
lret
idivb
xor
mov
aam
push
pop
ret
xor
dec
mov
fists
pop
fistl
pop
insl
and
movsl
push
mov
dec
imul
pusha
mov
mov
cmpsl
pop
aam
inc
mov
inc
aaa
mov
inc
fwait
in
fsubrs
inc
mov
scas
icebp
mov
adc
mov
xor
and
imul
shrb
or
pop
mov
popl
test
imul
add
fstps
push
test
pushf
sbb
adc
mov
ss
fcompl
adc
xchg
test
stos
pop
shll
fwait
xchg
add
inc
sub
add
cmp
lea
xor
mov
xchg
test
testl
sub
lds
mov
fisubl
push
jp
fisttpl
nop
mov
inc
roll
add
pusha
xchg
out
iret
dec
imul
aas
pop
ficomps
insl
sub
and
mov
cld
jno
cmpsl
jnp
imul
insl
pop
sub
enter
xchg
fdivl
push
jae
pop
pop
mov
clc
add
out
pushf
xor
dec
pushf
ljmp
outsl
mov
sub
sub
mov
imulb
adc
xchg
mov
inc
popa
adc
pusha
mov
and
scas
dec
jg
adc
jge
movsb
xchg
add
ret
mov
add
jae
pop
clc
out
xchg
cmpl
or
bound
repz
aas
rcll
addr16
pop
dec
mov
cmp
xchg
and
fcompl
jecxz
in
movsl
jbe
and
mov
inc
cmp
daa
cs
dec
push
jp
fcoms
loop
mov
into
add
daa
out
lods
addr16
push
sbb
int
fisubrs
mov
arpl
jmp
inc
icebp
loop
shld
sub
das
insl
clc
in
mov
pusha
cs
sub
jle
out
adcl
mov
pusha
pushl
mov
xor
xchg
cmp
pop
inc
les
loope
scas
sub
and
adc
mov
stos
lock
scas
inc
inc
repnz
adc
xor
push
repz
outsl
mov
pusha
shlb
dec
sbb
adc
stos
jle
sbb
or
rcrl
mov
mov
imul
ret
out
repz
dec
imul
pop
and
sub
pushf
test
test
lds
cmpsb
addl
jnp
mov
lahf
stos
pusha
nop
push
fucomip
or
nop
je
sbb
mov
sar
out
inc
xchg
rclb
imul
push
scas
pop
outsl
mov
pop
rcl
out
push
xor
in
js
sub
int
xlat
loopne
cmpsl
movsl
push
out
lcall
and
inc
gs
lahf
cmp
scas
inc
cmp
sub
lods
movsl
xchg
leave
clc
bound
lahf
addr16
adc
ffree
scas
pop
mov
pop
sub
push
pop
bound
pop
add
inc
mov
arpl
movl
jbe
and
movsl
nop
push
enter
sbb
pop
int3
jmp
lahf
insb
jecxz
push
clc
adc
stc
pushf
cmpsb
and
fmuls
fcoms
fsubrl
into
ja
mov
mov
cmp
adcl
xchg
sbbb
pop
in
push
loopne
adc
das
cmp
in
ret
out
adc
lea
mov
fbstp
add
inc
adc
shlb
sbb
js
pusha
fimull
pop
jb
xor
and
dec
adcl
pop
mov
sub
int3
jge
jae
push
popf
stos
das
mov
sbb
imul
push
pop
lods
inc
imul
mov
mov
xchg
fadds
push
mov
pushf
sub
movsl
sahf
adc
push
push
cmp
arpl
pop
stos
xor
loop
lock
jae
in
pop
cwtl
jp
or
jg
jno
sti
repz
jge
dec
inc
mov
rcrl
loope
push
bound
shrb
int
xchg
leave
test
cltd
pop
jg
xor
and
sahf
mov
push
in
or
mov
mov
daa
lcall
dec
mov
xchg
push
fcompl
iret
pop
sub
jle
mov
clc
xchg
cld
add
test
sub
mov
bound
sbb
orb
jb
bsf
outsl
push
loopne
aaa
dec
std
lea
out
jecxz
mov
mov
xor
iret
dec
jge
sbbb
dec
mov
es
push
inc
or
mov
popf
sbb
inc
pop
mov
mov
movsb
dec
push
lret
and
cmpsl
inc
push
movsl
push
mov
push
and
loopne
test
push
sub
cmp
sahf
out
jnp
gs
push
add
imul
mov
and
jne
xor
cmovg
lret
enter
sahf
pushl
icebp
mov
les
xchg
inc
jnp
andl
mov
dec
aad
lret
jl
imull
ds
sub
popf
mov
sbb
pusha
out
pop
out
fdivl
ror
lahf
cmp
xchg
lret
aaa
mov
imul
scas
and
cmp
push
loope
sbb
push
adc
pop
or
not
out
lret
xchg
daa
jl
enter
hlt
jecxz
xrelease
or
scas
sub
inc
mov
test
fimuls
jg
dec
jno
loopne
pusha
ja
pop
jnp
icebp
add
movsl
insb
push
xor
incl
xlat
dec
scas
xchg
orl
sub
jle
es
insb
mov
movsl
out
andl
cwtl
scas
popf
imul
push
mov
or
popa
jnp
lret
or
std
mul
sbb
and
jnp
js
out
rclb
das
or
enter
mov
ss
pop
outsb
shll
lock
dec
mov
cmp
mov
stos
je
mov
add
je
sbb
pusha
mov
mov
das
ljmp
roll
loop
es
xor
jo
cli
xchg
inc
stos
out
push
andb
dec
les
out
ja
inc
and
fisubl
aad
leave
xchg
in
dec
fs
cwtl
xchg
push
add
jg
and
inc
out
lock
push
stos
sbb
rclb
pop
adcb
xor
mov
int3
xchg
cmp
cmp
inc
dec
xchg
das
loopne
jecxz
jmp
sub
mov
pop
ljmp
lahf
rcrb
mov
ret
out
mov
ret
or
or
or
and
fsub
sub
lods
or
sti
incl
inc
loopne
mov
sbb
mov
cld
cmp
vcvtps2dq
and
or
add
clc
adc
mov
ja
cli
leave
dec
mov
aas
mov
ret
popf
sub
sbb
jle
lcall
sub
or
cmpsb
xor
push
pop
stos
in
std
pop
movsb
cli
add
imull
mov
adc
aad
xor
fs
addr16
in
jmp
push
xchg
inc
push
into
sub
test
sbb
xor
ret
add
add
or
dec
sbb
or
fsubrs
les
inc
call
or
aad
mov
faddl
sbb
dec
test
xchg
imul
pushf
and
mov
pop
fucomp
ret
test
mov
sar
pop
mov
push
adc
mov
or
mov
jbe
inc
mov
jne
loop
jg
test
test
sub
mov
add
test
jp
insl
js
dec
push
adc
jmp
popf
mov
test
or
push
fwait
ja
pop
lret
xor
movsb
fisttps
xchg
mov
rorb
lock
cwtl
cmp
mov
jp
cmp
pusha
xlat
ret
shr
pop
sbb
pop
xchg
out
repz
pop
xchg
sbb
jg
repnz
push
xor
lods
mov
push
in
jb
rcrb
imul
mov
out
cmpsb
push
insb
push
adc
jno
popf
push
jmp
jg
adc
cmp
xchg
in
insl
out
stos
shrb
adc
fstpt
jns
pop
sub
dec
arpl
lcall
fwait
aaa
cld
mov
pushl
shl
push
mov
xor
pop
fldt
in
in
or
mov
fnstenv
xor
loope
shlb
add
push
sbb
push
shrb
lods
cmpsb
jb
inc
xlat
aad
and
enter
push
mov
in
iret
or
push
stos
pop
popf
adc
xor
pop
add
int3
in
pop
mov
adc
adc
jmp
push
pop
mov
sub
xor
repz
out
jb
push
repnz
jle
fwait
sub
push
jb
loop
and
mov
jnp
sahf
cmp
pusha
out
test
or
push
mov
jne
sbb
loope
lret
mov
enter
inc
je
jo
subl
lahf
add
xchg
cld
xchg
aad
mov
adc
xchg
jl
cmc
sub
sbb
sub
fbstp
sub
dec
mov
or
out
push
xor
xchg
pop
cmp
dec
dec
xchg
faddl
in
pusha
adc
sub
mov
aas
xor
mov
popf
aaa
mov
inc
jb
xchg
lods
mov
and
stos
mov
imul
mov
mov
mov
fsubs
or
int3
rolb
js
loopne
jle
bound
and
adc
push
sti
mov
repnz
xor
dec
inc
cmc
lahf
or
fildll
mov
test
mov
xchg
stos
das
in
fstps
dec
and
xor
xor
outsb
push
cmp
sub
idivl
lahf
sahf
add
jecxz
repz
add
xor
lcall
mov
sbb
fadd
xchg
fucomip
pop
sti
mov
outsl
les
test
pusha
ljmp
mov
mov
jge
mov
adc
data16
mov
sub
jle
mov
movsl
fcom
xchg
ret
and
fcmovb
nop
jmp
jno
and
movsb
lea
in
jnp
int
int
leave
add
and
sti
jo
pop
dec
inc
adc
push
jno
jmp
pusha
xchg
add
adc
mov
roll
xor
inc
jmp
pop
fisttpll
jo
mov
add
mov
pop
test
cmp
lret
fucomip
jmp
inc
add
subl
std
mov
inc
add
fbld
mov
jno
fimuls
sbb
cmp
xchg
or
jecxz
stos
ucomiss
mov
stos
in
outsl
repz
roll
in
pusha
xor
adc
shr
sub
mov
int3
mov
int3
ret
push
pop
mov
aas
mov
idivl
sub
cmpsl
mov
sti
pop
imul
scas
mov
inc
xchg
mov
or
cmpb
int
sub
aas
roll
mov
jecxz,pn
xchg
test
inc
cmp
imul
call
dec
es
sti
ljmp
sub
sub
and
clc
mov
ja
mov
inc
and
cmp
aad
aam
test
pop
cmp
push
cmc
in
loopne
jae
ffree
inc
movsb
int3
pop
add
xor
or
jnp
xlat
or
push
jp
neg
popf
fstpl
aas
lods
jo
xchg
push
loope
inc
insl
pusha
gs
inc
add
icebp
cmp
adc
lcall
xchg
or
in
cld
aaa
pop
cmpsb
push
addb
push
dec
hlt
mov
lds
mov
test
pop
cmp
scas
in
in
mov
add
and
dec
or
add
repz
mov
inc
in
fs
mov
jmp
cmpsl
cwtl
sarl
arpl
push
lahf
iret
fidivs
mov
orb
add
in
rcrb
lods
gs
cmp
mov
jmp
push
mov
cmp
pop
sbb
not
jo
pop
xor
and
stos
arpl
out
mov
add
lods
jp
shll
sbbb
outsl
cmp
dec
pop
cmp
dec
popf
xchg
mov
jbe
test
repz
push
sub
push
dec
popf
push
lret
rolb
dec
add
push
pop
shr
jo
dec
xchg
addr16
pushf
adc
movsl
xor
mov
xor
lock
sti
shl
cmpsl
and
xor
sub
ret
mov
mov
lods
mov
sbb
or
subb
enter
out
leave
pop
in
sbb
inc
xor
and
sahf
adc
popa
insb
push
push
mov
push
mov
pop
aad
fistps
jb
or
pop
pop
test
inc
mov
repz
adc
out
clc
out
vcmppd
fildl
cld
xchg
mov
jne
and
xchg
daa
xchg
add
dec
insb
push
sub
jae
xor
adc
and
cmc
mov
hlt
inc
in
xor
mov
setns
cld
leave
std
por
or
xchg
dec
pop
jl
fcoml
xor
push
and
in
dec
mov
mov
shrb
xchg
clc
jo
jecxz
cld
jg
and
subb
jo
or
movsl
mov
in
roll
ljmp
mov
mov
scas
push
cwtl
pop
pop
cmp
sub
insl
jno
inc
mov
xor
cmc
enter
lea
cmpsb
xlat
xchg
mov
push
or
push
cs
xchg
mov
cmp
add
or
jg
xchg
ja
inc
aas
jmp
pop
fdivrs
fisubs
inc
cmpsl
int3
dec
push
aam
sahf
mov
sar
adc
cmp
or
push
loope
pop
shrl
adc
and
hlt
js
daa
jo
mov
imul
lcall
clc
aas
and
or
out
mov
xor
jle
or
imul
adc
pushf
ljmp
adc
daa
jg
cmp
popf
sahf
idiv
imul
dec
pop
jge
cmpsl
cmp
test
movsl
jl
jle
inc
popl
mov
cmpsb
jmp
push
adcb
xor
movsb
cmp
lret
movsb
ja
mov
jmp
fdivrl
fwait
jmp
popa
ret
fwait
lcall
jg
push
test
rcll
ret
jae
push
out
lds
sbbb
rorb
mov
adc
inc
and
dec
cmpsl
clc
xchg
xchg
stc
mov
ljmp
fwait
daa
inc
and
test
into
movsb
or
sti
aam
loopne
cmovg
pop
xor
scas
sub
xchg
xchg
pop
add
mov
cmp
movsl
jnp
outsb
leave
arpl
and
push
pop
pop
or
aad
cwtl
ja
pusha
cmp
sysexit
daa
xor
mov
mov
aam
cmc
mov
sarl
and
in
test
xchg
in
inc
aad
test
pop
out
cli
mov
push
cmpsl
imul
pop
mov
mov
stos
out
sbb
jae
rcrb
nop
mov
cli
clc
mov
subb
fcoms
test
mov
pop
in
lock
sbb
inc
es
shl
xlat
sbb
icebp
cli
cmp
mov
jno
aas
addr16
mov
mov
or
test
test
ja
ret
pop
roll
repz
mov
call
sbb
or
xchg
inc
add
lods
xchg
daa
shrl
fstp
insl
or
sub
test
negl
mov
int3
pop
sub
imul
sbb
icebp
adc
pop
into
pop
pop
std
std
lods
and
add
gs
xor
or
or
mov
mov
subl
cmc
int3
pop
pusha
adcb
xlat
pushf
cmp
ljmp
cmp
mov
jge
or
push
cmp
jg
cld
jmp
fidivrl
imul
mov
add
push
inc
jl
lea
scas
fistpl
add
loope
stos
ja,pn
out
stos
jmp
or
in
mov
adc
jno
je
ja
stos
pop
sbb
sahf
cmp
bswap
out
pushf
push
popf
mov
lea
js
outsl
sub
inc
loope
das
mov
mov
cmpsb
push
mov
push
adc
jbe
cmp
shl
loop
jns
dec
pop
addr16
ss
ret
leave
stos
pushf
mov
add
add
nop
repnz
jae
xchg
subb
adc
notb
cmp
xchg
icebp
mov
mov
xor
mov
mov
inc
cmpsb
jl
pop
jmp
sbb
aaa
add
xchg
jp
movsl
sbb
loopne
pop
ret
push
pop
dec
je
stc
sub
shlb
xchg
mov
int
scas
addb
daa
jl
dec
or
xor
mov
cmpsl
roll
movsl
ret
cli
out
xlat
std
lock
out
cmc
int
xor
fisttpll
xor
mov
xchg
testb
fmull
stc
les
lret
cmpsb
ljmp
andb
js
js
jo
mov
icebp
jne
call
and
sti
sub
xor
shl
push
nop
add
mov
pop
das
jo
mov
pop
ret
mov
or
xlat
repnz
and
mov
jl
mov
out
subl
stos
add
enter
jp
inc
lock
dec
jns
jl
adc
pop
inc
mov
icebp
add
jns
sub
mov
xchg
sub
mov
xchg
andl
sbb
jne
mov
push
pop
inc
jg
ss
add
mov
insb
cmp
imul
mov
or
stos
vorps
push
stos
pop
aad
divl
and
es
je
xlat
pop
lods
xor
adc
dec
cwtl
loop
fdivrl
or
leave
hlt
aad
adc
add
fisttpl
ds
mov
cmc
push
and
sub
sbb
xchg
push
mull
mov
add
inc
jne
in
repnz
inc
xchg
clc
cmpxchg
lret
sub
ret
cmc
mov
lock
aad
inc
push
mov
push
ret
push
leave
dec
sti
pop
nop
call
jns
scas
iret
in
and
sahf
stos
xor
xor
andb
out
or
adcb
jno
test
lahf
std
adc
and
out
pop
daa
mov
lods
mov
mov
mov
dec
bound
adc
loop
xor
mov
mov
sbb
pop
shlb
adc
ja
inc
xchg
lcall
jmp
pop
outsb
iret
mov
adc
mov
add
sbb
lret
push
push
xor
inc
sbb
movb
pushf
push
cmp
incl
popa
loop
leave
cld
incl
fcom
xchg
mov
xchg
sti
add
out
or
mov
push
sub
sub
sbb
inc
adc
arpl
mov
jne
aaa
jp
xor
xlat
dec
call
push
pop
pusha
subl
sarb
rcr
pusha
push
sub
sbb
clc
cmpsl
fmull
lea
aas
faddl
xchg
or
or
cwtl
xchg
jbe
scas
fimull
lock
daa
push
push
dec
mov
mov
int3
lea
mov
sub
dec
aaa
lock
mov
pop
pop
jns
push
into
sbb
ret
sub
mov
std
add
iret
jo
jle
in
mov
mov
imul
jnp
push
mov
repz
pop
jp
shr
mov
movsb
popa
pop
xchg
mov
insb
into
adc
push
int
lea
lock
or
fs
dec
sub
cmpsb
mov
jmp
mov
ficoml
inc
es
jle
mov
out
loope
jg
sub
loop
add
test
shll
jle
mov
jl
jmp
pop
dec
fistps
push
rorl
andb
sbbb
enter
push
push
push
addr16
out
xorb
mov
push
add
push
mov
lret
xchg
push
dec
inc
mov
push
lds
or
leave
out
cmp
jns
jne
or
int3
push
pushf
push
int3
sbb
shl
push
sub
lods
adc
inc
shlb
jnp
test
outsb
mov
cwtl
icebp
inc
jle
xchg
xchg
push
ds
add
sub
inc
lock
xchg
push
mov
sub
aam
fsubrs
or
push
ficoms
lahf
pop
lea
or
out
cmp
jmp
test
push
les
jb
orl
push
insl
mov
std
frstor
stos
pop
imul
stos
inc
or
mov
aad
dec
jmp
sti
jnp
inc
cmp
jbe
in
sarl
jmp
push
test
mov
mov
pop
mov
fistl
sub
js
stc
or
or
and
mov
loope
jnp
cmpsb
adc
ja
dec
idivl
sub
outsb
dec
mov
and
js
push
fsubrl
lea
mov
add
dec
inc
cmpsl
mov
outsb
inc
call
jae
sub
icebp
and
ds
orb
outsl
es
push
pop
xchg
xchg
jecxz
stos
push
in
xchg
stos
xchg
movsb
int
xchg
les
stc
push
das
dec
mov
dec
iret
mov
and
push
stc
mov
sbb
fisttpl
sarl
out
inc
xor
aas
cmp
xchg
pop
sub
mov
cmp
xor
or
sbb
jecxz
and
out
popa
mov
es
xchg
jbe
add
lods
adc
popa
push
ja
push
xchg
sub
popa
xchg
and
es
push
sub
push
cs
sbb
fwait
loopne
test
ds
mov
mov
sub
je
jo
and
xor
fwait
movsl
call
inc
lahf
or
lret
gs
outsb
xor
xchg
mov
jbe
fwait
repnz
pop
push
outsl
out
xchg
push
and
aad
jne
int3
pushf
pop
mov
pop
roll
enter
dec
or
mov
in
jl
sbb
icebp
xor
data16
jae
dec
adc
mov
dec
int
sbb
xchg
cmc
lea
imul
dec
mov
xchg
out
fiadds
arpl
push
in
dec
int
into
adc
add
std
arpl
into
pop
mov
inc
inc
idivb
pop
xchg
fwait
push
xchg
lds
mov
sub
repz
call
pushf
pop
pop
loope
pusha
lds
adc
mov
inc
mov
push
dec
int
mov
mov
pop
cli
cli
in
mov
or
scas
fs
sbb
inc
rorb
add
lods
xchg
scas
mov
lods
push
icebp
test
sub
pop
nop
outsl
add
aam
mov
lret
imul
mov
sub
sbb
mov
nopl
jp
cmp
push
mov
and
ss
in
scas
test
cmpl
scas
jl
insb
jmp
les
cmp
mov
rcl
fcompl
push
push
fs
xor
jb
loope
int
sub
ret
ffreep
jo
xlat
lahf
xor
cmpsl
adc
popf
cs
cmp
sbb
xchg
stos
mov
in
and
xchg
push
test
jmp
jb
sti
inc
or
push
mov
mov
inc
ljmp
add
mov
pop
scas
leave
push
fsts
mov
jns
clc
mov
mov
cmc
dec
pop
mov
repz
repz
push
hlt
push
mov
lds
adc
pop
ja
sub
hlt
xor
adc
loop
dec
pop
pop
fdivl
xor
aad
es
inc
data16
sbb
push
stos
imul
add
sbb
lock
add
xlat
or
mov
es
aas
mov
push
xchg
lods
add
dec
inc
inc
arpl
sbb
dec
sub
add
cmc
cwtl
packssdw
test
fwait
fwait
dec
ret
mov
sahf
push
inc
jo
and
test
clc
xlat
inc
mov
sub
mov
sbb
sub
cmc
mov
lret
sbb
jb
adc
lahf
mov
push
lea
inc
mov
mov
cmpsl
mov
outsl
imul
mov
jmp
jg
sahf
test
sahf
nop
sbb
sub
repz
jae
testb
fcoms
fmul
lods
lcall
inc
sbb
mov
jge
leave
stos
sub
push
inc
into
test
push
dec
aaa
cmpb
enter
push
adc
sbb
lcall
jg
xlat
sub
rol
sbb
xchg
sbbb
repnz
sbb
shlb
dec
xor
call
into
in
mov
aad
ljmp
filds
insb
sub
and
mov
mov
jmp
mov
jnp
stos
movsb
or
je
sbb
je
sar
scas
subb
loopne
xchg
inc
sbb
inc
test
in
je
das
out
in
cmpsb
out
in
lods
push
jno
pop
repz
add
sub
and
out
push
jns
xchg
stc
pop
add
and
or
orl
or
cltd
sub
orb
sbb
mov
lods
mov
jno
push
in
push
repz
push
daa
fnstcw
jo
pop
xchg
pushf
fisubrs
lods
int
push
fistps
ljmp
dec
jo
and
dec
lea
mov
arpl
cmpb
and
xchg
insb
ja
jmp
lods
push
lds
cltd
dec
mov
or
aas
or
int3
leave
sbb
jb
xchg
mov
out
push
stos
sub
mov
ljmp
js
pop
int3
scas
pop
and
sbb
jb
and
dec
mov
cmp
xchg
push
mov
mov
dec
jnp
es
sbbl
rcrl
repz
fstps
in
pop
xor
adc
scas
pop
or
push
xchg
outsb
popw
xchg
xchg
xchg
in
icebp
cmc
adc
xor
and
cmp
mov
div
pop
inc
repz
out
out
inc
pusha
jbe
fistl
pop
mov
addl
xor
mov
negb
mov
mov
inc
mov
jnp
xchg
push
mov
mov
jp
push
pop
dec
ds
cmc
sbb
pop
leave
cmpl
xchg
loop
mov
data16
or
dec
xchg
and
pop
push
adc
sbb
jnp
push
sbb
stc
mov
or
sub
pop
pop
loope
dec
jp
test
stos
ds
out
dec
ljmp
xor
setnp
xor
xor
inc
test
xchg
jmp
mov
test
out
test
sub
pop
mov
frstor
rorl
lahf
mov
shrb
inc
clc
lar
or
lret
fprem1
je
das
fucom
fstpl
jae
shlb
add
jno
add
lods
xchg
fs
outsl
insb
or
sub
jg
fadds
mov
jmp
nop
inc
mov
scas
ljmp
xor
mov
sbb
dec
sbb
push
call
insl
xchg
sarb
xor
or
fldt
dec
mov
push
ja
adc
pop
push
out
ss
cmpsl
into
sub
test
and
repz
inc
in
imull
mov
add
pop
mov
je
and
enter
xchg
inc
or
add
mov
jle
jbe
cli
cmp
pop
lahf
out
clc
sbb
int
pop
das
mov
pop
add
jmp
scas
jno
fisttpll
testb
adc
cmp
add
pop
imull
rcrl
cli
or
xchg
dec
enter
aad
or
repnz
test
jge
dec
mov
cmp
push
sub
push
add
push
leave
outsb
cmpb
aad
adc
xchg
mov
addr16
xchg
je
shr
xor
orl
cli
and
push
sub
outsb
sbb
jnp
clc
xor
cmp
jle
shll
push
loope
dec
js
lret
sub
adc
jae
test
test
xchg
lret
mov
sub
aaa
cmpb
pop
push
cld
daa
scas
cmpsl
sbb
add
in
mov
xchg
icebp
cmc
je
notl
pop
adc
in
sub
ja
adc
xchg
ds
jecxz
insb
clc
dec
incb
xchg
pop
loopne
out
cmp
clc
jbe
cmp
cmp
cmp
push
in
push
fcmovbe
and
inc
int
shlb
xchg
fildll
sahf
clc
push
ror
mov
movsb
es
insb
and
notb
mov
xlat
les
and
ret
sub
sbb
cld
xor
pop
fiadds
cmp
pop
mov
insl
data16
movsb
jl
aaa
fadds
test
bound
sar
inc
inc
loope
xor
repnz
js
or
mov
sbb
sbb
lods
lahf
xchg
inc
push
stc
jp
add
lahf
sbb
jne
fstpl
mov
and
ret
jbe
add
ret
pop
aaa
xor
jecxz
mov
movsl
add
movb
dec
cltd
fimull
mov
rcrb
nop
mov
push
dec
stos
or
and
sub
dec
lods
cwtl
aas
or
mov
sub
imul
cmc
lods
mov
nop
aas
adc
mov
push
xchg
mov
in
hlt
mov
test
mov
jmp
sahf
fsubrl
lock
jae
xchg
jo
clc
pop
mul
cmp
ljmp
int
mov
adc
test
shll
inc
popf
andb
leave
xor
mov
test
jb
xorb
add
je
adcl
mov
pop
repz
pop
jecxz
sbb
cmp
mov
cmp
shrb
push
imul
loop
cmpsb
dec
leave
mov
daa
in
int
out
fstpl
call
divb
cli
pop
bound
jno
cmp
pop
sub
add
jecxz
mov
cmpsl
subl
call
mov
movsl
mov
xor
push
or
xor
jp
xor
fs
pushf
dec
push
sbb
sbb
testl
ret
and
daa
mov
negb
loope
sbb
es
xchg
adc
mov
ret
dec
sahf
jbe
repz
push
je
test
xorb
fisttpl
fwait
cmp
sarb
int3
scas
dec
dec
add
notb
mov
inc
push
icebp
and
xchg
mov
sbb
pop
insl
gs
mov
ret
or
ds
push
xlat
dec
adc
notb
outsb
jb
inc
inc
idiv
popf
int
mov
loopne
sahf
push
add
xor
inc
adc
xchg
out
dec
in
jns
das
mov
fsubrs
xchg
mov
cmpsl
icebp
pop
loop
or
scas
leave
mov
out
jbe
push
cmp
icebp
mov
iret
int
jns
sahf
dec
push
mov
mov
repnz
es
jae
add
inc
push
ja
fstl
mov
mov
jae
mov
sar
xchg
mov
mov
and
mov
jae
sub
cli
in
xchg
xchg
add
mov
fsubr
mov
xchg
insl
outsl
jge
sahf
dec
push
mov
push
or
jae
roll
jle
ficoms
aam
repnz
dec
mov
jns
shlb
dec
add
jecxz
xchg
imul
xchg
ljmp
push
out
pop
into
stos
dec
jne
cld
pop
and
repnz
push
addb
mov
and
inc
lds
stos
cmpsl
push
adc
xchg
pop
push
fs
mov
jge
xchg
xor
rolb
fildll
out
jns
and
testl
cmpsb
ret
sbb
cmp
jle
and
cli
inc
push
sbb
arpl
insl
pop
add
enter
pop
ficoms
inc
call
dec
mov
test
inc
das
lods
mov
mov
mov
movsb
xchg
mov
jg
cmp
sbb
mov
or
out
scas
loop
sub
icebp
and
push
lea
or
xchg
and
push
mov
and
shl
pop
and
jmp
insl
mov
arpl
fmull
mov
aad
mov
sub
add
mov
adc
imul
outsl
jmp
in
es
out
mov
push
pop
pusha
int
jne
xchg
ret
sti
jne
mov
pop
push
int3
daa
lahf
subb
pushf
sahf
pop
pop
dec
cmp
test
lcall
fsubp
es
jg
jp
shrb
sbb
pop
dec
xlat
call
repnz
jne
sbb
adc
popa
sub
movsb
mov
pushf
stos
dec
xor
movsb
xor
inc
fnsetpm(287
jle
xchg
std
ret
arpl
pop
xchg
mov
jmp
add
repz
inc
push
mov
sahf
out
out
cmpsl
out
jb
rol
data16
sub
out
shl
adc
orl
pop
cmp
loope
pop
and
out
sub
hlt
push
imul
aad
iret
repnz
fisttpll
fstps
xorl
mov
dec
ds
imul
pop
clc
shll
sbb
roll
or
inc
dec
pop
xchg
stos
pop
pop
inc
xor
mov
test
xchg
enter
addr16
in
sub
push
sbb
or
push
aas
repz
cmpsb
cmp
call
jecxz
or
repnz
jmp
jns
lret
mov
daa
xchg
je
fisttpl
ret
fs
repz
sahf
mov
sub
andb
daa
scas
push
xor
jo
jo
mov
frstor
sbbl
jmp
in
push
mov
jne
shll
lods
bound
fiaddl
and
push
mov
cli
mov
or
popf
mov
outsb
push
xor
cmp
cmp
dec
and
sbb
jne
ret
sub
rcrb
jnp
mov
cmp
dec
sub
xchg
pop
inc
lahf
adc
inc
add
pop
xchg
in
inc
xor
sub
adc
or
jmp
cmp
sub
outsl
daa
or
sbb
push
js
pop
aad
popa
das
mov
inc
lock
pop
or
jns
dec
ljmp
outsb
pop
pop
pop
inc
inc
ret
jmp
pop
inc
and
xor
scas
pop
imul
iret
pushf
in
addr16
mov
sbb
sub
ljmp
pop
jae
cmpsb
ret
stos
mov
push
add
jbe
lret
mov
fildll
lods
lcall
dec
push
in
daa
ret
stos
jp
xor
or
inc
or
movsb
add
xchg
mov
mov
dec
rcl
sub
lret
xchg
movsl
pop
hlt
test
out
out
inc
add
negb
fmull
fnsave
das
mov
call
pop
dec
test
jmp
xor
das
inc
pop
or
jmp
mov
xlat
bound
daa
repz
in
imul
jg
or
mov
imul
adc
mov
and
clc
cmp
jnp
pop
in
adc
scas
enter
cld
pop
into
fwait
hlt
leave
sahf
push
xchg
sub
idivb
mov
push
cmp
ds
js
jmp
insl
cmpl
les
in
decl
scas
push
push
clc
pop
mov
lock
jbe
test
fcoms
mov
mov
mov
inc
sbbb
sahf
jge
push
jne
xchg
loop
or
xchg
fimuls
xchg
sbb
push
imul
mov
lods
outsb
push
push
lahf
fs
ja
test
rcll
imul
pop
and
clc
addr16
aaa
cmp
or
fnstcw
pusha
xor
inc
mov
cmp
call
inc
pop
sub
lea
repnz
testb
cwtl
loopne
cmp
mov
sarl
or
pop
cwtl
jnp
insb
xchg
dec
subb
or
sub
jno
cs
fldl
ret
sbb
fucomi
dec
dec
xor
jg
xor
mov
loop
xor
adc
jo
sbb
pop
jb
xchg
xchg
lea
xor
out
push
cmp
mov
clc
mov
inc
fwait
push
adcb
rcl
testl
enter
pop
lcall
pop
lcall
pop
aas
add
and
std
sbb
int
jle
dec
mov
aaa
mov
mov
push
stos
pop
addr16
xchg
addr16
pop
xchg
lds
lret
addb
mov
stos
pop
pusha
aas
cli
pop
je
jb
jp
sub
cltd
pusha
fcom
add
insl
movsl
roll
jg
mov
outsb
stos
sub
shrb
push
pop
mov
push
push
rcll
fnstenv
inc
pop
adc
jmp
cmp
sub
imul
adc
out
orb
push
es
inc
cmc
mull
loope
mov
mov
stos
flds
jecxz
loopne
add
jp
int
pop
pop
test
jb
out
daa
int
mov
add
cmp
inc
test
ja
xchg
cmp
nop
movb
xlat
or
imul
sbb
lahf
inc
sti
cmp
jg
mov
clc
cwtl
pushf
mov
xchg
inc
push
popf
dec
insl
cwtl
nop
addr16
push
ficompl
and
xor
int
add
cmpsb
or
arpl
lds
xchg
arpl
xor
xchg
loop
sbb
adc
lods
call
dec
mov
test
xor
mov
jg
or
xchg
mov
cmp
in
push
fmulp
lret
sub
lea
loope
jl
lahf
lcall
rcrl
orl
cmpsb
cmp
mov
pop
mov
in
inc
mov
in
pushf
out
dec
call
mov
pop
sbb
pop
cmp
mov
mov
add
xchg
test
inc
fstl
sub
lock
sbb
and
stos
fstpl
hlt
xor
sbb
push
loope
push
sub
add
push
imul
jecxz
mov
add
push
loope
pop
cmp
mov
mov
xchg
mov
loopne
stc
cmp
sub
ss
sbb
scas
in
mov
iret
add
mov
sbb
add
loope
cmp
loopne
fnstsw
test
bound
jecxz
fcoml
push
je
pop
testb
mov
xchg
loop
cmc
pushf
mov
aad
dec
push
cmp
sbb
xchg
sbb
jmp
push
andl
lods
xchg
jbe
imul
mov
or
cmp
loope
pop
xchg
sbb
cmp
aaa
add
andl
sbb
icebp
loop
or
sub
xor
pop
call
mov
xchg
fwait
out
xor
xchg
fadd
add
shl
mov
bound
adc
scas
sub
mov
xchg
mov
mov
bound
push
and
push
push
jecxz
dec
in
xor
ss
cmp
test
jle
loop
or
rol
pushf
sub
pop
cmpsl
push
xchg
cwtl
cmpsw
sahf
jno
xchg
mov
xchg
hlt
aaa
cmp
inc
imul
sarl
inc
mov
add
imul
xchg
adc
mov
test
mov
jnp
daa
xor
and
icebp
lcall
imul
sub
or
ljmp
mov
or
adc
xor
xchg
shrl
sahf
cmpl
mov
mov
sbb
ret
fisttpl
out
jo
add
cmp
out
idivb
arpl
outsb
dec
nop
iret
leave
dec
inc
ret
mov
mov
shl
loope
push
into
dec
mov
rcrb
mov
inc
test
in
jp
sahf
lock
xlat
cwtl
clc
ds
loopne
sahf
push
outsl
push
pop
push
or
jmp
and
push
ljmp
sbb
test
xchg
dec
sahf
dec
ror
sub
out
notb
inc
movsb
cmovs
out
pushf
scas
repnz
hlt
inc
fwait
imul
pop
add
xor
sub
adc
cmpsl
add
dec
cmp
and
repz
mov
rclb
push
mov
sbb
filds
cld
leave
cmp
push
mov
and
pop
dec
imul
and
adc
jbe
nop
sub
sub
stos
jp
inc
and
divl
and
in
push
sub
push
mov
jp
cmpsl
xor
lock
iret
repz
push
jne
andl
jge
loope
dec
les
stc
rolb
aam
adc
mov
andl
mov
pop
movsl
adcb
mov
push
mov
ss
rcrb
mov
push
push
inc
mov
mov
inc
jecxz,pn
ds
in
mull
xchg
test
xor
adc
xor
adc
aad
fdivrs
sahf
clc
out
in
fists
into
push
insb
fisubs
mov
test
in
lock
pop
in
gs
or
orb
cmp
xchg
jge
add
inc
xorb
jns
stos
pop
ss
roll
xchg
repz
test
inc
jge
out
fwait
pop
rolb
mov
das
mov
clc
xchg
imul
mov
xchg
lret
cli
mov
in
sub
xchg
addr16
sub
inc
cltd
nop
cmp
out
fidivrs
jno
mov
mov
mov
lret
xor
push
jno
sahf
rol
int
xchg
cmp
or
clc
cmpl
mov
add
lods
fs
mov
jae
inc
jp
xchg
push
fiaddl
in
mov
fnstsw
into
pop
sub
insb
jmp
sbb
lds
jle
rcrb
hlt
fdivl
sbb
sbb
push
leave
adc
mov
sub
lret
mov
js
in
aas
pushl
arpl
inc
or
add
jno
push
adc
mov
xorb
fs
je
gs
adc
cld
xchg
orl
outsb
in
cmp
sub
out
or
adc
jmp
test
lcall
sbb
fcoms
pop
in
pushfw
ljmp
mov
mov
scas
fs
sahf
in
push
pop
jmp
push
pop
or
sbb
mov
or
mov
pop
out
xchg
or
std
xor
add
pop
dec
repnz
jne
add
mov
jge
and
das
mov
adc
pop
stc
sti
xchg
inc
shl
dec
int3
or
loop
ret
lods
mov
mov
mov
mov
jns
jle
in
cmc
in
jmp
loop
in
inc
hlt
add
test
imul
xor
std
sub
negl
push
ret
imul
dec
popf
out
imul
xchg
repz
mov
jge
jmp
adc
and
add
jg
adc
sbb
out
mov
push
fs
les
ja
lock
hlt
hlt
adc
add
sbb
adc
and
arpl
or
xchg
cmp
shrl
sbb
xor
lods
add
arpl
mov
aas
out
bound
outsb
notb
stos
mov
rcll
lods
out
push
push
pop
inc
jns
loopne,pn
dec
stos
loopne
add
ret
scas
xchg
stos
dec
jge
rolb
or
leave
push
ss
pop
dec
inc
arpl
lods
push
mov
sbbb
rol
lcall
sbb
mov
ret
xlat
test
scas
in
arpl
push
lock
jg
je
in
dec
sbb
shlb
xor
dec
xor
xor
push
in
jmp
nop
xor
bound
xorl
leave
jb
sub
cmc
add
aas
and
ret
lds
stos
add
hlt
imul
adc
dec
movsl
jnp
adc
dec
decb
and
push
and
dec
jno
mov
clc
jle
aas
test
jl
xchg
cltd
sbb
shr
repnz
mov
aaa
cmp
inc
xlat
xor
in
cmp
pop
jmp
stos
stos
test
jne
es
jge
dec
jle
mov
comiss
pushf
cltd
shll
sbb
adc
inc
mov
in
push
dec
dec
xor
adc
ret
int
mov
popf
cltd
dec
xlat
out
cmpsl
repz
sbb
test
jnp
or
icebp
sbb
xor
jmp
test
lahf
push
mov
dec
in
sbb
jecxz
pushl
mov
bound
rol
out
xor
mov
and
lret
adc
sub
rcrb
dec
je
xchg
pop
sub
jp
pop
xchg
pop
aad
jg
mov
mov
stos
into
lahf
in
jle
rclb
int
and
pop
rorb
mov
jb
jne
jge
loop,pn
push
cmpps
jae
cmp
lock
xor
imul
pop
cmc
mov
add
mov
mov
jle
int3
imul
nop
stos
mov
xchg
adcb
add
testl
inc
xchg
loop
add
leave
aam
leave
push
scas
sarl
in
pop
xchg
out
adc
es
mov
cwtl
popa
adc
adcl
push
push
jp
jns
into
jae
fildl
jbe
xchg
cmpsl
inc
stos
sub
fildll
data16
daa
aaa
jo
mov
or
inc
lock
mov
stos
inc
paddusb
or
push
out
or
stos
rolb
cmp
jbe
into
imul
inc
into
mov
bts
cli
in
adc
mov
cmp
test
daa
jle
ljmp
pusha
pop
test
and
in
mov
int
shlb
jb
adc
mov
jmp
push
jae
sbb
sub
cmp
cmp
bnd
stc
mov
sub
shrb
pop
clc
aad
jno
rcrb
inc
lock
cld
mov
jmp
inc
rorl
push
aas
mov
add
mov
ss
inc
lahf
and
inc
xor
out
xor
adc
add
fldl2e
dec
or
scas
ss
mov
bound
int
fisttpl
js
cmp
inc
popf
mov
xor
xchg
pop
mov
inc
or
mov
and
or
push
push
repnz
loopne
dec
movsl
addb
out
insl
popf
ljmp
adc
out
out
pop
sub
xchg
sbb
fsubrl
rorb
jg
push
test
cmp
fwait
and
rcrb
out
scas
pop
add
test
addr16
jb
out
neg
mov
fsubs
js
in
imull
jecxz
fs
mov
enter
rorb
push
adc
and
mov
mov
mov
jge
push
hlt
push
test
movsb
adc
outsl
loop
push
adc
rclb
je
fistpl
xchg
mov
loop
mov
scas
daa
in
outsb
rorb
xor
dec
push
xchg
mov
imul
push
les
xor
mov
fidivl
stos
jp
sbb
xchg
cmp
add
movsb
cmc
popf
fmull
xor
adc
xor
jecxz
pop
lds
add
ret
mov
stos
in
mov
and
add
inc
idivb
adc
fmuls
jne
push
pop
mov
xchg
cmp
cmp
in
ret
ret
dec
pushl
jb
leave
sub
aad
into
lods
mov
movsb
sbb
or
cmp
loope
enter
lds
imul
xor
call
jnp
in
out
stc
clc
hlt
and
out
mov
cmpsl
addb
das
xchg
push
negb
cmp
xchg
mov
mov
xchg
inc
cmp
fisubrl
adc
mov
popa
pop
adc
cltd
int3
mov
aam
pop
das
pop
push
aad
mov
sub
mov
inc
testl
in
aad
jle
outsb
aas
or
rorb
pop
mov
clc
push
pop
fwait
push
jmp
sbb
or
push
xchg
adc
ljmp
gs
lret
int
mov
mov
inc
dec
into
and
popa
sub
incl
fdivl
xchg
push
add
inc
jbe
clc
adc
subb
xor
dec
mov
ja
sahf
into
ret
mov
mov
js
int
dec
out
adc
xor
ret
and
lods
lds
sahf
jl
sbb
stc
andl
cmp
mov
xchg
xor
jp
wbinvd
add
xchg
lahf
lock
dec
lock
or
fucomi
pusha
and
fisttpl
fwait
lods
pushf
mov
test
mov
inc
insb
mov
push
pop
pop
xorl
jp
ret
data16
shll
aam
imul
nop
data16
add
add
lcall
ja
ja
mov
cmp
pop
add
jg
je
cmp
sti
test
insb
roll
dec
push
outsl
add
js
cli
in
cld
cli
es
lahf
cltd
inc
pop
push
mov
mov
push
mov
mov
mov
jge
cld
mov
cmp
ss
pop
cmc
jno
inc
pop
in
jecxz
sub
ds
rolb
inc
mov
test
movsl
imul
repz
add
cmpsb
pop
jge
rorb
outsl
loope
sbbb
mov
mov
mov
jecxz
mov
inc
fwait
dec
add
stos
lods
insb
aas
movsl
sbb
mov
jo
push
sub
aam
bound
or
jl
push
cmp
jl
lock
lods
ljmp
lahf
aas
or
pop
inc
inc
xchg
pop
mov
sbb
lahf
cmp
xor
nop
xchg
sub
icebp
jmp
xchg
lret
jbe
jo
pop
sub
dec
fwait
xchg
std
mov
icebp
lods
jmp
jne
enter
mov
fiadds
dec
and
mov
jne
outsb
out
cmp
int
xchg
enter
jbe
sar
xchg
popa
lea
int3
lock
adc
mov
fnsave
mov
data16
jno
mov
dec
and
jmp
or
sub
jno
ja
and
mov
xchg
into
loop
pop
jne
mov
into
ffree
js
jb
pusha
pop
je
mov
mov
push
cmp
ret
dec
mov
lea
push
cmp
in
mov
fadds
sub
jbe
dec
daa
insl
rcll
outsb
push
les
mov
push
pop
pop
dec
mov
cs
sub
inc
sub
sub
les
sti
les
cs
adc
data16
leave
dec
sub
jb
mov
mov
daa
inc
test
leave
xor
test
in
gs
push
mov
fs
stos
cltd
mov
cmc
push
or
je
scas
push
or
bound
js
shl
cmp
clc
adc
jle
movsb
mov
ret
loopne
int3
fs
push
loop
lahf
fwait
clc
xchg
sub
cmp
aad
std
pop
ret
fwait
lret
inc
xor
xchg
push
fldt
test
mov
and
inc
jnp
mov
push
mov
addb
mov
xchg
xor
daa
xchg
sbb
and
lret
push
jne
mov
enter
pop
push
xchg
sbb
sbb
addr16
cmp
cld
cmp
fwait
mov
sub
or
push
ss
icebp
cmp
or
test
imul
sub
mov
int3
popf
sbb
pop
and
outsl
mov
test
mov
out
jae
ss
add
jle
push
lcall
das
cmp
inc
andb
dec
andb
inc
sti
push
inc
rcll
imul
ja
mov
add
mov
cli
mov
aam
dec
or
adc
dec
push
adc
loope
out
out
loop
lcall
xchg
andl
inc
mov
cwtl
and
shl
test
cmp
mov
mov
hlt
pop
movsl
cmp
or
pop
jmp
testb
pop
xor
mov
jbe
dec
cmpsb
iret
fiadds
shld
movsl
mov
cs
pop
in
or
sbb
mov
ds
and
inc
stc
jne
pop
mov
mov
pop
pop
mov
mov
in
hlt
test
cmp
push
mov
nop
cmp
pop
jecxz
mov
add
addr16
mov
mov
movsb
daa
push
mov
js
gs
and
pop
jo
or
rcr
or
adc
mov
andb
xchg
cs
out
stc
or
inc
jecxz
dec
es
outsl
cmp
push
adcb
mov
fsubs
adc
test
xchg
movsl
sub
cmp
idivl
mov
dec
xor
push
sub
insb
dec
inc
cmp
mov
js
fistps
xchg
scas
insl
jns
cmpsl
rclb
outsb
es
pop
out
sub
mov
aaa
out
aas
lcall
add
jae
gs
pop
add
add
test
sub
fbstp
sbbb
int
pop
idiv
icebp
lcall
sub
pop
in
je
bound
push
inc
cmc
push
push
loopne
xor
inc
or
test
push
ret
test
and
push
dec
loopne
subl
xchg
fsub
xchg
push
pop
ljmp
shl
in
or
mul
movsb
dec
out
arpl
adc
pop
dec
xchg
sarl
imul
pop
hlt
fimull
pop
mov
and
dec
push
mov
xchg
sub
xchg
push
stc
ror
lret
pop
out
add
popf
mov
cmp
lods
or
jno
xor
mov
lock
les
hlt
adc
stc
lret
aam
ds
addl
lods
incb
adc
jp
inc
lret
push
and
movsb
int3
outsb
mov
add
sbb
pop
add
mov
mov
mov
cld
xor
cmp
nop
sbbl
imul
ret
jnp
imul
ret
or
or
mov
dec
mov
sbb
sbb
jle
mov
and
sub
dec
jecxz
cli
cmpsl
jg
pushf
and
lret
and
scas
inc
push
loop
xor
cwtl
sub
inc
and
pop
adc
jecxz
js
jecxz
mov
sbb
mov
lret
inc
dec
xlat
shl
outsb
lcall
mov
xor
fsubrp
mov
xlat
sarl
cltd
cs
pop
loop
dec
mov
jne
push
dec
outsl
adc
fs
ja
and
rol
jae
mov
test
jmp
and
pop
movsl
enter
inc
cmp
loope
jmp
sbb
sahf
xchg
jno
cmp
in
repnz
decl
test
pusha
rclb
pushf
jne
decb
out
or
decb
les
pop
sbb
js
roll
mov
pop
bound
loope
into
push
adc
xor
mov
movsb
fwait
lds
add
pop
or
nop
xor
mov
outsl
int3
je
cwtl
or
xor
pop
sub
popa
mov
xor
sbb
push
rcrl
notl
test
or
add
pop
or
mov
cld
insb
hlt
int3
xchg
jo
pop
xchg
sub
cmc
pop
repnz
sbb
aam
daa
mov
test
outsb
mov
clc
inc
ja
or
pop
push
das
jp
sub
cmp
adc
scas
inc
test
inc
dec
jmp
sbb
push
mov
add
ds
lods
fisubl
jbe
enter
sbb
out
sub
sub
pushf
clc
dec
outsl
xor
mov
sbb
dec
dec
mov
jecxz
sbb
pusha
shlb
xchg
dec
fldpi
or
pop
push
mov
das
dec
cltd
hlt
add
addl
mov
in
and
mov
daa
push
sub
mov
icebp
pop
icebp
out
sbb
push
call
pop
sub
lret
xlat
cmp
mov
jo
jae
mov
jb
sbb
out
leave
mov
xchg
jmp
mov
dec
ss
out
or
inc
cmpsb
or
roll
sbb
push
push
jg
jnp
es
hlt
rcr
and
lods
das
push
cmpsb
adc
insb
sub
sti
arpl
sub
js
sub
inc
push
jno
decl
mov
pushf
cmp
pushf
mov
addr16
je
pminub
rcll
or
int3
and
ss
mov
repz
in
sbb
xchg
ss
mov
mov
pop
push
push
stos
leave
repnz
in
xchg
enter
repnz
mov
mov
aaa
int3
pop
sti
pop
or
jle
sbb
sbb
adc
sbb
cs
lea
push
rol
xchg
lods
test
push
sub
fs
push
inc
shl
pop
cmpsl
add
cld
jecxz
jle
xchg
adc
test
mov
mov
xor
mov
cmpsb
push
loopne
mull
fidivl
cmpsb
push
xchg
dec
mov
jp
cmpsb
sub
adc
gs
loopne
mov
mov
rcrl
repz
imul
lods
add
sub
pop
mov
je
mov
jne
mov
jp
psllw
sub
mov
decb
and
xchg
dec
mov
inc
mov
call
aas
stos
notb
pop
xchg
push
pop
rdmsr
mov
xchg
outsb
mov
or
push
mov
sbbb
add
adc
mov
xchg
loope
mov
mov
adc
dec
out
cltd
out
inc
xor
pusha
jne
or
stos
push
cltd
mov
repnz
sti
push
fdivrl
out
pop
icebp
popf
in
inc
jne
cmp
pop
cmp
mov
fsubs
add
xchg
lock
std
sbb
jb
mov
mov
or
nopl
ret
mov
xor
notl
daa
cmc
adc
dec
cs
je
adc
insb
adc
and
idivl
aam
das
push
call
jae
push
in
cld
movsl
xchg
lcall
mov
xor
push
add
lock
or
subb
ret
inc
andb
mov
popa
jbe
push
adc
dec
inc
sti
sub
enter
mov
out
adc
int3
push
lock
add
lret
daa
data16
test
sti
jp
push
fcmovne
mulb
mov
lea
sub
loopne
cltd
mov
bound
xor
lea
add
loope
fs
dec
loope
add
cmpsl
add
pop
cld
outsb
cmpl
or
pop
xchg
xor
out
inc
jecxz
push
gs
nop
xor
fidivrl
pop
adc
aas
enter
cmp
inc
aam
xchg
dec
in
fwait
sub
out
mov
movb
dec
call
push
and
aas
addr16
inc
cmp
push
mov
fbstp
and
cmp
xchg
data16
lea
leave
js
mov
pop
ja
cmp
ds
fwait
in
leave
mov
loop
cmp
into
inc
ds
or
test
sbb
adc
aas
ss
sbb
pop
sbb
sub
negb
push
and
jns
mov
pusha
xor
in
xchg
mov
punpckhwd
aam
ret
scas
and
lret
inc
and
and
or
leave
std
add
fmull
stc
lretw
and
jmp
pop
add
popf
ret
pop
or
mov
imul
adc
notb
jns
push
adc
mov
shl
in
inc
jle
fldenv
inc
sbb
push
inc
xor
outsb
imul
xchg
inc
neg
mov
and
mov
xor
loope
jo
push
or
ljmp
mov
mov
leave
or
dec
jg
add
pop
dec
pop
out
jmp
call
push
dec
dec
cmpsb
into
sbb
sbb
mov
stc
xor
aad
in
hlt
movsl
and
fmull
mov
push
jmp
xorl
add
dec
jo
sahf
sarl
call
pop
lea
stc
movsb
or
mov
sub
mov
push
and
insl
out
out
add
mov
shrb
jge
mov
popa
push
inc
lret
mov
jg
test
filds
cld
in
mov
ret
dec
pop
mov
mov
dec
push
jmp
iret
jne
jb
shrb
ror
mov
add
aaa
rcrb
in
inc
dec
xchg
mov
out
pusha
sbb
jle,pn
xchg
pop
mov
push
cmp
dec
add
adcb
fnsave
adc
mov
mov
pop
stos
aad
inc
or
rcrb
shll
or
sub
imul
aad
push
shrb
les
xor
jnp
inc
cmp
fisttps
fistps
or
cmpsl
mov
fidivl
mov
out
jle
xor
cmc
push
pop
negb
xlat
jge
mov
in
sub
nop
jl
push
mov
cltd
mov
repnz
cmp
out
mov
aad
test
cmp
ja
lcall
dec
lahf
fcmovnb
fs
nop
sbb
test
ret
jno
aaa
push
sub
adc
xchg
pusha
aam
inc
jmp
mov
push
mov
dec
loop
jb
and
nop
xor
sahf
inc
mov
fsave
nop
push
ret
pop
push
push
jns
add
out
and
incb
sub
inc
cmp
push
jbe
cmova
jbe
xchg
movsl
sub
push
idivb
sub
mov
sahf
push
push
jecxz
cmpsl
lea
pop
push
fwait
jno
mov
mov
loopne
test
or
jnp
fdivs
sbb
sub
les
xchg
orb
pusha
pop
pop
pop
adc
lcall
push
lds
mov
cmpsl
mov
imul
insl
mov
xchg
pop
mov
mov
test
imul
fistpl
repz
sub
mov
roll
mov
jne
mov
lods
frstor
mov
sub
xchg
xchg
addr16
dec
lea
xor
add
sbb
jnp
scas
sbb
shl
cmp
jae
push
mov
dec
jl
rolb
mov
inc
sbb
xlat
sbb
fbstp
add
push
jns
into
imul
and
and
pusha
ja
pop
jecxz
dec
jl
push
push
dec
cmp
mov
sahf
mov
push
and
xor
mov
jbe
mov
and
subl
or
pop
sti
jge
pop
and
cmp
jmp
cmp
test
ficompl
or
adc
aad
stos
jo
in
add
data16
arpl
mov
repnz
out
cmp
sub
faddp
sti
dec
xchg
adc
fidivrs
mov
je
mov
lret
stc
cmp
xor
mov
push
in
lds
and
sub
xchg
cld
lcall
aas
lahf
loopne
jp
inc
fbstp
jae
add
hlt
out
pop
jl
cli
push
inc
mov
fs
scas
lret
push
pop
js
sub
orl
lds
loopne
push
xor
sub
imul
xor
dec
adc
in
insl
cs
outsb
movsl
out
jnp
jnp
mov
push
inc
mov
pop
add
ss
xchg
shrb
ret
jae
lds
ljmp
inc
into
xchg
test
aad
cltd
std
cltd
sbb
popa
test
sbb
cmp
jnp
out
and
sub
std
stos
cmp
cmpl
push
fildll
popf
int
ljmp
insl
fs
and
fsub
es
int
jl
fdivrl
mov
ds
pop
xor
mov
jo
lds
call
xor
dec
outsl
sarb
pop
lock
push
loopnew
dec
add
gs
mov
and
jl
mov
enter
sti
cmpsl
dec
cltd
aaa
stc
mov
adc
xor
and
sbb
ljmp
fnsave
dec
mov
cmp
pop
jb
cmp
js
or
cmp
out
push
cmpsl
adc
or
adc
les
or
mov
test
and
mov
es
sub
sub
and
fildll
int
int
push
sub
pop
int
repz
xchg
in
and
outsb
push
popa
cmc
icebp
nop
int3
cwtl
lret
enter
rcrb
mov
mov
div
push
shll
sbb
shrb
jmp
dec
mov
sub
cmpsb
arpl
ret
test
bound
pop
inc
orb
int
cmpsl
mov
pop
insl
sub
leave
pop
or
movsb
call
jns
push
fsubrl
inc
sub
fwait
insb
dec
pop
add
rol
and
xorl
movsl
push
or
xlat
adc
repz
ljmp
test
js
sbbl
enter
add
cmp
dec
xor
dec
or
xchg
lods
stos
in
inc
cmp
pop
pop
rorb
popf
aaa
leave
mov
sbb
jle
out
pop
push
xor
scas
dec
lcall
movsl
cmp
add
into
adc
jle
xor
jae
insl
xchg
push
data16
and
sub
lcall
cmp
jbe
inc
mov
xchg
push
fwait
push
std
xor
mov
xor
scas
movl
add
ret
inc
lret
fisubrs
icebp
or
repnz
inc
push
lock
ja
jmp
fimull
mov
mov
es
push
in
popf
jg
data16
enter
mov
pop
in
lods
jno
xor
mov
sbb
sti
or
pop
cmpsl
jmp
sub
lret
pusha
iret
dec
or
mov
xchg
and
gs
stos
add
outsb
add
enter
dec
bound
jecxz
das
mov
sbb
stos
adc
lods
arpl
out
dec
dec
dec
es
ja
or
adc
sbb
pop
insl
adcb
fidivrl
sub
xchg
pop
mov
pop
mov
lods
xor
push
jecxz
xchg
int
mov
and
lcall
dec
sub
inc
addr16
mov
dec
pop
outsb
xchg
in
mov
test
push
xchg
iret
or
add
in
xchg
mov
aas
jno
arpl
sbb
xchg
into
lcall
lds
out
mov
stos
mov
jmp
sbb
repz
ret
sbb
push
mov
sbbb
inc
minps
pop
stos
fwait
cmpsl
in
ss
add
mov
fwait
mov
cmpl
mov
icebp
ja
data16
mov
addr16
dec
sbb
xor
mov
xchg
cmc
icebp
insl
pop
clc
outsl
inc
xchg
orb
outsl
lds
add
xor
xor
out
add
jle
mov
jne
cld
mov
xchg
and
test
add
clc
sub
mov
push
mov
jbe
fldcw
fs
stos
add
pop
sahf
pop
cltd
mov
out
fimull
mov
xor
push
in
in
jne
sub
mov
call
xor
xchg
pusha
aaa
loopne
in
icebp
sbb
mov
cmp
cmp
jo
shr
call
mov
mov
fld
out
lahf
inc
jns
inc
jns
arpl
jnp
test
jne
inc
dec
xor
movsl
fcom
int3
push
cmpsl
lahf
xchg
xchg
push
xchg
xchg
add
inc
or
imul
add
cmp
mov
cmc
cli
mov
or
scas
aam
sub
lret
xchg
xchg
push
repnz
cmp
out
in
push
repnz
mov
pop
out
js
out
outsb
xor
das
and
addr16
sub
mov
adc
int3
lcall
adc
sub
cmpsb
clc
pop
jno
cwtl
scas
mov
mov
mov
cld
jmp
leave
jecxz
shlb
ret
push
lahf
shl
cwtl
and
push
jmp
xlat
or
rorl
sub
sbb
gs
std
hlt
imul
fs
andl
push
add
scas
and
dec
push
and
mov
std
xlat
pop
idivb
out
in
push
mov
sbb
stos
xlat
insb
gs
mov
xchg
jne
dec
roll
xchg
dec
test
adc
outsb
imul
jl
ljmp
aam
pop
jp
lods
inc
mov
dec
popf
sbb
pop
in
push
mov
push
pushf
cmpsb
loopne
in
mov
bound
xor
pop
xor
mov
pop
cli
ja
enter
out
sub
imul
mull
pusha
pop
pop
lahf
inc
pop
mov
frstor
adc
jno
fs
mov
jo
insb
pop
dec
loope
xor
lret
mov
mov
test
and
addl
arpl
daa
mov
leave
dec
nop
scas
in
mov
mov
sbb
sub
inc
sub
stc
movsl
outsb
stos
dec
stos
sbb
outsl
mov
scas
call
ret
jg
shrl
enter
fsubs
dec
leave
hlt
outsl
xorb
stc
sub
loop
mov
ficoml
lods
mov
stc
push
outsb
mov
stos
push
add
dec
inc
ja
scas
fistpl
jl
fwait
std
aas
ficoml
cs
mov
jecxz
push
es
ja
popa
push
inc
sub
les
push
iret
mov
stos
jne
test
add
std
jo
jmp
jmp
pop
popl
cmp
ja
jecxz
push
mov
cmp
xchg
inc
mov
loopew
cmpsb
mov
sbb
mov
mov
daa
cmp
inc
aas
mov
orb
shrb
stc
and
orl
adc
push
out
push
lods
xorl
loopne
lock
jbe
popf
inc
rorl
out
pop
fidivl
rolb
mull
mov
divl
das
nop
outsb
adc
jne
cmp
push
xor
adc
mov
ss
adc
lahf
or
cmp
mov
popa
or
in
sbb
sar
in
mov
fwait
movl
int
xor
xchg
lea
addr16
sub
insb
jns
inc
cmp
repz
cwtl
jb
pop
shrl
shll
mov
add
and
movsb
mov
push
mov
cld
mov
daa
mov
pop
icebp
stos
mov
ret
lods
sbb
and
xor
pop
mov
and
jle
sbb
pop
push
push
jp
imul
lock
push
sub
cmp
push
cmc
xchg
popa
popf
jg
arpl
adc
dec
sbb
jmp
movsl
sahf
imul
pusha
outsb
lcall
adc
jecxz
xchg
sarb
aam
push
jnp
xor
mov
ficomps
mov
jp
and
mov
loop
mov
jecxz
lds
adc
push
lods
jge
mov
pushf
push
pushf
es
fwait
jo
and
out
icebp
repnz
inc
in
in
pop
mov
jns
data16
adc
out
jbe
lods
add
sbb
icebp
jbe
jae
dec
add
adc
dec
test
adc
or
jge
sub
sahf
adc
pusha
jge
xor
mov
mov
mov
mov
cmp
mov
xor
push
clc
xchg
pushf
inc
dec
hlt
mov
push
pop
movsb
mul
mov
push
mov
jnp
scas
or
hlt
imul
push
dec
es
jg
pop
jg
xor
jno
dec
jne
xor
and
repnz
lea
pop
pusha
lcall
and
jle
xchg
sub
mov
pop
cmp
pop
or
test
into
jecxz
std
pop
xchg
mov
fwait
cmp
mov
notb
xor
notb
in
and
insl
cmp
cmp
test
jne
ja
movsb
lret
push
cmp
adc
std
dec
add
je
cmpsb
testl
loopne
cld
fs
sbb
test
js
dec
xchg
mov
xchg
test
mov
test
rorb
int
cmp
std
je
sbb
lods
jnp
xor
add
mov
dec
lahf
cmpl
loopne
or
aaa
hlt
jg
adc
push
and
cmp
jae
cmc
fimull
pop
into
xlat
std
test
stos
xor
and
cmc
mov
cmp
fmull
cmp
adc
adc
push
mov
dec
out
jno
xchg
jo
xor
jnp
call
fcmovb
and
outsb
pop
add
dec
mov
mov
out
sbb
stos
jae
sbb
addr16
push
xor
ret
movsb
or
stos
inc
pop
in
lret
or
clc
leave
dec
aaa
jle
pop
mov
cmpb
ror
push
outsl
call
out
rolb
mov
fxch
pop
or
fdivl
mov
mov
pop
jo
cmp
fwait
out
and
push
loope
push
test
aaa
pop
testl
mov
in
cmp
cmp
add
jns
fbstp
mov
ljmp
add
aad
push
push
scas
lds
mov
xchg
jge
sub
inc
insl
xlat
push
fisubl
outsb
xchg
jb
push
jmp
aaa
insb
adc
jl
and
mov
add
pop
mov
out
pop
cli
pop
lret
push
add
pop
clc
jb
mov
cwtl
rcll
pop
fldt
or
push
daa
into
xchg
fsubrs
rep
lcall
les
pop
arpl
inc
push
js
in
mov
ja
push
rol
in
ror
pop
cld
pushw
xchg
add
jb
lret
dec
sahf
lcall
xchg
mov
pusha
lahf
mov
xchg
pop
jb
push
add
xchg
pushf
push
