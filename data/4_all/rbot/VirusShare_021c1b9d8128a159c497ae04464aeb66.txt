or
add
add
add
add
pop
add
add
add
add
add
adc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
jmp
add
cmp
or
dec
add
add
or
insb
add
add
or
mov
or
add
add
xchg
add
add
add
add
add
addb
add
sbb
or
pushf
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
outsb
fs
gs
popa
addr16
add
add
and
add
add
add
add
add
add
push
lods
lret
js
mov
sti
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
fidivl
add
add
pop
add
sub
jge
jnp
xor
mov
adc
xchg
and
jb
xchg
pop
mov
lds
stc
in
dec
outsl
adc
shl
mov
fwait
scas
icebp
in
push
pop
loop
inc
pop
ss
nop
cmp
popf
xor
rorl
movsb
jl
push
jne
lds
cli
and
mov
cmp
rorl
es
sbb
xor
cmp
in
jg
leave
jne
xrelease
xchg
sbb
arpl
or
fiaddl
insl
stos
mov
shlw
addl
fdivp
pop
dec
jecxz
pusha
fsubl
mov
scas
into
mov
add
lgs
inc
sub
and
cld
fwait
adcb
pop
and
sub
in
int3
push
sbb
cwtl
mov
mov
mov
push
aaa
mov
mov
inc
push
xchg
fld1
ds
jecxz
pop
std
mov
cwtl
das
imul
cmp
divb
test
cmp
mov
jnp
sbb
std
repnz
int3
dec
cmc
xor
mov
popa
inc
jne
lock
out
dec
les
sahf
mov
call
pop
xor
mov
sub
out
aad
mov
xchg
push
push
dec
add
inc
mov
xchg
mov
imul
adc
xor
pop
arpl
decb
and
fmulp
or
cmp
xor
push
fadds
ja
push
aam
dec
or
pushf
pop
and
popa
jge
and
js
jno
leave
outsl
cltd
cmpsb
in
and
pushf
sub
lods
cmp
mulb
or
outsl
pop
mov
cmc
into
and
in
mov
jbe
lahf
cmpl
jp
nop
addr16
mov
sbb
jmp
and
sub
fucom
sbb
mov
iret
aad
mov
mov
or
lea
push
pushf
xchg
cmp
into
pop
imul
xor
jmp
ds
jmp
sub
xor
pop
rcrl
sbb
cmpl
sub
adc
or
hlt
call
adc
bound
inc
inc
stos
push
aad
andb
cmpsl
xchg
aas
pop
rclb
mov
out
outsb
push
stc
popa
inc
loop
pushf
sbb
pop
lock
mov
shrb
or
add
xor
out
clc
dec
gs
or
push
std
adc
push
gs
jnp
mov
mov
pushf
push
push
adc
cwtl
in
fisubs
rcll
leave
sbb
push
sti
add
stos
bound
push
gs
sbb
loope
shll
cmp
sub
hlt
xor
mov
call
outsw
pushf
std
xor
in
push
test
dec
ret
loope
outsb
xor
jo
mov
dec
inc
cmp
xorl
rolb
xchg
mov
test
nop
add
je
stos
stos
ljmp
sbb
rcr
mov
movsl
cmp
adc
test
fwait
test
sbb
pop
lock
and
adc
push
cli
fstps
nop
into
stc
jmp
or
jnp
or
es
sbb
dec
notl
pop
cmpsl
out
adc
ret
andl
jbe
jb
mov
ret
dec
sbb
pushl
or
jecxz
out
arpl
lock
inc
aaa
insb
fsubrs
pop
xorb
inc
arpl
jmp
int3
jecxz
popa
mov
ss
push
mov
lret
fwait
sub
xor
lea
jbe
in
push
mov
adc
push
out
clc
inc
mov
cmpsl
jno
inc
fwait
rorb
and
push
outsl
sahf
imul
lock
push
jae
ror
lods
in
imul
mov
js
mov
out
and
orl
data16
push
sub
and
and
mov
popa
test
or
loope
and
mov
ss
test
repz
push
sbb
mov
adc
pop
mov
pop
xchg
cmpxchg
mov
cmp
idivb
mov
lds
cwtl
hlt
and
loopne
push
cmpsb
lds
jmp
rcrb
xchg
orb
pop
jecxz
lret
stos
sbb
mov
inc
movsb
ret
jne,pn
cmp
lret
and
pop
and
xor
xor
out
jge
mov
fildll
push
mov
dec
sub
sbb
aam
cmp
dec
in
adc
out
imul
imul
icebp
adc
dec
jae
inc
rorl
out
sub
or
jle
inc
adc
mov
pop
jb
cs
mov
iret
push
scas
mov
rclb
cmp
lcall
cwtl
sub
sbbl
nop
gs
inc
mov
sahf
inc
mov
xchg
ret
js
xchg
rcrl
push
inc
sbb
cmc
dec
dec
aaa
mov
rcll
shlb
roll
cs
xchg
pop
add
inc
cld
and
popf
xchg
ror
cmc
addr16
lds
pusha
ja
push
mov
stos
and
xchg
add
outsl
incb
sub
fldt
sbb
aas
jle
ljmpw
xchg
mov
lahf
inc
mov
push
inc
push
lds
or
add
inc
and
push
adc
cmp
insb
cld
mov
fimull
cltd
lods
scas
rep
sbb
push
sbb
jmp
leave
push
sbbb
outsb
ret
shl
cmp
xlat
hlt
gs
cld
fcom
jg
xor
mov
ret
cmp
add
jae
cltd
mov
pop
jl
pop
add
add
mov
push
inc
jp
movsl
scas
shrl
enter
stos
mov
hlt
roll
shlb
popa
insl
dec
mov
inc
add
lret
mov
or
scas
jae
ud1
add
pusha
mov
mov
mov
push
pop
mov
push
push
out
fadds
jmp
dec
mov
push
sarl
mov
repz
testl
pop
aam
sbb
xchg
repz
hlt
push
sub
mov
loop
mov
cwtl
loope
cmp
into
scas
dec
mov
imul
adc
cs
lret
jno
mov
jno
mov
push
push
adc
mov
sbb
cmpl
adc
push
sub
fimull
fwait
pop
inc
jmp
cmpsl
adcb
scas
pop
or
stc
test
mov
int3
cmp
cmp
scas
dec
and
sub
imul
jns
sub
icebp
sarl
or
pop
js
test
imul
es
push
insb
sbb
rclb
das
stos
stos
ret
dec
lret
push
pusha
daa
fdivrs
ret
or
cld
popf
subl
xchg
jbe
repnz
fcomi
or
aad
pop
xchg
mov
cmc
dec
xchg
sub
and
imul
sub
push
push
jnp
fwait
jmp
xchg
dec
lsl
cmpsl
xchg
aam
ror
push
add
inc
loop
stc
movsl
stc
and
stos
std
ss
jmp
sbb
sahf
push
mov
lds
lcall
push
adc
nop
sub
sub
in
sbb
andb
jle
mov
mov
push
dec
mov
fiaddl
in
pusha
insb
jmp
mov
adc
push
fcoml
sub
ljmp
adc
sarb
aam
dec
push
push
test
scas
push
xor
and
mov
cltd
xchg
adc
roll
mov
inc
xchg
cmp
jp
or
repz
jge
xchg
jno
mov
push
cmpsb
jno
mov
push
xchg
jmp
hlt
mov
adc
jbe
rolb
xchg
and
xchg
out
push
pop
mov
lret
cs
push
js
xor
xor
push
gs
or
std
pop
int
and
pop
in
ja
in
mov
cmpsl
xchg
les
sub
pop
cmp
ss
dec
jge
scas
inc
int3
cs
push
mov
lcall
shll
insb
inc
in
push
lock
and
mov
dec
in
ss
jnp
sti
bound
cmp
sbb
repz
and
xor
jl
fs
dec
popl
or
pop
xchg
pop
or
ds
out
mov
stos
lea
int3
insl
test
jecxz
or
sbb
and
shl
push
int
rolb
je
push
test
dec
pop
add
arpl
faddl
popa
cld
xlat
out
mov
xor
push
sbb
inc
sbb
rorb
or
mov
ror
shll
mov
dec
mov
mov
jle
fs
xor
std
and
mov
andl
ja
lea
sahf
clc
fdivs
call
insl
push
in
call
ret
mov
pop
rcrb
data16
mov
xor
and
mov
test
sub
fsubs
xchg
insb
scas
and
outsl
or
mov
xor
test
scas
mov
sub
lock
pop
adc
lds
lods
or
adc
cmp
ja
mull
test
testb
sarb
and
lods
lret
adcl
dec
jecxz
add
movsl
inc
mov
sub
dec
adc
lock
bound
pop
xchg
popa
push
adc
in
dec
mov
lcall
call
es
jmp
pop
sbb
fwait
in
data16
insl
pop
incl
xorb
adc
mov
stos
mov
push
add
or
push
mov
test
mov
xor
sub
cmp
in
dec
push
xchg
xor
in
mov
pop
cmp
aad
divl
clc
div
mov
std
addb
mov
add
lcall
repz
adc
sub
mov
inc
lcall
pushf
int
or
xor
xor
jmp
cwtl
in
das
movsl
ja
push
mov
pop
xchg
pop
adc
unpcklps
lock
fadd
push
icebp
imull
fmuls
inc
push
pop
and
mov
bound
inc
dec
lds
stos
add
icebp
pop
jae
pop
jno
arpl
sbb
cmc
je
sarl
add
jge
jle
push
xor
xchg
jb
xchg
test
leave
pushf
lea
jmp
inc
cld
add
xchg
fcmove
jno
test
sbb
fidivrs
pop
pop
rcrb
pop
daa
mov
sbb
test
mov
stos
inc
arpl
pushf
rcl
das
pop
xchg
cmp
sub
inc
mov
xchg
mov
les
inc
or
push
xchg
pushf
xchg
push
pop
mov
sbb
sub
popf
lcall
in
inc
dec
ret
jo
pop
mov
xchg
xlat
popf
cs
adc
xchg
push
mov
int
ja
cmp
adc
leave
xlat
dec
add
sahf
and
and
push
cwtl
loopne
push
imul
test
in
mov
cmp
xchg
out
imul
pop
ds
push
dec
xchg
mov
push
push
pop
les
sbb
jnp
mov
or
lret
in
xlat
outsb
adc
dec
shll
push
xchg
jnp
inc
test
mov
lock
xor
aam
std
mov
fwait
xchg
sbb
in
cmpb
pop
cmp
or
sbb
shrb
ljmp
xchg
cmp
fwait
xlat
xchg
and
inc
int3
jns
mov
and
sahf
fs
add
mov
orl
sub
xlat
in
filds
lret
push
test
pusha
push
and
loope
clc
push
orl
mov
push
pusha
rorl
enter
iret
clc
daa
in
insl
add
decb
mov
in
cmp
mov
dec
cmp
pop
jge
loop
ret
test
push
repz
ret
in
xor
int
xor
dec
out
cmpsl
fwait
xor
aaa
adc
repnz
pop
mov
mov
gs
mov
push
sbb
inc
cmp
imul
adc
pusha
dec
enter
mov
mov
jno
sbb
dec
clc
pop
pop
mov
icebp
mov
clc
mov
cs
fnstcw
add
insb
in
incl
xchg
push
mov
pop
popl
cld
mov
and
xchg
mov
repnz
mov
push
int
lods
adc
jnp
sub
repz
cmp
mov
xchg
cmpsl
movsl
and
stos
orl
adc
jmp
mov
jle
mov
and
sbb
cmpsb
mov
sbb
jbe
xor
imul
push
dec
inc
xor
push
lea
out
fs
or
cltd
insl
dec
adc
cwtl
iret
popa
ret
fnstsw
je
pop
ret
mov
lcall
jb
or
inc
out
aas
xor
mov
fsubs
fistl
ja
mov
jne
inc
arpl
sbb
fnstcw
xchg
negb
dec
dec
loop
push
mov
mov
cmp
imul
dec
mov
faddl
pop
cmp
adc
sub
repz
aaa
jmp
aaa
sub
enter
mov
push
stos
fisubrs
cmp
popa
loop
pop
testl
shll
in
cltd
dec
icebp
ja
shrl
mov
mov
push
jbe
mov
push
cpuid
push
in
and
pop
stos
test
pop
out
outsl
orl
jmp
outsb
or
and
mov
mov
mov
test
xor
jb
fs
mov
dec
lods
enter
sub
cwtl
stc
dec
add
push
testl
sarb
insl
jns
nop
or
loop
lds
jne
mov
jecxz
mov
mov
js
mov
lods
bound
push
mov
mov
adc
mov
add
stos
enter
adc
push
push
add
loopne
cmc
dec
call
repz
shll
lds
mov
mov
int
sti
call
es
dec
cmc
fiadds
jno
mov
fstpt
mov
inc
push
and
cmpsb
data16
nop
movsb
ja
cmpsl
lods
pop
xchg
cmp
fdivl
xor
dec
cmc
pop
ja
test
cmp
mov
lods
cmp
adc
lret
pushf
movsl
dec
in
xchg
into
or
fldlg2
mov
inc
cmp
pop
ja
mov
xor
sbb
jnp
lock
arpl
adc
pop
adc
movsb
fs
jmp
out
xor
or
repz
sub
dec
in
inc
repz
outsl
aam
fnstcw
cltd
clc
sbb
ss
push
jns
push
stos
outsb
pop
inc
mov
push
jne
dec
jnp
int
lods
insb
mov
in
stc
sub
or
sub
adc
adc
cs
pop
push
int3
pop
shrb
in
mov
cld
xchg
inc
movsb
aam
popa
scas
cli
mov
daa
gs
idivl
jnp
jbe
into
jecxz
rclb
add
sbb
cmpsl
adc
imul
and
data16
out
sbb
xor
cmpsl
sbb
lea
pop
xchg
xor
test
ljmp
ja
cmpsb
stc
cs
dec
cltd
scas
inc
popa
xchg
andb
jge
xchg
imul
outsl
jbe
repz
adc
adc
xorl
dec
aad
leave
pop
mov
nop
xchg
mov
pop
in
pop
cltd
push
mov
in
pop
flds
in
in
test
leave
icebp
aas
mov
scas
clc
aas
aas
push
loope
or
fildl
xor
inc
lods
pop
adc
pop
push
in
and
adc
shlb
clc
out
sub
jno
scas
jns
push
mov
cmp
leave
mov
cmovae
cmp
ljmp
mov
sbb
cltd
mov
jmp
cmp
mov
sbbl
int3
je
dec
xchg
aaa
xchg
or
add
pop
jmp
sub
loop
xchg
mov
mov
cmp
mov
sbb
jnp
xor
or
dec
cmc
mov
in
xor
movsl
dec
xor
imul
movsl
cltd
xchg
in
mov
mov
push
outsl
and
movsb
insb
inc
in
mov
xchg
pushf
aam
mov
inc
pop
inc
int3
pop
dec
and
cld
mov
xchg
loopne
jecxz
iret
jb
jbe
push
fs
jbe
mov
xchg
scas
jns
cmpsl
in
cmp
or
dec
mov
bound
repz
mov
inc
scas
mov
rorl
in
stc
xlat
jg
mov
int3
xchg
repnz
and
bnd
adc
sarl
popa
pop
in
in
inc
or
mov
cltd
int3
mov
dec
in
push
test
out
scas
rcrb
cmp
jo
in
adc
cmpsl
pop
jne
jg
pusha
push
fsubl
push
add
sbb
les
jae
mov
sbb
cmpsb
test
push
jnp
mov
adc
mov
jb
fs
les
sahf
adc
gs
inc
pop
mov
ljmp
ret
outsb
stc
mov
xlat
cs
jl
imul
inc
add
icebp
add
popa
or
cmp
aaa
loope
add
mov
mov
adc
roll
sub
xchg
mov
imul
movsb
rol
mov
ret
adc
popa
arpl
insl
xchg
repz
adc
out
and
mov
cmpsb
push
mov
test
cmp
jae
iret
sbb
jne
push
cltd
enter
test
gs
repz
mov
xchg
mov
adc
jl
fistps
sbb
dec
xor
xlat
repnz
outsb
xchg
mov
daa
mov
shrb
dec
loop
in
out
repnz
push
pop
je
orl
in
out
aam
icebp
xchg
in
jb
push
sbb
cld
pusha
sbb
pop
mov
mov
std
aaa
adc
das
rclb
sbb
dec
cmp
lret
mov
push
fsubl
sub
push
and
fwait
xorl
lods
js
push
shlb
xor
pop
push
es
test
shrb
outsb
std
adc
insb
jle,pn
lret
mov
cwtl
fldenv
mov
jae
mov
mov
add
sub
fisubl
stos
je
jg
pop
imul
mov
movsl
in
mov
pop
xchg
push
push
push
jmp
add
push
jl
rol
add
out
sbb
repz
decb
scas
jg
out
jge
adc
data16
je
pop
xchg
icebp
fsub
mov
jae
mov
sarb
inc
push
add
test
leave
xchg
test
rorl
int
dec
push
test
call
testb
leave
push
shr
inc
popf
mov
push
xor
jno
cmp
fnstenv
dec
jnp
push
test
dec
cld
adc
jp
insb
lods
cld
loope
sbb
mov
out
mov
push
sbb
xor
pop
mov
dec
push
cmp
out
fsubl
pop
popa
pop
xor
push
xor
lahf
addr16
pop
sarl
lds
out
xchg
lock
loope
js
outsl
aas
push
inc
jecxz
sub
aad
cli
inc
add
cmpb
adc
and
cmpsl
dec
loop
xchg
es
jnp
daa
cltd
icebp
ja
cmc
dec
sarl
mov
jmp
and
jo
loopne
fildl
push
and
fsubl
sbb
adc
push
stos
ss
call
fnstenv
or
shll
ljmp
dec
js
daa
clc
fidivs
pop
stos
scas
ficomps
int3
pop
subl
outsl
cltd
lret
ja
pop
imul
jno
lcall
dec
mov
es
jno
repz
idiv
mov
cwtl
out
xchg
or
sub
popf
mov
jge
test
inc
sub
fcmovnb
ret
shll
jecxz
loopne
push
push
xlat
out
rclb
mov
add
xchg
push
push
icebp
xchg
loop
mov
sbbl
mov
repnz
add
test
movsl
int
ds
dec
fucomi
cmp
xor
pop
xor
aaa
cmp
sar
push
inc
sahf
inc
fcmovu
cmp
mov
outsb
xor
cmpsb
pop
ss
ffreep
push
add
push
test
jmp
lea
iret
aam
subl
push
rcll
adc
gs
mov
imul
icebp
pop
xchg
xlat
test
push
sbb
push
in
xchg
mov
mov
jl
mov
ds
mov
sub
push
hlt
imul
pop
imul
or
pop
shrb
std
mov
mov
insl
pmulhw
jne
sbb
je
loop
faddl
lcall
inc
repz
mov
mov
dec
daa
lret
inc
movsb
std
inc
mov
aad
fisubl
mov
jmp
clc
fsts
fstpl
and
jl
sub
out
pop
into
fists
mov
lock
stos
xchg
scas
add
test
popa
rcrl
sti
jecxz
or
push
outsb
jmp
or
ret
stos
sub
add
out
in
xlat
shrl
paddb
das
movsl
shrb
jl
adc
fistl
cs
dec
sub
divps
popa
xor
mov
jl
pop
test
push
ja
jge
movsb
int
lods
push
or
mov
scas
inc
aaa
movsb
arpl
push
enter
push
inc
cmp
test
test
data16
iret
sub
lods
and
xchg
mov
gs
outsl
adc
pop
not
movsl
xchg
or
cmp
mov
cwtl
je
test
xor
cmp
mov
movl
sub
cmp
leave
inc
in
pop
sub
xlat
mov
or
pop
lds
mov
jp
std
push
add
mov
in
sbb
int
out
in
push
les
in
or
fnsave
ret
xchg
fldenv
mov
mov
js
icebp
cwtl
test
xchg
mov
inc
negl
mov
out
jnp
sub
sub
jecxz
xor
scas
push
clc
mov
mov
lret
nop
stc
cmc
cld
cmp
std
out
pop
subl
pop
les
fadd
imul
popf
cmp
pop
pop
push
movsb
outsb
mov
inc
xchg
sahf
test
push
data16
push
cmp
xchg
jmp
jge
loopne
pop
mov
mov
fdivl
jl
sbb
xchg
dec
je
sub
xchg
push
enter
cmp
push
push
out
popa
ss
xchg
pop
lahf
jmp
dec
fdivrs
mov
mov
inc
ret
les
insl
lods
push
int3
xchg
cs
fnstcw
push
imul
xchg
jecxz
mov
xor
lds
aad
push
or
js
add
sbb
shlb
loope
iret
shl
cli
out
in
jae
jno
call
and
xor
jl
push
pop
jle
sbb
cwtl
mov
jnp
mov
mov
ja
popa
popa
lret
out
push
adc
ret
mov
cltd
mov
es
adc
jns
pushf
push
in
or
inc
cmp
xchg
ficomps
out
pusha
add
fldenv
loope
pop
sbb
test
mov
icebp
rclb
pop
xor
dec
lock
mov
clc
jne
sti
mov
xor
lods
mov
leave
pop
pop
outsb
loope
fs
dec
add
and
in
hlt
lret
jl
xchg
idivb
jno
stos
jnp
pop
mov
pop
xchg
push
cli
es
orl
mov
sub
xchg
frndint
cmp
shlb
sub
mov
inc
push
out
mov
jp
icebp
enter
pushf
insl
cmp
and
mov
aad
inc
pop
les
add
or
push
lret
popf
clc
movsb
pop
adc
cmp
cmp
cmp
in
push
sub
loop
int3
mul
inc
add
mov
mov
lods
ret
fsub
inc
cmp
pusha
cli
push
dec
ja
xchg
jmp
and
jnp
fs
test
les
ret
push
das
mov
roll
fists
adcl
xlat
jl
xchg
lcall
sbbb
mov
roll
xchg
lods
mov
rolb
dec
mov
and
aas
pop
cltd
fldt
notb
cmc
adc
faddl
pop
ds
xchg
test
test
les
inc
push
lahf
inc
repnz
or
fwait
das
and
jp
adc
mov
pusha
xor
hlt
shrb
repz
scas
gs
mov
mov
lea
lock
mov
sub
fnstcw
or
popa
addb
sahf
push
mov
scas
cld
pop
cs
sbb
adc
xchg
mov
push
dec
fbld
xchg
mov
adc
mov
loope
mov
or
xor
shrl
ret
push
xorb
gs
mov
ljmp
sbb
add
std
and
mov
outsb
xchg
add
leave
pushf
paddw
int3
setne
xchg
push
sub
imul
data16
mov
rolb
and
sbb
mov
cld
push
xchg
mov
mull
cs
lds
cmpsl
mov
mov
jecxz
lods
push
mov
pop
mov
test
lcall
loope
sub
dec
arpl
jmp
pop
ja
in
mov
push
and
fnstenv
test
aas
add
int
xor
adc
or
mov
pop
and
test
shl
jb
pushf
lcall
xchg
jecxz
pop
pushf
int
push
xor
test
or
lcall
jge
push
sub
mov
cmp
xchg
ss
sbb
or
shlb
adc
add
cmp
mov
xor
std
enter
mov
adc
xchg
cmpps
or
add
or
lods
adc
fs
lret
mov
lea
sbb
scas
mov
mov
mov
movsb
pushf
mov
aaa
mov
dec
and
testb
rcrl
lock
fadd
add
add
jbe
dec
sbb
sahf
cmp
xchg
cmp
ljmp
mov
in
and
push
test
ds
scas
lods
dec
in
fbld
lcall
push
mov
mov
repnz
pop
adc
xchg
je
lock
or
repz
inc
or
scas
loope
std
sub
mov
add
mov
or
test
ss
popf
push
sbb
ret
mov
loopne
dec
pop
outsb
aaa
and
mov
sub
stos
ficoms
mov
dec
xlat
sub
stos
sub
pop
sub
imul
aad
faddl
sbb
sbb
jecxz
jmp
lods
cli
sbb
push
ss
fisttps
xlat
ret
std
inc
shll
gs
mov
sbb
sbb
mov
mov
js
push
mov
cmp
cmpsl
cmc
add
mov
aam
mov
xor
mov
sbb
repz
push
xor
insl
mov
and
into
adc
inc
xor
jecxz
mov
push
bound
adc
sub
cmp
inc
push
out
cwtl
dec
dec
adc
mov
push
stos
popf
loopne
inc
xchg
pop
stc
repz
loop
daa
jnp
dec
loop
movsl
mov
xor
xchg
or
pop
fldl
aam
clc
mov
fwait
adc
sbb
daa
loop
adc
mov
test
jp
call
iret
push
stos
jle
jno
lds
adc
mov
cmc
cltd
xor
dec
jg
insl
test
mov
mov
inc
sub
and
pop
popa
data16
aad
inc
js
dec
xor
call
out
addr16
test
in
aam
ror
jo
xor
fsub
shrl
pop
insb
sbb
cltd
jle
pushf
loop
adc
leave
mov
sarl
sbb
lods
das
leave
ljmp
in
imul
mov
fildl
and
or
in
cmpsl
iret
int3
sub
cli
xor
sti
push
or
nop
jns
cltd
pop
cs
sub
xchg
cli
nop
mov
ja
mov
push
inc
push
inc
stc
jns
or
xor
stc
sbb
addr16
or
std
push
push
mov
jbe
jmp
rolb
sbb
iret
or
and
imul
jg
jecxz
xchg
jmp
jns
aam
jge
push
fsub
fnstenv
scas
cwtl
cld
movb
jo
push
dec
jg
sahf
leave
fidivrl
call
cltd
cmp
ss
jmp
or
push
out
and
lods
sbbb
pop
cmpsl
jmp
icebp
push
notl
fwait
sbb
movsl
sbb
fldt
clc
xchg
lods
jl
inc
inc
lds
leave
or
out
push
pop
movsb
sub
push
mov
push
aaa
add
sub
das
lea
sub
outsb
adc
repz
sar
fcomps
mov
fdivs
and
fs
push
or
push
pushf
pop
icebp
fisttpll
in
sbb
pushf
add
jle
inc
gs
mov
int3
adc
clc
xchg
ds
roll
popf
xor
cmpsb
mov
mov
loop
push
push
aas
test
repz
les
lcall
or
cli
dec
hlt
ret
pop
mov
inc
std
cmpsb
repnz
mov
sub
ljmp
add
shr
and
loopne
mov
cmp
les
notb
jecxz
mov
pushf
fidivs
cwtl
lods
jg
pop
mov
scas
or
sub
rcl
scas
mov
maxps
add
inc
mov
stos
fstl
dec
add
dec
xor
daa
lcall
sbb
mov
leave
aas
pop
mov
sbb
stos
repz
mov
fdivr
cmp
adc
cmp
adc
out
pop
xorb
call
pusha
pop
loopne
ficoml
cmpl
xchg
push
dec
dec
addr16
inc
lcall
push
shlb
dec
xor
mov
stos
sub
fimuls
cli
jmp
ja
pop
ret
push
sub
mov
adc
idivb
jge
inc
sti
std
adc
jno
push
sbb
xor
mov
rcrl
ja
dec
sahf
sbb
jp
jg
dec
sbb
pushf
or
sub
inc
aad
clc
pop
xadd
sbb
hlt
iret
jle
popf
lcall
push
imul
rclb
dec
pop
push
jp
mov
or
pop
cmp
dec
mov
into
pop
mov
jg
in
cmp
sub
xchg
jl
aam
out
inc
mov
sbb
add
and
jecxz
std
inc
ljmp
xchg
stc
pop
inc
popa
pop
mov
mov
mov
add
push
mov
data16
cli
push
xor
and
pusha
call
mov
inc
aad
inc
or
popa
mov
add
stc
jg
cmp
lcall
imull
pop
leave
push
jo
mov
movsb
jnp
xlat
add
cmp
push
fwait
icebp
rcrb
cwtl
enter
or
ss
jns
jno
and
cmp
loop
cli
lahf
mov
movsl
leave
mov
cmp
cld
push
and
std
fbld
jle
and
xchg
and
mov
scas
addr16
pusha
inc
call
pushf
das
jmp
pop
out
sbb
repnz
push
in
cmp
mov
xchg
mov
mov
pop
mov
aas
andb
call
cmpsl
push
mov
jmp
jmp
cmp
mov
sbb
outsb
mov
aad
scas
jo
in
lds
iret
cltd
je
add
push
mov
mov
sahf
sbb
inc
and
ja
inc
les
add
mov
std
aas
jge
jp
jnp
testl
pop
pop
and
inc
dec
jge
icebp
test
ss
pop
mov
mov
and
jmp
stos
in
dec
inc
dec
add
outsb
dec
loopne
pop
enter
adc
xchg
in
scas
cmp
mov
fmul
and
pop
mov
sub
add
leave
out
call
mov
mov
jno
push
lret
das
scas
inc
push
xchg
pop
add
jp
or
mov
out
cmpl
inc
sarl
sti
dec
ja
cmp
int3
fmulp
jl
inc
sarb
loopne
mov
outsl
in
jle
cwtl
sbb
vmulsd
sbb
ficomps
xchg
mov
jge
ss
stos
insl
cs
jns
inc
adc
inc
fwait
lret
mov
cmp
or
scas
push
sbbb
shl
shll
jg
push
and
dec
je
ds
mov
jne
sysret
sbb
adc
jno
jnp
jno
iret
shll
or
pop
cltd
mov
cmc
mov
jae
push
sti
lea
push
loopne
in
aas
shlb
loop,pn
mov
out
sub
xchg
jmp
lds
mov
add
jno
outsb
jle
add
arpl
cmp
cld
loopne
pop
dec
into
add
into
arpl
std
xor
rcl
cmp
call
shrb
xchg
xchg
adc
stos
mov
cld
mov
movb
bound
fiaddl
mov
mov
movsb
ficoms
ret
cmp
pop
xchg
outsl
mov
aam
jns
mov
sbb
test
xchg
xor
mov
pop
sub
pop
mov
push
cmpsb
aad
das
jb
ret
push
jbe
mov
test
pop
cmp
push
and
neg
test
loope
fdivrs
popa
call
lahf
dec
shl
push
imul
mov
mov
push
cld
sbb
adc
jge
jmp
int3
lock
jge
shl
loope
xor
pusha
outsb
lods
and
fcompl
cld
dec
popf
jle
add
clc
cmpsl
insb
jp
test
movsb
push
in
das
mov
adc
stc
mov
sub
xchg
push
add
push
dec
cmp
push
mulb
call
adcb
pop
push
sub
xorb
enter
pop
pusha
es
outsl
inc
jmp
xchg
in
dec
xchg
cmp
push
and
jp
jmp
mov
xlat
dec
imul
push
pop
pop
jle
or
xchg
mov
dec
leave
lret
sub
jmp
outsb
inc
pop
push
scas
xor
ljmp
fwait
pop
cmp
mov
sub
das
or
mov
cmp
jl
andb
mov
into
mov
xchg
and
cltd
xor
jmp
cld
push
scas
mov
jmp
add
adc
mov
sub
orb
jecxz
rol
repnz
add
lods
enter
fisttpll
adcl
ds
lret
sbb
xchg
sub
jg
mov
je
ficomps
cwtl
or
cld
dec
ds
dec
lock
push
cld
add
add
sub
or
jmp
adc
push
fmuls
popa
mov
cld
or
cmpsb
das
or
or
sub
and
dec
cltd
jbe
cmp
cmc
test
jecxz
pop
jae
shlb
insl
fs
sbb
icebp
add
xchg
out
das
lret
adc
rcr
jns
nop
or
enter
js
pop
xchg
movsb
stos
xor
je
or
into
iret
adc
pop
push
pop
sahf
xchg
xchg
int
cmpl
mov
cmp
loopne
pusha
stos
or
shlb
push
lds
add
dec
movb
fdiv
ret
dec
insb
add
dec
jnp
push
rcrb
scas
mov
enter
lret
xchg
push
sti
pop
out
cli
test
jg
push
inc
fildl
cld
fcmovu
hlt
les
fnstenv
ss
and
sbb
cld
fidivrl
jnp
pop
out
pop
add
add
out
js
jb
xlat
jge
push
les
sbb
mov
rorl
cmp
mov
dec
in
ret
jle
sub
xor
xchg
cwtl
mov
xchg
fdivrs
mov
int3
ljmp
fsubr
xchg
lods
push
pop
ja
ljmp
add
sahf
push
loopne
pop
jbe
pop
push
inc
fxch
sbb
nop
std
repnz
imul
pop
and
enter
mov
leave
pop
enter
sarb
push
jno
call
mov
push
in
jp
imul
jnp
xor
adc
test
xor
cld
sahf
push
inc
out
and
and
xchg
orb
loope
fs
shlb
inc
mov
xchg
mov
mov
jb
scas
pop
mov
out
dec
stos
sbb
xchg
pushf
add
lds
aas
in
inc
int
ret
popf
int
rorl
or
clc
and
mov
repnz
popf
int
mov
adc
mov
xchg
cmc
cmp
push
sbb
call
mov
sbb
cltd
std
cmp
addl
bound
arpl
inc
fstpl
lods
adc
and
cmp
ds
xchg
sbbl
jg
xchg
jo
fucomip
or
in
mov
mov
xchg
imul
or
ffreep
sub
icebp
inc
mov
outsb
xchg
mov
aaa
adc
hlt
pop
push
fiadds
jmp
adc
fcomi
loop
mov
outsl
daa
dec
mov
ja
repnz
aam
and
lds
xorb
xchg
xchg
jp
pop
cld
or
int3
jg
mov
add
mov
push
repnz
fs
imulb
xor
mov
xor
push
pop
fcomp
pop
push
in
outsb
sbbb
in
jecxz
push
insb
mov
jp
movsb
cmpsl
xchg
outsl
mov
mov
popf
mov
xor
data16
dec
push
repnz
push
movsb
test
arpl
jl
mov
int
mov
pop
cmp
rorb
fsubrs
sbb
out
insb
or
sub
hlt
popa
cmp
cld
dec
or
pop
cmpsb
jge
mov
outsl
aam
imul
loope
fists
loop
sarb
popf
incl
xor
das
ret
fwait
push
scas
arpl
sbb
jle
pop
leave
mov
cmpsl
ds
testb
xchg
je
outsl
gs
ficomps
call
aas
mov
outsb
ja
push
mov
sbb
xlat
hlt
cmpsb
icebp
pop
sbb
push
mov
icebp
xchg
pusha
stc
cmc
movb
mov
and
sub
lods
push
out
or
add
insl
cmp
lds
dec
pushf
cmp
lds
cs
and
je
mov
lret
and
sbb
jne
cli
and
aaa
push
jae
xchg
pop
mov
enter
mov
mov
fisttpl
into
xor
dec
testl
dec
es
nop
fdivl
movsl
aas
orl
lds
inc
inc
push
bound
and
call
sbb
mov
xlat
addr16
jmp
dec
add
sbb
call
outsl
insl
sbb
leave
push
in
dec
in
insb
dec
fidivrl
sbbl
cmp
cld
and
insb
cmp
sbb
jae
pop
dec
pop
out
mov
push
rcrl
fst
push
bound
out
adc
enter
jl
sbb
clc
mov
jmp
add
or
or
gs
shll
sbb
or
jle
andb
sbb
stos
out
or
repnz
popa
mov
aaa
imulb
test
les
lret
push
jmp
or
mov
push
imul
mov
mov
inc
out
xlat
sarb
jle
cmp
scas
mov
out
mov
dec
ss
repz
lret
in
out
pop
dec
add
shll
repnz
stc
bound
stc
shl
push
cmpsb
push
mov
ret
cmpxchg
jl
mov
es
fcoms
fildll
inc
pop
fcompl
push
in
and
sar
or
mov
and
xor
fstpt
es
mov
mov
out
mov
ds
jecxz
sub
scas
lret
test
pop
negb
lock
pop
mov
mov
xchg
jmp
rcrb
mov
clc
xchg
push
ja
addr16
jbe
push
test
xor
popa
lcall
or
push
pop
xchg
fmul
iret
jmp
mov
arpl
rcrl
xor
inc
pop
nop
je
loope
cmp
test
xlat
out
or
js
jnp
pushw
sbb
adc
and
or
repz
inc
and
clc
jae
jmp
mov
xlat
mov
push
scas
and
adc
mov
xchg
xor
adc
jg
stc
jae
fwait
cmp
flds
cmp
add
mov
inc
pop
cmpb
xchg
and
in
out
aaa
rolb
pusha
inc
test
pusha
xor
jl
adc
fistps
lahf
and
jne
sahf
enter
insb
lods
dec
scas
dec
je
bound
repnz
dec
pop
pop
inc
jbe
lds
xchg
stos
dec
pop
xorb
push
test
orl
nop
sbb
sbb
push
iret
sub
ror
fs
insb
jecxz
int
fnsave
and
jl
mov
test
mov
test
sub
jl
insl
ret
or
mov
pop
pop
jecxz
or
stc
and
cmp
outsb
cmp
ret
xchg
lret
cmp
xor
test
loop
xchg
and
decl
adc
lock
cli
mov
dec
sti
bound
ret
stos
mov
adc
fcomps
rorb
or
and
mov
mov
cld
dec
xchg
inc
mov
mull
jl
iret
dec
insl
and
inc
add
arpl
push
pop
repnz
inc
push
cltd
pop
jae
pop
xchg
outsl
daa
xor
push
std
adc
divb
aad
rclb
jmp
shlb
dec
stos
mov
jnp
pop
xchg
sub
movsl
cmpsl
jmp
out
xchg
inc
or
fnstcw
sahf
mov
clc
frstor
data16
push
rorl
and
inc
movsl
pop
ret
sti
jg
insl
mov
xchg
and
seto
xor
mov
sub
and
enter
jae,pn
push
stos
adc
js
lahf
jle
mov
add
pop
jp
loope
push
lea
ja
sbb
loop
pop
dec
xor
aaa
mov
add
jne
jae
insl
outsl
mov
pop
aam
loopne
int
into
sti
inc
dec
lds
mov
pop
enter
inc
lahf
popf
repnz
repnz
lret
adc
jecxz
jecxz
sbb
jo
cmp
jl
mov
sub
dec
push
stos
push
adc
in
dec
mov
cmc
data16
in
jmp
fwait
adc
arpl
push
cmova
sbb
mov
jae
imul
mov
cli
inc
jle
ficomps
outsl
adc
sub
or
in
xorl
mov
movsb
lcall
mov
mov
ss
sub
jns
adc
mov
adc
mov
mov
push
push
dec
mov
out
in
cmp
in
fisubrs
ret
test
sub
adc
flds
js
xor
push
iret
add
xor
loop
jl
adc
mov
fsubs
mov
cmp
push
inc
insl
adc
xchg
clc
mov
test
add
or
cmp
movsl
and
xor
les
xor
jnp
jae
ds
adcb
sbb
sbb
xor
mov
sbb
cmpb
sub
call
or
add
push
dec
test
adc
xchg
ret
test
xlat
jns
dec
imul
ja
cmp
jg
cmc
outsb
aaa
test
lret
sub
outsb
pop
mov
scas
fsubl
sub
push
or
int
adc
aas
fxch
rorb
cli
outsl
push
cltd
add
push
es
enter
cmpsl
jecxz
add
or
push
pop
test
mov
aam
mov
jns
inc
in
xchg
out
in
in
test
std
cmp
lods
leave
loop
and
sub
lcall
movsb
push
repnz
dec
test
sti
dec
mov
cmp
xchg
arpl
repnz
lcall
pop
js
fisttps
jmp
xor
xor
xchg
mov
jmp
fdivp
sti
xchg
outsl
jbe
in
push
in
mov
push
inc
out
adc
test
jge
das
jae
xchg
xchg
cmp
or
fcoms
or
push
add
dec
aam
lods
adc
sti
shlb
xchg
incl
out
jp
test
mov
add
out
mov
add
mov
icebp
into
sahf
pop
cli
lds
ljmp
dec
jo
in
and
stos
sub
add
dec
cltd
xchg
in
pusha
gs
scas
sub
xchg
lods
dec
in
add
addb
pushf
and
fistpl
int3
sbb
daa
jo
adc
repnz
dec
cli
into
hlt
fidivs
cltd
repz
push
outsb
push
and
mov
jmp
mov
stc
movsl
xchg
popf
adc
xchg
xchg
jg
mov
jns
out
test
cs
pop
sarb
aam
push
push
in
subb
dec
mov
in
add
insl
or
imul
push
in
nop
pop
add
adc
scas
and
xchg
sbb
call
xchg
mov
vcvtsi2ssl
adc
movsl
leave
lods
imul
lret
fcomps
imul
into
rol
test
rcrb
add
push
movsb
cltd
xor
das
add
scas
jne
jle
dec
in
fcomps
and
repnz
lret
sbb
push
cmp
aad
mov
test
cmp
in
out
fldenv
jl
out
inc
push
push
cmp
inc
std
jmp
das
sbb
push
sbb
xchg
push
stc
sub
push
sub
sbb
icebp
rolb
dec
cmp
addb
scas
mov
movsb
xor
push
and
cmc
sbb
je
sub
adc
aaa
cmpsl
xlat
dec
mov
sti
cltd
sbb
push
into
jmp
xor
adc
sub
xchg
dec
push
je
idivb
and
ss
ret
repz
push
inc
sub
mov
lret
scas
sub
pop
insl
lods
dec
dec
or
arpl
decl
ss
mov
fisttps
jne
xchg
es
xchg
out
add
jae
js
xor
js
xlat
adc
sahf
sbb
xor
add
and
jge
adc
push
jo
aaa
dec
xchg
pusha
xor
movsb
into
cmp
out
mov
fs
mov
push
popa
dec
je
inc
in
cmc
sub
mov
outsb
pop
mov
mov
movsl
in
jnp
mov
stc
arpl
outsb
insb
daa
mov
cwtl
sub
mov
loopne
pop
add
lock
xor
insl
in
push
mov
outsl
bound
pop
stos
push
sub
rol
cld
lea
int3
pop
mov
fdivp
xchg
sbb
mov
inc
ja
mov
lods
cmc
sbb
mov
adcl
les
mov
lock
rorb
sar
dec
outsl
fidivs
pushf
mov
adc
int3
or
or
jmp
shrl
push
call
imul
xor
cmpsl
sub
fisubl
sub
mov
int
adc
pop
lock
xor
sbb
mov
push
inc
or
sub
and
popf
pop
sub
jmp
xor
and
cmp
dec
pusha
out
pop
outsl
sbb
pop
daa
sti
stos
aas
dec
daa
pop
mov
mov
popf
xor
lret
cs
inc
and
mov
push
sub
sbb
jl
aaa
dec
add
push
xor
push
jne
daa
stc
dec
or
sbb
ljmp
aas
shlb
adc
fnstsw
rsm
mov
sub
dec
jl
pop
inc
stc
or
setp
jbe
dec
scas
scas
lods
cmpsb
popf
cwtl
in
cmp
dec
xor
imul
int
add
cmpsb
mov
call
sub
stos
in
sbb
loop
lahf
mov
repnz
fcom
mov
mov
mov
aas
mov
cmp
in
stc
icebp
mov
iret
subb
fstpt
jle
dec
and
mov
mov
mov
lods
and
insb
js
lods
add
test
out
jnp
xchg
mov
mov
or
inc
scas
sub
cmp
enter
stc
jmp
mov
xor
cmpsb
sub
fidivs
test
mov
in
ret
add
scas
inc
push
dec
xor
sbb
add
aad
add
lock
fucomp
add
mov
outsl
xchg
cli
jle
repnz
lcall
int
cmp
into
pop
xor
cmp
pop
sti
repz
push
pop
push
mov
or
aas
ja
sbb
sbb
sub
mov
shll
negl
fwait
pop
data16
lahf
sub
xchg
push
mov
aad
add
lret
xlat
test
out
ljmp
push
les
jle
xor
roll
aad
popa
mov
mov
pop
icebp
mov
pop
out
dec
cltd
mov
loop
stc
push
xchg
xchg
xchg
cltd
pushf
cmp
xor
push
pusha
cmc
add
dec
jns
xor
and
in
inc
pop
sti
or
insb
xor
and
xor
sarl
idivl
dec
mov
cmp
mov
test
ss
jmp
pop
repz
and
adc
aas
mov
xlat
fdivl
pop
jmp
mov
pop
lock
mov
jg
fidivrl
clc
cmp
push
push
adc
push
outsl
adc
mov
adc
xchg
sub
jmp
aam
or
cmp
push
lret
push
rorb
dec
dec
ds
mov
push
movsl
xchg
in
sbb
popf
dec
jae
cmc
xor
sub
repnz
scas
jbe
pop
push
cmp
stos
addr16
pop
filds
pop
sub
xchg
inc
aas
push
out
outsl
push
and
stos
lods
mov
sbb
iret
inc
movb
mov
cmc
cmp
jno
mov
outsl
push
jge
push
test
test
dec
sub
cmpsb
test
in
vphaddbw
enter
and
cld
adcb
xchg
mov
adc
sbb
fs
pop
add
scas
lds
push
sub
xchg
adc
xchg
and
hlt
les
pop
or
aam
imul
cltd
sbb
jmp
iret
jo
inc
lcall
jmp
pop
mov
push
repz
clc
pusha
imul
ljmp
js
adc
fwait
outsl
xchg
adc
test
jns
mov
xchg
pop
cmp
push
roll
inc
lret
shrb
nop
mov
in
push
push
dec
out
bound
or
pop
movl
inc
or
roll
and
or
cmp
sub
ficoms
sbb
push
aas
out
dec
pushf
cmpsl
stc
insb
mov
mov
pextrw
pop
pop
push
cwtl
data16
cmp
cmp
out
imul
add
mov
push
lods
sbb
mov
insl
sahf
loop
ss
div
mov
mov
or
jnp
outsl
jo
insl
sub
shr
adc
inc
push
mov
sbb
ljmp
pop
mov
add
stc
mov
and
dec
sbb
lock
jns
cmp
mov
ds
jecxz
scas
and
aaa
mov
mov
push
fsubp
add
mov
inc
leave
lds
xchg
cmc
sub
mov
data16
xchg
in
jb
xchg
cwtl
aad
or
xlat
xchg
jb
or
shrl
cwtl
dec
fnstsw
xorb
imul
pop
std
aaa
jl
fistpll
outsb
pop
mov
jbe
jbe
sti
push
ud2
out
dec
adc
dec
jns
filds
xchg
dec
scas
cli
imul
outsl
loope
mov
test
rorl
cli
sbb
out
dec
aad
icebp
pushw
stos
pop
les
imul
dec
aas
movsl
sbb
jne
jecxz
and
ret
mov
das
aaa
popf
insl
adc
int
int3
stos
jp
xchg
mov
dec
ljmp
and
das
shlb
mov
pop
push
xchg
push
inc
mov
inc
adc
stos
pop
jb
pusha
xchg
test
push
mov
jns
pop
xchg
stos
jno
and
dec
js
jmp
call
aas
mov
lcall
fdivrl
pop
adc
leave
jmp
repnz
scas
mov
adc
shlb
ret
shl
das
cld
sub
iret
lcall
sbbl
ljmp
nopl
jno
das
popa
mov
cli
repnz
cmp
sbb
cmc
xchg
sbb
push
out
sub
in
jmp
jns
mov
mov
ja
mov
notl
pushf
inc
pop
loopne
divl
mov
add
adc
hlt
push
insl
dec
cmp
jp
or
cld
xor
cmpsb
ds
dec
pop
cmp
adc
xchg
fsubrs
gs
sub
das
int3
push
jne
int
bound
sbb
jae
xor
jle
scas
sub
incb
fwait
mov
ss
xor
idivb
sarb
sub
lods
add
pop
pusha
mov
dec
cmpxchg
mov
out
sti
adc
push
push
in
psrad
adc
or
sbb
in
mov
pusha
enter
lcall
cmp
pop
sub
and
loop
aas
mov
js
cmp
add
or
test
int3
mov
cmc
loop
aaa
repz
sub
jns
pop
push
lcall
div
sar
lcall
icebp
mov
dec
out
adc
subb
xor
iret
pop
dec
sub
push
cld
insl
imul
pop
pop
xchg
not
sbb
ljmp
or
shlb
xchg
je
push
movsl
mov
rolb
test
cmpsb
mov
cmp
lcall
arpl
shlb
dec
mov
jae
mov
out
pop
add
xchg
jle
loope
test
xchg
sbb
lods
mov
pop
add
frstor
push
cld
cmp
sub
cmp
xor
dec
xor
cmpl
outsl
jb
fisttpl
mov
mov
repnz
cmp
in
ja
fnstcw
jnp
jo
aam
pop
clc
xor
insb
cmp
divl
mov
xor
repz
sub
nop
and
jno
cmpsb
push
lret
les
pop
dec
adc
inc
push
outsl
out
or
aad
cld
xor
xor
stc
or
inc
mov
mov
arpl
and
mov
fisubrl
pop
push
cmp
mov
sub
test
sbb
cs
jb
into
out
dec
loopne
lea
adc
mov
cmp
idivb
stos
or
aam
dec
into
out
popf
and
mov
mov
pop
adc
sbb
popf
pop
movsl
pusha
pop
shl
dec
jbe
divb
pop
scas
pop
pop
daa
outsb
data16
push
mov
imul
imul
imul
shlb
adc
sub
mov
cmp
cltd
mov
decl
mov
inc
sub
rorb
xor
push
push
or
lods
mov
push
roll
mov
or
pop
in
sti
pop
jae
and
dec
pusha
fnstenv
push
inc
mov
and
push
push
jb
mov
imul
data16
adc
fidivl
pop
es
and
sbb
or
icebp
dec
pushf
test
fprem1
frndint
roll
add
pop
dec
dec
test
test
aaa
aaa
push
xchg
push
sbb
push
mov
imul
pop
ret
or
shrb
mov
pop
lahf
xchg
aas
xor
fcmovne
outsb
shlb
pushf
jmp
lcall
adc
icebp
jecxz
fstps
jmp
outsb
push
mov
jge
mov
pop
out
loope
sbbb
adc
or
push
iret
or
lock
dec
fisttps
ss
insl
mov
cmc
and
pusha
out
mov
int3
imul
es
in
sbb
push
xor
xchg
cwtl
jbe
cs
adc
mov
adc
mov
cmp
aam
add
sub
inc
jl
mov
inc
jns
inc
dec
pop
inc
iret
adc
and
sti
mov
das
jns
js
jecxz
iret
subb
sar
out
sbb
lds
gs
inc
aad
push
xchg
adc
add
xchg
outsb
fbld
mov
mov
data16
sub
arpl
jg
insb
mov
scas
or
das
add
xchg
nop
mov
sbb
stos
pusha
movsb
jae
mov
inc
sub
mov
movsb
mov
jle
dec
add
test
xor
push
int
hlt
mov
sbb
fcompl
dec
adc
or
jge
adc
addb
xchg
jno
mov
jmp
ret
pushf
add
aas
shrl
mov
cs
aam
xor
scas
push
jg
sbb
jns
out
jns
insb
popf
jb
jo
xchg
mov
jg
jo
cmp
push
jle
xlat
or
lods
mov
fistl
jmp
jl
xor
pop
mov
jnp
jo
mov
sub
pushf
mov
fldcw
adc
lds
jns
push
add
xchg
inc
add
cwtl
addl
push
inc
push
xchg
filds
in
inc
mov
dec
int
cmp
push
gs
je
push
dec
sbb
stos
sub
dec
test
cmpsb
ret
add
push
jp
cmpsb
mov
lar
xchg
lea
cmp
add
xchg
pusha
dec
mov
repnz
ficoml
adc
std
or
cli
iret
push
or
out
lds
scas
sbb
mov
push
ljmp
or
out
into
out
fdiv
js
adc
mov
mov
adc
test
in
frstor
dec
mov
nop
push
ds
arpl
rolb
xor
lods
pop
xor
sbbb
mov
fsub
push
lret
xchg
sub
ds
sbb
repnz
das
cmp
sbb
cmp
aaa
pop
roll
pop
es
cmp
imul
cltd
outsl
out
adc
call
mov
insb
push
dec
sti
mov
sbbb
pop
fdivrs
lret
sti
xor
sbb
imul
out
push
cmpb
ret
in
cmp
mov
lahf
add
ret
ja
repz
fcoml
and
xor
mov
popa
push
icebp
cltd
ds
push
push
in
xor
cli
sbb
cld
lea
jle
imul
push
push
mov
add
roll
in
xor
andb
out
rclb
fsubrs
dec
sub
sbb
call
hlt
xor
icebp
popa
sub
mov
outsb
xchg
cmp
xchg
mov
push
or
stos
xchg
ss
push
pop
lcall
pop
push
and
sbb
sub
or
mov
out
roll
ficomps
push
orb
adcb
dec
repnz
movsb
mov
leave
nop
adc
or
imul
lds
mov
hlt
cmp
cmpsl
sub
dec
dec
add
stc
inc
fadds
outsl
dec
or
add
jl
inc
inc
sub
mov
mov
adcl
aam
ljmp
cmp
mov
push
push
loope
shrb
jg
lea
in
mov
cmp
sbb
lcall
movsb
pop
loopne
xor
je
mulb
ret
mov
dec
lcall
jge
in
fbld
xchg
sub
jl
and
and
mov
mov
mov
add
sahf
mov
mov
mov
ja,pt
inc
jmp
add
mov
push
cmp
mov
jno
or
push
inc
mov
mov
outsl
lret
loope
jae
jno
call
push
outsl
popa
lods
pop
les
push
cs
and
sub
dec
vhaddpd
insl
jmp
out
xchg
add
sbb
adc
stos
pop
repz
cs
mov
lret
or
inc
fsubl
jecxz
cmp
xor
xor
jp
in
daa
mov
sub
pop
std
pop
mov
arpl
add
mov
int
xlat
cld
scas
jbe
jne
xor
push
mov
or
add
hlt
jns
test
and
dec
mov
insb
cwtl
cld
push
in
stos
int
cltd
sub
xor
in
inc
outsl
cmc
xchg
cmp
lcall
jl
add
lods
mov
or
sub
xor
je
pop
ss
dec
sub
push
nop
mov
push
ds
rcr
xchg
mov
in
xchg
add
fidivrl
pop
pop
sub
std
push
push
mov
and
or
icebp
dec
xchg
loop
cmp
stos
inc
inc
in
xchg
push
xor
ja
rclb
lret
ficoms
sub
pop
fnsetpm(287
adc
push
mov
jns
pop
dec
mov
imul
dec
scas
jb
gs
jle
xchg
pop
mov
adc
fstps
mov
and
xchg
imul
stos
pop
xor
nop
das
pop
test
xor
test
mov
sub
adc
inc
sbb
xor
mov
jb
inc
in
xor
mov
mov
pop
dec
add
dec
cmpsb
rcrb
xchg
sub
dec
divl
inc
ljmp
push
mov
cmp
mov
push
or
dec
or
cmp
loope
adc
xor
jp
ja
psrld
loopne
jecxz
push
xchg
out
pop
sub
or
add
mov
shrb
mov
rclb
ficomps
push
jecxz
or
adc
xor
aam
scas
xchg
imul
pop
sub
jmp
cmp
adc
pop
bound
adc
ss
shrb
cmp
out
je
jmp
addr16
push
jmp
adc
jo
adc
negb
fisubrs
inc
stos
out
or
test
addps
or
out
test
mov
outsb
push
inc
sbbl
xchg
xor
pop
movl
inc
xchg
xchg
pop
fsubr
loopne
mov
in
data16
jg
lods
adc
sbb
dec
dec
jns
add
imull
dec
lds
inc
dec
sbb
mov
cmp
inc
and
daa
std
push
jle
add
mov
push
add
inc
cli
xchg
pop
xchg
or
cmp
or
mov
lahf
jle
js
iret
fnstsw
call
xchg
add
lock
std
xor
cmp
sbb
popa
scas
iret
mov
fcoms
dec
aaa
aad
iret
add
xchg
hlt
rcrb
loop
out
xor
pushf
xchg
cwtl
insl
test
cli
adc
xor
dec
jle
fdivr
pop
xor
sbb
hlt
inc
idivb
mov
nop
and
pop
dec
loope
xor
pop
sub
mov
mov
lret
std
rcrl
gs
jl
aad
push
cmp
scas
inc
adc
repz
push
movd
shll
pop
scas
push
mov
stc
rorb
aas
aad
fs
movsb
aas
icebp
jnp
cld
or
stc
adc
sbb
hlt
lods
jo
addr16
fldt
push
shrb
adc
or
cmp
in
pop
dec
sub
lods
scas
ja
gs
lcall
inc
cli
dec
jecxz
add
add
ret
fbstp
imul
addr16
push
sbb
mov
xchg
orb
fwait
pop
subb
inc
cmc
ds
es
aaa
lahf
xor
out
xchg
mov
shlb
ja
xor
stos
movsl
mov
out
mov
push
es
xor
mov
insb
imul
rcll
xor
sub
or
inc
repnz
sub
rol
and
xchg
sub
mov
ja
xchg
rcll
sub
ficoms
repz
cwtl
in
out
and
lret
and
add
aam
cmpsl
out
repnz
ret
insl
cld
mov
ja
filds
mov
jl
push
negb
in
jae
dec
aas
add
and
mov
adc
xchg
fsubrs
cltd
jmp
lods
popa
ret
and
fstp
inc
cli
jae
movsl
sub
stos
push
ds
mov
pop
or
mov
pop
and
cmp
add
sti
mov
mov
aas
cld
outsb
dec
xor
lret
mov
repnz
mov
movsb
bound
xchg
or
push
cmovb
imul
inc
pusha
mov
dec
adc
mov
lods
imul
outsl
mov
pop
xchg
xchg
rclb
mov
mov
xor
xor
insb
jne
mov
dec
sub
and
jge
and
xchg
and
sbb
add
xchg
popa
cmp
mov
std
sub
fwait
pop
mov
data16
dec
sbb
push
mov
pop
popa
cmp
ret
lock
data16
jno
dec
lret
jle
xorb
adc
fdiv
add
ljmp
jo
lcall
jp
jge
or
sbb
cmc
add
push
push
xor
dec
fildl
or
and
push
cmp
enter
mov
xchg
mov
aam
mov
xor
mov
jno
sbb
xor
mov
fstpt
xor
mov
push
and
jnp
stos
call
pop
jg
push
push
xchg
addl
idivb
lret
xchg
jl
gs
rcr
xor
sbb
cld
xchg
adc
mov
fists
xchg
xchg
push
je
mov
fldenv
or
ret
jge
test
mov
push
aad
jns
fdiv
mov
std
dec
xor
pusha
push
arpl
call
outsl
aaa
daa
mov
sbb
xchg
aad
sbb
aas
adc
lds
jnp
call
sbbb
sub
clc
xor
jne
outsb
loope
jno
enter
xchg
push
clc
std
sbb
inc
outsl
add
rclb
mov
aad
and
add
fisttps
push
push
jmp
sbb
stc
or
insb
fstps
pop
cmpsl
roll
andb
xor
inc
and
mov
push
cmc
cmp
movsl
int3
ret
xchg
orl
push
cmp
cs
cmp
outsl
cwtl
mov
jge
mov
pusha
add
mov
pop
decb
je
or
ds
inc
movsb
dec
cmp
cld
adc
pop
add
pop
pop
inc
out
inc
push
or
les
cmp
jnp
inc
sub
pop
sbb
xchg
test
stos
adc
cmpsl
cwtl
mov
sbb
push
repnz
out
and
push
xor
dec
and
subl
loopne
push
aam
or
mov
dec
jb
mov
push
sbb
insb
xchg
lock
push
push
ljmp
rclb
add
nop
and
dec
cmovle
repz
mov
cmp
std
or
stc
mov
jo
mov
ret
fwait
addr16
sbb
fsubrs
push
jp
ljmp
jl
push
jp
cli
jecxz
rclb
cwtl
xor
add
pop
loope
cmc
pop
iret
arpl
repnz
add
mov
repnz
cmc
stc
xchg
out
hlt
ret
sub
mov
scas
jge
addr16
lods
fwait
mov
inc
xchg
inc
adc
cltd
mov
cmp
loope
adc
aam
xor
mov
xorb
dec
mov
xlat
push
sub
xor
mov
dec
pop
mov
push
pop
mov
les
mov
icebp
loop
or
cwtl
nop
ret
data16
lcall
push
sahf
jae
roll
std
dec
cmc
mov
xchg
insb
ds
push
and
clc
pop
andb
loope
sub
repz
xor
in
jb
daa
fcmovbe
into
mov
and
adc
aam
mov
scas
mov
dec
sbb
jns
in
xor
or
pushf
jno
sbb
push
test
xchg
mov
push
ljmp
iret
cmp
je
cmp
jmp
mov
dec
xor
sti
add
int
pop
cmp
imul
push
jmp
pushf
push
clc
or
cmp
pop
mov
mov
notb
aam
popf
clc
cmpb
dec
pop
push
out
push
and
pushf
xchg
sub
cld
push
in
sub
mov
hlt
adc
jo
pop
mov
test
shl
jnp
push
dec
ror
daa
mov
fsubl
in
sarl
mov
fbstp
inc
xchg
pop
sbb
jae
addr16
mov
bts
shll
pop
setg
mov
popf
jns
les
pop
cmp
mov
cltd
jle
cmp
fistpl
push
popf
xchg
out
mov
jb
push
lret
push
xor
jns
subl
inc
and
jl
dec
jnp
test
mov
fsubrs
push
inc
mov
adc
ret
arpl
or
mov
loop
or
hlt
jmp
repnz
sbb
push
loop
loopne
adc
popf
dec
iret
inc
xor
aad
loop
popf
fildll
js
add
data16
mov
jg
push
int3
andb
out
ja
pop
gs
popl
jp
sbb
push
sbb
mov
repz
fnstenv
jle
repnz
stos
or
std
shll
or
sbb
adc
mov
std
mov
mov
mov
out
ja
mov
pop
xor
pop
aad
int3
adc
xchg
subl
cmp
or
fnstcw
insl
mov
and
imul
jb
fldl
and
cmp
cmp
pop
fisubrl
aam
inc
xor
gs
stos
aas
in
mov
jp
lods
std
and
xor
lock
push
lods
test
mov
mov
and
mov
cmpl
or
dec
enter
push
loopne
xlat
std
mov
cmp
insl
sub
sub
mov
or
xor
loop
xlat
mov
les
cltd
xor
ss
add
xchg
incb
sbb
sti
pop
add
xlat
pop
dec
jnp
rcl
sbb
popf
adc
pop
xor
ja
and
imul
sub
shrb
pop
pcmpeqd
shll
and
push
mov
mov
pop
or
cmp
jle
cmp
mov
mov
add
push
sub
mov
mov
dec
cmp
repz
test
mov
cmp
push
lcall
and
loope
inc
xchg
incl
stos
push
out
inc
push
testl
shrl
icebp
pop
sbb
lock
repz
jle
fnsave
inc
pop
cmp
movb
in
dec
test
lods
sbb
sub
cld
xor
adc
mov
add
fnsave
add
cli
and
test
jecxz
mov
cli
nop
enter
xchg
repnz
add
mov
lea
pop
cltd
cwtl
iret
push
sub
lock
cld
rcl
mov
jbe
fwait
inc
sub
jne
push
stos
rclb
pop
jno
call
lds
jmp
sbb
jae
mov
dec
mov
add
mov
dec
clc
js
pusha
repz
insb
fmuls
and
nop
inc
and
add
js
aad
cltd
pushl
inc
mov
xor
popl
mov
mov
jle
es
bound
jb
pop
adc
add
adc
jecxz
aas
in
mov
xor
sub
std
loope
int3
imul
jge
movsb
subb
mov
inc
and
ljmpw
hlt
testb
js
ss
incl
sbb
std
mov
cmp
es
add
xchg
push
mov
out
mov
fsubr
out
adc
sbb
pop
out
xchg
jno
out
or
pop
add
imul
push
ret
loopne
fisttps
lret
fstl
imull
rcl
movsl
inc
and
out
xchg
loope
pop
testl
clc
pop
ljmp
lahf
pop
jo
hlt
pop
dec
jb
jbe
daa
ret
mov
fistl
in
dec
jle
xchg
jns
cmp
mov
jb
dec
leave
pusha
pop
cmp
imul
adc
ss
or
mov
ss
out
mov
rorl
cmp
mov
test
aas
fwait
cmp
lahf
pop
test
adc
loopne
cltd
push
or
stos
mov
pop
push
jmp
pop
mov
shll
xchg
cmp
cmp
pop
add
or
sbb
dec
xchg
pop
push
aad
imul
subl
imul
pmuludq
push
xchg
sbb
ljmp
ret
mov
adc
out
imul
mov
stos
sarb
jno
movsl
dec
inc
cltd
dec
add
pop
repnz
sub
insl
jb
pushw
test
jmp
adc
rol
pop
test
out
rcl
xlat
mov
xlat
std
leave
mov
pop
sbb
jl
xchg
test
adc
adc
mov
daa
sbb
cmp
rcrb
xchg
incb
popf
add
ret
inc
or
dec
mov
pop
std
subb
mov
xor
scas
push
fidivl
sub
cltd
enter
cli
sbb
jg
jno
xlat
push
mov
sbb
ficoms
adc
fisubs
test
lock
or
arpl
mov
adc
js
frstor
pop
jp
or
pusha
mov
mov
lret
jno
add
add
imul
ja
shll
mov
pop
sbb
pop
inc
mov
lret
add
jnp
inc
imul
fstpl
sahf
pop
add
push
xchg
inc
shr
loopne
loopne
and
xchg
icebp
sbb
inc
dec
cmp
xchg
inc
lock
push
sub
xor
sub
or
or
jae
sub
fistl
mov
fstps
in
jl
push
lock
sub
cmpsl
jg
insl
iret
jle
dec
aad
sub
and
ds
out
insl
out
jo
sti
pusha
vmovlpd
mov
rorl
push
popf
push
or
push
pop
jle
aaa
sub
xchg
mov
jno
hlt
push
sub
std
pusha
pop
fcoml
xor
in
int
dec
push
lcall
xor
stc
fnsave
out
movsl
scas
xor
jg
iret
rol
repz
jg
pop
dec
mov
cmpsb
and
jecxz
or
add
inc
into
insl
push
xchg
insl
data16
dec
lods
or
movsl
dec
push
rcr
jp
xor
mov
cmpsb
insb
in
stc
lahf
xor
stc
xlat
push
jmp
daa
xor
and
pop
push
adc
xchg
aad
arpl
lcall
out
insl
daa
jmp
sub
push
fistpll
call
mov
icebp
cmp
dec
insl
sbb
in
mov
jg
scas
sbb
cmp
lret
fstp
imul
and
xor
test
jmp
mov
js
je
pop
sar
mov
out
sub
iret
cmpsb
lea
inc
sub
out
outsl
fldcw
pop
mov
add
inc
mov
fs
movsl
inc
jmp
popf
scas
ret
lahf
ds
adc
sub
cmpsb
ja
leave
lock
sub
pop
cltd
push
inc
inc
dec
inc
push
iret
jecxz
xchg
sbb
lods
fcmove
jg
xor
aas
pop
cmpsl
or
sbb
sub
inc
lcall
cmp
daa
jmp
sub
pop
dec
xchg
push
push
jecxz
push
in
lret
jge
mov
jg
xchg
lcall
scas
das
leave
out
loopne
mov
mov
repnz
aam
cmp
xor
arpl
leave
mov
test
cmp
pop
mov
shll
dec
inc
and
xchg
lahf
pop
test
jge
jo
pop
adc
rcll
sub
subl
in
shll
stos
adc
lock
jo
not
sbb
or
xor
add
pusha
loopne
xchg
stos
xor
testb
cmp
xchg
sbbb
or
mov
xchg
inc
xor
insb
lret
mov
into
or
jp
mov
aaa
mov
mov
lea
pop
push
testl
xchg
or
fadds
lahf
sbb
je
cmc
sub
inc
lock
pop
xchg
xchg
lahf
sbb
int3
cmp
stc
cmc
sub
fwait
aaa
cli
cmp
shll
jecxz
mov
sbb
mov
lods
jge
inc
aam
ret
push
push
jge,pt
fsubs
xchg
out
pusha
xchg
sub
cmp
ret
aad
jb
sbb
adc
and
adc
xor
das
push
pop
popa
push
mov
mov
sub
and
lret
jge
xchg
cmp
clc
and
lods
cmp
cli
mov
jb
iret
pop
mov
push
das
mov
xor
jo
bound
dec
jne
cmp
adc
mov
cs
fadds
sbb
andl
pop
pop
dec
mov
out
sub
jle
push
inc
lret
cld
xor
shrl
or
add
or
pushf
jp
std
add
sahf
nop
hlt
subb
into
out
fdivl
lea
dec
sbb
cmp
pop
lret
lret
xor
ret
jnp
popa
sbb
out
jecxz
shrb
cmc
ret
jnp
pop
cld
testl
jae
xchg
popa
test
imul
movsb
dec
sub
mov
cmc
call
or
xor
lods
jns
mov
add
cmp
mov
in
adc
ret
push
push
push
pop
int3
imul
aas
lea
inc
sarb
lds
rep
out
xchg
sbbl
subl
fists
jo
fwait
xchg
xor
jge
pusha
loope
test
and
push
push
je
mov
notl
ja
xor
xchg
mov
push
arpl
and
mov
pop
mov
cmp
xor
jne
out
clc
in
popf
adc
sub
mov
push
popa
add
dec
pop
or
push
cmp
dec
rcll
sarb
push
mov
sbb
sub
mov
sub
mov
mov
pop
iret
cmp
dec
cs
lock
and
mov
jno
jne
stos
and
pushf
jge
or
out
idivl
shlb
jno
in
mov
cmp
mov
mov
mov
xlat
dec
cmp
jmp
lret
out
mov
and
faddl
jb
popf
insb
sbb
dec
and
xchg
sub
ficoml
xchg
push
jo
push
lret
lods
pop
add
or
push
bound
inc
jp
xbegin
mov
rcrl
pop
fistl
sub
test
outsb
test
inc
fistpl
cmp
sbb
sub
add
outsb
add
pop
repz
lods
or
loopne
mov
xchg
lret
bound
je
push
xchg
and
mov
sahf
push
inc
mov
decb
inc
insb
iret
add
mov
cmpsl
push
sbb
inc
cmp
in
fnstenv
insl
cmp
xor
cwtl
stos
divb
xchg
push
jbe
sbb
mov
sbb
adc
xor
nop
shrb
pop
or
fsubl
dec
dec
push
aam
jecxz
sbb
cli
aad
push
push
pop
cmp
sbb
loopne
imul
mov
roll
cmp
sub
pushf
loop
sbb
je
mov
test
in
movsl
fld
in
xor
jl
nop
mov
aam
inc
ljmp
das
mov
leave
cmpsl
negb
add
mov
push
rorl
repz
iret
adc
hlt
sbb
sub
mov
cmp
pop
sub
fidivrl
add
lods
iret
adc
mov
cltd
mov
shlb
std
scas
ss
push
mov
mov
xchg
push
pop
rcr
mov
inc
push
cwtl
sbb
es
mov
mov
fcoms
push
stc
pop
sbb
push
pop
sti
sti
shr
andb
dec
fnstenv
cld
js
insl
clc
ds
mov
nop
mov
pop
fdivrs
gs
lret
mov
sbb
insl
arpl
jns
arpl
mov
fidivl
lods
pop
dec
cmc
add
in
inc
pusha
jp
jb
mov
and
cltd
imul
pop
xchg
cmpsl
cli
mov
push
mov
mov
xchg
sbb
negl
cld
mov
sub
mov
rclb
mov
test
pop
in
adc
sub
testb
or
sbb
nop
mov
mov
add
hlt
nop
into
jo
cmp
dec
icebp
dec
ror
jmp
in
mov
fs
and
pop
or
int3
jmp
jbe
xor
stos
push
jge
arpl
sub
adc
stos
xor
movsl
lcall
sub
adc
xchg
cmpsl
push
sub
adc
pushl
xchg
or
mov
pop
aas
out
aaa
pop
cmpsb
shr
adc
push
fnstcw
xor
notl
cli
sub
rolb
sbb
jb
mov
dec
pop
fists
lds
iret
pushf
rcr
mov
pop
pop
cmc
push
mov
sub
lods
dec
bound
es
cld
mov
xorl
ret
scas
xchg
jl
test
push
test
inc
or
dec
aad
inc
outsl
in
dec
add
mov
lods
sub
mov
repz
sbb
or
insb
jp
mov
mov
xchg
lret
sti
fldcw
cmp
ret
arpl
cmp
inc
cli
mov
lods
inc
nop
mov
pop
int
sahf
lods
sbb
scas
out
cmp
pop
jne
sub
jmp
push
fisubrs
ds
push
int3
cmp
nop
int
in
dec
popf
xlat
adc
xlat
pop
dec
outsb
shlb
sbb
into
ret
adc
pop
pop
pop
xor
scas
push
movsb
mov
cmp
and
jle
inc
pop
mov
call
xor
nop
add
movsb
xor
jecxz
pushf
mov
adc
addr16
lcall
scas
stos
jae
das
pop
mov
jecxz
xchg
mov
dec
ret
clc
xchg
inc
mov
adc
flds
dec
cmp
pop
push
enter
repz
pusha
aas
sub
jno
dec
aas
std
fimull
loope
sti
repz
mov
inc
ljmp
mov
stos
mov
dec
sti
mov
ljmp
jg
les
hlt
sub
mov
jbe
dec
mov
int3
adc
lods
inc
cmp
pop
sub
xchg
hlt
sub
mov
or
jecxz
mov
loopne
xchg
es
add
and
dec
push
jle
clc
adc
les
mov
dec
cmp
mov
mov
mov
iret
mov
pop
inc
add
adc
add
fistps
dec
aad
repnz
fsincos
ja
mov
dec
test
mov
icebp
pop
pop
jne
pop
pop
push
idivb
mov
ljmp
xchg
jge
add
rclb
iret
mov
inc
mov
xlat
cmp
cmp
cmp
mov
sbb
xlat
insl
mov
pop
dec
stc
popf
dec
pusha
inc
jb
or
icebp
cmc
in
imul
inc
pop
sbb
xlat
xor
mov
jmp
fs
sbb
cmp
js
xor
xor
sbb
jne
mov
stc
push
mov
cmc
fimull
pop
shl
int
inc
shrd
test
cmp
sub
arpl
bnd
test
jl
lock
and
pop
jmp
pop
sarl
pop
xchg
inc
out
sbb
pop
jbe
lcall
arpl
repnz
push
or
test
xor
sbb
loope
push
mov
inc
dec
scas
add
jg
ss
xor
arpl
xor
mov
push
outsb
inc
push
aas
sub
jp
inc
mov
and
jp
mov
adc
in
cmp
repnz
std
test
push
mov
call
scas
int3
lret
cs
or
shl
arpl
icebp
add
sub
pop
pop
sarl
mov
adc
mov
xlat
jg
push
jge
lcall
pop
fcoms
push
loopne
xor
dec
sub
cmpsb
pop
sbb
push
das
ss
fisubl
vpcmpeqd
out
clc
mov
dec
push
sbb
shrb
leave
div
inc
int
and
xchg
xchg
ds
lret
out
out
scas
xchg
xchg
pop
dec
and
addr16
dec
sti
sarl
and
push
in
jge
push
or
fs
or
stos
cmp
pop
xchg
or
inc
inc
mov
pusha
sub
push
cltd
xchg
or
adc
adc
lds
les
sarb
add
out
iret
mov
sub
rcll
cmpl
xchg
sbb
adc
clc
test
jno
jb
xchg
inc
inc
add
inc
dec
mov
fwait
rcr
sti
xchg
into
and
pop
dec
inc
push
mov
sbbl
push
jg
xchg
aad
subl
pop
cmpsl
cmp
push
adc
popa
push
repnz
nop
pop
gs
call
cmp
xor
or
mov
pop
mov
jl
dec
dec
shll
jge
pop
adc
incb
divl
mov
mov
sbb
imul
subb
jne
in
cmp
cmp
test
push
pop
insl
and
in
mov
call
inc
lods
push
repz
or
jmp
mov
sbb
pop
adc
cltd
mov
in
cmp
pop
mov
mov
lahf
hlt
lea
xorl
jl
sbb
ja
sub
repz
xor
out
dec
cmpsb
push
push
aam
leave
mov
inc
scas
test
pop
imul
sbb
decb
lret
xor
imul
sub
mov
mov
sbb
mov
fisubrs
imul
bound
mov
pop
or
loopne
mov
push
jno
xor
jbe
cmp
aad
xorl
xor
xchg
mov
iret
les
push
in
dec
jecxz
inc
shrl
out
test
aaa
dec
dec
in
leave
inc
inc
arpl
mov
sahf
jns
fcoml
rorb
mov
inc
in
aas
mov
std
hlt
fucom
ret
sti
arpl
in
insl
addb
push
lds
pop
xorb
mov
add
mov
mov
pop
scas
mov
adc
repz
outsb
fildll
lcall
dec
movsb
in
mov
pop
mov
and
pop
jg
repz
je
add
xchg
data16
lahf
inc
icebp
xor
push
idivb
mov
hlt
inc
cltd
sbb
dec
test
pop
sbb
fsubs
mov
shlb
cmp
shll
call
pop
icebp
out
xchg
int
add
int3
sub
sbb
gs
outsb
rol
andb
out
mov
jo
lahf
pop
mov
test
into
xlat
cmpsb
dec
add
mov
nop
incl
mov
iret
pushf
adc
outsb
cmc
add
lahf
dec
imul
repz
xchg
bnd
adc
mov
in
xchg
mov
sbb
xor
not
orb
xchg
cltd
inc
fnstcw
popf
outsb
jne
cmp
cmp
mov
inc
or
and
popf
jnp
dec
or
inc
or
mov
outsb
dec
scas
xchg
mov
dec
or
push
daa
fmul
jo
cmpsl
mov
iret
mov
pop
out
movsb
jb
adc
mov
test
and
pop
pop
movsb
add
nop
and
mov
sbb
pop
xchg
pop
ret
and
dec
dec
int
pop
add
shlb
stc
and
add
outsb
sarl
xchg
add
mov
lds
or
dec
mov
or
xor
and
pop
std
mov
push
sub
test
ss
jg
adc
out
sbb
sahf
aad
nop
mov
xor
bound
xcrypt-ctr
cmpsl
sbb
dec
push
mov
fcmove
mov
xchg
mov
or
lods
ds
add
loop
xchg
jle
xor
mov
movsb
fbstp
daa
sbb
or
dec
cmp
jle
test
out
pop
int
mov
adc
inc
sbb
cmp
xchg
hlt
mov
mov
xchg
int
scas
mov
loope
xchg
imul
lar
dec
nop
push
outsl
cld
in
inc
stos
rorb
rcr
push
inc
in
test
adc
mov
inc
dec
fwait
add
js
test
xlat
into
sub
leave
cmp
push
fwait
hlt
inc
scas
jecxz
jno
push
in
xchg
loop
fldcw
int
xorl
mov
sbb
push
sarb
dec
inc
jle
fadds
stc
das
push
in
adc
fstp
mov
adc
pop
or
push
dec
fildll
xlat
jmp
or
shrb
sbb
xchg
xor
cwtl
aam
jbe
out
out
lock
mov
sub
cmp
fisttps
inc
and
aas
xor
push
cli
xchg
js
out
adc
or
xor
rclb
fmull
test
test
or
jbe
lock
pop
in
aam
testl
movsb
call
int3
jmp
pushf
push
push
pop
rclb
in
mov
fbstp
stos
and
ljmp
push
pop
in
jbe
jp
push
mov
cmp
and
sub
xlat
fiadds
icebp
sub
aam
mov
in
mov
cs
sub
dec
mov
or
pushf
cmp
adc
xor
push
out
push
out
mov
lahf
sub
lods
ds
test
inc
fcomi
iret
dec
gs
pop
jle
dec
test
xlat
test
sbb
push
add
lahf
test
loop
jns
repz
notl
jbe
faddl
and
int
arpl
insb
mov
push
sub
dec
flds
in
inc
adc
xchg
in
lods
nop
adc
clc
mov
mov
mov
or
push
mov
dec
inc
mov
dec
ficoml
inc
cmc
sbb
rcrl
xchg
loopne
mov
lods
inc
les
jge
mov
add
push
jge
test
sub
addl
xchg
or
mov
jne
arpl
outsl
adc
push
push
adc
jnp
sbb
pop
repnz
test
or
fucomp
sti
outsl
scas
lea
test
push
sub
jb
xchg
aaa
fs
movsb
clc
loopne
lahf
sahf
in
sahf
xchg
fisubrl
inc
es
popa
sbb
mov
ds
dec
sarl
inc
jns
add
pop
xor
mov
jbe
push
scas
or
cwtl
sub
lret
jbe
lcall
lahf
test
jmp
pop
ret
fcmovnb
test
mov
stc
fidivrl
cmpsl
dec
or
testl
inc
es
jb
inc
sbb
add
mov
mov
xchg
jmp
mov
fimuls
xor
dec
dec
push
daa
sahf
stos
andl
stos
inc
nop
lret
roll
push
jbe
fwait
or
push
out
fcmovne
in
mov
ds
lds
jl
pop
pop
in
sti
push
lret
xchg
ficoms
je
mov
movsb
inc
pop
les
out
mov
dec
stos
dec
aaa
adc
push
xchg
or
sub
push
fsubrl
jge
dec
test
mov
xor
mov
xchg
mov
dec
pop
js
jno
lret
cmpl
push
jmp
movsl
mov
pop
fmul
repnz
shrb
push
ret
leave
aam
and
xor
sahf
jg
adc
je
scas
dec
jnp
pop
jmp
xor
push
cli
stos
lock
shll
or
sbb
sub
dec
repz
addr16
mov
xor
leave
into
lods
and
and
test
cmp
jns
scas
mov
push
jmp
adc
imull
aas
sub
imul
fidivs
cmp
and
mov
daa
add
repz
cli
push
and
sub
fdiv
or
adc
arpl
in
jl
sub
pop
outsb
pop
lock
ss
scas
push
mov
repnz
insb
fsubrs
inc
ja
xchg
jno
iret
out
adc
js
imul
add
cmpsb
nop
outsb
fisubrl
repnz
push
dec
pop
dec
jne
or
je
icebp
movl
jp
int3
push
pop
test
mull
xchg
mov
mov
les
adc
popa
scas
cmp
jns
mov
adc
adcb
lahf
push
sub
ljmp
sub
insb
lcall
pop
lea
out
fldcw
lds
jo
mov
jge
xorl
xor
out
out
jmp
dec
lea
aas
out
lea
js
pop
add
dec
into
fcoms
pop
lcall
sbb
pop
push
jae
int
out
test
rcrl
sbbb
out
les
mov
pop
cmp
mov
das
movsb
out
int
add
jle
xor
ds
cmp
je
inc
xchg
dec
sbb
mov
mov
stos
ret
add
mov
mov
imul
or
and
mov
test
loope
outsl
mov
fsubs
xchg
jmp
sub
adc
outsl
xchg
loopne
lcall
or
lret
mov
das
lock
xorl
lret
pop
fisttpll
push
inc
mov
loop
sub
fidivrs
pusha
xor
jp
mov
push
divl
clc
lcall
stos
insb
push
xor
ret
addl
arpl
in
aaa
outsl
and
xchg
sbb
xchg
push
pushf
in
mov
testb
call
loopne
xchg
jge
movsb
dec
outsb
insl
dec
cmpsl
fistps
ljmp
adc
mull
inc
mov
clc
dec
mov
hlt
out
lahf
cmp
pop
into
scas
add
mov
loop
aad
push
adc
adc
rcrb
push
imul
sahf
cli
jb
test
in
inc
and
or
fisttpl
aaa
jmp
es
or
rcrl
pop
mov
fstps
scas
aaa
adc
and
mov
jle
and
aam
jl
mov
cwtl
sbb
repnz
call
mov
inc
mov
mov
and
add
aas
into
add
cs
jb
pop
or
aaa
testb
movsl
loop
int3
jecxz
sbb
mulb
jl
mov
push
ret
inc
push
add
test
sbb
das
mov
jns
repz
sbb
andb
shlb
add
cmp
lcall
push
fadds
lds
bound
push
adc
mov
mov
sub
cmp
mov
adc
ret
dec
fs
ljmp
mov
xor
inc
mov
shlb
nop
aaa
aam
stc
in
mov
loopne
xlat
orb
mov
xor
dec
jl
ljmp
sti
nop
mov
out
or
movsb
stos
push
ret
push
sbb
mov
lea
or
test
out
out
es
daa
jecxz
sbb
repz
push
movsl
fnsave
mov
inc
mov
dec
rorb
ds
xchg
fsub
loop
sub
xor
insb
bound
in
mov
pop
pop
andb
sti
sub
adc
pusha
in
add
sbb
int3
mov
and
push
jne
adc
sarb
xor
xchg
xchg
or
mov
leave
scas
add
mov
cld
mov
sbb
gs
adc
mov
notl
mov
xchg
mul
and
adc
inc
sbb
or
adc
jb
pop
leave
push
inc
lds
cld
dec
out
cmpsb
stc
cmpsb
push
enter
pop
mov
test
xchg
fisubl
iret
icebp
insb
and
outsb
stos
out
aad
test
sbb
cld
xlat
es
pop
ficoms
dec
mov
insl
dec
mov
aas
mov
xor
push
xchg
int
in
addl
mov
inc
fwait
icebp
mov
jmp
adc
cmpb
mov
lods
and
cwtl
pop
mov
jge
maxps
dec
rorb
inc
ja
xchg
mov
push
or
aam
push
adc
push
ss
jmp
dec
iret
js
xchg
subl
mov
lahf
xchg
test
inc
dec
shr
fs
mov
lret
push
mov
insl
push
fisubrl
sub
dec
das
testl
add
jns
flds
leave
adc
add
pushf
scas
jns
mov
inc
lret
xchg
test
xchg
gs
push
and
fs
adc
xor
sub
mov
imul
rcrl
add
mov
fs
pop
leave
roll
dec
enter
xor
lret
daa
add
rcrb
dec
pop
call
ret
test
cltd
sbb
sub
jne
in
adc
out
test
cmp
loopne
add
mov
scas
or
mov
push
cmp
xchg
fwait
jae
ret
xor
cwtl
lock
mov
sbb
adc
adc
sub
pop
mov
mov
orb
dec
jl
mov
jg
pop
sahf
cmp
jbe
or
xor
negl
dec
sub
cmp
mov
mov
xor
in
pushf
pop
aas
test
mov
adc
dec
cmp
add
add
mov
sub
and
add
adc
daa
daa
lahf
push
mov
adc
stos
es
je
int
stc
jbe
or
loopne
push
and
jae
push
in
xor
repnz
adc
imul
adc
imul
icebp
sbb
pop
imul
mov
leave
sti
mov
mov
or
jg
in
addl
mov
mov
cmp
pop
sahf
mov
pop
sub
inc
pop
int
pop
ja
lret
push
xchg
jp
jno
jle
loope
cltd
and
push
mov
xchg
ss
sbb
inc
sub
out
pop
loop
adc
cwtl
jno
hlt
in
repnz
dec
cmp
and
pop
fyl2x
mov
scas
add
outsb
cmp
jne
in
jbe
je
sbb
mov
pop
inc
repnz
test
ja
pop
subb
inc
cmc
pop
xchg
in
loop
push
jl
in
lahf
frstor
mov
cmp
insb
in
insb
lcall
push
inc
xor
sub
cmp
leave
out
rcrl
loope
push
pusha
ret
cmpsl
jge
int3
aas
mov
mov
xor
cmpsb
loop
cli
cmp
mov
sub
sbb
ret
bound
lcall
jp
mov
mov
jbe
mov
jp
bound
aad
in
jcxz
roll
nop
adc
xchg
sub
pop
dec
test
ret
sbbl
loop
dec
xor
cmp
int3
insl
adc
in
iret
neg
stos
push
pop
dec
sahf
push
xor
jb
rolb
pop
cmp
int
mov
notb
outsl
mov
push
addl
adc
outsl
xchg
outsb
in
pop
sbbl
push
cmpsb
jns
inc
jnp
mov
pusha
cli
mov
cld
sub
adc
sub
or
add
push
dec
jmp
imul
push
jnp
fs
in
adc
shrl
in
std
sahf
aas
daa
add
xchg
mov
pop
popa
clc
dec
scas
adc
xchg
lcall
jmp
daa
int
fdivl
pop
loop
sbbl
mov
repnz
inc
mov
cmp
jbe
outsb
sahf
movsl
xchg
movsb
int
jmp
xor
aas
dec
dec
pop
into
sub
inc
and
testl
cwtl
stos
lahf
vpunpckhbw
ljmp
jbe
test
je
dec
cltd
clc
cmc
out
test
pop
pushf
sub
test
push
push
repnz
lret
inc
jno
pushf
int
dec
sub
in
xchg
jl
xchg
test
std
jbe
jecxz
jae
loope
push
je
cli
cmpsl
int
in
jno
jp
sub
clc
loop
inc
cmp
cmpsb
es
call
stc
cvtps2pi
inc
out
inc
imul
fadds
jp
shld
or
jae
mov
xor
int
jno
stc
pop
add
push
aas
inc
xchg
adc
pop
repz
pusha
mov
adc
cmp
xchg
cmp
cli
pop
cmp
cwtl
nop
jge
loop
jge
loopne
cltd
cmovp
pop
aaa
in
or
sbb
outsb
bound
xchg
hlt
outsb
jns
popf
test
pop
jge
jns
iret
push
xchg
push
sbbb
rclb
sahf
pop
xchg
add
fsubs
cmp
adc
push
adc
xor
adc
xchg
aaa
out
orl
or
std
mov
xchg
lock
out
test
popl
cmp
dec
xor
or
int
in
inc
call
in
push
jecxz
scas
mov
out
outsb
mov
popf
mov
lock
mov
add
lock
xchg
mov
mov
stos
mov
setns
mov
push
lock
sub
or
inc
sbb
imul
test
movsl
out
mov
or
adc
insb
and
adcb
test
fwait
mov
lret
rcl
out
mov
fdivs
sahf
mov
sub
inc
cmpsl
cmpsl
mov
cld
add
xor
inc
outsb
jbe
scas
repz
jecxz
lods
fisubrl
inc
sti
mov
jns
outsb
inc
insb
cmpsl
fwait
xor
scas
xchg
jp
std
xor
mov
mov
inc
test
mov
cmp
filds
inc
sarb
sub
ret
mov
jg
shr
popa
nop
push
sarb
pop
lea
mov
pushf
push
imul
jbe
outsb
out
adc
inc
push
fwait
pop
pop
cld
lahf
addr16
xchg
cmc
sub
mov
fs
fmul
test
cmp
pop
adc
push
test
jecxz
inc
xchg
out
scas
pop
fisubs
pop
outsb
mov
mov
out
jae
cmovbe
fstpt
cmp
stc
mov
repz
subl
xchg
stos
rorl
sub
jge
lods
ja
scas
jo
lock
adc
hlt
repz
add
adc
mov
xlat
mov
adc
ret
vhaddpd
rolb
loop
scas
pop
xchg
and
je
mov
je
fcompl
sbbl
loope
sahf
sbb
fnstsw
mov
imul
mov
fdivp
xchg
dec
xchg
jecxz
je
test
repz
les
outsl
push
cmp
stos
cmp
sbb
dec
in
or
mov
fimuls
cmp
mov
sub
and
ds
rcrb
jmp
cmc
mov
sbb
mov
test
and
test
adc
aad
xchg
pop
push
in
into
je
adc
ss
jle
loopne
fs
xor
push
xchg
scas
scas
mov
out
ss
sbb
ss
rcrb
push
cmp
pop
call
insb
movsb
push
repnz
inc
mov
mov
sarl
mov
test
xchg
mov
loopne
add
mov
enter
inc
pop
in
ljmp
nop
mov
call
inc
mulb
dec
test
in
idivb
inc
frstor
imul
and
cmc
scas
in
xchg
cmp
cmpl
je
xor
mov
xlat
test
jmp
add
repnz
out
cmp
jo
cli
jo
or
mov
in
adcl
adcb
gs
cwtl
sub
xlat
lods
popa
outsl
fwait
loope
jnp
adc
loopne
cmp
push
icebp
push
test
xchg
push
and
mov
fstpt
pop
mov
xor
push
xchg
loopne
imul
gs
xchg
int
sub
fdivrs
inc
popf
xchg
rcr
jmp
push
insb
adc
xchg
shlb
lods
and
and
push
repnz
push
mov
sti
outsb
mov
jnp
ret
rorb
leave
stc
inc
jg
shr
insl
adc
mov
jmp
mov
mov
ds
push
xor
xor
mov
inc
lret
push
pop
loop
aad
dec
pop
or
hlt
dec
xchg
mov
xchg
xlat
fbld
mov
or
fiadds
cmpsl
loop
in
gs
push
jmp
sub
cmpsb
ljmp
pop
jb
in
ja
sbb
aas
lcall
fwait
inc
sub
cmp
or
dec
pop
mov
sub
jbe
in
xchg
and
jl
mov
and
xor
orl
sbb
dec
stc
jl
xchg
out
adc
test
lahf
fsubrl
dec
mov
inc
shll
jae
repz
pxor
adc
psrld
xor
fidivs
leave
xchg
cltd
shll
mov
adcl
loope
in
lock
dec
xchg
mov
dec
iret
movsl
lods
inc
movsl
cmp
cmp
push
cmpsl
mov
sarb
inc
sbb
mov
sub
gs
ds
mov
int
pushf
iret
mov
shrl
out
cmc
insb
cld
sbbb
push
cmpsl
sbb
fsub
and
aas
hlt
insb
mov
lock
insl
adc
dec
push
or
int
repz
fdivr
test
push
ror
cwtl
mov
and
and
jle
mov
add
aas
std
jl
ja
loope
dec
push
dec
stos
icebp
sub
dec
xchg
sbb
inc
pop
lahf
and
sub
push
inc
add
repnz
lahf
jmp
add
cmpsb
xchg
fmull
inc
mov
lret
adcb
outsl
js
push
sub
pop
fwait
mov
jg
faddp
cld
inc
cwtl
int
or
jb
notl
jbe
sti
pop
dec
push
jb
mov
xor
sti
out
push
rolb
xchg
dec
mov
sub
and
repz
call
cmpl
fists
cwtl
and
and
imul
out
inc
pushf
jbe
mov
into
cmpb
cmp
test
out
ret
rorl
mov
std
fs
mov
lcall
insl
cmpsb
inc
inc
mov
mov
pusha
dec
rcl
or
jg
dec
cmp
es
iret
fs
jl
dec
pop
and
shr
mov
jge
fadd
rcrb
xchg
push
outsl
mov
out
movsl
xchg
std
nop
movsb
sbb
mov
ret
cmc
pop
loop
pusha
cmpsb
or
cltd
out
arpl
insl
test
mov
mov
xchg
shlb
xor
out
loop
fnstcw
dec
repnz
mov
mov
mov
jns
cltd
in
dec
cmp
mov
enter
pop
into
loop
shrb
repnz
cmc
jl
add
sub
sbb
mov
adc
adc
xchg
xlat
insb
mov
sub
sub
xchg
lahf
mov
push
fcoml
dec
js
les
push
nopl
loope
jmp
mov
pop
es
pop
inc
adc
ss
sub
jmp
jo
popf
lahf
lods
mov
xchg
rolb
repnz
jbe
movsb
aaa
and
lods
sub
test
inc
js
mov
inc
cli
popa
pop
jo
jno
and
addb
dec
test
movsl
mov
mov
cltd
push
aad
aad
shlb
test
pop
add
mov
dec
jnp
inc
into
sarl
mov
fwait
cmp
push
or
dec
fldt
cwtl
sub
xchg
jns
mov
sahf
mov
mov
jecxz
jg
jle
mov
and
fidivrs
test
lods
ror
pop
jne
push
jmp
add
cmp
pop
scas
xor
cmp
aas
dec
cltd
popl
cmp
aad
xchg
out
addb
xchg
xchg
sbb
pushf
and
pop
mov
jae
xor
mov
xchg
pusha
out
pop
xchg
enter
cwtl
and
fildll
mov
stos
shrl
dec
test
xor
adc
dec
in
mov
dec
ror
cmp
in
xor
pop
out
sti
adc
loop
mov
inc
shrl
cwtl
push
xor
iret
ja
dec
fwait
popa
das
jne
iret
jb
xor
sbb
iret
loopne
pop
pop
cmc
mov
and
aaa
cmpsl
out
or
in
add
insl
pop
push
cmp
iret
jl
idivb
sub
sbb
les
out
out
adc
jo
leave
or
push
xchg
ja
inc
sub
out
fcmovne
mov
idivb
imul
and
push
enter
sbb
mov
lods
test
andb
mov
inc
sbb
mov
ret
inc
push
mov
ds
in
and
xchg
outsb
xchg
fimuls
pop
push
dec
inc
and
dec
shll
pop
and
mov
test
and
or
arpl
cs
jl
fs
xor
pop
pop
sbb
and
jno
stos
and
adc
cmp
and
lock
mov
add
mov
imul
jne
xchg
add
mov
sar
inc
mov
mov
stos
push
test
jno
dec
inc
insb
das
and
xorb
mov
stos
mov
and
das
xchg
lret
ss
test
xchg
fdivrl
mov
xor
orb
mov
pop
or
hlt
adcl
push
push
das
imul
lcall
add
push
shlb
mov
fadds
xor
aam
popf
shll
jp
jp
jge
repnz
dec
outsb
lock
shlb
mov
inc
mov
and
scas
push
xlat
xchg
cmc
sub
lret
andps
mov
xchg
xchg
rcrl
dec
sahf
and
imul
mov
and
aaa
idiv
dec
pop
adc
shl
fistl
sub
pmulhuw
cmpsb
dec
in
fisttpl
xchg
push
roll
das
xor
ficomps
insl
test
pop
insb
and
notb
adc
jbe
scas
xchg
add
bound
incl
inc
push
xor
xchg
jmp
cmpsb
jg
movsb
repnz
repz
out
lds
test
dec
jecxz
mov
in
das
and
and
movsl
jl
xor
push
loope
cmp
xchg
addr16
rorb
ja
dec
ret
out
xchg
jp
cmc
jg
fxch
or
imul
mov
adc
mov
ss
test
iret
cs
in
xor
test
mov
dec
and
lea
leave
cmc
xor
push
or
in
mov
push
add
sahf
stos
repz
pop
test
push
das
or
jecxz
jmp
or
sbb
outsb
out
sub
sbb
pop
into
jne
cmc
dec
push
add
xchg
insb
push
and
adc
ffree
mov
push
nop
mov
imul
jne
jns
mov
sbb
outsb
repz
jg
jne
mov
pop
mov
mov
popf
sub
mov
enter
mov
xchg
mov
jne,pn
xor
sahf
jnp
and
das
bound
pop
jnp
and
xchg
in
and
arpl
add
mov
sub
movsl
in
pop
rcll
sub
push
js
sub
mov
mov
xor
inc
mov
iret
das
push
add
inc
sti
pop
adc
push
adc
cwtl
icebp
aaa
inc
into
add
xor
jl
pop
xlat
and
lahf
icebp
sub
mov
pop
mov
fistl
inc
std
outsl
std
shl
xor
lods
jg
add
in
stos
pop
pop
stos
lret
sahf
sbb
adc
into
push
add
sbb
shr
push
sub
inc
lret
pop
pop
sbb
ret
loop
pop
cmp
or
mov
idivl
fyl2x
jecxz
sbb
mov
sbb
cwtl
push
and
popf
iret
jl
jmp
rclb
mov
fmull
jge
mov
loop
xchg
push
dec
adc
push
jae
push
cmp
fisubl
fnstenv
fidivl
xor
fldcw
sahf
mov
lcall
into
rolb
repz
and
cmp
push
mov
and
in
xchg
mov
mov
or
add
xor
pop
movsl
out
xchg
movsl
and
jl
and
cmpsb
or
cmc
les
repnz
xchg
adc
xchg
rcll
scas
mov
int
lods
xchg
leave
xor
dec
fiadds
insb
out
jne
mov
push
popf
cmp
mov
xchg
insl
xor
andl
jl
sbb
push
insl
jmp
xchg
sub
mov
mov
lds
dec
in
mov
jne
into
icebp
mov
ret
das
mov
fwait
cmp
leave
cs
sbb
cmp
sbb
iret
daa
sbb
mov
fmuls
pop
imulb
loopne
shll
repz
jne
fsubr
sub
movsl
lahf
push
fsubrs
out
cmp
mov
xchg
sub
xchg
mov
cli
sub
and
adc
sub
push
fstpt
testb
ja
xor
shrb
xor
or
mov
cmp
cmp
push
rolb
mov
icebp
push
lock
pop
xchg
into
xor
cli
push
shll
movsl
or
cmp
scas
sti
call
push
push
addr16
pop
jl
outsl
mov
or
enter
mov
ds
nop
push
cmpsl
orb
flds
in
ljmp
bsr
push
jl
std
adc
sbbb
aaa
lcall
repnz
pop
test
ss
js
push
incb
shr
shll
sbb
pop
add
and
lea
pusha
mov
mov
jmp
xor
outsl
rolb
mov
pusha
jmp
int
int
mov
adc
and
push
or
dec
inc
out
inc
cwtl
in
loop,pn
xor
sbb
mov
pop
inc
out
xor
fdivrl
outsb
xor
sti
test
lahf
add
mov
iret
movsb
adc
push
adc
push
push
out
pop
push
out
adc
push
data16
testl
or
cmpsb
mov
addr16
dec
je
mov
xor
xchg
mov
dec
xor
mov
ds
lods
stc
shlb
cmp
mov
das
or
and
xchg
mov
test
sub
into
imul
js
push
sarl
pop
xor
fiaddl
arpl
shrb
shrl
inc
or
add
add
mov
ret
xchg
push
aas
cltd
rorl
add
inc
mov
lock
out
ds
in
pushf
pop
sbb
aaa
arpl
nop
fstl
pop
jae
sub
jo
or
and
sbb
in
hlt
pusha
add
aad
cmpb
sbb
push
hlt
movsb
mov
xchg
jno
call
dec
stos
jmp
and
cltd
jmp
pop
loope
or
int
clc
out
xchg
sub
stos
js
pop
add
cmp
sti
fists
sarb
ss
xchg
ss
repz
aam
in
stc
fcmovbe
sahf
xchg
cli
or
add
outsb
pop
xchg
mov
push
test
mov
daa
xchg
push
pop
out
push
es
subl
mov
add
lods
inc
mov
clc
sub
lret
and
fdivrs
fwait
mov
shlb
or
pusha
pop
and
inc
repz
lods
cmp
mov
jmp
ljmp
std
loop
dec
gs
iret
jno
ljmp
sbbb
cwtl
jmp
loopne
jns
add
popf
inc
mov
xchg
mov
inc
and
scas
in
ret
cmp
add
test
adcb
xchg
jmp
mov
push
or
add
dec
daa
mov
out
push
je
loop
sub
push
mov
enter
dec
sub
imul
test
mov
fsubr
dec
sbb
sbb
fiadds
adc
leave
lahf
cs
fsts
sbb
mov
dec
xchg
loopne
push
aad
push
sub
in
loopne
std
pusha
xchg
arpl
sub
sub
xchg
ret
mov
mov
aaa
mov
fmulp
sub
testb
jle
icebp
aaa
cltd
mov
bound
ror
pop
push
add
insb
int3
aas
mov
mov
cmp
daa
frstpm(287
js,pt
cmp
inc
pop
adc
leave
sbb
pusha
jg
lock
fnsave
xchg
sarb
outsl
scas
notb
cltd
and
mov
pop
aad
and
mov
mov
xchg
pop
imul
imul
lock
push
mov
or
push
and
xor
ja
sti
mov
loopne
jbe
outsl
push
daa
push
jg
mov
jns
and
mov
pop
ret
fcmovb
in
jg
cmc
cwtl
adc
push
ret
adc
mov
mov
fisttpll
ret
mov
shlb
sub
iret
xchg
adc
push
icebp
inc
sub
je
repnz
fsubrl
cwtl
inc
push
int3
jno
or
fmuls
andb
insl
loope
mov
test
xor
fwait
pusha
dec
pop
xor
fs
ret
sbb
fdivl
int
outsl
in
jecxz
js
jle
cmpsl
cld
in
sahf
cmc
xchg
sti
dec
xchg
shrl
out
or
dec
jno
adc
sti
aaa
mov
ljmp
and
push
jl
shlb
add
pop
push
adc
pop
leave
and
cwtl
jg
enter
jg
insb
fsubr
and
pusha
mov
aad
cltd
movsb
mov
xchg
insl
call
insb
leave
ja
pop
sarb
in
jmp
add
cmp
pop
sbb
jno
push
jnp
jnp
test
bound
jmp
jmp
lret
and
jp
andb
cmc
ds
pop
inc
pop
enter
test
fldt
sbb
xor
fnstenv
cmpsb
dec
out
enter
dec
in
sub
add
mov
and
rolb
mov
push
sub
repnz
push
dec
imul
icebp
loop
les
shrb
mov
out
jge
push
out
dec
sub
mov
addb
pop
mov
xor
push
xchg
sbb
lods
mov
jl
sarl
add
or
out
test
xchg
stos
pop
hlt
and
inc
lea
lret
lret
add
sbb
out
inc
cmp
fsub
stos
mov
aam
push
jb
bnd
test
sub
pop
pop
inc
ja
mov
jmp
dec
push
xor
dec
dec
loopne
push
fdivr
negb
out
pop
xchg
or
dec
cmpsb
shl
mov
pop
fld
jecxz
push
dec
cmp
cltd
loop
add
movsl
jo
dec
int
aaa
inc
sub
adc
jo
mov
inc
and
inc
clc
adc
mov
mov
mov
pop
and
movsb
daa
xchg
pop
dec
ss
inc
pop
push
fcomp
cmc
sbb
xor
sarb
fwait
addr16
push
ror
pop
or
aad
movl
fldenv
outsl
imul
sbb
aam
mov
pop
pop
das
mov
adc
mov
push
xor
js
jo
sahf
pop
pushf
mov
aam
out
daa
je
mov
je
xchg
xor
cld
inc
shrb
fidivrs
or
jle
add
push
fldcw
repnz
stos
fwait
std
nopl
xor
mov
imul
ja
loopne
jl
in
loope
pop
cmp
pop
mov
dec
lret
fwait
jb
movsl
dec
loopne
mov
je
mov
jns
cwtl
in
add
lds
cmpb
dec
repz
in
aaa
aas
push
mov
xor
ret
cmp
mov
ret
mul
inc
or
in
sbb
mov
imul
shrl
rcr
mov
out
pusha
icebp
xchg
fs
add
fstl
xlat
icebp
mov
jb
aam
xchg
cli
or
mov
add
in
repnz
xchg
movsl
mov
jp
xchg
jle
and
push
out
pop
xchg
mov
xchg
adcl
nop
or
and
mov
lods
cltd
mov
cmp
into
scas
sti
mov
repnz
or
adc
add
dec
clc
push
ljmp
adc
pop
xchg
fidivrs
push
stos
sbb
fldl
jb
mov
mov
addr16
pop
sbbb
mov
ret
and
loopne
adc
or
lcall
jae
pop
jp
xor
or
sub
cwtl
or
mov
leave
pop
push
xor
aam
subl
fldenv
jecxz
inc
push
shll
es
and
mov
scas
or
xor
daa
add
lock
pop
repz
stos
push
and
icebp
bound
sub
lods
icebp
pop
lea
push
nop
ret
insl
cmovno
fildl
cmp
xor
test
scas
sbb
mov
mov
or
mov
jecxz
adc
in
or
mov
or
add
xchg
cmp
or
sub
leave
into
in
adc
fldcw
adc
out
cmp
shlb
scas
dec
mov
pop
pop
push
loopne
enter
add
movsb
mov
adc
daa
add
xchg
lods
repnz
rcrb
push
fwait
adc
int3
dec
push
pop
int
and
pop
or
pop
sub
test
sub
mov
test
sbb
fidivl
repz
cmpsl
cli
dec
mov
scas
sub
mov
stos
and
out
testb
push
mov
lret
lods
fdivl
lcall
in
fstp
cmp
addr16
sub
cwtl
mov
sub
fdivrl
ds
in
or
jmp
add
frstor
outsb
int3
cli
xor
lock
jb
inc
aaa
outsb
stos
adc
aad
jb
push
sub
cmc
or
add
inc
lret
push
jl
in
and
inc
outsb
or
fbld
pop
cmp
lcall
stos
add
dec
outsb
stc
push
divl
dec
adc
or
out
add
arpl
js
cmp
das
cltd
arpl
or
cmpsb
das
push
and
and
adc
cwtl
lret
cs
lods
push
js
and
in
inc
mov
cltd
stc
inc
jnp
dec
cmp
mov
bound
sub
int3
inc
pop
sub
and
dec
adc
stos
xor
repz
dec
sub
test
cmp
pushf
sbb
mov
lods
insl
icebp
cli
ljmp
sarl
add
out
adc
in
cmp
mov
sbb
xchg
pop
or
pusha
decl
dec
jo
aas
pop
push
mov
xlat
sbb
rorl
in
pop
xor
mov
sub
jl
sub
pop
cs
push
test
imul
xchg
inc
lret
pop
leave
push
not
push
dec
jle
fstp
and
dec
xchg
in
push
fsts
fnstenv
out
push
in
mov
cmpsl
xor
pop
div
incl
jecxz
ds
push
stc
xchg
roll
cmp
sub
test
sbb
xchg
dec
test
pop
stc
idiv
lret
mov
test
mov
lods
testb
pop
push
add
inc
insb
or
adc
dec
and
push
mov
lock
andb
enter
fidivl
sbb
shl
lahf
jae
sbb
cwtl
addr16
xchg
pop
fnstcw
popl
jns
pop
jno
cmp
inc
jge
jae
xor
aad
addr16
sub
mov
mov
or
lret
pop
orb
jo
in
test
dec
stos
stc
pusha
mov
lret
int
rolb
jnp
mov
mov
dec
es
jp
dec
test
sub
push
aam
das
cld
imul
xchg
inc
jecxz
insb
jo
shll
sbb
cmp
push
and
mov
popf
mov
push
in
jne
lock
jg
adc
jg
and
stc
push
or
or
addr16
add
rcrb
jo
je
or
movsl
aad
pushf
push
push
mov
ljmp
mov
xchg
xor
xor
pop
out
jae
add
dec
in
andb
xchg
mov
ja
shll
pop
mov
mov
addr16
call
int3
popf
xchg
xchg
lcall
nop
addb
mov
mov
mov
dec
lds
nop
sahf
pusha
out
mov
jmp
das
in
shlb
mov
addl
in
push
cmp
xchg
gs
mov
push
cld
mov
mov
push
lret
xchg
cmp
repz
clc
out
xchg
add
jge
add
push
or
lods
inc
pop
mov
clc
sub
sar
lret
and
xchg
pop
in
rcr
sub
loop
das
fstps
in
pusha
push
cmpsl
sbb
std
sbb
out
xchg
or
lods
adc
enter
push
cmpsb
jbe
fcomps
clc
mul
or
ja
shlb
and
pop
test
mov
adc
mov
sbb
pop
or
jae
mov
jp
bound
push
push
fimuls
or
xor
pop
sub
sub
in
xlat
jne
repnz
popf
mov
cwtl
sub
inc
push
sbb
inc
js
push
aad
popf
nop
sahf
aam
push
dec
aas
mov
icebp
enter
cmpb
outsl
popf
xlat
or
nop
mov
pop
push
lock
inc
inc
lret
inc
popa
lock
mov
jl
mov
daa
inc
xor
inc
cs
mov
adc
xchg
iret
adc
fldenv
push
lahf
popf
xchg
cmc
ss
and
xor
decw
ljmp
gs
xchg
jnp
orl
daa
sub
frstor
jno
loope
stos
andb
and
cmp
xor
inc
inc
add
out
jle
shlb
out
enter
rcr
pop
mov
repnz
and
cli
iret
mov
jle
xor
cmc
vpinsrw
leave
mull
ja
rorl
addl
sub
pop
cmp
sti
push
cld
xor
insb
mov
cmp
xchg
adcl
fsubrl
dec
aaa
nop
fistl
in
lret
mov
daa
test
fdivs
sub
out
repz
loope
jae
jo
shl
adc
rorb
jno
xchg
daa
push
push
cmpsb
xor
pop
stos
iret
xor
jbe
test
xor
cmpsl
cmp
mov
xchg
sbbb
mov
in
mov
or
into
insb
stos
insb
mov
std
daa
int
call
les
push
mov
mov
mov
inc
popf
push
push
sub
cld
cmp
pop
dec
xchg
adc
mov
fsubrp
and
popa
push
and
xchg
js
xchg
ljmp
scas
ljmp
nop
fnsave
pop
popa
lret
mov
push
or
enter
aam
adc
xor
sahf
jne
iret
das
loop
jbe
cmp
lret
fwait
aaa
xchg
das
popa
rcll
add
movl
mov
xchg
jo
sbb
mov
stc
pusha
test
dec
mov
and
lds
mov
cmp
aad
popf
mov
and
shrb
js
popa
inc
and
fwait
test
or
mov
pop
pop
cmpsb
push
adc
sub
cmc
lcall
das
mov
fcompl
lods
dec
pusha
jp
outsb
outsb
push
add
pop
lds
idivb
xchg
push
lods
mov
cld
fst
mov
dec
fwait
lret
fwait
inc
movsb
push
out
mov
scas
jno
mov
mov
or
aas
adc
xchg
or
and
pusha
ljmp
popf
out
sub
or
jl
int3
push
sub
add
ljmp
xchg
mov
add
rorl
jge
cwtl
and
dec
xchg
pop
cmp
imul
jno
cmp
push
jno
or
mov
outsb
and
xor
in
div
or
inc
sub
xor
stos
std
cmp
leave
xchg
push
mov
jecxz
fnstenv
popa
xlat
add
xchg
jne
inc
data16
push
push
sub
movlps
cwtl
xorb
or
std
cltd
mov
fisubs
cmpsl
xchg
push
scas
ret
icebp
pop
sub
and
or
je
ret
lret
dec
mov
mov
cmp
jns
or
icebp
sub
cmc
mov
xchg
pusha
push
mov
ds
jae
cmc
add
xchg
xor
pop
aad
repnz
aad
mov
lret
xchg
out
mov
sbb
test
mov
daa
in
cmovo
fsubr
mov
mov
jno
cvtpi2ps
adc
fisttpl
insb
shlb
xchg
xchg
pop
adc
lahf
bound
jg
adc
xor
sbb
add
scas
scas
movsb
or
and
addr16
lcall
mov
fcomi
dec
scas
sub
aas
je
aaa
rorb
ror
or
fistps
pop
scas
push
popa
xchg
out
faddl
sarl
mov
mov
aaa
dec
mov
and
ror
cmpsl
neg
xchg
push
mov
pushf
mov
stos
into
in
arpl
rcrb
fisubrl
mov
inc
roll
sbb
and
negb
mov
dec
test
or
test
xchg
fwait
adc
xchg
push
into
rcll
cmp
cmp
xor
inc
imul
xchg
dec
pop
xchg
movsl
xchg
lahf
jecxz
pop
mov
scas
test
lods
sub
mov
int
ret
bound
addr16
fnstenv
repz
test
ja
pop
mov
push
push
in
sub
ds
mov
insb
dec
hlt
jg
mov
mul
adc
pop
iret
push
push
adc
shll
mov
nop
and
push
ret
add
cmp
mov
adc
test
xor
xchg
and
sub
cmp
add
and
scas
inc
aad
pop
int
push
pop
stos
das
push
in
das
mov
movl
sbb
loopne
xchg
and
dec
sub
sub
push
pop
inc
or
js
outsl
out
incl
cwtl
mov
jne
adc
push
push
clc
jno
mov
dec
inc
and
add
insb
mov
outsb
ja
xchg
adc
mov
and
dec
xor
dec
dec
negb
call
xchg
mov
xchg
bound
and
jae
xchg
lret
add
add
add
movsl
and
adc
int3
dec
idivl
cmp
sbb
fsub
loopne
add
mov
cmpsb
adc
loopne
lret
add
xor
int3
sbb
mov
sbb
js
xor
pop
in
arpl
add
jno
mov
frstor
cmpsl
or
jno
cmp
push
xchg
xchg
push
pop
loop
movsl
mov
xchg
fcomip
aam
jge
jmp
mov
push
mov
cs
cmp
std
shlb
xchg
mov
in
insl
je
fistpl
fwait
xor
test
sub
adc
lods
bound
lcall
and
mov
dec
testl
into
mov
outsb
ljmp
je
adc
mov
inc
jl
xchg
lea
inc
in
pushf
xor
mov
outsl
push
jae
xor
movsl
lcall
sbb
ret
test
sub
sub
orl
fs
loopne
xor
fstpl
pop
aad
or
mov
pop
xchg
xor
nop
stc
pusha
pop
jg
jmp
pop
lea
inc
add
pop
lea
dec
lret
je
and
jle
cmp
sbb
insl
jle
repz
inc
cltd
out
mov
sub
lds
repz
fst
xchg
lods
notl
adcb
ss
out
sbb
push
stos
call
fwait
stos
xor
into
sahf
lret
pop
xchg
int3
in
jg
push
movsl
fiadds
fsub
imul
loope
lds
mov
test
push
adc
movsl
pop
jb
test
jle
js
fwait
xor
pop
lock
jg
rorb
xchg
test
xchg
or
insl
dec
aas
xlat
lret
sbb
mov
cli
inc
pop
cmp
es
xor
cmp
lods
jp
in
fiadds
test
lret
out
addr16
out
or
push
scas
repz
retw
inc
jbe
lea
test
xor
out
dec
repnz
shll
or
push
and
dec
loope
mov
faddl
sbb
cmp
jae
inc
xchg
test
mov
mov
mov
xor
pop
add
clc
add
xchg
in
mov
pop
mov
sub
repz
xorl
mov
sarl
mov
lods
out
add
daa
and
and
iret
pushf
cs
das
sub
adc
das
movsb
add
in
shlb
addr16
out
repnz
mov
in
sahf
sbb
mov
sarl
adcl
mov
sbb
scas
leave
repz
inc
mov
fistpll
mov
shrb
cmpsl
call
ljmp
jnp
dec
sbb
repz
and
push
lds
mov
and
mov
jnp
xchg
gs
rcll
jecxz
add
inc
pop
pushf
in
nop
or
dec
test
hlt
lret
in
mov
mov
dec
gs
mov
stc
test
mov
pop
cmp
adc
dec
scas
out
adc
sub
add
test
jbe
inc
adcl
push
xor
les
add
das
scas
into
out
pop
inc
imul
ds
leave
jb
sbb
imul
push
adc
fidivs
dec
mov
adc
shlb
imul
push
daa
xchg
mov
and
insb
ljmp
dec
aam
dec
xor
fsubrl
push
mov
insb
lret
add
xchg
jae
js
mov
in
jno
inc
lret
jns
mov
sbbb
inc
pop
ja
in
ret
push
add
inc
and
loope
adc
mov
inc
jecxz
adc
fbstp
jno
sub
jmp
test
fidivrs
sbb
pop
je
cmp
cs
inc
cmc
gs
inc
pop
jbe
adc
mov
cwtl
mov
jnp
jb
mov
outsb
push
into
pop
aaa
add
adc
push
icebp
scas
enter
sbbb
mov
fisubrs
mov
repz
daa
pop
les
add
push
into
pushl
aas
inc
adc
xor
xor
movsl
ficomps
popa
or
imul
mov
pop
dec
ret
gs
aas
jo
std
sub
push
xchg
aaa
and
jp
dec
cmp
clc
orb
pushf
push
in
jns
jae
and
fdivl
popl
inc
rolb
push
mov
testb
inc
jmp
lcall
pop
fs
bnd
es
ja
sub
ja
xor
cmp
push
fidivrl
mov
mov
pop
mov
push
sbb
push
imull
test
cmp
or
fcmovne
fiaddl
sub
leave
cli
jae
into
xor
push
jle
sub
push
sbb
or
lods
sbb
push
lea
fucomip
inc
popf
add
mov
jae
fucom
fsts
out
add
inc
mov
outsb
mov
dec
mov
jb
fidivs
ljmp
aas
mov
insb
leave
shlb
mov
fildll
cmc
scas
jns
cmp
ss
and
test
mov
sub
mov
in
negb
or
movsl
xchg
mov
xchg
arpl
jbe,pt
ret
test
cmc
int3
cli
movsb
fcomip
movsl
jecxz
ss
sti
fsts
int3
sub
fstpl
dec
cwtl
repnz
pushl
and
sub
jp
jmp
notb
nop
cmpsb
int
jp
rcrb
sbb
ficompl
repz
loopne
ret
dec
loopne
adc
mov
outsb
push
mov
xor
pop
dec
icebp
mulb
dec
mov
push
push
cmc
inc
outsb
lret
and
aaa
xchg
fisubs
cmp
sahf
andl
sub
mov
mov
test
sub
insl
insb
jmp
iret
stc
gs
adc
scas
xor
insl
cld
jns
imull
out
cwtl
rol
cmp
lock
cmp
mov
adc
adc
dec
fadds
xchg
test
and
cmp
out
jp
data16
hlt
push
loope
cmpsl
lcall
mov
mov
pop
sub
in
nop
mov
lock
xchg
xor
paddb
adc
icebp
scas
xchg
adc
scas
insl
push
test
or
cmp
cmp
cmp
test
push
mov
dec
push
imul
lcall
xor
lea
sti
inc
adc
mov
push
cmp
add
lods
test
mov
ja
rcll
jne
xchg
arpl
jb
out
push
or
sbb
sub
pop
mov
stc
mov
std
lock
sar
out
aas
scas
jnp
push
mov
shlb
push
mov
mulb
movsl
cli
loop
stos
xchg
cmc
insl
movsl
and
out
push
cmp
fs
aaa
cmp
adc
xlat
sbb
cmc
pushf
cmpsb
pushf
ret
adc
dec
adc
scas
cmp
add
xor
hlt
xchg
call
pop
adc
lcall
ret
xchg
mov
out
adc
daa
pop
jmp
and
pop
scas
lahf
cmp
and
loope
mov
subb
repnz
das
pop
xor
test
push
out
inc
jp
in
cmp
cwtl
mov
jmp
aas
mov
inc
and
in
xchg
pop
pusha
xor
xchg
aam
test
jge
push
arpl
dec
out
push
insl
dec
pop
xor
mov
js
cmp
repnz
adc
nop
pop
daa
fwait
popa
sbb
sub
test
out
add
clc
stc
sub
adc
pushf
sub
adc
stos
xchg
rep
mov
cltd
adc
adc
mov
ret
ss
fsubl
inc
popa
cwtl
imul
sub
ret
jno
sahf
push
fildl
cmp
int3
movsb
popa
aam
cmp
popf
mov
nop
sti
loope
inc
fdivrs
inc
icebp
nop
adc
loope
or
aas
or
cltd
push
insl
arpl
repnz
cmp
jp
loop
aas
sbb
daa
dec
cmpsl
ds
xchg
jmp
pushf
jnp
inc
aas
js
je
or
stos
adc
shrb
sub
leave
sbb
jb
mov
xchg
das
mov
cmp
fidivl
mov
push
clc
cmp
mov
out
out
pop
in
cwtl
cmp
fnstsw
enter
push
adc
es
cmc
xor
push
popf
shufps
cwtl
xor
add
adc
xchg
ror
mov
add
ja
ja
push
nop
mov
pop
push
xor
cmp
and
in
cmp
sbb
xor
addr16
jnp
addr16
xchg
pushl
and
fwait
mov
sahf
inc
lret
gs
loopne
xor
mov
mov
stos
icebp
lret
inc
notb
popf
shlb
test
in
ja
or
pushl
mov
jle
cs
sub
imul
pop
fiaddl
inc
mov
loop
cmc
sahf
fwait
dec
pop
xchg
cmp
rcrb
and
mov
push
fisubs
mov
das
dec
rep
mov
insb
rcrl
sub
pop
mov
movsb
in
push
pop
fcmovnbe
xchg
insb
out
dec
xchg
pop
rclb
xlat
lods
pop
fdivrs
movsb
sub
sub
out
loopne
lea
xchg
sbb
push
cli
jge
mov
out
bound
fwait
push
pop
lcall
or
fmulp
scas
ret
nop
push
sbb
imul
xchg
data16
xchg
mov
dec
mov
inc
and
ds
faddl
fsubr
rcll
push
or
lret
dec
imul
mov
jae
mov
insb
jg
pop
mov
fcomip
ds
ss
mov
fsubp
repz
arpl
mov
in
daa
mov
dec
fisttpl
ficoms
sub
inc
stos
or
out
incb
cmp
stos
xor
imul
pop
es
pusha
shrl
xor
jns
adc
adc
leave
sub
cmpb
lret
divl
mov
jns
pop
repnz
xchg
out
mov
sbb
adc
add
sub
iret
fstpt
jo
adc
aam
pop
or
fisubl
andb
mov
outsb
outsl
pushf
cmpsb
xor
call
pop
pop
aad
cmp
push
jecxz
mov
hlt
int3
xor
sub
out
pusha
sbb
hlt
std
lods
and
in
pushf
test
jl
in
pushf
xchg
dec
loop
sub
push
popa
pop
icebp
xor
stc
stos
sub
and
jge
inc
pop
cmp
addr16
sbb
scas
mov
in
js
adc
fcompl
fsts
stos
js
cmp
jne
sar
stc
stos
popa
stc
movsl
insl
push
and
and
push
cmc
cld
aas
andb
jg
mov
movb
cmp
dec
pop
rcrl
adc
jge
lods
jge
sti
push
leave
mov
push
inc
iret
repnz
xor
mov
mov
push
cmp
repnz
pop
inc
mov
ja
addr16
imul
aas
in
mov
sub
insb
mov
lret
cmp
push
fcmovnbe
into
insb
lods
or
cli
xchg
mov
or
push
or
jecxz
push
enter
push
iret
ret
inc
mov
cmp
stos
lds
sbb
into
scas
xchg
mov
lea
push
xchg
xchg
and
pop
or
dec
pushf
inc
xchg
cwtl
inc
mov
mov
push
mov
cmp
dec
in
outsl
imul
xor
fs
and
push
sbb
ja
rcll
xlat
lcall
mov
jne
cmp
adc
xchg
dec
fucomi
dec
mov
mov
into
fcmovu
jno
lds
adc
shr
mov
sbb
pusha
jge
dec
dec
insb
aas
subl
sub
or
mov
cmpsb
push
mov
xchg
inc
xchg
xor
and
mov
test
and
mov
mov
xchg
loop
pop
xchg
xor
hlt
repnz
clc
mov
mov
int
scas
jns
shl
add
adc
mov
data16
ds
aas
adc
add
call
js
scas
push
or
aas
cmp
sub
out
cmp
xchg
sub
cmpsb
adc
push
or
aaa
and
add
out
add
mov
loop
push
and
out
mov
lock
mov
insb
mov
inc
popf
inc
mov
outsb
or
mov
add
filds
movsbl
insl
xchg
loop
and
inc
pop
fistps
mov
dec
loope
popa
cmp
stos
mov
scas
dec
lock
sti
leave
fistpl
leave
lret
inc
jmp
dec
rcll
scas
nop
pop
rcr
fs
dec
cmp
aaa
imul
push
fucom
add
pop
out
cltd
and
mov
xchg
rol
aas
mov
pop
adc
arpl
aaa
out
dec
loop
add
jecxz
jmp
mov
inc
inc
push
leave
pop
movsl
fisttpl
sbb
jmp
pushf
cmp
push
jg
dec
dec
push
je
iret
pop
inc
xchg
dec
mov
adc
and
pop
test
in
fstp
pcmpeqw
add
inc
adc
pusha
dec
cmp
sub
imul
push
xorb
mov
mov
jecxz
push
lea
es
mov
fstps
lret
vcvtps2pd
add
sarb
push
inc
pop
insb
movsl
int3
xor
sub
out
test
add
lcall
test
inc
xor
jno
sub
fisttps
adc
adc
bound
idivl
cmpsl
cmpsl
xchg
xor
or
or
inc
jle
xor
decl
mov
xchg
push
push
pop
xor
or
lea
pop
mov
and
sbb
jle
divl
in
and
mov
pop
add
stos
or
sub
dec
pop
dec
jno
orb
notb
es
dec
test
mov
stc
fisubs
cli
jae
add
add
ja
or
into
sub
dec
sub
and
dec
aas
jp
loope
mov
loope
test
xchg
out
or
out
cmpsl
out
jecxz
cmp
adc
xchg
subb
gs
cmp
push
mov
shrl
mov
and
mov
add
shrb
push
pop
mov
xor
cmp
out
mov
sub
push
stc
mov
mov
les
mov
mov
inc
mov
or
aam
mov
jb
mov
daa
mov
jbe
in
add
das
jecxz
cmc
sub
add
lods
test
js
xor
xchg
xchg
repz
imul
push
adc
lods
dec
dec
in
and
imul
or
pop
add
cmc
mov
fsubrs
arpl
call
cmpsl
push
pop
mov
ljmp
rorb
stos
mov
add
mov
push
push
repnz
xor
iret
fiadds
jle
sub
sbb
xor
lods
js
addr16
mov
add
adc
test
incb
mov
jle
jo
ret
mov
xor
pop
xor
mov
mov
repnz
loopne
adc
test
test
mov
push
addl
inc
dec
fs
cmp
mov
sar
mov
cltd
out
xchg
in
rorl
int
arpl
mov
inc
mov
pop
aad
pop
mov
mov
jl
shll
stos
dec
ds
push
sub
xchg
xchg
cmp
jecxz
and
cmpsl
pop
mov
loop
loope
test
pop
or
cmp
mov
repnz
ret
and
cmp
fimuls
pop
clc
testb
stos
or
hlt
adc
cmpl
out
xchg
test
mov
je
push
adc
and
cmpsl
add
mov
shufps
jecxz
inc
scas
je
sti
jge
mov
ja
sar
mov
subb
jae
clc
lods
rcrl
push
pop
sbb
inc
mov
push
push
xrelease
jg
test
leave
rcll
mov
insb
nop
or
or
aas
push
aas
mov
xor
mov
scas
jl
sub
adc
jecxz
push
call
or
xchg
pop
test
lea
fiadds
scas
xlat
xlat
out
lea
out
je
mov
ss
arpl
das
push
mov
in
clc
scas
iret
in
shl
mov
push
dec
stos
pop
movl
bt
add
adc
sbb
jne
insl
mov
cmp
fcmovnbe
ds
and
out
sbb
adc
add
nop
fs
sbb
js
insl
ret
mov
and
push
mov
mov
iret
pop
in
inc
popf
hlt
fstp
ret
mov
in
insl
jns
arpl
pushf
cli
inc
aaa
aas
scas
push
or
push
and
pop
negb
fists
xor
ss
gs
xchg
or
push
jl,pn
push
push
into
js
cmp
and
mov
rorl
mov
scas
imul
test
ds
arpl
in
pusha
dec
add
and
push
daa
push
or
ljmp
push
pop
mov
jnp
jbe
pop
inc
movsb
mov
xchg
aas
insl
and
xchg
inc
repz
xchg
xor
push
shl
rcl
mov
adc
cmpb
push
daa
sub
xchg
adc
dec
add
int
sbb
mov
xor
add
jbe
xlat
jb
push
push
aas
lock
leave
push
popa
sbb
movsb
mov
sbb
cli
rcrb
and
fdivrs
shll
imul
dec
add
cs
jns
cmp
xchg
fs
movsb
out
mov
mov
int
aad
and
jno
inc
jmp
andb
fidivrs
xor
data16
daa
or
rcr
xor
mov
dec
rcll
inc
rcrb
gs
je
fisttpl
sbb
cmpsb
insb
cltd
popa
jge
inc
mov
cmp
pusha
xchg
push
push
push
rcrb
lods
sub
mov
jae
xchg
sbb
or
adc
arpl
stc
cmp
das
cmp
fsubrp
mov
xor
aas
jge
push
pop
test
adc
and
stos
and
mov
mov
mov
out
repz
sub
and
insb
adc
sbb
adc
ljmp
int3
xchg
ljmp
mov
dec
dec
cmpsb
mov
shrl
mov
add
fwait
and
xor
cmp
push
mov
jmp
in
cmp
sti
inc
inc
mov
inc
mov
cmp
sub
xchg
aad
add
xchg
jnp
jae
mov
sub
adc
outsb
repnz
inc
jp
movsb
loopne
mov
icebp
jo
pusha
sbb
mov
aad
push
mull
leave
addr16
enter
imul
es
mov
mov
xchg
and
pop
popl
pop
mov
cltd
pop
cmp
aad
pop
jns
notb
testw
cmp
sub
mov
push
adc
fs
lcall
cmp
ja
sbb
jbe
loopne
mov
dec
out
adc
lahf
or
aas
add
inc
mov
data16
mov
inc
fsubrl
in
outsl
pop
cmp
adc
call
jbe
lcall
mov
subb
or
cmpsb
jl
faddp
xchg
repz
clc
int
jle
pop
mov
cmp
jmp
xor
in
jmp
pop
add
cmpb
jae
and
shrl
mov
in
rcrl
fstpl
not
dec
fmuls
add
jno
jg
cmp
mov
push
mov
pop
fnstenv
sub
sub
popw
push
pop
mov
add
sub
out
enter
fsubrl
out
sahf
les
roll
bound
cmp
cld
ficompl
mov
cmp
or
scas
sahf
outsl
fs
dec
mov
scas
ficoms
mov
dec
cmp
push
push
out
add
lods
inc
xchg
push
scas
push
aam
mov
xchg
cltd
sub
dec
pushw
pop
xchg
clc
mov
js
mov
xlat
mov
xchg
sub
and
inc
push
jge
imul
xor
and
sub
int
mov
pop
sub
xor
xor
pop
jbe
insb
sarb
push
adc
xchg
dec
ljmp
xchg
mov
out
jg
lret
popa
das
mov
cli
xor
sbb
jg
xor
cwtl
push
jle
and
orl
shl
add
cmp
ficompl
add
mov
and
jge
mov
addr16
in
add
dec
popa
rcr
cmp
sbb
adc
adc
hlt
xchg
push
sbb
loop
inc
push
push
js
icebp
roll
add
pop
enter
in
pushf
and
dec
fidivrs
inc
in
jl
js
inc
jnp
mov
pop
movsl
sbb
int
out
push
adc
lret
dec
jecxz
in
push
add
dec
pop
push
rcll
mov
repnz
cmp
add
xor
and
pop
adc
lock
pop
not
lods
jecxz
jae
cmp
out
mov
sbb
in
cmp
mov
sub
jecxz
adc
xor
push
sahf
cs
test
xchg
jle
int
push
add
xor
imul
call
lahf
add
adc
mov
aas
popf
jnp
and
aaa
dec
add
xchg
popf
jns
je
stc
mov
int3
jecxz
xchg
cmp
add
inc
xor
subl
mov
arpl
stc
jp
pop
punpckhwd
jnp
sub
cmp
test
jecxz
repnz
sbb
jne
push
pop
adc
mov
cli
fs
fwait
mov
mov
out
sbb
js
and
pop
mov
aad
out
psubsw
sub
jp
pushw
mov
push
or
stos
push
xchg
push
sub
fcmovnb
test
ss
adc
into
push
movsl
pusha
add
sahf
in
iret
sub
popf
aaa
int3
and
dec
aad
out
inc
sbb
mov
and
je
loopne
addl
stos
and
cmc
and
ret
and
sub
dec
or
popa
dec
sub
scas
and
pop
mov
inc
sbb
lea
lods
mov
jno
jecxz
xor
mov
jle
jecxz
cmp
out
aad
gs
insb
loope
push
bound
cli
fdivrs
add
mov
call
sub
sti
mov
loopne
shl
push
mov
push
mov
fbld
sahf
cmc
push
pop
fwait
adc
arpl
ret
xchg
add
stc
lea
xor
gs
add
stos
mov
sbb
xchg
lods
popa
les
fdivrl
dec
sar
in
pushf
arpl
mov
jp
mov
jmp
cmp
push
or
lcall
or
pusha
sbb
add
int3
xchg
into
ror
mov
cmp
push
xchg
push
xor
insl
pushf
cld
movsb
sub
mov
inc
sarb
push
test
inc
in
xchg
lea
movsl
or
lock
mov
pop
xor
sub
ljmp
hlt
mov
xor
adc
pushl
push
lods
int
lret
inc
pop
or
and
sub
mov
inc
scas
test
xor
fcomi
push
lods
stos
jp
and
inc
pop
push
sub
jne
sbb
mov
add
inc
adc
loope
lahf
sub
push
inc
push
xchg
das
push
lods
push
mov
mov
xor
jae
aas
mov
cli
sub
pop
jl
stos
xchg
dec
mov
mov
and
out
and
mov
xchg
movsb
xchg
mov
hlt
dec
xor
ret
and
movsl
std
int
les
jno
lods
shrb
pop
roll
and
adc
lret
sahf
mov
push
mov
hlt
xor
pop
scas
test
fidivl
sbb
xor
ret
aam
pushf
int3
adc
iret
mov
sub
sahf
std
inc
jp
jmp
jge
mov
mov
repnz
sbb
sub
outsb
cwtl
popa
cwtl
clc
fwait
addl
das
jb
pushl
fimull
jge
ljmp
popa
sbb
nop
xorl
mov
xchg
lods
ss
lidtl
adc
mov
dec
shlb
lds
jne
dec
add
movsl
imul
aam
pusha
gs
push
cltd
pushf
adc
xchg
pop
xor
aad
insl
jns
addl
popa
test
mov
mov
icebp
and
push
ja
ja
inc
dec
pop
adc
mov
add
movsb
arpl
test
dec
pop
pushf
ret
out
mov
inc
test
pop
sub
les
push
cmp
and
popa
cmc
loopne
inc
rcl
ds
mov
mov
jecxz
xchg
jge
cld
and
xchg
movsl
stos
mov
or
sbb
jae
je
sbb
aas
in
push
sbb
mulb
sbb
loope
jmp
or
and
call
adc
dec
mov
lahf
xor
cs
fsubp
scas
push
sbb
clc
bound
inc
out
add
mov
or
dec
dec
pop
ds
ror
test
movsb
and
je
or
add
sarl
or
adc
das
movsl
cmp
inc
mov
cmp
cltd
shll
xchg
lods
cmp
push
dec
insb
xor
lods
cmp
repz
lods
movsl
out
prefetch
das
mov
out
or
lret
test
dec
jg
mov
and
addl
mov
xchg
jnp
dec
movsl
pop
inc
or
dec
cmpsl
stc
mov
inc
mov
outsb
xchg
out
ficompl
out
hlt
hlt
xor
lret
rcr
and
jmp
sti
fs
shll
or
jge,pn
es
loopne
gs
mov
cmpsb
xor
push
bound
inc
repz
sub
cwtl
mov
sbb
clc
imul
jecxz
mov
or
pushf
dec
das
and
popa
sbb
iret
xor
addr16
inc
aad
mov
aam
jecxz
ljmpw
jb
incb
jg
pop
mov
fistpll
inc
push
pop
adc
inc
scas
inc
insb
dec
pushf
jp
les
xlat
lcall
dec
jg
out
popf
pop
stc
and
dec
mov
test
mov
shll
movhps
push
je
imul
jge
push
shlb
cmp
fsubrl
xchg
xchg
out
repz
mov
pushf
stos
testl
addr16
mov
xchg
rcrl
dec
pop
fidivs
jmp
lret
cwtl
addr16
add
jecxz
lcall
das
sub
xchg
js
leave
stc
jbe
push
add
sub
push
add
je
pushf
cmp
push
add
adc
arpl
add
jnp
test
cs
movsl
into
mov
hlt
loopne
mov
imul
dec
mov
into
outsb
add
shlb
cmp
pop
dec
jns
les
out
inc
or
mov
mov
xor
aad
pusha
jmp
inc
cs
sbb
or
jo
leave
popf
mov
push
out
sub
sbb
sub
pop
pop
andb
mov
fcmovne
push
sub
fmull
outsb
sti
inc
dec
mov
hlt
je
out
in
or
enter
lret
pop
mov
les
subb
xchg
add
js
adc
es
jp
insb
sub
je
xchg
xchg
out
add
xchg
and
mov
sbb
insl
mov
test
xchg
cli
aaa
data16
sbb
push
mov
out
sahf
sub
jecxz
dec
mov
sbb
test
mov
mov
frstor
and
ss
stos
push
out
mov
stc
xor
pop
pop
xchg
adc
push
lcall
mov
jnp
xchg
in
xor
and
xor
mov
mov
inc
shl
stos
icebp
pop
and
ss
lret
pop
ds
mov
and
insb
jecxz
or
outsl
pop
push
das
inc
and
in
cld
sbb
leave
or
cmp
add
xchg
int
push
cli
mov
ja
lret
cmp
pop
movsb
pop
xchg
dec
mov
add
lret
pusha
add
cmp
cmpl
push
or
xor
xchg
mov
cmp
ret
lock
outsb
jp
jp
inc
mov
mov
and
dec
adc
sar
decb
imul
jae
xor
cld
cmp
xchg
les
mov
xor
xchg
into
lods
mov
sbb
xlat
arpl
in
bound
cmpl
in
mov
leave
sub
sbb
lahf
lock
cmp
out
push
xor
ret
lcall
and
rcll
mov
pop
push
cmpsb
lret
jp
lcall
inc
cli
inc
mov
aam
popa
mov
mov
shrb
fidivs
aaa
xchg
or
jg
call
xchg
cmp
imul
out
mov
test
sbb
push
pop
shr
loope
mov
cmp
mov
test
rcll
pop
adc
fisttpll
mov
and
inc
ljmp
cmp
clc
mov
mov
mov
pop
stc
pusha
xchg
adc
inc
push
addr16
xorl
fs
jmp
aam
out
out
fisubrl
jg
lahf
int
jecxz
lock
loopne
in
imul
je
cmpsl
lret
movd
pop
stc
xor
inc
mov
jp
je
cmpsl
xchg
fstl
add
sbb
and
in
mov
data16
inc
add
sbb
jne
jae
jg
cmp
idiv
xlat
adc
pop
inc
jnp
repnz
cmc
mov
and
outsl
cmc
sbb
aad
frstor
imul
test
xchg
js
xchg
scas
popf
int3
push
pop
ret
push
addr16
cmp
mov
test
push
jmp
js
clc
dec
cmp
scas
insb
mov
mov
std
dec
addl
or
jle
cmpsl
dec
mov
xor
dec
push
push
cs
lds
mov
aaa
dec
and
adc
addb
jnp
and
mov
sub
pop
mov
mov
or
inc
mov
mov
call
fs
jno
jbe
lods
add
mov
stc
jns
inc
jl
cmp
lea
aaa
sbb
gs
fdivrs
out
fsubrl
dec
out
fsubl
dec
aas
xor
icebp
mov
in
insl
push
es
cli
frstor
clc
and
pop
pushf
add
push
mov
pop
inc
sbb
mov
testl
pop
push
bound
add
leave
mov
rcrl
ds
dec
rcrl
sub
mov
nop
out
mov
jnp
addb
arpl
adc
test
lods
dec
jge
adc
pop
and
repz
jmp
push
mov
cld
mov
xor
add
mov
push
pop
push
aad
test
push
dec
outsb
xchg
cmp
lock
mov
ds
or
shl
and
iret
iret
orl
adc
xor
pusha
in
mov
xchg
mov
popl
pop
mov
push
add
adc
mov
dec
mov
loop
call
xchg
fimull
pop
and
xchg
mov
cmp
loopne
test
aaa
aad
fistl
fnsave
rcr
dec
push
lahf
lret
xor
pop
and
mov
cmc
aas
scas
and
and
mov
sub
mov
or
test
push
dec
scas
addr16
mov
outsb
push
mov
xor
push
das
dec
into
push
in
jb
sbb
xor
out
ficomps
adc
inc
mov
or
sahf
orl
leave
xchg
and
and
pop
cmp
in
add
mov
inc
pop
and
bound
or
negl
xlat
movsl
xchg
jnp
or
push
push
call
in
mov
enter
mov
fwait
loopne
popa
sbb
movsb
enter
inc
jl
push
xchg
xor
and
sbb
in
clc
pop
jmp
rolb
cmpsl
mov
cli
sub
ffreep
mov
mov
cmp
repz
adc
xchg
shrb
lds
and
jne
stos
or
test
mov
sbb
xchg
loopne
inc
outsl
call
ljmp
arpl
pop
punpckhwd
data16
mov
popa
lds
shrl
xchg
out
cwtl
push
in
ficoms
jge
cmc
int
xor
push
shl
jb
es
ss
ret
mov
jle
negb
inc
nop
dec
je
pop
xor
popf
repnz
xchg
adc
or
xchg
mov
jno
mov
loope
mov
jne
mov
push
or
insl
push
cmp
adc
popf
enter
in
xor
mov
cmp
shrb
inc
jb
mov
and
mov
mov
bound
lret
je
int
divl
jbe
test
dec
sub
das
mov
enter
enter
andl
in
test
push
stos
fwait
ret
mov
adc
sub
lods
test
inc
addr16
outsl
cmp
mov
or
push
in
icebp
fdivrl
push
push
adc
rol
mov
out
inc
std
cmpsb
xchg
shl
xor
and
sbb
leave
mov
jmp
push
cmp
inc
das
sahf
decb
je
mov
push
in
or
sub
imul
gs
mov
bound
cmp
pop
cli
testb
cld
pushf
push
jne
pop
jnp
repz
jnp
aam
bound
repz
ret
loope
or
pop
das
out
mov
je
xor
sbb
mov
sub
adc
cmp
int3
push
mov
mov
xor
jns
ret
pop
dec
js
push
mov
nop
jecxz
dec
mov
lds
xchg
push
loopne
and
or
adc
fs
adc
sti
shl
sub
push
and
push
je
jp
and
pop
sbb
gs
scas
push
mov
dec
adc
or
xor
push
add
in
mov
cmp
mov
arpl
imul
mov
jae
rclb
imul
arpl
jne
fstl
xchg
xchg
adc
bound
into
xchg
shrl
movups
sbb
daa
pop
mov
push
ss
mov
sti
fs
popa
pop
push
sub
pop
jle
mov
sahf
mov
pop
lods
jl
dec
lods
inc
test
xchg
out
jge
out
mov
call
lock
mov
lock
pop
pushf
xor
imul
mov
mov
ror
sbb
mov
adc
xor
nop
xchg
test
inc
out
adc
aaa
sbb
adc
lea
out
and
outsb
mov
or
inc
sub
mov
ss
bound
mov
dec
aaa
ljmp
inc
clc
sbb
jp
sub
lret
lret
cmp
xor
test
pop
into
add
and
jbe
aas
sub
gs
icebp
int3
mov
dec
hlt
fistl
subl
dec
push
sbb
and
shlb
pop
lds
mov
xlat
cmp
int
or
aam
and
cmpsl
scas
xchg
adc
xor
mov
cld
lret
jmp
rcrl
or
mov
lar
mov
xchg
out
or
stos
adc
insl
mov
push
dec
ja
sbbb
imul
cmp
stos
or
in
mov
and
pop
push
cmp
shl
push
pushl
imul
push
ret
bound
rolb
fidivrs
loope
ja
test
pop
sub
cld
cmp
mov
pop
cli
ljmp
adcl
stos
mov
lret
pop
cmp
sbb
dec
jae
and
and
jno
test
inc
jno
or
mov
clc
js
adc
leave
mov
or
mov
imul
mov
addb
adc
add
inc
inc
pop
out
shrl
loopne
pushf
fisttpll
jns
dec
lret
dec
push
pop
pushf
and
adc
lock
pop
and
xchg
cmpsl
lds
cwtl
sbb
and
adc
out
outsb
sbb
cmpsb
lds
cmpsl
push
fildll
inc
xor
lret
fcompl
call
push
imul
scas
pop
insb
and
adc
out
sbb
fdivp
push
fs
mov
das
push
pop
pop
fucomp
sub
leave
movsl
sarl
js
push
ljmp
in
dec
ficoms
inc
cmp
inc
mov
lds
lea
jmp
sub
push
in
or
dec
mov
loop
or
ds
les
dec
adc
ss
popa
or
pop
sub
out
dec
dec
lea
nop
fs
push
in
lods
cmp
and
rolb
pop
addr16
loop
outsl
and
js
cmp
mov
add
gs
shrl
mov
lock
sub
pop
loope
rclb
inc
in
jbe
cld
cmp
mov
enter
mov
and
aas
mov
or
call
lea
xchg
and
andb
or
shl
mov
dec
and
adc
push
dec
addb
push
xor
push
mov
js
xor
push
push
adc
adc
jns
xor
lock
sbb
js
or
stc
cmc
push
jp
mov
in
ljmp
test
xorl
imul
out
cmc
xor
mov
test
popa
das
inc
dec
push
jg
call
test
sub
sub
cmp
sti
mov
enter
inc
xorl
sbb
mov
mov
lods
arpl
adc
rclb
mov
test
jle
in
jmp
jmp
rcl
mov
dec
or
subb
add
lods
mov
stos
cmp
sub
aam
cs
lock
dec
pop
mov
or
mov
addr16
mov
xchg
mov
stos
mov
icebp
aad
fwait
add
test
dec
sbb
add
pop
out
nop
popf
popf
mov
lret
inc
insl
push
push
lock
push
add
rcrl
movsl
int
addr16
jmp
ja
mov
addr16
dec
insb
adc
mov
test
outsl
pop
jl
add
push
mov
jmp
pop
repnz
nop
ficoml
xor
imull
dec
cmp
test
iret
daa
mov
push
cmp
sub
pop
fisubrs
outsb
jge
adc
jle
add
push
mov
cmpsb
xor
dec
mov
xor
scas
out
or
dec
ja
push
mov
sahf
in
or
hlt
push
pop
jae
addl
test
andb
scas
and
pop
dec
fwait
jge
xchg
insl
shl
mov
shrl
popa
test
lock
lcall
push
push
xchg
mov
jge
jbe
nop
cld
jmp
out
js
std
pop
mov
or
ret
and
inc
ja
sbb
into
mov
sub
mov
inc
in
ret
outsl
arpl
cmp
outsb
inc
add
push
je
das
or
mov
leave
pop
mov
lds
mov
mov
jb
push
push
mov
and
push
adc
notb
and
mov
enter
mov
int
xorl
mov
cmpsl
adc
sub
pop
mov
sbb
jg
jge
lret
push
cmpsb
pop
pop
clc
iret
jo
mov
jne
add
push
loope
xor
dec
popf
outsb
mov
dec
ds
popl
xchg
and
cmp
ret
push
dec
sbb
cmpsl
insl
scas
or
push
mov
mov
movsl
hlt
inc
cmc
out
mov
enter
add
push
lret
lcall
adc
gs
xchg
pop
cld
sbb
add
sub
push
popf
xor
sub
mov
add
push
std
mov
arpl
pop
adc
idivl
outsb
dec
gs
inc
and
loop
imul
outsl
lods
ds
xlat
rcl
xor
pop
and
and
cmp
xlat
imul
pop
inc
repz
fs
xchg
sub
push
xchg
inc
jg
je
aam
or
decb
cli
and
sbb
stos
mov
imul
ja
add
inc
pop
xchg
cld
pop
lcall
ljmp
shrl
inc
daa
cmp
lahf
sbbb
fidivl
shl
fnsave
popf
ret
mov
out
pop
ljmp
mov
xor
ss
cmp
cld
loopne
jl
shrb
push
and
nop
push
ret
sub
testl
adc
inc
or
push
cld
sarl
sub
or
inc
fwait
jg
dec
mov
push
pop
jmp
pop
sbb
jae
mov
xchg
or
mov
outsl
repnz
or
and
inc
mov
lahf
rcll
xor
call
mov
jge
jp
or
xchg
mov
pop
cmp
sub
out
daa
fisttpll
mov
push
sub
insb
loope
mov
push
dec
jns
sarl
test
adc
add
test
imul
adc
fdiv
js
fwait
stos
cmp
ss
scas
sub
push
xor
lock
loope
sub
daa
rcrl
clc
xchg
mov
cmpl
das
ljmp
lods
inc
cld
out
fucom
mov
mov
and
outsl
je
in
repz
jne
push
fwait
in
jo
rolb
sub
sub
das
dec
inc
cmpsb
adc
dec
push
mov
sbb
es
mov
into
sti
je
sub
in
imul
ret
out
inc
jle
inc
outsl
jne
and
pushf
in
adc
addr16
in
mov
adc
push
roll
or
aas
mov
lret
cmp
dec
push
aaa
mov
jbe
xor
mov
push
ret
int3
mov
jae
mov
mov
mov
jg
daa
add
rcll
sbb
add
fsts
ja
adc
mov
jl
lret
int3
cwtl
lret
xchg
lds
test
fistl
push
shlb
cmp
lods
jp
repz
data16
jl
out
scas
or
jne
push
push
outsl
not
insb
adcl
fisttps
xor
cmp
rcrb
xor
pusha
sbb
cmp
jnp
xchg
fcmovnbe
or
xor
mov
inc
and
inc
jmp
pop
iret
and
bound
ds
int3
add
sub
pop
sahf
ja
lcall
lret
outsl
ljmp
and
insl
sub
mov
fistps
adc
movsl
test
sarl
mov
and
int3
dec
loop
push
fistpl
push
fwait
mov
adc
mov
mov
adc
pop
mov
cmp
sub
xchg
loop
xor
jle
fs
push
pushl
lret
inc
insb
add
pop
mov
loop
cld
outsl
aam
xchg
mov
mov
dec
xchg
adc
pop
mov
andl
jmp
xor
xchg
cmp
xor
js
jge
push
dec
rcl
lcall
mov
test
mov
add
inc
push
xchg
jg
in
pop
nop
jae
add
push
mulb
jle
faddp
bound
mov
int
popa
sti
jo
xchg
aas
mov
and
ljmp
sbb
push
push
dec
or
mov
stos
mov
and
movsb
adc
icebp
push
cmpsl
testb
movsl
fnstcw
fdiv
mov
xchg
iret
cmp
push
and
fnstcw
leave
aad
stc
dec
inc
call
in
outsb
add
cmc
xchg
out
mov
jge
negl
imul
pop
aad
or
dec
das
dec
enter
fidivrs
add
enter
les
into
sub
int3
mull
xchg
mov
push
je
sub
aaa
pusha
sarl
sub
dec
out
push
mov
inc
sub
cs
mov
mov
aas
xchg
add
or
inc
jae
loopne
and
inc
inc
add
out
out
repz
xchg
leave
fsubrl
fldt
mov
or
mov
adc
shl
ds
cli
call
shll
leave
sub
js
mov
or
ds
fbstp
mov
jmp
cmp
test
dec
push
mov
xchg
and
pop
or
mov
loopne
roll
cli
sti
add
push
add
insl
xor
mov
rorb
bound
pop
push
stc
sbb
mov
adc
loop
mov
ret
pop
fsubp
repz
cmc
jl
mov
sbb
sbb
xchg
cmp
int3
inc
or
cmp
call
and
nop
imul
addl
idivl
mov
cmp
int3
popf
fcmovnbe
mov
xchg
or
pop
stc
mov
mov
push
push
dec
inc
int3
jae
rcrl
adc
pop
lret
mov
shll
mov
pop
mov
aaa
mov
dec
mov
mov
mov
shr
xchg
mov
xchg
mov
mov
aad
aaa
inc
jnp
and
jnp
iret
jb,pt
jge
push
jl
xlat
jae
cmp
xchg
xor
das
mov
aad
adc
mov
dec
sbb
int3
scas
sub
mov
jmp
lahf
gs
std
xchg
xchg
jnp
sub
aas
and
sti
out
push
adc
inc
or
insl
sbb
leave
or
inc
loopne
enter
aad
loop
aad
into
test
and
lret
cli
push
stc
lret
mov
scas
and
pushf
adc
mov
sub
dec
shrb
mov
pop
jle
in
pop
sbb
mov
in
push
inc
sbb
sbb
cmpsb
push
xchg
movsb
and
ret
cli
sti
inc
add
mov
jo
pusha
jp
or
ja
xchg
or
cld
fcomps
sahf
dec
adc
push
fistpll
mov
xchg
loop
mov
mov
jle
cltd
jle
into
cli
mov
leave
in
xor
sahf
loop
dec
xchg
sbb
loope
and
rorl
xchg
cli
orb
sbb
adcb
rcl
das
lock
pop
mov
shlb
add
inc
fisttps
outsl
adc
insl
sub
decl
push
inc
mov
inc
insl
cwtl
lahf
cmp
mov
cs
or
leave
push
mov
add
ja
mov
into
mov
fisttps
pushf
je
ficompl
xor
mov
jle
sbbl
lea
cmp
add
inc
aas
mov
sbb
rcrb
xchg
cmp
lock
out
adc
lock
mov
jle
dec
push
mov
cmp
mov
insb
lea
sahf
push
jb
jmp
mov
mov
adc
cmp
hlt
dec
push
mov
cltd
ss
xchg
xchg
adc
push
inc
jbe
mov
js
fistl
pop
loopew
xor
and
aam
xor
dec
mov
xchg
mov
lret
lcall
test
negb
and
sbb
sub
sub
mov
and
in
xor
lcall
cmp
xchg
add
les
or
mov
jecxz
ficoml
dec
mov
mov
sarb
lret
push
add
push
adc
mov
test
and
jne
push
add
arpl
outsb
scas
pop
cmc
mov
dec
inc
lret
and
test
arpl
arpl
in
cli
and
inc
push
lahf
nop
ds
jne
repz
inc
outsl
pop
sbb
sbb
and
push
aad
fistps
mov
inc
popf
xor
mov
daa
cli
or
mov
enter
cmp
mov
pop
repz
loope
std
enter
rorb
iret
and
fmull
or
adc
mov
push
lods
add
hlt
lret
cmp
loope
push
outsb
popa
mov
stos
jae
les
dec
mov
into
pusha
mov
into
pop
jno
mov
in
imul
inc
gs
insb
mov
mov
js,pt
scas
dec
popf
sbb
hlt
jae
stc
pop
js
push
mov
push
sbb
push
sub
rorl
cmp
test
pop
and
js
psadbw
dec
add
push
or
push
or
cmpsl
roll
ja
push
or
movsb
xchg
jns
jne
or
jp
lods
and
fistps
jmp
into
mov
push
setne
or
mov
xchg
push
in
arpl
out
btc
mov
sbb
outsl
jmp
test
lcall
jo
mov
xor
push
iret
inc
lret
insl
sahf
lahf
or
cmc
lock
jg
mov
fsubs
ja
cmp
push
xor
loopne
jbe
adc
dec
xor
movsb
jb
push
mov
and
mov
jle
gs
popa
xor
test
test
lds
lret
xchg
adc
cmp
mov
ja
xor
into
jo
lret
arpl
out
pop
add
pop
mov
inc
pop
sub
xchg
sbb
adc
sub
icebp
out
xor
and
scas
lds
sbb
jns
push
jb
mov
cli
aas
lea
xor
cmpsb
das
and
pop
add
xor
xor
es
xchg
lcall
mov
into
fidivl
adc
mov
ds
out
adc
imul
jp
out
push
pop
sub
xor
test
cmp
push
pushf
add
pop
push
sub
jae
data16
mov
mov
mov
rclb
mov
pop
cld
xchg
stc
pushf
inc
iret
pop
pop
sbb
pusha
mov
jnp
fwait
inc
cwtl
repnz
pop
outsb
cmpsb
xchg
rorb
pushf
jo
or
mov
xor
rcrb
xor
cmp
push
inc
add
mov
pop
push
iret
lahf
push
call
sar
mov
xchg
shr
mov
jbe
mov
mov
pop
dec
mov
jle
pop
lahf
ljmp
inc
ljmp
nop
notb
imul
les
jecxz
adc
mov
adc
outsl
mov
repz
scas
xchg
or
sbb
js
lahf
lret
dec
aaa
inc
lods
jmp
inc
inc
xchg
insl
or
ret
jne
fists
in
shll
and
lods
jne
cmpsl
mov
jle
sub
cltd
and
rolb
inc
mov
mov
imul
cmp
cmp
ret
into
loope
mov
mov
gs
jl
jae
call
add
popa
sub
bound
mov
mov
sbb
dec
mov
das
popa
fcmovu
ljmp
xorb
test
xchg
xorl
mov
mov
fcmovnu
pop
scas
adc
shl
inc
jg
bswap
or
cmp
cmpsl
mov
push
int
jmp
cwtl
scas
cs
push
scas
jmp
jmp
sub
flds
mov
jl
mov
ret
lcall
je
jns
loopne
test
cmc
mov
iret
push
dec
cmp
cld
cld
dec
mov
cmp
pop
mov
mov
popa
fldl
mov
pusha
dec
insl
adc
dec
sbb
int
cmp
mov
add
inc
pop
push
leavew
sbb
popa
out
push
mov
add
cltd
dec
xchg
mov
cli
pushf
jl
lret
test
and
fs
mov
adc
sub
test
cmp
neg
push
repnz
inc
je
bound
loop
roll
movsb
xor
mov
and
or
mov
or
mov
cmpb
xchg
mov
icebp
and
fucomi
add
ss
push
mov
mov
sbb
out
iret
xchg
jmp
mov
ja
int
insl
in
stos
clc
cmp
scas
les
js
enter
bound
vmread
sub
add
movups
addr16
enter
mov
cmpsb
fcoml
shlb
dec
and
xor
dec
cmp
je
inc
stos
mov
insb
scas
dec
fbld
loopne
pop
sub
xchg
push
xchg
andb
mov
mov
jmp
inc
jb
mov
test
stos
loopne
pop
bound
mov
xor
fxch
xchg
adc
test
cmp
or
sub
xor
pushf
or
je
insl
pop
jmp
mov
ror
insb
repz
add
push
fidivl
cmpsl
sbb
movsl
pop
loop
adc
mov
shl
xorb
in
dec
mov
xchg
ret
dec
lock
mov
outsl
dec
adc
xchg
enter
mov
in
sbb
push
and
pop
repz
mov
add
sub
loope
fs
and
stc
aaa
pop
mov
push
mov
movsl
faddl
sbb
inc
xchg
mov
incb
jmp
jnp
dec
sub
jb
lret
mov
add
jmp
lods
cmc
sbb
daa
dec
or
mov
jecxz
lea
jecxz
fs
insb
ret
fists
cmp
clc
fldcw
cmp
pop
jnp
mov
stos
sub
push
test
mov
inc
pop
es
xchg
jl
sub
cmpsl
mov
lret
xor
sbb
notl
cmpsl
clc
out
fsubs
sub
andb
cmp
pop
and
push
hlt
or
mov
add
xor
push
push
mov
mov
and
cmpsl
mov
ds
cmp
dec
loopne
fldt
xor
sub
xchg
sbb
or
and
les
ror
mov
in
fxch
xchg
clc
mov
cmp
sub
sti
test
cmp
outsb
gs
jb
je
in
xor
mov
stos
shll
in
add
subl
shrb
inc
and
imul
push
inc
imul
and
pop
fists
jmp
lret
into
pop
adc
mov
adc
push
in
insb
mov
jo
mov
push
xchg
sub
jo
fadds
lea
hlt
adcb
fisttps
mov
das
cwtl
jbe
cmc
inc
dec
and
mov
jmp
xchg
mov
and
je,pt
fs
mov
xchg
and
daa
xor
imul
out
fsubrl
and
pop
outsb
mov
cltd
push
dec
sahf
ljmp
or
mov
int3
dec
mov
mov
daa
into
xor
adc
mov
fcmovbe
xchg
dec
pop
inc
and
xor
mov
inc
cli
fisttps
ljmp
or
stos
and
aaa
mov
cmc
nop
pop
sub
jbe
xlat
in
mov
loopne
into
and
cltd
xchg
repnz
sahf
push
cwtl
fmull
sbb
cmp
imull
imul
enter
mov
rclb
cs
clc
out
in
js
scas
mov
push
push
ret
mov
pop
sbb
aaa
or
daa
int3
in
into
inc
push
pusha
and
push
fimull
mov
cmp
mov
ret
jno
hlt
lret
xchg
jae
lds
jnp
push
int3
mov
dec
sub
lcall
into
jp
jno
and
movsl
mov
subl
fildll
insl
push
push
popf
lcall
clc
gs
jg
jnp
popa
xchg
in
icebp
in
xor
add
push
aad
mov
mov
test
arpl
adc
jmp
xorl
push
pop
push
not
push
fwait
jl
mov
sar
shlb
js
jae
aam
mov
mov
pop
push
call
jge
scas
add
adc
imul
cli
sbb
rcrb
mov
mov
lods
aas
xchg
cmp
scas
mov
jge
movsl
mov
adc
and
push
dec
les
xor
fdivrs
and
xchg
add
daa
lock
outsb
or
push
lock
mov
loope
and
test
iret
pushf
rcll
mov
ret
rcrl
testl
push
hlt
roll
cs
and
fmull
jecxz
orl
stos
mov
jge
notb
mov
mov
add
push
or
hlt
xchg
je
jmp
add
scas
cmp
mov
pop
mov
cmp
mov
jl
das
push
into
jb
in
fildl
xor
dec
sub
xor
push
push
and
sub
das
adc
out
pusha
pop
push
pushf
test
sub
cmp
mov
push
mov
repz
xchg
dec
dec
stos
imul
pop
fsub
jae
pop
jmp
lods
jne
sub
ja
lods
mov
scas
mov
subl
jge
xor
ds
jl
jns
pop
out
out
dec
inc
cmp
fisubl
cmpsb
add
sub
inc
iret
negl
in
out
test
cs
outsb
add
lods
lret
test
jg
dec
sarl
sub
out
mov
movl
adc
adcl
xchg
or
mov
push
fistps
cwtl
js
mov
add
xlat
xchg
or
jns
push
std
xor
or
insb
in
xlat
lahf
or
mov
or
or
stos
popf
xor
out
adc
in
in
inc
or
into
je
or
pop
cmp
lahf
ret
repnz
incb
shlb
mov
mov
int
mov
push
cmp
xor
pop
push
xchg
cli
mov
push
in
rol
pop
and
mov
out
loope
sbb
dec
xor
loopne
mov
fsts
mov
test
mov
mov
lahf
mov
sbb
out
mov
mov
lcall
shlb
lods
rorl
ljmp
mov
mov
stc
inc
iret
inc
and
das
les
jo
jb
movsl
clc
push
add
shrl
cwtl
jmp
jno
pop
sbb
shl
scas
out
jle
adc
xor
mov
jge
daa
xchg
movsb
sbb
lock
jb
adc
cltd
jb
sbb
mov
sbb
xlat
lret
data16
dec
mov
jbe
sbb
xchg
dec
inc
lods
mov
inc
dec
xchg
std
sbb
jl
add
pop
imulb
rolb
mov
jne
pop
xchg
sar
je
dec
inc
xchg
mov
fwait
sub
inc
adc
test
aaa
jmp
ja
fdivr
mov
das
push
lods
shlb
jbe
gs
loope
pusha
lahf
mov
ja
mov
mov
sbb
mov
out
shlb
pop
mov
cmp
sub
and
jne
scas
xchg
daa
lcall
out
mov
mov
pop
and
push
cwtl
js
xor
push
pop
sub
ja
mov
xor
jae
or
mov
jb
adc
mov
push
xor
in
xchg
mov
xchg
sbb
mov
cmp
sti
lret
cltd
pop
adc
jb
aaa
xchg
fdivr
sbb
fxch
adc
mov
inc
push
or
adc
and
fnstsw
dec
mov
fisttpll
adc
cld
in
add
addr16
dec
inc
int3
outsb
mov
shl
inc
dec
enter
stos
xchg
es
xor
sbb
call
rcrb
cmp
push
and
pop
mov
jecxz
xchg
pop
adc
icebp
cmpsb
mov
test
cmp
push
xor
test
push
jle
lods
fimuls
shrd
lock
mov
xchg
and
inc
add
mov
xchg
fdivl
lods
pop
mov
and
dec
sti
or
cmp
push
inc
xchg
xor
add
es
in
orb
in
out
xorl
pop
ja
insl
repnz
call
cmp
jg
nop
dec
icebp
shrl
repz
fisttpl
push
into
popa
out
push
mov
bound
cmp
arpl
cs
testb
xor
aad
imul
leave
cmc
in
or
cmp
cmpsl
adc
in
leave
add
jnp
add
sub
xor
mov
gs
stos
lods
add
stos
dec
insb
jb
xor
pop
outsb
xchg
add
in
adc
sub
jo
push
and
out
insb
xchg
xor
rorl
and
jne
out
jns
cld
cmp
mov
pop
mov
test
cld
pop
data16
outsl
or
and
outsl
ret
and
inc
cwtl
sbb
int3
push
cmpsl
loop
lock
pop
fdivp
cmpsb
insl
loopne
ret
mov
pushf
add
xor
xor
ds
inc
mov
mov
scas
addr16
mov
mov
xchg
daa
fadds
outsl
test
movsl
mov
aam
out
dec
dec
imul
scas
or
pop
dec
call
mov
mov
mov
xchg
mov
outsb
jl
cmpsb
test
ja
aas
imul
aam
and
cmp
adc
daa
imul
xchg
rcll
in
aaa
repnz
mov
lods
cmpsb
add
mov
xchg
cmp
out
xchg
xchg
mov
mov
outsl
mov
stos
mov
int
inc
enter
cmp
dec
xchg
sbb
xor
mov
mov
mov
movl
xor
jmp
and
dec
sub
lock
outsl
aam
enter
cltd
fisttpll
mov
ss
add
adc
xchg
outsb
stc
xor
push
and
mov
stos
enter
in
cli
mov
daa
fistpll
orb
sub
jecxz
hlt
jecxz
add
mov
lea
xchg
jbe
sub
inc
adc
stos
or
jmp
sbb
sbb
push
scas
dec
push
push
mov
and
ret
jnp
lret
xor
popa
insl
aas
in
mov
fdivs
push
mov
fwait
sub
adc
or
movsl
out
pop
out
pop
das
jae
mov
xlat
test
insb
inc
push
xor
outsl
and
push
cmpsl
ret
inc
repz
cmpsl
sub
inc
scas
mov
fdivrs
icebp
cld
mov
and
pushf
movsl
leave
adc
push
loop
les
push
mov
iret
movsb
xor
mov
in
xchg
cmp
out
pop
push
jno
loopne
lea
loopne
lds
push
lahf
je
cmp
xchg
popf
mov
fisttpl
outsl
mov
xchg
addb
sub
in
xchg
int3
stos
xor
jae
pop
ljmp
sbb
enter
repz
scas
test
popf
rcr
inc
pop
lea
pop
sbb
jo
repz
test
pop
loop
push
inc
das
dec
es
mov
pop
mov
cs
dec
mov
sbb
lret
lret
add
adc
fcompl
add
add
add
sbb
test
pop
shll
ficomps
pop
add
cwtl
ret
repz
sub
fsubrl
cmpsl
pop
sub
sub
push
fisubl
push
cltd
nop
dec
sbb
cltd
fs
fcoml
inc
ret
or
loopne
gs
nop
push
setne
in
sbb
adc
push
loop
outsl
sarb
xchg
repz
mov
cmc
xchg
ret
insb
jno
addr16
andl
in
rorl
lds
push
pop
sti
test
popa
bound
mov
stc
lock
push
pop
aaa
jge
mov
and
fistps
rol
cli
movsb
pop
test
fnsave
add
or
push
out
jb
sbb
call
cmovl
lcall
aas
out
sbb
pop
jb
lock
inc
push
or
mov
add
or
cld
aas
adc
int3
inc
mov
mov
fdiv
jne
js
lock
cld
mov
jg
fistps
mov
fsubr
sbb
movsl
push
mov
rolb
into
inc
adc
push
icebp
cld
ja
mov
sbb
repz
sbb
dec
fs
dec
or
xlat
movsb
pop
cmp
sub
fldl
hlt
lea
jo
add
popa
mov
mov
shr
nop
dec
xchg
pushf
scas
dec
sbb
test
and
push
add
outsb
imul
sbb
fistpll
cmp
incb
lret
jns
lahf
push
add
jae
test
sbb
push
cltd
jne
arpl
cmp
pop
cmpsb
xchg
pushf
std
and
inc
pop
xlat
cs
ja
mov
shll
sti
add
and
inc
pop
in
ds
sti
leave
test
sbb
mov
loop
fiaddl
sub
cmc
pop
cmp
inc
push
loopne
ss
movsb
xchg
cli
cltd
and
fsts
imul
push
jmp
iret
adc
sbb
jecxz
sbb
xorb
addr16
xor
insl
cmpb
push
cmp
dec
loopne
adcl
adcl
pop
push
lea
fs
sub
jmp
movsb
call
mov
inc
dec
xor
jbe
xchg
sub
ja
add
adc
lret
aas
lods
out
imul
cmp
fcomip
jp
arpl
cmc
mov
add
xchg
push
push
in
sbb
fnstcw
out
and
lret
hlt
cmpsl
cld
inc
imul
out
mov
sbb
pop
jnp
aad
imul
jae
pop
rolb
je
pop
dec
rsqrtps
push
push
pop
inc
insb
or
and
cmp
sbb
pop
push
sbb
ja
cld
int
sbb
xchg
inc
fadd
repnz
js
xlat
adc
adc
in
push
flds
mov
test
lods
dec
hlt
insb
jmp
outsb
pop
add
testl
aam
push
arpl
popa
or
insb
fst
iret
push
scas
loopne
mov
dec
stos
jmp
subl
daa
into
jns
jl
stos
or
arpl
cmpl
cmp
jl
mov
rclb
dec
push
sbb
adc
or
movl
insb
cmp
xchg
rcrl
aaa
and
xor
pop
inc
test
add
cmpb
and
jae
cld
pop
dec
fimull
push
jbe
imul
das
mov
inc
cs
out
push
dec
dec
imul
sbb
fs
adc
and
cs
enter
pop
fs
or
jmp
mov
in
pop
sahf
xchg
les
mov
out
jmp
jmp
cmp
lods
mov
dec
movsb
xchg
mov
pop
mov
mov
dec
or
push
xor
test
lret
fcom
lock
aaa
shrb
dec
fmuls
mov
scas
xchg
out
mov
push
js
jne
fiaddl
and
dec
push
push
or
jnp
inc
pop
inc
fs
out
jae
and
mov
lcall
xchg
mov
lods
stos
sbb
sub
push
aad
xchg
mov
pop
add
lret
cmp
aaa
dec
jno
jge
rorl
push
cmpsb
cmp
out
int3
mov
push
inc
ret
pop
lea
sbb
cmp
and
mov
in
xchg
push
sbb
ljmp
mov
test
dec
mov
sub
dec
clc
adc
loop
or
jg
jle
pop
nop
push
xorl
mov
adc
lock
mov
loop
mov
enter
push
repnz
test
dec
dec
mov
jnp
mov
shlb
bound
sub
int3
in
sti
movsl
xchg
subb
mov
and
sub
clc
sarb
pop
cmp
mov
not
stc
add
rdpmc
xchg
push
add
mov
cs
dec
mov
das
jo
fwait
pop
adc
cmc
jp
inc
xor
jl
pop
ss
movsb
dec
rorb
push
sub
push
lret
cs
negb
jns
lds
lods
xacquire
outsb
xchg
mov
addr16
pop
insb
and
hlt
sub
int
add
adc
popf
leave
push
lock
adc
hlt
ds
adc
push
repz
into
mov
fnsave
pop
mov
mov
int3
out
mov
subl
cvttps2pi
sub
sbb
ljmp
sbb
cmp
adc
or
sub
push
hlt
mov
stos
xchg
inc
in
mov
test
incb
mov
das
mov
push
xor
adc
call
scas
je
neg
push
pop
aas
pop
arpl
lock
es
imul
xchg
popa
js
jb
adc
sbb
jp
cmp
dec
cmp
in
adc
mov
sbb
mov
dec
insl
xchg
pop
sti
lea
popf
jbe
in
sub
rclb
pop
fs
jb
push
dec
rolb
stc
xor
out
pop
add
or
xor
sub
sahf
inc
cmp
jmp
push
cmp
ret
mov
std
adc
inc
rcr
pushf
imul
pop
and
pop
in
and
std
ret
mov
or
mov
sub
cmp
jo
adc
leave
add
xchg
add
pop
pusha
cmp
fcomp
test
xor
add
cmpb
or
test
mov
in
arpl
adc
pop
cmp
sbb
cmp
xchg
push
idivb
and
lods
or
mov
add
movsl
les
add
or
adc
sbb
pop
dec
xchg
dec
shll
push
rolb
lock
rcrb
ss
dec
cmp
adc
add
aaa
imull
repz
incb
shr
sub
lods
pop
pushf
cmp
dec
aaa
out
lcall
cltd
and
lahf
in
scas
lcall
xorl
popf
les
lcall
bound
lahf
jne
pop
icebp
mov
cli
ret
pop
mov
xchg
mov
daa
lret
test
cmpsl
add
jge
pushf
xor
push
adc
xchg
popa
mov
dec
fbstp
mov
rcrb
sbb
mov
cmpsl
lods
sub
cmp
xor
arpl
and
add
cmp
test
sub
in
in
pop
dec
jnp
mov
rorl
jl
mov
mov
dec
mov
xchg
push
lret
repz
fwait
mov
jp
lret
jnp
aaa
scas
lret
adc
pop
cld
adc
mov
dec
lds
sbb
push
out
pop
aaa
push
subb
lock
push
fmul
xor
aas
mov
inc
gs
loopne
lds
jecxz
pop
sbb
sti
and
out
inc
call
dec
mov
xchg
xchg
cmpsl
stos
add
js
inc
adc
jecxz
hlt
fcmovu
dec
mov
jl
jge
lcall
inc
out
int
pushf
or
repnz
adc
mov
cltd
rcrl
movsl
xor
or
arpl
pop
push
add
inc
popa
mov
xor
dec
push
addl
mov
fisttps
mov
std
call
movl
aaa
call
pop
loop
icebp
mov
inc
xchg
in
popl
ljmp
scas
and
rcl
lods
inc
jae
mov
sbb
inc
push
out
cmp
subb
mov
ja
daa
and
push
pop
fistpll
adc
inc
push
loope
push
pop
roll
das
lds
push
jmp
repz
out
pushf
test
mov
mov
outsb
std
jecxz
int
in
mov
jo
testb
addl
and
xor
sbb
fdivrl
clc
andb
mov
cmp
xchg
pop
dec
mov
hlt
xchg
stos
inc
cmp
out
sti
xlat
enter
imul
imul
setno
stos
js
mov
fsubrs
cmc
aam
in
pop
inc
adc
jmp
iret
das
in
mov
inc
imul
arpl
sub
push
test
nop
jge
sbb
mov
pop
loop
xor
out
adc
push
jne
mov
or
stc
inc
pop
bound
stos
rclb
pop
lds
sbb
cmp
movsl
and
pop
jmp
cmp
lock
fwait
mov
and
out
adc
rclb
in
out
xchg
push
data16
mov
push
imull
negb
xchg
mov
adc
add
jecxz
sub
jnp
cmp
bswap
ja
inc
out
imul
push
jge
popf
mov
xchg
push
add
test
psubsw
cmp
xchg
popa
out
dec
lahf
dec
roll
jns
packssdw
rsm
imul
shll
cs
mov
je
mov
xor
cmp
dec
mov
inc
pop
ret
push
lods
adc
test
inc
sahf
cpuid
xor
or
cmpsl
inc
les
xor
ds
sub
xor
test
cli
idiv
cmpsl
and
jbe
fs
popf
push
icebp
adc
fimull
ja
sub
addr16
bound
cwtl
xchg
outsl
stos
loopne
push
pop
mov
loop
inc
xchg
and
loope
pushf
sbb
loopne
mov
jle
aad
jmp
mov
adc
outsl
daa
cmp
fstps
ss
xchg
jg
xchg
mov
xor
and
adc
jecxz
or
scas
mov
in
mov
es
lods
dec
stos
pop
outsb
aam
popa
sbb
xchg
mov
data16
dec
stc
push
leave
sbb
nop
mov
sti
cwtl
dec
cs
popf
mov
xchg
add
fs
call
std
mov
imulb
push
loopne
dec
and
cli
mov
addr16
subb
dec
std
push
mov
cmpb
test
adc
mov
jae
fsubrp
jb
test
insb
push
xor
sahf
out
add
mov
cmp
mov
mov
out
cmc
xor
adc
lods
dec
lret
cmp
mov
cli
cmp
add
mov
insl
xchg
mov
or
push
mov
add
rolb
mov
mov
jle
xor
test
mov
inc
in
andl
xchg
and
pusha
jle
inc
pop
lods
push
jae
xor
notb
mov
push
andl
in
mov
call
push
add
ret
ja
mov
xchg
adc
loopne
mov
cmp
clc
insl
mov
jne
cmp
jle
mov
push
lret
add
cmp
xchg
xor
xchg
les
jnp
jecxz
xchg
sub
outsb
sbb
aad
fbld
adc
popf
incl
es
push
cltd
fcoms
pop
mov
in
sub
jns
jle
push
aam
test
shll
dec
push
mov
mov
je
inc
lea
test
pop
xchg
repz
cmpsl
fidivs
dec
inc
daa
dec
and
mov
cs
add
mov
pop
bound
inc
sbb
add
jg
jmp
ja
jnp
cmpsl
ja
fwait
adc
ret
cli
mov
mov
imul
cmc
push
jecxz
push
mov
andb
mov
push
cmp
jle
aad
add
mov
xchg
sbb
das
call
insb
fldcw
leave
sbbl
leave
cs
mov
and
out
xchg
icebp
arpl
outsl
frstpm(287
mov
xor
dec
cld
adc
into
jmp
add
mov
lret
imul
dec
add
into
arpl
les
inc
or
daa
push
and
pop
or
push
and
inc
cmp
jge
lahf
mov
jo
fsubrs
popf
cmp
jnp
push
or
lret
stc
xchg
dec
pop
shll
inc
ds
jae
loope
aad
jge
loop
push
roll
cmp
orb
in
idiv
cli
out
mov
mov
mov
xchg
bound
mov
das
jne
testl
into
subb
jmp
dec
jo
dec
or
cld
or
psrlq
outsb
or
xchg
adc
lea
cmpsl
cmc
mov
imul
jp
mov
call
daa
rclb
mov
push
imul
dec
pop
scas
test
test
sbb
jo
xchg
mov
push
lcall
cmp
sub
out
iret
push
fistl
imul
adc
add
sbb
adc
and
jno
test
stc
push
lock
lret
jp
int
out
inc
lods
and
int3
int
out
inc
jmp
inc
jns
cmp
icebp
arpl
lea
hlt
jge
mov
fwait
xorl
inc
adc
xchg
pop
in
ret
mov
je
dec
mov
enter
test
lods
xchg
xor
lds
cld
pop
jo
jle
sahf
pxor
sbb
out
dec
es
and
sub
xchg
pop
cmp
jle
stc
repnz
sbb
mov
dec
jae
addr16
push
dec
rclb
push
jge
xchg
pop
xchg
jecxz
sbb
and
or
gs
in
mov
dec
or
fidivrs
adc
or
mov
rolb
in
fsubrl
repnz
cltd
mov
out
sbb
scas
mov
aam
es
mov
fidivrs
loope
stos
seta
and
mull
outsb
jge
iret
pop
mov
addr16
jp
dec
lods
or
sub
mov
out
xor
mov
popa
pop
lods
sub
mov
xchg
and
les
mov
es
jbe
add
fwait
push
pop
ja
push
xchg
sub
test
jmp
mov
push
cs
pop
insl
imul
int
aas
ret
enter
xchg
mov
dec
add
dec
ret
in
jae
lods
imul
sub
test
push
jo
mov
mov
repnz
sbbb
mov
or
arpl
lods
cmp
add
lret
out
mov
sub
jge
aam
jns
addr16
mov
cmc
sbb
sub
adc
lds
sub
sbbl
fcomp
movsl
sub
loopne
sbb
test
notb
xchg
aas
xchg
dec
mov
leave
sti
inc
lcall
fnsave
pop
push
sub
mov
and
pop
das
jle
ja
ja
dec
leave
dec
sub
out
dec
xorb
ret
es
xor
xchg
iret
mov
jbe
jae
lahf
add
mov
sbb
mov
pop
sbbl
cwtl
sarb
fistps
aam
push
pop
pop
adc
popf
jnp
push
das
add
push
sub
jecxz
jg
jb
scas
mov
in
jo
arpl
ja
cmp
call
or
inc
lods
add
mov
cs
inc
sbb
cli
loopne
out
adc
mov
xorb
scas
leave
xchg
xchg
in
test
leave
inc
jp
leave
mov
pop
lds
xchg
adc
fildll
test
dec
cs
out
adc
not
add
mov
inc
outsl
outsb
fwait
fs
pushf
jle
imul
cmpsl
aad
test
ljmp
mov
push
sahf
mov
aas
sub
mov
rclb
imulb
cli
ficomps
enter
dec
add
push
push
or
adc
jbe
in
stc
jle
sub
mov
stos
daa
clc
adcb
aas
or
dec
cltd
xchg
pop
add
or
inc
or
add
sub
pop
bound
inc
outsb
cmp
into
ret
jmp
je
lcall
jl
push
stos
dec
ret
jg
push
sbb
cltd
fstpl
jp
adc
cmp
test
int
inc
jb
mov
test
movsl
test
xchg
or
ret
cltd
inc
scas
lahf
and
in
out
adc
xor
mov
stos
in
jbe
popa
push
push
add
push
and
cld
mov
or
mov
xchg
mov
decl
and
dec
mov
mov
insl
inc
hlt
shlb
jns
xchg
fadd
cwtl
and
push
pop
push
pop
ficompl
in
jecxz
inc
or
mov
pop
xor
xchg
push
jl
stos
loopne
aaa
mov
mov
inc
pop
jmp
imul
push
push
cmpsl
push
xor
jnp
pop
dec
cmp
sub
lret
sbb
hlt
icebp
xchg
xchg
or
loope
das
lods
fs
dec
adc
xor
jmp
xor
mov
pop
andl
insl
inc
sbb
pusha
sub
in
stos
fisubl
cmp
in
mov
aaa
mov
cmpsb
jno
ss
imul
inc
xor
fdivrl
sahf
mov
dec
aas
add
test
add
sub
xlat
and
sub
xor
xor
cmp
in
jb
std
inc
cmpsl
out
lcall
std
int
xchg
fwait
jae
bound
add
jo
push
aad
loopne
aad
mov
es
inc
pop
js
sbb
and
mov
dec
push
in
jo
or
mov
loope
sti
add
lods
xor
fisubrs
push
push
and
jl
ja
or
mov
fs
push
jnp,pn
ret
xchg
and
mov
push
mov
cwtl
scas
int3
bnd
sbb
mov
stos
in
and
daa
adc
push
aas
dec
shl
jno
dec
mov
mov
dec
mov
stos
add
adc
ficomps
cld
fdivp
xor
test
adc
lods
mov
jmp
lods
pcmpgtw
adc
xor
or
push
aad
test
and
pop
jns
enter
push
and
and
sbb
push
sbb
dec
push
xchg
inc
nop
jmp
cli
jns
loope
mov
and
push
out
loopne
mov
je
popf
pop
sarb
rcl
cmpsl
lock
aam
xchg
hlt
xor
or
jmp
test
test
mov
fsubs
mov
rorl
dec
sahf
call
or
shlb
pop
ljmp
sub
out
shr
add
lea
sahf
cwtl
into
mov
push
push
jns
iret
jbe
pop
inc
cs
adc
push
jnp
ljmp
inc
int3
mov
sarb
dec
sti
push
mov
mov
mov
mov
leave
sub
jp
cmp
xlat
push
inc
add
xor
inc
sbb
mov
cltd
inc
pop
cld
cmp
ficomps
xorl
jb
or
mov
xlat
scas
inc
dec
xor
pushf
insl
push
sbb
dec
fwait
xor
test
pusha
adc
mov
movsb
repz
mov
ret
inc
sarl
insl
idivb
add
mov
out
scas
push
fwait
pop
mov
sbb
paddusb
imul
push
sub
inc
daa
xlat
shl
pop
test
int
sarl
loopne
lahf
mov
in
repnz
imul
jae
mov
lret
adc
xchg
jle
testb
packsswb
fwait
pop
add
add
lods
clc
jp
pop
pop
bound
es
es
loop
jnp
rol
imul
mov
sahf
loop
pop
cld
or
clc
aaa
je
mov
loope
mov
push
mov
mov
fcmovnb
adc
cmp
clc
and
pop
jae
inc
inc
xor
lea
enter
rcl
jmp
nop
clc
mov
and
pop
push
mov
jg
insl
lahf
pop
ficompl
dec
add
testb
orl
cld
lods
and
testb
mov
lds
shlb
daa
ret
push
lock
je
add
xchg
pop
push
jno
cmp
ret
inc
pushl
or
fs
mov
jbe
flds
xorb
jno
xor
pop
mov
sti
mov
loope
sub
push
loope
add
mov
daa
push
sbb
pop
xchg
mov
push
jae
lods
xchg
sbb
int3
mov
mov
lock
sti
ss
jmp
inc
dec
ret
addr16
sbbl
add
cmpsb
mov
lret
xlat
push
fimuls
adc
or
loope,pn
fwait
mov
mov
sub
push
mov
or
fsubp
int
enter
sub
sbb
adc
ss
lods
inc
push
jle
outsl
repz
and
jns
xorb
sahf
xor
xchg
and
jnp
les
fsubrs
xchg
out
aam
mov
or
movsb
jb
mov
in
mov
mov
sub
nop
xchg
negl
daa
adc
mov
popf
jae
enter
or
aaa
into
arpl
cld
hlt
std
ljmp
push
jmp
ljmp
ret
mov
mov
iret
mov
xor
fimull
cmp
mov
mov
xor
adcl
in
cmpsl
imul
cld
shll
rolb
and
bound
cmp
push
adc
jg
je
in
push
cmp
push
xor
adc
xchg
fsub
push
leave
dec
jle
cs
sti
pop
cmp
adc
fsubp
arpl
das
stos
xlat
or
mov
dec
mov
mov
out
dec
xchg
imulb
in
fs
fdivr
loop
aaa
inc
cltd
lds
xchg
pop
sbb
outsl
push
mov
ja
loop
cwtl
sbb
jmp
xlat
mov
jle
ret
push
pop
cmpsl
and
jecxz
scas
out
loop
push
lods
or
je
ret
push
dec
jns
push
mov
jnp
push
xchg
mov
mov
movsl
imul
mov
shl
arpl
mov
sbb
stc
imull
add
pop
jo
pop
shlb
and
mov
dec
xchg
or
or
clc
adc
mov
add
lret
mov
mov
sahf
xchg
fsubs
adc
in
je
xchg
insl
or
sbbb
test
das
movl
push
test
mov
or
loope
xor
negl
cmp
pop
inc
mov
cltd
addl
mov
int3
sbb
jp
pop
outsl
leave
out
jecxz
rcrb
xor
mov
cli
xchg
push
ret
daa
stos
xchg
mov
sub
or
or
add
jmp
push
popa
rcl
les
sti
aaa
mov
mov
or
lret
xchg
push
xchg
aam
aas
inc
sub
cwtl
imull
insl
shrb
adc
add
js
pop
rcrb
xchg
ficoml
ja
and
out
loope
add
or
inc
pushf
pop
jae
int
sub
insl
add
or
fs
pop
in
sbb
cld
data16
ficompl
stos
or
sub
xor
xorb
pop
scas
jge
out
fwait
lret
fistl
aam
in
insl
rolb
pop
in
pop
inc
sbbb
mov
out
std
sub
and
xor
adcl
push
aam
adc
movsb
xchg
pop
xchg
nop
and
orl
inc
leave
jns
adc
lods
pop
fistpl
push
cmp
xor
xchg
xor
lods
xchg
fcompp
lods
lcall
cmpb
mov
je
fsubs
cs
dec
je
sbb
xchg
fimuls
inc
scas
movb
out
sbb
repz
mov
mov
mov
push
insb
lahf
mov
hlt
test
mov
jbe
arpl
out
loop
jecxz
push
push
shl
ja
scas
adc
adc
or
cmp
pop
hlt
xor
popa
mov
jmp
insb
sub
popf
xor
les
cwtl
mov
jle
adc
and
loopne
pop
inc
xchg
inc
push
jl
fcoms
loope
movsl
dec
sbb
lds
lods
xor
ljmp
push
sub
pop
bound
lret
fbstp
lds
in
scas
cld
movsb
xor
fwait
add
add
push
dec
data16
add
mov
adc
int
das
popf
pusha
cld
notl
sub
lret
ret
insl
ja
mov
test
arpl
jnp
mov
ficoml
das
andb
out
inc
orl
jns
int
jg
leave
mov
dec
jge
or
inc
pop
mov
enter
push
mov
cmp
movsl
fisttpl
fistpll
aam
movsb
pop
fbstp
es
adc
les
or
add
sub
hlt
cmp
mov
imul
mov
fst
shrb
or
jns
xchg
or
inc
fldenv
jge
sbb
xchg
pop
dec
aas
pop
adc
call
mov
mov
jns
dec
rol
add
xchg
dec
inc
push
movsl
cmp
xor
xor
imul
push
add
mov
or
out
add
or
xor
mov
cmp
js
loopne
cli
xchg
test
out
or
inc
xor
inc
nopl
aam
sbbb
subb
mov
push
outsl
movsb
loopew
mov
mov
sbb
fidivrl
std
outsb
add
lods
outsb
xorl
and
fldl
fs
push
fcmovnu
negl
fsts
mov
fcompl
inc
sbb
out
xchg
xchg
sub
pop
sarl
adc
add
sbb
dec
repz
cli
adcl
sub
push
mov
loop
cwtl
xchg
div
mov
les
gs
in
inc
add
stos
cmc
and
mov
repz
lret
repnz
pop
jno
mov
leave
jbe
dec
mov
test
lods
jg
icebp
jae
inc
pop
inc
jnp
test
pop
sub
mov
das
enter
cmpsb
aad
add
mov
std
out
fincstp
xchg
mov
push
leave
inc
stos
mov
es
bnd
out
das
push
pop
push
sar
add
das
sti
or
xchg
sbb
icebp
dec
out
pushf
test
jno
js
fwait
mov
fidivs
cmp
pop
xchg
dec
jp
cmp
xlat
sbb
push
or
fildl
arpl
out
xchg
mov
loopne
push
int
add
fnstenv
mov
pop
mov
jmp
pop
add
lea
stos
aam
mov
ffreep
xchg
pop
dec
and
int3
mov
jo
fisubs
jmp
test
dec
aaa
test
lea
adc
xorb
cmp
out
cmp
pop
mov
loope
shlb
sub
rcrb
cmpsl
xchg
mov
int
pshufw
mov
xchg
aaa
cltd
outsb
or
pop
iret
inc
sbb
daa
mov
stos
aas
pop
sbb
lret
xchg
and
test
sbb
push
leave
push
dec
out
nop
cmp
mov
rcl
sbb
repnz
fs
lds
and
js
and
lahf
dec
cwtl
cmp
add
add
aam
lods
in
stos
pop
or
xor
in
xchg
xor
lret
fistl
inc
ss
xchg
jg
inc
int3
loope
aaa
loope
jo
scas
jae
outsl
ss
push
stos
mov
lea
cmc
add
aas
lods
insb
push
out
fisttpll
ja
in
lret
jmp
and
sub
fsubrl
xor
xor
xor
jbe
dec
ljmp
add
in
call
dec
push
fisttpl
gs
add
int3
pushf
cmp
sbb
mov
sbb
iretw
mov
test
pop
dec
xor
lret
mov
adc
cmp
movsb
scas
hlt
es
aaa
xchg
lods
push
insb
mov
inc
push
test
lcall
push
mov
in
add
and
add
lcall
xor
dec
addb
push
insb
hlt
mov
adc
adc
test
push
pop
sbb
aas
cwtl
dec
je
out
push
movzbl
or
stos
cmp
xor
xchg
push
fdivl
sbb
fldenv
push
jecxz
daa
iret
cmp
xchg
addr16
sub
out
mov
mov
cmp
mov
stos
and
jecxz
adc
nop
dec
and
aam
xchg
pop
cmc
addl
es
inc
jmp
cmpsb
and
mov
shl
cmp
out
into
lods
push
clc
ret
inc
mov
pop
add
xchg
cs
mov
jecxz
inc
pop
xchg
and
mov
xchg
andl
dec
mov
addb
push
jno
pop
addr16
loope
adc
inc
pop
lcall
in
xchg
jl
fstps
push
mov
and
xchg
aad
push
aas
xchg
cmpl
and
xchg
cli
fcoms
xchg
xchg
and
fdivs
xbegin
ret
jbe
or
or
sarb
mov
mov
jbe
repz
mov
cs
fcmovnu
push
outsb
call
push
push
cmpsb
addb
dec
les
mov
xchg
imul
call
mov
or
jle
cmp
aaa
hlt
inc
filds
pop
dec
mov
jge
fs
or
cmp
jbe
data16
fs
js
mov
and
or
imul
mov
or
insertq
adc
add
cmp
push
mov
outsl
aas
pop
xlat
dec
repz
out
mov
out
aam
mov
psllw
stos
pushf
sbb
and
shlb
ljmp
add
hlt
lods
nop
inc
lds
inc
iret
fimuls
fwait
cmp
push
mov
sbb
or
cmp
xor
and
movsb
lret
insb
sub
test
jmp
or
jl
clc
scas
ljmp
pop
adc
and
icebp
loop
lret
dec
outsb
or
push
int3
push
adc
lods
jecxz
cmc
into
jo
clc
les
push
adc
mov
in
punpckhdq
sub
out
lcall
dec
fimuls
in
pop
cmp
and
out
loopne
push
xor
inc
pop
lahf
rcrb
mov
repz
xor
decb
popa
mov
ja
lods
jge
stos
ds
cmp
cld
and
cmp
sub
cld
xchg
popa
mov
lock
mov
lahf
repnz
mov
and
sbb
sbb
pop
je
mov
push
xchg
iret
stos
mov
test
adc
push
xor
insl
into
lret
xchg
and
fsts
dec
mov
lock
add
pushf
out
xlat
or
imul
pop
and
ds
shlb
lcall
mov
add
sub
leave
insl
inc
and
mov
daa
mov
movsl
cltd
fildll
cmp
addb
dec
inc
fcoml
divl
or
jo
jmp
imul
mov
cmp
xor
mov
sub
cli
das
add
clc
lahf
pop
push
sub
fisttpll
jbe
and
xchg
dec
fstps
pop
ss
test
dec
adc
cld
sahf
ss
push
xor
js
add
das
lahf
mov
aad
xor
mov
ljmp
mov
xor
loop
mov
ret
cmp
xchg
fistps
add
dec
inc
movsb
loop
jo
cld
lret
loop
je
mov
jl
das
push
in
sbb
sahf
lods
icebp
cmp
push
out
sbb
das
or
test
icebp
jnp
faddp
ret
insl
inc
aam
iret
test
jo
lock
jo
sbb
out
test
push
repz
loope
sbb
sub
or
lcall
mov
xchg
out
cs
mov
mov
inc
imul
push
and
lods
cwtl
dec
out
mov
hlt
fists
stc
inc
lods
bound
shll
add
mov
cmp
inc
mov
jmp
int3
dec
and
pop
inc
jb
mov
sub
mov
mov
pop
clc
and
repz
push
and
jbe
lods
leave
jnp
pop
mov
psubb
dec
sbbl
cld
fists
push
inc
ret
hlt
fwait
inc
pop
push
das
out
mov
mov
push
xchg
dec
aam
rorl
out
mov
addl
in
dec
dec
fisubrl
pop
mov
fs
outsl
popa
or
push
mov
fwait
aas
push
xor
and
jg
mull
mov
out
push
sti
push
into
mov
ret
lahf
push
int3
dec
in
adc
mov
mov
xchg
enter
shlb
push
daa
jl
repnz
shl
out
mov
add
lret
shl
pop
pop
jbe
outsl
jecxz
mov
insl
jno
jns
imul
insb
push
mov
sahf
jmp
pop
jg
xchg
mov
sub
cmpsl
dec
pop
sub
pushf
jae
or
sub
push
cld
sbb
cmpsb
scas
mov
mov
in
push
daa
sbb
mov
loope
in
push
cmp
gs
pusha
movsb
mov
rcrb
sbb
mov
add
mov
dec
insb
popf
lcall
inc
mov
mov
jl
vandnps
add
popf
pop
or
lcall
cmpsl
cmp
inc
das
movsb
push
inc
push
mov
ss
iret
pop
shrb
jnp,pn
mov
xchg
or
test
lret
leave
mov
jmp
aas
movsl
int3
rcrl
fwait
jns
push
pop
aad
mov
lret
leave
adc
sbb
out
push
adc
fsubrp
mov
outsl
lret
xchg
lods
sbb
sahf
dec
push
sbb
fbstp
js
push
cld
pop
lds
aas
addl
stc
xor
loopne
or
pop
mov
aas
inc
mov
xchg
or
rcll
imul
sar
in
lock
cli
into
pushl
push
lods
inc
hlt
notl
rcl
add
mov
lods
pushf
pshufw
pop
jns
dec
pop
mov
inc
inc
enter
loopne
xor
inc
popa
ret
push
push
out
arpl
add
mov
je
fildl
mov
cmpsl
mov
fiaddl
scas
mov
and
pop
test
test
stos
pop
jl
outsb
push
and
cmpb
push
insl
mov
xchg
mov
fists
mov
and
test
cltd
adc
xor
inc
inc
and
dec
imull
lret
movsb
xchg
bound
mov
in
aas
add
popa
cli
add
jb
dec
jl
out
shr
and
das
nop
push
in
in
cmp
push
scas
jg
mov
iret
cmp
cmp
cltd
stos
xchg
movsb
pusha
pop
lods
dec
lar
in
cmp
pop
icebp
cli
shlb
cmp
fwait
enter
mov
sub
enter
mov
adc
mov
aad
jne
call
jae
or
dec
jl
push
push
mov
xor
sahf
cmp
aad
xchg
jp
pop
jne
test
mov
jge
add
mov
sti
icebp
lahf
test
pop
movntq
out
mov
imul
xor
sub
int3
mov
pop
aam
or
daa
mov
fidivrs
das
xchg
add
dec
int3
sbb
push
clc
cmp
aas
test
stos
mov
dec
xor
in
mov
mov
xchg
hlt
fdiv
andb
fimull
adc
call
shlb
icebp
popa
sub
loopne
mov
loope
or
jmp
test
and
push
pusha
jae
and
push
stos
mov
js
mov
and
movsl
lret
jg
in
xorb
cmp
aad
jae
jle
int
mov
daa
pop
mov
mov
sets
arpl
loopne
mov
shrb
sub
stos
or
cmpsl
lds
cmp
or
xchg
mov
pop
lock
das
outsb
arpl
je
mov
aaa
cltd
decl
pop
in
ja
sbb
pusha
cwtl
mov
cmp
mov
int3
push
mov
adc
sub
mov
inc
outsb
popa
push
mov
lods
inc
movsb
paddsw
clc
ljmp
jl
leave
repz
iret
mov
lods
repnz
xor
stos
nop
or
push
jge
sbb
and
inc
mov
push
fdivrp
mov
or
add
jle
sub
aas
fldcw
cmpb
inc
inc
das
pop
popa
inc
cmp
movsb
shll
mov
lret
mov
sbb
xchg
push
movsb
roll
les
cmp
xchg
popf
jae
insb
xorb
xchg
adc
js
mov
test
out
sub
inc
lea
sub
push
fcomi
loopne
cltd
adcb
orb
mov
mov
leave
pop
xor
movsb
sbb
aad
add
in
lock
mov
xor
pop
loope
in
push
subb
leave
fildl
adc
sbb
jae
mov
mov
xor
mov
addl
mov
xor
mov
inc
int
sbb
ficoml
push
addr16
push
jns
out
adc
lret
and
shlb
mov
xor
je
add
mov
lret
imul
jmp
mov
outsl
dec
clc
or
aad
daa
add
dec
cwtl
das
add
loop
add
sarb
movsl
and
repz
xor
repnz
or
dec
xchg
push
mov
ret
sbb
mov
icebp
mov
loopne
fsubs
and
test
adc
pop
add
sbb
jbe
cld
dec
mov
cmp
scas
pop
jp
pusha
fst
sub
and
das
cmp
cmp
and
mov
push
sub
xchg
in
mov
lcall
xchg
push
xchg
and
cltd
mov
rol
test
out
sbb
mov
jl
or
imull
push
pop
ror
negb
push
psllw
aaa
jg
jno
xlat
lea
add
inc
insb
mov
xchg
xchg
ret
int
outsl
rorl
mov
mov
incl
lret
loope
push
dec
rcrl
fstpl
arpl
fldl
aad
test
pop
adc
int3
and
sti
mov
and
pop
push
dec
jg
xchg
test
out
std
xor
movsb
ret
push
xchg
out
es
xchg
cld
pusha
shlb
test
outsb
push
hlt
or
cltd
xor
dec
inc
add
mov
cwtl
push
stc
xor
pop
pop
dec
stos
jb
xor
jno
mov
mov
es
add
cmp
mov
xchg
pop
cmpsb
sbb
scas
ds
mov
or
dec
lds
paddsw
xchg
sahf
jb
inc
or
mov
or
cli
mov
pop
adc
push
gs
mov
test
mov
cmp
push
fldcw
pop
insb
imul
repnz
popf
andb
jns
push
stos
mov
dec
xchg
xor
ja
sbb
test
and
cmp
add
mov
mov
ss
out
add
inc
cwtl
pushf
rorl
fisttpl
push
dec
fcmovbe
sub
pop
notl
sub
jbe
jecxz
test
subb
xor
lret
idivb
inc
fwait
in
mov
sub
cmp
stc
dec
lret
int3
and
mov
roll
in
adc
popf
jl
test
mov
pusha
dec
cwtl
pop
pop
imul
mov
ds
sub
cmp
stos
in
push
push
nop
pop
lods
icebp
lahf
iret
xchg
mov
fistpll
out
adc
add
pop
aam
outsb
imul
mov
and
pop
pop
push
push
sbb
or
sub
sbb
sbb
iret
and
cmpsb
xchg
lcall
mov
mov
lcall
outsb
pop
aas
out
mov
ret
out
cs
shrb
or
movsb
fnstcw
cmp
sbb
jl
add
jl
jle,pn
iret
mov
icebp
mov
jo
xor
std
sub
push
enter
out
clc
add
lods
and
inc
clc
call
sub
lods
mov
lock
jecxz
inc
lea
adc
shrb
mov
fcmovb
lock
or
jae
cltd
mov
out
imul
adc
subl
repnz
out
rcl
fsubl
mov
pop
aas
and
jns
mov
adc
or
das
clc
pop
loop
sbbl
adcb
and
in
mov
sarb
xchg
es
iret
push
lds
jge
imul
test
mov
mov
and
push
push
adc
cli
ffree
and
jnp
push
add
es
int
dec
les
ss
cmp
push
inc
and
cmc
inc
sbb
ds
push
lcall
cld
movsb
jle
aad
stos
push
std
fs
loop
mov
push
popa
mov
xor
or
pop
mov
arpl
sbb
repz
sbbb
repnz
mov
adc
aam
jle
ja
out
xor
xchg
xor
repz
sub
dec
jae
outsl
dec
popa
fidivs
repz
imul
mov
and
xor
pusha
test
mov
mov
sub
ljmp
inc
adc
mov
pop
cmpsl
pop
stc
loop
inc
xchg
sbb
mov
jne
arpl
jg
push
js
mov
fcomps
sub
adc
data16
movsl
shr
xchg
stc
pop
ret
inc
mov
jecxz
rcll
lods
rcrb
inc
in
pop
fidivl
gs
adc
test
pusha
std
jbe
and
cmp
orb
mov
test
in
add
outsb
xor
inc
pushf
mov
cwtl
test
sahf
popf
xor
ja
xor
cmp
popf
pop
adc
das
pop
gs
add
push
xchg
xor
or
xor
cs
shrl
pop
mov
sbb
or
cltd
inc
jmp
test
push
xchg
inc
cwtl
xlat
dec
jns
insb
pop
sub
in
rorl
sub
pushf
fbstp
lea
sbb
jns
cmp
push
jae
mov
and
pop
cmp
xlat
in
push
xor
fadd
lods
loope
push
ficoms
andl
and
cmp
inc
jb
scas
cmpxchg
push
mov
bts
sbb
int
inc
cld
push
lret
cmp
daa
testb
pushf
mov
and
scas
push
je
sub
mov
xchg
pop
inc
mov
jnp
xchg
xchg
dec
cmc
in
push
pop
xchg
or
xchg
ja
sbb
cltd
cli
xor
add
push
adc
mov
je
adc
scas
aad
pushf
sub
stos
sbb
test
aas
mov
xor
adc
iret
inc
add
inc
pop
mov
or
std
jns
iret
mov
sarl
nop
jno
xor
sarb
popa
fcoms
nop
ret
aam
jecxz
pop
sti
pop
in
cmp
cld
or
mov
test
ja
push
movsl
aad
mov
inc
sbbl
jo
sbb
adc
and
mov
shlb
test
sbb
or
jmp
cmp
mov
mov
arpl
jae
sarl
dec
arpl
cwtl
insb
std
jl
sbb
gs
cmp
and
mov
pop
lret
lahf
inc
ja
cld
fistps
mov
test
jmp
sub
sti
std
xchg
dec
pop
sarb
push
mov
lods
inc
jno
mov
clc
mov
inc
icebp
add
sbb
aaa
jp
lock
jg
and
and
lahf
xchg
fdivs
add
data16
jmp
jecxz
pop
ljmp
cmpsb
jns
mov
in
add
lea
stc
jae
orl
movsl
and
and
nop
mov
bound
xlat
jae
adc
cli
popa
lret
push
fwait
dec
xchg
js
xchg
mov
test
in
data16
xchg
mov
pop
or
inc
fldt
jne
and
cwtl
add
push
dec
jmp
sub
out
pop
xor
addr16
into
mov
sbb
jb
pop
test
int3
mov
jno
clc
daa
pop
ret
and
mov
sbb
xchg
ja
xor
arpl
mov
popa
icebp
outsb
sbb
and
jbe
inc
jnp
jmp
pop
mov
mov
stc
sbb
daa
sbb
mov
add
scas
xchg
ss
lcall
lock
add
ss
mov
imulb
ds
cmp
xchg
mov
push
ss
roll
hlt
mov
dec
pop
add
mov
and
scas
sar
cmp
sbbl
movsl
stos
xor
lds
sbb
jb
mov
int3
fwait
mov
push
enter
mov
push
dec
xor
es
push
popa
inc
adc
cli
insb
arpl
jp
mov
test
sub
sti
push
ret
and
or
mov
mov
sbb
cmp
mov
scas
mov
sbb
fsubp
push
push
idivl
xchg
mov
int
push
adc
das
xchg
pusha
insl
adc
pop
mov
fiadds
ds
das
imul
xor
xlat
jmp
push
sub
outsl
sub
out
nop
stos
push
add
fs
clc
repnz
mov
imul
xlat
push
mov
scas
mov
and
mov
xchg
inc
in
lea
lds
mov
or
inc
and
cmp
pop
loop
or
and
add
into
and
insb
clc
dec
mov
dec
les
int3
xchg
push
repz
inc
pop
addr16
clc
push
cmpsb
sbb
stos
mov
fdivrp
in
aam
push
jbe
jb
xor
xchg
xor
sbb
dec
xor
cmpsl
fdivr
push
cmp
dec
int
ljmp
decb
jmp
mov
aas
js
dec
cmp
dec
and
or
pop
push
imul
jo
xrelease
and
sbb
push
jmp
sbb
test
inc
xor
pop
cmp
push
fbld
imul
jecxz
popf
push
add
mov
jo
fwait
clc
in
xor
andl
or
popa
lahf
xor
call
inc
repnz
das
test
sbb
mov
push
push
xchg
ds
sahf
cmp
iret
lods
and
mov
mov
and
lods
jl
ret
jb
scas
inc
scas
sub
lea
in
test
mov
jp
sub
push
cmp
dec
rclb
xor
cwtl
pop
jb
dec
push
push
add
imul
jbe
aas
idiv
shl
xchg
popa
fmul
mov
cltd
inc
lds
loope
adc
popf
xor
inc
mov
inc
mov
imul
fwait
pop
loop
dec
fimull
and
arpl
aas
cwtl
mov
mov
xor
push
mov
cld
pop
mov
fldl2t
add
cmpsb
pop
cmp
cmpsb
dec
xchg
ljmp
ja
mov
lret
in
insb
xor
loope
bndldx
cmp
jne
pop
fisttps
jg
mov
jecxz
and
in
aaa
sub
sbb
push
push
subl
or
pop
pop
fldl
xchg
sbb
outsb
mov
ret
pop
and
jmp
jo
add
nop
inc
pop
lcall
mov
stos
inc
inc
mov
jg
fucomip
addr16
jb
adc
sub
adc
ret
stos
sbb
adc
pop
jns
pushl
das
cs
call
outsl
int3
cmc
lods
test
xor
lcall
jo
inc
icebp
enter
cmp
lea
or
xchg
sbb
adc
jle
les
push
inc
xchg
lcall
mov
push
sbb
hlt
jb
mov
dec
mov
cmpsl
rclb
xor
xor
or
ja
mov
lods
and
andb
jmp
in
mov
mov
stc
adc
out
xchg
loope
and
insb
add
and
pop
es
dec
scas
adc
mov
pushf
fdivs
pop
rorl
adc
xchg
cld
inc
pop
cs
movsb
leave
adc
in
in
jno
inc
jb
sub
js
mov
push
sbb
or
push
gs
loop
pop
outsb
cwtl
cmpsl
loope
mov
sub
imulb
ror
sahf
xor
push
lock
ja
out
mov
xchg
dec
loop
inc
add
ds
push
ja
add
cmp
imul
loopne
push
pop
cmpsb
jge
lret
iret
pop
pmaxub
ret
push
int
inc
and
out
mov
arpl
mov
push
jne
xchg
lcall
sub
cmp
enter
adc
inc
mov
out
cmp
enter
mov
stc
mov
cmp
ljmp
mov
sarl
xchg
arpl
pop
mov
inc
jne
sbb
js
imul
add
sbb
sub
cmp
jmp
xchg
or
aaa
or
js
adcl
mov
testl
or
sbb
insl
cmpsb
leave
daa
dec
shl
xchg
sub
mov
movb
repz
pop
push
out
out
pop
mov
shr
cmp
xchg
mov
notb
lret
fimuls
cmc
call
jecxz
insb
loope
inc
cmp
adc
notb
jg
ja
mov
lods
fisubrs
movsb
loop
lods
inc
orl
cmc
cmpl
aas
ret
inc
pop
rcr
lock
stos
pusha
dec
popa
jecxz
or
xor
xchg
daa
and
cmp
ljmp
pop
jns
addr16
movsl
in
testb
out
push
sub
subl
and
orl
sbb
push
and
mov
jge
mov
and
out
mov
std
outsl
sub
and
outsl
cli
divl
fucomi
rclb
nop
and
aaa
xlat
xchg
xor
sti
scas
out
lods
lods
loop
jecxz
psubsb
or
xchg
sbb
jge
jge
pop
loopne
repnz
outsl
xchg
inc
ljmp
cmp
pusha
and
stc
fs
mov
cld
sub
insb
jl
lcall
lret
scas
pop
ficoml
and
aaa
inc
pop
daa
inc
ss
pop
mul
fs
push
popf
fimull
in
push
jl
cmpsl
pop
push
daa
mov
mov
ffreep
repz
push
cmpsb
pop
sub
inc
in
adcl
push
int
mov
ljmp
pop
scas
test
and
pop
insl
sub
jb
or
pop
sbb
repnz
xor
sbb
pop
sub
inc
jg
or
pop
lods
jecxz
mov
enter
in
in
xor
lcall
into
shll
dec
jne
mov
inc
ljmp
fisubrs
fs
xchg
add
popf
xor
gs
pop
pop
push
adc
out
repnz
iret
xchg
xchg
clc
and
popl
sti
iret
sub
fstpt
lods
push
cmpsb
xchg
call
cltd
ja
add
pop
push
inc
mov
lret
dec
cmp
cwtl
mov
fnsave
testl
loop
pop
pop
dec
or
mov
xor
xchg
add
mov
dec
ja
loopne
loopne
pop
outsb
out
push
fs
sbb
adc
adc
outsb
add
shlb
out
sub
ljmp
cmp
shlb
xor
inc
outsb
scas
insb
and
icebp
and
fsts
jg
test
jne
or
stc
stc
sarb
adc
mov
imul
aaa
jp
push
pop
outsl
pop
jecxz
jb
jnp
dec
pop
sub
pop
cmp
cmp
sti
mov
sbb
jmp
xchg
ja
or
in
test
or
mov
inc
adc
aas
js
imul
out
rcrl
aad
rolb
cmpsl
shrb
int3
push
notl
mov
adc
xor
push
int
shlb
inc
add
lahf
sarb
addr16
xchg
lods
mov
mov
or
push
mov
ret
sbb
stos
jbe
lret
xor
sub
in
gs
das
xchg
pop
in
test
cmp
movsl
dec
push
leave
sahf
movsl
mov
xchg
add
movl
jl
adc
cltd
push
pop
aaa
movsb
in
repnz
cli
jp
lock
lds
dec
xchg
aam
pop
jbe
je
cmpsl
mov
mov
sub
mov
sbb
in
jg
mov
insb
les
xchg
sub
cmp
xchg
pusha
inc
movsl
icebp
pop
adc
loop
pop
mov
xchg
mov
dec
xor
repnz
cmp
xchg
mov
insl
pop
call
loop
rorl
testb
lcall
add
xchg
pop
cmp
cmp
mov
outsb
sti
into
sub
sub
cs
test
dec
xor
pop
sahf
dec
cltd
sbb
jg
pop
jecxz
inc
or
dec
fmuls
in
call
pushf
outsb
lods
cli
adc
lea
jg
scas
pop
loop
inc
mov
loopne
stos
jae
lds
or
popf
fs
sbb
cmp
pop
dec
push
add
jno
dec
pop
inc
inc
sub
imul
lock
add
sub
rolb
jge
add
jns
xor
jge
jno
popf
and
aad
out
loop
add
dec
stos
int
setnp
jbe
jo
mov
fsts
rorl
test
jl
push
adc
cli
ja
adc
sbb
mov
dec
adc
pop
xchg
mov
xor
test
into
aaa
inc
lret
inc
jge
ret
fmul
shll
xchg
pop
cmp
push
cli
xor
push
jnp
push
std
scas
xchg
inc
sub
push
or
dec
adc
lds
lea
fldl
mov
div
loope
scas
notl
mov
insl
rolb
mov
out
mov
push
cld
sahf
imul
cmp
test
jg
ja
pop
scas
popa
xchg
or
pop
adc
loop
bound
lds
insl
xchg
outsl
xor
ret
arpl
push
mov
pop
mov
pmaxsw
andl
lahf
jne
stos
int3
enter
push
mov
push
dec
or
mul
cmpsl
fistl
add
stos
in
pushf
lret
cmp
mov
call
je
pop
cmp
mov
jbe
fs
outsb
mull
stos
mov
push
rorl
xor
in
adc
dec
pop
xor
imul
addr16
loop
push
shrb
movsb
negl
daa
xor
lcall
jne,pt
out
aam
or
stos
xchg
aas
push
into
imul
aam
dec
xor
fisubs
mov
loope
xor
ret
xchg
sub
mov
jne
and
mov
out
pusha
xchg
and
insb
inc
fildll
rorb
inc
daa
xlat
mov
jnp
xlat
dec
sub
jl
cli
test
fisubs
leave
jle
imul
out
and
into
push
mov
fs
mov
addr16
out
popf
call
inc
mov
aam
xlat
data16
jmp
inc
loopne
pusha
add
jno
jne
pop
fsubr
aaa
push
sbb
mov
mov
push
mov
out
cli
adc
nop
cmp
jmp
das
arpl
sarl
cmp
leave
adc
jl
jo
fimull
cmp
rcrb
xor
sbb
loop
andl
jp
in
jle
and
pop
inc
mov
sti
jle
and
out
lcall
sti
adc
mov
mov
sbb
jge
sbb
test
leave
jbe
jnp
outsb
stos
dec
push
push
mov
pop
out
xchg
int3
cmp
add
push
ficomps
cld
push
push
test
ja
mov
imul
jecxz
pushf
and
sub
pop
test
pop
jb
mov
sti
mov
aaa
stos
push
push
sbb
cmp
pop
bound
cmp
aas
xchg
add
inc
jns
test
shrl
iret
jl
lret
push
clc
inc
cwtl
out
lods
rol
loop
inc
push
mul
jp
push
sti
jne
ljmp
shrb
enter
ss
mov
das
push
inc
jae
xlat
mov
enter
je
push
pop
jge
sbb
imul
push
fwait
pusha
cwtl
shll
jg
mov
jo
adc
inc
xlat
push
ret
enter
shll
jle
lds
push
and
fs
adc
cmp
dec
xor
mov
scas
out
nop
test
inc
addr16
aad
sbb
movsb
cmp
pop
cld
je
cmpsl
xor
jmp
push
lds
icebp
mov
and
call
call
aaa
push
lcall
pop
sbb
fistpll
std
push
mov
std
out
and
or
mov
les
dec
in
fwait
or
sbb
dec
mov
imul
and
inc
xchg
dec
jecxz
scas
inc
stos
inc
and
add
cmpsl
inc
pop
das
adc
push
xchg
sbbb
sub
bound
dec
xchg
in
xorl
mov
ja
add
sub
fs
cmp
mov
xlat
sbb
int
mov
jae
sti
push
nop
stos
mov
pop
adc
xchg
test
idivl
scas
rcrl
xchg
and
shll
and
mov
xchg
cmp
pop
add
lods
sbb
pushf
rcll
mov
inc
mov
xlat
push
dec
lea
xchg
mov
push
cmp
adc
push
mul
mov
test
in
stc
xor
lcall
add
add
fstps
pop
jb
jo
dec
inc
or
rcll
mov
int
aaa
pop
sarl
mov
cli
dec
aad
and
lcall
push
mov
es
adc
out
and
xor
jmp
mov
rcr
fisubl
ss
dec
inc
fldt
int
iret
push
cmp
aad
in
and
sub
push
fisubrs
or
sub
sahf
jno
loope
add
shr
mov
or
notl
fsubs
gs
mov
bound
jl
cmp
call
nop
mov
xchg
pop
stos
mov
gs
aaa
xchg
fwait
jnp
movsb
divl
xchg
pop
adcb
aas
xchg
add
mov
in
lods
lods
movlps
outsl
pushl
sarb
decb
cwtl
push
out
imul
lahf
je
jp
lea
stos
lock
mov
cs
pop
dec
sbb
pop
and
lahf
rorb
cmp
pop
mov
xchg
and
sbb
shrl
sub
mov
sbb
lock
lcall
cvtdq2ps
push
jecxz
cltd
pop
xor
and
sbb
les
xchg
rclb
movsb
insl
sbb
pop
gs
cli
pop
retw
and
fmuls
add
lea
aas
enter
popl
mov
adc
outsb
inc
cmp
pop
andb
stos
dec
mov
clc
push
imul
push
push
inc
mov
push
hlt
mov
push
pusha
pop
mov
scas
dec
in
aad
xchg
scas
inc
mov
sbb
enter
and
test
inc
sub
xchg
dec
cwtl
mov
adc
nop
add
inc
xlat
cmp
imul
pop
push
jne
cmpsb
cmp
mov
push
cmp
jae
push
jge
loopne
fcomi
add
jmp
ret
aaa
cmp
mov
pop
gs
ljmpw
or
fidivs
pop
mov
lcall
ret
mov
push
or
ficoml
punpckhbw
jmp
mov
xor
inc
push
adc
aam
xchg
mov
mov
xchg
and
mov
call
ds
test
mov
xlat
inc
xchg
push
mov
rorb
stos
dec
hlt
ret
movsb
add
out
ror
inc
cmc
sbb
daa
std
sbb
mov
hlt
rcpps
ja
shr
lret
mov
addb
push
or
repz
xor
daa
cltd
push
mov
leave
sti
xchg
icebp
xlat
out
sbb
mov
xchg
push
push
imul
cmpsl
rorb
loopne
adc
cmp
jge
data16
mov
test
mov
and
int3
imul
xlat
lahf
call
shl
hlt
shr
repz
or
add
add
push
int
dec
repz
cmp
clc
mov
xor
gs
mov
pop
fidivs
lcall
leave
pop
push
aad
jl
push
dec
and
cld
mov
dec
inc
pusha
ss
cltd
pushf
pop
mov
pop
lea
adc
jge
cmpsl
sbb
insl
pop
jbe
xlat
aad
hlt
rcrl
xor
dec
cltd
sub
push
stc
cmp
cmp
or
add
sbb
outsb
mov
movsl
call
fldl
test
bound
and
and
insl
out
mov
fsubr
popa
dec
push
or
inc
divl
aas
cmp
and
data16
mov
pop
leave
jnp
mov
inc
pop
jecxz
arpl
push
xchg
stos
in
loope
sbb
stos
xchg
cmpsb
lds
fisubrs
dec
sbb
fidivs
in
cmpsl
cmpsb
mov
insb
inc
cs
test
es
dec
mov
dec
ds
dec
sbb
cmpsb
pop
sub
in
cmp
bound
ret
adc
and
ret
pop
nop
mov
cwtl
jmp
inc
int3
jo
inc
add
sub
cmpsb
int
ret
fiadds
fwait
pop
aaa
ficoms
adc
rolb
adc
stos
jae
cmovge
ja
cltd
popf
push
mov
adc
xchg
cs
and
jle
mov
jbe
sbb
xor
sub
aam
xchg
or
insl
cmp
test
or
add
dec
cwtl
les
mov
push
test
pop
stos
jg
xor
popf
test
adc
jl
es
push
testl
or
int3
movsl
pop
inc
lea
test
in
outsb
aam
ret
imul
cltd
in
bound
int
sarl
aam
pop
stos
repnz
adc
out
mov
and
incl
mov
roll
lock
lea
test
pop
dec
xlat
jno
sbb
mov
fldt
stc
mov
loopne
push
jl
loope
dec
mov
mov
adc
inc
cld
inc
aaa
jae
hlt
outsb
adc
jo
cltd
push
cmp
mov
fimuls
pop
fwait
sub
dec
out
movsb
xchg
pop
mov
mov
jge
add
lret
fldcw
fldl
xor
and
jmp
mov
out
add
mov
loopne
in
ljmp
addl
icebp
push
ds
jge
mov
and
push
inc
into
cwtl
aas
arpl
dec
mov
sbb
mov
daa
adc
imul
int3
aaa
jge
push
jmp
push
jae
mov
les
jmp
es
mov
test
negb
jmp
leave
jno
aam
push
lds
sbb
dec
cmp
adc
imul
push
icebp
sahf
sti
pop
jnp
loopne
adc
push
pushf
jbe
nop
cmp
in
mov
loop
test
int
popf
fsubr
in
lcall
mov
mov
orb
dec
or
jb
ret
jmp
xor
test
inc
xchg
lret
mov
adc
fisubrs
mov
scas
orl
jb
mov
jp
jg
sub
mov
inc
adc
es
in
mov
and
ljmp
jno
subb
aas
lods
dec
stos
inc
push
jmp
das
sbb
mov
mov
jae
pusha
movsb
cmc
outsb
mov
fldl
dec
xchg
iret
mov
shl
nop
gs
adc
movswl
mov
enter
xchg
and
inc
jno
cli
js
mov
push
int
lahf
es
cltd
cltd
and
fildl
cmp
pop
add
testb
adc
cs
lret
test
pushf
dec
andb
mov
rcrb
mov
into
lds
or
mov
mov
cwtl
add
cmp
gs
addl
jbe
ss
pop
das
xchg
or
mov
out
ljmp
mov
xchg
mov
mov
push
sub
or
lds
scas
pop
call
cwtl
test
cmp
push
dec
pushf
scas
test
jl
ljmp
and
ss
sbb
mov
popf
loope
push
mov
fsubs
push
mov
in
ret
jecxz
ds
cltd
loop
sbb
adc
flds
pusha
sub
mov
in
adc
sahf
cbtw
or
adc
add
dec
dec
lock
int3
sahf
gs
pushf
lods
pushf
xchg
inc
xchg
out
faddl
push
stos
cwtl
insb
std
call
jmp
daa
cld
mov
xorl
mov
inc
sbb
icebp
sbb
sar
les
push
mov
cmp
xlat
imul
jne
push
mov
jg
scas
xor
jae
xchg
mov
mov
xchg
int
xor
scas
ret
rcl
pop
lret
stos
xchg
mov
jnp
xor
dec
popf
inc
cmpsb
inc
sti
add
out
stc
inc
jbe
cli
inc
test
adc
xlat
sarb
int3
ds
lret
ret
ret
cmc
add
jp
daa
dec
mov
jg
leave
out
xor
stos
shlb
xor
pop
mov
and
xor
sbb
insb
pop
shlb
stos
sbbl
pop
pushf
loopne
icebp
outsb
push
leave
mov
xchg
popa
fsubrp
shrl
push
push
mov
and
js
inc
add
mov
add
adc
mov
mov
xor
jno
add
les
push
stc
push
push
aad
js
outsb
out
pop
fbstp
lahf
out
cmp
sbb
outsl
negl
out
xchg
adc
ficompl
pop
or
daa
dec
jmp
inc
lds
push
xchg
pop
mulb
mov
and
jo
mov
ds
jmp
data16
mov
pop
shrb
ret
adc
mov
rcrb
push
ja
lds
cli
dec
test
iret
scas
filds
mov
cltd
sub
inc
or
ret
jmp
push
ja
pusha
ljmp
mov
and
aam
mov
sbb
mov
stc
das
cld
cmp
mov
test
xchg
out
mov
arpl
or
xchg
push
cmc
daa
push
iret
mov
inc
lret
stos
mov
jno
inc
mov
iret
xchg
sahf
roll
xor
ljmp
insl
jno
sub
pop
pop
mov
pop
adc
cmp
lret
mov
xchg
mov
fstpl
mov
pushf
dec
rcr
inc
push
idivb
arpl
mov
xchg
push
pushf
sub
cmc
inc
test
outsl
popf
test
test
outsl
jmp
aas
adc
out
jno
popa
int
loope
fimuls
outsl
inc
stc
sbb
pop
cmp
fists
cld
fcomp
cmpsl
in
jmp
rclb
adc
ja
or
jne
pop
pop
out
cwtl
add
inc
inc
push
aas
outsb
je
shrl
jmp
inc
pop
int3
inc
v4fmaddps
loop
push
lcall
and
and
mov
pop
sbb
mov
mov
mov
mov
addr16
lahf
adc
aad
dec
pop
xchg
cmp
aam
ret
rcr
pop
mov
sbb
test
push
repz
in
push
pusha
mov
ljmp
dec
xor
add
jno
cmp
jmp
test
je
fs
cld
xchg
scas
push
sub
adc
mov
repnz
add
pop
loopne
mov
sub
and
xor
sbb
mov
push
or
dec
inc
inc
int3
sbb
cltd
shrl
int3
cld
inc
inc
mov
mov
in
pop
mov
jge
stc
inc
cmpsb
adcl
push
flds
sti
je
fs
mov
enter
imul
adc
shlb
mov
dec
or
ret
stos
ret
pop
popa
jl
lods
out
stos
add
lods
shl
outsl
shlb
xchg
push
out
outsl
adc
fmuls
gs
lock
inc
ljmp
subb
jne
mov
lcall
pop
adc
shlb
xchg
test
xchg
sub
into
stos
int3
scas
mov
shrb
stos
cld
push
mov
subb
xchg
test
jne
cs
push
cmp
and
mov
lock
mov
nop
in
int
in
movsl
push
js
jnp
xor
dec
std
repnz
jmp
lret
and
sbb
sub
sahf
jg
jmp
xor
shr
xchg
stos
shlb
or
xchg
adc
into
mov
sbb
call
xchg
mov
jp
add
inc
test
int
mov
mov
fidivs
mov
sub
pop
adc
clc
inc
lock
sub
lds
jae
lea
enter
loop
enter
inc
bound
jecxz
jae
push
dec
and
loop
shr
enter
lods
lods
mov
sub
xchg
lds
jecxz
mov
and
push
mov
xchg
movsb
imul
jne
cld
fs
inc
or
xor
pop
xchg
sbb
sbb
xor
scas
into
data16
test
sahf
sbb
or
mov
jns
jno
icebp
push
sbb
jne
jae
inc
in
mov
inc
testl
xchg
sbb
mov
inc
hlt
pop
popa
pop
addr16
xlat
aad
loopne
push
mov
adc
ss
in
cwtl
sahf
clc
imul
jmp
movsl
mov
jecxz
mov
lahf
sub
arpl
test
push
mov
inc
mov
fs
aaa
xchg
insb
mov
xchg
lret
lret
icebp
lahf
icebp
pop
leave
sahf
sub
mulps
fucomip
sti
icebp
xor
dec
inc
shrb
cltd
cli
xchg
pop
in
and
fistpll
add
dec
push
mov
pushf
ret
insl
sub
mov
lret
cmp
int3
push
mov
cmp
out
repz
in
imul
in
enter
mov
sti
aaa
mov
cmpsl
jb
lods
idivl
inc
xor
outsb
stc
xor
jmp
lret
loope
in
mov
out
mov
cli
push
bswap
mov
adc
mov
mov
orl
lds
mov
frstor
test
push
dec
mov
lods
aad
repnz
push
shrl
mov
push
pop
arpl
dec
dec
mov
mov
cmpsl
nop
sbb
insb
stc
aaa
push
cmc
fldt
jo
clc
pop
cmpsl
mov
bound
popa
adc
nop
or
leave
mov
or
lock
loop
loopne
adc
xchg
mov
scas
js
sub
fwait
imul
dec
aas
dec
scas
movsb
sbb
fisubrs
or
and
cltd
das
mov
cmp
dec
jae
xchg
cld
push
sub
cltd
shl
xorl
imul
les
dec
cmpsb
cwtl
push
mov
inc
xchg
jge
pop
mov
in
aam
dec
pop
mov
neg
cmp
add
push
lods
pop
cli
or
pop
or
mov
sarl
xchg
cltd
inc
sbb
jge
xchg
gs
cmc
jge
and
imul
aam
aaa
out
pop
loope
repz
popf
mov
add
push
fisubrl
outsl
outsl
int
incb
or
in
cmc
add
.byte
.byte
