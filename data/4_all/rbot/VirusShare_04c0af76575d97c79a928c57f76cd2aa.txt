xchg
and
int3
cmpsl
sub
lods
lret
xchg
icebp
cmp
lahf
push
inc
pop
out
mov
push
stos
xchg
mov
jae
adcb
ljmp
jle
push
sahf
or
rep
aad
add
or
xchg
inc
add
rep
cwtl
outsl
xchg
mov
cmp
hlt
lods
mov
cmc
jmp
imul
xchg
cmp
cmp
imul
in
sub
icebp
mov
jmp
fstl
loop
test
in
dec
push
mov
pushf
push
lea
mov
dec
pop
cld
sbb
sbb
shrb
mov
enter
cmpsl
pop
mov
xchg
pop
xor
pushf
xchg
mov
cld
lcall
or
sbb
repnz
lock
gs
adc
dec
in
mov
jb
cwtl
rolb
cmp
mov
push
mov
mov
mov
xchg
xchg
pop
cmp
or
pop
sbb
or
arpl
mov
dec
andl
inc
push
nop
adc
add
lret
out
je
outsb
sub
rorb
dec
push
shlb
jo
clc
sub
out
leave
or
stc
or
int3
push
push
push
cltd
test
xchg
popa
gs
in
mov
cmp
mov
sub
pop
ret
outsl
pop
xchg
pusha
in
jmp
pop
xor
xchg
popa
push
mov
jg
stos
fildll
adc
setl
mov
mov
sbb
mov
out
das
cmpsl
cmpsl
arpl
adc
dec
js
mov
cltd
cmp
inc
add
insb
jg
les
dec
sbb
test
jno
mov
mov
sub
out
dec
outsb
call
lret
dec
mov
mov
gs
jecxz
lret
lcall
leave
sahf
mov
mov
mov
dec
inc
mov
jp
cmp
mov
divl
mov
sub
ss
arpl
lock
and
xchg
and
cmpsl
pop
adc
sub
flds
fmulp
sbb
shll
xchg
add
daa
or
jne
fcomi
fdivs
pushf
std
out
add
in
imul
mov
test
xchg
sbb
pop
lcall
repz
pop
adc
imul
lcall
in
clc
mov
or
orl
int3
sbb
lret
lahf
aas
shrb
jge
and
cwtl
jge
add
scas
daa
add
jle
or
js
jno
popf
call
shr
test
push
add
inc
lret
lcall
shlb
and
ret
iret
dec
in
repnz
add
add
stc
or
sbb
movsb
push
sub
add
jne
and
sbb
xchg
pop
pop
push
add
cltd
popf
sti
loope
pop
mov
ds
mov
inc
xor
fbstp
jae
and
dec
std
jnp
je
pusha
cmp
cmp
mov
fwait
mov
add
or
lret
paddusw
les
and
mov
test
sbb
push
fsubs
int3
popa
insb
and
mov
jle
shrl
icebp
jp
pop
xchg
adc
push
mov
mov
pop
jns
xchg
sbb
sbb
cmp
jl
sub
into
pop
push
ret
mov
test
dec
add
dec
xchg
mov
dec
ds
xchg
push
adc
mov
pop
jbe
clc
cmp
xor
loop
cmp
std
dec
mov
pop
and
mov
and
loope
shll
shlb
fwait
or
push
fcoms
cmp
scas
dec
movsl
xchg
add
mov
push
outsl
push
fs
push
sbb
xchg
es
aam
inc
js
and
jmp
data16
pop
jnp
sbb
mov
sub
hlt
enter
pop
mov
out
loope
xorl
push
mov
es
and
pop
es
lods
int
add
push
cld
into
insb
mov
or
sub
aas
lods
imul
adc
and
inc
and
pop
test
in
lea
in
lods
dec
addr16
push
call
adc
arpl
jno
add
arpl
lret
gs
cmp
pop
ss
rorb
pop
or
adc
imul
dec
push
sbbl
dec
movsl
aaa
outsl
sub
cmp
aaa
jbe
adc
cmc
ret
dec
cmp
mov
mov
xchg
dec
mov
pop
lea
test
lods
call
xor
xor
mov
fldenv
or
and
inc
lds
push
icebp
rcll
xchg
xchg
outsl
mov
push
cmp
test
inc
insb
inc
xchg
add
nop
cmp
in
mov
das
cmpsb
sbb
push
pop
and
xor
popa
push
inc
cltd
mov
sahf
add
mov
xlat
lahf
push
fistpll
fisttpll
mov
ss
stc
stos
arpl
clc
lock
cld
enter
sbb
xchg
filds
push
push
inc
dec
pop
pop
cmc
or
jbe
jne
and
push
push
push
push
lea
push
push
push
push
push
cmp
pop
sub
cld
push
add
or
jns
mov
rol
push
sar
pop
lea
push
push
add
pop
lea
push
call
movsl
add
push
xor
cmp
push
test
jo
lds
pushf
leave
repz
add
pop
loop
jecxz
mov
xorl
pusha
jl
push
movsl
pavgw
lret
inc
dec
inc
sub
je
or
rol
call
rol
stc
xchg
stc
mov
inc
inc
inc
inc
push
call
je
loope
pop
push
addr16
loopne
cmp
xor
lock
les
pop
pop
loop
jecxz
or
hlt
xchg
ljmp
inc
insb
push
cs
outsb
jecxz
and
stc
test
push
add
pop
or
nop
and
lea
add
loop
jecxz
xor
outsl
mov
leave
sub
cld
jae
cmovno
ja
push
push
pop
pop
cmc
nop
and
push
add
mov
pop
jg
push
add
push
jns
push
add
pop
push
and
pop
push
push
dec
pop
pop
jp
push
mov
pop
test
mov
stc
push
or
pop
je
js
or
clc
push
pop
and
cmp
je
push
or
pop
push
add
jb
or
push
push
and
pop
pop
jae
rol
push
add
pop
push
xor
pop
jne
push
add
push
jbe
push
rol
pop
pop
or
jg
jae
jno
add
jae
xchg
jbe
shl
push
dec
pop
or
nop
xor
jno
jg
push
shl
pop
or
and
clc
not
not
push
jb
test
pop
push
mov
push
xchg
movsl
xchg
mov
pop
test
jno
jp
push
push
pop
pop
jmp
xor
push
cwtl
scas
push
push
dec
xlat
xor
xchg
and
lea
outsb
loop
aaa
xchg
loop
mov
push
movzbl
jnp
push
sar
pop
sub
push
push
xor
pop
pop
push
pop
loop
pop
test
add
loop
jecxz
iret
jge
int
cmp
inc
jbe
and
push
jb
push
ror
pop
pop
cmp
push
push
push
pop
pop
pop
js
jne
push
ror
pop
stc
dec
jne
js
test
or
jl
ja
push
mov
pop
jmp
pushf
out
repz
dec
cmp
inc
cmpsl
jp
mov
push
push
std
hlt
dec
xchg
pusha
mov
xchg
jecxz
mov
sbb
or
dec
pop
sti
aas
ja
push
inc
adc
loope
inc
push
fcmovbe
das
mov
out
jg
inc
push
sbb
push
je
mulb
mov
jmp
adc
xchg
shr
sahf
mov
sbb
mov
aas
outsb
call
shlb
xor
mov
mov
mov
mov
push
daa
mov
pushf
cmp
sbb
xor
xor
nop
xor
aam
xor
dec
and
negl
mov
idiv
call
jge
add
pop
popl
stc
in
roll
adc
es
lock
cmp
in
inc
dec
sbb
xor
cmp
push
out
pop
adc
int3
int3
adc
nop
je
jb
pusha
fbld
add
adc
fistl
aas
imul
dec
ret
inc
cmpsl
repnz
mov
adc
sbbb
movsb
jmp
inc
inc
popf
adc
ret
movsb
arpl
cli
dec
cmpsb
and
fmul
pop
pop
sbb
pusha
jge
leave
mov
dec
add
mov
popl
dec
lock
push
pop
scas
leave
repz
xlat
test
xchg
add
sub
shll
mov
stc
cld
incb
mov
jmp
aaa
enter
int
push
cmpsl
mov
fmuls
cmp
rorl
dec
xchg
jb
imul
out
inc
cld
push
xchg
jmp
dec
es
push
sarb
xorb
add
lock
std
pop
cmp
subb
scas
mov
mov
xor
jb
std
mov
addr16
cmpsb
xchg
gs
inc
sub
into
lret
sbb
movsl
insl
mov
push
xchg
call
mov
pop
in
out
or
inc
shll
jmp
xchg
imul
sub
nop
cltd
mov
rcl
pop
sub
xchg
push
mov
out
fsubrp
or
je
inc
movsb
xor
in
mov
jl
test
dec
fistpll
mov
adc
mov
adc
push
pop
sbb
stc
xor
pop
jl
mov
jp
or
sahf
adc
adc
ljmp
push
mov
add
cs
rorb
and
out
ja
stos
and
adc
icebp
mov
mov
jl
push
pop
fiaddl
add
dec
movsl
mov
outsl
push
in
xchg
xor
jg
add
mov
lret
and
mov
adc
inc
mov
inc
pop
adc
int
clc
inc
fildll
mov
mov
lahf
lea
adc
in
cmp
and
xor
and
dec
xchg
cwtl
lds
in
xchg
mov
stos
nop
popf
sahf
jne
xor
and
in
ja
mov
leave
xchg
dec
pop
outsl
sub
xchg
lahf
clc
cwtl
aas
add
gs
mov
rol
ja
xor
test
incl
std
lea
test
xor
dec
pop
aaa
jbe
or
cmp
jge
sbb
mov
dec
jmp
data16
popf
repz
pop
loope
fsubrs
inc
mov
sub
mov
mov
push
pop
es
mov
movsl
jmp
stos
js
faddl
dec
push
fsubr
xor
scas
lds
sahf
rcll
lods
fs
iret
xchg
xchg
rclb
repnz
and
into
inc
in
mov
jbe
cmp
lods
ss
repnz
cmp
repnz
imul
mov
mov
inc
mov
inc
pop
out
adc
pop
out
stos
jle
xchg
add
mov
add
loop
ret
ss
mov
inc
cmpsl
mov
add
stos
pop
arpl
mov
mov
add
push
dec
filds
or
loop
mov
mov
lcall
into
sub
fs
adc
rol
addr16
cmp
dec
pusha
or
rcl
pop
cmc
lea
rcll
cld
cmc
lods
jle
ret
pop
or
insl
jl
inc
add
pop
lods
adc
fsubrs
lods
lret
add
cld
add
sbb
repz
in
jae
rorl
mov
jb
sbb
syscall
cs
add
test
pop
and
repnz
lock
pop
push
in
pop
ss
hlt
jp
out
inc
jo
out
adc
dec
xor
in
sub
push
push
sbb
leave
jmp
dec
mov
arpl
js
stos
dec
arpl
and
lods
repnz
dec
mov
pusha
imul
paddsw
pop
addb
mov
lock
jg
xchg
lods
xlat
insb
jecxz
pop
loope
loop
xor
pop
pusha
jl
inc
int3
cmp
push
stos
addl
cmpsb
and
andl
jo
or
imul
cli
push
sub
xor
sub
push
lret
jb
inc
or
jns
loope
subl
jne
add
enter
adc
adc
out
cmp
mov
cmp
add
scas
flds
sub
push
out
adc
jns
add
les
scas
dec
les
cmc
in
movsb
or
inc
or
pop
xchg
adc
push
pop
je
xor
fisttpl
mov
cmp
mov
lods
enter
in
xor
add
adc
std
mov
nop
fwait
xchg
add
std
and
in
mov
push
sti
lret
mov
mov
mov
xor
adc
push
lret
stc
cmpsl
inc
jnp
pop
mov
xor
adc
pop
jo
stc
daa
test
pop
shrd
xchg
mov
es
mov
inc
lea
xchg
mov
std
popa
mov
xor
orl
testl
sarl
cmpsb
fildl
mov
lret
mov
test
loope
gs
iret
out
jp
adc
fwait
or
bnd
aam
pop
add
pop
lcall
push
pop
pop
push
mov
jno
movsb
mov
cmc
cmpsb
es
push
mov
sbb
mov
jb
jl
pop
movsb
fadd
gs
push
mov
push
dec
xchg
repz
mov
iret
push
js
mov
rcrb
cltd
jb
pusha
inc
scas
aaa
pop
lods
sbb
add
sub
shlb
frstor
stos
inc
pop
inc
or
push
into
sahf
stos
add
gs
lret
mov
push
cmp
pop
js
bound
dec
xchg
add
jo
es
push
test
insb
dec
xor
sub
call
icebp
jbe
jp
push
in
pop
cld
pop
jecxz
arpl
ljmp
fnstenv
sub
push
add
or
jmp
jns
mov
outsb
in
jbe
icebp
jne
cmp
lods
sub
popa
sub
pop
pop
mov
push
mov
ljmp
and
call
enter
xchg
iret
cltd
icebp
test
adc
xchg
inc
dec
jecxz
xor
addl
outsb
mov
cmp
scas
mov
sub
out
mov
lahf
pop
jo
ffreep
adc
call
call
xchg
dec
roll
movsl
dec
inc
add
and
in
clc
sbb
arpl
test
inc
xchg
incl
or
push
fbstp
adc
aas
mov
mov
sbb
mov
cmp
jne
fistl
xchg
sub
inc
jne
mov
xchg
pop
roll
adc
cltd
push
or
iret
xchg
fbstp
loopne
test
lock
or
sahf
xchg
in
mov
ret
lods
sar
push
dec
add
jp
jns
mov
lcall
cmp
cld
js
arpl
int3
mov
xchg
rcl
arpl
push
incl
popf
sbbl
adc
clc
outsb
mov
mov
leave
inc
or
mov
js
mov
stos
fldl
jmp
pushf
or
fwait
imul
dec
xchg
enter
push
ss
in
mov
cwtl
shl
cmp
ret
mov
lret
dec
mov
pop
cltd
xlat
sbb
and
adc
clc
test
sub
loopne
test
and
pop
jno
shll
adc
xor
imul
sbb
xchg
stos
pop
mov
in
sbb
lret
out
dec
xor
stos
inc
xor
test
pop
imul
decb
mull
push
gs
aad
sti
scas
pop
xchg
sbb
std
mov
mov
outsl
ret
jae
pop
decl
mov
cmp
lods
cmp
mov
jmp
pop
loop
xor
xlat
scas
imul
and
or
xchg
ret
cmp
nop
pop
pusha
jge
cmpsb
jno
aaa
aam
mov
aam
mov
ss
push
sbb
fwait
inc
bound
adc
shrb
push
aam
fsts
adc
mov
xchg
pop
inc
hlt
std
pusha
in
mov
mov
jge
mov
jbe
aad
jno
kunpckbw
pop
movsb
and
pop
and
imul
push
out
dec
jbe
push
cs
inc
test
out
cmpsb
ret
mov
push
insb
jmp
jo
das
xchg
out
mov
ret
jp
sub
mov
jmp
sub
fs
or
dec
jmp
pop
ljmp
rolb
mov
dec
cmc
jl
jne
inc
in
mov
jmp
pop
xchg
pop
add
cmpsl
outsb
insl
push
lahf
int
sub
cmp
add
arpl
pop
sub
inc
test
pusha
jg
push
icebp
hlt
test
arpl
pusha
test
ds
nop
jns
pusha
dec
push
mov
dec
insb
pop
sub
outsb
mov
inc
push
xchg
inc
adc
or
or
andl
insb
outsb
push
sbb
and
dec
or
in
clc
cli
test
inc
sub
push
push
repnz
xchg
and
push
pushf
ja
aad
xor
daa
fwait
test
xchg
pop
push
fdivr
in
lock
or
in
dec
bound
xor
insb
cwtl
sbb
incb
and
jns
jp
push
in
andb
add
fwait
push
jo
shrb
mov
jmp
jl
sti
inc
sub
jbe
push
jnp
mov
mov
adc
cmp
stc
pop
adc
sbb
add
notb
gs
loope
push
pop
call
add
inc
dec
insb
mov
les
xlat
jb
xor
rorb
lods
jecxz
jle
or
aam
ljmp
adc
lret
or
mov
jo
and
mov
out
mov
inc
xchg
hlt
sbb
sbb
mov
hlt
mov
dec
lods
js
sbb
scas
ficoms
int3
les
sbb
cmc
arpl
in
mov
enter
repnz
jp
je
push
jle
mov
mov
push
sub
cmpsb
int3
mov
dec
and
cmp
je
push
sub
cmp
push
cmp
push
xor
xchg
xchg
push
mov
and
mov
shll
or
shlb
xchg
xor
xchg
aam
push
pop
and
add
cmp
and
lcall
or
arpl
testb
roll
mov
scas
aaa
adc
mulb
mov
or
add
ss
add
insl
or
sbb
shl
cmc
adc
mov
dec
inc
add
das
xchg
dec
lahf
aas
xor
xchg
add
sub
enter
call
insl
inc
clc
pop
jo
loop
mov
mov
fs
pop
sbb
gs
jle
lretw
adc
add
cltd
xor
pop
push
xchg
orb
adc
mov
sti
dec
popa
mov
arpl
cmp
imul
adc
imul
cmp
fwait
loope
xor
in
push
es
or
cli
push
sbb
fcoml
lods
cld
ret
cmp
dec
imul
es
fmull
xchg
maxps
dec
or
inc
out
jle
jmp
xor
xor
lahf
out
mov
push
ss
xor
les
fistl
nop
test
fiaddl
xchg
cmpsl
push
or
stos
repnz
xor
inc
daa
mov
cmp
or
and
jno
repnz
add
adc
je
mov
push
pop
not
xor
lret
pop
jle
push
outsb
addr16
and
dec
ja
in
insl
cmp
pop
shl
jne
dec
jae
cli
inc
xchg
adc
clc
and
inc
mov
imul
jo
sbb
jmp
xchg
dec
push
cmp
sub
push
gs
add
mov
push
jl
jns
sub
xchg
or
andl
pop
pop
pop
insl
lods
or
pop
jge
sub
push
js
lock
sbb
sub
stos
in
jnp
lahf
mov
mov
push
xchg
sbb
and
push
dec
adc
pop
dec
ljmp
outsl
outsb
lret
dec
addl
jns
data16
mov
loop
cld
jae
cmpsl
dec
insb
addr16
pop
cmp
pop
mov
cwtl
mov
into
fwait
loope
outsb
nop
in
mov
into
sbb
out
loop
and
jge
shlb
or
sub
les
test
xor
aas
jne
test
scas
test
adc
fadds
lret
adc
fstpt
sub
and
lcall
inc
mov
sub
xchg
in
les
xchg
jg
into
mov
mov
aaa
test
push
movzwl
scas
mov
sbb
test
mov
repz
mov
mov
mov
sbb
mov
sub
mov
jg
pop
or
sub
in
push
leave
jb
mov
icebp
cmc
adc
xlat
xchg
jne
daa
mov
test
insl
dec
fdivl
xorl
dec
fucomp
roll
test
loop
jo
jbe
fucomp
lock
shrb
scas
mov
sbb
cltd
stos
xor
sub
mov
clc
adc
pop
pop
scas
mov
add
mov
mov
jbe
pop
nop
jl
cmp
sub
sbb
lock
cmpsb
xchg
jmp
lahf
mov
sbb
gs
jle
negb
inc
mov
mov
mov
int3
negl
es
xchg
stos
inc
and
mov
push
sbb
and
gs
and
mov
gs
mov
pusha
or
je
dec
lea
and
ffreep
pusha
inc
cmp
bound
or
sub
stc
out
sbb
shrb
addr16
pushf
sarb
inc
pusha
fsubr
imul
jns
gs
sbb
pop
mov
dec
cmp
cmp
lret
push
xor
cmp
aaa
fldt
mov
bound
addr16
sbb
repz
test
lock
push
push
mov
or
cli
shl
sbb
shlb
arpl
mov
and
mov
dec
nop
aaa
adc
cmp
cwtl
aaa
push
shlb
aas
mov
stos
or
push
aam
mov
jl
test
xor
mov
int3
mov
add
dec
shrl
push
outsl
xchg
pop
jne
mov
loopne
lret
or
sahf
jmp
out
out
in
repnz
sbb
addr16
cld
push
repnz
cmpsb
add
mov
out
mov
pop
xchg
inc
add
mov
inc
jge
mov
jnp
das
sbb
mov
std
dec
mov
pop
push
mov
sub
gs
push
push
sub
jb
test
jb
inc
sbb
repnz
and
test
pushf
mov
pop
mov
int3
xchg
sahf
fiadds
iret
fstpt
push
in
mov
je
mov
scas
xchg
jl
scas
movhps
pop
xchg
mov
fmuls
mov
test
adc
mov
jbe
lods
sbbb
adcb
or
cmp
xchg
dec
lods
push
inc
incl
jg
pop
cli
movsb
dec
add
xor
add
mov
repz
cmpl
sahf
dec
lea
cli
cmp
mov
imul
mov
add
loope
mov
mov
xchg
arpl
add
jns
jns
and
xchg
sub
dec
sub
stos
mov
mov
dec
inc
xor
aas
adc
adc
ret
push
mov
fsubl
sbb
pop
xchg
pop
xor
orb
push
or
push
jo
jp
test
cmpsb
adc
pop
mov
cmp
sbb
fcoms
fadds
inc
jno
aaa
push
jo
inc
inc
scas
outsl
cmp
insl
push
or
jb
scas
cmpsb
test
lahf
mov
clc
cwtl
bound
dec
pop
gs
add
xor
repnz
dec
repnz
test
call
enter
jp
sti
jb
test
mov
repz
dec
lret
sbb
addl
enter
dec
test
cmp
into
sub
nop
icebp
insl
or
lds
mov
jmp
std
sahf
out
pop
cmpxchg
or
popf
popa
and
sbb
xor
aam
cmp
cmp
lock
lret
je
adc
imul
shlb
xchg
dec
aaa
xchg
mov
int3
xor
sub
leave
jmp
js
sti
arpl
in
cli
jne
pop
aad
jmp
les
fdivrl
cmp
pop
inc
cmpsb
ret
xlat
ret
mov
int3
cmp
inc
leave
xor
fildl
lds
fdiv
jae
es
xchg
lahf
iret
pop
push
mov
push
and
iret
jb
and
mov
xor
cld
sub
pop
inc
inc
hlt
lret
rclb
mov
pop
testb
cltd
out
xchg
mov
sarl
out
scas
arpl
mov
push
xchg
push
adc
and
mov
xor
bound
out
out
cmc
lock
adc
push
in
test
mov
dec
add
adc
andb
pop
ss
mov
or
repnz
mov
mov
hlt
pop
jle
sub
sbb
fstpl
test
adc
jl
ds
xchg
add
repz
lds
dec
jno
add
lea
je
testl
sbb
jp
and
cltd
or
pop
jo
dec
mov
xchg
imul
push
mov
lret
inc
pop
fiaddl
inc
decb
call
mov
mov
in
jge
xlat
fwait
mov
or
stc
or
or
add
mov
dec
xor
stos
inc
movlps
push
xchg
xor
je
xchg
divb
cmp
data16
hlt
fsubrs
xor
jae
fldcw
aas
int
cmc
das
cmp
xchg
add
stos
push
in
sub
mov
les
imulb
xchg
xchg
sbb
mov
int3
leave
push
jno
call
popf
je
xlat
xor
rcrl
lahf
push
out
test
sbb
xchg
cmp
fbstp
mov
rcl
xchg
mov
xchg
testb
movl
lods
loop
mov
cmp
or
enter
fsts
sub
icebp
lret
and
aad
lods
in
mov
aas
sbb
in
jge
inc
aaa
jns
and
lock
mov
mov
or
jp
stos
repnz
or
sub
pop
gs
cmp
xor
nopl
cld
test
fwait
fisttpl
xchg
outsb
and
aas
stc
daa
les
xor
sbb
cltd
cltd
jno
push
mov
and
daa
cmp
aad
jecxz
repnz
adc
movsl
xchg
adc
loopne
fadds
mov
dec
sub
cmp
fs
lcall
push
scas
mov
push
mov
outsl
add
dec
in
aas
nop
lret
das
mov
hlt
add
fcmove
inc
js
orl
sbbb
shll
mov
xor
daa
push
xchg
dec
das
aad
testb
fidivrl
sbb
pop
pop
ja
lods
jg
lahf
js
outsl
or
xchg
aaa
jns
adc
cmp
and
mov
mov
data16
add
inc
les
jbe
das
inc
arpl
and
and
push
cmpsb
out
imul
pop
jmp
in
int
lea
divb
outsl
xor
pushf
jmp
cmp
jo
or
mov
bound
dec
cmp
fxtract
xor
sti
push
in
inc
std
adc
push
xor
pop
mov
data16
jns
and
icebp
and
xchg
adcb
pop
mov
inc
out
lock
jae
ficomps
ret
imul
test
fnstenv
outsl
fldpi
fldcw
lea
adc
lds
fsubl
out
cmpsb
xchg
ficompl
ret
adc
xor
mov
repz
sub
jl
fsts
dec
inc
cmp
jle
jl
addb
stos
jns
and
pop
adc
movsl
mov
movsb
nop
push
ljmp
xchg
jge
and
mov
leave
push
cs
jb
xor
jb
adc
ret
dec
push
inc
test
nop
cltd
push
pop
loope
adcl
dec
xchg
push
cmp
push
clc
inc
push
add
xchg
mov
jno
test
loopne
test
sub
pop
xor
jecxz
xor
rcr
stos
sbb
pop
loopne
pop
push
sub
xchg
dec
add
fdivrl
add
in
sti
nop
dec
mov
jnp
subl
cwtl
mov
int3
outsb
xor
mov
adc
inc
es
push
dec
sub
push
dec
pop
or
bound
sahf
lods
mov
push
add
xchg
out
test
popf
pusha
cmp
sbb
out
add
cmp
and
popf
aad
jmp
cmc
data16
pusha
adc
fcompl
das
cmp
scas
test
mov
popa
and
pop
sbb
sub
sbb
fdivrs
push
lret
adc
push
push
sbb
rcl
movsb
rorl
shll
stos
dec
insb
icebp
pusha
les
add
jno
add
xchg
aaa
ja
and
fisttpll
push
xchg
cmp
and
mov
push
push
cmp
loop
dec
mov
add
cltd
ficoml
add
jge
test
stos
xor
sub
enter
mov
inc
ret
sbb
dec
je
cmovge
pop
mov
xor
pop
push
lock
popf
lods
subb
fiadds
call
xlat
jle
jbe
and
xchg
loop
and
insb
int
adc
mov
push
push
mov
pop
ret
test
mov
pop
push
mov
push
in
sub
gs
xchg
out
subl
out
push
mov
mov
jmp
out
mov
data16
aas
pop
mov
cmp
push
fnstcw
out
mov
insl
push
dec
mov
mov
out
ljmp
test
inc
cmp
sub
call
fcmove
imulb
and
push
fildl
aam
mov
inc
sbb
pop
inc
adc
cs
outsb
add
outsb
aam
jl
dec
xor
xchg
jb
call
mov
jle
out
idivb
jnp
add
dec
clc
jmp
xor
dec
dec
inc
icebp
imul
jne
aam
fwait
in
inc
jns
xor
xchg
arpl
mov
stos
mov
fistl
fisubrs
sbb
mov
and
xchg
movsb
adc
pop
xchg
xlat
mov
cmp
js
scas
inc
cmc
imul
pop
mov
imulb
ja
cmp
aam
cld
push
test
cmp
ja
imul
sbb
jmp
sahf
outsl
add
push
and
jnp
jo
ficomps
cld
ds
fwait
iret
jbe
leave
adc
sbb
bnd
push
inc
mov
xchg
ss
dec
mov
inc
shl
das
in
leave
sahf
sarl
ljmp
add
outsb
cld
imul
clc
jb
xchg
inc
push
pushf
cmp
jnp
dec
mov
jns
int
xor
test
push
fdivs
cmp
es
shll
dec
or
cmp
push
jecxz
lret
xchg
aas
mov
outsb
addb
push
lret
xchg
cs
or
lea
outsb
and
sub
out
lahf
add
daa
ja
fisubrl
es
int3
subb
xchg
aam
fwait
in
push
mov
xor
lret
mov
xchg
push
push
mov
movsl
cmp
rcll
xcrypt-ctr
cmpsl
cwtl
js
xchg
fnstsw
cmp
test
insb
es
iret
call
mov
stos
out
fs
push
enter
add
jl
sub
xchg
mov
sbb
jo
sbb
rolb
fistl
pop
push
lcall
xchg
mov
ds
push
add
fsubrs
jae
mov
repnz
orl
push
stos
sub
jae
push
scas
jbe
inc
aas
test
out
in
mov
call
rorb
cmp
jne
mov
push
daa
cltd
adc
add
rorl
dec
lret
pop
dec
lcall
xor
xchg
dec
addr16
xchg
popf
ficompl
adc
pop
push
add
lods
in
cld
movsl
xchg
dec
push
mov
pop
es
mov
lods
sub
cltd
jecxz
rorl
push
push
iret
mov
push
sub
fcmovbe
cld
dec
les
inc
lds
inc
std
or
lahf
psubusb
mov
dec
xchg
insl
ret
clc
or
ficoms
shll
fnstenv
sarb
sbb
dec
mov
and
push
out
fiadds
dec
shrb
pusha
cs
adc
xchg
add
jno
repz
jno
push
sbb
fdivrp
adc
movsl
mov
outsb
scas
push
dec
in
and
and
lea
dec
scas
adc
sub
add
daa
sahf
imul
sbb
sub
mov
jecxz
push
jl
xchg
sub
sbb
or
sbb
mov
mov
call
xor
ja
and
add
insb
adc
add
dec
pop
xorb
out
testb
add
pop
pop
adc
xchg
mov
roll
xor
mov
lahf
xor
mov
pop
incl
loopne
xchg
rcll
testl
scas
gs
in
loope
test
adc
sub
inc
dec
mov
xchg
stos
out
push
scas
sub
outsb
std
xchg
and
test
dec
cltd
mov
sti
xchg
add
push
xchg
mov
sbb
sub
xchg
fistl
paddsb
jle
mov
outsb
fnstcw
daa
add
pop
ret
nop
insb
cmp
aad
jno
dec
jne
sbb
mov
sbb
mov
je
dec
cltd
test
leave
mov
xor
loopne
xchg
and
fistps
pop
sub
aas
xlat
mov
decb
add
shl
fisubl
in
lea
sub
cmp
jne
cmpsb
roll
cmp
adc
push
xor
outsb
jnp
jecxz
jnp
dec
outsl
test
iret
daa
pop
pop
sahf
push
incb
movsb
mov
add
cmp
mov
into
testb
lahf
mov
leave
aad
push
jmp
lret
adc
xchg
in
mov
or
mov
sti
xchg
mov
sbbb
cs
or
jo
xor
push
xchg
movl
test
pop
sub
in
fs
push
dec
jmp
fadd
mov
ds
fbld
mov
push
mull
sub
adc
sbb
inc
xor
js
mov
push
imul
sbb
je
mov
mov
mov
in
push
insb
or
int3
and
test
data16
dec
inc
mov
mov
les
in
fildll
and
lret
push
das
dec
mov
call
inc
shrb
pop
or
sub
mov
and
sti
xchg
push
ds
sarb
push
lock
pop
or
pop
incl
mov
jl
movsb
lods
mov
push
in
mov
lcall
test
lods
sub
repnz
fcompl
mov
xchg
scas
imul
pop
dec
pop
xchg
lahf
mov
push
jo
pop
sub
mov
pop
jne
inc
insl
lods
jge
or
or
and
cs
cltd
popf
call
mov
xchg
add
pop
add
mov
out
es
jbe
mov
out
sbb
into
xchg
mov
mov
sahf
xor
subl
and
xchg
addb
arpl
in
xchg
ret
jp
inc
push
dec
or
imul
imul
mov
jnp
test
xor
mov
jmp
mov
cld
adc
sbb
mov
mov
roll
je
cmp
jns
ret
or
add
repnz
inc
xchg
imul
xchg
leave
cmp
mov
add
test
sbb
mov
popa
or
in
mov
mov
aad
popa
and
mov
pop
jns
shrb
ret
add
mov
pusha
lcall
in
inc
mov
jo
cmc
loopne
adc
jle
imul
lock
cmp
loope
lahf
and
ss
cmp
faddp
aad
ja
mov
mov
mov
push
roll
rorl
cmpsb
dec
push
iret
dec
ja
cwtl
bound
popf
mov
icebp
add
in
jno
mov
mov
xchg
scas
clc
fstp
outsb
std
negl
mov
inc
jl
cltd
sub
inc
pop
pop
cmpsl
mov
inc
addr16
insl
push
mov
cmpl
imul
xchg
cmp
xchg
or
pop
xchg
mov
jecxz
adc
ja
movsb
mov
divl
lea
roll
popf
sbb
sub
das
into
or
or
and
mov
pop
shrb
cmc
pop
dec
hlt
dec
mov
lock
inc
adc
pusha
sub
sbbl
cmc
outsl
sub
inc
ja
test
push
mov
in
shl
push
inc
jmp
or
fnstcw
or
lock
push
push
pop
jg
sbb
popa
test
push
sbb
cltd
in
ds
sub
loopew
into
fldl
mov
cli
lcall
pop
xchg
mov
bound
push
pushl
das
cmpsb
data16
adc
and
add
jne
loop
xor
dec
jae
mov
pop
mov
mov
movsl
insb
xlat
dec
ret
sbb
dec
cmpsl
fwait
push
mov
sub
cltd
pop
into
xor
rcrb
shrb
insl
sub
dec
xor
lahf
ficoml
dec
fldcw
dec
sub
sub
iret
add
xchg
add
sahf
das
and
or
fsubrl
in
outsl
jnp
imul
cmc
leave
popf
jge
jo
jno
stos
and
subb
xchg
pop
fdivl
mov
jo
add
imul
pop
lods
orl
loope
sbbw
jno
pop
sbb
or
inc
cmpsl
lahf
rol
mov
xchg
out
and
rcrb
jg
loop
mov
loope
addr16
ret
or
out
jnp
rorb
mov
add
cwtl
stc
and
sbb
jge
cmp
push
xchg
daa
cmp
test
andb
lods
mov
ss
mov
pop
test
notl
xor
insl
mov
jae
mov
cli
pop
shlb
sub
aam
scas
mov
cmp
lcall
aas
aaa
int3
mov
xor
fcompl
cmc
push
and
push
push
ja
jb
or
cmp
shlb
out
xor
jno
sahf
xor
pusha
pop
fisubrl
outsb
cmpl
cmc
mov
and
cmp
call
sahf
adc
mov
and
xor
out
mov
shrb
jg
pop
pop
mov
out
js
or
xchg
jmp
xchg
mov
inc
shll
push
xlat
mov
fs
jnp
cmp
lahf
movsl
hlt
jecxz
dec
sbbl
jecxz,pt
push
fcmove
inc
out
pop
push
sbb
aas
cmp
mov
icebp
add
sbb
jge
jle
sub
cmp
mov
cmp
out
lret
js
cmp
daa
dec
fstl
sub
hlt
jg
adc
xchg
pop
lds
pop
outsl
aad
loopne
mov
addr16
fwait
xor
pop
lds
negb
adc
cli
pop
push
add
or
pusha
hlt
popf
add
clc
sub
imul
mov
mov
aas
test
xchg
das
push
dec
push
leave
adcb
pop
and
hlt
dec
inc
jmp
add
out
ds
int3
and
mov
scas
pop
xchg
sbb
inc
pop
inc
data16
cltd
dec
mov
sub
shrl
add
in
pusha
sahf
push
shrl
dec
cs
sbb
push
mov
push
sub
in
dec
mov
ret
imul
inc
add
mov
push
adc
push
sbb
push
stc
pusha
push
fimuls
mov
mov
add
push
cmc
xor
loope
xchg
aas
jne
mov
xor
imul
std
ss
ja
add
mov
fsubl
ret
lods
dec
cmp
and
push
push
je
xchg
xchg
inc
mov
lahf
add
ss
icebp
call
sub
fists
cmp
sbb
lods
movsl
mulb
fadd
gs
add
inc
adc
daa
cmp
sub
mov
jge
iret
cld
jmp
cmpb
sbb
pop
sbb
sbb
pop
mov
lcall
mov
outsl
push
push
push
clc
push
sbb
add
cmpsb
or
push
out
jbe
stos
or
and
adc
or
add
inc
shll
jp
outsl
orl
mov
inc
add
sbb
xor
dec
pop
bound
mov
jl
jle
and
add
imul
sub
das
cwtl
loopne
dec
lahf
cmpsl
cmp
pop
test
push
je
xor
mov
daa
aas
pop
das
shr
xchg
sahf
test
loop
movsb
push
inc
mov
data16
cs
sbb
inc
arpl
dec
orl
cmpsl
mov
fnstenv
int
pop
inc
push
mov
jnp
pop
decl
repnz
aaa
mov
cmc
gs
xor
pop
leave
fidivl
dec
arpl
jecxz
push
js
xchg
ret
scas
sbb
icebp
cs
adcl
aam
cmp
fcmovnbe
xor
rcrb
push
mov
imul
lret
dec
xor
pop
xor
ja
inc
test
and
out
lahf
ljmp
mov
cmp
pop
and
jb
out
sarl
insl
push
mov
dec
sub
movsb
insl
or
add
cld
mov
ret
scas
xor
add
adc
or
cmpsl
cmp
out
add
je
cli
pop
cltd
push
push
dec
loop
subl
call
mov
cs
addr16
push
push
push
in
outsl
xchg
addr16
and
pop
push
cmp
jbe
pop
outsb
dec
mov
xchg
push
int
mov
and
xorb
mov
pop
in
sarb
mov
pop
pop
leave
pop
cmp
pop
lds
sub
mov
inc
dec
xor
inc
movb
hlt
je
lea
or
fst
cmp
xchg
decl
std
jae
and
shlb
sub
dec
sub
idivl
mov
sub
repz
xchg
sahf
out
mov
mov
repz
mov
dec
inc
pop
xchg
mov
enter
push
add
sub
imul
inc
cld
xchg
ja
js
into
mov
add
fimuls
popf
mov
js
push
addb
clc
xchg
out
adc
repnz
inc
mov
sub
inc
sub
in
jecxz
inc
nop
repz
js
dec
iret
and
sar
ds
ljmp
fs
xchg
iret
pop
jle
inc
push
or
insl
fpatan
mov
sub
addr16
pop
and
cltd
out
mov
xchg
cmpsb
inc
dec
cmc
aaa
mov
insb
mov
pop
das
popf
adc
loop
add
sbbl
pop
call
adcl
out
out
lcall
jecxz
push
xor
jge
cmp
loop
bound
icebp
imul
imul
stc
ret
mov
insl
add
les
nop
mov
inc
test
mov
push
pop
imul
out
jnp
xlat
hlt
clc
ret
bound
jmp
aad
jge
ret
mov
ja
sarb
divl
fdivs
insb
cmp
jns
or
popf
jo
jp
fbstp
xor
push
movsl
push
mov
dec
xchg
ds
adcl
jecxz
push
mov
inc
inc
mov
jle
push
add
xlat
xchg
jl
xor
daa
adc
lahf
dec
inc
add
sub
aam
adc
jnp
cmc
jae
jb
mov
fmul
adc
and
fildl
pop
lods
shll
adc
jno
jp
test
push
cmp
jmp
inc
cli
clc
xchg
stos
nop
shrb
dec
cltd
push
jns
movsb
out
pop
out
cli
pop
repnz
xchg
ret
cmp
lods
xor
xor
scas
sahf
out
movsl
jl,pt
fadds
pushf
and
into
xor
ss
inc
es
clc
xchg
ficomps
add
sbb
xorb
test
ret
fsubs
addl
xor
sarb
fists
scas
push
scas
hlt
jmp
fsubs
sbb
in
pop
sbbl
xchg
pop
cmp
out
xchg
sub
add
push
adc
and
loope
lea
xchg
cltd
push
jecxz
inc
pushf
ror
or
stc
jle
pushf
jp
jecxz
xor
aaa
mov
xchg
mov
mov
andb
sbb
mov
xlat
stos
push
ljmp
sbb
cld
int3
push
or
cwtl
movsb
adc
stos
clc
andb
xchg
push
loope
jle
adc
jl
xchg
shr
lods
loopne
xchg
sub
das
add
xchg
mov
fs
std
negb
addr16
int3
inc
aad
inc
mov
test
clc
and
mov
jne
clc
jns
sahf
fstps
pop
add
aam
lret
and
vsubps
push
call
fistpll
jae
test
test
or
inc
and
pop
gs
aam
mov
inc
fisubs
sbb
iret
xchg
sub
pop
mov
outsb
push
xor
test
lret
rcr
push
jl
lahf
rolb
bound
lods
test
and
sub
or
stos
imul
xchg
mov
bound
mov
sub
in
bound
xor
push
lods
xor
cmp
in
mov
movsl
lret
jecxz
pop
popa
pop
adc
push
iret
les
imul
push
jo
or
mov
dec
js
imulb
test
jmp
sbb
inc
dec
and
jne
push
sub
lret
das
shl
push
das
stos
test
mov
movsb
daa
lret
adc
sub
inc
int
dec
dec
xchg
loopne
out
or
xlat
bound
pop
hlt
mov
push
mov
addr16
jno
mov
ljmp
repz
rolb
scas
mov
imul
cmpsl
xchg
sahf
iret
add
or
iret
adc
jb
roll
and
ss
inc
push
cmpsb
mov
mov
push
ja
into
pusha
out
jmp
or
push
sahf
xlat
jae
pop
add
xchg
repnz
scas
mov
cmp
enter
jb
sbb
inc
ds
cld
je
xchg
arpl
jmp
out
lret
and
sbb
push
and
es
popf
outsb
inc
daa
or
dec
call
pusha
xchg
cmc
int
xor
xor
sbb
xchg
out
xor
xor
cmp
inc
push
jns
jb
adcb
lea
xchg
loopne
inc
pop
jle
push
or
inc
clc
scas
aas
filds
imul
jle
loopne
sbb
cmpsb
jg
test
mov
xchg
inc
push
lods
dec
es
add
cmp
not
adc
popf
dec
nop
jp
adc
jno
jle
outsb
xor
xchg
xchg
mov
adc
fdivl
adc
fwait
sbb
mov
ret
jns
xor
push
popa
or
lods
lret
or
jmp
pop
pop
in
cmp
popf
leave
test
dec
test
nop
sbb
lds
call
lahf
jp
add
rorb
jns
xor
or
jnp
fdivrs
cmp
push
lods
add
mov
jnp
je
repnz
adc
inc
call
and
std
cmp
add
divl
xor
test
scas
jge
and
test
adc
sbb
jnp
scas
roll
xlat
xlat
push
xor
cltd
xchg
xor
sbb
jne
popa
sbbl
add
xlat
fsts
sub
xor
cmp
xchg
mov
mov
pop
pop
loop
add
jg
cld
or
pushf
mov
inc
or
mov
imul
fnsave
test
loope
lret
dec
push
pop
add
bound
mov
popf
push
dec
xorb
outsl
inc
add
roll
addr16
xchg
rcr
inc
out
movsl
push
iret
jne
mov
pushf
push
js
mov
sub
cwtl
test
test
jl
scas
aas
stos
sub
out
pop
sbb
mov
sbb
adc
push
lret
inc
push
iret
jo
aas
pop
jle
inc
cmp
add
sbb
mov
push
fisttpl
mov
mov
jge
pop
push
pop
loope
push
loop
inc
hlt
mov
mov
sub
or
dec
pop
imul
xchg
test
js
sbb
cmp
xlat
sub
je
loop
ds
sub
leave
data16
loope
fmulp
sbb
xor
mov
sub
test
lahf
pop
or
dec
adc
out
jg
jg
aas
mov
mov
fcmovbe
xchg
in
scas
push
data16
test
mov
or
xchg
xchg
ds
sub
outsb
gs
popf
shlb
ret
mov
fimull
mov
mov
arpl
add
jecxz
cwtl
das
sbb
loop
mov
mov
repnz
pop
xor
cmp
push
jo
xor
jecxz
sub
ret
out
imul
shlb
xchg
clc
push
pop
cmpsb
incl
jg
cmc
lods
mov
xlat
gs
jb
stos
call
sahf
rcl
or
repz
push
cmp
add
outsl
test
pop
pop
sub
cmc
push
lds
jo
movsb
mov
insl
sysexit
popa
cmc
xor
inc
add
mov
repnz
rclb
and
jle
scas
bound
fs
mov
cmp
cmp
mov
fsubr
arpl
inc
or
lret
xor
arpl
hlt
add
add
aas
test
mov
jae
mov
mov
incb
stos
adc
xchg
inc
push
lods
xchg
icebp
aaa
sarb
pop
cli
arpl
ret
test
add
or
clc
mov
into
out
jp
test
push
call
je
icebp
outsl
fsub
jbe
scas
mov
mov
lret
int3
mov
or
push
lds
xor
add
ljmp
or
loop
pop
jbe
adc
and
mov
adcb
or
cs
rcrb
lods
push
jbe
mov
clc
in
ffreep
xor
fisttpl
push
xchg
sahf
aam
stos
mov
adc
inc
mov
inc
ds
aam
mov
pop
mov
jge
call
dec
sti
out
cmp
sti
imul
in
test
stos
or
or
cmpsl
cmp
aaa
push
mov
ja
int
dec
add
lea
xchg
leave
data16
ret
lock
aas
cmp
stos
pop
dec
mov
push
adc
inc
pop
call
xchg
lea
mov
idivb
push
push
or
pop
insl
in
sbb
subl
and
dec
mov
inc
adc
xchg
lret
jnp
les
inc
clc
loope
fists
mov
sub
sti
mov
mov
or
mov
mov
iret
xchg
sbb
mov
rcrl
pusha
cmpsb
fcomi
scas
pop
and
jae
out
sub
test
xchg
hlt
and
out
sbbl
mov
and
cmp
daa
rcrb
cmp
add
loop
fidivrl
or
pop
mov
add
sti
icebp
sub
repnz
mov
xchg
add
into
mov
lds
mov
ljmp
loopne
xor
fisubl
jo
enter
pop
jo
mov
mov
or
std
pop
scas
scas
cmp
sub
call
imul
adc
xchg
add
movsb
push
and
popl
in
and
lcall
lret
or
jno,pn
pop
cmpsb
mov
xchg
jbe
ss
negl
jecxz
shrl
adc
hlt
out
leave
add
mov
jbe
jle
cli
lahf
cmpsb
push
mov
out
jb
mov
loope
lcall
sbb
test
stc
mov
mov
and
mov
int3
cmp
jg
in
cmpsl
test
jmp
fwait
mov
hlt
ja
cwtl
out
jg
idivl
adc
mov
adc
mov
call
sbb
scas
or
jo
or
movsb
push
imul
mov
or
mov
lods
loopne
lcall
divl
xchg
mov
ret
fidivrl
inc
aam
es
inc
and
lock
mov
pop
lods
cmp
ret
xor
jg
xchg
sub
test
cltd
lods
or
pop
and
cmp
repz
and
dec
scas
scas
xchg
stc
pop
imul
jle
subb
jge
add
repz
into
add
sbb
pop
pop
mov
dec
xor
pop
push
add
lods
nop
iret
push
enter
ja
cmc
inc
shl
or
sbb
push
int
jns
add
or
cmp
popf
mov
fnsave
xchg
sbb
ja
fwait
mov
test
adc
imulb
lods
xor
das
xchg
mov
mov
sbb
mov
sahf
xor
in
push
mov
mov
add
adc
xchg
jecxz
xchg
and
loope
push
jae
sbb
out
sbb
stc
ljmp
cmp
fisubl
mov
dec
mov
ss
les
add
aaa
les
imul
movsl
movsl
imul
xor
call
sub
out
loop
subl
sub
add
call
and
sbb
mov
jle
jnp
mov
xor
sti
add
pop
cs
pop
loopne
push
shlb
mov
xlat
mov
fstpl
xlat
add
push
dec
int
sub
inc
push
fsubrl
or
mov
sbb
cs
lock
cltd
roll
lea
xlat
sub
stc
stos
sub
addl
loopne
popa
rcrl
cmpsl
add
loope
mov
inc
sbb
repz
aas
sub
test
push
clc
jbe
lret
xor
call
or
orb
jecxz
mov
daa
sbb
push
xor
add
cmp
mov
dec
fldenv
adc
inc
pop
aaa
scas
fisttps
fnstenv
jb
inc
int
dec
xor
xor
push
call
push
sahf
testl
test
dec
lahf
in
hlt
std
dec
mov
cli
outsl
ret
out
jne
fiadds
mov
xchg
aad
sti
xchg
fcomi
ss
test
cltd
inc
add
fldl
mov
test
adc
punpcklbw
enter
jns
lret
add
jg
mov
xor
test
xor
inc
data16
cld
scas
mov
fistl
stos
enter
adc
movsl
faddp
jb
dec
adc
jns
fimuls
push
adc
or
int3
cmp
xchg
add
bnd
mov
jo
dec
insb
mov
movsb
or
adc
stc
repnz
bound
pop
or
jbe
sti
cs
cmpsl
pop
push
mov
pop
subl
fwait
mov
push
pop
in
sbb
mov
das
pop
test
iret
inc
sub
arpl
std
inc
cmp
mov
dec
adc
test
iret
int3
popa
or
mov
xchg
xchg
pop
or
sub
fisubl
jo
pop
shrb
pop
inc
xchg
aam
mov
inc
sbb
push
dec
push
andb
xchg
cmp
or
js
arpl
or
push
aas
jo
addr16
push
lahf
cmpsl
aaa
jae
out
lret
jns
xor
mov
mov
scas
cmpsb
push
testl
outsb
stos
lcall
cmp
cmpsb
xchg
movsb
and
ljmp
sub
jb
mov
mov
and
push
or
mov
jp
clc
jo
push
scas
pop
pop
subl
push
test
jnp
pop
pop
mov
mov
push
enter
mov
test
adc
pop
cmp
inc
sbb
dec
cmpsl
adc
push
in
add
stos
fistps
test
or
test
jbe
push
lods
fs
aaa
jmp
lods
stos
int3
jmp
adc
dec
xlat
sbb
pusha
xchg
mov
cs
adc
arpl
or
inc
inc
outsb
xchg
jp
lds
cmp
std
jo
cmp
inc
lret
xor
lods
xor
adc
inc
add
mov
xchg
jp
imul
lcall
or
lods
fmuls
and
xor
lods
and
or
repnz
add
xchg
xor
jno
cmpsl
mov
inc
adc
pop
mov
and
mov
shlb
movsb
add
adc
test
inc
cli
sti
mov
cmp
or
mov
leave
lods
testb
and
addr16
es
inc
mov
fwait
pop
jne
adc
lret
lret
mov
das
xchg
in
cmp
sub
xor
or
dec
repnz
jo
movb
jnp
rolb
addb
push
inc
or
out
mov
aad
cmp
mov
adc
in
movsb
cmpb
sub
int
insb
imul
mov
dec
sub
xchg
nop
adc
mov
sbb
pop
dec
out
aas
scas
sub
fstl
jo
push
jl
dec
inc
movsb
loop
jbe
loop
stos
xchg
lock
dec
lcall
ret
xchg
les
jo
and
stos
out
and
push
add
les
push
scas
sbb
in
push
movsb
push
jno
stos
sti
notl
decb
inc
cs
imul
add
or
adc
jmp
jmp
lds
push
cmpb
xlat
repz
mov
xchg
fildll
arpl
dec
fists
sbb
push
xchg
push
pop
aam
jp
shl
mov
cli
mov
movsb
jne
out
jl
inc
insb
dec
std
in
sub
fistps
mov
data16
lret
mov
cmpsb
cwtl
add
jle
aad
add
add
aam
xchg
jmp
xorl
and
test
push
lods
adc
repnz
sub
inc
pop
pop
pop
cmp
push
movsl
jnp
mov
sub
int3
shr
ret
je
movb
xor
and
lods
add
jb
lock
xchg
movsb
test
push
mov
or
lock
sub
cmpsl
sarb
xor
jnp
mov
pop
sbb
fsubrl
fdivl
lds
push
mov
stc
push
push
jno
sub
sbb
shll
pop
xor
mov
cli
pop
push
fcomp
cmpsl
adc
hlt
mov
std
adc
and
icebp
mov
inc
pop
lods
subl
clc
mov
sahf
push
pushf
cmp
mov
lods
sub
sub
imul
imul
test
push
clc
dec
sbb
cmovo
fiaddl
gs
popl
add
lock
add
sbb
mov
popf
dec
cmp
mov
push
sub
lahf
jecxz
and
pop
movsb
inc
scas
push
push
jg
pop
pushf
push
push
mov
pusha
in
cmp
mov
les
or
sub
adc
jl
enter
sbb
inc
stos
dec
test
or
sbb
jo
std
fstl
adc
mov
jns
pop
pop
push
add
mov
push
arpl
testb
mov
fs
loope
cmpsb
inc
movsl
in
rcr
push
insl
mov
xchg
or
dec
int3
dec
lret
jno
xchg
push
cmpsb
shlb
mov
mov
dec
sti
sub
pusha
push
sub
sbbl
mov
jbe
mov
and
sub
pop
or
mov
and
fnstsw
mov
pop
dec
imul
test
test
mov
adc
ffreep
in
add
cmpsb
xor
mov
jge
cmp
lahf
inc
in
xor
imul
mov
orl
enter
xlat
mov
or
xor
rep
inc
sub
and
iret
sar
pop
loop
lock
aam
jo
sbb
in
mov
repnz
mov
push
outsb
xlat
ja
adc
in
xlat
adcl
cmp
loope
jmp
xchg
test
lcall
lods
or
loope
sbbb
push
jg
inc
push
mov
mov
repz
pop
cmp
pop
add
or
stos
xlat
xor
int
icebp
subl
movsl
fists
insb
adcb
jmp
scas
dec
xchg
xor
cmp
push
ror
inc
aas
addr16
push
les
mov
add
and
sub
pop
jno
adc
ret
nop
add
ret
jmp
xchg
xchg
or
lret
jb
cwtl
xor
rcr
dec
jbe
cmp
arpl
xchg
flds
sub
jmp
dec
popa
inc
shll
mov
sub
dec
cmp
jmp
int3
dec
pop
mov
sub
cmp
xchg
inc
push
sbb
sbb
incl
and
ret
adc
mov
jle
inc
das
pop
push
shl
fs
stos
pop
pop
cmp
adc
dec
push
mov
sub
fsubr
cmc
jl
inc
js
mov
movl
lcall
xor
mov
fisttps
loope
push
data16
push
enter
data16
test
xchg
stc
inc
mov
push
fistl
sub
ret
mov
or
jns
cmp
and
icebp
stos
xchg
cltd
aam
test
aaa
or
xchg
imul
cmp
das
sub
das
cltd
push
mov
xor
adc
inc
mov
lahf
xor
push
test
pop
jno
lahf
pop
sub
mov
pop
mov
aas
push
xchg
cltd
popf
call
ret
sbb
jo
xor
fadds
std
inc
and
cmp
xchg
daa
jmp
js
fiaddl
sti
btr
jb
dec
pop
mov
xchg
inc
pushf
loopw
adc
and
into
jp
or
insb
lods
jbe
cmp
pop
addb
push
pop
jnp
xchg
pop
scas
aam
mulb
je
dec
je
imul
xor
ds
push
add
ja
mov
scas
pop
add
xchg
and
cltd
mov
mov
imul
lods
lahf
cmp
in
push
sbb
pusha
imul
fwait
push
inc
adc
push
pop
ret
adc
jp
jecxz
pop
mov
das
idiv
jo
sbb
inc
xchg
shrl
add
movsl
sub
jo
adc
mov
inc
ljmp
mov
cmpsl
hlt
je
xlat
nop
rorb
jnp
pop
mov
orb
lcall
out
rcll
fcoml
xlat
push
and
popa
and
ja
mov
rolb
xchg
cmp
mov
cwtl
xchg
jmp
sub
in
cltd
or
xor
cmp
rcrl
inc
sarl
negl
repnz
addr16
dec
cmp
or
insl
aas
lods
scas
das
xchg
push
mov
hlt
inc
cmp
mov
movsb
fsubl
xor
cmp
mov
pop
xchg
jmp
xchg
pop
jecxz
push
cwtl
rorl
fs
lods
mov
mov
je
inc
cli
ret
fistpll
aad
sbb
jno
sbb
dec
mov
xchg
insl
fnstcw
adc
cmpl
jmp
shl
cmp
pop
adc
jmp
jns
call
pop
or
lock
cli
xchg
outsl
ljmp
lahf
inc
and
cmp
push
and
pop
xor
dec
mov
loopne
cmp
sub
enter
int3
adc
cmp
jns
adc
std
addl
mov
stos
into
jns
xchg
xchg
ret
movsl
ds
shrl
lock
mov
mov
pusha
inc
sti
fnstcw
jmp
mov
mov
test
sbb
jge
popf
popa
inc
ljmp
add
out
mov
ljmp
and
cs
hlt
aam
and
mov
adc
push
dec
or
es
pusha
adc
rol
fiaddl
outsl
dec
clc
cmp
inc
inc
lcall
lret
jg
mov
push
push
aad
and
fwait
aam
push
mov
add
pushf
lods
cld
inc
out
push
int3
add
aam
jge
call
fwait
outsb
and
addr16
in
mov
mov
sti
pop
lods
add
cmpsl
test
xor
sub
mov
jne
mov
or
add
dec
imul
xchg
inc
add
movsb
sub
add
out
jmp
loopne
ljmp
sbb
add
adc
or
mov
pop
fs
mov
push
jne
shlb
inc
pop
xchg
push
cmp
dec
push
jns
subl
ficoms
aaa
idivb
cltd
leave
pop
sub
add
subb
or
fdivrl
imul
scas
and
mov
inc
fnstenv
aas
ret
stos
push
sbb
mov
dec
bound
jo
pop
inc
inc
es
repz
call
push
cmp
mov
es
jl
cmp
pop
jns
push
mov
fs
dec
cmp
or
popa
add
inc
int3
mov
xchg
outsb
inc
cmp
lahf
sahf
test
mov
or
scas
frstor
call
dec
lods
out
out
add
fstl
sub
shl
dec
aad
jmp
outsb
aad
push
frstor
xor
inc
hlt
leave
jmp
flds
test
ret
mov
fadds
fisubrs
cltd
push
pop
test
movsl
cmpsl
mov
xor
xchg
pop
push
and
lahf
fldenv
out
aam
mov
mov
les
jo
adc
pop
icebp
pop
adc
test
cmc
cmpb
jae
xchg
adc
daa
pop
repnz
pushl
in
js
sbb
clc
mov
cld
sar
jns
adc
loope
pop
jmp
dec
sbb
fisttpl
orb
les
jl
mov
push
out
mov
call
cmc
popf
je
add
jge
and
jb
inc
clc
nop
insl
xchg
mov
sbb
inc
xchg
cmpsl
inc
loope
inc
pop
xchg
scas
shlb
add
jp
rolb
and
jnp
add
push
or
sub
xchg
mov
jg
mov
pop
dec
jp
or
bnd
xchg
jb
and
insl
test
sub
cli
xchg
loope
push
xchg
cwtl
daa
mov
daa
scas
cmpsb
push
mov
xchg
pop
fndisi(8087
pop
cmc
aad
imul
pop
fisubl
fwait
iret
lahf
call
lock
adcb
xor
in
dec
lret
xchg
adc
cmpsl
lahf
xchg
xchg
out
jmp
jae,pn
or
int3
jo
test
pop
mov
arpl
pop
ror
push
mov
push
mov
push
dec
repnz
mov
shll
sbb
aad
inc
xchg
daa
into
test
xchg
scas
rclb
xor
dec
pop
mov
mov
jo
sub
xor
test
fcompl
push
test
push
pop
mov
lods
fs
xchg
inc
adc
add
dec
xor
add
iret
jle
mov
or
xchg
out
in
and
cmpsl
popa
cmp
push
xor
es
test
pop
jne
mov
jecxz
aad
mov
xchg
mov
inc
in
or
or
pop
popf
cmp
jle
mov
sahf
or
shrb
jae
sub
call
fs
in
sahf
outsb
push
add
inc
ret
pop
mov
jae
test
push
ret
inc
pop
jae
push
dec
int
cmp
and
dec
stc
sub
lcall
push
cmc
fildll
lea
push
add
rcrb
mov
mov
adc
cmp
dec
rcr
mov
mov
gs
repz
lea
repz
or
stos
fimull
ljmp
lea
out
pop
insl
pop
adc
mov
mov
cmp
cmp
pop
js
push
or
xor
into
mov
ret
imull
xor
jns
outsb
sbb
sbb
inc
dec
cwtl
cli
fwait
xchg
mov
jo
test
or
mov
icebp
lret
in
cli
out
shll
xchg
pop
insl
ja
rclb
fisttps
imul
dec
push
fisttpl
popa
aas
ljmp
dec
gs
jno
or
clc
in
test
push
lret
or
iret
jp
mov
lods
cmpb
ljmp
mov
filds
inc
xor
inc
mov
jno
push
mov
add
xchg
aaa
cmpsl
adc
lods
adc
or
xchg
ret
aam
leave
leave
jmp
push
dec
jge
inc
add
nop
inc
xchg
nop
jp
scas
mov
add
mov
xchg
gs
add
inc
popf
adc
xor
dec
fnstsw
int3
in
out
mov
leave
push
lods
push
fs
pop
es
dec
xchg
sbb
sarl
xchg
ja
adcl
sub
jle
jo
cld
mov
repnz
jle
jne
arpl
xchg
lods
jne
scas
xor
inc
addl
pop
mov
dec
lods
cmpsb
sub
incb
mov
arpl
mov
cwtl
aas
mov
and
movl
test
cltd
pop
bound
movsl
scas
shl
add
sti
hlt
jp
scas
inc
push
arpl
sti
cmc
xlat
mov
subl
int
add
nop
shrl
inc
imul
arpl
xor
mov
mov
xchg
repz
sbb
out
repz
stos
ret
and
dec
jge
mov
inc
aaa
mov
mov
data16
fs
in
mov
sub
bound
cmp
jnp
in
cwtl
mov
adc
jp
xchg
in
sahf
cmc
frstor
cmpsl
lea
loopne
mov
ficoml
in
fidivrl
xchg
pop
outsl
outsb
dec
mov
adc
xchg
jno
shrl
mov
push
je
sti
mov
push
mov
arpl
cltd
cmp
push
fcmovne
push
call
lahf
cmc
lahf
jae
scas
add
iret
call
loope
shr
mov
int
push
sbb
jo
jmp
lcall
repz
dec
mov
xor
jmp
jnp
dec
jecxz
push
cmp
xchg
pop
and
mov
fcmove
negl
mov
enter
int
outsl
mov
cmp
outsl
or
ljmp
pop
inc
sbb
enter
out
clc
scas
clc
jo
push
jo
push
lea
jbe
push
aas
leave
jmp
mov
pop
rcll
jnp
stos
lods
scas
leave
rorb
inc
filds
sub
jge
in
rolb
sub
test
mov
xchg
jb
jbe,pn
cmp
cmp
push
xlat
into
fwait
push
cmp
push
stc
adc
cld
xor
shll
mov
xlat
insb
lahf
sbb
test
pushf
or
push
scas
cli
xor
arpl
imul
lahf
outsl
xor
jecxz
jb
push
sub
cltd
or
mov
push
arpl
aad
test
dec
pop
xchg
pushf
call
mov
jle
ds
daa
mov
in
inc
test
lea
mov
insl
aas
dec
rorb
or
mov
mov
pop
ljmp
adc
popf
adc
and
cmpsl
xor
jns
incl
cmp
push
daa
lea
adc
or
call
ds
sub
iret
adc
push
mov
sti
sbb
mov
insb
call
insb
dec
mov
loope
pop
push
or
data16
push
cbtw
sbb
pushf
xchg
inc
clc
cmc
jp
adc
ja
xor
adc
aas
hlt
and
lcall
test
push
xor
push
fisubs
scas
pop
in
cmpb
push
pop
xor
and
dec
std
lret
mov
sub
inc
cwtl
scas
lcall
cmp
or
hlt
data16
loopne
sbb
rcl
scas
in
stos
mov
mov
fisubrs
pop
sub
fs
sbb
mov
inc
ds
loope
xchg
fdivl
in
jno
push
mov
fbld
push
das
jo
inc
push
icebp
jle
pop
lock
inc
xchg
mov
push
inc
mov
mov
scas
xor
jns
repnz
jmp
pop
lods
test
mov
stc
pop
adc
xchg
inc
sarl
mov
push
fdivl
inc
inc
jo
mov
xchg
mov
icebp
sbb
icebp
jne
imul
cmp
mov
ficomps
insl
les
fnstcw
mov
rolb
mov
leave
xor
inc
jne
adc
push
push
stc
mov
inc
jae
sub
cmp
mov
outsl
scas
cs
cli
pop
rolb
cmp
jge
lcall
mov
push
ficompl
pop
pop
xchg
mov
les
call
daa
negl
test
fsubrs
xchg
fdivs
push
mov
addb
xor
shlb
je
sbb
insb
je
pop
stc
fadd
push
roll
movsl
add
xchg
mov
pop
not
aaa
dec
push
aad
popa
inc
in
cli
push
pop
lret
lcall
jl
pop
das
insl
addr16
adc
sbb
decl
in
repnz
cmp
insb
fwait
push
cmp
xor
adc
push
insb
cmp
je
cmp
cs
or
add
int
inc
xchg
pop
pop
shlb
mov
stc
ficoml
aas
inc
sbb
dec
sbb
push
enter
push
lods
lret
in
out
lods
hlt
out
mov
sbb
in
movsl
pop
shrl
mov
xor
add
jmp
leave
test
push
and
mov
push
out
in
rol
call
out
fistl
cmp
sbb
fists
or
daa
inc
or
shlb
and
nop
mov
xchg
dec
jnp
shrl
rcll
pop
shlb
push
add
fldt
inc
test
sub
inc
in
push
dec
ret
je
loop
sbb
mov
cltd
cltd
sub
jns
inc
icebp
inc
cvtps2pi
xchg
dec
pop
loopne
and
rcr
pop
lock
push
rorb
jle
push
orb
xor
dec
sub
push
outsl
lods
mov
movsl
in
fsts
jns
sbb
pushl
nop
cs
gs
loope
movsb
scas
mov
cmp
jb
fistps
push
add
jmp
pop
sbb
sub
rorb
divl
or
or
sbb
les
mov
xor
pop
dec
in
inc
mov
xchg
jne
mov
cmp
mov
call
jmp
dec
push
repnz
adc
inc
push
xchg
cmpsl
mov
and
in
mov
rep
mov
xor
iret
in
jo
shlb
lods
lret
pop
add
jae
cmp
mov
mov
addl
mov
fsubr
xchg
ret
outsl
lahf
in
and
push
aas
and
std
lods
rolb
repz
iret
dec
add
outsl
in
ret
stc
inc
int3
test
mov
daa
ja
insl
lea
sahf
sub
jae
adc
mov
push
and
aam
shr
xchg
sbb
push
and
push
rol
cmpsb
xchg
pop
cmpsb
mov
repz
adc
fnstsw
movsb
xchg
dec
and
adc
lods
push
or
jbe
not
inc
xchg
imul
xorb
xchg
cmp
test
insb
xor
sub
xchg
xor
push
and
cmp
inc
fdivs
push
sub
xor
jl
repz
das
mov
arpl
push
aam
jl
mov
scas
pop
jg
sbb
movsb
push
inc
lea
or
aas
aad
mov
mov
negb
pop
sub
xchg
rorl
ss
testb
inc
pop
mov
popf
mov
arpl
lods
sbb
lahf
push
adc
icebp
push
out
fwait
sbb
ret
and
movq
call
mov
xchg
adc
adc
cs
sahf
lods
and
push
dec
push
aam
mov
lahf
clc
out
in
out
rorb
xchg
inc
jo
xchg
xlat
shll
mov
inc
inc
xchg
xor
lret
mov
cmpsl
dec
mov
pop
lds
mov
push
and
pop
ret
repz
fiaddl
popa
cld
jns
and
mov
in
hlt
mov
push
jo
cld
bound
pop
pusha
sbb
icebp
pop
sti
push
sti
hlt
enter
jecxz
mov
xchg
insb
inc
mov
fisttps
cmp
sub
jo
jb
mov
out
rorl
popf
mov
shrb
pop
mov
fstpl
mov
pop
lahf
push
pop
pop
inc
movsb
sti
cld
ds
test
jmp
push
push
push
dec
ret
jp
gs
mov
dec
or
or
xor
xchg
or
pop
dec
pop
pop
push
fistps
adc
adc
out
iret
sbb
dec
push
cmp
and
push
sahf
mov
cld
add
dec
push
js
dec
or
mov
dec
mov
pusha
xor
iret
xor
jl
test
xlat
pop
gs
push
aam
or
xor
push
in
inc
ret
inc
std
insb
orb
xor
mov
pop
hlt
push
outsb
mov
jnp
xor
dec
and
insb
add
push
sbb
cmpsl
sbb
xchg
xor
fwait
mov
xchg
and
enter
and
push
mov
adc
mov
mov
xor
add
sbb
sbb
adc
stos
fs
and
shrb
scas
imul
and
stos
adc
lahf
and
lods
jmp
data16
popf
out
popa
lahf
adc
in
and
imul
sub
cli
dec
shlb
sub
jecxz
ds
pop
fwait
dec
loopne
test
arpl
cmp
cmp
sub
outsb
addr16
dec
shl
jns
insl
daa
pop
mov
in
lcall
add
and
mov
sbb
xor
cmpsl
prefetch
or
bound
mov
inc
adc
or
cmc
xchg
xchg
inc
das
dec
loopne
mov
sub
pop
adc
out
or
stc
xchg
jbe
jo
shr
lea
pop
js
scas
mov
repnz
ficoms
and
pop
dec
lods
mov
call
lock
push
cs
inc
movsb
andb
sbb
push
repz
xor
jp
fstpt
xchg
push
repz
push
sbb
pop
into
ss
inc
sub
hlt
addb
xor
sbb
cmpsb
inc
mov
push
jno
adc
xor
mov
arpl
cltd
sbb
sti
sub
ljmpw
popa
orl
jp
pop
xchg
loope
sti
mov
popa
inc
les
xchg
pop
or
leave
js
mov
or
mov
inc
inc
mov
cmp
mov
add
dec
icebp
adc
pop
data16
test
adc
fwait
dec
fstp
jb
mov
jle
pusha
or
dec
test
dec
cld
addb
cmp
and
out
mov
cmp
inc
inc
pushf
jecxz
mov
mov
jp
andl
inc
ficomps
mov
dec
fdivr
lods
mov
push
add
or
std
sar
lods
stc
inc
mov
inc
mov
enter
push
and
and
sarl
dec
xor
popf
push
jmp
mov
aam
stos
jmp
mov
or
lods
stos
push
popa
inc
daa
xchg
in
es
cs
add
add
xchg
cmp
movb
shll
fucomip
sbbb
pushf
pop
cwtl
movsl
dec
or
xlat
mov
bound
and
out
sti
mov
and
xchg
aas
sbb
lock
int
jmp
aad
imul
adc
adc
and
dec
aam
sub
jge
pop
pop
xchg
inc
xchg
sub
cmpsb
mov
fstpt
inc
inc
mov
lock
push
ljmp
mov
jl
add
out
pop
imull
xor
and
dec
daa
add
mov
xor
and
in
scas
xchg
arpl
movsl
mov
and
aam
mov
sbb
sbb
stos
pushf
inc
cmp
test
add
mov
jmp
pop
cmp
popf
ljmp
mov
add
inc
xor
mov
cmpb
xor
or
mov
xchg
int
sub
testb
xor
notl
lar
mov
in
out
jnp
jg
sbb
cmc
push
push
add
sti
ss
fiaddl
mov
rol
clc
pop
dec
in
bound
imul
jmp
dec
jg
cmp
add
xor
lea
dec
sub
hlt
xorb
nop
les
pop
aam
out
jge
or
pop
mov
repz
lods
outsl
ljmp
lcall
and
jg
fxtract
insl
push
push
jo
pop
sahf
dec
sarl
dec
lret
movsb
lods
iret
xchg
push
pop
rcrl
mov
jno
mov
inc
jnp
lock
mov
cltd
or
add
scas
jge
movsb
aad
xor
mov
mov
mov
mov
das
or
or
ds
mov
fstps
les
gs
push
into
jns
lret
xchg
outsb
pop
cmp
les
aaa
outsl
rcl
pop
fstpt
loopne
inc
stc
scas
push
fidivs
loope
sub
mov
adc
fmul
xlat
pop
cmc
ljmp
pop
mov
jmp
cmp
std
rep
jne
inc
loop
and
nop
jp
outsl
and
jns
jnp
dec
push
add
xchg
aam
pusha
popf
xchg
pop
enter
pop
add
pmaddwd
push
push
pushf
sti
stos
iret
out
sub
int3
cli
ror
scas
and
rol
arpl
aam
js
or
push
je
mov
cmp
sub
out
jno
dec
mov
lret
mov
ljmp
stos
jecxz
or
jae
in
mov
mov
pop
mov
dec
inc
stos
and
test
sub
test
pop
nop
add
sbb
xor
xor
imul
add
pop
pushf
sub
out
imul
call
addl
lea
add
fs
icebp
outsb
bound
mov
pusha
pop
adc
test
pop
add
dec
std
test
iret
add
mov
mov
xlat
mov
dec
xchg
call
xor
test
mov
repz
sub
dec
fiadds
cmpsl
es
lahf
stos
or
bound
push
in
sbb
mov
jb
andl
adc
sub
mov
faddl
fildl
xchg
out
test
push
pop
mov
int
insb
pushf
notb
rcl
fldcw
daa
xlat
mov
rcll
imul
sbb
mov
les
push
jmp
stos
xchg
pop
jbe
icebp
inc
sbb
add
shll
lret
xor
incl
jae
cmp
in
test
dec
iret
mov
sbb
pushf
jg
ljmp
in
in
je
repz
add
repz
stos
adc
sti
xchg
inc
enter
add
aas
mov
pop
sbbl
xchg
push
jmp
pop
cmp
in
sub
sbb
and
call
test
ja
xor
test
xor
imul
pop
mov
pop
enter
cmp
xor
jp
test
mov
ljmp
pusha
call
pop
and
fsub
and
cwtl
hlt
mov
sbb
dec
xchg
pop
in
scas
sti
aam
jbe
lods
ret
ficoms
cld
mov
or
push
push
jns
hlt
pop
push
in
pop
cmpl
push
imull
push
popf
pop
jnp
es
test
cmp
cmc
pop
jae
data16
ds
cmp
pop
cltd
lahf
mov
in
iret
int
adc
jmp
or
pop
loopne
insl
jns
pop
jae
mov
sub
dec
jbe
push
mov
sbb
cmp
mov
mov
mov
andl
in
pop
xchg
fisubrl
test
rcrl
adc
and
hlt
pop
sbbl
xchg
movsb
xor
xchg
dec
push
xchg
in
rcl
xor
mov
push
rcrb
cmp
dec
das
sub
dec
or
jmp
ror
sub
pop
loop
lcall
sbb
xchg
std
popa
push
pop
fstps
ds
cmpsb
add
es
stc
mov
sti
fwait
mov
mov
loop
lea
ja
cmpsb
cmp
icebp
or
rcr
mov
mov
push
inc
pop
ret
hlt
push
jge
fwait
in
xchg
aaa
aas
add
xchg
mov
jle
addb
sbb
cmp
insl
pop
rolb
icebp
test
sbb
push
pop
rorb
sbb
ds
outsb
pop
stc
or
add
adc
lcall
push
pushf
das
add
adc
and
fnstenv
push
inc
mov
push
mov
shlb
shll
mov
stos
cmp
dec
aam
or
rorb
jne
es
pop
jp
in
jnp
addr16
lods
jne
ljmp
or
hlt
xchg
cli
mov
sahf
xchg
jle
xor
add
addr16
insl
and
ss
pop
addr16
xchg
cmpsl
imul
cmp
loope
mov
fmuls
scas
mov
fwait
or
or
fdivs
addr16
xlat
fwait
jae
jmp
flds
into
xchg
push
test
lret
jp
mov
dec
dec
and
sarl
cmpsl
mov
adc
mov
ljmp
ja
or
add
inc
int3
in
ljmp
sarl
ret
cmp
loopne
in
lds
jecxz
push
ret
mov
pop
mov
xchg
pop
dec
pop
push
pop
ret
sbb
pop
mov
pop
pop
subb
cmp
inc
test
out
sahf
sbb
jne
jbe
mov
push
adcb
jne
cmp
in
jmp
adc
dec
test
or
bound
mov
mov
sub
cmpsb
jge
xchg
or
push
xor
nop
inc
pop
dec
inc
outsb
pop
repz
out
lcall
push
jmp
mov
sub
addr16
sbb
imul
sub
mov
jg
rcll
scas
fwait
inc
test
adc
repz
sti
jnp
sbb
es
adc
pop
or
lret
movsb
fsubs
push
add
add
mov
insb
mov
mov
push
mov
adc
movsl
xor
jae
xor
imul
mov
add
nop
add
leave
movsl
sub
push
mov
data16
cmpsl
inc
int3
loope
idivb
add
setnp
arpl
add
xlat
push
mov
test
add
mov
mov
fisttpll
out
cmp
lret
jno
inc
inc
lods
or
inc
xlat
and
leave
and
aas
cli
mov
pop
cmp
cmp
adc
stos
stos
fbld
mov
xchg
push
adc
xor
cmpsl
push
mov
mov
dec
inc
mov
adc
mov
push
outsl
or
repz
aam
mov
sub
jb
mov
jae
cwtl
push
xchg
hlt
ss
xchg
and
and
je
stos
jge
pop
push
ret
lods
imulb
insb
mov
push
ljmp
push
push
xchg
mov
push
js
pop
pop
mov
cwtl
imul
dec
lcall
xchg
jmp
fldt
xchg
pushf
xchg
lods
xchg
repnz
iret
adc
rcll
mov
gs
lret
idivl
mov
xor
mov
movl
pop
sbb
mov
push
pop
mov
jmp
ja
ret
xchg
jmp
lea
shll
faddl
test
mov
rclb
mov
das
idivb
jnp
xchg
adc
sbb
xor
sbb
xchg
lds
inc
push
inc
aam
out
jle
aad
inc
and
scas
test
subl
add
xorl
ror
jle
sarb
in
xor
push
std
leave
jg
incb
add
pop
xor
pop
cmp
pusha
stos
adc
iret
fs
loopne
fcomp
xchg
xchg
je
jo
fs
and
push
je
pop
int3
xor
jle
mov
leave
mov
cmp
sbb
or
fwait
psrlw
cmp
jnp
fsubr
jle
xchg
or
or
push
jmp
icebp
lahf
sahf
inc
cli
sti
xchg
and
cmp
ret
aad
fcmovu
mov
pop
inc
jle
fs
adc
pop
jmp
mov
das
sub
push
fiadds
js
or
sahf
mov
sbb
dec
sub
jmp
xchg
mov
sub
xchg
mov
inc
jae
loope
into
pop
dec
cli
sbb
push
xor
popa
paddw
fldt
mov
pop
rorb
es
pushl
add
adcl
in
arpl
das
mov
aaa
iret
inc
mov
ljmp
sqrtps
sbb
stos
rclb
mov
mov
rorb
int
sub
in
bound
inc
pop
mov
inc
mov
pop
xchg
sbbb
stc
sbbl
imul
inc
mov
vcmpss
mov
aaa
sub
je
test
into
ds
pop
jb
sub
das
or
in
and
rcll
mov
or
pusha
dec
les
mov
push
in
jmp
lret
xchg
mov
inc
pop
jmp
xchg
push
jne
shrl
adc
jl
jae
pop
jmp
mov
mov
adc
ret
es
jl
jae
fsubl
adc
inc
mov
jb
and
cmp
adc
outsb
mov
or
repnz
adc
js
in
cmp
das
pushl
dec
sti
stos
inc
sahf
mov
cmp
push
fiadds
fisubl
int3
enter
push
lock
mov
fiaddl
or
inc
add
mov
inc
sbb
push
out
adc
fs
js
jo
mov
or
sti
dec
fstl
aad
push
jle
cmpsl
inc
pop
ja
add
xlat
call
adcb
jmp
push
push
push
ror
dec
xor
or
push
xchg
and
sahf
fwait
add
mov
jno
adc
test
lcall
xchg
mov
jno
adc
ss
jno
xchg
mov
in
and
je
out
outsb
mov
mov
ret
rclb
movsb
push
and
dec
lcall
out
aaa
xchg
lahf
inc
jae
aad
scas
fnstcw
and
enter
into
insb
div
outsl
int3
adc
adc
addl
fisubs
xor
imul
adc
fimuls
into
mov
sub
pop
pop
shlb
outsl
insb
jne
dec
mov
sahf
fcoms
mov
gs
add
dec
xor
add
add
jae
adc
std
sbb
fwait
test
arpl
push
jmp
ret
xor
ss
jmp
shlb
int3
sub
in
pushf
std
push
mov
repz
gs
aad
ss
cli
lea
bound
sbb
subb
cmp
test
dec
addr16
dec
lret
icebp
pop
add
xor
xor
xchg
je
bound
dec
pop
pop
ret
mov
xor
arpl
lret
insb
div
mov
jecxz
fstl
test
add
push
in
mov
cwtl
add
push
int3
mov
sub
jmp
shrb
iret
std
ss
jle
stos
lock
xchg
push
cld
dec
add
iret
mov
push
cltd
push
mov
stos
ds
in
inc
test
lea
and
sub
xor
xor
jl
int3
xchg
pop
xchg
adc
je
stc
cltd
inc
push
xchg
push
mov
stos
and
mov
mov
cli
xchg
rcll
cmp
push
mov
movsl
test
pop
add
pop
add
jmp
mov
test
and
subl
and
xchg
mov
or
xor
lods
mov
jg
in
xchg
jae
ljmp
pop
cmc
xchg
xchg
inc
mov
jae
jb
sbb
sti
rcll
pop
out
repnz
add
pop
loop
mov
pop
bound
add
in
in
add
mov
sub
cli
push
out
jno
pusha
inc
lods
scas
xchg
adc
lret
es
lds
mov
xorl
into
push
adc
or
push
dec
lea
jg
loope
xlat
push
int
push
out
ljmp
jecxz
cmc
vpackssdw
call
fs
in
insb
and
xorl
and
inc
mov
mov
adc
fistpll
add
mov
or
rclb
dec
inc
jp
outsl
arpl
aad
and
dec
add
mov
jns
cmp
loope
push
push
and
sti
push
shll
adcb
cmp
ror
aad
mov
lea
ja
mov
inc
mov
repnz
mov
add
insb
and
loop
cltd
jle
insb
into
sahf
adc
adc
nop
cltd
inc
mov
jae
mov
inc
lock
pop
mov
push
lcall
fldt
inc
jmp
pop
cmp
jne
sahf
decb
xchg
rcl
daa
adc
mov
inc
dec
xchg
sahf
jns
cs
test
sub
mov
cmc
xlat
js
mov
pop
xchg
adc
lcall
xchg
and
mov
ds
fcoms
xchg
cmc
or
pusha
fistl
add
cs
jns
adc
stos
cs
shll
sti
idivb
mov
sahf
inc
add
jb
jo
jle
into
sti
enter
js
push
insb
mov
repz
addr16
push
mov
sbb
fstps
outsl
cmp
into
lock
jo
das
aas
xchg
push
mov
sbb
ret
xchg
fcmovb
cmp
roll
cmp
xor
test
dec
pop
fcoms
xchg
jp
mov
fildl
fcomps
shlb
in
scas
and
and
loope
rolb
mov
sub
aaa
xor
push
mov
pop
nop
out
sub
test
das
enter
mov
shll
mov
xor
dec
lcall
mov
pop
jmp
jno
pop
fldenv
mov
pop
mov
aaa
repnz
xor
or
xchg
add
xchg
call
cmp
lahf
enter
lods
cwtl
mov
dec
xor
shlb
xchg
push
add
cmp
xchg
testl
in
sbb
test
aad
mov
ss
xor
pop
jle
hlt
mov
mov
add
push
aad
xchg
insb
mov
xlat
pop
jg
pusha
stos
pop
stc
dec
shlb
shll
js
mov
in
cmc
pushf
jmp
mov
lods
jmp
ret
fists
cmp
pop
cld
or
pop
je
fisubrs
pushf
mov
and
and
adc
fsubl
add
mov
imull
iret
cmpsl
adc
fldl
sub
cmpsl
data16
cwtl
pop
ret
push
xchg
lds
sti
popl
inc
xchg
sbb
in
sbb
loopne
inc
dec
mov
and
movsb
mov
inc
xor
jp
dec
or
mov
fs
leave
into
mov
dec
jbe
and
add
dec
xor
add
inc
test
ja
jl
je
push
jns
fsubl
xchg
in
mov
mov
sti
xchg
mov
aad
orb
div
outsb
inc
rclb
das
mov
jge
js
into
ljmp
icebp
call
push
jae
aaa
out
movsb
fldl
fstl
xchg
cmp
sbb
inc
sbb
mov
jle
xchg
push
jne
cmpsb
sbb
into
frstor
cmpsb
jnp
sbb
cmc
scas
add
inc
adc
mov
xor
lea
adc
sbb
mov
jp
nop
xchg
push
xchg
lret
mov
loopne
stos
faddl
shlb
sbb
test
pop
imul
and
xor
xor
hlt
or
ja
outsb
int3
aad
test
rol
int
jge
mov
outsb
mov
xchg
andl
or
sbb
in
add
in
xorl
std
lret
mov
fsubrl
ja
insl
cmp
aaa
jp
jb
jmp
xchg
push
stos
push
mov
sub
fcom
adc
adc
call
push
jg
ret
stos
divb
ja
xor
mov
mov
mov
xor
shlb
nop
cmc
insb
mov
loopne
dec
mov
jecxz
mov
fisttpll
xor
std
xchg
insb
mov
jns
ja
sti
jge
lahf
pop
out
test
leave
scas
out
xchg
aad
cmp
jb
inc
scas
scas
aad
insb
pop
mov
aam
mov
fsubs
or
out
je
into
ss
lcall
mov
imull
les
jl
aas
push
pushf
das
dec
stos
mov
xchg
jle
lods
and
push
push
cmp
ficomps
andl
fadd
aaa
loope
add
sub
push
insl
push
push
sub
pop
adc
push
loop
mov
test
outsl
push
lahf
mov
jno
out
int
fistl
lods
gs
mov
mov
lods
dec
rcrb
pushl
adc
in
xor
push
add
push
mov
test
inc
xor
iret
shl
inc
pushl
aaa
dec
lods
fmuls
inc
mov
mov
xor
adc
push
ret
and
push
or
lret
stos
jmp
xchg
jp
out
fs
push
das
daa
repz
sub
pop
gs
outsb
ds
cmc
jmp
mov
inc
data16
insb
pop
inc
call
adc
fstpt
mov
iret
jmp
movsb
sub
in
call
rorl
fisttps
pop
test
in
adc
nop
lods
jo
andl
inc
sbb
dec
stos
push
xchg
mov
push
sbb
int
shl
fnsave
in
lret
xor
jecxz
clc
pop
les
mov
mov
dec
jo
pop
lret
mov
fsub
mov
mov
mov
pushl
jecxz
jp
aam
ljmp
stos
pop
cmp
inc
mov
in
add
ss
lods
fildll
fstpt
mov
inc
jne
xchg
push
cmpsb
popf
js
test
std
or
xor
mov
inc
jb
cmp
sub
xor
xor
fwait
btcl
out
add
push
sbb
pop
xor
inc
cltd
dec
or
push
xchg
movsl
jo
enter
mov
mov
je
movsb
std
iret
pop
push
jnp
inc
lds
mov
stos
idivl
mov
xchg
test
mov
pop
scas
addb
popa
jb
roll
mov
sti
sub
pop
jl
jecxz
mov
mov
jb
dec
fidivs
out
aam
into
loop
jge
jecxz
pop
loop
movsb
arpl
in
dec
push
xor
mov
adc
sbb
adc
cmp
sbb
mov
jnp
int
sbb
popf
jo
out
jmp
iret
or
shrb
jg
xor
pop
mov
popf
vmovddup
frstor
sbb
loop
xchg
push
dec
out
rorl
rcrb
push
stos
mov
ret
pop
xchg
jb
insl
fbld
push
sbb
xchg
ficoms
and
cs
jnp
daa
outsb
inc
sbb
test
push
test
jns
mov
cmpsl
in
cmp
or
aam
jecxz
xchg
movsb
jo
jno
pop
repz
xor
stos
sahf
cmp
add
adc
adc
iret
adc
pop
loope
mov
in
ja
pop
lods
sub
xchg
jbe
pop
xchg
xor
fsub
mov
test
lret
test
test
inc
hlt
add
push
adc
cmpsb
scas
outsb
xor
inc
cmp
loope
xchg
pop
rorb
mov
test
push
in
push
fnstcw
mov
dec
sub
in
xchg
scas
xor
lods
push
xor
mov
xchg
jns
and
mov
addr16
pop
sub
out
xchg
pop
repz
out
xchg
push
and
rolb
lcall
pop
xchg
pop
mov
in
lret
into
scas
sbb
ss
cmpsb
movl
and
mov
mov
add
out
lret
add
aam
out
pop
xor
xchg
sti
sbb
lea
and
in
mulb
pop
out
mov
clc
push
pop
xchg
add
loope
ret
pop
rorl
lcall
in
lods
mov
push
xchg
cmc
mov
inc
push
mov
mov
imul
push
jp
das
cmp
dec
cltd
jnp
cmp
test
lea
lcall
add
testb
clc
stc
xor
stc
movl
inc
subb
sarb
push
adc
daa
stc
push
add
adc
scas
aas
out
or
inc
pushf
xlat
mov
lcall
and
shll
add
fcmove
pusha
test
in
xchg
sbb
add
fs
call
push
pop
pop
insb
fsubs
push
out
jb
sbb
dec
loop
into
icebp
xchg
movsl
mov
divb
movb
cmpsl
mov
mov
sbb
nop
aas
fadds
in
rcr
call
jae
notb
sub
fdivrs
add
scas
ljmp
jno
sbb
adc
jnp
add
push
mov
ljmpw
jo
fistl
sti
mov
jb
sahf
and
add
pushf
jle
icebp
repz
mov
push
xor
jne
pop
test
and
test
add
push
test
nop
lcall
xchg
jmp
add
stc
mov
push
pop
js
mov
aam
push
adc
pusha
stos
scas
adc
adc
arpl
les
test
xchg
or
test
incl
sub
js
popa
add
lret
sbb
ret
stc
sahf
aas
adc
xor
fnclex
sub
testb
outsl
fsubrs
dec
pop
mov
inc
lods
sbb
gs
jo
mov
mov
pop
jl
outsb
jge
popf
xor
and
popa
and
push
sub
cmp
pop
call
push
sarb
adc
test
mull
popa
xchg
fsubrs
dec
add
test
leave
ja
dec
dec
call
fsubrl
shll
enter
push
pop
cmp
mov
movsl
into
int
xchg
cmp
adc
mov
mov
ret
push
sahf
dec
cmpsb
or
and
ret
jnp
mov
inc
fcoml
mov
addr16
adc
aam
sbb
daa
jmp
inc
xor
push
int3
adc
cmpsl
das
mov
in
xchg
out
xchg
push
jmp
lods
clc
repnz
shl
addr16
cmp
mov
pushf
in
addr16
bound
out
fucomi
aaa
negb
xchg
sub
sub
pop
fcompl
ffree
lds
mov
int3
push
mov
adc
mov
adc
leave
and
lret
pop
cmpsb
cmp
ret
lcall
jp
xor
aad
ret
or
cmc
xor
xor
mov
sub
int3
aas
mov
stos
mov
sahf
nop
fldenv
fiadds
inc
mov
sarb
sti
gs
nop
popa
mov
aas
out
mov
push
xchg
out
sbb
imul
pop
roll
xor
pop
cmp
gs
dec
fisttps
in
pop
cmp
lock
pop
adc
mov
lret
add
push
aas
filds
xchg
adcb
or
mov
jo
push
cmp
push
sub
xor
roll
xchg
out
jmp
ljmp
jmp
xor
stc
push
or
or
aad
and
bound
push
lret
outsl
ret
mov
inc
mov
adc
xor
in
xchg
mov
lds
adc
out
fimuls
adc
xor
add
fists
jo
sbb
addb
dec
outsl
clc
jg
adc
xchg
fimuls
aaa
cltd
scas
repz
cmp
mov
sub
fimuls
ds
adc
push
in
jp
lea
cmp
and
jae
mov
xor
dec
js
and
mov
js
lods
inc
push
push
mov
repz
pop
xor
divl
rcl
adcl
xlat
cmp
dec
sub
mov
cmp
add
add
or
int
pop
ljmp
push
imul
addr16
mov
arpl
and
in
sub
lea
mov
iret
sub
or
jae
or
ljmp
clc
cmp
pop
inc
sub
aaa
jl
xchg
and
lret
enter
push
xor
out
into
or
pop
sbb
dec
mov
xchg
iret
js
mov
pop
test
ja
hlt
int
mov
jmp
ret
add
mov
mov
mov
or
mov
mov
test
cmp
dec
xor
cmpsb
xchg
push
test
pop
addb
pop
js
pop
mov
mov
pop
rcrb
in
add
scas
adc
mov
xor
xor
or
pop
shll
shl
mulb
rcrl
sbb
outsl
push
lahf
lods
inc
mov
cmp
or
out
xor
sub
fmuls
daa
mov
pop
out
cld
scas
sahf
xor
aaa
mov
jb
fcmovbe
lret
adc
jns
or
or
sub
pop
mov
out
ljmp
mov
cli
mov
daa
inc
adc
mov
addl
out
in
xor
stos
mov
pcmpgtw
ret
mov
in
xchg
inc
push
lcall
mov
fimuls
inc
dec
repnz
pushf
in
rol
jo
lcall
push
rcrl
xchg
outsb
xlat
xor
or
xchg
call
inc
adc
int3
or
push
xchg
add
push
in
or
xor
sub
adc
or
gs
sbb
sbb
ss
jle
lods
loopne
push
pop
sub
xor
fwait
push
les
jmp
add
jmp
sbb
push
daa
or
stos
or
xor
adc
xchg
movsl
mov
jle
ret
push
pop
ret
xchg
repnz
clc
loop
rorl
fcoms
sub
es
sarl
mov
stc
xchg
or
xlat
mov
dec
test
pop
icebp
mov
add
dec
aaa
out
roll
dec
xchg
sub
pop
adc
adc
fldcw
addb
pop
in
loope
xor
push
pop
call
out
out
outsl
cmp
loop
adc
int3
icebp
cmp
bound
mov
aaa
push
cltd
push
hlt
sub
xor
ret
mov
loope
jnp
call
push
bnd
xchg
cmp
lahf
push
insb
test
ret
xor
into
cmpsb
test
mov
dec
out
shlb
in
insb
push
cltd
xorb
aaa
fwait
inc
sub
addl
std
roll
orb
jg
mov
mov
in
ljmp
cmp
out
push
lods
jle
push
js
jp
inc
or
mulb
test
mov
mov
sub
sti
lds
mov
sbb
dec
mov
mov
ds
stos
icebp
int
addr16
mov
and
popl
xor
fwait
aas
pop
into
or
ss
mov
push
or
sbb
sub
push
lret
mov
imul
push
rorl
cli
dec
repnz
aaa
inc
push
sbb
jns
jl
ds
enter
push
mov
aas
fwait
test
es
lret
pop
mov
mov
push
fxtract
mov
xchg
mov
jns
push
imul
jmp
sahf
lcall
sbb
dec
sub
pop
sub
push
pop
sub
fisubl
leave
and
dec
adc
mov
ss
mov
xor
mov
or
dec
lret
push
aam
arpl
pop
lods
inc
out
jmp
fst
je
dec
xor
lock
mov
lock
xor
or
cmp
out
hlt
dec
dec
das
lret
xchg
ret
adc
popf
xorb
stc
add
nop
lcall
adc
add
lods
leave
cmp
inc
sbb
bound
cwtl
test
jb
rclb
push
lea
leave
loop
and
jg
mov
dec
fs
mov
jne
popf
xchg
cmc
mov
fiadds
loope
lock
mov
xor
shl
or
mov
test
adc
loope
and
fimuls
call
out
or
fistpl
std
xor
cwtl
mov
ret
mov
jp
lods
pusha
mov
cmp
div
repz
xlat
aam
fiaddl
xor
adc
xor
mov
paddusb
outsl
pusha
pop
xchg
or
add
clc
ss
fdivs
std
insb
push
mov
jo
inc
stos
mov
pop
test
sahf
mov
and
hlt
sbb
dec
aad
ja
cmp
in
repz
inc
xchg
push
dec
cmp
lahf
test
add
jle
pop
sub
pop
out
sub
stos
mov
sub
mov
clc
or
add
xor
sbb
jne
xlat
push
pop
hlt
or
loopne
mov
mov
repz
out
mov
sbbl
sbb
orb
nop
push
ret
out
sub
dec
cmp
aad
and
stos
addl
or
sub
jmp
jle
cmp
cmpsl
aaa
and
pop
fnsave
popa
sbb
test
mov
pop
cmc
xorb
mov
mov
repnz
mov
sbbl
add
jge
fildl
test
jb
add
or
pop
inc
adc
fwait
pop
mov
and
insl
shll
pusha
mov
jbe
imul
push
push
imul
pop
test
jl
shr
ret
iret
jecxz
and
dec
lahf
adc
jno
inc
jg
test
inc
xchg
mov
aam
adc
mov
scas
jmp
pop
hlt
cmpsb
dec
pusha
mov
lock
inc
ds
daa
mov
mov
mull
xor
das
push
shl
adc
sbbb
adc
jge
lahf
iret
add
idivl
push
imul
insl
inc
push
sub
fcoml
jp
cmp
mov
stos
mov
xchg
adc
mov
adc
dec
xchg
repz
add
fildl
int
imul
cmpsb
out
mov
jmp
mov
fisttps
jmp
xchg
adc
inc
xlat
jo
lcall
mov
dec
test
xchg
shlb
mov
sub
add
jns
ss
inc
push
jb
out
jae
dec
and
sbb
mov
push
or
jnp
cld
sti
push
sub
mov
pusha
xor
mov
clc
sbb
jne
mov
int3
ret
aam
jb
in
aad
push
mov
jl
mov
push
add
sti
cwtl
jns
or
movsl
cltd
cmp
inc
push
jecxz
xchg
bound
in
cmp
push
pop
mov
cmp
icebp
testb
stc
popf
sarl
stos
decl
mov
gs
dec
out
ret
add
xlat
stos
movsb
jp
mov
push
mov
lret
adc
outsb
sbb
movb
stos
pop
mov
clc
aad
sub
lret
sbb
sbb
jge
or
xchg
mov
sub
inc
cs
enter
pop
dec
xchg
mov
jecxz
jle
leave
and
mov
cmc
je
mov
adc
add
mov
add
loopne
jb
out
jnp
pop
test
dec
add
xchg
mov
movsb
lret
pop
dec
out
pop
add
jo
adc
mov
add
xor
out
arpl
mov
inc
push
jbe
xchg
jmp
repnz
pop
repz
and
add
stos
mov
and
mov
iret
popa
inc
sub
add
dec
movsl
xor
pop
or
cwtl
jne
mov
xor
lcall
into
mov
jle
xchg
jecxz
ja
stos
pop
xchg
loopne
imul
push
das
leave
pop
push
mov
push
mov
jmp
scas
xchg
ret
aam
jp
sbb
or
test
adc
pop
lods
aad
inc
cld
stos
cld
pcmpgtd
daa
aaa
loope
jae
imul
and
test
sub
push
cs
sub
jmp
out
pusha
push
lods
repnz
aaa
cwtl
mov
pop
xchg
and
ret
lea
cmp
pop
dec
icebp
push
imul
add
jb
sbb
or
dec
out
cmp
leave
cs
jno
outsb
jae
bound
lock
xchg
mov
popf
mov
testb
pushf
mov
aad
shll
cmp
sbb
or
loope
andb
rcrl
in
mov
pop
das
mov
addr16
dec
xor
mov
mov
imul
pop
mov
or
jmp
or
shrl
xlat
outsb
sbb
outsl
aad
push
adc
pop
and
out
aam
sbb
js
inc
adc
das
daa
pusha
test
mov
andb
jns
es
push
jl
or
popf
loop
sti
xchg
fwait
nop
popf
inc
sub
inc
xor
test
add
cmp
js
push
cmp
movsl
mov
test
jl
lods
mov
jg
sub
test
clc
or
leave
addb
adc
mov
lods
ficoml
jmp
out
lods
cwtl
dec
fbstp
int
inc
or
insb
add
push
inc
jl
adc
in
fmulp
jle
dec
jbe
mov
inc
rcl
ds
and
mov
mov
aaa
add
shlb
and
hlt
mov
push
jne
testb
sub
ret
sub
or
mov
mov
fimuls
cmp
pop
xchg
popf
xor
xchg
and
call
fisttpl
scas
pop
cmp
icebp
xlat
xchg
dec
pop
leave
gs
pushf
inc
xchg
enter
in
mov
cli
ret
hlt
lock
enter
fs
jae
pushf
repz
dec
cltd
mov
fisubl
inc
ljmp
int
ja
sar
sub
xorb
pop
mov
into
mov
mov
jmp
adc
mov
xchg
rcrb
and
push
out
pop
dec
pop
sbb
aam
movsb
mov
ret
or
xchg
pop
jbe
push
add
xchg
sbb
mov
loope
push
jp
imull
dec
cs
int3
movsl
fdivp
xchg
fistl
push
inc
mov
and
mov
cmp
dec
mov
jbe
jp
arpl
push
sub
test
test
dec
call
fs
jbe
jmp
int3
loop
or
push
aad
mov
sbb
popa
aaa
or
out
out
mov
ss
loopne
pop
mov
add
xchg
xor
or
xor
mov
les
cmpsb
mov
test
or
mov
sbb
je,pn
xor
stc
aad
xchg
arpl
pop
or
lahf
test
jae
repnz
hlt
or
adc
xchg
pushl
pop
shrl
stos
les
dec
jb
jmp
faddl
stc
and
icebp
fldenv
addr16
sub
add
add
dec
pop
lahf
test
push
fldt
out
test
lahf
or
icebp
dec
push
xchg
imul
scas
test
out
test
xor
fstl
push
lods
sbb
xchg
lret
testl
icebp
push
xchg
push
fistl
and
insb
or
pop
lahf
jl
sahf
push
push
lcall
dec
loop
and
jge
mov
dec
leave
push
push
add
jnp
mov
or
lock
sub
das
fsub
cmp
pop
sub
dec
lods
jbe
inc
loope
cs
lcall
jae
xor
inc
mov
xchg
pop
sub
pop
fsubrs
dec
cld
pop
jo
cmpsb
rol
xor
int3
push
es
xchg
cmc
in
or
pop
sar
fsubs
and
adc
cmp
fmull
jo
jl
shll
cwtl
mov
inc
push
aam
int
cmc
frstpm(287
rorl
push
ljmp
inc
pop
add
xlat
int3
ljmp
pop
sub
mov
jb
mov
cmp
daa
imul
stc
ret
add
aaa
cmp
sub
mov
pop
pop
int
mov
shr
int
lock
push
xchg
pop
mov
xchg
mov
pushf
adc
enter
sub
enter
sbb
das
inc
add
sbb
pop
mov
cmpsb
movsb
push
aad
lods
mov
pop
xchg
sbb
movsb
mov
inc
cmp
pop
mov
adcb
jne
cmp
jno
pop
rcrb
or
repnz
mov
testl
imul
and
xchg
ficoml
cmp
out
xor
pop
test
cmc
mov
push
jno
popa
mov
xor
cld
sbb
mov
jmp
es
cmc
inc
lahf
into
lahf
mov
les
add
or
jno
sub
sub
cli
arpl
movsb
jns
out
mov
or
or
pop
out
jb
xchg
call
jae
push
mov
fs
or
scas
pop
sbb
pop
inc
fadd
mov
sub
jbe
aam
bswap
mov
inc
ja
pop
xor
shll
dec
and
lret
or
jmp
in
cltd
int
fs
hlt
xlat
jbe
gs
mov
mov
repnz
push
add
popa
sub
out
ja
out
inc
hlt
das
sarl
movsb
lods
lretw
enter
pop
ror
sti
xlat
dec
xor
jmp
add
cmpb
dec
or
aaa
mov
test
jmp
dec
sub
xor
ja
movsb
cmpsl
and
ss
psadbw
jb
dec
ret
cwtl
divb
scas
xlat
lret
adc
sahf
or
dec
lcall
out
mov
push
outsb
mov
repz
lret
addb
out
push
sub
cld
ret
pop
push
lock
lds
mov
addl
shll
sahf
mov
pop
out
sti
or
ljmp
imul
lods
mov
push
shll
add
cmp
adc
ret
cwtl
out
cmpb
stc
pusha
jae
inc
or
mov
daa
dec
jno
movsb
fsubp
mov
shll
test
sub
mov
loopne
in
mov
xchg
jl
shlb
jecxz
and
mov
sub
fldcw
mov
ret
push
sbb
in
decb
and
or
mov
sub
pop
aas
movsb
mov
lds
adc
cld
aas
inc
push
cli
xor
movsl
mov
sbb
lahf
fstp
inc
jns
test
popa
xor
rcl
in
repnz
pop
adcl
inc
fnsave
cmp
sub
mov
cmp
call
sub
mov
dec
push
filds
cmp
xor
pushf
out
mov
mov
rcll
adc
dec
adcl
lret
xchg
or
mov
push
pop
cmc
shl
mov
cmp
pop
jae
xchg
cmpsb
pop
je
enter
fdivrs
ss
sahf
stos
movsb
js
pop
or
push
xchg
ror
out
aad
mov
and
enter
mulb
dec
pop
pop
push
adc
loopne
mov
jle
insl
mov
es
movl
mov
cmp
lods
insl
leave
adc
cmc
cmp
pushf
orb
xlat
mov
in
mov
add
adc
jne
sbb
mov
fstpt
xchg
add
imul
fldcw
test
xchg
or
hlt
es
mov
inc
sub
cli
daa
jecxz
sbb
aam
enter
in
rclb
dec
mov
jo,pt
pop
enter
mov
test
sbb
fwait
mov
push
pushl
dec
jns
jbe
enter
addr16
fcompl
xor
jg
cmpb
xchg
mov
adc
je
gs
xchg
pop
popf
inc
lret
adc
fmul
out
jns
add
jmp
inc
add
cmc
dec
adc
mov
lret
lcall
adc
pop
sbb
sub
push
pusha
test
sti
pop
lock
movsl
flds
or
pop
sbb
sub
addr16
ljmp
lret
daa
mov
mov
mov
insb
mov
rcl
adcb
jle
xchg
add
xor
mov
out
push
aaa
cmp
sbb
xchg
mov
imul
mov
test
sub
and
push
in
sahf
out
sub
test
sub
ss
sbb
xchg
xor
and
lar
addr16
pop
or
sub
leave
push
mov
fld
shll
sahf
jmp
aad
mov
jno
in
jno
and
jno
out
sbb
cmp
mov
cld
lds
sub
lock
imul
push
call
jl
sub
and
cmp
dec
bound
hlt
and
daa
or
cmpsl
adc
jmp
mov
lods
inc
sbb
xor
nop
and
add
push
xchg
scas
out
pop
cld
leave
rol
loop
movsl
lret
icebp
pop
sub
rolb
mov
sbb
push
jle
popa
push
ljmp
ret
cmpsl
and
dec
lods
mov
xor
ds
xchg
sbb
pushf
sbb
mov
lods
mov
clc
daa
adc
mov
call
cmp
mov
push
cmp
ficoms
push
adc
daa
mov
lea
pop
lcall
in
cmp
push
jns
ljmp
push
push
test
sbb
jge
fstpt
add
cli
jbe
aaa
lods
cmpl
fs
xchg
fnsave
mov
mov
dec
xor
lret
push
cli
fstpl
or
out
jmp
daa
in
xchg
jecxz
cld
int3
cltd
dec
aaa
loopne
call
xchg
xor
pop
fs
scas
pop
xchg
dec
xchg
mov
lock
ljmp
adc
inc
mov
sbb
push
cmp
adc
adc
dec
jl
sub
fdivs
cmp
and
jl
inc
jmp
sarb
inc
lret
add
push
lcall
or
out
jae
xchg
push
addr16
sti
out
imul
mov
cmc
sub
push
or
sbb
cmp
dec
sti
ret
xchg
lock
cmp
sbb
sbb
dec
or
repnz
fwait
ds
roll
fs
jno
mov
mov
add
xchg
push
call
stos
jmp
fisttpll
pop
jae
fmull
sbb
outsl
jns
or
cmpsb
ja
sbb
add
sbb
jno
dec
xchg
ljmp
adc
jbe
adc
sub
js
add
adc
sbb
jmp
pushf
aas
insb
inc
mov
insb
adcl
cli
icebp
fisubs
jo
scas
mov
sarl
cmc
jl
mov
and
icebp
out
xor
dec
dec
push
xchg
fnstsw
inc
stos
add
sti
aad
push
cmp
pop
or
sbb
bound
dec
dec
adc
ds
xchg
ds
jle
ret
leave
movsl
mov
cs
and
add
or
fcoms
lret
pop
notl
iret
mov
xor
pop
or
in
xor
cmp
or
push
sub
jno
mov
pusha
test
lret
fstps
out
sti
xor
sub
in
cmp
sub
mov
movsb
cmpsb
lret
add
push
js
loope
push
pop
inc
inc
nop
cmp
mov
std
mov
in
out
outsb
hlt
xchg
mov
daa
sub
repz
cmp
push
or
pop
pushf
ret
mov
lret
loope
out
ljmpw
adc
add
mov
mov
into
xchg
dec
lods
push
jmp
or
push
outsb
cmpsb
dec
pop
add
loop
sbb
push
bound
das
dec
xchg
clc
cs
mov
mov
sub
notl
jbe
lods
xchg
and
int3
ret
cmp
sbb
cmp
jmp
xchg
cld
pop
mov
xchg
lods
push
sbb
mov
mov
sbb
sub
addb
cmc
dec
push
hlt
std
rep
scas
icebp
test
in
push
sti
cmp
inc
cmpsl
xor
ret
mov
cmpl
lds
and
imul
aam
mov
rcr
xor
xchg
icebp
and
addr16
pop
or
jno
cmp
mov
lds
push
cmc
or
and
scas
ljmp
daa
gs
sub
pop
mov
push
sarb
fisubs
inc
pop
movsl
sub
mov
lea
dec
jmp
xchg
cmp
xor
es
push
ror
inc
imulb
inc
ret
and
loop
outsb
xchg
xchg
xchg
sahf
subps
sub
mov
mov
mov
pop
sbb
add
sbb
icebp
xchg
inc
fildll
mov
lock
aad
pop
mov
mov
xchg
xchg
in
popa
jnp
arpl
jae
andl
fwait
pop
rorl
int3
dec
add
iret
pop
nop
xchg
test
lea
mov
mov
jns
icebp
xor
in
mov
enter
repnz
mov
out
jbe
sbb
test
repz
js
pop
mov
sub
pusha
popa
daa
loope
add
pop
mov
dec
jnp
cmp
mov
pop
or
mov
sbb
rcrl
xchg
fisubrl
test
inc
fs
movsl
pop
andb
rcl
movsl
mov
mov
push
ja
sahf
lcall
jmp
push
sbb
and
mov
jne
scas
xchg
sub
clc
mov
pop
insb
fs
loope
cli
mov
lds
sbb
testl
pop
fidivl
lahf
in
pushf
push
push
xchg
imul
jno
push
add
test
and
pop
mov
fcomp
jae
or
fsubrl
and
lods
mulb
inc
jmp
out
or
jge
xor
sbb
sub
and
sbb
cmp
sbb
stos
test
movsb
mov
orb
adc
xchg
sahf
adc
lret
ljmp
adc
lods
mov
cmp
xchg
xchg
add
fiadds
popf
je
adc
xchg
je
sbb
inc
mov
cmp
loope
hlt
aaa
lock
movsb
jecxz
pop
stos
jl
sti
and
push
cmp
sti
dec
push
pop
mov
sahf
xlat
arpl
cwtl
popf
repnz
sub
adc
pop
lds
or
ffreep
mov
add
mov
inc
cmp
pop
pop
sti
add
xor
enter
js
test
sar
gs
push
jp
in
inc
xor
test
push
ret
and
sub
hlt
inc
cs
push
and
scas
mov
xor
pop
inc
jno
sub
inc
stc
cmp
pop
and
cltd
sbb
sub
mov
xchg
jo
mov
xor
loope
or
push
mov
pop
or
push
hlt
mov
mov
mov
stos
or
stos
or
dec
mov
push
mov
cmpsl
ljmp
cmpsb
mov
nop
xchg
repnz
enter
loop
xchg
mov
repz
pusha
in
adc
xor
repnz
xchg
insb
add
pop
push
adc
and
insb
pop
dec
sbb
int
rcll
repnz
fbstp
cmc
loope
dec
addl
cmpsb
test
xor
mov
add
mov
lahf
hlt
xorl
mov
popa
loopne
ret
pop
dec
es
jno
pop
rclb
das
sbb
insb
sub
and
xor
lcall
push
add
add
xchg
adcl
mov
out
jo
push
or
out
xchg
jne
fldl
xchg
stc
pop
in
outsb
popa
mov
mov
bound
push
adcl
mov
test
test
or
sbb
shll
imul
rclb
fiaddl
push
scas
icebp
imul
movb
or
ret
mov
push
mov
movsl
pop
lret
and
repnz
cmpsb
sub
rorl
pop
push
adc
fistpl
xor
mov
sahf
dec
jecxz
adc
xlat
bound
cmp
mov
mov
mov
or
iret
scas
sahf
test
xor
or
hlt
sub
cmp
pop
jl
test
mov
sub
cld
xchg
call
add
or
dec
xchg
or
adc
push
lret
sbb
mov
sarb
cmc
dec
imul
movsl
cmp
adc
inc
ret
dec
lods
add
ds
pop
aas
push
clc
sti
pop
popa
adc
stos
stos
mov
xchg
jecxz
arpl
mov
mov
mov
jg
fisttpll
push
int3
ljmp
outsl
sub
jbe
xor
mov
pusha
adc
inc
jae
mov
and
mov
xor
add
orb
mov
and
cmp
cmpsb
and
sub
add
loop
push
push
aaa
adc
mov
cmp
or
add
lock
dec
push
and
xchg
out
ret
push
call
outsl
dec
shll
mov
fnstsw
adc
lret
push
fwait
cmpsb
adc
js
lahf
sahf
mov
in
jb
xchg
xor
sub
int3
sbb
and
decl
shlb
ficoms
arpl
mov
pop
add
popa
jnp
push
dec
xchg
fidivrl
hlt
lods
lret
xor
popa
data16
jno
jb
adc
lcall
xchg
out
lret
jb
sbb
mov
or
testb
decb
sbb
cs
inc
fcmovb
dec
xchg
lcall
out
sbb
fisubrs
aad
jae
and
sub
fiaddl
scas
cmp
xor
mov
xor
dec
push
movsb
clc
push
inc
sub
lcall
push
sub
and
cmp
jmp
and
lds
shll
and
ret
in
lods
push
pusha
push
cmp
xor
popf
addl
fwait
xorl
jo
data16
and
cmp
aaa
cmp
adc
add
out
stc
inc
dec
sbbl
pop
pushf
lahf
sub
icebp
in
sub
stc
adc
add
dec
mov
mov
clc
pop
icebp
enter
cmp
std
xchg
out
sub
enter
and
mov
out
xchg
mov
jmp
push
mov
inc
mov
addr16
fnstsw
adc
or
mov
push
daa
icebp
ja
aad
fnstsw
insl
dec
in
or
stc
adc
cli
xor
adc
inc
cli
test
lea
inc
mov
out
int
xor
cld
sbb
outsl
in
and
jns
sub
mov
jnp
popl
pop
push
jecxz
jbe
mov
stc
repnz
insb
xorl
out
sbb
adc
sahf
jns
push
lahf
jl
divb
icebp
add
xchg
stos
outsl
movsl
and
loope
rcrl
push
xchg
jbe
in
in
test
or
imul
sbb
loope
sbbb
je
movsb
pop
mov
jmp
jns
mov
push
inc
mov
and
mov
or
pavgb
cmpl
cmp
fisttps
stc
xchg
pusha
and
mov
cmovnp
push
call
push
stc
das
xchg
xor
add
dec
dec
mov
xchg
sub
gs
push
cld
push
insb
lock
arpl
sbb
and
sub
iret
lds
push
scas
adc
pop
or
int3
mov
add
add
cmp
sahf
movsb
push
enter
push
cmpsl
mov
push
add
aaa
pop
xchg
cmp
mov
dec
cmc
cltd
xchg
jmp
lret
fists
aaa
pop
icebp
mov
ret
inc
iret
adc
pop
loop
or
cs
fwait
in
sbb
pop
xchg
inc
popa
jle
push
add
imul
stos
fs
aaa
popf
outsb
or
inc
cmpsb
jp
push
jae
jmp
sub
pop
leave
icebp
test
adc
divl
push
push
add
dec
into
lds
sub
clc
dec
mov
sub
jecxz
xor
xor
cltd
stos
xchg
lret
enter
out
adc
inc
imul
jecxz
xor
sub
and
hlt
sahf
xchg
js
jmp
inc
sbb
jae
and
sahf
aas
int
xchg
mov
xchg
sbb
mov
sbb
test
ficomps
imulb
mov
dec
lahf
mov
fisubrl
bound
std
bound
jg
arpl
push
fistpl
xor
mov
clc
rorb
imul
mov
and
mov
jnp
push
sarb
subb
in
and
jbe
dec
int
sub
add
dec
pop
cmp
sub
shrb
int
sbb
fwait
sbb
sub
mov
or
mov
mov
test
das
popf
push
andl
out
lahf
sub
leave
mov
loopne
test
add
jne
dec
push
jno
and
mov
ja
mov
jbe
adc
pop
bound
in
in
insb
aaa
or
inc
fisubrl
add
xor
push
cmp
lret
outsl
pop
inc
std
loopne
jge
jle
mov
lods
xor
fsubs
mov
xchg
fstpl
ds
inc
xchg
xchg
push
and
and
mov
popa
lret
loopne
jg
stc
jb
nop
mov
and
pop
dec
and
pushf
sbb
xchg
test
add
mov
movl
jecxz
xchg
sar
icebp
sbb
hlt
aas
fisubs
push
sub
adc
xor
xor
xchg
mov
add
cmp
adc
adc
lods
out
cld
or
fsubrs
dec
fimuls
push
mov
sbb
incl
sbb
clc
js
mov
pop
jnp
cwtl
std
fwait
and
sub
mov
jmp
lods
xor
adc
push
hlt
jno
cltd
adc
dec
incl
ljmp
fisttps
mov
fbld
jno
inc
ffree
jbe
call
mov
push
jno
push
ljmp
lock
lea
neg
xchg
mov
push
cmpl
xor
sti
icebp
cwtl
fidivs
jnp
pop
sbb
daa
adc
and
cmp
hlt
jne
pop
lcall
xchg
push
adc
fists
popf
cmp
jecxz
sbb
push
push
dec
jge
add
test
pop
add
bound
shll
adc
les
ret
std
sarl
mov
xor
pop
or
xor
popa
int3
mov
inc
call
push
dec
rcrl
shll
gs
jle
cmpsb
adc
or
arpl
ss
push
and
insb
inc
in
push
mulb
sbb
push
push
cmc
adc
pop
add
or
and
shll
xchg
orps
mov
aam
loope
or
lock
nop
inc
cmp
sbb
jp
adc
pop
test
je
xchg
loopne
repz
xchg
sbb
aas
pusha
bound
pop
sbb
sahf
movsl
frstor
lea
int3
mov
jb
imul
mov
lock
add
pop
test
sbb
and
adc
cltd
bound
imul
cmp
addl
inc
cli
stos
dec
or
inc
enter
test
sbb
out
mov
into
arpl
fwait
jno
stos
inc
xchg
push
push
jecxz
lcall
aad
push
daa
and
fisubs
pop
dec
jle
cs
sub
std
les
or
int3
add
sbb
add
push
xor
xor
push
or
dec
adc
out
mov
jge
add
aas
enter
cmp
ja
pop
jp
mov
clc
sbb
inc
test
ja
movsb
inc
out
lods
fsubrp
jbe
leave
add
inc
mov
shr
xchg
es
mulb
jnp
and
fcoml
loop
nop
lret
jnp
ja
jae
xor
or
mov
xor
test
or
data16
mov
cwtl
xchg
pop
sbb
mov
fimull
loope
xor
test
ss
dec
jg
mov
fsubr
pushf
mov
out
out
ja
sbb
test
sbbb
ds
sub
repnz
dec
dec
popf
pop
inc
pop
imul
and
add
in
xchg
shll
movsb
arpl
mov
xchg
adc
push
adcb
mov
shll
mov
idivl
or
sbb
mov
mov
sub
pop
mov
andb
xchg
xchg
add
or
pop
pop
cltd
mov
ljmp
imul
adc
jmp
and
loope
inc
jno
ds
js
mov
nop
test
nop
or
jae
add
lock
adc
mov
sub
xchg
sbb
sbbb
cmp
push
lret
lea
sub
jb
jecxz
imul
mov
inc
jae
push
and
jge
test
out
mov
and
sbb
je
adc
cmc
incl
pop
out
insb
into
mov
int3
movsl
stos
mov
adc
inc
xor
mov
outsl
dec
pop
insl
mov
enter
pop
xlat
sbb
inc
notl
fstp
sbb
push
clc
push
cmp
mov
push
outsb
lods
and
insb
inc
xchg
jb
jge
dec
fs
pop
mov
jnp
outsb
popf
icebp
mov
cmp
jno
ds
pop
adc
jg
dec
cmpsb
popf
or
xchg
cmpb
dec
shld
inc
adc
fwait
jbe
js
js
outsl
test
sbb
add
jbe
idivb
xor
repnz
jmp
in
sub
int3
bound
lock
adc
pop
or
or
outsl
sbb
dec
arpl
ja
mov
leave
inc
aaa
push
pop
outsl
lea
push
movsb
pop
clc
mov
cmc
dec
frndint
into
imul
mov
int3
adc
adc
jmp
inc
mov
ja
int3
mov
mov
sbb
jecxz
pop
iret
mov
dec
cmpsb
into
lret
sahf
sub
cli
xchg
sbb
movsb
pop
test
mov
aaa
pop
movsl
ja
ja
jnp
fidivl
out
ljmp
mov
stos
lcall
in
sbb
out
pop
ret
mov
lock
les
mov
fstps
mov
cmp
sub
pop
mov
into
add
leave
out
or
andb
mov
jge
repnz
adcb
xchg
cmpsb
inc
ret
cli
sub
fadds
xchg
leave
mov
addr16
sbb
pushf
push
daa
push
dec
and
and
loope
cmc
daa
fadds
mov
mov
lcall
jne
decl
dec
shrb
scas
dec
adc
std
outsb
iret
lock
sti
lret
outsb
aaa
xor
inc
insb
jge
jb
mov
pop
rclb
inc
xchg
icebp
ja
cs
mov
cmp
imul
jne
movsb
mov
push
dec
ja
mov
pop
or
add
pop
pop
inc
daa
sub
cltd
pop
loope
mov
inc
sub
mov
adc
push
fnstcw
out
pop
adc
imul
mov
and
sbb
jl
xchg
jae
cmp
gs
ljmp
mov
repnz
xor
cs
int3
add
xchg
xor
hlt
jns
jp
pop
pop
jb
test
dec
dec
push
mov
cmp
mov
gs
xchg
jnp
pop
out
lahf
xor
sbb
outsb
push
scas
and
dec
mov
push
adc
lret
push
fldl
xchg
pusha
mov
inc
sub
imul
inc
lret
mov
pop
push
adc
aam
adc
fcmovb
je
sub
icebp
pop
into
push
ret
int3
sub
push
and
add
add
inc
jns
adc
mov
mov
ds
pop
xor
daa
cwtl
sbb
sti
inc
ljmp
cmp
cli
shrl
arpl
adc
gs
popf
xlat
decb
sbb
orb
xor
jge
insl
call
cmpsb
decb
cmp
fdivl
and
pop
push
xchg
push
rclb
cmpsb
in
dec
pop
icebp
std
in
mov
pop
nop
int
mov
call
lret
popa
adc
pop
repz
fscale
dec
cmpsl
lahf
cwtl
push
xchg
pop
push
ss
repz
jbe
stos
scas
pop
push
and
mov
les
fsubrs
mov
and
inc
data16
dec
mov
setno
or
test
mov
decl
test
ret
lds
sbb
int3
or
cltd
and
cmp
sti
mov
jo
dec
add
mov
lods
mov
mov
inc
pop
movsl
xchg
sub
pushf
pop
xlat
xchg
movsb
and
add
push
int
movsl
and
ret
push
fists
fistl
adc
mov
test
mov
pop
data16
aam
int
movsl
jo
adc
std
lcall
into
adc
pop
xchg
insb
pop
adc
push
pop
add
or
sbb
and
cld
pop
cmc
pop
aam
jle
lds
icebp
outsl
push
add
mov
dec
mov
jne
inc
xor
fisubs
movsb
push
pop
js
jg
mov
scas
mov
lea
dec
xchg
mov
imul
pop
pop
inc
pop
xor
mov
popl
pmuludq
insl
sub
push
lea
aaa
in
mov
jb
sub
outsl
je
subl
loop
test
notl
jp
mov
jae
jle
and
sub
pop
pop
pop
push
fldcw
iret
aaa
jne
xchg
and
aad
push
jg
in
jmp
sub
mov
xchg
cld
testl
lods
movsl
rolb
lcall
sbb
mov
imul
sub
lret
insl
fnstcw
das
lret
lods
cmp
add
test
ss
mov
pop
push
jl
xchg
out
push
push
sbb
repz
sbb
push
adc
fnstcw
cwtl
ds
cs
in
mov
movsb
mov
jnp
xor
test
pop
lahf
and
lods
add
lock
sbb
shrb
xchg
inc
jb
sti
pop
jge
jg
int3
lock
push
inc
or
sbb
mov
dec
stos
aaa
mov
cwtl
mov
popf
adc
lahf
gs
jg
je
push
sbb
hlt
cmp
stos
mov
hlt
gs
lods
sub
jo
stc
inc
fcompl
push
and
rcll
xchg
dec
mov
addr16
scas
or
insb
add
in
and
inc
push
insl
jl
popf
mov
push
xchg
and
fisttps
xor
mov
mov
add
inc
mov
icebp
orb
mov
inc
pop
jo
pop
movsl
pop
jne
xchg
imul
dec
scas
lret
data16
xchg
mov
cmc
cs
fistpl
das
data16
jae
sub
pop
mov
jnp
jmp
and
cmp
fcmovu
testl
outsb
dec
ja
into
dec
mov
mov
test
mov
movsb
fmuls
sbb
stos
fisubs
add
mov
sub
jge
cld
mov
pop
jno
mov
inc
sahf
push
add
inc
jno
xchg
jo
cmp
adc
notb
lahf
dec
test
xchg
leave
sub
push
mov
scas
outsb
test
or
pop
cmpsl
xchg
aam
mov
fcomp
inc
or
xchg
leave
and
jnp
popf
shr
inc
mov
xchg
push
rclb
dec
out
sub
push
dec
mov
out
push
neg
adc
and
stos
and
test
dec
mov
out
ds
push
cmp
pop
pop
and
add
cmpsb
push
push
mov
sbb
mov
out
adc
movb
cmp
add
sbb
pop
stc
xor
jmp
rcrl
test
or
inc
push
sub
in
out
popl
cwtl
int
xchg
dec
pop
jle
jg
fistpll
push
cmp
out
cmp
ja
enter
push
xchg
dec
loopne
pop
fistl
inc
clc
or
push
pusha
cmp
mov
lock
imul
sarl
ss
ljmp
jno
lock
push
xor
stos
ds
stc
pop
push
aas
and
subl
scas
mov
outsl
faddp
cmp
mov
outsl
push
add
nop
push
call
push
into
std
outsl
ljmp
sti
jno
add
movsb
dec
lea
lahf
adc
pop
jo
mov
mov
push
insb
dec
cmp
pop
flds
es
push
imul
mov
sub
adc
xchg
jge
inc
mov
sbb
or
pop
cli
das
stos
cmp
jge
movl
xor
xchg
jnp
xchg
loopne
pop
cmp
add
add
data16
scas
xchg
and
pop
sub
xchg
loopne
cld
in
dec
popf
and
cmpl
xorb
cmp
cmp
mov
shlb
jl
add
sarl
ret
loop
data16
int
and
in
mov
inc
iret
test
add
and
jle
add
int3
mov
cmp
cli
jae
mov
bound
test
and
loopne
dec
inc
add
add
xor
add
inc
and
pop
cmpsl
mov
stos
fimuls
pusha
aaa
xor
addr16
mov
lahf
cld
mov
mov
dec
add
dec
and
mov
inc
mov
jo
adc
sub
stc
test
pop
das
and
or
lcall
inc
fcompl
ret
pop
inc
mov
out
xchg
cmp
outsb
data16
pop
lock
sub
in
stos
dec
add
and
jns
lock
outsb
mov
mov
xor
andb
push
push
sbb
mov
push
sbb
sub
xlat
pop
pop
dec
cld
pop
mov
xchg
mov
fadds
pop
pushf
ret
iret
mov
mov
mov
jb
pop
push
test
icebp
and
rolb
lret
lods
cmp
jge
mov
push
call
xchg
dec
push
in
loope
jmp
jae
hlt
or
clc
sub
pop
jne
es
jo
cli
push
pop
mov
or
lds
sbb
cwtl
mov
out
adc
jbe
dec
push
in
adc
or
daa
mov
test
nop
push
sahf
xchg
push
insl
sbb
in
mov
mov
je
push
mov
add
imull
in
jecxz
test
sbb
cmp
jnp
pusha
inc
icebp
push
ss
dec
mov
lods
cmp
loope
leave
pop
test
movsl
test
pop
test
xlat
leave
test
fwait
push
subl
xchg
imul
mov
scas
imul
aam
or
gs
sbbl
mov
lds
adc
in
cmp
inc
sarl
loop
es
push
adc
sub
jne
fistpll
fnstcw
mov
roll
iret
inc
iret
into
add
cmp
fcmovnu
or
lods
inc
lock
cs
mov
imul
je
ret
pop
insb
in
rorb
stos
push
mov
scas
fs
dec
jne
mov
sbb
jp
add
cmp
cltd
xor
out
test
ret
mov
xchg
popf
fnstcw
out
pop
pop
popa
adc
jg
idivl
je
inc
mov
insb
ret
jmp
sub
sbb
dec
call
or
jg
sub
sar
inc
fcmove
insl
and
pop
repnz
mov
sbb
inc
pop
sbb
sub
repnz
movsl
xchg
mov
inc
or
mov
pop
dec
jmp
push
and
ss
xchg
outsl
mov
push
pop
stos
cli
inc
mov
enter
xor
add
popa
cli
mov
cmp
push
jns
push
mov
pop
push
dec
addl
mov
and
mov
xor
adc
xlat
sar
pop
mov
stc
sub
out
sub
mov
adc
fnstcw
sub
popa
fwait
lods
cmpsl
mov
out
cltd
jmp
cmp
jb
pop
mov
ret
xchg
cmc
sbb
mov
ret
or
addr16
mov
arpl
dec
jne
pop
xchg
daa
hlt
mov
cli
loope
or
xchg
pop
inc
imul
out
cmp
les
inc
mov
dec
mov
jnp
inc
inc
sbb
inc
lock
cld
je
adcl
jp
push
cmc
pop
mov
cmpl
adc
add
or
push
pop
sbb
loop
test
call
xchg
mov
jne
mov
lret
jnp
jo
popf
inc
jnp
dec
ret
inc
fistpl
xchg
ljmp
pop
mov
shlb
int
mov
cmp
movsb
mov
jmp
cmp
movsl
fwait
popa
cmp
pop
fsubrs
sbb
enter
cmp
push
hlt
or
pop
loop
xchg
push
pop
and
sub
leave
add
mov
and
jmp
mov
push
inc
add
iret
out
xchg
pop
movsb
ror
into
insl
or
pop
jle
and
pop
nop
cmc
sti
xchg
mov
push
leave
loopne
fdivrl
xlat
pop
int
loopne
bound
xchg
fdivrs
add
ss
jle
pop
sahf
fmul
mov
ja
jecxz
xor
int3
push
xchg
insl
out
mov
gs
cmp
into
push
popa
cmp
dec
cmp
in
stos
jno
or
fsubl
push
scas
cmpsb
and
sub
rcll
call
add
shl
adc
adc
mov
push
dec
pop
sub
cli
outsl
imul
pop
add
add
addr16
pop
mov
add
enter
aad
ljmp
jne
pop
loop
scas
xchg
mov
sub
pop
xchg
push
sub
sbb
mov
or
adc
dec
ret
cmpsl
and
js
xchg
or
sub
int
pop
outsl
xchg
xor
je
mov
cmc
cli
in
mov
jmp
add
aam
inc
cmpsb
aam
lcall
jecxz
xchg
loopne
pusha
leave
jmp
and
cmc
fwait
and
icebp
call
inc
popa
imul
or
xor
int3
push
and
ret
icebp
notb
fldl
mov
push
push
cltd
mov
ljmp
nop
aas
mov
es
push
adc
fimull
jp
loop
outsb
and
insb
call
imul
mov
lret
fistl
mov
aam
dec
jl
push
cwtl
cltd
mov
loope
addl
ja
call
aad
jb
insb
mov
aad
mov
lret
stc
movsl
out
xor
fcmovbe
arpl
push
sub
push
sahf
push
addr16
sbb
jl
add
jb
inc
nop
ja
push
lds
mov
andl
xchg
and
mov
xor
lret
xchg
pushf
lcall
fldcw
or
pop
mov
das
sbb
jmp
pop
inc
insb
fsubl
jae
mov
inc
add
adc
out
aaa
cs
pop
jp
pushl
es
or
scas
shr
and
xor
adcl
loop
push
lods
aam
inc
inc
lock
mov
mov
add
push
jo
mov
lea
fsubrl
push
test
mov
cmp
jne
cmpsl
bound
test
inc
std
jns
xor
out
gs
idivb
pop
into
adc
fisubrl
ds
dec
or
sbb
or
or
cmp
mov
sub
jp
adc
or
mov
out
mulb
test
out
scas
inc
push
mov
loope,pn
cmp
outsl
pop
arpl
call
call
sub
test
and
shll
imul
loopne
pop
jmp
mov
mov
daa
mov
call
jecxz
and
out
or
stos
add
dec
test
popa
lods
add
adc
ret
sub
mov
xorl
xor
movsb
push
mov
xchg
loope
cmp
popa
xchg
pushl
mov
sbb
sub
push
add
adc
xchg
sub
inc
pop
add
dec
fstpt
cmp
fisttpll
das
inc
out
add
int3
icebp
clc
dec
aas
scas
jg
sub
clc
repnz
rcll
ss
xchg
sbb
stc
int3
cs
mov
fwait
scas
inc
mov
je
lock
fnstenv
push
jno
or
fldl2e
test
test
fsts
test
in
push
fdivs
mov
loope
imulb
or
insl
pop
adc
orb
sahf
pop
shrb
jmp
and
pusha
in
jle
lret
sbb
sub
add
mov
xor
aas
pop
mov
sbb
lds
mov
cmp
jl
hlt
in
cmp
mov
cmc
jns
in
sbb
addr16
ljmp
sbb
es
and
and
call
aas
jl
pop
je
mov
inc
sbb
fisttps
js
icebp
mov
ss
jecxz
test
faddl
push
jne
pushf
stos
das
repnz
cmp
mov
cmp
out
test
and
jge
cmpsl
insl
outsb
bound
push
mov
pop
sub
movsb
stos
stos
out
faddl
les
shlb
adc
sqrtps
mov
pop
leave
xchg
bound
fmulp
sahf
push
int
push
or
lds
mov
fsubrl
imul
arpl
and
repz
sti
xchg
sub
adc
xor
gs
pop
mov
mov
dec
roll
mov
js
insb
fsubrs
pusha
arpl
xchg
or
add
mov
rcrl
cmpb
push
shl
sbb
inc
jno
lods
mov
inc
cmp
scas
inc
xor
ss
lret
imul
mov
loop
leave
mov
jle
xchg
cmc
addr16
rcr
and
pop
pop
push
movsl
adc
inc
rolb
sbb
addr16
sub
rcl
mov
mov
fisubrl
mov
add
lret
push
orb
iret
adc
jb
stc
dec
mov
lcall
lds
aaa
sub
sub
inc
jnp
mov
cltd
mov
dec
inc
in
mul
mov
js
outsb
clc
jle
loopne
or
ret
enter
shlb
pop
popa
mov
xchg
faddp
in
lea
jmp
mov
xchg
lock
imul
addr16
jnp
jnp
push
iret
outsb
lods
pushf
daa
xchg
mov
out
rcrb
popa
pop
cltd
push
mov
dec
xchg
xor
aam
cmp
lods
add
mov
aaa
fcmovnbe
rcll
or
subb
in
int3
pushf
movsb
ret
andl
jae
fidivs
in
stc
sahf
test
add
les
inc
pop
add
mov
xchg
or
adc
into
bound
xchg
cmc
incb
fs
dec
mov
push
adcb
dec
jnp
mov
cmp
dec
xor
fisubs
icebp
adc
popa
cwtl
jae
iret
cmp
cmp
adc
popa
push
sbb
adc
orb
outsb
imul
inc
mov
xchg
adc
bnd
je
sbb
xchg
lahf
ss
fidivrl
push
mov
ja
cmp
add
jae
bound
mov
sub
inc
sbb
mov
repnz
mov
push
add
cmc
sub
test
or
xchg
outsl
add
xor
lods
jne
inc
jg
fcomps
mov
fimull
ret
add
test
fisttps
iret
adc
and
frstor
frstor
in
inc
mov
add
mov
cwtl
and
cltd
lea
xorb
add
les
shl
and
sub
data16
or
testl
jle
gs
addl
aaa
inc
dec
inc
mov
or
inc
bound
in
jo
push
pop
xchg
pop
mov
call
clc
xor
fstl
pop
mov
imul
xchg
push
push
int3
and
psrlq
enter
jp
jo
push
dec
mov
dec
sbbb
sub
xor
adc
in
push
fdiv
inc
mov
xchg
add
inc
jmp
mov
add
push
xchg
cli
orb
notb
std
jp
dec
sub
or
pop
and
test
jnp
cmp
and
out
mov
test
sub
mov
pushf
test
and
insb
cmp
shl
push
out
pusha
or
and
testb
adc
aaa
negb
inc
lock
hlt
clc
ds
mov
jo
inc
jae
rolb
pop
lds
dec
js
imul
and
adc
push
pop
dec
adc
sbb
and
icebp
or
in
dec
lods
cmp
movsl
cmp
mov
push
pop
push
inc
inc
sarl
pop
negl
and
pop
inc
sbb
xchg
jbe
sti
arpl
dec
mov
mov
cmp
jg
push
xchg
mov
sbb
dec
inc
ss
xchg
aas
jae
es
aam
jle
mov
sub
xchg
xor
mov
xor
xchg
jns
mov
jle
jge
scas
cli
jle
mov
push
pop
ret
xor
xchg
xchg
outsb
clc
sub
cs
les
arpl
jns
seto
add
js
xor
or
cmp
rcrb
in
scas
dec
cmp
lahf
jb
mov
jns
mov
and
clc
sbb
dec
mov
dec
and
jmp
jb
mov
or
rcrb
movsl
cli
xor
in
test
test
icebp
add
lcall
push
adc
gs
mov
sar
cs
jns
je
scas
dec
and
dec
pop
mov
inc
xchg
xchg
xchg
sbb
pop
into
push
in
frstor
repz
push
repnz
addr16
and
inc
cmp
into
sbb
sub
jo
in
dec
stc
scas
sub
ret
test
aaa
aas
inc
divb
push
mov
insb
push
mov
test
pop
adcl
add
imul
pushf
cmp
add
push
add
or
jg
movsb
lret
repnz
fs
cmpl
dec
pop
ja
mov
jno
push
jmp
leave
add
ss
xor
push
sub
fsubp
cli
jge
dec
cmp
test
and
sub
mov
cld
push
test
sub
and
sbb
data16
and
repnz
push
or
pop
iret
mov
xor
mov
loope
addr16
and
in
loop
fistps
insb
dec
adc
push
dec
xor
mov
dec
or
fdivrs
jg
xchg
cmp
push
mov
cmp
iret
je
adc
inc
mov
sub
fdiv
sub
inc
mov
cltd
pop
pop
lahf
dec
sub
push
movb
cmpsl
mov
sub
inc
inc
notb
and
call
aam
cwtl
add
in
xor
or
xor
push
pop
lea
lcall
jae
cwtl
and
push
shll
push
or
push
inc
test
lods
aad
roll
adc
xor
cmp
push
jecxz
loope
push
cmpsb
add
es
fidivl
jp
leave
mov
add
in
sbbb
adc
iret
clc
cmp
movsl
jmp
scas
xlat
scas
fstpt
popf
add
push
jno
out
push
cld
imul
rorb
add
dec
sarl
movb
into
dec
out
sbbl
mov
shlb
loop
pop
push
or
push
sub
mov
xchg
add
pop
cli
add
fiaddl
sarl
and
enter
rcrb
sbb
xchg
in
mov
adc
lds
cmp
es
icebp
frstor
mull
scas
data16
sub
cmp
jmp
or
arpl
inc
dec
dec
sbb
xchg
enter
mov
mov
inc
push
daa
insb
out
pusha
pusha
ja
ljmp
mov
imul
and
mov
dec
lcall
mov
pop
les
fsubl
leave
enter
pop
xor
stos
pop
out
inc
or
mov
insl
fidivl
shrb
pop
js
inc
pop
das
jbe
ficoms
push
bound
hlt
xchg
mov
or
icebp
cmp
adc
fcompl
movsb
cmp
shlb
jl
aam
and
add
ljmp
mov
into
inc
cmpl
ss
out
in
fdivrs
mov
test
jae
stos
movsl
xchg
into
int3
lret
inc
movsb
jle
push
sbb
sarl
xor
inc
xchg
sbb
stos
push
sahf
std
add
inc
in
xchg
cmpsl
cwtl
int3
xchg
repz
adc
int3
outsl
adc
iret
in
jge
lds
add
mov
cmp
test
hlt
pop
xlat
and
push
jecxz
sub
push
js
mov
mov
aam
cld
inc
add
pop
ret
sub
popf
les
mov
outsl
sub
pop
xchg
and
test
repz
std
and
shrb
xchg
xor
clc
insb
sbb
ret
dec
fdivl
and
lahf
pop
lahf
imulb
push
std
mov
adcb
dec
jle
arpl
jne
mov
sbb
mov
mov
jmp
pusha
sbb
lret
addr16
lahf
xchg
in
addr16
add
sbb
mov
adc
enter
movsb
aam
std
daa
mov
jecxz
push
cld
push
xorl
addb
cmp
mov
outsl
repz
push
fisubrl
test
dec
outsb
in
xchg
xor
xchg
pop
popa
mov
je
scas
sbb
jmp
mov
je
xchg
mov
pusha
cwtl
ret
lods
lods
add
cmpsb
nop
mov
lret
inc
ficoml
lret
push
add
test
add
mov
sbb
sbb
lret
mov
daa
dec
sahf
mov
inc
cmp
ret
sub
ret
pop
or
bound
and
aas
cmp
mov
jp
sbb
out
dec
ja
fstps
into
and
push
sbbl
mov
push
xor
sub
mov
cmp
repnz
pop
and
cmp
push
push
dec
ss
popf
sbb
push
popf
jmp
out
bound
jg
or
out
xlat
cmp
imull
movsl
sbb
or
jp
int
mov
cmc
pop
scas
jge
pop
xchg
push
mov
repnz
jne
or
xchg
fiadds
push
in
add
dec
aas
xchg
push
cmc
lods
jo
add
mov
imul
push
or
fidivrs
inc
xor
sbb
mov
jne
insb
add
push
pop
in
add
push
sbb
sbb
and
addr16
shll
pop
lods
sbb
jmp
into
mov
adcb
inc
pushf
inc
int3
jne
cmp
mov
je
pop
cs
psadbw
cwtl
clc
imul
in
pop
lods
into
mov
test
push
mov
nop
dec
fnstcw
cmp
nop
aas
dec
mov
aas
add
lods
or
divl
lret
add
mov
sub
fmuls
mov
out
into
divb
add
add
in
add
inc
gs
pop
imulb
mov
bt
rcrl
arpl
int
xchg
cmp
out
hlt
jb
inc
jecxz
dec
hlt
jnp
inc
rol
mov
loop
pushf
or
xchg
mov
push
shlb
repz
pop
xchg
mov
lods
loop
xchg
lea
jp
in
icebp
nop
mov
jnp
addl
jle
aad
and
xor
daa
stos
pextrw
scas
fstl
inc
stc
aad
add
inc
call
sbb
mov
fldl
test
cmpsl
push
pusha
mov
sub
mov
jmp
jno
jbe
mov
xchg
sub
inc
and
testl
add
rcll
pop
sbbb
mov
mov
les
pop
notb
popa
or
or
movsb
loope
es
dec
loopne
adc
es
cmpsl
mov
mov
sub
pop
mov
loop
jae
bound
aas
arpl
outsl
cmc
cmpsb
in
mov
lods
xor
xchg
mov
cli
je
lds
sub
xchg
jle
divb
push
lahf
cld
mov
cmp
addr16
insl
jo
mov
sub
lods
enter
jmp
xchg
mov
shll
cmpsl
adc
mov
lret
mov
push
js
insb
and
jb
icebp
test
mov
in
cmp
inc
jns
jo
cmpsl
push
inc
loope
in
pop
imul
sarl
cli
in
rcrb
jmp
adc
repz
and
sbb
leave
sub
cmp
xchg
pusha
pop
daa
hlt
imul
test
mov
or
sub
sub
gs
in
xchg
cmp
sbb
lods
xchg
mov
lea
mov
mov
cs
jne
and
in
movsl
push
roll
lods
insl
add
cmp
fcomps
ret
fisubl
out
mov
clc
sub
fwait
lahf
ret
mov
jne
mov
mov
aam
and
ret
or
xor
xchg
fldl
shll
scas
add
sbb
test
cwtl
sub
ret
push
out
push
inc
sub
adc
and
lods
adc
mov
fdivr
stos
dec
add
cmpsb
cmpb
nop
adcl
sbb
cmp
xlat
in
mull
sar
ja
daa
sbb
cmpsl
and
in
sub
repz
push
int3
rcr
outsb
insl
sbb
add
out
push
mov
pop
jae
lahf
ja
inc
call
or
mov
jns
mov
xor
ret
mov
pop
adc
adc
push
add
cmp
mov
cmpsl
loopne
cmpsl
or
lahf
ds
aas
out
loopne
cmp
push
test
add
push
inc
pop
popa
lcall
scas
cmp
aaa
add
xchg
xor
pop
pop
into
sahf
mov
mov
out
push
add
sbb
xlat
add
jns
shll
dec
imul
popf
lret
inc
sub
cs
xlat
int
adc
movsl
leave
or
subb
lret
scas
rorl
lahf
jecxz
cmp
jbe
adc
push
or
sub
jae
pop
adc
sbb
push
xchg
decl
and
imul
jns
repz
es
cmp
imul
repnz
rol
mov
xchg
pop
ljmp
aas
cmpsl
add
push
xchg
or
mov
dec
pop
cld
aad
mov
adc
fiaddl
mov
push
mov
movsb
clc
push
mov
outsl
mov
and
cmp
cs
xchg
popa
in
ss
cltd
push
aaa
jbe
lret
out
cmp
adc
ret
sbb
mov
incl
xor
imul
clc
add
add
cmp
inc
repz
push
stos
mov
je
dec
call
jns
addr16
push
mov
pusha
pop
mov
sbb
cmp
jns
ror
pop
in
insb
inc
mov
outsb
jo
mov
inc
mov
ficomps
bound
rclb
jge
pop
stos
lcall
push
push
dec
fiaddl
sets
sbb
mov
mov
push
jg
add
aaa
push
mov
or
cmp
daa
or
xchg
int3
push
adc
jle
hlt
fimull
mov
mov
lret
xor
fucomip
js
xchg
cmp
mov
push
mov
jns
adc
sbb
adc
data16
add
faddl
mov
je
divb
mov
sahf
stos
aam
pop
xor
jno
add
push
cmp
sub
dec
sub
jmp
mov
add
movsb
add
jb
cmp
dec
lea
enter
shlb
mov
cmpsb
fnsave
inc
xor
imul
call
sbb
push
inc
or
test
fs
imul
into
dec
xchg
cmp
decl
add
inc
sub
mov
jecxz
subl
test
mov
jge
mov
jb
outsb
stos
or
or
dec
mov
pop
xor
lods
mov
dec
pop
mov
adc
repz
sbb
sbb
mov
adc
xor
es
or
cmpsl
imul
add
dec
jns
aad
stos
stc
pop
or
mov
in
jnp
adc
out
adc
pop
push
cmpsl
sub
dec
adc
in
rcl
pop
xorl
push
jmp
pop
lahf
cmpsb
cmpsl
mov
test
mov
push
dec
mov
inc
sub
lods
jg
mov
and
dec
dec
cmp
pop
sbb
mov
fdivl
cwtl
sbb
test
push
pusha
and
inc
push
pusha
cmp
jp
int3
lret
xchg
mov
push
aaa
fsubr
leave
cmp
or
sub
dec
mulb
fbld
sub
ss
in
push
pop
stc
jl
add
icebp
leave
add
push
test
adc
hlt
and
outsb
gs
add
mov
jns
scas
or
out
cmp
sti
sub
in
cmp
idivb
mov
sbb
lahf
mov
xlat
and
rcll
daa
sti
jmp
push
push
and
aaa
repnz
ss
jo
lock
shrl
pop
nop
les
add
cmpsb
add
inc
jnp
push
pop
push
ret
mov
stos
lahf
and
shr
daa
sbb
inc
ficompl
or
shlb
out
test
adc
adc
and
fidivl
je
pop
cmpsb
xchg
sub
rol
pop
or
in
push
jecxz
cmp
push
mov
out
cmp
push
xor
out
stos
call
mov
xor
je
push
es
xlat
sbb
mov
aas
fwait
inc
mov
push
rol
andl
iret
lock
jmp
jo
cmp
pusha
aad
sbb
bound
xor
adc
mov
xor
sti
loope
inc
in
push
clc
lods
scas
dec
jnp
adc
cli
stc
fwait
clc
or
fs
inc
cmp
mov
sti
mov
push
add
dec
dec
roll
inc
push
mov
mov
enter
dec
add
dec
out
sub
fmulp
test
dec
dec
int3
or
negl
daa
xchg
inc
test
jne
jl
xchg
push
scas
outsl
imul
mov
cmp
push
call
lea
and
ss
mov
gs
and
mov
shrl
mov
bound
mov
jp
stc
js
and
jecxz
roll
xchg
stos
or
out
insb
sbb
xchg
outsl
mov
xchg
mov
hlt
cmpsl
cwtl
scas
ja
mov
test
dec
dec
fnsave
mov
sub
cmc
rol
cmp
cli
mov
mov
jno
and
jge
add
sub
pop
xchg
jae
in
adc
outsb
fidivrl
jl
aaa
stos
lock
lods
test
push
xor
lret
cmp
pop
scas
add
out
cmp
push
sub
dec
xchg
sbb
and
std
idivb
xchg
mov
sbb
loop
sub
inc
mov
adc
inc
data16
enter
mov
outsb
pop
icebp
imul
out
insb
jno
je
pop
add
fwait
das
jg
mov
cmp
pushf
xlat
ret
outsl
test
clc
dec
rcrb
loopne
add
stos
fldcw
pop
test
es
rclb
cmp
push
mov
xor
fwait
add
into
push
andps
ret
jb
jg
rcrl
pop
mov
mov
pushf
and
or
or
sub
jne
push
push
dec
xor
and
ja
dec
fldenv
not
mov
cmp
cmp
fcomi
jl
or
mov
push
mov
mov
insl
loopne
inc
pushf
out
js
adc
test
cmp
cs
std
test
push
push
sarl
and
out
adc
jg
cmp
lret
lods
mov
xchg
ja
pop
or
dec
aad
jb
stos
sarl
ja
loopne
mov
push
jg
lea
xor
jmp
pop
mov
push
sub
xchg
sub
test
inc
leave
nop
stos
aas
sbb
add
mov
lds
xor
push
add
aad
xor
scas
mov
je
cmpsb
add
mov
sahf
jbe
pop
aas
mov
mov
outsl
cmc
cmp
lock
pusha
mov
inc
push
gs
fistpl
imul
dec
in
int3
pop
cmpsl
sbb
rorb
or
cmpsl
icebp
mov
inc
inc
add
fistpll
mov
loop
cmp
lds
iret
pop
push
push
add
mov
lahf
fcoms
pop
adc
ds
cld
nop
arpl
xchg
popa
gs
push
js
jnp
inc
sub
adc
daa
pushf
pop
dec
cmp
xor
cmp
stos
pop
ret
frstor
pop
scas
mov
movsl
and
cmp
xchg
push
and
fisttpl
ljmp
loope
and
mov
mov
jns
jne
mov
in
fldenv
repnz
aas
stos
frstor
imul
cmp
call
cmp
adc
jnp
ret
inc
sbb
pop
inc
push
push
loopne
std
popf
test
cmp
cmp
shl
into
movsb
pop
and
cmpsb
loop
aam
jecxz
sbb
xor
sbb
push
daa
xchg
mov
mov
add
test
push
bound
xor
insl
xchg
xchg
fstl
mov
pop
push
pop
dec
in
mov
add
shlb
push
test
xchg
mov
push
push
inc
push
adc
pop
dec
rorb
inc
cmp
inc
or
sbb
jmp
repz
pop
test
sub
add
sub
in
push
add
fiaddl
mov
fdivr
in
dec
cmp
add
mov
push
sub
ja
test
out
mov
and
loope
es
xor
ret
jne
sbb
mov
xchg
in
cmpl
fistpll
clc
out
pusha
sti
pop
lock
pop
int3
or
ficomps
insb
imul
aaa
mov
mov
xchg
lods
scas
sub
xchg
aam
incb
sbb
loope
inc
js
add
or
mov
xchg
xchg
mov
inc
test
shl
cld
adc
or
sbb
inc
inc
test
mov
movsb
std
dec
insb
cmpb
aaa
inc
sbb
push
inc
fisubrs
ss
xlat
jp
mov
xchg
add
push
fdivrs
mov
xor
outsl
insl
push
xchg
xor
mov
lahf
adc
roll
lret
je
stos
and
mov
loop
fldt
push
cmc
popa
aas
xor
xchg
sub
filds
dec
aaa
rclb
inc
fsubrs
setge
add
xlat
sbb
fwait
add
xchg
movsb
fnstcw
push
mov
sahf
mov
lds
clc
pusha
jb
aad
dec
xchg
stos
jae
cmovno
test
in
imul
pop
repnz
xchg
mov
add
pcmpgtw
in
sub
shr
sbb
cmp
insl
dec
pop
xchg
mov
add
add
push
fstpt
mov
ror
rolb
rcl
in
sbb
scas
sti
pop
or
lret
and
iret
outsl
aas
xacquire
sbb
lea
xlat
inc
jle
and
lcall
push
test
cmp
iret
int3
leave
cmc
xor
lods
mov
jp
dec
clc
std
cs
dec
test
dec
shlb
cvttps2pi
iret
inc
in
and
fstpt
xchg
push
push
fistl
inc
dec
js
push
in
pop
inc
mov
add
jp
loope
cmpsb
pop
mov
dec
aas
hlt
stos
fwait
aad
lock
fsub
outsl
mov
bound
lret
ror
lods
xor
in
fildll
sbb
lret
insl
nop
sub
xchg
sbb
cwtl
sub
jmp
lock
mov
cli
mov
sbb
pop
dec
add
in
mov
jbe
sbb
mov
pusha
pop
test
sbb
iret
pop
mov
xchg
lock
popf
xchg
pop
stos
mov
push
pushf
pop
call
sahf
mov
lcall
xchg
sti
mov
or
mov
xchg
imull
or
inc
jmp
xor
lret
and
push
call
pop
pop
adc
fisubl
inc
rcll
mov
xchg
xchg
mul
in
aad
lret
push
daa
les
xchg
fcoml
aas
loop
fiadds
js
or
and
xchg
mov
mov
cmp
pop
and
add
mov
fsincos
pop
bound
into
cmp
xor
arpl
sbb
cmpb
add
or
inc
xchg
mov
add
mov
cmp
sbb
cmp
jo
fstl
divps
pop
dec
mov
addr16
ret
outsl
jle
pop
in
sbb
jp
or
push
mov
cmp
mov
lcall
std
add
stos
jnp
dec
sbb
lods
xchg
sbb
mov
iret
and
aam
jle
inc
imul
pop
dec
aad
xchg
das
dec
add
push
cmp
sub
ljmp
arpl
int
mov
cmp
fisttpll
leave
loope
mov
cmp
and
and
das
insb
dec
jb
sbb
xor
dec
in
pop
adc
mov
insb
hlt
in
add
mov
clc
ja
popf
jge
aam
sub
lods
push
out
sub
push
into
leave
xor
xor
test
sub
xor
pop
out
pop
jno
ret
in
xchg
out
sahf
xchg
adc
enter
jbe
cmpl
sub
adc
fidivs
jecxz
push
stc
fnstcw
inc
or
jge
mov
mov
aad
jge
not
sbb
adc
ljmp
jecxz
es
inc
addl
clc
out
in
push
mov
subl
push
ret
adc
neg
imul
sbb
loope
sbbl
test
cltd
mov
cmp
std
ficomps
cwtl
adc
pop
mov
xchg
add
jo
push
add
jae
ja
pop
mov
hlt
in
jne
or
cmp
pop
int3
fs
pop
bound
scas
cmpsl
push
mov
push
fldt
pop
leave
sti
pop
orb
or
les
mov
xor
cmp
ffreep
sbb
xor
adc
imulb
fwait
xlat
in
xlat
repnz
adc
out
sub
testb
pop
lea
enter
pop
cmp
test
es
jne
fstpl
xchg
inc
mov
repz
add
mov
stos
divl
or
mov
lods
loop
xor
cmpsb
jmp
ljmp
pop
into
sahf
add
lods
pop
int
subl
jle
out
repnz
push
je
inc
cltd
xchg
dec
test
xor
jp
loop
pop
pop
out
pop
xor
shrl
adc
mov
mov
icebp
add
pushf
dec
dec
adc
repnz
movsb
push
sub
adc
adc
pop
pop
jl
stos
lcall
ljmp
punpcklwd
fbld
dec
cmp
sbb
aas
cmpsl
in
pop
leave
aaa
lret
mov
xchg
mov
xchg
jne
stos
in
xor
test
dec
mov
sub
es
sub
add
dec
daa
adc
aas
and
dec
lds
lods
adc
sbb
unpcklps
repz
sub
paddb
sbb
test
pop
push
mov
and
into
rcrl
ss
fcmovnb
mov
xor
fnsave
mov
pop
andl
cmpsl
int3
gs
push
or
jns
cmpsl
test
sub
mov
sbb
or
hlt
xchg
cmp
xchg
mov
mov
jb
sub
jb
aad
push
fadds
pushf
xchg
mov
test
in
cmp
lods
insl
adc
mov
dec
mov
cmpl
and
fisubrl
addr16
mov
mov
mov
fdiv
fs
icebp
mov
jecxz
inc
xchg
dec
pop
popf
push
leave
xchg
push
add
xor
cmp
ret
xor
pop
xchg
mov
popf
sahf
in
jns
fidivl
cmpsl
xchg
lock
adc
adc
jae
push
sbb
aad
out
mov
test
in
cmp
mov
mov
repnz
dec
adc
mov
addb
adcl
test
std
int
mov
in
mov
into
jp
dec
dec
cwtl
mov
mov
and
sub
out
ljmp
mov
cmc
test
jle
ja
hlt
fucom
push
test
incb
lds
adc
sbb
pop
push
loop
push
mov
jns
fldenv
sarb
ss
lret
push
shl
pop
xor
dec
repz
cwtl
cmp
das
daa
outsl
xchg
xchg
mov
add
adc
xor
jg
push
sub
inc
xor
fistps
xor
jb
in
push
mov
iret
iret
sub
pushw
sbb
cmp
cmp
and
inc
les
push
xchg
inc
pop
mov
aad
je
cmc
das
scas
decl
pop
les
aad
or
sahf
mov
cmpsb
push
inc
ljmp
std
loop
and
xor
push
shrb
xlat
sub
jnp
xor
sub
in
mov
xor
xor
push
sbb
xlat
lret
adc
pop
filds
insb
add
inc
ja
dec
sub
int
lods
rcrb
sbb
jae
jp
pop
xor
popf
bound
cmpsb
cmpb
or
and
xor
hlt
in
cmp
cld
cmpsb
push
push
stc
mov
ret
fistl
pop
orb
gs
in
loope
cwtl
jmp
and
fs
jns
cmovp
jle
adcb
fsubrl
cmpsb
frstor
ss
adc
pop
xor
fsts
repz
pop
lahf
inc
pop
cmp
or
aas
cmp
mov
cmpsl
cmp
mov
loopne
xchg
or
out
sub
hlt
dec
dec
cmp
sub
xchg
add
cmp
push
test
mov
or
xchg
test
rolb
fldenv
mov
aas
mov
xor
mov
incb
arpl
dec
inc
int3
fwait
shll
repnz
cmp
dec
test
movsb
fwait
and
push
pop
inc
or
mov
imul
fdivr
fwait
xchg
adc
and
xor
pop
adc
stos
lock
imul
inc
jge
dec
sbb
lea
out
cmp
and
pop
arpl
xchg
and
pop
xor
clc
lret
sub
xor
fwait
cmpsl
dec
stos
sahf
and
pop
mov
fstps
jecxz
push
sub
mov
js
lds
sub
ja
dec
sbb
int
cmp
pop
lea
lock
rorb
scas
adc
sub
jecxz
and
or
sub
jp
xchg
insb
jne
outsb
loop
fcmovne
lds
nop
mov
aad
cmp
push
sub
sbb
add
pop
mov
loop
mov
push
ljmp
scas
jecxz
cmpsl
sbb
xchg
mov
xchg
push
cli
pop
jg
push
inc
mov
lea
adc
sbb
mov
lahf
lea
pop
in
stos
adc
je
push
fstpt
ds
inc
ss
test
in
es
push
rorl
enter
pop
pop
dec
dec
jno
lret
das
jb
movsb
ret
inc
test
fsts
test
lret
adc
nop
out
push
decl
inc
ror
push
popf
jo
popf
loope
out
testl
jne
js
sti
mov
dec
mov
lret
in
mov
nop
lahf
or
pop
jl
icebp
inc
dec
push
lahf
push
fidivs
gs
icebp
dec
ret
pop
push
cltd
std
sti
cmpsl
cltd
mov
inc
mov
pop
sti
xor
les
clc
ret
adc
add
xor
repnz
mov
jnp
popa
xorl
jno
jmp
fnstenv
test
ljmp
pop
cmp
and
mov
or
cltd
xor
xor
mov
jp
pop
call
adc
xchg
in
jle
mov
in
mov
cld
mov
clc
into
adc
cwtl
in
xchg
push
shrb
mov
dec
adc
jne
fs
decl
out
sahf
or
pushf
push
mov
jnp
jmp
jne
repz
mov
repz
inc
adc
push
cwtl
adc
mov
out
xor
mov
stos
pop
cli
dec
rorb
popf
dec
repz
shll
out
mov
xchg
aas
pop
mov
pushf
pop
push
jo
clc
cs
int
jns
mov
dec
dec
push
ret
mov
jecxz
das
mov
push
jae
test
fdivs
and
fisubs
jne
movb
cld
mov
fisubrs
cmpsl
xor
popf
out
dec
cmp
inc
cmp
adc
aas
cmp
lahf
sti
cmp
pop
and
mov
fsts
jae
jp
test
icebp
xor
cmc
dec
mov
sahf
negb
jo
mov
test
ret
imulb
adc
push
cmpsb
cld
neg
leave
js
jno
cmpsl
fmuls
push
pop
xchg
movsl
sub
shrb
bound
mov
divl
pushf
out
mov
in
mov
ret
cmp
inc
and
or
das
std
xor
fisubl
dec
int3
int
sub
scas
mov
mov
stc
fbstp
in
daa
lcall
adc
and
cmpsl
cli
into
and
lock
and
shll
push
sbb
mov
ficoms
into
jmp
cmp
push
jecxz
push
sbb
sub
pop
nop
jns
ret
add
sub
jae
xor
imul
dec
sub
add
jmp
outsl
sbb
add
push
xlat
cmpsl
jp
cmpsb
iret
dec
cmp
mov
xor
adc
mov
mov
int
xchg
addr16
sub
mov
sub
inc
hlt
xchg
mov
fmuls
mov
add
outsl
add
dec
sbb
xor
add
fsubrs
xchg
pop
daa
xorl
lea
xor
lret
push
jecxz
jb
idivl
mov
imul
jecxz
es
pop
cmp
cmp
mov
sub
pusha
cmp
fsin
test
hlt
stos
fistps
mov
aam
cmpsl
add
fcmovnb
test
adc
loope
pusha
shlb
data16
fs
push
xlat
movsb
or
push
fldt
add
pcmpgtd
and
or
arpl
cmpsl
cli
pop
dec
mov
pmulhw
in
add
sub
inc
pop
stos
leave
arpl
ret
mov
andl
push
mov
push
xchg
scas
aaa
mov
mov
mov
test
mov
popf
mov
test
cltd
pop
pop
dec
mov
push
aam
xor
dec
mov
cmp
mov
stc
ja
push
lret
pop
pop
push
dec
add
int
test
repz
push
sub
mov
push
add
push
mov
into
xor
pop
mov
mov
scas
lea
mov
sbb
mov
out
adc
adc
cmp
inc
out
jg
lret
add
stc
sbb
fstps
mov
test
pop
sahf
int3
xchg
dec
test
addr16
push
aaa
mov
mov
ss
mov
jae
rcrl
subl
dec
leave
xchg
mov
popa
cmp
mov
cs
sub
daa
adc
adc
testb
sbb
pop
mov
xor
inc
adc
xchg
and
test
imul
mov
call
out
jge
popf
dec
mov
movsl
scas
sub
mov
add
cmp
gs
jns
mov
inc
ds
or
enter
adcl
test
aam
and
js
push
jb
sti
nop
lret
sub
lret
leave
imul
notl
adc
movsl
dec
repnz
pop
adc
jmp
inc
xor
mov
ss
arpl
mov
xor
cmpsl
cld
rolb
xor
xchg
pop
js
mov
add
mov
mov
ja
jae
push
fiadds
fstps
int3
xor
fmuls
mov
frstpm(287
rclb
pop
mov
fisttpll
and
inc
xchg
std
fucomp
and
loop
or
pop
adcb
push
repnz
adc
xor
and
int
outsb
inc
cld
and
fcoml
xchg
add
cmp
rcll
enter
sbb
outsb
jge
in
or
cmp
pop
imul
nop
shlb
in
mov
andl
out
push
xor
enter
pop
sti
mov
mov
dec
cltd
mov
loope
cld
adcb
sbb
inc
push
pop
mov
push
popf
les
shrl
xchg
xor
ljmp
fistpll
shlb
mov
fdiv
pop
lds
lock
ljmp
xchg
mov
mov
int
sub
jae
enter
mov
xchg
neg
loopne
adc
xor
and
pop
das
mov
lcall
cmp
and
pop
les
sub
sbb
imul
sbbb
in
jmp
jnp
pop
mov
pop
mov
jge
daa
sub
add
pop
imul
xchg
mov
adc
adcb
fwait
daa
pop
inc
add
xchg
inc
xchg
push
decl
inc
mov
mov
dec
fsubl
push
xor
push
call
pop
dec
cmp
or
mov
xchg
push
sbb
mov
jnp
clc
mov
testb
push
aam
push
lock
fstps
dec
pop
adc
out
js
dec
lret
push
pop
cmpsb
ret
test
and
insl
mov
aaa
divb
pop
pop
out
dec
pop
dec
mov
push
repnz
es
cmpsl
sbb
sub
mulb
ds
inc
clc
arpl
dec
push
jge
mov
cmp
nop
cmpsl
scas
jno
mov
pusha
es
pop
das
add
mov
adc
fmuls
mov
mov
sub
lea
dec
out
cmp
add
xor
mov
lcall
jnp
shrl
outsb
stos
push
jmp
fdivrl
bound
movl
and
test
movsb
mov
push
dec
or
sahf
and
sbb
fisttpll
sbb
jmp
fldt
movl
js
jle
adc
inc
add
in
mov
and
jns,pt
fdiv
xor
xchg
xchg
inc
lock
jg
scas
je
loope
outsl
mov
push
mov
jae
add
pop
mov
lods
dec
inc
pusha
lahf
push
out
pop
rcrl
jge
aam
mov
add
daa
xchg
pushf
loop
pop
xchg
inc
pop
push
xor
mov
xor
icebp
imul
fdivs
sub
adc
cmpb
and
lahf
sub
sti
pop
push
cs
sti
mov
mov
mov
popa
pop
xchg
outsl
xchg
es
xchg
push
in
jge
push
xor
insb
cmp
pop
xchg
daa
insl
lahf
pop
jmp
rol
rcr
out
inc
ljmp
sub
mov
jge
mov
mov
cmpsl
xchg
cmp
xchg
adc
mov
shll
call
sbb
repnz
xchg
test
add
insb
push
cltd
sub
scas
test
cwtl
fldcw
jbe
inc
imul
iret
mov
push
or
mov
cmp
out
es
and
mov
push
sbb
sub
scas
sub
in
fistps
psubb
sub
int
popa
push
or
sub
xor
xor
rclb
push
outsb
pusha
sbb
cmp
sub
pop
movsb
lods
aas
repnz
out
inc
push
movsl
sbb
lret
or
mov
loope
add
cld
pop
imul
mov
shr
and
jp
xacquire
dec
inc
into
into
push
or
cmp
xchg
mov
push
and
mov
ret
loopne
xchg
in
daa
push
hlt
lea
testb
sbb
in
inc
mov
xor
loopne
insl
movsl
or
lret
push
lret
and
pop
bound
dec
mov
pop
nop
loopne
enter
nop
test
mov
sti
scas
cmp
ret
popf
imull
xor
pop
popf
fwait
xor
inc
gs
push
xchg
fsubrp
jg
loope
out
jecxz
fldenv
imul
pop
push
dec
sub
out
jae
fnstenv
xchg
or
stos
adc
inc
int
movsb
int3
fadds
jbe
sub
lret
push
jg
loopne
xchg
sti
xchg
sbb
mov
adc
or
sbb
inc
and
lods
lea
inc
fiadds
add
rcrl
cmpsl
shr
xchg
or
cmc
push
sub
xor
pop
inc
mov
sub
hlt
out
mov
std
dec
ljmp
mov
mov
shr
sub
fmull
push
pop
scas
sbb
jo
jge
add
out
gs
aam
in
mov
dec
test
sbb
orb
int3
sbb
in
dec
ret
jbe
shr
callw
fsubrl
mov
cs
aaa
mov
into
pop
jbe
loopne
jmp
inc
cmp
push
jmp
addr16
dec
mov
xlat
cmp
xchg
clc
loopne
mov
lock
loope
xchg
iret
bound
out
pop
lock
sbb
jg
add
icebp
adc
in
cli
add
addr16
mov
mov
inc
and
dec
iret
push
inc
mov
fwait
mov
andb
jb
out
enter
nop
jmp
adcb
xchg
je
rorb
mov
mov
fstpl
cmp
mov
push
mov
xlat
lcall
and
adc
sbb
add
ret
mov
mov
out
dec
movsb
dec
add
mov
inc
hlt
cmpsl
and
or
test
rorb
adc
faddl
xchg
enter
repz
xor
imul
xor
push
dec
gs
push
push
pop
xlat
xchg
dec
mov
jae
adc
jg
cmp
jo
push
popa
mov
or
cmp
cwtl
add
xchg
push
jno
xor
xlat
push
sbb
add
add
mov
addb
sub
ficompl
je
lahf
cmpsl
fst
mov
jno
mov
cmpsb
popf
incl
fwait
pop
cmpsb
rorb
mov
mov
or
movsb
into
ja
nop
ss
jle
gs
mov
add
xor
pop
iret
jecxz
sbb
mov
insl
jbe
adc
mov
jb
outsl
lret
sub
adc
cli
sar
cmpsl
jbe
push
sub
mov
sbb
jge
jle
nop
add
mov
fsubrs
mov
pop
arpl
enter
pusha
push
int
out
test
divb
test
jge
or
outsl
and
int3
dec
icebp
movsb
dec
testl
popf
fldenv
push
rclb
jle
out
or
pop
push
pop
mov
push
push
xchg
cltd
mov
xlat
pop
popa
mull
jl
pop
push
test
in
jbe
pop
aas
hlt
add
ficoms
cwtl
imull
jp
mulb
pop
cltd
push
xchg
xchg
or
sbb
mov
xor
fists
sub
subl
mov
out
fucomip
call
sbb
and
or
add
lea
add
inc
dec
or
popf
outsl
test
and
push
lcall
push
fistpl
or
and
pop
stos
push
and
mov
xor
mov
mov
and
push
dec
jge
jb
sarl
adc
in
adc
add
stos
inc
in
dec
xor
js
in
inc
dec
insl
add
lahf
push
ljmp
cwtl
mov
in
dec
sub
pusha
mov
rcll
push
arpl
and
movsl
adc
fadds
or
testb
mov
es
mov
scas
inc
adc
dec
fwait
mov
mov
pop
and
inc
push
daa
xor
mov
out
orl
cli
and
mov
jl
arpl
pop
arpl
jmp
or
idiv
xlat
sub
ljmp
bound
sbb
mov
daa
mov
insl
pusha
insb
hlt
xor
mov
sti
sbb
scas
outsb
sti
and
add
push
sbb
cwtl
sarl
pop
inc
or
add
ret
cwtl
iret
in
mov
es
push
insb
mov
out
mov
pop
loop
add
xchg
addb
out
add
fwait
cmp
lock
mov
pusha
scas
mov
jle
inc
cmp
test
dec
adc
xor
aad
shrl
dec
leave
dec
mov
pop
insb
cmp
fsub
and
scas
cltd
sbb
dec
jge
inc
call
or
aam
ret
cmc
inc
lahf
push
xchg
pusha
out
xchg
inc
xor
aam
outsl
jne
gs
leave
icebp
inc
outsl
cmpsb
sbb
sti
sub
jg
inc
xchg
adc
orb
lret
lods
cmp
jg
andl
stos
xor
pop
sti
push
movsb
lcall
pop
stos
fistl
arpl
movsb
fs
lods
outsb
mov
xchg
scas
test
xor
jl
sub
or
add
rcll
push
sarb
out
sub
jne
cmpsl
push
xchg
adc
and
jbe
mov
lcall
mov
rolb
repz
sahf
aam
int3
inc
xchg
fsub
cmpsl
pop
stc
ss
mov
cli
lods
loopne
repnz
fbld
fnstcw
enter
cmpsb
sbb
pop
fwait
mov
cli
cltd
mov
ficompl
sub
or
iret
vdivsd
sbb
nop
jo
test
outsb
mov
lock
xchg
cmp
popa
cs
aad
adc
aad
mov
and
sub
mov
adc
sahf
std
insl
mov
fistpll
pop
popa
mov
and
push
insb
nop
lret
repnz
jge
or
arpl
adc
les
decl
or
lock
or
out
cwtl
mov
loop
push
mov
test
insb
xor
jmp
out
jae
mov
push
fwait
add
push
mov
call
dec
in
cmp
sbb
mov
test
popa
and
cltd
int
mov
push
add
das
xchg
scas
imul
shrb
ret
pop
xor
xchg
add
stos
and
hlt
jae
dec
mov
inc
adc
xchg
aam
cld
jb
pop
xchg
insl
jae
cmp
mov
mov
cmpsb
out
xor
xchg
xor
fbstp
cmc
sub
sbbb
adc
leave
pop
xchg
pop
sbb
mov
jnp
or
mov
lahf
jmp
popa
fdivrp
pushf
outsb
orb
les
mov
inc
cltd
or
pushf
out
push
xchg
mov
outsb
in
xchg
cmpsb
adc
cltd
push
jl
insb
repz
xchg
inc
outsl
cli
pop
iret
inc
imul
fwait
rcrb
hlt
jl
popa
jg
insl
aaa
sti
mov
das
adc
pop
mov
jbe
faddl
adc
sub
ror
mov
sbb
push
push
add
or
adc
outsl
mov
icebp
mov
stos
pop
pop
out
or
adc
sti
lods
and
sbb
stc
adc
aaa
hlt
sbb
jmp
insb
pop
xor
lock
xor
or
mov
sahf
push
jae
cmp
scas
or
push
pop
enter
cmp
push
mov
lods
sti
stos
jnp
fwait
jmp
stc
mov
in
loopne
orl
loopne
push
aas
scas
ja
dec
insl
insb
sbb
ljmp
loopne
je
push
dec
dec
repnz
mov
mov
lods
pop
lea
pop
and
dec
jmp
and
cmpb
pop
cld
pop
mov
xlat
dec
and
popa
mov
ss
push
and
push
cs
pop
and
cmp
insb
pop
dec
call
jp
pop
pop
mov
and
mov
loopne
pop
jg
lret
cmp
sbb
mov
xor
xor
cmpsb
lods
push
enter
loopne,pt
or
mov
mov
xchg
cwtl
adc
dec
sub
inc
fists
test
mov
outsl
pop
xchg
add
fs
je
and
insl
fwait
pop
movsl
and
popf
xor
lods
and
mov
and
lret
pop
mov
into
xor
arpl
adc
mov
xor
lret
pop
mov
aaa
pop
push
add
out
mov
dec
in
cltd
lahf
out
int3
movl
imul
mov
clc
ja
or
adc
jle
jno
xchg
aas
mov
add
adc
in
fiaddl
dec
push
jns
mov
sbb
mov
sub
fstpl
ljmp
xchg
mov
dec
sarl
das
mov
cwtl
rcll
int3
sbb
jg
imul
push
test
mov
jmp
fcoms
mov
pop
lock
mov
loope
jae
push
jae
mov
rcrb
cli
movsl
ret
je
pop
add
push
out
les
mov
pop
cmpsb
jne
cli
int3
jns
sbb
jmp
enter
sbbb
jl
into
jg
rcrl
push
pop
and
test
and
aam
dec
jge
sarl
pop
xchg
ja
pop
xchg
mov
leave
mov
push
mov
pop
mov
mov
inc
jo
jecxz
push
add
pop
stos
inc
aad
arpl
in
adc
aam
fbld
jo
add
jb
cmpl
test
pop
jo
jne
scas
mov
cld
pop
cmc
out
and
and
lea
adc
lds
loopne
mov
aad
xchg
hlt
mov
mov
lret
jg
push
addr16
xchg
in
jecxz
mov
shll
jns
sarl
mov
pop
int3
iret
daa
out
mov
push
push
or
inc
push
imul
or
fldcw
mov
or
paddb
mov
js
out
dec
mov
xlat
mov
mov
xchg
jl
mov
xor
mov
and
adc
lcall
int
lcall
out
jmp
pop
mov
xchg
ja
jb
xchg
adc
pushf
lea
xor
push
lods
outsb
sbb
add
imul
fs
addr16
sbb
cmc
and
mov
mov
mov
sbb
cmpsl
scas
mov
pop
sub
or
dec
leave
subl
or
fidivs
mov
cli
ss
das
fcoms
or
sub
out
lods
dec
push
cltd
sub
jle
mov
pop
pop
out
jg
push
push
adc
ret
daa
xchg
xor
sbb
test
push
and
sub
mov
shlb
out
inc
sbb
sbb
mov
in
inc
fisttpl
xchg
aad
mov
dec
rorl
cmpb
push
push
lcall
xor
cmp
mov
out
dec
xor
jnp
mov
push
leave
mov
or
mov
jbe
pop
mov
cmp
lea
hlt
inc
dec
push
or
pop
nop
outsl
inc
aas
addr16
cmc
sbb
cld
jbe
mov
arpl
cli
repz
pop
add
je
inc
cmpsb
lods
test
outsb
pusha
imul
std
cmpl
imul
enter
add
je
ffreep
lret
mov
sub
cmp
popa
ss
push
mov
popf
cltd
aaa
and
mov
ja
orl
jns
rol
icebp
xchg
adcl
dec
and
pop
mov
rclb
cld
dec
xor
add
inc
rorl
cltd
int
pop
lea
test
push
inc
in
mov
xor
nop
fiaddl
push
pop
sbbb
lods
outsl
mov
or
inc
test
sub
dec
sarb
xchg
xor
imul
in
aam
xchg
cli
and
and
dec
lock
testb
sbb
xlat
test
out
mov
jbe
in
mov
mov
fldl
sbb
mov
mull
mov
adc
push
cld
push
jae
inc
xchg
in
fsubrs
or
jne
test
pop
test
cmp
in
mov
cs
jg
sub
jne
aaa
inc
sbbb
decl
add
scas
cmp
sub
orl
cld
pop
js
aam
loopne
lods
enter
pop
lock
pop
out
fimuls
mov
sbb
mov
push
cmp
pushf
xor
das
pop
xchg
test
mov
outsl
imul
insb
add
inc
rorl
jp
cmp
inc
sbb
dec
fcoml
cmp
cli
mov
je
xchg
out
adc
xchg
xchg
ret
ret
je
out
adc
call
jne
pop
out
push
cmp
jmp
xor
stos
ds
jle
icebp
ljmp
pop
cmpsb
inc
cmp
push
lcall
loop
mov
imul
lds
rclb
inc
push
xchg
sbb
dec
mov
pusha
xlat
push
std
or
stos
inc
xor
les
adc
sbb
xlat
sub
mull
fucom
xor
mov
lahf
insb
icebp
lret
adc
push
push
sarl
int
dec
repz
inc
or
aad
rol
mov
adc
insl
sub
inc
fwait
push
pushf
cmp
in
sbb
jecxz
push
pop
js
adc
jo
mov
std
push
cli
mov
ret
testb
lds
loopne
and
rcrl
xor
ss
cmp
out
mov
add
pusha
push
das
cwtl
mov
cmpsb
and
adc
outsl
jnp
faddp
jns
out
pop
mov
notb
mov
call
sub
cmpsl
sub
stos
or
rorl
mov
mov
jb
outsb
and
and
jo
loope
fs
inc
por
cld
add
dec
out
add
inc
lret
lret
rorl
scas
push
mov
cmp
jo
mov
icebp
aam
pushf
mov
inc
sbbl
daa
mov
std
mov
pop
or
pop
xchg
push
jns
cld
cmp
xor
jp
push
xchg
loope
cmpsb
clc
cld
xchg
daa
lock
xchg
push
xchg
pop
xor
pop
js,pt
leave
push
into
lret
jge
sbb
xchg
cs
daa
pop
ficoml
loop
mov
inc
push
test
mov
adc
sub
clc
leave
jmp
out
fnstcw
adc
cltd
inc
imul
or
repz
jg
jecxz
ret
or
inc
popf
ds
pushf
or
add
sbb
sub
andl
inc
xor
outsl
ret
mov
sbb
pop
aad
pop
mov
adc
ret
add
inc
mov
push
cmp
cmpsl
bound
jae
inc
cmp
nop
push
mov
mov
inc
outsl
cmc
mov
test
insl
pop
xor
ret
outsl
mov
or
repz
gs
jns
inc
je
mov
xchg
jg
int
pop
push
jg
mov
popa
jno
hlt
loope
sbb
faddl
mov
pop
adc
mov
in
inc
lds
mov
in
fimull
cmp
test
into
sub
mov
movsl
dec
jb
mov
and
push
push
mov
push
fs
cwtl
lds
test
xchg
xchg
cmp
jmp
inc
jl
sbb
das
pop
test
mov
inc
pop
bound
movsb
mov
cli
cmpsb
hlt
ss
xchg
nop
or
ljmp
out
jno
xchg
clc
or
cmp
push
push
pop
rcrl
loop
outsb
add
pop
dec
movsb
aam
shr
fiadds
pop
scas
jns
insb
leave
call
cmpl
iret
insl
push
jg
mov
lods
sub
inc
iret
jno
xor
pop
jne
push
call
ljmp
loop
pop
add
leave
push
lds
gs
inc
jne
and
jge
fsubrs
lahf
dec
fidivs
cmp
cld
cmp
leave
je
shrb
jno
bound
inc
adc
xorl
jecxz
imul
inc
repnz
xchg
test
rorb
cltd
ljmp
push
inc
cltd
icebp
cltd
outsb
rorb
add
jo
push
mov
mov
scas
sahf
dec
add
xchg
xor
aaa
scas
or
pop
push
fbld
inc
push
and
rcrb
loope
mov
in
movsb
cld
into
stc
adc
insb
jecxz
lret
sbb
jae
push
icebp
aam
int
movb
js
dec
pop
sbb
lret
loop
movl
jp
push
dec
imul
lds
data16
out
imul
and
jae
mov
cwtl
cltd
ljmp
mov
cmpsb
test
rcr
into
inc
inc
out
rclb
pop
insl
aaa
mov
inc
dec
mov
out
shlb
mov
jle
sbb
mov
pop
jg
or
out
xchg
ds
ss
mov
inc
incb
lea
lcall
outsb
jecxz
mov
sbbl
and
and
mov
jecxz
paddusw
inc
lret
mov
xor
arpl
adc
fs
lret
xchg
ja
test
or
and
cs
mov
data16
jnp
mov
pop
je
lock
sub
mov
or
push
lods
mov
xchg
push
or
jl
sbb
out
jge
iret
and
cs
pop
hlt
cmc
mov
jns
cmp
jecxz
push
pop
xlat
in
xchg
sbb
mov
ja
jne
es
shl
es
mov
cmp
testl
pop
mov
data16
xchg
test
es
pop
roll
rcll
mov
jl
push
cmp
push
pop
hlt
add
xor
dec
mov
cltd
aas
clc
fucomp
repnz
aad
lret
dec
addr16
jecxz
mov
push
jnp
add
sbb
mov
inc
addb
xchg
push
push
out
setno
inc
lret
sti
jle
stos
inc
fidivrl
add
add
ljmp
rcrb
dec
test
inc
or
xchg
jmp
jns
scas
cs
mov
inc
sub
fcoml
xchg
popa
dec
mov
jp
mov
cmpsb
call
mov
push
xchg
xor
inc
or
insl
mov
xlat
mov
test
mov
sbb
push
xchg
mov
inc
cmp
fsubrs
cs
insl
cmpsb
repz
and
cmp
xchg
sbbb
les
add
shl
push
sbb
mov
movsb
loop
dec
not
fcompl
adc
cmp
cmp
fadd
stc
and
leave
cld
out
leave
add
mov
pop
sbb
dec
mov
and
mov
lret
and
cld
xor
adc
and
or
dec
js
lret
sbbl
pop
cmp
jns
or
lea
jge
push
adc
cs
pusha
cmpsw
push
mov
cmpsl
inc
mov
test
lods
repz
pusha
ss
stos
lods
fidivs
pushf
inc
inc
mov
jp
sub
xchg
aam
hlt
xor
jae
mov
addr16
popaw
adc
in
pop
push
std
jne
fs
daa
aas
movsb
loopne
clc
shl
xor
xor
push
mov
cli
cs
mov
jmp
cmp
mov
inc
mov
addr16
pop
adc
pop
cmp
push
das
xor
xchg
push
faddl
add
hlt
jns
mov
mov
xchg
mov
adc
out
push
mov
mov
add
push
jb
ja
add
mov
popa
cmp
inc
push
mulb
or
jp
fs
or
dec
int
mov
mov
inc
mov
or
jmp
fmull
mov
cmc
push
mov
cmpl
bound
cmp
loope
iret
adc
incb
dec
push
gs
or
cltd
iret
ja
sbb
mov
pop
in
push
push
aaa
cmp
fsts
fcmovnbe
inc
mov
mov
mov
cmpsl
inc
adc
xor
mov
xchg
fsubrl
cmp
mov
inc
lock
jo
enter
shll
dec
mov
repz
add
sti
outsl
rolb
or
push
push
pusha
and
ret
test
mov
orl
rcrl
in
in
mov
dec
ja
mov
pusha
call
hlt
cmp
ja
push
xchg
scas
ret
pop
adc
xchg
mov
cld
dec
mulb
sbb
test
out
push
sahf
aam
stos
pusha
adc
and
push
ja
jp
or
jo
xchg
mov
or
dec
pop
ss
movsl
scas
push
mov
test
inc
xor
mov
call
test
jmp
in
in
push
sbb
fisttps
xchg
shll
sbb
mov
movsb
push
mov
push
ret
out
movsl
inc
loopne
push
inc
insb
pop
outsl
pop
adc
aas
mov
sub
pop
xor
rcr
shrl
inc
mov
test
pop
xor
out
lea
test
cmp
cld
mov
sti
or
adc
inc
sub
mov
aaa
popf
cmp
adc
adc
add
enter
enter
stos
ja
pop
test
lret
or
sub
out
pop
repnz
sub
mov
push
sub
push
sub
sti
dec
movsl
fldt
scas
xor
ja
or
pop
inc
inc
jo
std
scas
sbb
pop
je
sar
xor
mov
and
call
les
jbe
movsb
sbb
adc
mov
shlb
jno
scas
ja
fsubrs
mov
in
lods
mov
bound
pop
sbb
mov
dec
or
jmp
sbb
lahf
jns
incb
jle
mov
jno
ss
pop
loopne
js
mov
lahf
in
push
fmuls
ja
lods
jle
cmp
pop
gs
fxch
dec
scas
pop
xor
rcl
jnp
pmaxsw
pop
jl
push
sub
stos
adc
test
cmp
mov
jmp
mov
mov
mov
push
shlb
rclb
and
int3
mov
sbb
out
fiadds
mov
cmc
cli
mov
sub
and
fstps
jbe
out
shrb
push
outsb
aas
inc
adc
pop
lret
and
ret
out
ret
dec
pusha
std
jge
stc
sub
mov
in
adc
jecxz
imul
push
divb
addr16
mov
jae
sub
outsl
lcall
inc
dec
aam
shlb
out
sbb
scas
es
xor
inc
pop
pop
aam
lea
push
lods
pushf
shll
cmp
shlb
mov
xlat
leave
repnz
movsl
inc
or
imul
cltd
push
push
pop
insl
push
popf
xorl
cmpsb
je
jne
out
xor
rolb
leave
xor
mov
xchg
mov
repz
mov
rcrb
mov
stos
jb
mov
sbb
inc
int
jl
pop
add
shrb
xchg
adc
push
dec
xor
ss
push
dec
pop
pop
in
rorl
imul
xchg
mov
pop
push
mulb
mov
cmp
pop
icebp
sub
ljmp
cld
repz
lods
mov
inc
lret
adc
icebp
es
sub
lods
add
jbe
push
imul
push
or
and
and
clc
fwait
dec
iret
jbe
xchg
push
inc
sbbl
movsb
sub
xor
sbb
ds
pop
or
xor
ret
rolb
add
mov
loopne
pop
push
std
testb
lret
push
add
push
mov
ret
push
daa
inc
sbb
xor
pop
int
push
pusha
sbbl
movsl
loope
js
mov
mov
ret
jne
cmp
repz
imul
jnp
lret
in
dec
daa
movsb
adc
jo
dec
jle
ret
clc
xor
add
dec
scas
sti
pop
test
sbb
pop
mulb
cmpsb
insb
mov
pop
das
cld
lods
int3
repnz
pop
push
aaa
fnsave
push
shll
fdivp
shl
cmc
out
mov
in
fs
xchg
mov
pop
inc
rolb
sub
cli
sub
ljmp
or
inc
adc
lret
mov
jae
aas
adc
btc
js
sbb
fstpt
mov
sbb
scas
test
stos
and
push
rcrb
sub
pop
outsl
icebp
icebp
hlt
pop
push
or
xchg
pop
sahf
push
int3
data16
call
push
jp
les
sarl
or
pushl
xchg
sarb
inc
mov
cld
pop
mov
xchg
push
or
in
adc
jbe
bound
fsubp
stos
rcrl
cmp
inc
movsb
and
add
pop
xchg
sbbl
xchg
mov
jne
push
add
mov
es
add
pop
nop
std
add
jg
pop
mov
push
mov
and
popa
inc
push
pop
sti
cmp
lea
mov
fcmovnbe
arpl
in
leave
fcmovb
xchg
dec
insb
stos
rclb
or
cmp
addb
ficoms
fsts
loopne
lret
mov
inc
mov
ret
push
test
rcrl
mov
ljmp
addl
push
xor
cmc
in
add
mov
fbld
xchg
lea
in
lret
mov
jl
xchg
sbb
mov
xchg
fwait
push
pop
pop
cmpsl
mov
stos
aam
mov
cmpb
push
mov
xlat
push
xor
test
sub
lcall
test
aad
sbb
jecxz
fldcw
imul
jno
mov
andb
out
lock
mov
cmp
insl
out
push
nop
sbb
or
push
aaa
mov
add
or
push
sti
jno
filds
inc
inc
add
or
and
out
mov
inc
and
dec
ror
es
push
sti
cmp
cli
dec
cmp
push
cmp
cmpb
fwait
shl
rorb
or
mov
int3
addr16
dec
push
cmc
mov
jle
mov
cld
pop
addr16
sbb
push
sahf
mov
popf
inc
cmp
sbb
xor
mov
mov
mov
js
dec
xor
out
lock
insl
fwait
adcl
insl
push
add
and
adc
movsl
imul
sarb
and
adc
xchg
push
jb
call
std
int3
push
cmp
andl
add
mov
dec
sbb
ja
or
adc
cmp
push
stc
loopne
inc
adc
leave
jne
mov
xor
or
push
repz
lret
dec
lods
mov
call
rcll
test
outsb
xchg
into
ret
cmp
xor
fldenv
mov
mov
cmp
in
pop
or
cwtl
mov
or
push
and
fistps
cmpsb
outsl
mov
xchg
pop
push
jle
lret
out
adc
pusha
xor
jno
pop
jmp
jmp
cmp
sbb
imul
cmp
jecxz
mov
test
dec
dec
leave
xchg
cmp
pop
mov
inc
pop
push
mov
popf
lret
rcrl
ss
nop
add
dec
ljmp
int
stos
mov
aas
cltd
aaa
mov
jb
ss
adc
xor
pushf
int
or
jnp
mov
push
aam
outsl
pop
cltd
xchg
xchg
into
leave
pandn
out
nop
dec
and
outsl
add
jecxz
call
mov
push
pop
jg
cmp
insl
inc
outsl
dec
sbb
cmp
or
sbb
fiaddl
bound
idivl
push
mov
out
cmpsb
lahf
or
fdivrs
mov
pop
push
cmpsb
mov
add
addr16
adcl
adc
pop
push
dec
xor
xchg
stc
leave
aad
cli
push
pop
ficoml
jl
stos
push
js
sbb
popf
and
aas
hlt
mov
in
ljmp
adc
inc
mov
ljmp
xor
insb
sbb
lcall
movsb
push
data16
in
fcmovnu
adc
fwait
mov
arpl
pop
mov
dec
mov
nop
in
das
fisttps
in
es
push
out
lods
pop
xchg
fisubrl
lock
mov
adc
cmpsl
pop
daa
xchg
leave
pop
mov
ljmp
popf
pop
add
cwtl
mov
mov
in
push
cltd
xchg
mov
mov
mov
int
xchg
or
stos
fcoml
jb
lds
dec
movsl
neg
psubb
push
out
arpl
pop
pop
sbb
clts
call
jp
push
pushf
lea
js
stos
les
sti
test
aam
mov
shll
testl
lret
inc
sti
lret
jge
xor
shll
add
push
daa
pop
mov
movsb
and
nop
inc
pop
add
cli
dec
jl
sahf
or
ret
in
movsb
insb
sbb
push
mov
test
jle
nop
stos
loop
incl
fimuls
mov
cmc
inc
dec
mov
pop
pop
loope
fs
testb
jne
xchg
in
cltd
test
test
and
push
xchg
loop
jecxz
sub
ljmp
add
les
sbb
fisubl
mov
mov
xchg
xchg
loopne
fwait
loop
movsl
stos
int
ds
mov
lea
jg
jge
jo
mov
pop
rorl
imul
in
ljmp
andb
cmp
fmul
sbb
outsb
add
negb
jl
cmpsl
push
in
mov
mov
ds
inc
sbb
in
outsl
mov
sub
stos
jo
push
mov
mov
cwtl
loopne
ret
and
lods
fidivrl
xor
sbb
lock
in
imul
lahf
add
icebp
inc
adc
xor
clc
pop
test
ss
in
stos
out
sti
stos
sub
cmp
xchg
sub
adc
and
push
pop
dec
cmpsb
cmpsb
jle
fldl
cmpsb
sbb
pop
adc
or
out
cmp
jnp
cmp
push
aaa
mov
ret
call
outsl
int3
dec
scas
lret
and
lods
sub
pusha
cmp
add
mov
in
or
psllw
adc
dec
ret
jge
setb
dec
pop
stos
fidivrl
and
mov
inc
shr
repz
mov
movsl
push
xor
sub
aaa
lret
sbb
scas
pop
dec
add
sub
cld
push
pop
outsb
jne
shlb
dec
cmpsl
bound
xchg
xlat
jns
fadds
fistpll
xchg
jns
shll
leave
inc
sub
dec
and
mov
xchg
inc
mov
dec
sbb
test
mov
in
ret
aas
xchg
lods
icebp
int3
pop
xor
adc
arpl
mov
cmp
lret
frstor
sbbb
push
pop
int
xchg
jge
sub
out
scas
mov
in
dec
jecxz
outsl
lret
mov
dec
pop
gs
xor
jb
mov
ret
pop
pusha
shrb
sbb
pop
lock
adc
out
stos
push
jge
or
mov
lods
loope
in
push
xor
js
cmpsb
push
push
cwtl
mov
push
dec
xchg
ss
sbb
fimuls
addr16
les
roll
jne
notb
in
xor
cltd
xor
arpl
rclb
fimull
pop
nop
pop
cmp
fistl
cld
in
loopne
sbb
scas
or
pop
std
mov
call
stos
pop
pop
adc
aas
scas
stos
gs
mov
dec
mov
in
mov
sub
pushf
pcmpeqw
xor
popa
add
adc
adc
mov
jns
addr16
add
or
aam
std
mov
push
ss
sbb
in
pushf
cmp
fs
xchg
jle
lock
push
sub
test
add
pop
cmp
shlb
repnz
dec
icebp
insb
xchg
add
xor
lea
mov
cmpsb
sbb
jecxz
mov
mov
mov
js
xchg
shrl
mov
sahf
leave
sbb
adc
add
sub
insw
fists
lcall
or
test
pushf
mov
and
jge
xchg
es
jmp
sub
mov
test
and
mov
jae
pusha
push
pushf
jbe
ds
inc
rcll
mov
adc
mov
in
clc
xor
or
fs
ss
mov
int3
jmp
pusha
mov
outsl
jno
dec
add
icebp
jecxz
jecxz
andb
and
divl
xchg
sub
cmp
sbb
sbb
sub
in
cmp
cmp
incb
xchg
hlt
or
cmc
xor
sbb
cmp
subl
xor
sbb
xchg
outsl
jne
dec
and
jecxz
jbe
je
cmp
shll
adc
dec
fs
mov
mov
int
inc
adc
lret
jg
in
adc
icebp
in
std
and
mov
enter
xor
les
pop
mov
xor
popf
mov
xchg
popf
lahf
outsl
outsb
push
lods
pop
pop
addr16
int
fisubrl
arpl
mov
out
loopne
push
and
leave
adc
xor
into
flds
xor
add
xchg
mov
cltd
xor
xchg
sbb
lods
push
sub
add
inc
call
pop
leave
lods
inc
aaa
aam
insl
out
lods
lea
insb
cmc
rcrl
xchg
out
mov
jmp
jecxz
dec
in
fs
je
add
and
add
sbbl
fldl
sbb
xchg
enter
leave
loopne
rorl
xchg
inc
and
rcll
mov
and
in
mov
fists
loop
in
out
es
lcall
inc
sbb
inc
fwait
out
fmul
sti
sahf
aam
and
in
ss
mov
mov
imul
cmc
fsubrs
pop
or
ret
inc
mov
movsb
sbb
ret
in
or
xchg
push
add
int
pushl
fldenv
scas
call
mov
mov
sub
xchg
stos
xchg
jp
pop
jns
jmp
inc
in
and
aam
push
sub
or
clc
push
or
outsb
and
aas
in
aaa
sbb
movsl
and
ret
shl
mov
push
pop
add
imul
lea
ja
faddl
xor
daa
rcrl
test
jnp
leave
mov
repnz
lods
lea
mov
dec
jmp
rcl
in
jae
fistpl
sbb
dec
add
mov
loope
xchg
dec
mov
mov
test
ja
movsl
dec
stos
jns
inc
jmp
daa
rcll
lahf
int
push
lock
pop
aam
xchg
cs
push
mov
pop
out
dec
sub
and
xorb
add
push
dec
ds
push
je
cmp
adc
mov
hlt
pop
out
test
roll
fisttpl
shll
mov
push
sarl
pop
aam
dec
sub
cltd
pop
ljmp
sbb
mov
add
xor
xchg
adc
andl
aam
ljmp
xchg
inc
sbb
shl
in
sbb
mov
shr
rorl
je
shr
add
int
nop
xor
jmp
gs
adc
ja
pop
xor
adc
dec
xor
out
ss
push
cmp
mov
add
sub
jl
inc
lds
xchg
call
rcll
movsb
push
out
pop
and
add
iret
adc
and
adc
sbbb
dec
sar
nop
push
ds
sbb
xchg
or
add
aad
imul
outsb
jl
in
xchg
or
pop
adc
pop
cmp
fwait
cltd
pop
jmp
les
movsl
push
pushf
bound
cli
pusha
add
cld
sbb
and
fwait
pop
mov
sbbl
ficoms
and
test
sbb
pusha
ja
ror
jp
andb
pushf
dec
jne
push
xchg
add
in
push
mov
insl
outsl
xor
out
out
out
icebp
mov
loope
repz
repz
shlb
or
sti
sbb
sbb
cmp
es
or
cmp
scas
add
lret
mov
push
std
mov
push
cld
push
rorb
inc
jge
mov
fwait
loopne
insb
add
nop
ret
mov
fs
mov
cli
popa
cs
test
repz
add
jecxz
pop
jo
ret
int
xlat
cs
leave
movsl
lds
xchg
inc
sahf
or
popf
pusha
andb
outsl
inc
cwtl
out
mov
int
test
iret
sahf
test
ljmp
hlt
loope
insl
mov
mov
inc
repnz
pop
lret
pop
or
lcall
sbb
push
pop
push
or
pop
ja
call
mov
leave
rclb
add
andl
mov
sbb
or
add
xlat
sbb
addr16
fwait
push
and
mov
movsl
ficoml
loope
mov
in
dec
clc
cli
xchg
outsb
cs
sbb
xor
jecxz
xor
adc
pop
pop
sbb
in
movsl
in
xor
jmp
dec
jae
loope
imul
enter
add
push
lea
lahf
scas
lahf
int3
pop
sti
or
mov
adc
mov
fstps
push
xor
or
repz
sahf
sub
clc
sub
int3
dec
jl
adc
push
in
arpl
pop
sub
xor
scas
sti
fxam
push
rolb
repnz
jns
push
ja
fimull
rorb
mov
pusha
and
adc
adc
push
cmp
ja
stc
call
fmuls
add
mov
sub
xchg
mov
mov
daa
sub
push
leave
add
xbegin
mov
pop
js
dec
pop
mov
stc
jle
sbb
ds
or
arpl
ret
lret
ret
push
push
mov
cmpps
sbb
mov
das
push
sbb
stos
mov
ficompl
stos
iret
repz
xchg
jb
mov
add
call
dec
pop
mov
or
daa
push
pop
rcrb
orl
dec
sbb
insb
jns
jl
je
push
test
sbb
cltd
loope
pop
fmuls
ds
fbld
lahf
push
ficoml
dec
and
imull
loope
inc
or
mov
dec
cmp
sbb
jmp
lret
dec
jle
pop
sub
push
mov
dec
bound
mov
cmp
ja
xor
or
cmc
js
test
pop
xchg
test
ss
cwtl
ret
lds
push
pop
ror
clc
xchg
scas
mov
leave
mov
shll
iret
insb
dec
jmp
jno
and
jmp
ljmp
mov
pop
cltd
sub
and
cmp
jle
rorb
mov
or
das
or
repz
mov
cmp
mov
inc
sbb
mov
iret
xchg
mov
sbb
push
fsubr
xor
imul
fbstp
mov
xchg
test
adc
sub
adc
cwtl
loop
dec
push
in
adc
jle,pn
xchg
repnz
sahf
ds
adc
sbb
fadds
pop
mov
rorl
or
cltd
aas
mov
and
or
jns
sbb
shlb
out
cmp
dec
stos
mov
das
nop
pop
xchg
add
aas
lods
hlt
xchg
mov
and
cld
add
xchg
xchg
repz
pop
ja
and
or
nop
loope
jb
js
add
jb
sar
inc
ljmp
insl
and
out
mov
in
lds
mov
dec
imul
jno
fidivl
call
and
daa
mov
in
xor
mov
aaa
fsubp
in
push
rcrb
sbb
fidivl
sub
enter
or
xchg
inc
xor
jns
aad
pop
cwtl
imul
ret
cmp
mov
iret
out
iret
sub
fs
test
jmp
sbb
shrl
sub
cmp
loopne
jb
cmpl
popf
or
mov
data16
jmp
or
mov
lahf
es
das
or
idivl
cmp
je
pushf
fists
das
xorb
pop
sbb
xor
or
cli
jo
xchg
in
les
xor
jnp
inc
es
insb
mov
xchg
mov
addr16
push
fimuls
or
inc
pushf
dec
inc
jo
sub
mov
into
push
dec
pop
out
decb
xchg
lret
jg
cmp
jnp
std
addr16
popa
imul
pop
faddp
sub
cmpsb
sub
mov
mov
dec
push
cltd
repnz
fwait
shll
cmp
pop
decb
mov
popa
jne
jge
imul
lods
pop
and
sbb
cld
dec
int
sbb
and
push
inc
stos
test
imul
or
inc
and
or
sahf
scas
shlw
pop
pop
push
mov
and
push
jmp
sbb
jno
in
mov
xor
outsb
xor
add
xchg
popa
xlat
sub
cmp
mov
mov
push
leave
push
xchg
adc
jb
cmp
mov
jno
sbb
adcb
jle
fcmovbe
xchg
out
insb
or
pop
sub
xor
inc
mov
outsb
push
aas
daa
ret
je
cmp
movsl
or
mov
inc
cmc
pop
popa
cmp
mov
repnz
imulb
push
mov
and
xchg
pop
inc
dec
or
ljmp
lret
xchg
out
sahf
pop
xor
stos
ret
popf
fisttpll
dec
dec
fdivr
cld
or
aaa
jle
and
cmp
iret
and
or
xchg
into
ds
sub
jno
outsl
pusha
sbb
pusha
jbe
add
cmp
mov
icebp
mov
add
stc
out
dec
mov
xchg
jno
jle
and
pop
aas
sbb
and
cmpsl
shlb
push
pop
mov
pcmpeqd
mov
or
cmp
rol
jnp
fwait
jle
mov
push
and
or
cmc
ja
ja
popf
pop
mov
adc
sti
inc
ljmp
in
insl
repnz
sub
fildll
je
xlat
mov
mov
xor
out
jmp
add
in
mov
stos
sub
adc
hlt
jns
sti
jno
outsb
jg
push
jge
negb
mov
ds
lods
out
stc
mov
push
aaa
mov
lret
lock
jmp
sbb
inc
sbb
fmull
pushf
pop
jo
push
enter
fistpl
and
mov
inc
and
das
jae
data16
jno
mov
scas
sub
pop
loopne
xor
std
loop
es
pusha
xor
mov
adcb
fwait
adc
xor
mov
pop
addr16
xchg
repnz
icebp
mov
insl
addr16
in
sub
adc
bound
jp
and
or
sbb
xchg
jb
or
call
sbb
and
cmp
pop
sarb
mov
stc
or
sub
sub
xchg
out
cmp
jmp
int3
mov
in
mov
std
pop
cltd
lods
xor
mov
lcall
mov
lods
xor
fwait
push
mov
repnz
aad
sub
rcr
cwtl
les
pop
jo
mov
adc
cmp
outsb
cmp
in
fdivrl
enter
mov
pop
fs
ljmp
sub
xchg
stc
cwtl
fsts
sbb
les
fwait
pop
mov
or
lcall
cmp
or
cld
sub
and
movsl
fwait
and
xchg
movhps
lods
push
in
clc
dec
ret
sahf
je
pop
inc
out
mov
les
and
lcall
loopne
mov
push
dec
sbb
stc
ret
int
loop
in
mov
les
icebp
inc
fs
insb
adc
hlt
xlat
inc
and
pop
add
or
fcomps
add
ljmp
xchg
scas
leave
mov
push
fwait
sub
inc
arpl
dec
xor
lret
stos
in
xchg
iret
loope
mov
jge
push
inc
pmaddwd
adc
imull
popf
push
out
aas
sahf
cmpsb
mov
ret
pop
ret
sbb
ds
push
mov
fcoms
mov
pop
jmp
cmp
movsl
push
test
pop
and
inc
cmp
dec
push
ljmp
icebp
loop
jmp
sti
dec
mov
hlt
push
inc
mov
int3
mov
hlt
ja
sbb
adc
or
sub
ja
dec
push
cld
jno
lock
xor
push
push
pop
dec
jbe
loopne
mov
daa
inc
repz
push
in
push
mov
orl
rcrl
aas
jle
mov
lods
sub
add
dec
aaa
in
cmp
inc
cli
imul
push
int3
dec
push
mov
call
add
outsb
arpl
filds
test
cmp
idivl
mov
icebp
ljmp
test
cltd
mov
fstpt
push
int3
aaa
jae
cld
cmpsl
loope
mov
sti
es
sahf
inc
cmp
mov
inc
rorb
lock
int
mov
or
js
push
cmp
push
insb
mov
cld
outsl
clc
out
push
js
jecxz
pop
jo
xchg
les
int
dec
mov
xor
push
or
cs
xor
xchg
mov
xor
mov
mov
xchg
fwait
lcall
jl
out
cwtl
mov
and
add
out
leave
add
pop
mov
aam
sub
rcr
loop
mov
leave
or
lock
mov
sub
inc
jne
push
dec
dec
ds
scas
add
nop
cmpb
mov
mov
mov
ss
std
cld
and
cld
xchg
mov
sub
jp
lods
popf
xchg
gs
pushf
mov
push
inc
nop
sbb
out
fs
sub
sub
sti
pop
divl
popf
fstp
stc
xchg
mov
test
ds
sub
out
insb
dec
sahf
icebp
dec
enter
adc
mov
sti
mov
bound
lcall
out
mov
out
or
rolb
adc
push
sbb
es
mov
jp
and
shrl
add
cmp
or
insl
mov
pusha
pop
mov
xor
pop
pop
pop
and
test
in
xor
cmp
scas
xchg
das
cwtl
and
xchg
push
jb
cmc
jl
daa
push
hlt
mov
sbb
lods
mov
inc
xor
jne
movsl
clc
mov
jl
cmp
mov
mov
cmp
cli
test
aad
mov
adc
add
fwait
inc
inc
add
jmp
shlb
repnz
pop
and
push
add
or
xchg
stos
aaa
test
sbb
dec
push
addr16
aam
jae
xor
push
cltd
clc
push
add
sbb
sbb
mov
addr16
pop
std
dec
fdivr
ret
test
jne
mov
mov
cld
mov
shlb
in
bound
inc
jmp
mov
aas
ds
fwait
or
jbe
stc
sbb
std
les
movsl
call
in
outsb
mov
aad
ljmp
lea
push
in
or
push
mov
xor
pop
hlt
pusha
ret
lock
mov
jmp
rol
ljmp
xchg
inc
dec
sbb
aad
out
xor
fldenv
ss
scas
sbb
out
jmp
xor
lret
mov
sbb
lods
call
sbb
jmp
shll
stos
test
std
push
mov
je
cmp
enter
adc
testb
jecxz
sbb
test
pusha
xor
pop
and
mov
sarl
fwait
pop
mov
mov
mov
jne
mov
je
clc
pop
sar
aas
lahf
xchg
and
stc
or
sti
ds
jb
fsts
dec
add
mov
ja
and
push
and
push
mov
pop
xor
sbbl
in
push
outsb
inc
mov
xchg
aas
in
cmp
pop
or
mov
xor
xor
loopne
pop
inc
inc
jns
xor
xchg
fldenv
cwtl
gs
idivb
sbb
push
push
sbb
pop
mov
orl
push
mov
ja
clc
lret
push
or
int3
mov
add
gs
ss
rcrb
sahf
adc
or
xor
xchg
mov
aaa
mov
pop
add
mov
adc
sahf
mov
ret
add
das
cwtl
cwtl
dec
nop
mov
push
aam
cli
jns
pop
xor
cmp
sbb
mov
mov
fdivrp
sbb
fsubl
movsb
fxch
repz
xchg
mov
in
inc
mov
sub
mov
mov
cli
xchg
rcl
fdivl
adc
adc
pop
and
add
push
mov
into
fbld
mov
jns
mov
add
std
or
xchg
in
jno
stos
call
jl
test
test
pop
nop
and
jb
mov
sub
sbb
sbb
adc
mov
std
cmp
int3
inc
addr16
sub
clc
aam
push
out
push
iret
insb
sub
hlt
xor
sbb
mov
sbb
cmpsb
mov
scas
inc
sub
or
push
out
jge
cli
imul
das
push
push
rolb
adc
cli
shl
push
inc
sub
or
mov
inc
xchg
insb
call
call
leave
cmp
adc
pop
push
add
adc
jl
fstpl
pop
sub
add
test
jbe
push
outsl
fistps
lock
mov
pop
ds
hlt
cmp
pop
fwait
loopne
push
bound
in
clc
fnsave
mov
adc
adc
mov
push
outsb
jmp
aad
jae
mov
sub
lahf
into
sbb
sbb
test
adc
lods
cltd
or
jmp
xchg
sub
xchg
inc
lret
in
sub
add
mov
xchg
jg
movsl
add
push
jb
dec
pop
pushf
out
daa
lret
lret
ds
cltd
or
insb
push
adc
add
jne
out
insl
pushl
das
and
mov
sbb
or
aas
shll
ss
jle
decb
shll
xor
fsts
jp
cwtl
and
adc
dec
sub
test
scas
movsb
sti
notb
lret
mov
push
xchg
mov
xchg
mov
or
pop
mov
and
lahf
movsb
xor
dec
stos
insl
xchg
mov
and
mov
loopne
jo
mull
in
cli
push
xor
lret
pop
inc
adc
jnp
movsb
inc
push
dec
sti
add
ja
mov
xor
hlt
push
sarl
add
cmp
nop
iret
add
jae
pop
aad
push
jo
dec
xchg
pop
in
adc
in
push
mov
pushf
ljmp
pop
nop
adcb
dec
dec
rcl
cmp
push
sub
mov
add
mov
cmpw
xchg
ret
sub
mov
lock
adc
ja
mov
outsb
or
daa
xchg
fsubrl
repnz
mov
movsl
mov
xchg
mov
ret
add
mov
push
ret
mov
mov
pop
cs
xorb
pop
cli
decb
push
sub
in
cli
test
mov
setbe
imul
cmp
cltd
jnp
pusha
mov
rolb
lea
pop
mov
popf
fistpl
push
mov
orl
and
inc
push
pop
int3
cld
out
outsb
push
test
pop
pop
cmc
icebp
push
push
lret
push
data16
insl
sbb
test
pop
adc
pop
jbe
adc
cmp
scas
lcall
cmp
outsb
fs
popa
dec
addr16
xchg
lret
movsl
std
jbe
inc
pop
pop
dec
or
cmp
cmp
out
gs
sbb
insb
xchg
neg
rorl
lahf
sahf
adc
test
mov
add
mov
sbb
pop
gs
inc
and
xchg
jae
adc
stc
lret
iret
aas
xor
into
jne
inc
sbb
cmc
repz
loopne,pn
fnsave
lahf
ljmp
in
mov
xchg
stos
add
add
mov
call
in
pop
xchg
jecxz
sub
loopne
cmp
mov
icebp
cmp
pop
xor
outsl
fiadds
mov
mov
xchg
adc
and
mov
loop
out
xchg
ror
loop
dec
aas
and
cli
pop
cmpsl
jae
sbb
sbb
insb
and
call
fadd
dec
nop
imul
negl
mov
xor
lret
cwtl
es
cmpsb
mov
out
sub
xchg
xorb
arpl
xor
xlat
mov
push
mov
xchg
sar
inc
movsl
xchg
sbb
jle
fwait
add
jle
add
mov
aam
inc
clc
mov
xchg
push
mov
popa
cmp
ret
push
es
out
xor
mov
leave
push
mov
cmp
scas
scas
fcoms
pop
std
ja
mov
daa
in
ficoms
shll
cli
cltd
mov
jmp
lock
test
and
xchg
sub
je
xor
sbb
mov
dec
shlb
mov
lea
test
fldz
dec
cmp
out
mov
adc
cli
xchg
adc
fxch
into
mov
fwait
test
cmpsl
mov
test
addl
xchg
orl
jge
sti
scas
into
bound
imul
sbb
mov
mov
push
push
sbb
and
outsb
stos
sbb
mov
lahf
inc
dec
sub
jp
xor
subb
ds
push
mov
stos
mov
jno
repnz
jbe
xchg
stos
loope
subl
push
test
lret
loopne
fistl
xor
mov
sbb
adc
sub
hlt
xor
sbb
xorb
and
jge
xorb
xor
inc
lret
shll
xor
inc
mov
adc
stc
add
xor
jmp
sbb
jns
pop
xchg
imul
mov
push
xlat
and
outsb
dec
adc
bound
enter
aaa
ret
int3
dec
sbb
or
loop
and
mov
pop
ds
mov
stc
lods
xorb
lahf
jmp
mov
jne
jl
popa
les
test
mov
out
mov
nop
add
bound
rcrb
movsb
imul
es
mov
loopne
push
faddl
inc
sub
mov
or
arpl
xchg
add
pop
jne
scas
xchg
mov
std
inc
icebp
jae
adc
loopne
sbb
fisttpl
bound
push
cmpb
xchg
lret
notb
dec
sbb
and
adc
and
nop
xchg
jb
in
fists
xlat
dec
out
mov
add
lock
outsb
add
mov
or
mov
inc
or
fldl
jp
inc
int
mov
lods
xchg
ja
cmp
andb
repz
push
sbb
ficoml
or
cld
sbb
add
pop
mov
mov
inc
lcall
cmp
cmc
fs
popa
int
pop
lret
dec
fsubr
cs
int3
adc
insl
mov
and
shl
xor
inc
adc
sub
inc
xchg
cmpsl
mov
shlb
pop
push
les
hlt
loopne,pn
adc
xchg
iret
and
clc
in
pop
mov
jbe
shll
or
aaa
and
jo
lahf
out
test
stos
pop
jo
cs
jge
mov
idivb
mov
ss
cmp
movsb
or
xchg
rorl
ret
mov
xor
sbb
inc
frstor
aad
lock
xlat
loop
add
xchg
mov
mov
jg
jns
movaps
cwtl
fsubl
add
ds
stos
test
sub
movb
xor
sbb
jecxz
rorb
xor
fyl2xp1
es
pop
lea
repz
mov
xor
and
inc
xor
mov
addr16
sti
inc
add
xor
lcall
shlb
mov
dec
pop
in
call
and
shlb
sahf
test
dec
sti
fwait
movsl
dec
dec
cld
mov
push
mov
cli
aad
sbbb
test
xchg
int3
cmp
sbb
and
repz
sbb
mov
mov
call
inc
cs
lock
incb
cmp
xchg
add
pop
movsb
push
push
int
inc
stos
dec
in
sbb
mov
mov
lcall
loope
cmp
jg
in
lret
int
les
pop
in
fs
fadd
xchg
ror
lea
push
imul
aad
jnp
nop
mov
cld
dec
ret
pop
fnstcw
push
sbb
or
movsb
adc
push
clc
cmc
lret
lods
aam
int3
movsl
push
gs
jne
xor
add
pop
fnsave
jo
inc
add
pop
add
stos
bound
pop
mov
cs
cmp
in
fucompp
cli
xchg
iret
in
sub
loope
jp
scas
cmc
lds
cmpsb
cmp
stos
push
pushf
mov
or
adc
sub
and
or
or
lea
stc
mov
movsb
inc
xor
or
movsl
mov
movsb
outsb
repnz
and
std
cwtl
jp
bound
stos
scas
lret
dec
sbb
mov
pop
rclb
cmc
jp
push
or
mov
pop
push
je
call
pop
push
pop
push
adc
shl
and
mov
call
das
notl
or
push
rcrb
outsl
push
insl
nop
push
jno
es
push
jmp
inc
and
adc
mov
push
mov
xchg
mov
ja
roll
jp
push
mov
xchg
lret
fistpl
cmp
lods
shl
sbb
xchg
xchg
inc
xlat
and
neg
or
push
jbe
rcrl
enter
dec
pop
adc
lahf
fidivl
stos
cmp
lods
and
leave
mov
fdivr
pop
leave
jne
sub
mov
pop
and
pop
sub
xor
sbb
mov
insl
fiadds
inc
lods
push
push
lds
pushf
or
out
push
mov
test
test
pop
mov
lock
shlb
pop
xor
popf
add
jo
jmp
or
push
mov
jmp
cmp
and
adc
inc
mov
lods
outsb
pop
push
push
pop
rclb
std
push
je
rcll
insl
outsl
cmp
dec
nop
iret
push
icebp
push
adc
sbb
lcall
addr16
cld
cmp
cmp
bound
adc
adc
xor
or
mov
adc
mov
rcl
out
scas
movsb
cs
mov
push
mov
stos
jne
xor
into
loop
sub
xchg
stos
lcall
sbb
pushf
out
cwtl
or
repnz
jbe
aad
sahf
dec
fiadds
sti
jo
pop
std
aad
or
imul
dec
sub
xchg
dec
dec
nop
mov
out
dec
cmpsl
rcrb
pop
pushaw
adc
in
or
push
jns
test
jbe
int3
repnz
dec
jle
repnz
or
jl
push
inc
xchg
xor
stos
add
push
dec
jl
sbb
and
stos
aaa
into
adc
push
fwait
add
pop
cmp
into
xor
enter
jns
scas
cli
imul
cmp
mov
xor
push
or
add
rcl
dec
jmp
cmpsb
insb
testb
adc
lods
lret
inc
xchg
mov
pop
and
pop
scas
out
push
std
cs
dec
xor
sbb
rorb
scas
or
pop
mov
sbb
and
mov
jae
and
jno
pop
in
or
add
sub
push
mov
nop
or
ja
mov
test
jle
pop
jno
xor
rep
xchg
je
jg
movhps
jp
mov
cli
jae
mov
roll
mov
mov
push
nop
testl
cli
andb
mov
add
je
mov
or
add
cmpsb
pop
aas
imul
inc
test
adc
mov
sahf
push
push
dec
stos
dec
pop
xor
es
xchg
orb
dec
pusha
dec
or
and
stos
bnd
inc
adc
out
imul
rcrl
mov
mov
movsb
inc
sbb
fsubrs
pop
out
in
lret
mov
mov
inc
aas
jae
and
nop
xchg
popf
mull
test
cmp
push
pusha
test
xchg
fdivp
fildll
lret
xor
loopne
popl
ficoms
jne
dec
or
mov
xchg
push
xchg
lods
or
iret
or
fidivrl
add
mov
pop
cmp
jmp
ja
stc
sti
fsubrs
nop
push
and
insb
sahf
gs
jo
sar
mov
mov
mov
push
mov
and
jecxz
sbb
jns
mov
adc
rorb
mov
repz
fs
icebp
add
sub
add
push
mov
clc
in
and
mov
jp
pop
push
mov
inc
pop
mov
arpl
test
pop
bswap
into
push
lds
in
push
data16
mov
insb
add
test
fs
stos
cwtl
cli
lods
add
jp
ds
push
inc
sub
orb
push
lahf
clc
addl
scas
or
and
out
out
inc
fistpl
or
cltd
movsb
jae
jbe
mov
cmc
dec
pop
stc
adc
mov
xlat
mov
lret
cmp
add
mov
gs
les
gs
lcall
mov
cwtl
repz
cmc
ret
push
pop
xchg
push
cli
fwait
cmpsb
data16
push
dec
or
sbb
inc
push
movsl
fisttpll
data16
inc
lods
mov
jb
aas
jecxz
dec
enter
push
jg
fisubrl
sub
repz
pusha
icebp
scas
xchg
outsb
fildl
ficompl
dec
and
and
add
push
pop
push
or
jnp
cmc
jb
cmpsb
cwtl
ds
int
call
mov
fisubrl
hlt
dec
lds
sbb
and
or
leave
sbb
mov
mov
aam
fnstsw
mov
insl
add
addl
adc
sti
and
sbb
rolb
repnz
add
loope
lea
sub
cmp
shlb
jge
cwtl
jmp
sbbb
mov
out
ja
in
jo
repnz
jns
inc
mov
cld
mov
sub
jl
imul
sti
in
add
cmpsl
mov
fwait
rcrl
xor
xchg
clc
mov
push
rcl
inc
xor
faddl
gs
xchg
or
mov
pop
sahf
rol
add
cli
push
mov
mov
push
lret
mov
mov
lods
stos
aaa
inc
dec
adc
and
push
adc
sbb
repnz
mov
cmp
outsb
adc
cmp
ja
nop
cmc
push
xchg
sti
repnz
jmp
xor
popl
dec
jb
sbb
lahf
jmp
xor
adcl
mov
loop
add
inc
xchg
push
dec
insb
in
in
ret
mov
ficomps
test
lea
pushf
adc
icebp
dec
xor
and
cmp
out
sbb
sub
mov
arpl
dec
in
fwait
dec
push
mov
adc
adc
test
and
jnp
xchg
jle
pop
jno
addb
dec
lods
pop
ret
jno
cwtl
gs
loopne
sbb
pop
push
pop
gs
mov
adc
vpshlw
mov
loope
loop
cltd
cli
leave
jp
add
mov
jns
test
inc
mov
pop
subb
popf
popf
dec
scas
mov
inc
aas
int3
test
cmpsl
dec
pop
push
mov
in
scas
mov
icebp
mov
lahf
shr
inc
push
outsl
xor
popa
roll
push
push
sbb
inc
les
out
or
or
mov
loope
jno
mov
add
mov
sbb
jp
mov
push
jp
rolb
mov
jbe
jecxz
pop
imul
test
add
or
cltd
andl
adc
jb
in
call
mov
pushf
mov
mov
mov
adcb
icebp
cwtl
movsb
mov
nop
in
pop
iret
dec
jne
or
cwtl
dec
orb
pushf
test
sbb
loop
dec
inc
push
insl
insl
arpl
cwtl
and
sbb
cmp
and
mov
add
mov
fildl
icebp
cltd
pop
fstpl
ja
mov
fcomps
pop
mov
inc
call
mov
jg
repnz
ss
jg
loop
xchg
push
cmp
stc
and
cwtl
js
xchg
fcomps
cmc
sbb
stc
adc
imul
add
sbb
in
xchg
ficompl
lret
test
xchg
jne
pop
mov
push
add
cmp
jns
push
loopne
stos
pop
inc
je
xchg
ljmp
mov
shll
sub
lods
fiaddl
cmp
lea
pop
pop
sub
adc
je
sub
push
inc
ss
push
hlt
ja
jbe
lret
mov
rclb
test
movl
and
adc
loope
pop
and
xor
icebp
add
test
mov
cltd
add
addl
test
adc
jnp
decl
inc
sub
jno
mov
xchg
in
add
xchg
mov
and
xchg
push
jne
lcall
iretw
jne
out
bnd
nop
jmp
rol
popa
data16
in
filds
dec
frstor
das
ljmp
add
xchg
test
sbb
or
insb
dec
and
add
in
mov
lahf
dec
sti
add
jae
sub
jg
arpl
push
das
xor
adc
arpl
ja
mov
xor
pop
daa
dec
and
inc
jae
dec
insl
in
xor
push
lock
dec
sbb
add
push
daa
imul
xchg
jl
xchg
and
popf
inc
pop
mov
pusha
jle
sub
les
decb
leave
imul
cmp
daa
insb
addr16
jae
nop
sbb
xchg
mov
mov
shrb
dec
pop
in
and
lahf
dec
lock
jne
mov
mov
fmull
adc
xchg
sbbb
mov
fldz
mov
lahf
cwtl
xor
adc
mov
xchg
imul
movswl
inc
orl
pop
push
and
cli
cs
xchg
rcrb
inc
std
pop
rcr
bound
cmpsl
rorl
sahf
xchg
lahf
inc
iret
aad
test
data16
dec
mov
jae
nop
pop
fwait
aas
imul
mov
aaa
mov
add
imul
test
jmp
outsl
popf
test
jnp
test
cmp
in
mov
mov
stc
sbb
push
in
dec
shl
and
pop
out
lods
jae
inc
ret
and
lds
arpl
ja
mul
mov
inc
mov
mov
sub
mov
dec
mov
cmpsl
cmp
xor
out
fildll
sbb
mov
mov
mov
push
and
jae
or
cltd
je
mov
pop
sbb
outsl
xor
cmp
push
jl
imul
mov
add
decb
cmp
cmp
adc
les
sub
cltd
loope
cmpb
push
dec
mov
ja
inc
pop
jns
add
jg
mov
shlb
sti
iret
mov
sarb
popa
mov
and
dec
mov
xchg
cmp
add
xor
and
pop
inc
rclb
movsl
mov
inc
dec
mov
insb
fmull
adc
xor
dec
xchg
mov
int
js
adc
cld
imul
rcrb
pop
adc
push
mov
jnp
lret
icebp
cmp
test
jl
popf
dec
mov
and
jl
in
cmp
push
nop
mov
cmpsb
and
xchg
bound
faddl
shrb
and
gs
sbb
cmpsb
stos
cmp
lea
mov
cmp
mov
xchg
mov
cmpsb
andl
fstpt
das
es
mov
insl
aam
or
daa
ror
xchg
ljmp
lods
in
add
dec
ret
sub
leave
jecxz
mov
test
xor
mov
movsl
adc
call
or
out
mov
sbb
xor
pop
pop
repnz
out
repz
cmpsb
adc
cli
loop
outsb
xor
xchg
cmp
xor
jno
xchg
pop
clc
mov
out
xor
xchg
adc
fiaddl
shrb
repnz
jmp
xchg
adc
ljmp
ret
test
pusha
xchg
push
fnstenv
in
mov
mov
call
add
loope
ret
pop
movsb
inc
pusha
loope
mov
xchg
lret
loopne
dec
je
lock
push
cwtl
loope
add
cmp
into
cwtl
cwtl
lods
xchg
pop
fstl
stos
lcall
lods
cmp
lahf
out
pop
scas
mov
int
lahf
pop
lds
imul
idiv
dec
sub
test
fildl
inc
xchg
pop
mov
or
add
push
rolb
stos
les
push
je
or
movsl
jg
and
adc
and
push
push
data16
mov
sahf
xor
xchg
push
mov
sbb
xchg
add
sahf
mov
mov
out
push
sbbl
insb
loope
mov
jmp
inc
out
or
into
mov
xchg
incl
call
dec
and
pop
lods
fdivs
sahf
leave
lret
dec
push
sub
notl
shr
imul
cs
shrb
xor
xchg
popa
insl
jae
xor
mov
mov
bound
repz
or
push
in
mov
shlb
mov
mov
or
mov
xchg
shlb
jae
cmp
ret
fucomip
xchg
add
push
mov
push
xor
mov
jnp
inc
xchg
into
xchg
leave
mov
dec
fcomps
xchg
add
rclb
jne
push
mov
loope
mov
mov
sahf
stc
imul
cmp
mov
cli
mov
cmc
push
jmp
inc
mov
incb
test
xchg
test
movl
aam
adc
push
pop
xor
fs
stos
mov
xchg
dec
mov
add
push
sbb
lea
in
and
adc
pushf
adc
iret
adc
sub
add
xchg
rcrb
sub
shrb
enter
pop
stc
mov
dec
and
fildll
jnp
cmp
rorb
pop
cmp
dec
inc
repnz
dec
clc
inc
pop
sar
add
jb
sbb
lea
mov
bound
std
rorb
outsl
adc
cwtl
stc
scas
sub
mov
stos
push
addr16
pop
cmpsb
mov
cld
ret
jnp
bound
mov
inc
leave
cmpb
arpl
outsl
inc
sbbb
dec
movl
mov
ss
mov
sbb
jmp
shlb
test
inc
call
insb
or
sbb
clc
shll
mov
js
aas
andb
test
loopne,pt
loopne
pop
push
inc
and
jmp
cmpl
mulb
add
mov
movb
ds
jnp
jo
push
ljmp
or
and
xor
mov
loopne
daa
adc
push
negb
inc
mov
push
push
icebp
ljmp
iret
aam
pop
fdivrs
mov
jmp
inc
mov
imul
sar
dec
jle
fs
hlt
mov
lock
cmpsl
aad
jecxz
cmc
loopne
fwait
lcall
orl
scas
out
pop
jmp
stc
cmp
or
sub
shlb
cmp
aas
sahf
in
movsl
inc
sbb
cmp
into
sbb
lahf
test
mov
pop
jb
sub
sarb
bound
sub
or
mov
push
push
bound
push
mov
cmp
cli
xchg
jmp
scas
sbb
dec
pop
or
xlat
orl
sub
cmp
pushf
mov
jge
adc
notb
ja
add
xlat
cmp
or
mov
loopne
jae
inc
dec
jbe
add
xchg
inc
aad
jp
lods
mov
xlat
jnp
dec
xlat
mov
xchg
popa
mov
loop
adc
dec
sahf
cwtl
decl
push
hlt
dec
in
or
lea
sub
mov
mov
aas
inc
mov
in
movsb
movsb
fwait
mov
pop
jmp
or
or
cmp
sub
popf
rolb
jecxz
imul
sub
fwait
sbb
repz
cmp
dec
sbb
insb
test
push
cmpsb
loopne
and
push
pop
aad
fwait
sub
out
je
mov
rcrb
in
jno
pusha
repnz
jmp
movsl
push
call
sahf
movsl
or
movsb
fidivs
jno
sbb
sbb
push
push
xchg
xchg
add
or
dec
jno
add
or
mov
sarl
or
and
rorl
testl
dec
jns
cltd
cmpsl
addps
jno
xor
mov
sub
mov
push
cmp
inc
fdivrs
test
sub
dec
push
scas
jmp
clc
xor
inc
int
jmp
adc
out
mov
stos
xor
loop
aaa
dec
repnz
or
jno
mov
jns
mov
mov
fcompl
fldt
mov
mov
push
data16
outsb
aaa
inc
xchg
xor
xor
pop
bound
pop
aam
jle
ret
das
dec
mov
aam
inc
inc
cmp
and
shrl
dec
stos
mov
add
pop
jne
into
js
hlt
aaa
ljmp
mov
mov
in
adc
icebp
push
jmp
dec
cmpb
mov
mov
jecxz
jg
mov
popl
push
imul
cmc
add
and
xor
dec
in
cmp
cmpsb
sub
xchg
addr16
pop
dec
xlat
add
add
shrb
push
sbb
fadd
inc
xlat
sbb
testb
shll
add
mov
jno
mov
sti
shlb
nop
movsb
pop
sets
cld
and
dec
fwait
outsb
adc
xchg
rcll
sub
adc
dec
sbb
cmp
nop
add
int3
stos
pop
sbb
call
in
xchg
pop
fldl
nop
int
pusha
mov
add
shlb
sbb
and
mov
out
pop
lods
hlt
ficomps
repz
imul
dec
icebp
dec
popf
adc
out
bound
sub
xchg
pop
test
xlat
push
push
push
add
lock
push
popf
adc
cmovo
mov
mov
ja
imul
add
testb
mov
jne
and
sub
xchg
addl
cmp
jge
std
sbb
lock
push
lcall
dec
pop
inc
add
inc
shlb
outsl
xchg
cmp
js
inc
and
es
mov
in
arpl
mov
inc
ss
push
adc
push
or
insb
out
mov
jbe
inc
or
scas
jecxz
jbe
push
pop
cmc
es
rcr
adc
pop
shl
fadd
sub
or
lods
sbb
or
pop
pop
clc
mov
inc
mov
dec
pusha
inc
fldl
daa
pop
jo
rcr
bound
inc
jmp
push
loopne
movsb
fsubrs
ljmp
hlt
imul
and
cmp
mov
test
loop
in
or
das
mov
int3
or
push
dec
aas
out
sub
fstpt
rcr
pop
jmp
jp
out
nop
rcrl
pop
add
lea
std
add
in
sub
dec
cmp
into
icebp
movsb
testl
repnz
cld
jp
stc
or
sbbl
testl
cltd
xchg
pop
lods
lods
outsl
shrb
push
mov
jno
aas
dec
nop
xchg
adc
cmp
stc
inc
jmp
mov
mov
cmc
add
xor
fucomi
scas
movq
mov
push
out
shl
and
cmp
push
insb
pop
inc
cmp
jns
lcall
jbe
lds
sub
and
lods
pop
cltd
int
nop
test
and
test
test
in
xor
ja
shll
xchg
push
jmp
fwait
pop
jo
rcrl
inc
xchg
xor
mov
mov
sub
loope
mov
imul
jae
subb
pop
jnp
or
jmp
sti
mov
std
sub
loopne
or
lcall
cmc
add
or
or
adc
out
jbe
nop
jae
mov
cmc
ror
add
add
in
xlat
repz
jno
push
xchg
push
fcmove
cmpsl
xor
xor
and
sub
fdivl
xor
adc
mov
cmpsb
arpl
dec
push
out
lea
dec
mov
jno
in
out
and
xchg
dec
cmpsl
dec
cmc
fdivs
pushf
xchg
mov
sbb
sahf
mov
imul
rcrl
inc
jmp
or
adc
and
mov
aas
insl
test
mov
inc
iret
nop
jb
adc
xchg
loopne
add
xor
std
xor
pushf
xor
and
mov
insb
fdivs
xchg
jp
sub
iret
imul
add
push
push
lock
push
insl
push
mov
cmpl
sbb
cmp
mov
xchg
sub
and
rorl
adc
dec
and
lods
mov
scas
ljmp
sub
in
push
fiaddl
mov
pop
xchg
hlt
sbb
dec
mov
in
mov
pushl
out
and
push
and
das
dec
jle
fwait
popa
fistps
or
insb
sahf
ljmp
lods
cwtl
stos
jnp
pop
inc
enter
mov
cmc
addb
inc
lahf
dec
xchg
adc
jle
push
adc
enter
or
xchg
shr
sbb
bound
add
mov
dec
nop
cmp
int3
mov
ret
push
sub
scas
cmp
mov
add
add
sbb
jle
in
xor
test
xor
cmc
add
dec
mov
insb
xchg
fbld
pop
sub
jbe
sti
das
insl
lods
push
in
inc
inc
xchg
repnz
jle
pushf
arpl
aaa
rclb
fsubrl
adc
adc
sub
inc
mov
cmp
jle
sub
add
imul
out
mov
lods
jo
iret
adc
pop
add
mov
xchg
push
js
sbb
inc
cld
jle
test
out
jbe
mov
mov
lret
sub
mov
sbb
incb
aam
or
mov
pushf
test
out
push
push
std
mov
adcb
fstpt
jnp
jb
adc
sti
gs
sbb
stos
and
jb
push
cs
inc
mov
xorb
mov
scas
sbb
xchg
mov
cwtl
fdivrs
out
push
add
jge
and
das
jbe
daa
mov
dec
dec
imul
int
fadd
mov
jo
stos
dec
fs
push
mov
test
push
shlb
int
leave
sti
add
shll
mov
xorl
sbb
leave
sbb
xchg
sbb
xchg
sub
gs
cmp
in
cmp
pop
xchg
jne
xor
and
lods
sbb
negb
jbe
pop
jns
ljmp
sbb
jns
jbe
and
lea
fsubrp
in
xchg
lahf
xchg
add
pop
jne
rclb
jno
loope
cwtl
movsb
pop
inc
cmc
inc
dec
loopne
movsb
cmp
mov
jb
adc
jmp
inc
xor
call
out
xor
nop
scas
jbe
lock
mov
mov
xor
ds
lcall
add
lea
push
loope
push
pop
insb
cmpsl
mov
mov
xchg
cmc
xlat
dec
adc
aam
inc
hlt
jbe
cmpl
pop
xchg
test
cmc
jecxz
sti
test
sbb
push
loope
push
sub
cltd
lcall
jnp
ror
fs
add
cmp
cmp
scas
test
pop
sbb
xlat
lea
inc
movsl
jns
jns
or
ljmp
aam
xor
dec
pop
adc
push
add
rcll
cltd
pop
mov
or
mov
std
inc
insl
mov
inc
jl
sub
pop
sbb
sbb
imul
roll
enter
fistpl
pop
pop
mov
mov
cmpsl
add
sbb
mov
sbb
inc
divl
pop
fiaddl
loope
mov
lods
insb
push
or
aas
push
inc
jmp
sbb
lods
pusha
out
bound
dec
imul
aad
add
mov
jp
iret
dec
mov
cmpsl
bound
jp
cld
pop
adc
ljmp
and
mov
int
and
jg
sbb
cmpsl
lds
adc
jno
push
mull
add
fstpl
shl
dec
sub
fistps
fxch
lods
pop
stos
cmc
jne
push
std
mov
lea
add
jbe
movsb
xlat
mov
jne
popa
xchg
scas
sti
xlat
inc
inc
gs
jp
ret
xor
sbb
dec
out
jmp
and
std
and
lret
enter
mov
std
pop
repnz
xchg
xor
outsb
dec
cmp
mov
test
in
imul
and
sub
adcb
mov
out
jb
sbb
test
push
cmp
inc
push
fdivl
inc
sub
enter
cmc
data16
pop
ret
les
loop
mov
pop
lcall
add
adc
movsb
aas
jge
arpl
and
mov
jecxz
pop
cltd
daa
xchg
repz
sbb
out
aas
popf
les
dec
mov
pop
inc
icebp
stc
inc
insl
outsl
test
sarl
nop
push
loopne
lcall
dec
les
cmp
test
div
sahf
push
addb
inc
inc
sbb
mov
xchg
icebp
shll
popa
mov
push
lahf
dec
and
push
pop
out
mov
fadd
xor
pop
inc
sub
pop
xlat
xchg
dec
imul
pop
add
clc
aas
je
or
sub
xor
pop
pusha
dec
mov
jmp
sahf
inc
sbb
test
cld
add
test
push
test
pop
out
rorb
cmpsb
xchg
stos
test
inc
mov
cmpsb
push
or
loopne
adc
cmp
and
neg
adc
push
sub
xchg
lahf
je
or
dec
bound
xchg
add
scas
filds
pop
mov
ret
subl
fwait
jb
xchg
sub
mov
rolb
das
cmp
add
xor
sbb
or
jl
sbb
jo
lret
fwait
in
aaa
movsb
xor
fwait
repnz
out
mov
cmp
sbb
sbb
ja
test
into
push
sbb
inc
ss
jns
dec
xchg
sbb
aam
rolb
icebp
sub
mov
add
test
es
sbb
stc
cmc
inc
cmpsb
int3
sti
dec
jle
xchg
imul
gs
lret
lds
lcall
jae
out
or
cltd
out
outsb
movsl
sub
xchg
ljmp
lock
mov
mov
icebp
and
sub
pop
push
lds
test
std
mov
mov
push
push
shrb
imul
sbb
jo
imul
mov
pushf
sbb
mov
imul
popa
out
iret
in
push
hlt
out
mov
ja
sub
out
mov
insl
and
cmc
cmp
jnp
lds
xchg
push
mov
lock
jbe
xchg
xor
in
scas
push
sbb
mov
xchg
mov
out
jecxz
dec
pop
int3
ret
popa
jne
in
js
lods
je
dec
push
cmp
sbb
fisttps
mov
imul
movsl
aaa
push
fdivrs
sub
inc
mov
fs
xchg
sbb
aam
mov
fwait
out
jns
cltd
out
or
lea
popa
ja
addr16
popf
incl
pop
dec
push
mov
dec
in
repnz
test
push
out
mov
xor
mov
data16
push
mov
cmp
popa
iret
and
outsb
adcb
or
pop
imul
adc
push
int
fdiv
pop
xor
mov
jmp
push
xor
or
mov
sbb
fbld
pop
push
push
std
js
jle
adc
dec
jns
push
stc
jo,pt
jle
xchg
dec
imul
dec
pop
iret
jmp
popa
popa
inc
mov
sti
xchg
nop
jb
xor
loopne
lods
scas
cmp
push
adc
jmp
inc
test
mov
inc
fcmove
mov
cmp
ficoml
xor
sbb
xchg
imul
sbb
lret
add
cli
lods
aad
addr16
pusha
fildl
adc
or
jnp
push
cmp
ljmp
out
adc
ljmp
mov
lds
sarb
xchg
mov
mov
popf
mov
jecxz
jg
fsubs
fbstp
adc
in
sbb
repnz
dec
xor
mov
add
jmp
addr16
mov
jne
add
dec
iret
jno
mov
roll
push
sub
jle
enter
call
clc
sbb
fcoms
sbb
lret
aaa
push
jle
mov
fildl
repnz
dec
or
inc
fisubrs
push
test
call
fs
call
push
xor
ret
mov
fwait
and
cltd
lock
mov
bound
mov
add
add
out
xchg
ja
sub
or
push
jg
jo
pop
mov
xor
popf
insb
pop
ja
and
sbb
and
or
call
out
inc
hlt
mov
and
rolb
mov
mov
and
push
int3
pushf
mov
ret
xchg
bound
add
insl
sbb
es
addl
jecxz
push
xchg
jl
jge
pop
mov
jno
inc
adcl
loopne
and
jmp
inc
in
mov
cmpsb
outsb
ljmp
inc
jns
mov
mov
sbb
xlat
sahf
jle
mov
je
jp
add
test
mov
mulb
jmp
mov
push
mov
insl
mov
cmp
push
push
ja
in
inc
inc
jne
pop
or
push
add
notl
je
jge
xchg
pop
xchg
aam
jmp
or
shll
cmp
sbb
hlt
adc
addr16
inc
inc
mov
push
pop
lods
sub
loop
cmp
bound
cmp
inc
insl
cmp
cmpsl
sbb
mov
jne
daa
add
xorb
cmpsb
xor
pop
push
cld
rorb
ljmp
das
xorb
inc
int
and
and
fisttps
lea
sub
push
jle
mov
leave
int
or
cs
stos
jp
or
push
or
dec
mov
jmp
cmp
mov
add
fisubs
xor
dec
repnz
lods
pusha
inc
fsubrs
and
lods
jae
loopne
cwtl
or
dec
enter
aam
arpl
in
std
adc
inc
sub
scas
std
cld
mov
pop
xchg
mov
pushf
pushf
es
fwait
in
fistpll
loopne
int3
cmp
dec
loope
jg
inc
pop
pop
jns
fwait
xchg
and
jb
jb
ja
pop
movsl
lret
adc
or
jmp
mov
xor
lods
test
jns
push
add
fimull
push
mov
inc
xor
addl
mov
add
fistpll
aam
cmpsl
mov
sub
imul
pop
lret
xor
sub
lods
ja
mov
xchg
scas
ljmp
mov
out
sarb
int
sub
sahf
sbb
test
jmp
mov
scas
shlb
fnclex
dec
sbb
adc
mov
add
mov
sub
or
ja
mov
xchg
clc
add
movsl
sbb
shlb
imulb
out
jmp
inc
pushf
mov
test
outsl
add
cmp
pop
or
xchg
and
loope
frstor
push
adc
cmp
lcall
into
adc
iret
add
and
aad
jle
inc
and
and
sub
push
cmpsl
clc
or
push
mov
movsl
mov
les
filds
inc
rorb
daa
mov
fidivrs
xchg
jno
inc
inc
dec
nop
mov
mov
and
xchg
clc
push
das
icebp
mov
xor
cmp
jp
mov
inc
test
jmp
push
inc
in
test
decl
inc
aas
scas
sbb
xchg
outsl
mov
pop
cmpl
int
push
or
repnz
pop
stos
call
enter
mov
and
adc
push
inc
mov
push
jmp
jns
lret
in
inc
test
mov
in
scas
in
divb
or
test
inc
cmpb
mov
mov
aas
test
arpl
int
xchg
mov
das
into
mov
fmul
test
roll
pop
lcall
jnp
les
push
mov
dec
inc
jmp
adc
cltd
mov
fistpll
and
fidivl
sbb
adc
int
mov
test
repz
pop
leave
mov
push
and
daa
pop
test
addr16
inc
lods
std
xchg
repz
lock
mov
mov
adc
or
into
mov
repz
rolb
fistpll
cmpsl
stos
in
ljmp
xchg
sahf
test
stos
lret
lret
ret
lcall
lret
adc
cmp
fistpl
enter
test
and
dec
std
lock
sbb
mov
pop
add
push
add
dec
mov
outsl
sarl
mov
push
in
inc
scas
sub
lret
out
test
dec
out
sub
adc
add
dec
mov
xlat
cmp
jno
jb
xchg
or
lods
add
cmp
and
or
mov
push
in
jae
dec
idivb
cmpsb
loop
add
add
mov
outsb
insl
lods
imul
jnp
das
mov
jbe
fwait
pusha
push
fcoms
mov
jl
insb
or
movsl
jno
out
out
stos
scas
imul
mov
loop
push
jo
std
aad
dec
add
mov
iret
insb
pop
cs
mov
jge
ret
push
movsb
jns
imul
mov
mov
sub
push
inc
nop
inc
mov
jp
or
aad
push
push
ljmp
int3
mov
loopne
or
pop
call
xor
sbb
sbb
repnz
out
adc
lahf
das
push
ja
inc
mov
pop
adc
push
ret
je
xchg
dec
test
leave
mov
mov
mov
sub
push
test
lahf
inc
dec
pop
testl
mov
pop
inc
inc
jecxz
xor
outsb
push
inc
cmp
mov
aaa
cmp
push
mov
fmuls
and
push
repnz
outsb
pop
and
xor
cmp
adc
and
push
lods
bnd
gs
repnz
test
push
sub
lds
in
adcb
movsb
cmc
fstl
adc
pop
jnp
iret
shrl
aaa
rclb
insl
push
push
jmp
dec
adc
mov
sbb
pop
lods
out
fucomp
pusha
jne
aas
test
jmp
orl
mov
jne
jge
pop
lcall
jmp
aad
cs
or
jge
mov
sub
mov
push
int3
pop
or
jecxz
cmp
push
push
sahf
sti
push
or
icebp
sbb
pop
outsl
dec
pop
rcll
xlat
sbb
xchg
jbe
push
insl
jbe
jo
dec
mov
or
aam
insb
xor
add
or
call
int3
sbb
aam
shlb
pusha
cli
push
jb
clc
and
adcb
ljmp
leave
popf
pushl
cmpsl
fsubrl
in
pusha
pop
or
jnp
adc
iret
jb
in
add
xor
cmpsb
pop
cmp
andb
arpl
jo
mov
add
stos
or
push
in
js
popa
push
jle
push
aaa
and
cmpsl
mov
and
dec
mov
nop
es
cld
xor
dec
or
fwait
push
jb
cmp
sub
mov
jmp
aad
adc
jno
sbb
cmp
sbb
sahf
pusha
mov
mov
repz
pusha
jp
xchg
inc
iret
mov
inc
jmp
mov
mov
subb
lds
nop
lret
mov
js
inc
push
jne
dec
push
sbb
in
dec
aas
or
push
and
sub
imul
movsl
lcall
call
pop
pop
shlb
push
push
insb
shlb
stos
mov
iret
leave
enter
iret
in
sbb
inc
push
and
lcall
dec
mov
mov
mov
pop
jno
lea
add
sbb
xchg
mov
or
inc
cltd
iret
xchg
cmpsl
and
idiv
or
insl
cs
fdiv
pop
arpl
xlat
push
cmc
adc
jge
sbb
int3
imul
orl
adc
clc
xchg
mov
mov
sahf
push
daa
adc
lea
fdivs
sbb
sbb
push
jb
mov
jge
inc
cmpsb
test
fstl
stos
in
mov
xchg
sbb
imul
inc
xchg
push
dec
sahf
inc
sbb
dec
adc
lcall
xchg
adc
stos
fsts
jnp
das
jp
or
jo
subb
mov
stos
push
sbb
testl
jecxz
sub
fldt
cmp
enter
inc
cwtl
fbld
inc
fs
and
stc
dec
sbb
push
clc
mov
enter
pop
pop
ret
inc
in
mov
sub
and
jge
sub
inc
lds
cmc
or
mov
mov
popa
add
cltd
sbb
cmp
data16
lods
repnz
dec
sbbl
xchg
adc
aam
pop
test
xchg
sub
testb
sub
xchg
mov
mov
dec
clc
cld
lea
repz
enter
mov
inc
add
js
daa
enter
and
push
cmp
adc
pop
dec
pop
adc
pop
rcl
push
cmp
insl
xchg
or
in
jbe
lock
leave
lahf
lea
scas
repnz
sub
push
sbb
dec
sub
dec
lret
faddp
adc
jo
nop
rsm
lahf
shll
out
dec
dec
std
push
dec
jns
std
mov
sub
clc
sub
jno
and
adc
adcl
cmp
mov
cmc
scas
dec
inc
xchg
mov
ljmp
mov
out
or
mov
inc
xchg
adc
cli
add
mov
lods
push
mov
inc
mov
xchg
fisttpl
pop
leave
mov
movsl
in
arpl
sbb
addb
xor
in
mov
mov
sub
shlb
pxor
and
andb
mov
fsubs
and
daa
pop
jbe
aad
sub
jp
ja
negb
daa
inc
mov
rorl
mov
lds
cmp
test
psrad
test
jp
les
sbb
push
cmpsb
push
adc
mov
mov
xchg
push
add
stos
pop
jbe
imul
add
jno
icebp
pop
and
adc
cmp
jle
je
pusha
xorb
add
mov
and
fchs
es
mov
mov
mov
in
fdivr
jb
sub
push
das
add
or
adc
insl
pop
xchg
push
xor
inc
xchg
pop
lahf
inc
popf
outsb
sbb
pop
or
pmaxsw
dec
and
imul
add
ljmp
push
jecxz
loope
push
movsb
scas
addl
decb
jo
dec
cmp
cs
and
dec
sbb
insl
into
inc
idivb
outsl
jmp
mov
mov
sahf
sbb
push
fwait
and
and
add
leave
addl
push
jne
jns
sbb
and
add
push
jae
out
into
push
or
xchg
xchg
xchg
lock
pop
jl
test
pop
xchg
pop
pop
sub
mov
pop
adc
rcrl
lret
jae
lcall
ss
xlat
jl
loop
test
mov
mov
mov
mov
aam
jg
in
notl
adc
push
and
mov
orl
xchg
mov
jecxz
jle
insb
push
jge
mov
fcmovnbe
and
insb
mov
xchg
lcall
js
xchg
aas
push
xchg
daa
enter
or
push
push
dec
push
mov
inc
push
sub
rdpmc
aam
mov
or
lds
adc
imul
xorl
cmp
jno
jns
divb
stc
bound
mov
sub
fyl2xp1
xor
add
push
and
jg
loopne
ljmp
push
push
shlb
push
outsl
fistpl
in
ret
adc
cmpb
pop
out
insb
jle
lret
inc
rcr
lods
repz
bswap
call
mov
xorl
nop
ffree
xchg
sbb
cmp
das
xchg
ljmp
arpl
lea
ss
ret
mov
adc
and
das
add
cmp
pop
push
into
cmp
subb
mov
addr16
clc
dec
sub
scas
xor
leave
repz
ds
icebp
sbb
or
push
mov
ds
out
xchg
dec
mov
and
aam
out
adc
sub
pop
inc
xor
push
mov
fs
jns
sbb
pop
adc
adc
fmull
les
pop
xor
lods
insb
sahf
add
imul
jg,pt
pusha
xchg
scas
cmp
out
sbb
ficomps
dec
dec
cwtl
inc
push
movnti
shll
imull
jb
jns
aaa
hlt
insl
cmp
fldcw
ljmp
dec
xor
test
ret
add
insb
dec
pusha
popa
lret
xor
cmp
cmc
xor
insb
fldl
iret
sub
rcll
fldenv
pop
mov
mov
lret
pminub
std
enter
or
or
arpl
fiadds
jmp
mov
mov
or
cmp
or
fnsave
jbe
insl
or
and
jmp
aam
mov
js
dec
or
imul
sub
pop
xchg
sbb
cmpsb
sbb
push
inc
cmove
fidivs
push
adc
sarl
pusha
add
xchg
loopne
lods
inc
ja
insb
adc
sarb
outsl
shll
fistpl
xchg
test
lods
shll
lds
xchg
cli
mov
jecxz
dec
imul
push
and
in
mov
pop
mull
push
test
push
pop
fs
xchg
test
pusha
xchg
adc
cli
xor
call
pop
cmpsl
dec
adc
xchg
adc
int3
cld
sbb
out
lcall
jne
repnz
or
mov
ficoml
shlb
adc
pop
inc
jno
sub
movsl
aas
jmp
xor
fwait
loopne
sbb
lock
std
push
inc
push
out
es
cwtl
xor
jge
call
xor
ret
mov
pop
ret
cmpsb
lds
sbb
dec
cwtl
dec
int3
push
lods
ss
fsubrs
stos
les
jae
fs
lea
fsubs
sbb
add
add
int3
aam
or
dec
push
std
inc
in
mov
push
in
filds
jbe
pop
lcall
sarl
lret
fwait
into
ret
sub
jbe
das
lcall
pusha
jmp
int3
pusha
jmp
roll
ljmp
movsl
or
jmp
push
dec
fildl
mov
xor
add
iret
movl
xchg
dec
inc
ret
mull
lock
pop
out
jle
xchg
mov
jbe
xor
mov
mov
or
add
pop
shll
xor
out
cmp
xor
xchg
and
int3
ljmp
pop
xchg
inc
cmp
enter
mov
inc
mov
cs
pop
cmp
push
mov
inc
enter
into
add
out
into
sub
aam
cmp
fwait
pop
mov
decl
push
mov
dec
xchg
and
push
push
daa
mov
mov
pusha
das
fs
adc
push
push
xor
add
ret
jge
push
push
stos
add
daa
push
mov
dec
daa
xor
sub
lret
int
das
xchg
lahf
fdivrp
ret
in
pop
mov
lahf
lds
outsb
mov
push
or
sub
sbb
pop
push
jne
test
push
cli
inc
xchg
dec
pop
lahf
jecxz
fcoml
mov
adc
xchg
fisubs
sarb
pop
ljmp
dec
pop
xchg
test
stc
mov
lahf
mov
aas
sbb
push
xor
xor
pop
pop
ja
in
sub
pop
stos
mov
arpl
and
add
add
dec
xchg
xchg
xchg
jb
cmp
push
rdmsr
cmpl
negb
in
pop
lock
push
fnstsw
aam
add
scas
xor
setl
or
push
int
xlat
jg
scas
ja
imul
test
outsl
es
mov
push
fcomp
je
pop
mov
pop
movsb
inc
push
cs
sbbl
pop
mov
test
mov
addr16
add
test
push
jmp
ss
jns
add
dec
cmp
das
dec
lea
mov
push
cmpsl
mov
dec
xchg
fnsave
out
in
xchg
dec
std
test
shrb
dec
filds
jp
test
cmp
test
les
cmp
aaa
sahf
stos
jg
push
mov
or
sbb
or
cli
mov
sbb
jecxz
or
jmp
push
xorl
bound
sub
out
movsb
movb
jg
xor
mov
cs
movsb
inc
push
lret
insl
pushl
mov
into
xor
or
fidivrs
mov
dec
shlb
ja
sub
cmpb
pushf
lret
out
or
cmc
push
inc
call
sahf
push
cltd
mov
lret
push
aaa
popf
arpl
jb
in
cs
mov
leave
cmpsl
test
sub
inc
sahf
inc
testb
cmp
mov
cmp
mov
sbb
cmpsb
xlat
xor
call
mov
rorl
repnz
inc
sub
mov
xor
xchg
mov
add
mov
sbb
ret
dec
into
cmp
inc
jl
std
shrb
cmpsb
aam
pop
cltd
mov
cmpl
sub
add
out
mov
lods
jo
jns
cmp
data16
xlat
sbb
repz
cmpsb
or
sub
js
insl
insb
cltd
call
inc
movsb
add
fs
mov
popf
jae
mov
repz
rcrl
xchg
push
ret
mov
push
movsb
and
jno
mov
dec
shr
sub
sbb
pop
or
daa
hlt
shlb
jmp
inc
repnz
cmp
add
imul
mov
jge
test
mov
fimuls
xchg
nop
bound
adc
inc
aad
push
add
lret
cwtl
xor
or
dec
push
dec
mov
push
add
popa
inc
mov
xor
xchg
or
xlat
xlat
arpl
dec
mov
push
mov
cld
inc
lahf
cmp
lock
repnz
adc
inc
push
imul
dec
jnp
mov
mov
test
je
bswap
rolb
nop
pop
pop
insb
lods
int3
jns
fyl2x
sub
shr
cwtl
add
lahf
ficomps
dec
das
fstp
and
push
std
scas
mov
mov
ds
pop
aam
mov
mov
mov
and
and
lret
add
dec
cmp
mov
call
mov
mov
fistl
rorl
in
loope
bound
aaa
push
push
pushf
das
jo
iret
xchg
insl
mov
push
lret
cmpsb
xchg
fisubs
pushf
fimuls
mov
mov
scas
xorl
lods
sbb
mov
jbe
lret
iret
mov
lcall
std
lods
mov
mov
sbb
and
outsb
divl
push
mov
xor
inc
lcall
jb
fcmovnu
xchg
lahf
xor
std
fs
aam
cmp
aaa
or
cmp
repz
repz
cmp
inc
mov
ds
cli
mov
es
dec
mov
movsl
idivb
in
repz
call
mov
add
xchg
test
sub
xchg
xor
mov
out
pusha
inc
cmpsb
lret
xchg
jno
jmp
into
and
mov
test
pop
gs
push
test
cmp
dec
or
or
push
ja
cli
xorl
testb
sub
lods
jmp
aas
sub
aad
mov
mov
adc
jle
mov
int
lret
sub
push
or
mov
adc
sbb
xchg
mov
test
push
pop
mov
loop
pop
xor
jbe
ss
leave
stc
add
mov
hlt
test
sbb
cmp
lods
inc
cld
lods
sub
dec
fldenv
test
movsb
andb
or
or
mov
mov
movsl
push
andb
push
add
aaa
insl
pop
lea
in
ljmp
dec
lret
and
sub
push
mov
out
or
pop
test
mov
jae
leave
aas
adc
call
adc
cmp
jmp
daa
add
xlat
adc
mov
mov
inc
mov
mov
rcrb
adc
test
lock
xchg
sub
les
xchg
shlb
xchg
cmp
adc
ret
inc
stos
mov
or
ss
repz
fs
out
pop
or
xlat
mov
dec
dec
and
clc
push
xchg
and
and
les
lahf
adc
cltd
add
sub
xlat
sub
and
add
test
enter
xchg
ss
inc
ret
cmp
jno
jb
jmp
jb
insl
movsb
mov
aaa
repz
stos
ja
ficomps
imul
pop
xchg
jmp
test
or
inc
arpl
ja
pop
loop
xchg
mov
lock
arpl
sub
fsts
sub
mov
cmpsl
cmp
js
arpl
scas
jmp
inc
fdivrs
lret
adc
stos
or
dec
jge
or
or
subl
xor
jnp
sub
push
leave
push
sbb
filds
cld
or
es
icebp
or
inc
cmp
int3
sub
inc
cltd
cld
jle
add
movb
fdivs
fdecstp
adc
int
loop
lret
loop
lret
rclb
jge
push
push
push
or
dec
inc
inc
insb
rolb
repnz
sbb
out
push
push
lret
out
lock
pop
dec
movsl
bound
push
dec
xchg
in
fldt
push
es
mulb
fwait
test
hlt
xchg
sub
int
out
or
enter
jb
mov
add
push
sub
cmpsb
outsl
fcmove
int3
or
pop
xchg
add
in
ss
lahf
cmp
jb
lret
int
sbb
ret
int
cmc
jne
push
add
outsb
inc
sti
ja
jo
mov
sbb
mov
pop
inc
cwtl
mov
lods
adc
add
pop
adc
test
add
xorb
in
rcll
imulb
jecxz
psubsb
in
fbstp
add
mov
repnz
xor
scas
xor
data16
jmp
jle
mov
fisubrs
fucomp
pop
lcall
arpl
sarb
mov
cli
imul
daa
cmpsl
and
xchg
and
nop
imul
movsb
sbb
jo
mov
jle
xchg
cmp
add
or
scas
orb
or
loop
cld
or
mov
jbe
cmc
sub
hlt
fdivrs
jne
lahf
mov
aaa
js
shll
mov
xor
jmp
jecxz
sbb
out
out
push
loop
inc
sub
lea
sub
loopne
cmp
setb
movl
push
jecxz
and
jne
xor
je
jg
mov
cwtl
sbb
adc
cmp
mov
enter
mov
sub
and
fidivrs
mov
movsb
cli
rolb
sub
xor
aaa
and
in
stos
stos
mov
cld
sub
add
push
cmp
out
les
fwait
stos
ret
shll
add
push
and
mov
mov
or
fnstenv
repnz
movsl
popa
and
clc
inc
add
inc
cmp
sbb
loop
pop
popa
outsl
sub
inc
loop
jb
adc
mov
push
inc
sub
js
dec
dec
sbb
pop
mov
fmuls
pop
sub
rcl
xchg
scas
popf
pop
je
data16
sub
or
mov
ja
adc
daa
ss
mov
bound
rcrb
std
jecxz,pt
shrb
scas
cli
addb
inc
mov
inc
push
std
push
or
addr16
ja
pusha
loop
inc
test
scas
inc
push
mov
fwait
cmp
ss
mov
int
jmp
scas
imul
cmp
fs
outsl
jecxz
lahf
cmc
push
mov
push
mov
xor
mov
iret
clc
adc
fdivrs
cmpsb
es
sbb
fidivl
mov
jbe
rorl
in
shll
fimuls
iret
cmp
dec
adc
push
dec
andb
pop
movsb
dec
mov
ret
popf
add
adc
sbb
dec
pop
xlat
dec
loopne
add
roll
cmpsl
and
cwtl
jbe
xchg
xchg
add
mov
xchg
inc
add
in
popa
xor
or
js
jp
xchg
pop
mov
pop
add
idivl
or
cmp
leave
push
lahf
out
xchg
lret
pop
dec
movntq
scas
mov
mov
mov
test
out
bound
jl
push
test
jo
pop
push
push
lods
sbb
iret
lret
test
add
sub
lods
adc
xchg
dec
push
push
xchg
xchg
add
add
mov
pop
fisubl
mov
fsts
cmp
pop
mov
fwait
mov
out
in
arpl
xor
adc
int
lods
push
rorb
or
dec
fwait
mov
aam
mov
outsb
inc
dec
xchg
push
add
iret
lods
movsb
xchg
setp
push
jo
fistpl
imul
aad
ficoms
add
mov
jo
adc
jecxz
ljmp
jne
icebp
aad
xlat
mov
scas
ljmp
dec
jae
ds
xchg
mov
imul
sbb
es
or
loopne
dec
shrb
icebp
shr
jb
dec
or
inc
or
gs
and
push
mov
push
insl
mov
fcomps
dec
inc
and
jae
mov
bswap
xchg
loopne
imul
rcrb
add
dec
shl
sbbl
orb
lcall
scas
or
mov
inc
mov
mov
outsl
in
imul
popa
loop
push
mov
cli
mov
push
mov
inc
lock
repz
icebp
iret
pop
sti
mov
jae
push
repz
mov
or
xor
sub
stc
sub
out
xor
testl
fcmovne
sarb
lods
out
sub
js
lahf
dec
jg
clc
imul
adc
lods
clc
sbb
inc
xchg
dec
cmpl
loop
xchg
outsb
loop
lds
cltd
inc
cmc
data16
and
divb
test
mov
cmpb
addr16
lods
sub
int
pop
std
jl
ds
mov
adc
mov
pushl
jmp
test
jb
jae
add
sub
lret
test
xchg
rclb
mov
and
pop
in
jl
jle,pn
and
out
in
jb
mul
movsb
out
sub
and
movsb
cmp
mov
int3
enter
and
add
test
adcl
fisubs
lods
jecxz
fcomip
fs
dec
add
cwtl
sub
push
adc
jg
jno
repnz
mov
call
add
mov
pop
xor
push
vpunpckldq
stc
sub
test
lahf
mov
cmpsl
mov
mov
mov
pop
outsb
xor
aaa
mov
cmp
lea
or
je
scas
xlat
mov
fsubs
mov
outsb
pop
scas
mov
mov
sbb
xor
sbb
popf
in
mov
add
dec
stc
mov
adc
jmp
hlt
aad
bound
cli
inc
in
pop
aam
ret
pop
leave
push
iret
andb
mull
dec
push
out
sbb
flds
lret
adc
js
mov
pop
aad
mov
sbb
test
cmp
call
xor
and
jae
stos
or
imul
or
xchg
stc
lock
stos
inc
imul
mov
fiadds
cli
jecxz
and
test
subb
adc
cli
or
call
es
mov
sahf
jl
sub
xchg
mov
pop
cmp
cmp
in
lahf
xchg
add
push
adc
ljmp
pop
aam
in
sbb
sbb
adc
jg
or
add
in
mov
aaa
cmp
hlt
cmp
hlt
and
jns
mov
cmpsb
add
push
mov
inc
iret
test
cmp
adc
or
push
sbb
cmpsb
nop
jle
std
jp
mov
hlt
cmp
dec
scas
pop
push
sub
adc
out
xchg
or
mov
and
dec
push
jmp
mov
pop
cmp
in
xor
push
decb
in
mov
lds
inc
xchg
xchg
int3
scas
xor
arpl
push
mov
andb
mov
inc
jg
call
loop
das
leave
testl
ds
aaa
in
mov
ret
lds
ljmp
clc
fidivrs
imul
dec
adc
inc
xorb
lcall
cmp
repz
sub
mov
lods
xchg
jae
adc
pushf
test
andl
mov
jmp
jno
popf
sub
jge
xor
icebp
fstl
mov
ficompl
mov
adc
push
fmull
stos
cs
scas
mov
roll
loopne
ljmp
cltd
cwtl
int3
mov
mov
pop
jecxz
aad
xor
jl
dec
popa
mov
mov
cmp
inc
add
adc
pop
rclb
in
sub
sub
jmp
push
dec
push
dec
in
into
in
mov
cmp
xchg
push
fiadds
add
push
cmp
in
insl
es
mov
sbb
sub
outsl
pop
test
push
incb
nop
jns
cmp
sar
jno
xor
inc
mov
loope
and
sub
fwait
jecxz
cmpsb
in
inc
mov
mov
dec
jge
leave
xchg
popf
out
xchg
sbbl
xchg
pop
clc
addr16
lods
or
pop
mov
adc
int
fsubrp
clc
mov
xchg
mov
test
dec
mov
adc
adc
jp
cmp
ret
insl
imul
xor
adc
stos
fwait
rorb
jl
call
adc
xchg
aas
inc
sub
cmp
pop
or
test
scas
cmpsl
adc
cmpsb
out
rcll
hlt
mov
sub
scas
sub
push
ret
cmp
imul
lcall
int
mov
mov
xchg
push
mov
fisubrs
jecxz
cmp
loopnew
pushf
daa
pop
shll
xor
stos
sbbb
mov
pop
fdivrl
lahf
test
in
sub
imul
or
add
sub
nop
daa
icebp
sbb
pop
or
stos
xor
push
scas
daa
fidivs
jmp
push
jns
pop
loop
hlt
xchg
aam
outsl
fwait
scas
sahf
iret
jns
lret
mov
iret
enter
repz
ljmp
ds
ljmp
adc
rcrl
push
adc
ss
pop
jmp
gs
scas
xor
pop
mov
dec
xchg
add
in
out
movsb
es
push
incb
or
jnp
pop
sti
nop
decl
test
rorl
clc
out
lret
out
mov
push
xchg
out
lods
jo
cwtl
or
mov
es
hlt
mov
mov
xchg
cmpsb
rorl
mov
push
cmpsl
cli
pop
fdivl
sbb
mov
xchg
aaa
mov
and
int
mov
sbb
pushf
in
std
sub
sbb
lds
adc
cmp
sar
es
les
and
int
adc
pop
xor
pop
and
aas
and
out
test
push
mov
and
lds
fst
or
xchg
mov
cmp
sbb
arpl
int3
add
pop
push
xor
mov
mov
fdivr
ret
in
enter
mov
sbb
fisubrl
push
aas
xchg
es
roll
add
int3
or
ss
mov
mov
or
cmp
inc
loope
imul
movsl
xor
cmp
lret
xchg
ss
movsl
jle
out
add
das
xchg
cld
adc
lret
arpl
jg
divb
imulb
enter
sahf
xchg
xchg
sub
cs
xor
lret
fbld
mov
popa
push
sbb
cs
pop
hlt
andl
insb
ret
and
mov
sarb
push
leave
dec
push
jmp
lcall
in
lret
rorl
out
push
ret
add
nop
push
je,pn
push
dec
adc
sbb
mov
icebp
outsl
inc
sbb
inc
fxch
sbb
fsubl
push
stos
shlb
or
les
sahf
sahf
adc
push
mov
shrb
and
sbb
test
fidivrl
cwtl
and
xlat
mov
in
add
dec
repz
sbb
sub
sbb
mov
outsb
inc
xor
cmp
adc
mov
out
pop
psrld
jecxz
dec
notb
lcall
pop
jl
mov
out
push
sarb
scas
in
outsl
call
cli
ljmp
lock
sub
incl
mov
or
rcrl
mov
pushf
dec
jmp
js
ficompl
xor
add
cmp
xor
testl
popa
popa
push
notb
xchg
notb
cs
sub
push
icebp
shrl
and
fcmove
aas
out
aas
cltd
or
push
xchg
mov
les
lock
cmp
ret
add
pop
pop
inc
cmp
incl
in
shrb
jmp
repnz
or
or
fmuls
sbb
sub
mov
push
aaa
lods
adc
fidivs
mov
shrb
sub
mov
pop
test
and
mov
inc
lods
ret
adc
lods
testl
fiadds
jb
jbe
icebp
out
add
out
mov
icebp
push
pop
mov
jne
push
adc
mov
xchg
push
fwait
sub
mov
pop
and
jecxz,pn
pop
xchg
cltd
xchg
lock
pop
pop
push
scas
cwtl
mov
in
push
mov
cmpsb
pop
in
nop
cwtl
jae
rorl
jnp
aas
ja
jecxz
push
push
inc
outsb
aad
sbb
mull
mov
call
pop
jns
bound
or
fsubl
pop
shll
jl
add
in
repnz
negb
inc
pop
in
ljmp
and
xchg
fmull
jnp
jmp
xchg
sbb
mov
add
and
push
xor
or
and
or
push
dec
or
imul
call
aaa
aam
sti
inc
js
bnd
mov
bound
enter
or
shrb
add
ficoms
hlt
push
aam
cs
jno
dec
lahf
lods
sarl
je
pop
sbb
shll
xchg
mov
cmpsl
nop
jno
fdivr
cmpsl
pop
pop
xchg
ret
loopne
pop
outsl
testl
outsl
sarb
push
mov
cmc
fcmovne
roll
ljmp
into
mov
push
sbb
cmpsl
negb
addr16
push
int3
cmp
clc
cmp
ds
xchg
scas
or
clc
mov
fsub
xor
sarb
and
popf
cmp
sbb
fwait
adc
call
in
jg
jecxz
mov
jmp
shrb
dec
aas
cmpsb
jne
nop
in
pop
push
iret
cld
add
jmp
clc
cli
inc
pop
test
not
out
repz
jp
lahf
stos
fcoml
fadd
sbb
movsl
in
and
dec
adc
mov
gs
mov
jge
pop
mov
dec
cmpb
je
les
sbb
imul
xchg
xchg
ds
fildl
jmp
fsubr
sub
insl
in
in
or
push
stos
loopne
or
pushf
pop
mov
js
mov
out
and
pop
dec
in
jle
and
sub
sub
jecxz
adc
adc
push
mov
int3
mov
add
jns
dec
jo
mov
mov
pop
mov
sarl
jl
frstor
rolb
add
fiadds
adc
in
ljmp
dec
pop
scas
aam
inc
test
push
sti
jnp
stc
push
xchg
insb
pop
rclb
aaa
imul
stos
lods
cli
sub
sbbb
into
lret
dec
shr
xchg
push
and
out
iret
clc
jo
jmp
mov
xlat
add
in
in
mov
fwait
lret
pop
fwait
nop
jno
stc
sbb
in
cmp
sahf
pop
and
jne
xor
cmp
lret
sbb
je
xchg
bound
sub
push
into
pop
loop
test
cmc
cmp
xchg
aas
lods
fwait
and
xchg
data16
add
pop
adc
shlb
adc
daa
xor
jne
xor
push
pop
mov
mov
dec
outsl
mov
loop
mov
stos
pusha
movsb
adc
neg
adc
leave
sub
mov
add
pushf
mov
adc
sbb
mov
popf
data16
mov
add
jae
cmc
fidivl
enter
aam
sub
insl
push
js
pop
add
mov
mov
test
inc
aas
mov
ficoms
cmc
adc
je
sbbb
push
andb
cmpsl
insl
es
cltd
inc
mov
or
insb
lea
movsl
xor
push
mov
sbb
jecxz
into
leave
add
mov
mov
adc
outsb
es
mov
fstps
xlat
mov
js
cld
std
pushf
lds
ljmp
xchg
pop
cmpsb
imul
sbb
add
shll
cltd
inc
sbbb
repnz
cltd
stos
jecxz
ja
aad
pop
push
or
adc
add
fsubl
mov
leave
out
push
cmpb
dec
adc
cmp
or
imull
fadds
insb
sbb
xor
shlb
pusha
test
xor
sahf
xor
sub
mov
fdivrl
je
fucomi
leave
jne
pop
js
jbe
rcll
sbb
push
cltd
scas
jle
add
jp
xlat
jns
test
test
pop
into
jle
jecxz
aam
je
out
jp
rcl
in
into
and
and
lock
and
enter
cltd
pusha
mov
mov
mov
add
outsl
repnz
mov
inc
flds
cmpsl
sub
mov
out
xor
add
imul
xchg
sbb
adc
push
sbb
stc
or
add
negl
popf
pop
push
or
push
push
shrl
movsb
jbe
cmp
insl
pop
mov
adc
test
push
jae
sub
addr16
dec
push
mov
pushl
fadd
push
adc
inc
aam
mov
out
xchg
mov
xchg
push
ffree
pop
enter
jno
mov
adc
xchg
adc
pop
mov
adc
cwtl
andl
xchg
iret
xchg
mov
fcmove
mov
adc
out
ljmp
mov
loop
popa
sub
and
mov
lea
fwait
adc
cli
sbb
fdivl
push
or
imul
mov
repnz
cmpsb
ret
mov
outsl
imul
aas
jo
add
inc
pop
fiaddl
add
push
daa
inc
push
mov
jns
outsb
jb
push
stos
jae
andl
push
inc
int
cmp
fisttpl
xor
xchg
or
jb
adc
neg
scas
fisubrs
into
sbb
loopne
mov
lret
add
andl
xchg
or
imul
movl
dec
jp
cld
rol
loopne
lret
and
inc
bound
ficoms
push
push
jl
push
les
sub
fisubl
sbb
call
into
outsl
jbe
and
cmp
push
into
jmp
push
jecxz
xchg
addr16
and
sahf
rolb
lods
and
jg
or
xor
fldl
inc
imul
outsl
add
enter
mov
mov
mov
and
and
std
out
test
and
jno
rorb
xor
pushf
mov
push
in
jnp
dec
sarb
loope
cmp
and
shl
mov
iret
mov
push
outsb
cltd
push
lods
pop
xor
sub
sub
hlt
test
push
inc
lock
mov
dec
jmp
jecxz
cmpsl
testl
je
inc
rol
lahf
fadd
mov
fs
adc
mov
mov
cli
mov
scas
xchg
std
mov
int3
sbb
and
lods
jp
mov
roll
dec
xchg
leave
dec
mov
pop
stos
cwtl
iret
xchg
inc
sub
lahf
lods
or
ret
sub
cwtl
add
xor
call
lcall
movsb
push
ljmp
sarb
mov
or
adc
push
jge
lods
add
push
cld
sti
mov
jg
daa
arpl
sbb
and
pop
arpl
popa
aas
arpl
push
xlat
lods
idiv
jo
or
ss
int
lahf
sub
into
push
xchg
mov
add
mov
pop
pop
pop
mov
mov
cmp
lret
adc
outsb
inc
xchg
mov
ret
popf
jge
add
sbb
add
insb
mov
add
inc
sub
loopne
popf
arpl
fnstcw
xor
inc
push
mov
jo
loope
incb
mov
or
ja
daa
xor
and
mov
and
pop
jmp
imul
push
out
das
in
push
and
inc
sub
dec
jb
das
cltd
and
dec
scas
lret
sti
aaa
mov
add
nop
loopne
push
lock
pop
and
bound
cmp
push
stos
cli
sbb
jl
into
repnz
or
xorb
dec
stos
push
hlt
test
push
subb
dec
hlt
mov
test
cwtl
cmpsl
sbb
je
lods
pop
lods
popf
cs
mov
jp
das
push
mov
and
sahf
mov
sar
repz
xlat
rcrl
push
es
das
scas
push
movsl
mov
cmp
lret
dec
mov
pop
push
sub
xchg
jb
xchg
shll
into
in
imul
and
push
mov
ret
lods
and
add
pop
lds
icebp
cltd
fcomps
xchg
faddl
xchg
or
inc
stos
aas
push
imul
shrl
aaa
adc
mov
sbb
mov
dec
mov
or
jg
outsb
fwait
mov
jecxz
mov
dec
inc
repnz
aaa
jg
icebp
cmp
and
jecxz
dec
icebp
mov
scas
ret
into
sbb
inc
lock
ret
leave
call
inc
in
into
or
fs
push
das
or
sub
mov
lods
xchg
pop
popf
pusha
fcoms
es
loopne
jo
push
fwait
adc
dec
cmp
pop
aas
rcll
xor
mov
lret
cmp
xchg
in
pop
test
push
xor
leave
sbb
fsubs
jne
or
lret
pop
mov
and
ficoms
movsl
push
sbb
stos
into
cmp
sbb
add
inc
movsl
adc
cmp
dec
pop
std
andb
icebp
jnp
daa
or
xor
cmp
sub
insl
out
mov
mov
pop
dec
hlt
mov
enter
cmpsl
cmp
movsl
aas
cs
pop
sbb
call
movsb
int3
mov
sarl
cmp
xchg
into
sbb
mov
dec
pop
fcomps
sbb
jmp
inc
or
outsb
andl
jno
test
mov
lret
pop
clc
and
sbb
fisubl
jg
jne
dec
ds
loopne
mov
pop
inc
or
adcl
pop
and
mov
rorb
and
std
sahf
cmp
not
sahf
xchg
jle
sbb
fmul
mov
adc
sti
add
rcll
fnstcw
pop
fs
jge
push
stc
clc
mov
xchg
mov
cld
movsb
fistpl
push
inc
cli
clc
jmp
movsb
adc
aaa
mov
int3
sbb
xchg
or
shrl
sbb
push
inc
dec
movsb
iret
xor
notb
cmpsb
lods
mov
test
outsb
outsb
xchg
out
dec
cmpsb
test
fldt
sbb
inc
push
jmp
addr16
push
movsb
and
mov
mov
ss
mov
sarb
int3
mov
adc
out
mov
movsb
xor
or
push
lret
xchg
addb
sub
xchg
inc
cmp
int
mov
pop
andb
aam
outsl
mov
pcmpgtw
pop
mov
xchg
daa
mov
sbb
jp
mov
popa
dec
sub
sub
insb
pop
sbb
movsl
cwtl
jo
jl
lds
push
nop
movsl
mov
push
mull
movb
lock
xchg
cmp
jns
pop
inc
mov
jnp
add
gs
inc
aam
repnz
mov
lods
mov
decb
into
mov
jb
pop
vaddsd
into
jae
or
inc
mov
dec
mov
add
pop
cmp
imul
sub
scas
shl
aaa
addr16
push
xchg
and
or
mov
add
lahf
add
clc
divb
out
lret
push
cmc
aas
inc
aam
push
rorb
daa
leave
sub
andb
nop
pusha
push
mov
out
mov
pop
outsl
push
mov
adc
insl
iret
jae
scas
out
sbb
push
mov
xchg
pushf
in
mov
shlb
rcrb
dec
test
push
popa
in
fsubr
xor
adc
xchg
pop
ffreep
add
into
mov
scas
stos
mov
rcrl
add
xchg
jl
repz
sbb
pusha
jecxz
repz
loop
rcrl
cwtl
push
scas
jns
pop
cmp
push
push
push
ficoml
out
sbb
loope
pop
pusha
pop
sbb
and
cld
add
test
push
loop
dec
push
jecxz
xchg
pop
loopne
or
bound
cmp
adc
xor
test
push
lcall
stos
sub
push
or
or
jg
stc
sti
xchg
mov
mov
fdivs
add
ss
clc
adc
jle
or
arpl
mov
xorb
jb
xor
sub
mov
sub
mov
fistps
pop
dec
stos
scas
adc
mov
mov
out
and
xchg
xchg
test
pop
mov
jl
dec
fdivrs
xchg
push
scas
dec
add
sbb
jl
and
fidivs
insl
fldt
xchg
clc
cmp
cmp
insb
fsubs
ja
inc
dec
enter
andb
pushf
into
jg
iret
xlat
mov
loopne
mov
shll
imul
adc
rcrl
jnp
dec
add
fcoml
cmpb
pop
mov
xorl
pop
lret
xchg
mov
scas
imul
lret
pop
add
nop
decl
add
imul
jns
test
push
adc
insl
or
int3
pop
cli
dec
stos
sbb
pop
push
lahf
cmc
gs
insl
in
inc
add
int
pop
inc
xchg
cltd
and
mov
mov
rcll
rorl
xor
fsubr
and
jne
cmp
data16
mov
leave
pop
xchg
xchg
mov
pop
rcll
ljmp
mov
add
dec
mov
jns
mov
mov
jb
mov
div
jmp
xchg
jp
pop
gs
je
lods
scas
movsl
subl
leave
push
mov
xor
shl
cli
add
dec
lea
lcall
rcll
adc
arpl
jl
push
add
xor
fcomi
inc
sti
mov
icebp
cmpl
cmp
and
xor
call
sbb
iret
orl
xchg
setp
jl
lahf
ds
repnz
lods
jo
jge
cmp
sbb
fcompl
xor
jmp
stc
lock
push
aas
cli
rcr
mov
imul
push
leave
dec
lods
inc
les
clc
dec
cmp
rclb
sub
pop
mov
and
mov
xor
jns
lret
jmp
aam
insl
into
jbe
mov
rcrb
insl
outsl
sub
sbb
mov
insl
movsb
lahf
inc
pop
jcxz
repz
iret
nop
mov
mov
xchg
mov
sarl
cmp
test
lods
insb
mov
decl
imul
sub
std
cmp
enter
fdiv
jl
pop
sbb
cmp
les
scas
or
in
lea
cmpsl
into
or
pop
mov
lahf
sarb
mov
mov
fstpt
sti
std
pop
pop
push
push
push
mov
adc
inc
dec
add
das
pop
aas
xlat
js
int
stc
xorl
and
xchg
repnz
rolb
cli
mov
dec
push
inc
inc
imul
or
push
pop
mov
aad
loop
xchg
add
and
fwait
cmp
fs
mov
in
cmpsb
sub
scas
sub
rclb
and
mov
lods
test
jmp
ret
mov
insb
ja
iret
xchg
mov
inc
je
pop
lcall
fwait
stc
push
daa
leave
or
mov
cmp
mull
cs
dec
add
mov
add
cmpsb
pop
mov
mov
aas
stos
or
je
jbe
leave
cltd
add
push
roll
push
rcll
ss
mov
dec
lock
inc
fidivl
add
scas
in
pop
ljmp
ret
mov
sub
adc
jbe
lods
pop
or
in
and
jmp
sub
sbb
outsl
rorl
call
fxch
mov
mov
daa
scas
movsl
xor
repnz
loop
sbb
ss
cmc
mov
pop
add
leave
cmp
push
cs
sbb
pop
into
pop
or
or
sub
xor
into
cli
das
inc
pop
stos
cmpsb
imul
xor
fsubrs
pop
stos
lret
mov
sub
nop
outsb
or
adc
add
xor
mov
push
xor
mov
xor
push
push
imul
mov
mov
repz
movsl
lret
in
into
push
and
cmp
into
cmp
dec
sbb
in
adc
pop
adc
pop
xchg
sbb
iret
scas
into
mov
mov
ds
repz
sub
scas
cwtl
push
sbb
mov
aaa
in
push
mov
stos
and
cmp
fmull
lret
cmc
dec
cmpsl
jmp
out
enter
data16
xchg
add
std
push
sub
sbb
int
cmp
enter
cmp
les
xor
inc
imul
std
xlat
xor
xchg
stos
jle
stc
sub
xchg
test
sti
stc
lock
push
adc
push
aaa
xor
xor
pop
pop
xchg
jns
xor
leave
pop
cwtl
ret
aaa
cmpsb
leave
pop
es
outsb
jecxz
inc
xchg
out
out
cltd
and
jg
or
push
mov
and
ret
adcb
mov
sar
mov
in
sub
movsb
in
mov
psubw
jno
adc
xchg
insl
lods
in
imul
push
out
xor
data16
xor
add
shl
cmp
dec
jbe
shl
sbb
cmp
ljmp
in
mov
ret
cs
xor
or
in
gs
outsl
mov
mov
jmp
push
aam
pop
fstpt
or
andb
sub
gs
push
inc
decl
xchg
or
pop
pop
mov
stc
dec
xor
add
sti
add
push
lock
ret
push
mov
dec
mov
inc
fs
push
stos
sub
jo
iret
lock
or
aam
cwtl
and
cmp
aas
xor
mov
movsl
ffree
iret
pop
mov
daa
dec
sub
sbb
cmp
inc
xor
pop
jnp
pop
inc
jl
cmp
adc
jp
mov
mov
sbb
sahf
test
mov
xchg
inc
les
pop
and
push
ds
add
mov
push
ss
and
lret
xchg
jge
mov
xlat
fidivl
sbb
adc
lds
or
hlt
add
sub
gs
adc
jl
inc
sbb
xchg
mov
shl
or
xchg
mov
outsl
faddp
movsb
and
adc
inc
in
gs
cmpsb
inc
shr
movsl
jmp
push
sahf
mov
dec
ret
adc
cmp
aas
movsl
loope
push
sbb
flds
or
les
sbb
aam
jecxz
xchg
adc
mul
dec
jbe,pt
sub
jecxz
lds
mov
jnp
sub
adc
lret
push
xor
xchg
cmc
cwtl
xor
sbbb
rorl
imul
fistpll
mov
cmp
pmovmskb
mov
jo
call
sub
mov
inc
sub
lret
int
sbb
sbb
pushf
pop
je
pop
or
and
cmpsl
mov
jle
cmp
mov
popf
out
adcb
outsb
sub
push
xlat
imul
shlb
push
push
cs
sti
mov
xchg
adc
test
jle
push
xchg
jno
aas
daa
mov
push
xchg
fsubs
call
iret
int
scas
aaa
pop
orb
stos
test
adc
daa
jne
jno
push
mov
jp
inc
inc
aaa
shr
das
cwtl
jo
outsl
cmpsb
fadd
mov
test
aad
sbb
in
dec
iret
or
pop
sub
test
mov
sti
cmc
cmpsb
out
daa
movl
dec
jl
mov
sbb
gs
dec
and
xchg
dec
xchg
sbb
mov
test
jl
xlat
cmpsb
repnz
jbe
dec
lods
mov
ret
mov
sbb
mov
cwtl
ja
roll
xchg
mov
push
cmc
push
inc
dec
rorl
pop
in
fcoms
int3
cli
cmp
adc
adc
sbb
lret
jnp
sub
orb
mov
mov
dec
inc
add
dec
test
sbb
inc
scas
pusha
cmp
push
ror
not
inc
adc
insl
orl
shl
mov
int
dec
pop
out
and
inc
pusha
out
cltd
daa
repnz
scas
pop
lahf
addr16
cmp
les
push
shlb
aaa
sbb
movsb
icebp
pop
mov
sub
fisubs
and
push
jp
xor
cmpsl
dec
cmc
pop
scas
pushl
and
mov
sbb
out
or
dec
test
outsb
jno
psubq
std
ret
inc
mov
frstor
xchg
inc
imul
xchg
jns
pop
in
rorb
int3
loope
inc
mov
call
jnp
or
mov
roll
lods
aaa
lahf
sub
or
push
mov
decb
push
mov
scas
test
push
mov
dec
nop
test
push
cmpsl
pop
jmp
cmp
test
xchg
fcoms
sbb
xor
fs
push
mov
mov
adc
ss
xchg
cmp
push
js
outsl
aaa
cwtl
jb
inc
jmp
imul
outsl
leave
jb
mov
xchg
push
in
repz
push
pop
pop
jno
mov
dec
jbe
xor
loop
iret
inc
jne
mov
vaddpd
cs
fdivrs
fs
loopne
dec
sub
idiv
jbe
ja
pop
mov
ds
repz
mov
inc
repz
stos
lea
jmp
test
jg
lea
xor
sarb
andb
test
mov
int3
in
jae
arpl
xor
adc
pop
cmp
pop
hlt
xchg
xchg
cmp
xchg
daa
pop
lods
loop
jmp
add
cld
jg
xchg
imul
cmpl
lock
mov
mov
nop
sbb
imul
and
sti
cmp
add
sub
mov
mov
ss
or
shufps
ljmp
out
and
pop
cltd
mov
mov
fistl
rcr
arpl
jbe
dec
mov
adc
cs
and
ja
xchg
imull
mov
cmp
adc
jge
cmp
sub
xlat
sbb
or
int3
sbbl
inc
cwtl
xchg
clc
xchg
std
movsl
sub
pusha
subb
mov
xchg
dec
dec
cwtl
sbb
hlt
nop
push
sub
and
cmp
push
mov
ds
jne
aad
ds
dec
inc
jle
mov
sbb
push
inc
in
into
shrb
or
ret
xchg
movsl
std
jne
cmp
dec
push
popf
verr
rcrb
mov
call
aam
push
popf
pop
int
popa
mov
pusha
bound
mov
cli
and
cs
inc
mov
movsb
push
scas
outsl
lcall
sub
cmpsl
pop
pushl
push
mov
dec
outsl
mov
xchg
mov
and
jle
xor
inc
dec
inc
sub
and
mov
cmp
sahf
sar
or
pop
shll
sub
sbb
stos
mov
test
movsb
inc
sbb
mov
stos
pusha
aad
pop
lock
push
rorl
repz
mov
mov
scas
mov
sti
fwait
sub
fwait
stos
push
xor
add
lret
xchg
xor
xor
push
sti
aam
nop
in
add
jle
add
mov
lcall
jp
xchg
sub
mov
fs
cmp
arpl
adc
test
pop
fistl
jno
lret
jmp
fisttpll
pusha
push
loope
stos
popf
out
jnp
ss
jno
fucom
fwait
and
cli
or
mov
mov
or
loopne
adc
std
jb
ffree
inc
jmp
lods
pop
dec
push
or
adc
sbb
push
into
and
mov
scas
jmp
xchg
scas
inc
clc
jle
xchg
imul
sbbb
popa
mov
mov
imul
out
pop
jbe
adc
mull
idiv
xchg
leave
and
in
xchg
mov
inc
add
lcall
xchg
pop
add
pop
sbb
push
in
pop
dec
sarl
jl
mov
fsubrl
and
scas
shrb
outsl
cwtl
xchg
sbb
inc
stos
jge
in
jg
roll
add
cmpsl
mov
or
out
ret
clc
push
cli
arpl
pop
in
sti
pop
adc
push
dec
int3
push
movsb
push
pop
aam
fists
dec
xchg
push
jmp
mov
cmpsb
ret
mov
dec
mov
adc
push
jg
sbb
pop
mov
xchg
xchg
fsubl
sub
cli
jae
repz
dec
push
push
mov
call
std
add
bound
push
push
cmc
pop
cs
mov
dec
pop
push
nop
fadd
jbe
icebp
je
push
movsl
lcall
inc
pop
shrb
xorl
into
int
push
or
out
cli
mov
lret
jp
jne
inc
lods
jbe
in
xor
add
stos
and
lods
dec
or
cli
daa
push
push
cltd
dec
lea
sub
rcll
mov
dec
ret
mov
mov
add
loop
lock
push
pop
sahf
mov
fstps
out
adc
pushf
jl
mov
lret
ds
rolw
jecxz
inc
xor
mov
inc
mov
rorb
mov
not
lods
mov
xchg
mov
xchg
mov
loop
xor
aas
addl
aas
or
inc
push
pushf
in
frstor
in
ds
sahf
mov
out
lret
aad
cmp
jecxz
adc
push
fistps
out
dec
lea
lcall
in
jmp
pop
mov
mov
push
in
inc
xchg
inc
add
cmp
aad
scas
std
xor
push
lret
hlt
jg
gs
cmp
es
inc
fnsave
popf
jb
stos
mov
pop
andb
lods
repz
mov
add
cld
pop
adc
imul
addr16
push
lahf
pop
xor
ljmp
cmc
mov
mov
jne
fs
out
inc
or
leave
popf
xor
push
lcall
cmc
push
mov
mov
sbb
enter
test
in
xchg
mov
jecxz
sahf
and
add
mov
rorb
pop
je
adc
xor
movsl
or
imul
jmp
mov
cld
lods
fsubrl
fimull
shlb
imul
jle
pop
pushf
fldt
stos
insb
es
cmp
stc
stos
dec
cltd
int
jecxz
mov
test
or
xor
out
cltd
fimull
inc
insl
xorb
xchg
adc
push
add
outsw
sbb
in
adc
out
nop
pushf
adc
lahf
call
jge
lret
lret
hlt
push
xchg
jno
push
push
movsb
xchg
xchg
add
pop
pop
push
jb
outsb
pop
add
inc
dec
adc
lds
lds
sar
pushf
jecxz
adc
pusha
int3
repnz
repnz
lods
mov
sub
es
pop
xchg
test
cmp
out
fs
hlt
inc
femms
sub
shl
je
mov
insl
sbbl
addb
inc
fldenv
push
inc
imul
lret
lret
xor
in
add
inc
jns
xchg
adc
mov
sub
adc
inc
sbb
sub
jl
test
dec
or
add
cmc
in
xor
fcmovnb
sub
mov
and
jno
xchg
push
call
in
ret
mov
imul
inc
sub
mov
inc
mov
add
inc
mov
mov
xchg
mov
pop
jo
jae
sub
mov
lods
mov
mov
pusha
lock
sbb
or
mov
sarw
adc
movl
ja
mov
sbb
adc
push
push
in
arpl
mov
movb
sub
sub
pop
imul
inc
jns
bound
cmpsb
lods
and
lds
adc
xor
aam
and
xor
sub
fcom
test
int
scas
icebp
cmp
clc
mov
dec
les
faddl
adc
leave
add
ljmp
pop
adc
push
mov
aaa
imul
inc
mov
jns
or
dec
repnz
pop
adc
stos
mov
test
push
push
sbb
lret
sbb
mov
outsb
sahf
and
daa
or
outsb
lds
inc
mov
mov
enter
pop
xor
pop
bound
dec
fwait
sbb
xor
into
inc
js
and
jno
imul
xor
pop
xchg
xchg
xchg
jmp
loope
push
push
pop
push
pop
fistl
xchg
sub
sub
push
add
push
add
push
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
