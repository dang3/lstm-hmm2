jmp
pusha
cs
jmp
push
pop
fdivl
jmp
mov
jmp
lds
add
jmp
loope
shr
pop
xchg
ret
jmp
fsubr
add
lds
add
jmp
outsb
sub
add
jmp
sbb
push
jmp
lcall
add
add
ret
jmp
les
cli
add
add
add
dec
call
jmp
jno
mov
icebp
fcomps
add
lods
jmp
les
cmp
push
add
jmp
inc
dec
testl
add
push
cmp
pushf
lret
pushf
outsl
add
push
addr16
xor
push
jmp
inc
mov
pusha
ret
cltd
xchg
add
mov
pop
or
inc
mov
gs
cmc
cmc
sarl
adc
dec
mov
in
jo
or
in
out
sbb
pop
sarb
test
int
xchg
push
jb
jg
pop
cmp
in
inc
xchg
cmp
xor
mov
pop
sbb
insb
and
dec
divb
sbb
mov
popf
test
sub
pop
or
xchg
test
mov
jns
sbbb
lea
add
aad
icebp
xlat
loope
jb
sub
and
pop
mov
fs
adc
bound
stos
mov
sub
movsb
das
pop
fnstcw
cmp
aad
es
out
subl
out
sbb
sub
in
std
cmp
push
jns
jo
pop
shrl
cmp
xor
pop
or
or
ret
fcomps
inc
lea
xor
lea
movb
enter
jmp
sub
pop
jo
mov
xchg
cmpsl
mov
les
sahf
cmp
jecxz
mov
aas
dec
sbb
sahf
repz
mov
shlb
pop
sbb
sti
xchg
xlat
sub
mov
popf
adc
mov
dec
ss
popf
test
idivl
jnp
test
or
add
adc
sbb
xor
cwtl
inc
fnsave
push
xor
mov
cmp
add
lret
and
pop
ja
sub
jnp
mov
mov
push
repnz
fidivrs
je
std
ja
adc
xchg
push
sbb
xchg
jp
outsl
push
leave
adc
fisttps
ret
push
inc
cmp
push
dec
xchg
lret
xlat
adc
sbb
pop
imul
lahf
mov
push
je
mov
aad
inc
movsl
jp
cmp
sub
mov
sub
inc
aas
ret
dec
and
fnstenv
stos
shll
cmp
adc
jl
mov
mov
imul
mov
sub
xor
adc
add
enter
sub
and
mov
pop
sbb
or
lods
lret
pop
lock
and
aas
je
or
test
mov
bound
mov
dec
bound
out
fs
push
sub
add
or
xchg
rcl
xchg
adc
divb
dec
mov
movsl
push
xor
rorl
jno
or
aas
xchg
inc
fsubl
xlat
popf
xchg
lods
and
inc
sarl
imul
cmp
and
test
shr
inc
dec
or
aam
or
movl
out
lods
lods
jb
sbb
iret
mov
cltd
in
jg
loop
mov
out
movsl
xlat
imul
mov
mov
xchg
movb
sbb
ret
mov
loopne
push
xor
jp
fsubl
pusha
push
addr16
add
idiv
or
xchg
jecxz
cmp
shrb
dec
push
stos
cmpsb
sbb
cmp
mov
rcr
fdivrs
fistpl
sub
stos
mov
sbb
daa
and
and
std
out
movsl
out
jmp
push
das
mov
add
sahf
adc
mov
add
jl
xchg
cltd
sbb
fwait
sbb
xchg
xchg
lcall
dec
mov
xorl
adc
xchg
mov
cmpsl
mov
pop
aad
jo
dec
cmpsb
add
mov
loope
dec
inc
negb
fiadds
mov
lahf
xchg
mov
inc
pop
pop
dec
fdivrp
fisubl
and
loopne
hlt
xchg
push
inc
repnz
add
lcall
leave
sbb
push
ret
stos
aaa
and
in
aas
add
mov
jp
sbb
mov
cmp
inc
rorb
sub
mov
mov
lcall
stos
mov
mov
cmp
ljmp
gs
popf
add
lcall
idivb
ret
mov
xlat
add
pushf
and
mov
icebp
xor
repz
jo
lcall
mov
insl
ds
int
nop
cmp
adc
cs
sub
xor
repnz
pop
mov
push
adc
pop
repnz
out
push
fisubl
loop
popa
dec
mov
insb
lds
adc
insl
std
adc
sub
jmp
and
loopne
ss
aad
add
mov
sbb
rcr
pop
jmp
jmp
mov
sahf
or
sbb
pushf
insl
fwait
insl
ss
lds
js
in
in
mov
sahf
arpl
mov
int3
fiadds
cli
push
mov
cwtl
iret
mov
out
or
dec
pusha
sbb
shlb
adc
bound
add
push
inc
std
mov
int
subb
std
cmp
pop
jno
xchg
shll
enter
mov
cmp
mov
int
shl
int
pop
fwait
cmpsl
jmp
inc
mov
and
pop
mov
adc
pop
push
pop
inc
push
mov
sub
fdiv
or
cld
xorb
rolb
and
lcall
push
jb
and
jnp
inc
sahf
jb
xchg
cmpps
jbe
inc
sbb
xor
aas
mov
jmp
lcall
fstpt
mov
xor
out
roll
pop
mov
mov
popf
pop
dec
movsl
dec
je
outsb
push
push
xchg
push
sbb
loopne
sub
add
adcl
mov
jb
mov
cmpsb
fisubl
dec
xor
mov
or
add
cltd
jnp
int
mov
add
into
dec
insl
pop
fstpl
mov
push
negl
outsb
push
sbbb
dec
std
xchg
cmc
cltd
fnstcw
add
mov
add
push
xlat
leave
xchg
mov
aam
inc
ljmp
and
lret
fistpl
dec
out
mov
arpl
mul
xchg
enter
test
popa
cwtl
push
rcrb
jle
ret
or
mov
into
cmp
lcall
pop
fnsave
enter
xor
icebp
push
insb
and
outsl
mov
push
daa
pop
fdivp
sub
cwtl
adc
dec
xlat
add
pop
mov
push
cmp
and
out
movsl
dec
test
outsl
enter
insb
fsubr
cmc
mov
movsb
movsb
push
sbb
repnz
gs
xlat
adc
cmp
sub
jnp
lods
adc
sub
sbb
clc
decb
push
ret
nop
lahf
push
cltd
xchg
xchg
movsb
fistpl
jle
add
sbb
cmp
sbb
push
fs
cmp
aam
pop
xchg
adc
push
mov
bound
xchg
enter
pop
fcomi
notl
jle
jo
sbb
adc
std
dec
loopne
mov
jecxz
dec
xchg
stc
sub
subl
xor
insb
int3
sub
push
mov
ja
aam
imul
std
movsb
pusha
in
or
out
push
sbb
idivl
or
jg
out
mov
xchg
test
daa
push
push
mov
fxch
into
jno
into
je
mov
jno
xor
in
fcmove
ja
call
lods
pop
shrl
das
imull
out
mov
cli
mov
jl
movsl
repnz
xor
ja
sbb
subb
neg
dec
out
cmp
mov
inc
icebp
ret
sub
xlat
bound
mov
sahf
fimull
sbb
sbb
fidivs
sbb
fs
sbb
add
adc
pop
out
popa
xchg
ss
cmp
dec
daa
not
dec
out
mov
pop
jns
sbbb
mov
pop
sbb
or
pop
out
xor
js
int3
and
xchg
es
lock
shll
pop
aad
mov
in
push
or
jbe
aad
loopne
inc
fndisi(8087
adc
int
fists
mov
adc
in
je
jg
je
sti
pop
adc
pop
adc
jae
cmp
jns
test
jnp
in
push
repnz
pop
adc
pop
push
icebp
jmp
xor
adc
jne
lock
icebp
rorb
lret
dec
aam
sub
shr
sub
out
hlt
mov
push
pusha
or
push
inc
xchg
lahf
out
sub
loopne
or
iret
or
inc
lods
mov
or
subb
fisubl
in
cmp
push
adc
and
mov
jmp
es
push
mov
imul
mov
pop
ljmp
push
or
or
mov
shr
mov
shr
xchg
sbb
adc
push
out
pop
icebp
out
fcomps
push
stc
mov
out
lahf
mov
add
std
lods
in
pop
pop
add
mov
add
xor
adc
add
jne
add
data16
dec
push
add
add
add
rorb
loop
xchg
xor
out
xor
ljmp
dec
cmpsb
ljmp
add
shl
add
iret
pxor
mov
in
popf
filds
inc
lahf
fbld
shlb
mov
xor
mov
std
imul
pop
popf
xor
pop
popf
adc
fmuls
fbld
ja
dec
mov
data16
pop
sahf
addr16
je
adc
fwait
ret
clc
add
lods
pop
add
lcall
and
lds
and
and
rcrl
pop
sar
push
out
cwtl
sub
popf
div
xchg
sahf
not
adc
lahf
idivb
imulb
test
xchg
xor
pop
cmc
mov
mov
insb
out
dec
xchg
dec
imul
int3
ja
pop
dec
gs
test
adc
dec
adcl
divl
lds
lahf
out
adcb
mov
pop
stos
pop
enter
push
movsl
or
and
in
jae
cltd
dec
shlb
nop
add
push
bound
pop
cmp
mov
lahf
cmp
sub
pushf
rorl
add
add
data16
ja
inc
les
movsl
mov
push
stos
sbb
stos
sbb
in
ret
mov
ficoml
mov
clts
mov
cmp
jnp
xchg
lea
scas
adc
or
stc
ror
bound
mov
fs
pop
mov
pop
jmp
sub
in
dec
cmp
jmp
mov
dec
fisubrs
pop
pop
scas
pop
ds
jns
jnp
int3
ret
insl
loopne
inc
sub
in
push
rclb
leave
fwait
insb
jl
mov
shlb
jge
test
test
lret
lahf
pop
push
xor
fcoml
cmpl
pop
pop
cwtl
sbb
jns
aaa
rolb
ss
jl
xlat
gs
pop
jg
mov
dec
push
adc
test
test
xchg
bnd
cmp
xlat
je
mov
lds
imul
dec
and
push
mov
aas
sbb
add
ljmp
daa
jne
mov
mov
mov
mov
and
and
inc
mov
xor
cwtl
loop
pop
push
or
aad
and
or
dec
and
sub
mov
or
leave
or
push
mov
les
pop
clc
mov
jns
and
repnz
adc
int3
dec
push
cmp
sti
and
jns
push
sarl
ret
cli
mov
and
xor
cmpl
and
cld
lahf
or
imul
lods
lret
adc
les
cmp
xor
mov
xchg
arpl
add
xor
das
xor
imul
and
push
adc
fistpl
inc
fst
imul
decl
push
bound
jns
xor
mov
mov
and
jge
or
cmpsb
pop
js
movsl
and
int
push
pop
push
lods
aam
sarb
push
adc
xchg
decl
add
popf
pop
sub
lcall
mov
and
inc
or
jmp
inc
lret
mov
mov
adc
and
pop
lahf
dec
dec
loopne
sub
jl
push
aad
fsub
jbe
xor
or
mov
cs
rorl
add
adc
mov
mov
shlb
inc
mov
push
mov
sbb
mov
aad
int3
loopne
into
shll
xchg
bound
xchg
inc
in
inc
add
push
mov
imul
add
fbstp
dec
mov
fdivrs
fs
sbb
xchg
push
xor
xlat
mov
clc
test
adc
test
pop
lahf
sbb
and
sub
fs
fistl
frstor
dec
sbb
dec
sbb
cmp
cs
cmp
jne
test
and
xchg
roll
mov
orb
xchg
xchg
add
dec
hlt
dec
push
stos
add
mov
cmp
xchg
shlb
dec
inc
call
call
and
xlat
adc
lods
movsl
cmp
mov
inc
inc
outsl
mov
insb
inc
mov
lcall
addl
insb
jge
iret
in
jmp
lods
outsl
cmp
mov
enter
cmpb
dec
je
imul
cmp
mov
mull
mul
cld
sarl
les
clc
inc
loope
cmp
mov
out
mov
push
stc
push
ror
mul
cmp
mov
sbb
pop
call
sub
dec
dec
mov
mov
or
dec
sbb
mov
or
jle
add
pop
dec
repz
or
xchg
in
and
cmp
push
add
call
pop
shrl
mov
xchg
sbb
outsb
mov
mov
outsb
sbb
add
push
repz
test
repz
ljmp
mov
pop
cli
sbbl
dec
jns
xchg
hlt
jecxz
jl
int3
push
cs
lods
fstpl
jp
insl
cmpsb
aam
aad
jmp
in
in
arpl
leave
fbstp
fmull
adc
lock
or
dec
push
pop
inc
addr16
ret
pop
add
adc
add
mov
test
xor
cs
das
stos
daa
xor
ljmp
fdivs
sub
push
out
mov
fwait
sbb
in
pop
and
lahf
cltd
inc
push
shll
std
andb
cld
or
popf
dec
outsb
push
std
outsl
pop
enter
sbb
xor
movsb
add
jge
les
outsl
or
mov
dec
in
xchg
mov
push
adc
add
out
mov
or
pop
pop
loope
jl
lea
sub
pop
sbb
and
mov
and
lods
xor
jno
loop
pop
imul
or
jae
push
cmp
adc
mov
jecxz
in
cld
sbb
add
sti
addb
xor
insl
lea
sbbb
xor
pop
mov
mov
daa
mov
iret
bound
incb
mov
adc
inc
jp
dec
xchg
and
or
in
jge
pop
pop
mov
or
mov
std
icebp
mov
mov
leave
in
enter
loopne
clc
in
inc
pushl
sub
roll
pop
jecxz
inc
jo
mov
mov
cwtl
inc
mov
cli
xchg
addl
ja
cmp
data16
and
scas
mov
mov
mov
xchg
dec
push
mov
loopne
ss
xchg
cmc
cli
mov
fucom
and
aas
aad
outsl
xor
xor
mov
sub
ja
rcll
jecxz
data16
push
xchg
inc
inc
jl
cltd
sbb
pop
xor
and
and
pop
cmpsl
sub
xor
out
and
cmpsb
scas
jle
aaa
roll
cli
lcall
inc
push
push
out
xor
xchg
in
xchg
inc
std
pop
push
and
or
sbb
mov
stos
mov
dec
leave
arpl
aam
orl
inc
pop
jo
lcall
pop
push
lods
outsl
jmp
js
outsl
mov
pop
mov
jbe
jmp
jp
lea
faddp
stos
stos
adc
lock
add
outsl
push
pop
mov
cs
imul
cld
pop
or
mov
xor
cmp
call
inc
mov
lret
xchg
dec
leave
xor
adc
std
jbe
sub
inc
std
mov
popf
jge
dec
jnp
pop
cltd
lret
aas
sub
xchg
lea
imul
xchg
loop
mov
cmp
cmp
jge
and
push
lds
dec
aam
or
hlt
pop
add
mov
ja
push
xor
add
inc
cld
inc
push
cwtl
loopne
xor
sbb
lcall
pop
lcall
adc
jmp
sub
stos
sbb
std
scas
adc
lret
out
inc
jecxz
cmp
pop
pusha
adc
jo
idivb
aam
or
xor
jns
push
ja
inc
mov
mov
mov
enter
scas
fwait
or
insl
subl
out
lock
out
popa
test
jno
push
lcall
sub
cmpsb
sub
add
xor
xor
mov
mov
int3
pop
add
xchg
jae
rcll
sbb
mov
and
push
push
test
out
xor
mov
ret
or
pusha
jmp
pop
rolb
add
sbb
loop
mov
or
jcxz
mov
adcl
xor
test
add
repnz
mov
in
and
cli
inc
nop
xchg
out
clc
xor
xchg
popa
cmp
xor
jmp
mov
cmp
rorl
adc
and
bound
aam
and
imul
arpl
ficoms
inc
aam
xor
les
mov
mov
stos
shrl
dec
mov
push
cmpsb
add
or
cmp
nop
cli
aas
push
lcall
mov
xchg
push
popf
push
or
lahf
cmpsl
ret
movsb
mov
xor
jmp
pop
pop
inc
xor
das
enter
pop
jbe
gs
push
xchg
push
cli
sbb
clc
stos
jns
mov
hlt
lods
jmp
leave
inc
xchg
imul
xchg
iret
aaa
xchg
mov
rcr
icebp
inc
stc
jp
outsl
ljmp
pushf
dec
xchg
fidivrl
ret
push
xlat
push
out
xor
or
int3
jmp
mov
sub
in
xchg
dec
ret
dec
mul
jae
pushf
mov
pop
mov
inc
push
or
and
in
pushf
shll
shrl
cmpb
dec
push
mov
add
or
add
xor
push
mulb
mov
scas
out
push
scas
stos
imul
xchg
add
rorl
inc
pop
mov
push
mov
scas
ds
or
add
mov
pop
das
push
je
xchg
pop
and
mov
mov
fcmovnb
mov
pop
ret
push
dec
mov
jns
jb
loope
das
test
ss
leave
out
sub
inc
sahf
mov
xchg
jne
mov
adc
add
sub
out
inc
inc
js
shrb
sti
leave
jb
jp
mov
inc
rclb
inc
jne
xchg
fstpt
aam
cltd
cmp
inc
nop
fwait
jns
mov
mov
test
fstpl
loope
push
dec
push
jns
mov
bound
mov
loopne
dec
popf
subb
sub
lock
xchg
fldt
aaa
dec
bound
sub
mov
fstpt
adc
cmp
push
adc
sub
mov
pop
jle
mov
aaa
ret
cmp
push
test
outsb
repz
dec
dec
enter
mov
repnz
adc
adc
frstor
lods
pmaxub
bound
imull
xchg
popf
sbb
mov
xchg
mov
cmc
outsb
icebp
cmc
lods
and
fwait
push
lods
movsl
dec
std
shrl
std
or
popa
dec
xlat
int
lahf
xchg
int3
and
add
lea
outsl
jge
xchg
inc
cmc
pop
pop
testb
cli
and
jp
or
mov
mov
je
jo
fisttps
xlat
adc
mov
popf
inc
popw
std
or
lret
hlt
or
test
jno
outsb
hlt
rcr
mov
mov
pushf
mov
push
push
movsl
xor
mov
mov
out
mov
daa
int3
and
or
inc
enter
pop
and
inc
aam
popf
or
push
filds
stos
xchg
inc
into
into
inc
mov
inc
dec
and
sahf
cmp
xchg
popa
push
cld
jnp
data16
outsl
xchg
fnstcw
inc
add
sar
daa
dec
ja
pop
fisubrs
popf
mov
cltd
pop
sub
daa
into
pushf
leave
ds
loop
stos
movsl
movsb
aaa
push
stc
enter
iret
incl
dec
jge
lods
rorb
jne
jmp
cmpsb
push
pusha
dec
fldenv
dec
jecxz
imul
cltd
xchg
insb
jl
cmp
cltd
push
sub
and
loop
push
push
repz
push
sbbl
xchg
dec
cwtl
cwtl
push
dec
adc
shrb
ss
jnp
in
cmpsl
xor
notb
je
sub
daa
aaa
jl
ret
xorl
xchg
sub
jno
daa
pop
das
push
add
lret
out
xor
xor
sbb
xchg
fmulp
xchg
and
pop
mov
pop
push
jmp
push
xchg
movsl
xchg
jne
push
push
repnz
mov
push
enter
push
push
or
and
jnp
dec
enter
and
jle
mov
pop
xchg
enter
iret
push
data16
mov
push
dec
stos
leave
xchg
pop
je
fldt
jae
xor
add
xor
or
add
sub
clc
mov
in
cmpb
xorb
xor
sbb
dec
push
sbb
adc
mov
sbb
sar
fwait
lock
ja
mov
scas
mov
cld
jmp
test
sti
xchg
pop
push
orl
ret
lret
or
push
mov
sbb
lea
push
pop
sahf
loop
sbb
mov
sbb
scas
ss
and
mov
cwtl
out
push
cmc
mov
add
sbb
test
dec
std
pmulhuw
jne
cmp
sti
mov
mov
shrl
or
cmpsb
jmp
outsb
push
pop
test
lods
cmc
dec
cmpsb
stos
inc
shlb
ret
out
jbe
popf
xchg
pop
push
lock
cwtl
jg
jmp
dec
cmpsl
movsl
hlt
jmp
inc
rcrb
movsl
jmp
push
sbb
test
adc
cs
cmp
adc
cmpb
aad
jle
pop
ss
jnp
dec
sbb
and
add
pushl
mov
add
ds
add
xchg
mov
lret
ja
push
lods
test
nop
xor
in
inc
cmp
imul
push
fldcw
lea
adc
enter
iret
jle
shrb
jo
pop
fisubrl
add
mov
out
dec
lea
xchg
jnp
and
add
cmp
jne
int3
and
and
jns
clc
in
test
and
fstl
rolb
rol
mov
bound
cmc
push
adc
cmpsb
sbb
add
je
call
push
loope
mov
ret
xor
jo
data16
sahf
testb
jnp
or
xor
adc
mov
daa
aas
cmpsl
ljmp
xor
or
mov
mov
add
mov
punpcklwd
jnp
sub
mov
cmp
insb
jne
adc
xlat
lcall
repnz
cmc
mov
in
sbb
cmpsl
xchg
pop
cmp
lret
in
lret
push
pop
ss
mov
into
fcmovnu
jle
dec
xor
stos
leave
subl
loop
jmp
imul
aas
call
sbbb
sub
inc
into
lahf
movsb
jmp
movsl
test
push
jnp
idivl
mov
notl
mov
fiadds
stc
adc
fwait
shlb
xchg
add
inc
cwtl
and
dec
jns
ss
clc
es
shrd
xor
adc
ret
sbb
xor
int3
sub
divl
push
rclb
aad
mov
inc
mov
cmp
dec
push
mov
and
cmp
cmpsl
sbb
fbld
jb
cmc
push
jp
add
cld
int
ret
movsb
mov
test
mov
adc
push
fs
or
into
jne
pop
test
std
imull
aas
bound
xchg
adc
sbb
cmpsl
pop
dec
push
int
pop
in
add
arpl
mov
imul
lods
addr16
push
clc
int3
push
das
daa
mov
js
inc
pusha
pop
outsl
stos
jp
ljmp
addr16
mov
in
jbe
xor
sti
popa
cmp
rcrb
clc
add
fidivs
mov
test
mov
out
pop
test
push
movups
mov
mov
pop
push
sub
inc
filds
lcall
add
hlt
rorl
cmp
and
int3
mov
inc
cmp
clc
vpaddsb
cld
jne
sahf
dec
dec
insl
inc
mov
xor
xchg
push
jo
sub
nop
mov
and
divb
mov
cwtl
outsb
xor
and
cli
add
popa
adc
mov
mov
enter
and
sahf
inc
aaa
inc
imul
fsubrl
mov
imul
push
jne
std
cld
push
in
mov
incb
inc
roll
sti
hlt
popa
cmp
pop
xchg
mov
repz
sbb
repz
jo
push
pop
dec
cld
fistps
dec
inc
lahf
mov
cwtl
sbb
mov
mov
or
push
lret
arpl
mov
setbe
sarb
mov
shll
mov
rclb
jno
inc
jo
loope
cli
insb
test
and
adc
cs
sub
lods
jecxz
in
lret
scas
jl
outsb
push
adc
in
fucom
jg
pop
sub
movsb
xchg
xchg
adc
xchg
jp
and
cli
outsl
in
and
shl
push
cmp
xlat
sahf
fisubrs
imul
mov
cmp
push
jp
jo
popa
aad
and
dec
or
dec
dec
mov
stos
jge
in
jno
popf
test
pusha
int3
or
sub
daa
sbb
mov
cmp
push
aam
add
sbb
sub
sahf
xor
mov
adc
xchg
in
out
scas
xchg
mulb
jecxz
es
cmpsb
and
jl
sub
aas
xchg
fiadds
sahf
int3
xlat
jae
sub
cmpsl
and
sub
into
sub
in
add
dec
ljmp
mulb
pusha
pop
mov
adc
fwait
xchg
outsb
call
fsubl
dec
ljmp
cmpb
sbb
push
test
cmp
and
sti
and
pop
aam
mov
pop
inc
xor
lahf
lret
pop
cmp
and
add
decl
sti
push
lds
fimuls
mov
sub
push
mov
cmp
xchg
xor
ljmp
scas
dec
mov
out
cmp
xchg
xor
int3
jmp
test
jmp
cmc
stc
jne
pop
movsb
jns
ret
gs
stc
rorl
outsl
push
add
ja
mull
mov
dec
shr
mov
adc
shll
rclb
repz
and
inc
or
in
into
stos
xchg
push
enter
ja
push
lds
mov
mov
and
rcrb
ret
pushf
fldl
cltd
ds
add
or
lcall
fdivrl
fiadds
or
xor
mov
cmc
cld
sbb
dec
rorb
test
jae
inc
cmpsb
push
iret
jne
daa
pop
jno
test
mov
push
es
aaa
cs
or
push
dec
dec
addr16
pop
jg
repnz
mov
sbb
movsb
shlb
popf
filds
cmp
ja
inc
adc
push
mov
cld
lret
mov
in
fcomip
jg
icebp
adc
cmp
imul
icebp
dec
lds
arpl
push
ret
xchg
xor
push
add
cmpsb
lds
pusha
or
and
mov
mov
xchg
pop
cmp
add
sub
xchg
and
xorb
scas
pop
sbb
lcall
xor
pop
push
or
dec
inc
in
sub
call
push
jg
insb
mov
xchg
cli
nop
shll
pop
insl
rep
sahf
int
fsubs
sub
fisttpl
xor
push
shlb
movsb
sub
sub
dec
mov
push
cmp
cld
clc
lea
aas
add
xor
ljmp
enter
push
popf
mov
shll
adc
loopne
mov
mov
mov
cmp
jmp
iret
cmp
rcl
mov
inc
xchg
dec
dec
fnstenv
xor
loopne
nop
das
sbb
pop
jae
xor
repnz
je
mov
mov
inc
mov
mov
push
addr16
repnz
rorl
popl
dec
add
or
cmc
inc
insl
xorl
movsb
push
cmp
adc
aas
inc
cmp
jne
std
lret
sahf
loope
jmp
movsb
lret
pusha
dec
lods
lcall
outsl
scas
mov
xor
dec
cmp
xchg
pop
loope
test
mov
mov
loopne
scas
clc
or
rcrb
out
inc
add
dec
xor
outsb
aam
stos
sahf
inc
xchg
jb
xchg
cld
xchg
jno
sub
xor
mov
ja
inc
xor
and
cmp
add
jne
xchg
out
sarl
lret
adc
adc
call
cmp
lahf
sub
cld
push
loopne
loop
mov
loopne
mov
mov
insb
cmpsb
pusha
aad
cmc
push
imulb
push
fsubr
xchg
std
mov
cld
data16
movsl
and
and
mov
decl
add
movsb
or
scas
fsubl
add
xor
pop
pop
xor
call
divl
push
aas
fs
popa
rcrb
xlat
xor
cmpsl
arpl
loop
jns
test
mov
iret
test
adc
aam
shrb
ficomps
rol
cmpsb
comiss
or
adc
pop
mov
es
outsb
mov
filds
and
pop
push
pop
out
jge
and
test
push
sbb
out
mov
xchg
test
insl
push
push
pop
sub
push
leave
pop
push
mov
repz
mov
adc
fucomip
mov
jne
sbb
in
jns
adc
jb
test
lock
icebp
dec
in
push
mov
stos
mov
jl
add
std
sbb
adc
pop
sub
pop
sarl
lods
ja
mov
pop
mov
or
cmc
mov
fistpll
test
repz
mov
ljmp
fldt
jl
loop
pop
xchg
call
fs
out
lods
xor
arpl
rolb
rol
das
mov
je
in
les
outsl
lds
test
jecxz
push
mov
dec
sbbb
inc
inc
fsubrl
and
xchg
jno
out
sub
mov
ss
fiaddl
add
push
int
jmp
popf
cmc
push
fisttpll
movsl
xchg
loop
fcompl
mov
xchg
mov
add
test
xor
pop
mov
cmp
cld
xchg
int
sbb
adc
bound
pop
pop
xchg
dec
pop
fsub
fdivrp
aam
push
pop
lock
inc
xchg
fs
aam
push
lods
jmp
jbe
mov
mov
dec
test
jge
jb
loop
sub
sbb
adc
movsb
imul
ds
dec
xchg
insb
js
xor
mov
sbb
mov
sub
add
in
aaa
pusha
and
in
fcoms
sahf
fiaddl
imul
mov
inc
das
adc
int
repz
inc
add
out
mov
mov
ret
dec
push
sub
push
pop
into
shlb
insl
push
je
arpl
mov
jecxz
inc
push
xrelease
push
sbb
mov
lds
comiss
ja
push
addl
push
push
ret
sbb
in
push
int3
xor
add
pop
bound
sub
cmp
sbb
in
pushl
cmp
shlb
test
inc
mov
jle
add
movsb
imul
pop
dec
xchg
push
mov
push
int3
push
cmp
outsb
pop
xchg
mov
sub
push
push
xchg
cmpsl
fildll
mov
das
push
leave
inc
mov
je
test
push
gs
test
and
pop
xchg
call
push
test
mov
jg
mov
ss
jmp
cld
sbb
mov
clc
jae
cld
fnsave
mov
movb
movl
mov
clc
jae
cli
mov
addb
stc
jb
cmpsl
xchg
sbb
dec
pop
xorl
stc
jb
js
psrlw
jp
addl
add
jae
sti
loopne
xchg
sub
jmp
outsl
add
jmp
stc
jb
daa
mov
sub
call
add
add
stc
jb
cmp
pushf
jmp
rolb
clc
jae
adc
into
xchg
lods
jg
cmp
insb
sbb
xor
out
cli
jmp
sub
add
shl
repnz
pop
bound
mov
lahf
and
mov
es
lret
jmp
pop
jge
cmp
jns
mov
loopne
stc
in
sti
sub
int
aaa
sahf
and
jbe
sbb
add
out
in
sti
fistps
ss
shll
scas
mov
push
outsb
icebp
std
and
fdivl
icebp
add
loop
cwtl
dec
out
mov
push
imul
push
aaa
jmp
jge
inc
pop
sub
cltd
xchg
lock
out
rcl
push
int3
enter
in
cmp
mov
sbb
or
xor
in
fsubrl
xorb
mov
mov
sti
adc
roll
mov
clc
xchg
jb
popf
push
movsl
scas
loop
jne
in
xor
adc
sub
stos
mov
fisubrl
int
lret
loopne
dec
cmpsl
jbe
lcall
mov
and
mov
loopne
cld
loop
lock
push
mov
repnz
scas
push
sub
mov
test
push
lods
jb
fs
pushf
pop
xlat
dec
insb
cmp
fildl
inc
lret
std
cmpsb
fiadds
cli
push
add
je
pushf
xchg
xor
dec
aaa
shrb
mov
das
xor
add
fisubrs
int3
outsl
loope
mov
dec
in
mov
and
imul
pop
push
subb
sub
sarl
leave
je
das
add
lds
mov
hlt
lret
gs
ret
subb
mov
pop
ss
cmc
frstor
rcll
iret
and
push
cmp
out
mov
sbb
stos
in
dec
movsl
mov
mov
and
and
add
dec
int3
push
inc
lcall
test
cmp
stc
pop
in
pop
xor
xchg
cwtl
push
imul
push
es
hlt
jmp
jns
or
mov
xor
js
jp
xor
jnp
pop
ret
xchg
jo
pop
mov
ret
rol
loop
add
nop
scas
or
popf
add
add
loopne
add
add
add
add
dec
lahf
movsb
ret
in
dec
fcomi
mov
aas
sbb
inc
cmp
xor
repz
out
aad
or
js
pop
fdivs
pop
push
mov
pop
clc
lahf
jp
imul
arpl
add
es
lods
hlt
cmp
scas
enter
mov
add
lcall
add
cmpsb
xchg
subl
mov
adc
jecxz
js
pusha
je
mov
mov
scas
push
mov
sti
mov
mov
leave
pop
mov
ret
push
add
mov
dec
add
add
add
add
stos
outsl
xor
lret
nop
push
mov
push
sbb
xchg
jge
and
call
test
dec
hlt
inc
ret
rcr
jo
adc
add
aaa
decb
dec
add
roll
out
cli
aad
out
sbb
pop
pop
inc
lods
test
das
movsb
addr16
inc
in
loope
pop
adc
bound
in
push
jno
adc
add
and
mov
adc
aam
cmp
jp
nop
or
xor
add
jg
jno
movsb
push
sbb
repz
outsl
lea
leave
outsl
push
lret
in
pop
outsl
and
insl
repnz
cmp
hlt
sti
cmpsl
or
clc
xor
xor
stos
ss
lds
cmp
adc
sbb
lock
out
loop
pushf
daa
inc
les
jle
loop
xor
test
in
jo
ds
push
and
mov
rcll
enter
mov
or
pop
cmp
jle
xchg
push
insl
and
sbb
hlt
ljmp
cld
test
mov
or
stos
dec
sbb
movsl
xchg
and
push
pop
movsb
sbb
xor
mov
aas
icebp
arpl
xchg
outsl
mov
mov
roll
shll
and
cmp
es
lret
mov
ja
pop
cmpsl
mov
lret
mov
mov
and
mov
cli
icebp
jae
dec
or
lock
jge
jnp
cli
sub
hlt
cmpsl
dec
dec
negl
lods
outsb
add
mov
fldenv
lahf
lfs
fs
pop
in
leave
jbe
sar
imul
jae
mov
xor
mov
jmp
jae
in
cltd
mov
or
push
add
fldenv
add
ss
push
dec
imul
nop
std
js
mov
inc
testb
movsb
cwtl
out
pop
out
rcrb
push
addl
lods
xor
xor
xor
xchg
dec
aad
shlb
xor
pop
add
pop
mov
dec
push
adc
pop
nop
add
dec
lods
repz
ljmp
fisttpl
dec
jbe
xchg
loopne
sub
cmp
cs
inc
add
add
jecxz
mov
push
mov
fs
test
dec
cli
push
and
fucomip
and
cmpsb
sarb
xchg
pop
mov
pop
xor
dec
dec
pop
mov
jge
mov
fdivs
daa
inc
dec
call
add
lods
jge
push
aas
shl
loopne
mov
sub
inc
negl
lret
or
xor
sbb
aas
pop
cmpsl
cmp
cltd
add
cmp
test
sbb
xchg
pushf
aas
fs
xchg
fs
add
push
inc
sbb
mov
js
rcrl
stc
imul
jb
mov
xor
fwait
lea
sbb
ja
out
je
cld
sbb
push
mov
mov
cmp
movsl
pop
test
mov
xchg
sbb
fisubl
aaa
inc
mov
adcb
or
sub
ss
iret
fistpll
xchg
and
repnz
addr16
insb
add
xor
inc
mov
fcomp
mov
jp
jae
ss
sbb
pop
add
jle
lea
xlat
in
pop
mov
jns
dec
mov
add
inc
jno
jne
jp
cs
loopne
or
adc
push
sarb
or
imul
jge
jle
xchg
insl
ja
rorb
out
jecxz
and
rorl
add
dec
popf
clc
lea
cmp
test
lret
call
adc
jmp
inc
adc
cmp
jne
inc
cltd
xchg
ja
movsl
lret
pop
mov
pand
sub
inc
xchg
add
jo
adc
inc
xchg
jb
xor
mov
adc
pop
cmpsb
cmp
imull
xlat
rorl
out
add
adc
lods
cld
icebp
aam
mull
inc
outsl
call
sbb
pop
mov
pop
mov
es
adc
addl
repz
jbe
test
movsl
mov
roll
pop
mov
fdivr
pop
jo
xchg
sbb
adc
and
in
xor
cmp
mov
mov
mov
pop
rclb
pushl
xor
cmp
lds
cltd
mov
adc
cmp
js
or
xlat
cmc
sub
push
xchg
test
pop
or
mov
je
xorb
dec
jmp
pop
loop
cmpsl
jno
jge
pop
out
add
sbb
mov
incl
add
add
loop
movsb
xchg
jns
sbb
divl
iret
sbb
stc
xchg
out
test
xchg
sbb
ret
cmp
sub
push
mov
test
cmc
mov
hlt
mov
addr16
shrb
lds
sbb
xchg
mov
sbb
test
and
ror
dec
decl
nop
cld
or
lahf
out
lea
fstps
mov
xchg
in
test
rorl
sub
fcoms
aas
pop
jnp
shlb
sbbb
fwait
ljmp
dec
call
adc
cmp
mov
das
mov
testl
pusha
roll
push
sbb
pop
xor
jmp
adc
mov
dec
jno
xor
sub
scas
call
divb
or
lret
adc
cmp
mov
push
pop
cmpsb
cmc
jns
mov
popa
xchg
test
test
fidivrl
and
and
jle
xchg
int
cmp
lahf
sub
call
mov
pushf
ja
leave
add
push
ret
add
mov
xchg
out
xlat
fdivr
lret
into
mov
pop
mov
cltd
aam
fnsave
fisubs
aas
jmp
jp
lret
ret
add
and
lods
pop
lcall
rcrl
out
pushf
mov
test
cmpsb
ljmp
mov
xchg
repnz
inc
cmc
mov
xchg
add
pop
fxch
mov
jns
sti
dec
out
sub
repz
jne
mov
and
rcr
insl
fwait
test
push
adc
aam
jecxz
insb
out
xchg
xor
push
add
sub
dec
jle
pop
or
aaa
jo
mov
jp
jecxz
or
adc
inc
clc
jnp
pop
inc
mov
in
dec
loop
sbb
pop
test
adcl
jo
inc
scas
dec
fsubrl
xor
add
loopne
data16
jge
dec
push
stos
fsub
sub
sub
dec
pop
decl
cld
arpl
iret
pushf
jp
mov
fsts
jbe
es
mov
pop
popf
cmp
jno
cmpsb
les
cmpsb
out
xor
inc
test
mov
cmpsl
lret
pop
roll
call
xor
pop
setp
enter
notl
inc
cmp
and
dec
add
and
sub
fbstp
pop
push
popa
jo
in
or
jb
cmp
or
sbb
jecxz
inc
xor
lret
jg
sub
jl
add
shlb
cmc
dec
sub
cmpsb
jge
lcall
xor
sub
lret
jl
insl
add
mov
iret
in
imull
enter
shrb
inc
test
or
pop
insl
or
cmp
sbb
dec
mov
pop
pop
pop
xor
cmp
xchg
scas
pop
inc
jg
shll
xchg
xchg
push
andb
mov
lcall
mov
lcall
fsub
into
mov
subb
adc
push
insb
mov
enter
jne
push
cltd
and
sbb
mov
xchg
in
mov
cltd
and
jo
out
push
sbb
pop
cmpb
cmp
aaa
mov
icebp
jmp
dec
and
jle
mov
mov
dec
mov
adc
pusha
pop
push
xor
jns
ja
lret
movntps
bound
or
ret
bswap
ret
inc
stos
sahf
xchg
xchg
lret
mov
mov
fistl
add
mov
popf
jl,pn
sub
in
sbb
pop
int3
in
loop
insb
outsl
pop
add
cwtl
fwait
sahf
inc
fistpll
into
fs
scas
or
mov
mov
scas
call
popa
jecxz
cmc
xchg
out
pop
inc
jne
ret
pop
inc
es
addr16
mov
jb
jge
outsb
mov
in
cmp
es
mov
shlb
int3
or
ja
lret
movntps
bound
or
ret
shr
mov
cld
sub
dec
pop
decl
cld
arpl
iret
pushf
jp
mov
popf
test
dec
cmp
inc
xor
inc
aam
stc
mov
cmc
leave
cmp
loop
cmp
das
repz
lods
pushf
aad
hlt
loopne
dec
xchg
jno
and
int
sbb
sub
jle
mov
cli
popl
jp
mov
mov
jl
dec
push
adc
ja
mov
rorb
dec
jae
push
adc
repz
fldt
xor
test
mov
fsubp
sti
lret
test
xor
and
and
outsb
dec
mov
std
and
inc
aam
xchg
sbb
and
js
hlt
repnz
mov
xlat
mov
movsl
lcall
arpl
fbstp
mov
flds
push
mov
in
aaa
mov
cmc
mov
mov
pop
pop
xchg
mov
stc
cs
insl
dec
adc
je
mov
into
imul
inc
ds
dec
dec
notl
arpl
mulb
test
jmp
frstor
mov
or
ret
sub
data16
adc
cltd
xchg
xchg
inc
das
cmp
mov
inc
pop
sub
jle
or
cltd
ds
mov
sahf
add
cwtl
pop
mov
shlb
xor
mov
push
xor
inc
jnp
les
aam
adc
gs
lods
xlat
or
pop
lahf
icebp
xor
jnp
popa
rcr
jp
jns
movsl
push
fwait
add
push
lret
popa
icebp
add
and
dec
data16
or
lea
mov
pushl
xchg
dec
inc
mov
xor
sub
stos
or
ret
mov
mulb
dec
sar
or
cmp
push
push
push
xor
inc
jnp
les
aam
adc
gs
lods
xlat
or
pop
lahf
icebp
xor
jnp
popa
rcr
jp
jns
movsl
push
fwait
add
push
lret
popa
icebp
add
and
dec
data16
or
lea
mov
pushl
xchg
dec
inc
mov
xor
sub
stos
or
ret
mov
mulb
dec
sar
or
nop
dec
leave
mov
xor
inc
jnp
les
aam
adc
gs
lods
xlat
or
pop
lahf
icebp
xor
jnp
popa
rcr
jp
jns
movsl
push
fwait
add
push
lret
popa
icebp
add
and
dec
data16
or
lea
mov
pushl
xchg
dec
inc
mov
xor
sub
stos
or
ret
mov
mulb
dec
sar
or
lahf
and
addl
mov
lods
aad
hlt
sub
mov
hlt
mov
aas
sarb
pushf
test
lods
lret
fs
add
insb
pop
mov
stos
adc
int
sbb
mov
fsub
mov
shrb
xchg
xchg
in
cwtl
fdiv
out
jns
sbb
pop
mov
mov
outsl
lret
xor
pop
cmc
jle
push
sbb
test
mov
gs
jnp
les
aam
adc
gs
lods
xlat
or
pop
lahf
icebp
xor
sub
mov
data16
int
push
mov
andb
test
stc
out
fcos
daa
test
inc
and
add
outsb
insb
sbb
inc
test
lret
add
push
mov
jb
fnstsw
dec
call
ss
jb
xchg
test
or
ja
push
mov
push
mov
pop
repz
xor
fstpt
cmp
into
and
sbb
dec
int
dec
in
insl
dec
pop
sbb
and
aad
mov
add
inc
sarl
ja
inc
push
je
getsec
lret
cwtl
lods
cmp
gs
sbb
push
inc
dec
sbb
add
mov
adc
sbb
dec
push
data16
mov
xlat
or
xchg
mov
lret
inc
add
and
mov
or
sbb
inc
pop
out
add
rcl
aaa
stos
push
hlt
cwtl
loop
test
ret
mov
loopne
in
fst
das
xorl
xchg
sahf
imul
or
jns
pop
popf
xor
testl
pusha
loop
lds
jg
inc
ds
dec
dec
notl
jae
dec
push
out
cmpl
stos
mov
outsl
leave
and
dec
dec
lds
sbb
push
xor
dec
ljmp
stos
xchg
aam
sbb
inc
test
lret
add
push
mov
jb
fnstsw
dec
call
ss
jb
xchg
test
or
ja
push
mov
xor
sbbl
inc
roll
add
mov
adc
adc
or
cmp
enter
dec
pop
sbb
and
aad
mov
add
inc
sarl
ja
inc
push
je
getsec
lret
cwtl
lods
cmp
gs
sbb
push
in
push
cmc
repnz
into
movsb
repz
mov
insl
gs
mov
nop
adc
push
cmp
insb
and
mov
or
sbb
inc
pop
out
add
rcl
aaa
stos
push
hlt
cwtl
loop
test
ret
and
adc
jne
pop
aaa
test
je
or
jns
pop
popf
xor
testl
pusha
loop
lds
jg
inc
ds
dec
dec
notl
or
sbb
mov
adc
scas
adc
add
mov
lcall
je
cmp
mov
jmp
lea
cmp
add
pop
sbbl
xchg
xor
lret
lods
jb
mov
adc
daa
clc
mov
dec
dec
aas
dec
shl
hlt
loopne
or
lea
mov
pushl
xchg
dec
inc
mov
cmp
pop
fcmove
out
movsl
pop
xor
bound
and
push
fbstp
jl
imul
fldl
jbe
insb
jae
mov
mov
cmp
adc
or
out
and
add
insl
leave
sahf
dec
out
and
pop
fabs
cwtl
dec
in
nop
adc
push
cmp
insb
and
mov
or
pop
mov
cmpsl
push
xchg
jmp
inc
xchg
push
xchg
mov
jnp
mov
fisubrl
and
mov
arpl
clc
ljmp
sub
adc
pop
mov
mov
xchg
mov
dec
dec
aas
dec
shl
hlt
loopne
or
lea
mov
pushl
xchg
dec
inc
mov
cmp
pop
fcmove
out
movsl
pop
xor
bound
and
push
fbstp
jl
imul
fldl
jbe
insb
jae
mov
mov
cmp
adc
or
out
loopne
das
sbb
sarl
jmp
inc
jecxz
xchg
and
ljmp
xor
xchg
and
loope
out
xchg
pop
and
ljmp
jge
mov
in
das
test
sub
je
lods
in
mov
mov
cmpsl
or
jmp
loopne
push
clc
mov
sbb
shrb
add
movsl
rcll
push
inc
or
cmp
enter
dec
pop
sbb
and
add
lcall
push
out
shr
push
test
xor
stos
and
frstor
mov
push
mov
js
repz
push
data16
mov
xlat
or
xchg
mov
lret
inc
add
and
mov
or
lea
jno
sub
dec
das
sbb
cmp
adc
stos
call
xor
cmp
cmp
jbe
adc
movsb
aam
in
iret
sti
les
clc
loop
xchg
xchg
inc
das
cmp
mov
inc
pop
sub
iret
xor
adc
inc
leave
popa
mov
adcb
scas
mov
mov
aam
pop
cmp
sbb
popf
jg
xchg
adc
jns
stos
cmpsb
in
cmpsl
add
pusha
loop
lds
jg
inc
ds
dec
dec
notl
lahf
shlb
jg
pop
out
gs
les
call
addb
sti
xor
shlb
ja
push
dec
cld
fstp
xchg
jae
decl
xor
in
pop
push
dec
dec
aas
dec
shl
hlt
loopne
or
lea
mov
pushl
xchg
dec
inc
and
in
mulb
or
cs
addr16
push
das
das
popa
or
movsl
fwait
adc
sbb
adc
sahf
in
gs
imull
xchg
mov
insl
gs
mov
nop
adc
push
cmp
insb
and
mov
or
lea
jno
sub
dec
das
sbb
cmp
adc
divb
incl
pop
lahf
aas
jp
lods
popf
in
xchg
dec
aaa
lret
ss
sti
les
clc
loop
xchg
xchg
inc
das
cmp
mov
inc
pop
sub
iret
xor
adc
inc
leave
popa
mov
adcb
scas
mov
mov
aam
jae
int
xchg
test
cs
je
cltd
xchg
mov
add
pusha
loop
lds
jg
inc
ds
dec
dec
notl
lahf
shlb
jg
pop
out
gs
les
call
addb
sti
xor
shlb
dec
movsb
xchg
dec
add
mov
inc
or
cs
stc
into
dec
popa
in
pop
push
dec
dec
aas
dec
shl
hlt
loopne
or
lea
mov
pushl
xchg
dec
inc
mov
clc
sub
pop
add
cmp
mov
jo
xorl
or
jns
subb
pop
xchg
fldl
jbe
insb
jae
mov
mov
cmp
xchg
inc
push
ret
cmpsb
dec
icebp
iret
rcl
shrl
int
push
adc
mov
inc
test
lret
add
push
mov
jb
fnstsw
scas
insb
xor
jno
icebp
in
or
mov
fxtract
add
shl
lcall
test
and
mov
leave
mov
jbe
ficoml
dec
fs
dec
dec
rorb
mov
pop
out
add
addl
push
add
or
mov
rclb
imul
inc
ds
dec
dec
notl
arpl
mulb
test
jmp
frstor
mov
or
ret
sub
cltd
ret
add
jmp
lea
cmp
add
pop
sbbl
insl
pop
xchg
cltd
mov
mov
push
mov
add
add
das
adc
pop
sbb
inc
test
lret
add
push
mov
jb
fnstsw
scas
insb
xor
jno
icebp
in
or
mov
fxtract
add
shl
lcall
test
and
mov
leave
mov
jbe
ficoml
dec
fs
dec
dec
rorb
mov
pop
cmp
addb
dec
les
jl
out
in
xor
out
jle
notb
enter
xor
popa
and
les
rorb
aad
daa
mov
push
pop
xchg
sbb
scas
xor
dec
stc
pop
sarl
jae
push
fiadds
pushf
rcll
cltd
cmpsl
xor
mov
leave
js
fs
mov
and
xor
ja
fbld
push
fwait
sbb
jle
cmpsb
fs
inc
dec
cwtl
push
stos
xor
sti
rorl
fmul
ret
cs
loop
js
shlb
cmp
cmp
pop
xchg
jp
dec
inc
or
js
es
jle
add
sub
loope
xor
cmpsb
pop
ffreep
jbe
jmp
add
lret
fistl
push
push
add
add
cmp
pop
fsubr
pop
test
push
gs
insb
jg
icebp
push
or
loop
hlt
sub
mov
addr16
lea
negl
ljmp
adc
jge
lods
xchg
in
loopne
mov
outsb
negl
jo
aad
sbb
adc
inc
xor
mov
xor
cld
pcmpgtb
sbb
xchg
mov
jae
xchg
and
push
loop
pop
loopne
dec
jg
aas
xchg
xor
xchg
out
dec
jecxz
adc
add
jmp
repz
mov
lret
cmpsb
into
xchg
cwtl
lods
sub
stc
cmc
std
dec
mov
int
jne
mov
movsl
popa
xchg
icebp
adc
shlb
shrb
xlat
data16
xlat
aaa
and
push
push
cmp
mov
aam
repz
mov
gs
shrb
and
adc
les
out
adc
jnp
inc
adcl
fbld
arpl
or
xchg
loope
lret
xchg
not
in
jnp
jb
sub
lcall
dec
mov
xchg
inc
aad
loopne
out
hlt
cwtl
ss
stc
inc
adc
jl
dec
sbb
mov
xor
push
jl
xchg
out
fistpll
scas
mov
repnz
push
aaa
pushf
ret
xor
dec
lea
cli
in
sbb
dec
mov
nop
xlat
and
decl
out
mov
mov
mov
lds
sbb
insb
xor
xor
jno
out
mov
cmp
imul
fsubrp
jae
outsb
mov
mov
and
xor
jle
mov
int
test
push
aaa
clc
cmp
aam
sub
or
mov
push
stos
into
mov
call
dec
aas
cmp
mov
clc
xchg
fcmovne
jmp
mov
or
fistps
testb
xor
or
cld
sub
rolb
insb
push
mov
ret
aaa
ja
xlat
inc
mov
push
rcll
cmp
ss
or
std
push
cltd
aas
scas
inc
rclb
cmpl
cmp
out
mov
out
or
jno
xorl
insb
cs
xchg
and
jecxz
pusha
mov
sub
xchg
dec
repz
sarl
pop
jp
or
xor
xchg
or
jno
out
cmp
loopne
and
js
mov
xchg
cmpsl
call
cmp
cmpsb
xchg
pop
outsl
jg
sub
pop
xor
jo
add
jmp
sub
inc
jae
jno
cmp
add
add
sub
jl
bswap
and
dec
add
mov
pop
stos
or
lock
push
mov
in
mov
or
add
clc
fsts
or
dec
adc
and
jbe
push
int
push
int
cmp
or
test
dec
mov
lahf
add
jae
iret
mov
popf
or
mov
test
pop
add
pop
add
mov
xor
addr16
xorb
sub
sahf
push
mov
mov
js
xor
cld
sub
push
stc
je
enter
lods
dec
sbb
aad
ret
and
lea
push
adc
push
jmp
pop
push
leave
xchg
push
js
xor
mov
xor
imul
outsl
jmp
and
jb
adc
sbb
gs
lods
fisubrl
shl
addb
ljmp
test
or
stos
int3
mov
jge
pop
xchg
add
adc
clc
into
and
out
mov
fmul
xchg
rcrl
test
cmp
out
mov
jmp
imul
lds
int
mov
clc
dec
jle
sbbb
mov
mov
insb
jmp
push
jle
mov
rolb
push
popf
outsl
sub
fwait
pop
adc
push
in
pusha
nop
mov
push
push
scas
pop
lcall
iret
and
call
pop
cmp
aas
ljmp
je
mov
pop
ss
in
out
repz
bound
pushf
lock
mov
inc
dec
mov
push
ss
mov
or
jo
arpl
daa
loopne
andb
fistpll
sub
jns
clc
inc
push
lea
and
and
jb
mov
loopne
mov
sbb
xchg
inc
bound
es
pop
mov
cs
mov
imul
lcall
lea
lods
out
cltd
int3
mov
dec
xlat
sub
cltd
mov
arpl
outsl
inc
imul
cmc
les
lock
and
and
inc
hlt
fldln2
repnz
cld
call
sbb
or
int3
stos
rol
setge
cmp
movsl
aaa
or
dec
jb
out
adc
dec
fwait
jmp
clc
mov
stos
or
sub
push
jbe
sub
aam
repnz
push
ljmp
test
push
lret
fisubrl
push
into
cmp
fucomi
leave
fcoml
sbb
cmp
cmp
lret
dec
es
jecxz
pop
inc
xchg
sarb
xchg
inc
cltd
mov
ret
mov
xor
pop
arpl
cmp
inc
xchg
xchg
or
in
mov
pushf
or
add
mov
js
adc
ficoml
sub
jb
xchg
js
std
lahf
in
xor
scas
mov
imul
scas
and
mov
push
push
imul
add
and
or
jno
ss
roll
push
push
out
xor
push
decb
es
bound
xchg
shll
ret
out
mov
dec
push
mov
fcoml
mov
addr16
clc
pop
push
lcall
inc
mov
insl
shrb
pop
add
push
jo
ficoms
xor
xchg
pop
and
xchg
fdivrp
add
add
mov
adc
loope
ljmp
pop
int
add
and
sbb
push
xchg
mov
cwtl
loop
or
das
jae
ljmp
inc
lret
sub
add
aad
out
sub
scas
stos
inc
lahf
ds
fidivs
and
shr
jae
push
xor
jo
cmp
ljmp
outsb
shl
xchg
aaa
cmp
push
jo
xchg
lret
jge,pt
lret
push
cmpsb
js
and
loope
push
fsub
xchg
add
ret
jb
imul
icebp
js
pop
cmc
inc
dec
or
jno
jno
in
xchg
push
in
adc
mov
out
mov
jno
mov
sbb
cmc
pop
aas
cmpsl
cmp
sub
or
ror
xor
mov
mov
push
or
add
gs
test
xchg
xchg
inc
adc
xchg
daa
sub
aad
fnstcw
adcl
pusha
lods
sub
push
cmp
clc
into
mov
jg
stos
sub
aas
pop
test
and
nop
mov
fistpll
push
nop
insl
xchg
or
dec
sbb
push
push
xchg
fcom
push
pop
stos
mov
js
mov
dec
mov
dec
shll
adc
lcall
push
add
repnz
sbb
mov
add
int
stos
andnps
cmc
mov
fs
push
lods
xchg
jle
ret
fcoms
add
inc
fwait
lds
inc
sarl
aas
aas
imul
and
add
fcoml
rolb
and
pop
jge
loopne
aam
xchg
mov
mov
add
jae
pop
imul
dec
pop
test
ss
std
jne,pt
pop
and
and
data16
out
xchg
or
daa
pop
sti
mov
xor
xchg
lcall
pop
ret
and
jge
out
jp
cmpb
ja
pushw
js
rorl
jno
cltd
adc
xchg
mov
push
paddusb
inc
cltd
mov
ret
inc
and
jl
cmp
xor
sub
in
jae
ss
rorl
push
insl
enter
scas
push
add
push
sti
mov
cmpsl
pop
jge
sub
ljmp
lret
push
sbb
sbb
mov
enter
fwait
jae
test
jo
sti
dec
fidivl
addr16
fsubrl
sbb
mov
push
mov
mov
sub
in
sbb
mov
data16
add
jl
ss
ljmp
adc
or
sub
jle
jge
sbbb
into
xchg
cmp
mov
add
pop
addr16
into
and
or
popf
xor
je
pop
mov
jo
out
test
fadds
cltd
std
push
mov
fwait
push
mov
lahf
call
cli
rol
cmc
jae
les
inc
push
pop
ljmp
sub
or
dec
jg
xchg
enter
fcomps
inc
jne
imul
sub
data16
je
dec
xor
inc
outsl
adc
int
pop
jg
pop
sbb
loop
mov
lds
shrb
popa
jle
push
or
pusha
sub
out
mov
jae,pt
push
adc
xchg
inc
popl
xor
or
push
ret
xchg
mov
sub
or
push
andl
loop
addr16
imul
ds
dec
push
adc
ret
mov
jg
dec
inc
dec
insl
pop
mov
and
shll
xchg
jnp
jl
in
ret
js
xchg
imul
lret
movhps
cmp
xor
mov
in
add
in
sahf
cmp
jp
popf
insb
adc
pop
dec
jmp
lock
mov
push
clc
test
dec
sbb
sbb
jb
jns
arpl
fldenv
jle
out
and
jl
movsl
bound
and
ret
pop
xchg
inc
sbb
mov
lcall
iret
xchg
cs
jns
xor
inc
push
inc
rclb
push
ret
lcall
push
sti
repnz
dec
pop
pop
sub
std
dec
mov
sbb
inc
enter
out
xor
pop
jo
popa
aaa
outsb
repz
into
jle
mov
test
dec
dec
add
addr16
push
sarb
cmp
mov
xchg
or
dec
sbb
cld
pop
mov
fmul
adc
scas
les
int3
pop
mov
mov
pop
insl
loope
in
xor
scas
sub
xchg
ja
add
arpl
xchg
lods
cmp
fsubrp
in
xchg
aaa
pop
movb
mov
jp
xchg
pop
test
test
inc
or
xor
notl
lods
and
jnp
movsb
in
mov
push
into
push
rcrb
or
sub
aam
stos
adc
inc
mov
sbb
rcrl
pop
dec
jnp
cmp
adc
xchg
fsubrl
jp
stos
test
fimull
int3
or
aaa
int3
std
sar
or
cs
ret
mov
xchg
je
das
and
in
into
jae
cmp
and
add
push
cmp
xchg
push
adc
ljmp
jmp
mov
add
xor
adc
xor
adc
pop
cwtl
xchg
pop
xchg
pop
lar
popf
pop
mov
insb
xor
lock
rcr
cmpsl
or
xchg
mov
push
adc
in
lods
inc
sti
sbb
inc
mov
lods
rcrl
sti
or
sbb
pop
lods
mov
mov
das
xor
inc
js
cmp
sbb
mov
sub
inc
inc
dec
mov
ds
popa
add
dec
cwtl
jbe
xor
cmp
leave
out
adc
hlt
xchg
data16
mov
push
push
push
gs
loopne
mov
cs
or
pop
sahf
jp
daa
cmc
scas
dec
sub
pop
fdivs
pop
imul
stc
in
xchg
mov
aad
sahf
addb
loopne
adc
out
and
sbb
and
dec
jl
or
dec
insb
mov
test
lods
lock
popf
lea
add
loop
jecxz
sub
jmp
dec
arpl
add
pop
sub
getsec
das
cmp
jb
sahf
push
mov
clc
cwtd
mov
pop
shrb
mov
cmpsl
das
cwtl
cltd
scas
test
mov
dec
test
dec
jnp
push
xchg
adc
std
jle
js
and
pop
movsl
ret
shll
adc
and
dec
jl
insb
pop
sub
sub
enter
shll
sub
add
fcmove
es
ret
mov
mov
loope
in
loope
fstpt
lret
cld
in
rcr
rorb
ja
adc
xchg
fiaddl
mov
mov
sbb
ja
test
pop
jecxz
add
sbb
xor
mov
les
jg
dec
mov
insl
ds
cmp
fisubl
es
nop
or
sarl
add
es
push
and
adc
test
pop
idivl
lods
sarl
jg
lret
and
xchg
mov
insb
sti
inc
in
jne
pandn
push
and
pop
dec
jno
pop
cld
in
ret
rcll
xchg
sahf
test
jno
lock
add
mov
notl
movsl
xchg
enter
aas
jl
add
sbb
push
inc
clc
cmp
lahf
pop
mov
and
dec
mov
pop
add
jnp
out
xchg
or
or
push
and
xlat
and
mov
scas
addr16
or
pop
jns
data16
pop
ja
leave
add
or
mov
mov
sbb
fistpll
sbb
xor
cmc
or
or
inc
gs
fstl
cmpsl
mov
cwtl
repnz
cmp
call
dec
push
xor
jo
jecxz
inc
sbb
stc
aam
std
pop
sbb
movsl
ret
lret
push
test
movsb
imul
int3
xchg
movsl
lock
idivb
pop
inc
btr
roll
dec
ret
insl
mov
dec
mov
adc
imul
cwtl
pop
pop
fisttpll
pop
xchg
inc
jle
imul
iret
mov
stos
mov
xor
jns
mov
or
stos
mov
xchg
cmp
call
data16
mov
mov
pushf
out
lock
mov
mov
lods
sbb
sar
adc
and
pushf
cmp
mov
and
cmp
test
xchg
outsl
popa
adc
int3
das
movsl
sub
cmp
cmp
lock
popa
sti
outsb
and
scas
or
daa
bound
test
mov
in
hlt
rcrl
es
xor
inc
insb
inc
sbbb
sbb
adc
xchg
popa
add
stc
call
push
addr16
loopne
pop
fisttpll
daa
sub
or
into
test
sub
fdivr
push
adc
and
pop
jns
int3
nop
inc
pop
mov
lock
and
inc
repz
aaa
push
sub
push
aas
inc
cmp
aas
pop
aad
dec
fcoms
lahf
cmp
and
dec
mov
jns
push
mov
icebp
das
or
imul
daa
adc
aam
ljmp
dec
loope
pop
inc
cmp
and
adcl
jmp
or
or
out
jae
jns
mov
mov
jg
sbb
or
jl
jne
dec
loope
in
lahf
cli
push
pushf
pop
pop
nop
arpl
dec
mov
jg
adc
sti
dec
lcall
xchg
icebp
outsb
add
adc
clc
xor
sahf
popf
roll
jp
out
lcall
dec
hlt
mov
loop
repnz
sbb
xchg
aam
ljmp
push
out
push
mov
outsl
cltd
dec
mov
mov
dec
adc
lock
cmp
push
imull
cld
stc
sahf
cmp
insb
lret
ficompl
inc
push
mov
mov
adc
mov
stos
iret
adc
idivb
lret
inc
rcll
test
xor
aaa
xchg
rcll
cli
cwtl
movsl
adc
and
cmp
popa
mov
lahf
push
ljmp
test
cmp
and
leave
sub
test
shl
test
xlat
cmp
ret
stos
mov
leave
rorb
mov
inc
cmpxchg
and
andl
outsb
xchg
xchg
mov
in
xlat
test
xchg
mov
test
mov
mov
dec
insl
dec
lcall
loop
xchg
out
mov
add
add
movsl
xadd
in
xchg
popf
lods
andl
lock
cmp
mov
sbb
test
adc
pop
push
insb
lock
test
test
pop
das
add
cwtl
test
mov
sbb
push
push
outsl
daa
push
sbb
sub
and
xchg
mov
lcall
adc
sbb
outsb
pop
rorb
inc
mov
inc
cwtl
fiadds
sub
out
xor
push
xchg
movl
fidivrl
xchg
push
arpl
xchg
pop
je
adc
sbbb
scas
push
push
push
cmpsl
sub
testb
adc
lods
dec
and
push
push
lock
into
pop
jne
sbb
insb
xor
or
xchg
or
mov
pop
mov
jnp
fs
iret
cmp
bound
rcll
pop
sub
cwtl
mov
xor
sub
rolb
scas
daa
inc
fucom
sbbl
mov
xor
pop
test
push
frstor
mov
dec
int3
push
jle
push
dec
mov
in
mov
pop
xor
xchg
enter
or
bts
les
mov
iret
pop
jne
mov
cmovb
clc
mov
pop
adc
push
lods
int3
cmpsl
jl
or
call
in
push
inc
je
mov
xchg
cmpsb
shll
gs
in
or
leave
push
insl
ja
fcomps
mov
ljmp
fs
imul
jmp
imul
push
and
into
cmp
pop
push
or
jb
inc
je
dec
popf
out
clc
fistpll
lcall
jl
xor
ret
cmpb
mov
cmpsl
dec
dec
aas
adcb
ja
pusha
adc
clc
mov
sbb
imul
mov
pop
push
and
mov
das
pop
xchg
repz
push
jp
sbb
inc
std
mov
pusha
ja
gs
inc
xchg
xrstors
cmp
rorl
xchg
imul
push
hlt
adc
inc
nop
sbbl
and
ja
mov
jl
inc
mov
sbb
dec
or
cld
lcall
mov
jmp
jge
add
popa
adc
xor
in
push
arpl
adc
mov
pop
inc
js
movsl
imul
or
cmp
test
std
mov
xorb
jno
lds
and
repnz
jno
sarl
js
mov
out
shlb
aam
mov
pop
fnstenv
dec
in
mov
jge
out
pop
fnsave
stos
and
sbbl
notb
add
lea
lret
jl
in
aam
int3
inc
lret
pop
stc
sub
sub
rcr
into
xor
jbe
mov
inc
add
sub
movsl
push
sahf
mov
mov
pop
cld
into
mov
or
pop
jb
inc
mov
sub
mov
jnp
popa
fistps
mov
lods
or
enter
leave
ret
and
fadd
hlt
jecxz
jmp
dec
mov
cmp
shlb
ljmp
or
jbe
mov
sub
adc
xchg
add
cmp
sub
pop
mov
mov
jg,pn
push
fistps
push
movsl
sbb
in
mov
and
dec
pop
ljmp
jle
fimuls
adc
dec
daa
jns
xlat
pop
addr16
dec
pop
jmp
xor
dec
neg
pop
jbe
jp
dec
pop
movsb
cld
push
arpl
or
xor
xchg
in
insl
lahf
pushf
arpl
push
mulb
jl
mov
rorl
out
push
push
out
push
inc
pop
mov
std
push
cmp
mov
cmpsb
roll
inc
mov
jns
inc
pop
cltd
push
sbb
stos
push
sub
pusha
insl
mov
enter
lcall
ja
out
popf
xor
and
andb
pop
enter
xlat
adc
sti
scas
cli
adc
ret
leave
lods
sub
dec
sbb
int3
insb
push
mov
dec
repz
adc
or
push
jne
xor
xor
push
stos
mov
in
fiadds
mov
dec
out
je
cmp
push
push
bswap
mov
xchg
imul
and
scas
into
daa
mov
adc
repnz
sbb
adc
ret
leave
xor
pop
out
out
sub
aam
shll
push
shlb
rolb
pop
negl
push
mov
popf
test
add
addr16
in
cmp
lret
jmp
test
mov
shr
xor
clc
mov
adc
cmp
imul
inc
pop
add
cmp
in
jg
out
cmp
nop
movsl
into
mov
dec
jp
lcall
push
test
bound
mov
mov
jo
cld
sti
xor
push
xlat
mov
in
popa
popl
jg
add
xchg
outsl
cwtl
pop
aas
cmp
mov
adc
sbb
xor
imul
mov
adcl
xor
leave
add
or
xchg
enter
push
imulb
mov
cmpsl
sbb
arpl
enter
or
mov
out
fsts
jmp
ficomps
inc
and
pop
subl
imul
ds
out
push
addr16
sub
cld
aas
insb
dec
out
mov
dec
repz
repnz
stos
sbb
jns
fldenv
jle
mov
cmc
jnp
xchg
sahf
sbb
cmp
inc
movsl
cltd
lods
cmp
push
mov
test
push
movsl
sarb
pop
mov
xlat
inc
pop
aam
jae
or
pop
cmp
xchg
int
decb
aas
pop
push
cmp
add
lea
pop
aam
mov
push
ljmp
das
mov
or
cwtl
fldl
push
jnp
rclb
je
call
jb
pushf
dec
pop
mov
hlt
mov
or
int
push
push
inc
jecxz
xchg
pop
dec
aas
adc
mov
popa
pop
pop
mov
jle
add
mov
dec
out
xor
cmp
int3
mov
inc
mov
xor
adc
xor
sbb
jecxz
push
xchg
loop
sbb
imul
push
testb
fs
testb
xor
sti
sbb
inc
mov
cli
fistpll
pop
rcll
xor
subl
movb
add
mov
pop
mov
lock
push
aaa
and
mov
or
out
outsl
push
xchg
cmp
popa
lret
mov
stos
cmp
sub
lods
dec
outsl
lahf
lods
shlb
sub
push
dec
mov
mov
ljmp
js
iret
cmp
cld
imul
jno
fs
lea
sub
xchg
or
stc
lret
lret
les
cmpl
stc
cltd
cltd
das
mov
roll
lds
sbb
cld
mov
adc
pop
ss
mov
lods
insl
fnstenv
fsubs
pop
div
push
les
inc
push
shll
dec
int
ds
aaa
lcall
stc
cmp
xchg
jecxz
dec
cmp
or
cld
mov
xchg
inc
xor
leave
imul
call
xor
xor
mov
aam
ss
cwtl
fildl
add
pop
pop
inc
or
dec
jg
out
fwait
jmp
xorb
sbbl
je
xchg
cwtl
out
pop
pop
je
loop
xor
push
adc
in
leave
mov
push
divl
out
and
fsts
and
clc
pop
pop
movsl
imull
jno
pop
andl
rclb
aad
nop
xchg
mov
jecxz
push
lret
lock
pop
loop
and
jge
jns
jg
lcall
rcr
sub
call
in
sbb
lds
stos
out
inc
adc
mov
ror
xor
insb
mov
std
repz
cmp
add
pop
orb
testb
cmp
out
imul
test
and
mov
das
ljmp
scas
jge
jae
mov
jne
adc
pop
sub
ja
in
in
cmc
sbb
inc
sbb
dec
ret
adc
ret
mov
ret
hlt
or
call
loope
dec
repz
fildll
stos
icebp
in
loope
push
add
js
mov
mov
aad
mov
and
in
in
roll
bound
mov
sti
hlt
lods
incl
jae
adc
pop
insl
pop
jmp
mov
sahf
mov
in
mov
data16
lods
xchg
sbb
pop
mov
or
or
pusha
imul
mov
xchg
push
pop
xchg
or
adc
int3
pop
jmp
imul
sub
push
mov
cmp
fldenv
inc
mov
adc
popf
inc
rolb
fwait
pop
test
shr
inc
mov
jle
sbb
push
aaa
mov
test
std
mov
cmpsb
cltd
inc
add
mov
inc
xchg
imul
xchg
outsb
je
ss
mov
cmp
xlat
jae
dec
pop
mov
mov
cmp
sub
data16
jl
push
adc
mov
mov
daa
mov
pop
cmp
push
mov
outsb
and
jg
arpl
pusha
jb
push
and
add
jne
push
xchg
or
mov
jge
lcall
xor
std
imul
ficomps
pop
fs
and
xor
jne
pop
cmpsb
sub
mov
jp
add
icebp
loop
lea
iret
fmul
sub
loopne
enter
inc
filds
add
mov
int3
push
or
sub
rcr
jge
into
inc
add
dec
dec
or
popa
mov
cmp
cwtl
mov
hlt
or
mov
mov
inc
jbe
aam
cmpsl
in
shrb
sbb
cmc
aad
mov
ret
in
push
repnz
xchg
push
mov
sbb
xor
cmp
push
inc
lds
jo
mov
push
scas
add
popf
and
mov
sbb
push
cmpsb
push
xlat
or
pop
push
jne
movsb
mov
lods
gs
mov
dec
cmp
jb
xor
scas
mov
push
out
xchg
ret
iret
sub
lock
fistpl
lods
add
mov
sbb
dec
insb
lcall
hlt
lods
leave
icebp
cltd
pop
push
ds
push
mov
jge
adcb
arpl
push
sub
testl
mov
repz
subw
ljmp
idiv
rorl
loopne
inc
adc
mov
lds
bound
mov
jns
ret
inc
dec
addr16
xor
xchg
mov
push
imul
adcl
add
xorb
mov
xlat
call
sub
xor
leave
xor
adc
jg
ret
lea
mov
push
adc
or
out
fcomp
test
fmulp
hlt
addr16
aas
jl
je
cmp
adc
sahf
arpl
mov
inc
nop
push
cwtl
add
test
mov
cs
pop
sbb
dec
loope
dec
pop
int3
and
nop
in
dec
addr16
add
pop
rcll
push
jecxz
mov
and
jne
jl
sbb
loopne
push
aas
pop
push
sub
ja
inc
xchg
inc
cmp
mov
pop
xchg
enter
inc
adc
in
or
mov
test
shrl
push
sub
in
jb
or
xor
lods
es
fisttpl
cli
and
pop
faddl
xchg
cs
movsl
mov
subl
in
adc
repz
fcomps
mov
dec
mov
push
sub
lock
sbb
inc
in
out
sarl
out
push
in
pop
lods
and
jl
mov
out
js
mov
subl
mov
cmp
ret
sbb
aam
outsb
xchg
sub
stos
mov
xorps
int
mov
lods
mov
push
ljmp
sbb
clc
sbb
pop
arpl
pusha
adc
aas
adc
mov
push
std
ds
or
add
push
iret
xchg
xchg
leave
push
dec
pusha
sbb
imul
push
xchg
jge
ss
daa
sub
inc
or
cmp
jl
jp
mov
cvtps2pd
dec
aas
push
leave
jno
in
xchg
cmp
or
xchg
dec
sub
sbb
aaa
in
mov
sbb
in
cmp
xchg
inc
add
outsl
sub
mov
jmp
mov
add
daa
repz
xor
push
and
or
pop
xlat
adc
nop
and
movsb
mov
orb
ss
lea
fs
mov
inc
js
imul
subl
hlt
scas
adc
out
mov
test
fwait
pop
stos
push
dec
and
ljmp
jbe
hlt
ret
in
jb
leave
outsb
leave
or
fucomi
sbb
jns
insl
rorb
dec
xor
sbb
mov
and
or
cli
sbb
fs
shrl
xchg
inc
adc
mov
add
sahf
push
dec
xchg
jmp
stc
popa
call
in
std
les
inc
aas
xchg
cmp
sbb
push
jb
cli
and
inc
int3
testb
aas
add
and
cmpl
sub
stc
test
push
adc
jo
add
out
iret
pop
dec
cmp
mov
in
in
pop
inc
pop
push
sub
repz
outsl
ja
pop
inc
add
adcl
mov
aas
jg
pop
ljmp
push
cli
scas
stos
nop
pusha
test
insl
es
sbb
ret
rclb
xchg
jg
jb
mov
add
sbb
test
scas
dec
in
sbb
jo
lock
jge
movsl
aam
adc
cld
dec
push
in
cmp
inc
xchg
addb
jecxz
jne
mov
fisubrl
and
sahf
pop
int3
xchg
jmp
push
mov
inc
stos
enter
repz
push
rolb
cltd
cmp
test
ret
jp
cmp
inc
add
ds
jg
pop
sub
das
push
imul
pop
int
out
cmp
orl
pusha
xchg
cmp
loop
cmp
sarl
stc
sbb
dec
pop
fdiv
mov
cmp
xor
pop
add
sbb
out
and
jb
add
mov
call
sti
mov
push
and
popf
stc
lret
sub
xlat
fildll
movhps
loope
rorl
dec
imul
aam
pop
pop
sarb
mov
dec
loop
mov
aaa
ljmp
test
leave
cmpsl
mov
mov
stos
xchg
jle
ficompl
and
shlb
rorb
out
nop
es
shll
ds
adc
sub
fcmovne
out
dec
sbb
repz
push
mov
sbb
lds
rorl
sarb
push
lret
sbb
xchg
stos
push
out
outsl
js
jmp
scas
fistl
jno
fs
xlat
adc
andb
mov
fsubs
test
push
popf
xor
data16
push
and
ja
inc
loop
mov
pop
dec
adc
leave
enter
imul
sub
test
push
and
arpl
and
fcmovbe
mov
leave
inc
loope
lret
jno
pop
mull
push
or
push
psubq
or
mov
xorb
icebp
movsb
sti
cmp
pusha
xchg
push
add
testl
cmp
dec
in
loope
dec
mov
xchg
mov
mov
or
test
stos
out
into
fistps
sub
mov
inc
mov
sub
into
rorl
movsb
mov
pop
mov
cmpsb
lods
fistpll
dec
nop
inc
inc
and
shlb
adc
adc
xchg
mov
add
popa
lret
insb
gs
insl
enter
or
and
lods
mov
sub
dec
mov
inc
fs
dec
push
in
jg
rorb
dec
cmp
inc
imul
xchg
ljmp
sbb
data16
pop
lods
pusha
xchg
cmp
stos
cli
cli
inc
push
cmp
fs
lds
insl
xchg
fwait
gs
push
je
jg
das
lock
lock
ja
jb
add
jb
add
inc
mov
add
jnp
ds
loop
call
shlb
out
push
sbb
jecxz
ja
inc
mov
shrl
stc
lock
jo
inc
sbb
lret
pusha
sub
orl
lcall
pushf
movsb
sti
push
fldcw
cmp
enter
xchg
pop
setl
int
loop
pop
imul
popf
out
push
sti
jle
add
in
mov
and
outsb
ss
aaa
pop
inc
into
out
sub
cmp
jbe
dec
mov
test
sub
mov
adc
mov
fs
outsl
icebp
add
add
pop
or
rorl
in
cmp
mov
push
pop
pop
fcoms
inc
xchg
cs
pop
fwait
lods
pop
and
es
es
inc
xor
daa
int
pop
daa
lods
jb
add
or
out
lock
pop
das
lds
int
in
data16
adc
sub
test
mov
jbe
in
pop
mov
push
and
repnz
pop
or
sbb
mov
stos
push
mov
lods
das
in
mov
sub
jge
jge
add
mov
cmp
add
add
add
pop
cli
test
add
cmp
aam
data16
std
inc
movsl
fcomp
and
test
inc
sbb
mov
cwtl
sti
and
aas
xor
cmc
sub
cmpsl
in
jns
xchg
imulb
enter
push
add
lock
jb
movsl
cmp
inc
mov
xor
lock
pop
sbb
push
jno
cwtl
cmp
fcompl
hlt
out
loop
adc
popa
lods
xor
jns
xchg
sub
jns
dec
xlat
decb
or
xor
je
add
sub
mov
xorb
sar
je
inc
fwait
dec
lds
mov
aaa
idivl
mov
dec
js
xchg
and
sub
lea
xchg
mov
sub
in
mov
jb
inc
scas
cs
sahf
cmpb
mov
push
popf
jne
jne
in
stc
shlb
movsb
push
mov
pop
mov
and
lock
mov
pop
cmp
and
xlat
aas
cs
cwtl
mov
stos
cmp
adc
addr16
push
mov
les
pusha
enter
insb
das
sahf
adc
mov
pusha
push
outsb
iret
sbb
sti
lock
mov
adc
ss
inc
sub
jle
icebp
add
cli
fistps
sub
or
mov
xchg
push
pop
xor
lahf
push
or
xlat
repz
or
or
cmp
sbb
adc
cmp
mov
mov
adc
inc
mov
enter
or
stos
add
stos
sub
je
sub
hlt
xlat
out
push
andb
jno
aaa
outsl
sub
sub
mov
mov
pushf
fwait
mov
fistps
mov
popf
or
jg,pt
int3
and
adc
lret
addr16
push
mov
fisttpll
je
in
sbbl
mov
jg
jne
lahf
shr
pop
les
scas
xor
mov
icebp
sbb
jmp
or
push
adc
loop
cs
insl
sub
and
sub
mov
pop
sub
dec
pop
inc
in
inc
bound
inc
jno
ret
mov
popa
sbb
xor
cmpsb
cmp
sub
scas
mov
shlb
cli
or
sub
mov
sti
jnp
repnz
jne
pop
int
je
pusha
pop
roll
mov
iret
enter
lahf
repz
mov
dec
or
pop
lcall
jle
mov
inc
mov
xor
out
les
lcall
call
cld
jle
mov
and
fdivrl
pop
dec
dec
and
aaa
nop
sbb
arpl
jmp
or
mov
sti
mov
repz
sub
cmpsb
inc
ss
push
xchg
scas
rep
mov
fisubrs
jg
dec
les
pop
pop
dec
or
and
cmp
jnp
pop
inc
dec
pop
dec
mov
inc
ja
jp
rorl
push
push
stc
and
mov
cmp
gs
or
pop
adc
sbb
sub
lods
lds
adc
inc
test
div
js
shrl
mov
les
popa
inc
mov
std
push
mov
mov
sbbb
xchg
pop
xorl
into
dec
push
mov
push
lret
popa
cli
pop
clc
adc
adc
hlt
fwait
adc
cmp
dec
push
mov
das
lahf
or
sub
mov
gs
adcb
adc
add
mov
insb
cmp
mov
mov
out
pop
pop
adc
mov
mov
and
ds
das
dec
cs
imul
sti
fstp
pop
push
mov
push
pop
xchg
mov
sti
sub
lods
flds
in
mov
jbe
in
push
fwait
push
mov
subl
sub
add
hlt
fisttps
sbb
stos
push
xchg
mov
mulps
cmp
or
push
mov
insl
and
mov
in
mov
insb
xor
lret
mov
divl
int3
lcall
stos
push
dec
sub
mov
test
in
cltd
push
iret
shl
or
fcmovb
aad
leave
sbb
ja
xchg
stos
movsb
inc
not
faddl
push
sahf
test
test
mov
mov
mov
in
jge
jge
leave
xchg
cmp
cmp
insb
cmp
xchg
jle
cmpsb
or
fwait
idivb
rcll
mov
cmc
in
mov
pop
movsl
int3
je
fs
es
pop
push
mov
add
loopne
add
add
add
add
mov
xchg
adc
ljmp
sbb
rcrl
push
adc
aam
cltd
cmp
pop
fmul
incl
out
clc
sbb
adc
popf
pop
lods
call
movl
or
mov
leave
ret
push
mov
repz
es
stos
cmp
orb
xchg
clc
mov
push
mov
mov
repnz
mov
subb
icebp
fsubrl
gs
pop
jp
pop
add
sbb
jg
xchg
ret
roll
sub
cmpsb
mov
jae
inc
outsb
add
push
lods
sbb
pop
xor
or
aad
call
sbb
push
pop
mov
ljmp
imul
mov
add
sbb
dec
int
sub
ja
jg
imul
cmp
dec
sbb
shl
movsl
aam
mov
jno,pt
dec
inc
fsubrp
jae
adc
pusha
stos
in
pushl
clc
mov
nop
push
repnz
jno
out
imul
mov
jae
lret
aam
sub
arpl
loopne
icebp
shll
mov
cwtl
movsl
ficompl
and
pop
insl
sahf
dec
add
or
pusha
outsl
out
in
roll
xchg
xor
scas
push
pop
cmpsl
enter
fisubs
push
jmp
hlt
and
dec
int3
outsl
movsb
sbb
push
mov
xchg
xor
jns
sub
xor
stos
dec
clc
lods
inc
fmuls
adc
push
push
and
sub
xor
inc
ret
dec
xor
mov
xor
rcr
xchg
sbb
fdivs
aad
outsb
sbb
hlt
dec
jb
push
and
lock
insb
jb
repz
and
and
inc
ss
call
sbb
push
pop
mov
ljmp
imul
cwtl
es
adcl
mov
imul
cmp
dec
sbb
shl
movsl
aam
or
jbe
dec
cmc
mov
or
jb
out
pusha
stos
in
pushl
clc
mov
nop
push
repnz
jno
out
imul
test
imul
inc
cmpsl
lahf
icebp
shll
mov
cwtl
movsl
ficompl
and
pop
insl
sahf
dec
xor
loopne
mov
dec
add
dec
cmp
dec
xchg
xor
scas
push
pop
cmpsl
enter
fisubs
push
cmpxchg
sbb
outsl
movsb
sbb
push
mov
xchg
xor
jns
sub
xor
stos
dec
clc
lods
inc
fmuls
adc
inc
aad
cmp
push
and
sub
xor
inc
ret
dec
xor
mov
jg
dec
pop
aaa
sbb
fdivs
aad
outsb
sbb
hlt
dec
jb
dec
and
xor
xchg
lret
dec
nop
jns
in
adc
mov
mov
jae
jle
stc
dec
adc
scas
jmp
xchg
dec
ud2
fs
enter
push
cmp
enter
xchg
ds
mov
iret
xchg
cmpsl
out
or
ret
pop
fsubrl
mov
dec
pusha
stos
in
pushl
clc
jnp
cmp
mov
out
adc
repz
sbb
xlat
lods
in
leave
and
add
in
adc
xor
into
inc
stos
fisubs
pop
fldl
xchg
mov
pushf
sub
repnz
lret
jmp
stos
jmp
stos
dec
clc
lods
inc
fmuls
adc
xorl
xchg
scas
dec
mov
mov
xor
dec
hlt
loopne
enter
mov
jae
inc
xchg
inc
mov
sbb
testb
scas
pop
sbb
push
adc
addb
mov
lds
lret
sti
mov
and
decl
or
cmp
inc
or
mov
and
sti
dec
lds
cwtl
es
adcl
aam
jno
mov
es
and
test
add
fcompl
mov
and
add
xchg
mov
and
inc
pop
push
xchg
ljmp
shll
bound
dec
popf
andb
or
fstl
sub
pop
xor
and
hlt
das
or
pop
insl
sahf
dec
fsubp
ds
mov
push
sub
outsb
sub
and
add
in
adc
xor
into
inc
stos
fisubs
mov
test
sub
repnz
lret
jmp
stos
jmp
stos
dec
clc
lods
inc
fmuls
adc
mov
fistpl
in
jg
fisubrl
adc
rorb
sbb
sub
cmpsb
mov
jae
inc
xchg
inc
mov
dec
mov
pop
sbb
push
adc
addb
mov
adc
lods
into
push
test
outsl
cmc
cmp
and
or
cmp
insl
lods
push
out
dec
loopne
ret
in
adc
ret
mov
and
fs
jle
xchg
mov
pop
int
xchg
push
add
sti
jo
jns
mov
rorb
sbb
jg
mov
xor
mov
filds
mov
mov
aas
hlt
ss
mov
ds
jge
cmp
pop
push
add
jle
pop
xor
inc
cmc
in
jle
and
leave
and
imul
fwait
jo
test
mov
push
rolb
ret
inc
fwait
sti
xor
mov
mov
mov
pop
xchg
jno
push
inc
dec
and
test
mov
popf
cmp
and
adc
in
dec
test
xchg
dec
cmpsb
lret
test
push
mov
xor
pusha
mov
xchg
rclb
sub
out
cld
add
je
mov
dec
loopne
ret
in
push
in
fbld
mov
mov
mov
and
fs
jle
xchg
mov
pop
and
mov
sahf
pop
and
xchg
xor
adc
push
shll
jp
stos
push
mov
mov
in
ja
out
scas
inc
sub
xor
mov
xor
jne
or
and
cmp
cli
repnz
call
test
mov
loop
lcall
loopne
adc
enter
dec
lcall
dec
xchg
xor
or
ljmp
cmp
ds
shlb
repnz
enter
lret
lea
or
cld
dec
lods
lock
shll
in
pushl
clc
pusha
mov
add
push
pop
idiv
movsl
add
cmp
mov
xor
jb
cs
mov
sbb
lods
xor
pusha
pop
cmc
sub
out
hlt
arpl
repz
sarl
insl
jnp
jnp
mov
mov
orb
popf
inc
adc
fsubr
loopne
int
xchg
jo
stc
test
sti
xor
in
lahf
push
jne
push
setns
push
lea
sti
pop
popa
jge
fstpt
or
mov
push
lds
jne
out
jb
fldl
or
in
mov
adcl
xchg
pusha
push
or
in
pop
ja
dec
je
cmovno
or
xor
stc
and
rcl
pop
inc
mov
push
pop
nop
lods
fstpt
int
adc
lds
add
sbb
sub
fstps
scas
leave
add
xor
std
mov
mov
xor
scas
adc
adc
jnp
dec
or
mov
xchg
jmp
inc
add
jge,pn
inc
add
mov
xor
mov
in
push
arpl
repz
sarl
insl
jnp
jnp
mov
sub
pop
inc
add
mov
loopne
int
xchg
jo
stc
test
inc
and
popa
push
pushf
dec
mov
sub
lahf
hlt
stos
sbb
mov
xchg
call
sti
pop
popa
jge
fstpt
or
mov
push
test
fldl
or
in
mov
adcl
xchg
pusha
push
sbb
outsl
jecxz
adc
sti
dec
std
xchg
inc
nop
and
cs
lea
or
jb
cmp
dec
mov
inc
xchg
aam
faddl
inc
inc
fstpt
int
adc
lds
add
sbb
sub
adc
xor
addr16
xor
std
mov
mov
xor
scas
adc
adc
push
mov
xchg
imul
fnstcw
xchg
jmp
inc
add
lods
xor
cltd
dec
int3
daa
les
pop
jb
mov
into
push
fstl
xchg
mov
das
add
jmp
testl
mov
inc
mov
mov
add
loop
inc
dec
dec
or
mov
in
out
addr16
xchg
imul
mov
xor
test
add
pop
add
add
loopne
add
add
add
add
xlat
mov
cmp
mov
mov
in
int3
pop
cs
roll
mov
mov
clc
xchg
push
or
pop
add
cmp
into
call
pop
popf
data16
sub
xchg
shll
add
inc
rcrb
out
loopne
mov
std
sub
bsr
out
sbb
sbb
enter
cmp
jno
mov
push
mov
push
xchg
push
dec
lret
movsl
mov
push
js
xchg
sbb
dec
addr16
ret
fmuls
push
rolb
pop
cwtl
arpl
and
es
pop
loop
xchg
mov
jl
pop
xlat
fs
ret
imul
xor
out
out
jbe
jnp
fwait
jl
sub
pop
and
in
mov
movsl
incl
pop
fdiv
push
repz
out
cwtl
arpl
and
out
mov
and
wbinvd
sbb
inc
test
dec
mov
call
pusha
inc
mov
int
adc
fisubrs
or
xchg
call
xchg
std
in
cmp
add
pop
arpl
add
test
sahf
clc
jl
inc
pop
daa
ljmp
lahf
cmp
xor
inc
out
jbe
leave
push
into
bound
out
stc
nop
dec
push
push
mov
enter
jno
jno
das
cld
pop
mov
cmp
arpl
js
push
pop
mov
idiv
lahf
repz
scas
jo
rolb
jp
movsl
lcall
test
mov
in
rcr
mov
cli
mov
sub
add
cmc
call
inc
sub
daa
mov
popa
cltd
js
mov
test
out
push
xchg
pop
stos
push
lret
enter
xor
les
insb
xor
push
mov
pushf
cmp
mov
mov
xchg
inc
les
mov
inc
adc
jge
add
pop
inc
mov
pusha
lea
arpl
insl
mov
push
jp
dec
mov
mov
add
or
mov
xchg
mov
cmp
sbb
shll
inc
rclb
aas
mov
cld
loopne
dec
jbe
fdivs
sub
sub
insl
fsts
adc
mov
push
and
sahf
into
jmp
cmc
mov
pop
dec
mov
xor
hlt
push
outsl
push
orb
cmp
popa
xchg
pop
and
mov
and
adc
pop
rcll
test
push
hlt
fnstenv
iret
adc
int3
push
xor
in
ret
dec
sub
or
pop
or
mov
push
pop
and
mov
in
stos
xor
adc
jbe
pop
popa
xchg
xorb
pop
loope
ret
push
mov
jle
add
repz
push
mov
push
inc
dec
xchg
subl
das
xchg
jo
fcomip
xor
inc
les
mov
js
or
scas
imul
call
xchg
xor
and
fwait
sub
in
in
cld
std
aas
imul
lret
fwait
aas
adc
popw
mov
rorb
jns
jp
or
popf
jns
jp
or
popf
jns
jp
or
popf
jns
jp
or
popf
jns
jp
or
loope
out
pushf
jp
pop
in
mov
cmp
push
push
or
cmp
icebp
mov
mov
in
mov
mov
xor
cmpsl
jp
mov
sbb
repnz
out
rolb
push
pushf
subb
cmp
dec
cmp
aam
int
mov
repz
sub
mov
loope
lret
mov
decl
dec
sbb
push
inc
xchg
aaa
jmp
sub
out
lcall
test
dec
cli
pop
sub
push
loope
push
insl
aaa
call
xchg
mov
je
mov
cld
jb
pop
pop
movsl
add
lods
mov
xor
or
push
or
add
add
loopne
add
add
add
add
lahf
and
xchg
adc
push
mov
xor
pop
nop
or
adc
in
loope
jbe
sub
test
inc
sbb
cwtl
nop
push
sahf
cmp
adc
add
cmp
jl
dec
rclb
nop
in
scas
aaa
dec
dec
xchg
or
in
push
ja
gs
mov
movsl
orb
je
ret
jo
fstpt
push
lret
pushf
dec
or
xor
cmp
xchg
dec
fdivrl
popf
mov
sahf
mov
xchg
sub
fwait
xor
push
pop
mov
dec
mov
fisttpl
mov
inc
cpuid
and
lock
je
hlt
and
xchg
xor
iret
push
sbb
lcall
sbb
inc
xchg
jp
ljmp
jle
ss
scas
mov
push
sahf
jmp
cmp
dec
lea
and
cltd
leave
xchg
jo
sti
jge
pop
movsb
nop
fnstsw
int
test
movsl
xchg
sti
mov
pop
sub
movsl
out
xchg
paddsw
lcall
jnp
in
in
es
pop
mov
inc
imulb
jb
inc
test
stc
fwait
cmp
in
mov
cmp
inc
cmp
scas
loopne
push
xchg
sbb
sbb
cmpsl
add
sbb
pop
je
mov
pop
mov
mov
inc
pop
or
sbb
out
push
pop
xchg
jb
cmpl
mov
and
pop
pop
jb
lock
call
iret
xchg
arpl
jg
and
jle
cltd
adc
pop
ret
jle
out
sbb
inc
mov
sbbl
sbb
mov
mov
sub
das
clc
ds
clc
andl
stc
ja
leave
jne
push
xlat
push
add
xlat
divb
mov
mov
scas
xchg
movsb
iret
rol
mov
inc
repz
push
ffree
dec
jne
jp
mov
stc
rorb
jl
mov
xor
movsb
js
dec
jmp
ret
push
pop
add
sbb
mov
inc
add
add
add
add
and
xlat
lds
jo
push
xchg
jbe
push
xchg
leave
repz
movsl
mov
imul
pusha
out
push
popa
lock
adc
int3
cmp
arpl
push
adc
loopne
out
je
cltd
mov
pop
icebp
loop
popa
sbb
adc
lock
rcrl
popa
aad
ja
aaa
leave
xlat
sbb
cli
mov
push
pop
push
jl
fwait
es
dec
mov
mov
inc
setp
mov
popf
lods
into
xchg
cmp
sbb
ret
jecxz
dec
or
push
add
jns
hlt
lret
adc
daa
and
mov
inc
or
in
fwait
dec
movsl
fisubl
xor
outsb
xchg
leave
push
inc
call
int
loopne
sub
cli
dec
xchg
cltd
aaa
dec
cmpsb
cmp
sahf
sub
js
and
popf
jmp
imul
in
inc
mov
jge
shrb
mov
ret
xor
sbb
jmp
mov
fbld
mov
push
leave
mov
mov
sub
adc
push
cmpsl
outsb
xchg
in
idiv
dec
divl
data16
out
cmp
mov
lcall
or
adc
inc
mov
xor
dec
shlb
fisttpl
stos
and
sub
stos
and
push
lahf
fwait
aaa
or
outsb
mov
dec
push
lcall
nop
push
adc
cmpsl
outsb
xchg
int
push
dec
addl
loopne
imul
jmp
stos
ja
adc
out
movsl
sub
mov
cwtl
mov
outsl
imul
and
sbb
jmp
cwtl
repz
jge
rolb
mov
pop
adc
stc
cmp
jge
into
dec
cmpsl
adc
xor
es
pop
inc
jmp
call
jge
inc
out
pop
popa
in
and
jp
mov
mov
and
xor
and
ret
stos
and
fs
stos
lea
xchg
data16
ja
mov
pop
push
cmp
inc
or
xor
int
jg
mov
cmp
aam
xchg
scas
das
cmc
xchg
mov
mov
fcomip
mov
cmp
imul
popf
push
lret
mov
mov
outsl
enter
cwtl
mov
lcall
adc
fnstcw
test
push
test
pop
xchg
movsl
jle
push
mov
into
ficompl
imulb
ljmp
sub
movsb
call
lret
es
add
rcrb
dec
mulb
test
fucompp
sbb
iret
xchg
mov
xchg
xchg
sub
cmp
cmp
jecxz
cmp
mov
push
arpl
push
shll
fsin
aas
mov
in
lret
mov
cmp
add
fildll
call
leave
lea
dec
iret
xor
jg
movsb
mov
jnp
xor
aam
scas
scas
mov
mov
fistps
xchg
mov
xchg
xchg
push
imul
ret
xchg
test
in
push
sahf
aas
inc
xor
std
inc
test
fimull
jo
pop
in
inc
add
cld
lahf
mov
arpl
xor
sti
popa
inc
mov
sbb
cmp
jp
fwait
push
mov
inc
daa
fadds
sub
js
sbb
adc
mov
idivb
and
inc
sbb
adc
loop
adc
or
sub
cmpsb
add
jg
std
mov
adc
addb
mov
jbe
cmc
adc
aad
test
pop
lock
icebp
outsb
lcall
jae
xchg
pusha
sar
stc
cmp
inc
mov
xor
mov
arpl
adcb
bound
inc
ror
jno
mov
push
aas
cmp
jns
ret
mov
xor
nop
stc
push
push
bound
ja
andb
imul
lods
insl
add
adc
and
cmp
shl
test
mov
mov
aaa
xchg
push
aaa
fwait
outsl
fadds
or
cmc
sbbb
stc
sub
int3
mov
xchg
lret
fcomps
xchg
push
adc
sub
int3
addl
cltd
mov
cs
and
xchg
cwtl
mov
add
adc
sub
loope
mov
stos
xor
mov
movsb
dec
sbb
sbb
cmp
dec
xchg
mov
rcr
data16
fwait
out
jle
pusha
imul
je
mov
gs
orl
test
lock
pop
cmp
popl
ja
xor
data16
inc
iret
add
cmp
or
cmc
mov
mov
pop
mov
aas
mov
shr
jecxz
mov
dec
lcall
fadd
lret
popa
and
sti
jns
fstl
mov
stc
sbbl
mov
adc
les
xchg
and
mov
xchg
ficomps
jge
call
das
jge
pop
xchg
out
test
dec
sub
and
push
xchg
add
or
and
fnstsw
dec
inc
xchg
jl
aaa
fmul
lea
sti
xchg
or
int
xchg
jmp
fdivs
js
mov
mov
jmp
test
imul
push
jp
xchg
imul
sbb
mov
sbb
and
push
pop
sbb
xchg
imul
ss
dec
adc
rolb
jle
push
mov
add
jne
mov
lock
cli
jecxz
dec
imul
dec
rep
cmp
adc
dec
push
cld
insb
push
mov
cmp
pushf
sbb
dec
flds
loopne
cmp
hlt
lret
pop
or
pop
sbb
mov
mov
mov
sbb
cmp
mov
sarl
xchg
mov
mov
shlb
mov
inc
iret
repz
add
loopne
xchg
mov
push
ja
mov
and
lcall
cmp
mov
xchg
inc
adc
jecxz
xor
ljmp
setno
pusha
in
inc
fisttpll
mov
out
jno
mov
cmc
mov
sub
stos
jmp
push
rorb
mov
mov
lret
xor
jecxz
out
aaa
xor
push
in
int3
and
in
lcall
pop
mov
cs
adc
pushf
push
stos
nop
shll
pop
test
arpl
push
pop
inc
mov
test
pop
fistl
sbb
xor
xor
lods
xor
stos
sub
dec
xor
fs
push
pushf
jne
ror
sahf
outsb
push
dec
faddl
pop
jne
mov
xchg
dec
sbb
cmpsl
cmc
adc
ljmp
xchg
mov
mov
fld
jns
adc
or
sbb
cmp
mov
pop
dec
mov
or
mov
jl
bt
leave
mov
jno
inc
cmpb
add
sub
scas
cmp
out
sub
mov
and
or
sub
cmp
outsb
fimuls
out
push
rorb
loope
push
or
xor
mov
pushf
xor
adc
xor
mov
sbb
adc
inc
fadds
subb
pusha
lods
mov
sub
shrb
fld
gs
call
imul
insb
fldenv
add
mov
lahf
loop
pop
mov
lock
inc
dec
pop
popf
movsl
sbb
cli
add
jae
outsb
jp
int
in
sahf
or
add
in
out
lret
mov
insb
add
push
dec
icebp
popa
outsl
cmpsb
sbb
jae
addr16
xchg
push
popf
clc
cmpsb
cmp
fldl
and
mov
sub
cmc
and
fdivp
stc
mov
dec
iret
add
add
xor
call
mov
mov
pcmpeqd
cmp
mov
cmp
xchg
cwtl
rorb
jb
pusha
addr16
cli
cmp
repnz
inc
mov
fdivs
adc
subb
or
or
xor
decb
pop
js
pop
clc
bound
les
movsb
test
dec
sbb
or
iret
lret
imul
mov
sub
imul
dec
pop
cmp
rorl
icebp
inc
sbb
mov
adc
cltd
fcomps
fs
cld
jecxz
aas
jne
add
xchg
push
push
aas
mov
mov
je
xchg
rol
push
fstps
push
push
push
shrl
mov
mov
insb
mov
and
dec
jl
push
and
jb
lods
out
jmp
mov
outsl
adc
and
xor
pop
lret
xor
mov
iret
pop
cmpsb
sub
push
pusha
sbb
mov
mov
out
mov
and
popa
cltd
and
fnsave
icebp
cmpsl
dec
call
arpl
push
push
cmp
push
jbe
jns
flds
or
sbb
xor
pop
icebp
icebp
or
int
sub
jnp
imul
mov
jno
mov
ss
shl
iret
push
repz
lcall
sar
das
xor
inc
and
xchg
mov
pushf
xor
aaa
daa
pop
in
outsb
test
negb
adc
adc
add
sbb
lcall
imul
ljmp
pop
in
loopne
xor
cmp
xor
hlt
or
out
push
xchg
test
repnz
test
push
mov
sbb
jle
call
adc
jg
mov
idivb
xchg
das
jo
insl
test
cmp
hlt
and
push
std
push
mov
lcall
cmp
arpl
cmpsb
imul
adc
push
xor
in
lahf
dec
mov
subl
negl
lods
xor
fsubp
pop
mov
aaa
idiv
mov
ja
mov
lods
fidivl
dec
loop
inc
mov
outsl
loop
mov
fsts
ljmp
cmpl
pop
or
or
jmp
and
cmpsb
gs
push
inc
test
enter
daa
and
cmp
sar
out
push
cld
pop
pop
mov
jl
pop
jo
fdiv
xorl
in
loope
ja
fwait
inc
jbe
daa
pop
in
imul
adc
shrl
ljmp
jns
pop
inc
inc
jae
in
push
popa
cmp
ficomps
cmc
loopne
pop
ljmp
xor
aas
xlat
sbb
test
jge
in
xlat
mov
ficompl
adcl
mov
adc
out
aad
imul
push
fsubs
mov
cmp
adc
js
sub
ficomps
std
push
xor
inc
xchg
jle
mov
cld
jle
loope
sbb
movsb
pop
pop
mov
cmpsb
sahf
sub
inc
mov
mov
inc
push
dec
push
data16
je
xchg
xlat
ja
fwait
xchg
scas
dec
loopne
mov
loope
add
push
and
fistpll
or
cmp
popa
mov
inc
push
sub
ljmp
sarb
ja
cmp
popa
jl
movsl
inc
std
and
adc
out
int
dec
gs
rorl
pushf
push
popa
mov
pop
ds
sub
js
sbb
in
xor
aad
stos
inc
pop
loop
push
insl
inc
bnd
cmp
push
loop
loop
ror
aas
repnz
lret
jle
fistl
shlb
iret
dec
loope
test
pop
scas
je
movsb
cmpl
mov
lret
lock
push
and
bound
int
invd
cwtl
xor
sbb
lret
adc
stos
in
cli
adc
jbe
fnsave
xor
hlt
fsub
add
cs
push
out
ret
sbb
jecxz
cmp
lods
shrl
aas
fs
rcrl
sub
negb
movsl
popf
andl
push
fsubr
loope
adc
aam
test
jecxz
fbstp
xor
daa
ja
ds
adc
mov
push
stc
cmp
ss
push
fisubl
sbb
and
or
loop
pop
cmp
aaa
push
movsb
sub
sub
sub
movsb
mov
mov
and
push
xor
cmp
test
add
xor
testb
hlt
int
xchg
add
xor
rcl
fwait
dec
cmp
or
sbb
in
mov
sub
scas
jno
mov
inc
and
jle
mov
mov
jl
bound
push
jg
and
rcll
mulb
outsb
fsubrl
int3
in
mov
pushf
xorl
sub
jb
lahf
mov
push
loopne
test
ret
mov
inc
cmpsl
add
lods
jle
and
mov
pop
andl
test
adc
cmpsb
ret
xchg
mov
adc
aad
fcoms
clc
repnz
jne
jno
aam
pop
or
subb
push
aad
or
cmc
add
xorb
mov
sub
and
aaa
nop
mov
lods
mov
adc
cmp
mov
ret
mov
adc
lods
bound
mov
jge
out
int
daa
fs
adc
push
movsb
fsubrl
out
stc
adc
test
in
push
mov
loop
popa
push
mov
lods
jp
ljmp
inc
adc
pop
rol
sbb
aaa
ja
loop
fwait
mov
outsl
test
push
mov
pop
in
push
sbb
aad
mov
inc
xchg
dec
and
das
std
pop
pop
pop
std
xchg
sar
xchg
cmpsb
mov
or
push
fidivl
mull
call
push
cmp
xchg
sbb
fiadds
xor
dec
push
mov
call
orl
cwtl
inc
jecxz
mov
adc
stc
popl
cmpsb
and
ret
push
loopne
or
je
gs
cmpb
jle
adc
sub
lods
jl
pop
lcall
dec
dec
inc
in
shlb
and
mov
ljmp
pop
adc
out
lret
filds
test
pusha
inc
mov
es
movsb
jl
mov
xchg
dec
std
aaa
sbb
imul
pop
cltd
stos
cmp
xor
es
lcall
sbb
sub
jno
jp
shll
inc
in
stc
adc
cli
addr16
test
ja
decl
cmp
sbb
push
dec
mov
test
bound
std
sarl
jge
mov
movsl
jns
and
int3
or
sub
push
mov
xchg
mov
popa
adc
aas
stos
outsb
and
mov
aas
fldt
or
andb
sti
sub
push
lods
add
and
mov
adc
imul
outsl
or
xchg
push
xchg
mov
popl
loopne
test
fisubs
xor
dec
inc
mov
and
stos
icebp
bound
dec
cmpb
and
data16
cmp
in
sbb
clc
dec
mov
clc
lock
pop
xor
xchg
xor
cld
xchg
fs
imul
test
int3
ljmp
fwait
popa
in
stc
xchg
mov
mov
cmpsl
lahf
sub
fiaddl
hlt
add
sub
mov
pop
fcmove
mov
and
popa
jp,pn
add
cmp
mov
insl
adc
dec
pop
lahf
leave
cwtl
rol
cld
push
inc
movb
ret
sub
mov
pop
jge
pushf
decb
rcrb
rcll
loopne
rorb
push
mov
pop
push
xor
jle
xchg
sahf
rcrl
xchg
addps
sub
push
scas
adc
sbb
mov
repz
jo
js
adc
sub
dec
mov
lahf
stc
andl
jnp
mov
jle
inc
fldl
ficomps
mov
jb
sbb
mov
add
cmp
xchg
push
cli
mov
push
pop
add
into
sub
xchg
push
in
stc
xorl
mov
int
aaa
push
aas
fcompl
mov
into
ds
mov
jl
mov
mov
cli
mov
loope
and
popa
aaa
dec
sbb
fstpl
or
mov
les
out
sub
out
frstor
outsl
fistl
mov
xorb
xor
insb
jo
xchg
pushf
lahf
lcall
int
test
cmp
mov
popf
add
dec
js
jb
outsb
mov
xor
lcall
popf
ljmp
in
cmpsb
cwtl
sbb
mov
jo
aas
xchg
push
xlat
rcrb
pop
movsb
movsb
jp
das
sti
test
shrl
ret
repz
lret
std
sub
ficoms
int
je
cltd
daa
stos
call
lcall
xor
rorl
sub
rcl
push
loope
xchg
fsubl
adc
pop
jne
sahf
push
xor
jne
add
xor
or
add
outsb
test
dec
and
jnp
aad
push
adc
test
cli
add
mov
mov
addl
stc
cld
mov
cli
sub
nop
push
mov
xor
inc
fisubs
rcr
int3
inc
test
cltd
sbb
sbb
fwait
cli
pop
ja
stos
std
scas
mov
mov
loope
jp
push
fcmove
inc
jl
imul
lock
xor
daa
cwtl
fcom
add
mov
push
sbb
nop
mov
xor
leave
leave
into
imul
popa
sub
cmp
push
sub
shr
js
sarl
popa
lods
out
inc
in
xor
dec
fildl
bound
mov
insb
or
out
stos
xlat
aad
sub
pop
stos
daa
cwtl
scas
and
mov
push
repnz
shl
rcrb
inc
hlt
sbb
data16
test
push
add
jg
jg
cmp
mov
sti
inc
cs
mov
lcall
mov
dec
jg
ffreep
test
inc
and
es
es
inc
rcll
pop
xor
out
mov
iret
jge
adc
dec
mov
push
xchg
int3
sbb
push
push
sbb
and
cs
iret
cwtl
xbegin
inc
mov
mov
mov
outsl
push
adc
repnz
adc
mov
stc
xor
ficoml
roll
xor
add
pop
pop
icebp
aaa
dec
gs
jne
xchg
leave
xchg
loope
add
pop
sbb
fsts
nop
fs
sub
test
popf
inc
add
out
and
fcomps
loopne
arpl
adc
adc
inc
cmc
mov
dec
push
cmp
stos
dec
mov
and
testl
sbb
imul
cmp
in
pop
fnstsw
sahf
scas
push
mov
mov
xor
sti
js
aaa
in
fisttpll
or
sbb
mov
sub
cli
push
xchg
jbe
jno
add
shll
lods
add
pop
xchg
add
xchg
adc
sbb
fisttpll
sbb
movsl
pop
jb
mov
xor
aam
push
adc
pushf
cmp
sub
data16
iret
mov
in
dec
int3
mov
adc
bound
add
in
mov
aaa
outsb
aad
das
jp
inc
decb
les
test
and
mov
fisubrs
test
cmp
fldt
inc
adc
in
or
dec
call
lods
add
push
jo
inc
insl
pop
jle
sub
dec
pop
js
push
scas
push
jl
or
out
cli
and
pop
andl
push
xchg
pop
push
jae
push
shll
pop
xor
popa
lret
mov
ror
inc
mov
add
sbb
insl
jge
and
cmpsl
cmp
push
int3
test
rolb
pop
mov
and
imul
add
jge
aaa
ja
int3
sbbl
lret
fsubp
jge,pt
addr16
rorb
or
mov
jp
imul
hlt
or
pop
scas
and
lods
in
and
xor
sar
daa
mov
mov
pop
cmp
mov
xor
incl
sbb
jg
push
push
js
in
cmpsl
sbb
add
pop
mov
shrb
in
cwtl
cmp
fsubr
sbb
mov
xchg
dec
pop
or
mov
dec
sbb
or
cld
xor
sub
imul
pop
test
in
out
push
into
dec
or
add
loopne
add
add
mov
cmp
mov
out
lcall
repnz
jne
popf
adc
stos
push
ss
shl
lret
inc
in
stos
test
test
popf
cmpb
ljmp
std
dec
loop
nop
pop
pop
insl
adc
in
lds
pop
dec
push
mov
daa
in
pop
ret
in
out
pop
lcall
inc
mov
adc
push
mov
dec
sti
sub
pusha
dec
inc
mov
or
fs
push
cs
ret
aad
add
xchg
cmpsl
pop
fwait
adc
ret
xor
iret
std
ja
insl
push
mov
push
daa
cmc
sbb
ds
mov
or
movq
add
into
inc
or
pop
mov
inc
insl
xchg
fcmovnb
cmp
loop
mov
cmp
jmp
adc
push
mov
xchg
sub
pop
jbe
pop
add
out
pop
add
xor
enter
dec
loope
lret
mov
sub
fbstp
aam
pop
or
jns
scas
mov
push
jle
rorl
test
or
cli
cmp
or
cmp
rolb
in
mov
aaa
lock
lret
cmp
adc
sbbb
mov
pop
fisubrl
stos
sub
jl
mov
sub
out
lods
sub
mov
mov
xchg
cwtl
lahf
dec
sub
mov
in
or
aam
mov
pop
mov
xchg
imull
ljmp
inc
jmp
add
mov
shr
push
lods
xchg
std
lock
sub
es
es
test
data16
fisubrs
arpl
lcall
pop
adc
add
and
insb
bound
jmp
stc
in
mov
call
adc
or
push
repz
icebp
jbe
fs
cmp
push
in
popa
je
mov
mov
stos
xchg
push
mov
add
fwait
xchg
test
mov
cmp
int
or
test
mov
leave
pop
sub
dec
push
and
test
mov
es
mov
jmp
xor
clc
rcrb
adc
cmp
clc
sub
idivl
fwait
cmp
shll
xchg
add
or
cmpsb
nop
fstpt
sub
in
dec
fidivs
adc
mov
mov
jecxz
pop
movsb
jne
sti
mov
ja
mov
dec
ret
les
and
dec
add
fucomp
cld
repnz
inc
mov
testb
mov
and
insl
popa
inc
lods
dec
or
in
test
arpl
jle
arpl
int3
mov
stc
mov
ss
mov
es
cmp
cmpsl
jmp
add
cwtl
mov
shlb
mov
cld
les
or
stc
cmpsl
pop
andl
add
fstps
push
xchg
sar
jns
shrb
mov
gs
jbe
cmc
cs
je
inc
push
or
dec
out
push
shrb
fisttpll
mov
pop
jno
sub
jb
fsts
xchg
lret
int3
or
or
sbb
dec
push
ficoms
popf
dec
incb
or
aaa
icebp
pushf
adc
fcmovne
aad
scas
dec
xchg
loop
cwtl
movsb
aam
mov
pusha
add
hlt
xchg
cld
and
mov
dec
pop
cmc
int
lret
js
dec
je
xchg
mov
mov
pop
mov
ss
and
les
std
sub
cmp
movsb
fst
inc
push
push
pop
lds
rol
sbb
imul
inc
pop
mov
mov
sub
jge
dec
aad
inc
insl
xchg
mov
cs
imul
ljmp
adc
inc
notb
pusha
add
into
or
icebp
aam
jnp
mov
pushf
lret
mov
mov
push
or
outsb
inc
or
and
hlt
sbb
jmp
aaa
inc
mov
pop
pop
pop
cmc
push
dec
fwait
push
jo
call
xor
jmp
mov
xor
push
mov
mov
lock
push
fsubl
jecxz
pop
mov
js
add
std
in
dec
jns
jb
xchg
and
lret
pusha
repz
jl
cmp
loop
bound
xor
movsl
add
mov
inc
in
insl
arpl
pop
cmp
movups
outsl
xchg
cs
mov
imul
add
lahf
mov
test
push
std
pop
popa
push
ja
mov
in
or
int3
inc
call
fidivrs
mov
mov
pop
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
jno
add
sbb
mov
sbb
add
add
add
gs
cwtl
mov
adc
lcall
push
mov
push
out
idivl
sub
out
in
outsb
push
sbb
stos
js
test
popf
loope
cmp
dec
add
subl
cmpsl
les
ds
mov
cmc
sti
pop
bound
addr16
dec
imulb
stos
shrl
mov
int3
ss
mov
fadds
push
out
std
scas
insb
adc
js
subl
sbb
push
iret
sub
or
xor
jb
xchg
loopne
sarl
push
add
xor
iret
sbb
dec
out
aad
xchg
popa
lock
mov
in
rcrl
inc
int3
ret
inc
mov
bound
cmpsl
daa
std
movsb
jmp
dec
inc
xchg
mov
fidivl
xchg
lock
iret
lods
push
xor
mov
mov
fsubs
inc
enter
xchg
arpl
bswap
pop
sbb
aas
ret
push
push
imul
push
test
nop
scas
rorl
mov
imull
inc
push
inc
add
or
ret
add
ret
js
out
ret
cs
rclb
adc
das
sub
push
repz
xor
xor
cwtl
flds
cs
mov
inc
fwait
mov
mov
inc
int3
pop
push
mov
inc
mov
or
test
xlat
mov
dec
mov
push
mov
mov
fistps
xor
pop
in
lea
mov
dec
dec
shr
mov
stc
lcall
and
test
into
loop
movsl
lcall
lcall
jb
popf
dec
fsubr
cmp
jg
fs
mov
mov
rcll
test
orb
fcom
loopne
sub
xchg
aad
loop
cmp
add
sub
add
ljmp
test
inc
mov
sub
ret
cmp
cld
and
inc
repz
psrlw
xchg
sub
mov
cmp
push
cmp
cmp
ja
je
adc
movsl
sub
xor
pop
je
mov
or
and
pop
rclb
lahf
bts
jno
add
adc
pushf
into
cmpsl
mov
std
sbbl
lods
sbb
enter
aaa
popa
jae
popa
mov
pop
jmp
dec
fyl2x
lcall
xchg
lcall
cwtl
lds
dec
sub
mov
ss
dec
adc
pop
test
sub
iret
cmpsl
in
sub
adc
cmp
xchg
push
sbb
loop
fdivs
fxch
mov
stos
mov
leave
cmpsb
insb
sbb
out
xor
sub
mov
setnp
mov
test
fcmovu
insb
sbb
add
pop
or
xor
or
lcall
bound
mov
arpl
fimuls
lods
cmpxchg
sub
insl
popa
pop
movsl
idiv
mov
jmp
push
push
inc
xor
in
adc
mov
imul
ja
insb
sbb
outsb
data16
and
and
or
inc
in
adc
cmpsb
out
adc
push
push
push
pop
adc
sbb
or
cmpsb
xchg
loop
pop
data16
adc
sahf
jle
aas
lea
mov
ficoml
xor
aas
cltd
lahf
mov
cmp
push
fadds
std
jno
cld
push
adc
mov
mov
cmp
mov
shrb
aam
xchg
mov
aam
xchg
mov
aam
xchg
mov
aam
xchg
mov
aam
xchg
mov
aam
xchg
mov
aam
xchg
mov
aam
xchg
mov
aam
xchg
mov
aam
xchg
mov
aam
xchg
mov
je
push
or
or
xor
jg
dec
sbb
aad
scas
xchg
push
add
jne
out
shll
jo
xor
loope
inc
int
hlt
jecxz
add
add
add
loopne
add
incl
add
add
and
mov
mov
push
add
xor
mov
bound
dec
push
xchg
cli
std
inc
mov
cli
fcoms
enter
mov
mov
mov
clc
mov
xor
sub
mov
pop
mov
test
outsb
sub
fcom
mov
xchg
jmp
add
jnp
mov
or
rcl
push
xchg
aam
adcl
imul
adc
mov
popa
add
popf
jno
jp
inc
push
les
pushf
and
dec
es
out
pusha
ret
xor
mov
inc
adc
call
sbb
pushf
mov
fs
mov
fidivl
scas
ret
mov
scas
xor
iret
dec
cmpb
mov
incl
add
add
lcall
cmc
mov
loop
mov
mov
repnz
adc
or
fcomp
outsb
mov
inc
xor
stos
outsb
jp
xchg
jnp
lods
pop
ret
clc
imul
in
dec
xchg
int3
stos
push
sbb
pusha
inc
pop
cmpsb
in
std
pop
lods
push
add
insb
test
xor
jb
aad
inc
stos
aas
pushf
lds
jae
xor
xchg
fstpt
lret
insb
dec
cmp
mov
push
in
sub
ret
loopne
sbb
xchg
arpl
mov
mov
hlt
sbb
mov
insb
sbb
add
add
loopne
add
incl
add
add
sub
mov
ret
cltd
or
mov
out
outsl
ret
mov
inc
hlt
out
mov
xchg
aaa
jp
arpl
inc
je
rdpmc
int3
sar
push
ret
outsl
aas
ja
sub
scas
cmpb
imul
inc
pop
popf
xchg
imul
incl
adc
lret
aam
push
mov
and
pop
fdivs
pop
mov
jns
lahf
ret
xlat
jl
idivl
mov
jg
fs
mov
add
push
addr16
pop
sub
es
imul
sbb
add
add
loopne
add
add
add
add
lret
rcrl
pop
or
int3
pushf
jmp
std
sbb
ficoms
jle
arpl
push
leave
mov
adc
sti
int
sub
popl
shrb
je
sub
dec
jno
mov
push
push
mov
outsb
sbb
cmc
enter
ficomps
push
mov
test
dec
dec
pop
pop
movl
add
insb
fdivl
insb
cmc
call
inc
push
shl
ret
pop
loope
das
je
out
mov
mov
divl
movsl
lds
or
cmp
aaa
sahf
int
stc
adc
mov
push
dec
mov
xlat
dec
js
hlt
pop
cmpb
pop
lock
ds
jnp
add
aam
lea
jge
popa
jns
and
cmpsl
fistpl
pushf
add
in
js
lock
sbb
in
ret
xchg
out
in
mov
ljmp
pushf
test
sbb
cmpb
fwait
xchg
xchg
or
mul
sbb
frstor
out
jno,pn
pop
aam
shll
lds
xor
xlat
in
mov
aaa
xchg
pop
jb
sahf
stos
xchg
arpl
pop
mov
repz
insb
sub
mov
ror
nop
jge
xchg
jbe
cmp
fnstsw
rolb
out
je
cmpsb
and
insl
add
cli
imul
out
fyl2x
jg
stos
ds
fildl
jp
andl
dec
dec
push
jecxz
dec
test
mov
aad
movsl
or
mov
push
scas
push
inc
icebp
dec
add
fisubrl
data16
test
inc
adc
nop
mov
mov
or
push
inc
ds
insb
sbb
sbb
cmpsb
movsl
xlat
je
xor
xchg
xor
cmp
xor
jmp
mov
jnp
sahf
cmp
or
push
mov
push
ficoml
ret
cmp
scas
fsubp
leave
je
ljmp
jns
pop
mov
xor
sub
popa
out
xor
and
hlt
lahf
xchg
sub
cmp
in
cmp
stc
adc
test
push
sbb
pop
cltd
lcall
or
push
cmpsl
mov
jge
and
pop
jo
ret
sub
lea
cli
cmpsb
adc
int3
dec
adc
jecxz
sbb
cmpsl
cli
xor
xchg
xchg
push
and
sahf
jae
ret
movsb
lret
add
in
or
lret
or
mov
mov
jns
inc
mov
sbb
sahf
mov
arpl
js
sti
mov
add
dec
xor
jecxz
xor
inc
cld
test
loopne
sub
mov
mov
inc
pop
jns
sub
imul
test
scas
sub
ja
out
popa
sub
scas
sub
ss
and
enter
cmpsb
sbb
xchg
push
outsl
sbb
mov
ret
sbb
jg
push
lahf
jns
inc
pop
cwtl
mov
jbe
xchg
dec
ljmp
push
cli
sub
xor
negb
insl
aas
cmpsl
xor
sbb
mov
sub
mov
or
icebp
pop
jbe
sub
xchg
sub
data16
sub
repz
mov
int3
sub
jl
or
fldcw
fs
adc
movsb
dec
or
lods
insb
lcall
sbb
cmpsl
cli
jb
push
in
inc
outsb
jle
pop
jge
add
dec
mov
testl
adc
add
add
add
inc
ficomps
aaa
dec
test
lret
jnp
mov
sbb
mov
inc
rcrb
inc
mov
xchg
popf
in
xchg
lea
das
adc
mov
in
imul
aaa
mov
imul
add
test
push
mov
jbe
mov
and
cld
into
adc
ds
push
mov
stos
or
jnp
inc
jp
inc
adcl
ficompl
clc
xor
jnp
repnz
jle
mov
sub
or
xchg
push
mov
add
hlt
sub
mov
mov
mov
fadd
pop
jp
mov
xor
push
sub
bound
mov
jg
in
std
shl
dec
xor
mov
into
je
jns
shlb
xchg
jns
sbb
sub
testl
mov
xchg
andb
test
pop
sahf
jmp
in
sub
in
fidivrs
mov
pushf
adc
inc
xchg
out
jge
daa
shrb
mov
jbe
xchg
or
rorl
mov
mov
sahf
push
dec
and
pushf
cmpsl
xor
adcl
pop
aam
and
outsl
add
add
or
mov
xchg
mov
cld
cltd
jne
addr16
idivb
pusha
addr16
cmc
add
mov
jmp
mov
nop
and
jle
mov
sbb
lea
xor
cmp
dec
push
adc
lret
daa
xor
pop
xor
add
sbb
mov
je
add
add
add
add
in
mov
xchg
jge
repnz
xchg
sti
pop
push
out
leave
xor
repnz
xlat
mov
xchg
xchg
push
mov
xchg
push
jp
out
mov
sbb
pop
shlb
repz
rcrl
mov
ret
out
loopne
inc
pop
pusha
adc
jno
jl
xor
dec
scas
add
and
add
sbb
mov
fwait
adc
lret
popa
jg
aas
dec
pop
cmp
ret
mov
stos
jmp
andl
loop
xor
pop
mov
sub
insl
gs
mov
lds
addr16
xor
pop
daa
cmp
sbb
add
dec
or
jecxz
clc
clc
adc
popa
pop
push
xchg
sbb
xor
cmp
pop
sbb
ficoms
int
js
xor
add
cltd
dec
adc
mov
jg
mov
fcoml
mov
fcmovne
cmp
test
mov
xchg
inc
cmc
mov
xor
and
rcrl
sub
pop
fsubrl
jns
mov
jecxz
xchg
push
mov
in
jmp
xchg
sbb
cmp
insb
cwtl
ds
aam
add
jno
imul
insl
push
adc
mov
je
xor
sub
insb
dec
dec
movsb
bound
jp
adc
std
fmull
daa
dec
ja
or
pop
repz
test
or
dec
mov
ret
jb
pop
push
add
adc
lret
inc
sahf
es
mov
imul
push
in
roll
cmp
lahf
push
xor
mov
push
mov
pop
enter
mov
sub
sahf
test
popl
dec
lea
lds
adc
iret
mov
push
lods
adc
loopne
cmp
das
movsl
loope
mov
mov
pusha
jecxz
aaa
or
sbb
sbb
imul
insl
cld
xchg
cmp
xor
daa
fucomp
lret
out
out
inc
lcall
inc
cmp
pop
frstor
imul
es
daa
mov
mov
cmpxchg
sub
mov
aam
stos
xchg
ss
mov
fstpl
xor
and
push
into
push
pop
hlt
js
mov
not
mov
push
sub
push
test
mov
push
ret
jo
sub
push
cmpsl
sbb
gs
mov
xchg
push
or
jo
mov
das
jbe
jo
cmp
mov
dec
jmp
jb
adc
mov
movsb
popf
add
mov
inc
pop
incb
aaa
std
test
std
and
fwait
cmp
adc
rorb
mov
mov
gs
push
cwtl
sub
or
stos
cmp
loopne
js
add
sbb
mov
push
add
add
add
add
and
adc
mov
outsb
sti
jno
data16
jnp
nop
fisubl
shrl
jle
mov
ljmp
scas
leave
cli
push
fsubr
mov
and
lcall
mov
repz
pop
xlat
adc
pop
xor
aam
xor
mov
out
and
icebp
and
in
in
dec
in
or
inc
das
shlb
pop
adc
pop
xchg
repz
mov
pop
out
inc
mov
add
add
jnp
shll
xlat
jo
cmp
test
loope
mov
jb
iret
test
sti
loop
jle
and
pmuludq
lods
xchg
jl
adc
sub
cmp
mov
loop
adc
xor
les
and
scas
jmp
popf
mov
jg
nop
insb
nop
sbb
sub
jge
mov
xchg
sahf
cmp
aad
test
xchg
cs
loopne
push
mov
int3
pop
fs
push
cmpsl
dec
aam
sub
loop
adc
push
mov
xorl
out
dec
hlt
int
cmp
negl
sub
popa
stos
bound
xchg
xchg
out
mov
pop
push
adc
mov
test
fistl
dec
jne
lea
lock
mov
xchg
decl
inc
test
xchg
pop
jae
pop
xchg
aad
dec
mov
xchg
or
adc
adc
mov
test
mov
popa
mov
popf
inc
call
jp
and
fsts
adc
outsb
push
pusha
es
xor
fincstp
icebp
out
les
mov
ret
fcomps
fisttps
xchg
cmp
and
pop
mov
out
adc
cltd
inc
dec
lret
xchg
fwait
sbb
lock
mov
xchg
mov
cmpsl
sub
jnp
insb
lods
add
lahf
and
and
push
jg
out
xchg
jecxz
dec
jbe
adc
push
imul
jb
popa
mov
lret
adcb
lods
sbb
ja
mov
sub
push
push
jmp
gs
jge
fistl
and
jge
and
push
cmp
mov
and
jne
cmc
das
test
sarl
and
pop
dec
add
xor
mov
repz
in
push
sbb
je
rcr
stos
call
push
and
popf
mov
pop
push
dec
stos
cmpb
mov
popf
pop
jg
fnstcw
insb
mov
jo
notb
xor
add
bound
add
pop
mov
inc
sub
xor
sbb
mov
cmp
loop
adc
outsl
ds
rcl
pop
push
mov
lcall
pop
cmpsl
jb
mov
mov
inc
push
daa
insl
sbb
push
cmp
dec
jbe
rcrb
fiaddl
pop
lods
cli
fwait
mov
pushf
scas
lds
cmp
out
std
pop
and
int
push
fsubrp
pusha
push
push
ret
pop
dec
lods
sbb
cli
sbb
aad
sub
sahf
rdpmc
and
dec
pop
push
gs
mov
pop
fists
and
sbb
add
popf
rolb
mov
mov
xor
ret
add
gs
jnp
xchg
jne
hlt
popaw
rcrb
fadd
xchg
pop
sub
in
cmp
test
fadd
cs
les
nop
sbb
dec
push
lcall
sbb
or
aam
xchg
push
mov
jne
dec
movsb
js,pn
std
popf
xor
xchg
in
xchg
pop
mov
push
or
sub
mov
xchg
dec
rclb
jle
fistps
rcll
inc
mov
sub
jge
movsl
insb
cmp
cmc
mov
fistpll
adc
push
test
scas
or
xor
ret
imul
in
ss
and
aaa
jp
int3
int
arpl
inc
sbb
inc
bswap
test
xchg
sbb
fcoms
cmpsl
and
mov
mov
xchg
out
shlb
fsts
lret
data16
leave
adc
sbb
stc
jmp
aas
dec
mov
xchg
imul
adc
sbb
and
pop
out
jecxz
or
xchg
pop
or
out
and
fnstenv
loopne
mov
xchg
mov
imulb
lea
les
xchg
mov
mov
or
pop
in
mov
cmp
inc
popl
add
bound
mov
sbb
xor
cmp
popa
lcall
mov
lock
dec
out
test
lahf
jbe
and
test
arpl
mov
push
decl
int
push
adc
pusha
repz
pop
test
xchg
repnz
mov
mov
cltd
pushf
andl
outsb
lret
cltd
add
mov
shr
mov
pop
sti
stos
pop
cmp
mov
cmpsl
mov
dec
clc
dec
lods
mov
push
lds
jmp
adc
sub
add
repz
repz
nop
mov
fmulp
cld
xor
pusha
cmp
jno
ret
and
stos
adc
lock
and
jbe
inc
scas
scas
mov
pop
push
sub
sbb
loope
adc
xchg
xchg
inc
into
int3
dec
mov
pop
push
pop
pop
jmp
sarb
scas
inc
popf
and
out
and
jge
push
push
push
cli
xlat
xchg
xchg
or
fildl
push
add
mov
movsl
fsubr
repz
fstpl
jbe
sbb
shlb
test
aaa
int
jbe
fwait
icebp
cli
xor
push
fistl
ss
mov
jecxz
shl
aad
fisubrs
xchg
out
aam
addr16
xchg
cltd
lcall
dec
push
pop
cmp
mov
pmullw
call
sub
pushf
subb
xchg
in
xchg
and
mov
rolb
dec
add
adc
outsl
dec
sbb
push
sahf
ret
jmp
mov
int
insb
add
push
insb
mov
mov
inc
mov
cli
ds
inc
sub
xor
pop
cmp
les
xor
mov
lcall
pop
lret
mov
adc
ljmp
mov
mov
cld
jle
sarb
ret
xchg
dec
sbbb
sahf
jbe
mov
sbb
inc
push
mov
nop
adc
rcll
mov
jns
mov
fsubrp
sbb
sub
sar
jecxz
bound
xor
xchg
jnp
mov
in
fwait
pop
xchg
sbb
aam
xchg
cmp
push
fwait
ret
jge
xchg
imul
adc
xor
or
div
lock
cld
mov
inc
int
dec
push
push
or
xchg
cs
mov
iret
adc
push
sub
sbb
mov
pop
lods
dec
xlat
pop
mov
pop
cld
push
lret
arpl
jecxz
inc
and
sub
aaa
nop
popa
adc
shrl
divl
out
scas
and
push
cmp
movsb
jecxz
fisubl
inc
js
inc
outsw
fsubrs
jbe
les
inc
jmp
and
add
xor
xchg
icebp
enter
pop
lsl
cmpsl
sub
cmpl
shll
repnz
stos
into
jecxz
push
jmp
xlat
scas
inc
push
and
insb
insl
movsl
lcall
sub
test
adc
add
mov
loopne
mov
aam
cmp
jg
insl
xchg
ss
test
add
sbb
mov
incl
add
add
jns
mov
loop
lods
xor
or
sarb
pop
dec
roll
sbb
mov
addr16
xor
mov
sahf
pop
popf
negl
sbb
xchg
xor
mov
ret
jg
cwtl
ds
xchg
aam
add
sub
or
and
jg
sub
push
idivb
daa
cli
test
daa
addr16
inc
in
pop
ret
pop
add
add
loopne
add
add
add
in
sbb
sub
dec
test
sbb
jno
ljmp
out
cwtl
es
iret
inc
popf
lods
and
filds
sbb
nop
inc
xor
adc
cmp
and
outsb
jge
shll
and
shr
jle
add
add
add
loopne
add
incl
add
add
jecxz
imulb
lret
push
adc
dec
call
movsl
push
int3
pushf
dec
push
cmp
sti
mov
and
popl
or
jmp
imul
push
xchg
xor
mov
ret
popa
add
add
loopne
add
decl
iret
mov
cld
lock
cmp
add
in
jne
scas
lcall
bound
movsb
stos
mov
out
adc
jmp
cmp
adcb
lea
sbbl
scas
cmp
inc
stc
cmp
mov
inc
dec
lods
sub
adc
cmp
jp
xchg
cld
aaa
icebp
std
xor
pop
cmp
or
mov
mov
outsl
push
cld
inc
ret
xchg
fstl
pop
rolb
in
or
push
mov
out
sub
pop
or
ss
xchg
mov
pop
inc
stos
mov
clc
rcll
xor
jno
push
xchg
test
dec
call
hlt
std
fs
ret
jmp
adc
sub
xchg
out
cmp
mov
push
orl
adc
and
lret
xchg
cmpsb
sub
cmpb
lret
and
xchg
mov
mov
loop
and
xor
imul
inc
fimuls
aaa
xchg
mov
pop
rclb
xchg
mov
test
and
pop
pop
aad
loopne
pusha
sbb
lea
sub
decb
dec
push
shl
loop
cltd
push
push
mov
cwtl
mov
sbb
add
sbb
mov
incl
sub
add
icebp
daa
repz
dec
outsl
jnp
mov
mov
pop
jnp
ss
cmp
lcall
sub
push
sarb
rclb
adc
cmpsb
mov
jle
bound
rorb
add
lds
std
iret
mov
mov
shrb
adc
push
imul
adc
inc
cli
xor
sub
add
mov
mov
pushf
xchg
xchg
mov
popf
sbb
ds
jns
pop
xchg
sbb
cmp
inc
or
jae
fldenv
lret
jae
jo
dec
imul
mov
sbb
or
jnp
aad
sub
int3
fdivrs
js
jns
or
jae
test
xor
ja
mov
xchg
sbb
dec
je
mov
jecxz
popa
jne
dec
pusha
inc
outsb
adc
lds
ljmp
pop
mov
lock
jae
pusha
aad
inc
xchg
leave
arpl
xchg
icebp
and
xchg
movsb
mov
or
mov
mov
fwait
and
loopne
int
cmp
mov
mov
and
out
lock
mov
cmp
xor
mov
pop
jmp
inc
in
sahf
fdivrp
pop
loop
out
cld
fwait
les
fs
mov
pop
mov
pop
or
js
xchg
adc
ja
andl
add
xor
adc
repnz
jae
jecxz
inc
cmpl
aas
push
or
push
cmp
test
or
inc
cmp
out
enter
mov
dec
sbb
pop
idivl
adc
xchg
cmp
add
loop
mov
mov
pop
andl
insl
cmpsb
xchg
sarb
and
inc
jp
rcrb
jae
push
mov
shr
xor
movsb
mov
dec
xchg
xchg
lods
push
lds
mov
pop
jle
sbb
hlt
cmc
std
sbb
das
popf
lock
push
jbe
stos
dec
lock
pop
fs
inc
inc
pop
lods
and
ds
push
testb
xchg
mov
xchg
dec
mov
lock
cmp
xchg
inc
test
and
outsb
mov
or
data16
std
xchg
sbb
push
mov
cs
loopne
mov
add
pop
add
inc
or
les
stos
dec
fdivs
and
movsb
mov
push
or
ret
push
aas
mov
cli
add
dec
and
lahf
xchg
xor
aaa
cmp
xor
pop
push
daa
sub
test
adcl
ds
lds
mov
repz
sub
lock
jecxz
push
cmp
add
add
loopne
add
incl
or
dec
ja
int3
or
fwait
addl
and
pop
shrb
cmp
sub
pushf
mov
fwait
mov
sbb
inc
adc
jbe
ficompl
das
call
addb
push
loop
mov
mov
lahf
mov
lcall
inc
xchg
outsb
jo
fisttpl
xor
xor
adc
push
mov
or
fistpl
xchg
cmp
jp
loopne
mov
cmp
bound
and
or
jl
pop
push
mov
sub
std
mov
cli
dec
push
adc
xchg
daa
adc
lahf
jnp
push
pop
and
mov
pop
jnp
mul
sbb
es
mov
scas
std
push
push
roll
xchg
sub
mov
out
xchg
mov
lea
ret
fsubrs
and
stos
push
rorb
mov
test
mov
dec
add
pop
push
and
cmpsb
add
repnz
leave
fbld
jecxz
jp
ret
flds
test
lcall
dec
dec
fnstcw
pop
ljmp
je
jmp
js
push
inc
mov
lcall
test
push
jnp
add
jmp
jno
aad
leave
mov
xlat
push
clc
push
fs
cs
in
pop
push
xchg
lcall
lods
xor
pop
repz
ret
mov
mov
jg
push
inc
add
add
add
loopne
add
incl
add
add
std
repnz
mov
in
sub
shll
mov
adc
cmp
pop
push
fsts
fdivrp
or
or
cwtl
mov
neg
adc
out
stos
mov
or
aad
mov
subl
gs
outsl
gs
rep
add
mov
or
inc
leave
sahf
jle
xchg
mov
sti
cmp
cmpsb
fmulp
rorl
sbb
xchg
lds
pop
push
stc
xor
pop
inc
add
bound
popf
sbb
jle
aam
cltd
cmp
pop
xlat
lret
sti
test
add
sbb
ja
sbb
ja
sbb
ja
sbb
ja
sbb
ja
sbb
ja
sbb
movb
add
