fwait
cmp
jecxz
dec
lret
pushf
shll
xchg
adc
scas
and
ss
mov
mov
mov
dec
pop
iret
or
pop
xchg
xor
test
aas
sbb
aam
stos
cli
ret
and
stc
test
cmp
cmpsl
pop
jo
loope
ret
jp
mov
shl
mov
incl
popf
mov
push
andb
xchg
jge
call
adcl
jmp
mov
insb
jl
or
popf
sub
dec
call
xor
sub
add
scas
xchg
inc
scas
xor
jae
dec
xchg
xlat
outsl
je
sbb
sbb
cltd
jmp
out
pop
mov
pop
inc
js
xor
dec
fstl
aaa
push
arpl
insb
dec
mov
es
iret
mul
idivb
and
push
push
das
lret
inc
xchg
stc
lcall
ja
stos
lahf
pop
cli
push
or
add
rolb
dec
or
pop
dec
cmp
dec
test
xor
inc
js
xchg
or
pop
push
jmp
jb
sub
mov
sarb
push
mov
push
inc
jae
es
or
mov
xor
ja
mov
movsl
fsubs
movsl
sbb
jb
xor
addb
jae
xor
push
adc
push
je
and
faddp
test
lock
mov
inc
add
jae
aas
cli
mov
mov
stc
cld
xchg
adc
mov
in
push
loope
cmp
jae
xchg
cli
in
jno
xchg
push
daa
jl
in
dec
loopne
push
ljmp
loope
jae
inc
add
scas
rclb
sbb
jmp
xchg
hlt
or
daa
add
loope
sub
test
push
daa
lret
adc
or
pop
iret
pop
or
call
jecxz
cltd
push
outsl
or
dec
sbb
hlt
jl
je
ja
arpl
and
js
sbb
mov
aas
pop
add
jmp
pop
xchg
repnz
hlt
and
pop
stc
ds
push
lret
stos
test
sub
sarb
ljmp
inc
loope
inc
insb
cmc
and
xor
push
in
repnz
scas
pop
insb
jb
data16
add
hlt
jg
jl
pop
movsb
lcall
sahf
ret
aad
cmpsl
movsb
push
mov
mov
arpl
inc
ja
subl
and
cmp
pop
sbb
je
mov
je
or
nop
or
or
or
xchg
push
rcl
xor
push
inc
sub
pop
loope
jo
inc
jg
mov
sub
shll
sbb
xchg
gs
dec
scas
jp
mov
sti
and
clc
aad
xor
jb
dec
lret
mov
scas
jae
cmp
jl
adc
stc
xchg
je
cmp
xchg
stc
cltd
js
or
or
mov
mov
sub
leave
sub
dec
push
test
mov
cmc
jae
mov
sahf
jecxz
mov
icebp
mov
adc
adc
dec
push
dec
rol
mov
hlt
xor
into
jae
mov
nop
fisttpl
lods
inc
pushf
sbb
fstpl
mov
jnp
out
shl
inc
insl
add
dec
mov
jp
cld
inc
push
dec
sbbl
mov
jecxz
mov
inc
in
insb
lahf
jns
mov
xor
addl
mov
xchg
int3
lods
pop
aad
sub
sti
push
out
ds
jae
add
adc
outsb
popf
out
repnz
test
cli
push
push
ss
test
add
mov
add
mov
xchg
sti
dec
cmp
cmp
mov
cmpl
ret
inc
lods
jns
dec
jmp
push
stos
pop
and
sarl
adc
je
stc
sub
testb
mov
cmpsl
or
or
leave
or
iret
xchg
inc
pusha
push
imulb
or
jp
fs
mulb
inc
push
push
dec
adc
ret
pop
pop
and
stos
aas
push
add
jbe
add
loopne
sub
pop
hlt
push
add
lahf
adc
adc
jl
fsubs
add
add
in
or
out
fsub
data16
inc
push
inc
inc
sbb
inc
sahf
mov
int
adc
adc
cmpsb
and
mov
push
cmp
pop
test
inc
stos
xor
push
movsl
jns
pop
ljmp
jecxz
aas
jae
adc
cs
ja
pop
dec
mov
xlat
cmpsb
data16
sbb
xor
lods
push
mov
mov
sub
xchg
aas
insb
dec
sub
jno
jecxz
lods
in
pop
loopne
sub
or
push
and
pop
jno
jb
push
inc
pop
xor
cld
push
add
pusha
loop
jecxz
in
push
stc
cli
repnz
jg
js
cmc
sub
jno
je
ja
or
cld
xor
push
mov
pop
cmc
mov
xchg
cmp
cld
and
not
not
jp
jne
test
dec
inc
clc
push
pop
lea
not
not
push
push
and
pop
pop
push
push
cmp
pop
pop
push
push
test
pop
pop
jno
test
nop
cld
jne
cmp
clc
ja
jne
jp
xchg
jne
cmp
nop
cld
jmp
jmp
call
test
xchg
mov
inc
inc
inc
inc
rol
jp
push
ja
test
pop
cld
push
add
push
pop
pop
inc
dec
mov
xchg
sub
push
push
mov
pop
pop
jae
dec
inc
stc
clc
push
add
pop
push
push
mov
pop
pop
xor
pushl
pop
push
call
cmp
pop
hlt
outsb
jne
pushf
aas
push
mov
loop
xchg
out
hlt
fstpl
cmp
fmuls
cmp
roll
add
add
decl
test
jecxz,pt
mov
cmp
mov
js
jge
pop
test
ret
or
jae
je
sub
lock
jae
jae
jne
xchg
pop
xor
push
push
ret
inc
or
push
test
pop
add
add
loop
jecxz
in
addb
inc
iret
movsl
jnp
sarb
xor
cli
push
popa
jmp
sbb
fisttpl
push
stc
inc
pop
ficoml
sbb
addr16
push
ret
int3
dec
or
idiv
push
pushl
xor
pop
pop
push
call
mov
jne
dec
push
push
mov
xchg
pop
dec
cmp
push
mov
loopne
pop
adcl
movntq
stos
mov
mov
push
xchg
movsl
xchg
mov
pop
loop
jecxz
mov
das
mov
rol
inc
nop
jbe
push
push
rol
pop
pop
push
and
pop
cld
push
jle
push
and
pop
pop
clc
nop
clc
add
not
not
cmp
push
call
stc
mov
std
xlat
loop
cmp
mov
or
divb
movsb
jne
jp
pop
lock
gs
icebp
or
mov
jne
loop
jecxz
xor
cwtl
add
call
mov
dec
push
loop
ret
mov
icebp
mov
das
sub
sbb
je
in
add
push
pop
imul
out
aam
sbb
stos
sbbb
sub
setns
lock
jmp
out
scas
imul
or
cmpsb
sahf
cmp
ss
dec
xor
pop
mov
lods
leave
cs
lea
add
jge
out
jmp
mov
adc
xchg
mov
sahf
jge
jg
sub
sti
hlt
dec
gs
mov
js
sbb
lret
shrb
lret
fisubrs
imul
dec
mov
push
xlat
cld
stos
pushf
cld
pminub
and
lea
ss
mov
aad
out
dec
adc
pop
test
ljmp
fld1
mov
pop
mov
scas
gs
sti
lahf
lret
fwait
sbb
sub
jne
jb
jno
xor
cld
cld
sub
inc
int
popa
xchg
addb
mov
push
testb
pop
mov
inc
movsl
xlat
xchg
sub
adc
and
test
pop
jno
pop
fstpl
dec
dec
push
nop
cmp
push
in
lret
hlt
stc
inc
arpl
sti
and
orl
rcrb
cmp
hlt
and
lock
ret
int
sbb
shll
icebp
push
lds
xchg
stos
stos
inc
sub
mov
shlb
add
into
cmpsl
cmp
fs
mov
cwtl
leave
cmp
cmp
outsl
jmp
fsubrp
jo
faddl
loopne
pop
outsb
cltd
and
fnsetpm(287
push
in
fsubrl
addr16
and
jecxz
fs
outsl
cmpsb
movsb
iret
mov
rclb
pop
js
daa
inc
adc
cmp
outsl
mov
push
pushf
jmp
int
fistps
imul
xchg
add
shl
mov
inc
jo
jg
fldt
adc
xchg
cmovg
push
shlb
adc
mull
jno
leave
push
push
out
imul
sub
sbb
mov
jb
lcall
shll
mov
jb
jle
insl
push
mov
mov
shl
hlt
mov
inc
mov
mov
stc
lret
in
push
ljmp
out
repz
cli
cmp
cli
jl
push
aad
inc
mov
cmp
xlat
push
and
or
xchg
adc
andl
movsb
mov
testb
cmpsl
pop
je
movsl
sbb
sbb
arpl
add
xchg
icebp
or
lods
mov
std
repnz
mov
cmp
sbb
cmp
lea
mov
imul
dec
ja
add
adc
daa
xchg
or
out
inc
psubusw
jmp
scas
sbb
adc
cmp
or
dec
and
pop
insl
sub
fldt
push
pop
enter
mov
repz
mov
pop
mov
stos
scas
arpl
in
negl
and
mov
mov
fdiv
push
js
dec
xor
sti
test
push
xor
inc
inc
hlt
out
xor
sub
jge
add
mov
sbb
jle
cli
push
int
shlb
rorb
leave
aas
cmp
add
or
cli
cmp
movsl
or
mov
and
or
mov
dec
inc
cmp
sub
xchg
sbb
dec
xchg
aaa
lcall
gs
xor
mov
sbb
sahf
xor
aam
lahf
fisttpll
xchg
push
addl
and
or
add
or
push
fcompl
add
dec
bound
push
aad
mov
xchg
imul
pop
push
xor
cmpsb
shlb
aam
ja
test
shrl
sahf
and
sahf
xchg
adc
jecxz
bound
adc
sbb
sbb
sahf
movsb
mov
outsb
je
jp
cltd
scas
lahf
outsl
lret
pusha
jb
imul
push
rep
scas
je
fwait
shrl
jmp
addb
sub
cmc
aad
dec
out
clc
cmp
ret
push
pop
daa
test
jp
sub
adc
and
push
movsb
arpl
data16
mov
mov
jg
scas
or
scas
add
pop
jmp
iret
mov
aaa
sti
pop
mov
add
sbb
inc
xlat
mov
aaa
add
insl
xchg
je
dec
lret
imul
mov
cmp
jno
insb
inc
mov
sti
add
push
sbb
popf
std
je
jmp
lcall
pop
sarb
push
stos
sub
add
jnp
fidivrs
lock
lret
fdiv
ljmp
out
mov
xchg
jecxz
sbb
push
mov
jle,pt
dec
xor
ja
mov
sahf
je
stos
dec
inc
stos
loope
mov
nop
adc
out
inc
inc
shl
sub
shl
fsubrl
movsl
int
mov
test
js
nop
pop
inc
mov
insb
push
ja
or
fs
or
call
sahf
es
lods
mov
in
mov
fidivl
bound
fimull
sub
push
insl
insl
pushf
adc
sbb
test
and
loopne
addb
dec
cmp
ja
cmpsb
cmpsb
xchg
out
push
add
popf
leave
mov
push
inc
pop
sub
outsb
lret
sub
sub
daa
shl
pop
xchg
push
addr16
imul
xchg
xchg
leave
movsb
jle,pn
sbb
sub
sub
push
add
jns
insl
or
push
jbe
sub
andb
insb
ss
or
test
das
andl
ret
jbe
popf
imul
fs
adc
adc
out
sub
pushf
inc
add
jg
cmpsl
push
push
xor
mov
add
orl
push
pushf
gs
mov
lahf
mov
movsl
jp
dec
fwait
gs
mov
dec
ljmp
xor
adc
in
aas
fsubs
test
xor
leave
imul
fidivs
mov
sbbb
xchg
popf
inc
out
mov
jl
movsl
push
rorb
adc
xor
movsb
and
lock
xor
loop
test
and
mov
pop
xor
jne
fisubrl
xchg
inc
pmulhuw
dec
cmc
sti
cmpsl
mov
pop
pop
mov
push
lret
xchg
cli
dec
sub
adc
int3
ret
mov
adc
mov
mov
dec
fwait
jae
loopne
and
jno
xor
js
mov
sahf
outsl
dec
xchg
xorl
adc
mov
xorb
adc
inc
test
sbb
lcall
and
int3
sub
insl
int
xor
jo
jne
ljmp
cmc
test
xchg
xor
xchg
aas
out
mov
cmpsb
push
movsb
pop
xor
test
cmp
fisttps
jecxz
push
jnp
or
ja
or
fidivrl
and
mov
mov
inc
pop
jns
mov
pushf
or
mov
and
cwtl
aam
push
push
jmp
lret
fdiv
push
into
or
inc
jl
mov
subb
cmpsb
negl
mov
cmp
inc
das
inc
xchg
outsb
lret
popa
pusha
std
jle
repz
fs
rorl
pop
mov
adc
das
jnp
ljmp
dec
ss
inc
das
and
and
adc
mov
inc
lods
pop
ds
jl
fadds
sbb
xchg
pop
jno
dec
mov
cmp
sahf
mov
rorb
test
ret
mov
loop
fsubrs
push
pop
mov
fldcw
mov
or
jb
js
xor
push
xor
sbb
int
mov
mov
xlat
hlt
stc
leave
subl
testb
xchg
inc
add
mov
es
dec
enter
in
push
xchg
mov
lea
push
push
inc
dec
fcomi
repnz
xor
push
xchg
movsl
inc
call
sti
imul
pop
shrl
lock
arpl
pop
cmp
int
cli
jmp
movsl
fnstsw
add
into
dec
cs
cwtl
cmpsb
jb
xchg
push
jo
iret
mov
sub
fisubl
pop
adc
jae
mov
lret
mov
outsl
sbb
ljmp
sub
mov
or
cmp
dec
cli
xchg
roll
sti
test
xchg
push
bound
pop
hlt
xchg
cmpsl
outsl
mov
mov
dec
sbb
jge
bound
test
cmp
gs
stos
out
or
xchg
ret
cmovns
and
xchg
ljmp
sarl
imul
adc
sar
or
enter
xchg
mov
stos
lea
call
mov
adc
sub
repz
dec
adc
cmp
test
insl
push
adc
adc
mov
sub
mov
lret
adc
xchg
jnp
or
jb
test
add
lcall
xchg
push
sub
mov
test
mov
cmp
sub
test
mov
faddl
testl
jp
and
gs
iret
jle
pop
mov
dec
mov
loopne
inc
mov
shll
mov
nop
das
pop
xchg
int
lahf
push
xor
push
pop
xor
cmp
movb
add
repnz
ss
sbb
push
xchg
inc
mov
adc
fidivrl
fs
cmp
mov
or
in
xor
repnz
scas
xchg
das
pop
test
out
adc
sbb
test
xor
bound
xchg
xchg
int3
icebp
sub
mov
add
lret
in
das
imul
jbe
and
mov
mov
inc
sbb
ja
xor
stc
pop
std
fwait
hlt
mull
jle
daa
pop
xor
fildll
inc
add
adc
sbb
into
stos
insb
sahf
in
gs
xchg
jecxz
jb
mov
xchg
mov
pushf
mov
ljmp
cmp
call
cmpsl
cmp
push
and
pmulhw
add
into
inc
icebp
test
aas
dec
cmp
sbb
movl
out
jbe
ret
les
jecxz
or
push
cmp
jae
out
sbb
pop
testb
pop
out
push
sub
dec
mov
mov
das
mov
sbbl
fbstp
and
push
cmova
lret
cmpsb
ds
ljmp
xchg
jnp
mov
mov
or
repnz
adc
loope
fnstenv
arpl
jno
push
and
mov
je
inc
cmp
ds
xchg
mov
jle
push
push
or
mov
addr16
out
mov
xlat
push
sub
jle
loop
push
mov
or
add
dec
push
ret
inc
mov
jb
sti
orb
popf
push
lods
loopne
jg
imul
filds
outsl
add
mov
fwait
sti
mov
add
rcrb
mov
mov
idivl
cmc
xchg
daa
data16
data16
nop
push
addr16
or
mov
rorl
inc
dec
arpl
push
lods
adc
ljmp
push
test
in
push
xor
push
lret
movntq
jb
pop
fildll
push
sbb
mov
movsb
mov
or
insb
pusha
daa
and
xchg
jg
sub
popa
iret
xor
in
orl
push
pusha
jp
jae
dec
shll
mov
lock
xlat
xchg
cmpsb
mov
or
idivl
out
add
pop
pop
sbb
jae
repz
add
adc
js
jle
mov
cmc
fsubs
ja
int3
dec
inc
adc
jns
cli
outsb
outsb
or
pushf
das
fcoml
sub
daa
xor
aas
push
cmp
jnp
int3
mov
cmp
fwait
xchg
loopne
mov
nop
arpl
lods
cli
lret
pop
mov
hlt
pop
pop
loope
mov
outsl
add
sub
test
imul
inc
je
mov
mov
or
adcl
je
aas
shl
daa
in
les
and
or
xor
int
mov
xorb
int3
fcomi
mov
dec
mov
jecxz
or
mov
or
xlat
xchg
add
jmp
std
shlb
imul
dec
js
sbb
push
adc
xchg
mov
xlat
jg
xchg
xor
pop
cmp
nop
in
cmp
lret
cmpsl
jge
sub
mov
dec
scas
or
mov
mov
or
push
push
sbb
adc
xchg
cmp
mov
das
and
lods
mov
mov
hlt
xor
cmpsb
fisubs
cmp
sub
and
lret
push
testl
in
xchg
xchg
adc
clc
stc
inc
sbb
hlt
jbe
ds
les
stos
es
iret
lea
push
pop
mov
mov
push
jecxz
scas
faddp
rolb
mov
mov
loop
dec
cmpl
xor
mov
inc
repz
sbb
xchg
sbb
xchg
in
and
add
mov
or
cmp
adc
cmpsl
mov
test
ret
mov
movsb
cltd
inc
fnstcw
or
jns
and
cld
sub
add
and
cs
push
xor
fists
int3
xchg
movsb
sub
cmp
jl
int
gs
in
repz
push
fcomp
inc
popf
cmp
sbb
cmp
mov
fmuls
jno
cmp
imul
dec
add
mov
dec
nop
inc
xchg
sbb
mov
mov
mov
insb
shlb
cmpsl
cwtl
ret
fisttpl
xor
shll
into
push
jb
or
jl
mov
add
add
sbb
jecxz
sbb
sarl
popl
mov
lcall
pop
sbb
fisubrs
pop
cmp
fdivp
cli
push
iret
and
stos
jbe
jle
movsb
lcall
ret
sti
jbe
cli
data16
push
orl
aas
or
fwait
es
test
jmp
add
ja
sbb
sub
les
pushf
jno
xchg
fidivrs
or
jmp
cmp
mov
loop
mov
mov
xchg
add
dec
lds
push
cltd
cmc
or
xlat
add
jle
xchg
inc
xorl
out
inc
stc
test
cli
scas
xchg
sbb
push
jnp
push
sub
popf
dec
xor
sub
das
lods
lea
pushf
push
inc
ss
push
rorb
out
fwait
mov
push
movsl
cmpsb
sub
mov
pushf
lods
lcall
lret
test
mov
cmp
mov
sub
cli
outsl
cwtl
add
pop
xor
and
and
pop
push
xorb
iret
lods
mov
xchg
pop
iret
add
push
cwtl
xor
ret
and
ss
adc
xchg
xchg
ds
mov
jbe
scas
int
inc
xchg
adc
mov
cmp
push
popa
sahf
and
call
aad
loope
cmp
popf
sti
dec
das
in
jbe
sbbb
jb
dec
or
inc
dec
xchg
adc
lcall
jbe
fcomi
add
mov
push
sub
lcall
cs
sub
outsl
jb
push
outsb
divb
pop
clc
mov
sarl
pop
insl
inc
lahf
pop
pop
push
mov
or
xor
inc
jno
in
jne
xor
mov
push
dec
imulb
push
hlt
mov
loop
and
dec
out
int
mov
lods
sahf
or
xchg
dec
fisubrs
out
pop
jns
orb
push
shll
sbb
add
ljmp
adc
addl
iret
loope
xchg
jne
xchg
enter
jo
push
push
or
mov
or
push
sub
notl
inc
xlat
cwtl
mov
jbe
sub
mov
xchg
imul
pop
ja
xor
scas
and
mov
imul
inc
out
cwtl
pop
inc
sub
jp
jnp
int
rcll
jmp
orb
in
imull
cmp
scas
lahf
cld
lock
inc
xor
pop
aaa
mov
mov
cmp
cmp
out
xchg
jno
divl
out
test
mov
loopne
loopne
into
fs
sbb
xchg
pop
and
dec
and
cltd
add
and
pop
cmpsl
cltd
addr16
cmp
inc
out
fs
push
xor
mov
mov
pop
fsubs
pop
movsl
dec
push
lea
and
pop
test
mov
dec
mov
and
and
or
mov
mov
adc
sub
mov
clc
push
xchg
and
mov
pushf
inc
mov
mov
ja
outsl
mov
addl
adc
mov
cltd
sub
lock
pushf
ror
push
cwtl
inc
jne
cmp
push
cmp
js
mov
xorb
and
and
mov
les
es
mov
jmp
jecxz
int3
es
jno
pop
push
ja
push
sub
adc
lret
aaa
xchg
xor
shl
mov
lea
in
mov
sub
jge
cmp
aam
mov
mov
stos
xorl
loope
test
mov
mov
inc
xor
psubd
mov
adc
orb
sti
cmpsl
cmpb
mov
push
adc
iret
test
arpl
test
aad
test
xor
xchg
loopne
movsb
loop
push
xchg
jae
mov
sub
push
jnp
add
xchg
rcrl
xchg
fwait
lret
icebp
mov
nop
jne
jmp
xor
jnp
and
sbb
or
inc
mov
popa
pushf
xor
repnz
adc
jbe
lods
sbb
pop
notl
push
or
and
mov
mov
pusha
nop
rcl
push
ror
cli
pop
inc
jno
mov
dec
lods
mov
mov
jne
add
cmovl
mov
test
les
shrl
xchg
ret
scas
pop
xor
test
imul
xor
dec
lds
adc
push
xchg
js
mov
fxch
mov
pop
pop
in
sbb
test
out
cmpl
int
and
jns
dec
mov
movsl
cmp
jmp
pop
lock
xlat
push
dec
or
pop
push
xchg
scas
push
push
pop
iret
pop
pop
inc
mov
fcoml
xchg
xlat
mov
lea
inc
insl
or
call
xlat
cmc
cmpsb
inc
dec
jo
aas
xchg
push
mov
cmp
rorb
push
push
add
sarb
adc
bound
lcall
add
xchg
and
rorb
aaa
into
repz
ss
outsb
repnz
xchg
outsl
pop
xchg
pushf
fistpll
orl
into
lods
stos
jae
dec
inc
cwtl
shlb
push
pop
pop
xor
cltd
dec
in
out
lock
outsl
cli
xlat
mov
inc
jne
cmp
xchg
leave
pop
pop
sti
mov
adc
icebp
or
jno
mov
adc
mov
mov
lcall
mov
out
or
adc
or
push
fiadds
loop
pop
lock
cmpsb
icebp
pop
fistpl
adc
sub
jae
pop
fcomps
repz
adc
cli
pop
dec
scas
test
fcompl
scas
jp
adc
mov
in
outsb
and
mov
inc
fxch
xor
jmp
movsb
adc
fcmovu
fldl2t
pop
mov
mov
mov
jbe
rorb
repnz
icebp
xchg
sub
dec
xchg
and
loopne
loop
adc
adc
xor
dec
scas
pusha
push
mov
idivb
dec
xor
jnp
dec
jb
test
and
add
mov
loopne
call
and
adc
push
icebp
rclb
push
ds
mov
mov
mov
and
cmp
stc
call
inc
lea
mov
fisttpll
cltd
add
or
jo
add
or
lods
inc
jae
sub
mov
pop
js
mov
xchg
idivl
push
das
in
out
push
push
inc
xor
jg
adcb
jmp
mov
xchg
stos
pushf
iret
mov
les
fldl
cmp
adc
inc
mov
inc
not
sti
shrd
dec
dec
ret
mov
lock
cmp
pop
mov
fiadds
sbb
pop
dec
xlat
jae
or
out
pop
inc
inc
fiaddl
ret
sbb
lods
inc
call
addr16
js
fwait
and
in
leave
jmp
lds
push
loop
outsb
stos
aad
std
push
jge
jle
out
stos
test
das
cwtl
test
fistpll
xchg
aam
sti
leave
mov
ja
idivl
or
add
add
cmc
ret
push
lret
dec
inc
xchg
jo
inc
in
or
imul
push
inc
shll
and
lods
dec
inc
sbb
pop
mov
out
push
std
xor
aaa
daa
popa
lea
adc
popa
out
mov
adc
jns
in
push
das
out
pop
pop
and
mov
ss
xlat
xchg
scas
dec
mov
dec
jne
sub
pop
mov
inc
mov
mov
lock
adc
int
insl
xor
or
push
clc
mov
xchg
and
jmp
mov
gs
das
push
test
ret
jns
insl
push
int
movsl
movsw
dec
adc
xchg
xor
xchg
jmp
bound
jno
sbb
ja
lock
inc
lods
popf
sbb
fdivrs
pop
dec
cs
cltd
jbe
in
outsb
add
iret
adc
int
dec
test
aas
push
add
stos
mov
pop
test
sbb
int3
mov
test
dec
push
cmp
push
dec
xchg
daa
jmp
pop
and
testl
int
fdivl
lret
stc
leave
pop
imul
pop
push
aas
or
mov
lods
jp
popf
outsb
mov
cmp
sbb
or
xchg
fwait
shll
out
in
cmp
insl
mov
sbb
cld
add
pushf
lods
iret
mov
mov
jle
jnp
adc
adc
pushf
dec
in
xchg
sti
ds
rorl
dec
cmpsl
mov
test
mov
or
mov
push
gs
and
aam
mov
pop
test
in
jo
mov
adc
mulb
movsb
sarl
jle
dec
and
fisubrl
sahf
lret
iret
jne
out
cmpsb
ret
in
mov
push
cmp
loop
add
cmc
les
out
xlat
cmp
lock
cld
stos
inc
sub
frstor
ja
fldenv
sbb
mov
xchg
aam
fstpt
sarb
jns
jno
orl
xchg
popf
push
test
sbb
sbb
test
mov
push
and
bt
push
sub
movsb
xchg
inc
cmpsb
dec
cmc
sti
imul
and
xchg
jl
sub
shlb
mov
stc
lods
xor
out
leave
xchg
aam
cmpsl
shlb
sub
imul
jnp
cli
xor
int3
xor
mov
push
cld
repz
sub
xchg
and
aas
mov
mov
aas
out
in
pushf
sbb
pushf
fnstenv
je
pop
pop
enter
addr16
out
fwait
jnp
out
icebp
inc
stc
add
sbb
adc
mov
aas
sarb
lods
jmp
and
mov
mov
loop
and
je
fldt
mov
cmp
in
or
xchg
jb
lret
iret
mov
adc
loope
adc
mov
pop
dec
cwtl
mov
insl
outsb
cld
hlt
imul
fdivl
mov
xor
test
cmp
mov
xchg
inc
jb
sti
repz
mov
popa
repnz
ret
sub
insl
dec
push
js
into
sti
xchg
ud0
repnz
jae
cwtl
push
fldenv
dec
pop
adc
mov
mov
pop
mov
xor
sbb
lret
mov
jge
xchg
or
daa
jae
mov
xchg
push
mov
inc
cld
push
data16
add
addr16
inc
adc
xor
jns
leave
inc
xchg
mov
test
push
int
fisubrl
shlb
movsb
push
xchg
out
inc
jle
iret
inc
xchg
lods
fs
cmp
movsb
int3
xchg
mov
out
xchg
jg
fwait
push
adcb
jecxz
dec
ljmp
dec
pop
addr16
fildl
stos
ljmp
mov
mov
daa
daa
cmpsl
mov
cmp
sti
imul
jmp
mov
enter
sbb
repz
pop
xchg
js
cmp
popf
out
push
mov
mov
call
dec
cltd
mov
push
mov
movsb
dec
enter
xor
out
sarl
or
and
lcall
sbb
and
xchg
clc
sahf
lods
xor
repz
arpl
push
fsubrl
pop
mov
data16
mov
and
pop
inc
aad
popf
adc
aad
stos
lea
and
lret
aas
mull
test
lahf
jle
fisttpl
sahf
pop
stos
add
nop
loopne
jl
aad
rcpps
or
mov
or
jle
jp
mov
test
outsb
mov
int
popa
fwait
lds
enter
inc
insl
and
jl
and
dec
cwtl
je
adc
aas
clc
sub
xlat
dec
loope
cwtl
jmp
adc
adc
sbb
loop
sub
xchg
sub
sbb
ljmp
push
sbb
dec
rol
push
lcall
and
insb
cltd
sar
adcl
push
lods
sarl
and
insb
repnz
sbbb
push
arpl
dec
xchg
shl
or
and
jge
divps
cmp
push
mov
in
fisubrs
mov
xchg
ds
dec
mov
or
jg
push
outsl
outsl
add
inc
jo
repnz
aad
or
cld
xchg
sub
jne
jmp
aad
mov
out
test
adc
pop
jbe
inc
out
sub
sbb
inc
bound
push
push
push
xchg
dec
fbstp
push
aas
loopne
lret
test
fidivrs
pop
popa
xchg
insb
fdivr
out
leave
sub
rol
pop
mov
adc
mov
aaa
lret
ret
and
sub
ja
cli
repnz
testl
pop
mov
xor
jl
sarl
mov
and
ss
data16
hlt
jbe
insb
push
fwait
movsb
add
lods
rorb
mov
leave
outsl
dec
cs
cmp
ja
add
push
test
rorl
lods
scas
cmpsl
jmp
or
ljmp
nop
mov
rep
lods
pop
shll
or
add
cmp
aaa
lea
je
fldcw
and
jg
popa
push
in
rorl
cmpsb
push
lret
int
test
cmpsb
movsb
jnp
and
inc
jge
lcall
stc
or
cmc
je
and
aas
inc
popf
adc
cmc
jnp
lret
dec
xchg
push
into
test
mov
bound
jg
mov
and
xor
les
loopne
ret
adc
imulb
ds
test
fildll
sbb
popa
adc
popf
lods
in
icebp
cld
testl
lret
xor
divl
xor
dec
adc
dec
repnz
push
cmpsl
mov
xchg
iret
pusha
ret
insb
or
arpl
jg
int3
insb
adc
mov
push
into
fnstsw
adc
ret
inc
sqrtps
scas
jp
pusha
pop
scas
xchg
jne
call
scas
pop
and
lods
icebp
add
into
jo
pop
pop
scas
jns
mov
xor
and
jae
into
sub
dec
sar
push
enter
andb
add
mov
sbb
fwait
dec
lock
jp
or
loope
xchg
es
lret
testb
fcmovne
inc
pusha
bound
or
xor
pop
std
sbb
xor
lcall
add
mov
add
ljmp
xchg
test
xchg
pop
in
sar
daa
addr16
sub
xor
jmp
fcmovnu
jge
int
push
mov
cmp
out
outsl
test
push
mov
int
enter
mov
jl
sub
and
shll
pop
push
loopne
sub
sbbl
mov
mov
dec
gs
dec
push
and
repz
shlb
or
xchg
mov
xor
lods
sahf
inc
lea
ret
adc
andl
push
pop
aas
fxam
jo
loop
inc
popf
or
add
xlat
in
les
sub
cmp
adc
mov
add
adc
sbb
inc
jg
andl
icebp
into
jb
or
shrl
leave
dec
in
dec
push
mov
jg
inc
jbe
push
push
inc
ret
addr16
int
jg
hlt
cvtps2pi
data16
das
mov
xchg
cld
inc
sub
in
mov
dec
stos
mov
jp
rcll
or
xchg
fstpt
mov
bound
negl
mov
lret
add
leave
and
push
test
pop
and
jbe
rcrl
pop
icebp
push
cmp
mov
inc
mov
subb
sub
getsec
sbb
clc
shll
shl
iret
mov
sub
mov
xchg
inc
pushf
mov
out
dec
stc
xchg
jmp
in
mov
pop
loope
cmp
cmp
pusha
icebp
xor
test
jns
or
lret
cmp
mov
shr
adc
mov
xchg
test
and
movsl
sbb
inc
addr16
add
aad
cmp
cmp
mov
sti
cmp
dec
movl
and
pop
into
push
pop
iret
test
inc
aad
dec
xchg
xchg
or
mulb
ss
paddb
or
rclb
sbb
je
cmpsb
or
jecxz
inc
xor
loope
repnz
inc
push
and
leave
pop
movsb
dec
add
data16
rcr
jne
add
mov
pushf
mov
aaa
sahf
inc
ds
movsb
scas
fdivs
pop
sahf
call
jmp
pusha
aad
sub
cmp
sbb
dec
dec
jl
repnz
clc
lea
cmp
xlat
sub
sahf
jmp
movsb
add
mov
iret
inc
js
and
scas
adc
inc
in
lds
aam
adc
sahf
push
aaa
push
adc
shll
cmp
stos
jle
sbb
int
out
pusha
jle
outsl
imul
xchg
push
sub
ja
and
aam
push
stc
inc
jge
pop
mov
xchg
stc
jnp
test
and
fnsave
pop
mov
mov
sub
xchg
cs
dec
cmp
fcmovb
inc
push
mov
and
rcr
aaa
stos
es
xlat
sub
mov
insb
jmp
leave
and
and
mov
inc
adc
inc
mov
or
hlt
popa
dec
sbb
xchg
xchg
pop
xchg
jecxz
add
pop
fwait
mov
add
mov
stos
xor
fnstsw
cmpsl
push
out
xor
or
ret
cmpsl
jmp
test
sub
cmpsb
clc
inc
xorl
das
xchg
mov
inc
xchg
and
mov
ds
xchg
inc
mov
insb
sub
jle
xchg
test
or
lahf
cli
cli
lcall
fiadds
loop
adc
daa
pop
lods
fdivs
jae
imul
and
out
dec
or
fs
and
mov
inc
xchg
inc
dec
rcl
je
leave
jb
loope
lcall
imul
add
dec
mov
pusha
imul
add
add
pop
sbb
sub
and
add
clc
cli
repnz
lret
loop
jle
jge
xchg
nop
pop
fimull
push
xchg
popa
xchg
loope,pt
jns
lods
push
jl
adc
cld
xor
xorl
jmp
aad
aam
cs
jle
out
mov
mov
inc
loopne
aam
sub
push
dec
pop
inc
arpl
pop
push
xlat
sub
fs
inc
lds
ret
into
xor
in
and
addr16
js
mov
add
lds
cltd
mov
arpl
cmp
nop
mov
and
dec
stos
sbb
int3
es
mov
inc
pop
cmp
imul
cli
pop
mov
ljmp
std
in
outsl
lock
dec
in
xchg
ss
lock
adc
fwait
adc
inc
pop
dec
mov
xor
pop
ffree
cmp
frstor
aam
pop
push
xchg
in
adcl
adc
lahf
mov
cmpl
jae
add
mov
lcall
jns
mov
ret
aam
jl
insb
adc
adc
adc
adc
dec
xchg
lcall
loope
sub
xchg
push
js
add
adc
push
jge
mov
cmp
js
dec
xor
stos
fsubl
pusha
mov
popa
rorb
jbe
push
sbb
cld
or
divl
pop
scas
js
vfpclasssd
jb
mov
cmp
pushf
pushf
xchg
cmp
mov
add
xchg
bound
sbb
aas
ret
mulb
rclb
repz
xlat
mov
sub
aad
mov
pop
xor
lcall
cld
add
add
dec
push
ja
repz
loopne
movsl
or
jl
call
inc
jecxz
addb
pop
lods
lea
mov
mov
pop
fcmovnbe
inc
repnz
shr
push
out
js
xor
mov
sbb
mov
inc
inc
rcrb
mov
push
push
adc
into
arpl
cmc
cmpsl
xchg
dec
insb
push
push
fwait
mov
xor
add
xor
mov
dec
mov
pop
stos
mov
imul
jnp
mov
xor
and
into
stos
in
das
cs
test
pop
repnz
aaa
daa
mov
xor
aad
push
push
adc
mov
dec
xchg
insb
insl
mov
out
scas
outsl
push
mov
mov
mov
stos
cwtl
mov
lret
jnp
fs
inc
lcall
rcll
mov
int
xor
push
popl
pusha
js
pop
je
sbb
gs
ret
cld
testb
rclb
popa
test
aam
jle
inc
mov
mov
push
test
xor
fisubl
int
pop
add
in
pop
movsl
sarb
in
cwtl
mov
pop
or
les
clc
push
jb
daa
imul
out
mov
imul
cli
mov
es
scas
cmp
and
in
ret
push
les
loope
out
mov
outsl
aas
inc
pop
sbb
sti
mov
sbb
int3
add
int
mov
cmp
cltd
shr
stos
sub
pop
jbe
pushf
add
jg
outsb
das
out
jno
lahf
arpl
repz
dec
adc
shlb
sbb
xor
cmpsb
jmp
enter
push
test
mov
int
pop
mov
stos
sbb
stos
push
push
cmp
call
and
sti
xor
jnp
jp
inc
xchg
pop
ficomps
mov
iret
mov
outsl
roll
stos
xchg
pop
add
subb
cmp
loope
xchg
lret
loop
xchg
faddp
mov
test
pop
mov
shrb
lock
jg
sarl
sbb
inc
into
mov
mov
push
pop
ret
xchg
ja
pop
shlb
mov
ljmp
aas
fsubl
fsts
leave
mov
movsl
stos
outsl
fstpt
ds
imul
js
pop
out
adc
in
pop
fwait
mov
mov
sbbl
shlb
add
jne
mov
sti
pop
dec
mov
dec
inc
addr16
adc
lahf
in
pop
pop
push
sub
add
jns
xchg
xorl
ds
jle
adc
in
cmpb
inc
bnd
sbb
push
jnp
adc
iret
mov
mov
aaa
dec
arpl
jle
mov
cmpsb
ret
cltd
cmc
xor
push
pop
xchg
mov
pop
xchg
mul
add
push
sub
sub
les
mov
gs
das
ret
inc
cli
mov
int
repz
loope
loope
and
sbb
xor
mov
imul
cmpsb
decl
rorb
lea
repnz
out
adcb
dec
cmp
aaa
out
fisubrl
test
or
push
cmpsl
mov
movsl
pusha
fs
popf
inc
xchg
mov
xchg
push
xor
fstpt
or
sbb
adc
popl
mov
cmp
pop
adcl
sbb
movsb
cmp
or
test
xor
in
fcmovbe
shrb
out
xchg
shrb
out
mov
cs
sbb
test
push
divb
dec
sahf
mov
and
jns
cmp
ljmp
mov
daa
fimuls
xchg
pop
jecxz
lret
ja
popf
xchg
out
in
faddp
xor
nop
js
adc
aad
pop
popf
pop
adc
lods
ret
ljmp
test
scas
add
jp
and
mov
outsl
cwtl
ret
lahf
add
cmp
cmpsb
insl
in
sub
stos
sub
xchg
jns
mov
jmp
cmc
mov
xchg
xchg
out
icebp
loopew
mov
mov
aad
dec
mov
mov
test
popa
adc
stos
cmp
and
mov
movsl
test
add
pop
subl
fcompl
rorl
mov
outsb
pop
mov
add
xchg
cmpsb
cmpsb
scas
add
adcl
mov
pop
cld
cmp
mov
add
sub
fisubrl
mov
pop
out
ds
ror
mov
cs
dec
rcrb
sbb
data16
adc
xor
cmpsl
or
js
arpl
nop
dec
cmp
dec
sub
xchg
xor
cli
push
call
outsb
lret
mov
aam
daa
xlat
or
sbb
sub
jno
xchg
inc
pop
dec
mov
sub
adc
aaa
dec
vunpcklpd
jmp
mov
sti
icebp
shlb
clc
out
xchg
pop
add
rclb
inc
add
add
hlt
lret
out
pusha
nop
lods
jmp
dec
daa
jae
cwtl
sub
icebp
mov
cli
cltd
jb
cmp
mov
pop
xchg
xor
pop
add
sub
cmp
je
xor
lea
loope
push
in
add
add
cltd
movsb
push
mov
dec
popf
jb
pop
sbb
pop
and
pop
imul
jne
movsl
pop
stos
iret
pop
fcompl
push
push
push
push
sbbb
push
jae
xchg
test
sub
scas
xchg
pop
fcomps
inc
mov
mov
in
std
es
jno
in
lds
subl
mov
stc
add
pop
mov
add
ljmp
mov
sbbb
and
cmpsl
movsl
inc
lret
aas
dec
mov
cmp
jae
lods
xchg
loop
stc
sti
cltd
outsb
outsb
cmp
mov
test
pop
xchg
rcll
pop
mov
xchg
fcomps
cmpsl
pop
mov
push
push
pop
aas
jmp
jge
popa
cs
addl
dec
aaa
cs
int3
pop
data16
ss
push
repnz
jno
dec
hlt
test
out
sub
cmpsb
dec
jae
scas
adc
mov
movsb
mulb
push
and
inc
jle
push
ds
sub
pop
sti
cld
xchg
mov
add
jge
leave
jge
mov
pop
or
pop
stc
xor
jae
fstpl
xor
jmp
xorb
lea
sbb
fisubl
icebp
imul
xchg
fs
pextrw
add
and
int
sbb
xor
sbb
insb
addb
loope
insb
pop
outsb
or
inc
inc
and
xor
jl
dec
and
aad
push
ljmp
cmpsl
fisubl
imul
jns
repz
pop
pop
inc
pop
outsl
adc
loopne
mov
subl
sbb
push
mov
test
std
popa
cli
push
push
fbstp
sbb
lods
cmp
push
test
iret
inc
xor
popa
and
inc
lret
dec
xchg
sub
call
shrl
in
xor
push
popa
bnd
stos
fidivrs
lret
sbb
or
scas
sbb
fisttpll
push
sub
push
daa
xlat
pushf
mov
jae
push
mov
ljmp
xchg
insl
andl
cmp
test
test
cmpb
les
in
movsl
pop
push
dec
push
xlat
addl
mov
push
cmpsl
test
mov
cmp
or
add
pushf
mov
inc
pop
movsl
inc
dec
sbb
inc
lret
nop
loop
enter
mov
das
mov
or
sbb
cld
inc
inc
or
sbb
mov
pop
inc
adc
insl
insb
stos
sbb
into
lods
mov
mov
mov
popf
mov
cmc
sub
call
in
gs
std
sbb
sti
fildl
repnz
out
pop
xor
fnsave
mov
test
aas
ret
aam
dec
jno
sub
pop
inc
sub
movsl
fs
fs
mov
inc
loop
fwait
imul
add
ss
xchg
rorb
push
clc
in
mov
sbb
jl
outsb
mov
dec
sub
mov
lcall
movsl
subl
jbe
inc
cmpsl
jmp
add
js
insb
mov
inc
add
jno
dec
and
jle
xor
adc
std
cwtl
notl
stos
inc
adc
pop
mov
cmp
inc
push
je
loope
nop
mov
fcmovbe
insb
adc
std
sbb
rclb
or
stos
fdivs
adc
and
test
rcl
jl
int
add
mov
mov
push
pop
sub
ret
and
xchg
adc
sub
aam
pop
cmp
fwait
push
inc
dec
xor
mov
xchg
test
daa
lock
aas
mov
fldenv
std
mov
dec
push
data16
dec
jle
xor
hlt
push
cmp
push
arpl
adc
and
xchg
cmp
out
pop
shlb
je
cltd
cltd
push
or
sub
sti
jb
arpl
or
mov
mov
push
jecxz
cli
sti
push
cmp
ds
les
xchg
mov
mov
dec
adc
pusha
shll
sbb
mov
dec
sbb
pop
subb
into
loop
inc
add
sti
mov
pop
xchg
rorb
pop
cli
sub
push
dec
js
insl
sbb
fcmovu
mov
cli
dec
ret
xchg
ret
int3
mov
push
mov
cmp
pop
lcall
lds
movsl
iret
add
lods
jmp
push
test
or
sbb
mov
xchg
scas
pop
clc
fcompl
sub
jle
mov
lock
inc
pop
negb
xchg
mov
loope
push
imul
adc
lret
cltd
jle
sub
inc
cmp
jp
push
ss
sqrtps
inc
hlt
sahf
out
sub
out
mov
sub
gs
out
ret
inc
int
dec
or
xchg
and
adc
lds
pop
out
pop
mov
in
fptan
call
sbb
popa
rorl
push
mov
test
ss
adc
or
test
fstps
push
cmp
add
mov
lea
cmp
loop
xchg
push
stos
inc
push
pop
jno
cmpsl
sub
loopne
les
jecxz
xchg
cmc
imul
inc
mov
fidivrs
popa
and
dec
lret
mov
mov
in
ret
test
adc
imul
mov
push
mov
into
push
or
out
xor
lea
cwtl
mov
lcall
icebp
jnp
hlt
pop
outsl
enter
dec
insl
les
inc
into
roll
mov
addr16
stc
pop
dec
nop
lahf
test
cmp
cmp
sbbl
mov
mov
mov
add
push
pop
sbb
sub
lcall
add
inc
test
sahf
push
setnp
ret
test
pushf
cmp
xor
inc
inc
cmp
cld
test
imul
mov
fists
jle
cmc
adc
fisttpll
mov
aam
pusha
icebp
mov
lock
push
rcrb
fsubrl
sbb
fisubrs
mov
lret
add
mov
adc
add
dec
cmpsl
repz
push
xor
xchg
loope
jne
inc
arpl
sahf
leave
xor
fptan
jo
or
pop
xor
enter
mov
sbb
pop
sub
jne
pop
xchg
pop
scas
test
ret
mov
xor
sub
aad
mov
jge
cmp
inc
inc
bound
inc
stos
pop
pop
jmp
xchg
add
mov
movsl
add
xchg
add
push
or
and
dec
or
mov
psubw
test
sbb
cmp
andb
mov
orb
lret
xor
adc
out
mov
xor
push
mov
lahf
imul
js
jno
lret
les
jae
test
cmp
punpckhdq
mov
sarl
pop
dec
mov
rorb
xchg
mov
jp
adc
adc
or
xchg
xor
lahf
xorl
nop
xchg
or
in
push
in
xchg
mov
pop
jmp
adc
fnstenv
fcmovne
mov
subb
rorb
fbld
outsb
sub
and
jae
adc
stos
mov
out
outsl
pop
sub
jecxz
mov
push
mov
add
push
pop
xchg
adc
sti
scas
lcall
lods
push
arpl
add
inc
loop
std
push
cmp
repnz
push
adc
or
jne
int3
ficomps
mov
xchg
sub
jae
push
jge
sbb
jnp
cmpsb
loop
rcrl
int3
outsl
loopne,pn
jge
xor
lcall
push
jmp
jmp
cmp
ret
and
cwtl
js
mov
dec
jmp
fnstsw
nop
das
and
aad
mov
xchg
sbb
scas
jb
mov
sbb
inc
mov
jmp
and
push
cmp
int3
in
stos
and
pop
inc
test
or
cmp
fdivrl
enter
out
in
dec
iret
into
lret
sub
rcll
movsb
add
loope
xor
stc
inc
hlt
sub
dec
push
mov
xchg
pop
cmp
adc
in
adc
js
daa
loopne
test
inc
pusha
adc
int
aam
shrl
and
rclb
push
pop
add
in
mov
int
ja
lds
cmc
xor
sahf
icebp
mov
js
lret
mov
mov
inc
push
cmpsl
shrb
and
nop
cmp
iret
gs
enter
push
jge
xor
jae
mov
dec
sbb
and
xchg
fidivl
iret
cmpsb
push
hlt
dec
jno
push
or
lcall
test
es
or
negl
enter
and
cmc
loop
adc
hlt
test
pusha
sub
mov
mov
seto
in
shrb
inc
cmp
push
dec
cmp
xchg
fbstp
jb
insb
scas
mov
or
mov
sbb
push
mov
mov
mov
and
sahf
rol
pop
push
lea
scas
mov
fsubrl
int
mov
lcall
xor
cmpsl
jecxz
icebp
fcoms
scas
pop
push
pop
mov
adc
dec
and
mov
add
and
test
jmp
icebp
aas
push
outsl
stos
aam
mov
inc
and
sub
call
push
std
push
enter
xchg
insb
inc
cmp
cwtl
sub
shrb
out
gs
cmp
stc
fsubs
dec
int3
jp
js
adc
cmp
or
insl
arpl
xor
mov
ss
gs
in
push
push
leave
sub
sbb
sub
jg
mov
test
repnz
mov
stc
loopne
dec
testl
fdivrs
out
cmpsb
das
cwtl
adc
add
mov
test
sub
psubq
lahf
cmpsl
mulb
loopne
inc
sub
into
sbb
cmp
ss
aas
cwtl
movsl
imul
xchg
repz
push
xor
sbb
dec
jb
sbb
int
imulb
pop
test
ficoml
shlb
int3
aam
adc
mov
adc
push
adc
mull
jg
cmp
fisubs
mov
dec
push
outsb
inc
test
cmp
push
fcmovnb
mov
in
mov
icebp
xor
and
and
sbbl
sbbb
xchg
ja
pop
fs
pop
fidivl
test
push
aaa
jl
mov
adc
and
lret
mov
xlat
inc
mov
lds
ljmp
and
mov
roll
xchg
fistpl
jge
and
jge
jle
popf
xchg
sub
xor
cmp
add
lahf
stos
fdivl
adc
push
imulb
pop
lods
mov
stc
pop
and
mov
adc
sub
ss
mov
mov
jl
mov
add
mov
sbb
jnp
shlb
lods
mov
add
daa
imul
jl
lahf
xchg
pop
adc
and
enter
mov
ljmp
mov
clc
cmp
pop
xchg
jge
push
mov
sbb
divl
stos
sbb
or
xchg
jns
fnsave
or
mov
jnp
push
and
xchg
jmp
jo
stos
push
and
lods
shlb
imul
sbb
lods
sbb
std
sub
push
loope
icebp
scas
fwait
out
xchg
movsl
lret
or
pushf
jae
jg
in
mov
pop
int
pop
mov
xor
or
cwtl
aas
sub
push
pop
mov
ljmp
cld
jl
xchg
mov
fists
enter
push
mov
push
in
jb
cmp
mov
inc
cmc
loope
mov
movsl
lea
xchg
ss
jecxz
xor
repz
hlt
aaa
lahf
and
movsb
jae
cmp
dec
jo
loope
fs
push
jg
mov
insl
xchg
adc
sbb
lock
call
and
push
jg
imul
sbb
mov
js
xchg
pop
imul
loopne
lock
out
xchg
aas
je
mov
sbb
or
xchg
or
dec
lock
jb
gs
outsl
cmp
xor
repz
cli
jno
pop
addl
clc
jp
fimull
pop
dec
or
imul
inc
and
ret
fiadds
andl
adc
test
add
push
mov
pop
out
pop
test
mov
jg
mov
push
mov
sbb
das
push
aad
lods
or
stc
push
loopne
cmpsl
push
stos
and
pushf
loopne
xchg
gs
sub
or
xchg
test
mov
dec
adc
inc
or
jecxz
add
insl
push
das
sarl
jge
sub
jge
mov
test
sti
adc
xchg
jo
testb
jge
int3
jno
incl
popa
dec
fidivrs
arpl
cmp
lods
push
jp
movsb
pop
lods
xchg
dec
mov
jl
bound
and
arpl
ds
out
xor
ret
cmp
dec
mov
xchg
xor
popl
in
xlat
mov
sub
clc
data16
mov
inc
imul
adc
sub
xor
in
pop
cmp
cmp
sbb
arpl
jnp
sahf
enter
fwait
mov
lods
push
lock
sahf
mov
mov
pop
and
andb
jmp
pop
inc
iret
mov
xorb
dec
xorb
or
add
leave
mov
in
sub
xor
daa
xchg
and
inc
popa
psubb
ds
xchg
stos
dec
mov
loope
mov
jno
mov
fsubrl
push
pop
sbb
lret
jl
out
shlb
or
cmp
sahf
lds
in
sub
out
mov
jbe
shrb
mov
ja
mov
mov
xchg
in
lods
mov
out
or
xchg
or
aad
dec
in
mov
mov
xlat
cltd
mov
mov
sbbl
test
dec
push
or
iret
pushl
or
aam
mov
ret
and
or
popf
xchg
fdivrs
add
pop
ret
loope
sbb
shr
jb
dec
add
mov
mov
loopne
loop
ret
test
lods
inc
outsl
pop
out
push
lcall
cmpsb
push
and
xchg
fninit
cmc
aad
aaa
pop
sbb
push
push
jl
orb
scas
or
frstor
xchg
and
mov
add
loop
jmp
outsl
outsl
int3
call
pop
push
pop
mov
xchg
xchg
nop
and
and
mov
pop
aaa
ror
repnz
mov
jmp
inc
mov
dec
push
lock
push
sbb
out
xchg
add
jecxz
xchg
sbb
dec
push
mov
push
test
les
adc
xor
jecxz
or
mov
xchg
cmc
aad
mov
shl
pop
sahf
dec
xchg
ds
ret
dec
insb
inc
xchg
stc
add
cmp
and
cld
sbb
pop
push
jno
cmc
cmp
sahf
cmp
sub
lcall
sub
mov
push
int
pop
imul
jno
mov
jbe
and
in
and
sahf
test
adc
aas
cmp
fistpll
pop
je
call
dec
lods
fs
je
mov
scas
or
lds
lock
jb
push
xor
jae
inc
roll
or
cwtl
push
gs
xchg
clc
adc
mov
push
pop
daa
fwait
pop
push
mov
or
shll
add
imul
mov
add
dec
cmp
cmpsb
dec
movsl
loopne
scas
and
mov
pop
sahf
cmp
and
sarb
cmp
fwait
lea
insb
imul
lret
mov
icebp
iret
icebp
cmp
in
int
sar
shlb
adc
inc
push
inc
cmp
adc
and
data16
aam
jecxz
sub
std
xlat
mov
lret
inc
outsl
inc
pop
mov
dec
cwtl
ljmp
lods
call
push
je
in
push
or
cmc
push
in
mov
aam
cmpsl
and
xchg
inc
in
loope
jo
stos
jmp
adc
sbb
sub
jae
in
cltd
cmp
es
or
mov
push
add
mov
outsl
fbstp
xchg
mov
and
or
filds
lcall
xchg
mov
outsb
jno
ret
pop
testl
sbb
mov
mov
jecxz
ret
orl
loop
push
add
int3
insl
ret
out
mov
cmp
jbe
xorb
xchg
out
push
mov
pop
loopne
leave
scas
push
sahf
push
cmc
adc
arpl
outsl
sub
testb
rcll
jnp
xchg
out
push
and
fiaddl
sub
mov
and
fisubl
pop
in
sub
xchg
aam
inc
iret
dec
loopne
int3
out
pop
xlat
mov
in
or
leave
cmp
ret
lcall
dec
sbb
mov
pop
bound
loop
xchg
gs
sub
mov
out
lahf
jecxz
pop
ds
or
mov
mov
mov
je
mov
repnz
xchg
fs
mov
mov
in
xchg
add
lds
incl
mov
mov
xor
decb
xor
in
xchg
jne
mov
adc
fimuls
sub
jp
fs
xchg
das
insl
cli
dec
sahf
fbld
enter
lods
inc
loopne
mov
lds
lret
push
idivb
add
stc
cmp
mov
xchg
push
inc
and
mov
pop
sbb
cmpsb
rorb
icebp
sbb
popa
movsl
xchg
aaa
xor
mov
xor
sahf
inc
pusha
fs
lock
cmpsb
icebp
aam
jp
and
test
xchg
push
js
xor
jl
jno
and
loope
lock
mov
cmp
push
arpl
cld
adc
fwait
jge
adc
stos
sti
repnz
jl
les
fcompl
adc
out
mov
pop
cs
pop
jae
jns
mov
pop
pop
jns
cmp
xor
jns
xchg
sbb
add
mov
sbb
sbb
push
ret
lock
mov
stc
lods
mov
pop
movsb
shll
aam
push
jl
sbbb
pop
jbe
cmp
lods
mov
xchg
pusha
mov
dec
add
jmp
aas
xorl
fwait
or
outsb
jge
mov
mov
sub
pop
xchg
in
outsb
pop
xor
pop
aas
adc
xor
mov
adc
lods
ljmp
mov
xchg
sbb
mov
out
adc
adc
daa
jp
sub
and
test
sub
dec
mov
fcmovnb
mov
pop
std
fs
inc
out
jmp
adc
unpckhps
movsb
mov
pop
and
bound
movsl
adc
xor
dec
ja
ljmp
ror
out
xchg
outsb
sub
in
cmp
push
adc
iret
dec
std
mov
fistpl
sbb
out
lret
cmp
cmp
jl
clc
pushf
das
stos
sbb
push
aas
or
and
lea
adc
ljmp
add
jl
pop
or
mov
xor
mov
sbb
std
sarb
jne
dec
call
out
daa
add
xchg
lods
add
repz
push
cltd
leave
lcall
xor
or
addr16
pop
insl
jle
dec
cs
sub
push
or
cli
jmp
push
mov
lret
testl
stos
or
test
cmp
mov
cli
mov
mov
pop
nop
iret
pop
inc
xor
mov
jae
add
pop
jg
mov
xor
xchg
fwait
inc
xchg
cltd
fnsave
test
sub
xchg
adc
shll
xchg
nop
xchg
ret
or
daa
xchg
nop
pop
cmp
xchg
pop
sub
mov
mov
sub
jnp
ret
mov
jle
xor
xor
jnp
mov
lret
imul
enter
insl
and
mov
mov
outsl
or
repnz
jbe
sbb
ret
jae
or
outsb
les
jne
mov
andnps
frstor
jns
js
jmp
test
rcll
sti
shlb
pop
push
loop
xchg
dec
push
dec
jne
inc
cmc
pop
inc
xlat
push
jbe
xor
sbb
jno
imul
sbb
sbb
subb
mov
adc
add
aad
lock
jbe
into
das
dec
pop
and
dec
adc
dec
cmp
mov
inc
cmpsb
data16
inc
xor
adc
jmp
push
sbb
arpl
std
test
xchg
aam
stos
sub
les
mov
push
sub
rclb
xchg
test
add
mov
jnp
push
xchg
out
pop
cmp
cmpsb
movsb
in
mov
enter
in
pop
enter
pop
repnz
cwtl
scas
aad
sub
notl
leave
stc
out
push
test
xor
mov
lods
dec
scas
gs
cmc
pop
mov
add
cli
lods
pop
inc
adc
jb
arpl
ret
nop
lret
div
sarb
pop
xor
imul
jmp
fdivr
icebp
subl
adc
je
mov
clc
push
scas
lods
outsb
xchg
shr
pop
adc
xchg
and
push
mov
test
stos
pop
pop
sub
cmp
or
mov
into
sbb
inc
clc
xorb
pop
daa
call
rcll
ja
stos
iret
rorb
xor
fsubr
ret
push
pop
push
mov
push
inc
adc
mov
push
adc
cltd
mov
add
in
imul
mov
ss
mov
adc
dec
sbb
fistps
push
mov
mov
fxrstor
mov
sbb
cwtl
cs
inc
lcall
cltd
inc
pop
pop
fs
in
pushf
jo
or
pop
sahf
in
or
scas
repz
inc
adc
test
adc
cmp
or
insb
push
ljmp
aaa
in
leave
cli
or
push
ret
lock
shl
inc
sub
sbb
mov
sbb
daa
adc
adc
sbbb
jge
sub
or
sti
jmp
or
fistpl
mov
out
inc
lret
insb
sub
jo
push
in
cs
xchg
cmpsb
adc
adc
dec
dec
test
lcall
mov
push
pop
bound
or
add
cmp
movsb
mov
add
dec
mov
lret
into
rcr
shlb
push
cmpsb
pop
je
push
xor
jae
inc
mov
repnz
cli
mov
idivb
cld
add
pop
dec
hlt
or
add
sbb
xchg
mov
fidivrl
jge
lds
movsb
hlt
mull
xchg
sahf
jp
sub
pop
sbb
data16
cmpsl
fs
pop
jmp
dec
xor
rcrl
leave
pop
push
jns
sbb
ljmp
xchg
mov
add
adc
addr16
sub
xchg
scas
adc
dec
inc
repnz
lds
cmc
fimuls
fcomp
stos
in
arpl
jne
xchg
xchg
and
pop
mov
je
push
sbb
mov
xchg
inc
adc
mov
fwait
scas
xor
jns
jle
out
fld
inc
arpl
jno
les
movsl
push
add
mov
add
xchg
fistl
jo
shll
loopne
lds
fcmovb
mov
fidivl
sbb
cmp
lds
push
andb
int
test
mov
je
adc
pop
add
in
lods
enter
mov
xchg
jo
movsb
rcll
mov
xchg
fbstp
xbegin
fcmovb
cld
lret
sbb
ljmp
mov
push
push
and
sbb
rcrb
idivb
adc
out
push
sbb
xchg
lret
andl
push
inc
pop
fnstcw
cmc
xchg
mov
ret
int3
xorl
mov
mov
jmp
jno,pt
jno
mov
pop
add
shr
pop
jg
sbb
ss
or
into
adc
jmp
or
and
or
inc
push
std
jp
int3
push
pop
jne
mov
jno
dec
jns
ljmp
iret
mov
into
les
jge
insb
pusha
xchg
mov
stos
sbb
repz
xlat
lea
andb
xchg
xchg
push
mov
lods
sbb
push
lds
mov
push
scas
out
stos
cwtl
add
inc
mov
jns
mov
gs
mov
add
mov
sahf
cmp
mov
cmc
imull
test
sbb
inc
jno
minps
mov
ficomps
jge
and
iret
frstpm(287
mov
out
push
frstor
add
pop
sub
inc
or
scas
lds
in
aam
push
pop
sbb
xchg
inc
incb
dec
fwait
cmp
jo
inc
lods
aaa
push
mov
jp
pop
dec
mov
adc
jg
push
fwait
inc
and
or
sbb
frstor
fcmovnb
ss
mov
xor
in
inc
dec
out
ljmp
push
sbb
push
sar
leave
add
cltd
jne
push
mov
jg
jmp
mov
mov
jp
mov
jmp
push
cmc
jge
dec
movsl
popf
out
push
push
sub
int
pop
add
jmp
arpl
pop
movsl
push
sub
cld
cmp
xchg
jl
shrl
lret
orl
dec
mov
fwait
pop
or
jae
mov
shlb
mov
lods
out
jb
adc
mov
sbb
cmpsl
lcall
lret
imul
xor
sahf
inc
sub
jo
test
xchg
daa
lds
shll
loop
mov
pop
aad
nop
cmp
je
cmp
nop
repz
jmp
xchg
jg
out
cmpsb
mov
dec
add
jmp
pop
inc
les
mov
mov
xchg
imul
pop
add
into
aad
pop
pop
lea
rcll
decl
div
add
mov
in
pop
fbstp
aam
add
bound
mov
inc
leave
cmpsl
into
sahf
test
sbbl
add
inc
in
and
xor
outsb
jmp
xchg
test
adc
or
in
pop
in
dec
mov
add
add
or
sti
mov
fistl
decb
movq
jecxz
js
daa
or
or
sbbl
jae
xchg
dec
out
mov
jnp
imul
aad
pop
out
xchg
fwait
xchg
inc
xlat
xchg
inc
jp
inc
movsb
push
add
mov
or
xchg
outsb
bound
cwtl
cld
fcompl
insl
fdivrs
push
mov
jg
shll
pop
pusha
rorb
mov
xor
call
lods
cmpsb
ljmp
dec
and
pop
mov
mov
imul
scas
loopne
in
lret
fidivrs
sbb
adc
ffree
jae
fadds
adc
xor
es
addr16
cwtl
mov
cmp
xor
fcmovbe
adc
mov
dec
into
pop
test
pop
or
in
dec
push
cmpsl
jo
mov
xor
mov
pop
lods
jle
bswap
jecxz
es
sub
push
dec
imul
push
into
imul
ljmp
dec
add
lds
ret
dec
pop
enter
and
xor
pop
pop
sub
fcomp
out
mov
enter
xor
inc
pop
adc
adcb
mov
dec
daa
in
into
incl
push
je
push
adc
push
adc
mov
mov
out
frstpm(287
imul
mov
fsub
imul
cli
repz
ljmp
aas
sbb
arpl
jmp
push
jmp
out
cmpl
sub
bnd
mov
mov
out
sub
push
sbb
jo
push
fwait
aaa
jmp
jbe
push
and
pop
rcr
rclb
and
dec
roll
mov
filds
inc
ja
aam
xor
mov
mov
aad
je
out
push
add
add
popa
nop
andl
lea
mov
lea
sbb
std
loope
bound
pusha
push
sub
aas
lret
fdivr
and
in
cmpsb
mov
addl
sbb
push
in
aas
fs
pop
add
adc
lahf
lahf
fnstsw
in
sub
in
pop
jns
nop
fs
nop
dec
dec
inc
test
cmp
adc
inc
xor
xor
jnp,pt
pop
xchg
push
loop
clc
pop
sub
hlt
lock
stos
mov
arpl
mov
call
cmpsb
loopne
test
sbb
pop
push
mov
add
xchg
xor
js
push
lcall
mov
sub
arpl
sarb
insb
scas
sbb
in
mov
pop
leave
mov
push
sub
sub
rcll
loope
dec
mov
dec
out
dec
in
jg
cmpsb
mov
adc
les
jbe
nop
outsb
sub
or
hlt
sarl
sarb
cli
sahf
pop
mov
pop
ljmp
cmp
sub
movsl
popa
mov
inc
sbb
adc
jecxz
cmp
jmp
sub
sub
or
lods
fdiv
int3
stos
test
adcl
notl
xchg
xchg
cld
mov
pop
jo
fsubrs
fsubp
jl
mov
imul
mov
sbbb
sub
std
andb
cli
lahf
int
push
xchg
ficomps
push
or
roll
fists
in
sub
adcb
jnp
inc
sti
loopne
idiv
push
ss
jg
and
mov
sbb
rorl
and
mov
cmp
jo
cltd
iret
mov
aad
test
and
or
jo
add
dec
ljmp
jno
push
je
mov
xchg
mov
fmuls
add
es
push
leave
or
xlat
jge
shr
cmp
cmp
sarb
xchg
addr16
or
inc
jo
adc
clc
xor
addr16
repz
push
push
popf
and
outsb
or
or
jne
dec
jne
or
out
stc
mov
movb
inc
fsubrp
out
enter
dec
in
shlb
push
or
fsts
adc
das
stos
fwait
ret
lcall
mov
outsb
adc
inc
sbb
aam
inc
pop
xchg
sub
std
out
testl
sub
aad
mov
mov
add
dec
test
cmc
std
jmp
add
test
pop
inc
popa
add
ss
xor
mov
out
sbb
shlb
cwtl
mov
xchg
and
out
xor
cld
ficoms
outsl
adc
cmp
rol
lahf
sub
xor
jmp
or
push
loopne
lret
mov
out
in
dec
xor
adc
jg
dec
xchg
lods
int3
out
sub
mov
scas
dec
pop
lret
or
jmp
repnz
incb
sbb
cld
jae
repnz
fldenv
loope
mov
xchg
dec
sbb
push
mov
mov
mov
jbe
test
jg
xor
imul
ds
add
in
sbb
jb
xchg
mov
cmp
mov
xlat
inc
inc
rcll
jo
xchg
mov
xchg
sub
sahf
out
or
ret
sahf
adc
jno
xorb
fs
inc
cmp
sbb
sarb
rorl
lret
movsb
xchg
xor
es
xchg
xchg
inc
mov
hlt
mov
ljmp
pop
jecxz
dec
leave
sbb
fs
cmp
aaa
testb
pop
inc
mov
insb
pop
cli
lret
cmp
mov
cltd
adc
xlat
mov
xor
stc
in
xlat
into
mov
leave
push
lret
stos
pop
iret
iret
rcrl
lcall
or
adc
mov
sbb
lcall
call
sub
idivb
leave
jo
dec
out
jno
hlt
cwtl
xchg
das
xchg
cmc
sub
aad
fwait
ret
cmp
jb
lock
sbb
test
xor
int3
mov
and
or
inc
into
add
mov
outsb
in
into
sbb
push
lret
jb
scas
fidivrl
sahf
insl
cmp
scas
xor
or
jbe
and
sbb
fadds
mov
js
call
shr
scas
jge
mov
ja
adc
xor
mov
mov
clc
sti
mov
pop
mov
stos
sub
dec
xchg
imul
mov
mov
mov
mov
mov
mov
mov
icebp
add
add
mov
mov
popa
push
scas
aad
shrb
insl
sub
addr16
push
lret
mov
aad
lahf
mov
mov
pop
jmp
fdivl
daa
pop
inc
shlb
adc
push
and
xchg
sbb
shll
xor
ljmp
rcrl
insl
lods
mov
loop
je
jg
shll
sub
punpckhbw
cmc
iret
adc
add
xor
fsts
dec
sti
xchg
xchg
xchg
pop
inc
cwtl
lea
push
fcom
outsb
ret
mov
push
in
push
out
fld
mov
movsl
mov
outsl
mov
mov
jno
aad
imul
scas
enter
push
or
mov
pop
and
and
nop
add
mov
sub
and
jg
test
push
cmp
dec
repnz
test
mov
dec
ljmp
xor
or
sarl
fistpl
lcall
mov
adc
and
mov
push
or
pop
jmp
aad
pop
push
push
pop
mov
adcl
aaa
cltd
mov
mov
test
jmp
imul
dec
mov
in
repnz
pusha
adc
ficoml
icebp
pop
xor
inc
aaa
sbb
test
jmp
push
lock
xchg
or
push
arpl
fwait
push
mov
stos
and
out
sub
pop
in
cmp
xor
jmp
rcrl
mov
xlat
gs
mov
neg
push
jmp
adc
iret
stos
xlat
adc
pop
inc
sar
data16
das
pop
push
aas
push
jg
cmpsl
test
mov
lahf
lods
adc
mov
push
cmp
cmp
stc
inc
dec
cmp
xor
out
xor
lock
pop
inc
push
xchg
mov
xchg
mov
shll
out
iret
in
inc
push
into
sti
jnp
cs
repnz
jns
push
movsl
inc
push
and
add
movsb
inc
cmc
sahf
pop
xchg
fsub
outsb
test
add
inc
mov
dec
aaa
mov
adc
mov
lea
pusha
jno
xor
and
pop
pop
mov
sbb
add
ret
pop
aas
mov
sbb
sbb
pop
insl
mov
jle
adc
push
dec
sub
adc
les
sarb
inc
cmc
jge
or
xor
repnz
cmp
dec
mov
push
xchg
cmp
push
jmp
xorb
and
nop
dec
lods
lcall
movsl
js
mov
fidivs
cmp
stc
sub
outsl
arpl
into
int3
sub
push
pushl
stos
push
jmp
dec
repnz
pop
mov
adc
in
aam
xor
lret
jecxz
test
in
mov
lods
cmc
lods
mov
mov
or
in
movb
fwait
and
mov
adc
out
and
dec
das
xor
inc
sbb
pop
lods
inc
xchg
adc
and
sub
lahf
ljmp
mov
xor
pop
cmp
xchg
inc
push
movb
cs
lret
xchg
cmp
jecxz
lea
mov
clc
imul
pop
pop
mov
subl
test
mov
add
sub
jbe
add
and
inc
out
lahf
xor
lea
add
jmp
lret
pop
pop
dec
nop
out
mov
fldt
jae
sbb
pop
mov
lea
inc
iret
les
int3
out
cmp
jle
les
jl
sub
stos
jp
ljmp
push
xchg
add
xchg
outsl
dec
stos
pusha
inc
pusha
aam
xor
and
mov
xchg
hlt
outsb
stos
xchg
xorl
test
test
push
sbb
shl
fsubr
jp
dec
cmp
push
mov
lods
pop
ret
dec
loopne
jno
pop
pop
fiadds
sbb
sbb
mov
neg
sarb
mov
cmpsb
pop
aaa
loope
pop
mov
jl
sbb
mov
mov
push
scas
xchg
lret
mov
jns
test
jmp
outsb
cmp
jmp
cld
in
push
mov
bound
push
out
lret
dec
jb
sub
lea
arpl
mov
les
cmc
data16
mov
inc
pop
mov
push
fcompl
pop
push
andb
cld
push
imul
push
adc
int
sub
inc
loop
aam
pop
dec
xchg
sti
ret
in
fcom
ret
jle
rolb
fdivrl
push
aaa
scas
lods
mov
xchg
popf
adc
das
cltd
pop
jne
cmp
cmp
out
mov
fistl
inc
mov
fnsave
rcrl
push
jp
test
sub
mov
and
cltd
and
adcb
jle
sbb
fsubrl
pop
xchg
stos
push
aas
repnz
sub
mov
push
and
pop
jecxz
xchg
xchg
lret
pop
mov
cmp
xchg
add
pushf
orb
gs
sub
mov
test
jmp
push
push
cmpsl
outsb
mov
insl
or
and
adc
fucom
pop
xchg
xor
sub
cld
or
cmpsb
fstp
cld
fidivrs
aad
cmc
dec
mov
dec
aad
imul
lcall
addr16
aad
mov
insb
out
std
stc
rcrb
icebp
fisubl
sbb
ret
sub
mov
xor
adc
sbb
scas
pop
out
sbb
in
inc
in
hlt
in
imul
mov
adcb
mov
pop
mov
popa
sub
aam
sub
and
stc
adc
or
dec
jnp
xor
mov
fstpl
adc
cmp
sbb
mov
jmp
sub
icebp
dec
sub
add
dec
xor
mov
jg
adc
cltd
jle
mov
je
sbb
jae
inc
lret
lock
lcall
je
addl
jbe
fnstenv
xlat
stc
pop
jno
xor
rcl
pop
ja
sbb
cmpsl
jbe
fwait
data16
lock
mov
xchg
sub
jge
xor
sub
loope
sbb
pop
dec
and
mov
adc
jp
xchg
xor
ss
dec
jle
sbb
mov
repz
out
push
pop
pop
inc
popf
sub
js
inc
mov
push
adc
lcall
xor
inc
rep
sbb
and
ret
scas
sub
vpunpckhqdq
je
js
dec
frstor
push
sahf
xchg
jecxz
add
mov
icebp
xor
hlt
pop
jge
outsb
test
xchg
fwait
out
adc
inc
mov
or
lahf
mov
xchg
mov
idivl
lods
lods
sti
push
aas
ljmp
pop
cmp
lret
xor
jecxz
sbb
cmpsb
jg
enter
outsb
adc
das
into
stos
xchg
push
sub
adc
or
jp
cmp
insl
jl
sarb
rorl
in
xchg
fs
mov
aas
mov
outsl
notl
insl
imul
testb
cltd
sbb
inc
add
inc
push
lods
sbb
xor
sbb
shll
ret
in
dec
jge
mov
mov
int3
nop
adc
xchg
test
inc
push
inc
scas
and
or
sbb
rcll
mov
negb
in
cmp
pusha
aas
test
mov
dec
leave
jbe
bound
mov
jmp
lret
clc
dec
cmp
push
cld
out
jp
addr16
fwait
pop
pop
je
xlat
mov
xor
xor
gs
lret
cmp
fldt
jp
pop
popa
and
test
sbb
push
mov
mov
loopne
pop
mov
inc
cltd
sub
lods
in
jbe
test
loop
popf
inc
dec
hlt
pop
lahf
into
mov
mov
arpl
mov
loope
into
mov
mov
mov
aas
mov
jnp
xor
leave
int3
ficompl
scas
push
cmpsl
out
dec
jns
add
inc
adc
hlt
dec
popf
nop
xchg
aad
movsl
jp
jns
xor
aam
movsl
pop
test
lea
jp,pt
mov
and
dec
nop
push
sbbl
repz
in
cmp
lds
xor
cmp
jns
bound
mov
iret
add
sbb
mov
std
dec
push
data16
and
lock
in
or
inc
inc
mov
popa
sbb
in
scas
jno
pop
imul
nop
aam
sub
aam
lcall
movsb
in
xor
cmpsb
adcl
loope
pop
loop
mov
test
out
int
lcall
outsl
cmp
lods
xchg
bound
xor
leave
sbb
mov
ljmp
iret
insb
push
jb
ja
xchg
loopne
fsubrl
out
nop
and
clc
insl
xchg
lds
ficomps
enter
xor
in
mov
je
icebp
imul
jns
xor
jo
pop
daa
movsl
sub
bt
test
sub
cmp
jb
add
mov
andl
cwtl
in
dec
jne
mov
xorl
sbb
loop
mov
push
in
pop
mov
je
vmwrite
dec
add
imul
and
shrd
sbb
mov
scas
cmp
mov
ss
push
mov
mov
mov
push
lods
sbb
and
inc
std
mov
mov
ja
bound
daa
xor
xchg
icebp
add
shrl
shl
jno
cli
and
or
lret
jp
sti
iret
lret
ljmp
jg
inc
cwtl
xor
enter
out
jo
call
xor
sti
xchg
xor
mov
repnz
data16
add
out
call
cmp
or
mov
enter
call
jae
xorb
iret
out
sub
sbb
inc
xor
or
adc
push
dec
pop
xchg
scas
or
add
les
jecxz
dec
mov
fnstsw
xchg
test
xchg
push
sub
xor
es
mov
mov
dec
notl
cmp
xlat
dec
shr
pop
mov
and
test
fildl
imul
push
xlat
test
sub
and
push
pop
mov
lret
and
pop
jmp
rcrb
cltd
mov
push
jmp
push
cld
sahf
cld
adc
in
jle
xchg
cmp
or
and
xor
loop
mov
add
sub
shrl
scas
xor
push
xchg
divb
cmp
push
fcomps
mov
arpl
xor
sub
pop
sbb
push
cwtl
push
sarl
sbbb
mov
xchg
adc
mov
sub
mov
sbb
inc
loope
stos
addl
out
pop
mov
movsl
adc
dec
das
arpl
pop
and
dec
hlt
pushf
adc
sbb
lods
mov
sub
dec
test
sub
loop
mov
cmp
lods
jecxz
fidivrs
lcall
cmp
loope
push
mov
pop
inc
bound
xchg
xchg
sub
add
xor
rcr
adc
icebp
dec
sub
cmc
inc
test
insb
xchg
lds
pop
add
xor
insb
aaa
iret
in
stmxcsr
ret
dec
dec
cmp
js
repnz
push
cltd
inc
adc
mov
mov
inc
enter
and
adc
rolb
sub
and
jecxz
call
or
dec
dec
jb
out
jl
orb
arpl
xchg
mov
mov
cld
gs
outsb
data16
sbb
mov
and
jmp
mov
insb
push
adc
jae
jo
mov
xchg
iret
cmp
push
in
movsb
or
mov
push
shrb
mov
insl
sub
add
inc
xchg
mov
test
fisttps
and
fdivp
out
push
or
movsb
fcmovnb
xlat
pushf
xor
mov
pop
xor
mov
sbb
jge
sahf
mov
pop
leave
sub
jmp
orb
push
xor
fadds
pushf
and
jae
out
popa
call
and
aaa
sahf
pop
sub
out
pop
lock
cltd
outsb
mov
push
mov
mov
pop
or
mov
ss
ljmp
jecxz
imul
out
out
cli
push
ret
dec
jb
test
dec
mov
test
mov
jmp
es
test
lcall
movsb
cmp
dec
jb
add
andb
push
xcrypt-ecb
cmpsl
or
dec
fstps
bound
fadds
mov
pop
popf
pop
xor
outsl
xchg
outsl
or
fstpl
outsl
outsb
popf
cmp
inc
cmpl
aam
aad
or
xor
and
pop
add
movsl
and
cmp
iret
dec
pusha
popa
mov
icebp
stos
imul
fcoml
adc
lods
mov
sbbb
mov
scas
pop
sbb
sbb
sub
xor
add
mov
outsb
inc
sbbl
mov
and
sub
cmpsb
es
push
movsb
adc
push
add
dec
sub
addr16
or
jno
or
int
into
aas
ds
inc
ss
jg
push
jo
outsb
ffree
jns
pop
pop
aad
or
adc
dec
push
xor
add
push
xor
pop
mov
mov
add
mov
stos
shlb
lret
push
andl
ss
xorl
jecxz
rep
test
adc
fcoml
mov
xor
cmp
popf
push
loopne
mov
push
mov
hlt
jge
pop
adc
dec
js
ds
and
movsl
mull
sti
pop
push
loop
mov
dec
sbb
scas
inc
fs
dec
into
cli
loope
xlat
ret
movl
jb
bound
fidivrl
hlt
std
sbb
xor
mulb
and
out
pushf
loopne
xor
sbb
daa
out
ds
inc
adc
int
pop
mov
push
stos
mov
jmp
mov
cltd
xchg
out
xchg
imul
push
data16
and
sub
add
nop
pop
adc
sbb
push
addr16
dec
lret
in
push
pop
iret
mov
or
repnz
jge
mov
mov
xchg
fwait
dec
or
outsl
push
xor
dec
mov
cltd
nop
gs
jle
jns
or
ret
loopne
xchg
push
push
lods
push
lret
adc
les
outsl
xlat
iret
and
pop
sbb
shlb
fwait
scas
pop
outsb
mov
hlt
data16
xchg
ljmp
out
adc
mov
xchg
adc
je
loope
fs
dec
cmp
adc
outsb
loop
adc
in
and
mov
movl
mov
cmp
inc
dec
out
pop
and
push
ds
add
js
jge
cmp
mov
xor
sub
dec
int3
push
lret
mov
and
inc
mov
cmp
push
lock
or
mov
jp
pushl
lahf
push
xchg
jge
push
jp,pt
xor
inc
sbb
push
jmp
aaa
inc
scas
pop
mov
aas
fisubrs
ss
faddl
std
out
into
je
mov
imul
push
sbb
jmp
popa
or
lcall
cld
aam
cmp
dec
cmp
cld
add
arpl
mov
es
add
xchg
pop
adc
and
xchg
divl
add
sbb
test
jbe
addb
cmp
inc
mov
pextrw
push
fs
jb
jle
fs
test
adc
mov
cmpsb
pop
or
clc
adc
dec
mov
ljmp
xor
mov
and
fwait
fwait
rcrl
sub
mov
dec
mov
es
pop
fnstcw
fmul
inc
call
push
shlb
insb
les
mov
sarl
add
sti
bound
mov
xchg
adc
out
push
jno
mul
out
pop
fmul
movsl
les
test
mov
push
or
pushf
jecxz
das
cmp
dec
scas
sub
outsb
lods
faddl
ffree
clc
out
cld
lock
pop
pop
popa
mov
cmp
aaa
psrld
xchg
gs
aaa
lock
cs
pop
popf
and
push
pop
pop
dec
xor
aam
daa
mov
test
jle
pop
dec
cmp
mov
cs
stos
insl
mov
pop
roll
int
mov
push
pop
fisttpll
mov
push
imul
xor
stc
sbb
cmpsb
mov
loope
add
and
sub
cmp
cmp
and
cltd
pop
iret
stos
loopne,pn
aam
fldenv
loop
push
adc
mov
add
scas
push
ficoms
shrb
int
rcrb
cwtl
mov
movsl
movsl
mov
xor
sbb
test
into
push
push
dec
fwait
xchg
repnz
push
popa
sar
test
out
je
cmp
rolb
jae
stc
shll
push
aaa
xchg
cli
and
sbb
popa
inc
stc
xor
lret
push
int3
xor
pop
int
dec
mov
push
lahf
lods
je
out
in
into
pop
mov
sub
jns
out
sti
push
mov
repnz
add
pop
frstor
orl
sahf
shl
cld
and
loop
jecxz
pop
mov
push
rcrl
fs
mov
pop
fidivl
xor
mov
out
add
pop
push
jns
int
sahf
pop
mov
xor
jp
lock
adc
sbb
test
sbb
fwait
pop
pushf
in
push
fwait
mov
push
pop
lds
rorb
or
push
imul
add
imulb
dec
dec
mov
inc
jnp
fistpll
sbb
test
fisttpll
xor
loopne
dec
outsl
mov
inc
dec
push
int3
in
stos
pop
mov
out
xor
mov
jns
fwait
stos
dec
popa
mov
addr16
cmp
mov
push
mov
movsb
add
cmpsb
outsl
pop
xor
hlt
inc
dec
stc
or
and
fsubrs
out
mov
ficoms
jmp
or
or
xor
and
xor
pop
es
sbb
push
subb
nop
pop
inc
push
les
popf
mov
out
sbb
pop
pusha
or
mov
jp
cltd
stc
xchg
stc
sbb
nop
js
mov
pushf
fs
flds
fwait
pop
add
pop
idivl
inc
mov
mov
add
icebp
orb
out
pop
scas
push
fnstenv
xchg
sbb
mov
js
pop
add
mov
push
stos
push
sub
lods
bound
aam
andb
imull
mov
adc
enter
aad
add
xor
aad
fwait
cmpsb
sub
mov
call
aas
je
fcompl
cmp
push
sbb
pusha
jbe
sub
xlat
cmpl
xor
call
jne
notl
pop
sarb
or
sarb
inc
jl
imul
imul
mov
inc
mov
shlb
fwait
jae
fsubs
scas
cltd
cmpb
lret
mov
pop
or
in
enter
mov
ja
xchg
and
les
sub
or
jo
push
xchg
add
sub
pop
push
lret
jecxz
and
and
in
pop
mov
xor
mov
lock
jnp
ficoml
sbb
std
cld
in
cwtl
popf
adc
mov
fxch
push
faddl
outsb
pop
cmc
mov
loope
xchg
dec
push
jmp
fs
jle
ror
push
das
sbb
es
movsb
enter
sbb
es
enter
jb
outsl
jbe
das
xchg
push
lret
les
popf
inc
or
rolb
in
sahf
sbb
insl
jmp
xchg
sbb
dec
mov
cmp
jge
repz
mov
in
mov
mov
ret
and
push
mov
sti
xor
ror
or
ret
mov
jne
shr
pop
or
xchg
jbe
push
or
cmp
lret
pop
enter
divl
je
cld
sub
aas
sbb
xchg
std
xchg
cmp
les
popf
mov
fsubs
push
pop
stc
int
mov
dec
cmp
mov
inc
insl
cli
mov
fmull
pop
inc
xchg
sbb
jecxz
sahf
push
pop
test
scas
mov
ret
in
jmp
push
dec
loopne
stc
rcll
fwait
lcall
stos
mov
sub
mov
rcrb
sbb
sub
lcall
aaa
push
pop
aam
repnz
addr16
pusha
adc
shrl
std
sbb
stc
cmp
xor
stos
and
imulb
jbe
xchg
mov
jecxz
in
dec
in
pop
gs
outsb
lock
scas
js
ss
sbb
pushf
or
sub
inc
or
lods
mov
sbb
and
adc
fwait
mov
mov
and
jbe
subb
ss
sbb
mov
das
clc
jno
fiadds
xchg
xor
arpl
cli
push
bound
mov
andb
mov
movsl
cwtl
xchg
add
out
lods
xor
sbbb
mov
inc
cmp
cmpsb
sahf
or
lret
enter
fdivl
sub
pop
enter
mov
ss
aas
mov
call
add
sysexit
movsb
sbb
push
movsb
mov
pusha
ds
xor
sbb
xchg
and
xchg
push
cmp
arpl
lret
cmp
xchg
pop
scas
sbb
out
adc
aaa
pop
sbb
sbb
test
scas
mov
mov
test
xor
push
jns
xchg
sub
hlt
lcall
cmpsb
rcrb
mov
outsb
ret
and
jno
mov
pop
add
pop
jnp
jb
jo
cmp
rclb
out
jle
pop
not
sahf
cwtl
nop
mov
int
mov
cmpsl
adc
in
cwtl
data16
fldenv
negb
sahf
cmpl
outsl
xchg
cmc
test
xchg
inc
sub
mov
lock
and
mov
dec
xor
loop
lcall
outsl
loop
push
sub
cmp
rolb
addr16
add
inc
lcall
xlat
cwtl
aas
fildl
pop
fimull
rolb
outsl
aas
pusha
jno
sub
push
adc
pop
iret
jmp
xor
adc
in
mov
inc
insl
jmp
cmp
jl
inc
inc
pusha
jne
sub
push
int3
cmc
and
repz
cmc
push
cmpb
mov
mov
xchg
dec
lea
into
sub
pop
cltd
cmp
inc
jg
jbe
mov
sub
out
insb
xchg
clc
mov
mov
test
lods
or
adc
insb
cmp
test
daa
push
test
mov
or
dec
pop
jae
sub
sbb
jne
dec
data16
and
jne
fldl
testb
or
aad
dec
and
ss
and
push
mov
andb
loopne
add
cwtl
inc
jbe
orb
mov
out
jmp
fnstcw
mov
and
lcall
loopne
mov
mov
pop
fldcw
out
xor
mov
cmp
jge
sub
es
inc
rorl
xchg
sbb
xchg
adc
mov
cli
negl
stos
and
cld
lcall
dec
adcl
add
sub
ja
aam
cmp
mov
dec
xor
fcoml
sahf
and
xor
lahf
xor
mov
jl
cli
cmc
lods
jmp
dec
mov
and
mov
inc
pushf
sbb
outsl
es
xor
repnz
neg
pop
sub
sbbb
dec
and
xchg
in
xchg
mov
add
in
xor
jns
int3
lret
push
mov
xor
mov
xchg
cmp
or
mov
dec
es
pushf
stc
shl
push
sbb
cmpsb
loopne
add
sbb
inc
dec
enter
stc
das
fcoml
mov
inc
cld
test
xchg
sub
in
dec
rolb
dec
xor
scas
jge
jecxz
cmpsl
cli
push
cwtl
mov
les
mov
xchg
testl
outsl
mov
xor
ret
ds
dec
or
addr16
mov
jns
or
mov
das
fldenv
std
jg
movsb
lret
lahf
sub
loope
cld
scas
push
mov
jg
dec
bound
cld
ficoml
andl
test
adcb
sahf
push
andb
in
jecxz
ds
jae
and
aam
dec
inc
fsubrl
xchg
stc
cs
and
mov
mov
pop
mov
mov
mov
add
dec
leave
push
push
bound
sahf
ret
mov
xor
fwait
scas
rorl
ljmp
idivl
aam
test
sbb
aad
ret
dec
mov
add
xor
mov
cmpb
lods
std
xchg
je
mov
ds
sbb
pop
ljmp
mov
cmp
loopne
and
test
mov
lds
pop
cmp
in
xchg
cmp
scas
jne
leave
push
shrb
outsl
mov
int
mov
imul
jmp
sti
sbbl
movsl
sub
stc
mov
scas
stc
inc
pop
or
filds
cmpb
fcoms
xlat
ja
mov
fs
cmpsb
jns
adc
mov
mov
pop
repz
std
jecxz
cmp
sub
or
jbe
xchg
and
jge
mov
cs
or
adc
xchg
clc
imulb
mov
xor
jmp
cwtl
jb
fsubl
stos
sti
sti
push
pop
push
out
push
insb
scas
cmp
enter
sbb
fs
dec
add
mov
mov
and
push
insb
add
xchg
pand
test
repz
sub
mov
and
mov
add
ds
fs
and
adc
scas
add
sarb
ret
pop
lcall
add
xchg
cwtl
ret
icebp
fisttpll
repnz
sbb
dec
mov
std
pop
out
aas
adcb
add
dec
rol
je
in
jg
mov
xchg
movsb
imul
addr16
outsb
pop
mov
push
enter
addr16
test
outsl
cmp
mov
cmc
fistpl
stos
scas
in
nop
pusha
pop
shlb
lock
mov
pop
inc
fimull
add
in
or
cmp
jl
std
movb
adc
sarb
push
mov
fdivs
push
ds
or
mov
or
lcall
adc
ret
test
in
mov
sub
shll
icebp
lds
pop
aas
add
addl
add
mov
jmp
fiadds
addb
pop
ret
imul
xchg
popf
and
xchg
push
sub
xchg
in
adcb
sub
mov
iret
xchg
cmp
inc
jmp
cmp
add
sbb
mov
dec
lea
and
and
hlt
in
mov
jnp
testb
xchg
cli
aam
mov
ljmp
sarl
aam
shll
ret
pop
add
test
pop
lret
sbb
xor
xchg
pop
sahf
mov
mov
scas
test
xor
xor
stc
xor
cmp
adc
mov
lds
pop
pop
sub
fidivl
pusha
push
jne
push
in
inc
mull
jmp
jbe
addr16
xlat
arpl
xchg
inc
jp
sti
pop
sub
inc
dec
adc
adc
jg
sbb
or
popa
cmp
pushf
pop
adc
subl
inc
jle
or
sub
dec
adc
jl
iret
mov
mov
ljmp
xorl
loop
je
xchg
or
addb
clc
jg
inc
mov
xchg
fnstsw
stos
int3
sbb
xorb
sub
es
out
mov
push
iret
push
xchg
fs
sti
push
fdivr
push
movsb
or
xchg
lods
pop
out
decl
sub
test
mov
repz
mov
out
sbb
cmp
xor
push
jle
mov
adc
ja
fldenv
frstor
in
enter
and
jnp
xchg
mov
fs
in
add
inc
add
adc
aad
jns
inc
pop
sbb
sbb
push
je
sbb
mov
mov
inc
shrd
cmp
jge
or
int
in
loope
fldt
xchg
push
dec
add
jnp
in
lcall
stos
jne
rcr
inc
lret
fsubrp
jnp
xor
xor
fildll
fwait
fadds
bound
sub
andb
mov
xor
cmp
pop
inc
jecxz
fimuls
aam
sub
mov
mov
shll
repz
loope,pn
inc
mov
ss
scas
lock
out
daa
shll
stos
push
fnstsw
outsl
cmpsb
dec
mov
xchg
adc
outsl
sbb
mov
dec
push
add
push
popf
lahf
xor
rorl
xchg
clc
in
out
lret
lods
insl
into
fdiv
cwtl
jle
adc
xlat
rcrl
mov
and
add
iret
jno
dec
sub
sbb
lods
xor
dec
incl
mov
fs
into
subps
orl
test
add
in
xchg
sub
jle
out
or
xor
cmp
jae
lret
adc
fidivrl
cmc
and
or
adc
pop
push
shlb
push
call
push
jge
mov
push
pop
addb
mov
bound
inc
mov
out
into
ds
pop
sbb
mov
testl
push
push
adc
lret
pop
js
pop
out
out
adc
das
std
or
mov
jo
push
pop
in
addr16
outsl
push
pushf
xor
sbb
ds
test
cmpsl
dec
cltd
mov
add
add
xchg
jae
inc
or
and
jp
ja
push
jp
mov
and
ja
mov
pop
and
outsl
shll
sub
into
fsubs
stos
repnz
shl
xchg
into
pop
jmp
pop
inc
xchg
cmpsb
push
xchg
orb
pop
and
mov
cld
fsubrp
aad
jno
rorb
iret
mull
dec
sahf
pop
cmp
cli
imul
pop
mov
test
incl
sbbl
lcall
sbb
inc
fnstcw
sti
iret
sub
add
xchg
add
inc
fldenv
mov
idiv
mov
xchg
mov
out
iret
cmp
ss
add
int3
inc
arpl
lret
out
cmp
es
cmp
pop
sub
ret
sub
cwtl
test
std
jno
aas
mov
lret
mov
adc
mov
push
in
inc
lods
mov
mov
jge
inc
fwait
loop
jb
push
hlt
and
or
push
xchg
scas
inc
int3
test
xchg
lods
push
test
mov
cmpsl
sbb
std
enter
ljmp
dec
sub
ljmp
xor
ss
test
daa
int3
fbld
repnz
daa
inc
add
fiaddl
ljmp
iret
data16
jmp
stos
popf
outsl
jecxz
aaa
jne
dec
lods
mov
push
and
sbb
push
insb
xchg
cld
xor
pusha
cld
cmp
repz
ljmp
sub
incb
sbb
push
int
in
sub
lock
dec
stos
rcr
push
and
in
cmpb
das
push
adc
cltd
cmp
add
iret
daa
pop
xor
and
dec
cmp
clc
pop
sbb
subl
fstpt
in
jo
or
les
xor
dec
cmp
add
cmpsb
loopne
pop
fmull
imul
stos
adc
mov
je
test
adc
pop
or
mov
aaa
sub
lret
sbb
mov
mov
and
fs
adc
mov
les
push
adc
inc
mov
ret
js
xchg
jbe
test
fwait
sbb
out
xchg
jne
xor
cmpsb
in
or
in
rcrl
ret
and
sbb
adc
adc
sub
cld
sbb
loope
jecxz
cltd
dec
inc
cwtl
jg
pop
lea
test
dec
loopne
mov
enter
leave
mov
in
add
out
aam
out
cs
mov
inc
push
dec
jno
dec
arpl
adc
jo
lcall
mov
and
loop
popf
fsubl
jmp
fadd
pop
aaa
push
shll
ds
push
hlt
xchg
push
or
adc
lcall
es
add
inc
sub
aas
icebp
cltd
js
sbb
lcall
iret
outsl
daa
cmp
mov
scas
xchg
outsl
rclb
add
fimuls
mov
mov
shll
dec
out
mov
mov
test
mov
aas
dec
mov
xor
pushf
or
push
inc
xchg
cmp
stc
orb
icebp
pop
mov
push
enter
enter
shll
icebp
add
ret
lods
pop
icebp
cmc
dec
es
shrb
pop
popf
xlat
repnz
leave
mov
dec
jbe
xchg
add
xchg
mov
dec
testl
dec
mov
cmc
xor
add
push
jp
cmp
subl
and
jnp
insb
mov
aas
push
sbb
call
popf
ret
mov
cmp
je
lock
stc
test
arpl
test
lahf
decl
inc
int3
xchg
xor
shrl
pop
cmp
roll
inc
out
inc
mov
ljmp
and
and
mov
es
pop
popa
or
mov
int
repz
in
jns
mov
cmpsl
inc
mov
ret
fwait
push
test
cwtl
test
mov
xchg
push
fidivrs
adc
cmp
ja
jns
xor
data16
cmp
fistl
sbb
mov
xchg
neg
push
push
jae
fbstp
or
push
jne
std
test
push
xchg
nop
dec
in
jg
movsl
lcall
rcrb
mov
call
mov
lods
sub
addr16
push
jecxz
fldl
push
xor
push
xchg
lahf
nop
sbb
pop
pop
int3
cmc
mov
popa
data16
cmp
loop
popa
imul
adc
das
pop
xchg
push
mov
repz
add
ret
sub
sub
mov
or
jno
pushf
repnz
jbe
cs
in
sub
sub
push
aam
pop
inc
adc
sub
dec
test
out
or
mov
cld
push
test
dec
lret
test
fs
out
xor
jb
aas
mov
ss
pop
sbb
shlb
fnstcw
testb
das
cmp
inc
in
mov
push
movsb
scas
inc
mov
cmp
stos
sarl
and
add
mov
cmp
adc
jmp
pop
inc
cmpsb
shrb
or
sbb
repnz
inc
aam
cmp
cs
pop
sarl
lock
push
ss
pop
dec
mov
add
and
lcall
mov
dec
dec
mov
stos
mov
jmp
mov
repnz
ficompl
repz
xchg
ret
mov
mov
imul
ret
mov
mov
xor
xor
mov
push
pop
mov
pusha
adc
push
add
daa
in
sub
iret
dec
lods
add
out
jg
and
mov
mov
shrb
mov
push
popl
xchg
xchg
out
push
nop
adc
mov
sbb
jl
rcll
sub
mov
lahf
jne
jmp
or
loop
aas
mov
sbb
test
mov
pop
out
mov
cmp
cld
mov
xor
inc
mov
push
movsb
iret
test
mov
mov
adc
leave
fnstcw
jbe
push
push
mov
and
sbb
fidivrs
mov
mov
in
cld
std
adc
mov
outsl
scas
push
and
mov
mov
xor
int
pop
aaa
jecxz
xchg
in
add
std
outsl
sti
aaa
jb
out
rol
lea
xchg
fs
hlt
push
ret
and
cli
push
adc
xor
movsb
enter
xchg
call
out
xor
sti
jae
stos
and
fs
out
push
stos
rorl
lahf
xchg
fisttpll
mov
shlb
ds
repnz
push
fwait
cmp
js
cmpsb
add
inc
pop
jbe
ficoml
xor
lret
mov
movsl
lods
add
sahf
inc
stc
dec
adc
movl
int3
jl
stc
imul
bound
mov
push
xchg
xchg
sahf
cmp
test
xchg
push
cmp
cltd
mov
mov
cmp
push
mov
shl
sub
or
pop
jbe
sbb
pop
jle
push
and
pushl
jae
jmp
mov
and
or
cmc
test
hlt
int3
mov
mov
jg
vpmacssdd
push
ficoml
cmpsl
sub
mov
ljmp
sub
cs
scas
out
stos
jg
push
aas
data16
jmp
jge
jnp
fs
adc
and
imul
jne
push
fisubs
push
xor
mov
add
std
jae
inc
aaa
xchg
js
das
mov
jne,pn
push
xchg
test
decl
subb
cwtl
inc
cmp
adc
pop
xchg
push
jl
mov
mov
pop
out
mov
lret
pop
aas
lods
xor
push
cmp
sbb
mov
icebp
adc
dec
sete
aaa
out
cwtl
cmp
pop
jg
jmp
xchg
push
cmp
jbe
and
add
mov
icebp
fwait
sub
or
daa
outsl
cmp
mov
pop
movsb
cmp
les
les
sub
iret
lock
es
je
rdtsc
pusha
dec
je
fcmovb
jl
loop
vmwrite
sarl
loopne
cmpsl
les
and
decl
dec
into
test
fcmovnb
xchg
rol
imul
cld
stc
or
leave
and
adcb
sbb
outsl
xor
adc
les
pop
out
inc
cmp
stos
push
test
cmpsl
dec
test
test
and
lcall
mov
roll
dec
jnp
addb
rcrl
inc
xchg
in
mov
mov
cs
enter
dec
mov
and
push
cld
sahf
dec
sub
lea
mov
mov
inc
inc
inc
mov
out
push
xor
repnz
rcr
sbb
rorl
mov
mov
cmpb
pop
push
ljmp
mov
cmc
xchg
jecxz
mov
xchg
mov
mov
push
fimuls
push
cmpsb
pop
cmp
ds
in
sub
dec
mov
and
repnz
mov
inc
pop
xor
ret
and
sbb
out
sbb
xchg
pop
or
inc
std
and
xor
push
aaa
cli
sbb
outsl
xlat
out
mov
inc
dec
lea
inc
mov
push
loope
xchg
lahf
mov
leave
mov
imulb
repnz
mov
adc
sbb
imul
lds
mov
bound
jb
arpl
gs
push
movsl
inc
cmpl
je
xchg
aaa
mov
mov
into
sbb
jle
inc
pop
test
loope
or
shlb
out
sbb
stos
leave
int3
sbb
dec
test
jne
insl
divl
push
push
push
clc
je
fst
lahf
test
std
jne
ret
daa
pop
lret
mov
xor
jmp
shl
add
cmp
stos
push
sub
and
pop
pop
sub
mov
mov
xchg
mov
fbstp
mov
imul
cmp
xor
inc
fiadds
pop
push
leave
mov
adc
inc
or
popa
xor
xchg
imulb
pop
enter
out
aam
ljmp
fsave
jmp
stc
sbb
dec
adc
pop
lcall
hlt
jp
out
loop
ja
icebp
pushf
adc
sbb
adc
mov
or
jno
jno
movsl
out
mov
add
shlb
mov
push
push
rcl
fnstcw
ret
mov
ret
cmpsb
mov
jnp
mov
add
push
mov
inc
inc
inc
add
roll
push
jbe
push
mov
mov
lods
mov
data16
jne
mov
cmpsl
fisttpll
adc
adc
jns
imul
sbb
jl
out
mov
push
mov
mov
mov
push
les
cmp
daa
add
mov
je
fiaddl
ja
xchg
inc
xlat
dec
movsb
jecxz
das
hlt
test
sbb
shrb
int3
sahf
out
xchg
lock
negl
arpl
repnz
arpl
or
add
negl
xchg
into
ficoml
cmp
push
sub
pop
repz
jne
out
adc
xlat
or
fistpll
vmwrite
jnp
adc
push
pop
testb
cmpsb
jg
xor
das
inc
add
and
or
jp
pop
hlt
fisttpl
xchg
leave
lods
xor
aaa
jle
leave
js
repnz
cmp
out
fdivs
rolb
hlt
jo
xchg
into
xchg
sub
test
add
out
loop
mov
cltd
inc
sbb
movsb
sub
je
into
sub
fildll
les
pop
les
cmc
js
xchg
mov
cmp
mull
or
sub
xchg
mov
xor
adc
xchg
dec
in
sti
mov
test
push
lds
aaa
test
push
insb
in
sub
sub
mov
jp
shrl
dec
xchg
xor
lcall
lods
imul
scas
out
cmp
movsl
sub
ret
pop
xor
push
inc
jae
outsb
adc
out
jmp
lahf
loopne
push
mov
mov
mov
sbb
icebp
test
pop
mov
dec
sti
roll
and
mov
das
scas
xorl
push
xchg
xchg
test
xchg
lahf
mov
sbbl
mov
push
test
jns
mov
fwait
cmp
jno
sub
adc
inc
push
jae
sbb
js
inc
insl
lret
jp
loop
sub
aas
clc
fprem
ss
xor
adc
roll
notb
jne,pt
ss
push
jne
dec
add
xor
jns
pop
pop
repnz
pop
pop
shl
xchg
xchg
inc
jp
in
cltd
sbb
xchg
inc
fimull
sarb
rep
lcall
mov
out
mov
mov
popf
xor
sub
out
xchg
aas
in
jo
scas
xchg
dec
push
in
mov
aad
cmp
and
mov
xchg
mov
cld
and
xchg
out
or
mov
pop
div
jecxz
scas
xor
pop
push
or
lods
std
fdivs
cmp
in
or
popf
loope
insl
pop
lock
fidivl
mov
mov
jle
xchg
cwtl
clc
sbb
inc
mul
andl
push
stos
sub
sbb
test
outsl
pop
scas
pop
xor
inc
sti
lea
fisubs
loop
icebp
jp
mov
mov
imul
scas
pop
fldenv
xorl
mov
sub
mov
sbb
push
cltd
test
sub
sbb
push
add
test
ret
setg
sub
add
fdivs
mov
movsb
int
cld
ljmp
cmp
add
fldl
xor
and
push
jno
jecxz
pop
in
mov
test
inc
pop
add
out
mov
lds
cmpsl
and
pop
cmp
lahf
pop
jle
cmc
rorb
lahf
hlt
cwtl
xorb
adc
and
inc
fwait
cltd
inc
in
dec
jmp
sarb
inc
lods
or
adc
hlt
and
sub
cmp
inc
cmc
push
paddq
mov
hlt
push
cmp
lahf
lcall
push
mov
and
mov
cmp
jbe
pop
add
je
mov
out
jmp
push
data16
cs
mov
or
push
sub
push
movsl
addr16
pop
mov
jle
hlt
xchg
ret
cmpsb
ret
arpl
aaa
or
dec
mov
and
xchg
test
idivb
out
mov
mov
leave
addr16
mov
push
xchg
adc
push
fstl
insb
aas
ja
stc
add
inc
andb
adc
mov
imul
mov
fldcw
xchg
sbb
insl
scas
fsubrs
xor
or
pop
fnstcw
pop
into
xchg
aam
add
add
xor
cmp
rorl
xchg
out
inc
xor
pop
ss
sub
rol
shll
jnp
pushf
add
and
pop
sti
dec
loope
in
mov
decl
jb
mov
xor
sbb
mul
test
or
hlt
xchg
lret
cmp
inc
loop
jecxz
cwtl
int3
mov
xor
xchg
es
fcompl
inc
repnz
mov
lock
mov
xchg
mov
add
ja
xchg
in
rcll
mov
dec
sbb
mov
clc
pop
cmp
xlat
std
sbb
mov
scas
sbb
sub
movsb
xchg
jnp
js
mov
mov
jmp
in
test
rolb
pop
inc
adc
js
addr16
aas
hlt
insl
add
xchg
leave
or
add
jecxz
mov
aaa
xchg
pop
imul
jo
mov
push
add
lcall
shrb
xchg
add
aam
aad
insl
mov
out
repz
lret
dec
shl
mov
aam
mov
inc
inc
fiaddl
push
mov
fadds
jmp
fnsave
fisubl
inc
arpl
sbb
divl
nop
add
or
cli
and
nop
mov
repz
into
test
shr
pop
sbb
sti
sub
lock
scas
call
inc
mov
push
xchg
inc
adc
daa
lods
pop
cmpsb
adc
mov
mov
mov
xchg
mov
pop
repnz
outsl
jae
jge
mov
setge
lea
sub
jecxz
pop
xchg
mov
popf
push
cld
scas
mov
popl
mov
in
pop
stos
cmp
mov
mov
mov
inc
hlt
in
jecxz
fidivl
es
test
push
mov
mov
aam
jbe
sub
cmp
jmp
sbb
rolb
mov
xchg
pop
clc
dec
sub
lret
xchg
imul
and
mov
test
shll
test
jl
mov
rcrb
je
or
adc
xor
gs
push
xchg
lcall
scas
push
sub
or
int
fwait
and
addr16
test
mov
sub
sbb
add
jg
jp
mov
sbb
imul
fisubs
mov
lods
dec
xor
pop
popf
fidivrl
dec
pop
xchg
push
jne
mov
pusha
mov
mov
add
add
lock
dec
mov
movups
add
jmp
decl
add
xchg
jle
mov
jp
scas
push
div
loope
icebp
mov
adc
and
mov
and
inc
pushf
or
notl
jnp
popf
push
inc
sahf
out
arpl
and
mov
xchg
ja,pn
xchg
xchg
xchg
or
cmp
bound
fsubrl
add
mov
std
pop
xchg
dec
lea
dec
loope
test
cld
cmpsb
jns
jb
xchg
fistl
dec
push
push
dec
and
sbb
outsl
ljmp
imul
xor
int
xchg
mov
push
stc
movsb
adc
inc
pop
test
xchg
sub
pop
testb
push
push
repnz
mov
xchg
lods
mov
mov
and
and
out
pop
mov
sbb
dec
pop
xor
xchg
adc
pop
rolb
fidivl
jno
xor
xor
xchg
fcomps
inc
push
fisubrs
xchg
outsb
pop
dec
ljmp
mov
in
mov
jle
ret
iret
xor
out
sbb
xchg
mov
or
mov
sub
hlt
test
ja
sub
push
add
add
lea
jge
adc
repnz
jp
add
xor
cmp
dec
or
sbb
cmp
sbb
dec
push
push
mov
test
rolb
add
orl
loop
fisubl
adc
mov
cmp
and
jecxz
sbb
mov
outsl
sbb
mov
xor
pop
lock
mov
popa
push
mov
jb
out
mov
fidivrl
rcr
pop
or
inc
mov
loope
xchg
cmpsl
test
mov
in
out
jno
pop
jbe
lock
adc
mov
push
inc
subb
mov
and
and
loope
cmp
sbb
out
int
sti
push
mov
lods
fwait
movsl
rcl
jnp
data16
and
or
cld
addl
outsb
mov
pop
jg
shlb
ja
xor
inc
mov
dec
adc
adc
push
mov
jnp
repz
adc
xor
jge
xor
arpl
aad
aas
fisttpl
push
xchg
inc
add
loope
mov
pop
dec
cltd
movsl
mov
jo
lahf
mov
inc
jo
dec
inc
stos
pop
adc
mov
lea
push
adc
clc
dec
lcall
das
xor
ja
mov
mov
and
idivl
jb
inc
stos
lea
push
push
mov
jnp
imul
jmp
fsubrl
mov
or
loopne
pop
inc
in
aad
lods
mov
ret
enter
jge
ljmp
xchg
and
jp
dec
scas
and
aad
test
inc
cli
shll
cwtl
xchg
enter
mov
push
out
mov
repnz
fldenv
jae
mov
sbb
bound
nop
jecxz
add
jb
mov
mov
sbb
test
add
add
fcmovbe
and
cmp
add
pop
xor
add
cmc
mov
rcl
fsubs
es
shl
mov
sbb
jle
sub
into
in
repz
scas
insl
jne
and
xor
mov
sub
test
pop
push
adc
push
pop
dec
int3
sub
sbb
nop
add
movsl
sub
sti
mov
and
movsb
mov
out
lea
call
jne
dec
xchg
pop
rclb
jl
pop
out
test
xchg
push
jg
xor
es
xchg
and
outsl
jns
jle
pushf
test
lods
jne
hlt
jg
add
pusha
cmpsb
sub
subb
aam
and
or
push
sbb
jmp
int
cmp
xor
sbb
mov
mov
inc
mov
jge
lods
xchg
lock
jb
clc
sbb
push
fisttps
daa
loop
inc
cs
rcr
arpl
pop
cmp
shlb
mov
sbb
xor
pop
jns
mov
imul
sub
insb
push
mov
jbe
pop
cld
negl
sub
lea
jecxz
pop
ret
mov
dec
pop
data16
imul
in
lea
sub
jle
jecxz
fsubl
add
cmpsb
xchg
xchg
jecxz
shrb
or
lods
mov
pop
sbb
scas
mov
push
lea
int
adc
jo
adc
mov
push
dec
into
pop
or
roll
sub
pop
pop
mov
jge
pop
xchg
jl
sbb
outsl
adcb
xor
add
das
dec
scas
fwait
call
in
jp
cmc
xor
mov
xchg
ret
int3
and
out
jo
pop
and
push
int3
aas
add
push
inc
adc
ret
xor
in
in
out
into
movsl
movsb
in
mov
shll
mov
cli
xchg
push
ret
mov
jg
jno
orb
sbb
add
lock
mov
xchg
scas
mov
sarb
push
idivl
jmp
sub
xor
push
mov
sbb
mov
imul
push
imul
sub
dec
sub
sub
fcmovbe
insb
push
mov
andl
sbb
in
mov
cvtps2pd
in
cli
loope
cmp
repz
scas
inc
sub
call
lcall
stc
repnz
mov
fstpl
shlb
sarb
js,pn
daa
loopne
mov
xor
jne
mov
push
dec
mov
cmpsl
inc
popa
jg
lods
or
pop
fcomp
jg
mov
add
movsl
outsb
je
stos
mov
jbe
mov
shll
scas
xchg
mov
xchg
or
mov
jne
xor
xchg
sub
jne
mov
mov
inc
adc
inc
lods
inc
repnz
push
lods
push
insl
jg
daa
stos
pandn
popf
mov
mov
sub
jb
js
je
arpl
pop
pop
cwtl
jbe
xor
imul
mov
push
pushf
mov
mov
inc
or
rol
out
into
das
js
into
daa
in
dec
arpl
mov
test
push
mov
cld
or
js
popf
fdivs
dec
add
mov
or
xor
cld
or
adc
out
lods
outsb
sbb
addb
lds
inc
enter
mov
lods
lret
leave
ljmp
mov
dec
lock
inc
pop
in
aaa
xchg
fisubl
jno
jnp
jae
cmp
pop
inc
rol
push
mov
insb
outsl
sbb
dec
dec
mov
out
imul
addr16
jle
fistps
inc
gs
inc
add
test
mov
ret
scas
int3
icebp
dec
jns
in
jmp
jecxz
pushf
fnstsw
add
sub
dec
cmp
xchg
das
pusha
mov
popf
aaa
add
cltd
imul
jnp
cmp
adc
cmc
scas
movsl
sarb
push
movl
je
in
dec
dec
xchg
pop
jbe
sub
or
call
mov
dec
inc
imul
addl
movsb
push
orl
hlt
pop
jge
rol
outsl
aaa
fwait
sahf
xchg
jns
mov
dec
hlt
aas
jecxz
testl
aaa
pcmpgtb
push
call
inc
mov
icebp
fld
sub
push
cmc
out
dec
dec
xorl
out
insb
jmp
loopne
cmp
pop
out
push
push
aaa
mov
loope
fistpl
repnz
testb
or
or
mov
mov
push
xchg
jb
and
stos
fistpll
inc
mov
pushf
xchg
cmc
das
xor
inc
push
fistps
push
fxch
cmp
sbb
cld
mov
xchg
dec
cs
mov
fstps
icebp
loopne
sti
lds
adcb
push
inc
or
cmpsl
xchg
jmp
jo
shr
mov
xlat
xchg
es
xor
aam
xchg
inc
adc
pushf
inc
mov
movsl
neg
inc
imul
sbb
cwtl
adc
cwtl
jns
or
or
daa
lods
adc
xchg
outsb
hlt
stos
ja
std
dec
cmp
repnz
mov
int
cmp
fisttpl
mov
pop
js
je
xchg
pop
add
cmp
inc
xchg
pusha
xlat
test
ds
sbb
cli
enter
xor
jl
cmp
sarl
ja
jno
pop
aaa
fsubr
xor
xor
adcb
cmpsb
pop
lea
cmc
andb
mov
push
push
addb
sbb
cmp
cmp
mov
sub
jo
or
in
and
push
das
mov
sub
push
cwtl
outsl
into
pop
pop
test
shrl
and
cmc
jns
bnd
insb
inc
inc
jae
push
pop
or
fildl
in
mov
insb
add
xchg
mov
movsl
sub
jae
ja
ret
loope,pn
sbb
idivl
stos
mov
push
sub
mov
add
rclb
imul
outsl
cmp
dec
sti
clc
mulb
cmc
inc
xlat
sub
js
pop
rcl
xor
fnstenv
mov
jo,pn
negb
or
mov
negl
in
in
hlt
ficoml
push
or
cmp
imul
xlat
int
push
and
cmp
or
xor
add
iret
mov
cmp
cs
jl
bnd
popf
iret
jle
stc
addr16
outsl
outsl
cmp
pop
in
pop
data16
xchg
bound
sub
dec
les
andl
jbe
inc
sbb
sub
jns
test
iret
sub
mov
or
loop
jecxz
movb
or
fld
out
xor
sbb
test
or
int
into
mov
push
fwait
es
pop
sarb
pushl
out
lret
cli
jle
add
shlb
xchg
push
mov
inc
xchg
sti
sbb
and
sbbl
std
mov
add
test
jne
sub
adc
fisttps
lods
popa
into
push
adc
pop
out
pop
test
loopne
ljmp
incl
pop
je
inc
push
dec
inc
mov
and
mov
test
pop
fcoms
adc
pop
es
or
loope
jno
mulb
mov
into
jecxz
mov
lock
in
jg,pt
mov
or
cmpsb
jl
js
imulb
lret
push
leave
into
int
inc
inc
mov
lret
cmp
cmp
mov
out
and
inc
mov
imul
pushf
sarb
pop
fistpll
adc
pop
xchg
jmp
and
push
daa
testb
cmpb
arpl
pop
sti
xchg
pop
imul
imul
imull
mov
add
sub
xor
xor
jne
inc
jbe
pusha
orl
cmpsl
mov
orb
pop
cmp
adc
push
pushf
push
mov
fwait
stc
cs
int
outsb
jl
xchg
jmp
pusha
dec
mov
shlb
jmp
sbb
repz
or
fistps
mov
push
mov
ss
mov
nop
cmpsb
xchg
push
loope
pop
addr16
jno
adc
clc
out
xlat
mov
cmp
jmp
mov
xor
xchg
jnp
js
inc
mov
push
arpl
ret
test
lds
rcl
clc
lods
data16
inc
add
mov
adc
outsb
in
push
sub
push
hlt
xchg
stc
or
jae
jmp
ret
sub
enter
loop
adc
test
clc
adc
ss
int3
sbb
out
cltd
sub
in
cmp
mov
push
outsb
test
add
cmp
cltd
stos
mov
movsl
shll
push
lock
les
repz
and
xchg
in
mov
lods
add
or
cmc
push
scas
into
adc
fwait
in
push
jne
mov
mov
lods
cld
fistl
xorl
pop
pushf
notl
mov
notb
mov
or
outsl
sub
sbbl
jbe
xchg
sbb
inc
mov
lret
lock
mov
cmp
into
xchg
daa
cwtl
in
aam
pop
pop
test
js
mov
inc
inc
out
and
push
pop
and
cli
or
in
jmp
cmpsl
sub
repz
pop
cli
into
pop
mov
ja
xchg
and
dec
mov
stos
pop
jl
mov
gs
jne
adc
scas
push
mov
daa
and
shl
xor
jl
das
aam
xchg
cmp
sbb
pop
test
je
pop
loope
xchg
sbb
fs
cmp
fistpll
out
xchg
lret
sarb
call
xchg
xchg
jle
lods
scas
movsb
inc
mov
dec
add
adc
sbb
lods
ror
cmp
int
jne
nop
or
jecxz
xor
mov
pop
iret
jle
lea
dec
push
pop
scas
sub
mov
mov
std
arpl
fadds
cmpsb
icebp
nop
cmp
insl
xchg
rcl
xchg
shrb
stos
pop
mov
push
push
lock
xchg
cld
xor
fsubrs
sahf
sahf
cmp
lods
dec
mov
sahf
leave
push
mov
inc
out
add
mov
shll
or
sub
imul
in
or
imul
loopne
das
cmp
inc
sar
adc
sub
sub
xchg
add
xor
mov
inc
dec
xchg
test
jecxz
and
shlb
pop
daa
decb
mov
je
cwtl
push
nop
sahf
mov
aad
dec
frstor
sbb
icebp
inc
adc
test
popa
sub
push
add
lahf
mov
cmp
dec
roll
jns
aam
aad
push
shrb
sti
repz
iret
xor
ret
cltd
in
mov
cmpsl
iret
or
jnp
cltd
fildl
xchg
add
pop
mov
mov
adc
in
insb
leave
sub
or
sbb
test
ljmp
jg
nop
mov
push
scas
jg
ds
push
pop
pop
push
stc
sbb
stc
jns
dec
insl
subl
push
cmp
ljmp
shrl
ljmp
popf
outsl
sbb
sub
mov
pop
adc
in
jae
mov
lret
xor
out
xor
mov
add
ss
add
jp
add
jne
pop
mov
das
cmp
jg
mov
mov
mov
das
sub
lds
mov
inc
mov
xchg
int
rolb
fstpl
jbe
cmp
add
aad
add
test
lods
sub
pop
imul
jo
sahf
cwtl
movsl
rcr
insb
and
pop
or
repz
and
jl
int3
int
mov
out
push
push
fwait
pop
cltd
fidivl
jno
ss
add
dec
popa
fsubrl
mov
fimull
cs
jae
out
jecxz
aaa
inc
lea
push
lods
xchg
jge
jge
mov
jle
sbb
sbb
rclb
test
push
loope
adc
fbstp
sahf
xchg
inc
pminub
int3
dec
mov
nop
and
iret
lret
push
and
mov
outsl
dec
and
gs
pause
dec
or
fadds
in
xchg
dec
jecxz
andb
sahf
inc
dec
shr
cmpsl
cmp
jns
mov
sbb
mov
inc
sbb
enter
xchg
mov
dec
mov
lcall
xchg
xor
ds
or
xchg
pop
lret
bnd
int
mov
mov
adc
add
jle,pn
ljmp
xor
inc
push
fnstcw
jnp
lock
icebp
push
js
insb
stos
test
test
cmpsb
mov
inc
lcall
add
into
sbb
sbb
test
inc
sub
fcoml
jae
jg
xor
and
movsb
inc
outsl
repnz
pop
lock
cmp
push
inc
xchg
jbe
aaa
aam
aad
pop
mov
xor
pop
xchg
das
pop
out
mov
xchg
out
dec
xor
xor
sbb
jecxz
jae
scas
pop
adc
or
fadds
int3
sub
cmc
movsl
fdivrl
dec
dec
repz
mov
xlat
in
and
pop
xor
dec
icebp
xchg
and
jne
fidivl
repnz
adc
dec
mov
pop
jecxz
xchg
cmpsl
or
mov
das
lret
push
add
jle
stos
mov
insb
fwait
mov
into
int3
push
push
test
push
xchg
jbe
cmp
inc
and
faddl
icebp
addr16
lcall
push
int3
xchg
jo
push
enter
or
mov
nop
fadds
mov
add
mov
xchg
dec
cmp
adc
lods
xor
aam
into
cmp
sbb
std
stos
mov
hlt
sbb
mov
pop
fs
fwait
outsl
xchg
adc
in
roll
cmp
xchg
xor
pop
push
xchg
pop
pushf
or
rclb
ds
xchg
mov
push
cmp
andb
jmp
fs
sub
das
pop
leave
sbb
xor
xor
icebp
in
lods
call
repnz
and
jnp
mov
cmpsl
push
jmp
inc
pop
dec
insb
inc
movsb
sub
scas
xlat
sbb
fsubr
push
or
xlat
inc
sub
mov
jp
je
xchg
rcrl
push
mov
or
mov
dec
icebp
jle
sbb
mov
inc
pushf
enter
push
xor
fstps
cmp
jae
pop
mov
xchg
fmull
inc
aas
adc
std
sbb
and
inc
mov
rcll
subb
push
mov
adc
sarl
push
pop
cmp
lahf
sbb
pop
outsb
lock
jns
push
rcrb
sub
pop
cltd
sub
push
loopne
or
xlat
daa
add
fcomi
scas
xchg
inc
or
or
push
rcrl
pusha
mov
jmp
sti
test
lock
dec
jl
cmp
pop
cs
add
and
xchg
add
mov
popa
rorb
idivb
nop
cmc
and
push
stc
inc
cltd
jns
jge
xor
jl
mov
loop
stos
aas
cmpsl
mov
jo
es
adc
fisubrs
or
imul
das
and
inc
pop
jle
mov
xor
dec
or
das
lahf
icebp
call
shlb
add
daa
jnp
call
inc
loop
cmp
sbb
int
sbb
dec
mov
scas
daa
fdivp
aad
fnstsw
adc
mov
rcll
imul
push
jnp
imul
add
aam
mov
adc
loope,pn
inc
popf
ret
sar
xor
add
pop
repnz
jno
xor
popf
call
fldt
sahf
or
xchg
stc
push
inc
inc
sub
insl
jbe
imul
aas
mov
rorb
adc
test
sub
mov
jp
testb
cmc
mov
or
pop
mov
ds
push
mov
and
lret
loop
in
test
pop
dec
in
push
mov
addb
popf
in
pop
mov
int3
pop
shld
cld
and
jbe
push
or
adc
jge
xchg
inc
dec
jge
push
and
cwtl
xorl
fcmovnu
xor
pop
dec
xchg
pop
push
gs
sbb
sub
sub
jg
push
cwtl
mov
outsb
enter
sbb
inc
stos
insl
add
lcall
mov
fbld
xchg
aam
push
sbb
enter
mov
ret
icebp
enter
dec
mov
dec
loope
es
or
mov
jb
mov
fldl
rcll
clc
adc
sti
and
xchg
or
push
in
out
loope
mov
cli
sub
xor
sub
shll
push
add
sub
mov
stos
lcall
add
inc
mov
fmul
mov
test
push
out
lret
mov
fidivrl
shlb
sub
ds
hlt
into
mov
push
inc
js
fwait
imul
mov
dec
pop
xchg
mov
dec
dec
cmp
out
adc
pusha
jle
mov
xlat
adc
sub
adc
pop
adc
or
mov
int
loope
sar
or
and
xor
repnz
outsl
in
addr16
cmpl
mov
enter
adcb
or
jecxz
mov
pop
lret
inc
popa
pop
ret
lahf
cmp
lcall
loopne
mov
xchg
push
xchg
adc
inc
outsb
and
lods
outsl
jge
mov
jo
mov
lret
js
daa
inc
jb
mov
std
mov
xchg
or
imulb
shrb
dec
push
push
xchg
mov
push
cs
xor
push
lret
rolb
inc
jge
mov
rorb
gs
aaa
cmp
and
adc
pop
xchg
push
test
sub
adc
pop
push
adc
push
stos
inc
push
ret
adc
aam
pop
movsl
sub
xor
mov
stc
outsl
push
pop
adcl
jle
js
mov
inc
stc
push
and
jmp
lcall
pop
pop
jge
or
insl
lret
push
iret
mul
sahf
xor
mov
stos
dec
jmp
decl
out
icebp
fstpl
ss
add
das
jge
push
mov
jbe
insl
ljmp
adc
lret
sub
dec
rorb
repz
adc
out
frstor
addr16
pop
cmp
xchg
sbb
repnz
negb
push
jnp
sbb
cmp
sbb
or
push
sbb
stos
xchg
clc
in
pop
xor
lret
xchg
fidivl
test
into
add
ret
fwait
imul
adc
xor
ret
jle
ss
scas
cmp
add
sti
outsl
push
es
addr16
sti
jo
lds
aam
pop
int3
pop
hlt
and
add
inc
or
lock
mov
and
inc
mov
sahf
dec
fmull
push
negl
and
xchg
mov
adc
xchg
pop
add
jno
clc
add
nop
pavgw
or
sbb
addr16
int
ret
lcall
lret
inc
lahf
adc
mov
ljmp
and
mov
mov
cmc
dec
mov
add
mov
gs
and
lods
jbe
pop
push
idivl
jb
int3
test
jns
mov
and
xchg
cmpsl
jmp
inc
xchg
add
imul
negl
add
ficoml
inc
inc
jg
or
testl
pop
cmc
dec
and
xchg
pusha
testl
sbb
lock
pop
push
dec
sub
in
loope
push
push
push
cli
push
lds
mov
scas
dec
lock
imul
in
das
adc
push
jbe
repz
sahf
fmulp
cwtl
orb
xor
fs
push
popf
je
add
mov
mov
push
outsl
xor
rolb
test
pop
push
adc
xor
pop
or
dec
je
cmp
cmp
js
lea
xchg
ljmp
mov
jb
lret
imul
or
lds
shll
jno
fxch
fbstp
popf
add
scas
sti
ljmp
xor
out
adc
mov
loop
inc
xor
adc
adc
insb
mov
shrb
and
and
stc
subl
adc
push
dec
cmp
stos
xchg
xor
int3
in
call
lcall
sti
lcall
jae
lds
sbb
lea
mov
dec
sub
lret
repnz
push
out
lret
sbb
cltd
xchg
cwtl
sub
push
js
mov
mov
nop
jo
mov
test
enter
shl
dec
push
push
mov
movsb
sbb
dec
push
mov
inc
xor
ret
jno
addr16
cmp
lds
inc
cmp
sub
scas
lods
mov
fcmovnu
xor
lret
notl
cmpsl
ds
pop
lods
mov
sahf
adc
sbb
scas
or
fcomip
jns
test
mov
cmp
pop
lret
adc
mov
cmpsb
fadds
aaa
xchg
popf
divl
scas
imul
ja
sahf
pushf
sahf
and
xchg
scas
inc
inc
cmp
mov
push
xchg
and
jno
gs
dec
push
mov
mov
push
inc
cltd
fisubrl
fisubs
divb
stos
stos
and
out
imul
insb
lahf
ljmp
or
outsb
incb
or
fisubs
mov
loope
sahf
sti
cmc
jb
or
in
clc
aaa
mov
pop
fwait
into
cmp
jns
xchg
out
jp
fsub
dec
xlat
ds
ljmp
jmp
icebp
mov
addr16
testl
adc
or
mov
rcrb
daa
stc
add
pop
cmp
inc
daa
dec
loopne
xchg
mov
dec
nop
xchg
iret
push
aam
pop
dec
push
sub
jbe
lock
loope
pop
and
popa
subb
fcom
negl
int3
or
div
into
sub
repz
loop
lods
jg
inc
ja
lret
mov
push
jp
inc
rorb
int3
popa
enter
push
inc
or
push
ret
sbb
inc
push
mov
or
sbb
push
xchg
mov
clc
inc
test
mov
test
jmp
das
jp
jp
imul
xchg
xor
mov
aad
inc
or
or
xor
in
add
outsl
fsubrs
xchg
push
adc
mov
dec
rcl
outsl
fstpl
and
rolb
xor
add
aad
pop
ljmp
fnstenv
jge
xchg
cs
mov
or
pusha
lods
out
and
andl
jb
test
adc
repnz
fcos
dec
xor
jbe
pop
pop
xchg
sub
pop
pop
mov
dec
ja
xlat
lods
sbb
jno
mov
fadds
pop
cmpsl
push
inc
andl
out
pop
sbb
daa
loopne
mov
and
cmp
mov
pop
inc
inc
jo
roll
inc
pop
dec
push
sbb
or
add
gs
jnp
sub
xchg
jecxz
outsl
mov
fwait
testl
cs
xor
cld
inc
je
daa
lea
jo
sarb
nop
jo
sti
sti
pop
adc
loop
jb
rcrb
jae
cltd
fcmove
ja
les
test
test
loopne
and
or
jno
lock
mov
jo
repnz
pusha
push
and
adc
flds
pop
mov
icebp
cmc
inc
mov
pop
test
cli
or
iret
or
and
insb
in
rol
les
hlt
fs
test
subl
xorps
mov
xchg
jns
pusha
xor
xor
faddl
fldl
sbb
mov
sub
and
aaa
imul
les
sub
enter
push
jl,pn
adc
mov
dec
sbb
mov
push
mov
jg
out
mov
pushf
push
ret
ljmp
subb
movsl
aam
mov
or
mov
fistps
cmp
sbb
nop
iretw
mov
jmp
pushf
and
push
cs
bound
or
xchg
testb
cs
adc
inc
mov
mov
stc
pusha
inc
in
dec
ret
out
jns
test
js
movsl
and
xchg
pop
test
test
mov
mov
negb
mov
push
cmp
dec
mov
push
icebp
test
dec
cltd
int
cmc
sbb
and
data16
repnz
cwtl
inc
pop
cltd
jae
loope
fcoml
adcb
shrb
jp
dec
jle
xchg
mov
jle
repnz
punpckhbw
xlat
daa
push
lcall
loope
cltd
sub
adc
pushf
testl
mov
mov
jmp
aaa
add
jno
mov
imul
lcall
ss
insl
cmp
or
loope
sub
push
cmp
cmpsb
adc
mov
call
bound
push
pop
cmpsb
outsl
adc
mov
mov
lock
sti
test
aaa
xor
push
sti
cli
adc
cli
push
sbb
lds
in
dec
push
out
push
fs
sub
adc
jae
push
loope
imul
sti
popf
lea
cmp
jb
std
fmuls
icebp
mov
jo
int3
lahf
xchg
loopne
lods
lcall
mov
push
mov
ja
imul
cltd
test
jle
sti
mov
lahf
lret
dec
inc
xchg
and
adc
mulb
aam
push
andl
lock
test
in
rol
out
mov
mov
mov
mov
xor
mov
xchg
cmc
dec
imul
mov
cld
imul
jge
pop
bswap
ljmp
push
imul
aas
cld
hlt
cs
cli
or
nop
ljmp
mov
dec
lcall
enter
scas
cmp
push
inc
sbb
xchg
xchg
aad
mov
scas
jp
leave
aam
stos
sbb
out
addr16
addl
in
testl
cmp
jne
shrb
testl
or
push
icebp
js
mov
gs
mov
mov
push
rcl
orb
jge
add
mov
roll
add
dec
cltd
sbb
push
xchg
aas
loop
out
xchg
cltd
imulb
int3
adc
out
data16
stc
add
rcrb
les
sbb
repz
push
adc
adc
aam
fdivrs
adc
dec
pop
jge
movsb
mov
mov
push
jne
stc
pusha
or
or
sbbl
dec
scas
jne
mov
jo
sub
outsb
jbe
js
xlat
sbb
je
pop
mov
sti
sub
lahf
pop
outsl
xor
pop
and
adc
sarl
xlat
pop
push
out
lods
add
iret
sbb
inc
cltd
mov
jo
push
mov
cli
mov
ds
popa
pop
iret
cli
inc
rcll
dec
and
dec
fisubrs
xchg
movsb
outsb
pusha
test
xchg
or
ds
in
lds
push
notl
mull
mov
gs
sub
push
dec
call
and
pop
jl
dec
fsubl
jmp
rol
or
ret
push
or
mov
loope
movsb
cmp
sbb
clc
lret
idiv
push
xor
and
sbb
mov
mov
mov
and
outsb
cltd
sub
fstps
sub
jg
sahf
cwtl
aas
je
and
inc
daa
mov
pop
cmp
fwait
or
mov
cmc
or
mov
aad
out
mov
ds
pushf
ljmp
adc
mov
aam
cmp
subl
mov
cmp
and
add
cmp
dec
jge
xor
mov
cmp
sbb
inc
dec
aam
mov
inc
lcall
sbb
cmp
loop
out
sahf
mov
pop
xchg
dec
sbb
dec
add
dec
sbb
jbe
into
arpl
in
push
test
xchg
xchg
stos
ja
dec
aad
ss
adc
and
insb
js
adc
out
pop
or
addb
mov
and
fs
or
xchg
in
pop
mov
scas
mov
mov
xchg
xor
mov
popf
adc
or
cmp
mov
push
call
jecxz
popa
cld
sbb
xor
mov
fwait
roll
cltd
leave
cmpsl
mov
test
leave
iret
imul
mov
sbb
repnz
add
mov
pop
bound
lahf
pop
iret
divps
out
sub
ret
inc
shrb
add
add
out
lods
pop
fldt
push
ljmp
jp
cmp
fdiv
std
in
aam
std
pop
imul
icebp
and
inc
jmp
cld
and
cltd
lds
xchg
xchg
les
mov
push
and
ror
js
out
repnz
incl
inc
or
stos
sbb
fsubr
aad
mov
aam
pop
fwait
or
dec
clc
in
call
ljmp
cmp
in
adc
mov
push
add
stos
jno
pop
fwait
push
cmp
jne
out
lods
fldln2
cmp
flds
and
andb
cs
push
hlt
push
loop
pop
stc
imul
lds
inc
ja
adc
js
mov
sub
mov
lret
movsl
adc
pop
mov
jae
fcoms
scas
out
pop
sahf
outsb
mov
sbb
mov
shlb
enter
or
xor
hlt
push
mov
mov
xor
imul
mov
push
popa
and
sbbb
adc
or
dec
inc
sti
inc
mov
cmp
outsb
aad
cltd
push
adcl
inc
xchg
sbb
jae
push
mov
in
dec
jo
mov
lods
in
sti
in
ss
adc
jmp
in
inc
jmp
fsubrl
imul
push
jo
adc
lea
xchg
xchg
int3
cmp
xor
mov
jp
movsl
pop
xchg
shrb
addr16
es
mov
gs
lea
mov
out
les
es
sti
mov
push
and
shl
push
sub
inc
and
or
lods
mov
pop
mov
pop
jns
lret
sub
push
in
dec
pop
pop
push
in
ss
dec
arpl
stos
mov
ja
or
clc
add
adcb
push
lea
xlat
testb
pop
ljmp
xadd
cmpsl
aad
movsb
fnstcw
jl
nop
lcall
das
sbb
pusha
cld
lret
sbb
arpl
cs
stos
in
inc
out
sahf
fsubrl
sbb
and
adc
jge
mov
popl
jmp
sub
push
pop
icebp
stc
inc
mov
dec
mov
les
out
loope
mov
sbb
sub
ds
ds
jg
test
mov
push
or
xchg
je
in
and
and
leave
fistpll
mov
int
jp
cld
enter
and
xchg
push
imul
repnz
pop
movsl
dec
test
stos
cld
inc
push
add
jge
xlat
je
scas
xchg
jmp
cmp
or
xor
sub
ret
inc
and
je
mov
mov
leave
jmp
jns
je
enter
arpl
pop
push
mov
mov
int3
push
test
lods
cli
in
jnp
lods
xor
mov
fcmovne
dec
jno
shr
les
fiadds
cmp
cs
mov
nop
shll
js
mov
mov
xchg
push
mov
nop
and
xor
lret
mov
fsubrl
cmpsl
inc
mov
imul
cmp
into
cmpsl
lret
xchg
mov
pusha
adc
ljmp
sti
stc
fcmovbe
sub
sbb
xchg
adc
and
loope,pt
sbb
sahf
clc
aaa
rcll
in
les
jne
test
push
or
bound
lock
daa
scas
mov
ja
mov
or
mov
jne
add
ret
mov
xchg
dec
popf
repz
bound
mov
xchg
outsb
xchg
push
ret
decl
jns
nop
les
mov
test
dec
xor
mov
cmp
sbb
cli
nop
int
popa
mov
add
sbb
std
dec
lahf
nop
inc
divl
dec
mov
xchg
mov
inc
push
inc
mov
out
cld
push
xchg
mov
pop
movsl
xor
je
sbb
jbe
sbbb
ss
inc
mov
cltd
test
push
cmpsl
cmp
push
xchg
push
mov
adc
int
js
inc
cmp
out
cmpsb
jb
insl
xchg
inc
or
cmp
lds
jns
testb
inc
hlt
adc
icebp
lahf
mov
sahf
lea
popf
adc
popa
fs
int
cwtl
push
mov
sub
push
push
sbb
jne
mov
decb
mov
jno
xchg
pusha
addr16
iret
fldcw
iret
or
pop
aad
repnz
lcall
cmp
push
das
pop
addl
xchg
push
test
push
xchg
xchg
test
lcall
cmc
adc
inc
push
and
xchg
xchg
fbstp
xchg
xchg
bound
push
and
cmp
test
jns
adc
xor
dec
scas
insb
in
scas
hlt
clc
sub
pushf
adc
sbb
in
dec
jno
or
jbe
and
outsb
mov
repz
and
cld
nop
cmp
and
dec
scas
mov
lahf
xchg
xor
sbb
pop
andb
int3
inc
lock
push
outsb
xchg
cmp
sbb
inc
mov
popf
cmp
or
mov
imul
adc
in
test
mul
adc
sahf
dec
scas
fnstcw
shll
or
cmp
pop
mov
add
js
leave
js
dec
mov
repz
pushl
push
xchg
mov
mov
dec
fs
sub
mov
dec
sbb
addb
scas
rolb
mov
popa
pop
jbe
push
lret
jo
jne
push
mov
stos
out
test
adc
aam
mov
or
and
cmp
cwtl
fisttps
lods
push
negl
lods
je
sub
and
gs
shrl
imul
test
or
mov
jae
sbb
jbe
mov
add
push
and
loop
lods
add
adc
pushf
clc
cmp
xor
cs
add
pop
xchg
and
push
repz
xchg
adc
nop
pop
xchg
mov
mov
shll
jnp
gs
daa
inc
sub
es
scas
adc
gs
mov
fs
sti
mov
sbb
jmp
lcall
sub
add
mov
inc
imul
lcall
lcall
mov
mov
push
jb
insl
imul
addb
cmpsl
lret
outsl
inc
cs
idiv
js
inc
cli
or
popf
addr16
mov
sub
mov
mov
negb
cld
out
adc
mov
sub
xchg
jge
stc
inc
inc
rclb
mov
push
pop
pop
push
inc
mov
jp
js
movsl
shlb
jl
lret
adc
movsl
push
ljmp
adc
pop
add
mov
xchg
and
jge
shlb
jecxz
push
cmc
sti
xor
cmp
addb
repnz
adc
jae
xor
pop
cltd
jge
leave
scas
nop
mov
or
mov
lds
or
movsb
movsl
jp
sbb
adcl
push
ret
roll
add
lods
or
cmc
add
sbb
sub
out
lcall
mov
cltd
jbe,pt
inc
jnp
and
ffree
adc
aad
arpl
fiaddl
and
lahf
call
dec
pop
mov
mov
mov
pop
or
jge
or
mov
pop
pop
mov
push
mov
sbb
add
add
mov
out
push
jmp
aas
rcrl
push
imul
loopne
out
lods
jb
ss
sbbl
ret
mov
stc
sbb
push
icebp
xchg
xchg
and
ljmp
es
push
mov
cmpsb
mov
sub
out
mov
add
inc
push
mov
gs
sub
mov
loopne
push
daa
jg
incb
ficoml
std
test
imul
adc
inc
ret
popa
jae
call
pusha
rorl
jp
addr16
add
jge
or
xor
jno
cmp
or
jle
lahf
mov
inc
lret
call
pushf
int3
in
pop
dec
std
or
lods
push
lret
imul
add
and
int3
filds
sahf
add
sbb
sub
arpl
loope
sbb
lahf
xchg
xor
leave
cmpsl
or
inc
lahf
call
sti
iret
std
cmp
aad
ffreep
add
add
jmp
add
cltd
xor
mov
rcll
jb
loopne
cmp
pop
movsb
adc
sbb
mov
ja
adc
arpl
push
cltd
sub
jle
nop
in
push
xchg
inc
pop
cltd
push
nop
and
jp
pop
lods
push
xchg
mov
adc
outsl
and
das
stc
in
addr16
mov
xor
mov
mov
aad
push
xor
cmpsl
add
mov
enter
repz
sbb
movl
dec
sbb
movsl
rcr
and
testl
into
stos
adc
incb
outsl
push
jno
jl
xchg
mov
out
dec
scas
arpl
testl
inc
xchg
ret
outsl
test
or
in
pop
push
sbb
nop
push
pop
push
fwait
sbb
add
and
cmp
xor
cltd
cmp
das
cmpsl
addr16
movsl
fnstsw
sahf
aad
add
mov
xchg
test
rcrb
add
ret
pop
pop
inc
cmp
daa
pop
dec
adc
mov
dec
push
push
mov
cmp
xchg
or
xor
fwait
into
fucompp
and
imul
mov
lods
mov
test
rorb
pop
push
jae
loop
sar
add
ss
stos
jecxz
xchg
sbb
aas
inc
xor
add
in
xor
jmp
sub
aas
mov
push
sti
sub
lahf
jno
sub
pop
mov
out
insl
xchg
jecxz
xchg
in
cmove
js
imul
aaa
pop
jne
push
mov
xor
fs
mov
sub
aas
cmp
cmp
cmc
gs
pusha
mov
sbb
mov
repnz
stos
jle
fxam
fnsave
mov
push
push
rorl
xor
popa
xchg
mov
imul
push
repnz
mov
xchg
cmp
push
or
js
adc
pop
lods
mov
insl
xchg
js
sub
out
sub
sub
push
jl
cld
test
jae
dec
sar
xchg
bound
pop
sbb
xchg
lods
ret
sbb
dec
aad
cmp
sbb
test
scas
loopne
adc
xor
or
dec
push
pusha
push
push
cmp
xchg
sbb
iret
mov
adc
nop
xchg
aad
xchg
xor
fsubrl
test
jne
jb
mov
dec
mov
add
fwait
and
popa
jmp
adc
add
mov
test
and
mov
pop
call
or
sub
push
or
add
ljmp
js
das
and
gs
int
xchg
ret
mov
sub
dec
inc
cmp
push
outsl
and
pop
lods
ja
sbb
sbb
push
adc
dec
inc
mov
sti
dec
cmc
mov
mov
subb
cmp
sarb
aam
pushl
orl
in
dec
incl
mov
filds
inc
out
xchg
push
lea
test
shlb
adc
xchg
push
cmp
rcr
ficoml
negl
xchg
nop
pop
cwtl
push
xchg
frstor
add
jns
in
test
popa
adc
in
aaa
mov
into
loope
and
mov
jg
ja
sub
xchg
loope
xor
das
out
scas
add
mov
xor
mov
aas
and
lds
lea
test
cmpsl
sahf
or
pop
inc
xor
outsb
add
cmc
imul
ret
test
imul
cmp
arpl
les
cmpsb
sub
cld
push
jl
pop
push
adc
mov
push
mov
mov
test
imul
fidivs
sbb
pop
icebp
in
loopne
jnp
inc
xchg
fwait
scas
loopne
xor
ret
sub
xor
jp
push
fldz
inc
in
ret
push
mov
scas
pop
xchg
imul
jns
arpl
push
in
add
jo
pop
xchg
push
jb
aam
das
xlat
pop
sbb
sarb
nop
pop
cmp
mov
fsts
push
xchg
sub
inc
js
push
in
fs
loopne
pop
push
pop
sbb
mov
add
fbstp
popa
adc
and
gs
outsb
dec
dec
dec
push
push
mov
outsb
mov
xchg
lods
orb
mov
repz
popa
aam
cmpl
lret
xlat
cli
add
repnz
pop
jge
push
jnp
leave
lods
cmp
pushf
jecxz
fwait
jbe
add
das
in
adc
int3
aaa
cltd
mull
sbb
mov
fwait
xor
xchg
sti
sub
stos
jge
xor
fistl
sub
adc
loope
xchg
jne
leave
mov
imul
js
push
icebp
sbb
mov
mov
rorl
dec
pop
test
inc
lock
test
in
pop
push
xchg
pop
xor
mov
dec
testb
sub
stos
mov
in
jo
xor
dec
mov
mov
push
mov
and
mov
aas
daa
cld
and
sbb
lods
loop
sahf
sahf
mov
movsl
sti
mov
movsb
es
shrl
push
jae
pop
fxch
mov
faddl
sub
cmp
sti
lods
add
inc
aaa
hlt
push
xchg
addr16
test
mov
pop
movsl
dec
clc
pushf
dec
ffree
test
fnstcw
xor
fadds
in
mov
adc
out
xchg
sti
or
xchg
inc
icebp
and
je
dec
xlat
ret
sbb
cmp
frndint
pop
into
outsl
les
mov
sub
push
xor
mov
cmp
xor
or
mov
cmpsb
insb
fwait
out
scas
cmc
xchg
out
inc
or
repnz
inc
aad
sub
pusha
adc
sub
cltd
ret
adc
dec
or
clc
dec
mov
gs
inc
adc
cmp
outsb
pop
insb
mov
mov
push
xor
add
push
inc
add
nop
in
js
aas
popa
adc
xor
push
fcomi
or
test
inc
push
fstpl
das
add
cld
mov
fstpl
mov
push
inc
repz
inc
inc
add
sbb
mov
call
jl
enter
cmp
fucomip
inc
test
xor
out
imul
sub
push
rclb
push
jo
jge
subb
pop
in
data16
xor
xchg
or
or
mov
out
les
pop
mov
addr16
jp
cld
out
loop
adc
cmc
dec
mov
jb
je
push
lock
movsb
xchg
cwtl
cmp
sets
and
pop
loopne
inc
ret
jl
xlat
popa
enter
imul
insl
inc
xchg
addl
xor
fldcw
mov
in
pop
rorl
push
or
jnp
mov
lods
mov
push
jge
mov
psrlw
mov
int3
cli
sbb
and
gs
push
push
or
ds
jge
pop
xchg
pop
sub
fs
aas
lret
xor
mov
cmp
aas
fsubs
and
negb
lcall
ja
mov
adc
loopne
lea
sti
and
clc
imul
loope
jp
inc
dec
orb
inc
add
or
jno
jp
pop
jae
jle
pop
jecxz
mov
lahf
pop
pop
pop
adcl
jecxz
loop
push
rcrl
xchg
sub
xchg
loop
dec
imul
mov
mov
mov
es
jne
mulb
mov
mov
repz
or
xchg
jno
stc
push
test
in
jno
or
or
loope
add
dec
dec
fwait
mov
hlt
jp
push
dec
adc
xor
mov
push
das
or
ret
test
mov
enter
repnz
xor
shll
sub
jmp
stos
loop
call
jno
sub
cld
xor
mov
mov
jmp
clc
fbld
jecxz
in
xchg
ficomps
fdivrs
ficompl
lock
push
in
aam
adc
xor
push
fiaddl
sub
cld
push
adc
leave
push
sbb
mov
inc
and
xchg
ljmp
add
inc
add
pushf
cmpsb
push
cltd
cld
call
add
xchg
cld
xchg
pop
scas
or
ret
cmpsl
sbb
add
jl
js
add
pop
cmp
dec
jb
lock
xchg
mov
mov
cmp
mov
movaps
cwtl
int
mov
mov
mov
sbb
mov
mov
push
test
imul
jl
inc
inc
out
or
push
and
jg
enter
cmpsb
outsl
xor
push
ret
pop
cmp
dec
sahf
push
faddp
cmp
pop
pop
or
std
out
repz
gs
sbb
cmp
fwait
lahf
enter
jae
xor
scas
movsb
jge
sub
sub
dec
lds
clc
or
inc
jl
mov
push
lock
xor
and
lahf
push
in
push
mov
xchg
test
dec
repnz
test
xchg
fstl
mov
aas
inc
das
push
xchg
icebp
and
and
push
iret
adc
xchg
aad
sub
das
inc
jle
dec
cmp
mov
rolb
inc
or
xchg
sub
mov
mov
leave
xchg
lahf
in
gs
cmp
dec
movsl
and
andl
adc
cmp
repz
cmp
cmpsl
fimuls
xchg
lods
mov
xor
sarb
cmpsl
dec
or
mov
js
pushf
ror
pop
cmp
jb
pop
cmp
fnstenv
xchg
and
lds
mov
icebp
stos
inc
shl
xlat
mov
jmp
push
push
movsb
stos
jb
bound
inc
mov
ret
jecxz
adc
in
dec
pop
inc
push
sbbb
cmpsb
jmp
and
mov
repnz
cld
sbb
add
insb
cmp
js
or
push
push
sub
fwait
ret
mov
loopne
mov
out
out
outsl
std
in
pop
mov
cld
mov
movsb
pop
pop
sbb
push
cld
push
out
xchg
mov
jns
je
jmp
mov
cltd
ret
sbb
pop
and
test
jg
movsb
dec
ljmp
arpl
mov
aas
test
pop
bound
mov
lea
in
and
in
sbb
in
insl
jl
into
push
movsl
mov
bound
into
shrb
push
jecxz
out
xchg
inc
cmp
pushf
dec
imul
and
ja
icebp
xchg
sub
shl
push
test
enter
cmp
outsl
dec
mov
mov
shrl
push
mov
or
pop
in
mov
stos
repz
pop
jge
mov
xchg
push
sbb
dec
movaps
and
outsl
pushf
jbe
cltd
add
lods
push
les
addr16
imul
inc
pop
or
jecxz
je,pn
iret
mov
icebp
lea
mov
lods
pop
fmull
mov
xchg
sbb
add
ds
sti
mov
xlat
inc
adc
ss
cmp
outsb
lret
nop
add
mov
mov
rorb
ficomps
push
jecxz
or
dec
lcall
inc
xchg
jmp
xlat
fcomi
or
mov
test
pop
sbb
rorb
punpckldq
stc
jae
in
popa
xor
int
mov
cmp
outsl
out
movsl
mov
xor
jnp
call
fdiv
cli
lea
cmp
ret
sub
movsl
shll
or
xor
jmp
sbb
insl
lods
sti
pop
pop
sub
repnz
lock
andb
stos
pop
insb
pushf
lret
lret
xor
dec
mov
js
sbb
pop
mov
ja
popa
xchg
mov
or
mov
cmp
xor
fidivs
dec
rcrl
push
pop
ret
push
inc
gs
ret
push
sub
or
xchg
std
sbb
jp
dec
fisubl
mov
jno
jnp
lods
jmp
sarb
sahf
shlb
dec
sub
xchg
mov
xchg
sub
les
dec
pop
sbb
mov
lds
loop
xchg
fisubrl
add
sub
xor
mov
movsl
pop
stos
pop
aam
mov
jmp
sbb
rcrl
mov
or
mov
cld
mov
mov
popf
or
std
mov
ret
jp
out
jge
inc
mov
dec
insb
lret
mov
jge
fidivrs
push
sbb
insl
lahf
push
push
sarb
iret
inc
jnp
rcr
dec
int3
push
push
push
stos
mov
jne
out
add
js
lods
fwait
dec
ljmp
pop
sbb
rorb
orl
push
xchg
adc
movsb
mov
sti
lahf
ja
pop
inc
mov
ficomps
sbbb
mov
fadds
push
cmp
stc
out
cmp
std
stos
sub
jae
popf
cmp
sbb
dec
xor
adc
bound
fstpt
pop
les
movsl
and
cmp
idivl
jno
or
aas
outsl
sbb
fs
xchg
adc
jno
in
pop
in
bound
orb
lds
pop
sahf
mov
xchg
sbb
dec
cld
add
adcb
mov
pop
pop
xchg
lea
push
push
cmp
xor
sahf
inc
sbb
loope
cltd
mov
cli
inc
sbb
mov
mov
push
mov
stos
jmp
stc
xchg
dec
push
sub
scas
push
dec
lods
sub
test
idiv
out
lahf
fisttps
popa
add
push
push
mov
adc
or
xor
sti
push
loop
or
outsl
push
scas
mov
call
fsts
addr16
mov
jg
ds
into
sub
dec
lahf
loop
inc
pushf
daa
jae
mov
sbb
test
inc
nop
pop
add
repz
cmp
xor
iret
inc
arpl
lret
jne
sbbb
leave
mov
inc
xor
adc
sbb
imul
pop
loopne
stos
jge
repnz
ret
mov
sbb
into
mov
out
call
out
add
loop
jae,pn
ljmp
ret
sub
movsb
stos
jb
scas
fistps
mov
sub
jns
outsl
mov
sbb
sub
mov
std
jmp
imul
in
cs
daa
push
xor
loopne
sbb
jg
inc
lods
movsl
and
xchg
sbb
and
lea
sbbb
fwait
jg
pushf
mov
push
outsl
jmp
mov
loop
shll
cmc
test
mulb
xlat
jecxz
das
adc
push
adc
push
lret
mov
int3
mov
dec
notl
xor
jg
cmpsl
cmp
mov
mov
out
adc
fisttps
subb
iret
pop
aam
sub
repnz
imul
add
cs
test
test
int
pusha
xchg
mov
jnp
xchg
jns
push
repz
jo
and
jmp
and
enter
outsb
dec
or
pop
scas
push
jle
cmp
xchg
lock
mov
and
jae
jne
pop
xchg
adc
jl
xchg
adc
xchg
add
sub
pop
sbbl
mov
mov
test
push
orl
mov
inc
das
fists
test
inc
jbe
and
cltd
mov
repz
dec
xlat
xor
sbb
andl
sub
cmpl
push
push
xchg
mov
or
xor
add
add
xlat
ret
jmp
mov
sbb
mov
mov
scas
jbe
and
loopne
dec
lcall
add
leave
mov
jmp
pcmpgtw
loop
stos
pop
fwait
shl
sbb
pop
repz
sbb
imul
arpl
inc
pop
insl
cmp
ds
xchg
bound
into
sub
mov
cli
or
test
rol
out
ficomps
int
aam
aad
scas
dec
jb
insb
dec
ja
sub
sti
pushl
jno
insb
shll
aaa
scas
lahf
ret
jne
ret
mov
mov
orl
fbstp
clc
jae
lods
mov
mov
xchg
lods
sti
xor
jge
in
inc
enter
xchg
mov
cltd
inc
repnz
das
inc
cltd
popl
popf
add
xchg
xor
pop
mov
pusha
sub
push
or
cmp
pop
push
inc
or
in
and
mov
xchg
xor
jle
mov
push
dec
dec
mov
shll
sbb
ljmp
sub
jb
xchg
xchg
hlt
lea
xchg
mov
or
dec
incb
cmp
mov
lcall
les
xor
repz
cli
loope
xor
out
and
dec
mov
jge
xchg
ljmp
nop
jo
push
sbb
push
mov
ss
mov
clc
push
cmp
mov
push
adc
sub
mov
cmp
pop
inc
mov
inc
sub
jg
fwait
sahf
sbb
mov
mov
mov
in
cwtl
dec
stos
repnz
adcb
scas
jno
loope
filds
adc
adc
mov
xor
aaa
inc
xchg
inc
sub
mov
cs
out
mov
push
rcrl
rcl
aad
dec
add
test
or
adc
stos
jmp
pop
movsl
stc
es
scas
sbb
sahf
cltd
test
ret
ds
or
imul
sub
mov
int3
or
push
outsl
push
idivb
cmc
mov
sbb
xchg
das
ss
movsb
lods
adc
xchg
dec
jmp
outsb
mov
xlat
xor
mov
pop
adc
imull
rol
pop
mov
cmp
out
roll
aam
and
jmp
or
jecxz
and
jne
pop
clc
xor
mov
test
and
dec
inc
js
mov
imul
adc
fistps
adc
mov
cmpsb
fists
sbb
maxps
lods
xchg
pop
jns
stos
jne
xchg
xor
aad
pop
pushl
imul
ds
xchg
dec
jl
adc
in
jbe
in
and
fdivl
lret
fidivs
jae
mov
cmp
mov
lods
js
loopne
add
ret
pop
sbb
loopne,pt
test
mov
stc
inc
imul
push
xor
jns
bound
les
mov
pushf
test
sti
pop
nop
stos
insl
inc
imul
xchg
iret
dec
popf
cmp
sbb
or
pop
loope
enter
or
popa
and
pop
pop
test
adc
inc
sarb
mov
dec
or
and
mov
push
fdivrl
call
push
mov
sbb
inc
or
and
jo
sub
mov
cld
jle
nop
mov
push
ljmp
aas
xchg
std
cli
in
lret
aad
sub
inc
fbld
xchg
sub
scas
std
sub
cs
sub
icebp
or
fstl
lock
xor
dec
jb
cmpsb
insl
push
sbb
aam
adc
mov
int3
cmp
xor
icebp
insb
je
pop
inc
in
outsl
push
sub
ss
aad
or
call
lds
cmp
pop
pop
out
inc
jmp
nop
insl
cld
popf
les
pop
imul
xchg
cmpl
call
cli
ss
mov
stos
dec
mov
push
lahf
mov
cmpsl
fwait
xlat
idiv
fistpl
sti
mov
aas
inc
cmpsl
mov
stc
test
scas
pusha
test
ljmp
jge
ljmp
mov
lret
xchg
mov
dec
push
jno
add
ljmp
imul
sbb
mov
inc
cld
xchg
lods
bound
hlt
testl
add
inc
cld
adc
fcomps
pop
cmp
jne
es
cmpsl
into
and
leave
pop
rorb
ficompl
jo
cmp
inc
push
dec
inc
or
jmp
sbb
mov
sub
inc
into
in
call
sbb
popa
mov
pop
or
jo
imul
or
in
rorl
dec
dec
dec
inc
outsl
mov
jmp
pop
xorl
and
outsb
scas
sbbb
imull
inc
and
mov
cli
sbb
mov
jbe
inc
jg
mov
jle
test
xchg
mov
sbb
ja
cmp
lret
in
inc
push
sbb
push
gs
mov
in
ja
test
sub
pslld
xlat
push
int
xchg
pop
out
insl
add
push
cmp
jmp
ret
push
repz
dec
cmc
inc
push
insb
sub
decb
xchg
and
pop
cmp
and
testb
insb
dec
sarb
or
mov
cmp
insb
cwtl
out
ret
outsb
sbb
dec
cmpsl
scas
dec
push
mov
add
push
arpl
lcall
repnz
or
push
imul
mov
lret
dec
and
cltd
or
lahf
shll
inc
mov
test
addl
fldt
mov
mov
add
insl
jmp
jg
fistl
jo
rcl
dec
adc
mov
hlt
leave
jns
cmp
sti
mov
stc
xchg
pop
mov
jle
or
ljmp
les
popa
lods
jmp
or
ljmp
lret
loopne
mov
enter
pop
jns
lcall
in
loop
xchg
xchg
pop
or
loope
adc
outsl
cmp
mov
dec
into
sbb
call
cltd
mov
mov
mov
or
sbb
cmp
dec
popf
ret
sbb
lods
xchg
lds
movsl
aad
push
dec
push
js
daa
andb
add
stc
adc
mov
cmp
rorl
adc
fwait
dec
jae
fisubrs
pop
xor
addr16
jns
push
fnstsw
addr16
int3
inc
push
divb
cmp
sbb
cmc
xchg
hlt
mov
pop
test
adc
pushf
mov
daa
sub
sahf
addl
mov
add
clc
inc
sbb
xchg
sub
mov
je
aaa
adc
add
cwtl
aad
add
push
xchg
or
mov
or
out
sub
mov
shlb
scas
cmpsb
jnp
test
jge
pop
cmp
addr16
iret
lret
or
inc
in
out
inc
je
dec
sbb
cmp
std
sub
cli
ja
adc
cld
fildl
sub
pop
aas
sub
xor
out
lds
mov
pop
or
idivl
dec
incb
push
imul
into
xor
adc
pop
mov
pop
mov
or
fisubl
ds
mov
dec
testb
jecxz
adcb
loopne
pushf
in
pop
and
or
jo
pop
cmpl
adc
inc
stos
cmp
and
lahf
and
sub
mov
mov
call
mov
or
rorb
mov
jmp
and
int
jp
jmp
cwtl
cmp
push
or
mov
add
pop
pop
dec
jg
dec
xchg
and
mov
xor
addr16
ficompl
mov
lods
outsl
stos
lds
sub
jne
dec
cmpsb
mov
testl
imul
test
stc
clc
rcl
jmp
sub
fisubrs
push
xchg
leave
mov
lds
push
lcall
lods
mov
jp
pop
outsl
push
pop
sahf
jae
int
push
cwtl
ret
std
jb
test
mov
stos
mov
xchg
dec
adc
ss
shr
push
and
dec
xchg
pusha
mov
sbb
clc
fldl2e
rcll
rclb
cwtl
inc
inc
push
mov
push
loop
scas
lcall
jmp
or
rclb
fxtract
sub
mov
push
cld
iret
das
mov
ret
jmp
mov
das
inc
mov
pop
es
jmp
pop
mov
xchg
lods
sbb
lea
sbb
push
out
mov
shll
jecxz
dec
cmp
cmpsb
dec
fbld
ret
sbb
pop
add
lret
mov
into
fcmovnbe
push
rcll
and
scas
mov
xchg
mov
push
jecxz
lret
push
orl
push
adc
inc
xchg
dec
mov
add
lods
adc
pusha
dec
cmp
mov
decb
add
xor
enter
test
lock
insb
int3
dec
push
js
repz
ret
add
lcall
lods
mov
aas
inc
loope
adcl
mov
cs
or
ja
push
push
adc
push
or
sub
call
cmpsl
mov
inc
sbb
and
mov
aaa
mov
add
lea
adc
mov
sub
and
ljmp
les
fmuls
cmpsl
in
les
jecxz
addr16
cmc
fidivs
push
push
fiaddl
mov
movsl
call
cmp
adc
jne
and
imul
outsl
cmp
mov
out
xor
pusha
inc
test
shll
setle
mov
xor
lds
shr
sbb
inc
adc
iret
cmp
int3
ficompl
mov
jle
aas
aaa
inc
cmpsb
gs
shll
xchg
mov
jnp
pusha
dec
add
jnp
push
mov
mov
mov
push
sub
sti
mov
push
adc
xor
push
pop
je
pushf
xchg
je
pushf
inc
xchg
jbe
inc
rorl
fistps
xorl
jp
add
pop
test
pop
or
dec
xchg
jb
daa
mov
xchg
andb
sub
jg
nop
mov
iret
jecxz
jo
cmp
call
rclb
into
ficompl
adc
in
mov
lret
cli
sbb
mov
adc
leave
adc
mov
in
mov
call
addb
cmpl
push
pop
aaa
add
and
popa
out
idivb
jne
je
shll
xor
mov
repz
sub
mov
cmp
call
data16
mov
xor
push
dec
shll
in
pusha
jb
repz
lods
out
rcl
cs
jb
push
fcoms
mov
adc
fneni(8087
mov
mov
xchg
adc
lods
loopne,pt
jle
jge
push
push
and
das
aam
mov
xorb
jns
stos
cmp
push
cmp
pop
dec
lcall
fstps
add
shrl
inc
mov
add
cli
push
pop
sub
xchg
jecxz
push
dec
pop
ja
sbb
insb
and
push
mov
fldenv
mov
mov
xchg
add
aad
cmp
lret
add
mov
loope
into
adc
lods
sbb
mov
and
mov
xchg
mov
cmp
out
sub
mov
sub
push
inc
sbb
pushf
int
and
cmp
lret
jno
jmp
jp
and
pop
gs
aaa
jo
mov
aad
ljmp
jnp
scas
sbb
xchg
xlat
cmp
scas
into
dec
or
push
adc
movsb
dec
pop
mov
push
push
loop
nop
sbb
test
jbe
ja
mov
scas
push
repz
into
std
in
adc
jnp
or
in
lods
and
cwtl
xlat
sbb
xlat
push
or
push
mov
shll
lret
jmp
adc
inc
cmpxchg
fs
jb
mov
or
mov
cmpsb
cltd
add
rcrl
push
dec
jmp
dec
and
aad
sub
mov
mov
dec
add
enter
push
scas
mov
into
jge
loop
inc
and
fstpl
inc
or
sub
sbb
or
das
pop
dec
adc
ljmp
and
or
movsl
test
imul
rorb
sahf
loop
adc
xchg
xchg
sbb
xchg
adc
incl
xor
pop
ret
leave
je
add
into
push
push
fcompl
jne
das
cmp
jmp
sbb
ja
jecxz
imul
adc
xchg
aaa
xor
xor
cld
lret
int
int3
insb
push
mov
push
movsb
inc
sub
add
push
mov
mov
movsb
sahf
push
and
shrl
mov
std
push
pop
or
and
es
mov
fsubrs
repz
int
lret
add
cltd
sbbb
dec
cmp
add
add
sbb
cmpl
push
fcomp
aaa
jg
pop
das
notb
inc
pushl
push
xor
or
fadds
fwait
repnz
lds
mov
pusha
enter
adc
in
mov
sbb
lods
in
sub
add
daa
call
loope
xor
fmuls
inc
and
pmulhw
or
and
imul
lcall
fsubr
or
push
xchg
inc
jl
mov
pushf
icebp
in
ljmp
or
push
inc
incb
xchg
lea
mov
and
icebp
insb
je
jge
or
inc
test
jmp
inc
iret
iret
pop
jne
cmpl
xchg
iret
and
cli
sub
cwtl
push
lret
aam
add
nop
xchg
sub
push
push
xor
cltd
inc
xor
cmp
xchg
inc
cmp
and
mov
pop
ljmp
push
jp
in
je
ljmp
xchg
cld
nop
dec
rcll
aas
scas
and
mov
adc
hlt
pop
out
sahf
dec
or
xchg
sarb
mov
xchg
and
mov
in
daa
sti
jge
push
xchg
lcall
pop
add
mov
fldenv
mov
pop
lock
sub
in
movsb
push
adcl
lcall
push
pop
add
ss
push
mov
lock
cmpsb
mov
movsl
mov
ljmp
roll
leave
push
ljmpw
push
xor
push
dec
and
adc
fwait
in
pop
nop
inc
push
dec
loop
popf
rorl
xchg
pop
jmp
daa
nop
jle
movsb
xchg
outsl
xchg
pop
fstpt
je
mov
pop
and
cli
mov
adc
mov
loope
out
imul
xchg
and
or
and
or
jle
dec
imul
push
mov
dec
cli
test
sub
das
movsb
imul
out
loopne
stc
les
std
inc
pusha
cmp
enter
popa
dec
fcmovbe
mov
jle
mov
jae
mov
cmpsb
pop
out
test
hlt
and
sarb
mov
nop
aaa
mov
push
cmp
xchg
push
pop
aas
pop
xor
or
int3
enter
cli
jle
div
notl
xor
jecxz
dec
mov
test
pop
push
hlt
in
fs
aad
dec
insl
rcrl
dec
mov
jbe
cs
sub
sub
sbbl
pop
roll
xchg
jbe
push
mov
pop
xchg
xor
stos
push
sub
mov
jbe
test
inc
sbb
mov
jnp,pn
or
push
lods
push
inc
mov
lock
out
xchg
xorl
cmpsb
add
sub
push
inc
xor
adc
mov
repnz
or
jl
mov
aam
mov
stos
xchg
cld
dec
pop
jbe
fidivl
nop
inc
sub
ds
mov
fldl2t
mov
test
pusha
pop
ds
pop
insl
lea
add
jp
cmp
dec
aad
js
sbb
adc
and
insb
mov
dec
xchg
call
jne
das
stos
add
push
daa
adc
faddp
lret
test
scas
rcll
xchg
cmp
cmp
movsl
lods
cmc
and
js
inc
fdivrl
jmp
rcrl
sub
cld
mov
push
inc
cmc
dec
stos
fdivp
add
push
jb
pop
xor
or
mov
push
mov
and
addr16
pop
sti
mov
xor
dec
mov
pop
and
push
bound
and
sbb
jmp
hlt
lds
pop
xorb
jge
inc
aaa
sarb
int
jecxz
lods
lret
and
imul
xor
push
or
pop
jg
jnp
shll
lods
jno
sbb
cltd
xor
cmp
leave
lods
stc
adc
arpl
repnz
movl
push
negb
jbe
pop
cld
dec
jecxz
loop
fdivl
dec
dec
xor
mov
jl
fmull
sbb
xchg
test
xchg
sbb
out
cld
mov
pop
cmpsb
pushf
sub
mov
fs
mov
add
fiadds
jmp
es
jmp
fucom
and
add
lea
sbb
or
int
dec
sar
in
stos
fdivrp
xchg
push
inc
mov
outsb
mov
sbb
push
jae
sub
scas
movsb
iret
scas
sti
jnp
mov
std
in
movsl
inc
push
or
pop
mov
loope
and
sub
lahf
pop
iret
jo
pop
sub
add
jge
mov
inc
sti
lret
xor
sbb
js
jl
adc
sub
mov
sub
pop
movsb
popf
inc
insb
adc
or
push
mov
sub
repz
rclb
je
mov
cmp
adc
mov
pop
jbe
in
push
daa
and
in
in
push
mov
jp
insb
shrl
xchg
pop
or
cmpsb
enter
mov
hlt
scas
adc
psubd
adc
lock
lods
dec
stos
mov
jge
ss
inc
cltd
icebp
jne
jmp
shll
mov
cmp
loope
inc
push
cmpsl
pop
jle
and
mov
lret
pop
shr
cwtl
pop
or
push
lcall
outsl
mov
jb
jp
xchg
outsb
jmp
mov
mov
jecxz
inc
enter
pop
mov
ret
sbb
insb
mov
and
lea
outsb
cltd
movsb
mov
fwait
cmpb
cltd
xchg
push
subl
push
je
test
xchg
add
sub
sbb
dec
cmc
pop
mov
into
lds
ds
adc
stos
xchg
rcrl
aas
sarl
sbb
mov
xlat
into
lods
pop
mov
and
jbe
mov
push
jge
movsb
xchg
enter
cmp
inc
movsb
loop
mov
cli
push
cmc
sbb
mov
mov
lock
inc
call
or
loop
add
pop
pop
dec
push
call
outsl
pusha
repnz
push
aas
cwtl
dec
mov
jnp
sub
movsl
push
cmp
and
dec
adc
pop
icebp
pop
sbb
mov
test
xor
popf
dec
iret
daa
mov
jmp
sti
loope
add
push
sub
outsl
lea
in
pop
pop
in
sbb
sub
pop
lock
test
jae
xor
arpl
push
loopne
cwtl
stos
or
sbb
pop
xor
push
fnstenv
pop
mov
mov
and
dec
add
dec
add
shr
xor
cmp
or
or
hlt
out
sbb
pop
subb
sbb
mov
or
sub
lea
jecxz
gs
and
mov
jl
cmp
stos
scas
fstpl
dec
sqrtps
lods
push
into
xlat
test
test
sub
adc
dec
inc
add
in
jmp
push
adc
dec
in
push
pop
push
xchg
popf
jno
xor
jo,pt
or
aaa
fsubr
nop
xchg
pop
out
enter
sub
idivl
dec
iret
stos
rep
enter
ss
cld
xchg
lods
in
psrad
movsb
jno
add
xchg
adc
adc
push
or
push
xor
xchg
push
sub
mov
jae
mov
jecxz
pavgb
jnp
sbb
lods
pop
cmp
lcall
sti
or
imul
jae
add
and
repnz
fnstcw
inc
jmp
insl
push
add
mov
pop
mov
adc
outsb
and
add
cld
add
dec
pop
mov
mov
xor
jge
push
popf
aaa
jle
mov
lea
inc
rolb
daa
push
cmp
das
mov
lods
test
in
test
dec
lret
jnp
int3
mov
dec
fwait
ss
inc
lcall
dec
outsl
jp
or
push
rcl
add
les
fisubl
push
in
aas
sbb
pop
gs
jl
arpl
in
xchg
insb
pop
pop
cmp
into
js
mov
mov
adc
push
and
ja
mov
sub
incl
out
jo
sbb
hlt
or
data16
and
xchg
sub
mov
in
pop
adc
cmp
sub
insb
shll
or
xor
in
popa
rclb
fs
fbld
pop
fwait
and
iret
cmpl
inc
mov
xchg
stc
cltd
sbb
fnsave
or
push
out
orb
pop
jo
lcall
lret
mov
inc
pop
and
jecxz
leave
pop
mov
aas
into
scas
mov
es
les
mov
cs
add
jns
push
xchg
loope
add
adc
xchg
sub
lods
adc
xor
call
sti
mov
fstps
aaa
les
int
enter
scas
mov
fcmovnbe
cmc
idivb
mov
out
mov
shr
insb
add
pop
dec
into
pop
cltd
cmpb
cmp
and
mov
cmp
mov
cmp
push
gs
mov
or
push
mov
incl
jnp
sbb
lea
cmpsl
add
dec
jbe
daa
movsb
repz
adc
jae
cmp
pop
sub
mov
icebp
stos
adc
mov
movsl
fs
inc
or
push
xor
sub
clc
roll
stc
mov
loop
inc
fcomi
enter
push
pop
add
cmp
imul
in
dec
cltd
jbe
out
jle
pop
jl
es
push
and
mov
add
test
pop
test
mov
or
lcall
mov
ret
pop
ret
ret
popa
int
ja
mov
sbb
mov
bound
adc
xor
insl
jb
push
jmp
xchg
popf
arpl
or
loopne
out
pop
and
mov
lcall
pop
std
aas
and
in
leave
xchg
loope
mov
xchg
pusha
jb
faddp
mov
or
out
xchg
rolb
mov
pop
push
test
mov
sub
pop
sbb
js
jg
jb
cmpsb
daa
lea
pop
cmp
insb
xchg
gs
in
mov
sub
xchg
jl
rcrb
pop
jns
cmp
iret
cmc
pop
mov
fldt
sti
sub
push
inc
icebp
shrl
data16
push
stos
xchg
lret
in
inc
push
aad
sarl
repnz
mov
int
hlt
push
imul
cli
in
test
lcall
inc
test
or
cld
mov
out
daa
sahf
je
jge
push
popa
scas
mov
repz
adc
pop
adc
xor
rclb
or
push
les
sub
pop
loopne
dec
and
ret
dec
adc
sub
das
das
pop
aaa
mov
jg
div
sti
mov
das
rclb
pop
sbb
xchg
arpl
inc
lods
cmpl
pop
call
inc
cli
jmp
push
mov
iret
pop
add
and
sbb
pop
jmp
xchg
cmp
xor
shl
rorb
sub
stc
mov
pop
arpl
js
fwait
cmp
inc
nop
in
pushf
loopne
sbb
arpl
xchg
jne
or
mov
jge
das
add
dec
adc
lahf
push
jns
gs
je
pop
mov
and
ss
dec
push
and
loop
ss
jle
add
push
pop
mov
mov
xor
cmc
push
lds
call
subb
sbb
call
rclb
fwait
push
dec
fldt
sbb
stos
pop
xlat
adc
lods
ret
dec
lret
scas
push
jl
scas
hlt
xor
aam
xor
enter
sub
xlat
inc
push
lret
lods
push
mov
loopne
movsb
fisubl
and
and
mov
nop
adc
xor
mov
aam
out
jge
mov
xor
jle
xor
shlb
jne
adc
shll
add
xchg
movsb
jb
mov
gs
mov
daa
fldt
mov
xchg
push
call
rolb
inc
adc
mov
mov
sub
aam
inc
push
inc
test
ss
sub
out
cmp
lahf
push
insl
jmp
je
jne
xchg
outsb
and
inc
mov
std
xor
inc
dec
adcl
mov
fsubr
add
jnp
mov
clc
out
mov
or
inc
jge
dec
nop
xchg
dec
pop
and
xor
pop
ss
add
pop
loop
iret
pop
mov
sbb
test
dec
std
dec
mov
data16
mov
pop
push
cs
cmc
std
out
rcrl
jo
es
aaa
movsl
sbb
jge
or
pop
jmp
jl
stc
in
xor
inc
xchg
xchg
loop
jl
dec
jne
mov
sbb
push
lods
test
aas
xchg
test
push
addr16
adc
inc
jb
icebp
push
or
jmp
nop
or
mov
xor
push
test
pop
sbb
jmp
movsl
call
dec
repz
in
int3
mov
sbb
push
sub
and
inc
xchg
dec
cmpsb
mov
mov
mov
inc
mov
lock
shrb
sub
or
fistl
into
pop
sbb
adc
cmp
xlat
xor
fs
jecxz
and
jle
cmp
jmp
dec
adc
push
xchg
popf
hlt
imul
sbb
and
mov
lahf
insb
push
pop
shrb
gs
enter
mov
push
stc
out
lret
jecxz
faddl
stos
xchg
aam
fidivrl
cmp
push
mov
fsubr
xchg
sbb
adc
jnp
jb
mov
ret
dec
mov
std
mov
mov
pop
mov
mov
in
nop
nop
insl
xchg
mov
dec
pusha
sbb
adc
out
leave
iret
lock
xchg
jno
je
add
pop
pushf
push
jge
lods
ja
cltd
dec
adc
add
sbb
push
std
jbe
stos
ret
jle
mov
dec
lods
xchg
out
movb
mov
call
sti
mov
sub
or
push
sbb
dec
push
popl
pop
pop
das
push
push
addr16
pop
ret
movsl
xchg
push
mov
push
jle
fmuls
or
adc
cmp
xlat
lds
loopne
jecxz
dec
sbb
jp
cmc
call
sbb
pop
pop
shl
push
xlat
clc
adc
dec
adc
movsb
insl
cltd
je
sbb
lods
adc
and
sub
push
jbe
ljmp
out
aad
inc
fidivrs
cltd
inc
pop
rolb
rep
xor
addr16
ret
scas
inc
xchg
dec
lds
push
and
inc
notl
aad
push
mov
jecxz
loopne
pop
xor
mull
mov
out
mov
sub
ss
sahf
shl
add
mov
sbb
lock
jmp
sbb
cmp
cmpsb
mov
lret
sbb
jae
cmc
mov
movsl
outsl
or
mov
cmp
dec
mov
xchg
incl
mov
adc
aad
push
and
pop
enter
pop
pmuludq
jl
add
mov
lret
icebp
pop
ror
inc
mov
inc
jno
push
add
repz
in
outsl
sub
cli
shll
nop
xchg
loopne
push
sub
mov
test
cmpb
jo
rcl
mov
sbb
enter
and
mov
out
dec
cmpsl
mov
cmp
mov
cmp
dec
mov
das
sti
jnp
dec
sbb
fldenv
and
pop
cli
das
cmc
lds
outsb
insb
lods
js
jo
cmp
xchg
add
in
popf
rorl
mov
inc
inc
addr16
mov
test
inc
push
xlat
push
push
or
mov
xor
data16
xor
inc
lods
lcall
loopne
out
cmp
xor
fcoms
movsl
scas
dec
das
cmp
popa
movsl
out
lret
push
cwtl
mov
inc
std
imul
js
mov
push
mov
push
out
mov
sti
inc
nop
test
repnz
inc
sbb
aad
jns
rorl
or
jb
insb
jno
mov
add
mov
js
sbb
in
in
jno
ret
adc
pop
or
inc
sub
cmp
adc
sub
lods
lcall
jae
das
push
pop
rcl
push
lret
rorl
lods
dec
mov
xchg
sub
xchg
out
xchg
dec
loopne
pop
push
sti
shll
xor
std
int3
ffreep
mov
fisubl
push
ds
push
xchg
xchg
adcb
xor
pop
and
or
loop
mov
in
in
pushf
popa
ljmp
sbbl
push
icebp
pop
movsl
stc
aam
adc
lock
inc
pushf
loope
adc
xchg
leave
push
je
ja
mov
push
pop
mov
add
xchg
test
or
notb
sub
inc
out
xchg
jmp
imul
push
inc
sbb
mov
rcll
iret
and
and
inc
mov
leave
in
mov
int3
daa
lret
or
sub
mov
jp
push
add
pop
movsl
daa
xor
push
jle
xchg
or
lock
mov
lods
add
xchg
jp
cmp
lock
add
cmp
dec
lcall
push
push
shrl
jno
jmp
dec
push
jbe
popf
mov
mov
lea
sbb
aam
inc
mov
mov
mov
sub
loop
inc
sub
mov
cld
ss
jge
loopne
sbb
stos
xchg
int
push
sbb
fcom
jp
das
or
cltd
enter
in
data16
fucomi
push
ss
jnp
adc
xlat
adc
aam
xchg
lods
out
cmp
lahf
mov
xorl
mov
ds
sub
push
fadds
loopne
xchg
es
inc
popa
adc
jo
inc
xor
ja
push
fisubrl
loop
bound
cwtl
daa
stos
mov
in
jecxz
mul
scas
jmp
rorl
out
test
and
je
repz
test
sbb
aas
paddsw
subb
fwait
cmc
inc
lcall
mov
movsb
xchg
mov
sbb
leave
imul
sub
jle
call
pop
pop
xchg
cmp
imul
dec
fsubl
cwtl
int3
xor
das
mov
outsl
pop
pop
xor
jge
std
or
fisttpl
pop
mov
cmp
jmp
mov
mov
or
add
out
push
ret
cmpsb
je
inc
add
mov
mov
mov
mov
fisubrl
cmpsl
mov
outsb
mov
adc
push
mov
fmulp
xchg
test
cmp
pop
ss
xchg
ljmp
mov
stos
out
jns
xchg
iret
xchg
emms
and
inc
or
mov
add
ret
sub
mov
push
loopw
mov
xor
jecxz
dec
add
push
jp
call
pop
and
mov
imul
pop
jo
dec
xor
push
adc
and
xchg
test
data16
dec
arpl
fdivr
pop
mov
mov
push
fistpll
and
jl
int
repz
mov
stc
mov
rcll
dec
test
inc
sub
cmp
pop
or
lods
lds
addr16
cmp
rol
in
ljmp
adc
repnz
lea
dec
adc
in
adc
out
leave
ret
pushf
shl
cmpsb
enter
fstps
data16
in
imul
jne
mov
sub
lock
stc
int3
jg
ret
push
lcall
mov
add
and
and
sub
test
lcall
push
in
cmpsl
jno
sti
cltd
push
jecxz
rclb
das
sbb
push
push
insl
xor
aad
and
push
xlat
iret
fmull
popf
dec
mov
sahf
popa
testl
or
mov
mov
lcall
mov
mov
jb
imul
pop
push
dec
cmpsb
pop
add
sti
aaa
ss
xor
rorb
xchg
inc
and
mov
or
fistpl
pop
push
and
dec
fisubrs
idivl
das
loopne
push
mov
loop
sub
pop
repnz
ja
in
or
int
xor
aad
push
dec
xor
mov
jmp
xor
cwtl
or
or
mov
mov
imul
and
lret
mov
xchg
aam
nop
sbb
inc
inc
jmp
stc
pop
cmp
loopne
jle
loop
xchg
xchg
jmp
out
mov
adc
pushf
subb
stc
lods
inc
push
das
mov
scas
fsubrl
mov
xor
jnp
inc
out
adc
rorb
addr16
push
mov
cltd
inc
dec
mov
and
fimull
dec
mov
out
xchg
pop
aaa
mov
jns
adc
jnp
push
aad
sbb
adc
push
sub
push
mov
and
xchg
scas
icebp
int3
and
sarl
cmpl
push
adc
cltd
cmp
stc
xchg
movsl
aam
test
cmpsl
mov
xor
shrb
mov
jae
sbb
push
mov
sahf
mov
xor
and
push
sti
jg
cs
mov
cmovne
and
test
push
jbe
dec
stc
ret
pop
out
jle
sub
mov
pop
push
rorl
bound
arpl
mov
jb
cmp
ljmp
push
int
cmpsb
cmp
loopne
xchg
rcl
pop
hlt
or
aaa
repz
lgs
sub
cltd
insb
aaa
push
xchg
pop
mov
xlat
lret
dec
sbb
daa
aaa
inc
pop
jge
pop
sub
enter
xlat
cmp
push
lods
pop
and
aaa
push
push
in
js
movsb
xchg
ja
orb
add
pushf
negl
in
mov
inc
inc
inc
jb
mov
sbb
inc
fdivrl
mov
mov
add
jmp
stos
mov
cmp
cwtl
stc
cwtl
jb
adc
movsb
daa
imul
or
or
pop
xchg
sahf
das
cs
mov
sti
pop
inc
or
or
scas
cs
xor
push
out
aaa
mov
xor
lods
pop
inc
int
lcall
std
scas
scas
cmp
jle
notb
test
lret
jg
popf
pop
outsl
adc
jle
jg
mov
insb
or
gs
mov
pop
push
xor
fistpll
out
ss
sub
mov
or
adc
jnp
stc
cmp
mov
repz
and
push
movsl
subl
shll
fcmovbe
fsubs
mov
addr16
xor
lcall
aam
lock
daa
pop
or
sahf
sub
xchg
cli
mov
repnz
shrl
test
repnz
pop
rolb
test
mov
scas
sbb
mov
mov
adc
cmp
jp
dec
subl
popf
adc
xchg
pop
cmpsl
outsl
dec
inc
dec
sahf
sarb
enter
popa
cltd
xor
adc
xor
roll
shr
aas
push
xchg
adc
out
jle
xchg
push
js
xchg
inc
jmp
movsb
mov
lcall
jge
insb
mov
xor
lods
add
add
in
sbb
xlat
add
cmp
fmuls
popa
cmpsl
or
stc
cmp
aad
pop
xor
stos
inc
aaa
sbb
scas
sahf
pop
xorps
icebp
and
xor
mov
xchg
jnp
adc
jmp
js
out
repnz
push
fistps
lods
adc
lahf
dec
shll
imulb
jae
lods
notb
push
jle
push
subl
mov
mov
dec
jno
mov
aad
iret
fwait
mov
mov
iret
sub
add
aam
pop
mov
sub
mov
insb
mov
lahf
pop
test
dec
call
adc
enter
xor
add
enter
popf
mov
in
test
mov
cmpsb
inc
xor
mov
ss
mov
jnp
jne
xlat
out
sti
xlat
movsb
pop
xchg
fstpl
mov
mov
js
xchg
pop
push
call
out
mov
lods
loopne
test
mov
mov
pop
ds
or
lea
out
and
out
lcall
shrl
inc
int3
imul
ja
mov
imul
leavew
cmp
xchg
cmp
cs
test
std
je
mov
pop
dec
sbb
icebp
cmp
mov
sbb
sbb
sbb
insl
and
fmull
fcomps
mov
lock
stos
mov
dec
lahf
push
xchg
jb
cwtl
dec
insl
sahf
xchg
or
inc
cmp
or
fimuls
leave
mov
notb
mov
je
jg
or
dec
pop
cmp
pop
js
xor
pop
sbb
mov
jg
jge
pop
test
loope
iret
adc
or
lcall
cltd
mov
jno
jle
cmp
scas
and
fadds
fsubs
add
stc
stos
test
cld
out
inc
in
in
test
cltd
ss
inc
push
mov
int3
movsl
pop
or
test
imul
cmp
cmc
sub
lea
ja
cmp
stos
scas
shlb
mov
jp
mov
scas
out
dec
std
lock
or
mov
mov
xchg
pop
arpl
mov
xor
sub
aad
pushf
xchg
orl
and
sub
gs
pop
push
aaa
jle
xor
sub
xor
jbe
in
test
push
cmp
push
lret
ja
and
pop
loopne
mov
out
push
cmp
jge
mov
sub
dec
pop
jl
inc
andl
sub
push
mov
cmc
dec
cltd
push
adc
xchg
cs
push
inc
sbb
lret
pop
testl
push
sub
out
xchg
sbb
cmp
xor
shl
mov
xor
adc
inc
sbb
push
inc
lret
int
push
iret
mov
in
mov
jmp
xor
mov
sub
lock
adc
ss
insb
pop
push
arpl
pop
mov
cmpsl
mov
cmc
pop
sbb
stos
je
je
dec
add
fcmovne
lea
rclw
mov
jle
push
or
outsb
bound
lahf
push
and
loope
ds
cmp
aaa
jb
or
out
aam
enter
mov
mov
jg
inc
jge
inc
or
cmp
es
sub
mov
push
pop
xchg
aad
iret
inc
mov
addl
or
in
iret
push
out
jp
push
jmp
and
pop
mov
sub
in
xchg
sub
out
sub
out
mov
out
cwtl
rcrb
adc
inc
xor
repnz
aad
and
or
pusha
push
jno
sbb
clc
jp
out
push
mov
sub
popf
in
xor
mov
insl
jbe
add
jnp
lcall
or
push
jmp
xor
jne
push
dec
inc
in
xor
ds
enter
cmp
jo
push
sub
add
lds
inc
in
fcmove
inc
aaa
pop
ljmp
add
pop
mov
adc
pop
outsl
iret
outsl
push
js
cmp
lret
mov
ja
and
test
sub
pushf
andl
gs
push
sbb
cmpsl
aam
sbb
shll
jmp
xor
movl
out
enter
push
fildll
test
fsubl
push
es
mov
fsubrl
push
push
sbb
div
jno
cltd
scas
testl
aas
jae
mov
ja
fidivrl
test
out
push
push
ljmp
stos
test
scas
dec
scas
sub
mov
movsb
pop
and
les
xchg
push
push
xor
xchg
or
cmp
sahf
mov
add
push
fsubrp
leave
mov
sub
jo
idiv
repz
mov
xlat
orl
pop
lcall
shll
add
fnstcw
cmpsl
xor
enter
sbb
lret
out
aad
mov
jle
xor
data16
mov
shlb
push
mov
shl
icebp
sub
testb
and
pop
mov
and
xor
mov
data16
sahf
ja
push
jae
xor
sub
andl
push
jnp
stos
repz
add
lahf
lods
sub
scas
push
inc
xchg
scas
cs
xchg
out
pop
xchg
adc
push
sbb
push
and
dec
add
cmp
leave
xor
andl
inc
jecxz
push
pop
outsb
xlat
xchg
fdivrs
daa
ficompl
mov
iret
mov
stos
push
lock
out
jge
shl
or
lods
and
filds
jae
push
insb
or
aaa
mov
push
add
add
sub
test
data16
sub
aaa
sti
push
push
xchg
adc
xor
mov
jmp
xor
rol
dec
in
mov
mov
push
in
mov
int
int
jle
push
xor
hlt
lock
jnp
test
xlat
loopne
int3
inc
rolb
xchg
lcall
mov
cmp
test
popa
stc
adc
or
insb
inc
rcr
insl
test
mov
andl
mov
negl
sub
aam
adc
pop
cmp
cs
lds
cld
pushf
mov
and
pushf
arpl
lahf
shrb
lret
xor
ljmp
outsb
xor
mov
xchg
add
movsl
or
mov
xchg
pop
arpl
insl
mov
mov
sub
sub
testl
movhps
pop
dec
sar
nop
jno
mov
dec
mov
test
imul
dec
into
andl
mov
sahf
jl
xchg
mov
push
mov
insl
push
sbb
nop
cmp
aad
not
cmp
and
and
dec
std
xchg
cmp
pop
cs
or
in
inc
mov
out
adc
mov
jbe
sub
jnp
test
ret
sbb
jge
xor
and
aaa
or
data16
inc
orb
fnstenv
lods
sub
test
mov
out
mov
loopne
xchg
xchg
fwait
xchg
xchg
xor
cmc
clc
pop
loop
cmp
xor
cmpsb
mov
loopne
outsb
add
sub
iret
and
fnstcw
clc
jnp
scas
pop
add
inc
add
sti
scas
adc
or
lret
cmpsb
xchg
adc
in
push
add
or
mov
mov
inc
or
lahf
cld
gs
push
and
mov
jge
fwait
in
mov
dec
xor
mov
scas
mov
mov
dec
ljmp
clc
push
dec
dec
sbb
mov
sbb
dec
or
aas
bound
in
add
dec
mov
jmp
xchg
imul
xchg
fisttpll
mov
or
mov
sbbl
lret
movsb
adcl
subl
mov
je
enter
mov
push
stos
xor
jno
and
mov
sub
call
add
xor
orb
jae
inc
and
movsb
sbb
xor
popa
mov
or
adcl
or
and
pushf
out
lea
xchg
jbe
sahf
mov
cmp
or
dec
popf
xchg
loopne
aas
push
cld
push
pop
cwtl
adc
fists
sub
mov
push
test
dec
popa
or
ret
inc
jle
xchg
lea
push
mov
cld
push
rorl
ficoms
testl
aaa
in
hlt
movl
mov
jo
sub
cmp
sbb
adc
xchg
pop
cmp
adc
inc
arpl
dec
je
sahf
and
dec
es
jp
cmp
xor
dec
or
inc
xchg
push
sbb
int
in
in
out
or
or
and
pop
push
jns
fs
cmp
lret
push
mov
out
aas
inc
in
push
xor
mov
jns
adc
xor
cs
xor
add
out
rcrb
jne
jbe
les
lock
or
shl
outsb
and
call
pop
cld
add
mov
int3
insl
push
pop
or
dec
jne
das
inc
lretw
cmpsb
cmp
jg
xchg
inc
pop
ja
jo
sub
enter
rorl
lods
add
jle
lcall
nop
fisttpl
mov
xor
iret
push
flds
pop
outsl
push
push
out
fs
and
mov
fstpt
xchg
pop
iret
adc
test
dec
movsl
repz
push
sarl
cmpsb
test
daa
or
repnz
sbb
movsl
dec
repz
pop
data16
cmpl
arpl
pop
jae
outsl
stos
andb
jp
push
roll
shr
aaa
add
pop
xchg
imul
mov
and
insl
cmpsb
xchg
xchg
rol
stc
rorl
lods
dec
add
lret
sub
push
ds
or
mov
hlt
xchg
dec
xor
and
pop
dec
dec
subb
jmp
outsl
lds
push
iret
push
fdivrl
inc
test
fimuls
aam
or
dec
fld
mov
push
xchg
xchg
scas
inc
sbb
mov
push
aaa
enter
push
mov
mov
shl
and
lea
add
outsb
icebp
jecxz
mov
rcl
xor
dec
mov
cmp
ljmp
cwtl
fistps
je
testb
push
loopne
int3
clc
aaa
pop
jo
dec
push
in
adc
jle
lahf
push
fstps
popf
or
and
je
outsb
leave
sub
sub
ja
jge
sbb
sub
sub
daa
jb
lock
cmc
mov
xchg
das
mov
jl
push
dec
jo
add
jns
movsb
ja
cmp
pusha
jg
outsb
sub
mov
in
xor
scas
insl
sbb
xchg
push
scas
rcl
dec
sahf
push
jle
pop
je
cmpsl
test
inc
outsb
push
je
mov
inc
cmp
mov
pop
inc
je
lds
fld
fwait
negl
les
shrl
xlat
sbb
mov
sti
and
push
inc
add
and
push
pop
ret
clc
jbe
test
jbe
sbb
rcrb
icebp
inc
outsb
iret
pushf
jo
jle
dec
je
mov
fldt
push
cmp
pop
lods
js
inc
jp
mov
leave
jno,pn
faddl
lods
jmp
loopne
js
mov
inc
fdivrs
jg
inc
mov
jnp
add
fcom
and
popf
cli
adc
sbb
imul
mov
xor
dec
or
sub
mov
or
fstpt
das
fdivp
and
movsl
icebp
out
add
push
and
dec
es
sbb
push
cmpsl
pop
mov
fldcw
jo
push
cmpsb
cld
xlat
stos
add
aaa
aas
leave
addr16
mov
cmp
xchg
push
mov
out
pop
hlt
mov
xchg
sub
add
popf
dec
rolb
shrl
popf
pushf
mov
sbb
outsb
jb
sbb
pop
les
scas
sbb
daa
decl
nop
inc
dec
popf
push
cwtl
push
push
insl
sub
push
les
shll
lods
or
jae
xlat
lret
movsb
fsubrl
les
mov
ret
in
pusha
cmpsl
addl
outsb
jmp
mov
adc
sub
jb
push
push
hlt
adc
jg
dec
mov
mov
ret
jmp
mov
aaa
nop
mov
fs
pop
outsl
add
push
cmp
sbb
xor
mov
add
adc
or
lods
lods
pop
test
pushf
cli
fists
ss
sbb
in
pop
imul
pushf
jle
cmp
push
out
sbb
aad
and
xchg
or
shr
cmp
jae
jb
nop
ja
dec
shrb
mov
xchg
push
adc
jns
mov
lods
rorl
add
xlat
adc
inc
iret
push
rorl
loope
sbb
xchg
push
push
or
out
or
je
pop
bound
mov
imul
pop
or
sarb
mov
fcmovnbe
leave
cmpsl
cmpsb
dec
sbbb
mov
mov
cmp
iret
sub
add
cmc
add
pusha
cmpsl
add
inc
les
inc
cmpb
pop
inc
adc
out
aaa
lods
sarb
mov
aad
call
dec
jb
fmull
inc
push
cmp
jno
rcrl
lcall
xchg
push
rorb
cmp
mov
ret
outsb
sbb
lock
scas
mov
rorb
rcrl
inc
sub
out
mov
mov
clc
and
xchg
adc
or
cmpsb
pusha
jmp
ja
push
fldt
or
cmc
enter
inc
sbb
ficomps
jb
push
aam
dec
pop
lds
in
out
mov
fsubrp
mov
les
fwait
sub
fcmove
add
stc
and
lods
insl
xor
pushf
mov
stos
adc
push
lock
out
mov
jbe
and
inc
pop
mov
mov
pop
std
push
cld
push
movsb
xor
xchg
fsubr
scas
lret
std
fisttpl
daa
out
out
xchg
loope
jbe
insl
icebp
inc
xchg
dec
cmc
xchg
ja
mov
jl
mov
mov
inc
jecxz
dec
mov
jno
xor
cmp
fistps
cmp
bound
mov
dec
mov
in
cmp
leave
adc
push
cmp
js
cs
adc
sbb
and
outsb
mov
xchg
pop
push
mov
pop
and
sub
sahf
addr16
adc
popf
loope
push
jo
sbb
mov
shll
jge
pop
xor
lods
das
inc
or
test
sbb
fs
mov
std
shll
repnz
daa
xor
fcomps
jp
dec
jno,pn
xor
mov
adc
sahf
sarl
or
inc
outsl
adc
cmp
pop
pop
in
sahf
in
popl
leave
fisubrl
pop
jne
ss
pushf
pop
mov
notb
setno
cmp
xchg
sbb
popa
popf
fmulp
mov
mov
in
xchg
xchg
dec
inc
adcw
ret
fadds
push
les
and
xchg
shll
jae
out
mov
mov
or
in
sahf
rorb
test
push
gs
or
adc
lret
mov
fldl
add
mov
nop
xor
mov
or
jnp
or
cmp
dec
xchg
pop
clc
dec
call
fwait
jle
lods
or
adc
push
xchg
ss
jbe
mov
aaa
adc
cmp
and
jbe
dec
movsb
cmpsb
pop
adc
repz
loop
shlb
xchg
movsl
fsubrs
and
xchg
out
faddp
jns
nop
in
dec
insb
rorb
int
jae
mov
adc
out
fdivr
jbe
lods
arpl
pop
sahf
aad
inc
mov
cmp
testl
jge
xor
add
leave
pop
cmpsl
mov
sti
push
pop
arpl
push
xchg
scas
inc
dec
mov
js
push
pop
pushf
les
and
push
pusha
or
dec
out
addr16
mov
ret
shlb
ret
lret
push
fstp
int
lock
push
inc
mov
xchg
sbb
lret
mov
in
jecxz
xchg
jg
pop
popa
je
decl
shrb
fistl
popa
add
gs
pop
arpl
out
fmull
fs
xchg
jo
xor
mov
sbb
dec
sahf
xchg
adc
shrb
add
insl
scas
iret
inc
jbe
gs
mov
pop
pop
daa
or
int
lea
ficompl
dec
test
or
test
sbb
into
adc
add
clc
and
cmpsb
jmp
outsl
jns
in
inc
jle
pushf
das
xor
add
dec
idivb
outsb
icebp
cmpsb
sub
dec
xchg
inc
test
lahf
ret
rcll
adc
and
xchg
iret
xchg
je
rorl
jge
mov
dec
add
movsl
mov
jnp
out
test
mov
sahf
mov
es
xor
lea
xorl
pop
lea
cmp
fdivrs
adc
xor
ja
dec
out
movsl
jae
mov
mov
aaa
repnz
dec
popa
xchg
mov
jg
insb
mov
divb
or
in
scas
fwait
dec
insl
or
jle
mov
push
jb
sbb
mov
iret
push
lods
sbb
xorl
sarb
std
xchg
ljmp
sub
movsl
jp
sbb
push
xor
cmpsl
jbe
lock
adc
push
jp
mov
mov
add
outsl
inc
and
push
adc
fcomp
ret
aaa
push
sti
mov
retw
sub
sbb
loope
mov
aaa
cmp
jno
fsubrs
je
jnp
shl
mov
mov
mov
les
call
or
repz
push
dec
cmp
lock
sub
lea
cmp
or
xor
mov
dec
cmpsb
inc
adc
jbe
bound
rcll
mov
sahf
xor
scas
xor
scas
andl
push
hlt
inc
mov
cmc
pop
scas
xchg
lds
int3
popa
movsl
xchg
pushf
cltd
push
clc
pop
push
cmc
loope
jle
inc
leave
jge
aad
inc
sbb
add
stc
mov
xchg
xor
mov
insb
cwtl
mov
sub
dec
mov
mov
out
xchg
scas
push
jmp
xchg
adc
repz
aad
pusha
ret
dec
sub
adc
sbb
sbb
push
dec
out
or
inc
int3
leave
rcl
cmp
push
js
fidivl
arpl
mov
mov
xor
cmp
stos
pushf
sub
insl
jo
add
shll
lahf
mov
sbb
das
inc
in
mov
sbbb
jle
stos
cli
aaa
mov
mov
fisubrs
mov
dec
push
jl
stos
aad
pop
je
push
mov
xor
mov
sub
ffreep
inc
outsb
sbb
or
hlt
xchg
jb
icebp
push
and
js
subps
pop
dec
inc
out
inc
ds
sbb
adc
xor
push
in
cltd
dec
adc
les
mov
push
pop
clc
adc
stos
xchg
xchg
adc
adc
push
cmp
xchg
and
mov
pop
outsl
dec
xor
push
fs
loope
ljmp
gs
ds
push
fs
insb
test
ja
add
fistpll
jle
cmpsl
push
in
cmpsb
jg
popf
scas
or
pop
dec
fisubrs
mov
fwait
mov
enter
out
mov
sub
into
sbb
into
mov
inc
lahf
jae
mov
lret
nopl
and
add
adc
andb
and
mov
pop
add
fistl
mov
lret
xchg
test
lcall
in
ret
sub
pop
sbb
fldt
aam
ljmp
push
pop
mov
mov
stos
stos
xor
mov
in
lahf
fwait
xchg
int
fidivs
adc
inc
insb
inc
adc
xor
or
mov
xor
push
cmc
rorb
out
xchg
push
lea
sahf
scas
rorb
xor
dec
into
pop
sub
cli
in
faddl
jle
mov
fisttpl
mov
ret
insb
jo
push
pop
mov
ja
enter
popa
out
pop
rcr
push
sub
in
cmp
xor
sbb
add
adc
lahf
aaa
jnp
or
xchg
and
cli
lcall
jne
test
pop
push
in
cmp
xor
jecxz
js
pop
outsb
fildl
lods
in
in
addb
mov
in
stos
jo
sahf
mov
jle
addb
adc
inc
loop
fs
mov
xor
pop
mov
cmp
xor
jge
sub
out
sahf
pop
xchg
outsb
and
lods
les
in
ret
sbb
aam
lods
insl
lds
push
and
sub
ror
in
sub
sub
gs
pop
mov
scas
aad
xchg
cmp
cmp
iret
mov
sub
fstl
add
movsl
daa
mov
ss
sbb
stos
jge
int
dec
stos
add
ffree
cmc
and
lock
inc
xchg
loop
iret
dec
mov
lods
mov
jae
inc
outsl
in
cmp
xlat
hlt
xchg
movsl
cmp
in
mov
negl
or
fistpl
mov
adc
ja
mov
scas
mov
inc
addl
xlat
add
rolb
leave
rol
iret
shll
mov
imul
mov
inc
stc
test
rcrl
xor
ss
push
inc
sbb
sub
xchg
rcr
aaa
push
xchg
sub
popf
fs
lahf
dec
pop
mov
loope
cld
in
and
adc
int
fistps
push
xchg
pop
loope
dec
and
cmp
jo
mov
or
cwtl
stos
mov
inc
pop
out
cmp
loopne
fnsave
subb
add
push
jl
stos
into
xor
int3
jmp
pop
adc
pop
push
hlt
je
cmp
xchg
call
fists
rcrb
ret
xor
inc
push
lret
cmp
jns
ja
xor
fsubr
loope
push
fcomps
mov
fcoms
cmp
mov
hlt
fs
xor
jnp
jae
inc
aaa
add
mov
mov
inc
in
lods
fadd
ljmp
lcall
dec
inc
pop
scas
cli
sti
cmp
sub
dec
pop
or
mov
cmp
pop
outsb
cmp
mov
lcall
sar
cld
es
sub
fldl
xchg
xchg
pop
nop
insb
test
arpl
out
in
gs
mov
xor
xor
sub
cmpsb
aaa
inc
mov
cmp
movq
push
mov
ja
xlat
mov
sub
adc
dec
push
mov
je
jo
cmp
xchg
fwait
out
mov
mov
orb
lea
outsb
filds
inc
inc
cmp
sbb
mov
movsb
mov
cmpsl
dec
fisttps
xor
jecxz
push
leave
cmpsl
aad
add
sbb
orl
das
sahf
ds
rcrb
fs
pushf
out
ret
sub
sub
jl
sti
adc
cmc
xor
sarl
mov
movsl
sub
push
lret
and
loope
jbe
and
sbb
cmpsb
sub
xlat
pop
cmp
outsb
mov
or
or
pop
xchg
cmpsb
lea
xor
pusha
idivl
xor
popf
dec
add
in
xor
mov
push
scas
sub
lahf
loope
cli
and
ficoms
outsb
popa
fisubrl
das
insl
roll
sar
mov
pop
loop
jp
push
jns
cld
mov
jle
add
aaa
xlat
pop
dec
sub
loopne
in
sbb
cmp
jmp
push
adc
mov
daa
mov
push
xchg
rolb
popf
push
mov
pop
add
frstor
mov
clc
mov
sub
or
outsb
pop
mov
push
movsb
or
stos
pushf
and
and
repnz
pop
loopne
insl
pop
adc
repz
int3
fwait
xchg
ret
ja
jp
dec
mov
jecxz
mov
jmp
mov
sbb
sub
pop
in
movsl
mov
outsb
pushf
cwtl
repnz
mov
jb
mov
pop
inc
ret
inc
dec
aaa
cmc
adc
sub
xchg
int3
inc
dec
xchg
into
jb
fidivs
pop
cmp
sbb
arpl
cli
leave
inc
inc
fwait
loopne
movsl
xor
xor
in
xchg
cli
jo
icebp
mov
xchg
push
mov
xchg
sub
xchg
or
adc
fldenv
fsubs
dec
pushl
repz
in
inc
jne
push
xchg
rorb
mov
pop
fs
mov
mov
mov
lret
push
fwait
pop
mov
dec
out
and
movsb
push
push
movsb
mov
mov
scas
xchg
sarb
loopne
fidivrl
push
lahf
xchg
inc
scas
add
in
or
mov
shl
jecxz
test
sub
sbb
push
dec
loop
sub
imull
cmpw
cmpsl
ret
imul
mov
arpl
sub
add
sahf
out
xchg
mov
adc
or
or
test
xchg
mov
jp
jge
cmp
or
imul
and
inc
in
jne
fadd
xchg
popa
pop
imul
adc
test
shrl
mov
mov
dec
mov
movsb
mov
ss
jb
popa
xchg
inc
aaa
jns
or
mov
int
insb
xor
out
movsb
ds
sbb
cwtl
xchg
ret
inc
testl
in
outsl
mov
add
mov
std
mov
mov
shll
clc
outsl
sub
inc
into
sub
orl
jge
test
push
or
getsec
cli
and
and
adc
pop
out
xchg
jle
jno
aam
scas
ficoms
das
stos
mov
testb
mov
adc
xchg
ds
push
sub
out
out
push
out
mov
adc
ret
ljmp
add
std
mov
pop
jl
cs
in
xor
jp
adc
dec
test
loopne
mov
sbb
out
xchg
clc
std
and
push
mov
aad
aaa
movsl
xchg
mov
in
sbb
mov
xor
dec
icebp
xchg
sbb
fsub
ss
sahf
cmp
int3
mov
jl
cs
pop
mov
insb
add
dec
adc
push
pop
movb
ljmp
shlb
insb
call
inc
jbe
sub
cmp
pop
fldt
pop
jne
cmp
pushf
adc
mov
jecxz
notl
mov
jne
inc
adc
sti
ja
int
stos
sbb
stc
out
jns
neg
sarb
cmp
sub
scas
notl
lods
ret
iret
cmpsl
out
movsl
pop
mov
push
jmp
stos
mov
es
sub
shll
jo
pop
andb
cmp
push
mov
fidivs
dec
test
lea
inc
je
outsl
imul
in
push
lret
lea
adc
movsb
stos
and
popa
jno
out
mov
outsl
add
push
scas
mov
sti
and
push
pop
daa
xor
pop
rcr
insb
cs
mov
mov
iret
clc
sbb
dec
or
addr16
jg
push
xchg
and
dec
lock
lods
sbb
repnz
roll
sub
ja
and
sub
cwtl
push
jp
jge
fimuls
add
pop
cmp
loop
repnz
sbb
push
iret
mov
push
and
aas
jns
cmp
imulb
mov
jne
mov
pop
cmp
push
jl
xchg
stos
add
pushf
inc
cmp
inc
sbb
xor
out
mov
scas
xchg
fwait
roll
mov
dec
cmp
test
movl
les
push
mov
lcallw
push
mov
shrb
inc
repnz
stos
sub
inc
clc
jecxz
lea
ja
mov
xchg
popa
notb
inc
or
mov
xchg
mov
js
mov
test
jns
aaa
or
int3
xor
and
inc
test
mov
cmp
aas
jg
cmpsb
inc
out
into
cmp
repnz
mov
lret
mov
ds
adc
xor
jo
cmp
std
xchg
push
adc
push
inc
aas
dec
sbb
pop
rcll
aam
xchg
pop
xchg
pop
add
xchg
push
fyl2x
push
cmp
outsl
enter
xchg
push
jmp
pop
xchg
int3
mov
dec
jmp
and
or
jns
hlt
test
adcb
inc
jbe
sub
test
mov
daa
les
mov
fsubrl
jl
call
rcll
cmpsl
adc
mov
xchg
sub
dec
std
sahf
xchg
and
leave
push
pop
inc
in
mov
mov
aam
pop
jl
cwtl
cmp
mov
lea
popf
call
call
sbb
jne
cld
adc
mov
into
pop
cwtl
sbb
pop
into
out
mov
push
clc
push
sahf
je
mov
jp
jl
sbb
dec
scas
jns
xchg
out
fsub
pop
jbe
sbb
adc
leave
fmull
es
mov
pop
add
ja
pop
fwait
gs
fs
or
into
mov
mov
push
lods
xchg
popa
pop
lds
pop
sahf
or
mov
ss
inc
pop
divb
mov
lds
imul
outsl
in
xchg
mov
mov
testl
outsl
jae
inc
jp
or
add
dec
sub
adc
jecxz
enter
mov
push
pop
movsl
popa
pop
and
inc
mov
xchg
stos
or
cmp
je
bound
inc
mov
inc
mov
fbstp
or
std
jb
push
sti
rcrl
in
pop
lret
adc
loop
data16
adcb
shrb
sub
outsb
mov
mov
sub
popa
stc
jne
inc
loopne
call
out
rolb
add
push
addl
sar
mov
and
dec
mov
xor
clc
cmp
mov
aam
jge
outsl
jg
mov
enter
dec
cmp
data16
dec
scas
xchg
add
insl
dec
xchg
sti
pop
push
iret
movsb
hlt
loopne
jecxz
or
fs
or
push
sbb
pop
or
cld
sub
pop
adc
mov
pop
pop
pop
push
and
aad
or
dec
cmpsb
fxch
rcrb
in
inc
jg
fwait
lret
hlt
cmc
lds
jle
fwait
xor
or
pop
data16
cmpsl
jno
int3
test
iret
xchg
rorb
jno
pop
mov
leave
and
test
or
mov
into
enter
mov
cmc
or
lock
and
jbe
dec
mov
aaa
xchg
pop
ja
jmp
xor
testl
pop
orl
inc
repz
cmpsb
xchg
mov
and
scas
pop
test
xor
es
jno
mov
cmp
popf
xchg
jnp
fcomps
push
arpl
cmpsb
jbe
insb
jmp
mov
out
sbb
pop
fdivr
repz
mov
jp
lret
imul
es
cmp
cs
mov
push
push
sub
jae
jle
inc
scas
pop
add
push
cmp
sahf
rol
or
fisubl
jo
mov
jle
push
fnstenv
rcr
rorl
inc
mov
in
hlt
out
ret
mov
and
sub
shrb
or
icebp
ret
ja
in
fmul
imul
pop
and
xchg
lea
rcll
loope
jae
stc
scas
dec
out
push
icebp
or
lea
cmp
out
lds
stc
sti
aas
mov
rcrb
mov
rcrb
pop
cs
xchg
subb
dec
lret
loopne
xchg
add
xor
mov
and
mov
mov
leave
sub
fimull
push
fwait
lret
repnz
pushf
jl
adc
test
push
cmp
dec
mov
adc
rorl
stc
call
in
dec
push
mov
pop
stos
lock
mov
mov
pusha
adc
movsl
cwtl
mov
ds
push
aaa
mov
xlat
rclb
cs
jae
lahf
dec
in
push
aas
sbb
cwtl
loop
int
mov
or
in
sub
inc
aaa
push
mov
cwtl
jns
push
or
cmp
jge
jle
fcompl
or
lahf
and
or
xor
subl
mov
inc
sbb
pop
lods
rclb
int
in
jmp
sub
xchg
fsts
and
push
inc
cmp
mov
jne
and
push
xchg
pop
mov
clc
push
or
shll
inc
stc
xchg
xor
pop
movsl
lret
lea
push
test
and
add
fildl
jae
cmp
dec
js
push
sahf
sub
cwtl
xchg
add
jl
push
cmp
pop
imul
jbe
or
pop
or
cmp
jmp
inc
lds
or
mov
xor
nop
push
xor
and
loop
outsb
testb
sbb
fstpl
cltd
xchg
adc
xchg
add
inc
rcr
test
hlt
out
pop
adc
fsts
subl
mov
ss
jge
out
jecxz
leave
lea
lret
xlat
int
pop
mov
and
mov
loope
xchg
call
add
adc
xor
sub
in
sbb
pop
jnp
jecxz
jb
or
push
or
dec
rorb
mov
mov
adc
cmp
cmp
mov
mov
cmpb
and
into
popa
mov
lahf
leave
out
hlt
xor
into
mov
popf
inc
ds
roll
nop
shll
mov
cmp
das
xor
sub
ret
pop
fisubrl
outsb
insl
clc
popa
jle
fwait
or
cmp
cmpsl
popf
adc
outsb
adc
adc
add
pop
and
iret
cld
sbb
je
pusha
jb
cmp
in
repnz
hlt
jo
lods
fldl
push
fists
mov
aaa
insl
insl
push
clc
push
xchg
sbb
out
mov
push
das
in
sarb
aam
push
cmp
cmc
xlat
test
lods
sub
arpl
mov
inc
inc
inc
jmp
push
pop
inc
mov
ja
fidivs
cmp
nop
lahf
mov
xchg
rcr
cs
mov
inc
repz
mov
adc
or
sub
mov
fwait
sub
sub
stos
aam
mov
jge
pop
cmp
fnsave
sub
idiv
aad
test
jne
mulb
sti
push
dec
pop
pop
mov
popl
icebp
leave
push
lret
hlt
push
notl
sub
inc
stos
mov
iret
mulb
jne
pop
int3
push
leave
lods
mov
nop
movsl
sub
nop
adc
mov
jo
movsl
aam
in
adc
int3
dec
movsb
pusha
lcall
sub
mov
cs
mov
xor
shlb
inc
pop
cmp
push
jecxz
mov
mov
adc
pop
aas
mov
jbe
pop
adc
nop
and
loop
mov
add
data16
lcall
aad
lods
fs
dec
rcrl
mov
out
push
out
jmp
pop
mov
insb
repz
cmc
popa
insb
jnp
leave
addr16
das
mov
not
jge
test
enter
add
rol
mov
push
push
jg
lods
jne
jb
aam
mov
out
stc
cmc
test
imul
pop
cmc
add
xlat
push
insb
adc
jns
adc
sbbl
ds
inc
repnz
mov
jnp
ds
add
xorl
pop
fisubrl
adc
es
sbb
xor
stc
pop
fstpt
mov
xor
fmull
jmp
cmp
mov
enter
dec
jmp
and
fbstp
jne
cmp
sub
adc
mov
add
aad
push
push
daa
pop
arpl
pop
inc
push
inc
mov
sti
cmp
mov
mov
pop
lcall
pop
mov
lods
or
lcall
cli
sbb
rorl
iret
bound
aaa
push
lds
cltd
aaa
in
stc
cmp
nop
mov
fists
out
and
mov
dec
inc
push
test
jno
push
outsl
gs
testl
lret
packuswb
cmp
lds
test
sub
popf
dec
mov
les
fisttpll
loopne
xor
mov
aaa
je
add
pop
xor
into
daa
insl
ret
cmp
push
mov
ljmp
sub
call
pop
sahf
icebp
xchg
mov
repnz
push
mov
mov
lcall
sbb
dec
into
cld
xchg
mov
xchg
push
repnz
cmp
xor
mov
insb
mov
cmp
mov
or
add
pop
inc
in
jmp
inc
fs
repz
dec
mov
mov
or
mov
cmp
test
sbbl
cmpl
dec
enter
inc
pop
sub
dec
mov
dec
xor
push
xlat
int3
das
in
mov
or
hlt
jnp
imull
push
sbb
or
xlat
lcall
loopne
sbb
or
cs
cld
add
lea
cltd
lret
adc
push
call
test
push
out
in
mov
outsl
xchg
scas
or
pop
outsl
or
inc
push
mov
adc
iret
push
push
pop
popa
cmp
test
xor
sbb
push
pop
iret
cs
xchg
add
nop
adc
cltd
sub
aad
ljmp
into
mov
dec
inc
xor
cmpsb
xorl
sar
sbb
or
aam
push
jnp
fisubl
es
sbbl
xor
je
pop
pusha
push
push
pushf
push
push
clc
dec
cmpsl
inc
mov
test
push
cmpsl
test
inc
in
mov
mov
mov
mov
mov
and
test
mul
out
stc
or
push
adc
lahf
sahf
stc
cmp
mov
mov
ficomps
cltd
call
lods
pusha
xor
inc
outsb
rcrb
imul
mov
mov
pusha
push
lock
mov
pop
cmovno
xchg
shl
xor
ret
mov
mov
out
cmpsb
inc
leave
ljmp
jb
jnp
fisttps
or
xor
shlb
mov
js
adc
lahf
add
test
push
dec
or
inc
lret
inc
mov
adc
cmp
pop
test
fnstcw
je
lea
lahf
cld
icebp
cmp
sub
or
xchg
cltd
mov
or
jne
dec
gs
stos
loope
outsb
outsb
stos
outsl
cmc
in
sbb
daa
add
ret
stos
fbstp
std
mov
mov
jecxz
dec
fstp
dec
jb
cwtl
and
xchg
push
mov
push
call
push
aas
insl
call
xchg
data16
push
sbb
mov
subb
les
pop
sti
xor
ror
pusha
xchg
sub
addr16
pop
fcoms
loope
push
sbbb
mov
outsl
aas
xchg
cmp
push
cltd
fwait
pop
mov
int3
cmp
pop
ds
outsl
add
jnp
xlat
pushf
test
lret
push
outsl
lea
add
dec
mov
dec
lret
inc
mov
sbb
pop
sub
pop
mov
sti
sti
xchg
icebp
sbb
fwait
xchg
jo
ror
scas
xchg
sub
mov
stos
inc
mov
inc
or
test
mov
adc
addr16
shlb
inc
or
stos
clc
bound
pop
mov
aam
popf
mov
les
in
out
dec
add
stc
popf
pop
mov
jmp
test
mov
xchg
xlat
push
mov
adc
lods
adc
stos
mov
jecxz
fwait
pop
pop
mov
movsb
jle
std
pop
xchg
sbb
insl
adc
cmp
int3
scas
imul
sub
sub
push
pxor
ds
movsb
jecxz
mov
push
xor
push
adc
add
add
push
jmp
ss
je
fs
scas
push
out
pop
sub
pop
lahf
inc
pop
push
cmp
aam
iret
xor
and
inc
aaa
xlat
push
add
push
or
popf
or
cmp
pop
idiv
in
hlt
sbb
xlat
add
stos
roll
lret
jnp
nop
sbb
push
push
jbe
js
sub
and
lret
dec
fdivp
cmp
ds
daa
les
js
rorb
mov
jno
adc
insb
lods
ja
sub
jg
pop
stos
sub
xchg
mov
aaa
into
or
cmp
sbb
les
js
ret
pop
inc
shlb
adcl
rolb
mov
incl
mov
sub
dec
xor
sbb
or
push
iret
adc
sarl
icebp
aaa
pop
gs
mov
sarb
imul
lret
inc
outsb
mov
cmp
outsl
outsb
in
popa
ljmp
in
add
xchg
mov
in
xchg
inc
mov
push
shlb
sub
push
scas
and
jns
pop
mov
mov
xor
aaa
mov
pop
lock
dec
push
ret
loop
inc
outsl
xor
sbb
sbb
mov
jns
mov
sbb
aaa
push
cmpsb
into
iret
xchg
in
stos
addr16
cmp
sub
cmp
adc
adc
mov
push
and
inc
std
sub
add
aaa
sub
pop
add
cmp
jne
mov
cwtl
arpl
fwait
lcall
pushw
out
pop
add
movsb
sarl
rol
push
mov
in
pop
ja
aas
lods
pop
xchg
or
int
ljmp
or
or
fldcw
sub
push
sub
jnp
sub
fstps
mov
popf
mov
data16
push
popf
jnp
or
adc
xchg
push
push
lahf
xchg
add
push
jns
movzbl
adc
stc
cli
cwtl
mov
mov
out
inc
mov
add
and
cwtl
jae
add
xchg
push
mov
mov
dec
or
sub
mov
loop
lahf
fists
cmp
adc
adc
popa
xor
lcall
pop
imul
loop
add
inc
jne
loopne
xor
dec
dec
and
dec
shl
cmp
pop
inc
add
add
cmc
push
pusha
fdivl
jg
add
pop
jns
cltd
popf
jecxz
mov
or
fcomip
or
popa
sub
push
cmp
jl
inc
xchg
pop
mov
jp
addr16
pop
sbb
cmp
xor
mov
inc
mov
sub
test
mov
hlt
mov
ret
push
mov
lret
aad
ljmp
lods
test
and
shrb
leave
seta
cld
sub
ret
and
pop
cs
xor
into
push
cmp
scas
and
cmp
shrl
xchg
popl
mov
add
pop
cmp
add
xchg
xchg
cmp
sti
add
mov
xchg
bswap
sub
sub
sbb
hlt
iret
or
icebp
lcall
push
jbe
out
call
js
stos
outsl
fisubrl
out
fildl
mov
pop
adc
pop
xor
mov
movsb
cmp
mov
add
pop
mov
clc
xor
hlt
jb
lcall
cmpsb
sbb
adc
jns
pop
arpl
pop
sahf
out
out
cmpsl
mov
lret
imul
addr16
mov
pushf
ja
cmp
cltd
and
adcb
loop
pusha
push
cmp
dec
add
xor
push
sti
and
or
mov
dec
add
mov
mov
popf
and
imul
lahf
push
pop
dec
mov
fildll
inc
or
mov
loop
xorb
insb
mov
es
cs
nop
jae
sub
push
testl
mov
les
fldl
mov
push
mov
push
in
mov
imul
adc
bound
jns
cmp
jge
mov
ss
pop
sub
stc
cwtl
pop
xor
sbb
inc
mov
nop
out
add
sahf
sti
pop
sub
and
mov
mov
push
sbb
mov
rol
adcb
ret
cmp
mov
dec
test
push
xchg
mov
ljmp
push
clc
aas
cltd
rcr
jecxz
stos
jbe
pop
data16
mov
jnp
ficoms
and
enter
add
insl
in
enter
mov
pop
stc
out
push
mov
or
nop
inc
mov
or
stos
aam
rcl
push
inc
add
shrb
ficompl
sub
outsb
sbb
adc
sbb
ret
hlt
popl
lret
and
or
outsb
pop
push
push
js
jle
pop
out
in
mov
daa
jecxz
mov
inc
loope
ds
jge
adc
scas
mov
psraw
cmc
lahf
pop
in
cmp
mov
xchg
out
dec
loopne
jns
pop
mov
popaw
aam
fucomi
inc
adc
sti
xchg
mov
and
adc
aas
and
pop
pop
and
arpl
jbe
add
push
sub
insl
dec
std
lds
cmpsb
sub
loopne
das
jmp
mov
shlb
rolb
sahf
int
cmp
clc
xor
mov
or
adc
jnp
in
push
cmp
pusha
loope
add
mov
xorl
loop
mov
movsb
out
xchg
fmull
das
inc
nop
sub
outsb
adc
xchg
call
cmc
fwait
scas
inc
shlb
or
sbb
xchg
xor
and
jl
push
push
loope
lret
clc
xchg
pop
test
adc
out
call
fdivs
pop
aad
insb
jg
out
push
add
xor
cmp
inc
xor
pop
fidivrs
into
sahf
pop
mov
gs
jne
jne
inc
out
imul
push
data16
out
jbe
sti
mov
in
dec
divb
movsl
les
push
push
fidivs
jne
adc
gs
jp
and
loopne
shl
stos
movsb
push
test
dec
xor
push
call
pop
pop
aam
xor
cmp
iret
inc
cltd
stos
mov
je
or
sbb
inc
nop
cld
js
dec
mov
ja
push
out
loopne
addr16
pusha
add
rcrl
leave
xor
sbb
fwait
jge
js
fdivrl
mov
jecxz
aad
xchg
test
xor
fdivl
daa
inc
mov
push
and
pop
pusha
imul
push
test
in
inc
push
push
mov
stos
sub
push
movsb
dec
jmp
sti
cld
shll
and
sahf
fisubrl
mov
add
mov
inc
xor
dec
aad
ss
xchg
xchg
jp
fisttpl
mov
mov
or
xchg
in
je
jl
mov
push
bound
das
pop
fidivrs
scas
inc
stos
aad
inc
stc
popa
add
call
dec
mov
inc
ljmp
lahf
cmc
jg
xor
mov
and
mov
dec
mov
into
in
repz
lock
cli
or
aas
add
mov
cltd
sbb
cmpsb
test
xor
adc
mov
pop
movsl
lods
push
loop
dec
imul
jae
adc
enter
adc
addb
repz
xor
or
ljmp
in
xor
xchg
or
mov
aam
xchg
scas
dec
push
loope
add
loopne
aam
icebp
mov
xchg
icebp
lods
iret
adc
mov
or
dec
mov
out
mov
aas
and
or
out
mov
idivl
xchg
and
in
aad
fdiv
out
dec
add
cvtpi2ps
or
mov
out
cmc
daa
sahf
sbb
loop
out
mov
inc
outsl
ss
sbb
mov
dec
test
hlt
add
add
sub
xchg
add
dec
push
push
mov
in
inc
ljmp
je
insl
sahf
loopne
cltd
rorb
outsb
outsb
cs
mov
adc
mov
stos
cmc
negl
lods
subl
mov
cs
cltd
mov
pop
jl
shrb
pop
shl
mov
mov
fdivs
jl
jle
cs
int
dec
sti
fs
stos
push
and
cmpsb
clc
ja
ret
enter
scas
or
sbb
cmp
pushf
jns
out
ljmp
dec
daa
sbb
xchg
paddd
ljmp
lret
or
out
repz
les
pusha
or
sbb
sub
or
mov
add
daa
xchg
mov
loope
xchg
xchg
cmp
pop
ss
add
jne
dec
loopne
pop
fdivrs
cld
xchg
out
lds
enter
xor
or
aad
or
sbb
cmp
add
stos
stc
or
jp
xor
jns
fisubs
xchg
aaa
jne
push
mov
loope
fs
dec
pop
pop
sbb
in
imul
jecxz
inc
cmp
je
adc
ja
rcpps
cmp
cmp
call
xchg
nop
mov
dec
dec
fstp
rsm
mov
fucom
jnp
mov
push
ss
std
push
cmp
cs
fwait
ss
mov
jp
inc
adc
add
add
mov
dec
push
push
push
xchg
xor
cmpsl
xor
dec
mov
jnp
mov
mov
mov
sub
out
scas
rolb
lret
notb
test
cmpsl
dec
out
aaa
sahf
cmp
cmpsl
ljmp
lahf
loopne
xchg
push
dec
std
scas
push
out
daa
test
add
mov
pop
call
enter
loop
jmp
rcl
sahf
insl
lock
push
sub
xchg
fdivr
xor
xor
imul
pop
leave
pop
add
mov
loopne
sbb
sbb
push
movsb
andl
mov
mov
or
test
sub
arpl
orb
sub
repnz
xchg
lret
repz
sbb
mov
push
dec
clc
outsb
int
ret
mov
ds
cmc
push
cmp
in
fbstp
lods
and
mov
push
addb
ret
repz
push
xchg
sti
sarb
and
loopne
xor
loopne
sub
cmp
xor
cld
xor
xchg
mov
lahf
jmp
xchg
lcall
mov
xor
push
outsl
mov
pop
sub
cmp
dec
ljmp
fisubl
push
psubq
pop
pop
xchg
and
js
add
mov
adc
mov
faddl
fisubrs
sbb
fwait
xlat
and
in
jmp
cmp
into
bound
fmul
pop
out
mov
ret
cs
sbb
sub
data16
nop
and
jae
test
cmc
cmc
pop
mov
jb
shll
rclb
push
mov
fildll
movsl
sbb
pop
cmpsb
inc
pop
std
xchg
fninit
cmp
sub
out
fistps
sub
pop
xchg
insb
xchg
xlat
in
je
mov
stos
sbb
ret
mov
divl
xchg
or
stos
andb
xchg
pusha
xlat
xadd
add
data16
sar
test
push
jl
xchg
movsl
das
fstl
mov
dec
xchg
or
mov
jg
test
xchg
lcall
mov
jns
push
idivb
lock
push
aas
sbb
ja
jg
in
shl
pusha
cli
fcomp
pop
jp
sub
jmp
lea
pushf
xchg
xlat
sbb
dec
cmp
repnz
or
lret
add
jecxz
dec
jns
mulb
pop
cli
cmpsl
or
cmp
cmpsb
stos
lea
cmp
xchg
insl
fwait
insb
data16
adc
mov
shlb
push
jge
xor
movsl
je
cmp
aaa
iret
pop
out
xor
call
stos
xorb
mov
sbbl
push
leave
xchg
and
adc
stc
clc
inc
test
inc
stos
push
leave
mov
inc
add
iret
ss
repz
inc
push
jae
mov
movsl
and
add
pop
ss
cmp
jo
fldpi
es
push
adc
and
shl
cmp
test
in
ret
inc
jb
push
in
jl
pop
psubsw
gs
push
fwait
sbbl
fisubl
ljmp
das
out
inc
pop
jnp
or
xchg
dec
push
xor
bound
adc
pop
fsubl
cmp
fdivs
aas
insb
popa
sahf
mov
mov
fmul
pop
dec
jle
mov
sti
ret
dec
je
bound
sub
ret
and
and
lret
lea
xchg
xor
sub
jecxz
push
repnz
or
mov
adcl
cmp
or
xchg
push
out
or
test
or
jle
mov
stc
pop
mov
addr16
fidivrs
lea
jl
orb
xor
int
dec
enter
test
movsb
mov
mov
mov
iret
push
mov
mov
or
xlat
inc
or
cmp
pop
out
cmp
push
push
mov
js
dec
inc
push
sub
aad
daa
divb
xor
mov
jbe
stos
inc
mov
mov
dec
idivl
dec
mov
mov
dec
out
pop
pop
out
lods
pop
mov
mov
xchg
aam
and
jp
or
bound
and
mov
mov
data16
cmc
jns
lcall
sbb
cli
fchs
fnsave
shll
ja
xor
jno
jp
outsl
fsubl
scas
mov
iret
and
in
inc
mov
dec
mov
addb
adcl
and
gs
mov
mov
push
mov
xor
mov
mov
lcall
cld
testl
enter
jmp
cwtl
or
push
and
lahf
jle
jmp
enter
mulb
xchg
adc
xor
test
out
jge
cmpsl
push
ja
push
xchg
neg
add
inc
shrb
mov
stc
push
and
out
dec
or
fidivs
xchg
mov
inc
leave
sbb
sub
test
xchg
xlat
push
aad
movsb
fwait
and
fwait
xor
dec
pop
lock
sarl
inc
sub
sub
test
sub
pop
mov
mov
mov
lahf
or
fsubl
jp
adc
shrl
mov
dec
dec
in
dec
mov
ficoms
movb
in
jb
sbb
gs
or
ja
mov
daa
and
lea
aad
nop
sub
fisttpll
arpl
sbb
mov
xchg
push
mov
push
push
mov
je
ret
enter
stos
sbb
test
sarb
or
adc
mov
jl
sub
cmpsb
push
jle
adc
ret
mov
dec
mov
stc
lahf
addr16
addr16
push
dec
xchg
fs
repnz
in
and
clc
shll
daa
adc
jb
outsb
repnz
jge
loopne
stc
ret
or
jns
jnp
fpatan
imul
pop
and
cmc
pop
or
jl
cmp
sub
push
cmp
fildl
cmpsb
add
xchg
rcrl
ja
sub
sub
mov
insb
sub
ret
sbb
fisttpll
dec
and
jnp
movsl
xor
int3
pop
rcrl
arpl
into
int
rorl
xor
sbb
nop
lock
sbb
mov
jl
push
mov
push
add
fsubrs
or
stos
in
dec
push
add
push
cmpsb
jle
mov
xor
jp
ret
outsb
movb
sbb
popa
mov
push
icebp
sbb
adc
adcl
sub
in
push
jbe
sbbb
mov
fcomip
dec
jmp
lods
cld
xor
cmp
insb
jo
sub
ret
mov
fistpll
mov
notl
fldl
and
mov
inc
ret
fs
mov
mov
daa
lcall
cmpsb
inc
jns
mov
push
jge
rcrl
dec
hlt
leave
addr16
outsl
or
and
jl
ret
xor
xlat
sbb
movsb
loope
or
testb
fsts
test
jns
fidivrl
adc
popa
jns
push
adc
in
in
and
in
test
xor
add
or
ret
lahf
cmp
mov
sbb
mov
push
ret
or
adc
pop
lret
addr16
mov
call
mov
add
push
xor
mov
sub
adc
cmp
out
cld
out
addr16
das
mov
sub
outsl
jmp
jnp
addr16
imul
jg
cmp
data16
adc
xor
xor
inc
ds
or
sbb
cmpl
jecxz
imul
hlt
bswap
mov
add
jbe
jle
mov
out
jp
pop
xor
aam
add
cmpsb
mov
mov
or
pop
stos
lret
dec
xor
addl
orb
icebp
cmp
data16
bound
dec
pushf
mov
mov
push
jmp
sahf
hlt
sti
loopne
dec
cmp
out
cli
ljmp
sbb
out
es
jle
daa
jae
pusha
adc
aaa
xchg
adc
push
jge
fldl
cmp
inc
cmp
lods
push
cmp
shrl
loope
and
pushf
roll
idivb
lret
pop
push
clc
shll
cwtl
xlat
mull
cld
das
mov
lock
adc
jae
adc
mov
dec
mov
popa
or
inc
add
sbb
xor
push
sbb
shl
push
hlt
push
cmpsb
pop
iret
ljmp
das
cwtl
and
pop
fists
xor
mov
stos
pop
sbb
testl
jecxz
jl
cmp
jge
and
lcall
push
sub
ds
loope
dec
mov
movsb
imul
cmp
add
lret
xor
mov
loopne
int
push
sbb
push
sub
repz
cmp
or
lods
imul
push
adc
outsl
aaa
insb
cmp
jo
sub
fbld
pop
jg
sarl
mov
stos
into
popa
rcrb
mov
bound
cli
in
inc
icebp
cli
addr16
ss
push
cld
push
adc
jns
pushf
pop
or
add
shll
cmc
mov
mov
push
xchg
call
or
lret
pusha
mov
adc
or
inc
add
js
jl
loop
out
push
mov
leave
data16
dec
sbb
jl
dec
mov
cmp
ss
inc
ret
ret
inc
or
dec
sbb
ja
pop
inc
fbstp
in
movsb
js
pop
and
stos
cmp
andl
dec
sbb
and
in
ss
cmp
aaa
or
nop
sub
mov
add
sbb
or
mov
xor
es
jno
mov
lahf
dec
xchg
adc
pop
shrb
std
mov
jno
and
xor
xchg
sbb
mov
pop
sub
repnz
ja
movsl
sub
ja
rcrb
roll
ljmp
push
pop
pushf
inc
call
xchg
inc
aad
jp
dec
es
cmp
mov
stos
mov
inc
adc
push
lahf
enter
mov
and
jne
in
into
fbld
mov
inc
ud2
in
jg
test
sub
and
dec
cmp
imul
test
movsl
sub
mov
rclb
enter
cmp
iret
jno
das
test
pop
addr16
ss
sbb
test
std
std
push
sub
jp
ja
test
xlat
enter
rclb
and
add
cmp
xchg
mov
shll
inc
repz
or
xchg
xchg
push
fimull
xor
cmp
xchg
sub
ret
pop
mov
push
and
fnstenv
adc
loop
push
inc
pop
and
and
outsb
movsl
xchg
and
adc
data16
ficomps
or
orb
out
incb
mov
mov
xor
xor
orl
jmp
lods
lret
cmp
stc
pop
jge
out
shl
arpl
xchg
pusha
test
loope
cmpsl
dec
arpl
mov
rcll
orl
pop
inc
mov
mov
mov
ret
pop
mov
lds
sub
das
aaa
mov
lods
sahf
and
cmp
jmp
pmulhuw
mov
ss
xchg
mov
fdiv
out
shl
fsts
fucomip
jg
jnp
fdivl
pop
adc
cld
dec
lods
iret
xor
out
lret
ss
adc
mov
lcall
cld
bnd
cmp
pop
insl
int3
in
xor
sbb
cld
sub
pop
mov
scas
mov
xchg
push
andl
cmc
push
je
sahf
js
aad
leave
sbb
or
cmp
jmp
inc
adc
xchg
jp
mov
in
ds
pop
sarb
ljmp
loope
sahf
ljmp
push
cmc
rclb
sub
mov
add
stos
lahf
cmp
lods
clc
mov
jbe
stos
shrb
inc
or
test
stos
cmpsb
mov
inc
data16
daa
into
fdivrl
mov
ja
pop
dec
inc
mov
js
sbb
fisubrl
xlat
es
dec
mov
loopne
cmp
pop
insl
notl
and
outsl
les
daa
bound
xchg
cmp
dec
sbb
jae
cld
xorl
xchg
mov
daa
push
adcb
sub
nop
nop
push
sbb
test
pop
gs
or
xor
cltd
ja
push
lds
mov
cs
lods
sub
addl
jns
out
push
sub
lea
das
nop
imul
les
xchg
fcmove
or
jno
loopne
jge
xor
mov
bound
mov
xchg
test
jp
frstor
push
loopne
sub
sahf
add
mov
push
imull
jns
mov
mov
push
pop
cmc
leave
enter
subb
orb
mov
xor
xchg
dec
loop
js
xchg
movsl
clc
push
xchg
cmpsb
cld
es
sub
jmp
inc
mull
divl
push
scas
sbb
mov
scas
mov
dec
orl
pop
in
add
push
jmp
repnz
xchg
lods
xor
test
outsb
jecxz
bswap
cmp
cmp
lret
adc
mov
mov
das
rcrl
cwtl
xchg
adc
imul
pop
test
adc
mov
jecxz
sub
push
sub
adc
mov
aam
xor
inc
fistpll
mov
mov
jmp
mov
and
inc
hlt
inc
xchg
cmc
or
or
push
xchg
mov
jns
leave
mov
sbb
and
fldt
and
scas
aam
mov
dec
xor
inc
dec
inc
mov
sbb
shr
and
xchg
in
mov
inc
dec
loope
xor
sub
sbb
into
sub
rorb
or
sub
and
mov
xor
orb
pop
imul
sbb
jnp
jl
dec
xchg
and
in
filds
mov
pop
mov
test
adc
nop
jg
aas
loop
jmp
subl
leave
test
out
repnz
scas
xlat
push
xor
xchg
inc
jno
cmp
dec
in
lds
out
in
adc
xor
fidivrs
cltd
cmpsl
xchg
inc
inc
cmp
insl
sbb
jge
jno
stos
sbb
pop
les
mov
inc
cmp
pop
pop
pop
adc
pop
mov
xor
mov
std
jp
lock
js
push
or
outsl
sti
xor
cmp
add
shrb
rol
mov
pop
fs
mov
push
sarl
xchg
les
jae
mov
pop
fisttpll
mov
inc
lahf
mov
dec
mov
adc
or
notb
sbb
sbb
cwtl
inc
push
stos
cltd
addr16
push
push
adc
popa
nop
dec
icebp
ss
or
das
fs
insl
ja
out
cmp
mov
sub
pushf
xchg
jne
add
gs
insb
shl
out
daa
ffree
push
sbb
sbb
dec
dec
js
imul
inc
sub
fnstcw
adc
xchg
sahf
mov
or
aas
pushf
mov
mov
in
repnz
adc
dec
test
in
mov
cmp
testb
xor
inc
mov
cli
cmpsb
lret
mov
sbbl
jl
push
xchg
mov
mov
jae
sbb
dec
mov
add
fs
and
outsl
jne
or
lods
mov
leave
mov
sub
jecxz
sbb
jnp
adc
loop
mov
sub
stos
mov
lods
pop
sti
stos
and
cwtl
sahf
insb
movsb
sbbl
cli
je
inc
loop
pop
cmpsb
cltd
cmp
movsb
jnp
bound
push
mov
out
lret
mov
push
jbe
mov
push
in
mov
add
pusha
scas
aad
or
adc
outsl
movsl
mov
lahf
shll
cmpsl
cmp
jge
cli
push
add
add
mov
test
inc
sbb
subb
es
cs
fidivl
sahf
data16
xor
popa
mov
adc
dec
mov
ds
dec
or
push
xor
sahf
dec
fstp
ret
mov
sahf
lock
mov
cmp
sbb
adc
lahf
mov
fisttps
fsubl
lret
std
mov
xor
in
or
dec
int3
pushf
inc
loopne
sub
adc
orb
mov
push
cmp
out
or
pop
fisttpll
and
sti
push
popf
lods
mov
mov
push
movsb
jae
les
pop
mov
int3
mov
add
lcall
in
xor
adc
or
pop
cmp
ds
jns
repnz
mov
mov
xchg
lods
into
in
jp
or
and
jp
scas
and
in
outsb
bound
cmp
fld
jae
and
fcoml
insb
xchg
push
push
cltd
xchg
dec
mov
xchg
jnp
lret
subps
ds
insb
sbb
or
insb
leave
enter
test
sub
mov
mov
imul
dec
jmp
mov
sub
fstl
in
jnp
sbb
in
push
push
push
movsb
jbe
xchg
mov
leave
fwait
rolb
xchg
adc
jl
test
and
jecxz
lods
bound
lcall
dec
ret
sarl
xor
stos
mov
inc
es
xchg
xchg
inc
sbb
pop
cmc
pusha
push
dec
mov
nop
in
into
xor
dec
jns
std
adc
outsl
mov
mov
inc
call
lret
out
xor
pop
in
mov
cmc
xor
mov
dec
fs
pop
popa
mov
mov
add
outsb
xor
ret
jmp
mov
idivb
mov
nop
xor
dec
dec
popf
mov
push
test
mov
loopne
jnp
pop
cmp
add
imul
stos
data16
or
cld
pop
lar
jns
add
sarb
cmc
add
leave
lods
lret
or
in
mov
cmp
test
ret
xor
inc
popl
xchg
xchg
mov
addr16
popf
cmp
shl
test
mov
cs
xchg
xchg
adc
xchg
mov
cmpsl
jnp
hlt
push
or
ffreep
cmp
into
fidivs
xor
or
adc
in
insl
jns
sbb
pop
or
sub
imul
dec
pop
push
or
movsl
mov
aam
and
mov
mov
test
lea
and
es
ss
jbe
xchg
cmp
mov
das
mov
sbb
or
pop
jg
les
je
iret
movsl
imul
aam
xchg
pop
xchg
and
ljmp
loopne
mov
imul
pop
in
and
mov
xchg
pop
push
dec
mov
mov
dec
sbb
mov
add
sbb
dec
clc
jge
pop
std
push
les
gs
mov
inc
imul
sub
push
cld
or
jmp
nop
in
mov
frstor
ret
pop
sub
mov
lcall
cmc
flds
mov
inc
loopne
xchg
test
out
aas
test
push
arpl
and
sbbb
loopne
fwait
lret
imul
repz
icebp
shl
sbb
add
dec
push
add
shlb
scas
sbb
test
imul
movsl
shr
aad
test
or
enter
jge
or
mov
iret
into
aas
cmpsl
aam
subl
arpl
hlt
xchg
arpl
mov
pop
fdivr
or
pop
pop
fists
sub
cld
je
movsb
sub
xor
jno
push
jne
jle
mov
pop
xchg
sti
xor
test
jp
pop
xlat
jae
pop
loopne
into
addr16
add
jge
jae
jne
xor
rcrl
cwtl
sub
ret
adcl
cwtl
ss
push
rol
cmpsb
pop
insl
jae
stc
inc
adc
roll
mov
fisttpl
pop
popa
cmc
jo
jbe
rclb
adc
dec
or
mov
sbb
ret
mov
fdiv
mull
lahf
jmp
jle
sbb
aam
lahf
mov
mov
push
fldcw
nop
mov
out
jnp
mov
out
push
sub
jae
push
into
jl
loope
inc
jbe
dec
addr16
push
insb
mov
cwtl
push
fwait
sub
jge
pop
fistps
loopne
jle
inc
int3
lret
jns
cwtl
sub
test
xor
and
add
je
inc
mov
lret
ss
xchg
and
outsb
lea
int3
add
push
lods
push
iret
or
popf
mov
pop
cmpsb
mov
push
sti
popa
xchg
xor
cld
loop
int3
adc
fs
dec
sub
sti
adc
jns
mov
mov
cmp
jno
or
das
fcompl
jle
xchg
jl
std
pop
test
cmp
mov
or
mov
sbb
sub
les
sarl
cld
adc
jmp
shl
not
repz
outsl
pop
mul
loop
lods
jmp
filds
idivl
mov
and
or
cmpsb
or
mull
mov
xor
push
mov
aas
jae
rcl
test
sbb
push
lods
mov
mov
and
int3
xchg
outsl
pop
sbb
push
cmpsb
cwtl
or
insl
int
loop
outsb
scas
dec
mov
jmp
sub
enter
inc
lea
test
sbb
and
and
ljmp
out
fbstp
cmp
add
mov
out
in
jmp
xchg
add
xor
fnstsw
push
xchg
or
add
stos
gs
test
xor
mov
xor
pop
inc
dec
lret
idivb
sub
push
lock
les
xchg
push
and
and
xchg
mov
inc
pop
dec
add
and
ficoms
sub
enter
hlt
in
dec
xor
mov
mov
mull
movsb
movsb
fadds
push
loop
pop
inc
test
mov
inc
push
pop
inc
lcall
fnstsw
daa
cmpsl
cmpb
test
aaa
adc
mov
outsb
shrl
ss
mov
lock
push
dec
out
sub
inc
or
insl
enter
push
jmp
test
xchg
ret
out
outsl
fadds
pop
test
sbb
dec
add
cmp
lcall
leave
out
mov
cltd
call
sbb
clc
loopne
aam
rcll
push
hlt
out
cmpb
aam
cmp
jl
xchg
shlb
mov
out
xchg
pop
jbe
xor
xlat
fstpl
xchg
push
stos
stos
xor
cmc
dec
into
mov
inc
cli
sub
test
mov
lret
sbb
in
mov
cmpsl
add
sub
aad
xorl
jmp
insb
dec
insl
mov
aaa
cmp
add
dec
add
dec
pop
or
hlt
adc
ds
aaa
jmp
jns
add
mov
gs
int3
cmp
in
cmp
xor
outsb
or
in
cmpsb
iret
scas
mov
icebp
cli
nop
stos
divb
push
push
push
pop
jbe
jnp
mov
mov
lods
xor
aaa
or
inc
dec
inc
inc
dec
loopne
sub
pop
jnp
sbb
outsb
sub
cmp
xor
iret
test
stos
cmp
mov
out
pop
xor
mov
in
add
or
icebp
push
int
fisubrs
dec
js
inc
es
jns
or
clc
add
sub
push
cmp
loopne
lods
pop
and
fsubrs
pop
adc
pop
xor
jbe
iret
pop
insb
xchg
xor
test
int
push
pop
ss
xor
loope
pop
mov
stos
push
lods
jl
cmp
shrl
mov
jns
xchg
mov
mov
stc
xlat
subb
sub
or
stc
enter
fwait
push
shll
ret
jns
popf
push
pop
jg
cs
push
pushf
aas
orl
mov
out
dec
int
and
imull
add
mov
jne
inc
mov
movsb
mov
sbb
daa
xchg
pushf
mov
imul
or
pop
fptan
mov
test
movsl
dec
cmpsb
pop
fisttpll
dec
jmp
inc
js
stc
push
scas
daa
clc
mov
insb
mov
or
adc
adc
lahf
gs
mov
loopne
and
dec
mov
push
fsubs
and
mov
and
adc
lods
imul
das
xchg
sarl
mov
testb
fsub
xchg
stos
adc
stos
jl
mov
cmp
push
and
movsl
nop
pop
pop
movntps
in
mov
icebp
add
pop
into
xchg
aaa
jbe
and
imul
mov
pop
inc
inc
mov
das
lcall
es
scas
shll
int
imul
das
outsb
jl
cmp
sbb
jg
mov
mov
movsb
and
movsl
add
rcrl
cmp
and
es
js
aad
inc
cmp
xchg
lcall
adc
pop
nop
jnp
inc
jbe
repz
push
aam
push
insb
mov
adc
xchg
dec
scas
es
insl
dec
pop
xor
es
and
pop
mov
test
jp
inc
imul
pop
test
inc
es
data16
inc
in
mov
negl
cmp
or
mov
pop
or
pop
loopne
jl
aas
loopne
packuswb
sub
sub
mov
jmp
sbb
cmc
cwtl
xor
gs
lahf
idivb
mov
inc
pop
sub
jge
mov
mov
out
dec
xor
sahf
xchg
mov
mov
shll
sub
add
mov
mov
push
jae
or
cmp
adc
leave
mov
lret
pop
and
dec
ss
mov
push
cmp
in
scas
nop
mov
icebp
aam
add
adc
push
push
hlt
addr16
mov
pop
add
repnz
adc
in
lods
push
ret
sbb
push
jp
add
jo
test
dec
out
mov
mov
xchg
xor
sarl
xchg
dec
das
push
adcb
and
cwtl
cmpb
push
js
pop
mov
pop
push
or
mov
pop
mov
fwait
cmpsb
add
jmp
and
mov
cmp
mov
push
push
xchg
jmp
je
loop
pop
roll
mov
lcall
jg
repz
jmp
xorb
adc
jae
sbb
out
int3
repz
cmp
pushfw
jbe
sbb
add
popa
andl
lret
popf
fldenv
xor
ret
stc
cmp
cmpsl
sbb
dec
fsubrl
imul
mov
push
inc
loopne
inc
fbld
loope
mulb
pusha
add
or
ror
fiadds
sub
sahf
pop
adc
xchg
mov
lcall
clc
jecxz
fistpll
jae
mov
sbb
enter
jg
les
pop
ret
dec
into
aaa
pop
mov
inc
js
cmp
inc
dec
stos
cwtl
shrl
sbb
xlat
jge
xor
out
pop
adc
mov
and
aam
das
movsb
mov
xchg
dec
loope
sbb
cmp
loopne
xchg
sub
mov
sbb
das
and
mov
jecxz
sbb
repz
jg
sahf
or
push
pop
xor
loop
mov
xchg
dec
mov
xchg
jnp
icebp
jle
fucomp
enter
xchg
cltd
gs
addr16
sahf
inc
cvtps2pi
hlt
ret
sbb
jle
mov
dec
xor
xor
adc
rorb
mull
push
and
add
movsl
mov
cld
ljmp
scas
imul
xor
and
mov
mov
dec
hlt
mov
movzbl
push
sbb
jo
dec
xchg
out
jno
orb
and
aaa
ss
and
mov
sbb
cwtl
and
xchg
mov
add
int3
nop
pop
shlb
and
jb
popf
cltd
stos
mov
pop
push
jo
xor
jnp
mov
imul
testl
xchg
jecxz
icebp
popf
cmc
pop
or
rolb
mov
xchg
data16
popf
push
scas
lret
jb
pop
in
pop
ds
in
mov
xchg
pusha
inc
push
jge
scas
cmc
sbb
dec
jle
or
sub
inc
or
add
inc
fbld
test
push
add
or
cmpsl
push
lret
xlat
fs
mov
inc
mov
sbb
xchg
lea
je
daa
test
int3
aam
cmc
je,pn
add
cmp
sbb
out
icebp
outsl
ds
add
clc
mov
scas
and
cmp
es
outsb
imul
enter
jle
mov
out
sbb
cli
int
js
cli
mov
jae
es
jmp
xor
dec
daa
pop
and
mov
stc
sti
lock
loope
and
mulb
sbb
jbe
mov
adc
cmp
stos
mov
pop
sub
fidivrs
ljmp
jb
lds
fisttps
aas
xlat
rorb
inc
enter
rorl
into
leave
loopne
loop
es
jl
mov
pop
cmp
add
mov
fisubrs
fisttps
mov
xchg
pop
ja
inc
add
dec
or
in
jne
out
inc
mov
cmpsb
aam
sar
out
sbb
dec
int
sbb
fwait
ret
leave
mov
xchg
cmpsb
adc
mov
sbb
inc
lret
ds
data16
inc
cmpb
repnz
dec
cmpsl
hlt
ss
mov
push
pop
mulb
cmp
xor
xchg
or
ret
xchg
call
add
test
pop
and
int3
cmp
xlat
fsubrl
into
data16
push
inc
or
inc
je
jp
ljmp
rcll
jns
punpckhdq
enter
scas
sahf
add
fadds
mull
repz
sub
pop
lcall
xlat
inc
pop
push
outsl
sub
sarb
jae
push
imul
scas
movsb
or
add
ljmp
aaa
cmp
loopne
les
adc
push
jl
sub
mov
or
dec
fildll
mov
sub
enter
fwait
in
sub
pop
xrelease
dec
cli
fsubl
sub
jg
mov
bound
in
inc
sub
fistpll
cmpsl
xor
xchg
xor
add
dec
push
mov
mov
jne
sahf
mov
ret
xchg
mov
icebp
jge
sub
scas
lret
jmp
out
cmp
addb
inc
dec
in
inc
lret
gs
jg
pushf
shrb
shrl
rorl
add
mov
cmpsl
jecxz
out
jp
pop
cmp
cmpsl
rcr
jecxz
les
aad
out
xchg
or
orb
mov
jb
pop
cmp
or
movsl
into
mov
xor
imul
ss
clc
sbb
jo
jbe
movsb
pop
pop
test
in
cmpsb
jg
jns
mov
mov
std
or
pusha
fisubs
jmp
loope
or
inc
stos
mov
daa
xchg
rclb
add
inc
or
cmp
inc
dec
ja
cs
loopne
imul
lret
push
or
mov
mov
mov
scas
xorl
dec
mov
lret
pop
mov
rdmsr
mov
adc
mov
out
std
jmp
inc
rorb
pop
lods
rol
sahf
add
xor
xchg
mov
pop
jmp
out
bound
adc
fcomps
and
int
sti
fwait
pop
fsubr
roll
cmpsb
cmp
repz
inc
lahf
jp
aam
xor
rcr
add
repz
scas
mov
int3
inc
outsb
or
mov
pop
js
fidivl
or
movzbl
mov
dec
inc
xchg
lds
jle
stc
fbstp
gs
mov
stc
xchg
push
inc
xor
addr16
insl
xchg
and
int
repnz
scas
mov
lret
pop
sbb
stc
sbb
push
mov
adc
mov
ds
jecxz
inc
leave
cmp
add
jp
jmp
ret
mov
mov
repz
mov
stos
lock
daa
xor
push
push
xor
in
mov
jnp
mov
and
mov
mov
lods
xor
inc
pop
mov
popa
stos
leave
ljmp
aaa
test
stos
push
test
std
jb
movsb
sbb
pop
mov
into
inc
jno
out
mov
push
out
out
out
inc
sub
xor
push
stos
rclb
mov
xlat
xchg
dec
inc
out
subb
pop
dec
call
sbb
out
and
xor
testl
bound
gs
ljmp
js
test
imul
xor
jge
push
and
and
jmp
scas
rcrb
hlt
and
outsl
in
stc
out
dec
ficomps
sub
pop
test
testb
push
leave
mov
jae
es
sahf
add
inc
sbb
jmp
les
fldt
push
filds
dec
aaa
pop
int
stos
nop
mov
jbe
movsb
test
cmpsb
cwtl
cmp
mov
int3
loop
and
lds
les
out
xlat
push
mov
pushf
and
jge
push
pop
sbb
std
aam
sahf
movsl
and
jo
mull
cmpsl
sub
ja
xchg
xor
inc
xor
fisubl
pop
repz
xor
pop
mov
add
inc
or
jle
jmp
push
mov
sub
xchg
stc
add
mov
push
inc
int
mov
std
aaa
idiv
pop
inc
add
or
xor
sub
cmp
xor
int3
inc
pop
jmp
repnz
in
je
lea
roll
mov
cmc
push
les
repz
xchg
lret
jb
xorb
adc
lea
or
js
cmp
outsb
inc
jge
mov
pop
mov
fimuls
femms
out
or
xchg
and
aam
addb
sub
jb
pop
pop
xor
xchg
in
add
or
pushf
movsl
dec
repnz
sbb
xchg
faddl
test
sub
push
leave
xchg
outsl
outsb
pop
sub
sub
in
sub
xchg
push
xchg
xlat
pop
add
fs
jbe
ljmp
outsb
call
xor
mov
or
decb
and
jp
cld
sub
inc
and
mov
sub
mov
jns
nop
in
mov
jnp
fildl
push
and
sbb
and
dec
sbb
clc
jno
orl
fucomp
push
pusha
cmpsl
fcomps
popf
inc
pop
mov
icebp
leave
les
lock
xchg
pop
or
mov
fimuls
rorb
ret
sbb
adc
or
aam
dec
or
test
imul
push
arpl
lret
xchg
cmp
mov
xchg
pusha
xor
lods
iret
add
push
pop
int3
mov
jge
ss
ja
adc
mov
mov
gs
pop
enter
fiadds
inc
in
out
xchg
or
loopne
push
psubw
cmpsl
into
js
dec
dec
lret
and
mov
call
jae
jae
xchg
lret
xchg
int3
mov
lods
mov
out
nop
inc
mov
jmp
push
lahf
scas
imul
sbb
in
movsb
shll
ljmp
push
mov
out
repz
jecxz
lret
test
push
mov
jecxz
mov
addr16
ror
cmp
in
stos
pop
cmp
inc
jnp
xor
pop
rcl
test
xchg
aas
mov
ret
arpl
loopne
mov
fists
cs
dec
jl
addl
mov
push
jo
es
dec
mov
dec
imul
inc
mov
pop
das
dec
push
cld
stc
fwait
lret
xor
stos
loopne
sbb
mov
negb
test
push
fistps
rcl
call
fdivrl
icebp
cwtl
je
lods
push
dec
call
in
sbb
or
mov
push
rep
aaa
pop
mov
shlb
sub
mov
aam
cltd
add
push
push
fstpl
adc
cmp
sbb
adc
cmp
xchg
pusha
call
xchg
cmp
insb
cli
in
xor
fildll
dec
mov
fs
mov
scas
pushf
and
enter
scas
ds
xor
mov
ja
stos
sub
fiadds
int3
popf
fsts
ja
mov
popf
sbb
stos
inc
mov
addr16
add
rclb
dec
bound
dec
adc
sti
mov
addb
addr16
sub
test
aam
inc
cs
repnz
sarb
sbb
fwait
mov
jns
popf
push
xor
out
shll
and
jecxz
sbb
or
or
fisubs
cmp
cmp
out
call
pop
dec
lea
cs
mov
jl
divb
mov
or
gs
std
jb
push
xchg
scas
loopne
mov
mov
outsl
sub
cld
nop
fdivl
icebp
and
dec
punpckhdq
test
scas
xlat
rorl
sub
adc
bound
rcrb
movsl
inc
test
pop
sub
mov
pop
mov
scas
xchg
add
cwtl
faddl
dec
aaa
out
aad
sbb
in
xlat
mov
pusha
loopne
pop
pop
push
fwait
mov
push
sub
int3
outsl
adc
jge
cmp
fists
add
std
leave
fcoml
lcall
push
sbb
xor
lds
pop
mov
cltd
or
xor
test
push
add
mov
mov
sub
jge
nop
adc
test
jmp
push
in
int3
pop
inc
int3
sti
adc
stos
and
int3
ja
inc
sarl
movsb
or
or
jo
xor
ror
aaa
addl
rcll
pop
mov
pop
jmp
xor
ret
dec
sub
mov
xchg
mov
pushf
push
ds
mov
sub
movsl
fiadds
outsb
jecxz
jl
inc
add
jmp
xchg
out
pusha
xor
in
aaa
jbe
push
mov
ret
add
mov
ficomps
jmp
das
adc
scas
call
les
sub
clc
aam
repnz
lock
aaa
jmp
lea
or
pop
mov
sub
xor
push
push
inc
cmp
je
lret
mov
imul
and
cmp
xchg
sbbb
mov
xlat
bound
insl
xor
jae
xchg
pop
inc
xchg
mov
xor
push
aas
out
adc
imul
lret
loop
loop
orb
test
mov
dec
jnp
bswap
das
lret
pop
mov
adc
loopne
lea
adc
sub
jnp
mov
decb
add
mov
int3
dec
clc
gs
mov
and
jo
push
fsubs
xorl
imul
and
aaa
lret
cmp
xchg
mov
testl
mov
mov
push
call
sti
jnp
shrl
scas
test
inc
popa
clc
push
sub
mov
sub
cmp
push
mov
push
push
cli
push
ja
or
or
pop
gs
daa
popa
nop
cmp
pop
cmp
jge
add
push
mov
adc
rcll
sub
pop
lahf
mov
push
sbb
std
in
mov
adc
push
cmp
cmp
outsb
xchg
popf
xchg
push
pushl
push
lods
mov
sbb
je
ljmp
pop
mov
std
ror
adc
mov
mov
repnz
ja
in
rclb
test
inc
in
lcall
pop
xor
das
or
shll
lods
loope
cmp
mov
xor
dec
push
inc
arpl
clc
jmp
mul
pop
mov
lods
push
fildll
addb
int3
out
push
xchg
iret
xchg
popf
scas
stos
out
imul
inc
inc
fwait
imul
repnz
mov
jo
or
sub
ss
minps
sub
rolb
add
jns
and
jnp
repnz
xchg
mov
push
cwtl
std
leave
jmp
iret
out
jmp
je
out
mov
sarb
stos
xchg
mov
add
xchg
and
lcall
in
fsubs
pop
scas
or
movsl
rclb
lock
mov
dec
mov
inc
outsb
mov
js
test
flds
xchg
sub
jae
adc
dec
push
mov
pushf
iret
xor
stc
out
lcall
mov
dec
in
stc
popa
or
int
arpl
add
call
out
rclb
xor
push
and
adc
push
cmp
pop
je
cmc
and
fstps
iret
gs
pop
push
cwtl
adc
mov
adc
mov
mov
push
cmp
ss
cmpsb
push
mov
mov
xor
mov
cmp
dec
xlat
push
loop
xchg
data16
stos
or
fnsave
sbb
popf
imul
popa
lcall
push
je
jmp
insb
mov
inc
pop
out
sub
jae
mov
add
rolb
push
pop
fidivrl
outsl
push
mov
adc
inc
sti
mov
sub
pusha
sbb
sub
mov
xchg
out
inc
jp
btr
push
xor
rclb
adc
aas
sahf
loop
popa
lret
inc
push
or
loop
adc
mov
shrl
pop
outsb
sbb
xchg
out
and
int
stos
sub
mov
lret
jnp
ds
lret
gs
fstpt
dec
mov
pop
rcrb
mov
add
xor
mov
fstps
js
mov
lahf
mov
iret
push
lahf
arpl
and
shlb
and
cwtl
or
je
pop
in
fwait
mov
aaa
lods
pop
push
cltd
xchg
in
ljmp
jge
and
scas
cmp
mov
or
xchg
ljmp
xchg
dec
lcall
in
adc
sub
mov
adc
testl
mov
pop
and
or
jb
dec
cli
fstpl
xor
lea
push
nop
mov
adc
lcall
test
mov
sahf
add
inc
es
or
adc
pop
push
outsb
cmpsb
pop
cwtl
inc
test
or
out
cmp
push
push
dec
mov
pop
push
mov
les
js
dec
and
fcompl
int
lahf
cmp
mov
ja
gs
gs
sarl
pop
xchg
xlat
out
cmpsl
dec
lea
add
dec
push
shlb
adc
call
sub
cs
std
add
cwtl
ljmp
mov
dec
out
jecxz
fistpll
xor
cli
ja
sarl
test
notl
lcall
aas
cmpsl
in
popf
jmp
push
aaa
mov
lods
or
xchg
add
fcoml
int
jns
arpl
dec
push
push
push
adc
push
ds
jl
shll
lahf
leave
fmull
stos
int3
jnp
frstor
bound
mov
sbb
aam
pushf
loopne
mov
or
sbb
push
pop
fwait
ss
xchg
xlat
pushf
jbe
and
mov
mov
scas
stos
mov
push
adc
ret
sbb
sub
add
mov
jmp
vmaxss
adc
out
ja
xchg
pop
mov
inc
dec
jmp
fsubl
mov
enter
aad
mov
inc
xlat
dec
pop
cmpsl
adc
inc
pop
xchg
lds
xchg
rcrl
sub
push
je
sub
fnstsw
adc
pusha
arpl
mov
jo
in
jo
mov
in
sahf
dec
pop
fcoml
rorl
ss
dec
dec
lods
mov
cmp
fldt
or
in
repz
xor
adc
int3
sbb
pop
mov
pushf
sub
xchg
lock
iret
das
dec
jecxz
nop
pop
test
cmpl
loopne
imul
outsl
xchg
xchg
push
jns
out
cmp
inc
imul
adcl
cwtl
lds
cmp
test
inc
xor
mov
xchg
xor
imul
pushf
xor
jecxz
ficoml
lds
xchg
and
xlat
imul
add
sub
sub
in
sub
pop
loopne
sbb
in
int
adc
jo
push
shl
sti
aaa
push
dec
jnp
xchg
cmc
dec
insb
push
ljmp
ljmp
pop
mov
cmpsb
loopne
cmp
adc
push
cmpsb
or
js
mov
aaa
jmpw
jg
adcb
loope
mov
or
les
and
aaa
xchg
push
outsl
scas
push
std
xor
sbbl
sbb
jecxz
and
push
and
sarl
jbe
subl
mov
inc
arpl
jo
push
dec
adc
movsl
jae
int3
in
lods
in
mov
sub
arpl
jg
jb
and
xchg
inc
sub
sub
lods
push
das
mov
inc
fadds
sub
lret
jo
rorl
ljmp
mov
adc
test
lock
adc
leave
js
push
nop
aam
push
test
adc
sub
clc
xchg
fnstcw
sbb
mov
lods
les
sarl
or
shll
xor
jl
xor
inc
cmp
cltd
and
add
add
popl
push
push
adc
push
sbbl
jp
jnp
push
pop
sub
sbb
roll
push
imul
arpl
lahf
shrb
add
jge
ss
mov
pop
lock
je
inc
iret
cmp
sub
lret
fidivl
popa
movsb
pop
add
dec
ss
mov
cmpsb
int3
call
insl
shlb
testl
into
test
clc
fs
xchg
add
mov
cld
mov
jnp
js
push
xchg
jp
pop
sbb
mov
cmpsb
insl
pop
xchg
imul
loope
add
clc
mov
pop
fldenv
aas
test
pushf
adc
stos
cmp
repz
lcall
aaa
aaa
mov
and
push
jo
into
jno
pop
inc
sub
ds
shll
jp
push
and
loope
stc
push
imul
rcrb
push
pop
sbb
enter
andl
or
adc
pop
adc
test
jbe
gs
int
add
mov
xlat
mov
and
lea
push
fists
arpl
or
mov
outsl
rcrl
fildll
sub
add
gs
in
sbb
mov
push
inc
fnsave
push
int
mov
inc
testb
push
xor
xor
adc
add
push
add
sub
sahf
insb
adc
dec
cwtl
inc
xchg
and
cmp
jg
adc
jge
bswap
enter
fidivl
and
sbbl
test
xor
sbb
loope
xchg
repnz
jecxz
repz
sub
mov
ret
sub
and
jl
test
xchg
leave
ljmp
out
insb
mov
fldt
cld
push
clc
cmp
in
sahf
pushf
mov
and
pop
or
xchg
mov
pop
pop
shll
fidivl
arpl
cmpl
jne
movsb
inc
lret
mov
jg
mov
test
cs
mov
sarl
fldcw
jne
fs
mov
movsb
sti
in
pop
lcall
jp
sub
mov
jnp
and
pop
aad
sbbl
lds
stc
xor
in
push
inc
or
ret
inc
testb
lods
cwtl
push
out
adc
ret
jnp
jmp
js
adc
repz
lret
mov
inc
sbb
lods
push
stc
add
fmull
jg
mov
xor
jge
test
jp
out
sub
pop
std
fdivr
mov
xchg
lock
mov
lods
jmp
sarb
mov
pop
dec
rsm
ljmp
push
jns
jbe
rolb
push
adc
mov
inc
pop
mov
adc
inc
out
add
stos
mov
inc
xchg
dec
js
in
sub
push
aam
lods
ret
cs
addr16
aaa
aad
inc
sub
pop
leave
dec
flds
jb
push
and
mov
add
mov
addr16
idivb
in
movsb
sarl
inc
push
push
outsb
mov
repz
or
insb
mov
mov
dec
lock
dec
popa
xchg
mov
sbb
mov
lock
movsb
lcall
push
or
add
mov
xor
sbb
test
mov
out
loopne
frstor
lods
adc
ds
out
push
pop
dec
out
fucomp
repz
add
iret
je
mov
out
dec
icebp
sub
mov
cmpl
mov
arpl
sub
dec
adc
dec
push
aam
leave
stos
adc
lea
cmp
mov
mov
mov
sti
stos
mov
movl
js
ror
movsb
sub
imul
shl
loop
bound
pushf
xchg
cmp
mul
xchg
fists
xchg
mov
mov
leave
loopne
jle
scas
mov
push
ljmp
sub
into
test
roll
ja
push
sbb
pop
in
push
in
mov
xor
push
dec
pop
add
jl
mov
dec
cmp
bound
and
mov
pop
insb
je
dec
imul
cwtl
in
repnz
add
dec
jo
rorl
xchg
sbbb
aas
mov
les
jmp
mov
mov
pop
pop
maxps
ljmp
out
mov
lea
incb
imul
pop
jbe
in
add
call
shrl
xchg
jg
pop
pop
daa
out
pop
mov
ljmp
insl
cs
inc
mov
fwait
pushf
test
mov
rep
ret
inc
or
arpl
dec
cmp
gs
test
shlb
cmp
cmp
adc
mov
mov
cltd
test
push
movsl
jbe
jmp
mov
inc
xchg
mov
and
popa
jno
push
cld
in
jmp
pop
test
jmp
movsb
outsl
in
ret
push
movl
xchg
pop
pop
xor
enter
mov
lods
loope
jecxz
mov
out
add
fidivl
or
scas
scas
cmp
rorb
jmp
ret
nop
dec
and
sbbl
aam
je
sbb
ret
mov
sbb
aas
popa
sub
sub
lret
mov
mov
adc
imul
repnz
mov
rolb
ds
sbb
rorb
sub
adc
inc
fbld
dec
push
js
addb
bound
sbbb
mov
aas
push
push
lds
sbb
dec
xor
mov
push
ds
xchg
dec
lret
cmpl
loop
stc
sbbb
out
mov
sbb
das
leave
jecxz
xchg
lea
mov
cmp
mov
popa
scas
sbb
dec
insl
aam
roll
outsb
cli
jle
mov
lahf
stos
movsl
shrb
icebp
jp
inc
sbb
jp
ds
loope
jo
xor
stos
jno
bound
mov
pop
shl
daa
add
adc
mov
js
arpl
mov
jb
pop
loopne
rcll
daa
out
dec
mov
lds
dec
dec
lcall
cltd
jg
push
mov
das
xchg
leave
scas
int
rol
cs
dec
adc
in
rolb
arpl
enter
cmpsl
mov
xlat
dec
sub
jle
aaa
mov
frstpm(287
cli
aaa
test
pop
adcb
jno
xchg
addr16
testl
les
cmp
js
incl
mov
cmp
es
movsb
and
fdiv
movsb
cltd
push
sbb
sbb
lret
pop
pop
xor
scas
repnz
ja
add
adc
jmp
xchg
mov
xlat
mov
lock
fdivrs
cmp
stc
es
add
jnp
lods
push
mov
inc
jae
cmp
jno
mov
cmp
leave
loopne
dec
cld
mov
push
out
out
int
fimull
mov
fimull
and
ljmp
fs
adc
add
sub
nop
mov
data16
mov
repnz
arpl
pop
mov
stc
and
mov
xchg
jle
sbb
mov
pop
pop
push
and
fbstp
daa
das
std
sbb
cmp
mov
jae
push
jns
negb
imul
aas
and
inc
shlb
cmp
fsubs
dec
pusha
decl
push
lods
incl
outsl
cmp
or
push
ss
cmpsb
pop
in
ror
fists
imul
mov
cltd
nop
lea
sbb
ret
inc
testb
adc
rcr
jmp
scas
dec
ret
daa
cmp
movsb
jge
ret
jns
test
enter
cmc
push
mov
push
subb
mov
inc
push
push
pop
mov
test
mov
fxch
jl
lods
outsl
rcrl
mov
add
add
aam
dec
mov
iret
test
push
or
lea
scas
xor
insl
add
je
out
jg
std
gs
sub
loopne
jns
popf
sub
insl
push
out
mov
scas
dec
pusha
push
outsl
lds
inc
ret
mov
jp
mov
dec
test
adc
xor
and
loope
out
paddsb
cltd
mov
or
add
jp
cmp
aam
jb
out
jle
push
ror
or
and
inc
jmp
ret
dec
sbb
push
rclb
sub
lcall
pop
inc
mov
ds
add
repnz
mov
push
and
push
fidivs
mov
jmp
inc
lods
pop
inc
and
sbb
mov
jne
or
adc
ffree
push
push
cmc
mov
sar
movsl
fisubrl
rorl
pop
mov
adc
orl
cmp
sub
xchg
sbb
mov
in
ja
das
aad
leave
es
daa
sub
insb
push
lock
test
fists
dec
adc
mov
mov
gs
xchg
bound
das
in
pop
or
shll
cmp
push
testl
jecxz
cmp
cmp
scas
dec
insl
inc
xchg
cwtl
fistpl
xor
fisttpl
outsb
std
mov
xor
and
out
cmp
pop
jmp
imul
in
in
mov
adc
aam
ja
jo
call
clc
push
fwait
outsb
fidivl
jbe
cmovp
rcl
push
mov
es
sub
mov
addb
push
mov
dec
jbe
fwait
mov
fs
sub
sbb
scas
stos
filds
mov
cli
push
loope
lret
cmp
mov
push
insb
sub
imul
mov
pushl
jge
cmpsb
insl
pop
mov
jg
jle
xchg
mov
outsb
jmp
stos
and
add
inc
adc
push
xchg
sub
xchg
mov
and
lahf
lahf
lods
je
inc
cmp
push
dec
ss
fisttpl
pop
fiadds
fsubrl
cltd
orl
lock
sbb
cwtl
push
dec
jmp
pushf
push
and
pop
jmp
dec
sub
jnp
xchg
push
cmp
sub
mov
jecxz
mov
rorb
das
test
cld
mov
and
hlt
data16
fs
pop
lahf
andl
push
pop
je
dec
call
cmpsl
sbb
mov
adc
pop
ss
aaa
nop
jb
cmp
sbb
xchg
cmp
sbb
outsb
and
sbb
or
or
push
cmp
mov
xchg
aad
jbe
lahf
movsb
inc
dec
call
jg
fs
and
fstpl
hlt
shr
jp
andl
scas
test
mov
cmp
in
mov
fcoml
push
sub
mov
sub
addl
sub
sub
sbb
in
sbb
push
cmc
out
imul
mov
sbb
not
and
in
leave
in
mov
mov
js
sub
push
cmp
clc
fidivrl
loope
jnp
adc
or
scas
loope
sbb
jbe
stc
mov
or
rorb
pop
jp
scas
sbb
out
and
sbb
inc
xor
mov
adc
push
jmp
mov
sbb
mov
xor
test
sub
and
lds
outsl
daa
or
pusha
aam
mov
faddp
std
push
pop
and
cltd
mov
leave
jo
jno
or
aad
push
add
push
xor
scas
add
or
ret
xchg
mov
cmpsl
sub
call
sbb
inc
ljmp
mov
or
fs
or
add
andb
jmp
mov
inc
out
mov
push
idivl
mov
jg
inc
mov
je
sahf
cmpsl
orb
aad
or
cmovns
decb
outsl
fstl
adc
mov
int
mov
xor
adc
daa
repz
pop
xor
jg
mov
sbb
and
aam
pop
das
sub
xor
inc
dec
movsb
mov
idivl
in
dec
pmuludq
sbb
push
loopne
ds
fcom
out
cs
decl
stos
pushl
jle
pop
int
aas
sub
cmp
mov
pop
loop
imul
call
jg
pop
ret
sub
bound
lea
imul
hlt
add
fsubr
jnp
test
loopne,pt
aad
pop
xchg
pop
cmp
imul
orb
clc
jne
arpl
sub
dec
adc
dec
sub
jns
cmpsb
bound
push
negl
mov
xchg
jne
sbb
jns
sub
fadd
cli
sbb
cmp
outsl
push
mov
les
push
sbb
paddb
out
add
std
adc
out
dec
hlt
adc
insb
mov
mov
lret
cmc
or
jp
fistps
dec
rcrb
popf
pop
or
jne
dec
mov
push
lea
cmp
mov
dec
cmp
sbb
outsb
sub
hlt
sbb
dec
lea
mov
push
mov
int
fnstsw
cmp
testb
lret
push
cmp
repz
xchg
push
or
es
cmp
jl
movlps
rolb
push
sub
fstp
xor
cli
or
push
adc
fldl
mov
jno
sub
inc
pop
test
divl
mov
int
inc
je
scas
pushf
stos
out
lcall
jnp
lea
sbb
pop
ficomps
xor
imul
aam
arpl
ret
add
repnz
push
insb
lods
add
cs
in
sbb
jb
nop
dec
push
sbb
mov
test
pop
inc
add
pusha
mulb
fists
add
push
pushf
pop
lock
sbbl
adc
icebp
arpl
jp
dec
pop
mov
loop
mov
fisttps
jmp
popf
jle
push
cwtl
aaa
sarl
push
inc
out
or
call
cmp
adc
es
or
inc
cmp
lret
and
jns
xchg
cs
push
xchg
mov
fucomip
je
ds
inc
and
popa
cmpl
mov
cmp
push
inc
pushf
out
gs
xchg
ds
loope
cmc
mov
dec
rcl
sub
aaa
outsb
mov
xchg
divb
adc
lahf
xlat
mov
icebp
dec
insl
adc
and
adc
ds
push
push
push
pop
mov
rcrb
mov
pop
and
popaw
lea
inc
das
dec
add
push
sbb
mov
cwtl
mov
test
sahf
sub
in
lret
ja
ficompl
push
inc
gs
jae
mov
gs
in
adc
orb
or
ljmp
popf
sbb
jnp
push
lea
loope
sub
int3
cmpsb
pop
movsb
cmp
xor
ljmp
jne
and
push
addr16
test
or
mov
inc
lret
mov
xchg
loopne
or
int3
aas
rcll
je
add
pop
sti
jno
sbb
push
rclb
dec
adc
and
int
clc
push
push
insb
imul
mov
clc
mov
cld
orl
adc
push
sub
cmpsl
fucomi
shlb
xlat
iret
inc
pop
mov
xchg
fidivs
push
push
jmp
cmp
popa
inc
mov
daa
jae
lahf
stc
sub
jmp
js
pop
cld
xchg
in
push
int3
push
adcl
imul
jno
xor
std
gs
xor
xor
or
pop
in
test
add
mov
sbb
imul
cs
cmp
dec
rorb
mov
arpl
cmp
sbb
popf
sar
loope
jo
daa
inc
nop
dec
and
and
mov
jmp
mov
and
push
mov
mov
bound
adc
adcb
inc
cld
or
scas
inc
xor
cmpsb
les
cmp
test
mov
cmpl
dec
popaw
mov
sbb
sbb
aaa
sub
sub
pop
lea
aam
cmp
outsl
andl
jle
xor
add
ljmp
js
fnstsw
imul
lret
test
jecxz
dec
lcall
testb
mov
popf
sbb
insb
pop
fcompl
std
lret
nop
sub
arpl
or
je
add
xchg
pop
or
imul
cli
ds
cwtl
aaa
imul
cmp
shll
popf
jb
mov
or
sbb
lods
mov
ss
lods
loope
outsl
addr16
out
and
cs
das
jmp
lock
inc
rorb
jnp
sub
xlat
aad
or
or
cmpsl
mov
fcomi
xlat
push
push
pop
inc
stos
pop
sbb
into
jg
jae
xchg
clc
inc
xlat
int3
gs
cmpsb
pop
leave
adc
aad
je
nop
xor
mov
mov
pop
mov
and
sbb
adc
lahf
mov
dec
rcrb
dec
jae
mov
mov
arpl
push
mov
push
lock
ret
push
pusha
fwait
cmp
pop
pop
loop
cmp
call
mov
sti
into
jmp
jge
outsl
sub
bswap
mov
mov
testb
pop
xchg
call
xor
ss
bound
sbb
ljmp
add
shrl
xchg
jae
stos
mov
pop
movzwl
lds
fprem1
xlat
test
pop
and
sbb
in
cmpsl
xchg
les
xor
cmp
jg
xchg
insb
sub
mov
mov
push
sbb
xchg
test
cmp
pop
cltd
mov
jmp
dec
ret
bound
xchg
in
jle
leave
xchg
outsb
pop
test
inc
pop
movsb
aaa
lahf
mov
sbb
rorb
sub
cmc
es
cmpsb
cmp
lret
xor
mov
xor
inc
iret
mov
ret
add
pushf
das
sti
jp
repz
pop
ds
push
fwait
movsb
rcrl
lea
scas
fimuls
loop
pop
insl
imul
popf
cs
jno
mov
lods
mov
cmpl
mov
sub
repz
and
pushf
pop
push
js
adc
imul
movsl
stc
std
dec
xchg
inc
lret
inc
pop
inc
shlb
orl
xchg
decb
cmp
lock
insl
pop
push
ret
inc
or
out
lret
jno
add
inc
mov
xchg
mov
push
sbb
add
out
sbb
mov
mov
adc
imul
mov
cmpl
insb
icebp
inc
movsb
das
or
popa
lods
ljmp
in
mov
rcrl
jle,pn
mov
cmp
push
repz
push
xor
sbb
addb
aam
fadds
inc
scas
mov
or
fsts
sbb
xchg
xchg
andl
dec
push
lock
mov
xchg
mov
cwtl
mov
cmc
sub
mov
int3
rolb
jno
xchg
pop
stc
into
int3
add
repz
add
aad
and
pop
fwait
adc
jg
xchg
add
and
cld
frstor
pop
mov
sbb
addl
sub
pop
in
push
lods
es
sub
in
mov
or
mov
mov
adc
cmpsb
mov
pop
add
mov
pop
sub
xor
popa
jmp
les
repz
mov
mov
dec
das
inc
pop
inc
dec
sbb
lds
mov
test
inc
hlt
aad
xchg
lret
xchg
icebp
jl
cmc
cmpsb
jmp
dec
ret
repnz
fnstsw
dec
dec
lods
pop
test
subl
imul
sbb
pop
mov
imul
stos
pop
ds
in
imul
icebp
xlat
and
mov
pop
xor
sti
jge
inc
int
or
xchg
adc
call
js
jecxz
inc
outsb
add
push
xchg
and
mov
sbb
and
jbe
bound
cwtl
arpl
mov
js
pop
mov
inc
adc
shr
ficompl
or
popa
popf
mov
shrl
xchg
nop
jb
lret
out
orl
sbb
mov
mov
out
aad
negb
mov
xor
push
test
outsb
in
or
cli
mov
push
ret
cmp
jnp
push
ficoms
cld
cmp
cwtl
sbb
inc
fstps
inc
into
pushf
xor
cmp
push
dec
xor
icebp
out
jno
xlat
dec
mov
mov
mov
outsb
aaa
push
popa
xchg
imul
mov
mov
int3
pusha
ret
pop
mov
sysenter
xchg
mov
orl
sub
ftst
adc
push
loopne
loopne
xor
outsb
sbb
dec
push
out
addb
pop
pushl
xor
mov
shr
jbe
aas
lods
cltd
mov
xchg
out
sub
cwtl
hlt
int3
rcll
ja
dec
adc
pop
dec
shrb
adcb
mov
lahf
daa
add
cli
adc
outsb
mov
fs
clc
pop
iret
adcl
inc
bound
push
xor
cwtl
inc
mov
movl
xchg
adc
mov
hlt
cmp
push
clc
add
jg
push
mov
lods
aam
cmp
mov
cmp
xchg
data16
fwait
inc
stc
adc
pop
out
inc
negl
cli
hlt
movsb
mov
or
xchg
jnp
inc
push
push
out
jmp
pusha
enter
push
inc
jg
pop
pop
popa
mov
call
mov
sbb
lods
mov
add
adc
rorb
aaa
rcrb
jmp
or
int
pop
into
icebp
mov
stos
std
in
xor
test
adcl
mov
pop
and
pop
push
mov
cltd
fcoms
clc
das
cmpsl
xor
sub
xchg
adc
jg
sub
mov
xchg
jg
jg
add
subb
rorl
bound
loop
mov
ret
lds
jmp
push
and
inc
mov
cmp
pop
mov
cmpb
daa
es
shrl
push
xchg
cmc
adc
inc
jmp
fs
fs
pushf
sub
mov
mov
pop
sbbb
mov
add
xchg
add
loop
rorb
xchg
and
xchg
fistl
lret
fildl
loopne
aas
cmp
cmpsl
movsl
sbb
dec
div
pop
cwtl
js
lcall
sbb
pop
outsl
mov
mov
shll
push
xor
mov
mov
xchg
jge
push
pop
push
ds
or
mov
aad
dec
adc
fdivr
mov
loope
out
mov
popf
adcb
dec
insb
jge
movsl
ja
push
xchg
daa
fs
stos
or
and
push
mov
rcrb
jl
andnps
and
mov
inc
xor
xchg
adc
mov
sti
stos
xchg
pop
add
scas
adc
das
jo
mov
sub
xchg
cmpsl
mov
sbb
out
sbb
andb
repnz
cwtl
cli
jge
aas
or
mov
movb
stc
inc
jne
mov
adc
fs
jnp
xor
cld
xor
icebp
adc
les
in
in
aam
pop
dec
jno
pop
sbb
or
and
lahf
inc
icebp
cmpsb
jno
mov
add
mov
pop
out
push
mov
xchg
xchg
mov
mov
frstor
lock
dec
push
or
jg
and
jl,pt
push
imul
outsb
test
adc
or
sub
pushfw
shrl
hlt
sahf
inc
and
xchg
ror
lea
xor
mov
imul
fbld
lds
shll
imul
jecxz
ret
cmpb
or
dec
xor
mov
and
fdivrl
out
xchg
cmp
jno
cltd
adc
cmovl
addr16
cmp
adc
popf
jae
mov
push
cmp
dec
int
dec
pusha
gs
rcrb
adc
xchg
and
cld
popf
je
adc
sarl
sbb
popf
adc
push
and
addb
sti
cmp
cli
add
xchg
into
arpl
mov
cmp
iret
adc
adc
push
xchg
loop
test
sbb
cmc
cmpsl
das
push
and
aaa
jp
icebp
jle
adc
or
jo
sub
lods
movups
out
jae
or
rorl
scas
std
push
mov
dec
add
aad
bound
push
std
ljmp
xchg
loop
push
paddusw
imull
pop
dec
xchg
push
fsubp
in
cli
js
roll
dec
cmpsb
inc
push
dec
imul
and
outsl
addr16
xor
lret
pop
mov
test
xor
cld
cwtl
decb
add
lcall
push
pop
pop
push
or
dec
ret
pushf
pop
pop
fcomps
inc
cmpsl
dec
test
mov
scas
mov
outsl
mov
insl
push
pushf
xchg
jle
rcll
fistpll
and
dec
test
sbb
and
int
ss
hlt
das
add
sbb
repz
xchg
dec
jb
fstp
lods
cli
add
xor
push
std
adc
mov
mov
ret
ds
movsl
and
test
jo
std
cld
cli
cmp
filds
leave
les
outsb
xor
xlat
inc
inc
sarl
enter
sbb
and
mov
call
ret
les
fwait
jb
inc
jle
int3
test
jne
and
mov
jge
mov
test
gs
shlb
dec
mov
idivb
daa
jne
sub
push
loope
mov
and
pushf
mov
insb
xor
push
inc
loope
shr
jae
pop
xor
xor
mov
gs
adcb
mov
mov
stos
hlt
jl
push
mov
and
cli
into
dec
sbbl
and
ds
outsb
xor
lret
into
lock
in
lods
mov
push
sub
cmpsb
sub
mov
jl
xchg
pusha
mov
hlt
in
aaa
xchg
mov
aas
pop
or
icebp
lods
xchg
sbb
and
shl
add
lahf
lods
sbb
mov
dec
loop
lret
mov
add
xchg
jnp
popf
pop
aad
fistpll
sbb
out
mov
adc
inc
lcall
loopne
aas
mov
push
push
aaa
shll
add
andb
subl
jg
mov
pop
sbb
iret
into
add
addl
lods
dec
ss
dec
adc
push
std
or
push
or
test
push
test
xchg
filds
leave
inc
in
xlat
test
jle
add
dec
mov
push
into
adc
mov
push
notb
mov
jnp
adc
fisubl
cmp
or
sarb
dec
jbe
inc
mulb
push
loopne
dec
lods
mov
lods
incl
push
andl
add
ds
in
xchg
mov
mov
clc
dec
int3
mov
push
cli
or
xchg
push
cmp
adc
les
and
push
shll
xor
shrb
or
shlb
or
repz
pop
rcrl
xor
pushf
jg
shlb
adc
xor
fsubrs
testl
mov
scas
out
dec
clc
les
lds
inc
cmp
jge
sbbb
daa
xchg
xor
les
mov
pop
jns
stos
mov
inc
push
xor
and
test
loopne
stos
jns
in
xlat
out
sti
push
inc
jb
xchg
jno
add
sbb
mov
push
xchg
insb
pop
rcr
cmp
push
jmp
or
pop
mov
and
adc
push
testb
cld
sub
inc
mov
in
lret
pop
pop
inc
shl
movsl
add
arpl
dec
add
leave
xchg
sub
add
clc
outsl
push
push
jecxz
mov
mov
bound
cwtl
pushf
loop
and
inc
fbstp
cld
mov
jmp
dec
movb
dec
into
ds
cld
push
xor
mov
sbb
fildll
adc
lea
xor
jb
jnp
mov
dec
js
stos
add
jmp
sbbl
pop
imul
adc
xchg
lock
clc
push
jl
and
adc
push
push
mov
xchg
mov
repz
jbe
mov
ds
sbb
and
aas
adc
aam
ret
mov
push
mov
punpckldq
out
nop
out
mov
push
dec
and
jg
pop
and
ds
mov
jecxz
dec
fs
or
pop
or
cmpsl
clc
mov
sti
mov
mov
push
bnd
mov
ss
jnp
mov
push
or
sub
iret
xchg
aaa
xchg
add
push
push
lds
lock
ss
cld
sbb
imul
iret
xchg
rorl
test
jns
jmp
inc
or
andb
push
push
push
xchg
ficomps
and
push
sbb
mov
sub
sbb
imul
leave
pushf
push
loope
pop
out
jecxz
push
js
add
test
ret
mov
cltd
xor
lds
mov
sub
dec
xlat
mov
jp
sub
mov
xor
int3
mov
xchg
add
int3
sti
sbb
jg
sbb
call
lret
imull
scas
xor
cmp
out
cmp
sub
sti
adc
shl
jns
xchg
jmp
loope
xor
mov
shlb
jmp
inc
imul
sub
mov
mov
mov
push
fcmovnb
adc
sub
into
outsb
mov
mov
mov
jnp
adc
shrl
in
aaa
aam
jl
sub
shrl
fwait
ss
int
and
iret
add
dec
xchg
mov
lret
mov
pop
mov
inc
adc
insb
push
mov
int
iret
xchg
push
dec
push
outsl
out
sahf
push
insb
aaa
inc
addr16
add
ja
sarb
inc
mov
jb
mov
sbb
shl
mov
jge
inc
xchg
call
les
mov
adc
inc
ja
mov
pusha
dec
or
iret
xchg
mov
add
iret
aaa
lcall
inc
daa
push
xchg
ljmp
loope
push
cmpsb
cmp
xchg
ficompl
scas
mov
xchg
cmpsl
jb
push
add
push
adc
jnp
pop
scas
popa
rorl
cmp
outsb
dec
push
jmp
push
dec
xor
jecxz
int3
or
add
imul
mov
rorl
inc
push
xchg
scas
neg
or
jp
mov
mov
gs
inc
pusha
shrl
push
ror
mov
mov
adc
mov
movaps
out
lock
aaa
xor
cmp
and
int
stc
mov
aam
pop
fistl
outsl
dec
ljmp
push
pop
shll
outsl
test
movsl
scas
je
jge
pusha
mov
in
in
push
xor
test
xchg
mov
sti
sbb
xchg
mov
xor
dec
xlat
dec
test
hlt
mov
cwtl
lds
outsl
jne
movsl
push
call
pop
cmp
mov
adcb
cmp
sub
adc
ds
lods
out
outsl
test
lods
repz
add
lcall
lods
rclb
loopne
out
sub
test
mov
xor
mov
adc
insl
dec
das
and
in
test
stos
ss
fsubp
mov
jecxz
jnp
outsb
jmp
sahf
sarl
aaa
ret
scas
pop
xchg
or
pop
mov
ret
repnz
addr16
mov
mov
push
stc
ret
mov
or
push
scas
jg
clc
and
out
cwtl
incl
mov
sahf
push
out
lret
dec
adc
mov
outsb
leave
adc
fwait
adc
push
xchg
jmp
xchg
mov
xor
hlt
out
les
ja
mov
jb
xor
cwtl
xchg
lock
push
aad
and
cmc
test
push
mov
test
mov
sub
inc
mov
scas
xorb
pop
mov
ss
sbb
hlt
pop
cmp
dec
inc
sahf
call
mov
pop
addr16
test
sbbb
das
push
xor
jecxz
sbb
pop
and
shrl
out
out
mov
rcl
movsb
push
sti
dec
and
loop
cmp
in
rcr
subb
mov
cmpsl
test
sahf
xchg
mov
mov
lea
jns
dec
or
ret
xor
cmp
cmp
jg
dec
dec
rol
dec
stos
jo,pt
xor
xor
jb
loope
stos
das
adc
mov
cmp
pop
and
adc
cli
mov
jbe
stc
mov
inc
cmp
dec
dec
xchg
mov
inc
cmp
push
dec
xchg
inc
dec
inc
add
dec
outsl
in
popa
push
mov
lds
xchg
sub
stos
subb
inc
sub
inc
dec
out
test
jbe
daa
fisttpl
sahf
mov
dec
das
cmp
pop
mov
sub
clc
hlt
repz
xchg
sbb
jp
in
ret
inc
dec
or
mov
xor
and
aas
or
es
add
jo
sahf
test
in
negb
lods
or
adc
lock
jl
fpatan
lret
and
clts
sub
lds
dec
andb
out
scas
arpl
sub
mov
and
cmp
cmpsl
jl
pop
mov
fs
dec
es
jg
adc
dec
popf
dec
xchg
cmpsl
xor
rcll
in
movsb
dec
push
xchg
leavew
cld
mov
xchg
std
fwait
mov
ja
mov
in
or
push
in
and
sub
flds
fcmovb
pop
pop
cmp
fsts
mov
xchg
repnz
sub
loope
movsl
in
frstor
enter
jle
pop
lcall
addr16
mov
cld
bound
cwtl
mov
call
add
pop
xor
rorb
pop
popf
lock
loop
test
mov
and
push
clc
cmpsl
popf
cmpl
and
inc
push
mov
mov
int3
xor
iret
inc
add
and
xchg
and
frstor
jle
jae
call
test
mul
xchg
fstps
mov
xchg
xchg
cmc
jb
xchg
xor
addr16
test
mov
push
out
and
loop
sub
pusha
sub
adcb
mov
jle
jno
cmpl
lods
xchg
cmp
xchg
int3
add
scas
insb
xchg
lret
addl
gs
mov
push
in
xorb
add
cs
stos
popa
cmp
imul
push
ljmp
xchg
lahf
imulb
ja
gs
mov
mov
and
test
inc
mov
fidivl
jecxz
jno
nop
pop
fsubp
imul
lret
std
bnd
jbe
into
add
loop
push
ret
xchg
pop
xlat
lock
rol
mov
test
push
js
mov
xchg
cmpsl
mov
inc
orb
inc
mov
cmpsb
push
movsl
lods
in
bound
adc
clc
loopne
jb
push
fucomp
fcomip
cltd
iret
mov
xchg
fsubr
mov
xor
repnz
add
xchg
aas
pop
adc
je
mov
or
xlat
jl,pt
xor
push
iret
sbb
xor
stos
and
mov
jno
add
sbb
jp
rol
or
addr16
xchg
pop
dec
arpl
loope
and
jo
ljmp
rcrl
cltd
int3
dec
mov
ror
jb
leave
daa
jmp
pcmpeqd
sub
sub
movsb
dec
or
mov
jae
dec
mov
mov
dec
test
push
ds
inc
loope
mov
mov
mov
jb
sti
js
dec
or
shlb
clc
test
push
push
pop
push
ja
cmpsb
repnz
push
push
jg
cwtl
sbb
arpl
jle
add
adcl
push
mull
stos
and
pop
cmpsl
xchg
cltd
addr16
sbb
inc
outsl
pop
int
or
mov
fists
xchg
scas
mov
cmp
xor
cmpl
ret
add
shrl
stos
sub
pmulhw
out
int3
adc
stos
mov
aam
xchg
loop
jno
cmp
shl
pop
cmp
lods
xchg
cli
dec
ss
in
mov
cmp
ds
mov
push
xor
loopew
cmpb
je
data16
xchg
andb
es
imul
mov
repnz
sub
ljmp
pop
cltd
pop
jmp
bound
in
insb
cs
xchg
and
pop
fsubrl
xchg
cmc
sub
jne
and
negl
xchg
mov
pop
testb
dec
cli
sahf
cmp
xor
imul
idivl
mov
in
sbbl
inc
loop
mov
das
xchg
mov
pop
fadds
add
outsb
jnp
jnp
movsb
xor
pop
add
dec
cmp
mov
mov
testl
hlt
pushf
insl
mov
push
jg
out
sahf
sbb
cmp
pop
insb
movsb
addr16
push
push
or
lods
in
push
test
cli
xchg
hlt
int3
in
push
xchg
pusha
push
cltd
jle
subb
pop
aad
out
jle
inc
sbb
in
dec
adc
fdivrl
cmc
pop
cmp
dec
cmpsl
pop
insl
ja
mov
shlb
movsl
mov
cmp
lods
cmpsl
mov
or
ja
shll
inc
inc
xlat
dec
pusha
out
xchg
cmc
lret
cmp
addb
mov
or
subb
mov
cmp
inc
out
adc
sub
enter
or
pop
rcl
xchg
jo
mov
mov
sbb
sub
adc
icebp
xchg
jnp
pop
dec
dec
dec
fs
rcrl
jle
push
ret
loope
aaa
sar
mulb
outsb
mov
push
mov
mov
icebp
and
insl
and
test
xchg
out
add
clc
mov
mov
test
cmp
cmp
xchg
lret
pop
fnsave
sbb
sti
into
mov
push
sbb
iret
iret
or
mov
rorl
sbb
dec
iret
push
jp
and
adc
mov
movsb
mov
repnz
sbb
inc
jno
dec
js
lret
popl
jae
xlat
pop
mov
repz
jbe
xchg
inc
push
push
adc
mov
pop
mov
enter
push
jae
sub
popa
loop
out
rolb
add
or
jo
lret
loopne
mov
cmp
dec
jae
and
decb
test
lods
lret
mov
sub
in
dec
shll
test
pop
in
pop
push
mov
jl
push
xor
xor
scas
or
jno
push
or
sti
jb
nop
ret
hlt
inc
mov
mov
fisubl
mov
mov
scas
cwtl
and
or
jnp
or
js
mov
mov
jnp
add
dec
ficomps
cmp
pusha
pop
stos
aaa
mov
pop
sub
mov
lock
push
cs
jne
fsub
out
movsb
sbb
cmc
test
stc
cmp
sub
mov
pushf
jmp
sbb
push
push
add
adcl
clc
mov
sub
ljmp
sub
cmp
movsb
popf
inc
aas
out
adc
and
mov
or
mov
test
mov
mov
out
ss
and
icebp
sub
in
push
cmp
or
pop
xor
sti
add
mov
xchg
xor
sbb
lret
jb
cmp
jmp
push
stos
jns
sbb
or
dec
push
sbb
cmp
out
pusha
push
cmp
mov
enter
adc
int
test
mov
roll
sub
pmuludq
dec
sbb
jno
and
lea
popf
cmpsb
dec
mov
mov
imul
shll
jl
push
test
pop
jb
out
dec
cmpsb
add
jne
jnp
cwtl
dec
jge
push
push
push
mov
lret
ret
fldcw
cwtl
cmc
aam
pop
inc
lret
sarl
or
pop
xor
je
cltd
pop
jno
lret
push
dec
push
ret
fadd
iret
xchg
movsl
mov
adc
js
cmp
cmc
lods
pop
pop
mov
pop
pop
pop
jp
jne
icebp
mov
xchg
xor
jmp
sbb
test
adc
sub
or
lods
call
mov
inc
lods
enter
mov
and
int
bound
push
adc
push
iret
mov
out
mov
loope
cmp
add
repnz
jmp
pop
push
sub
cmp
rep
movsb
add
repz
fcompl
add
jecxz
loope
add
jg
les
jns
adc
loope
ret
aad
sbb
lea
adcl
and
add
mov
adc
dec
jbe
xchg
movsl
cmp
dec
xchg
xor
ds
outsb
lea
pop
cmp
js
fmull
fadds
lahf
dec
xchg
mov
cmpb
dec
mov
cld
loopne
mov
out
aas
mov
das
fcoms
sbb
aaa
lcall
cltd
sarl
xchg
cmp
sub
call
sti
iret
add
cwtl
pop
and
sub
push
add
iret
test
or
and
fwait
push
add
repz
std
mov
popf
jo
mov
dec
pop
loop
push
outsb
fsts
jmp
push
enter
mov
lods
pop
and
jg
sbb
mov
lret
inc
ljmp
jno
sub
mov
jae
adc
add
lcall
bound
cwtl
test
roll
out
push
ljmp
sbb
outsb
popa
lods
dec
add
or
aas
jbe
test
xchg
mov
xchg
push
jb
adc
or
mov
hlt
mov
in
sbb
adc
jge
pop
jp
add
or
push
and
dec
fisttpl
jecxz
inc
daa
pop
scas
jae
cmp
test
mov
xchg
scas
mov
ret
add
popa
mov
mov
jl
leave
push
int
ret
pop
test
sub
out
jg
pop
out
pop
sti
aad
icebp
mov
fwait
inc
fldenv
mov
inc
sub
fs
sub
mov
sbb
pop
sub
insb
pop
std
movsb
je
test
pop
aad
clc
mov
out
push
cli
push
fwait
mov
push
mov
adc
and
xchg
lods
loop
loop
mov
mov
imul
adc
fnsave
push
and
push
aad
stos
sub
jl
xchg
imul
fldt
inc
sbb
cmp
mov
rorb
movsl
pop
shll
out
gs
or
dec
cs
jno
lahf
lods
push
mov
ljmp
or
aam
inc
mov
arpl
icebp
mov
pop
fwait
clc
inc
addr16
jge
shrb
fs
les
sub
xor
push
jmp
mov
lods
ret
dec
cwtl
scas
jb
pop
fisubs
push
nop
ja
push
adc
sub
out
or
icebp
jp
movsb
xchg
fwait
cmp
pop
rcr
add
sti
cmp
jge
jns
sub
xlat
pushf
inc
stc
and
xchg
imul
dec
jmp
clc
popf
fwait
push
das
stos
inc
mov
das
cmp
push
pushf
push
idivb
sbb
mov
mov
mov
fcomps
jo
xlat
cmp
gs
dec
addr16
mov
stc
mov
ret
aam
es
imul
inc
hlt
jns
add
ja
ljmp
outsb
lcall
and
repz
sub
iret
cmp
dec
or
and
mov
jns
sar
enter
dec
and
icebp
add
sarb
or
pop
sbb
rcrb
std
ret
jns
mov
pop
sahf
mov
outsl
aas
bnd
lret
inc
in
push
cs
and
lahf
out
cmp
out
clc
in
push
movzwl
mov
movsb
xchg
lea
adc
shl
and
fstpl
pop
mov
pop
and
push
sbb
push
push
inc
cmp
push
dec
cwtl
fmull
cmp
mov
shlb
in
loope
int
mov
fldt
xchg
insb
add
push
into
pop
pop
jmp
mov
lods
push
cmp
cmp
cmp
inc
in
cmp
mov
shll
in
in
pushf
push
aaa
cmp
cwtl
mov
cmpl
jmp
mov
or
mov
lret
lcall
xchg
or
nop
dec
adc
dec
daa
xor
inc
cs
mov
arpl
stos
enter
outsl
mov
out
je
test
mov
mov
pop
inc
or
outsb
jnp
dec
cmp
test
fwait
int
cmp
shl
test
sbb
imul
add
cwtl
jb
lds
ja
push
pushf
mov
jae
test
adc
imul
fcoml
sub
loope
adcb
mov
dec
sbb
add
cli
fs
int3
xchg
sub
cli
inc
add
adc
mov
sti
aad
cmc
lock
sub
sbb
jp
in
call
mov
dec
or
xchg
jb
lock
faddp
into
mov
imul
lcall
inc
fisubs
aas
sub
jnp
fnstenv
dec
mov
jno
xlat
daa
push
sub
fstpl
pop
bound
add
push
adc
pop
dec
add
jge
push
inc
mov
fcoms
ret
add
add
jb
js
cmp
jmp
addr16
outsb
mov
movsb
mov
or
cltd
jne
push
cmp
xor
sti
aaa
or
mov
aam
insl
jmp
sahf
pop
cmp
ja
out
xor
hlt
sub
fsts
fldenv
mov
leave
push
adc
adc
lods
test
dec
js
int3
pop
mov
or
fldl2t
inc
popf
jb
ljmp
pop
adc
dec
xor
clc
push
mov
pop
sbb
ds
fadds
xchg
mov
jo
and
aam
bnd
add
aad
jp
push
add
jp
dec
cs
es
insb
fbld
dec
xchg
shrl
xor
push
push
movsl
lods
fiaddl
inc
repz
fiadds
or
mov
call
out
movsl
ret
pop
cmp
sub
stos
push
xorb
fnstsw
lcall
or
test
and
int3
inc
dec
jge
jmp
js
dec
insb
xorb
push
dec
in
subb
jmp
mov
out
shr
imul
cmp
xor
cmc
push
sahf
jae
push
dec
jmp
pop
xor
popf
dec
jno
xchg
ja
add
xchg
dec
xchg
xchg
clc
mov
scas
ljmp
pop
pop
dec
rorb
les
pop
and
cmp
rol
push
cmp
test
pop
mov
out
jnp
jno
sub
cltd
xchg
mov
into
cld
jns
push
addr16
sti
mov
popa
and
outsb
push
xchg
adc
ljmp
jg
je
mov
or
jno
xor
and
add
inc
cs
mov
mov
inc
fsubrl
add
cmpsl
fucomi
sbb
jne
xchg
mov
jne
fcoms
je
fisttps
imul
dec
in
sbb
insl
cmp
clc
inc
in
sbb
imul
push
out
int
sub
jns
sti
push
repz
ret
nop
arpl
add
xor
jnp
orb
push
test
fimull
xchg
imul
je
das
xchg
into
cmp
pop
imul
and
xchg
adc
loop
mov
pop
test
stos
aam
sbb
push
pop
adc
dec
out
in
clc
push
pop
add
loopne
mov
jo
scas
out
nop
jecxz
aad
mov
mov
les
rol
push
jecxz
pop
jmp
inc
ss
clc
hlt
ret
insb
cmp
out
pop
add
lret
call
iret
cld
in
push
dec
jmp
sbb
push
in
aaa
jle
push
imul
push
cli
dec
pusha
cli
sbb
loop
fwait
pop
xchg
imul
test
aam
add
pop
in
mov
mov
divb
cmp
and
cmp
in
cmc
xchg
pop
testl
shl
and
sbb
or
lock
jl
lcall
in
and
cld
mov
cltd
mov
es
subl
pop
sub
call
testl
in
mov
pop
xchg
dec
ret
mov
push
jg
sti
or
es
iret
add
push
sarl
idivb
insb
mov
cwtl
mov
mov
xchg
or
jecxz
mov
flds
rcr
jo
dec
bound
mov
push
mov
add
or
cmc
outsl
mov
imul
shl
arpl
popf
fiaddl
cmpsl
insl
push
pop
push
paddsw
fwait
lcall
fwait
dec
pushl
loope
fsubrl
jmp
cmp
pop
stc
rorl
add
adc
in
pop
stos
aas
xchg
js
sub
in
push
into
pop
dec
cwtl
or
xchg
mov
or
arpl
in
adcb
adc
push
xchg
dec
fnstsw
cltd
inc
lret
xchg
sub
out
test
stc
inc
mov
mov
aaa
pop
mov
in
xchg
jl
cmp
out
pop
pop
inc
in
dec
jecxz
ficoms
mov
cmp
push
int
dec
mov
cmpsb
pop
mov
sti
lahf
cmp
outsl
pop
xchg
adc
sub
fs
repnz
repnz
mov
cmpsb
mov
mov
sbb
stc
push
push
sub
xchg
mov
cmp
dec
stos
xchg
or
jbe
pushf
ja
lahf
inc
sub
adc
or
jge
cmpsl
mov
sbb
and
pop
imul
push
jg
jbe
inc
in
sub
dec
in
imul
es
sub
xchg
mov
adc
mov
inc
and
popf
xor
push
jp
push
push
sbb
shrb
test
outsb
sbb
outsl
mov
icebp
int
es
pop
and
mov
adc
loopne
inc
ds
in
loopne
bound
arpl
push
or
rcll
and
push
test
rclb
xor
arpl
push
cmp
push
addb
push
cmp
int3
add
lahf
insb
test
ret
stc
rclb
push
jl
cmp
jne
aam
ds
sub
daa
pop
fdivrl
and
mov
int3
push
sti
sbb
sub
ljmp
f2xm1
xchg
in
mov
lret
dec
and
out
xchg
adc
sub
push
cmp
fs
outsb
or
fs
test
inc
jb
xlat
xor
push
jnp
outsb
sub
push
lods
and
rorb
or
xchg
dec
dec
ljmp
mov
nop
popf
pop
jne
rcll
clc
add
sti
jge
and
or
mov
loopne
or
scas
fidivl
xor
outsl
dec
repz
ds
leave
shl
bound
loop
in
fcompl
inc
sarl
and
inc
repz
stos
dec
scas
or
or
jb
adc
adc
xor
pop
lea
push
rolb
jno
fisubrs
ficomps
jg
aam
xchg
mov
clc
xchg
scas
pop
ljmp
xor
xor
lea
push
sub
int3
inc
negl
stos
adc
jno
addr16
mov
insl
sti
scas
aam
popf
ja
call
adc
enter
loope
cmpsl
jg
mov
and
je
inc
test
sbb
xchg
in
cmp
lcall
and
adc
mov
mov
mov
mov
mov
and
insb
jecxz
popa
mov
and
jnp
inc
mov
jl
cmpsl
jmp
js
bnd
mov
adc
sti
dec
or
jecxz
adc
lcall
sub
mov
mov
push
pop
sti
mov
mov
adc
nop
fs
js
sarb
shr
adc
xor
jno
jg
mov
das
add
push
sub
lods
sahf
ljmp
and
sbbb
sbb
or
adc
shl
fbstp
mov
add
inc
mov
aaa
push
adc
cmp
and
mov
das
and
popf
mov
rorl
jmp
push
jecxz
pushf
sbb
filds
jnp
loopne
pop
and
dec
int
pop
xor
gs
test
and
ds
test
ret
fildl
outsb
mov
das
aas
insl
stos
xchg
rcr
daa
repnz
or
loop
lahf
cmpsb
decb
xchg
push
mov
adc
icebp
cmp
in
insl
xor
lret
test
push
pushf
cltd
fsts
hlt
data16
loopne
iret
lea
daa
xor
xchg
or
imul
test
addr16
aas
jno
sbb
popf
mov
iret
jmp
mov
xor
dec
jecxz
repnz
xchg
jp
aad
repz
movsl
sub
lock
cmpsb
movsbl
push
jno
sub
outsl
fidivs
loopne
clc
out
xor
pop
jmp
clc
repz
pop
loopne
jg
imul
dec
je
shl
xlat
pop
xchg
mov
scas
cmc
push
lcall
rolb
mov
adc
dec
mov
sbb
xor
std
popa
iret
pop
or
xchg
cmp
mov
mov
rcrb
push
cmp
sbb
xchg
or
push
push
jbe
mov
mov
add
push
pop
sub
push
add
fwait
sub
imul
inc
call
or
xor
xchg
les
jge
mov
cmp
add
sub
and
xchg
out
mov
dec
mov
xchg
mull
scas
pop
inc
stc
lret
test
in
clc
jo
pop
pcmpeqb
das
fs
mov
cs
and
add
movsl
loope
inc
jg
xchg
jb
push
std
pop
xor
inc
outsb
mov
js
popf
rorl
std
jb
into
cmp
add
mov
fcoml
shrl
pop
mov
inc
notb
jne
xor
mov
lahf
mov
aad
sub
dec
icebp
mov
mov
xor
cmp
out
out
cld
fisubrs
in
jo
sbb
cwtl
jbe
xchg
mov
adc
stos
mov
or
lock
in
sbb
inc
cwtl
fbld
scas
xchg
arpl
sahf
push
sbb
shrl
lret
insl
mov
leave
dec
out
add
mov
jo
add
adc
adc
sti
mull
sub
mov
and
sbb
sub
int3
rcr
ret
xchg
sbb
jnp
jae
or
sbb
push
or
xor
inc
fstpt
std
mov
test
movsb
gs
sahf
mov
inc
roll
in
dec
imul
adc
mov
fcoml
jbe
int
jle
cmp
push
jbe
xchg
cmpsl
jg
jo
xchg
xchg
mov
add
xchg
mov
cmp
aam
pop
add
fsubr
and
pusha
into
and
push
lret
jp
insl
js
mov
scas
out
dec
jge
sbbb
hlt
sub
ret
cmpsb
push
pop
bound
jbe
push
push
jmp
das
inc
cmp
inc
push
inc
mov
pop
sub
adc
add
mov
sbb
inc
test
xchg
add
cmc
xlat
and
out
xchg
dec
je
ss
cli
push
lret
xor
into
push
adc
cld
add
cmp
push
lret
mov
jne
arpl
pop
and
fcmovb
jp
xor
in
inc
leave
xor
xorb
loopne
popl
in
icebp
in
push
cmpsl
sbb
out
shll
rorb
xchg
mov
or
inc
insb
mov
cs
sub
test
push
mov
push
lods
adc
repnz
in
push
lock
add
into
cwtl
mov
sarl
notl
adc
into
push
aaa
mov
lea
fs
sbb
mov
add
jmp
push
in
flds
std
inc
mov
fs
pop
sti
into
shll
sbb
movsb
push
in
scas
mov
lret
jecxz
jmp
adc
das
arpl
lret
mov
pushf
nop
sub
scas
ret
mov
inc
mov
jecxz
adc
iret
lahf
stos
mov
pop
lods
dec
push
mov
dec
cwtl
cmpsb
andb
push
cwtl
add
mov
dec
xchg
movsb
mov
jo
cmp
hlt
sbb
hlt
jne
mov
jo
out
cmp
lret
inc
mov
ret
inc
dec
js
jp
fcompl
xor
in
subl
jae
ds
fwait
ret
cltd
repnz
roll
imull
mov
and
call
int
lods
adc
stos
loop
rcl
inc
je
jl
or
jmp
adc
mov
mov
or
inc
mov
jp
es
jl
mov
mov
ds
lods
adc
sbb
adc
ss
jae
fidivrl
pop
daa
out
testb
fmul
add
outsl
popa
cmp
xor
ror
lret
ret
hlt
cmpsl
cmp
add
enter
fwait
std
out
movsb
je
xchg
dec
shll
and
or
test
xchg
xchg
icebp
and
out
or
push
sub
pusha
add
add
mov
mov
test
aam
mov
add
jo
xlat
mov
add
mov
dec
ret
inc
sub
test
jbe
loopne
fsts
xor
pop
jecxz
cmpsb
idivl
in
mov
fldl
das
mov
push
and
cmc
xchg
lcall
xor
xor
mov
mov
stc
pop
fdivl
sbb
adc
mov
jg
cmp
add
nop
outsl
push
je
push
pop
mov
cmp
nop
mov
push
icebp
mov
imul
adc
push
incl
int3
and
sbb
xor
in
lds
push
mov
test
int3
mov
xor
xchg
shrl
unpcklps
enter
mov
sbb
xor
jg
cmp
testb
insl
decb
cmp
jns
mov
enter
test
aaa
int
shl
cmp
lds
xlat
ficomps
add
mov
dec
rorb
mov
adc
stos
test
popf
and
mov
add
scas
stc
negb
push
add
je
hlt
push
icebp
mov
stos
sub
gs
cmp
jp
fstl
pop
xor
mov
test
sbb
or
or
aad
shlb
stos
dec
stc
in
sub
cmpsb
mov
leave
mov
lods
or
jnp
gs
sub
test
enter
push
icebp
fs
idiv
ds
sti
imul
lods
sub
adc
push
popa
enter
jb
out
lock
inc
sbb
push
jnp
xor
cmp
add
push
rcrl
sbb
js
dec
dec
xchg
pop
xchg
push
into
mov
insb
test
mov
test
push
imul
jnp
and
or
cli
jp
push
stc
and
clc
push
xor
sub
out
addr16
repz
or
adc
inc
xchg
add
sti
jnp
iret
push
or
aaa
dec
sarl
sbb
jp
xchg
sahf
sbb
cmp
and
fxch
fisttps
mov
jp
mov
mov
insb
cmpb
in
sbb
mov
imul
insb
mov
popl
ja
mov
in
fstpl
and
test
push
ljmp
xor
sub
call
pop
out
adcl
nop
mov
sub
lock
popa
filds
xchg
and
inc
rorb
dec
pop
or
arpl
add
cs
push
and
hlt
jmp
push
inc
mov
mov
test
repz
loop
jns
push
xor
mul
mov
mov
ja
pop
sbb
push
fiadds
jb
ds
add
in
cmp
xchg
in
mov
mov
inc
subl
test
pop
mov
push
shl
out
and
addl
xchg
lea
jmp
mov
pop
loopne
xor
xchg
mov
into
movsl
add
repnz
sbb
cltd
adc
mov
pop
movsl
mov
add
das
push
int3
add
or
xchg
arpl
les
movsb
sbb
mov
lods
cltd
int3
push
xchg
arpl
adc
xor
jmp
and
mov
sub
cli
pop
sbb
in
push
jmp
sbb
adc
into
xchg
rorb
add
xor
sub
iret
mov
or
in
cli
test
pop
les
sbb
sbb
dec
cmp
push
movsb
xor
in
xchg
call
dec
fsubs
mov
fwait
nop
aad
jecxz
hlt
daa
ja
movsb
call
mov
lcall
or
push
cli
cmp
xor
ljmp
lcall
pop
sub
jg
sub
mov
dec
cmpsb
nop
xchg
pushf
sub
pop
xor
je
sub
jmp
imul
sbb
iret
mov
pop
dec
daa
dec
cmpsl
mov
jno
mov
outsb
hlt
fadds
out
push
push
push
dec
dec
dec
jge
addr16
negl
push
enter
gs
adc
mov
insl
loopne
push
pop
insb
in
mov
push
xchg
sbb
push
jge
lds
hlt
loopne
pop
pop
adc
jns
jle
sbb
nop
push
mov
mov
outsb
out
inc
jl
fisttpl
cs
testl
pop
cmp
pop
daa
mov
stos
push
add
sub
repz
pushf
insl
lea
cltd
dec
fwait
shll
xchg
mov
push
loopne
scas
mov
pop
jns
test
dec
jne
stos
repnz
pop
lock
xor
out
pop
or
xlat
add
mov
clc
pusha
repnz
push
adc
mov
mov
dec
pop
add
fistpll
jmp
add
inc
add
int
push
pushf
in
cltd
pop
sti
pushf
popa
dec
out
lahf
pop
addr16
cld
or
xor
test
mov
xlat
adc
sahf
std
add
pop
loope
dec
sub
ss
inc
xor
dec
inc
ss
cltd
push
sub
xchg
adc
mov
lds
repnz
sbb
pop
adc
or
and
push
repz
ret
repnz
fsubrl
xor
sub
lret
and
jecxz
mov
xchg
mov
iret
push
int
into
jmp
jge
das
pop
inc
pop
pop
in
iret
scas
stos
jge
mov
mov
stos
xchg
push
out
enter
xchg
cs
xor
sahf
mov
push
mov
cltd
lods
jmp
test
lods
rcr
stc
faddl
das
push
sbb
test
mov
push
mov
fisubrl
or
cmp
mov
or
jmp
les
jbe
xor
test
push
adc
dec
mov
inc
xchg
test
mov
mov
repz
mov
sub
sbb
aaa
mov
sub
xchg
popa
mov
hlt
add
jg
push
mov
and
add
sbb
push
ljmp
and
push
lret
fs
push
sti
stc
pop
and
push
dec
sbb
cmc
jge
push
lods
mov
pop
cmpsb
mov
shll
add
fsubp
bound
push
mov
xchg
aas
idivb
jo
fisubrl
mov
insb
clc
or
mov
imul
mov
lods
scas
cmp
test
ds
mov
mov
bound
mov
lahf
movb
push
cmpsb
cli
pop
xchg
mov
pop
mov
test
in
pusha
lea
ljmp
dec
movsl
xlat
sbb
ror
test
sbb
mov
mov
jmp
jl
or
es
push
inc
mov
scas
jle
adc
mulb
mov
das
sbb
jp
pop
je
mov
js
out
js
sbb
lock
aaa
jns
data16
adc
movsb
push
inc
les
dec
pop
mov
clc
dec
pop
or
insb
pop
popa
andb
push
cmpsb
test
inc
cmp
icebp
sbb
jle
mov
add
mov
xchg
movsb
aad
mov
mov
xchg
cmp
xor
mov
addb
add
outsl
clc
movsl
cltd
scas
lahf
pop
jl
push
stc
add
outsl
test
and
lea
rolb
movsl
fists
or
mov
xchg
pop
shl
or
jecxz
mov
daa
lcall
xlat
mov
cltd
inc
pop
loopne
fisttps
mov
jl
mov
xchg
pushf
adc
dec
xchg
lods
and
xchg
scas
lds
push
or
bound
loopne
pop
sub
jle
das
sbb
jmp
xchg
cmp
cmp
sub
pop
inc
pusha
dec
popf
inc
sub
or
inc
sbb
jo
stc
pop
add
nop
mov
and
ja
mov
mov
xor
pop
out
scas
in
inc
cmp
daa
sub
scas
sbb
arpl
aaa
aam
jmp
push
mov
pusha
in
adc
pop
cmp
sbb
inc
jns
and
xor
divb
sub
mov
gs
inc
cli
mov
xorl
mov
aas
sub
in
ret
mov
push
xor
insb
xchg
mov
fcomps
movsb
mov
mov
das
nop
pop
add
or
arpl
dec
outsl
iret
jp
push
inc
cmp
cld
add
aas
xchg
ret
sub
cmp
mov
ljmp
jmp
test
cmc
into
sbbb
dec
jo
leave
int3
mov
cmp
fcmove
loop
ret
movsl
and
or
cli
mov
xlat
mov
nop
xchg
mov
cmc
setae
jae
call
push
arpl
xor
int3
leave
das
jmp
shlb
push
mov
lock
push
mov
popa
cmp
ret
add
mov
xchg
inc
test
out
pop
cmc
mov
push
mov
gs
adcl
mov
push
imul
cmpsl
les
sub
jns
movsl
jo
clc
mov
test
dec
rcrb
lahf
scas
aaa
adc
cmpsb
xchg
test
inc
rcll
xor
inc
sub
fidivrs
shlb
add
sbb
xchg
jae
shlb
cmc
pop
inc
cli
bound
ss
or
mov
add
pop
out
add
dec
adc
push
aam
sub
imul
mov
lods
sar
xchg
les
gs
cmpsb
jp
dec
mov
mov
fildl
pop
xchg
mov
jb
ret
shll
mov
mov
subb
aas
pop
imul
pop
add
mov
fcmove
nop
pop
sub
pop
jl
xchg
pusha
shrb
shll
add
jno
mov
xor
inc
stc
mov
in
xchg
or
adc
and
sarb
mov
aaa
inc
aad
lahf
adc
test
insl
xchg
cld
shll
jl
das
es
sub
fwait
mov
push
xlat
dec
jnp
mov
mov
fbstp
inc
clc
cwtl
imul
cmpb
mov
push
or
or
cli
insl
imul
cmp
dec
mov
mov
je
push
dec
xchg
xchg
fsubrs
in
push
mov
and
and
sbb
icebp
aaa
jl
sbb
stos
mov
inc
int
jb
dec
repz
xor
mov
mov
push
mov
mov
push
mov
cmp
pop
in
fdivrl
mov
dec
pop
pop
lods
push
mov
dec
sarl
push
cmp
adc
in
add
xchg
leave
adc
dec
ljmp
subl
xorl
sbb
rolb
mov
pop
push
sbb
dec
xchg
dec
and
push
mov
sarl
push
popa
xchg
add
cld
call
aaa
fdiv
scas
or
pusha
mov
les
sbb
ds
xor
std
rcrb
dec
add
cmp
clc
subl
lods
sbb
cmc
and
mov
loopne
sar
inc
xor
test
out
adc
lret
pop
pop
aam
insb
movsb
push
fmuls
xor
or
jecxz
push
lock
or
or
mov
xchg
and
stos
push
decl
inc
xchg
sub
lea
mov
addl
mov
insl
push
int3
insl
cmp
sub
imulb
cmp
clc
ds
call
stos
in
fildl
and
xor
adc
push
sub
sub
jae
js
jl
mov
cli
sub
inc
mov
fwait
push
gs
dec
lock
push
inc
mov
pop
sub
or
mov
les
push
push
mov
into
mov
push
push
dec
push
iret
add
sbb
mov
test
push
ret
test
sub
mov
sbb
or
ja
clc
ret
mov
jo
fbld
adc
fisttps
mov
out
mov
out
mov
stc
push
push
mov
push
dec
into
mov
stc
fcomp
pop
rolb
mov
scas
scas
cwtl
inc
dec
rclb
jle
rclb
iret
lret
adc
pop
mov
cmp
aam
lret
repz
clc
push
pop
mov
rcrl
daa
lret
lods
addr16
lods
dec
xchg
add
inc
std
xor
popa
mov
add
mov
ljmp
push
sar
push
test
aad
mov
pop
sub
scas
inc
push
and
and
cmp
mov
outsb
or
jne
or
sub
ret
ds
cmpl
shll
push
lea
rcl
mov
cs
push
repnz
cmc
jle
aas
pop
stos
xchg
in
xor
xchg
xchg
mov
lock
adc
or
es
scas
push
jecxz
ret
iret
lds
mov
dec
dec
dec
ja
loop
iret
mov
cmpsl
dec
and
out
pop
cmp
dec
add
xlat
xchg
ret
insb
sbb
mov
mov
cmp
push
fsubrs
popf
frstor
pusha
rcrl
push
mov
dec
mov
xchg
ja
mov
or
arpl
xor
mov
cmp
int
adc
out
arpl
shll
cmp
add
cwtl
sahf
nop
movsl
rcll
and
or
push
sub
inc
rol
adc
stos
xorb
push
mov
sub
push
gs
std
pop
stc
insb
push
mov
orb
imul
cmp
loop
mov
or
and
cltd
xchg
mov
aas
jne
stos
and
test
dec
popf
lds
movsl
mov
aam
push
sbb
fistpll
inc
push
sbb
scas
mov
xchg
imul
adc
es
and
xor
ljmp
js
push
popa
aas
scas
pop
scas
pop
test
jns
push
clc
mov
mov
test
mov
push
xlat
sahf
sub
sar
xchg
mov
push
hlt
xchg
xchg
popl
mov
in
sub
sbb
in
cltd
mov
cld
je
enter
rcrb
dec
push
pop
stos
pop
jmp
xor
or
out
sbb
mov
jne
and
inc
mov
mov
mov
repnz
pop
scas
inc
addb
mov
jno
mov
add
fisttps
fisttps
push
mov
je
aas
fmulp
es
cmp
pop
sarl
arpl
mov
cli
insl
adc
jae
jb
mov
lds
imul
clc
sarl
pop
call
stos
test
pminub
sub
mov
xchg
in
sbb
aam
dec
xor
pop
xchg
push
xlat
mov
jns
mov
jl
insb
push
pop
subl
and
test
fmull
jne
jbe
mov
push
or
fcoms
sbb
js
cs
xchg
lea
pop
loope
push
ja
jno
sbb
ss
cmp
lods
test
testl
bound
sbb
push
pusha
sbb
enter
pop
xchg
jne
sub
rcrl
mov
mov
push
mov
mov
lcall
movsb
sub
jno
jmp
pop
scas
jns
add
insb
rorl
sub
mov
fisubl
mov
fiadds
jge
fildl
leave
push
pop
pop
insb
cltd
cmp
pop
daa
jge
jo
daa
dec
pop
lods
cmpsl
sbb
dec
popf
sbb
xchg
hlt
fists
mov
sub
data16
xchg
sbb
mov
rol
cmp
mov
shll
or
add
inc
mov
mov
add
pop
pop
out
dec
cmc
shll
push
xorl
pop
xchg
cmpsl
jne
add
jbe
mov
sub
js
jb
mull
jnp
xchg
jae
lds
hlt
rcrb
push
stc
jge
mov
loope
xlat
jb
lcall
aas
rorl
clc
iret
push
adc
jge
xchg
and
add
data16
scas
and
mov
faddl
jae
stos
jmp
xchg
into
mov
sub
mov
xor
in
mov
test
jnp
dec
orl
or
rclb
mov
push
rcll
or
scas
shrl
inc
xchg
push
shlb
iret
fadd
jne
jle
mov
and
xchg
fadds
fidivrs
push
pop
ss
jae
popf
mov
imul
mov
push
xchg
xor
movsl
popf
xchg
add
sbb
andw
loope
pop
lock
mov
cwtl
jno
in
sub
push
mov
push
dec
in
or
lret
insb
call
mov
aad
in
jbe
mov
cmp
xchg
mov
cld
sub
push
lret
push
cmp
gs
push
gs
sbb
add
cmp
cmpsl
addl
cmp
in
xchg
push
enter
jl
addl
and
fdivr
orl
mov
mov
pop
bound
icebp
shll
pop
mov
jno
sbb
aaa
outsl
popf
sahf
cltd
into
and
cmpsl
sbb
cmp
repz
or
in
daa
adc
clc
sahf
inc
test
mov
pmulhuw
movsl
mov
sub
dec
xorb
hlt
js
cmp
ja
movsl
or
add
push
jo
mov
cmpb
pop
adcb
xchg
push
iret
cmp
mov
cmp
rorb
mov
decl
and
push
lret
scas
dec
fcmovne
cmp
pop
xor
mov
inc
xchg
orb
in
mov
sbb
out
dec
iret
mov
jle
cli
fimull
inc
mov
sbb
je
push
adc
mov
jbe
xor
xchg
data16
icebp
mov
hlt
sbb
adc
arpl
aas
test
hlt
and
dec
xchg
aaa
xor
mov
movsl
xorb
or
hlt
sub
cs
inc
mov
pop
or
xor
aaa
pop
into
daa
imul
pushf
adc
mov
aam
cli
xor
movsl
and
dec
loop
sub
jl
pop
jno
push
mov
fildll
or
mov
inc
es
pop
jp
mov
inc
shll
adc
movsb
and
js
test
mov
xchg
mov
cld
insl
popfw
cmp
add
int3
and
stc
mov
jp
mov
push
pop
and
dec
mov
nop
sub
pop
sahf
mov
aas
push
clc
inc
jecxz
pop
sub
and
sub
sbb
or
add
in
and
sbb
aad
mov
loop
sub
arpl
loop
lea
inc
hlt
sahf
rcll
mov
out
cmp
dec
data16
test
sub
dec
mov
std
and
std
lds
cmp
xor
fistpll
xor
sbb
pop
std
scas
pop
cli
out
mov
insb
fidivl
into
xchg
dec
dec
adc
cmp
lods
leavew
es
sub
orb
pop
pushw
lret
sahf
adc
cltd
pusha
int3
int3
mov
push
cmp
arpl
out
test
xchg
inc
int
adc
add
movsl
xchg
call
sbb
das
jp
and
push
lods
mov
inc
push
repz
aad
pop
sub
xor
stos
loope
js
and
xchg
mov
dec
pop
out
out
and
inc
jno
int
mov
xor
and
jmp
scas
stc
mov
push
cli
arpl
mov
sub
sbb
cmc
cmpsl
dec
mov
xchg
in
or
xchg
pop
dec
mov
lcall
das
xchg
adc
stc
jo
sub
setl
jbe
je
sarl
sbb
push
pop
jae
decl
inc
add
sbb
lea
jae
js
ss
rol
loopne
add
adc
adc
fs
dec
outsb
and
imul
sbb
jnp
jo
aas
xor
mov
insb
and
sbb
out
jle
or
das
das
rorb
xlat
pop
leave
pop
ret
mov
xor
loope
outsb
mov
inc
adc
xor
jge
outsb
outsb
sbb
sub
aaa
pop
call
and
inc
jns
or
cmpsl
or
inc
aam
xor
xchg
loope
or
jo
stc
sahf
in
push
cmp
cli
jmp
sub
or
imul
adc
mov
push
sti
shlb
mov
mov
mov
dec
sub
push
mov
push
add
xor
out
aas
jbe
sti
push
xchg
fs
jmp
xchg
jne
sahf
gs
jmp
insl
inc
xchg
xchg
pushf
ss
mov
pushf
lods
adcl
inc
lcall
sbb
jmp
fcmovnb
addl
jge
ja
bound
mov
cmp
jge
ret
sbb
mov
sub
sub
or
push
mov
test
dec
hlt
cmp
cmp
push
cmp
stc
popf
jg
add
xchg
pop
or
mov
mov
cwtl
mov
mov
xor
divb
pop
push
push
repz
movsb
lock
push
cmpsb
stos
jne
mov
out
ja
xchg
inc
push
dec
xor
fisubl
loopne
movsb
push
sahf
jnp
je
xchg
inc
jg
fldt
sbb
adcb
jns
cmp
push
mull
push
dec
repz
dec
pop
enter
xchg
jo
and
jns
aaa
je
jle
xchg
lret
roll
bound
iret
xchg
push
push
mov
in
jnp
xlat
jmp
pop
or
sub
and
xor
xchg
ljmp
orl
mov
cs
add
adc
sub
jbe
push
lahf
fcomps
ds
mov
cld
lods
cmp
push
cmpsb
loop
stc
es
inc
cmp
sbb
fimuls
push
mov
xor
sbb
into
or
loope
lcall
ss
imul
loope
and
shlb
xchg
sbb
enter
sahf
fsubr
xchg
cmp
jo
push
gs
sbb
mov
xchg
lret
out
push
std
out
rolb
inc
mov
test
sbb
xchg
jae,pt
lds
mov
in
dec
pop
push
push
adc
jbe
xchg
sarb
jp
in
ds
hlt
cli
add
push
stos
cmp
jne
popf
das
fadds
cmp
ret
inc
inc
jno
cmp
sti
in
sub
and
int3
les
mov
scas
push
cmp
insl
cld
lcall
aad
negl
fsubrp
xchg
adc
mov
push
pop
addb
test
sarb
lods
jge
cli
mov
inc
loop
shrb
fisttps
popa
mov
imul
adc
mov
cmp
jmp
jne
dec
add
pop
mov
loopne
jne
inc
sub
addr16
pop
xlat
outsb
inc
jle
and
mov
repz
mov
inc
lods
sub
sahf
jp
dec
and
and
mull
adc
movsl
movsl
dec
ret
jecxz
mov
lcall
jge
cmpsl
lcall
mov
ret
push
fs
test
or
pop
sub
inc
push
call
xor
inc
mov
mov
push
xchg
popf
sahf
das
dec
scas
mov
cmp
xchg
sub
movsl
sub
shlb
cmp
mov
mov
ret
lret
call
test
cld
dec
mov
test
jbe
cmp
mov
loop
xchg
jl
mov
cld
outsb
jecxz
les
mov
push
mov
mov
sti
cmp
int
shrb
flds
jmp
lret
inc
scas
jne
nop
dec
jne
cmp
add
jo
xchg
jmp
rorl
adc
mov
add
push
fdivr
movsb
ret
add
mov
loopne
loopne
xchg
lods
add
loopne
mov
jg
daa
ret
cmp
insl
push
adc
cli
jmp
dec
lret
scas
xchg
adc
incl
xlat
rcll
mov
sbb
jmp
in
inc
into
fisubs
je
sbb
aad
pop
movsl
jecxz
cmp
in
popf
cmp
or
pop
dec
sbb
addr16
push
push
lods
dec
fwait
jb
pop
outsb
repz
rcll
adc
fsubs
imul
cmc
xchg
insb
mov
xor
jmp
ret
xchg
movsb
in
inc
fildl
aaa
xchg
push
pop
je
jge
out
cmc
std
stos
xchg
sbb
roll
stos
and
repz
pop
dec
add
shlb
jb
jp
cs
into
adc
scas
rol
das
clc
pop
dec
shrb
sar
jmp
inc
inc
cwtl
mov
rclb
mov
jmp
mov
test
dec
mov
jp
arpl
lahf
popf
loope
test
sti
les
cmp
jl
push
insb
add
and
xchg
dec
popa
cmp
jno
ja
jge
mov
rcll
xchg
xor
cmp
push
push
sub
scas
inc
jb
shll
mov
fwait
addr16
add
test
push
mov
add
scas
out
jle
sbb
pop
out
add
repnz
in
sti
and
jge
xchg
aam
lods
xchg
movsl
daa
aad
lahf
adc
out
jae
pop
and
inc
outsl
pop
xor
sarl
ja
adc
inc
out
addr16
xor
roll
shrb
add
cmp
ljmp
insb
or
sub
cmp
add
stc
fs
lods
sti
repnz
ss
lods
jae
bound
jb
and
cld
and
push
sub
cmp
xor
mov
xor
push
in
lcall
push
dec
in
leave
lcall
inc
inc
std
pop
inc
stos
aam
or
sub
mov
jo
jnp
inc
push
jnp
fsub
daa
inc
add
ja
rclb
xchg
pop
aaa
sarb
mov
shll
mov
je
das
out
hlt
jge
shll
mov
pop
and
decb
sub
xor
repz
hlt
fcoms
popa
mov
movsl
sbb
sub
mov
mov
adc
mov
idivb
sahf
adc
es
pop
adc
dec
notl
dec
int3
push
out
sbbl
xchg
or
cmc
cs
adc
rolb
out
fwait
pop
xlat
push
daa
mov
lock
mov
gs
in
cmc
jne
xlat
data16
mov
pop
aaa
repnz
in
loopne
movsl
inc
ljmp
loopne
sahf
clc
add
mov
jmp
ja
cmp
add
cmp
push
mov
pop
out
sub
xchg
mov
xchg
mov
jae
rorl
add
subb
jbe
mov
stc
push
repz
or
sbb
test
fwait
lea
in
cmp
arpl
cmc
xchg
cmp
stos
rcrl
dec
leave
inc
ret
popf
jno
mov
add
cmp
fldt
jmp
jle
ret
xor
sar
mov
push
frstor
icebp
push
jmp
aas
stc
mov
push
inc
pop
repz
jns
sbb
cmc
test
mov
loopne
push
or
frstor
mov
call
push
mov
push
lea
out
and
dec
pop
cmc
jne
sar
iret
sbb
pop
cmc
inc
sbb
movsl
lcall
adc
push
jecxz
jg,pt
fsubl
rorb
repz
iret
push
aad
aad
xor
mov
cmp
shll
inc
mov
sar
gs
stos
inc
je
inc
ljmp
aas
mov
xchg
jmp
mov
adc
shl
jle
sub
and
xchg
cmpsb
lock
out
jb
inc
ljmp
cmp
outsb
dec
mov
ret
mov
aas
je
cmpsl
pop
cwtl
in
mov
movsl
jno
push
pop
jecxz
jo
push
cwtl
daa
mov
test
cmp
or
ss
leave
jl
out
jge
sub
xor
shrl
and
mov
icebp
mov
lock
outsl
jp
ljmp
jmp
pop
std
loop
dec
mov
in
sub
scas
lods
jo
insl
dec
popf
fisttps
sub
xor
mov
push
xchg
movsl
clc
push
repz
xchg
je
xlat
push
mov
mov
xlat
push
outsb
add
mov
in
fidivs
fnstsw
pop
pop
mov
repz
test
mov
adc
idivb
fiadds
std
repz
mov
adc
sbb
nop
punpckldq
dec
inc
mov
ja
xchg
sub
mov
ljmp
sub
js
sbb
sbb
cmovo
sub
xor
xchg
fisttps
pusha
imul
pop
mov
inc
or
bound
mov
pop
addr16
mov
sub
lahf
or
ds
sub
pop
dec
cwtl
lret
jnp
in
repz
mov
inc
ret
movsb
jle
ret
or
xlat
into
mov
inc
xchg
lock
push
insb
inc
imul
je
scas
pop
es
xchg
xchg
call
lds
call
mull
add
aad
pop
fidivrl
lret
inc
mov
cmpsb
xor
std
or
add
repz
popf
insb
jae
dec
adc
push
and
orb
test
flds
mov
mov
sbb
aas
lcall
ljmp
dec
mov
add
cmp
mov
out
jg
clc
in
fmull
imul
adc
inc
push
push
mov
cmp
sub
mov
outsl
xor
es
cmp
lret
and
inc
add
notb
jge
stos
push
out
sahf
mov
loop
test
mov
sbb
popa
jae
lock
push
sbb
and
sub
or
pushf
xor
fstp
add
or
cmp
sbb
mov
sbb
fiaddl
arpl
es
pop
in
xor
inc
xor
jne
sbb
outsl
lret
gs
dec
pusha
jo
jne
xor
mov
call
jb
mov
jo
jg
sahf
test
lahf
out
les
and
jge
push
cmc
sub
xchg
daa
jg
adc
fisttps
xchg
outsb
imul
les
mov
jno
pop
cmp
mov
push
leave
subl
pop
cmc
pop
jbe
imul
dec
and
bound
push
mov
xor
and
inc
in
mov
or
sbbl
sub
jecxz
sub
add
jbe
sub
cmp
addr16
jne
inc
xchg
imul
aas
cli
fsubl
test
sbb
popf
sbb
pop
xchg
repnz
add
popf
pop
xchg
int3
mov
in
sti
sub
fimuls
repz
push
in
mov
lahf
lahf
imul
sbb
movsl
mov
movsl
or
rcr
loope
push
mov
stos
adc
lods
xchg
pushaw
sub
mov
aaa
loope
add
aaa
fsts
xchg
icebp
pop
mov
jg
inc
es
adc
into
sarl
imul
div
mov
fnstenv
decb
fnstcw
mov
xor
ds
cmp
lret
cli
pop
popf
push
in
xor
rolb
test
cmpsb
jg
or
inc
jge
pop
inc
jge
out
iret
fstpt
mov
dec
fsubrl
jo
ret
pop
xor
sbb
ja
in
push
mov
mov
sbb
and
mov
pop
xchg
push
in
pop
dec
dec
inc
popa
ljmp
jmp
sbb
rclb
xor
xchg
in
rclb
dec
push
outsb
cmpsl
lret
pop
int
iret
mov
sub
lcall
xchg
in
or
xlat
jge
retw
sub
fnstenv
out
xchg
gs
jno
inc
stos
push
mov
lods
std
sbbl
jge
or
pop
sub
cli
mov
fldenv
fwait
sbb
sub
loopne
adc
popa
pusha
mov
leave
out
scas
cmpsb
pop
idivb
mov
push
sbb
mov
test
fcmovu
or
lret
push
sub
mov
sbb
xchg
mov
xchg
jle
jmp
aas
push
imul
jp
cwtl
hlt
test
cmp
lods
sub
test
pushf
and
inc
jnp
stos
mov
fildl
mov
xchg
inc
and
in
add
test
sarl
scas
cmp
or
lcall
mov
bnd
mov
adcb
mov
int
rcrb
or
xor
jmp
push
fs
push
or
sub
rorl
xor
lds
push
std
fmuls
in
aaa
cld
ljmp
adc
sub
mov
paddb
leave
pop
sub
loope
fiaddl
mov
cmpsl
imul
and
adc
mov
pop
xchg
inc
mov
jae
xchg
roll
xchg
mov
addr16
or
test
es
aas
out
sar
ljmp
popf
pushf
jg
addr16
jp
pop
loop
and
lahf
add
pop
mov
in
bound
or
jb
out
or
xchg
sub
out
out
add
insl
ljmp
mov
sbb
xor
popf
cmc
and
lods
push
jne
or
in
dec
inc
dec
xchg
bnd
pop
test
mov
push
stos
inc
pop
lcall
fsub
dec
and
push
mov
dec
pop
pop
pmulhuw
adc
sub
add
mov
dec
xlat
shll
insl
lock
and
mov
and
je
inc
daa
cwtl
pop
pop
or
xlat
sub
cmp
cmpsl
in
out
sub
test
jmp
out
inc
dec
leave
cltd
add
sarl
push
cmpl
dec
adc
push
mov
bound
cmpsb
lret
and
inc
mov
cltd
hlt
push
out
inc
xchg
xchg
mov
popa
roll
xchg
push
inc
jne
or
js
mulb
repnz
ja
cmp
out
inc
mov
frstor
mov
mov
xor
adc
arpl
mov
jmp
xor
inc
add
inc
lahf
cmp
pop
out
push
jb
cmp
andb
and
movsl
scas
xor
ja
in
in
shrb
mov
lret
jg
es
or
enter
xor
mov
ficoms
and
jg
pushf
jne
icebp
arpl
sbb
dec
test
test
pop
mov
gs
ret
rcrl
lea
mov
sub
js
pop
int
push
mov
adc
xor
cmp
xor
pop
and
add
out
mov
repz
sub
push
pushf
push
out
dec
outsl
shll
xlat
push
testb
inc
ja
mov
popa
rorb
jmp
xchg
cmp
xorb
je,pt
cmp
aam
add
sahf
adc
push
ffreep
fmuls
jge
xchg
ss
xor
dec
aam
adc
mov
add
mov
lea
mov
fildll
pop
xchg
mov
jae
cmp
add
jecxz
iret
gs
lcall
add
fmuls
imul
mov
mov
ret
in
lret
fsubrs
cs
cli
fistpl
popf
push
cs
int
cmpsb
fiadds
cmp
mov
cmpsl
xchg
testb
clc
cld
iret
aas
inc
push
pop
dec
mov
xchg
fstpt
inc
inc
sub
and
mov
xor
cmc
scas
fsubrp
push
mov
or
lock
mov
cmp
pop
mov
lock
call
jecxz
addr16
cmp
es
les
sub
into
repz
shr
mov
mov
push
outsb
clc
add
jl
pop
or
call
test
inc
jnp
out
lods
and
repz
mov
fdivrs
ret
sbb
scas
xor
je
enterw
xchg
jae
sub
test
loope
jno
xchg
jo
xchg
xor
xchg
loop
push
dec
mov
outsb
sahf
push
loopne
scas
in
xchg
in
call
nop
pop
mov
push
mov
iret
dec
sbbb
fcmovnbe
dec
sbb
cmpl
sar
mov
cli
cmc
dec
cmpsl
jb
hlt
adc
xor
icebp
pop
and
inc
adc
sti
ret
jle
daa
push
adc
mov
xchg
inc
cmpsb
mov
out
test
scas
into
push
lret
pop
pop
in
jge
incl
adc
std
add
jmp
pop
mov
mov
popa
dec
int3
xchg
lret
popf
xorb
mov
cs
push
aaa
dec
and
mov
xchg
cltd
push
xchg
jg
pop
add
or
adc
das
clc
in
sub
or
andl
mov
aam
ret
cli
push
and
sbb
hlt
dec
and
popa
push
je
mov
outsl
fimuls
lods
jo
movsl
insl
sbb
add
inc
dec
xor
mov
mov
fsubrl
sub
sub
aaa
daa
xor
out
pop
push
in
rol
push
sbb
out
aad
pop
fstl
roll
daa
sti
test
cwtl
sbb
loope
push
lret
orb
mov
cs
xchg
sub
sbb
mul
inc
cltd
dec
lahf
repz
and
push
out
lea
cmp
test
icebp
in
je
cli
push
inc
mov
fadds
and
fisubs
test
mov
push
xchg
adc
mov
sar
add
ljmp
cld
lds
sti
jnp
cwtl
dec
pop
push
mov
ds
mov
fsts
xchg
sbb
cmc
or
test
jo
jne
aas
outsl
ljmp
cmp
push
sub
in
das
lret
aaa
xorl
xor
pop
cmp
jg
in
out
cmpsb
jnp
mov
pop
cmp
int
cmc
sahf
stc
xchg
cmp
dec
iret
adc
add
push
mov
mov
ret
mov
add
push
sahf
test
cmpb
push
xchg
shrl
mov
sub
adc
push
dec
inc
adc
add
rcrb
mov
mov
mov
mov
xor
dec
mov
imul
adc
cltd
adc
arpl
add
dec
cmp
xor
mov
hlt
pop
pop
lods
repnz
adc
arpl
push
mov
pop
and
lcall
pushf
insb
test
add
mov
mov
shll
add
adc
or
dec
cmp
xor
scas
lods
sub
lods
arpl
rorl
pop
and
xlat
lods
test
mov
into
or
xchg
gs
inc
mov
inc
or
push
mov
pmulhw
into
outsb
mov
jecxz
lcall
ss
fcoms
and
push
mov
les
out
pop
mov
into
xor
sbb
adc
fildll
hlt
jbe
dec
xor
adc
add
ret
call
cld
das
test
bound
pop
sub
pop
push
rorl
shrl
inc
pop
jmp
test
mov
inc
pop
cld
sbb
frstor
sbb
cs
lds
xor
inc
dec
jne
jmp
std
cmp
inc
pop
xchg
repnz
add
sbb
cmpsl
mov
sub
pop
insb
mov
call
inc
cmp
sub
jnp
in
adc
ja
pop
dec
dec
adc
dec
add
jmp
mov
pop
mov
notb
mov
push
fnstenv
pop
mov
pop
jl,pn
outsl
dec
shlb
xchg
loopne
sub
test
fdivrl
pop
or
push
scas
pushf
mov
push
cmp
es
icebp
jns
rcr
pop
push
int3
pop
jmp
fsubr
je
es
pop
push
or
mov
das
inc
daa
jge
int3
or
clc
mov
das
fimull
dec
out
pop
iret
fnsave
std
sbb
jecxz
icebp
call
dec
xchg
test
mov
or
in
mov
jmp
xchg
mov
or
dec
inc
inc
dec
mov
mov
aaa
pop
or
sarb
jp
das
inc
adc
xchg
ret
xchg
or
mov
pushf
push
add
or
push
lcall
xor
inc
mov
nop
in
and
scas
or
daa
out
notl
in
movsb
ljmp
xor
ss
dec
in
es
popa
fcomps
lret
adc
sbb
cli
in
mov
popa
in
and
pusha
out
and
imul
cmp
insb
cmp
ljmp
inc
inc
movzbl
adc
shrl
and
scas
outsb
xchg
mov
jnp
ror
bound
adc
add
pop
in
sub
inc
data16
sub
jb
inc
dec
mov
pop
dec
lcall
fldl
push
stos
repz
mov
inc
rolb
lret
or
aad
mov
push
sub
test
and
add
std
arpl
insb
xor
mov
mov
adc
mov
jecxz
ljmp
loopne
dec
out
jo
mov
xchg
call
jle
ljmp
xorb
lcall
xor
das
addl
data16
fstpt
push
aam
jl
arpl
push
sbb
in
xchg
les
or
roll
mov
cwtl
jle
sbb
movsb
incl
xor
cmpsb
sub
sub
loop
rcl
inc
xchg
cmp
add
test
mov
push
dec
xchg
xchg
add
fsubl
pusha
fdivl
push
cwtl
addr16
or
scas
mov
in
push
mov
mov
mov
sar
test
mov
ds
add
arpl
icebp
or
test
pop
enter
sti
mov
xchg
scas
fdivl
cs
mov
push
add
es
fsubrl
mov
and
imul
dec
sub
adc
sahf
mov
std
das
jns
fistps
pop
fidivrs
lock
push
jp
push
into
outsl
xchg
add
loop
or
rolb
pop
add
mov
jb
push
xchg
jmp
jle
cmp
jp
mov
cmpsb
and
adc
pop
dec
add
dec
push
cmc
mov
hlt
insb
push
scas
push
shl
popa
sbb
popf
repz
adc
push
ljmp
pop
mov
out
jns
xchg
aaa
lcall
adc
push
call
mov
lods
sbb
lock
mov
xchg
xchg
stc
pop
int3
pop
fdivrs
inc
bound
xor
mov
cs
mov
in
inc
push
sub
push
sub
xchg
out
adc
mov
ljmp
push
xor
or
call
dec
or
lcall
inc
jecxz
xor
outsl
mov
mov
cmp
pop
push
jl
push
jg
shll
xchg
xchg
mov
jbe
jbe
sub
dec
xchg
adc
mov
mov
add
and
cmpsb
pop
nop
mov
shll
adc
push
dec
insl
xchg
xor
aad
addr16
and
pusha
not
and
test
xlat
lcall
or
lcall
fcompl
movsl
nop
gs
imul
dec
xor
int3
test
insb
mov
push
fsubrl
dec
pop
mov
xor
ds
jnp
push
enter
lods
mov
mov
int3
add
es
rorb
testb
or
cmp
cmp
dec
lds
rolb
push
in
and
fsubs
dec
add
and
pop
or
xchg
xchg
sub
scas
mov
mov
sbb
inc
inc
int3
cmp
cld
fistpll
cmp
push
int3
sub
shlb
push
cmpsl
or
pop
cwtl
mov
pop
mov
repnz
mov
push
inc
fsubl
push
stc
ret
rorb
and
lods
inc
inc
aaa
jne
hlt
add
jne
fdivp
pop
ret
inc
add
jle
lret
pop
mov
scas
pop
stc
mov
pop
xor
sbb
les
inc
out
into
pushf
repz
mov
divb
pop
outsl
mov
cmp
and
xchg
add
push
outsl
mov
scas
or
insl
jecxz
pop
outsl
not
verw
xchg
or
push
mov
incb
out
rol
push
and
xchg
mov
sub
inc
push
in
add
movsb
sub
dec
stos
fs
xadd
enter
and
loope
xchg
or
repz
add
xor
pop
aam
repz
mov
iret
pop
jg
stos
out
repnz
pop
cli
jmp
or
sub
mov
jns
dec
jnp
jecxz
cmpsl
mov
pop
stc
add
inc
xchg
out
or
ror
jle
xlat
sub
xchg
jg
jp
clc
pushf
data16
lods
jnp
cmpsl
xchg
or
push
mov
push
ss
out
ja
out
ds
sub
push
xchg
hlt
mov
xchg
mov
xor
jbe
data16
jmp
xchg
sarl
enter
pop
jo
fwait
hlt
mov
out
mov
sarl
arpl
add
sbb
inc
jns
cmpb
icebp
mov
bound
dec
cwtl
jp,pn
jle
push
push
andl
sbb
adc
insb
idivb
dec
add
sbb
cmp
popa
xchg
mov
add
insb
xchg
out
mov
dec
push
and
cwtl
sub
add
mov
cmp
mov
cwtl
sub
pop
adc
pop
and
flds
cmc
ja
push
ds
gs
push
push
jo
push
leave
jo
mov
es
jl
push
sti
jnp
mov
nop
xchg
xchg
ds
push
push
test
mov
in
jp
icebp
stos
cmp
and
jg
loopne
or
mov
cli
jns
xor
hlt
jbe
pop
mov
mov
in
fstpt
ljmp
jns
adc
push
fiaddl
pop
fsubrl
addr16
mov
xor
mov
dec
cmpsl
sti
cld
lahf
push
sub
or
aaa
dec
les
clc
jle
imul
and
mov
xor
mov
push
add
pusha
ret
or
and
inc
or
into
jno
xor
andb
fs
dec
or
jge
xor
negl
jmp
in
icebp
je
dec
mov
shrb
inc
dec
push
adc
xchg
cltd
ja
inc
xor
aaa
mov
out
shrb
popa
aas
dec
or
adc
les
jg
jb
jbe
fiadds
pop
jnp
ret
xchg
xor
cld
xor
mov
inc
pop
sub
stos
movsb
push
stos
ja
or
les
mov
lret
xchg
adc
mov
ss
mov
push
adc
test
sbbl
addr16
imul
aaa
sub
stc
and
mov
jl
test
xchg
lahf
outsl
sbb
mov
out
loope
in
negl
pop
mov
into
aam
jmp
jle
jg
inc
aad
jg
adc
sahf
insb
outsl
mov
loopne
mov
shll
sbb
test
add
iret
push
or
and
outsl
cwtl
in
and
test
inc
xchg
insb
enter
sub
fisttpll
aaa
jne
dec
sub
mov
cmpl
clc
jmp
or
popa
mov
pop
es
cmpsl
mov
sub
mov
mov
mov
rcrb
ja
mov
clc
dec
push
repz
jno
xor
fcomip
and
in
sub
imul
xchg
dec
xor
dec
imul
push
and
daa
inc
jbe
insl
sbb
push
xchg
mov
add
pushf
test
out
sbb
jle
outsb
imul
cmc
jmp
inc
xchg
outsl
mov
je
cmpxchg
add
push
movsl
es
gs
mov
test
mov
out
mov
lods
popa
loopne
pop
or
add
fsubrl
adc
shll
mov
aas
andl
ud1
mov
dec
adc
xchg
movsl
jne
fiadds
adc
sub
sub
repnz
inc
loop
xchg
add
loop
cmp
pop
inc
shl
daa
dec
cmp
cs
fsubrl
sbb
lock
mov
mov
in
jecxz
mov
js
xor
jecxz
mov
das
rclb
sub
pop
insb
in
sbbl
inc
mov
dec
ss
cld
sub
mov
jge
mov
outsb
or
sub
sub
add
arpl
mov
loope
pop
fmulp
mov
mov
movsl
rorl
fucomp
fildl
daa
ret
stos
pop
repz
sar
into
loope
sub
mov
jbe
push
xor
dec
int
mov
enter
repnz
repnz
inc
cs
dec
js
push
add
push
aas
in
rolb
mov
push
cmp
push
jb
add
icebp
add
jbe
fists
iret
sahf
sbb
test
test
jo
int3
int
es
xor
outsl
mov
mov
lea
int3
bound
loope
pop
xlat
lea
mov
les
stos
mov
xchg
scas
popa
movsl
test
imul
xor
inc
les
cltd
pop
out
add
insb
or
or
aam
xor
add
xchg
adc
jb
stc
loop
int3
inc
popf
cmp
jg
test
jmp
shrb
dec
xchg
test
mov
out
sbb
lret
pop
int3
mov
fabs
lods
mov
push
xchg
fsubl
out
mov
ds
xchg
enter
in
mov
sub
cld
push
mov
or
and
cmp
mov
push
cli
cmc
cmp
arpl
push
cltd
lock
pop
int3
loop
nop
add
call
js
daa
adc
add
pop
je
ljmp
call
or
jbe
daa
push
daa
mull
loopne
xchg
mov
sub
rorb
and
loopne
xchg
clc
push
incl
lahf
psrld
cmpb
jmp
aaa
mov
lods
js
xchg
dec
ss
cmpsl
mov
cwtl
jne
ret
add
dec
push
idivb
sbb
mov
adc
mov
int3
or
scas
in
out
movsl
icebp
and
mov
dec
pusha
nop
fwait
dec
pushf
repnz
insl
push
cmp
daa
cli
push
shrl
inc
xor
clc
scas
dec
inc
push
test
lcall
sub
jge
mov
xor
mov
outsl
hlt
fs
push
and
pop
xchg
push
jg
outsb
pop
popf
lods
mov
mov
xor
into
imul
in
arpl
js
push
adcl
mov
addr16
xchg
mov
inc
sti
push
or
repz
lret
shlb
xchg
mov
or
xchg
inc
sti
cld
push
push
sahf
data16
sbb
enter
push
icebp
popa
and
pop
roll
dec
adc
mov
je
mull
dec
fnstsw
sub
data16
in
cmpsl
sub
xor
sub
mov
ljmp
cwtl
or
xor
push
push
out
xor
and
test
ficompl
inc
rorb
dec
or
mov
aas
push
jle
dec
jns
jl
mulb
mov
js
push
mov
lods
lret
fimuls
pop
pop
pop
cmp
pop
and
jmp
ljmp
mov
aam
iret
xchg
mov
and
and
je
add
shll
arpl
xchg
mov
pusha
mov
leave
mov
and
filds
into
add
nop
sahf
lock
jb
sbb
or
inc
adc
shll
bound
xchg
scas
stc
imul
roll
fwait
out
dec
push
out
pop
popa
cltd
notb
cs
icebp
pop
icebp
xchg
mov
jae
imul
mov
clc
mov
or
sbb
mov
mov
pusha
stos
cmp
lret
out
cs
lahf
sti
loopne
jae
pop
ja
ljmp
xor
mov
icebp
jp
xchg
cmp
repz
fidivrl
inc
pop
push
ds
adc
mov
jge
cmp
inc
hlt
sub
sbb
cmp
adc
jbe
dec
sahf
sbb
lcall
outsl
add
mov
mov
add
iret
pop
outsb
xchg
sbb
jns
cmp
dec
outsb
inc
mov
sti
jmp
rolb
mov
inc
sahf
pop
sub
or
jl
or
add
and
shl
xchg
mov
pushf
inc
sub
dec
sti
mov
cli
rcll
push
movsb
push
push
add
popa
mov
or
fistps
cld
pop
xchg
add
jg
lds
insb
xchg
lret
xchg
xchg
out
pop
lret
test
push
cmp
scas
lret
push
sbb
popa
call
adc
adcl
xchg
testb
cmpsl
cmpsb
xchg
je
pop
rorb
push
push
icebp
mov
cmp
mov
cltd
sahf
add
mov
imull
aad
test
arpl
addr16
xor
jle
jae
scas
enter
xchg
icebp
xlat
fs
adc
xchg
dec
pop
adc
bound
inc
bound
ja
rcrb
inc
xchg
jp
roll
mov
xchg
mov
add
cli
mov
mov
pop
xchg
pop
and
adc
xchg
rcrl
mov
mov
mov
add
fstpl
mov
mov
popa
lahf
xor
inc
cmp
or
popf
or
and
push
scas
inc
inc
mov
adc
and
sbbl
out
cmp
adc
roll
dec
inc
insb
mov
adc
sahf
test
std
ja
push
nop
lahf
data16
je
mov
add
dec
test
outsl
pop
xor
rol
pop
jg
or
push
mov
lock
gs
outsb
ja
lahf
test
in
stos
stos
xchg
and
push
in
jmp
xchg
leave
fiaddl
mov
aas
pop
orb
js
cmp
addr16
xor
pop
add
cmp
jmp
out
ljmp
inc
pcmpeqb
add
dec
or
push
adc
xchg
clc
daa
sbb
sbb
jg,pn
push
and
mov
test
bound
test
xor
adc
mov
sahf
mov
or
pop
mov
add
inc
jne
rol
xchg
insb
cmpb
popa
push
icebp
cmp
push
sub
sbb
out
aas
xchg
jno
mov
dec
inc
cmp
fimuls
rorl
sub
xor
jbe
das
or
push
xlat
addl
adc
loop
xor
jmp
bound
clc
psubb
add
cmp
jb
mov
mov
cli
mov
fdivs
xchg
xchg
mov
imul
sub
xchg
lcall
rcrl
or
cmp
ret
addb
mov
jae
cmpsl
add
mov
or
mov
cmc
adc
rclb
cmp
mov
fcomi
xchg
shl
and
movsl
xchg
add
je
idivl
iret
out
inc
stc
fbld
xor
sub
and
lret
sub
scas
inc
and
pop
divl
xchg
fisubl
cmpl
loop
imul
leave
mov
filds
sbb
inc
jg
psllw
xor
dec
add
and
fimull
fcmove
mov
dec
pop
push
pop
push
rcrb
mov
push
popf
out
fwait
test
mov
lret
xchg
sbb
adc
fsubs
loop
or
sbb
jnp
ljmp
and
jns
mov
push
icebp
jb
data16
dec
xchg
cmpsb
js
and
mov
ret
andb
and
mov
addl
ja
mov
mov
sbbb
nop
sub
xor
lock
pop
pop
test
pop
jne
cmpsl
imul
sbb
aam
test
jne
loopne
movsl
je
pop
mov
in
add
sbbl
mov
movsb
sbb
aaa
cmp
ret
test
inc
cmp
push
test
jge
xchg
int3
je
aas
jge
dec
insl
jb
jle
push
mov
fdivl
outsb
clc
clc
mov
pop
inc
dec
mov
adcb
add
fwait
adc
inc
int
cli
das
push
scas
or
test
mov
and
arpl
push
mov
mov
nop
mul
jge
movsb
int3
jbe
insb
fstl
scas
adc
mov
sub
stos
test
sub
je
sub
mov
stos
mov
xor
int
outsb
ja
clc
jle
aad
lods
mov
fcmove
outsl
mov
popf
subb
aam
or
imul
icebp
es
scas
pushf
mov
out
out
iret
paddb
or
jmp
pop
push
mov
std
pop
test
gs
xchg
in
push
jp
imul
enter
lods
add
je
pop
test
not
mov
pop
or
sub
shl
mov
loope
mov
jae
scas
jae
cmp
shll
and
mov
loop
jp
push
ljmp
addl
negb
cld
jl
out
loope
jecxz
mov
inc
loope
dec
int3
test
inc
or
popa
mov
sbb
dec
cmp
or
je
in
mov
stc
push
dec
sti
shll
rcl
mov
push
ja
sti
xor
lcall
mov
sub
mov
mov
inc
aad
mov
mov
into
je
fldl
adc
test
or
cs
call
jnp
jg
cli
gs
pop
xchg
sub
pop
dec
jno
pop
fistps
jg
xchg
adcb
dec
xor
imul
jns
sbb
adc
js
mov
xlat
imul
mov
push
leave
pop
cltd
ja
adc
std
popa
push
adc
add
mov
mov
clc
imul
and
mov
sub
mov
push
or
popw
out
add
adc
cmp
push
pop
insl
cmp
pop
push
outsb
enter
mov
xchg
in
mov
ret
jns
or
cmp
mov
mov
inc
mov
mov
push
jmp
xchg
xchg
loopne
sub
test
sbb
adc
and
cli
adc
cmp
mov
cs
sub
ljmp
xor
adc
lods
xlat
hlt
push
add
sub
sldt
add
add
add
add
xor
sldt
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
