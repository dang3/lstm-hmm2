push
mov
push
push
push
mov
push
mov
add
call
lcall
jmp
mov
ljmp
mov
mov
popf
xor
sub
xor
test
test
ja
cmc
sbb
fistl
out
pop
xor
es
pop
add
cli
test
xlat
std
mov
jae
xchg
xor
pusha
mov
out
add
mov
mov
into
adc
movsl
scas
jne
loop
pop
inc
aam
test
fcmovnbe
add
pop
xchg
fwait
repz
push
mov
out
xchg
pushf
mov
push
cmc
scas
inc
ret
mov
sub
xchg
mov
dec
pushf
xchg
or
rcrb
and
jae
test
in
ror
push
xchg
pop
movsl
dec
jge
mov
mov
addr16
mov
cmp
stos
dec
insb
jns
notl
stos
mov
mov
mov
jns
mov
xchg
push
lret
pop
mov
sar
mov
loop
int3
pusha
mov
lea
sbb
imul
push
or
add
or
lods
out
adc
mov
pop
fldt
pcmpgtd
mov
insl
xor
xchg
cmp
je
xchg
pop
push
and
cld
dec
mov
cmpb
and
jmp
mov
pop
pop
or
mov
je
add
in
fcmovnu
lock
xlat
cli
mov
or
jg
add
outsl
xor
push
out
insl
call
sbb
lea
daa
add
int
pop
hlt
adc
lock
sti
out
imul
or
xchg
fldcw
lcall
xorb
inc
in
sti
iret
xchg
dec
xchg
aas
fwait
clc
hlt
mov
negl
insl
clc
mov
and
loope
hlt
sbb
paddd
xlat
test
flds
lods
arpl
inc
aad
pop
lea
pop
pusha
mov
aam
bound
sub
out
push
jmp
mov
jns
mov
movsb
adc
cmpb
cmp
push
mov
test
mov
pop
pop
out
pop
mov
scas
lea
sbb
inc
mov
pop
mov
add
xor
fistpll
fldl
push
in
mov
push
ret
inc
inc
fbld
dec
ss
add
gs
test
cmpb
lahf
and
jns
aad
addb
loopne
dec
xor
stos
movsl
cmc
mov
jae
addr16
incb
pop
push
push
std
inc
insl
rcrl
mov
clc
loope
repz
cwtl
pop
out
js
push
imul
test
jmp
cmp
cmp
fptan
outsb
in
pop
addr16
mov
jg
icebp
shlb
and
pop
and
sub
push
mov
and
loope
sarl
jle
jg
movsb
andb
jae
adc
imul
sub
cmp
mov
or
dec
stos
add
mov
mov
push
cmp
add
add
xchg
and
dec
or
fmul
adcb
sbb
pop
into
xlat
hlt
add
fwait
lds
lahf
aad
lcall
outsl
pop
stos
aaa
and
xor
pop
fmuls
outsb
xor
arpl
mov
adc
divl
mov
aas
subl
scas
cmp
mov
lea
xor
mov
fcomi
outsl
pop
pusha
mov
idivl
hlt
mov
mov
pushf
stc
and
fwait
cltd
add
lret
push
jg
sti
dec
adc
enter
and
fistpl
imul
sahf
mov
jmp
jbe
push
add
pop
bound
jecxz
or
add
cmp
push
ret
xchg
push
mov
lret
inc
scas
cmp
aas
arpl
add
pushl
mov
jnp
sbb
int3
cli
jg
jle
jne,pn
pusha
aaa
addr16
arpl
add
mov
add
fsubrl
lahf
pop
xor
pop
push
inc
sub
cmp
pop
fwait
xor
sbb
mov
mov
in
cmp
xor
xchg
or
mov
rcrl
test
cmp
jb
push
mov
ljmp
stos
mov
sbb
mov
aam
std
out
xchg
add
add
mov
xchg
adc
loope
fstpt
std
push
cmp
fcoms
push
mov
dec
push
or
out
mov
int
inc
faddl
add
xchg
loope
imul
dec
inc
cmc
or
mov
cmp
fwait
fs
push
pop
xchg
fistl
setg
js
lret
test
into
or
ret
mov
cmp
repnz
repnz
xorb
xor
xchg
xchg
push
jecxz
jbe
pop
push
pop
loope
daa
loope
testl
jmp
xchg
mov
jbe
daa
or
out
rolb
fdivp
bound
pop
test
fistl
add
ss
mov
xlat
leave
xorb
loope
fldenv
ss
int
cld
cwtl
jp
xlat
rorb
pop
mov
pop
arpl
fwait
incb
mov
rcrl
mov
scas
fstpl
push
fcmovnb
mov
aad
or
mov
fs
sbb
pusha
push
pop
mov
out
adc
dec
jb
mov
cmp
cmp
call
movsb
or
out
imul
outsb
add
adc
cmp
mov
mov
adc
aaa
add
xlat
and
cli
fmuls
loopne
orb
mov
sub
lea
mov
pop
push
push
aad
test
nop
cwtl
mov
adc
xchg
ss
clc
and
lcall
and
scas
aaa
sbb
cmpsl
jecxz
jbe
loope
cmp
mov
xchg
sti
push
stos
push
into
mov
jns
bound
test
test
jmp
daa
lret
sbb
roll
or
add
popa
sub
xor
faddl
push
jnp
cmp
icebp
into
jg
push
mov
fistl
jmp
test
lcall
mov
xchg
push
in
push
movsb
scas
call
and
sbb
push
pushf
bound
sbb
aad
jp
cmp
popl
aas
fwait
mov
cwtl
ds
hlt
jne
or
negl
pop
test
mov
shl
dec
ret
dec
sbb
shrb
lret
aaa
daa
xor
outsb
lea
fildll
mov
or
fsubr
in
jmp
testl
ret
stos
fsubs
push
punpckhdq
mov
dec
lret
loope
shlb
sti
or
sbb
outsb
shl
ret
or
fimull
ljmp
xlat
mov
aas
popf
fwait
xchg
lcall
inc
hlt
sbbl
repnz
sbb
xchg
movsl
cmc
adc
or
sub
js
push
lret
jae
jbe
popa
inc
lret
sub
xlat
cmp
mov
cmp
mov
lock
fwait
out
ds
dec
sub
xchg
jb
ret
fcoms
dec
sti
fstl
cs
mov
subl
xchg
adc
out
rclb
std
pop
lahf
adc
mov
loope
inc
add
dec
jns
stos
pop
push
hlt
dec
testb
iret
clc
xchg
repnz
sub
dec
icebp
push
jne
sbb
push
aad
xor
mov
dec
sbb
pop
daa
inc
cltd
and
sbb
rol
pushf
and
ficomps
xor
mov
lcall
mov
rcrb
and
sbb
shlb
insb
std
std
jmp
xor
cmpsb
ret
xchg
test
fs
jnp
mov
cmp
xor
add
adc
lock
sbb
sti
cld
sbb
or
push
jae
jb
pop
loopne
movsl
pop
sub
mov
lahf
repnz
outsl
sbb
sbb
movsl
int3
xor
incb
lock
fwait
cmp
inc
adc
std
xor
push
flds
xchg
repnz
mov
idivl
inc
mov
ljmp
shr
cli
or
pop
mov
inc
inc
aad
mov
divb
out
jne
notb
push
in
cmp
clc
push
cltd
dec
movsb
xlat
inc
cmp
div
fsubrs
pop
mov
negl
pop
popa
cli
bound
xchg
dec
dec
push
adc
push
push
and
inc
addr16
jns
jg
imul
arpl
cmp
in
cli
jecxz
push
sarl
sbb
repz
outsb
fs
dec
push
and
xchg
adc
ret
jns
fbstp
inc
pop
test
push
fldt
jnp
cmp
into
test
lahf
fnstsw
adcb
jb
mov
or
and
adc
cltd
cs
mov
mov
lds
push
cmp
dec
mov
es
sbb
mov
inc
pop
int
xchg
mov
cwtl
mov
mov
addr16
ds
xchg
iret
popa
mov
subb
into
add
dec
sbb
icebp
pop
fwait
pop
inc
sub
jl
sbb
ret
add
test
lods
loopne
pop
cmp
enter
add
les
jmp
aas
or
dec
push
mov
int3
cmp
lea
inc
push
xor
cmp
stos
inc
push
mov
out
stos
rcrb
rcll
imul
mov
movsb
shrb
iret
xor
pusha
je
push
push
gs
mov
sbb
pushf
outsl
cmp
loop
negb
mov
xchg
js
and
shlb
sub
xchg
cld
std
jecxz
idivb
inc
jge
mov
lods
xchg
pop
sbb
xor
arpl
ret
fwait
scas
inc
loop
es
out
sbb
cld
lea
loope
iret
jle
lea
loope
aam
sbb
fstl
sarl
or
pop
movsb
push
push
in
cmp
gs
pop
cmp
or
sbb
std
pop
sbb
andl
and
sub
shll
arpl
jb
jmp
mov
xor
and
loopne
std
iret
jb
xchg
xor
dec
lahf
pop
mov
xor
xchg
and
mov
ret
shrb
push
lret
inc
aaa
jp
fsubrs
test
fisubl
cmpsb
adc
aas
gs
jbe
push
add
mov
mov
sbb
loope
and
out
push
jge
jns
bound
lods
sqrtps
mov
add
mov
loope
mov
addr16
push
cmpsl
aad
repnz
jp
jns
jno
xchg
inc
push
scas
outsb
cmpsb
jecxz
xor
jg
decl
addr16
mov
xor
push
push
push
loope
idivl
sahf
in
int
ficoml
loop
popa
loope
fcmovne
cmp
mov
inc
ja
mov
jne
inc
loope
or
mov
add
sub
jo
pop
in
cmp
iret
ss
pop
mov
sub
or
aad
push
push
sbb
mov
adc
adc
pusha
cmc
mov
cmpl
xchg
pop
movsl
xor
or
stos
jle
icebp
inc
push
mov
sbb
mov
sub
subb
cmp
xchg
arpl
ret
subb
mov
popl
out
push
test
in
sbb
lcall
cli
cmpsb
out
add
loop
inc
arpl
jl
mov
xor
inc
popf
push
mov
fadds
andb
dec
je
mov
aas
mov
das
lcall
in
test
sbb
inc
dec
jb
pop
pop
push
sbb
mov
iret
sbb
scas
decb
mov
imul
dec
xor
sbb
lahf
and
add
sbb
dec
mov
bound
mov
add
imul
negb
mov
movsb
cmp
ljmp
add
lcall
jecxz
add
ljmp
loope
add
cli
or
jmp
or
mov
leave
sbb
lock
lds
repz
dec
hlt
jb
dec
fabs
in
shrb
cmpsl
stos
dec
jmp
mov
mov
dec
xchg
lea
dec
fmul
fwait
push
dec
imul
sub
daa
arpl
lret
mov
and
mov
and
or
daa
repnz
lcall
cmpsb
pop
sbb
xchg
push
xor
out
mov
pusha
adc
push
clc
in
and
mov
xlat
decb
push
pop
add
mov
mov
mulb
rcll
aas
jmp
lcall
out
jno
cltd
notl
fnstcw
mov
and
repnz
stc
inc
pushf
hlt
mov
insl
daa
jae
mov
pop
lods
inc
fwait
sahf
mov
inc
popl
mov
stc
aad
int
add
xchg
ret
xchg
push
sahf
mull
imul
mov
xchg
push
fs
add
movsb
decb
sub
popf
pop
movsb
fidivrl
add
jo
mov
les
mov
inc
or
int3
pop
xor
rclb
fisttps
notl
popa
sti
loop
cld
push
mov
and
xchg
mov
jmp
mov
ret
sbb
push
xchg
dec
lods
cld
adc
ljmp
pop
lcall
mov
lret
sbb
mov
push
jmp
jns
out
push
call
stos
into
and
push
mov
scas
mov
int
std
mov
mov
mov
xchg
adc
invd
mov
loop
mov
jae
dec
je,pt
test
xor
outsl
les
inc
addr16
es
shl
dec
lret
mov
mov
lds
or
ljmp
mov
outsb
sub
sahf
mov
dec
pushf
mov
push
fiaddl
test
mov
mov
jp
stos
mov
popf
out
sahf
int
sub
shlb
fcmovnu
mov
mov
jg
sbbl
lahf
enter
or
jbe
jge
test
sbb
rcrl
leave
adc
into
push
push
loope
sbb
dec
sub
mov
jecxz
leave
push
icebp
divl
arpl
cli
xchg
daa
sub
add
orb
xor
xchg
pop
cmp
mov
arpl
pop
out
xor
push
mov
xchg
int3
xchg
mov
mov
sub
cmp
add
push
jecxz
xor
dec
ret
cmc
mov
daa
mov
ljmp
jns
ljmp
repz
pop
stos
rcrb
dec
lods
jecxz
div
loopne
popa
iret
jle
sbb
fucom
enter
xchg
test
icebp
lret
imul
cmc
stos
xor
shll
mov
push
lret
mov
xchg
popf
xor
imul
sub
cld
stos
out
ret
push
enter
push
rol
dec
mov
sbbb
testb
in
sbb
aaa
loope
mov
cmp
mov
sub
xchg
js
mov
and
test
lea
and
mov
mov
dec
pushf
rolb
push
dec
cltd
sbbb
insb
lret
repnz
mov
les
insl
dec
imul
push
mov
jbe
loope
dec
xchg
mov
sub
jle
ret
lea
pop
divl
xchg
pop
add
jecxz
add
push
jb
adc
mov
ljmp
xor
xchg
cmp
pop
jmp
insl
push
add
aas
pop
cmpsl
lret
xchg
cmp
pop
mov
iret
in
mov
call
push
fldenv
orl
push
jae
roll
stc
push
lock
jle
and
xlat
arpl
hlt
jno
arpl
sbb
sub
dec
idiv
push
xor
rcll
cli
iret
dec
push
jle
test
lahf
push
push
mov
xor
jo
loop
mov
xor
inc
in
cmpsl
loop
nop
mov
mov
xor
int
pcmpgtd
out
mov
pmuludq
fwait
jl
mov
mull
fsubs
into
xchg
inc
xchg
icebp
clc
cmp
and
pop
and
popf
cli
jnp
fst
cmpsb
testl
jae
adc
into
mov
mov
mov
cmp
adc
testb
clc
mov
add
insl
test
divb
repnz
inc
adc
int3
and
aaa
sahf
inc
out
aaa
mov
pop
movsb
cmp
stos
call
cmp
inc
das
inc
dec
rorb
cwtl
pop
cmp
hlt
dec
pop
aaa
movsb
lods
xchg
xchg
divl
loope
cwtl
stos
ret
into
jns
jmp
cmpsl
mov
iret
orps
loop
or
cmp
ds
lea
aam
or
out
mov
fstpt
out
sbbb
iret
icebp
and
inc
or
insl
lahf
inc
cld
data16
mov
inc
lds
add
imulb
mov
hlt
pop
aaa
dec
jecxz
les
mov
mov
clc
pop
push
xor
dec
jae
inc
pop
mov
dec
push
xchg
mov
mov
jno
and
pop
mov
cwtl
neg
or
dec
ds
ret
adc
test
sbb
inc
lahf
xchg
aaa
add
adc
push
shr
addr16
xchg
cld
push
fadds
fsub
imul
and
xrelease
adc
cltd
mov
add
or
cmpsl
mov
fwait
insl
cld
ss
or
sbb
cmp
in
lret
mov
fucomp
pushf
xchg
movsl
jecxz
fnstenv
mov
stos
iret
mov
inc
inc
adc
incb
stc
mov
in
sbb
xor
hlt
jmp
ljmp
push
add
and
or
dec
arpl
enter
testl
mov
pop
mov
mov
mov
jb
jge
mov
pop
mov
xchg
cld
rcr
mov
inc
out
flds
xorl
pop
dec
add
cmpsb
fidivrl
cli
add
fisttpl
add
pop
out
cmpsl
jge
cli
out
mov
dec
enter
mov
inc
in
fisttpl
inc
cmp
xchg
adc
mov
jae
xchg
lcall
jmp
jbe
lret
xor
fwait
int3
add
jmp
cs
push
xchg
push
or
mov
jae
push
leave
idivl
xchg
icebp
in
pop
fldenv
arpl
lret
mov
pop
outsb
in
test
dec
pop
fstpt
dec
push
jnp
inc
cld
jns
mov
mov
jle
testb
dec
lret
fstl
scas
out
loop
outsl
les
mov
pop
xor
jb
pop
mov
test
xor
orl
ja
fldcw
negb
test
dec
inc
dec
adc
clc
jecxz
insl
inc
bound
pop
frstor
mov
push
ljmp
call
jbe
sbb
jecxz
icebp
testb
or
cmp
imul
faddp
mov
mov
outsl
std
dec
mov
shll
iret
jae
data16
fistps
cs
jb
stos
insl
sub
ds
cmp
push
sarl
fcompl
cwtl
out
in
lret
pop
outsl
inc
adc
fisubs
add
scas
inc
push
pushf
cs
andl
pop
idiv
jl
fwait
push
pop
or
imul
sti
push
sub
mov
push
inc
sbb
mov
and
lock
lea
sbb
adc
outsl
push
nop
js
daa
data16
inc
scas
imul
lahf
stos
sbb
fmull
or
xchg
ret
loope
fs
adc
lods
lret
adc
inc
out
repz
jmp
imul
dec
inc
ror
push
add
int3
push
mov
iret
sti
call
ja
push
loopne
outsb
jg
push
call
in
jp
fsubrl
hlt
out
enter
out
add
jge,pn
push
in
bnd
in
add
shrb
jbe
adc
and
enter
sbb
stos
pop
sbb
jb
push
sub
sti
pop
and
mov
divb
mov
and
out
cmp
and
enter
mov
js
pop
lods
pop
in
mov
pop
lar
clc
fs
cmc
aam
divl
push
fwait
xor
daa
ret
xchg
mov
fst
and
dec
lret
or
lahf
sbb
ret
push
push
sub
xchg
lahf
cltd
out
repnz
insl
ret
js
outsl
in
std
push
or
mov
sahf
pop
and
pop
push
cmp
sahf
idivl
gs
jmp
cld
mov
pop
jae
pop
cmp
push
sbb
aad
dec
mov
pop
push
imul
ret
in
aad
pop
cmc
push
lret
js
loope
dec
push
sbb
es
sbb
mov
jp
mov
pop
mov
inc
ret
adc
bound
shr
lahf
dec
push
cmp
arpl
inc
inc
dec
aad
and
arpl
mov
inc
dec
mov
fucomip
incb
sub
mov
pop
cld
test
cmp
or
add
int3
lahf
lahf
adc
dec
mov
notl
pop
bound
aaa
pushf
mov
ret
in
cld
popa
pop
call
jb
xor
jno
iret
push
mov
xchg
mov
iret
into
add
or
dec
nop
mov
pop
jae
jmp
enter
add
push
fldcw
in
xor
pop
push
test
and
sub
push
jbe
hlt
and
rorl
adcl
fcomi
in
mov
mov
pop
fucomi
xor
call
or
pop
ja
cmpsl
xor
sarl
aam
push
cmp
push
test
cmp
call
sbb
push
push
sub
adc
ret
sbbb
xchg
addr16
jns
mov
jp
jno
mov
int
sub
mov
or
jg
fidivl
cmp
mov
xchg
cld
orl
shlb
mov
adcb
int3
pop
inc
jnp
clc
xor
cmp
in
xchg
cli
xchg
aad
dec
shl
les
fistps
hlt
xchg
jne
ret
and
xchg
pop
jle
dec
movl
ds
cmc
push
and
ret
pop
pushf
aam
arpl
pop
inc
movl
adc
cmp
mov
push
dec
push
in
pop
call
xor
jae
cwtl
mov
cmp
pusha
pop
lfs
lods
xlat
xor
pop
out
mov
xchg
out
insl
movsl
mov
test
xchg
js
push
fimull
arpl
scas
inc
cmp
addr16
loopne
push
dec
sub
test
sbb
pop
ljmp
movsl
mov
sub
jp
mov
stos
scas
and
ljmp
sub
dec
arpl
and
imul
lret
aam
sbb
stos
xchg
cli
inc
lahf
and
aam
mov
les
mov
jnp
insl
pop
adc
push
sti
jne
out
movsl
mov
pop
mov
jno
incl
divb
push
mov
cwtl
add
orb
les
lds
adc
fcomip
in
dec
fdivrl
fsubrl
jno
inc
cmc
in
arpl
lahf
pushf
popa
dec
add
sahf
mov
jmp
int3
fstpt
sbb
test
jb
and
sub
stos
jne
sti
fisubrl
jl
fwait
cli
ds
pop
lcall
add
int3
and
mov
fcmovnbe
inc
popf
cmp
xor
jae
push
leave
lcall
clc
jl
cld
test
and
leave
inc
movsb
mov
pop
adc
sub
popl
jg
negb
xor
sbb
or
mov
pusha
jl
adc
mov
push
imul
xor
jo
cmpl
add
jp
mov
fcom
in
dec
dec
fildl
imul
pusha
das
imul
test
or
das
mov
lock
inc
divb
loop
dec
fsub
lock
dec
xlat
movsb
sbb
lock
adc
xor
inc
or
mov
jmp
or
sahf
mov
cmp
mov
pop
roll
and
pop
mov
add
sbb
outsl
fsts
xor
lahf
jmp
or
add
xorl
jbe
das
xchg
lods
insl
test
testb
js
sbb
lret
cmpsb
dec
jge
lods
push
ss
jno
test
mov
sbb
aam
repnz
and
cli
push
sti
xlat
repz
icebp
fists
jne
xchg
lahf
cmp
sbb
dec
repz
or
gs
inc
aas
sarl
mov
out
int3
aam
ret
mov
sar
adc
mov
sub
fadds
xrelease
pop
and
arpl
loopne,pn
leave
movsb
stos
es
scas
fstpt
repnz
xor
dec
and
ja
test
cli
div
jo
leave
lret
lea
sub
cwtl
pop
lahf
sub
sbb
ret
shlb
loopne
fcoms
cmp
andl
dec
dec
jp
insb
out
mov
adc
ja
mov
lds
repnz
rcll
test
ss
pusha
mov
in
repz
dec
int3
sub
sub
lret
ret
test
stc
inc
gs
dec
js
jmp
pop
mov
xor
and
mov
imul
rorl
ss
pop
ret
xorl
or
mov
push
psubd
mov
ja
mov
fdecstp
ror
push
pop
sahf
push
dec
fwait
and
push
fcmove
add
loopne
mov
add
jge
push
inc
jno
sub
sti
rcrb
idivl
mov
inc
fstpl
sub
gs
sbb
out
mov
das
incl
or
movsl
xchg
add
fldenv
cmc
sbb
push
jae
jecxz
cmpsl
cmp
lret
push
imul
dec
and
fstp
xchg
push
and
in
shr
xchg
push
or
out
mov
mov
mov
ret
xchg
xchg
lods
xor
add
loope
mov
jecxz
je
and
xchg
push
cmp
dec
lds
movsl
rorb
push
shlb
daa
inc
cmp
js
jno
ss
imul
insb
adc
outsl
jne
dec
stc
sub
adc
cmp
in
jnp
jl
and
mov
fidivl
loope
xchg
inc
cmp
addr16
jecxz
push
adc
scas
mov
in
testb
data16
icebp
cli
in
scas
push
in
fcoms
outsb
xor
lret
bound
sub
jmp
stos
jmp
bound
out
mov
push
decb
dec
sahf
les
pop
sbb
daa
sbb
pop
std
in
cltd
rcrl
adcl
movsl
outsb
push
push
jno
lahf
add
popa
aaa
mov
add
mov
fnstcw
repnz
adc
push
insb
fwait
imul
nop
pop
popa
hlt
add
adc
lods
in
mov
movb
jmp
shl
mov
sub
cmp
mov
mov
xchg
jge
outsb
cmp
mov
mov
jg
and
mov
dec
mov
cltd
sub
data16
jbe
jnp
xlat
mov
enter
add
jmp
mov
sbb
les
xchg
movsl
xlat
cmp
cmc
cwtl
addr16
mov
mov
sbb
and
adc
fwait
sti
jecxz
pop
mov
insl
or
and
add
sub
and
iret
ja
std
fs
xchg
int
inc
cmp
sbb
dec
bound
jmp
pop
jg
xor
lret
es
sahf
daa
mov
hlt
xor
xchg
outsl
add
push
xchg
mov
lock
stos
aaa
or
cmpsl
pop
cmp
outsl
add
neg
jmp
repz
bound
sbbl
push
push
int3
repz
mov
fdivl
in
mov
xlat
mov
in
nop
and
lcall
sbb
stos
adc
mov
jae
jno
pop
xor
into
push
fstpt
out
inc
xchg
mov
fnstcw
testb
jle
add
aam
dec
and
mull
cmpsl
addr16
scas
testb
cmc
mov
icebp
mov
sub
dec
sbb
call
inc
push
repnz
imul
jae
pop
test
dec
repz
movsl
or
cli
cwtl
ljmp
xchg
pushf
push
jae
mov
call
fwait
cmp
insl
mov
in
out
testb
nop
adc
int3
adc
lret
mov
inc
mov
into
xchg
xor
or
cmpsb
xor
iret
out
jl
data16
hlt
fbld
test
xor
xor
cmp
dec
mov
shrl
mov
out
adc
mov
insb
dec
lahf
jl
mov
sbb
push
int3
xlat
mov
cmpsl
ret
jge
dec
psrad
mov
mov
mov
loop
jl
mov
subl
fdiv
cli
stos
or
je
jp
add
icebp
idivl
fwait
fwait
orps
mov
in
lret
into
aaa
scas
xor
jne
ljmp
imul
dec
stc
test
inc
and
repnz
and
fwait
xor
jbe
ds
or
rcll
in
cmovbe
shlb
fldt
iret
pop
fst
fwait
dec
js
xor
adc
cltd
call
ds
scas
movsl
and
mov
lods
int
lea
rcr
out
fists
pop
adc
imul
jne
into
mov
mov
pop
stos
imul
jp
jbe
bound
test
mov
lcall
mov
jmp
jecxz
les
xlat
aam
test
aas
stos
push
or
out
push
repz
inc
std
and
adcl
clc
rcl
dec
sarl
inc
daa
aad
jmp
push
xchg
pop
test
lea
jae
jb
rcll
js
pop
mov
dec
xchg
sub
sbb
sub
cs
push
and
imul
out
xor
clc
outsl
jb
into
sbb
clc
adc
lock
push
lods
shrb
xor
leave
pop
sbb
pop
enter
lock
inc
mov
mov
outsl
stos
jae
jnp
iret
aad
mov
inc
leave
or
mov
add
iret
daa
gs
push
fcomp
pop
push
rcr
fists
fisubl
push
loopne
out
push
clc
fisubrl
stos
pusha
ror
ficoml
rcrb
mov
jb
icebp
testb
mov
add
or
push
and
rcll
aas
sbb
mov
testl
and
gs
and
dec
das
add
cld
mov
bound
aaa
xchg
cltd
std
icebp
mov
sub
jb
fisubl
aas
mov
push
mov
test
das
jp
mov
test
inc
orb
mov
inc
inc
sbb
push
out
sbb
cmp
jge
aad
dec
xlat
sbbl
push
fidivrl
jae
mov
lret
pop
sbb
rcrb
mov
gs
xchg
mov
rolb
les
je
cwtl
test
mov
push
shll
arpl
sbb
xor
out
addr16
push
enter
cmp
jne
fldt
jecxz
test
push
jp
jne
and
cwtl
mov
mul
jnp
nop
push
clc
mov
pop
scas
test
cwtl
dec
sbb
add
stos
shll
mov
jecxz
aas
popf
xlat
pop
inc
add
sarl
mov
jecxz
lret
mov
mov
repz
out
sbb
pop
inc
in
inc
xchg
adc
ds
aaa
pushf
add
inc
addr16
dec
pop
fucomip
and
sti
inc
cmp
fwait
fwait
xchg
stos
jecxz
dec
sub
loop
stos
xlat
and
lret
in
rcrl
xor
push
enter
push
jmp
lret
add
jnp
inc
pushf
addr16
cmp
and
cmp
mov
lock
loop
dec
cltd
mov
cli
testl
fucomp
cld
imul
shll
sbb
and
lds
xchg
rcll
pop
scas
inc
sahf
cmpsl
fadd
xchg
ljmp
mov
mov
mov
xor
xchg
inc
cmp
cmpsb
adc
cmp
push
fstpl
jo
push
push
xlat
inc
es
pushl
adc
xor
push
aad
jb
mov
pop
mov
ja
lret
dec
aam
jb
aam
add
lahf
mov
int
loopne
and
das
cmp
lock
lret
ljmp
addl
jmp
push
test
pop
dec
jae
in
or
add
push
andl
and
sub
in
loope
loop
mov
lret
jecxz
mov
inc
jne
psadbw
or
in
std
mov
sub
scas
xchg
or
mull
push
vpshlq
xchg
mov
iret
cmp
aaa
pop
sbb
dec
jp
pop
dec
mov
jge
or
adc
test
fwait
dec
outsl
shlb
mov
cwtl
or
ret
push
sbbl
ds
jo
pop
cmp
test
push
or
xchg
inc
sbb
mov
fsts
leave
inc
mov
xchg
dec
lods
mov
xor
adc
mov
jno
mov
popf
dec
push
pop
ret
and
adc
dec
pop
cmp
out
cmp
pop
inc
mov
stos
sbb
or
iret
xchg
ffreep
and
cmp
addb
fnstcw
daa
imul
jno
fwait
cmp
scas
push
mov
daa
xchg
or
lret
mov
mov
push
stos
pusha
notl
daa
pcmpeqd
stos
adc
jmp
sbb
jno
daa
or
dec
out
stc
xchg
mov
mov
xchg
jle
lcall
shl
sti
dec
test
xchg
sbb
xor
add
nop
lahf
stos
int
add
int3
inc
enter
sbb
fcom
xchg
loopne
enter
cltd
push
jno
insl
push
fadd
std
ja
daa
mov
inc
roll
mov
gs
test
pop
test
pop
cmpb
sbb
ret
adc
jl
iret
test
adc
fldl2e
es
shrl
dec
fidivl
jne
sub
jecxz
lcall
in
push
or
ljmp
jmp
adc
les
std
nop
or
aam
jne
sahf
sbb
cwtl
or
add
push
fwait
pop
push
das
test
mov
std
adc
inc
xchg
jb
jno
pop
and
pop
jg
pop
out
jo
sbb
xor
test
pusha
lar
xor
cmp
cltd
fstp
ret
inc
repz
cmc
loop
mov
or
pminsw
leave
mov
lgs
test
mov
neg
xor
popa
arpl
test
aaa
cli
lret
stos
dec
mov
push
call
lock
mov
mov
sti
aad
pop
push
les
iret
fndisi(8087
inc
xor
cmp
nop
mov
sub
jecxz
int3
sbb
xchg
sti
movsb
and
push
ds
sbb
not
cmc
jnp
out
popa
pop
adc
pop
jbe
aas
mov
fsts
jae
mov
mov
pusha
or
bound
jnp
cmp
shll
push
add
or
adc
pop
xchg
mov
xor
ja
jge
lds
pop
push
jle
add
inc
adc
shrl
pop
movsl
push
or
aad
mov
add
sbb
data16
addl
dec
gs
jnp
mov
jg
xchg
testl
int
pop
popf
out
inc
mov
or
mov
cli
aam
out
icebp
adc
pop
ret
xor
call
push
mov
jg
cmp
iret
dec
mov
push
or
in
int3
cltd
mov
adc
push
pop
jns
mov
stos
rcl
mov
push
jmp
mov
and
dec
or
repz
add
push
aas
cmp
rcrl
adc
mov
pusha
mov
mov
ljmp
pop
jecxz
push
incl
add
rcrl
sbb
icebp
jge
mov
add
sbb
jecxz
inc
inc
push
xor
cwtl
iret
out
add
cmova
xchg
xorb
lock
ret
fstps
lock
jecxz
leave
mov
fstpl
jmp
scas
mov
std
jl
push
aad
sbb
ret
shl
pop
mov
xchg
mov
pop
pushf
xchg
push
loope
icebp
xchg
mov
cli
and
std
test
inc
sub
and
xor
jnp
xor
and
nop
fcomp
fstpt
ljmp
jg
fsubl
imul
lahf
mov
mov
sbb
add
std
orl
aad
mov
xorl
stos
mov
mov
cwtl
lahf
aaa
popa
leave
andb
jae
fisttpll
ds
dec
leave
lret
dec
mov
ficoml
js,pn
fwait
lret
push
aaa
jp
mov
lods
cmp
into
mov
pop
jbe
xor
sub
mov
out
sub
pop
and
dec
jae
jne
jne
or
aam
cmp
out
lods
mov
aam
mov
inc
jae
mov
insb
and
sbb
aaa
cmc
sub
xchg
or
fwait
jge
pop
xchg
jno
lods
rcrl
ljmp
sti
mov
insb
movsl
aas
sub
mull
js
dec
test
jg
push
or
lea
lds
push
inc
xchg
out
push
cmp
adc
lcall
jno
xchg
cltd
sub
pop
clc
test
add
mov
jb
dec
test
or
std
dec
testl
mov
ds
and
jge
jecxz
repz
stos
push
cs
out
or
jb
jecxz
negl
and
leave
sbb
int3
pop
jle
jne
or
jno
lods
sub
in
movsb
xchg
push
xor
xchg
inc
lahf
mov
je
and
mov
and
notl
push
pop
jb
aad
lahf
in
adc
orb
dec
mov
loop
cmp
jo
xchg
das
nop
fidivrs
sbb
sub
pushf
adc
jp
scas
iret
filds
psubb
popa
jmp
ret
xchg
sub
pop
xchg
ds
imul
pop
cmp
jbe
jbe
mov
push
lahf
loop
clc
push
pop
xchg
cld
mov
mov
mov
sub
cmp
dec
leave
es
repz
call
or
clc
bound
push
inc
push
sbbl
mov
push
cmp
and
add
pop
lods
js
inc
mov
outsl
out
shll
mov
mov
mov
cs
and
shll
movups
xchg
dec
lcall
fbstp
push
lcall
mov
sahf
pop
and
push
and
loope
arpl
jmp
fcmovnbe
lods
sbb
push
sbb
xchg
movsl
pop
adcl
mov
aad
xchg
int3
xchg
cmp
dec
fsubp
pcmpeqw
movsl
cmp
push
pop
shr
arpl
jbe
sahf
cltd
xchg
mov
aas
lds
jns
mov
movsl
scas
and
outsb
rolb
lea
xchg
pop
push
jb
xor
lahf
rcrl
mov
clc
jp
std
xchg
fdivr
cmp
subl
xchg
repnz
jmp
jl
mov
cmpsl
jecxz
movsl
cs
pop
xor
inc
pushf
mov
cmp
mov
jnp
js
out
ret
xchg
sub
pop
ret
lret
jbe
pusha
jb
inc
test
shll
rcl
test
inc
frstor
fwait
cmpl
sbb
hlt
cli
in
xorps
popa
xchg
xchg
fstpl
xlat
push
inc
push
add
xchg
adc
cmp
add
push
mov
sahf
cwtl
push
mov
xor
movsl
in
cwtl
push
cmp
shlb
or
push
dec
jbe
mov
add
jno
int
lods
adc
gs
pop
sar
cmp
inc
or
xor
add
jns
sub
mov
jae
lds
lahf
xchg
int3
int
enter
dec
push
repz
enter
lahf
cmc
and
xor
cli
aad
or
dec
pop
outsl
fisubrl
xchg
xor
cmp
mov
cmp
add
mov
call
aad
xorb
mov
ficomps
xlat
cwtl
mov
xchg
das
repz
push
xor
int
in
adc
or
sbbl
test
sbb
jg
mov
outsl
mov
and
daa
out
fistpll
mov
cvtdq2ps
andb
lock
rcl
bound
pusha
jns
push
pop
ficompl
push
mov
decl
push
cld
psrad
cmp
rclw
or
sub
lds
cmpsl
lret
xor
add
imul
jp
arpl
int
cli
add
test
int3
cli
or
push
cmp
outsl
cmp
mov
das
xchg
out
cmp
dec
mov
out
hlt
aam
rep
das
xor
xchg
out
lret
loop
push
fiaddl
mov
mov
sti
jb
les
cmp
or
and
and
negb
scas
inc
fisttpll
mov
pop
ror
mov
orl
sahf
sarl
rcr
mov
insb
cli
clc
xchg
inc
sbb
addr16
pop
andb
or
or
xchg
mov
fistl
bound
and
mov
or
mov
or
lods
pop
and
xchg
push
imull
out
not
dec
mov
add
xchg
lret
pop
jmp
mov
aas
lods
les
das
xor
push
inc
fists
nop
lds
sbb
rclb
clc
inc
imul
mov
jns
leave
xor
add
fildl
cltd
mov
addr16
mov
add
dec
push
or
fstpt
mov
sub
xor
inc
jbe
sbb
pop
mov
pop
lcall
mov
push
leave
cli
xchg
sub
xlat
rclb
cli
pusha
inc
jnp
rcll
pop
and
out
les
jns
jns
imul
mov
mov
add
das
jns
fdiv
adc
jb
and
fnstenv
pop
jmp
mov
lahf
dec
loopne
mov
lahf
insl
fistl
jle
push
cmp
cwtl
cwtl
dec
mov
adc
push
pop
std
cmc
movsb
scas
pop
cmp
mov
push
jns
push
mov
jp
inc
xlat
aas
mov
mov
cli
mov
sbb
xchg
daa
adc
mov
fsubrs
je
xchg
cmc
aad
cli
imul
xor
xchg
loop
and
jmp
nop
shrl
jae
add
int3
and
push
adc
jns
mov
sahf
cli
imull
movb
xchg
pushf
mov
xchg
xchg
in
mov
pop
or
cmp
in
or
push
sarb
std
enter
pop
xchg
int3
jge
mov
into
jne
mov
adc
or
xor
adc
pop
mov
add
xchg
and
aaa
loope
xlat
imull
movzbl
sub
xor
pop
imul
mov
ret
mov
clc
cmp
xor
outsb
sbb
xchg
arpl
shlb
push
ss
ret
inc
cwtl
pop
and
mov
mov
mov
pop
in
and
cs
mov
mov
xor
fisubl
cmp
xor
xor
dec
sub
sbb
stos
lret
add
sbb
dec
mov
js
adc
jae
ds
jno
mov
xchg
icebp
mov
add
mov
cld
in
movsl
ds
jne
adc
andl
out
pushf
dec
sbb
arpl
inc
loope
mov
call
cli
mov
arpl
jnp
sub
mov
addr16
mov
mov
cmp
mov
repnz
test
test
adc
pusha
movsb
notl
es
mov
enter
pusha
jae
xlat
sub
les
pop
xchg
in
jno
mov
dec
sti
cmpsb
mov
das
imul
xlat
xlat
aaa
mov
push
pusha
lahf
gs
shlb
pop
mov
or
ja
das
xor
jecxz
pusha
sbbl
pop
stos
icebp
push
outsl
push
mov
push
call
push
fcomi
jge
daa
xor
stc
int3
in
add
adc
push
xchg
cmpsl
shrb
das
push
in
cmc
fcom
or
call
cmp
sbb
mov
int
fwait
mov
int
pop
xor
sbb
sub
xor
push
fdiv
mov
rcrl
mov
outsb
test
sbb
mov
add
jl
push
cld
subl
out
cmc
sub
outsl
adc
and
xchg
and
jne
sub
mov
jne
call
dec
aam
ljmp
rcll
xchg
push
std
push
dec
mov
add
inc
sub
divb
xor
std
mov
imul
cs
and
icebp
add
mov
jnp
jmp
fisttpl
cmp
inc
and
repz
nop
mov
mov
aad
xor
scas
lret
xchg
ds
stc
bnd
cmpsb
dec
fadd
push
cli
add
test
stos
xchg
arpl
cli
jp
stos
sbb
int
and
xchg
pushf
arpl
and
out
out
fcomps
jecxz
cli
dec
lods
sbb
and
mov
xor
test
or
sbb
outsl
insl
dec
leave
test
imul
sbb
ret
or
aam
and
icebp
pop
rclb
leave
dec
test
inc
gs
xchg
mov
mov
call
sbb
movsb
into
inc
mov
cmc
sbb
jne
pusha
mov
fcompl
sbb
xchg
sbb
push
repz
inc
xor
rcll
and
ljmp
pop
mov
imul
mov
or
shlb
pop
jmp
sub
sbb
cld
jecxz
sbb
mov
cmpsl
mov
mov
stos
jg
leave
iret
outsb
jmp
sbb
jmp
fcom
xchg
icebp
pop
adc
repnz
pop
loopne
jmp
enter
mov
mov
push
jb
lret
mov
jne
iret
cmp
loopne
insb
dec
lock
frstor
fcom
nop
pop
cmpl
sub
sbb
and
pop
xor
ljmp
dec
and
stos
sbbl
mov
dec
sbb
outsb
sarl
rcll
dec
mov
test
jbe
aam
mov
fimull
mov
push
dec
int3
jne
lea
notl
pop
addl
aad
lds
jns
sub
xor
mov
sahf
mov
arpl
fistpll
mov
push
out
cmpsl
loop
nop
fidivl
push
dec
push
pop
xchg
dec
add
aaa
jne
fisttpll
arpl
push
subb
leave
mov
jle
addr16
std
je
push
dec
sbbl
ljmp
leave
dec
pusha
in
xchg
movsb
adc
pop
cmpsl
test
shld
add
dec
cwtl
inc
dec
adc
xorb
push
cli
xchg
test
or
cmpsb
int
arpl
js
add
ljmp
jp
fnstenv
pop
and
sub
incl
subb
js
push
gs
mov
sub
shll
inc
cmc
sahf
ss
aad
mov
pop
xchg
push
add
repz
hlt
mov
addb
daa
xor
stos
rcrb
dec
ljmp
inc
les
das
xorl
cltd
js
dec
or
cmpb
daa
and
psrlq
or
dec
sbb
xchg
out
nop
repnz
fst
or
mov
nop
jbe
test
push
jno
mov
sti
adc
xor
push
repnz
jecxz
push
pop
movsb
sub
ds
rcll
cmp
aad
dec
in
outsb
orb
je
mov
cmp
dec
lock
pop
cmp
mov
adc
mov
and
jns
dec
cmpsl
pop
xchg
pop
add
sbb
and
push
push
cmp
pop
fstpt
pop
clc
adc
ja
out
pop
outsb
jg
pop
pop
mov
sbb
push
div
push
vxorps
stc
xchg
negb
mov
dec
fiaddl
lds
jbe
push
lahf
clc
nop
pop
fistl
mov
ds
xlat
sbb
sub
rcl
and
jl
push
jns
mov
in
out
iret
addr16
arpl
lcall
jbe
adc
adcb
or
sbb
loop
cmpsl
int
sbb
mov
shl
adc
imul
clc
pushf
pop
movsb
movsl
xlat
lods
jecxz
test
jg
mov
and
sbb
push
leave
cs
add
add
stos
dec
and
ljmp
push
repz
addl
pop
sub
xchg
xchg
fistpl
mov
rcr
popa
xor
xchg
in
push
push
jmp
jge
out
aam
jle
sbb
rolb
movsb
bound
mov
mov
xor
inc
icebp
bound
hlt
and
ret
repz
mov
loope
lahf
dec
movsl
fdivs
adc
sbb
xor
push
scas
inc
pop
sbb
pop
out
testl
dec
scas
ss
faddl
xor
ret
or
mov
mov
cli
xor
fildl
int
xchg
jmp
sbb
mov
add
cmp
sbb
repnz
inc
push
mov
fsubr
sub
in
pop
cmp
xor
repz
es
repnz
sbb
cld
xchg
and
jbe
aas
jle
outsl
push
addr16
out
pop
out
cmc
stc
inc
call
int
not
sub
cmp
sub
js
pop
add
dec
mov
test
push
mov
stos
and
jnp
js
xor
mov
pop
loope
mov
ret
lock
and
mov
cmp
inc
cmpsb
mov
rcr
arpl
sar
stc
bound
shll
inc
test
mov
mov
test
push
push
lods
jecxz
and
aaa
or
jmp
jnp
std
shrl
add
inc
lock
mov
or
pop
xor
stos
xor
inc
mov
xchg
outsl
mov
cmp
dec
lods
mov
jp
in
jo
dec
lods
pop
jmp
jbe
xchg
and
stc
dec
mov
repnz
ds
leave
arpl
add
lods
and
daa
loopne
test
pause
adc
repz
test
jae
adc
cmp
xchg
movsl
iret
xor
inc
jl
cmpsb
sbbl
lds
js
test
fidivrl
gs
movsw
adc
cli
jp
ret
js
mov
out
sbb
sti
stos
sub
movsl
adc
adc
add
bnd
aas
outsl
aad
test
mov
or
mov
pop
les
dec
mov
add
xchg
imul
mov
aas
ja
mov
add
xor
cmp
adc
adc
lods
divb
cmp
push
in
mov
dec
fs
fiaddl
daa
xchg
add
or
and
andl
sahf
mov
call
rolb
jg
cmp
pop
int
cli
scas
sti
cwtl
cmp
mov
sub
imul
sub
decb
mov
inc
test
ret
push
mov
faddl
les
add
cmc
clc
push
pop
mov
out
pop
add
pop
outsl
jns
popf
push
jo
scas
mov
mov
es
xor
cmpsb
add
imull
js
scas
mov
test
dec
repz
icebp
shl
inc
push
xchg
jmp
xchg
or
mov
mov
cli
cmpsl
iret
push
dec
dec
mov
sti
movsb
mov
pop
mov
inc
jmp
sti
push
and
pop
sbbl
pop
mov
xchg
mov
scas
and
and
mov
dec
cmc
xchg
add
out
test
repnz
inc
add
stos
mov
lret
lds
or
jno
cltd
pop
mov
jecxz
pop
fdivr
fildll
xchg
jo
rcll
and
jmp
push
pop
loop
inc
ds
nop
aam
iret
jecxz
sbb
cld
jbe
bound
jp
push
push
pop
lea
xor
sbb
pushf
jge
es
in
scas
mov
sti
add
arpl
push
cmpsl
xor
loopne
sbb
and
out
mov
mov
jge
aaa
inc
arpl
jo
and
scas
xor
mov
enter
add
inc
fldenv
and
aam
das
ret
loope
push
sbb
in
in
int
test
inc
in
dec
inc
push
cmp
inc
scas
pop
cmp
call
add
sub
popf
dec
mov
mov
pop
mov
mov
mov
lret
xor
jbe
mov
fistpl
mov
fcmovnbe
addl
ds
mov
jb
pusha
popf
lret
clc
int3
stc
sti
daa
outsl
xchg
ds
xchg
cld
int3
fildll
add
pop
jns
pop
dec
xor
push
xor
pushf
jg
pop
jg
mov
cmpsl
cld
repnz
imul
cld
jmp
mov
ret
je
xlat
jecxz
pop
or
sahf
shll
jecxz
mov
add
lcall
xchg
jmp
push
stos
lods
jecxz
repnz
mov
and
test
lea
lock
loopne
xchg
sbb
xor
lea
adc
ret
clc
inc
ror
repz
inc
into
sti
out
or
inc
xchg
and
and
sti
add
sahf
mov
jne
lock
js
mov
out
add
mov
push
test
jb
enter
es
xlat
and
js
popf
add
in
leave
nop
push
cmc
jae
adc
sub
sbb
jne
push
mov
jo
cmpsl
mov
mov
mov
push
mov
imul
push
fwait
repnz
lods
clc
out
ficompl
outsb
lret
out
sbb
pop
xchg
daa
mov
add
pusha
cltd
dec
icebp
lret
cmpsb
and
pushf
mov
fwait
imul
in
pushf
pop
in
xlat
xchg
cmc
xchg
stos
cmp
cmpsl
jbe
xor
dec
cmc
jne
adc
pop
in
pop
dec
loop
fadds
mov
scas
imul
lods
gs
movsb
adc
jle
pop
js
in
decl
xchg
xchg
and
push
in
sbb
or
insb
and
add
cmpsl
add
pop
in
cld
sbb
cmp
rcr
mov
ret
into
inc
add
mov
ljmp
mov
fwait
xor
xchg
inc
enter
int
jns
into
repz
or
cmp
shrb
push
aad
xor
dec
mov
divl
ret
push
insl
addr16
push
xchg
out
lret
mov
adc
push
mov
mov
or
jle
pop
frstor
xchg
cltd
adc
jmp
cmpb
adc
cmpsl
mov
and
mov
dec
jg
mov
ss
push
out
neg
scas
xor
xchg
and
dec
sbbb
jle
mov
lock
das
cmp
mov
push
xorb
mov
lock
xchg
fwait
scas
fdiv
lods
jae
lea
and
cli
cmp
and
popa
cmp
adc
fdivp
mov
mov
dec
gs
push
ja
call
inc
rcll
pop
fidivs
std
les
out
cli
pop
xchg
jae
inc
int
mov
pop
fstps
lcall
loop
and
jle
pop
out
lcall
mov
lahf
shll
int3
xchg
jl
fstpt
adc
jle
mov
int3
ds
dec
iret
int
je
rcll
pop
icebp
fisttps
test
cmc
adc
jns
push
add
xor
jmp
jge
stos
insl
cmp
push
push
shlb
cmp
das
incb
jnp
cmpl
hlt
xchg
adc
mov
push
mov
sti
ror
pop
mov
sub
daa
add
stos
shrl
xchg
ja
or
dec
jp
into
mov
jo
add
imul
inc
cmpsl
pop
cmp
xchg
push
sbb
pop
sub
push
add
cltd
or
daa
repnz
push
lds
lds
loop
dec
rclb
lcall
push
jmp
loop
mov
or
aas
inc
xchg
mov
inc
pop
ljmp
cwtl
cli
mov
mov
out
push
pop
lock
push
cmp
add
shr
daa
cwtl
push
or
jne
xchg
data16
push
jp
fs
jl
nop
dec
dec
fdivr
and
mull
mov
fstps
pop
pop
fldcw
xchg
mov
xchg
mov
xor
pop
outsb
xchg
shl
test
or
into
repz
mov
pushf
lods
dec
xor
xchg
push
and
xchg
cmc
jnp
nop
icebp
setg
mov
pop
xor
into
int3
shll
mov
adc
repnz
xchg
mov
fcmovnbe
cli
test
mov
fcmovbe
pop
push
hlt
dec
jecxz
or
dec
out
dec
mov
mov
icebp
imulb
sti
dec
repnz
cli
clc
mov
mov
out
push
cmc
xchg
daa
aaa
xor
cmp
xchg
ds
loope
lea
fidivrs
push
mov
out
les
pop
or
pusha
movsl
inc
xor
ss
push
sti
lods
mov
mov
xchg
sbb
inc
ds
iret
jae
popa
jbe
and
xor
into
sti
push
xor
mov
movsb
test
insb
jnp
sahf
cmpsb
mov
jne
nop
adc
adc
outsb
add
aad
repz
shrb
pushl
insb
mov
int
lds
scas
pop
cli
sub
cmp
push
bound
out
or
into
scas
mov
rcll
stos
lcall
push
inc
shll
pop
aad
iret
xlat
sub
in
notb
loope
jecxz
xchg
loop
adc
fwait
pop
cmc
lret
leave
movsl
test
arpl
dec
push
popf
xchg
dec
scas
jmp
lds
push
mov
push
idiv
add
aad
repz
cltd
lahf
rep
enter
popf
inc
push
mov
das
jmp
add
ss
dec
movsl
decl
mov
cld
mov
ss
iret
movsb
je
repz
fs
mov
jbe
xor
cmp
stos
sahf
inc
pushl
hlt
enter
aaa
std
pop
pushf
push
mov
mov
aaa
mov
inc
or
aad
push
xor
push
rcr
mov
mov
or
pop
cmp
addr16
mov
mov
aaa
and
xor
jb
lods
vshufpd
lock
popa
popa
pushf
jge
pusha
dec
lret
xor
mov
pop
cmp
dec
xor
cmp
movsb
pop
bound
mov
js
orl
aaa
lret
enter
stos
bound
mov
scas
bound
fisubl
cmp
addr16
xor
adc
cld
cmp
sarb
leave
cs
rcr
push
pop
leave
pop
jne
adcl
aad
cmp
mov
pop
fwait
aaa
pop
and
scas
outsl
test
andl
push
das
stos
packuswb
mov
out
mov
aaa
cmp
inc
dec
in
jl
outsb
pop
mov
cmc
loope
mov
lcall
cmc
mov
andl
jle
ds
mov
lcall
lahf
jnp
xchg
popa
repnz
orl
inc
stos
cld
add
fwait
adc
out
in
in
mov
jge
or
pop
arpl
cmp
fildl
mov
mov
insl
push
andl
int
mov
dec
xchg
shrb
imul
xchg
mov
sub
sub
andb
addr16
addb
xor
xchg
in
jne
xor
inc
sub
mov
lahf
imul
xor
mov
sbb
jae
xchg
mov
lahf
pop
addr16
repz
roll
iret
mov
mov
pop
cmc
push
cmpsl
cltd
sahf
xor
jno
testb
dec
jg
push
iret
popa
pop
fnsave
fidivrl
mov
sbb
pop
fcoml
lahf
ds
push
cmp
sub
mov
or
pop
add
dec
int3
fwait
cld
mov
fistps
xlat
in
pop
pop
ror
addr16
xchg
lds
les
mov
and
push
es
xchg
mov
jecxz
or
imul
xchg
pushf
mov
mov
cmp
ret
hlt
shl
test
lret
push
hlt
mov
imul
rclb
outsl
pushf
stos
rorb
mov
dec
xor
xor
jo
or
pop
nop
inc
into
sbb
bound
push
sub
into
or
sbb
in
pop
or
cld
cmp
mov
js
les
pushf
mov
push
cli
mov
xchg
pavgw
add
cmp
or
xlat
int3
adc
mov
cmc
hlt
xchg
popf
ja
xchg
test
aaa
xchg
dec
testl
mov
jecxz
add
cmc
ds
dec
stos
push
test
xor
jecxz
in
dec
stos
pop
push
adc
and
xchg
sub
mov
dec
sub
mov
leave
lods
jl
aam
ja
test
ss
stos
fwait
pop
xlat
call
jne
mov
adc
cmc
dec
lahf
hlt
cmp
into
or
js
mov
decl
push
andl
andl
jbe
mov
scas
stos
outsl
pushf
stos
in
xchg
arpl
out
cmpsb
dec
pop
xor
in
mov
dec
push
pop
icebp
int
cmp
cmp
or
je
ds
jne
fcmovne
push
fwait
jmp
repz
jne
dec
mov
into
pop
bound
sub
jae
jecxz
fwait
dec
mov
aam
ds
jnp
adc
and
popa
jnp
adc
cmp
dec
out
and
sti
cwtl
jbe
ja
jle
pop
cmpsl
in
lods
jne
sub
mov
push
xorb
sbbb
or
out
mov
and
lret
lret
mov
sub
add
sahf
stc
cmc
push
push
in
xchg
mov
cmpsb
and
jo
fwait
movsb
mov
in
arpl
add
jno
sub
inc
out
rcl
lods
xchg
loope
imul
scas
inc
jg
dec
jae
and
repnz
push
mov
jnp
pop
inc
fs
mov
dec
test
push
loope
xor
shrl
test
out
pop
ss
scas
in
mov
jmp
sub
push
iret
sub
dec
pop
js
cmc
push
std
popa
sbb
out
mov
dec
push
sbb
icebp
lods
pop
push
mov
xchg
add
ja
popa
push
test
xchg
mov
daa
aad
or
iret
xchg
push
xchg
jo
jne
jnp
lcall
sbbb
repz
das
jo
push
jp
push
movsl
stos
xor
lds
adc
in
and
hlt
jecxz
in
lea
xor
cli
fstl
jmp
daa
jmp
das
dec
push
out
xor
sub
icebp
push
ja
fs
sbb
loopne
ljmp
insl
mov
and
cwtl
xor
cltd
mov
lods
xchg
xchg
stos
jnp
imul
and
stos
lods
inc
dec
stos
sahf
out
jl
and
inc
and
ret
les
and
inc
movsl
repnz
mov
jae
lcall
push
mov
xchg
add
sti
sbb
jle
rcrl
mov
jecxz
sub
and
stc
push
mov
orl
daa
dec
dec
js
lods
imul
cmovnp
add
aaa
stc
pop
mov
cli
mov
cmp
aad
cmpl
testb
dec
sbb
dec
fldenv
or
test
pushf
sub
leave
push
aad
and
loop
cmp
xchg
xor
out
ds
jnp
pop
pop
jp
outsl
mov
cmp
adc
test
fcmovnbe
pop
fwait
call
mov
mov
dec
xor
xchg
cmc
xchg
pop
jmp
lret
dec
push
out
add
pop
roll
push
xchg
cmp
sub
jmp
cmp
cwtl
out
lahf
pushf
scas
mov
enter
cmp
std
push
out
push
mov
cmp
scas
sub
pop
jle
stos
pop
inc
clc
jmp
out
sti
mov
data16
mov
adc
fs
imul
ret
inc
scas
popl
subl
add
jbe
in
in
and
jg
ret
mov
stos
dec
pop
dec
cmp
lcall
dec
ret
test
iret
jo
inc
das
and
cmp
pop
xchg
mov
out
xchg
xchg
xchg
cmpsb
fbstp
cmp
mov
adc
sbb
mov
int3
pop
sub
xchg
mov
cmp
xor
testl
cltd
jle
outsl
sbb
das
cmp
leave
pop
mov
sub
sub
xchg
stc
mov
lret
sub
mov
in
cs
push
mov
xor
call
hlt
xor
fwait
adc
repnz
ficompl
fsubrl
fmuls
mov
jns
inc
rcl
movsb
jp
clc
inc
mov
mov
push
test
cmpl
nop
mov
loop
insl
adc
mov
mov
cmpsl
aaa
jnp
jecxz,pt
sahf
das
repz
push
out
push
jecxz
push
testb
add
and
jbe
sub
mov
stos
repnz
push
rcrb
add
call
lods
sub
js
xor
cmp
xacquire
and
sbb
sbb
inc
push
mov
mov
scas
jne
sbb
leave
xor
pmullw
movsb
out
cmp
ljmp
fstpl
jmp
aam
pop
fwait
mov
loop
jnp
and
dec
fcmovne
inc
pop
call
sbb
std
fwait
loop
xchg
xchg
sub
out
lods
je
int
sbb
mov
jmp
fnstsw
fdivrs
and
lods
xchg
pop
xchg
ss
jne
imul
fs
std
pop
pop
sub
push
rorl
mov
fucomip
jp
sub
mov
test
mov
cwtl
xchg
add
loope
and
loope
xchg
mov
es
adc
shr
dec
bound
push
cli
and
sarl
test
in
fdivs
iret
sub
insl
frstor
test
cmpsb
sbb
and
mov
pusha
mov
push
push
mov
andb
lods
repz
mov
dec
ds
aam
mov
cmc
adcl
aam
and
cld
pusha
jl
cmpsl
frstor
pop
mov
xchg
adc
xchg
adc
arpl
test
in
cmp
outsl
mov
pop
pop
test
adc
jge
adc
jge
sbb
xchg
and
xor
mov
test
fcomi
insb
ljmp
add
sbb
and
push
mov
xchg
pushf
fbld
mov
stos
mov
call
cli
xor
dec
lods
and
fwait
mov
imul
sub
clc
ds
mov
mov
repz
nop
aas
cmp
in
imul
jb
xchg
add
and
or
bound
xchg
mov
test
dec
sahf
js
fs
es
dec
flds
adc
pop
pop
in
cmc
jl
inc
cltd
and
jp
dec
cli
inc
cs
cmp
cmp
mov
push
incb
xor
shlb
fildll
bound
bound
in
mov
lods
add
mov
fcomi
call
and
leave
nop
ret
mov
add
imul
ljmp
mov
xchg
stc
or
inc
mov
orl
add
movsb
pop
and
mov
or
les
mov
jne
loope
out
mov
push
icebp
xchg
mov
sub
mov
mov
std
mov
orb
xchg
iret
dec
in
sahf
jbe
sub
lret
pop
in
cmc
cmp
pushl
leave
lock
addr16
push
sti
xor
push
inc
push
cwtl
adcl
int3
test
repz
aad
xor
push
push
mov
loop
sbb
pusha
vpaddq
jecxz
dec
push
xchg
pop
ret
adc
adc
into
sahf
push
xor
lcall
loope
rclb
add
lret
xor
push
dec
sarl
int
cmpsl
stos
scas
mov
mov
lret
mov
pop
lret
ljmp
sbb
ss
nop
ja
cmc
xchg
mov
push
xchg
mov
or
test
stc
testl
sub
cli
lods
clc
xlat
jecxz
cmc
das
inc
aaa
xor
mov
sub
xchg
push
dec
loop
jmp
jmp
repz
push
aas
pop
push
insb
push
lahf
sbb
daa
adc
push
aas
add
mov
pop
sbb
shll
push
gs
das
mov
mov
pop
test
sub
js
push
out
adc
sbb
aad
add
mov
mov
jle
push
adc
jne
sbb
cwtl
imul
or
movsb
mov
mov
stos
mov
stos
mov
movsb
cmpsl
or
mov
push
push
jl
idivl
cmp
mov
xlat
in
add
imul
push
lods
cs
add
cmp
pop
scas
sub
hlt
fldcw
or
pusha
sarb
pop
mov
ret
push
jecxz
into
jno
jnp
xchg
add
fidivl
in
pop
and
ret
xchg
leave
sbb
push
add
mov
aam
ds
fsubrs
xchg
push
sbb
push
mov
dec
pop
dec
les
std
ret
roll
adc
adcb
xor
jno
jae
mov
loopne
mov
pop
dec
mov
aaa
std
mov
repz
jno
outsb
and
sahf
jo
lcall
cmp
lret
out
mov
sbb
sbb
and
fidivl
mov
push
cmpsb
aad
sahf
aad
int3
adc
out
mov
add
xchg
popa
fnstcw
push
nop
scas
test
call
lods
cltd
pushf
mov
sbb
push
leave
stos
adc
mov
adc
mov
pop
push
adcl
sbb
ss
das
adc
stos
inc
les
lock
mov
imul
or
or
mov
iret
adc
or
cli
cs
sub
pop
push
mov
sbb
xchg
dec
pop
outsl
into
pop
lods
popf
leave
mov
addb
xchg
and
add
cmp
mov
rcl
dec
and
popa
rorb
pop
jmp
jecxz
push
pop
xchg
subl
loope
mov
shll
push
mov
mov
xchg
sbb
push
lods
bound
ret
test
ficoms
mov
pop
xor
mov
cld
das
cltd
cmp
scas
lahf
int
mov
out
mov
stos
pop
jns
push
mov
xchg
out
jns
add
push
shlb
xchg
push
pushf
add
xchg
xor
push
push
mov
fisubl
jmp
push
pmaddwd
sbb
cmp
inc
repnz
pop
add
push
rol
call
xor
insl
negl
rorl
or
sbb
test
sbb
repnz
sub
lds
mov
xchg
sbb
and
addl
ds
scas
es
imul
mov
pusha
mov
gs
leave
mov
scas
xadd
or
shlb
fs
fwait
xor
and
sbb
pop
divb
cmc
out
cmp
shlb
movsl
inc
out
xorl
mov
stc
fsubrl
xor
xchg
push
int
ja
adc
mov
xchg
push
icebp
mov
xor
fucom
pop
test
push
addl
adc
lcall
fwait
into
xchg
enter
pop
cmp
or
and
lret
pop
jbe
enter
call
adc
gs
je
or
dec
cld
arpl
loopne
add
jecxz
xchg
dec
xor
dec
mov
imul
dec
out
pop
addr16
daa
jo
nop
cs
sub
mov
cmp
out
cli
cmp
sahf
mov
mov
and
les
and
dec
in
mov
add
cmp
fstp
aad
ret
rcll
xchg
pop
jbe
xlat
mov
inc
sbb
ljmp
fildl
xchg
dec
dec
ljmp
cmp
in
nop
mov
pop
xlat
dec
cmp
and
les
je
or
notb
icebp
xor
xor
lea
mov
xchg
adc
mov
imul
daa
lahf
ss
aam
aad
pop
jecxz
cmp
ror
jne
cs
inc
test
jle
mov
push
jns
adc
push
and
bound
icebp
add
pop
rcrb
scas
mov
fwait
jge
aad
and
loop
loop
out
bound
scas
fwait
mov
push
add
dec
sub
fsubr
in
mov
sbb
pop
mov
rcll
fmull
pop
jne
sbb
loope
je
mov
push
idivl
mov
push
aas
hlt
push
xor
cwtl
mov
adc
dec
push
ljmp
pop
xor
inc
add
ret
jmp
mov
jns
cmpsl
aad
mov
bound
lret
push
cmp
xor
das
cmp
addr16
xchg
mov
dec
mov
push
push
out
aad
pop
out
jge
sbb
cmp
popa
cmpsb
lahf
jl
imul
mov
gs
push
aaa
jb
xchg
jbe
les
jl
scas
add
xchg
or
inc
fs
lcall
mov
add
fmul
je
imul
lods
push
js
mov
mov
sub
pop
jl
test
mov
popf
jae
cltd
jns
fldt
shlb
mov
in
push
andl
ss
jb
xor
aaa
xorb
out
in
mov
fcmovnu
nop
mov
popa
sbb
insl
xor
cld
mov
outsl
push
pop
dec
mov
jae
sbb
jbe
mov
inc
das
movb
add
jmp
test
xor
jmp
adcl
xchg
insb
xor
pushf
andb
jno
sar
mov
je
int
and
setg
jo
pusha
cmp
mov
and
gs
call
ss
xchg
gs
push
loopne
pop
lods
push
cmc
lcall
mov
mov
daa
inc
pop
scas
cmpsl
je
aam
jle
sti
and
pop
roll
hlt
cli
das
push
repnz
shlb
cltd
mov
xor
inc
test
test
pop
pushl
icebp
xchg
mov
int
cmp
in
cli
shlb
arpl
dec
add
xlat
int3
sub
add
pop
dec
scas
fimull
rorl
jp
js
pop
adc
out
push
and
jle
jbe
cmp
ljmp
xchg
movsl
imul
xchg
aad
das
inc
dec
mov
daa
inc
pop
xchg
mov
jno
addl
jne
fistpl
and
xlat
cmpsl
sub
dec
pop
jl
scas
dec
fcompl
dec
xchg
pushf
addr16
or
jns
rcrb
stos
inc
popa
push
xchg
out
xchg
lahf
test
fdivrp
xlat
lock
sar
leave
xor
pop
inc
xchg
adcl
out
dec
iret
scas
adc
and
xor
mov
dec
xor
out
frstor
cmp
mov
mov
decb
repz
mov
loopne
push
push
push
cmp
sbb
cmp
mov
jg
sahf
in
movsl
mov
mov
loope
scas
pop
mul
pusha
testl
or
add
sti
notb
and
xadd
inc
adc
popa
lock
xchg
pushf
mov
mov
jmp
inc
cmpsl
xor
scas
xchg
pop
pusha
xor
test
fsub
and
jae
insb
jp
lds
cwtl
jge
mov
xchg
mov
repz
push
inc
cwtl
pop
pop
xor
or
push
jbe
mov
pop
mov
dec
xchg
and
std
loopne
push
sub
in
addr16
cmc
adc
jne
jecxz
repnz
dec
mov
cli
or
in
pop
jae
push
push
and
fdivrs
lods
sub
clc
popf
jmp
out
test
dec
les
out
popf
cmc
dec
imul
loopne
inc
cmp
mov
lret
ret
pop
jle
pusha
cmp
loope
push
mov
cli
jbe
nop
aam
scas
sahf
and
bound
or
loopne
cmp
je
testb
xor
adc
stos
xor
cmp
pop
push
and
fcomps
dec
aas
cmp
sbb
or
mov
mov
mov
popa
push
lds
dec
mov
ljmp
ror
aad
cli
sti
sbb
cmp
cld
cltd
adc
sti
and
push
sbb
data16
notb
jae
cld
outsl
stc
cmc
adc
std
rol
dec
adc
out
sbb
stc
hlt
rorl
dec
sub
fisttpl
mov
cwtl
imul
xor
xchg
mov
xchg
sub
fwait
imul
pop
adc
mov
pop
fwait
inc
mov
stos
inc
clc
xor
sub
dec
stos
addr16
movsb
xor
sbb
mov
mov
add
xchg
pop
or
es
pop
xchg
cli
cld
or
mov
test
lahf
aad
cmpsl
pop
rcll
add
sub
inc
push
xchg
or
sbb
mov
jle
shrb
push
mov
push
inc
movsl
push
add
xchg
loopne
push
push
sbb
pop
jb
mov
gs
push
mov
cmc
jns
or
pop
shlb
sub
push
jg
in
cmp
or
mov
shlb
lahf
ss
push
sbb
and
xlat
mov
mov
shl
les
sarl
aaa
cmp
pop
cmpsb
sbbb
push
jnp
popa
push
adc
pushf
roll
mov
pop
cmp
and
les
inc
jecxz
in
mov
out
test
in
and
inc
mov
and
jle
jecxz
dec
mov
gs
cli
mov
sbb
xor
pop
mov
or
stos
mov
xchg
leave
call
dec
sub
lret
aad
xchg
push
sbbl
pop
push
jb
mov
mov
arpl
pusha
ja
add
xchg
ret
inc
jnp
sbb
push
lds
pop
add
adc
cmpsb
and
mov
inc
jbe
cwtl
jp
inc
push
mov
ret
cmp
dec
pop
pop
int3
cmp
pop
add
repnz
clc
scas
mov
rcrl
cli
psubusb
fs
pop
jae
scas
in
lret
add
das
into
lea
dec
icebp
cli
lds
stos
imul
mov
cmpb
test
jb
clc
into
arpl
repz
pop
movsb
jl
fildl
mov
repnz
xor
push
xor
dec
sub
xor
dec
das
insl
xor
cmc
scas
mov
xor
xor
ret
mov
enter
sbb
inc
jno
das
mov
in
popl
mov
or
jo
push
mov
lods
sahf
and
js
arpl
push
and
inc
ret
xchg
cmc
leave
push
mov
or
jae
dec
out
mov
dec
es
mov
mov
stc
add
sub
mov
sub
lods
aaa
xchg
mov
pop
fstpl
mov
cmp
rorl
movsl
in
test
add
mov
inc
jnp
sbbl
pop
or
dec
inc
out
ja
xchg
jns
pop
ljmp
cltd
cmp
mov
data16
add
pop
sub
lock
cwtl
mov
xchg
scas
cmc
mov
pop
cmc
push
addr16
hlt
add
or
popa
subb
lcall
xlat
xchg
xor
push
into
jnp
mov
or
call
test
fidivl
outsl
hlt
mov
mov
mov
fdivr
jno
shlb
mov
push
xchg
testl
movl
repz
pop
cmp
jmp
dec
in
jbe
shll
scas
loopne
cld
in
shlb
cmp
mov
int
lret
int
fistpll
in
aam
mov
in
cmp
das
je
mov
push
aas
xor
aad
push
mov
cmpsl
dec
in
les
je
arpl
inc
sbb
dec
fsubrs
rol
mov
imul
lahf
pushf
xchg
sahf
ret
movsl
sahf
add
pop
pusha
xchg
dec
popa
adc
pop
add
in
dec
test
popf
dec
stos
stos
popa
ret
xchg
jl
sub
cmp
dec
dec
loop,pn
jo
les
or
cmp
std
jg
pop
sti
mov
pusha
outsb
pop
rolb
mov
adc
repz
sahf
in
jp
or
pushf
cwtl
push
jmp
dec
add
frstor
jbe
pop
dec
popf
icebp
ror
add
add
dec
sbb
je
push
or
jo
and
cmpsl
or
dec
xchg
push
and
inc
or
fsubl
cmp
ss
cmc
dec
mov
lret
dec
bnd
or
mov
cwtl
mov
cmp
pop
pushf
cmpsl
push
push
inc
lret
sub
out
outsb
jns
cmp
jnp
mov
clc
pusha
push
mov
mov
jle
mov
loope
popf
or
lret
mov
xlat
xchg
push
sbb
or
inc
pop
push
pop
pusha
push
jo
xchg
decb
loope
fwait
jnp
jmp
mov
in
js
fsubrs
sub
mov
and
and
cld
into
dec
jbe
push
stc
cmpsb
mov
dec
dec
dec
test
jne
rorl
psubw
adc
push
fimull
mov
cli
and
or
shl
mov
aaa
pop
inc
mov
push
mov
adc
push
ret
inc
mov
mov
cmp
std
pop
std
in
push
test
mov
int3
push
mov
xchg
ret
mov
sbb
mov
popf
dec
out
pop
mov
lcall
negl
mov
inc
mov
rol
jae
and
inc
inc
xlat
addr16
mov
add
movsb
mov
arpl
mov
ljmp
cmp
pop
push
inc
subl
in
rolb
jae
inc
je
pop
jae
mov
mov
shlb
dec
adc
shll
imul
or
fcoml
aas
adc
add
mov
in
testl
xchg
jb
xchg
rcrb
out
pop
push
mov
pop
outsl
lea
cwtl
inc
aad
push
je
in
popf
lcall
cmp
adc
and
pop
sbb
cmp
vmaxss
fs
iret
testl
pop
in
pop
fcomi
lcall
push
out
int
sbb
sub
xlat
pop
out
cld
das
xor
dec
jecxz
lahf
inc
lcall
push
fwait
pusha
stc
dec
xchg
cmp
pushf
aas
and
jmp
sub
mov
lahf
sbb
mov
scas
inc
sub
sbb
lcall
into
repz
lret
or
push
or
push
or
cmp
dec
cmp
or
push
fimull
int3
lock
sahf
jecxz
xor
cmpsb
jb
pop
mov
test
push
dec
int
adc
sub
roll
lret
into
mov
cmpsb
filds
addr16
push
push
in
inc
xchg
pushf
xchg
xchg
xor
dec
mov
mov
sub
xor
xchg
sbbl
pop
div
leave
ds
push
xchg
xor
mov
enter
stos
fwait
aad
push
insb
inc
outsl
scas
repz
cmp
arpl
jl
ss
adc
mov
test
sbb
mov
pop
movsb
ret
out
clc
mov
push
jnp
ja
dec
imul
cltd
xchg
xchg
movsb
add
jp
pop
adc
dec
jecxz
fmuls
mov
xchg
sbb
popa
jo
fwait
push
and
mov
pushl
in
lock
cmp
in
jbe
lock
push
push
xchg
mov
jns
xor
mov
idivb
ret
inc
and
push
insl
ret
sbb
imul
daa
sbb
mov
mov
out
push
bound
adc
xchg
cltd
sub
pop
xor
lcall
pop
push
push
and
and
inc
iret
xor
xchg
ss
inc
jge
jge
jbe
repnz
aas
popf
mov
cmp
add
xlat
data16
sahf
pushf
push
xlat
or
mov
sub
xchg
jb
xor
add
rolb
or
add
enter
into
or
xchg
sbb
dec
jg
xor
inc
cmp
sbb
adc
dec
clc
push
out
in
mov
jnp
pop
mov
push
int
and
js
stc
mov
mov
mov
xor
hlt
cld
sub
into
aaa
cmp
sbb
aam
add
mov
jg
xlat
pop
sahf
mov
hlt
jl
cld
mov
xchg
sbb
enter
in
add
test
and
shrb
lds
int3
dec
mov
mov
les
cmpsl
mov
idivb
or
iret
push
sub
cmp
sub
adc
push
adc
stc
hlt
inc
and
jmp
cmpb
in
lcall
mov
into
cmp
sti
movsl
shr
decl
decl
dec
mov
ret
shll
jecxz
stos
scas
push
test
aam
and
nop
out
mov
cli
fwait
pop
adc
inc
jecxz
sub
cmpsl
lods
or
sub
jno
sti
sub
lret
xor
or
movsb
shrb
mov
mov
in
push
inc
sbb
leave
jmp
ljmp
and
dec
stos
fs
aas
add
mov
xor
jae
sti
into
mov
sub
lahf
push
pop
fstpt
or
flds
lea
or
movsl
pop
mov
inc
push
bound
shrl
sahf
fabs
jle
push
loopne
divb
pop
lds
pop
imul
in
je
xor
xor
dec
repz
lcall
xor
rcr
std
xchg
lahf
dec
jl
dec
mov
mov
and
pop
inc
insl
sub
xor
dec
jl
fdivrl
add
inc
imul
test
push
out
lds
icebp
adc
js
jp
fwait
int3
dec
dec
pop
pushf
scas
and
addr16
call
pusha
adc
aad
add
mov
in
mov
rorb
sub
into
ljmp
xor
inc
repnz
add
es
mov
xlat
sub
popf
insl
mov
test
js
call
or
xchg
out
lods
hlt
mov
std
mov
inc
daa
mov
and
and
or
loopne
je
add
pop
xchg
mov
cld
lret
jecxz
ja
sahf
stos
xorb
dec
gs
fistpl
and
bound
inc
and
mov
cmp
fistl
xchg
xchg
lock
popf
ds
pop
ret
cltd
add
ja
cld
stos
sbb
imul
ljmp
lcall
cmp
lods
out
test
adc
pop
sbb
movsl
xchg
loope
int3
test
cmp
into
and
xor
ds
pop
pop
and
push
add
mov
push
lahf
rcll
cmp
mov
lret
cmp
cwtl
xchg
shr
repz
ja
stc
in
sub
push
adc
adc
arpl
sahf
cmp
sbb
xor
jbe
outsb
push
lock
scas
mov
ret
dec
repz
inc
cmpsl
add
sub
data16
sbb
jle
jmp
add
push
fnstsw
test
sbb
mov
sbb
cli
dec
cmpsb
lahf
add
roll
jae
aas
and
pop
idivl
push
xchg
xchg
aad
je
aam
xchg
test
xchg
and
jmp
jl
sub
addr16
dec
adc
movsb
pop
decl
and
daa
movsl
xor
scas
mov
aas
push
xchg
arpl
mov
push
fstpl
mov
test
xchg
jbe
nop
pop
and
inc
jmp
loop
sbb
fistps
sub
xchg
fimuls
push
mov
iret
inc
outsb
movsl
dec
andb
xchg
jne
pop
add
lahf
or
pop
dec
hlt
push
aam
mov
ljmp
inc
in
xchg
pop
mov
das
mov
bound
add
ret
jne
fstps
or
arpl
fistpll
hlt
out
pushf
mov
fxch
xchg
add
xchg
adc
into
cmpsl
cmp
cmp
bound
int
xchg
jns
cmp
pop
fisttps
inc
sbb
inc
lea
fiadds
xor
xchg
jge
insl
enter
subps
rclb
sahf
cmp
out
arpl
cmpsb
pop
dec
inc
jo
mov
cmp
fmull
into
arpl
fwait
dec
pusha
mov
insl
insl
mov
xchg
push
popf
push
mov
cmp
xor
xchg
mov
or
adc
lea
aas
jg
xor
jbe
dec
leave
stos
mov
cmp
mov
mov
sbb
mov
jae
cwtl
pusha
cmpsl
pop
leave
in
hlt
fmuls
mov
fdivrl
xchg
mov
das
aam
test
push
jb
dec
or
sbb
adcb
icebp
cmp
out
or
adc
dec
and
adcl
and
jg
shll
leave
xor
int3
stos
ss
or
out
mov
push
je
movsl
pop
fwait
enter
jge
arpl
mov
test
jp
push
fwait
lcall
outsb
jmp
fisttpl
xchg
pop
fadds
sahf
jbe
lds
lods
mov
push
mov
jp
pop
xor
push
mov
xor
mov
inc
inc
jae
cli
xchg
mov
bound
add
dec
adc
dec
sarl
mov
loopne
mov
sbb
add
ret
loopne
or
xchg
mov
cld
das
xor
lods
pop
shr
std
push
les
cmpsb
arpl
sub
dec
xor
jmp
push
fnstsw
sbb
sbb
gs
clc
aam
xchg
adc
out
aad
mov
dec
adc
or
inc
dec
pop
add
aad
xor
dec
out
mov
cld
xchg
or
xor
dec
mov
add
pop
mov
lea
push
jmp
push
nop
clc
imul
pop
repz
xor
inc
fcompl
aam
jne
in
popa
int3
adc
pop
mov
dec
push
sub
imul
popa
popa
enter
aam
adc
lods
mov
ljmp
or
jp
pop
pop
push
push
pop
adc
fists
jg
mov
jp
lds
nop
inc
sub
mov
mov
lcall
in
lods
lods
ljmp
negl
sub
rol
add
lahf
and
leave
nop
fcoms
sub
and
sub
mov
loope
ljmp
sbb
jge
in
sarl
cmc
xchg
addb
dec
sbb
jg
sub
lahf
rcr
xor
and
push
movsb
adc
aaa
mov
sti
aam
mov
xor
ljmp
lahf
and
stos
dec
xchg
lock
test
xchg
test
outsb
xor
add
aaa
sub
mov
test
xor
testb
es
je
push
jmp
nop
icebp
xlat
dec
push
pop
mov
add
mov
mov
add
or
mov
out
lahf
cs
sbb
stc
pop
push
xchg
mov
mov
lahf
mov
push
outsl
sarl
xor
fisttps
lock
out
jge
push
mov
imul
add
aas
daa
arpl
dec
out
fstp
sbb
fmull
pop
dec
xorb
dec
push
push
je
xchg
stos
sub
add
pop
loopne
lcall
add
push
mov
mov
pop
cmpsb
push
fimull
lcall
fwait
and
cmpb
jns
xor
mov
xor
je
dec
out
push
ja
xchg
notb
ja
cmpsb
int
inc
mov
add
out
push
push
or
mov
xor
inc
add
and
lcall
push
inc
scas
cli
sub
mov
push
lods
jno
or
in
jb
popf
dec
or
jo
and
test
sbb
cmp
lahf
lret
dec
mov
sub
and
aas
int3
fwait
sbb
and
or
push
notb
xchg
sub
mov
xor
xor
push
push
iret
jb
xlat
shrl
xchg
ffreep
in
push
sub
xchg
std
mov
fiaddl
jecxz
push
std
std
add
repz
scas
cli
cmp
movsb
push
clc
adc
notl
cmc
cmpsb
mov
test
cmp
adc
sub
sub
fdivl
sub
stos
cmpsl
xchg
lods
jns
or
jb
ret
sbb
orl
adc
push
out
out
dec
popf
movl
loop
mov
mov
mov
push
mov
push
pop
mov
and
cmp
mov
push
dec
in
add
sub
or
mov
sub
cli
sbb
lods
aam
or
cltd
pop
mov
push
rep
add
ss
jb
push
mov
fistps
lods
xchg
jmp
jp
adc
adc
jge
mov
lods
stos
test
sti
cmp
sbb
jb
lcall
popf
push
repz
xchg
push
mov
xor
push
dec
aad
xor
cmc
int3
mov
jge
xor
mov
sbb
popf
testl
jg
lahf
jmp
jl
pop
mov
jbe
xchg
xchg
adc
stc
mov
mov
push
inc
inc
bound
movsl
lret
pop
and
bound
iret
cli
out
jo
arpl
in
lret
and
nop
push
scas
or
jl
and
cmp
lock
nop
mov
cmp
movl
cltd
cwtl
iret
arpl
dec
fcoms
push
fsubrl
xchg
insb
mov
cs
idivl
sbb
xchg
leave
lods
out
ss
and
jae
xlat
daa
jns
iret
mov
cmp
pusha
jo
stc
cs
sbb
popa
push
jle
xchg
fdivrl
pop
or
pushf
pop
addr16
in
or
xor
inc
ret
lret
hlt
js
mov
push
stos
cmc
dec
sbb
xor
jnp
mov
andl
and
fnstcw
imul
mov
scas
stos
sbb
add
lods
dec
popf
daa
lods
jmp
jp
int
add
fisttpll
xchg
xchg
je
test
cmp
and
cld
inc
xchg
mov
js
int3
ffree
mov
jl
shlb
mov
out
and
mov
mov
lret
xor
fs
test
mov
mov
cmp
in
xchg
sbb
or
hlt
xor
bound
ss
out
fimull
test
mov
jl
pusha
mov
mov
pop
sarl
js
enter
push
push
arpl
mov
xchg
das
dec
xor
ja
lcall
leave
jmp
pop
push
sahf
dec
mov
or
push
add
mov
js
shl
sbb
or
dec
dec
push
add
rcl
jae
lods
pop
xchg
adc
xorl
lcall
mov
inc
dec
adc
jae
push
shrl
mov
sub
aam
mov
xchg
push
adc
lahf
pushf
mov
lahf
pop
ds
les
add
adc
ss
sahf
ret
xchg
jmp
or
xchg
fmuls
fbld
mov
cmp
mov
shlb
cltd
sub
and
in
rclb
daa
loopne
outsl
bound
mov
sub
int3
das
les
dec
mov
notb
out
jl
or
test
ljmp
xchg
lcall
cmp
or
sub
push
pushf
adc
or
cmpsl
pop
in
jae
into
fwait
and
rorl
mov
fsubrl
sub
fcoml
xchg
sub
push
dec
sbb
mov
adcl
xor
dec
popf
outsl
xchg
fistpll
fsubr
call
sbb
push
faddl
aad
or
and
ret
outsb
in
jnp
into
fsubl
fyl2xp1
ret
push
dec
or
jns
cld
mov
jns
pushf
inc
mov
mov
push
dec
ret
pextrw
push
mov
pop
push
xor
inc
push
jge
icebp
leave
stos
add
mov
cmp
sub
mov
mov
push
pop
mov
insl
push
sti
test
in
sub
enter
sti
sub
sti
repz
int3
repnz
inc
repnz
cmp
push
mov
xchg
jnp
mov
pop
arpl
push
push
inc
xor
jo
int
orl
std
push
sbb
les
dec
inc
xchg
pop
dec
mov
mov
lahf
jo
fcomps
ss
call
xorl
push
xchg
mov
add
jb
mov
xor
mov
popf
aam
popf
lahf
pop
adc
xchg
xchg
add
mov
pop
rclb
sbb
into
mov
xchg
fmull
xchg
cwtl
leave
arpl
mov
push
gs
cltd
lea
icebp
xor
divl
lcall
lds
mov
imul
add
cmp
in
mov
addl
adc
jge
sbbl
arpl
decb
into
fistpll
into
loopne
repz
inc
adc
inc
adc
cli
and
jbe
cli
jne
stos
xchg
xor
mov
and
add
mov
mov
loope
cmp
rcll
cmpsb
mov
or
lods
sbb
xlat
jmp
xchg
jae
repnz
lahf
mov
fwait
mov
xchg
pop
push
mov
jp
jb
pusha
pop
mov
pop
sarb
xchg
and
jae
loop
sub
mov
cmp
mov
bound
arpl
lret
push
pop
cmp
xor
xchg
lcall
fwait
mov
mov
stos
mov
mov
cli
movsb
cmp
stos
lock
into
push
loope
decl
sbb
jbe
mov
pop
mov
jle
fldl
sub
cmc
aam
sub
mov
push
rorb
cmpb
push
cmc
pop
xchg
outsb
imul
ret
jae
sbb
lods
leave
test
mov
arpl
daa
and
lcall
std
scas
jg
push
mov
pop
fdivl
jne
stos
cmp
pop
and
cmp
xlat
jnp
dec
adc
iret
ja
ja
clc
bound
arpl
add
push
movsb
ja
sbb
in
or
loop
scas
adc
cltd
repnz
repnz
ret
aaa
dec
fdiv
pushf
stos
xchg
mov
mov
repz
sub
cwtl
xchg
stos
fnsave
xor
jl
jmp
mov
fidivrl
fdivrs
mov
aas
inc
scas
jbe
pushf
pop
push
xchg
xor
sbb
out
in
jns
mov
inc
nop
ficoms
and
out
outsb
aaa
in
lcall
ja
popa
inc
mov
fcmovu
call
xor
xor
in
jne
xor
mov
sub
adcb
jle
aaa
cmp
pusha
jb
iret
test
inc
outsl
loopne
icebp
movsl
fidivrs
mov
mov
cmp
call
nop
ror
mov
xchg
bound
out
mov
stos
jg
xor
mov
insb
push
xlat
hlt
pusha
int
or
iret
dec
dec
push
das
sub
stos
and
jae
mov
hlt
aad
cmp
mov
dec
jl
stos
sahf
xchg
sub
cli
sub
mov
xchg
pop
pop
push
stos
subl
aam
mov
mov
loop
dec
adc
cmp
dec
mov
inc
in
or
pop
pop
xchg
test
add
jno
pop
jne
pop
loope
cld
sbbl
subl
mov
out
imul
dec
jns
clc
and
pushf
xor
int3
pop
add
aad
push
push
adc
and
clc
pop
inc
inc
lea
pop
mov
arpl
sbb
jns
scas
pop
hlt
mov
cs
cmp
mov
ss
and
mov
dec
inc
cmp
push
pushf
nop
stc
mov
mov
mov
pop
pop
pushf
movsb
jmp
leave
inc
scas
fmull
stc
jae
jae
js
pop
dec
xchg
mov
sub
into
cmpsb
push
inc
scas
lret
inc
dec
xor
push
sub
loopne
push
lahf
stos
xor
fnstenv
cmpsb
test
mov
fdivl
xchg
push
sbb
loope
or
push
pop
push
sub
xchg
sti
rcll
sbb
fisttpll
jmp
jnp
mov
mov
add
mov
mov
out
mov
cwtl
out
loope
mov
sbb
shlb
and
pushf
and
roll
lock
inc
aad
lods
jg
test
mov
mov
xor
jl
or
outsl
hlt
cmp
adc
movsb
sub
push
mov
fisubrl
stos
test
dec
mov
shl
pop
or
lret
cli
cwtl
movsb
in
jp
sti
lahf
mulb
outsl
test
sbb
xor
shl
adc
push
jnp
pop
fildll
push
popf
dec
jo
jg
mov
mov
inc
cli
lods
mov
mov
jp
mov
jl
cmp
jae
jmp
arpl
mov
jns
rcrb
dec
pop
dec
out
out
gs
lret
stc
loop
imul
cmp
add
iret
int
push
jg
jo
xchg
pop
xor
stos
hlt
add
jge
clc
orl
cld
std
jecxz
jae
addl
cli
arpl
mov
stos
add
popa
aas
fisubl
fs
std
fisttps
or
lcall
xor
pusha
push
xor
imul
ja
push
aaa
bound
mov
push
shlb
popl
adc
idivl
hlt
and
dec
gs
and
jo
mov
push
mov
repnz
aam
shll
fisubrs
xor
and
aad
xlat
jae
clc
test
jb
sub
jl
jo
icebp
loope
mov
lcall
add
leave
enter
aaa
into
pop
push
in
lcall
lcall
loop
movl
xchg
jl
mov
xor
inc
rcll
add
xor
pop
mov
xchg
adc
xchg
mov
pushf
xchg
test
xor
xchg
add
pop
negb
cmp
mov
mov
lcall
xchg
jo
jge
ds
ficoms
cld
hlt
jmp
mov
fwait
jnp
cmp
mov
mov
xchg
jno
adc
movsb
push
jbe
sub
push
xchg
push
mov
sub
mov
rorl
repnz
in
fs
sbb
mov
daa
sbb
adc
scas
cmp
fistl
das
jge
jne
bnd
nop
pop
pop
repnz
and
cmpsb
out
mov
cmp
addr16
loop
inc
push
adc
mull
cli
inc
bound
mov
jns
movsl
inc
in
mov
jle
sbb
std
mov
xor
mov
cmp
push
inc
xor
jmp
mov
push
pushf
aam
rcl
lds
inc
jecxz
jns
addr16
add
xchg
test
imul
mov
ret
mov
pop
cltd
fisttps
fwait
inc
xchg
mov
insb
inc
or
jle
add
pop
push
sub
xor
clc
outsb
and
std
rcll
imul
mov
stos
repnz
imul
xor
mov
in
test
sarb
mov
lock
add
ficomps
mov
push
mov
daa
push
lods
cmp
mov
insb
xor
int3
mov
sbb
push
fsubrs
mov
push
lahf
and
or
dec
iret
rolb
xor
xchg
inc
fmul
xchg
pop
xchg
mov
and
cmp
xchg
ljmp
jb
mov
mov
mov
pushf
jbe
xor
mov
dec
mov
push
std
outsl
inc
add
inc
sub
divl
punpckhdq
pop
sub
sti
repnz
mov
das
idiv
jo
sub
xor
dec
std
sub
mov
push
cmp
dec
gs
scas
aas
das
mov
xlat
inc
xor
xchg
xor
stos
jl
xchg
loope
jl
adc
stos
adc
dec
or
lds
icebp
testb
loope
outsb
jno
or
repnz
mov
sub
adc
fmuls
pop
rcrb
ljmp
sbb
adc
mov
dec
jns
xor
pop
daa
negl
sarb
aaa
icebp
xor
int
jo
push
sbbl
icebp
add
pop
xor
fistps
add
ror
stos
push
sub
xchg
inc
inc
cmpsb
in
sub
cmp
idivb
adc
xchg
mov
out
sti
pop
cmp
sbb
lods
mov
mov
pop
mov
lds
les
lea
mov
push
or
arpl
out
adc
fwait
jno
add
mov
fcmovb
pusha
xchg
clc
filds
je
sahf
aas
add
add
and
lods
fdecstp
cmp
dec
add
mov
pop
repz
out
mov
mov
fcoml
pop
xchg
ss
in
push
ja
fistl
mov
xor
push
test
mov
xchg
sbb
and
imul
jecxz
mov
or
bound
cs
jmp
into
sti
jo
and
dec
pop
cltd
jnp
popa
mov
test
mov
mull
xor
xchg
mov
ss
xorb
jb
mov
mov
int
jne
rorb
sub
cmp
fidivrl
xchg
aad
in
xor
int
repnz
inc
jnp
pop
dec
xor
push
lds
sti
fisubrl
cmp
fxtract
daa
mov
nop
shrb
sbb
pop
cli
ror
pop
loopne
lret
cmp
pop
shr
repnz
cmp
rorb
cmpsl
fs
out
lahf
daa
jbe
jp
push
aam
fisttpll
fwait
or
fidivrl
fwait
pop
bound
incl
fadd
outsl
call
cmp
lods
mov
scas
mov
pop
ret
cmpsl
cmp
into
xchg
mov
mov
jns
mov
out
cmp
pop
mov
out
cmp
fbstp
int3
inc
sub
add
mov
std
subb
movsb
lods
pop
push
shll
xchg
test
scas
stos
xlat
push
lcall
cmpb
into
sub
sti
fs
outsb
xrelease
mov
adcl
shrl
scas
xor
push
xor
pop
lds
lahf
pop
imul
sub
out
rcrb
in
out
shl
push
into
pop
in
test
or
push
sub
sbb
push
mov
mov
test
test
xor
test
pop
scas
gs
push
pushl
movsb
lret
notb
dec
mov
mov
lretw
test
xchg
pop
adc
lret
push
xor
add
cmp
lret
stos
lret
lret
push
shll
cltd
fdivrs
cmp
add
mov
rcrl
mov
cmp
mov
outsl
dec
popa
pop
xchg
repz
scas
add
in
jbe
xchg
jns
xchg
call
push
leave
cmp
or
fs
ret
cmpb
xchg
addl
sbb
adc
lahf
xor
aaa
mov
lods
cltd
addr16
adc
push
mov
dec
jmp
jb
movsl
je
xchg
xor
imulb
sbb
es
aas
mov
add
add
inc
jno
ja
adc
ret
lret
inc
outsb
ds
jmp
daa
in
dec
jg
mov
push
sbb
pop
mov
push
data16
scas
mov
mov
mov
inc
and
mov
dec
dec
sub
adc
loopne
ja
inc
jne
gs
ret
push
ret
dec
les
jp
mov
jo
ror
sub
movsl
jg
jo
stos
repz
js
cmp
jle
loop
andl
xchg
sbb
dec
inc
mov
js
hlt
xchg
hlt
mov
ljmp
cmp
ret
les
into
jbe
push
scas
data16
xchg
cmp
jge
incl
lahf
pushf
xchg
pop
cltd
add
nop
cmp
jg
unpckhps
stos
mov
mov
mov
shll
mov
xchg
nop
or
cmp
xor
ret
fildl
sub
cmp
mov
lods
mov
lret
pushf
cmp
xchg
mov
test
and
xchg
dec
xor
and
xchg
ss
adc
add
bnd
cmpsl
shll
ss
sbb
xor
lahf
scas
test
jae
sbb
jne
cmc
arpl
rcr
add
add
lcall
flds
cmp
jp
push
adc
ljmp
xchg
sbb
ss
mov
out
fisttpll
lods
xchg
mulb
or
int3
aad
dec
lds
lods
jns
sbbl
in
es
stc
fildll
pushf
inc
jp
push
out
sbb
pop
mov
into
test
mov
mov
adc
cld
adc
mov
pushf
pop
in
ja
aad
sbb
mov
ret
mov
imul
dec
stos
mov
mov
cmc
xchg
into
lret
clc
sarb
fnstcw
je
xchg
xchg
ss
enter
sar
jae
aas
push
or
data16
outsb
outsl
xor
divl
push
fldenv
test
xor
dec
xor
rorl
and
mov
scas
sbb
jecxz,pt
scas
jp
sub
fdivrs
pop
lret
out
pop
inc
mov
lods
js
scas
stc
xchg
loope
mov
mov
cmp
and
in
mov
xchg
jnp
add
and
arpl
stos
push
dec
hlt
aad
jnp
sub
adc
jmp
test
sub
cmpsl
scas
test
js
ficoms
jle
xor
insl
sbb
pushf
lods
jnp
sub
xchg
and
aam
or
addl
adc
int
sahf
push
jg
sub
negb
shlb
mov
push
stos
addr16
dec
jg
stos
cmpsb
icebp
mov
inc
cmp
or
pusha
xorl
push
loopne
xor
imul
repnz
movsb
pusha
jb
aad
add
push
mov
cmc
mov
jo
loop
sti
inc
addr16
repnz
and
lock
cwtl
rcrb
testl
push
sbbb
iret
jns
inc
push
popa
dec
ja
xchg
dec
imul
sbbl
std
lock
adc
sub
push
and
rcrb
or
lds
and
sbb
or
stos
mov
lock
xchg
ljmp
popa
pop
cmpsb
adc
cs
pushf
in
pusha
push
imull
push
mov
aam
xchg
pusha
jns
cmpsl
lea
mov
jl
and
aad
arpl
xchg
cltd
sbb
inc
aaa
test
repz
xchg
insl
pop
out
pop
mov
pusha
jp
lea
cmpsb
repnz
je
test
pop
jbe
pop
fstpt
xchg
adc
xor
mov
mov
shrb
lds
xchg
mov
fwait
inc
repz
xor
mov
sbbb
mov
call
adc
push
loope
aaa
mov
loop
stos
cmp
add
or
sbb
xlat
mov
not
out
sub
mov
in
push
movsl
jmp
lcall
mov
stos
test
sub
adcb
mov
mov
cli
add
loopne
and
xlat
xor
imul
inc
sbb
jle
out
and
lcall
sbb
pushf
cmc
add
add
aad
or
xchg
push
and
cs
pop
jb
pushl
mov
jle
cmp
mov
inc
insl
fstps
out
add
out
inc
lret
xchg
cmpsb
arpl
stos
mov
xchg
cwtl
lods
mov
mov
daa
pop
mov
dec
cltd
lds
jle
adc
mov
sbb
mov
push
icebp
adc
and
push
add
push
adc
xchg
or
mov
cmpsl
xchg
jae
repz
jge
fmuls
dec
negb
pop
mov
xor
popa
xchg
fisttpll
xchg
ss
pop
pop
jge
addr16
insl
addb
lret
mov
dec
shll
dec
xlat
cmp
lea
xchg
mov
fimull
xchg
hlt
xchg
push
sbb
jae
loope
pushf
add
cwtl
cld
jbe
or
ret
cld
mov
jnp
lcall
mov
cmp
jbe
out
sbb
cmp
fwait
das
pop
hlt
js
push
sub
mov
sbb
aaa
or
dec
sub
stos
inc
fcmovnu
mov
dec
hlt
xchg
xor
repz
pop
adc
mov
outsb
jecxz
nop
jge
jmp
cmp
or
ljmp
insb
pop
xor
mov
xor
add
jp
mov
jo
aam
addr16
add
push
xchg
jnp
xor
imul
or
xchg
adc
mov
aas
mov
mov
sbb
decl
das
das
sub
stos
mulb
xor
xor
push
cld
jo
xchg
xor
pop
inc
adc
fisubrl
repnz
sub
push
adc
stos
negb
pop
das
sbb
push
std
ret
push
mov
inc
sti
xchg
sbbl
clc
adc
lds
inc
cmp
repnz
pop
mov
sti
jb
jb
mov
jp
in
inc
repnz
cli
call
jle
and
lock
sbb
cmp
pop
out
jo
adc
lock
scas
insl
adc
or
mov
pop
pop
call
icebp
incb
lret
call
or
std
popa
rol
mov
mov
xchg
testb
sbb
bound
sbbb
pop
stos
add
or
jne
jnp
mov
popf
std
nop
and
pop
inc
mov
xchg
xchg
inc
mov
outsl
jnp
xlat
cmp
dec
scas
or
popf
xlat
repz
push
cmpsb
cli
fidivs
adc
lahf
scas
push
mov
stos
jbe
shrb
fldl
push
mov
mov
sbb
out
and
push
mov
mov
inc
xor
mov
enter
xchg
xor
jb
ficoms
in
inc
sahf
ret
daa
pop
aaa
lret
rep
jo
push
cld
popa
mov
pusha
rcr
push
filds
jmp
insb
pop
inc
pop
sbb
push
mov
test
jge
mov
ja
frstor
cmp
xor
inc
add
ljmp
incl
add
rorl
sahf
push
or
ja
shrb
jmp
xor
fcomps
inc
push
cwtl
mov
jne
stos
fwait
sbb
inc
ja
lcall
inc
dec
inc
inc
jmp
loopne
mov
adc
xor
mov
inc
dec
jb
jo
mov
lret
mov
jns
push
leave
push
jae
xchg
testb
mov
sti
pop
xchg
jns
xchg
inc
cmpsl
in
cmc
xlat
jnp
mov
or
xor
jge
in
cmc
mov
shlb
pushf
push
push
jge
bnd
and
adc
mov
sbb
sub
loopne
das
add
mov
addr16
cld
mov
fisubl
xor
gs
sbb
mov
mov
repz
aam
push
mov
les
adc
daa
je
mov
adc
jbe
pusha
adc
daa
dec
dec
shlb
sahf
pop
testb
mov
shrb
pop
mov
repz
sub
mov
jne
clc
cmp
pusha
mov
jp
ljmp
test
cmp
jge
and
xchg
loopne
cs
ss
arpl
xchg
pop
inc
ss
sbb
into
jge
leave
jmp
je
xchg
cltd
mov
js
movsb
cmpsl
sarb
xchg
cli
bnd
nop
out
inc
dec
push
out
add
mov
jl
out
pop
adc
pusha
pop
pop
enter
mov
mov
dec
je
fldcw
nop
and
ret
mov
aam
cmp
jns
out
add
mov
jae
fiadds
test
pop
insl
arpl
sti
jae
cli
xchg
mov
push
cli
sub
pop
push
add
ret
les
je
ljmp
jnp
and
lea
not
lea
mov
jno
xlat
test
insl
movsl
ret
enter
sub
jp
dec
and
jno
scas
inc
xor
pusha
cmpsb
sahf
in
fsub
in
or
ljmp
testl
cmpl
pop
js
push
xchg
sbb
push
sub
fadd
inc
pusha
fnstcw
xchg
imul
fs
mov
in
push
inc
mov
es
loopne
movsl
aam
xchg
add
and
and
or
jg
xlat
inc
test
bound
xchg
push
jge
cmp
jbe
sub
repz
push
xor
enter
popf
jl
adc
lock
cmp
insl
daa
dec
push
stos
jne
dec
loop
shll
dec
ljmp
sbbl
jg
dec
push
mov
or
outsl
xchg
mov
stc
iret
icebp
add
jp
out
sbb
dec
cmc
lea
fdiv
dec
loop
arpl
ljmp
sub
sbb
notl
enter
sarl
push
xor
jecxz
loop
bound
sbb
addr16
loopne
sbb
dec
xchg
mov
cli
dec
pop
inc
cmpps
loope
mov
push
dec
jbe
sbb
enter
xchg
andb
movl
mov
adc
mov
pop
mov
lret
jb
sbb
popa
mov
xor
les
jmp
ja
xorl
xor
pop
add
fisubrl
out
inc
std
outsl
push
jb
rcrb
shrd
mov
lds
loopne
push
dec
mov
push
mov
and
add
jg
sub
nop
das
mov
xchg
movsb
mov
lds
mov
sahf
pusha
jne
and
push
dec
pop
into
mov
and
int3
call
jno
xchg
loope
cmp
sahf
insl
pusha
cmp
add
into
mov
jmp
mov
int3
xor
orb
cltd
add
call
mov
adc
mov
add
stos
xor
xchg
scas
push
cmpsb
push
add
mov
out
mov
cmp
inc
stos
lahf
xchg
pusha
outsl
sbb
ficomps
aam
jae
hlt
dec
fbld
rorl
aam
loop
pushf
clc
andb
in
mov
cmp
test
pop
loopne
push
and
inc
jmp
mov
sub
xchg
stos
xchg
cmpsb
ret
mov
aad
mov
xor
in
pusha
dec
and
inc
mov
xchg
or
std
testb
jb
iret
je
in
or
es
iret
pop
outsl
notl
not
das
and
xchg
adc
sbb
or
out
jge
js
stos
pushf
push
lret
test
clc
fcmovu
aad
adc
movsl
sub
push
and
pop
test
xchg
dec
or
or
jbe
push
cs
xchg
enter
idivb
jmp
aas
cwtl
cld
mov
fdivrp
dec
xor
lret
fsubrl
lock
push
sbb
pusha
cmpsb
aam
mov
test
xchg
adc
dec
fwait
or
adcl
jns
mov
sbb
int3
pop
xor
push
sti
test
mov
mov
inc
aas
into
push
mov
in
out
mov
dec
fs
or
push
xchg
mov
dec
adc
jl
pop
shlb
roll
mov
lock
pop
cli
popa
mov
stos
mov
fdivl
inc
jmp
pop
mov
mov
out
daa
test
cmp
pop
mov
mov
jle
gs
mov
lods
jmp
or
mov
arpl
inc
inc
push
xor
mov
add
fsubrl
nop
mov
jns
mov
inc
sbb
jp
clc
sbb
xor
decl
dec
fisubl
leave
cld
outsb
ret
mov
fistpll
push
loop
pushf
fstp
cwtl
ds
inc
aam
imul
jb
arpl
mov
sub
fmuls
lahf
test
push
cmp
mov
sbb
cmp
mov
pop
or
mov
cmpsb
subl
mov
lods
push
xchg
cwtl
sbb
fsubs
inc
add
sahf
lea
and
loope
fdivl
sub
imul
mul
mov
sub
dec
gs
or
leave
pop
stos
or
xchg
mov
jno
push
add
add
movsl
flds
stc
mov
inc
pop
mov
fstp
popf
add
pop
pop
jmp
in
and
xchg
cltd
xor
or
loop
sbb
loopne
jp
lcall
pop
cld
xchg
lods
xchg
xchg
or
cmpsl
sbbl
mulb
nop
fwait
int
push
xor
adc
xchg
inc
jg
imul
subl
pop
popa
ds
scas
fbld
pop
bound
sti
sbb
movsb
rcrl
xchg
repnz
mov
xor
out
pushf
jae
mov
fnstsw
cmpb
lds
mov
cli
jp
pop
jmp
pop
mov
xor
add
xchg
add
int3
push
sbb
push
into
add
jbe
add
or
cld
xor
insb
sbb
xchg
jnp
mov
mov
xor
mov
fisttpl
mov
clc
negb
or
aam
inc
xchg
decb
jp
outsl
and
xor
xchg
sahf
cmp
xchg
and
dec
loope
jmp
cmp
pop
jbe
lds
pop
jp
jecxz
lds
out
repnz
inc
mov
pop
fstps
xchg
fdivl
aam
xor
loopne
mov
jne
insb
sbb
xchg
iret
push
movsl
out
cmpb
jp
jb
das
ret
sub
mov
lret
fcoml
jle
or
jmp
jmp
les
push
into
xchg
jl
add
mov
data16
fs
pop
lds
pushf
mov
testl
cmc
jno
pushf
xchg
sbb
sbb
push
fstps
mov
arpl
es
and
shr
jg
rorl
cltd
mov
or
movsl
cmp
jmp
lock
jg
ret
dec
cmp
cmp
add
sahf
pusha
cltd
loop
sbb
ljmp
lret
je
jmp
sbb
fidivl
push
insb
xor
dec
in
add
dec
filds
negb
dec
negl
sub
scas
mov
mov
xchg
pusha
push
sbb
iret
cwtl
mov
fidivrl
push
cmp
xchg
jge
add
and
mov
jb
out
mov
jp
sbb
cmpsb
cmp
cmp
fcoml
jb
ret
repz
pop
data16
dec
fs
mov
mov
cltd
push
lods
jbe
xchg
cld
scas
and
dec
lods
sub
sub
dec
sti
xlat
push
jbe
cmc
mov
adc
cmp
das
mov
stos
test
outsb
test
xchg
jno
jb
dec
iret
mov
enter
std
add
xchg
push
mov
ss
ret
xchg
ficoml
insl
xchg
mov
xchg
mov
out
loop
aad
popa
fisubl
les
std
ret
hlt
mov
arpl
xor
test
fstpt
push
fdivp
shrb
mov
mov
xor
stos
je
sub
xchg
frstor
mov
repz
mov
popa
adc
lea
pop
jmp
and
mov
push
dec
leave
scas
mov
cltd
sarb
cmp
popf
out
dec
into
lahf
std
and
dec
lret
jno
mov
fwait
outsl
xchg
pop
dec
into
pop
cmp
dec
cmc
jne
sbb
xor
push
repz
movl
jbe
sbb
sub
mov
jge
test
mov
or
push
cld
int3
sbb
out
cmp
pop
sbb
add
jbe
sti
cmp
test
dec
outsl
imul
aas
rcll
jmp
es
sbb
ffree
push
int3
mov
xlat
add
jge,pn
inc
pop
adc
mov
negb
aas
insl
cmpsl
dec
and
jg
lock
add
lods
not
sub
mov
sbb
iret
sbb
aad
xor
mov
mov
add
mov
mov
sub
xorl
push
xor
add
jg
sbb
sbbb
jnp
push
out
inc
cmp
jecxz
or
mov
push
jge
sub
adc
add
mov
stos
lea
jmp
fcmovbe
push
loope
sub
into
jae
xor
xor
xchg
xor
xor
sarb
cmc
mov
inc
or
inc
xor
lahf
test
fdivs
jg
xchg
rolb
mov
dec
mov
arpl
out
clc
push
cmp
adcl
lock
xor
xor
jo
mov
hlt
mov
iret
or
dec
fimull
mov
cmpsb
jl
sbb
push
and
jl
push
pop
add
stos
testb
mov
cltd
mov
mov
dec
mov
fsubl
mov
gs
neg
bound
out
cmpsl
pop
pop
mov
pop
pop
dec
inc
flds
pop
mov
insb
cmp
push
pop
imul
pop
add
cmp
je
pushf
pusha
xchg
mov
cltd
pop
loopne
ficomps
jp
xor
mov
out
aam
cmpsl
jmp
mov
lahf
ja
pop
mov
ja
jl
mov
aad
adc
dec
dec
aad
push
pop
adc
mov
addl
push
lret
lock
stos
adc
sbb
jae
adc
js
cld
rep
xchg
daa
nop
cmp
xor
fwait
jp
mov
test
aaa
sub
data16
pusha
mov
cmpsl
inc
xor
jb
stos
jmp
enter
enter
mov
mov
ficomps
cmpl
jnp
cld
ja
jnp
rcr
lahf
or
imul
mov
fisttpll
idivb
ljmp
xor
adc
xor
xchg
stc
jmp
cmp
aas
imul
shl
cmp
decl
jae
jecxz
dec
xor
dec
jns
mov
push
or
xchg
jecxz
js
pop
data16
adcb
push
loope
sbb
dec
pop
sub
mov
jns
lods
jge
outsl
call
jns
push
push
mov
or
xchg
data16
mov
pop
shll
test
adc
sar
push
pop
andl
and
mov
les
push
cmp
aad
divl
repnz
and
lds
mov
clc
jmp
push
scas
es
fs
stos
scas
fldcw
push
clc
data16
cwtl
cmpsl
inc
mov
cmp
jecxz
mov
mov
std
jno
test
push
and
mov
pop
scas
push
sub
xlat
out
test
inc
pop
sbbb
xchg
inc
dec
mov
dec
mov
mov
inc
fdivs
inc
jbe
insb
pminub
sub
pop
jmp
xor
mov
repz
add
push
fisubrs
dec
and
or
aad
xchg
movsb
cmp
pop
rcl
cmpsl
sbb
dec
scas
mov
cli
bound
cmp
xchg
jnp
rcrb
imul
mov
push
rol
inc
test
stos
sbbb
fwait
mov
imul
jne
mov
ljmp
and
inc
test
push
sti
or
cwtl
in
sub
cmp
shl
mov
aas
pop
ficompl
js
lock
in
inc
xor
push
sti
stos
fwait
dec
add
roll
push
das
test
xchg
mov
mov
add
mov
inc
lock
mov
and
add
mov
push
fwait
jmp
or
sub
out
mov
repnz
aaa
jle
push
mov
test
sub
addr16
out
adc
inc
xchg
xchg
aaa
pop
cli
stc
in
mov
pop
xchg
mov
inc
and
imul
popf
outsl
mov
push
fisubs
pop
in
jg
push
stos
icebp
xor
idivb
dec
iret
pop
pop
int
fs
out
movb
cmp
cmc
mov
pushf
das
outsl
mov
rcrb
cmp
test
fmull
in
cwtl
add
fs
test
fwait
jbe
cmp
int3
push
iret
dec
in
mov
pop
loop
mov
mov
stos
push
lods
sbb
mov
bound
xchg
das
xchg
push
addb
inc
and
int3
mov
xchg
xchg
add
sbb
std
test
xchg
adc
sbb
test
jmp
sahf
cmpl
aam
shl
js
cmpsb
imul
loop
pusha
pop
mov
sti
loope
xchg
ret
repz
inc
insl
in
dec
mul
xchg
iret
jnp
xchg
scas
mov
icebp
cmp
jb
mov
mov
xor
icebp
js
sub
ljmp
mov
mov
jnp
std
mov
es
xchg
push
xchg
hlt
push
jo
nop
mov
push
inc
jle
inc
fwait
dec
xor
pop
cmp
or
dec
scas
mov
push
or
mov
addr16
mov
loop
push
inc
outsb
xor
out
in
pop
sbb
sbb
test
xor
stos
or
dec
and
stos
mov
dec
jmp
push
pop
sub
cs
add
pop
cs
icebp
imul
xchg
daa
bound
pop
xchg
pushf
push
push
fists
das
jge
xor
aas
scas
fsts
adcl
jg
ss
pop
andb
adc
mov
jecxz
mov
mov
add
into
pop
clc
outsl
xor
mov
mov
pop
push
mov
out
mov
add
and
movsl
iret
cwtl
jp
ficompl
push
leave
mov
and
xchg
sbb
iret
jg
adcb
cmp
cmp
hlt
pop
dec
popf
mov
jne
or
ficompl
cmp
arpl
mov
fisttps
sub
xchg
ret
mov
add
mov
pusha
out
in
push
mov
loopne
cmpsb
mov
int3
int3
lret
add
sbb
nop
or
or
and
sub
sbb
mov
lds
pop
dec
mov
pop
aad
ret
adc
ja
push
outsb
cltd
cmp
jl
lock
cwtl
jl
shll
push
orl
mov
xchg
inc
mov
push
pop
inc
dec
pop
mov
pop
mov
lock
dec
adc
xchg
mov
in
ret
mov
jno
jecxz
push
cltd
movsl
mov
dec
mov
xor
iret
mov
sarb
or
ljmp
pop
dec
dec
sti
mov
orl
lret
addr16
mov
daa
mov
cs
xor
mov
gs
mov
jb
sub
inc
push
pop
adc
lcall
mov
lods
mov
push
cmp
std
lds
mov
jge
into
and
adc
xor
mov
andb
mov
jge
pushf
xchg
inc
mov
lcall
sbb
movsl
sub
pop
pushf
adc
stos
pop
ret
pop
lret
sub
and
push
and
ficomps
test
xchg
lock
xchg
daa
mov
lcall
mov
hlt
sbb
mov
stos
pop
dec
mov
sub
adc
push
inc
lds
mov
pop
mov
cmp
in
and
jae
and
cld
jg
repnz
mov
out
je
int
and
loope
sarl
imul
inc
pop
push
repnz
xor
mov
push
dec
stc
nop
fwait
cmp
cwtl
and
ss
adc
fs
mov
adc
push
jecxz
xor
aaa
mov
fstps
xor
and
neg
out
xchg
mov
cmp
pusha
xchg
int3
jecxz
xchg
mov
mov
out
repz
push
repnz
adc
or
adc
gs
xchg
rorb
mull
pusha
ret
mov
and
xchg
mov
cmpsl
test
xchg
mov
xchg
lea
sbbb
fdivrs
and
jbe
add
jmp
pushw
aad
dec
lahf
in
orb
jo
pop
or
in
cmp
push
dec
lcall
mov
mov
ss
cwtl
leave
jbe
fldt
jge
je
xchg
xchg
push
dec
jne
push
fnclex
fwait
cmc
sarl
adc
xchg
jmp
push
mov
mov
xorl
subb
stc
std
scas
fs
sub
fs
dec
mov
and
jle
xchg
sarl
dec
fdiv
mov
fidivrl
loopne
jbe
jnp
adc
pop
pop
jnp
fidivrl
pop
xor
xor
xor
and
mov
out
jae
lds
dec
pop
jl
xchg
out
ret
mov
jmp
repz
daa
push
ds
cmp
nop
jae
inc
out
gs
adc
dec
out
jne
lock
jbe
xchg
lods
xor
mov
movsl
in
cwtl
and
jnp
pop
ljmp
orb
or
scas
push
out
ret
inc
cmp
sbb
fstpl
mov
xor
fdivl
jge
insl
pop
cltd
lcall
orb
loopne
xchg
sub
xlat
sbbl
xchg
pushf
push
sahf
xchg
ja
das
mov
cmp
lods
mov
in
xor
push
push
test
jae
jns
ret
mov
sbb
push
daa
push
cmpsl
cmpb
fidivs
or
mov
pop
xlat
cmpl
lahf
mov
ja
dec
sub
stc
popf
dec
rol
rcrw
imul
sbb
addr16
jae
push
icebp
inc
and
dec
jle
mov
daa
push
sub
ja
xor
out
test
test
mov
and
rcr
data16
inc
lock
rorb
mov
test
push
in
mov
jg
pop
daa
test
jne
iret
test
xlat
addr16
lret
mov
and
in
and
sub
push
paddd
int3
call
mov
imul
dec
jp
and
push
push
inc
imul
fs
nop
filds
mov
mov
roll
xlat
lret
mov
outsb
cmp
cmp
push
or
sbb
daa
xchg
jmp
call
rolb
rolb
push
and
test
xchg
xor
push
cmp
xlat
repz
test
negl
sbb
and
push
lahf
push
lods
fwait
lahf
pop
clc
enter
andb
js
lods
lahf
jl
es
push
xchg
daa
das
dec
vrsqrtss
sbb
dec
sub
push
xchg
aad
xchg
int3
cwtl
icebp
pop
pop
jle
cmp
add
cmp
adc
fisttps
repz
mov
rolb
cmp
push
and
dec
popf
push
pop
fildl
ud0
jmp
popa
scas
xorb
gs
pop
jno
rcrb
data16
jmp
addr16
jl
sbb
aas
sbb
je
adc
pop
jmp
xchg
fistl
arpl
jmp
out
cmpl
into
shrb
out
lock
add
mov
sub
cwtl
jl
cld
jp
mov
push
cmp
mov
xlat
xchg
xchg
int
jmp
fucomi
ja
jnp
sbb
add
sbb
sub
fwait
or
xchg
fwait
push
adcb
and
rclb
cmpsl
jle
pop
jnp
or
or
lahf
mov
and
or
ret
xchg
mov
mov
daa
or
test
cmp
movb
add
xchg
cs
ds
inc
mov
and
inc
leave
ret
call
leave
mov
cmp
loopne
scas
adcb
lock
int
jbe
adc
sub
mov
test
cmpsl
pop
dec
add
jmp
fstpt
xchg
dec
mov
stc
lea
rcrb
jge
inc
mov
and
repz
out
decl
dec
sahf
mov
jo
je
dec
push
push
arpl
add
test
xor
in
jae
mov
dec
xor
incb
in
mov
jle
scas
inc
or
push
push
xchg
into
xchg
cmp
inc
pop
xchg
sub
lcall
shlb
mov
adc
sbb
ficoms
jl
icebp
and
mov
imul
jae
add
cmp
xchg
adc
lods
xchg
shll
ret
xadd
lret
add
out
inc
mov
jne
in
lock
in
or
scas
notb
into
lea
mov
aaa
cmp
aaa
mov
push
and
push
sbbl
aas
mov
pop
push
xchg
adc
dec
mov
int3
into
or
xor
push
cli
jo
jno
pop
in
stos
push
ds
mov
pop
fucomi
mov
pusha
jnp
lds
push
xchg
sahf
lahf
cmpsl
mov
lahf
jns
xor
pusha
jecxz
cs
push
cs
push
cmp
repnz
pop
jp
and
in
or
sbb
test
xchg
int
pop
cli
cmp
popf
stos
xchg
cmp
inc
bound
shl
lahf
dec
scas
mov
jmp
mov
sub
addr16
mov
sub
mov
or
cltd
sub
push
fstsw
push
stos
jbe
jo
adc
repnz
scas
lahf
out
cli
mov
fdivl
xor
xchg
lret
pop
scas
push
fcmovnbe
gs
pop
adc
dec
sub
pop
pop
fs
call
das
scas
xchg
inc
outsl
daa
mov
pop
scas
push
xchg
jecxz
adc
shl
daa
lcall
cmc
ss
jns
fisubrl
stos
sti
xor
ja
fisttps
sbbl
push
fwait
dec
and
lock
mov
aaa
dec
xor
dec
popa
daa
int
gs
jmp
jp
js
cld
outsb
or
js
loopne
outsl
scas
and
jae
int3
fmull
lcall
addl
pop
inc
pop
mov
aad
out
shll
shrl
cs
repz
mov
mov
adc
out
sub
ds
lret
mov
rcll
jle
or
mov
mov
xor
mov
pop
mov
jo
jp
popa
adc
lods
gs
int3
push
fcoml
ja
mov
out
adc
dec
pop
and
enter
push
mov
int3
jmp
jae
adc
nop
mov
roll
std
mov
rcrb
repnz
daa
frstor
add
dec
lods
fldl
imul
push
mov
pop
dec
xchg
loope
inc
pushf
outsb
inc
cwtl
inc
mov
in
pushf
das
scas
test
pop
inc
sub
rol
sub
les
mov
mov
xchg
mov
fsubrl
mov
stos
mov
push
rcrb
pop
pop
aas
fidivrl
and
shlb
or
mov
orl
movsl
xchg
add
dec
aas
mov
pop
fiadds
pop
dec
out
adc
addr16
cmp
aam
dec
sti
pusha
mov
sub
mov
sbb
or
adc
cmpb
push
clc
or
pop
push
fcmove
and
xchg
or
push
in
pop
jne
lock
aas
mov
inc
pop
add
cwtl
je
mov
lret
sub
rol
sbb
out
sti
insb
fcom
test
mov
push
xchg
lret
and
arpl
lea
cmpl
test
cmp
sar
testb
ja
jne
sbb
mov
ret
icebp
sub
pushf
lods
jg
and
sti
sti
fcoms
push
aaa
stos
jge
cmp
cmp
xchg
imul
out
sti
jp
push
mov
ret
pop
mov
je
mov
in
jae
push
mov
cmp
outsl
popf
cli
lea
xor
fldcw
pop
stos
push
int
push
sub
aad
sbb
cmpsl
les
sub
xchg
out
jmp
mov
lahf
daa
test
rcrb
aam
aam
lcall
mov
xor
sbb
mov
ror
push
out
je
mov
ret
cs
imul
dec
das
jle
es
cwtl
mov
xor
bts
dec
loope
lds
loopne
add
dec
cltd
mov
ja
mov
jg
jno
aam
push
lcall
divl
add
sahf
js
push
out
push
gs
outsl
xor
pop
cmovno
push
int3
lret
inc
ss
mov
mov
jg
adc
fnsave
stos
cld
mov
xchg
aas
sbb
stos
cmp
test
cmc
std
xor
dec
nop
loop
jo
fstps
jne
jmp
mov
gs
xchg
jg
mov
lods
das
ljmp
hlt
mov
or
ror
pop
cli
mov
jge
jge
mov
jno
lds
or
mov
sbb
movsb
pop
imul
sti
fcmovnu
cltd
pop
lahf
call
adc
arpl
add
xchg
xor
out
dec
mul
add
dec
fsub
or
pop
shlb
mov
and
stos
pushf
and
cmp
adc
mov
fcmovnbe
out
int3
test
cld
and
icebp
bound
xchg
clc
dec
pop
and
push
sahf
loop
js
lods
ss
fs
aaa
scas
mov
int3
jg
xchg
sti
mov
es
or
jge
jle
add
add
inc
xor
cld
mov
pop
cmpb
ds
in
popa
in
mov
add
inc
lahf
fwait
ss
lret
and
mov
jo
in
dec
loope
stc
mov
movsl
push
sysenter
mov
insl
cmp
and
mov
or
sti
xchg
cmp
imul
push
mov
int
jp
mov
pusha
std
scas
cmp
xchg
cmc
cmp
or
inc
cmp
jge
addb
mov
scas
jno
cmpsb
movsl
lahf
rclb
xor
test
pushf
pusha
dec
cld
sub
lods
sbb
add
pop
jmp
mov
mov
nop
shr
loopne
scas
fnstenv
adc
repnz
mov
jns
mov
call
lods
js
jp
rolb
xor
jl
movsb
scas
test
daa
decb
cltd
add
daa
inc
daa
mov
dec
loopne
add
inc
stos
test
jecxz
ret
fcoml
stos
pushf
mov
cld
cmc
lahf
mov
stos
aam
add
cmpsl
orl
or
xchg
xor
pop
push
mov
out
je
sti
or
jl
dec
out
cmpb
cmp
dec
int
push
mov
push
cmp
jecxz
mov
and
jb
sbb
mov
cmp
sarb
dec
ss
leave
and
arpl
lcall
cwtl
push
lret
out
pop
imul
mov
int
test
repnz
loop
insl
mov
xchg
bound
or
aam
and
cli
movsb
mov
inc
loop
pop
movsl
push
int3
add
xor
test
xchg
pop
jo
idiv
fistpl
mov
addr16
push
lds
push
and
stc
mov
xlat
pop
fildll
sub
mov
add
enter
iret
mov
loope
outsb
adc
or
aam
sbb
aad
loope
sub
inc
call
or
ss
inc
movsb
jg
shl
movsb
bound
xchg
movsl
dec
test
lods
pusha
outsl
or
repz
pop
xchg
jmp
pop
sub
mov
adc
inc
fistl
shlb
repz
gs
push
subl
shll
shlb
pop
popa
dec
les
hlt
adcl
das
lcall
testl
stos
lds
call
push
rcrb
cmc
stos
test
in
mov
push
in
mov
sbb
fwait
out
ret
repz
das
shll
sbb
cmp
dec
out
inc
pushf
sbb
sahf
inc
aad
jno
pop
rolb
test
lods
mov
into
repz
mov
mov
test
mov
jmp
xlat
hlt
sti
mov
shl
and
icebp
mov
xchg
lret
jmp
out
std
shrl
lret
pusha
arpl
xchg
cmc
fucomip
lods
and
mov
sbb
mov
ret
xchg
testb
testb
dec
fsubl
nop
out
pop
je
movsl
dec
sbb
mov
push
out
stos
pop
fdiv
dec
addr16
sub
cmc
in
mov
inc
iret
jle
push
sahf
sbb
aad
cmp
jle
js
xchg
xor
lret
cmc
imul
pop
popf
mov
lahf
or
scas
or
cmc
jg
hlt
push
fiaddl
adc
sbb
jae
fdivr
push
xchg
mov
js
pop
sbb
call
mov
pop
xor
into
or
sub
add
jbe
into
fnstsw
push
iret
lret
lret
xor
cmp
icebp
adc
pusha
jle
aad
pusha
aam
pusha
jne
mov
sbb
pop
jae
andl
arpl
mov
fucomi
xorl
imul
test
mov
mov
lret
outsl
aam
pushf
mov
xor
popa
mov
mov
rclb
push
mov
fwait
iret
mov
inc
or
mov
jle
rorb
cmp
fstps
into
mov
icebp
mov
lods
xor
lahf
loopne
fstpl
mov
jbe
out
sub
dec
xor
push
fbstp
cmc
add
jnp
mov
mov
xchg
and
iret
leave
int
cs
imul
cwtl
mov
bound
jp
jbe
sarl
cmp
stos
xchg
pop
xor
sar
ret
push
icebp
std
mov
lea
dec
mov
out
jnp
inc
cltd
movaps
and
in
mov
popa
aad
add
pop
mov
lcall
dec
in
stos
xor
js
jge
sub
cs
mov
jg
push
mov
xor
out
test
sti
push
xor
mov
jno
fnstenv
mov
xchg
dec
stc
rorb
add
pop
pushf
in
mov
xchg
cmp
sarl
fcmovnu
sbb
cmpsl
stos
test
popa
cs
and
rcl
into
push
sbb
and
aam
stos
mov
jl
scas
enter
xor
gs
nop
into
addr16
mov
movsl
mov
mov
jp
loope
push
shll
loopne
dec
cmp
lock
mov
flds
add
popa
jmp
mov
lods
cmp
int
sub
mov
cmp
rcr
lret
movsl
insl
mov
insb
test
push
jp
inc
aam
insl
mov
mov
cmp
mov
xor
ret
inc
inc
or
int3
fimull
jl
andl
xor
loope
daa
xchg
add
repnz
mov
insl
sahf
jb
pop
cmp
cmc
dec
lret
jmp
cmp
out
mov
lcall
fdivs
fadds
push
fsubrs
mov
cmp
daa
arpl
jno
or
shl
stos
fwait
mov
leave
out
sbbl
pop
dec
nop
jnp
mov
and
shll
dec
sbb
push
cli
mov
sub
or
gs
aas
inc
jl
sub
aam
and
push
ret
je
or
pop
adc
iret
rcrb
addb
repnz
mov
cmp
xlat
lcall
outsb
lret
lahf
iret
pop
jbe
aas
decb
mulb
outsl
jae
shlb
out
mov
xchg
stos
inc
jl
jbe
dec
inc
sahf
mov
outsb
popf
xor
mov
out
push
xchg
pop
xchg
andb
cmpsl
test
push
or
dec
out
idivl
aam
or
sahf
sub
mov
push
adcl
cmp
xchg
cmp
int3
clc
cmp
or
push
pop
fldcw
fnsetpm(287
or
imul
fistpll
or
adc
cli
test
in
cld
xchg
pop
pop
repnz
mov
daa
mov
into
push
iret
int3
out
adc
movsl
mov
std
mov
xchg
sahf
jl
mov
and
cmp
call
pop
and
sbb
lcall
adc
cmc
cwtl
mov
stos
mov
xor
jle
pusha
lret
push
jb
ret
and
or
int
mov
imul
sub
xor
and
or
imul
int3
ds
push
push
push
sahf
fldt
sub
xor
push
add
cmp
mov
push
dec
aam
push
iret
out
pop
rol
les
or
xlat
pop
mov
add
cwtl
jge
mov
jno
sbb
aaa
aam
lret
jge
mov
sbbb
jle
xor
dec
mov
fwait
imul
jbe
mov
adc
pop
or
mov
pop
fdivrl
fnstcw
adc
jae
shlb
cltd
in
outsb
cs
push
lock
aam
icebp
in
jge
rcrb
stc
pop
mov
mov
ljmp
xchg
xor
outsl
push
xor
mov
scas
lock
das
mov
and
mov
or
or
divl
push
sub
jle
cmp
stos
pushf
dec
int
gs
mov
cmp
xchg
sub
cmp
mov
outsl
cmp
cmp
bound
fucomp
aas
movsl
ds
stos
xor
imul
dec
pop
iret
out
push
insl
jl
aaa
jmp
ljmp
and
xor
push
lods
jl
ficomps
mov
clc
pop
ds
adc
or
mov
sbb
mov
sbb
add
adc
sub
mov
sbb
dec
js
leave
and
xor
cmpl
inc
lods
lea
fcoml
jnp
aam
fwait
or
adc
enter
sbb
push
or
int
fisttps
xchg
mov
lcall
cwtl
movsl
mov
test
cmp
mov
xor
xor
inc
push
mov
push
arpl
test
int3
sahf
mov
cld
xor
lret
mov
mov
rcll
enter
pusha
jae
sub
outsl
mov
rolb
push
lret
xchg
hlt
xchg
notb
jbe
out
bound
aad
adc
mov
movsb
jbe
movsl
mov
mov
cmpb
mov
idivl
add
es
push
movsl
pop
loope
xchg
js
mov
jecxz
test
push
ret
push
mov
inc
lods
pop
mov
aaa
push
fmuls
jle
sarl
and
in
fldt
xor
add
push
jnp
nop
aad
in
loopne
cld
outsl
testb
xchg
aaa
adcl
mov
jns
mov
and
fs
add
cmpsb
mov
or
dec
and
test
outsl
addl
mov
mov
into
bound
outsl
in
movsl
pop
add
rclb
add
gs
lds
imul
sbb
jnp
rolb
out
das
or
cmpsb
sub
xor
xor
push
xchg
lds
outsb
js
in
push
push
mov
xchg
or
aas
in
arpl
jnp
xchg
int3
cs
idiv
shlb
mov
scas
add
dec
mov
push
ficompl
jge
lahf
imul
repz
lock
dec
jmp
cli
cli
inc
mov
stc
sub
or
jno
xchg
pusha
xchg
push
out
xlat
and
stc
push
hlt
mov
popf
cli
add
sahf
add
mov
sarl
dec
jmp
out
or
mov
xchg
xor
dec
xor
jo
lods
mov
repz
rcr
bnd
jns
mov
out
ficoms
mov
sub
mov
lds
jnp
jo
mov
lock
inc
mov
push
or
cmp
dec
leave
ds
jnp
dec
ljmp
mov
rcrb
pusha
mov
cmp
mov
mov
stos
push
aam
rol
sub
lret
or
and
rol
push
nop
jno
nop
cld
adc
add
sub
xor
xor
and
mov
mov
mov
push
mov
xchg
pop
cmp
or
pop
faddl
aam
xchg
dec
stos
out
arpl
xchg
xor
xchg
cmp
and
jne
xchg
push
push
adc
in
test
rolb
cmpsb
cld
or
out
add
rol
sbb
test
dec
cmp
mov
mov
inc
and
adc
in
lahf
cli
mov
inc
lock
lods
adc
mull
pop
dec
fs
andb
mov
adc
notb
enter
scas
cli
movsl
filds
iret
ud0
xor
shll
push
mov
mov
outsb
jnp
dec
jbe
std
daa
fdiv
xchg
mov
dec
add
push
xor
mov
inc
fidivs
icebp
bound
push
mov
lret
pushf
xchg
and
enter
in
and
mov
stos
loop
fwait
pop
out
popf
and
jg
fistpl
cld
cmpsl
fisttpll
negb
dec
lcall
xchg
les
daa
lret
addr16
lret
call
fadds
das
ljmp
lret
in
popa
mov
sahf
rcrl
out
mov
pop
rorb
sub
push
jmp
or
dec
mov
jmp
imul
xchg
popf
and
shlb
filds
xchg
dec
cmc
fwait
adc
pop
sbbb
jo
in
jns,pn
test
add
inc
in
dec
mov
dec
jge
jmp
or
cmpsl
iret
xor
xor
cmp
push
add
jl
out
gs
add
pop
pop
rolb
mov
jp
test
push
lods
nop
ret
sarb
jns
dec
mov
faddl
out
mov
sub
data16
push
adcl
clc
sbb
xchg
mov
fmul
sti
cs
out
push
pop
pusha
shll
call
mov
jbe
cltd
arpl
push
out
cltd
cli
mov
cld
xorl
mov
hlt
jb
and
lock
mov
int
xchg
push
xor
pop
mov
jae
mov
test
out
pop
inc
cmp
orl
hlt
mov
outsl
jg
add
add
test
mov
rcrl
loopne
mov
mov
sar
jb
aas
hlt
neg
pop
not
cmpsl
subb
loope
mov
mov
out
mov
insb
cmpsl
xor
cmp
dec
in
add
fdivrs
xor
mov
lods
and
and
or
push
aaa
dec
cmpsb
jae
repz
cmp
fstl
hlt
xor
test
ret
bound
sbb
inc
sbb
jns
or
push
jno
jmp
shlb
in
add
les
out
jl
loope
adc
sahf
icebp
or
out
mov
in
jmp
lcall
or
cmp
lods
mov
pop
mov
inc
clc
test
lea
xor
xor
imulb
testl
mov
das
movsl
out
sub
hlt
imul
mov
push
pop
xchg
add
ljmp
inc
rcrb
jle
jns
out
mov
cmpsl
mov
adc
mov
jmp
ja
jecxz
mov
jne
push
fdivrs
adc
adc
or
mov
dec
in
cmp
sub
ds
dec
ljmp
jle
stc
jae
adc
pop
sbb
pop
popa
mov
loope
pop
jnp
leave
xorb
jns
dec
loope
in
mov
aaa
mov
cmp
adc
movsl
pusha
int3
loope
pop
div
pop
addl
mov
jl
mov
mov
test
fsubrs
mov
jmp
pop
pmuludq
xchg
xchg
mov
and
add
jb
cli
enter
jecxz
scas
mov
lcall
pushl
mov
nop
js
idivb
add
or
pop
mov
pop
pop
pop
mov
mov
scas
xchg
and
jnp
dec
jbe
push
lahf
pushf
xchg
dec
test
sub
jle
mov
adc
fs
inc
push
lds
dec
dec
jp
into
xchg
and
aad
mov
add
and
sub
jmpw
nop
jle
mov
cmpsl
aad
popa
fildl
mov
outsb
push
mov
test
into
inc
jne
mov
pop
clc
xlat
adc
inc
das
pop
jge
int
mov
pop
stc
fnstsw
dec
sub
mov
or
int3
int
pusha
into
pusha
xchg
xchg
xor
imul
nop
inc
faddl
dec
ret
jnp
imul
sub
divb
add
push
mov
adc
cmp
out
adc
fcmovu
cli
lcall
aas
sahf
mov
inc
add
xor
cltd
push
cmc
inc
sahf
int
shll
ret
lds
xchg
std
push
sbb
lret
fmul
lods
inc
out
jb
out
mov
ret
mov
in
mov
mov
mov
mov
mov
fcomip
test
pop
arpl
mov
pop
jae
and
jo
test
and
jl
sbb
xchg
add
adc
inc
test
add
xor
and
and
lds
jno
pop
or
les
fidivs
or
js
stos
push
cs
icebp
pop
jle
xlat
mov
retw
mov
movsb
addr16
lea
jge
push
mov
push
aaa
pop
sti
and
jae
into
hlt
iret
pusha
mov
in
les
fcomps
ret
aas
je
mov
xchg
dec
and
ss
jmp
shlb
call
mov
rcrb
push
dec
sti
or
out
xchg
int3
pop
mov
shrl
pop
mov
sbbb
lods
adc
lods
cmp
jb
pop
ret
push
inc
aam
pop
and
and
out
or
jl
xchg
out
pop
cmpsb
jmp
out
jl
inc
call
sub
stos
ja
mov
es
stos
mov
fsubrl
dec
add
jo
test
lret
mov
sbb
push
mov
mov
push
mov
dec
mov
out
lods
outsb
xlat
push
push
push
adc
mov
xchg
mov
es
out
xchg
fldenv
ficoms
stos
fwait
pop
push
test
outsl
push
repnz
scas
lock
scas
mov
in
or
in
cwtl
add
scas
daa
jbe
mov
movl
mov
aaa
ljmp
lret
adcb
xchg
pop
mov
sub
pop
loopnew,pt
jg
pop
jg
push
pop
or
add
mov
sub
cmp
xor
cli
ficompl
fiaddl
pop
and
cli
mov
lock
xorb
lds
sub
inc
imul
mov
push
frstor
arpl
and
adc
inc
push
push
jp
push
cmp
fwait
ror
cmp
dec
pop
or
aam
mov
cli
or
mov
push
movsl
jbe
pop
mul
jg
dec
pop
fisubrl
outsb
sbb
mov
mov
mov
and
adc
mov
testl
andl
in
xchg
xchg
jp
loopne
push
daa
jns
addr16
mov
ds
cwtl
xchg
pop
or
lods
outsl
fimull
adc
add
scas
pushf
shlb
ss
push
sti
add
jp
sahf
mov
or
shl
sahf
out
push
mov
fwait
pop
jo
lret
and
in
push
repz
jmp
hlt
jp
cmp
pop
enter
pop
bound
push
add
cmpl
jb
sbbb
ret
mov
es
cmc
cmp
sbb
sbb
loope
gs
cmp
sbb
jmp
mov
push
iret
jle
lahf
pop
dec
push
inc
test
fsubrl
int3
imul
xor
test
push
and
mov
push
out
clc
pop
imul
push
xchg
pop
xor
fdivl
or
mov
cmp
dec
jl
xor
fwait
lods
inc
andl
test
fiaddl
sub
inc
mov
mov
adc
insl
dec
and
call
inc
in
mov
fwait
push
lcall
lds
add
jl
push
cs
sbb
push
adcb
push
clc
insl
nop
pop
scas
sti
mov
mov
inc
jnp
xor
cmp
pushf
aam
cli
adc
sbb
push
lods
cmp
add
fstps
pop
and
push
mov
out
and
daa
jg
addr16
or
pop
xchg
push
mov
sub
movsl
clc
ss
lret
cmp
pop
dec
xor
push
xchg
movsb
in
push
mov
jmp
pop
adc
push
fimull
cmp
jl
mov
push
int3
adc
lea
pushf
sti
xchg
cwtl
mov
in
mov
aam
lds
lea
mov
lods
call
dec
jge
shrb
stos
xor
adc
std
aad
pop
lcall
stc
test
cmp
pop
mov
das
jns
push
divl
push
or
pop
push
aad
jmp
mov
jge
inc
sti
or
mov
mov
sbb
inc
orb
fldt
arpl
xor
popf
leave
and
cwtl
sub
push
fstpl
loop
sbb
add
jns
jae
fildll
out
pop
adcb
mov
xor
jbe
std
imul
xorb
jge
fs
jecxz
jnp
pop
pop
cmp
jns
negl
lret
in
rcrb
lds
popf
push
pop
push
xchg
lret
inc
lret
push
ficomps
bound
repnz
xchg
ret
fstl
lods
stos
push
jbe
jns
sti
mov
xor
fldenv
jmp
aad
push
pop
jg
mov
and
mov
inc
and
sbb
mov
inc
sbb
adc
sub
bound
insb
out
scas
sub
cmp
push
sbb
mov
xor
dec
sarb
inc
dec
add
incb
rorb
xchg
cmp
scas
cltd
shl
mov
ja
adc
mov
ret
xchg
rorb
mov
mov
jnp
push
adc
push
adc
xchg
enter
clc
add
mov
inc
cmp
in
mov
or
xor
xor
xor
adc
repnz
inc
cmc
mov
and
shrb
and
mov
mov
sbb
mov
js
mov
inc
nop
fildll
xor
sbb
jl
xor
sub
jg
out
cmp
hlt
test
jnp
pusha
ja
sub
or
stos
lea
pop
inc
sub
push
sti
cmp
jae
je
mov
push
fidivrl
inc
inc
sbb
bnd
lods
adc
jg
sbb
ss
xor
pushw
test
bound
loopne
fdivr
hlt
mov
sub
cld
cmp
into
xor
movl
int
xor
mov
scas
push
jle
into
cmp
cli
jnp
xor
sbb
cmpsb
daa
lea
jg
int
jl
mov
lcall
lods
leave
cld
xchg
cltd
jae
mov
cmp
cs
and
rolb
pop
test
punpckldq
fwait
jbe
pop
out
mov
cmp
sbb
mov
fldl
push
dec
xchg
mov
add
mov
xor
or
mov
mov
rcrb
and
cwtl
popf
mov
mov
mov
sbb
lods
and
je
rolb
fildl
adc
sbb
sbb
lods
push
les
dec
inc
int3
cmp
xor
adcb
mov
and
aad
loopne
mov
sbb
xchg
rcrb
test
push
cmp
or
aas
dec
mov
jo
mov
xchg
nop
cld
mov
out
or
subl
mov
jecxz
push
cmp
movsl
gs
mov
add
mov
sub
jmp
mov
out
and
pusha
jnp
mov
stc
cmpsb
xchg
ret
xchg
inc
lock
xor
adc
cmp
fldcw
push
xchg
in
inc
xchg
cmpsb
inc
stos
mov
push
fcmove
cmp
orl
and
dec
gs
lock
xor
xchg
mov
imul
xchg
mov
imul
mov
shrb
ret
je
loope
jo
adc
dec
add
out
add
fnstenv
add
push
repnz
jmp
jecxz
sub
jp
push
arpl
add
mov
mov
or
mov
add
push
std
imul
rorb
mov
out
bnd
movsb
inc
je
test
pop
std
lret
add
in
pop
sbb
stos
dec
fidivl
jae
lret
lcall
popa
mov
hlt
lds
pop
repz
ret
stc
in
sub
and
jle
sub
nop
or
nop
aaa
addr16
pop
daa
mov
jo
jb
adc
sbb
mov
sbb
jnp
fdivrl
lods
test
jg
ret
aaa
rcrb
sbb
dec
sbb
adc
loop
mov
push
cmpl
adc
ss
shlb
cs
pop
dec
add
push
cmp
test
xchg
in
push
lret
push
lcall
cmpsl
lock
mov
mov
mov
cmp
jge
lret
jecxz
mov
cmp
out
pushf
add
jecxz
outsl
popa
jae
add
jno
push
addr16
test
sbb
ret
loope
cmp
jge
mov
adc
jo
not
sbb
out
popa
in
out
mov
jecxz
jae
sbb
push
repz
jns
xchg
jecxz
push
dec
enter
sbb
insl
mov
shlb
dec
arpl
rcr
aad
mov
ja
mov
push
les
sub
cmc
insl
jno
sbb
bound
pop
dec
jb
rolb
add
cmp
lods
dec
test
movsl
push
jnp
neg
pop
inc
fldl
popf
fldenv
negb
jge
fists
into
lea
out
sbb
xchg
mov
ljmp
out
in
stos
out
stos
hlt
rcr
leave
mov
sarb
mov
mulb
test
negb
jmp
test
add
pushf
lret
ljmp
aam
aam
inc
fsubs
cltd
aam
aas
nop
cmp
mov
call
mov
lret
xchg
push
test
loop
xchg
push
cld
test
out
lods
add
mov
xor
call
sub
loope
popf
pushf
fcomp
call
out
xchg
popf
sbb
aaa
adc
test
xlat
sbb
loop
add
test
dec
lea
mov
pop
sub
cmp
pushf
cltd
add
int3
lret
inc
and
jae
in
call
mov
aaa
mov
push
cltd
pop
xchg
fstps
inc
xchg
sub
mov
shl
stos
stc
inc
loope
xlat
std
test
mov
adc
dec
adc
call
inc
inc
sarl
test
cmc
xchg
in
mov
stos
insl
je
mov
sub
int3
push
mov
jmp
and
lret
mov
repnz
movsb
mov
inc
nop
adc
mov
mov
push
test
sub
lret
aas
or
mov
jle
clc
lret
and
sbb
imul
inc
sti
xchg
repnz
push
fcompp
mov
xchg
dec
hlt
std
orb
jg
rorb
lds
addl
adc
iret
cmp
and
in
add
mov
xor
movsb
jp
pop
push
mov
sarb
adc
out
sbb
shlb
aad
sbb
out
jecxz
fdiv
cmp
push
nop
add
mov
je
test
pushf
icebp
lcall
ljmp
add
mov
xchg
pop
js
test
ljmp
in
subl
rcr
inc
aam
sbb
mov
loop
xchg
dec
js
into
cld
cmp
mov
lcall
mov
lret
mov
mov
lret
out
movsb
cmp
enter
fdivrl
pop
test
lock
pop
call
out
jmp
cld
dec
stos
in
test
stc
jae
int
clc
adc
repz
in
mov
leave
mov
xchg
stos
test
insl
push
sahf
fmulp
in
lods
decb
fiaddl
inc
jl
mov
xchg
jmp
mov
mov
leave
data16
mov
in
shrb
jge
mov
lret
jo
add
stc
pushf
jmp
and
mov
loopne
fnstsw
dec
mov
clc
test
loope
stos
xor
aam
pushf
in
dec
lods
mov
dec
adc
ds
mov
insb
adc
ljmp
jecxz
xor
jmp
clc
fxam
mov
iret
mov
add
test
enter
pop
decb
fdivrs
addb
aad
inc
test
inc
data16
mov
sti
fnstenv
arpl
into
jno
jne
and
mov
jo
adc
rclb
lds
jno
rolb
add
fsts
pop
int
adc
xchg
test
push
mov
push
sbb
lret
add
stc
out
xchg
outsb
lods
mov
ljmp
andb
push
outsb
mov
pop
cmpsl
push
xor
and
clc
xchg
in
pusha
push
and
jae
js
and
mov
nop
dec
sbbl
dec
or
pushf
sub
ret
inc
xlat
les
mov
dec
call
xchg
inc
xor
mov
test
lock
out
mov
mov
popf
cmp
and
les
leave
movsl
lahf
in
sarl
dec
ret
mov
js
sti
mov
popf
ds
mov
jno
fcomps
xor
fimull
test
sub
sbb
mov
inc
loope
js
mov
ja
mov
into
cmp
jl
fsubr
xlat
push
mov
fsubl
loopne
cli
pop
mov
hlt
stos
mov
ja
cmc
mov
push
popaw
stos
and
stos
aaa
pop
inc
cli
loope
stos
shll
popf
in
loope
mov
xchg
loope
or
and
sbb
rcrb
scas
ret
daa
icebp
pop
jnp
shl
outsb
jge
adc
out
outsb
cli
add
mov
pop
outsb
dec
adc
jg
iret
shlb
leave
lock
push
fsubp
mov
popa
movsb
and
dec
aas
dec
push
add
xor
or
loopne
lret
clc
jo
jmp
test
fisttpl
hlt
jo
divb
int
mov
lea
mov
iret
stc
incb
leave
iret
xchg
scas
fadd
mov
xor
mov
jno
int3
mov
lods
pusha
dec
roll
xchg
nop
sbb
js
xchg
movsb
mov
jle
test
lea
inc
enter
fwait
pusha
test
sbb
dec
icebp
ds
jae
mov
mov
ss
push
int3
out
fmul
cmp
js
cmp
mov
mov
nop
mov
mov
fisubl
fimuls
xchg
mov
pop
or
xchg
cmc
mov
jmp
cmp
ja
ret
fsincos
mov
mov
shrb
or
pop
fmull
dec
sti
pop
mov
stos
out
enter
mov
pop
jp
mov
test
sub
iret
cld
cwtl
das
int
ljmp
mov
out
idivl
orl
dec
mov
out
add
mov
cmp
cmp
mov
jle
repnz
xor
add
mov
mov
mov
call
mov
mov
faddl
xor
cmp
ja
mov
jge
in
call
cli
aaa
lods
mov
mov
das
cmp
mov
imull
push
aam
or
mov
lods
xor
cmp
fcoms
sub
push
push
inc
popa
pop
mov
hlt
mov
push
testb
fidivs
mov
pop
lret
ljmp
lods
test
in
test
fcoms
xchg
enter
fdivrs
sti
stc
std
mov
xchg
adc
shl
sbb
iret
out
xchg
je
fcomip
insl
mov
mov
pop
mov
js
cmpsb
out
xor
mov
mov
in
shrb
jns
jp
push
outsl
out
mov
mov
mov
xor
in
mov
push
movsb
or
hlt
subb
push
test
mov
gs
stos
mov
scas
notb
mov
fmul
adc
jns
mov
pop
aad
and
sub
mov
sub
push
mov
lock
lods
add
inc
mov
sti
fadds
and
mov
idivl
cmpsl
aam
mov
cwtl
mov
rcr
lret
mov
jmp
popf
and
movsl
lds
push
push
cmp
nop
cmpsb
imul
mov
roll
jge
or
jle
cmp
pop
adc
fdivr
scas
out
pop
jmp
lea
pop
es
incb
je
mov
dec
cmp
mov
shrb
inc
dec
into
andl
mov
repnz
mov
aad
xchg
bswap
jp
ror
and
sbb
les
sbb
testl
mov
cmc
fsubl
leave
repnz
mov
dec
lock
cld
push
test
inc
inc
aad
popf
outsl
adc
fs
mov
xchg
push
fistl
jle
ljmp
adc
xor
xchg
mov
inc
pop
sub
not
mov
jns
mov
js
push
lret
add
enter
jns
lcall
jne
sarb
das
mov
inc
jbe
inc
rcrb
fists
lret
jp
leave
mov
mov
adc
push
hlt
dec
std
push
in
push
pop
and
jecxz
sub
pop
arpl
mov
movsb
fstpl
xor
dec
aaa
in
icebp
add
test
cmp
pusha
or
lahf
xorl
xor
loopne
push
xlat
pusha
dec
fcmovb
or
xlat
jl
fisubl
xchg
lock
mov
mov
ss
mov
jmp
mov
rorl
aad
push
mov
jmp
and
ret
jle
sub
pusha
stos
fcoms
scas
sub
inc
scas
dec
mov
xchg
push
inc
shr
shll
xchg
lods
ljmp
fwait
mov
jbe
inc
pop
std
test
clc
int3
or
in
cs
fucomp
xlat
daa
inc
cmc
push
jl
imul
pop
xchg
fidivl
jo
mov
sbb
cmpl
xor
iret
push
adc
dec
lods
hlt
lret
push
enter
repnz
and
test
mov
xchg
subl
mov
int3
mov
xchg
sbb
mov
cld
xchg
jmp
mov
test
or
leave
andl
mov
dec
stc
call
mov
cmc
test
mov
push
roll
cmc
fidivrs
flds
mov
sbb
or
xchg
mov
pop
xor
mov
cmp
lea
mov
enter
call
icebp
sarl
fucom
sub
mov
xchg
cli
jl
mov
mov
mov
roll
jns
test
aas
nop
adc
pushf
test
rorb
sub
fnstcw
faddp
lret
jb
fstpl
iret
test
into
insl
aas
movsl
int
fwait
or
xchg
lock
scas
mov
lret
stos
jp
push
stos
push
pushf
mov
rcrb
scas
cmp
dec
sti
add
sbb
xchg
int
and
pop
outsb
mov
sar
iret
xchg
clc
jne
adc
fldcw
mov
shrl
sub
shll
dec
cli
pop
jnp
repz
jmp
int3
sbb
data16
popa
adc
adc
mov
test
cmc
xsha1
cmpsb
into
mov
mov
lea
xchg
stc
lcall
rcrb
mov
shll
xchg
rol
mov
in
ret
xchg
mov
mov
sbb
sar
je
push
mov
cld
jnp
shlb
ja
push
xchg
cmc
sbb
int
add
fsubrs
or
cli
lret
mov
lret
cli
fs
pushf
movsb
pop
lods
shl
stos
enter
aam
sbb
dec
lods
aam
mov
test
xor
lods
push
mov
scas
xchg
mov
popa
movsl
sti
mov
imul
push
stos
scas
repnz
lcall
lods
test
aad
aad
into
xor
lret
into
jne
adc
sub
out
out
inc
xchg
jecxz
jecxz
mov
sbbl
cli
repz
imul
mov
cmp
cltd
pop
pop
adc
pop
mov
aaa
fcmovbe
pop
jnp
adcl
nop
int3
mov
dec
mov
cli
xchg
mov
push
sahf
dec
lret
cmp
xchg
cwtl
call
add
sub
push
add
xchg
stos
shl
shll
lret
iret
test
gs
orl
sarl
out
lcall
add
mov
ret
icebp
in
int
lea
hlt
mov
pushf
test
cmp
sti
fcoml
cld
xchg
jmp
xor
mov
inc
dec
in
out
stc
jp
lret
shl
add
adc
scas
lods
std
cltd
out
fidivl
mov
jb
mov
iret
ja
dec
test
lret
lock
inc
inc
adc
mov
lods
mov
lret
sbb
aam
sarl
mov
dec
jns
dec
push
fs
mov
aam
xchg
enter
jbe
test
lahf
rolb
ret
jmp
movsb
inc
inc
addb
sbb
cmp
lea
push
mov
cli
pushf
add
imul
cmp
aad
aad
xor
ljmp
jl
mov
das
mov
add
mov
sbb
sarb
test
enter
ljmp
ljmp
push
in
push
push
call
lock
loope
out
mov
fwait
rcl
mov
repnz
sar
mov
mov
mov
into
lret
adc
test
cmpsb
test
inc
std
pop
and
mov
ljmp
mov
mov
mov
sbb
dec
fsubr
loope
test
dec
sarl
fmulp
jae
les
les
add
add
mov
mov
out
test
fisttpll
int
lea
pop
jne
ret
sti
ret
data16
loope
lret
int
fimuls
inc
and
ss
mov
repnz
aam
xlat
outsl
imul
xchg
mov
ja
daa
repnz
sti
pushf
lods
cwtl
aad
lret
repnz
ljmp
repz
inc
lods
xor
inc
les
sub
sbb
mov
mov
push
jae
popf
mov
push
stc
hlt
push
push
test
cmp
mov
loopne
cmp
ret
imul
enter
stos
pusha
sub
sbb
xchg
pusha
push
sbb
xor
push
stos
inc
or
mov
sbb
jo
les
jnp
out
jecxz
push
cli
mov
shlb
xchg
cs
mov
ss
jl
test
jl
test
or
ret
outsb
loop
xor
jl
fwait
inc
cwtl
xchg
popf
test
xchg
xchg
sbb
cld
out
call
push
dec
lock
mov
aas
sub
clc
ror
add
mov
xchg
push
cld
xchg
icebp
dec
movsl
scas
xor
or
mov
lods
call
xor
mov
cmp
mov
into
xchg
inc
adc
add
xchg
roll
cmp
mov
jno
into
repnz
mul
ret
pop
mov
pop
xchg
ss
imul
sub
in
mov
mov
int
rcll
mov
pusha
fdivs
aam
mov
call
orl
test
mov
xchg
hlt
bound
mov
mov
call
xchg
fucomi
pop
aas
bound
mov
xchg
lods
outsb
mov
ljmp
push
xchg
rcll
into
shrl
mov
push
pushf
xchg
inc
mov
sti
mov
xchg
out
int
mov
jo
xchg
movsl
in
andb
jne
movsb
mov
sub
sub
aas
ret
cmpsl
sti
mov
cwtl
out
mov
xchg
mull
mov
rcll
movsb
mov
sub
jl
fistps
push
adc
sti
addr16
fsub
rcrl
movsb
mov
sub
jl
fistps
in
mov
movsb
sbb
pop
cmp
aad
test
gs
popa
out
js
test
adcb
mov
cltd
popa
out
jns
mov
les
push
xor
lret
adc
fsubrl
les
ret
xlat
xchg
scas
popf
mov
pop
scas
hlt
fistl
scas
in
fstpl
leave
iret
subb
ja
xor
in
orb
rorl
loope
stos
add
fwait
ljmp
mov
repz
pop
lcall
aad
cwtl
jge
mull
xchg
ret
push
cmp
sti
aad
jp
xchg
jns
cmp
mov
lods
ret
mov
jmp
pop
ffree
emms
inc
xchg
jg
pop
dec
cmp
sub
je
push
pushf
je
add
pop
xchg
jmp
leave
mov
adc
cmp
test
dec
mov
push
rcll
in
popa
push
leave
cmp
insl
lock
cltd
pop
push
montmul
cmpsb
add
dec
xchg
repnz
xchg
rcrl
nop
cli
lods
clc
mov
mov
mov
mov
mov
iret
pop
jne
lret
std
ljmp
nop
pop
push
inc
mov
not
cmc
cwtl
imul
nop
mov
fdivl
lret
les
es
icebp
sbb
fwait
dec
lock
lret
icebp
adc
and
add
lea
andl
pop
adc
jns
out
mov
int
sar
fidivrl
test
jge
scas
cmc
mov
cwtl
mov
into
sahf
xchg
rcl
cmp
fwait
pushf
ja
xor
movl
add
add
into
neg
bswap
and
mov
ja
lock
stos
clc
lret
mov
out
loopne
xchg
push
lcall
or
das
lret
jno
sahf
dec
lock
mov
adc
mov
xchg
mov
roll
or
sahf
xchg
or
mov
incl
cltd
negl
mov
es
jnp
loop
mov
mov
mov
add
or
hlt
dec
cltd
inc
xchg
sub
js
testl
jae
cli
xorl
popa
sahf
mov
mov
test
add
push
pushf
mov
push
mov
fwait
lcall
call
rorb
mov
rcl
xor
cmpsb
in
cmpl
mov
loopne
mov
in
jecxz
inc
test
int
lock
mov
xchg
mov
in
lret
mov
ljmp
jle
pop
push
leave
inc
xor
push
dec
jecxz
dec
sahf
and
notl
jb
in
sub
mov
mov
xor
lods
mov
ljmp
cmpb
int3
inc
out
fs
test
enter
sub
movsb
push
iret
mov
mov
addr16
jns
shll
mov
sbb
aas
mov
sahf
out
fcoml
movsb
ret
push
push
nop
adc
das
mov
jmp
mov
aaa
jmp
lds
std
push
das
mov
dec
gs
add
es
insb
mov
sub
sahf
xorl
sub
push
out
cmpsl
fldt
pop
adcl
jl
mov
cmp
xchg
mov
sar
jge
fwait
stc
or
idiv
test
loope
mov
shl
std
jmp
cltd
cwtl
sub
jmp
and
add
mov
pop
inc
shl
ret
arpl
dec
xchg
lods
loop
pop
adc
aad
mov
dec
adcl
jbe
cmp
or
sub
rcr
cltd
test
les
clc
hlt
stc
nop
fisubrs
inc
pop
sbb
sub
movsb
sti
jo
test
push
test
or
int
adc
popf
pusha
cli
sbb
aam
sbb
enter
or
insb
xor
enter
xchg
subb
mov
andb
rol
mov
fldenv
sti
rorb
clc
rolb
adc
fdivs
and
sahf
hlt
push
shrb
pushf
and
cld
jmpw
outsb
jno
mov
push
jo
sbb
cwtl
cmc
in
dec
nop
lahf
hlt
sahf
test
adc
jmp
mov
mov
test
sbb
pop
ror
cltd
lret
cli
nop
push
addb
stos
mov
pop
hlt
xchg
adc
jle
jmp
lods
ficompl
mov
xchg
and
lret
and
ret
xchg
shrl
cmp
add
lods
cwtl
mov
mov
inc
mov
mov
jne
or
adc
leave
adcb
mov
xchg
fsts
test
imulb
clc
mov
xchg
mov
fdivr
mov
jl
adc
mov
imul
je
std
scas
mov
xor
cs
orb
mov
inc
enter
fsqrt
call
mov
std
add
nop
inc
mov
movsl
les
or
xchg
adc
ds
inc
push
ror
add
dec
aaa
call
test
mov
push
add
xor
leave
sub
mov
into
popf
out
sbb
mov
icebp
aam
out
loop
fcomps
mov
in
pop
dec
inc
inc
scas
stos
xor
aad
and
flds
lea
pushf
fcompl
xchg
cmp
mov
lods
dec
movsb
xchg
loop
xchg
rclb
stos
dec
lods
or
xchg
aad
cmp
je
jp
xchg
sarb
pop
cmp
mov
rep
mov
shrb
ds
fidivl
js
stc
mov
dec
movsl
je
sbb
jae
cs
xlat
jmp
inc
xchg
jns
cmpb
xchg
add
fcmove
dec
mov
xchg
push
dec
paddb
cmp
inc
lds
mov
mov
push
dec
mov
or
sbbb
adc
xor
outsb
fisubrl
xor
ret
cs
movsb
rorl
xchg
sub
adc
xor
jge
ficompl
rolb
adc
mov
sahf
sbb
ret
cs
inc
inc
ds
enter
testl
filds
pushf
sub
adc
mov
dec
bt
ljmp
or
cli
fwait
mov
aam
or
mov
out
adc
leave
mov
shrb
push
mov
sbb
xchg
das
into
adc
sub
sarb
setns
int
dec
addr16
mov
stos
sbb
or
or
cmpl
inc
sub
aad
push
int3
inc
roll
mov
mov
inc
xchg
into
xchg
mov
stos
stc
int
les
mov
and
sbb
aad
cli
gs
cmp
mov
ja
fstpt
jg
cltd
lods
and
es
scas
cmc
jp
ja
cwtl
xchg
jl
call
aad
enter
enter
add
mov
cmpsb
movsb
cmp
xlat
in
ja
and
cmp
adc
pop
mov
or
jne
mov
in
aad
xchg
test
xchg
out
jns
movsb
xchg
mov
dec
cmp
mov
sub
dec
mov
out
pushf
add
xor
jge
mov
mov
cmpsl
jo
push
pusha
stos
dec
inc
mov
leave
xor
jg
add
pop
aas
jp
loope
mov
pushf
sub
fwait
mov
repz
sbbl
push
sti
dec
dec
and
out
loop
push
ret
sbb
inc
movsl
jbe
subl
les
shlb
mov
cltd
inc
test
cmp
scas
jae
imul
mov
test
loop
push
ror
popa
cmp
sub
push
jae
jnp
enter
jmp
xor
cmp
into
pusha
mov
jl
int3
mov
push
and
pop
lods
outsl
out
jae
ds
lcall
testb
or
and
ss
xchg
gs
sti
xchg
xrelease
mov
lds
cmp
mov
lea
push
jp
int
test
sub
and
cmp
repz
mov
cld
test
mov
aaa
fdiv
fsubrl
mov
iret
mov
les
mov
dec
popa
pusha
mov
or
enter
push
cmpsb
xorps
jno
stc
mov
lea
add
inc
or
ret
les
lea
out
stc
mov
sbb
nop
and
out
cmp
divb
inc
movsb
jp
adc
cld
dec
sbb
lods
adc
insl
pop
inc
jne
aam
frstor
mov
mov
lret
mov
sbb
inc
movsl
cwtl
into
fs
and
lret
adc
add
mov
lahf
mov
mov
ss
movsb
xor
faddl
rcrl
ja
inc
xor
es
repz
xchg
mov
push
iret
xor
mov
xor
insb
adc
xor
or
loopne
cmc
outsl
sbb
enter
mov
enter
cmpl
pop
mov
test
repnz
ds
popf
jno
andb
fnstenv
xlat
repnz
pop
lea
stos
ljmp
pushf
out
int
leave
aam
pop
ljmp
dec
ret
xor
imul
pop
testl
jo
jmp
lea
imul
jg
push
push
popf
adc
enter
mov
rep
cli
hlt
fsubp
fisubrs
scas
pushf
and
xor
xchg
xor
xchg
fwait
ljmp
es
jg
subl
mov
inc
jo
dec
fcmovnu
sbb
repnz
adc
push
stos
lret
mov
das
mov
sbb
mov
scas
push
mov
sbb
adc
pushf
test
push
push
jp
and
std
mov
ss
stc
cmp
dec
xor
xchg
incb
ret
cs
mov
in
fbstp
popa
pop
pop
insl
mov
or
lret
fnstenv
lcall
ds
into
test
scas
hlt
mov
mov
hlt
xor
sbb
cs
outsb
xchg
addr16
and
push
pop
ficoms
and
inc
hlt
mov
jle
in
fcmovnbe
xchg
shl
pop
icebp
mov
cmp
xchg
mov
inc
mov
leave
inc
ret
aad
iret
les
imul
add
fcmovu
imul
cmp
mov
mov
mov
mov
xchg
lods
rcll
mov
cmp
icebp
xchg
or
lods
fs
loop
out
push
lods
jle
sbb
mov
hlt
cmp
dec
or
xor
movsl
dec
mov
popf
and
loopne
pop
mov
shlb
les
into
std
mov
fidivrl
jl
inc
mov
into
test
mov
out
inc
call
adcb
lock
imulb
and
movb
call
int3
push
aaa
cld
fidivrs
test
aam
cmpsl
cmpsl
repnz
mov
les
imul
xchg
adc
repz
cmp
xlat
icebp
loop
mov
pop
imul
pusha
add
sub
jae
push
jae
xchg
bnd
pushf
or
ja
adc
les
test
mov
cmp
popf
sub
cmpsb
mov
jnp
mov
pop
into
xor
ja
dec
cmp
cmp
and
mov
lret
cld
pop
in
std
push
popf
and
add
test
inc
dec
xchg
stc
mov
push
mov
push
or
testb
xchg
jne,pn
mov
jmp
xlat
mov
call
clc
fisubl
pop
movsb
push
stc
xchg
aam
jnp
call
push
repz
dec
mov
hlt
inc
in
fnstcw
mov
sti
xlat
cmp
and
scas
lods
cmc
loop
into
lahf
insb
add
lods
daa
cwtl
das
inc
mov
movsb
jno
mov
jo
pop
cs
xchg
inc
mov
js
jnp
xchg
mov
mov
shll
push
call
jle
loopne
xorl
outsb
sub
mov
cmc
or
sub
insl
jp
pop
xor
cltd
stos
pushf
mov
test
or
lods
ret
bound
dec
arpl
mov
cmp
int3
xchg
fstps
dec
daa
sbb
cld
xor
movq
fnstenv
mov
sbb
cld
adc
ret
dec
hlt
out
mov
mov
dec
les
lret
test
cmpsl
bound
sbb
mov
enter
jnp
rol
ja
sbb
dec
mov
leave
dec
xchg
mov
outsl
dec
push
ret
outsb
insb
std
mov
aas
mov
enter
test
fdivr
mov
lds
mov
aad
scas
mov
int3
bound
mov
fldcw
jae
daa
in
and
and
xchg
shl
xor
lock
nop
shrl
xchg
mov
jge
aad
xchg
shr
in
lret
mov
repnz
pushf
fsubrs
imul
fwait
outsb
cli
fcomi
mov
or
clc
ja
rolb
and
mov
movsl
cmc
popa
les
mov
test
xchg
sahf
ljmp
std
pop
rcrb
rorb
xchg
mov
cmp
cmpsl
sbb
cli
sub
ret
xchg
into
push
popf
xchg
ror
mov
fwait
mov
cmp
pusha
pop
mov
stos
test
mov
stos
xor
movsl
cmp
fsub
cmp
mov
mov
mov
xchg
int
mov
inc
mov
mov
cltd
xchg
mov
shlb
and
movsb
pusha
mov
aam
jl
add
inc
adc
shlb
ds
push
js
sbbb
jo
mov
sbb
mov
sub
mov
pop
dec
add
popf
js
leave
mov
loopne
loop
shrl
jl
fdivl
adc
cld
xor
dec
outsl
dec
or
mov
cs
hlt
jecxz
jl
test
add
in
addl
cld
push
or
cli
mov
lock
inc
lds
clc
fdivr
mov
imul
int
sub
lahf
cld
outsl
mov
xchg
add
loope
xor
loop
imul
push
test
nop
jmp
and
mov
mov
jo
nop
loope
sub
mov
sub
xor
int3
loopne
popa
hlt
aam
or
fdivr
lahf
xor
xchg
sub
test
icebp
mov
jecxz
lret
in
fcompl
cwtl
das
arpl
clc
imul
xor
mov
repz
faddl
rcll
dec
enter
xchg
xor
rorb
outsb
test
xchg
sahf
xor
lret
mov
lods
scas
hlt
pop
inc
cld
cmp
mov
mov
and
mov
sti
jl
stc
mov
mov
rol
dec
mov
idiv
mov
fsub
add
outsb
mov
adc
jg
xchg
pusha
popf
push
icebp
dec
adc
mov
xchg
xor
ret
or
pusha
stos
loopne
dec
dec
mov
xorl
loopne
daa
jp
push
sbb
xchg
xor
out
sbb
test
mov
jno
loopne
fbld
adc
repz
test
cmpsb
mov
inc
add
jo
cmp
pop
cwtl
push
adc
fxch
lods
jo
adc
cmp
push
aas
push
adc
cmp
clc
std
push
daa
sub
jl
adc
ret
add
adc
xchg
xchg
cmp
sbb
lcall
loope
add
aam
loopne
pop
lahf
cld
adc
addr16
inc
dec
cwtl
jnp
jge
jg
mov
aam
inc
adc
imul
adc
sbb
pusha
rcl
adc
cwtl
cli
push
lret
cwtl
in
jle
mov
in
cltd
and
int3
popf
out
push
stos
out
mov
mov
dec
mov
dec
mul
fadds
or
inc
dec
fucomp
sahf
sbb
sti
popf
xor
inc
push
pusha
lcall
popf
xlat
sbbl
loopne
movsl
data16
sub
or
cmp
lock
pop
icebp
mov
push
dec
pop
sbb
lods
out
xchg
jecxz
es
jne
push
cmp
lret
loope
mov
add
arpl
pusha
je
lahf
lahf
dec
mov
mov
and
mov
mov
mov
pop
movsb
push
out
xchg
cmpsb
repnz
pop
aaa
push
mov
out
es
gs
sahf
xchg
cmc
test
test
or
xor
or
xor
inc
pop
and
pushf
sti
dec
pop
loopne
cmpsb
mov
mov
out
pop
pop
sub
out
inc
mov
jmp
mov
sbb
loopne
mov
rcll
cmp
fwait
sbb
cmp
cwtl
loopne
cs
xchg
mov
fidivrl
mov
dec
loopne
mov
lea
cmpl
lret
loopne
lret
in
lret
mov
out
scas
out
xchg
pop
push
mov
mov
pop
les
cwtl
push
mov
in
sbb
ret
xchg
test
cmp
xchg
fdivl
xchg
mov
pushf
pop
inc
gs
fnclex
aaa
mov
in
adc
add
add
add
adc
add
add
add
or
les
or
adc
or
int3
adc
add
adc
add
adc
add
adc
add
adc
add
or
in
or
aas
adc
add
or
pop
adc
add
or
adcb
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
addb
add
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
or
clc
xor
mov
sbb
add
add
cmp
aad
or
loop
inc
add
dec
and
dec
add
adc
dec
jo
mov
or
adc
or
pusha
add
ret
dec
or
add
sub
add
adc
decl
das
push
sbb
adc
xor
mov
and
xchg
aaa
cmp
cmp
push
arpl
inc
xor
push
out
icebp
adc
adc
fcoml
xor
enter
mov
stos
sub
int3
inc
jne
les
or
xor
add
pop
ljmp
mov
test
add
sbbl
jne
dec
jmp
mov
and
and
fnstcw
xchg
xor
xchg
int
dec
rolb
xchg
push
test
repz
cwtl
sbb
xor
inc
push
pop
cmp
and
outsb
fwait
mov
and
mov
xor
push
pop
push
sub
mov
cmp
cltd
inc
mov
jp
or
movsb
in
repz
clc
push
mov
push
and
xor
inc
xor
test
mov
test
inc
or
adc
add
cmpsl
push
sti
push
aas
ficoml
out
dec
orb
fadds
lahf
add
in
and
adc
adc
fadd
dec
adc
add
push
push
push
lahf
aam
add
and
lods
mov
out
leave
in
iret
inc
outsl
pop
gs
sub
or
out
addr16
and
xchg
ret
and
mov
cmp
outsb
add
ljmp
mov
inc
xor
add
aad
lea
fwait
enter
and
push
inc
shrl
subb
add
inc
push
lock
outsl
and
sti
sub
adc
sub
adc
data16
add
add
popa
and
add
movsb
inc
pop
adc
dec
mov
dec
dec
mov
fs
addb
xor
sbbl
cmp
and
bound
stos
adcl
add
mov
mov
inc
sti
adc
sub
add
cld
xor
ja
adc
inc
push
push
inc
and
daa
xor
sub
ret
sub
lret
push
xor
xor
aas
add
aaa
add
cmp
bound
mov
mov
andb
cli
jb
or
aam
xor
loop
add
addl
test
inc
lahf
add
nop
xchg
movsb
adc
movsl
adc
cmpsl
xor
or
stos
add
stos
nop
and
mov
arpl
mov
fcmovne
add
and
add
pop
lea
add
outsb
stc
lret
mov
scas
cmp
decb
sbb
mov
or
or
push
add
or
or
inc
dec
in
aas
cmp
dec
inc
pop
movsl
mov
pop
addb
scas
gs
ret
xor
sbb
mov
mov
test
cmp
add
fwait
xchg
fbstp
dec
addr16
mov
aas
or
or
add
pop
add
inc
lret
pop
add
addr16
push
jnp
add
jg
sbb
xchg
dec
inc
push
orb
push
fdivrl
add
pop
movsb
dec
mov
les
lcall
and
sbb
cmp
sub
mov
mov
es
mov
sahf
sbb
cmp
out
mov
and
or
jle
cs
mov
insb
rol
pop
pusha
and
sub
or
and
sub
shll
and
xor
mov
push
nop
push
adc
sbb
or
int3
jns
or
call
cmpsb
and
inc
mov
adc
in
jle
dec
lahf
push
mov
loope
movsb
fldl
pop
inc
cmpsl
pop
inc
test
inc
stos
ds
mov
imul
or
or
in
adc
pop
adc
push
and
mov
or
hlt
orb
mov
or
pop
jae
mov
pop
jns
fdivrl
sub
add
enter
add
lcall
add
or
icebp
sub
test
lret
mov
daa
inc
xor
or
inc
sbb
test
sub
cmc
or
inc
jl
xor
xor
fwait
inc
adc
add
insl
add
jae
mov
outsl
and
in
cmpsb
sbb
in
dec
mov
and
mov
dec
rcrl
bound
rolb
or
xor
push
mov
sbb
push
mov
dec
das
mov
and
fidivrl
push
and
and
and
and
sbb
adc
dec
mov
or
je
xlat
rorb
leave
or
or
or
into
add
sub
cmp
fwait
mov
sbb
popf
adc
cmp
or
fwait
xchg
fiaddl
jmp
rorl
inc
into
fisttpll
and
or
add
mov
shll
mov
prefetcht0
cwtl
adc
aas
push
sbbb
outsl
and
jo
or
push
cmp
and
cmc
dec
mov
xor
cltd
and
add
mov
mov
jbe
pop
stos
sti
or
mov
pop
and
and
inc
sbb
cmpsb
cld
add
rolb
add
xchg
je
sub
repnz
mov
push
pop
arpl
inc
mov
dec
mov
mov
popf
repz
and
mov
in
pop
lret
out
inc
xchg
mov
sahf
addr16
ss
add
mov
add
ret
adc
inc
fildl
jmp
setge
cmp
jno
add
adc
mov
add
or
add
pop
ret
sbb
flds
push
and
sbb
xchg
mov
xorb
adcb
mov
dec
pop
inc
fmuls
outsl
add
xchg
cwtl
mov
inc
inc
std
pusha
add
sbb
test
push
pop
dec
gs
into
xor
add
jns
mov
imul
ret
nop
lock
flds
mov
mov
sub
jmp
or
or
dec
orb
or
int
repz
jl
repnz
mov
or
add
add
cmp
add
popa
sarb
push
mov
fdivrl
lods
popf
les
dec
cltd
jecxz
clc
inc
in
out
imul
jno
jl
in
inc
or
adc
movsb
nop
add
push
sub
inc
push
inc
mov
add
xor
cmp
inc
call
add
movsb
dec
pop
shrb
pop
pop
stos
fnstsw
aaa
inc
pop
sti
loopne
cwtl
mov
dec
inc
jle
mov
and
and
adc
lcall
xchg
or
mov
aas
dec
rcl
push
sub
push
add
loop
dec
cli
je
cmp
sbb
pop
movhps
pop
adc
cmpsl
jmp
mov
mov
jbe
add
rclb
add
jno
sbb
aam
push
aad
or
dec
mov
movsb
and
adc
dec
mov
loopne
add
mov
stc
adc
xor
cmp
cmp
jg
inc
push
ss
dec
add
gs
dec
pop
and
int3
inc
adc
mov
leave
xchg
or
mov
jnp
in
cltd
lahf
fs
and
lret
add
jmp
stos
jl
mov
lods
push
mov
test
or
out
add
not
inc
scas
push
lea
xor
insb
jno
adc
cmp
cld
fwait
inc
and
dec
insl
add
loope
shrl
jns
adc
fcmovnbe
add
imull
fbld
adc
push
inc
push
sbb
sub
je
add
popf
jno
dec
add
sbb
subb
mov
or
ror
ljmp
dec
je
cmp
jns
or
inc
loope
mov
mov
inc
andb
scas
and
add
aam
mov
arpl
xlat
mov
push
pop
daa
dec
inc
insb
inc
jg
jo
add
outsb
and
dec
lock
add
lea
push
imul
jns
mov
test
lret
nop
cmp
mov
rolb
xor
fwait
inc
jo
adc
adc
jmp
addr16
testl
scas
adc
dec
jg
test
movb
mov
imul
ss
sbb
push
jne
roll
sbb
mov
loop
stos
add
imul
or
add
gs
stos
mov
insb
imul
ror
test
imul
out
divb
mov
or
fbld
testl
stos
dec
mov
sarb
insl
inc
mov
sbb
adcb
jg
xor
imul
cmp
push
pop
imulb
jg
ja
add
adc
and
lcall
jge
lret
add
out
es
cmpb
les
daa
pop
xor
or
xchg
in
add
push
aad
in
mov
fwait
cmp
in
or
add
outsb
push
mov
push
jg
popf
out
cmp
push
xchg
pusha
stos
inc
and
fimuls
add
enter
push
xchg
nop
push
add
and
jnp
add
out
mov
xchg
xor
ficoms
sbb
xchg
xchg
add
push
enter
shlb
jecxz
mov
sub
cli
test
mov
outsl
xlat
aas
add
pop
insl
mov
arpl
incl
sbb
insb
push
dec
cmpsl
add
sbb
lahf
aas
fdivp
sbb
push
sbb
mov
fmull
add
imul
ds
add
call
orl
xchg
adc
add
bound
mov
mov
add
xor
push
sub
rorb
sub
rorl
or
inc
xlat
aaa
pop
mov
popf
or
add
xor
add
inc
nop
sbb
mov
push
ja
cmp
pop
add
jb
imul
lock
test
push
push
cmc
and
es
pusha
add
call
xchg
add
cmpb
pop
pop
dec
jmp
push
lahf
dec
push
shl
call
or
xor
add
add
out
inc
call
jne
push
pop
pop
sub
shlb
add
frstor
sub
in
cld
inc
dec
and
call
push
jno
adc
shr
add
into
call
inc
adc
int3
jmp
cwtl
pop
lahf
pop
jge
jecxz
call
mov
loop
inc
test
movswl
xor
imul
imul
aas
aas
push
xor
dec
mov
mov
add
sbb
cli
cmpsb
xor
or
gs
mov
add
jmp
sbb
mov
rol
add
jge
pop
pop
xchg
testb
mov
sub
cmp
jno
sub
mov
test
push
adc
pop
inc
dec
mov
jecxz
mov
xchg
in
pop
sub
incb
ret
jo
shlb
out
dec
cmp
flds
fs
nop
orl
or
push
movsb
mov
insl
cwtl
pop
adc
push
sarb
sbb
mov
lret
test
popf
ret
sub
mov
add
mov
lidtl
jno
out
cwtl
into
mov
neg
cwtl
icebp
decb
sbb
push
out
mov
rorb
or
mov
lds
les
popf
mov
dec
dec
mov
pop
push
inc
mov
cmc
pop
push
mov
cmp
call
and
cmpsb
ds
xor
call
js
and
lret
push
and
adc
cli
dec
or
sub
and
into
jge
cltd
notb
sbb
mov
lds
ss
rcll
jg
fdivr
push
cwtl
sbb
mov
or
mov
inc
test
dec
mov
pop
rcr
ljmp
out
or
xlat
leave
xchg
cwtl
jno
and
fcomp
inc
mov
inc
fwait
sti
sub
loopne
jno
sbb
fisttpll
fucomi
movsb
xchg
cmp
pushf
xchg
mov
test
movzwl
neg
inc
int3
sahf
xor
out
fdivrl
enter
rcll
mov
pop
adc
add
ljmp
dec
aas
pop
or
mov
mov
and
sub
and
push
and
fisttpl
add
dec
test
push
jne
xchg
repnz
inc
xchg
sbb
nop
add
loop
sub
loopne
add
push
pop
pop
not
in
jb
and
xlat
sbb
out
fstps
orl
dec
enter
mulb
cltd
push
orb
xchg
pop
pop
orl
xorb
dec
cmp
cltd
xorl
nop
push
jb
popa
add
pop
fnstcw
shr
adc
sbb
sub
nop
add
lea
xchg
xor
stos
roll
or
pop
push
lds
mov
dec
stos
push
pop
pop
pusha
and
insl
mov
push
and
ljmp
int3
add
inc
push
pusha
out
sub
or
cwtl
loop
leave
inc
mov
xor
adc
sub
aaa
mov
out
cmp
xor
fsubl
inc
pcmpeqw
fstps
stc
or
cmp
js
sbb
xor
movsb
fwait
arpl
pop
sub
test
fs
cld
fbld
mov
pop
not
cmpsb
mov
jae
addb
mov
sub
arpl
dec
pop
xor
mov
dec
fldz
sub
jl
in
mov
ljmp
inc
or
mov
xchg
push
fs
or
mov
test
mov
leave
lods
add
and
sub
add
loope
jnp
xor
ficompl
add
mov
pop
add
int
sbb
dec
lds
fsts
ret
sbb
mov
scas
inc
inc
lret
jg
fmull
pop
or
push
dec
aas
fsubrs
add
loopne
ret
fbld
sahf
cmp
add
in
movsb
inc
inc
or
xor
dec
mov
xor
xor
cmp
cli
sbb
jns
popf
lds
or
cltd
sbb
addb
jb
or
testb
sub
sbb
fs
sbb
push
inc
pop
bswap
in
xor
decb
enter
gs
push
push
fs
out
stc
cs
popa
ja
push
pusha
aam
clc
outsb
sbb
xor
sbb
push
sub
pop
pop
mov
cmp
mov
int3
xchg
aad
add
xlat
inc
dec
sbb
sub
pop
sti
and
jo
mov
jge
jae
jmp
pushf
orl
jge
add
jmp
push
jno
pop
sub
adc
xchg
add
pop
test
in
mov
push
imul
add
fs
cwtl
jae
aaa
divl
add
loopne
xlat
jmp
fstpl
adc
loop
aam
pop
aas
test
push
pop
mov
std
rorl
rorl
sbb
xor
mov
ror
xor
insl
pop
add
push
mov
sub
shll
or
aaa
pop
push
in
je
call
das
mov
sbb
addl
aaa
test
fs
pop
sub
xchg
push
push
cmpl
ja
and
lret
adc
add
lcall
xor
ja
unpcklps
lcall
pop
daa
adc
pop
or
adc
adcl
inc
and
push
js
xchg
or
pusha
in
inc
push
cmp
or
xor
push
fsubrl
cltd
xlat
test
fidivrl
add
enter
nop
pusha
dec
dec
and
es
sub
push
xchg
mov
xor
gs
pushf
ds
inc
movsb
push
mov
stos
and
inc
mov
mov
rolb
xchg
inc
mov
push
xor
add
xchg
add
lcall
mov
sbb
adc
lds
xchg
add
movsb
pop
xor
adc
xchg
in
and
mov
or
mov
mov
and
movb
cs
cwtl
pop
cmpsb
ror
adc
pop
out
mov
std
xchg
cmp
subl
int3
aad
das
push
lret
loopne
inc
ss
sbb
cltd
push
mov
insb
adc
iret
enter
and
dec
movsb
inc
sbb
mov
mov
das
and
cmpsb
add
icebp
xor
xchg
sbb
fstps
popa
push
out
ficoml
lods
cld
mov
in
addb
int
jnp
stos
in
or
movsb
das
jb
cmpl
push
mov
dec
mulb
inc
add
outsb
dec
push
js
and
dec
roll
rcrl
inc
out
in
shrl
jnp
xor
jmp
lods
fildl
pop
adc
adc
push
lods
mov
stc
lcall
jns
shll
in
dec
and
add
xor
mov
scas
xchg
inc
dec
mov
int3
sub
add
pusha
sub
decl
imul
mov
mov
dec
push
dec
vmovss
xchg
sbb
add
adc
adcb
jbe
sub
push
sub
add
cmc
xor
test
mov
sar
adc
nop
int3
cmp
rcr
stc
sub
xorb
add
adc
pop
xor
rcrl
cmpsb
cmp
xchg
rolb
in
sub
inc
add
cvttps2pi
jne
or
adcb
xor
mov
add
imul
dec
popa
adc
lock
es
es
and
fnsetpm(287
adcb
adc
subl
push
bswap
mov
dec
adc
stc
jno
iret
insb
inc
xchg
jbe
sti
popa
adc
adc
movsb
ret
add
xor
mov
jns
xchg
inc
sbbb
cs
rclb
inc
xor
jne
lret
sahf
dec
sub
adc
cmpsb
in
inc
xchg
incb
movb
dec
stos
adc
push
add
dec
nop
push
cmp
cmpsb
mov
adc
sub
sub
add
scas
cmpb
mov
iret
add
mov
test
inc
add
icebp
inc
cmp
lret
adc
repnz
gs
pop
push
pop
pop
data16
jmp
and
add
mov
xor
cltd
push
mov
icebp
and
and
lret
cmpsb
cld
add
xor
ficoms
and
adc
dec
arpl
lds
add
push
dec
lods
jp
mov
out
jbe
push
pop
sub
lods
and
std
push
mov
adc
int3
fidivl
dec
push
pop
jb
lret
inc
add
addr16
and
sbb
inc
adc
shlb
fcmovne
xchg
xor
or
cmp
pop
adc
scas
fistl
shlb
sub
sub
push
scas
test
mov
or
sbb
jb
add
ss
add
repz
pusha
loope,pt
mov
bt
cwtl
sbb
loop
inc
inc
inc
jno
push
push
adc
mov
adcl
test
les
pop
or
int3
ljmp
lret
dec
repnz
fistl
ret
imulb
popf
icebp
shl
sbb
int3
jbe
push
sbb
pop
repz
xchg
dec
sbb
mov
push
cmp
cwtl
adc
pusha
std
enter
aas
dec
jge
lods
inc
in
enter
sbbb
adc
mov
ret
cwtl
push
dec
cmp
adc
jno
loop
wbinvd
fstpt
cmc
cwtl
jge
mov
xchg
pop
test
mov
xor
add
in
jp
dec
push
icebp
les
inc
sub
add
xchg
push
nop
sbb
pop
pop
cwtl
aas
cltd
cmp
mov
xor
mov
jo
mov
jbe
pop
add
sub
push
sbb
addr16
cld
out
mov
cmp
and
inc
daa
shlb
jno
cltd
shrb
stos
sub
roll
xchg
dec
mov
add
cli
fs
movq
ret
and
mov
test
test
mov
mov
jae
pop
hlt
test
cmp
cmp
enter
xchg
push
int3
cmp
push
fs
xchg
popw
add
lret
add
adc
xchg
fwait
mov
adc
divb
or
jo
outsl
jnp
imulb
xor
bswap
stos
cmp
pop
pop
mov
sbb
cwtl
push
dec
lds
xchg
cmp
or
loopne
leave
xor
mov
add
inc
mov
imul
xchg
xchg
ja
mov
lret
and
fldcw
daa
mul
jmp
fnstsw
mov
sbbl
push
jno
nop
fistps
rorl
adc
cmc
mov
stc
and
jge
sbb
jmp
mov
xchg
xchg
push
jbe
push
pop
mov
mov
or
enter
sarb
mov
push
rcrl
aad
cmp
cwtl
jmp
cmp
pop
subb
pop
mov
sarb
testl
inc
cmpsb
in
test
pop
mull
push
mov
mov
push
inc
pop
adc
dec
rol
mov
mov
out
ret
imul
xchg
xor
dec
stc
push
aaa
add
mov
add
and
fmuls
lock
repnz
sti
add
inc
push
pop
pop
or
test
jns
shlb
nop
dec
cmp
mov
seta
test
into
sub
in
sbb
add
ss
dec
inc
pop
add
cltd
jne
mov
push
ret
cmp
adc
push
xlat
push
xor
adc
inc
push
adc
out
adc
add
and
dec
inc
xorb
repnz
sub
sahf
pop
add
sbb
sbb
sub
cs
or
mov
mov
jecxz
pushf
adc
shlb
into
mov
mov
fldt
ljmp
pop
rcrb
mov
and
mov
dec
mov
divb
cltd
and
sub
add
jge
inc
repnz
pop
adc
test
jle
cltd
add
add
lahf
mov
test
xchg
push
pop
leave
push
cmp
mov
imul
cmp
inc
push
mov
inc
setge
inc
jl
push
int3
inc
repnz
and
mov
test
dec
push
in
jecxz
or
mov
popf
std
mov
add
neg
faddp
push
adc
jne
adc
fstpl
fdivrl
lret
push
clc
jl
fsubs
pop
or
mov
pop
lret
lret
cmp
mov
out
shl
movsb
popa
rolb
loope
inc
jecxz
jb
aam
cwtl
push
xchg
rcll
mov
push
pop
sbb
inc
je
ret
mov
cmp
add
jbe
push
cmp
dec
leave
dec
andb
dec
stc
push
sub
mov
pop
sbb
push
add
xchg
cwtl
leave
leave
and
adc
cmp
add
sbb
pop
push
push
shrl
sbb
insl
fdivl
scas
mov
add
inc
adc
mov
add
sbb
xor
out
mov
mov
stos
cmc
fs
addl
call
cmp
movsb
in
cli
cli
ret
nop
xor
push
adc
push
jmp
bound
add
imul
sub
shr
into
iret
adcb
lahf
add
int
jge
pop
mov
push
aad
push
add
push
sub
lret
inc
ret
or
add
clc
sbb
push
mov
fisubl
in
mov
incl
dec
adcl
mov
lret
xor
xlat
test
inc
push
add
enter
pop
lea
jmp
sbb
add
add
jmp
cwtl
scas
rclb
inc
and
repnz
dec
jecxz
xor
pop
dec
cmp
push
mov
cwtl
sub
push
fistpll
pop
mov
cmpsb
pop
add
sub
loop
or
aas
xchg
adcb
sub
mov
mov
push
cmc
add
shr
sub
push
stos
jae
pop
cs
flds
fiaddl
mov
mov
sub
neg
pop
test
imul
sbb
cmp
clc
mov
add
lahf
sub
xor
xchg
or
jae,pn
stos
adc
and
sub
mov
dec
xchg
and
inc
cwtl
cs
std
mov
fisttps
pusha
push
dec
lds
mov
int
inc
cs
dec
jnp
cmp
nop
lahf
rorl
xor
mov
subb
push
sbbb
inc
fisubl
imul
int
arpl
push
rcrl
jno
fcoml
inc
or
das
andb
sub
mov
jecxz
add
scas
pushf
mov
insl
sub
mov
cmpb
or
es
jns
sub
xorl
sub
pop
xchg
int
and
add
xchg
dec
jo
cmp
xor
or
lret
add
sbb
imul
sarl
mov
jb
lret
into
ret
leave
and
iret
add
add
and
inc
dec
fstpt
add
xchg
push
dec
cli
int
loop
dec
push
xlat
mov
test
popa
adc
or
sti
call
repnz
push
xor
add
sbb
lret
lds
add
incl
adc
push
pop
test
jecxz
sbb
fisttps
daa
push
xlat
add
pop
push
jmp
add
sbb
xor
fwait
pusha
aas
xor
test
pop
je
xor
rclb
push
mov
and
int3
rcrb
testl
test
dec
pop
dec
cltd
leave
fs
mov
hlt
jg
and
or
es
int3
cltd
or
shl
adc
stos
pusha
sti
aad
xchg
out
pop
clc
xor
push
pop
mov
sar
add
cmp
pop
add
or
add
mov
ret
movsl
cmp
fisttpl
arpl
scas
sbb
int3
sti
fldl
and
scas
push
cmp
mov
dec
mov
or
mov
push
add
lods
inc
or
std
movsl
add
lock
mov
ret
loope
das
sbb
sbb
rclb
xor
call
mov
adc
loope
jecxz
scas
imull
xchg
xchg
ds
push
mov
test
addb
add
push
inc
xor
mov
add
loope
and
and
andb
lea
add
xor
sbbb
jge
or
mov
je
xchg
pop
and
push
pop
sub
cmp
dec
data16
and
push
inc
cli
add
push
inc
mov
push
xor
bound
outsb
movsb
jae
es
leave
pusha
pop
enter
lock
sub
in
pop
and
pop
test
and
repnz
add
rolb
pop
push
dec
in
loop
arpl
add
fcmovbe
shlb
test
xchg
pusha
movsb
popa
adc
inc
shll
js
xchg
cwtl
orb
pop
arpl
jle
iret
mov
xor
insl
xchg
push
cmpsl
mov
rol
loope
in
dec
out
add
cmp
xor
mov
shlb
add
inc
xchg
mov
mov
add
xchg
sbb
cmpsb
and
inc
out
pop
dec
gs
sahf
repnz
repnz
xchg
xchg
sub
cmpb
bswap
loope
push
ret
mov
sbb
arpl
adc
or
xor
push
inc
xor
sbb
sub
cmpb
ljmp
out
pop
pop
pop
jle
les
add
dec
and
cld
push
lds
mov
pop
and
rolb
jbe
repz
push
xchg
daa
aad
ret
data16
add
mov
jo
lock
sahf
cmpsb
movsb
xor
ljmp
jo
adc
add
and
int3
sub
insb
sbb
cmpb
dec
adc
seta
xlat
xchg
pop
sbb
pop
xor
sub
enter
rcll
dec
mov
es
jno
or
mov
jnp
pushf
shrb
mov
inc
enter
jb
mov
xchg
not
sbbl
sbb
stos
push
aas
mov
and
dec
mov
jbe
sbb
fiadds
mov
iret
es
xchg
int3
xor
or
fwait
jne
arpl
roll
pusha
push
xor
lret
inc
and
rorb
sub
aas
xchg
push
pusha
push
inc
lds
jnp
cwtl
xchg
daa
into
cmp
or
dec
jge
mov
xor
xchg
loope
int3
jae
cltd
es
add
jl
fcomps
xlat
cmpsb
mov
push
lret
dec
fidivrs
pusha
sub
dec
sub
push
mov
divl
out
fbld
lret
mov
lods
nop
sub
lea
test
movsb
sbb
shlb
mov
adc
pop
dec
mov
fsubs
movsl
test
xchg
test
add
pop
lret
or
dec
adc
movsb
bound
jmp
loope
adc
lods
sarb
out
fiaddl
shll
push
or
adc
mov
xchg
inc
mov
or
test
arpl
mov
insb
shll
jge
pusha
or
lods
adc
ret
or
into
arpl
fcomp
xchg
rorb
inc
rorb
bound
in
pop
and
stc
pop
sub
jae
test
nop
mov
fistl
imul
mov
insb
or
dec
push
inc
fbstp
mov
inc
jae
pop
add
dec
push
test
and
div
push
xchg
mov
sub
sub
push
dec
push
pop
or
adcl
pop
popf
sbb
push
add
and
popa
mov
dec
cmp
inc
out
pop
imul
add
in
xchg
mov
icebp
scas
movsl
dec
ljmp
stc
mov
subl
sub
add
jnp
inc
jle
fisubl
push
in
mov
sub
cmpsb
nop
or
mov
add
aad
xor
shrl
xchg
add
in
enter
adc
addr16
cmp
hlt
pop
mov
sub
subb
test
mov
mov
btr
popf
or
aam
push
jmp
lods
aaa
adc
dec
lret
lock
add
dec
cmp
cmp
add
pop
sysret
lcall
mov
loopne
loope
mov
sbb
mov
mov
int
jge
addr16
or
jae
and
outsl
xor
daa
jne
je
bound
iret
push
outsb
cltd
push
fs
arpl
mov
or
sub
push
arpl
push
or
add
pop
inc
sub
loopne
mov
mov
add
adc
int3
mov
sbb
js
xchg
push
stos
or
cmp
xor
or
jo
or
push
arpl
or
push
or
dec
pusha
jno
xchg
mov
sbb
inc
dec
inc
inc
or
in
fsub
movsb
dec
add
shll
push
xchg
inc
inc
push
in
call
sbb
sbb
xor
mov
and
loopne
sbb
shrb
fs
je
test
adc
inc
adc
push
cmp
movsl
push
shrb
rclb
gs
and
nop
and
sub
and
push
shrb
jecxz
xchg
arpl
and
push
lock
sub
lret
cmc
aas
add
add
xchg
adc
add
nop
sbb
or
push
xor
addr16
sbb
adc
cmp
cmp
sbb
or
inc
inc
call
sub
pop
push
dec
bound
arpl
je
and
mov
xchg
adc
pushf
cmp
mov
and
enter
jb
cmp
mov
and
cmp
sbb
mov
and
or
cld
cld
inc
adc
hlt
or
push
add
and
or
test
nop
cmp
inc
and
sub
je
movzwl
mov
cmp
pop
mov
sub
xor
aam
enter
jb
cmp
add
mov
cmpl
jne
cmp
push
int3
push
mov
jecxz
mov
test
jne
xor
pop
lret
inc
cmp
add
rorb
inc
cmp
add
push
mov
inc
push
inc
cmp
jne,pt
js
adc
push
into
pop
nop
fcoms
out
inc
pop
inc
repnz
call
imul
or
push
add
or
into
adc
inc
push
add
iret
mov
push
push
adc
mov
push
push
pop
push
mov
into
adc
mov
xchg
add
push
pop
pop
nop
fnstcw
xchg
push
or
aaa
or
ret
and
call
inc
mov
sub
or
inc
add
jmp
add
cmp
ljmp
jne
jb
sbb
call
lahf
add
push
mov
inc
mov
cltd
push
cmp
jb
jecxz
add
insb
call
ja
and
sbb
mov
or
into
inc
cmp
dec
jmp
aas
pop
inc
jp
add
nop
pop
cmp
sub
or
sti
inc
scas
and
in
lock
jae
or
jb
js
or
or
cmp
out
sbb
pop
xchg
sub
or
cmp
push
mov
cs
out
adc
dec
lea
shlb
test
je
loopne
mov
xor
dec
addb
add
scas
dec
stos
stc
aad
fs
mov
xchg
mov
call
sbb
inc
or
xchg
push
sub
jns
push
xchg
and
loope
ja
sub
decb
xchg
in
jecxz
or
scas
push
push
add
add
out
cmp
dec
and
push
repz
jae
xchg
out
ja
mov
out
xor
push
push
or
sti
imul
mov
pop
lea
rorl
filds
cmpsl
cmc
cwtl
pusha
add
adc
adc
pcmpeqb
adc
sbb
adc
sub
hlt
mov
ljmp
add
and
dec
lock
or
outsb
ljmp
cmp
jle
add
adcl
clc
incl
lea
and
adc
and
push
pop
sub
test
dec
rcpps
or
pop
je
sub
or
fs
xor
sahf
jmp
cmp
aas
ret
clc
sub
push
sbb
outsl
or
out
hlt
lea
std
xor
addl
xchg
andl
cwtl
inc
call
add
out
rcrb
cwtl
cld
sub
sub
xchg
xlat
inc
pop
call
ja
jge
pop
inc
dec
frstor
mov
jg
pop
leave
stos
add
and
and
int3
mov
cmp
pop
movsl
pop
and
adc
push
or
pop
fwait
or
push
adc
cli
adc
xchg
in
add
xor
push
cmc
add
mov
lea
jno
push
lods
rcll
fisttps
gs
xorb
aaa
or
leave
push
xchg
inc
push
mov
cmpsb
mov
jmp
lds
inc
jne
dec
mov
test
rcrb
sbb
jp
dec
mov
test
adc
lea
or
pop
xor
aad
mov
stc
inc
lds
xchg
test
or
cmp
jae
testl
adc
mov
inc
dec
cmpsb
mov
test
je
dec
mov
ret
mov
cmp
movsl
adc
imulb
adc
sub
out
jmp
jnp
push
mov
pushf
cmp
dec
pushl
int3
mov
test
sub
ss
loopne
jle
or
and
push
or
and
cmp
dec
movaps
mov
cmp
pop
mov
add
rolb
xacquire
mov
jae
bound
xchg
add
mov
mov
push
xchg
pop
and
cs
les
inc
je
adc
sbb
jo
mov
lahf
inc
push
cmpsb
mov
hlt
xchg
adc
cmp
mov
dec
add
les
pop
push
xor
pop
or
or
sub
jbe
or
in
fistpl
loopne
cmp
or
adc
stc
lods
test
loopne
pop
add
rcrl
push
int
mov
jmp
pop
push
mov
sbb
sub
hlt
sub
mov
scas
or
and
cwtl
mov
dec
in
pop
shll
jbe
movd
adc
cmp
push
adc
test
mov
lcall
test
sbb
mov
adc
movl
shr
outsl
stos
xchg
popa
mov
xchg
leave
add
or
incl
rolb
loop
ret
in
or
add
adc
mov
or
jl
xchg
lret
sub
push
lret
cmc
sub
or
ret
and
lds
ss
xor
dec
or
je
sub
add
fcmovb
push
xchg
add
xor
test
and
and
cmpsl
add
sub
cmp
bound
push
and
pop
push
stc
add
adc
fs
fdivs
mov
addr16
and
pusha
fsubs
add
in
repz
stos
xor
andl
hlt
xchg
mov
push
or
jo
dec
imul
mov
stos
pop
mov
call
aaa
sub
dec
jg
push
clc
jae
mov
jge
xchg
fiadds
ljmp
and
sub
adc
push
call
mov
and
aad
fs
fwait
lods
mov
pop
add
lea
mov
xor
out
stos
xchg
fimull
xchg
dec
jo
repnz
fisttps
add
sub
cltd
inc
sbb
aaa
mov
test
dec
dec
ret
gs
xor
adc
mov
jmp
cmp
xor
adc
stos
ja
cld
sub
jg
or
push
daa
mov
mov
cltd
lret
test
test
adc
jle
and
xchg
sub
fwait
pop
adc
sub
cwtl
shll
adc
pop
xor
test
aam
es
xor
sbb
lea
movsl
jo
call
inc
or
cmp
sbb
pop
push
add
cmp
xorl
sub
add
int3
and
or
ljmp
pop
or
pop
insb
xchg
and
and
lods
lret
xchg
jno
js
outsl
imull
andl
and
adc
fxam
sahf
aam
icebp
adc
and
lea
dec
mov
sub
inc
add
pop
and
jecxz
bound
lea
nop
mov
mov
in
pusha
test
dec
add
pop
jg
push
aaa
je
push
addb
jne
or
ljmp
dec
mov
int3
stc
or
or
test
mov
jnp
xchg
sbb
xor
mov
jmp
pop
sub
je
hlt
es
push
in
shll
adc
aad
jne
sbb
pop
lcall
push
cmp
cmpl
arpl
loope
mov
add
icebp
cs
das
out
cmp
in
sub
dec
cmc
mov
es
sub
mov
xchg
cltd
gs
std
repnz
xor
pop
cltd
lods
scas
sbb
pop
mov
dec
push
into
xchg
das
shlb
arpl
mov
je
or
clc
and
jle
nop
mov
xchg
jp
leave
push
push
xor
ret
pop
popf
xor
ficompl
lea
jg
mov
lcall
movb
xchg
scas
inc
and
sub
sub
or
jl
pop
hlt
jmp
xchg
lret
mov
sbb
mov
fimull
or
pop
notl
mov
sbb
inc
cwtl
sarb
sbb
dec
sub
sub
add
sbb
xchg
lcall
call
pop
adc
inc
mov
mov
push
pop
mov
xor
sbb
loopne
sub
mov
adc
jp
jb
or
js
xor
or
test
jne
cmovae
or
jmp
sub
mov
inc
les
add
je
inc
mov
addb
ljmp
aas
nop
or
cmp
sbb
les
daa
loop
clc
cmp
sub
jno
push
adc
sbb
jle
xor
int
and
add
test
je
jae
or
add
cld
inc
or
aaa
orl
push
sub
sub
push
sub
or
loop
mov
mov
sub
mov
and
mov
scas
mov
or
nop
mov
add
scas
fcmovnb
fcomps
enter
pop
stc
add
insl
ffree
dec
adcl
sub
pop
call
cmp
or
sub
repz
add
xchg
push
cltd
pop
sub
cmp
add
ljmp
fists
mov
add
movsl
pop
xchg
mov
xor
mov
lret
test
inc
lahf
jno
jl
jns
push
push
sbb
sub
movsb
adc
add
add
aaa
and
shll
mov
stc
jmp
fbld
mov
dec
add
stos
dec
xchg
clts
pop
cmp
jl
in
sub
test
rcr
in
lods
shlb
clc
xor
dec
loop
push
jl
jb,pn
and
inc
or
lret
mov
dec
sti
and
or
jmp
or
sbb
mov
inc
repnz
xor
xor
and
add
adcl
lock
jmp
ss
dec
adc
clc
add
ret
push
fcoms
jge
cmp
inc
add
xchg
call
inc
fists
mov
lahf
or
test
jle
jb
jbe
dec
inc
xor
lods
jmp
add
out
pop
sub
je
cmp
rorb
test
leave
je
sbbb
push
cmp
pop
or
sbb
add
push
jmp
enter
jne
enter
adc
xchg
out
nop
fcoms
and
xor
cmp
sub
or
or
cmp
cmp
ja
jne
ret
xchg
cwtl
inc
test
or
pop
call
lods
andl
jg
jmp
push
push
push
cmp
pop
pop
jne
clc
xor
cwtl
imul
mov
imul
jns
add
mov
add
divl
je
pop
insl
vmread
rep
incb
and
je
xchg
sbb
jl
xchg
sbb
std
sbb
sbb
push
lcall
xor
add
xor
mov
pop
push
fsubrs
lods
or
sbb
fistl
fldcw
push
cmpsb
repnz
sub
or
outsb
jl
add
or
movups
and
in
aam
pop
pop
pop
mov
cmp
enter
cmovns
addl
mov
inc
jmp
fsubs
sbb
cmp
mov
loop
je
lret
loopne
es
and
loope
icebp
dec
add
in
mov
and
sub
push
jle
xor
mov
add
das
or
arpl
mov
mov
data16
jne
sbb
lock
and
and
je
in
test
jmp
or
sti
dec
loopne
or
push
fs
xchg
lods
movsb
dec
add
mov
add
loopne
mov
sarl
inc
or
stos
movsb
adc
stos
pop
rcr
or
fldt
adc
add
mov
dec
popf
xor
lea
dec
insb
nop
rol
dec
mov
mov
inc
sbbb
popf
push
sub
aad
add
js
pop
add
push
add
sub
or
pusha
call
or
and
or
cmp
inc
and
in
rcll
and
int
xor
aam
push
jmp
stc
addb
fdivrs
js
push
pop
sub
movb
inc
out
pushf
dec
mov
sub
test
add
or
adc
add
or
mov
jmp
add
mov
cmp
add
mov
sbb
pusha
js
loope
ljmp
adc
cmpsb
es
sub
jmp
dec
or
cmpl
test
or
lea
and
cmc
cld
xchg
fisttpl
push
fwait
sub
rol
pop
xchg
jns
push
pcmpeqb
sbb
shrl
add
fsubs
inc
addr16
sub
jmp
cld
mov
inc
inc
stc
pop
and
jae
sbb
pop
stc
jmp
push
fstp
dec
stos
xchg
imul
mov
out
enter
pop
or
or
aas
test
add
pushf
or
push
ret
nopl
hlt
adc
adcb
and
out
sbb
pusha
cmp
mov
mov
movsl
aam
xchg
pop
and
out
je
notl
xor
adc
mov
andb
xor
add
leave
sbb
cs
shll
or
shlb
call
mov
add
lods
inc
addb
xlat
fadds
lods
outsb
xor
js
xchg
mov
or
push
push
mov
ret
hlt
mov
popa
push
pop
into
push
ror
sbb
push
hlt
cmp
mov
daa
lret
into
pop
hlt
test
or
pop
hlt
in
or
mov
dec
addr16
leave
repnz
rclb
push
jl
cld
mov
test
lods
lds
iret
decl
pop
js
mov
add
stos
mov
cmp
jmp
xchg
test
stos
pop
add
jg
mov
add
daa
cmp
jl
xor
cmp
call
dec
mov
jle
push
inc
add
sarb
pop
jbe
int3
repnz
test
nop
fneni(8087
daa
cmp
clc
scas
adc
cli
add
mov
pop
mov
inc
aam
imul
loope
push
jp
iret
mov
mov
mov
xchg
push
cmpsb
scas
mov
adcl
int3
jbe
add
in
xchg
cmp
xor
push
in
cmp
sahf
add
and
push
shld
add
addr16
repz
mov
subb
xchg
and
pop
and
loopne
adc
cmp
das
and
jl
push
cwtl
dec
sbbl
clc
pop
jne,pt
sub
or
and
or
mov
aas
cs
scas
inc
nop
repnz
hlt
movzwl
inc
clc
int
push
push
xchg
sub
dec
or
repz
dec
xor
push
push
pushl
xor
hlt
xchg
sbb
push
aaa
or
push
mov
adc
push
jl
daa
and
pusha
adc
mov
call
mov
clc
mov
je
and
mov
or
push
cmovg
push
adcb
inc
outsl
pop
jb
popa
outsb
addl
push
push
dec
add
push
dec
popa
jae
je
adc
sbb
fwait
push
out
and
or
xor
mov
adc
movsb
xchg
les
inc
sbbl
mov
sbb
sub
sbb
sub
je
ret
mov
bswap
lret
or
popl
sub
sbb
sub
pop
mov
push
or
push
cld
sub
mov
fdivs
rclb
pop
insl
push
adc
popf
mov
fs
mov
push
and
add
sbb
in
cmp
jle
repnz
add
jae
sub
cmp
cmpl
xor
or
cmp
jecxz
jbe
scas
js
jb
icebp
out
fwait
jbe
jp
pop
mov
fadds
jge
adc
jmp
movsb
mov
add
add
test
mov
in
add
scas
loope
pop
inc
push
testb
ret
pop
add
sub
clc
je
jnp
fucomi
pop
cmpl
inc
mov
cwtl
repz
xchg
in
mov
cmp
and
xor
or
mov
push
outsb
call
mov
add
pop
jmp
pushf
xchg
sbb
test
push
push
xorl
hlt
ja
popf
add
adc
cmp
movl
mov
or
shr
fistpl
and
xor
mov
push
xchg
pop
dec
pop
jno
dec
addr16
adc
push
clc
mov
push
or
and
jg
js
mov
jnp
cmpb
jbe
push
scas
pusha
in
push
adc
adc
sbb
pop
pop
push
xchg
push
cmp
in
or
push
dec
sbb
add
pop
add
push
push
jmp
xchg
filds
sbb
jmp
jmp
or
outsb
mov
push
add
push
pushf
bound
imul
mov
pop
pop
lds
sub
adc
and
loop
pop
push
fistpl
mov
mov
jecxz
mov
enter
jae
lahf
mov
jl
or
cmp
inc
mov
push
sbb
cld
inc
inc
and
mov
adc
or
test
push
lcall
mov
dec
cmpl
push
je
call
inc
and
jbe
xchg
das
popf
ja
jmp
mov
xchg
js
adc
ret
lret
xor
dec
cmp
push
mov
adc
or
ja
cmp
lock
cli
add
push
sbb
dec
sbb
fldt
adc
jle
fstpl
adc
xchg
fs
mov
or
push
or
add
inc
out
push
push
or
stos
outsl
insb
xchg
sub
mov
jmp
add
sub
xlat
or
xor
je
pop
dec
lcall
push
push
and
call
mov
pop
mov
fcomps
das
call
push
push
push
es
push
inc
inc
pop
stos
adc
and
lret
xchg
mov
or
xchg
add
andl
mov
or
popf
cmp
pop
test
or
mov
jnp
lea
movsb
cmp
pop
fs
push
lahf
mov
loop
or
das
fs
int3
sub
lret
or
lea
cmp
sub
jns
push
mov
adc
add
mov
cmp
push
pusha
add
sub
cwtl
ss
xor
push
fstl
cmp
inc
adc
push
and
cmp
std
nop/reserved
push
mov
sub
enter
leave
cmp
ror
rcrl
popf
and
sbb
into
sbb
push
sbb
fstps
imul
push
movsb
leave
das
push
or
cltd
pop
ret
fwait
enter
es
push
repz
mov
jno
sub
and
out
xor
pop
imul
push
adc
inc
sbb
sti
push
cli
loopne
mov
std
out
sbb
jl
or
xchg
sub
or
inc
push
adc
outsb
adc
and
xor
cs
mov
add
or
test
jmp
push
pop
xchg
and
sbb
dec
cmp
jne
insb
sbb
jp
sbbl
pushl
add
cmp
mov
xor
xor
dec
mov
add
popa
inc
test
jle
ja
ret
xor
push
dec
lcall
outsb
adc
adc
xor
and
enter
ss
ret
nop
movsb
pusha
sub
xchg
xor
ss
add
repz
sbb
sbb
shrl
push
in
pusha
mov
xor
jge
mov
movsl
popl
dec
adc
sbb
jnp
adc
les
leave
cmpl
sbb
mov
and
inc
xlat
push
daa
int
mov
or
lods
aad
out
mov
mov
pop
enter
rclb
in
adc
push
and
xchg
mov
dec
xor
adc
cmp
cmpl
movb
cmp
dec
orps
outsb
mov
sbbb
mov
lea
in
inc
push
push
in
enter
sarl
dec
jne
pop
pop
pop
lea
iret
add
jbe
sbb
or
dec
and
fs
loope
outsl
ret
mov
idiv
add
xor
fs
sub
dec
das
sbb
xorb
shl
inc
mov
test
xchg
push
shr
jb
and
or
cmpb
adcl
aaa
sbb
sbb
outsl
adc
ja
sahf
push
and
jbe
pop
pop
leave
call
inc
loopne
add
adc
int
popa
adcl
jbe
mov
sbb
or
out
push
push
push
call
xor
add
and
inc
ret
pop
ret
adc
sub
sbb
dec
push
xchg
or
push
cmpsl
pop
pop
and
out
sub
mov
ret
push
cwtl
cmpb
jbe
cmpl
mov
shl
inc
mov
call
and
cmpsb
adc
popa
xor
pop
sub
stos
imul
or
jne
jle
cmpsl
and
lcall
int3
push
inc
dec
adc
add
mov
out
out
xor
push
test
xor
jne
mov
je
sbb
ret
cmpl
test
repnz
loopne
push
sbb
or
mov
stc
lock
sti
cmp
jmp
int3
add
ja
test
mov
mov
shrb
clc
dec
add
dec
jl
lock
mov
pop
and
or
mov
push
sbb
inc
add
push
or
mov
dec
cld
fcmove
xlat
nop
push
and
inc
inc
jg
js
pop
inc
stc
adc
sub
jnp
and
dec
popf
cmpsl
negb
jmp
gs
xchg
jl
dec
pop
test
scas
sub
call
and
andl
testl
xchg
push
rorb
mov
ret
pop
fwait
and
add
cmp
sub
cwtl
sbb
xchg
mov
dec
lock
outsb
in
fmuls
sub
imul
mov
and
xchg
add
les
cld
jne
cmp
mov
dec
sub
lea
subl
jge
dec
push
push
pop
xchg
mov
pop
and
call
cmp
xchg
nop
lret
call
xchg
lock
fcmovne
pop
sar
adc
dec
shrl
pop
xor
sbb
ret
xor
in
mov
loop
jmp
pop
nop
mov
push
cmp
push
pop
inc
dec
add
cmp
add
sub
test
inc
mov
pop
jae
imul
xor
bound
or
xchg
push
xchg
or
jmp
or
movsb
add
sub
orb
fiaddl
mov
nop
insl
daa
repnz
inc
or
shrl
add
lret
repnz
mov
std
nop
push
je
cmpsb
mov
ret
cmp
mov
mov
adc
pop
testb
mov
inc
jl
cmp
jecxz
mov
add
imul
sub
rorl
int
inc
cld
add
cltd
xchg
sti
adc
mov
fwait
movsl
cli
inc
arpl
push
and
pop
pop
and
mov
mov
jno
lret
or
push
sub
sbb
test
incl
xchg
adc
cli
je
cmp
xor
cld
adc
add
push
or
and
cmp
jne
arpl
call
cld
arpl
add
dec
sub
or
inc
cmp
or
add
xor
xchg
or
sub
xchg
dec
lds
xchg
pop
lea
decl
popf
inc
and
dec
rolb
daa
xlat
push
ljmp
ja
add
push
and
ljmp
pop
cmp
jne
dec
notb
lahf
sbb
inc
int
into
andl
pop
divl
sub
mov
pop
pop
ja
jbe
push
sbb
and
loope
push
jae
or
shr
popa
mov
pop
adc
pop
or
jmp
nop
sbb
aam
push
clc
inc
fdivs
add
cmpb
sub
out
ret
xor
std
into
cmp
pop
adc
ds
xlat
adc
js
inc
rclb
rcrb
mov
mov
in
cld
lods
jb
es
jl
cmp
jge
pop
sub
push
mov
add
std
or
jge
xor
push
in
fstps
pop
xchg
insb
lret
sub
call
lcall
sub
push
jle
sub
and
flds
mov
repnz
outsb
xor
adc
push
and
std
and
ss
push
dec
dec
stc
bound
xchg
test
cmpl
jne
fsubr
out
adc
loopne
arpl
jmp
fldl
out
cld
fmuls
jmp
int3
fwait
pushf
stos
xor
push
std
cmp
icebp
jl
dec
popf
movsb
sub
adc
mov
push
or
mov
xor
dec
or
shrb
mov
lret
mov
mov
sub
popa
mov
mov
push
push
dec
inc
mov
jge
cltd
and
rclb
dec
xchg
rorl
jl
push
sahf
pop
daa
jo
mov
imul
leave
or
shlb
sub
push
lret
jmp
cs
cmp
sbb
push
sbb
or
sbb
je
adc
sbb
imul
inc
jb
jp
enter
or
adc
out
jmp
jl
add
mov
orl
popa
rolb
cmpb
pushf
xor
sbb
push
lock
subb
mov
mov
inc
je
call
fld1
and
cmp
loope
loopne
movsl
loop
loopne
and
pop
mov
pop
jecxz
sbb
adc
rcl
sbb
iret
jmp
icebp
mov
dec
sbb
shr
lret
or
outsb
sub
sub
pop
repz
or
mov
inc
xor
push
xor
jmp
inc
add
cmp
cmp
adc
or
mov
cmp
sbb
add
loope
mov
add
outsl
cld
call
push
or
sarl
sbb
add
xchg
fisubl
or
sahf
add
and
movsb
or
sbb
popf
or
xor
or
adc
push
xchg
pop
mov
xor
cld
adc
jge
test
sub
adc
pop
les
xor
or
or
ret
inc
xor
sub
cmp
shll
push
mov
dec
sbb
pop
mov
movsb
adc
fbstp
movsl
lock
das
add
test
sbb
ljmp
inc
ds
adc
xchg
cld
test
adc
maskmovq
negl
or
inc
popa
and
xchg
mov
push
push
testb
add
scas
push
xor
icebp
jmp
and
push
decl
outsb
sub
data16
dec
inc
cltd
cmp
adc
ja
dec
incb
jb
gs
inc
ljmp
stc
rolb
add
sub
mov
cmp
loop
mov
push
adc
movsb
arpl
sub
inc
in
and
movsb
aaa
nop
cs
mov
inc
xor
mov
ds
sarl
add
fisubl
ret
dec
cmp
shlb
jne
xchg
pop
bound
mov
imul
add
and
mov
inc
cld
pop
pop
push
sbb
jae
cmp
or
mov
cltd
mov
and
aaa
push
cltd
pusha
lock
stc
call
sbb
sub
jmp
push
adc
push
call
xor
pop
adc
insl
call
mov
inc
or
fndisi(8087
std
cmp
and
xchg
add
jne
mov
mov
cmp
sbb
mov
scas
xchg
mov
sub
push
cmp
loopne
push
dec
in
fstpl
scas
ret
jmp
decl
pop
lods
mov
fmul
adc
lea
in
mov
outsb
sub
inc
sbb
mov
sbb
sbb
push
cs
adc
arpl
call
push
enter
scas
and
test
out
cmp
movl
mov
or
pop
push
aam
cmp
ret
push
pusha
cmpl
sub
int
or
or
add
jl
inc
outsb
sbb
and
lea
ret
or
inc
and
out
lret
mov
pop
fists
in
popf
push
andl
lret
or
push
inc
inc
xor
dec
clc
jne
sub
dec
cwtl
push
push
dec
adc
push
arpl
out
popa
loope
imul
and
pop
inc
and
xchg
pop
adc
adc
push
push
push
mov
and
pop
pop
pop
adc
lods
or
andl
adc
push
jmp
sbb
call
add
cmp
adc
push
mov
jne
jp
out
jae
int
or
clc
jge
adc
je
sbb
or
and
call
inc
adc
cld
jecxz
jmp
add
fwait
inc
mov
mov
cli
pop
jne
xor
xchg
jge
clc
adcl
in
or
add
push
push
clc
push
xchg
das
pop
lods
jmp
cmpsl
fs
repz
call
es
cmp
mov
jo
or
incl
call
orb
jb
xchg
lea
adc
in
mov
movb
fisubrs
mov
adc
push
push
cmp
mov
inc
sub
adc
cmp
lahf
or
dec
mov
xor
jle
dec
push
mov
je
or
mov
xor
in
and
test
sarb
jg
adc
test
sub
dec
xchg
movsl
dec
xor
inc
dec
inc
mov
mull
mov
mov
ret
imul
outsb
pop
insb
xor
cs
xor
addb
dec
outsl
push
outsb
addr16
popa
out
dec
inc
insl
aad
adc
mov
mov
lea
jecxz
jo
cltd
cmp
iret
push
jns
clc
sti
jne
add
pop
dec
rcll
enter
sbb
xchg
cmp
stc
adc
xchg
test
ret
insb
and
inc
push
enter
lods
jne
and
call
bound
push
jno
dec
lds
lds
and
fdiv
adc
bound
popa
inc
dec
je
int3
mov
scas
add
rcll
xor
adcb
xor
jge
xorl
or
and
sub
les
push
adc
push
xchg
add
cmp
push
push
adc
fdivs
or
mov
sub
fmuls
ret
movsl
rclb
test
xchg
jb
add
push
movsl
jne
add
sbb
repz
or
test
ss
xchg
push
sbb
push
outsl
data16
popa
jb
mov
ja
repz
jae
xor
pop
cld
clc
lret
test
sub
mov
sub
enter
or
dec
push
mov
clc
mov
add
mov
and
cmp
jne
fidivs
ret
in
ror
mov
push
iret
push
and
lods
rolb
into
out
add
mov
push
inc
jmp
pop
mov
push
mov
adc
push
cld
jne
pop
outsb
sub
shr
jb
ret
sti
pop
dec
leave
add
aas
fnstcw
sbb
je
and
jb
popl
leave
jne
mov
mov
je
movaps
jo
cld
jg
or
inc
mov
repz
out
add
ror
or
sbb
mov
mov
sub
aaa
test
mov
je
stos
or
push
lock
cmc
fiaddl
xchg
dec
inc
push
cld
cmc
push
adc
adc
fbstp
or
lds
mov
push
cld
shl
xchg
jo
inc
jae
test
popf
dec
push
gs
jmp
int3
int
movsb
jmp
adc
add
and
mov
sbb
loopne
ja
daa
or
dec
sub
clc
cmpsb
nop
adcl
add
push
lds
sahf
mov
divb
adc
adc
or
add
iret
pop
jmp
adcl
dec
sbb
mov
in
push
call
cmp
xchg
adc
pop
and
je
dec
adc
rcrb
cmp
jbe
or
mov
and
pop
out
jns,pt
adc
jmp
sub
das
fldlg2
mov
aas
fsts
int3
lods
mov
cli
add
cmpl
fstl
loop
scas
or
mov
movsl
adc
mov
out
cmp
xchg
call
sbb
pop
test
bt
js
pop
push
push
insl
jns
adc
cmp
sbb
jnp
xchg
sub
push
add
mov
sub
sbb
es
adcb
lcall
pop
adc
lret
stos
inc
test
or
lea
sub
sub
testb
xlat
cmc
sbb
ret
and
or
call
pushl
xor
inc
inc
dec
sub
shll
mov
inc
out
xchg
les
adc
imul
xchg
cmp
mov
push
inc
jo
fsubl
in
pop
xor
push
cmp
inc
mov
and
mov
push
mov
test
sbb
jo
push
xor
mov
sbb
adc
or
loop
adc
lock
or
mov
and
xchg
push
stos
js,pt
test
jg
xchg
repnz
pop
insl
cltd
adc
lahf
int3
insb
push
mov
std
addps
and
jno
or
adc
adc
sbb
xchg
and
and
sub
call
daa
inc
adc
cmp
cld
add
and
nop
outsb
nop
and
les
inc
push
mov
pop
lock
icebp
mov
and
xchg
hlt
enter
jb
cmp
sbb
mov
and
xchg
cld
enter
ja
in
jb
cmp
sbb
mov
and
mov
call
sub
ljmp
in
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
aad
in
jb
cmp
sbb
mov
and
xchg
fsubp
fbstp
cmp
sbb
mov
and
xchg
vshufps
jb
cmp
sbb
mov
and
xchg
int
into
in
jb
cmp
mov
mov
mov
mov
mov
mov
mov
and
mov
rorb
adc
or
push
gs
mov
jle
or
and
icebp
sub
or
or
pop
xor
or
js
gs
imul
mulb
lds
push
js
inc
dec
gs
jo
pop
nop
sub
push
pop
shlb
push
mov
cmpsl
xchg
mov
push
inc
dec
jne
pusha
dec
gs
outsl
daa
jb
add
and
xchg
and
inc
dec
outsb
fnstsw
in
pop
nop
in
adc
mov
data16
les
popa
insb
add
cmp
mov
ret
pop
nop
pop
loop
push
xchg
insb
lds
push
mov
gs
or
cmp
inc
icebp
adc
or
or
imul
outsl
adc
call
insb
sbb
rolb
outsb
xor
nop
movsb
stos
and
les
or
jbe
data16
outsl
ja
mov
scas
pop
dec
inc
daa
fs
and
js
cmpsb
mov
nop
pop
pop
fstps
mov
push
bnd
mov
imul
mov
inc
rclb
xchg
shlb
or
les
mov
insb
dec
popa
movsb
ret
mov
and
outsb
fs
pop
nop
push
mov
in
mov
mov
dec
punpcklbw
xchg
test
pop
pop
xchg
and
or
hlt
es
jo
cmpsl
pop
inc
push
jae
imul
push
adc
push
mov
int3
pop
pop
enter
notb
pop
adcl
mov
push
mov
mov
mov
cld
aad
pusha
in
cmc
mov
int3
les
sarl
gs
in
push
test
test
add
je
arpl
orl
inc
loopne
rorl
je
imul
cmp
xor
lahf
enter
cmp
dec
popa
or
xchg
pop
pop
enter
mov
xchg
enter
or
ret
popa
outsl
and
enter
in
hlt
test
nop
xchg
jo
inc
bound
jb
jae
mov
pop
rclb
in
imul
test
lods
test
push
adc
add
data16
add
cmp
rolb
pop
add
push
dec
cwtl
or
push
sbb
push
inc
insb
neg
aas
sub
lcall
dec
lcall
mov
adc
repz
pop
jbe
clc
add
push
adc
xchg
pop
mov
lret
jg
sub
and
xchg
imul
pop
and
loopne
lahf
sub
adc
insb
xlat
repnz
xchg
movsl
xchg
ds
out
test
xchg
std
pop
mov
jno
mov
add
jb
inc
pop
ja
add
mov
inc
xor
sub
dec
cmp
cwtl
cmp
lahf
loope
loop
movsb
test
add
repz
jne
mov
fldenv
inc
ret
or
rclb
rolb
push
neg
call
mov
inc
dec
adc
push
push
xor
div
ja
insb
popa
cli
cmp
xchg
pop
mov
push
add
pop
pop
sub
nop
lret
xsetbv
mov
add
jmp
mov
insb
inc
dec
xor
mov
jns
xor
xorl
sub
pop
or
inc
pusha
push
movb
sub
cmp
push
xchg
in
add
pop
pop
loopne
data16
fs
mov
inc
mov
arpl
adc
inc
fildll
cmpsb
pop
or
ret
xchg
adc
jmp
cmp
aaa
add
dec
aaa
clc
mov
fdivl
stc
mov
and
cmp
mov
cs
add
loope
sub
pop
add
ffree
cmp
cmp
adc
push
lret
inc
iret
cmp
clc
and
adc
mov
movsb
jp
mov
fmull
scas
ret
pop
cld
out
cwtl
cwtl
and
loopne
or
shll
arpl
add
ret
push
inc
daa
and
scas
cmpsl
jns
inc
sub
xchg
aad
clc
pusha
enter
add
push
jg
mov
pushl
lahf
push
popf
xchg
push
adc
jne
dec
sbb
jg
or
cmp
mov
add
jnp
cmp
sub
je
mov
mov
ficoms
push
pop
jne
push
rorl
mov
sti
jl
push
and
inc
addl
mov
cwtl
cs
clc
add
xor
dec
sub
into
push
in
push
lods
movsl
xchg
dec
mov
mov
cmp
add
push
lea
mov
mov
pop
cmp
fsts
fists
imul
add
lea
push
or
mov
adc
mov
out
clc
imull
shr
stos
data16
sbb
push
popf
jmp
jmp
je
pop
and
les
jne
ds
lock
sbb
xchg
pop
enter
rcll
xchg
mov
ja
adc
push
adc
enter
or
stos
dec
lea
outsl
adc
aam
push
push
mov
sub
jge
out
popa
pop
enter
jmp
inc
pusha
movsb
pop
pop
ret
lret
push
push
sbb
movsl
dec
push
pop
imul
aam
mov
filds
aad
bound
pop
xchg
xor
add
das
cmp
fs
subb
push
sti
popa
nop
fwait
sbb
or
xchg
add
and
shlb
inc
push
mov
or
inc
das
xchg
jecxz
inc
mov
mov
mov
add
xchg
mov
cmp
jmp
nop
daa
fcoms
inc
clc
nop
sti
pop
jbe
je
xchg
testb
dec
movsb
nop
xlat
and
xchg
dec
shrb
movb
cmp
pop
sarl
fmull
inc
push
lea
add
mov
pop
or
push
xor
or
in
subl
ficompl
call
pop
fnstsw
popf
inc
repz
xor
das
xchg
pop
cmpsb
sub
popf
loope
into
inc
ljmp
jge
or
in
mov
or
je
ja
nop
loop
cmp
shll
pusha
shl
nop
lahf
cmp
inc
jmp
das
repnz
inc
dec
mov
mov
call
sub
fsubrl
xor
or
hlt
andl
lods
jmp
adc
mov
mov
daa
mov
fcompl
pop
cltd
sbb
rorb
push
cmpb
xchg
or
dec
and
fstps
mov
and
push
cwtl
xor
jge
lock
shll
pop
mov
mov
sub
cmp
imul
gs
incl
add
cmpsb
push
in
xchg
cmp
push
jg
jmp
decb
nop
ret
add
es
je
push
lret
and
mov
mov
cmp
jne
lea
mov
pop
pushf
push
add
and
lds
push
or
or
mov
iret
or
nop
loop
and
dec
push
xor
mov
call
push
jo
movsl
fsubrs
gs
cld
sub
mov
add
jbe
xchg
add
addr16
dec
stc
dec
dec
and
bswap
into
push
adc
enter
sbb
mov
cmpsl
push
pop
enter
insb
stos
sbbl
inc
jmp
jle
test
cmp
dec
ret
setno
cmpw
jbe
movsl
mov
imul
inc
add
push
leave
and
inc
mov
dec
lods
adc
enter
js
inc
int3
ja
jbe
unpckhps
jne
and
and
lds
pop
jp
jle
or
mov
sti
add
jle
push
or
pop
jmp
mov
mov
jecxz
std
jle
or
sub
pop
inc
push
or
stos
test
push
mov
ret
and
jmp
int
inc
je
jmp
push
inc
ja
je
push
inc
out
adc
add
push
mov
mov
mov
cmp
ret
mov
jne
int3
adc
cwtl
and
cmp
xorl
xor
movsl
and
pop
cli
rol
xchg
ret
xor
pop
pop
dec
ret
rcl
push
mov
lcall
int
outsl
daa
movsl
or
and
sti
lret
push
or
adc
das
into
jo
or
call
add
aam
mov
sbb
push
mov
shr
and
xor
clc
sarb
mov
movsl
xchg
jno
imul
cltd
sar
dec
insb
dec
push
cld
lea
sbb
mov
notl
enter
ret
inc
jmp
push
mov
push
shll
test
pop
push
inc
push
cmp
loope
xchg
push
sub
xchg
push
in
and
mov
xor
stos
or
xchg
negb
jge
mov
idivl
in
or
movsl
add
mov
xor
mov
stos
repz
aas
mov
sub
in
inc
leave
jg
addb
add
pop
pop
jg
inc
aam
mov
xchg
jp
xchg
mov
mov
push
orb
and
mov
push
orl
dec
enter
repnz
js
xchg
sbbl
sbb
cwtl
or
daa
dec
jge
adc
jb
ljmp
pop
test
jge
xor
mov
sub
inc
jae
pusha
pop
call
add
dec
xor
enter
mov
jmp
ret
pusha
das
pop
adc
or
or
mov
jle
add
test
xor
or
shrl
gs
or
lret
dec
aaa
test
dec
imul
inc
and
js
mov
cmp
xor
stos
ljmp
xor
jg
cmp
jl
sbb
xor
dec
stos
cmpb
dec
cmp
fnstcw
sbb
push
jmp
xor
inc
pop
lea
loop
or
adc
stos
or
pop
inc
clc
adc
les
xchg
lods
xor
dec
loope
dec
push
push
jns
mov
xchg
mov
add
imul
adc
mov
add
sti
xor
incl
add
mov
jmp
sub
add
or
add
repz
inc
nop
push
dec
je
cmovnp
mov
cli
test
aas
in
pusha
ss
xor
sub
sahf
shll
stos
jecxz
sahf
jnp
inc
or
jne
xchg
das
out
test
lea
adc
or
icebp
add
lret
inc
cwtl
mov
and
imul
mov
push
push
gs
in
ret
orb
lods
ja
pusha
loopne
pop
pop
inc
loop
xchg
sub
cmpsb
xchg
add
icebp
and
inc
mov
sbb
pop
lahf
pop
cltd
sub
sub
sub
add
dec
sub
shll
mov
adc
adc
xor
popf
sub
pop
mov
insb
aam
loopne
mov
test
bound
adc
ss
and
inc
push
pop
or
push
xchg
add
ret
mov
cmp
divw
inc
push
fs
adc
jle
add
add
sbb
inc
mov
jmp
sub
rclb
dec
or
clc
mov
pop
or
and
call
repz
xlat
ljmp
lock
imul
popf
mov
je
fidivl
pop
fbstp
push
call
jnp
mov
cwtl
dec
add
call
add
cwtl
sub
sahf
or
xor
stos
mov
jae
adc
jns
add
mov
dec
or
daa
cmpb
icebp
and
push
dec
js
adc
in
jmp
data16
or
adc
sahf
xchg
and
xor
cld
push
or
test
ljmp
add
rorb
pop
fisubrl
or
adc
mov
sub
add
add
rorl
test
mov
xorl
or
rcl
mov
pop
mov
sub
add
repnz
add
and
cwtl
push
in
bound
cli
mov
or
fimull
mov
push
imul
add
dec
mov
sub
aam
jo
and
pcmpeqw
dec
adcl
xor
and
xor
add
lea
sub
push
pop
call
imull
jmp
cmp
call
mov
pop
loope
inc
loop
pop
loop
dec
xchg
sub
fistps
pop
call
mov
xor
or
add
mov
xchg
movsb
add
pop
dec
lods
mov
enter
and
clc
sub
and
bnd
mov
shl
testb
nop
add
icebp
add
stos
fcmovne
dec
test
mov
push
cli
popf
inc
cmp
cmpsb
std
xchg
mov
call
cmpsb
jg
add
cwtl
xor
fsubl
in
data16
incb
getsec
addb
daa
xor
incl
jb
js
or
lock
sbb
movl
dec
nop
pop
jle
xor
incb
or
sub
lock
sub
mov
aas
mov
mov
sub
test
stc
test
sub
fistl
fstpl
push
fwait
cmpsl
add
or
xchg
clc
repz
cmp
fsubrp
inc
mov
das
mov
sub
pusha
fldl
xchg
sarl
mov
lahf
dec
sub
pop
or
jne
push
dec
or
mov
enter
cs
test
sbb
cld
xor
ds
or
or
mov
xor
rolb
les
in
cmp
mov
mov
add
jl
add
pushf
dec
adc
gs
and
jge
xchg
ret
mov
mov
mov
pop
pop
xchg
add
ja
decl
subl
fs
xor
sub
pop
mov
dec
sub
loopne
mov
dec
int
xchg
push
pop
lods
xchg
dec
int
rcl
cld
push
and
sarb
push
int3
jp
mov
mov
arpl
cwtl
xchg
cmp
jb
fsts
jmp
aam
lcall
mov
or
add
insb
mull
push
hlt
mov
xchg
bound
and
cmp
push
or
jno
mov
es
pop
sahf
dec
clc
adc
push
cmpsl
and
push
mov
inc
dec
rorb
or
sub
push
fstpl
icebp
dec
fwait
daa
push
sbb
les
insl
add
cmp
and
or
xor
adc
int
adc
add
mov
mov
and
push
push
mov
and
add
add
popf
jnp
and
testb
xor
cmpsl
das
dec
arpl
xchg
or
mov
mov
push
fnsave
nop
jns
push
push
add
pop
jno
or
mov
movsb
push
push
cwtl
aam
push
push
or
testb
pop
rcll
dec
call
rcll
lcall
or
test
inc
xor
aad
xorb
scas
movsb
popa
clc
out
and
ss
es
fdivl
or
mov
in
mov
and
fptan
sub
jae
sub
sar
adc
jne
push
adc
push
push
out
lea
imul
xorl
and
or
mulb
jle
je
xchg
cmp
popf
dec
stos
nop
pop
dec
lock
push
or
mov
xchg
les
jns
xchg
pop
inc
leave
aam
repnz
fs
sub
movsb
dec
leave
sub
push
add
mov
pushf
rcll
mov
cld
jae
insl
in
jb
dec
aam
lock
leave
popa
push
sbb
mov
or
cmpsl
xor
outsl
xlat
mov
push
outsb
testl
dec
add
cmp
add
mov
mov
mov
push
lock
jne
push
lods
sub
xchg
stos
mov
jb
xchg
push
pop
mov
je,pt
clc
dec
jo
mov
push
sub
mov
sbb
std
xor
jg
push
loop
je
or
clc
xchg
ret
and
addb
inc
scas
popa
sbb
fimull
sub
adc
fdivrs
xor
inc
push
ljmp
rcrl
mov
fdivr
push
adc
call
into
loop
out
adc
cmp
jle
jmp
lods
aad
push
inc
and
adc
jae
out
mov
pop
or
mov
sub
push
imul
cmpl
call
jne
sbb
xor
subb
nop
mov
jmp
test
push
sub
cmc
test
add
jne
aaa
inc
mov
jmp
add
cmp
mov
jmp
ficomps
je
in
mov
in
addr16
dec
hlt
push
add
sbb
test
cmp
mov
cld
dec
mov
cltd
sub
sbb
inc
mov
ja
pusha
add
fdivr
fiaddl
test
mov
push
push
and
xor
xorl
popa
cwtl
out
std
adc
call
jne
sbb
mov
sbb
pusha
pushf
jmp
sub
popf
xor
pop
testl
dec
je
shlb
and
decb
add
add
test
push
add
jp
adc
iret
and
aaa
popf
scas
jo
mov
and
mov
sar
adc
ljmp
aad
mov
mov
and
dec
inc
add
xchg
popa
test
xchg
hlt
xchg
mov
iret
push
and
or
data16
or
es
mov
push
xchg
sbb
inc
mov
sub
push
cli
mov
adc
push
lea
outsb
mov
jbe
mov
fldenv
or
mov
dec
and
mov
testl
addb
aam
mov
pop
sbb
or
int
sub
push
sub
dec
pop
mov
hlt
pop
jae
popf
popf
jmp
pop
jae
or
mov
leave
cmp
add
aam
sub
push
je
adc
xchg
arpl
mov
stos
lods
test
xchg
shl
jmp
inc
out
inc
add
in
lods
or
test
jge
add
rclb
enter
ja
test
push
mov
or
push
daa
pop
jge
insl
cld
mov
ja
xchg
jle
cmp
push
mov
rcll
mov
je
imul
push
lret
push
leave
mov
js
clc
cs
into
jmp
js
mov
push
lea
or
enter
arpl
test
enter
call
pop
jmp
inc
sar
jg
cmp
jne
orl
clc
adc
push
adc
imul
sbb
test
jo
ljmp
mov
or
pop
xor
sub
push
orb
stc
jns
cmpl
dec
lret
xor
adc
add
push
jb
jmp
sar
sub
js
sub
xchg
and
aad
in
add
lds
dec
test
xchg
pop
xchg
ret
insb
or
ret
push
imul
jb
sub
dec
popl
leave
or
xor
and
sub
pop
mov
sahf
scas
push
cmp
in
std
or
divb
push
lock
and
dec
clc
nop
sub
dec
mov
loopne
cltd
mov
cli
dec
pop
and
inc
rorl
js
xchg
mov
leave
xor
in
mov
scas
xchg
mov
push
mov
xchg
shll
lcall
pop
int3
lret
push
pop
push
inc
jnp
insb
xchg
jnp
nop
pop
mov
cmp
xchg
jmp
jo
loopne
cld
aaa
cld
inc
test
xor
jmp
sbb
sbb
ret
insb
add
add
add
or
adc
and
or
nop
outsl
xor
repnz
test
nop
decb
jnp
out
mov
or
xchg
and
inc
fistpll
dec
xor
cld
adc
movups
mov
pop
jae
xchg
mov
pusha
sub
xchg
mov
jge
pop
scas
adc
dec
popa
xchg
push
cmpsb
dec
in
mov
test
cld
mov
and
xchg
or
popf
jns
push
mov
call
mov
les
or
dec
dec
enter
lahf
dec
mov
or
fs
icebp
mov
mov
mov
and
sbbb
mov
pop
xchg
fs
xor
xor
mov
and
inc
nop
and
nop
sub
out
adc
mov
xchg
dec
mov
mov
cmpsl
icebp
aad
out
cmpsb
mov
shlb
cld
push
rolb
ljmp
adc
or
cmp
push
push
das
outsl
lods
fs
xor
cmp
pop
fs
loope
lock
call
icebp
adc
mov
dec
subl
mov
insl
inc
push
idivb
or
ret
cmp
sbb
sbb
adc
pop
dec
pop
xchg
or
mov
mov
cmpb
mov
and
push
cwtl
or
inc
jl
pop
pop
adc
xor
je
and
aam
push
mov
sbb
sub
or
cmpsb
nop
enter
adc
mov
cmpsl
pushf
and
test
std
pop
or
adc
aad
adc
add
add
xchg
xchg
pop
push
push
call
push
inc
and
enter
jns
int3
or
mov
sbb
jne
mov
mov
or
push
or
adc
pop
xor
push
pusha
and
cli
clc
adc
cmp
ljmp
fwait
inc
das
mov
outsb
loopne
divl
out
int3
test
add
or
and
add
push
inc
sub
and
add
cmpb
or
inc
mov
push
add
adc
add
mov
cmp
or
leave
divps
dec
sarl
jg
mov
push
leave
push
sub
adc
inc
faddp
sub
mov
lock
add
ret
cmpsb
pop
dec
outsb
hlt
pop
movsl
push
adc
andb
push
xor
sub
aad
addl
dec
ret
xchg
cmp
sub
das
jae
sbb
loopne
adc
cmpsb
adc
sbb
mov
cmc
mov
mov
rcll
clc
inc
cmp
lret
push
mov
sub
adc
je
add
inc
jb
push
xor
mov
enter
mov
sbb
mov
inc
sbb
and
hlt
xor
push
or
pop
pop
out
mov
sub
dec
enter
mov
inc
out
push
je
sbb
sub
pop
mov
jb
inc
mov
out
js
xchg
movsb
push
stos
xor
jae
pop
lret
jne
cld
cmp
loopne
or
jmp
add
jg
addr16
cwtl
movsb
clc
pop
and
pop
icebp
mov
ret
xchg
shl
dec
jo
push
push
add
xor
adc
call
push
mov
sbb
cmp
mov
add
adc
rorl
sbb
mov
mov
iret
push
rep
pusha
or
jne
pop
jne
les
mov
pop
loope
push
dec
sub
jbe
or
adc
jne
mov
mov
and
sbb
setne
mov
or
pop
xor
xchg
adc
cmp
lea
push
and
add
mov
cmpl
cwtl
xchg
rorl
pop
inc
sbb
jmp
lock
adc
xchg
int
inc
sbb
dec
lea
pop
mov
pop
in
adc
stc
and
inc
adc
sub
mov
sti
pop
arpl
loop
popa
mov
daa
orb
lock
das
and
stos
or
sbb
fwait
mov
sub
sub
ljmp
loopne
dec
jmp
pop
mov
mov
fwait
sub
mov
dec
in
outsb
sbb
in
test
xchg
aaa
inc
test
fsubl
add
inc
pop
mov
bound
shl
mov
sub
adc
xlat
or
sub
push
movsl
insl
nop
nop
enter
mov
js
shrb
mov
or
inc
sub
and
hlt
or
enter
push
adc
xor
cmp
sub
rol
push
and
jmp
and
bound
mov
call
out
push
sbb
push
hlt
mov
inc
sub
enter
stc
or
push
dec
out
leave
loop
stos
nop
cltd
sahf
mov
stc
leave
enter
insl
das
fs
jne
or
insl
add
cmp
pushf
and
sub
or
jo
or
pop
out
les
push
lret
test
adc
and
into
test
sbb
push
mov
push
and
pop
or
aad
repnz
mov
pop
push
lods
imul
icebp
or
xchg
jns
xor
jl
push
xor
mov
adc
pop
cltd
xchg
jns
jo
imul
sbb
push
jo
arpl
pop
mov
lods
call
push
lock
adc
xchg
adc
int3
aam
enter
adc
xor
and
dec
jo
test
les
shll
cwtl
fsubl
nop
dec
hlt
adc
and
dec
js
nop
xorl
repnz
and
inc
pop
or
push
adc
and
dec
mov
inc
xor
xor
xor
dec
cmp
sbb
xor
or
imul
lcall
sbb
adc
push
call
sbb
ret
xchg
sbb
xchg
inc
enter
fucom
inc
mov
rclb
dec
and
inc
dec
and
loope
sbb
mov
or
mov
mov
mov
dec
or
mov
rorl
inc
test
and
xchg
mov
pushf
sub
xor
xchg
xchg
sub
cmpsb
pusha
inc
mov
cmpsb
sbb
cmpsb
cmp
test
cld
cltd
and
adc
or
adc
je
dec
xor
in
fs
dec
and
fs
fs
mov
pusha
dec
clc
in
dec
rcrb
inc
pop
and
scas
jae
sbb
hlt
adc
mov
pop
jnp
mov
dec
bound
sub
add
adc
mov
mov
push
adc
xor
add
sbb
sub
push
mov
and
pop
adc
sub
mov
insb
aas
and
adc
out
or
movsb
cmp
mov
or
cwtl
fs
sub
test
and
rolb
xor
lcall
mov
imul
subl
sbb
xchg
mov
pop
pop
loope
fidivl
inc
mov
xor
lods
push
icebp
or
jno
cwtl
lret
jb
stos
jp
adc
jae
add
add
in
outsl
int3
adc
mov
push
inc
push
inc
push
pop
cld
test
icebp
test
jbe
mov
add
sbb
clc
loopne
dec
xor
inc
adc
out
cld
inc
mov
jns
add
push
and
pop
xchg
mov
xchg
mov
ret
into
addl
mov
jg
loopne
dec
outsb
push
js
add
sbb
dec
daa
movsl
push
sub
scas
or
dec
ljmp
push
cli
sub
or
testl
scas
push
cs
mov
stos
test
push
aas
orb
scas
push
sub
xchg
clc
xchg
out
out
or
jne
sarl
je
daa
and
sub
and
sbb
popf
mov
in
pushf
xchg
stc
aam
inc
sbb
lods
mov
jge
imul
push
outsb
or
dec
push
adc
shl
movsl
jge
sub
mov
xchg
gs
mov
jbe
xlat
xlat
xor
clc
aam
test
enter
scas
pop
jo
pop
add
cs
lods
insl
imul
mov
pop
or
xchg
jne
sub
xchg
loopne
jmp
pop
jle
int3
roll
dec
mov
sbb
lret
scas
xor
dec
add
or
sbbl
jmp
xchg
dec
rorl
aas
notb
or
pop
cmc
inc
add
popa
mov
pop
cld
sub
cli
xor
shr
cwtl
mov
test
into
lea
outsb
in
inc
pusha
jae
rol
loop
xchg
adc
jmp
push
andb
cmp
jne
xchg
insb
or
shl
push
dec
cmp
push
sbb
or
loope
loopne
pop
and
fsubrs
mov
sbb
xchg
sbb
push
adc
enter
or
inc
push
mov
inc
push
jb
sbb
sbb
and
and
xchg
and
mov
sub
or
mov
push
jne
mov
mov
push
add
mov
fs
mov
das
rorl
sbb
imul
mov
and
and
mull
loopne
push
xor
sbb
sub
fsubl
mov
lea
mov
movl
mov
mov
xchg
cmp
sub
sub
push
dec
sub
cltd
and
fimull
sub
jb
and
sub
dec
sbb
pop
inc
jns
jb
push
xchg
jp
scas
jbe
adc
int
adcb
pop
je
sub
mov
cmp
fcomps
seta
fisubl
lret
cmp
xchg
rorb
fwait
push
lret
xchg
cmc
lret
jmp
adc
lret
xor
adc
jg
or
push
push
inc
lock
clc
adc
add
mov
inc
jp
mov
pushf
xchg
cwtl
push
int
shlb
dec
test
or
out
add
sub
sub
outsb
and
xlat
inc
in
mov
inc
add
sbbl
ret
pop
dec
and
add
dec
sbb
add
sti
push
cs
dec
dec
push
pop
mov
pop
adc
push
pop
and
dec
popa
xchg
mov
mov
and
push
mov
mov
cmp
js
or
popf
jno
arpl
test
pop
adc
cmpsb
mov
pop
gs
and
outsl
sub
xchg
cmp
arpl
std
pop
jo
adc
or
push
dec
jo
nop
push
in
cmp
mov
cltd
js
std
lahf
xchg
es
dec
aaa
xchg
xor
sbb
pop
and
movsb
pushf
fstl
int3
xchg
scas
sub
loopne
dec
outsl
xchg
mov
and
out
js
out
xchg
out
sbb
sub
mov
cmp
insb
dec
xchg
in
pop
icebp
pushf
out
jg
leave
inc
aas
xor
push
xor
and
xchg
pop
jo
adc
icebp
sbb
mov
adc
and
loop
les
out
adc
and
and
adc
lock
jb
cmp
cs
mov
cs
mov
enter
mov
sbb
mov
and
in
jb
cmp
pop
mov
and
inc
enter
jb
sbb
int3
mov
mov
das
ljmp
das
or
xchg
int3
sbb
pop
ret
push
xchg
xchg
scas
fsubl
jne
mov
push
inc
cltd
test
and
cmp
shl
fistl
test
cmpsb
pop
push
mov
mov
inc
sbb
sub
xor
cli
xor
fbld
call
lock
mov
and
cmp
daa
mov
dec
xchg
sbb
repz
loop
and
add
cmp
push
in
imul
repnz
adc
pop
int3
jne
or
inc
rclb
mov
mov
test
or
mov
test
inc
push
outsb
imul
jae
xchg
jo
pop
jae
fildll
test
mov
xchg
adc
shll
pop
cs
push
aam
in
ret
out
mov
cltd
push
and
cld
sub
out
add
inc
xor
jge
jge
cmp
clc
mov
add
jne
out
loopne
inc
lcall
lcall
dec
cmpb
je
sbb
cld
cmp
aas
add
or
mov
dec
push
clc
jbe
push
dec
call
jge
mov
ds
xlat
insb
repnz
scas
pushf
cwtl
mov
call
jge
ret
int
mov
icebp
gs
lea
or
fs
lret
sbb
xchg
inc
xchg
mov
fwait
inc
lahf
pop
mov
call
adc
adc
pusha
cs
jge
xor
dec
rolb
shlb
sbb
push
ds
movsl
sahf
or
stos
jle
jbe
mov
add
jmp
sub
mov
dec
out
pop
dec
jp
pop
push
sbb
sbb
int3
ljmp
popa
jno
push
pusha
aas
push
push
sbb
ja
push
inc
xor
scas
dec
nop
mov
lcall
orb
inc
psrld
adc
jae
sub
dec
sub
rorb
lods
push
unpckhps
rorb
je
push
push
sub
xchg
pop
mov
add
jbe
jb
mov
push
sub
mov
push
or
xchg
jmp
rorb
inc
mov
lds
cmp
sbb
push
inc
inc
inc
movb
mov
mov
subb
pop
or
mov
sbb
pop
sub
mov
sbb
cmp
mov
psubusw
aas
lret
xchg
xchg
adc
dec
inc
xor
push
add
addr16
adc
adc
cmp
adc
sub
cmpsl
dec
shl
bound
pop
sub
cmp
add
repz
nop
mov
sub
shlb
pop
mov
movsb
fcmovu
fcmovnu
loopne
adc
fs
dec
mov
dec
sarl
lcall
out
fistpll
pusha
and
inc
cmp
xchg
inc
lahf
xor
adc
out
inc
fwait
lock
sub
sub
dec
mov
xor
push
clc
xor
add
in
or
insl
dec
sub
cmp
cltd
dec
and
xorl
cmp
dec
adc
cmp
inc
or
inc
adcb
jb
mov
test
xchg
dec
loope
arpl
out
clc
data16
mov
leave
adc
or
xchg
int3
and
and
add
mov
inc
sub
adc
jl
xor
mov
pop
lahf
insl
mov
adc
inc
add
and
pop
push
inc
or
test
test
test
test
and
addl
and
jo
and
sbb
inc
sub
arpl
clc
jecxz
jl
mov
inc
jp
push
cmp
fs
addr16
xchg
xchg
xchg
sub
iret
jmp
dec
push
es
in
inc
shll
pop
mov
pop
push
adc
call
cmp
imul
cmpsb
push
pop
mov
fcoms
stos
inc
push
clc
mov
stos
orb
push
or
jae
adc
popf
jnp
mov
jl
jl
es
jmp
outsb
in
jns
lock
push
arpl
lret
mulb
and
sub
dec
incb
dec
xchg
loopne
dec
or
pop
jge
imul
sub
sbb
add
insb
jmp
sahf
call
and
mov
cmp
xchg
dec
add
popa
xor
dec
popa
std
pop
test
popa
push
mov
sub
sub
sub
test
lea
add
loope
mov
sbbb
ret
data16
or
mov
or
cmpsl
sti
insb
int3
mov
outsb
sub
jns
filds
adc
or
dec
add
jl
push
xchg
repz
lock
cltd
dec
mov
adc
pop
pop
sub
cmp
ret
nop
dec
or
push
adc
jg
jne
loopne
push
faddl
bound
push
test
add
loopne
mov
xor
and
push
and
sbb
push
fisubl
adc
add
jno
cmp
in
jae
outsb
popa
cmp
xchg
mov
cmp
lods
inc
pop
lcall
jb
lds
sbb
clc
ss
in
push
or
pop
fidivs
test
dec
or
adc
xchg
pop
pushf
shlb
mov
inc
test
loop
fwait
mov
gs
incl
popf
icebp
aas
andb
jmp
stc
or
dec
push
lahf
iret
mov
jmp
mov
cltd
out
inc
jmp
mov
xchg
loope
sbb
data16
sbb
repnz
xchg
leave
cmpsb
sahf
repnz
cmp
ds
bound
mov
jp
mov
aaa
jp
pop
add
add
out
lret
adc
mov
in
xor
inc
popa
and
add
out
jne
frstor
push
push
add
sub
jmp
inc
les
data16
and
jns
and
xchg
and
shlb
push
and
xor
adc
cltd
adc
dec
and
sbb
ljmp
fadd
and
mov
cld
inc
std
or
nop
sbb
add
jb
dec
cmp
pop
test
inc
scas
mov
mov
xchg
xchg
scas
mov
pop
inc
fsubs
test
jns
dec
or
orl
es
divb
fs
ss
lock
outsl
mov
mov
jns
pop
or
adc
loopne
jp
push
push
xchg
pushf
movsl
push
push
xor
sbb
je
or
jne
pusha
adc
push
add
aaa
push
mov
or
and
and
or
sub
and
sub
fisttps
cmpl
push
xchg
cmp
xchg
adc
jo
lods
xchg
mov
enter
das
or
push
mov
ret
or
sbb
int3
call
jnp
or
pusha
jb
sub
orb
cmpsl
sub
lret
lods
call
nop
add
sbb
lret
add
enter
and
sbb
sub
imul
mov
inc
repz
andb
ljmp
or
mov
mov
jbe
mov
add
les
mov
repnz
and
inc
mov
adc
sbb
orl
sbb
pop
sub
jbe
dec
push
ja
xor
cmpsb
dec
or
popa
outsb
jge
jbe
cmp
jne
push
nop
add
or
and
adc
jmp
mov
loop
pop
scas
add
clc
lods
or
jne
xor
es
cs
mov
sub
lret
aam
sub
cli
or
ja
mov
or
jmp
pop
sub
ja
mov
cmp
fadds
mov
cmp
xlat
out
xchg
sub
rcl
jbe
in
push
or
movb
pusha
ja
mov
orb
sbb
or
ret
mov
fwait
or
movsb
jne
and
push
cmp
adc
test
and
pop
test
push
les
fs
or
cmp
ja
sub
loope
add
pushf
xor
sub
mov
shr
sbb
loop
fisttps
sahf
xor
inc
nop
jge
cwtl
lcall
and
sub
insl
or
or
adc
sub
sub
or
mov
jae
sub
popf
sbb
jmp
xor
int3
jae
pop
inc
mov
adc
mov
xor
jg
and
mov
mov
and
dec
jbe
imul
cmp
sbb
or
and
cmp
adc
jmp
orl
test
dec
faddl
cwtl
imul
and
sub
push
jb
mov
in
cmpsb
call
lock
lretw
clc
enter
lcall
dec
scas
xor
or
ja
fldl
je
mov
inc
pushf
push
inc
adc
mov
ret
adc
insl
fistpl
fisttps
dec
mov
scas
insb
sub
inc
sub
jne
mov
add
inc
cld
jne
jmp
jno
xor
xlat
cld
sub
dec
xor
pop
sub
xor
insl
fs
add
enter
inc
sahf
fldl
lock
sbbl
cs
xor
pop
movb
sbb
xor
hlt
loop
fwait
or
lock
xor
popa
test
jne
mov
adc
xor
or
xor
push
and
sub
pusha
mov
xor
push
dec
adc
push
mov
pop
adc
mov
xor
sub
dec
xlat
sbb
adcb
dec
movsb
notb
sub
jecxz
sbb
xchg
adc
jl
fs
add
or
xor
xor
xchg
jmp
cmp
je
cmpsb
xor
xchg
adc
sbb
xchg
into
or
rcll
je
jl
jb
sbb
mov
jbe
nop
inc
mov
adc
sub
xor
mov
sub
aad
mov
hlt
sbb
sub
mov
mov
dec
and
push
popf
inc
jmp
inc
jb
xchg
xor
es
and
pop
sub
leave
cmp
or
add
xchg
xchg
sahf
cmp
gs
inc
inc
out
jo
cmp
lds
add
add
mov
or
or
int
cmpl
xor
fcomip
loop
and
or
lds
pop
inc
dec
cmp
sbb
mov
cmpxchg
fisttpl
test
or
mov
dec
roll
call
cmpsl
cli
loope
xchg
cmpsb
cmpsl
in
stc
adc
dec
xor
xor
ficomps
or
std
fbld
adc
adc
xor
mov
push
fwait
and
test
mov
xchg
jmp
mov
cmp
cmp
cmp
notb
and
add
adc
sub
sub
rolb
js
call
xlat
xchg
hlt
or
pop
dec
leave
adc
or
xorb
mov
ret
adc
mov
pop
sub
push
pushf
cmp
and
sahf
add
es
mov
sub
inc
fistl
mov
jmp
out
jae
cmp
push
fisttps
and
inc
call
adcl
xchg
dec
or
shrl
std
pop
add
pop
dec
test
sbb
sbb
dec
adc
int3
jb
sbbl
int
into
cmp
pop
orb
sbb
cli
push
cld
out
pop
push
dec
inc
lock
imul
add
test
int
add
cmp
add
js
xchg
push
mov
push
cmp
inc
and
pop
inc
lret
sub
jmp
push
icebp
xchg
add
ret
shll
daa
cmp
aaa
jp
js
fbstp
repz
int
cs
inc
movsl
imul
insb
cmp
pop
pop
sahf
jge
mov
pop
push
xchg
test
push
test
add
mov
inc
add
call
inc
add
xchg
mov
jle
je
xchg
xor
inc
dec
add
nop
push
push
sti
cli
mov
add
mov
jbe
aam
mov
cmp
xlat
cmp
and
inc
adc
and
je
mov
sub
jb
lds
dec
push
inc
jnp
mov
std
xchg
fcmovb
sbb
pop
mov
nop
sub
adc
xor
cmp
push
xor
sahf
mov
sti
inc
adc
sar
adc
mov
out
fldcw
mov
adc
push
punpcklbw
sarb
aam
inc
pop
push
repnz
inc
stos
adc
flds
repz
pusha
push
lea
push
sarb
shlb
popa
daa
cmp
nop
add
je
or
out
add
jo
adc
cmp
adc
and
jne
mov
jmp
jo
push
repnz
adc
or
adc
adc
cmp
cmp
clc
ja
pop
adc
jne
or
out
and
pop
sahf
mov
fbld
inc
clc
nop
sub
jmp
lods
movsb
mov
and
inc
mov
push
cld
inc
sbb
fdivs
dec
call
stos
cmp
and
adc
push
or
out
push
test
das
mov
or
dec
mov
push
shl
cmp
insb
icebp
mov
and
fsubs
xchg
addl
or
subl
adc
xchg
les
mov
and
nop
cs
cmp
jmp
shlb
sub
pop
outsl
lret
stos
sub
inc
add
sub
cs
xor
mov
inc
fisubrl
fiadds
pop
inc
and
nop
fmulp
loop
inc
out
jmp
dec
nop
jno
lcall
rorb
popa
stos
or
mov
mov
stc
aas
sub
pop
jmp
loope
mov
rclb
test
test
aas
fidivs
and
pusha
sti
jo
enter
or
insl
fs
enter
jecxz
and
out
enter
daa
mov
pop
les
adc
xchg
in
mov
adc
mov
and
pop
push
adc
jo
adc
js
xchg
xor
xor
and
add
pusha
inc
insb
add
xlat
mov
lods
sbb
aam
xor
and
fisttps
lds
add
unpckhps
xorb
and
mov
xor
inc
or
fstpt
jo
adc
imul
and
add
sarl
lock
adc
scas
inc
cmc
repnz
call
or
xchg
adc
test
sbb
adc
inc
xor
add
add
fcomps
sub
test
sbb
pop
jmp
xor
mov
add
aaa
cmpb
xchg
jno
std
js
add
cmpsb
fiadds
inc
add
mov
inc
out
pop
bound
test
xchg
test
imul
adc
mov
mov
out
push
pop
pop
es
out
ret
xchg
xor
call
les
das
push
test
subl
test
bound
add
and
roll
jae
sti
shl
mov
add
out
loope
pop
test
add
pop
aaa
std
js
out
testl
mov
cmpsb
jae
in
adc
inc
mov
movsb
out
cmp
outsb
test
add
js
push
je
add
flds
outsl
addr16
test
add
dec
sub
xchg
orb
push
add
movsb
fstl
jno
xchg
sub
popa
or
fwait
mov
ret
popf
jl
mov
or
mov
ret
iret
fimuls
shlb
test
mov
inc
or
mov
jp
jle
fwait
sub
ret
sub
cmp
cli
test
out
aam
std
popa
inc
les
hlt
sarb
aam
fnstcw
mov
cltd
fistl
jl
pop
jbe
xor
clc
adc
mov
xor
push
lods
les
not
es
je
fstpt
adc
sub
mov
mov
mov
decl
sub
or
inc
lds
nop
xlat
add
pxor
cwtl
push
adc
mov
test
mov
lods
test
add
int3
or
scas
test
bound
inc
fistpll
sub
incl
sub
dec
jle
test
test
imul
test
out
and
adc
inc
add
mov
test
jle
testl
loope
jnp
dec
out
add
outsl
test
xchg
roll
daa
and
xchg
cmp
cli
inc
outsb
push
or
push
test
xchg
les
shr
and
mov
movl
addr16
adc
mov
fdivrl
push
sub
adc
xchg
divb
or
or
je
negb
inc
adc
adc
sti
dec
cwtl
icebp
rol
sbb
fbstp
add
jl
iret
push
jbe
jmp
cli
mov
inc
mov
cmp
ja
mov
mov
fmuls
inc
lock
stos
xchg
repz
adc
xchg
in
loope
add
xor
lds
mov
movb
cmpl
jb
cmp
push
pop
xchg
push
int
inc
pop
add
fwait
pop
mov
sub
movsl
jo
mov
icebp
jnp
push
adc
inc
xchg
test
push
pop
pop
imul
cli
rorl
xor
push
fdivrl
mov
jl
xchg
stc
pop
adc
adcl
clc
inc
leave
inc
and
mov
pop
xor
mov
inc
bt
outsb
xchg
out
cli
inc
add
bnd
ljmp
dec
and
mov
movsl
icebp
repz
pop
in
inc
aad
in
jnp
jge
test
jl
inc
mov
dec
xor
cmp
js
jae
pop
jl
mov
xchg
call
testb
cmp
jl
cmp
mov
or
fdivrs
add
pop
xor
ret
mov
jo
add
xlat
mov
inc
incl
adc
mov
repnz
pop
add
sbb
pop
fnstenv
jl
shr
sub
mov
add
add
inc
inc
inc
add
inc
dec
dec
dec
dec
add
push
push
push
push
push
push
mov
pop
inc
pop
jo
loopne
add
mov
sbb
push
fwait
jecxz
fs
cmp
jae
mov
movsb
add
testl
fisttpl
jl
xchg
sbb
adc
xor
pop
cmp
or
and
or
dec
insb
ret
sbb
call
adc
movsb
ret
sahf
mov
push
xchg
lock
jl
mov
nop
jmp
fiadds
mov
mov
scas
int
ds
aam
push
mov
ret
orl
inc
nop
lret
xchg
xchg
push
push
pop
hlt
jns
pop
xchg
mov
xchg
mov
jo
shr
jb
stc
dec
test
lods
shrb
dec
call
jne
inc
inc
xchg
sbb
test
dec
and
fistps
xor
jl
jecxz
sbbl
test
jae
movsl
jbe
outsw
out
insl
jnp
dec
loop,pn
test
lds
pop
mov
inc
rol
adc
push
push
mov
daa
pop
adc
add
call
mov
push
and
je
xor
or
call
int3
push
adc
mov
push
dec
add
jae
pop
test
dec
xor
sub
xor
xor
pop
pop
dec
pop
lock
shlb
shrb
mov
bswap
arpl
or
rolb
repnz
or
or
pop
loope
xor
lods
xchg
dec
stos
ljmp
push
inc
or
pop
push
push
inc
xchg
xor
popa
push
ror
mull
xchg
mov
cmp
jae
inc
leave
push
stc
int3
or
loope
push
xorl
inc
jo
icebp
xor
jge
rcrl
cmp
mov
fstl
fists
or
adc
rep
mov
sbb
mov
xor
mov
leave
jl
sub
sub
or
les
movsl
adc
mov
add
and
push
mov
sub
jge
push
cmp
fiaddl
or
add
daa
sti
pop
jg
push
adc
cltd
sbb
adc
jbe
mov
inc
out
mov
leave
and
xrelease
jb
adc
jmp
lret
push
lea
clc
nop
rcll
mov
lret
mov
and
add
loopne
loopne
add
pop
jb
ja
push
inc
xchg
movl
cmp
repz
cld
pop
and
ja
ja
push
and
lret
dec
mov
xor
sbb
cmp
stos
repz
nop
cmp
jb
out
repz
ds
je
and
push
dec
dec
dec
adc
mov
xchg
sbb
and
mov
sub
or
push
push
fstl
loopne
jg,pt
dec
add
adc
or
out
dec
mov
scas
ret
jb
add
nop
jg
or
je
or
and
lea
jmp
and
movb
push
dec
sbb
cmpl
in
in
dec
nop
loop
aas
xor
mov
inc
int
and
iret
add
and
xor
push
hlt
or
add
push
orb
add
mov
xor
nop
je
xchg
jmp
cmp
sub
lea
out
dec
inc
icebp
in
mov
dec
data16
cmp
es
pusha
movsb
sbb
jns
movsl
imul
push
cmp
je
dec
add
pop
ja
enter
or
shl
mov
mov
ja
nop
ffreep
lcall
or
or
idiv
xor
cwtl
xchg
pusha
clc
in
add
jae
lcall
xor
and
int
ds
roll
mov
dec
ljmp
lret
inc
inc
pusha
or
or
jne
xchg
mov
add
std
sbb
xchg
xchg
mov
imul
inc
jae
inc
sbb
loop
dec
decb
adc
xlat
rorb
pop
adc
jge
testb
xor
pop
xlat
xor
add
jmp
jmp
or
insb
lea
clc
shl
xor
int3
lret
cli
pop
je
jle
inc
in
mov
dec
ds
inc
fisttps
sub
or
mov
or
pop
nop
inc
ljmp
iret
loop
pop
adc
jmp
sti
out
adc
xlat
xchg
nop
call
jmp
ljmp
or
loopne
stc
stc
cli
add
adc
inc
stos
les
jb
or
xchg
bnd
call
mov
mov
cltd
loop
adc
sbb
push
lcall
and
adc
loop
adc
and
push
sahf
mov
adc
sub
push
mov
insb
and
and
push
lods
dec
jmp
xor
inc
stos
les
jb
or
cmpsb
mov
inc
mov
test
mov
lahf
mov
stos
cs
mov
mov
pop
lods
rolb
fildl
outsl
shlb
incb
mov
inc
imul
or
cmp
rorb
popa
and
and
cmpb
mov
ret
lods
xor
popa
jne
fisubrl
mov
or
in
mov
inc
mov
mov
mov
dec
mov
push
jle
sub
cmp
test
stos
sbb
aad
add
sbb
and
sbb
adc
aad
and
daa
push
pop
pop
adc
mov
into
and
popf
stos
rorl
add
inc
ret
adc
jle
mov
cmp
mov
push
mov
out
nop
inc
xor
push
leave
mov
jbe
movsb
sbb
xor
pushf
mov
iret
push
sarb
push
iret
mov
and
dec
adc
push
mov
scas
mov
adc
bound
rorl
cltd
dec
lods
sub
mov
aad
or
adc
fstpt
and
cli
loop
adc
sub
push
fildl
xor
stos
fldl
shlb
push
jbe
test
je
or
push
loopne
adc
mov
rcrb
xorb
adcl
in
and
jbe
test
inc
mov
iret
jbe
test
cmp
jbe
test
and
mov
in
sub
xorb
test
and
pop
stos
out
jmp
or
int3
jmp
inc
push
cmp
and
sub
and
pop
push
leave
hlt
in
in
push
test
aam
xor
insb
lcall
adc
stos
out
stos
sbb
ret
lcall
popf
stos
icebp
mov
push
and
inc
or
mov
inc
mov
aad
sub
nop
add
aad
pop
mov
stc
push
mov
shlb
cmp
stos
sti
mov
inc
popf
aam
sbb
push
std
mov
popl
mov
inc
mov
daa
lret
mov
mov
push
sub
stc
add
int
or
in
dec
mov
add
mov
rcrl
jbe
nop
dec
xchg
pop
mov
stc
xor
das
add
mov
icebp
int3
sbb
adc
push
in
push
jmp
addb
or
jae
or
ret
inc
test
mov
out
fdivrs
loopne
dec
ret
push
xchg
jp
add
test
jbe
or
mov
aas
adc
loopne
xlat
ror
adc
jbe
dec
jne
jb
pop
ljmp
mov
in
mov
stc
dec
push
pop
jmp
mov
push
adc
push
adc
fst
or
rorb
stos
je
daa
mov
int
push
sti
leave
jae
jp
sbb
add
xor
lret
notl
mov
mov
mov
xlat
xchg
jae
xor
push
xor
inc
movsb
jne
mov
aam
add
aad
inc
fs
mov
frstor
bound
or
and
out
sub
mov
hlt
push
aam
inc
and
mov
dec
inc
mov
mov
adc
or
adc
out
std
fidivrl
adc
dec
mov
push
add
out
adc
push
push
push
push
xchg
xor
mov
ret
loopne
rol
sub
ficoml
or
adc
and
test
movb
cmpl
jne
scas
lahf
adc
push
movsl
test
pushf
inc
xor
pop
inc
xor
and
lret
pmullw
mov
add
sbb
lock
hlt
sub
mov
rorb
dec
sub
jb
jecxz
or
and
jae
cmpsb
push
push
mov
inc
sbb
iret
mov
jnp
or
xchg
pop
dec
lea
mov
clc
pusha
aad
fs
xor
cmp
pusha
jmp
jle
iret
xor
xor
pop
and
call
add
andb
sub
outsl
test
sub
push
mov
lock
or
int
daa
sub
and
imul
cmp
stc
push
adc
mov
sbbb
xorps
push
and
or
insl
pop
pop
cmp
jbe
jae
pop
cmp
sets
inc
mov
add
and
imul
pushl
lret
cmpsb
pop
sub
push
jle
jbe
into
push
adc
mov
sub
mov
sub
adc
sub
cmp
or
test
adc
enter
cli
push
push
loope
jmp
mov
jmp
mov
mov
sub
ret
movsb
test
adc
or
ret
add
mov
les
push
xor
cmp
jl
incl
xlat
pop
xor
inc
cwtl
fsts
test
push
fisttpl
sbb
and
fiaddl
add
hlt
lea
xor
decb
pop
dec
adc
xor
test
mov
xchg
or
push
sbb
mov
push
xchg
stc
lods
mov
movsb
shll
and
xchg
mov
mov
and
ljmp
movsb
push
sbb
call
test
jmp
fbstp
stos
aad
sbb
and
mov
adcb
mov
dec
and
and
or
test
inc
call
or
adc
rclb
jnp
adc
shl
mov
sarb
or
adc
xor
loop
or
js
or
push
xchg
scas
push
ljmp
loopne
lahf
cltd
repnz
js
mov
outsb
mov
fs
mov
ret
push
inc
jns
fists
adc
cmpsl
and
lcall
movsl
out
loopne
xchg
or
test
jo
loopne
mov
adc
push
mov
pop
test
mov
add
sub
adc
or
jmp
mov
pushf
je
and
shrl
jne
scas
ret
sbb
enter
cmp
into
jne
or
test
push
cmpb
je
add
ffree
adc
inc
ds
sbb
add
pop
adc
push
mov
fistl
sub
jbe
adc
cmp
mov
and
sbb
and
inc
xchg
cltd
and
and
or
repz
shl
mov
push
or
imul
aas
push
movhps
mov
sbb
inc
fs
pushf
cs
dec
push
stos
inc
shl
fnstsw
pop
adc
jno
push
push
push
pop
ret
adcl
dec
adc
mov
cmp
dec
out
adc
dec
sub
mov
movl
lds
cltd
push
in
or
js
adc
call
pop
fidivs
jmp
aaa
cltd
xor
inc
std
or
mov
pop
xor
sbb
ret
adc
mov
add
mov
mov
pop
mov
mov
push
add
ja
pop
pop
xlat
adc
xchg
push
inc
dec
filds
push
mov
adc
mulb
pop
sbb
mov
jle
pop
pushf
pop
inc
mov
push
loope
loopne
and
cmp
add
lock
pushfw
push
cltd
and
mov
cmp
fistpl
push
mov
sarl
ror
ret
mov
jge
or
dec
in
or
daa
shll
fsubrl
xlat
xchg
in
ret
pushf
jl
cwtl
jb
adc
mov
lods
or
xchg
lret
xor
ljmp
cwtl
incb
pop
loope
arpl
mov
jb
mov
arpl
lea
adc
sub
jmp
movsl
jnp
ret
icebp
inc
repnz
push
mov
mov
add
dec
add
mov
aam
cmp
mov
cmp
mov
cmp
cmpsl
sbb
adc
dec
outsb
xchg
inc
inc
and
cs
pop
outsl
jp
enter
inc
jmp
gs
push
cmp
fwait
jne
dec
xor
or
push
dec
outsl
popa
fs
push
inc
cwtl
sub
rcrb
movsl
sahf
call
mov
jecxz
jmp
jns
add
jo
clc
inc
or
bound
and
xor
push
add
jns
adc
pop
xchg
dec
test
jo
mov
ss
flds
hlt
dec
call
stos
scas
cmp
xchg
jg
or
mov
adc
and
mov
inc
ret
ja
movl
pusha
pop
xor
inc
and
ds
jle
and
fs
jne
aas
cs
push
hlt
and
xchg
mov
mov
enter
inc
loope
in
test
pushl
jecxz
lods
sub
out
gs
add
ret
xchg
je
sub
jmp
mov
call
xor
push
mov
movsb
push
pop
fbld
call
mov
fisubrl
inc
int
mov
movsl
fwait
xchg
jge
adc
push
add
xchg
push
pop
mov
test
test
and
call
out
inc
fmul
jmp
and
fsub
mov
fimull
iret
ret
iret
ds
mov
nop
jae
cmp
movsl
nop
fsub
lcall
xchg
idivb
sub
ret
aas
mov
rorl
adc
jle
jo
fildl
mov
in
inc
stos
test
lea
lods
inc
fldenv
shlb
adc
adc
fsub
push
in
add
call
jno
aas
mov
mov
and
mov
rorb
dec
fmuls
adc
mov
inc
sub
loopne
and
in
jne
test
leave
or
fcoml
inc
int3
adc
ds
jmp
or
int3
movsl
ljmp
pop
in
xchg
adc
icebp
adc
jmp
jne
inc
add
and
jl
ljmp
lahf
aam
fs
sbb
jmp
ret
rcrl
mov
ficomps
stc
add
loop
adc
add
sbb
in
mov
or
shll
addl
mov
repz
ud0
addb
ljmp
adc
mov
xchg
in
ljmp
jns
mov
push
mov
pop
orl
xchg
enter
mov
or
lea
pop
add
test
jne
leave
push
repnz
data16
or
ret
sti
or
adc
sub
push
pusha
loope
ret
and
in
leave
jge
inc
sbb
jo
test
inc
jmp
add
lock
loop
std
pusha
mov
adc
clc
data16
push
mov
mov
and
cli
lret
push
adc
push
fsubl
cli
mov
loop
jno
and
inc
call
add
add
cwtl
push
add
adc
cmp
push
lret
add
adc
mov
sbb
pop
dec
adc
stos
sub
and
sbb
pop
jecxz
and
lret
xor
jmp
mov
shlb
xor
shrb
loopne
ret
jno
mov
sbb
mov
inc
cwtl
xchg
in
mov
in
imul
and
and
push
xlat
lock
jb
xchg
mov
mov
push
or
and
cs
ds
xchg
leave
mov
call
adc
xchg
cmp
pop
jmp
pop
sbb
cmp
mov
imul
sub
mov
push
movsl
sbb
iret
neg
dec
les
loop
xor
outsl
jmp
pop
ja
pusha
push
push
mov
fldl
mov
mov
movsb
aaa
dec
std
mov
push
test
scas
loopne
iret
push
cmpsb
jo
test
cld
clc
push
xchg
push
xchg
clc
mov
xchg
dec
sub
jmp
aad
dec
dec
test
push
and
adc
out
test
outsb
test
sub
fiaddl
sub
dec
fdiv
sbb
jg
adc
pop
in
daa
loop
adc
adc
loope
shlb
iret
test
xor
or
repz
fiadds
sarb
inc
mov
mov
jo
sub
aaa
xchg
adc
sub
mov
or
push
jae
or
jecxz
push
inc
inc
mov
dec
pop
push
inc
loop
adc
mov
aad
fadds
or
push
jmp
imul
adc
lret
addb
jne
data16
push
dec
enter
scas
sub
push
and
lods
cmp
sub
ja
cmp
mov
or
fisttps
mov
lret
pop
mov
mov
pop
jg
clc
and
inc
lock
loope
fiadds
imul
sub
push
or
js
xor
mov
out
jns
mov
sbb
inc
pop
out
pop
mov
fsubs
bound
sub
cltd
es
movsb
jbe
xor
pop
push
xor
add
nop
adc
add
stos
fistpll
cmpsb
add
movsl
push
adc
or
mov
fimuls
lods
es
pop
add
dec
cltd
cld
popf
pop
es
imul
ficoms
out
lahf
mov
ret
test
or
and
into
mov
or
sbbl
cmp
int3
cmp
push
mov
push
sub
les
adc
ret
popa
cld
lock
ljmp
sub
add
ja
jmp
in
or
mov
hlt
orl
dec
loopne
mov
orb
push
inc
adc
xchg
push
xor
adc
or
adc
fnsetpm(287
xchg
inc
jecxz
and
inc
hlt
sahf
jecxz
shrb
xor
add
xor
or
adc
push
cmp
pop
data16
dec
cmp
jo
ja
sbb
nop
mov
push
xorb
mov
adc
int3
dec
push
or
movsb
das
mov
imul
cmc
dec
xorb
mov
loop
shr
add
adc
xor
jne
inc
pushf
lcall
dec
pop
mov
jle
mov
in
popa
add
nop
adc
test
push
dec
call
jmp
int3
clc
lahf
je
imul
pusha
add
inc
lds
sbb
and
pop
jmp
adc
inc
sti
dec
in
push
or
xchg
sbb
xchg
xor
mov
mov
sbb
jp
push
ds
cmp
xor
les
loop
cmp
lcall
mov
orb
sar
mov
inc
dec
call
inc
lea
lahf
adc
sbb
mov
jmp
addr16
daa
or
je
add
mov
incl
or
adc
je
rorb
xor
mov
and
or
leave
push
mov
cmc
bound
push
dec
call
sbb
sub
jmp
and
jg
jp
mov
mov
xchg
dec
lret
icebp
pushf
push
aas
data16
or
shr
jne
inc
movzwl
push
mov
add
filds
jl
push
inc
rolb
jge
lret
push
sbbb
pusha
sbb
push
jne
inc
add
cmp
jne
iret
ljmp
flds
inc
clc
mov
stos
mov
mov
scas
and
adc
jb
add
mov
shl
add
inc
xchg
add
cmp
jne
lahf
or
dec
or
call
ret
inc
test
xlat
enter
jle
and
ss
jge
or
push
sub
mov
pop
jae
push
lcall
jmp
push
push
pushl
and
cmpsl
mov
fcoml
and
mov
push
or
je
aad
orb
sub
dec
ds
xchg
and
jnp
or
jb
aas
and
sti
inc
inc
adc
loopne
push
scas
pop
mov
mov
adcb
jmp
inc
push
pop
mov
enter
jne
mov
lret
jge
in
or
mov
std
pop
sub
nop
testl
jne
and
cld
lcallw
pop
je
xchg
scas
mov
or
add
add
jne
cmp
data16
inc
jmp
mov
lret
outsl
test
sbb
jns
fcmovbe
loop
cmp
movswl
es
aaa
adc
sbb
sbb
adc
shrl
addr16
sti
push
push
and
sub
scas
inc
inc
mov
pop
gs
test
fucom
and
in
cmp
hlt
mov
hlt
repnz
fmuls
cmp
xor
xlat
or
lods
je
rorl
mov
inc
lcall
push
jae
jg
or
ds
add
push
enter
mov
pop
dec
gs
add
stc
xchg
and
or
xor
out
popa
add
mov
les
inc
mov
arpl
pop
push
push
push
pop
pusha
pusha
rorb
shlb
and
or
or
ds
add
add
xchg
pop
lret
push
mov
lahf
xor
cs
mov
xchg
jns
jge
fmuls
inc
dec
add
inc
decl
mov
ffreep
hlt
sub
add
test
jb
cmp
lret
and
das
or
push
pushl
cmpsl
or
insb
mov
mov
pop
mov
mov
sbb
leave
sti
sub
pop
pop
testl
mov
mov
jns
inc
cmp
std
inc
mov
call
sbb
add
addb
pushf
adc
mov
cmc
ds
movsl
and
cmp
out
push
xchg
clc
xor
sbb
push
sub
lock
and
xor
inc
pop
lds
repnz
xchg
orb
xchg
mov
mov
rep
stos
or
pop
and
rorl
sub
xor
lock
movsl
cli
jno
pop
icebp
pop
and
repnz
pop
ja
ss
sar
adc
adcl
inc
data16
xor
je
push
andl
mov
cmp
repnz
mov
mov
repnz
pop
inc
lret
jns
dec
push
sub
pop
insb
imul
mov
push
mov
lret
icebp
stos
pop
pop
jmp
scas
and
mov
inc
ja
and
and
jmp
or
inc
sbb
mov
sub
ret
into
outsl
gs
imul
or
outsl
icebp
pop
nop
dec
sti
xorb
jne
push
popf
in
lahf
popa
push
ret
cmp
lret
iret
fistl
hlt
mov
jae
xor
or
jno
xchg
fcomp
and
andb
xchg
mov
dec
js
xchg
cmp
xchg
xor
call
adc
repz
cmc
push
mov
js,pn
hlt
cmpsl
push
adc
sub
inc
push
repnz
mov
mov
lods
ja
xor
aas
sub
ret
lea
push
out
lret
jns
mov
and
cmc
aaa
push
push
pop
or
scas
and
imul
add
fcom
push
add
aad
jecxz
icebp
dec
out
inc
and
jne
arpl
jae
les
fs
imul
insb
cmpsb
das
cmp
ljmp
ret
stos
push
les
add
shl
fimull
mov
push
mov
mov
xlat
mov
sub
out
jb
push
push
sbb
ljmp
ret
add
mov
test
add
adc
lods
push
mov
jl
mov
cmp
jle
jns
mov
mov
adc
stos
out
mov
test
ret
call
xor
repz
mov
jecxz
jmp
adc
loopne
inc
jmp
or
test
pop
or
test
xor
jne
lea
add
fs
dec
xor
lock
sub
adcl
enter
loopne
xorb
call
das
cmp
shll
jmp
cmp
jne
ja
loope
dec
xchg
fistl
sbb
xchg
or
xor
aas
ret
jne
mov
sbb
sbb
call
fsubrl
sub
popf
add
add
stc
dec
pop
je
jne
dec
mov
xor
sarl
sub
add
dec
outsl
nop
rolb
pcmpeqw
and
xchg
insb
add
push
xchg
das
stc
or
push
jne
mov
cld
daa
lea
jo
dec
inc
fidivs
fsubp
jno
and
orl
pop
test
clc
stos
fldl
cmpsl
mov
cmpl
xchg
inc
jbe
sub
enter
pop
test
fnstsw
and
xchg
js
cli
lahf
mov
mov
cli
xor
jns
fistps
fbstp
jp
movsb
fistpll
jnp
out
dec
fistpll
pop
mov
jl
mov
daa
xor
jl
dec
pop
adc
clc
outsl
xchg
mov
outsl
lea
jle
xchg
xchg
inc
adc
mov
xchg
xchg
adc
mov
popl
pop
or
sbb
cmp
sub
popf
add
or
imul
pop
cmpl
add
lcall
cmp
cmpsl
dec
into
cmp
add
push
aaa
add
test
arpl
cmp
or
push
or
add
inc
ret
and
dec
fbstp
add
dec
jne
jne
js
lds
cmp
das
dec
test
or
xchg
rorl
fwait
cs
adc
stos
int3
bound
sbb
repnz
xorb
jl
mov
jne
outsb
aaa
inc
cmp
ret
xor
mov
js
nop
adc
mov
or
inc
hlt
xchg
sbb
add
sub
cmp
push
and
jne
push
sbb
cmp
cmp
mov
mov
and
jns
je
insl
add
sbb
fs
jb
jae
add
js
jo
out
mov
inc
or
xchg
or
adc
es
xor
call
test
cmp
repnz
scas
or
aam
adc
inc
ret
xor
lock
test
xlat
push
or
cmpsl
arpl
call
lock
movsl
aam
inc
clc
sub
out
into
sub
adc
mov
mov
fists
mov
loopne
and
pcmpeqw
push
jmp
into
hlt
or
pop
sbb
xor
adc
jae
add
push
and
xchg
mov
adc
inc
and
add
jne
mov
movsl
xor
cld
sbb
jae
xchg
repnz
in
adc
pop
rorl
or
mov
mov
push
clc
sbbl
sbb
ret
ljmp
fs
lods
sub
cmp
or
ja
jne
mov
sub
sbb
dec
je
add
dec
fs
sbb
adc
movsl
pop
jae
ljmp
jnp
adc
lret
jbe
dec
add
push
ficomps
fiadds
or
arpl
test
mov
mov
mov
leave
dec
mov
or
and
or
or
rclb
xchg
je
hlt
test
subb
dec
ret
scas
pop
and
push
nop
add
cli
dec
dec
push
daa
pop
and
out
xchg
and
dec
in
and
push
push
inc
or
xchg
dec
fs
adc
clc
adc
xchg
xchg
icebp
sbb
mov
and
mov
and
add
lds
leave
ja
dec
pop
jb
shll
fmull
and
aas
mov
and
mov
add
ret
adc
inc
add
loop
jb
fwait
cld
or
inc
mov
and
sbb
js
adc
xor
or
sub
or
test
sbb
jb
pop
sub
or
pop
shrl
xchg
lahf
add
gs
add
or
adc
inc
cmp
push
ret
xchg
js
xor
inc
push
mov
test
rcll
and
je
roll
cmp
aaa
or
and
sbb
adc
inc
ljmp
adc
sbb
sub
xor
inc
xchg
dec
sub
cltd
pop
adc
or
jle
mov
and
adc
and
mov
adc
and
adc
sbb
and
adc
or
and
dec
dec
xchg
push
sub
xchg
and
test
mov
dec
mov
inc
loope
nop
inc
push
add
out
mov
adc
and
push
or
inc
adc
mov
adc
and
dec
xor
inc
dec
push
mov
pop
and
dec
insl
xchg
je
jnp
orb
sahf
dec
movsl
xchg
lods
and
enter
dec
fisttpll
or
sub
or
sub
or
jg
and
sub
dec
aaa
mov
sbb
sbb
outsb
xchg
or
xchg
mov
dec
into
xchg
fisubrl
out
xchg
repnz
decb
or
sub
inc
adc
push
dec
push
xchg
pop
and
insb
jae
jp
andl
and
mov
mov
test
fs
fmull
xchg
ljmp
push
sbb
sbb
xchg
sub
xor
mov
dec
and
dec
fs
imul
inc
jle
mov
adc
mov
jecxz
cmp
inc
mov
int3
sub
shll
pop
ficoml
call
xchg
sub
xor
add
or
jmp
or
mov
and
add
fisubs
jg
fisubs
pop
mov
mov
dec
jp
lahf
in
sbb
cltd
xor
pop
dec
xor
mov
sbb
std
dec
or
daa
popf
stos
sub
sub
sub
cmpsl
pop
stc
add
test
into
sub
loop
dec
push
mov
pushf
shl
add
cmp
in
add
je
fadd
nop
rcll
xchg
xchg
cmp
fs
orb
mov
mov
mov
jg
je
jae
jns
ds
int
nop
push
inc
or
jmp
and
inc
addl
sub
adc
and
dec
sub
push
sbb
push
dec
or
sti
add
shl
cmp
cli
xor
or
aaa
jecxz
sub
shlb
popf
gs
test
sbb
adc
dec
scas
sub
leave
shrl
fmul
mov
cmpb
scas
fildl
cmp
inc
push
xorb
inc
inc
dec
aaa
push
or
jae
mov
mov
add
hlt
xor
popf
bound
inc
mov
push
gs
mov
mov
pop
sti
lock
shlb
addr16
jbe
xor
sbb
je
insb
inc
jo
sahf
outsb
imul
cmp
cmp
mov
das
ret
jne
cmpsb
ret
xor
repz
imul
jmp
jecxz
lret
aas
mov
iret
mov
sbb
in
test
push
rol
loopne
test
addb
jns,pt
ret
and
cmp
cmp
lock
cmpsb
inc
adc
or
sub
cmpsl
inc
test
mov
test
or
mov
sub
lds
inc
add
push
and
mov
test
push
cmp
pop
adc
adc
pcmpeqw
das
adc
jg
xchg
mov
pop
or
rcr
out
les
adc
loope
sub
inc
test
push
cmp
cli
or
ds
cmp
cltd
sub
fildl
ret
cmpsb
rolb
js
data16
popf
inc
dec
test
aas
shrl
inc
adc
cmpb
ds
mov
pop
and
or
or
push
and
or
inc
adc
cmp
and
adc
jae
inc
adc
bound
adc
outsb
repnz
cmp
outsb
repnz
cmp
outsb
repnz
cmp
ret
sbb
mov
push
cld
ret
jp
push
inc
push
add
pop
adc
and
sub
nop
or
push
cli
adc
pop
cmp
hlt
and
push
jo
lods
pop
cltd
and
sahf
push
cmp
daa
lds
daa
int3
cmpb
hlt
cmp
inc
cmpsl
jns
jo
and
and
les
and
out
pop
sbb
lods
pop
sbb
mov
pusha
cmp
mov
xchg
dec
adc
jne
lods
adc
mov
bound
test
stc
enter
sub
xchg
and
inc
or
adc
or
stos
or
pop
push
or
cld
dec
clc
test
mov
lcall
add
das
cmp
or
in
xchg
imul
mov
xchg
or
or
testl
ss
push
mov
pusha
mov
popa
xchg
push
sub
notl
pop
pop
pop
mov
or
out
aaa
and
loopne
movsb
std
cmp
stc
aaa
dec
je
add
call
and
les
cmp
dec
mov
jb
sbb
aam
in
repnz
push
sub
mov
xchg
xor
xor
push
jge
or
int3
in
pop
push
xchg
hlt
cmp
cmp
or
adc
cmpsb
pop
sub
mov
pop
aad
jg
or
mov
hlt
jbe
xchg
mov
xchg
mov
stos
lret
mov
mov
nop
and
je
push
scas
pop
scas
stos
mov
sub
enter
add
repnz
push
lock
push
jp
push
je
mov
stos
outsb
test
adc
xchg
arpl
add
adc
push
loop
push
mov
add
addr16
mov
or
fmuls
mov
inc
and
popa
and
add
pop
add
std
cli
cmp
adc
loop,pn
sahf
push
inc
xor
fistl
mov
jns
dec
push
sub
call
push
lret
jns
or
sahf
push
push
lret
sub
movsl
sbb
push
jno
dec
and
or
push
loop
sub
jns
pop
pop
jmp
scas
and
cmp
or
pop
lcall
in
dec
dec
shrl
pushf
mov
jnp
cmp
test
rcr
push
adc
cmpsl
shl
es
mov
imul
mov
mov
and
movsb
es
dec
fisttps
lea
movsw
and
cmp
fsubrs
rol
lds
adc
xchg
inc
dec
aas
push
pop
mov
jmp
pushf
pop
inc
or
inc
inc
dec
sbb
fnstcw
imul
xchg
lret
inc
por
mull
inc
lret
inc
and
mov
les
jle
pop
cwtl
mov
cmp
jae
movsb
xor
adc
add
sub
cmpsl
and
cmp
sbb
pop
mov
pmaxsw
inc
faddp
mov
push
fldcw
add
inc
jne
push
cmp
cmpsb
jp
mov
fstpl
inc
mov
dec
js
sbb
push
inc
pop
cmp
inc
repz
xchg
or
and
add
adc
cs
sbb
xor
jne
sub
cs
out
xchg
mov
andl
or
mov
movb
mov
rcrb
xchg
jnp
scas
fbld
or
leave
xor
jecxz
mov
int
in
cmp
rolb
xor
outsb
sbb
rorb
jns
cwtl
and
push
lea
add
push
or
dec
sbb
dec
sub
pusha
cmp
sete
push
js
adc
hlt
jmp
fisubrs
cltd
mov
push
mov
or
adc
push
sub
out
mov
adc
inc
das
fisttpll
add
mov
mov
push
adc
or
or
nop
cvtdq2ps
iret
mov
das
scas
mov
mov
jnp
icebp
mov
xchg
dec
sti
imul
inc
adc
pxor
and
stos
jne
inc
data16
xchg
or
and
je
sub
mov
arpl
nop
push
inc
dec
push
pop
inc
jne
and
je
jno
sahf
push
sti
aaa
pop
or
jae
mov
sbb
fisubl
dec
sbb
fistpl
dec
leave
cld
data16
jne
imul
fmuls
in
or
jmp
sub
and
xchg
mov
xchg
and
adc
adc
sbb
sbb
mov
add
add
mov
jl
or
sub
fwait
sub
lret
dec
cmpb
add
mov
mov
mov
call
loopne
ja
out
sahf
cmpb
jbe
push
jne
call
add
inc
or
jnp
out
mov
addl
push
sbb
inc
mov
int3
cmp
xchg
adc
mov
inc
sahf
pop
fs
scas
xor
fsts
mov
inc
sarl
sbb
sub
les
mov
ret
inc
push
pop
pop
mov
mov
mov
sti
aas
cli
xor
mov
popa
push
mov
mov
dec
push
dec
and
or
pop
ret
and
aas
aas
inc
dec
push
call
insl
push
repz
testb
sub
cmpsl
push
lret
fsubr
dec
and
dec
sub
xor
ljmp
and
push
pop
mov
enter
dec
inc
dec
cmp
push
cmpsl
push
xchg
push
pop
rolb
and
dec
dec
sbb
and
es
sub
sub
outsl
adc
xor
jmp
mov
sbb
add
and
popf
push
push
scas
ficomps
cs
inc
leave
xorb
or
xchg
xchg
nop
mov
mov
adc
sti
and
jne
out
fisubrs
outsb
or
fldl
or
pop
or
sub
push
jnp
gs
clc
clc
fwait
nop
inc
mov
aaa
adc
daa
push
ret
push
jns
adc
dec
inc
das
mov
inc
cwtl
xor
iret
and
loop
in
and
leavew
xor
jnp
push
sbb
pop
dec
cmp
test
repnz
js
aad
imulb
je
int
cmp
cmp
adc
xchg
xor
adc
adc
add
pop
push
repnz
rorb
call
call
and
movsl
or
add
call
or
stos
and
xchg
lahf
push
lock
cmp
in
or
dec
jae
jl
adc
ljmp
adc
mov
lods
js
sti
xor
push
sub
push
xchg
push
ja
push
mov
lret
dec
mov
sub
out
stc
mov
dec
out
mov
adc
movsb
out
addb
pop
inc
imul
es
and
mov
ja
test
fs
movsb
out
jmp
imul
jmp
add
pop
add
xor
icebp
pop
jmp
push
je
pop
movsb
xor
or
negl
xor
mov
popf
or
ja
xor
dec
or
add
adc
inc
leave
mov
out
call
sub
or
and
xorb
mov
or
pop
punpckhbw
cwtl
cmc
push
mov
popf
lret
xor
push
sbb
sbb
or
pushf
fisttps
inc
jecxz
and
rclb
je
sub
inc
push
or
pop
push
sub
test
mov
divl
push
mov
stos
push
xorl
fwait
cmp
je
add
nop
adc
call
sahf
scas
push
mov
jp
push
inc
or
or
popf
aam
mov
push
pop
mov
adc
xor
stos
shrb
inc
sti
fstl
pusha
mov
sbb
pop
inc
fildll
sub
hlt
or
mov
or
or
add
in
sub
popf
rcll
cmp
leave
sbb
xchg
sbb
push
andl
add
mov
and
movsb
das
inc
add
sub
out
xor
mov
add
or
sub
fs
adc
add
and
test
in
sbb
mov
and
ret
movsl
or
sti
lret
pop
or
pop
pop
and
aaa
pop
les
xchg
and
es
gs
sub
cltd
bound
xor
dec
stos
adc
cmp
cwtl
adc
push
adc
jae
pop
dec
push
insl
sub
push
mov
xchg
add
ror
xchg
mov
cmp
nop
dec
add
sbb
jne
mov
mov
scas
sub
adcl
lods
mov
mov
xor
sub
iret
sub
mov
cmp
xor
mov
aaa
jo
les
push
or
xchg
aaa
imul
mov
sti
pop
fs
aas
sub
inc
push
movsl
mov
cmp
int
aaa
mov
inc
test
push
lods
lea
or
push
inc
lods
xchg
push
adc
pop
pop
or
mov
sub
add
push
xchg
mov
add
push
adc
in
das
call
add
sub
pop
and
push
test
mov
push
gs
pop
mov
les
mov
xor
inc
imul
pushf
cmp
sahf
sbb
and
inc
add
mov
mov
sbb
scas
sbb
sbb
xchg
inc
aaa
jnp
adc
sub
inc
xor
jp
call
adc
adc
sub
inc
data16
call
push
inc
cltd
and
jae
sub
mov
sub
inc
push
push
loope
inc
jle
jl
test
ret
imul
orl
push
dec
inc
ja
lahf
jb
cld
jo
popa
jae
ja
push
fs
out
out
es
js
ja
dec
bnd
sbb
push
push
dec
dec
dec
adc
dec
pushf
and
inc
push
lds
mov
xlat
or
inc
movl
inc
add
pop
adc
sbb
and
lret
add
adc
dec
jg
fs
pop
push
sbb
sbb
pop
and
sub
sub
int3
jnp
movl
dec
fs
xor
add
sub
mov
push
sbb
or
mov
pop
push
mov
push
nop
mov
push
inc
enter
popf
or
loopne
shll
or
jmp
or
mov
fwait
lcall
push
in
and
lahf
rclb
push
push
fs
and
jp
dec
cmp
cmp
fs
mov
cmpsl
fistpll
aad
mov
sahf
cs
and
add
xor
pop
cld
push
jo
sbb
dec
push
cmp
inc
ja
mov
loope
pop
or
pop
sbb
push
lock
mov
mov
int
sub
fildll
mov
cmc
push
test
push
xchg
sub
lcall
dec
push
sub
popa
call
scas
sub
and
jns
pop
sub
jmp
dec
and
add
sub
jns
pop
pop
jmp
scas
and
into
xor
fadds
aas
lcall
or
pop
inc
sbb
repnz
and
bound
lret
xchg
scas
inc
ljmp
das
or
dec
add
dec
lock
inc
push
repnz
mov
adc
xor
lock
in
sub
xchg
dec
lret
jns
pop
sub
jmp
and
cmc
sahf
push
sub
xor
bound
inc
aaa
adc
and
lock
mov
mov
rclb
cmp
add
ja
clc
push
dec
outsb
arpl
loop
ljmp
rcll
aas
cmp
inc
xchg
mov
xor
mov
cmp
test
inc
cmp
dec
test
mov
inc
sub
xor
or
push
and
pop
outsl
test
out
xor
adc
mov
and
push
mov
or
jne
fcoms
or
sub
xor
popf
in
pop
imul
cmp
je
mov
mov
xchg
sub
cmpsl
rol
push
xchg
call
nop
inc
mov
sub
rorb
add
shr
inc
loop
inc
sarb
push
pop
mov
push
add
dec
or
add
inc
ret
and
stos
inc
mul
sub
sub
or
mov
sbb
mov
xchg
lds
arpl
jecxz
out
sub
pop
lods
cmp
movsl
or
ret
push
mov
jmp
inc
stos
mov
sub
cmc
pop
mov
mov
cli
rorb
pop
add
mov
add
push
cwtl
lea
cmpsb
shlb
pop
sub
cmp
cmp
add
push
dec
in
jmp
add
adc
les
enter
scas
xor
and
movb
push
pop
xor
or
je
pop
push
fcoml
incl
and
roll
jne
push
arpl
icebp
mov
test
inc
push
dec
sub
mov
sub
hlt
mov
shll
js
xor
xchg
and
inc
adc
das
and
push
sbb
add
add
sub
cmp
cmp
in
lods
inc
add
inc
pop
sub
pop
dec
or
mov
enter
add
scas
mov
ret
fucom
pop
test
inc
dec
push
xor
adc
jecxz
jo
and
dec
mov
push
inc
or
xor
jmp
xchg
mov
pop
js
repnz
jns
add
shll
pop
fs
int3
adc
repnz
test
cmp
lods
xor
stos
aam
aaa
mov
xor
mov
shlb
inc
add
mov
lock
xor
mov
data16
adc
cmp
xchg
rcrl
jmp
cmp
clc
xchg
movsb
and
gs
pop
xchg
in
jp
and
stos
inc
pop
sbb
mov
and
adc
lret
inc
dec
dec
or
jecxz
push
or
pop
or
mov
xchg
ret
inc
or
mov
clc
mov
xor
data16
sbb
dec
rcl
xchg
mov
cs
jae
sahf
adc
rcl
ja
add
sub
sbb
push
push
inc
leave
jne
outsb
xor
lcall
xchg
ds
imul
xchg
insb
gs
cld
stc
xchg
aas
adc
divb
in
jo
push
ljmp
and
cltd
push
or
xor
outsb
icebp
push
mov
inc
push
inc
mov
xor
and
mov
leave
dec
push
mov
sub
cmp
push
or
data16
adc
jb
test
mov
adc
stc
inc
lcall
shll
sub
aas
repz
mull
popa
or
mov
push
fs
mov
lods
je
jl
popa
add
mov
js
push
daa
fcmovu
inc
pop
add
add
xor
into
xor
std
mov
push
push
push
bound
mov
cs
push
les
or
inc
adc
loopne
push
cmp
ret
movl
cwtl
mov
xor
mov
adc
and
cmp
xorb
je
lahf
xor
push
lods
ss
inc
test
inc
adc
inc
add
push
int
imul
cmp
call
cmpsb
int3
sbb
pop
movsb
addl
adc
push
icebp
je
dec
and
call
aaa
pop
xor
pop
mov
in
mov
cmp
jno
lret
mov
or
or
fcoml
shlb
sbb
jae
les
and
sub
sub
jo
mov
call
test
xor
xor
or
cld
std
adc
push
push
and
cmp
cmp
clc
xor
sbb
clc
and
inc
mov
fs
cmp
xchg
and
enter
or
xchg
and
nop
shl
in
sbb
pop
mov
and
add
shlb
and
pusha
and
mov
roll
fs
loopne
and
cmp
xchg
and
enter
or
xchg
and
nop
loop
sbb
aam
xlat
aam
mov
mov
rolb
fs
xor
adc
enter
enter
and
nop
mov
xor
sbb
les
test
lods
xchg
and
or
leave
iret
xor
subb
pop
push
cmp
pop
mov
cmpsl
cs
cli
loopne
pushf
mov
and
cmc
sbb
xchg
sbb
push
mov
mov
pop
cmpb
pop
adc
xchg
test
xchg
push
sbb
xchg
js
pop
lret
pop
or
xor
fildl
xor
xchg
stos
std
sub
ficoml
cltd
add
and
push
ds
adc
xchg
lods
pop
pop
in
stos
adc
push
sub
fistpl
and
mov
xchg
les
push
test
xchg
movsb
lock
cmp
adc
out
mov
adc
add
incb
test
mov
sub
mov
sbb
in
mov
inc
mov
nop
lcall
and
inc
mov
cwtl
xchg
pushf
xchg
xor
push
lret
jno
movd
pop
dec
add
sbb
mov
dec
subb
pop
test
cmpb
fsubs
sub
mov
dec
ljmp
enterw
sub
movzwl
ret
inc
push
inc
insb
and
call
js
lahf
push
das
sub
out
mov
lea
aam
lock
popa
sbb
in
mov
xchg
xchg
enter
test
in
out
jno
pcmpgtb
cwtl
cmp
xchg
les
jb
dec
cmp
pop
xchg
xchg
jns
add
cmp
mov
xchg
mov
xor
push
addr16
or
adc
push
cmpsl
imul
sbb
inc
lret
mov
pop
data16
shlb
mov
push
outsb
add
dec
or
mov
mov
movsb
cmp
jne
push
add
je
mov
dec
loopne
es
sub
inc
mov
inc
inc
mov
pop
or
ficompl
push
pop
and
cmp
cmp
in
bound
xor
enter
push
and
or
sub
inc
sub
loop
pop
xchg
or
and
pop
or
test
or
add
sbb
movsl
pop
push
sbb
adc
and
adc
fs
stos
cmp
fucomi
fs
sub
or
testb
inc
je
mov
mov
mov
adc
inc
or
fwait
pop
adc
push
stos
add
sub
pop
fstps
je
ss
into
enter
or
and
jbe
or
mov
pop
mov
jnp
ljmp
jle
leave
jno
inc
out
sub
xchg
jmp
add
mov
insb
adc
test
mov
inc
xor
leave
mov
cmp
pop
mov
add
or
jne
pop
jbe
dec
cs
pop
imul
inc
iret
mov
mov
inc
push
imul
dec
outsl
fs
pop
test
sarl
dec
and
lock
mov
add
addr16
imul
adc
sbb
inc
outsl
jne
movsl
mov
sub
test
push
jo
arpl
callw
fwait
out
push
push
xchg
and
or
cmpsl
push
mov
push
inc
dec
push
pop
orb
inc
cmp
dec
inc
dec
cmp
in
sub
adc
xchg
adc
adc
hlt
dec
adc
imul
mov
scas
stos
data16
cwtl
jmp
push
pop
inc
inc
dec
sbb
dec
push
xor
xchg
out
ret
dec
inc
xor
imul
push
rcrb
divl
repnz
jp
and
mov
jmp
pop
fisttpll
lods
mov
dec
mov
jne
pop
hlt
insb
in
push
mov
and
and
out
lret
and
js
jnp
push
and
mov
jle,pt
mov
inc
imul
cmpsl
inc
movsl
ret
into
push
lret
pop
dec
push
cli
adc
fs
iret
pop
push
in
sub
mov
insl
xor
fsubs
stos
cmp
adc
dec
push
dec
andb
out
adc
gs
adcb
sub
stos
push
inc
fs
icebp
dec
arpl
sub
adc
mov
push
and
dec
or
lods
sbb
add
js
sub
sub
cltd
orb
pop
push
mov
sub
push
sub
mov
xchg
adc
sub
adc
and
cltd
fsubs
xor
xor
cmp
notb
inc
test
pop
sub
xor
loop
jnp
xor
push
pop
js
inc
test
xchg
adc
cltd
push
push
jg
loopne
adc
pusha
mov
mov
imul
sbb
sbb
daa
jne
nop
add
popf
leave
mov
loopne
push
jne
cld
adc
mov
js
dec
loopne
xor
cmp
jge
fcoms
add
mov
cmp
loopne
jnp
or
pop
sbbl
sahf
push
subl
mov
lea
fstpl
cmc
outsb
dec
jb
cmp
std
cmpsb
movsl
arpl
adc
cmpsb
sbb
add
mov
or
and
mov
dec
dec
or
pop
push
inc
mov
and
ffree
jnp
mov
or
fcom
je
test
sarb
data16
shr
adc
push
xor
test
and
xor
fisttpl
mov
push
sub
add
je
mov
roll
jne
dec
mov
pop
dec
adcb
cmpsb
jmp
adc
mov
inc
jne
out
gs
adc
push
push
sbb
mov
subl
ja
ja
pop
push
icebp
test
jns
or
ret
je
mov
pop
sti
sub
pop
or
jmp
scas
shll
mov
test
adc
mov
bound
sbb
insl
sub
repnz
xor
popf
push
xor
and
pop
cltd
xchg
arpl
cmp
cltd
xchg
and
mov
dec
cmp
scas
sbb
push
sub
mov
jle
mov
inc
push
adc
cmpsb
sbb
and
adc
shll
int3
push
cmp
pushf
push
xchg
lds
or
mov
mov
push
sbb
mov
inc
das
push
add
inc
adc
out
inc
ret
jb
ljmp
jne
inc
sub
jl
push
out
and
mov
push
sbbb
ret
nop
jl
inc
jmp
adc
mov
insb
sbb
mov
sbb
jmp
push
lods
lock
hlt
pop
rcl
scas
gs
add
or
pop
mov
repnz
add
mov
jns
aam
scas
into
xor
adc
loop
xor
push
bound
sub
mov
adc
or
aam
jno
sub
push
mov
leave
pop
push
gs
mov
pusha
adc
call
adc
cmpsb
push
cmp
and
jmp
and
add
insl
mov
mov
dec
xor
jmp
outsb
js
imul
sub
cmp
or
iret
adc
adc
call
aaa
clc
pop
movsl
xor
daa
push
and
cli
xor
ret
call
dec
cmp
movsl
or
lods
sbb
aad
inc
ret
fs
sub
hlt
mov
lret
push
or
clc
pop
mov
or
push
stc
xchg
add
cltd
xor
adc
mov
xchg
sbb
cmp
xlat
push
fistpll
push
lods
adc
rorl
popf
add
sub
xchg
pushf
sbb
and
add
xorb
dec
lret
jmp
mov
dec
add
cmp
xchg
sbb
and
xchg
mov
push
mov
jne
or
je
push
xlat
sbb
adc
pop
pop
mov
pop
inc
and
mov
fs
or
push
push
adc
sub
lock
xor
cmp
sbb
and
test
jecxz
aaa
jns
or
pop
lods
jl
aaa
mov
call
les
adc
xchg
cmp
xchg
or
test
and
icebp
mov
inc
clc
int3
outsl
call
rcrb
ljmp
sub
ja
adc
add
dec
pop
into
mov
sbb
test
xchg
push
push
or
mov
scas
mov
mov
pop
pop
sbb
push
loop
stos
mov
push
push
int3
test
sbb
pop
call
push
inc
adc
push
in
and
enter
in
cmp
pop
call
mov
jmp
push
lods
sub
mov
adc
test
xor
and
add
push
or
sub
inc
mov
mov
xlat
xchg
int3
mov
dec
sbb
adc
out
dec
in
push
lret
inc
mov
push
pop
movsl
sub
test
ffree
sbb
call
inc
xchg
push
mov
aaa
roll
popf
pushf
and
adc
xor
mov
mov
add
aad
xchg
xchg
or
jbe
push
push
int3
sub
mov
movsl
ret
rolb
cmp
stos
movsl
cmp
add
push
push
popa
cmp
lea
sub
push
test
and
imul
pop
dec
or
call
push
icebp
mov
mov
fbld
sbb
movsb
mov
pop
mov
rol
cwtl
stos
or
movb
call
bound
and
push
and
imul
nop
cs
cmp
popf
push
push
push
pop
sub
inc
push
sub
jb
xchg
es
dec
cmp
mov
push
bound
mov
push
pushf
push
push
mov
mov
loop
pop
and
sarl
adc
in
ret
pop
enter
cmc
push
mov
mov
movb
add
pop
add
pop
inc
insl
jmp
and
push
dec
mov
sbb
jl
lahf
movsb
sbb
cmc
inc
jne
dec
jmp
mov
or
std
icebp
mov
jmp
and
out
jbe
jno
rclb
jle
pop
cmp
xchg
popf
mov
add
mov
add
cltd
icebp
roll
js
pop
push
mov
clc
jb
inc
int
rcll
in
cmp
pop
adc
fstps
sub
jno
jge
add
mov
push
data16
cmpsl
and
repnz
pop
mov
add
ja
sbb
stos
cmc
or
add
xor
icebp
rcrl
xor
mov
cmp
xchg
mov
push
call
cmp
into
xor
outsb
pop
mov
lds
in
lods
adc
loop
add
sbb
sarb
mov
sub
aad
add
cmpsb
lock
xchg
sbb
xchg
js
insb
and
cwtl
and
rolb
push
add
sub
sbb
es
xchg
mov
int3
xchg
or
imul
push
dec
pop
lea
adc
sbb
ret
add
sti
shlb
nop
lcall
out
add
mov
cwtl
lods
lods
push
jecxz
rclb
add
sti
scas
cmovg
mov
pop
insb
fildll
fcmovu
jnp
adcl
lock
out
roll
dec
fst
inc
subb
add
movsb
xchg
ja
xchg
jne
add
pusha
jbe
mov
call
xlat
inc
scas
push
dec
xor
dec
add
aaa
lods
lea
imul
stc
xchg
lahf
add
jne
in
xchg
pop
mov
mov
add
lock
cltd
insl
fucomip
shlb
mov
cmp
aaa
or
xchg
addb
xor
jne
xlat
xor
pop
sbb
add
cs
mov
mov
rorl
decl
mull
outsb
add
arpl
repz
pop
add
inc
lock
jo
dec
add
or
xor
pop
push
add
scas
loop
push
add
sbb
andl
add
add
fmul
push
add
testb
mov
fwait
movsl
add
aam
fsubr
iret
inc
add
inc
mov
mov
push
andl
sahf
movsb
jmp
lahf
jne
popa
idivl
add
fidivs
jae
dec
cmp
add
cmp
outsl
int
mov
sub
push
aad
cmpb
nop
mov
flds
add
inc
pop
dec
push
push
and
push
jae
testb
xor
add
xchg
addr16
movsb
xor
add
loopne
jns
loopne
push
cmp
rcrl
lret
imul
test
sub
add
dec
daa
jge
mov
adc
mov
out
lahf
add
movsb
pop
jl
jo
sbb
add
inc
into
cltd
add
push
lods
add
cmp
subb
add
jmp
sbb
or
cmc
pop
ss
outsb
jns
cmp
enter
xor
pusha
sub
arpl
xchg
mov
bound
stos
xor
std
xchg
out
aam
out
xchg
and
dec
fcmovb
sbb
fwait
sub
add
inc
mov
movaps
cmpsb
add
loope
cld
sub
sbb
and
dec
pop
pushf
pop
inc
orb
add
sub
pop
mov
out
sqrtps
xlat
or
add
sub
add
adc
shll
jo
add
mov
pop
jl
add
pop
adcb
fsubrl
jno
enter
lret
jecxz
sbb
push
fsub
leave
jle
add
shr
add
sbb
add
lea
punpcklbw
pop
mov
push
stc
xor
dec
add
test
mov
outsl
add
aaa
adc
dec
lcall
mov
dec
loopne
xchg
std
cmpsb
mov
xchg
into
out
shlb
stos
shrl
cmp
inc
mov
paddq
xor
dec
xor
add
mov
repz
and
cmp
or
jmp
lock
add
fs
jbe
mov
aaa
fsubr
hlt
cmpsb
cmp
pop
mov
pop
dec
in
add
dec
xchg
push
mov
xor
cmp
adc
jae
add
xor
shll
push
pusha
mov
add
lock
mov
mov
fildl
lret
outsl
xchg
jg
icebp
mov
ds
mov
pop
dec
push
clc
imul
dec
in
fcmovb
jbe
add
mov
or
cmp
scas
test
in
aam
sti
add
mov
mov
add
jae
out
imulb
pop
xorb
pop
inc
pop
mov
xor
ljmp
je
push
push
call
dec
add
fsubrs
cmp
xor
push
jbe
cmp
test
push
stos
cld
jns
cmp
loopne
mov
lahf
add
push
or
addb
mov
iret
sub
mov
add
mov
fcompl
insl
sbb
mov
cmp
in
loop
xchg
call
rcr
jne
ret
ds
mov
cmpsl
leave
dec
out
popf
add
rorl
xlat
loopne
and
inc
insb
nop
sub
add
out
clc
ret
test
mov
add
mov
xor
in
or
sub
mov
cltd
add
mov
add
add
repz
test
add
push
add
mov
fldl
jno
in
dec
fidivrs
mov
pop
ffreep
sarb
cmp
cmp
mov
sub
lock
in
mov
add
push
push
fldl
pop
push
and
inc
inc
cmp
pop
xor
cmp
add
sbb
xor
popa
or
sub
iret
pusha
pop
dec
bound
add
lret
je
imul
mov
xor
add
je
adc
jbe
inc
insl
loopne
mov
cmp
mov
bound
repnz
inc
xor
add
ss
add
sub
ret
sub
incl
fdiv
pusha
mov
cmp
add
fst
mov
sahf
lcall
and
or
inc
sbb
xor
add
add
mov
or
mov
jno
push
adc
insb
add
xchg
lahf
inc
sub
xchg
dec
fstps
data16
cltd
pop
ret
in
movaps
popa
in
rorb
add
addb
push
push
nop
add
cltd
fmull
dec
xor
pop
mov
adc
add
push
pop
sbb
jno
lea
push
mulb
push
cmc
out
jbe
ror
sub
add
dec
das
mov
add
dec
out
lret
sahf
scas
add
sub
in
js
add
push
fnstcw
jg
mov
shl
xor
mov
andb
mov
sub
xchg
pusha
inc
dec
and
and
fisubl
add
out
pop
inc
mov
add
iret
sub
add
je
push
adc
inc
ds
inc
add
pusha
pop
push
leave
add
adc
addb
cli
add
pop
fcmovne
sti
ljmp
out
stos
jno
mov
fildl
sbb
inc
sbb
cli
jl
and
pusha
stos
lahf
mov
push
mov
add
repnz
xor
add
add
inc
sti
pop
xor
cmp
sub
xchg
ss
add
xchg
push
insl
push
push
add
mov
push
mov
jne
xor
adc
push
insl
jno
pop
mov
jmp
pushf
push
test
jge
std
add
cli
push
sbb
sub
mov
push
aas
push
inc
add
xlat
das
lcall
outsb
jnp
fnstcw
xor
shl
xor
repz
test
push
mov
add
outsb
inc
int
iret
push
mov
pop
adc
out
add
ds
clc
fmull
sbb
push
mov
lock
cmp
mov
fwait
push
xor
sbb
cmp
xor
leave
stc
xor
shlb
neg
loop
je
pop
adc
inc
sub
adc
shll
leave
sti
add
and
dec
dec
test
cmp
mov
mov
mov
inc
and
cmp
out
adc
xor
push
ljmp
add
jmp
iret
rcl
call
loope
ljmp
ds
inc
mov
add
push
stos
lods
arpl
mov
add
adc
ret
das
xor
push
lea
cmpsl
gs
mov
hlt
out
add
andb
mov
xchg
arpl
les
lret
repnz
add
inc
cs
ds
cs
or
add
xchg
jge
add
dec
cmpsl
ret
call
add
std
jg
rcrb
cwtl
loopne
mov
xchg
jmp
jb
add
jae
inc
out
mov
add
push
and
cmp
stc
pusha
iret
inc
add
push
faddl
repz
or
sbb
add
push
stc
aam
push
add
test
inc
fadds
jge
pop
into
jmp
cmc
adcl
in
mov
xor
or
movsl
push
mov
push
addr16
pop
inc
or
sbb
mov
ret
mov
ja
xlat
inc
ret
lret
mov
outsl
adc
sub
lret
add
and
mov
mov
or
mov
cld
pop
mov
add
xor
sbb
and
jnp
and
int
add
xor
sahf
cmpsl
js
pop
sub
int3
shll
pop
add
cli
sbb
push
cmp
pop
add
popa
mov
fbld
xlat
and
and
mov
add
sub
lret
dec
cld
jmp
iret
lock
or
jmp
mov
mov
out
sti
cmovge
adc
pop
call
insb
add
inc
cmp
shll
cmp
mov
add
addl
jo
add
daa
inc
fdivrl
pushf
or
repnz
add
jge
xchg
mov
sub
lods
mov
clc
inc
dec
sub
test
push
mov
or
inc
dec
das
mov
mov
jg
jmp
into
mov
xchg
push
xchg
scas
add
push
jp
push
push
push
adc
dec
jle
movsb
ss
daa
add
lock
pop
cmp
inc
mov
cs
es
mov
popf
jp
add
loope
sbb
add
dec
pushf
pop
adcl
rcll
dec
movsl
mov
adc
mov
push
sti
xchg
pop
mov
jno
loope
loopne
rolb
cmpsb
pop
xchg
jp
in
cltd
bnd
scas
xchg
incl
inc
gs
mov
movb
cmp
in
daa
mov
nop
outsb
movsl
xor
sub
xchg
push
push
and
adc
mov
js
fisubrs
and
ja
push
adc
and
and
jae
bound
aas
or
jno
dec
inc
jl
lret
call
out
adc
push
mov
insb
or
shrl
mov
xchg
xor
cmp
je
test
mov
js
push
repz
pop
inc
insl
mov
lcall
add
push
pushf
mov
jns
xlat
ret
fwait
fwait
mov
lods
imul
xchg
test
fldcw
pushf
mov
decl
adc
push
adc
adc
mov
mov
inc
lods
pop
lcall
outsb
mov
sarb
call
aam
fdivl
test
jnp
bound
cmp
outsb
out
sbb
lea
xchg
dec
xor
mov
ss
lea
lods
inc
pushf
mov
pop
adc
addr16
es
dec
push
mov
push
test
inc
jo
dec
jle
adc
jle
push
jo
mov
jo
xchg
jl
inc
movsl
and
jl
fwait
clc
loopne
jo
and
adc
jno
sub
inc
push
cs
sub
test
cmp
inc
jno
out
inc
jge
inc
jno
loopne
sbb
pop
jb
and
js
pop
test
push
jb
and
fcoml
cmp
bound
sub
mov
jno
add
filds
push
sti
jmp
push
mov
or
stc
movb
mov
clc
cmp
sub
sahf
add
lea
jg
and
loop
jae
and
and
mov
jg
popl
sub
cmpsb
les
es
fldt
fildl
adc
jae
sti
xchg
xor
je
xor
sbb
xor
je
bound
sbb
leave
test
stos
inc
mov
adc
cmp
add
ljmp
and
leave
ja
push
or
lret
adc
sti
leave
jg
push
push
mov
jne
cmp
add
test
jne
jle
pop
xchg
adc
and
pop
cmp
clc
adc
jne
sbb
les
jbe
mov
push
dec
or
jbe
mov
jbe
adc
adcb
jbe
fadds
test
inc
orl
ja
and
or
pop
arpl
adc
repz
pushf
sbb
stos
ja
repnz
xchg
sub
fwait
jo
mov
cmp
mov
add
lods
aam
add
mov
ds
adc
js
and
aaa
call
mov
add
inc
mov
mov
xchg
scas
pop
adc
or
xor
pusha
je
jno
mov
aam
add
mov
dec
js
jns
adc
jo
adc
push
jecxz
fsubrl
mov
adc
sbb
lcall
push
adc
sbb
xlat
lahf
sbb
and
jns
lock
int3
repz
fwait
xchg
or
xchg
push
jne
mov
leave
pop
jns
lock
pop
jp
aas
es
test
cmp
test
sti
adc
or
xchg
ret
cmp
in
and
jp
les
pop
mov
xchg
lock
nop
cwtl
leave
pop
jp
lock
rolb
xor
jnp
pop
testl
test
jbe
xor
nop
bnd
jo
and
mov
loop
les
jp
cmp
call
or
mov
nopl
test
in
or
in
into
cmpsb
rcl
sbb
mov
sub
mov
lahf
pop
add
mov
mov
into
or
mov
adc
mov
ret
inc
call
hlt
and
arpl
pop
loopne
xchg
jp
jo
mov
cwtl
jge
into
clc
addr16
pop
mov
sbb
test
adc
aas
mov
adc
mov
rorl
std
mov
and
jo
mov
ret
and
in
xor
inc
mov
cmp
adc
push
sub
jp
xor
sbb
dec
jg
pusha
jg
and
and
les
or
mov
movsl
dec
adc
inc
mov
shlb
inc
in
fisttpl
adc
mov
clc
jg
roll
or
inc
add
mov
cmp
icebp
pop
sbbb
cmp
pop
in
and
and
int3
mov
lock
jns
cltd
fwait
mov
and
sahf
xchg
scas
or
repnz
roll
ss
test
addl
adcl
push
push
mov
in
fdivrs
vpshuflw
ret
idiv
xchg
nop
test
adc
mov
inc
add
aam
mov
js
orb
xchg
and
mov
and
cmpsb
loopne
mov
ret
cmp
addb
sub
and
sub
mov
repz
fwait
ja
jge
addl
push
xchg
pop
and
scas
subl
mov
or
mov
push
adc
test
lea
int
or
ja
cmp
lret
out
nop
xchg
insb
mov
pushf
inc
test
mov
xchg
test
int
ss
adc
test
and
test
cmp
ret
pop
or
imul
jbe
nop
pop
enter
sbb
mov
lock
cmp
cmp
popa
ret
and
xor
mov
orl
arpl
mov
mov
cld
sub
inc
xchg
test
xchg
inc
inc
xchg
iret
push
mov
cmc
xchg
mov
test
xchg
sub
sub
xchg
pop
xchg
mov
nop
popa
call
icebp
push
xchg
or
test
push
iret
xchg
in
xchg
inc
xchg
loope
xchg
or
inc
mov
sub
adc
inc
push
sub
xchg
jno
mov
test
xor
xchg
or
pop
xor
inc
sub
mov
fisttpl
xchg
jae
pop
int3
cs
xor
xor
xchg
adc
xchg
and
adc
pop
mov
cli
mov
mov
cmp
inc
mov
adc
mov
mov
test
xchg
sub
daa
mov
data16
pop
es
xchg
cli
movsb
nop
popa
call
icebp
sbb
mov
xchg
push
leave
mov
out
mov
fdivrl
adc
loope
xchg
or
inc
mov
and
loope
xchg
or
sub
xchg
jno
mov
mov
or
icebp
adc
movsb
sbb
adc
loop
rclb
mov
das
int3
pop
jl
add
mov
loope
mov
push
iret
lret
push
sub
daa
inc
cwtl
cmp
ret
setnp
and
mov
adc
and
cltd
add
dec
mov
lock
adc
sub
inc
cwtl
test
mov
sub
iret
cmp
adc
sub
scas
sbb
and
mov
lea
mov
lea
test
sub
daa
inc
cwtl
imul
or
mov
in
adc
iret
loop
out
cwtl
adc
cwtl
les
mov
testl
add
lock
inc
cwtl
adc
clc
jo
sbb
dec
incb
fldenv
je
insb
inc
xor
xchg
inc
mov
xor
dec
fdivrs
enter
stc
xor
roll
es
jae
ss
test
sbb
add
mov
push
in
ficomps
repz
push
rcrl
stc
es
out
popl
ret
adc
sbb
cmp
inc
nop
out
push
mov
shrb
loope
fstps
push
loope
mov
jns
or
lea
lret
fmuls
xchg
ds
dec
xchg
mov
push
mov
pop
xchg
aam
int3
push
std
cld
xlat
ljmp
ds
adc
xlat
adc
sbb
repz
or
mov
inc
int
mov
les
roll
cmpsb
lods
pop
push
bound
ss
test
xchg
xchg
or
mov
popf
popf
cli
loope
fidivl
push
int
pop
adc
xchg
stos
adc
xchg
mov
and
dec
xchg
sbb
out
sub
inc
xchg
les
mov
call
shll
popf
or
push
repz
xchg
jo
loopne
sbb
mov
aaa
xchg
icebp
dec
pop
sbb
out
fstl
pop
in
dec
sub
xchg
pop
popf
mov
stos
adc
push
sub
inc
mov
xlat
movsl
dec
sbb
sub
xchg
add
std
dec
es
pop
cmpsl
sub
pop
jno
xchg
push
ds
push
xor
mov
insb
fs
mov
jns
xchg
les
pushf
mov
mov
repz
lods
out
in
and
dec
scas
mov
xchg
fisttpl
call
fisubs
insb
xchg
addr16
pop
clc
mov
jo
mov
and
sbb
ficoms
push
int3
sbb
repnz
fisttpl
xchg
aaa
or
xchg
push
adc
mov
fldenv
fcoms
xchg
cmp
mov
sbb
shlb
push
fidivl
mov
jns
or
lea
mov
test
mov
test
std
push
mov
sbb
adc
inc
cmp
pop
call
xor
out
lahf
js
aam
xor
repz
out
xor
inc
into
mov
fwait
mov
cli
cwtl
xor
cli
adc
mov
cld
sub
inc
movsb
test
cmp
inc
movsb
ret
lds
enter
inc
cltd
test
movsb
sub
les
mov
icebp
cmpsb
test
movsb
inc
sbb
mov
lcall
negl
mov
scas
inc
movsb
loope
movsb
or
movsl
xor
shl
sbb
and
inc
movsb
jp
fwait
loope
fwait
or
dec
mov
inc
fsubrl
test
dec
fwait
push
popa
test
and
pop
or
test
mov
mov
sub
sbb
sub
cmp
fistpl
cmp
les
pushf
jnp
jne
push
push
xchg
cmp
jne
sbb
mov
xchg
test
loop
pushf
xor
sub
das
adc
lods
sbb
test
cmp
inc
test
adc
movl
scas
mov
cwtl
das
cmpsl
mov
mov
test
loop
sbb
cmpsb
add
nop
push
sbb
insb
test
sub
enter
xchg
in
in
mov
jmp
aad
sub
or
xor
or
lret
mov
and
lock
adc
addl
cmc
sarb
push
mov
subl
sahf
pushf
sahf
daa
aam
sbb
mov
add
jb
and
sbb
test
mov
xor
decl
popf
or
add
xor
cmp
ja
pop
xlat
fldt
add
cmp
jae
pushl
mov
dec
nop
fcoml
add
test
push
jmp
movl
xchg
test
ds
or
ljmp
dec
jl
pushl
push
push
test
sub
in
mov
repz
adc
es
xlat
inc
call
pop
loop
mov
mov
xchg
or
mov
popf
stc
loope
fnstenv
call
jae
inc
cmc
mov
aaa
or
push
and
dec
mov
push
and
bound
scas
sbb
and
ret
pop
or
stos
gs
xor
xchg
fistps
sbb
sub
jno
lods
adc
mov
lahf
enter
scas
adc
dec
les
inc
insb
subl
pop
inc
inc
insl
scas
sbb
mov
push
push
fnsave
dec
push
into
inc
push
adc
adcb
add
cmp
mov
jl
clc
sub
mov
insl
inc
mov
loop
mov
movsb
lods
inc
cmpsl
push
mov
test
mov
jl
xchg
icebp
sub
pop
mov
add
clc
jecxz
mov
inc
push
xor
js
sahf
movsl
jle
ds
dec
sub
push
popf
xchg
shlb
push
add
call
sbb
inc
add
es
movb
bound
mov
loopne
adc
movsb
popa
int3
adc
out
add
fucomp
dec
imul
push
loop
fnstenv
sbb
test
push
cs
test
js
pushf
xor
inc
mov
xchg
sub
movsb
cmpsl
lcall
out
dec
ret
insb
call
sbb
dec
inc
dec
add
push
push
dec
push
fildl
pop
pushf
sub
movb
and
push
inc
mov
fildll
test
pop
dec
push
and
and
shlb
pop
mov
leave
std
push
xchg
dec
dec
and
loop
addr16
push
adcb
ja
xor
sub
dec
mov
int
inc
push
dec
dec
jmp
xor
dec
dec
push
jl
add
mov
inc
sub
pop
fwait
dec
lahf
adc
das
lds
add
pop
popf
cli
mov
adc
mov
fists
push
and
adc
cwtl
pop
insb
and
bound
clc
dec
add
dec
enter
or
or
mov
push
add
loop
add
adc
mov
and
in
lock
add
and
add
inc
mov
fdivl
mov
cmpl
aam
or
add
pop
sbb
adc
or
shl
out
aam
inc
cmpsl
je
subb
js
arpl
adc
and
dec
and
out
inc
enter
and
cmp
sbb
loopne
sbb
add
add
pop
add
shrb
adc
daa
adc
sub
lods
and
cs
or
inc
adc
das
or
or
cmp
test
cmp
mov
mov
fdivrs
sub
sub
cmp
addb
frstor
mov
jnp
xor
xor
mov
or
loop
mov
or
adc
cmp
push
arpl
sbb
and
or
lret
int3
push
enter
or
fcmovnu
fiaddl
fxch
loopne
data16
in
mov
clc
xor
sti
addl
popa
je
xor
jmp
es
scas
test
add
test
pop
lock
adc
pop
fs
push
jne
or
cld
sub
pop
jo
xor
or
loope
add
sub
sbb
ror
or
sbb
rcrb
mov
enter
mov
adc
add
adc
xchg
or
mov
adc
and
dec
xor
adc
pop
dec
pusha
xchg
push
orb
dec
mov
inc
mov
shlb
dec
loopne
add
lret
fs
add
mov
or
push
inc
bound
movsb
sbb
inc
push
and
pusha
jno
pop
sbb
mov
sub
adc
enter
pop
pop
les
inc
pop
and
test
add
js
cltd
orb
adc
cwtl
enter
test
mov
mov
shlb
dec
loopne
call
mov
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
or
inc
rcr
mov
adc
inc
in
fdivp
and
adc
movsb
pop
and
pop
dec
mov
je
movsb
pop
and
pop
dec
mov
je
xor
test
mov
subb
rclb
push
or
mov
adc
and
inc
call
xor
xor
dec
add
sbb
jne
and
iret
xchg
mov
and
call
into
mov
pop
str
or
or
adc
adc
adc
adc
sbb
sbb
add
sub
cmpsb
adc
and
push
lods
rclb
add
sub
push
out
mov
sbb
insl
mov
xor
ss
data16
xor
mov
push
movsb
mov
jbe
nop
mov
rclb
or
sub
sbb
mov
repnz
mov
dec
jno
repz
inc
mov
sbb
pop
in
insl
push
mov
hlt
movl
test
add
std
in
leave
add
fldcw
arpl
cmp
or
cmp
imul
jno
mov
cmp
aam
dec
std
test
or
insb
add
mov
mov
xor
filds
inc
iret
or
roll
stos
lods
xor
cmp
xlat
add
push
popa
sarb
and
les
add
shld
sub
add
or
and
jmp
outsl
das
adc
dec
push
sarl
inc
fdivl
jno
add
mov
adc
pxor
mov
push
movsl
add
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
fs
add
out
push
imul
add
sbb
xor
jo
hlt
repnz
in
xchg
push
inc
jnp
add
shl
or
flds
mov
push
jmp
add
cld
fistps
sub
rorl
pop
popa
mov
dec
into
sub
mov
aam
inc
movsl
fisttps
xchg
fadds
sti
hlt
push
shrl
add
fldcw
inc
add
pusha
fidivl
sub
add
pop
add
leave
jl
fnstsw
jno
push
inc
inc
add
adc
and
and
cmp
aam
mov
into
push
stc
ficomps
leave
fnstcw
sub
adc
mov
xlat
pop
pop
cmp
mov
add
and
mov
lcall
mov
je
inc
aad
scas
ja
popf
adc
adcl
jae
add
arpl
test
fs
ds
push
or
lock
push
in
pop
decl
xchg
daa
scas
add
mov
pop
cmp
lock
repnz
inc
push
imul
xorb
insb
sbb
loopne
outsb
jbe
aam
loopne
rorl
adc
dec
frstor
fistpll
mov
pop
aad
mov
call
jle
shll
cmp
fisttps
addr16
add
dec
ss
dec
fisubrl
or
imul
dec
add
pusha
jp
inc
ret
jbe
cmp
push
sbb
outsb
xor
imul
lret
sbb
shrb
ss
add
ja
int3
add
add
das
es
mov
mov
add
sub
mov
cmpsl
add
xlat
ret
shlb
sub
scas
ficomps
cld
add
pushf
mov
xchg
insl
add
add
push
jmp
addr16
jb
jo
add
adc
mov
mov
cmp
mov
or
mov
xchg
or
mov
fdivrl
fstpt
or
xchg
xchg
pusha
icebp
clc
mov
add
sbb
int
mov
mov
jae
add
mov
out
sarb
dec
cmp
pop
or
jns
add
clc
shl
imul
insb
push
js
or
xlat
push
addl
add
cmpsl
testl
inc
imul
dec
push
scas
faddl
pop
fldenv
filds
fdivs
push
sarb
jg
mov
jmp
sbb
mov
lret
xchg
mov
cmpsb
mov
ss
add
xlat
int
push
ficoms
fldenv
jp,pn
mov
add
les
sbb
xchg
add
outsl
sub
mov
mov
rcr
pop
out
add
add
dec
lea
xor
cmp
mov
mov
neg
add
fldl
inc
fcomp
add
loopne
sbb
or
adc
mov
sub
adc
aam
call
cld
shr
add
fcompl
hlt
and
xor
push
and
lret
idivl
and
jg
mov
jno
xchg
sub
mov
enter
inc
and
insb
mov
push
sub
cmp
enter
xor
loopne
add
and
or
in
ret
inc
mov
mov
int3
sbb
repz
or
sbb
jns
cmp
iret
imul
dec
lea
daa
js
fnop
test
cmp
sarl
add
mov
xchg
or
jns
adc
adc
dec
sub
mov
dec
inc
enter
mov
xor
int3
nop
adc
test
and
xor
and
mov
cwtl
jo
cmp
xor
je
sar
push
dec
repz
insb
cmpsb
andb
cbtw
jns
or
lahf
sbb
cltd
adc
sbb
pop
arpl
and
xor
sbb
lds
sub
stc
xchg
xchg
hlt
and
enter
test
push
mov
dec
int3
sbb
loopne
mov
and
cltd
cmp
jmp
test
sbb
rorb
xchg
and
cwtl
cltd
or
push
add
cmp
mov
add
jl
mov
pop
adc
pop
add
pop
roll
push
hlt
pop
sub
les
adc
adc
cmp
add
jl
inc
sbb
loop
sbb
adc
cmp
mov
in
dec
icebp
int3
push
add
mov
pop
adc
mov
jb
xor
and
dec
in
hlt
jo
adc
cmp
dec
pop
xchg
jb
jle
mov
rorb
xchg
cld
adc
push
and
inc
cs
mov
and
dec
adcb
mov
fcoml
ljmp
xchg
or
push
add
push
or
js
xchg
stos
and
and
dec
clc
lea
sbb
add
adc
bound
xchg
dec
mov
inc
int3
in
cld
adc
add
and
dec
inc
xchg
push
and
jbe
mov
dec
rolb
cld
lea
push
sbb
or
xor
inc
add
or
mov
or
int3
adc
and
inc
add
or
xchg
and
cs
cmp
adc
orb
movsb
and
loop
int
lea
or
xchg
or
and
push
sahf
and
push
add
enter
or
adc
sbb
es
ss
mov
data16
dec
mov
mov
repnz
add
dec
sub
inc
and
fs
nop
adc
test
ficoml
ljmp
and
and
cmp
pop
adc
dec
mov
mov
mulb
or
add
dec
xor
pop
push
adcb
and
dec
mov
inc
repnz
adc
inc
dec
push
movsb
movsb
insb
adc
mov
je
inc
jb
imul
push
jmp
cld
leave
iret
dec
pop
xchg
jbe
lods
das
test
xchg
sbb
sbb
daa
pop
ret
push
push
inc
subb
cmp
sbb
sbb
push
lret
xchg
imul
xacquire
push
mov
jns
push
or
outsb
arpl
jle
or
jg
xchg
push
imul
push
in
push
push
imul
jb
outsl
dec
jne
inc
lcall
ljmp
xor
jo
stos
or
imul
js
dec
mov
dec
movsl
loop
adc
fisttpll
jo
lods
jle
jnp
pushf
jae
ss
dec
ljmp
push
inc
adc
mov
and
enter
jmp
je
and
mov
or
pop
inc
adc
jae,pt
and
in
xor
dec
xchg
lods
jo
ds
lods
mov
ja,pt
popa
sbb
lods
lret
int3
sbb
cmp
popf
jge
jae
and
bound
or
imull
std
cmp
repnz
addr16
popf
dec
push
mov
push
inc
outsl
inc
dec
xchg
mov
dec
jge
je
dec
jae
sub
dec
dec
testl
jl
sub
cmpsb
outsb
shlb
push
out
and
mov
je
inc
adc
jae
daa
and
cltd
push
test
lds
fs
test
ret
stos
jb
inc
inc
insl
aaa
sahf
imul
cmc
outsl
loopne
ficomps
xchg
and
xchg
pop
jnp
inc
add
push
xchg
in
dec
cmp
jb
adc
loope
sahf
lods
jg
lods
dec
adc
imul
dec
cmpsl
push
test
cmp
scas
fsubrl
movb
jp
jns
push
push
and
sub
loop
aam
mov
rolb
outsb
xor
lret
mov
push
adc
adc
adc
fsts
jl
inc
mov
loop
xchg
push
sub
jbe
adc
jle
or
jo
mov
pop
repnz
inc
dec
inc
push
movsl
insb
mov
movsl
test
adc
lret
outsl
in
pop
inc
mov
scas
es
cs
fs
pop
lcall
lods
xlat
xchg
arpl
nop
or
add
std
inc
fsubrl
adc
push
xor
lret
cld
or
mov
push
outsl
dec
and
push
rorb
pop
pop
xchg
dec
xlat
sub
pop
push
in
push
dec
arpl
fisubrl
push
push
cmpsb
or
jns
jecxz
xchg
xchg
cs
insl
fsts
insl
out
das
mov
push
sbb
mov
xchg
or
pop
xchg
lods
mov
jp
fisubrs
or
stos
push
ja
divb
inc
xchg
sbb
xchg
sbbl
push
adc
pop
sbb
in
lcall
test
mov
mov
test
mov
jnp
pop
push
mov
and
and
outsl
rcl
push
lds
push
inc
mov
test
loope
push
push
outsl
js
xchg
add
fcmovnbe
je
fimull
test
adc
push
es
lret
lock
adc
inc
es
fwait
sbb
xor
in
push
addr16
push
push
test
cmpsb
dec
mov
imul
xchg
push
stos
sub
jmp
adc
inc
gs
lahf
lods
dec
jge
fmuls
xor
push
mov
pop
inc
sub
out
shlb
pop
rol
das
rorb
ficoml
lds
dec
cmp
push
imul
sub
mov
push
sub
test
and
dec
mov
pop
adc
sub
movsb
out
mov
or
and
inc
jns
cmp
jns
cmpsb
dec
mov
stos
and
inc
cmp
push
push
lods
sbbl
lret
les
cltd
cmp
outsl
mov
fwait
jo
xor
cmp
mov
into
jno
push
push
rol
scas
test
mov
push
xchg
ds
mull
push
and
addr16
add
jl
stos
add
sub
sub
or
pop
bound
adc
add
push
or
pop
and
add
adc
xor
in
sbb
sbb
pushf
push
pushf
pop
pushf
pop
pushf
pusha
pushf
fs
push
pushf
sbbb
mov
pushf
mov
pushf
rcrb
pushf
repnz
cli
xchg
xor
daa
adc
sbb
and
sub
xor
cmp
inc
daa
dec
daa
push
daa
pop
daa
bound
push
jb
sahf
daa
cmpsb
daa
scas
daa
mov
mov
daa
daa
fildll
xchg
daa
jo
ja
mov
test
jb
sbb
xor
or
nop
push
cmp
outsl
in
in
in
in
in
in
in
in
in
in
push
loop
cmp
ret
push
cmp
adc
es
xor
push
xchg
pusha
xchg
xchg
jae
jns
xchg
xchg
lcall
xchg
les
out
out
xchg
clc
nop
in
in
in
in
in
in
in
add
or
lahf
cmp
in
in
in
in
cmp
and
sub
cmp
inc
cmp
mov
ds
insb
dec
jb
fimuls
dec
hlt
dec
std
inc
inc
aas
dec
xchg
popa
xchg
xchg
into
xchg
clc
xchg
or
push
adc
jo
adc
cmp
inc
pushf
push
pushf
pop
xchg
arpl
jae
js
jle
xchg
pushf
mov
pushf
lock
testb
daa
xor
dec
xchg
adc
inc
push
jb
jb
pop
or
pop
inc
jb
pop
jb
jb
jb
jb
jb
jb
jb
sbb
xor
pop
scas
and
jbe
jl
test
pushf
mov
daa
daa
fwait
daa
mov
xor
dec
leave
ja
nop
leave
test
leave
fmul
cld
enter
lret
jb
xor
aaa
add
nop
or
and
xor
push
in
xchg
sbb
test
into
cmp
daa
push
daa
addr16
jle
xchg
es
cmp
repnz
push
aas
push
dec
and
stc
cmp
jle
lcall
cmp
dec
or
push
pushf
sahf
sysret
sbb
pushf
cmp
lods
cmp
addr16
jae
mov
nop
add
and
pop
in
in
test
enter
push
enter
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
cli
imul
les
xchg
ss
adc
daa
push
daa
pop
daa
bound
andl
lods
daa
shll
aaa
das
leave
push
leave
enter
repz
aas
lahf
dec
pushf
inc
sbbb
push
pushf
mov
xchg
xchg
daa
mov
iret
and
cmp
cmp
das
sbb
push
cmp
imul
stos
dec
mov
mov
jmp
cmp
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
nop
sub
jb
jb
jb
jb
sbb
cmp
pushf
arpl
dec
xor
dec
rorb
rorl
dec
cld
inc
or
xchg
xor
addr16
jae
adcb
xchg
mov
xchg
ficoml
repnz
cli
nop
add
or
adc
sbb
and
sub
xor
cmp
push
in
in
in
lcall
mov
leave
stos
leave
mov
mov
leave
ror
fcmove
loop
ljmp
aas
or
adc
sbb
and
sub
xor
cmp
lods
pushf
push
pushf
pop
pushf
bound
pushf
sbbb
dec
stos
dec
lret
push
adc
add
das
xor
dec
dec
dec
pop
sub
add
jo
mov
nop
xchg
cwtl
xchg
mov
imul
loopne
call
clc
mov
adc
pop
jns
cmp
inc
cmp
push
cmp
pusha
cmp
jo
js
cmpb
cmp
cmp
pop
pop
jb
jb
jb
jb
add
clc
mov
adc
sbb
cmp
inc
in
in
in
in
in
mov
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
out
hlt
push
or
sbb
dec
sub
inc
mov
dec
dec
dec
push
dec
push
movsb
pop
pop
rcrl
xchg
push
test
mov
mov
mov
leave
leave
enter
ror
in
add
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
insb
cmpb
cmp
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
jl
sbb
sbb
and
and
sub
sub
xor
xor
cmp
push
xor
js
jl
and
in
in
mov
pop
xchg
pushf
cmp
cmp
sub
insb
pushf
loopne
in
call
fildl
leave
sub
je
mov
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
push
cmpsb
ret
cmp
into
hlt
dec
clc
dec
cld
inc
or
sub
xor
decb
dec
inc
dec
inc
dec
dec
dec
dec
dec
push
dec
push
dec
fs
test
dec
nop
dec
xchg
dec
cwtl
dec
pushf
dec
mov
dec
lods
dec
mov
inc
call
in
hlt
in
in
in
cmp
adc
xor
cmp
inc
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
pop
and
cmp
cmp
cmp
jo
cmp
daa
and
inc
and
xchg
pop
xchg
pop
push
dec
pop
xor
insb
cmp
cmp
push
mov
enter
or
or
adc
adc
sbb
sbb
and
and
sub
cmp
pop
leave
pusha
leave
fs
push
leave
je
js
jl
or
leave
mov
mov
fs
in
in
in
in
in
lds
mov
sub
sub
test
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
cld
les
cmp
cmp
xor
xor
in
add
inc
dec
movsb
dec
dec
pusha
dec
orb
mov
dec
xchg
dec
cwtl
dec
pushf
dec
mov
sub
in
icebp
es
pop
cmp
popf
pop
int
cs
pop
inc
pushf
push
xchg
xor
daa
leave
daa
int
shll
aad
fldenv
frstor
loope
in
jmp
icebp
jb
jb
jb
sbb
xor
xchg
roll
lcall
in
in
in
in
in
cmp
and
and
sub
sub
xor
insl
cmp
cmp
cmp
cmp
jmp
test
jo
pop
adc
leave
aas
leave
leave
scas
leave
ror
add
leave
outsl
leave
mov
stos
leave
mov
enter
cmp
jb
push
mov
cwtl
mov
push
lock
dec
dec
dec
out
inc
push
inc
enter
push
jb
jb
jb
dec
lahf
mov
pop
ss
mov
int3
dec
aad
push
cltd
xchg
or
daa
loope
out
daa
mulb
push
cmp
leave
pop
leave
addr16
jne
mov
aad
scas
pmulhuw
in
in
in
mov
jns
xor
pushf
mov
cmp
mov
into
xchg
aad
fists
notb
push
in
in
in
in
in
in
in
in
mov
inc
or
in
in
in
in
mov
mov
les
nop
add
adc
in
xchg
push
sbb
pushf
ret
xchg
stc
xchg
mov
add
add
jp
xor
in
in
in
in
xchg
add
dec
cmp
pop
inc
cmp
push
add
cmovle
dec
inc
dec
push
dec
pop
dec
xchg
dec
mov
into
stos
and
sbb
data16
xchg
in
mov
fidivs
adc
xor
ret
jo
xchg
dec
daa
andb
push
fists
push
pushf
inc
pushf
arpl
xchg
lahf
enter
xchg
cmp
mov
ret
cmp
sub
xchg
xchg
jl
lds
pop
daa
pop
and
xchg
insb
xchg
jo
je
js
jl
or
mov
repz
mov
mov
leave
enter
ror
aam
fsubs
mov
or
adc
sbb
sbb
cmp
mov
sub
fs
in
in
in
in
in
in
mov
lods
mov
daa
shlb
daa
int3
daa
shlb
fsubs
fsubl
lret
adc
adc
jle
dec
pusha
sub
xor
cmp
cmp
into
inc
dec
pop
int3
pop
lret
dec
js
into
test
mov
nop
daa
cwtl
and
mov
lods
aam
pop
ror
daa
aam
fcoms
xchg
call
sub
dec
shlb
pop
jb
jb
dec
ja
sub
daa
cmpsl
and
xchg
rcll
lock
cli
xchg
add
dec
jb
pop
and
cmp
cmp
dec
cmp
cmp
xchg
xchg
cmp
iret
cmp
push
or
adc
sbb
dec
and
rcll
mov
stos
xchg
sub
bound
lock
in
in
in
in
in
in
in
in
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
push
daa
pop
xchg
push
jb
jp
andb
sub
ficomps
xchg
in
dec
out
leave
ror
fcmove
loop
ljmp
aaa
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
dec
pop
push
pop
push
inc
jb
jp
orb
xchg
dec
lcall
dec
mov
dec
rorb
dec
loop
ljmp
dec
mov
sarb
gs
nop
aam
shrl
cmp
and
es
inc
xchg
push
dec
repnz
xor
xor
sbb
xchg
xor
daa
jmp
xor
sbb
mov
mov
push
xchg
out
xchg
imul
es
mov
mov
dec
add
pushf
jo
sahf
xchg
les
dec
fbld
clc
leave
dec
add
mov
xchg
push
aam
ret
mov
xchg
js
xor
nop
pop
cmp
in
in
push
cld
jb
dec
pop
cmp
mov
inc
cli
cmp
shr
push
icebp
xorl
dec
pushf
dec
scas
push
cmovb
inc
call
mov
cmc
enter
cmp
cmp
pop
pop
and
rolb
pusha
lods
divps
xor
jb
jb
mov
leave
inc
js
es
xchg
sahf
dec
ds
dec
fisttps
dec
add
xor
cmp
dec
cmp
push
cmp
and
sbb
pushf
movsl
pushf
stos
pushf
scas
pushf
mov
fldt
popa
adc
push
cmp
xor
insb
in
in
in
in
in
in
cmp
imul
dec
cmpsl
outsb
jo
jnp
xchg
mov
daa
push
xchg
outsl
in
in
in
mov
sbb
pushf
icebp
mov
sbb
xor
push
andl
out
xchg
sti
clc
nop
jb
dec
push
or
aas
shll
fs
jnp
xchg
in
mov
push
xor
xchg
or
xchg
lock
and
je
dec
push
pushfw
dec
lret
xchg
ret
lock
xchg
sahf
jb
inc
je
in
repnz
in
mov
sbb
xchg
daa
xchg
daa
fwait
and
aad
add
xchg
insl
xchg
je
jle
je
and
stos
in
mov
jb
jb
pop
or
pop
in
mov
pop
iret
aas
call
lock
xchg
fcoms
enter
cs
lock
sahf
scas
sbb
xchg
mov
stos
enter
in
or
nop
cmp
inc
leave
push
js
cmp
jp
pushf
scas
pushf
xchg
daa
dec
sub
dec
push
shrl
adc
nop
call
and
xchg
cmp
imul
xchg
and
xchg
jbe
mov
mov
pop
test
push
nop
rcrl
cmp
jb
jb
sbb
cmp
mov
dec
cs
dec
or
or
and
lret
xchg
dec
movsb
daa
shl
daa
cmp
leave
sti
leave
sub
jl
pop
imul
mov
xchg
loop
out
ljmp
xchg
cli
xchg
incb
sbb
xor
dec
or
dec
adc
dec
sbb
dec
and
dec
sub
adc
leave
ss
cmp
ds
inc
leave
inc
leave
dec
leave
dec
leave
push
leave
push
insb
scas
and
ret
pushf
push
outsb
pushf
jb
jbe
js
xchg
test
lods
jl
mov
xchg
sub
push
sahf
pop
orb
test
mov
mov
lods
mov
sub
nop
ficomps
dec
out
xchg
out
push
xchg
adc
mov
lcall
push
sahf
adc
mov
push
xchg
test
cs
cmpsb
sub
test
pop
stos
dec
inc
ret
push
scas
adc
mov
data16
and
leave
jp
jle
or
sub
mov
dec
xchg
dec
xchg
dec
lcall
stos
push
into
adc
test
ret
lret
rcl
lods
fmuls
fisubs
loop
shr
daa
out
daa
repnz
loopne
xchg
rcrb
pushf
or
pushf
sbb
pushf
sub
divb
jb
jb
dec
dec
ret
push
push
xchg
push
xchg
pop
push
or
or
outsb
xchg
jb
movsb
jp
jle
or
leave
mov
mov
xchg
leave
xchg
leave
lcall
leave
stos
xor
mov
mov
mov
lcall
dec
dec
fimull
dec
loop
out
lcall
jb
dec
incb
xchg
push
xchg
adc
push
jb
jb
jb
dec
cs
jb
ss
pop
inc
dec
dec
dec
dec
dec
push
dec
push
dec
pop
dec
pop
dec
bound
dec
push
outsb
dec
jb
js
leave
jle
or
sub
test
dec
lcall
dec
stos
loope
mov
mov
mov
leave
fs
in
sahf
scas
sbb
xchg
xor
push
cmp
push
inc
sub
cmp
cmp
push
cli
mov
jo
sbb
es
xchg
dec
xchg
push
daa
insb
daa
jno
jbe
dec
mov
out
mov
and
cmp
cmp
aas
dec
das
fs
nop
daa
mov
out
hlt
xchg
inc
and
test
xchg
or
movsb
inc
xor
jbe
dec
cs
outsl
pushf
sbbl
pop
ljmp
mov
xchg
mov
add
and
insb
in
in
xchg
ss
jb
dec
fldl
xchg
or
jb
dec
je
xchg
mov
sbb
pushf
lods
xchg
mov
cmp
das
jnp
incb
mov
and
insb
pop
jg
add
or
and
aaa
or
sbb
sub
cmp
push
jne
addl
lock
xchg
xor
pushf
and
xchg
xor
sahf
jbe
movsl
in
in
rolb
dec
fiaddl
cmp
xchg
cmp
mov
mov
jmp
cmc
in
in
pop
cmp
cmp
cmp
jle
icebp
in
in
and
cmp
xchg
xchg
daa
mov
lods
es
sub
aaa
dec
inc
dec
push
pop
add
jo
xor
inc
shlb
pusha
xchg
jge
mov
adc
leave
adc
mov
cmp
sbb
sub
xor
scas
xchg
ret
mov
in
cmp
pop
and
or
daa
pushf
inc
xchg
pop
dec
cld
outsb
dec
mov
fadd
daa
out
mulb
test
cmp
cs
lcall
leave
in
in
and
inc
leave
sbb
mov
xor
pushf
pusha
pushf
imul
mov
inc
jmp
and
sbbb
push
and
pop
mov
out
repz
push
adc
sub
popa
sub
xchg
or
xchg
loope
mov
sub
lock
pop
in
in
sahf
shlb
xor
pop
xchg
pop
xchg
jecxz
call
hlt
push
or
pop
dec
aas
dec
dec
loope
imul
cmp
and
dec
mov
lcall
dec
jp
jb
dec
test
xchg
pusha
jb
cmp
cmc
enter
pop
pop
mov
add
or
movsl
push
and
mov
dec
jbe
pop
outsb
push
jbe
je
movsl
push
movsb
shlb
jmp
enter
pop
dec
sysenter
dec
and
add
sub
cwtl
xchg
mov
pop
xor
push
jb
dec
pop
divl
inc
jb
jb
dec
pop
ret
testb
leave
mov
cmp
cmp
daa
testl
cs
cmp
aas
leave
dec
leave
push
leave
popa
leave
imul
mov
pop
das
mov
mov
ss
or
pop
loope
cmp
dec
leave
push
cmp
test
fmul
leave
or
out
adc
sbb
xchg
xor
pushf
mov
shlb
fmulp
call
fadds
dec
or
rcr
jb
pop
mov
loop
dec
roll
ss
jb
jb
jb
jb
jb
pop
lds
call
push
insl
rcll
jl
pop
sbb
xchg
jmp
mov
leave
lret
cmp
push
add
inc
pop
xor
dec
push
push
cmp
cmc
xchg
adcl
jo
dec
mov
or
mov
movsb
mov
sbb
cs
mov
xchg
jo
dec
flds
xor
and
jb
jb
dec
mov
out
add
xchg
andl
add
bswap
sbb
cmp
lcall
inc
nop
sbb
dec
push
and
dec
jnp
xchg
mov
daa
pop
out
ss
push
and
mov
lods
mov
in
icebp
and
xor
leave
aaa
leave
inc
fs
insl
in
in
lcall
dec
or
jmp
sbb
daa
jb
push
das
mov
popf
test
clc
dec
jb
adc
push
loope
jo
fucom
icebp
mov
xchg
in
mov
xchg
leave
mov
leave
jecxz
xorl
jbe
mov
cmp
mov
push
test
xchg
outsl
xorl
lea
aam
xchg
in
mov
inc
inc
sarl
push
pop
push
cmp
cmpsl
in
outsb
cs
add
ret
xlat
and
sub
inc
orb
loope
sahf
pop
sbb
fwait
dec
scas
fcoms
cmc
adc
ds
push
jb
jb
dec
sbb
mov
mov
in
xchg
test
xor
insl
mov
lcall
sarl
shlb
mov
insb
xchg
dec
sbb
xchg
hlt
mov
sbb
xchg
andb
ljmp
cmpsl
leave
in
and
xor
clc
inc
fs
test
dec
out
mov
stos
daa
lock
cmp
ret
jl
or
push
pop
mov
sbb
test
cmp
sub
pop
gs
daa
jnp
push
daa
icebp
and
clc
fs
jns
push
inc
or
xchg
pop
xchg
add
push
cli
mov
dec
dec
incl
cmp
push
ds
xchg
test
test
daa
add
xchg
cmp
jae
jo
cltd
pushf
lods
pushf
mov
mov
pop
call
xchg
gs
mov
pop
inc
pop
sbbb
pop
and
clc
daa
xor
rorb
stos
inc
fsubrl
leave
cmp
mov
mov
lcall
push
in
add
in
or
sub
add
pop
lods
ss
daa
mov
mov
xor
push
movsb
adc
imul
add
sbb
push
pop
scas
or
cmc
mov
push
lret
pushf
and
pusha
nop
lock
cmp
insl
aam
sbb
xchg
mov
sbb
pop
daa
cmpsb
and
rorl
in
xchg
pop
pop
or
ret
jmp
out
fdivr
jbe
push
cmp
pushf
jp
adcl
fdiv
sbb
in
call
cmp
xchg
dec
test
inc
or
fdivs
sbb
aas
inc
pushf
lea
popf
dec
mov
inc
nop
or
jnp
push
cmp
ror
enter
in
xor
xor
jmp
hlt
enter
inc
jb
jb
jb
jb
dec
pop
cmpb
out
cmp
daa
add
fadd
es
add
in
in
xchg
inc
pop
xchg
push
mov
rolb
loop
mov
mov
cmpsb
daa
rcrb
sbbl
outsl
and
xchg
std
xchg
adc
sbb
pushf
pop
mov
mov
push
aad
fiadds
xor
mov
jb
dec
inc
vcmpps
inc
cmp
sarb
add
xchg
xor
xchg
add
pop
push
data16
xchg
mov
subb
and
or
pmulhw
push
pop
in
in
popf
test
mov
xchg
cmp
cmp
pushf
pop
pushf
jns
lds
pop
es
push
pushf
pop
pushf
imul
mov
mov
mov
mov
test
cmp
cmp
cmp
cmp
cmp
jno
cld
jb
jb
jb
pop
loopne
shlb
xor
dec
jb
jb
jb
jb
sbb
xor
pushf
cmp
xchg
cld
jle
adc
cli
or
test
adc
cmp
mov
xor
mov
lds
pop
stos
dec
stc
jle
in
call
je
popa
daa
xor
mov
or
ljmp
scas
inc
cli
loopne
sti
outsb
push
add
dec
push
daa
js
daa
sahf
daa
mov
cmp
push
fcmovbe
dec
and
mov
or
loopne
xor
out
shlb
pop
addb
sbbl
test
mov
mov
sbb
xchg
jecxz
mov
rcrl
or
push
jecxz
cmp
inc
cmp
pop
bound
mov
in
in
mov
and
daa
and
mov
lahf
add
loop
pop
mov
gs
in
xchg
cmp
or
daa
sti
and
leave
inc
leave
pop
leave
jns
js
xchg
jb,pt
jb
jb
loopne
nop
cmp
js
cmp
cmp
sub
dec
cmpb
and
js
das
xchg
add
xchg
shr
mov
sbb
xor
mov
push
je
cmp
cmp
pop
ds
mov
inc
xchg
inc
push
pushf
mov
movsb
mov
jp
pop
dec
dec
mov
dec
int3
sub
sub
cmp
xor
inc
call
out
in
in
inc
jle
ret
out
or
adc
cld
pop
and
mov
mov
xchg
cmp
aam
js
dec
insb
push
call
xchg
push
and
dec
xchg
push
cli
pushf
dec
mov
lods
imul
enter
push
in
lcall
cmp
xor
cld
cmp
jo
pop
pop
orl
push
pop
je
push
jl
push
push
test
pop
mov
pop
sub
insb
mov
mov
fs
mov
push
or
inc
in
call
jbe
sub
xor
cmp
fimuls
pop
pop
mov
and
sub
and
movsb
xchg
push
mov
sbb
and
aam
add
add
les
pop
push
mov
dec
xor
clc
cmp
jo
xor
sub
mov
jl
pushf
test
in
xchg
sbb
pushf
mov
lods
in
in
mov
sbb
pushf
sarb
fs
movsl
bound
sub
sub
leave
dec
insb
into
cmp
and
mov
push
push
xchg
cmpl
dec
test
stos
mov
mov
and
mov
shrb
xchg
cld
pop
lods
sbb
xchg
or
mov
push
pop
jb
dec
inc
or
sar
pop
push
or
pop
push
into
pop
pusha
adc
xchg
insb
fisubrs
repnz
loop
fcoms
pop
movsb
push
sbb
mov
inc
pop
enter
imul
inc
cmp
xor
sbb
imul
adc
cwtl
and
dec
mov
and
inc
jmp
mov
pop
clc
insb
inc
add
or
mov
adc
push
push
jl
sbb
push
aas
and
jo
enter
nop
repnz
call
push
dec
sbb
bound
adc
adc
push
inc
fsubrs
push
pop
jo
fsubrl
mov
and
mov
xchg
pushf
and
nop
xchg
jo
jo
outsb
inc
sub
or
loopne
fsts
sbb
adc
inc
orl
addl
xchg
mov
je
jne
jb
fs
pop
jne
pushf
imul
or
insl
jae
inc
sub
arpl
add
int3
enter
loopne
xchg
gs
push
or
mov
adc
pop
imul
cmp
and
pop
cltd
inc
jae
adc
cmpsb
dec
push
outsb
adc
or
jb
adc
lcall
dec
mov
inc
inc
cmpsb
mov
daa
or
xchg
add
push
cli
xor
popa
popa
xor
or
pushf
xor
push
adc
add
pop
push
xchg
push
sbb
gs
or
movsb
jle
or
or
aad
clc
sub
push
test
pushf
je
sbb
mov
int
test
scas
push
push
sbb
imul
dec
sub
fs
fadd
popf
cwtl
xchg
je
pop
push
adc
xchg
imul
je
popf
jo
test
push
outsl
sub
inc
xchg
push
imul
outsl
dec
jb,pt
adc
xor
mov
gs
adc
test
and
push
dec
sub
mov
xchg
call
xchg
push
pop
push
jo
dec
and
into
outsb
and
mov
jne
test
xor
dec
push
dec
insb
repnz
insb
dec
push
and
or
lods
mov
add
movsb
scas
int3
add
mov
adc
mov
andb
arpl
jae
xchg
jbe
mov
mov
scas
xor
popf
sub
sub
push
insl
mov
push
js
cmpsb
mov
or
sbb
xor
add
loop
call
and
mov
pushf
movsb
adc
aaa
fs
mov
dec
xchg
push
sub
dec
jp
xor
push
cmp
push
pop
arpl
cs
shlb
mov
sbb
dec
pop
fiaddl
rcll
pop
into
push
or
cli
inc
imul
ss
or
push
push
cmp
jns
je
push
mov
xchg
jbe
fsubs
aam
popf
hlt
ss
and
push
push
shlb
divb
sub
or
adc
movsb
push
arpl
xor
xor
lret
jmp
cmpsb
push
mov
cltd
push
bound
cmpsb
hlt
pop
push
scas
dec
sbb
cmpsb
push
icebp
dec
test
and
dec
xor
std
lret
jae
sbb
add
push
adc
jo
push
push
dec
inc
sbb
add
dec
lcall
mov
pop
inc
cmp
push
inc
and
adcb
dec
data16
sbb
adc
or
rcrb
mov
dec
into
pop
mov
mov
lretw
sub
sub
movsl
or
pop
in
jo
sub
jns
pop
in
and
adc
dec
fs
xchg
sub
negb
ljmp
or
inc
fsts
jne
out
adc
inc
jb
loopne
pushf
mov
sub
loopne
pushf
js
cltd
hlt
bound
les
xor
loopne
cmpsb
fmuls
arpl
push
inc
dec
adc
lret
rcrb
adc
das
dec
dec
outsl
inc
dec
sub
and
fs
inc
push
push
movsl
add
cmp
xorb
repz
inc
add
fwait
cmp
sbb
or
dec
cld
js
add
aad
cmp
xor
scas
ss
aam
ret
cmc
mov
inc
inc
push
jp
test
sub
xor
pop
inc
jecxz
pop
push
cwtl
imul
inc
outsl
outsb
sbb
sbb
jg
pop
popf
stos
pop
pop
push
push
dec
pop
pushw
mov
mov
lods
test
imul
inc
mov
cli
bound
cltd
je
dec
inc
cltd
jo
dec
sbb
gs
stos
push
xor
data16
push
push
and
popf
repz
jo
and
inc
push
lock
inc
sub
sbb
cmc
popa
dec
sbb
xchg
sbb
cs
push
pushw
popa
adc
mov
movl
sub
lock
xor
jp
pop
icebp
dec
xor
xchg
and
xchg
xor
lock
out
jge
mov
adc
inc
mov
rorb
sbb
arpl
push
insl
adc
cmc
imul
addr16
sbb
adc
and
jo
jge
fldenv
mov
xchg
xchg
and
dec
outsb
cmp
cmp
or
in
dec
xor
or
jb
mov
inc
cmpsl
ret
pop
mov
mov
aam
enter
pop
imul
inc
push
cltd
push
pop
push
push
and
sub
xchg
idivb
outsb
lds
cmp
lcall
or
add
add
hlt
pop
jmp
fucomp
mull
in
or
add
cmp
mov
inc
bswap
cmp
bt
bsf
bsf
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
lods
sarb
and
icebp
int3
cli
sub
bts
btc
bsf
btr
call
lcall
test
adc
bts
test
btr
cmp
shr
call
lcall
add
mov
or
movsbl
btc
test
bts
shr
call
lcall
add
cmp
mov
shl
mov
cmp
sub
xor
btr
call
lcall
push
rol
jecxz
test
add
adc
xor
and
call
lcall
mov
pop
and
add
and
cmp
cmp
test
add
add
call
lcall
out
xchg
push
add
bts
btr
cmp
and
adc
call
lcall
or
test
or
dec
xor
and
bt
bts
bswap
call
lcall
mov
cltd
cltd
cltd
pop
jg
sbb
push
inc
adc
ja
or
mov
jb
inc
scas
test
push
sbb
xchg
push
sbb
inc
jecxz
add
jns
addr16
adc
jnp
lret
lcall
push
jg
es
sbb
and
mov
xchg
es
xchg
and
mov
cmpb
sbb
cltd
ret
cmpb
push
dec
lret
sbb
lret
xchg
xor
ljmp
lcall
js
pop
lcall
jo
pop
lcall
lret
or
cltd
cltd
cltd
add
pop
popf
data16
xchg
or
adc
inc
sbb
xchg
and
jp
ljmp
xchg
xchg
and
xchg
and
sbb
mov
mov
xchg
and
sbb
adc
jns
pop
ja
lcall
jae
fstl
outsb
dec
lcall
ja
das
lcall
call
cmp
iret
into
push
lea
popf
sbb
lretw
cwtl
lcall
pop
mov
outsl
pop
lcallw
jae
lods
sbb
xchg
adc
xchg
and
mov
pop
adc
pop
movsl
mov
outsb
sarb
sbb
maxps
lcall
fs
sbb
pop
jns
daa
cwtl
cltd
cltd
cltd
pop
jg
sbb
push
inc
adc
ret
mov
sbb
sub
inc
lcall
icebp
addr16
sbb
sbb
cwtl
add
jns
addr16
adc
jnp
lret
ljmp
pop
pop
sbb
cmpsl
mov
lcall
jnp
push
imul
lcall
xor
jno
cltd
cltd
cltd
add
pop
popf
icebp
cltd
fstps
cltd
jmp
push
fstps
sbb
dec
sbb
gs
mov
jmp
addl
scas
pop
jbe
xchg
sub
cwtl
add
data16
xchg
or
adc
inc
sbb
call
mov
pop
sbb
lcall
mov
inc
sbb
daa
inc
mov
fwait
data16
stc
jno
cltd
cltd
cltd
cltd
cltd
data16
push
mov
sbb
and
pop
pop
sbb
jb
data16
pop
clc
jb
jae
mov
popf
mov
test
jb
sbb
test
sbb
adc
adc
cltd
cltd
cltd
cltd
jb
pop
or
clc
jb
cmpsl
sbb
adc
xchg
and
ss
add
cmp
push
test
dec
cmp
add
rcrb
cmp
sbb
shrl
mov
pop
lcall
mov
xchg
and
xchg
sbb
xchg
addr16
sbb
adc
sbb
cmpsl
daa
jge
sbb
xchg
sub
sbb
sahf
and
xchg
and
ljmp
cmp
cltd
add
pop
popf
icebp
imull
cltd
sbb
test
xchg
sub
rcrl
dec
in
shrb
and
lcall
leave
jno
cltd
cltd
cltd
add
pop
popf
icebp
adc
xchg
cltd
lcall
jg
push
lcall
imul
ljmp
dec
inc
xchg
and
addr16
dec
xchg
adc
data16
stc
jno
cltd
cltd
cltd
cltd
cltd
data16
push
mov
sbb
and
pop
pop
sbb
jb
data16
pop
clc
jb
jae
mov
popf
mov
test
jb
sbb
test
sbb
adc
adc
cltd
cltd
cltd
cltd
jb
pop
or
clc
jb
cmpsl
cwtl
mov
lcall
stc
xchg
and
xchg
cs
and
xchg
push
sbb
insl
adc
sbb
movsb
movsb
fstpl
aad
cwtl
cltd
cltd
cltd
add
pop
popf
icebp
cltd
cltd
cltd
cltd
outsl
dec
addr16
lcall
outsb
dec
xchg
push
sbb
mov
inc
jmp
mov
mov
and
lcall
push
pop
out
jp
cmp
cmp
push
pop
jne
lcall
pop
leave
mov
push
jb
int3
adc
xchg
adc
xchg
adc
mov
fwait
test
sbb
shr
popa
les
cltd
adc
mov
push
add
sbb
inc
sbb
das
mov
imul
test
pop
jb
lcall
imul
stc
jno
cltd
cltd
cltd
cltd
cltd
data16
push
mov
sbb
and
pop
pop
sbb
jb
data16
pop
clc
jb
jae
mov
popf
mov
test
jb
sbb
test
sbb
adc
adc
cltd
cltd
cltd
cltd
jb
pop
or
clc
jb
cmpsl
icebp
imull
cltd
lcall
dec
aad
xchg
and
jmp
add
jns
lcall
dec
int
lcall
outsl
dec
pop
jg
icebp
adc
xchg
cltd
xchg
and
and
addr16
sbb
bnd
outsb
pop
mov
lcall
push
xchg
cld
outsb
dec
cwtl
mov
lcall
cwtl
sbb
sbb
std
notl
mov
sbb
hlt
pop
lcall
sbb
adc
sbb
addr16
call
lcall
dec
cmp
xor
pop
jne
aaa
outsb
inc
jb
add
data16
stc
jno
cltd
cltd
cltd
cltd
cltd
data16
push
mov
sbb
and
pop
pop
sbb
jb
data16
pop
clc
jb
jae
mov
popf
mov
test
jb
sbb
test
sbb
adc
adc
cltd
cltd
cltd
cltd
jb
pop
or
clc
jb
cmpsl
jno
cltd
cltd
cltd
lcall
idiv
sbb
or
sbb
xchg
and
mov
popa
and
pop
mov
cltd
add
pop
popf
jo
cwtl
cltd
cltd
int3
adc
xchg
data16
xchg
jno
cltd
cltd
cltd
adc
xchg
test
test
sbb
shr
lods
loope
call
test
xchg
sbb
in
xchg
lcall
bound
in
xchg
fdivs
mov
xchg
cwtl
sbb
sbb
jb
mov
xchg
fwait
sbb
sbb
sbb
jb
les
cltd
stc
adc
mov
mov
sub
adc
cltd
dec
in
pushf
adc
jbe
dec
in
pushf
adc
shrl
pushf
adc
sbb
cltd
cltd
cltd
dec
in
pushf
adc
pop
cltd
dec
in
pushf
adc
pop
cltd
dec
in
pushf
adc
pop
cltd
dec
in
pushf
adc
pop
in
lahf
into
mov
adc
jb
and
dec
in
pushf
adc
pop
cltd
dec
in
pushf
adc
jae
jno
in
mov
cwtl
cltd
cltd
cltd
cltd
dec
in
pushf
adc
push
cltd
dec
in
pushf
adc
jae
adc
ja
cmp
data16
xchg
adc
cwtl
cltd
cltd
cltd
cltd
dec
in
pushf
adc
push
cltd
dec
in
pushf
adc
jae
cltd
in
cltd
ljmp
jmp
fmul
adc
pop
push
jo
data16
out
lcall
mov
push
jo
data16
jno
mov
dec
fwait
adc
addr16
push
jo
data16
fnstsw
test
pop
xchg
cltd
adc
call
xchg
and
xchg
and
mov
sbb
or
sbb
pop
xchg
and
adc
sbb
xchg
adc
pop
jl
ljmp
out
mov
aad
daa
dec
lcall
imul
jb
popa
lret
jnp
and
nop
cltd
addr16
lcall
mov
outsb
inc
xchg
and
mov
xchg
and
jmp
mov
inc
jno
cltd
cltd
cltd
add
pop
popf
cwtl
jno
jo
add
dec
fwait
lea
js
or
std
lcall
jp
push
sbb
outsl
jmp
cltd
cltd
add
pop
popf
pushf
xchg
cltd
cltd
sbb
ljmp
addr16
mov
sbb
ds
pop
jo
addr16
sbb
mov
cwtl
cltd
cltd
cltd
add
pop
popf
and
mov
outsb
inc
sbb
fisubs
scas
xchg
daa
dec
xchg
and
lcall
data16
xchg
and
cwtl
cltd
cltd
cltd
add
pop
popf
and
pop
iret
xchg
xchg
and
enter
and
sar
xchg
and
pop
jg
stc
sbb
dec
mov
cwtl
cltd
cltd
cltd
add
pop
popf
test
add
inc
xchg
and
xchg
inc
outsl
inc
mov
lcall
pop
xchg
and
xchg
es
outsl
pop
imul
sbb
fldenv
mov
outsb
pop
call
pop
les
dec
test
push
jmp
push
jno
cltd
cltd
cltd
add
pop
popf
shr
xor
push
fcmovu
push
jmp
sbb
cmpsb
call
jle
lcall
dec
and
jno
cltd
cltd
cltd
add
pop
popf
jb
adc
xor
dec
and
inc
sti
jmp
xor
inc
sub
daa
iret
dec
pop
inc
sub
test
dec
or
push
sti
and
into
iret
iret
iret
push
dec
or
dec
and
inc
repz
pop
jnp
stc
cmpb
sub
sub
add
cmovs
and
xor
scas
daa
jmp
iret
iret
iret
iret
xor
jmp
dec
dec
ja
iret
iret
int3
decb
or
xsavec
scas
and
and
jmp
and
iret
decb
and
dec
stos
xor
and
dec
stos
inc
out
and
add
inc
iret
push
stos
inc
lret
iret
iret
and
push
pop
xchg
scas
and
icebp
inc
inc
fwait
into
iret
iret
in
cmovg
outsl
test
pushf
add
dec
sub
pop
push
loop
jne
pusha
push
es
xor
jne
lea
dec
das
dec
cmpb
pop
cmp
jmp
rolb
into
push
cmp
bound
dec
xor
or
sahf
repz
sub
jne
lock
repz
or
test
push
sub
inc
shlb
sub
sarb
push
and
mov
daa
into
iret
iret
iret
push
dec
or
inc
sti
jmp
or
test
push
das
into
sarb
daa
icebp
xor
ret
inc
or
cmp
pop
insb
dec
aas
lea
data16
jmp
iret
iret
iret
iret
xor
jmp
dec
dec
ja
iret
iret
int3
decb
or
xsavec
scas
and
and
jmp
and
iret
decb
and
dec
stos
xor
and
dec
stos
inc
out
and
add
inc
iret
push
stos
inc
lret
iret
iret
and
push
pop
xchg
scas
and
icebp
inc
xchg
repz
aas
loop
mov
inc
dec
jae
shlb
test
xor
shlb
in
or
inc
shr
dec
and
test
push
dec
xchg
pop
and
inc
pop
cs
je
shlb
leave
dec
sbb
shlb
je
sarb
jae
push
das
jne
jne
dec
xor
fucomi
dec
or
shlb
and
cmp
js
jb
shlb
pop
dec
push
jmp
dec
es
inc
dec
aaa
iret
iret
iret
testb
mov
mov
mov
pop
dec
ss
cmp
jne
add
das
leave
cli
out
into
cmp
mov
shll
shlb
sarb
cmp
test
push
daa
clc
daa
into
iret
iret
iret
push
dec
or
dec
xor
rorb
iret
iret
dec
daa
sbb
imul
dec
das
dec
dec
add
dec
cmp
dec
pop
pushf
mov
inc
jne
mov
inc
sti
jmp
ud1
leave
ja
dec
cmpsl
clc
test
test
or
jne
mov
add
cmp
into
iret
iret
iret
push
dec
or
dec
and
inc
repz
daa
ljmp
shlb
dec
or
dec
aas
pop
pushf
or
pop
dec
pop
sahf
stos
out
shlb
and
xor
scas
daa
jmp
iret
iret
iret
iret
xor
jmp
dec
dec
ja
iret
iret
int3
decb
or
xsavec
scas
and
and
jmp
and
iret
decb
and
dec
stos
xor
and
dec
stos
inc
out
and
add
inc
iret
push
stos
inc
lret
iret
iret
and
push
pop
xchg
scas
and
icebp
inc
test
shlb
aaa
comiss
ja
push
rorl
dec
aaa
dec
pop
push
sub
jne
rol
into
iret
iret
iret
push
dec
or
int3
mov
test
jnp
dec
xor
test
rdtsc
ja
imul
shlb
int3
mov
test
sbb
mov
and
jae
or
dec
aas
enter
aaa
insl
in
into
push
cmp
rolb
and
ds
and
dec
sub
sbb
scas
jo
ss
in
test
add
dec
or
test
cmp
sahf
arpl
test
dec
pop
pop
shlb
sub
ja
daa
into
iret
iret
iret
push
dec
or
inc
sti
jmp
or
shlb
dec
xor
sar
test
dec
es
jae
shlb
test
xchg
or
or
je
cmp
test
test
dec
pop
addl
dec
aas
leave
xlat
xchg
jmp
or
shlb
cmp
shlb
in
dec
pshufw
xor
and
das
lahf
mov
daa
into
iret
iret
iret
push
dec
or
adc
xor
test
cld
or
shlb
test
test
test
cmpsl
iret
iret
push
jmp
int
dec
xor
adc
cmp
push
daa
rorb
out
dec
mov
cmp
test
jae
cmpsl
iret
iret
int
dec
add
test
dec
daa
sbb
test
pop
test
test
and
inc
sti
jmp
jne
mov
mov
jns
inc
add
jne
out
int3
sbb
dec
sub
imul
iret
lcall
lret
xor
shlb
dec
ds
jne
mov
cmp
mov
dec
and
dec
sbb
shlb
insb
das
dec
cmp
jno
push
xchg
shlb
test
jo
insl
mov
push
sub
test
inc
mov
shlb
test
push
shlb
dec
das
cltd
fwait
cltd
pop
cmp
test
daa
into
iret
iret
iret
push
dec
or
inc
jae
outsl
iret
iret
iret
xor
test
jne
push
xlat
rolb
daa
push
int3
repz
dec
or
mov
push
test
fmull
shrb
adc
and
or
cmc
jle
or
jne
mov
iret
push
dec
or
inc
cmp
dec
aaa
xor
test
test
test
inc
pop
dec
pcmpeqb
and
xor
scas
daa
jmp
iret
iret
iret
iret
xor
jmp
dec
dec
ja
iret
iret
int3
decb
or
xsavec
scas
and
and
jmp
and
iret
decb
and
dec
stos
xor
and
dec
stos
inc
out
and
add
inc
iret
push
stos
inc
lret
iret
iret
and
push
pop
xchg
scas
and
icebp
dec
and
iret
iret
test
sahf
and
cmp
lret
pop
shlb
daa
sbb
adc
dec
sbb
sub
sub
jnp
test
test
test
cmp
xchg
sbb
daa
into
iret
iret
iret
push
dec
or
inc
fsubrs
cmp
inc
out
ret
dec
sub
or
stc
aad
add
jo
test
cmp
inc
or
jo
test
cmp
xor
shlb
test
jae
test
das
mov
dec
sbb
iret
iret
dec
daa
ja
aas
xor
out
jl
in
shlb
dec
sbb
dec
pop
jno
cmp
insb
das
test
dec
cmp
pop
aad
jnp
test
sbb
add
jno
daa
into
iret
iret
iret
push
dec
or
dec
or
shlb
dec
pop
jle
mov
jle
jle
je
xor
test
jae
shlb
cmp
cmp
sarb
pop
cmp
shrb
aaa
cmc
cmp
lock
test
into
iret
iret
iret
push
dec
or
dec
ss
rorb
xor
test
iret
iret
iret
push
dec
or
dec
or
inc
ret
jmp
ret
iret
iret
iret
push
daa
sub
dec
or
and
xor
scas
daa
jmp
iret
iret
iret
iret
xor
jmp
dec
dec
ja
iret
iret
int3
decb
or
xsavec
scas
and
and
jmp
and
iret
decb
and
dec
stos
xor
and
dec
stos
inc
out
and
add
inc
iret
push
stos
inc
lret
iret
iret
and
push
pop
xchg
scas
and
icebp
dec
das
shlb
iret
iret
iret
push
dec
or
dec
aaa
int3
mov
ljmp
iret
iret
iret
push
dec
or
into
rcr
shlb
cmp
ljmp
xchg
sbb
jae
shlb
dec
daa
sub
jnp
sahf
xor
jmp
ret
jmp
or
test
test
test
je
jg
sarb
pop
aam
test
sub
sahf
xor
jmp
ret
jmp
or
test
cmp
gs
cmp
push
shlb
dec
daa
imul
das
lret
dec
or
dec
pop
jmp
bound
xor
in
or
aad
into
test
xchg
jo
xor
test
dec
cmp
or
orb
sbb
jne
adc
loope
test
scas
test
cmpsb
ja
call
repz
xlat
lea
push
push
pop
hlt
sbb
dec
ds
dec
dec
es
daa
into
iret
iret
iret
push
dec
or
into
daa
test
push
and
cmp
dec
push
in
cmp
dec
cmp
xchg
cmp
dec
test
daa
into
iret
iret
iret
push
dec
or
lret
iret
iret
dec
sub
sub
outsb
test
add
repz
test
dec
sbb
mov
xor
daa
into
iret
iret
iret
push
dec
or
jbe
lret
dec
xor
test
dec
add
pop
mov
sarb
outsl
dec
shrl
jne
test
into
iret
iret
iret
push
dec
or
jne
clc
loope
sbb
xor
dec
push
inc
aaa
test
cmp
icebp
ret
sub
into
iret
iret
iret
push
dec
or
ffreep
jne
inc
shlb
dec
sub
shlb
je
push
sub
test
les
into
iret
iret
iret
push
dec
or
dec
sbb
and
xor
sbb
mov
and
dec
xor
sub
daa
into
iret
iret
iret
push
dec
or
xchg
dec
xor
test
dec
sub
cmpsb
sahf
ffreep
jae
cld
xor
adc
sbb
dec
sub
push
dec
or
and
mov
imulb
es
fcomps
out
mov
cltd
mov
ds
mov
fnstenv
das
in
shl
data16
pop
fsubs
adc
mov
cwtl
ret
mov
push
loop
push
scas
fcoms
fldcw
mov
stos
push
in
scas
mov
test
push
loop
iret
mov
cmpsl
insl
cmp
pop
pop
cmpsl
mov
xchg
js
sbb
push
fcmovnu
loopne
pop
pop
pop
imul
rcrl
jae
pop
jl
mov
pop
imul
fstpt
js
pop
xchg
js
pop
ret
pop
pop
pop
pop
pop
mov
cltd
enter
pop
data16
push
pop
push
fsub
pop
pop
pop
mov
pop
pop
pop
ret
pop
rcrl
push
pop
test
pushf
movsb
rcrl
pop
ret
lock
push
pop
pop
pop
pop
pop
ret
pop
aad
push
fistpl
pop
ret
in
dec
push
pop
mov
pop
pop
pop
ret
pop
sub
insl
cmp
pop
pop
cmpsl
mov
xchg
js
sbb
push
fcmovnu
loopne
pop
pop
pop
imul
rcrl
jae
pop
jl
mov
pop
imul
fstpt
js
pop
xchg
js
pop
ret
pop
pop
pop
pop
pop
mov
cltd
enter
pop
data16
dec
pop
push
fsubrl
pushf
movsb
shll
add
lods
mov
pop
pop
pop
ret
pop
mov
pop
rcll
rcrl
pushf
movsb
rorl
xchg
mov
pop
pop
pop
ret
pop
and
mov
rcll
dec
aad
push
pop
mov
pop
pop
pop
ret
pop
mov
rcrl
pop
ret
hlt
dec
push
pop
rorl
pushf
pop
rcrl
sbb
fwait
cwtl
mov
ds
in
push
loop
movsl
loopne,pt
xchg
loopne
stos
or
fistpl
pop
cmpsl
insl
cmp
pop
pop
cmpsl
mov
xchg
js
sbb
push
fcmovnu
loopne
pop
pop
pop
imul
rcrl
jae
pop
jl
mov
pop
imul
fstpt
js
pop
xchg
js
pop
ret
pop
pop
pop
pop
pop
mov
cltd
enter
pop
data16
cmpsl
cmpsl
cmpsl
shll
pushf
pop
mov
pop
pop
pop
ret
pop
fistpl
cmpsl
cmpsl
push
loop
sub
inc
push
out
fsubs
nop
fmuls
mov
or
cmpsl
insl
pop
pop
pop
pop
xor
sbb
fstps
scas
lcall
mov
jb
scas
fstps
pop
cmpsl
push
cmp
addb
adc
cmp
loop
and
subb
mov
add
push
fs
loop
jb
fnstenv
ds
mov
clc
fnstsw
mov
aam
jmp
mov
pop
pop
pop
ret
pop
rcrl
and
fldenv
mov
dec
lcall
ret
xchg
stos
push
mov
aad
pop
jo
cltd
push
loop
ret
fldcw
ds
in
fnstenv
ds
adc
push
repz
cltd
push
aaa
mov
test
sbb
ds
push
loop
fs
cmpsl
insl
cmp
pop
pop
cmpsl
mov
xchg
js
sbb
push
fcmovnu
loopne
pop
pop
pop
imul
rcrl
jae
pop
jl
mov
pop
imul
fstpt
js
pop
xchg
js
pop
ret
pop
pop
pop
pop
pop
mov
cltd
enter
pop
data16
pop
pop
pop
ret
pop
pop
test
cltd
mov
fnsave
fldcw
mov
scas
sbb
outsb
std
sbb
push
loop
std
push
in
scas
xchg
fstps
sbb
push
loop
dec
fldcw
mov
fnstenv
fcomps
xchg
ds
popf
bound
fldenv
loope
das
cmc
add
fwait
jecxz
cmpsb
cltd
push
loop
fsub
mov
lahf
inc
fdivs
dec
lds
pop
cltd
mov
arpl
cwtl
fnstcw
adc
mov
bound
jecxz
pop
pop
pop
pop
ret
pop
lahf
cwtl
mov
fnsave
push
sti
xchg
push
loop
dec
push
loop
add
cltd
mov
mov
cmpsl
insl
cmp
pop
pop
cmpsl
mov
xchg
js
sbb
push
fcmovnu
loopne
pop
pop
pop
imul
rcrl
jae
pop
jl
mov
pop
imul
fstpt
js
pop
xchg
js
pop
ret
pop
pop
pop
pop
pop
mov
cltd
enter
pop
rcrw
fs
popf
imul
sbb
out
mov
fldenv
xchg
dec
in
popf
pop
fisubs
aad
jmp
push
repz
mov
pop
pop
pop
ret
pop
rcrl
jo
xchg
push
out
ds
mov
notl
scas
push
in
scas
lahf
cmp
mov
mov
ds
mov
mov
out
fnstcw
add
jns
fnstcw
cltd
enter
pop
pop
pop
ret
pop
fnstcw
test
inc
fcmovnu
mov
push
loop
jp
mov
fnstcw
ret
or
sbb
xchg
xchg
inc
adc
add
loope
add
push
and
aas
jp
imul
sub
push
lret
aaa
jecxz
cld
jb
nop
hlt
jne
rclb
push
mov
mov
push
jae
add
bound
or
mov
xorb
mov
mov
jge
pop
lea
dec
cmp
js
add
gs
in
xchg
out
dec
push
out
or
faddl
or
popw
or
pusha
jo
pop
push
fiaddl
cmp
jp
daa
sbb
sub
in
scas
mov
stos
sbb
popaw
cld
out
add
inc
sar
xor
adc
loopne
xor
in
bound
mov
test
sbb
inc
imul
pop
dec
sti
out
pop
add
or
aam
call
jno
push
mov
push
mov
jns
sbb
or
adc
and
sbb
fsubl
outsb
repnz
or
pop
ret
sbb
jns
inc
adc
rclb
push
inc
in
xor
add
or
jae
dec
adc
fisttpll
add
jmp
enter
arpl
aam
cmpsb
mov
jo
arpl
xchg
jge
lods
dec
xorb
xor
push
dec
pop
dec
aam
dec
call
dec
js
jno
je
jp
aas
pop
push
jnp
xor
jl
dec
jns
out
roll
aaa
inc
push
inc
dec
inc
xor
xor
jmp
sbb
ds
imul
push
jbe
int3
or
push
aas
cmp
xor
xor
inc
out
push
push
push
dec
inc
jno
inc
pop
in
inc
notb
xor
pop
lahf
xor
push
add
shlb
push
pop
cmp
inc
mov
pop
cmp
xor
addb
xor
es
pop
pop
int
cmp
push
enter
stc
dec
push
lret
push
dec
xor
addb
cmp
xlat
inc
push
inc
scas
pop
xor
inc
dec
xor
pushf
xor
inc
jg
cmp
sti
or
inc
nop
inc
addr16
outsb
pop
sbb
pop
pop
ret
add
bound
addr16
aaa
arpl
jg
outsl
outsb
jecxz,pt
imul
jne
and
mov
or
jns
arpl
fdivl
insb
imul
push
jl
dec
gs
push
out
je
push
sub
dec
insb
and
bound
adc
inc
jb
insb
ss
xchg
inc
fs
inc
insb
outsl
jae
jle
fsubp
sbb
popa
iret
loopw
jae
dec
into
pushf
push
arpl
push
push
push
sbb
iret
popa
insl
push
ja
cmpsb
ljmp
mov
xchg
xor
adc
ja
subl
scas
adc
dec
dec
mov
jbe
shll
adc
push
outsb
dec
test
imul
daa
pop
ficoms
sbb
push
enter
cmp
imul
repz
xor
cs
lea
out
jns
dec
out
gs
mov
add
cmc
lahf
std
mov
mov
mov
stos
ret
lods
mov
xor
fstpl
sub
in
sub
fildl
insb
sbb
lret
out
push
addr16
or
jo
mov
mov
pop
daa
cmp
sbb
div
cltd
add
push
xor
filds
jmp
add
loop
in
dec
cmp
push
lock
pushf
shll
add
fbld
pop
adc
dec
je
jns
cmp
jbe
jmp
data16
dec
add
cmpsl
adc
movsb
dec
repz
or
jnp
sbb
loop
push
mov
in
mov
mov
insb
mov
hlt
test
push
and
sarl
pop
sbb
mov
jle
jmp
and
inc
cs
fildll
sub
push
jne
lock
adc
test
dec
outsb
pop
leave
sub
aam
mov
push
pusha
add
sbbb
dec
add
push
inc
push
inc
pop
xor
fs
jne
dec
jp
or
dec
inc
sahf
add
pusha
