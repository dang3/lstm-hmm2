call
in
sub
push
push
lea
push
push
xor
call
cmp
pop
and
pop
pop
mov
inc
push
mov
add
push
lea
fidivs
cld
jl
and
std
fistl
cmp
les
jle
add
pop
pushl
popf
dec
xchg
push
jge
push
mov
jnp
sbb
jne
push
pop
or
or
pop
cs
testl
pop
pop
leave
ret
xchg
add
in
mov
dec
test
pop
jle
mov
pushl
adc
mov
std
xchg
mov
jmp
sub
icebp
sbb
or
mov
clc
call
test
sbb
and
cmp
cmp
add
outsb
pop
push
xor
test
inc
mov
mov
sbb
push
mov
sbb
repz
or
inc
das
add
mov
fildl
jo
popf
cwtl
verr
andb
ret
mov
jne
lea
push
push
mov
popa
movl
cmp
sbb
push
push
cmp
push
xor
jle
pusha
jge
push
or
mov
pop
pop
jg
mov
push
push
gs
or
mov
xor
cmp
mov
cltd
push
and
cmp
inc
lods
jmp
aaa
out
jl
xor
cmp
mov
xor
pop
push
fidivl
pop
mov
push
push
aam
push
mov
pop
fcompl
pop
je
mov
mov
or
or
inc
sub
push
or
lds
mov
sti
sbb
lea
xlat
dec
mov
push
das
js
jns
or
pushf
movsl
pop
push
repz
or
loope
jb
push
cmp
xor
and
jb
pop
mov
pop
in
mov
jmp
loopne
cs
sbb
pop
pop
out
adc
outsb
push
inc
popl
ret
adc
outsl
adc
jp
pop
insl
lret
pop
push
dec
pop
pop
jo
in
adc
into
ljmp
mov
out
mov
add
bound
mulps
xor
jmp
ja
push
pop
cld
clc
hlt
lcall
fs
imul
jne
dec
mov
clc
clc
lahf
std
popf
fs
cld
mov
sbb
push
fstpl
adc
or
sbb
add
shrl
push
mov
sbb
xor
mov
push
mov
stos
ret
rcl
jo
lock
cmp
in
lock
movw
call
mov
out
push
push
addr16
pop
stc
roll
push
inc
xor
aad
lock
mov
in
pop
jge
mov
push
push
jo
pop
cld
fimuls
and
cmp
setg
pop
and
add
stc
ds
pop
int
push
pop
lea
mov
movl
push
mov
inc
mov
cmc
jge
jecxz
imul
cmpl
je
popa
fisttps
repnz
mov
negb
add
sub
out
lcall
cmpl
fsubl
das
sbbl
inc
push
cmpb
pop
enter
out
xlat
roll
xchg
add
das
jnp
push
jmp
push
or
mov
in
pop
sub
lock
pop
call
push
jnp
mov
sarb
adc
rcr
push
aad
push
push
je
fcoml
loopne
jns
add
xor
lock
mov
leave
pop
pop
fdiv
fstpt
repz
test
cwtl
adc
adc
in
test
xchg
loopne
bnd
pushf
adc
jne
add
pop
cmp
fwait
cwtl
lea
cld
jne
nop
pop
fucomp
test
mov
push
hlt
mov
testl
add
cld
push
push
and
adc
into
popa
daa
int3
add
pop
repz
test
mov
cwtl
mov
jae
push
jno
pop
enter
dec
adcb
jns
mov
sti
pop
movhps
jl
cmp
add
imul
adcb
sub
fwait
pop
jge
mov
add
pop
xor
push
xor
in
push
pop
jo
xchg
xchg
les
filds
int
ret
aam
adc
mov
jmp
fisubs
andb
ret
cmp
testl
push
aas
shr
imul
mov
fimull
popa
fwait
pop
or
dec
fcomps
leave
xor
xchg
or
jne
loopne
fists
push
call
inc
cmp
xchg
mov
ja
shlb
shr
pusha
ljmp
jmp
inc
sub
aam
int3
sbbl
push
pushf
mov
cmp
push
push
out
adc
or
and
mov
xchg
subl
repnz
inc
or
xor
push
pop
and
scas
push
jl
clc
je
push
andl
push
mov
mov
cld
cmpb
je
xor
arpl
cmp
testl
jmp
mov
negb
lea
je
pop
sub
pop
jo
in
push
addr16
or
cmp
add
mov
fwait
push
in
or
or
lods
sbb
xor
xor
fdiv
lea
push
push
push
sbb
loop
mov
inc
jge
sbb
push
inc
jge
out
aas
jo
popa
ss
notl
or
mov
js
xchg
mov
rclb
cmp
push
andl
lods
xchg
jmp
jge
sub
cmp
jge
movzwl
push
push
cli
ds
out
or
lock
out
or
xor
lods
imul
xchg
lcall
sbb
cmp
xchg
and
adc
mov
add
leave
mov
add
repnz
push
mov
and
mov
push
push
pushl
push
or
push
push
emms
push
loope
scas
ret
dec
andb
clc
jl
ds
add
jne
sbb
cmpsl
frstor
pop
push
inc
ret
scas
mov
mov
inc
mov
in
rcrb
mov
insb
inc
cmp
mov
mov
push
in
hlt
xor
mov
filds
daa
movsb
xor
and
rcrb
mov
js
dec
and
push
ret
or
icebp
or
mov
sbb
imul
adc
mov
ja
je
push
jmp
push
push
jecxz
xchg
fwait
pop
cwtl
or
xor
fidivl
lret
and
jne
push
xor
mov
cmp
call
pop
cmp
mov
pushf
jno
cld
xor
add
loopne
in
mov
add
mov
loop
pop
adc
pop
sbb
jge
je
test
ss
mov
pop
push
or
hlt
push
ficoms
hlt
outsb
sub
or
addr16
jnp
push
add
pop
stc
sub
leave
mov
cmpsb
pop
add
les
or
inc
jle
mov
andl
add
xor
adc
daa
push
mov
inc
jo
mov
mov
test
inc
push
jno
shl
out
pop
mov
and
lea
sbb
test
scas
dec
ficoml
in
in
mov
mov
data16
add
call
mov
mov
or
mov
mov
sti
je
xor
popl
jnp
inc
xor
pop
xor
push
pop
mov
cld
sbb
lahf
inc
prefetch
gs
push
sub
in
mov
inc
call
lret
mov
push
mov
adc
popf
mov
pushf
push
wbinvd
mov
jecxz
jne
sbb
fucomi
dec
fisubrl
test
sbb
mov
pushf
pop
pop
pop
imul
mov
fistpl
je
lret
mov
or
or
int
ror
nop
push
push
rclb
or
or
lds
cmp
enter
sbb
xchg
mov
dec
mov
aam
mov
mov
orb
or
mov
das
push
lds
adc
pushf
mov
jne
add
mov
cwtl
mov
mov
inc
lret
in
push
iret
outsb
fwait
aaa
xchg
fisttpll
inc
and
mov
out
loopne
int3
add
stc
push
push
shr
inc
mov
pop
fidivs
fildll
xor
fmuls
clc
imul
pop
pusha
clc
incl
stc
mov
push
shr
shl
add
lea
jo
cmp
add
das
fidivrl
mov
scas
mov
xlat
push
sbb
rolb
mov
push
fcomps
mov
movsb
mov
xor
add
sub
out
add
mov
int3
popa
xor
pop
inc
pusha
js
je
lea
int3
sti
ja
push
or
push
push
push
xor
push
in
or
sub
daa
sbbb
adc
das
mov
aaa
das
int3
sub
and
call
pop
mov
in
push
mov
pop
or
jmp
adc
jmp
adc
cmp
cmpsl
loopne
rorb
outsl
inc
leave
sub
ds
arpl
push
adc
ds
outsb
sti
sbb
jo
mov
mov
sub
push
xor
or
push
jb
add
xorl
pop
sti
pop
int3
push
push
push
je
outsb
lock
inc
mov
sti
push
pop
inc
insl
mov
mov
stos
or
jl
daa
mov
js
mov
clc
adc
repz
lcall
xchg
sbb
and
lret
jg
mov
inc
scas
adc
pop
mov
jns
mov
inc
or
inc
push
adc
pop
adc
adc
sti
mov
and
or
mov
add
adc
sub
push
push
loope
or
cmp
mov
adc
add
xchg
clc
mov
push
or
mov
pop
rorl
cmp
addr16
add
sbbl
lret
push
adc
ljmp
sahf
sub
test
adc
sub
test
or
or
dec
xchg
jns
and
cld
adc
add
add
pop
push
jmp
xlat
push
shrb
es
pusha
push
mov
pop
int3
mov
ret
cwtl
or
out
int
shlb
mov
testl
xlat
sub
mov
sbb
gs
hlt
add
sbb
add
jns
cwtl
je
call
mov
sbb
js
cld
push
das
cld
jno
mov
pop
xor
jbe
frstor
xchg
clc
or
sub
push
jl
loopne
clc
sahf
xchg
outsb
test
mov
sub
xor
jns
or
adc
and
mov
insl
imul
lahf
jmp
adc
cmp
cmp
jmp
push
daa
cwtl
adc
sti
and
cmp
inc
xchg
fnstcw
scas
es
adc
push
sbb
mov
cmpb
and
adc
or
stos
add
fiaddl
fstps
cmp
xchg
jne
add
and
sbb
xchg
pop
jl
push
and
daa
mov
out
pushl
call
stos
dec
mov
dec
and
and
xor
shr
mov
incb
xchg
lock
dec
jne
pop
rcrl
rcrb
xchg
gs
xlat
xchg
sub
push
xchg
and
pop
xchg
pop
jne
and
push
imul
imul
push
out
inc
push
out
outsl
js
or
testb
je
dec
dec
add
out
pop
push
mov
jecxz
cmc
cmp
or
enter
adc
xor
mov
xchg
test
fmul
sbb
mov
jp
dec
arpl
aam
sarl
fstpl
cmp
fs
aas
push
xor
push
sub
call
xor
imul
inc
mov
test
in
je
push
mov
shrb
cmp
insb
push
in
es
push
mov
jmp
and
aam
xchg
out
in
int3
dec
inc
in
clc
xchg
pop
adc
push
sysenter
xchg
imul
repnz
adc
and
mov
mov
pusha
notb
sub
push
xchg
fs
mov
call
call
and
shlb
xor
aas
cmpsl
push
std
cmp
mov
sub
loopne
add
icebp
ljmp
mov
mov
inc
fnstcw
adc
rcll
and
mov
scas
stc
shlb
push
jns
xchg
pop
int3
fldl
xor
push
or
and
jbe
pop
push
lds
std
roll
or
mov
or
nop
fcomps
mov
xorl
adc
push
push
cmp
mov
lea
pop
mov
add
or
sti
or
nop
cli
ljmp
pop
lret
xchg
mov
daa
in
xchg
dec
sti
dec
sti
mov
js
insb
jnp
pop
addl
or
xchg
push
inc
fildl
call
add
outsl
movsb
adc
das
jnp
add
insb
test
scas
mov
and
inc
scas
push
push
adc
jmp
push
popf
sbb
adc
clc
aad
cld
jb
pushf
and
mov
fld
sbb
popa
outsl
sbb
test
xor
imul
jmp
arpl
mov
int
add
cmp
fistpl
xor
jmp
sbb
jne
push
pop
jmp
push
pop
cmp
dec
push
rorl
cmpsl
adc
in
mov
je
mov
or
mov
or
orl
sbb
and
or
bound
mov
xlat
movsl
sub
mov
mov
roll
lea
push
aad
adc
insl
dec
jne
outsl
add
lock
sbb
clc
mov
pop
cmp
push
jo
fcomi
sbb
stc
push
inc
sub
jge
xor
push
xor
subl
out
lock
out
lock
cmp
rcrl
mov
adc
and
push
out
xlat
enter
aad
fs
mov
add
sub
sbb
insl
sub
pop
pusha
xor
cmp
and
and
pop
mov
pop
mov
adc
enter
jno
mov
lock
addb
addr16
fcmovnb
sub
push
jns
inc
ja
sub
hlt
inc
push
push
pop
cwtl
jle
test
sub
rorl
jge
jne
push
out
rclb
push
cmp
rclb
shlb
aas
faddp
cmp
outsl
rcrb
bnd
cmp
xchg
jmp
js
mov
rclb
les
fstps
and
jl
hlt
filds
add
movsbl
mov
fisubrs
cmp
pop
jbe
nop
fcmove
push
lods
mov
push
inc
push
push
mov
fneni(8087
in
arpl
adcb
idivl
sbb
inc
and
xorb
mov
and
pop
test
or
pop
lods
add
inc
popf
mov
push
jne
and
and
loope
movsb
test
or
jbe
jno
push
add
push
mov
sti
dec
popf
add
jg
cmp
ljmp
pop
xchg
or
in
mov
sbb
scas
adcb
jle
sbb
and
ljmp
xlat
lret
inc
or
gs
pop
out
jge
sbb
cld
cmc
push
sub
fbstp
neg
pop
frstor
adc
lods
mov
das
cmp
mov
sbb
cltd
add
cmp
adc
jg
dec
cmp
add
movsl
into
in
xlat
sub
jne
call
cmpsb
sbb
jns
cltd
push
add
or
mov
in
cld
mov
mov
sub
fidivs
xchg
xor
icebp
nop
outsl
add
cltd
pop
jb
or
inc
test
mov
fsts
push
mov
push
movsl
push
fdivrs
push
push
nop
es
lcall
inc
testb
xor
and
cmp
into
cmpl
pop
inc
or
in
sub
push
sub
daa
push
jnp
jnp
sarl
mov
or
xchg
test
lret
pusha
mov
sbb
dec
fadds
add
inc
dec
xlat
int3
jbe
push
or
inc
jge
mov
and
adc
push
xor
movsl
pop
in
sbb
hlt
je
jp
push
mov
loope
clc
outsl
sub
jge
sahf
push
jmp
hlt
insl
hlt
push
test
jmp
mov
jo
and
insb
inc
dec
lcall
enter
inc
and
and
push
pop
in
add
icebp
xorl
cmc
xlat
jno
xchg
icebp
js
in
sbb
adc
add
loopne
pusha
add
or
mov
cwtl
das
movsl
arpl
push
mov
pop
inc
idivb
mov
divl
push
mov
mov
adc
mov
stos
stos
mov
test
push
scas
mov
pop
pop
xor
stos
lea
push
cmp
push
xlat
dec
loope
or
xor
ss
fcomps
jne
sbb
mov
enter
jle
add
pusha
sbb
sub
sbb
jbe
jne
push
push
das
jmp
outsl
nop
repz
xor
ret
inc
adcb
ret
add
pop
lds
xor
pop
jo
mov
push
push
ret
mov
jmp
imul
lods
das
outsl
les
xchg
jne
pop
inc
insl
add
add
lods
mov
push
scas
or
out
iret
arpl
mov
jo
or
cmpsb
mov
dec
fildll
push
loopne
loopne
nop
int
ret
mov
add
roll
inc
and
lea
ds
jnp
addl
xor
mov
cltd
push
pop
idiv
cmp
jne
cmpl
stos
sbb
pushl
jne
push
push
fiaddl
cmpsb
adc
cmpsl
fiadds
sub
cwtl
adc
inc
sbb
daa
pop
jo
imul
popa
ja
outsl
outsb
push
push
xchg
mov
test
rol
iret
push
xor
out
pushl
cltd
sub
sar
add
add
cltd
movsb
fnstsw
mov
push
or
dec
inc
sbb
fs
xchg
xorb
cltd
mov
int3
mov
movsl
mov
daa
lea
adc
rclb
test
mov
push
push
or
out
sbb
les
sahf
sbb
cld
sbb
or
testb
mov
jno
test
cmp
add
adc
xchg
test
dec
and
nop
inc
mov
sub
add
pop
xorl
sub
push
insb
pop
mov
sbb
pop
lea
mov
enter
cmp
jg
icebp
daa
insl
add
mov
rcrl
inc
sub
mov
scas
stc
push
push
cli
push
cmp
out
cmpb
sbb
int3
sub
add
and
sub
stos
inc
xor
push
dec
sub
lcall
push
mov
fsubrs
pop
add
lock
sub
fldt
and
mov
cmp
fistl
jb
mov
xor
into
fmull
add
aaa
ficoms
dec
insb
loopne
xchg
pop
xchg
and
sbb
pop
jne
pop
jmp
mov
ret
aas
mov
add
pop
push
jns
loope
or
je
fcoms
sbb
xchg
in
xchg
jle
test
jmp
dec
mov
sub
adc
push
and
sub
daa
mov
std
pop
mov
imul
test
inc
mov
push
popa
inc
cltd
push
jl
jmp
imul
ret
cltd
mov
scas
popa
int3
ss
or
popf
sub
jns
adc
xor
inc
mov
adc
jmp
movsb
push
jno
in
shll
and
test
nop
sub
or
cmp
in
lods
out
int3
lock
and
test
xlat
and
mov
push
pop
lock
dec
dec
push
or
xchg
icebp
pusha
push
loopne
shrl
add
pusha
pop
repnz
dec
and
mov
insb
sub
adc
add
mov
or
cld
or
and
and
mov
and
xchg
out
pop
popa
push
jmp
mov
rorb
or
gs
in
int
mov
xor
fs
sub
pop
mov
mov
dec
nop
dec
and
in
in
inc
jb
pop
in
in
or
cs
mov
dec
jle
xchg
add
movsl
dec
or
je
movl
sbb
dec
fmull
or
hlt
int3
mov
test
xor
and
iret
jne
test
jb
and
repnz
insb
std
insb
mov
mov
mov
gs
mov
mov
dec
ljmp
sbb
add
bound
incl
add
sbb
sti
call
lret
movsb
mov
jno
cmovne
inc
push
xor
aaa
fdivrl
push
xchg
push
or
cmc
scas
mov
mov
movb
pop
lret
pop
mov
jge
pop
rol
inc
aam
aad
lods
ljmp
jae
in
mov
movzwl
cltd
mov
push
xor
adc
enter
in
stos
test
dec
adc
negl
mov
jne
xchg
hlt
cmpsl
stc
add
push
and
shrb
adc
cmp
jle
inc
jbe
out
cltd
rorl
fcompl
add
ficompl
rolb
mov
push
imul
push
cli
fdivs
mov
push
lcall
and
mov
push
out
pop
mov
insb
insb
add
adc
adc
outsl
les
enter
iret
jmp
push
and
cmp
sbb
adc
or
dec
scas
adc
ss
or
fdivrl
sbb
pop
nop
inc
xchg
push
lret
xor
or
xchg
dec
jmp
dec
fadd
mov
mov
mov
int3
pushf
je
int3
push
sbb
xchg
sbb
and
sbb
lahf
inc
mov
or
stc
sbb
in
push
pop
cltd
mov
fwait
pop
ret
pop
inc
add
mov
cmp
jg
jl
les
cmpb
call
pop
or
push
jmp
in
inc
loopne
inc
js
les
jmp
add
jnp
call
leave
mov
in
add
cs
les
inc
hlt
dec
push
jp
lods
fidivs
sub
test
adc
pop
and
pop
mov
mov
test
add
out
add
mov
es
inc
pop
mov
hlt
jns
mov
adc
ds
call
sbb
cmp
cmp
cmp
pop
and
shl
mov
iret
xchg
scas
mov
cmp
es
inc
inc
xor
sti
add
sbb
sbbl
add
es
xchg
xor
shl
lods
add
add
or
imul
cmp
call
pop
ret
adc
fnstcw
lret
pusha
popa
mov
sub
jge
leave
loopne
jae
xchg
sub
cmp
pop
adcl
xchg
add
inc
mov
jg
les
jge
ja
mov
shr
dec
mov
data16
add
add
fdivp
add
push
push
int
adc
xchg
cli
nop
fcoms
sahf
je
incb
fcmovnb
jmp
cld
push
imul
inc
jb
mov
xor
cmp
sbb
icebp
pop
mov
pop
inc
adc
rcll
lods
xchg
in
add
enter
test
mov
and
adc
push
lods
fcoms
xor
mov
xchg
das
and
ja
push
push
push
and
jbe
fistps
sbb
insl
or
fmull
sbb
cmpsl
insl
mov
and
push
push
mov
sbb
sarb
pop
inc
enter
js
pushf
int3
sbb
push
sarb
xchg
sub
and
leave
inc
add
lret
dec
xor
cmpsb
jmp
xor
adc
rcr
mov
lret
test
sbb
pop
xor
sbb
mov
fisubrs
mov
rcr
jl
push
sub
int
data16
adc
or
std
mov
out
aaa
sbb
pop
jg
outsl
loop
jecxz
dec
mov
xor
adc
dec
cld
or
mov
add
push
jl
ret
stos
or
rolb
out
lock
cs
dec
push
xchg
rorl
xor
rol
xor
int3
or
mov
pop
or
in
xlat
sbb
add
mov
inc
lret
and
or
mov
je
jmp
push
cld
pop
cltd
idiv
test
outsl
movb
inc
jmp
mov
leave
mov
mov
inc
dec
lea
cmp
jae
andb
daa
push
sbb
sbb
add
into
pop
fdivrp
stos
call
sub
and
out
jp
mov
fmuls
ror
loopne
mov
and
aas
popf
in
mov
daa
mov
mov
arpl
fsincos
lock
pop
clc
sbb
aaa
mov
push
sub
lahf
test
mov
mov
rep
jmp
inc
xor
cwtl
add
add
jge
push
pop
aad
lret
and
cmpsb
pop
xor
mov
sbb
or
jmp
cld
mov
pop
dec
popa
je
jle
shr
push
jb
icebp
add
dec
mov
add
xor
mov
pop
popaw
hlt
lock
dec
call
cld
clc
push
add
das
mov
sarl
jg
or
mov
push
jecxz
pop
xor
jle
cmpsb
das
adc
fs
adc
adc
popa
in
out
int3
add
sbb
and
xchg
jge
cli
xor
or
pop
lods
cwtl
shlb
push
pop
jg
lods
adc
sub
add
cltd
sbb
jmp
sub
xlat
xchg
imul
and
sti
jns
mov
or
push
test
lods
sbb
pop
cmp
sbb
lret
test
outsb
jo
push
in
jne
rcrl
mov
je
push
fs
adc
aas
lcall
pop
cmp
sbb
jb
jne
push
gs
test
mov
xor
inc
fidivrs
int
rorb
xchg
sbb
xchg
or
push
test
push
xor
adc
aaa
das
imul
fsubs
jo
adc
jb
or
stos
push
gs
inc
aam
push
insl
sub
inc
xor
in
or
pop
mov
shrl
mov
inc
jg
cltd
adc
xorb
lock
push
add
mov
sbb
sar
pushf
add
mov
leave
adc
fldt
xor
add
push
test
cmp
pop
mov
xor
fs
inc
mov
mov
push
xor
hlt
push
mov
cmp
sbb
in
mov
mov
cmp
icebp
sbb
add
ljmp
jnp
int3
jnp
fnstcw
mov
or
bound
mov
cmp
fdivr
adc
mov
adc
add
loopne
jge
je
sub
pop
fcomps
push
ret
adc
notb
ret
aaa
sbb
int3
inc
mov
sbb
mov
pop
adc
addr16
and
je
sbb
mov
cmpsl
or
push
adc
arpl
cmpsl
sub
mov
stos
out
adcb
lahf
test
pop
pushf
add
inc
sub
es
inc
or
mov
jne
ds
push
push
pusha
in
popf
and
inc
mov
out
js
je
clc
push
repnz
mov
adc
adc
pop
sbb
cmp
xor
add
sbb
push
shrb
adc
movsb
lret
pusha
fsubp
fimuls
cs
or
testl
aam
divb
pop
sbb
sbb
ds
std
add
cmpsb
das
jne
mov
out
or
sbb
roll
inc
cmpl
inc
cmp
popf
fs
je
fdivrs
xor
scas
icebp
aas
inc
xchg
pop
push
jmp
push
mov
dec
xchg
fs
inc
sti
subb
out
pop
jmp
push
sbb
cmp
add
ljmp
lods
nop
add
rol
psadbw
add
xor
push
dec
test
loope
xor
insb
push
pop
cmp
add
lea
inc
push
or
pop
sti
sbb
pop
cmp
add
dec
mov
xchg
cld
mov
mov
push
push
sahf
jle
call
fidivs
shr
xor
cmpsl
xor
mov
inc
cmp
mov
mov
and
jnp
add
loope
test
rclb
lock
jae
ret
mov
push
int
jp
lea
mov
xor
sbb
adc
mov
fdivr
or
xor
xchg
dec
pop
pop
push
ret
add
notb
add
mov
adc
mov
rclb
inc
mov
fsubrs
xor
and
sbb
push
cmp
jb
cmp
js
aad
inc
xchg
es
mov
pop
sbb
lock
int3
sub
pushf
cltd
jle
jne
mov
cmc
mov
xor
in
jbe
cwtl
mov
insl
jno
lea
sub
push
inc
jnp
loope
lock
jg
rcrl
inc
shr
shrb
jo
jmp
nop
imull
dec
sarb
andb
cmp
jne
aad
loop
mov
in
mull
clc
test
hlt
push
xchg
rorl
mov
loopne
ret
enter
bound
leave
pop
movsb
ja
pop
sub
int3
add
add
inc
cmp
jb
jmp
pop
imul
xchg
pop
sbb
mov
and
pop
dec
jecxz,pn
mov
andl
loopne
jg
inc
mov
or
xorl
cld
jb
sbb
pop
test
xor
add
aad
and
hlt
mov
pop
mov
pop
inc
xchg
or
cmp
jne
cmp
and
lods
cmpsl
pop
fbstp
cmp
loop
sub
jae
out
pusha
int
push
xchg
fnsave
push
call
fnsetpm(287
mov
and
cmp
jne
fldln2
add
push
cli
loope
or
lock
gs
sbb
dec
nop
push
adcl
push
int
fcmove
and
xor
xlat
sub
jmp
add
cmp
pusha
inc
and
andb
icebp
push
inc
mov
ret
add
stos
or
ret
ret
stos
imul
icebp
loopne
cli
incl
or
inc
cmpb
or
add
inc
ja
or
mov
lds
or
inc
icebp
imul
mov
out
nop
adcb
or
xor
adc
cmc
or
xchg
push
mov
or
sbb
mov
fxch
adc
or
dec
or
sbb
nop
out
adc
and
shll
sub
scas
lcall
mov
dec
adc
pop
push
js
adc
test
sub
add
clc
cli
pop
cld
loop
jbe
cmpl
dec
mov
test
mov
sarb
jne
cmp
xlat
mov
cmpb
jbe
inc
inc
ljmp
add
or
push
fnsetpm(287
mov
sbb
sbb
sbb
inc
push
mov
pop
add
addl
lds
popf
ret
jl
je
xchg
popa
xor
adc
ret
repz
adc
add
dec
sarb
xchg
jae
or
idivl
shlb
test
ret
mov
jmp
cwtl
adc
inc
loopne
decl
dec
push
je
dec
iret
dec
sub
jl
roll
enter
push
push
jp
loop
pop
lods
sbb
push
add
ficoml
iret
mov
lds
jecxz
sbb
or
jmp
dec
loop
movsb
pop
mov
cmp
sti
mov
rorb
sub
sub
inc
mov
push
sbb
xchg
mov
fistpll
sbb
inc
xor
sub
jae
sbb
je
imul
inc
or
stos
xorl
dec
das
or
data16
inc
jmp
dec
sbb
ss
divb
addr16
ds
pop
pop
xor
sub
loop
leave
in
adc
add
push
adc
inc
push
mov
jo
push
lahf
dec
fiadds
orl
fimuls
pop
or
lods
mov
rclb
test
into
rorl
pusha
push
lret
cs
bnd
lcall
in
ret
cltd
pop
push
xor
stos
fnstsw
repnz
inc
pop
jns
jl
and
adc
mov
test
jo
imul
or
xorl
subb
add
addb
fldenvs
mov
and
enter
jns
push
xchg
test
jbe
cmp
pushl
cmp
jb
pop
jne
cmp
jae
mov
cwtl
inc
inc
push
cmp
xchg
popa
mov
dec
xchg
ss
jns
adc
dec
push
push
mov
sbb
or
rcll
mov
rolb
cmp
addr16
cmp
mov
loopne
pop
rorl
shll
rolb
and
les
pop
jbe
jmp
repz
cs
push
test
test
push
jne
and
fldt
mov
add
divb
mov
pop
prefetchnta
mov
cmp
pop
pop
push
xor
xor
xor
push
inc
xchg
cld
and
clc
pop
jb
daa
jmp
sub
dec
ret
and
ret
pcmpgtb
jmp
pop
push
pusha
sbb
lahf
mov
jle
std
sbb
lock
xor
pop
xchg
and
enter
xor
lods
addr16
out
mov
xchg
mov
push
inc
add
inc
fbstp
push
repz
std
jns
add
out
dec
sub
clc
inc
addr16
testl
push
jne
push
cmp
mov
cli
xor
cmpb
cli
adc
dec
imul
jle
adc
push
imul
sti
dec
lods
add
cld
adc
data16
xchg
mov
fstpl
push
stos
dec
add
and
stc
add
js
pop
or
std
popa
addl
inc
loop
mov
inc
xchg
dec
lock
in
ja
mov
daa
cmp
mov
dec
xchg
aam
push
loopne
in
dec
addr16
jne
pop
lods
jmp
sbb
jo
popa
or
sub
push
mov
adc
sti
xchg
repnz
jne
ljmp
fadds
push
sub
loope
push
mov
stc
dec
aas
test
les
pusha
jo
es
lock
and
adc
iret
adc
loope
mov
or
add
adc
mov
cmp
ds
mov
jge
sbb
es
xor
pop
jae
cmpb
xor
insl
pop
cld
dec
divb
jne
inc
movb
jmp
pop
mov
xor
das
pop
dec
ss
mov
decl
inc
push
out
or
jb
mov
in
sbb
mov
jo
mov
es
xchg
cs
adc
sub
jmp
pop
dec
sbb
xor
jne
sbb
cmp
cmp
je
push
sti
insl
dec
je
and
push
mov
pop
dec
push
je
cmp
xor
pop
and
nop
in
mov
mov
sub
in
pop
xchg
jecxz
push
inc
push
pushf
and
daa
stos
insb
inc
and
fnstsw
push
add
mov
inc
add
data16
scas
mov
ljmp
xor
test
jnp
outsb
gs
int3
mov
int3
clc
lret
dec
dec
cmp
push
mov
in
ljmp
inc
dec
test
cmp
dec
sti
mov
sbb
es
xor
lock
pop
xchg
add
fldt
adc
pop
xchg
and
push
je
xchg
sahf
js
push
je
push
insb
sbb
lret
push
pop
inc
mov
mov
adc
test
stos
ss
push
mov
lods
or
arpl
and
mov
pop
out
fs
mov
das
mov
xchg
or
add
sub
push
leave
aad
add
xchg
sbb
dec
push
repnz
lea
add
push
je
aad
sub
add
and
call
cmpb
je
dec
jne
inc
push
pop
inc
lret
inc
dec
sbb
push
mov
xchg
pop
js
mov
adc
lea
nop
fs
add
sarb
mov
add
jmp
cld
and
test
xor
leave
movsb
jno
jecxz
sub
sub
and
sub
cmp
ja
sbb
push
sahf
data16
clc
pop
dec
repnz
pusha
or
ljmp
jl
or
dec
jo
negb
hlt
rorl
loop
push
dec
and
push
cmpsb
ret
mov
aaa
pusha
xor
sub
sub
jb
roll
push
push
loope
and
mov
pop
fstl
imul
push
imul
cmp
pop
fwait
jbe
popf
pop
ret
or
cmpsb
and
das
push
xor
jo
dec
leave
adc
repz
xor
pop
cld
and
mov
xchg
xchg
jb
fdivs
insb
mov
js
shrl
int3
daa
inc
inc
dec
leave
pop
cmp
mov
push
jnp
test
pop
mov
jmp
push
in
shlb
adc
insl
arpl
sbb
jecxz,pn
arpl
inc
lahf
test
cmp
xlat
adc
mov
sbb
sub
icebp
or
pop
aaa
js
je
sub
xchg
rorl
xchg
daa
sub
and
add
adc
adcb
push
loope
cmp
fsubrs
add
pop
jecxz
addb
inc
jmp
addb
je
mov
pop
or
sti
cmp
hlt
inc
fstpl
or
add
fdivrs
mov
add
add
orl
push
test
xor
enter
popa
xchg
bound
mov
or
and
ljmp
cmp
cmpb
jne
movb
push
inc
jns
add
aad
mov
sub
mov
sbb
xor
cltd
mov
je
and
pop
jmp
mov
js
push
mov
incb
mov
jo
fisubrs
insl
sbb
fdivrs
cmp
push
xor
sbb
pop
push
jne
dec
and
or
mov
sbb
insb
mov
ss
push
jns
mov
rorb
rep
lcall
dec
jne
xchg
xlat
shlb
inc
cld
push
xchg
pop
rcrb
push
ss
mov
cmp
enter
add
sub
mov
pop
hlt
push
pop
xchg
pusha
in
arpl
notb
xlat
fcoml
inc
adc
int
sub
repnz
in
push
add
lcall
mov
cmp
rclb
xor
pop
sbb
sbb
push
rolb
add
pop
insb
daa
xor
mov
xor
cmp
xor
orb
idivb
mov
pop
fadd
jecxz
adc
pop
xchg
jns
cmp
jmp
xor
sbb
ret
mov
push
mov
mov
pop
in
lock
and
dec
inc
unpckhps
fcomps
mov
and
push
and
and
cli
paddusw
enter
lcall
dec
xor
div
cmp
jbe
push
adc
inc
xor
aas
lock
enter
rol
jmp
mov
jmp
cmpsl
xchg
pop
repnz
clc
pop
sbb
inc
sub
xchg
in
and
ss
test
ja
repz
add
pop
test
xorl
push
cmp
call
icebp
sbb
pop
add
pop
push
arpl
fimull
and
fidivs
sbb
push
inc
add
aam
shlb
lret
mov
ds
enter
pop
ret
dec
enter
pop
sbbl
adc
test
enter
or
lods
sbb
scas
fcomi
pop
mov
and
enter
loopne
sub
sbb
fcomps
sbb
fists
mov
in
daa
cwtl
les
or
insl
mov
mov
pop
adc
cmp
mov
add
in
cmp
and
sub
dec
push
fwait
adc
lods
inc
mov
cmpl
fcomps
jle
mov
mov
popa
xchg
pop
cmpsb
mov
sbb
push
or
pop
push
and
adcl
shll
stc
sbb
push
adc
dec
push
cmp
mov
xchg
push
and
jp
inc
hlt
adc
push
inc
push
xchg
mov
inc
mov
lock
test
jne
inc
jmp
cltd
sbb
push
je
push
push
dec
add
lret
sub
les
inc
cmp
xchg
adc
sbb
adc
dec
pop
out
fmull
andl
xor
and
lods
xor
and
add
xchg
into
fisubrl
push
rep
add
fwait
daa
jmp
jge
into
and
inc
mov
arpl
xchg
cwtl
sbb
mov
mul
or
mov
lds
stos
nop
mov
adc
push
dec
pop
jo
jecxz
mov
data16
les
mov
cmp
pop
or
incb
hlt
push
mov
sti
int
cld
push
pop
push
test
jns
push
aaa
out
mov
mov
sbb
or
ret
je
jge
movl
jno
jg
cs
add
xchg
cmp
add
add
out
leave
and
lea
fistpl
or
or
and
cmp
inc
push
or
lahf
xor
adc
jne
add
imul
cmp
clc
pushf
lahf
and
jmp
xchg
adc
add
lar
jne
testb
inc
mov
into
rolb
jne
pop
lock
pop
pop
subl
cmpl
xor
adcb
and
sahf
clc
sub
push
lret
cli
cmpsb
lret
mov
dec
hlt
mov
push
mov
dec
aam
jg
sbb
decb
push
rclb
push
push
inc
inc
pusha
inc
test
or
add
rorl
mov
clc
sti
cmpl
xchg
rorb
cmp
inc
pop
push
cltd
jp
test
add
sbb
lods
mov
sbb
add
mov
loope
ret
call
data16
cs
lcall
mov
dec
enter
cltd
fwait
cmp
enter
out
movb
mov
mov
xor
sub
insl
rcrb
cmp
and
sbb
cmpsb
mov
mov
mov
add
dec
jle
xchg
add
inc
inc
pop
xlat
test
sbb
push
das
or
sbb
sbb
cmp
int
or
ror
inc
sub
jb
ljmp
stos
mov
lock
jae
mov
popf
neg
fsubr
or
popa
orl
andb
cmp
mov
mov
xor
xor
dec
xchg
xchg
add
dec
inc
movsl
add
mov
movb
dec
cld
adc
divb
out
add
mov
push
dec
push
orl
sar
inc
or
cmp
sar
lock
lods
clc
inc
inc
mov
fbstp
aad
fwait
shrl
clc
outsl
fwait
push
les
mov
jo
in
sub
int3
test
mov
mov
xchg
xchg
xchg
push
addb
fs
mov
dec
xor
cmp
jnp
addr16
clc
mov
jnp
out
cs
test
sbb
mov
adc
inc
jo
cwtl
jb
sahf
push
stos
movl
outsl
sub
aaa
shr
adc
xor
or
out
adc
sti
clc
dec
add
in
in
leave
cld
outsb
lock
xchg
in
sbb
aam
sub
fxch
enter
mov
mov
xchg
js
cmc
jmp
leave
or
mov
outsl
sub
push
jb
cmp
js
fsubrl
ja
and
jo
sbb
sbb
outsb
dec
in
orl
repz
push
pop
jmp
popl
xor
push
push
int
outsb
test
and
or
sub
iret
xchg
fxch
clc
or
cmp
insl
lods
xchg
xchg
and
call
rcll
hlt
pop
jbe
divl
jb
mov
lods
xchg
outsb
hlt
movsb
frstor
add
shlb
insb
cwtl
mov
push
xchg
subl
sbb
js
push
cmp
sbb
dec
fcomps
cmp
cmp
and
or
nop
inc
cs
push
mov
sbb
fcomp
outsb
sbbb
seto
insb
mov
or
pop
pop
push
call
insb
mov
insb
enter
je
sbb
movsb
enter
aam
nop
sub
fs
outsb
js
insb
dec
or
enter
push
lods
je
mov
lock
xchg
dec
les
inc
aam
lret
mov
cmp
and
and
outsl
push
outsb
add
pop
push
lret
push
movsl
add
cmp
add
inc
mov
movsb
outsb
or
inc
dec
inc
cmp
jp
lock
sahf
inc
sahf
imul
add
and
or
and
insb
rcrb
adc
insl
ror
enter
sbb
sbb
movsb
test
xchg
sbb
leave
in
test
in
js
cmp
jne
dec
or
imul
repnz
jo
lea
jo
cmp
cmp
and
sbb
sbb
out
sbb
cld
push
add
cs
cmp
enter
pop
add
xor
inc
inc
sahf
outsl
in
sbb
call
cmp
or
and
xor
mov
adc
insb
fs
enter
xchg
enter
adc
je
psubusb
in
imul
push
in
pop
push
js
mov
pushf
sbb
push
push
push
xor
or
inc
push
enter
hlt
aam
sbb
xchg
dec
mov
jb
fs
nop
push
outsl
jl
xor
add
pop
pop
in
fs
and
xor
or
kmovb
mov
out
mov
inc
pop
outsb
xchg
out
sarl
push
xor
add
pop
fs
outsb
cwtl
outsb
nop
mov
xor
push
pop
in
xchg
cmp
pusha
scas
xchg
mov
sbb
stc
aas
hlt
imul
aam
adc
cmp
les
loope
loope
adc
sub
nop
xchg
mov
imul
test
pushf
mov
mov
aam
in
and
dec
or
jbe
xor
jo
sarb
pusha
in
insb
xor
aaa
imul
mov
adc
aam
jo
push
cmp
sbb
ret
dec
dec
sbb
inc
cmpsb
in
outsl
cmpb
ret
cld
push
push
cmp
in
xchg
mov
inc
nop
add
add
xchg
mov
push
push
adc
fcmovnb
push
ret
jae
lock
xor
movaps
in
dec
lock
xchg
fs
add
and
add
in
sbb
cld
xchg
mov
pushf
clc
addr16
and
pop
les
sbb
adc
scas
xchg
ret
cmc
mov
jo
loopne
nop
dec
outsl
movsb
cmp
movsb
test
push
inc
push
loopne
loopne
mov
xchg
mov
pop
mov
pop
inc
pop
mov
loopne
xchg
cmp
add
xor
xchg
adc
ficoms
enter
and
mov
push
insb
leave
and
push
pop
push
jb
and
pusha
cmp
push
fs
xchg
insb
jo
and
js
nop
mov
sbbb
sub
cmp
mov
xchg
dec
pushf
xchg
nop
mov
pushf
in
mov
cmp
sbb
dec
push
mov
shll
dec
xchg
mov
mov
pop
xor
dec
push
gs
or
aam
add
jge
inc
pop
je
movsl
xchg
roll
insb
cmpb
clc
lock
je
and
nop
ret
adc
push
push
cmc
mov
andb
push
or
mov
push
mov
aaa
jno
xor
mov
push
sub
add
jno
pop
pop
shlb
pusha
jae
pop
xor
inc
jbe
sbbl
add
push
xor
mull
mov
jle
mov
cmp
je
or
incl
mov
inc
cmp
jl
xor
inc
jle
cmp
daa
mov
xor
cmp
je
cmp
mov
jo
inc
cmp
jl
cmp
pop
in
imul
mov
loope
ficoml
xorb
lea
outsl
pop
pop
idivl
fistpll
adc
jle
lcall
pop
inc
mov
mov
dec
cmp
jle
mov
jg
aas
push
je
cmp
pop
jl
cmp
jg
daa
aam
shlb
xchg
fildll
adc
cmp
sbb
fldt
out
push
sub
repz
xlat
mov
fisttpll
jmp
sbbb
mov
pop
fisttps
ret
pop
or
pop
lock
mulb
mov
mov
outsb
jl
mov
add
outsl
jge
xchg
lea
insl
imul
cltd
adc
push
pop
xchg
sar
icebp
out
pop
dec
dec
shll
dec
movq
push
xor
xchg
aam
dec
inc
imul
incl
xchg
ja
push
mov
sti
outsl
out
mov
mov
cmp
jg
or
jno
dec
lea
fwait
dec
lea
test
jmp
jl
pop
push
leave
test
aas
std
mov
cmc
mov
fxch
lcall
sub
push
add
and
gs
pop
mov
sbb
mov
add
cmp
xor
out
scas
adc
je
jns
repz
adc
push
push
add
shlb
mov
notl
enter
or
push
jns
xchg
mov
shll
or
pop
fwait
test
sbb
pop
in
dec
loop
pushf
fcompl
xor
cmp
add
xor
xor
in
adc
test
cmp
dec
mov
xchg
lock
popa
sbb
loopne
push
jl
cwtl
or
inc
push
or
imul
inc
or
in
fstl
jmp
mov
sbb
and
repnz
lods
xor
cmova
cmpsl
xchg
je
int3
or
pop
es
repz
pushf
cmp
fsubs
adc
cmp
icebp
push
cs
daa
pop
xchg
aaa
imul
decb
xchg
inc
mov
inc
push
xchg
jno
sbb
shrb
push
sbb
xchg
jl
pop
sbb
push
test
push
push
jge
lock
mov
xchg
hlt
pop
sbb
push
dec
lods
rorl
popa
xorl
mov
adc
and
aam
and
shll
adc
insl
mov
rclb
ret
orl
add
push
dec
jno
out
push
pop
pop
leave
inc
add
xor
cmp
pop
addr16
pop
dec
pop
jae
out
xchg
add
pop
faddl
sub
lock
repz
jne
push
cmpsl
enter
adc
outsl
mov
mov
cmp
or
xor
add
in
rclb
cmp
jne
dec
pop
in
fstpl
add
scas
dec
call
xor
add
insl
or
inc
cld
shl
les
push
xor
ret
mov
sbb
notl
int
cmp
popf
pop
shlb
jmp
call
push
jne
cmp
mov
sbb
js
mov
movsb
stc
sbb
es
outsb
inc
dec
mov
xchg
xchg
fs
push
insl
je
xorb
rcrb
sarb
mov
test
testb
ret
cmp
cmp
xor
xchg
andl
sbb
pop
xchg
adc
xchg
fs
lock
loopne
xor
jae
nop
xorb
std
adc
inc
pop
add
icebp
int3
arpl
mov
dec
adc
test
test
mov
daa
xor
mov
jns
lock
shlb
hlt
repnz
je
cmpl
push
push
xlat
imul
inc
and
out
fnstcw
xor
pop
jl
icebp
pushf
jno
xor
pop
idiv
test
fsubs
int
fsubrs
dec
testb
loopne
inc
sub
jg
jo
inc
insb
pop
jg
adc
adc
int
loop
popf
xor
cmp
mov
stos
mov
pop
pop
and
les
jge
in
repz
push
lea
shl
jb
xchg
mov
fs
imul
out
jo
push
sub
mov
sub
inc
sahf
lea
cmp
or
fdivrl
add
add
mov
mov
cmpl
stos
sbb
sub
loop
add
mov
mov
lds
add
incl
cmp
outsb
push
or
dec
adc
dec
sub
loope
jmp
aaa
or
inc
push
mov
arpl
push
fsubr
fwait
sbb
mov
jns
adc
pop
adc
mov
test
mov
out
inc
sub
pop
dec
push
mov
int3
das
mov
movsl
add
mull
pop
daa
enter
cmp
add
and
push
je
or
out
dec
sti
mov
enter
sub
adc
and
ja
out
in
add
test
add
cmp
ja
adc
jge
out
outsl
and
push
test
mov
lahf
popa
ja
je
lea
adc
movzbl
fstp
jle
and
push
or
adcb
ss
cld
fsubrl
push
and
sbb
outsb
jle
adc
je
push
push
inc
sbb
push
inc
mov
adc
sbb
call
fnstenvs
clc
or
jmp
or
add
or
add
add
inc
add
out
sbb
jmp
cltd
dec
push
and
and
insl
adc
out
push
fcoml
je
lock
push
js
lds
notl
cmp
decb
cld
jle
adc
js
inc
or
inc
mov
cmp
sub
adc
gs
rcl
icebp
out
lock
fsubp
inc
in
or
pop
jns
cmp
enter
jns
jns
jns
inc
cmpsb
sbb
shlb
js
clc
loopne
pushl
lahf
inc
or
add
cmp
fcomps
add
je
inc
add
lret
jl
or
xchg
sbb
push
bound
cmp
cmp
jne
dec
and
out
lods
lcall
jne
push
push
add
adc
jne
push
push
stos
aas
es
jne
push
pop
mov
imul
xchg
lock
xchg
jns
jmp
dec
cltd
xchg
iret
shll
lods
xchg
test
and
cmp
lret
inc
cmp
mov
lock
or
dec
test
pop
dec
dec
lods
mov
fsubl
aas
and
pop
sub
jg
add
call
adc
add
and
jno
pushl
fdivs
mov
or
xchg
popa
mov
arpl
nop
or
mov
sub
stc
jg
xchg
lret
mov
push
dec
into
and
jnp
addr16
dec
pushf
jcxz
cld
inc
or
test
fsubs
insb
lahf
addl
mov
push
in
push
lea
lds
lea
jae
lret
and
cltd
sbb
outsb
imul
adc
mov
adc
cmpsl
ret
add
add
adc
push
push
mov
mov
and
jp
xor
imul
jae
push
rcl
popf
jp
mov
popa
add
lods
ds
adc
xor
icebp
xor
lcall
and
jmp
jmp
xorl
inc
jo
jbe
xchg
in
mov
or
or
mov
cmpsb
mov
in
push
jl
cmpsl
and
xor
mov
lods
add
sahf
sbb
xor
mov
ficomps
cld
movsl
sete
xchg
xor
jmp
je
into
jne
and
pop
loopne
mov
pushf
dec
pop
dec
mov
pop
push
pop
pop
xchg
test
adc
inc
push
xchg
repnz
mov
cmpl
sbb
in
ja
jp
call
and
jge
mov
inc
inc
fcoml
and
inc
mov
mov
out
fsubl
xchg
rolb
push
mov
rcrl
ror
and
add
movb
cli
push
push
lret
or
jo
test
or
add
inc
mov
xor
inc
inc
testl
push
leave
mov
bound
jb
jo
popa
pop
push
add
sub
imul
or
rolb
cmp
cli
push
pop
jae
add
sub
jl
and
mov
add
mov
in
xchg
hlt
jnp
movsl
fs
mov
loopne
and
mov
mov
sub
xor
mov
mov
insb
nop
stos
fs
xor
cmp
nop
mov
mov
sbb
stos
fs
inc
or
push
or
jp
pop
pop
jmp
pusha
jb
mov
push
aam
xor
pop
scas
xor
and
shlb
pop
xchg
sbb
push
xor
adc
lea
mov
and
outsb
loopne
add
dec
dec
sub
fisttps
loopne
lock
hlt
je
cmp
jno
push
call
pop
mov
mov
jno
adc
arpl
shll
cltd
pushl
push
lds
dec
call
cmp
jb
jmp
cmp
repnz
stos
cmpb
loop
outsb
cld
pop
cltd
add
and
cmp
imul
xor
and
inc
adc
pop
or
pop
je
sub
inc
add
inc
or
je
xor
add
outsl
mov
dec
sti
repz
adc
lea
adc
and
pusha
push
cmp
jl
sub
dec
sti
pop
mov
and
jle
fdivr
stc
sub
or
push
jnp
mulb
pop
ja
je
sub
dec
adcl
std
out
jne
ret
inc
dec
push
hlt
jge
push
std
aaa
sub
pop
je
or
jle
xor
jge
jge
in
stc
and
add
and
adc
int3
add
pop
sub
cltd
push
clc
or
jne
lock
or
mov
dec
and
xor
insb
dec
cmp
aam
jne
cld
ja
fsubrs
or
aas
add
and
inc
rclb
adc
pop
adc
sbb
lock
dec
jnp
in
sub
cld
mov
shrb
pop
push
lods
enter
push
rcll
iret
in
push
cwtl
or
loopne
and
pop
mov
push
push
push
inc
andb
ficoms
pop
sbb
add
push
pop
push
hlt
add
std
mov
jno
jbe
xchg
cmpb
cmp
enter
insb
lock
xchg
xchg
inc
xchg
xchg
mov
faddl
push
scas
mov
adc
adc
mov
add
popa
pop
jb
test
lahf
je
hlt
in
cmp
jne
aaa
push
jne
repnz
aas
mov
jo
or
in
mov
add
adc
aas
sub
mov
cmp
add
cmp
nop
popa
xchg
stos
and
or
and
push
xor
pop
mov
push
div
adc
inc
sbb
sub
inc
inc
div
mov
or
fisttpl
cs
pop
rcr
ss
push
xor
xor
popa
outsl
add
fdivs
or
dec
js
dec
fnstsw
je
mov
fs
and
mov
ss
cmpsl
adc
sbb
mov
fstl
cmpsb
les
adc
xor
dec
sbb
mov
fstpt
scas
rorb
ljmp
aam
je
jg
inc
loopne
adc
add
pop
shrb
add
divb
ljmp
roll
push
adc
jo
jle
ret
add
lods
cmp
adc
js
ret
cs
sub
ret
mov
in
je
arpl
jno
lods
push
in
sub
mov
xor
or
add
loopne
push
push
aaa
inc
psubd
dec
xor
mov
sub
sub
imul
jle
pop
js
subps
sub
xorb
or
mov
loop
in
jae
test
or
lret
cmp
inc
cmp
je
adc
rorl
cld
cmp
pushf
jo
fsub
clc
jbe
sbb
mov
cmpl
cwtl
movsb
inc
xchg
gs
cltd
cmp
rclb
in
lock
push
cmp
repz
movsl
ret
inc
mov
sub
xor
or
cmpsl
jmp
cmp
or
div
jecxz
add
or
imul
xchg
popa
inc
or
lods
stos
aam
jne
xchg
aas
movsl
jno
dec
addr16
rclb
lea
and
push
push
push
inc
cmp
pushf
orl
ret
stc
outsl
js
bound
stc
in
jp
popa
call
push
or
andl
xor
and
adc
fdivrs
and
dec
orl
jecxz
dec
sarb
and
or
outsb
or
lds
ret
cmpb
and
push
rclb
mov
test
andb
xchg
cmp
mov
add
mov
mov
mov
sub
xchg
xchg
call
repnz
je
mov
sbb
daa
fcomp
ret
xchg
arpl
out
sub
or
lock
push
push
push
jmp
mov
jmp
add
lea
push
or
rcr
inc
fwait
pusha
pop
add
pop
xchg
mov
and
and
xchg
je
daa
cmp
sbb
or
lea
mov
pushf
mov
and
xchg
arpl
orb
in
sub
les
sbb
mov
cld
adc
or
or
subps
inc
sbb
adc
int
push
iret
adc
stos
mov
cmp
xchg
dec
loope
xor
push
lret
dec
inc
shll
dec
or
ret
mov
jno
add
cmp
mov
insb
popf
push
dec
fsubrs
jo
push
orl
dec
or
jge
int
xor
push
rcll
push
cmp
pop
in
adc
jg
std
mov
cmpl
cmp
push
cmp
sbb
mov
sahf
pop
xor
xor
lock
test
addr16
push
popa
jnp
repnz
test
in
mov
xorl
jg
add
cmp
in
mov
cmp
push
movsb
add
dec
fistpl
sahf
sub
sbb
dec
jne
test
adc
push
prefetch
or
leave
je
jmp
and
cld
push
inc
push
fbstp
sar
icebp
lds
iret
je
ret
out
mov
sub
add
or
pop
stos
ds
xchg
data16
fcom
pop
push
fcomps
jmp
inc
daa
push
mov
ficompl
into
lret
push
mov
sub
lea
push
and
inc
add
cmp
adc
std
jb
jmp
push
pop
inc
mov
int3
add
sbb
jmp
lock
les
add
hlt
fstps
mov
lea
imul
std
inc
repz
mov
push
or
lock
and
sbb
push
rcrb
test
pop
lea
incl
call
lea
mov
or
mov
add
inc
inc
std
scas
mov
pop
jmp
and
int3
add
mov
and
jmp
shr
add
pop
mov
shr
shl
push
mov
cli
or
pusha
adc
xchg
ljmp
push
sbb
sub
pop
sub
std
push
and
cld
repz
sbb
mov
add
and
addb
jns
int3
mov
dec
shlb
push
fsubs
cmp
and
sbb
xchg
je
pop
push
push
jmp
movb
dec
adc
xchg
cmp
enter
test
mov
scas
rorb
out
jl
ret
bound
inc
fisttpll
sti
mov
push
cwtl
test
add
insb
gs
loope
cltd
cmp
mov
sub
lock
sti
ds
in
xor
mov
xchg
dec
mov
in
dec
cs
add
shlb
push
pusha
test
shll
mov
lods
loop
insb
dec
lds
and
xor
hlt
inc
loope
or
imul
lcall
rcl
add
pop
leave
neg
dec
fisubrl
je
dec
fistpll
call
dec
add
push
push
imul
jne
mov
push
mov
test
pop
or
fildl
test
sbb
lods
and
pop
mov
shlb
add
je,pt
dec
mov
xchg
ret
or
or
xchg
leave
rcrb
das
mov
and
cmpl
pop
enter
mov
add
pop
fdivs
in
sbb
aam
mov
dec
ror
or
mov
add
jmp
push
add
sub
dec
call
mov
les
or
jge
jge
mov
cmp
iret
pop
sarb
pop
shrb
loopne
inc
hlt
enter
mov
cmp
jl
sbb
sub
adc
adc
push
daa
int3
jno
scas
dec
pop
pop
adc
and
mov
movsb
sti
jecxz
fld
pusha
push
lahf
pop
pop
lds
arpl
push
push
add
dec
popf
int3
push
xchg
orl
sahf
call
int3
mov
sub
dec
inc
adcb
imul
out
aam
pop
addr16
faddl
fldl
cmp
add
adc
adc
or
fsubl
addl
pop
xchg
jge
jle
aad
jl
push
jl
mov
jmp
dec
insl
or
vcvtss2si
popf
aam
popf
int
sub
cld
incb
out
dec
mov
or
dec
or
cmp
jg
mov
insb
and
add
out
dec
test
and
push
jbe
add
dec
dec
insb
push
xchg
jge
sbb
adc
xchg
inc
in
inc
mov
or
mov
dec
clc
add
and
mov
push
inc
inc
add
jno
dec
add
add
xlat
add
loope
cld
popf
out
xchg
test
sbb
lahf
iret
mov
mov
je
and
ficoms
or
pop
inc
push
push
stc
test
das
sbb
in
insb
or
adc
mov
dec
cmp
push
sahf
inc
add
jae
sbb
mov
repz
cmpsb
adc
or
ljmp
or
sub
dec
and
sbb
push
xor
inc
inc
pop
int3
pop
mov
mov
or
xchg
and
mov
lods
rol
push
jmp
pop
jns
pusha
shll
xor
loopne
mov
jecxz
addb
nopl
adc
dec
imul
fldenv
mov
lods
aas
cmpsb
jae
adc
es
stos
sub
test
test
les
xchg
xchg
daa
and
cmpsl
sbb
sbb
push
jnp
sub
das
imul
mov
ljmp
shrb
out
add
mov
or
nop
add
ret
or
cmp
push
sub
add
sbb
adc
push
mulb
push
int
xor
xor
lcall
pop
jmp
ja
push
xchg
cwtl
mov
rcrb
add
leave
inc
and
add
jp
cld
xchg
dec
std
add
enter
popf
sbb
daa
int
push
dec
dec
sbb
add
out
jb
or
inc
leave
in
imul
push
popf
sarb
push
push
clc
cmpsl
or
xor
jp
nop
or
mov
dec
lret
mov
std
pop
sbb
push
push
aaa
std
imulb
loopne
loopne
push
cmp
jne
mov
sahf
adc
outsl
je
push
subl
mov
mov
push
cmp
xor
mov
shll
lods
inc
pushf
add
push
repnz
cltd
add
hlt
add
adc
lahf
and
push
mov
int3
mov
push
dec
jnp
push
add
mov
pop
adc
add
stc
movsl
mov
or
loope
loopne
hlt
stc
test
add
cld
mov
add
and
add
div
mov
loop
outsl
into
addr16
or
jne
or
xor
push
adc
dec
xchg
add
push
sbb
negl
cmp
lds
repz
cmp
sbb
sbb
inc
and
pusha
push
sti
xchg
fwait
cmp
aam
adc
loop
leave
xchg
and
mov
or
adc
pop
mov
insb
aaa
mov
cmp
push
imul
inc
jno
xchg
lock
sbb
shlb
insb
popa
add
je
xlat
inc
pop
pop
cltd
push
lcall
inc
inc
leave
fnsave
xchg
inc
or
adc
adc
and
jno
pop
adc
int3
shlb
jmp
and
adc
push
and
stos
addl
or
icebp
jnp
xchg
addr16
test
inc
pop
sbb
pop
mov
mov
jnp
pop
push
sbb
outsl
gs
movsb
outsl
or
ror
pushf
xchg
in
push
adc
fisubrs
mov
fcoms
hlt
jne
dec
ret
xchg
in
jbe
mov
ret
iret
or
push
int
push
insl
mov
loopne
inc
sub
sub
or
push
cmpsl
cmpl
adc
mov
fldenv
or
aas
cmp
je
pop
fwait
or
xchg
sbb
adc
pcmpgtd
and
pop
imul
push
push
or
dec
test
mov
jno
jl
adc
sbb
ret
mov
sub
jo
xor
inc
fsubrs
xchg
repnz
xor
iret
dec
and
imul
or
and
pop
je
sbb
sub
pop
je
sub
mov
dec
inc
imul
mov
mov
mov
aaa
sub
lret
pop
xchg
jne
sbb
inc
loope
sbb
jp
inc
sahf
cmpsl
int3
outsb
pop
sbb
sub
lock
fldcw
int3
pop
adc
add
jne
aam
cmp
je
decl
push
into
mov
cmpsl
or
mov
gs
push
xorb
jno
sbb
cltd
nop
int
nop
and
nop
sub
adc
mov
or
insl
and
sti
mov
add
jo
mov
inc
in
add
les
aad
loope
pusha
mov
lcall
aam
shr
jne
sbb
xor
outsl
pusha
lret
orl
int3
ret
push
add
or
mov
mov
mov
lock
stos
add
jne
jecxz
xorl
mov
inc
retw
xor
mov
shll
ljmp
cmp
jecxz
push
pusha
test
xor
sbb
mov
fadd
mov
out
subb
pop
and
ret
notb
test
add
mov
bound
neg
or
or
push
dec
es
mov
sbb
push
mov
insb
mov
pushf
push
pop
lcall
xor
add
sbb
jne
sbb
mov
loopne
and
and
and
mov
stos
int
and
cmp
mov
outsb
hlt
jle
cwtl
cmp
pop
and
and
test
xchg
and
pushl
mov
push
or
jg
mov
sub
je
xchg
cltd
test
dec
bnd
cmp
hlt
fistpll
mov
jge
and
adc
je
sbb
bound
add
sbb
js
movl
or
pop
cld
cmp
and
push
mov
sbb
cmp
es
jle
mov
dec
sbb
inc
push
pop
push
mov
xchg
push
push
fisttpl
popf
xchg
sarb
nop
push
loopne
xor
jl
mov
mov
and
pop
fistpll
fdivrl
ret
jl
mov
add
sbb
add
add
stc
inc
add
mov
jmp
add
cmpb
sub
pop
add
movsbl
mov
sbb
test
mov
add
call
cmp
clc
aas
shl
adc
cmpb
je
repnz
xorb
xchg
shr
inc
imul
add
imul
push
inc
mov
lcall
lock
or
and
in
mov
nop
xchg
pop
popa
adc
mov
mov
faddl
stc
xor
ret
pop
sub
sbb
add
add
pop
push
or
or
dec
inc
pop
ja
dec
adc
and
jmp
jne
add
inc
mov
jb
inc
push
push
pop
lock
push
mov
and
popa
or
mov
or
add
idiv
lea
inc
lock
jne
mov
test
cmp
je
and
data16
pop
insl
fsubrs
push
sarl
inc
and
xlat
data16
push
ret
movsl
mov
and
pop
and
cmp
dec
sub
jnp
int
or
mov
sbb
push
xor
in
test
add
push
add
mov
mov
cmp
add
rcr
and
and
fldl
movb
inc
aad
fs
dec
mov
jo
push
rcll
or
movsl
sub
and
cmpsl
cmpsb
sbb
cmpxchg
dec
mov
imul
pop
je
sbb
add
push
inc
add
jmp
pop
or
or
mov
adc
clc
mov
pop
ja
lock
inc
mov
xor
jecxz
mov
insl
ja
lods
or
cmpl
je
cmc
or
in
insb
daa
pop
adc
push
and
pop
push
fisubs
lds
mov
xchg
mov
dec
repz
push
cwtl
fidivrl
insb
dec
jmp
mov
mov
lahf
lods
mov
and
sub
out
mov
or
js
in
sbb
adc
jo
mov
mov
loope
cmp
cmp
inc
jo
ret
es
sub
lock
push
add
adc
pop
pushw
dec
lods
sub
push
mov
das
ret
jae
dec
and
sub
lock
addl
int
mov
and
sbbl
mov
add
add
lock
dec
mov
loope
negl
sbb
xor
mov
jl
and
push
jge
stc
inc
or
mov
repz
dec
or
add
clc
xchg
xor
adc
cmp
pop
in
mov
repz
pop
adc
jl
xchg
sub
mov
jno
lea
lock
push
pop
xor
mov
lds
repnz
mov
inc
je
add
push
stos
stc
gs
adc
push
cld
cmp
ss
je
jmp
push
pusha
dec
mov
nop
fcomps
jge
push
lea
inc
into
mov
pop
or
cld
add
cmp
sbb
inc
fwait
mov
mov
cmc
or
push
push
repz
pop
ja
into
std
or
fldcw
test
test
mov
scas
or
and
xchg
cwtl
ret
dec
dec
pusha
mov
xchg
mov
xlat
pop
jb
push
pop
mov
dec
mov
adc
dec
sbb
nop
lds
cmp
jne
cmp
adc
and
cmpb
leave
sbb
icebp
dec
cmp
clc
data16
mov
or
lods
sub
cld
dec
stc
lea
mov
cmp
pop
pop
cvtps2pi
mov
xchg
pop
xchg
cmpsb
lds
push
nop
jge
rcll
test
nop
jbe
push
jne
int
or
adc
cmp
lock
mov
push
jmp
sbb
sub
adc
lock
jl
push
shlb
jo
jg
mov
or
mov
sbb
adc
lea
push
rolb
sub
repnz
push
in
lahf
loop
lea
cli
ds
pop
push
int
and
pop
dec
arpl
mov
push
out
negl
pop
das
add
inc
sbb
pop
push
push
pushl
hlt
scas
xor
push
jae
ja
mov
mov
dec
imull
sub
mov
pop
sbb
popa
sbb
dec
sub
jp
imul
ds
inc
in
sbb
adc
clc
pop
pushf
stos
cmp
pop
sbb
jle
or
mov
test
sbb
mov
xchg
lods
imul
pop
sbb
cwtl
mov
jnp
shlb
ja
mov
jns
shlb
jnp
stos
pop
jl
pop
insl
and
jne
push
inc
and
ret
iret
clc
loop
dec
sbb
dec
jo
int
dec
push
mulb
push
xor
cmp
push
dec
arpl
and
mov
jnp
xor
adc
pop
mov
pop
cltd
inc
shr
adc
mov
inc
push
pop
insb
inc
pop
in
lret
daa
xor
push
adc
push
inc
fs
inc
and
or
or
mov
add
test
lds
popf
push
push
jecxz
and
xor
inc
sub
cld
jge
jb
sbb
test
test
xlat
mov
mov
lds
cmp
push
cmp
in
mov
pop
repnz
jbe
push
inc
es
aas
push
subb
mov
dec
sub
nop
xchg
mov
inc
sahf
pop
xor
dec
cmp
fs
add
cmp
fcomps
or
mov
pusha
xor
outsb
adc
mov
out
push
dec
push
in
mov
nop
dec
aam
int3
int
nop
dec
les
push
pop
enter
push
enter
push
enter
push
enter
push
enter
push
enter
loope
sub
mov
dec
inc
inc
cs
sub
in
int3
pop
sarb
push
mov
add
push
add
js
mov
inc
jo
pop
mov
pop
sub
ss
push
push
addr16
pop
xor
and
sbb
sub
cmp
test
test
xor
test
jns
enter
filds
xchg
inc
repz
push
inc
out
cld
mov
les
fmuls
mov
adc
dec
sbb
lds
rorl
mov
lds
daa
test
test
jns
enter
pop
inc
mov
or
repnz
mov
jne
pusha
xchg
pop
xor
and
and
inc
inc
cmpsl
jl
inc
mov
insb
push
mov
sbb
sub
out
test
sub
and
pop
xor
sahf
pop
xor
inc
loope
inc
cs
int3
cmp
in
inc
xor
mov
insb
ds
xor
push
or
inc
arpl
jbe
sbb
push
adc
sub
inc
inc
lea
jb
inc
push
push
push
mov
rcll
lea
mov
mov
sbb
sub
mov
lods
jmp
and
pop
repnz
xor
mov
pop
xor
sub
inc
sahf
cmp
fs
sbb
jns
enter
dec
xor
xchg
cmpsb
inc
jne
cmc
stos
cmp
sub
addb
add
insl
subb
and
sbb
ss
int3
lds
mov
jo
insb
dec
call
pop
adc
and
pop
sub
adc
in
or
cs
clc
mov
sbb
xor
pop
lock
or
pop
enter
xor
loopne
ss
in
xor
test
sub
enter
shl
sbb
inc
dec
mov
nop
or
push
mov
xchg
pop
xor
les
lods
add
mov
movsb
pop
xor
test
xor
sbb
xor
xchg
addb
nop
jl
js
pop
jb
ss
je
inc
dec
pop
enter
push
pusha
shrl
pop
mov
jb
dec
sbb
scas
sub
repnz
push
mov
enter
xor
sub
fadds
dec
test
add
pop
or
lahf
jp
mov
loope
mov
xchg
gs
mov
std
cmp
adc
clc
jmp
test
xor
shrb
fisubrs
add
fs
pop
and
pop
in
cmp
mov
jl
test
sarl
adc
pop
daa
in
loope
stc
movsb
mov
adc
push
enter
push
cli
jle
test
fsubl
adc
xchg
cmp
or
jne
mov
push
and
xchg
mov
pop
xor
mov
iret
add
push
inc
nop
xchg
movsl
movsl
lar
jb
in
mov
mov
leave
les
mov
outsb
je
xor
mov
loope
enter
sbb
outsb
inc
movl
mov
gs
or
shrl
repnz
sub
and
add
cmp
sbb
pushf
jno
jae
mov
jge
in
mov
in
dec
and
pop
fadds
xchg
stos
xchg
into
sub
jl
push
arpl
enter
sti
jne
repz
test
or
pop
das
fsubs
je
push
mov
pop
xor
or
jne
mov
repz
fstl
sarb
xchg
pop
mov
mov
add
adc
push
pop
int3
add
xchg
das
pusha
sub
iret
or
and
nop
push
xorb
dec
test
nop
adc
mov
or
and
or
sbb
test
sbb
xlat
xchg
adc
and
sub
dec
xchg
add
pop
xor
jbe
dec
lcall
shll
mov
add
mov
add
add
mov
pmulhuw
and
cmc
pop
push
hlt
mov
fmuls
xor
jnp
in
imul
or
cmp
sbb
mov
out
push
mov
cmp
mov
and
xor
lds
mov
add
xchg
and
mov
pop
jb
int3
mov
and
sbb
bound
fs
adc
test
and
xchg
pop
xor
bound
pop
inc
push
mov
nop
or
in
dec
imul
out
cmp
test
shlb
enter
xor
sub
inc
dec
pop
fwait
sbb
or
sbb
sbb
mov
pushf
or
add
nop
xchg
pop
lds
add
clc
mov
sbb
das
fs
or
in
push
sbb
cltd
nop
daa
pusha
mov
in
or
cmp
mov
loopne
das
fs
jae
push
pop
rolb
enter
in
push
les
mov
push
cltd
jmp
or
fildll
mov
addl
push
enter
shrb
les
jb
adc
adc
cwtl
std
adc
test
xor
xchg
jl
cmovb
mov
and
jb
bound
insb
dec
inc
dec
pop
enter
pop
repnz
xor
or
xchg
pop
jb
or
pop
enter
jg
inc
push
inc
cs
stos
movsl
sub
nop
xor
pop
sub
pop
xor
and
or
pop
enter
adc
or
in
adc
dec
mov
mov
enter
scas
xchg
xchg
or
lods
inc
mulb
push
or
ja
push
and
jb
xchg
call
test
fbld
sub
sbb
dec
xor
test
mov
dec
mov
mov
inc
clc
sub
inc
mov
mov
adc
push
test
xchg
orb
adcb
fs
imul
and
sbb
rorl
and
sbb
icebp
dec
scas
lea
ljmp
int
bound
daa
cmpsb
sbbb
add
int3
ret
movsb
js
sub
pop
sub
mov
fwait
jo
or
mov
or
out
cmp
inc
push
push
aam
push
and
jnp
push
stc
or
out
lcall
dec
int3
call
dec
and
jne
cmpsl
inc
sub
fld
and
and
sbb
dec
mov
je
sub
pop
xor
js
fxtract
inc
negb
adc
daa
cmp
jo
mov
jnp
movsl
xchg
pop
mov
jbe
push
adc
or
mov
ljmp
xor
mov
push
jo
mov
pop
daa
cmp
addr16
xchg
adc
mov
push
jae
insb
xchg
nop
cmp
mov
adc
and
inc
sbb
push
dec
or
adc
jmp
xor
push
push
or
adc
mov
das
push
sarb
sahf
jns
mov
lods
pop
sub
divl
xor
cmp
jns
and
adc
push
popa
pop
inc
mov
sbb
ja
scas
cmp
inc
mov
mov
aas
pop
mov
aad
inc
adc
add
sub
mov
cmpsl
in
scas
pushf
test
push
adc
fcomps
sub
rcrb
shlb
ljmp
sti
xor
sbb
pop
or
nop
sbb
sbb
cwtl
aaa
add
mov
mov
mov
jbe
in
out
sbb
dec
mov
mov
and
mov
movsb
and
arpl
out
push
push
sub
xor
sub
cld
aas
fwait
mov
sub
sbb
popa
ret
fisttpll
js
sbb
sub
dec
jae
add
xchg
push
xor
or
mov
daa
mov
or
or
adc
aad
mov
mov
sahf
clc
and
scas
inc
lock
cmp
popl
pop
jae
push
pop
adc
shll
jns
mov
pop
mov
mov
adc
lea
mov
mov
movsb
mov
mov
sub
negl
mov
incl
imul
fimull
mov
enter
leave
cmp
mov
lea
pop
or
pop
jo
adc
clc
aaa
fildl
aas
and
inc
dec
sub
or
push
cltd
add
es
mov
lods
xorb
sahf
cmpl
cmc
jle
mov
xchg
push
add
push
or
std
leave
popf
nop
adc
sub
divb
mulb
add
je
pop
mov
pop
js
mov
sbb
ret
je
in
psubb
jle
xor
inc
mov
dec
add
and
sti
pop
mov
jle
ret
dec
js
add
push
cmp
inc
mov
dec
movsbl
cmp
jl
cwtl
push
sbb
mov
xchg
fldenv
lahf
mov
clc
jl
js
popa
cmp
push
andb
sbb
adc
rolb
push
dec
or
add
fistpll
cwtl
imul
popf
insb
cmp
sbb
repz
adc
stos
lea
pop
jmp
push
lods
enter
andl
mov
stc
inc
pop
cmp
leave
and
mov
stos
test
add
mov
adc
add
sbbb
mov
push
hlt
push
fimull
sbb
popa
mov
add
jae
mov
jecxz
jle
xchg
mov
mov
or
adc
cld
sub
xchg
ljmp
in
incl
push
dec
mov
jg
fcom
fisubrs
cmpb
jle
imul
pop
push
adc
pop
and
or
and
nop
or
inc
sub
enter
adc
mov
and
sub
mov
fs
push
imul
adc
xorl
mov
jp
push
outsl
pop
sub
xchg
mov
pop
sbb
sti
jnp
jo
ljmp
dec
xchg
push
xchg
or
nop
out
fs
int
jb
mov
and
add
and
sti
jmp
dec
xchg
cld
add
stc
or
jns
cld
add
or
in
bound
jno
and
xchg
cmp
adcb
repnz
loopne
andb
stos
out
jecxz
dec
fadds
fcomps
mov
and
jp
jnp
int
mov
push
xchg
inc
mov
mov
hlt
stos
xchg
mov
out
fadds
enter
and
out
nop
in
mov
pop
scas
xor
xor
and
lsl
jl
popf
nop
repnz
xchg
adc
rolb
push
ficoml
adc
test
test
xlat
test
cwtl
xchg
jg
cmp
movzbl
ds
pop
mov
lock
loopne
stos
jno
test
xor
push
push
test
push
sbb
mov
stc
rorb
lock
inc
mov
dec
xor
jg
test
repnz
sub
pop
push
ja
test
outsb
in
stc
outsl
push
sub
or
push
into
jno
or
scas
or
add
mov
xor
xchg
in
popa
mov
adc
or
dec
inc
imull
enter
inc
or
out
in
rorl
cmp
cmpsl
in
test
inc
pop
enter
cwtl
jecxz
mov
repnz
push
inc
in
leave
dec
dec
add
in
xchg
sbb
les
sub
enter
mov
add
stos
aas
cmp
mov
xor
xor
sub
pop
dec
iret
jecxz
adc
add
aam
loope
data16
xor
xor
lds
ret
mov
call
adc
ljmp
mov
jmp
mov
xchg
ret
das
fs
sbb
or
shr
add
cmp
sub
cmpb
sbb
and
pushf
and
sub
xor
xor
sub
movsb
negl
xor
mov
arpl
adc
jp
loopne
test
ret
and
lret
test
iret
mov
stc
jl
and
shrb
test
retw
mov
add
mov
push
pushf
pop
sbb
jl
dec
mov
xor
je
call
mov
pop
add
xchg
cmp
pop
inc
and
xor
in
jg
ret
jae
jmp
mov
cmp
gs
in
add
popf
rclb
jg
mov
scas
sbb
xchg
jno
jbe
cmp
pushf
inc
push
enter
in
adc
movsb
fstl
in
or
jecxz
pop
sub
sbb
sarl
data16
or
fscale
mov
mov
add
xor
into
outsl
mov
sbb
sahf
push
sub
dec
out
dec
rorb
push
push
inc
xorl
aaa
dec
rcrl
cmpsl
xlat
fcoms
mov
adc
int3
popa
jecxz
mov
aam
and
loop
add
fsubr
mov
push
popa
or
jne
jns
cmpsl
es
pop
ret
dec
jecxz
repnz
mov
xlat
xchg
push
mov
xor
push
insb
cmpsl
lds
mov
cmp
adc
and
or
adc
push
test
sub
sbb
push
dec
jecxz
stos
add
popa
dec
and
add
cmp
jle
pop
lock
pop
inc
mov
aaa
xor
or
pop
pop
add
mov
inc
xchg
stos
inc
push
adc
outsl
gs
adc
pop
jae
cmpsb
mov
cmp
sbb
cmp
push
jge
dec
xchg
inc
xchg
mov
lahf
adc
rorl
bound
pop
sub
sbb
aam
outsb
pop
xchg
test
adc
xchg
xchg
pop
and
mov
in
sbb
mov
mov
add
sbb
je
and
xor
sub
icebp
sbbl
jno
xchg
push
push
loopne
aam
cmp
in
ret
add
daa
in
aad
int
mov
push
and
mov
fnstsw
insl
add
jl
cwtl
roll
pusha
push
mov
imul
arpl
dec
pop
dec
push
mov
xchg
into
add
lret
xor
xor
xchg
or
and
nop
fsubl
test
test
adc
or
jmp
adc
ret
sbb
stos
fsubl
and
ret
push
push
ss
and
or
dec
shlb
ret
aaa
and
mov
je
push
imul
push
pop
add
jmp
sbb
push
fldt
sub
movsb
lds
int3
ret
and
push
and
and
push
addb
addl
insb
or
leave
mov
dec
sub
cmp
pop
pop
das
dec
mov
ss
loopne
lea
mov
test
lds
test
outsb
sbb
inc
testl
insl
outsb
jmp
jae
das
ds
dec
or
cmp
inc
cwtl
movsb
mov
cmp
je
inc
sub
jl
dec
inc
ficoml
pushl
insb
rorl
jne
js
dec
aas
int
jl
mov
je
xchg
or
sbb
xor
adc
inc
jns
movsb
adc
pushf
xchg
daa
loopne
fsubs
roll
test
orl
cmc
push
loopne
shlb
popa
add
pop
lock
or
cltd
jbe
adc
and
jl
pop
xchg
sub
push
push
mov
jno
cmp
mov
push
add
inc
mov
addr16
jl
movb
cwtl
push
pop
or
mov
arpl
arpl
daa
mov
pop
scas
outsb
fnsave
jbe
pop
mov
add
lcall
mov
scas
push
shlb
xchg
pop
mov
mov
pop
and
cltd
cmpsb
pop
mov
mov
sbbl
jne
icebp
xchg
inc
dec
sbbb
cmp
mov
out
inc
je
cmp
inc
pop
call
xor
adc
dec
pop
and
les
mov
adc
pop
nop
iret
cmp
mov
daa
push
jb
aad
mov
leave
mov
call
ljmp
sub
adc
xchg
test
push
pop
aam
pop
push
loop
xchg
shrb
mov
xchg
add
imul
inc
test
dec
push
int3
mov
cmc
insl
cmp
lods
mov
adc
pop
test
and
push
add
int3
adc
mov
mov
fisubrs
jp
mov
push
sub
xchg
sbb
push
popa
jp
dec
mov
scas
push
push
pop
je
add
add
nop
mov
inc
xchg
lahf
outsl
xor
xor
mov
jb
add
push
pusha
mov
jg
into
push
fsubrs
xchg
pop
ss
inc
pusha
xchg
sbb
adc
xchg
push
je
xchg
jbe,pt
movsb
mov
mov
push
movsbl
pusha
mov
mov
lcall
cmp
xor
and
in
mov
push
dec
jno
push
mov
cmp
xor
aaa
sub
add
mov
xor
mov
pop
rorb
les
jno
inc
push
dec
bound
pop
pop
sub
dec
lahf
mov
add
inc
addb
mov
insb
mov
das
inc
or
pop
mov
and
lahf
arpl
sub
or
and
pop
fs
lfs
dec
int3
daa
or
xor
or
pop
frstor
or
xor
inc
lahf
sbb
popf
jecxz
adc
pop
lcall
push
sti
sub
jmp
xor
inc
loopne
inc
in
mov
roll
mov
cld
test
dec
in
xlat
fdivl
sub
aam
repz
mov
int3
sahf
test
mov
jmp
mov
ret
mov
leave
xchg
addb
ljmp
sub
mov
in
xor
rorb
adc
or
and
lods
dec
mov
pop
inc
push
loope
das
sbb
and
cwtl
sahf
aam
ljmp
imul
push
xor
cmp
xor
lret
mov
adc
jne
movsb
repnz
push
subl
push
dec
shl
add
test
int3
aaa
cs
push
repnz
lods
mov
mov
adc
pop
inc
cs
pusha
sub
mov
out
daa
clc
jo
pop
arpl
dec
mov
xor
jb
dec
test
fiadds
pop
pop
mov
mov
nop
inc
jb
sahf
lods
bnd
mov
pcmpeqw
repz
dec
js
push
ret
sahf
mov
incb
xorl
push
ret
push
repz
xchg
popa
sbb
fcoms
jns
loope
loopne
mov
jnp
cmc
sbbb
insl
sub
les
dec
cmc
sub
cmp
inc
lret
and
popf
push
mov
aaa
pusha
add
mov
ljmp
pop
sub
stc
or
shll
cmc
imul
pushf
test
add
or
mov
sar
cmp
call
rcl
popf
cmp
popf
addb
jb
sarb
pusha
jmp
jp
and
mov
outsb
jmp
mov
push
mulb
inc
xor
roll
pop
lock
rcr
loopne
pushf
push
push
mov
adc
pushf
movsb
pushf
inc
bound
dec
jp
cmpsl
je
rorb
cmp
or
or
or
or
fstpl
or
add
movsb
mov
shlb
test
inc
in
and
mov
lds
or
sub
cmp
mov
sub
cwtl
xchg
scas
dec
or
addr16
pop
pushf
loop
inc
repnz
dec
cmp
sub
jl
fnstcw
mov
add
sbb
push
ret
inc
insb
pop
add
pop
sub
inc
rorb
cmp
in
jl
mov
rcrb
mov
mov
inc
repz
or
call
sbb
push
jle
dec
inc
sub
push
push
jnp
fwait
sub
sbbl
aad
dec
or
cmpb
aaa
adc
popf
mov
xchg
inc
or
stos
xor
sub
and
pop
dec
fwait
inc
jb
popa
xchg
xor
lcall
push
insl
mov
cltd
pop
sbb
inc
xchg
inc
and
sub
test
or
nop
sbb
jo
enter
xor
and
cs
mov
pop
adc
cmp
call
jo
jge
popa
and
mov
ret
mov
inc
inc
pop
jns
lea
jae
nop
and
cmp
push
push
or
jns
mov
cs
add
in
lahf
push
std
mov
cld
xchg
sbb
xor
jae
lcall
stos
push
inc
xchg
ret
mov
sbb
jno
pop
sbb
and
or
mov
add
sub
js
adc
movsb
push
push
mov
orl
rolb
or
mov
stc
fnstsw
inc
or
adc
jnp
sbb
sub
fwait
add
or
and
mov
and
push
adc
decb
jno
mov
adc
add
mov
inc
call
pop
insb
sti
dec
push
aaa
iretw
pop
in
int3
or
arpl
sbb
jno
push
lcall
sbb
int3
bound
cmp
xchg
in
cmp
cltd
je
mov
je
dec
mov
sub
in
shll
inc
mov
xchg
pushf
bound
xor
lahf
out
cltd
mov
add
cltd
sbb
push
and
dec
fidivl
mov
std
shlb
push
sub
push
push
add
or
ret
push
and
cmpb
loope
lea
int
rcrb
sbb
push
mov
push
push
inc
jmp
xor
cmp
push
add
add
or
or
jbe
jge
sbbl
adc
je
loope
ss
cmc
adc
add
fistl
and
movsb
movl
and
movsb
pop
or
xor
push
lock
in
cmpsb
mov
jg
push
lods
scas
mov
push
pop
add
sbb
cwtl
in
adc
lea
in
xor
lea
fwait
inc
and
dec
enter
insl
and
xor
add
mov
adc
xor
jns
mov
mov
imul
jne
add
jge
or
flds
fwait
stos
sbb
xchg
aas
jne
bound
andl
jl
xor
push
push
dec
dec
and
and
sbb
add
dec
add
inc
movsb
popf
push
aam
enter
adcl
or
cmp
adc
js
cmp
cmp
push
dec
sub
push
xor
cmp
mov
mov
cmpl
sub
mov
rolb
push
xchg
and
mov
mov
mov
dec
ja
in
into
cmp
andb
and
inc
mov
in
hlt
mov
inc
fisubl
rorb
pop
rolb
in
lock
mov
and
daa
pop
fs
rolb
aam
xor
push
push
push
sbb
sbb
or
inc
jmp
push
clc
mov
push
jne
add
pop
push
xor
xor
dec
or
enter
push
inc
adc
je
xchg
sbb
mov
xor
inc
ffree
lock
lret
push
cmp
cmpsb
sbb
inc
ja
lcall
nop
addr16
push
dec
call
ljmp
adc
sub
test
push
into
clc
sub
and
fadd
mov
sbb
and
popf
loope
jno
arpl
stos
loopne
in
lds
dec
mov
adc
adc
shlb
jecxz
int3
lea
mov
sub
enter
je
push
ljmp
jb
dec
pusha
jnp
leave
mov
ret
sbb
push
frstor
sub
int
cwtl
sarb
inc
fadds
fcompl
xchg
cmp
add
popa
dec
dec
or
pop
sub
bnd
xor
int
mull
out
or
mov
lea
push
or
xor
mov
adc
sbb
xor
mov
pop
pop
jns
add
sti
jge
dec
pop
je
adc
sub
sbb
rclb
rorb
xorb
in
xor
cmp
sub
adc
push
mov
inc
mov
jnp
daa
sbb
lods
pop
aad
mov
or
sbb
aaa
mov
push
adc
repnz
and
jg
clc
or
jmp
mov
loop
lret
hlt
std
in
jne
pop
sbb
sub
and
dec
inc
bound
iret
jmp
ljmp
daa
and
lcall
cmpl
clc
js
cltd
in
and
xchg
imull
adc
cmpsb
or
cmp
jb
push
fsubs
mov
dec
fistpl
add
xchg
movsl
insl
sub
and
iret
mov
pop
sbb
cwtl
loope
push
xchg
inc
mov
mov
push
sub
and
push
push
and
jbe
shl
leave
orl
cld
add
imul
adc
fildl
xor
or
inc
push
sub
in
push
sbb
in
cwtl
dec
aad
jo
call
mov
outsb
xchg
pop
adc
and
mov
orl
mov
dec
jle
add
fnstsw
js
les
mov
bound
xchg
add
or
jno
mov
mov
je
mov
pop
mov
ficomps
sbb
mov
in
sub
aam
inc
cmp
mov
jmp
mov
aam
xchg
push
cmp
pop
lock
pushl
push
push
lods
fimull
inc
xchg
inc
dec
jbe
aaa
xchg
test
sbb
stos
popa
pop
lcall
rorb
mov
jno
sub
fadd
add
sbb
daa
xor
add
mov
or
test
test
or
test
xchg
and
orb
and
ss
or
les
add
or
fildl
sbb
faddl
xor
xor
adc
add
test
out
shll
sub
je
packsswb
xchg
and
call
mov
ja
xorb
pushl
pop
inc
jecxz
in
push
push
xorl
xchg
cmp
jl
adc
cwtl
push
sbb
ret
adc
and
mov
ret
and
mov
xchg
and
scas
ss
xor
push
in
mov
dec
jae
xchg
lock
jb
rdtsc
mov
sti
loopne
jne
mov
leave
xorl
test
fistpl
push
push
notl
pop
adc
add
fwait
sbb
sbb
push
int3
or
clc
or
sbb
add
mov
jecxz
icebp
dec
enter
cli
popf
xchg
mov
mov
popf
ds
push
sbb
pop
mov
pop
loopne
pop
ret
xchg
pop
int
fbstp
jecxz
insb
loopne
loopne
xchg
xor
push
mov
mov
sbb
jae
cmp
push
es
scas
movsb
sub
in
es
and
add
xor
adc
dec
sub
int3
das
adc
cwtl
icebp
test
push
and
pop
fisubrl
mov
fdivl
pop
inc
stos
je
cmp
add
adc
mov
rorb
adc
in
sti
jge
rorb
enter
pop
add
mov
subl
mov
aas
mov
sub
enter
and
push
push
in
mov
stc
pop
lcall
push
mov
leave
in
sti
push
or
leave
push
pop
add
cmpsl
or
adc
movsl
adc
ss
jl
enter
mov
sbb
or
xor
sbb
jle
ja
pushf
sub
dec
push
inc
cmp
fimull
mov
je
jne
add
int
mov
add
idivb
popf
movsb
mov
inc
cmp
jl
andb
jae
jno
ficomps
mov
adc
rcrl
and
inc
andl
adcb
mov
hlt
fnsave
or
add
stos
xchg
mov
cmp
sub
adc
or
xchg
pop
enter
out
daa
mov
test
cmpl
sarl
testb
sbb
jne
sti
arpl
or
mov
sti
idiv
pop
jne
mov
jne
lahf
push
in
outsb
iret
shlb
pop
add
adc
mov
shl
test
cld
and
push
dec
push
adc
pop
es
mov
adc
or
fs
lret
in
rcrl
jmp
adc
cmp
sbb
xor
xor
pop
inc
jbe
sbb
and
es
mov
cmpsl
sub
inc
and
push
lret
dec
add
push
das
cmp
dec
cli
in
aaa
add
add
mov
fmuls
or
loopne
cld
add
adc
push
clc
in
pop
jl
mov
inc
idivl
test
jg
mov
and
pop
pop
ret
or
mov
decl
and
lock
mov
fmuls
hlt
push
hlt
mov
pop
xor
shl
mov
xor
add
je
mov
js
xor
mov
pop
push
fisttpll
adcl
push
add
dec
insb
fxch
leave
ret
xor
adc
push
incl
cwtl
rcrb
andl
fisubrl
je
cs
adc
and
inc
sub
xor
ret
clc
push
sbb
xor
cld
or
add
xlat
jmp
sbb
je
inc
adc
sub
pushl
andl
xor
lret
dec
js
xor
mov
and
mov
xchg
inc
hlt
ret
dec
dec
lret
cmpsb
inc
aad
nop
es
xchg
imul
ret
cmp
mov
test
sub
push
push
sbb
push
mov
lods
les
cli
pop
lret
ss
push
xor
adc
or
xor
and
in
les
jnp
cltd
dec
fs
push
pop
and
jne
jp
inc
pop
dec
in
insb
std
loopne
inc
mov
es
dec
inc
adc
xor
aas
in
ret
mov
pop
sbb
cmp
out
inc
lds
sbb
add
test
mov
xchg
and
aam
inc
lock
adc
jmp
cmp
sub
shll
cmp
or
das
dec
aam
cmp
sub
pop
js
or
hlt
mov
sub
addb
sub
cmp
cmpl
pop
jne
adc
mov
and
pop
xor
ss
lock
and
enter
loop
and
or
cld
jbe
scas
int3
push
inc
ja
cmp
lods
test
movsb
ret
dec
pop
stos
js
sbb
sub
inc
pop
cmpsl
cmpsl
leave
stos
inc
and
dec
push
dec
enter
adc
jb
inc
push
loopne
lds
test
vminps
inc
enter
jb
nop
or
inc
push
sub
sbb
je
lds
lds
fs
es
cmpl
pop
add
sbb
pop
and
adc
icebp
fstpt
mov
les
cmc
jmp
adc
sbb
dec
sub
add
in
rolb
sbb
cmp
lcall
mov
loopne
or
and
sub
pop
std
lea
add
add
mov
sbb
std
mov
mov
roll
jge
inc
shrl
aam
loope
hlt
addr16
sub
aas
pop
ss
push
adc
add
adc
sbb
sbb
imul
xchg
or
lods
mov
mov
or
cmp
test
andb
push
hlt
jne
fildl
movsb
push
mov
out
in
push
or
jmp
inc
sub
sub
sub
adc
cmpl
lds
unpcklps
xor
mov
fistpll
sub
ret
je
dec
xchg
inc
mov
add
dec
frstor
jnp
lods
xlat
or
jmp
mov
mov
aad
jbe
inc
sub
inc
mov
mov
adc
dec
sbb
shll
lods
pop
cmp
jge
outsb
fstps
dec
clc
lods
out
sub
and
sbb
loopne
je
ds
jo
loope
or
in
jge
push
mov
shr
sar
ret
mov
inc
popf
aam
and
inc
shl
inc
add
roll
loope
orb
and
cs
ljmp
jp
fldt
jle
out
cmp
jle
jne
push
or
test
sbb
testb
add
or
fists
loopne
inc
sub
and
sub
ret
mul
sbb
xor
cmp
int3
test
insl
and
jg
push
mov
scas
bound
jge
mov
fcoml
jo
push
add
push
in
push
leave
andb
dec
mov
cmove
mov
fsubl
out
dec
hlt
dec
dec
loopne
cmp
xlat
xchg
arpl
and
push
jnp
subb
adc
inc
inc
loopne
inc
or
loopne
push
negb
dec
std
xor
aas
xchg
cmc
pop
sub
mov
cmp
push
std
or
or
add
mov
inc
inc
mov
cmp
jb
inc
push
cmp
fwait
ja
xchg
sbb
outsb
cmp
enter
lds
scas
lcall
insl
je
or
arpl
mov
faddl
popf
les
cmp
divb
add
pcmpgtb
cmp
daa
cld
jecxz
cmp
cmp
clc
add
pop
fists
jg
push
cmp
or
and
mov
cmp
jne
mov
xor
ja
and
stc
pop
cli
sti
cld
or
std
or
jmp
cmc
test
sbb
inc
cmp
mov
imul
repz
addl
mov
xchg
and
dec
add
stos
mov
imul
jne
push
xchg
mov
dec
ja
jne
xlat
ret
jmp
das
jne
ds
or
or
or
mov
sahf
or
mov
jae
pop
test
xchg
mov
fistps
inc
sub
js
test
jl
pop
dec
ds
cmp
pop
or
call
xchg
shlb
jo
fdivp
aas
cmp
inc
aaa
adc
add
iret
movhps
sub
push
dec
xchg
inc
je
mov
je
sub
add
push
dec
imul
add
divl
jg
pop
cmp
inc
les
adc
subb
push
ret
test
push
or
out
mov
adc
push
sub
xchg
pop
dec
jecxz
pop
cmp
not
inc
push
xor
les
or
xor
fcoml
xchg
sbb
jbe
mov
nop
in
push
mov
pop
pop
pop
pop
cmpsb
add
leave
jne
and
jecxz
inc
mov
add
cmp
add
in
mov
out
std
sti
ss
or
shlb
inc
mov
mov
push
mov
shr
cmp
or
inc
cmove
add
or
adc
xchg
call
xor
push
mov
dec
dec
mov
add
xor
xchg
inc
clc
dec
repz
or
inc
sub
in
std
test
xlat
mov
and
push
addr16
stos
mov
or
cmp
and
push
fs
xchg
inc
fwait
pop
test
mov
jbe
push
or
lahf
cmp
mov
ret
adc
repnz
cltd
jp
inc
xor
lea
xchg
sahf
push
movsl
lods
sub
pop
mov
cmc
pop
or
test
inc
mov
ret
and
or
jle
in
push
push
movsb
xor
or
mov
insb
pushf
sbb
mov
adc
sub
add
mov
sbb
std
inc
pop
cmp
rolb
pop
sub
enter
pusha
sub
aam
inc
ficoms
ftst
enter
sub
daa
push
pop
sub
ror
inc
repnz
inc
sub
lods
orb
push
xor
inc
mulb
mov
je
and
sbb
imul
mov
add
mov
pushl
jo
inc
sub
dec
mov
or
adc
push
mov
adc
clc
jl
scas
adc
cli
dec
mov
loop
xor
or
cmpsl
nop
mov
pusha
jg
mov
sahf
stc
gs
sbb
add
lret
inc
cmp
cmp
je
adc
dec
dec
popa
sub
adc
sub
jge
data16
pop
lock
rclb
sub
daa
push
push
pushf
in
add
mov
xor
xlat
sbb
pop
js
sub
or
outsl
imul
fs
adc
or
add
jb
adc
frstor
enter
pop
or
roll
push
sub
mov
mov
das
xchg
sub
data16
call
xor
jne
icebp
enter
mov
cmpsb
sbb
xchg
test
add
and
add
call
enter
dec
mov
mov
xor
push
andl
cmp
je
push
addr16
add
xchg
pop
fisttpl
pop
sub
cld
cli
je
jnp
imul
add
cltd
jbe
xchg
mov
push
ret
rolb
xor
xor
cwtl
adc
fs
lods
in
sbb
push
in
cmpl
clc
push
or
cmp
in
mov
pop
and
sbb
or
and
outsl
push
aas
int
adc
loop
leave
inc
insl
mov
mov
movl
mov
xchg
mov
addr16
stc
popa
and
fldenv
and
push
sbb
in
leave
leave
je
cld
jne
jns
lods
pop
or
orl
je
push
adc
cmp
cmovnp
push
cld
cwtl
test
ds
loope
call
jae
test
les
leave
xchg
and
cld
jg
shlb
dec
xorps
loopne
cld
sbb
dec
js
loop
inc
mov
test
cmp
or
rcr
leave
arpl
js
daa
mov
mulb
adc
pop
mov
jo
lret
cltd
int3
clc
rcl
mov
pop
xor
aaa
sbb
je
inc
ss
lret
xor
push
dec
jns
or
jmp
add
addr16
movl
scas
ja
test
in
mov
xchg
aad
cmp
jns
add
mov
push
dec
push
in
adc
stc
pusha
jmp
lock
data16
inc
pop
in
sbb
sbb
loope
sub
jmp
pop
inc
mov
inc
xor
and
lahf
hlt
je
test
adc
lcall
sbb
dec
mov
jne
movb
loop
lret
in
in
movb
push
ljmp
mov
sub
push
subb
imul
add
dec
or
mov
nop
clc
les
mov
leave
andl
and
int3
rolb
dec
mov
lock
push
mov
in
int3
push
stos
jne
dec
lret
in
and
dec
mov
pop
dec
mov
leave
hlt
aas
clc
cmpsl
rcl
scas
sahf
enter
clc
cmp
jb
or
push
and
inc
adc
scas
add
sub
push
lods
push
ja
cli
and
sub
sub
and
sub
jmp
or
cmpsl
push
push
fadds
push
inc
arpl
or
add
xor
pop
or
jne
cmp
jo
test
jmp
js
or
dec
mov
xor
mov
int
sub
loopne
add
jmp
xchg
mov
icebp
cmp
pop
xor
orl
mov
xor
ficompl
movsb
and
push
sbb
push
idiv
jg
movsb
or
mov
jb
cmp
ja
mov
push
push
pop
mov
adc
sti
iret
test
pop
ja
jb
cmpl
add
mov
ja
push
inc
inc
cmp
cmp
int
xor
and
daa
int
sbb
sbb
or
cld
mov
pop
sbb
add
adc
adc
nop
adc
xor
test
cmp
xor
dec
pop
sahf
push
cmp
jae
xchg
fbld
jne
xchg
pushf
jo
cmp
in
cmp
and
push
pop
jne
add
inc
mov
jne
jns
popf
out
shrb
and
pop
sbb
xchg
jae
inc
pop
jg
les
cmp
sbb
push
insl
int
outsb
inc
mov
es
dec
jmp
jbe
aas
adc
mov
inc
and
cmpsb
std
mov
inc
xchg
add
sbb
ja
sub
mov
out
aaa
addb
pop
cld
hlt
add
xor
dec
lret
sbbb
enter
aam
nop
pop
add
push
fs
push
shlb
aaa
movsb
movsb
add
push
push
pop
sub
dec
enter
fildl
xchg
xor
inc
fmulp
popf
daa
leave
xor
repnz
clc
adc
xor
stc
aas
int3
xchg
mov
xchg
push
cmc
or
movsb
std
outsb
or
or
stos
rorl
mov
decl
cmp
xchg
into
mov
clc
clc
or
loope
or
rorb
lock
mov
fwait
push
cli
xchg
sti
and
push
add
push
mov
mov
pop
and
add
jne
daa
aaa
outsb
in
les
pop
adc
pop
xchg
jl
xor
shlb
mov
leave
in
in
add
es
mov
aam
inc
cmpsl
lods
repz
movsl
loope
rclb
sub
and
insb
add
insb
lret
sbb
xchg
in
test
push
dec
and
std
outsb
push
mov
mov
mov
cmp
mov
push
dec
push
cmp
xor
sti
mov
into
pop
cmp
jae
mov
es
jb
enter
scas
jns
int3
adc
cmp
nop
int3
sti
mov
call
fstl
insb
inc
and
fbstp
cmp
cmpb
dec
lods
dec
lock
les
aam
sub
dec
mov
sbb
push
fs
loope
stc
and
fcmovb
inc
fidivs
xor
or
add
pop
add
xchg
xchg
loopne
ss
push
out
dec
or
fs
jmp
lods
movsl
fmuls
out
aas
cltd
lcall
scas
test
mov
addb
in
pop
jne
add
pop
aas
mov
in
jmp
mov
inc
es
lock
push
xchg
xor
push
loopne
cwtl
inc
jge
pushf
mov
cli
xchg
out
pop
xchg
push
in
mov
dec
movsl
push
mov
lea
pusha
call
movsl
push
jecxz
mov
test
inc
aam
icebp
les
fs
fldt
loope
sub
mov
mov
cltd
or
scas
xlat
sub
xchg
mov
jbe
inc
add
mov
test
and
mov
std
inc
add
and
movsl
add
ljmp
or
xchg
adc
mov
in
xor
push
jne
xor
rcll
inc
cmpsl
jne
and
sub
adcl
inc
push
push
push
jecxz
jne
push
test
xchg
jns
shll
cmp
pushf
mov
cld
cmp
incb
test
daa
repz
xlat
inc
sub
mov
aad
bound
inc
pop
sbb
push
or
rorb
cwtl
sbb
mov
sub
clc
jne
fisttps
and
sbb
leave
adc
ret
imul
cwtl
loop
pop
inc
loopne
adc
lods
dec
arpl
imul
mov
dec
call
adc
int3
xchg
jl
stos
insb
pushf
cs
loope
loopne
iret
mov
or
inc
imul
aam
sub
push
mov
loopne
test
add
push
jp
popf
sub
add
and
cmpsb
sub
pop
add
inc
cmp
and
lea
push
shr
sub
sbb
adc
mov
push
test
dec
or
cmp
movsb
in
inc
adc
mov
sub
roll
push
pushf
test
or
add
addb
out
dec
aam
pushf
test
pop
push
cmp
pusha
adc
loopne
shr
lret
adc
pusha
pop
jnp
adc
inc
and
dec
mov
lea
xchg
insb
mov
mov
pop
sub
int
fldenv
int
xchg
ret
add
mov
xchg
repz
jo
stc
add
inc
xor
and
jle
or
rorl
movzbl
add
leave
jb
or
push
cltd
jp
pop
push
push
dec
add
jbe
add
imul
pop
sbb
out
and
fs
pop
or
int3
sbbb
and
jg
popa
insl
inc
jnp
jge,pt
add
push
jne
sub
mov
add
clc
mov
add
dec
fwait
and
sahf
syscall
cli
or
mov
out
jmp
push
mov
lods
rcrb
lea
in
xor
lcall
mov
xor
andb
cmovbe
ret
cmp
sub
or
mov
ficoml
movsb
cmpsb
xchg
int
xchg
fstps
mov
or
sub
sbbb
pop
adc
gs
xor
sub
mov
cmp
test
es
sbb
mov
pop
imul
gs
fistpll
dec
sub
mov
int3
jle
pop
sub
sahf
sbb
sbb
rcr
push
pop
inc
and
sub
or
addl
inc
dec
xchg
jle
aaa
mov
pop
mov
dec
jp
add
push
adc
adcb
inc
outsl
push
dec
mov
loopne
mov
cmovbe
pop
mov
cmpsb
xor
je,pt
ficoms
add
in
add
inc
lods
iret
pushf
adc
pop
add
in
adc
aad
shl
jnp
add
dec
jmp
das
loope
pop
xor
dec
je
inc
xchg
mov
mov
inc
pop
ret
mov
pop
xchg
push
and
cmpsl
pop
inc
and
and
or
xchg
cld
cmp
popf
sbb
sub
sbb
adc
xchg
outsl
mov
jmp
cld
int
sub
push
xor
cmp
cmpsl
stos
fs
ja
mov
sbb
bound
and
pop
mov
adc
test
enter
mov
aam
dec
jg
rep
orb
mov
ja
xchg
fisttpl
cmp
loope
loop
cmpsb
imul
sbb
arpl
fs
mov
inc
lods
test
xchg
jl
mov
dec
leave
xchg
shlb
adc
pusha
push
push
loop
or
push
rcrl
lret
in
add
call
aam
cmp
sub
fs
stos
cmpsb
push
inc
data16
nop
mov
xchg
aaa
sbb
jmp
sbb
and
imul
pop
dec
fcoms
xchg
fcoms
andb
and
aam
pop
and
dec
aam
aam
scas
sub
aam
and
movsb
mov
adc
int3
inc
sbb
movsb
mov
push
out
add
xchg
cmpsl
and
and
push
jns
mov
and
jns
jae
popf
hlt
mov
fld
test
xchg
inc
test
pop
sbb
mov
mov
jbe
dec
sub
pop
das
sub
mov
movzwl
cmp
xor
sahf
out
enter
loopne
fdivrl
addr16
call
mov
pop
jle
inc
insl
aaa
mov
dec
popa
imul
fcoml
cmp
addr16
push
mov
inc
push
add
test
lcall
es
in
ja
jmp
je
add
cmp
das
sub
sub
out
adc
xor
test
movsb
and
cmp
cli
push
mov
daa
movsl
sbb
adc
stos
sbb
or
iret
xchg
rclb
out
loopne
xor
sub
mov
push
xor
lock
inc
sbb
mov
inc
mov
mov
jb
imul
mov
sbb
sbb
cld
hlt
inc
pop
mov
push
xchg
in
xchg
lods
and
lret
pop
xor
test
mov
rcr
add
call
stc
xchg
dec
mov
mov
add
nop
lea
xchg
cs
add
jecxz
pop
mov
adc
aaa
sti
inc
inc
cmp
cli
pop
cld
sti
jb
mov
aaa
nop
inc
push
pop
inc
cld
jo
lock
add
in
fcomp
fildll
push
add
push
push
jne
dec
mov
lods
pop
push
aas
add
jne
testl
mov
mov
inc
mov
cmp
dec
ret
push
pop
mov
inc
imul
or
dec
fistl
push
push
lods
or
xor
pusha
push
xchg
test
sbb
cmp
xor
mov
nop
inc
jmp
jle
jg
scas
bound
test
je
cmp
je
or
je
sbb
pop
pop
dec
cmp
arpl
push
lock
jmp
push
inc
add
cmp
jle
adc
mov
lretw
sub
pop
lea
inc
inc
mov
ja
mov
or
test
lock
adc
ljmp
test
jg
mov
pushf
rorb
cmpb
test
push
inc
dec
or
fdivr
fbstp
sti
pop
jne
cmp
in
cmp
lcall
les
dec
decl
sbb
pop
je
push
mov
mov
mov
test
cmp
jl
cmp
jg
xor
and
add
incl
jno
testl
scas
xchg
or
stc
cmp
mov
or
inc
mov
incl
in
div
aas
adc
push
mov
cmp
or
sub
adc
out
loopne
inc
rdpmc
mov
mov
cmp
jne
jmp
inc
mov
mov
out
pusha
leave
jecxz
and
adc
out
push
or
test
push
pop
cmp
pop
mov
jmp
out
mov
jmp
je
sbbl
mov
aam
add
jp
rcrb
pop
xchg
test
fstl
stos
outsl
mov
cmp
cs
add
add
aad
dec
adc
lret
lds
push
test
xchg
je
pop
inc
mov
div
int
pop
jne
movsl
mov
add
xor
in
call
mov
test
xorl
xchg
sbb
je
and
xchg
fistpll
dec
jmp
sub
jmp
or
jmp
lcall
mov
cmp
cltd
out
fld
jmp
sbb
push
daa
ret
decb
pop
inc
dec
je
cmp
xor
data16
mov
and
in
inc
cmp
add
cvtdq2ps
fs
ret
daa
push
adc
inc
andb
adc
aas
out
add
addb
add
fidivrs
mov
divb
ret
push
inc
mov
idiv
cmpsb
xchg
xor
sbb
sbb
and
add
sub
shlb
and
jl
aas
mov
jl
es
lock
sbb
in
or
push
cmp
in
jnp
or
adc
pop
add
das
sub
or
repnz
inc
neg
dec
mov
std
adc
pop
sbb
mov
cmp
aas
sub
jp
push
dec
mov
cmp
push
jmp
sub
push
inc
in
popa
pop
sahf
and
mov
jecxz
inc
cmp
add
dec
mov
pop
ja
je
mov
je
or
xor
std
jmp
scas
sub
mov
jmp
inc
movsb
imul
fistpl
fstl
cmpsb
call
mov
jne
pusha
jne
inc
pop
sbb
dec
cli
and
mov
cmpsb
loopne
decl
jbe
dec
jb
pop
jmp
loop
stc
or
popa
and
pop
fs
aad
inc
jle
cmp
imul
das
test
cmp
ret
cmpsb
mov
in
outsl
orb
push
shlb
rcrl
in
std
xor
inc
add
lods
adc
sub
dec
push
xchg
addr16
dec
add
add
nop
inc
inc
inc
inc
jle
dec
cmpsb
imul
push
sub
sbb
rep
lcall
mov
call
xor
in
lock
fbstp
cld
cld
lea
outsl
add
lock
adc
loopne
push
icebp
mov
cmpl
sub
nop
cmp
repz
bound
test
inc
sbb
loope
xor
je
iret
jl
cld
jmp
fcmovnb
dec
or
lock
ret
rcll
in
mov
clc
jo
nop
or
sub
sbb
fildl
jne
add
in
xchg
mov
aas
add
pop
scas
inc
out
add
push
mov
dec
dec
push
pop
add
mov
mov
lcall
mov
int3
dec
xor
cmpsb
aam
jno
sbb
sbb
adc
adc
xor
rorl
or
add
outsl
pop
dec
add
add
or
jb
mov
sub
das
lsl
pop
pop
dec
dec
adc
daa
outsl
inc
mov
popf
add
std
inc
add
icebp
add
sub
clc
adc
push
adc
mov
cmp
loopne
adc
sbb
in
inc
pop
mov
test
add
ds
rcll
pusha
mov
addl
int
pop
pop
mov
inc
xor
decl
jmp
lea
stos
sub
enter
ret
adc
std
cld
mov
and
push
test
inc
or
add
sub
fcompl
dec
mov
fisubs
push
cmp
lret
je
rep
inc
add
dec
sarl
dec
pushf
or
cmp
adc
test
test
pop
cld
push
popf
das
jae
mov
mov
inc
add
or
fadds
pop
stc
or
mov
cmp
jne
or
cmp
and
adc
add
sub
icebp
mov
sub
rorb
out
scas
sbb
shl
inc
ret
jbe
add
fcmovnu
scas
add
jmp
add
fnsave
leave
rcll
mov
cmp
jg
lea
mov
movsl
cmpsl
test
mov
stos
test
sti
cmpl
movzbl
push
adc
sub
or
inc
push
or
fldl
int3
inc
jmp
sub
pop
neg
sub
sub
jne
push
xor
xchg
fdivs
or
in
inc
add
lea
inc
shlb
iret
cmp
ret
jne
imul
mov
dec
sub
sbb
and
sbb
fisttps
jb
cmpb
jne
or
sbb
fstl
sti
rclb
in
sbb
jmp
sbb
lock
dec
faddl
int3
push
ret
jo
out
push
inc
mov
icebp
shl
addb
add
pop
jle
sub
je
or
jne,pn
aas
xchg
sub
dec
or
lods
das
push
push
iret
out
jno
dec
filds
pop
sub
cmp
jb
daa
in
or
and
and
add
pop
nop
jnp
dec
adc
inc
in
in
cld
je
out
jge
repz
or
adc
pop
sbb
push
bound
jae
lock
je
or
push
shll
and
in
out
adc
sub
inc
push
aas
or
sbbb
mov
xor
or
mov
das
pop
push
jecxz
push
int
mov
rclb
xor
je
xchg
and
addb
rorb
cmp
add
enter
pushf
stc
sbb
inc
stc
mov
add
mov
cmp
add
and
gs
mov
push
cmp
pusha
addl
lret
jp
add
cltd
push
ja
push
test
push
outsb
xor
ret
cmp
sub
adc
or
jo
and
int
pop
stos
aad
stc
pop
mov
inc
pop
cltd
xchg
jmp
lods
movsb
jg
xlat
iret
inc
jo
inc
push
pop
add
gs
dec
add
push
cmpsl
mov
test
mov
fs
aad
test
subb
sarl
test
jge
iret
adc
cmpb
mov
sbb
mov
or
inc
mov
ds
cmp
lock
mov
mov
mov
lret
and
cli
mov
jecxz
inc
add
in
mov
loope
mov
fcmovnbe
mov
mov
into
pop
push
shl
mov
out
add
fnstenv
lods
inc
jmp
fiaddl
jle
mov
push
inc
push
dec
pop
shl
dec
sarl
jne
andb
or
ret
into
mov
and
clc
fmull
cld
je
inc
dec
lea
mov
push
or
fcomps
jge
push
sbb
dec
je
mov
inc
cmp
roll
push
jne
or
push
cmpsl
shl
push
lahf
lock
clc
adc
mov
xor
jg
and
out
shl
mov
and
cmpsb
jne
and
adc
jne
add
clc
mov
mov
cmp
cmc
mov
cmp
je
dec
pop
loopne
out
out
and
fdivrl
fnsave
aam
xchg
pop
arpl
outsb
aad
pushf
xor
std
cld
shlb
aas
xor
jg
ss
cmp
rorl
jl
pop
scas
or
inc
add
push
jmp
mov
cmp
mov
aad
push
jne
andb
mov
jge
jne
lock
xor
js
mov
mov
imul
pop
inc
cmp
arpl
adc
or
pop
ret
jne
lea
loope
scas
loopne
popa
add
loopne
and
add
mov
and
and
fucomip
mov
push
loop
cmp
inc
or
dec
bound
aaa
xchg
add
cmp
int3
mov
imul
mov
add
imul
cmp
dec
or
subl
jl
adc
imul
or
inc
mov
adc
mull
and
dec
clc
mov
cmpsl
and
enter
mov
ss
xor
sub
jle
add
faddl
sbb
das
shr
cmp
jb
mov
jecxz
sub
adc
jl
lods
sbb
and
xor
fsubr
sbb
jl
lods
and
or
js
sahf
loopne
adc
or
push
add
xchg
adc
mov
or
sub
mov
mov
loopne
into
push
add
push
stos
fmuls
mov
test
aas
sub
stc
add
adc
xor
ja
lods
mov
xor
pusha
xor
mov
sahf
or
aaa
test
ret
outsl
pop
movsb
je
mov
pop
jbe
ss
push
dec
push
cltd
test
cmpsl
mov
lahf
adc
in
addl
lahf
pushf
and
xchg
inc
push
nop
lea
cmp
add
cmp
int3
inc
sbb
mov
sbb
mov
add
add
scas
rcll
adc
jbe
cmpsl
fsubrs
ret
movsb
cmp
sbb
dec
mov
shlb
cmc
jae
mov
shr
sbb
inc
and
jle
cmpsl
stos
add
sub
imul
test
jne
add
push
dec
rorb
dec
inc
sub
lock
psrld
mov
sbb
push
dec
fwait
add
ds
es
leave
xor
push
rorl
jne
jnp
scas
faddl
push
mov
push
inc
and
inc
xor
xchg
ffreep
and
pop
or
std
jmp
mov
xchg
add
or
sbb
push
add
fs
movsl
push
sbb
inc
push
sub
rdmsr
add
add
xor
xlat
adc
jbe
jne
sbb
sbb
cmp
inc
mov
lods
enter
jo
pop
push
or
mov
and
xor
mov
mov
pushl
jne
pop
mov
add
add
repnz
add
je
mov
pop
xor
sti
sub
jmp
sti
sbb
punpcklbw
add
fdivrs
jb
jno
data16
sub
js
pushf
aaa
xor
incl
dec
push
xorl
jb
inc
cli
fildl
sub
xor
call
cmp
insb
mov
cmpw
loope
xor
stos
inc
cmpw
push
mov
push
push
and
icebp
pop
test
lds
test
or
nop
mull
pop
push
mov
loope
push
or
xor
dec
icebp
cmp
int
adc
add
pop
xor
mov
movsb
ljmp
mov
fnclex
ret
ret
mov
fildll
test
inc
xchg
rcll
nop
adc
cwtl
sti
adc
roll
push
jo
sbb
call
pop
mov
xor
incb
je
jne
loop
and
push
inc
xchg
rol
test
or
sub
xchg
pop
mov
xor
cmpsb
xchg
clc
shr
inc
decl
xor
pop
xor
jmp
lods
loopne
ljmp
div
mov
ficompl
inc
inc
je
outsl
call
out
shll
cmp
or
cmp
add
mov
cmp
push
fists
jecxz
xchg
fucomp
push
fdivl
push
sub
enter
push
mov
or
cmpsb
mov
dec
jbe
and
or
fadds
push
inc
or
orb
inc
xchg
test
push
sbb
leave
mov
or
sbb
sbb
dec
sbb
outsl
js
cltd
adc
xor
jmp
dec
xor
rcr
dec
fcomi
sbb
or
leave
sbb
dec
dec
lock
gs
pop
push
repz
mov
pop
jp
je
cld
jne
cli
shlb
mov
adc
or
jmp
mov
jmp
mov
push
jecxz
mov
scas
push
sub
pusha
sti
and
cmp
aad
sub
push
pushl
aam
push
or
pop
sbb
and
or
add
add
mov
repnz
xlat
pop
je
sar
adc
cmp
jne
inc
inc
dec
sub
mov
shll
mov
mov
adc
add
cld
pop
or
xor
cld
movsl
inc
aaa
loopne
sub
cmpsl
lds
cld
mov
dec
adc
cmc
popa
sub
fldt
jno
sbb
pop
xor
ljmp
les
lret
sbb
out
jne
or
sbb
aas
and
adc
lea
lret
inc
inc
sub
mov
and
push
imul
shlb
push
adc
cmp
pop
cli
shrb
jl
ret
iret
mov
pushl
icebp
fld
stos
cmp
pop
jge
dec
jp
sarb
xor
int
add
or
or
sbb
add
jmp
mov
dec
pop
sbb
add
or
neg
add
pop
jmp
sbb
add
lods
fst
dec
dec
adc
jp
gs
adc
push
into
or
or
pop
pop
imul
test
lea
push
mov
inc
int3
in
inc
jno
pop
cli
add
adc
mov
rcl
dec
cmp
or
adc
clc
or
push
addr16
add
xchg
adc
xor
pop
icebp
jne
push
xchg
xor
fdivrl
fnsaves
mov
andb
je
xchg
outsl
in
jbe
jecxz
or
xor
push
mov
adc
cwtl
add
in
fs
popa
sub
xor
dec
xchg
mov
ret
adc
cmc
testb
repnz
dec
test
ficoms
ret
cld
xchg
lods
mov
scas
test
adc
xor
or
psubw
sub
je
jle
std
xchg
mov
call
push
pushf
adc
add
add
ja
and
out
mov
add
push
pop
and
cmp
xchg
mov
sbb
inc
add
aad
inc
pop
idivb
cld
fcoms
and
jl
mov
or
loopne
push
lea
cmp
jb
mov
das
sub
cmp
or
and
sbb
xchg
testl
pop
xchg
mov
push
orb
cltd
mov
scas
movb
int3
mov
xchg
adc
stos
push
test
mov
repz
sub
add
sub
add
rolb
push
in
fidivrs
push
orl
jmp
sbb
adc
in
pop
pop
and
mov
ret
adcl
int
adc
inc
pop
pop
je
pop
xor
or
loopne
nop
fimull
cmp
in
sti
icebp
int3
and
cmp
sti
inc
sub
pop
add
or
adc
push
cmp
jns
repz
mov
sub
loope
mov
push
push
mov
cmovnp
push
and
push
dec
ret
push
mov
mov
aaa
cmp
jae
loopne
pop
rorl
adc
fisttps
xchg
or
or
scas
sbb
icebp
shlb
mov
add
ret
cmp
mov
rorl
mov
pusha
cmp
add
cli
xlat
insl
push
scas
jne
adc
ds
shrl
push
or
clc
mov
and
les
inc
sub
jbe
mulb
push
cwtl
insl
fsubrl
stos
ficoml
mov
pop
neg
sbb
neg
ja
daa
mov
add
fnstenv
sub
pop
scas
cmpsl
mov
sbb
arpl
cltd
cltd
in
push
test
sub
cmp
mov
push
inc
jecxz
mov
idivl
ret
aas
je
repnz
sub
mov
dec
repz
mov
cld
mov
cmc
leave
cmp
rorl
daa
cmp
xor
cmc
shlb
or
dec
rcrl
pop
jecxz
mov
push
loope
out
mov
rorb
imul
push
test
pop
and
ret
pop
mov
jmp
pop
adc
add
xchg
rorb
sbb
mov
xor
mov
push
jmp
inc
popa
int
leave
push
scas
push
fcomip
movl
jecxz
aam
push
cmpsl
mov
mov
push
rorb
jle
andb
popa
loope
or
outsl
sbb
loope
add
adc
enter
push
jecxz
pushf
push
int
aaa
mov
fwait
pop
and
les
outsl
scas
dec
push
push
rclb
int3
sti
divl
dec
push
rorb
cmp
xor
mov
ds
aam
or
push
inc
cmp
test
lods
sub
jl
loopne
sub
and
push
push
rcrl
jle
mov
cmp
adc
in
sbb
inc
in
inc
outsl
clc
adc
lahf
xor
push
inc
and
dec
sub
jl
jnp
mov
adc
jge
inc
jne
push
andl
das
fcmovnb
cltd
loop
fmuls
and
mov
jb
xor
fisttpll
test
and
aaa
mov
xorb
aas
xchg
stos
inc
jns
int3
pop
add
mov
fs
ds
pop
jg
xlat
cwtl
push
mov
dec
adc
jle
add
push
bound
roll
jb
mov
leave
clc
icebp
lret
sar
loope
daa
push
inc
ror
adc
sti
ja
cmc
testb
leave
add
jbe
insl
out
mov
dec
or
push
mov
cmc
mov
adc
cmp
push
dec
cmp
jle
pop
mov
movsb
cmpsl
dec
sbb
pop
mov
inc
jmp
jmp
mov
cltd
rcrl
or
rclb
cmp
jl
jl
add
add
push
push
mov
outsl
jne
movhps
test
mov
std
add
xchg
fbstp
mov
add
fsub
in
fsub
ja
sub
sub
cmp
add
pop
inc
dec
pop
pop
lea
sbb
ds
cld
or
add
nop
gs
and
inc
cld
sti
sub
cli
dec
mov
push
lods
imul
add
and
and
int
lea
jmp
stc
mov
push
lock
fldenv
jle
lea
insb
ss
popa
imul
and
adc
fsubs
std
jno
jg
enter
ss
cmpb
jne
inc
inc
test
out
xor
shl
mov
mov
mov
add
cltd
sbbb
test
shll
xor
sbb
cmp
add
test
bound
ret
js
call
movsl
xchg
fidivl
insb
and
xchg
je
mov
xchg
loopne
jmp
cmp
add
sbb
push
sbb
dec
inc
adc
or
mov
add
or
arpl
inc
fsubl
out
rorl
aam
adc
outsb
clc
jns
inc
inc
jmp
inc
int3
add
es
lea
mov
lret
cwtl
iret
sbb
iret
cmp
push
pop
or
out
or
adc
push
pop
adc
add
or
flds
out
hlt
dec
xor
inc
pop
sub
xor
ja
std
or
je
dec
stc
call
je
pop
mov
mov
push
ja
sub
inc
add
add
pop
or
leave
sub
add
mov
insl
or
int
push
faddl
cmp
mov
jo
adc
addr16
cmpl
sub
hlt
ja
xchg
dec
mov
nop
andb
andb
mov
out
add
addb
jmp
dec
inc
pushf
pop
mov
jnp
sub
xor
xchg
mov
inc
bound
xor
cmp
repz
add
xchg
add
std
data16
inc
mov
and
and
cmpb
lea
sti
cmp
orl
in
lret
mov
dec
nop
aad
adc
mov
pop
add
mov
ja
je
mov
imul
push
and
mov
jmp
inc
or
test
movsl
loop
jmp
das
and
sub
test
in
push
add
mov
fiaddl
or
mov
pop
sti
pop
mov
and
inc
sub
pop
fiaddl
cltd
jmp
pop
mov
jmp
inc
shl
fs
loopne
xor
xor
hlt
dec
das
icebp
jg
jl
jae
mov
add
fstpl
scas
adc
jmp
pop
or
jne
addb
and
fs
sti
pop
mov
testl
xlat
jmp
mov
mov
test
hlt
push
pop
or
jns
push
xchg
push
les
aam
dec
lcall
fstpl
cmp
jle
add
in
lods
std
repnz
mov
sub
add
sbb
xor
ficoml
fstp
or
add
inc
dec
shlb
fcomp
hlt
es
sub
loopne
test
es
adc
jmp
mov
adc
je
and
jnp
jb
in
loopne
jne
add
mov
push
push
pop
test
insb
push
in
sub
cltd
cmp
jnp
jl
add
pusha
enter
jge
or
out
je
or
jle
sbb
sub
mov
push
inc
add
xor
mov
adc
mov
dec
mov
or
cmpl
insl
out
pop
add
mov
inc
orb
call
out
adc
movsb
in
ja
inc
add
dec
sarl
repz
mov
dec
add
push
mov
mov
mov
daa
xchg
add
leave
popa
or
mov
imul
or
ret
jne
sbbl
ret
incl
pop
int3
or
les
push
jle
ret
sbb
adc
inc
add
dec
test
shll
mov
ret
dec
jno
es
push
movsbl
push
xor
imul
jne
push
adc
add
add
push
xor
movsb
sbb
flds
push
cld
push
sarb
lea
out
mov
gs
push
mov
mov
and
int3
daa
xchg
scas
popa
sbb
or
rclb
ss
pusha
loopne
mov
inc
dec
loopne
int
imul
inc
inc
add
leave
pop
clc
or
push
and
lcall
push
lret
push
call
mov
or
add
mov
or
xchg
in
add
push
xor
insl
jp
daa
cmp
or
gs
mov
jg
je
or
inc
je
dec
je
sti
mov
inc
jmp
cmpb
jne
or
xor
inc
add
push
loopne
jp
shlb
out
repnz
mov
bnd
insl
push
pop
fxch
je
icebp
jmp
jbe
sti
jmp
decb
sti
cmpb
ss
mov
adc
mov
inc
jmp
pop
mov
aam
sti
rorb
mov
out
ljmp
insl
incb
xchg
xor
outsb
push
sub
std
add
push
jnp
and
movsl
ret
sbb
sbb
mov
xchg
or
mov
fdivr
outsl
jg
ds
lock
insl
xchg
fs
add
mov
addr16
or
fadds
push
and
incb
fisttps
arpl
pop
aam
inc
push
pop
xchg
push
push
das
in
jmp
inc
jle
adc
mov
out
filds
adc
cmp
lahf
and
add
push
mov
pop
pop
mov
add
loopne
sbbb
mov
jb,pn
inc
jbe
adc
inc
pop
mov
cmpsl
adc
push
mov
inc
mov
jge
fwait
mov
jne
push
pop
inc
mov
and
in
push
inc
fistl
mov
mov
sti
mov
xor
mov
movb
insl
xor
jno
inc
outsl
in
xchg
push
daa
and
xor
inc
push
xor
ds
push
cmp
rcll
testb
aas
dec
adc
andb
mov
mov
out
inc
push
mov
cwtl
je
add
xchg
out
mov
xor
loopne
jle
ljmp
data16
inc
mov
jo
mov
faddl
je
stos
icebp
ret
out
and
mov
mov
mov
aas
pop
dec
pop
cmp
jmp
ret
dec
mov
cmp
ret
inc
sarb
ds
cmpb
popf
cmpsl
pushf
add
fldln2
jecxz
and
mov
xchg
sbb
sti
xor
add
pop
js
inc
mov
je
addps
jnp
fildll
outsl
pop
mov
loope
pop
jne
jbe
jmp
sub
lock
jmp
pop
inc
or
pop
and
testl
jnp
mov
or
fs
shll
lret
mov
outsl
pop
inc
cmp
mov
cmp
cmp
std
mov
shll
mov
jmp
ret
cmp
ja
gs
adc
lock
inc
mov
mov
and
mov
add
aas
pushf
mov
or
inc
dec
jne
xor
jmp
mov
sarl
mov
mov
cmp
gs
shrb
or
lcall
xor
ror
push
push
or
test
pop
pop
push
sbb
arpl
loop
xchg
in
enter
mov
das
fildll
mov
add
lret
test
je
pushf
jne
aas
adcl
mov
movzbl
fbstp
sub
push
sbb
cmp
ret
jo
pusha
cmp
xor
aam
mov
or
mov
adc
push
lea
fwait
sub
cmpsb
add
les
jno
push
or
jns
jbe
dec
gs
pcmpeqb
pushf
xchg
jne
jmp
add
enter
add
lmsw
out
xchg
inc
test
fsubl
push
xor
sub
ljmp
mov
lea
push
jns
sbb
push
mov
or
xor
xor
adc
lahf
add
dec
insl
jmp
xor
ja
por
sbb
adc
cltd
add
adc
add
mov
arpl
cmp
cmp
fldl2t
add
dec
fcompl
out
negb
or
add
add
mov
aas
or
cmp
jbe
insb
shl
jmp
lea
shl
push
and
jmp
fwait
je
push
imul
add
mov
jl
shl
push
jb
mov
neg
xor
push
xchg
into
rcrl
rolb
sti
jecxz
push
lret
or
dec
add
adc
cmp
ret
repz
cmp
or
inc
jmp
clc
mov
jns
pusha
xor
call
test
adc
dec
daa
js
dec
jb
dec
push
enter
inc
dec
daa
cmp
add
add
je
outsb
jne
mov
js
inc
loopne
push
test
push
divb
sub
pop
xchg
adcb
das
xlat
into
pop
mulb
insl
pusha
sarb
cmp
cmp
fdivs
sbb
push
jle
mov
nopl
xor
or
ret
out
out
pop
xor
les
sahf
decl
js
mov
adc
mov
push
sysenter
sbb
dec
cmpsl
sbb
inc
in
sbb
add
mov
sahf
xor
xchg
stc
cmc
ret
mov
push
ja
insl
mov
inc
jmp
dec
loop
out
jmp
xor
add
setno
xchg
incb
jg
pop
fucom
mov
push
testl
clc
cld
pop
pop
lea
or
xor
enter
daa
mov
mov
add
push
arpl
pop
mov
popa
cmpsl
pop
xor
je
mov
adc
decl
pop
cmp
je
add
inc
cmp
icebp
pop
loopne
or
dec
add
and
clc
pop
mov
aas
mov
call
clc
iret
mov
sbb
xchg
out
mov
inc
jo
rorb
fdivs
mov
inc
decl
cmp
ja
inc
jmp
sbb
lea
pop
out
stos
lea
andb
lret
je
mov
or
push
jl
and
ja
divl
xchg
push
inc
daa
jbe
inc
inc
das
loopne
xor
adc
mov
pop
cld
add
shll
cmp
sbb
adc
pop
pop
mov
lea
push
movsl
movsl
pop
mov
adcl
repnz
mov
or
sbb
push
jae
test
push
aaa
sbb
sbb
add
fwait
mov
pusha
xchg
sbb
inc
cmp
cmp
ja
inc
xor
cld
sub
sub
jl
bound
aad
sub
jne
mov
cmp
xchg
sub
fidivl
clc
scas
or
je
mov
or
adc
and
cmp
fstps
shrb
das
mov
movsl
xor
fwait
adc
push
mov
pop
dec
adc
ds
add
fiadds
hlt
mov
jge
adcb
and
mov
aas
and
sbb
push
jg
inc
testb
add
stos
rep
inc
inc
and
movsb
scas
mov
test
insl
jo
out
sbb
addr16
push
filds
xchg
mov
jnp
push
cmp
mov
mov
cld
and
ds
jbe
add
test
scas
cmp
mov
add
dec
jle
inc
jmp
xor
mov
cmp
imul
jecxz
mov
mov
and
sub
testb
enter
mov
outsl
pop
xor
adc
mov
mov
loopne
xchg
mov
and
push
dec
cmpsl
adc
push
nop
add
jo
cmpb
pop
inc
lahf
inc
aaa
repnz
adc
and
adcl
dec
dec
adc
cmp
addr16
mov
testb
inc
inc
xor
stos
mov
adc
dec
std
iret
inc
stos
jne
jmp
andb
cli
jge
jp
inc
dec
mov
popa
lea
adc
loop
cmpsl
shrl
pop
pop
mov
ret
cmp
addl
dec
pop
loopne
mov
decl
sbb
mov
nop
add
das
ret
into
sub
dec
rcr
outsb
pusha
push
and
frstor
add
inc
push
and
xchg
mov
in
mov
mov
push
inc
push
mov
aas
cwtl
rol
cmp
lds
jl
call
add
incl
inc
lret
inc
mov
subl
xor
es
pop
or
mov
pcmpgtb
pop
bound
lahf
and
or
mov
test
lods
ds
inc
je
inc
mov
pop
mov
cmp
sbb
lods
mov
ja
push
jns
ja
int
es
add
cmp
adcb
jecxz
xchg
sbb
push
and
and
adc
mov
push
bound
xchg
adc
xchg
std
mov
push
xorl
pshufw
inc
dec
or
ret
push
sbb
mov
sbb
in
in
shlb
adc
mov
testl
add
mov
sti
lea
mov
jae
ret
pusha
sti
push
or
cli
add
pop
fwait
icebp
call
and
mov
scas
incb
or
out
cmovs
cmc
mov
imul
inc
sub
mov
ljmp
add
inc
std
adc
lea
mov
mov
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
dec
jmp
jae
orb
add
roll
add
inc
decb
jne
add
sub
fchs
dec
mov
gs
cmp
inc
push
pop
call
push
insb
add
push
or
hlt
mov
mov
mov
push
or
and
push
daa
rcll
pop
cmp
fsubr
mov
clc
and
sti
add
das
or
inc
dec
dec
pop
cmp
jbe
cmc
in
mov
sub
xchg
and
cmp
je
jb
cmp
mov
jno
cmp
mov
lret
shr
not
and
add
cwtl
gs
lea
cmp
inc
jbe
ds
mov
dec
pop
addl
pushf
ret
rcrb
adc
pop
fdivl
roll
lret
cmp
pop
bound
outsl
or
outsb
xor
dec
pusha
mov
mov
shll
mov
prefetch
push
xlat
mov
xor
pop
or
jmp
dec
adc
loopne
jbe
dec
stos
push
mov
pop
and
push
push
mov
ljmp
mull
fimuls
xor
cmp
mov
add
movsl
arpl
in
popa
fdecstp
push
push
call
aas
gs
push
or
xor
movsb
mov
dec
mov
fldt
decb
adc
inc
hlt
add
mov
and
pushf
inc
mov
mov
adc
mov
inc
daa
dec
jmp
adc
movsb
sbbb
push
and
jg
decl
push
lea
push
jge
lcall
add
sar
insl
or
adc
cmp
adc
mov
push
rcrl
loop
cmp
ja
pop
and
inc
mov
add
cmp
jge
test
test
pop
jmp
ret
loopne
not
call
add
mov
jae
inc
mov
and
decb
push
rol
and
mov
int
jb
push
jne
mov
cmp
dec
adc
add
pop
dec
jae
addr16
or
in
ret
nop
es
mov
ss
pushf
in
test
je
mov
xchg
roll
mov
inc
push
sbb
push
cmp
add
cli
mov
cli
and
pop
mov
inc
mov
and
jns
push
mov
icebp
dec
inc
or
pop
outsl
ret
cmp
and
sahf
clc
cmp
xlat
je
xchg
das
xor
rcrl
scas
into
jne
int
and
pop
test
jl
shl
inc
jmp
mov
stc
xchg
sub
ljmp
add
cmp
jle
pop
in
pop
popa
sub
mov
mov
sub
iret
and
xor
in
cmp
and
mov
decb
jne
repnz
roll
sbb
dec
sub
and
and
cmp
imul
int3
or
or
roll
scas
xor
ljmp
in
pop
push
jl
jle
mov
mov
push
fiadds
or
fs
fsts
fwait
decb
jge
subl
mov
loopne
mov
or
adc
rorl
pop
jmp
push
or
andb
bound
and
or
inc
sub
mov
mov
lods
icebp
mov
add
inc
add
cld
jnp
out
pop
mov
inc
lea
jne,pt
cmp
in
shlb
cmp
dec
cltd
mov
inc
add
add
outsl
dec
push
shll
mov
mov
ret
ficomps
push
cmc
mov
fistpl
adc
or
push
lods
inc
jle
popa
lea
push
insb
test
mov
and
add
mov
jne
fwait
pusha
sbb
mov
push
repz
inc
mov
incl
add
cltd
pop
push
sbb
inc
pop
rclb
xchg
inc
xor
test
imul
add
xor
in
inc
or
push
push
loopne
sti
or
out
jns
pop
adc
adc
out
jge
xchg
add
cli
ja
lea
dec
mov
orl
or
cmp
lock
add
add
sub
sub
cmpb
or
out
fldt
mov
je
dec
mov
dec
or
mov
inc
fs
inc
test
mov
jg
shl
dec
inc
jne
or
mov
xor
not
and
ret
imul
clc
jne
test
dec
jg
xlat
lea
sub
jge
pop
jge
shr
or
cmc
and
mov
mov
cmp
lret
and
inc
add
mov
test
pop
pop
lahf
cmpsb
addps
jae
cmpsl
clc
lea
xchg
out
loop
sub
push
or
das
inc
jmp
jnp
or
mov
or
into
add
inc
mov
lahf
jo
stos
loopne
stos
sar
dec
mov
shrl
pop
dec
hlt
lea
subl
pop
dec
pop
xchg
gs
pop
dec
pop
pop
pop
out
ja
add
xchg
adc
add
and
xchg
inc
iret
lret
jno
test
fisubs
jmp
inc
dec
or
sub
test
in
push
cmpsb
push
inc
xor
inc
xor
cmp
and
clc
add
or
mov
jge
or
sub
jo
aad
xor
and
andb
jbe
mov
adc
adc
mov
sub
xchg
dec
or
arpl
into
je
repz
sbb
xlat
dec
push
sub
xchg
pusha
in
in
bnd
mov
or
aas
push
add
in
or
fstpt
xor
push
mov
dec
add
xchg
xchg
rcrb
push
shlb
ret
xor
into
bswap
rclb
xchg
push
bswap
sub
xchg
sbb
shlb
lcall
xchg
inc
adc
push
lcall
outsb
or
test
sub
fiadds
aad
popf
jmp
aaa
cwtl
xor
add
imul
mov
lock
jecxz
fidivrs
push
sbb
aaa
iret
mov
mov
mov
mov
lea
jge
lea
pshufw
adc
inc
in
mov
icebp
mov
setge
dec
and
dec
inc
mov
dec
bound
std
xor
jecxz
adc
cmp
pop
add
cmp
jae
orb
pop
movl
lock
dec
subb
jnp
jle
inc
pop
fwait
pop
cmp
je
sub
pop
mov
popa
frstor
xor
in
or
andb
jno
fmuls
dec
pop
sbbl
push
jecxz
or
pop
daa
or
test
cmpl
pusha
mov
adc
iret
lock
lods
aas
jb
cmp
mov
mov
sub
jp
subl
fxch
lock
jle
dec
loope
mov
ja
jmp
sub
test
jge
inc
lahf
mov
les
test
es
les
inc
and
or
mov
out
punpcklwd
or
mov
or
popl
pop
or
mov
cmp
jbe
or
dec
pop
decl
cmp
lret
jmp
test
jne
lods
mov
push
and
and
mov
sbb
sbb
sub
sbb
jecxz
loope
or
je
repnz
subb
and
imull
mov
jnp
add
andb
cmp
inc
add
cmp
add
dec
loop
and
adc
mov
and
test
imul
rcrl
mov
cmp
or
ret
ficompl
push
fbstp
cmc
shlb
aas
sub
jl
cmp
jbe
push
dec
cmpsb
xchg
ds
cmpsb
xor
movl
or
mov
daa
dec
jle
test
or
sbb
adc
cld
popf
sbb
in
scas
xchg
xorl
divb
rorb
adc
mulb
test
shll
jo
cli
scas
roll
or
push
aas
fcmovnb
das
and
mov
or
sbb
popa
ljmp
mov
mov
ja
cmp
sbb
cmp
adc
aam
in
je
out
xor
push
pop
std
or
jne
jb
or
stos
pop
mov
rorb
sub
orb
cld
mov
push
ss
inc
cmp
add
aad
dec
movsb
jne
mov
insl
out
loopne
enter
testl
push
sub
or
cmpb
sub
ud2
faddl
sub
mov
xor
xor
jle
ret
sub
or
js
in
fldpi
sub
cmpsl
inc
shrl
push
sbb
xchg
add
lea
inc
movsl
or
push
int
enter
cmp
vshufps
lea
mov
dec
jae
adc
cmpsl
shll
stc
sub
adc
inc
loop
lcall
call
cmpsb
call
sbb
add
loopne
jne
inc
inc
jmp
mov
loopne
aad
inc
jmp
jecxz
lock
sbbb
jle
and
mov
jae
adc
mov
or
or
mov
pop
add
inc
inc
lea
arpl
pop
fadd
or
push
sbb
adc
negl
adc
jae
sub
jb
fists
scas
leave
add
jmp
outsl
push
pop
cmp
lcall
or
bound
cmp
inc
add
cmp
push
push
xchg
cmpb
pop
dec
scas
add
or
lea
jbe
pop
cld
dec
sbb
enter
setg
jmp
xchg
in
pusha
jae
movsl
add
jmp
adc
mov
mov
xchg
jg
mov
cmp
ja
cmp
jbe
push
lock
jmp
xor
push
lret
inc
cmpb
jbe
out
lea
arpl
sub
shlb
mov
xchg
rorl
rsm
rol
add
sub
sbb
mov
add
jae
jmp
out
lea
or
sar
add
inc
xor
je
iret
out
pop
xchg
jno
cmp
push
push
sub
test
cmp
sbb
jns
add
push
ja
push
fwait
xor
cmp
pop
andb
sbb
in
je
push
mov
adc
sbb
and
jno
xor
lods
movsb
mov
pushl
or
sbb
andw
pop
inc
jmp
adc
les
push
in
pop
movsl
adc
enter
sbb
or
and
jo
mov
pop
stos
lcall
cmp
add
stc
iret
aaa
test
xor
ss
pop
es
popa
xchg
rclb
lret
xor
sbb
imul
std
pop
adc
frstor
or
pusha
mov
xor
dec
subb
or
js
inc
cmp
dec
mov
push
orl
std
xor
push
xor
add
push
add
lahf
loope
dec
icebp
sbb
in
pop
mov
fnstenv
inc
cmp
jl
jno
add
outsl
sbb
and
sub
pop
stos
cs
and
ret
testl
mov
pushf
push
iret
sbb
test
mov
insb
or
loopne
mov
mov
ret
xor
aas
mov
inc
stc
sar
cmp
cmp
int
cmp
jmp
mov
and
fwait
pop
pusha
push
into
in
jno
jle
adc
orb
dec
loopne
lds
sbb
mov
sub
mov
std
bound
or
xchg
ret
js
or
dec
add
lds
lods
popa
je
cmp
sarl
xor
dec
fnstsw
into
add
or
iret
rcr
mov
pop
mov
inc
cmp
push
sbb
cmpl
cmpsl
test
jge
sub
je
add
push
ss
scas
dec
cltd
lods
sub
lea
enter
or
jmp
sub
pop
fldl
lods
inc
jne
adc
mov
mov
into
sbbb
mov
lods
enter
enter
bound
cmp
or
fstps
daa
jnp
or
cmp
fs
inc
cmpsb
std
test
ljmp
mov
in
sub
jge
rclb
addl
enter
jnp
std
ss
out
lret
jge
pop
or
sbb
jns
cwtl
mov
fisubrs
lret
pop
add
sbb
or
jg
xchg
jmp
adc
inc
cmp
push
jle
mov
cmp
je
testb
das
movsb
cmp
jl
jmp
mov
jmp
push
clc
push
shl
imul
cmp
cmp
je
in
xchg
testl
xchg
mov
add
out
in
or
pop
pusha
xchg
rcrb
pop
movl
lds
push
das
xor
pop
pusha
shl
test
shr
mov
das
stc
sahf
fwait
sub
mov
test
loop
gs
adc
mov
sub
inc
push
sbb
test
xchg
jecxz
or
add
add
push
sub
cmp
xchg
in
push
pop
jnp
xchg
insb
mov
ror
mov
lods
scas
imull
scas
or
pop
mov
addr16
cltd
rolb
jp
add
out
mov
ljmp
clc
adc
or
jmp
xchg
cli
add
mov
pusha
out
adc
dec
popa
faddl
enter
push
or
xor
adc
add
pusha
scas
iret
dec
pop
jae
inc
add
mov
fadds
movb
inc
mov
jae
push
add
cmp
test
add
xorb
inc
jg
nop
in
adc
mov
inc
mov
dec
add
loope
sub
jne
jmp
movl
or
out
jle
adc
pop
and
addb
mov
adc
add
add
test
std
pop
sahf
cli
push
cmp
add
push
jne
sub
movsl
out
lock
les
ljmp
sub
jecxz
pop
arpl
add
or
inc
dec
add
mov
out
add
add
dec
or
sub
or
pop
add
jle
lock
or
aaa
jle
lea
stc
sbb
outsb
sbb
or
and
repz
dec
ret
stos
inc
in
hlt
sbb
cmp
inc
inc
jb
mov
sar
rorl
add
inc
add
pop
mov
sbb
loopne
repz
xlat
jbe
sbb
jl
aad
mov
lods
addr16
fldl
movl
int
sahf
mov
and
inc
or
lock
icebp
add
mov
imul
xchg
fstpl
pop
fldl
push
outsl
pop
fdivp
jne
fmull
insl
lock
pusha
xor
loopne
jbe
pushaw
mov
and
in
xchg
add
sbb
pop
je
cmp
aaa
dec
aaa
rol
add
mov
movsbl
add
xor
inc
mov
jne
lds
aam
or
xor
inc
mov
xor
xor
lods
mov
or
lret
mov
inc
cmp
and
sub
or
sbb
in
and
jg
sbb
xor
adc
dec
mov
inc
leave
rcr
scas
mov
aad
rorb
mov
jo
pop
loope
jb
sbb
fsubrs
xchg
sbb
and
fs
adc
cmp
and
and
xor
or
leave
cmp
push
fistpll
sub
aaa
lcall
dec
cmp
xor
in
movsb
sahf
std
push
cmpsl
xchg
push
mov
xor
daa
ds
shlb
shlb
jnp
filds
lret
xchg
xor
mov
in
sub
sbb
sbb
sbb
xchg
pop
lock
adc
cmp
add
enter
outsb
shrb
ret
and
dec
jmp
das
fdivrp
cmp
pop
add
jns
neg
daa
sub
adc
icebp
bts
idiv
jnp
cltd
or
movsb
sub
or
dec
enter
stos
es
mov
push
mov
xor
cmp
push
inc
push
lods
sub
loopne
sbb
jns
xor
adcl
jmp
add
js
lock
adc
pop
pusha
add
jne
movb
pushl
jl
push
mov
or
pop
inc
jmp
add
cmp
jmp
pop
adc
pop
mov
and
or
je
neg
jmp
cmc
in
sbb
pop
cmp
jl
push
pop
push
push
fsubrs
pusha
sub
adc
nop
mov
mov
add
loopne
scas
push
dec
adc
or
aad
in
lock
push
arpl
xchg
push
cmp
add
iret
dec
setl
mov
mov
jl
aas
mov
jge
xchg
or
pop
hlt
movsb
fwait
lods
stc
and
push
mov
repz
sub
xchg
ret
les
push
sbb
and
xor
dec
or
jbe
test
in
imul
sub
int
sub
jne
out
pop
mov
insb
mov
loop
sbb
mov
jmp
and
repz
push
cltd
or
or
cltd
popa
sti
jle
xchg
add
adc
sub
pop
pop
push
cmpsl
ret
xor
outsl
mov
pop
dec
or
inc
cmp
jle
xchg
cmp
jb
or
sbb
ss
jle
add
lods
push
mov
mov
xchg
aaa
repz
dec
or
nop
aaa
inc
imul
jp
and
xchg
mov
push
push
shll
adcl
add
push
mov
jns
lods
ss
pop
fsubp
push
in
add
ret
jo
mov
std
jne
mov
lods
adc
cmp
dec
aad
jge
in
mov
jmp
outsl
inc
cmp
mov
jns
cmpsl
shll
pop
in
and
or
dec
arpl
lock
popa
stos
cwtl
cmp
lods
pushf
push
or
test
cld
mov
mov
jo
sbb
jmp
lock
dec
mov
and
data16
fsubrs
call
mov
sub
adc
out
aas
push
jne
loope
testb
je
jge
add
mov
stos
jg
mov
dec
imul
enter
ret
or
and
fmull
adc
sub
gs
fbstp
enter
jo
iret
je
push
addr16
pop
pop
js
push
rcrl
push
cli
stos
fdivrl
push
push
aaa
fidivs
jecxz
repz
push
lea
add
sahf
mov
dec
and
inc
xchg
sbb
add
sub
add
ja
jo
je
adc
pop
arpl
push
inc
pusha
xchg
pop
jne
add
pop
lock
call
jne
incb
push
push
sbb
adc
incb
or
jmp
mov
mov
mov
and
dec
or
adc
inc
push
adc
xchg
dec
mov
or
mov
adc
andb
andl
or
mov
inc
inc
or
mov
and
jg
add
scas
jp
cmpsb
mov
jp
adc
dec
scas
leave
cmp
or
sub
gs
nop
imul
adc
mov
add
pop
inc
cld
sub
sub
add
add
cs
mov
cmp
test
jo
xchg
xchg
cmp
nop
lret
pop
psadbw
push
outsl
sub
dec
dec
push
aam
sbb
loop
hlt
xchg
nop
roll
push
pop
loopne
mov
sbb
fidivs
call
adc
mov
and
sbb
pop
or
push
or
ret
insl
nop
ds
sub
mov
hlt
xchg
nop
fsubrs
fdecstp
ret
loopne
movsl
mov
sar
jecxz
mov
mov
sarl
shlb
cmpb
jne
dec
cli
std
pop
clc
inc
jmp
popa
xorb
movsl
xchg
or
into
and
mov
xorb
push
aas
repnz
push
mov
movsb
and
add
push
loopne
and
orl
inc
arpl
outsb
jae
out
cmpsl
or
or
or
addr16
fdivr
arpl
jb
mov
add
pop
xchg
pop
jbe
int
cmpb
mov
sbb
adc
cmp
push
xor
mov
jb
xor
callw
mov
xchg
pusha
or
dec
stc
add
testb
push
clc
pusha
mov
or
push
xchg
fbstp
enter
inc
or
aaa
add
push
cmp
jge
lea
sub
or
jl
mov
testl
jecxz
nop
sbb
and
aas
pop
cmp
xchg
xor
aas
add
cmp
add
and
popl
add
popf
sahf
mov
push
adc
push
fucomp
xlat
rorl
hlt
push
adc
je
rorb
loope
dec
adc
insb
dec
int
cmpl
fsts
fistl
je
adc
mov
loopne
sbb
adc
lea
pop
ret
testl
je
inc
movsl
xor
xlat
xor
and
fwait
insb
fisttpll
cli
and
mov
rolb
pop
fisubl
jg
xchg
fsub
inc
ds
or
jbe
pop
mov
and
imul
mov
mov
sbb
ret
or
mov
ret
je
cmp
je
inc
arpl
jmp
lea
inc
lods
adc
test
mov
test
jbe
cmp
push
jmp
call
xchg
and
imul
push
pop
adc
fwait
rorl
negl
std
outsl
jne
pop
decl
hlt
mov
xchg
flds
insl
imul
mov
pop
and
fs
ret
adcb
mov
loopne
inc
hlt
test
sub
stc
pop
hlt
sbb
movsl
push
sbb
and
mov
test
add
dec
xchg
rcr
push
push
imul
cmpl
cltd
or
sub
and
add
ljmp
mov
jmp
cmp
inc
mov
inc
addb
sub
and
idivb
push
mov
mov
inc
inc
pop
aad
into
sbb
mov
inc
cmpb
inc
cmp
add
testb
sbb
lret
or
adc
scas
repnz
popa
dec
ja
decw
loopne
jae
or
mov
push
add
sbb
das
enter
add
cmpsl
jo
loope
orl
or
andl
sub
test
sbb
or
cltd
and
leave
mov
jmp
cmp
sbb
sbb
xchg
in
shr
mov
dec
sub
clc
rorl
adc
push
pop
inc
arpl
pusha
mov
add
mov
cmp
je
popa
and
jbe
cs
sbb
push
ss
mov
aaa
jno
mov
lret
add
sbb
mov
andl
adc
das
cld
jo
mov
pop
or
push
jl
out
mov
lahf
or
jecxz
dec
add
daa
cmpsb
sub
push
ljmp
xchg
out
outsl
addl
cmp
out
jge
push
mov
mov
or
sarl
popa
in
clc
sbb
lods
jnp
pop
jg
mov
cmp
je
sub
cmp
and
adc
insb
loope
push
sysret
dec
gs
dec
push
push
push
cmp
aas
ret
jmp
add
popf
add
push
or
cmp
mov
cmp
jae
idiv
or
sub
inc
aad
mov
les
or
cmp
xchg
sub
std
xor
cmp
scas
je
pop
adc
jne
sub
imul
mov
add
dec
and
pop
bswap
inc
and
insl
movb
and
add
add
loop,pn
ret
in
jno
fisttpll
gs
lea
loope
ljmp
call
xchg
lea
mov
jg
dec
jge
mov
outsl
pop
xchg
lea
stc
shll
pusha
or
pmuludq
lcall
xchg
jl
mov
mov
adc
mov
cld
mov
sub
mov
xor
xchg
adc
push
nop
daa
xchg
iret
int
or
or
dec
add
inc
jae
shl
mov
mov
lea
add
jne
test
add
mov
negb
ret
dec
enter
or
mov
cld
mov
push
int
in
ds
sbb
orb
adc
cmpb
jmp
or
jl
pushl
xor
adc
inc
ret
int3
shrb
push
mov
pop
cli
mov
test
jp
jnp
inc
add
mov
xor
push
or
mov
or
xchg
xor
les
xor
sbb
dec
mov
cmp
aas
xor
mov
adc
sti
mov
das
jl
add
ljmp
cli
les
push
adc
ret
popl
call
pop
cmpl
sub
pop
push
or
push
jmp
or
adc
mov
loope
mov
add
add
ret
int3
push
inc
sbb
pop
inc
xor
push
or
inc
orb
sbb
testl
mov
ja
sbb
mov
or
in
pop
andb
jbe
je
push
push
lea
in
mov
or
orb
xor
dec
push
xchg
dec
sbb
add
push
sbb
gs
insb
push
mov
jge
stos
or
or
mov
jmp
sti
dec
lock
jmp
xchg
jmp
mov
inc
xchg
dec
pop
sub
movsb
jge
jne
mov
push
pop
sbb
ret
fs
dec
inc
xchg
sub
imul
add
push
add
pop
mov
scas
and
ljmp
pop
rol
pop
push
jge
mov
adc
je
notl
aaa
pop
inc
cmp
icebp
in
cmp
cmovge
fxch
mov
or
fldl
mov
or
aad
pusha
adc
pop
in
das
movsb
or
push
ja
loop
push
mov
xchg
imul
add
sbb
add
push
jo
jg
stos
pusha
incl
cmpsb
sbb
fidivs
rorl
pushl
push
xor
mov
stos
adc
sub
jmp
lea
dec
mov
cwtl
ss
adc
lea
and
popf
pop
hlt
in
adc
adc
and
cmp
ja
adc
aam
xchg
pop
inc
adc
and
insb
adc
insl
adc
mov
mov
mov
clc
mov
sahf
mov
cmp
jge
mov
and
adc
jne
pop
hlt
add
mov
das
orl
pop
mov
fidivrl
push
ret
xor
test
jb
sbb
in
mov
push
adc
pop
or
clc
adc
jno
in
mov
repnz
rolb
aas
push
and
jp
pop
enter
ret
loopne
cmpb
jmp
or
lock
cmp
and
cmp
cmp
pop
xor
mov
or
pop
pop
push
das
test
lods
pop
popf
icebp
fdivrl
lods
das
int3
dec
push
adc
xor
loopne
pop
adc
sub
xchg
imul
mov
adc
jecxz
fldl
imul
ret
or
rorb
inc
andl
push
jl
add
xchg
rcrl
push
and
pop
mov
cmc
jbe
popf
push
jb
cmp
xchg
cmp
jbe
test
jnp
rclb
fnstsw
jns
xchg
or
push
push
mov
push
pop
sbbl
push
stc
inc
jae
or
jae
shld
shl
dec
ror
and
shl
je
lea
hlt
fimuls
fs
test
xor
mov
jnp
test
jne
xor
and
mov
inc
or
sarb
sub
sbb
mov
jl
push
rol
and
add
out
aam
sar
mov
and
inc
xchg
or
rorb
mov
pop
or
ds
and
jge
and
xchg
fildl
jmp
push
cmc
push
xor
push
shll
or
push
sbb
add
repnz
insb
sahf
xlat
mov
adc
xchg
push
pop
andl
pop
xchg
stos
lret
sbb
data16
lea
lods
les
dec
add
or
or
ret
imul
shrb
xchg
loopne
mov
mov
xchg
add
in
dec
int3
add
aas
xchg
iret
or
js
nop
fisttpl
mov
int3
push
lock
sbb
jns
js
js
mov
sub
jg
or
push
push
fdivs
xor
faddl
adc
fwait
xchg
pusha
jmp
push
pushf
mov
xchg
outsb
aas
adc
shr
nop
fstpl
fstpl
sub
dec
scas
mov
fnstsw
adc
mov
ficomps
dec
push
aam
in
shlb
imul
cmpb
and
sub
add
orl
add
pop
into
and
inc
daa
lods
mov
mov
add
jae
adc
dec
icebp
adcb
clc
cmp
add
loopne
cld
add
cmp
xor
jecxz
movsl
xor
ret
jmp
lret
rorb
jmp
shl
mov
push
mov
adc
and
add
insl
rolb
cmpl
rorl
or
imul
sbb
or
adc
hlt
jmp
or
jmp
notb
movb
xor
xor
or
daa
iret
dec
or
jo
cmp
sti
and
xchg
ljmp
lret
sbb
dec
dec
push
push
and
jle
push
orl
lea
in
pop
lret
inc
cmpsl
testb
rcrl
push
add
ret
jge
cmp
push
shl
pop
jge
pop
and
and
pushf
add
adc
cmc
inc
push
adc
testl
test
push
repz
movb
and
lods
andb
in
out
std
cmpb
test
mov
les
xchg
dec
incl
mov
pop
and
pop
sub
jl
push
sbb
rcll
lret
and
jecxz
fistl
adc
pop
xor
mov
or
je
xor
fadd
sub
mov
pop
int
stos
add
sbb
inc
dec
hlt
jb
add
lret
enter
insl
mov
sub
iret
je
bound
cmp
add
xlat
lcall
cs
add
rorl
push
sub
pop
rcl
mov
imul
push
mov
mov
das
cmpsb
not
and
outsb
mov
or
ficomps
testb
les
mull
push
div
or
mov
pop
dec
push
roll
into
popa
iret
dec
mov
jecxz
loop
mov
sbb
enter
inc
vpmullw
cwtl
xor
test
movsb
mov
shrl
mov
mov
jmp
das
cmp
mov
jmp
dec
or
into
negb
hlt
outsl
sub
lret
or
in
mov
sub
in
dec
lock
add
js
je
icebp
add
or
add
hlt
sub
dec
jne
orl
dec
dec
jmp
insl
adc
mov
sub
loope
in
sbb
lock
hlt
xor
add
cmp
cmp
or
sbb
fs
repz
or
dec
xor
jmp
into
popa
jl
fnstcw
dec
sarl
lock
push
cmp
shlb
or
mov
or
inc
aam
testl
test
enter
or
inc
jns
xchg
shll
pusha
lods
scas
cmc
inc
push
dec
push
add
loop
sarl
imul
and
add
scas
mov
sarl
and
mov
jecxz
and
adc
icebp
sub
jne
or
mov
lds
cmp
or
inc
roll
aad
int
mov
adc
std
ja
insl
pop
pop
test
pop
mov
and
hlt
mov
adc
push
aaa
dec
sbb
or
add
test
or
xchg
mov
inc
aaa
dec
add
adc
into
movsb
cmp
mov
or
or
pop
xchg
add
dec
or
cmp
pop
dec
or
add
adc
test
push
pop
push
lock
mov
pop
sub
lret
call
loop
rolb
addb
and
xorl
daa
sbb
add
jl
mov
pop
nop
lock
cmpsw
rclb
loop
imul
mov
pop
pop
push
mov
lock
add
ss
and
add
js
or
mov
cltd
out
out
imul
sti
and
int3
ret
pop
cltd
addr16
loope
push
mov
cmpsl
and
repnz
mov
loop
mov
lcall
push
sbb
sbb
or
cmp
ret
and
subl
enter
mov
mov
stos
loope
loope
out
xorl
popa
dec
mov
xchg
mov
adc
push
xor
and
dec
or
push
dec
pop
in
jge
push
or
cltd
push
lret
sbb
xor
popf
jb
adc
mov
scas
fs
out
inc
enter
shll
cmp
loopne
sbb
jge
popf
std
arpl
mov
jne
xchg
jge
mov
push
pop
or
inc
jecxz
jb
ds
add
int
inc
in
mov
dec
ret
lahf
xor
cmp
push
pop
rorl
mov
pop
repnz
add
divb
push
or
add
add
and
mov
aas
cmp
out
imul
sar
nop
jno
dec
cmpsb
imulb
pop
sub
in
mov
pop
es
pop
inc
arpl
jns
add
ret
call
inc
add
and
inc
mov
push
cmpsl
inc
aad
dec
xchg
loope
jge
in
push
jmp
cmp
jg
sub
adc
inc
mov
test
inc
sti
lods
mov
xor
div
stc
cmp
jl
movsl
add
orb
dec
mov
mov
aaa
inc
push
sti
cmp
dec
filds
idivl
add
inc
lds
adc
and
cmp
jg
daa
xor
lock
mov
sub
mov
scas
incl
xor
outsb
fldcw
aaa
lock
or
add
inc
xor
inc
xchg
call
dec
jecxz
add
or
je
push
movsb
xchg
fadd
leave
pop
adc
inc
mov
mov
push
xchg
lods
cmp
sar
ljmp
jle
movb
test
mov
jle
sti
xor
repnz
cmp
mov
inc
std
xor
adc
jmp
add
adc
or
mov
shr
cmc
incb
add
loope
add
adc
push
adc
jne,pt
mov
rorb
cld
fldenv
lea
push
jl
inc
adc
cld
movsl
jmp
xor
inc
mov
lods
mov
add
fistl
mov
mov
fcmovb
lods
mov
test
mov
clc
dec
scas
mov
mov
jecxz
mov
sub
rcll
flds
lock
and
setl
adc
xchg
cmp
mov
jg
and
rcrl
jecxz
xor
pop
pop
popf
fs
dec
dec
add
lods
mov
ud2
or
inc
or
or
push
inc
sub
decl
add
mov
shr
or
lea
mov
fbld
xchg
jecxz
jno
jmp
and
iret
cltd
dec
or
cmp
rorl
fidivl
movzbl
jne
or
test
inc
lret
sbb
rolb
inc
push
pop
and
lock
sub
add
cs
inc
pushf
push
lock
or
push
add
or
and
repz
mov
inc
mov
mov
call
sbb
mov
outsl
and
and
outsb
test
lcall
mov
pop
cmp
push
and
sbb
mov
xchg
clc
popa
ja,pn
xchg
sbb
sbb
pop
cs
ja
dec
push
xor
xchg
stos
or
xor
aam
inc
aas
push
pop
popa
xor
mov
adc
std
nop
sbb
mov
loopne
add
in
sbb
add
pusha
cmc
push
daa
pop
xchg
pop
imul
cmp
inc
jecxz
inc
fldenv
add
jl
inc
pushl
xchg
iret
or
pop
andl
inc
jb
add
mov
adc
add
sbb
push
and
add
les
stc
push
or
or
jmp
sub
sbb
push
rcr
outsl
scas
and
add
lock
out
icebp
add
add
jge
add
cmpsl
jge
push
in
mov
dec
xchg
mov
xlat
adcl
inc
jl
add
js
insb
scas
fwait
xor
push
sub
movb
les
popa
mov
xchg
ficomps
testb
inc
adc
mov
std
xor
pop
jmp
ja
add
loop
fisubrl
fwait
xor
add
jle
add
into
jae
pop
pop
mov
int
loopne
adc
or
jo
shll
jle
testl
sub
out
add
das
or
std
or
js
pop
inc
jg
into
add
cmp
cmc
ljmp
test
shr
shl
or
pop
cmp
movsb
pop
push
sbbl
pop
out
jmp
or
out
shr
repz
aas
mov
adc
xor
inc
cld
dec
inc
adc
add
push
jbe
push
sahf
repz
movsl
movsl
push
movsl
push
xchg
mov
sub
push
popa
repnz
pop
mov
xor
stc
imul
idivb
and
not
or
pop
cmp
lret
dec
add
mov
loopne
je
daa
out
adc
loope
mov
lods
add
pushl
add
sarl
adc
adc
cmp
mov
jmp
and
inc
cmp
add
add
and
pop
sub
sub
test
inc
add
or
aam
in
or
pop
and
adc
cwtl
inc
outsb
or
add
imul
push
inc
jmp
push
pop
movsl
mov
or
xchg
testb
add
jl
or
jg
popa
push
add
or
jae
pop
clc
push
shl
add
push
mulb
loopne
push
enter
pop
shrb
loopne
mov
ds
cmpsl
lcall
pusha
out
pop
adc
les
lcall
xor
sub
push
inc
jle
mov
sbb
adc
gs
adc
sti
dec
push
cmovp
dec
pop
add
int3
push
lcall
xor
arpl
pusha
cmp
xor
xchg
or
fldl
xor
push
stos
mov
adc
rolb
cmp
dec
or
push
jmp
adc
cmp
out
lea
adc
repz
jnp
sbb
adc
mov
cmpsl
or
insl
iret
in
mov
or
inc
ret
dec
or
leave
mov
push
dec
adc
ja
xor
pmaxsw
jmp
mov
mov
and
add
mov
test
js
clc
push
movd
decb
push
pop
dec
adc
jmp
cltd
and
mov
sub
je
mov
add
movsb
pop
pop
pop
rdpmc
pop
pop
dec
or
decl
dec
xchg
and
fwait
sub
loopne
lock
push
sbb
filds
inc
mov
je
rolb
jg
lret
mov
test
xchg
imul
dec
sarb
dec
stc
jo
jge
aas
lea
mov
cld
jbe
or
call
jl
incb
hlt
jbe
inc
lret
push
dec
adc
xchg
jns
mov
repnz
inc
movsl
push
out
insb
inc
or
fidivs
ficoms
loope
jno
jge
add
xchg
mov
adc
sub
sbb
sub
cmp
cmpb
mov
gs
sbb
in
inc
leave
aam
xor
mov
inc
into
in
add
pop
cmp
js
jl
sub
shlb
jns
xchg
ret
inc
call
jno
mov
stos
adc
fadds
pop
cvtps2pi
daa
or
pop
mov
mov
push
mov
inc
in
adc
out
lcall
out
sbb
je
xor
mov
and
imul
data16
test
push
inc
sbb
sbb
mov
mov
lcall
pop
int3
pop
in
imul
cs
cmpsb
in
in
out
sti
out
aas
std
adc
icebp
inc
add
mov
sahf
push
idivl
adc
andw
xor
add
add
fsub
ss
or
loope
mov
outsl
jne
int3
jp
adc
test
dec
jns
or
adc
pop
push
and
ficomps
push
and
sbb
adc
add
lcall
inc
lds
mov
iret
inc
jmp
add
adc
out
or
xchg
xchg
fidivs
cli
imul
mov
dec
pop
and
lea
sar
test
movswl
jae
lock
shrb
cmpl
adc
out
outsb
shll
xor
adc
outsb
cmp
and
cmp
sub
movsb
jge
pop
mov
not
out
stc
clc
cli
dec
sbb
or
xchg
mov
pop
cli
sbb
jne
popa
pop
neg
outsl
adc
jle
cmp
dec
xor
jb
jle
mov
jo
mov
icebp
and
lret
test
cwtl
sbb
mov
mov
mov
xchg
decl
out
mov
jne
adc
mov
lea
jl
cmc
jne
push
dec
jmp
cwtl
inc
or
sbb
sub
sub
mov
testl
adc
dec
cld
les
add
andb
jmp
inc
out
add
mov
push
fdivrp
lea
pop
push
sbb
pop
loope
mov
push
incl
jne
and
jmp
addl
leave
xor
or
adc
and
inc
sbb
add
add
mov
mov
push
cmpsl
ja
push
jb
in
inc
iret
cld
mov
ds
and
and
and
lea
dec
push
or
or
add
stc
and
cli
std
mov
aas
ja
cmp
xor
js
and
dec
sbb
push
loope
arpl
inc
outsl
inc
in
jmp
sbb
scas
pop
adc
cmp
cmp
push
cmp
popf
inc
sbb
and
out
jl
sbb
cs
loope
add
test
push
pop
cwtl
mov
cltd
adc
mov
push
adc
add
mov
pop
add
jno
jo
mov
daa
push
dec
dec
sbb
subl
out
jne
cld
sbb
fsubl
jg
orl
jle
popf
out
and
mov
jae
cmp
or
sbb
sbb
clc
push
or
jnp
add
in
adcl
dec
ljmp
mov
jnp
cmp
cmpsl
and
xor
pop
add
loop
loop
push
adc
shl
or
out
jo
mov
por
loop
pop
test
push
sbb
loope
ds
or
pop
push
pcmpeqw
or
out
loop
in
sbb
fistps
ljmp
add
push
lods
add
add
ds
andb
scas
xchg
jp
xchg
lock
movq
addr16
cmp
je
jge
dec
loopne
movsb
mov
or
sahf
js
imul
inc
inc
push
inc
inc
iret
fisubrl
ret
push
int
xchg
pop
icebp
mov
dec
cmpl
nop
push
push
dec
and
hlt
testb
or
test
jl
ret
add
jmp
jbe
cmp
pusha
sbb
jge
pop
sti
pop
ja
or
rol
and
add
pop
add
inc
add
and
aaa
mov
xor
mov
ja
je
push
inc
cld
sub
xor
pop
inc
push
inc
pop
arpl
pop
xchg
pop
int
fcoml
sbb
enter
rcrl
push
gs
inc
add
aaa
loope
push
insl
mov
xchg
inc
sub
adc
xchg
or
leave
inc
adc
roll
dec
dec
cmp
ljmp
jae
iret
in
mov
sbb
xchg
push
or
or
add
push
inc
fninit
sahf
cld
push
jne
dec
out
xchg
pop
push
and
idivb
xor
jae
push
push
mov
iret
and
ss
push
push
push
mov
mov
xchg
fidivl
mov
fisubl
add
enter
aas
mov
mov
ss
xchg
jns
inc
jp
std
or
inc
add
inc
sbb
test
loop
icebp
jb
js
in
mov
mov
lods
movsb
mov
nop
cmpsb
add
mov
aam
xchg
fs
mov
fidivs
push
stos
adc
mov
sbb
aaa
xor
into
xor
push
pop
push
xor
vmwrite
lods
add
or
and
sub
cmp
push
add
icebp
sbb
pop
scas
xchg
add
sar
and
pushf
sub
movsl
mov
adc
or
out
or
jp,pt
jmp
push
cld
push
add
mov
outsb
jne
out
gs
dec
and
xor
adc
pop
addr16
cmp
mov
shlb
dec
mov
xchg
out
rcrb
dec
jge
add
dec
xchg
sbb
xchg
pop
xor
jge
sub
outsl
pop
je
pop
aam
aad
xorb
subl
pop
mov
inc
add
jmp
jno
mov
ss
mov
cmp
lea
insl
push
jnp
or
mov
mov
enter
inc
dec
dec
repz
loopne
sbb
or
and
lea
add
incl
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
xor
fdivrl
jmp
rclb
mov
sub
jmp
xchg
sbb
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
incl
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
incl
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
pushl
iret
shld
sub
mov
and
or
adc
ljmp
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
aas
pop
pushl
lahf
xor
mov
js
stc
test
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
jg
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
adc
lcall
mov
cmp
ljmp
incl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
decl
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
call
lcall
out
imul
aam
loopne
pop
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
jmp
shll
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
pushl
int3
add
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
insl
add
push
or
addr16
jb
add
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
mov
leave
lret
pop
or
adc
sahf
call
jmp
imul
push
js
or
push
addl
pushl
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
or
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
lcall
mov
lret
mov
cmpsb
mov
sarb
sub
push
mov
ljmp
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
add
push
aas
lcall
inc
add
push
add
mov
add
push
add
add
add
xor
sub
push
pop
pop
or
aaa
xor
push
push
pop
push
and
jl
jbe
add
pusha
push
jo
or
sub
iret
in
dec
pop
add
sbb
sub
outsb
add
insb
fistpll
add
repz
insb
insb
adc
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
or
mov
dec
inc
inc
push
inc
inc
cs
push
push
inc
push
push
testb
jae
aas
clc
jle
push
inc
push
push
incl
dec
jae
jb
arpl
jae
jb
gs
je
jb
sbb
fsubr
in
outsb
je
dec
inc
push
dec
xorl
sub
pop
ds
pop
push
in
icebp
push
sti
outsl
pop
ds
mov
jne
imul
mov
pop
shlb
push
pop
push
push
sbb
or
dec
dec
inc
sbb
inc
and
mov
cmp
sub
insb
je
out
xlat
jge
imul
sbb
jo
out
out
outsl
dec
aaa
outsb
outsl
je
or
push
push
inc
data16
insb
cmpsl
imul
sbb
ss
je
xor
rcr
jbe
jb
inc
addr16
arpl
arpl
das
jnp
insb
push
mov
mov
mov
les
xor
out
outsl
jo
mov
or
insl
mov
fs
push
cmp
dec
arpl
mov
insl
test
ja
je
push
outsl
arpl
xchg
outsl
popa
xlat
lock
inc
jb
add
lds
mull
popa
insl
inc
xchg
insl
insl
pop
sahf
loope
in
xor
lahf
and
sahf
cmp
pop
push
cmp
addr16
cmp
jnp
jae
push
xor
faddl
addr16
and
jo
pop
shll
jge
loop
imul
push
cmp
jb
cmp
lods
jns
or
inc
sbb
and
outsl
je
push
test
add
rorl
fldcw
imul
fcmovu
push
inc
gs
pop
cmpsl
mov
jbe
jge
cmpl
fnsave
es
push
dec
fs
das
outsl
sti
dec
in
addr16
outsl
js
xor
push
dec
inc
dec
add
dec
dec
inc
add
cs
jl
mov
push
add
std
mov
mov
pop
push
add
test
mov
xchg
xlat
inc
popf
in
and
bound
adc
nop
xchg
in
addb
jle
add
jg
gs
imul
sti
or
movsb
inc
outsb
je
popa
jae
and
push
push
adc
add
arpl
xor
xor
in
jb
add
cmp
xor
mov
mov
or
pop
xor
xor
pop
enter
adc
push
adc
add
jno
xchg
push
enter
push
push
dec
cltd
add
jg
bound
insb
xor
inc
xchg
pop
push
xor
mov
or
ja
xor
mov
shll
outsl
outsl
insl
jns
adc
jg
mov
aaa
or
nop
mov
js
pusha
dec
adc
push
or
lods
ja
jo
jo
push
push
dec
push
jae
xchg
dec
and
mov
popa
arpl
lahf
sub
lahf
lods
jns
outsb
inc
adc
add
pop
inc
xchg
push
popa
jb
adc
das
sbb
pop
pop
sub
jne
outsb
xor
out
fldt
in
xchg
inc
std
je
jne
aaa
adc
cwtl
push
push
dec
call
or
popa
insb
cmp
and
fs
or
mov
inc
inc
dec
pop
inc
js
insb
outsl
imul
pop
xchg
jae
arpl
push
sahf
add
popa
jnp
pop
cmp
jb
outsb
dec
push
cmp
pop
dec
push
dec
inc
xor
sub
pushf
inc
sahf
fwait
lret
inc
jae
jb
out
mov
idivl
add
rcrl
aas
and
fldl
outsb
test
imul
sti
jae
and
inc
int
insl
dec
pop
pop
int
outsb
enter
pop
push
dec
je
xchg
xchg
mov
sti
push
gs
gs
sbb
cs
out
xor
jp
nop
sbb
ret
aaa
or
movsb
pop
jmp
xlat
or
test
sbb
xor
lock
les
jne
sub
shll
mov
fisubrl
fists
ja
imul
ret
data16
and
sub
mov
arpl
adc
add
addr16
cmp
jnp
sub
sbb
sub
out
imulb
xor
xor
adc
or
mov
dec
dec
inc
push
fildl
lock
add
and
and
pusha
insb
mov
popa
sti
sbb
stos
mov
daa
dec
push
enter
xor
add
inc
incl
xor
mov
jg
or
sub
sub
xchg
mov
rcrl
pusha
adc
jae
sbb
mov
je
cmp
das
je
jg
mov
or
or
dec
pop
loope
pop
add
add
loopne
xor
xchg
cmp
push
rolb
cwtl
rorl
rorl
or
inc
and
in
cmp
cmp
cmp
cmp
add
xchg
push
cmp
lret
cmpsb
sbb
cmp
add
add
in
mov
aaa
pop
cwtl
das
orl
dec
xor
lcall
inc
cs
shlb
das
cwtl
test
push
sbb
sbb
xor
cwtl
xor
inc
xchg
add
sahf
xorb
cs
and
xor
xor
cmp
bnd
shlb
nop
xor
and
das
adc
xor
push
lods
inc
cmp
xor
xor
daa
das
in
fdivl
test
pushf
nop
or
and
pop
mov
xor
sub
das
mov
das
das
mov
fs
cmp
das
dec
sub
pop
jnp
cs
shrb
enter
xor
nop
mov
orl
and
or
jb
and
sub
xchg
dec
mov
push
adc
lock
rcrb
rolb
pushf
xchg
das
and
enter
sbb
int3
sub
dec
gs
cmp
jb
ja
push
dec
imul
and
dec
outsl
jb
gs
popaw
jg
or
and
sbb
popa
jb
sub
orb
jo,pn
in
push
loope
jl
jne
xor
mov
arpl
lds
xchg
pop
js
xlat
outsl
arpl
mov
fnsave
pop
inc
pusha
jg
mov
push
dec
push
dec
pop
imul
je
ja
insl
stos
insl
data16
jo
push
mov
loope
bound
push
insl
jo
pop
xor
mov
or
cs
lods
xor
and
and
xor
jb
scas
inc
in
js
dec
outsb
jae
popa
in
loopne
push
add
fiaddl
jae
pop
loop
mov
xor
mov
scas
fwait
jo
dec
dec
shll
and
mov
cmp
pop
insl
lahf
sub
xor
insl
testl
insb
addr16
push
mov
fimull
aas
push
fwait
les
sub
imul
inc
insl
pop
and
pop
outsb
and
jge
sti
inc
mov
out
inc
andb
pusha
shll
clc
push
imul
bound
mov
push
push
popa
push
sbb
icebp
adc
sbb
pop
mov
pop
cmp
les
push
ja
push
leave
insl
and
push
ret
je
add
inc
push
inc
dec
in
ds
push
dec
dec
inc
dec
inc
outsl
arpl
arpl
cmpl
insb
fsubp
pop
xor
imul
pop
inc
movsl
jo
adc
arpl
xor
lahf
xor
or
push
dec
dec
sub
pop
sbb
sub
and
xor
inc
inc
mov
add
mov
pop
and
lods
mov
addr16
cmc
and
cmp
jb
or
xor
mov
shrl
push
pop
mov
orb
cmp
and
flds
fsubrs
bswap
or
fsubs
jns
test
sbbl
push
jne
jae
imul
dec
xlat
xchg
xor
and
push
mov
add
or
js
dec
mov
mov
and
mov
cltd
xchg
leave
notl
outsl
sub
inc
jb
and
stos
push
dec
add
lahf
fimull
ljmp
inc
xchg
bound
and
dec
jo
mov
adc
mov
imul
inc
jns
insb
mov
inc
ffree
pop
movsl
dec
cmp
jne
jl
outsl
pushf
mov
cmp
imul
dec
adc
imul
mov
ret
or
insl
sub
lahf
call
inc
insb
popa
arpl
push
push
sti
gs
ja
inc
pcmpeqb
mov
les
gs
xchg
rclb
lahf
xor
xor
pusha
fdivrl
je
pusha
clc
xchg
shl
mov
push
dec
dec
das
mov
test
pop
or
sub
or
mov
sub
push
push
ss
cmp
xlat
fstl
adc
lahf
popf
inc
mov
mov
mov
lock
bound
ret
mov
dec
inc
dec
and
cmp
andl
imul
mov
inc
aad
hlt
push
outsb
daa
sub
add
sbbb
xor
push
scas
and
inc
std
and
in
les
test
jo
jae
push
arpl
inc
insb
xchg
xor
jb
adc
pop
adc
popa
sub
ret
fs
pop
push
pusha
fcoms
mov
dec
lahf
or
imul
push
sbb
mov
popf
dec
in
imul
pop
push
and
sub
outsl
daa
mull
jle
gs
shrl
and
addr16
or
jbe
mov
fbstp
xor
bound
mov
jecxz
mov
push
in
aaa
jo
jbe
loope
xor
outsl
inc
imul
mov
sub
mov
sub
xor
popa
inc
jne
loop
push
mov
xchg
dec
subl
loopne
sahf
sbb
push
xchg
addr16
ret
inc
mov
outsl
jne
lea
sbb
call
mov
cmp
sbb
das
inc
add
mov
movsl
pop
pop
xchg
add
mov
aam
mulb
and
pop
sub
pop
xchg
out
aas
bound
adc
ret
cmc
sub
or
inc
push
test
xchg
call
pop
dec
xor
mov
xorb
loop
xchg
incl
cwtl
cltd
cltd
ret
and
cltd
adc
test
jg
call
fsts
movsl
lcall
mov
lea
adc
push
imul
shrb
xchg
rol
pop
popf
fdivrl
adc
mov
jnp
js
pop
stos
push
call
xchg
sbb
cmpsl
adc
idiv
call
arpl
outsb
sbb
adc
lcall
xchg
lret
iret
data16
gs
jnp
int
shl
popf
and
cwtl
repz
sub
mov
lcall
fwait
cltd
sahf
and
pop
adc
popf
repz
lret
xor
fdivrp
sti
aaa
sbb
adc
inc
xor
adc
fbld
sbbb
fbstp
mov
iret
lret
lret
jnp
sti
fisubs
movsl
jb
leave
pop
jno
xor
enter
or
shlb
ja
jno
addr16
in
leave
jmp
cmp
push
cli
fdivr
std
jmp
ljmp
in
cld
sbb
cltd
fsub
lock
out
call
clc
std
aad
sti
jmp
jmp
xor
ljmp
jle
push
dec
fmul
cmp
xchg
sti
lock
cmc
lock
cltd
clc
cli
arpl
in
cltd
pop
push
dec
dec
dec
dec
push
add
mov
or
adc
int
bound
jne
xor
jbe
shr
cs
subb
sbb
mov
mov
stc
add
push
aaa
sti
jnp
jno
repnz
pop
aad
ja
fs
jo
in
and
push
fistpl
adc
add
push
push
enter
add
sbb
shll
jne
or
es
outsb
and
call
lock
and
arpl
stc
je
je
and
pop
rorl
or
mov
outsb
cmp
and
mov
mov
xor
xor
cs
les
add
int
popa
jp
jo
stc
in
sti
jmp
xor
add
xor
xor
cmp
jge
sbbl
int3
repnz
fisubs
es
dec
adc
daa
testb
add
mov
aad
gs
outsl
je
add
push
sbb
xchg
jmp
addr16
sti
xorb
popa
push
in
pusha
add
cs
mov
and
sti
push
push
jb
jae
sub
faddl
sbb
sub
bound
and
jp
xor
mov
fcmovu
iret
jle
jbe
jne
outsl
add
inc
dec
inc
cmpsb
add
daa
add
and
outsb
daa
add
sub
popa
xchg
push
xchg
imul
je
jmp
fildll
and
or
fdivrs
xlat
cs
push
idiv
aas
cbtw
addl
inc
mov
push
sbbl
decl
imul
loopne
imul
push
jg
mov
add
cmp
pop
mov
lahf
call
lret
xchg
mov
dec
pusha
add
adc
in
cmp
push
daa
fwait
idiv
pushl
and
std
int3
inc
fs
mov
pusha
pop
or
lcall
add
sub
adc
outsb
pop
sti
pop
movsl
jb
dec
inc
push
inc
addr16
fnstcw
or
pusha
fiadds
aas
inc
dec
push
add
mov
cmp
lahf
xor
ds
sub
add
or
add
fcoms
pop
inc
les
int
fs
aaa
fs
stos
pop
movsl
xchg
cmpsb
movsb
lods
in
test
out
push
pop
push
dec
shll
inc
and
pop
and
dec
mov
arpl
add
mov
dec
pop
data16
or
adc
push
bndstx
js
or
aaa
xchg
fdivr
jg
fcomps
adc
scas
xor
xor
iret
add
inc
adc
pusha
sbb
sarb
psrlw
movl
cltd
icebp
orb
mov
jp
add
add
mov
outsb
cs
or
das
or
add
loopne
adc
insb
bound
ljmp
mov
int
push
adc
cmpsl
into
push
jbe
pop
and
pop
add
sar
or
and
push
add
xor
in
fbld
outsl
add
and
cmp
add
sub
aam
dec
add
pop
pop
into
pop
adc
int3
loopne
jg
xchg
add
clc
sbb
rol
fstpl
add
pop
movsl
jo
out
je
pop
mov
ret
outsl
lods
cmc
inc
std
std
pop
jo
jo
jo
popa
jo
push
loop
aaa
ja
or
xor
inc
cmpl
pushl
cmpl
jne
add
nop
adc
or
add
or
xchg
xor
xor
adc
sub
lcall
idiv
incl
dec
adc
jl
mov
ja
mov
cmovno
cld
ja
inc
inc
outsl
test
or
push
mov
repnz
loope
dec
inc
das
jae
arpl
das
dec
bound
jae
add
adc
jge
lret
sbb
jns
pop
add
fistps
dec
dec
inc
les
hlt
fstpl
push
push
dec
sub
mov
dec
push
icebp
rclb
jnp
stos
dec
push
jo
imul
cmp
je
imul
inc
aam
and
cmpsb
xor
insl
pop
popa
daa
ret
and
movsb
cs
or
push
fdivs
aam
mov
mov
and
lahf
les
lods
adc
dec
test
loopne
dec
cmp
aad
ror
cmp
jno
fdivs
dec
inc
jmp
lock
sbb
mov
das
adcb
jne
loope
shrb
or
loop
enter
jbe
pop
jmp
inc
sub
aaa
sub
popa
decb
jmp
xor
xchg
sbb
sub
jb
cmp
xor
or
sub
adc
xor
mov
jp
outsl
cmp
sub
mov
data16
pop
cmc
sahf
aaa
inc
cmp
mov
dec
inc
inc
sub
sbb
lret
mov
mov
imul
sbb
es
cmpsl
adc
outsb
jno
inc
pop
sub
sbb
imul
gs
sti
test
xchg
push
data16
cmpsl
push
adc
shrb
movsb
or
sbb
mov
mov
inc
cs
fs
xchg
xor
orl
jb
test
push
add
shrb
jne
sub
sbb
mov
ret
fstpl
daa
movlps
fildll
push
xchg
or
das
sub
mov
pop
push
add
stos
push
pop
add
push
rorb
fildl
fimuls
or
es
adc
je
bound
int
mov
or
roll
or
lock
aaa
xor
jns
adc
arpl
data16
pusha
push
xchg
pop
aaa
dec
push
sbb
lods
arpl
inc
mov
add
or
and
xlat
mov
cs
nop
dec
inc
mov
outsl
inc
add
clc
mov
jne
jo
pop
lock
pusha
pop
jnp
inc
rolb
inc
scas
push
push
orl
dec
outsl
inc
adc
add
add
adc
dec
das
inc
mov
lahf
add
cmpb
scas
mov
adc
add
dec
addr16
xchg
add
aaa
decl
xchg
lret
adc
or
push
push
rol
stos
jns
imul
pop
imul
inc
sub
xchg
jae
inc
pop
cmpb
or
inc
adc
jg
inc
push
and
xor
mov
dec
cmp
inc
daa
loopne
imull
inc
popa
repz
inc
sbb
cmp
adc
jmp
fisttpll
sub
fistpll
adc
scas
jg
ret
sub
and
rclb
dec
or
imul
xchg
jo
push
push
fisttps
mov
lahf
add
dec
lock
mov
dec
push
imul
les
jo
adc
popf
mov
shrl
dec
sbb
fbstp
dec
cmp
cmp
adc
lock
cli
pop
and
mov
jns
jge
rorl
mov
jge
movsb
aas
mov
nop
push
mov
je
push
insl
insb
cmpsl
jno
rorl
outsl
push
dec
sbb
push
lea
sub
movl
or
adc
sbb
popa
test
mov
push
push
fstl
adc
inc
and
dec
push
rorl
and
and
cmp
sti
leave
mov
sub
inc
adc
ds
inc
pop
adc
dec
dec
ds
push
push
dec
mov
inc
movsb
cmp
adc
out
insl
and
jae
and
insl
push
add
xor
imul
inc
push
loopne
push
orl
cs
cmc
aas
shll
dec
and
dec
inc
dec
xor
add
imul
adc
lods
add
pop
hlt
das
xor
jae
mov
inc
mov
cmp
inc
xchg
aaa
loopne
or
sub
stos
lock
das
jae
xchg
push
nop
scas
xor
cmp
jle
das
dec
inc
jo
push
inc
and
inc
inc
sbb
fstpt
outsl
idivb
xchg
xchg
xor
das
or
inc
adc
or
jbe
mov
cs
fmuls
imul
adc
mov
adc
lea
shrl
out
les
sub
shrb
jno
add
xor
sub
imul
addr16
xlat
jmp
jecxz
mov
test
jnp
push
pusha
and
addr16
fwait
xor
jmp
inc
inc
cmc
dec
push
arpl
and
sub
scas
ja
add
stos
sub
sbbb
push
cmp
dec
outsl
insl
movsl
push
movsb
rcr
and
inc
dec
push
in
xor
loopne
popa
jbe
jbe
and
and
inc
mov
and
fs
jbe
lahf
out
sub
pusha
cmp
cltd
push
mov
or
sub
out
sbb
ret
mov
xchg
push
add
daa
andl
mov
iret
pop
je
xor
sub
adc
jno
addr16
push
mov
stos
pop
sbbl
and
push
out
adc
pop
and
sub
lea
adc
or
inc
sub
mov
out
int3
clc
cmp
insl
es
gs
inc
push
inc
pop
ds
sbb
xor
jb
xor
daa
jno
xor
jb
xor
xor
jb
jb
xor
xor
jb
ss
jb
xor
aaa
ja
jb
jb
cmp
cmp
rcrb
jns
xor
daa
jp
xor
xor
jnp
fisubl
add
repnz
or
xor
and
mov
es
xor
and
in
xchg
es
pop
dec
outsl
es
xchg
pop
es
fidivs
pop
sub
pop
nop
mov
repnz
pop
es
nop
xchg
out
sub
nop
xchg
cmp
pop
sbb
and
sqrtps
push
es
add
gs
and
adc
sub
pop
jbe
outsb
push
jg
adc
dec
repz
xor
in
sub
adc
daa
fistpl
imul
es
popa
lods
lea
cmp
cmpsb
adc
ja
adc
inc
adc
je
int
addr16
xor
dec
push
cwtl
add
adc
daa
dec
insb
adc
pushf
xor
cmp
daa
dec
xchg
pop
cmp
add
adc
sahf
inc
adc
jmp
lods
adc
add
in
dec
cli
outsb
adc
push
out
dec
mov
sub
mov
jb
mov
cmp
fcompl
rcr
nop
fisttps
inc
push
push
dec
pop
push
push
mov
pop
or
ja
pop
xchg
dec
sub
push
push
out
fisubl
or
dec
sarb
es
xor
cs
dec
inc
pop
or
sbbb
filds
push
or
sarb
and
inc
jp
or
inc
inc
push
pop
fidivl
es
dec
daa
imul
jle
inc
dec
or
pop
into
pop
or
test
cs
minps
sbb
sub
inc
rcrb
sub
shrb
fs
inc
xor
xchg
inc
sbb
fs
sbb
xor
data16
pop
imul
sbb
sarl
dec
cmp
xchg
jle
or
hlt
xor
inc
cwtl
push
and
mov
enter
out
int3
or
sbb
outsb
add
add
fidivl
test
cli
cs
push
push
into
arpl
jle
add
mov
jo
jmp
inc
jb
sbb
test
jo
mov
fcmovnu
int
push
inc
adc
gs
xor
popa
jbe
ja
mov
push
lods
stc
aas
push
push
push
insb
gs
insl
insb
pop
fwait
outsl
arpl
push
mov
push
inc
inc
sub
pop
jbe
in
push
gs
outsb
jbe
je
jb
inc
movsl
add
bound
push
dec
mov
dec
outsl
push
inc
sbb
jo
push
fmuls
inc
and
pop
arpl
dec
xor
les
cltd
pusha
das
inc
inc
fs
push
fldcw
daa
push
insl
jo
mov
adc
dec
jo
inc
daa
add
and
clc
xchg
jo,pn
insb
jo
pop
sub
mov
inc
cmp
mov
or
push
int3
cmp
sub
inc
aas
cs
add
xor
add
scas
insl
lods
sbbl
xorb
fs
pushf
xchg
enter
fwait
push
dec
mov
push
and
fmul
scas
nop
testl
dec
outsl
bound
pop
insb
daa
adc
pop
sub
sbb
shl
dec
pop
dec
arpl
xchg
fiadds
outsl
pop
inc
outsb
inc
out
mov
push
icebp
loopne
lods
mov
dec
outsl
jp
insb
popa
das
xor
sub
pop
cwtl
mov
push
fcoms
daa
push
mov
dec
add
outsl
dec
jb
push
jb
inc
daa
insb
mov
or
data16
adc
movsl
sub
daa
or
fcmovu
data16
ja
push
xchg
cwtl
xchg
cld
jns
inc
xor
aaa
jbe
adcl
xchg
xor
mov
inc
add
mov
cmp
push
xchg
iret
bound
pop
fucompp
lds
cmp
movsl
inc
push
ljmp
mov
push
xchg
aaa
out
aad
jbe
pop
push
aam
inc
stos
je
movntq
mov
outsl
rorl
jae
push
fisttpll
push
nop
pop
inc
pop
sarl
jae
mov
mov
lds
and
ret
jo
gs
sbb
push
outsb
push
dec
fs
pop
sbb
push
testw
push
inc
xchg
arpl
push
push
push
xchg
and
dec
lods
pop
cmpsb
cmp
bound
pop
inc
insl
inc
call
je
xchg
lahf
mov
js
inc
insl
add
push
popf
mov
sbb
scas
outsl
out
mov
mov
pop
ja
movsl
outsb
fisubs
fs
sbb
push
cs
movl
jne
jns
sbb
scas
push
in
lcall
cmpsb
sub
sub
mov
mulb
and
call
sahf
sbb
push
sub
add
iret
push
push
outsl
push
mov
mov
dec
outsl
movsb
adc
jo
jne
pop
and
inc
imul
adcb
outsb
or
mov
arpl
cmp
push
fcompl
and
addr16
test
or
pop
outsl
scas
test
adc
imul
adc
in
push
xchg
inc
jle
push
cmpsl
push
ret
movsb
and
js
popa
jae
add
sbb
fs
adc
popa
ja
add
sbb
cltd
mov
mov
popa
adcb
into
jmp
pushl
fwait
xchg
or
jb
inc
mov
xor
pop
das
sbb
mov
or
fstpl
sub
ret
aaa
sub
push
fnstcw
dec
int
daa
movsb
pop
popf
call
sub
insb
push
add
jae
mov
ljmp
clts
push
sub
pop
inc
xchg
sbb
dec
pop
sub
dec
mov
push
movsb
lods
pop
inc
jns
jmp
cmpl
push
es
cmpsb
out
jg
adcl
es
ljmp
lea
cs
lods
jbe
scas
dec
xor
gs
jo
xor
stos
lods
ret
xor
cmpsb
xor
shll
dec
pop
push
das
push
add
push
daa
xor
popf
fidivl
add
fdivs
call
ret
dec
divl
testb
insl
dec
sub
xchg
sub
jnp
cmpsb
lret
jne
push
mov
jg
jo
adc
sub
das
arpl
andb
cmp
pop
or
test
adc
test
idivl
and
jbe
mov
and
pop
dec
jae
cwtl
mov
add
adc
bound
sahf
and
orb
sub
dec
pop
inc
pop
pop
out
shr
inc
inc
and
cs
sbb
les
mov
mov
mov
sbb
add
imul
add
pop
jbe
cmp
inc
adc
push
push
or
push
push
imulb
je
inc
cli
scas
xchg
test
cmp
mov
mov
pop
push
push
int3
les
int
int
mov
movsb
dec
shll
test
in
inc
shll
insb
add
adc
loop
ja
pop
sub
mov
fs
fnstenv
and
scas
sub
jb
clts
xor
fcompl
scas
nopl
mov
push
mov
pop
xor
cmp
sbb
and
mov
cmp
into
xchg
sub
mov
push
dec
cmp
push
push
aaa
adcl
sub
pusha
sub
xchg
jb
dec
xor
loope
mov
adc
mov
dec
dec
pop
xchg
cmpsl
mov
cmpb
cmc
cmpb
test
dec
dec
add
sbb
add
and
fimull
lret
sub
fs
pusha
cmp
mov
jb
clc
inc
cs
pusha
inc
push
ljmp
sarb
fs
mov
push
arpl
test
jo
mov
mov
mov
or
adc
mov
inc
shlb
jae
inc
push
inc
imul
test
pop
dec
stos
mov
outsb
popa
inc
addb
cmp
dec
popa
nop
cwtl
sbb
sbb
xchg
jbe
inc
add
shll
sub
loopne
xlat
push
push
or
rcrb
xsaves
fld
pop
adc
and
jno
popa
insb
or
jne
or
dec
imul
jne
push
xor
ret
jo
xchg
pop
je
push
fimull
int3
out
mov
mov
arpl
add
adc
or
mov
fdivrs
xchg
or
cmp
pusha
arpl
fs
mov
xchg
cmpsb
push
mov
xchg
loope
and
or
shll
push
xchg
mov
sub
inc
mov
inc
test
mov
sub
add
push
push
mov
out
and
mov
xor
pop
stos
xchg
sti
test
dec
dec
lods
addr16
sub
je
mov
add
xlat
adc
push
rorb
das
pop
push
dec
add
imul
xor
sbb
pop
inc
es
ja
or
xchg
dec
jae
jb
js
dec
int
add
add
insl
adc
sarb
aaa
add
mov
pusha
xchg
adc
xor
or
lods
cmpb
cs
mov
icebp
jo
or
mov
cmp
shlb
xor
or
xorl
jae
xchg
mov
addr16
sub
push
and
push
insl
mov
inc
xchg
push
aas
aaa
roll
jmp
aas
scas
or
push
xor
aam
adc
out
and
pop
daa
xor
lods
mov
aaa
jne
inc
fidivl
lods
cmpsb
add
fs
insb
inc
test
les
sbb
movsb
sub
movsw
mov
mov
xchg
stc
in
fcompl
and
stos
mov
leave
add
xor
inc
cmp
sub
push
mov
adc
orl
jne
inc
insb
movsl
lea
popa
ret
pop
out
cmp
mov
sbb
pop
mov
mov
and
mov
xor
xchg
dec
mov
add
into
jne
ret
push
loope
push
cmp
inc
outsb
or
aad
sub
orl
mov
js
push
and
adc
shll
pusha
adcl
or
add
cmp
pusha
adc
mov
add
mov
shlb
adc
mov
jne
adc
outsl
les
ret
mov
bound
mov
outsb
jo
orb
int
sbb
and
or
jge
jns
cmp
sub
popa
dec
test
dec
jo
test
adc
jae
pop
movsb
cmpsb
or
rorb
std
add
clc
pop
pusha
insb
jns
adc
sbb
sbb
inc
xor
inc
movsb
movsb
push
and
mov
sbb
or
mov
mov
shll
and
push
sbb
test
pop
and
dec
fidivs
and
cmpsl
xchg
adc
adcb
sub
movsl
into
jb
pop
loopne
subl
les
mov
push
dec
sub
int
and
mov
int3
mov
jne
and
or
jmp
out
mov
out
adc
or
cmp
sbb
add
sub
jno
inc
xlat
xchg
pop
push
cmpsl
addr16
mov
ljmp
push
and
ja
jnp
cs
cmc
xor
daa
imul
or
xlat
and
ljmp
push
ss
cmp
push
sbb
pop
xchg
adc
xchg
repz
or
fdivrs
jl
imul
outsl
or
cmp
cs
sub
movsb
or
fwait
out
dec
sbbl
jge
xchg
sbb
stc
pop
cld
outsb
bound
push
push
dec
inc
dec
popf
mov
dec
mov
adc
popa
lods
push
iret
mov
fsubs
push
push
and
cs
fsubr
xchg
xchg
sub
jns
push
xor
xchg
push
pop
pop
xor
icebp
cltd
subl
inc
inc
aaa
cmp
popa
push
sub
and
push
outsb
in
cmp
mov
inc
mov
outsl
xchg
outsl
xor
xor
in
std
xor
pop
xor
jle
push
or
rcrl
inc
add
aas
scas
out
sub
jbe
jle
jg
push
xor
cmp
imul
pushw
add
add
sub
imul
or
and
data16
xchg
xor
popa
xor
imul
cmc
insb
dec
inc
lods
dec
imull
dec
xchg
orb
dec
pop
push
in
inc
and
inc
push
xchg
mov
dec
xchg
add
aam
push
dec
inc
call
test
movsl
mov
lods
lahf
inc
aas
mov
aad
xorl
mov
cmp
mov
jb
das
sub
adc
test
inc
test
inc
and
inc
enter
sub
test
sub
adc
pop
adc
test
enter
loop
xor
stos
jge
add
sub
or
inc
inc
and
xchg
or
sub
inc
xchg
and
cmp
aas
daa
xchg
and
sbb
cs
fs
inc
or
inc
and
inc
xchg
or
sub
sub
pop
nop
and
aas
or
inc
xchg
pusha
xchg
cs
push
das
sbb
nop
and
jae,pn
jl
rorl
das
cs
pop
das
and
repnz
enter
xor
push
mov
inc
xchg
das
and
lods
inc
jmp
and
and
mov
or
dec
and
stc
sbb
push
dec
dec
inc
dec
pop
cs
push
inc
push
add
add
inc
pop
and
das
xchg
int3
rolb
push
sbb
xchg
push
add
push
mov
das
jns,pt
insb
pop
insl
mov
jb
pop
add
add
ret
pop
cs
dec
dec
add
push
push
mov
std
outsl
imul
das
add
in
and
jecxz
and
mov
push
insl
inc
inc
or
nop
or
cmp
add
jne
jo
arpl
sbb
mov
test
sub
fisubl
filds
notl
push
or
mov
or
insl
push
jge
dec
sbb
add
xor
add
push
or
pop
add
dec
dec
jae
and
int
mov
xor
addr16
je
imul
push
inc
outsl
sbb
js
and
xor
shrb
aas
jnp
fs
cmpsb
loopne
xchg
pop
adc
adc
outsl
ret
pop
dec
inc
arpl
aas
pusha
pusha
cmpsl
fsubrl
inc
inc
pop
jecxz
pop
pop
pop
jl
sub
cs
xchg
out
imul
pop
rolb
xchg
inc
push
mov
cwtl
js
dec
shlb
outsl
pop
push
jo
mov
pop
pop
add
dec
dec
inc
cs
push
push
inc
dec
ja
test
cmp
and
jae
iret
push
cmp
sub
sbb
xor
cmpsb
adc
jb
jns
shll
lock
xor
int3
sarb
add
dec
imul
xchg
mov
dec
je
insb
push
cmpsb
imul
sub
imul
rcrl
push
call
cmpsb
imul
mov
cmpsl
dec
shll
pushf
xchg
nop
mov
push
dec
rorl
xor
popf
xor
and
adc
scas
add
xor
mov
cld
xchg
clc
hlt
lock
lcall
fcom
enter
cmpsb
imul
push
pushf
xchg
nop
mov
cmpsb
js
push
xor
rorl
sub
dec
shll
add
pop
mov
xchg
xchg
hlt
call
lcall
mov
mov
test
jae
cs
xor
imul
xor
sarl
xor
popa
shll
add
mov
xchg
mov
aas
iret
repnz
fwait
subb
in
rol
push
adc
bound
mov
loopne
xchg
ret
push
jbe
das
jo
in
call
push
jno
cmpsb
pop
insb
jno
test
mov
inc
testb
bound
shl
xchg
outsb
outsb
xor
mov
pop
mov
outsl
bound
xor
xor
push
add
push
mov
fwait
lods
insl
getsec
pop
bound
outsb
pop
es
out
push
mov
fcomp
pop
aas
pop
pop
pop
jnp
or
outsl
push
push
into
lock
jne
bound
push
xorl
xor
andb
cmpsl
fidivs
sub
inc
adc
xchg
adc
fcoms
mov
mov
andl
mov
xchg
imul
push
xor
imul
outsb
jae
daa
adc
inc
imul
pop
xchg
push
push
fldenv
sub
cmpl
inc
bound
add
jp
in
push
add
jp
jno
out
mov
paddq
dec
fisubs
imul
cmp
pop
xchg
pop
cmpsl
gs
push
or
fs
pop
push
add
sahf
jbe
aaa
fsub
pop
push
popf
bound
xchg
add
dec
push
scas
or
out
mov
or
shll
insb
pop
jb
mov
sub
sbb
gs
sub
insb
sarl
mov
fidivrs
push
pop
ss
sub
and
xor
in
test
xor
mov
add
das
inc
btr
aas
push
push
inc
xchg
mov
xchg
outsb
push
dec
pop
pop
fimull
aaa
adcb
xor
mov
data16
add
add
mov
xor
ja
in
xor
lret
mov
jmp
sub
inc
movsb
jecxz
push
xchg
out
jbe
shrl
jb
and
cwtl
add
ss
dec
sub
dec
outsl
orl
sbb
mov
xor
xor
jne
subl
ds
mov
inc
ja
ljmp
cs
or
loop
cmpsb
out
lods
movsl
loopne
pop
pop
xorl
mov
xor
xchg
push
push
push
rorl
andb
add
inc
sbb
or
aaa
data16
push
and
xor
in
fcoms
dec
dec
cmp
lods
insl
incl
dec
dec
push
push
and
sub
outsb
add
pusha
int3
or
aaa
xchg
imul
sub
call
or
pushf
and
push
dec
movsb
and
popf
dec
test
inc
sbb
lahf
mov
xchg
add
inc
adc
dec
cmpsl
and
stos
xchg
insb
cmp
sub
popf
testl
push
xchg
lock
and
and
xorl
or
frstor
jae
cmc
outsb
xor
test
pusha
dec
das
xchg
push
push
pop
dec
and
pop
mov
inc
push
push
inc
adc
popa
pop
shlb
and
movsl
mov
pop
dec
imul
mov
outsl
xor
adc
adc
pop
lock
andl
aas
mov
xor
sbb
sub
bound
pop
fiaddl
adc
mov
enter
dec
ljmp
or
je
insl
daa
lea
shl
hlt
pop
push
jns
inc
push
imul
mov
dec
dec
lret
outsb
add
jmp
sub
push
nop
push
iret
push
shlb
dec
pop
xchg
arpl
outsl
sbb
test
lock
inc
push
sub
daa
pop
jbe
add
ja
fsubrs
adcb
fadd
movsl
call
loopne
out
xor
inc
pop
push
pusha
adc
mov
inc
mov
imul
add
xor
test
pop
pusha
push
jb
inc
jg
popa
jne
arpl
fstpt
mov
pop
and
mov
and
push
and
add
loopne
int3
dec
inc
mov
push
dec
dec
fsubrl
push
and
fildll
fistps
mov
cwtl
inc
jno
mov
adc
lea
inc
stos
dec
or
add
push
mov
out
mov
test
inc
insb
or
and
xor
and
sbb
les
aas
aas
dec
outsl
pop
inc
fcmovb
enter
rolb
stos
pop
sbb
xorb
in
popa
ja
and
inc
outsl
push
xchg
out
insl
push
dec
dec
imul
mov
cltd
jmp
inc
gs
jo
sahf
shrb
mov
cmp
push
les
testl
cmp
popa
inc
inc
inc
dec
dec
jmp
mov
ss
xor
sub
inc
enter
sbb
mov
xchg
and
iret
mov
lea
mov
or
pop
and
pop
push
xchg
add
push
bound
xor
dec
out
dec
lea
xorb
int
outsb
or
aaa
mull
insl
cmp
loop
adc
out
push
dec
push
rcr
adc
fists
pop
adc
and
or
mov
or
xor
sub
push
scas
gs
es
or
ja
and
pop
popa
imul
mov
test
dec
inc
testb
adc
mov
call
jbe
mov
jmp
hlt
ja
pop
dec
or
push
lds
pop
jne
subl
cmp
popa
jbe
mov
sub
dec
mov
stos
adcb
adc
push
cltd
sub
sub
pop
or
and
adc
insl
or
fwait
sub
xor
loop
push
add
mov
sub
inc
int
xchg
xchg
inc
test
sub
ficoml
xchg
pop
orl
gs
int3
push
or
fdivrs
scas
mov
ja
je
orb
bound
push
push
sbb
popa
repnz
dec
in
scas
and
insl
jae
cs
inc
sbb
xor
mov
push
and
xor
jno
clc
mov
incb
dec
dec
dec
dec
rol
lea
das
pop
sbb
js
ja
pusha
xchg
dec
mov
pop
mov
inc
scas
repz
pop
push
or
push
les
mov
inc
inc
sbb
push
mov
ja
push
or
daa
cmpsl
notl
les
aad
cmp
lea
test
inc
push
inc
jae
mov
add
xchg
sbb
lods
mov
shlb
sbb
mov
xchg
and
add
pop
pop
fdivs
jne
adcl
movsl
add
or
add
and
sahf
mov
icebp
mov
push
add
dec
jg
sub
xor
femms
jg
dec
lods
or
ret
sbb
mov
sub
addr16
mov
addr16
insb
rorb
push
aad
call
dec
stos
inc
push
mov
arpl
outsl
dec
dec
push
sbb
inc
fbstp
adc
adc
into
jg
cmp
outsb
data16
test
pop
dec
mov
addr16
xchg
mov
fimuls
mov
pop
add
lock
inc
std
add
jne
mov
jg
and
inc
fiaddl
addr16
loope
push
push
jmp
test
test
push
sbb
cmpb
insl
dec
mov
xchg
sub
jo
mov
sub
in
jno
dec
inc
sbb
xchg
inc
jo
fsubl
fldt
cmp
fldl
inc
ret
inc
lcall
cmpb
ljmp
pop
pop
or
xchg
xchg
sub
outsb
xchg
mov
sub
ret
dec
xor
test
mov
cmpsl
bound
movsb
pusha
pop
in
adc
rcrb
inc
adc
xlat
adc
int3
fsubs
add
cwtl
lods
push
cmp
xchg
push
xor
pop
loope
addb
shrb
insb
adc
inc
adc
sub
mov
and
sbb
or
sbb
mov
cmp
lea
lds
ja
adc
xor
pop
dec
sbb
in
pop
lret
cmp
orb
test
scas
jb
hlt
jcxz
push
in
pop
cltd
pop
xlat
add
pop
or
push
inc
and
cmp
roll
popa
adc
pop
mov
bound
rcr
loop
shrb
call
xor
mull
add
jne
das
or
mov
inc
add
adc
cmp
dec
outsl
pop
and
mov
xor
mov
push
scas
or
jo
sbb
movsl
cmp
or
cmpsb
and
in
mov
or
xchg
je
push
xlat
and
pop
push
div
jbe
arpl
xor
fs
cmpsl
hlt
xchg
nop
out
push
xor
sub
add
popa
push
idivl
jo
psubd
pop
add
sub
test
xchg
sbb
dec
xor
jno
ljmp
ret
push
push
nop
cmpb
cmp
test
xor
adc
or
add
pop
stos
mov
push
push
or
push
shrl
lock
mov
insl
push
mov
jb
popa
ja
insb
pop
dec
movntps
mov
arpl
dec
cltd
jle
sub
sbb
pop
aam
mov
push
scas
punpcklwd
movsb
movsl
xchg
mov
pushf
push
std
das
dec
cwtl
jno
insl
popa
inc
mov
push
aaa
push
aaa
add
insb
mov
aam
jno
jno
dec
mov
data16
xchg
jo
fldt
es
mov
push
aaa
ret
bound
adc
add
sbb
dec
jns
push
add
fwait
dec
addr16
mov
test
fidivrl
repz
pop
fistpl
push
imul
push
mov
lcall
mov
sub
ffree
or
popa
sub
ret
xor
imul
outsl
call
sbb
std
push
mov
pop
dec
dec
pop
or
popa
push
ja
pushf
js
jae
test
popa
shl
jno
add
rcll
popaw
lock
dec
adc
mov
push
je
push
push
test
inc
xor
push
pop
xlat
je
movsl
sbb
push
push
imul
cmp
jo
jmp
loopne
outsb
push
dec
nop
push
loopne
test
add
nop
add
fbstp
outsl
mov
pop
jno
jne
push
xchg
xchg
jns
fdivrs
jbe
jg
xchg
fldl
das
imul
fisttpl
test
test
xorl
bound
sub
sub
insl
adc
aas
mov
daa
mov
mov
jb
movntps
mov
or
loopne
jb
movsl
sbb
daa
push
xchg
or
jo
push
cmpsl
into
push
jp
add
pop
push
push
xchg
cmp
sub
dec
mov
mov
jp
pop
ja
outsl
jg
jbe
adcl
xor
test
das
ret
jmp
mov
inc
add
mov
sbb
mov
inc
fmuls
ret
cmp
mov
sub
insl
fisubrs
adc
push
scas
jp
and
enter
shll
mov
ljmp
nop
js
jle
cmp
daa
pop
pop
inc
sbb
das
movsl
push
mov
lods
xchg
xor
cmp
iret
shlb
and
xchg
daa
mov
sub
outsb
adc
pop
outsb
out
mov
dec
movsb
lahf
out
aaa
fmull
push
je
popa
and
push
cmovb
jmp
inc
xchg
mov
cs
test
daa
data16
pop
hlt
add
xlat
push
pop
daa
xchg
adc
popf
mov
mov
sub
in
rcrb
push
cmp
ss
jns
lods
mov
xchg
jg
ds
or
ss
mov
movsb
pusha
in
out
pop
dec
arpl
jb
mov
sbb
iret
xlat
lcall
add
fs
push
insl
xlat
or
xor
adc
aas
nopl
or
pop
and
js
jo
aaa
repz
sub
loop
cmp
and
ret
sub
and
push
in
and
jno
movb
outsb
jno
sahf
out
je
popa
pop
and
lods
adc
dec
pop
or
shrb
mov
imulb
inc
sub
outsl
jp
ret
jno
rcrl
pop
adcl
ja
sub
inc
sub
mov
sbb
inc
lods
shll
add
jo
pop
roll
bound
mov
outsb
mov
shrb
push
loope
push
inc
and
and
jnp
xor
inc
and
sbb
mov
and
ss
xchg
iret
add
aaa
movsb
xor
lea
mov
inc
mov
fmuls
fisttpll
into
pop
movsb
addl
inc
add
mov
xor
movsb
outsl
addr16
xchg
mov
sbb
je
in
scas
xorb
sbb
push
xchg
mov
incl
xor
lods
jmp
sti
outsl
push
mov
sbb
inc
lods
adc
cltd
jo
adc
adc
mov
inc
pop
dec
mov
dec
lahf
pop
push
and
std
sub
mov
or
int
ret
lods
cmpsb
pop
movsl
stos
jnp
cmp
jo
mov
dec
dec
push
mov
xchg
mov
sbb
jbe
xchg
sbb
mov
sti
rorl
pop
inc
or
sbb
pushf
ljmp
fs
cwtl
xor
pop
test
mov
sub
addr16
pop
pusha
pusha
and
nop
jnp
and
push
mov
mov
sbb
adc
in
mov
inc
std
add
rcll
sub
jl
dec
pushf
sub
or
fsubl
add
and
jne
push
pop
daa
xor
cmpsb
sub
xor
daa
add
pop
sub
sarb
or
xchg
imul
lret
mov
xor
add
daa
mov
mov
cmp
xor
push
pop
pop
mov
push
mov
arpl
mov
ret
insb
cs
push
pop
cmp
imul
push
mov
repz
inc
inc
inc
dec
dec
dec
xchg
sbb
movsl
adc
sbb
adc
sub
pop
iret
jl
xchg
pop
jp
fcmovbe
lret
dec
in
xor
jnp
ret
push
daa
arpl
lea
jae
inc
enter
pop
adc
shll
xor
jb
test
push
imul
jo
lods
xor
addl
outsl
cli
popa
lea
pop
adc
inc
pop
mov
add
mov
fs
aaa
sub
inc
jmp
out
dec
es
or
lods
cltd
pusha
and
sbb
dec
push
and
xchg
xchg
add
das
jb
test
inc
dec
xor
jnp
fadds
adc
sbb
shl
mov
add
push
xor
mov
adc
cmp
jae
push
dec
jno
mov
add
xor
sbb
inc
jo
pop
push
xchg
sub
rcll
iret
inc
xor
xchg
push
ret
push
mov
ja
fisubrl
mov
xor
xchg
popa
sbb
and
pusha
push
pop
lock
mov
mov
xor
xorb
inc
loop
das
mov
or
jmp
inc
xor
sti
jge
jo
lods
or
xor
inc
jl
inc
cmp
hlt
jmp
mov
add
add
mov
mov
add
out
or
and
adc
jne
mov
adc
xorb
push
ret
sub
add
cwtl
cmp
call
add
add
push
call
push
xor
ljmp
call
ret
call
mov
ret
pop
pop
pop
push
sub
test
test
cmc
mov
mov
incl
xlat
rep
mov
stos
push
push
push
push
xchg
rclb
add
xchg
les
and
inc
out
ret
push
mov
push
pop
fcomps
outsl
pop
dec
push
lea
jg
mov
pop
add
and
adc
jno
shrb
jg
add
ja
mov
pop
lea
adcl
and
pop
pop
inc
push
xor
gs
int
push
push
nop
sub
das
stc
add
jg
pop
xor
xor
xor
mov
mov
xor
xor
sbb
sub
sub
scas
jns
fisubs
pop
push
iret
xor
inc
dec
push
pop
inc
push
push
adc
std
mov
jne
dec
jp
and
loope
rcrb
dec
or
push
or
push
cmp
int3
add
cmp
arpl
mov
and
mov
ljmp
inc
adc
sub
dec
out
je
jmp
or
imul
pop
arpl
xor
imul
sbb
cmp
movl
ret
roll
add
xor
fstl
inc
cltd
and
jb
push
push
dec
sbb
xor
dec
xor
push
mov
jne
mov
push
push
inc
scas
mov
push
adc
sbb
add
inc
sub
add
ss
add
dec
pop
addr16
add
add
js
loope
lods
mov
arpl
or
mov
int3
aas
dec
inc
iret
lods
mov
xor
push
aaa
test
add
sub
inc
icebp
shlb
pop
imulb
pop
or
loope
cli
in
adc
push
or
inc
adc
adc
imul
jmp
ficoml
mov
rolb
xor
cmpsl
fdivs
xlat
je
js
nop
push
outsb
les
mov
mov
lcall
mov
xor
sub
sub
mov
xor
dec
loopne
lods
jae
out
mov
js
insb
sti
cmp
addb
mov
insl
in
mov
dec
push
addr16
inc
inc
push
cmp
fwait
pop
sbbb
xor
and
in
adc
arpl
in
mov
xlat
pop
das
popa
adc
inc
add
jbe
adc
scas
inc
or
fs
mov
sbb
inc
inc
push
inc
dec
bound
inc
add
in
ja
cwtl
pop
jae
addb
aas
pop
shl
popf
xchg
xchg
add
push
das
out
add
push
and
sub
rolb
dec
cmpsb
jbe
add
and
add
test
fs
push
adc
inc
adc
add
push
push
adc
add
cs
in
ss
add
movsb
add
jns
and
daa
outsl
pop
cmpsb
fisttps
mov
cld
mov
insl
in
jle
test
shll
in
cmp
stc
mov
mov
sbb
in
call
testb
mov
ficompl
mov
repnz
xor
fcomp
loopne
xor
inc
test
jae
das
adc
sbb
push
cmp
lock
inc
push
cmpsl
icebp
movsb
mov
add
in
pop
sub
ss
ljmp
mov
push
add
dec
shll
sbb
shll
pop
or
add
ss
or
jbe
imul
daa
adc
enter
adc
and
sbb
push
sbb
push
das
push
xorps
xchg
and
insb
nop
cmpsb
sbb
push
pop
or
popa
inc
orl
xor
xor
popa
orl
fbld
mov
into
aas
xlat
pop
test
cmp
pop
add
push
imul
lea
push
fs
push
mov
inc
xchg
xchg
data16
fs
add
or
outsl
xor
add
push
dec
ja
or
add
xor
cmpsb
push
or
or
mov
dec
shll
xor
lcall
pop
sbb
sbb
cmp
dec
push
jns
xchg
lods
imul
int3
mov
jbe
loopne
test
add
icebp
aad
sbb
adc
mov
xchg
push
add
xor
add
pop
dec
daa
addl
outsl
mov
add
cli
or
or
ret
psubw
dec
and
adc
mov
mov
sbb
into
sbb
rorl
and
sahf
pushl
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
std
incl
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
or
mov
test
daa
cmp
jg
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sbb
lcall
cmpsb
lock
mov
popa
sar
mov
lcall
inc
and
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
testl
int
add
sti
aas
std
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
pushl
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
call
inc
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jmp
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmpl
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
mov
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
push
xchg
jge
pop
ficomps
frstor
push
orb
add
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
inc
adc
mov
lock
add
gs
pop
mov
and
dec
rorl
pop
imul
add
add
cwtl
push
add
mov
add
shr
pop
aas
dec
or
inc
push
rorb
insl
add
sub
pop
dec
xchg
push
and
sbb
sbb
xchg
push
inc
outsb
fs
and
or
dec
loope
addps
add
pop
adc
add
push
push
pop
xchg
fisubs
sub
sub
sbb
adc
imul
add
enter
movb
xorl
lahf
dec
inc
inc
jns
outsl
push
imul
popa
insb
nop
popa
or
fs
imul
sbb
pushf
xchg
in
arpl
lock
or
sub
push
xor
sub
call
mov
fwait
inc
inc
rolb
daa
pop
xchg
mov
push
xor
in
sub
add
stc
jo
adc
dec
jnp
loopne
pop
sub
mov
jo
xchg
in
adc
lds
das
sbb
es
add
push
or
or
cmp
pop
popa
sub
jns
loope
aaa
mov
je
pop
inc
popa
je
rorb
je
mov
lods
addr16
imul
pop
lahf
add
outsb
out
mov
add
pop
daa
push
jo
mov
ja
pop
dec
sbb
movsl
xor
push
jo
jbe
filds
mov
and
adc
fldcw
push
cwtl
pop
add
or
add
push
jecxz
movsl
std
inc
stos
adc
sbb
sbb
fdivrs
push
fistl
arpl
sub
xchg
out
sub
daa
mov
or
dec
lock
lods
adc
inc
mov
hlt
push
fs
adc
mov
push
mov
inc
inc
inc
add
mov
jb
and
insb
gs
int
add
lods
pop
fistpl
imul
fnstcw
fcmove
pop
xor
ret
inc
jbe
adc
mov
insl
pop
imul
pop
add
fcoms
or
ja
stc
mov
data16
push
adc
inc
dec
adc
push
push
inc
or
sbb
and
cmpsb
xchg
inc
sbb
dec
inc
sbb
jo
push
mov
add
or
pop
jo
dec
sub
aaa
xor
mov
scas
jge
sub
pop
push
jge
repz
jns
or
mov
ja
dec
test
mov
stos
mov
mov
add
mov
sbb
incl
add
dec
add
add
push
and
inc
loopne
sidtl
add
add
add
mov
mov
mov
adc
packuswb
sbb
jb
ja
out
push
push
add
or
decl
dec
sub
scas
test
cs
inc
push
push
pop
je
out
add
cmp
push
pusha
jb,pn
xor
add
mov
cmpsl
add
fcmovb
lcall
dec
jo
mov
into
add
rclb
cmp
pop
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
mov
cmp
je
subl
add
mov
jmp
mov
jmp
add
push
add
add
add
add
or
js
add
clc
loopne
add
add
add
add
add
add
loopne
add
sub
add
add
add
add
add
sbb
add
je
mov
add
adc
mov
cmp
add
add
inc
add
add
pop
inc
add
add
add
add
cmc
adc
adc
adc
sbb
add
aam
adc
test
xor
ja
call
ja
sbb
ja
dec
adc
clc
or
add
push
add
testb
adc
adc
clc
or
add
jbe
ja
or
add
push
add
testb
in
adc
cmp
add
xor
push
add
testb
dec
sbb
xor
clc
or
add
dec
adc
add
add
mov
adc
add
add
sub
ja
or
add
hlt
adc
rclb
ja
or
add
dec
adc
add
add
test
hlt
adc
and
add
inc
cmc
adc
clc
jmp
jg
add
add
cmc
adc
in
cmpsl
cmc
ja
in
std
jg
add
add
mov
add
jmp
jg
notl
add
add
add
cmc
ja
loopne
ja
in
std
jg
add
add
out
in
adc
pusha
notl
add
or
add
loopne
jg
cmc
adc
test
add
clc
jmp
jg
push
jno
push
pop
aam
jl
adc
pusha
notl
add
add
mov
add
add
adc
je
mov
add
add
add
mov
add
testb
add
add
loopne
adc
mov
or
add
notl
mov
add
jmp
add
add
and
add
out
add
adc
add
add
add
add
add
adc
ficompl
fdivs
lea
test
cmc
adc
popf
mov
add
xor
add
add
add
xor
call
cmc
adc
adc
adc
sbb
add
aam
adc
test
xor
ja
call
ja
sbb
ja
dec
adc
cld
or
add
pop
add
or
adc
cld
or
add
jbe
ja
or
add
pop
add
or
adc
cmp
add
add
add
or
xor
push
sbb
add
add
add
add
adc
add
add
sub
ja
or
add
hlt
adc
rclb
ja
or
add
dec
adc
add
add
test
hlt
adc
and
add
inc
cmc
adc
clc
jmp
jg
add
add
cmc
adc
in
cmpsl
cmc
ja
in
std
jg
add
add
lea
sbb
add
clc
jmp
jg
notl
add
add
add
cmc
ja
loopne
ja
in
std
jg
add
add
out
in
adc
pusha
notl
add
or
aad
add
std
jg
cmc
adc
mov
add
add
jmp
jg
sub
aam
jl
adc
pusha
notl
add
xor
add
xor
add
xor
add
add
add
mov
add
add
add
loopne
adc
hlt
mov
add
adc
nop
sbb
add
inc
add
adc
nop
sbb
add
notl
add
inc
add
notl
add
adc
nop
sbb
add
adc
dec
add
add
