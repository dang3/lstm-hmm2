mov
push
xchg
add
inc
adc
mov
push
insl
adc
sbb
sub
lods
jl
pop
fs
cmp
pop
adc
cltd
xor
inc
rolb
aaa
sbb
add
stos
sub
and
sbb
and
cld
pusha
dec
sub
shrb
mov
repz
jecxz
dec
jo
jb
stos
fldcw
lods
push
mov
inc
or
sub
or
fstl
mov
and
lret
clc
outsb
ss
push
sbb
adc
xchg
sbb
jno
icebp
cmp
into
mov
mov
push
xlat
mov
push
fwait
scas
cmpsl
mov
lahf
pop
mov
adc
push
imul
push
stos
orb
int
test
jp
inc
out
mov
loopne
sub
arpl
inc
int3
hlt
jne
roll
imul
xchg
mov
ja
mov
not
jae
xchg
popf
popa
jbe
sub
cs
es
and
xor
jns
cmc
jle
call
xor
in
fs
andl
or
and
nop
pusha
hlt
inc
xor
adc
clc
inc
ds
xor
mov
cs
pop
lods
pushf
or
fdivr
cmp
sbb
adc
add
inc
dec
stos
pop
loope
adc
pusha
pop
jp
inc
push
xor
imul
ds
push
xor
jbe
sbb
pusha
jo
sub
stos
inc
dec
jne
xchg
push
add
sahf
hlt
xor
xor
loopne
pop
fs
push
cmp
xor
mov
popa
cmp
dec
loopne
das
pop
pop
pop
gs
xor
out
int
dec
inc
jecxz
jg
loop
inc
jge
mov
xlat
lret
sbb
and
sub
pop
es
pusha
addr16
nop
cmp
gs
lret
add
psrlq
pop
aaa
daa
mov
xchg
outsl
xor
outsb
sub
ljmp
pop
add
lods
movsl
sub
ret
inc
jge
rcrl
jbe
cmp
int3
sub
lods
mov
xchg
jp
mov
hlt
xor
dec
cmpsb
lahf
ds
xchg
sahf
jno
mov
push
pusha
inc
inc
push
es
div
pop
hlt
lret
adc
fwait
push
xchg
out
pop
pushf
out
icebp
cmpsl
shll
ljmp
push
addr16
jno
out
dec
js
mov
insb
push
mov
sub
cmp
mov
and
pop
cmp
jp
and
mov
mov
jp
popf
aam
or
sub
stc
clc
mov
xor
mov
movl
xchg
bound
andb
push
loope,pn
testl
push
sahf
sub
mov
int3
out
mov
xchg
pop
bound
jge
nop
inc
negb
sar
imul
add
cs
out
add
xor
jnp
std
cwtl
das
pop
cmp
cwtl
inc
push
and
and
jp
push
or
into
and
loop
sub
incl
adc
addr16
dec
rcl
jne
sbb
mov
sahf
ret
sub
out
lahf
inc
bound
loope
push
sbb
mov
xchg
push
and
lcall
push
pop
subb
xor
iret
mov
cmp
scas
cmp
test
sahf
push
aam
push
jg
mov
cwtl
js
into
cwtl
mov
dec
mov
dec
jle
lods
xchg
add
outsb
scas
mov
mov
mov
push
jno
lahf
mov
inc
inc
aad
inc
dec
mov
push
hlt
mov
mov
push
cmp
dec
and
gs
int
icebp
lods
pop
test
dec
push
inc
sets
outsl
mov
in
adc
fldenv
inc
arpl
inc
push
pop
pop
sbb
or
or
or
adc
mov
andb
xchg
movsb
push
fwait
xor
pop
jb
sub
pop
mov
popf
mov
out
pop
lret
mov
cwtl
xchg
push
push
sbb
cmp
pop
jae
mov
mov
sub
shrl
test
imul
ss
pop
jb
cmp
sub
jmp
inc
adc
push
cmpl
add
lret
int3
ss
std
xchg
jns
sarl
sub
mov
mov
mov
jno
cmp
out
cmp
pop
jb
cmpb
insb
mov
insb
sbb
lods
js
ss
imul
sbb
ret
mov
inc
cmp
xchg
popa
mov
mov
insl
and
jo
inc
enter
jnp
cmp
and
inc
gs
ss
push
mov
aaa
movl
mov
sbb
adc
xor
push
jge
and
push
jge
xor
inc
jp
scas
sbb
dec
inc
pop
inc
sahf
fmuls
jmp
xor
mov
fidivs
sbb
mov
dec
jmp
fwait
mov
add
jae
adc
imul
test
mov
and
mov
push
fstps
lods
cli
out
js
jno
arpl
xor
aas
xchg
iret
cmp
enter
jb
fdivrl
mov
fwait
mov
sbb
cmp
dec
outsl
aaa
mov
lods
popa
imul
mov
orl
movsb
test
push
inc
pop
inc
cwtl
in
jo
dec
aaa
ds
cmpl
mov
aaa
jns
aas
cmpsb
jne
aas
push
enter
mov
inc
popa
mov
addr16
test
push
inc
xlat
out
pop
gs
mov
jno
inc
fcmovu
outsb
xchg
jb
inc
jnp
cmp
and
pop
jp
dec
xor
gs
shl
pop
push
pop
inc
and
out
lods
loop
imull
ds
and
popf
pushf
jb
inc
orl
xchg
in
inc
push
out
movsb
sub
mov
fidivs
inc
icebp
mov
mov
sub
insl
mov
mov
shrl
ds
pushf
xchg
sbb
test
imul
mov
test
sti
pop
sub
mov
pusha
movsb
in
idivb
dec
xor
or
dec
stos
fimull
push
inc
jp
into
std
rolb
jo
call
gs
sub
aas
lods
xchg
add
outsb
mov
clc
pop
fs
into
inc
fwait
rorb
aam
inc
sbb
pop
mov
stos
cmpsb
jecxz
int3
imul
push
lods
dec
push
cli
inc
leave
xchg
xchg
pushw
out
jns
mov
and
mov
and
test
dec
out
sahf
add
js
and
mov
jne
dec
sahf
push
cmp
or
cmp
sti
andb
sbb
test
outsb
call
push
and
lods
lods
mov
mov
mov
aas
mov
inc
inc
lock
inc
pushf
les
shlb
adc
fdivl
stos
cld
pop
insl
add
adc
test
clc
mov
nop
xchg
jb
mov
test
cmp
fdivr
or
cld
dec
jae
sub
lcall
pop
cltd
sub
sub
insb
ret
outsl
ljmp
lret
cmp
sub
xor
jmp
out
loope
dec
pushf
cmp
jp
fwait
roll
in
enter
xor
addb
mov
movsb
movsb
cmpsb
cmpsl
stos
cmp
mov
movsb
insl
mov
lods
or
mov
mov
cmpsl
mov
jle
cli
mov
hlt
lahf
add
mov
test
lcall
xor
xchg
icebp
pop
loopne
ret
lods
outsb
inc
lods
add
jno
xchg
sub
sub
fidivl
aaa
xchg
lcall
lods
mov
outsb
and
mov
mov
xchg
dec
mov
add
mov
xor
data16
mov
ja
fdivp
mov
subb
arpl
mov
sahf
aam
out
pop
int
xacquire
add
adc
cli
stos
add
aas
mov
fs
pop
push
push
xor
dec
cmp
mov
inc
inc
repz
aas
and
dec
pop
adc
es
call
out
mov
mov
cmpb
data16
jle
cs
cmp
fwait
fs
mov
popa
jbe
test
insl
fisubrl
sbb
mov
jne
mulb
lcall
dec
push
jmp
sub
push
inc
mov
mov
dec
push
xchg
push
enter
mov
popa
jnp
dec
pop
call
push
lahf
dec
push
fcoml
test
push
mov
subl
dec
cmpsl
je,pt
cmp
outsb
sbbl
out
sub
ret
mov
cmpsb
or
xor
test
js
and
add
sahf
test
and
push
push
test
xchg
sub
pop
pop
pop
nop
stc
inc
mov
xlat
add
push
sub
dec
jne
dec
mov
inc
ljmp
and
divl
adc
rclb
cmp
push
stos
dec
jmp
sbb
rcrl
cmp
sub
cmp
stos
or
mov
or
clc
orl
fsubl
pusha
sub
stos
in
push
shrl
dec
aas
rorl
pop
dec
fildll
jb
int3
cmp
movsb
add
jp
insl
and
inc
sbb
int3
int
cli
fs
icebp
add
hlt
sub
roll
jae
inc
mov
push
and
scas
mov
jecxz
je
jo
imul
imul
scas
mov
inc
mov
popf
sbb
bound
xchg
or
xchg
or
mov
outsb
enter
in
dec
xchg
pop
pushf
daa
sub
jb
inc
mov
mov
iret
jmp
pop
xor
add
popf
std
inc
adc
inc
mov
jne
pop
sbb
daa
insb
xor
sahf
mov
pusha
hlt
push
pop
hlt
cs
mov
loop
jmp
pusha
xor
out
sub
pop
jb
push
in
sub
add
or
lea
inc
cvtdq2ps
cmp
adc
movsl
mov
lret
in
and
outsl
fstl
inc
or
daa
xor
or
add
adc
cld
mov
fnstcw
mov
std
dec
mov
sub
pop
pop
mov
pop
jmp
loop
mov
sbb
ds
or
add
insb
adc
rol
and
jge
mov
xor
xor
and
mov
mov
cmpsb
xor
sub
mov
fyl2x
jecxz
mov
rcrb
xchg
inc
and
imul
fdivl
enter
xchg
subl
lock
incb
stos
dec
pop
addr16
inc
ss
out
push
in
dec
addr16
sbb
repnz
inc
subl
fstpl
xchg
jge
pop
mov
push
mov
jns
fsubrs
das
xchg
xchg
xchg
adc
daa
push
sub
mov
mov
inc
lods
dec
add
daa
mov
mov
sbb
add
scas
dec
pop
cs
ret
push
push
push
cmpl
out
daa
dec
jge
mov
xchg
adc
test
stc
adcb
andb
sbb
pop
jnp
inc
ds
sbb
shrl
fsubrl
sbb
out
or
push
dec
jl
je
xor
aas
pop
dec
shlb
push
mov
xchg
and
push
jge
mov
xchg
sarb
ja
add
xor
mov
pop
mov
loop
mov
gs
test
sahf
pop
push
std
fisttpll
dec
ret
bound
cmp
fldt
pop
loopne
lret
insb
iret
shl
and
mov
cwtl
cli
or
push
push
jge
iret
scas
inc
mov
pushl
test
inc
xchg
ffree
test
fs
push
pop
adcb
or
and
ss
lcall
leave
and
sub
and
fs
pop
mov
cmp
outsl
mov
sahf
dec
sub
pushf
dec
lea
inc
les
adc
sbbb
jl
inc
mov
daa
xchg
scas
sub
outsl
dec
dec
mov
das
aaa
push
jo
subl
xor
out
fcomps
test
insl
test
or
xchg
ss
dec
outsb
push
inc
push
jle
mov
sbb
or
nop
pushf
pop
mov
ljmp
out
jmp
popf
mov
inc
rclb
xchg
xchg
faddl
lcall
cmc
pop
mov
outsl
rcl
dec
js
sub
subb
pushf
lods
aas
cmp
xchg
add
imul
pusha
mov
add
repz
shl
mov
jl
ss
std
jg
push
gs
outsb
xor
inc
push
imul
jne
add
inc
movsb
cmp
test
cmpb
pusha
pop
push
mov
insb
lahf
sahf
cmp
cmp
push
aad
xor
int
mov
in
adc
movsl
int
call
sbb
test
scas
outsb
jne
add
sub
dec
gs
test
out
or
mov
push
or
stos
sbb
jecxz
sub
test
insb
sbb
cli
and
xchg
test
mov
imul
pop
cwtl
orb
call
pop
popf
mov
pop
or
std
fs
js
faddl
in
push
in
dec
inc
cmp
lock
inc
fisubl
xchg
negb
lret
in
aas
inc
mov
sub
addb
mov
bound
int3
out
lret
lcall
leave
dec
xchg
ret
pop
jl
inc
push
sub
jne
ss
inc
cmp
adc
loop
insl
les
aad
test
cmc
arpl
cld
cmp
dec
iret
fsubrl
mov
cs
sub
lret
pop
inc
sub
xchg
imul
outsb
mov
mov
pop
jbe
test
push
push
das
imul
xor
mov
push
js
mov
mov
lods
sti
int3
sub
inc
adc
sub
inc
sbb
aas
mov
movsl
lahf
sarl
daa
push
stos
xchg
inc
jg
adc
jae
inc
fstp
push
test
jle
jge
mov
pusha
cmp
jb
push
mov
stos
ds
test
sbb
mov
dec
out
or
dec
mov
sarl
sub
fisubl
cmp
pop
mov
outsb
lods
scas
xlat
lret
sbbl
and
sub
sub
pop
inc
lahf
sub
insl
push
lock
jbe
imul
push
or
and
mov
xor
fldcw
adc
flds
and
jle
lods
pop
mov
pop
mov
xor
xchg
js
inc
repnz
cmp
cmp
pop
icebp
cmp
loop
mov
jmp
bound
test
fisubl
jne
and
adc
pop
inc
test
aad
xchg
fs
jmp
nop
hlt
mov
sbb
lret
pop
fsts
push
push
mov
pop
add
xchg
cmpsl
lcall
stos
mov
xchg
fwait
sub
push
insb
andl
jae
repnz
addr16
push
insb
sahf
lock
outsb
push
push
outsb
lods
shll
outsb
insl
scas
inc
addb
mov
inc
push
js
rcll
adc
imul
pop
js
mov
jbe
mov
and
mov
fidivrl
push
rcrb
adc
aam
inc
pop
xchg
ret
ret
sub
stos
jnp
stos
outsb
test
rclb
fisubrl
cmpsb
pop
loop
imul
mov
loope
shl
push
push
push
shrl
movsl
cmpsl
jbe
pop
jl
pop
cmp
mov
push
fwait
mov
jno
andl
pop
inc
xor
lahf
pop
jge
cmp
clc
sub
add
add
and
jge
stos
xchg
popf
push
loop
mov
negb
mov
imul
in
mov
or
and
or
test
cmpb
jle
push
or
nop
pop
loop
lock
mov
mov
dec
ss
stc
bound
xchg
outsl
jb
push
push
push
mov
arpl
test
jg
xchg
xor
mov
adc
sub
cltd
xlat
test
inc
jno
mov
pop
mov
xchg
mov
sub
mov
cmp
pop
pop
xchg
addl
dec
cmpsl
test
ret
jle
and
dec
jbe
lcall
push
xor
or
orl
movsl
insb
and
movsl
cs
sub
in
cmp
or
icebp
shlb
push
cwtl
dec
shrb
and
mov
js
xchg
sarb
loope
inc
sahf
stos
pop
dec
int
lds
mov
mov
xchg
lcall
out
gs
sub
jo
popa
xchg
sbb
cmp
push
fnstsw
mov
and
jo
test
ljmp
cmp
addl
fiadds
sbb
xchg
inc
lcall
pusha
xchg
mov
cmp
stos
push
loopne
dec
stos
stos
imul
mov
cwtl
pop
push
shrl
insl
sub
add
fiaddl
rcll
into
insl
pop
mov
xor
add
jmp
ds
cmp
ss
sub
lods
or
ds
imul
popf
fcompl
pop
jne
mov
jp
outsb
inc
leave
xchg
push
adcb
std
fdivrp
rcrb
add
jbe
jnp
mov
pushf
adc
adc
movsl
xor
aas
jl
icebp
pop
dec
lods
inc
sahf
and
lea
ja
outsb
call
jle
xor
jg
or
mov
sahf
xchg
lahf
insl
loope
sbb
or
scas
rol
mov
test
cltd
ja
push
jp
dec
and
lock
mov
insb
sub
outsb
push
pusha
sbb
test
mov
pushf
xor
jmp
imul
js
insl
and
sbb
scas
arpl
mov
mov
mov
aam
shrb
pusha
mov
push
mov
mov
lds
push
jbe
icebp
push
pop
pop
shlb
jns
imul
add
push
sub
mov
push
pusha
or
fidivrl
shlb
mov
mov
je
ficomps
rol
aas
test
sub
mov
xchg
mov
pushf
jp
adc
ret
push
loopne
rep
pushf
lods
cwtl
sbb
pop
loop
popa
xchg
ss
mov
pop
jecxz
dec
gs
mov
je
arpl
xor
mov
loopne
cmp
leave
xor
int3
out
sub
xor
push
fsubrs
dec
jle
and
mov
cmpsl
je
xchg
xor
lcall
jl
out
inc
and
sub
ljmp
and
cmp
stc
adc
push
subb
pop
nop
xor
mov
aas
sahf
gs
dec
es
scas
cmpsb
out
sbb
outsb
jo
rcrl
in
jle
jns
insb
and
clc
sbb
and
pushf
and
es
test
dec
cmp
popf
andb
int
cmc
je
imul
adc
xchg
jns
in
mov
ds
xchg
in
xchg
inc
mov
insl
cwtl
sub
lahf
aam
subb
add
mov
ss
push
hlt
pusha
ljmp
pop
cmp
ss
jb
fcoml
cmpsl
in
icebp
inc
inc
or
scas
cli
cmp
negb
aad
outsb
scas
popa
mov
mov
push
push
add
pop
incl
lods
lret
outsb
das
daa
scas
stos
jno
pop
inc
mov
cmp
mov
pop
mov
mov
ds
call
sub
mov
fidivrl
xchg
test
fs
orb
mov
push
icebp
pop
xchg
movsb
inc
sub
xor
les
push
cmpsb
mov
xor
outsb
movb
movsb
pop
dec
sbb
lahf
xorl
imul
mov
out
inc
andl
out
mov
insl
imul
enter
jae
sub
sahf
test
fildl
negl
inc
cmpsb
ret
or
xchg
push
es
pop
sub
pop
mov
xor
and
jnp
daa
jle
sbb
mov
enter
dec
sub
ret
mov
adc
and
stc
imul
outsb
or
fstl
sub
ja
lods
pop
addb
popaw
outsl
push
ret
iret
sbb
inc
dec
hlt
sbb
cmp
push
cmp
and
xchg
outsl
and
mov
lea
mov
adc
add
cmpsb
push
push
and
out
ficomps
popf
mov
outsl
rcll
xchg
jno
cmp
int3
xchg
inc
std
popf
mov
rolb
rcrb
rorl
outsb
push
pushf
leave
add
sbbb
sbb
xchg
dec
call
mov
fisubrl
lds
pop
hlt
outsl
lahf
or
mov
dec
jno
shrb
fwait
pushf
dec
arpl
mov
fdivrs
fmull
int3
call
push
pop
xchg
fcoml
xor
mov
stc
sahf
int3
or
arpl
and
fcomps
ljmp
mov
test
bnd
ret
sub
inc
in
xor
mov
inc
push
pop
ffree
imul
insb
movsb
jg
js
movsl
pushf
loope
sub
xor
cmc
xor
jb
mov
jl
push
ficomps
jge
xchg
iret
sbb
push
sbb
fistl
mov
lret
jae
test
stos
mov
imulb
lahf
test
pop
imul
sti
js
sub
lret
mov
cmpsl
xor
and
push
dec
push
lods
push
sbb
mov
xor
fptan
imul
or
insl
lods
pop
cmp
jl
mov
sub
sbb
andb
pop
imul
shrb
inc
push
cld
int3
pushf
jno
xor
fisubrs
bound
fisttpl
dec
add
dec
sub
cmpsb
mov
fsubs
inc
mov
adc
insb
ret
mov
mov
and
popf
inc
mov
les
mov
insl
test
push
xchg
mov
xor
loopne
adc
leave
mov
idivb
mov
xchg
pop
xchg
push
fwait
fs
mov
inc
mov
popa
int3
int
jle
xor
ficomps
pop
mov
and
pushf
xchg
pop
imul
or
jge
lcall
push
popa
cld
scas
jns
cmp
add
pop
es
pusha
xor
inc
cmp
jle
or
push
outsb
sub
inc
flds
adc
out
inc
fsubl
xor
mov
push
jl
out
jle
into
push
lods
fidivrl
and
mov
sub
out
xchg
inc
sti
pop
lahf
or
and
or
aas
sahf
jp
popa
cld
rcll
and
cmp
and
sahf
outsl
pop
xor
mov
in
popf
inc
js
dec
pusha
mov
push
sub
xchg
mov
outsl
push
addb
fs
dec
sahf
int3
sub
lret
xchg
in
pop
dec
fimull
cmp
ds
sub
mov
fs
data16
sbb
lods
sub
cmp
jl
add
jecxz
xor
jo
mov
and
movsb
push
or
mov
inc
xchg
pusha
stos
mov
pop
shlb
cmp
pop
inc
ret
xor
ret
jae
out
fcompl
lcall
push
jns
cmp
or
inc
inc
lahf
movsb
sbb
add
jno
jl
adc
add
and
push
mov
je
fsts
xchg
mov
imul
dec
call
dec
ss
pop
push
pop
xorl
loop
stc
addb
adc
pop
fists
sub
ds
std
outsb
testb
loope
cmp
jns
cmp
fmuls
subb
dec
mov
mov
lcall
arpl
and
repnz
or
stos
clc
daa
loop
cmp
and
jae
test
iret
cmc
in
lods
lcall
dec
lahf
xchg
cmp
inc
sbb
adc
lcall
aas
aad
rcrb
cmpsb
xor
mov
adc
insb
xchg
sbb
cmp
popa
jne
andl
adc
dec
mov
push
xor
lods
sar
mov
or
test
or
stos
xor
mov
out
test
insl
inc
jns
cmp
or
inc
shlb
scas
mov
jp
inc
jns
sub
mov
arpl
mov
cmp
cmpsb
inc
push
movsb
cmp
das
mov
adc
pushf
in
push
pop
ficomps
push
adc
into
inc
imul
mov
enter
inc
jae
pop
loope
cs
and
xchg
add
iret
and
fnstcw
stos
outsl
inc
repz
push
idivb
insb
mov
push
mov
outsb
enter
xchg
push
push
aas
xchg
or
test
ror
mov
jl
sbb
lret
cltd
inc
cmp
into
cmp
loope
out
jb
jne
rolb
inc
imul
cwtl
xchg
dec
mov
outsb
outsl
sub
xor
ljmp
rcrb
add
mov
ljmp
les
cmp
es
mov
jp
mov
xor
movsb
xor
je
aas
fcompl
push
mov
dec
inc
jns
mov
movsl
lods
xor
scas
xor
mov
cmp
push
sub
and
dec
sbb
fisttps
mov
and
out
lcall
scas
js
cmp
sbb
daa
cmp
pop
movsb
es
dec
mov
jge
cs
mov
nop
movb
sbb
dec
mov
icebp
inc
nop
push
imul
xor
mov
push
inc
jge
xchg
into
in
lea
lock
lahf
shll
scas
pop
loopne
xchg
jb
sbb
add
mov
add
cmp
lcall
pop
sub
stos
fdivp
enter
test
rolb
jmp
std
pop
dec
lret
cmp
sarl
inc
scas
push
and
jl
inc
js
sahf
enter
les
daa
mov
sbb
enter
enter
mov
pushl
nop
mov
outsl
inc
jne
mov
pusha
pop
mov
inc
cltd
xor
push
dec
js
jg
push
insb
jp
roll
cmpsb
pop
xchg
out
add
iret
dec
lcall
jo
pop
lea
jg
add
mov
xlat
scas
push
ds
stos
push
push
cmp
jne
cmp
lcall
das
push
fiadds
push
pop
movsb
lret
stos
cltd
insl
jmp
mov
mov
cld
inc
out
push
lds
pop
mov
push
test
enter
xor
dec
fs
adc
mov
fldt
cmp
cs
xor
sti
aaa
push
outsb
stc
inc
roll
stc
cmpsb
sahf
mov
xor
sbb
aaa
call
mov
sarl
ds
sub
add
pusha
mov
adc
rcll
insb
push
inc
sub
pop
mov
scas
inc
test
cwtl
push
dec
cld
cmp
push
repnz
movsl
sub
aad
subb
fildll
cmpsb
adc
cli
je
popa
dec
popf
cmp
cltd
mov
insb
xor
rcll
inc
sub
jo
jns
incl
xchg
aad
inc
jno
adc
and
push
inc
pop
movsb
dec
subb
jo
gs
cltd
fbld
inc
pop
cmc
dec
mov
jo
inc
inc
jns
and
outsb
leave
out
mov
adc
in
inc
arpl
lcall
push
sub
cwtl
loopne
das
test
mov
mov
idiv
sub
pop
sub
pop
movl
push
stos
outsb
cmp
mov
add
sbb
and
cmp
inc
mov
das
push
fiaddl
xor
pop
imul
loop
inc
jns
push
call
pop
mov
jb
out
inc
push
gs
jbe
push
sbb
clc
add
mov
stc
nop
and
cli
sub
mov
jnp
pusha
shrb
subl
push
ljmp
in
mov
in
test
jl
dec
test
das
mov
push
pop
cli
dec
out
dec
cmc
movsl
cmp
sub
aas
mov
jns
les
test
and
in
stos
lcall
es
fistps
push
aam
ret
aaa
imul
shl
es
hlt
aaa
icebp
lahf
push
push
sahf
jle
push
pop
test
jnp
mov
jne
fsubrs
adc
xchg
jle
imul
stos
repnz
xchg
in
push
mov
lahf
out
outsl
cmp
loope
aam
mov
mov
jb
push
sti
nop
pushf
mov
mov
jb
mov
jb
sbb
mov
pusha
xchg
insl
lcall
clc
mov
imul
rcrb
stos
mov
push
inc
cwtl
imul
and
mov
jo
cmp
js
jle
inc
inc
lock
push
pop
test
and
bound
js
mov
mov
rolb
add
mov
inc
dec
in
popl
push
jp
cmp
or
int3
fisubrs
adc
das
jecxz
pop
test
pushf
pop
push
fnstsw
mov
mov
inc
inc
test
imul
popa
cmp
js
jnp
mov
popa
sub
lcall
pop
scas
pop
inc
dec
dec
imul
sbb
xchg
add
bound
popa
pop
jns
in
imul
pop
mov
fistpl
jg
xlat
mov
xlat
imul
test
jnp
sbb
or
mov
sahf
push
push
in
mov
cmp
xchg
pop
cmp
inc
popf
mov
in
mov
push
rep
dec
dec
sub
push
mov
movsl
inc
add
pusha
ds
daa
insl
add
cmc
pop
jmp
outsl
or
lcall
pop
push
jnp
sti
sub
sub
add
dec
arpl
stos
leave
insb
adc
das
add
xchg
push
jb
das
iret
mov
fists
inc
je
fdivrl
fs
push
jge
js
imul
or
cmpsb
movsb
test
xor
mov
leave
fwait
and
pop
mov
mov
cld
adc
cs
imul
pop
cmp
nop
pop
aas
fstpt
mov
inc
push
fadd
andb
adc
punpcklwd
fcoml
pop
cmp
push
mov
lods
dec
xchg
sbb
jo
out
xchg
adc
js
push
aas
ret
jl
jae
dec
pushaw
mov
les
jecxz
data16
pushf
push
mov
loopne
mov
adc
pusha
adc
mov
xor
inc
lret
sbb
inc
mov
pop
movsl
dec
lea
or
fsubr
je
inc
adc
std
test
mov
jns
dec
cmp
mov
aam
insl
out
daa
push
or
fiadds
push
xchg
jmp
cmp
sbb
cmp
jp
xor
mov
mov
inc
jo
pop
fadd
arpl
jne
pop
adc
hlt
mov
scas
mov
stc
dec
div
push
jns
pop
pushf
pop
insl
popa
xor
lcall
dec
cmp
loopne
jo
mov
movsb
or
stos
stc
iret
cmp
fbld
lock
xchg
scas
movsb
sub
out
inc
push
imul
pop
inc
addr16
call
push
pop
decl
ficomps
test
mov
dec
nop
inc
push
nop
sbb
dec
xchg
xor
pop
js
loope
and
mov
ret
pop
fildll
loope
jae
adc
mov
bound
loop
push
sahf
rol
inc
jp
push
mov
jo
fsubl
push
mov
mov
jp
loop
leave
lock
lea
hlt
inc
adc
push
dec
pop
mov
mov
dec
test
jmp
mov
shll
sbb
outsl
cmp
xchg
xorb
sub
loop
in
in
fwait
mov
mov
and
int
out
mov
push
pop
inc
dec
cmpsl
mov
xchg
ret
inc
xchg
fimuls
scas
inc
arpl
push
jg
mov
inc
frstpm(287
repnz
nop
shll
ds
fiaddl
cmp
outsb
addr16
adc
outsl
in
hlt
minps
cmpsb
dec
nop
in
js
inc
dec
sbb
sbb
mulb
jge
or
add
pop
lds
test
sub
jge
jp
mov
xchg
and
cmp
dec
fnsave
add
daa
xchg
add
scas
call
js
stc
and
xor
fldl
xor
inc
jbe
or
dec
dec
adc
cmp
bnd
push
or
pop
pop
inc
push
inc
jae
cmpsl
push
mov
xlat
lcall
inc
iret
aam
mov
mov
subl
mov
in
insb
push
fnstcw
push
jno
ret
cmp
out
push
rorb
jp
jb
rcrl
pusha
adc
mov
push
mov
pop
insl
mov
nop
jno
inc
in
xorb
pop
jb
repz
adc
jle
push
outsb
adc
out
data16
scas
sbb
dec
cmpb
out
cmc
fldl
push
cli
cmp
jae
hlt
fucomp
adc
cmp
sti
and
scas
sub
ss
fidivrs
js
mov
cmpb
cli
adc
dec
imul
pusha
clc
mov
les
push
mov
repnz
scas
lds
xchg
inc
add
lock
dec
out
pusha
xchg
pop
repnz
xchg
test
dec
stos
lea
rorl
pop
and
mov
and
add
dec
cvtps2pi
dec
data16
imul
movsl
pop
and
add
outsb
jbe
sbbl
jmp
mov
pushf
andb
sub
stc
fsts
js
cwtl
sub
jecxz
xchg
int
xchg
xor
mov
imul
adc
mov
inc
mov
fdivrs
test
cmpsb
pushf
je
mov
mov
call
adc
loop
insb
add
xlat
xchg
add
imul
add
leave
mov
bound
ja
stc
test
ljmp
pop
jo
pop
adc
cld
popf
add
out
pop
fstl
and
loop,pn
mov
addb
inc
jmp
inc
insb
lret
sbb
stos
adc
rcr
cs
jne
push
dec
movl
and
outsb
push
pop
sbb
stos
push
mov
pop
or
scas
ficoms
cmp
ljmp
insb
add
outsb
mov
add
cmp
jl
jmp
jg
mov
jb
daa
movsb
hlt
xchg
push
lahf
pop
cmp
inc
loop
out
mov
dec
popa
push
icebp
sbb
pop
shlb
fs
xor
dec
jb
js
jb
sbb
push
pop
bound
cmp
insl
pusha
adc
mov
pusha
jne
xchg
push
notl
jo
cld
push
dec
mov
jns
jle,pt
cmp
mov
hlt
daa
cmp
fisttps
rcrb
mov
cmpsl
addr16
inc
dec
movsl
jno
les
stos
pop
adc
sbb
jb
in
push
jge
add
lea
push
loop
mov
repnz
mov
jae
out
inc
jns
pushl
pop
cwtl
inc
stos
arpl
or
movl
dec
or
ds
mov
insb
pop
ds
sub
stos
mov
std
cmpsl
lahf
pop
loope
fcomi
das
out
sub
jo
add
addl
into
mov
jg
inc
lds
mov
pushf
pop
pop
rorb
out
das
dec
pop
insl
jp
add
sbb
es
xchg
pusha
jl
jl
sub
out
loopne
cltd
aad
loopne
push
mov
fdivs
aam
stos
outsl
aaa
daa
or
and
mov
js
xchg
scas
dec
orl
push
push
lock
or
sub
pop
movb
lret
sbb
inc
js
cs
and
pop
shr
sub
pop
int3
repnz
pop
xchg
jb
mov
cmp
cli
js
icebp
or
sbb
inc
pop
mov
jne
sub
jb
inc
jl
lcall
bound
es
push
sahf
xor
jmp
lcall
and
in
popf
addl
inc
jmp
fdivp
scas
pop
call
stc
jno
ret
and
jmp
jne
dec
push
int3
push
or
pushf
jne
xchg
cmp
cmp
xor
daa
dec
push
insb
fmul
call
adc
xor
cmp
je
lock
ds
mov
in
aad
mov
cmc
js
fmul
outsb
lret
and
imul
inc
movsb
cwtl
xor
mov
mov
mov
inc
or
cli
enter
pop
xor
sbb
pop
cmp
mov
dec
in
mov
bound
das
test
into
xchg
dec
xlat
sub
add
stos
ds
sbbl
push
cmp
int3
andb
test
xor
mov
sahf
mov
jno
sub
fsubl
jns
movsl
outsl
cmpsl
in
inc
stc
pop
lock
xor
out
je
mov
pop
call
into
ret
addr16
dec
xor
insl
lahf
xlat
nop
cmp
push
or
jno
cmp
les
data16
xor
push
insl
out
jns
push
sahf
mov
pop
loope
xor
pusha
fnstcw
xor
insl
xchg
xor
add
out
mov
out
and
mov
jl
pop
pop
inc
pusha
jb
xchg
push
mov
scas
inc
scas
cmp
jo
les
fistpll
cmp
andb
xor
pop
jns
cmp
push
in
stos
jp
sub
fnstcw
jns
in
mov
ja
test
push
jo
jmp
adc
mov
fldcw
fstpt
dec
js
push
mov
xchg
outsb
arpl
jbe
adc
xor
xorl
jbe
mov
mov
sarb
popa
imul
mov
enter
jnp
inc
leave
cmp
jmp
mov
push
sub
dec
xchg
fwait
es
mov
add
aad
stos
std
mov
inc
push
push
mov
clc
xchg
cwtl
or
push
or
inc
jae
sbb
aam
inc
stc
arpl
jg
data16
mov
cmp
or
imul
pop
imul
fcompl
dec
addb
jns
cmp
pop
scas
je
idivb
dec
sti
js
cmp
out
push
and
cmp
mov
pop
call
add
insb
push
and
ljmp
repnz
push
into
mov
pusha
lock
js
in
lcall
push
mov
mov
int
jo
inc
scas
js
in
lcall
dec
mov
aaa
fdivrl
out
xchg
je
test
pop
xor
jns
cmp
or
scas
jl
or
rcll
xor
mov
jns
bound
movsl
popf
popl
sub
jp
jp
mov
jp
inc
jns
cmp
xchg
push
adc
dec
dec
fwait
je
push
rolb
int
je
cs
jns
mov
lea
mov
in
test
js
cmp
lret
daa
cmp
mov
mov
cmpsb
lret
pop
data16
fisubrs
dec
aas
pushl
dec
ret
inc
lahf
lret
pusha
jns
dec
insb
sub
lcall
mov
jecxz
xor
ja
xchg
out
cmp
mov
pop
orb
inc
fildl
cwtl
push
inc
sbbb
in
or
and
clc
push
xor
xchg
mov
pop
adc
leave
je
mov
inc
or
and
pusha
outsb
insb
in
ret
add
icebp
jnp
imul
daa
mov
popa
add
es
cmp
lcall
les
xlat
outsl
pop
xor
push
push
bound
pushf
jp
jl
loopne
daa
lret
push
fs
bound
xchg
scas
js
loope
fiadds
sarl
cmp
sbb
jns
sbb
and
cmp
in
xchg
mov
movsl
cmp
sub
hlt
jp
inc
push
xor
cmp
pushf
and
pushf
lods
jb
clc
and
insb
adc
in
ret
outsb
or
xchg
xor
mov
xlat
inc
stos
mov
popf
outsb
pop
xor
popa
shl
dec
adc
fmull
sub
jo
sbbl
mov
adcb
push
mov
fdivl
shlb
mov
fwait
loope
jge
jecxz
insl
jae
pop
pop
xchg
xchg
inc
popa
lcall
cmp
popa
cmpsl
cmpsl
jp
push
mov
mov
lock
outsb
fnstenv
jle
lret
push
nop
inc
xchg
jg
xor
sub
pusha
mov
bound
jg
push
ret
cmpsb
test
fwait
add
push
jp
push
cli
jbe
push
cmp
pop
xchg
int
icebp
and
imul
addb
aas
shr
cmp
imul
loop
or
rorb
sbb
out
pop
pop
stos
push
inc
adc
jae
fbld
sahf
mov
je
mov
test
mov
into
lret
cmp
adc
xchg
jg
int3
into
xchg
leave
dec
rorl
pop
mov
enter
xchg
mov
push
sahf
dec
push
cwtl
outsb
cwtl
repz
in
das
in
mov
lods
nop
cmp
pop
sub
jbe
outsl
xor
xchg
je
cmp
dec
jbe
sub
fadd
int
pop
mov
sbb
pop
mov
push
je
inc
insl
adcl
add
adc
js
and
and
xchg
pushf
cwtl
push
dec
fsubrl
push
jnp
mov
in
in
inc
xchg
pop
lods
push
xor
pop
je
sarb
jb
aam
push
ret
push
sub
outsb
push
lret
cmp
pushf
cmp
and
mov
sub
push
jo
xor
int3
das
dec
lret
scas
fcomp
das
inc
pop
test
outsb
jp
insb
test
push
into
jg
cmp
cmp
mov
cmpsl
or
dec
jb
mov
jp
jmp
dec
xchg
xor
cmpsl
cwtl
cmp
sub
sbb
mov
adc
test
ds
xlat
inc
adc
jnp
adc
dec
das
adc
inc
test
movsb
pop
fsubp
inc
lahf
imul
add
mov
push
mov
mov
fwait
and
bound
jns
fisubl
stos
cmpsb
xchg
and
aam
mov
jo
push
inc
dec
lds
cmp
andb
dec
jo
mov
andl
mov
cmp
jb
mov
jp
adc
inc
or
in
push
add
call
notrack
outsb
movb
scas
or
bound
mov
pop
mov
bound
cmp
sub
outsb
push
test
lcall
jge,pt
cmp
loopne
jo
scas
js
in
sbb
aas
aam
lahf
and
imul
scas
mov
dec
add
insb
dec
test
and
mov
pushf
cmp
mov
pop
mov
test
sub
fcmovnu
and
pop
sbb
dec
adc
dec
stc
in
fs
mov
cmp
cmpsb
inc
out
daa
cmp
xlat
into
mov
es
jnp
dec
inc
push
movsl
jnp
cli
cmp
rcll
insl
cmp
bound
inc
pop
push
cmp
es
addl
outsb
insl
iret
inc
xchg
jle
jne
push
in
jb
pop
mov
adc
in
bound
fcompl
add
pop
fidivl
dec
cmpsb
jb
dec
mov
scas
add
adc
fcmovu
inc
outsl
bound
dec
fs
cs
dec
jnp
inc
inc
cmpb
push
add
push
fidivrs
and
sub
loopne
push
nop
daa
movsl
pop
sub
jnp
data16
repnz
cli
pop
mov
in
insb
inc
scas
inc
push
js
jb
dec
stos
fidivrs
mov
adc
cmc
xor
sub
es
pop
ds
push
sub
scas
mov
push
mov
ret
jg
jo
sub
pusha
sbb
sbbb
dec
enter
pop
xor
sbb
cmp
cld
xor
inc
stc
shl
ds
pop
lret
inc
mov
stc
lahf
sub
insb
xlat
fcoml
pop
mov
inc
cmp
stos
sub
adc
and
das
mov
sahf
mov
and
outsb
test
pop
cmp
fwait
push
dec
inc
rcl
scas
mov
ret
je
aam
jp
fiaddl
and
aad
mov
imul
cmp
or
gs
lds
bound
int3
pop
insb
dec
add
pop
lds
dec
pushf
imul
push
int3
pusha
cltd
jne
movsb
jae
sbb
dec
pop
outsb
arpl
sub
xchg
cmp
pusha
and
sbbb
js
cmp
pop
pop
pusha
call
leave
push
adc
mov
jle
shl
movaps
call
dec
repnz
and
imul
mov
pop
movsb
xchg
dec
xchg
lcall
push
push
xor
es
or
xchg
cli
jp
repz
mov
jnp
inc
jge
ds
inc
add
outsb
fcoms
adc
jns
cmp
sub
pop
das
icebp
pop
pop
mov
loop
add
lea
rorl
out
pusha
scas
mov
jl
dec
dec
pushf
mov
pop
add
pop
call
dec
cmp
push
mov
cmp
test
fcmovnbe
or
add
stos
stos
ds
push
rcll
mov
fs
addb
cltd
test
imul
sbb
jae
xchg
rolb
jge
xchg
xor
mov
lods
test
mov
icebp
ret
add
out
es
pop
lods
mov
pop
scas
fidivrl
pop
scas
lret
inc
jno
xchg
test
mov
cwtl
add
jmp
adc
lahf
int3
in
inc
call
fwait
dec
shl
mov
sbb
cmp
lahf
popf
and
lods
xchg
iret
adc
repz
cmp
or
popf
adc
mov
xchg
and
or
sarl
sbb
rcll
hlt
outsb
jo
mov
mov
dec
into
push
jo
incl
ret
push
ljmp
mov
popf
and
pop
sub
lods
jmp
sarb
xchg
pop
in
sahf
mov
sub
mov
jl
mov
hlt
bound
mov
ja
in
mov
insl
and
aam
pop
xchg
mov
mov
clc
mov
rolb
add
adc
xor
cmp
or
or
push
cwtl
lret
or
cmp
cmp
dec
in
cmovbe
imull
dec
push
hlt
lret
inc
pop
mov
sbb
movsb
into
jmp
es
fs
mov
movsb
pusha
xorb
out
inc
sub
shrb
daa
int
push
scas
outsb
popl
sbb
std
loope
out
jo
outsl
nop
mov
push
mov
lret
loope
push
xchg
test
mov
mov
push
lret
push
dec
pop
pop
push
mov
push
sbb
sbbl
or
pushaw
jp
and
mov
inc
fstpl
sbb
or
inc
pop
xchg
push
mov
mov
inc
push
test
inc
mov
dec
cmp
dec
clc
xor
fisttpll
sub
cmp
cmp
fldl
out
bound
imul
jle
ljmp
add
iret
sub
fsubr
gs
or
push
call
push
or
push
lret
jo
sub
in
pop
mov
cwtl
add
lcall
push
das
pop
jp
xor
shl
lcall
xchg
test
bound
icebp
lock
gs
outsl
and
mov
pusha
jnp
sbb
adc
and
into
lcall
sti
push
push
idivb
rorl
cs
int3
nop
jo
xchg
xlat
inc
aaa
inc
scas
add
gs
xor
pusha
test
sbb
js
cmp
inc
pop
push
je
mov
add
mov
es
dec
jg
push
or
add
mov
sbb
pop
xor
fwait
out
movsb
ret
and
sub
add
sbb
stos
cmp
sub
push
sub
inc
stc
or
ds
pop
mov
jg
push
push
out
xlat
push
lock
into
or
popf
bound
dec
xchg
dec
into
int
clc
cmp
divl
in
adc
mov
into
mov
jg
mov
in
jecxz
and
mov
stos
fisttpll
outsb
test
add
cmp
inc
push
lds
aas
jb
dec
xorb
test
jl
int
push
cmp
add
dec
enter
add
mov
xor
inc
das
dec
pushl
insl
rcrb
rcrl
mov
jl
mov
xor
cmp
fsincos
repnz
inc
pop
dec
jge
and
cmpsl
xor
outsb
int3
mov
popa
xor
test
cld
adc
inc
xor
rcll
movsl
out
and
and
imul
iret
mov
mov
or
push
ret
gs
shlb
jbe
push
xchg
loop
into
jo
inc
mov
outsb
dec
fistpl
push
in
cli
sahf
pop
xchg
mov
pop
push
mov
movsb
xor
daa
lahf
inc
pop
adc
ljmp
pop
int3
dec
xchg
in
inc
lods
aaa
sbb
push
gs
repnz
lds
sti
adc
lods
xor
mov
call
pusha
cmp
je
in
jns
and
jnp
aam
cmc
mov
fcom
xor
popl
jns
je
lahf
lcall
pop
pusha
push
int3
push
sub
pop
dec
notb
inc
fcoms
xor
push
addr16
test
ss
aas
sub
push
push
in
and
pop
in
cli
sub
dec
push
stos
jecxz
out
fcoml
aas
out
or
mov
out
push
add
mov
mov
pushf
bound
pop
test
int
cmp
sub
add
xor
loopne
jp
stc
pop
test
inc
jge
sbb
jno
jb
jbe
xor
dec
inc
xor
scas
out
aas
cmp
pop
push
sbb
rclb
cmp
sbb
push
sub
inc
and
sbb
mov
clc
adc
mov
inc
cmp
mov
xchg
push
sub
filds
sbb
push
hlt
push
aaa
cmp
xchg
sub
enter
pop
pop
mov
rcrl
mov
inc
sahf
test
adc
jl
out
pop
xor
push
mov
fmulp
sub
and
pusha
arpl
leave
das
lret
into
clc
outsl
into
inc
pop
fisubrl
and
cmp
pushf
and
jne
pop
or
pop
sub
adc
jge
fwait
lds
lods
ja
pop
daa
loope
sar
xchg
and
mov
addr16
fiadds
sbb
push
jne
or
stos
mov
insb
movsl
out
mov
roll
mov
jb
out
dec
fcom
mov
ds
jmp
xlat
ja
xor
iret
testb
testb
out
sbbl
mov
xchg
lahf
push
roll
enter
stc
pushl
sbb
ret
xchg
in
jbe
add
out
dec
scas
stc
stc
enter
jl
push
stos
sti
je
insb
ret
or
hlt
mov
fiaddl
or
and
push
movsl
xor
out
fiadds
pusha
and
fcomps
les
mov
dec
adc
and
pop
push
inc
popf
loopne
sbb
pushf
cltd
push
andb
shrb
and
mov
lods
lods
and
or
mov
cmp
das
sbb
outsl
inc
mov
adc
dec
dec
inc
or
xchg
inc
add
out
inc
sti
ds
sar
mov
loop
jecxz
fs
outsl
push
mov
jecxz
push
addl
inc
mov
inc
pop
gs
arpl
sbb
sbb
cltd
inc
mov
xor
lea
push
inc
sub
inc
inc
lahf
cmc
jo
cmp
inc
lea
loopne
in
ret
pusha
dec
sbb
dec
mov
hlt
mov
inc
loopne
sbb
dec
push
repnz
pop
dec
and
sub
fldt
and
pop
jl
and
inc
les
mov
pop
out
imul
shl
add
out
push
shlb
and
jae
xor
outsl
push
fwait
cmc
cmp
cwtl
push
in
mov
mov
sub
push
push
sbb
mov
aaa
pusha
jb
push
pop
jecxz
pop
sbbb
movq
roll
divb
out
pop
test
pushf
cmc
dec
call
clc
in
push
in
dec
add
fwait
adc
test
push
and
into
add
adc
and
inc
mov
jp
lret
movsb
jmp
out
clc
mov
dec
loop
cmpsl
clc
aaa
cmp
repnz
cmp
clc
popf
repz
mov
jb
popa
xchg
mov
jnp
stc
aam
jle
cmp
mov
dec
les
stc
movsl
inc
ljmp
daa
lea
loope
in
push
lock
rolb
or
sbb
outsb
div
ror
js
fidivrs
fucom
mov
rcll
dec
mov
popa
out
jle
mov
in
sbb
lds
mul
pop
scas
mov
lcall
sbb
mov
fsubr
call
les
adc
mov
sub
scas
aaa
or
movsb
fildll
pop
inc
add
adc
cmpsb
js
jo
mov
movsb
pop
dec
aaa
je
mov
jp
pop
push
ljmp
and
outsb
push
outsl
xchg
mov
xor
pusha
arpl
loope
or
adc
mov
pop
mov
jne
dec
lock
dec
jns
adc
dec
dec
push
inc
fstps
outsl
dec
inc
test
pop
lcall
clc
mov
or
enter
push
adcb
sub
push
jnp
or
jne
sub
mov
outsb
test
mov
sbb
cmp
bound
xor
xor
icebp
mov
lcall
adc
or
imul
cmp
xchg
inc
leave
int3
pop
int3
clc
sbbb
add
xor
cwtl
push
daa
lock
movsb
push
or
stc
imul
xor
mov
and
je
mov
shlb
pop
stos
jbe
ficompl
shrl
shll
std
pop
stos
fdivrl
mov
xchg
int
loope
out
test
xor
xchg
inc
xchg
cmp
xor
cmp
pop
adc
mov
push
js
jnp
dec
lret
mov
lret
mov
jg
mov
fchs
adc
dec
gs
add
push
xor
mov
xlat
orb
mov
xor
fs
xor
sub
inc
xchg
loop
aas
sub
dec
jge
sbb
loope
or
repnz
ja
xchg
pop
pop
imul
add
xchg
pop
cmpl
mov
int
xor
cwtl
mov
mov
sbb
xchg
ds
hlt
das
subb
pop
inc
loop
dec
lcall
divl
sahf
mov
mov
or
fsubrs
and
mov
push
aad
arpl
and
sbb
lahf
mov
fdivrs
mov
mov
xor
mov
leave
movsl
mov
sbb
mov
mov
ds
arpl
inc
xorb
bound
xchg
jo
inc
xor
cmp
push
mov
add
dec
loop
pop
ljmp
xor
push
sahf
das
sbb
mov
mov
mov
mov
xchg
mov
subl
and
pop
adc
insb
lcall
pcmpgtw
iret
push
pop
push
shlb
pop
aaa
jl
sbb
mov
pop
sarl
adc
mov
lahf
sbb
xor
xchg
ljmp
outsl
xchg
lods
mov
jno
pop
mov
sbb
out
stos
dec
sti
adc
fcmovb
inc
dec
fld
rcr
push
xchg
and
clc
mov
xor
aaa
arpl
aas
inc
jp
mov
sahf
lods
mov
inc
push
xchg
outsl
adc
pop
int3
push
aaa
negb
or
pop
mov
outsb
pop
and
insb
adc
shlb
ret
pop
pop
push
leave
and
movsl
inc
test
repnz
shr
shlb
inc
adc
pop
or
ja
dec
adc
inc
pop
out
xorl
xor
cmp
pop
push
xor
push
ss
adc
aas
int
movsl
pop
arpl
imulb
test
mov
push
adc
jae
adc
hlt
out
out
lcall
xlat
aam
out
shll
lahf
scas
mov
pop
in
bound
xchg
cmpb
iret
push
jp
jns
sbb
pop
lret
into
pushf
inc
pop
out
mov
out
outsl
inc
iret
loopne
fcompl
mov
jns
in
out
add
repz
jae
mov
push
xchg
dec
push
sub
aad
std
mov
or
xor
jo
pop
jle
insl
pushf
push
movsb
push
pop
mov
subl
rcr
cmp
sahf
adc
orb
dec
lods
mov
insl
in
jg
mov
push
mov
inc
mov
sub
outsb
mov
xor
xor
shll
clc
fidivrs
iret
mov
outsl
or
xlat
mov
mov
push
orb
add
cmc
push
data16
test
cmpb
xor
jbe
aas
xor
mov
int3
xchg
mov
adcb
rcrb
adc
mov
dec
fidivrs
aad
add
push
test
xchg
and
push
clc
mov
sbb
dec
rclb
neg
cld
test
fidivs
adc
xchg
and
out
sbb
or
fnstsw
and
icebp
inc
clc
jg
jmp
cmp
adc
into
gs
sbb
jg
or
xchg
sti
pmulhuw
pushf
popa
mov
out
lret
inc
push
lcall
push
or
ds
movl
ret
in
into
fsubrl
jae
and
push
push
ret
pop
aas
mov
jno
ss
push
lret
pop
sub
pop
jecxz
out
roll
ljmp
sbbb
cmp
test
jge
mov
jg
out
jg
ss
loopne
outsl
aad
push
push
stos
sub
in
iret
and
mov
lahf
xchg
imul
adc
and
aam
cmpb
mov
mov
cmpsl
std
iret
dec
and
cmp
pop
shrl
mov
push
filds
pop
sti
add
nop
arpl
testb
int3
out
jg
inc
andl
cwtl
adc
xor
mov
dec
and
call
scas
ljmp
or
mov
adc
in
loopne
pop
scas
push
adc
lds
fisttpll
rclb
jo
jmp
or
mov
mov
sub
icebp
repz
and
js
cmp
enter
jno
das
xchg
jmp
into
mov
xor
push
iret
scas
mov
add
pop
shll
into
mov
add
bound
les
xchg
hlt
xor
addr16
pop
jg
jae
push
or
rclb
xchg
fimull
mov
subl
ficoml
pop
push
call
xor
addb
push
sub
dec
sahf
mov
mov
daa
std
loope
mov
mov
dec
nop
adc
jmp
in
pop
insb
xlat
cmp
pop
xor
mov
or
roll
mov
cmpb
int3
int
xchg
scas
lods
mov
das
fwait
pushf
fsubl
ja
jnp
aaa
out
movsl
out
mov
icebp
imul
stc
inc
fwait
mov
test
sub
pop
arpl
fwait
andb
sbb
mov
xlat
or
mov
adc
jg
mov
ljmp
push
das
add
mov
sub
xchg
or
bound
ret
push
sahf
sbb
test
cmp
mov
sub
cmp
aaa
mov
jge
insl
fs
leave
test
adc
movsl
stos
pop
cmpsl
fdivs
jb
ds
xor
jae
js
lea
mov
dec
je
sub
sub
aam
mov
push
adc
mov
pushf
sarb
xor
clc
das
cmp
gs
lret
fsubrs
out
xor
push
lock
in
push
pop
dec
fistl
pop
dec
mov
xchg
add
movsl
pop
mov
daa
adc
jmp
push
add
inc
out
inc
mov
mov
test
sbbb
fstpt
popa
test
daa
shll
inc
aad
cmpsl
out
std
cltd
dec
jno
cmc
pop
xchg
inc
inc
inc
cmp
push
cmp
xchg
test
movsb
xchg
pop
adc
lret
sahf
fs
pusha
pop
test
and
mov
mov
dec
cmpsb
rorb
mov
rorb
lret
test
stos
clc
or
mov
or
add
cmp
xchg
bound
mov
pusha
inc
lcall
jo
inc
into
cmp
adc
sbb
insb
dec
out
shrb
dec
loop
mov
jp
cmp
fidivs
dec
lahf
and
or
cmp
outsl
pop
pop
push
js
and
test
mov
out
mov
xchg
mov
mov
push
arpl
call
xor
jg
loopne
outsl
ds
and
test
adcb
xchg
out
out
out
fsubl
arpl
int
mov
mov
nop
sbbl
fstp
ds
xchg
inc
rorl
mov
jae
add
push
ds
adc
daa
subb
add
pop
mov
stos
je
fisubl
cld
pop
jge
or
aad
mov
adc
jae
adc
int
inc
xchg
fidivs
shlb
mov
das
je
inc
aad
or
mov
nop
push
and
ja
rcr
sub
enter
aaa
loop
xchg
inc
imul
mov
jo
push
xchg
rcrb
pop
push
or
xor
mov
lahf
movsl
jl
enter
jge
adc
mov
dec
lahf
cmp
push
dec
jno
test
stos
pop
jl
scas
xor
xor
cs
push
lea
jno
mov
dec
dec
dec
arpl
icebp
push
adc
stc
push
pop
xchg
push
int
mov
mov
pushf
mov
inc
inc
ficompl
ss
sbb
aaa
int
imul
cld
outsl
jg
rclb
push
add
loopne
out
xchg
aaa
xchg
les
or
orb
punpckhbw
arpl
es
out
cmpsl
leave
lret
pop
cmp
addb
mov
cmpsb
sub
pop
ds
fdivl
mov
fs
adc
mov
and
aaa
mov
arpl
push
cmp
out
ds
popf
in
insl
addr16
push
push
mov
sbb
xor
lret
push
lods
mov
sahf
push
jmp
shrl
int3
adc
popf
ds
outsl
cmp
pop
xchg
xor
mov
mov
inc
repz
icebp
bound
enter
mov
jge
dec
andb
into
cltd
stos
mov
or
mov
jae
and
mov
xor
cmpsb
pop
cmpsb
mov
jl
xor
adc
inc
scas
pop
dec
xchg
jns
mov
jp
xlat
inc
adc
mov
cwtl
push
xor
aam
push
jl
inc
push
mov
mov
xchg
ret
mov
xchg
dec
push
push
add
jp
inc
or
pop
jge
sub
mov
pusha
icebp
sahf
dec
mov
mov
pop
sahf
add
mov
dec
negl
fstl
test
stos
push
orl
ss
gs
push
icebp
cmp
cmp
jecxz
jmp
push
inc
or
xchg
mov
test
and
inc
inc
and
cltd
insb
pushl
jmp
jge
lahf
and
mov
mov
stos
jb
jb
add
or
pop
int3
xchg
pop
push
or
ss
inc
call
adc
shlb
int3
pop
and
cli
adc
xchg
outsb
cmpsb
ljmp
lret
push
outsl
xchg
push
enter
lret
push
testl
aas
push
scas
stc
cs
and
mov
pop
int3
xchg
movsl
nop
sub
jno
xor
es
inc
sub
pop
inc
cmp
pop
jne
bound
xor
movsl
mov
fldcw
insl
jo
xlat
cltd
das
mov
mov
iret
pop
aaa
cmpb
movsl
sub
mov
inc
stos
push
jge
mov
or
add
add
xchg
dec
pop
lahf
out
stos
hlt
jl
leave
aas
ret
inc
out
pusha
js
cmp
push
mov
and
mov
mov
and
stos
fsubrs
cli
fsubrl
cmp
aad
xchg
push
mov
mov
mov
and
sbb
mov
xchg
into
cmp
push
xchg
xor
lret
cmpsl
push
aaa
xor
jb
mov
or
call
xor
cmp
mov
mov
add
movsb
pop
adc
xchg
adc
adc
pop
cs
dec
ja
mov
dec
in
fldenv
lods
cld
insb
arpl
rorl
inc
cmp
ret
mov
enter
xor
xchg
xor
jns
xchg
sbb
enter
sahf
pop
jl
aad
jg
cmp
ss
or
sbb
nop
mov
int
sub
imul
gs
push
mov
adcl
fcomps
adc
lcall
mov
sbb
popa
imul
mov
aaa
cmp
dec
outsl
sarb
mov
sahf
popa
pop
test
std
xchg
outsl
int
jns
push
jo
xor
sahf
dec
jns
cmp
cwtl
lret
bnd
into
call
sub
repnz
pop
into
dec
out
js
cmp
dec
mov
mov
loopne
dec
jp
dec
mov
push
adc
sub
push
daa
pop
mov
adc
jle
mov
repnz
iret
adc
mov
mov
or
pop
pop
sbb
sahf
jb
imul
sbb
xchg
sub
pusha
pop
imul
data16
mov
inc
ss
dec
jmp
jae
mov
mov
ja
aam
pushf
cs
aam
dec
insb
jae
inc
sub
cmpsl
xor
insb
pushf
and
int3
cmpl
gs
inc
mov
test
into
add
cwtl
loope
xor
dec
add
add
adc
and
mov
outsb
adc
mov
jle
and
cs
cmpsb
inc
mov
fnsave
and
loop
arpl
scas
mov
shlb
sbb
notb
add
push
loope
stos
lods
jp
aas
sahf
fmuls
pop
shll
mov
in
pop
jmpw
pop
aam
ret
pop
mov
sbb
fidivrl
nop
mov
rorl
xor
inc
subl
cmp
fs
inc
push
cwtl
les
dec
lret
fldcw
jl
stos
sbb
adc
pushf
bound
pop
and
loopne
js
loopne
push
sbbl
pop
ret
data16
outsl
push
sub
xchg
cmc
js
dec
push
fcmovnb
test
insb
or
movsb
xchg
pop
js
repz
call
out
inc
outsl
jp
push
lret
pop
scas
add
js
and
mov
mov
not
shlb
dec
add
push
mov
xchg
or
dec
pusha
rcrl
dec
cmpsl
pop
push
mov
lods
add
lods
push
in
aaa
call
arpl
hlt
xchg
out
jg
daa
cmpxchg
loopne
jecxz
jle
xor
adc
sbb
or
pop
stos
jno
pusha
fs
pop
adc
sub
test
shl
jnp
jp
sbb
sbb
in
sbb
icebp
das
sbb
aam
dec
mov
cwtl
push
ret
mov
dec
lret
mov
punpckhwd
push
xchg
jp
push
insl
ret
in
jb
imulb
dec
mov
loope
xchg
cmc
cwtl
lahf
jle
xchg
lea
jle
mov
fwait
lret
loop
cmp
dec
mov
push
mov
cmp
pusha
xchg
inc
mov
xchg
mov
xor
adc
inc
jg
pop
jbe
lcall
andl
jbe
sub
mov
jo
cmp
mov
mov
sbb
push
movsl
push
insl
inc
pop
dec
or
push
xchg
sub
dec
rcrb
jg
mov
inc
xor
rcll
push
addb
sbb
cmp
stc
fidivrs
rcl
lock
mov
js
jns
jns
mov
xor
or
into
std
xchg
xchg
ljmp
inc
in
enter
sub
mov
jle
ss
call
xchg
lods
mov
and
push
sub
das
pop
mov
cmpsb
cmp
pop
nop
xorl
imul
inc
fs
test
sbb
bound
pusha
aam
in
je
push
lock
inc
xor
mov
fistpl
jo
fwait
cmpsb
cmp
rcll
imul
cmp
add
dec
daa
cld
pop
inc
test
pop
mov
xchg
pop
cmp
dec
mov
in
mov
cmpsl
lret
fmul
and
fs
pusha
shlb
pushf
mov
arpl
fs
sahf
mov
push
sub
cmpsb
jae
pop
and
cmp
int3
push
inc
outsl
cmp
shll
ret
push
loop
setae
cmp
sub
inc
pop
lahf
xor
pop
loopne
adc
pop
popa
out
incb
add
add
push
mov
cs
cmp
mov
pop
pop
mov
mov
jmp
inc
lahf
inc
insl
lock
mov
push
inc
pop
xor
or
jbe
movsl
and
sub
sub
cmpsb
das
inc
xchg
out
lahf
dec
inc
mov
repnz
popa
aas
es
mov
sbb
shl
cmc
loop
fs
fmull
lods
inc
xchg
dec
in
pop
in
fs
int
push
pop
imul
xchg
test
and
pop
mov
fisubrl
pop
mulb
inc
dec
jp
push
lret
mov
hlt
xchg
mov
or
iret
cmp
sahf
jl
loop
push
mov
dec
les
sahf
idiv
in
xchg
push
out
mov
lea
nop
shrl
cmp
cld
cwtl
hlt
test
jmp
jp
clc
test
mov
daa
bnd
mov
dec
ja
call
cmp
insl
cld
add
or
push
inc
scas
lea
ret
mov
adc
cmp
test
and
nop
dec
stos
or
addr16
mov
inc
pop
xchg
ret
test
sbb
adc
xchg
addb
jbe
stos
pusha
test
out
push
mov
xor
push
lods
insl
loop
push
dec
mov
mov
xchg
test
repnz
movsw
cmpl
inc
xchg
pusha
jmp
push
shlb
cmp
out
fcompl
mov
push
dec
and
mov
jnp
in
jb
mov
nop
inc
sarl
xchg
sbb
jbe
pushf
mov
stos
jl
leave
push
test
test
or
add
and
sub
push
xor
mov
mov
andb
inc
jge
inc
add
test
jae
fwait
es
fcompl
sub
inc
imul
xchg
insl
imul
mov
in
cmp
mov
cli
data16
sub
ljmp
fldt
data16
in
clc
pop
popf
mov
dec
lahf
cmc
cmp
stos
dec
lret
pop
aas
pop
loopne
hlt
cmp
dec
mov
addb
imul
mov
aas
repnz
dec
pop
fs
pop
mov
in
into
jae
or
stos
cli
jge
cmp
dec
mov
fildll
bound
cmp
fildl
mov
insb
push
mov
xor
mov
inc
lcall
lahf
xchg
sbb
xchg
push
pop
movsl
adc
jp
xchg
and
xor
push
movsl
pop
pop
ret
cmpsb
pushf
sbb
enter
jno
cmp
int
mov
push
mov
xor
sbb
dec
pop
jae
push
xchg
jbe
outsl
inc
idivl
and
dec
adc
mulb
push
pop
pop
xchg
xlat
lods
or
hlt
test
push
sbb
outsl
int
inc
push
mov
or
ss
mov
jno
and
add
and
xor
mov
jo
pop
pop
ror
roll
mov
xchg
dec
test
loop
out
add
pusha
dec
icebp
cmp
mov
mov
or
mov
xor
cltd
sbb
shll
shll
jno
jb
cmp
add
sarl
outsl
xchg
rcl
pusha
bound
dec
or
xchg
adc
outsl
popa
stc
adc
addr16
icebp
pop
outsb
pushf
mov
dec
mov
or
dec
dec
cli
push
jnp
dec
sbb
dec
movb
mov
jp
jnp
lret
push
adc
insl
inc
jbe
es
inc
mov
inc
subb
in
insb
stos
lods
loop
push
fldl
jbe
inc
mov
and
sub
test
xchg
mov
jns
xor
inc
jp
pop
cld
pop
sub
cld
movsl
jne
int
cmp
push
cmp
xor
ret
mov
nop
pop
cmp
xlat
dec
adc
fnstcw
cmpb
add
add
cs
and
mov
popa
pushf
dec
xchg
rcrl
push
lcall
add
pop
cmovg
push
jns
pop
jg
cmpb
pop
push
mov
fwait
sbbb
mov
xchg
or
or
xchg
push
xlat
sahf
xor
dec
imul
lahf
xchg
mov
mov
xchg
xchg
rcr
adc
gs
mov
mov
cmp
mov
subb
mov
pop
jae
aaa
jp
xchg
push
mov
mov
insb
jle
sub
in
sbb
sub
push
sti
pop
xor
pop
and
inc
gs
sbb
xor
xchg
loopne
jg
xor
mov
ret
cli
pop
and
cli
xchg
sbb
push
daa
jbe
jnp
inc
in
mov
mov
pop
sub
data16
loope
push
lds
xor
scas
cmpsb
sbb
inc
scas
inc
or
cs
push
aam
dec
push
mov
pop
insl
xchg
cmp
xchg
inc
inc
scas
and
sub
and
or
ret
pop
push
lea
aas
push
xor
sub
and
sbb
call
xchg
inc
divl
aaa
and
or
lret
les
and
pop
das
in
lock
orl
pop
in
push
cmp
adc
xchg
subb
cmp
decb
mov
xchg
mov
sub
loope
es
push
movsl
pop
mov
xor
sbb
cmp
pushf
pop
jmp
ret
add
push
or
jmp
int
stos
xor
leave
testl
mov
sub
jo
jl
aas
lahf
xchg
fcmovnbe
add
ret
adc
stc
loop
mov
adc
jle
xlat
arpl
jae
add
cmpsb
jg
rcll
movsl
xchg
adc
loop
fstpl
mov
cld
push
ret
push
fimuls
mov
dec
inc
push
scas
lcall
sbb
in
push
pop
inc
out
into
push
ret
inc
pop
arpl
and
js
roll
movsl
shl
push
scas
fstpt
mov
lcall
inc
pusha
das
xchg
push
jge
lea
in
ds
xor
js,pt
sar
inc
in
addb
cmpsl
add
dec
es
xchg
xchg
jb
adc
js
ss
dec
insb
movsl
lods
outsb
xchg
rcrb
mov
adcb
test
ret
cmp
movsl
sahf
xor
dec
jge
jmp
adc
adc
dec
je
sub
push
mov
stc
outsb
cmp
popf
xorb
push
aam
nop
pop
xchg
fstps
mov
mov
xor
pop
xchg
dec
sahf
in
negl
fstpl
add
dec
sahf
shrb
scas
push
push
pusha
sbb
into
mov
cmpsb
jmp
mov
test
into
data16
in
dec
cmpxchg
mov
js
jbe
cmp
cmpsb
inc
dec
cmpsb
movsb
ljmp
pop
divl
jg
cltd
mov
xchg
cmp
inc
ret
and
inc
into
stos
inc
mov
xchg
test
xchg
nop
jae
cmp
ret
add
insb
inc
mov
jmp
adc
scas
test
test
cmp
movsb
lods
dec
or
jg
pshufw
addb
jl
adc
mov
inc
stos
decl
push
dec
mov
mov
push
in
mov
pop
ds
xor
mov
aam
mov
int3
mov
push
in
pop
sub
je
pop
cmc
das
xchg
rol
inc
xor
nop
arpl
adc
cmc
test
xchg
jo
mov
inc
pop
aam
arpl
test
and
outsl
inc
jmp
jo
xor
adc
push
js
push
fcmovne
lock
lods
mov
inc
xchg
lea
dec
jge
scas
add
jg
mov
add
sbb
call
dec
fwait
movsl
ret
cmpsb
hlt
xchg
lea
out
mov
fcmovnu
popf
jb
push
shll
mov
add
inc
pop
scas
jl
fnstenv
lahf
mov
and
jne
fiaddl
sub
cmpsl
setg
loopne
mov
mov
mov
jge,pn
push
and
imul
gs
mov
sub
jmp
add
push
ljmp
cmp
mov
mov
push
clc
enter
mov
int
jle
cmp
add
inc
push
imul
ret
decl
test
cmp
cmp
movsl
daa
outsb
fwait
aam
test
adc
insb
hlt
fucomp
out
scas
sub
push
inc
repz
clc
sarl
sarb
pop
pusha
sahf
push
jne
fwait
and
repz
cmpsb
xchg
nop
and
sub
xchg
push
insl
add
lret
fwait
adc
cs
movsl
jp
add
mov
rol
xchg
mov
lock
mov
movsb
adc
and
mov
push
mov
mov
outsl
lds
sti
inc
inc
out
pop
dec
xlat
fwait
sub
out
push
popf
xorb
ret
xlat
cmc
out
scas
mov
pop
cs
sti
mov
or
mov
sarb
idivl
ret
stos
nop
add
movsb
es
sahf
dec
scas
cs
mov
cs
cmpl
pop
mov
fcomps
adcl
pop
ja
mov
mov
mov
and
repz
pop
cmp
sub
fsubrl
into
ret
jecxz
mov
mov
xorl
inc
jbe
mov
mov
and
je
lods
push
das
les
fsubp
and
and
sbb
adc
inc
aad
ss
scas
mov
mov
imul
lods
xor
mov
psubusb
or
test
movl
loopne
push
mov
push
cli
sub
xor
jo
inc
sbb
cmpsb
cmpsl
dec
loop
fildll
mov
movsb
push
dec
push
int3
and
inc
push
imul
push
in
lcall
rorl
lds
jb
divb
bound
lods
sub
fildll
cmp
push
pop
sub
pop
out
dec
dec
jge
ficoml
lods
sbb
mov
mov
stos
cmp
mov
mov
inc
fcoml
mov
ret
out
scas
fwait
call
cmpb
shlb
cmpsl
mov
xor
pop
inc
xchg
rolb
dec
jbe
inc
pop
jl
cmp
mov
gs
fwait
aad
icebp
stos
xlat
dec
xchg
pop
out
mov
ds
add
fimull
stos
stc
insb
mov
cmpsb
stos
fcoml
pop
inc
fucomip
data16
mov
inc
ds
add
jge
das
call
lea
adc
inc
in
repz
gs
dec
lcall
xor
pop
int3
mov
jb
sbb
jne
sbb
shlb
fisubl
add
xor
mov
add
push
data16
and
aam
push
arpl
loopne
xchg
mov
xor
adc
lret
pop
cmp
shrb
xchg
shlb
sti
xlat
dec
inc
xchg
jno
xor
sarl
fidivrs
inc
push
dec
data16
mov
or
dec
sahf
mov
loopne
cwtl
lea
mov
xchg
mov
aad
shlb
adc
mov
mov
ret
mov
mov
rcrl
xor
cld
out
ret
xor
add
loopne
sbb
xor
xchg
movb
xor
and
mov
inc
mov
pop
cmp
jb
repz
xchg
pop
ljmp
mov
push
and
pop
loopne
cmp
aaa
std
int
lock
mov
popa
push
lods
add
shlb
cli
mov
ss
xor
cmc
add
rorl
fdivl
dec
mov
lods
dec
xchg
data16
push
mov
mov
xor
fstp
xor
imul
xchg
sahf
mov
inc
icebp
dec
data16
rcl
gs
pop
rcrb
inc
adc
inc
in
addr16
pop
xchg
jo
loope
loope
mov
sbb
xor
fisubrs
jmp
dec
dec
and
shlb
xor
pop
xchg
xor
orb
dec
mov
mov
out
mov
popf
outsl
mov
fisubs
scas
mov
pextrw
jo
dec
mov
es
push
and
loop
pop
ret
inc
push
sbb
lahf
icebp
jb
xor
dec
xor
hlt
icebp
inc
in
pop
push
adc
insw
and
jg
sbb
mov
dec
adc
fsubs
movsb
mov
call
aam
and
xor
daa
jns
adc
rcrb
adc
cmp
cwtl
mov
ret
pop
adc
fstps
arpl
inc
mov
jne
or
in
int
xchg
sub
push
lea
cmp
scas
lahf
cmpsb
das
cs
and
jle
imul
pop
lahf
push
inc
ja
sbb
lahf
push
sub
in
pop
fs
xchg
cmp
je
test
or
xchg
xchg
lahf
std
iret
aaa
popl
divb
inc
push
pop
fadds
mov
sub
xor
decb
push
ficoml
incb
xchg
mov
clc
jo
adc
addr16
cmpsl
sbb
ret
and
xchg
jmp
mov
ficoml
pushf
in
rcrb
sbb
and
fdivl
or
ja
mov
push
es
rcrl
cmp
lods
ja
loop
or
call
in
mov
lods
push
cmpsb
fisubrs
inc
sahf
push
inc
cmp
push
fwait
adc
jns
sbb
ja
test
pop
mov
pop
mov
rorl
addr16
mov
mov
call
cmp
ror
cltd
xor
ret
ret
pop
dec
sbb
fsubs
shll
int
fcoms
jae
xchg
in
adc
jo
out
and
arpl
mov
pop
dec
daa
lret
pop
mov
test
lds
addr16
sub
push
into
and
and
and
sub
xchg
xor
out
add
jb
mov
ret
cmp
mov
push
inc
inc
push
in
mov
adc
add
dec
push
pop
jae
ret
lcall
mov
cmp
popa
or
or
push
push
dec
icebp
roll
sub
mov
lock
add
mov
in
adc
scas
xor
daa
jns
mov
push
mov
dec
nop
push
sub
xor
push
sahf
inc
test
push
and
mov
les
out
dec
or
dec
sbb
es
loope
pop
and
or
rcl
js
add
rol
cmc
les
and
ficomps
inc
int
xchg
fadds
push
sub
pop
repnz
push
mov
mov
pop
test
in
mov
adc
ljmpw
xor
addr16
js
movsl
cmpsl
push
xor
ret
push
jmp
mov
mov
and
test
sti
jo
pop
adc
mov
rolb
cltd
add
lea
popa
insb
mov
pop
xor
push
out
cmp
xchg
loopne
rorb
dec
fsubs
sub
inc
mov
imul
addr16
cltd
bound
xor
aaa
dec
push
rorb
cmp
jle
rorb
pop
fbstp
sub
fstl
pushf
fcoml
fs
mov
jp
into
adcl
adc
loopne
push
push
jae
jns
xorb
popf
in
jle
fwait
xor
mov
lock
sub
push
push
loop
mov
cmp
pop
pop
mov
dec
es
ret
cs
movsb
cld
mov
sti
fs
dec
inc
or
out
pop
cltd
test
pushf
outsl
add
nop
dec
mov
cmc
lock
lahf
jnp
dec
pop
pop
push
outsb
push
inc
outsl
push
adc
movsb
inc
pop
mov
idivl
inc
cmpsb
lock
add
mov
fs
sahf
jmp
push
int3
inc
jno
xor
je
in
push
bound
test
inc
in
inc
jp
ds
dec
cs
mov
cmp
jp
dec
mov
lock
sbb
mov
fcompl
push
ret
test
fcompl
push
xchg
cmc
repnz
nop
mov
mov
js
cmp
push
jge
aas
cwtl
inc
mov
dec
loope
jmp
mulb
pop
mov
xor
push
jns
dec
fcompl
jns
mov
lock
xchg
inc
cmp
inc
jp
jle
pop
out
adc
andb
sarb
push
push
loope
fstps
loopne
outsl
into
jns
out
imul
cmp
cs
sbb
and
daa
jl
fcoms
xlat
cwtl
add
dec
jae
mov
mov
mov
dec
pop
sahf
mov
inc
mov
push
and
sti
push
gs
lret
adc
mov
loopne
sti
shrl
mov
int
jno
orb
jnp
in
test
pusha
pop
adc
aas
ror
dec
lret
loope
mov
push
pop
add
add
in
sbb
pop
in
mov
les
push
adc
inc
lcall
inc
sti
jb
pop
sub
push
ja
lods
outsl
adc
insl
xchg
cmp
dec
subb
out
insb
repnz
sahf
test
lcall
sub
push
bound
stos
dec
fwait
int3
push
or
or
mov
and
out
push
xchg
hlt
xchg
mov
das
aad
repz
test
push
sti
pop
pop
pushf
leave
enter
movsb
gs
xchg
sbb
shr
rolb
scas
shrb
mov
xor
ss
push
push
out
pop
cli
mov
idiv
jo
push
jns
mov
test
outsb
push
xor
mov
cmpsl
movsb
xchg
mov
fidivrs
stc
inc
mov
int3
subb
mov
sbb
sub
sahf
test
mov
call
clc
iret
mov
shll
inc
mov
xor
sub
sbbl
ljmp
cmc
stos
dec
xor
stos
pop
cmp
in
iret
out
insb
push
pop
leave
sbbb
and
ss
mov
add
cwtl
pusha
cmp
cli
push
loope
adc
push
cmpsl
mov
pop
loopne
fnsave
shrb
push
xchg
mov
fs
repnz
popf
aas
push
mov
in
add
or
mov
rorl
sti
xlat
into
xchg
fcmovnbe
cmpsb
fisubl
mov
sub
lret
lock
jnp
ljmp
mov
mov
xor
int3
cmpsl
mov
jp
cmp
dec
adc
imul
mov
jg
fiadds
push
mov
xor
cmpsl
insl
movsl
repnz
gs
xor
pop
shrl
cmpsb
in
jno
push
mov
cltd
adc
stos
push
mov
mov
pushf
cmpb
add
imul
pop
out
mov
in
dec
shlb
dec
dec
sub
call
jge
xor
imul
jb
xchg
imul
les
pusha
fdivp
pop
loopne
or
test
stos
inc
ds
subl
cltd
mov
popa
rcr
jo
rcl
loope
pop
pop
lahf
lds
pop
pop
mov
mov
and
icebp
xchg
fildll
sahf
push
mov
mov
fidivrl
loopne,pn
push
jg
rorl
std
outsb
loopne
enter
jne
push
roll
push
push
inc
mov
add
pop
pop
ret
clc
shl
popa
mov
lods
insl
push
stos
xchg
mov
push
aaa
lret
pop
int3
mov
fstpl
ret
sub
inc
je
lahf
cmp
xchg
mov
outsb
repnz
popa
hlt
out
std
outsl
jmp
mov
call
fcompl
hlt
xchg
jl
popa
sub
or
inc
and
outsb
pusha
mov
inc
xor
fs
pop
xor
push
pusha
xor
add
inc
xor
dec
aad
adc
icebp
xor
scas
add
or
in
cmc
lods
xor
ficoms
xchg
cmpsb
insb
lock
sbb
shlb
bound
das
lahf
outsl
mov
jae
jo
jg
or
cmp
stos
pop
repz
dec
mov
mov
test
xlat
clc
push
pop
mov
test
and
movsb
test
das
mov
push
pop
jns
push
stos
push
cmc
mov
sahf
movsl
adc
mov
rclb
sub
sahf
mov
out
dec
cs
stos
je
idivl
cmp
bound
push
shlb
push
lahf
pop
dec
lods
in
es
sbb
int3
adc
addr16
shlb
add
jg
gs
bound
in
imul
inc
and
jl
adc
xchg
cmpsl
outsb
mov
daa
cmp
pop
movsb
jle
mov
pop
ret
mov
gs
loop
dec
sbb
jb
mov
cli
mov
fs
or
gs
push
dec
mov
cmpsb
add
pop
mov
sub
cmp
push
mov
js
test
sbb
jge
dec
mov
les
dec
inc
pop
or
xchg
fs
scas
fbld
pop
sbb
push
imul
jmp
jo
pop
cmp
cs
pop
push
sub
and
jno
jmp
jo
addr16
cmp
into
mov
call
in
cmpsb
imul
mov
out
mov
mov
sahf
mov
or
inc
sub
lret
and
pop
or
adc
movups
push
mov
mov
fcoml
adc
sub
jl
push
jns
dec
in
call
test
xor
push
pop
or
lahf
in
mov
pop
jge
add
mov
add
lretw
or
fistpl
rolb
and
scas
or
sbb
push
mov
dec
or
xchg
jecxz
cwtl
js
pop
cmpsb
cs
mov
push
popl
or
mov
push
repz
pop
popf
das
repnz
shrl
inc
je
mov
ret
lock
mov
int3
jno
clc
mov
test
and
xchg
push
inc
inc
mov
data16
rcrl
aad
dec
mov
inc
call
cs
pop
into
pusha
hlt
sub
mov
sub
jns
mov
push
cmpsb
sub
adcb
cmp
jl
mov
dec
pusha
lock
nop
cli
cs
adc
inc
xchg
jp
adc
adc
xchg
jle
mov
mov
lahf
out
add
xor
push
and
add
test
jecxz
ss
jne
lods
sbb
mov
hlt
insl
xor
xor
and
test
push
adc
pop
jg
lds
inc
pusha
dec
jne
rorl
cmp
or
cmp
add
pop
jbe
and
imul
mov
push
mov
pop
jecxz
js
pop
xchg
dec
sbb
pop
imul
ja
cmp
imul
dec
cmp
mov
inc
and
dec
dec
jp
scas
mov
repnz
aam
rclb
sub
cli
sahf
mov
add
sub
repnz
sbb
xor
xchg
inc
pop
inc
pop
pop
push
push
add
mov
sub
ret
mov
dec
mov
fdivs
xor
cmp
pushf
int
xchg
movsl
sbb
adc
loopne
fsubrs
popa
adc
movsl
cmp
cwtl
and
cmpsb
push
inc
lock
sub
je
jecxz
lock
pop
sbb
mov
outsb
imul
aad
dec
push
outsb
inc
push
mov
jge
mov
in
adc
scas
les
xor
ds
lds
popf
fmull
pop
dec
cmp
jo
jno
push
insb
subl
sub
dec
mov
arpl
push
cltd
jns
inc
clc
test
jnp
pop
and
jne
pushf
mov
mov
mov
mov
outsl
pop
mov
dec
cmp
mov
gs
pop
decb
dec
mov
and
ret
mov
notb
das
sbb
pop
bound
fs
pop
inc
cld
inc
lahf
jno
lock
xchg
mov
pop
dec
in
dec
jmp
insb
out
outsl
rcrb
lret
mov
dec
inc
subl
pop
dec
xchg
mov
stos
pop
lea
sub
loope
jg
jmp
xchg
mov
pusha
movsb
mov
push
mov
pop
mov
test
adc
fs
addr16
hlt
stc
jne
xor
shll
sub
sub
dec
cmp
in
sub
testl
cmp
repz
scas
dec
xchg
cmp
es
push
test
popa
cs
dec
popa
jmp
ljmp
cmp
mov
dec
mov
lea
notl
add
cmpsb
cmp
icebp
xchg
in
cmp
in
pop
pop
cmp
mov
in
mov
imul
mov
xlat
push
cmp
aas
pop
push
mov
cmp
jno
test
in
xorb
pop
arpl
push
mov
in
push
jno
pushf
mov
cli
mov
imul
mov
rcll
neg
push
and
inc
movsb
sub
scas
into
cmp
sub
cmp
jmp
and
jge
movsl
inc
insl
and
cmp
imul
adc
shr
andl
stos
insb
bound
xchg
in
inc
cltd
xor
jmp
out
mov
cwtl
pusha
xor
xor
push
cwtl
xchg
jbe
inc
lcall
and
in
inc
ficoms
inc
and
sbb
fwait
and
pop
sbb
inc
sub
loope
roll
je
popa
pop
dec
icebp
push
sbbl
aas
jns
arpl
outsb
push
sub
inc
push
inc
sub
mov
mov
xchg
add
xchg
fmull
mov
mov
cmp
stos
jo
inc
sub
rep
notl
fnstsw
cmp
push
andb
div
push
dec
arpl
jmp
outsb
push
in
cmp
push
daa
sub
jl
xchg
push
dec
ret
mov
cmp
ss
dec
add
int
and
aas
mov
popl
push
gs
sbb
jne
add
repz
cltd
inc
mov
in
adcl
loop
movsl
mov
xorl
sahf
mov
lods
xor
cmp
ret
mov
jbe
add
mov
jecxz
xchg
stc
lock
rolb
mov
push
push
pminub
mov
lods
jb
push
xor
fisubs
mov
adc
out
xor
inc
pop
std
mov
mov
add
mov
fstp
sbb
cmp
jo
orl
jg
imul
sub
fistpl
pop
sahf
lods
push
addr16
add
out
lret
loopne
mov
push
pop
add
fdivrs
es
fldenv
lcall
je
mov
dec
xchg
ljmp
inc
ds
pop
sahf
add
dec
mov
or
lea
outsl
dec
outsl
inc
xchg
and
cmpsb
cmc
cmp
push
popa
mov
push
mov
mov
int3
andb
jno
cwtl
adc
imul
mov
dec
arpl
push
insb
nop
add
xchg
jmp
fdivs
xchg
sbb
push
mov
rolb
outsl
cs
cmc
dec
gs
int
andb
cwtl
mov
cmpsl
push
fildl
mov
cmp
call
les
add
adc
les
rcrb
fs
mov
jb
xchg
pop
jp
dec
cmp
sti
push
xchg
cmp
test
scas
out
inc
cmp
scas
in
data16
pop
dec
subb
into
cli
mov
andl
jg
and
mov
push
addl
dec
cld
jl
fdivs
dec
push
fnstenv
cmp
and
outsl
push
dec
adcb
sub
cmpsl
mov
adc
scas
enter
inc
rolb
in
and
sahf
lea
inc
rcr
cmc
xchg
ficoms
cmp
mov
hlt
mov
fnsave
jg
sbb
sub
aaa
mov
push
and
dec
ja
orl
jb
and
jl
dec
push
dec
sahf
xor
pop
and
ds
dec
push
and
xchg
das
adc
iret
xor
popf
hlt
pushf
push
push
inc
imul
inc
mov
in
xchg
lret
cld
mov
mov
mov
mov
pop
imul
jp
push
sub
stos
inc
fists
mov
arpl
out
add
inc
cld
je
imul
dec
fdivl
data16
jae
jle
jp
hlt
cmp
fdivr
loopne
add
call
mov
pop
adc
ds
jne
mov
xchg
iret
outsb
sbb
stc
xchg
test
push
adcl
aas
push
lcall
pop
sbbl
push
jbe
sbb
test
mov
sbb
mov
stc
test
push
lret
jmp
mov
jecxz
push
mov
cld
loopne
repnz
jle
inc
iret
jmp
or
push
adc
dec
mov
add
mov
sub
lcall
insb
jg
bound
scas
sbbb
inc
push
iret
jg
and
jne
inc
cli
pop
lret
sub
jmp
inc
mov
sub
addr16
fldt
pop
adc
inc
divb
mov
out
pop
insb
lahf
pop
out
fadds
fwait
pop
in
adc
pop
adc
inc
jne
push
and
xor
stos
cmp
jne,pn
stos
push
inc
sbb
sbb
xchg
lods
repnz
or
adc
dec
stos
lcall
jbe
aad
jge
jle
jge
rcrl
mov
scas
insl
stos
outsb
and
mov
test
outsl
dec
mov
aam
bound
jnp
or
sub
bound
jbe
sub
push
pop
push
data16
shrb
sbb
dec
or
into
mov
sbb
rcl
cmp
xor
fimuls
ss
je
inc
jbe
sub
push
dec
jno
xchg
fbstp
lods
pop
add
inc
sbb
dec
inc
into
push
add
jae
dec
push
stc
push
mul
mov
insb
cmp
aad
sub
lods
jmp
shll
mov
xlat
nop
dec
cmc
xor
jae
mov
mov
ds
push
cwtl
pop
sahf
dec
je
mov
add
lods
jno
jo
mov
popf
dec
sahf
imul
inc
mov
jbe
aad
xchg
jo
repnz
scas
dec
inc
pop
or
jnp
and
dec
cld
lock
add
xor
nop
imul
jae
add
int
cmp
rcl
dec
movsl
test
rorl
push
shrl
nop
adc
sbb
popf
aaa
dec
sub
sbb
insb
cwtl
popa
or
sub
pushl
aad
outsw
lods
cli
ficomps
inc
adcb
inc
lea
mov
jo
mov
dec
dec
in
jle
add
pusha
mov
mov
xchg
lds
jp
icebp
pop
bound
enter
outsl
in
cli
leave
ss
and
jle
mov
cmp
fldenv
add
push
int3
pop
mov
outsb
roll
test
mov
dec
cmp
xor
inc
push
xchg
je
sbb
inc
jle
dec
xchg
mov
sub
stos
jb
sub
cmp
mov
sahf
fsubs
adc
lea
or
add
repz
cld
dec
mov
push
push
and
jg
lahf
sbbb
xchg
push
in
das
int
data16
and
xchg
in
lret
pushf
xchg
call
popf
loop
pop
mov
sub
stc
outsl
add
mov
imul
stos
sub
inc
jp
leave
and
jmp
or
dec
jg
loop
call
movsb
loopne
jl
dec
enter
mov
cmp
and
dec
aas
out
daa
ret
adcl
fidivrs
lods
mov
hlt
xchg
cli
daa
mov
fstpt
xorb
dec
ret
fwait
pop
rcl
nop
fadds
lahf
dec
push
data16
pop
mov
xchg
adc
fs
xchg
push
add
mov
xchg
mov
ds
push
push
dec
fisttps
ds
out
aad
mov
std
mov
aaa
pushf
dec
popa
sbb
mov
fs
xor
mov
subb
iret
inc
stc
fnsave
pop
out
imul
mov
mov
mov
mov
pop
in
jle
aad
sarb
sub
mov
pop
in
fucomi
cmp
and
gs
xor
pop
or
std
js
sub
cmp
nop
dec
add
aam
xchg
or
rorb
dec
sahf
sub
pop
sub
rcrb
mov
jo
and
sbb
xchg
je
push
ja
pop
into
incl
es
inc
out
popa
pop
or
js
pop
in
das
in
sbb
inc
xor
sbb
add
pusha
inc
es
xchg
cmp
and
push
adc
mov
mov
or
adc
xchg
push
rcrl
adcl
mov
push
jno
xchg
loop
pop
pop
sub
aad
add
fwait
mov
mov
aam
cmp
mov
popa
mov
sub
test
jno
push
shrb
mov
lcall
inc
push
push
cmp
imul
fimuls
xor
or
pop
add
sub
push
cmp
push
test
or
in
repz
clc
pop
fstpl
jp
add
push
dec
stos
cmp
sbb
mov
lahf
xor
hlt
pusha
fadd
cmpb
ud2
icebp
xchg
bound
cmp
pop
jge
xor
cmp
jbe
add
stos
into
push
sub
lcall
pop
jmp
mov
xor
cmpsb
mov
cmp
sbb
shlb
cmp
adc
mov
pop
and
and
xor
int3
enter
and
jge
pusha
js
adc
cmp
cmp
jle
mov
pop
inc
insl
pop
jge
cmp
xchg
mov
mov
jno
sbb
scas
loope
inc
loope
mov
insb
add
sbb
push
fnstenv
dec
mov
xchg
lods
movsl
test
cmc
push
jle
adc
and
cmp
mov
subb
pop
mov
stc
dec
loope
dec
les
cmpsb
dec
push
fidivrl
cltd
jb
fs
fs
mov
dec
cmc
mov
xor
fcmovbe
popl
out
pushf
lock
addr16
shrb
cld
cmp
push
push
mov
pop
jo
or
js
adc
notl
ret
bound
inc
jp
jns
hlt
stc
ss
push
cmp
fadds
arpl
lods
es
lret
mov
sarb
jo
loopne
sub
lds
inc
xor
dec
push
sub
loopne
in
sbb
pavgw
lock
mov
mov
xor
negl
jecxz
cmp
sti
dec
sti
je
push
das
push
sub
data16
roll
push
lcall
sub
xor
mov
lcall
loop
loop
jecxz
jbe
imul
cltd
out
enter
into
ffreep
outsl
add
repnz
lret
lret
cmp
push
inc
in
add
ret
cmovno
push
mov
xchg
out
test
mov
out
cmpl
inc
loopne
sub
mov
xchg
mov
fisubs
bound
mov
out
xor
dec
cmc
movsb
cwtl
xchg
adc
sbb
popf
mov
out
stos
cmp
adc
pop
push
aas
sub
or
inc
data16
dec
mov
lret
jne
out
das
je
pop
xor
add
lcall
jae
mov
jae
jo
in
je
mov
push
and
or
pushaw
sub
xchg
sub
sahf
dec
jbe
pop
cmp
or
mov
andb
and
pop
ds
adc
and
insl
sub
xlat
cmp
test
mov
sti
dec
sub
insb
add
fmulp
int
jns
mov
repz
call
add
lcall
sub
and
sub
shll
push
xchg
jmp
and
sub
fwait
cli
jp
mov
mov
scas
subb
daa
mov
inc
int
pop
insb
push
rdtsc
je
adc
mov
into
mov
sbb
xchg
test
mov
mov
or
sbb
dec
mov
iret
movsl
inc
push
jle
lcall
js
jo
mov
inc
inc
ret
movl
imul
lock
in
lcall
inc
cmp
mov
and
jle
mov
sbb
pop
out
mulb
inc
sbb
int
sub
cmp
in
cmpsl
xor
repnz
rolb
fiadds
push
xchg
add
mov
push
cmp
jno
enter
aas
jecxz
add
sub
xchg
xchg
push
sarl
call
mov
movsl
fmull
jae
imulb
mov
clc
lods
pop
or
push
push
pusha
js
push
movl
pop
cmp
pop
inc
loop
ds
xchg
ja
sub
xchg
jb
push
push
sub
mov
aad
loope
push
imul
outsb
xchg
adc
test
jmp
pop
xor
xor
jg
cli
loopne
loopne
call
xchg
shll
fs
lret
xchg
mov
repnz
jmp
inc
loop
bound
mov
inc
stos
pop
cmpsl
dec
xor
add
test
adc
xchg
clc
test
push
jbe
pop
stos
xor
add
scas
stos
jne
cmp
pop
sub
mov
inc
loopne
popf
xor
mov
jg
mov
sub
ret
icebp
inc
lds
scas
ds
out
pop
mov
fwait
out
pop
nop
jp
insb
daa
jl
daa
or
cli
cmpsb
jmp
dec
or
cltd
fistl
xchg
addl
movsb
lods
arpl
push
or
mov
sbb
pop
repnz
rcrl
rep
lea
push
cmpsl
inc
dec
dec
inc
sahf
sbb
cmp
gs
mov
jae
and
push
js
ret
loop
pop
push
and
ficomps
addl
jno
outsl
dec
pop
or
sar
cmp
flds
ret
ret
imul
cs
xorb
int
fwait
leave
insb
nop
or
outsb
stos
xchg
lret
sub
es
stos
aad
adc
loope
push
xchg
mov
or
inc
jmp
lods
pusha
call
call
xchg
jo
pop
xor
dec
lods
xchg
in
jge
sub
addr16
cmp
jecxz
fsubrl
lock
imul
xor
stos
aad
push
shrl
cmp
std
pop
jle
mov
pop
lcall
mov
cmp
add
insl
les
addr16
es
mov
xchg
testl
xchg
int3
ljmp
inc
cmp
inc
fstl
mov
and
pushl
push
jbe
pop
jbe
gs
or
pop
adc
push
xchg
jae
into
inc
test
adc
lcall
scas
xor
and
test
rcrl
clc
cmpsb
inc
xchg
pop
push
adc
dec
adc
sti
daa
cmp
push
arpl
daa
mov
jns
push
push
mov
cmp
jp
inc
scas
xchg
loop,pt
sub
test
pop
xchg
rcl
lods
jl
jg
mov
and
fstpt
fisubrs
add
mov
fmul
loopne
mov
xchg
xor
bound
out
mov
push
arpl
cwtl
jne
mov
js
dec
push
pusha
outsb
aam
jecxz
shlb
sub
fcoms
cmp
push
cmp
fstps
aam
jae
or
ret
sahf
pop
sbb
test
mov
add
pop
mov
inc
jbe
dec
or
lds
sub
inc
and
imul
div
pusha
cmpsb
jns
sub
mov
js
adc
lcall
dec
jp
inc
jge
sub
pop
and
test
mov
insl
push
lods
jle
inc
sub
outsb
cltd
ret
adc
xchg
xor
fists
imul
loop
test
push
fldenv
adc
lods
test
add
mov
cmp
movsb
jp
out
testl
nop
dec
aad
inc
lret
and
xor
dec
and
fsubrl
jmp
clc
jle
cmp
sub
cli
mov
push
dec
xchg
addr16
stc
adc
dec
push
std
pusha
sub
mov
sar
mov
icebp
lret
mov
cmpsl
out
jns
cs
mov
test
mov
sub
orb
xchg
cmp
jmp
push
dec
and
sbb
sar
fdivs
cltd
pushf
out
fadds
stos
pop
jae
dec
pop
imul
xor
mov
iret
loop
mov
lcall
in
ja
jnp
inc
lods
jb
rcrb
dec
xor
push
jns
std
jns
js
xchg
lock
inc
cmp
dec
inc
aaa
xor
test
rorl
push
ljmp
xchg
push
mov
or
and
lea
ja
enter
jnp
in
shrl
push
sbb
jne
adc
sbb
fstpt
mov
rolb
lds
out
lret
adc
sbb
mov
imul
std
lahf
pop
push
jge
push
add
stos
cltd
cmp
jp
outsb
add
loop
dec
dec
sub
push
ret
dec
push
lea
inc
btr
dec
popa
add
fsub
fs
sbbl
push
jne
jg
test
aad
fmulp
cmp
adc
mov
lahf
test
push
test
fwait
addr16
or
push
aas
cmp
insl
jo
jge
jecxz
cmp
insb
adc
mov
inc
xchg
inc
inc
loope
cmc
pusha
test
add
adc
filds
sub
sbbb
and
push
popf
adc
xor
or
mov
sbb
leave
dec
or
imul
cli
rclb
add
cmpsb
mov
mov
add
push
cmc
pop
fcompl
fidivrs
fldcw
movsl
lahf
xchg
jg
push
mov
inc
cmp
or
dec
push
arpl
push
mov
add
add
cmpsb
in
sbb
cltd
pop
cmp
scas
gs
and
addb
mov
inc
lds
cmp
bound
push
sub
rorb
cmp
jecxz
lods
enter
adc
mov
test
call
jge
xor
or
bound
cmp
push
inc
hlt
bound
pop
push
test
inc
mov
movl
rorl
lods
xor
mov
sbb
cld
shrb
push
dec
inc
add
pop
xchg
sbb
subb
scas
push
out
adc
pop
in
and
push
and
xchg
jp
call
and
push
mov
and
mov
mov
mov
jns
loopne
mov
push
lods
adc
ds
push
mov
and
pop
jle
ret
std
lcall
imul
cmpsb
out
mov
jmp
loope
loopne
pop
mov
cli
cmp
xchg
cmp
and
adc
aaa
mov
mov
imul
jbe
pop
mov
rcrl
sub
jecxz
mov
sub
das
cmpsb
sahf
fcomps
lcall
das
bound
add
aaa
mov
pop
add
dec
daa
mov
inc
jmp
cld
inc
fisubrl
lret
les
jo
lock
or
roll
mov
loop
xor
fs
mov
cmp
hlt
call
or
outsl
jle
adc
add
xchg
sub
and
adc
sbb
lcall
call
cmp
movsb
mov
push
jbe
jne
loop
or
jae
xor
jp
mov
mov
mov
add
insb
shlb
jecxz
dec
ljmp
arpl
ljmp
cmp
fucomp
push
out
loopne
es
test
xchg
push
test
pop
ret
inc
cmpsl
mov
cmp
imul
and
mov
sbbb
in
inc
jno
in
dec
xchg
pop
jns
mov
mov
cld
xor
mov
or
xorl
xor
xchg
int
add
mov
push
scas
push
ljmp
mov
pop
adc
test
and
jge
nop
cmpsl
push
das
adc
xchg
xor
jnp
dec
xor
or
and
mov
push
inc
xlat
inc
mov
dec
xchg
dec
in
clc
add
aaa
jo
cmp
push
dec
sahf
js
mov
jno
add
loope
je
jg
arpl
lcall
sub
mov
gs
shll
loopne
lahf
jge
pop
test
imul
xchg
lods
adc
rcrb
or
sub
ss
adcb
std
mov
jl
and
ret
aad
push
scas
cmp
sbb
mov
inc
les
aaa
aas
cmc
and
pop
mov
cs
test
out
jae
mov
jle
scas
push
call
sub
xchg
int
jb
xchg
ja
dec
xor
mov
ss
sub
push
jp
inc
push
sub
loop
cmp
adc
insb
sub
mov
shll
jbe
imulb
jbe
insb
jp
jnp
popf
mov
int
daa
inc
shll
xlat
pop
inc
adc
test
negl
dec
int
out
jle
sub
test
mov
add
xor
mov
push
incb
movsb
mov
dec
mov
jl
pop
push
jl
lcall
cwtl
cmp
mov
add
js
push
mov
data16
cld
lea
out
adc
stc
push
mov
xchg
cmp
pop
ds
daa
sub
pop
nop
and
mov
mov
inc
ficoml
sub
dec
fidivrs
dec
fdivl
outsb
loopne
icebp
iret
xor
xor
jno
jbe
add
mov
mov
xchg
jae
push
dec
repz
push
push
xchg
sub
loopne
stos
push
das
stos
hlt
xor
and
jmp
jno
push
push
dec
jp,pn
sub
jbe
xorb
inc
xor
and
mov
push
cmpl
sbb
xchg
pop
inc
sbb
cmp
imul
pop
cmp
call
bound
mov
mov
das
test
out
inc
or
pusha
pushf
xchg
pop
aam
push
xor
dec
in
inc
repnz
fists
fisubrl
mov
mov
dec
int3
and
cmp
sbb
jl
jbe
jmp
test
cmc
xchg
pop
jo
inc
pop
sub
push
repz
je
xchg
dec
loope
dec
inc
and
out
xchg
push
hlt
jge
mov
mov
pop
xchg
cmpsb
int
stos
stos
sub
jmp
lret
push
jle
aas
jecxz
es
xorl
dec
jo
ja
movsb
andb
movsl
stc
inc
ss
and
inc
mov
clc
mov
mov
lods
mov
fisttpl
inc
jns
icebp
hlt
push
push
inc
je
push
aaa
xor
pop
and
arpl
mov
sbb
xorl
jge
and
int
mov
frstor
xor
cmp
jg
jl
push
imul
imul
adc
mov
das
inc
test
inc
test
insl
or
add
pop
cmp
push
test
push
push
or
rcl
rolb
mov
pusha
test
xor
roll
mov
cs
push
xchg
adc
into
xorb
cs
jg
mov
mov
cli
mov
outsl
out
sbb
outsl
js
lahf
stos
mov
xor
cs
loope
sbb
aaa
xor
cli
scas
std
cld
ds
pop
cmp
dec
mov
mov
push
test
or
repnz
inc
jns
test
cmpsb
xlat
add
les
pop
in
pushf
push
pop
test
push
xchg
pop
xchg
cli
imul
int
mov
dec
dec
sbbl
cmp
ljmp
dec
or
js
xchg
jb
scas
cmp
daa
jnp
mov
es
inc
mov
mov
or
fsubl
push
pop
inc
inc
mov
pop
or
mov
insl
ljmp
data16
test
out
adc
jge
adc
inc
repz
jge
and
xchg
mov
in
gs
imul
or
inc
dec
cmpsl
in
xor
pusha
das
outsl
mov
lahf
push
push
icebp
push
pop
jne
outsb
movsl
ss
push
fstl
sub
test
out
or
loop
sbbl
inc
stos
jl
insl
mov
push
lods
jno
fsubrs
xlat
xlat
and
jg
push
mov
mov
out
dec
fidivrl
scas
mov
jno
jns
lods
mov
sub
pusha
add
jecxz
shll
xor
loope
cwtl
mov
lret
mov
xor
dec
fsubrl
xor
ret
scas
dec
mov
lret
fimuls
lcall
adc
inc
mov
inc
fmull
out
mov
ds
pop
mov
pop
cmpl
movsb
pop
imul
mov
push
jae
jae
in
int
and
sub
addr16
cmp
insb
cmp
inc
scas
adc
sub
and
jnp
insb
lock
pop
and
ljmp
add
pushf
js
jp
insb
std
cltd
pop
stc
pop
xor
xchg
subl
fdivl
lcall
aad
fucomip
das
cltd
jle
add
cwtl
pop
adc
repz
cltd
in
mov
inc
jne
pusha
clc
sub
push
es
scas
lea
xchg
pushf
adc
mov
pop
jb
sub
jle
jnp
clc
push
mov
lcall
sub
mov
mov
js
jne
loop
push
pusha
xchg
pusha
push
in
and
inc
in
shrl
outsl
xor
mov
pop
mov
nop
sbb
shll
rep
mov
mov
add
add
jb
mov
inc
outsl
mov
pop
scas
dec
shll
adc
inc
mov
jo
shlb
insl
sbb
push
scas
cmp
mov
dec
mov
inc
pop
movsl
dec
xchg
hlt
mov
or
enter
xchg
push
fs
pop
jmp
inc
test
in
cmpsl
inc
imul
push
scas
ret
mov
fxch
dec
and
and
lret
sub
aas
adcb
or
aas
sahf
jle
in
fistpl
pop
pop
inc
mov
cmpsb
xlat
fs
shl
push
jno
ljmp
je
es
pop
dec
inc
jecxz
scas
xchg
sbb
mov
sub
cli
pop
imul
std
xlat
cmp
fsubr
aad
mov
inc
push
and
push
jns
lea
cltd
dec
push
mov
mov
insb
test
scas
jns
sbb
xchg
lods
ss
fbld
sbb
push
push
push
in
push
ror
or
pop
cli
push
xor
xchg
test
mov
shrb
xchg
adc
mov
mov
mov
push
and
out
ret
rclb
into
push
call
adcb
adcb
pushf
popf
add
in
int
inc
and
std
out
pop
cmpsl
scas
xorl
dec
xchg
mov
rorb
adc
out
dec
inc
fdivs
imul
in
inc
pop
mov
std
js
and
jo
sbbb
mov
inc
ds
hlt
outsb
repnz
or
test
je
in
push
ret
mov
cmp
inc
insl
data16
shl
xchg
out
aas
add
jge
mov
outsb
imul
mov
add
dec
imul
je
call
std
pop
in
movsl
jp
je
dec
pop
or
ds
push
mov
xchg
cs
jnp
outsl
or
xchg
dec
mov
rclb
jle
jg
add
cli
jmp
sbb
cld
cmp
mov
pop
xor
xchg
cmp
mov
and
ds
pop
scas
push
xchg
mov
or
shlb
je
inc
jp
inc
and
push
sub
jb
and
mov
mov
fisubrs
arpl
adc
mov
and
in
sbb
testb
sarl
jno
jb
popf
shll
mov
sti
adc
test
sub
xchg
imul
push
push
jno
inc
xchg
jge
imul
pop
push
pop
ja
and
insl
ret
in
addr16
push
adc
arpl
pop
int3
jl
jl
sub
push
xchg
jae
pop
imul
sbb
shrl
push
imul
mov
xchg
sbb
mov
shl
pop
decb
aam
pop
push
adc
imul
in
cmp
mov
add
pop
xchg
lahf
lcall
aas
xor
loopne
dec
outsl
sub
outsb
mov
mov
mov
das
test
pop
mov
inc
cmpsb
aas
arpl
arpl
mov
dec
mov
dec
leave
pop
clc
push
out
aam
adcl
mov
shlb
or
or
jno
repnz
imul
xor
insb
dec
mov
les
xor
sbb
in
out
lcall
mov
dec
cmp
sahf
cwtl
test
mov
push
push
push
inc
enter
sub
scas
or
inc
sub
ljmp
xor
out
in
dec
test
push
dec
mov
pop
aaa
fidivrs
cwtl
push
cwtl
inc
lret
cld
xchg
jne
pop
push
cwtl
sbb
push
arpl
xlat
mov
sbb
mov
inc
mov
lret
dec
cltd
xchg
or
cmpsb
xchg
mov
js
inc
loopne
pop
out
fwait
mov
repnz
push
lahf
test
arpl
cs
jne
jae
enter
int3
xor
mov
ss
movsb
adc
xchg
outsl
xacquire
push
fwait
or
sti
inc
xor
imul
jae
popa
sub
ficoml
arpl
sub
sbbb
cmp
repnz
mov
fimuls
lret
and
inc
aaa
enter
jb
xchg
adc
pop
push
fsubrs
xchg
push
sahf
jb
lods
lods
ret
pop
mov
jg
je
mov
jae
jmp
insl
push
stc
dec
pop
dec
xorb
cmpsb
loope
push
gs
idiv
inc
mov
pop
inc
jns
push
scas
daa
shl
push
fistl
mov
repnz
call
adc
mov
mov
cld
sub
loopne
test
push
inc
add
mov
adc
sub
mov
inc
in
pop
aad
mov
or
push
aaa
icebp
jg
inc
es
popf
or
dec
imul
push
movsl
adc
test
pop
dec
push
push
das
adc
inc
rcrb
addr16
mov
nop
xor
pop
push
pop
mov
std
jo
lcall
lock
push
adc
mov
jl
inc
data16
lahf
cmpsl
repnz
sbb
mov
xchg
inc
jnp
fbld
test
dec
gs
xor
dec
inc
pop
sub
jne
out
in
in
xchg
jae
or
pop
aas
in
outsb
push
inc
jo
cltd
mov
aas
and
cmc
lea
xor
push
fstl
pop
hlt
mov
out
ds
xor
nop
sti
cld
cmp
aas
inc
cmpsb
and
xchg
sbb
cmp
push
fiadds
cmpsl
mov
push
mov
sub
shll
jmp
lods
pop
bound
add
dec
ds
push
cmp
dec
dec
cmpsb
pop
pop
jae
and
mov
xor
push
mov
adc
fs
dec
lahf
cmp
xchg
cmc
movsb
dec
push
jnp
jo
mov
jp
inc
gs
test
pop
rcrl
gs
sbb
ret
pop
pop
ss
push
negl
inc
or
je
aas
push
and
cmp
js
pop
push
inc
ret
pop
jbe
out
xchg
stos
sub
mov
rclb
rorl
push
repz
mov
inc
inc
bound
lds
inc
jp
and
inc
imul
cmp
adc
pop
leave
add
cmp
mov
mov
xor
mov
dec
cltd
push
and
les
jl
fidivrl
mov
lods
and
inc
inc
mov
cmp
xchg
shr
mov
cs
sti
jbe
lods
xchg
fildll
mov
or
iret
xchg
adcl
cwtl
outsb
jmp
sub
jecxz
jae
fistps
push
movsb
lods
dec
js
jle
jno
sbb
dec
pop
xor
pop
dec
outsb
outsl
lock
pop
inc
add
cwtl
lock
jbe
and
ljmp
mov
js
lcall
fcmovnbe
add
and
pop
xchg
addr16
cmp
dec
xchg
push
js
inc
sbb
dec
ret
push
and
in
add
pop
mov
push
mov
xor
aas
test
jp
and
in
adc
cmc
fxch
aam
xchg
sbb
rcrl
mov
das
addr16
int3
add
dec
inc
mul
loop
outsb
scas
inc
je
mov
cmp
sahf
sub
test
mov
xchg
daa
push
inc
xchg
repnz
sahf
dec
push
xchg
mov
push
jl
mov
push
pushf
pop
add
xchg
loopne
fcomps
gs
pop
jb
dec
pop
test
jmp
dec
mov
and
sub
mov
int3
loopne
stos
push
aad
in
inc
adc
jne
cli
push
jns
ja
push
pop
jnp
jnp
push
dec
jbe
rorl
lret
fisubrs
push
andl
dec
cmpsl
popa
popa
push
mov
xor
mov
inc
or
pop
jecxz
imul
xchg
outsb
xor
sub
push
inc
xor
jle
rcrb
and
daa
mov
adc
inc
lds
ja
insb
clc
push
and
shrl
leave
jp
lods
dec
add
rcrl
data16
jg
fwait
jne
cmpb
mov
loop
ss
aas
dec
mov
mov
stos
pop
cmp
sbb
outsb
movsl
dec
lods
js
mov
cmpsb
add
sbb
es
xor
fbstp
in
js
dec
fisubl
push
inc
into
and
pop
inc
jno
lret
or
out
jo
dec
andl
lods
aaa
scas
xchg
cld
fbld
pushl
add
xchg
inc
adc
in
jp
or
lret
or
fwait
jo,pt
int3
cmp
sbb
sar
shr
or
pusha
xchg
loopne
in
cwtl
ljmp
lcall
in
inc
dec
sarl
scas
repnz
sub
jmp
arpl
insb
and
adc
or
je
adc
mov
jno
mov
mov
out
aas
gs
inc
adc
shlb
nop
lds
inc
cmp
push
fbstp
mov
cli
arpl
xor
mov
cli
shll
fs
lea
dec
jmp
lcall
adc
xor
aaa
pop
sub
in
popf
insb
ds
dec
and
add
fnsave
adc
test
mov
xchg
loop
add
adc
ret
push
push
cmpsl
xor
push
sub
mov
lods
insb
pop
mov
xchg
fs
int
jge
xchg
test
push
bound
cmp
push
adc
lock
xchg
dec
iret
mov
iret
cmp
inc
mov
pop
xchg
mov
cmpl
adc
pop
sbb
clc
testb
xchg
sti
ds
inc
push
add
test
push
jo
mov
push
push
mov
stos
loopne
cmpsb
push
or
das
out
test
mov
cld
jns
stos
or
cmp
daa
dec
sahf
mov
ret
sti
shrb
sbb
sbb
mov
adc
dec
jae
push
jge
adc
mov
dec
xor
sbb
mov
dec
jg
enter
in
cmp
sub
jno
ficomps
sub
outsl
sbb
jl
lods
jecxz
fwait
adc
andb
ret
sahf
jo
inc
push
ret
push
mov
lock
jne
sbb
xchg
mov
fdivp
es
popa
push
or
addb
sub
mov
fiaddl
mov
lret
cmp
scas
mov
les
inc
mov
mov
dec
in
in
mov
push
lahf
cmpsb
xchg
cs
das
enter
pop
add
jl
push
lahf
mov
lea
mov
cli
dec
push
pop
aad
cmp
adcl
insl
aam
push
fiadds
out
fldcw
inc
inc
sbb
add
clc
push
cmp
cli
cld
mov
inc
js
jb
adc
insl
sub
roll
daa
movsb
fbld
mov
xor
mov
xor
add
xlat
pop
jmp
or
mov
xor
loope
movsb
xchg
frstor
imul
mov
mov
pop
sub
lea
fiaddl
fcompl
mov
bound
push
xchg
xlat
in
mov
test
in
ficoms
js
dec
sbb
push
stos
mov
jl
add
ret
jns
xchg
dec
jecxz
mov
dec
test
outsl
xor
pop
xchg
iret
data16
testl
sub
lock
clc
dec
sarb
inc
adc
jp
aas
xor
gs
sbb
dec
or
xchg
aam
es
inc
xor
jp
aad
mov
test
dec
mov
imul
xchg
cmpl
repnz
fdivl
xchg
and
mov
xchg
stos
dec
pop
mov
or
sahf
outsl
shl
fisttpll
xor
sub
xor
sub
jl
div
mov
lock
push
mov
jp
xchg
loope
push
sarl
ds
jge
xchg
mov
push
into
popf
xchg
and
je
xchg
cwtl
mov
jp
and
ret
pop
mov
shll
and
xor
cmp
outsb
mov
fists
push
mov
outsb
shl
movsb
mov
xorl
iret
clc
in
ljmp
outsb
jge
jle
jle
sbb
jnp
xor
pop
scas
je
insl
adc
into
lret
pop
aad
lahf
xchg
adc
mov
adc
xor
in
pop
mov
mov
sbb
mov
add
mov
add
addl
add
stos
insb
pusha
scas
aad
iret
insb
ds
inc
je
out
jp
sbb
lcall
or
sarb
xor
xchg
mov
mov
call
mov
adc
mov
mov
xor
sahf
push
aas
mov
call
xchg
fwait
cmc
pushf
sub
push
jl
dec
jb
out
enter
shrb
sbbl
jnp
movsb
sbb
int3
cmp
loopne,pn
jns
into
push
adc
idivb
outsb
push
mov
rorb
adc
cli
add
mov
nop
dec
data16
scas
sbbl
pop
pop
insb
dec
mov
sbbl
inc
mov
push
std
xlat
stos
mov
sub
push
inc
xor
es
shld
mov
inc
outsl
xchg
and
add
jmp
dec
xchg
inc
outsl
xchg
dec
lea
xchg
mov
pop
sub
repz
movsb
fidivrl
ds
rolb
sbb
jo
push
push
pop
dec
dec
and
fstpt
inc
out
je
or
fldt
in
test
push
inc
pop
adc
loop
mov
sahf
in
ja
fs
scas
sbb
inc
rolb
pusha
push
outsb
out
pop
sbb
jne
ds
mov
jo
lahf
sti
shlb
rcrb
pusha
gs
xchg
push
movlps
cli
add
cmpsb
xchg
cmc
push
dec
loope
push
decb
insb
xor
cmpl
addl
fwait
and
es
pop
popf
cmp
jb
push
test
pusha
imul
outsb
pop
loop
dec
cmpsb
pop
test
test
xchg
pop
and
mov
enter
in
gs
push
inc
mov
cmc
lret
xchg
daa
jno
sub
jno
sbb
in
imul
je
out
in
outsl
adc
es
ljmp
push
subl
add
xchg
pop
push
popa
mov
xorb
psrlq
mov
pop
jl
jbe
int3
push
mov
mov
push
ljmp
cli
mov
dec
stos
cmpsb
mov
jl
push
frstor
outsb
scas
fldt
push
mov
inc
pop
and
in
adc
mov
sub
inc
jbe
ljmp
jb
inc
xor
stos
je
mov
mov
fwait
pop
aad
mov
pop
mov
mov
in
ror
mov
in
clc
aas
pop
jg
ljmp
and
lea
cs
and
inc
in
xchg
mov
xor
lock
adc
inc
xchg
jge
je
mov
and
mov
pop
pushl
sub
push
fs
movsb
rolb
fimull
mov
outsb
push
dec
add
push
sub
push
mov
shlb
dec
stos
andb
xor
mov
call
mov
popa
inc
insb
push
push
cmp
xchg
rorb
push
arpl
pop
cwtl
inc
in
stos
lea
aas
cwtl
stos
cld
cmp
leavew
sub
jp
scas
into
and
push
adc
cmp
outsb
in
jnp,pt
xor
outsl
cmp
insb
pop
jl
and
gs
pop
sbb
pop
flds
inc
ds
popa
inc
out
mov
xor
inc
mov
lods
and
mov
mov
sub
hlt
mov
out
fcmovu
scas
mov
and
push
sbb
ss
out
sbb
inc
mov
push
mov
imul
push
stos
insb
int
push
jo
jae
cli
adc
fs
out
cmpb
add
mov
jnp
clc
or
or
dec
xchg
test
jge
push
mov
jo
out
adc
add
xchg
das
or
adc
pop
arpl
pop
leave
mov
rolb
jecxz
imul
jns
popa
cs
jmp
seto
dec
push
ss
pushf
jns
mov
fwait
js
cmpsl
cld
scas
xchg
rcl
inc
mov
xor
pusha
int3
cmp
js
push
adc
mov
push
xchg
inc
mov
lahf
out
cmpsb
cld
test
arpl
dec
and
stos
xor
pop
clc
orl
int
sbb
scas
push
test
outsl
lods
push
inc
xchg
xchg
mov
push
push
jne
shlb
bound
int
aaa
adc
stos
fmull
cmp
push
shll
lods
jg
jbe
add
and
xchg
pop
inc
cmp
pop
and
jp
aas
xchg
stos
mov
daa
sti
test
xchg
and
iret
sub
sub
cltd
cmc
xor
ss
loop
jo
or
mov
je
es
sbb
int3
sub
pop
lcall
pop
ss
dec
stos
mov
dec
push
stos
ljmp
nop
sub
shll
jb
sub
popf
fwait
cmp
and
adc
sub
sbb
stos
test
hlt
sub
sbb
dec
dec
cmp
ret
xchg
push
pusha
cmp
mov
stos
cmpsl
bound
cmp
dec
pop
jmp
pusha
sub
jb
loop
dec
int
lock
sbbl
sub
insb
push
sbb
mov
fs
faddl
outsb
in
mov
jmp
outsl
iret
mov
xchg
and
mov
xor
xor
lods
popa
sub
arpl
mov
xlat
push
xor
and
je
cli
sub
or
fildll
repz
cmp
jge
movsl
dec
out
add
call
and
sub
lcall
enter
sbb
or
outsb
or
lret
cli
adc
cmp
int3
xor
add
xor
xor
pusha
pop
and
xor
xchg
lock
push
push
mov
sahf
push
sahf
dec
mov
dec
pop
scas
es
sbb
in
imul
sub
push
subb
adc
int3
fbstp
jo
dec
ret
push
les
lret
in
cmp
mov
xchg
lret
adcw
cmpsb
pop
out
jns
inc
addr16
push
ljmp
lods
lret
mov
pop
cli
nop
call
sub
and
fs
add
sub
sti
je
and
enter
fs
test
mov
and
xor
dec
stos
inc
inc
push
and
icebp
push
pop
mov
ror
mul
pop
xor
out
inc
mov
outsl
xchg
ds
mov
add
xor
int
cmp
jg
les
pop
jns
stos
xlat
xchg
clc
shll
out
add
roll
mov
stos
mov
scas
in
dec
xchg
cmc
imul
cltd
push
repz
xor
das
test
dec
jmp
int
jmp
pop
data16
scas
sub
jne
out
dec
dec
jnp
inc
adc
mov
cmpl
ja
jae
and
outsb
js
sbb
inc
jmp
notb
cmp
inc
in
dec
inc
pop
push
nop
jg
cmp
aas
adc
inc
sub
mov
add
mov
dec
mov
sbb
mov
push
cmpsb
aas
mov
adc
aaa
lods
xchg
arpl
fstpl
stos
pop
dec
mov
jmp
and
pop
mov
jo
dec
xchg
jno
dec
mov
push
clc
sbb
mov
in
stos
test
imul
sbb
push
xorb
inc
sar
mov
pop
fwait
movsb
pop
sahf
movsb
inc
stos
inc
int
jecxz
mov
mov
jnp
pop
xor
stc
push
repnz
xor
add
push
inc
adc
ljmp
sbb
mov
int
loop
cmpl
adc
dec
mov
and
push
into
jne
jmp
roll
sbb
push
push
and
setg
mov
add
shll
notl
push
insl
pop
mov
add
mov
sub
test
mov
jmp
cld
xchg
stc
addb
outsb
pop
rorw
mov
movsl
sarl
popf
jge
inc
or
push
ljmp
add
xor
pop
push
jnp
out
lcall
inc
mov
jl
jae
out
loope
pop
pop
pop
insb
imul
dec
fdivr
mov
mov
lahf
gs
jmp
pop
jnp
aaa
pop
cli
mov
lret
xor
notl
rcrl
push
and
jo
cmp
clc
sub
and
test
lds
lods
push
cmpsl
pop
cmpb
sbbl
cmpsb
inc
popa
adc
mov
push
jl
cld
or
jns
or
popf
cmpsl
xor
jge
jle
xor
neg
int
and
loop
call
adc
pop
into
movsb
xor
mov
push
cwtl
mov
inc
inc
imul
fwait
cmpsl
pop
sbb
xchg
std
lcall
scas
or
lret
loop
mov
jae
insb
js
pop
int3
mov
inc
mov
movsl
ret
das
add
sub
push
inc
pusha
or
sub
loope
addr16
testl
and
and
lcall
xlat
dec
add
hlt
jp
test
ret
leave
icebp
jno
xor
pop
mov
pop
or
and
cli
bound
or
inc
das
dec
cmp
xor
push
mov
je
clc
fistpll
mov
dec
out
lahf
sbb
sub
fidivl
dec
mov
xchg
mov
and
gs
xor
xchg
or
in
xchg
inc
rclb
sbb
jae
push
pop
test
xchg
popf
aas
insl
in
adc
mov
add
xchg
sub
add
test
adc
imul
es
inc
add
aaa
in
js
test
popa
or
or
mov
mov
and
out
xchg
in
cs
or
mov
daa
adc
popa
xchg
dec
ljmp
jle
std
mov
out
sbbb
dec
addr16
sahf
icebp
mov
jae
icebp
imul
xchg
jge
and
lcall
sbb
xchg
loopne
mov
inc
or
mov
xchg
loope
stos
lret
cmp
mov
cmp
pop
test
jnp
lahf
rcrb
pop
ficompl
iret
daa
cmp
les
jge
push
bound
jp
into
mov
int
int3
fs
sub
or
negb
add
ret
scas
push
je
push
cwtl
add
mov
stos
xor
mov
aas
test
jb
imul
fdivl
aad
icebp
mov
in
lahf
inc
dec
dec
push
adc
cmpsl
adcl
jb
cmp
cmp
sub
mov
mov
and
mov
aaa
push
xchg
scas
dec
sbb
jmp
inc
mov
movsl
jae
aad
lods
jge
movsl
fildll
pop
and
std
pop
lea
scas
mov
pop
add
jl
jmp
xor
add
loopne
jmp
xor
nop
xchg
dec
bound
jle
addr16
jb
outsb
and
jnp
cltd
adc
imulb
fidivrs
lahf
push
dec
fxch
pop
sbb
jmp
inc
cmp
mov
fdivrl
adc
fs
cmp
mov
shr
arpl
into
fwait
arpl
pop
scas
add
ret
pushf
adc
mov
or
sbb
rorl
mov
ds
push
adc
cwtl
mov
dec
repz
mov
mov
stos
lods
push
jb
sbb
outsl
mov
mov
mov
dec
sbb
roll
mov
dec
stc
sbb
pop
sub
imul
loopne
jo
daa
jle
jnp
sbb
fiadds
arpl
pop
xchg
hlt
sub
lahf
jmp
xchg
fs
ret
stos
insb
inc
loopne
mov
vmrun
rcrl
daa
fidivl
mov
pop
jo
adc
or
nop
mov
add
fistl
cwtl
rcrb
fcmovne
push
push
mov
lock
mov
mov
aam
push
addr16
enter
sub
push
lods
cmp
stc
ret
stos
call
outsb
imul
jl
leave
xor
adc
push
cmp
scas
cmp
je
mov
gs
scas
test
sbb
imul
mov
loopne
mov
sahf
push
pusha
movsl
push
adc
or
adcl
xchg
push
jge
or
mov
sbb
test
jmp
jo
arpl
jae
dec
mov
pusha
clc
cld
lahf
and
mov
pop
out
lahf
dec
xor
imul
int3
mov
pop
jo
dec
mov
jb
fwait
cmp
pusha
cmpsl
sub
dec
les
loop
xor
mov
xchg
jl
sub
mov
call
add
sub
xor
lcall
mov
jle
pop
mov
push
scas
inc
scas
loope
scas
lret
je
dec
scas
rclb
pop
mov
dec
ss
movsl
pop
push
sub
jp
adcb
cmp
or
pop
adc
sub
loopne
lock
aam
in
push
iret
scas
dec
stc
loop
sbb
inc
jp
fidivs
lods
loopne
mov
movsb
movsb
loope
inc
sub
mov
inc
inc
pop
cli
dec
dec
loop
cmp
or
test
mov
es
cltd
lods
aam
dec
stos
pushl
mov
jge
out
mov
or
push
popf
test
repnz
hlt
dec
push
sub
cmc
shll
push
repz
loope
jle
push
ss
cmc
mov
xchg
lea
adc
sbb
jne
adc
and
mov
mov
sbb
inc
and
call
mov
push
pop
sub
sbb
jae
xchg
xchg
es
xlat
jl
sub
in
jp
jp
dec
leave
push
in
outsl
xchg
movsl
ljmp
or
outsb
pop
xchg
xor
sti
pusha
ret
add
or
loopne
sbb
out
push
movsl
lahf
lcall
leave
push
pop
sti
stc
add
in
cmp
or
insb
mov
sub
testb
pop
fildll
aam
fnstsw
cwtl
fdiv
testb
repnz
push
jl
pop
iret
xchg
jge
and
xchg
mov
cmp
dec
inc
mov
dec
dec
adc
mov
mov
gs
sarb
sub
pop
fwait
inc
push
push
and
fisubl
pop
cld
rcrb
fsubrl
popf
dec
loopne
mov
pop
fdivl
imul
scas
daa
mov
fidivrs
adc
push
enter
and
mov
pop
aas
popl
push
mov
addl
insl
dec
mov
imul
lods
or
ficomps
jp
xchg
push
mov
cmp
cmp
inc
pop
pop
pop
adc
ljmp
lret
sbb
pop
repnz
in
and
xor
add
mov
mov
push
pmaxub
int3
mov
int3
cmp
jnp
and
cli
mov
add
jl
loopne
ror
mov
mov
pop
cmpl
sbb
in
cmpsb
clc
ss
mov
movsb
imul
in
xchg
test
dec
mov
cltd
and
lret
popa
xchg
push
dec
cmp
push
jg
imul
test
push
test
xchg
cmpsl
lret
lahf
stc
inc
cld
xchg
inc
in
sub
sti
les
out
push
mov
ds
xor
fsubs
cmp
xor
push
ss
or
dec
icebp
aad
int
adc
jae
xchg
scas
scas
push
adc
xor
shrb
adc
jle
popa
leave
adc
dec
lods
test
push
out
sub
adc
fstpt
adc
cmp
cmp
fdivl
pop
mov
sbb
and
or
cmp
sub
rorl
mov
mov
jmp
mov
in
push
xchg
clc
jp
in
fistpl
push
ds
aas
aas
and
dec
lods
dec
imulb
inc
mov
sbb
or
push
xor
xchg
and
lea
or
mov
mov
sub
pop
adc
or
add
inc
out
pop
int
cwtl
ss
test
dec
daa
fdivrl
push
arpl
ss
push
arpl
ret
mov
shrl
push
out
fs
mov
mov
lahf
addr16
movl
out
pop
jne
out
scas
bnd
cmp
fwait
mov
inc
cmp
stos
scas
inc
sbb
xor
js
dec
add
loope
fstpt
push
xchg
outsl
sbb
xchg
push
lcall
nop
push
nop
xor
movsl
ja
sbb
fwait
push
add
mov
les
sahf
sarl
add
std
xchg
xchg
dec
mov
cld
inc
jae
cmc
int3
movsl
inc
adc
xchg
push
push
push
ret
jg
pop
daa
test
or
cwtl
ror
rolb
gs
add
pop
adc
negb
cmc
xchg
out
cwtl
out
push
mov
ret
mov
push
pop
mov
jp
cmc
mov
push
repz
mov
cmp
bound
push
jecxz
dec
outsl
pop
test
mov
fiadds
ds
out
outsb
pusha
mov
fsubrs
adc
xchg
lahf
sbb
inc
pop
inc
pop
cmpsb
jg
std
mov
clc
lock
adc
lods
int3
bound
scas
mov
fcoms
or
mov
mov
jp
test
cmp
xor
pushf
jmp
mov
mov
dec
jae
in
dec
ficompl
push
push
arpl
enter
sbb
addr16
pop
sub
call
xor
or
fstpl
pop
mov
xchg
fcomps
sub
dec
test
cmp
mov
mov
jb
jmp
push
into
pop
push
dec
jl
test
sbb
push
or
cltd
dec
cld
fisubs
jno
mov
mov
aas
inc
fsubp
ljmp
bound
in
dec
jbe
into
xchg
outsb
dec
inc
xor
xor
mov
mov
jecxz
clc
sub
or
push
jns
xor
mov
push
push
xlat
psrlw
inc
sub
inc
push
test
xchg
sbbl
shlb
mov
insl
push
into
cmp
push
loop
pop
mov
mov
testl
and
ret
pusha
xchg
jge
jl
jbe
ljmp
and
mov
xor
cld
xor
cmpsb
adc
pop
inc
or
nop
movsb
movsb
sarl
js
adc
jmp
mov
adc
push
jae
mov
cmp
jns
or
fidivs
or
jb
mov
ja
push
aad
adc
mov
loope
lcall
push
sbb
ja
inc
xchg
xchg
pop
bound
mov
je
std
push
sub
inc
lods
test
testb
dec
jp
dec
xor
ds
stos
xor
sbb
add
sub
aad
aas
push
stos
test
leave
decl
imul
dec
lcall
lahf
xchg
push
inc
add
cltd
cwtl
lahf
movsb
add
jp
cmpsb
int3
xor
push
nop
xor
jecxz
cltd
xchg
pushf
pop
jl
jne
sub
jl
xlat
pusha
push
aad
sub
rclb
jo
cltd
movsb
and
dec
inc
dec
sub
popa
mov
lcall
xchg
stos
imul
test
pop
and
xchg
pop
inc
stos
arpl
mov
cmp
add
loopne
lcall
mov
jmp
mov
mov
das
test
arpl
and
fnstcw
cs
mov
or
inc
mov
push
mov
stos
das
jo
mulb
and
ds
sub
inc
clc
inc
fnsave
roll
xchg
pusha
test
out
sbb
xor
or
jne
repz
hlt
or
jnp
mov
fmul
scas
xor
cmpsb
outsl
ds
loopne
push
xor
mov
rdmsr
lods
inc
sub
lcall
lds
je
add
mov
push
in
data16
sub
dec
xorb
jo
xchg
out
push
cmp
and
hlt
or
sbb
cmp
addb
push
ds
sbb
ja
inc
or
mov
mov
aam
or
lret
and
leave
ficomps
imul
subb
inc
lds
ds
jecxz
cmpsb
dec
arpl
lahf
aad
cs
mov
orl
idivb
pop
push
int3
ret
pop
mov
sbb
jl
xchg
std
ffree
pop
jo
aad
jb
mov
lcall
cmp
pop
add
inc
addr16
test
cmp
popf
cs
push
lods
les
shlb
lcall
mov
test
jl
lods
fs
scas
and
add
inc
adc
pusha
jp
xor
xchg
std
js
dec
dec
pop
pop
sbbb
and
dec
fsubrl
jb
xor
sub
push
ds
mov
out
adc
rolb
jl
in
sbb
mov
xlat
cmp
adc
shlb
enter
xchg
jecxz
inc
out
ret
popf
fidivrl
jge
dec
adc
test
inc
mov
jnp
push
inc
cmp
addr16
rcrl
out
pop
int
ds
mov
cmp
rorl
push
fwait
cmp
js
addb
insl
rclb
push
loope
rol
lcall
jo
loopne
push
inc
cmp
mov
lcall
fnstsw
inc
scas
insl
mov
fwait
sahf
data16
jmp
stos
aam
or
lods
cmpsl
movsb
loope
adc
lods
push
xchg
test
out
movsb
movsb
sub
sub
xorl
into
adc
jmp
pop
and
jbe
xchg
xchg
andb
pusha
icebp
push
cli
jle
push
sbb
fnstsw
outsl
cmp
nop
mov
mov
add
dec
outsl
dec
xchg
not
pop
xlat
sbb
fdivrs
incb
xlat
cmp
loope
popf
and
cmp
jns
cmp
lds
inc
cmp
dec
outsb
movsb
ss
mov
mov
loope
rorb
push
xchg
nop
pop
out
les
pusha
push
push
jns
push
nop
cmp
jne
es
xor
add
ljmp
lock
add
fsubp
sbb
push
mov
pop
mov
pop
mov
scas
ljmp
insb
pop
xchg
add
jl
scas
dec
mov
cmp
push
ficoml
notb
cld
into
add
sub
push
ret
shll
call
xchg
or
arpl
int
inc
add
inc
push
test
lods
out
cld
cmp
or
scas
pushfw
add
mov
jnp
jecxz
rcrl
addb
mov
or
mov
loop
pop
shl
adc
jmp
adc
sahf
inc
loopne
pushf
js
outsb
or
test
test
out
push
mov
inc
sbb
add
push
or
pop
aas
sub
mov
xchg
jne
test
or
cltd
mov
xchg
inc
cs
in
rcr
mov
push
es
cmpsb
xor
mov
dec
leave
mov
aas
ret
fdivr
sbb
scas
int
loopne
or
jp
out
xchg
adc
loopne
test
testl
cmc
das
jbe
xchg
lahf
mov
mov
shl
cmp
sar
pop
js
icebp
cmp
push
mov
push
push
idivl
mov
sahf
outsb
pop
lods
mov
js
jb
adc
ds
jbe
cmpsl
scas
pop
xchg
addr16
stos
nop
xor
fst
ficoms
andb
dec
pop
dec
dec
fwait
mov
outsl
and
lret
push
inc
ret
call
lods
ss
fbstp
cmp
xor
gs
aas
xchg
mov
ljmp
mov
cmp
push
adc
push
inc
pop
repnz
cmc
jns
jecxz
jbe
xchg
out
rorl
enter
xor
lods
xor
call
aas
les
mov
jno
push
push
scas
hlt
inc
push
lods
fwait
push
test
jecxz
insb
pop
mov
dec
in
jbe
dec
into
cltd
adc
pop
les
jl
test
cmp
inc
jg
repnz
cmp
adc
data16
add
mov
cmp
inc
push
xor
clc
bound
outsb
loop
mov
aas
in
cmc
cmp
aad
mov
xchg
xor
jo
imul
dec
dec
rolb
sbb
mov
xor
lds
sbb
roll
idivl
pop
enter
out
mov
jno
shrl
xchg
out
fwait
js
sub
out
fisubs
sbb
out
sub
mov
push
movsl
nop
in
cmc
mov
jns
add
mov
mov
add
das
add
and
jo
mov
mov
cmp
cmp
mov
sbb
jge
pop
or
xor
sub
mov
int
dec
sub
pop
inc
xchg
jae
xchg
les
pushf
mov
cmpsb
mov
cmp
cmp
sarb
ds
inc
xchg
mov
jns
inc
cltd
fiadds
xor
jmp
jge
mov
xlat
xchg
jmp
or
adc
inc
adc
cmp
jecxz
movsl
or
inc
in
cwtl
addr16
out
sbb
cmp
in
repnz
stc
and
cli
loopne
xor
mov
dec
fisubrs
jp
mov
add
lods
xor
inc
bound
dec
cld
imul
inc
dec
and
cmpsl
enter
cli
call
inc
sarl
xor
test
or
sbb
mov
loop
xchg
fldt
xor
jne
lret
xchg
sbb
ljmp
jl
add
ficoms
push
into
and
and
in
ret
inc
lea
mov
sub
add
fimuls
mov
insb
sub
mov
int
idivb
mov
sbb
aam
xor
dec
sbb
push
cmp
jg
inc
popa
gs
imul
cmp
xor
sbb
das
js
jp
outsb
cmp
test
outsl
mov
loop
test
fbstp
dec
push
and
dec
mov
fcmovnbe
inc
jp
cmp
scas
das
mov
cmpsl
movsb
jne
cld
cmpb
xor
push
push
fwait
mov
cmp
test
pushf
mov
xor
lods
mov
jmp
test
jo
adc
in
data16
push
push
arpl
push
addr16
add
les
jnp
push
popf
xchg
outsl
sub
mov
push
xchg
fstpt
sub
push
jbe
addb
jp
test
jmp
imul
jg
xchg
es
icebp
aam
add
jge
imul
jne
shl
cwtl
or
out
push
pop
fnstcw
nop
sbb
dec
clc
or
xor
jae
shrl
jb
sbb
cmp
mov
pop
cmp
jmp
cli
outsb
and
cld
or
pop
adc
jns
das
adc
cmc
movsl
add
sub
les
shrl
inc
jne
test
in
fisubl
jg
dec
movsb
popw
adc
push
jecxz
adc
dec
stos
test
outsb
mov
push
inc
scas
test
and
shl
aaa
cmp
sub
xor
push
mov
fsubl
sbb
test
dec
cld
js,pt
repz
cmpsb
sbb
inc
incl
pusha
dec
xchg
add
xchg
push
push
cmpsb
push
xlat
adc
test
cmp
jno
jl
inc
add
inc
leave
sti
testl
xor
out
aas
jmp
or
cwtl
aam
sahf
or
push
dec
lret
mov
push
shlb
xchg
into
push
imul
imul
or
sti
dec
insl
out
push
inc
push
mov
lods
xor
int
fldl2t
in
jbe
insl
mov
sahf
je
pop
jae
push
dec
or
mov
jo
daa
aas
add
cld
mov
pusha
cld
pop
jo
xchg
and
inc
jne
jge
jnp
mov
int3
inc
jg
ljmp
xor
xor
mov
adc
xor
incb
movsb
adc
dec
dec
adc
lahf
int
loope
lahf
adc
jle
and
lods
fsts
pop
jp
pop
out
inc
loopne
lret
jp
or
push
mov
sarl
xor
jle
cmp
xor
xor
and
push
imul
jp
sbb
je
cmp
sub
jns
sub
lods
sbb
mov
fmul
outsb
cmp
out
dec
push
adc
xor
test
iret
mov
pop
adc
mov
lods
jb
sub
jbe
pop
cmp
jge
adc
movsb
lods
cmp
add
inc
and
sub
xchg
arpl
lock
add
or
adc
and
in
mov
sbb
int3
mov
lret
sub
mov
mov
adc
inc
adc
xchg
lock
mov
pop
adc
mov
sub
test
cmpsb
aam
rorb
fstl
es
fidivrs
std
mov
mov
fisubs
imul
dec
test
testl
or
jge
scas
pop
jmp
cmp
mov
ret
inc
rcr
sbb
dec
mov
adcb
xchg
dec
sub
das
xlat
outsb
popa
mov
jnp
jl
jmp
mov
mov
cltd
fsubs
in
daa
in
dec
mov
or
mov
loop
sub
add
andl
pop
sbb
add
scas
cmp
pop
loope
jae
inc
iret
adc
mov
mov
loop
dec
adc
idivl
sahf
cmp
sub
and
clc
sub
cwtl
lock
dec
inc
cmp
mov
jne
mov
test
les
addb
in
jp
jge
scas
lret
into
inc
jp,pn
ficoms
pop
xor
js
arpl
test
arpl
jb
scas
adc
in
into
pop
dec
jno
xchg
icebp
xor
pop
or
stos
xchg
scas
mov
sti
push
int3
sub
push
inc
call
pop
dec
out
scas
sahf
jmp
xchg
pop
popa
mov
stos
roll
mov
xchg
lods
adc
sub
mov
mov
jle
jb
addl
push
mov
popf
pop
aaa
ret
inc
in
jl
mulb
daa
and
inc
adc
sub
jnp
adc
repnz
cmp
mov
cmpl
cmp
arpl
push
push
or
loop
inc
pushf
push
mov
movsl
push
iret
lret
jnp
inc
sbb
sub
pop
pusha
cmpsb
adc
insl
test
bound
push
xchg
push
jae
sub
aas
shlb
mov
movsb
outsl
mov
pop
push
mov
repnz
pop
push
xlat
and
xor
bound
inc
mov
test
xor
mov
inc
xlat
adc
mov
clc
xor
insb
insb
into
loope
arpl
pop
push
jae
xchg
in
mov
imul
sub
gs
inc
or
and
aam
jbe
inc
or
cli
cmpsl
sbb
aad
xchg
mov
or
mov
mov
jne
mov
popf
xchg
mov
sub
out
insl
adc
dec
add
cld
lods
or
mov
mov
jg
add
js
cmp
inc
inc
cmpsb
xor
dec
js
adc
cmpsb
lds
fistl
pop
shlb
faddp
or
divb
outsb
jbe
jnp
test
shlb
fadds
pop
sbb
xor
scas
push
shrl
push
das
dec
mov
outsl
outsl
es
insb
and
push
sbbb
dec
push
test
push
lret
cmc
outsb
mov
inc
xor
jle
push
push
bswap
mov
push
cwtl
js
xchg
inc
lahf
inc
xchg
sahf
leave
mov
push
adc
and
shll
xchg
and
addr16
loopne,pn
cmpb
mov
inc
lahf
push
jg
mov
adc
push
cmp
push
jl
mov
rcl
cmp
mov
fimull
sub
cmp
cmpsl
xchg
cmp
xchg
call
les
sub
loop
xchg
xchg
mov
test
test
scas
imul
stos
xchg
popa
outsb
push
lahf
loope
push
insl
xor
lret
andl
inc
xor
sahf
and
fsubl
push
xchg
lret
mov
sahf
and
fidivrl
or
mov
lcall
cmp
xor
hlt
xor
xchg
bound
ss
enter
cltd
and
xchg
iret
mov
in
jno
sub
push
xchg
add
mov
pop
iret
lods
dec
dec
cmp
cmp
sbb
cwtl
mov
inc
sbbb
mov
sbb
cmp
imul
cmpsb
mov
scas
xchg
scas
push
or
pop
xor
dec
push
cltd
mov
xchg
das
xchg
push
mov
cmp
fistl
dec
out
push
mov
aad
inc
or
dec
xchg
xchg
mov
push
and
sbb
jmp
add
and
mov
cmpsb
ljmp
pop
mov
pop
ja
mov
jo
rcrb
iret
js
jae
push
push
adc
lret
fsubrs
and
and
mov
mov
stos
xor
dec
mov
imul
pop
je
xchg
xor
xor
mov
xor
push
out
cli
outsl
mov
je
mov
adc
inc
cld
cld
jle
std
dec
pop
roll
xor
mov
mov
inc
das
ja
jne
mov
cmp
push
mov
out
std
sbb
stos
in
adc
xor
ja
pop
inc
cmp
test
pop
mov
insl
cmp
sti
sub
mov
cmpsb
dec
addr16
mov
mov
shll
bound
jl
out
clc
sahf
lea
aas
inc
cmc
test
inc
sub
sbb
ds
xchg
std
in
push
stos
mov
dec
cmp
mov
inc
adc
sti
sub
lods
rcr
and
pop
in
mov
cltd
test
cltd
mov
and
mov
lea
push
xlat
dec
jno
and
out
fcomps
xchg
dec
in
dec
adc
jb
loope
js
cmpsl
mov
xor
pop
cmp
pop
jge
fistl
cmc
push
cmp
push
push
cmp
inc
cmp
jo
jg
cmp
dec
cmp
xchg
mov
push
and
push
push
push
xchg
mov
xchg
xchg
inc
fldl
mov
jp
fnstenv
sbb
sbb
roll
xor
xchg
push
push
sub
das
into
lahf
jmp
out
arpl
bound
cmc
xchg
out
push
mov
das
addr16
leave
imul
jo,pt
sub
pop
dec
insb
mov
xchg
inc
pop
lock
cli
mov
xchg
loopne
cmp
cmp
cli
mov
ret
and
xchg
pop
iret
xchg
sbb
mulb
inc
cli
data16
outsl
je
stos
aam
out
ficompl
rcll
out
popf
ss
arpl
jecxz
pop
repnz
push
add
dec
lcall
stc
xchg
xor
lahf
shlb
or
std
hlt
bound
movsl
pop
into
or
xchg
frstor
in
inc
mov
mov
mov
mov
mov
enter
pop
mov
es
fiaddl
dec
loopne
inc
inc
add
ficomps
shlb
inc
mov
enter
ljmp
stc
ds
fldl
fs
out
popl
pop
pop
outsl
jne
insl
dec
xchg
out
sub
ret
fimuls
adc
aas
das
popf
repz
adc
loopne
push
add
addl
mov
push
inc
lcall
pop
mov
push
cmpsb
xor
mov
push
or
inc
xor
inc
aas
push
mov
je
push
pop
sbbb
aas
sub
cld
jo
jo
jge
bound
mov
mov
shlb
and
mov
mov
add
mov
jmp
cli
cmpsl
dec
daa
jns
lea
das
lret
xor
call
add
ljmp
adc
dec
rolb
adc
mov
pop
lret
xchg
cli
sbb
push
in
cmpsl
jl
movsl
jp
leave
xor
adcl
pop
scas
cs
je
ret
fcompl
hlt
pop
movsb
adc
and
xchg
jo
xchg
jne
pop
and
arpl
sbb
adc
in
enter
jl
je
jp
xchg
push
xor
xchg
and
rclb
pop
mov
pop
sub
pop
ret
pop
adc
clc
jl
js
lea
sarb
pop
in
cli
xchg
mov
pop
int3
push
pop
push
arpl
adc
sbb
sbb
and
jns
mov
aam
loope
mov
dec
test
mov
inc
push
mov
mov
push
sahf
push
jmpw
ljmp
das
cs
aam
mov
dec
scas
pop
jge
ja
fisubl
or
loopne
pop
js
inc
shrb
popf
in
rolb
das
jno
and
mov
imul
mov
push
icebp
nop
cmpsb
out
xchg
mov
or
in
les
ss
sub
loope
ljmp
movsl
jle
js
das
adc
scas
inc
pop
sub
dec
xchg
insb
sub
cmpsb
push
lods
inc
inc
cltd
insb
mov
inc
adcb
sbb
jge
cli
mov
and
xor
dec
or
and
dec
mov
sbb
ss
in
mov
add
sbb
jmp
test
movsb
mov
scas
cwtl
sbb
js
lahf
mov
imul
push
dec
push
fdivs
data16
sahf
xor
movsb
lahf
jbe
sub
and
cmp
fstpt
xchg
sahf
mov
jae
lret
pusha
adc
imul
out
stos
ret
xor
fs
movsl
loop
adc
fidivl
outsb
inc
or
outsl
enter
int
in
xchg
jo
gs
call
pop
scas
insl
scas
mov
arpl
jno
mov
popa
testb
xchg
pop
xor
inc
jb
mov
xchg
jg
iret
pop
adc
inc
scas
sub
mov
ret
jmp
andl
loopne
mov
dec
push
mov
inc
xor
loopne
inc
test
cli
outsb
mov
cmc
xor
mov
push
push
int
jl
mov
fwait
lahf
cmpl
gs
pusha
xor
and
imul
into
mov
je
arpl
out
mov
movsb
xchg
scas
xor
dec
shll
pop
in
sub
push
jb
out
inc
int
adc
stos
mov
push
xlat
xor
insl
cltd
xor
jge
andl
xor
out
out
cmp
pop
mov
cld
or
stos
ret
and
bound
mov
pop
outsb
pop
jbe
push
cmp
imul
xchg
cwtl
pop
add
xchg
mov
scas
push
or
xor
andb
adc
es
inc
fwait
push
out
pop
ror
sahf
lods
int3
cmpl
stos
mov
push
jle
jo
and
jbe
mov
mov
push
sub
jecxz
aas
and
pushf
les
push
xchg
in
jae
mov
inc
pop
cmpsl
inc
cmp
inc
add
jnp
aas
lret
imul
inc
mov
dec
lret
orb
sub
pop
shlb
lahf
dec
mov
movsl
mov
sbb
push
mov
pop
mov
test
lcall
popf
in
dec
pop
mov
aam
mov
in
jae
ffree
sub
shrl
jp
cmpsb
xor
jecxz,pt
jbe
pop
je
jnp
sub
and
cmp
push
sar
xor
movsl
xor
cmp
andl
out
clc
jmp
push
jg
test
adc
aam
sbb
sbb
add
cmp
in
pop
jnp
sbb
or
dec
sub
add
lcall
lods
arpl
add
enter
std
repnz
call
lahf
repz
xchg
ret
mov
add
stc
lcall
push
int3
ds
xchg
inc
icebp
mov
add
add
cwtl
xor
fld
mov
lret
xchg
and
arpl
push
jb
or
ss
mov
mov
and
sbb
cmp
aad
cmp
inc
mov
push
int
jo
sti
sub
int3
gs
or
popf
sbbl
pop
xchg
ss
rcr
cmp
push
shll
int3
in
sti
fcoms
add
xorl
loop
in
push
pop
insb
xor
add
or
or
mov
leave
mov
pop
pop
popf
ret
lret
pop
sub
fs
fwait
mov
mov
inc
fstpl
or
push
and
cltd
insb
push
test
jnp
sarb
vpshad
imul
sbb
adc
dec
push
lods
pop
xchg
aam
ret
lret
xchg
rolb
or
sbb
out
shll
cmp
into
lods
into
insb
cltd
xor
pop
mov
xor
fisttpl
insl
imulb
movsl
in
xchg
mov
or
push
lods
lods
cmp
leave
mov
push
fnstcw
cmp
dec
mov
movsb
jge
xchg
cmp
outsl
pop
aad
jmp
nop
fwait
push
and
lahf
into
cmp
inc
je
test
sub
dec
push
insb
push
scas
xor
sbb
fiaddl
imul
adc
adc
fimuls
loop
pop
xor
sub
data16
sbb
cmpsb
fdivs
and
or
add
in
push
jmp
mov
xor
jmp
sbb
cmp
add
scas
inc
outsb
inc
stos
sbb
enter
stc
ljmp
mov
cmp
in
je
or
xor
push
add
mov
pop
and
inc
jne
fwait
test
ss
mov
cwtl
push
ret
movsl
fsubl
int3
psllw
mov
mov
dec
je
cmpsb
outsb
inc
cltd
imul
cmp
stos
cmp
data16
popa
xchg
fists
pop
mov
rolb
inc
shlb
cmc
mov
push
dec
pop
push
fstps
int3
xor
pop
sbb
dec
gs
mul
dec
pop
pop
jne
mov
xor
sub
mov
push
jge
orl
movsb
and
in
idivl
mov
popa
shr
inc
dec
sbb
ret
inc
inc
and
push
jp
lds
pop
lea
push
lret
outsl
lods
ret
dec
jmp
push
xor
mov
inc
mov
dec
add
ljmp
mov
pop
adc
aad
push
mov
and
adc
sahf
clc
push
push
outsb
sbb
inc
jns
lret
test
inc
popf
mov
mov
insl
shll
jl
cmp
cmpsb
add
push
insb
mov
notl
xchg
pop
mov
sbb
ljmp
jle
dec
push
mov
cmpsb
or
cmp
insb
sbb
mov
out
rcl
cmp
and
rcll
sub
mov
insb
or
pushf
mov
dec
sbb
out
fwait
cmpsb
arpl
mov
pop
int
sahf
cmp
and
lock
call
das
mov
pop
push
xor
loope
sub
cmp
sub
test
outsb
pop
lcall
subl
mov
adc
bound
sub
mov
add
cmp
mov
mov
pop
popf
ret
mov
cli
int
and
shrl
das
rorl
lock
loope
inc
fstl
push
mov
xor
js
stc
mov
xchg
les
add
in
imul
popf
fwait
stos
push
test
mov
imul
jnp
mov
int
dec
cs
test
push
call
stos
push
xchg
insb
ret
jp
jb
mov
ficomps
les
idivb
loope
out
fdiv
push
loop
xchg
enter
data16
and
outsl
sub
mov
dec
out
insb
dec
lahf
dec
inc
mov
xchg
push
add
lock
and
ds
das
in
push
sahf
dec
in
jnp
mov
jo
bnd
mov
dec
mov
mov
sbb
rclb
adc
imul
push
push
jnp
lret
mov
loop
in
xchg
mov
xor
rcrb
or
xbegin
xor
dec
outsb
ja
hlt
push
pop
fstps
inc
add
inc
stc
imul
xor
ficomps
adc
jae
push
int3
pusha
dec
or
sbb
cmp
dec
mov
enter
and
cmpsl
imul
jae
fidivrs
sub
pop
jle
dec
pusha
sub
xor
jns
dec
pop
xor
mov
adc
icebp
push
jg
cs
xchg
xchg
dec
inc
and
inc
pop
faddp
aaa
clc
add
rcr
cmp
push
mov
adc
pop
clc
push
cmp
mov
js
pop
inc
push
jle
sar
mov
or
xchg
mov
cmp
outsb
adc
xchg
sbb
fadds
inc
popa
pop
mov
ljmp
cmpsb
orl
fildll
mov
fsqrt
inc
add
icebp
pop
add
gs
add
xor
and
inc
inc
inc
xchg
mov
add
jb
insl
add
pushf
enter
imul
xorl
xor
adc
nop
jb
out
stos
push
mov
cs
xchg
push
mov
ja
jnp
mov
push
push
test
lock
xorl
pop
xchg
and
pop
cmpsb
scas
sub
lcall
lahf
xchg
pushf
cmc
loop
ljmp
mov
jl
push
in
mov
and
adc
cmp
jle
inc
ret
out
push
add
jecxz
inc
xchg
mov
fsubrs
mov
imul
test
cld
jno
xor
movsb
shlb
jp
pop
imul
pop
mov
jno
mov
pushf
test
push
sbb
mov
insl
xor
rcrl
mov
test
ja
movsb
ss
in
and
xor
aad
test
enter
pop
jg
rcr
loope
push
and
dec
cs
xor
dec
cmpsb
pop
push
mov
test
mov
popa
or
inc
cs
das
mov
dec
outsb
cmp
push
lods
push
loope
jb
cld
stc
adc
outsb
mov
push
mov
jp
fnstenv
stc
ljmp
testl
xrelease
xorl
dec
ja
repnz
xorl
lock
sbb
jns
push
and
rorb
nop
cmp
pop
sub
add
pushf
pop
jmp
aad
ja
outsb
ds
addr16
das
inc
addr16
push
fincstp
sbb
stos
sti
push
fdivr
test
xor
pusha
mov
jo
sahf
sbbb
addl
cmp
mov
nop
push
imul
sub
mov
jg
inc
or
jo
add
or
pop
inc
dec
xor
stc
mov
mov
jb
adc
fstpt
lcall
notb
popf
or
xor
les
int
xor
pop
loop
icebp
cmp
out
stos
enter
mov
popf
xchg
dec
inc
jne
push
xchg
insb
push
ds
pop
jp
mov
jge
push
scas
imul
xchg
mov
cmp
sarl
xchg
cwtl
sbb
adcb
fidivrs
jns
jno
mov
scas
sub
jae
sub
push
stos
test
aaa
not
popa
and
mov
and
cmp
sub
push
popf
sbb
and
ss
movsl
out
jl
fld1
pop
mov
pop
ljmp
insb
mov
pop
xor
pushf
sbb
mov
dec
inc
pusha
scas
int
jae
sub
insb
jmp
push
imul
fisttpl
jb
inc
adc
dec
mov
lea
movsb
jp
inc
decl
frstor
lods
data16
repnz
mov
movsl
insb
push
push
icebp
mov
fimull
insb
xor
lods
add
ret
mov
dec
popa
mov
jecxz
dec
mov
outsl
or
xchg
mov
bound
loop
scas
or
jno
adc
stos
scas
xchg
dec
adc
je
xor
sbb
into
es
ja
dec
push
outsl
sbb
dec
inc
add
inc
bound
mov
jno
outsb
fidivrs
mov
add
push
and
cmp
inc
icebp
mov
cli
ret
add
das
stc
das
call
mov
xchg
das
mov
jmp
leave
into
stos
popf
lock
mov
test
mov
hlt
subl
inc
cmpsb
jge
outsb
fisubl
push
fdivrl
pop
fists
lahf
lahf
sub
pop
repnz
pop
xchg
cltd
in
inc
add
adc
adc
sbb
iret
pop
mov
jns
or
clc
mov
xor
or
pop
test
jne
sahf
inc
scas
jle
cmp
fwait
stos
mov
mov
inc
andl
arpl
inc
fs
mov
mov
imul
push
sub
dec
xor
loopne
popa
imul
cmp
dec
jmp
pushf
push
in
test
adc
push
mov
imul
dec
jl
jg
sbb
lods
cmc
fdivrl
cld
inc
ljmp
hlt
aaa
jno
xor
in
stc
push
or
dec
sahf
mov
inc
fsubl
ds
lahf
insb
dec
ds
or
sbb
ljmp
cwtl
sub
cmp
lods
inc
imul
mov
sub
pop
mov
sahf
push
xchg
es
dec
inc
and
cmp
fs
je
jp
lods
jns
adc
push
js
into
fwait
adc
dec
dec
pop
loopne
mov
pop
pop
inc
test
xchg
loope
xor
sbb
fisubrs
and
jecxz
xor
mov
aam
popa
mov
jne
das
mov
out
scas
aam
jmp
xlat
xchg
imul
pop
push
sub
das
mov
sub
mov
jg
addb
movsl
cmp
mov
inc
xor
enter
sahf
scas
icebp
mov
and
cmp
xchg
xor
inc
dec
orl
inc
popl
add
xor
sub
pop
xchg
or
dec
jmp
pop
ret
mov
clc
in
or
jmp
mov
scas
push
cltd
ljmp
pop
gs
gs
inc
pop
mov
cmp
stos
movsl
mov
sub
and
inc
pop
xor
nop
movsb
mov
inc
xor
pop
gs
data16
xor
cmp
and
fcomps
sbb
cli
fsubl
inc
in
dec
sahf
fsubrs
dec
sub
mov
out
fidivl
add
aas
adc
fsts
int3
inc
fdivrl
out
jbe
jle
ss
insb
icebp
test
adc
dec
ss
test
jl
outsb
push
jno
push
imul
dec
jp
cs
mov
adc
mov
inc
in
mov
stos
xchg
or
adc
and
xchg
aas
jns
ficomps
insl
xor
test
xlat
insl
sub
je
jns
dec
push
sbb
xor
aaa
pop
adc
lret
test
fucom
mulb
repnz
div
cmc
add
bnd
scas
insl
insl
or
leave
fchs
outsb
mov
push
and
pop
bound
mov
out
inc
repnz
lods
pop
jmp
cmp
push
push
ljmp
sbb
xor
leave
test
xchg
and
and
subb
mov
ja
push
fucomi
pop
int3
mov
sahf
stos
ret
cltd
xor
inc
sbb
inc
mov
icebp
cmp
and
popa
mov
gs
stc
movl
dec
dec
lahf
ds
fisubrl
std
xchg
dec
movsb
push
aad
push
pop
inc
mov
xchg
mov
xor
push
mov
xor
push
push
pop
xchg
cmp
dec
push
mov
xor
std
pop
inc
jle
push
push
das
shlb
add
push
dec
adc
dec
and
stos
inc
jno
push
test
lods
jp
or
xchg
sbb
sub
push
es
out
push
jae
into
mov
and
jne
xchg
cmp
inc
std
adc
jmp
arpl
add
movsb
xchg
into
icebp
jmp
sub
mov
adc
out
dec
addr16
inc
cmp
jnp
pop
movsb
jle
mov
test
push
nop
mov
sub
push
add
jb
nop
out
cwtl
mov
outsl
shrl
fisttps
adc
mov
out
addr16
cmpsl
ds
xor
mov
pushf
nop
xchg
mov
push
out
mov
xor
lahf
cmpsb
inc
sahf
clc
xchg
pop
scas
inc
insb
jno
aam
jbe
sub
inc
cmc
fildll
jns
jns
cli
xchg
pop
sub
ds
shrl
in
xchg
lods
mov
fiaddl
mov
pop
cmp
out
int3
xchg
lock
push
insl
fistpll
mov
lds
scas
xor
nop
pop
jle
mov
xor
sub
cmp
std
enter
inc
pop
xchg
pop
icebp
sub
test
orl
push
fsts
loop
aas
fidivl
mov
iret
addr16
mov
ss
jae
pop
jp
pusha
and
pop
shlb
fisttpll
jp
mov
xor
inc
lret
mov
ds
xlat
cwtl
cltd
movsb
pop
subl
hlt
push
ds
sbb
dec
loop
pop
mov
imul
inc
movsl
inc
push
lcall
or
inc
pop
xchg
adc
ss
dec
push
lahf
cmpsl
inc
loope
out
xchg
arpl
in
cmpsb
adc
jns
stos
lods
xor
dec
mov
push
add
inc
pushf
inc
xor
cltd
and
incb
ss
stos
cmpsl
or
es
pop
and
push
push
mov
jecxz
inc
stos
subl
lcall
xchg
push
enter
xorl
and
pop
sti
jl
dec
movsl
in
inc
pushf
sub
test
cmc
xchg
push
jb
sahf
out
mov
push
dec
inc
cmc
mov
inc
orb
mov
popa
cmpsl
sub
int
in
mov
repnz
bound
and
std
scas
push
ret
test
push
hlt
xor
pushf
cmc
leave
cmp
mov
dec
popa
es
cmp
fisubs
iret
in
cmp
cmp
and
movsb
push
push
mov
andl
js
fs
mov
sub
nop
push
adc
xchg
popf
xchg
pop
lds
cmp
arpl
fwait
stos
shlb
mov
and
jmp
sub
sub
jb
sub
mov
lret
sub
xchg
adc
xchg
push
into
jns
and
push
cmp
dec
pop
push
iret
push
test
sbb
push
and
mov
or
jne
in
pop
adc
in
mov
xchg
sti
or
ljmpw
loope
sub
js
out
popf
sub
cmp
and
jl
mov
imull
popf
stos
pop
data16
push
test
push
sahf
and
jp
sti
ret
push
and
shlb
push
scas
popa
lahf
pop
push
scas
xchg
popa
in
pop
cmp
rcrl
and
and
mov
loop
fwait
or
push
jecxz
andl
cld
mov
es
fistpll
outsb
and
pop
xor
pop
xchg
xchg
xchg
das
sub
push
inc
inc
insb
sbb
nop
xor
mov
sub
mov
inc
jl
or
xor
loop
cmpsl
je
aaa
jecxz
add
in
jp
fcoml
cmpsl
test
add
loop
les
sub
pop
fcomps
testl
mov
int
pushf
sbb
adc
mov
fs
pusha
xchg
cs
std
sarl
enter
add
and
aas
mov
cmp
xchg
sbb
stos
addr16
dec
inc
xor
test
or
xor
pop
hlt
adc
mov
jo
ds
pop
insl
jb
ss
sti
adc
sub
and
jae
mov
mov
and
lods
add
addl
inc
adc
ja
and
sub
pop
inc
sar
mov
sub
popa
testl
pop
mov
sahf
pusha
nop
pop
dec
shl
mov
adc
jb
mov
mov
ret
mov
icebp
push
mov
mov
dec
add
xchg
or
aad
add
cmp
and
lret
xor
pop
xchg
jg
rorl
aam
movsb
fdivp
repnz
lea
test
shrb
xor
fsubrl
dec
and
xor
jle
aam
cmp
mov
sub
mov
cmp
mov
cs
sbb
test
rorb
insl
shrl
jae
push
cmpsl
scas
sbb
stc
icebp
push
call
out
shll
int3
push
mov
ret
outsl
mov
sub
and
lock
xchg
mov
adc
jmp
xor
insb
data16
cltd
xchg
sub
nop
rol
ds
xchg
xchg
mov
repnz
xchg
icebp
add
lods
into
adc
push
ret
lret
int3
je
mov
cmp
pop
ja
outsb
test
mov
js
add
adc
inc
lret
enter
or
outsl
pop
arpl
pop
xchg
or
xchg
push
cmpsl
fnsave
xchg
pop
mov
and
addr16
inc
mov
lock
mov
inc
mov
sbb
lds
jg
jge
adc
sbb
popl
imul
repz
fstpt
xchg
dec
or
fldenv
cmc
pop
gs
xchg
mov
pop
adc
bound
adc
xchg
or
rol
adc
sub
and
divb
cmp
sbb
lds
mov
mov
mov
push
call
pop
in
inc
sbb
sub
iret
es
xchg
jl
inc
xchg
xchg
inc
lcall
mov
dec
les
inc
mov
mov
dec
xor
fisubs
jp
ds
jo
popf
and
jbe,pn
mov
xor
mov
mov
dec
push
fsub
imul
lahf
fcomp
sbb
cmpsb
and
inc
cmc
icebp
aas
push
push
cmp
inc
mov
clc
lcall
aaa
mov
inc
mov
fidivrs
cmp
dec
adcl
inc
xor
sub
fsubr
in
call
shlb
mov
in
ljmp
stos
jno
sub
fcmovb
in
int
sub
cmp
and
adc
xchg
pop
jae
push
xorl
jo
jnp
imul
icebp
in
xchg
mov
and
cld
adc
xlat
bound
insl
dec
sbb
mov
aad
xor
scas
xchg
inc
iret
rcll
pop
icebp
lret
imul
es
pop
xlat
pop
jle
xchg
cwtl
fwait
inc
xchg
xor
cmp
or
js
out
mov
stos
mov
mov
pop
scas
repnz
push
mov
shlb
idivl
cmc
add
int
inc
or
cmp
test
test
xor
mov
in
add
pop
ss
imul
icebp
inc
and
ljmp
orb
ret
cld
ds
inc
pmaxsw
sti
mov
pop
shlb
repz
jp
out
mov
sbb
das
cld
pop
and
ds
mov
pop
lret
loope
test
int
decb
cmp
or
cli
jo,pn
loope
jae
test
mov
shlb
inc
mov
into
push
pop
lcall
push
daa
stc
inc
idivb
cs
mov
cmp
pop
pop
stos
push
xor
call
sbb
cmpsl
cmp
pop
insb
pop
lcall
dec
orb
mov
inc
iret
jb
dec
lods
push
sub
aaa
jle
cmp
sahf
and
mov
pop
lods
xlat
in
stos
push
cmp
stos
mov
ljmp
enter
or
in
fs
ja
jle
jno
std
mov
jp
push
test
movups
cmpl
jmp
sub
mov
jbe
mov
jb
nop
and
xor
pusha
push
lds
adc
cmpb
sbb
dec
jo
jge
cwtl
imul
std
decb
add
jle
lds
sub
or
push
lods
xchg
adc
mov
in
out
xchg
cmp
cltd
jo
cmc
in
cld
in
scas
push
scas
xchg
stos
jno
or
pop
js
inc
or
repz
imulb
adc
fidivrl
add
dec
jb
aaa
inc
test
mov
push
add
mov
jno
imul
inc
pop
jnp
xchg
add
pop
xchg
das
push
mov
pop
mov
xchg
mov
movb
push
hlt
pop
popa
push
inc
or
and
add
push
movsl
or
jg
inc
ret
jg
pop
or
push
test
inc
sub
mov
shrl
sub
lds
jg
fisubrl
pop
mov
pop
mov
stos
addl
out
outsb
jne
and
lea
call
test
jl
fsubs
loope
fists
push
fs
loopne
nop
loop
mov
fistps
test
out
jge
or
dec
pop
push
jno
sub
ret
ds
and
xor
fcomps
or
xchg
outsl
test
repnz
mov
test
das
dec
out
mov
xchg
popf
and
xchg
out
mov
push
dec
and
cmp
or
dec
leave
nop
mov
mull
jge
pop
inc
mov
ja
mov
pop
lret
dec
push
sub
dec
std
xchg
cmp
pushf
stos
test
jl
dec
dec
jne
pop
cs
pop
int3
mov
mov
pop
hlt
loopne
pop
mov
roll
lahf
jbe
jg
cmp
fsubrs
xchg
mov
sub
nop
push
xchg
fs
sub
mov
std
int3
inc
sbb
je
je
cmp
aaa
popa
add
pop
es
inc
outsl
pop
loopne
out
movb
pop
gs
xor
orb
mov
jo
andb
pop
and
mov
mov
pop
call
xor
jno
ds
adc
dec
std
push
mov
mov
lods
push
or
leave
add
cmp
push
mov
pushf
jnp
mov
adc
mov
clc
push
jno
inc
push
sbb
test
xor
clc
movsb
sbb
cltd
mov
adc
call
jne
push
pop
adcb
xchg
pop
and
mov
mov
cltd
test
scas
mov
and
sbb
jecxz
cs
dec
icebp
scas
push
out
mov
adc
int
lcall
mov
ss
fwait
cmp
sub
adc
mov
pushf
push
ljmp
cwtl
sub
pop
mov
pop
pop
imul
inc
xchg
inc
xor
xchg
ss
mov
inc
test
cmpsb
ds
daa
dec
repnz
jno
dec
inc
imul
inc
andb
push
clc
mov
rorb
repz
es
call
or
pop
xor
scas
mov
adc
insl
and
or
and
test
jne
lahf
push
push
dec
sbbb
clc
mov
jge
cmp
and
xchg
out
pop
dec
push
mov
mov
js
movsb
push
mov
push
jne
pushf
cmp
add
mov
adc
ret
cmp
aad
adc
clc
gs
mov
insl
test
addl
push
pop
je
pop
js
adc
hlt
in
and
jnp
das
push
nop
adc
dec
cmp
andb
stc
push
repnz
std
inc
or
outsw
or
pop
xchg
pop
ret
outsl
test
lret
cmp
arpl
cmp
xor
jbe
mov
mov
jbe
or
xchg
xchg
cltd
outsb
inc
ja
sub
stos
pop
inc
pusha
jbe
imul
push
sub
and
ss
pop
gs
push
cs
inc
inc
xchg
or
inc
adc
jno
jb
fs
sahf
mull
test
inc
or
sbb
dec
scas
lock
idivb
inc
mov
push
mov
lret
jl
rolb
xor
mov
pop
mov
fdivrs
and
jbe
and
addr16
dec
push
pop
addr16
adc
jae
sub
xor
or
hlt
xor
fstpl
push
and
outsb
pop
or
cmpsl
ljmp
in
hlt
int
in
cld
gs
scas
mov
stos
push
push
stc
es
ds
movsb
adc
movsl
aaa
xchg
mov
pusha
sub
cmc
fisttpl
test
mov
mov
xchg
pop
jp
daa
pop
andb
jae
mov
cmp
xchg
push
push
add
call
push
bound
add
inc
lods
xchg
inc
mov
cmp
out
mov
out
imull
pop
xchg
out
pushf
sub
loopne
cmpsb
test
mov
pop
dec
or
xchg
fs
insb
sbb
and
inc
call
mov
outsb
mov
sbb
pop
int
jge
popa
shlb
int
sarl
push
ljmp
js
repz
sub
mov
test
imul
lret
mov
mov
aam
pop
jecxz
sbb
or
mov
mov
pop
pop
jmp
js
dec
repnz
int3
inc
ret
sub
xor
les
movsl
adc
and
push
mov
shrl
in
push
scas
mov
popa
jo
and
jg
cmpsb
inc
and
and
sbb
mov
je
jecxz
cvtps2pi
push
stos
ss
in
fcompl
jo
ss
popa
loop
pop
sbb
inc
xor
pop
aam
sub
popf
mov
mov
mov
and
push
mov
cmp
outsb
mov
jecxz
pop
jnp
xlat
sub
jo
jnp
xchg
sahf
xchg
pop
pop
xchg
pop
sub
out
lock
int
sub
mov
push
insl
dec
aad
mov
jl
fildll
pop
mov
in
repz
stos
mov
shrb
mov
mov
cmpsl
add
dec
jle
cli
loopne
enter
das
stos
add
ds
clc
out
aam
mov
pop
sub
push
sbb
jge
adc
dec
int3
sub
inc
test
cmp
and
aam
sub
cmp
fs
sub
inc
inc
push
movsl
adc
jnp
lcall
and
test
ficoms
mov
mov
xchg
or
jne
mov
pop
cmp
push
sub
jg
add
jge
xor
pop
repz
decb
sub
and
xchg
push
insb
fiaddl
adc
idiv
dec
lock
mov
add
mov
push
pop
sbb
shlb
dec
mov
ds
jae
sbb
sub
pop
ror
inc
dec
arpl
cmp
bound
push
pusha
aaa
inc
outsb
sbb
dec
dec
xchg
pop
or
xor
push
push
mov
mov
push
sahf
mov
jno
dec
repz
or
adc
inc
shl
filds
xchg
xchg
push
inc
inc
aad
std
mov
js
mov
jmp
orb
sub
inc
insb
fs
jp
pop
xchg
fistpll
cs
push
shlb
hlt
clc
adc
sarl
loopne
repz
push
sub
mov
fwait
shll
or
push
xchg
dec
xor
jnp
jl
jb
lret
xorl
rol
inc
sarl
popf
cmp
bound
in
xor
inc
xlat
mov
fildll
push
imul
jge
push
dec
nop
jns
cmpsl
inc
mov
xchg
push
fisubrs
cmp
popa
cltd
and
pop
out
mov
sub
xchg
int3
inc
adcl
test
nop
shlb
fs
and
lcall
xor
cmc
dec
jbe
and
aaa
lea
fs
adc
inc
setne
movsb
clc
sbb
mov
imul
ficoms
sahf
enter
dec
lds
cmp
cmpsl
or
in
sub
push
push
sbb
andl
hlt
ljmp
outsb
cmc
lods
mov
dec
scas
pop
mov
dec
scas
loopne
cmp
fs
adc
out
pop
es
scas
aam
sbbb
dec
cld
insb
hlt
das
arpl
pop
inc
push
shrl
xor
imul
adc
es
aaa
sahf
sbb
loope
push
fsubrl
jne
pop
mov
movsl
scas
dec
sbb
lret
pop
into
add
inc
xor
cmp
gs
cmp
jb
and
sub
mov
in
shr
enter
fdivrs
lcall
push
xor
mov
clc
push
push
leave
push
pusha
xchg
out
stos
xlat
and
inc
xor
out
decl
sub
shll
stos
rol
cmp
lods
push
mov
test
sti
lret
dec
cmpsl
jl
std
dec
mov
xchg
push
mov
ljmp
inc
popf
ds
push
cmp
fldcw
cmp
or
movsb
lret
mov
xchg
lock
ss
jb
adc
sub
sbb
lret
cmp
test
xor
dec
push
dec
shrb
push
mov
and
jg
shl
fs
xchg
hlt
enter
push
mov
test
out
nop
fsubrl
adc
subb
popa
sarl
fwait
xor
sbb
and
mov
mov
rcrl
cld
xor
aas
cltd
pop
and
sbb
loop
lret
mov
imul
lahf
stc
cmp
pusha
gs
xor
in
mov
aaa
shrl
xchg
adc
cmp
dec
mov
movsb
les
and
ds
shll
mov
push
cmp
jo
push
addr16
sbbl
sub
movsb
addr16
push
lods
push
movsl
fimull
adc
inc
icebp
stos
fsubs
mov
mov
add
sub
push
addr16
xlat
xor
jge
xor
cmp
test
add
pop
xlat
xor
pushf
mov
xchg
adc
movsl
or
mov
mov
mov
jbe
adc
pop
xchg
pop
incb
lcall
mov
rep
sub
dec
inc
and
push
sbb
mov
lods
das
stc
push
repnz
sbb
push
pop
dec
xchg
mov
cmp
inc
int
or
nop
pop
outsl
into
loop
scas
fcomps
test
cltd
jb
mov
stos
xchg
dec
sub
pop
jecxz
sbb
jo
imul
dec
jmp
sahf
pop
jb
in
xchg
jb
arpl
cmp
jno
and
dec
mov
cmp
inc
mov
inc
dec
ja
dec
pop
push
cmp
push
sub
jns
dec
cwtl
mov
mov
dec
nop
loop
mov
in
push
cmp
jge
adc
mov
js
enter
mov
mov
addr16
movsb
test
mov
push
sub
ja
mov
sub
lods
sub
mov
in
rclb
lahf
call
enter
cmp
lcall
aas
nop
rcr
adc
adc
lahf
cltd
in
sbb
sub
xchg
push
pop
jbe
dec
xor
ficomps
push
sbb
pop
xor
mov
ds
jl
jle
inc
inc
jns
outsb
push
dec
jno
mov
xor
push
fwait
dec
or
movsl
mov
rep
inc
icebp
adc
clc
and
push
xchg
addr16
iret
xchg
jge
inc
push
fists
xchg
pop
out
fdivrs
dec
xchg
xchg
jp
rdpmc
inc
sbb
inc
mov
movsl
sub
xchg
sbb
dec
add
sub
push
mov
lods
std
push
hlt
cmp
andl
xor
mov
mov
xorl
sub
imul
add
cmp
inc
cltd
mov
fcoml
mov
jne
jnp
fiadds
ret
js
in
ds
pop
xor
fmull
pop
push
jo
in
dec
cmp
iret
subl
inc
and
cltd
popf
push
popa
and
icebp
jno
out
test
inc
cmpsb
cmp
sbbl
or
cmp
out
and
out
je
inc
add
aaa
setg
data16
push
or
dec
loope
je
and
mov
int
and
mov
jno
sbb
adc
or
mov
mov
jbe
sbb
mov
adc
dec
inc
push
cli
mov
aaa
popa
ds
les
mov
pop
dec
cmp
xchg
lods
cmp
and
inc
and
out
push
adc
hlt
push
inc
xor
aaa
push
pushf
sbb
lret
insb
into
jo
fidivrs
jbe
add
loop
mov
faddp
mov
leave
mov
sbb
adc
or
xchg
dec
sub
inc
push
inc
mov
scas
loopne
sbb
loopne
scas
loope
push
and
xor
xchg
rorl
loope
mov
sub
je
sti
and
fistpll
adc
pop
daa
push
xor
sub
inc
lretw
add
sub
loop
xchg
pop
ficoml
push
sti
and
adc
xor
repnz
push
int
fisttpl
js
push
fs
adc
roll
movsl
cmp
mov
and
int3
and
outsl
test
insl
ret
shrl
rorb
ds
xchg
insl
rorl
jns
pop
mov
std
xchg
pop
int
shll
shl
push
stos
mov
sub
jp
sub
jg
pop
xor
xor
mov
dec
movsl
hlt
cmpsb
jmp
xor
ljmp
mov
dec
and
stc
xlat
push
jno
add
das
test
fildll
dec
dec
push
and
sub
mov
inc
and
pop
in
inc
aas
nop
sub
das
pop
jo
sahf
pop
sbbb
in
mov
add
out
push
addr16
adc
out
jg
fs
gs
xchg
mov
dec
and
push
jge
jl
cwtl
jle
xor
in
pushf
cmp
mov
repnz
hlt
dec
bound
xchg
push
inc
sbb
das
mov
xchg
xchg
imul
js
push
cmp
dec
pop
popa
pusha
inc
mov
jo
scas
jp
xor
xor
add
mov
inc
pop
bound
in
dec
das
jb
inc
cwtl
lods
adc
ds
rcll
loopne
movsl
lret
imul
enter
rorb
pop
in
decb
cmp
fwait
test
negb
js
pop
add
jno
ja
cli
pop
sahf
mov
inc
scas
insl
mov
mov
cmp
popa
xor
pop
int3
test
test
aam
pop
xor
fnsave
loopne
mov
lea
add
lcall
in
adc
gs
outsb
push
or
stc
incb
aaa
ret
movsl
mov
cmpb
sub
cmpsb
push
fsubs
ds
gs
push
xor
imul
cs
stos
or
dec
jbe
xor
fidivs
mov
pop
test
dec
mov
jge
sub
movsl
push
xchg
xor
stc
and
faddl
sbb
adc
repnz
lods
mov
bound
jp,pn
in
aas
pushf
ss
push
inc
mov
or
mov
sti
out
push
test
xchg
lods
jecxz
rcl
push
adc
fwait
cs
jae
sti
stos
or
aas
mov
mov
pop
out
rcll
loope
jp
in
jecxz
jle
dec
jl
aas
ljmp
test
adc
imulb
mov
outsl
sbb
mov
mov
jg
int
push
popf
neg
cmpsb
cld
outsl
jecxz
dec
popa
sub
cld
lahf
pusha
pushf
xchg
xchg
fldcw
push
movsl
pop
xor
sub
addl
adc
push
fstpt
inc
add
pop
insl
pop
xchg
fdivl
xchg
mov
sahf
lds
mov
pop
cmp
fs
or
js
inc
xor
testl
scas
movsl
fisubrl
clc
cwtl
mov
mov
inc
jb
and
icebp
or
inc
dec
dec
dec
push
xchg
into
fs
push
sub
ja
jmp
fbstp
jb
pusha
lods
or
adc
mov
std
mov
pushf
sub
and
fs
psubusw
into
xor
lds
xchg
xor
sbb
pop
cmp
or
scas
push
mov
cmp
aas
dec
loop
shll
sub
outsl
loope
push
mov
dec
push
inc
in
dec
ret
pop
add
pusha
sbb
mov
mov
push
dec
je
sub
shlb
imul
mov
xor
cld
enter
jb
jge
jp
and
inc
mov
and
mov
mov
inc
xor
imul
fs
arpl
mov
pop
cmpsb
lock
adc
lret
aaa
int
imulb
pusha
mov
int3
aas
mov
fcomi
gs
xor
fistl
nop
dec
cld
inc
xor
jecxz
in
push
sbb
sbb
sarl
stos
mov
cmpsl
imul
xchg
pop
push
cmp
jb
pushf
add
addr16
cmp
cltd
sbb
insb
sbb
xor
es
ja
dec
ret
xchg
outsb
sub
jle
pop
mov
stc
sub
dec
pusha
and
ret
mov
leave
adc
int
jbe
jbe
hlt
test
lods
pop
xor
pop
add
stos
arpl
add
jp
cmpsb
xor
sub
ror
and
pop
push
push
hlt
outsl
es
pop
jno
mov
int
pop
movsl
xchg
clc
test
inc
inc
sar
mov
mov
push
mov
cmpl
aaa
push
fcompl
sahf
adc
jne
out
xor
add
cwtl
lret
pusha
jg
pop
pop
ss
push
mov
stos
cld
clc
xchg
cmp
test
in
imul
insl
mov
rolb
mov
ss
pop
dec
xchg
xchg
inc
add
aaa
in
jg
xor
bound
imul
aad
pop
call
pop
pop
jo
adc
imul
and
mov
enter
mov
std
sbbb
ds
outsb
pusha
call
jle
push
mov
inc
push
xchg
es
stos
push
pop
add
jg
enter
mov
dec
fsubrs
mov
out
bound
in
fisubs
lahf
sbb
fdiv
pop
addr16
cmp
adc
mov
arpl
cmpsl
and
dec
in
inc
add
sbb
std
inc
jno
pop
es
sub
es
mov
xor
sub
test
stos
rclb
or
add
jns
sahf
dec
mov
mov
mov
leave
xchg
icebp
mov
cmpsl
aas
inc
bound
scas
xlat
or
jmp
out
imul
or
sub
jl
ss
push
and
or
lahf
sub
mov
nop
jb
xchg
mov
xor
inc
push
std
cmpsb
test
cmp
fs
aam
hlt
ds
out
xor
clc
adc
sbb
stos
sbb
pop
mov
daa
sahf
inc
stc
int3
mov
push
sub
push
fidivl
xlat
inc
mov
push
jl
and
iret
inc
cmp
scas
sbb
jmp
pop
fistl
fbstp
xor
mov
or
xchg
mov
scas
pop
jecxz
mov
jge
out
popf
jl
aam
in
xchg
push
popa
jnp
scas
jmp
aam
mov
jae
enter
inc
xor
dec
lcall
mov
adc
push
lahf
push
pop
mov
dec
insb
pop
addr16
mov
mov
sub
mov
popa
insl
or
pop
push
fadd
jns
xor
lcall
lret
mov
mov
movsl
jnp
inc
and
lds
cltd
nop
inc
mov
pop
cld
push
test
gs
inc
decb
xor
or
shrb
repnz
push
jp
outsb
inc
outsb
data16
inc
dec
inc
fdivl
lods
outsl
in
sub
pop
pop
jg
mov
xchg
rol
mov
dec
daa
cmp
xor
add
sbb
mov
into
insb
mov
mov
ljmp
add
mov
jb
push
stos
xor
mov
nop
jne
fdivs
add
cmp
imul
es
lods
xlat
lcall
test
add
int3
sub
imul
rorb
mov
cmp
dec
pop
mov
mov
xor
adc
dec
push
jecxz
jmp
mov
addb
mov
cmpsl
loop
adc
or
cmp
and
mov
and
push
roll
jns,pt
daa
xchg
inc
jno
shlb
es
xor
sub
cmc
inc
xchg
mov
bnd
imul
and
lret
sbbl
inc
sub
movsb
hlt
mov
call
fistpl
lock
fsubr
sbb
daa
mov
sub
test
jnp
inc
lods
lds
pop
call
mov
xchg
ljmp
dec
sbb
lret
scas
jne
nop
ds
mov
add
int
repz
xor
pusha
add
mov
rcl
cld
push
popl
push
cmpsl
xchg
cmpsl
jns
in
lahf
gs
xor
inc
push
test
out
pop
call
rcll
push
jo
mov
data16
std
inc
pushf
mov
aad
sbb
andl
lahf
xchg
enter
stos
jne
popa
mov
imul
or
cmp
mov
arpl
mov
popa
test
xor
inc
or
gs
xchg
dec
pop
lahf
push
js
mov
js,pn
xor
pusha
aaa
pop
xchg
test
add
cmpsl
push
fdivr
jae
iret
aam
jb
aas
bound
stc
xchg
xor
hlt
test
lods
arpl
jg
scas
jno
mov
dec
mov
dec
arpl
ficomps
xor
cmc
hlt
ds
stos
adc
xchg
cmp
jp
pop
popf
js
movsl
imul
cmp
lret
rcr
cli
push
pop
repz
mov
dec
daa
xchg
ret
fsubs
aas
ss
push
mov
jge
bound
fsubl
sub
xchg
pop
mov
pop
sti
xor
mov
cmp
enter
inc
subb
out
and
mov
in
in
mov
xchg
push
push
xor
or
sarb
adc
scas
sub
and
test
and
mov
jge
inc
pop
mov
cmp
stos
scas
repnz
jnp
mov
dec
and
fidivs
je
pushf
pushf
aam
pushl
add
test
lods
lret
roll
daa
es
inc
pop
in
mov
js
mov
dec
mov
cmp
sbbb
or
xchg
inc
mov
cmp
jnp
pop
rorb
rolb
out
arpl
or
adc
adc
mov
in
cmp
pusha
cs
stos
sub
xchg
leave
inc
cmp
push
cltd
pop
ljmp
mov
or
iret
lea
arpl
dec
pop
fnstcw
mov
rcll
ja
pop
jp,pt
sbb
jne
insl
xchg
push
jmp
insb
add
jae
fildll
mov
movsb
orb
shrl
adc
adc
test
inc
or
je
and
pusha
inc
inc
loope
or
pop
push
out
mov
pop
stos
shl
inc
adc
pop
inc
pop
fs
push
xchg
xlat
enter
cmp
push
rcrb
lods
or
jl
cmp
push
and
pop
cmc
cld
dec
aam
pop
pop
inc
jbe
xchg
rcrl
pop
movsl
jp
sub
xlat
jle
sub
pop
cltd
out
fcoml
cs
inc
mov
scas
orb
cmp
sub
imul
jecxz
mov
sub
cmp
loopne
push
nop
pop
insl
scas
push
push
sub
fmuls
sub
pop
adcb
add
mov
push
xchg
sub
loop
lahf
push
mov
sarl
mov
lret
incb
in
inc
pop
mov
xchg
or
xchg
cmpsb
xor
jne
pushf
pushf
push
jbe
add
adc
jl
stc
incl
shlb
lods
xchg
rcll
in
push
test
ja
lock
jp
mov
call
dec
stos
jae
pop
fs
push
jae
out
push
outsb
inc
or
inc
sbb
and
add
add
sub
jae
jo
pop
jno
cmp
sub
add
sbb
ror
test
sbb
mov
lahf
or
xor
addb
scas
jbe
adc
cmp
mov
xor
xchg
test
jp
je
push
push
stos
push
inc
mov
inc
sub
enter
cmpsb
jle
leave
add
xchg
aas
ljmp
mov
xor
mulb
add
pop
xor
mov
aaa
mov
es
movsl
stc
sbb
xor
shrl
movsl
sbb
scas
xchg
rolb
jge
insl
xchg
sbb
sahf
xor
mov
dec
iret
mov
mov
adc
push
xchg
xor
xchg
int3
cltd
and
and
pop
push
mov
inc
add
add
aas
stos
sbb
std
imul
xor
jb
sub
aas
in
mov
or
insl
xchg
fiaddl
jle
jge
pop
stos
lds
push
add
sti
pop
or
dec
push
sub
rclb
cmp
enter
and
jecxz
push
mov
scas
lods
outsl
lods
test
inc
jb
sub
mov
fldenv
push
cmp
loop
out
repnz
addl
repnz
bound
jp
outsl
xorb
scas
movsl
sahf
stos
les
js
xchg
xor
dec
mov
mov
jns
aad
lock
push
inc
stos
mov
cwtl
sub
es
jbe
mov
sbb
jl
sub
mov
test
movsb
dec
xor
sub
in
insb
out
mov
loopne
xchg
or
ja
xor
mov
and
imul
notl
or
loope
mov
popf
outsb
shrl
sbb
test
mov
or
int3
test
push
push
fld1
xchg
shll
loope
aad
push
stc
adc
pop
jbe
jns
sbb
xchg
into
out
push
loope
xchg
test
xor
int
mov
jmp
pop
cmp
int3
jp
dec
popa
outsl
jp
mov
adc
xchg
jbe
push
jmp
cmp
js
inc
or
mov
mov
mov
cs
enter
mov
sub
repz
daa
sbb
push
cmp
les
leave
pop
stos
mov
push
pop
rolb
xchg
fldl
adc
fs
inc
mov
leave
sub
pushf
jns
int3
jne
addr16
mov
notb
int3
imul
cmp
jb
cmp
aas
mov
xchg
mov
mov
imul
lea
fisubl
jb
icebp
in
jno
xor
cs
mov
pusha
cmp
ss
fimuls
sbb
xchg
loop
xlat
mov
push
and
lret
cmpsb
cmp
sbb
cmp
push
adc
leave
mov
into
ret
dec
sahf
call
je
xor
int3
cs
adc
leave
lret
push
aas
and
sub
and
push
popa
cmp
std
je
mov
jge
mov
cmp
test
jg
push
jmp
sub
pushf
push
ret
lret
mov
into
jg
jge
out
push
shll
pop
lret
and
mov
lahf
and
mov
insb
cmp
loope
adc
sahf
les
mov
sbb
mov
test
push
cmpsb
pop
mov
jmp
dec
mov
jb
mov
nop
ss
push
mov
mov
out
int
xchg
insl
mov
push
lcall
fwait
stc
inc
aad
xor
arpl
push
stos
fs
dec
jo
aas
les
fsubs
out
mov
jns
xchg
pop
mov
es
jge
jg
loop
xor
sbb
sbb
sub
push
ds
js
nop
jo
xlat
stos
cmp
mov
add
dec
jb
mov
icebp
std
outsl
adc
in
inc
mov
outsl
add
pop
mull
and
xor
fs
jl,pt
mov
lock
mov
dec
jns
lock
in
mov
xor
rorl
popf
addb
dec
inc
adc
ficompl
sahf
pop
mov
loopne
mov
bound
mov
mov
push
repnz
adc
mov
jbe
in
fidivl
loope
shll
xorb
mov
inc
mov
mov
popa
inc
ds
jns
and
and
mov
sbb
test
jb
add
jae
add
int3
xor
orl
into
lods
push
pop
sbb
scas
adc
pop
mulb
lods
jno
in
xchg
push
sbb
mov
icebp
lods
cmpl
jmp
out
xor
stos
mov
in
push
push
enter
imul
addl
andl
push
mov
or
push
out
mov
xor
in
jnp
jl
ja
push
inc
mov
rorl
popa
aad
jne
out
sub
push
jne
jg
lds
int
pop
imul
cmp
cmp
mov
js
outsl
in
push
sub
shlb
aad
jg
pop
dec
xor
clc
xchg
testl
aaa
inc
addl
sti
popa
scas
aaa
into
sbb
in
insb
popa
push
mov
jo
cmp
shrb
outsl
push
pusha
adc
repz
mov
hlt
jbe
jecxz
jp
int3
in
xor
mov
mov
out
xchg
inc
push
in
fildll
pop
xor
pusha
je
scas
ficoms
cmp
sub
cmp
mov
test
scas
cmp
aam
push
bound
sub
cmp
adc
dec
xchg
aad
loopne
or
cmp
not
pop
imul
sbb
insb
dec
sbb
addb
pop
insl
push
jle
in
int3
inc
jo
icebp
lahf
jno
outsb
inc
jb
stos
sahf
cmpps
es
std
xchg
or
sbb
loop
dec
push
cltd
jne
dec
mov
push
push
push
ds
js
loope
ret
pushf
test
popf
mov
jno
hlt
add
faddp
inc
mov
pop
fs
imul
cmp
aad
push
mov
pop
cmpsb
lods
icebp
inc
outsb
scas
xchg
push
mov
mov
xchg
test
popf
movsb
lcall
cld
enter
movsb
inc
and
xchg
out
loope
sub
or
sbb
pop
sub
ljmp
pop
pop
pop
je
aas
pop
mov
mov
bound
push
fs
xchg
jp
dec
out
dec
push
and
test
sbb
ds
repz
aaa
cs
jbe
inc
dec
cmp
out
sar
xchg
push
test
pop
aas
push
or
add
pop
or
inc
hlt
faddl
dec
jle
sub
test
fidivs
fisubrs
inc
mov
in
inc
dec
arpl
in
inc
adc
outsl
adc
into
shrl
push
or
xchg
scas
xchg
sub
sub
insb
stos
mov
fsubrs
test
in
in
add
jns
xor
mov
pop
push
inc
mov
cmp
mov
shrl
into
shrl
pop
scas
test
cmpsl
push
push
lds
es
lcall
and
xchg
ja
sub
shll
loop
std
jle
mov
addb
les
xchg
ret
jl
cmp
loop
add
lods
or
outsl
test
push
arpl
inc
lret
out
dec
div
push
jo
icebp
stc
add
popa
fs
lea
ret
adc
inc
pusha
outsb
cmp
push
pop
cli
push
mov
sub
cmpsb
nop
adc
stc
mov
cmp
pop
clc
cmp
jp
pop
lret
stos
push
pop
out
sbb
in
out
pop
mov
mov
lahf
jne
inc
test
fwait
sbb
inc
fnstenv
xchg
dec
xchg
xchg
push
aas
jmp
sti
mov
ret
fdivrl
add
push
mov
pop
ror
mov
iret
or
jl
inc
roll
fstl
call
push
aam
out
scas
xchg
popf
or
cmp
rcrl
js
push
out
sbb
cmpsl
pop
imul
sbb
xchg
or
ret
mov
jnp
lret
jp
pop
pop
cmpsb
adc
sbb
orb
jo
lods
push
push
fidivrl
pop
xor
dec
lods
cmp
mov
inc
pusha
cmc
leave
das
arpl
out
pop
test
fwait
rclb
lods
jnp
xchg
gs
push
pop
xor
xchg
lock
sbb
xorl
jle
test
jns
push
sbb
pop
and
dec
repz
hlt
dec
cmpl
je
out
pop
loop
mov
xchg
jg
movsl
cmpl
inc
js
adc
dec
dec
pushl
inc
sub
sbb
or
das
cmpsb
pop
into
dec
iret
pop
shlb
aaa
outsl
mov
ss
in
mov
pop
mov
cmp
test
sbb
icebp
imul
call
popf
es
jle
and
push
roll
mov
enter
scas
fldcw
call
xchg
movsl
popa
mov
pushf
clc
mov
xor
jmp
and
pop
mov
insb
outsl
loopne
std
daa
fnstcw
sub
adc
pop
pop
cmp
es
inc
in
out
repz
add
fdivrs
jns
mov
dec
xorb
call
ja
jle
aas
pop
or
arpl
xchg
daa
jne
mov
test
adc
mov
sahf
inc
sub
cmp
lock
adc
lcall
and
pop
jns
pop
lds
subb
lret
adc
mov
js
test
dec
jle
jl
imul
cmp
mov
std
data16
lret
scas
cmpsb
sub
loope
std
push
testb
mov
cli
sahf
jbe
jae
bound
cwtl
divl
cmpsb
push
xchg
and
xchg
pop
push
adc
sub
cmp
loopne
jno
adc
dec
aam
and
inc
sti
fimull
fldlg2
pop
cmp
push
mov
repnz
jnp
push
leave
adcl
xor
mov
dec
and
fcoms
and
xchg
xchg
lods
imul
ret
sbb
ficompl
xor
cld
mov
mov
xchg
or
int3
mov
mov
xchg
xchg
and
insl
xor
cli
dec
mov
icebp
es
jbe
es
addr16
push
mulb
and
push
iret
xchg
mov
pmaddwd
jbe
imul
imul
sbb
fnstsw
stos
cli
mov
mov
dec
fnstsw
add
lcall
stos
cmp
das
cmp
add
xadd
enter
lods
cmp
jle
stc
ja
sbb
ds
pand
jno
dec
cmpsb
mov
mov
movsl
clc
loop
inc
push
mov
sbb
mov
dec
repz
ret
inc
ret
data16
insl
or
dec
jb
add
bound
add
cli
jmp
ljmp
sbb
out
cmp
in
popa
int
test
mov
js
inc
mov
xor
mov
inc
gs
test
mov
addr16
mov
xchg
add
lods
sahf
push
pop
adc
xchg
mov
and
jbe
xchg
add
pop
repz
pop
cmp
adc
add
mov
dec
sahf
pop
mov
cli
jbe
stos
pop
inc
fadd
mov
sbb
and
cmp
jae
cmp
push
repnz
in
or
add
cltd
xchg
gs
mov
daa
fsubrs
or
push
cmpsl
dec
in
mov
pop
dec
dec
mov
sbb
int
jne
faddl
lret
sub
or
incb
out
fwait
cmc
push
mov
pop
cmpsl
mov
push
dec
jno
jbe
add
xchg
movsl
sahf
xor
arpl
cld
jno
aas
push
mov
push
loopne
adc
notl
aas
push
loope
cmp
or
jae
insb
inc
shl
rcr
frstor
cmp
pop
xor
push
inc
popa
hlt
cmpsb
cmp
mov
scas
adc
sub
mov
adc
sub
aas
adc
sbb
popa
scas
pop
pusha
mov
mov
sub
pop
pop
sbb
xor
push
sub
and
fcomps
push
xlat
scas
lds
pop
rol
cmp
and
pop
lods
stos
jb
jg
mov
sbb
int3
inc
test
mov
popa
int
fs
scas
dec
mov
arpl
dec
inc
scas
push
inc
inc
mov
ja
inc
in
cmpsb
xor
subb
sbb
xlat
jnp
mov
das
push
pop
mull
dec
inc
sub
and
cmp
xchg
mov
in
pop
dec
in
popa
int3
xor
inc
mov
dec
lcall
push
repnz
pushf
mov
mov
outsl
inc
xlat
int3
mov
mov
cmp
push
sbb
scas
or
dec
sti
sub
cmp
xchg
sbb
lock
int
mov
scas
xchg
cmp
inc
xor
movl
lcall
sub
in
loopne
or
or
push
ror
jb
push
fs
xchg
std
inc
mov
mov
push
imul
push
dec
jno
fdivr
daa
xchg
pusha
pop
sub
mov
or
jns
inc
rcrb
jmp
add
ret
clc
repnz
pop
into
pushf
jecxz
pop
cli
es
cld
mov
imul
jbe
test
jnp
andb
fstpl
inc
dec
gs
add
mov
rcr
mov
adc
ss
xchg
mov
and
add
dec
test
mov
xor
popf
sub
cli
sarl
lea
push
aaa
js
cmp
pop
pop
xor
mov
add
add
sahf
fdivrs
insl
fsubs
adc
popa
daa
push
mov
movsl
lahf
inc
lods
pop
test
jecxz
cmpb
mov
mov
push
cld
mov
dec
dec
inc
shrl
mov
xor
pop
xchg
and
lret
inc
je
imul
adc
imul
outsl
xlat
push
xor
in
out
and
xchg
push
cmp
fsubl
inc
sahf
inc
out
dec
push
addb
repnz
sbb
fistpll
fs
mov
data16
movsb
push
sarb
ret
and
dec
sahf
mov
jb
dec
mov
rorl
and
shlb
repnz
shrb
cli
sub
cmp
xchg
push
rcrb
test
pop
mov
push
cli
jp
cmp
data16
sub
add
xchg
jmp
pop
outsb
or
mov
cld
stc
inc
jb
dec
lahf
jnp
push
mov
push
inc
shl
jns
mov
xchg
pop
movsb
nop
out
mov
enter
sbb
jge
push
and
cmpl
inc
subl
lahf
sbb
mov
dec
outsb
sub
inc
test
sub
cmp
pusha
xor
int
lods
movsb
mov
cmc
inc
imul
out
test
jo
sub
testl
into
fidivl
pop
mov
mov
inc
insl
adc
cmpsb
in
pop
xchg
sub
mov
das
jns
xchg
int
loop
sarb
sti
mov
pushaw
mov
push
push
pop
stos
addb
dec
jno
sub
cmpsb
in
push
mov
jecxz
cmpsb
pop
lods
jno
sbb
clc
gs
and
jne
jecxz
popf
test
nop
jnp
test
in
cmp
sahf
push
ljmp
popa
int3
daa
dec
rolb
jle
xor
les
repnz
js
dec
out
mov
ja
or
outsb
dec
push
stos
pop
adc
jl
jle
jp
mov
and
mull
call
jg
sub
fmuls
cli
jg
popa
fucomip
mov
or
pop
dec
xchg
push
roll
xchg
fwait
sbbl
js
cbtw
push
mov
icebp
pusha
insl
xchg
push
cmpsl
cmc
mov
nop
xchg
adc
xchg
and
sub
jle
xlat
out
xor
pop
or
xor
push
into
push
pop
fwait
add
dec
push
sahf
and
sub
xor
scas
add
lcall
lods
or
xor
lods
mov
cmp
sbb
push
mov
scas
fmull
pop
fidivs
sbbl
jg
push
jae
or
cmp
imul
in
aas
mov
cmp
pop
inc
scas
aaa
jg
add
cmpsw
out
push
sub
xchg
notl
pop
cs
mov
loopnew
sbb
push
lret
xchg
shl
adc
add
lds
mov
fcomi
insl
pop
dec
mov
xlat
xchg
jecxz
icebp
sarb
jno
sbb
inc
sub
aam
imul
xor
mov
mov
inc
xor
test
xor
sub
pop
mov
inc
xor
scas
push
leave
push
inc
movsl
clc
gs
popf
cmpsb
cmp
xchg
jecxz
push
dec
jmp
daa
pop
mulb
or
xchg
clc
sub
lahf
rorl
inc
push
xchg
pushf
push
or
push
jmp
push
xchg
mov
mov
mov
cmp
imul
sub
lods
sbb
scas
stos
push
sub
sbb
jns
xchg
mov
in
mov
lea
mov
or
and
mov
and
int
lods
mov
les
imul
les
inc
arpl
and
jae
ja
aas
cmp
and
dec
fs
xor
mov
jp
xor
push
jno
mov
cmp
push
cmp
scas
dec
mov
dec
cmpsl
out
call
mov
xor
pop
sbb
aas
int3
pop
mov
mov
dec
push
add
mov
in
adc
sahf
cmp
xor
adc
daa
adc
ficomps
push
lods
out
dec
jb
mov
and
loope
das
fisubrl
fstl
fisubl
adc
and
jle
scas
and
push
icebp
cmpsl
jns
xchg
jg
daa
loope
movsl
xorb
or
fs
aam
frstpm(287
incb
leave
cltd
das
pop
pop
add
pop
pop
xchg
jle
dec
test
std
mov
inc
bound
mov
mov
jge
mov
pop
stc
push
stos
xchg
cmp
mov
int
dec
stc
add
jne
and
push
test
xchg
mov
dec
xchg
fdivrs
sbb
stos
sbb
mov
and
test
mov
inc
ret
push
divl
jg
cmp
mov
sub
add
outsb
mov
movsb
sbb
jecxz
test
ficompl
in
inc
inc
inc
mov
repnz
mov
enter
add
inc
dec
fwait
xchg
jle
fimuls
adc
js
dec
xchg
pop
mov
dec
cmpsb
add
xor
jo
cltd
hlt
daa
out
out
add
add
or
jp
push
sbb
int
cmp
popf
sub
adc
int3
lret
in
es
and
jno
movsl
sub
pop
cmc
popf
xor
clc
push
add
sbb
mov
rcrb
adc
xchg
and
sub
mov
mull
movsb
mov
cmp
push
pop
mov
test
jns
jmpw
push
push
jae
inc
rcrb
imul
sbb
mov
mov
inc
mov
orl
test
xchg
clc
inc
or
mov
test
pop
mov
inc
test
and
pushf
jl
outsl
nop
aas
push
jno
shrl
add
imul
js
js
icebp
push
add
js
hlt
add
xchg
sarl
daa
sahf
dec
loop
int
nop
cmc
repnz
in
int3
mov
fs
fucomip
sbb
mov
loop
stos
inc
and
sbb
mov
stc
xor
fistps
sbb
adcb
xor
ds
mov
push
or
dec
xor
xor
xchg
aas
ss
pop
insl
cs
pop
pop
pop
and
bound
cmpsb
pop
sub
cli
pop
sbb
outsl
cmp
scas
lcall
bound
inc
dec
outsl
inc
sbb
idiv
pop
jbe
jns,pt
inc
dec
mov
rolb
sub
es
sub
loope
aas
adc
jmp
inc
aas
mov
insb
inc
std
mov
movsb
inc
add
add
cmp
xchg
pop
stos
jge
inc
out
shl
movsb
xchg
push
in
add
inc
popa
inc
ljmp
imul
loope
push
insb
lahf
movsl
jl
cmpsb
mov
enter
shrb
cwtl
das
cmpsb
aaa
cli
pop
mov
pop
lret
icebp
adc
sbb
mov
aam
into
in
insl
in
pop
cs
push
or
adc
push
cmp
imul
dec
pop
movsb
xor
std
sbb
sub
push
fdivrp
and
js
loop
jg
dec
inc
pop
rclb
push
xor
insb
insb
inc
cmpsl
rcll
call
mov
push
dec
jbe
push
mov
jo
cmpsb
lds
push
or
mov
adc
pop
push
jp
jnp
in
mov
cmp
inc
and
dec
sub
ds
popf
rcrb
cli
cmp
cmp
cld
cmp
addr16
pop
push
xchg
cwtl
arpl
in
cmpsb
gs
sbb
sbb
addr16
ret
cmpsb
repnz
xchg
mov
jo
ret
bound
mov
cmp
pop
or
cld
or
sub
push
and
jb
je
out
pop
mov
jne
jecxz
push
insb
or
test
fistl
sub
xor
popf
add
mov
addr16
jo
popf
cmp
pop
jo
dec
jnp
out
dec
inc
mov
outsl
inc
sub
xchg
jp
or
sub
pushf
pop
jle
out
lods
lods
out
adc
mov
sub
sub
xlat
repnz
call
jl
or
fwait
lret
pop
popa
xchg
mov
test
inc
jo
out
mov
cwtl
pop
dec
cmp
push
jp
xor
sub
loopne
roll
subb
daa
andb
push
mov
sub
pop
nop
lds
fs
sub
lahf
mov
add
inc
or
push
nop
in
lahf
jnp
imul
xchg
mov
fstpt
adc
andb
or
add
es
jecxz
mov
and
cmp
adc
jmp
mov
fmull
push
xchg
push
cmp
xchg
adc
out
cli
sub
imul
xlat
pop
push
lds
add
mov
pop
push
push
insb
cmp
cmpsb
mov
mov
push
dec
jne
fcomps
add
or
cmpsl
cmpsb
xchg
adc
inc
cmpsb
es
fwait
insb
ja
nop
xchg
repz
icebp
mov
adc
mov
shll
cmp
jg
imul
sub
lahf
adc
std
mov
mov
cmp
js
pop
ret
pop
inc
adc
mov
adcb
mov
mov
out
insb
and
dec
mov
stos
lock
fnstenv
shlb
enter
ret
mov
jo
aam
std
push
mov
aaa
mov
inc
mov
fsubrl
push
std
jge
mov
dec
jno
pop
idivl
and
mov
loop
add
aas
hlt
jno
mov
notl
stos
jl
cmp
or
inc
into
mov
sub
jecxz
cmp
sub
std
scas
cmpsl
roll
mov
cmp
pop
rcll
xchg
scas
shrb
mov
push
das
xchg
aad
and
dec
sbb
cs
push
dec
cmp
out
mov
iret
fwait
lcall
fdivrl
push
jns
movsb
xor
push
dec
xchg
loopne
insl
shrl
pushf
out
cmp
pop
jbe
lcall
add
xchg
or
sar
inc
stos
fwait
ja
addr16
xchg
cmp
xchg
inc
ret
and
mov
push
shll
push
sahf
add
sub
imul
imul
pop
push
lea
test
frstor
cmp
and
add
xor
push
cmpsb
mov
inc
sbb
cmp
daa
inc
xchg
sub
xchg
cmpsb
pop
adc
lret
jge
inc
cmp
dec
ds
pusha
pop
xor
rorb
pop
out
fimull
lret
ds
pop
fsubrp
aaa
and
xor
dec
or
sbb
mov
iret
popf
in
sbb
sbb
push
testb
es
push
hlt
enter
xchg
in
mov
dec
enter
push
xor
sar
shll
xor
pop
pop
dec
sarb
mov
pop
and
mov
jl
pop
mov
xchg
sub
insb
stc
aad
or
sbb
dec
outsl
jo
or
ss
jecxz,pt
inc
fbstp
ds
jb
push
dec
shll
dec
pcmpeqw
pop
inc
mov
cmc
jmp
jnp
cli
mov
inc
or
jbe
inc
push
in
add
lahf
out
xor
ficomps
stos
popa
mov
cli
in
sbb
pushf
nop
xor
and
pusha
repnz
das
xor
popf
jl
jbe
pusha
sbbb
xor
repz
jge
xchg
imul
testl
negb
mov
sbb
push
jmp
in
shlb
sbb
rclb
add
imul
mov
cmp
fsts
popa
or
imul
addr16
jmp
es
xchg
jne
jecxz
outsl
int3
ja
xchg
jle
pop
pop
lock
cmpl
dec
imul
push
cmp
xchg
icebp
dec
mov
sbb
or
lahf
push
sub
xchg
mov
imul
inc
shlb
jle
loope
xorb
push
pop
push
js
xor
es
gs
clc
test
mov
cltd
lret
mov
in
fwait
jno
popf
pop
adc
mov
dec
xor
sub
jge
push
xor
aaa
out
xchg
pop
insb
mov
loop
ficomps
xor
cld
push
dec
mov
aam
lret
cmp
push
call
sub
test
lds
inc
xor
pop
mov
icebp
daa
push
ret
lock
nop
loope
and
cmc
fsubrs
loopne
jb
add
mov
fdivrs
sub
adc
add
cmpsb
fisubrl
icebp
ja
cmpsb
inc
xchg
sbb
inc
xchg
push
push
and
and
push
ror
repz
scas
in
jg
mov
cmpsl
adc
aaa
fwait
xchg
mov
add
inc
xchg
sbb
pop
jns
mov
cmp
ja
xchg
lahf
shrl
mov
push
xor
scas
mov
addr16
cmpsb
jae
scas
sub
int
adc
sbb
pop
fcomps
jns
insb
rclb
cmp
das
jno
pop
test
bound
push
xor
rclb
sbb
mov
inc
jl
mov
xchg
push
mov
sub
icebp
out
ret
mov
fnstenv
sbb
add
mov
hlt
ja
lcall
mov
and
imul
insl
jb
fsubs
mov
xchg
cwtl
rolb
call
nop
mov
adc
dec
out
jno
push
inc
inc
and
inc
sbb
aad
adc
outsb
cmc
pop
cwtl
nop
orb
gs
loop
jnp
int
mov
inc
fisttps
jae
jb
xchg
push
mov
xchg
pop
xchg
mov
jp
das
and
cmp
push
inc
and
and
cmp
lret
sbb
xor
les
or
xchg
imul
xchg
cli
mov
gs
in
mov
mov
mov
cmp
leave
sbb
mov
sbb
push
out
lcall
jmp
es
stos
scas
pop
popa
xchg
mov
mov
outsl
mov
pop
mov
adc
fsubrp
bound
xor
sub
xchg
mov
ljmp
pop
decb
xchg
add
xor
add
outsb
jbe
and
push
mov
push
fwait
push
inc
pop
push
inc
fs
mov
push
jl
jb
jmp
mov
push
jbe
and
cmp
iret
and
jb
mov
cs
cmc
movsb
int3
pushf
hlt
xor
pop
mov
sub
js
xchg
jo
add
xchg
sub
aas
movsb
movsl
jle
mov
mov
lods
test
mov
inc
clc
and
out
push
test
mov
outsb
fidivl
push
sti
add
push
test
pop
or
inc
or
mov
iret
aam
jp
mov
mov
pop
cwtl
into
cmpsl
mov
xchg
rcr
fs
js
xor
inc
sub
cltd
popf
push
inc
cmpl
stos
jg
sub
andl
lcall
ss
fsubrl
ss
xchg
push
dec
rcr
popf
adc
push
mov
inc
cwtl
xchg
out
cli
cltd
imul
out
cmp
cmp
and
movsb
and
mov
stos
shlb
push
jp
jne
sbb
pop
cmp
mov
nop
scas
aad
std
test
xchg
mov
jecxz
movsb
ffree
mov
push
mov
mov
add
lahf
mov
fs
or
cmc
fidivrl
xorb
push
push
inc
stos
lods
shrb
mov
or
fstpl
push
mov
std
stos
iret
rclb
xchg
xor
popa
push
mov
icebp
xor
das
lret
push
lahf
dec
jnp
jp
pop
dec
mov
es
insl
ljmp
mov
in
jae
push
jl
aam
loope
call
inc
das
out
sub
arpl
ds
jne
and
outsl
push
ljmp
add
pop
test
add
xor
xor
xor
mov
addl
xchg
pop
sbb
cli
inc
adcb
jo
and
pop
pusha
push
push
push
hlt
cmp
insl
mov
add
cmp
outsb
push
push
in
push
sub
sbb
inc
push
sbb
stos
daa
dec
push
pop
push
and
pop
lret
mov
mov
adc
sub
sarl
jle
ds
insl
pop
ret
in
sbb
pop
cmp
shll
insl
inc
sbb
rcll
pop
jns
inc
in
lods
scas
pushw
cmc
add
fs
push
mov
jge
inc
aaa
cmp
cmpsl
movsl
lcall
fisttpll
lea
dec
call
stos
jno
sub
pop
idivl
cmp
aad
das
push
std
dec
mov
aam
fdivl
lods
push
loope
mov
cltd
jo
imul
mov
lcall
shrb
cmp
stos
les
add
sti
xchg
adc
pusha
scas
cld
sub
pop
xor
stos
popa
cmp
in
rorl
cmp
sarl
or
sbb
and
mov
or
fs
mov
nop
or
addr16
inc
mov
inc
ds
push
mov
cmp
cltd
mov
sub
dec
scas
fsts
les
insb
mov
test
adc
shll
test
bound
dec
popf
adc
arpl
or
repnz
pop
popf
inc
stos
ja
mov
call
cli
stos
stc
push
cwtl
movl
xchg
lock
rcll
adc
into
xchg
cmp
mov
ss
bnd
sub
cmp
pop
fucomip
cmpsb
test
inc
xchg
inc
in
fsubl
outsl
out
call
cmc
ja
stc
adc
xchg
add
adc
xor
sbb
xor
mov
sbbl
xchg
pop
sbb
aaa
pusha
pop
sti
and
icebp
dec
inc
or
pushf
pop
int
mov
lcall
and
mov
pusha
lods
sub
sub
lods
shlb
inc
sbb
aas
cmpsb
inc
ret
inc
imul
cmpsb
adc
cmpsl
hlt
test
cmpsl
add
sbb
imul
add
sbb
lock
inc
xchg
inc
cmc
adc
lods
ds
lcall
dec
xor
mov
add
jo
ds
pop
cmp
lods
pop
push
rolb
dec
jns
jnp
iret
xchg
cmpsl
fbld
mov
push
cs
cld
push
scas
shlb
push
mov
jg
cli
cmpsl
pop
pop
ljmp
fdivl
push
divl
xchg
aam
addr16
bound
or
aaa
inc
in
push
mov
cs
je
xor
xor
push
pop
stc
loopne
shlb
cmpsb
cmpsb
in
sti
xlat
loopne
negb
fwait
push
jg
add
aam
inc
xchg
cli
push
sbb
mov
insb
add
xor
jp
fistpll
xor
movsl
xchg
jnp
cwtl
add
insb
add
int3
pop
mov
xor
nop
mov
cmp
pusha
sbb
fldenv
test
leave
mov
adc
repnz
outsl
pop
int3
sbb
and
rcr
add
adc
popa
pop
lock
dec
std
jae
test
in
outsb
cmc
lds
pop
aam
fiaddl
mov
push
and
add
mov
ja
jmp
ds
xor
insl
mov
test
jno
decl
pop
sub
cmp
data16
lods
ja
into
mov
cs
test
xchg
mov
dec
push
mov
stos
shlb
or
pusha
jmp
das
popa
daa
cmp
mov
xor
cli
sub
mov
mov
mov
cmpb
sub
cli
dec
jne
cmp
mov
mov
enter
cltd
add
sti
add
pusha
loopne
mov
push
sub
xor
in
outsl
cmp
jns
mov
scas
cmp
sub
mov
sub
dec
mov
mov
ficoms
cltd
push
push
adc
xchg
sub
mov
xor
shll
aad
mov
inc
in
pop
ds
pushl
add
std
aas
cwtl
outsb
inc
inc
pusha
int
push
inc
add
cmpsl
into
pop
xchg
mov
movsb
pop
push
push
mov
fwait
mov
mov
inc
test
mov
xchg
adc
push
sub
popf
push
jns
push
repz
xchg
psubd
popf
lea
and
lret
aaa
add
lock
pop
mov
negl
adc
cmp
push
in
out
fbstp
inc
stc
popf
or
notl
and
movsb
sbb
jecxz
mov
cmc
adc
insb
pop
pop
xor
mov
push
lods
push
das
loope
iret
jnp
dec
sub
adc
jg
mov
addr16
xorb
pop
lods
and
aaa
or
sub
xor
bound
inc
sub
dec
stos
mov
dec
in
ret
in
test
and
aas
mov
rorl
or
cmc
ret
out
adc
sbb
iret
xor
mov
js,pt
in
push
fisubl
xchg
repnz
loopne
mov
sub
sbb
pushf
xchg
hlt
cmp
dec
pop
add
sbb
dec
sub
inc
pop
inc
pop
push
ja
xchg
aaa
out
in
cmp
js
push
outsl
inc
xchg
xchg
push
outsl
in
jecxz
push
test
clc
test
lret
lea
int3
xor
daa
jnp
mov
daa
dec
insl
aas
call
mov
movsl
lods
jae
dec
sub
xchg
inc
aas
inc
jle
hlt
push
popf
movsl
je
stc
pop
dec
xchg
lods
mov
jno
mov
mov
xchg
popa
mov
push
xchg
adc
jne
dec
inc
imul
cmp
cmp
nop
into
inc
xor
inc
js
cmp
fs
imul
adc
ja
mov
dec
mov
addr16
sti
add
test
lock
shrl
loop
xchg
stos
loope
xchg
xor
lods
mov
add
inc
fwait
jo
jg
sub
cs
loopne
bound
test
in
cltd
inc
test
xchg
daa
js
pushf
in
jns
or
ja
hlt
fdiv
sbb
xor
jge,pn
pop
pop
loopne
aas
mov
adc
bound
pop
mov
fcompl
jle
pop
in
sub
fwait
insl
or
xchg
cmp
xor
jmp
aaa
mov
pop
mov
int3
pop
das
out
inc
push
or
fwait
inc
incl
shr
leave
and
repz
jp
mov
mov
ret
sub
pop
pop
adc
mov
bnd
and
cmp
mov
adc
dec
push
xor
pop
pop
cs
and
sub
mov
mov
lret
test
testb
mov
xchg
arpl
and
cmp
and
push
cli
lahf
jae
cmp
pop
je
push
and
cmpsl
mov
and
inc
and
std
and
sub
mov
and
pop
dec
in
int3
push
mov
sub
push
popa
loop
test
sub
shl
mov
pop
sbbb
cmp
push
imul
push
lods
movsl
mov
or
push
xchg
loope
cmp
or
sub
mov
dec
inc
inc
loopne
mov
sbb
cmp
imul
add
test
les
mov
xchg
cmp
sbb
dec
and
and
jg
mov
jle
fsubs
push
cltd
mov
xlat
add
mov
arpl
xchg
pop
stc
xor
jmp
bound
sub
hlt
cli
je
inc
sub
sti
cmp
dec
nop
jg
sub
imul
int3
subl
cli
add
pushf
sbb
push
pop
add
stos
mov
int
loope
cltd
jne
pop
push
aaa
fld1
push
std
mov
push
mov
scas
xor
into
scas
enter
and
test
in
jp
ja
dec
aas
dec
stos
test
push
into
cmp
lret
mov
dec
and
cmp
xchg
dec
pop
loop
loope
data16
popa
jne
fldt
jecxz
adc
in
call
pop
ljmp
and
data16
jo
dec
pop
test
clc
jle
mov
push
and
xor
movsl
pop
out
sbbb
push
inc
jl
cld
int
and
movsb
sbb
adc
lret
fiadds
clc
ds
ficomps
aas
orl
cmpb
cmp
sahf
lahf
js
xor
je
pop
mov
pushf
and
xorb
imul
lret
inc
test
push
fs
shlb
add
xchg
or
mov
inc
and
repnz
mov
inc
jns
mov
daa
test
cmp
icebp
sti
mov
pop
testl
push
cmpsl
daa
adc
daa
mov
mov
jl
ds
cli
add
xchg
pop
ja
sub
mov
mov
popa
stos
cmp
aaa
mov
jno
dec
popa
inc
clc
push
push
sbb
push
pop
les
xor
sahf
rolb
sti
mov
addr16
mov
insb
ret
mov
adc
mov
mov
aad
mov
test
mov
dec
adc
cld
bound
outsl
jae
data16
out
enter
fmul
les
aam
sbb
jno
or
fimuls
lret
loope
aam
sub
mov
inc
jle
lcall
and
aaa
or
jg
adcb
fiaddl
stos
ret
in
int3
jae
adc
push
es
xor
dec
arpl
mov
inc
mov
fildl
nop
pop
xchg
into
fs
ja
and
dec
fucom
lods
lahf
inc
adc
cwtl
imul
sub
xchg
enter
mov
icebp
mov
pop
addb
sti
adc
xor
cmp
xchg
leave
data16
negb
xchg
inc
mov
lret
sar
mov
movsl
inc
je
andl
mov
insl
test
cld
sbb
ds
push
jg
std
mov
inc
js
xor
rcrl
mov
std
fdivr
jl
dec
out
push
push
jnp
add
fwait
mov
add
jae
inc
or
mov
xchg
mov
inc
push
jnp
lret
stos
insb
mov
mov
into
dec
lcall
imulb
andl
jbe
inc
sbbl
popf
mov
out
dec
outsb
cmc
sub
jo
cmpsl
push
xchg
mov
jo
add
or
bound
pop
xchg
fiadds
jno
gs
mov
push
add
inc
popf
in
mov
jbe
sbb
xchg
mov
jb
cmp
sbb
mov
icebp
sbb
popa
push
and
or
mov
mov
jle
fnsave
cltd
add
mov
pop
lds
scas
decb
mov
mov
lcall
orl
out
cld
sti
dec
fcoml
or
cli
les
ret
add
stos
lods
push
or
in
out
add
fdivl
insl
mov
xor
and
cmp
or
ss
push
sub
cmpsb
or
push
lcall
mov
int
xchg
dec
outsl
add
push
es
xlat
adcl
xor
shrl
inc
sbbb
pop
data16
cli
ficoml
and
cs
xchg
pop
adc
rcrl
aaa
xchg
mov
sbb
sbb
test
mov
jge
arpl
movsl
sub
shll
pusha
mov
mov
mov
fldcw
shlb
sti
pop
popf
cli
xchg
mov
fldt
xchg
jb
xchg
out
imul
cld
add
jb
stos
mov
inc
or
gs
push
add
sub
clc
xchg
push
and
aam
cmpsb
outsl
aas
dec
add
and
out
xor
ret
faddl
xor
lret
insl
arpl
insb
repz
lahf
mov
jmp
xchg
push
jl
out
pop
and
cmp
icebp
sub
lret
cmp
or
xor
ljmp
or
ljmp
sub
int3
jge
and
stos
test
call
int3
adc
xchg
lods
ljmp
scas
mov
xchg
sub
sub
dec
cmp
dec
lods
mov
loopne
mov
cltd
dec
mov
adc
fistpll
imul
jb
sbb
rorl
cmpl
ja
ds
cmp
bound
fdivrs
pop
je
inc
lock
or
jp
cmp
ljmp
pop
clc
dec
sbb
push
push
or
lahf
test
cwtl
sbb
repz
aad
shrb
and
sub
ja
pop
pop
push
mov
leave
and
push
stos
jp
lock
fnstenv
jge
fwait
sbb
inc
adc
add
jno
push
stos
lods
push
std
jge
dec
sub
jge
std
pusha
sahf
mov
ret
jne
dec
xchg
jmp
adc
popa
jle
mov
and
lahf
loope
jae
mov
or
stos
jmp
push
jecxz
add
movsb
and
andl
das
sub
lods
inc
jl
jle
imul
push
fcoml
gs
cmp
in
sub
add
enter
jle
imul
imulb
jle
lods
inc
mov
mov
outsl
inc
adc
push
xchg
and
int3
mov
cmpsl
add
outsl
je
xchg
dec
xchg
ljmp
xchg
mov
jns
jmp
xchg
dec
filds
clc
test
mov
repz
fldl
mov
call
popf
in
pop
add
mov
push
jmp
jl
xlat
inc
mov
repz
imul
in
push
nop
jmp
xlat
sub
jns
test
repnz
xchg
xchg
into
stc
xor
fnstsw
pop
sub
scas
fcmovb
add
in
pop
dec
sbb
test
outsb
xchg
pop
adc
add
fsubrp
pop
mov
ss
outsb
xchg
xchg
fiadds
call
popa
xor
enter
inc
and
mov
rorl
in
xor
push
pop
int
sub
arpl
loope
xor
lret
inc
xchg
xchg
fisubrs
pop
and
inc
mov
jno
in
inc
and
jnp
insb
loope
fisttpl
mov
out
cmp
inc
adc
mov
lods
icebp
cmp
cmpsl
xor
out
leave
mov
pop
cli
mov
or
imul
pop
cmp
dec
push
rorb
shl
bswap
jge
sahf
outsl
mov
es
cmpsl
adc
add
push
mov
test
ja
push
aas
inc
les
mov
push
and
push
shll
cmpsl
jae
mov
lock
xor
mov
and
pop
ret
outsl
xor
cwtl
xchg
mov
sbb
sub
cmp
stos
scas
mov
sarl
sahf
int3
imul
jge
sbb
scas
stos
sub
sbb
roll
adc
or
cld
dec
lods
movsb
adc
mov
push
or
fdivr
and
movsb
add
pmaxsw
das
repnz
or
and
mov
sub
fiaddl
add
inc
adc
push
mov
mov
mov
dec
dec
adcb
push
inc
fimuls
cltd
adc
imul
andb
iret
jp
lea
mov
sub
jae
in
cmp
push
shrl
inc
mov
pusha
fsubrl
sbb
dec
push
xorb
mov
inc
cmpsb
lea
sub
outsl
adc
clc
sbb
rcrl
jge
sbb
insl
rcll
jmp
pop
push
pop
cmp
inc
or
xor
inc
cld
sarb
adc
add
jae
aaa
push
aam
shll
adc
sbb
dec
stos
mov
mov
pop
jbe
dec
add
mov
mov
push
inc
sub
outsl
inc
pop
adc
xor
jl
enter
jge
out
pop
cmp
cs
cmpsl
mov
cmp
mov
fisubrs
inc
repz
cwtl
lahf
clc
inc
pop
rorl
scas
scas
andb
aas
push
mov
lret
jns
mov
fidivs
sub
pop
fidivl
inc
fbstp
lods
xor
lods
add
pop
cmp
push
nop
ja
mov
xor
mov
inc
xchg
in
hlt
daa
sahf
mov
push
test
jp
ja
cmp
cmp
rclb
or
push
add
js
sub
cmp
inc
dec
scas
insb
push
rclb
jg
fbld
aaa
and
outsb
add
xor
mov
push
gs
aam
jb
cmp
cmpl
sbb
mov
dec
out
andl
pop
ret
jnp
inc
test
inc
divl
adc
inc
fwait
iret
push
pop
push
adc
jp
jg
or
jge
push
cmp
push
in
movq
fmull
adc
shl
cmpsb
jecxz
dec
xchg
push
ljmp
push
in
pop
push
call
scas
and
arpl
and
push
lods
and
popf
pop
or
adc
dec
test
and
sub
scas
test
jnp
call
and
push
stos
xor
fsubl
call
movsl
cmpb
ror
inc
push
cmp
jo
out
andl
jnp
and
movsl
push
rorl
jle
movsb
push
pop
stos
push
mov
cmp
or
mov
jmp
jns
frndint
pop
mov
dec
ficoms
aad
data16
stos
hlt
cmc
pop
in
ret
push
mov
cmp
or
jp
push
or
push
mov
mov
int
outsb
or
jae
addr16
cmp
mov
sub
jle
pop
cmp
mov
jecxz
lea
sub
cmp
hlt
adc
cmpsl
xchg
cmp
sbb
push
jmp
sarb
push
mov
je
pusha
sar
pop
jns
inc
mov
cmp
push
imulb
sub
repz
cmpsb
jb
outsl
pusha
adc
int
pop
mov
inc
ret
cli
ss
test
data16
lods
and
lods
mov
arpl
popl
sub
repnz
push
repz
add
pop
inc
aas
add
insb
or
cmpsb
cs
shll
ret
divb
cmc
mov
aas
sbb
sub
loopne
das
loopne
pop
pop
imul
cmovs
adc
out
push
jmp
inc
lods
insb
sub
sti
mov
mov
jmp
mov
cmpsl
mov
jl
out
out
stos
jl
out
adc
xchg
aas
imul
aaa
jne
cmp
aas
fiaddl
push
cmp
push
xchg
xchg
lods
out
add
cli
xchg
aam
or
enter
pop
test
les
out
test
or
push
sub
mov
push
hlt
ss
mov
xor
xchg
loopne
rcll
jne
fs
cli
lds
cmp
shl
js
inc
pop
mov
repnz
sub
arpl
pusha
xchg
xchg
aad
gs
sbb
and
xchg
pop
jg
loopw
inc
xchg
cmp
test
sbb
adc
sub
rcrl
dec
mov
outsb
outsb
inc
jns
inc
mov
fwait
add
loop
bound
dec
sbb
movsb
mov
insb
xor
hlt
lcall
jno
test
pop
dec
push
stc
jns
lret
jp
fidivrs
out
out
push
aad
mov
test
enter
push
mov
cmc
xor
ja
sub
and
jne
jg
das
jl
jno
xchg
aaa
inc
add
pop
insb
or
adc
mov
sbb
cmp
or
loope
in
jmp
ljmp
xor
addr16
ja
inc
jnp
scas
scas
push
xchg
nop
test
ret
adc
push
lret
inc
lcall
shlb
stos
div
and
mov
aas
and
lahf
js
cli
push
cmp
arpl
loopne
insl
shrb
push
jo
movsb
roll
cld
mov
mov
mov
mov
push
out
hlt
mov
jle
jge
xchg
cmp
push
add
mov
dec
jp
sub
mov
xchg
les
fmull
stos
jae
scas
fsubl
mov
sbb
clc
loope,pn
jae
insb
scas
push
cmc
sbb
jmp
dec
subl
rorb
lcall
shll
or
je
in
popa
pop
xchg
lods
dec
xor
and
jns
xor
mov
mov
pop
insb
js
and
xchg
fisttpll
scas
test
inc
cmp
fidivrl
aaa
jno
aas
bound
xchg
js,pt
push
sahf
fcompl
ds
movsb
outsb
int
sbb
insl
dec
mov
mov
jl
lret
xor
dec
cmp
mov
adc
or
pop
mov
out
bound
jne
mov
insb
ds
cmp
cmp
push
add
or
xchg
insl
inc
push
mov
mov
test
mov
fcomps
pop
dec
lods
mov
adc
xor
xchg
mov
ja
cwtl
jbe
andl
xor
or
xor
xchg
loopne
arpl
jbe
testb
dec
test
or
ljmp
pop
pop
jp
adc
add
mov
ds
lcall
scas
rclb
std
xchg
pop
fildl
jg
xchg
in
cmpsb
scas
pop
xor
inc
aam
jmp
inc
push
icebp
push
mov
mov
pop
pusha
pop
bound
jecxz
push
mov
fsubl
jns
imul
and
lods
test
dec
dec
je
movsb
orl
add
inc
in
lret
int
pushf
sti
push
stos
arpl
adc
cltd
sarb
pushf
clc
pop
lcall
or
subb
ffree
das
xor
pop
inc
mov
aam
aaa
cmpsb
hlt
add
sbb
xor
xchg
pop
inc
inc
shll
aaa
lahf
and
arpl
push
imul
test
mov
pop
inc
aaa
push
cmpb
push
out
test
lea
sub
dec
push
sarl
push
push
stos
jb
dec
push
and
mov
push
push
xor
sub
popa
mov
imul
pushf
in
cmpl
out
xchg
fldt
adc
test
bound
or
xchg
sub
test
or
mov
fdivs
add
movsl
mov
and
sbb
pop
add
daa
repnz
sub
pop
push
mov
add
cmc
ret
aas
out
sti
rcrl
cmpsl
dec
push
xor
fsts
xchg
add
fs
insb
jg
fstpl
divl
shll
jp
inc
orb
pop
mov
repnz
test
mov
inc
shlb
sahf
dec
xor
xor
pop
xorl
xchg
mov
sbb
pop
call
add
push
dec
test
insb
mov
scas
sub
lcall
or
lock
movsb
xchg
fwait
dec
dec
dec
rcrb
mov
popf
push
or
mov
push
inc
pusha
in
inc
cltd
iret
jnp
push
push
xor
inc
dec
mov
add
mov
mov
sbb
mov
faddp
dec
out
ja
xchg
pusha
les
or
mov
call
jmp
adc
negb
mov
or
xor
xchg
dec
lcall
dec
dec
jecxz
xor
insb
roll
enter
inc
in
adc
clc
pop
pop
and
and
clc
es
cld
js
sahf
lock
pop
jb
fildl
cmp
cmp
loope
and
ss
rcr
mov
xchg
shr
out
adc
fsubr
mov
imul
aaa
pop
jne
mov
jg
jmp
loope
jp
inc
gs
dec
loope
sbb
xor
inc
out
fistpll
mov
and
fbld
stos
mul
push
and
push
xor
mov
in
stos
xor
push
inc
xchg
and
or
xchg
jne
sub
das
mov
cmpsl
push
inc
cli
mov
push
and
imul
lods
pop
and
into
xor
rclb
mov
mov
mov
insl
into
xchg
or
rdmsr
sarb
movsb
sub
das
cmp
in
xor
push
loop
out
mov
loopne
imul
cs
jo
xchg
and
adc
sub
das
dec
in
movb
dec
mov
jle
mov
aas
cmp
mov
pop
lahf
jno
and
mov
jl
fs
or
scas
sbb
cmp
mov
or
mov
lock
cmp
hlt
pop
test
scas
mov
sub
mov
push
addr16
pop
enter
or
aad
enter
out
inc
or
out
sub
repnz
push
loop
fdivl
lods
adc
dec
and
shrl
push
or
shll
jg
xlat
xchg
or
mov
sbb
adc
cmp
sti
cmpl
xchg
push
inc
addb
push
mov
add
mov
mov
inc
movsb
mov
dec
rol
xchg
and
pushf
ja
add
or
cmc
xor
and
mov
dec
add
les
rcrl
xchg
call
fdivs
gs
sbb
mov
scas
xchg
sbb
aad
clc
jmp
insb
es
add
loopne
mov
lods
dec
mov
pop
mov
popf
in
mov
ret
jb
adc
test
push
popa
popf
or
dec
or
test
out
cwtl
xchg
jae
sbb
jae
iret
sti
mov
pop
mov
pop
jne
movsl
cwtl
sbb
push
imul
inc
lods
sbb
arpl
repnz
ljmp
xor
test
pop
jmp
movsb
sub
sub
pushl
lock
roll
pop
and
or
push
rcrl
cmpsb
test
jno
shll
outsl
inc
lret
cli
mov
or
pop
imul
mov
out
addr16
adc
daa
imul
enter
aas
fstl
and
xor
fsubs
inc
sbb
cmp
shrl
call
push
loop
cltd
lods
shl
sbb
cwtl
stc
aam
inc
pop
lcall
aam
xchg
xchg
icebp
cmp
adc
jl
pop
xchg
ljmp
ret
push
xchg
testl
xor
nop
test
lds
mov
mov
dec
fnsave
es
sub
sahf
and
gs
push
insb
fistps
popa
jp
loop
push
inc
call
inc
lds
and
inc
ss
sbb
lret
adc
pop
ds
push
and
in
out
add
xor
jle
jg
cmp
sbb
out
add
test
mov
pop
popa
fldcw
roll
mov
cld
sub
out
cltd
pop
test
js
sub
in
sbb
jmp
stos
dec
in
mov
fs
ss
fwait
sahf
stos
clc
dec
sub
addb
scas
fwait
shlb
sbb
and
cmp
mov
xor
sbb
push
test
sahf
cmpsl
aam
adc
enter
popa
inc
push
inc
xchg
roll
filds
lds
iret
cmp
stos
adc
in
cltd
out
movsl
mov
scas
sub
dec
push
pop
inc
stos
popa
repz
adc
push
adc
or
push
adc
outsl
inc
lret
dec
icebp
test
test
xchg
xorl
cwtl
jg
inc
push
pop
ror
subb
loop
and
gs
dec
movsl
xchg
pushf
adc
jp
or
mov
in
cmpsb
dec
aas
adc
xorl
dec
fldl
roll
mov
sarb
orl
ja
xchg
iret
and
hlt
pop
stc
popf
or
inc
int
jb
inc
lods
arpl
shrl
aaa
push
sub
inc
scas
rolb
mov
lods
aad
xchg
negl
mov
sub
cmp
xchg
jl
pop
push
mov
pop
stos
aad
adc
cld
mov
imul
ret
stc
les
dec
dec
mov
jb
ds
mov
orl
icebp
cwtl
in
inc
sbb
inc
and
xorl
rcr
aam
dec
inc
jnp
xor
jg
lret
xorb
and
xchg
or
setle
insl
cs
dec
mov
mov
dec
and
stc
rclb
mov
pushf
imul
inc
push
inc
int3
outsl
int3
mov
shlw
dec
sbb
jo
mov
cmp
inc
jae
movsb
jecxz
push
or
fs
repnz
fdivrs
ret
mov
and
pop
cmp
jge
and
divb
fildl
add
out
xchg
cmc
stos
push
cld
inc
push
jg
mov
lcall
adc
outsb
jb
and
in
mov
jae
or
cmp
and
cmp
adc
dec
ds
lahf
fs
jb
xchg
xchg
and
push
ret
test
cwtl
jg
sbb
push
es
sub
mov
pushf
inc
push
mov
daa
cwtl
mov
mov
bound
dec
jle
andb
xchg
push
sub
scas
xchg
mov
mov
mov
cmp
mov
pop
je
insl
outsb
popf
pop
inc
aas
jecxz
or
push
pop
imul
fisubl
ret
xchg
rorl
faddl
movsl
pop
xchg
push
das
testb
aam
cmp
dec
sti
mov
out
std
scas
jae
mov
inc
jb
bound
ret
push
xchg
insl
dec
movsl
jae
das
jnp
fsubrp
imul
push
push
inc
cmp
xor
mov
ret
pop
dec
dec
sub
xchg
daa
cli
aad
push
mov
push
aaa
lret
leave
or
insl
mov
mov
dec
dec
insb
sub
mov
jno
add
mov
sub
jg
mov
jbe
inc
mov
sub
sub
cwtl
mov
jb
jns
insl
mov
sahf
movsl
jns
idivb
mov
sub
int3
sub
popf
rcrl
push
mull
mov
cmp
mov
add
inc
push
mov
out
subb
aad
mov
pop
hlt
cmpsl
outsl
pop
les
in
add
sahf
jnp
mov
dec
inc
push
rcrb
test
mov
pusha
pop
les
inc
mov
lcall
je
mov
mov
stos
xor
jbe
xor
add
shlb
sub
fldl
popa
pushf
cmpsb
aas
inc
inc
clc
fs
outsl
int
or
lret
cmp
fsub
outsl
data16
aas
sub
push
xor
clc
push
insb
outsb
add
pop
fstpl
push
int3
lods
push
enter
and
repnz
push
ja
outsl
repnz
mov
arpl
mov
xor
push
inc
jg
sbb
xor
dec
out
add
aad
jbe
xor
repnz
cs
pusha
mov
bnd
sub
pop
cltd
push
xor
mov
movsb
mov
adc
ret
popa
xchg
mov
mov
and
lea
mov
repnz
or
cmp
in
sub
into
and
pop
and
test
push
inc
popa
outsl
andb
lds
mov
inc
push
fmull
and
fidivl
ret
and
jge
mov
mov
sub
mov
pop
lret
mov
and
mov
dec
push
dec
aas
adc
push
cmp
inc
xchg
clc
adc
loope
div
sub
jns
ret
andb
and
cmpsb
test
outsl
test
pop
push
rcr
dec
mov
inc
repz
inc
mov
or
stos
sahf
xor
cwtl
mov
sbb
or
or
inc
mov
lds
pop
cmp
cld
fsubl
inc
dec
push
sbb
mov
inc
cli
xor
sub
insb
cmpl
loope
outsl
icebp
shlb
xchg
inc
and
jl
add
gs
cmp
jecxz
xchg
mov
jg
pop
mov
mov
jb
or
push
push
jbe
xor
adc
mov
mov
xor
jle
dec
jge
or
cmp
mov
cmpsl
mov
loop
mov
mov
cmp
popf
outsb
ds
sub
pop
icebp
and
push
pop
lret
push
pop
nop
dec
push
mov
push
push
iret
mov
bound
fbld
cmp
movsb
stos
sbb
mov
xchg
adc
sub
cs
aam
sarl
cmp
mov
cmp
push
xchg
rcl
fxch
xchg
repnz
jecxz
leave
ja
lahf
inc
js
adc
sti
ljmp
pop
scas
cmp
jo
js
aaa
push
fisubl
and
inc
jmp
fistl
ret
dec
mov
mov
sbb
mov
inc
shll
in
data16
out
xchg
dec
lea
sti
loope
scas
pop
shrl
push
mov
mov
icebp
mov
lcall
ficompl
xor
pop
in
into
fsincos
mov
sbb
cmc
outsl
int
lods
leave
dec
aam
ss
nop
xor
mov
ds
mov
mov
nop
jbe
xchg
xor
mov
xchg
jbe
clc
mov
mov
fidivs
aas
jp
push
dec
adc
push
sahf
xlat
bound
js
stos
ret
mov
push
out
push
into
ret
in
adc
ja
adc
xchg
scas
hlt
loope
data16
dec
pop
jg
xchg
mov
aas
ret
pop
call
int
xchg
pushf
cmp
stos
aad
inc
jb
sub
mov
sbb
mov
inc
mov
jl
jmp
pop
fscale
push
mov
pop
nop
mov
inc
loope
sahf
mov
ljmp
test
lret
roll
mov
mov
aas
adc
mov
sbb
loope
jg
add
jbe
aaa
pop
daa
ljmp
sub
pop
roll
xchg
push
repz
sahf
bound
pop
loop
popf
inc
aad
pushf
sub
and
adc
xchg
fidivrl
cwtl
pop
and
xchg
pop
in
pushf
cmp
sbb
sub
jmp
jno
adcl
dec
sahf
daa
stos
mov
mov
sti
in
insl
pop
sub
incb
es
mov
movsl
leave
cmpl
cmpsb
shlb
pop
inc
out
out
pop
jg
pop
andb
test
shl
ljmp
ret
and
and
mov
jp
mov
das
pop
aad
xorb
lds
fiadds
inc
pop
stc
enter
push
jmp
sbb
push
lret
xchg
jge
jmp
aad
test
repz
cmp
test
insb
aaa
sub
outsb
mov
sub
inc
addl
adc
push
add
pop
loopne,pn
mov
sti
sbb
adc
or
mov
pop
les
es
aam
adc
test
dec
sbb
inc
ret
lea
push
pop
or
dec
insl
into
loopne
stc
movsl
cmpsl
xor
into
push
and
jmp
dec
mov
xlat
ja
xor
sahf
cmpsb
nop
pop
dec
call
sbb
clc
call
dec
and
loopne
cwtl
lock
stos
inc
mov
jb
jns
dec
call
mov
ja
orb
dec
je
inc
insb
pop
cs
in
and
pop
and
fdivr
mov
push
aad
insl
cmp
sub
mov
pushf
aas
inc
jle
pop
adc
pusha
es
dec
xor
push
mov
adc
adc
pop
fstcw
and
xchg
adc
xchg
sbb
add
mov
imul
data16
ds
lahf
stos
pop
jae
jne
loopne
mov
inc
push
popf
mov
mov
sbb
pop
cmp
into
cmc
cs
out
cmpsb
jb
push
xor
and
stc
xchg
pop
popf
push
mov
adcb
cwtl
daa
xchg
shll
sub
je,pn
testl
mov
jbe
cli
cmp
xchg
mov
cmp
movsb
in
js
and
stos
je
ds
lods
mov
xchg
or
push
pop
mov
cmp
or
push
mov
lods
sub
mov
sub
pop
in
mov
mov
push
jb
jbe
popa
insl
xchg
push
jg
lds
push
dec
mov
movsb
stos
pop
testb
ljmp
aad
mov
sub
nop
mov
out
xor
jb
lods
leave
into
jg
xchg
xchg
inc
inc
daa
fwait
or
test
scas
add
shll
in
insl
ds
pusha
bound
dec
lret
fxch
pop
ds
outsb
scas
fldt
fs
cld
pop
lods
jp
or
jp
movsl
cld
imul
mov
inc
jns
test
fsubrl
dec
mov
int
loop
sub
xchg
xor
or
adc
icebp
xchg
inc
dec
inc
mov
or
scas
mov
scas
loopne
dec
and
outsb
sub
mov
fs
pop
pop
popa
cmc
cmpsb
mov
sbb
jle
test
dec
or
dec
mov
test
mov
arpl
fsubrl
mov
mov
std
popa
pop
jle
xor
pop
ds
outsl
rorl
enter
pop
adcb
dec
add
stc
mov
lock
jnp
xchg
add
scas
mov
rclb
mov
sub
out
ljmp
scas
jl
adc
and
loopne
and
push
mov
call
pop
bnd
clc
xor
pusha
cmp
mov
push
mov
ds
jne
lret
cmp
outsb
imull
jbe
jl
mov
push
fs
dec
push
mov
test
and
sar
out
lods
xchg
lret
sbb
xchg
in
xchg
aad
jo
and
js
stos
jns
imul
jg
repnz
lea
movsb
jne
push
outsl
jb
fs
call
loope
inc
push
pop
in
aam
lods
pop
popl
test
xor
dec
movsb
adc
cmp
push
mov
pusha
jne
xlat
mov
xor
xchg
popf
lahf
inc
add
pop
inc
mov
int3
cwtl
clc
jg
stos
cld
sub
repnz
ljmp
push
scas
inc
xor
scas
jnp
mov
pusha
jb
push
ret
adc
add
sub
in
lods
jbe
xchg
lret
mov
loope
aaa
adc
es
xlat
xor
cmp
mov
aas
test
pop
jnp
bound
lds
subb
inc
addl
fsubr
int
pop
push
dec
push
and
adc
pusha
paddw
mov
jle
hlt
js
ds
gs
movsl
mov
xchg
sahf
outsb
inc
inc
push
out
adc
mov
or
lea
dec
js
outsl
sub
bound
clc
inc
jg
repnz
sub
mov
int
jp
cmpsl
sub
mov
sub
xor
test
mov
lock
sbb
pushf
mov
dec
push
ds
pushf
push
xor
into
inc
adc
sbb
adc
jns
xor
fadd
loopne
mov
arpl
inc
xorb
push
sti
cmp
cs
inc
and
stc
sub
sbb
inc
lcall
das
pushf
sbb
sub
or
dec
cwtl
and
xor
jle
push
pop
arpl
inc
mov
es
outsl
xor
push
add
jl
pop
jno
jecxz
xorb
mov
adc
and
or
cltd
sub
or
jb
xchg
xchg
dec
cld
inc
repz
jp
test
outsl
cli
adc
frstor
mov
rorb
inc
mov
jge
in
dec
mov
xor
leave
adc
ds
cmp
and
xor
sahf
incb
xchg
pop
imul
enter
push
xor
fcmovnbe
mov
into
popf
fsubp
shr
stc
xchg
popf
fcomps
mov
inc
and
int
add
pop
ss
popa
pusha
cmp
or
jle
mov
xor
xchg
pusha
mov
aas
js
inc
xchg
pushf
pop
xor
mov
mov
xchg
dec
test
cld
pop
js
dec
movsl
or
and
leave
cmp
aad
iret
jbe
mov
aaa
xchg
sub
cltd
xchg
scas
mov
mov
lahf
dec
push
push
insl
inc
int
sub
clc
push
sbb
jbe
int
sub
push
test
data16
pop
dec
and
sbb
jns
push
jl
push
xor
push
adc
xor
mov
push
cmpsb
sub
mov
jo
lcall
mov
sbb
loop
mov
cmc
sbbl
cmpsl
jle
push
jmp
add
nopl
addb
fisttpl
test
fstps
cmpsb
adc
fldl
jge
addl
lock
and
pushf
inc
xor
mov
xchg
into
mov
ss
add
push
lods
fstpt
pop
movsl
push
ret
ljmp
fstpt
into
dec
outsl
and
cs
xchg
xchg
cmpsb
je
in
fisubrs
mov
imul
outsb
inc
aaa
push
or
xchg
sahf
into
push
sbb
sbbl
xchg
std
push
nop
fnstenv
inc
and
mov
and
pop
lock
mov
dec
mov
push
cmp
and
sahf
xor
sub
addr16
sub
orl
jl
pop
dec
push
and
loop
inc
cltd
xor
loop
movsb
sub
iret
je
fists
mov
pop
push
repz
clc
or
sub
jo
imul
add
pop
sub
rcrl
pop
lea
dec
movsl
pop
mov
cli
dec
loopne
fbld
rcrb
adc
js
cmp
mov
and
inc
outsb
push
adc
packsswb
adc
nop
cltd
push
lds
out
xor
xor
mov
cwtl
das
dec
xlat
in
adc
cmp
jb
xchg
and
jecxz
js
sahf
lock
add
adc
pop
imul
aas
jl
movsb
lret
or
cld
arpl
mov
pushf
and
mov
insb
dec
mov
fmull
dec
lret
ja
and
pop
jno
xor
loope
and
push
popa
loope
xchg
out
movsl
sub
mov
icebp
in
push
fdivrs
test
add
pop
mov
jae
fbstp
push
dec
in
mov
mov
jmp
xor
xor
mov
push
jp
aas
repnz
ljmp
lcall
add
pushf
rclb
jne
push
leave
dec
lds
push
jbe
mov
pop
fdivs
cmpsl
and
std
pop
clc
inc
adc
das
mov
scas
push
cltd
push
dec
fnstsw
dec
jge
ljmp
or
inc
negl
fsubs
aas
repz
addl
sub
and
pop
cmp
imulb
inc
and
sub
cwtl
xor
pushf
and
push
inc
mov
xchg
jmp
out
dec
xchg
sub
in
fmuls
mov
orb
ds
cld
adc
xor
in
mov
add
das
inc
jl
neg
ds
aad
mov
jmp
jb
nop
pop
lods
aas
cmc
sbb
sub
pop
sbb
pop
and
add
sarl
push
cmp
adc
mov
stos
pop
push
in
fnsave
mov
sub
call
xor
push
pop
lcall
lret
mov
ljmp
mov
hlt
sbb
mov
je
and
inc
push
mov
push
inc
testb
adc
inc
ljmp
mov
sbb
push
arpl
ficompl
push
arpl
mov
sahf
mov
mov
lret
rclb
mov
push
push
insb
bswap
and
std
jl
mov
clc
ret
or
mov
cmp
mov
stos
push
bound
imul
xchg
add
and
sub
cmp
leave
sbb
push
mov
nop
push
mov
sarb
sub
int
adcb
scas
mov
and
jge
xor
cmp
and
stos
insl
sbb
jecxz
lock
ja
dec
push
js
loope,pt
test
gs
sub
shlb
and
out
add
xor
pop
orb
add
int
cmc
pop
sub
xchg
mov
or
cmp
stos
push
mov
addr16
or
outsb
bound
inc
lcall
add
sbb
push
xchg
dec
sahf
fs
cmpsb
inc
mov
xlat
jae
push
mov
inc
insb
mov
mov
sbb
pop
int3
pop
lcallw
jp
jp
test
insl
into
jnp
outsb
jbe
fisubl
push
fs
sbb
aaa
fnstenv
mov
les
mov
popf
jp
js
sahf
inc
pop
lret
sub
pop
lcall
ret
pop
jp
cmc
dec
mov
jnp
fsts
cmp
dec
aaa
jns
and
loop
mov
popa
out
push
insl
into
xor
pop
imul
bound
mov
pop
in
push
out
xorb
lods
aam
mov
scas
pop
std
ret
inc
addb
orl
inc
dec
hlt
push
mov
in
daa
jmp
andb
idivb
rcl
push
fstl
push
pop
xchg
dec
je
jl
cmp
arpl
add
and
adc
sub
hlt
dec
fs
sbb
cli
shrb
jmp
out
dec
int3
sti
or
sub
ds
xchg
fmull
xor
aaa
loope
inc
fstps
jbe
decb
jge
mov
push
inc
jmp
sbb
cmp
or
push
loope
iret
arpl
popa
add
lret
imul
mov
pop
and
lods
movsb
mov
add
and
pop
xor
leave
dec
dec
dec
ret
jae
push
xor
jl
push
pop
int
mov
pop
scas
or
pushf
in
sub
mov
mov
push
daa
sub
inc
xor
ret
out
xor
inc
stos
jbe
pop
in
push
pop
rorb
jmp
pusha
mov
test
mov
pop
pop
push
aad
sbb
push
pushf
sub
xor
push
jp
cli
lods
jae
ficomps
pop
pop
insb
mov
mov
cmp
and
mov
lahf
jge
insb
icebp
push
aaa
mov
jae
clc
mov
xchg
dec
dec
stos
jnp
pop
cli
outsl
mov
push
pushf
popf
mov
push
sahf
insl
addr16
add
push
cltd
jmp
jg
stos
xor
ds
pop
xor
sub
int3
in
icebp
xchg
dec
mov
push
arpl
jns
mov
xchg
push
iret
jbe
sbbl
popa
insb
out
lea
ret
fisubrs
xchg
and
rcrb
cmpsl
jge
mov
cld
add
sahf
jle
int3
out
dec
arpl
pop
add
sbb
ljmp
inc
pop
cld
leave
jge
or
xor
pop
ret
enter
daa
xor
mov
sbb
jge
and
lcall
xor
or
xchg
test
aas
jle
jl
sub
out
xchg
mov
into
sahf
clc
cmpsl
and
in
pop
mov
stos
pop
in
dec
push
js
push
es
sub
aaa
icebp
sub
sub
dec
push
mov
fiadds
pop
in
and
pop
jg
mov
jecxz
cmpsl
push
cmp
data16
mov
jl
or
ret
pop
sub
popa
mov
fwait
lods
scas
das
pop
cli
push
mov
sarb
divb
stos
sbb
jo
xchg
ljmp
pop
xor
bound
hlt
push
sahf
inc
mov
sub
imul
rcrl
lods
rolb
mov
outsb
xchg
and
xchg
je
mov
orl
mov
std
pop
aaa
movsl
fdivrl
sbb
dec
pop
dec
das
mov
testl
mov
test
stc
inc
dec
cs
andb
sbbl
enter
and
jnp
addr16
xchg
rclb
js
popf
push
js
je
aad
and
pusha
sahf
sbb
push
add
pop
fdivl
and
pop
pop
xchg
sbb
insb
ss
push
div
loop
sbb
push
add
sar
dec
xor
pop
iret
mov
xchg
test
or
mov
clc
pop
int3
test
ljmp
jge
cmovne
pop
and
lcall
out
dec
push
inc
mov
sahf
xchg
jne
mov
dec
shll
gs
out
cmp
cmpsb
cmp
cmc
and
shll
jle
lcall
fisubrl
cmpsl
and
xchg
cmp
outsl
loop
and
and
dec
loopne
pop
js
pop
mov
jbe
jg
mov
xor
sub
lods
popf
pop
lods
inc
xchg
mov
lods
les
dec
fnstsw
jmp
mov
dec
cmpb
pop
jp
shl
add
dec
mov
scas
and
push
jae
cmp
and
lcall
jle
cltd
sbb
insb
dec
repz
and
movsb
ja
pop
insb
cmp
push
cmpsb
aas
outsb
pop
stos
inc
lret
dec
mov
out
add
cmp
mov
mov
xor
js
test
orl
lods
call
inc
in
jnp
dec
shrb
pop
xor
jo
jg
add
mov
add
add
push
xor
sub
rolb
pusha
in
insl
out
enter
jl
cs
jo
adc
lcallw
test
test
inc
ret
imul
test
lcall
cwtl
mov
mov
xor
rolb
dec
pop
dec
sub
cs
mov
sub
sub
sbb
sub
push
in
jb
jecxz
scas
mov
lret
mov
dec
mov
or
mov
mov
add
xchg
cli
adc
lcall
dec
add
push
xchg
insb
insl
xor
add
ficoml
lahf
dec
les
and
jno
xchg
dec
js
cmp
and
cmp
jecxz
xor
pop
outsb
insb
ljmp
pop
lahf
cmp
dec
add
in
in
jmp
mov
lret
fisttpll
push
les
mov
dec
imul
inc
pushf
xor
push
lret
xor
frstor
pop
and
inc
addl
loopne
es
jp
push
adc
popa
fsts
pop
mov
dec
sahf
mov
inc
inc
adc
test
frstor
lock
pusha
aaa
ljmp
stos
jnp
or
pop
jns
cmpsb
mov
roll
loope
outsl
test
popl
setns
xchg
negb
adc
fstps
cmp
pusha
movsb
dec
xor
addr16
jmp
sahf
add
cmp
dec
mov
aad
or
sub
pop
es
jg
iret
imul
cmpb
cvttps2pi
push
cmp
push
inc
popf
rcr
xor
popf
and
fidivrl
pop
pusha
and
or
pop
cwtl
lea
dec
lcall
xlat
cltd
push
hlt
cmp
lcall
cmp
and
ds
and
jne
sbb
ds
es
inc
arpl
data16
and
cmp
subb
pop
decb
stos
aas
sbb
incb
inc
xor
movsl
lcall
sbb
addl
stos
sbb
dec
lahf
stos
pop
add
mov
sbb
or
adc
xchg
jg
push
sub
or
insb
cld
mov
ret
sub
mov
sub
cmpsl
daa
ds
pop
sub
fs
push
int3
xchg
add
add
jp
xchg
xor
pop
insl
ja
push
imul
pop
pop
ds
xchg
orb
ret
iret
pop
mov
mov
int
jmp
jnp
jbe
in
xchg
emms
push
pop
movsb
adc
enter
jge
or
adc
in
dec
adc
xor
push
xchg
bound
adc
mov
dec
stos
mov
test
jp
aad
notb
sub
inc
xchg
dec
jp
cmp
adc
and
mov
in
add
and
addr16
xchg
mov
shlb
sbb
xor
or
or
enter
xchg
je
push
adc
pusha
jg
and
mov
es
insb
and
jo
jg
addr16
daa
sarb
lea
jno,pt
sub
jo
out
xorb
add
inc
xchg
cld
cli
jmp
push
testb
or
add
inc
idivl
out
jo
nop
jle
mov
jns
lret
mov
cmpsl
or
xor
mov
call
std
daa
sbb
stos
cmp
sub
fs
pop
cmp
and
sub
sub
lock
sahf
add
sub
aas
pop
mov
mov
stos
inc
bound
loop
filds
jl
subb
mov
sbb
movsl
shlb
pop
insb
jno
xchg
mov
add
xchg
stc
push
clc
jge
mov
movsl
inc
pop
les
xchg
dec
mov
lcall
icebp
daa
push
js
call
jnp
xor
jmp
int
mov
negb
push
fldcw
sub
push
dec
jno
mov
iret
cmpsb
mov
push
mov
cwtl
stos
or
xor
shlb
lock
push
imul
aaa
sbb
mov
mov
fwait
mov
mov
xchg
in
imulb
movsb
adc
cld
js
les
dec
aas
xchg
sub
fs
popw
jp
les
test
sarl
sub
movsl
outsb
subb
popa
or
mov
mov
movsl
jne
movsb
ljmp
ret
lods
cmp
and
cmp
mov
mov
fiadds
call
cmpsb
int
insl
pusha
stc
xor
mov
cli
fstpt
mov
cmc
cli
decb
aam
inc
dec
push
xor
into
cmp
in
jns
dec
dec
addr16
xchg
inc
inc
push
xchg
cmp
aaa
inc
mov
mov
xchg
sub
int3
mov
fwait
aad
fidivs
das
mov
ja
ret
decl
test
scas
jo
xor
pop
popa
xor
push
sub
inc
pop
test
popf
xchg
repz
icebp
jmp
pop
and
aas
in
in
cmpsl
cmp
push
sbb
dec
ljmp
inc
js
jg
cmp
xchg
push
std
mov
sbb
xor
jns
scas
inc
jmp
dec
push
mov
and
and
dec
and
leave
pop
iret
lock
lcall
std
dec
jle
jb
jnp
cmp
out
pusha
and
les
jp
xor
dec
cmp
lock
xor
add
mov
sahf
ljmp
dec
add
outsl
jle
pop
push
loope
fdivrl
pop
mov
loope
popf
das
sti
xchg
imul
inc
ret
hlt
or
stc
jle
lods
dec
arpl
xor
dec
mov
inc
mov
ja
out
mov
sbb
into
xor
mov
jle
or
rcl
sbb
scas
lds
adc
inc
sbb
mov
jns
icebp
cmp
popa
ja
xchg
adc
aas
dec
addr16
rcrl
mov
push
cmp
and
dec
addr16
jecxz
sbb
sub
mov
shrl
iret
dec
mov
int3
lock
fldenv
aam
cmp
xor
punpcklwd
int3
mov
adc
divb
pusha
repnz
mov
std
mov
cmp
or
adc
popf
fcmovne
ljmp
iret
jbe
das
mov
jae
lret
pop
jge
les
jge
in
enter
mov
inc
test
dec
lods
add
pusha
loop
jg
add
loopne
sub
outsl
or
sub
aas
mov
cmp
sarl
ret
pop
movsb
inc
ret
cmp
sub
mov
in
cli
cmp
rclb
popa
repnz
scas
inc
into
div
aas
xchg
les
jp
scas
dec
test
cmp
rcrb
scas
dec
add
jnp
xor
inc
daa
jg
cs
and
imul
incb
sub
xor
dec
push
fs
jb
mov
jle
lods
dec
dec
mov
push
sbb
leave
std
iret
dec
or
stos
push
lea
movsl
call
mov
insl
shll
xor
in
imul
insl
mov
ljmp
xor
inc
mov
mov
adc
in
in
je
cmp
dec
lret
jle
orps
or
mov
mov
loop
andb
xchg
sub
mov
std
adc
xor
cmpsl
xlat
js
pop
pushf
jb
and
adc
imul
js
imul
addl
data16
aaa
cmp
mov
negb
sahf
cmpsb
or
xor
std
xchg
push
xor
stos
pop
fucomi
rorl
data16
dec
ret
ret
mov
pop
js
jne
bnd
int
xor
lretw
cmc
mov
jae
mov
dec
push
inc
xchg
pop
jmp
push
leave
mov
inc
shll
mov
mov
xor
inc
hlt
jnp
movsl
pop
mov
inc
pop
add
int
shll
sub
int
pop
ds
gs
aam
pop
xchg
hlt
loopne
mov
sarb
call
sbb
pop
outsb
push
and
pop
sbbb
push
stos
mov
fdivs
into
jb
inc
mov
fdivl
sub
and
cs
sbb
cltd
in
pop
sbb
cmp
cltd
outsl
imulb
fnstsw
jge
popf
rcr
popf
hlt
icebp
xor
sub
popa
cli
fs
mov
mov
sub
mov
shlb
enter
ja
aad
fs
and
jb
fs
arpl
loope
dec
add
andb
sub
xchg
push
cmp
pop
jle
lods
jbe
mov
sub
jecxz
jg
adc
cmp
mov
sub
inc
sub
push
psubusb
pop
pop
test
pop
xchg
pop
imul
adc
mov
cltd
shll
push
jno
popa
mov
xchg
mov
rorl
sbb
or
jb
mov
mov
mov
enter
fstpl
sub
mov
lods
fmulp
data16
fisubrs
scas
push
push
fistl
ret
xlat
jo
orl
mov
cltd
mov
inc
jo
scas
jne
je
mov
call
push
mov
jne
ss
cld
fisubs
push
fldlg2
imul
jge
mov
ds
aas
mov
outsb
outsb
cmp
fisubl
inc
test
cmpsb
mov
insb
filds
pop
icebp
cmp
mov
addl
cld
popf
dec
push
mov
in
push
bound
scas
cmp
ret
fidivrl
mov
movsl
mov
aas
nop
jg
negl
jnp
add
or
sub
pop
sahf
inc
std
aaa
mov
repnz
arpl
add
sti
mov
sti
jae
ss
lret
pop
jecxz
mov
lods
int3
adc
daa
divb
cmc
cs
pushf
data16
xor
movsl
in
inc
popf
mov
cmp
pop
push
or
out
bound
mov
gs
mov
es
inc
inc
pop
pop
mov
lock
fldenv
in
mov
mull
sub
rorb
int
mov
adcl
push
dec
mov
adc
bound
pop
jg
push
lcall
push
jns
cmp
out
inc
test
les
jno
and
mov
stc
movsl
loop
dec
sbb
mov
dec
xchg
mov
cli
mov
movsl
xchg
cmpsb
dec
scas
pop
cmp
mov
sbb
and
xor
xor
in
xor
jno
jle,pt
sub
pop
stos
add
adc
icebp
cmp
xor
lea
sbb
add
jp
push
je
mov
pop
lock
arpl
cmp
lods
mov
fcomps
es
and
sbb
out
rolb
dec
sahf
jne
jg
push
jl
mov
js
mov
inc
cmovle
push
lcall
or
sub
push
push
cmp
es
orl
clc
jae
fimuls
aaa
cltd
fistpl
pop
aas
pop
xor
jg
add
out
pxor
test
mov
pop
push
out
pop
call
xor
notl
mov
outsl
pop
je
adc
std
dec
dec
icebp
dec
ja
sbb
cli
jno
pop
dec
lret
loope
test
in
push
sbb
sub
mov
sbb
test
test
test
xor
adc
xor
inc
loope
xor
mov
and
cmp
aam
mov
loope
push
stos
mov
fiadds
inc
and
pop
jp
sub
add
ljmp
ss
xchg
dec
pop
add
dec
adc
addl
pop
xor
add
out
or
mov
not
lock
inc
and
or
imul
addl
int3
cmpl
pop
shrb
adc
scas
add
push
insb
sub
imul
push
push
adc
sbb
rcrb
sahf
aam
sub
sub
adc
sbb
stos
xchg
push
xchg
lods
adc
repz
sysenter
pop
jmp
test
movsl
mov
push
aad
mov
sub
push
lcall
loopne
cli
mov
pusha
aam
adc
inc
add
push
jg
xor
add
inc
mov
jb
cli
xor
leave
cmpsl
push
ret
push
fimull
fiadds
mov
sub
mov
jno
cmpsb
add
and
mov
and
aam
push
das
jmp
fwait
jmp
xor
dec
add
mov
add
mov
pop
outsl
adc
xor
adc
scas
push
jno
sub
das
mov
add
out
dec
cltd
or
dec
sbb
int3
push
dec
dec
mov
mov
xor
popf
mov
jne
inc
jp
sbbl
push
add
pushf
std
mov
push
movsb
lods
adc
cmpl
push
js
ficoms
out
sbb
jp
int
les
pop
mov
int3
dec
sbb
cltd
inc
or
xchg
shlb
pop
pop
mov
fimuls
inc
xorb
pop
pop
mov
popl
xor
stos
mov
cli
jb
out
fidivs
call
dec
adc
mov
loope
sti
js
push
inc
lock
iret
gs
pop
sub
pop
ja
repz
scas
push
rcrl
in
pop
xchg
cli
sub
pop
jnp
test
push
xor
mov
push
dec
mov
sub
xor
hlt
mov
pop
jle
roll
bound
data16
inc
xorb
aaa
int
fs
mov
jge
ficompl
pop
into
aam
xchg
sbb
icebp
push
sbbb
fidivl
push
ja
push
push
fwait
imul
jbe
sub
inc
mov
cmpsl
add
int
or
lahf
pop
push
pop
fbstp
inc
imul
mov
and
adcb
cmpb
loopne
cs
inc
fucom
lcall
je
pusha
test
enter
test
pop
loop
cltd
bound
inc
js
mov
mov
cmp
mov
fs
mov
or
adc
push
inc
sbb
lret
pop
lret
ja
adc
scas
je
or
and
push
in
xchg
dec
lahf
fwait
push
lods
mov
cld
push
test
inc
mov
xchg
xchg
mov
shll
cmp
adc
xor
pop
repz
inc
js
icebp
and
jp
sub
sahf
sti
inc
dec
les
sbb
in
cmp
push
sbb
popa
pop
mov
aaa
adc
jge
rolb
pusha
pop
fistpll
imul
or
adc
icebp
or
nop
push
pop
jbe
out
inc
jnp
sbb
subps
int
outsl
faddl
arpl
sub
cmpsl
decl
lcall
sub
push
sub
repnz
lods
mov
jle
xchg
lods
testb
xchg
mulb
adc
xchg
ja
cmp
push
adc
dec
or
sbb
dec
add
lods
mov
mov
ja
adc
cmp
push
lret
jg
push
sbb
outsb
pop
dec
in
push
outsl
jno
pop
arpl
data16
inc
test
mov
xor
and
insb
cmp
test
xchg
dec
int3
pop
push
cmpsb
frstor
movsb
xor
add
subl
dec
lock
jp
sub
scas
sub
cltd
add
int3
iret
out
clc
adc
dec
jge
add
and
mov
mov
cmpb
xchg
jo
push
enter
add
mov
popa
repnz
push
movsl
jg
sbb
lcall
stc
jp
pop
outsl
cltd
or
pop
fnsave
sub
outsl
cmp
inc
in
stos
arpl
xor
pop
xchg
and
dec
mov
mov
aaa
neg
adc
pop
mov
inc
out
mov
iret
dec
jne
xchg
dec
out
ret
mov
sarb
imul
pop
xchg
add
xorl
shrb
shll
fs
iret
cmp
ja
jno
gs
or
sahf
push
dec
push
add
inc
test
loop
jge
cmp
xlat
shlb
cmp
ficomps
cli
sub
pop
pop
jb
addr16
push
aam
bound
cmp
shr
push
rcrb
out
pop
cmc
movsb
mov
mov
mov
cltd
dec
in
jo
mov
test
cmp
push
jnp
push
dec
mov
getsec
mov
negl
int
and
sbb
mov
imul
and
sbb
and
test
dec
add
fcoms
fistpl
mov
adc
test
xor
xor
cmp
ret
std
adc
mov
and
cld
add
mov
pop
icebp
or
roll
pusha
loop
out
jbe
imul
push
cmp
pop
push
pop
cmp
dec
push
addr16
and
sarl
jle
pop
daa
push
inc
xchg
sub
or
push
imul
jmp
mov
sub
pop
mov
cmp
and
adc
or
idivl
into
test
push
ja
pop
push
sbb
dec
repnz
stc
fs
cmpsl
lods
or
pop
push
leave
stc
push
xchg
sbb
inc
sub
cwtl
fldcw
cs
sbb
xor
insb
in
cmp
jo
sub
andb
pushf
push
xchg
subb
inc
loope
ret
or
test
xchg
jl
adc
jns
cmpsb
mov
outsl
pop
and
imul
std
sbb
cwtl
test
sti
into
sub
lret
mov
js
fstpt
ss
push
insb
popf
in
js
push
jg
int3
aas
xchg
or
test
push
js
rcrb
lock
stos
jl
mov
scas
rcll
and
ficompl
fidivs
cs
cld
lds
notl
les
jae
fmulp
clc
adc
lret
lahf
fldcw
jle
cmpsl
les
push
xchg
xor
xor
inc
xchg
in
dec
insl
cmp
out
xor
iret
inc
xorl
dec
pop
push
cmp
and
shlb
fwait
cwtl
mov
and
test
fldenv
push
addl
lods
shl
push
ret
lods
add
insl
jno
mov
jo
inc
adc
mov
or
int3
xchg
test
into
pop
cmp
mov
jmp
xchg
movsb
enter
negl
mov
jae
pop
scas
icebp
ffreep
es
cld
jp
pop
and
js
js
add
inc
mov
mov
jo
gs
loope
jecxz
and
fdivr
mov
scas
test
fidivrl
sti
dec
push
into
sub
stos
jns
xor
fnstenv
inc
lods
and
rcr
int3
fcomip
jno
sub
dec
out
xlat
add
or
mov
add
inc
or
mov
mov
out
int
in
mov
mov
mov
push
loope
adc
dec
xor
or
pop
leave
or
mov
jmp
push
xchg
andb
and
subl
jge
push
pop
fxam
test
ds
js
adc
mov
outsb
mov
adcl
pop
imull
inc
jl
scas
ss
pop
push
xchg
outsl
cli
jl
mov
subb
inc
repnz
leave
lahf
movsl
adc
pop
pusha
out
mov
push
adc
and
push
pop
push
xacquire
mov
push
ficompl
inc
cmp
pop
scas
sar
je
push
pop
xor
sahf
mov
or
mov
hlt
jge
sub
lock
cmp
in
sahf
mov
mov
push
out
and
stos
sub
jne
sbb
mov
xlat
sbbb
mov
sub
xor
popf
cli
or
cmp
push
xor
ljmp
jbe
or
ja
jbe
popa
or
dec
cmpsb
sbb
jle
scas
aad
add
xlat
in
fcompp
dec
in
sub
adc
popf
adc
mov
push
ret
sub
inc
add
scas
add
xor
stos
mov
aas
adc
dec
xor
pop
xchg
push
cmp
pop
mov
gs
inc
inc
fbld
pop
sar
dec
in
fisubl
sbb
jg
and
shll
sahf
test
inc
loope
insb
arpl
les
jns
inc
int3
inc
dec
xor
das
movb
repz
push
adc
inc
sub
xor
sbb
sub
mov
shlb
aas
xchg
push
ret
insl
jne
dec
push
xor
cli
add
mov
test
adc
push
xlat
xor
les
adc
sbb
stos
mov
popa
repnz
jno
int3
xchg
fimull
push
and
jg
or
es
mov
mov
andl
mov
outsb
jnp
cmp
jns
stc
ss
aam
sub
test
es
stos
mov
xor
jo
aam
or
fwait
jmp
or
ss
cmp
pop
inc
push
mov
bound
fnstenv
jecxz
pop
mov
inc
sbb
pop
mov
mov
mov
jecxz
loop
outsb
das
xor
into
mov
fwait
cli
scas
adc
jne
ss
in
clc
aaa
outsb
jg
push
dec
lock
aas
cmp
ret
into
dec
dec
in
fnsave
push
push
out
push
mov
xchg
out
mov
adc
cli
je
hlt
jo
fwait
sub
and
mul
mov
jns
cmpl
jg
dec
or
sbb
and
pop
mov
jb
fcomps
js
dec
push
outsl
popf
sub
fisubl
and
pop
fld1
jp
mov
js
push
gs
dec
jne
in
xchg
pop
xorb
push
xchg
mov
push
mov
lcall
pop
jnp
idivl
fstpt
daa
clc
fsubrl
lods
mov
inc
ja
frstor
daa
mov
mov
inc
pop
sub
scas
push
in
in
sbb
dec
and
or
adc
jbe
popa
daa
push
ds
sub
pop
sub
cmp
xchg
lds
sti
pop
and
or
dec
xor
inc
imul
cwtl
out
sti
arpl
push
outsb
cmpsl
push
hlt
enter
movb
repnz
xchg
adc
push
test
mov
xchg
push
in
test
fwait
push
icebp
jg
daa
testb
fistps
mov
or
jge
cmp
shr
int
sub
ss
push
mov
xchg
int
lahf
xchg
mov
jp
push
xor
adc
les
sub
push
or
cmp
sbb
adc
sbb
xor
sub
or
mov
lret
pop
mov
ds
mov
mov
pop
mov
std
aad
mov
es
mov
lods
lea
add
daa
xor
cs
test
pop
scas
ljmp
cld
pop
cmpsl
jbe
repz
addr16
call
and
sahf
dec
lret
or
xchg
fsub
xor
daa
aas
shll
pop
je
mov
cmp
das
pop
sub
je
pusha
andb
or
jno
repnz
mov
sub
push
pop
sub
loopne
xchg
test
lret
add
jp
popf
xchg
testb
cmc
jecxz
mov
adc
inc
loope
popf
add
xchg
test
scas
fisttps
movsb
dec
inc
cld
and
mov
fimull
and
cmp
push
loop
pop
push
inc
movsl
ds
lods
jle
rorb
arpl
push
out
adc
jecxz
ret
stc
push
cmp
aas
iret
xchg
push
ds
cli
adc
fcoms
xchg
dec
push
add
inc
sub
and
or
into
insb
mov
in
fs
jl
adc
nop
xor
inc
and
aad
ret
fisubl
xchg
nop
inc
xor
addr16
mov
push
adc
ja
inc
and
mov
cmp
push
xor
incl
repnz
dec
jnp
jo
mov
sub
mov
inc
scas
and
int3
daa
fwait
imul
dec
push
pop
dec
push
or
gs
bound
in
jp
dec
and
inc
lahf
inc
insb
mov
jbe
jl
hlt
sarl
push
xor
and
or
jae
ret
cmpsb
roll
jl
sbb
inc
inc
out
add
inc
outsl
jecxz
cmp
insl
mov
imul
push
shl
cmc
add
cmp
sub
jecxz
add
icebp
movb
subl
sahf
xor
and
pop
adc
fstps
and
adc
aaa
call
sub
sbb
or
testb
inc
test
arpl
add
repnz
out
leave
sbb
pop
leave
clc
and
mov
lret
dec
push
lret
out
dec
jno
mov
xor
adc
inc
inc
inc
scas
mov
push
jmp
mov
jle
mov
mov
push
push
scas
push
cmpb
push
push
or
cmc
add
cwtl
cmp
data16
movsb
je
test
mov
outsb
test
addr16
cs
ja
jo
mov
fisubrs
pop
fstps
fistpl
xor
sarb
xor
and
mov
and
lcall
lea
sub
jne
nop
dec
inc
xlat
jmp
movsb
push
and
insb
push
cmp
jp
pop
pop
dec
lock
mov
mov
pop
cs
lods
into
decl
dec
adcb
add
outsb
dec
lcall
add
cmpsl
cwtl
or
cmovns
sahf
adc
mov
ret
add
pop
leave
icebp
sub
xchg
jmp
imulb
outsl
fsubl
loop
ja
push
pop
inc
js
or
ss
push
xlat
cmp
or
mov
jge
dec
je
gs
pop
aaa
icebp
inc
sub
mov
sub
mov
push
sbbb
movsb
mov
pop
stos
out
lcall
outsl
dec
scas
aaa
arpl
popa
sub
push
xor
cld
aad
and
cltd
or
inc
mov
gs
lahf
in
insb
mov
and
mov
sbb
dec
mov
mov
cwtl
scas
ljmp
loopne
ret
inc
mov
loopne
xchg
cli
pop
out
mov
mov
add
push
xor
loope
add
jbe
jns
cmp
sbb
movsl
add
sbb
lds
es
sbbl
pop
push
fsubrs
sbb
push
xorb
dec
ja
xchg
mov
push
xlat
lea
not
xlat
inc
add
jbe
les
jb
or
add
push
inc
jns
and
ja
sbbb
push
mov
dec
push
cmpsl
xchg
lock
xchg
push
movsb
pop
mov
aas
pop
inc
es
sub
xchg
adc
jl
push
pop
sub
pop
and
dec
test
jp
jmp
or
les
repnz
fcomip
inc
out
int3
add
dec
inc
jns
les
scas
arpl
sbb
cmp
js
mov
push
stc
das
in
adc
pop
mov
xor
pop
mov
dec
inc
mov
stos
fs
pop
pop
std
in
popa
mov
and
cmc
test
sbb
fsts
lret
mov
stos
movsl
mov
call
into
pop
rclb
int
gs
fists
jp
dec
in
mov
pop
clc
push
adc
leave
add
push
push
push
cltd
adc
adc
in
fadds
mov
or
jge
lcall
push
sub
sti
xchg
jns
mov
aad
add
mov
jno
inc
sbb
push
add
pop
nop
xor
xor
test
stos
test
xchg
out
sti
int3
sub
pop
jp
or
jnp
inc
push
js
stos
push
jg
ret
loop
xchg
cmpsb
mov
sahf
inc
cmp
test
sbb
jnp
arpl
leave
je
xchg
fisttps
xchg
in
xlat
push
jmp
jecxz
xor
fisubrs
mov
jle
stos
mov
lahf
push
inc
out
dec
dec
int
dec
data16
adc
push
mov
fsts
jno
sbb
out
or
js
scas
test
loope
jo
cltd
cld
push
jle
sbb
into
mov
gs
inc
dec
or
mov
fsubrl
jno
daa
cmp
bound
enter
pusha
inc
test
enter
mov
das
insb
sub
inc
dec
mov
aas
repz
mov
arpl
shll
ficoms
xor
mov
inc
xor
dec
lods
cmp
cmp
mov
js
ja
xchg
jl
xor
in
arpl
sub
sbb
pop
xor
jb
in
adc
pop
xcrypt-cfb
cmpsl
daa
and
jae
sti
and
rcl
jo
popw
pop
in
and
bound
imul
bound
sbb
jg
incl
mov
sbb
cmp
pop
das
dec
int
bound
jmp
test
scas
jnp
lcall
mov
mov
lret
mov
jge
insb
cwtl
mov
pop
ljmp
mov
pop
push
add
xlat
push
xchg
add
je
in
cmpsl
xchg
pop
xor
into
pop
icebp
pop
mov
jg
pusha
adc
mov
imul
mov
cmp
xorb
test
test
icebp
pop
push
and
insl
dec
sbb
loopne
sbbb
cmp
cld
loope
test
ja
movsl
xchg
dec
jmp
lea
movsb
sub
jge
add
mov
nop
pop
popf
cmp
int
sbb
mov
dec
cmp
and
jnp
jp
push
lret
rcl
add
cmpsb
sbb
push
jmp
add
in
and
cmp
push
sar
jno
les
shlb
das
inc
fsubrl
pop
mov
das
jbe
andb
sub
outsb
and
popa
jmp
repnz
sbb
arpl
shl
mov
lret
jbe
lea
cli
pop
aaa
insl
outsb
jle
xor
inc
push
repz
jb
push
lods
ficoms
out
scas
sti
mov
adc
mov
xchg
adc
hlt
into
stc
lcall
xor
mov
mov
popa
cmp
outsl
adc
stos
pop
roll
movsb
push
xchg
mov
mov
sbb
dec
inc
pop
mov
mov
push
cmpsb
or
sub
inc
push
test
mov
mov
dec
pop
fdivrs
inc
cmp
cmp
xlat
out
dec
mov
mov
pop
jg
cmp
out
dec
xchg
cmpsb
sarl
adc
push
mov
inc
add
jo
ds
inc
ja
sbb
cld
lods
inc
jnp
push
xor
imul
ficoms
pop
mov
xchg
movsb
add
cmc
ss
xchg
cld
insb
mov
dec
jo
cli
popa
push
add
ss
dec
inc
and
push
mov
inc
popf
aas
adc
movsl
in
cmp
lret
mov
in
cs
in
daa
mov
loopne
addr16
jnp
icebp
push
adc
in
shlb
add
dec
jl
test
adc
cltd
data16
jne
jnp
ljmp
dec
or
je
ja
inc
xor
xchg
or
cmp
inc
dec
out
into
mov
add
xlat
pop
dec
rcrb
into
jmp
gs
iret
dec
roll
in
sbb
sub
cmp
popa
adc
lea
out
in
adc
xchg
addr16
mov
mov
xor
dec
popa
ret
add
outsb
popf
rcll
mov
in
int3
movsb
movsb
mov
clc
pop
sub
adc
adc
test
out
dec
pop
inc
lds
in
sbb
push
add
and
inc
data16
aaa
outsl
inc
stos
cmp
and
imul
or
imul
inc
push
int
mull
push
daa
and
aad
call
cs
pushf
mulb
push
and
lret
call
mov
js
stos
push
cwtl
loope
nop
push
mov
jge
xchg
jns
push
push
fcmovbe
sahf
aas
jns
out
or
xor
sbb
stc
leave
xor
adc
add
iret
cwtl
pusha
xchg
addr16
out
jmp
dec
mov
inc
push
pushf
movsb
popf
scas
jb
lahf
pop
and
and
ret
jl
sbb
mov
jns
jbe
test
mov
inc
push
xchg
fchs
insb
bound
dec
test
xor
lret
jp
ret
and
enter
pop
cmp
mov
jnp
gs
push
int3
ds
mov
xchg
cmp
enter
repnz
movsb
std
mov
sbb
adc
adc
ret
jl
xchg
xchg
mov
scas
lret
fnstcw
xor
mov
lret
inc
xlat
pop
insl
lds
and
jns
add
pop
gs
fsubrs
ds
pop
cmp
loope
insb
insb
sahf
pop
call
dec
mov
pop
mov
inc
xor
pop
xchg
imul
mov
push
into
xor
ds
cmp
inc
je
jmp
decl
fwait
dec
orb
or
test
xor
loopne
out
mov
sbb
xchg
fsts
mov
xchg
jmp
sbb
inc
daa
lahf
push
jns
cmp
fbld
mov
inc
stos
xchg
das
adc
in
fiadds
push
fst
sbb
inc
adc
inc
addr16
jecxz
test
shlb
ds
xchg
cmpsb
hlt
xor
bound
fstpl
int
cmpsb
js
jp
cmpsl
push
xchg
sbb
jnp
xlat
and
or
push
ret
inc
jb
add
cmpsl
dec
and
fldl
cmp
pop
mov
jnp
test
adc
adc
js
pop
mov
mov
je
pop
cmp
pop
sbb
mov
mov
xor
jp
sbb
dec
mov
jge
inc
or
stc
movsl
es
cmpsl
ds
hlt
mov
xlat
jl
push
mov
icebp
out
bound
mov
mov
movsb
dec
imul
push
cmp
xchg
add
jp
xor
je
pop
nop
in
js
pop
arpl
mov
fldl
inc
lods
mov
je
les
mov
aam
inc
sub
clc
and
push
mov
mov
jbe
push
lret
mov
or
mov
outsl
cltd
test
pop
fsubp
rcrb
jo
and
mov
out
or
mov
shll
adcb
mov
and
xchg
push
sahf
mov
es
movsl
outsb
pop
in
test
enter
aam
mov
inc
mov
push
jp
xchg
inc
outsl
imul
add
mov
jp
test
scas
jl
mov
sbb
push
cltd
pop
pop
push
pop
mov
addb
pushf
cmp
movsl
pop
xor
outsl
inc
fcoml
repnz
xor
and
loopne
cmp
lods
push
sbb
push
aad
push
lret
and
sub
sbb
clc
cmp
add
call
cmp
test
mov
xchg
xor
stos
pop
aad
out
or
popf
jns
xchg
and
ss
hlt
in
jno
dec
das
lahf
mov
push
dec
push
adc
add
pop
and
lret
lds
cmp
fdivl
push
push
subl
in
xchg
ljmp
pop
daa
sbb
sahf
push
in
inc
sub
test
test
pop
xchg
stos
faddl
lods
or
push
stos
sarb
pop
fistpl
or
mov
popa
xor
insl
and
int
xchg
dec
pushf
xchg
inc
ljmp
out
cmp
mov
int
mov
mov
xchg
pushf
dec
xchg
js
mov
cmp
dec
test
sub
cmp
dec
xor
imul
push
jecxz
popf
shrb
arpl
mov
inc
jnp
fcoml
push
sub
cli
dec
or
adc
aam
shrl
or
cmpsb
and
push
push
xchg
push
ficoml
xchg
fmuls
test
fisubl
push
pop
mov
dec
dec
xchg
andl
push
push
hlt
enter
push
xchg
push
inc
inc
sub
mov
cmp
or
mov
cltd
xor
out
cmpsb
mov
stos
sbb
lods
adc
mov
or
xor
push
mov
inc
inc
and
xor
mov
cwtl
mov
int3
jne
and
les
stos
mov
push
and
adc
cs
xor
outsb
lcall
push
sub
xor
dec
fucomi
cmp
loopne
inc
add
and
lahf
ljmp
insl
sub
inc
int
popa
test
dec
aaa
aad
fwait
sti
outsl
pop
jp
sub
push
divb
mov
daa
andl
imul
mov
cmp
cmp
add
sbb
xchg
and
int3
push
js
js
and
nop
inc
pushf
icebp
call
shlb
sub
iret
ds
scas
fisubl
dec
popf
cmp
pop
pop
mov
and
scas
xor
loop
or
out
les
inc
ds
jno
or
mov
out
xchg
pop
es
jmp
in
out
dec
xor
mov
rol
fstl
jo
sahf
outsb
bound
xchg
push
push
fcmovnb
fisubrs
mov
xor
push
add
sti
in
dec
mov
nop
jle
mov
enter
and
inc
mov
lahf
das
stos
adc
push
dec
test
cmp
cs
mov
jb
push
dec
jecxz
dec
cmp
mov
cmp
push
cmp
ret
nop
popa
xor
pushf
xor
jae
push
data16
mov
inc
test
jle
stos
push
adc
or
pop
and
jmp
mov
and
mov
nop
inc
mov
jne
and
jns
lods
int3
cmp
jl
fwait
or
call
lret
dec
in
test
ljmp
cli
outsl
add
sti
je
mov
insl
and
fdivl
addr16
xchg
pop
out
movsb
bound
lahf
xchg
dec
dec
shr
pop
mov
mov
lods
adcb
jns
jb
push
stos
and
adc
inc
adc
adc
and
cmp
xor
sub
scas
xchg
cmp
cwtl
nop
xchg
sub
add
sub
push
push
mov
mov
jae
and
into
or
lret
inc
repnz
push
push
and
mov
push
stos
mov
test
lods
dec
es
enter
pop
out
lods
mov
xlat
idivl
in
ss
cvtps2pi
inc
imull
mov
sbbl
cmp
addr16
leave
mov
cs
or
stc
inc
nop
mov
cli
inc
mov
mov
test
dec
dec
mov
js
adc
pop
xchg
cmp
jge
leave
adcl
jbe
aas
cld
cmp
mov
cmp
push
pop
sbb
dec
js
call
pusha
out
and
jmp
incl
mov
jnp
call
jl
add
ret
mov
sti
nop
and
xchg
repnz
shl
pop
sub
daa
fwait
mov
push
iret
incb
inc
adc
mov
xor
push
lahf
les
int3
lret
loop
xor
sbb
inc
mov
cmp
xor
int3
jo
mov
xchg
add
loopne
nop
fcom
jno
xchg
rclb
xor
dec
mov
push
inc
rcll
lcall
imul
mov
mov
rorb
adc
and
int3
jo
fs
repz
fnsave
inc
popa
sub
jae
mov
hlt
fwait
and
push
sbb
test
lock
scas
mov
xchg
adc
stos
hlt
jl
popa
clc
idiv
inc
pushf
rcrb
lock
xchg
inc
push
mov
xor
sbb
mov
stos
dec
jnp
js
inc
js
push
xor
mov
addr16
and
xchg
sbb
jl
xor
sar
push
inc
sbb
inc
fldcw
rorl
data16
mov
push
rorl
addr16
aaa
fnstenv
out
pop
or
ss
into
pop
lahf
int
adc
mov
ret
pop
loope
aad
or
adc
push
and
js,pt
fs
jp
dec
mov
ss
test
cli
mov
sbb
imul
ret
and
in
ljmp
sbb
fucomip
inc
ret
outsb
inc
fistps
cmp
int3
scas
lods
xchg
add
add
das
ljmp
lods
outsb
js
pop
movsl
les
push
int3
je
and
sbb
sbb
dec
aaa
stos
add
fcoms
ljmp
and
arpl
xchg
loop
pop
lods
dec
repz
ljmp
mov
dec
xor
xchg
jo
sub
mov
std
aas
sub
and
mov
mov
mov
add
cmp
jnp
dec
jl
popf
mov
dec
pop
jl
mov
jp
je
cmp
js
pushf
dec
and
add
mov
jmp
lret
xor
xchg
inc
insl
daa
mov
lods
sub
or
mov
push
mov
loopne
not
repz
sbb
cli
sbb
mov
dec
dec
loop
jae
mov
xor
xor
cmp
dec
inc
shlb
sbb
lods
mov
lret
sub
popa
cli
cmp
push
add
mov
insb
pop
icebp
jbe
pmuludq
ja
mov
stos
jg
inc
loopne
sbb
mov
or
into
hlt
mov
fcoml
bound
mov
insb
cmp
mov
call
mulb
mov
popa
sub
roll
sti
iret
sbb
cmpsb
and
sub
inc
addr16
sub
mov
ds
jmp
cmp
mov
pop
pushf
loope
out
mov
js
mov
jmp
outsb
jle
movsb
adc
inc
jns
cmp
lods
mov
js
aas
xor
loop
xchg
push
dec
dec
lea
mov
rcrl
sub
dec
xchg
call
dec
and
loop
cmp
sbb
stos
sarl
insl
push
jb,pn
adc
xor
aaa
xchg
xor
push
out
repz
inc
xchg
dec
outsl
movsb
cvtps2pd
bound
out
jg
hlt
es
pop
and
orl
or
jnp
mov
fisubl
adc
jo
fsubs
adc
pop
mov
inc
add
bound
push
xlat
sub
dec
pushf
loopne
cmpb
dec
jp
add
stos
test
mov
out
and
jp
cmc
inc
sub
mov
hlt
dec
cmpsb
call
dec
and
cltd
or
fmul
pop
ss
pop
fnstsw
jne
imul
mov
mov
pop
xchg
or
mov
and
xor
xor
mov
hlt
mov
and
and
mov
dec
in
xor
mov
mov
aaa
jo
lret
push
loop
stos
sub
cmp
push
add
lods
mov
or
andb
ret
test
mov
pop
mov
imul
lods
mov
mull
fbld
rclb
push
mov
and
int3
adcb
es
notb
jl
sti
xor
jne
popf
mov
mov
pop
int
push
stc
mov
or
ss
jo
out
lret
scas
xchg
mov
das
mov
mov
mov
dec
mov
pop
divl
xor
xor
push
outsb
shrl
ss
dec
addr16
cs
mov
jg
outsl
sub
nop
fwait
fwait
nop
subb
mov
mov
ja
sub
sti
aam
mov
jns
sbb
jns
xchg
or
mov
adc
xor
es
push
rclb
sbb
popf
xor
shlb
jle
dec
sub
xor
rorb
lods
sbb
lods
add
out
cld
in
adcl
or
ret
mov
pop
fistpl
xchg
ret
outsl
dec
rcl
imul
and
lahf
inc
cli
jbe
out
popa
dec
insl
outsb
cwtl
inc
lahf
xchg
arpl
xchg
xlat
inc
sub
mov
in
lret
adc
ljmp
stos
out
push
adc
mov
in
sbb
popa
cmp
push
mov
xor
sub
pop
xchg
jbe
arpl
iret
scas
loope
pop
mov
cmpsl
xor
cmpsl
or
fwait
cltd
or
adc
sbb
mov
enter
in
sarl
dec
out
fldln2
pop
or
push
push
sub
dec
cld
jl
xor
push
push
jnp
mov
xlat
out
inc
notb
cmp
ret
mov
pusha
test
jp
fmulp
xchg
inc
jns
dec
and
adc
dec
cli
dec
jmp
idivb
les
cmpsb
adc
pop
cmc
add
xchg
sbb
mov
push
movsl
mov
fstp
mov
sub
sub
add
andb
out
add
int
inc
loopne
cltd
adc
movq
push
push
movsb
adc
sbb
mov
cmpl
dec
aaa
jns
shlb
addr16
stos
lea
clc
data16
incl
imul
or
add
addl
sub
mov
inc
ror
xchg
xor
and
sarl
xchg
dec
mov
sbb
sub
das
stos
imul
pop
aas
adc
sbbb
pop
sub
xor
cmpb
push
adc
jmp
jg
jb
mov
sbb
cwtl
loopne
insb
mov
ja
scas
fisubl
mov
jge
xchg
arpl
cmp
and
loop
inc
andl
sub
mov
dec
lret
sub
movq
fldl
push
fxam
xor
add
xor
pop
inc
add
test
icebp
rcrb
rclb
scas
lret
pop
inc
push
rorb
sahf
cmp
xor
jmp
jl
sub
xchg
test
lcall
scas
movsb
in
cmp
sub
outsl
or
and
fs
jns
or
loopne
cmp
nop
push
dec
lcall
push
popa
jp
adc
inc
mov
in
mov
test
fsubrl
loope
push
je
and
outsb
xchg
orl
mov
movsb
enter
mov
jmp
addr16
mov
sbb
clc
out
inc
pop
aad
add
flds
xchg
push
bound
mov
out
mov
dec
add
pushf
mov
xchg
push
lock
dec
push
pop
iret
dec
movsb
xchg
xor
inc
cs
adc
or
js
push
sahf
clc
dec
add
adc
sub
mov
xlat
push
dec
dec
lret
insb
roll
bound
xor
shlb
js
and
ret
std
hlt
cmp
lods
lds
xchg
outsb
lods
mov
movl
jecxz
inc
bound
je
push
mov
or
xor
lds
repz
xor
xor
ds
outsl
fldenv
pop
inc
fdivs
orb
hlt
or
adcb
xchg
inc
jns
xor
outsb
xchg
das
shrl
aas
dec
outsb
aas
pop
adc
mov
add
stos
and
add
enter
call
je
loopne
test
or
stos
cmp
mov
das
push
mov
push
sbb
fcmovnb
pop
add
pushf
pop
push
pop
mov
lods
test
sahf
jns
and
adc
sub
icebp
mov
mov
inc
push
xor
push
jp
daa
cld
movsl
and
imul
cvtpi2ps
sub
xchg
xor
test
mov
sarl
fistpll
clc
insb
data16
or
adc
add
ljmp
inc
repnz
push
jp
and
sub
push
xor
jno
sahf
dec
xor
inc
outsl
lret
mov
jmp
loop
xor
adc
dec
sub
pop
ja
jg
pop
fisubrl
sbb
das
adc
or
inc
pop
in
stos
dec
inc
fcoml
lea
sub
cltd
pop
adc
xor
pop
mov
pop
mov
xor
pop
jb
fisttpl
addr16
dec
sub
mov
fs
int
inc
js
mov
ret
jge
dec
cwtl
sub
dec
popf
popf
ja
add
jns
add
cmp
rsm
orl
leave
push
sbb
popa
cmp
daa
sahf
inc
pmaxub
push
cmp
push
out
cmp
fs
jp
xchg
cmp
dec
mov
and
popa
cld
rorl
cltd
jo
pop
les
lret
cmp
xchg
push
push
mov
popa
sub
lcall
push
dec
push
pop
leave
jo
and
or
inc
fldcw
sbb
adcb
test
xchg
js
test
adc
data16
lcall
sbb
sub
push
xchg
inc
jg
push
pop
xor
addr16
mov
outsl
daa
daa
hlt
mov
js
scas
xchg
mov
sti
insl
ja
test
mov
loop
push
mov
dec
into
mov
cltd
xor
loope
repz
fistps
mov
xor
push
popf
dec
push
push
loop
pop
jecxz
lds
mov
add
mov
call
in
adc
pushf
hlt
jl
andl
fcmovnb
push
inc
ffreep
fdivrl
aad
loop
fidivrl
cmp
mov
xchg
add
cmp
lods
into
sbb
into
adc
cs
push
fimull
bound
imul
rep
cmpsb
jl
in
subb
cmp
dec
mov
xor
stos
dec
jno
pushf
adc
mov
inc
mov
scas
movsl
inc
pop
xchg
fcmovnb
push
pushf
sub
stos
test
leave
mov
clc
cmp
lcall
dec
mov
notb
test
leave
mov
mov
das
clc
ret
and
xor
add
sbb
mov
subl
dec
sbb
push
aas
dec
stos
and
call
xor
aad
lods
icebp
jae
clc
cmpsb
jnp
jle
adcb
dec
push
popf
subb
sub
nop
and
inc
or
sbbl
cmp
sub
pop
xchg
pop
mov
rolb
xorl
outsl
pop
mov
fiaddl
xchg
scas
inc
stc
xchg
pop
aam
pusha
jo
insb
mov
push
add
ret
or
lahf
addr16
sti
test
sahf
das
stos
jne
jbe
std
add
adc
aaa
int
mov
jo
sub
movsl
inc
fs
repnz
in
push
pop
sbb
fsincos
dec
out
ss
aaa
stos
mov
inc
lods
pusha
out
insl
rcrb
adc
cmpsb
out
push
adc
outsb
push
xor
gs
and
cwtl
icebp
dec
ret
decl
int3
sahf
xchg
popa
push
sub
scas
mov
icebp
pop
in
stos
lea
inc
or
and
jns
sbb
idivb
sbb
mov
and
lcall
out
shlb
pop
cmpsl
push
push
test
pop
push
mov
lret
jmp
sbb
mov
mov
fistps
outsl
fs
dec
jg
pop
dec
lcall
mov
mov
int
in
rolb
ds
or
xchg
dec
jnp
sub
pop
enter
or
int3
je
add
arpl
push
pusha
mov
ja
jnp
sahf
add
push
mov
fdivrs
dec
xchg
jp
insl
mov
mov
imul
sti
pop
fsin
daa
popa
loopne
aad
sub
jno
gs
imul
inc
jl
lea
mov
push
imul
mov
shll
xchg
push
add
popf
sub
pop
test
sahf
lods
clc
imul
push
stc
pusha
jbe
stos
je
rclb
and
imul
jbe
inc
test
mov
jp
push
mov
xor
cli
mov
cmp
mov
lahf
dec
leave
pop
cmp
pop
aam
faddl
xchg
adcl
ret
dec
pushf
dec
and
mov
ror
fcmovne
jmp
adc
es
and
decl
inc
leave
xor
sub
sub
ljmp
in
inc
cmp
mov
push
divl
adcb
cmp
sub
mov
sbb
addr16
pop
xor
jge
daa
cli
sbb
jle
and
xor
dec
and
mov
xchg
pop
push
test
push
and
test
test
dec
iret
cmp
pop
data16
or
aas
inc
jge
es
popf
pushf
mulb
xor
mov
popa
or
rcrl
dec
popa
pop
dec
mov
and
add
cli
popf
or
dec
cmp
es
pushf
sar
aas
push
inc
test
ja
fwait
je
in
jno
ds
pop
xor
cmp
jno
cmpsl
mov
xchg
lret
cs
popa
xor
out
add
aad
out
fucomip
and
inc
pop
xchg
sub
test
or
inc
rcll
pop
mov
push
test
dec
cmpl
push
cltd
mov
insl
push
aas
cs
or
add
or
cmp
mov
rolb
cmpb
std
sbb
dec
push
xchg
les
lock
push
xor
inc
nop
sarl
mov
push
sarl
in
je
push
jp
aam
mov
push
mov
jnp
loope
insb
jno
and
adc
and
movsb
push
lret
jl
cmp
hlt
jl
fildll
lret
push
ss
cmpsl
jp
inc
xchg
repnz
add
mov
filds
xchg
clc
xor
test
mov
mov
js
idivl
xchg
out
and
mov
or
loop
inc
shld
xchg
push
push
ret
out
dec
sbb
sbb
test
sbb
xchg
fwait
lahf
rcll
pop
insl
mov
push
out
add
lods
pop
sub
jo
mov
jmp
pop
mov
cmc
in
lock
mov
mov
sub
jno
fcoml
push
jmp
loopne
pop
pop
cmpsb
lcall
stos
adc
mov
jl
cmp
cltd
movsb
mov
inc
and
in
int3
cmp
cli
test
cli
rorl
mov
cld
cli
xchg
or
push
mov
gs
popf
and
jae
jle
pop
and
jns
movsb
xchg
or
mov
mov
lret
ljmp
loope
aad
xor
dec
push
sub
aaa
mov
mov
sbb
pushf
sub
call
call
sub
sbb
outsl
sbb
adc
test
inc
sbb
js
or
int
ss
jp
pop
and
sub
mov
ss
arpl
fstps
subps
and
push
call
std
cmp
dec
sbbb
adc
ret
in
cmpsb
out
pop
loopne
jbe
daa
inc
fidivrs
jmp
gs
cmp
or
adc
in
mov
ljmp
loope
push
push
test
sbb
xchg
outsb
ja
jp
mov
adc
mov
adc
push
pop
sbb
pop
xchg
sbb
js
iret
jb
and
sbb
mov
inc
loope
jno
or
push
cld
push
and
out
pop
mov
mov
lea
rcll
jnp
xchg
sub
sbb
pop
mov
sti
add
rcrb
sbb
dec
inc
scas
jp
inc
sbb
test
jb
mov
cltd
xchg
mov
dec
out
loopne
js,pt
inc
xchg
popa
inc
xchg
jbe
fimull
sarb
jmp
push
sahf
lahf
enter
bound
xchg
test
nop
dec
mov
repnz
dec
mov
fldenv
pop
test
fdivrs
les
stos
aas
fidivs
cmpsb
stos
out
xchg
mov
scas
in
call
icebp
stc
rcll
adc
xchg
cmp
or
or
shrb
mov
mov
mov
sub
cmp
test
jae
push
xchg
je
push
mov
adc
add
lret
sti
push
jg
xchg
ljmp
xor
frstor
fmull
imul
es
pop
xor
inc
mov
sbb
add
dec
fs
pop
lods
and
push
or
addr16
mov
je
dec
ret
mov
enter
ss
mov
imul
inc
push
add
dec
sbb
cmpsl
push
jae
sub
mov
mov
bnd
cld
xchg
push
lods
pushf
outsb
shrb
mov
cwtl
test
sub
out
fidivl
mov
shrb
dec
jp
gs
fisubs
and
cmp
push
test
outsl
push
aad
les
dec
push
aaa
nop
sub
hlt
jo
sahf
or
cmp
ret
mov
xchg
mov
clc
jge
mov
mov
xlat
lock
addl
lcall
sub
push
inc
inc
pop
pop
inc
jmp
ret
adc
pop
dec
lods
popf
inc
insb
xor
cmp
in
mov
sub
mov
enter
xchg
das
clc
add
jno
insl
pushf
xchg
popa
cmpsl
sarb
pop
nop
cmp
aas
and
repnz
mov
pop
cwtl
enter
adc
push
shlb
push
mov
fisubrl
mov
in
int
ret
pop
xor
sub
into
aam
or
mov
mov
inc
push
or
mov
xor
test
adc
inc
jmp
cmp
and
outsl
enter
enter
sub
push
in
jb
push
push
cmc
add
push
popa
std
test
ss
sbb
in
hlt
dec
sarl
mov
iret
jmp
rcr
bound
mov
push
add
fstps
dec
std
pop
pop
mov
jmp
mov
dec
stos
mov
or
call
in
sub
aad
pop
gs
nop
push
jns
sub
cmpsl
add
imul
mov
mov
js
dec
pop
or
or
loopne
cmp
rorb
adc
mov
push
mov
pop
pop
js
leave
mov
pop
insb
lods
data16
lea
pop
inc
dec
mov
je
fadds
fs
push
mov
fsubrs
je
stc
pop
fstl
pop
cmc
sub
cmp
out
xchg
sbb
std
inc
pop
push
and
push
add
movl
rorb
xchg
xorb
enter
cmp
mov
rcrl
outsl
mov
xlat
push
ret
call
in
mov
dec
xchg
data16
scas
cmp
xor
cmp
data16
sbb
pop
in
adc
in
stc
test
jo
nop
js
sub
stos
stos
push
stos
daa
std
mov
fs
int
fstp
jb
mov
dec
mov
pop
js
iret
sbb
mov
dec
gs
in
adc
mov
sahf
scas
shlb
std
rcr
mov
pop
jle,pn
push
push
sbb
ja
mov
js
inc
inc
pop
adc
pop
dec
iret
adc
test
test
cwtl
les
in
sub
in
lods
sub
mov
fs
xchg
aas
test
out
inc
mov
push
mov
fadds
mov
mov
jge
pop
cmc
xchg
outsl
add
cmp
dec
mov
jae
test
push
jmp
inc
pop
fiaddl
insl
push
sbb
sub
icebp
icebp
inc
aad
pop
push
ljmp
cmp
sub
jno
lds
and
cmove
push
enter
inc
ljmp
mov
mov
ret
cmp
xchg
dec
xchg
mov
ret
sbb
lods
push
insb
in
stos
mov
cmp
ret
adc
clc
jno
jns
nop
push
insb
or
push
fcomps
insb
test
scas
dec
jl
fwait
mull
sbb
mov
sbb
mov
test
ss
pop
hlt
flds
jnp
jle
push
dec
mov
imul
in
lds
xchg
idivb
dec
std
lcall
and
push
push
dec
xor
repnz
dec
xchg
or
adc
stc
lock
sub
or
pusha
aam
cwtl
jl
mov
pop
push
dec
pushf
mov
mov
pusha
adc
outsb
mov
and
test
in
decb
dec
sbbl
lea
mov
das
dec
ret
aaa
pop
and
cmp
inc
xlat
and
mov
sub
iret
push
lods
inc
dec
insb
inc
aas
inc
mov
xor
fldcw
and
ret
jno
fwait
test
push
sbb
sub
pop
pop
call
out
fisttpl
xchg
jne
jl
mov
testl
dec
scas
xlat
inc
es
pop
int
insb
nop
pop
mov
xor
insb
int
ds
inc
xor
fidivrl
incb
jb
adc
push
cmc
mov
loope
push
insl
pop
lcall
inc
sbb
scas
idivb
mov
push
adc
push
jae
popf
pop
sbb
arpl
ja
out
add
movsb
out
lods
mov
mov
stc
inc
test
sbb
pushw
xor
mov
call
mov
inc
movsb
test
inc
fsubrs
xor
fildl
pop
xchg
sahf
rorb
fcmovnbe
fcmovu
cmp
int
and
sub
inc
jmp
loop
cld
pop
call
ficoms
and
pop
mov
push
scas
das
and
outsb
popa
in
xchg
xor
lahf
popa
out
ret
jns,pn
mov
adc
jnp
jnp
sub
pop
test
jnp
lds
and
xchg
sbb
lahf
call
add
or
cmpsb
sbb
mov
and
mov
pop
push
lods
fsub
inc
ficoml
nop
xor
notb
and
outsl
ret
inc
sub
dec
loop
insb
fistl
xor
lcall
mov
mov
lock
sbbl
movsb
cmp
cltd
sub
jecxz
sbb
mov
xor
das
cld
mov
xor
testb
xchg
pop
cli
xchg
into
pop
mov
lock
loope
sub
popa
push
xlat
push
jmp
pop
ret
push
and
mov
inc
push
sub
sub
lcall
mov
lret
add
or
pop
lret
cmp
gs
lods
cmp
cmp
push
movsb
outsl
or
and
mov
pop
movsb
insb
pop
shll
pushf
mov
sbb
push
arpl
mov
pop
adc
pop
add
lcall
cs
mov
add
lret
sub
stos
daa
jge
mov
add
call
in
jle
adc
in
addl
mov
mov
jle
mov
data16
mov
movsl
xor
dec
sti
es
sahf
fs
lahf
xchg
addl
pop
inc
int
out
adc
dec
sti
mov
jno
ret
ds
fnstsw
lock
loop
test
hlt
cmpsl
xor
push
or
pusha
jnp
mov
xchg
nop
cld
cwtl
fdiv
cli
test
xchg
and
mov
fdivr
dec
jmp
mov
pop
mov
push
out
mov
pop
xor
sub
pop
sub
lock
dec
into
pushf
sti
mov
sub
rclb
rcrb
pop
mov
cmp
aas
std
fcoms
pop
mov
sub
cli
and
mov
fidivrl
and
bound
dec
ss
cmpsb
inc
dec
mov
adc
data16
pop
adc
add
je
sbb
mov
sub
sbb
push
stos
data16
sar
or
dec
std
popa
iret
sti
jno
inc
popf
push
pop
out
xor
mul
test
test
movsb
call
fst
test
lods
push
mov
jl
pop
push
sub
xor
lods
and
inc
cmp
fmuls
test
jo
test
test
mov
insb
leave
js
arpl
xchg
ljmp
test
mov
pop
ret
lods
lea
adcb
sbb
sbb
push
loop
xor
add
aas
in
cmpsb
or
mov
ret
pop
cmp
rcrb
push
push
pop
addl
xchg
mull
sub
pop
or
cmp
sub
cmp
ss
mov
mov
pop
add
daa
aam
inc
lret
mov
test
rcll
rorb
cltd
cmp
push
or
sbb
popf
stos
inc
cmpsb
mov
jg,pt
xor
mov
lods
pop
pop
in
cmp
cltd
into
push
icebp
js
test
fwait
cmpl
lahf
jp
dec
push
mov
xchg
aas
insb
xor
inc
pop
pop
addl
nop
push
cmp
pop
xchg
adcl
pop
nop
pop
or
mov
pop
pushf
cld
mov
inc
arpl
xchg
dec
add
xchg
cli
adc
dec
ljmp
into
fs
popa
push
push
int3
cmpl
lea
pusha
outsl
mov
cwtl
dec
jle
insl
lods
dec
pop
subb
push
mov
movb
jle
test
push
cmpb
dec
out
lret
addl
enter
cmp
jp
ja
push
xchg
pop
inc
jae
subb
add
js
jno
jns
cmpl
or
mov
gs
mov
stos
dec
loop
insl
jle
mov
jne
andb
xorb
mov
cmp
orb
aaa
sahf
fsts
fwait
jg
mov
mov
push
out
cli
mov
push
dec
fnsave
cmpsb
xor
aam
addr16
adc
mov
shlb
aam
pusha
clc
fcompl
mov
sahf
jmp
mov
sahf
jbe
jnp
inc
loopne
mov
or
js
jmp
inc
loopne
mov
lret
mov
mov
pop
and
push
enter
mov
cmp
xchg
loop
pop
mov
adc
rcrb
in
jl,pt
jge
jle
out
test
xchg
pop
inc
mov
inc
int3
sub
inc
mov
in
or
sub
subb
pop
jmp
cmp
ja
icebp
imul
sbb
ljmp
in
aad
cmp
dec
mov
sub
mov
aas
test
lea
arpl
push
ret
call
pop
xor
pop
sub
fdivs
dec
jp
add
mov
push
stos
out
cmp
jl
in
inc
out
xchg
mov
lcall
fsubl
flds
push
int3
bound
shrb
and
repnz
mov
mov
arpl
out
rcl
add
fs
call
sub
cltd
mov
pop
lret
or
xchg
fidivrs
dec
mov
pop
pop
and
test
dec
mov
xchg
mov
cmpsl
inc
pop
pop
in
lds
mov
rcrl
imul
div
or
sub
xchg
push
insb
mov
cmp
iret
add
mov
push
rcrb
dec
pop
pop
sub
std
or
push
loopne
push
mov
push
cmpl
mov
into
insl
pop
inc
int
iret
fistl
push
jo
adc
out
sti
pop
gs
scas
cltd
gs
dec
mov
jge
inc
adc
sbb
jmp
xchg
out
or
test
or
stos
mov
adc
bound
aam
in
bound
or
cmpsl
popf
xchg
mov
push
pop
jg
sub
test
das
shlb
mov
dec
mov
int
inc
xor
ja
insl
ja,pn
sub
jl
mov
ds
sahf
sahf
xchg
pop
xor
push
cmp
pushf
pushf
cmp
ss
stos
jns
ds
adcl
dec
sbbb
cmp
je
loope
loope
out
xor
push
js
int
fwait
pop
cltd
jmp
mov
testb
popf
ds
pop
loop
mov
pop
inc
jg
outsl
lret
icebp
ret
dec
aam
imul
mov
mov
add
or
lods
xor
push
lcall
iret
mov
adcl
outsl
xlat
xor
pop
sti
xchg
movsb
xor
and
push
jo
das
gs
xchg
lret
xor
movsb
mov
mov
inc
es
mov
jo
dec
mov
push
subb
mov
push
cmp
lods
sub
aad
sub
jecxz
push
xchg
iret
rclb
cmp
dec
loope
adc
xor
mov
lahf
mov
cmpsb
cltd
push
jnp
inc
ret
add
scas
dec
mov
sbb
ja
movsl
cmc
int3
push
inc
sub
jp
in
pushf
jo
dec
push
js
scas
das
mov
mov
jb
lods
cmp
js
mov
jnp
int
jae
fisubs
mov
sub
push
and
inc
popf
sub
das
dec
leave
movl
mov
jae
outsl
add
jns
adcl
arpl
in
inc
test
inc
inc
mov
mov
push
cmp
xor
daa
sbbl
push
jnp
in
sahf
scas
sub
lods
out
shr
test
subb
jae
mov
lret
movb
sahf
sub
in
lcall
xchg
ret
dec
cmp
mov
pop
jno
mov
mov
es
scas
lahf
pop
push
sbbl
xor
fs
jecxz
sub
je,pt
and
sti
movsb
xor
les
push
mov
push
in
dec
clc
jno
test
xor
bound
xor
andb
lcall
fidivrl
adc
and
sahf
push
lods
ds
mov
decb
lds
popf
les
push
xor
mov
push
fstp
ret
push
cmp
outsb
inc
lea
pushf
cmp
cmp
xchg
clc
xor
sub
or
inc
in
ljmp
push
mov
or
inc
int
jnp
pusha
lock
cmc
sub
dec
bound
test
nop
sahf
test
dec
push
push
pop
and
outsl
xchg
dec
mov
outsl
sahf
inc
in
dec
sub
xchg
mov
push
test
xor
movsl
cwtl
ficoms
mov
ljmp
mov
jno
xor
jge
mov
pop
push
mov
iret
arpl
or
push
inc
or
push
icebp
jno
out
xchg
inc
jnp
pop
push
jnp
sarb
pop
sbb
or
lcall
adc
sbb
outsb
xor
mov
js
add
add
insb
mov
insb
insl
push
outsl
sbb
test
pop
lods
loop
push
cmp
sti
pop
fmuls
lret
dec
outsl
xchg
mov
jmp
jg
pushf
pop
popf
sub
mov
dec
jne
push
test
mov
icebp
cmp
fbstp
mov
cld
sbb
jg
sub
xchg
aad
fwait
mov
out
jns
sub
lret
mov
push
jl
fprem
int3
nop
fwait
ret
mov
push
inc
jle
pop
mov
in
popf
pop
jl
pop
pop
les
mov
mov
pop
sbb
js
loope
xlat
leave
dec
fcmovne
add
rcll
hlt
cmp
insb
mov
ret
in
out
lahf
sub
mov
add
data16
mov
sahf
in
lods
lahf
jge
cmpsl
loop
pop
nop
das
in
cmp
scas
jp,pt
pop
scas
loop
add
lret
mov
add
dec
and
in
or
pop
fs
cld
push
test
mov
cmp
incl
add
fbld
stos
jo
jle
sbb
sub
pop
pushf
jle
ret
sub
pop
std
inc
push
pop
gs
in
fstpt
cmp
ja
mov
scas
ljmp
dec
fsubs
push
gs
es
push
jb
adc
mov
cmc
dec
sub
push
mov
int3
dec
cmp
clc
cmpsb
mov
mov
pop
pop
push
mov
ss
fs
sub
imul
cltd
repz
frstor
lret
or
xchg
mov
mov
push
sbb
sub
aaa
push
dec
dec
adc
out
and
xchg
je
shrl
popf
sub
cli
sti
int
outsb
cmp
mov
add
div
mov
jmp
cld
lret
sub
jp
stc
jl
scas
xchg
mov
cmc
cmpl
mov
iret
notl
jno
xchg
faddl
test
aam
call
push
imul
or
pushf
dec
mov
jmp
inc
stc
jl
stos
out
pop
repz
mov
pop
hlt
dec
push
inc
shlb
inc
sti
or
sub
mov
cwtl
mov
cmp
push
mov
xchg
add
dec
inc
jl
push
fsubrp
xor
push
inc
pop
lea
inc
jmp
mov
insb
les
leave
sbb
pop
add
fadds
xor
sub
outsb
insl
lcall
mov
adc
ds
jns
test
mov
outsl
xchg
dec
xchg
jl
lret
sbb
arpl
imul
lret
rcrl
sti
mov
loop
and
mov
and
insl
push
pop
gs
ds
pop
mov
mov
dec
bound
inc
jmp
xorb
es
outsb
fs
aas
mov
jae
xor
stos
imul
add
adc
cmp
test
mov
jno
loope
aad
xchg
addr16
pop
push
das
push
dec
cmp
popa
xchg
dec
stos
aas
sbb
mov
repz
jns
xchg
shll
iret
lret
push
imul
cmp
nop
mov
into
out
push
insb
nop
xlat
js
pusha
mov
out
cs
jl
mov
sub
out
xchg
inc
mov
imul
test
fidivrl
pop
inc
in
clc
ljmp
xchg
insb
xchg
test
icebp
mov
xor
out
mov
lcall
aas
push
dec
ljmp
lret
jmp
mov
fs
cmp
ret
sti
mov
pop
mov
mov
int
pop
and
sbb
fiaddl
push
test
cli
xchg
bound
aas
iret
pusha
scas
loopne
cmpsb
xchg
scas
in
stos
ljmp
inc
or
and
or
data16
add
lock
orl
jge
xchg
push
mov
xor
repnz
int
jnp
cmp
inc
inc
bound
fdivs
test
js
pusha
push
jmp
jns
stos
xchg
inc
and
sub
loope
mov
inc
mov
pop
lods
dec
xchg
inc
data16
push
icebp
mov
xlat
pusha
xor
loopne
mov
sub
xchg
jle
pop
mov
mov
mov
push
lds
and
int
stos
push
into
cs
sub
adc
inc
int
pusha
hlt
out
inc
fdivl
add
orl
pop
push
push
jne
std
in
push
ret
push
pop
gs
gs
outsl
fnstcw
lcall
loopne
jle
outsl
sbb
popf
cmp
test
out
daa
js
push
dec
inc
push
das
and
inc
push
push
xchg
lret
mov
lret
jns
xor
jge
xchg
xchg
sbb
jl
ret
cltd
jae
dec
mov
outsb
cmpb
mov
ret
mov
out
pushf
mov
loop
call
jne
pop
das
imul
adcl
cmpsl
xor
insb
enter
xor
sbb
ds
and
rorb
and
mov
xchg
cld
inc
cli
movsb
inc
andl
or
sarl
jmp
mov
inc
jbe
and
int
repnz
inc
mov
outsb
bound
pushf
push
jnp
test
int3
mov
mov
xlat
pop
inc
mov
push
pop
lds
sub
or
pop
inc
lret
xchg
int3
cli
fisttps
or
sbb
repnz
fisubrs
mov
mov
mov
push
fs
nop
popa
mov
mov
jg
and
sub
jmp
push
jnp
scas
filds
sahf
inc
enter
in
mov
stos
push
push
dec
lock
xchg
sub
clc
jne
adc
cli
and
roll
loopne
addr16
cmpsl
jecxz
cwtl
xchg
aas
push
or
fdivrs
or
mov
lods
cli
decl
addr16
sbb
push
cs
mov
mov
popl
ja
ss
in
and
cmp
dec
shrl
scas
int
out
jge
push
pop
shlb
inc
bound
xor
sub
jecxz
pop
push
or
dec
push
and
int3
dec
xchg
es
bound
push
scas
cmc
lcall
jl
addr16
and
test
fisubs
jmp
and
add
sbb
pop
jle
fs
lods
mov
push
jmp
in
sub
gs
rcr
rolb
ljmp
daa
mov
mov
ficomps
sub
pushf
mov
or
in
dec
cmp
cmp
adc
imul
jecxz
dec
lea
jl
loopne
push
ja
test
js
movsb
mov
mov
stos
cmp
jge
and
lcall
mov
rcrl
add
sub
inc
outsb
leave
push
pop
push
test
mov
lods
aas
fimuls
xor
popf
jmp
mov
xor
je
inc
popa
call
jge
cld
cmpsb
and
sbb
dec
das
stos
movsl
pop
int
arpl
dec
jb
scas
xor
xchg
adc
movsb
and
dec
ja
cwtl
cmp
cwtl
pop
repz
ljmp
int3
rcrb
insb
sbb
fadds
lock
inc
jb
or
jbe
dec
and
movsb
mov
repnz
cmpsl
pusha
xchg
pop
ret
divb
std
inc
mov
iret
xor
jbe
out
mov
dec
lret
pop
orl
test
rolb
movsb
fwait
xchg
jbe
or
ja
iret
stos
xor
sub
adc
loopne
jb
imul
pop
sub
cmc
sub
pusha
iret
cld
or
pop
aas
adc
and
sbb
sbb
lods
repz
and
mov
fisubrl
mov
out
lock
inc
jbe
arpl
sahf
out
test
pusha
xor
sub
imul
sbb
sbb
in
in
mov
icebp
cmp
pop
adc
leave
jnp
sub
inc
sbb
dec
cmp
cwtl
lret
dec
xchg
jl
pop
jmp
js
jnp
cltd
inc
insl
inc
sub
xchg
insb
add
mov
xorl
adc
fsubrs
jg
scas
aas
in
lods
mov
incl
ja
fwait
xchg
mov
clc
push
jbe
cmpsl
mov
gs
call
push
mov
xor
insl
or
scas
imul
push
lret
sub
fistpl
mov
inc
xor
std
int3
adcl
add
jnp
dec
sub
cmp
enter
xchg
cmpsl
inc
push
mov
sub
rolb
jge
mov
xor
stc
fwait
sbb
loopne
pushl
xor
xchg
jo
repnz
and
sub
cld
stos
inc
lret
dec
fs
lcall
mov
repz
out
arpl
push
adc
pop
fwait
movsb
sub
popa
or
mov
ljmp
imul
pop
je
sub
cmp
pop
pop
popa
cmp
pop
ret
pop
jmp
xchg
int3
mov
push
dec
inc
sbb
imul
lock
rcrl
pop
out
daa
fmull
add
add
mov
imul
out
aas
jp
xchg
vpminub
test
jbe
or
xor
mov
ficoms
mov
stos
xchg
jle
push
xor
dec
xor
fstps
mov
out
inc
pop
call
sahf
repz
jae
inc
adc
in
cs
push
sub
sub
insl
pop
inc
shll
stos
sbb
inc
mov
sbb
push
rolb
movsb
inc
mov
lods
inc
pop
xor
popf
pop
outsl
nop
jo
pusha
add
sbb
inc
mov
push
sbb
jmp
pop
fs
inc
mov
xchg
pop
inc
lea
xchg
jae
cmpsl
push
dec
lods
xor
xchg
fs
pop
xor
addr16
aad
ss
int3
jle,pt
inc
push
lret
inc
pop
xor
cmpsl
pop
xchg
sbbb
fcomps
xor
test
icebp
pop
cmp
dec
dec
and
fisubs
xlat
out
sub
fstpt
or
push
jo
lret
cwtl
fimuls
int
pop
add
mov
and
push
inc
pop
call
ja
test
cmp
adc
repz
outsl
inc
shlb
sub
sub
push
lcall
dec
mov
pop
cmp
mov
add
adc
outsl
lret
cmpsl
clc
adc
inc
out
or
mov
push
call
cmp
and
and
inc
sti
scas
movsl
mov
inc
test
sbb
sbb
aaa
bound
mov
lret
ficoml
cmc
push
mov
cld
ret
fdivrs
in
sub
aas
push
imul
jae
or
jmp
pop
lea
and
sbb
add
aad
add
push
out
fcomp
xlat
test
push
sub
jo
mov
rcrb
into
xchg
or
out
andl
push
or
dec
mov
xchg
jae
dec
fbld
bnd
push
xchg
bound
jecxz
sub
int3
mov
dec
dec
pop
sbb
xchg
cmp
cmp
jno
xchg
cmpsb
and
jb,pn
insb
je
lods
or
daa
dec
fisttpll
icebp
xchg
subb
arpl
jb
cwtl
loopne
ds
push
iret
jnp
mov
xchg
push
mov
cmp
mov
inc
jne
std
mov
xor
jnp
cmp
push
sub
fcmove
aaa
pop
pop
and
fsub
pushf
stos
mov
pop
dec
int
popa
and
cld
push
dec
or
jmp
sub
nop
lea
addr16
into
mov
jbe
mov
xor
push
cmp
jbe
sub
es
push
in
inc
and
mov
jp
loope
daa
cmp
cmpsl
jg
ret
movsb
jecxz
leave
inc
ret
dec
push
adcl
orl
xor
mov
xchg
push
pop
rcll
cmpsb
cld
scas
xchg
sbb
dec
sbb
push
subl
int3
push
cmpsb
add
jne
lret
jb
jb
xchg
sbb
in
xor
addr16
dec
xor
cltd
ret
xchg
insl
inc
push
sti
add
dec
arpl
pop
lret
jne
pop
inc
dec
sahf
loope
push
call
jg
rorb
push
dec
xor
repnz
sub
mov
clc
test
inc
xor
in
inc
popa
sti
lret
fiadds
insl
cmp
shrb
leave
test
shrb
mov
std
aas
rorl
pushf
and
aas
inc
js
xor
pop
in
or
loopne
push
fdivrs
pop
repz
jmp
jle
xchg
lret
sub
call
sub
sub
enter
std
sbb
mov
push
test
stc
adc
pop
xor
jg
mov
mov
lahf
test
jle
bound
add
mov
cli
mov
xchg
inc
sbb
ds
xlat
mov
push
in
cmp
insb
ds
repnz
and
pushf
mov
and
mov
push
mov
cmc
sub
nop
inc
push
ret
push
mov
sbb
mov
pop
insb
add
jg
cmpsl
clc
nop
loopne
jge
pop
dec
enter
inc
and
inc
inc
test
loopne
pop
adc
sbb
into
imul
xchg
xor
adc
jno
outsb
inc
xchg
cli
pop
int3
jmp
or
call
std
inc
cmp
xchg
pop
xchg
test
adc
xor
ret
inc
sbb
sbb
xor
mov
mov
pushf
cmp
les
push
xchg
push
addr16
pop
adc
mov
imull
adc
mov
es
les
mov
jl
sbb
fwait
lods
ljmp
addr16
mov
jge
push
in
xor
inc
std
sub
add
push
lods
sarl
push
aaa
dec
js
cmp
inc
lret
jne
inc
add
pop
cmp
xor
xchg
pop
shl
lods
pop
out
ficoms
cmpl
cmp
fld
mov
xchg
sbb
sarb
cmp
mov
inc
out
aaa
popl
rcrb
jmp
add
mov
mov
mov
pop
jmp
push
xor
popf
sbb
mov
sub
fcmovb
pop
mov
subl
add
pop
jg
imul
xchg
jnp
sahf
xchg
jle
and
dec
popf
sub
bound
cmp
mov
jnp
lock
shrb
dec
int
jp
mov
adc
jns
aad
stos
inc
not
mov
scas
fdivp
xchg
xor
shll
cmp
mov
and
xchg
imulb
sbb
mov
out
push
bound
insl
push
call
leave
std
arpl
push
add
cwtl
ret
sub
lcall
in
jge
insb
test
fstl
insl
adc
add
testl
in
sarl
adc
or
dec
mov
and
pop
and
xchg
xor
dec
jle
loopne
pop
inc
push
fwait
inc
mov
mov
test
inc
repz
aam
ljmp
decb
adc
inc
cmp
jns
sub
dec
data16
adc
pop
insl
xchg
inc
aas
sbb
jae
imul
xor
ficomps
and
xchg
push
jge
lret
orb
sbb
cmp
xchg
and
jge
insb
inc
aas
pop
lds
add
jno
dec
aas
mov
or
push
insl
sub
mov
lcall
mov
mov
scas
leave
test
fstl
popa
jg
or
movsl
jb
iret
outsl
sub
sub
adc
das
lret
stc
pushf
aaa
paddd
idivl
test
mov
xchg
test
xchg
inc
stc
jmp
testl
ja
push
insl
pushf
frstor
and
call
mov
xor
mov
xchg
inc
and
jge
into
pop
lods
push
jnp
inc
xchg
inc
sbbl
popa
xor
test
pop
xlat
sub
jns
andl
out
dec
gs
pop
dec
lcall
push
addr16
mov
xor
ss
dec
inc
sbb
pop
xchg
cmp
add
repz
dec
push
push
es
pop
js
push
inc
ljmp
repnz
std
lods
mov
popa
sbb
mov
push
iret
adcl
sub
dec
jl
adc
or
push
pop
cli
dec
cs
pusha
insb
push
insb
jp
add
data16
insb
push
mov
xor
adc
loope
shlb
cmp
aas
int3
ja
mov
pop
lcall
lahf
dec
mov
jns
jbe
mov
ds
pop
lahf
inc
daa
and
jno
int3
xchg
inc
ret
xor
mov
adc
jb
mov
inc
lea
push
into
stos
and
cmp
push
pop
movaps
repnz
div
dec
inc
dec
ror
mov
andb
icebp
sarb
jb
sbb
pop
push
sub
fwait
xor
cmp
and
jmp
and
add
jb
dec
sbbl
pop
das
stos
mov
repz
popa
xor
dec
sbb
ljmp
aaa
jecxz
pop
aaa
nop
ret
movsl
push
xlat
mov
jmp
shlb
mov
mov
lods
push
xor
sbb
inc
pushf
inc
mov
and
nop
xlat
pop
sbb
loope
icebp
ds
loopne
push
sub
adc
mov
daa
jne
clc
pushf
xchg
sub
inc
push
push
inc
or
ds
cwtl
stos
and
fldl
inc
iret
jbe
call
inc
pop
jle
addr16
push
pop
das
xchg
js
lods
rcrb
movsb
xor
mov
out
push
outsb
enter
shll
clc
arpl
jp
insb
or
push
push
ljmp
jl
test
mov
and
xchg
lods
add
dec
mov
inc
mov
roll
jl
and
jnp
jno
add
addr16
push
inc
xchg
mov
cmp
cmp
xlat
orl
jl
and
test
std
fisttps
dec
stos
enter
fadds
add
cld
movsb
out
jno
push
call
idivb
adc
arpl
cld
dec
and
jnp
stc
jo
cmp
mov
ror
cmp
inc
dec
fcompl
dec
sub
sub
aam
int
inc
adc
mov
repnz
add
fbld
cli
iret
adc
sub
lahf
rcll
ret
ljmp
sbb
dec
sbb
test
addr16
cli
add
xchg
in
jmp
push
xchg
fs
ljmp
fistps
cli
outsl
sbb
cwtl
push
sbb
sbb
mov
push
ss
cmp
cmp
or
jp
xlat
mov
xor
popa
mov
outsb
pusha
sub
mov
aam
xchg
bound
gs
icebp
hlt
out
outsl
xor
cmp
test
push
fldenv
xor
fsubrs
sahf
loopne
xchg
inc
movsb
dec
push
in
push
adc
fmulp
in
js
loope
orb
push
scas
notl
xchg
dec
insb
push
idivl
mull
jle
lret
sub
cmpsl
jp
xor
mov
xor
cmp
push
js
out
xchg
jle
lock
sbb
push
mov
das
jb
repz
loopne
outsb
ret
pop
and
cmp
or
jo
fsubl
jl
dec
xor
push
mov
inc
push
and
xchg
jge
mov
pop
cltd
sub
push
xor
dec
pusha
adc
outsb
mov
mov
fisttpl
es
xchg
fxtract
adc
sbb
cmpl
push
notb
test
mov
cmp
push
push
mov
push
xchg
test
mov
sub
jae
mov
insb
cmp
ret
aas
rclb
inc
ss
or
xchg
gs
pop
adc
mov
mov
call
je
inc
negb
add
flds
pop
push
cmpb
push
in
je
lret
inc
push
outsl
inc
inc
aad
inc
push
sub
jmp
in
int
or
push
dec
pop
repz
cmc
and
adc
idivl
push
jmp
push
jle
mov
ja
popf
or
es
dec
inc
xchg
xor
cmpsl
mov
sub
int
xchg
lret
repnz
add
mov
fsub
xchg
dec
dec
les
sub
mov
adc
sub
mov
addl
inc
push
xor
mov
stc
mov
faddl
dec
xor
ss
pop
sahf
lods
mov
or
cmp
test
inc
imul
lret
jb
mov
sahf
cs
cmpsb
out
add
mov
daa
jp
sbb
arpl
sub
outsl
mov
dec
das
arpl
cli
rorb
jno
das
pop
sub
inc
mov
int3
push
fisubl
pop
sarb
jmp
xchg
inc
aas
mov
sub
insl
jp
imul
jb
sahf
dec
mov
shlb
sarl
dec
mov
xchg
sbb
rcrl
inc
xchg
insb
and
xor
cmp
jno
jnp
mov
inc
jecxz
jecxz
es
adcb
mov
sbb
cld
and
jge
mov
push
fmul
movsb
fisubs
or
mov
inc
mov
dec
mov
std
sbb
adc
aas
je
inc
push
jl
es
sub
cmc
ds
push
movsb
stos
jno
or
pop
movsb
out
lods
lret
adc
push
out
mov
xor
imul
icebp
fwait
mov
aas
mov
lret
mov
inc
inc
xor
bound
inc
pop
mov
mov
pop
ret
movsl
fldl
cmpsl
cltd
pop
repz
mov
jne
in
pop
mov
or
ljmp
and
cmpb
insb
out
and
hlt
sbb
sbb
jecxz
cmpsb
in
in
mov
mov
cs
xor
clc
in
ds
fmull
rol
popf
addr16
sub
mov
inc
adc
int
in
jl
mov
roll
mov
dec
pop
cltd
dec
mov
sub
xchg
sarb
mov
nop
shld
mov
fwait
in
xchg
aad
popa
dec
sub
lret
or
int3
mov
popf
jae
mov
and
jg
jbe
xchg
xchg
jnp
call
mov
cwtl
xor
mov
cmpsb
mov
test
fbld
pop
sub
ja
cmp
arpl
mov
sti
inc
outsb
pop
cld
push
int3
dec
cld
inc
in
mov
mov
jno
xchg
loopne
xchg
push
push
ljmp
stos
stc
mov
pop
inc
sub
arpl
mov
das
sbb
addr16
push
push
cmp
mov
bnd
inc
xchg
and
movsl
adc
shrl
loope
mov
pop
or
pop
mov
push
sbb
in
out
mov
cmp
pop
sbb
lahf
outsb
sbb
sahf
cwtl
lahf
dec
fcmovbe
sub
insb
cmp
pop
jge
in
jae
pop
dec
inc
pop
dec
inc
in
xor
push
popa
xor
push
sbb
ret
sbb
rorl
test
cltd
dec
jp
sahf
or
dec
or
xor
insl
cs
sub
enter
sub
pusha
sub
mov
dec
int
repz
bound
scas
jne
push
ss
and
test
clc
cld
mov
imul
rorb
xchg
mov
lret
pop
jp
mov
fildll
fstpl
jnp
insl
lahf
mov
ja
pusha
scas
les
push
adc
or
and
shlb
push
or
stos
inc
mov
mov
push
lods
scas
push
pop
push
jg
fmuls
lcall
inc
inc
sarl
mov
inc
je
mov
xchg
mov
bound
andb
ret
jo
idivb
or
xor
pop
fidivl
push
mov
xor
sbb
xchg
jbe
xchg
std
icebp
push
daa
sbb
push
pop
lret
jp
pop
jae
or
mov
mov
pusha
dec
cld
pminsw
add
popa
sahf
arpl
and
xor
or
call
sub
in
xchg
loope
sub
adc
sbb
xchg
push
inc
inc
inc
cmp
pushl
das
sbb
iret
and
add
movsb
xchg
or
jge
lcall
xor
in
out
out
jmp
fstps
xor
loope
push
pop
dec
push
cmpsl
cld
add
mov
arpl
and
sbb
cwtl
imul
imul
int3
dec
xchg
xchg
cmp
mov
in
push
push
cmpsl
sbb
pusha
sub
xor
pop
pop
iret
mov
jmp
xor
push
jp
je
cli
and
add
jnp
or
mov
push
dec
or
idivb
test
stos
mov
shll
icebp
fidivrs
add
jmp
jnp
es
divb
pop
fnstsw
sbb
pop
inc
xchg
xor
js
adcl
popa
sbb
push
add
inc
stos
or
call
cmp
cmp
sub
pushf
or
fdivrs
scas
pusha
add
jle
cmpsl
sbb
inc
mov
jbe
or
pusha
mov
movsb
inc
mov
pop
jg
dec
clc
jns
pminsw
jl
lods
jns
mov
mov
pop
fwait
es
or
push
or
xor
pop
and
xor
in
sub
adc
outsb
arpl
jns
inc
inc
adc
xlat
int
aad
outsl
adc
and
loopne
jp
add
out
js
pop
aas
jne
in
cld
stos
sbb
push
add
imul
es
lahf
adc
adc
ret
jb
or
cmpsl
push
sub
sub
das
mov
inc
leave
pop
xchg
adc
ret
repz
dec
cld
mov
mov
inc
mov
loopne
push
mov
stos
inc
lahf
pop
iret
fadds
leave
pushf
cmpb
inc
test
push
jp
sbb
sbb
ljmp
sbb
mov
cmpsl
div
mov
dec
cmp
xchg
imul
fistl
rcll
stos
pushf
lcall
xor
jns
pop
push
subl
cmp
rcrb
mov
cltd
lahf
int
addb
jl
inc
popf
xor
xor
adc
push
push
mov
cwtl
dec
mov
add
xor
sbb
mov
roll
mov
adc
outsb
xchg
ja
mov
adc
adc
jecxz
xor
loope
lods
sbb
in
icebp
inc
sbb
scas
jb
enter
shr
adc
out
jge
rorl
jp
push
and
mov
insl
aam
push
loope
cs
fistps
xchg
lret
sub
enter
iret
cmpsl
addr16
js
mov
test
js
adc
js
mov
pop
int
adc
sbb
sub
arpl
testb
cmp
jg
dec
and
popa
sahf
push
fucom
xor
lret
in
pusha
xor
test
jge
jae
inc
addl
pusha
cmp
cmpsb
jg
jae
andb
in
jp
xchg
js
hlt
mov
lret
ja
mov
add
addr16
push
mov
shrl
sbb
test
and
jp
lahf
cld
mov
push
sbb
mov
lea
aas
insl
or
pop
leave
cmpsb
les
out
subb
lahf
dec
lcall
loopne
jne
and
icebp
xchg
inc
inc
xor
loop
test
pop
push
dec
pop
jmp
adc
add
or
jae
lret
cltd
pop
in
enter
xchg
cwtl
or
filds
sub
aaa
sar
push
jnp
aaa
fbld
sub
scas
pop
test
jmp
xlat
stos
fnstcw
mov
js
xor
fstps
or
test
pop
jmp
inc
pop
test
dec
arpl
into
jne
ds
mov
iret
loop
cmpb
cmc
popa
mov
fldcw
imul
out
int3
inc
out
out
addl
jmpw
cli
mov
movsb
icebp
mov
push
cmpb
imul
jne
aaa
jp
int
push
adc
bswap
jg
stc
pop
outsb
or
mov
xlat
mov
arpl
enter
test
adc
or
enter
hlt
lcall
out
dec
sub
sbb
lea
cmp
or
inc
adc
fisttpl
sub
mov
xor
jp
pushf
nop
adcl
aaa
inc
lock
rcl
xor
xor
cmp
jl
aam
outsl
shrl
mov
mov
mov
push
push
rcll
test
inc
call
xor
ds
or
mov
pop
pop
push
mov
lret
dec
ja
adc
fsubl
nop
dec
adc
push
adcb
dec
repz
outsb
dec
xor
mov
push
cli
xor
xor
pop
popa
loop
jne
push
push
pop
ror
imul
jnp
dec
call
mov
cmp
push
cwtl
dec
cmpsb
xchg
pop
or
adc
mov
pop
mov
jno
bound
xchg
push
cs
and
hlt
cs
jg
xor
xor
rorb
fiaddl
pop
cltd
push
pop
je
dec
lcall
cltd
test
add
add
out
nop
popf
mov
sahf
sub
lods
inc
sbb
js
mov
sub
stos
in
cltd
ret
dec
push
int
ljmp
subb
imulb
cmp
sti
movsl
sbb
leave
fs
adcl
data16
je
xchg
fwait
xor
or
jns
adcb
push
aaa
out
lds
pop
mov
push
and
push
xchg
jge
aaa
jg
ja
insb
jo
fwait
push
int3
xlat
test
sub
mov
ret
add
test
movsl
pop
mov
adc
movsb
inc
js
insl
fimuls
jle
xor
sbb
cltd
mov
xor
orb
loop
inc
divl
mov
js
push
stos
nop
jmp
adc
fdivrl
test
inc
jle
push
pop
subl
test
push
mov
mov
cltd
cmp
xlat
mov
repz
pop
ret
inc
test
fs
test
xchg
insb
je
scas
mov
pop
add
cmp
in
bound
jns
jmp
aam
js
xlat
ja
mov
popa
adc
push
pushw
lahf
pop
adc
insl
sarb
mov
lret
cli
cmp
stc
cld
adc
sarl
leave
adc
mov
loop
xor
push
and
mov
and
inc
jmp
xchg
pop
xchg
addb
sbbb
jbe
cwtl
jg
iret
mov
cmp
push
mov
dec
repnz
bound
rorl
inc
jecxz
inc
addl
cmp
or
pop
in
mov
into
pop
aas
jnp
sbb
lods
jnp
and
and
lea
frstor
jmp
inc
pushf
pop
setno
call
sub
popf
mov
into
cmp
or
jns
sub
adc
ljmp
in
xor
jp
repz
out
mov
dec
cmp
and
leave
inc
aas
mov
pop
mov
sbb
fld
mov
in
dec
sbb
dec
sbb
test
mov
cmc
enter
sbb
cmp
orl
pop
movsl
jmp
and
xor
sub
lahf
in
mov
push
popa
movsb
in
inc
hlt
pop
aaa
xchg
lcall
mov
jecxz
mov
jnp
xchg
bound
and
icebp
dec
xor
int
das
inc
fscale
mov
mov
pop
scas
push
ss
aaa
fisubrs
adc
pop
xor
and
xor
cmp
movsb
cmp
sbb
add
fcoms
out
ljmp
int
mov
and
andb
fisttps
pop
cmpsb
pop
fldcw
popa
mov
push
mov
push
xor
push
jb
test
pop
cs
popf
rclb
fs
int
pusha
pop
pop
loope
sbb
ja
mov
sahf
fs
mov
sub
mov
mov
mov
outsl
daa
negl
mov
rcrb
jle
inc
adc
inc
push
test
pop
or
xchg
ss
fdivr
dec
push
pop
add
cld
cmp
push
fldl
cmp
int3
ret
movsb
cmp
jge
lods
das
shll
adc
xor
pop
into
and
push
mov
sub
cmp
push
stos
push
inc
inc
aad
test
pop
xor
mov
lahf
in
sub
adc
or
call
mov
push
xchg
push
or
lahf
push
lods
fmuls
loope
je
xor
clc
lock
psubq
jo
mov
xchg
stos
idivl
adc
cltd
add
jnp
insb
sbb
mov
test
ret
insb
push
dec
or
iret
sahf
mov
popf
pusha
ss
push
xchg
cmp
mov
mov
jge
sbb
sbb
jecxz
sub
scas
dec
mov
fmull
and
adc
mov
jae
mov
sub
jns
inc
fcmovnbe
into
fs
in
mov
ret
mov
cwtl
scas
jb
pop
xor
jge
jbe
popf
cmp
shrb
loopne
test
inc
loopne
pop
pushf
leave
lahf
iret
mov
jg
cmp
and
xchg
cmp
jno
rcr
adc
in
sti
lcall
stc
mov
jecxz
and
xchg
aam
outsb
sbb
sbb
out
pop
rcl
sbb
cld
push
das
and
push
mov
push
pushf
arpl
in
xor
gs
stc
ror
in
inc
and
pop
fisubrs
add
sub
aad
sti
inc
jno
fcomps
jp
adc
or
je
pop
cwtl
loopne
imul
inc
jo
hlt
out
fistl
fs
inc
jmp
dec
cmpsb
fimull
in
cmp
jg
enter
mov
mov
data16
lret
fcoms
test
leave
pop
mov
lods
lahf
sti
fwait
dec
jp
push
in
mov
rolb
push
mov
out
mov
inc
pusha
mov
push
scas
test
fildll
inc
push
adc
ja
dec
sahf
mov
push
iret
pop
xchg
rsqrtps
popf
fwait
clc
pop
xchg
aas
sahf
pop
push
inc
inc
nop
and
xchg
or
and
fs
repnz
add
jp
mov
mov
ret
outsl
push
cs
neg
xchg
xchg
shrb
daa
sub
andb
inc
pop
rolb
and
xchg
xor
push
mov
push
jg
add
sahf
push
inc
loopne
xor
aaa
clc
dec
pop
push
je
shlb
mov
daa
shlb
icebp
test
and
dec
jecxz
in
inc
int3
aas
lock
jbe
les
test
fldt
loope
outsl
xchg
sub
pop
addb
cmp
sub
dec
aaa
aas
push
adc
popf
enter
out
sbb
mov
add
std
pop
cld
or
fmuls
out
pop
popf
loopne
stc
sarl
mov
clc
gs
rcrl
push
fnsave
addr16
xor
push
push
dec
lods
push
test
cmc
aaa
mov
dec
mov
outsl
adc
ljmp
fisubl
imul
add
xchg
scas
sbb
xchg
cmp
out
ret
ret
mov
xchg
mov
shr
add
subl
int3
sbb
dec
ja
sbb
sbb
cmp
iret
pushf
icebp
mov
cmpb
lods
inc
sbb
setno
cli
pop
lret
lods
cmp
jl
mov
mov
mov
xchg
push
inc
sub
mov
popa
movsb
js
imul
jmp
mov
int
push
xlat
mov
repnz
into
mov
sub
idivl
stos
and
sbb
xchg
xor
add
fs
cli
cmp
sti
push
ret
outsb
clc
xor
mov
sub
gs
cmp
lahf
cld
data16
mov
pop
push
ds
sub
mov
inc
xor
pop
imul
jns
das
adc
sub
push
mov
push
fwait
insl
and
add
aad
lock
bound
jns
or
inc
jno
stos
pop
fisubs
clc
fs
dec
sbb
push
pop
pop
lods
pop
xor
test
mov
call
fcoml
ljmp
adc
push
fiaddl
cld
lods
lret
push
cmp
roll
ljmp
inc
add
dec
dec
mov
mov
in
mov
lods
jnp
faddl
inc
out
bound
cmp
gs
xchg
inc
pop
adc
call
dec
cmpsb
push
push
sub
xchg
fwait
cmp
hlt
pop
aaa
mov
lods
ds
inc
ds
fistpl
and
mov
mov
shlb
das
popa
int3
cmp
test
dec
mov
mov
jg
insb
aaa
add
imul
dec
sub
loop
clc
add
lret
mov
ja
push
and
lods
cmpl
dec
sub
repnz
mov
mov
push
pushf
push
fisubl
out
xchg
inc
mov
jmp
gs
pop
pop
popa
out
sahf
ja
loop
subl
cmpl
dec
inc
jns
xchg
bound
jo
js
add
enter
cltd
and
dec
push
dec
jno
cmp
and
and
push
hlt
xchg
test
pop
lock
test
mov
adc
ljmp
dec
xor
lret
dec
jle
mov
scas
push
and
test
xchg
lret
aas
xchg
pop
neg
or
xchg
push
sbb
repz
and
mov
mov
jecxz
xor
stos
movsb
jg
aaa
add
xor
cmp
les
fimuls
or
jg
mov
sbb
dec
rol
jge
pop
inc
mov
hlt
je
cmpsl
mov
xor
sub
mov
or
push
fbld
adc
add
mov
xor
cmp
mov
jbe
mov
punpckldq
inc
mov
bound
adc
pop
or
insb
cwtl
and
pushf
xor
or
pop
inc
subl
rolb
pop
xor
push
scas
stos
icebp
xlat
shll
push
fldcw
push
push
push
xchg
addr16
sbbb
in
and
inc
das
or
inc
aad
lcall
lea
out
dec
ja
popf
xchg
adc
lods
ret
jae
xor
inc
push
lods
mov
insl
ds
lcall
adc
jne
in
mov
ret
mov
adc
xor
push
adc
js
cmp
lret
inc
add
jno
jecxz
dec
jb
adc
mov
cmp
daa
lcall
mov
xchg
mov
or
push
jg
fldt
cmp
and
jecxz
not
cmpw
inc
ljmp
mov
loopne
in
xchg
lcall
push
test
dec
xor
and
sub
mov
xchg
push
negb
xor
pop
repz
aad
repz
dec
pop
repz
sbb
aas
sub
jo,pt
in
insb
popa
cmp
test
test
cld
ret
lret
dec
out
mov
mov
pop
add
pop
xchg
adc
enter
dec
or
add
stos
mov
icebp
mov
pop
out
adc
insb
flds
mov
js
cld
jns
pop
icebp
or
jge
outsb
mov
cmp
push
mov
lods
inc
mov
jle
dec
xor
popf
pushf
rclb
pop
test
sbb
sub
inc
inc
dec
mov
push
das
push
aaa
test
xor
sub
mov
sbb
and
add
and
outsb
pop
lcall
fwait
sbb
insl
into
ds
xor
sahf
aad
sub
repnz
jb
or
sbb
pusha
lods
dec
and
xor
push
pop
cs
pop
jne
out
imul
das
jb
aas
enter
lods
sbb
push
loopne
and
fnstsw
lds
mov
xlat
adc
mov
daa
push
mov
stos
roll
aaa
and
shrl
jnp
jmp
mov
hlt
mov
push
cmp
repnz
pop
adc
mulb
xor
pushf
fsubrp
mov
sub
icebp
jp
out
add
jne
add
pushf
sub
out
in
fisttpl
mov
in
xor
shrl
sbbl
movsb
repnz
or
sub
cmp
jbe
push
push
and
enter
dec
addr16
push
lahf
jo
in
push
js
mov
aas
loopne
data16
xor
xor
aad
sysenter
sbb
sub
push
jl
xchg
mov
mov
rorl
pop
mov
inc
hlt
jbe
push
jg
pop
andb
and
out
pop
xchg
call
mov
pop
adc
iret
rep
stos
dec
jae
sbb
xchg
jp
pop
jo
loopne
or
scas
into
cmpsb
mov
sbb
push
inc
out
pop
sahf
test
jnp
pop
jge
add
testb
sub
jl
push
mov
inc
fucomip
xor
jne
in
sub
gs
adc
ret
xchg
aaa
or
sub
in
bnd
and
push
in
movsl
loop
addl
jg
ja
sbb
and
pop
dec
fsubl
sub
cmp
inc
ja
jle
shl
ret
stc
dec
adc
pop
and
mov
or
cmpsb
push
out
xchg
push
mov
pmaxub
xor
popa
add
dec
sahf
sub
stos
fstp
inc
out
ja
pop
idivl
mov
fstpt
push
dec
dec
mov
faddl
das
mov
sbb
cmp
and
mov
dec
jno
js
add
ds
pop
or
repz
cltd
jg
xor
loopne
add
ss
cld
test
mov
lret
dec
mov
call
mov
cwtl
mov
jnp
xchg
lret
fmulp
sub
mov
pop
and
inc
push
ss
xchg
inc
push
subb
or
adc
lahf
jmp
inc
in
cli
jmp
inc
jp
gs
inc
das
xor
fcomi
fsubl
mov
out
push
stos
pusha
movsb
lock
insl
dec
adc
aas
lret
xor
movb
psubd
sub
sub
jns
cs
inc
orps
leave
sti
addb
outsl
push
insb
mov
mov
pop
loopne
popa
pop
push
in
mov
pusha
sub
int
lods
sub
inc
adc
xor
mov
fsts
aaa
inc
test
out
loopne
sahf
push
je
js
out
pop
mov
test
jbe
into
lea
mov
testb
nop
inc
push
aaa
stos
jno
push
mov
shll
aaa
outsb
mov
dec
lock
lcall
loop
test
notb
mov
jg
cmp
push
or
mov
pop
repz
jp
loopne
dec
jecxz
hlt
cs
sub
pop
test
cmp
aad
repz
or
mov
sbb
pop
mov
mov
mov
add
mov
fs
xchg
sbb
jle
inc
pop
sub
jl
add
fiadds
sbb
xor
xchg
xor
sub
ret
out
mov
lret
hlt
mov
sub
ja
fs
scas
cmp
test
adcb
or
inc
mov
jae
mov
addr16
test
fcom
fdivrs
jbe
aaa
mov
sbb
jb
roll
cvtdq2ps
add
sbb
push
test
insl
dec
subl
dec
test
aad
adc
addr16
mov
adc
cli
mov
and
mov
shrb
mov
ret
add
fwait
sub
cmp
imul
pop
jle
insb
sti
sbb
pop
push
jg
sti
stos
mov
ds
xlat
dec
jl
cmp
mov
sbb
mov
adc
aaa
jg
test
test
and
cmpsl
inc
divps
or
cmp
xor
jnp
mov
lret
and
adc
lea
andl
js
xchg
xor
imul
cmp
push
xor
mov
xor
call
pmullw
cmp
lret
cmp
mov
push
xchg
aam
cwtl
ss
inc
jnp
mov
fscale
test
adc
jno
jl
mov
test
sub
dec
inc
and
push
aas
inc
jo
fcmovbe
cld
push
xor
hlt
mov
push
xchg
inc
test
mov
sub
pop
xchg
add
outsl
popa
fldcw
mov
jo
call
daa
push
pop
jl
and
jae
mov
cmp
jae
adc
int3
jnp
cmc
call
jae
sub
dec
push
jge
add
icebp
mov
xor
enter
jp
fimull
pop
pop
stos
mov
dec
rolb
jo
fs
out
cmc
outsb
aaa
mov
mull
pop
push
xor
dec
mov
xchg
xor
add
cmp
cmp
lds
or
cmpsb
cltd
into
cmp
mov
test
adc
stos
dec
jo
data16
daa
je
arpl
jne
cmc
add
in
roll
xor
mov
pop
daa
push
add
xchg
pop
adc
push
push
xlat
int
dec
pop
adc
sahf
clc
xchg
cmc
xchg
shlb
dec
stos
jle
xor
subb
inc
mov
inc
pusha
rcl
repnz
mov
outsl
mov
loopne
arpl
insb
fsubrs
lock
aas
adc
and
inc
out
sbb
gs
stos
popf
push
enter
adc
sub
scas
jle
imul
repz
inc
into
out
push
sub
les
cmc
call
inc
repz
dec
add
jb
mov
push
pop
mov
push
lea
inc
mov
xor
xlat
insl
pop
lcall
push
mov
hlt
iret
mov
in
dec
and
xorb
or
rcl
lock
ja
cli
jne
xor
in
cmpsl
fwait
mov
inc
xor
jle
lods
xchg
pop
fs
xchg
xchg
mov
and
jl
orl
lahf
or
add
stos
insb
push
call
pop
pop
mov
and
cmp
clc
mov
into
xor
outsb
js
cmp
das
gs
pop
roll
xchg
cld
std
mov
lea
fisttpll
or
and
popa
push
pop
cmp
push
out
bound
mov
inc
jp
push
jne
and
and
cmp
dec
xor
ficompl
and
inc
lods
cmp
andb
pop
sbb
fwait
add
jo
stos
xor
adc
adc
mov
lcall
sbb
ffreep
movsb
cmpsb
pop
mov
pop
push
das
or
scas
rorl
popa
sbb
adc
mov
mov
nop
mov
int3
inc
fs
pop
mov
add
jbe
out
sbb
pop
out
xor
mov
cmp
jecxz
loopne
add
sub
sub
sarb
aad
hlt
arpl
xor
pop
std
xchg
lahf
jl
fstpt
jae
and
sbb
sbb
pop
icebp
sti
add
loope
ss
fisubl
fdivrs
push
enter
and
lret
test
dec
test
stos
inc
dec
cmp
jp
insb
sub
inc
das
jle
push
sbb
sbb
adc
pop
fwait
pop
mov
pushf
xor
jmp
add
pop
scas
push
push
popa
push
lods
jecxz
ljmp
orb
mov
outsl
cmp
mov
or
dec
jns
imulb
out
pop
gs
sbb
inc
lock
lock
or
cltd
test
adc
adc
push
das
dec
mov
ret
add
shrl
jno
mov
inc
adc
sbb
cmp
test
xchg
cmp
and
int
addr16
sbb
rorl
cmp
adc
and
aas
inc
inc
cli
cmc
pop
dec
xor
insl
push
ja
nop
inc
andb
insb
and
jecxz
fsts
sbb
sbb
call
scas
aas
int3
es
xchg
ljmp
xor
aad
outsb
sahf
outsb
bound
lcall
insb
pop
insb
pop
jo
push
mov
loopne
cmp
cld
pop
cmp
pop
sahf
arpl
xchg
adcl
add
cwtl
hlt
jns
jno
xchg
inc
clc
push
jge
rcrb
jge
mov
push
jbe
push
pop
adc
mov
dec
push
nop
addr16
cmc
and
push
mov
xor
xchg
fisubs
imul
mov
inc
inc
ror
xchg
stos
outsl
pop
je
jb
mov
push
in
push
lods
pop
in
adc
xorl
xchg
in
rcrb
test
or
mov
inc
pushf
das
leave
push
mov
jge
xchg
mov
xor
aas
dec
rclb
pop
cwtl
push
hlt
aam
jns
push
dec
inc
or
xchg
add
sbb
inc
jmp
lods
addb
push
cli
xor
aam
mov
pushf
inc
es
lahf
mov
notb
into
fdivrl
divb
enter
lret
push
lods
push
mulb
inc
leave
js
stc
add
fstp
ja
lahf
mov
jle
loopne
cwtl
cwtl
and
bound
mov
lcall
inc
mov
aad
in
insb
sahf
loope
push
dec
testb
pop
dec
or
arpl
inc
stos
cmp
loope
dec
mov
ds
adc
cmpsb
aad
insl
cmp
mov
cmp
mov
jae
lds
jmp
mov
jnp
inc
xchg
jae
aas
js
pop
mov
jecxz
jns
and
ss
loopne
push
and
loope
hlt
das
outsl
sbb
das
mov
cltd
mov
cmp
aam
out
mov
dec
das
mov
inc
push
ficoms
sbb
xchg
adc
mov
dec
les
lahf
outsb
mov
mov
enter
dec
int
xchg
mov
pop
ljmp
mov
insb
inc
cmp
mov
xchg
mov
pop
xchg
aad
pop
inc
xchg
mov
pop
push
cmp
lret
rorl
scas
scas
pop
mov
mov
lock
sbb
jns
fdivrp
add
dec
xchg
ss
and
sahf
sub
fstpl
sbbb
jo
cmpsl
pusha
lds
add
cmpsb
jb
mov
mov
int3
xor
push
divl
arpl
mov
pop
ret
add
dec
rcll
adc
sub
scas
pushf
sar
adc
xchg
push
or
cmpl
inc
or
mov
xchg
aas
pop
ret
mov
mov
dec
cs
push
addb
add
sbb
sahf
xchg
push
push
rorb
mov
push
sahf
rcrl
or
les
imul
xchg
andl
pop
jne
and
xor
jl
sbb
adc
fucom
cld
and
cs
mov
cmp
jge,pn
addr16
test
add
movsl
pop
sub
decb
outsb
test
pushf
pop
sub
mov
xchg
xor
js
jo
mov
mov
and
es
push
sub
push
sbb
push
and
sub
sub
sub
jmp
sbb
fs
lahf
dec
sbb
icebp
pop
ret
sbbl
xor
or
inc
dec
cwtl
xchg
push
fidivs
and
aam
lods
adc
sbb
sbb
xor
call
addb
xlat
fdivl
inc
push
mov
xor
xchg
sar
fidivrl
jge
mov
pop
jecxz
mov
cli
testb
cld
pusha
adc
mov
fldt
or
inc
lea
and
mov
andb
mov
dec
push
cmp
out
aaa
push
push
cmc
xchg
xchg
bound
jge
idivl
ret
aas
push
arpl
arpl
push
push
pop
fsubs
dec
andb
dec
or
pause
adc
ss
dec
add
dec
sbb
psrlw
test
scas
test
loopne
push
sbb
sbb
call
xchg
out
adc
imul
lret
lods
push
lret
fsubrs
dec
adc
loop
aad
inc
fsubl
xor
out
fdivrs
inc
adcl
scas
icebp
out
lret
jg
add
cmp
and
cwtl
push
mov
mov
dec
dec
out
mulb
fwait
clc
imul
ds
xchg
subb
xchg
int3
insb
xlat
call
mov
mov
dec
push
lea
push
ja
loopne
pop
mov
int
pop
lahf
dec
js
xlat
rcl
cmp
popf
pop
in
into
enter
or
push
inc
stos
lfs
pop
rcr
addb
jmp
or
fsubrl
or
sbb
dec
shlb
mov
test
push
mov
adc
les
xor
ret
mov
js
add
cld
mov
out
ja
inc
out
and
add
push
push
int
inc
mov
or
pop
sub
inc
mov
push
mov
shl
int
push
sarl
push
sub
test
cmp
idiv
mov
xor
andb
addl
fstpl
lea
pop
outsl
inc
jge
movsb
scas
loop
mov
out
pop
dec
in
xchg
mov
lock
and
testl
cmc
int3
mov
dec
dec
ret
lea
mov
pop
cli
add
in
lock
push
int3
or
adc
jmp
pop
inc
movsb
or
scas
mov
pop
add
inc
pop
daa
lcall
ss
jl
ds
int
jb
inc
mov
xor
mov
mov
dec
js
leave
imul
mov
cli
and
xchg
fsubrp
push
jmp
out
clc
lret
add
fisubs
in
push
pop
mov
push
aaa
pop
and
cmpl
push
mov
das
aaa
push
mov
jl
inc
cmp
icebp
imul
pusha
pop
inc
and
sub
jle,pt
ret
mov
mov
ss
jne
adc
loop
int3
mov
jl
es
mov
push
push
dec
mov
int3
cmp
push
in
or
and
fs
push
mov
sbb
xchg
lcall
out
push
bound
ljmp
sbb
test
loopne
cmp
inc
test
push
ret
fs
inc
and
in
mov
pop
lds
cwtl
imul
and
add
and
stc
sbb
ljmp
fcompl
mov
xlat
mov
orb
test
shll
mov
mov
inc
out
mov
dec
push
outsl
dec
fisubl
mov
leave
mov
jno
xorl
push
adc
lret
outsb
jnp
insl
xor
push
test
sbb
popa
adc
test
push
imul
scas
lock
sub
popf
fs
xchg
lret
das
lcall
mov
dec
cli
pop
jecxz
push
inc
shl
mov
stc
fdivl
in
dec
jbe
push
push
mov
mov
push
call
out
mov
dec
sahf
sub
xchg
or
jg
cmp
dec
cmp
aas
movsl
pop
stos
add
shrl
dec
xor
into
pop
iret
add
fsub
movsl
outsl
ret
sti
xchg
cltd
mov
or
cltd
xor
adc
xchg
pop
cld
xor
test
xor
js
lret
jne
js
insb
add
scas
aas
push
cmp
sub
jnp
popf
inc
mov
cmc
cmp
adc
daa
mov
inc
xchg
rclb
jg
daa
xchg
cmp
dec
cmpsl
lock
push
imul
xchg
data16
cwtl
jge
and
cli
in
dec
push
add
insl
push
gs
addl
and
out
xchg
xlat
shrl
ljmp
pop
dec
xchg
sbb
mov
shrl
ret
mov
ret
adc
stos
leave
pop
jne
stos
pop
mov
mov
and
scas
mov
adc
jno
rclb
repnz
and
push
outsb
std
jne
mov
and
dec
sbb
je
mov
notb
push
cltd
jae
rcll
in
lea
ja
and
aam
ja
ret
dec
pop
sbb
or
mov
xchg
insb
cltd
adc
fidivl
sbbl
push
xor
loopne
xor
outsl
test
cwtl
sbb
mov
push
sbb
jnp
adc
fidivrl
push
cmp
mov
lods
mov
cmc
sub
cli
mov
inc
jns
or
adc
cli
pop
pop
cmc
xor
or
ss
xchg
lds
addl
mov
loope
in
mov
ljmp
sarl
sub
fadd
xchg
sub
or
jle
or
dec
stos
jae
in
fisubrs
xchg
mov
and
rol
sub
push
addr16
mov
cmp
roll
cmp
mov
and
jge
enter
sub
cld
out
push
bound
sbb
xchg
xchg
sbb
mov
fwait
mov
in
sub
xchg
lret
imul
jbe
out
ret
fwait
xchg
std
cwtl
loopne
push
mov
imul
mov
int
pop
ret
test
call
add
shrb
mov
in
xor
fstpl
sbb
adc
lret
mov
fcmovbe
adc
dec
pop
insb
aad
clc
addb
jecxz
push
cs
pushf
mulb
aaa
aad
outsb
dec
jl
testl
lods
pop
stos
push
cmp
aas
test
mov
outsl
push
sbb
jnp
mov
mov
add
repnz
fs
test
and
xor
xor
scas
cmpsl
cwtl
popl
cwtl
dec
in
out
jl
jns
xchg
seta
jae
test
dec
pop
adc
out
add
dec
inc
stc
shl
fdivs
mov
xlat
enter
inc
div
mov
cmp
and
xchg
push
aaa
add
sbb
jbe
sub
mov
lods
lcall
fadds
cwtl
rorb
and
gs
or
insb
pushf
out
test
xchg
xor
mov
mov
test
push
int
call
mov
mov
pop
pop
xor
sbb
push
xchg
data16
xchg
dec
dec
sbb
push
dec
xchg
pop
cld
mov
aam
movsb
sub
addr16
sarb
and
cmp
add
sub
mov
int
cmp
jne
jmp
xchg
dec
cmp
fwait
out
dec
sti
imul
sbb
or
aaa
adc
xchg
out
lods
mov
sbb
dec
sbb
xchg
lcall
hlt
fwait
loop
xchg
pop
xor
mov
addr16
sub
data16
js
gs
xchg
cmpb
or
fwait
popf
cli
in
mov
ss
addr16
mov
es
xor
mov
insb
ss
adc
ljmp
push
mov
aaa
ss
xorl
data16
push
jo
cli
jnp
js
repnz
mov
adc
push
jnp
sub
scas
mov
lock
sub
push
adc
inc
xor
xor
lock
inc
sub
fistps
xchg
mov
inc
xchg
sbb
pushf
push
sbb
xor
js
ret
icebp
sbb
mov
loopne
std
add
cmc
testl
aas
pop
xchg
pop
das
rcrb
lock
icebp
xchg
ds
mov
cltd
adc
jle
sub
inc
mov
adc
pop
add
fistpl
inc
testl
sub
neg
fwait
test
loop
push
jecxz
jecxz
mov
pop
sbb
push
xor
pop
aas
sub
out
mov
movsb
lock
andl
push
jo
pushf
out
cmp
iret
adc
xor
out
pop
std
sbb
sub
lock
pop
ret
xor
mov
loopne
xlat
ss
mov
int3
dec
jp,pn
add
mov
inc
add
cmpsw
pop
insb
sbb
je
push
inc
cwtl
daa
call
aaa
jge
xchg
lea
mov
sub
sub
aaa
ss
pushl
inc
dec
or
int
ljmp
xorl
sub
out
add
cmp
fldl
sbb
and
or
xchg
arpl
icebp
adc
iret
cmp
dec
jle
cs
push
test
pop
mov
xchg
mov
pop
xchg
stos
add
bound
xor
mulb
cmpsl
jp
sub
ss
xor
pop
sbb
cmp
jns
cwtl
dec
sbb
fwait
insb
les
cwtl
lods
jae
sub
test
inc
and
sub
out
push
movsl
sbb
out
insl
push
sysenter
pushl
loope,pn
leave
pop
in
lret
cli
sbb
bound
dec
test
adc
jae
fdivl
addr16
call
gs
jbe
lret
and
shlb
imul
into
or
out
cwtl
addr16
xchg
jl
iret
sub
adc
cld
movl
lods
pop
sub
cmp
sbb
pop
xchg
mov
pop
dec
lock
scas
test
sbbl
or
xor
daa
in
ffreep
div
push
cmp
or
mov
jle
sub
int
mov
cmp
int3
imul
pushf
dec
scas
pushf
das
mov
insb
xchg
loop
pop
dec
sub
rcll
fs
sub
loop
pop
clc
cmpsb
push
aaa
clc
xor
jno
sub
push
rolb
sahf
lahf
sub
js
inc
hlt
fnstenv
cmp
adc
sysexit
push
sbb
lcall
xchg
pop
xor
mov
fcomps
mov
sbb
sbb
sbb
data16
or
arpl
mov
xor
lahf
mov
sbb
mov
imulb
pushf
arpl
push
xchg
hlt
popa
mov
sbb
fistps
jmp
call
mov
sbb
adc
out
leave
or
fstps
dec
cmp
repz
sbb
mov
test
pop
xchg
je
sbb
inc
sarb
movl
xlat
out
in
cmp
test
in
sub
cmpsb
imul
pop
outsl
inc
test
push
mov
inc
popf
imul
aaa
inc
sbb
lods
mov
pop
mov
jnp
mov
lcall
sahf
pop
lods
pop
and
shlb
xor
data16
sub
rcll
add
cmp
sbb
ja
jno
adc
mov
cli
sarb
mov
and
mov
pusha
pushf
jmp
mov
jo
cmp
lcall
jg
xchg
push
mov
xchg
mov
rcr
xor
mov
ficoml
mov
pop
push
imul
iret
clc
pop
lods
add
stos
sub
sub
nop
xchg
cwtl
cwtl
movsl
dec
mov
mov
or
push
mov
push
outsb
jle
ret
ljmp
xchg
cmp
adc
cld
adc
out
jnp
or
jo
mov
or
dec
xor
xor
push
adc
stos
cwtl
mov
sbb
inc
gs
xchg
cltd
cmp
aas
mov
push
fistpl
jle
lods
jns
sbb
aas
push
mov
lcall
push
inc
scas
addb
pop
push
ret
sahf
push
push
dec
inc
pop
sbb
gs
mov
pusha
fs
ja
add
fldt
lods
push
adc
inc
xchg
push
ds
enter
lret
out
popf
scas
jmp
into
jp
insl
push
push
and
jb
daa
jno
test
jo
cli
fidivrs
nop
fwait
sub
dec
js
out
addr16
xorl
sbb
inc
xchg
jge
imul
xchg
into
mov
dec
lea
lcall
jb
mov
test
mov
scas
popf
mov
stos
outsb
and
cli
mov
shll
mov
mov
mov
inc
xchg
addb
mov
xorl
aam
insb
lret
lret
xchg
xchg
fstpt
cmp
dec
pop
mov
pop
xchg
icebp
insb
orl
out
arpl
sub
push
mov
pop
pop
sahf
sbb
push
and
sub
jge
lcall
jle
lret
insl
popl
sub
inc
lds
mov
xchg
mov
push
jle
mov
and
sahf
jle
sahf
andl
jge
nop
sarb
fldt
insb
pusha
inc
testb
mov
pushf
lcall
call
loope
andb
jo
mov
stos
adc
sbbl
aam
inc
fsubp
cmpb
aam
inc
jmp
xchg
shl
jbe
lea
adc
mov
aaa
pop
xor
in
jne
imul
sub
pushf
loope
add
xchg
cmp
je
mov
ficomps
dec
clc
pop
xorb
jg
les
fldt
xchg
jns
inc
mulb
xor
vrsqrtss
shrl
mov
cmp
mov
push
subb
or
gs
shrb
test
cmp
xor
add
push
stos
test
mov
fs
sub
xor
jno
add
xchg
ljmp
pop
mov
sub
cli
adc
cltd
testl
dec
ficompl
jne
ds
lea
jle
bound
nop
movsl
je
mov
js
testb
mov
adcl
inc
jl
push
pop
sahf
push
movsb
dec
sub
test
add
jo
push
cmp
xchg
mov
add
add
jl
sbb
jg
out
mov
dec
loop
xor
stos
pop
jle
scas
in
push
cpuid
xor
test
je
test
xchg
inc
dec
push
or
dec
test
cmpsb
fs
int3
loop
push
mov
ss
cmpb
inc
adcl
test
push
jns
adc
push
gs
add
inc
mov
rorb
jns
shrb
jp
cmc
add
popa
jle
das
sbb
mov
mov
cld
ss
pop
insl
dec
ficoms
mov
jmp
aaa
push
push
cmp
orb
xchg
inc
adc
xor
lea
mov
adc
loope
insb
mov
xchg
pop
dec
andl
outsb
fwait
loopne
inc
jp
jmp
jge
mov
andl
cmpsl
mov
jno
outsl
mov
cmp
fld
fwait
cmp
and
sahf
or
pushf
repz
daa
push
pushf
push
xchg
pop
dec
jmp
idivb
cmp
stos
mov
pop
jl
lret
mov
in
loopne
dec
lret
and
movsb
movsl
dec
dec
jns
imul
jno
lock
sub
dec
test
cmp
je
mov
lcall
test
or
jl
dec
inc
push
or
or
sub
fwait
cmp
insb
decl
fwait
mov
cmc
ja
cmpb
arpl
cmp
push
cmp
pop
sti
test
mov
scas
and
xchg
jb
insl
adc
or
push
movsb
push
mov
jecxz
inc
mov
inc
ss
mov
pop
push
pushf
sbb
mov
fs
cmp
pop
inc
xchg
cwtl
loope
xor
mov
ds
jl
sub
xchg
cld
xchg
aam
sarb
js
int
mov
push
cmp
dec
or
testl
aad
insl
enter
int3
adc
fdivs
mov
cwtl
or
push
xor
out
insl
pop
nop
and
inc
sub
lea
insb
insb
loopne
jnp
mov
mov
inc
rol
outsb
inc
pusha
dec
mov
sarb
outsl
mov
in
xchg
faddl
int
ss
addl
test
lret
in
mov
push
push
jo
fimuls
cwtl
sbb
jbe
mov
nop
ss
and
sahf
ja
jge
pop
insb
bound
push
push
cmp
xchg
into
add
pop
pop
and
outsb
bound
push
enter
mov
push
int3
mov
mov
js
xchg
mov
aad
push
mov
mov
xchg
xor
imul
mov
popf
sbb
cwtl
xor
js
mov
shrl
fdiv
aas
sub
cmp
mov
pop
sub
lods
ret
les
andb
xor
jb
lea
mov
cmc
insl
loope
in
jmp
je
jbe
bnd
dec
add
push
nop
stos
sub
ret
int3
inc
xor
pop
int
sbb
andl
xlat
cmpsb
mov
mov
cmpl
sahf
sub
ret
loopne
mov
mov
jb
sub
push
push
out
fwait
enter
sub
cld
lret
jno
cmpsl
test
mov
sarl
sub
sub
cmp
xchg
cwtl
fcomps
inc
mov
in
cmpsl
and
out
inc
scas
sbb
imul
mov
dec
ds
pop
mov
mov
lcall
or
mov
stos
inc
adc
adc
xchg
add
sahf
ljmp
jp
pop
test
xcrypt-ofb
cmpsl
cs
jb
jl
or
fisubrs
sbb
pop
cmpsl
bound
cmp
jge
push
xchg
ret
loopne
popa
adcb
insb
fs
sub
lahf
mov
outsl
mov
aaa
lret
jo
repnz
roll
fwait
scas
dec
push
pop
movb
cmp
mov
addr16
push
cmp
stos
inc
pop
gs
outsl
outsl
mov
xor
xchg
add
aas
in
dec
xchg
js
cwtl
push
jns
mov
in
cltd
inc
hlt
dec
sub
cmpsl
fs
lods
je
adcl
jnp
lods
bound
mov
cwtl
sub
adc
aad
xchg
shll
xchg
xchg
cltd
pop
pop
mov
aaa
dec
daa
fsubrp
inc
pop
mov
push
pop
dec
cltd
and
sub
mov
push
mov
outsl
push
mov
mov
sub
cmp
cwtl
add
subb
xor
jnp
sub
pop
imul
jae
add
and
jns
clc
je
jbe
inc
and
jb
popf
sub
jp
jl
js
add
fldl
push
jb
push
lahf
rcrl
es
ds
fisubl
stos
adc
pop
jns
lret
pop
cwtl
sub
test
dec
mov
pusha
jb
ljmp
mov
lret
add
mov
mov
dec
pop
mov
and
inc
mov
test
mov
mov
rorl
popa
mov
loop
or
test
movsl
xor
and
pop
shll
into
mov
xchg
test
fcomps
cwtl
mov
jae
xor
or
pushf
inc
enter
call
nop
xchg
je
shl
fdivs
std
fcoms
stos
jle
lea
lock
mov
adcl
jl
notl
add
mov
mov
push
ds
mov
fistpll
adc
cmp
scas
and
stc
push
pop
test
push
mov
mov
shrl
push
pop
int3
lcall
ret
es
push
add
cmp
pop
pusha
dec
mov
or
push
inc
in
mov
test
inc
dec
lret
xchg
inc
repnz
ja
bound
mov
fsubrp
std
sbb
rol
xor
dec
push
mov
mov
scas
test
inc
mov
jae
push
sbb
leave
fcmovnb
push
dec
fs
mov
pop
push
mov
mov
int
or
lahf
mov
cmpsl
loopne
xchg
add
mov
pop
enter
test
dec
loop
imul
call
popf
dec
mov
sbb
cmpsl
xchg
mov
and
ds
mov
outsb
scas
cmp
jmp
pop
jno
mov
cs
addb
idiv
adc
or
inc
mov
lret
testl
insb
out
enter
mov
cmp
int3
scas
push
mov
ret
shll
pop
xchg
into
xchg
mov
inc
nop
out
inc
mov
push
or
dec
pop
mov
aas
ret
pop
lock
mov
inc
jl
jo
jl
sar
pop
aaa
mov
mov
xor
sub
mov
lods
popa
pop
pop
sarb
jb
insl
pop
jp
insb
lods
push
push
aas
push
test
inc
jge
mov
jo
and
mov
push
js
or
mov
inc
jo
orl
test
inc
in
dec
push
jns
cmp
bound
dec
hlt
fs
push
jle
mov
push
sbb
mov
cltd
jno
xchg
mov
dec
jle
dec
jle
lea
ljmp
test
rorl
outsl
scas
fmul
add
dec
lods
add
addb
cmp
ds
sbb
or
inc
mov
cmp
ljmp
mov
leave
jg
int
in
add
lock
pusha
mov
cmc
imul
mov
push
adc
and
inc
bound
mov
push
push
mov
call
aaa
sahf
shll
inc
movsb
mov
jbe
aas
jo
jne
stos
addl
sahf
fildl
xchg
addr16
mov
jo
insb
push
aam
test
sahf
and
stos
sbb
mov
push
movl
loop
sbb
daa
roll
pusha
mov
call
lock
mov
fwait
sbb
dec
mov
pushf
in
push
jnp
lret
xchg
mov
cmp
mov
ror
inc
imul
adcb
mov
fs
push
dec
fs
test
movntq
pop
inc
jae
ljmp
js
sarl
clc
arpl
cmp
arpl
push
inc
cltd
ret
fcoml
cmp
hlt
out
mov
dec
lret
loop
and
dec
outsl
shrb
pushw
cmpsb
pop
mov
call
lods
or
ja
js
fwait
pushf
rolb
dec
inc
push
loop
xor
inc
mov
or
add
push
mov
push
mov
je
pop
jnp
push
pop
sub
mov
mov
lods
mov
mov
pop
adc
out
cli
and
mov
mov
or
and
dec
xchg
push
cmpsl
sub
loope
pop
lea
mov
dec
jmp
xlat
adcl
enter
fisubrs
jmp
mov
fbld
sub
inc
nop
pop
loop
in
je
mov
iret
inc
insb
and
dec
add
and
mov
mov
mov
xchg
jle
stos
shrb
or
lret
push
and
nop
jo
adc
rol
jg
and
xchg
rcrl
dec
xchg
xor
sahf
rclb
cmpsb
xchg
roll
imul
xchg
mov
frstor
dec
xchg
imul
flds
scas
arpl
xor
jno
int3
xchg
dec
test
in
push
fbstp
mov
frstor
imull
enter
pop
inc
lcall
mov
aad
xchg
push
sub
inc
jg
mov
bound
fs
pop
add
mov
sub
fisubs
push
fcom
cs
xchg
xchg
std
mov
lahf
pushf
ljmp
cmpsb
les
jns
push
js
jge
test
push
jno
sbb
or
cs
mov
jle
jne
js
out
mov
or
push
clc
adc
add
mov
movsl
mov
insb
mov
sar
stos
push
adc
insl
or
xchg
adc
sti
ljmp
in
test
callw
pop
jmp
das
outsb
fisttpl
lcall
adc
hlt
mov
jecxz
adc
mov
cmp
in
dec
shl
jnp
lcall
lea
cmpsl
xchg
pop
xor
pop
test
jnp
jns
sub
push
add
push
adc
aad
push
pop
push
int
sahf
cwtl
test
dec
call
xchg
ret
leave
mov
adc
fwait
pop
stos
xor
int
dec
stos
test
xchg
mov
mov
popa
mov
mov
mov
and
push
jp
mov
push
call
or
stc
push
jecxz
dec
xchg
xchg
sahf
imul
sub
and
adc
fdivrl
fbld
push
sub
and
sbbl
arpl
cmpsb
adcb
mov
xorb
push
insb
cmpsb
inc
outsb
jo
add
mov
mov
fs
aam
fwait
sub
pop
inc
mov
mov
into
out
popf
rorl
inc
push
pop
clc
xor
xchg
outsb
cwtl
push
aaa
dec
sub
mov
mov
push
jns
sub
xchg
sub
jmp
insl
mov
inc
insb
lock
jecxz
pandn
xor
mov
gs
gs
mov
aas
dec
and
in
adc
push
xor
out
adc
cmp
adc
gs
inc
test
popa
mov
jp
outsb
call
lcall
jno
push
mov
fcmovb
or
add
rcrb
push
xor
mov
bound
scas
push
popf
mov
popf
jo
fs
jnp
push
insl
jae
xchg
mov
addb
mov
mov
cmc
test
adcl
mov
jl
adc
repz
jcxz
mov
mov
insb
jae
xchg
and
enter
xchg
pop
push
andl
add
xor
adc
arpl
sub
popf
and
pop
in
xor
shll
iret
inc
dec
jae
dec
xchg
aam
xlat
adcl
dec
mov
imul
mov
sub
sub
xor
insb
aas
dec
aad
and
sbb
mov
movsb
fdivrs
cmpsb
xchg
mov
mov
push
pusha
in
fwait
cmc
pushf
les
rcrl
add
push
mov
dec
xchg
int
in
dec
out
aam
push
stos
xchg
and
in
imul
jmp
and
aaa
dec
test
add
sub
and
lea
pop
xor
xchg
loope
pusha
icebp
lcall
call
out
mov
mov
lahf
enter
psrlw
dec
js
jl
mov
test
inc
jmp
dec
cmp
and
push
cld
jnp
inc
sub
mov
inc
jae
jne
sbb
insl
into
xor
pop
xchg
jae
jnp
sbb
mov
dec
bound
inc
jg
roll
es
out
mov
testb
jae
pop
loope
push
jns
fucomp
fs
cltd
sub
pop
test
les
loopne
test
pop
ja
out
pop
mov
mov
mov
movsb
inc
scas
call
jo
daa
pop
in
adc
adc
sbb
popa
je
iretw
orl
pop
pushf
add
jno
bound
fwait
sub
movb
xlat
inc
dec
cld
jo
xchg
jb
push
loop
mov
test
inc
mov
pop
sbb
cmpsb
pop
cmpsb
mov
mov
xlat
lahf
pop
mov
pop
in
cmp
or
push
mov
insb
mov
popa
pop
jbe
jmpw
cmpsb
ret
cmp
xchg
pop
or
push
xchg
push
cmp
das
popf
lcall
mov
push
bound
sbb
test
jl
push
xchg
stos
and
dec
mov
bound
in
sub
dec
inc
dec
lahf
push
mov
mov
andb
sbb
jne
out
leave
add
iret
add
xorl
xchg
pop
mov
pop
cmpsb
adc
das
mov
nop
pop
test
or
xchg
mov
sub
cmp
rclb
filds
mov
sub
xor
loope
lea
cmp
int3
push
ljmp
mov
std
push
jle
add
add
adc
and
arpl
adc
ja
push
inc
ss
loop
xor
inc
outsl
xor
into
dec
ja
or
push
pop
jo
mov
addr16
cmp
mov
mov
push
fsubs
adc
sbb
aas
shl
lcall
inc
icebp
aas
out
fstpt
dec
pop
add
mov
mov
inc
mov
sbb
jge
rorl
ret
sbb
xchg
les
nop
xchg
adc
cltd
mov
pop
mov
dec
fincstp
add
push
cld
cwtl
sbb
push
or
jo
in
int3
iret
and
adc
and
test
rolb
push
adc
ss
pop
popf
jno
pop
sub
mov
or
test
imul
shrb
mov
cltd
sbb
inc
sbb
xchg
popa
or
xchg
repnz
bound
orb
cmpsb
pop
sub
jo
push
and
jge
shlb
push
andb
fcmovbe
mov
bound
into
xor
or
jl
jmp
add
sbb
jo
lahf
stos
add
pop
inc
cmpl
xchg
jecxz
jge
mov
test
orb
inc
xchg
outsl
stos
data16
movsl
sarl
mov
and
sub
imul
or
xchg
inc
mov
push
mov
xchg
popa
cmp
push
dec
shll
aad
leave
cmp
fs
dec
push
in
les
cmp
adc
fsubs
pop
lds
fcmovnbe
es
mov
dec
mov
inc
lcall
pop
mov
repz
sti
mov
dec
out
ret
repnz
iret
fmul
or
xor
and
aaa
and
js
jp
inc
sahf
movsb
les
loopne
pop
lcall
fwait
xchg
lahf
cmpsb
push
mov
loope
pop
cltd
loope
dec
dec
dec
test
push
mov
inc
or
ljmp
scas
mov
mov
cmpl
shlb
scas
pop
jecxz
or
into
sarb
xor
jae
jnp
outsb
dec
dec
sbb
and
add
mov
and
push
pop
ret
fildll
test
sub
enter
jb
outsl
jle
push
addl
sbb
subl
dec
and
jle
sti
jo
hlt
jbe
adc
jle
or
outsb
ljmp
dec
test
xchg
or
jmp
dec
mov
jb
adc
xchg
mov
pop
pop
sbb
and
orl
push
cltd
ss
stos
or
pop
mov
inc
xchg
mov
nop
test
xchg
jb
push
cmp
je,pn
subl
pop
sub
xchg
call
in
mov
test
in
mov
or
mov
enter
ss
test
jbe
xor
out
ret
pop
popa
jns
xchg
rolb
data16
movsb
shll
and
pop
pop
push
test
add
mov
dec
jne
push
cmpsl
sbb
xor
sbb
pop
insb
ret
inc
and
fcomps
inc
adc
into
out
mov
fsubl
lea
loop
dec
xor
dec
and
outsl
jg
adc
shlb
insl
fistl
nop
cmp
fs
jp
inc
cli
dec
test
jecxz
lcall
jo
push
jecxz
cmc
add
pop
popa
pushf
fisttpl
arpl
or
pop
stos
xchg
leave
scas
sub
xchg
int3
lret
je
jbe
push
push
or
xchg
orb
in
imul
repnz
inc
shlb
dec
xor
movsb
cmp
push
and
dec
sbb
out
cmpb
aam
mov
mov
daa
sub
jo
ljmp
aad
lea
loope
rorl
cmpsl
pop
inc
jne
fstl
enter
ret
scas
xor
mov
rcrb
mov
pop
add
jo
imul
test
fistl
test
outsb
lds
inc
inc
mov
sarl
mov
enter
jle
popf
lret
imul
in
lahf
fs
xor
adc
lods
jae
mov
fldenv
movsb
and
js
push
pushf
gs
mov
andb
pop
pop
or
adc
repz
out
scas
enter
and
scas
ss
cmp
repz
cmp
mov
cmpsl
mov
push
xor
or
adc
mov
ljmp
out
fwait
push
push
mov
cmp
fwait
jno
mov
test
pop
xor
setnp
fsubr
ljmp
iret
cmp
push
adc
lret
ljmp
mov
mov
jns
out
cmp
jmp
lods
lods
mov
dec
out
mov
sbb
cmp
sti
fdivl
lods
adc
xchg
jg
sti
movsl
add
pop
sub
dec
push
xchg
scas
jle
mov
or
fistl
inc
sarb
lods
sarl
ds
cmpsb
jbe
xchg
xchg
shrl
rolb
nop
lea
leave
inc
lock
loop
test
and
ja
and
enter
lock
imul
inc
lret
orb
jge
stos
cli
sub
mov
rorl
movsl
scas
dec
icebp
mov
xchg
add
popf
xor
shll
jns
add
ds
out
sarb
lret
xchg
lods
and
movsl
mov
cmp
cmpsl
mov
pop
lret
inc
insb
xchg
test
lahf
mov
push
es
rorb
push
mov
sub
scas
outsb
and
push
aas
push
faddl
xchg
cwtl
mov
mov
clc
les
shll
int3
outsb
mov
dec
dec
je
mov
ss
ret
out
inc
mov
xor
inc
adc
dec
addb
inc
cltd
fdivl
xor
mov
pop
and
les
dec
fcmovnb
les
popa
or
mov
dec
mov
jp
mov
gs
mov
or
out
in
cltd
dec
xor
movsb
mov
movsb
jg
jno
dec
and
push
lods
cmpsb
xor
jg,pt
and
leave
test
mov
adc
scas
sub
lds
negb
xor
movl
les
lcall
cmp
fs
mov
lods
sub
push
fdivl
push
dec
xchg
inc
nop
inc
inc
jb
jp
mov
je
int3
inc
jae
dec
cmp
mov
movsb
push
push
xor
jg
xor
lods
movsb
scas
cld
js
sbb
pop
lea
xchg
scas
popa
push
push
loopne
inc
mov
in
mov
sbb
jp
jns
cld
inc
lods
out
and
ljmp
out
mov
pop
popa
and
aas
fnstcw
jnp
sar
clc
mov
ss
ret
test
ds
movsb
xchg
pusha
fdivl
dec
inc
push
jecxz
adc
inc
enter
sahf
stos
sub
dec
ret
movsb
ljmp
scas
xor
xchg
sahf
pop
fidivrl
dec
pusha
fsubrs
in
or
xchg
sahf
into
and
lahf
insl
rcll
mov
push
cli
sbb
inc
shll
movsb
dec
mov
dec
xlat
cmpb
mov
idivb
cmp
xchg
jmp
adc
dec
fsubrs
inc
js
and
test
xor
xchg
fcom
mov
dec
outsl
shr
mov
sbbl
dec
in
std
xor
fs
pusha
movsb
xchg
iret
mov
push
cmp
test
lret
clc
sbb
lcall
ds
test
testb
and
xchg
jg
mov
mov
xchg
sub
xchg
push
pop
insl
sbb
imul
inc
cmpl
jnp
sub
pop
aas
xchg
in
dec
sub
lret
mov
ficomps
sub
xor
ret
lret
loop
sub
pushf
pop
inc
enter
mov
sti
xor
or
fs
xlat
mov
dec
jmp
sub
lret
stos
bound
test
mov
pop
test
andb
mov
pop
ds
movsb
push
inc
dec
pop
aam
xor
dec
loop,pt
pop
ds
mov
loope
arpl
or
mov
cmp
call
je
adc
imul
jp
jo
inc
leave
push
sti
jb
push
mov
inc
fst
filds
mov
mov
shl
mov
inc
adc
sub
stc
mov
jl
fs
mov
inc
push
jl
xor
scas
mov
lret
dec
fs
in
sub
jno
cs
cld
mov
inc
test
stc
mov
mov
insl
adc
xchg
add
or
pusha
xor
sbb
push
inc
addl
jbe
adc
sub
loopne
cwtl
icebp
fidivs
bound
jecxz
outsl
movsb
jae
iret
xchg
and
sub
sti
mov
add
push
mov
arpl
iret
and
leave
add
xchg
addl
push
cwtl
daa
mov
adc
nop
cltd
lock
cs
add
xchg
cmp
cmp
icebp
bound
in
rol
dec
xor
rclb
cltd
rcrb
cltd
inc
iret
mov
movsl
out
mov
mov
outsl
mov
jp
mull
iret
andl
cmp
xchg
cwtl
lret
int
sub
ds
cmpsl
cmp
enter
js
pop
rorb
push
test
ja
aam
add
fcmovnbe
push
mov
fwait
lahf
xlat
out
movsl
sti
xor
push
mov
push
jg
add
stos
add
sub
mov
call
mov
xchg
or
outsl
dec
fidivl
or
enter
arpl
pop
fcmove
popa
lahf
pop
popf
stos
and
mov
mov
ds
fwait
cmp
adc
xor
sub
dec
adcb
fcos
loope
mov
dec
cwtl
push
xor
xchg
inc
inc
in
rol
push
mov
add
andl
mov
fadds
into
inc
ss
ds
test
or
xor
sti
data16
idivb
jno
aas
cmp
xchg
pop
stos
mov
mov
movsl
push
xor
fdivrp
push
movsb
xchg
and
nop
mov
push
mov
das
scas
jmp
icebp
push
sub
jle
jp
push
arpl
xor
cwtl
pop
imulb
mov
cli
pushf
push
iret
incl
xor
pop
dec
sub
ret
cwtl
mov
fnsave
push
sti
loope
dec
outsb
or
sbb
jno
lcall
mov
lcall
stos
call
leave
mov
inc
and
cmp
sti
mov
xchg
sbb
push
subps
or
push
mov
ds
fdivp
jns
mov
js
lret
loopne
xchg
pusha
xchg
and
pusha
inc
sahf
les
xchg
mov
xchg
rorl
xor
jne
ret
pop
or
nop
insl
mov
lahf
xor
ret
mov
movsb
imul
cmp
leave
pop
ljmp
push
xchg
and
pop
add
lds
je
insb
out
popa
and
dec
pusha
loop
out
dec
pop
push
fiaddl
je
cmp
ljmp
rcr
pushf
subl
dec
xchg
scas
cmp
rorl
sbb
cmpl
popf
inc
inc
cmpsb
mov
dec
or
leave
push
loop
sub
xor
stos
nop
xchg
inc
add
gs
inc
lret
outsl
jno
push
mov
xor
rorb
sbb
mov
gs
sub
iret
scas
add
repnz
leave
adc
pop
inc
dec
mov
test
and
push
xor
xor
xchg
and
fimull
sub
sub
cmp
int
dec
pusha
pop
push
cmpsb
dec
adc
dec
dec
cltd
dec
and
jo
imul
je
or
ljmp
aam
mov
dec
ds
subl
pusha
xchg
out
lahf
pusha
mov
shufps
add
and
ds
jo
test
fisubs
pop
leave
std
dec
mov
cmp
cmp
xchg
das
movsl
roll
in
inc
mov
cmp
nop
jle
sub
int3
mov
shrl
ds
mov
out
pushl
dec
mov
and
mov
xchg
push
xchg
repz
or
or
lcall
pop
sub
inc
xor
push
xor
insb
repz
bound
aaa
cld
sub
push
sub
dec
loope
mov
int3
mov
mov
xor
ret
and
fwait
jb
cmpsl
cmpsb
nop
andb
int
inc
and
imul
mov
dec
lds
inc
cltd
rol
xor
mov
pop
sbb
pop
and
sub
cmp
pusha
jg
enter
iret
jle
inc
push
add
negl
inc
and
jge
inc
inc
insb
ds
les
loop
xor
xchg
out
lret
xor
cli
out
cs
jge
add
pop
ja
pusha
xor
shlb
push
sub
lds
dec
stos
adc
pop
and
es
cmpsb
cld
inc
in
fiadds
mov
cltd
mov
in
xchg
hlt
notb
call
jb
je
andb
jno,pt
int3
sbb
xchg
stos
xchg
mov
loop
adc
das
adc
ds
pushf
cli
sti
push
fs
aaa
out
out
and
or
lods
shr
xchg
inc
cmpsb
add
adc
push
sahf
jmp
lock
cmp
xchg
or
popf
cmc
add
cmp
and
dec
sbbb
mov
or
mov
lret
adc
js
push
loop
sub
nop
sahf
movsl
repnz
movsb
inc
mov
adc
shlb
adcl
inc
sarb
jnp
xchg
inc
loopne
aam
cmp
push
xor
dec
xchg
dec
mov
xor
mov
dec
inc
pusha
sbb
pushf
xchg
sbbb
mov
insb
cmp
mov
fbld
push
mov
xchg
fwait
cld
cmp
mov
lret
mov
insb
cmpsb
rcrb
pusha
je
orb
lret
cmp
pushf
sarl
lret
stos
sub
or
inc
jb
xchg
pop
pusha
pop
lret
orb
push
and
repnz
mov
mov
mov
stos
in
mov
stc
sub
jb
inc
or
push
dec
pop
mov
stos
es
js
inc
fmuls
xor
mov
mov
repnz
xor
fs
sahf
dec
push
in
mov
pusha
mov
clc
test
adc
rcll
inc
imull
adc
lcall
xor
inc
jmp
mov
fcoml
stos
mov
pop
jp
adc
scas
jecxz
outsb
mov
ret
pop
les
loopne
fadds
popf
pusha
movsb
enter
enter
je
subb
and
push
pop
shrb
sbb
int3
jo
sbb
cmp
in
pusha
cmpsb
add
popa
xor
loope
cs
ret
pop
scas
imul
mov
pop
orl
xchg
je
rcll
xor
rorb
jae
cmp
imul
movsl
cld
jmp
lds
gs
add
mov
into
pop
xor
enter
outsb
sub
xor
cs
pusha
fsubs
push
rorb
fldl
loope
rcll
or
pusha
push
jno
jns
xchg
into
inc
test
int3
jb
inc
iret
or
ror
jp
push
jae
mov
inc
cmc
cmp
mov
mov
gs
mov
inc
int3
scas
pushf
lods
sti
xor
pop
xorl
xor
enter
pusha
add
fs
adc
ss
xor
je
mov
imul
jmp
int3
out
sub
pop
xor
fsubrp
lds
xor
pusha
cld
inc
dec
in
inc
dec
dec
push
pushf
add
sarl
stc
and
lret
cltd
push
mov
pop
addr16
aas
nop
in
bound
sbb
ds
fs
cld
and
popf
jecxz
pop
pop
push
out
addr16
js
loopne
js
jge
insb
xchg
adc
sarl
lret
pop
lret
cld
jmp
pop
out
inc
mov
inc
loopne
push
add
outsl
xchg
xor
xlat
sub
lods
adc
sub
push
jno
mov
scas
push
adc
or
roll
and
lret
aas
sahf
adc
jae
xor
ret
fidivrl
fcmovu
cmpsb
cwtl
shlb
mov
adc
pop
add
xor
adc
test
jmp
nop
xchg
loop
pop
negb
and
mov
aad
ret
mov
ret
pusha
outsb
or
xchg
rcrl
jb
inc
cbtw
sub
cmpsb
cmp
xchg
sbb
inc
mov
mov
xchg
movsl
sub
sahf
mov
roll
fcoml
or
xchg
fwait
clc
int3
jp
fcmovbe
ljmp
ss
pushf
fs
xchg
inc
nop
mov
or
xchg
dec
push
cs
inc
rcl
scas
cmc
sahf
fwait
mov
xor
ds
js
test
cmc
lcall
pop
jle
jle
insb
ljmp
enter
rol
xor
jecxz
xchg
nop
xor
in
jo
sub
xor
mov
loop
mov
pusha
out
inc
lds
pop
add
jns
pop
add
movsb
add
xchg
sbbb
jne
adc
rcll
test
roll
clc
call
imul
outsb
and
mov
imul
popf
popa
sysenter
fs
xchg
int
ss
stos
mov
or
inc
xor
movl
add
orl
xchg
mov
xor
shlb
cmp
xchg
outsb
mov
notb
adc
ljmp
stos
les
dec
push
jle
and
stos
adc
in
inc
mov
sub
dec
inc
loope
sbb
xor
jbe
outsl
arpl
pop
punpckhwd
dec
push
in
inc
lcall
and
inc
cmc
icebp
mov
movsl
jmp
orl
rolb
nop
add
call
xchg
fsubr
out
inc
xchg
inc
loop
and
push
lods
dec
ss
das
adc
ret
cmpsb
scas
mov
mov
inc
iret
sub
jns
inc
mov
add
push
xchg
lret
or
dec
mov
test
shrl
ds
jns
xor
sub
ds
scas
imul
fimull
in
xchg
jp
lock
xchg
orb
cmp
mov
sub
pop
imul
mov
sbb
and
push
daa
mov
test
adc
xor
fdivs
lea
test
jne
xchg
add
cwtl
push
imul
cli
in
or
lods
loop,pt
cmp
xor
call
pop
ljmp
shrl
xchg
push
dec
mov
xchg
cli
xchg
loope
mov
imul
dec
lock
movsl
jl
push
push
pusha
xchg
cmpl
xchg
enter
mov
xor
insl
fsubs
push
shl
xchg
push
enter
movsl
push
jo
mov
jp
pcmpgtb
test
push
movsl
dec
adc
imul
inc
imul
jns
sbb
test
jbe
data16
sub
push
jb
nop
mov
dec
aam
push
xchg
mov
test
inc
jo
and
pop
jne
cmp
aad
test
xchg
aam
movsl
loope
dec
pop
sbbb
mov
xor
repz
nop
mov
mov
int3
jg
dec
mov
add
mov
scas
mov
pusha
inc
xchg
enter
int
push
push
mov
sbb
stos
loop
enter
in
les
ds
insb
cld
adc
dec
jbe
aaa
sub
lret
ds
shl
push
push
cmp
mov
cltd
cld
pop
cwtl
fcmovbe
lods
ja
push
cmpsb
cmpsb
inc
popf
xorb
xchg
sahf
fs
xchg
hlt
lock
xor
ss
lcall
sub
sbb
jns
dec
orb
mov
xor
xchg
cmpsb
movsl
push
adc
and
test
fisubs
insl
push
aam
imul
scas
mov
xchg
ret
jbe
xchg
and
mov
mov
test
rcrb
mov
sub
pusha
and
pop
lret
sbbl
adc
sti
inc
clc
mov
pop
push
xchg
jno
mov
fisttpll
jno
cmpsb
cmp
popf
imul
lcall
dec
mov
je
rolb
inc
stos
test
sarl
stos
loop
les
xchg
icebp
test
adc
sarb
and
fdivl
inc
push
and
imul
test
inc
sahf
sbb
in
mov
cli
inc
test
inc
lcall
push
push
imul
pop
cs
xchg
idivb
push
sbb
es
mov
mov
add
mov
movsb
xchg
gs
push
lret
enter
lcall
cmpsb
sub
or
push
push
ja
movsb
out
dec
and
jmp
lock
sbb
popf
inc
xor
fstps
js
js
data16
cmp
push
nop
fwait
lods
xchg
and
mov
xlat
rcrb
les
int
cmp
or
lret
movsl
jo
nop
or
lock
fwait
loopne
dec
and
or
sbb
mov
cld
dec
pop
push
loope,pt
inc
inc
bound
nop
shlb
xchg
ds
jb
mov
and
cmp
je
fidivl
cmpb
xchg
dec
mov
addl
pop
out
and
sbb
sub
pusha
ss
add
mov
mov
sub
pushf
add
filds
ljmp
push
xchg
stos
stos
xchg
inc
xchg
imul
and
push
mov
adc
call
test
pop
xor
iret
jns
xchg
divl
xchg
div
sub
mov
stos
add
inc
outsl
rcrl
mov
enter
punpckhwd
mov
ja
pop
and
cli
mov
dec
aaa
inc
pop
dec
sub
sub
jmp
mov
rcl
add
or
or
outsb
pop
pop
inc
lods
stos
mov
in
or
js
mov
jle
jns
xor
into
sbb
fwait
imul
mov
repnz
pusha
loop
xchg
dec
add
fs
mov
jecxz
es
je
insb
enter
mov
sub
mov
add
rorl
mov
add
dec
sub
cmp
out
push
mov
mov
dec
pop
mov
lcall
mov
addr16
fmul
inc
sub
push
cs
repz
xor
lds
jo
rcr
setae
dec
loopne
rcll
jbe
adc
sub
lret
xchg
lds
clc
inc
cmpl
lods
mov
pop
push
inc
cmp
and
cmp
ja
cltd
jnp
cwtl
and
xchg
popf
jo
mov
inc
test
mov
sahf
jo
inc
jle
xlat
jl
mov
movsl
fimull
xor
push
aaa
jp
test
subl
arpl
mov
and
sub
pusha
and
xchg
and
pop
cmp
mov
movsl
imul
pop
mov
inc
lds
push
mov
jl
inc
mov
mov
inc
out
add
xor
movb
and
and
mov
lret
dec
sti
cmc
cltd
jbe
push
mov
inc
out
fldenv
cwtl
sarl
fistl
pop
mov
mov
xchg
bound
pop
cmpsb
jne
rorl
xor
adc
xor
fists
repz
jle
fmull
cmp
das
mov
inc
mov
mov
fsubs
fdivrl
lret
xor
das
test
imul
sbb
inc
adc
dec
cmpsl
loope
lahf
add
sti
inc
cmp
movsl
jb
jnp
xchg
mov
jecxz
mov
insl
lret
dec
inc
aam
arpl
push
imul
push
sub
ret
in
xlat
mov
jne
and
xchg
mov
mov
inc
rcll
out
add
xor
sbb
add
jne
cmpsb
add
inc
mov
and
jnp
or
pop
test
pop
mov
and
ret
cmp
adcl
xchg
js
test
aaa
and
mov
xor
inc
popf
addr16
arpl
arpl
ljmp
or
dec
fcmovu
pusha
cmc
jo
andl
lahf
xchg
por
add
sbb
pop
test
sub
push
pop
stos
or
inc
sub
filds
lods
cmp
insb
repnz
push
ret
sti
jg
clc
into
insl
xor
xor
xlat
repz
pop
fst
sbbb
mov
addl
jmp
pop
adc
sub
jb
arpl
add
xchg
sbb
sub
lcall
mov
jno
and
and
out
ljmp
rolb
arpl
sbb
movsb
fcom
inc
aaa
dec
jge
lock
imulb
sub
fs
leave
in
and
push
push
xor
mov
jbe
mov
test
in
aaa
mov
jmp
xchg
stc
or
push
push
add
fwait
jl
rolb
daa
adc
mov
cwtl
push
jmp
jo
jbe
push
add
dec
cmp
push
test
scas
notb
repz
fldcw
arpl
bound
lds
popa
dec
mov
ja
repz
imul
test
push
mov
loop
cmp
jp
cwtl
inc
mov
in
push
fsub
xor
pushf
inc
scas
ds
mov
dec
insb
mov
adc
push
mov
mov
arpl
lods
leave
insb
bound
int3
jp
xchg
cmpsl
inc
into
xchg
fs
xor
push
inc
mov
out
xchg
mov
cld
dec
adc
lods
inc
out
cmp
mov
in
mov
jp
in
testb
lods
fs
test
push
loope
mov
std
jb
lea
mov
push
mov
ret
mov
pop
les
dec
mov
jge
stos
sbb
xor
add
cmpsb
fadds
popa
xlat
sub
imul
je
inc
aad
iret
lods
shlb
and
dec
aas
ds
inc
pop
mov
fstl
test
test
cmp
hlt
stc
mov
jge
jl
pushf
inc
dec
pop
sbb
fwait
enter
push
and
jae
mov
inc
lret
scas
test
pop
xchg
addb
jae
neg
and
test
ja
scas
gs
mov
mov
and
insb
jecxz
test
ss
sbb
or
pop
cmp
sbbb
adcl
data16
jno
test
mov
gs
xchg
xchg
inc
les
retw
fwait
pop
in
pop
pop
and
xor
sub
cmp
pop
nop
jno
xor
mov
lds
xchg
scas
push
inc
in
ss
sub
arpl
js
xor
pusha
movsl
cs
mov
std
imul
push
addr16
ja
dec
aaa
xchg
xchg
je
fwait
cmp
pop
xchg
out
pop
gs
ja
dec
pop
jne
xchg
lock
ret
in
jmp
pop
cmpsb
adcl
es
xor
push
out
pop
rcll
push
movzbl
dec
pop
cltd
mov
arpl
mov
add
iret
mov
mov
je
stos
pop
orl
lock
pusha
imul
sub
or
aas
and
xchg
pop
push
lea
pop
andb
aam
inc
cltd
jo
outsl
bound
adc
cmpsb
mov
clc
adc
movsl
push
xor
xchg
or
mov
or
fs
mov
in
ljmp
pop
int3
mov
and
mov
jo
sarb
test
fwait
sahf
dec
lods
xchg
pushl
mov
jg
inc
adc
push
dec
pop
insl
imul
mov
and
jmp
cmp
xchg
push
cwtl
jb
push
cmp
sbb
mov
ja
sti
cmpsl
leave
mov
dec
mov
mov
inc
movsb
hlt
dec
xchg
mov
scas
pop
push
stos
ret
push
into
pop
xorl
push
lock
cmp
fwait
fs
loopne
bound
sahf
cmpsl
insl
mov
into
xor
dec
insb
pop
divl
mov
dec
in
xor
lock
add
orl
mov
outsb
dec
test
pop
push
adc
test
lcall
fcomps
cmp
pop
push
lea
mov
push
fs
adc
pop
mov
dec
dec
push
mov
imul
fsubs
cmp
pop
inc
mov
jo
in
sub
cs
bound
push
xchg
leave
mov
pop
push
or
dec
pushf
dec
imul
push
test
mov
bound
push
outsl
filds
in
jne
pop
insl
jmp
add
jnp
mov
adc
push
or
aaa
push
sbb
test
pop
mov
and
push
ret
push
mov
adc
sbb
jne
push
and
in
mov
push
sbb
ja
arpl
mov
xchg
xor
mov
lea
or
fs
xchg
sbb
outsb
out
fldl
nop
add
fwait
sbbl
mov
cmp
repnz
arpl
fwait
adc
mov
mov
addl
dec
andb
fmuls
pop
mov
add
jnp
mov
out
bound
sbb
xor
mov
dec
ds
adc
xchg
adc
mov
push
lahf
je
loop
iret
xchg
or
xor
push
aad
cmp
sub
mov
xlat
inc
pop
nop
insb
sbb
xchg
loopne
adc
aad
and
mov
mov
roll
push
cli
addb
out
aaa
test
mov
xchg
ja
jns
std
xor
mov
sub
xchg
shll
xchg
ror
in
jge
movsl
mov
in
sbb
lret
mov
jne
call
faddl
mov
stos
lcall
scas
sahf
push
adc
mov
mov
js
into
je
andl
ja
lcall
dec
push
dec
mov
mov
arpl
insl
mov
movsb
and
popf
xor
imul
movsl
pop
mov
mov
dec
mov
sbb
inc
inc
sub
mov
outsl
mov
fmull
out
aad
and
pop
insb
test
gs
mov
test
xor
imul
adc
ret
inc
movsb
mulb
push
add
adc
bound
test
cmp
xchg
mov
xchg
mov
stc
inc
icebp
insb
mov
fs
lods
push
mov
xlat
mov
jge
std
lods
push
outsb
addr16
imul
cmpsb
pop
jl
mov
mov
fidivrl
hlt
mov
jo
imul
sarb
data16
rcrl
test
mov
outsl
pusha
mov
jmp
ljmp
mov
aad
loopne
lret
subb
imul
mov
rcll
sbb
lahf
xchg
in
cs
mov
stc
sub
push
arpl
sti
pop
mov
mov
popf
mov
and
cmpsl
scas
test
xchg
xlat
lret
or
or
stos
sbb
xchg
scas
or
dec
dec
test
sbb
mov
jg
mov
shr
mov
ja
pop
fs
push
lea
enter
pop
out
add
test
push
inc
add
cwtl
pop
push
jp
dec
aaa
pop
arpl
std
ds
mov
aam
dec
xchg
ss
dec
ret
lahf
insb
add
in
fs
mov
push
sbb
daa
lret
jge
adc
inc
cmp
ret
xor
push
xchg
pop
pushf
adc
xor
and
push
sbbl
dec
iret
movsl
push
or
pushf
arpl
xor
jbe
xchg
addl
cwtl
mov
xchg
arpl
jge
insb
test
jb
xor
dec
jl
pop
insb
dec
js
jl
inc
jmp
jbe
pusha
ret
stos
cmp
push
js
jae
mov
add
jns
mov
outsl
mov
xlat
adc
js
mov
and
sbb
mov
sbb
xchg
pop
jge
rolb
inc
sarb
pop
imulb
stos
inc
sarl
jne
bound
popa
jo
out
je
push
mov
mov
mov
movsb
dec
dec
mov
dec
ss
pusha
pop
cmp
pop
mov
push
movsl
push
inc
in
push
xor
xchg
mov
push
imul
leave
xor
mov
lret
jns
adc
mov
jno,pt
lds
outsb
js
xlat
dec
sbb
mov
rolb
mov
in
or
andl
mov
pop
push
jl
dec
push
sarl
scas
in
mov
cmp
and
push
cmp
dec
scas
dec
mov
mov
push
hlt
test
ret
cmp
test
adc
mov
lret
pop
push
inc
test
push
ss
outsb
mov
push
es
cs
bound
mov
adc
dec
xor
mov
test
jne
rcll
aaa
outsb
add
xor
arpl
xchg
mov
aad
sbb
and
sub
inc
push
push
les
sbb
sbb
out
sbb
fimull
aad
and
jb
push
inc
test
add
loopne
xchg
adc
xlat
jbe
mov
jp
xor
mov
popa
jge
test
sub
out
adc
data16
bound
enter
jne
push
test
imul
clc
sub
jle
dec
sbb
sbb
inc
adcb
ljmp
fwait
adc
std
mov
outsb
push
jmp
fcomi
popa
jbe
movsl
xor
jb
dec
nop
pop
xchg
xchg
imul
nop
das
fbstp
divb
je
mov
out
psraw
cmpb
in
sub
cwtl
lock
js
aad
jbe
lret
pop
div
push
shlb
push
mov
lret
inc
cmp
adc
popf
in
mov
push
fistpll
xlat
push
lods
or
mov
or
mov
clc
ljmp
fldcw
xor
rclb
lret
push
pop
mov
or
mov
in
pop
stos
add
shr
push
cmc
fbld
adcl
loop
scas
shll
rcrl
fistpl
sbb
adc
mov
mov
mov
adc
xchg
jne
stos
pop
fdivl
je
pop
sub
and
cmp
jb
leave
push
mov
rcr
das
scas
test
push
push
push
popa
xchg
xchg
fmuls
push
pop
fwait
or
xchg
xor
incl
push
int
nop
imul
xor
xrelease
gs
fcomps
mov
pop
and
inc
call
xchg
rcl
jl
int
and
mov
fiaddl
xor
or
xchg
mov
jge
mov
push
insb
push
cmp
lock
adc
negl
pop
xchg
shlb
mov
arpl
popa
iret
xor
pop
data16
ds
js
cmpsl
xor
cmp
mov
enter
test
xorl
scas
push
cmpsl
insb
outsl
fidivs
sub
xor
ja
dec
adc
iret
insl
push
jl
cld
pop
int
jg
ja
or
xchg
pop
xor
and
int
pop
jns
xchg
push
cmp
cmp
xchg
mov
aam
dec
in
mov
aam
jp
jg
movsb
push
pop
int
xchg
dec
pop
fs
add
sahf
inc
stos
rolb
sub
jle
fcom
xchg
inc
cmp
push
ljmp
insb
outsb
sub
loop
jp
daa
adc
ret
pop
inc
push
loope
pop
inc
push
sbb
out
push
test
xor
cmpsl
pop
lea
mov
sub
data16
push
push
in
xor
mov
mov
into
fwait
jl
loopne
out
lcall
lds
pop
fiaddl
add
orb
mov
lahf
push
xchg
loop
xchg
cmp
shrb
mov
cs
cmc
enter
mov
mov
enter
pop
nop
sub
leave
xchg
sbb
repnz
sti
add
jle
out
pop
test
outsb
mov
inc
ret
pop
mov
test
pop
test
test
rclb
or
mov
pop
fs
mov
adc
sub
jge
sub
les
or
mov
sahf
arpl
mov
lods
shrb
mov
lahf
add
cltd
jno
jp
pop
cmp
and
nop
mov
dec
push
gs
push
mov
inc
cltd
sbb
hlt
dec
xchg
xchg
movsb
mov
add
rcll
jp
data16
sub
movsb
sub
push
lahf
or
out
push
jg
pop
repz
sti
in
test
out
or
test
jnp
mov
hlt
jmp
adc
adc
xchg
std
push
xchg
jmp
and
mov
mov
adc
test
pop
orb
loope
push
lds
nop
and
add
fwait
jmp
inc
scas
adc
movsb
icebp
sbb
mov
stos
rorb
js
jnp
xchg
cltd
loopne
ret
ret
mov
xchg
or
test
pop
add
lcall
lahf
push
inc
stos
ds
aaa
dec
dec
xchg
aas
fstps
inc
and
push
pop
pusha
jae
test
imul
and
daa
popf
stos
nop
stos
rcr
xchg
rolb
add
mov
shrb
dec
fwait
pusha
jne
mov
jne,pt
sbb
int
aam
mov
add
dec
jle
mov
test
cmp
fs
rcrb
ret
sub
pop
insb
mov
lret
mov
leave
mov
mov
test
xchg
sbb
push
jno
pop
jb
sti
pushf
or
subl
adc
out
mov
test
xchg
into
nop
sbbb
lahf
jae
jl
bound
mov
mov
movsl
sbbl
popf
lcall
mov
adc
int
outsb
pop
mov
rcl
push
lea
cmp
fucomp
mov
inc
fiaddl
inc
push
cmpsl
sahf
imul
jne
lcall
sub
nop
or
push
lods
mov
sbb
int
dec
aaa
cmp
jno
jnp
out
jbe
mov
pushf
adc
mov
sbb
cmpl
adc
les
addr16
es
shrl
jge
fisubrs
cwtl
call
push
lods
adc
add
mov
and
in
movsl
ret
mov
dec
cmp
stc
mov
test
cld
test
fisttpl
ret
adc
js
xchg
and
jnp
sub
ret
xchg
bound
sub
adc
xchg
into
sbb
stc
xor
xchg
jno
mov
cli
push
mov
sbb
jno
hlt
inc
jp
inc
jg
inc
stos
mov
outsl
add
inc
jo
nop
inc
andb
pushw
lock
cmpsl
mov
fs
stos
stos
inc
cmpsb
xor
mov
aas
xchg
jl
inc
bnd
jg
add
jbe
outsb
inc
inc
mov
adc
pop
out
inc
xor
adc
push
pop
and
nop
test
nop
jle
ror
ret
jns
xorl
push
pop
mov
sarb
addr16
sti
mov
scas
js
mov
xchg
enter
push
dec
jle
jae
shll
mov
push
cwtl
mov
cmpb
out
sarl
cs
mov
cld
popl
test
sar
cmpsl
sarl
sti
jl
pop
popf
push
xchg
pop
ja
pop
dec
mov
dec
mov
imul
jl
pop
imul
sahf
in
and
mov
mov
repnz
xchg
insb
insl
repz
test
stos
mov
mov
rcr
orb
fs
cmp
mov
filds
iret
jae
orb
stos
xor
std
test
xchg
push
mov
inc
dec
push
dec
jo
stos
imulb
shl
popf
push
dec
inc
adc
repnz
js
movsb
mov
jb
mov
les
stos
xchg
in
xchg
cld
cmpl
xchg
ljmp
cmp
push
mov
stos
outsb
pop
and
in
jl
scas
popa
js
xchg
fs
movsb
pusha
stc
mov
outsb
imul
xchg
inc
jg
push
aad
mov
xchg
out
aas
mov
inc
aaa
inc
dec
dec
jnp
mov
popa
xchg
int
push
mov
nop
adc
ficomps
loope
xchg
adc
bound
and
mov
mov
pusha
xchg
push
jl
movsb
pop
enter
and
adc
push
xchg
andl
loop
pop
movsl
lahf
sbb
insl
pop
mov
cmp
lcall
push
in
iret
inc
je
jp
cltd
repz
arpl
mov
adc
ljmp
subb
jecxz
cltd
mov
xor
mov
cmpsl
loopne
mov
int
in
jbe
jns
test
mov
mov
push
pop
test
inc
mov
add
out
xor
aad
add
pushf
jbe
jle
or
arpl
into
or
sbb
lods
push
pushf
adc
mov
inc
xchg
mov
lcall
test
das
push
orl
jle
outsb
lret
loope
add
in
pop
int3
ret
or
jns
pop
adc
and
ret
je
cmp
push
jo
mov
push
je
jl
jmp
lret
dec
push
bound
add
stc
push
movsb
push
mov
sti
stos
lret
pop
sarl
enter
imul
mov
fnsave
sbb
add
dec
and
or
pop
ds
nop
adc
inc
jo
sbb
aaa
sahf
insl
scas
sbb
inc
cld
and
jns
or
sbb
push
bound
daa
xchg
pop
lahf
mov
hlt
fiadds
jge
cwtl
mov
ficompl
lahf
into
xchg
stos
push
test
ret
call
stos
test
in
pop
adc
mull
imul
mov
sub
push
mov
jp
add
je
mov
xor
xor
test
cmp
and
jp
hlt
ljmp
or
popa
cwtl
sub
jp
fstpt
mov
cld
xchg
xchg
lods
aas
test
push
fcompl
stos
jo
lret
scas
out
xor
cmp
mov
test
xor
jl
pop
insb
imul
popf
mov
outsb
cmpsb
fisubl
pop
pop
mov
xor
mov
dec
adc
out
call
dec
leave
pop
mull
in
adc
mov
mov
inc
leave
xchg
fxch
adc
dec
sbb
icebp
cmp
sbb
adc
xchg
adcb
ds
popa
pushf
push
xorb
movsl
and
sub
push
jbe
jge
cltd
cmp
movsb
js
outsb
pushf
push
ss
mov
dec
mov
xchg
test
xchg
jl
fimull
test
lock
push
popf
xor
hlt
in
inc
jns
mov
or
stos
arpl
cli
push
jg
ret
stos
loope
jp
lods
cmp
push
popf
pusha
xor
adcl
outsb
pop
cmpsl
jmp
sub
and
call
jne
test
cmpb
lods
out
pop
out
jl
mov
jge
cmpsb
cmp
add
cmp
xchg
jno
xchg
dec
call
fcmovnb
xchg
sub
nop
in
cmp
int
dec
testb
pop
repz
stc
or
stos
pop
mov
push
ret
xchg
loope
rcrl
xchg
rorl
pop
pop
cmpl
test
inc
ja
sub
sbb
outsb
push
xchg
inc
test
fld
xchg
ljmp
pop
roll
lcall
jecxz
aas
pushf
adcl
les
sarb
lea
jle
movsb
push
dec
xchg
outsb
outsb
mov
mov
movsb
push
or
aas
pushf
lods
jo
lahf
pusha
jb
loope
cmp
jl
jb
jmp
pop
js
movsl
das
jge
cltd
outsb
jle
mov
cmp
shl
lahf
ja
pop
jns
insl
pop
jbe
shlb
fwait
inc
mov
jg
fs
xor
adc
sub
ret
mov
movsb
orl
cld
nop
jge
rorb
add
insb
cltd
xlat
andb
mov
cmp
push
insb
into
sbb
dec
xchg
ljmp
cmp
sar
cmpsb
aad
int3
aas
aad
push
jno
pop
mov
sbb
mov
push
pop
stos
lcall
inc
jp
in
mov
mov
jbe
arpl
mov
xchg
jp
mov
push
notb
out
sbb
pop
pop
mov
iret
pop
hlt
aam
push
sub
out
adc
xchg
adc
imul
rorb
cwtl
das
inc
and
push
test
add
int3
cmp
sahf
mov
scas
ljmp
shlb
mov
jb
add
mov
dec
push
mov
or
sbb
dec
dec
fiaddl
jb
inc
dec
sbbl
pop
fisubl
jne
andb
popa
sahf
test
outsb
ret
insb
mov
cld
cli
lea
pop
pusha
dec
xchg
outsb
mov
inc
cmp
and
mov
xor
mov
mov
sbb
cwtl
cld
call
out
xchg
xor
mov
test
fwait
scas
and
cwtl
mov
dec
xchg
aas
mov
sub
inc
jae
fdivrl
pushf
imul
pop
addl
insl
outsl
ror
mov
ss
stos
jb
push
cwtl
fisubs
xor
es
xchg
xchg
or
jno
sti
int
pusha
test
pop
shlb
lods
xorl
insb
mov
clc
jno
xor
xchg
pushf
mov
js
cwtl
mov
es
pop
push
jg
mov
push
aam
or
mov
inc
cmpl
rcl
cltd
pop
pushf
popa
popf
sbb
in
or
repnz
subb
movsb
or
rol
enter
sub
mov
xlat
mov
and
scas
push
xchg
jae
popf
pop
jne
movsl
inc
xchg
sahf
and
pop
popa
push
mov
sbb
fs
insb
and
adc
imul
or
ja
jo
xchg
push
mov
shrb
bound
mov
xchg
std
mov
cmp
adc
mov
mov
daa
stc
stos
inc
mov
enter
ja
andl
test
sbbl
adcl
push
dec
es
ret
mov
mov
dec
mov
push
push
ja
dec
xchg
push
ret
add
movsl
push
pop
sub
push
add
in
push
fs
icebp
and
arpl
addr16
fidivl
dec
ret
or
roll
mov
mov
insb
das
jne
leave
mov
add
jno
call
dec
mov
sub
fs
or
inc
xchg
and
test
lea
mov
mov
imul
cmpsl
imull
dec
stos
xlat
mov
and
cmp
sahf
jmp
pushf
push
dec
cmpsb
rcl
test
cmp
popl
js
cmp
dec
mov
inc
push
dec
push
bnd
or
mov
xchg
and
ret
ficomps
hlt
and
fildll
dec
rcrb
pop
pop
mov
insb
pop
ret
addr16
es
fwait
repnz
inc
xchg
dec
pop
mov
jnp
orb
jb
mov
enter
into
push
add
shlb
push
outsb
call
xor
add
cs
add
jo
notl
leave
ficompl
inc
mov
popf
les
cmpsb
lcall
ret
sbb
pop
movsl
cmp
scas
enter
mov
cmp
cmp
lcall
das
add
lea
jge
fistps
mov
or
cmp
mov
movsl
mov
das
rcl
and
fstps
lods
aam
mov
ret
lahf
dec
jmp
dec
jbe
mov
dec
lea
insb
out
and
aad
cwtl
in
inc
nop
add
mov
push
out
mov
add
ds
in
lret
lahf
cli
lcall
pop
stos
das
daa
out
xor
push
mov
movsl
xchg
mov
sub
sbb
mov
pusha
sub
pop
in
stos
xchg
xchg
aas
xchg
push
dec
xor
fmull
or
call
pop
jno
push
mov
add
ret
call
lods
mov
or
and
leave
scas
push
mov
mov
into
pushf
ja
clc
popa
or
jge
push
dec
outsb
test
subb
test
jg
fwait
or
jno
pop
in
push
pushf
inc
ficomps
daa
dec
je,pt
xor
cmp
dec
jp
xlat
lods
pop
xchg
add
test
xlat
mov
jo
adc
xor
mov
out
adc
mov
sub
and
lds
mov
pop
je
ja
adcb
aad
int
sub
jbe
mov
addr16
adc
pop
dec
stos
sbb
daa
cwtl
lds
mov
popf
and
xchg
fwait
sbb
xlat
arpl
in
mov
lret
loopne
mov
sub
adc
sbb
ja
loope
adc
orb
dec
jg
test
dec
or
and
test
mov
scas
out
aam
push
popf
movsb
dec
mov
inc
xchg
add
fiaddl
pop
ja
adc
das
jg
mov
add
adc
and
sub
cmpsb
out
loop
add
jle
and
xchg
jg
dec
adc
lret
xor
mov
daa
cltd
pop
adc
and
xchg
sub
fcomip
adc
fst
mov
push
testb
xlat
jnp
shrl
add
cmpsb
pop
mov
sti
mov
dec
dec
pop
jg
rsm
scas
fldt
pop
jl
sub
add
cmp
out
jecxz
cmc
inc
das
addr16
ss
adc
jns
or
xchg
ret
lock
pushl
aam
lods
xlat
mov
jmp
data16
or
add
mov
loopne
daa
stos
xor
movsl
jecxz
das
push
imul
xchg
je
sbb
dec
insb
lds
int3
repnz
dec
xchg
js
and
sti
movsb
pop
pop
pop
add
inc
test
lods
adc
addl
xor
popf
andb
mov
dec
dec
pop
and
or
loop
cmpsl
mov
out
mov
or
jecxz
xchg
shrb
or
idivb
leave
jl
cmp
nop
xchg
dec
dec
movsl
jl
jo
mov
xchg
dec
or
pop
inc
push
ret
xlat
ja
pop
lahf
push
sbb
inc
jns
lcall
shlb
lret
add
ret
push
and
cs
fs
shrb
shlb
mov
aaa
ja
pop
adc
ret
mov
adc
mov
cmp
push
lahf
inc
sub
adc
cld
sbb
in
push
scas
inc
dec
mov
jl
adc
inc
ss
push
dec
lea
pop
stos
jae
bound
jne
jne
xchg
mov
push
dec
cmp
sub
inc
ljmp
mov
push
xchg
mov
cmp
orb
icebp
je
mov
arpl
les
mov
mov
push
iret
pushl
test
imul
pop
lahf
adc
and
pop
fmulp
out
dec
mov
aas
cs
repnz
arpl
loop
inc
jae
cmc
fists
push
mov
int3
sbb
mov
in
xor
imul
lret
sti
jmp
fcmovbe
dec
fstps
cmpsb
fisubrs
cmpsb
insb
jge
scas
ret
jg
adc
xchg
or
leave
push
mov
jae
sahf
jl
clc
adcb
decl
jo
jns
add
push
fcom
jle
mov
xchg
mov
mov
jle
jo
fldcw
jp
cmp
sub
pop
cltd
inc
mov
in
rcll
les
or
mov
in
lds
movsb
int
inc
mov
dec
ds
leave
xor
test
jo
imull
and
repz
pop
sbb
pusha
aad
outsb
push
jge
in
icebp
mov
push
and
dec
popa
pop
cltd
insb
xchg
pusha
rorl
test
dec
mov
hlt
mov
int
movsl
xchg
stc
pop
fstpl
divb
ret
push
test
sbb
xchg
test
xor
pop
scas
dec
in
xor
mov
mov
shl
mov
add
rcrb
cmc
cltd
adc
bnd
inc
mov
mov
jns
sbb
xor
and
hlt
mov
mov
inc
lea
dec
push
and
sub
js
pop
cltd
cld
movsl
mov
outsl
jmp
sbb
fiaddl
sbb
test
jge
clc
rorl
pop
pusha
out
or
outsl
fcmovb
ss
sahf
aad
imul
mov
aas
pusha
ljmp
insb
mov
sub
xlat
fidivl
cmpsb
hlt
test
outsb
ss
idivb
mov
in
cmc
cmp
xchg
pop
push
lea
add
rcr
addr16
sub
nop
popf
js
fisubrl
mov
sbb
push
sub
cmp
sub
add
and
xchg
mov
into
nop
aas
mov
int3
cld
mov
mov
add
cwtl
leave
or
inc
popf
imul
fdivrl
jno
sub
sub
mov
dec
lret
cmp
inc
lahf
fimull
icebp
sub
push
adc
push
jecxz
out
cmpsb
push
lcall
sub
pop
cmp
rorb
ret
sbb
push
cwtl
push
jl
jmp
adc
bound
xor
add
mov
pop
std
push
inc
ds
stos
jo
inc
bound
repnz
sti
idivl
and
imul
fbstp
adc
dec
xchg
xchg
pop
adc
cli
mov
add
ret
out
cmp
movsl
mov
pop
sub
jl
sbb
ja
arpl
push
seto
fidivrl
aaa
cmpsl
sti
push
sbb
das
arpl
xchg
adc
stc
sub
jmp
jnp
test
or
mov
dec
or
jmp
mov
cs
xchg
or
add
sbb
pop
xlat
fcoms
lds
push
ret
pop
lds
shlb
add
mov
call
inc
fwait
out
in
rcll
sub
dec
mov
or
jp
ja
popf
mov
jbe
jle
lahf
insl
and
mov
xchg
mov
out
leave
leave
nop
xchg
mov
jge
mov
pop
mov
dec
test
lods
popf
scas
leave
cmpb
lea
and
dec
testb
test
test
xchg
sbb
mov
xchg
sarl
pop
xor
les
fisubs
jae
mov
cli
insb
xchg
enter
sub
inc
stos
test
es
push
xor
cmp
mov
xchg
mov
mov
popf
sub
add
rol
mov
sub
cs
pop
fsubr
lods
push
fmuls
int3
dec
fldt
jb
dec
ss
addb
cwtl
call
mov
push
stos
adc
cltd
fdivrs
sub
mov
mov
mov
cli
sti
push
call
mov
mov
xor
sarb
lcall
mov
nop
stos
rol
xchg
test
lahf
rol
psubsw
mov
jne
popa
or
popf
adc
movsl
dec
push
cwtl
cmp
test
add
das
add
mov
xchg
aam
mov
std
push
nop
sub
js
mov
test
pop
ffree
xchg
push
icebp
pop
push
cmp
jle
cld
jns
xor
push
lret
sbbl
ror
and
lret
jo
outsb
xchg
push
pop
stos
movsl
movsb
lahf
xchg
jle
js
js
xchg
inc
pop
das
ss
fcos
pop
jl
inc
push
cmc
jne
push
lea
dec
mov
cmpsl
dec
in
mov
inc
cmp
xlat
jg
xchg
notl
iret
movsl
mov
push
rolb
movsb
dec
pop
inc
cld
shrb
fnstsw
lds
xor
enter
imul
xchg
mov
test
dec
cmp
pop
js
int
aam
xor
mov
fmuls
xchg
push
sbb
push
and
mov
add
std
add
jns
leave
inc
xchg
adc
sub
ljmp
popa
pop
mov
gs
sub
clc
pop
lahf
sti
pop
jo
loope
add
cmp
xchg
das
sub
mov
jno
dec
or
or
cmp
push
mov
gs
and
outsb
jle
cmpsl
add
lock
cmp
and
js
mov
roll
inc
sub
jmp
push
out
inc
xchg
sub
data16
xor
mov
lret
out
mov
frstor
imul
or
inc
jg
scas
xchg
inc
mov
lret
je
jge
or
push
pop
inc
push
sahf
and
adc
mov
jns
popf
sub
jb
imul
les
pop
inc
out
cmp
js
push
xchg
iret
push
xchg
dec
inc
fmull
movsb
pop
into
cmp
jmp
test
outsl
mov
or
dec
in
in
outsb
adc
enter
sbb
fwait
mov
and
sub
addr16
add
arpl
jge
pop
mov
aad
insl
repz
in
ss
rsqrtps
cmp
imul
mov
mov
cmpsb
popa
and
mov
repnz
dec
xor
call
negb
aam
cmp
cli
or
mov
mov
inc
pop
scas
and
imul
jb
fidivrl
cwtl
loop
mov
gs
inc
imul
push
cmp
jnp
cwtl
pop
lock
cmpsl
cmpb
pop
nop
xlat
pop
shr
js
jae
fs
data16
scas
jnp
inc
pushf
inc
mov
mov
cmp
dec
pop
pop
jb
mov
pop
scas
aam
mov
jle
fwait
je
movsb
imul
dec
cltd
mov
xchg
gs
ss
inc
pop
shlb
xchg
enter
xor
std
movsl
push
scas
into
lods
push
out
cmp
test
icebp
mov
or
cmc
cmp
mov
cld
jp
and
in
fstps
mov
clc
xlat
inc
jb
mov
sbb
dec
mov
js
inc
sub
push
and
xchg
ret
adc
mov
ljmp
inc
inc
mov
or
js
xor
and
repnz
loope
lcall
in
sbb
lret
xlat
dec
test
jmp
inc
es
repz
jno
xor
jbe
loopne
popf
mov
aad
lcall
aas
mov
test
xor
sbb
mov
sbb
sbb
push
mov
or
in
mov
rcll
mov
sbb
push
sbb
lcall
jmp
jmp
dec
adc
enter
push
jns
push
pop
inc
orl
mov
mov
push
imul
fmull
mov
call
push
jbe
jle
mov
test
into
jns
mov
daa
in
push
bound
mov
xchg
pop
outsb
mov
pop
adc
dec
pop
inc
fdivr
or
aaa
mov
push
pop
mov
clc
mov
mov
push
mov
ret
cwtl
fidivl
movsl
mov
insl
pushf
nop
jo
js
test
mov
cld
notb
or
mov
pop
jmp
mov
call
jnp
dec
xchg
subl
movl
pop
dec
push
pop
pop
cli
cmc
xor
pop
sub
pop
inc
dec
mov
mov
sti
out
and
add
mov
and
pusha
mov
dec
je
les
sbb
xor
pop
es
addr16
cmc
bound
mov
and
lret
pop
mov
mov
movsb
int3
lea
lret
mov
aaa
rcrl
cmp
scas
orb
cmp
cltd
enter
inc
pusha
lods
cwtl
out
mov
sbb
rcl
mov
mov
pop
jae
push
xor
jle
adc
addb
xor
dec
mov
imul
jbe
add
sbb
scas
or
pop
mov
stos
lock
mov
pop
and
xchg
dec
xor
outsb
inc
test
int3
pushf
jno
je
xor
dec
icebp
pusha
loop
push
sbb
add
aad
test
outsl
aam
push
or
in
add
movsb
xchg
dec
lahf
jbe
test
cmc
imul
jnp
sbb
fsubrl
jae
or
popf
push
jns
jecxz
repnz
mov
fcomp
sub
lock
inc
in
jbe
mov
icebp
pop
push
fstpl
sahf
shlb
pop
sbb
cli
mov
mov
pusha
fnstenv
lods
fdivrs
ds
fnstenv
enter
bound
jne
rcll
pop
xchg
jmp
pop
in
dec
lcall
xorb
bound
js
call
ffreep
adc
mov
mov
push
xchg
cmp
and
scas
ret
mov
xchg
shrb
and
mov
lret
push
mov
pop
nop
dec
sbb
xchg
adc
sub
lcall
inc
adc
dec
mov
mov
dec
inc
adc
mov
pop
cmc
xchg
testl
cmp
push
mov
push
jb
mov
push
ficoml
sub
lcall
cmp
xor
popa
es
inc
pop
sub
inc
dec
jo
inc
push
jae
inc
push
ja
cld
pop
pop
aas
dec
pop
jle
push
pop
sbbb
bound
cwtl
ret
push
data16
pop
sub
pop
insl
jp
bound
mov
imul
stos
jo
mov
ja
xchg
mov
xor
add
xchg
sahf
roll
cmpsb
mov
xchg
mov
mov
cltd
test
cmp
jns
jo
sbbl
cwtl
mov
xchg
imul
xchg
ja
adc
sub
enter
add
icebp
cmc
ljmp
mov
push
pop
jg
mov
push
jae
add
push
inc
into
leave
lret
push
inc
jge
stc
popf
gs
cmp
lods
dec
mov
pusha
outsb
mov
add
inc
cmpb
push
rorl
jge
cwtl
outsb
insl
aam
cmpb
fucomp
dec
push
and
jmp
mov
mov
mov
push
add
mov
popa
inc
push
addb
fldenv
and
ss
rorb
mov
incl
mov
jae
int3
pop
roll
pop
add
icebp
push
stos
arpl
adc
inc
jg
or
pop
cmp
pusha
lods
daa
push
call
mov
cmpsl
inc
iret
push
pop
cmp
dec
or
nop
or
into
test
popa
cmpsl
mov
es
pop
mov
enter
push
lea
xchg
sbb
inc
std
nop
cwtl
in
sub
pop
dec
sbbb
stos
cmc
cmpsb
or
test
addb
and
or
es
lods
or
xchg
pusha
std
repnz
test
jmp
push
mov
stos
pop
mov
test
data16
pop
nop
jp
fstp
in
or
cmp
push
sub
stos
jl
popa
inc
or
cmp
jbe
and
inc
sub
mov
pcmpeqb
lcall
sub
dec
movsb
std
sbb
cmp
shrb
or
mov
data16
and
push
cmpsl
pop
and
jo
scas
push
cmp
ja
or
mov
cmp
clc
pop
popa
das
stos
not
sbb
js
lahf
and
adc
sahf
or
xor
xchg
push
das
divb
bound
push
popw
mov
outsb
insb
add
mov
aam
sti
sub
mov
insb
pop
xor
mov
pop
xor
call
loop
cmp
pop
addr16
push
xchg
push
insl
mov
fnstsw
cmp
call
out
dec
es
std
rcrl
inc
cmp
sub
scas
orl
mov
cmp
in
sub
gs
movsl
cmpsl
mov
xor
int3
push
jae
sub
dec
lret
mov
scas
pop
sbb
mov
jns
jb
jb
nop
cltd
cmp
arpl
cmp
cmp
stos
push
pop
push
scas
test
jg
add
and
push
push
lods
or
ret
mov
dec
fsubl
sub
test
pop
insb
mov
add
jg
adc
and
pop
cmpsl
lcall
and
sarb
out
adc
ljmp
lret
test
bnd
lret
mov
sub
nop
inc
iret
test
cmpb
xchg
jb
repnz
xor
inc
pop
nop
js
jg
ja
pop
shl
push
mov
mov
into
xor
inc
lods
cmpsl
mov
js
pop
int
sbb
test
subb
and
aam
fildll
jnp
es
decl
decb
jl
cltd
jbe
inc
adc
inc
mov
sarb
lock
xchg
jnp
mov
jb
mov
jle
rorb
fucomi
xchg
push
test
lret
je
push
add
imul
in
andb
test
test
cmpsb
cmpsb
cs
rcrl
jl
mov
jno
adc
jge
and
notb
lods
je
and
cltd
xchg
xor
adc
inc
stos
add
scas
inc
fsubl
movsl
cmc
or
scas
clc
addb
mov
mov
push
ss
ja
add
mov
lds
stos
sub
lds
dec
mov
popf
jg
out
subb
lock
lods
dec
cmpsb
mov
mov
das
and
mov
pop
dec
dec
adcl
xor
jmp
ret
enter
pusha
ficomps
aam
test
jae
inc
imul
dec
push
cmpsb
and
sub
int
mov
pop
lcall
push
cmp
mov
hlt
je
xor
xor
mov
outsb
cmpsl
sarl
dec
push
gs
push
mov
fidivrl
inc
push
jg
mov
xor
mov
jo
jg
push
out
fistpl
and
mov
js
lods
pop
arpl
push
mov
add
pop
jp
imul
mov
subb
stc
pushf
adc
sub
xor
xchg
scas
loope
rcll
cmp
sti
rclb
insb
push
pop
sub
inc
enter
ret
pop
add
lds
dec
jnp
xor
xor
dec
lcall
pop
dec
or
jno
lret
insl
lock
js
in
xchg
call
pop
sub
test
pop
pop
push
repz
or
mov
mov
jge
push
aas
pop
data16
push
jb
ret
sub
pop
or
mov
jmp
sahf
push
ja
cld
stos
dec
imul
and
in
cmpsl
push
cli
cmc
inc
mov
popa
into
mov
adc
xchg
stos
data16
mov
xchg
cmp
insb
mov
clc
nop
push
pop
fnstcw
add
test
xchg
fnstsw
push
xchg
push
inc
in
lahf
mov
insl
ja
jbe
dec
inc
push
gs
pop
pop
pop
rorb
mov
push
or
dec
xor
stos
push
inc
test
mov
jl
push
mov
movsl
bound
inc
enter
inc
psrld
jns
ljmp
or
xor
jg
insl
jp
push
jp
pop
sub
xchg
xchg
cmp
jo
sbb
arpl
jae
cmpsb
je
dec
stos
es
and
mov
xchg
sub
bound
in
and
sub
dec
mov
jge
fxam
loop
test
mov
les
mov
and
xor
ficompl
sub
mov
aaa
mov
jne
mov
mov
jo
loop
mov
mov
xchg
fxch
stos
inc
mov
jo
movsb
inc
pop
insl
mov
push
jle
jne
test
je
inc
mov
dec
orb
cltd
sahf
cmpsb
js
pop
mov
jns
addl
enter
adc
sbb
bound
inc
cwtl
imul
dec
fimull
lahf
shll
cli
pop
jg
imul
pop
cmp
fisubrl
xchg
nop
add
jne
pop
jbe
jl
leave
pop
mov
xor
push
jecxz
lods
cmpsb
popf
int
addb
pop
xchg
adc
or
fcoms
mov
popf
cmc
lds
stos
test
cmp
mov
cmp
lahf
stos
test
aaa
jp
dec
jl
inc
xchg
mov
push
stos
dec
mov
and
ret
xchg
jmp
pop
int3
lds
jbe
rcr
mov
lods
xchg
jge,pt
sub
mov
lahf
mov
xchg
push
lock
cwtl
or
enter
fsts
lret
mov
jg
xor
stos
lcall
cmp
xchg
add
sub
iret
fldt
mov
xor
pushf
mov
or
test
sahf
inc
int3
inc
movsb
cli
shl
dec
lret
lods
subb
add
and
mov
sbb
aaa
sub
push
pushf
push
mov
sub
inc
jns
dec
push
lea
push
dec
and
xor
pop
fbstp
inc
jle
jne
sbb
mov
mov
dec
and
pop
or
int3
xor
or
jno
out
inc
cltd
clc
int3
test
mov
sub
outsl
fsubrs
jle
mulb
xchg
js
mov
shrb
sub
and
movsb
mull
lret
mov
cmc
stos
lcall
in
loop
push
jle
cmp
fs
jmp
mov
cmp
inc
stos
cmp
adc
dec
addr16
js
icebp
cli
popf
lds
rorb
mov
push
jno
cwtl
add
and
push
xor
jb
adc
les
call
stos
call
call
jle
mov
lea
jl
add
xor
lods
pop
or
push
inc
push
adc
pushf
sub
adc
cmp
ret
inc
imul
and
jbe
fdivrl
mov
mov
sub
lods
sub
xor
popf
jl
ds
aaa
lret
fsubs
bound
and
pusha
mov
cmp
fisubrl
popf
movsl
xor
popf
cld
pop
sub
scas
sbb
out
enter
mov
mov
les
ds
pop
mov
mov
pop
sub
pop
inc
inc
jno
push
sbb
xchg
xchg
or
cltd
pop
jp
lods
in
mov
pusha
lods
dec
ljmp
outsl
push
popa
mov
cmpsb
pusha
sbb
and
jl
push
xor
addb
mov
add
loop,pt
sbb
cmp
mov
and
xor
fdivs
jbe
aam
pop
adc
test
xor
imul
fisttpl
sar
data16
sbbb
xchg
andps
push
mov
sub
insb
mov
cmp
insb
jns
push
xor
inc
loopne
mov
push
pusha
xor
mov
fld1
add
mov
sbb
mov
stos
ljmp
addl
or
push
insb
xor
mov
aas
cmp
fs
push
das
stos
cmp
test
je
jb
js
mov
leave
adc
xchg
add
stos
xchg
popf
jae
inc
scas
jno
xchg
mov
movsl
xor
mov
sbb
push
popf
mov
push
clc
or
imul
xchg
add
js
mov
fs
inc
stc
adc
mov
xor
dec
adc
test
loope
leave
xchg
xchg
in
mov
mov
shrl
jnp
lea
je
imul
mov
inc
sub
out
popw
push
fs
pop
cmp
jne
jp
fs
push
das
imul
mov
mov
insb
leave
adc
xor
inc
test
pop
jno
mov
mov
ljmp
mov
adc
adc
ds
sbb
dec
call
insb
mov
shlb
jp
cltd
leave
xor
mov
pop
movsb
dec
fisubs
xchg
mov
xor
mov
enter
jmp
es
adc
fdivl
mov
pop
cmc
fnsave
push
rclb
mov
fisubl
adc
es
outsb
test
mov
add
es
aam
xor
enter
mov
lds
mov
lods
xor
push
cmp
inc
xchg
mov
pop
inc
loope
fwait
rcr
in
or
push
in
cmp
out
dec
fstpt
mov
xor
mov
and
shll
shr
mov
jg
mov
arpl
fsubrl
pop
add
push
inc
dec
fidivs
lock
cmc
jne
fnstcw
inc
setno
pop
rolb
test
pushf
dec
pop
out
insb
sub
jne
push
lods
xchg
rclb
pusha
mov
orb
mov
scas
pop
mov
mov
push
dec
dec
in
push
jge
test
xchg
adc
inc
lret
loope
mov
enter
cli
jecxz
pop
add
xchg
dec
enter
outsb
lcall
jmp
inc
sarb
cmp
push
sbb
mov
cmc
js
les
cwtl
dec
jg
pop
jp
dec
mov
faddl
add
xchg
pop
cld
inc
or
xor
mov
leave
in
rcr
test
enter
addb
out
cmpsl
test
int3
stc
push
fldt
adc
dec
dec
xchg
sbb
outsb
mov
dec
scas
sbb
cmc
mov
nop
shll
dec
mov
jnp
dec
ficoms
lods
stos
test
jne
xor
movsl
fdiv
cli
sbb
fiadds
das
lds
inc
sbb
cmp
popf
dec
dec
add
jb
xchg
nop
xchg
jp
aad
xor
pop
sub
and
sub
cltd
jbe
push
lcall
bound
je
aas
mov
inc
jbe
adc
inc
jb
insl
lcall
jae
arpl
inc
dec
pop
cmp
scas
cmp
push
xor
test
pop
jp
push
addl
sub
inc
sbb
sbb
xorb
jle
gs
pop
cmpsl
out
mov
inc
jne
mov
ds
cmp
cmpl
aas
mov
insl
add
push
hlt
inc
mov
mov
jno
and
jge
or
adc
sbb
outsb
repz
pop
mov
fwait
fs
shrl
dec
enter
jg
xor
push
rcrb
repnz
xor
enter
add
imul
sub
pusha
insb
cmp
ja
xor
xor
cmp
insl
sub
cld
and
movsl
push
pop
jbe
pop
xlat
jmpw
subb
inc
mov
lock
cli
ljmp
notb
js
cwtl
pop
add
dec
js
mov
in
out
ja
mov
cmpsb
cmp
dec
lods
test
xor
js
js
push
dec
or
data16
pop
jno
mov
jb
and
mov
pop
cmp
mov
xchg
lods
sbbb
ret
hlt
ds
pop
sbb
inc
cmp
cmp
and
bound
dec
ret
mov
fcomps
cmp
lcall
lret
push
pop
or
ds
cmp
push
idiv
lds
cmpsl
sahf
cmp
mov
push
pop
mov
sbb
jecxz
xor
ss
push
pop
inc
mov
es
out
loope
cmp
aas
lods
mov
push
rcrb
insl
lods
adc
fldl
inc
enter
call
sub
or
mov
dec
mov
daa
cmp
in
data16
fistpl
shrl
mov
jbe
mov
mov
aaa
xor
lcall
pusha
xor
jbe
insl
push
mov
xchg
inc
and
lods
data16
ficompl
dec
cmp
mov
cmp
stos
in
xor
popa
sbb
scas
pop
pop
dec
mov
push
les
lea
xorl
xor
icebp
mov
xchg
stos
sbb
or
add
dec
rcr
mov
daa
xchg
sahf
mov
bound
push
and
icebp
shrl
dec
xor
adc
jae
stc
inc
mov
dec
mov
dec
pop
lahf
cltd
pop
pop
mov
add
in
xor
arpl
jae
mov
lret
and
hlt
mov
and
ret
loope,pt
frstor
xor
dec
fadds
nop
movsl
jns
mov
ja
jge
stc
mov
pop
xor
call
add
pusha
mov
jl
jb
jmp
enter
das
repnz
sub
cmp
adc
dec
sub
sub
push
mov
pop
outsb
jbe
movsl
orb
xchg
jle
lods
mov
mov
jl
jb
jmp
fdiv
mov
cmp
push
dec
aas
es
pop
push
outsb
inc
insb
movsl
inc
dec
jl
pop
jle
lods
push
mov
jl
sahf
jl
jb
jmp
lods
mov
adc
sbb
cli
jp
std
mov
imul
mov
popa
das
jnp
xor
sub
dec
push
dec
push
mov
push
outsl
jb
inc
jbe
test
jle
mov
mov
jl
jb
jmp
mov
ficompl
gs
sub
add
or
jnp
repnz
lods
ds
je
push
xor
in
dec
sbbb
pop
in
mov
jp
shlb
mov
cld
outsb
push
dec
cmpsb
push
dec
push
dec
xor
and
inc
pushf
xor
mov
nop
jnp
jp
jo
cmp
mov
add
pop
xor
stos
nop
cmp
aam
test
bound
mov
fildll
xor
stos
fldt
mov
xor
mov
mov
cmp
xor
lods
sub
jle,pt
lods
dec
pop
test
jb
adc
jmp
test
pop
in
fs
ds
jp
fnstenv
adc
adc
pop
pop
mov
pop
jl
jb
jmp
jo
mov
dec
aas
stos
jp
mov
shrb
dec
loop
sarb
or
inc
and
pushf
xor
mov
cwtl
fs
lods
mov
nop
mov
push
dec
into
mov
shrb
sbb
testb
push
jle
scas
push
pop
push
push
cs
outsb
push
andb
pop
lods
pusha
xchg
jl
jb
jmp
fsubr
mov
xor
movl
aas
insb
cs
pop
jl
push
nop
lcall
mov
xchg
outsb
mov
movsl
mov
jle
scas
out
and
push
loop
cmp
jge
jae
jmp
outsl
popa
inc
dec
pushfw
push
push
mov
fs
les
sahf
xor
mov
les
adc
cli
jle
scas
or
popa
sbb
in
cmpsl
cmp
ds
je
dec
jp
push
mov
outsl
add
xchg
outsb
lcall
mov
pop
or
loope
cmp
jge
jae
ljmp
inc
loope
cmp
jl
jb
pop
popa
jbe
lods
xchg
fs
sarb
scas
jp
mov
push
dec
ljmp
outsb
sbb
push
dec
pop
fwait
sti
popa
xor
xchg
movsl
push
mov
lods
mov
pusha
lcall
lods
jb
jmp
aam
mov
xor
push
movl
aas
push
inc
cmp
jl
jb
pop
popa
jp
mov
mov
fs
mov
shrb
dec
loop
aam
cli
jp
outsb
adc
aas
cs
xor
jmp
pop
and
movsb
fs
mov
xchg
jp
xchg
mov
push
dec
lret
mov
mulb
cmpsb
cli
dec
xor
jle
scas
sbb
std
lods
mov
cmp
fs
movl
dec
xchg
mov
xchg
outsb
mov
movsl
ret
inc
fidivrl
scas
ljmp
cld
cmp
jge
jae
loope
lods
inc
fs
jp
inc
mov
push
dec
jle
insb
mov
sahf
enter
faddl
jle
lods
pop
add
mul
in
push
jge
jb
ljmp
lcall
dec
bound
jp
mov
mov
int3
cmpsb
jp
mov
push
dec
ljmp
outsb
push
cmp
inc
es
mov
mov
jb
inc
jbe
lods
lods
mov
pusha
lcall
lods
jb
jmp
shl
mov
xor
movl
aas
push
fs
cwtl
jbe,pt
lods
js
sahf
push
dec
stos
mov
movsb
outsb
lret
into
dec
or
jle
scas
cli
pop
xor
push
and
adc
fcomip
repnz
insb
lods
inc
pop
andb
loope
cmp
jl
jb
jmp
pushf
mov
call
fs
adc
out
jp
cmc
mov
imul
mov
sub
dec
pop
loope
cmp
xchg
dec
sbbb
pop
int3
cmpsb
fdivrl
mov
in
mov
dec
out
aam
cli
jp
outsb
adc
aas
cs
jmp
push
push
movsb
jle,pn
mov
mov
push
dec
mov
fsubrl
and
decb
inc
adc
scas
es
pusha
cmpsb
or
xor
pop
test
sti
pop
test
sbbb
mov
dec
rcrb
out
pop
and
xor
or
or
mov
inc
xor
call
mov
pop
outsb
jle
movsl
mov
inc
mov
pop
lock
lret
sarb
jl
jb
ljmp
mov
adc
outsl
sbb
jl
das
outsl
and
mov
inc
sahf
jle
lods
stos
pop
loopne
mov
loop
aam
imul
in
push
popf
hlt
or
push
arpl
ret
dec
push
inc
mov
jmp
push
mov
inc
lcall
pusha
ret
les
jl
jb
jmp
add
mov
pusha
and
inc
jp
outsb
push
andb
jle
lods
jle
mov
mov
jl
jb
jmp
aam
mov
cmp
dec
aas
es
pop
stos
outsb
inc
insb
movsl
dec
dec
test
jle
lods
jb
lods
pusha
mov
jl
jb
jmp
int3
out
sbb
negb
gs
cmp
push
jnp
and
pop
and
inc
js
push
jp
pop
mov
push
dec
xchg
mov
nop
outsb
mov
movsl
mov
jle
scas
out
sbb
testb
cld
cmp
jge
jae
out
mov
pop
je
push
push
pop
cmp
jl
jb
jmp
xchg
stos
mov
clc
fs
or
out
and
mov
imul
and
and
outsl
and
push
jle
lods
jle
mov
mov
jl
jb
jmp
mov
out
pop
and
inc
xor
push
jp
or
mov
pop
js
push
data16
cmp
jl
jb
jmp
mov
pop
lock
aas
fidivrs
in
or
dec
and
sub
dec
data16
inc
push
ljmp
mov
loopne
mov
jp
int
out
push
dec
mov
add
sub
cs
xor
xor
cmp
mov
push
daa
dec
test
cmpb
xchg
pop
enter
loope
cmp
jl
jb
jmp
fdiv
mov
inc
gs
push
lea
pusha
movsl
cmp
inc
dec
jle
lods
pop
pop
xchg
sbb
sahf
jmp
mov
pop
cld
fs
adc
ljmp
add
mov
and
pop
std
jne
dec
push
dec
pop
mov
pop
outsb
subb
jle
lods
scas
pop
in
mov
loop
shlb
jmp
clc
adc
pop
mov
pop
bound
pop
jmp
fs
mov
mov
mov
jnp
sbb
mov
shrb
and
or
scas
push
pop
push
cmp
inc
mov
mov
movsb
jle,pt
mov
mov
push
dec
mov
mov
outsb
fimull
cmpsb
loop
sbb
jle
scas
add
popa
adc
loop
cmp
repnz
or
insb
inc
inc
jle
lods
pop
pop
xchg
sbb
xchg
jmp
cwtl
scas
mov
hlt
fs
adc
ljmp
add
mov
sub
dec
data16
cmp
jl
jb
jmp
mov
pop
cld
fs
or
ljmp
cld
dec
and
in
inc
jmp
inc
pop
mov
movsb
cmpb
mov
push
dec
mov
cld
movsl
fimull
inc
ljmp
popa
or
loop
inc
cmp
std
repnz
push
pusha
push
data16
cmp
jl
jb
jmp
mov
pop
in
fs
aas
fidivrl
fnsave
push
mov
adc
aam
push
xor
push
dec
pop
mov
pop
outsb
subb
jle
lods
mov
lock
into
out
aam
idivb
push
ljmp
jbe
sub
dec
push
dec
pop
mov
movsl
jbe
lods
inc
xchg
lods
lcall
mov
sarb
loop
rorb
loopne
mov
dec
gs
pop
stc
adc
es
js
push
jp
pop
mov
push
dec
mov
mov
fsubs
ret
popa
into
out
sarb
jl
jb
ljmp
mov
inc
and
das
push
push
sbb
cmp
loopne
mov
sub
jns
push
rorb
int
inc
gs
sub
sbb
mov
cmpsb
je
ss
pusha
pop
xor
mov
sbb
and
mov
dec
in
mov
repz
ljmp
scas
bound
mov
mov
cmp
jo
sahf
lret
mov
mov
out
sub
xor
pushf
sub
sbbb
in
sbb
int3
movsl
xchg
xor
dec
lahf
xchg
mov
int
in
pop
and
inc
pop
pop
cmp
mov
xchg
lahf
push
mov
sbb
push
xor
sub
or
lea
add
fs
xor
lods
mov
push
mov
adc
cmpsb
bound
pushl
ja
adc
stos
out
xchg
pop
pushf
cmpsb
jo
xchg
imul
int3
imul
loop
push
sub
push
loopne
xor
sub
jp
cmp
mov
insl
jbe
dec
mov
push
pop
mov
and
mov
mov
outsl
pushf
ja
js
sarb
mov
arpl
add
sbb
pusha
mov
pop
lods
outsb
popa
pop
leave
mov
push
xchg
jbe
mov
mov
popl
sub
scas
add
lods
mov
mov
mov
rolb
and
out
int
insb
ss
push
js
cld
xchg
test
mov
sub
xor
dec
dec
lret
sub
dec
inc
mov
and
adc
shll
push
arpl
lods
arpl
nop
mov
dec
enter
imul
jmp
lock
jbe
sbb
in
pop
icebp
shll
jge
xlat
data16
dec
pushf
pop
adcb
test
aas
jmp
fstpt
scas
fs
in
jnp
pushf
enter
push
add
push
mov
out
push
aad
movsl
cmpsl
dec
aad
or
inc
imul
insl
cwtl
sbb
push
movsl
pop
nop
testb
stos
fwait
nop
mov
jbe
pop
xchg
enter
add
jg
shrb
stos
pop
mov
mov
bnd
shl
movsb
mov
sbbl
and
push
fwait
and
push
lods
push
inc
sbbb
test
jbe
adc
nop
dec
push
xchg
fsubs
sub
or
out
aaa
out
movsl
cs
lahf
data16
cmp
cmp
mov
es
pop
cmp
cmp
pop
lcall
mov
lcall
pop
and
imul
and
adc
das
stos
aam
daa
jmp
xor
faddl
dec
mov
mov
cwtl
loop
xchg
cmc
clc
movsl
xchg
enter
lods
in
repz
jle
popf
and
sbb
mov
mov
push
mov
cwtl
push
mov
push
jg
adc
pop
bound
sub
fwait
sbb
cld
sub
inc
sbb
cltd
sub
notb
mov
movb
loope
hlt
pop
inc
mov
ss
adc
xchg
loopne
push
ljmp
outsl
or
js
iret
jb
jnp
jmp
call
repz
mov
adc
adc
sbb
cmpsl
out
pop
push
mov
popf
dec
sbbl
nop
leave
jle
sub
pop
in
sub
cmc
daa
adc
icebp
divb
jb
or
dec
idivl
add
xor
sbb
mov
test
or
mov
pop
and
enter
adc
fnsave
dec
data16
movsl
dec
xor
and
dec
jae
mov
or
adc
loope
arpl
adc
das
test
cmp
mov
out
pop
hlt
test
pop
fs
inc
mov
jb
ljmp
pop
mov
idivl
fidivl
enter
test
aaa
push
repnz
test
cmp
insb
in
mov
or
cmp
ret
cmp
mov
stos
pop
mov
or
xchg
and
cmp
outsl
popa
jns
dec
mov
bound
sub
addw
insl
or
pusha
push
xor
sub
sub
push
adc
popa
add
mov
je
cli
stos
mov
jl
xorb
lods
mov
pop
xor
mov
push
pop
and
aad
xchg
mov
and
aas
pop
mov
inc
decl
fstl
push
pop
mov
into
jmp
jns
push
ss
je
push
mov
pop
in
fs
push
dec
push
sub
pop
js,pt
jl
fists
ljmp
sahf
out
cmp
stos
inc
inc
addr16
xchg
scas
cmp
add
and
xchg
insb
inc
push
xor
fcomps
cmp
or
sbbl
dec
or
movsl
inc
in
flds
jle
popa
xchg
inc
jo
in
lret
call
fsub
adc
dec
insb
mov
pop
push
mov
pusha
pop
jno
out
push
addl
js
ret
movsb
push
pusha
fs
fiadds
sbb
inc
sub
jmp
lods
and
inc
jno
dec
sahf
pop
call
cs
lods
sub
pop
or
dec
pusha
sbb
fisttpl
inc
in
pop
pop
adc
ret
iret
add
push
inc
sbb
xchg
sbb
pop
sub
scas
xor
cmp
lock
mov
cmp
mov
jbe
out
dec
das
sub
mov
movsb
sbb
push
subb
imul
xchg
jbe
pushf
lahf
pop
popf
data16
int3
lods
mov
xor
arpl
mov
add
lret
mov
mov
andb
sbb
pop
sub
cmp
add
jns
and
pop
nop
add
inc
sub
sub
pop
xchg
aam
xlat
sub
es
jns
cmp
cld
inc
push
and
sahf
inc
insl
icebp
sahf
enter
push
psubsw
sub
test
lcall
cltd
mov
cmpsl
idiv
pop
push
es
jp
pop
inc
mov
aas
mov
ja
push
mov
ss
dec
mov
into
icebp
data16
sbb
imul
lea
add
dec
insb
loop
jle
mov
push
dec
push
xchg
and
cmpsb
xor
js
clc
inc
dec
pusha
xchg
dec
ss
dec
hlt
dec
movsl
jecxz
and
sub
inc
adcl
sar
adc
jbe
jb
sarl
pusha
das
mov
sbb
inc
pop
out
push
pop
pop
push
pop
push
mov
lods
dec
sub
les
cs
cmp
adc
in
jbe
sub
cmpb
xor
jp
sub
fdivrs
and
xorb
pusha
test
imul
fs
or
jle
push
pop
sti
xchg
repnz
ja
fadd
out
subb
dec
je
mov
loopne
popa
test
nop
outsl
push
mov
jp
stos
inc
js
cltd
sub
inc
mov
sbb
xor
jno
lahf
hlt
bound
jbe
inc
sub
sub
cmpb
pop
dec
mov
lea
nop
dec
int3
push
or
xor
push
daa
xor
cmpb
mov
sub
lea
pop
or
popf
movsb
jp
addr16
stos
fdivs
pop
sub
lock
jns
jns
xor
add
and
sub
scas
test
pop
out
jge
mov
add
push
repnz
popf
pop
addr16
jns
dec
mov
dec
dec
andl
inc
movsl
mov
lods
data16
inc
push
aam
lods
and
stos
inc
cmpsb
mov
in
or
inc
push
sub
ljmp
je
pop
dec
pop
sbb
push
imul
ljmp
imul
or
sub
push
dec
movsl
or
pop
out
cmp
dec
fdivl
push
pop
mov
insb
in
adc
pop
and
mov
stc
xor
jb
sbb
sub
dec
mov
enter
les
and
xchg
cmp
mov
push
inc
xchg
pop
adc
or
pop
pushf
cld
int
loope
sbb
xorb
jne
sub
sub
leave
mov
jae
xor
mov
je
sbb
inc
test
stos
outsb
jb
test
insb
adc
imul
add
add
push
mov
lods
fmuls
into
fimuls
daa
adc
mov
or
test
mov
pusha
rorl
fcom
lock
xchg
aam
daa
push
pop
out
shl
clc
nop
mov
fisttpll
and
sahf
push
mov
pop
and
in
icebp
pop
shlb
and
inc
sbb
dec
cmp
icebp
and
push
aaa
push
arpl
sub
jp
adc
mov
cmp
test
pop
cmp
cld
stos
add
or
cmpsl
stc
sub
lret
popa
loope
and
pushl
sbbl
bound
out
jge
mov
push
fs
outsb
add
xor
cwtl
sub
sub
jl
mov
nop
lds
insb
dec
jae
inc
stos
mov
das
push
es
fbld
pop
stc
rcrl
das
cmp
cmp
dec
add
lock
push
cmc
sub
repnz
inc
stos
testl
cmp
insl
daa
iret
repz
test
mov
popf
sarb
cmp
ss
sub
in
sbb
and
in
lret
xchg
fidivs
mov
fwait
cs
fcomi
jmp
jbe
out
in
jp
xor
insb
int3
jg
int
inc
scas
orb
xchg
fcomp
or
repz
pusha
sub
in
out
cmp
fistl
imulb
int
pop
push
inc
or
sbbb
push
mov
and
daa
lods
xchg
sbb
jl
push
xlat
cld
mov
aad
sbb
xchg
pop
mov
lock
or
push
aam
stos
and
pop
rcr
jecxz
shrl
mov
adc
push
cmc
sub
test
aad
sarl
jmp
aad
push
mov
mov
cmpsl
daa
iret
daa
fidivrs
ffreep
cmc
pop
adc
ret
jne
xchg
mov
int
xchg
xor
sbb
fistpl
stos
lods
test
dec
jmp
cmpb
cmpsl
outsb
jne
push
xchg
mov
mov
xor
addr16
pop
daa
shrl
and
jle
push
xorl
mov
mov
dec
andb
dec
or
dec
push
sub
jmp
mov
cmpsl
jle
and
nop
bound
lahf
gs
jp
shll
hlt
data16
inc
add
hlt
iret
sub
cmp
sahf
pop
in
jl
data16
sub
shlb
and
cmp
adc
inc
js
out
add
xor
cwtl
rdtsc
mov
lods
cmp
dec
loop
or
imul
sbb
sbb
inc
xor
push
addl
push
mov
mov
mov
mov
nop
cwtl
shrl
dec
pop
mov
xchg
push
cmp
dec
sub
or
dec
jecxz
sub
inc
ret
cmp
xlat
mov
pop
cmp
mov
adc
popf
xor
leave
and
cmpsb
jge
cli
fisubs
aad
aaa
jno,pt
pop
repnz
mov
jo
test
jnp
je
sbb
sub
adc
inc
ret
dec
xchg
sub
push
push
lcall
adc
push
push
cmpsl
sub
dec
lds
js
sub
inc
adc
rclb
inc
mov
cmp
or
lahf
pop
jo
popa
mov
jbe
je
cmpsb
dec
dec
faddl
pop
xor
loope
ds
shll
push
faddl
in
inc
push
popa
inc
jns
int
xor
sub
data16
pop
xchg
pop
and
xor
pop
shr
pop
xchg
cs
add
jno
inc
xor
xor
lea
in
lock
scas
pop
fsubrl
dec
mov
repnz
mov
mov
pop
pop
sub
enter
inc
addb
cmovno
mov
div
adc
adc
and
je
pushf
aaa
cld
pop
dec
push
xchg
adc
cmpsb
push
icebp
sbb
xor
pop
pop
mov
mov
mov
test
mov
in
push
int
shrb
inc
shlb
imulb
in
sbb
fdivr
sub
aas
xchg
and
cmp
sbb
notl
pop
and
mov
push
sub
cmp
jnp
push
jge
mov
sahf
jl
add
push
enter
insb
jl
subl
inc
jge
push
pushf
pop
jmp
aam
jnp
aad
dec
xchg
sar
gs
dec
mov
inc
mov
jge
mov
sub
add
push
sbb
xlat
mov
jo
std
adc
pop
pop
push
pop
in
cmp
sub
inc
loop
aad
js
or
xor
stc
pop
mov
cmp
ret
mov
push
or
mov
pop
movb
aaa
movsb
inc
das
ljmp
sub
aas
xchg
stos
cmpsb
call
mov
or
outsb
cli
xor
cmp
out
jmp
bound
jo
adc
in
mov
imul
push
cmp
or
int3
cmp
mov
dec
inc
fdiv
je
in
add
sbb
stc
push
ret
ja
mov
mov
inc
or
or
jmp
adc
insb
sahf
mov
push
lods
jae
fstpl
fwait
cltd
pop
xchg
add
gs
inc
mov
dec
into
in
ja
ret
adc
or
fistpl
daa
inc
xor
sbb
cs
pop
add
sub
push
add
test
data16
push
mov
xor
cmpsl
cmpsl
push
dec
js
sar
sbbl
xchg
pusha
daa
pop
test
cwtl
cmp
push
mov
outsb
sub
inc
lret
lcall
pusha
dec
jns
xchg
jo
popf
or
imul
lret
dec
xor
int
adc
mov
or
mov
popf
push
mov
cmpsb
adc
inc
roll
orb
pusha
es
dec
popa
xchg
cs
daa
in
push
add
jge
fisubrs
push
mov
push
mov
mov
icebp
inc
push
mov
aaa
fcmovnu
add
paddusb
adc
sub
jp
sbb
mov
and
mov
aam
loope
xchg
mov
sbb
mov
cmpsl
outsb
pop
fs
mov
lahf
insl
jb
popf
adc
xchg
cltd
data16
sbbb
sbb
jp
sbb
cld
lcall
lock
and
stc
std
push
adc
pop
pop
adc
lcall
mov
mov
jecxz
cmp
pop
xchg
add
push
fs
int3
fwait
cs
popa
pop
and
push
mov
jmp
mov
cwtl
je
push
pusha
daa
aaa
mov
popf
push
mov
stos
addr16
bound
mov
cmp
jb
jno
ret
imul
mov
dec
sub
cmp
aaa
mov
or
jno
inc
out
stos
cmp
jb
into
sbbb
inc
ds
dec
jle
loop
pop
out
fidivs
stc
dec
cmovg
jno
sub
sbb
pop
aam
sbb
jnp
jge
and
iret
add
jbe
and
cs
ljmp
mov
js
dec
mov
mov
push
nop
mov
das
mov
sahf
pusha
add
pop
cmp
sbb
sahf
xchg
jnp
sub
jl
and
sbb
mov
into
push
cmpsl
cmp
scas
sbb
push
inc
cmpsb
stos
arpl
inc
add
movsl
xor
divb
pop
pop
and
and
push
inc
fisubs
pop
stos
and
mov
popf
cld
dec
rorb
scas
fs
pushw
pop
call
and
or
xchg
push
sub
cmp
int
sub
mov
sub
sub
bound
jg
pop
sub
add
ds
fadds
lret
or
adc
out
addr16
inc
xchg
pop
xchg
dec
or
je
or
xchg
cmp
sub
in
mov
pop
cmp
xchg
xor
and
js
xchg
inc
js
addr16
arpl
cmp
inc
psubsb
lahf
pop
jno
adcb
cld
jge
push
push
sub
mov
mov
lods
imul
pop
mov
and
jl
pop
adc
rol
cmpsb
pop
int3
cwtl
sub
movsb
mov
adc
in
cmp
scas
xorb
test
cmp
ret
cs
pop
mov
mov
cmp
imul
push
push
xor
imul
mov
aad
or
dec
cwtl
mov
addl
clc
inc
hlt
push
mov
push
jmp
aas
aam
sbb
mov
and
pop
int3
mov
jb
push
xor
les
repz
inc
clc
pop
movsb
mov
pushf
jmp
adc
mov
inc
testb
and
lea
push
cmp
push
lret
push
or
push
shlb
xor
loopne
inc
cmp
xor
inc
ss
add
and
inc
add
xor
insb
xchg
ds
push
add
lahf
xor
rcrb
test
dec
lret
cld
sahf
lret
jmp
loopne
and
xchg
jp
shll
sbb
arpl
cmc
aam
push
movsb
xor
rorb
cltd
cmp
and
jp
xchg
or
lcall
cs
dec
jmp
sbb
pop
sub
xor
icebp
sbb
and
dec
jns
sbb
cmp
sub
dec
int3
adc
fsubl
pop
jecxz
ret
cmp
jnp
sub
fadds
sbb
pop
std
cmp
sti
sbb
mov
push
cs
ss
shrl
push
ret
loopne
outsb
cwtl
dec
xor
sbb
outsb
pop
aad
add
cld
aam
js
ss
stos
pop
mov
fistpl
ss
xor
in
inc
call
mov
mov
inc
cmp
decb
sub
inc
push
mov
sbb
jnp
aam
dec
lods
jmp
mov
aaa
sbb
rcrb
in
aad
cli
or
sub
insb
adc
sbb
fadds
push
cmpsb
shrl
fsubr
fldcw
add
fidivrs
sbb
pop
or
xor
push
jno
pop
mov
push
push
push
stos
sub
cli
out
push
inc
add
inc
mov
push
in
sbb
icebp
push
jns
or
in
sahf
push
jecxz
sbb
xchg
adc
add
sub
sub
jmp
sub
sbb
out
sti
xchg
repz
fstps
stos
xor
cmp
cmp
pop
mov
rorb
push
nop
sbb
cmp
cltd
out
roll
adc
xchg
add
ret
sbb
sub
sub
stc
mov
mov
dec
sub
xor
jne
or
cmp
ja
adc
bound
into
jbe
mov
sub
push
or
mov
dec
sub
xor
and
ret
jae
clc
mov
loopne
fistpl
rcrl
jp
mov
aaa
aaa
cmp
in
mov
push
lods
xchg
imulb
push
push
lds
loop
sub
xchg
pop
test
sti
pop
push
jl
mov
sub
xor
pop
fs
or
sbbb
jecxz
pop
sub
test
lods
test
pop
and
dec
cmp
sbbb
add
leave
mov
scas
sub
cmpsl
adcl
push
sub
or
andb
add
xchg
push
lret
ret
ds
stc
add
pop
xor
aas
imul
push
push
and
jmp
jo
sub
pop
push
xor
push
pop
mov
mov
xor
lea
cmp
xchg
adc
ds
pop
mov
inc
jecxz
fidivrl
sahf
mov
jp
aas
cld
dec
lahf
cmpsb
dec
mov
jecxz
testl
lret
repnz
adc
pop
repz
in
or
xor
mov
pop
mov
mov
out
addb
lock
sbb
gs
add
add
pop
jp
xchg
dec
into
ja
sub
enter
sarb
loop
pop
xchg
das
ja
test
pushw
push
mov
xor
sbb
pop
mov
or
xchg
xchg
xor
and
clc
fcoms
sub
jne
xor
lea
cmpsl
jmp
fisttpll
sub
jo
cmp
leave
mov
push
cmpsb
pushf
ss
dec
cmpsb
mov
test
popa
outsl
push
mov
sahf
ss
int3
pusha
pop
add
jmp
jge
test
sbb
mov
jmp
sub
dec
sbb
hlt
movq
sbb
mov
mov
fisubs
out
outsl
mov
push
sbb
movsb
mov
pop
test
imul
pusha
mov
adc
ds
inc
ret
jl
pop
pop
jle
or
ficoms
insl
imul
push
pop
push
fsubrs
xchg
lods
sbb
cltd
repnz
mov
sbb
sbb
shl
in
add
out
sub
test
or
roll
mov
stos
cmp
xor
lret
cmp
inc
adc
sti
pop
ss
insl
xchg
sub
jne
aas
push
cmp
pop
pop
aad
add
pop
js
fs
xchg
push
bound
rolb
hlt
movsb
sub
in
cwtl
cmp
inc
push
cli
xchg
cmp
into
stc
adc
pop
movsl
jno
jmp
mov
arpl
fildl
out
gs
ss
and
rol
sarl
cli
cmpsl
leave
mov
sbb
sub
lahf
sub
sahf
xchg
lahf
jbe
mov
adc
sbb
scas
sub
cmp
inc
ss
es
fdivrl
ljmp
mov
mov
loop
sbb
or
and
sbb
or
cmp
mov
lret
fisubl
push
mov
cmp
es
pop
out
loop
mov
sub
lret
insb
mov
outsb
xchg
push
sub
sub
in
pop
movsl
lock
lcall
mov
call
mov
loope
dec
adc
sbb
ja
in
xor
shll
imul
xchg
pop
sbbb
fidivs
and
in
ss
sub
popf
mov
xor
cs
push
lret
pop
in
int3
testb
imul
stc
jo
imul
sahf
jmp
push
jecxz
lea
stos
das
insl
mov
roll
js
mov
xchg
sub
or
lods
xor
cltd
bound
push
jl
outsb
inc
mov
mov
adc
mov
jmp
movsl
outsb
inc
or
cmp
inc
fists
mov
push
fistpll
stc
filds
xor
movnti
inc
pop
push
ss
push
or
cmp
mov
mov
int
adc
scas
addr16
cmp
je
aas
test
ljmp
shl
out
movsb
enter
add
addr16
es
cmp
rcrl
mov
inc
aaa
adc
lods
jmp
jb
adc
cld
test
test
pusha
cmp
cmpsl
dec
dec
inc
push
jmp
movsl
pop
sub
stos
xchg
jmp
mov
mov
sub
stos
shlb
sbb
mov
dec
rclb
adcl
call
push
gs
sub
xchg
scas
xlat
ds
lea
push
mov
jns
push
push
push
sbb
sahf
inc
lret
add
and
lds
cld
cmp
imul
icebp
pop
and
push
mov
test
adc
mov
loope
fs
push
das
and
ljmp
sbb
mov
clc
sbb
aam
inc
pop
imul
push
stos
and
inc
rcr
mov
sub
les
test
outsl
lea
push
insl
mov
push
inc
lods
mov
ds
out
push
dec
adc
adc
lds
icebp
mov
lahf
arpl
mov
xor
sbb
push
add
add
cmp
ljmp
cmc
movsb
mov
pop
mov
jg
test
inc
imul
or
repz
fs
data16
mov
mov
xor
adc
mov
inc
sbb
push
pushf
mov
insb
pop
fsubrl
push
mov
loope
test
cmc
aaa
inc
sub
scas
mov
sub
sub
and
mov
test
mov
out
aad
push
adc
popa
stc
out
cwtl
aam
add
enter
loope
push
cs
sub
sub
enter
nop
xchg
mov
out
pop
cs
or
das
pop
jp
clc
repnz
movsb
stc
mov
dec
pop
jl
adc
push
adc
ret
push
ss
cli
cmpb
pop
pop
sbb
cmp
outsb
dec
outsl
xor
daa
ss
and
cmp
bound
cmp
push
dec
js
in
cli
jae
jl
pusha
mov
es
or
scas
xor
std
mov
sti
adc
mov
or
inc
adc
cld
xchg
or
aaa
stos
or
jp
test
ss
imul
adc
xor
dec
jp
and
ret
cmp
jge
xchg
popf
xchg
mov
sti
pop
pop
xor
jle
push
cmp
shlb
orl
jne
fwait
jns
cmpb
fs
and
jns
ficomps
out
cmc
pop
and
idiv
es
test
dec
mov
aas
int3
mov
cmpsl
pop
pusha
dec
sbb
pop
pop
mov
mov
aas
sub
lret
clc
inc
clc
sub
pusha
pop
pushf
push
mov
xchg
mov
icebp
jle
out
out
jecxz
dec
push
mov
jg
jle
sbbb
cmp
xchg
jno
dec
pop
and
lea
insl
xor
adc
pop
aad
inc
push
call
scas
adc
dec
jbe
push
add
std
popf
mov
mov
xchg
cmp
adc
pop
pop
out
pop
hlt
or
dec
push
fbstp
popa
fmuls
mov
pop
push
loop
repnz
pop
or
jecxz
cwtl
push
insb
add
daa
or
lea
out
imul
ljmp
push
rcrb
icebp
imul
inc
xchg
test
lcall
js
das
jle
dec
inc
push
xor
ljmp
sbb
jnp,pt
cmp
jbe
xchg
cmp
sbb
sub
sbb
dec
je
cmp
sahf
lods
jb
fldcw
mov
pop
or
xchg
mov
push
ret
negb
xchg
and
pop
movsb
loopne
add
fs
pop
es
cmp
popf
enter
pop
xor
mov
in
mov
pop
pop
negb
aaa
xor
pop
push
cmp
dec
imul
cmp
testl
test
dec
xchg
pop
xor
movsb
xor
jle,pn
adc
popa
in
sub
xchg
add
inc
push
cmp
cmpb
or
insb
cmp
jns
dec
lcall
sbb
jp
dec
push
pushf
mov
dec
or
push
push
mov
dec
adc
pop
int3
cs
andb
sbb
movsb
in
fildll
cmpsl
jp
dec
loopne
pop
mov
cmp
outsb
rorb
dec
push
pop
push
jns
mov
sbb
lods
sbb
pop
les
test
mov
push
cmp
cmp
inc
jp
insl
ja
fnstcw
mov
sub
lods
pushf
insb
inc
fsubrl
fmul
fmuls
pop
loope
cmp
jl
outsl
jbe
cmpsb
jp
inc
cmp
loope
cmp
mov
cli
adc
lods
push
xchg
cmp
iret
dec
movb
dec
jbe
jl
xchg
add
dec
sbb
aad
jp
cmp
loopne
mov
inc
jnp
outsb
sub
sub
lods
jb
movsl
loop
jp
dec
jle
loopne
jp
inc
bound
imul
jb
sar
cmp
ja
and
or
das
sbb
nop
push
cmp
fldl
jb
movsl
enter
insl
lock
mov
lea
dec
loop
dec
inc
push
popf
sbb
lods
xor
or
lcall
mov
mov
push
shrd
prefetchw
out
in
dec
jne
lds
loope
jmp
aam
decb
lods
xor
adc
xor
out
out
out
dec
jno
lds
loop
in
dec
ja
or
pop
pop
cmp
or
stos
test
mov
cmp
cmp
mov
or
push
gs
cmpb
xor
jns
imul
xor
cmp
test
or
mov
push
out
and
mov
xchg
bound
pop
mov
cmpsl
stos
sub
and
imul
outsl
aaa
push
inc
xor
or
sarb
lods
xchg
aaa
insb
push
xor
jns
shlb
fcompl
mov
cmp
xchg
pop
jne
mov
dec
pop
lods
pop
push
jl
insb
lcall
mov
mov
dec
mov
cs
cmp
xchg
scas
lock
cmp
pop
fcompl
pop
imul
dec
pop
jne
sarb
and
mov
nop
ret
pop
inc
cmp
xchg
and
data16
and
cmp
push
push
jns
jnp
push
arpl
dec
popa
movsb
test
pop
cmc
sub
jg
outsb
inc
cmpsb
cmpsb
out
iret
xor
pop
popa
xchg
xchg
cmp
inc
rorl
jle
scas
subl
jno
push
jb
push
aaa
mov
mov
cltd
pop
arpl
sub
loope
add
xor
jp
cmpsl
ds
xchg
mov
sarl
and
jge
sub
xor
dec
mov
mul
mov
cmpsb
xchg
sub
mov
jle
test
aas
ret
pop
pop
xorl
pop
push
jb
pop
inc
jno
daa
fs
pusha
or
pop
dec
shll
sub
imul
mov
adc
sub
xchg
repnz
cmpsb
outsb
cwtl
inc
jmp
mov
lret
xor
hlt
mov
jne
clc
jo
nop
cwtl
js
sub
outsb
jbe
mov
andl
je
mov
lret
int3
dec
outsl
arpl
pop
iret
addl
insl
je
imul
jo
outsb
pop
jbe
cs
mov
xchg
xchg
xor
dec
in
jb
movsl
popa
daa
pop
subb
arpl
xor
and
ret
imul
or
cmpsb
sbb
mov
test
xlat
movsb
popa
jo
dec
iret
xor
xchg
int3
in
pop
gs
cmp
jno
sub
int3
mov
jae
pushf
pop
push
jnp
insb
add
xor
mov
cmpsb
jne
repnz
out
inc
mov
shrl
test
mov
mov
sbb
mov
jg
es
addb
cmp
nop
push
inc
daa
dec
popf
es
xor
fadd
adc
push
ret
es
lret
cwtl
mov
jle
sbb
fcoml
lods
push
jge
push
pop
xchg
cmp
repnz
pop
push
sub
mov
xchg
pop
dec
jne
inc
cmp
mov
cmp
lahf
stos
rcr
inc
test
dec
mov
jl
push
inc
and
jns
push
push
push
call
add
jns
and
in
mov
inc
sbb
ja
test
jns
or
in
mov
jp
bnd
pop
dec
sub
mov
sbb
dec
cmp
xchg
dec
xchg
sbb
cmp
imul
pop
mulb
inc
inc
mov
jle
push
fs
scas
int3
dec
mov
mov
imul
loopne
scas
xchg
cmp
repnz
push
jns
fwait
push
addr16
mov
inc
or
dec
and
pushf
bound
pop
std
das
xor
or
out
pop
add
jbe
mov
xlat
fdivrs
pop
xor
mov
adc
jp
xor
adc
in
test
cmpsl
xlat
xor
mov
xchg
fisttpll
cmp
stos
test
xor
aaa
and
scas
mov
negb
mov
pusha
mov
or
addb
inc
mov
dec
sub
mov
movsl
cs
sub
jb
cmp
push
or
fiaddl
mov
and
mov
xor
jbe
lods
xor
les
outsb
divb
cmpsb
or
adc
push
xchg
lds
dec
in
jb
dec
and
or
aas
popf
je
dec
jp
outsb
cmc
sbb
jo
arpl
aas
enter
push
dec
sbb
iret
push
push
mov
xor
xor
mov
jno
and
mov
inc
cmp
mov
popf
addb
cmp
inc
cli
insb
mov
mov
jo
cmp
jl
cmpsb
push
loope
or
pushf
test
lods
aas
scas
mov
in
pop
sbb
sti
jp
add
cmp
cmp
pop
xor
jecxz
mov
clc
movsl
add
es
divps
test
jp
xor
jp
jno
and
mov
push
and
popf
pop
cmp
scas
mov
shrb
repz
add
inc
popa
push
mov
insb
sub
imul
lret
xor
out
xor
adc
enter
test
inc
test
xor
fistps
arpl
dec
outsb
ds
cmp
inc
inc
jle
lods
dec
pop
jl
push
jl
jb
jmp
jbe,pn
test
jle
mov
xchg
xorb
mov
cwtl
outsb
mov
movsl
mov
in
mov
pop
hlt
pusha
lret
les
jl
jb
jmp
fsubr
mov
xor
push
dec
aas
and
dec
sahf
xor
inc
inc
jle
lods
push
pop
mov
jbe
fs
jl
jb
jmp
xchg
stos
mov
lock
or
loop
sbb
mov
imul
sbb
and
pop
fs
ds
loope
cmp
jl
jb
jmp
jl
mov
loopne
mov
jp
shll
push
mov
or
sbb
sub
push
jmp
dec
mov
mov
xchg
mov
push
dec
lret
mov
repnz
cli
dec
xor
push
jle
scas
push
pop
push
cmp
dec
mov
cwtl
fs
test
cmpb
mov
push
dec
mov
jp
outsb
out
cmpsb
ljmp
scas
or
popa
sbb
in
and
pusha
fs
je
dec
jp
push
mov
outsl
add
cmpb
xchg
shlb
jle
lods
ret
pusha
loope
cmp
jge
jb
ljmp
mov
dec
cmp
inc
dec
jle
lods
pop
pop
nop
sbb
mov
jl
lcall
sahf
pop
shlb
fdivrs
scas
jp
test
push
dec
into
mov
shrb
cmpsb
fimull
inc
loop
adc
ljmp
lock
jge
jb
ljmp
mov
push
dec
inc
mov
cmp
js
dec
dec
jge
push
jle
lods
push
pop
test
outsb
loope
inc
push
ljmp
mov
mov
ds
jp
mov
mov
jp
outsb
add
loop
sbb
negb
popa
push
push
jecxz
call
push
pop
sbb
repz
mov
popa
in
hlt
dec
stc
outsb
mov
ss
stos
adc
pop
outsb
roll
es
inc
add
lds
and
stos
loop
popf
push
jmp
cmp
sbb
jo
sarl
pusha
test
xor
test
outsb
sar
stos
outsb
loop
stos
outsb
repnz
xor
bound
ds
fldl
popa
xchg
dec
mov
add
loop
and
dec
lea
movsl
inc
dec
jl
pop
jle
lods
jbe
mov
mov
jl
jno
fs
lret
repnz
icebp
nop
xor
jl
cs
push
and
adc
fisubl
outsb
movsl
xor
pushf
mov
insl
shl
mov
pop
imul
push
js
mov
pop
jno
inc
int
xor
enter
jmp
mov
jmp
nop
es
cmp
xor
and
mov
mov
repz
ds
and
mov
sbb
push
jbe
popa
push
fistpl
dec
dec
stc
xor
mov
jge
popa
jnp
or
mov
pusha
rcl
rcrl
or
dec
push
push
in
or
mov
sbb
mov
outsb
shlb
mov
popf
xor
fsubr
les
xor
insb
aam
mov
push
fstps
sub
nop
mov
stos
mov
int
mov
pushf
mov
sub
cwtl
enter
mov
and
inc
jge
pop
ds
push
xor
je
mov
outsb
pop
cli
subl
repnz
in
cs
jno
dec
lret
bnd
pusha
pushf
xchg
push
jl
jo
sarb
stos
jae
pop
mov
mov
js
lcall
and
fcom
mov
push
mov
fs
push
cld
push
loope
sub
inc
cmp
adcb
enter
pop
sbb
mov
faddp
jl
popa
sub
leave
push
push
and
ret
test
imul
popa
aas
push
or
lods
loopne
daa
mov
syscall
inc
and
lret
xchg
das
les
mov
cmp
mov
cmc
or
push
popf
pop
mov
push
mov
cmc
xor
lret
or
mov
and
lret
dec
jns
inc
psadbw
insb
push
jnp
cs
out
push
mov
push
fwait
stos
repnz
shrl
mov
leave
rorb
pop
jnp
and
and
inc
push
mov
push
sbb
or
repnz
imul
dec
loope
cmp
jl
jb
loopne
push
je
fdivs
scas
jno
cmp
rolb
jle
scas
push
pop
push
lods
aam
ss
xchg
and
or
mov
int3
outsb
loop
cmpsb
into
dec
clc
inc
jle
lods
mov
mov
jl
jb
jmp
lods
jle
movsb
pusha
outsb
outsb
loope
cmp
jl
jb
jmp
or
lcall
xorl
pusha
cmp
inc
sti
test
sbbl
jge
cwtl
roll
jle
aas
pushf
inc
jbe
rcrb
jbe
dec
dec
mov
gs
into
xchg
fs
loope
mov
jp
dec
mov
imul
push
pop
inc
dec
inc
pushf
cmp
push
inc
pop
js
ds
fs
pusha
jp
outsb
ds
movsb
ss
hlt
dec
pop
add
cmp
xor
sahf
inc
dec
inc
aas
cmp
add
cmp
dec
pop
xor
dec
xor
dec
jp
inc
mov
insb
inc
sub
inc
push
mov
sbb
jne
cmp
nop
xchg
pop
mov
shrl
push
popa
outsb
sub
dec
stos
or
push
cwtl
jno
mov
pop
cmp
dec
sbb
test
jle
dec
sbb
aas
cwtl
std
xlat
pusha
dec
adc
dec
xchg
ss
loope
cmp
es
int
cmpsb
inc
popa
andnps
sbbl
mov
fs
rcll
pop
aas
sub
subb
popa
imul
pop
and
ss
and
ss
test
cmp
push
dec
clc
pushf
ror
xor
dec
pop
and
pushl
pop
push
stc
or
mov
cmp
or
rcrl
sti
cmc
test
push
mov
push
aaa
cmp
pop
scas
es
or
in
fnstenv
clc
pusha
pop
mov
stos
adc
pop
icebp
rolb
push
xchg
sub
fxam
sub
mov
ja
mov
arpl
dec
lea
mov
pop
sub
out
and
push
or
xlat
ds
or
fcompl
cmp
adc
out
xor
cmp
sub
and
cmp
lret
daa
sbb
mov
jno
int
gs
inc
int
stos
mov
movsl
je
sbb
mov
call
cmp
shl
test
pop
cmp
mov
test
xchg
sub
daa
shll
and
pop
adc
push
adc
cli
cltd
repnz
mov
sub
mov
pop
testl
push
pop
fwait
jae
repz
enter
mov
mov
insb
mov
cs
or
sub
sub
stos
push
push
aaa
cmp
sbb
ret
les
fnstcw
adc
push
addr16
pop
movsb
sbb
mov
or
adc
clc
xchg
fsubrl
and
push
call
call
outsb
add
vmovmskpd
sub
add
adc
or
cmp
xchg
jecxz
and
scas
jne
not
int
mov
xlat
mov
xor
call
xor
push
negb
cmp
fiadds
add
lcall
push
add
mov
xchg
popf
and
jno
lea
pushf
jmp
mov
out
aam
xor
sbb
xor
add
sub
js
sbb
iret
int
add
cmpsl
je
dec
mov
je
mov
arpl
ljmp
mov
faddl
sbb
aad
jne
inc
test
jg
dec
pusha
push
outsl
fdivs
mov
divb
fildll
mov
add
mov
mov
mov
pop
pop
xor
cmpl
cltd
cmp
sub
cs
hlt
xor
adc
jp
xchg
mov
adc
dec
cmp
outsb
movsb
mov
pop
inc
test
sarl
dec
arpl
js
cltd
stos
int3
nop
mov
xor
mov
jo
sub
jbe
fwait
xchg
test
nop
fnstenv
or
das
outsb
mov
int3
stc
xchg
sub
push
sbb
push
pop
jnp
xor
pop
cmovp
mov
sub
adc
xor
xlat
sbb
adc
sub
