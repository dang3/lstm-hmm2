push
mov
push
shll
orb
pop
sub
xchg
in
aas
cltd
loop
push
ds
outsl
sarb
ja
mov
movsl
xor
or
es
sbb
mov
jmp
xor
adc
outsl
dec
das
out
ret
pop
add
jmp
aas
fidivrl
fcmovnu
push
mov
jb
data16
and
fucomip
push
sub
imul
idivb
push
or
aaa
jbe
or
test
clc
xchg
repz
cmp
jne
adc
add
push
mov
or
mov
lret
sub
imul
fiaddl
and
das
clc
lods
mov
es
pop
cmp
jge
and
cmpsl
scas
nop
or
jge
pop
add
ret
mov
lret
xor
arpl
cs
adc
adc
lret
xor
cwtl
inc
jecxz
adc
int
lcall
dec
lahf
shll
test
inc
mov
test
adc
xchg
pop
inc
pop
out
mov
jcxz
xor
in
mov
push
add
dec
push
xchg
mov
xchg
icebp
test
adc
cli
test
rcll
lds
mov
shlb
add
shrl
out
push
iret
lret
movsl
push
scas
push
movsl
xchg
fucomi
pop
popa
inc
mov
std
into
xchg
rcl
cmp
mov
lret
jae
cmp
mov
xchg
cmpsl
fwait
pop
mov
and
sahf
int
icebp
xchg
aaa
and
lret
mov
jbe
icebp
shll
adc
lods
jae
dec
sbb
jne
ret
sti
gs
fs
pop
lock
fcomip
xchg
mov
xchg
push
imul
push
mov
ds
mov
int
mov
push
test
sti
mov
out
stos
jle
movsl
test
ret
je
dec
sbb
xor
inc
repz
dec
fnsave
arpl
xorl
and
mov
aas
leave
leave
mov
inc
pop
lret
dec
add
out
pop
aad
frstor
out
ds
dec
push
xor
cmp
mov
and
sub
sub
inc
sbb
pop
cmpl
push
xor
add
adc
add
in
add
xor
and
sti
push
mov
lods
mov
mov
lods
xor
pop
fiadds
ret
out
mov
rcrb
cmp
mov
icebp
cmp
ret
xor
out
inc
sub
fsub
test
xchg
pop
popf
adcl
aaa
sbb
jno
fadd
mov
pop
dec
mov
gs
push
movsl
inc
movsl
mov
push
or
pusha
pop
pushl
or
inc
pop
std
push
push
fwait
sub
ret
push
daa
pop
mov
out
das
and
sahf
shll
mov
out
mov
in
jecxz
fwait
mov
insb
movsb
sahf
jmp
cmpsl
pushf
cmp
xchg
arpl
mov
les
psubd
dec
dec
sbb
ret
mov
mov
xchg
cmpsl
mov
jnp
sbb
movsl
testb
mov
fdivl
test
jge
out
popf
or
pop
and
lods
or
jne
int
mov
call
mov
sbb
popa
lcall
rorl
dec
jbe
push
or
adc
and
stos
jne
mov
nop
stos
test
es
lret
and
mov
imul
push
pop
lahf
inc
daa
add
ret
pop
pop
in
xorl
or
pop
sub
push
push
or
cmc
outsl
jae
rorb
add
inc
dec
pop
arpl
pop
outsb
shll
insl
dec
mov
mov
arpl
pop
decb
cmpsl
mov
leave
xchg
testb
jmp
cli
mov
xchg
inc
mov
xor
dec
push
in
hlt
cmpsl
arpl
push
mov
dec
imul
lea
or
jp
push
ljmp
jne
sub
cmp
std
lds
add
mov
pop
sbb
jp
add
in
outsl
mul
rcll
vandps
addr16
jno
outsb
jae
pop
popf
cmp
enter
movsl
fisubrl
jmp
jnp
cmp
fadd
shll
cli
add
dec
ret
xor
or
jbe
jae
mov
cli
inc
cwtl
xor
or
psadbw
jne
push
fmul
push
popf
mov
push
cmpsl
inc
cmp
mov
xchg
nop
push
jmp
xchg
in
lret
pusha
sbb
or
pop
cmp
mov
aaa
je
inc
lock
xchg
xor
stos
insl
arpl
insb
add
movb
inc
fidivs
jbe
pushf
mov
test
aas
dec
and
adc
cmpsl
std
cmp
imul
and
xchg
aaa
and
adc
xchg
xor
mov
dec
aas
mov
repz
push
addl
adc
mov
je
xor
inc
lret
push
popf
lea
xor
sbb
aaa
popa
add
pop
lods
pop
loopne
scas
push
add
and
cmp
inc
rorb
cwtl
ds
lcall
jecxz
xor
mov
cs
es
test
stos
jne
push
repnz
and
imul
setno
xor
data16
stos
mov
mov
cmp
mov
rol
mov
jmp
mov
adc
sbb
ds
mov
and
and
jl
test
mov
sti
iret
mov
sbb
and
test
mov
and
add
mov
cs
xor
nop
push
gs
ffreep
dec
cmp
sub
and
fadds
jne
pop
dec
or
decl
repz
xchg
shlb
sub
push
adc
inc
sub
add
inc
xor
cs
pop
repz
ret
jmp
jl
jle
in
cmp
mov
xchg
ret
cld
popa
jg
cmc
push
cmc
test
adc
jg
jnp
enter
adc
xchg
mov
push
xor
in
add
and
fildl
mov
in
aad
mov
add
push
mov
push
add
daa
push
push
ds
movsb
hlt
sbbl
or
xbegin
fwait
xchg
call
movsl
repnz
xchg
cmpsb
shll
icebp
pop
pusha
pop
cltd
mov
and
sub
out
fiaddl
movsl
lcall
xor
incb
add
in
mov
arpl
adc
mov
push
lea
and
dec
ret
outsl
or
fdivs
xor
jo
lods
loopne
xchg
push
sti
inc
xchg
rorl
xlat
sub
push
out
fwait
pop
pop
mov
fnstcw
jb
in
icebp
cmp
sub
popa
push
cmp
test
xchg
mov
std
out
ljmp
sub
and
cli
push
rclb
jnp
jb
add
cmp
jbe
cmp
jbe
fstpt
loop,pn
mov
mov
pop
mov
xor
jmp
popa
jl
icebp
push
outsb
gs
pop
add
imul
jb
push
cmp
mov
bound
lds
in
inc
xor
cli
rol
std
roll
and
in
hlt
scas
sub
jne
inc
xchg
and
cmc
repnz
dec
sub
jmp
std
icebp
in
jb
push
xchg
pop
dec
mov
iret
mov
icebp
mov
pop
push
daa
cwtl
leave
out
push
mov
loope
fcoml
dec
loopne
add
jge
push
in
insb
sbb
out
into
imul
pop
dec
pusha
or
nop
or
fmuls
xchg
xchg
bswap
sbb
mov
dec
mov
test
rcrb
cmp
mov
icebp
mov
push
mov
repz
add
mov
pop
mov
repz
mov
adc
mov
popf
or
and
lret
sbb
ret
pop
inc
xchg
inc
int
xchg
xchg
inc
inc
into
ja
subl
adc
push
lahf
or
mov
pop
loopne
lcall
lds
jge
outsl
mov
mov
rclb
jnp
cltd
popa
nop
xchg
fildll
xchg
or
xchg
add
arpl
fadds
out
idivb
movb
sahf
jp
je
test
ret
addr16
shll
out
mov
test
dec
xchg
fs
ss
push
xchg
sbb
in
rol
mov
shlb
ljmp
rcl
pop
shrl
icebp
sub
jecxz
xchg
inc
mov
call
lcall
cmp
jg
lods
xor
push
lret
sub
nop
mov
pop
fisttpll
out
repnz
xlat
cmp
sahf
fucomi
pop
push
icebp
ret
mov
in
in
movb
fbld
scas
mov
pushfw
stos
int3
loop
sbb
sub
mov
dec
pop
mov
mov
outsl
push
movsl
pushf
dec
add
xor
and
push
hlt
repnz
outsb
repz
and
popa
test
pop
icebp
sub
cmp
repnz
iret
insl
js
call
push
clc
adc
sub
lods
mov
je
movsl
cmp
decl
sub
mov
out
leave
popf
into
jmp
repz
adc
out
xchg
sub
popa
mov
sti
in
sbb
mov
shll
fsubl
sbb
xchg
jo
adc
loopne
into
jb
cli
sub
dec
xor
out
test
mov
inc
sub
out
dec
inc
mov
mov
cmp
fildll
jecxz
push
adc
icebp
lret
mov
xchg
pinsrw
or
pop
add
popf
sbb
push
cmp
sub
lods
shll
std
cmp
lahf
and
mov
mov
mov
bound
mov
xchg
int
jl
adc
rdpmc
daa
mov
mov
add
mov
sahf
ja
push
int
shrb
mov
jp
lods
mov
sbb
je
in
mov
jns
pop
pop
push
adc
rcll
mov
jnp
sub
and
pop
mov
xor
jbe
jge
push
adc
movsl
add
push
das
sbb
aam
push
dec
xor
xor
push
xchg
xor
xchg
test
lahf
repnz
call
inc
xchg
push
adc
imul
pop
pushf
dec
insl
ret
mov
and
negl
add
lret
in
xchg
pop
daa
std
enter
jo
in
std
push
insb
add
push
scas
mov
mov
xchg
or
test
add
out
sub
mov
adc
sbb
js
mov
cmc
mov
test
add
bound
dec
cltd
shrb
lods
xor
jns,pt
xlat
xor
in
inc
popf
test
enter
xchg
adc
test
push
lret
sahf
hlt
or
mulb
sbb
sarb
push
scas
add
lcall
test
lds
outsl
mov
inc
inc
adc
sub
cmp
jle
mov
outsl
add
das
shll
loop
add
adc
mov
lock
decl
mov
jp
inc
mov
mov
les
and
roll
push
fs
das
shrl
lea
outsl
jmp
mov
push
pop
adc
adc
push
adc
jmp
ss
cmp
ret
testl
push
xchg
movsb
lahf
xchg
mov
jge
insl
pop
sub
sti
mov
inc
jp
add
ret
cmp
jl
scas
in
xor
dec
inc
xlat
pop
dec
stc
shlb
dec
lret
cmpsl
pop
push
fisubrs
xchg
mov
fists
xor
mov
add
sbb
mov
ss
inc
or
xor
add
aaa
ds
xchg
mov
lret
cmp
adc
cmpsb
and
adc
shrb
cmp
es
xchg
inc
mov
fldt
pop
cs
and
cmpsb
xor
sbb
sbb
in
cwtl
setnp
stos
dec
inc
lea
insl
push
stos
xchg
and
ss
idivb
push
push
stos
jb
enter
in
outsl
addr16
ficompl
cmpsb
xchg
test
pop
sub
mov
test
mov
cmpsl
sub
pop
adc
cmpsb
std
xchg
bound
out
push
sub
add
fwait
les
pop
pop
stos
sbb
and
es
dec
lock
add
adc
mov
aaa
fadd
sub
jae
sbb
jno
cli
scas
and
es
add
inc
mov
adc
dec
arpl
pop
or
sub
daa
lret
icebp
imul
repnz
dec
pop
rcrl
stos
cmp
add
add
aaa
icebp
xor
push
cmpl
and
decb
jne
pop
es
adc
daa
add
das
push
pop
xchg
mov
das
mov
in
repnz
daa
dec
cmp
jno
cmp
xlat
sub
das
movsl
outsl
xor
dec
and
repz
aam
cmpl
repnz
inc
mov
jne
xor
cmpsb
dec
jno
sbb
mov
add
imul
xor
jbe
fsubs
xor
xchg
sti
and
lea
push
fwait
dec
out
sbb
jae
and
adc
mov
inc
push
inc
mov
test
push
aas
push
clc
in
imul
fidivrl
jb
push
and
das
or
in
insl
mov
jmp
jle
push
sahf
adc
andb
mov
mov
or
stos
into
and
mov
push
into
adc
pusha
sbb
pop
jb
sub
ret
ljmp
inc
mov
or
and
in
sbb
mov
push
xchg
adc
repz
pop
push
xchg
jb
mov
cmpl
push
cld
std
insb
add
int3
mov
mulb
les
imul
sub
daa
leave
loop
nop
inc
mov
cld
mov
dec
ret
insb
insl
jnp
cmp
rcr
or
jae
lret
jbe
ja
xor
cmc
lret
push
or
xchg
aas
mov
sbb
ret
sub
js
xor
lods
test
mov
lret
hlt
movsl
or
call
mov
pop
pop
lret
loopne
enter
sub
stc
mov
insl
inc
int
sbb
leave
lret
pop
mov
add
test
mov
aad
dec
mov
jo
mov
repnz
sub
jne
hlt
addb
gs
mov
pop
out
add
mov
adc
stc
andl
xchg
packsswb
mov
xor
inc
daa
pop
pop
sbb
ret
jns
cmp
int
shrl
mov
adc
shll
pop
je
sub
inc
pop
xor
mov
mov
add
in
push
add
pop
and
sub
cmp
cmpsl
cmpb
add
mov
xchg
popf
dec
sbb
sarl
and
sti
into
aaa
and
enter
ret
mov
aas
mov
pop
cmp
push
push
push
inc
mov
adc
mov
lret
lret
into
arpl
or
repz
adc
adcl
adc
repz
dec
cltd
jmp
and
adc
mov
inc
dec
das
adc
sub
jb
stos
and
pushf
add
push
push
stc
daa
pop
lret
popa
popa
mov
pop
xor
mov
mov
mov
pop
mov
mov
lods
lcall
sti
test
and
mov
addr16
and
sbb
sbb
out
mov
lods
xor
add
xor
jns
inc
addr16
jae
mov
and
xchg
xchg
subb
popa
xchg
xchg
adcl
clc
mov
push
and
mov
pop
add
inc
es
xchg
notb
lcall
mov
gs
daa
sbb
and
dec
sbb
out
jmp
stos
or
mov
and
sub
mov
bound
mov
jecxz
faddl
shrl
inc
xlat
addr16
xchg
jbe
repz
lods
inc
sti
jae
push
jmp
in
jae
inc
movsb
add
add
aam
sub
and
subb
aaa
out
fisttpll
jne
xor
mov
stc
movl
rol
mov
mov
xchg
cltd
out
out
and
sub
out
push
cmp
cmp
and
insl
jmp
jecxz
pop
inc
xchg
ret
xchg
and
sbb
mov
rep
or
mov
push
dec
add
shl
ja
jae
sbb
push
sbb
jae
push
loope
jno
or
add
aas
testb
xchg
or
enter
cmp
lcall
addr16
push
jp
jo
popf
mov
dec
jb
and
unpckhps
lds
repnz
adc
out
movl
jns
mov
jecxz
inc
lahf
shrb
cmp
dec
or
outsb
scas
ror
repz
cmpsl
pushf
notb
add
xchg
jecxz
in
es
push
mov
packssdw
mov
mov
xor
idiv
std
movsb
arpl
rcrb
icebp
movsb
pop
cmpsb
pop
push
lock
scas
mov
xchg
daa
jo
inc
in
jns
pop
data16
mov
add
pop
test
andb
xchg
pop
pop
test
add
lret
mov
sbb
iret
in
lahf
add
cmp
jns
pop
xor
stos
mull
orl
movsb
cli
sub
mov
test
jmp
stc
push
add
lods
cmpsl
xor
mov
je
add
cmp
insl
jmp
stos
les
popa
fs
dec
pop
mov
sub
xor
xchg
daa
mov
cmp
ret
stc
mov
adc
xlat
lahf
and
outsl
pop
pop
pop
loope
out
lahf
aas
inc
shrl
mov
addb
mov
add
movb
and
test
ss
je
mov
pop
andb
in
add
dec
aam
shll
insl
mov
lret
push
or
mov
arpl
jae
idivl
mov
xor
push
jecxz
out
daa
xlat
cmp
imul
popf
or
mov
push
cmpsl
ja
push
mov
mov
jmp
mov
mov
das
cli
popf
movsb
out
and
dec
xlat
pop
test
sub
and
cs
scas
adc
decl
or
pop
fldenv
mov
popa
jg
outsl
ja
xchg
lret
adc
mov
mov
mov
dec
mov
pop
stos
mov
inc
xor
ja
or
clc
sti
push
xor
adc
jg
lds
mov
popa
push
lock
dec
xor
push
stos
sub
fs
inc
jl
jp
ss
insl
cmpsb
mov
dec
and
mov
jae
in
xor
in
or
xchg
out
das
pop
push
lcall
xchg
cli
push
cmp
add
daa
mov
roll
mov
sarb
notl
pop
mov
dec
or
subl
js
sbb
outsl
syscall
mov
subl
lret
mov
repz
test
popl
out
inc
pop
mov
ss
dec
and
pop
mov
ret
xor
mov
xchg
daa
and
das
pop
xor
push
mov
lret
repz
dec
mov
and
pop
arpl
fnsave
pusha
lret
jmp
jg
data16
incb
stos
or
incl
daa
lods
mov
imul
cltd
outsl
push
faddl
pop
adc
mov
fistl
mov
fistps
and
jg
pop
dec
cmpsl
xor
cmpsl
imul
lahf
popf
mov
inc
mov
or
add
imull
cmp
pushf
sub
xchg
pop
das
push
sti
fistpl
in
stc
test
cmp
inc
nop
negb
divl
mov
mov
pop
sbb
xchg
es
fwait
sti
movsb
xchg
mov
in
lret
popa
push
and
mov
inc
and
pop
xchg
mov
pop
mov
sahf
cmp
cs
outsl
dec
mov
or
sub
mov
mov
push
repnz
xchg
fcomps
xorb
std
push
sbb
imul
push
pop
inc
roll
pop
inc
xchg
xchg
daa
cmp
int
xchg
es
and
dec
das
cmc
xchg
pushf
mov
push
mov
and
and
jb
in
jp
daa
jp
xor
scas
push
mov
ljmp
push
mov
lds
aad
ret
cwtl
push
fwait
sub
sub
ljmp
sub
jp
pop
jo
sub
popa
mov
push
jne
fldcw
or
xchg
lea
scas
lcall
jl
sbb
xchg
mov
mov
pop
dec
cmpsb
ud2
fsts
xchg
scas
jne
daa
sbb
and
jne
gs
out
lds
cli
mov
mov
push
clc
jbe
loop
adc
adc
test
mov
and
sub
adc
mov
addl
xchg
cmp
mov
cmpsb
dec
xor
daa
mov
imul
pop
sarl
push
xchg
scas
stos
jg
lcall
sbb
jb
jp
or
fstpt
sti
iret
mov
xchg
and
popa
scas
insl
mov
test
xchg
cmp
sbb
and
ffree
cmpsb
add
mov
rcll
sub
lcall
daa
out
adc
inc
movsb
fwait
lahf
cwtl
sub
mov
unpckhps
dec
test
div
sti
and
lret
and
dec
jbe
mov
or
int
sar
or
cmp
arpl
cmp
loopne
xchg
xchg
xchg
ret
in
lods
dec
ss
mov
mov
or
addb
xchg
xor
xchg
or
scas
loopne
es
jecxz
sub
xorb
sbb
fstp
xchg
mov
xor
pop
sub
jecxz
fldt
pop
cmp
es
test
push
fistpl
cmp
sahf
sub
sti
mov
iret
lahf
sub
ljmp
mov
jle
fwait
and
outsb
ja
sbb
dec
insb
roll
mov
add
dec
jmp
pop
ret
fwait
add
xchg
mov
xor
fnstenv
pop
sub
mov
negb
addr16
jecxz
xlat
adc
push
jl
mov
scas
push
jmp
jae
adc
daa
out
adc
cmp
sti
and
mov
pop
inc
xchg
fistpll
or
shrl
imul
push
dec
fwait
loope
cmpsb
mov
mov
loop
push
call
mov
cs
fwait
mov
orb
pop
repz
stos
lret
gs
xchg
aad
jmp
jmp
dec
mov
pop
cmp
lret
bound
push
pop
pop
mov
push
mull
ret
stos
lods
imul
test
fimull
xchg
sub
arpl
outsl
pop
pop
scas
pop
mov
inc
mov
mov
fs
aad
test
scas
mov
xchg
out
out
scas
mov
fmuls
test
out
iret
fs
dec
and
or
aas
xchg
out
orl
das
pop
pop
mov
pop
fistl
outsl
inc
shr
lods
dec
push
pop
dec
xchg
dec
lss
in
mov
mov
fbld
loope
imul
xor
pop
out
out
and
and
jmp
jb
mov
es
mov
movb
cs
cmpsl
xor
xchg
inc
scas
pop
sub
xor
jg
ret
cli
es
repnz
jb
dec
pop
idivl
pop
mov
into
jmp
loope
sbb
inc
adc
stos
sbb
loope
ucomiss
orb
sahf
fiaddl
jne
pop
lahf
scas
pop
xchg
fimull
icebp
cmp
or
scas
inc
xor
adc
xchg
mov
pop
or
add
mov
insl
fwait
cmpsb
cmp
sub
pop
sub
aad
cwtl
std
xor
in
hlt
jg
mov
xorb
gs
cmpsl
jle
sbb
cmc
and
js
das
add
push
pop
sbb
jbe
sahf
ret
jmp
lret
ret
jnp
lock
add
movsl
scas
sbb
bound
ss
lods
mov
push
push
bndstx
loop
daa
jnp
shlb
int3
rorl
mov
mov
iret
pop
and
jp
scas
mov
js
scas
scas
jb
and
movsb
sbb
pushf
inc
xchg
lahf
daa
lods
pop
cwtl
jmp
leave
mov
mov
adc
shlb
jnp
mov
mov
cmpsl
iret
iret
gs
mov
push
push
fnstenv
dec
jb
sub
push
iret
jl
jg
je
sbbl
jmp
pop
ror
scas
jns
push
aam
jmp
jl
xchg
dec
jne
mov
push
push
dec
mov
and
xor
mov
out
push
mov
ds
jmp
ljmp
mov
mov
scas
mov
mov
aas
repnz
xchg
cmpb
jnp
or
xchg
scas
lret
and
mov
sbb
xor
movsl
jge
pxor
sbb
pop
push
lahf
fisubs
insl
imul
mov
popf
dec
sub
mov
adc
jl
pusha
in
push
psrad
mov
sti
clc
push
lods
pop
pop
xor
ret
das
mov
sbbb
xorb
es
loopne
arpl
inc
imul
test
cmp
inc
divl
es
repnz
fwait
cmp
sub
stc
in
divb
out
std
xlat
shrb
jnp
mov
pop
pop
pushf
hlt
xorl
xor
jne
sub
inc
cmp
pop
cmpsl
rorb
enter
lret
pop
lcall
adc
pusha
mov
and
lcall
repnz
sbb
repnz
adc
aaa
cmp
jae
dec
hlt
sti
sahf
std
sub
mov
fnstcw
jmp
fcmovbe
jae
xchg
leave
mov
std
push
dec
incl
xor
add
aaa
xchg
sub
data16
inc
xor
adc
adc
pop
loope
addb
jl
and
adc
cmp
scas
enter
cmpsl
push
pop
lock
dec
xor
mov
mov
out
out
out
adcl
into
push
jg
iret
push
sub
jge
push
cwtl
out
int3
clc
mov
jp
imul
mov
pop
jns
mov
sub
or
notb
in
nop
in
and
jns
cmp
dec
repz
xlat
cmp
inc
popa
pop
fidivrs
adc
je
xlat
fucomip
adc
mov
outsl
push
dec
sub
or
add
jmp
inc
out
mov
and
mov
push
popf
pop
jg
mov
jnp
mov
fcomps
xor
and
outsb
cmp
mov
xchg
or
mov
scas
cmc
fdivrs
js
cwtl
cmp
outsl
stos
jb
lods
js
push
pop
test
in
add
cmp
xchg
out
inc
inc
dec
dec
mov
xchg
fimull
cmp
and
subps
xchg
inc
pushf
add
sub
outsl
pop
dec
stc
sarl
mov
outsl
inc
xor
fbld
push
add
in
xor
int
clc
xchg
xor
mov
sti
or
out
outsl
pop
mov
inc
pop
push
pop
xchg
lcall
inc
addr16
in
fstl
movsl
mov
adc
sbbb
mov
sbb
loope
mov
push
loopne
mov
mov
ret
je
sbb
ds
or
test
test
jbe
jo
jle
sbb
scas
jbe
sub
fstl
fbld
cmpsl
pusha
xchg
xchg
scas
clc
inc
jo
pop
js
pop
dec
inc
int3
into
pusha
std
cltd
aaa
jo
or
sbb
add
sbb
mov
int3
ret
ret
sub
in
int
dec
sub
jmp
jns
out
jecxz
pop
xchg
mov
xchg
sbb
dec
clc
and
push
pop
xor
cmpsl
imul
inc
sub
pusha
sbb
ljmp
mov
repz
cmp
push
int
lods
push
add
or
sub
sub
adc
mov
cmp
xor
xchg
jg
dec
lahf
lret
push
dec
mov
xor
insl
repnz
lahf
and
pop
clc
sub
out
cmpsl
sub
jp
xchg
popa
sbb
mov
lret
aad
sbb
add
inc
dec
aam
sub
cs
xlat
fwait
out
jae
and
ret
add
dec
stos
lea
shll
add
in
hlt
fmull
sti
lock
movsb
or
subb
in
xlat
cmp
call
jb
gs
data16
aas
into
dec
sbb
test
pop
lods
xchg
sub
lret
jb
push
xchg
and
jbe
mov
cmp
enter
call
xchg
jo
cmp
je
popf
mov
cmp
xorl
lahf
cmp
or
sub
movsb
jecxz
repz
mov
add
rcll
jae
in
xchg
ja
push
lds
fildll
arpl
mov
jno
pop
and
outsl
sbb
cmpb
cs
add
pushf
adc
mov
jae
movsb
fsubrl
stos
jbe
xorb
xchg
xchg
clc
imul
test
aaa
dec
daa
jb
test
xchg
dec
or
stc
pop
jae
xor
jae
clc
sbb
add
sbb
push
es
out
xchg
jp
addr16
xor
jmp
rcll
scas
cmpsl
std
push
sub
mov
mov
sub
xchg
daa
adc
ret
jbe
add
push
and
mov
ret
sub
into
std
lret
add
mov
mov
adc
mov
fisttps
fdivrs
daa
aaa
fsubs
icebp
xchg
aas
stc
mov
mull
jecxz
lcall
sub
xor
loopne
movsl
dec
in
imul
mov
dec
bound
sbb
mov
push
xchg
add
ds
adcl
cli
pop
jp
jae
loope
notl
push
push
or
dec
adc
and
and
sahf
mov
outsb
cmp
mov
cmc
pop
mov
rolb
ret
mov
and
adc
mov
cmp
fsubl
cmpsl
jp
xchg
mov
mov
repnz
sub
mov
and
addr16
imul
dec
push
xlat
mov
mov
lea
insl
data16
mov
fsts
push
cmp
push
lods
sbbb
dec
push
mov
cmc
pushf
pop
orl
sbb
std
mov
sarb
xchg
scas
sbb
shlb
pop
in
cmp
lret
in
mov
push
lock
inc
popa
adc
cltd
mov
xor
cmp
das
jmp
js
aam
push
and
jle
xchg
fstl
out
sub
add
movsl
xor
sahf
stos
xor
xchg
les
mov
mov
mov
mov
daa
adc
jg
xor
iret
xor
xor
xor
arpl
out
movb
dec
sub
sub
dec
pop
je
jo
dec
xlat
push
xchg
add
push
int3
inc
mov
inc
mov
fcmovnb
sbb
clc
mov
insl
bound
leave
jmp
sbb
push
sti
out
mov
or
lods
leave
loope
aad
lock
sti
mov
movsb
insl
pop
and
nop
inc
adc
popa
sahf
mov
ljmp
in
mov
test
popf
pop
call
outsb
frstpm(287
out
xor
pop
fwait
sti
jb
mov
push
dec
pop
mov
outsb
popf
mov
fstp
dec
and
pop
push
mov
mov
jbe
rorl
mov
pop
dec
fs
fs
cs
or
push
in
xchg
test
rcrb
mov
jb
mov
imulb
add
ret
gs
adc
addl
pop
mov
push
mulb
add
sbb
insl
pop
sti
mov
or
ss
insl
mov
cmp
pop
out
sbb
cmp
push
lds
push
jne
leave
loop
stos
inc
jnp
repz
fcomps
imul
rcrl
or
scas
in
xor
adc
lcall
sbb
leave
dec
pop
push
das
repnz
lods
jl
loope
add
sbbl
pop
out
xchg
jbe
cmp
push
xchg
gs
push
mov
iret
push
repz
push
inc
aaa
dec
or
into
pop
inc
pushf
xor
mov
lock
call
inc
mov
jo
mov
pop
push
push
cmp
xchg
dec
mov
movsl
cli
xor
sahf
pop
mov
cmp
xchg
stc
mov
xor
outsl
xlat
push
dec
xor
cs
adc
shrb
mov
inc
cmp
inc
ljmp
add
push
ja
ja
push
pusha
shl
sub
pop
cmp
in
into
cli
xlat
pop
lcall
mov
aad
cmc
mov
scas
in
sbb
jb
jmp
scas
lods
fs
in
rorl
pop
sti
fs
and
dec
add
scas
sub
mov
addr16
popf
pushl
xchg
scas
int3
xrelease
lahf
lock
inc
call
hlt
lret
pop
or
into
push
mov
cli
jae
in
lcall
sbb
mov
add
and
mov
out
add
adc
loop
mov
sbb
std
lock
imul
shll
outsb
nop
push
inc
inc
lock
loop
push
sti
pop
adc
pop
jnp
shl
or
repz
scas
push
stc
cmp
mov
sub
cmp
out
cmp
pop
addr16
dec
data16
ficomps
inc
inc
and
repz
mov
xchg
mov
ljmp
add
lret
test
pop
stos
cwtl
repnz
jg
jae
test
and
aad
pop
push
mov
pop
imul
pop
pop
popa
add
movsb
out
mov
loopne
pop
repz
mov
es
pop
add
xchg
xchg
cmc
ds
lahf
push
incb
push
aad
ljmp
outsl
pmaxsw
les
sbb
add
mov
test
push
ret
jne
mov
jecxz
xor
sbb
pop
imul
idivb
push
pop
and
push
and
sub
mov
movsl
stos
mov
jmp
cmp
inc
aas
imul
jecxz
mov
cs
xchg
mov
pop
xchg
jmp
lret
cmp
out
fiadds
ret
and
pop
pusha
jmp
xchg
xchg
xchg
adc
mov
inc
inc
dec
outsl
loop
xchg
out
scas
mov
adc
in
fcomps
pop
or
enter
and
mov
xlat
or
popa
lcall
divl
mov
xor
es
ret
hlt
mov
in
inc
lock
xor
add
bound
adc
xchg
out
sbb
test
inc
cwtl
imul
pusha
add
ret
je
push
stos
loopne
push
repz
sbb
xor
mov
and
movsb
mov
cmpsl
mov
sub
in
arpl
and
subb
add
inc
inc
pop
dec
mov
or
ja,pt
add
and
hlt
cmp
andb
or
cmc
pmaxsw
je
lret
cli
mov
or
cs
and
gs
cli
iret
movsb
movsb
dec
sbb
dec
movsl
outsl
or
adc
cmp
movsb
outsb
mov
ja
repz
pop
push
fidivl
sbb
jg
lahf
lret
daa
and
or
cmp
dec
jle
xchg
add
mov
popa
test
sbb
sub
cmp
pusha
mov
cmp
movsl
movsb
pop
jb
movsb
or
fcmovnbe
and
xor
inc
mov
jne
xor
push
dec
imul
loopne
xchg
lcall
decl
ret
daa
sub
mov
mov
adc
je
pop
jb
push
sbb
outsl
fcomps
mov
and
popa
and
dec
lret
mov
sub
push
push
fs
lock
xor
xor
jecxz
ss
push
pop
jne
out
cmpsl
fimuls
ja
ret
pop
jbe
stos
adc
outsb
xchg
add
sbb
outsb
call
bound
jp
inc
mov
jl
push
lods
jns
sarl
mov
mov
mov
dec
in
ss
into
xlat
xor
xor
popl
icebp
stos
fildl
hlt
ficomps
sub
stc
je
mov
fstpl
or
inc
dec
fisttpl
mov
or
push
sub
insl
xor
lods
xor
mov
sub
jge
cli
sbbl
frstor
mov
or
mov
jae
mov
jp
push
cli
out
ds
inc
cmp
icebp
ficoml
and
iret
cmp
add
sub
mov
push
lods
insl
pop
adcb
cmp
push
lret
xlat
xchg
fnstsw
fdiv
out
cmp
pop
in
mov
xchg
cmc
sub
bswap
hlt
out
out
rclb
add
divl
fdivs
addr16
or
cmp
cmpb
cmpb
aam
bound
cli
and
daa
out
sahf
and
sbb
xlat
mov
das
cmp
mov
jb
pop
push
push
psrld
mov
lret
std
rcll
or
movsb
mov
add
dec
mov
aad
xchg
dec
pop
pop
pop
mov
cld
mov
adc
xor
fsub
ss
cmp
daa
iret
and
xlat
xor
cmpsl
stc
pop
jnp
imul
pop
xchg
dec
leave
daa
daa
ds
out
push
mov
add
pop
stos
imul
sub
pop
je
daa
sbbb
in
shr
fildl
fcomps
out
cmp
or
test
in
in
inc
dec
pop
loop
fstl
jno
adc
push
or
jge
rcrl
inc
or
xchg
js
cwtl
out
jnp
sahf
fsubrs
cmp
and
sbb
inc
outsl
mov
or
mov
mov
psubd
jmp
xchg
prefetcht0
test
icebp
lahf
xor
les
inc
shrd
xchg
sub
stos
and
aam
cs
lret
push
call
mov
add
fisubl
pop
adc
sbb
and
loope
test
xchg
fldenv
imul
repz
pop
dec
adc
xlat
leave
cmp
int3
outsb
push
pop
fistps
or
imul
orl
call
enter
dec
dec
rclb
cmp
subb
adc
vmovsd
mov
aam
jne
dec
mov
js
or
inc
adc
fwait
lock
inc
hlt
push
stos
lahf
jno
ret
icebp
insb
cltd
pop
adc
pop
gs
pop
lret
inc
sub
stos
sub
xor
std
pop
cltd
mov
in
subl
or
lea
and
mov
mov
and
addr16
mov
das
add
pop
inc
xorl
leave
cmp
adc
sub
cmp
fsubrs
shll
aas
and
sbb
pop
test
push
or
mov
pop
adc
inc
lahf
stos
xchg
pop
rep
or
xchg
les
or
out
push
sub
push
cmp
dec
mov
fs
fs
shrl
addb
sub
insb
arpl
adc
inc
xchg
mov
insb
clc
pop
sub
jae
xchg
sub
inc
je
notb
out
ror
ret
jg
adc
and
xchg
sub
pop
in
mov
inc
sub
jns
jecxz
inc
insb
mov
test
inc
mov
ss
ret
and
and
arpl
cld
bound
xchg
adcl
pop
daa
cs
xor
xchg
jl
lea
add
pop
and
mov
jp
lods
lcall
adc
xor
and
adc
adc
or
rcll
mov
jle
shl
lods
dec
and
cmp
dec
sub
pop
hlt
push
fbstp
xor
rorl
test
mov
fsubrl
outsl
and
sub
cmp
jo
inc
orl
push
stos
cli
test
or
bound
mov
adc
sub
jne
cmp
jo
mov
addr16
test
lret
dec
js
scas
pop
ret
jb
jns
jb
scas
enter
add
sti
mov
inc
mov
lahf
push
mov
nop
rorl
fs
out
aam
mov
std
repnz
pop
xor
mov
loope
stc
xchg
xchg
dec
mov
pusha
add
fstl
push
pop
dec
movsl
pop
lret
inc
cmp
ret
sub
cmp
sub
xor
dec
mov
jl
daa
pop
or
loopne
jecxz
cmp
std
mov
jnp
cmp
arpl
mov
xor
cmc
iret
adc
cld
adc
out
out
imul
jl
in
mov
pusha
lds
insl
xor
mov
sti
das
adcl
hlt
fwait
xor
je
imul
mov
ljmp
push
push
popf
mov
mov
adcb
je
addr16
test
adc
xor
inc
iret
iret
lcall
pushf
mov
test
xor
mov
push
pop
xor
sti
pop
and
dec
mov
out
adc
mov
test
pop
jae
lods
shlb
push
push
repnz
and
xchg
and
call
push
xchg
cmc
pop
subb
lods
aas
push
rolb
inc
fldcw
mov
fwait
jp
in
sub
insl
scas
ficompl
mov
or
pop
jb
xor
sub
out
cltd
cld
sub
rcrl
sti
data16
bnd
jg
or
loop
scas
in
test
push
adc
cli
mov
ret
es
push
adc
pop
mov
ds
jnp
jo
mov
in
jne
popa
xchg
sbb
push
mov
in
ret
push
lcall
imul
lea
xchg
mov
test
inc
dec
sar
and
mov
adc
xchg
adc
in
adc
cmp
orb
out
dec
out
dec
adcb
ret
dec
aas
lret
pop
sbb
jb
hlt
out
mov
in
mov
dec
cmp
or
xchg
outsl
mov
add
shl
nop
and
scas
cmp
push
jmp
dec
sub
xor
sub
hlt
test
mov
push
pop
mov
in
loopne
in
cltd
xchg
mov
adc
repnz
inc
in
pop
add
cmp
push
push
xor
xchg
les
roll
cli
jns
stos
cltd
add
popa
mov
call
dec
or
das
std
test
xor
es
lock
sub
adc
dec
pop
push
xchg
jge
cmpsb
mov
lret
outsb
push
pop
popa
push
pop
adc
cmp
xchg
fucom
dec
dec
repnz
adc
mov
aaa
mov
js
mov
cmp
add
cmp
push
stc
or
sub
and
cs
ffreep
mov
daa
fmuls
or
adc
cmp
jnp
rcl
ja
jl
into
push
sbb
in
in
cli
xchg
rorb
or
mov
aas
mov
and
ficompl
push
aaa
xchg
push
mov
cli
inc
nop
adc
inc
adc
mov
rcr
add
cmp
sti
ror
and
cmp
adc
xor
push
and
pusha
stc
push
shll
adc
das
push
mov
aad
push
sub
jnp
pop
or
mov
or
cmc
pusha
cmp
pop
test
cwtl
add
mov
aad
cld
movsb
push
imul
frstor
lret
xor
in
sbbl
push
test
xchg
adc
aad
aad
enter
cmp
mov
pop
enter
scas
fdivs
push
mov
pushf
xlat
cmp
mov
ret
jp
lock
int3
outsl
jbe
adc
jnp
or
and
fstpt
push
stos
cmp
mov
xor
mov
mov
pop
mov
mov
lret
popa
sbb
les
mov
popa
xlat
mov
add
jle
es
lahf
jb
stos
pop
mov
scas
push
outsl
jmp
mov
jg
scas
inc
outsl
mov
jmp
or
pop
stos
lods
ds
arpl
idivl
arpl
xor
repz
cmpsl
jae
mov
lcall
xchg
inc
inc
out
dec
dec
popa
mov
xor
lret
dec
pop
popa
mov
clc
xchg
push
sbb
jle
add
pusha
mov
jmp
test
xchg
xchg
xchg
jecxz
xchg
clc
icebp
push
pop
add
xor
fwait
add
lcall
dec
mov
mov
je
fcmovnbe
sti
jg
pop
dec
push
push
jg
mov
xor
inc
fldt
dec
push
lods
jle
out
pop
sub
xor
or
xchg
mov
push
mov
mov
adc
add
out
or
cld
pop
fsubrp
lahf
pop
mov
insl
pop
sbb
mov
push
in
out
cmpsl
mov
mov
push
mov
mov
adc
std
inc
adc
mov
and
popf
stos
lea
inc
ficoms
fldl
idivl
jae
add
shrl
push
or
pop
rcl
xchg
xlat
push
adc
js
repz
cmp
cmpb
clc
xchg
pop
enter
pop
adc
movsl
std
gs
lds
and
add
outsb
leave
xchg
jne
mov
jns
daa
mov
cli
jbe
pop
jne
es
daa
mov
out
mov
mov
out
dec
les
xor
or
mov
sti
imul
popa
jns
xor
daa
call
lds
call
fstpl
ds
ss
ds
ds
pop
test
cltd
mov
add
dec
add
sbb
sub
arpl
daa
jae
aad
or
mov
push
mov
int3
mov
daa
stos
negb
jecxz
xor
mov
and
inc
int3
fildll
fwait
mov
push
mov
test
imul
lds
iret
pop
push
leave
adc
in
cli
push
mov
jecxz
stos
or
test
mov
adc
incb
gs
or
and
nop
das
subb
das
xchg
in
push
xchg
daa
or
mov
xchg
adc
inc
pop
out
rolb
in
scas
dec
adc
movsl
out
cmpsb
aaa
mov
sub
jo
testl
jl
push
daa
aaa
jmp
je
xchg
daa
dec
inc
icebp
push
dec
push
push
add
test
mull
icebp
inc
cmpsb
cmp
hlt
pop
push
aas
jo
icebp
pop
daa
inc
and
cld
sbb
and
sti
test
lahf
mov
push
arpl
dec
pop
daa
mov
es
cmc
inc
imul
and
pop
xor
movsb
cmp
mov
inc
mov
mov
into
xor
gs
sub
sub
pop
ja
les
jno
inc
jg
into
push
mov
push
mov
in
xchg
mov
cmpsb
negb
push
mov
shlb
sbb
imul
dec
std
mov
stos
dec
ret
ss
mov
punpckldq
roll
xor
arpl
scas
leave
icebp
dec
inc
or
cwtl
mov
imul
repnz
jo
iret
cmp
xchg
dec
scas
lcallw
pop
psrlq
dec
sahf
inc
jmp
jb
push
mov
mul
add
push
popa
ja
lfs
mov
mov
in
pop
dec
mov
pusha
pop
inc
xlat
in
fbstp
push
js
xchg
xor
mov
xor
mov
adc
mov
xchg
test
ss
pop
hlt
xor
rclb
out
cmpsl
push
pop
xchg
int
pusha
mov
dec
lret
ret
dec
pop
loopne
pop
inc
sbb
sub
shlb
jne
shlb
jb
jmp
cmp
out
test
loop
add
and
stc
lea
cmp
fnstenv
mov
mov
mov
jns
out
aaa
roll
sbb
add
fcoml
or
scas
test
and
push
rcll
sbb
clc
out
cmpl
add
fstpt
insl
data16
mov
mov
js
push
sub
mov
jb
adc
mov
in
jno
movl
sub
in
xor
jmp
in
xchg
push
jno
xor
inc
insl
mov
mov
test
ljmp
push
insl
fidivl
or
in
or
adc
adc
popa
sub
dec
push
subb
mov
jb
xchg
arpl
mov
push
in
sub
rcll
popf
ret
and
les
fwait
push
lcall
outsl
repnz
sbbl
std
pop
push
mov
rolb
daa
and
jbe
mov
icebp
pop
adc
rcrl
sub
pop
or
stc
pop
cli
daa
fimuls
jmp
ss
xchg
inc
cs
jmp
stos
cmpsl
out
fisubl
push
and
pmullw
xchg
repz
sahf
scas
sbb
dec
jbe
push
and
mov
adc
mov
in
rol
loope
fisubs
cmp
je
daa
dec
ror
add
mov
insl
sbb
shl
out
xchg
mov
or
pop
jge
pop
or
into
mov
stos
and
push
imull
jg
sahf
mov
sbb
jmp
loopne
sbb
in
adc
adc
mov
cmp
jmp
repnz
push
or
inc
popa
jecxz
jle
fst
dec
imul
rep
pop
lock
gs
push
imul
xchg
daa
add
test
pop
and
in
jb
sub
scas
mov
pop
in
dec
jmp
roll
int3
pop
lds
ret
and
sub
jo
stos
adc
jae
pop
pop
lock
sub
push
aas
addr16
push
and
sbb
pop
hlt
sbb
or
mov
mov
fcoml
push
rclb
nop
dec
adc
mov
sbb
repz
sbb
mov
movsb
inc
jae
hlt
or
pop
push
sub
add
mov
or
xchg
lret
leave
sub
jb
cmpsl
push
cmc
sub
pop
aaa
sbb
loope
hlt
mov
imul
movsl
add
adc
push
jbe
aaa
out
imul
xlat
into
sti
inc
mov
mov
cmp
call
inc
jbe
in
xchg
ss
loopne,pt
xchg
cs
and
testb
das
testb
movsb
les
sub
xchg
adc
xor
stos
fimuls
xor
popf
mov
or
xchg
pop
in
aaa
mov
xchg
jmp
mov
icebp
and
les
fdivs
es
mov
insl
rcrl
stc
add
xor
push
cmpsl
insb
mov
inc
clc
mov
jb
or
sub
int
cli
dec
inc
dec
mov
das
mov
aad
adc
push
xlat
dec
daa
inc
js
mov
push
xchg
and
xlat
repnz
mov
pop
or
adc
sbb
add
dec
fnstsw
inc
scas
mov
xchg
fwait
call
mulb
into
jge
pop
sub
fists
mov
sti
insl
jae
mov
dec
push
out
in
adc
sub
cmc
and
loope
mov
insl
in
iret
mov
stos
iret
ss
xor
lock
sbb
adc
adc
cmp
lcall
and
outsl
jg
mov
or
push
and
pop
and
daa
cs
cs
loop
lahf
pop
jb
ret
push
testl
call
sti
fxch
movsl
mov
lods
int3
xor
add
dec
pop
cmp
sub
insb
mov
cli
aas
xlat
lret
es
or
dec
add
adc
loop
arpl
add
lret
mov
data16
xor
mov
xor
or
mov
add
jl
mov
push
movsb
fcompl
jecxz
adc
outsl
lahf
aad
jae
shrb
lds
aad
test
and
pop
out
xchg
cmp
mov
mov
clc
cmp
arpl
mov
pop
mov
dec
jmp
lock
fcoml
stos
mov
sarb
pop
fildll
out
jno
sub
push
sub
jns
mov
push
aaa
icebp
lods
and
dec
inc
scas
mov
jge
sahf
mov
fwait
sub
mov
sbb
adc
push
stos
popl
xchg
adc
pop
out
mov
cs
cs
lret
out
rolb
cmp
stos
mov
mov
sbb
test
jbe
aad
push
int
mov
neg
sahf
iret
pop
sub
pop
movsl
sbb
testb
xor
dec
out
loope
ljmp
lods
jno
push
popa
inc
add
mov
add
dec
push
fistps
das
out
or
cmp
mov
shufps
jg
push
inc
push
jp
out
arpl
xor
jecxz
jns
cmp
add
clc
xor
call
jge
xor
out
pop
xor
ret
xchg
stc
and
xchg
sarb
adc
test
ret
aad
ljmp
in
lahf
sbb
mov
mov
sub
repnz
sub
pop
push
aam
addl
faddl
into
mull
in
xchg
rcll
xchg
nop
pop
dec
leave
push
mov
cmp
mov
pop
addr16
into
aam
hlt
sahf
in
int3
cwtl
mov
inc
sub
or
andb
imul
js
jno
lea
fsubrp
test
mov
dec
or
imul
jl
jb
pop
idivb
iret
dec
insl
jns
test
stos
mov
and
fisubl
ds
ja
and
out
aad
sbb
call
inc
test
push
and
outsb
pop
adc
pushw
xchg
and
ret
out
sub
mov
ret
push
mov
push
out
lea
mov
inc
mov
push
mov
or
sub
push
scas
sub
pop
sahf
outsl
mov
call
push
hlt
not
inc
mov
out
jmp
xchg
loop
inc
push
imull
and
mov
lret
loopne
push
xchg
pop
sbb
mov
and
push
mov
outsl
mov
je
cmc
jno
or
cmp
push
jns
loope
mov
xchg
push
addr16
out
or
out
push
lret
int
mov
xchg
mov
daa
repz
inc
loop
gs
in
mov
jae
jg
mov
pop
push
push
mov
push
sbb
popa
push
push
mov
add
sbb
pop
adc
movsb
sbb
xchg
rolb
xchg
sbb
outsl
sbb
adc
test
cmp
inc
stos
pop
das
insb
mov
jp
and
inc
xor
push
in
jle
pop
das
lea
out
lock
cmpsb
sub
mov
dec
addr16
xor
jecxz
cli
pop
call
out
lcall
fmul
and
int
jno
and
sbb
jb
push
dec
and
mov
pop
sbb
mov
in
repnz
fcoms
sub
cmpb
sbb
loopne
cmp
pop
loope
out
lcall
aam
add
iret
xorl
dec
ja
sbb
inc
clc
ds
pop
data16
out
aad
lahf
loope
and
das
dec
out
or
es
pop
outsl
mov
lea
rolb
test
scas
int
inc
cmp
mov
inc
lds
sub
cs
mov
mul
into
add
mov
cmp
mov
pop
daa
lods
adcb
movsl
incl
or
gs
pop
mov
add
fimull
and
cli
std
cld
out
sub
cmp
fwait
dec
and
mov
sub
or
gs
mov
and
xchg
cli
sbb
cltd
movsl
jns
adc
cmp
dec
sti
iret
sub
jbe
leave
sbbb
mov
jmp
ret
adc
addl
lret
xchg
jae
lcall
sub
lcall
xchg
std
xchg
mov
pop
outsl
push
mov
test
xchg
cmp
jecxz
cmp
jnp
fdivrs
cmc
mov
orb
adcb
push
js
imul
cmp
nop
arpl
and
mov
scas
imul
stos
iret
adc
loopne
inc
jl
sti
ljmp
lds
ffree
jl
aas
lock
xchg
loop
xchg
mov
mov
jp
lds
add
orl
sub
pop
pop
adc
mov
fstp
push
clc
arpl
shll
int
fisttpll
xchg
sub
xchg
nop
and
add
adc
leave
adc
jae
sub
pop
sub
std
mov
jmp
arpl
aad
push
xorb
imul
add
pop
pop
mov
lcall
sub
test
mov
cmp
push
lea
aaa
xchg
jg
dec
bound
cltd
sub
ljmp
mov
fstl
aas
aad
out
cmp
enter
test
inc
sbb
jge
inc
addl
outsb
leave
in
cmp
adc
add
aaa
xchg
xchg
lock
icebp
add
dec
push
and
imul
xchg
and
popa
push
push
mov
and
jno
js
daa
dec
jno
out
sahf
push
jns
iret
ret
mov
daa
stos
xor
and
cmp
cmc
sbb
arpl
mov
sbb
sbb
nop
call
pop
adc
adc
mov
repz
or
mov
mov
in
xor
mov
xlat
das
and
jg
dec
jne
addl
rorl
and
xchg
push
and
xchg
stos
sub
aas
mov
sarb
mov
xchg
cmc
mov
inc
mov
scas
mov
mov
jmp
xor
sti
shl
daa
cmp
mov
sub
xchg
cs
or
push
xor
ja
out
jecxz
mov
shrl
test
sbb
sub
pop
sub
xchg
addb
ljmp
int3
ret
fimuls
cmc
dec
imul
iret
inc
push
xchg
lret
or
cmp
mov
add
movsl
mov
xchg
and
jmp
lock
test
loop
mov
xchg
xor
ja
jb
test
and
stos
loopne
pop
aas
repnz
in
push
fidivrs
inc
lea
minps
shl
adc
data16
lret
adc
sub
jne
popf
cmpsb
inc
dec
mov
sub
lods
loopne
mov
aad
sbb
push
mov
xchg
mov
scas
in
inc
inc
lahf
out
leave
inc
fstl
aaa
xlat
fidivrs
inc
testl
pop
inc
imul
es
cld
das
and
and
daa
xchg
jle
mov
gs
push
aad
fsubs
push
rol
xchg
fucomp
xchg
mov
lods
pop
setbe
and
aam
mov
cmpsb
testl
cs
test
fsubl
jbe
add
daa
andb
sti
dec
sub
pusha
push
cmp
mov
cltd
jne
ja
push
femms
jmp
cmp
in
lahf
add
cltd
xchg
or
sbb
lock
or
adc
sub
jne
mov
ret
mov
shrl
imul
insb
jnp
push
addl
jmp
ret
sub
mov
dec
dec
mov
cmpsb
adc
insl
pushf
mov
sbb
jecxz
push
or
sbb
inc
sbbl
es
pop
xor
repz
and
lea
roll
sub
xor
dec
push
stc
push
fwait
sub
lret
sbb
aas
ss
push
inc
sbb
mov
push
sahf
lahf
lret
jnp
mov
aaa
push
scas
js
push
clc
movsl
dec
je
scas
insb
addl
mov
in
or
mov
ss
xor
cmp
mov
lret
sbbb
jo
xchg
dec
mov
adc
add
jmp
inc
inc
mov
push
mov
shll
fs
pop
cmp
and
ffree
add
jmp
movsb
adc
pop
out
es
es
movl
pop
push
fs
pop
cli
xor
cmp
jge
add
add
pop
mov
lods
les
stos
or
and
cwtl
out
fcmovb
out
sub
cs
xchg
mov
pop
xchg
fistps
xor
adc
repz
shlb
dec
dec
cld
pop
xor
xor
pop
icebp
cmpsl
sbb
fucomi
or
aad
xlat
aas
adcl
mov
mov
hlt
outsl
pop
mov
mov
mov
shl
mov
jmp
sub
sub
xor
arpl
adc
mov
inc
or
sub
pop
dec
mov
insb
xor
and
sbb
stos
mov
mov
scas
lea
jl
and
push
arpl
inc
xor
flds
pop
lahf
sub
into
lret
sub
rep
lret
scas
jmp
repz
or
sbb
mov
xchg
out
jne
mov
sbb
aam
cmp
out
dec
mov
mov
mov
cmp
and
int3
cli
xlat
adc
mov
sub
dec
es
dec
adcl
out
cmp
and
mov
loope,pn
mov
pop
sbb
mov
adc
ljmp
pop
inc
xor
fldt
scas
fiadds
loope
pop
sti
iret
push
out
imul
pop
sub
mov
or
jnp
pop
cmp
mov
scas
fbld
mov
and
adc
mov
xchg
fidivs
stos
add
mov
data16
hlt
xchg
sub
in
jmp
xchg
mov
mov
sub
insb
gs
sub
out
push
add
fimuls
mov
push
and
adc
inc
xor
ljmp
popa
test
decb
sti
xor
cwtl
lods
mov
shll
leave
aaa
or
pushf
lcall
test
push
add
dec
sbb
ds
mov
jge
lahf
and
and
movsb
mov
or
jns
movups
inc
fildl
mov
push
arpl
es
popf
cmp
orl
int
jbe
icebp
outsl
lock
dec
xchg
pop
cmpsl
xor
pop
add
push
arpl
cld
stos
mov
mov
pop
mov
mov
xchg
cmpsl
daa
mov
mov
inc
push
add
outsl
repz
pop
mov
and
ljmp
cli
pushf
lods
mov
fwait
imul
ljmp
xchg
sbb
mov
inc
inc
test
cmp
inc
testl
or
fwait
sub
subl
sbb
movsl
divl
dec
mov
jp
xor
ret
jmp
and
sbb
test
or
cs
nop
aad
test
repnz
jg
out
sbb
into
lahf
xchg
and
inc
clc
sub
mov
iret
xchg
jp
ds
or
leave
shll
inc
dec
ds
mov
jle
cmp
or
adc
pop
testb
sub
rcrl
xor
add
arpl
mov
subl
cmpb
rsqrtps
xchg
mov
stc
popl
push
sbb
outsb
add
inc
sbb
pusha
mov
out
sbb
pusha
addr16
jno
stc
insb
jg
cmp
jmp
in
insl
xchg
pop
dec
pusha
lcall
psubb
test
insb
rclb
lret
into
aad
mov
push
mov
insl
mov
out
les
fcomps
xlat
daa
cmc
out
jne
adc
ljmp
ret
jns
es
rorl
lahf
push
pop
lods
jmp
mov
jecxz
dec
inc
jb
cs
sbb
mov
xchg
sub
lret
daa
repnz
insl
js
pushf
stc
mov
out
into
lahf
insb
outsb
mulb
jno
jmp
pop
push
adc
dec
xor
imul
packssdw
lock
test
push
sbb
sbb
inc
mov
es
add
fldl
sahf
das
test
xor
or
dec
push
bound
mov
xor
jbe
mov
shrb
loope
push
movsl
ret
out
mov
inc
test
repz
cs
stos
push
pop
xchg
repz
push
sbb
add
mov
insb
aad
in
and
adc
test
pop
and
iret
cmp
pop
stos
fwait
cmpsb
dec
pmaxsw
xchg
adc
mov
outsl
dec
aad
imul
flds
push
jp
mov
pop
xchg
fdivs
mov
pop
mov
out
sub
xor
mov
cmp
inc
enter
fst
mov
cmp
fnstcw
aaa
sbbb
mov
dec
push
andb
sbb
out
mov
push
out
imull
mov
scas
addl
add
lcall
leave
and
dec
mov
push
pop
clc
xchg
pop
decl
dec
sub
sub
lea
and
jmp
icebp
or
adc
xor
sahf
mov
dec
lods
out
ljmp
sbb
outsb
jmp
pop
mov
rol
cmp
lret
mov
call
add
adc
test
pop
sub
mov
jnp
inc
fsts
scas
movsb
pushf
inc
repnz
xchg
pop
aad
dec
imul
mov
iret
icebp
out
inc
push
into
push
sarl
pop
gs
test
aaa
addr16
push
inc
pop
mov
jnp
ret
mov
movsl
test
adc
fcoms
fmull
loopnew
leave
adc
xchg
or
push
push
xor
mov
cmc
pushf
xchg
pop
xor
pop
inc
out
inc
mov
out
incb
lds
sub
aaa
add
pop
pop
hlt
and
adc
fistpll
pop
mov
push
stos
add
pop
aam
mov
pushf
out
pop
and
fdecstp
sub
mov
cmp
mov
xchg
pop
push
dec
jle
mov
es
scas
call
push
mov
mov
bound
push
pop
inc
mov
cmc
adcb
cmc
pop
jp
cmpb
lret
mull
mov
movsb
rorl
lahf
andl
mov
sbb
je
repnz
int3
and
fnstsw
xor
mov
ret
push
jae
sub
jae
mov
aam
push
scas
sub
mov
mov
adc
and
push
mov
hlt
mull
in
lahf
pop
sub
push
jle
and
arpl
add
bound
ret
mov
fildll
xchg
mov
pop
stos
and
pop
imul
fdivrl
data16
or
aam
sbb
sub
inc
mov
roll
mov
push
pushf
xchg
and
mov
aas
aam
or
mov
jg
jne
mov
add
iret
push
push
stos
push
xor
xor
inc
jns
lock
mov
mov
fbstp
add
movsl
xchg
xlat
aam
sbb
dec
out
in
pop
sbb
push
mov
addr16
in
lahf
jne
and
repnz
xor
and
daa
jno
popl
jmp
dec
xchg
and
je
clc
sbb
or
xor
dec
pushf
lea
out
popa
lods
repnz
pop
cltd
lret
adc
add
fidivrl
sub
cmpsb
je
push
bound
pop
loopne
or
jb
fcmovnbe
sub
ds
push
jle
divl
ss
xor
xchg
xchg
mov
inc
out
outsl
ret
mov
cmp
aam
push
pop
sub
popa
mov
inc
mov
xor
fstps
mov
sarb
insl
repnz
cmp
cmp
and
adc
sbb
sahf
out
cmpl
xchg
rcrb
stc
scas
mov
sub
ret
xlat
xor
adc
mov
scas
and
bnd
sub
test
xchg
jne
and
hlt
mov
mov
mov
cmpsl
sub
sbb
inc
andb
pop
mov
out
sub
xor
mov
mov
lret
and
loopne
and
mulb
adc
push
mov
mov
or
xchg
sub
pop
fwait
ret
decb
movsb
cmp
stos
testl
sbb
in
pop
and
xchg
dec
daa
mov
sub
inc
sarl
xor
stos
push
pop
pop
insl
decb
mov
ror
sbbl
xor
xor
es
sub
aaa
sub
dec
iret
in
jbe
mov
inc
lds
fbstp
or
adc
and
cmpsl
in
push
dec
addr16
push
inc
fsts
inc
sahf
jg
fucomip
inc
scas
fisubrl
ffree
add
stc
bswap
xor
mov
push
loopne
sub
loope
out
xchg
idivl
xor
std
ljmp
mov
iret
ljmp
cmpsl
adc
push
cmpsl
fisttpll
scas
rolb
fstl
das
add
cmpsl
or
xchg
mov
push
cmp
xchg
push
dec
mov
cmc
and
out
imul
loopne
cs
push
dec
xchg
inc
ret
xchg
adc
enter
lods
fwait
xlat
pop
cmp
or
sub
and
int
push
mull
mov
sub
inc
inc
rclb
lods
cmp
sub
jge
jnp
adc
jns
cmp
daa
int
jbe
notb
int3
lahf
mov
inc
xor
mov
outsb
mov
insl
lods
push
sub
ret
pop
xchg
dec
lret
sub
xchg
ficoml
or
pop
jp
cmpsl
jae
lret
xchg
ret
and
cmp
jmp
sub
scas
hlt
daa
add
cmp
aam
push
xlat
sub
xchg
xor
mov
aas
adc
loopne
hlt
addr16
ret
ret
push
pushf
push
out
outsb
jp
stos
cs
aam
mov
std
xlat
mov
push
out
or
adc
daa
jmp
mov
xchg
push
or
mov
inc
dec
daa
fisttpl
dec
and
ret
addr16
xchg
incl
push
push
mov
cmp
mov
mov
jne
notb
daa
pushf
cs
cs
ret
arpl
and
cmpsb
movl
or
andl
out
pusha
ret
push
aaa
jg
je
and
bnd
or
or
fildll
cmp
inc
mov
test
and
xlat
lahf
mov
out
xchg
add
add
adc
cmpsl
mov
imul
pop
pop
ds
mov
das
mov
mov
mov
imul
call
mov
fs
xchg
outsb
loopne
std
lret
mov
icebp
inc
clc
xchg
push
outsb
and
push
aad
call
xchg
outsl
push
and
xchg
es
xchg
mov
fdivp
or
mov
fwait
scas
xlat
jb
dec
es
ret
adc
insl
insb
mov
decb
aam
xlat
jp
xchg
add
daa
rep
mov
mov
mov
xor
ja
inc
in
xor
inc
pop
lea
inc
addl
sub
cmp
inc
dec
mov
or
bound
mov
and
sub
mov
xor
push
and
jae
mov
ret
nop
pop
das
push
push
stos
nop
fsubs
sub
mov
testl
xlat
xor
xor
push
dec
int
dec
nop
aaa
push
dec
orb
negb
aaa
scas
andl
je
ds
iret
and
pop
and
sbb
mov
cmpsl
push
dec
sub
rcl
js
and
cmp
mov
sbb
out
gs
push
xchg
gs
mov
and
out
lock
dec
pop
sub
mov
outsb
gs
std
and
cmp
inc
pusha
sub
xor
divb
dec
shll
imul
sub
mov
aaa
jg
leave
dec
jge
adc
popf
add
lock
dec
adc
sti
mov
orl
sar
stos
jbe
push
mov
xor
push
xchg
int
icebp
cmp
sbb
cmp
pop
fsts
cwtl
inc
lahf
es
sbb
mov
ffree
js
cltd
ret
ret
enter
add
cmp
push
pop
and
and
xchg
sbb
pop
xor
and
xlat
fwait
ds
cmp
sbb
ret
lcall
xchg
icebp
std
std
pop
fists
popf
idivb
pop
aaa
std
cmpsb
fists
add
pop
pop
aaa
dec
invlpg
sub
jns
test
or
jecxz
stos
lock
daa
jne
mov
push
clc
je
mov
out
out
repz
xor
daa
xchg
mov
mov
lahf
pop
jb
div
out
inc
fidivrs
fs
or
js
jmp
adc
pop
les
sti
das
adcb
or
outsl
xchg
adc
mov
jmp
push
sub
xchg
imul
test
out
and
out
adc
lcall
ja
rcrb
shll
or
insb
push
test
scas
jmp
mov
call
xchg
cmp
addr16
fldl
push
cmp
cmc
fcomps
outsl
leave
imul
cmp
add
jne
add
out
or
mov
dec
pop
jb
cmpsb
mov
cld
mov
push
jle
cmp
icebp
sti
cli
paddw
pop
lret
outsb
fwait
jne
insb
xor
mov
push
repnz
pop
push
sub
addr16
clc
rcrl
call
jae
test
dec
xchg
insl
xchg
data16
sbb
insb
pop
xchg
hlt
bound
lods
add
adc
fildl
xor
sub
sbb
add
lods
sbb
add
inc
jp
fwait
std
psubq
xchg
outsl
dec
shrl
bound
fildl
xlat
and
sub
fnsave
mov
or
push
sub
push
repz
pop
lcall
outsl
dec
pop
test
cmp
repnz
imul
into
andb
push
mov
add
mov
sysexit
movsb
xor
push
mov
and
and
shrl
loopne
push
test
sub
inc
pop
dec
or
fistpll
mov
sub
dec
xchg
push
cmp
leave
jle
push
add
sub
out
mov
jmp
test
xchg
popa
xchg
mov
xor
fistl
xor
repnz
outsb
ret
cli
xchg
mov
scas
cmpsb
sti
int3
fst
push
es
jo
lret
sbb
xor
push
lret
in
push
dec
lret
cli
add
loop
scas
int
pop
sahf
cmp
mov
cmp
push
ja
inc
or
cmp
daa
push
subl
test
lret
pop
mov
cmp
mov
imul
in
leave
adc
or
and
jp
test
mov
dec
cmpsb
jb
loope
popf
aad
inc
mov
mov
jns
into
mov
icebp
adc
cmp
pop
sub
sarl
pop
mov
push
std
dec
in
mov
mov
inc
jmp
xor
hlt
and
outsl
pop
shr
xorb
inc
cmp
mov
mov
into
sub
cs
sbb
adc
inc
in
dec
es
lret
stos
pop
dec
lods
bound
ja
es
das
rcr
sub
int
das
mov
fnstcw
loope
add
and
lock
fsubr
repnz
cwtl
push
ds
inc
and
inc
stc
negl
out
stos
xchg
push
xor
push
pop
hlt
mov
inc
mov
in
xor
fisttps
es
dec
push
add
pop
jno
cmp
mov
and
xchg
mov
bound
lods
dec
push
pop
test
or
mov
enter
fincstp
lret
xchg
and
mov
sbb
pusha
push
mov
cmp
push
daa
shll
dec
mov
xor
mov
dec
pop
jge
xchg
shl
dec
jge
bound
std
ljmp
xchg
lea
jnp
pop
lods
mov
adc
outsl
pop
stc
sbbl
jmp
mov
jp
shl
inc
xchg
out
imul
adc
sub
enter
xor
sbb
jecxz
inc
mov
sub
insl
shlb
push
mov
mov
stc
push
shll
adc
cmc
add
add
lret
add
dec
repz
push
scas
mov
mov
fiaddl
push
inc
or
mov
lret
shlb
jns
addr16
jmp
mov
movsb
ds
decl
das
add
inc
jl
cmc
or
sbb
or
insl
sub
mov
inc
inc
or
andl
into
sub
pop
ret
dec
ljmp
and
lahf
ss
dec
fldl
in
scas
xchg
push
cmp
lcall
jg
dec
xor
dec
mov
and
aaa
xchg
mov
push
add
out
sbb
outsl
push
push
lahf
pop
push
mov
push
jg
mov
das
jge
xchg
xor
gs
sbb
mov
sti
push
je
ljmp
insl
sbb
cmp
adc
adc
data16
inc
dec
sbb
jge
sub
aam
push
ss
nop
rcll
adc
lea
stos
pusha
mov
mov
mov
dec
fisubs
pop
scas
imul
lods
mov
incl
xchg
pusha
scas
int3
repz
pop
mov
sub
icebp
or
add
decb
xchg
lahf
mov
hlt
inc
data16
adc
push
stos
xchg
jge
push
mov
insb
mov
mov
scas
or
insb
pop
push
push
pop
inc
mov
aad
jno
mov
sub
sbb
push
iret
andb
mov
lods
aam
and
je
out
mov
in
mov
or
pop
push
pop
adc
adc
les
stos
adc
repz
lret
rcll
mov
outsb
sbbl
mov
xor
cs
pusha
jecxz
mov
out
mov
pop
pop
aad
rclb
jne
cwtl
push
mov
adc
ret
sahf
mov
add
je
cmp
out
cmp
mov
push
add
std
ljmp
and
inc
cmpsl
or
aas
das
mov
sub
mov
xor
cwtl
cld
dec
push
pop
sbbl
test
test
ror
imulb
mov
jne
imul
push
cmp
pop
decl
jns
add
loope
sbb
push
pop
xchg
das
inc
cmp
aas
sub
mov
cmc
sbb
int3
jae
lret
push
sub
sti
ss
addb
cwtl
or
mov
pop
fsubrs
add
cli
mov
inc
sub
addr16
cwtl
lock
les
in
test
movsb
fldl
mov
insl
mov
sbb
mov
mull
test
mov
jb
insb
imul
xor
stos
scas
xor
mov
cmc
fcomps
cmp
jb
sbb
test
inc
add
leave
dec
je
mov
mov
or
cld
test
insl
pop
cmpsb
stos
icebp
loopne
adc
xor
clc
subb
mov
mov
xchg
rol
adc
lcall
dec
fmul
in
xchg
cmpsl
test
das
rorb
cmpl
fs
mov
inc
out
mov
add
sbb
lea
loop
xchg
rcll
jle
mov
roll
cmp
and
lcall
pop
out
loope
adc
scas
pop
arpl
adc
push
leave
sub
sbb
mov
mov
fprem
add
pop
cpuid
mov
or
das
mov
popa
cmpb
push
outsl
jl
fmuls
fisubs
cmpsb
jns
jns
int
xorb
sbb
cmp
dec
fs
mov
out
xor
mov
rol
inc
ds
xchg
jmp
jns
sub
sbb
ss
aas
and
lret
repz
ljmp
and
orb
pop
test
mov
shr
mov
shr
cltd
push
mov
mov
jb
xor
sub
sub
call
or
mov
leave
ret
out
sti
std
and
adc
jo
stos
and
ds
sbbb
icebp
sti
outsl
xchg
adc
cmp
sbb
je
mov
mov
push
in
mov
ljmp
ret
cmp
inc
xor
jns
jbe
and
shrl
or
scas
hlt
xor
cs
lods
push
and
push
rorl
jo
das
js
dec
divl
add
push
sti
loope
sub
adc
nop
and
cli
xor
cmpl
push
repnz
icebp
das
stos
int
pslld
pop
in
movsb
xchg
icebp
mov
add
cmp
add
push
xor
lret
cmpsb
cmp
xor
pop
push
mov
outsl
xor
adc
rorb
dec
stos
orl
pop
sbb
sbb
insl
mov
jp
pop
push
push
sub
int3
sti
push
je
repnz
hlt
or
add
jmp
lock
mov
pop
pop
arpl
cltd
xor
js
mov
mov
cwtl
add
sub
xlat
jmp
arpl
icebp
aas
inc
mov
aam
jb
outsb
cwtl
mov
cwtl
lock
push
sbb
dec
inc
cmp
jo
fnsave
mov
jmp
out
decl
pop
fwait
sbb
rclb
jle
jmp
ror
xchg
ds
out
add
adc
mov
pop
adc
or
lret
int3
mov
imul
bound
lret
xchg
lcall
sub
sub
sub
fbld
or
and
push
sub
inc
push
xor
fwait
push
cmp
adc
rcrb
jae
out
test
push
inc
stos
mov
lods
xchg
jno
into
jg
mov
imul
inc
jo
xor
jmp
mov
pop
movsl
in
movsl
adc
pop
lahf
jno
sub
pop
scas
call
fwait
addr16
mov
xchg
ljmp
mov
ja
jns
xchg
xchg
out
popa
sub
add
lock
scas
push
in
lods
pop
stos
sub
fistpll
adc
mov
dec
rcrb
jl
or
inc
lock
int
cmp
push
test
into
leave
xor
gs
cmp
fisttpll
cmp
stos
jns
pop
pop
xor
mov
sahf
sahf
mov
aam
aaa
dec
sub
pop
mov
rcll
mov
cmp
sbb
jmp
jns
fldl
into
push
mov
dec
leave
mov
lcall
popa
push
dec
and
sahf
ds
mov
sbb
fistpll
sub
xor
arpl
jo
out
add
or
movsb
xchg
push
or
leave
in
cli
xchg
pop
ja
mov
in
mov
addl
xlat
cmp
xor
stos
inc
cmpsl
rcl
hlt
imul
out
test
inc
push
mov
mov
sub
dec
or
mov
repnz
mov
repnz
repnz
das
leave
cmp
inc
sub
stos
shlb
lret
push
mov
push
bound
mulb
ja
inc
inc
lods
pop
iret
or
loopne
int3
jge
inc
divl
push
sahf
movsb
mov
push
sub
shll
setne
ds
mov
popa
push
pop
dec
sub
mov
pop
push
aas
and
out
mov
and
outsb
or
fnsave
jecxz
mov
cmpsb
xor
push
out
repz
xor
push
dec
and
inc
xor
jne
add
sub
lods
jnp
test
repz
or
loope
push
je
aas
inc
in
cmpsb
sbb
xchg
push
or
aam
adc
sub
arpl
jle
xchg
sbb
dec
mov
fadds
xchg
dec
faddl
aaa
int3
dec
fmull
loope
inc
mov
dec
imul
addr16
stos
add
aad
xchg
xchg
imul
andb
push
sub
in
hlt
out
repz
inc
mov
fiadds
push
pop
mov
mov
dec
push
inc
out
inc
cmp
xchg
push
push
xor
inc
test
in
je
xchg
sti
mov
mov
mov
mov
add
sub
pushf
jbe
pop
and
sarl
out
jns
dec
sbb
push
jge
in
inc
negl
pop
xchg
dec
mov
inc
dec
xchg
push
cmp
sbb
or
sub
push
je
adc
sbb
cmp
push
es
mov
repnz
subl
dec
das
pop
and
arpl
xor
and
test
cmp
xchg
mov
orb
sbb
sbb
jb
sahf
pop
pop
or
jp
or
in
and
test
push
jnp
fimuls
aaa
fsubl
loopne
scas
int
add
fistps
ficomps
test
nop
jne
pop
push
aas
out
pop
dec
in
fisubs
sub
inc
push
lcall
scas
xchg
clc
dec
into
clc
idivl
pop
add
xor
lea
mov
pop
mov
arpl
xor
dec
ds
fdivr
add
pop
repnz
mov
into
xchg
loopne
mov
cmp
rorb
xchg
jno
xor
mov
sub
mov
inc
mov
xor
lret
data16
repnz
ljmp
and
push
cmpsl
js
popa
inc
js
cmp
out
sub
out
sub
jne
mov
in
cmpl
mov
push
cmpsl
fwait
and
push
nop
jge
movsl
clc
xor
aad
fsubp
xor
dec
ss
popa
add
inc
add
arpl
or
in
clc
xor
jo
mov
sub
shl
sub
dec
in
dec
add
adc
addr16
imul
and
jg
push
fwait
lret
popf
sbb
aas
xchg
repz
aam
xchg
shlb
bnd
stos
je
push
mov
bound
ljmp
inc
push
outsl
push
dec
adc
cmc
jo
pop
enter
loop
popf
pop
bound
loop
pop
mov
pop
pop
jp
out
jbe
or
xor
xchg
mov
aas
pop
outsl
ja
adc
inc
leave
xlat
idivl
test
mov
iret
jnp
pop
mov
sub
cwtl
addr16
cltd
sbb
out
out
into
pop
pop
push
sbb
add
loope
xchg
insb
cmp
out
pushf
pop
sahf
sbb
push
xor
out
iret
xor
aas
jl
and
stos
jle
inc
pop
movlps
xchg
sub
jne
dec
push
sub
dec
jge
jns
sti
ljmp
shrb
push
loop
add
pusha
out
sbb
ficoml
movsb
popa
mov
lahf
gs
and
xor
cs
lock
xchg
push
jmp
imul
hlt
js
push
das
popl
pop
sahf
lret
jmp
movsb
test
scas
jbe
sbbb
mov
into
ja
daa
inc
or
mov
sbb
fidivs
push
cmp
mov
scas
mov
mov
mov
das
xor
fsubs
cs
cltd
mov
push
push
test
jbe
ss
push
cmp
add
icebp
lcall
test
mov
lods
xchg
sbbb
mov
loop
sbb
loop
xor
cmp
bound
ret
push
shll
test
pop
dec
lods
ss
and
sbb
lahf
test
cmc
aas
and
xlat
lock
pusha
pop
ja
mov
xchg
mov
sub
gs
mov
cmp
push
insb
mov
sbb
cs
aad
and
leave
inc
out
lret
inc
jb
sub
mov
xor
inc
push
cltd
cmpsl
ret
lahf
add
shl
or
rcrl
fsubs
add
mov
dec
add
aad
push
mov
adc
dec
jae
cli
iret
fcomip
in
iret
xor
addb
popa
and
out
test
push
pop
cmp
out
xchg
outsl
std
inc
pop
pop
push
adc
sbb
or
sbb
push
lods
mov
pmulhw
fnstenv
add
cmc
in
and
dec
push
jbe
movsl
pop
je
dec
shlb
lods
pop
cmp
je
dec
pop
and
stc
pushf
repz
out
pop
jb
aam
popf
fs
sub
cwtl
inc
cmpsb
push
pushf
mov
incb
or
and
sbb
popa
and
leave
pop
bound
jmp
or
xor
dec
mov
mov
es
das
push
out
push
shrb
enter
repz
push
xor
dec
jle
xchg
xlat
mov
cmc
out
xchg
gs
and
shl
lock
popa
aam
sub
xlat
pop
push
test
popa
xchg
xchg
pop
stc
dec
clc
push
icebp
scas
mov
sarb
push
sbb
push
mov
lds
lret
dec
push
dec
cmp
jle
push
jl
lahf
sub
add
mov
or
jbe
out
push
in
mov
mov
div
popa
hlt
fwait
arpl
data16
enter
loop
std
arpl
shll
dec
lahf
adc
std
adc
les
jg
xor
test
jbe
scas
aas
pop
mov
jg
pop
out
pop
push
stos
or
ja
cmc
mov
rol
push
mov
sbb
pop
xor
stos
outsb
out
movsb
in
mov
inc
leave
xorb
cmpsb
mov
inc
test
adc
mov
xor
jp
mov
rcll
mov
outsb
jne
jp
cmc
stc
jp
dec
je
inc
mov
stos
scas
fisubrl
dec
jge
mov
push
mov
pop
mov
sub
mov
pop
mov
pop
pop
mull
mov
pop
cmp
movsb
cmp
adc
push
jg
outsb
sbb
cmp
xor
mov
xor
xlat
jmp
cmc
mov
jae
jmp
sub
aad
in
jmp
mov
jp
xor
push
add
cmp
icebp
inc
push
adc
cmc
movsl
mov
push
mov
xchg
in
cld
imul
shll
pop
xor
xchg
loope
mov
mov
mov
push
pop
popa
adc
pop
cwtl
rcrl
sbb
lds
inc
lcall
sbb
push
leave
cmpsb
adc
ss
rolb
dec
and
add
sub
adc
lahf
inc
add
int3
fdivrs
stos
call
popf
cwtl
jg
add
xchg
frstor
push
pop
rsm
jae
inc
in
xor
test
cmpsl
xchg
adc
adc
adc
cld
jae
ljmp
ret
leave
inc
lods
or
mov
and
xchg
jge
push
push
mov
mov
lahf
pop
imul
ljmp
xor
outsl
pop
dec
shlb
mov
aaa
cmp
andl
xor
mov
mov
fcmovnu
add
push
sub
addr16
mov
mov
xchg
inc
lret
adc
mov
push
add
fsts
int3
dec
xor
mov
push
fbld
push
pop
test
addr16
mov
insl
mov
popf
adc
jg
adc
dec
mov
pop
in
add
adc
insl
jbe
jno
inc
mov
fmul
imul
cmpsl
rcll
insl
mov
and
stc
mov
icebp
mov
sub
sbb
mov
and
push
jno
pop
mov
loope
loop
out
fnsave
das
jae
mov
aaa
fiadds
and
arpl
mov
ja
pop
fimuls
into
fcmovb
mov
ret
mov
das
pop
data16
push
or
cmpps
mov
dec
mov
pushf
je
mov
nop
ret
repz
xchg
ljmp
cmpsl
std
push
std
push
test
push
pop
sbb
lret
xchg
ds
push
insb
pop
cmp
into
dec
xchg
jg
pop
pop
xchg
popa
xor
sub
stos
mov
lret
shl
es
outsb
mov
scas
jmp
jo
inc
and
jge
jbe
mov
aas
scas
or
adc
ret
jmp
push
dec
outsl
test
jns
stos
gs
mov
in
and
jmp
cli
jae
jne
cmp
and
jb
mov
in
hlt
lcall
cmp
adc
cltd
mov
mov
outsl
lret
inc
das
adc
inc
adc
mov
cmpsb
inc
cmpl
fucomip
cmp
inc
inc
sbb
sub
pusha
imul
inc
lret
sub
aad
push
ret
mov
cmpsl
cltd
fisubrl
cmp
mov
adc
mov
shll
lret
in
mov
dec
mov
test
cmpsb
jmp
or
inc
sub
inc
inc
movsl
push
inc
roll
insb
pop
roll
push
jne
iret
xchg
cmp
cmpsb
data16
xchg
scas
mov
add
jmp
push
mov
jo
xchg
repnz
pop
push
jbe
fwait
jmp
cmp
lea
stc
scas
sub
sbb
dec
je
into
lock
jge
cmc
cmpsb
or
mov
repnz
add
andl
fsubrp
push
fcoml
fdiv
adc
adc
mov
jne
inc
or
add
sub
sub
inc
adc
hlt
ret
inc
in
pop
cmp
out
add
inc
sub
lret
filds
pop
cmp
mov
shrb
jge
lock
movsb
or
cwtl
in
pop
jl
repnz
in
adc
lcall
enter
dec
inc
loopne
lahf
adc
scas
lds
mov
push
ja
sub
dec
jmp
imul
idivl
enter
mov
ficoml
and
xor
scas
push
cwtl
shl
dec
fisubrl
inc
out
aas
pop
lcall
jo
stos
jne
cmc
dec
or
xor
lret
and
sub
inc
outsb
jmp
xlat
cmp
pop
inc
aad
inc
movsl
jae
sub
shll
inc
adc
mov
xor
sub
jae
repz
adc
scas
icebp
jae
adc
out
ds
sbb
mov
and
cmpsb
and
test
sub
mov
mov
repz
sbb
fcmovb
inc
and
pusha
xchg
pop
orb
rorl
sub
lods
jns
test
jle
mov
fildll
sti
sbb
imull
inc
inc
mov
int3
dec
mov
mov
lret
mov
mov
push
aas
gs
jb
mov
cmp
out
mov
addl
test
adcl
push
orb
push
inc
into
lds
ret
jae
sub
add
mov
mov
call
adc
in
int
push
fisttps
jmp
addr16
cmp
repz
aas
lret
imul
push
mov
xor
dec
and
jnp
into
inc
repz
jp
cmpsl
ja
jp
mov
gs
cltd
test
add
stos
loopne
and
xchg
sar
mov
cmpsl
inc
cmp
xor
push
adc
dec
fcmovb
sbb
repnz
imul
adcb
rorb
xorb
inc
daa
sbb
mov
outsb
xchg
pop
and
mov
das
inc
idivl
pusha
gs
pop
xchg
lahf
or
clc
into
mov
adc
and
fwait
sub
daa
push
push
jno
mov
or
mov
xor
jmp
and
andl
ds
lcall
push
push
scas
sbb
pushf
xchg
shl
mov
add
lock
fcoms
jg
fsubl
mov
mov
imul
mov
mov
pusha
gs
add
dec
push
jp
add
fcomps
ds
pushf
leave
inc
enter
dec
jle
sbb
xor
outsb
sti
jmp
dec
ljmp
lea
fcompl
adc
cmp
fcomip
mov
or
das
loop
sbb
aad
mov
jns
lea
sub
cli
lret
call
cmpsb
pop
dec
pop
in
mov
loope
adcb
pop
daa
pop
cld
rcrb
xchg
inc
inc
lahf
xchg
add
lret
into
mov
mov
movsl
jmp
sub
fcos
fmull
stos
es
arpl
ljmp
xor
arpl
orb
repz
sbb
scas
mov
cmc
push
decb
repz
mov
enter
pusha
loop
in
adc
xchg
stos
mov
or
cmpsl
gs
fdivl
adcb
jp
dec
jae
and
dec
push
jp
xor
jbe
mov
icebp
sub
jmp
movsl
mov
mov
xchg
iret
add
mov
mov
and
stc
pop
xchg
fsubrs
mov
xor
pop
lea
std
xor
scas
or
outsb
lock
xchg
or
outsl
push
lock
mov
push
test
lods
pop
out
xchg
pop
test
inc
lock
mov
push
test
mov
jbe
adc
std
prefetchnta
stos
js
fistl
mov
je
pop
loopne
ret
pop
test
and
rol
mul
out
push
inc
sbb
in
adc
ss
fisubl
mov
jbe
dec
dec
subb
test
fcmovbe
scas
lret
dec
cmp
add
ffree
stos
lea
clc
add
mov
test
or
sbb
xlat
imul
xchg
je
jmp
je
jg
ds
test
outsl
daa
add
pop
cs
hlt
sbb
rcrb
mov
xchg
push
inc
into
mov
cmp
inc
add
pop
adc
mov
push
jo
mov
mov
in
movsb
aaa
pop
gs
sub
lret
pop
das
ret
mov
mov
movsb
ret
fnstsw
das
sbb
dec
mov
cmp
mov
mov
fsubs
daa
mov
repnz
hlt
out
adc
repnz
test
cmpsl
pop
and
mov
adc
pop
inc
int3
push
push
and
ljmp
cmc
int3
push
test
aam
fs
dec
pushf
cli
push
imul
outsb
cmpsb
out
sbb
jb
xor
pop
and
cmp
xor
push
fsubrl
adc
cmp
dec
mov
mov
mov
mov
cli
loop
mov
mov
xchg
push
popf
xchg
mov
popa
sub
push
mov
movsb
pop
cwtl
xchg
lcall
fmul
mov
adc
fcoms
adc
sbb
mov
xor
in
dec
push
in
mov
test
sub
std
adc
push
andl
mov
lds
sbb
fwait
and
mov
negb
jmp
stc
push
mov
fdivl
xorl
jecxz
aaa
stos
imul
inc
test
add
ficoms
into
or
fisubl
popf
add
add
push
ljmp
cld
imul
arpl
aas
std
je
and
or
fstps
pop
dec
push
mov
mov
mov
inc
pop
in
mov
rsqrtps
and
xorl
or
dec
mov
dec
mov
sub
adc
sbb
leave
add
xor
adc
ds
out
fstpt
lretw
orl
push
in
fsubs
mov
jno
dec
lret
adc
cs
daa
dec
sub
test
and
add
or
iret
flds
inc
xor
repz
imul
inc
aad
imul
xchg
cmpsl
out
mov
xor
xor
jl
shr
sub
inc
dec
or
mov
stos
mov
push
movsb
dec
data16
in
outsl
jmp
inc
je
dec
pop
cmpsb
push
cmp
inc
mov
mov
push
aam
ret
je
sbb
cmpsl
lods
cwtl
or
xchg
fisubl
sub
mov
jle
jo
clc
pop
add
lahf
and
pushf
push
gs
mov
aaa
xchg
xchg
imul
cmpb
ljmp
pop
pop
out
push
pop
roll
aad
pop
fists
fwait
adc
gs
jp
cs
push
xor
ficompl
push
sub
jo
xchg
cmp
pop
mov
fmul
xor
iret
cld
adc
add
faddl
adc
mov
mov
popa
or
aad
jbe
in
cmp
out
fwait
push
testb
fsts
lea
sub
insb
jge
jecxz
and
into
and
mov
out
sbbb
lcall
sub
fidivrl
aaa
push
aas
jg
jmp
push
insb
in
lret
out
test
nop
xor
inc
inc
mov
ret
jno
aaa
sbb
rorb
lds
out
shr
jb
sub
jb
repnz
cmc
lea
cmp
mov
sbb
out
insb
xchg
inc
jl
lret
jl
pop
rol
mov
scas
xchg
loope
fimuls
inc
sbb
sbb
jecxz
push
movsl
icebp
jle
mov
pop
bound
fwait
adc
gs
sub
sahf
add
and
cmp
jge
mov
stos
sbb
idiv
test
iret
jle
push
mov
sub
mov
out
pop
and
test
and
shll
push
pop
test
jae
or
mov
add
push
leave
mov
push
add
mull
xchg
fistpl
fidivrs
xchg
xor
add
aam
stos
add
je
jl
xor
push
xchg
add
pop
dec
cmc
dec
pop
add
mov
aas
mov
iret
xchg
push
sbb
roll
enter
incl
loope
add
sbb
cmpsb
sub
loopne,pt
movsb
lods
and
or
out
cld
mov
xchg
xchg
leave
sahf
adc
es
insb
push
test
xor
xchg
dec
dec
divl
aad
cltd
ds
inc
jg,pt
bound
outsb
push
pop
and
stc
rcrb
loop
mov
sub
dec
dec
stos
lods
cwtl
aad
sub
es
xlat
mov
jge
inc
lock
stc
xchg
sub
mov
jo
xchg
inc
scas
int3
lock
lods
sahf
adc
push
dec
xchg
es
push
clc
xchg
mov
add
pop
aam
loop
in
lds
das
xchg
mov
jp
stc
imul
push
out
mov
out
push
adc
in
mov
loopne
push
cmp
jl
bound
mov
ljmp
or
xchg
aas
insl
fnsave
fnstsw
movsb
pinsrw
sbb
jle
xchg
or
xor
jne
xchg
inc
mov
leave
pop
movsl
jle
push
or
sub
roll
repnz
or
or
stos
aas
fstpt
mov
dec
or
ds
test
pop
sub
fidivl
pop
je
js
mov
jb
xor
sbb
sub
cltd
pop
fmull
repz
push
or
inc
rcll
dec
fistps
xor
mov
add
dec
cmpsl
leave
ds
push
data16
push
mov
dec
push
sub
aad
fstl
das
repnz
scas
mov
lahf
sbb
fcoml
push
mov
jmp
xor
pop
and
xor
cmp
add
pop
outsl
add
es
pop
insb
pop
repz
mov
mov
adc
and
stos
out
xchg
cmp
addr16
repz
mov
jmp
adc
jecxz,pt
sbb
fidivrs
or
ror
sbb
std
repz
repnz
adc
out
push
inc
call
mov
pusha
insb
ret
jns
lret
aam
add
hlt
adcl
test
in
imul
mov
xchg
push
lret
movsl
icebp
xchg
xlat
pop
fmul
ret
lods
loop
push
je
loope
movsl
jbe
lcall
std
stc
xor
mov
xchg
mov
std
mov
mov
pop
and
pop
fimull
inc
imul
fdivrs
hlt
mov
xor
pop
lods
mov
aaa
ds
fcmovu
and
or
fistpll
jmp
shll
aaa
aas
aas
outsb
popa
mov
repz
jne
and
cmpsb
jbe
insl
ljmp
mov
push
cmp
lods
sub
into
stos
add
loopne
dec
pop
idivl
lea
in
pop
adc
adc
inc
mov
jns
xor
rorw
sarb
pop
dec
lea
inc
push
shlb
lea
outsl
repz
push
cmc
add
mov
das
sbb
call
xchg
cmpsb
lock
mov
cltd
shrl
mov
mov
sarl
xor
push
cwtl
fistpl
and
sub
sub
jmp
mov
xor
pop
xor
pop
mov
movsb
daa
cld
mov
in
cmpsb
inc
ss
fmull
aad
push
out
cld
scas
out
mov
mov
test
adc
outsb
lcall
dec
mov
mov
dec
subl
push
repz
or
scas
dec
push
jns
lcall
movsl
jl
pop
and
imul
roll
sub
mov
jmp
int3
ja
xor
daa
push
das
and
retw
nop
push
add
and
or
push
push
cmc
jecxz
push
xor
sub
repnz
sub
mov
adc
mov
pushf
sub
in
pop
shl
cmp
testl
test
ds
ret
push
arpl
arpl
ror
imul
je
mov
fucomp
sarb
push
push
cltd
cmpsb
or
mov
xchg
lea
jmp
xchg
fincstp
imul
pop
fdivl
cmp
mov
adc
xchg
mov
push
div
sub
pop
out
outsb
jge
mov
cmp
xor
outsl
pop
xchg
lea
push
jg
mov
fcom
dec
lods
lret
jg
mov
add
lcall
test
frstor
cmc
out
out
mov
push
xchg
mov
jno
mov
mov
or
mov
lret
or
push
inc
arpl
jle
shlb
add
pop
push
lds
hlt
sbb
inc
int3
jecxz
daa
imulb
jae
aad
push
mov
in
ds
inc
adc
pop
pop
clc
loop
fucomi
jge
in
les
dec
jae
mov
scas
push
push
or
mov
and
inc
inc
mov
pop
xchg
repnz
push
dec
sub
mov
cld
icebp
mov
out
mov
mov
repnz
and
sbb
sbb
jae
sahf
data16
xchg
call
sahf
and
xchg
dec
std
or
jne
fisubrs
sub
test
stos
jno
imul
mov
mov
add
mov
pusha
fnstenv
adc
test
jecxz
ret
clc
sbb
dec
mov
out
lea
jmp
xor
fcmovb
out
xchg
pop
inc
fprem
loopne
mov
xchg
push
lret
dec
push
pop
fldt
inc
imul
adc
mov
push
arpl
push
stos
sub
test
xchg
cmp
rorb
mov
lret
mov
out
dec
xchg
inc
mov
cltd
pop
stos
pushf
out
inc
repnz
cltd
cmpsb
adc
xlat
inc
test
jno
aas
cmpsl
into
mov
cmpb
or
dec
cmp
pop
dec
lret
out
lods
je
sbb
pop
test
xchg
cmpsb
xchg
arpl
and
lahf
or
ret
add
or
cmp
jns
add
jb
pop
sahf
jecxz
cmp
daa
fsubr
and
or
nop
cli
test
jbe
lahf
faddl
push
hlt
cmp
pop
fcoms
dec
or
cs
out
fwait
cmp
xchg
mov
mov
outsb
push
sub
lcall
pop
fstps
mov
popa
mov
adc
pop
xor
aaa
aaa
out
int3
rolb
pop
minps
aam
pop
das
mov
add
loope
lcall
sbb
mov
aad
cmp
jno
sub
loope
jno
lds
sub
or
addl
or
cltd
lock
dec
sub
cmpsl
nop
dec
arpl
push
pop
es
sub
sbb
inc
mov
int
dec
repnz
clc
mov
in
fisubrs
xor
dec
es
orb
lea
daa
inc
in
dec
mov
rcrb
cs
xchg
decl
lods
fiaddl
js
xor
inc
sbb
mov
popa
cmp
mov
in
loop
mov
mov
es
push
and
sahf
jmp
subb
mov
and
pop
aaa
cmp
mov
jp
or
out
test
mov
mov
cmp
push
mov
daa
jb
and
mov
cli
jle
jge
notb
sbb
jo
or
mov
ss
cmp
imul
pop
mov
mov
jnp
iret
jmp
or
out
lods
orl
sti
inc
and
mov
pop
xor
mov
cmp
push
cmpsb
repz
icebp
push
pusha
sub
push
test
inc
dec
inc
xchg
or
jnp
imul
or
stc
sbb
loop
in
push
pop
and
ret
or
out
movsb
add
mov
and
mov
es
mov
sbb
or
xor
loopne
imul
fimuls
dec
icebp
xchg
aam
int
testl
adc
mov
fstps
or
or
movl
addr16
mov
jns
lret
mov
lock
inc
xor
ds
std
sub
sbb
call
cmp
or
jns
jg
or
mull
mov
mov
mov
sti
sarl
insl
in
pop
out
pop
push
rorl
mov
filds
sub
pusha
inc
test
std
xlat
mov
incl
repnz
cmp
jl
fdivrs
or
scas
sbb
lcall
dec
fsubrl
mov
cld
adc
outsb
inc
lret
jnp
outsb
mov
insb
mov
mov
xorl
inc
xchg
mov
test
adc
leave
inc
jbe
aaa
inc
dec
adc
adc
int
shll
ret
sbb
inc
ficoml
jo
or
sbb
inc
jg
mov
fldt
movb
xor
dec
lods
aaa
cmp
dec
push
cmp
mov
mov
mov
cs
push
imul
mov
mov
and
mov
cmpsl
mov
out
jns
lret
ret
sbb
lock
mov
xor
mov
leave
xor
sti
cmp
daa
pop
mov
gs
inc
iret
push
jle
inc
mov
in
push
loopne
ds
cmpl
jge
sub
repnz
mov
adc
xor
inc
jmp
cltd
imul
je
ficoms
xor
xor
pop
or
push
jb
push
aam
lock
lret
dec
lret
test
pop
sbb
push
xor
and
outsb
jbe
imul
adc
mov
addl
adc
imul
cmpb
and
or
es
mov
add
jb
aaa
jbe
les
scas
mov
aad
sub
jnp
cmpsb
push
fdivs
test
sti
jecxz
push
bound
out
inc
imul
mov
aaa
cmp
lea
movsl
push
adc
insl
xchg
add
jns
ljmp
lods
cli
pop
and
mov
adc
mov
mov
cmc
push
xchg
xchg
ljmp
js
dec
pop
xor
add
orl
jmp
fimull
push
mov
mov
outsb
movsl
out
pop
movsb
xor
mov
sti
cmp
add
inc
pop
add
mov
cmpsl
mov
ret
sub
push
xchg
sub
xchg
imul
mov
iret
scas
movsb
in
aaa
sbb
fwait
pop
cmpsb
fiadds
cmp
sub
xlat
mov
jnp
in
and
jp
pop
jae
and
adc
sbb
dec
roll
shr
scas
out
jae
mov
sbb
mov
dec
pop
das
mov
lods
push
mov
mov
xor
add
data16
xchg
das
popa
call
pop
int3
mov
insl
imul
pop
cmpb
mov
pop
mov
sbb
mov
cmp
mov
push
stos
inc
fwait
inc
mov
lods
cld
push
jl
ss
xor
mov
stos
xor
adc
mov
daa
inc
sahf
clc
xor
dec
sarl
jno
or
insl
jl
add
sahf
add
in
lods
ja,pt
dec
scas
or
mov
xor
testl
mov
fidivs
push
lret
dec
push
loopne
adc
into
in
aam
cmc
mov
add
mov
inc
lcall
push
mov
scas
aam
push
repz
push
jecxz
das
cmp
mov
ret
lods
sbb
repz
outsl
dec
stc
and
clc
add
aaa
pop
pop
dec
pop
cmp
enter
gs
addl
adc
daa
add
pusha
ljmp
or
mov
jns
sub
out
sub
ljmp
subl
pop
out
jnp
and
push
pop
addl
fisttps
sbb
mov
push
mov
pop
sbb
ja
lahf
outsb
mov
fstpt
outsl
or
mov
call
lcall
stos
xor
pop
out
cltd
mov
sub
xchg
test
pop
sti
mov
xchg
jmp
jno
cmc
scas
xchg
mulb
mov
ffree
loop
pop
test
addr16
data16
cmova
std
and
fcmovnu
sub
xchg
or
movsb
mov
std
hlt
sub
pop
sub
ret
mov
hlt
push
add
fisubrl
dec
jp
sbb
js
leave
aas
push
into
xlat
dec
push
sub
cmp
out
add
and
dec
loope
mov
or
push
fbstp
and
xor
push
repz
les
jbe
scas
mov
idiv
add
sbb
dec
mov
mov
jp
jg
mov
push
lcall
loope
sub
pop
mov
test
xor
add
imul
xor
fld
stos
icebp
xchg
bound
lock
push
ret
adc
idiv
xlat
je
cmp
mov
pop
or
or
add
cmp
lds
add
rolb
fstpl
sub
nop
aas
lea
xchg
sbb
rcr
in
cld
ljmp
and
sbb
test
sbb
pop
iret
mov
imul
stos
or
xor
dec
inc
bound
sub
fcomps
sbb
sub
inc
mov
div
ljmp
adc
inc
scas
mov
dec
dec
mov
adc
inc
add
push
cwtl
test
pop
pop
icebp
fstl
adc
stos
add
cmp
cli
sbb
sub
lret
mov
mov
dec
and
icebp
mov
mov
ja
rcrb
and
push
jbe
xlat
jno
cmpl
lock
aaa
daa
jno
lea
xchg
jg
daa
fimull
pop
jge
xor
jbe
push
fstpl
inc
adc
sbb
fincstp
mov
xchg
and
add
jo
xchg
stc
sub
dec
mov
sti
clc
in
imul
push
ds
iret
xchg
pop
pop
out
out
rcrb
or
shlb
ret
push
es
ret
xchg
leave
out
imul
mov
outsl
jge
mov
sti
js
int
adc
repz
jno
add
lret
shll
loop
addb
shlb
pusha
pop
jbe
in
mov
dec
cmp
pop
mov
jmp
adc
movsb
shll
cwtl
test
add
shrl
leave
cmp
inc
sti
xor
jge
and
testl
stos
push
and
xlat
mov
stc
inc
pop
mov
out
jno
filds
jae
shlb
daa
je
es
mov
nop
outsb
ret
stos
sbb
adc
xor
mov
hlt
int3
pushf
shrl
jmp
xchg
mov
mov
ror
pusha
push
adc
cmpl
fisubrl
nop
test
cmp
sub
nop
jmp
inc
mov
adc
sub
inc
lea
gs
pop
inc
jmp
mov
test
mov
push
enter
and
jb
ljmp
pop
adc
and
in
push
jns,pn
push
scas
stc
movl
jbe
xor
inc
or
pushf
jg
cmp
lahf
push
push
clc
scas
mov
insb
cmpsl
inc
leave
mov
dec
push
out
jb
enter
xchg
es
mov
cmp
push
icebp
or
ja
into
cmp
lods
sbb
decl
dec
jecxz
inc
icebp
inc
idiv
loope
push
inc
xchg
pop
sbb
out
or
neg
cmp
rorb
mov
cmpsl
or
mov
mov
mov
adc
mov
fadds
data16
xchg
hlt
aad
fwait
push
mov
and
pop
cld
shlb
sahf
sahf
xor
xchg
jbe
add
push
mov
cmp
fs
dec
mov
enter
xchg
clc
std
daa
dec
mov
sub
ret
test
aad
in
xchg
dec
sbb
imulb
pop
out
push
xchg
mov
mov
cwtl
ret
js
mov
call
xchg
shlb
inc
aad
cmpsb
ficoms
mov
mov
nop
sahf
xor
sahf
pop
std
repnz
inc
das
les
jb
cmp
lret
test
pop
jbe
bound
movsb
mov
lcall
jmp
aas
aam
cwtl
mull
mov
or
ds
movsb
and
test
in
jmp
mov
add
sbb
fcmovbe
push
les
lahf
or
pusha
inc
mov
cmp
fucomip
cli
test
jns
lock
das
add
mov
xchg
pop
out
push
add
cmp
clc
mov
cmp
cltd
push
or
inc
arpl
aas
mov
sbb
and
test
outsl
jmp
jns
adc
cwtl
pop
add
pop
out
xchg
fdivs
push
sbb
bound
sub
std
scas
outsb
fimuls
xchg
mov
pop
outsl
xchg
stc
push
ret
sahf
inc
cmpsl
shll
mov
into
xchg
lods
das
ds
mov
xchg
sarl
sbb
stos
popa
mov
mov
mov
pop
fdivs
mov
nop
repz
sub
dec
lret
loopne
rcr
mov
pop
loopne
stos
es
push
mov
int3
cmpsb
jo
xlat
ja
arpl
dec
cld
ds
jecxz
movsl
addl
mov
mov
sbb
pop
dec
xor
jmp
les
das
and
into
ja
xchg
sbb
mov
psllw
in
mov
add
xor
divb
notb
push
in
and
sub
faddp
insb
push
cwtl
push
and
in
fcomps
xlat
cmpl
mov
lahf
cld
shr
add
iret
in
enter
out
aad
rorl
addr16
sti
cs
xchg
icebp
insl
cmpsb
hlt
mov
adc
pusha
fldt
rol
mov
mulb
or
fs
jl
cmp
stc
adc
add
stc
mov
test
xorb
mov
push
test
pop
mov
sarb
jb
jg
xor
adc
inc
dec
sahf
inc
jg
dec
sub
clc
sbb
mov
insl
mov
insl
jg
push
subl
pop
xor
pop
fisubrl
xchg
push
and
mov
mov
and
pop
popf
sbb
and
fstpl
loopne
cmpsb
xchg
stos
xchg
leave
push
lods
xchg
lret
and
push
jns
bound
pop
adc
mov
rclb
push
mov
add
aas
sub
adc
ljmp
pop
jle
test
mov
mov
pop
cmpsb
pop
mov
sti
and
xor
push
cmp
sbb
xchg
imul
pop
fcomip
mov
and
std
ss
iret
mov
stc
cmp
jno
add
cmpsb
and
mov
lds
ljmp
test
mov
xchg
imul
mov
test
aaa
push
mov
mov
insb
mov
clc
mov
push
pop
jae
mov
pop
bound
bound
idivl
pop
or
pop
call
adc
push
cmp
push
arpl
pop
mov
and
adc
jge
add
or
push
xchg
test
push
mov
mov
mov
sub
push
xchg
in
sub
or
les
jp
call
xor
sarb
add
pop
ret
sub
repnz
xor
xchg
lret
leave
aaa
fs
pop
mov
sub
scas
fstpt
push
mov
sbb
push
mov
rol
and
je
in
add
fs
mov
cmpsl
imul
pop
and
outsl
sub
lods
add
es
aaa
mov
and
push
xchg
clc
sbb
add
or
xchg
pop
icebp
pop
pop
push
mov
lret
mov
mov
mov
xor
and
nop
sub
shl
outsl
sbb
push
adc
xor
cli
cli
and
adcl
adc
filds
and
mov
inc
and
push
cmc
or
inc
jne
jae
add
filds
mov
push
cmp
fistps
outsl
fucomip
mov
inc
push
ja
imul
adc
xor
aam
or
mov
add
push
mov
mov
mov
mov
lea
jmp
loopne
icebp
ds
or
mov
and
ds
push
adc
inc
enter
xor
xchg
ss
jns
sub
pop
fadds
lret
or
aad
mov
sbb
mov
cmp
shl
and
mov
sub
push
dec
or
enter
idivb
pop
inc
xchg
pushf
mov
aad
xchg
pop
xchg
sub
push
pop
jae
out
jg
inc
into
nop
xchg
loope
pushl
inc
or
imul
mov
adc
cs
pop
lahf
pop
pop
pusha
or
arpl
jg
xchg
imul
int3
mov
inc
cs
stc
mov
mov
dec
cld
stos
cmpl
add
inc
sbb
sub
sub
stos
mov
mov
or
xchg
pop
sub
lahf
imul
movsb
adc
push
aad
pop
and
sub
xor
push
ljmp
pop
rcll
cmp
lock
xor
push
out
push
lea
in
insl
testb
xrelease
popf
mov
leave
xchg
mov
jne
je
dec
imull
xchg
loopne
stc
cmp
or
inc
popa
mov
cmp
sub
insb
outsb
testb
fisubrs
mov
and
jb
cmp
aaa
dec
lds
push
add
jp
in
ret
xchg
faddp
pushf
lret
push
lock
int3
popf
mov
cmc
aas
int
je
jo
sbb
hlt
and
xor
sbb
jno
mov
mov
testl
ss
out
enter
xlat
and
or
je
pop
out
sbb
loop
out
inc
and
push
stc
cmpsl
push
xor
fisttpl
jecxz
notrack
ljmp
mov
mov
std
sbb
pop
lahf
cmp
mov
mov
pop
notb
adc
leave
inc
shr
nop
cld
aaa
cs
mov
sti
and
test
lods
cmp
and
dec
lcall
push
mov
js
mov
xor
aam
mov
sbb
xchg
mov
inc
mov
mov
adc
cmp
push
mov
mov
dec
inc
mov
movsl
es
cltd
mov
mov
fdivr
fwait
bnd
nop
inc
jne
mov
jbe
jne
adc
sub
or
and
aas
xchg
or
pop
cltd
out
dec
loop
je
sbb
movsb
cmpsl
lahf
icebp
xchg
pop
pushf
in
jbe
mov
adcb
adc
pop
je
push
cmp
sub
xchg
mov
and
xchg
jg
jmp
in
je
in
push
sbb
ss
rcll
mov
loope
shl
adc
adc
xor
cwtl
out
or
and
cmp
shrb
cmpb
cmp
cmp
xchg
repz
mov
sub
push
jmp
cmp
and
cs
insb
arpl
sbb
outsl
jo
xchg
mov
pop
inc
enter
sbb
aaa
js
and
jmp
lock
xor
jle
xchg
movl
popa
add
and
aas
stc
mov
xchg
pop
push
bound
jecxz
dec
cmpsb
push
mov
mov
adc
lahf
jg
and
inc
mov
movsl
pop
out
dec
jle
bound
pop
mov
lods
cs
repz
or
test
dec
jecxz
je
jmp
mov
sub
dec
pop
hlt
movsb
movsl
cli
or
lods
filds
daa
addr16
imul
decb
loope
inc
and
dec
xor
or
push
add
fcmovnbe
fistpll
xchg
add
and
cmc
adc
and
insl
scas
rorl
out
or
test
xor
xor
stos
scas
cmpsb
adc
mov
pop
adc
in
push
xor
out
xor
scas
sarb
mov
inc
repz
outsl
or
fst
imul
push
and
sbb
in
push
bswap
jae
mov
pop
xor
xlat
or
push
in
popa
fcoms
and
aad
xchg
aas
xchg
mov
mov
cmp
pusha
and
add
sbb
sub
and
in
xchg
sub
scas
jbe
ds
les
xlat
loopne
outsb
ds
pushf
movsb
stos
bound
int3
cmpsl
cli
arpl
popa
fs
push
hlt
sbb
js
cmc
dec
test
je
int
adc
and
cmpsb
mov
shl
fs
adc
rcl
popa
in
fdivs
mov
imull
dec
sub
cli
pop
sub
xor
sub
inc
addb
mov
and
sbb
in
pop
add
out
lcall
sub
pop
imul
dec
cmpsl
lahf
inc
xor
jo
pop
cli
in
sub
jecxz
and
enter
lods
push
cmp
and
jns
sbb
scas
dec
inc
nopl
gs
push
movsl
out
push
out
pop
adcl
aam
xorl
nop
jno
gs
sbb
pop
mov
jae
adcb
lds
shrl
imul
sahf
and
sub
repz
add
xchg
inc
adc
lock
mov
cltd
rcr
push
hlt
jne
mov
jno
mov
pop
inc
cmp
inc
ds
hlt
xor
pop
cli
sub
mov
add
lret
ss
and
inc
adc
and
ja
cmp
aaa
push
mov
out
push
test
and
test
mov
dec
call
rolb
faddp
jb
cmpsb
roll
addl
mov
adc
cmp
push
dec
inc
adc
rorl
dec
loope
inc
mov
mov
jmp
or
sbb
jle
pop
in
std
int3
decb
jae
test
sbb
sbb
or
in
mov
adc
ja
push
and
cmp
add
cmp
call
mov
pop
jae
mov
les
rcrl
aam
cwtl
enter
into
fadds
and
mov
lock
jne
sahf
out
add
loop
shlb
xor
test
leave
or
imul
add
mov
outsb
in
xor
or
out
inc
fcompl
and
sub
lds
leave
hlt
mov
push
adcb
cli
sti
xor
xorl
add
mov
push
int
mov
fsubrs
stos
adc
sbb
xor
sti
das
cmpsb
rcrl
sub
push
out
xor
imul
mov
mov
dec
xor
mov
mov
inc
daa
dec
pop
cmp
lea
mov
out
push
leave
cltd
xchg
addr16
dec
cmp
lds
adc
fsubrl
inc
out
jae
out
dec
lcall
or
xor
mov
aaa
push
daa
rorl
lds
inc
add
movsl
or
sbb
mov
repnz
out
scas
iret
adc
out
mov
xchg
cmp
cmp
icebp
lret
rorl
dec
sbb
dec
mov
and
daa
or
fsubs
adc
arpl
add
jae
movd
pop
adc
inc
je
mov
inc
mov
adc
pop
jno
fistpl
jae
aad
xor
daa
pop
mov
insb
stos
mov
ljmp
mov
test
xor
insl
in
dec
je
adc
cmpsb
jecxz
mov
sbb
rol
mov
sub
ss
mov
jo
pop
shll
test
adc
inc
mov
cmpsl
mov
mov
jl
call
mull
loop
mov
xor
mov
adc
xor
gs
add
and
and
sbb
ja
push
mov
decl
mov
jbe
pop
push
sub
sub
nop
cmp
test
les
mov
add
push
sbb
pop
and
incb
pop
and
xor
and
xchg
inc
rorl
sbb
shl
shll
push
insb
add
mov
repz
rcrl
push
es
push
ret
lahf
sbb
repz
in
out
aam
test
retw
fcomp
imul
les
pop
rcrb
pop
repz
call
xchg
clc
jno
xchg
into
movsb
jecxz
push
mov
mov
fwait
mov
mov
negb
jno
mov
pusha
jecxz
aaa
push
clc
mov
popf
inc
fimull
cs
jno
push
test
stos
mov
mov
cmpsl
pop
fcomip
popa
adc
aad
mov
lods
icebp
and
xlat
sbb
inc
test
xor
push
imul
pop
gs
arpl
push
out
fnstenv
xor
mov
aaa
das
push
es
jns
mov
int
lcall
mov
ja
jle
push
adc
inc
ret
mov
xchg
stos
jmp
lahf
xchg
lret
xchg
movl
sti
pop
push
test
cmpl
call
jno
sti
xor
cmp
sub
fcomps
add
es
xor
jb
or
xor
xchg
sahf
inc
rorb
mov
pushf
inc
push
inc
jae
fucomi
insb
mov
andl
add
ljmp
jmp
in
jg
jecxz
mov
cltd
shll
xchg
xchg
lret
les
iret
nop
mov
clc
aad
gs
mov
shlb
in
mov
mov
jb
mov
xchg
rep
sbb
scas
hlt
pop
xchg
cmc
mov
fisubrs
popa
jno
test
pushf
add
inc
loop
pop
and
or
loope
ljmp
add
inc
insb
push
lods
dec
xor
imul
inc
fmull
fldl
jbe
mov
push
mov
iret
movsl
mov
in
add
lods
pop
stos
pinsrw
popf
jo
add
in
sti
dec
jge
dec
mov
stc
clc
dec
dec
push
lahf
sarl
xor
rcll
mov
adc
mov
mov
dec
sub
cmp
insl
and
mov
xchg
push
das
sub
and
mov
lea
ret
or
push
or
fs
jns
mov
in
inc
dec
lds
xor
frstor
or
sbb
cmp
pop
sbb
jnp
or
xchg
enter
shll
and
lods
mov
jle
jle
leave
sub
repz
dec
cmp
mov
shll
pusha
mov
dec
aad
mov
mov
incb
int
mov
dec
mov
mov
mov
push
push
in
adc
mov
push
outsb
cmp
sub
push
xor
cmc
sub
out
pop
mov
or
in
mov
ja
inc
sub
adcl
outsb
test
out
xchg
jp
lret
adc
out
sbb
mov
jl
rorb
mov
jecxz
adc
jp
cmc
int
add
jbe
in
adc
adcb
mov
mov
dec
repz
mov
or
fnsave
gs
in
jg
or
mov
and
inc
jne
pop
test
fisttpl
scas
inc
fisubs
cmpsl
sbb
out
lret
test
push
push
addr16
icebp
xor
add
xchg
fiadds
das
je
movsl
inc
xchg
repz
jp
adc
xor
scas
loop
adc
addr16
test
mov
inc
sbb
pop
ret
xor
push
repz
orl
out
je
push
push
xchg
add
xchg
jnp
adc
pushf
sbb
aad
mov
popf
arpl
push
in
js
inc
cmpsl
repz
mov
into
pop
mov
es
cmp
aam
push
dec
push
xor
push
ret
add
fcomip
sub
test
fdivl
shll
or
adc
cmp
mov
inc
fisttps
movsb
mov
pop
cltd
popf
loope
xchg
add
pop
jge
int3
xchg
cli
dec
scas
hlt
adc
dec
data16
push
stos
jo
imul
imul
xor
sub
scas
int3
and
mov
sbbb
je
stc
mov
or
out
stos
addl
adc
shrl
sbb
sub
and
adc
adc
cmp
pusha
out
xchg
jp
cmc
mov
test
push
inc
mov
inc
cwtl
in
mov
bound
push
or
test
inc
test
std
inc
sbb
lock
sub
in
add
in
xchg
repnz
enter
mov
js
imul
mov
ffreep
inc
push
dec
push
and
pop
ffreep
ret
pop
jo
xlat
adc
dec
pop
ljmp
inc
xchg
fsubrs
cltd
daa
cmp
xor
mov
arpl
xor
sbb
roll
stos
pop
pop
jle
movntq
imul
leave
sti
lahf
cmp
mov
mov
xor
cs
imul
addr16
mov
pop
push
jno
cmpsl
mov
outsb
sbb
mov
test
and
cmpsb
lods
lret
sub
pop
out
loope
sub
mov
adc
mov
pop
mov
pop
xchg
inc
in
fs
xor
lea
jae
dec
mov
xchg
sbb
jnp
jae
cmp
push
xorl
push
push
cmp
adc
sbb
adc
mov
inc
inc
daa
shrd
cmp
fwait
cld
mov
mov
orb
sarl
icebp
fmul
xor
movsb
xor
das
push
dec
repnz
les
pop
push
sti
imul
push
lods
cltd
inc
sbb
int3
push
movsl
mov
dec
and
and
js
xor
fistps
pop
clc
orl
mov
outsl
sub
push
into
shll
repnz
test
mov
mov
sub
mov
sub
enter
leave
cmp
push
mov
addr16
out
int3
into
push
mov
mov
mov
mov
adc
lcall
aad
fwait
enter
aaa
inc
add
push
mov
outsb
je
mov
mov
test
or
pop
adc
dec
sub
fwait
daa
stc
adc
pop
loop
mov
in
mov
repz
xorl
das
cmp
or
add
or
fldl
dec
sbb
adc
or
daa
push
add
and
xchg
pop
push
xor
mov
lahf
adc
icebp
add
inc
popf
fldz
sbb
dec
add
pop
or
pop
mov
sub
fsubs
cwtl
jge
fildl
inc
push
andb
js
mov
pop
outsl
fisttps
sbb
hlt
into
lea
ficompl
push
rcrb
cmp
or
xlat
mov
dec
inc
lock
mov
imul
jbe
cmp
adc
mov
icebp
push
dec
xor
pop
push
jbe
test
loop
push
xor
adc
fcoml
cmp
dec
and
imul
orb
clc
add
mov
or
out
out
repnz
inc
mov
push
sub
pop
addr16
dec
testl
mov
lahf
inc
dec
pop
mov
inc
sbb
cmpsl
lods
daa
push
sbb
xchg
ficomps
arpl
ds
xchg
push
cwtl
jmp
loop
movd
gs
insl
loopne
pop
xor
adc
cmc
cmp
add
pop
adc
negl
adc
popf
cmpsb
and
dec
bound
out
sbb
scas
fwait
loopne
sub
shll
push
pop
data16
aam
sbb
pop
add
leave
loop
cmp
sbbl
adc
nop
pop
pop
xchg
in
pop
pop
fistps
pusha
mov
inc
and
xchg
clc
sbb
mov
xchg
cmp
xchg
xlat
and
mov
cmp
fcmovnu
fcomip
xchg
push
in
pusha
jle
cmc
jl
push
push
nop
std
scas
aaa
stos
iret
push
negb
enter
add
mov
mov
shlb
xor
sub
push
rcrb
mov
aaa
test
cltd
sub
xor
mov
enter
rol
dec
push
fisubrs
sti
or
test
push
rorl
mov
shll
hlt
cli
mov
inc
adc
mov
mov
lcall
hlt
pop
es
in
xorb
cld
jb
lahf
mov
pcmpeqb
push
add
lods
mov
test
mov
pop
test
pop
dec
push
es
cmp
nop
sbb
ss
add
scas
jmp
je
cmp
inc
xor
aas
popa
cmc
in
xchg
mov
mov
sti
dec
data16
loopne
jecxz
jge
ljmp
mov
addr16
cmc
mov
arpl
clc
int3
in
pusha
pop
add
mov
or
jge
std
mov
xor
stos
test
and
push
sbb
mov
inc
dec
or
mov
and
popf
outsl
pop
jp
and
xor
shl
mov
addr16
cmpsb
push
and
pop
xor
stc
cs
ljmp
add
push
sub
pop
arpl
fcom
mov
push
repz
cwtl
movb
or
inc
mov
leave
and
popf
pop
jo
aaa
and
data16
ljmp
mov
lods
mov
mov
fisubs
jo
repnz
xlat
jns
inc
testb
sub
movl
lods
mov
mov
xchg
roll
jno
scas
sbb
push
pop
inc
repz
test
pop
sbb
cmpsl
enter
mov
sub
jl
or
or
adc
cltd
mov
sbb
sub
je
movsb
std
jns
sub
adc
xor
jb
insl
lods
out
xor
pop
bound
mov
push
into
test
lcall
int
dec
and
jp
lret
pop
stos
pop
ret
inc
and
js
push
out
in
xchg
inc
push
repz
and
movsl
scas
cmc
push
in
push
mov
mov
enter
sarb
scas
or
fistpl
repz
jmp
xchg
pop
fists
xor
mov
aam
fidivs
repz
jae
adc
mov
icebp
mov
icebp
xchg
pop
fstpt
add
gs
push
in
ret
iret
out
xor
jnp
dec
or
out
inc
and
add
int
cmc
add
rol
lahf
int3
mov
nop
push
inc
dec
inc
inc
mov
out
pop
pop
adc
test
add
adc
aaa
sbb
or
lret
test
in
pop
jge
inc
iret
lods
inc
nop
inc
jmp
std
aas
and
insb
xchg
mov
hlt
push
fcompl
or
xchg
daa
inc
xor
pushf
and
xchg
cmp
jno
sbb
mov
cmp
movsb
pop
mov
jo
cmpsl
add
xor
clc
popf
push
divl
outsl
dec
mov
pop
cmp
mov
inc
movl
adc
popa
ficompl
lock
nop
sub
push
add
xchg
cmp
mov
movsl
les
dec
sarl
flds
loop
adc
movsb
mov
into
cli
filds
pushf
xor
cmp
inc
push
xchg
in
es
es
in
cmp
add
dec
lret
adc
inc
cmp
sahf
in
outsb
pop
push
xchg
lret
ret
inc
fwait
xor
sarb
push
mov
notl
loope
cmp
xlat
sbb
add
cltd
add
je
cld
ljmp
insl
xchg
mov
jns
pop
pop
and
call
stos
ror
lds
xchg
in
cmc
lds
in
push
jl
in
sub
test
dec
rclb
stos
push
shll
mov
cmpsl
add
sub
int
in
cmp
dec
push
pushf
lds
xlat
cmp
data16
rorl
or
jg
inc
dec
cmp
push
scas
push
repnz
cmp
test
lods
jb
and
out
fstpl
mov
or
gs
add
pop
fsubr
cmp
inc
cld
push
lock
stc
ret
adc
sbb
or
out
lock
xor
pop
inc
sti
jno
testb
or
xor
les
or
mov
movsl
jp
sbbb
test
or
stc
clc
sub
cli
fstpt
cmp
jmp
sub
int
cmp
mov
pop
or
cmpb
hlt
sbb
mov
sbb
or
cli
mov
inc
push
xchg
mov
ss
sub
aad
daa
andb
out
and
pop
mov
jp
fadds
aaa
fs
xor
gs
aas
lods
pop
dec
pop
stc
xor
into
xor
inc
arpl
cmpsl
xchg
sub
mov
or
daa
scas
and
loop
dec
jge
in
lods
int3
jbe
in
repz
xor
not
pop
rolb
int3
jle
add
mov
inc
cli
jne
enter
pushf
cmpl
fidivrl
jmp
int3
lret
stc
mov
inc
or
jne
imul
cmp
push
or
cmpsl
fbld
or
cmp
mov
mov
pop
div
in
or
ret
mov
pop
push
push
loopne
test
pushl
test
fildll
adc
aaa
dec
sbb
mov
or
push
enter
jae
xchg
mov
lahf
adc
adcb
and
in
stos
push
adc
sbb
ffreep
addr16
mov
mov
add
imul
mov
jmp
xchg
rcll
xchg
scas
xlat
mov
sbbb
and
and
das
xorl
mov
dec
sbb
sbb
aam
mov
adc
and
jg
fimuls
mov
jnp
push
in
mov
push
rol
cmp
jb
xchg
enter
lcall
in
sbb
adc
inc
imul
jecxz
daa
jno
jle
mov
push
fidivl
dec
mov
shlb
xor
loope
or
adc
sbb
dec
lods
fstps
addl
jnp
fmull
sub
insl
push
mov
stos
sub
loopew
jne
xlat
sbb
mov
test
pop
aam
enter
add
lock
sub
lret
and
add
fstl
sub
repz
jbe
mov
ljmp
fidivl
mov
std
shlb
fdivrs
test
aas
addr16
jmp
push
insl
jno
fstp
push
add
shl
enter
push
xorb
hlt
sahf
imul
in
push
fsts
pop
mov
inc
fistpll
dec
je
mov
roll
push
ds
lret
mov
ficoms
pop
sbb
cmp
scas
pop
je
out
inc
int
mov
mov
mov
xchg
call
inc
out
sbb
jo
mov
movsb
xchg
push
mov
pop
adc
ror
pop
xchg
inc
out
sub
aas
xchg
jmp
mov
mov
cwtl
out
push
xchg
dec
cld
mov
es
sbb
jmp
push
mov
insl
lock
jecxz
push
cmp
push
jle
sahf
cmpsl
sbb
xchg
stos
and
and
xrelease
push
into
inc
scas
jle
push
sti
adc
xchg
data16
es
pop
adcb
xlat
sahf
mov
lods
sub
mov
mov
push
cmc
sbb
mov
jl
xchg
pop
xor
in
shr
and
xchg
stc
subl
and
data16
daa
in
cmc
fisttps
or
push
pushf
lds
lea
cmc
mov
orl
dec
cmpsb
push
fidivrs
lock
push
pop
jae
xchg
mov
hlt
fisubs
fcoml
out
fwait
push
mov
adc
xor
ja
daa
jno
cmp
cmp
stos
xorl
nop
xchg
lds
jno
dec
test
lea
xor
inc
or
data16
cmp
rcl
push
cmp
es
or
mov
push
mov
out
xchg
push
pusha
icebp
xchg
jge
pop
dec
cmpsl
inc
dec
nop
repnz
dec
inc
xchg
sarl
inc
fs
inc
cld
cmpsl
test
movsl
push
mov
add
into
sub
mov
cld
pop
ret
adc
imul
mov
sub
pop
imul
adc
xchg
mov
or
mov
sbb
dec
jl
iret
jp
repnz
inc
cld
mov
or
sub
sub
filds
mov
fwait
mov
out
xchg
lods
mov
jo
pop
xor
cmp
xchg
aas
or
inc
mov
lods
inc
or
cmp
imul
out
les
pop
cwtl
popf
shr
lcall
mov
lahf
rcrb
sbb
icebp
push
repz
mov
repnz
icebp
xchg
jne
lret
movb
imul
leave
mov
cmp
pusha
stc
inc
je
push
adc
mov
xor
pop
xchg
jns
and
inc
add
es
dec
faddl
ja
mov
aaa
add
push
mov
sub
cmc
push
adc
jb
fisttpll
ficoml
push
adc
pop
in
xor
testb
test
out
cmp
stc
adc
mov
pop
dec
pop
addb
mov
mov
sub
imul
gs
outsb
add
lds
pusha
mov
add
adc
push
ret
adc
es
inc
shlb
mov
sbb
arpl
ja
sahf
js
orl
cmp
hlt
fdivp
into
aad
inc
sub
es
and
pusha
jle
sti
lcall
testl
dec
add
fdivrp
xchg
cwtl
and
daa
les
cmpsb
fbstp
aas
pop
jge
push
jmp
mov
movsb
sub
jnp
xor
arpl
ljmp
pop
add
add
fcom
dec
fucomip
adcl
mov
push
das
test
inc
xchg
push
cmp
jbe
cli
cmp
fs
addl
xchg
push
loopne
mov
ss
js
cmc
popa
pop
cmp
mov
inc
jmp
pushf
lods
add
adc
jnp
xor
cwtl
mov
sti
outsb
icebp
cld
push
leave
mov
addr16
dec
dec
in
daa
adc
and
lahf
fldl
mov
jae
mov
into
adc
les
mov
ljmp
clc
mov
mov
xor
rcll
jbe
push
outsb
mov
mov
sub
xchg
adc
call
xchg
mov
xchg
and
data16
stc
and
je
out
fs
jmp
cmp
mov
mov
nop
fs
insl
out
bound
sub
iret
lret
adc
mov
xor
iret
out
iret
lock
inc
mov
sahf
test
add
pop
pop
push
xor
xchg
aad
push
push
gs
mov
adc
mov
sti
fildl
mov
sub
pop
dec
scas
mov
sub
in
mov
cltd
lea
or
adc
sti
loope
xchg
stc
xchg
mov
in
shl
out
cmp
jle
dec
push
push
push
add
mov
movsl
roll
mov
adc
std
imul
sahf
xchg
mov
stc
or
inc
in
ds
jb
sub
xchg
sarl
add
add
add
mov
mov
push
fidivl
fnstcw
xlat
aas
stc
fnsetpm(287
mov
inc
push
stos
xor
lea
jae
inc
push
outsl
mov
test
data16
in
mov
jmp
enter
cmp
pop
test
mov
xor
aas
xorb
mov
in
and
fs
lock
push
pop
add
popa
cmp
mov
xchg
cli
push
jb
shl
and
mov
dec
cmc
fiaddl
inc
scas
insl
mov
inc
sub
fwait
lcall
xchg
and
movsb
lcall
mov
ljmp
pop
insl
xchg
sbb
mov
int
cli
icebp
or
push
mov
cmc
mov
out
movsb
pop
out
cmp
sub
xchg
mov
enter
pop
inc
cld
or
pop
lds
rcll
adc
add
ss
jl
jle
outsb
xchg
test
jo
jmp
xor
jnp
add
dec
xorps
sbb
sti
cmp
arpl
and
jmp
adc
mov
push
daa
lds
sbb
insl
stos
push
ror
test
daa
jp
int3
repz
ss
push
pop
xchg
push
stc
jecxz
mov
mov
and
mov
xchg
stos
gs
sub
test
jecxz
pop
xorb
mov
or
ret
mov
cs
gs
aad
mov
setns
mov
in
ljmp
sub
pop
ss
daa
dec
pop
aas
adcl
or
stos
and
dec
insb
ret
loop
jmp
pop
lock
jp
imul
xor
xchg
cli
sub
pop
push
negl
mov
mov
sub
pop
aas
fisubl
daa
and
inc
add
jnp
xor
andb
add
or
ljmp
mov
fnstsw
negb
and
cmp
push
daa
daa
add
fistpll
sarb
sub
cmpb
das
push
jnp
test
movsb
or
cli
rcr
and
aad
cmpsl
lret
dec
sbb
test
xor
ds
push
lea
addr16
add
outsl
je
mov
les
in
xchg
xchg
xor
sub
daa
jg
out
xchg
inc
cmp
or
js
sub
sub
imul
arpl
adc
push
mov
add
aad
cmpsb
and
cltd
test
scas
lcall
jb
jbe
imul
icebp
or
out
and
adc
push
sarb
xchg
inc
ret
mov
lods
jno
push
insl
jl
scas
mov
or
sbb
das
inc
clc
cmp
xchg
icebp
pop
jae
adc
cmp
jno
sti
push
pop
inc
mov
sub
aad
fisubl
les
adc
xchg
ret
jg
outsb
jne
and
cmpsl
lret
stos
pop
cmc
push
stos
mov
out
mov
xor
xor
loop
daa
cmp
repnz
int
orl
iret
aas
enter
pop
ret
push
sbb
xor
adc
loopne
sbb
and
cltd
xorb
rcll
lcall
dec
rorl
sbb
faddl
mov
mov
es
mul
xor
adc
scas
daa
and
in
out
notb
xor
push
dec
imul
data16
rcl
add
jle
jmp
sub
psadbw
out
cli
mov
and
imul
xchg
xor
lahf
jp
cmp
icebp
out
in
or
and
pop
jecxz
loopne
add
sub
xchg
sub
sbb
cmp
nop
stos
xchg
test
sbb
adc
sbb
sarb
bnd
stos
and
pop
push
call
inc
outsl
dec
jecxz
sbb
add
decl
jns
push
loope
ljmp
testl
je
das
cli
push
shlb
sbb
sub
test
cmp
lahf
jo
mov
out
xchg
mov
cmc
cltd
xor
xor
movsb
inc
xchg
lret
mov
adc
and
mov
jmp
jbe
lahf
and
push
fildll
mov
cmc
xchg
cltd
push
xchg
out
maskmovq
testl
adc
pop
xlat
imul
lock
xchg
xor
add
jmp
cmc
lss
loop
cmp
daa
xor
jmp
mov
sahf
or
ljmp
lods
or
xlat
cmp
xchg
mov
mov
loop
cmp
arpl
fldl
hlt
mulb
cmp
out
je
aad
sub
sbb
shrb
adc
daa
jg
fisttps
les
int3
cmp
jns
fisttpl
jb
loope
movsl
sub
push
mov
inc
adc
mov
pop
sbb
fdivl
ret
sbb
cmp
hlt
pusha
loope
inc
cmp
js
cmp
lods
and
push
mov
xchg
jl
ds
cmp
gs
push
jne
cmp
add
push
add
sub
in
lcall
dec
jecxz
mov
xchg
loop
sahf
test
psrlw
outsl
pop
rclb
adc
rorb
adc
push
fdivrl
mov
fsubl
push
insl
repz
cmp
sub
test
repz
jle
mov
push
leave
push
aas
pop
ds
pop
aam
jns
leave
adc
jmp
out
insb
mov
aaa
cmp
xor
test
mov
aaa
lock
inc
xor
and
add
inc
dec
addr16
mov
icebp
cwtl
fldt
pop
mov
test
shll
dec
sti
xor
xor
lcall
sbb
and
push
and
imul
into
cmp
cmp
push
lock
xor
ds
dec
cmp
into
test
cli
cmpsb
aam
mov
cmc
dec
or
pushf
les
lret
fistpl
and
mov
movsb
pop
js
mov
dec
fsubr
inc
in
test
sub
es
add
data16
loope
mov
pop
fstl
sub
lock
ficompl
ret
push
xchg
push
sub
popa
push
or
and
adc
pop
clc
add
mov
push
xor
xlat
ficoms
test
aam
sbb
jl
and
popa
fisubrs
add
cmc
pop
add
xchg
sbb
xchg
push
push
or
lods
xchg
lds
jmp
pop
adc
inc
mov
aas
or
mov
mov
pop
push
push
mov
test
inc
xchg
inc
movsl
shl
movsl
movsl
and
lods
push
pop
std
and
loop
out
dec
adc
and
pop
mov
cmp
ret
jl
or
or
xor
mull
into
jb
enter
mov
cmp
xor
mov
jo
std
inc
push
and
das
cmp
in
add
jge
mov
xor
lods
dec
push
jg
mov
xchg
jae
in
push
jmp
adc
pop
sbb
mov
imul
jns
iret
mov
dec
xor
and
mov
jmp
adc
mov
ljmp
sbb
lret
pop
pop
adc
addr16
jmp
mov
pop
adc
dec
jle
cli
dec
inc
cmp
into
jnp
jo,pn
test
stos
mov
fisttpl
movsb
pop
pop
pop
int3
inc
das
test
and
jmp
push
sar
cmpsl
pop
std
mov
cmp
pusha
fisttpll
pop
int3
in
lods
addb
inc
fwait
les
dec
xchg
scas
ret
jmp
add
inc
fstpl
add
mov
cld
mov
or
jb
mov
ljmp
adc
push
add
lret
enter
xchg
push
cmp
or
sbb
add
xlat
out
push
stos
mov
adc
mov
pop
rcll
fstpt
ret
xchg
mov
out
sbb
pop
pop
adcb
mov
jo
push
dec
inc
jecxz
push
pop
push
mov
mov
cmp
test
aad
rcll
add
ds
mov
lahf
test
jnp
push
mulb
jmp
jo
push
cmp
lock
xchg
mov
repz
lcall
pop
ret
enter
xchg
and
repz
dec
stos
outsb
out
sub
dec
mov
add
in
in
dec
mov
sub
dec
jp
ret
test
pop
addb
mov
sbb
in
inc
push
jecxz
adc
ret
pop
push
das
mov
xor
call
lea
roll
outsl
imul
inc
popf
gs
mov
call
push
cmpsb
icebp
pop
jg
movsl
and
or
dec
inc
sti
neg
mulb
movsl
loope
pop
push
mov
sbb
cwtl
inc
clc
pop
sti
fdivr
lahf
push
int
divl
ss
insl
int3
push
jge
loope
fwait
cmp
xchg
insl
jno,pt
xchg
xchg
sbb
mov
cmp
sub
cmc
adc
repz
out
add
testb
mov
int
mov
mov
idiv
lods
mov
jmp
xlat
imul
rorl
or
shlb
fcmovnb
dec
ds
jo
cmpsb
in
jno
daa
sub
jo
mov
adc
push
bound
jmp
and
jns
sub
iret
sub
pop
push
bound
imulb
loopne
dec
dec
dec
scas
movb
fs
and
je
arpl
and
loop
add
or
jne
outsl
sbb
xchg
dec
daa
cmpb
imul
insl
push
std
fwait
pop
xor
out
cld
push
pop
jae
cs
out
cmp
fwait
nop
std
push
xlat
push
cmc
enter
or
inc
inc
add
test
cmp
insb
xchg
js
cli
jmp
sub
je
or
cld
int
cmp
mov
jne
ds
mov
data16
lcall
leave
loope
aad
or
jae
shll
sahf
add
mov
bound
insb
int
inc
xchg
aas
dec
bound
and
xlat
xor
clc
repz
out
inc
repnz
lahf
popf
adc
ret
roll
repnz
mov
sbbb
sbb
arpl
xchg
fisubrl
test
cmc
inc
cltd
mov
and
loope
mov
and
fwait
dec
test
xor
jnp
das
ljmp
ret
jge
push
jne,pn
sahf
pop
cmpsb
int
lock
add
repz
outsl
ds
mov
ljmp
mov
xor
fnsave
cmp
and
dec
or
or
mov
movb
xlat
or
mov
in
lret
xchg
gs
jecxz
in
pop
jnp
sub
fsincos
stos
push
addb
add
data16
in
xchg
leave
nop
stc
icebp
cs
pop
aad
xlat
es
dec
stos
mov
into
popf
lds
shr
les
inc
sbb
scas
jne
mov
stos
ss
into
cwtl
cmc
cwtl
cld
ljmp
ret
mov
popw
inc
xchg
jp
inc
jno
lcall
scas
or
shrl
sub
push
icebp
push
aas
xor
fs
adc
cmpsb
push
xor
test
lret
clc
mov
push
daa
dec
lret
push
push
out
movsl
cmovnp
mov
les
shrb
out
sbb
pusha
inc
outsl
shl
aaa
dec
insb
shr
push
xor
mov
mov
lret
pop
dec
in
cltd
adc
and
push
into
cwtl
test
loop
fldenv
sub
pop
popf
sti
std
mov
add
lods
mov
mov
sarl
stc
cmp
test
or
cmp
inc
dec
adc
rclb
sub
shrl
jecxz
push
mov
cmp
pop
and
add
sahf
enter
mov
insb
inc
mov
mov
adc
mov
xorb
adc
cmp
lods
xor
push
scas
mov
loopne
inc
jecxz
push
roll
xlat
pop
shl
cs
sub
and
repnz
mov
sbb
add
ret
inc
sub
xchg
jecxz
dec
lcall
dec
jmp
adcl
or
in
popf
and
pop
roll
pop
xor
cwtl
lds
into
sub
popf
mov
aad
lret
add
cmp
ds
xchg
mov
cmp
iret
daa
push
dec
add
jae
fimuls
xor
xchg
mov
insb
jo
xchg
test
adc
sub
cmp
lcall
out
add
push
or
xchg
das
pop
lahf
dec
stos
scas
stos
mov
dec
pop
lods
sbb
fisttpl
rolb
jae
ret
mov
jnp
insb
das
xchg
scas
cld
jbe
insb
addr16
hlt
and
mov
jns
and
ljmp
mov
jge
pop
push
mov
dec
call
cmp
enter
call
dec
pop
pop
cmpsl
pop
call
or
sub
bts
mov
mov
incb
ds
dec
mov
add
mov
aas
mov
ds
adc
jnp
scas
adc
mov
call
inc
jb
jnp
test
xchg
sti
mov
jecxz
jp
int
clc
cmpsl
jns
or
mov
mov
dec
dec
dec
leave
pop
rorb
sbb
cwtl
cld
jg
aad
cmp
push
fwait
push
popf
fwait
int
xchg
add
dec
std
mov
sbb
imul
jno
xchg
push
sub
mov
sub
mov
test
jg
mov
lods
mov
mov
and
jno
jmp
lahf
mov
iret
std
das
scas
ljmp
es
add
inc
mov
out
xor
or
push
jns
enter
das
movsb
and
dec
imul
mov
cld
push
mov
test
mov
frstor
std
dec
inc
sub
and
dec
lods
push
daa
mov
push
fwait
mov
pop
sbb
pop
leave
shl
es
cli
dec
add
and
iret
jmp
mov
xlat
fadds
cmp
mov
pop
loope
daa
icebp
add
fildll
mov
push
mov
cwtl
pop
sub
loopne
out
cld
mov
push
cmpsl
arpl
adc
add
inc
cs
mov
jecxz
outsl
ret
pop
lock
and
or
mov
inc
adc
and
dec
jge
mov
scas
push
in
push
cmpsb
adc
aas
and
cmp
dec
icebp
sti
decl
add
bnd
cmp
aaa
jo
xchg
sub
sbb
xor
rorb
out
lret
sahf
xor
leave
add
out
mov
hlt
adc
mov
enter
cmc
jbe
mov
shll
mov
xor
inc
enter
testb
int3
mov
movsl
loopne
daa
mov
fildll
daa
cmp
pop
add
call
dec
lret
jne
pop
subb
fucomi
inc
test
jmp
sub
cmpb
jae
gs
loope
outsl
outsl
js
flds
inc
loope
out
fadd
ja
xor
add
int3
scas
xchg
int3
lret
das
cmpsb
pop
mov
mov
inc
jmp
jo
and
arpl
dec
pop
cmp
jnp
mov
push
mov
test
mov
sub
or
leave
gs
inc
outsl
repnz
mov
inc
test
les
mov
pop
push
rcl
inc
jno
lock
or
add
stc
dec
js
xlat
pushf
dec
gs
mov
in
lock
stos
fiaddl
cmc
push
repnz
sub
and
shrl
xchg
push
inc
subb
dec
mov
stc
lods
inc
add
push
mov
cmp
xchg
jge,pn
sub
negb
idivl
sahf
lock
or
imull
into
xor
inc
inc
jns
mov
subl
xor
stc
loope
stos
cs
repz
sbb
lods
and
lock
ret
push
mov
cmpsb
xor
cltd
cmp
pop
fisubrl
js,pn
push
stos
dec
sub
mov
imul
dec
aas
loopne
enter
sub
mov
dec
mov
inc
mov
push
fildll
push
jmp
arpl
fidivl
sub
mov
add
je
mov
pop
cltd
lods
xor
push
jb
mov
mov
jmp
or
inc
lcall
fsubrl
jg
out
xchg
inc
xchg
jns
xor
test
outsb
lret
loope
sub
dec
bound
movsl
push
iret
inc
jle
lock
int
scas
inc
ds
popa
sub
roll
repnz
gs
test
fs
mov
and
repnz
aaa
jno
jp
into
test
popf
inc
lock
les
mov
pop
pop
and
rorl
jecxz
rcrl
cmpsb
dec
ljmp
ja
dec
out
or
pop
pop
and
insb
sub
test
mov
cmpsl
xchg
or
nop
xchg
push
jle
hlt
cmpsl
mov
cmp
pop
cmp
jno
jae
and
cltd
leave
rorl
push
repnz
xchg
ja
ret
popa
sub
push
shlb
jmp
xor
add
hlt
mov
inc
cwtl
cmpsl
push
mov
jmp
xor
cltd
out
imul
jne
iret
scas
cmp
pop
dec
inc
inc
aam
xchg
pop
les
push
js
hlt
mov
inc
xor
jle
mov
cs
into
adc
sahf
xor
paddusb
mov
xchg
lret
cwtl
imul
push
repz
jg
out
cmp
cwtl
loopne
cmp
mov
adc
out
ljmp
inc
mov
sub
outsl
les
sub
jecxz
js
dec
lahf
sub
push
in
into
repnz
jnp
xchg
fwait
or
mov
cmpsb
leave
cmp
outsl
cwtl
ljmp
test
mov
pop
mov
cmc
jl
jmp
mov
std
or
xor
lods
imul
mov
insl
mov
pop
fildl
scas
pop
out
mov
xchg
les
xorb
push
cmp
jne
out
push
lock
adc
jge
cmpl
cwtl
sub
and
pop
sti
fildl
push
and
repz
in
adc
hlt
std
decl
daa
loop
pop
iret
shrl
push
pop
scas
pop
bound
incl
icebp
jne
push
hlt
test
out
mov
sbb
inc
pop
ja
rclb
adc
cmp
sbb
jb
insl
push
je
lea
inc
dec
and
jae
push
lods
or
mov
roll
pop
cmp
rorb
lret
mov
loopne
inc
stos
fisttpl
push
in
xor
aas
cmp
aad
and
popf
mov
cwtl
xor
loop
out
and
mov
cltd
fidivrs
push
mov
sahf
pop
ficoms
mov
dec
lods
int3
imulb
mov
shl
adc
jns
ds
hlt
aad
mov
push
mov
sbb
mov
jge
bnd
inc
mov
xor
ret
mov
fsubl
icebp
popa
mov
xor
js
test
inc
mov
stc
sarl
cld
mov
out
test
pop
movsl
popf
sbb
inc
push
jns
movsl
inc
stc
lret
push
cltd
lea
lahf
lods
data16
add
cmp
pop
pop
js
aad
adc
or
fidivrs
or
pushf
dec
inc
cmpsb
lds
xchg
loope
data16
repnz
xorl
je
push
xchg
jmp
repz
mov
sbb
popf
das
dec
xor
adc
xchg
push
aad
shl
mov
dec
ds
adc
mov
in
push
clc
add
out
test
mov
sub
xchg
xchg
adcl
cmpsb
jge
sbb
mov
ja
xor
movsb
orl
popf
cmpsl
or
int3
aaa
cmpsl
mov
in
mov
sahf
aas
push
cmp
jbe
and
pop
mov
mov
cmp
fwait
out
and
jnp
insl
mov
pop
sahf
inc
cmp
fs
push
ds
test
iret
inc
pop
cmp
xchg
movsl
push
push
adc
mov
cld
movsb
mov
pop
mov
cmc
out
or
subl
andl
adc
xchg
cmpsb
cmp
jle
xchg
xchg
sub
imul
dec
cs
fwait
pop
fs
loop
adc
xor
or
jo
add
testl
loop
mov
pop
jne
adc
stos
iret
out
jbe
div
adc
cmpsl
adc
int
inc
rcll
lcall
xchg
es
inc
aam
addr16
mulb
shll
jo
insl
dec
sbb
xorl
xor
dec
in
jge
fcomp
sti
stos
out
lock
jno
inc
cltd
cmc
cmp
pop
xchg
jp
sbb
dec
test
push
incb
rolb
lahf
xor
lcall
jecxz
and
push
daa
dec
xorl
add
insl
adc
dec
aaa
int3
inc
addr16
enter
push
xchg
test
iret
pop
mov
iret
outsl
faddl
test
jae
mov
sub
cmp
notl
jecxz
mov
pop
loop
fstpt
mov
mov
rolb
push
push
mov
fwait
jae
sbb
or
jbe
lret
xchg
pushf
xor
jg
pop
adc
popf
xchg
push
fwait
cwtl
ficomps
sub
sahf
sti
inc
adc
add
repnz
in
divb
add
sub
test
movsl
int
or
mov
adc
cmp
jmp
cmp
mov
mov
xchg
test
jge
cwtl
or
ret
push
sarb
movsb
or
and
and
mov
cmp
pop
dec
cmp
xor
mov
cmpsl
xor
aas
mov
test
iret
fisubl
outsl
outsl
cmp
data16
xchg
cmp
and
out
xor
ret
sbbb
ret
mov
inc
xchg
adc
lock
imul
lods
mov
pop
push
dec
sbb
push
addr16
adc
xlat
pusha
mov
out
cmp
cmpl
movsb
pop
xchg
stc
jmp
mov
aaa
mov
pop
hlt
xchg
dec
or
jo
rcrb
push
or
fmulp
lds
adc
cmp
cmp
nop
aaa
xchg
cmp
repz
into
test
add
inc
sbb
ljmp
or
add
mov
push
jecxz
and
dec
fwait
jmp
in
push
das
pop
mov
cmc
xlat
sub
mov
test
fdiv
test
stos
and
mul
mov
xchg
cmp
pop
xchg
jae
or
sbb
loopne
daa
js
jmp
repnz
lcall
xor
in
sahf
das
xor
pop
sub
int
dec
imul
imul
xor
loopne
cmpsb
cmpsl
xor
movsl
inc
loop
pop
and
cmp
xchg
loope
or
test
push
and
cwtl
xorl
xchg
in
cmp
xchg
lods
dec
pop
dec
push
dec
mov
add
lret
test
jmp
std
xor
mov
push
xchg
pop
push
stos
pop
mov
test
push
scas
adc
mov
mov
fstl
fldl
lods
mov
insb
adc
jae
sub
xor
adc
mov
and
xchg
xlat
xchg
fucomp
mov
mov
mov
xchg
inc
or
pop
adc
xor
xor
inc
movsl
mov
adc
push
test
shll
pushl
sub
test
mov
nop
lds
shrb
push
call
in
xchg
fbstp
out
lock
cli
jmp
rcll
pop
fnstcw
mov
xor
jnp
test
sub
ffreep
push
lock
cmp
push
pusha
jno
cmp
bound
and
dec
sub
add
sbb
movsb
loop
stos
adcl
or
mov
cs
addr16
jno
sarl
sti
sub
test
ljmp
add
add
jnp
inc
xchg
adc
ja
lock
stc
cmpsb
jae
fdivp
nop
addb
mov
pop
in
movsl
jno
or
lret
addr16
test
jle
mov
roll
ffree
cmp
fs
mov
sbb
add
and
fdivr
shll
in
or
jbe
mov
adcl
xor
les
cmp
jo
cs
mov
push
andb
popa
jne
inc
int
adc
cmpxchg
test
dec
movsb
push
test
dec
shll
add
movl
cmc
pop
aad
mov
pop
push
or
dec
mov
pop
cmp
adc
lea
fldt
dec
sbb
add
cs
xchg
scas
dec
pop
xchg
add
xchg
jg
leave
mov
popf
mov
mov
dec
add
mov
in
mov
push
cmpsl
int3
call
pop
xor
iret
sub
mov
pushf
adc
int
dec
test
lcall
add
jns
adc
pop
out
mov
fadds
out
and
mov
sahf
adc
sarb
push
inc
jnp
push
and
push
sbb
insl
mov
ja
pop
enter
sbb
mov
out
jg
lret
push
xchg
add
jnp
shlb
into
pop
xchg
insl
test
pushl
cld
fwait
mov
decl
xor
lret
xchg
fcomip
fadds
loopne
aad
adc
sub
adc
imull
xor
or
cltd
sbb
mov
ljmp
inc
ljmp
sti
bound
clc
xchg
lea
xor
jmp
mov
inc
or
jmp
jnp
repz
in
and
ljmp
jg
jne
cmp
movsl
xlat
out
mov
dec
pop
mov
out
push
push
jnp
ljmp
pop
mull
cmc
push
xchg
push
jae
add
test
xchg
cwtl
loopne
js
in
inc
xor
mov
leave
xor
mov
insb
fidivrl
adc
cmp
lcall
pop
adc
loop
cmp
arpl
push
inc
dec
xchg
repnz
cs
test
loope
pop
jne
aas
jg
aaa
jne
fildll
repz
xor
test
loop
pop
clc
inc
pop
daa
mov
mov
pop
jno
mov
xlat
inc
lret
or
cmpsl
xchg
jg
dec
and
ja
mov
sub
mov
negb
and
push
jp
xlat
jmp
xchg
addr16
hlt
or
or
fadd
and
mov
in
inc
ret
mov
push
popa
fs
xchg
and
pop
data16
mov
push
movsb
pop
xor
pop
mov
test
xchg
push
loop
xchg
sti
repnz
or
and
inc
lods
add
inc
aam
rdpmc
jno
inc
mov
inc
imul
loop
jae
aas
adc
aam
cmp
bound
movsb
cmpl
rorl
sbb
mulb
pop
ljmp
stos
sahf
push
js
imul
add
lods
jne
arpl
push
jmp
xchg
out
ret
add
inc
out
sbb
aaa
mov
shlb
xor
es
out
lds
cmp
repnz
pop
inc
cli
mov
push
pop
pop
inc
int
out
cli
mov
xorl
xor
rcr
loopne
lds
je
cmp
repz
push
jecxz
daa
loop
pop
inc
lods
push
in
pop
stc
lock
fcmove
bnd
lds
lock
data16
jp
dec
test
shrl
inc
lcall
inc
inc
test
jae
mov
mov
daa
daa
arpl
hlt
mov
mov
aam
mov
and
fs
andb
lods
loope
pop
jecxz
idivl
cmp
and
std
icebp
add
fdivrs
mov
push
xor
sub
xor
lret
xchg
mov
sub
inc
jb
test
sbb
mov
shll
pop
xchg
repnz
in
mov
es
stos
mov
in
inc
mov
mov
pop
mov
jmp
call
pop
rcrl
daa
push
lock
mov
and
or
dec
das
aam
dec
addr16
or
stos
cltd
sub
jecxz
stos
test
lret
jnp
mov
stc
outsb
cli
pop
pop
add
daa
jle
mov
dec
outsb
mov
mov
and
adc
icebp
and
xor
xor
adc
data16
fwait
btr
mov
dec
shlb
test
popf
fstps
mov
sbb
pop
fisttpl
out
mov
mov
mov
jo
adc
or
mov
int
test
pop
sub
cmpsb
out
fbstp
sub
pop
sub
cwtl
jp
inc
mov
sbb
xchg
add
aas
lret
or
sub
mov
out
aad
rolb
mov
addl
ds
mov
dec
mov
mov
cmp
imul
clc
mov
iret
lds
cmp
out
insb
xchg
out
mov
pop
out
idiv
sub
call
lret
shll
jp
adc
fbstp
iret
add
out
and
or
frstor
mov
push
lret
repnz
xor
nop
or
mov
xchg
fldt
fbld
testb
mov
aam
popa
xchg
jge
ss
movsl
aad
insl
inc
dec
sub
arpl
inc
pusha
in
lcall
nop
pop
mov
scas
inc
notl
sbb
stos
xchg
mov
inc
aam
popf
adc
add
icebp
rcr
les
inc
loope
xor
testb
movb
out
pop
or
inc
mov
sub
push
push
inc
sbb
add
shl
push
and
push
pop
inc
pop
xchg
push
jg,pn
cmp
andl
ljmp
xchg
adc
cs
outsb
fisttpl
lods
xchg
call
lret
stc
pop
xchg
ss
std
fimuls
push
xlat
adc
and
insl
dec
mov
mov
fdivrs
pop
push
icebp
lods
jno
mov
jp
inc
sub
xchg
lahf
or
dec
sub
sbb
cmpsl
mov
cmp
or
mov
push
sbbb
adc
fildl
sbb
add
fsubrp
scas
or
push
bound
xchg
lds
insl
stos
jg
pop
mov
mov
pop
xor
iret
mov
ds
pushf
inc
es
or
xchg
dec
and
add
fmull
jnp
pop
cmp
push
into
stos
add
es
pop
and
mov
cs
fldl
fadd
lahf
cmpsl
cmpsb
into
dec
scas
insb
out
fneni(8087
faddp
stos
outsb
rcll
jle
adc
cmpsl
es
push
jge
push
sub
and
pushf
scas
stos
movsb
lret
push
xchg
push
xlat
rorl
mov
imul
cmp
cmp
dec
adc
lret
hlt
cld
dec
mov
arpl
inc
sub
stos
daa
push
xchg
stc
mov
jle
mov
fists
ljmp
out
dec
mov
sub
jne
cwtl
jns
push
ret
outsb
pop
mov
xor
xlat
add
push
pusha
or
cmp
pop
scas
mov
das
jno
insl
scas
push
insl
lcall
scas
xchg
pop
int3
int
sub
out
idiv
out
loopne
mov
jmp
in
sub
dec
inc
mov
jp
cmp
pop
xchg
cmpb
add
xchg
sub
inc
enter
int3
cltd
testl
repz
ror
pop
shr
or
jmp
data16
cli
mov
popl
cmpl
fisubrl
js
cmp
in
cmpb
sub
daa
and
imull
fadds
xchg
insl
clc
rol
xor
pop
sub
in
cmp
dec
xlat
and
push
inc
inc
sbb
js
or
testb
cmpsb
aam
loope
and
cmpsl
int
pop
mov
scas
rcll
aad
outsl
mov
lret
adc
cli
mov
mov
mov
jmp
xor
add
jbe
lret
and
rclb
mov
jecxz
mov
and
or
fdivs
mov
sbb
lds
and
lahf
shr
fcmovnu
leave
sbb
push
push
aad
add
movsl
jmp
mov
out
out
push
xor
xorl
cmp
push
push
xchg
sti
jo
aaa
sbb
inc
xor
aas
loopne
jbe
aam
push
rorb
and
cli
cmp
push
push
data16
ds
dec
fisttpl
cmp
mov
es
or
add
inc
das
jbe
pop
cmp
mov
add
ficoml
dec
push
push
sbb
movsb
out
rclb
mov
jp
decl
sbb
mov
fistpl
mov
cmpsb
mov
mov
mov
sub
movsb
ja
in
mov
lret
fsubl
js
mov
ds
sub
sub
xor
mov
popf
fadd
hlt
and
push
push
sub
repnz
and
pop
dec
aad
dec
fisubs
aaa
xchg
push
pop
dec
arpl
addr16
add
dec
mov
jne
sub
jb
mov
add
sub
cmp
mov
push
sbb
in
adc
lods
dec
daa
push
jecxz
sbb
arpl
and
adc
inc
addr16
nop
fistpll
mov
inc
push
pusha
xchg
inc
mov
faddl
sub
fsubr
xchg
repnz
daa
xchg
pop
loope
das
xlat
and
jae
mov
rcrb
lods
subb
adc
push
leave
mov
add
fistl
cwtl
bound
fwait
loop
scas
inc
fisttpl
dec
sub
adc
mov
shr
mov
dec
pop
mov
sbb
dec
push
mov
jno
xor
mov
lret
out
mov
sub
and
add
out
sahf
fadds
cmpsl
cmp
and
into
daa
js
cmp
jmp
lahf
xchg
lds
data16
insl
iret
lds
cmp
pop
iret
adc
push
mov
fisttps
pop
incb
out
call
pusha
jle
stos
xchg
pop
inc
sub
ljmp
cmpsb
push
bound
xchg
dec
test
lcall
fisttps
rcrb
mov
push
ss
cmp
or
push
aam
adc
mov
mov
xchg
pop
mov
mov
mov
lcall
jl
sub
push
and
mov
enter
adc
lods
mov
xchg
icebp
and
push
mov
lods
add
pop
jle
sub
cmp
or
inc
mov
pop
cmpsl
cld
iret
sbbb
jb
jnp
or
pop
xchg
jecxz
test
mov
enter
cmp
sub
jge
mov
les
inc
movsl
jnp
lds
iret
cld
sahf
stos
mov
sbb
out
lods
test
adcw
push
hlt
pusha
daa
mov
xor
or
adc
mov
mov
pop
mov
pop
sub
jo
out
and
pusha
or
ret
aaa
xchg
inc
or
jae
jbe
mov
arpl
dec
mov
fs
pop
mov
nop
push
in
mov
pop
cmp
repz
mov
outsb
lds
sysenter
inc
lahf
cmp
stos
lea
add
daa
jnp
fcomps
cwtl
ja
adc
movsb
jg
sub
leave
mov
cmp
adc
adcl
jge
mov
aam
out
sub
cli
cmp
push
pop
shl
cs
mov
push
repz
out
clc
or
jl
and
mov
adc
rcrb
sub
jp
pop
pop
mov
fcomip
ret
sub
out
xchg
or
js
clc
lods
add
inc
add
hlt
sub
sub
dec
adc
and
inc
test
movsl
sbb
pop
addr16
out
push
jb
dec
pop
lcall
jo
in
jmp
hlt
cmp
adc
das
fbld
notl
xor
je
scas
cmp
push
xchg
xor
test
lods
or
scas
cli
xchg
scas
and
mov
insl
sub
jbe
nop
cmpsb
and
shr
cmpl
ljmp
pop
mov
pop
popf
ja
imul
je
out
cmp
and
jno
jnp
jg
jnp
dec
andb
xor
jecxz
movsl
jl
out
lahf
and
cs
pop
enter
xchg
fdivrl
in
or
imul
cs
xchg
cmpsl
sbb
in
and
xor
adc
add
jl
inc
mov
pop
scas
mov
aas
cmp
xor
rcrl
insb
add
xor
push
cmp
cmp
je
lock
ret
or
mov
jns
jg
xchg
outsb
stos
sbb
inc
push
xchg
xchg
or
jecxz
mov
out
imul
imul
xchg
fwait
adc
loop
jecxz
sub
lock
movsl
arpl
jo
mov
xchg
mov
popa
mov
stos
sub
add
xlat
frstor
rcll
pop
ss
push
hlt
fisubrs
in
mov
aad
inc
loope
int3
popa
movsb
push
std
mov
outsl
bound
mov
inc
and
sub
dec
ljmp
test
lret
dec
mov
mov
and
cmp
jo
inc
scas
fmulp
std
aaa
adc
sahf
fdivrp
rorb
imul
add
imul
lds
loop
cwtl
out
lea
in
in
les
adc
xor
jne
lock
or
xor
js
lcall
xchg
fs
xchg
aas
test
cmpsl
dec
push
cmp
cmp
and
dec
jo
sbb
adc
mov
adc
cmp
shll
xorl
push
mov
and
mov
sub
xor
lahf
sbb
dec
cmpsl
mov
push
pushf
xor
ds
pop
push
loope
mov
add
stos
pop
pop
mov
inc
cmp
popa
mov
int
lock
jp
lds
mov
ret
ret
mov
pop
mov
dec
and
mov
xor
push
es
shl
xor
mov
sti
aaa
inc
and
hlt
in
mov
or
mov
pop
pop
xorl
push
xorl
aad
jns
lahf
jecxz
lock
inc
push
ret
repz
rorb
push
in
add
dec
pop
and
lret
in
inc
data16
jbe
inc
stos
data16
inc
adc
xchg
std
aaa
cmp
call
or
fcmovne
adc
nop
dec
movl
les
adc
push
call
pushf
int3
push
pop
inc
cmp
mov
cmp
enter
addl
out
repnz
roll
inc
divl
lods
enter
test
adcb
loopne
and
push
jno
mov
movsl
pop
add
push
out
ja
pop
pop
ret
gs
cs
push
mov
xchg
or
pop
add
nop
mov
inc
xchg
pushf
repz
ds
adc
popw
in
ljmp
fiaddl
repz
dec
or
hlt
xlat
push
stos
test
or
stc
inc
adc
stos
xchg
jae
jmp
mull
outsb
mov
js
ret
int
mov
inc
mov
insl
and
sbb
jmp
cmp
aaa
pop
cmp
adc
es
cmc
sub
int
cmc
pop
xor
sbb
pop
cwtl
ds
inc
scas
jl
ss
mov
ljmp
cmp
frstor
xchg
rclb
jmp
mov
xor
repz
push
lss
ljmp
leave
pop
ror
push
aam
decb
mov
mov
xchg
and
sahf
sbb
out
adc
clc
imul
inc
mov
dec
cld
ret
mov
mov
cmpl
bound
xor
and
stos
sarw
les
fcoms
cmp
xchg
clc
les
popf
sbb
enter
adc
mov
insb
shl
mov
shrl
ljmp
lods
add
or
sbb
int3
pop
popa
lock
add
test
or
insl
out
out
push
mov
adc
xor
in
add
lds
sahf
je
inc
aam
jle
fsubs
dec
repnz
ja
data16
xchg
add
push
cltd
aad
adc
or
mulb
cmp
and
andl
push
movsl
sbb
nop
add
add
sub
roll
pop
pop
jnp
cmp
jmp
mov
mov
popa
add
mov
pop
cltd
mov
xchg
call
mov
fbstp
pop
stc
fwait
outsl
mov
lock
cmpsl
ret
push
out
xor
sub
add
mov
add
cld
in
xchg
mov
jl
xchg
or
xchg
dec
movsb
ret
fcomps
clc
add
push
imul
adc
add
sbbb
gs
jae
fwait
mov
inc
sub
push
jecxz
sub
push
addl
or
push
fidivs
cmpsb
lea
jbe
inc
jbe
cmp
scas
adc
push
xchg
or
inc
mov
rcrb
lds
fucomp
xchg
test
add
sub
and
jae
and
jb
or
add
and
mov
sub
int
out
pop
pop
sub
mov
mov
add
rorb
jno
xor
adc
jp
adc
scas
call
xor
lahf
mov
cmpsl
cmovge
mov
hlt
sub
scas
out
mov
push
inc
aaa
cmp
pushl
pop
pop
outsb
xchg
sbb
cmc
cmp
inc
in
jno
stc
cs
xor
movsl
scas
mull
mov
xor
ds
sbb
push
lea
cmp
iret
mov
push
and
mov
test
jl
push
test
xor
sub
jmp
nop
mov
mov
push
nop
pusha
rcr
or
scas
inc
add
out
mov
loop
scas
lahf
and
fs
and
sbb
xchg
xchg
scas
jbe
push
popa
es
mov
jbe
or
movsb
ja
sub
push
out
cmpsl
pushf
sub
jb
adc
jecxz
rcrl
ds
movl
cmp
add
cwtl
std
or
adc
ret
jnp
aam
cmp
sbb
push
xor
push
pop
push
cmc
ds
inc
loop
cmp
mov
fimuls
nop
push
cs
mov
rcl
jp
pop
fcmovnbe
add
cmp
jne
jae
sbb
pop
scas
push
fisttpll
pop
adc
lock
add
test
xchg
jge
sbbb
nop
daa
int3
xchg
mov
jae
mov
andl
and
inc
lock
adc
xchg
adc
sub
mov
aam
stos
and
fisttpl
xchg
repz
push
gs
aaa
cs
mov
loop
stc
jnp
mov
aam
icebp
mov
xchg
mov
mov
test
bound
xchg
adc
pavgw
pop
or
std
xchg
popf
jecxz
push
testb
mov
sti
repz
jnp
insb
aam
mov
jge
dec
lea
mov
shrb
inc
adc
lahf
inc
lock
pop
jp
jno
test
in
stc
fisttps
cmp
pop
xor
inc
lcall
mov
add
rorb
dec
inc
dec
sahf
push
test
and
dec
and
dec
and
popl
mov
roll
pop
or
adc
or
lret
loopne
sar
mov
mov
dec
sbb
pusha
xchg
xor
gs
pop
sub
push
mov
rcll
and
pop
dec
scas
xchg
inc
shlb
lods
setl
pop
data16
pop
out
jae
jnp
cmp
push
in
lahf
xor
in
adc
cmp
jmp
fildll
rclb
mov
clc
jno
pop
sbb
add
add
or
hlt
retw
popa
sub
imul
lock
xchg
nop
xorb
ds
sub
mov
dec
jmp
movsb
fcompl
xor
xor
or
sbb
xchg
sub
xor
cli
mov
cli
inc
sti
mov
mov
arpl
cmp
mov
xor
mov
cwtl
addr16
sbb
adc
inc
mov
fidivrs
mov
add
xor
es
sbb
mov
xchg
pop
push
or
cltd
shlb
mov
cmp
mov
cmp
outsl
or
aas
jmp
das
or
enter
test
push
sub
fsubl
xor
cwtl
andl
aas
or
pop
addb
mov
cld
pop
sbbl
jae
push
or
stc
sbb
movsl
dec
pop
inc
mov
jp
sub
cmp
jno
decl
movsb
cmp
mov
xlat
adc
and
lcall
es
incb
inc
lds
or
pop
push
in
dec
scas
test
pop
mov
div
testb
inc
pop
inc
push
sahf
xchg
xchg
popa
xchg
mov
pop
push
lret
shl
sbb
jbe
cwtl
mov
push
repnz
inc
jl
adc
test
cmp
addl
sub
daa
call
sbb
cmp
jle
cmpsl
or
gs
push
xchg
sub
dec
add
inc
add
repnz
lret
es
mov
jns
sub
push
je
push
xchg
vcvtpd2dqy
fimull
clc
rcr
scas
je
mov
mov
mov
ret
sbb
into
xchg
inc
xor
mov
mov
sub
xchg
lea
shrl
shr
fs
jno
icebp
push
pop
or
in
in
mov
jo
out
fisttpl
lock
jecxz
leave
mov
mov
subl
lret
lea
or
adc
insb
mov
sbb
pop
out
lahf
lcall
jb
in
adc
call
or
lock
or
xor
inc
pop
sub
sahf
mov
int3
jg
scas
test
jb
xor
lret
mov
pop
mov
xor
std
and
cmpsl
sub
mov
sbb
push
insl
ret
push
inc
fisttpll
loope
xor
sbb
aad
dec
in
adc
dec
push
inc
jecxz
into
jno
or
xchg
ret
cmc
shl
ret
scas
push
loopne
push
test
js
lods
es
mov
ret
mov
sbb
and
movsl
insl
sbb
int
or
xchg
stos
pop
inc
sub
jb
and
cmp
int3
pop
ljmp
xchg
movq
sub
mov
add
sbb
cmp
cltd
test
xchg
cli
leave
xor
jecxz
out
clc
mov
xorl
scas
sbb
mov
cltd
lock
loop
add
aas
ret
mov
clc
jg
cli
mov
and
and
mov
pop
push
mov
orb
cld
sbbl
sub
sub
rorl
mov
dec
cmp
and
mov
fiadds
sti
or
push
adc
push
mulb
mov
jl
inc
lahf
xlat
adc
push
push
repz
push
fcmovnbe
push
push
jg
popa
and
gs
js
sbb
jmp
ret
sub
aad
and
push
mov
sbb
adcb
push
test
inc
push
bound
sub
jmp
stc
jnp
sub
xor
inc
fidivs
imul
out
push
cmp
push
add
mov
push
out
mov
add
subl
stc
jmp
xchg
aaa
or
out
mov
clc
iret
cmp
and
sidtl
paddw
into
inc
loop
push
push
mov
cmp
inc
adc
fwait
or
mov
cmp
ss
lret
les
lret
psubq
jb
fdivrs
xor
jl
jge
test
sub
dec
inc
scas
cltd
les
inc
flds
ljmp
add
bswap
pop
lret
mov
aam
push
test
sub
enter
out
mov
stc
jns
adc
fistps
jns
jle
xchg
in
cmp
mov
cli
jb
stos
xorb
mov
jg
adcb
push
lods
pop
or
push
sub
cmp
test
cmp
sbb
mov
pop
ret
xchg
lods
xchg
sahf
ficomps
xor
test
jmp
bnd
fs
adc
inc
adc
fpatan
jecxz
and
mov
jl
pop
mov
jl
and
out
jne
aas
sub
cmp
aad
jge
mov
fldcw
cli
jns
stc
mov
lods
jmp
mov
in
xchg
je
clc
frstor
add
fsubs
std
out
xchg
push
dec
enter
xchg
xchg
jno
push
pop
das
sbb
shrl
movsb
sbb
cld
mov
push
fprem1
jecxz
pop
pop
shl
in
jge
or
cmc
lcall
gs
inc
mov
cmp
xorl
cmp
shlb
andb
int
jmp
jb
cmc
or
sahf
daa
push
mov
xor
iret
jb
rorb
ror
lods
push
adc
mov
mov
xchg
sub
mov
and
jo
adc
andl
xchg
repnz
fildll
cs
sbb
or
xor
mov
adc
cmpsb
pop
adc
adc
ds
dec
test
cli
mov
imul
sub
sbb
or
xchg
in
cmp
arpl
push
ret
pop
lret
inc
mov
or
jmp
push
ret
cmc
out
lea
inc
test
push
in
sub
xchg
cmp
push
push
or
sbb
jle
cmove
push
mov
cmp
lods
mov
sub
mov
mov
add
cmp
data16
sub
mov
fstpt
aas
ret
sub
nopl
or
jg
leave
cmpsl
lock
in
xchg
test
divb
cmc
mov
jb
push
push
stc
jnp
inc
push
movsl
dec
pushf
mov
lcall
sbb
lods
adc
ret
fs
dec
cltd
loopne
cwtl
dec
lock
clc
mov
out
xchg
andb
sbb
inc
sarl
icebp
data16
sbb
dec
ja
pop
push
mov
shr
ljmp
and
xchg
adc
fwait
enter
jg
clc
dec
stos
jbe
add
push
das
sahf
xlat
adc
daa
jbe
aam
or
ret
sbb
xor
fldl
movnti
rorb
shlb
imul
xchg
sbb
enter
and
cmc
jmp
mov
inc
fxtract
jp
decl
jle
xchg
mov
pop
sub
jno
push
mov
aas
in
int
cmp
adc
addr16
imul
and
jae
cmp
dec
ja
add
pop
or
inc
loope
push
ret
pop
movsb
js
rclb
mov
push
fdiv
mull
ret
outsb
shlb
test
idivl
hlt
mov
or
cmp
and
imul
pop
in
popf
imul
clc
adc
repz
jae
pusha
inc
mov
popf
mov
clc
jne
test
ds
icebp
pop
and
jmp
lahf
popa
xchg
cmp
punpckldq
int3
or
das
subl
sti
daa
bound
inc
sbb
mov
aas
xor
jb
cmp
iret
lret
pop
push
sbbb
jno
rcl
cs
out
jae
fnsave
mov
jns
sbb
popa
adc
stos
inc
rcll
int
imul
std
and
shl
rcll
cmpb
pop
in
mov
lahf
push
repnz
data16
movsb
mov
je
jmp
pusha
bound
sbb
popf
jecxz
cmp
lock
fmuls
je
ret
or
jnp
dec
enter
pop
sarl
push
incl
enter
pop
ret
inc
std
popa
mov
leave
add
pop
mov
xchg
mov
fdivs
mull
mov
xor
sbb
sub
push
mov
push
lret
push
push
movsl
sbb
int3
dec
ret
cld
dec
ret
imulb
inc
fsubl
inc
cmp
push
pop
std
xor
cmp
sub
mov
decl
pop
mov
icebp
push
clc
insb
jle
xor
adc
sub
dec
fcmovb
jbe
push
sub
and
ljmp
mov
xor
xor
jmp
les
mov
fstpl
stc
mov
ss
inc
test
push
cmp
repnz
mov
jle
ss
shll
mov
or
or
repnz
jbe
aam
lret
and
mov
dec
mov
enter
outsl
mov
pop
and
les
pop
mov
xor
pop
xchg
dec
std
jnp
lahf
push
sub
aaa
inc
cmp
aas
and
in
dec
lret
test
int3
xchg
jecxz
rcrb
jns
lods
xor
js
jae
pop
subl
adc
pop
mov
scas
arpl
imul
outsb
and
inc
and
sub
lea
push
push
and
add
test
sub
sahf
lcall
adc
mov
xor
sub
imul
lods
dec
push
mov
add
bound
xor
inc
and
xlat
sahf
sub
inc
cmpsl
dec
je
push
inc
mov
into
and
movsl
incb
fidivrs
mov
push
stc
dec
ret
jp
fcmovnu
enter
jecxz
xor
in
pushf
shll
mov
and
popf
or
sbb
adc
inc
sbb
aam
cltd
lcall
sbb
push
xor
mov
andb
pushf
and
or
adc
pop
adc
dec
push
ffree
lret
fistps
mov
mov
xchg
xor
cmp
ret
xchg
xchg
sub
cld
inc
dec
add
push
adc
push
pop
sahf
cmp
dec
or
aam
pop
and
std
int3
lahf
clc
test
and
sbb
sub
ret
mov
fildll
aam
lcall
sbb
cmpsl
ret
aam
jg
xlat
out
jnp
pop
jmp
add
sar
dec
popa
jge
imulb
or
or
xchg
notl
jl
push
nop
mov
cmc
and
subl
scas
out
xchg
iret
in
sbb
popa
call
idiv
lock
sub
or
xor
add
cmpsb
shlb
js
adc
hlt
icebp
adc
mov
testl
rcll
sbb
push
es
sbb
pop
cmp
sbb
sub
int3
adc
adc
inc
mov
pop
iret
pop
daa
mov
out
loopne
das
sbb
inc
cltd
ret
fstl
mov
fldl
adc
fxch
add
sbbl
push
sbb
cmp
out
repnz
dec
dec
push
mov
jns
lock
xchg
mov
mov
pop
cli
dec
in
leave
shll
data16
add
push
lea
dec
xor
out
sub
push
fistpll
out
xor
std
out
call
outsl
in
push
enter
pop
push
pop
pop
je
lds
repz
je
sbb
xchg
movl
fidivrs
les
lret
lds
pop
inc
sub
jnp
mov
add
dec
mov
xchg
stc
in
lahf
js
push
in
lret
xchg
stos
mov
dec
push
lds
popa
daa
je
mov
in
adc
mov
out
and
aas
pop
cmpsl
cmp
popf
mov
shl
xlat
and
mov
out
mov
lcall
add
enter
sub
mov
scas
jp
dec
in
aaa
pop
imull
xchg
or
repz
mov
push
and
js
std
leave
adc
or
or
mov
xchg
xchg
icebp
add
and
fsubl
lods
lahf
paddd
js
flds
and
movsl
adc
iret
cmp
outsb
xchg
cmpsb
cmp
repnz
std
fcmovnbe
xchg
adc
inc
leave
xor
mov
sub
rcll
cmp
cli
jl
repnz
dec
and
cltd
push
cmpsl
popa
cmp
mov
icebp
cmpsb
mov
pop
or
cmp
insb
arpl
mov
mov
lea
adc
mov
pop
lahf
xor
cmp
jmp
ret
cld
or
daa
add
das
push
cmp
je
int3
pop
scas
ret
fisttps
aad
repz
lret
syscall
test
testb
xlat
daa
out
imul
das
add
into
xchg
or
jmp
imull
adc
sbb
ss
ret
cmp
loop
add
pop
fistpll
adc
pop
lcall
cmc
sub
loope
mov
cmpb
push
je
mov
pop
out
leave
xor
hlt
dec
push
pop
and
repnz
js
or
icebp
pop
lds
pusha
cmp
aaa
enter
mov
add
popa
push
fs
adc
movsb
out
sub
xor
add
in
repz
jb
mov
adc
iret
cli
sbb
and
push
outsl
cmp
lret
adc
test
test
xchg
pop
mov
loop
adc
inc
adc
push
call
sub
repnz
imul
mov
inc
mov
incl
sbb
mov
mov
test
mov
jle
das
cmp
and
push
push
sub
subb
xor
stos
push
fsts
mov
cmp
push
lock
mov
popa
lcall
fisubrs
movsl
sbb
dec
sub
dec
adc
adc
stos
test
inc
aas
das
mov
push
es
lds
xchg
test
jns
in
cmc
je
cs
push
imul
cmp
inc
fwait
aad
jae
and
jns
and
add
cltd
inc
cmpsl
outsb
pop
adc
cmpsl
fldenv
in
sub
xlat
fisubrs
pop
int
and
pop
mov
jg
mov
test
fisubs
mov
ffreep
and
sbb
xchg
ds
adc
movsb
xor
outsb
lock
or
ds
dec
bound
pop
dec
call
mov
sbb
or
or
mov
and
adc
mov
jb
xor
in
stos
jb
add
xor
outsb
jno
clc
cmp
leave
add
xor
dec
xor
js
mov
and
jbe
pop
cmp
ds
stos
or
mov
aam
cltd
xchg
cwtl
decb
dec
out
mov
cmp
jmp
scas
push
rcll
dec
inc
push
insl
dec
testl
aas
push
or
scas
push
add
and
xchg
jp
mov
rorb
push
jmp
push
scas
sbb
cli
mov
push
je
pop
sbb
push
mov
movsl
sbb
gs
xor
push
pop
test
sahf
push
scas
ffree
mov
repz
or
jb
and
lods
mov
ret
cs
add
out
pusha
lret
ret
clc
dec
and
int
out
cmp
dec
pop
xor
subl
cmpsl
arpl
mov
lods
orb
daa
into
enter
cmp
cmp
fadds
call
mov
scas
filds
test
outsl
mov
inc
and
js
and
cmpl
push
pop
das
je
mov
cs
or
cmp
ds
sbb
add
std
mov
and
xlat
sbb
cmp
mov
test
cmpsl
cld
cmc
adc
sbb
pop
dec
adc
dec
pop
adc
and
ret
mov
push
or
sahf
movsb
bound
push
cwtl
jecxz
mov
das
mov
jmp
test
in
leave
rcrl
adc
pop
sub
adc
shrb
clc
insl
ds
out
jl
inc
or
inc
adc
pop
or
out
push
add
cld
imul
aaa
dec
jb
push
sbb
dec
push
mov
mov
mov
inc
pop
cld
add
cltd
out
push
scas
mov
dec
test
inc
or
into
stos
jp
test
and
mov
cmp
adc
mov
rcll
fnstsw
insb
das
sbb
in
ljmp
sbb
pop
scas
mov
pop
imul
xor
and
cltd
xlat
mov
jmp
xchg
mov
dec
cmp
insb
mov
cld
fstpl
loope
xlat
movsl
jns
sub
cs
or
inc
or
insl
inc
lea
cmp
scas
and
loopne
xchg
xchg
popa
dec
sbb
xchg
test
and
push
sub
fcmovbe
pop
iret
pop
aas
imul
js
clc
out
push
sbb
add
mov
call
cmc
pop
lret
rcrb
je
cmpsl
add
inc
dec
pop
imul
orb
cltd
fbld
loopne
inc
xor
mov
sbb
jbe
dec
sbb
mov
add
mov
and
jbe
dec
jecxz
pop
adc
gs
movsl
mov
movsb
lds
push
xchg
enter
mov
ss
addl
movsb
inc
xchg
mov
and
cmp
icebp
or
xchg
fs
in
stos
push
add
sbbb
out
or
andl
cmp
jns
xor
or
bound
mov
mov
add
in
jnp
jns
arpl
leave
lahf
rcrb
in
push
cmpl
xor
dec
push
lcall
xchg
adc
lods
sub
add
pop
cmp
jge
loope
in
addl
stos
sahf
fnstsw
push
jbe
or
rcll
stos
ret
mov
mov
sub
xchg
mov
out
scas
cmp
js
xor
cmovp
xor
cltd
fsub
fidivrl
dec
and
test
data16
dec
ds
subl
insl
and
int3
addb
cltd
cmp
jne
fbstp
ret
mov
stos
imul
cmp
scas
sub
push
icebp
xor
or
jae
adc
fsubrs
les
xor
rdmsr
nop
ficoms
out
scas
inc
shlb
mov
es
popa
fisttps
xchg
scas
daa
sub
shll
push
cmp
ret
imul
mov
lods
subl
xchg
movsb
pop
cmpsb
lea
and
out
scas
pop
sub
mov
sbb
mov
cmp
mov
clc
imul
push
mov
jo
repnz
push
add
jno
and
sbb
outsl
ss
icebp
pop
dec
xchg
mov
jle
fsubrl
inc
in
mov
mov
hlt
iret
stos
cmp
jmp
mov
cld
gs
jae
and
rcr
lods
mov
mov
jl
fstp
fistpll
adc
fdivrl
mov
or
dec
testl
scas
leave
pop
fs
push
and
lods
imul
dec
jbe
clc
adc
xor
shrb
fbld
jl
sub
test
and
mov
sbb
stos
mov
rcl
xchg
ret
int
dec
adc
sbb
push
insl
lcall
mov
pop
mov
xchg
push
test
cs
jecxz,pt
mov
mov
dec
cmpl
lahf
xor
and
or
sbb
outsb
add
push
xor
mov
daa
push
xchg
jge
jno
sbb
adc
inc
into
jp
ret
out
mov
or
pop
lret
cmp
test
and
std
sar
rcll
incb
daa
push
lds
mov
mov
push
ret
jb
and
pop
sahf
xchg
sti
enter
mov
jge
stos
or
cmp
test
xchg
popa
push
adc
cmp
cld
inc
push
cmp
or
xchg
cmpsl
adc
shlb
test
mov
push
fadd
inc
imul
mov
movsb
mov
add
cmpsb
sub
daa
fistpl
adc
inc
add
lahf
xor
pop
push
add
push
fists
mov
out
mov
sti
subl
and
mov
push
into
hlt
test
and
xor
dec
push
inc
vshufps
jb
jmp
fcmovnb
jmp
mov
mov
jae
mov
loopne
int
dec
xor
jnp
fistpl
add
jl
push
mov
lds
das
filds
aaa
rcll
out
push
bound
dec
outsl
cmp
mov
rorb
cmp
push
leave
inc
sub
xor
rcll
inc
jae
and
mov
rolb
int
lods
push
hlt
and
sub
inc
push
or
xor
lret
outsb
mov
test
push
add
pusha
test
stc
and
out
es
push
daa
cltd
cmp
pop
or
mov
push
pop
pop
in
into
out
sub
jecxz
mov
je
sub
mov
lock
fldl
lds
call
inc
pop
das
xor
jg
test
mov
inc
cmpsl
pusha
ficoms
push
stos
js
ds
adc
into
ret
das
aas
pop
add
cmpb
int
arpl
sub
xor
sbb
testb
aad
push
call
std
jns
sub
hlt
lods
call
dec
adc
mov
mov
mov
sub
push
mov
dec
adc
pop
cltd
imul
leave
add
sub
pushf
lea
iret
loop
call
or
pop
xchg
movsl
cmp
and
sub
out
pop
testl
pop
cmpsl
and
push
fisttpl
bound
sahf
push
insl
push
xor
push
rclb
dec
mov
subb
mov
insl
adc
fdivs
punpckhwd
mov
sub
xchg
cmp
mov
idiv
sbb
push
push
das
dec
decl
data16
icebp
mov
aaa
cmc
xchg
pop
cmp
fimull
shll
out
pop
mov
les
xchg
xor
mov
in
fucomi
daa
push
or
sub
popf
int
lret
xor
cmpb
cmp
imul
adc
push
xor
inc
cmpsl
movl
dec
cmpsb
xor
mov
xchg
out
arpl
jmp
xchg
data16
decb
mov
inc
add
loope
fisubl
ret
std
insl
xor
add
jge
dec
mov
das
add
ljmp
mov
mov
sub
popl
xor
es
fmull
notb
push
pop
pop
and
stos
call
sub
mov
xchg
add
sahf
je
add
or
cmp
adc
cmpsb
and
adc
hlt
xchg
les
stc
bound
out
jns
repz
or
jb
int3
and
inc
shlb
xchg
mov
adc
xchg
lock
push
cs
push
add
jnp
jmp
cmp
imul
mov
add
inc
sub
xor
test
xchg
or
lods
add
ret
int
shrl
inc
in
rep
lods
or
push
inc
adc
stos
xchg
int3
sub
fstps
call
cmp
mov
mov
push
cmc
push
mov
setno
lods
cmp
ds
enter
sbb
lcall
mov
js
cmp
jns
dec
lcall
sbb
imulb
rorb
push
aam
arpl
rorb
fnstsw
in
test
adc
lcall
int3
and
add
or
test
xchg
pop
xor
jbe
imul
test
mov
push
adc
and
pop
and
mov
xchg
repz
pop
stos
jecxz
adc
aam
lea
cwtl
cld
loop
sub
or
mov
mov
inc
jmp
adc
pop
call
fiaddl
sbb
cmp
push
in
sahf
push
int
add
inc
jge
addr16
push
arpl
mov
pop
into
push
inc
xchg
xchg
inc
xchg
push
lods
dec
add
mov
sbb
lods
inc
in
repz
in
add
int3
pop
or
es
push
in
xor
jecxz
xor
xor
pop
dec
push
imul
mov
imul
jmp
mov
aas
cs
mov
shll
stos
lds
dec
xor
xchg
rclb
xor
psrad
andb
sub
adc
int3
mov
sub
adc
mov
jmp
sti
hlt
ret
jb
inc
fistpl
adc
push
orl
mov
xchg
sub
fcomp
mov
and
jecxz
mov
add
pop
fidivrl
adc
jno
scas
cmp
pop
icebp
add
push
lcall
lds
and
mov
cwtl
fiadds
add
leave
xchg
inc
and
ljmp
fs
xchg
add
test
mov
iret
xor
xchg
pop
push
fptan
int
cs
push
mov
in
in
stos
jmp
and
dec
mov
out
push
mov
sbb
imul
push
adcl
push
sahf
push
lock
inc
and
mov
imul
hlt
frstor
sbb
aam
ret
ds
sub
cmp
cli
xchg
push
cmpsb
mov
iret
sbb
js
jmp
sarl
clc
in
popf
dec
testb
jae
xchg
out
xor
ja
dec
add
fsubp
sub
cmpsb
in
lock
xchg
mov
repnz
or
xchg
fdivp
aad
xorl
aad
cltd
in
mov
in
stos
adc
sbb
mov
rolb
mov
jb
mov
out
mov
cs
loop
cmp
xor
jg
inc
xchg
dec
clc
push
and
test
cmc
mov
jp
xlat
lods
and
addb
adc
cmp
mov
pop
int
imul
jecxz
dec
mov
scas
xchg
mov
sbb
loopne
adcb
mov
jecxz
inc
scas
sahf
dec
xlat
loopne
jge
sahf
sub
jmp
jo
loopne
pop
jp
pop
sub
imul
mov
dec
in
iret
andb
out
roll
jge
mov
cmc
adc
mov
stc
cmc
mov
sahf
test
std
sub
xchg
testl
xchg
push
pop
ljmp
hlt
push
lock
push
jl
js
je
jbe
hlt
adc
xlat
enter
pop
add
sub
mov
push
adc
xchg
les
movsl
sbb
jb
jns
and
popf
jecxz
dec
cwtl
jmp
cs
cmpsl
repz
lcall
inc
and
adc
sahf
xchg
decl
ror
sub
sub
lcall
dec
popf
xor
rorb
push
or
ja
inc
popf
fwait
in
sbb
add
dec
adc
mov
add
loop
in
shll
fincstp
dec
jp
rorl
or
cld
das
pop
rol
hlt
outsl
pop
pop
sub
and
add
xchg
sub
jne
jp
stc
mov
mov
cmp
aaa
ss
push
in
int3
int3
add
hlt
fistpll
lods
clc
adc
and
rclb
xchg
xchg
sub
lods
pop
repz
add
fwait
mov
adc
sbb
je
cld
add
or
ds
bound
push
sub
adc
push
mov
sbb
and
lock
shlb
jmp
jmp
mov
inc
add
stos
sub
jge
inc
inc
decb
ds
mov
stos
push
sub
fsubrs
stos
and
jmp
stos
in
cltd
sbb
xlat
shl
jnp
lea
clc
jns
cltd
xchg
mov
stc
dec
push
or
lds
fstpl
and
out
push
mov
xchg
outsb
gs
mov
arpl
clc
hlt
insb
gs
imul
lahf
movsb
out
test
mov
add
clc
xchg
mov
dec
pop
sbb
sub
cmpsb
xchg
sbb
and
xchg
xchg
stos
lret
pop
in
ret
aas
fisubs
sub
call
xorl
cmpsl
pop
push
out
shr
hlt
xlat
in
popa
cwtl
daa
shll
push
and
jbe
inc
mov
mov
push
jb,pt
sub
mov
adc
jns
sbb
jnp
mov
xlat
xor
sub
out
imul
jnp,pt
jbe
rol
sbb
xchg
pop
cmc
mov
jecxz
mov
mov
add
and
jp
push
mov
jns
pop
scas
xchg
movsl
and
cwtl
dec
xchg
pushf
and
xor
pusha
fwait
xor
mov
pop
ret
roll
out
mov
pop
jmp
sub
sbbb
push
mov
ret
inc
test
cmc
and
push
and
sbb
hlt
mov
and
mov
scas
sub
and
dec
lock
stos
jb
mov
pop
icebp
mov
daa
mov
fildll
sbbb
das
lcall
push
mov
ljmp
mov
mov
into
jnp
shlb
lea
and
insl
mov
fimuls
dec
orb
aad
je
imul
out
ljmp
mov
cmc
and
aam
daa
cmp
fwait
push
loope
pop
loope
push
mov
sbb
iret
mov
test
fisttps
nop
stos
mov
add
out
testl
and
loope
stc
and
adc
pop
xlat
adc
std
cld
ljmp
data16
decb
int
ret
andb
xlat
and
xor
lret
jo
and
lahf
inc
sahf
dec
push
mov
xchg
daa
xchg
lret
sbb
and
pusha
xchg
scas
ds
movsl
jecxz
mulb
xchg
xor
mov
jge
nop
xchg
cmpsl
stos
cmp
int
dec
lret
sub
sbb
jnp
or
jb
aas
lret
sbb
filds
cmpsb
aaa
adc
dec
push
in
pusha
sbb
mov
push
push
cmpsb
or
jg
lds
sub
testl
jns
clc
mov
cmpsl
mov
add
mov
jmp
add
ss
std
scas
lea
dec
notb
push
popa
das
fstps
push
fidivs
call
pop
popa
leave
xchg
mov
sbb
cld
xchg
jnp
int3
xchg
or
push
cli
popa
dec
out
lret
jle
or
rorl
fisubrl
mov
jno
lds
in
dec
jne
inc
dec
add
sub
xor
jbe
jno
fs
and
std
cmp
mov
sub
insb
sub
sub
inc
mov
popf
inc
jl
shl
and
decb
add
sets
lods
fwait
pusha
sub
in
or
loope
sahf
lret
xchg
pop
sahf
adc
jmp
ds
xchg
cli
xchg
or
insb
movsl
or
sbb
sub
xchg
jbe
sub
mov
dec
or
xchg
insl
jle
cmpsb
push
scas
dec
sbb
shlb
popa
movsl
dec
mov
stc
icebp
mov
pop
xchg
pusha
add
outsl
mov
add
push
mov
push
aam
cs
nop
cmpsl
ret
jno
push
sbb
inc
mull
xchg
inc
or
add
fmuls
in
test
add
fcoml
mov
sub
divb
int3
xchg
push
mov
dec
popa
mov
jg
outsb
mov
dec
pop
mov
sub
add
dec
popf
addr16
xchg
pop
lods
fcmovne
mov
dec
add
or
bound
mov
and
mov
jmp
inc
fcompl
and
outsb
movl
fdiv
cmp
mov
sub
and
popa
jno
inc
mov
dec
imul
push
scas
outsl
insl
jno
push
sarb
in
rolb
dec
idiv
pop
dec
subl
loope
dec
lcall
mov
aas
jb
loope
into
insb
mov
lahf
loop
mov
nop
mov
sti
mov
andl
outsl
inc
mov
xchg
inc
and
sub
ja
pop
pop
push
lret
dec
in
dec
fistpl
inc
inc
pop
adc
sbb
out
test
psraw
cltd
shll
insb
cmpsl
outsb
dec
sub
xchg
mov
cs
dec
mov
loope
push
and
iret
dec
or
pop
push
mov
enter
mov
subl
cmc
sub
addr16
mov
push
xchg
rcll
xor
incl
push
mov
mov
in
lea
addr16
ss
xchg
addr16
lcall
hlt
xor
dec
bound
bound
jmp
shlb
xchg
adc
shll
ss
outsb
ret
sarb
dec
repz
inc
mov
daa
xor
sub
push
xchg
pop
popa
mov
jge
pop
cmpsl
xchg
mov
xchg
std
repz
fs
mov
xlat
cwtl
mov
or
das
push
iret
data16
sbb
dec
mov
imul
and
cs
roll
lods
sub
cmp
loope
stos
add
sbb
lret
mov
sahf
inc
cli
sub
test
dec
mov
mov
mov
adc
shlb
and
mov
xchg
into
cmp
pop
decl
and
jns
into
adc
outsb
inc
loop
bound
cmp
or
dec
mov
sub
add
pop
popa
ror
rcll
mov
jl
gs
cld
bound
mov
sub
inc
push
mov
repnz
sahf
iret
fs
mov
clc
fdivs
push
sbb
add
mov
add
xor
inc
popf
jg
dec
pop
repnz
xor
cmc
stos
cwtl
mov
dec
aad
sub
dec
mov
add
popa
data16
push
popa
or
mov
dec
mov
sub
cmp
add
dec
xchg
dec
push
mov
insl
jnp
nop
fs
ret
add
dec
es
jl
dec
lahf
pusha
adc
sub
mov
cmp
push
lods
imul
or
inc
mov
dec
leave
movsl
lods
cmc
push
mov
xor
adc
ret
pop
in
dec
movsb
cmp
adc
and
adc
ss
addl
jle
push
or
cmc
repnz
push
dec
or
push
sbb
mov
push
jo
std
adc
or
mov
and
lock
push
pop
nop
movsb
push
mov
and
cltd
push
js
push
sbb
bound
inc
cld
mov
call
call
push
jle
mov
jo
and
scas
jno
jg
push
lret
and
movsb
jns
or
xlat
jno
push
mov
mov
inc
outsb
clc
pop
add
add
sarl
cmp
sub
ljmp
jae
sbbb
cmp
sub
scas
xlat
adc
cmp
inc
lock
jns
mov
xchg
ss
sbb
cld
and
movsb
sub
cs
cmp
xchg
dec
jmp
loope
bound
jbe
movsl
or
lods
dec
data16
cmp
pop
in
cmp
enter
pushf
nop
xchg
in
mov
pop
and
clc
mov
inc
mov
fstl
xchg
mov
jge
enter
sub
cwtl
sub
dec
js
imul
cmp
lret
sub
inc
mov
mov
addr16
cmp
and
pop
jg
out
fldt
movsb
dec
daa
xlat
mov
push
dec
lcall
inc
mov
daa
aas
adc
inc
fisubl
jo
inc
fisttps
jae
sub
inc
and
push
adc
and
add
sbb
outsb
pop
daa
sbbl
cwtl
xor
paddb
inc
sub
jp
add
sbb
xchg
and
dec
sub
popf
jno
or
adc
and
lods
and
jl
sbb
out
and
mov
adc
fimuls
or
dec
jnp
out
ss
por
add
dec
cmp
cltd
inc
sub
pop
or
adc
push
test
dec
jnp
cmp
mov
pop
insb
int3
dec
out
xlat
xchg
jns
cmp
lret
add
jge
insl
cmp
sub
popa
imul
jle
icebp
and
cltd
jmp
lahf
rorb
dec
popf
out
and
mov
sbb
jo
lea
lea
in
dec
int
add
fucomip
push
jb
adc
lods
test
sbb
cmpsl
mov
pop
inc
stos
and
or
in
pusha
push
movsb
cmpsl
hlt
or
adc
xor
adc
incl
xlat
mov
shr
jg
mov
pop
dec
cwtl
mov
and
mov
out
inc
add
xor
xchg
push
pop
cli
add
fsts
cmp
shlb
sub
fbstp
pop
es
shrl
adcb
aam
xchg
sub
cmpb
enter
out
push
jns
inc
pop
sahf
push
adcb
addr16
mov
ds
push
les
pop
out
mov
nop
das
push
addl
cwtl
cltd
ja
mov
push
pop
mov
stos
es
nop
or
push
jae
inc
and
inc
jns,pn
or
add
fdivrl
mov
cmc
outsb
mov
mov
mov
pusha
enter
inc
push
xchg
and
test
push
sbb
xor
push
aaa
aad
jmp
ljmp
adc
add
fdivrs
push
or
les
popf
xor
lret
add
ljmp
add
in
sti
add
ljmp
aam
push
inc
dec
mov
pop
jbe
mov
pop
cmp
sub
push
dec
addl
push
pop
cwtl
lods
out
cs
add
jl
add
xor
or
sarl
add
add
add
hlt
push
mov
fbld
or
fstpl
and
insb
mov
cmp
outsl
arpl
stc
jnp
pop
stos
jmp
sahf
int
pop
xor
dec
stos
dec
cmc
iret
roll
xchg
jl
jns
fmul
pop
outsl
cli
outsb
pop
imul
test
adc
test
sub
xor
or
jo
icebp
lahf
ss
hlt
adc
insb
test
jae
sbb
jle
inc
cmp
popf
sub
sub
push
push
mov
sti
movsb
adc
cmp
pop
dec
out
jl
sbb
cmpsl
jb
xor
pop
mov
add
shll
rorl
or
sbb
inc
jae
xor
sarb
pop
aaa
adc
or
mov
outsl
lret
mov
xor
mov
fadds
cwtl
adc
sar
adc
jmp
mov
lods
cmp
push
test
and
cltd
hlt
imul
mov
loope
outsl
lret
mov
cmp
insl
test
xchg
in
or
sub
push
cmp
dec
fadd
inc
and
or
clc
sbb
dec
sarb
div
cmp
ret
les
pop
das
hlt
loopne
mov
mov
adc
mov
push
or
test
adc
dec
sub
iret
lea
pusha
or
in
add
lock
aaa
jne
inc
repnz
and
pop
mov
aam
and
lock
lods
jo
push
movsb
fisubrl
pushf
in
addr16
outsl
jae
pushf
add
aaa
mov
sbb
lods
push
repz
mov
pushf
popf
icebp
xor
dec
lds
xchg
push
fwait
shr
lods
xchg
sbb
mov
fsubl
repnz
push
popf
inc
sbb
cmp
and
and
and
icebp
cmpsb
imul
push
add
jle
cltd
test
jae
sub
mov
mov
push
mov
sbb
fs
cmp
stc
xor
dec
mov
imull
and
jae
pop
dec
std
mov
mov
addr16
mov
aas
pop
in
lahf
aam
xor
jmp
mov
aam
mov
dec
push
push
lock
jnp
out
psllq
mov
adc
dec
mov
orl
pop
nop
pusha
cmp
mov
inc
je
dec
sbb
je
arpl
push
jae
fbld
shl
jo
lods
inc
jno
cmc
cmp
mov
popf
scas
fildll
dec
xchg
add
ja
stos
cli
lds
xor
cmc
sub
push
push
xchg
mov
cmp
mov
mov
rolw
call
xchg
dec
mov
pushf
das
dec
mov
int
js
scas
mov
addl
in
lea
sub
negl
pop
out
cmpsb
rorl
cltd
les
cmpsl
sbb
fsubp
cmpsl
jl
cmc
mov
mov
push
or
in
push
out
adc
jecxz
cmpsb
arpl
adcl
psubq
fisttpll
lock
dec
iret
cmpsb
daa
addr16
mov
jb
lods
loopne
scas
pop
divb
frstor
mov
sbb
in
popa
out
mov
fistpll
shr
or
push
inc
mov
sbb
jle
xchg
jmp
sub
out
adc
sub
arpl
pop
daa
cmpsb
push
dec
push
ja
and
mov
int
les
fnstsw
lods
fcomps
lret
jae
cmpsl
push
xor
sub
cmpsl
sub
xor
mov
pop
inc
aas
out
adc
lods
aas
mov
lds
outsb
frstor
adc
out
sub
jmp
or
stos
mov
sahf
mov
sub
mov
mov
mov
setg
jne
cmpsl
leave
mov
ds
pusha
mov
mov
daa
jmp
dec
xchg
in
je
mov
mov
out
xchg
fadds
jl
and
pop
mov
xchg
lcall
mov
gs
cmpsl
rcll
mov
jbe
fists
fistl
inc
arpl
inc
stc
ljmp
push
popl
xchg
adc
sahf
xchg
mov
out
lret
fadd
nop
hlt
jmp
jmp
cmp
lahf
inc
cmpsb
lret
out
jmp
mov
pop
into
leave
cltd
lds
fwait
lahf
scas
ret
daa
scas
ret
mov
sbb
push
jo
sti
loopne
sahf
dec
std
pusha
mov
mov
hlt
mov
shll
mov
mov
clc
mov
add
cmpsb
pop
jg
dec
cmc
mov
add
movzbl
mov
mov
movsl
pop
mov
in
sbb
lret
scas
lret
cmp
popa
out
mov
pop
jne
shr
mov
xchg
es
loope
idiv
cmc
mov
lea
jle
mov
clc
sahf
int3
and
mov
mov
mov
std
jmp
movsl
cmp
push
out
xlat
pop
cli
pusha
xchg
pop
push
jmp
dec
mov
movsl
mov
add
ret
stos
push
push
fcomps
xchg
ljmp
gs
or
mov
out
xchg
andl
sti
lea
cmp
xchg
xchg
cmc
std
push
xlat
mov
adc
aad
xchg
push
xchg
popa
arpl
stos
call
adc
xchg
mov
in
out
stos
dec
loopne
sub
rolb
ljmp
mov
and
cmpsl
aas
cld
jno
xchg
addps
cmc
xchg
mov
lcall
or
jnp
into
popf
xchg
push
in
cmc
leave
jge
inc
das
in
lods
xchg
test
or
add
dec
jmp
and
je
pop
repz
mov
pop
cld
loopne
mov
or
sbb
pushf
cmp
idivb
ja
jo
leave
mulb
push
jg
mov
jp
test
push
cld
lds
arpl
cmp
ret
mov
xchg
loope
jne
rorl
shll
mov
sar
mov
cmc
cmc
imul
std
rcl
or
adc
jecxz
xchg
in
js
lea
xor
js
int3
call
idiv
adc
jnp
int3
mov
ret
fs
sub
test
sub
shll
mov
andb
ljmp
jecxz
fwait
gs
stos
lret
das
sbb
fwait
mov
lcall
cli
pop
popa
dec
mov
xchg
mov
frstor
mov
pop
jmp
push
xchg
and
xchg
addr16
shrb
jge
shll
in
daa
cltd
mov
adc
pushf
mov
cmp
cmp
jmp
jae
fwait
cmp
dec
mov
mov
or
aam
lahf
fcmovnbe
sbb
arpl
xchg
stos
hlt
xor
xchg
mov
mov
test
mov
popf
dec
adc
pop
mov
stos
fstps
insl
int
out
lock
loopne,pn
in
mov
sti
loopne
idivl
xchg
xlat
shl
test
cmc
cltd
in
cmc
push
mov
push
in
xor
inc
scas
sub
and
pop
and
int3
nop
popf
ja
mov
lahf
pop
scas
scas
test
lcall
lcall
dec
fiaddl
pop
mov
shr
mov
or
cli
inc
in
mov
or
mov
dec
fcmovne
xor
in
fwait
jo
ret
mov
ds
imul
pop
lret
out
ljmp
lea
and
arpl
pop
imul
mul
mov
and
hlt
pop
pop
fisttpll
jb
into
push
pushf
rcll
xor
mov
add
jmp
imul
sub
and
mov
enter
pop
int3
lds
hlt
movsl
into
mov
das
xchg
push
imul
mov
out
cmp
cmpsl
jg
fldl
stc
fiaddl
adc
in
pusha
outsl
enter
push
pop
cli
add
rorl
xchg
jg
das
sbb
dec
frstor
dec
rcl
cwtl
incl
jmp
aad
movsl
inc
xchg
or
into
cmpsl
mov
in
movaps
lods
fimuls
fs
mov
enter
cltd
lods
lods
lea
push
xchg
ret
lock
sbb
sub
cmc
cmpsl
test
loopne
rorl
dec
fucomip
jbe
insl
push
shl
mov
xchg
xlat
xor
inc
jg
cltd
mov
mov
aas
mov
mov
lahf
cmp
insl
xchg
aad
inc
xchg
and
mov
lods
ret
lret
sbb
xlat
xorb
cmc
jb
iret
cmp
in
loope
sbb
push
cwtl
xor
push
aad
push
sbb
aad
mov
repnz
andl
ljmp
cld
je
xchg
cld
xor
mov
pusha
idivb
leave
in
cmc
xlat
mov
test
and
mov
repz
out
mov
scas
ret
lret
lea
in
nop
fwait
jle
sbbl
lcall
aad
mov
iret
adc
outsl
dec
jmp
pushf
lret
out
xchg
jecxz
mov
stos
and
or
pop
dec
push
gs
or
xor
push
lcall
mov
outsl
fcomps
mov
iret
pusha
lock
shr
adc
cmpsb
cmpsl
add
jg
popf
std
mov
lods
rcr
loope
cwtl
in
and
push
aas
int3
cmp
and
inc
addr16
imul
mov
inc
cmpsb
pushf
je
xchg
outsb
pop
inc
rolb
aas
sbb
mov
xchg
inc
pushf
int
jecxz
xchg
mov
dec
cwtl
aad
cmpl
or
fwait
cmpsb
mov
popf
adc
mov
jbe
aam
test
popa
aam
in
xchg
adc
xorl
cmp
jmp
jbe
out
hlt
outsl
mov
ljmp
cmp
cmpsl
clc
pop
lahf
sub
cwtl
lock
mov
lea
lods
cmpsb
lret
push
pop
out
mov
cmp
mov
stos
mov
lret
or
jmp
add
jmp
pop
stos
mov
push
mov
mov
test
mov
inc
ret
fmul
mov
loope
repnz
or
pop
sbb
lahf
addr16
mov
sti
enter
sbb
or
aaa
adc
mov
int
mov
sub
repnz
cmp
sahf
pop
mov
out
mov
outsl
rorb
lahf
fcomip
push
popf
mov
cli
mov
xlat
cmc
mov
call
lods
or
std
pop
xlat
fstps
aam
ror
mov
mov
fcmove
loopne
sub
fisubrl
out
xchg
pop
mov
push
out
push
add
lcall
dec
popf
mov
adcl
fwait
imul
lock
jle
push
xor
mov
push
or
xor
sub
jmp
imul
movsl
adc
sbb
jg
pop
xchg
out
push
xchg
popa
sbbl
mov
mov
lods
in
inc
push
push
and
test
movsb
cltd
cmpsl
fisubs
mov
or
lcall
inc
repz
aam
lea
fnstcw
adc
sahf
mov
movsl
xchg
fisubrl
cld
mov
add
inc
lret
scas
test
lret
outsl
or
scas
into
in
sbb
mov
rorl
test
outsb
loopne
adc
cmc
in
add
cmp
mov
mov
jmp
mov
enter
repz
mov
lock
mov
lahf
std
ret
in
dec
mov
and
jmp
xor
jmp
xor
add
lock
cld
xor
cld
sbbl
popa
mov
sub
in
test
fidivrl
mov
dec
dec
xchg
fcmovbe
dec
and
mov
out
mov
or
adc
ljmp
imul
outsl
ficompl
xchg
shr
sbb
mov
or
xlat
insb
adc
mov
repnz
shlb
imul
popa
mov
lcall
xchg
and
lcall
xchg
ret
push
lahf
mov
pop
mov
jl
out
fwait
scas
loopne
mov
mov
jns
cmpsl
shll
mov
push
sti
sbb
and
test
mov
bound
xor
cmp
mov
jge
mov
dec
mov
adc
sbb
mov
sub
std
mov
fs
inc
push
xchg
mov
sbb
aad
cmp
fbstp
lea
std
cwtl
lret
xlat
leave
mov
cmp
inc
pop
jne
lods
fwait
push
filds
test
loop
stc
popa
or
movsb
mov
push
sbb
mul
rol
hlt
call
adc
inc
sub
mov
sub
loope
mov
addl
fldl
fisubs
jo
jbe
inc
sub
inc
mov
out
adc
or
cs
xchg
into
inc
fmull
pusha
addr16
mov
test
pop
or
je
cmp
in
loop
mov
xchg
mov
enter
fsin
jmp
negl
ficoms
dec
clc
pop
pop
push
dec
repz
aad
test
aad
arpl
lcall
adc
add
addr16
push
icebp
test
jg
mov
es
loop
mov
lahf
cmp
mov
aad
cmc
fistpll
mov
data16
mov
das
fwait
ds
fsub
idivl
test
xor
mov
mov
leave
imull
mov
sahf
ret
push
fstpl
popf
sahf
into
xchg
movsb
leave
adc
stos
lods
xchg
mov
push
push
sbb
sbb
xchg
nop
in
mov
pop
outsl
loope
mov
out
faddl
mov
and
int3
mov
iret
jno
std
movsl
jge
pop
test
ss
xchg
filds
cmpsl
push
jg
xor
popl
or
push
in
sbb
lods
cmpsl
ficoml
inc
cld
fwait
popl
jl
iret
xor
lret
stos
xor
bound
lret
xlat
outsb
ret
repnz
xchg
stos
cmp
adc
stos
jle
fdiv
mov
aad
popf
jge
cmpsl
insb
out
out
fisubrl
dec
fsts
adc
and
jp
leave
add
sti
xchg
jp
std
cmp
cltd
pushf
inc
into
sub
xlat
out
inc
aam
in
add
cmp
mov
or
push
sub
mov
movsl
call
mov
mov
jno
xor
adc
mov
sarl
scas
in
push
test
add
push
loop
popf
cmp
pop
jnp
cmp
cltd
sbb
lret
scas
in
push
aam
push
push
sbb
lcall
mov
sbb
stos
add
and
lods
enter
mov
sbb
roll
test
lret
cmc
sbb
out
in
loope
pop
xchg
add
arpl
pop
dec
dec
cmp
dec
mov
mov
test
mov
jne
pop
mov
shll
test
xchg
cmp
cmpsl
xchg
negl
mov
icebp
adc
pop
mov
push
pop
xchg
xchg
in
mov
lcall
test
into
daa
scas
fisubl
or
repnz
xchg
into
les
mov
jmp
hlt
sbb
aas
rclb
out
pop
lods
xchg
or
js
fisubrs
and
enter
xor
data16
fiaddl
mov
cmp
jmp
repz
mov
repz
dec
xchg
fwait
ret
push
dec
test
insl
inc
dec
outsl
push
push
ret
stos
imul
inc
ja
push
stc
rcl
fsubrs
xor
inc
push
out
mov
mov
movsb
mov
cmpsl
mov
mov
std
scas
push
mov
sub
sbb
or
hlt
fstl
mov
in
mov
mov
mov
fldenv
push
fcmovnb
mov
out
cld
pop
out
adc
outsl
aad
jns
cmp
sbb
mov
cld
jmp
mov
adc
aad
adc
arpl
add
sbb
mov
out
mov
mov
cmp
jge
add
mov
add
pop
sbb
lods
std
test
out
repz
push
mov
lcall
rcll
xchg
notl
sub
in
mov
mov
outsb
xchg
mov
loopne
jnp
mov
xlat
fistl
xchg
mov
bound
les
inc
insl
stc
mov
mov
call
repz
pop
int3
pop
sahf
stos
imul
xchg
mov
cwtl
int
jp
jmp
es
negb
sbbl
sub
jns
fldt
and
mov
add
mov
xchg
jmp
popf
and
roll
popf
pop
cmpsb
idivl
dec
or
hlt
inc
xor
bound
push
inc
cld
test
inc
mov
mov
flds
dec
aam
mov
in
push
dec
fwait
mov
or
xchg
jno
adc
lcall
or
mov
pop
adc
icebp
inc
aaa
es
adc
dec
imul
and
push
sbb
adc
jo
jge
sub
or
jns
mov
cwtl
stos
mov
push
fstpl
xor
loop
out
mov
jmp
push
fucomip
mov
inc
sarl
inc
ret
cltd
insb
pusha
push
pop
sub
mov
rclb
push
shrl
sbb
fcomi
and
adc
mov
mov
pop
mov
lods
push
sub
ret
xor
lds
sbb
ja
xor
cs
or
call
push
imul
lret
mov
pop
xchg
push
jg
xor
xor
pop
push
xor
ficompl
mov
mov
inc
pop
insl
and
cmp
out
lahf
or
pop
xorb
add
lret
andl
outsl
mov
push
stos
add
ja
in
add
mov
jnp
push
and
fwait
in
aad
jge
mov
movsb
xchg
in
cmc
test
xor
inc
in
or
inc
xchg
or
jl
sti
fmull
out
int
cmp
test
mul
mov
in
jno
or
push
aam
leave
mov
push
mov
rcll
jge
sbbb
repz
pop
xor
pop
sti
mov
push
jne
pop
fcompl
call
sbb
loope
popa
cmp
pop
or
xlat
into
popf
loope
adc
test
sbb
sbb
rcr
pusha
cld
xor
movsl
cmp
ret
icebp
lahf
jbe
fistpll
imul
jmp
sub
mov
mov
mov
push
icebp
mov
or
push
insb
xchg
cmp
arpl
fistps
test
outsb
or
das
mov
xchg
mov
cmpsl
cmp
mov
pop
imul
mov
arpl
mov
xchg
test
mov
jecxz
fisttpll
mov
xchg
jno
push
iret
insl
outsl
movsl
dec
jmp
jmp
iret
in
shr
out
pop
frstor
leave
mov
negb
arpl
cmp
add
add
mov
push
in
out
lds
or
sbb
jno
mov
push
mov
jg
mov
out
mov
test
jno
cmp
imul
jmp
aas
fisttpll
mov
xchg
push
xchg
mov
rcll
rorl
mov
xchg
or
movsl
inc
jmp
repz
in
fucomip
out
mov
xchg
fwait
mov
jbe
fbstp
push
test
outsb
das
out
xor
xchg
mov
ds
cmc
jmp
mov
inc
pop
je
pop
cmpsb
daa
movsl
add
or
pop
jmp
fcmovnu
jecxz
divl
mov
fdivl
movsl
and
mov
les
fistl
test
outsb
sti
out
fistpll
xchg
lea
jecxz
fucomp
sti
jg
sbb
sbb
out
push
pop
lea
mov
fistl
inc
mov
xor
inc
add
pop
jmp
fcmovnu
out
pop
repz
mov
lret
push
jmp
jmp
add
inc
outsb
pop
add
pop
mov
xchg
mov
iret
test
jmp
mov
xchg
fwait
jmp
cmpsl
movhps
lea
ret
add
xor
pop
fistpl
test
outsb
pop
out
fstpt
xchg
icebp
mov
iret
sarl
out
movsl
leave
or
mov
push
sbb
out
push
dec
lea
fistps
outsb
xchg
out
stos
enter
mov
les
cmp
cmp
xchg
cltd
mov
movsl
jmp
lods
sub
insl
lea
dec
xlat
jbe
fcomip
fcmovnbe
test
outsb
mov
mov
jnp
ds
ja
dec
fists
fldt
test
outsb
pop
out
das
mov
shl
es
xchg
jmp
daa
add
faddl
mov
push
popa
mov
adcl
lea
mov
xchg
lahf
test
jg
inc
ja
dec
jmp
paddusw
sub
scas
push
mov
jbe
fisubl
sub
inc
aaa
in
or
das
mov
pop
lret
fstp
mov
mov
mov
mov
stc
and
mov
iret
jge
pop
movsl
push
jmp
sti
inc
ret
in
fucomi
pushl
mov
xor
jle
filds
pop
test
inc
out
pop
mov
xchg
inc
mov
mov
jmp
scas
inc
in
xchg
jmp
cmpsl
adc
adc
jbe
filds
fistpl
test
outsb
movsbl
xchg
lods
mov
movsl
std
jmp
xchg
inc
mov
test
add
pand
test
outsb
jecxz
sti
mov
xchg
in
mov
iret
lds
add
pop
jge
push
test
ds
movsl
jns
push
sbb
add
xlat
mov
pop
iret
fst
mov
lret
push
in
out
fs
jmp
push
jno
dec
push
imul
lahf
ret
cltd
out
mov
test
pop
movsl
adc
sbb
das
jmp
rcr
testl
out
push
sarl
arpl
es
xchg
jne
push
iret
push
outsl
movsl
mov
xchg
fildl
ret
jmp
mov
mov
psllw
dec
fistl
outsb
aas
out
pop
mov
xchg
movsl
mov
movsl
std
jmp
fwait
inc
mov
mov
or
cmp
fucomi
test
outsb
xlat
out
out
mov
xchg
leave
lea
repz
inc
mov
pop
jg
inc
mov
push
push
push
mov
xchg
mov
mov
dec
nop
hlt
jno
or
mov
pop
mov
xchg
mov
imul
mov
sub
scas
in
int
imulb
inc
into
loop
fldenv
rol
in
int
and
and
pop
out
test
push
mov
call
add
xchg
dec
mov
cwtl
mov
mov
ret
cld
outsb
xchg
xchg
and
xchg
mov
in
xchg
lahf
subb
xchg
xchg
mov
mov
mov
lahf
xchg
mov
lahf
into
cmpsl
jb
stos
rolb
lods
mov
aam
lret
std
lret
in
lods
enter
orb
jecxz
lcall
sti
xchg
push
or
jg
in
in
mov
inc
addl
popf
sahf
in
mov
les
popa
insb
mov
mov
ret
and
faddl
inc
stos
mov
lret
orl
shl
out
ja
in
jne
addl
pop
push
aam
pop
or
xchg
dec
in
mov
mov
lahf
mov
jne
sub
aam
mov
popa
enter
fldl
mov
rcrl
push
sahf
movsl
xchg
sahf
lods
inc
clc
jae
cli
test
shlb
lods
lahf
aad
rol
cwtl
call
jecxz
or
sbb
mov
sahf
test
rorl
loop
mov
hlt
lcall
std
inc
mov
and
push
mov
ret
push
rcl
icebp
dec
cmp
ret
sahf
loop
push
aad
test
loope
rcll
mov
mov
lods
int3
jle
popf
stos
sub
xor
and
call
in
mov
fsubp
fisubs
clc
mov
and
sbb
push
sar
sbb
dec
mov
imul
xchg
dec
in
lods
lahf
inc
in
lret
fiaddl
mov
add
mov
and
aad
mov
dec
lret
add
mov
rcrl
cmpb
cmpl
es
sahf
pop
add
mov
sarl
push
cltd
adc
fcoms
cmpsl
mov
xchg
cltd
fwait
pusha
mov
aam
data16
fwait
rorl
add
mov
ss
xchg
mov
xchg
or
and
cmp
in
aad
adc
push
call
mov
xchg
pushf
pop
xchg
xor
jno
roll
mov
ret
push
inc
icebp
nop
xchg
jecxz
gs
xchg
imul
gs
lahf
mov
int3
clc
mov
andl
addl
fstl
fwait
mov
fnstenv
notl
xor
lds
out
cwtl
mov
mov
mov
int
scas
out
enter
adc
popa
aas
aad
clc
jecxz
jb
ret
pop
aad
int
pop
mov
es
roll
jmp
sbb
inc
dec
adc
mov
cld
in
sbb
iret
pop
pop
mov
mov
out
sub
out
and
sbb
add
stos
and
add
int
fldcw
lock
loopne
jo
adc
loopne
and
rclb
fwait
adc
std
out
pop
mov
jae
std
sbb
cld
pop
xchg
xlat
mov
sbb
rcrl
push
mov
out
mov
out
lret
dec
dec
mov
mov
daa
outsb
ljmp
repnz
sahf
cmc
loopne
repz
aad
jo
xor
aad
jecxz
cmpsl
or
xchg
shrb
or
mov
pop
int3
push
jo
les
add
sbbb
mov
jge
aas
and
mov
mov
je
mov
or
add
xor
cmpsb
ret
mov
int3
mov
mov
dec
xchg
aad
pop
es
mov
rcrb
xchg
outsb
jmp
inc
aad
cli
push
mov
loope
mov
xchg
pop
mov
mov
aad
mov
pop
mov
stos
scas
das
cli
inc
enter
sti
cmp
adc
test
rclb
mov
sarl
jg
fisttpll
xlat
outsb
mov
mov
shlb
sahf
mov
push
sti
enter
or
xchg
dec
sbb
es
shl
lret
jo,pt
call
enter
sbb
mov
xor
cmp
sbbb
arpl
mov
ljmp
jle
sbb
pop
jmp
add
and
aam
iret
xor
outsb
mov
in
in
loope
push
add
subl
stos
mov
mov
cltd
xchg
into
cmpsl
cmc
xchg
fsubr
sub
out
jmp
inc
in
mov
xor
xlat
xor
mov
xlat
xchg
jne
sbb
call
scas
pop
adc
int
cli
mov
inc
pushf
mov
enter
pop
and
mov
mov
std
out
sub
subb
mov
insl
sarb
push
repz
js
sbb
jbe,pn
ret
cmc
mov
loop
xchg
mov
repz
xchg
sbb
pop
es
cmp
mov
xchg
stos
and
dec
ret
xchg
out
jecxz
xchg
pop
roll
out
inc
jmp
mov
mov
pushf
push
mov
and
mov
stos
xchg
out
repnz
sbb
adc
mov
mov
fmuls
and
into
scas
sbb
jne
stos
mov
adc
jbe
aad
ds
mov
idivb
leave
lcall
cmpsl
sar
pop
xchg
dec
ror
mov
jbe
test
mov
jmp
ficoml
xchg
ret
lret
add
cwtl
mov
enter
or
inc
add
cmpsb
mov
pop
cld
orb
adc
fisubrl
pushf
rcll
in
mov
insb
push
xor
lret
mov
sti
test
inc
hlt
mov
mov
out
pop
sti
pop
fwait
xchg
pusha
rcll
cmpb
in
stos
insl
inc
sar
dec
cwtl
pop
mov
and
cltd
jmp
in
stos
js
mov
push
jge
out
aam
jecxz
cmp
divb
mull
pop
mov
sub
out
mov
movl
jmp
int
test
or
mov
dec
jmp
sar
das
popf
push
mov
cmp
and
cli
mov
scas
sahf
mov
sub
aaa
sahf
imull
aad
mov
pop
mov
jle
sbb
xor
jl
mov
rorb
int3
enter
sub
in
cmpsb
pop
imul
test
jl
xor
imul
fiadds
shl
xchg
lcall
mov
cmpsb
sti
sub
mov
shll
mov
fisttps
mov
inc
popf
cmpsl
mov
imul
popa
imul
call
movsl
pop
aam
inc
pop
sub
stos
xchg
shll
sbb
cmpsb
mov
cmp
sbb
rcrb
mov
pop
pop
sahf
jbe
xchg
cmpsb
lock
pop
inc
cld
add
xor
pop
xchg
adc
dec
into
xor
in
mov
cld
sbb
cwtl
gs
les
mov
lret
insl
test
repz
mov
xchg
mov
adcl
int
push
cmp
nopl
cld
dec
mov
cmpsl
mov
and
test
mov
adcl
lret
lahf
mov
or
jge
mov
les
lret
stos
cmp
xchg
cmpsl
scas
mov
shlb
das
or
xchg
cmp
fsubrp
leave
decl
fnstcw
out
xor
ret
cmc
xor
adc
movsb
xchg
ljmp
imul
sbb
jmp
xchg
sbb
test
cmp
push
pushf
xchg
test
inc
mov
cmpsb
test
shlb
pop
mov
sahf
push
xor
dec
mov
imul
stc
pushf
pushf
js
in
xchg
ret
in
dec
movsl
or
mov
repz
dec
cld
lret
mov
pop
mov
in
mov
sahf
mov
inc
mov
mov
cmp
imul
out
gs
popa
outsl
lods
bound
inc
push
cmp
fldt
cmp
nop
std
imul
cmc
and
xchg
pop
sub
test
lahf
and
mov
add
mov
psubq
adc
push
fwait
mov
push
in
fs
cmp
jae
dec
push
inc
lods
xchg
pop
test
mov
or
stos
inc
in
mov
xlat
ret
es
jb
push
es
ss
out
xchg
mov
sahf
push
push
std
stos
and
cmc
aad
lock
ljmp
sahf
dec
push
xor
scas
xchg
repnz
sub
es
lahf
in
stc
lock
cmpsl
cmp
aas
inc
pop
mov
adc
shrl
sahf
adc
mov
xchg
mov
aam
mov
pusha
or
sbb
aam
pop
popf
and
in
mov
lahf
mov
out
loopne
fstps
or
negb
pop
mov
mov
mov
std
in
push
pushl
jg
or
cmpsb
mov
test
in
scas
sbb
hlt
adc
mov
lock
stos
xchg
gs
scas
cwtl
xchg
iret
push
jmp
rcrl
cmp
mov
xchg
int3
or
adc
push
cmpsl
je
test
lahf
loope
push
mov
shrl
aam
xlat
mov
push
test
xorb
cmpsl
mov
stos
mov
rclb
stos
mov
mov
adc
pop
cmpsl
mov
ret
pop
std
pushf
sarl
or
pop
sti
ret
and
nop
pop
rcll
aam
and
dec
xchg
pop
cmp
dec
and
xchg
push
sbb
mov
inc
jecxz
fisubl
int3
daa
sub
mov
adc
es
test
sub
ret
or
test
sti
cmp
fldz
aam
push
sarl
mov
xlat
cwtl
xchg
adc
ret
fneni(8087
ljmp
sbb
push
dec
cld
fwait
into
sub
xchg
mov
stos
jo
in
or
filds
in
into
mov
es
ljmp
iret
mov
sbb
push
mov
jg
test
nop
xchg
lahf
cltd
push
aad
mov
cmpl
loop
lcall
in
mov
xchg
popf
xlat
lahf
out
scas
mov
cmp
lret
jo
mov
adc
dec
mov
fnstsw
pop
aad
jmp
shl
mov
rclb
movsl
stos
pop
inc
and
cmpsl
imul
cmpsb
mov
cwtl
sti
sbb
rcr
std
test
leave
pop
stc
pop
aam
sahf
mov
in
subl
pop
pop
adc
lahf
jae
and
mov
out
adc
fsubrp
lret
sahf
imul
cs
aam
repz
into
sahf
jmp
push
fwait
out
cs
daa
mov
mov
cmp
sti
mov
dec
aam
adc
cmpl
pop
into
in
pop
aas
mov
or
xchg
mov
inc
mov
mov
fimull
call
popf
lahf
test
gs
mov
shrl
mov
push
repnz
ret
gs
cwtl
mov
and
mov
scas
inc
push
xchg
xchg
pop
pop
in
mov
cmpsb
fdivp
rclb
mov
mov
idivb
pop
mov
dec
jge
aam
iret
xlat
xchg
call
jbe
aam
adc
shl
repz
pop
popa
push
add
mov
mov
scas
xchg
mov
or
insl
and
stos
xor
shrl
ljmp
adc
in
decl
mov
sbb
push
pusha
scas
jo
cmp
xor
in
addb
aad
or
inc
fistps
out
shrl
popf
mov
cli
mov
xor
rcll
aaa
mov
pop
push
sahf
pushf
out
test
cmp
cwtl
ret
in
int
loopne
and
out
mov
testl
push
cli
fsubrs
jnp
fs
lock
lahf
fwait
mov
jns
or
mov
pop
inc
stc
mov
ja
das
mov
adcl
and
lret
fidivrs
ret
stc
mov
or
jnp
sub
lods
repnz
jle
mov
shlb
outsl
out
sarl
in
nop
jmp
negl
sbb
aas
fidivrs
sub
mov
xchg
mov
aad
loopne
outsl
lods
xor
fidivrs
ljmp
pop
in
push
rcll
xor
or
lahf
in
mov
mov
mov
jnp
sub
stos
repnz
jle
mov
ret
mov
mov
mov
fisubs
cmpsb
xchg
call
lahf
adc
lock
call
sbb
data16
lahf
adc
inc
shl
mov
mov
mov
jecxz
loopne
in
push
fildl
sub
lods
lahf
das
mov
pop
jmp
mov
pop
jae
mov
movsb
xchg
mov
lret
repz
xchg
insl
mov
aad
or
dec
sbb
push
pop
inc
mov
mov
in
aad
stos
aam
pop
std
or
aad
out
test
mov
xchg
test
iret
ret
jecxz
es
dec
add
mov
mov
js
movsb
sub
mov
test
call
mov
sbb
add
cmc
dec
pop
dec
cmpsl
mov
int3
les
xchg
aam
push
loope
pop
sbb
inc
push
jb
xor
iret
out
insb
pop
adc
stos
pop
stc
sti
mov
lret
mov
push
lcall
mov
pop
xlat
mov
gs
jmp
xchg
inc
inc
addr16
or
js
xchg
fidivl
xor
fwait
movsl
les
mov
xchg
pop
mov
dec
andl
repz
xlat
jmp
lahf
frstor
sarl
ja
inc
outsb
pop
out
jnp
dec
or
inc
xchg
jns
push
iret
push
imul
ret
in
jecxz
divl
mov
jecxz
repz
leave
mov
pop
sub
mulb
jae
push
add
push
push
insl
lea
inc
das
jbe
ffreep
fninit
test
outsb
lret
out
jmp
mov
add
pop
dec
and
sbb
dec
push
popa
lea
pop
sub
fninit
test
outsb
lret
out
out
mov
xchg
fisttpll
outsb
daa
xchg
add
push
movsl
imul
in
pop
jmp
lret
fstp
mov
mov
lea
fistl
aad
out
ret
leave
push
mov
xchg
sub
ds
movsl
or
or
sbb
aas
mov
pop
das
mov
fwait
push
xchg
mov
mov
shl
ffreep
aad
jbe
fisubl
sub
and
adc
fwait
mov
jae
dec
lea
fcmovnu
sti
fcmovne
test
mov
shll
mov
iret
or
jmp
sbb
psubsw
mov
pop
ret
fucom
mov
stos
push
test
xlat
push
in
jmp
shrl
push
fldt
or
cmpsb
das
ret
add
aas
filds
test
outsb
pop
out
daa
mov
xchg
movsl
mov
movsl
test
mov
mov
jmp
push
sub
pop
fistpll
dec
test
aas
out
pop
mov
xchg
pop
mov
dec
xchg
inc
imul
xlat
jmp
fnstsw
mov
or
push
jns
push
ret
insl
aaa
jbe
fildll
test
outsb
jmp
iret
mov
xchg
icebp
mov
iret
in
jecxz
fucomp
testl
out
push
sub
fildl
pop
outsb
sub
or
xchg
dec
mov
movsl
lods
jmp
xlat
inc
out
mov
pop
mov
xchg
mov
mov
or
push
or
jbe
fbstp
fistl
test
outsb
out
fistpll
xchg
popf
mov
movsl
loope
fists
inc
push
xor
xor
inc
jg
dec
jmp
add
and
mov
push
test
xchg
jbe
filds
outsb
mov
stos
leave
jg
jle
ret
sub
push
fbld
inc
test
outsb
das
out
btc
inc
es
mov
mov
movsl
ds
movsl
xchg
jmp
iret
inc
out
in
mov
pop
mov
xchg
mov
and
inc
jmp
push
or
out
push
pop
lea
mov
jbe
fcmovnu
test
outsb
xlat
out
out
stc
rcll
fstl
mov
push
sub
aaa
push
or
pcmpeqd
fbld
fildl
test
outsb
imul
mov
xchg
lea
inc
push
xor
mov
add
jbe
fisttps
fistpl
test
outsb
add
sarl
xchg
xchg
mov
movsl
icebp
jmp
stos
inc
mov
fwait
jmp
stos
out
jg
lea
ret
sub
dec
fildll
aas
test
outsb
daa
out
aaa
mov
xchg
mov
cmpsl
movsl
popf
jmp
movl
fwait
pop
mov
add
add
dec
fistpl
arpl
out
pop
mov
xchg
pop
mov
dec
xchg
inc
in
ret
jmp
sbb
mov
testl
out
inc
mov
xchg
add
ds
movsl
gs
pop
inc
aas
in
psubsw
mov
pop
fstp
mov
mov
icebp
mov
jecxz
mov
xchg
sub
cmp
inc
paddsw
jmp
das
mov
xchg
push
lods
mov
mov
lea
jbe
fistpll
fistpll
jmp
outsl
inc
dec
in
push
jmp
pop
fnsave
mov
pop
push
push
mov
adcl
lea
fcmovne
test
mov
xchg
leave
mov
inc
test
jae
push
out
addr16
xchg
mov
push
outsl
movsl
inc
jmp
repz
ret
in
out
jmp
jmp
mov
aad
out
mov
xor
sub
jno
dec
movsl
gs
adc
pop
jmp
iret
fst
mov
mov
mov
rorl
mov
mov
inc
push
jge
push
ret
push
cmp
fildll
fcomi
test
outsb
jecxz
repz
xchg
stc
mov
iret
in
ds
shr
jnp
outsb
or
and
out
push
or
jbe
fistpll
fisttpl
test
outsb
out
ret
mov
xchg
test
xlat
movsl
in
jmp
mov
mov
push
sub
jbe
fists
test
outsb
daa
out
aaa
mov
xchg
mov
mov
ret
inc
xchg
in
mov
pop
mov
xchg
mov
jbe
fisttps
test
push
out
addr16
xchg
insl
mov
pop
ja,pt
dec
jmp
testl
iret
pop
out
fnsave
fnstcw
or
out
inc
mov
xchg
jno
dec
iret
imul
jnp
inc
fucomi
out
jmp
jecxz
mov
fbld
jae
adc
add
cmp
inc
or
sbb
cmp
decl
mov
mov
lea
jbe
fistpll
fbstp
jmp
addr16
ja
push
jmp
pop
fnsave
mov
arpl
pop
mov
adcl
lea
ret
fists
outsb
mov
lds
shll
outsb
pop
out
jnp
dec
or
aas
xchg
jne
dec
iret
popa
ds
movsl
pop
jmp
cmove
in
repz
repz
mov
ret
push
stc
mov
jecxz
mov
xchg
adc
ds
movsl
jge
pop
pop
inc
aas
in
pop
jmp
lret
fstp
mov
mov
lea
xlat
push
in
out
fldenv
inc
cmp
jmp
dec
inc
imul
jmp
paddusw
mov
orl
mov
mov
ret
mov
fistpl
mov
dec
cmpsb
mov
xchg
jno
dec
iret
popa
ds
movsl
pop
jmp
add
repz
neg
lret
mov
ret
push
stc
mov
out
push
lds
mov
xchg
add
dec
movsl
imul
in
imul
mov
pop
ffree
mov
lds
ja
inc
and
sbb
out
push
jge
push
ret
insl
cmp
fildll
test
outsb
out
out
iret
mov
xchg
icebp
mov
iret
jmp
ljmp
sub
pop
inc
call
mov
insl
lea
pop
daa
jbe
fucomi
test
outsb
fucomip
mov
xchg
in
aad
out
movsl
lds
jg
sbb
and
sbb
jmp
das
inc
paddsw
jmp
rcr
repz
lahf
push
cltd
mov
iret
push
jmp
cmpsl
ja
jle
movsl
add
lea
ret
jne
jbe
fisttps
fistl
test
outsb
add
sarl
xchg
xchg
mov
movsl
stc
jmp
mov
jmp
push
dec
xchg
and
jbe
fildll
aas
test
outsb
das
out
btc
inc
es
mov
iret
movsl
ds
movsl
xchg
jmp
iret
inc
out
in
mov
pop
mov
lahf
mov
pop
ss
pop
fldt
dec
outsb
pop
out
jg
dec
jno
movsl
incb
les
dec
xor
lret
fnsave
xchg
repnz
out
sbb
in
mov
cwtl
stos
push
pop
hlt
adc
mov
mov
add
xchg
rorl
loopne
sub
gs
hlt
leave
jb
rorb
mov
sti
loope
mov
mov
gs
hlt
in
je
sbb
xchg
jmp
jmp
fwait
cmp
fwait
inc
outsb
xlat
mov
out
cmc
and
addr16
in
scas
push
fwait
lret
fucom
mul
mov
nop
fsubp
out
xor
out
jmp
movsl
mov
xchg
lds
scas
add
ret
lods
dec
lcall
xchg
jmp
dec
or
inc
and
shr
lcall
sarl
pop
cmc
repz
xor
fucomi
jp
xor
cmc
fsubr
loope
fsubl
jp
clc
imull
clc
inc
cmc
jl
mov
lcall
mov
out
insb
adc
clc
pusha
fisttpl
mov
daa
xor
stos
add
sub
out
xlat
stos
adc
aad
fisttpll
mov
insl
mov
jmp
jae
lret
mov
fwait
cs
loop
mov
adc
rol
sahf
mov
xor
jg
mov
cmpsl
push
repz
aad
cli
sbb
cmp
in
imul
xchg
popf
xor
or
scas
in
lcall
cs
and
mov
in
push
mov
cwtl
mov
mov
or
fisubrl
jno
mov
adc
shl
enter
rorb
aad
pop
test
jo
fsub
fwait
sub
std
stc
rorb
push
lods
cwtl
in
push
cmp
testl
adc
rcrb
lret
stos
mov
mov
ja
aaa
or
jge
nop
xchg
lret
jecxz
pop
pop
mov
pop
xchg
icebp
lret
cmpsw
scas
scas
lds
xchg
cmp
jg
mov
in
push
repz
xor
outsb
addr16
jle
jg
lds
rcrb
mov
out
insb
mov
push
das
push
or
mov
mov
xchg
movsl
push
cmp
loope
pop
out
rcrl
mov
arpl
or
pop
enter
jno
in
mov
mov
sub
dec
cwtl
mov
out
ljmp
out
out
fidivl
push
mov
into
cmp
movsb
outsb
repnz
cli
out
outsl
lret
jecxz
scas
mov
fdivr
sub
lea
gs
lret
nop
mov
xchg
mov
mov
fucomi
gs
mov
xor
popf
sub
call
mov
add
xor
pusha
xor
imul
adc
xchg
out
dec
push
add
lea
mov
mov
mov
push
mov
test
push
nop
or
mov
cmp
mov
in
out
mov
sbb
stos
lahf
adc
mov
fwait
lret
outsl
int
shr
push
lcall
cwtl
repz
aad
xchg
xchg
rcll
mov
sub
pop
popf
mov
mov
mov
mov
push
xchg
loopne
out
in
cmp
ret
adc
push
sbbb
cmc
test
mov
sti
cmpsl
fidivl
sahf
lds
xchg
pop
mov
cmpsl
lea
sub
rol
cmp
ss
jmp
shrl
inc
jnp
sbb
leave
xor
cmp
icebp
and
and
retw
aad
lods
fwait
xchg
in
xchg
jecxz
inc
jne
xchg
movsb
xor
out
fnsave
xchg
fmul
rol
dec
or
out
aad
shlb
imul
fstl
dec
ljmp
dec
mov
add
ret
loope
push
sbb
sbb
jecxz
out
xchg
mov
ja
sub
out
dec
fucomip
mov
sub
lds
and
rcrl
outsb
sarl
negl
cmpsb
aad
aad
mov
sbb
push
ds
xlat
leave
sbb
xchg
mov
ficoms
add
and
les
pop
adc
lods
in
rcrb
fmulp
mov
jmp
out
and
ffree
testb
clc
repz
mov
out
inc
out
cwtl
cmpsl
imul
push
sahf
xor
push
cmpsl
push
xchg
cmpsb
test
test
outsb
mov
mov
mov
in
mov
rcl
mov
push
xchg
sub
push
dec
sub
lds
push
fs
xchg
sub
mov
rcl
xchg
sbbb
mov
movsb
insb
lret
clc
xlat
jmp
lds
cltd
cmpsl
fwait
lret
cltd
xor
or
dec
and
fmull
stos
jae
lret
test
cmpsl
cmp
push
mov
push
ror
ljmp
stos
mov
mov
adc
cmp
mov
cmpsl
stos
push
mov
test
jmp
add
into
cmpsb
cmpsb
div
imul
xchg
inc
push
or
stos
in
add
addr16
ljmp
mov
addr16
xchg
lods
mov
or
fs
jae
jo
push
fdivrl
push
loop
push
xlat
in
cld
and
dec
sbb
dec
lods
aad
stos
in
loope
jno
out
or
pop
fstp
mov
rcrb
xchg
sbb
out
jns
in
push
cmp
mov
push
xchg
fildl
mov
scas
mov
icebp
mov
gs
cmpsl
xor
sub
sti
cs
push
shr
cltd
mov
mov
lds
xchg
rcl
jp
shl
or
repz
mov
pop
mov
jle
out
xchg
mov
aas
add
sahf
leavew
fstpt
movsl
or
adc
insb
sub
sbb
cwtl
sti
or
fisubrl
fidivl
xor
push
add
lret
cmpsl
cltd
push
fmull
nop
lahf
test
fistps
add
out
cmp
in
inc
lods
adc
inc
addr16
test
lret
mov
cmp
lods
sti
aam
push
shrl
push
push
cli
pop
or
mov
icebp
les
dec
sahf
fcmovnu
pop
mov
fildll
push
call
mov
nop
or
lods
cmc
mov
fmull
rol
cmc
pop
arpl
mov
push
cmp
aad
enter
fiadds
mov
dec
or
cmpsb
mov
jo
call
jno
push
cs
pop
mov
pmaddwd
loop
sub
dec
into
xchg
lods
lods
xchg
mov
mov
adc
push
jnp
mov
vpavgb
hlt
mov
scas
dec
mov
push
xor
or
mov
xchg
adc
aam
inc
sbbl
mov
clc
mov
in
int3
xlat
pop
aad
outsl
stos
imul
loope
mov
or
stos
jnp
add
leave
cmp
paddusb
lods
add
mov
popf
adc
xchg
inc
push
push
cli
lds
shrl
lret
sub
lods
sbb
jmp
xchg
mov
or
fdivl
ja
movsb
mov
fwait
mov
call
mov
jb
aam
and
iret
ret
stc
mov
xor
cmpsl
fiadds
cld
loopne
xchg
lds
xor
fisttpll
test
jbe
xlat
sti
pop
movsl
in
sub
add
jmp
movsl
divl
mov
lcall
push
ja
out
or
jmp
cmpsl
lret
push
ja
mov
std
arpl
mov
mov
mov
cmc
jae
cmp
adc
mov
jle
fimull
out
mov
out
dec
insl
ficoms
xchg
vcmppd
lcall
popa
les
aad
addr16
xor
out
leave
dec
mov
jmp
add
lea
adc
xchg
add
out
imull
lds
fcomps
dec
les
xchg
jns
xor
das
out
dec
add
cwtl
in
imul
std
jmp
pusha
mov
sub
fisubl
in
sbb
cmc
test
adc
sahf
cltd
aaa
mov
repz
out
push
or
xor
push
sub
xlat
xor
fst
fisubs
rorl
and
popl
pop
mov
and
mov
hlt
vmovlhps
fwait
out
mov
fidivs
in
dec
jae
movsl
dec
fadd
repz
out
fsubrs
cmp
and
fstpt
fstp
and
pop
loopne
xchg
fmulp
and
jb
xor
in
jbe
gs
sbb
popa
pop
imul
test
mov
int3
xchg
mov
int
and
lahf
mov
pop
push
mov
sub
dec
push
outsb
cs
mov
lret
jecxz
jecxz
call
mov
ljmp
mov
out
in
dec
jns
push
mov
nop
ret
jg,pn
mov
popf
ret
inc
pop
nop
pop
gs
fidivrl
mov
repnz
pop
pop
lret
xchg
and
outsl
out
repz
xor
lret
mov
cmpsl
xor
add
fsubrl
lods
cmpsb
cmpsl
sbb
notl
lret
rol
aas
es
jecxz
xchg
pop
fcmovnu
test
and
fwait
les
imul
mov
mov
shl
pop
mov
dec
shl
das
jbe
push
xchg
mov
xchg
sbb
pop
inc
shll
mov
add
cmp
or
out
adc
insl
mov
popf
fld
sbb
dec
mov
pop
xchg
ficoms
xchg
adc
sub
cmp
fdiv
shrl
jae
aad
arpl
mov
out
lahf
xchg
mov
aad
fs
lcall
and
fadd
pop
pop
dec
mov
and
scas
es
or
out
adc
sarl
dec
jne
addr16
popf
cmp
cwtl
out
mov
insb
pop
popl
and
push
dec
cld
iret
xchg
movsl
shrl
cmp
in
je
jb
adc
jns
repz
push
adc
ss
xchg
cmp
out
add
outsb
mov
xor
ljmp
pop
xor
xor
mov
daa
mov
cmp
jecxz,pt
ret
pushf
mov
aas
mov
imull
push
and
inc
push
cmp
mov
mov
push
add
fstl
cmp
fwait
cwtl
iret
lods
fld
dec
sbb
xchg
mov
pushf
push
fcoml
das
fdivl
cmc
jp
inc
lods
mov
sar
movsl
fwait
vunpcklps
mov
pop
mov
mov
sahf
scas
xor
nop
lahf
sbb
rorb
loopne
mov
ja
or
not
push
cmpsb
push
mov
xchg
xchg
jbe,pn
sub
lahf
or
mov
movsl
inc
mov
xor
cltd
push
xor
mov
bound
xor
iret
inc
inc
andb
and
add
cmpsb
lods
rolb
outsb
pushf
xor
cmp
aad
scas
rol
int
loopne
push
insl
popl
jg
adc
jg
fnsave
inc
test
fxch
mov
imul
scas
imul
xor
jp
aam
xlat
mov
jnp
out
dec
les
loopne
out
jbe
xchg
cmpsb
push
mov
mov
pop
das
shl
lods
test
fstpt
mov
movsb
pop
lret
mov
jae
stos
jge
repz
out
aam
popa
cmp
cwtl
fwait
or
pop
negb
cmp
dec
sub
adc
int
mov
fistpll
lock
ret
out
add
xorb
ljmp
out
sub
and
cmpsl
mov
int3
xchg
lahf
test
cmp
loopne
cmp
cmp
loope
lahf
cmc
cmpsb
int
or
stos
fstp
mov
add
xchg
test
lret
and
xor
push
jp
jmp
mov
rcrl
shr
jb
mov
xchg
cmpsl
mov
insl
mov
mov
or
inc
je
mov
push
mov
mov
fstp
xchg
xchg
xchg
cmc
pop
xor
dec
aas
je
xchg
mov
xlat
imul
in
mov
popa
mov
pop
inc
into
fnstenv
enter
test
fsubs
fcomp
xchg
sti
pop
out
adc
jp
cmpsl
lret
and
xchg
out
aam
pop
push
mov
mov
add
cmp
lods
jns
out
lds
loop
xor
jb
imul
and
or
jecxz
jle
jge
cmp
xor
mov
mov
test
or
icebp
adcb
pop
notl
sub
mov
adc
xchg
nop
mov
frstor
dec
cmpsl
xchg
mov
mov
cmpb
pop
fisttpll
ljmp
push
lret
xchg
icebp
jae
movsl
jmp
inc
aam
ret
cli
ljmp
movsb
fnstcw
nop
mov
or
aam
dec
in
mov
out
mov
shrb
test
adc
jmp
mull
jnp
out
push
mov
mov
or
mov
pop
lahf
pop
inc
push
sti
mov
pop
jg
add
jge
and
sub
mov
out
loopne,pn
lret
inc
mov
aad
adc
xor
ret
push
shlb
and
mov
inc
mov
ror
sub
lds
add
pop
pop
cld
testb
cmpsb
icebp
shll
fstl
out
loopne
fs
sahf
mov
into
lods
xor
xor
in
fmul
fld
jae
rcll
xor
lret
mov
jl
out
in
mov
nop
lahf
cld
adc
push
lods
cmp
rcrb
lcall
ljmp
mov
mov
sub
cmpsl
fistpl
add
cmp
mov
orl
pop
jo
inc
sbbb
aam
mov
fstpl
fsubs
aas
mul
mov
jne
shl
cwtl
jb
pop
mov
inc
push
icebp
dec
cs
arpl
in
or
scas
aaa
leave
push
mov
sub
mov
xchg
leave
stos
xchg
adc
call
sub
push
mov
cmp
movsl
inc
out
stc
enter
fs
inc
ljmp
ret
add
mov
adc
mov
loopne
sub
lahf
mov
xorb
andb
shll
dec
xchg
cmp
dec
lock
daa
loopne
mov
xor
ss
mov
es
stos
mov
std
sub
repz
pop
sbb
xchg
mov
popa
jnp
fldl
add
ret
mov
jae
xchg
test
faddl
jecxz
fucom
add
fisttpll
std
xchg
mov
out
loope
in
mov
out
dec
ss
rorl
loopne
lods
cmp
mov
bswap
fwait
mov
and
cli
mov
hlt
call
imul
mov
pop
in
cmp
or
shl
mov
popa
mov
push
mov
leave
sbb
pop
jno
popf
loopne
fildll
insb
mov
dec
sbb
inc
cld
xchg
mov
dec
test
rolb
pop
xchg
test
push
ret
call
or
roll
pusha
mov
xchg
in
xor
mov
out
pop
xchg
testl
jge
mov
mov
push
mov
movsl
orb
and
lret
arpl
xrelease
or
cwtl
ffreep
aad
mov
out
ljmp
xchg
pop
mov
gs
cmpsl
or
cmp
out
and
popf
lock
rclb
push
lock
loope
sbb
adc
out
mov
xchg
das
fwait
cmc
in
data16
scas
nop
fldcw
ffree
sahf
jge
mov
sub
and
adc
cwtl
repz
lahf
les
inc
jo
mov
sub
mov
mov
inc
inc
jne
xor
test
sarl
fwait
dec
sub
inc
xor
sub
loopne
xchg
shrl
sbb
xor
lds
inc
jnp
mov
pop
popf
add
test
pop
jnp
push
ljmp
loop
or
add
cmp
fistl
inc
add
stos
sub
lcall
xchg
add
and
popa
andl
fcmovnb
rcll
fiaddl
negb
int3
nop
ret
sarl
enter
mov
out
cltd
inc
xor
fisubs
xchg
mov
cmp
out
push
shr
inc
out
lret
fs
xchg
stc
fstps
xchg
adcb
mov
mov
xchg
and
mov
lcall
cltd
addr16
imul
xchg
out
push
lret
out
cmpsl
xchg
repz
stos
das
or
movsb
mov
shlb
notl
test
cs
cmpb
in
push
cs
push
addr16
out
pop
fcmovb
js
cmpsl
arpl
out
mov
push
xchg
mov
mov
adc
push
lahf
cs
xchg
adc
fidivrl
cmp
jbe
popa
out
fcoml
xor
lds
fidivs
and
mov
xchg
dec
xchg
movsb
iret
xchg
mov
jge
mov
or
sub
clc
mov
lret
mov
mov
mov
pop
xchg
push
inc
xchg
mov
add
xlat
mov
xchg
mov
mov
pushf
adc
xchg
pop
fstp
jbe
lds
sub
inc
xchg
ror
xchg
vpmacssdqh
or
pop
cmp
out
negl
mov
sbb
pxor
mov
bound
dec
xchg
pop
aad
int3
mov
push
add
outsb
enter
rcl
scas
aad
dec
stos
xchg
leave
adc
inc
xchg
xchg
int3
mov
in
ret
stos
insl
jmp
cmpsl
call
fwait
sbb
mov
mov
push
mul
jp
dec
insl
shl
aas
and
mov
xchg
pop
popa
sub
or
fbld
pop
adc
fstp
xchg
or
fdivl
pop
push
xchg
cmp
adc
mov
push
xchg
adc
repnz
add
pop
mov
repnz
mov
sbb
inc
icebp
inc
lods
xchg
leave
scas
sahf
xchg
int
cmp
decb
push
and
sub
lds
mov
or
outsl
jmp
arpl
dec
jge
mov
mov
mov
pop
mov
xchg
iret
xchg
jnp
inc
imul
stos
add
cmp
sbb
outsl
out
mov
imul
mov
loopne
xchg
inc
push
lret
inc
xchg
add
mov
xlat
mov
lahf
pop
adc
xor
leave
or
ja
pop
mov
das
add
xor
mov
repz
rcll
inc
xor
jnp
cltd
loope
adc
xchg
cld
movsl
xchg
and
jo
outsl
clc
cmp
call
cld
nop
xchg
push
add
pop
ljmp
ljmp
jo
mov
fisttpl
jecxz
xchg
mov
push
mov
aam
out
mov
enter
movl
jbe
mov
push
cmpsb
mov
or
mov
inc
jns
loop
xchg
inc
clc
int
jnp
push
cmp
rorl
sub
dec
xchg
rcl
in
insb
in
add
mov
sti
sub
jbe
mov
xchg
xchg
xchg
hlt
xchg
out
cltd
mov
fisubl
sbb
lret
xor
and
ljmp
out
push
add
mov
add
sub
movsl
std
das
adc
notl
insl
arpl
imul
lods
push
sbb
mov
jmp
sub
dec
ss
arpl
scas
xchg
mov
std
shll
mov
mov
xor
mov
jmp
cmpsl
jae
dec
mov
out
cmp
mov
sti
or
xor
cmpsb
idiv
ja
cwtl
mov
fwait
icebp
xor
sbb
and
mov
and
xchg
xchg
scas
push
push
imul
cmp
mov
sbb
inc
ljmp
inc
xchg
lcall
dec
lcall
into
mov
lods
scas
mov
ljmp
xchg
and
test
sahf
push
shrl
test
cmp
lret
sti
pop
cmp
cli
xchg
mov
adc
iret
dec
inc
xchg
lcall
cltd
or
jae
faddp
inc
std
arpl
mov
jle
lods
movsb
mov
cwtd
ds
das
mov
ret
mov
or
in
xor
iret
pushf
aas
jecxz
lods
mov
aas
lret
out
mov
cmc
mov
ret
orl
movsb
xor
in
bound
mov
mov
sarb
test
repnz
aaa
int3
xchg
into
enter
dec
outsl
sti
mov
lahf
jp
mov
js
test
test
jg,pn
dec
xor
push
pop
cmp
clc
in
into
inc
call
inc
filds
xor
mov
adc
imul
jmp
and
pusha
test
jb
lea
sub
dec
ret
data16
lods
inc
int3
das
repz
cmpsb
stos
add
xchg
jb
jl
scas
add
lcall
cmpsl
xchg
leave
mov
sarb
add
mov
stos
mov
stc
fidivl
movsl
jbe
rclb
aas
cmp
nop
push
addr16
lock
in
nop
adc
xor
cwtl
mov
sub
andl
scas
movsb
ret
sub
out
mov
lret
loop
ja
fisubs
xchg
in
in
mov
enter
mov
add
push
and
and
mov
and
scas
jbe
mov
jne
into
push
fisubl
mov
xor
xchg
pop
mov
mov
cld
jg
roll
jnp
add
cmpb
and
in
loopne
inc
outsb
mov
or
scas
xchg
mov
pusha
push
fcomps
mov
jb
mov
add
pop
mov
imul
mov
xchg
inc
mull
and
rcrl
loop
sbb
loop
mov
sub
or
mov
mov
and
fwait
popw
add
cmp
in
inc
stos
cmp
xchg
movsb
lods
cmpsb
lret
dec
stos
jle
cmpsb
mov
test
add
lahf
cmp
ss
jl
lods
ret
fbld
xchg
cmp
mov
push
jle
jge
cld
fadd
xlat
pop
push
data16
mov
std
xchg
stos
scas
lds
popf
fdivr
cs
push
jno
lock
pop
add
out
mov
cmp
loope
fidivrl
mov
sub
ret
cwtl
xchg
lds
mov
push
mov
lods
jnp
pop
ret
pop
push
jmp
mov
std
and
ss
jne
add
mov
int3
cmpsb
jmp
and
inc
int3
comiss
aaa
sbb
lret
dec
sbb
imul
ljmp
mov
rorb
pop
push
mov
cmpsl
sbb
test
pop
xchg
test
mov
addb
fwait
cmpsl
cmp
cld
pop
sbb
repnz
cmp
push
rcrl
push
lods
js
cld
mov
repnz
jns
xchg
hlt
enter
mov
push
lret
mov
and
pop
adc
mov
jno
dec
ret
pcmpeqd
fistpll
fildl
test
outsb
repz
mov
xchg
popf
test
sbbb
iret
mov
outsb
out
fwait
mov
test
mov
scas
jnp
inc
or
inc
outsb
addr16
jnp
dec
or
mov
stos
negb
and
aas
fisttpl
test
inc
fucomip
out
jmp
mov
inc
ret
mov
sbb
negb
lds
ret
xor
dec
fstpl
jnp
push
add
dec
das
int3
lret
std
sti
decb
mov
xlat
scas
rol
pusha
mov
filds
xchg
mov
out
movsl
pushf
mov
pushf
mull
test
adc
mov
mov
fstl
jnp
sti
stos
mov
add
pushf
fucom
stos
push
cld
loopne
mov
mov
sahf
and
mov
iret
outsb
mov
lret
inc
stos
not
lahf
add
and
mov
fldz
pop
jmp
fiaddl
sti
mov
lahf
cli
scas
stos
mov
push
cwtl
inc
flds
pop
inc
roll
std
ret
push
fcmovne
int3
mov
push
popa
mov
daa
jmp
push
stos
test
add
sbbl
fstp
test
rcl
jecxz
out
push
xchg
pop
sub
repnz
xchg
fwait
mov
mov
and
cmp
mov
int
loopne
out
sbb
cmc
mov
jne
jns
in
aad
pusha
stc
pop
push
popa
and
fistl
mov
faddl
div
inc
add
push
aad
or
mov
repnz
ror
vphsubdq
sahf
fst
hlt
mov
pop
jmp
mov
xchg
jge
insl
add
pop
sahf
pop
cld
mov
int
jmp
cs
ljmp
pop
pop
insb
mov
icebp
add
ljmp
jbe
mov
inc
fbld
lods
adc
ret
inc
rcrb
int
mov
out
xchg
pop
test
rcrb
mov
mov
mov
jns
mov
adc
xor
icebp
sbb
mov
lods
mov
or
add
addr16
push
js
or
jns
sbb
mov
jg
adc
fwait
xchg
adc
dec
fdivr
cmc
push
in
sbb
cmpsl
jbe
fsubrs
cld
push
call
fsts
jmp
popf
ljmp
xchg
jmp
stc
out
aad
push
sub
fucomp
out
jg
dec
jnp
jns
ret
sub
into
sti
mov
pop
lahf
subl
out
cmp
mov
dec
adc
inc
jecxz
aad
mov
xchg
mov
push
adc
scas
cwtl
push
sub
jno
cmp
fnsave
hlt
mov
daa
mov
mov
xchg
pop
xorb
xchg
mov
cmp
inc
pop
test
insl
add
in
insl
hlt
fcom
das
mov
stos
scas
pop
pop
ror
repnz
loop
cmp
fbld
pop
fisttps
mov
les
fldl
lods
mov
jne
and
inc
mov
adc
stos
mov
out
imul
je
add
out
mov
and
popf
xchg
jnp
imul
mov
xor
cltd
mov
jno
mov
cmpsb
sbb
fldt
lds
pop
ret
pop
hlt
fwait
jmp
add
mov
test
shrb
add
or
pusha
popa
sub
fistl
push
push
xlat
fisttpll
jecxz
cmp
popf
jge
movsb
mov
sbb
enter
sub
fstpl
cmpl
dec
out
add
js
repz
imul
xchg
xchg
lds
fldt
lahf
inc
mull
mov
scas
jg
xor
adc
fists
cld
mov
pop
subl
dec
shrl
jae
fnstcw
int3
jb
xor
push
fwait
lods
arpl
cmp
push
imul
pop
mov
cmp
cs
xchg
mov
push
push
pop
repnz
inc
or
dec
nop
and
ficoms
loope
cmp
jae
dec
ds
jl
mov
mov
bound
fs
pop
in
cmp
clc
xor
mov
out
mov
cmp
idivl
out
ljmp
xchg
jecxz
mov
out
fwait
xorl
lods
in
mov
or
jns
inc
or
das
pop
imul
mov
leave
and
sbb
adc
mov
lock
mov
jae
test
xchg
fsubrs
push
cwtl
pop
push
push
loopne
xor
dec
cltd
add
xor
fwait
push
push
jb
bswap
jo
dec
mov
dec
frndint
pop
fisttpll
fdivr
mov
dec
mov
push
pop
cli
and
push
jmp
push
hlt
enter
jns
cmpsb
mov
mov
call
cwtl
subl
push
stc
jmp
mov
rclb
mov
sahf
cld
stos
sbbl
jne
lcall
add
sbb
loope
sub
pop
adc
enter
xor
adc
jb
mov
push
fsubs
sbb
in
and
mov
inc
xor
dec
sahf
or
pusha
mov
adc
xchg
jg
insb
mov
sub
fsts
inc
and
jl
and
lcall
cmp
mov
lods
sbb
lret
dec
pop
jge
mul
ret
inc
cmp
and
repz
ficomps
push
cmp
ds
arpl
lods
push
test
xchg
mov
jnp
cmp
pusha
icebp
lods
dec
stos
in
pop
subb
jecxz
xor
xchg
cmp
jl
cmp
jmp
stos
mov
ja
jmp
mov
lea
inc
imul
enter
in
xchg
fidivrs
cmc
push
adc
mov
inc
sub
sub
pop
ljmp
push
lods
loope
mov
cmpsl
imul
aam
test
ret
mov
in
sub
popf
xchg
jp
testb
sbb
mov
inc
stos
xor
addr16
jb
iret
fsubl
mov
jbe
test
xor
scas
incb
out
stos
inc
or
sub
and
xchg
lods
pushf
mov
popf
in
jbe
adc
adc
or
sahf
xor
cmpsb
scas
ljmp
adcl
inc
lods
ljmp
lahf
mov
mov
fcomip
push
es
sub
xlat
rcr
test
bound
push
jmp
add
in
jl
push
lret
test
je
mov
rclb
xor
xor
not
push
test
lea
xchg
xor
xchg
xchg
jns
arpl
imul
or
aaa
enter
mov
ss
dec
jecxz
jmp
add
mov
sub
movsb
ret
cld
mov
out
mov
pop
xchg
mov
scas
cmpsl
stos
mov
add
mov
dec
mov
or
or
mov
add
xchg
lret
lret
jmp
pop
mov
mov
repz
divl
mov
pop
jbe
xchg
jmp
repz
adc
fcomi
pop
jmp
in
pop
xchg
mov
jb
mov
mov
mov
push
xchg
data16
sahf
push
cmpsb
xchg
push
cmp
movsl
xchg
and
cmp
xchg
jecxz
push
add
ds
lods
sarl
sub
ret
inc
xchg
xchg
pusha
sbb
addr16
arpl
push
push
pop
cltd
popf
stos
pop
cmpsb
fs
leave
xchg
sub
jecxz
fcompl
or
adc
outsl
enter
jp
dec
js
xchg
sbb
push
mov
xchg
mov
jg
or
fsubrs
call
fwait
push
mov
pusha
lea
push
stc
adc
jns
jo
cmpsl
insl
stos
imul
xchg
cmp
arpl
mov
pop
fwait
push
clc
push
fwait
pop
pop
and
fcomip
cmpsl
cwtl
jmp
lock
mov
sub
xchg
mov
jmp
ljmp
loop
jg
lods
ficomps
cmpsl
mov
jmp
mov
and
sub
or
add
cmc
add
imul
and
fisubrl
pop
ljmp
xchg
jg
insb
jbe
push
std
pop
movsb
add
lret
sbb
mov
loopne
mov
inc
int
dec
mov
cmp
xchg
fimuls
mov
sub
xor
fwait
and
inc
lret
test
sbb
mov
stos
sub
mov
xchg
sub
mov
add
push
mov
pop
sbb
mov
loopne,pt
inc
cmp
in
in
jno
push
enter
mov
aam
jecxz
xchg
scas
std
aas
sbb
cmp
mov
lcall
push
call
stc
cmpsb
in
fbld
xchg
in
cmp
push
fiaddl
push
dec
add
imull
push
cs
mov
push
add
push
push
push
add
or
push
outsl
mov
cli
add
adc
xchg
inc
mov
jl
mov
bound
test
data16
pop
enter
fucomip
push
popa
add
int3
or
iret
xor
imul
push
jge
push
xchg
xor
jmp
jo
decb
or
jb
push
add
js
imul
jmp
add
aaa
test
pop
addr16
stos
inc
push
pop
add
and
jne
push
loope
xor
hlt
cmp
or
jae
out
push
push
sbb
es
jmp
ljmp
pop
stc
jb
pop
cmp
mov
pop
imull
pop
mov
rol
inc
fists
jae
pop
mov
aas
aad
push
inc
xchg
mov
cwtl
lods
into
and
push
clc
mov
mov
lods
aas
inc
aam
mov
lods
pushf
jl
sub
out
neg
xchg
or
push
xor
imulb
arpl
pcmpgtb
cs
pop
sub
gs
js
sub
add
stos
or
or
out
cmp
lods
fucomip
inc
ss
lea
movsl
iret
mov
cmpsl
and
aaa
and
xor
in
outsl
scas
aas
outsl
lcall
insl
mov
dec
popf
pop
xor
shr
sbb
inc
jne
mov
shll
arpl
repnz
mov
mov
push
jno
mov
clc
mov
cltd
xor
lods
aas
mov
mov
push
mov
xor
lret
or
pop
xor
and
js
in
xchg
adc
sbbb
cmp
adc
push
inc
inc
or
arpl
cli
dec
lcall
or
mov
jmp
scas
and
data16
aaa
xchg
daa
jp
pop
adc
mov
mov
jnp
dec
xorl
jp
pop
nop
sarl
push
std
mov
jle
sti
or
ja
xchg
mov
jp
test
sub
sti
pushf
inc
adc
ss
add
data16
sbb
xor
jnp
call
pushl
push
push
subb
fbstp
mov
test
mov
iret
mov
xlat
ret
movsb
pop
jl
add
push
cmpsl
xchg
mov
incb
mov
call
int3
je
sub
mov
push
add
mov
fdivl
adcb
mov
leave
mov
pop
sbbl
xor
scas
xchg
int3
test
add
cmp
xchg
call
test
cmpl
mov
xchg
clc
mov
icebp
add
sub
mov
cmpsl
fnsave
rcr
in
pusha
dec
into
incb
imul
es
sbb
in
mov
mov
orb
std
aas
dec
mov
int
push
mov
fucomi
loopne
or
movsb
mov
dec
xchg
fcmovnu
adc
sti
sti
in
jbe
xchg
sti
outsb
mov
or
es
mov
iret
call
pop
daa
lds
add
mov
mov
incb
jmp
scas
popf
into
std
out
or
ret
and
inc
test
ficompl
push
out
je
test
sbb
xchg
stos
mov
fimuls
leave
mov
sbb
fldt
aas
cmp
sti
and
psubw
in
out
rcrl
xchg
push
pop
pop
inc
shl
test
mov
pop
pop
jnp
iret
out
daa
rcll
scas
imul
repz
mov
mulb
jmp
push
lea
sarb
idivl
cmpsl
es
dec
xlat
jp
int
movsb
and
icebp
mov
loop
out
js
es
sbb
push
lods
mull
mov
dec
in
call
mov
out
add
lods
lds
jg
aad
std
neg
sub
add
xchg
pop
inc
cmp
movsl
dec
pop
std
xchg
dec
mov
push
xchg
xor
gs
fiaddl
bound
sub
mov
add
scas
push
lea
jmp
lods
movsb
repnz
and
adc
daa
jns
aam
mov
fisubs
icebp
mov
in
pop
sti
stc
mov
daa
scas
mov
xchg
xchg
mov
icebp
jb
push
fsubrl
scas
imul
scas
movsl
cli
pop
enter
rcrl
repz
add
mov
mov
jp
mov
aad
pushf
mov
arpl
mov
icebp
xor
stos
fcom
shlb
pushf
lret
leave
jle
shrl
hlt
cmc
mov
inc
lock
mov
popf
ljmp
pop
jge
mov
add
ss
sub
mov
mov
add
mov
jecxz
pop
pop
arpl
std
stos
pop
jge
fld
push
jecxz
gs
out
mov
sub
das
imul
add
push
jmp
orb
pop
lret
mov
mov
jae
cmpsl
lahf
test
stos
hlt
lret
test
std
or
cld
dec
jne
xor
lea
out
into
addr16
pop
clc
fstpl
lret
or
and
mov
call
pop
cwtl
out
add
sub
out
cmpsb
cmpsl
int3
pop
int
cmpsl
in
adcl
pushl
jnp
ja
js
jmp
ja
lahf
push
test
not
iret
or
repz
mov
xor
addr16
loopne
xchg
fs
in
lcall
iret
dec
inc
or
fldln2
out
or
or
rcrl
dec
push
test
push
int
scas
lret
or
dec
lods
sbb
push
inc
mov
lods
gs
lahf
dec
ja
mov
xor
push
jle
xchg
ljmp
ror
test
xchg
into
ret
int3
movsb
inc
inc
movsb
cmp
jg
lods
ja
loopne
insl
push
dec
lret
xor
lods
imul
add
sub
test
cmpsb
xchg
mov
leave
dec
in
push
pop
pop
dec
subl
addb
add
or
mull
sbb
and
jecxz
movsb
xor
hlt
cs
fwait
xchg
jne
addr16
into
sbb
jbe
push
test
je
jmp
test
jmp
adc
movsb
sub
subb
cmp
mov
sub
ja
lret
mov
pop
mov
and
inc
sub
notl
mov
mov
jl
xor
xchg
mov
stos
iret
or
jne
sbb
mov
repnz
sbb
out
int
xor
leave
cmp
aad
sti
stos
sbbb
mov
out
movsb
cmpsb
xchg
in
mov
fidivrs
call
mov
insb
int3
mov
lcall
out
nop
mov
aad
je
mov
cmpsb
in
push
scas
pop
or
aam
mov
xchg
mov
xchg
aam
addr16
ljmp
cmp
mov
push
push
out
js
add
insb
test
inc
popf
push
out
je
or
out
test
sbb
imul
xchg
hlt
add
iret
pop
outsl
sub
mov
fbstp
stos
jle
in
mov
scas
mov
je
jmp
xor
dec
dec
jbe
or
inc
pushf
pop
add
lcall
cld
mov
mov
fwait
or
adc
shll
inc
jne
mov
roll
out
leave
push
imulb
test
cmc
or
cmp
dec
xchg
cld
push
jmp
lea
loope
inc
pop
jb
mov
mov
cltd
stos
jae
adc
xlat
fisttps
ret
fwait
mov
sbbb
push
sub
pusha
repnz
or
mov
cmp
sub
mov
mov
mov
stos
outsl
inc
call
testl
scas
jne
push
mov
cltd
jp
movsl
mov
adc
xor
shl
aas
push
popa
sub
xchg
cltd
mov
mov
dec
mov
pop
mov
insb
xlat
mov
jecxz
lds
mov
shl
out
int
mov
insb
rcrb
add
mov
lcall
test
sti
movl
aam
popa
mov
fldl
dec
dec
out
in
fcomip
test
popa
cmp
sbb
f2xm1
stos
mov
out
ljmp
adc
loop
push
jbe
or
mov
imul
movsl
popf
mov
mov
sbb
push
fsubr
cmp
mov
fsts
cmpb
cmp
jo
jae
test
cmp
or
loope
pop
rolb
test
imul
in
scas
fcmovnb
mov
into
in
jb
sub
push
les
cmp
push
sbb
daa
xchg
push
dec
rorl
pushf
lods
mov
fiadds
jns
fistl
pop
arpl
arpl
adc
loope
fadds
jmp
cmpsb
daa
jle
sub
jae
movsl
rcrb
xor
inc
fmul
inc
decl
out
sub
mov
cmc
cmc
jno
xorl
cmp
inc
mov
sbb
cwtl
das
mov
daa
les
or
in
int3
aad
xchg
lds
pop
jg
sub
shll
rolb
mov
adc
out
mov
cmpsb
not
arpl
lods
mov
cmpsb
push
cli
andb
iret
les
lcall
aas
sahf
push
xor
cmpsl
cmpsl
cmc
loopne
aad
lcall
ret
inc
dec
pop
jmp
subl
mov
mov
stos
enter
sbb
xchg
dec
push
shl
ret
fstp
stc
mov
sahf
cmpb
inc
shll
insb
xchg
mov
or
leave
jo
imul
js
inc
rcrl
enter
pop
cmpsl
rol
fwait
xchg
lea
mov
int
push
adcb
or
mov
stc
and
adc
xor
mov
lock
ds
in
shlb
cli
stos
mov
ss
ud1
inc
xor
push
iret
scas
pop
aad
lret
xor
dec
add
and
int3
pusha
pop
shrb
cmc
sub
popf
in
push
jb
inc
dec
pop
stos
std
int
push
mov
sub
jo
aad
mov
xlat
push
test
sub
pop
int3
daa
cltd
jmp
iret
int3
cli
add
pop
sahf
pop
shrl
push
inc
jns
inc
jl,pn
arpl
xor
jmp
xlat
and
ret
sbb
sbb
xor
loope
call
stos
out
jmp
int
push
outsl
out
pop
lret
outsl
jmp
inc
cmp
and
test
aas
cmp
inc
mov
and
testl
loope
mov
daa
xor
push
mov
out
sbb
xor
xchg
inc
xlat
orb
cmpsb
lods
inc
and
outsl
clc
cmp
daa
xlat
xor
xor
mov
sbb
lret
rcrl
push
sti
ret
les
dec
sub
out
dec
pop
jecxz
stos
mov
imul
xor
mov
cmpsl
xchg
cwtl
fwait
lds
lods
mov
ret
mov
and
mul
inc
xchg
cmp
int3
and
call
pop
lock
pop
out
incl
idivb
fimull
int
rcrb
adc
fildl
imul
adc
push
jo
mov
into
clc
mov
mov
mov
mov
sbb
sub
mov
bound
jae
cltd
pop
or
jo
call
scas
or
and
push
xchg
fcomps
inc
imul
add
sub
mov
decl
push
ret
add
lret
mov
inc
lret
sub
loope
inc
adc
xchg
filds
mov
jns
add
xor
loopne
sbb
mov
or
in
sbb
loop
or
icebp
cld
sar
lcall
int
es
outsl
call
inc
inc
mov
ljmp
mov
mov
mov
add
sahf
inc
lock
clc
stos
inc
out
pop
or
loopne
loop
dec
add
mov
outsb
push
rcll
mov
inc
add
fldcw
inc
inc
pop
hlt
aad
jmp
int
sahf
into
cmpsb
mov
test
mov
xchg
push
out
xchg
out
add
adc
mov
cmp
cmp
lods
shl
mov
data16
dec
pushf
js
xchg
aam
cs
lahf
xor
xor
std
dec
xchg
xchg
lret
xlat
inc
dec
nop
sbb
cmp
pop
xchg
push
jg
js
mov
int3
rorl
cmpl
mov
mov
push
in
pop
aad
iret
jcxz
mov
hlt
xchg
add
nop
pop
push
mov
clc
pushf
fadds
or
inc
push
adc
enter
xchg
jmp
icebp
js
inc
jo
les
leave
push
mov
daa
pop
push
test
mov
sub
fsubl
pop
xchg
rcr
repz
inc
mov
int3
sbb
fs
lahf
in
push
icebp
pusha
gs
out
fndisi(8087
add
lcall
mov
movsl
out
imul
out
xchg
outsb
std
std
mov
mov
ret
out
scas
push
mov
daa
mov
loop
lret
shl
call
xor
inc
sbb
out
cmpsl
mov
push
jnp
repnz
stos
filds
jno
fwait
in
lods
lods
pusha
scas
xchg
or
js
insl
ds
cmpsl
cmpsl
jmp
mov
out
adc
lahf
or
jbe
das
lret
adc
in
sti
and
test
popl
mov
fstpl
mov
add
xor
test
test
sub
int
sahf
sub
lret
push
les
inc
cmpsb
nop
cmp
jg
lods
test
mov
sti
das
cmc
repz
jae
shl
pop
test
inc
mov
les
js
fistl
cmpsl
adc
mov
sti
push
aad
ficoms
clc
mov
xlat
fwait
push
lods
push
aad
mov
lcall
jmp
cmp
xor
cmc
popa
test
dec
push
imul
adc
aaa
push
pop
xchg
sbb
cmp
pop
or
ds
popa
mov
sbb
fistpl
iret
stos
shll
and
aas
scas
imul
insb
or
push
push
dec
add
fucomp
addl
hlt
or
lret
jle
xor
iret
cmp
out
outsb
xor
pusha
pop
arpl
inc
mov
sbb
outsl
es
movsl
scas
addb
fsts
int
dec
jl
pop
sub
or
in
cmpsb
xchg
popf
lods
cmp
push
fmul
mov
lods
mov
loopne
popf
in
ret
test
fstpt
out
mov
fists
sarl
jmp
fucomip
out
cmpsl
inc
mov
fisttpll
pop
jbe
filds
imul
dec
mov
xchg
sbb
call
inc
inc
mov
cmp
mov
ja
mov
adc
lock
out
ret
icebp
mov
lret
scas
jae
inc
stos
push
push
in
hlt
stos
push
mov
adc
js
inc
mov
pop
inc
pop
jo
mov
aaa
push
mov
lock
pop
dec
cld
sbb
jbe
mov
gs
mov
in
int3
dec
in
out
mov
pop
jecxz
in
sbb
adc
mov
mov
cld
fldt
cmp
sahf
pop
or
sahf
stos
push
andl
mov
push
mov
add
out
push
mov
mov
incl
and
sbb
sub
mov
nop
mov
dec
in
adcb
pop
jnp
popf
cld
stos
and
out
pop
stos
xchg
xchg
xor
sbb
sbbl
mov
cmpsb
mov
xchg
fmull
sub
inc
push
lret
mov
jle
jge
jmp
mov
mov
mov
cs
xchg
add
cmpsl
hlt
in
xor
out
insb
lock
mov
xchg
popf
das
imul
iret
stos
inc
dec
and
xchg
insb
inc
ret
and
ja
sbb
inc
push
pop
push
nop
push
jmp
aam
jl
mov
in
icebp
addb
sub
push
cmp
adc
jo
dec
push
test
xor
loopne
adc
call
dec
scas
shlb
jno
in
cwtl
mov
or
fistps
mov
inc
jno
sbb
inc
stc
addr16
mov
xchg
pop
test
cs
into
xchg
nop
addr16
push
das
cs
sti
aaa
test
and
pop
or
sub
test
int
mov
mov
push
daa
aam
pop
rol
call
add
idivl
mov
repz
lods
jge
dec
mov
or
cmp
ja
push
jle
or
out
daa
mov
push
enter
pop
fdivrs
repz
xchg
lret
add
push
aad
imul
in
enter
stos
incb
js
and
stos
cmpl
fwait
mov
mov
scas
cmp
loope
out
lret
xor
aas
push
ret
mov
or
adc
or
int3
ret
push
xorb
insb
cmp
in
test
cmp
mov
movl
mov
sbb
subb
sarb
sbb
cmp
mov
sti
bound
mov
mov
add
mov
cmp
roll
inc
mov
lods
sti
fists
fmul
js
test
test
ljmp
xchg
sbb
out
subb
dec
inc
xchg
cli
shl
aam
dec
out
sti
mov
mov
push
lock
add
mov
icebp
mov
sbb
jge
pop
pop
jg
sbb
pushf
jl
sbb
dec
or
xchg
sub
push
mov
pushf
mov
incl
pop
xchg
xchg
jmp
dec
adc
rclb
or
outsl
scas
dec
mov
dec
xchg
push
lcall
mov
dec
xchg
loope
mov
sub
push
dec
mov
decl
xchg
stos
pop
inc
adc
xchg
inc
cmp
int
outsb
mov
aad
mov
test
add
inc
add
adc
shr
fistl
xor
xchg
addr16
pop
imul
mov
arpl
cld
mov
sbb
or
dec
and
and
fidivl
std
and
pop
adc
test
test
fdivrs
mov
in
and
pusha
ret
rolb
aas
push
or
dec
push
or
pop
push
or
outsl
push
or
adcb
mov
add
add
add
add
add
add
add
add
add
push
or
add
add
xlat
push
or
add
add
pop
add
addb
add
in
push
or
add
add
push
or
sbb
or
add
or
and
or
adc
add
or
push
push
or
xor
or
sub
add
or
xor
or
inc
push
or
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
pop
or
mov
pop
inc
bound
jo
xor
clc
sub
mov
cmp
cmp
jo
sub
push
adc
loop
movsl
dec
out
popa
jmp
jmp
out
mov
xor
imul
lret
pushf
insb
ret
jo
xor
es
subb
adc
push
add
mov
das
stos
out
xor
sbb
xchg
popa
add
icebp
add
and
push
test
mov
add
inc
dec
xor
mov
dec
in
or
icebp
or
cmp
inc
mov
adc
test
sahf
adc
mov
push
ds
inc
out
loopne
icebp
sbb
sbb
or
sbb
mov
sbb
cmp
add
rcrl
rolb
shl
stc
fdivs
mov
decb
aaa
fwait
sub
xor
adc
cmpsb
xor
adc
add
sbb
mul
xchg
test
xchg
xor
jl
add
add
push
mov
cmp
add
and
loopne
scas
add
leave
and
cmp
inc
sti
inc
sbb
je
cmp
push
and
cmc
adc
loope
add
dec
push
call
sub
cs
aam
jae
inc
addl
orb
loopne
js
cmp
mov
movsb
pop
or
pop
mov
xchg
or
les
in
imul
pop
sub
add
hlt
xchg
ud0
pop
inc
sahf
pushf
jae
int
mov
movsb
mov
cmpsb
popf
mov
ret
or
jg
repz
insl
std
xor
inc
sbb
mov
mov
adc
cmp
inc
or
test
aad
mov
xor
out
add
inc
cwtl
fldt
movsb
lods
push
shr
add
or
add
dec
adcl
xor
and
dec
in
pop
in
or
clc
stc
aam
test
faddl
push
icebp
adc
add
jmp
hlt
jl
mov
inc
cmp
scas
and
pop
insb
enter
mov
or
mov
and
stos
incl
shlb
push
mov
bound
lock
data16
dec
sbb
adc
mov
sub
adc
push
insb
pop
sub
xchg
shlb
lock
xor
jle
jnp
and
adc
or
nop
cmpsb
or
cwtl
scas
jno
mov
cmpsb
xor
xor
and
xor
add
cmp
mov
mov
push
push
in
mov
sub
xchg
jae
push
mov
push
sub
stos
sub
xor
insb
cmp
adc
je
sub
or
pop
fisubl
stos
dec
cmp
and
add
mov
add
pop
mov
mov
pop
lods
shlb
sbb
add
repnz
cmp
jl
add
add
cli
std
fdivrs
xchg
out
cmp
push
pop
fimull
inc
sub
sub
mov
negl
add
sbb
lock
or
imul
in
pusha
jg
loope
mov
sbb
aas
add
inc
add
inc
add
inc
add
inc
adc
cmc
or
andl
add
inc
or
push
mov
or
push
adc
and
add
jns
and
and
leave
and
lret
lret
and
int
add
and
iret
and
xor
pop
filds
mov
add
add
sbb
mov
pop
or
inc
testl
inc
mov
test
pushf
rolb
inc
rolb
loopne
cltd
xchg
add
shlb
cwtl
mov
push
adc
adc
sub
enter
gs
xorl
jb
xor
lods
mov
dec
xchg
or
xchg
sbb
or
cwtl
andl
or
adc
adc
mov
mov
mov
fisubs
dec
iret
xchg
adc
stc
or
in
or
fwait
rcll
sub
inc
add
imul
pop
sti
add
std
xchg
xor
leave
sbb
orb
inc
and
push
in
call
cmp
or
adc
and
push
pop
shl
inc
jno
mov
movsb
ffreep
add
dec
mov
test
int3
inc
shl
push
imul
inc
pushf
out
or
push
adc
movsb
inc
dec
sub
add
cwtl
lods
or
adc
mov
stos
cmp
sahf
andl
mov
orb
mov
int3
jno
movsb
and
add
cmp
test
push
or
sub
xor
adcb
xor
or
outsb
adc
jb
push
jae
aad
adc
xor
out
and
xchg
and
xchg
and
shrb
adc
ja
hlt
sbb
pop
stos
add
fldl
push
fwait
lods
mov
pusha
xlat
add
sbb
xor
inc
mov
add
mov
adc
rcl
xchg
sub
xor
js
shll
pop
or
mov
inc
dec
pushf
xchg
mov
or
and
jbe
xor
add
add
add
es
add
xchg
sub
or
xchg
sbb
or
push
inc
out
bnd
decl
insb
sbb
xor
adc
adc
add
mov
aam
lret
pop
jae
dec
add
pop
div
fisttpl
cmp
mov
adc
sub
les
inc
sbb
lcall
in
xor
icebp
mov
jo
add
fcomp
mov
jmp
xor
xor
xchg
sbb
sub
add
add
push
fildl
xor
stos
enter
mov
push
or
add
cld
rcrl
insb
push
dec
xor
sub
fwait
cs
mov
out
adc
mov
fstl
mov
arpl
add
jno
add
loop
clc
push
and
lahf
sub
rcll
pop
enter
xlat
adc
xor
or
inc
and
bound
push
add
mov
and
xor
ss
xor
sub
mov
sub
xchg
adc
out
int3
je
cld
nop
pop
add
add
xor
add
add
inc
or
cmc
adc
xor
aam
lea
fimuls
mov
loop
adc
pop
push
imul
dec
outsb
adc
add
jnp
cmc
or
inc
add
mov
in
popf
xor
fiaddl
popa
fildl
sub
inc
cmp
xor
test
pushf
cmp
or
mov
cmpsb
xor
mov
push
add
mov
mov
add
fdivl
aam
add
push
xor
add
xor
jmp
sbb
adc
jg
inc
push
add
ljmp
add
push
adc
cmp
mov
test
xchg
inc
aam
out
push
mov
faddl
jne
cld
test
pop
push
movsl
inc
roll
xchg
and
sub
xlat
adc
and
push
cltd
dec
add
jge
cmpb
stos
sbb
sub
pop
push
cmpsb
sub
xor
and
pop
ja
push
mov
out
sbb
sub
fwait
pop
pop
or
add
xor
cmp
push
mov
or
jne
cmc
push
and
push
out
adc
add
mov
sbb
stos
xchg
es
push
test
sub
sarb
push
fsts
add
dec
cwtl
icebp
inc
cltd
jbe
add
sahf
xor
ret
push
enter
loopne
test
push
mov
push
push
popa
bound
mov
mov
in
jne
sbb
dec
lods
scas
shll
adc
lret
xor
lahf
and
mov
xor
add
icebp
js
adc
in
adc
pop
add
cmp
cmp
add
repz
lahf
scas
leave
xrelease
mov
fsub
out
mov
cmpsb
push
aad
cmp
popa
push
cmp
pop
sbb
test
cmp
and
or
std
xchg
adc
fld1
push
xchg
stos
xchg
pop
loopne
cmpsl
push
dec
jle
dec
mov
adc
sti
mov
cmc
or
inc
test
mov
xchg
jo
jge
mov
dec
sbb
push
xor
or
add
add
ret
fimull
int3
mov
call
test
jmp
fisubrs
cmc
fldenv
outsl
lods
fsubr
pop
das
jnp
mov
repnz
je
es
cs
pmaxub
cmp
or
mov
push
mov
inc
icebp
ret
sbb
shlb
add
xor
or
insl
add
outsb
add
andb
push
xchg
add
aad
mov
sub
imul
mov
add
sbb
inc
add
pop
inc
push
sub
outsb
jmp
or
mov
testb
sub
xor
adc
sbb
jge
add
mov
loop
lock
xor
jg
paddw
imul
pop
jmp
lds
movsl
xchg
and
jl
inc
inc
scas
xor
mov
adc
add
daa
insl
orb
push
push
out
jno
pop
xchg
add
add
sub
mov
sub
pop
aas
jg
add
orl
push
fadds
iret
dec
pusha
mov
and
lods
and
mov
or
jge
add
xlat
jnp
xchg
mov
repnz
sbbl
add
add
int3
push
inc
inc
or
cmc
dec
addr16
in
pop
cmpsb
push
xor
daa
fnstcw
dec
push
sahf
andl
in
add
push
rolb
mov
in
pop
pop
sub
and
mov
lds
sbb
xor
test
mov
rol
mov
push
cbtw
and
iret
adc
cmc
pop
stos
jnp
insl
rorb
push
dec
test
xor
mov
dec
pop
jle
mov
xor
and
fwait
jmp
pop
mov
arpl
mov
fidivrl
es
pop
or
jo
fs
icebp
cmp
sub
add
xchg
mov
inc
push
inc
test
aaa
iret
lds
lahf
add
fwait
pop
jp
push
hlt
xor
testl
fs
add
mov
movsb
push
bound
sbb
packssdw
insb
jg
sbb
jl
dec
mov
sarl
add
dec
cs
mov
nop
sbb
pop
add
xchg
dec
fdivrp
insb
fcmovbe
mov
xor
or
add
mov
cmpsl
or
data16
lods
daa
nop
mov
iret
cltd
adcl
jb
dec
mov
mov
or
pop
mov
call
xchg
and
xchg
aam
add
gs
xchg
xor
xchg
jecxz
daa
or
mov
jno
mov
or
xor
sbb
rcrb
xchg
andl
adc
jmp
enter
adc
mov
adc
add
divl
es
addl
cmp
pop
sub
pop
xchg
push
daa
subl
push
lods
sbb
add
cli
adc
sbb
popf
xor
inc
lods
inc
or
jl
subb
daa
daa
arpl
shrb
adc
popa
xchg
cwtl
sbb
adc
std
dec
dec
or
xchg
das
sbb
and
mov
add
jo
rolb
test
out
add
and
sbb
mov
not
jmp
addr16
ret
add
adc
mov
xchg
xlat
push
test
push
pop
pop
rorw
jmp
aaa
jp
mov
repz
hlt
call
add
addr16
cld
xor
push
cmp
movsb
jnp
and
mov
cmpl
xor
add
pop
neg
dec
negl
fucomip
push
sbb
jbe
inc
add
andps
push
add
xor
lahf
cmp
pop
mov
adc
fsubrp
aaa
pop
js
push
pop
adc
loope
push
pop
jg
add
stos
dec
and
push
pop
pop
test
call
insb
or
scas
jmp
repz
push
not
push
sub
call
push
adc
mov
not
inc
cmp
and
adc
jge
ret
out
iret
mov
fstps
cmp
cmp
test
cmpsb
int
fwait
popf
mov
push
mov
lret
pop
pop
mov
sub
adc
inc
bswap
mov
lds
sahf
ja
add
pop
dec
mov
mov
xor
inc
aam
ds
aas
add
inc
dec
test
pushf
fildl
inc
lea
xor
inc
adc
add
fs
xchg
push
dec
mov
and
push
pop
xchg
jb
out
call
test
jg
adc
jmp
push
aas
test
or
call
or
dec
cmpsb
mov
xchg
sub
add
das
or
roll
jmp
sub
je
punpcklbw
cmc
notl
sarl
divb
mov
out
sub
lcall
sbb
addl
movsl
sahf
add
mov
and
js
mov
mov
sub
shlb
xchg
stos
repnz
and
xor
and
push
outsl
popa
std
adc
adc
dec
fcmovb
inc
sarl
imulb
adc
add
dec
roll
rcl
sub
rolb
dec
adc
cs
sub
fldcw
testb
rcrb
push
out
xchg
jnp
mov
jnp,pt
sbb
out
das
out
cwtl
imul
dec
push
push
js
pause
mov
pop
les
adc
les
mov
repz
movsl
cmp
dec
pextrw
mov
push
or
ret
push
ficompl
mov
or
push
test
gs
popa
xorb
pop
adc
fstpt
adc
mov
add
push
add
outsl
jno
sbb
sbb
stos
std
xor
loopne
mov
adc
subb
mov
test
cmp
ds
jl
ret
inc
jnp
lcall
push
jno
sub
xlat
les
cmp
sub
pop
out
mov
or
mov
popa
mov
das
test
inc
inc
add
insb
push
pushf
dec
pop
popl
jae
push
mov
lock
dec
or
xchg
sti
popa
cmp
push
icebp
pop
and
out
push
addr16
ja
dec
add
dec
jb
push
int3
or
and
cmp
add
push
inc
sub
shll
out
je
inc
xor
and
outsb
cs
pop
xor
pop
and
xlat
mov
mov
or
bound
daa
inc
jmp
lock
imul
push
xor
add
addb
shrl
and
mov
cwtl
lods
or
cmp
mov
in
sub
mov
or
ds
les
rcr
fmuls
add
lret
push
jno
cwtl
leave
test
orb
fldl
fwait
popa
sbb
shl
rcl
rorb
imul
into
adc
add
sbb
and
inc
jp
jmp
or
jg
in
lock
outsl
nop
pop
or
jne
cmp
mov
cmpsl
imul
lret
xchg
popa
loop
mov
and
shlb
adc
jae
rolb
nop
movl
stos
rcll
mull
imul
addr16
dec
xorl
rorl
es
les
sub
push
mov
mov
dec
test
pop
xor
mov
out
les
pop
addb
loopne
test
mov
mov
add
jecxz
loop
xchg
call
xlat
call
mov
rclb
xor
rol
sbb
popa
sete
mulb
out
cmc
xor
mov
std
clc
push
roll
lahf
cltd
in
xor
rolb
scas
loop
shl
cltd
inc
mov
dec
mov
push
xor
lcall
pop
mov
jnp
sub
add
add
mov
xchg
fs
out
leave
sub
pop
xchg
mov
jo
shlb
stos
pop
sbb
mov
mov
inc
sbb
or
xchg
xchg
mov
or
inc
pop
pop
xchg
call
les
push
or
les
mov
cmc
dec
in
in
int
mov
xchg
xor
test
or
mov
xchg
adc
insb
push
sahf
enter
daa
cmp
sti
push
in
add
fsubrs
cli
add
pop
les
not
jnp
mov
call
pop
xchg
dec
int3
idivb
ja
adc
movsl
sbb
in
adc
rcll
pop
dec
add
dec
pop
dec
neg
mov
popa
adcb
andl
js
shl
fadds
or
mov
test
roll
push
int3
mov
mov
lea
inc
cmpsb
lret
es
mov
adcb
es
mov
push
call
fcoml
testb
mov
daa
pop
addl
int3
mov
add
jp
or
movl
add
out
adc
add
push
movsl
test
sbb
cmpsb
iret
add
rcr
dec
push
add
or
cmp
cwtl
mov
sub
sub
test
mov
sbb
xlat
jg
or
pop
pop
add
xchg
stc
xor
movsb
addr16
inc
or
mov
pusha
movsb
ljmp
cli
adc
or
loop
scas
sub
callw
dec
ret
sbb
mov
in
popf
lds
add
xorl
jmp
cltd
add
pop
std
dec
pop
cmp
xor
out
cwtl
ds
push
aad
xor
shll
test
fisubs
data16
xor
inc
das
pusha
push
mov
cmc
sub
xor
and
loopne
notl
dec
xor
sub
push
cmp
ret
xor
mov
scas
jle
and
fimull
iret
cmpsb
scas
pop
ret
adc
fwait
into
push
testb
repz
pushf
out
es
jno
les
jmp
mov
mov
push
fucomp
jb
dec
xor
fwait
inc
aas
jg
pusha
mov
mov
sbb
mov
pop
jb
xchg
stos
sbb
movsb
out
imulb
inc
pop
push
xor
dec
pop
adc
and
mov
adc
mov
add
scas
leave
shlb
lcall
jnp
shll
insl
test
mov
pop
cmp
or
ljmp
subb
inc
xchg
inc
fmuls
cmpsb
xor
cwtl
pop
xchg
lret
mov
vpmaddwd
inc
cmp
xor
ljmp
or
loopne
fadd
or
cwtl
and
dec
rorb
mov
push
adc
inc
xadd
mov
mov
clc
in
imul
pop
sbb
push
dec
rclb
xchg
movsb
outsl
test
mov
aaa
orb
xor
dec
xor
sbb
cltd
outsb
add
cmp
repnz
sbb
out
je
push
pop
aam
sti
pop
dec
push
push
xor
sub
mov
repnz
cmpsb
push
in
push
sub
test
xchg
ret
aad
add
gs
push
dec
sahf
lds
int
jo
fcmovu
fdivrl
jg
or
rclb
jo
jge
lods
lea
loop
mov
repz
add
repz
sub
imul
into
test
das
std
add
icebp
xor
gs
adc
loop
xor
out
jle
pop
cmp
mov
push
lret
cmp
and
add
dec
out
push
sub
push
insl
add
mov
mov
insl
lds
xchg
pop
dec
xor
out
or
push
sub
insb
movsl
dec
mov
fsub
mov
int
and
pop
movsl
fnstcw
sub
ret
out
mov
jo
cltd
sub
adcl
add
test
sub
loopne
lret
add
jg
sbb
jae
push
pop
fisttpl
push
inc
sbb
inc
xor
bnd
fcoml
iret
inc
pop
pop
aaa
push
xor
idivb
ret
xchg
leave
faddp
movsb
or
jno
push
or
mov
call
push
mov
and
inc
imul
test
adc
inc
gs
xor
mov
add
pushf
out
scas
and
xchg
adc
push
add
jnp
mov
dec
mov
mov
rcrl
inc
or
not
mov
in
xor
dec
jns
mov
sub
add
aam
or
les
cmp
lfs
cmc
cwtl
pop
xchg
cwtl
mov
icebp
mov
pop
bswap
int3
jo
xor
ss
push
gs
jbe
mov
pop
es
push
or
mulb
add
sbb
add
lock
scas
xor
xorl
or
adc
mov
jae
stc
xor
aad
fiadds
or
push
or
mov
int
mov
mov
add
inc
xchg
shll
add
loopne
test
push
add
push
xor
xor
cli
cwtl
cs
and
imul
xchg
cmp
cmp
aaa
rolb
out
dec
test
aaa
hlt
xchg
inc
test
mov
inc
test
pop
inc
adc
add
movmskps
pop
mov
into
out
ficompl
movsb
test
ret
dec
ljmp
mov
cmp
inc
decl
add
decl
std
aad
xor
in
rorl
in
adc
xor
add
jbe
icebp
daa
add
jge
pop
jae
cmp
cmp
fldl
out
sub
mov
lock
or
xchg
lret
pop
ret
andb
nop
jne
dec
ret
sti
rcr
push
in
dec
test
dec
sub
push
mov
rorb
dec
out
add
xchg
scas
dec
dec
inc
sbb
sub
push
test
or
imul
pop
pop
sub
js
push
js
iret
and
pop
cmpb
pop
mov
mov
add
xchg
out
movsl
int3
adc
int3
andl
adc
shlb
sbb
inc
insb
push
pop
adc
xor
dec
inc
push
inc
addr16
cmp
jge
dec
ljmp
sub
ss
push
cmp
mov
fisttpl
nop
sbb
mov
xor
inc
pop
popa
bound
adc
stos
lret
push
pop
pop
nop
fadds
lods
lds
cmpsl
mov
adc
xor
dec
in
add
inc
push
pop
pop
test
stos
out
clc
sub
lahf
xchg
aad
mulb
push
dec
mov
lahf
in
test
push
pushf
add
cli
jno
xchg
xor
inc
iret
push
andb
pop
leave
and
inc
sahf
nop
xor
jno
and
pop
aaa
adcl
cli
mov
xor
add
cld
test
imul
dec
jns
push
pop
adc
mov
rol
cmp
into
push
pusha
ljmp
shlb
hlt
xchg
push
xchg
or
lods
or
xlat
shlb
loope
adc
sub
push
sbb
pop
add
inc
sti
inc
xchg
adc
add
enter
push
dec
das
mov
jne
int3
arpl
inc
in
je
popa
dec
sbb
fisttps
push
arpl
test
outsl
lea
pusha
mov
jo
pop
insb
sti
sub
pusha
adc
sub
push
addr16
cwtl
adc
stc
sub
out
jl
mov
daa
mov
or
cmp
loopne
xor
xlat
lods
fsubp
cmpsl
test
push
int3
in
push
add
inc
inc
jo
and
lcall
mov
mov
pushl
push
movsl
sub
push
xor
ficomps
adc
pop
std
add
sub
stc
and
inc
and
add
fwait
jno
and
int
adc
shrb
fisttpll
and
lods
dec
lods
addr16
adc
and
mov
cmp
shlb
xchg
lds
add
dec
and
pusha
shl
add
cmp
stc
jmp
test
jmp
inc
cmpsb
mov
jp
xchg
xlat
pop
decl
and
cmpsb
adc
jno
cwtl
shrb
lret
clc
adc
repz
cs
dec
xor
push
sub
dec
adc
cmpsl
pop
jbe
fadds
mov
dec
push
sbb
ss
pop
mov
xor
ljmp
daa
or
data16
dec
mov
xor
fsubrl
movsl
xor
lods
es
xchg
sbb
rolb
subl
loope
push
xor
ljmp
add
rclb
sbb
psrlw
leave
iret
cli
add
or
rorl
sbb
test
cli
neg
xor
push
and
pop
sbb
adc
add
xor
mov
ficomps
xchg
stc
or
lcall
lcall
cwtl
cld
decl
or
mov
or
xchg
xor
mov
dec
je
mov
js
sub
pop
add
mov
dec
test
movb
adc
mov
or
aas
icebp
mov
push
or
fisubl
xchg
pop
fmulp
mov
mov
and
and
sub
ret
loop
mov
es
add
ret
not
mov
hlt
test
and
add
dec
push
dec
std
lock
mov
in
xchg
adc
cmp
icebp
cltd
mov
ror
lods
cltd
sub
adc
out
and
out
pusha
pop
jb
push
negl
fs
gs
cmp
ss
int3
mov
and
mov
xchg
repnz
or
leave
cwtl
push
jnp
pop
xor
out
mov
adc
xor
fists
shl
sub
or
xor
add
and
xchg
adc
mov
dec
cltd
or
push
aad
andb
lods
xorb
mov
cmp
adc
sbb
pushf
mov
mov
and
lods
pop
ds
lea
inc
sbb
arpl
cs
or
ret
lcall
cwtl
in
lret
out
mov
dec
push
mov
xchg
daa
arpl
cwtl
iret
xor
cmpsb
int3
and
dec
dec
inc
push
add
cmc
add
sub
out
dec
and
lret
add
push
fdivs
xor
iret
repz
bswap
xchg
push
test
push
aam
lahf
and
mov
cmp
movsb
mov
dec
mulb
pop
sbb
stc
andb
out
imul
dec
sbb
cmpb
push
test
repz
sub
push
xor
pop
cld
cvtps2pd
jl
xchg
cwtl
std
sbb
or
sub
xchg
popa
and
or
or
push
mov
cmp
dec
stc
xchg
xor
mov
loop
mov
mulb
sub
ret
xor
push
dec
rolb
mov
sbb
addb
jo
or
mov
fisttpll
or
sub
test
int3
dec
or
bound
nop
call
xchg
pop
pop
lods
out
mov
sbb
addb
push
shrl
sbb
mov
jge
xorl
mov
dec
xor
jge
add
cmp
pop
adcl
jb
stc
mov
in
adc
or
ret
inc
inc
dec
xor
push
les
mov
pop
in
out
or
dec
nop
add
daa
pop
jbe
xchg
outsb
xor
adc
push
shl
push
les
inc
dec
cmp
int3
xor
inc
push
cmp
shll
push
sub
jge
or
outsb
cmp
sbbb
cwtl
shr
pop
jbe
rorl
push
js
push
ficoml
sub
lods
xor
push
dec
mov
les
popa
cwtl
dec
pop
dec
mull
lods
out
xchg
sbb
mov
sti
push
push
out
movb
test
cmp
jge
fisubrl
sub
test
cli
and
push
add
int3
imul
and
cmpsb
add
fadds
xchg
test
ret
sub
arpl
mov
lods
enter
ds
stc
mov
cmp
pop
add
jbe
xchg
shl
or
clc
mov
dec
cmpsb
addl
cmc
addr16
in
loop
pop
lods
xor
imul
rcll
and
push
pop
pop
inc
add
push
repnz
add
jl
adc
push
lahf
push
inc
inc
xor
mov
repnz
mov
sbb
mov
push
xchg
sbb
notl
fcmovnb
iret
dec
push
mov
jle
xor
add
ljmp
and
out
loope
rorl
insb
out
jo
sub
inc
mov
iret
dec
mov
mov
push
sub
inc
rcll
pop
pop
cmp
pop
pop
xorb
jle
pusha
outsb
mov
sub
mov
pop
loope
or
mov
sub
inc
sub
and
or
cmpsl
neg
adcl
mov
mov
mov
inc
iret
mov
movsl
inc
sub
cmpsb
fwait
add
pop
push
dec
or
out
stos
lock
ret
fidivrs
push
dec
mov
mov
sub
push
pop
loope,pt
sbb
not
cmp
xchg
push
and
pusha
popf
ret
or
dec
xor
mov
sub
add
push
pop
pop
cmp
cmp
sub
lcall
push
ds
popf
dec
jne
rol
leave
or
sub
jecxz
addb
inc
mov
sub
sbb
xchg
int
xor
test
and
shll
imul
mov
pusha
imull
cs
xor
push
dec
xrelease
xchg
sbb
adc
mov
cmp
bound
not
inc
popa
push
add
les
lret
xchg
and
mov
mov
divb
rcrb
mov
movsl
pop
lock
dec
mov
xchg
dec
pusha
dec
fdiv
xchg
push
cmpsl
add
dec
and
mov
fwait
sub
leave
test
rcrb
pop
adc
add
pop
adc
mov
push
mov
cs
mov
sbb
mov
xchg
mov
loope
cmpsb
int
sahf
not
or
pop
sub
add
rol
xchg
leave
test
xchg
mov
idivl
xchg
insl
xchg
pop
int3
mov
sub
add
push
sub
fstl
jge
push
jb
and
andl
test
lahf
mov
cmp
mov
mov
add
cmp
xor
mov
sbb
mov
shrl
test
inc
cli
or
stos
fbstp
jp
xchg
xlat
popf
clc
inc
mov
popa
fistpl
leave
lahf
pop
sbb
mov
popa
repnz
mov
std
dec
loop
mov
mov
dec
mov
imul
sahf
ja
dec
sbb
loop
push
pop
pop
popf
dec
je
and
ret
or
lock
mov
mov
mov
push
mov
sbb
in
sbb
ror
push
xchg
addr16
fnstenv
fadd
scas
pop
xchg
mov
cmp
cltd
iret
mov
cli
add
cs
ja
xlat
inc
and
into
inc
dec
mov
cltd
inc
in
in
push
inc
inc
jno
dec
inc
mov
pusha
dec
lea
cs
mov
adc
mov
cmp
xchg
mov
jne
xchg
xchg
sub
mov
jg
std
scas
scas
std
cmpsl
daa
pop
dec
das
sub
fisttpl
and
stos
ss
mov
stc
cltd
aad
sub
sarl
int3
aaa
pop
mov
scas
xchg
lahf
iret
jnp
dec
roll
lcall
pop
mov
push
aas
fwait
jmp
rcll
and
pop
pop
test
sbb
out
adc
xchg
sahf
scas
rolb
xlat
push
inc
stos
jne
inc
sub
lret
aaa
lret
xchg
lahf
arpl
push
pop
xchg
fidivrs
fucomip
sbb
rcrb
pop
cld
adc
pop
pop
stos
jno
pop
lods
lods
notl
das
pop
adc
sub
mov
aaa
in
fidivs
push
mov
int3
and
xor
aad
fs
lods
movsb
sbb
andb
jnp
jle
sbb
int
adc
push
cmpsl
dec
lahf
xchg
jmp
outsl
mov
ja
mov
inc
fdivr
add
xchg
sub
inc
adc
xchg
pop
int3
dec
sbb
ficoml
dec
ljmp
out
insb
jae
xchg
cmpsb
add
shll
nop
repz
fadd
mov
pop
mov
mov
xchg
arpl
xchg
dec
or
sub
adc
fmulp
xor
out
xor
fsubl
bound
out
push
stc
repz
sub
pop
xchg
adc
and
sbb
aam
test
not
test
mov
add
xorl
push
mov
sub
insb
mov
scas
fwait
jg
ret
shll
cmp
mov
inc
iret
sub
adc
sbb
arpl
les
out
cmp
aaa
imul
jae
sbb
ror
cmp
jb
jnp
cld
cld
and
out
xchg
sub
mov
jb
mov
mov
adcb
jmp
test
inc
and
or
jae
sub
rcrb
cs
sbb
in
aas
and
mov
loope
lret
and
aad
push
lods
repz
cmp
fdivrp
xor
lret
sub
sahf
inc
andb
enter
cmc
pushf
jnp
or
xchg
mov
sahf
mov
push
js
inc
mov
and
add
push
scas
stc
and
out
adc
push
pop
stos
movsl
int3
pusha
addr16
xchg
sbb
pop
div
push
scas
xor
insl
jmp
mov
rdtsc
pop
inc
push
sbb
aad
mov
lea
sahf
sbb
push
dec
movsl
push
shlb
and
adc
or
and
std
aas
xchg
mov
add
adc
dec
icebp
push
shll
iret
jg
daa
mov
pop
push
pop
lcall
push
test
sub
rorl
xchg
xor
xor
loop
les
cli
sahf
or
xchg
xchg
mov
push
mov
gs
jnp
cmp
std
adc
mov
sbbl
fcomi
xchg
lods
es
jns
rcl
insb
adc
mov
or
sbb
xor
xor
movsl
shrb
jno
sbb
dec
pop
push
pop
cs
aaa
cmp
outsl
inc
fsubrl
call
dec
in
sbb
aaa
add
int3
jp
lret
nop
nop
mov
cmp
lods
shrb
mov
xlat
pushf
and
ret
stc
stos
pop
pop
sub
sub
pop
pop
and
mov
dec
jl
sub
sahf
aad
daa
or
cs
xchg
repnz
cltd
arpl
outsl
adc
dec
das
faddl
mov
xor
lret
gs
xchg
filds
daa
sub
fisubl
pop
in
loop
sbb
ljmp
mov
pop
mov
dec
aam
add
add
mov
pop
out
add
loopne
outsl
daa
mov
sahf
sub
pop
lods
or
cmpsb
push
inc
imul
int
mov
pop
sbb
mov
sti
cmp
sbb
movsb
out
add
sub
and
in
test
fbld
jbe
lret
ror
ds
sub
imul
sub
push
incb
je
fistps
sbb
pop
out
cwtl
pop
leave
mov
jecxz
imul
cwtl
das
cmp
out
inc
call
loop
pop
and
sub
add
fisubrl
mov
ja
pop
sbb
adcl
pop
xchg
orb
negl
adc
lret
xchg
push
insb
gs
call
fsubrp
aam
jns
jg
jo
jmp
cmp
xchg
dec
fcoml
aad
aas
int
inc
sbb
divl
imul
jnp
dec
icebp
popf
sub
jae
idivl
xchg
es
repnz
inc
das
sub
fmull
or
lods
in
ret
punpckhbw
or
xchg
sub
jg
nop
sub
cmpsb
add
inc
cmp
fcomi
inc
imul
sbb
test
sbb
rolb
xor
dec
and
xor
fs
out
pop
cmp
out
add
out
scas
andb
or
test
pop
aad
jae
mov
push
add
and
stc
subl
adc
pushw
fnstcw
mov
addr16
cmp
push
push
mull
pop
dec
ja
fisubrs
push
xor
fiaddl
mov
add
mov
push
cmp
mov
mov
cmp
iret
jge
and
fwait
inc
push
sbb
jp
jo
and
testb
cmp
lcall
mov
dec
das
addr16
xchg
and
cmp
int
or
imul
or
dec
and
lret
in
mov
cmp
push
je,pt
fs
pusha
lds
adc
or
xor
ret
sbb
sub
lods
cmc
imul
into
jb
dec
sbb
xor
cmpsb
push
sub
pop
jg
aaa
es
mov
xor
cmp
push
xlat
mov
jmp
pop
cmp
mov
sbb
jg
sbb
mov
xor
xchg
cmp
cmp
mov
hlt
sbb
std
mov
ret
mov
cmp
fmull
es
xor
cmpsb
adc
xor
cld
mov
push
mov
cmp
stc
inc
xor
pop
push
xor
mov
xchg
into
popa
and
fistps
mov
or
fidivrl
xchg
jge
aad
xor
pop
sahf
leave
mov
xchg
jg
in
pop
and
push
jns
push
daa
leave
and
mov
sub
cmp
dec
fmull
int3
aas
or
js
push
mov
es
fsubl
jbe
fisubl
lea
fmul
sahf
cmpl
iret
mov
mov
and
sub
icebp
jle
je
sub
mov
lock
outsl
sub
sub
pop
xor
xchg
cld
pop
sysret
pop
adc
cmc
push
ss
repnz
dec
mulb
dec
stos
pop
sbb
dec
aaa
add
ss
cmp
stos
outsl
cmp
xor
pusha
aaa
gs
mov
mov
adc
and
xchg
loope
sbb
xor
js
inc
sub
cmp
stos
mov
pop
sbb
xor
imul
shl
mov
data16
cmp
xor
pop
inc
sti
inc
call
and
arpl
fstpt
mov
sbb
xor
lods
insb
and
fcompl
mov
je
int
hlt
mov
decb
pop
xchg
mov
jb
mov
mov
pop
lea
out
adc
sbb
add
lret
mov
sbb
push
sbb
fldt
and
sti
mov
inc
sbb
cmp
pop
dec
sarl
xor
pop
sti
sbb
push
shlb
repz
out
test
das
lea
pop
in
push
sub
test
ss
gs
sti
jge
ljmp
and
mov
adc
scas
sub
pop
or
mov
xchg
cmp
jo
cmp
daa
add
dec
ja
aaa
popf
cmp
insl
push
jp
pusha
into
sarb
jns
lcall
push
cmp
insb
or
sbb
gs
paddusw
push
lods
arpl
xlat
in
inc
xor
inc
cmp
pushf
fwait
cmp
sahf
lret
inc
push
sub
and
jmp
mov
dec
inc
aam
loopne
out
sarl
ror
cld
jle
push
adc
cwtl
cmp
xchg
and
jmp
fdivrs
or
mov
mov
pop
mov
lods
mov
cmpsb
test
ljmp
push
std
dec
int
mov
ss
jb
inc
call
mov
dec
scas
out
or
loope
dec
enter
sub
mov
out
jb
cs
lock
jle
push
movsl
jne
mov
xchg
lock
cmp
and
iret
cmc
lret
sarb
xor
out
mov
adc
lcall
jno
xlat
lahf
imul
mov
inc
mov
push
mov
lods
dec
sub
fs
lcall
lret
js
loopne
aaa
jne
xchg
cmp
aad
stos
mov
inc
cld
mov
iret
or
fwait
mov
scas
or
mov
in
in
dec
add
call
jecxz,pt
cld
aaa
cwtl
outsb
repz
ficomps
push
sub
je
fsub
sub
cmp
lods
ds
jmp
add
and
or
movsl
test
outsl
mull
fstps
pop
cmpsb
mov
mov
iret
sub
sbb
dec
push
daa
mov
std
shrl
xchg
inc
inc
and
dec
hlt
and
scas
fisubrs
enter
jge
cli
jp
sahf
mov
xor
stos
sti
mov
orl
repz
jp
jnp
aad
pop
imul
or
cltd
cmpsb
lds
mov
inc
mov
test
fnsetpm(287
andl
stos
xchg
cmpsl
push
dec
call
jmp
lahf
lods
dec
xor
aas
xor
xor
flds
scas
add
divb
loope
mov
push
and
sti
stos
and
inc
out
mov
stos
outsb
xchg
lods
and
xchg
stos
mov
xor
jle
lret
jnp
xor
mov
push
push
adc
add
aaa
pop
dec
cmc
out
jns
jmp
inc
xchg
xor
lret
imul
imul
pop
mov
es
loopne
xor
daa
test
outsl
fisubrs
push
dec
cld
dec
ficomps
mov
mov
add
inc
mov
adc
sahf
cmp
xor
sbb
jecxz
ficomps
jns
cmpsl
xchg
cmpl
inc
sahf
inc
mov
into
inc
pop
sub
push
aaa
fmull
adc
call
fwait
cmpsl
add
dec
rsm
stos
jmp
mov
outsb
xchg
cmp
cmp
cli
ret
cmp
pop
in
mov
lods
ror
repz
repnz
jg
sbb
rorb
push
mov
mov
je
jne
cmpsb
and
inc
sub
clc
and
mov
cmp
lahf
jp
mov
sub
mov
rclb
and
or
mov
pusha
cmp
jle
push
add
icebp
and
in
inc
sbb
jo
xor
das
mov
out
adc
into
jno
dec
lods
filds
and
add
test
popf
fwait
into
sbb
stos
enter
jbe
pop
fstpt
xor
dec
adc
or
lret
in
aas
and
aas
cmpsb
push
fwait
inc
adc
es
jae
jbe
jae
xor
mov
jge
lret
add
pop
incl
adc
addr16
xor
outsb
fs
in
pushf
rorb
ja
leave
hlt
inc
dec
mov
ds
and
cli
sbb
cmpsl
je
cmp
lahf
ds
sub
lods
int3
cmp
popf
scas
arpl
push
test
pop
cmpsb
fwait
mov
les
add
out
gs
test
xchg
and
out
jle
icebp
jmp
aaa
arpl
mov
cmp
sbb
movq
roll
imul
xor
mov
cmp
rcl
jae
in
lret
mov
scas
lret
mov
and
pushf
insb
pop
ja
xchg
daa
dec
sarb
add
lods
insl
cs
aad
jp
and
inc
mov
out
push
xlat
lret
mov
pop
roll
mov
xor
mov
rcrl
mov
outsb
jnp
pop
mov
jecxz
push
call
stos
mov
push
cmp
cmp
and
push
ljmp
inc
and
pop
outsb
nop
cmp
add
pop
ret
adc
push
and
mov
pop
adc
or
and
pavgb
test
nop
ret
lods
cli
or
aaa
out
mov
push
and
sub
das
xchg
mov
aam
adc
out
fdivl
pop
inc
jg
outsl
push
cmp
sbb
fwait
add
mov
ret
iret
fdivrs
ljmp
pushf
xor
out
and
add
jg
enter
mov
jne
fwait
mov
rcrl
fisubs
mov
jae
negl
push
lock
pushf
adc
fcomps
cmp
xor
stc
sub
push
push
mov
xchg
pop
cwtl
cmc
xchg
incl
xchg
cli
je
mov
and
push
and
pop
pop
leave
adc
out
cmp
push
mov
out
jbe
ds
and
adc
ret
arpl
inc
sti
and
xchg
jle
mulb
fs
and
or
lret
mov
sahf
push
outsb
test
mov
push
hlt
sub
dec
fistl
popa
bound
outsl
xor
aad
mov
aas
in
fdivp
mov
sub
scas
jno
xchg
faddp
ret
sub
mov
mov
enter
aas
xor
jo
movsl
clc
jae
lods
inc
mul
jmp
mov
test
sub
mov
cmp
xchg
das
or
sbb
scas
fdivl
inc
jle
mov
mov
scas
adc
into
enter
fnstenv
dec
sar
and
mov
pop
mov
pop
cmp
and
inc
aas
lods
xor
jo
xlat
out
hlt
sub
lcall
inc
test
add
cs
scas
pop
int
sub
push
popf
or
cmpsb
daa
xchg
push
addb
nop
fwait
pop
ds
add
or
cmpsl
fstpl
push
mov
add
ljmp
mov
test
pusha
cmpsb
and
pop
adc
stos
mov
lcall
cwtl
daa
hlt
pop
cli
aaa
mov
rolb
imul
sub
test
mov
stc
cmp
cmp
repz
in
xor
jp
cmpsl
lcall
cmp
sub
outsl
sbbl
fcmovnu
push
sbb
loop
aam
add
mov
call
out
push
dec
test
mov
and
push
and
inc
or
repnz
jns
enter
mov
sbb
or
xor
pop
aaa
mov
cltd
dec
push
ja
enter
fistps
and
clc
mov
xlat
pop
jle
enter
shl
push
xchg
mov
jne
je
lock
jg
inc
adc
outsb
inc
rclb
lds
sarb
cmp
stc
cmp
xchg
out
jne
xor
iret
pop
repnz
outsb
outsb
mov
fs
inc
lcall
imul
out
sbb
fildll
cmp
jl
and
mov
pop
aaa
test
push
addr16
and
pop
push
sbb
insl
test
dec
xchg
add
ljmp
scas
adcl
clc
mov
add
dec
inc
sub
and
gs
sbb
loop
mov
lds
es
mov
mov
sub
fsubrp
cmp
pop
inc
push
fstps
fwait
andl
outsl
dec
cmp
push
sti
iret
scas
cmp
jae
cmp
inc
xchg
ja
orl
lods
xchg
lea
inc
out
pop
mov
sub
cmpsb
mov
push
pop
addr16
mov
inc
out
xchg
pop
outsb
test
sbb
sbb
enter
iret
lret
or
aam
cmc
adc
jne
pop
mov
insb
sar
je
in
jb
popf
roll
mov
pop
inc
fdivr
push
push
scas
pop
decl
clc
addr16
filds
push
pop
add
and
push
in
aaa
push
or
adc
jnp
mov
add
mov
shlb
das
mov
je
lret
mov
pop
insb
inc
push
addr16
push
or
int3
stos
push
lods
fcmove
push
adc
fisubs
mov
pop
add
lcall
mov
filds
pop
test
adc
divl
push
pop
sbb
iret
and
packuswb
and
mov
daa
aas
movsl
fmul
out
and
mov
iret
out
push
fnstcw
xor
les
aam
and
in
mov
rolb
inc
pop
jle
xor
mov
pop
mov
dec
aad
xlat
pushf
icebp
shr
xor
xchg
sbb
push
ja
ss
jg
mov
mov
jbe
rcrb
xor
fisttpll
sbb
dec
loopne
sbb
ss
jbe
push
cwtl
inc
rclb
cmp
sub
xchg
iret
lds
maxps
popa
bound
cli
sub
pop
jecxz
fsubl
aaa
dec
jle
xchg
test
loopne
ret
sub
das
mov
jno
in
xor
mov
fcomps
fists
mov
sub
pushl
xor
mov
xor
in
repz
data16
sbb
lahf
mov
inc
sarl
test
dec
iret
lea
push
mov
fmull
mov
dec
test
mov
fbld
jl
mov
fmulp
rdmsr
mov
cwtl
jecxz
inc
fisubrl
aad
sub
fsubl
arpl
adc
jnp
cmp
ja
cmpsl
xlat
mov
std
xor
mov
sbb
xchg
adc
mov
push
lret
imull
xor
cmp
shl
cmp
mov
sbb
stc
xlat
pusha
dec
xor
imul
test
and
in
adc
jns
out
xor
jne
add
imul
out
pop
xor
cmp
and
paddw
mov
aaa
stos
lcall
jmp
daa
inc
pop
idivl
cmpsl
ja,pn
fmull
popa
pushl
cmp
mov
and
stc
fnstenv
mov
ss
pop
adc
enter
leave
in
std
ljmp
push
dec
cmpsl
fstpl
scas
mov
rcll
sub
test
xor
cmpsl
xlat
stc
leave
pop
loop
lods
stos
into
cmp
mov
adc
jne
or
jg
mov
push
inc
loopne
popa
mov
mov
push
rcll
cmpb
jo
mov
fdivrl
pop
clc
dec
mov
stos
clc
cmp
stos
dec
aas
xlat
push
jl
pop
push
ss
enter
mov
in
mov
jne
jecxz
push
fsubl
aam
sub
fists
out
add
cld
loop
mov
sti
push
cmpsl
fistpll
xor
jmp
jne
das
jne
cmc
cmp
push
scas
adc
mov
jg
popa
movsl
lret
mov
cld
cmp
jg
push
mov
enter
cwtl
sahf
cmp
outsl
and
xor
dec
adcl
insl
jne
movsb
add
ds
cwtl
lret
jecxz
mov
pop
sarb
adc
jl
xor
lret
xor
pop
rcll
pop
lret
push
fimull
pop
push
pop
or
push
lods
divb
insl
xor
xor
inc
or
jmp
out
mov
push
dec
mov
or
sti
push
or
or
mov
sbb
push
icebp
push
adc
push
adc
sub
vpavgb
stc
fs
out
fs
in
fs
out
fs
std
fbstp
cmp
rcrl
aas
cmpb
addr16
fists
add
lahf
lret
testb
cmpsl
xor
sbb
jns
aaa
out
std
das
push
ret
out
push
mov
push
push
fidivs
shrb
and
mov
mov
add
jb
mov
fwait
push
lods
jb
sub
adc
jl
sbb
ret
bound
adc
rcll
ja
fdivrl
xor
xchg
add
mov
inc
pusha
mov
outsb
mov
mov
inc
repz
inc
adc
dec
leave
add
addl
in
pop
into
xor
cmp
mov
cli
jmp
adc
lcall
lret
sbb
imul
adc
xor
sub
mov
sbb
push
sub
mov
popl
dec
jge
mov
in
dec
add
mov
sub
clc
and
fildl
cwtd
popa
mov
scas
mov
xchg
les
mov
outsl
push
lahf
sbb
mov
test
sub
jp
cs
ret
leave
lock
fwait
pop
mov
arpl
cld
cmp
int3
push
xorl
xchg
out
in
out
stos
arpl
stos
mov
xor
lret
aas
ljmpw
xchg
cmc
jecxz
iret
or
int3
lahf
maxps
cmp
repz
out
push
sub
jge
dec
sub
pop
test
loopne
ds
in
subb
stos
pop
int3
cwtl
cltd
xchg
xor
add
fyl2x
sub
loope
dec
lea
mov
xor
in
outsb
loopne
sbb
cs
sub
mov
push
cmpsl
mov
cmp
out
push
outsb
mov
out
lcall
mov
addr16
sarl
lods
xchg
mov
dec
out
pop
repz
pop
loope
adc
mov
stos
cmpsb
dec
in
inc
aaa
out
negl
fwait
push
mov
xlat
sub
aaa
leave
test
out
cmpl
scas
xor
out
mov
sbb
mov
sbb
push
dec
fmul
out
dec
mov
cmp
mov
pop
jmp
jp
or
inc
xor
lcall
or
jle
mov
pushf
bound
sbb
ds
pop
test
xchg
xor
fcmovb
aaa
sbb
cmpsl
sbb
mov
mov
jl
xchg
popf
mov
idiv
add
stos
mov
mov
pop
shrb
pop
xchg
ss
xchg
mov
daa
bound
movsb
fistpll
shrb
out
jne
in
xor
xchg
xor
mov
nop
and
sbb
adc
xor
dec
adc
cmpsl
mov
and
mov
lock
sub
leave
dec
aaa
or
lret
test
fsubr
sbb
xorb
lahf
popa
push
scas
out
cli
mov
jge
daa
testl
data16
or
popf
in
pop
xchg
mov
popa
fdivl
inc
xlat
fistpl
xchg
std
lock
stc
adc
jb
jl
bound
cld
into
xor
xchg
movsb
pop
xchg
sarl
xor
shlb
jg
cli
cmp
ljmp
addr16
cmp
and
imul
jle
out
out
lret
loope
inc
outsb
mov
cmp
push
cmc
out
sbb
inc
mov
loope
push
push
jge
inc
rcr
sti
rcll
pop
dec
dec
test
jae
cs
scas
mov
add
sub
stos
bound
pop
add
push
inc
xchg
lods
jge
ds
xorb
and
lret
jle
or
push
lea
fbld
push
lea
dec
jns
call
xor
out
add
sub
and
xor
or
add
shlb
out
gs
negb
cmc
clc
scas
sti
subl
push
mov
pusha
xor
hlt
ss
jnp
cmp
and
push
fisttps
test
push
dec
ss
imul
jno
test
inc
pushl
mov
sub
and
cmp
xor
jecxz
mov
aad
cmpsb
imul
cmpsl
dec
clc
dec
cltd
arpl
outsl
outsl
sbb
jg
jl
xchg
push
imul
pop
fildll
and
sbb
xor
or
dec
mov
add
shr
imul
inc
push
in
push
xor
mov
pop
push
adc
repz
jns
repz
or
dec
add
scas
aam
jge
mov
dec
fidivrs
mov
imul
xor
mov
movsl
fmul
mov
and
xor
cld
mov
jl
mov
iret
push
sahf
inc
stos
adc
mov
or
sub
loop
lret
xlat
inc
jbe
int
fsubl
lret
mov
pop
cmp
jno
add
and
popa
sti
push
push
and
mov
pop
inc
add
cmp
push
enter
mov
inc
cmpsb
adc
ret
sub
adc
inc
lret
mov
mov
sub
out
movsb
jnp
lcall
inc
push
imul
adc
xor
dec
push
push
push
lcall
ss
lcall
sarl
sub
push
lret
outsl
imul
shrb
pusha
adc
mov
dec
test
push
stos
in
adc
pushf
xchg
movntq
push
in
xor
fcompl
scas
fxch
adc
fidivrs
add
mov
push
xor
rol
dec
mov
jecxz
popl
out
push
mov
clc
pop
push
sbb
mov
loopne
in
mov
ret
enter
loope
loopne
mov
aaa
test
out
iret
loop
or
jo
push
cmp
lret
lods
mov
push
stc
mov
mov
cmp
into
mov
pop
pop
in
in
cmp
out
mov
int3
in
dec
adc
cmp
or
aaa
fists
lods
dec
add
testb
push
mov
rcll
and
outsb
and
xchg
in
pop
daa
and
xchg
imul
mov
mov
ret
int
or
xlat
sub
xor
sti
nop
xchg
fmull
adc
daa
movsl
mov
adc
ret
inc
sbb
out
dec
sub
sti
jae
in
fildll
minps
xor
jp
xchg
mov
jecxz
jg
push
adc
icebp
stos
imul
test
scas
enter
pushf
xor
pop
mov
push
add
in
mov
scas
scas
repz
in
push
xor
jle
and
lds
dec
les
xor
adc
repnz
dec
and
cmpsl
pop
mov
mov
adc
shlb
jp
rolb
inc
outsl
into
mov
jmp
loopne
inc
fsubl
stos
dec
push
rcrl
add
test
nop
cmp
cli
fstp
push
icebp
pop
xor
mov
cli
movsb
mov
sub
mov
sbb
mov
mov
dec
incl
and
out
lret
cld
into
sub
aas
out
xchg
rcll
jae
xorl
and
cmp
add
or
cmpsb
in
push
push
mov
test
mov
ds
fisttps
ljmp
daa
div
add
jl
mov
sub
xchg
cmp
in
mov
or
push
aas
push
or
into
sbb
cmp
mov
ret
cmpsl
push
andl
fisttpl
insl
mov
jbe
fidivs
dec
sub
in
pop
fbstp
dec
js
mov
jg
mov
mov
in
inc
roll
test
decl
or
sahf
pushf
jle
aad
addr16
lcall
insl
lods
es
push
ljmp
lret
testb
orl
and
pop
adc
shlb
xor
iret
lods
insb
out
cmp
fldt
cmpsb
jnp
cs
pop
sbb
add
push
or
push
xor
cmp
add
std
in
and
arpl
adc
call
xchg
xor
ljmp
mov
fidivs
sbb
dec
inc
lahf
sub
xor
aam
std
aas
jno
cld
push
add
orb
jge
aaa
mov
jno
add
roll
shlb
adc
add
pop
movsl
insb
lcall
mov
inc
inc
daa
xchg
inc
xor
rcr
popa
xor
sub
fimull
jg
sbb
outsl
inc
xchg
xlat
test
rcll
test
mov
lret
sbb
test
iret
sti
adc
xor
jne
mov
lcall
pop
mov
aaa
cs
sub
sbb
and
ss
aas
mov
fsubl
mov
cs
gs
test
out
lcall
lcall
mov
mov
sub
xchg
mov
test
mov
mov
es
mov
push
mov
mov
fdivr
mov
pop
mov
add
and
dec
pop
lret
fld
sar
push
pop
jbe
in
fsubp
repnz
mov
fimull
and
lret
add
das
ja
sbb
push
mov
mov
mov
clc
jb
inc
add
push
sti
xlat
xlat
mov
roll
add
enter
mov
rcll
fldt
aad
pop
or
inc
stos
adc
dec
xorb
sub
repz
push
in
aaa
push
ljmp
inc
cltd
pop
aad
je
xor
xor
pop
xor
mov
xchg
fsubr
jecxz
loop
mov
inc
pop
ret
iret
and
rcrb
int
xor
cmc
js
out
adc
add
subb
xor
loopne
incb
fcompl
js
cmp
xor
lahf
stos
ja
lahf
repz
mov
jae
insb
into
shll
test
imul
imul
mov
fsubrs
mov
adc
jnp
popf
and
cmp
and
iret
cmc
dec
sub
sub
mov
fwait
das
push
aas
adc
and
push
aaa
hlt
xor
xchg
xor
pop
ret
lret
add
ret
out
ss
insb
and
mov
xchg
push
pop
les
les
push
repz
ja
mov
inc
sub
dec
cmc
lret
fadds
or
ja
scas
lods
xor
fidivrl
fsubr
jg
movsl
xchg
push
sub
fucomi
aas
jle
xchg
mov
out
into
std
pop
xor
jmp
push
jne
push
adc
sub
loope
mov
shlb
inc
sub
and
sub
and
aaa
lods
mov
ss
or
sbb
mov
lcall
leave
punpckldq
pushf
shrb
xor
lahf
cltd
and
mov
sub
xchg
jg
daa
in
push
sbb
and
hlt
mov
jne
lea
shlb
test
lahf
xchg
addr16
cwtl
add
ljmp
imul
adc
test
in
pop
xchg
fldl
jns
mov
jae
lea
addr16
adc
mov
dec
hlt
std
popf
lahf
fdivrp
arpl
dec
cmpsl
repz
call
inc
mov
sbb
push
push
mov
pop
adc
mov
inc
cmpsl
jb
lods
cwtl
push
inc
outsl
mov
push
sbb
mov
jg
sbb
pop
dec
or
dec
sbb
sti
flds
lds
cmp
bound
cmpsl
pop
int3
neg
lds
jg
insl
push
add
pop
and
fs
stos
ffreep
in
xchg
cltd
dec
fists
movhps
xor
mov
lret
in
leave
push
xchg
mov
pop
out
sbb
stos
arpl
test
or
outsl
push
out
push
dec
icebp
pop
lock
or
fcompl
repnz
in
in
dec
mov
fwait
lahf
loopne
cmpsl
add
sub
push
incl
or
or
out
jno
testb
in
push
jne
scas
stos
call
stos
imul
cmp
push
cmp
mov
cmp
and
and
cmpsb
mov
xor
mov
lret
mov
push
xchg
js
mov
mov
fcmovne
decl
jno
push
jmp
sub
inc
push
add
outsl
pop
sub
add
out
xor
sub
jbe
addb
out
sub
mov
iret
add
fwait
sbb
lret
lock
out
mov
jecxz
jle
jne
mov
aaa
ljmp
push
adc
pop
mov
mull
sbb
xchg
jae
push
sub
pushf
test
xor
mov
fildll
xor
clc
mov
je
mov
sti
mov
decb
jg
and
adc
lods
fnstenv
and
inc
push
mov
rcrb
sti
loop
stos
lret
sub
cmp
jbe
andb
loop
int
div
nop
xchg
lock
imul
lods
xchg
adc
lods
je
sub
push
ss
mov
cltd
fs
imul
fcom
xor
fcomi
daa
cld
jnp
ds
fwait
mov
push
mov
push
xor
les
data16
lods
fwait
addb
sub
push
adc
or
xor
divb
cmp
aaa
mov
push
mov
mov
xchg
iret
test
sbb
mov
test
fidivl
lock
or
lcall
or
aas
mov
adc
enter
jno
jecxz
jnp
or
and
insl
pop
rcll
push
or
int
es
js
fwait
mov
dec
mov
mov
mov
movsl
in
test
test
hlt
ss
cmp
add
fs
mov
enter
lret
sbb
aas
sahf
inc
jb
cltd
fmull
fnstcw
mull
cmp
dec
in
xchg
or
jae
sbb
push
mov
xor
xchg
xor
movsb
imul
xchg
push
jp
mov
lret
dec
in
pop
clc
test
lds
data16
imul
xchg
adc
or
cmp
jge
aad
es
add
pop
es
sub
cmpl
mov
jecxz
mov
scas
es
out
test
sarl
mov
add
cmpsb
das
shll
jbe
cltd
inc
add
orl
cmp
jnp
pop
cmp
sub
xor
dec
scas
mov
mov
sub
sbb
out
jmp
mov
sub
pop
out
shrl
decb
sbb
mov
shrl
ret
sub
inc
cmp
mul
jb
out
in
xchg
mov
mov
movnti
and
dec
xor
jge
fimuls
jns
fwait
xchg
push
in
lahf
sub
push
cmpsb
mov
push
xchg
incb
xchg
into
push
ret
mov
adc
iret
cmp
daa
add
push
je
dec
cli
and
out
adc
mov
cmp
stos
xchg
inc
dec
mov
pop
and
outsl
es
xor
and
add
adc
je
andl
adc
or
loope
lcall
out
mov
pusha
stos
out
stos
das
cld
push
cmpsl
xlat
dec
inc
shl
dec
sub
push
stc
ret
das
shr
pop
into
push
and
xor
cld
inc
mov
cld
pop
cmpsb
ret
rol
lods
pop
push
mov
mov
mov
push
jnp
xor
aas
xor
fadd
bswap
out
or
push
testb
hlt
cmp
cli
out
sub
push
stc
jmp
add
jmp
push
push
xchg
aas
sbb
jo
cld
jnp
in
jns
jmp
ja
jmp
adc
clc
outsl
int3
xchg
insl
mov
adc
data16
xchg
dec
push
lcall
out
sub
pusha
das
xchg
outsb
pop
jp
jo
mov
pusha
cmpsl
lods
ret
jo
xchg
mov
cmp
add
ljmp
sbb
mov
sahf
add
cmpsw
mov
pop
dec
mov
jge
es
fisubl
scas
adc
mov
scas
sub
sti
jg
mov
cs
jg
push
sub
sbb
jb
stos
int
and
int3
dec
pop
xchg
stos
and
push
pushf
arpl
add
lcall
push
rorb
rcrb
inc
push
dec
aad
repz
stc
repz
std
cld
and
mov
mov
les
xchg
mov
fwait
mov
pop
out
dec
and
sub
cld
dec
jns
mov
outsl
add
ljmp
mov
popf
sbb
ja
push
das
aas
sub
rcrb
mov
mov
call
push
mov
mov
fs
lret
jnp
pop
mov
sub
mov
test
icebp
cmp
jnp
popf
es
imul
and
add
dec
adc
xchg
push
aaa
pop
aaa
mov
xor
scas
xchg
imul
jbe
ficoml
jp
pop
ja
push
inc
push
scas
pop
sub
or
fidivl
mov
add
pusha
or
inc
mov
insl
inc
and
xor
cs
je
gs
xchg
sbb
and
inc
jg
scas
jb
mov
call
push
lods
xchg
add
cmpsb
mov
imul
addr16
lcall
das
test
outsl
popa
shl
or
lcall
jmp
adcl
mov
cmp
into
jae
pop
aad
lahf
pop
shrb
add
lods
shrb
aaa
jg
sub
jmp
cmpsl
add
int
push
loope
fists
dec
mov
fiadds
sbb
aas
push
adc
int3
cmpsl
push
jae
sbb
pop
loop
sti
aad
iret
pop
dec
adc
inc
mov
dec
xor
jecxz
ja
das
rcpps
mov
and
xor
call
xor
sub
fldenv
mov
xor
loop
enter
js
adc
mov
std
cmc
loop
push
daa
inc
sub
jle
or
and
xchg
and
mov
loop
aaa
jne
fidivrl
push
xlat
aaa
mov
test
or
sub
fisubrl
aam
add
xchg
imul
mov
aad
sub
inc
and
enter
mov
arpl
test
cmp
pop
push
adc
aam
push
sahf
lock
fnstcw
std
jg
mov
out
insb
rcl
push
sub
fdivl
popa
push
fcoms
testb
test
push
pop
and
push
xor
fisttpl
cmpsb
xchg
mov
sub
pop
aad
lret
and
les
out
aaa
xlat
aam
lcall
xorl
and
pop
loopne
push
fstpt
pop
xchg
pop
pop
adc
rcll
sub
xchg
cmpsl
xor
and
jnp
jb
clc
fnsave
mov
popa
pop
pop
xlat
sbb
pop
jl
loop
scas
or
fldl
lock
call
mov
test
pop
push
xor
or
add
push
ds
fwait
and
sbb
cmc
sbb
stos
idivl
sub
jb
sti
clc
push
adc
mov
pop
daa
aad
jne
pop
xchg
pop
xchg
lret
mov
fbstp
jl
roll
es
jge
sbb
xor
inc
mov
or
xchg
in
dec
and
pop
rcrl
jle
push
ss
mov
xchg
hlt
cld
mov
daa
mov
jecxz
mov
jae
xchg
rorb
push
push
popf
add
ffree
pop
test
fiaddl
repnz
mov
or
adc
add
in
xor
pop
mov
test
clc
jecxz
push
inc
sbb
push
adcl
pop
movsl
fistpll
ds
roll
fiaddl
xchg
jge
testl
pushl
nop
jecxz
scas
int3
subb
fldenv
or
mov
sbb
and
ret
movsb
mov
bound
sbb
fdivrl
cwtl
cwtl
arpl
loop
dec
cltd
jmp
enter
fsubrl
ficomps
dec
mov
nop
lock
js
add
ret
inc
lock
nop
jmp
popf
xchg
sub
push
das
jg
pusha
scas
int
ss
or
lcall
ret
mov
mov
jno
mov
add
cmc
lret
ret
xor
jns
push
mov
aam
in
movsb
xchg
fildll
push
cli
aas
sub
sub
aaa
xchg
pop
ret
jg
jp
pop
dec
fdivl
lds
mov
aam
cs
jmp
shll
jle
xor
sti
js
addr16
xor
fucom
jnp
pop
dec
test
mov
popa
mov
pop
adc
inc
das
add
popa
xor
ljmp
sahf
push
adc
shl
lcall
mov
nop
and
nop
adc
lods
push
jmp
notb
cmp
jl
iret
shlb
data16
push
dec
out
es
loope
out
iret
loop
into
jle
mov
loopne
loopne
in
inc
stos
out
jne
cmpsb
push
insb
xchg
or
inc
or
inc
pusha
sub
inc
jns
std
inc
sbb
cmpsb
adc
movsl
or
loop
pusha
lods
ljmp
push
mov
int3
xor
movsl
mov
and
sahf
push
push
sbb
sub
push
pop
pop
stos
gs
inc
mov
jbe
inc
ret
inc
xchg
mov
dec
sbb
in
inc
xor
loope
int
sub
adc
mov
roll
out
pop
imul
inc
jb
ror
outsb
xchg
cs
lock
add
into
adc
hlt
dec
cmc
aad
sbb
movsl
cmc
mov
mov
imul
mov
xor
mov
jp
cmc
daa
mov
or
cmp
aam
sub
mov
mov
jmp
test
and
arpl
mov
in
leave
mov
mov
orl
leave
sub
and
mov
push
aaa
mov
sbb
jecxz
inc
jo
lods
jge
sub
hlt
or
jo
jne
mov
cs
imul
fptan
popl
repnz
out
push
add
mov
jae
fadd
lret
pop
rcrl
dec
test
repz
popl
mov
dec
jp,pn
aad
imul
in
mov
aad
std
mov
stos
sbb
xchg
ljmp
popf
sub
mov
in
adcl
pusha
movsb
xchg
xorb
sbbb
loop
push
push
clc
xlat
fimuls
xchg
iret
sub
cmpsl
mull
sbb
xor
dec
pop
outsl
lret
pushw
stos
test
cli
iret
inc
cmp
jge
daa
stc
mov
std
std
pop
lcall
jne
les
imul
push
xor
inc
call
jb
dec
jecxz
cmc
aaa
jno
mov
das
addb
lahf
mov
inc
movsb
mov
imul
sti
xchg
add
insl
bound
imulb
fxch
cmp
das
push
lret
addb
enter
mov
pop
cmpsl
xchg
push
fwait
popa
xchg
cltd
dec
and
cmp
sub
jmp
scas
push
test
test
jmp
scas
jnp
cmc
scas
pop
cmpsl
stc
or
adc
xchg
mov
inc
xchg
xor
cmp
fdivs
xor
pop
add
xor
xor
jge
push
lahf
mov
fildll
dec
jb
jb
add
sub
lret
lret
imul
jp
out
shll
jl
insb
pop
movsl
inc
mov
es
adc
imull
in
jmp
test
out
jnp
sub
inc
in
test
call
js
es
jl
jmp
push
pop
in
sub
lods
hlt
jge
fisubrs
cmp
xchg
ficoms
mov
adc
inc
sbb
inc
cmp
packsswb
clc
fnstenv
xor
shrb
dec
nop
fildl
and
sbb
jl
sbb
cmp
test
ja
cmp
sub
in
addr16
scas
sub
xchg
jg
mov
jge
sarb
or
out
loopne
outsb
test
stos
in
mov
fldcw
dec
outsb
add
jbe
mov
and
fidivl
and
mov
enter
fdivl
outsl
cmp
cwtl
test
testb
xor
mov
imull
std
xchg
test
cwtl
test
xchg
imull
sbb
jge
dec
add
daa
shlb
and
mov
xor
dec
sar
inc
enter
jl
imulb
fiadds
pop
dec
pop
popf
icebp
mov
aam
jp
orb
mov
cmp
mov
xchg
fsubrl
pop
arpl
ret
pop
adc
dec
popf
sub
lods
and
lds
xor
pop
mov
xchg
jp
mov
stos
cmp
add
rcrb
int
xor
mov
mov
mov
iret
jnp
inc
xchg
or
ret
ss
fsubrs
cmp
sub
outsl
xchg
ja
scas
rcrl
aas
rcrl
cs
mov
sub
aas
or
rcrl
xchg
push
mov
push
inc
lcall
lret
mov
lds
push
movsb
jl
pop
dec
filds
pop
push
cmp
mov
mov
dec
and
fistpl
stc
push
sbb
imul
dec
fmulp
mov
fcmovne
lds
push
sbb
xor
mov
jecxz
mov
inc
and
cld
out
push
mov
dec
xlat
fidivrs
insl
cltd
xchg
jae
xor
fmull
pop
out
mov
cmc
push
lret
repnz
pop
mov
mov
push
pop
inc
lret
negl
cmp
popf
mov
push
cmpsl
or
pop
push
sub
scas
stos
test
aas
xor
ss
mov
xchg
jae
imull
xor
inc
or
inc
push
mov
mov
imul
arpl
xchg
iret
pusha
jmp
notl
mov
and
xor
dec
inc
es
imul
jg
inc
dec
les
push
pop
je
pop
testl
push
inc
mov
and
push
fists
inc
lahf
cmp
jne
ds
xchg
dec
cmp
sahf
lret
into
or
subb
int3
pop
cmp
mov
aas
sub
xchg
mov
fidivs
stos
mov
movb
push
stos
mov
adc
dec
xchg
and
push
mov
lret
xchg
inc
lods
arpl
jge
mov
jp
pop
mov
mov
push
sbb
push
inc
addb
fstpl
pop
sub
sahf
mov
aaa
pop
mov
fs
in
or
mov
or
xchg
int3
sahf
and
fcmovbe
push
xor
xchg
mov
cwtl
repnz
jecxz
aas
lcall
xchg
adc
mov
push
aad
lret
lods
ficoms
mov
inc
or
and
stos
insl
or
mov
inc
es
dec
test
mov
fdivr
scas
cmp
js
inc
mov
mov
cwtl
sahf
in
jecxz
repz
arpl
jle
cli
sub
mov
jno
jge
xor
out
loopne
arpl
aad
push
inc
ds
inc
sub
cmpb
lret
fcomip
add
lea
pop
lds
xchg
mov
shrl
mov
cmpsl
mov
jne
iret
push
fsubrl
jns
sub
or
repz
xchg
aad
enter
adc
sbb
js
cmpsl
mov
xor
push
push
xor
cmp
jns
or
fcmovnb
aaa
lea
test
add
mov
and
sti
loop
bound
and
jl
mov
push
xchg
nop
jb
xor
pop
and
fnstenv
sbb
mov
out
mov
pop
mov
inc
adc
xor
mov
cmc
lcall
jecxz
sbb
ret
ror
lds
sbb
icebp
sti
cmp
insl
mov
xor
fldenv
sbb
sub
or
pop
xlat
cmp
fsubl
mov
shl
cmp
idivb
pop
cmc
sarl
ror
sbb
stos
cmp
out
jmp
sbb
or
push
aam
add
mov
adcl
push
repnz
divb
jae
push
mov
loopne
rorb
hlt
or
add
mov
stos
push
jecxz
sbb
mov
add
mov
dec
cmp
out
ss
out
lret
cld
scas
lea
in
xor
mov
mov
xchg
xor
pop
icebp
jbe
and
cmp
push
add
addr16
cli
jbe
in
insb
rcl
test
and
adc
xchg
mov
int
lcall
xchg
iret
push
xor
pop
fcoms
arpl
repnz
dec
inc
fadd
leave
and
cmp
pop
push
mov
pushf
cltd
inc
pop
fstps
cmp
push
xor
in
cmpsb
pop
fistps
jbe
jg
cmpsl
leave
push
mov
sarb
jae
push
and
push
fsubr
repz
addl
dec
cs
sbb
outsl
fld1
call
dec
ja
outsb
xorl
aad
fs
mov
fildl
roll
mov
nop
and
mov
lahf
jg
iret
lret
loopne
arpl
ret
cmpsl
dec
loopne
mov
stos
mov
fstpt
mov
lcall
out
fbstp
loope
pushf
jle
mov
push
iret
mov
ja
inc
jbe
outsb
xor
mov
in
lcall
es
jnp
sub
sub
scas
fs
std
xchg
mov
sub
add
xchg
fnstsw
popa
mov
cmp
loope
fidivrs
push
das
fbstp
mov
jp
pop
or
imul
sbb
xchg
ficompl
sbb
fucom
sub
in
jl
repz
jle
xor
out
mov
out
or
inc
movsl
jbe
imul
test
push
mov
and
idivb
ja
mov
and
shll
cs
daa
aas
ss
sub
cmc
jge
movsl
xchg
fwait
out
sbb
xchg
out
and
nop
ret
fdivrl
or
jbe
stos
jae
pop
jne
shl
sub
fiaddl
jnp
fsubr
ljmp
out
das
fsubr
cli
xor
cli
pop
pop
add
mov
mov
popf
lahf
dec
xor
dec
jle
push
sub
addl
sbb
mov
xchg
sbb
sbb
pushf
add
push
push
and
xchg
stc
shll
scas
inc
push
out
incb
mov
add
mov
or
dec
std
insl
mov
daa
mov
pop
fnstsw
jns
insb
mov
lahf
xor
insl
or
inc
add
insb
pop
fistpl
push
xchg
xlat
cmp
out
popf
and
jne
or
sbb
shlb
inc
lea
iret
xchg
push
sahf
xchg
cmpl
xor
xor
mov
push
fdivrl
fs
dec
push
sub
mov
lret
cmp
push
inc
test
add
cld
inc
sbb
mov
xor
leave
mov
ret
roll
mov
or
xchg
mov
mov
sub
jbe
popf
inc
and
scas
pop
mov
jle
xchg
jnp
pop
cli
push
fcoml
xchg
xchg
xchg
hlt
cwtl
loope
fildll
jo
aaa
xor
or
addr16
into
inc
xorb
jp
or
push
popf
dec
out
inc
popf
jecxz
data16
or
cmp
js
sub
and
sti
jae
and
or
inc
fimuls
xor
jecxz
xor
mov
ja
adc
in
lcall
jnp
lock
cmpsl
es
daa
xchg
mov
xlat
mov
push
out
xchg
jl
incb
test
mov
xor
stos
ljmp
sub
sub
mov
xor
pop
pop
loopne
leave
mov
fwait
fwait
xchg
arpl
sub
bound
cvttps2pi
xchg
push
add
cld
xor
cmp
stos
movsb
inc
add
ljmp
adc
lret
test
pop
or
jns
jne
xchg
cli
je
push
mov
rcrl
push
icebp
leave
push
mov
xor
mov
aas
lds
mov
jg
mov
lret
lea
jns
lock
dec
pop
sub
mov
rcl
cltd
and
dec
lahf
lret
enter
es
enter
jge
enter
xlat
xchg
push
adc
je
mov
lret
cmp
xchg
mov
push
sub
mov
xchg
std
pusha
repz
stos
sahf
fistpl
xchg
pop
sub
dec
sahf
cmp
push
jecxz
push
and
push
pop
test
addr16
scas
stos
int
mov
out
inc
or
and
mov
adc
in
lret
hlt
mov
aas
push
or
lret
sub
xchg
xor
fistpll
cld
mov
sbb
dec
add
mov
icebp
or
insl
out
sahf
adc
stos
sti
out
push
sahf
sub
and
leave
popa
ds
xor
add
imul
inc
cmpb
sub
push
popa
in
mov
int
fsubrl
pushf
sbb
push
mov
int3
pop
mov
xchg
popa
daa
dec
in
or
push
loop
push
sub
push
mov
xchg
mov
push
mov
inc
sbb
fistl
cmpsb
jmp
push
push
xchg
xchg
mov
mov
arpl
cmp
push
mov
jne
cmc
xor
aam
cmp
sahf
lods
lods
rclb
inc
test
xchg
rolb
cmc
mov
mov
mov
ljmp
sub
or
mov
or
xor
sub
xchg
test
adc
mov
mov
std
pusha
jl
jne
cmp
imulb
cli
lods
hlt
adc
aaa
dec
es
cmpsl
in
sub
xor
shll
aas
pop
int
xchg
sbb
dec
cmpsl
sub
xor
sbb
hlt
fidivl
sub
mov
xor
and
inc
aam
jl
daa
cmp
push
dec
lcall
jb
push
cmp
rep
sub
ror
in
xchg
add
repnz
cmp
mov
add
je
jb
jno
add
js
jbe
stc
add
sbb
loopne
fwait
call
out
inc
lea
data16
scas
mov
or
filds
mov
sbb
mov
ja
cli
jp
fistl
inc
pop
cmp
cmp
add
jo
fdivs
xlat
fcomp
sarl
int
ljmp
mov
test
inc
iret
test
mov
xchg
dec
aam
sub
push
ljmp
dec
mov
inc
das
xchg
insl
add
lods
lahf
push
dec
aas
mov
xchg
and
and
scas
jge
pop
push
and
push
sbb
mov
xor
adc
push
fidivrl
mov
pop
jg
movsl
lods
movsl
ror
and
std
pop
sub
cs
lret
jge
push
mov
mov
xor
fbld
pop
xor
dec
cmpsb
clc
jg
das
loop
adc
imull
xchg
ret
push
pop
clc
and
arpl
in
iret
das
fldt
inc
dec
bound
dec
jle
cmp
jnp
mov
mov
and
jns
xor
xchg
negb
pop
mov
mov
adc
jb
sub
dec
fsubl
xor
addl
daa
nop
outsl
hlt
icebp
and
pop
cmp
hlt
imul
and
jp
scas
fs
mov
aas
inc
push
adc
in
add
call
xor
test
or
fwait
xor
cmp
inc
loopne
mov
daa
and
mov
sub
aas
cmp
sarb
cmpsl
pop
jnp
xor
mov
mov
pop
insb
rorb
cmpsl
fstl
push
das
imul
std
daa
daa
jl
sbb
arpl
lret
mov
xchg
mov
stos
inc
in
jnp
push
xchg
popa
lods
cmpsb
outsl
xchg
dec
fiadds
jp
aaa
dec
shll
or
in
fldl
jl
cmpsl
dec
sub
jno
push
mov
xor
add
in
test
or
sub
dec
mov
jae
aam
sbb
popa
adc
sbb
testl
pop
jnp
ljmp
sub
push
mov
imul
mov
sub
cld
xchg
jmp
call
dec
or
xor
mov
aaa
mov
mov
adc
dec
add
jle
sbb
enter
cmc
fidivrs
push
push
sub
scas
cmp
push
jg
or
sub
sti
dec
xchg
out
mov
dec
xchg
jecxz
sbb
bound
dec
or
pushl
cmp
lret
rclb
dec
xor
xchg
loop
fildll
sbb
int3
mov
icebp
jb
xlat
xchg
pop
push
enter
mulb
aam
jae
nop
ja
int3
cmc
jge
mov
sub
push
adc
fstl
rolb
xchg
xor
or
in
mov
mov
arpl
dec
cltd
sub
sbb
pop
gs
int3
jge
pop
cmp
jbe
lahf
xor
xchg
jnp
into
pop
in
lret
aas
sahf
dec
and
loope
jnp
sbb
mov
sbb
push
pop
jbe
ds
push
das
and
fwait
cltd
gs
xor
mov
pop
mov
fs
mov
inc
xchg
sbb
mov
inc
push
and
aaa
push
addr16
aam
jnp
movsb
ret
xor
sub
cwtl
pop
mov
xor
das
out
aas
add
xor
addr16
and
ds
es
mov
and
fldenv
xchg
inc
test
fnsave
addr16
mov
mov
xchg
mov
mov
push
sub
cmp
loopnew
loop
xor
shlb
sbb
imul
adc
arpl
and
popa
rcll
mov
cmp
push
lds
or
repz
sar
lret
aas
lods
mov
test
arpl
push
imul
or
lods
clc
push
sti
inc
or
jg
fwait
insb
scas
ficoms
push
daa
push
stc
lock
in
iret
cmp
in
push
dec
repnz
and
mov
scas
ret
mov
aas
lds
mov
mov
in
fidivrl
sbb
inc
mov
xchg
jg
dec
into
or
add
or
mov
dec
fmull
push
cli
add
cmc
mov
mov
and
je
ret
aaa
cld
push
xor
sbb
ret
arpl
insb
test
fsubrs
decl
dec
stos
pop
lds
scas
lods
pop
jmp
jmp
js
int
arpl
jl
addr16
adc
or
sbb
sub
cmp
cmpsl
fdivl
mov
loop
shrl
pop
add
imul
in
push
dec
xchg
adc
mov
jnp
fmul
mov
mov
in
sub
cmpsl
adc
mov
sbbb
cltd
nop
xchg
or
sub
stos
ret
add
out
out
sbb
mov
and
lret
ret
sbb
jmp
insl
into
mov
add
in
jb
xchg
mov
mov
sub
or
arpl
outsl
es
lods
push
test
pop
and
ds
aam
xor
repnz
or
fsubl
mov
sti
lret
mov
and
fwait
into
jo
xchg
push
movsb
lret
lcall
mov
hlt
jle
pop
insl
and
pop
gs
and
add
mov
xor
inc
cmpsl
and
in
jns
sbb
iret
aam
pop
push
mov
fiadds
cli
cmp
xchg
lea
xor
test
fistl
sahf
imul
scas
roll
mov
dec
cmp
push
xchg
movsb
push
dec
or
pop
jecxz
dec
pushf
pop
pop
mov
jl
scas
outsl
xchg
xchg
testb
mov
adc
repz
adc
bound
adc
scas
add
in
or
aas
jmp
mov
mov
fucomip
add
data16
mov
add
jp
add
push
jnp
daa
jmp
gs
jmp
daa
push
jb
and
scas
ret
or
mov
jno
adc
push
scas
xchg
xchg
dec
inc
cmp
push
js
mov
mov
int
es
fisttps
cmp
fisubl
out
outsl
dec
sbb
pop
inc
repz
mov
mov
cmp
jnp
jp
mov
cli
xor
ret
jp
addr16
daa
mov
cltd
pop
push
cmpsl
js
in
jp
cmpb
int
xor
arpl
push
lods
fistpll
adc
push
jae
data16
sbb
lods
filds
pushf
dec
dec
das
in
fisttps
sbbl
addr16
jp
jae
fdivr
pop
push
mov
inc
in
in
inc
inc
mov
call
ds
sbb
xchg
and
pop
std
mov
repz
scas
mov
mov
es
pop
xor
cmpsb
jg
inc
lcall
jg
cmpsb
jb
mov
xor
arpl
pop
imulb
cmpsl
mov
scas
lcall
mov
repnz
aaa
cmpsl
mov
testb
out
cli
push
mov
cmp
sbb
fwait
sti
scas
jg
dec
mov
mov
mov
arpl
repz
mov
pop
ss
push
cmpsl
repz
add
pop
push
xchg
lods
pop
data16
idivb
call
jnp
pop
aaa
out
shrl
inc
xchg
lcall
cli
inc
add
push
sbb
adc
in
mov
push
add
das
imul
ja
adc
mov
arpl
negl
jo
mov
mov
fwait
mov
push
scas
push
ret
push
aaa
outsl
outsl
mov
mov
stos
outsl
repnz
stos
jnp
cmpsl
aaa
outsl
xchg
lret
xchg
mov
inc
repnz
data16
mov
xchg
outsl
rcr
mov
stos
jae
arpl
lret
lahf
xor
sub
rcll
fistpll
xor
pop
inc
lods
mov
fwait
inc
mov
lret
pop
ret
aam
xor
lods
xchg
pop
cmovge
and
stc
xchg
push
cmpsb
jno
mov
jne
mov
sbb
jge
dec
dec
push
add
adc
imul
dec
ja
out
add
jecxz
cwtl
mov
xchg
and
mov
xor
push
fimull
pop
cld
cmpsl
stos
sbb
add
cli
jle
aaa
jge
test
lock
outsl
xchg
xchg
mov
lahf
sti
mov
or
cmp
stc
sti
stc
push
cltd
mov
pop
adc
in
jo
into
mov
push
mov
movb
ja
dec
es
adc
scas
sub
ret
out
lahf
out
loop
mov
addr16
xchg
addr16
ret
push
rcrb
rcll
adc
xchg
xor
int
push
into
and
lret
fstps
jno
sahf
fcmovb
xor
adcl
push
sti
xchg
push
stos
inc
into
jge
in
pop
mov
pop
in
ja
fcompl
or
add
into
lcall
iret
sub
dec
mov
cltd
icebp
mov
sbb
lahf
xchg
xchg
repnz
lock
adc
pusha
pop
roll
mov
loop
leave
xor
sub
lret
jbe
xchg
adc
jo
add
wrmsr
add
sub
jge
fcoml
jg
lds
nop
adc
sub
xchg
in
dec
out
fimull
pop
lcall
sub
mov
cmp
adc
xchg
sub
xchg
loopne
adc
out
and
clc
sbb
jp
mov
xor
xor
lahf
sbb
and
stos
sbb
repnz
mov
xchg
insb
lahf
push
in
popa
push
pop
push
pusha
mov
jnp
push
and
aad
mov
cmpsl
dec
cmpsl
movsl
das
jg
lret
xchg
repz
mov
sub
mov
test
cmp
xor
or
loope
sahf
push
fdecstp
mov
push
dec
popf
cmp
cmp
adc
imul
xchg
jle
mov
daa
push
test
das
xchg
add
stc
xchg
outsl
aaa
mov
xchg
lock
mov
xor
pop
nop
mov
adc
and
lods
sahf
out
push
pop
aas
addl
cwtl
jno
and
mov
pop
in
jnp
leave
cmp
dec
pop
mov
lea
cmp
repnz
cmpsl
ret
cmp
cmp
xor
rcrl
sub
mov
lods
pushf
sahf
mov
add
cld
sub
std
cs
ljmp
or
stos
fsubrl
pop
cmpsb
sbb
sub
xchg
lret
mov
xor
je
sbb
fldl
scas
jl
pusha
stos
xchg
mov
inc
test
fcompl
lcall
pop
int3
movsb
test
cmp
call
pop
mov
jno
hlt
stos
sbb
add
mov
fcoml
dec
adc
sub
sbb
ja
movsb
mov
je
scas
push
aas
jnp
mov
stc
sbbb
repnz
push
hlt
repz
add
in
in
sbb
xchg
push
pop
adcb
or
cs
mov
xchg
and
push
cmp
cmpsw
fdivr
mov
test
xchg
pop
sti
add
mov
jmp
cmpsb
and
xchg
aas
in
cmpsl
or
push
test
clc
aas
and
pop
outsl
dec
mov
adc
xorl
or
lods
xor
lock
out
das
mov
scas
mov
movsl
cli
fstl
xchg
sbb
imul
mov
insl
pop
icebp
jge
cmp
or
js
xor
ss
dec
mov
cld
ja
ficoml
lret
idiv
mov
sar
nop
fidivrl
das
mov
mov
xor
insl
and
addr16
mov
cmp
mov
jnp
xchg
mov
push
xor
mov
dec
lahf
jbe
pop
popa
or
xchg
sahf
or
jne
push
xchg
testl
jne
les
add
and
in
and
jge
mov
je
stos
xor
xchg
rolb
and
stos
movsl
dec
or
sar
mov
mov
jb
pop
xchg
inc
mov
mov
ja,pn
or
cmp
add
xchg
sti
mov
cmpxchg
xchg
sbb
mov
dec
dec
ja
add
shl
scas
mov
aaa
sub
xlat
jecxz
cmp
aad
push
and
cmp
out
mov
ljmp
push
mov
dec
cmp
shr
fucomp
mov
jg
sahf
add
cmpsb
aam
jg
push
aas
and
cli
jnp
cmp
inc
jae
inc
push
xchg
push
xor
mov
push
dec
out
or
mov
pusha
inc
inc
in
sti
inc
stos
in
daa
sbb
out
ljmp
cmpsl
incb
xlat
fistl
int3
scas
xor
inc
push
scas
jb
icebp
pop
push
stos
dec
insl
lahf
aaa
pop
mov
pop
cmp
inc
dec
out
sub
stc
add
jmp
pop
pop
push
testl
pop
fildll
xor
cld
pop
cmpsb
sti
pop
outsb
shr
test
rcrl
ja
mov
xchg
fbld
popa
cmc
fimull
sub
ror
inc
aad
sbb
das
int3
into
pusha
adc
cwtl
mov
jo
mov
pop
dec
lret
cmp
inc
jnp
out
sub
stc
ja
out
pop
jmp
pop
pop
popf
push
push
js
stos
jl
hlt
lock
out
xchg
sbbl
aad
mov
jo
add
jne
xchg
stos
fdivr
loopne
repnz
in
pop
xchg
lret
dec
mov
cli
lods
or
in
ljmp
sti
jne
loope
xorl
lret
scas
ja
add
in
das
add
in
pop
aaa
xchg
dec
adc
xchg
ret
jae
or
xchg
pop
insl
push
decb
cmp
cltd
outsb
imul
in
dec
xchg
das
jge
loop
jne
imul
add
scas
or
inc
pop
push
stos
mov
jl
mov
adc
or
mov
ss
aas
leave
push
pop
mov
mov
out
dec
jecxz
rcrl
aad
fldcw
scas
and
call
leave
lock
adc
or
adc
dec
jg
call
pop
dec
mov
xchg
sbb
dec
jb
push
iret
push
lahf
lahf
sarb
mov
pop
and
jae
xchg
ss
inc
inc
loop
mov
and
ret
in
and
inc
mov
addr16
int3
mov
push
mov
data16
cmp
pop
out
enter
sbb
lret
movsb
mov
or
aaa
or
test
mov
mov
movsb
push
in
nop
add
lea
into
mov
jl
sbb
adc
fs
popf
push
cltd
mov
orb
sbb
jge
push
push
push
jp
test
sbb
dec
pop
fmulp
push
sub
cmpsb
push
dec
pop
cmp
fistl
mov
int3
mov
pop
notb
push
cmp
out
ja
icebp
pushl
cmp
lea
ret
push
cmp
push
xchg
sub
loope
mov
cmpb
xor
push
outsl
shl
fldt
ret
mov
xor
dec
leave
daa
cmp
inc
xor
jmp
lods
ljmp
movsl
xchg
ret
inc
ljmp
mov
push
mov
xor
lods
push
cmp
xchg
pusha
jecxz
mov
mov
shrb
inc
and
out
mov
jo
addb
fcoms
pop
mov
and
notb
or
push
cwtl
out
cmp
sub
mov
push
mov
cmp
loopne
cmp
lahf
icebp
arpl
push
into
sbb
stos
in
sbbb
mov
push
mov
or
mov
jae
rcr
decl
sar
test
out
and
ljmp
addl
jo
in
negl
adc
mov
fcomip
cli
lcall
cmp
mov
out
pushf
inc
sbb
das
or
pop
fbld
aaa
rol
mov
xchg
mov
pop
jl
pop
sbb
mov
aas
int
lcall
pop
iret
dec
ds
daa
jae
lret
ja
add
mov
pop
or
daa
int3
iret
inc
xor
shrl
cmp
sarb
daa
mov
cmpb
out
push
mov
sbb
add
push
sbb
ss
test
sahf
sbb
jmp
and
jecxz
adc
lret
movb
xor
or
or
cmpsb
shrb
bound
inc
test
addb
rcrl
and
or
pop
cld
lods
xchg
fcomp
lret
fidivrl
jmp
scas
daa
movsl
pop
mov
test
lret
push
repnz
mov
dec
and
add
sarl
push
test
ss
jmp
in
push
lods
jo
xchg
push
jp
stos
cmp
xor
je
out
or
jo
jecxz
lock
int
or
aad
es
leave
stos
sbb
iret
movsb
xchg
iret
ss
sub
xchg
mov
cmp
mov
shll
lcall
lea
es
js
iret
push
mov
jb
cmpsl
jge
aas
arpl
cld
jmp
or
pop
dec
sti
scas
lret
cmc
insl
mov
dec
mov
xchg
es
insl
aam
es
fbld
mov
hlt
fwait
cmpsl
or
push
sub
push
or
cltd
mov
push
daa
mov
cmpsl
cmpsb
mov
mov
mov
in
jns
in
fnsave
dec
cli
xor
dec
or
mov
pop
movsl
pop
call
jns
xchg
cld
jge
imul
call
jne
add
mov
sbb
cmp
add
inc
add
add
xchg
sbb
cld
jmp
fdivp
pusha
iret
mov
negb
mov
jecxz
mov
ret
mov
jo
rcrl
pop
frstor
lahf
adc
sahf
xor
dec
clc
lret
sahf
xor
inc
ds
scas
cmp
mov
movsb
pop
xchg
xor
pop
mov
popf
or
mov
add
popf
cmpsl
dec
cmpsl
xchg
sub
fisubrs
xor
pusha
cmpsb
sbb
fdivrp
xor
xlat
or
stos
sbb
fsubs
mov
or
pushf
pop
hlt
push
pop
sbb
nop
aad
lea
pop
outsb
and
in
jns
inc
mov
imul
xchg
js
push
jne
or
test
fdivrs
xchg
sbb
pop
les
mov
or
dec
pop
xor
pop
repnz
and
inc
in
add
push
xor
adc
dec
pop
negb
mov
sub
es
mov
xlat
mov
jnp
ficoml
jns
shll
lret
lcall
push
lret
mov
test
ret
insb
cmpsl
or
inc
test
pop
sub
jne
and
cmp
decb
cmc
mov
gs
add
xor
push
mov
dec
gs
sbb
popa
roll
jns
or
mov
sbb
div
es
jmp
movsb
testl
mov
add
pop
sub
push
mov
sbb
push
dec
popa
leave
fisubs
mov
mov
adc
push
pop
outsl
cld
aad
divb
xor
fimuls
seta
cli
mov
daa
sbb
cmp
jae
out
int
lret
ret
mov
stos
popa
sbb
xchg
sub
sub
lret
in
adc
lahf
pop
ja
loopne
lret
dec
inc
cmp
pushf
add
xchg
fisttps
push
dec
imul
adc
pop
push
inc
jmp
sbb
cmp
cmpb
js
adc
out
shll
cwtl
cmpsl
in
movsl
and
ret
ret
int3
and
mov
fsubp
out
pop
cmp
mov
pop
js
insb
ss
aas
pop
sbb
cmpl
mov
lret
std
ss
cmp
jecxz
pop
sub
pop
mov
mov
shlb
test
pop
ss
icebp
hlt
imul
enter
pop
fiadds
je
push
jecxz
cmp
pusha
je
lahf
sbb
out
dec
iret
dec
cmpl
pusha
iret
mov
cmp
push
scas
pushf
out
xor
and
enter
scas
pop
pop
sub
sbb
aas
das
lods
xor
or
stos
faddp
loop
jg
xor
lea
mov
mov
add
loopne
roll
out
leave
push
fisubrl
add
and
adc
bound
and
das
xchg
xor
je
int3
shlb
and
and
int
adc
es
jb
outsl
or
paddusw
mov
lods
mov
outsl
xchg
pop
daa
jns
fprem1
jbe
mov
mov
outsb
add
insb
and
jae
fwait
adc
sub
xor
movsl
mov
inc
repz
clc
push
fidivrl
add
inc
or
mov
popf
cs
mov
mov
mov
xchg
cld
xchg
xchg
push
and
popa
in
sbb
and
repnz
out
mov
pusha
js
mov
dec
sbb
shll
mov
xchg
popa
sub
xor
xor
push
out
cmp
sub
das
cwtl
or
mov
cmc
dec
and
dec
xor
add
fstps
add
inc
jg
cmp
es
pop
mov
rorb
jb
inc
jmp
fisttpll
loopne
das
stc
faddl
pop
push
jp
mov
dec
out
enter
gs
rol
sbb
jns
sti
xchg
fwait
push
or
jae
push
mov
jmp
add
xchg
jae
cltd
stc
jg
xchg
mov
data16
ljmp
test
fiadds
push
pop
sub
inc
aaa
lea
push
mov
push
loopne
inc
sub
fidivl
iret
push
cltd
xor
cmc
pushf
add
cmp
lret
mov
inc
cmp
ja
xchg
mov
xorb
lahf
es
stc
adc
xor
sbb
mov
pop
dec
mov
xchg
ficomps
hlt
push
and
xor
mov
xor
popa
mov
xor
ret
imul
push
scas
mov
into
ja
cmp
ja
mov
test
or
cwtl
jno
test
xchg
mov
test
sub
and
mov
imul
inc
fmull
xchg
out
mov
mov
jno
shll
push
push
aad
add
lods
int3
mov
clc
scas
xor
loope
int
push
jne
push
push
mov
pop
inc
js
repnz
xlat
inc
cwtl
push
xchg
fcomps
cmpsl
fisttpl
sbb
jb
fsubp
jle
sub
iret
jecxz
pop
and
inc
ja
adc
lcall
ds
pusha
and
fstpl
in
jb
xor
call
daa
lods
lods
adc
or
cmp
mov
sub
outsl
repz
fiaddl
mov
pop
sub
and
push
xlat
popl
mov
es
loop
cmp
push
dec
sub
mov
ret
lds
cltd
dec
popa
jge
push
dec
pop
xor
cld
outsl
je
push
inc
cs
out
mov
popf
je
sub
mov
sub
lea
rclb
pop
ss
int
popa
mov
mov
push
out
and
aad
lret
in
lcall
adc
dec
fistps
fdivs
sbb
push
test
push
add
jo
mov
shlb
mov
jns
aaa
cvtdq2ps
mov
testl
test
movsl
push
jmp
mov
and
mov
xor
fists
push
negb
and
pop
and
pop
shlb
fs
sbb
mov
sub
mov
daa
mov
sub
call
mov
jno
xchg
lret
dec
adc
iret
outsl
push
push
lcall
outsl
movsl
inc
and
neg
aam
mov
cmpsl
repnz
add
jbe
push
std
push
pop
or
fsubrs
aas
fs
lock
xchg
push
mov
sub
arpl
scas
mov
popa
mov
sarb
outsb
mov
add
cmpsb
test
mov
pop
daa
mov
push
xor
dec
mov
aad
cmpsl
mov
lods
push
ror
es
test
pop
mov
sub
inc
lcall
shlb
pop
mov
sub
jge
adc
cmp
xlat
cmp
cmp
scas
or
loope
cmp
mov
jae
lret
mov
repnz
mov
and
xchg
xor
arpl
mov
loopne
xor
stc
push
ret
lcall
stos
cs
das
and
mov
mov
xor
cmp
dec
hlt
xor
xchg
push
push
cmc
push
iret
pushl
xor
pop
adc
mov
test
ficoms
pop
stc
aaa
clc
and
mov
stc
roll
ret
cs
insl
jg
fbld
and
xchg
in
ret
int3
push
mov
cs
and
sub
and
cmp
fdivs
jno
xchg
and
aaa
sbb
inc
cmp
mov
stos
jp
sub
inc
sbb
das
cmc
out
push
frstor
mov
xor
mov
cld
xor
pop
xor
push
aam
call
and
lahf
gs
jb
popf
mov
and
lea
xchg
inc
movsb
adc
push
ss
repz
lea
aaa
cli
jmp
fistpll
je
pushf
ficoms
aas
inc
loop
dec
ss
xlat
sti
ds
sahf
es
xchg
mov
daa
or
cmpsb
xchg
cmp
or
xlat
int
es
sbb
mov
inc
xor
lret
lcall
and
popa
or
idivl
add
mov
adc
mov
fdivr
sub
imull
fmul
fistps
inc
int
stos
mov
daa
cltd
test
pop
sbb
cld
enter
clc
call
mov
jle
mov
sbb
push
jbe
insb
lock
xor
push
or
aaa
scas
cmp
sub
lret
lods
sub
inc
ss
fistl
fldl
test
leave
aad
cmp
faddl
aas
mov
sub
scas
pop
sub
push
cli
and
push
ror
cmpsl
mov
mov
outsb
cmp
push
scas
jno
popf
cli
out
xchg
sub
pushf
inc
push
mull
in
mov
cmp
adc
aaa
sub
or
push
xchg
jno
scas
outsb
mov
ljmp
ja
push
test
cmp
sbb
dec
xchg
sub
mov
repz
sbb
out
arpl
aas
mov
pop
inc
pop
popf
push
xchg
mov
daa
fistl
inc
or
mov
mov
xor
fisttpl
lea
jns
pop
sbb
or
and
push
nop
jmp
adc
xor
mov
dec
mov
stos
sbb
push
and
shl
cmpsl
insl
or
lods
sbb
daa
or
sub
sahf
xchg
daa
out
mov
and
in
mov
pop
mov
adc
add
push
add
addr16
add
add
out
lods
sbbb
popf
mulps
popl
jmp
popf
loop
cli
pushf
sbb
mov
es
scas
pop
jl
xchg
nop
in
test
fistl
jno
lahf
fcmovb
mov
adc
loope
pop
push
adc
push
jno
scas
add
adc
das
fwait
je
mov
fstpt
out
adc
mov
stos
aam
and
hlt
test
push
lods
popf
mov
dec
pop
mov
lock
cmp
mov
xchg
pop
xor
mov
xlat
xor
cmpsl
xor
daa
jge
ds
or
mov
shlb
out
fistl
jae
nop
jno
sbb
clc
jnp
push
jb
outsl
add
xor
cmpsl
scas
clc
scas
out
add
divl
push
jmp
cli
sarl
xchg
fs
pop
std
jecxz
sti
mov
jle
les
clc
aam
mov
test
ds
cmpb
mov
push
fs
aas
mov
xchg
and
lahf
dec
pop
not
jb
outsl
jb
lods
xor
scas
pop
cwtl
pop
mov
xchg
jle
mov
ljmp
or
in
fimull
out
adc
fs
add
push
mov
jl
xchg
and
ss
mov
jbe
aam
mov
std
out
stos
and
dec
scas
sbb
ret
mov
mov
mov
aam
xor
movsb
push
cli
pop
xor
jge
iret
ficompl
pop
pop
enter
popf
inc
movsb
mov
mov
sub
mov
cwtl
jae
mov
ficoms
mov
bound
mov
xlat
andb
pop
add
enter
inc
xor
dec
loopne
rolb
sub
jg
scas
arpl
dec
rcrb
mov
or
out
cmpsb
push
div
aas
and
outsl
lcall
pop
xchg
shrl
pop
insb
mov
mov
push
std
cmp
jl
fldl
inc
hlt
adc
mov
fmul
jno
stos
dec
mov
adc
mov
xor
cli
sti
inc
xchg
dec
idivl
mov
arpl
rcr
sub
lret
push
jp
mov
inc
push
push
int
or
fnstcw
filds
pushf
cli
sbb
int3
lods
cwtl
je
adc
jo
lods
mov
mov
dec
jno
movsl
fcoml
insb
add
add
gs
jbe
ja
out
cld
lahf
lock
lret
xor
mov
mov
ficoml
movl
cltd
pushf
rclb
mov
test
in
mov
xlat
andb
inc
cmp
stos
fisubrs
mov
adc
lds
jmp
sub
int
mov
mov
push
pop
xchg
and
iret
jge
sbb
arpl
scas
pusha
dec
fstps
cmp
xchg
or
xchg
in
popa
mov
movsb
movsb
mov
jmp
mov
and
push
jmp
fistl
fistps
inc
xchg
xchg
mov
pop
pop
lods
mov
icebp
loop
mov
repz
hlt
jp
pop
push
cmp
and
mov
lea
mov
pop
cmp
and
jns
adc
pop
fisubl
and
test
fmul
stc
shll
push
in
sub
sub
rol
adc
les
push
pop
push
mov
jb
mov
lret
inc
aas
mov
xor
fildl
cmc
adcb
mov
inc
jnp
adc
xchg
outsl
cltd
mov
push
insb
add
std
test
pop
pop
aaa
out
movsb
mov
sub
loopne
jb
call
mov
push
orb
sbb
fsubr
xor
aas
int
mov
inc
xchg
shlb
aas
imul
fwait
mov
rclb
inc
sub
mov
fwait
xor
stos
xchg
test
push
xor
cmp
test
daa
into
aad
push
jbe
stos
mov
xor
mov
push
pop
pop
inc
xor
ljmp
xor
cmp
xchg
enter
xor
pushf
in
sbb
jmp
mov
mov
xor
inc
or
push
inc
int
mov
test
repz
sub
adc
pop
cltd
ljmp
clc
insl
inc
sub
stos
add
movsb
fwait
cltd
xor
adc
or
sub
mov
insl
add
pop
test
shll
sub
lock
sbb
sub
mov
fwait
adc
cli
adc
sarb
xor
mov
xchg
pop
je
or
mov
jne
xor
dec
stos
xchg
mov
xchg
mov
fisttpll
push
inc
mov
jne
mov
push
cmpsb
dec
ja
mov
xor
inc
pushf
fnstsw
scas
cmp
mov
outsl
sbb
fwait
dec
and
xchg
bound
lods
nop
xchg
lahf
js
mov
test
add
call
and
out
sbb
jo
sbb
inc
repz
xchg
test
xchg
push
je
movsl
cmp
sbb
pop
sbb
dec
mov
dec
aaa
push
popa
jg
sbb
mov
cli
fnsave
adc
rcrl
in
mov
push
pop
in
ja
adcl
sahf
add
pop
outsl
out
in
pusha
mov
lea
add
cs
mov
jl
mov
pop
dec
jecxz
js
movsb
adc
imul
xchg
xchg
push
pop
mov
cwtl
aam
hlt
jns
xchg
inc
sti
sbb
repz
cmp
add
out
mov
sarb
xchg
sub
sbb
pusha
punpcklbw
ret
in
and
test
out
cld
test
push
bound
addr16
cmc
pop
in
or
ror
inc
xchg
loopne
jbe
jne
int
or
outsb
and
adc
pop
pop
pop
jnp
jae
lods
aaa
inc
cs
popf
xchg
imul
xlat
dec
xor
or
sub
orb
mov
mov
pop
addb
loop
fs
push
push
lock
xor
jbe
out
movsl
dec
xchg
cmp
popf
cmp
in
jg
ret
inc
cmpsb
mov
in
es
push
pop
ds
xchg
xor
jnp
cmp
fisubs
xchg
lds
lahf
fwait
and
inc
mov
jns
xchg
pop
jnp
mov
int
stc
mov
dec
sbb
cli
adc
jns
das
sbb
out
lret
push
leave
jne
aaa
testb
insl
shrl
sub
add
sub
data16
xchg
sub
sbb
push
fs
mov
lcall
mov
jnp
imul
lds
std
out
pop
rcrb
push
dec
fistpl
push
mov
repz
adc
out
shr
clc
pop
adc
inc
mov
inc
rdrand
adc
push
push
iret
jnp
out
stc
pop
ds
in
call
rorl
in
jmp
push
call
mov
mov
popf
ret
sti
iret
in
je
mov
imul
adc
or
inc
shl
pop
adc
or
add
cwtl
mov
mov
xor
pop
mov
xor
ret
pop
fildl
pop
cwtl
hlt
xor
imul
rdtsc
aaa
xor
call
mov
jecxz
jp
dec
xor
jnp
nop
sahf
jg
cltd
jmp
mov
lret
cli
jmp
adc
sti
jp
xor
pusha
sbb
icebp
sti
jle
and
fst
lock
fsubrs
cmp
mov
dec
inc
inc
out
inc
mov
stc
mov
mov
insb
shlb
hlt
test
int
xchg
jmp
adc
pop
add
aam
lretw
stos
repnz
mov
adc
sub
fs
lret
cmp
mov
aas
pop
je
pushf
fadds
xor
shll
pop
push
jge
int
leave
sbb
cmc
push
ljmp
inc
cmc
push
dec
das
and
cmp
jne
mov
mov
inc
sbb
fs
add
sti
lods
mov
ffreep
fnstcw
ss
je
icebp
testl
mov
dec
mov
dec
adc
out
and
addr16
addr16
inc
cmpsl
bound
adc
cmp
sarb
jns
sub
mov
lahf
enter
repnz
scas
scas
jo
cmpsl
cs
jo
sub
imul
int
cmp
mov
sbb
add
push
add
push
fimull
fistl
andl
js
jmp
js
mov
mov
addb
jecxz
aad
push
insb
inc
pop
fisttps
push
cmpsb
out
adc
sub
lcall
cld
jne
enter
pop
lock
and
call
sub
idiv
lds
lods
mov
lret
orb
cs
lea
addl
lcall
inc
data16
cmp
in
mov
adc
or
jno
push
int
flds
or
cmpb
dec
sub
insb
xor
mov
jmp
lcall
gs
or
xor
fs
andb
jg
sbb
adc
dec
aaa
outsl
jl
and
lds
xchg
mov
fdiv
push
stos
add
sub
cmp
push
mov
shrl
fldl2t
repnz
cltd
mov
adc
aas
inc
push
bound
jnp
jns
jmp
std
scas
add
jp
or
out
cltd
aam
fstpl
mov
int3
pop
lahf
in
pushf
jb
xor
sbb
jno
ds
icebp
sub
jbe
out
and
pusha
sub
incb
dec
xor
dec
bound
mov
sbb
and
pop
into
push
in
push
sahf
in
or
or
test
inc
das
add
out
mov
mov
push
xor
sbb
jmp
add
sti
add
imul
insl
mov
adc
in
xlat
dec
notl
into
mov
mov
xor
rorl
pop
inc
push
idiv
push
sub
and
aas
fcoms
jecxz
sub
hlt
push
cmp
xchg
popa
mov
data16
push
mov
mov
es
cmp
scas
out
sub
aas
jmp
stos
leave
repz
in
mov
rcll
push
push
push
jmp
cmp
sub
inc
popa
mov
ret
dec
push
xor
inc
or
in
pop
insl
in
in
xlat
call
nop
sub
sbb
lods
cmp
xbegin
mov
xlat
lret
insb
sub
fnstenv
add
add
rorb
loop
mov
imul
mov
inc
or
arpl
out
popf
mov
dec
push
xchg
hlt
pop
cmp
sbb
incl
fsubrl
xchg
cmp
push
imul
pop
pop
aaa
and
jmp
mov
cwtl
xor
loop
jmp
stos
ret
mov
sub
xchg
cmp
test
stc
and
mov
ss
imul
lahf
pop
adc
inc
mov
scas
lret
in
jp
add
ss
lret
inc
rcrl
xor
mov
faddl
jle
insb
jge
pushf
xchg
addr16
sti
enter
fimuls
inc
sub
or
push
idivb
mov
popf
xorl
enter
sub
cwtl
cmp
add
mov
sub
xchg
cmp
jnp
or
aaa
or
out
push
inc
push
mov
lock
pop
movsb
xor
js
shl
push
pusha
fiaddl
mov
call
std
xor
mov
push
pop
ficoms
push
gs
dec
pop
repz
test
and
nop
xor
xor
jecxz
or
and
mov
loop
aam
idivl
int3
or
push
pop
xor
stos
jge
sbb
or
pop
cmpsl
mov
int3
into
mov
into
or
sbb
repnz
clc
decl
fcmovu
pop
cli
loope
rolb
shrb
inc
or
std
adc
shlb
arpl
dec
add
call
xor
xor
xor
loop
pop
nop
rclb
pop
insl
mov
cli
push
ja
data16
jae
mov
js
xor
xchg
fstps
jne
push
test
ja
jbe,pt
testb
jns
pop
iret
into
jecxz
dec
gs
jecxz
xor
xlat
scas
jle
and
rcl
mov
out
pop
arpl
mov
repnz
jb
mov
xchg
jecxz
pop
ret
cmp
mov
dec
movsl
push
sub
dec
mov
cmp
add
mov
push
lock
mov
mov
ss
or
mov
jmp
cmp
stos
mov
and
jbe
xor
xorb
pop
sbb
out
cli
imul
jg
or
mov
xor
out
and
cmp
and
cld
js
nop
sbb
cmp
scas
push
jo
inc
mov
test
fsubs
add
cmpsl
push
cmp
dec
push
mov
fmull
mov
mov
dec
mov
mov
xor
add
test
fmull
imul
sub
test
les
or
inc
mov
es
jno
jbe
mov
xor
inc
int3
test
cmp
lret
sti
mov
push
stos
push
pop
pop
out
jno
filds
jb
xchg
add
push
mov
data16
fstpt
push
jno
adc
pop
pop
insb
or
cld
cmpsl
add
sbb
mov
or
cmp
addr16
ss
sub
pop
mov
inc
push
add
sub
in
cmp
iret
pusha
cmp
push
dec
mov
or
lods
mov
pop
xchg
mov
cmp
scas
ja
jecxz
sbb
mov
jmp
pop
or
and
fidivrs
push
xchg
xchg
nop
mov
pop
sub
xchg
fcompl
cmpsl
and
sub
int
sbb
cmpsb
add
mov
pop
int3
inc
sub
mov
jo
mov
movsl
sahf
int
mov
push
popf
movsb
mov
popa
xchg
mov
sbb
mov
inc
jp
fldenv
shl
mov
aad
cmp
cmp
data16
jnp
ljmp
call
xchg
mov
add
inc
sbb
fsubrs
sub
mov
sub
sahf
sbb
mov
test
or
jno
inc
sub
fistpll
cmp
jmp
inc
cmc
outsl
in
adc
cs
orl
loop
add
fwait
daa
push
jnp
inc
lahf
xchg
push
add
sahf
jle
mov
mov
pop
and
stos
insb
movsl
or
jbe
fsts
je
sub
fs
fstps
repz
nop
sub
daa
movsl
in
fs
lock
stos
or
cmp
sbb
mov
xchg
aad
jmp
outsl
test
sub
adc
sub
or
cmp
rorl
ret
ret
jecxz
cli
inc
mov
test
mov
rclb
mov
jl
rclb
jg
and
jl
add
out
or
cld
push
and
mov
dec
push
jecxz
fcomps
inc
lret
movsl
mov
dec
je
enter
hlt
jbe
outsb
inc
push
aad
int3
cltd
fs
sub
xchg
in
pop
cmp
aaa
mov
movsl
cmpsl
sti
add
repnz
push
hlt
mov
mov
push
push
ret
aad
not
push
sbb
dec
mov
arpl
jae
push
cmp
pop
jne
or
sbb
roll
pusha
test
sub
sub
mov
mov
mov
or
mov
repnz
sub
popf
mov
cmp
stc
pop
add
xchg
int3
cmp
jp
test
mull
xchg
popa
cmp
sbb
fwait
pop
mov
pop
sub
paddw
jle
lret
pop
push
test
lcall
stos
add
pop
mov
sub
ds
dec
imul
mov
pop
lock
in
shrb
or
outsl
ret
push
mov
aad
mov
ds
xor
sbb
stos
fs
cmp
and
push
loopne
xchg
fwait
aas
in
add
mov
ret
dec
arpl
push
mov
in
xchg
mov
lret
and
sub
fwait
pop
or
sbb
aad
xor
cltd
std
adc
fisubs
loope
sbb
popa
pop
mov
sub
mov
push
lods
sbb
notl
push
filds
or
push
outsb
and
decl
pop
fsubrs
loope
das
jne
aad
push
es
stos
jecxz
lds
shl
orl
insl
or
push
leave
into
pop
push
jmp
lods
stos
cmc
aas
call
mov
into
jecxz
inc
xor
jecxz
stos
ljmp
inc
inc
or
test
sub
imul
jp
jle
out
aas
dec
adc
dec
mov
lret
pop
push
add
jo
xor
iret
fadds
insb
dec
test
mov
and
ret
sub
out
mov
subl
insb
fiaddl
je
cmpsl
or
fwait
repz
sbb
sub
mov
push
movsb
das
sub
daa
sub
loope
xor
sar
cmp
inc
inc
xchg
popf
xchg
xchg
mov
push
xchg
sub
test
fstl
out
fidivrl
mov
dec
cmpsl
stos
fistpl
lods
cmp
push
mov
mov
jge
repnz
xor
mov
lret
outsl
cwtl
xor
jg
scas
test
push
lahf
push
sub
pop
inc
fldcw
ss
mov
inc
iret
xchg
scas
hlt
cmc
insl
into
cmp
das
ds
sbb
mov
mull
adc
pop
sub
jecxz
das
adc
lea
aaa
lds
pop
aam
adcb
or
cmp
das
js
inc
add
push
cmp
call
push
insl
cmp
into
inc
leave
in
iret
lds
sub
stos
xor
mov
sub
and
repz
xchg
add
xchg
mov
repz
mov
daa
and
or
push
push
aas
cmp
scas
out
stos
cmp
xor
popa
push
add
xchg
inc
xor
sub
lds
test
push
rclb
cmp
xchg
sub
sbb
insl
fdiv
push
cmp
fsubl
jo
xchg
push
cmp
xor
scas
mov
inc
ficompl
jmp
xchg
xor
fdivs
inc
and
sbb
and
outsb
cmp
inc
push
daa
mov
ret
mov
rolb
mov
fisubrl
sub
xlat
mov
frstor
jl
xchg
pop
imul
pandn
scas
shlb
dec
stos
insl
cs
cmp
addr16
cmp
lods
xor
in
adc
shrl
xchg
mov
insl
sahf
mov
js
mov
lock
lcall
jge
mov
jb
xchg
xor
daa
and
jle
sahf
jb
mulb
jne
xchg
arpl
push
jl
insb
scas
in
js
sahf
cmp
fdiv
inc
loope
mov
aaa
jae
inc
adc
fldenv
jb
ficompl
gs
nop
xor
int
inc
push
nop
rcrb
aad
cmp
lods
movsb
mov
xor
ja
filds
setb
imul
mov
mov
push
or
or
push
stos
ja
jecxz
sub
pop
pop
dec
mov
jmp
sbb
and
rcrl
das
xchg
add
pop
mov
mov
cltd
push
popl
mov
imul
fildl
sub
shrb
xor
sbb
aas
out
jae
out
cmpsb
jg
jae
movsb
push
jge
in
cmp
lods
std
mov
addr16
mov
jecxz
jb
stos
cmp
xor
mov
sub
div
add
adc
push
xor
sahf
push
stos
xchg
xor
nop
pusha
aaa
icebp
aas
adc
jecxz
add
aad
or
and
aaa
shlb
cmpb
pop
mov
xor
movsb
adc
xchg
xchg
cmpsb
or
mov
fwait
aaa
jl
lea
push
add
cmp
jg
dec
and
stos
fs
sub
insb
pop
loope,pt
sub
cwtl
add
fwait
push
ret
call
lea
and
mov
addr16
shlb
jne
stos
xchg
mov
pop
mov
pushf
mov
int
adc
in
into
out
xlat
bound
lret
xor
shrl
cli
xor
xlat
mov
xor
cmpsl
jae
clc
aaa
sbb
ljmp
add
fsubs
pop
dec
cmp
stos
fwait
mov
fwait
jp
push
or
adc
xchg
jno
cmc
std
arpl
xor
stos
imul
push
push
fdivs
sub
cld
lcall
xchg
cli
bound
sarl
cmpsb
sbb
pop
xchg
outsl
out
pop
mov
xchg
out
xor
xchg
imul
xchg
sbb
pusha
lods
icebp
mov
in
cli
pop
jae
mov
dec
push
dec
mov
hlt
cmp
outsb
mov
add
jl
ret
sahf
stos
sub
lcall
fcmovu
call
push
aam
fimull
push
cltd
adc
icebp
insl
lods
pusha
dec
mov
aaa
adc
xchg
mov
xchg
fdivl
add
xor
adc
ljmp
jmp
add
xor
sbbb
pop
or
aad
xchg
cmc
mov
pop
xchg
mov
sub
sbb
or
cmc
and
pop
ljmp
aaa
fdivs
enter
ret
lahf
jp
je,pt
in
jl
fnsave
mov
pop
xor
int
fs
aaa
adc
cmpsl
idiv
and
mov
daa
loopne
std
inc
jmp
pop
or
pop
mov
mov
pushf
add
add
xchg
movsb
cmpsb
xor
aad
xor
mov
movlps
std
ret
cmpsl
das
jno
push
cmc
push
imul
jl
ss
adc
add
jno
scas
cmp
push
rol
loope
jno
insl
mov
dec
or
sbb
cmp
mul
xchg
mov
scas
out
stos
outsl
lret
jl
repz
sub
or
nop
fcmovu
mov
and
aad
test
test
sahf
faddl
popf
int3
out
inc
mov
das
gs
je
sahf
into
mov
or
das
sbb
push
shl
daa
pushf
mov
add
mov
shl
sbb
inc
push
loope
hlt
cmp
sub
jle
shr
xchg
imul
xchg
aaa
cmp
ljmp
sub
lcall
mov
jns
out
or
pop
shrl
cmpsl
ret
in
push
cmc
xchg
and
push
adc
fwait
cld
cmp
out
or
sub
ja
fdivrs
mov
and
add
cmpsb
xor
repnz
xor
out
cmp
movsl
mov
adcb
adc
mov
cli
cmp
test
rorl
stos
xchg
adc
push
rol
push
fsubrs
dec
or
push
test
pop
jp
inc
pop
nop
insl
fcmovb
dec
inc
stos
sub
aam
ret
mov
or
or
mov
push
fwait
lods
sub
scas
jecxz
or
mov
push
pop
sbb
mov
pop
mov
mov
xor
pop
mov
xor
mov
push
das
iret
cmpsb
inc
lods
pushf
mov
or
pusha
or
testl
adc
and
sub
shll
mov
shll
filds
or
insl
repnz
xor
cltd
subb
cltd
mov
gs
inc
popa
gs
stos
test
mov
pop
fs
shr
mov
scas
xor
mov
sbb
mov
test
xlat
ret
inc
pop
adc
and
sub
call
pop
or
nop
sti
pop
or
sbb
add
jle
push
insl
and
or
mov
push
or
xor
out
in
dec
ret
xlat
pop
xlat
adcb
hlt
lcall
dec
loope
sarb
sbb
mov
inc
cmp
imul
push
repz
add
jl
mov
and
inc
ljmp
mov
push
push
fstpt
in
je
xor
dec
mov
jl
inc
and
xchg
push
lahf
ficoms
jl
ljmp
into
imul
outsb
inc
aas
and
cwtl
in
adc
xlat
mov
and
bound
or
fstl
dec
push
xchg
sub
mov
fdivrl
xor
hlt
or
or
lds
je
inc
jmp
aaa
imul
out
ds
jb
sub
inc
fcom
or
mov
cmp
sub
ret
jg
sub
inc
cmc
test
outsb
adc
ljmp
scas
sbb
cmp
xor
jnp
mov
bound
xlat
jmp
push
cmpsb
lret
xchg
fsubrl
cmpl
mov
sbb
movsl
mov
pop
lret
add
sbb
pop
repnz
into
pop
rcll
ret
inc
inc
sub
lret
or
lods
xchg
mov
int
xor
fidivrs
das
shrb
or
xor
cli
orl
xor
fmul
cld
inc
adc
or
jle
and
push
adcb
out
in
mov
stc
and
xor
jns
or
rdpmc
pushf
outsb
ljmp
mov
pusha
sub
insl
mov
ds
jmp
jo
lret
loop
or
fdiv
daa
jp
jecxz
jle
hlt
cvtpi2ps
inc
dec
mov
ficomps
xchg
ja
mov
mov
sub
pop
lcall
add
into
mov
pop
pop
or
gs
shll
and
into
push
push
in
into
enter
mov
ss
faddl
dec
cmp
fs
cmp
jae
loopne
sbb
mov
xchg
loop
xor
adc
cmp
icebp
std
cli
sbb
xorl
ficoml
mov
xchg
mov
push
imull
sbb
mov
ds
and
imul
push
or
mov
imul
dec
push
jae
mov
and
mov
daa
cs
dec
jae
jbe
cltd
hlt
dec
sarb
inc
jg
xor
push
dec
loope
jle
pusha
stos
dec
test
fs
push
mov
pop
mov
pop
lret
fimuls
and
aad
sub
xor
or
adc
stc
enter
mov
fsubrl
ds
stos
das
test
mulb
jge
inc
loopne
imul
pushf
push
sub
jge
inc
in
jg
icebp
arpl
mov
sub
das
cmp
shl
lret
lock
xor
std
inc
push
into
fistpl
in
addr16
mov
lods
jg
jbe
dec
mov
arpl
xchg
add
adc
mov
mov
aaa
jbe
cmc
jg
popf
fsubs
push
jp
leave
mov
xor
cmc
fwait
xor
sub
nop
mov
sub
sahf
adc
adc
je
es
adc
or
cmp
dec
cmp
movsl
addr16
pop
mov
add
xchg
loopne
lods
xchg
mov
push
mov
pop
push
inc
int3
sarl
dec
sbb
in
jnp
sub
fistpll
sub
enter
or
add
jno
sbb
enter
lret
fbld
cld
dec
daa
in
cmp
hlt
dec
cli
adc
fistpll
loope
xchg
movhps
orb
push
fdivrs
mov
xorl
sbb
into
dec
jbe
out
push
sbb
daa
pop
ljmp
lea
push
jno
add
mov
sub
mov
lret
outsb
dec
stos
fldl
xor
outsb
lcall
cmp
mov
pop
or
data16
in
sub
or
cld
pop
shll
fbstp
outsl
sub
sbb
xchg
pusha
test
sub
outsl
push
inc
aam
sti
lds
addl
cmp
or
or
lds
es
icebp
add
or
mov
push
cli
pop
jl
dec
stc
lds
dec
xlat
push
jl
scas
push
outsl
adc
divl
jae
mov
or
or
addr16
mov
or
push
push
out
mov
jnp
mov
jne
jge
and
cltd
idivb
scas
iret
add
jmp
jae
xchg
stos
std
lods
stos
shll
inc
dec
adc
inc
inc
or
pop
xchg
add
xadd
addr16
aas
int
ret
cmp
leave
orl
inc
mov
sub
sub
lret
sbb
jecxz
pop
test
xlat
push
out
fsubrp
addr16
dec
outsb
jae
call
fnop
insb
iret
dec
addb
inc
mov
hlt
jo
mov
stos
fcomp
popa
xor
aas
mov
stos
mov
rep
xchg
xchg
pop
push
jbe
call
fs
dec
pop
int
es
repz
fldenv
hlt
fwait
cltd
imul
add
mov
icebp
push
pop
pop
sahf
mov
sbb
sub
mov
sub
nop
popf
lock
xor
sbb
icebp
aad
dec
jg
ret
shll
bound
mov
jl
clc
data16
dec
mov
lret
addr16
mov
lods
popa
test
stc
mov
jge
jb
dec
adc
stos
adc
mov
xor
sub
test
pop
dec
addr16
std
dec
out
xchg
lds
icebp
add
push
leave
xlat
mull
jae
gs
ss
jbe
push
cmp
fdivl
arpl
ss
je
push
dec
push
or
or
jmp
jge
cmpsl
inc
iret
mov
mov
es
loop
adc
dec
lret
jmp
aas
or
add
arpl
mov
inc
add
inc
and
es
pop
ljmp
xchg
sub
test
fmulp
es
in
aas
mov
pop
cmp
mov
lcall
lret
or
jns
aaa
shl
stos
test
ljmp
imul
or
aaa
inc
sub
jns
das
cs
mov
fs
xor
arpl
jmp
and
gs
imul
cmc
int
mov
xchg
push
mov
xor
aas
mov
xchg
mov
jl
cmp
jmp
push
and
mov
mov
sub
push
ret
add
movl
sub
push
popf
out
push
adc
daa
sub
mov
add
xlat
insl
mov
sub
mov
or
aaa
popf
mov
cmp
dec
jl
aaa
mov
add
imul
mov
mov
xor
mov
insb
or
xchg
push
out
ljmp
rclb
mov
das
sarb
js
rorb
sti
or
push
aad
push
cmp
xor
leave
and
das
jns
and
pop
fimull
pop
sub
js
lret
lock
cs
hlt
sub
lds
xor
push
rol
arpl
xor
fcomps
je
enter
jge
lret
gs
xor
repnz
outsl
jno
jno
std
mov
shld
aam
fstpl
xlat
push
lds
inc
jo
lods
outsl
js
xchg
aad
lret
imul
shl
stos
addb
out
push
or
xor
add
mov
scas
mov
jp
xor
dec
mov
or
push
clc
das
cmp
sub
stc
lret
movsl
jb
mov
dec
or
mov
rcl
or
dec
xor
ret
mov
incl
outsl
xor
mov
ja
jns
inc
cwtl
mulb
repnz
mov
inc
lea
hlt
push
les
aas
fnsave
ficomps
ficoms
popf
cmp
dec
mov
mov
pop
lahf
sbb
cmp
pop
std
ret
cmpsb
dec
outsb
fs
cs
or
pop
adc
jp
xor
aad
test
fldl
sbb
add
cmp
dec
sub
xchg
fs
xlat
out
mov
or
gs
scas
push
lahf
mov
mov
push
jbe
addr16
cmp
cmp
mov
sti
jg
out
fsubl
rcl
fstl
inc
addl
fildl
out
jnp
push
ds
pop
lret
add
outsl
sti
sub
push
or
stos
mov
insb
mov
jae
jbe
adc
gs
bound
adc
xor
out
fs
std
mov
sub
add
call
aam
gs
pop
jg
popf
xchg
dec
icebp
jns
ret
filds
roll
scas
out
ja
bnd
lcall
dec
mov
call
mov
jp
shl
test
push
std
xor
fdivs
stos
dec
mov
es
movsl
sub
aaa
mov
sub
cmp
mov
jns
push
lock
repz
pop
pop
or
jns
push
push
jae
and
scas
dec
sbb
outsl
out
xchg
add
push
sbb
jl
cmpsb
jge
cmpsb
mov
push
pop
sbb
movsb
shr
xchg
fstps
pop
aas
jnp
inc
ret
into
aaa
out
ret
cli
fwait
addb
inc
hlt
fsubrl
mov
xchg
into
mov
pusha
call
in
xlat
mov
sbb
dec
insb
mov
addr16
mov
popf
loop
jnp
jbe
dec
jne
test
enter
scas
add
jae
mov
leave
movb
jle
inc
cmpb
mov
aam
add
test
stos
test
xchg
sarb
push
sbb
fmull
rolb
or
mov
jl
shrb
bound
mov
and
sub
mov
ja
fs
je
sub
sbb
xchg
mov
aaa
jb
nop
std
nop
dec
loope
sbb
scas
loopne
dec
sub
dec
xor
jg
add
dec
stc
orl
push
pop
mov
push
xor
hlt
add
jecxz
mov
lret
int
icebp
sbb
inc
ss
lds
sbb
aas
or
sub
pop
lea
mov
loop
xbegin
push
push
int3
test
and
dec
sarl
jno
movsl
pop
imul
fwait
sbb
cmpsl
outsl
ja
mov
cmpsb
sbb
lret
sti
je
sub
hlt
data16
hlt
pop
cmp
fmulp
das
sti
xchg
sub
jmp
push
stos
ficompl
pusha
adc
negl
pushl
pop
mov
or
imul
or
repz
int3
cmp
out
popa
xchg
lea
or
popf
test
loopne
push
je
inc
scas
sbb
xchg
cld
ss
call
cmpsl
inc
push
cmp
mov
adc
clc
cmp
mov
movsl
mov
rorl
into
sub
scas
cs
cltd
or
and
add
push
ret
jnp
int
insb
sarb
xor
mov
add
xor
inc
cmp
rcrb
add
mov
mov
lock
test
lods
cmp
movsb
aam
cmc
out
sub
loopne
push
xor
xor
outsb
and
loop
adcl
js
and
mov
adc
popa
mov
sbb
push
lock
pop
xor
xchg
and
inc
std
mov
push
cmp
fdivs
pop
sbb
movl
mov
dec
cli
js
push
inc
cmp
aam
or
mov
movq
sub
mov
cs
mov
push
scas
mov
mov
xor
rorb
fldl
shrb
xor
hlt
es
push
xor
lret
push
push
jmp
or
cltd
pusha
xor
cmp
sbb
adc
fcomps
bound
imull
inc
sbb
punpckhbw
bound
fwait
pop
inc
cmp
jae
cmc
push
lret
adc
jbe
dec
push
pop
lret
cld
sub
inc
xchg
andl
iret
xor
test
scas
add
push
cs
add
mov
push
test
mov
cmpsl
les
jmp
xor
shll
inc
mov
ret
lret
or
sbb
addr16
mov
cmpsl
xor
out
shll
inc
movsl
mov
aaa
xchg
inc
and
cli
aas
subl
or
pusha
fidivrl
lea
xchg
mov
mov
sbb
mov
or
push
cwtl
and
mov
lea
jmp
popf
jno
mov
and
sbb
and
clc
xor
jg
push
inc
jae
loope
adc
into
fildl
add
cmp
mov
ljmp
int3
push
mov
ljmp
pop
stos
loope
jl
cmpsl
in
stos
pop
shl
imul
pop
push
inc
push
jne
insb
inc
sub
mov
dec
jo
mov
fmul
jo
cmp
enter
jnp
mov
les
and
shrb
and
pop
es
adc
jp
jl
mov
int
add
xor
jle
add
addl
sub
popa
or
aaa
lcall
xchg
mov
mov
jnp
rcr
pop
inc
mov
int
dec
mov
int3
fildll
int3
sub
adc
into
loope
jo
lods
leave
push
xchg
stos
add
daa
sub
adc
rol
cmp
mov
loop
xchg
inc
sbb
cmp
cli
cmc
nop
sahf
jge
push
sbb
push
in
add
in
pop
cwtl
mov
lret
int
inc
push
dec
stos
divl
stc
icebp
pop
xorl
test
cmp
popw
jbe
jo
loopne
stos
lea
sbb
adc
push
sub
sbbb
les
pop
loop
orb
xchg
repz
sub
or
lahf
add
clc
adc
jmp
and
sub
add
sub
or
lods
sbbl
sbb
enter
or
xchg
adc
rcl
xchg
fdivp
ret
inc
fiaddl
mov
and
lret
add
or
add
lcall
dec
mov
jmp
cmp
or
cld
and
dec
adc
jle
out
push
sbb
lock
lret
pop
pop
jl
sar
dec
cmp
js
loope
jo
sbb
and
imul
pop
adc
add
fwait
pushf
decl
dec
dec
aaa
test
push
dec
inc
sbb
xor
dec
test
stos
std
mov
in
mov
sub
std
jmp
iret
das
and
ret
xchg
inc
out
std
pop
or
lods
daa
jmp
xchg
push
psubw
xor
lds
mov
mov
popa
and
adc
movb
stos
daa
fidivl
fwait
pop
das
adc
daa
xlat
pop
notb
mov
lahf
mov
jbe
out
mov
aas
pushf
push
push
jnp
loop
lret
xor
adc
ficoms
mov
xor
imul
mov
ljmp
pop
into
push
push
mov
lahf
jmp
cmpsl
jbe
out
mov
aas
pushf
pushw
mov
mov
std
mov
jmp
iret
out
dec
cmp
jb
cli
cmp
and
out
mov
movsl
pushf
gs
in
fisubrl
pop
aam
mov
cmp
cmpsl
insb
out
in
sub
adc
popa
cmpsl
es
sbb
xor
inc
xlat
lea
sbb
pop
enter
mov
mov
mov
and
pop
cs
loop
daa
rorl
mov
test
stos
ja
lcall
jmp
pop
jns
in
xor
push
shll
push
insl
adc
fdivp
shll
mov
cmp
or
cmc
mov
sbb
add
push
outsl
mov
adc
lcall
or
jmp
sbb
inc
sbb
sbb
lahf
push
fcoms
lods
jl
ja
pop
mov
fidivs
sbb
mov
or
pop
sbb
xchg
sub
arpl
daa
adc
inc
out
add
sub
push
out
jp
push
mov
sbb
ret
sbb
jge
mov
leave
std
mov
loopne
mov
fdivrl
or
cmp
inc
jae
mov
vpaddsb
or
or
inc
sub
mov
sbb
mov
lds
cmp
mov
and
push
pop
inc
and
ja
mov
jmp
mov
push
fwait
leave
scas
das
scas
faddl
mov
cltd
mov
arpl
cmp
mov
push
aad
ret
std
push
cli
mov
adc
sti
out
push
fsubl
subl
mov
adc
mov
mov
nop
pusha
push
daa
xchg
mov
adc
pop
imul
arpl
ret
aam
push
and
adc
lds
jecxz
cwtl
sbb
das
add
xchg
shll
int
jnp
and
imul
mov
lret
and
mov
jge
and
mov
daa
fcoml
aas
jb
inc
lods
jae
popf
incb
add
mov
dec
xchg
lahf
fdivs
jno
decb
mov
sub
xchg
push
or
das
pop
imul
packsswb
pop
jp
movsb
ljmp
scas
or
cmpsb
outsb
cmp
jp
pop
repz
or
outsl
test
popf
inc
jbe
pop
sbb
and
mov
insl
xchg
icebp
cs
dec
and
xchg
push
jae
jg
daa
cld
dec
lahf
xchg
mov
adc
jmp
add
mov
cmp
ret
insl
xchg
mov
mov
lcall
out
fistpl
sub
rol
es
aaa
mov
cli
xlat
mov
mov
pop
imul
jno
pop
mov
xchg
inc
dec
ja
and
or
arpl
inc
insb
sti
shll
xor
push
push
dec
pop
or
add
mov
je
cmpsb
lods
sbb
mov
jle
adc
mov
stos
popf
adc
xor
sub
inc
pop
dec
ret
dec
mov
loop
xchg
inc
mov
or
addr16
and
call
inc
push
stos
mov
push
inc
add
cld
push
lret
test
cmp
pushf
ja
mov
xlat
dec
or
les
and
fwait
pop
push
lea
jl
jmp
in
inc
and
xlat
push
or
lods
or
mov
out
pop
movsl
mov
sti
mov
jne
je
out
imul
punpcklwd
push
jecxz
sahf
out
jle
in
daa
cmc
and
ja
sti
mov
sub
mov
aaa
out
dec
jle
push
mov
mov
mov
int3
inc
inc
dec
adc
xor
inc
and
jnp
pop
cmpsb
push
ss
sti
jg
in
pop
push
incl
jae
dec
lock
pop
daa
subb
mov
mov
test
loopne
inc
data16
adc
sub
adc
jge
fwait
mov
dec
mov
cvtdq2ps
jl
bnd
pop
adc
sahf
js
sbb
or
xchg
pop
dec
mov
aaa
das
xchg
sbb
xchg
sub
mov
sub
shrb
dec
arpl
pushf
or
push
lret
repnz
sub
outsl
push
out
xor
or
dec
mov
mov
ja
iret
js
xor
fwait
mov
pop
les
imul
xor
loop
divl
imul
dec
popf
ss
pop
sbb
mov
adc
dec
lea
push
xchg
hlt
dec
fiadds
jmp
mov
negl
popa
jecxz
les
bnd
in
or
sbb
xlat
stos
add
xchg
or
frstor
sti
fistpl
adc
jp
shrd
and
scas
xlat
push
add
dec
xor
add
lcall
fdivl
fs
mov
out
push
inc
popa
ret
pop
shrb
jbe
repz
mov
sarb
insl
jo
xor
mov
lea
dec
ss
das
adcb
mov
scas
jl
sbb
and
xor
out
or
ficoml
ljmp
call
lods
jecxz
push
es
aam
and
adcb
data16
mov
mov
lcall
ret
pop
sarl
popf
imul
add
movsl
fsubl
fs
mov
fsubl
push
push
lea
or
add
lock
and
ljmp
mov
xchg
push
ljmp
cmp
dec
xor
xchg
std
lahf
push
lret
lahf
dec
push
mov
jne
push
sub
gs
inc
push
das
gs
sbb
dec
leave
sub
rorb
jl
sbb
jno
std
xchg
dec
mov
nop
arpl
pushl
pop
push
xor
sarb
int
jg
pop
cmpsl
or
xchg
lds
jo
xchg
dec
pop
fisttps
lahf
shrl
dec
adcl
lret
push
pop
div
stc
sub
lods
js
arpl
leave
add
test
sub
lret
lret
in
mov
js
and
or
lret
sbb
ds
clc
hlt
and
xchg
xor
mulb
mov
leave
mov
ja
lods
aas
cmpsb
fwait
mov
xor
stos
push
sub
in
sub
sub
pop
jge
push
cmpps
xchg
dec
sbb
mov
andb
jle
cwtl
pop
pop
push
xchg
and
out
mov
je
clc
arpl
add
stc
sub
jbe
push
ja
les
sub
loopne
and
hlt
lret
adcl
lds
sub
ret
movsb
outsb
xchg
jno
mov
sub
mov
ja
mov
jo
push
xchg
xor
ret
ret
xchg
dec
mov
ds
shl
das
pop
daa
xchg
mov
inc
push
das
pop
inc
ja
pop
popa
lea
pop
mull
adc
test
mov
pop
pop
mov
and
sub
sub
mov
mov
sbb
and
push
rclb
dec
sbb
jg
stos
fwait
and
outsl
push
sub
pop
lret
sbb
aaa
inc
std
jbe
add
movsb
leave
faddl
pop
faddl
or
push
hlt
push
inc
push
mov
xchg
fisubrl
fistl
arpl
stos
xor
nop
sub
cli
cmp
dec
cmp
push
sub
xchg
addr16
push
xchg
push
aam
xchg
fdivrl
outsl
and
jmp
lret
movsb
fmul
mov
jp
sub
out
xor
mov
les
loope
sbb
cmpsb
push
xchg
xor
es
sbb
and
push
push
push
sbbb
outsb
test
or
add
jo
loopne
hlt
inc
add
mov
std
cmp
add
test
xchg
jb
adc
test
mov
push
aad
sbb
leave
mov
out
or
lahf
xchg
add
lahf
push
ljmp
ds
lods
data16
xor
cmp
xchg
or
cmp
mov
lods
jb
test
mov
dec
fnstsw
ret
jne
cli
or
negb
jne
lahf
icebp
incl
xchg
mov
mov
cmp
adc
loopne
icebp
lds
cmp
sarb
adc
push
xor
fiadds
sbb
out
jecxz
faddl
jecxz
in
rol
jae
lods
adc
jne
dec
mov
call
jmp
fwait
pop
popa
lcall
shll
push
lock
inc
and
push
lret
mov
fnstenv
dec
adc
mov
jno
lock
mov
jmp
sub
mov
daa
sub
enter
mov
pop
aad
dec
mov
ficomps
mov
loop
int3
test
lret
sub
xor
push
dec
in
pop
rolb
xor
xchg
pusha
jne
pop
inc
mov
ret
sbb
lret
fwait
in
scas
and
int
nop
mov
cmp
dec
scas
adc
in
jnp
jbe
addr16
and
das
push
xor
mov
es
inc
sub
gs
push
loope
pop
cli
test
call
out
imul
pop
je
add
imul
ljmp
mov
xorb
jl
sub
mov
mov
push
jmp
test
fildll
sbb
jbe
fidivrl
popf
inc
jne
dec
push
cmp
push
nop
mov
nop
dec
lahf
mov
push
lcall
jmp
xchg
fstl
arpl
add
das
lods
xor
popf
xchg
sbb
in
bound
fnsave
int
mov
fdivs
mov
test
jmp
pusha
popa
pop
sub
shlb
dec
pusha
mov
leave
push
sbb
inc
mov
fs
dec
mov
stos
lods
cmp
mov
hlt
test
pop
push
pop
cmpsl
mov
mov
or
in
jae
mov
inc
aad
mov
push
push
cmp
cli
aas
mov
lods
xchg
lock
sahf
and
ljmp
and
mov
mov
mov
mov
loop
or
sahf
sub
lods
xor
or
mov
jo
sbb
jb
scas
fmull
mov
gs
dec
jne
lea
sbb
rclb
inc
addr16
jo
dec
mov
aam
fimuls
inc
nop
loope
xchg
pop
sbb
xchg
and
pop
adc
xchg
test
xchg
pop
push
fldt
repnz
pop
and
mov
xchg
and
push
cli
and
or
inc
mov
inc
add
jl,pt
insl
mov
das
out
rcll
stos
cmc
rcl
add
jp
push
js
movsb
jle
xchg
ret
jg
pushf
les
mov
popa
xchg
inc
aaa
ret
inc
movsb
lods
mov
xor
xchg
out
inc
cld
jnp
and
ret
popa
sahf
mov
fidivrs
jp
push
repz
stos
movsb
lds
fcompl
rcrl
insb
push
je
xor
sti
add
push
add
sub
scas
xchg
inc
mov
jmp
add
mov
pop
sarb
mov
jne
call
lret
jl,pt
divl
mov
sbb
cmp
sub
mov
xchg
inc
and
sub
sar
insl
sub
xor
mov
shll
psllq
mov
in
and
push
jecxz
and
jnp
mov
and
or
mov
sub
jge
sub
jnp
cmp
inc
lods
mov
or
fwait
cld
jbe
xchg
outsl
mov
daa
imul
stos
popw
jg
xchg
and
mov
pop
sub
pop
bound
ds
cmp
and
fdivrs
push
push
cmp
xor
scas
aam
push
mov
add
mov
ret
cmp
mov
inc
mov
aaa
lods
lret
lock
cmp
push
insl
in
mov
sbb
pop
adc
push
out
xchg
sub
jnp
push
iret
mov
xor
mov
xchg
jb
je
mov
cmpsb
add
xor
cmpsb
sbb
aaa
jg
adc
push
jmp
jmp
fwait
jmp
mov
fstl
das
mov
xchg
ja
iret
aas
sar
sub
leave
mov
sbb
sbb
mov
addl
mov
mov
fwait
jbe
dec
sbb
mov
out
mov
mov
mov
scas
test
cs
ret
js
popf
jecxz
loope
pop
je
loop
or
scas
int3
xor
lcall
jne
adc
xor
add
lret
fstps
mov
idivb
mov
mov
jl
decb
xchg
or
adc
mov
enter
popf
jne,pn
mov
pop
ds
lret
xor
lret
xor
outsl
cmp
ljmp
adc
imul
negb
bound
cmpl
push
add
xor
imul
scas
pop
gs
lahf
mov
add
jmp
ret
sub
inc
cltd
cmp
inc
into
aas
add
out
fildll
jge
scas
xor
jl
mov
nop
rcrb
popa
xor
push
mov
jge
push
push
gs
add
jp
es
xchg
add
cmpsb
aaa
insl
push
add
xchg
mov
aad
mov
and
sbb
ret
push
test
xchg
mov
es
xchg
pop
jmp
in
mov
loop
sarb
lock
negb
out
jae
xor
out
and
add
mov
cs
cmp
pop
inc
cli
arpl
lret
sbb
outsl
push
adc
out
mov
mov
add
pop
cs
jmp
or
xor
pop
lret
int
xchg
insl
dec
outsl
jns
mov
cmpsb
popa
and
jnp
mov
out
and
das
sub
cmp
inc
adc
movsl
fbstp
mov
fcoml
sub
fcmovbe
fists
mov
and
push
adc
ljmp
cmp
scas
sahf
add
jl
mov
fcomip
and
pop
lret
adc
insb
ljmp
ffreep
lret
mov
pop
jb
cmc
mov
ret
daa
lret
aad
lods
sub
cmp
test
mov
out
adc
orb
add
sub
sub
cmp
out
aaa
loop
add
inc
push
dec
das
dec
call
adc
cmp
sub
iret
cmpsb
inc
insl
movb
lea
inc
xchg
loope
jecxz
ficompl
or
pop
call
popf
mov
aas
mov
jp
mov
xchg
and
mov
dec
sarl
lret
test
adc
outsl
mov
sbb
stos
pop
test
or
or
adc
add
clc
or
xchg
xor
xor
mov
push
testb
lea
jns
sub
aaa
lods
ja
pusha
vmovd
pop
pop
repnz
jp
cmp
cltd
xor
fs
fcomi
jns
call
sub
xor
imul
xchg
push
loopne
sahf
enter
enter
les
outsb
sbb
cli
shrb
call
and
sbb
in
ljmp
dec
add
sarb
scas
add
mov
mov
jg
in
xchg
gs
jp
or
hlt
loopne
cli
xor
ljmp
cmp
fisttps
xchg
jecxz
pop
mov
ss
lock
cmp
aaa
pop
sbb
cmpsl
sbb
pop
and
std
mov
repz
sbb
popf
sbb
adc
jmp
jno
mov
call
std
add
xchg
jne
ret
insl
ret
popf
jo
cmp
aam
add
fnsave
dec
add
ret
insl
jle
jns
jnp
jnp
imul
jns
adc
and
repz
div
xlat
cmpsb
je
out
icebp
mov
in
std
jmp
push
push
sbb
push
sahf
xchg
in
imul
mov
lock
mov
dec
sub
push
je
data16
xchg
test
mov
or
jp
jae
mov
mov
push
frndint
lahf
mov
jp
das
cmpsb
push
lds
lret
jae
sbbl
stos
cmp
jb
std
in
add
sti
dec
outsb
lcall
ds
daa
xchg
jmp
jl,pt
sub
data16
inc
push
loope
in
rorb
mov
sbb
sub
xor
cmp
ds
add
mov
jl
sahf
jmp
adc
add
mov
js
nop
sub
lock
sub
loope
repz
lea
mov
jno
xor
or
sbb
or
xchg
ret
fs
jp
fs
fnstsw
pop
arpl
clc
cmpsl
push
aaa
in
dec
ret
jno
cltd
jg
iret
sbb
std
mov
sub
xchg
jb
sub
cmpsb
imulb
xor
stos
jno
in
pushf
adc
dec
lods
rcr
mov
jns
mov
mov
lahf
xor
mov
lock
sbb
push
int
push
xchg
test
adc
mov
addr16
mov
push
js
mov
jne
and
dec
pop
sub
arpl
pop
jmp
shl
pop
xchg
fdivr
jge
cltd
call
pop
stc
jae
icebp
hlt
pop
xchg
dec
stc
jge
adc
cmp
pusha
hlt
fnsave
into
jmp
xor
xchg
push
push
adcl
pop
or
add
push
cmp
jns
test
scas
loop
xor
je
dec
push
outsl
stos
mov
mov
cltd
nop
inc
adc
test
cwtl
ss
icebp
or
icebp
pop
fstpt
and
shl
jg
mov
dec
jnp
add
sub
lods
out
push
stos
aad
xchg
arpl
jne
dec
lret
jnp
popa
pop
add
mov
repz
into
xchg
add
push
xchg
data16
pop
mov
outsb
add
fsubs
aaa
negb
fistpl
arpl
push
sub
cmpsl
mov
lahf
jp
sbb
and
xchg
fistps
arpl
adc
outsl
jmp
xchg
sub
pushf
std
shlb
and
rcr
push
push
and
es
adc
mov
mov
jl
or
xchg
nop
mov
divb
into
stc
sti
or
xchg
inc
int
and
adc
into
push
xor
rol
xchg
into
dec
cmc
mov
outsl
ljmp
adc
cmp
xor
popa
jl
xchg
jg
push
push
fidivs
push
xorb
mov
fstpl
lahf
popa
pop
push
jne
addl
mov
ss
dec
std
sbb
xlat
arpl
ds
cmc
mov
mov
xchg
icebp
rcl
xlat
push
insb
les
es
inc
and
jg
push
fsubrs
test
mov
dec
push
adc
nop
sub
pop
sti
out
mov
xchg
test
cmpl
rep
mov
mov
inc
pop
stos
xchg
pop
sub
xchg
jae
fdiv
jae
stos
call
shrb
popf
cmpsl
sub
dec
addr16
sub
leave
popf
sub
es
cmp
outsb
mov
stc
cmp
mov
out
cmp
cmpsb
jge
test
test
mov
push
jmp
jp
push
jecxz
repz
test
xchg
lret
jb
stos
jo
sub
inc
aaa
int
sar
lcall
mov
add
jb
mov
rorl
mov
push
push
cmp
aam
and
sub
pushf
popf
les
test
lcall
daa
sahf
cwtl
gs
ds
push
sbb
fldenv
enter
loopne
scas
pushf
in
mov
addl
imul
jno
jne
xchg
xchg
mov
add
scas
les
mov
or
imul
pushf
loopne
int3
aam
insl
popf
cmp
add
push
fwait
pusha
mov
push
adc
mov
or
rclb
add
xor
sub
imul
mov
js
mov
pop
mov
xchg
inc
int
jne
push
lahf
pop
xor
insl
pop
js
inc
jle
push
aas
add
in
add
stc
push
push
popf
call
xor
mov
sub
cmp
dec
mov
movsl
mov
mov
sub
popa
cmpsb
push
inc
push
rol
and
aas
lcall
scas
ret
sub
mov
jb
push
pop
je
mov
test
xchg
int
mov
inc
je
sbb
push
iret
ret
xor
fdivrl
adc
addr16
mov
outsl
xchg
cmc
or
mov
inc
push
subb
gs
inc
mov
fmull
adc
out
jmp
into
scas
ret
hlt
hlt
mov
sbb
push
sub
push
adc
jbe
dec
outsb
or
adc
out
and
inc
push
sbb
cltd
out
add
in
arpl
iret
jne
sbb
push
jb,pn
shrb
lods
cwtl
jg
in
cmp
test
outsl
lods
xchg
sub
jl
out
mov
cmp
inc
jecxz
int3
xor
cmp
sbb
jl
add
lock
add
daa
sahf
test
lret
lea
cmpsl
inc
aaa
scas
insb
adc
aam
push
js
or
add
sbb
push
pusha
jl
out
mov
in
in
in
push
in
pop
dec
cmp
test
sub
pusha
jg
push
inc
js
fdivs
mov
lahf
jg,pn
imul
cmp
push
inc
cs
pop
je
in
add
mov
push
mov
mov
ss
pop
frstor
lret
sbb
popf
daa
jle
mov
mov
jmp
cmp
jle
xor
inc
dec
outsb
push
andl
scas
subb
call
or
mov
mov
dec
dec
pop
add
jge
cmp
pusha
outsb
test
in
jno
mov
lea
jge
fucomi
sbb
cmp
sub
popf
inc
xor
out
in
inc
stc
pop
out
inc
aaa
addl
pop
mov
xor
jnp
adc
insl
mov
inc
xorb
mov
je
ds
pop
sub
imul
dec
cs
sbb
mov
adc
ret
or
rorl
shlb
stc
xchg
cmpsb
enter
aaa
pop
push
mov
add
pusha
mov
sti
inc
in
sub
inc
push
or
scas
push
mov
sarb
cwtl
fisttps
loopne,pn
jp
pop
fistpll
xor
or
repz
push
cmp
rcr
cmp
mov
mov
jmp
pop
adc
mov
shrb
dec
inc
lret
cmpsb
sub
jae
xchg
pop
xor
adc
xor
aad
mov
fdivl
inc
sbb
and
sub
and
in
aas
pop
lods
fs
ss
or
into
xchg
enter
lret
adc
jp
sbb
dec
push
inc
mov
sub
cmpsl
out
bound
cmovl
aas
fsubrs
sti
push
jg
rorb
push
in
cli
mov
test
jno
pop
fcomip
mov
xchg
fsub
pop
rorb
cwtl
shrb
xchg
test
pop
jae
sub
pushf
mov
sbb
sub
pop
cmp
lret
push
neg
scas
cwtl
fdivrl
rclb
inc
les
push
mov
sarb
push
mov
fwait
repnz
inc
inc
dec
dec
sub
fucomi
fisubs
test
pop
scas
jl
inc
ret
lahf
dec
push
cmp
out
stos
in
fsubs
and
jns
dec
adc
pop
aam
cmpsb
xchg
push
scas
sbb
inc
js
int
sar
cs
popa
fadds
jnp
fdivrs
fidivrs
fistpl
xchg
mov
in
sub
pop
push
adc
cld
push
in
pushf
into
ja
mov
js
mov
in
std
inc
jmp
ficoml
mov
jne
or
les
mov
icebp
inc
loope
jmp
sbb
cmp
xlat
xchg
mov
pop
cmpb
cli
cwtl
fnstcw
lret
cmp
popa
sub
lret
xor
test
dec
dec
push
out
mov
test
sarl
lods
add
aas
rolb
mov
out
popa
ffree
loop
xor
mov
xlat
mov
movsb
xlat
mov
mov
mov
add
fisttps
xchg
lret
mov
mov
ret
cmp
das
adcl
xor
cwtl
pop
cmpsb
pusha
lds
add
sbb
cmp
mov
and
iret
dec
stos
xor
xchg
mov
sti
dec
push
pushf
mov
mov
and
or
mov
inc
cmc
cmpsb
sub
jae
lock
ja
aaa
cmp
aas
repnz
xlat
lahf
push
sbb
filds
scas
mov
out
jl
out
jmp
add
shlb
out
iret
insb
stos
cmpsb
mov
add
filds
loope
outsl
ljmp
lret
cmc
cmp
das
mov
adc
mov
scas
xchg
loope
leave
and
loope
push
outsb
testl
pop
pop
sbb
loope
leave
or
or
mov
mul
add
push
int3
inc
aad
loop
add
out
xchg
inc
xor
pop
push
ljmp
sub
repz
je
outsl
mov
and
ret
lret
into
cmp
scas
mov
add
pop
sarl
push
cmp
aas
loope
data16
pop
pop
mov
dec
add
imul
pop
lcall
shll
in
scas
mov
mov
jg
dec
repz
dec
shll
scas
inc
push
inc
mov
sub
scas
cmp
dec
movsb
dec
aad
pushf
inc
aaa
mov
cmp
push
scas
call
scas
jg
sub
shl
cmpsl
loope
adc
rcrb
leave
popf
loope
mov
outsb
jnp
lock
mov
cld
popf
daa
inc
jno
popa
add
iret
push
adc
jae
pop
jl
pop
in
adc
fcmovnbe
push
in
faddl
gs
lahf
mov
pop
push
ss
pop
cmp
jo
jg
addr16
das
fisubl
jmp
daa
std
stc
sti
mov
push
in
push
and
mov
stos
cmpxchg
cmp
pushf
lods
ss
ror
xor
lds
inc
mov
shll
add
push
xchg
jnp
scas
mov
xchg
dec
pusha
mov
rorl
xor
adc
jo
shrl
mov
stos
mov
xor
aad
or
xor
adc
test
ds
xor
fistps
cld
dec
out
int
inc
pushf
rolb
xchg
pop
insl
repz
xor
lret
mov
out
and
cmp
jbe
loop
jg
sub
enter
popf
push
inc
mov
stos
xor
mov
dec
inc
movsb
sbb
cmc
mov
xchg
sub
mov
jg
sbb
adc
cmp
ret
pop
scas
sbb
cmp
push
adc
stos
sahf
test
xor
cmpsb
push
aas
lahf
test
or
ds
mov
into
pop
inc
int
mov
cmpsl
xchg
enter
cmp
push
test
scas
xchg
push
aam
adcb
and
repnz
roll
mov
push
cmpsb
cld
loope
sbb
bndldx
mov
push
imul
addr16
and
cltd
dec
cwtl
sbb
add
inc
push
mov
xchg
fcoml
mov
mov
fistl
mov
das
mov
or
das
fdivs
daa
enter
ja
ljmp
lods
dec
std
ja
mov
cmp
inc
hlt
fs
cmp
mov
stos
inc
int
xor
push
adc
jl
pop
inc
jle
cmp
lahf
stos
mov
outsl
cmp
int
inc
mov
add
and
fwait
ljmp
xor
testb
leave
jl
adc
repz
push
inc
mov
inc
cmp
xchg
out
fs
and
ficoms
jg
repnz
into
mov
or
mov
push
insl
cmpsb
xchg
jae
cwtl
cmp
rcrb
adc
push
sahf
cmp
pop
dec
notb
test
add
sbb
mov
xchg
dec
cmpsl
sbb
or
and
inc
pop
aad
lcall
mov
jae
jo
sbb
or
in
leave
pop
jl
gs
push
xor
movsb
shlb
jg
xchg
movsb
movsl
daa
test
int3
loope
adc
mov
jge
insb
popf
mov
addr16
ret
dec
xor
inc
cmp
jg
mov
cmp
mov
and
pusha
cmp
pop
pusha
xor
sub
icebp
adc
scas
ss
stos
and
pop
jnp
shrl
ret
popf
mov
xor
xchg
nop
stc
mov
lock
sti
cwtl
ss
iret
xchg
cli
leave
jno
and
fstl
and
stos
ja
jo
iret
xchg
fwait
sub
inc
mov
mov
pop
add
mov
inc
sahf
cmp
mov
ja
arpl
cmp
scas
mov
jl
cmp
stos
cwtl
std
lret
rclb
mov
lds
out
pop
es
mov
movsb
rcll
xchg
inc
add
push
ret
fwait
inc
popl
stos
lea
roll
insb
dec
adc
mov
cmp
dec
xchg
addr16
pop
cmpsb
lahf
push
lock
je
cmc
lcall
sub
add
mov
movsb
mov
test
mov
cmpb
jne
adc
aaa
outsl
sub
rcr
fistpl
es
outsl
scas
xchg
jo
into
adc
test
dec
mov
mov
adc
test
frndint
mull
out
daa
inc
xlat
mov
sbb
das
icebp
sub
jno
in
mov
xor
adc
push
dec
sub
shl
cli
dec
cld
and
cltd
fucomip
inc
push
push
lock
dec
jle
mov
daa
add
cmp
out
and
mov
and
push
mov
mov
scas
xor
aas
scas
jg
mov
xlat
sbb
outsl
sub
sti
fidivs
leave
mov
stos
jmp
es
std
ret
sub
and
daa
inc
pop
mov
popa
mov
mov
aas
xchg
ja
or
push
loope
pop
add
jae
push
pop
xor
popa
gs
out
ja
fiadds
aad
nop
fidivrs
cmp
ljmp
mov
jb
ljmp
in
sti
add
arpl
cld
aas
pop
aam
loope
push
mov
in
and
xchg
push
stos
cltd
add
and
sbb
xlat
lds
stos
mov
outsl
outsl
ljmp
fisubrs
sub
xchg
mov
ds
push
popf
ret
push
scas
ds
mov
shll
ds
test
xchg
dec
sbb
out
inc
std
jae
cmpsl
aaa
mov
push
lcall
ja
xchg
sti
outsb
jg
dec
pop
xor
fnstsw
shr
scas
iret
sub
in
aas
sub
adc
stos
out
lods
prefetchw
out
inc
int
adc
lods
outsb
xor
xlat
mov
push
add
call
sbb
popf
xlat
stos
out
repz
push
andl
aas
fnstsw
stos
jl
pop
fiaddl
js
mov
jecxz
sub
jp
adc
loop
add
jecxz
loop
out
cmpsl
mov
mov
in
ret
push
scas
xor
divl
pop
lcall
aaa
add
cmova
sub
lods
das
pop
push
pop
mov
pushf
shufps
adc
out
inc
std
jae
cmpsl
aaa
mov
push
lcall
push
push
and
sti
dec
pop
cmp
jmp
mov
ss
sbb
std
push
and
sti
in
dec
lret
sbbb
icebp
das
inc
test
mov
ljmp
daa
lret
jae
aaa
jmp
stos
cmp
je
rorl
fidivrl
ss
mov
shll
and
xor
fsubs
decb
and
cltd
and
ss
dec
mov
mull
dec
mov
push
repz
data16
or
mov
mov
xchg
test
sub
pusha
jle
dec
push
addr16
dec
xchg
jnp
add
ffreep
xor
addr16
cmpsb
ds
mov
inc
iret
or
sar
push
pop
imul
mov
add
mov
lds
mov
dec
xchg
fisttps
cmpsb
or
popa
mov
ja
push
pop
fdivl
fidivs
ja
test
lret
addr16
and
and
xor
add
xlat
jnp
sahf
fsubp
push
ror
push
orl
push
and
subb
sbb
mov
cld
loope
push
add
fwait
shlb
call
and
out
bnd
pop
cli
out
or
arpl
jbe
inc
movsbl
add
or
in
rcrb
mov
and
and
mov
orb
sarl
lret
mov
xor
mov
push
xchg
dec
mov
inc
clc
fiadds
aaa
add
push
mov
cmp
or
xchg
add
mov
es
sbb
xor
sub
mov
sbb
mov
mov
and
out
pop
clc
jae
ss
pop
mov
xchg
jge
shll
sub
ffreep
xchg
and
jg
sub
pusha
out
dec
icebp
cli
outsl
jae
ljmp
mov
mov
sbb
lret
lock
fstpt
or
inc
insl
repz
add
test
filds
xchg
shr
jecxz
jp
call
out
jp
xchg
loope
mov
fisubs
inc
out
dec
jmp
aaa
stos
mov
fs
and
mov
add
fcomip
cmp
jecxz
inc
es
std
jbe
clc
scas
mov
add
ja
xchg
mov
test
pop
shll
sub
fmuls
in
roll
jge
ja
sbb
pushf
mov
outsl
or
push
insb
out
jg,pn
or
bound
testl
imul
xchg
stos
xchg
xor
stos
aaa
add
add
and
cmpsl
in
mov
ja,pn
pusha
pop
das
jno
movl
cltd
and
pop
and
ret
jae
rorb
adc
pop
and
mov
push
aam
fsts
scas
mov
dec
pop
xlat
dec
mov
sub
filds
or
insl
pop
add
arpl
add
inc
fcmovbe
push
mov
or
xchg
mov
movsb
bnd
inc
loope
xchg
add
movb
je
mov
or
or
imul
cmp
and
fimuls
sahf
jge
int3
out
bound
mov
dec
popf
mov
jno
insb
cmp
lahf
jg
pop
push
jmp
sub
adc
mov
fidivrl
repnz
add
or
aam
jg
mov
clc
repz
aaa
mov
add
xchg
mov
fstp
mov
aad
pop
and
ds
mov
push
and
lods
inc
je
mov
and
mov
dec
sbb
or
das
inc
xor
mov
add
and
or
jmp
mov
movsb
or
jne
mov
mov
sub
leave
add
mov
ds
xchg
mov
insl
jecxz
into
pop
sub
inc
std
sbb
fsubrs
faddp
and
mov
lock
mov
cmp
cs
mov
xchg
jl
nop
faddl
shlb
fsubp
outsb
cwtl
xlat
jle
pop
sbb
add
cmp
lahf
dec
cmp
pop
mov
pop
repnz
adc
lret
cmp
ret
dec
mov
push
jl
jmp
mov
xchg
xchg
sti
mov
aaa
and
add
mov
mov
fadds
frstor
sbb
cmc
mov
lods
sarl
cld
mov
and
pushf
mov
sbb
fisubl
insl
pop
or
or
inc
shll
or
push
mov
lock
jbe
adc
scas
addr16
cmpsl
mov
repz
mov
out
loopw
icebp
std
jbe
inc
pop
ss
dec
mov
je
pop
ljmp
jle
xchg
cmp
xor
notl
inc
sbb
dec
jmp
cmpsb
scas
std
and
imul
jmp
mov
mov
fnsave
out
arpl
xchg
mov
inc
pop
sub
cmp
addr16
adcb
adc
unpcklps
cs
push
inc
adc
idivb
cmpsb
inc
orb
lea
std
loope
or
pop
push
mov
sbbl
fs
fldt
cmp
scas
add
cmp
inc
stos
es
ljmp
jg
jmp
xlat
push
dec
cmpsb
cmp
inc
in
iret
cs
push
inc
pushw
fcmovbe
push
cmpsb
mov
jp
shr
testb
cmpsb
adc
mov
inc
inc
ljmp
sbb
sahf
push
icebp
push
out
mov
dec
pop
cmp
aaa
idiv
adc
cmpsl
daa
adc
stos
inc
sbb
jmp
iret
xlat
add
not
add
add
inc
push
pop
insb
mov
out
sub
cli
sub
out
sbb
jno
add
xchg
dec
pop
call
xchg
jmp
cs
inc
fildll
jnp
push
repz
pop
sbb
cmp
and
das
pop
aas
out
mov
mov
ret
mov
sub
inc
mov
cmpsl
push
movsl
inc
xchg
lahf
xor
pop
iret
lret
or
pop
sub
outsl
arpl
ljmp
pop
inc
jnp
push
adcb
das
stc
lret
jmp
ss
das
push
mov
in
or
jmp
and
aaa
add
lahf
lcall
pop
cli
stos
xchg
push
add
int
sahf
shll
cwtl
mov
inc
xchg
shlb
mov
adc
lret
xor
negl
dec
mov
jae
cli
sti
xor
cli
mov
jns
jae
sbb
jecxz
pusha
adc
aas
int
mov
sbb
movsb
add
into
out
add
cmp
or
push
mov
sahf
inc
scas
sti
cmp
sub
push
daa
lret
xchg
dec
adc
jmp
scas
insl
addb
push
cmpsl
push
lock
lods
mov
nop
mov
adc
adc
push
aas
aaa
sti
xchg
jg
dec
hlt
adc
stos
dec
lods
xchg
pop
arpl
sti
mov
pushf
roll
push
jae
divl
add
imul
scas
lea
ss
mov
add
xor
decl
int
adc
les
subl
filds
inc
imul
into
mov
pop
shll
or
xor
testb
das
mov
mov
out
scas
fs
mov
ljmp
push
das
test
in
push
pop
and
daa
lret
notb
mov
pushf
jg
test
mov
mov
pop
jae
xlat
rol
rcl
cwtl
mov
jo
mov
push
fwait
sarb
std
jp
idivl
aaa
lds
fisttpl
xor
dec
hlt
adc
stos
inc
lods
xchg
pop
imul
fbstp
adc
xor
rol
push
dec
lret
in
dec
movsl
aaa
mov
imul
dec
into
dec
xchg
das
inc
ret
xor
ljmp
push
aad
dec
loope
xchg
outsl
pusha
xchg
inc
xor
loope
daa
mulb
mov
pop
pop
test
cmp
ds
inc
data16
sub
in
ljmp
iret
out
aam
sub
sub
pop
mov
call
je
sbb
out
dec
sti
push
ljmp
mov
push
dec
pop
int3
arpl
addr16
inc
cld
inc
pop
jl
loop
pop
fdivrl
arpl
das
aad
inc
pop
rclb
jmp
inc
lods
fimuls
lcall
xchg
xchg
and
in
scas
add
int
cmc
fstps
xchg
push
inc
in
mov
data16
adc
sbb
jp
and
call
bound
jmp
adc
push
cmp
repz
sub
jecxz
test
pop
pushf
subb
jge
jb
or
popa
stos
test
test
and
adc
gs
inc
addb
mov
scas
dec
jecxz
loope
dec
popa
inc
adc
sub
cmc
inc
lea
cmp
push
out
push
fmull
stos
outsb
loopne
dec
mov
aaa
push
enter
add
add
push
movl
mov
push
push
popa
mov
insb
cmp
xchg
push
insb
jns
divl
cmp
push
push
stos
hlt
ja
mov
inc
xor
sub
mov
repnz
fdivl
xchg
mov
int3
inc
jo
bound
mov
adc
adc
aam
out
and
adc
push
fst
stc
ja
push
mov
cmc
enter
call
cmp
test
loope
out
mov
inc
les
loope
bound
xchg
fisttps
push
nop
fsubrs
dec
lret
outsl
inc
pop
push
or
and
mov
sbb
lods
jg
sbb
adc
bnd
mov
fs
xor
push
bound
push
mov
inc
testl
lcall
dec
out
push
bswap
or
out
push
ficomps
ret
mov
fwait
sbb
cs
sbb
mov
and
jo
stos
jle
leave
pop
inc
lahf
push
and
gs
movsb
push
jns
rorl
into
je
adc
push
sti
xchg
jno
sub
aam
sub
mov
mov
shrb
jp
push
cmp
outsb
or
pop
mov
jbe
cmp
insl
xchg
jnp
out
ljmp
add
mov
lret
push
test
adc
push
mov
mov
leave
mov
jae
mov
pop
ja
and
mov
mov
xchg
jno
insl
sbb
mov
xchg
push
push
lock
jge
movsl
cmp
mov
or
in
sbb
pop
sub
jns
sar
pop
push
xor
imul
dec
imul
addr16
ds
jno
inc
out
add
testb
negb
and
jne
into
sbb
div
mov
jno
int
insl
cmp
in
push
jne
shlb
xchg
push
std
mov
lea
aas
fneni(8087
xchg
cmp
pop
xchg
mov
inc
addr16
mov
push
out
je
fnsave
cli
and
pop
repz
mov
in
fcomip
call
sub
or
rorl
dec
jp
xchg
clc
jnp
jbe
das
stc
fstps
inc
movsl
or
fwait
dec
ret
insb
out
gs
xchg
fsubs
dec
notb
pop
fcomps
xor
imul
int
pop
and
mov
add
je
dec
in
pop
sbb
out
mov
lds
jmp
pop
pop
push
lods
push
pusha
dec
icebp
notl
fisttpl
push
hlt
imul
sbb
add
add
test
ss
ja
test
aam
pusha
in
push
fidivrl
repnz
xchg
and
test
js
cmc
sub
mov
xchg
pop
loope
sbb
mov
pop
sbb
mov
flds
mov
jo
mov
inc
jecxz
iret
jp
or
mov
sbb
cmp
hlt
mov
xor
daa
divl
mov
and
xchg
sahf
add
pop
dec
xchg
faddp
cs
mov
mov
and
xchg
imul
and
movsl
and
mov
jne
test
adc
and
mov
and
cltd
and
add
cltd
add
add
cltd
gs
cltd
push
add
cltd
inc
add
cltd
xchg
add
cltd
addl
cltd
loope
add
inc
add
sahf
mov
jmp
jne
std
ret
ljmp
add
adc
sbb
pop
mov
push
pop
mov
push
pop
lock
or
sub
sbb
push
das
dec
stos
movsb
add
dec
rep
jbe
fisubs
dec
sub
movsb
lea
out
jno
ret
dec
pop
movsb
int
inc
cmpsl
sub
movsb
rcrl
cmp
rcll
xor
mov
insb
ror
fcoml
inc
mov
or
shlb
iret
pop
sub
sti
pop
sbb
in
jbe
mov
pop
jle
loope
push
dec
out
push
std
out
push
xlat
out
cmp
cmc
jns
xchg
cmp
xchg
and
imul
jbe
pop
lods
pop
push
jecxz
jb
mov
push
mov
push
pop
std
das
inc
fwait
lods
add
lods
dec
inc
aad
mov
add
stos
pop
dec
cmc
gs
mov
push
cmpsl
xor
push
ljmp
in
loop
stc
lods
int3
imul
int3
jmp
cmp
fcoml
mov
imul
and
mov
xchg
mov
push
cltd
lods
add
cltd
lret
mov
lock
ljmp
ljmp
mov
lods
pusha
add
call
sub
adc
jmp
addr16
mov
sub
mov
sub
cltd
data16
cltd
dec
add
cwtl
cli
sub
add
flds
into
sbb
xchg
sbb
repnz
fsubs
pop
sti
out
push
xchg
out
cmp
out
fnstcw
pushf
add
cmpsl
and
lcall
jbe
fwait
ljmp
call
fiaddl
lods
into
inc
push
lods
lds
lods
xor
mov
lods
pop
inc
lea
dec
jnp
mov
add
into
stos
mov
inc
jo
rolb
mov
jmp
popf
adc
clc
fcoml
mov
clc
adc
loop
cwtl
add
jmp
inc
pop
and
and
test
sbb
imulb
mov
pop
movl
in
mov
sqrtps
andl
lods
repz
out
push
inc
out
cmp
aaa
jns
xchg
or
xchg
jbe
fbstp
lcall
int
das
ljmp
sbb
cwtl
ja
ljmp
mov
ljmp
jmp
ljmp
inc
inc
lods
roll
xchg
xor
negl
adc
lret
sub
clc
lock
insl
nop
lock
lock
insl
pop
lock
insl
inc
lock
insl
addr16
insl
or
lock
lock
fldl
sub
mov
sub
inc
xchg
sub
insl
mov
sub
dec
mov
xor
movsb
add
cmp
add
loope
je
icebp
clc
fs
sti
push
movsb
andl
and
cmc
pop
add
mov
int3
gs
test
push
push
mov
inc
push
movsl
int3
mov
push
mull
mov
or
mov
or
and
mov
out
out
ds
ljmp
xchg
out
push
add
xchg
dec
sbb
test
jno
or
loopne
outsb
icebp
mov
daa
push
adc
jae
daa
mov
lock
add
sbb
decb
imul
push
jnp
fimuls
dec
out
push
pop
out
push
stos
out
push
mov
out
sbb
lods
outsb
inc
sti
lods
pop
xor
lods
sbb
fistl
daa
mov
and
push
out
ja
xchg
int3
addr16
xchg
push
jp
push
push
pop
out
push
stos
out
push
mov
out
push
fwait
out
push
jmp
outsb
push
sti
out
xor
imul
push
scas
movsb
cmp
or
sbb
push
aad
out
push
inc
lods
inc
push
xchg
adc
clc
push
sti
clc
bound
ret
clc
pop
pop
lret
and
push
das
xlat
leave
push
push
pop
jns
xchg
cmpb
cli
popa
sub
js
outsl
add
cltd
mov
add
lcall
dec
push
movsb
xchg
dec
jbe
jecxz
sbb
stos
fbld
add
inc
mov
das
inc
scas
stos
add
stos
imul
jae
xor
jnp
loop
inc
dec
fidivrl
sbb
mov
adc
xchg
clc
or
fwait
clc
add
jecxz
data16
icebp
mov
adc
clc
scas
adc
clc
cmpsb
adc
cli
sahf
mov
clc
out
adc
loop
inc
clc
ficoml
dec
clc
rclb
push
clc
lret
clc
adc
clc
push
adc
clc
jbe
out
clc
outsb
adc
icebp
mov
adc
clc
stos
adc
clc
mov
adc
clc
adcb
clc
ficoml
dec
clc
rclb
push
clc
lret
clc
ret
clc
cmp
mov
or
lahf
clc
jle
out
jbe
out
clc
outsb
adc
clc
data16
dec
pop
cmp
lret
pop
das
mov
pop
pop
repz
pop
mov
pop
jae
mov
pop
inc
cmpsl
pop
dec
pop
pop
mov
push
pop
mov
sbb
adc
or
movl
pop
ret
in
xchg
add
cltd
adc
cltd
sbb
out
insl
sbb
dec
sbb
scas
ja
ljmp
mov
ljmp
sti
ljmp
insl
sbb
mov
nop
sub
aas
sbb
es
jmp
jecxz
push
dec
fwait
pop
jg
xchg
pop
addr16
mov
mov
movl
xchg
ja
fwait
outsl
pop
test
jns
or
adc
fistl
mov
or
cltd
jg
xchg
lock
lock
push
insl
stos
lock
xchg
push
decb
push
push
push
mov
daa
and
fwait
ret
xorb
xlat
and
mov
and
mov
andl
mov
mov
inc
mov
testl
xchg
lods
jp
jmp
jb
rep
push
fcmovnu
add
xor
stos
adc
clc
mov
enter
call
mov
sub
mov
pop
sub
push
and
out
xchg
stc
fsubs
lock
jbe,pn
lcall
mov
movl
pop
inc
stos
pop
dec
mov
insl
packsswb
movsb
add
cmp
lret
xchg
sbb
and
mov
test
push
lods
outsl
inc
enter
dec
loope
dec
ja
push
xor
adc
sbb
int3
mov
mov
sbb
lods
int3
push
xor
or
je
lea
pop
je
jmp
movsb
dec
dec
insl
mov
or
xchg
sarl
lahf
out
adc
lods
pop
and
call
lock
jno
insl
mov
cmp
fs
fildll
lods
dec
sub
shll
insl
cmp
ret
test
pop
sub
int
push
and
adc
xchg
in
scas
or
xchg
mov
xchg
adc
xor
mov
jbe
loope
inc
cmp
rcll
cmp
shrl
cmp
roll
cmp
lea
out
push
int3
out
push
fmulp
ds
pop
fstl
stos
add
adc
pop
lret
stos
pop
or
cmpl
sar
cmp
push
pop
cld
lea
movl
in
xor
loopne
cmpsl
add
sti
mov
pop
push
cmpsl
int3
dec
push
pop
int3
mov
popf
xchg
jge
lock
arpl
movsb
insl
dec
fdivrp
lret
sbb
jbe
push
lods
mov
inc
jge
flds
lods
sub
call
jmp
xchg
stos
bound
hlt
push
dec
sub
jnp
int3
aam
sub
lock
cli
jns
xchg
lods
mov
outsb
xchg
in
jns
xchg
fidivrs
xchg
sbb
xchg
adc
xchg
or
lock
jl
xchg
mov
iret
push
and
jnp
mov
pop
fcoml
lahf
sub
jnp
mov
jnp
loop
in
fidivl
mov
rcrb
adc
pop
pop
call
xor
cld
mul
mov
adc
cli
sahf
movsl
mov
movsb
std
lods
sbb
inc
jnp
loop
inc
dec
xchg
stos
xchg
pop
and
scas
or
scas
adc
movsb
lahf
dec
jp
cmp
xchg
mov
jg
test
add
lcall
push
adc
cs
int
pop
stc
xor
sbb
pop
push
nop
out
push
jmp
insl
push
out
push
into
stc
dec
or
cltd
adc
xchg
xor
js
fdivrs
movsl
lock
push
lock
push
dec
and
mov
sub
mov
into
cli
sub
inc
out
sbb
inc
es
mov
inc
push
stos
popl
mov
daa
das
cld
lock
jae
daa
adc
and
mov
sbb
and
mov
sub
xchg
add
lcall
xchg
shlb
test
inc
movsb
cmpl
clc
sub
mov
clc
or
cltd
clc
jl
jmp
cli
pop
movsb
add
fldl
sub
xchg
mov
or
mov
mov
movsb
push
dec
les
pop
int3
inc
subl
je
icebp
xchg
xor
mov
sbb
lock
in
idivl
cmpsl
sbb
lahf
or
push
jmp
mov
push
mov
sbb
mov
push
or
dec
mov
leave
xchg
minps
rol
cmp
mov
clc
xor
out
aas
rclb
or
xchg
xor
pop
xchg
ja
ljmp
pop
sub
mov
sub
push
add
lret
fcoml
inc
adc
mov
pushf
xchg
mov
dec
test
clc
add
push
sbb
out
inc
and
pop
les
push
cmp
lods
xor
mov
movsb
cld
dec
push
in
std
push
mov
xor
xchg
cmp
shl
cmp
push
push
mov
sub
insb
loopne
imul
lahf
jle
stos
mov
imul
or
cmp
cmovg
mov
pop
aas
push
mov
xchg
mov
idivb
and
int3
dec
inc
inc
test
add
mov
inc
xchg
jg
rcrl
sub
mov
movl
gs
je
ljmp
shr
cmp
sbb
test
stos
orb
pop
and
cmp
sub
lret
movsb
push
sub
cld
xchg
stc
mov
adc
movsl
mov
push
mov
mov
rcrl
xor
cmpsl
outsb
stc
jns
mov
leave
pushf
stos
or
out
out
test
mov
mov
int3
in
xor
int
fstpt
iret
out
jbe
and
popl
movaps
je
fimuls
lret
std
pop
mov
mov
push
int3
movsl
push
inc
int3
xchg
push
outsl
int3
mov
test
jmp
dec
fwait
ret
repz
mov
sub
lret
inc
push
dec
pop
sbb
int3
adc
mov
in
push
jle
ds
mov
adc
pop
and
sti
sbb
xor
pop
ds
mov
cmpsl
fwait
test
test
mov
ss
ljmp
push
sub
in
movsb
ds
fcompl
push
jbe
sub
lock
jmp
notb
inc
ja
lods
roll
cli
sbb
cmp
in
dec
cmpsl
xor
sti
xchg
xchg
jmp
roll
rorl
cli
mov
aas
sub
clc
sti
mov
iret
pop
push
cs
fwait
out
dec
jp
mov
outsb
clc
aas
iret
aaa
lahf
hlt
clc
and
sbb
and
lcall
roll
mov
inc
inc
adc
jno
dec
xchg
mov
lock
xchg
data16
jecxz
add
lds
out
jecxz
mov
dec
inc
adc
pushl
lods
je
add
fistpl
out
adc
dec
mov
scas
jge
pop
dec
ret
lods
cmp
lods
xor
cs
dec
jns
push
sbb
cmpsl
and
imull
pop
push
and
xor
ret
pop
jne
sub
lcall
movsl
mov
adc
fdivrl
sbb
sub
cmp
pop
stos
jecxz
push
mov
sub
adc
jnp
sbb
ljmp
pop
push
fcoml
mov
dec
test
dec
inc
iret
test
addl
mov
das
inc
dec
popa
push
jmp
sqrtps
int3
ja
fwait
mov
outsl
xchg
out
in
ja
ljmp
mov
scas
xchg
inc
and
pop
idivl
mov
push
shl
mov
das
iret
shlb
es
push
push
ds
push
push
cli
xchg
push
mov
orl
or
fistpll
ljmp
push
xchg
mov
adc
mov
mov
adc
pop
lods
lahf
xchg
mov
xor
or
add
push
ja
or
jle
movl
cmp
xchg
sarl
mov
sbb
lea
sub
lahf
add
sub
adc
sub
or
shrl
ja
mov
mov
pop
push
push
out
push
lods
cli
jl
mov
inc
aam
orl
lds
lock
insl
cmp
insl
and
ds
sub
push
ja
lods
push
xorl
jp
fwait
mov
adc
ret
scas
push
dec
inc
lret
aas
push
ficomps
lea
push
in
xchg
pop
inc
xor
mov
mov
jmp
das
out
adc
fs
std
sub
fnstenv
cmp
js
shrl
insl
cmp
shll
data16
sub
jg
mov
pop
ds
xchg
movsb
sbb
push
ss
sbbb
xchg
sbb
xchg
adc
push
fisttpll
adc
cmp
fistpll
nop
ljmp
rcr
cmp
mov
fisttps
add
and
xchg
push
push
push
stc
and
mov
pandn
or
daa
stc
decb
insl
pop
mov
repz
xor
out
adc
push
cmp
test
xchg
push
jno
jecxz
cmp
sub
mov
ret
int
mov
ds
rol
rolb
push
push
out
adc
lcall
dec
das
jns
push
ja
sub
fs
pop
ss
mov
iret
mov
pop
xor
rcrl
cmp
rorl
icebp
jb
clc
sti
mov
adc
les
rol
pusha
insl
xor
push
pop
imul
movsl
sub
inc
imull
inc
dec
lret
mov
repz
les
imul
xlat
add
and
clc
jns
xchg
loope
pop
jg
lods
jb
mov
movl
int3
loope
movsb
fisubrs
mov
push
or
aad
pop
push
int3
adc
int3
jl
mov
cmp
mov
adc
push
push
cwtl
add
fldl
out
or
es
mov
lods
out
xchg
les
sub
cli
aam
mov
insb
or
cmp
sarb
movsl
adc
mov
xor
std
xor
xchg
sbb
stos
fwait
inc
add
fildll
or
jne
cmp
clc
cs
pop
in
rorl
dec
and
jmp
jle
push
xrelease
xor
or
lods
fldl
lods
or
sub
jmp
mov
fisttps
out
push
jge
lds
adc
clc
dec
popa
out
xchg
test
dec
mov
push
repnz
jbe
sbb
ja
or
mov
movsl
pop
xchg
jg
and
push
ljmp
fstpl
cltd
clc
push
or
int
call
sub
loop
xor
mov
flds
pop
pop
ret
mov
xchg
mov
push
sti
dec
jns
xchg
icebp
add
fisttps
push
lahf
int3
jno
mov
dec
push
jle
cltd
push
data16
mov
adc
xchg
push
in
jl
inc
and
inc
push
ret
psrlw
push
ss
xlat
xchg
xchg
xchg
or
in
iret
shl
push
push
fsubrl
pop
dec
xchg
outsl
jno
cmc
cmp
lock
addr16
scas
cmc
cmc
lret
jge
mov
testl
push
pop
hlt
lods
sub
adcl
and
sbb
and
movups
clc
bound
vsqrtss
mov
jb
cmpsl
loopne
lods
cmp
clc
lahf
sbb
stos
stos
or
and
mov
andb
xor
xor
pop
js
inc
sti
pop
lock
movsb
scas
dec
sub
dec
mov
rcll
cmp
cmp
jo
jecxz
mov
push
icebp
out
push
aad
mov
cmpsb
dec
loope
bnd
ficoms
cltd
add
lock
jno
jo
sbb
dec
dec
add
mov
std
icebp
pop
or
adc
mov
fwait
hlt
ret
fldenv
jmp
jns
xchg
sbb
jbe
enter
xchg
inc
xchg
push
mov
sbb
hlt
xchg
xchg
push
cmc
out
push
fst
cmpsb
or
push
popf
push
sbb
mov
movsl
aad
jne
sti
lock
std
iret
jle
popf
rclb
fildl
lock
xor
mov
out
std
lods
faddl
xchg
ss
in
jno
divl
loopne
adc
std
aas
out
adc
addr16
aad
aas
addr16
pushf
divl
out
iret
pop
movsl
call
lods
out
push
sbb
lock
jno
lock
imul
sub
inc
es
rolb
mov
jmp
ffreep
clc
stc
jbe
adc
xor
lds
and
xchg
add
xchg
inc
jl
int3
jns
pop
adc
xlat
ss
add
cmp
push
xor
push
xor
test
movsl
insb
cld
inc
stos
test
ds
jmp
negl
xchg
lods
or
fldl
mul
sub
cmp
outsb
inc
fsubrs
imul
andl
arpl
ss
xor
int
or
jmp
dec
cld
jle
mov
push
bound
xor
lret
cli
and
ret
adc
lods
mov
xchg
or
xchg
pop
cvtpi2ps
subb
pop
iret
f2xm1
dec
xor
and
and
mov
sub
lods
shll
dec
mov
sbb
mov
mov
mov
stos
sub
fldcw
jle
sahf
mov
jmp
popl
nop
mov
mov
and
movsb
aad
sub
lcall
and
lahf
and
push
lods
xor
push
and
sub
xchg
imul
pop
push
stos
mov
sbb
int3
or
int3
mov
push
in
mov
aaa
cld
fidivrs
or
adc
adc
aam
sbb
int3
jns
xchg
pop
push
scas
cmc
xchg
sub
dec
dec
lods
inc
jge
pop
aam
jg
ljmp
sub
xor
dec
test
imul
xchg
push
jae
test
scas
or
sahf
ds
dec
mov
mov
push
pop
mov
imul
stos
ret
push
insb
mov
movsb
mov
push
xchg
mov
repz
popf
imul
roll
add
out
pop
shl
scas
mov
adc
xlat
cmp
idivb
outsl
cmp
lcall
clc
cmp
movsl
aas
add
movl
adc
sahf
mov
mov
or
nop
in
push
jecxz
and
int3
jns
mov
cmp
movsl
fcompl
insb
and
insl
mov
jg
pop
mov
jge
mov
adc
lcall
cmp
mov
pop
sti
lods
or
mov
subb
sub
cmp
mov
sub
insl
loope
jl
sti
or
push
sarl
sbb
sub
mov
add
xchg
sbb
jg
and
jle
push
push
inc
ljmp
cmp
shl
loope
pop
fisttpl
rorb
push
ss
test
pop
cmp
adc
cmp
movsl
jg
rol
sub
mov
pop
inc
mov
je
add
push
mov
push
jmp
lods
xchg
push
loopne
xlat
mov
xchg
pop
aaa
pop
adc
sahf
insb
push
sbb
je
xchg
lret
push
ret
jle
jge
jge
cmp
icebp
outsl
mov
jae
mov
in
lods
push
add
pop
ja
pop
fmull
adc
mov
int
push
pop
dec
dec
adc
cltd
and
mov
loope
jno
imul
addr16
jae
sbb
jb
adc
sbb
ja
mov
adc
fisttpl
push
push
call
enter
sahf
and
jg
in
fwait
mov
jnp
cmc
iret
shll
inc
dec
stos
ficomps
add
clc
adc
notb
sub
add
fwait
ss
fwait
mov
roll
out
adc
pop
in
sub
icebp
insl
xchg
dec
dec
sbb
arpl
jge
testl
pushf
sbb
pop
andl
loopne
inc
mov
sbb
inc
sub
or
inc
push
jl
nop
jge
or
cmp
in
jnp
adc
jmp
mov
pop
push
xchg
mov
lock
sbb
loop
push
mov
in
jmp
lods
dec
push
test
cmc
and
pop
mov
cmpsl
enter
mov
std
shrl
mov
mov
add
jecxz
push
mov
jnp
nop
add
inc
ljmp
fcomps
mov
add
lcall
dec
push
fistl
inc
pop
add
mov
sub
stos
das
ret
or
push
repz
and
pop
cmpsl
test
addr16
lods
arpl
mov
add
and
cmpsl
adc
scas
das
nop
mov
mov
jmp
or
fwait
dec
add
mov
pusha
jne
adc
out
or
xchg
inc
jns
lea
jl
sahf
out
ljmp
adc
negl
push
jns
xor
push
fwait
insl
pop
outsl
dec
out
movsl
ja
lods
imul
lret
dec
pop
and
sbb
dec
mov
lret
sbb
jg
xor
stos
subb
pushf
test
sbbl
push
inc
mov
xor
imul
and
xchg
mov
int3
xlat
push
cmp
dec
or
shlb
dec
int3
sub
shrl
pop
jmp
sbbl
mov
dec
pusha
mov
push
pop
cli
ds
push
push
add
bound
mov
or
xlat
fnstenv
add
cmp
add
stos
pop
es
fstl
pop
mov
arpl
mov
push
xor
jo
or
and
cmpsb
imul
push
cmp
into
lret
mov
push
into
xchg
iret
push
inc
repnz
add
xor
dec
out
add
xchg
jmp
mov
sbb
push
loope
xorb
xlat
iret
stos
xor
and
add
xlat
jne
std
xlat
outsl
aas
stc
sub
mov
xor
jl
cwtl
xchg
xchg
xchg
jns
aas
icebp
xchg
stos
aas
in
xlat
inc
aas
lret
aas
int3
xlat
inc
push
stos
dec
mov
pop
xor
fstpl
fcomp
xor
sarb
mov
subl
fmull
outsb
shrl
je
mov
xor
jae
dec
iret
loop
and
and
or
mov
daa
or
repnz
mov
fstps
push
xchg
dec
mov
xchg
lret
sub
shlb
nop
adc
jle
shll
daa
xor
push
out
scas
lret
cmp
ss
gs
fdivrl
mov
je
out
cmc
mov
jnp
cmpsl
mov
out
cmpsb
ja
jns
fs
aad
pop
lahf
jbe
add
lods
xchg
fisubrs
pop
add
sub
ss
xchg
popa
push
mov
test
dec
ret
cmp
dec
cmpsb
je
mov
dec
mov
sbb
xchg
inc
mov
cs
scas
inc
stos
mov
inc
dec
mov
outsl
popf
jecxz
push
in
and
adcl
mov
xlat
cmp
dec
dec
lea
add
or
mov
or
fwait
cmc
xchg
negl
add
xchg
daa
pop
push
leave
and
jl
mov
sub
fildll
xor
idivb
push
fnstsw
mov
inc
add
mov
fildl
arpl
mov
fists
sbbb
sub
outsl
mov
push
scas
cli
xor
push
bswap
sarb
mov
jl
mov
add
test
lahf
fwait
sti
cmpsb
xchg
jbe
cs
frstor
lods
sbb
xchg
mov
mov
or
iret
arpl
xchg
xchg
mov
or
xor
xchg
mov
pop
fldcw
mov
pop
inc
push
mov
fs
mov
das
mov
pusha
dec
fsts
inc
sub
and
jbe
xchg
adc
xchg
adc
out
stc
imul
nop
loop
xchg
add
inc
jae
sub
dec
loopne
mov
lret
mov
xchg
fnstenv
stos
cs
outsb
shr
push
push
lahf
jnp
dec
movl
test
mov
stos
stos
aam
divl
negb
repnz
jbe
leave
dec
xor
aad
pop
sub
sub
cs
mov
jle
ret
cltd
pop
aas
dec
xchg
hlt
add
mov
sahf
xor
scas
sbb
mov
sub
ret
fwait
sub
jno
das
movntps
popa
lahf
mov
test
mov
outsl
icebp
insl
int
aas
mov
das
lret
mov
cmpsb
adc
leave
sbb
cli
test
mov
arpl
mov
sub
cmp
nop
or
mov
lret
adc
lcall
mov
gs
cmpsb
aas
sbb
test
xor
jmp
arpl
push
xor
je
jg
into
push
call
es
sbb
xchg
and
imul
test
in
or
push
sub
mov
addr16
dec
lret
lret
cmpsb
lds
orl
pop
in
inc
into
jno
jle
jae
cmpsl
cwtl
inc
xlat
xchg
jnp
movsl
adc
push
jno
sub
rcll
cmpsb
imul
fldenv
add
mov
push
mov
dec
jmp
test
push
and
xchg
mov
sti
cld
xor
inc
test
call
adc
sbb
bound
xor
int
insb
mov
cwtl
loopne
xor
mov
clc
loope
addr16
bound
shrb
and
in
arpl
rcrl
pop
cmpsb
xor
mov
test
jp
adc
xchg
xchg
ret
inc
sbb
xchg
sbb
xor
mov
jnp
fnstsw
scas
adc
xor
dec
out
lahf
aam
lcall
mov
in
push
int
cmpsl
in
sti
cmp
jecxz
jp
xchg
testb
add
push
loop
stc
clc
jmp
sbb
jg
mov
push
push
inc
idivl
fsubrl
loope
mov
lret
in
xchg
push
mov
xor
fisubl
out
lahf
stos
adc
cmpsl
in
xchg
rorb
pusha
popf
mov
xor
xchg
pop
aam
or
js
mov
insb
mov
lea
or
dec
sub
loope
testl
jb
je
push
inc
sub
out
jnp
rcr
pop
nop
xchg
jb
leave
cs
rorl
daa
das
aad
push
mov
stos
in
dec
js
xchg
sub
add
add
add
pop
sub
sub
or
movsbl
shr
test
bt
bsf
and
cmp
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
inc
bsf
mov
test
bswap
xor
shr
cmp
bt
jmp
lcall
ret
or
mov
sub
shr
bsf
add
xor
xor
mov
jmp
lcall
xor
add
add
pop
xor
xchg
push
mov
test
movzwl
mov
or
xor
btr
not
call
lcall
incl
ret
neg
sub
movsbl
adc
adc
inc
or
sub
add
jmp
lcall
cmp
xor
bts
test
add
inc
adc
add
shr
mov
mov
xchg
push
push
xchg
dec
add
add
call
shl
shr
bts
inc
dec
bsf
inc
not
mov
sub
add
mov
and
bsf
cmp
add
dec
cmp
xor
mov
shl
sub
xchg
mov
bsf
mov
and
and
sub
or
not
jmp
lcall
ret
or
sub
and
test
bsf
adc
shl
call
lcall
add
xorl
pop
xor
xchg
push
test
cmp
add
inc
cmp
sub
btc
movzbl
bt
jmp
lcall
stc
add
xchg
ret
neg
sub
btr
add
and
mov
test
xor
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
cmp
sub
neg
bsf
sub
cmp
bsf
bt
jmp
lcall
or
call
test
or
shr
test
adc
bt
add
bt
mov
add
mov
adc
or
adc
shl
test
or
bts
call
lcall
add
or
test
movzbl
bt
and
mov
and
shl
call
lcall
or
and
test
bt
xor
btc
xor
xor
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
sub
btc
cmp
btc
btc
sub
xor
cmp
call
lcall
mov
test
and
add
add
and
jmp
lcall
neg
inc
add
test
shr
btr
sub
not
bswap
btc
mov
xor
bswap
shr
mov
inc
test
test
movzbl
test
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
bt
movzwl
cmp
shr
shr
bts
btr
mov
push
btr
adc
inc
btc
adc
not
sub
adc
add
test
adc
not
bsf
inc
cmp
sub
mov
or
add
mov
shl
and
cmp
cmp
sub
btr
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
or
test
xor
adc
add
shl
add
call
lcall
add
cmp
neg
mov
inc
xor
test
shr
mov
mov
add
movzbl
test
add
mov
shr
movzwl
shr
sub
movsbl
sub
mov
cmp
cmp
bsf
test
add
xor
btc
call
lcall
mov
test
test
bsf
bsf
mov
bt
shl
btr
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
and
bt
btc
neg
xor
dec
or
bt
not
shr
shl
mov
cmp
add
xor
sub
bt
jmp
lcall
add
btc
sub
sub
adc
dec
mov
add
xor
sub
shl
xor
add
shr
bsf
call
lcall
add
btc
adc
bsf
sub
not
add
cmp
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
or
movswl
cmp
cmp
cmp
xor
neg
sub
mov
mov
cmp
shr
bt
bsf
and
and
mov
movswl
not
bsf
test
bts
xor
adc
xor
mov
add
xor
cmp
or
sub
bt
adc
dec
lea
inc
cmp
jne
neg
and
shr
bsf
btc
cmp
add
btc
inc
add
shl
adc
inc
shl
xor
xor
shr
call
lcall
je
neg
cmp
btr
neg
inc
adc
mov
sub
btc
sub
mov
cmp
neg
or
or
and
and
xor
cmp
call
lcall
mov
dec
bsf
xor
mov
sub
dec
and
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
xor
xor
and
bsf
inc
shr
sub
call
lcall
shr
bt
mov
btc
sub
movswl
test
add
add
movzbl
cmp
adc
and
btc
test
jmp
lcall
inc
mov
push
out
stos
into
not
bsf
shr
adc
mov
add
btc
sub
btc
btr
test
adc
mov
call
lcall
add
bsf
test
add
neg
bswap
and
mov
and
bswap
or
push
pop
inc
add
loop
btc
neg
test
btr
mov
bt
or
push
decl
mov
add
adc
not
xor
bt
add
xor
adc
add
test
call
lcall
push
fimull
mov
jmp
or
sub
and
mov
push
shll
or
shr
bt
mov
bt
mov
adc
mov
push
bswap
shr
neg
test
or
bts
adc
movzwl
sub
mov
mov
shl
bts
movzbl
test
and
mov
shr
push
push
pop
add
add
call
add
shr
xor
xor
cmp
test
xchg
adc
bts
neg
dec
neg
mov
bsf
or
mov
mov
mov
mov
cmp
test
not
cmp
and
add
dec
call
lcall
mov
mov
ljmp
insl
test
btc
test
or
add
bts
or
bsf
bsf
cmp
xor
dec
bt
cmp
call
lcall
loope
shr
sub
add
and
test
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
neg
cmp
bsf
test
bsf
bsf
or
bsf
bsf
inc
adc
cmp
cmp
sub
add
call
lcall
cmp
insw
addr16
pop
btr
xor
or
not
mov
movzbl
dec
add
and
cmp
shl
test
shr
cmp
je
btc
and
shl
test
xor
shr
adc
add
inc
xor
inc
mov
bts
cmp
adc
shl
test
add
call
lcall
xor
cmp
sub
or
dec
add
or
sub
or
adc
xor
test
movzbl
add
xor
and
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
movswl
mov
mov
sub
test
and
add
neg
push
decl
mov
add
xor
mov
shl
bts
bswap
btr
or
shl
push
decl
mov
add
test
or
movzbl
and
movswl
mov
btc
add
mov
and
bts
and
cmp
test
dec
shl
add
jmp
xor
bsf
shl
and
add
bt
cmp
mov
adc
cmp
and
inc
or
and
btr
mov
add
btr
btc
btc
mov
shl
test
movswl
add
test
add
shl
adc
or
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
adc
mov
btr
test
btc
and
sub
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
btr
mov
adc
not
sub
adc
and
push
push
cmp
bt
add
or
add
sub
inc
push
sub
mov
movzwl
shl
xor
xor
add
xor
inc
mov
mov
test
or
bts
neg
movswl
xor
add
call
lcall
js
mov
std
sub
and
and
mov
xor
lea
or
movswl
and
dec
shl
cmp
add
movzbl
mov
mov
cmp
btc
and
cmp
shr
dec
and
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
mov
test
btc
test
adc
btr
cmp
shl
btc
sub
mov
mov
cmp
and
btr
xor
shr
sub
dec
push
sub
sub
btc
mov
bts
mov
bsf
cmp
push
cmp
movzbl
btr
bts
test
and
sub
not
push
or
or
adc
add
shl
shr
bswap
call
lcall
mov
test
shl
test
movzbl
shr
sub
not
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
xor
mov
adc
or
dec
add
adc
inc
call
lcall
sub
test
cmp
and
and
sub
adc
bt
add
bswap
add
bswap
or
mov
and
test
add
btr
call
lcall
mov
neg
btc
bt
xor
mov
adc
adc
xor
neg
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
add
add
mov
add
or
ja
cmp
pop
mov
lds
popf
push
jmp
and
cmp
mov
add
xchg
fs
inc
ret
or
imul
or
or
add
sub
mov
je
pushf
movsl
repnz
xchg
cwtl
sub
addr16
add
outsb
sar
adc
in
mov
test
xor
nop
inc
add
scas
incl
out
lret
test
adc
mov
out
ss
and
gs
mov
lods
adc
adc
add
add
cmpsl
adc
repnz
and
or
xchg
jmp
add
hlt
inc
dec
dec
test
pushf
pop
cmpsl
mov
adc
nop
and
jg
dec
add
add
push
or
out
rclb
xchg
rcll
shrb
or
lret
mov
add
push
loopne
add
out
mov
lods
or
das
or
push
movsl
sbb
or
xlat
adcb
in
and
jo
fmull
cmc
or
sbb
push
sub
add
cmp
gs
sbb
or
push
mov
jo
jmp
sahf
and
adc
call
add
mov
xor
dec
inc
push
dec
push
jo
inc
pop
inc
pop
aaa
cmp
pop
arpl
cmpsl
addr16
and
xor
inc
push
push
cmp
push
add
xor
loopne
inc
dec
jp
pop
push
dec
push
inc
push
outsl
cmp
push
mov
sbb
inc
dec
xor
fstpt
dec
aam
dec
dec
sbb
push
inc
jg
repnz
dec
inc
or
pop
fsubs
sub
cmc
and
inc
pop
or
test
rclb
inc
dec
inc
repnz
pop
dec
dec
push
cmp
push
cmpsl
xorl
ds
enter
inc
sub
push
inc
aad
cmp
pop
mov
push
pop
sbb
mov
cmpl
push
inc
lret
inc
cmpsl
aas
or
push
inc
push
xchg
add
hlt
ss
notb
inc
ret
jle
add
cs
add
inc
insb
outsl
jae
cmp
mov
addr16
popa
outsb
into
popf
cld
sahf
jae
cmp
jns
jne
cmp
cli
js
sbb
imul
bound
sbb
or
push
inc
scas
cli
push
and
sub
loope
add
or
cld
and
push
imul
movsb
push
leave
add
push
idivl
jmp
cmp
call
and
jmp
push
cs
adc
imul
sub
mov
or
cwtl
aam
outsb
repnz
push
outsb
add
jb
and
and
jo
push
outsl
xor
jbe
jbe
test
inc
xchg
jmp
movsb
enter
pushw
push
decl
jne
adc
xchg
inc
cs
test
xchg
add
add
pop
mov
push
push
add
push
push
je
or
add
inc
push
call
sbb
add
pusha
adc
insl
mov
xlat
mov
popa
addr16
mov
pop
outsl
add
and
xchg
je
or
loope
negl
icebp
add
or
fs
repz
pop
je
daa
int
iret
out
vpabsw
pop
sub
push
js
mov
fs
xor
push
in
aad
push
dec
popa
jns
mov
xchg
jecxz
or
cmp
cs
add
pusha
pushf
sbbb
push
dec
inc
push
push
inc
push
inc
dec
pop
mov
xchg
dec
test
inc
daa
add
fadds
