jnp
aam
pop
out
adc
mov
mov
insl
ja
mov
xchg
sahf
adc
lret
add
jge
lds
in
adc
stos
or
mov
mov
sub
std
fldt
out
add
ret
into
mov
and
aad
xorb
sbbb
lret
push
mov
insb
and
xchg
pusha
test
mov
push
or
inc
test
push
in
loopne
nop
js
jl
and
jbe
mov
jl
popf
repnz
pop
stos
mov
pop
xorl
lods
jne
add
pop
imul
dec
testb
mov
sub
lret
sub
dec
imul
loopne
pop
push
incb
aas
cmpsl
xor
push
jbe
and
movsl
js
ficomps
stos
push
sbb
lea
jmp
in
push
mov
sarl
and
es
mov
push
loopne
popa
stc
sub
sti
repnz
jns
int3
sbb
fisttps
mov
inc
in
nop
loopne
test
out
pop
sbb
sbb
add
lock
int3
or
mov
push
scas
fadds
mov
ret
fwait
dec
or
sbb
jle
pusha
inc
arpl
inc
push
mov
pop
addr16
lods
stos
or
cli
out
lret
or
pusha
ja
fstpl
dec
test
mov
sbbl
mov
mov
mov
adc
mov
scas
or
mov
imul
jp
lock
sbb
es
and
mov
adc
mov
lcall
gs
gs
stos
ds
in
xchg
sbb
xchg
je
data16
sti
xor
iret
lret
stos
mov
es
push
adc
push
jae
sbb
div
add
aaa
and
loop
repnz
ss
out
push
cmp
movsl
lea
xchg
in
and
mov
or
ss
pusha
xor
adc
fs
mov
sub
lahf
es
mov
pop
test
mov
dec
push
call
pop
pushf
int3
rclb
imul
jl
lods
fnclex
adcb
xchg
xor
mov
jp
xchg
ret
hlt
out
movaps
adc
rep
loop
gs
lds
pop
cmpsb
mov
clc
aam
movl
xor
xor
subl
push
push
orb
xchg
xchg
enter
test
or
xchg
sbb
pop
fs
and
adc
jp
sbb
sub
jle
pusha
xchg
dec
inc
loope
pop
es
add
cmp
jbe
out
shl
clc
enter
add
inc
shll
lods
inc
pop
in
mov
jns
dec
jmp
ror
xor
jle
sarb
fistps
rcll
adc
mov
jne
inc
push
push
push
push
std
loope
out
mov
loopne
out
jb
test
pop
sbb
or
inc
pop
xor
and
jns
rolb
sbb
pop
xchg
mov
jne
iret
iret
xchg
fucomip
cs
pop
mov
out
adc
dec
frndint
jbe
mov
fldenv
mov
xchg
or
jbe
and
cmp
cmpl
xor
xor
int
loope
pop
cmp
aas
cwtl
and
mull
inc
xor
testb
mov
mov
out
cld
push
jle
lret
lods
jbe
xorb
xchg
das
mov
daa
int
fucomi
popa
into
in
xchg
lret
cmp
repz
loopne
sbb
xor
mov
jae
mov
pop
lret
aad
pop
pmulhuw
jnp
mov
lcall
inc
test
jecxz
fistl
jp
pop
icebp
nop
mov
mov
mov
outsl
arpl
add
ret
lahf
lahf
jg
xor
jmp
or
into
adcl
insl
fbstp
mov
add
jl
lods
cmp
lods
xlat
sbb
aam
lcall
and
aad
cmpsb
add
aam
add
outsl
jo
mov
jle
sarl
shrl
daa
push
push
jnp
pop
aas
cmp
and
push
movsl
int
loope
pop
xorl
xchg
inc
push
jne
inc
pop
mov
ret
mov
aas
dec
xchg
test
xor
pop
or
cmp
movsl
sbb
sub
ds
rclb
jno
mov
push
imul
imul
decb
dec
aas
in
or
les
gs
push
outsl
push
mov
mov
je
mov
cmc
sahf
into
dec
adc
fisttpl
int3
push
stos
into
mov
movsl
es
fmuls
shll
mov
outsb
ljmp
push
push
and
add
mov
das
xchg
jb
cmp
imul
sub
lock
xor
add
lock
test
dec
lahf
sub
sti
xchg
adc
loopne
shll
dec
lret
push
lcall
mov
rcl
data16
ret
xchg
bndldx
lret
ss
pop
mov
jbe
mov
mov
cmpsb
inc
push
xchg
and
add
xor
pop
jge
scas
pop
adc
jg
cmp
mov
mov
popf
bound
lock
test
jae
daa
sub
mov
nop
in
fisubrl
adc
jmp
or
or
ja
pop
jo
jl
sbb
js
popf
xchg
add
push
fildl
or
testl
mov
out
add
inc
outsb
mov
dec
push
in
pop
adc
test
andl
push
jp
mov
jmp
sub
ret
sti
push
sti
pop
mov
mov
mov
push
in
mov
mov
icebp
mov
or
jae
sub
pop
mov
loope
mov
mov
rcrl
inc
add
jecxz
jne
and
jmp
iret
xchg
pop
sub
sub
fsub
stos
sbb
dec
mov
addr16
negb
ud0
dec
sbb
arpl
xor
popa
sbb
stos
fistpl
popf
cmpsl
ret
pop
inc
push
repnz
out
xor
pop
fisttps
mov
mov
cmp
fsubrs
out
neg
jmp
mov
into
jnp
hlt
popa
sub
inc
test
xchg
push
mov
xchg
xor
fucomi
test
and
rolb
in
fistps
sbb
sub
push
cmpsl
out
add
xchg
mov
lret
jne
rorl
mov
loope
decl
fcmovnu
mov
test
sar
mov
sti
sahf
pop
data16
jg
cmc
dec
ficomps
pop
sub
adc
ret
aam
lods
mov
push
pop
clc
lods
cmp
mov
inc
xlat
sub
pop
push
push
fs
popa
mov
bound
stos
jg
jecxz
jo
pushf
aas
adc
sbb
jmp
xchg
mov
jmp
mov
inc
cld
or
push
je
lea
jp
sbb
mov
cmpsl
incb
cld
stos
sub
mov
pop
sbb
jmp
test
int3
loop
inc
jnp
pushf
pop
dec
or
bound
out
stc
fs
mov
outsl
adc
stc
ret
mov
sbb
sub
add
add
jp
ret
gs
sub
jbe
sarl
test
cs
mov
mov
outsb
cld
cltd
push
xchg
movsb
mov
push
push
dec
add
push
inc
xor
loopne
data16
mov
fcmovb
lahf
adc
shlb
xor
jns
xchg
roll
icebp
shrb
daa
sahf
fidivs
push
movsb
push
es
xchg
fcmovnbe
out
jl
mov
xchg
xor
sarb
arpl
pop
test
ficoms
inc
cli
dec
test
cmp
pop
jecxz
xor
mov
testl
stos
popf
cmp
and
sub
repz
jge
sbb
mov
mov
lock
call
into
in
pop
into
xchg
push
mov
cld
xor
iret
rol
rorl
repz
pop
sbb
aas
mov
iret
inc
adc
movsl
sbb
fiadds
push
data16
adc
inc
dec
and
dec
rcl
movb
xor
xchg
dec
adc
sbb
mov
nop
es
shlb
fadd
push
sbb
mov
inc
inc
mov
xchg
pavgb
rorl
mov
shlb
lds
sub
xchg
push
js
xchg
mov
addr16
cmc
repz
push
adc
jge
xchg
outsb
sub
push
adc
mov
and
dec
dec
pop
cs
cwtl
cli
lahf
xor
xchg
and
jbe
fdivp
stos
xlat
inc
add
cmp
in
mov
lds
and
dec
icebp
cltd
ds
cmpsb
iret
xor
xchg
nop
push
pop
add
pop
xor
stos
xlat
mov
pop
pushf
mov
test
mov
insl
cwtl
adc
enter
lcall
outsb
in
pushf
ss
sbb
sbb
sub
pop
inc
pop
ret
cmpsb
hlt
xchg
or
pop
js
inc
int3
aaa
pop
ds
shlb
dec
push
leave
fld
lods
adcb
mov
xor
push
cs
pop
pop
out
mov
mov
repnz
cmc
imul
jg
sub
into
movsl
sbb
mov
jne
pop
mov
enter
flds
lret
out
out
es
or
lcall
fwait
lret
dec
jle
mov
shlb
inc
adc
out
cltd
scas
mov
sbb
out
mov
xor
rclb
sahf
pop
addb
test
xchg
and
sarb
cmovne
xor
stos
mov
cmp
mov
mov
cs
test
pop
fcomi
mov
fcmovnu
mov
rol
push
mov
cmp
dec
cltd
cmpsb
jno
push
fcmovnu
dec
or
or
sbbl
test
lahf
and
stos
loope
imul
sub
push
lcall
pop
shrl
bound
stos
dec
cmp
ja
push
push
and
insb
dec
sbb
mov
push
mov
sub
xlat
arpl
xchg
push
out
ss
ss
add
xlat
xor
jae
push
pop
and
fisubrs
or
sti
inc
push
jb
aaa
jmp
test
es
lret
sbb
xor
arpl
pushf
inc
ret
dec
sbb
pause
lret
shll
invd
jle
cs
loopne
int
and
or
and
adc
sub
std
fwait
mov
adcb
cmpl
add
add
sub
jg
cmp
xor
stc
data16
in
and
ja
mov
cmp
loopne
repz
addr16
lods
rclb
and
jecxz
mov
outsl
mov
ss
cwtl
test
lds
sbb
jo
pop
jns
negl
popa
cmp
lret
test
cmc
ret
inc
xchg
inc
cmp
test
dec
pop
inc
sahf
sbb
pop
aaa
xchg
mov
into
movsb
and
decb
push
fisttps
in
in
cmp
dec
sub
into
shll
or
add
loop
std
bnd
sbb
sbbb
xchg
adc
add
push
pop
iret
arpl
jge
inc
sbb
repz
mov
mov
pop
mov
inc
push
int
and
pop
mov
cmp
repz
xchg
addb
inc
sbb
add
push
pop
jno
mov
push
out
jns
ret
out
mov
sbb
adc
iret
and
dec
rolb
and
sub
into
mov
pop
or
add
cmpl
inc
out
ficomps
cmp
inc
jmp
cltd
inc
dec
int
fcompl
fildl
shll
xchg
jp
mov
jns
mov
pop
aad
fdivrs
inc
das
mov
mov
add
adc
aaa
aam
push
jne
jne
out
add
push
xor
pop
imul
mov
add
jno
and
fisubrs
das
gs
cli
leave
jle
push
inc
pop
sbb
jb
or
cmpsb
jo
mov
cwtl
mov
sub
sahf
repnz
jne
mov
roll
xchg
mov
jg
leave
pop
std
and
cld
mov
leave
xchg
fisttpl
xabort
mov
jne
lret
mov
dec
jno
cld
push
mov
idivl
push
push
xor
lret
cmp
push
repnz
stos
rol
je
and
xchg
hlt
dec
mov
add
mov
lret
sbb
and
daa
inc
jbe
sbb
ss
xor
enter
push
test
loop
mov
hlt
jmp
sub
lods
decb
cltd
sbb
add
lea
jle
ja
cmc
scas
push
fidivrl
pop
jbe
test
fnsave
movsl
inc
sbb
mov
jae
sbb
push
aad
xor
stos
add
lret
add
scas
pusha
and
je
jg
cltd
xchg
mov
push
inc
lcall
mov
sbb
ret
dec
dec
inc
rep
hlt
rol
push
xchg
xor
pop
and
mov
xor
cmp
push
or
push
push
stos
lret
jmp
shlb
inc
mov
sub
adc
sbb
stos
or
xor
jnp
hlt
test
mov
xchg
push
dec
dec
push
xchg
out
or
stos
pop
xor
push
and
inc
push
sbb
jl
inc
jmp
outsl
lahf
sbb
and
out
lret
or
clc
test
shr
and
add
dec
in
jno
jp
mov
pop
test
neg
fisubl
testb
call
aad
mov
inc
cmp
into
clc
jge
std
lret
dec
in
nop
iret
and
sbb
aas
cmp
cs
push
push
adc
push
neg
jp
lods
js
loopne
shl
and
sbb
in
fcmovu
jnp
insb
dec
or
ret
fimull
stc
jle
mov
pop
cmp
mov
sbbb
daa
xchg
loop
mov
in
cmp
pushf
loop
test
jne
xchg
lret
adcb
inc
repnz
ret
aad
fisubrl
repz
cmp
dec
push
adc
clc
jb
insl
mov
addr16
out
shlb
jne
lds
ljmp
cmpsb
leave
jo
fmuls
mov
mov
mov
mov
mov
push
mov
pop
and
mov
and
inc
add
mov
mov
mov
mov
fists
dec
insb
cltd
leave
mov
fldt
andl
inc
jnp
push
js,pn
mov
lahf
xlat
push
aas
cmpsl
xchg
pop
repnz
xor
or
roll
pop
out
hlt
int
xor
popf
push
andl
cmp
dec
int3
jnp
cmp
rcll
loop
incl
dec
cmp
xlat
mov
pop
gs
jecxz
ret
pop
leave
js
dec
decb
jns
cltd
test
xor
pusha
arpl
mov
jecxz
imul
pop
imul
pop
lods
inc
pop
and
hlt
sub
mov
jl
pop
lcall
mov
mov
push
gs
inc
hlt
add
push
or
rclb
push
xlat
divb
mov
in
popa
cli
in
push
xchg
mov
dec
mov
mov
xlat
inc
pop
inc
jbe
xchg
sub
inc
sub
ffreep
cmp
push
sbb
add
push
lret
jbe
xchg
fsubs
loope
notb
lock
jnp
das
fstpl
fisubrl
xchg
jnp
mov
pusha
sti
dec
jae
pop
loopne
jl
xor
mov
cmp
sbb
arpl
jb,pn
dec
push
out
scas
and
ret
inc
dec
es
mov
cltd
je
inc
pop
roll
aas
out
jl
inc
pop
inc
lahf
adc
jo
cmp
outsl
push
jg
pop
sbb
mov
int
push
cmpsb
gs
or
inc
dec
push
iret
mov
int3
stos
mov
mov
or
push
sbb
cs
fidivl
int3
into
xchg
lds
pop
sti
cli
xchg
inc
dec
cmp
xchg
lret
imul
xor
repz
ror
loope
leave
mov
xchg
adc
in
lret
test
xlat
mov
and
and
fistpl
adc
std
mov
clc
dec
lock
ret
mov
stc
call
inc
and
out
inc
in
jl
lods
dec
sub
stos
aad
into
fld
loope
xchg
out
iret
mov
je
pusha
add
aas
mov
aaa
sbb
ror
jmp
and
push
inc
fmuls
xchg
lods
aam
je
xor
cmc
cmc
inc
jp
and
cltd
mov
cmp
bound
cmpsb
push
mov
shrl
jns
loope
xchg
add
mov
jp
stos
data16
stc
out
lock
lcall
mov
jecxz
cmp
and
sub
sub
sub
adc
dec
jge
or
test
jecxz
adc
inc
cmp
lds
cld
mov
movsb
into
and
jb
les
push
or
shl
xor
push
daa
mov
jl
xchg
cmp
fwait
pop
push
adcb
sbb
testb
into
movsl
cmp
nop
cmp
movsl
insb
std
loopne
mov
ljmp
adc
add
out
dec
xchg
or
stos
push
jge
xchg
mov
add
mov
in
pop
rcrb
push
movsb
cli
popf
jmp
hlt
and
or
or
mov
xor
jo
stos
jno
sub
outsb
add
push
mov
dec
sarb
repz
outsb
mov
js
call
aam
cwtl
fldl
xchg
jle
and
es
push
dec
shrl
jp
imul
das
iret
icebp
shlb
repz
mov
push
js
sub
ljmp
cmp
rcr
js
jnp
mov
xlat
xor
mulb
aad
aad
pop
dec
inc
pop
decl
push
xor
dec
rcll
sbb
push
imul
int
mov
insl
ja
test
repz
mov
sbb
xchg
add
xchg
repnz
or
test
cmp
popf
out
xchg
push
xchg
popl
cwtl
dec
adc
cmp
pushw
dec
cmpsb
mov
in
inc
lock
inc
adc
loopne
std
test
insl
and
bound
imul
jae
int3
jns
pusha
data16
push
aas
stos
ja
pushf
test
dec
mov
or
pop
ss
jb
cmp
ljmp
int
popf
push
xlat
lahf
jns
rorl
pop
in
jmp
jg
test
mov
imul
repz
cmpsb
jno
mov
push
imul
cmp
lahf
fwait
xchg
mov
add
mov
mov
sub
dec
test
in
xor
mov
cwtl
pop
sbb
jecxz
mov
push
xor
dec
sub
jge
xchg
jle
mov
xor
fiaddl
fwait
xor
cmp
cmp
push
dec
js
push
out
ss
les
push
mov
outsb
popa
outsl
mov
jno
enter
mov
pop
je
sbb
rorb
mov
dec
push
sub
mov
inc
sbb
jb
sub
mov
and
mov
inc
mov
dec
mov
mov
mov
and
adc
inc
cmp
mov
pop
repnz
mov
test
mov
xchg
mov
pushl
add
adc
and
sub
ja
jle
lock
incl
pusha
xchg
mov
clc
or
push
sbb
mov
add
int
js
pop
ret
jmp
mov
and
mov
mov
add
ret
nop
jecxz
sbb
push
mov
push
fnclex
fisubl
jno
fcomip
jmp
adc
in
pop
les
clc
lcall
or
mov
mov
jp
push
push
cmp
mov
add
and
test
lahf
and
or
pop
jg
js
cld
xchg
icebp
jmp
mov
aad
fdivrp
adc
push
inc
lahf
dec
mov
mov
ds
data16
sub
add
sub
xchg
or
xor
es
movsb
xor
popa
or
mov
mov
mov
je
roll
sahf
xchg
lret
rcrb
cmp
xchg
inc
xchg
xor
jnp
push
mov
cmpl
or
outsb
mov
pop
pop
enter
enter
insl
mov
cmp
jl
push
in
adc
sub
and
scas
mov
sub
cwtl
stc
or
lret
lock
and
add
enter
sti
sbb
xchg
mov
mov
sbb
inc
testb
data16
ds
int3
inc
jnp
inc
ret
push
mov
and
aam
pop
cmp
bound
dec
sbb
pushf
inc
dec
mov
sub
mov
aas
loopne
das
mov
jno
rcr
out
bound
std
mov
dec
mov
mov
lret
movsb
insl
aas
rcrl
push
jp
adc
lods
enter
jne
out
and
sbb
sbb
sahf
xchg
shr
lahf
cli
mov
stc
adc
and
xchg
popa
cmp
mov
mov
sub
jge
push
sbb
lret
test
inc
mov
inc
movsb
fs
sbb
adc
mov
mov
or
ljmp
cmpsb
pop
inc
and
out
sbb
lods
out
jae
popf
fldt
jae
add
push
push
sbb
add
pushf
jbe
loope
inc
xchg
xchg
out
adc
mov
inc
pop
ljmp
adc
lcall
in
test
sub
das
push
mov
mov
inc
mov
xchg
lock
lods
xor
clc
aam
shl
loope
das
ror
lea
cwtl
popf
cli
lock
dec
inc
int
out
push
and
mov
or
outsl
dec
add
or
inc
sbb
lds
sbbl
adc
mov
in
jp
cmpsb
xchg
or
addb
dec
dec
dec
movsb
rclb
mov
lds
mov
dec
loope
pop
lock
lret
lahf
mov
jnp
inc
sub
ljmp
jb
sub
lret
mov
jne
flds
mov
push
in
fsub
mov
mov
es
out
or
adc
push
hlt
cmc
mov
mov
insl
inc
add
mov
pop
inc
testl
push
mov
adc
jo
in
sar
xor
imul
out
rcl
inc
lret
xchg
add
bnd
push
push
xor
sbbl
movsb
jl
enter
xor
int3
adc
push
fadds
int3
push
add
sti
aaa
dec
dec
mov
jg
scas
push
mov
mov
mov
dec
fs
inc
sub
imul
jnp
dec
hlt
rclb
in
lods
shl
fwait
or
mov
xchg
jp
stc
pop
cmpsb
adc
and
dec
sar
test
imul
cwtl
lret
xor
and
xchg
add
jecxz
jle
loopne
testl
icebp
nop
mov
xchg
in
dec
inc
sub
mov
mov
adc
dec
push
in
or
lea
aaa
lret
mov
outsb
repz
cmp
push
nop
outsb
or
loopne
xor
ljmp
mov
push
call
imul
dec
dec
push
xchg
sub
pop
adc
aaa
andb
cmc
out
xor
aad
cwtl
retw
movsl
mov
xor
int
push
mov
mull
push
data16
rcl
dec
sbb
inc
fs
mov
arpl
add
xchg
jae
push
add
xchg
push
mov
clc
into
aam
pusha
add
cmc
lds
inc
std
jns
rcll
jne
cmp
lods
out
pop
mov
loop
in
mov
pop
and
dec
mov
or
sbb
and
stos
cmc
xchg
mov
sbb
sti
dec
sbb
fcomi
cmp
mov
inc
xchg
outsb
pushf
sti
mov
ficoms
pop
int3
push
movsl
xlat
cmp
ss
cmp
inc
std
jb
add
dec
pop
inc
mov
adc
adc
pop
int3
in
faddl
std
mov
sbb
push
or
or
add
int
out
aam
bound
test
popa
or
xchg
repz
inc
cmp
jb
lea
pop
jo
ljmp
shll
mov
cmp
mov
or
xchg
inc
pop
xchg
aad
outsb
stc
xchg
loop
or
aas
mov
fidivrs
xor
out
pop
movzwl
jnp
jle
cmp
rorb
pop
jnp
popa
inc
sbb
jl
lret
loopne
ds
mov
and
js
movsb
mov
xor
sub
mov
repz
push
cmp
mov
or
movsb
or
testb
mull
mov
sub
cld
mov
mov
int3
ss
mov
or
or
mov
out
sarl
or
adc
fcmovb
fnstsw
lock
xor
adc
xor
and
in
std
cmp
fisttps
jb
cmp
xor
and
pop
mov
add
jl
mov
clc
arpl
sbb
rorl
mov
adc
fistl
jp
shll
jbe
cltd
test
fwait
pop
push
vandps
scas
lock
lahf
push
mov
xchg
lret
popa
outsb
mov
push
adc
add
xor
rcrl
and
mov
xchg
bound
scas
cmp
push
sbbl
mov
sub
push
mov
cli
mov
and
fildl
xor
arpl
inc
sub
xor
sub
ret
cmp
inc
sub
sti
loopne
cmpsl
mov
xchg
movsl
leave
jl
cmp
push
fcoml
repnz
mov
pop
sub
clc
mov
sahf
or
rolb
fnstsw
loope
bnd
cli
ljmp
loope
cmp
fbstp
into
xor
sub
push
gs
push
aas
in
xor
aas
aaa
fdivrs
cmp
mov
sub
pusha
pop
pushf
and
cli
cmp
adcb
pop
adc
sbb
push
fsubrl
stos
pop
out
push
mov
add
or
out
aad
jge
push
test
fs
rorb
sbb
and
pop
xor
mov
icebp
lahf
sub
push
adc
out
stos
and
in
jle
inc
mov
inc
cs
fistpl
adc
mov
int3
cmp
adc
cli
or
scas
mov
mov
dec
ret
test
fdivr
mov
xchg
addr16
mulb
icebp
or
mov
js
call
dec
sub
push
sub
adc
movl
nop
repz
enter
mov
daa
out
mov
pop
mov
xlat
adc
jbe
mov
and
inc
js
cmp
fsubrl
in
xor
sbb
xchg
outsl
dec
jl
pushf
scas
mov
fstpl
and
jg
gs
ljmp
nop
int3
cmp
mov
ljmp
pop
adc
sbb
enter
sti
adc
xchg
pop
push
icebp
pop
ljmp
lods
das
cld
dec
xchg
je
add
imul
adcl
pop
insl
mov
mov
or
call
adc
lcall
mov
lret
add
adc
dec
or
dec
stc
pop
div
loop
or
jle
pop
pop
into
aas
loopne
push
pop
jl
movsl
inc
inc
sbb
aaa
jmp
push
xchg
imul
into
insl
cmpsl
add
mov
xor
rcll
mov
inc
enter
ret
stc
lods
enter
adc
test
xor
dec
pop
es
hlt
movsb
jbe
js
scas
sti
negl
sub
inc
movsl
adc
lahf
add
aaa
lock
imul
lods
movsl
jb
out
pop
std
mov
mov
mov
shlb
pusha
cmpsl
imul
je
mov
pop
fdivr
mov
cli
push
jle
es
dec
sub
repnz
ljmp
cmpb
aas
scas
xor
icebp
es
lret
out
outsl
fucomp
sbb
and
test
lea
in
fwait
sbb
stos
cltd
mov
ljmp
rolb
in
push
jp
mov
not
mov
sub
ds
sub
cmpl
fiadds
mov
cmc
orl
imul
push
icebp
mov
int
adc
cmpsl
add
lods
into
nop
mov
sbb
cs
add
gs
outsb
lods
leave
insb
pop
pop
out
adc
lds
mov
lods
fstpt
inc
fnstenv
fwait
jae
jecxz
inc
jle
sahf
fldcw
and
push
fstpl
mov
push
inc
mov
push
and
sbb
dec
adc
or
sbb
dec
jnp
inc
iret
dec
test
mov
add
xor
push
popa
cli
jge
aas
xchg
cmp
jl
mov
or
cmp
leave
addr16
push
sbb
pop
outsb
movsb
in
jle
test
push
cmp
push
xchg
cmp
add
in
add
pop
mov
cltd
jle
inc
leave
popf
inc
mov
adc
imul
mov
or
fsubs
xorl
lret
xor
add
pusha
and
pop
mov
stc
nop
push
push
inc
enter
int3
pcmpgtb
test
jecxz
add
jnp
push
add
push
jne
imul
xchg
cli
lods
rcrb
jecxz
movsb
nop
jnp
in
dec
xchg
dec
pop
jmp
push
xlat
jle
push
mov
sub
inc
es
or
cmp
jle
sub
sbb
xchg
popa
add
aas
js
lods
cmpsb
pop
xchg
cmc
pop
pop
movsb
daa
nop
sbb
sti
ja
gs
mov
mov
in
jge
out
cmpxchg
ljmp
xlat
mov
in
andl
sar
cmpb
jmp
xchg
mov
movsb
lods
lret
cld
sbb
dec
ret
fadds
jo
js
adc
sbb
aas
mov
mov
sbb
sbb
movl
adc
mov
sub
adc
xor
nop
leave
ja
pop
jnp
inc
icebp
cmpsb
push
adc
leave
xchg
or
das
pop
xchg
mov
imul
xchg
cmp
leave
in
ja
roll
movsb
ret
or
repz
mov
sarl
insl
jne
pop
cmpsb
inc
mov
fiaddl
hlt
pop
rcll
cmp
mov
xchg
mov
bnd
sub
orl
and
sbb
lds
loope
mov
jmp
test
cmp
iret
hlt
aam
ss
xor
sbb
rolb
mov
mov
cmp
pop
test
roll
add
mov
push
sti
imul
cs
mov
jae
ljmp
jnp
add
stos
add
or
xor
addr16
clc
jno
loope
flds
adc
insl
call
sub
inc
dec
repz
imulb
mov
filds
cmp
add
sbb
mov
push
adc
xlat
je
jns
add
cmp
mov
subl
out
xchg
lahf
sbb
or
insl
xchg
xchg
add
in
inc
jbe
into
or
cmp
and
mov
shl
movsl
shll
fwait
ret
call
xchg
adc
mov
icebp
ret
iret
push
idivb
jns
mov
sbb
mov
mov
scas
xor
popf
pop
loop
sahf
sub
xchg
mov
fstps
arpl
pop
mov
push
loop
outsb
movsb
ss
dec
lea
adc
ficoml
mov
or
in
fsubrs
xchg
pop
adc
fwait
cli
push
arpl
mov
mov
mov
push
adc
enter
ja
dec
mov
and
xor
or
clc
sbb
enter
adc
mov
inc
js
dec
adc
push
arpl
mov
mov
xchg
loope
mov
sbb
adcl
in
shll
fyl2xp1
pop
adc
jae
ficomps
xor
add
js
test
ds
cwtl
ja
and
ficoml
sti
into
jno
mov
jecxz
add
pop
and
outsl
mov
add
loop
pop
in
sbbb
push
cmpsb
test
in
cmp
or
xchg
jg
pop
xchg
push
jo
aas
sahf
pop
and
test
sbb
jecxz
lds
adc
jp
jecxz
loope
and
mov
in
int
and
clc
addr16
pop
sarl
xor
pop
and
scas
jl
enter
rol
shl
dec
adc
xchg
xlat
imul
pop
mov
rcrl
stc
pop
add
xor
addb
cwtl
cmpsl
xor
rolb
lret
mov
clc
sti
mov
push
mov
xor
jb
push
jl
adc
jb
mov
or
enter
pop
imul
aam
adc
pop
loop
fs
push
ret
or
xor
iret
outsl
aad
scas
sbb
adc
mov
shll
imul
jne
or
arpl
popf
les
mov
lock
test
rclb
test
out
jb
xchg
mov
ret
mov
stos
xchg
cs
ss
stc
and
push
dec
testl
push
lds
push
add
repnz
aaa
dec
cmp
xorl
dec
add
jnp
mov
lret
push
stos
outsb
inc
mov
jge
mov
mov
add
cli
xor
adc
add
in
jb
push
es
hlt
jl
scas
dec
mov
movsl
xchg
sbb
aaa
jg
rclb
fdivp
push
comiss
loope
add
js
loop
fisttpll
mov
add
xchg
scas
popf
sbb
addr16
ret
mov
mov
imul
dec
sub
sbb
in
and
sarb
lcall
orl
cli
push
js
adc
jmp
pop
lock
sub
out
scas
scas
xchg
dec
dec
pop
jp
add
repz
push
stos
movsl
mov
lahf
push
es
dec
int
pop
sub
enter
ret
retw
jb
into
jecxz
loopne
imul
cmp
lock
jmp
add
imul
adc
mov
xor
out
cmp
sahf
ret
xor
movsl
or
ficompl
lods
add
fildll
xorl
imul
out
mov
je
ja
add
inc
add
add
pop
daa
out
or
mov
add
cmp
pop
adc
adc
or
jg
in
jno
cmpsl
mov
sbb
testb
je
xchg
pop
push
xchg
sub
pushf
xor
ret
xchg
into
decb
xchg
scas
cmp
add
cmp
adc
in
sbb
cmc
cmp
or
in
iret
dec
sarl
dec
mov
fsubr
inc
jae
sub
lods
loopne
xchg
cwtl
jno
or
cli
pusha
mov
mov
dec
sub
push
mov
inc
push
adc
cmp
movsb
fsubrp
loope
lret
cwtl
lods
in
pusha
mov
call
jne
jl
mov
popa
iret
push
mov
rol
or
xchg
push
inc
jne
lret
and
xchg
inc
add
frstor
lahf
cmc
test
xchg
pop
or
fwait
movsl
loopne
orl
mov
xlat
jmp
adc
sbb
int3
cmpl
mov
stos
fs
out
dec
lahf
xchg
lret
and
out
xchg
push
call
cli
scas
and
lods
sti
xor
sub
sbb
les
xchg
mov
int3
shl
arpl
mov
stos
xlat
fsts
shrb
mov
pop
adc
adc
faddp
cmp
or
adc
rorl
enter
sub
cmpsb
mov
jb
or
js
loopne
lcall
push
outsl
push
daa
cmpl
popw
pop
sbb
test
loopne
xchg
mov
mov
lret
cmpsb
mov
and
fmull
jge
ja
push
hlt
sbb
adc
xchg
dec
sbb
jl
insl
inc
cli
in
cmp
call
push
gs
mov
jne
mov
pop
stc
pop
cmc
arpl
pop
cmpps
jo
sbb
imul
nop
cmp
push
add
mov
pop
pop
enter
or
int3
xor
js
cmp
hlt
lahf
mov
xchg
mov
int
inc
dec
push
js
xchg
subb
movb
or
xchg
fs
adc
mov
movsl
out
jmp
aas
js
cmp
je
mov
cs
stc
jo
sbb
imul
push
imul
mov
into
push
lret
jae
lahf
jp
or
dec
out
lret
scas
test
sbb
jne
mov
mov
push
push
lea
cmpsl
cld
jl
daa
mov
rclb
cmp
mov
paddusw
push
mov
sbb
xchg
mov
cs
in
imull
mulb
pop
mov
lcall
or
jmp
add
lcall
in
adc
loop
es
dec
and
es
mov
xchg
rorb
decb
call
sub
lds
pushf
pop
pop
adc
sbb
popf
pop
mov
mov
jmp
dec
pop
and
dec
je
dec
jno
rorb
scas
imul
lods
cmpl
aaa
imul
dec
lcall
aam
inc
adc
lock
jb
mov
jbe
jnp
adc
cs
insl
in
sbb
push
pop
mov
cmpsb
scas
fwait
dec
mov
aad
inc
push
hlt
sbb
mov
dec
int
mov
xor
out
sahf
out
test
rolb
out
stos
jnp
out
mov
lea
sbb
insl
bound
mov
movsl
pop
inc
lock
add
adcl
push
outsl
stos
sahf
hlt
fwait
cmpsb
push
push
setle
push
scas
adc
in
jecxz
add
cld
jl
mov
adc
jl
fsubs
sub
xor
or
lods
and
dec
adc
mov
or
stos
into
and
bound
mov
cmc
icebp
sub
popl
nop
push
aas
and
adc
mov
adc
push
adcl
or
mov
xchg
and
fisubrs
jae
in
jl
rolb
roll
fcomps
lds
sbb
push
inc
mov
sbb
adc
scas
xor
aam
jo
cmp
in
push
jno
push
inc
lret
pop
xchg
insb
pop
mov
adc
daa
shl
ljmp
loopne
iret
std
jg
sbb
stos
add
adc
ss
les
int3
mov
mov
mov
into
mov
pop
call
and
jno
loop
mov
xor
pop
mov
and
addl
or
xchg
lret
leave
push
sahf
cli
inc
add
lret
inc
shrb
push
bound
inc
mov
daa
sbb
fstl
loope
test
stos
inc
mov
adc
loope
popa
dec
mov
sbb
jo
mov
stos
insl
leave
notb
popa
mov
jl
jo
lock
xor
add
mov
push
int
std
mov
push
mov
sar
iret
int3
mov
rcll
sub
lret
jl
jne
push
enter
inc
test
sbb
dec
outsl
xor
xor
jo
lds
add
xchg
xchg
iret
fwait
inc
stc
jge
push
add
sbb
xchg
jl
scas
mov
adc
xlat
push
movsl
push
mov
sub
test
or
cs
testb
pop
xchg
fisttpll
jae
lods
daa
std
mov
aad
xorb
mov
mov
sub
and
cltd
xchg
lret
je
xchg
add
gs
lahf
cmp
and
mov
ja
or
mov
pop
cmp
mov
sahf
inc
loop
jp
xchg
sbb
addb
push
mov
gs
and
loope
jle
js
sub
mov
and
inc
mov
mov
sub
fcoms
iret
daa
dec
daa
rolb
sub
inc
pandn
cs
pop
lds
pop
xor
mov
addb
enter
xor
lock
cmp
jg
inc
jb
lahf
push
jmp
mov
call
sub
arpl
popf
nop
push
push
shrl
fsubp
lods
ljmp
loopne
pop
popa
mov
in
mov
or
mov
insl
repnz
test
pop
je
das
idiv
xchg
int
push
mov
test
sub
femms
push
mov
stos
mov
ljmp
mov
mov
js
add
or
or
mov
lcall
test
ror
mov
jmp
or
je
mov
out
rcl
repz
out
fisubrs
scas
cvttps2pi
fdivrs
push
pushf
scas
or
jbe
push
push
rcrl
jge
in
subl
shrl
leave
or
out
push
sub
scas
dec
clc
mov
in
push
cld
dec
and
in
xor
aam
add
imul
data16
sub
sahf
and
cmp
or
jle
mov
stc
les
js
addr16
pop
add
mov
adc
mov
in
into
cmc
cmp
scas
in
fs
mov
notb
js
or
or
int3
in
xor
and
jno
scas
xchg
rcrb
cmp
icebp
mov
sub
imul
dec
leave
xchg
std
ds
popa
adc
push
std
add
test
mov
jmp
insl
mov
mov
push
cltd
sarl
ret
lock
xor
dec
inc
push
xor
or
or
loope
push
test
test
shrb
dec
fadd
adc
ja
sahf
inc
inc
fnstcw
adc
imul
movsb
xchg
lods
add
lea
xchg
sahf
or
and
jb,pn
sub
sbb
dec
pop
dec
addr16
adc
mov
icebp
popa
cmpsb
mov
jae
stc
push
jg
pusha
and
lahf
repz
outsl
push
scas
inc
cmpsb
cmp
xor
mov
xchg
cmp
inc
lahf
jg
ds
xchg
sti
xor
cmp
pusha
cmpsl
push
jns
enter
mov
pop
sub
jmp
movb
dec
jp
push
jno
movsl
dec
movsb
mov
pop
mov
add
xchg
insl
arpl
fistpl
dec
mov
sbb
dec
test
rcll
out
mov
dec
mov
inc
addl
and
addr16
mov
lret
rolb
pop
mov
insl
iret
icebp
dec
sahf
push
clc
mov
jae
mov
dec
aaa
mov
in
fidivrs
sbb
dec
mov
mov
push
aad
inc
mov
mov
popf
or
add
ja
clc
cli
ret
roll
push
pushf
xor
mul
insl
pushf
lods
jne
push
mov
xchg
xor
jg
enter
xor
mov
push
jae
imul
inc
push
push
lahf
add
outsb
adc
inc
sar
push
push
sub
dec
out
push
ret
mov
pop
xor
imulb
rcrb
shlb
icebp
xlat
outsb
add
leave
push
and
and
xchg
xor
xchg
mov
xor
testl
nop
mov
sbb
jg
sbb
sub
and
push
and
rorl
lea
int3
mov
fs
pop
jo
in
mov
out
js
aam
jns
shll
lcall
pop
and
mov
xchg
stc
test
cwtl
mov
les
mov
xchg
mov
std
sbb
dec
jmp
mov
adc
adcb
aaa
pop
push
jg
cltd
pop
push
pop
aam
jnp
push
aaa
mov
pop
dec
gs
jbe
stos
scas
mov
sub
pop
inc
lahf
mov
mov
iret
mov
add
jle
movsl
out
mov
xor
jbe
dec
mov
jbe
je
outsb
xor
jp
push
xor
sbb
lods
add
in
xchg
mov
in
repnz
aas
mov
aam
ljmp
and
pop
out
shlb
adc
mov
fstpl
cmp
scas
mull
aas
pop
push
pop
arpl
cmp
mov
jp
dec
fidivrl
cltd
cltd
outsb
repz
lock
pop
enter
xchg
sahf
stos
fsubrs
mov
fnstsw
dec
fdivrl
cmp
in
in
fisubs
xor
lret
add
fdivl
inc
cld
stos
add
dec
push
movsb
jae
sbb
sbb
ret
mov
mov
in
mov
jecxz
inc
sbb
mov
cltd
add
je
inc
ja
mov
arpl
outsl
repnz
jecxz
lret
enter
sti
xchg
sub
push
adc
sub
mov
fldenv
int
mov
pop
mov
pop
inc
jmp
stc
outsb
in
mov
mov
das
xor
pusha
jle
icebp
insb
lret
xorl
in
mov
push
cmp
mov
lahf
test
loop
scas
pop
std
push
mov
pop
mov
aaa
data16
scas
push
mov
mov
dec
lcall
jne
dec
lods
inc
sub
outsb
mov
outsl
cld
xchg
dec
or
push
into
mov
adc
in
push
dec
into
cmp
xchg
addl
stc
ss
arpl
or
ret
pusha
jg
inc
dec
dec
scas
mov
push
xlat
sbb
adcb
dec
jmp
test
data16
pmulhuw
ret
ret
bound
cmp
ror
pop
in
out
inc
xor
out
push
xchg
cltd
scas
dec
dec
call
mov
jae
imul
ret
jbe
jg
push
xchg
outsl
lds
pushf
adc
pop
fbstp
loop
xchg
loopne
push
pop
testb
std
jecxz
gs
push
inc
dec
xchg
shrb
pop
xchg
out
dec
repnz
push
push
fsts
fiaddl
ljmp
cmp
pop
mov
mov
in
push
mov
jg
mov
movsl
push
jb
ja
fimull
rcrb
stos
clc
and
in
xchg
das
lret
jg
subb
ljmp
jne
push
and
mov
pop
mov
scas
pop
dec
inc
stos
popa
es
cmc
lods
enter
jmp
or
sti
movsl
pop
movsb
cmp
cmp
scas
mov
aam
jl
add
scas
test
dec
mov
aam
mov
mov
aas
cltd
inc
scas
repz
mov
shlb
mov
and
jecxz
cmp
or
pop
mov
loopne
sbb
jae
sar
sub
loope
cmp
int
jle
lds
inc
sub
lea
mov
out
cmp
mov
inc
js
mov
sbb
faddp
inc
jb
sbb
negl
ss
into
mov
out
xor
iret
clc
push
out
int3
jecxz
sbbb
fnstcw
dec
push
xchg
scas
adc
sub
cmp
push
stos
mov
dec
jg
icebp
test
lods
lods
inc
test
lahf
ss
pop
leave
fisttps
js
loope
or
lret
cmp
push
repnz
xlat
repz
adc
push
inc
mov
sub
sub
fistpll
scas
or
fnsave
incb
sahf
in
xchg
mov
jmp
inc
sub
jbe
sbb
pusha
or
sahf
testb
cmp
xchg
sub
sub
adc
add
lods
test
not
inc
xchg
pop
mov
out
mov
mov
mov
or
fsubrs
sbb
inc
inc
dec
js
aad
inc
push
test
xor
and
xchg
sbbb
adcl
getsec
and
test
imul
dec
mov
sbb
sbb
sbb
pop
and
adc
xchg
mov
enter
pushl
std
sbb
bound
sbb
cmp
sub
into
sub
jmp
lret
mov
cli
push
pop
rol
mov
out
sbb
mov
ljmp
iret
test
push
and
jo
fildl
enter
aam
and
cmp
push
mov
push
ret
mov
movsl
dec
movsl
daa
mov
shlb
stos
mov
aas
cmp
lds
dec
sti
adc
sahf
or
push
jmp
pop
lods
jo
test
jge
sbb
xchg
push
jno
int3
insl
mov
sbb
mov
jne
pushf
std
sbb
call
sub
and
ffree
in
push
pop
xchg
scas
shrl
add
call
xchg
sbb
iret
iret
sbb
sub
loopne
ss
insb
into
popf
lahf
shlb
rolb
into
adcl
cmp
aam
filds
push
sub
sarl
ss
jb
xchg
and
jmp
imul
leave
dec
lret
dec
pop
outsb
das
jns
insl
rclb
fldl
pop
push
decl
mov
int3
lret
js
test
adc
xor
ret
mov
fistps
add
add
mov
mov
arpl
xor
cs
jne
insl
add
je
insl
enter
fwait
loop
out
das
inc
pop
inc
sub
push
mov
inc
inc
jnp
or
les
push
rclb
cwtl
cli
inc
push
shr
call
outsl
repnz
add
fisttps
cmp
ds
sahf
pop
shll
jae
fnstcw
lds
push
push
xchg
push
stc
scas
loope
test
xlat
add
test
std
lods
mov
leave
lahf
std
mov
xchg
push
or
xor
push
shlb
popf
pop
xor
fisubs
out
prefetch
push
pusha
aaa
lods
mov
cmc
loopne
push
pop
daa
das
call
cmc
jmp
cmp
adc
ss
inc
loope
mov
push
fcmovnbe
sbb
cmpsb
lahf
mov
in
mov
test
or
xchg
dec
lret
dec
mov
dec
stos
add
ret
iret
and
dec
cltd
mov
test
mov
in
and
inc
push
lcall
bound
iret
aas
mov
mov
lahf
push
cmp
sbb
clc
and
add
push
call
mov
dec
jne
inc
inc
cmp
lds
jbe
btcl
cmpsb
jae
stos
cmp
xlat
shrl
jecxz
adc
xchg
stos
movsb
in
or
dec
and
push
jb
adc
sti
adc
sti
imul
data16
adc
inc
mov
cmp
push
std
jp
fwait
push
pop
scas
loope
adc
es
add
push
sub
lret
push
insl
sti
sbb
or
push
fcompl
ljmp
ret
jle
mov
dec
cmp
lods
pop
mov
sub
aas
mov
and
cli
push
dec
xchg
out
mov
push
dec
data16
mov
idivb
ljmp
jmp
add
into
or
mov
mov
sahf
in
faddl
pop
ret
out
pop
push
pop
push
sub
sti
jecxz
adc
push
icebp
inc
jbe
dec
into
jp
int3
mov
inc
aas
iret
pop
xor
out
xor
nop
pop
pop
xchg
xchg
movsl
insl
ficompl
sbb
inc
push
iret
and
pop
mov
mov
daa
fildll
pop
pop
cmp
shlb
jge
lret
sbb
add
out
mov
icebp
adc
and
aas
push
pop
mov
mov
push
jecxz
push
xchg
or
cmpsb
xchg
mov
or
aaa
sti
inc
lock
loopne
jns
cmc
jecxz
push
scas
or
lahf
jb
xchg
in
sub
add
clc
mov
jnp
inc
adc
into
cmp
mov
cmp
sti
test
int3
cwtl
pushf
stos
fstpl
sbb
fwait
add
push
test
pusha
or
sub
add
pushf
ja
subl
and
xor
and
dec
sbb
jno
or
push
add
mov
movsl
fwait
jo
imul
xor
xchg
adc
or
addr16
jmp
mov
fcoml
out
cld
sub
dec
pop
push
sti
push
adc
sbb
pusha
orb
inc
cltd
mov
lea
mov
xchg
pop
or
mov
aad
mov
ja
dec
push
aaa
aad
push
lods
aaa
and
mov
xlat
xchg
add
loope
mov
negb
xchg
in
test
std
and
sarb
cmp
ljmp
test
lahf
aam
testb
lahf
jmp
bound
jg
mov
add
cld
fyl2xp1
fbld
push
inc
mov
fstps
sbb
rorb
dec
outsb
leave
cmp
fildl
adc
repnz
insl
mov
pusha
test
pop
xor
sarb
mov
mov
cmp
or
add
mov
jb
jge
outsl
mov
pop
negb
shlb
aaa
xor
push
aad
jnp
mov
dec
call
xor
mov
ret
xor
repz
add
adc
jno
mov
popa
xlat
xor
popa
movsb
por
in
into
and
in
loop
fisubs
add
nop
loop
pusha
mov
push
movl
add
fsts
xchg
negb
scas
cltd
jae
sahf
jecxz
jo
sub
jbe
lock
pop
xchg
pop
cmpsb
out
mov
mov
call
sbb
fwait
xor
mov
andb
inc
std
push
pop
stos
jg
shrl
stos
imulb
add
xchg
inc
adc
rorl
sub
push
xor
scas
adc
adc
dec
inc
mov
mov
fistpll
arpl
lods
in
pushf
insb
aad
pop
jne
push
mov
cld
cld
xabort
push
dec
jns
in
imul
shll
gs
cmpsb
xchg
mov
adc
xor
sbb
mov
movsb
mov
inc
repnz
out
xchg
shlb
sbb
push
pop
leave
lods
pop
movsb
pop
mov
mov
lret
outsb
sti
sub
cmp
insb
icebp
imul
cmova
shll
ret
rol
fdivs
sbb
arpl
sub
in
cmp
xchg
cli
jg
jl
adc
cmpsb
scas
fiaddl
movsl
insb
sub
jne
push
icebp
jecxz
ss
cwtl
xor
or
adc
xor
dec
scas
mov
dec
sbb
andb
loope
dec
jge
adc
stos
or
repz
imul
lea
lahf
xor
dec
fimull
hlt
fistpll
insb
adc
aaa
fstpt
cmp
xor
lock
scas
popf
sbb
inc
dec
js
sar
into
pop
sti
xchg
in
add
mov
je
lds
ss
xchg
xor
cwtl
jb
add
bound
in
pushw
or
pop
or
imul
push
shll
ret
add
bnd
jb
cltd
and
xor
mov
sub
and
mov
or
adcb
and
or
idiv
jnp
sbb
pushf
xlat
mov
add
mov
js
fsubrs
pop
stos
xchg
decb
lahf
adc
pop
cmp
es
cltd
sub
sub
notb
movsb
insb
push
imul
lahf
into
mov
lods
aam
sbb
aam
pop
xchg
mov
mov
mov
cli
sub
repz
mov
ror
pop
mov
outsb
or
fsubl
shl
fwait
iret
jg
ret
mov
dec
icebp
insl
scas
nop
loopne
int
mov
out
adc
lea
mov
aam
int
imul
push
fcmovu
and
not
repz
sti
mov
xor
pop
jno
cmp
push
insb
stos
adc
cmp
xchg
int
mov
mov
sbb
daa
push
test
or
ret
xor
scas
fucom
jno
and
mov
nop
sti
xor
in
cmp
ljmp
jge
mov
repnz
pop
lods
push
or
cmc
dec
push
insb
enter
mov
cmp
sbb
test
in
popf
mov
dec
divl
or
mov
nop
and
es
icebp
das
push
jge
arpl
mov
mov
ret
or
cmpsl
push
aaa
sti
add
pop
lea
ret
push
or
sub
data16
cmp
push
daa
xchg
xor
into
cmpsl
push
pusha
movsb
cmpsb
mov
pusha
mov
adc
pop
jbe
js
imul
test
mov
xor
cmp
roll
sbb
push
sub
xchg
dec
in
push
addb
js
insl
hlt
imul
inc
ret
dec
mov
add
sub
shl
cmp
std
push
je
imul
insb
or
jmp
decl
test
mov
xchg
lahf
repnz
jmp
ret
dec
jnp
shll
cmp
cltd
xor
lret
inc
jno
mov
mov
loope
clc
inc
std
and
mov
adc
pop
xor
into
mulb
push
jg
xchg
cld
cmp
xor
sub
sti
cmpsl
xchg
addr16
aad
dec
add
xchg
sbb
xchg
sub
jecxz
cmp
add
add
insl
push
dec
mov
sbb
rol
rclb
addr16
inc
rolb
cwtl
scas
mov
and
jns
mov
cmpsb
sbb
lods
mov
fdivl
mov
adc
mov
inc
mov
cmp
dec
cmp
clc
jns
pop
xor
rolb
rorl
xor
daa
fs
xor
test
jno
lea
mov
ja
mov
xchg
add
xchg
jp
test
jp
dec
dec
mov
ret
aam
pop
lahf
cmp
sbb
fucompp
sub
cmp
push
or
movsb
or
push
lods
fsubl
xor
lock
push
popa
hlt
into
sub
ja
dec
add
jo
jno
jecxz
or
mov
sbb
mov
jecxz
ficomps
mov
mov
popa
out
and
sbb
out
outsb
in
sub
jl
test
jp
push
outsb
mov
cmp
jge
mov
lcall
inc
and
push
imul
imul
ret
setp
cs
fdivs
cltd
rorb
outsb
nop
pop
inc
and
xor
or
xor
xchg
mov
mov
fistpl
int
push
out
pop
loop
xor
mov
movsl
scas
stos
test
cmpsl
cmp
fimull
xchg
lret
jmp
in
cwtl
mov
mov
xchg
mov
les
divl
rcll
pop
jne
push
or
in
nop
add
pop
mov
bound
push
mov
in
xchg
shll
pop
add
pop
xor
inc
out
push
push
jecxz
mov
xchg
sub
pop
pop
test
jb
ror
cmp
jb
frstor
popa
sub
imul
es
pop
adc
pop
jne
scas
arpl
adc
push
lcall
ficoml
std
rorl
xchg
or
cmp
adc
pop
mov
js
push
jbe
push
push
aas
lds
mov
adc
rcll
jno
adc
cmp
add
dec
or
and
jnp
pop
shl
int
inc
testb
outsl
cmp
add
fmul
and
mov
pop
int3
jae
jns
ret
leave
cwtl
push
jnp
jae
push
test
or
fcmovu
adc
adc
sub
imul
fisubrl
xor
mov
cs
pop
fcmovbe
inc
cmpsb
lret
push
push
cmp
jno
pusha
insl
dec
push
insb
sub
pop
sarl
fcompl
pop
outsb
xchg
mov
mov
dec
mov
ljmp
mov
loopne
mov
push
add
sbb
ja
pusha
les
scas
and
inc
cs
scas
mov
test
mov
divl
bound
xchg
inc
sub
xchg
inc
jne
mov
stos
and
pop
and
cs
testb
pop
loope
lock
push
imul
jmp
or
mov
mov
pop
xor
subb
stos
xchg
inc
mov
push
outsb
mov
inc
pop
or
fld
and
jb
push
leave
mov
cwtl
ja
cmp
mov
mov
inc
dec
pop
es
cld
sbb
xor
movsb
and
jmp
xchg
roll
enter
cmp
pop
clc
lock
push
testl
or
sub
je
dec
movsb
xacquire
shll
jne
xor
shl
sbb
sub
sub
fs
cltd
push
jno
int
arpl
addr16
inc
out
loopne
ja
sarl
push
je
out
dec
popf
sbb
daa
fs
xchg
ss
fsubs
and
and
popf
aam
sub
fldt
fsubrl
stos
lea
cld
scas
in
lcall
bound
popf
mov
mov
inc
inc
icebp
pop
pop
pop
xor
push
pop
mov
mov
notb
xchg
lock
insl
ss
xchg
dec
push
repnz
inc
outsb
insb
mov
mov
jle
divb
insl
jne
and
scas
stos
imul
adc
mov
mov
lods
cmp
pop
and
in
jg
adc
jne
imul
jae
or
jnp
mov
pop
or
jecxz
dec
mul
adc
push
sbb
adc
dec
lods
fwait
test
ja
jno
mov
sbb
test
adc
movsl
jge
aas
pop
push
inc
pushw
out
pop
inc
mov
flds
mov
fldenv
xchg
sub
cli
pop
outsb
jle
sub
dec
xchg
cmpsl
add
rcr
add
mov
inc
adc
popf
push
and
xchg
xlat
jecxz
sbb
fdivr
xchg
hlt
jns
and
sbbb
and
fnstcw
mov
imul
jno
inc
add
fistpl
sub
insb
add
pop
lret
fisubl
dec
decb
cmp
or
push
jae
fists
shlb
out
js
in
repz
das
or
loope
mov
xchg
sub
or
cmp
out
lret
dec
sbb
mov
push
lahf
ja
push
pushf
push
xor
imull
sti
cmp
cmp
fldl
sbb
push
mov
xor
notl
in
loope
outsb
mov
push
jge
pop
xor
jb
cwtl
fwait
xchg
push
adc
jns
sub
test
dec
xlat
inc
sti
in
xor
insl
pop
in
insb
lcall
je
lret
stos
pusha
sub
pop
dec
in
dec
es
push
in
xchg
fs
push
outsl
cmpl
pop
stc
mov
shr
in
adc
and
sub
sub
inc
aaa
mov
sub
dec
loopne
pushf
std
inc
cmp
and
xchg
shrl
int3
cld
sbb
jae
iret
xchg
push
cs
cmpsl
imul
push
jl
mov
adc
adc
and
mov
lods
cld
mov
fildll
fwait
pop
mov
dec
push
cmp
add
dec
adc
fiadds
ja
fstps
mov
stos
rcrb
outsb
aaa
sti
inc
int3
movsl
ret
cltd
cs
cmp
push
cltd
shlb
sbb
jns
or
mov
data16
adc
mov
cmp
jo
aas
xchg
mov
test
pop
cmpsb
jmp
filds
stos
lds
pop
test
mov
cmp
arpl
pushf
add
pop
mov
sbb
sti
in
test
stos
xor
jns,pt
insb
xor
and
push
sub
mov
and
in
dec
lss
or
roll
imul
cs
jle
adc
mov
pop
pop
push
es
lods
jg
pushf
xlat
pop
gs
lcall
rcr
lretw
mov
pop
sti
popf
or
lock
mov
pop
int
fwait
cmpsl
fs
add
sbb
inc
es
pop
jge
or
rcrb
mov
xchg
push
push
shl
mov
and
xchg
leave
movsb
mov
mov
ds
outsl
es
ret
mov
movsb
ja
out
mov
jae
ja
shlb
or
or
adc
out
jno
aam
stc
push
dec
inc
pop
mov
cmp
and
insl
jmp
ss
dec
cmp
cwtl
dec
jno
or
filds
dec
out
das
iret
mov
add
push
mov
in
lds
daa
or
insb
cmp
insl
call
in
mov
ret
inc
loope
and
pop
fisubrs
mov
xor
ds
xlat
mov
loop
addl
gs
rcr
ss
aam
pop
add
test
xor
pop
imul
sub
push
and
mov
lret
out
pop
andb
and
adc
jmp
lret
scas
push
sbb
dec
lahf
in
inc
push
adc
jne
xchg
cmp
popf
add
sub
cmpsb
cli
mov
push
mov
test
sub
pop
adc
verr
loopne
mov
andl
adc
insl
jl
xor
jb
les
inc
pop
ljmp
dec
loopne
and
xchg
cmp
iret
pop
std
xorl
je
clc
in
mov
out
sarl
lcall
out
repz
repz
dec
mov
push
cmp
inc
hlt
or
pushf
add
in
icebp
jae
mov
aas
stos
fwait
gs
pop
punpckldq
inc
mov
dec
inc
fs
icebp
inc
cmpl
or
xor
movsb
inc
cmp
mov
int
fcompl
mov
jg
jg
ret
add
pop
outsb
add
mov
ljmp
sub
fsubl
push
push
or
jns
push
dec
xor
mov
ss
sub
sbb
mov
push
dec
lret
mov
jb
dec
push
cmp
mov
push
cmp
dec
mov
xchg
imul
sahf
lret
push
or
jg
rolb
lods
inc
loope
jmp
push
mov
lcall
xchg
mov
dec
js
jecxz
mov
outsl
and
inc
mov
and
gs
push
stos
lret
push
pop
jne
lcall
pop
test
stc
test
mov
sarb
out
xchg
stos
jns
mov
and
aas
pop
sub
ds
add
in
xor
sub
push
xor
cmp
jbe
sarl
data16
popa
aas
xchg
xorl
push
mov
and
lret
mov
add
std
mov
inc
mov
in
jnp
imul
in
and
xor
push
mov
and
inc
ret
adc
out
push
xchg
pop
xor
icebp
jne
fidivl
sub
push
push
shll
mov
mov
cli
insl
sbb
shrl
stc
lods
lea
xchg
mov
xchg
cmp
dec
sub
push
or
lds
mov
jecxz
sbb
cmpsl
dec
clc
popa
int3
dec
int3
je
mov
stos
and
shlb
ds
xchg
and
cmpsl
xchg
adc
repnz
addl
movsl
inc
inc
sub
sub
xor
dec
inc
testl
push
outsl
xor
mov
dec
in
cmc
cmp
cli
cmp
scas
and
leave
sbb
jae
push
movsl
adc
outsb
push
sti
xchg
and
int
xchg
movsl
data16
sub
data16
arpl
xchg
sbb
push
or
sbb
cmp
xchg
add
aad
push
scas
mov
inc
outsl
aam
push
push
aaa
xchg
dec
insb
aam
push
test
loopne
std
mov
adc
push
or
mov
ret
jo
pusha
sbb
inc
shlb
out
popa
lods
mov
cmp
orb
xchg
and
mov
dec
mov
mov
les
pop
cwtl
jl
add
push
fidivrs
or
push
out
jmp
sbb
cmp
cmc
mov
mov
or
cmc
push
cmpsb
mov
jge
mov
dec
hlt
test
dec
frstor
pop
in
mov
repnz
xchg
mov
mov
xchg
mov
int3
inc
mov
lds
orps
adc
inc
push
test
mov
gs
loopne
jge
pop
inc
adc
ljmp
mov
and
fidivs
in
dec
sarb
in
dec
jne
cmp
lahf
cmpsl
fsubl
ss
iret
out
clc
mov
cmp
cmp
shlb
jg
mov
loop
pop
inc
or
push
mov
sbb
dec
sub
jl
mov
inc
push
xchg
cmpsl
sub
and
loope
mov
ficoms
mov
dec
lds
jle
imul
adc
call
movsb
mov
fimull
add
subb
push
cmpsb
and
push
sar
ja
or
imul
mov
sub
stc
ja
sbb
enter
push
jns
jb
loop
into
pop
xor
in
xchg
jnp
sahf
and
addl
sbb
int
adc
xor
dec
loop
iret
dec
les
dec
adc
and
add
mov
pop
je
iret
dec
mov
adc
jg
push
xor
int
push
insb
mov
mov
lock
sub
mov
iret
inc
jb
push
test
std
sub
sub
ds
notl
xor
pop
ljmp
sbb
lock
mov
mov
clc
mov
pcmpeqw
shrb
sbb
stos
out
in
shlb
leave
cmc
je
outsb
or
call
mov
sbb
cld
and
pop
ret
lahf
int
lret
and
mov
cmc
mov
push
pop
sbb
nop
jmp
repz
mov
loop
aad
roll
pop
sti
sub
and
mov
outsl
jb
outsb
xchg
fwait
ds
mov
xchg
mov
in
std
dec
pop
jp
pop
aas
jae
mov
pusha
jg
hlt
enter
cmpsl
test
test
shl
push
outsb
xchg
xor
frstor
ja
sub
inc
or
insl
adc
aas
mov
cmc
mov
jno
addr16
push
mov
outsb
and
out
js
mov
fcomps
aaa
mov
es
sub
sbb
or
push
mov
sbb
sub
xlat
dec
les
or
mov
adc
sub
les
adc
ljmp
and
pop
sub
cmpsl
fnstsw
pop
pop
mov
mov
jle
or
mov
stos
test
nop
cmp
inc
repz
lods
int3
xchg
cmp
clc
and
int
ret
mov
mov
mov
push
xor
loope
adc
testl
clc
fcmovnb
sti
xor
cmp
sub
aam
in
mov
cld
or
mov
insb
cld
cli
jmp
call
inc
mov
sub
xchg
ret
fimuls
xchg
push
pop
rcrb
xchg
add
pop
data16
in
adcb
imul
int
adc
aaa
ds
fnstcw
xchg
aaa
shll
fisttpl
arpl
sbb
jmp
dec
not
bound
in
mull
lods
cmp
lds
js
jecxz
out
xor
icebp
subl
scas
lea
pop
test
fldt
mov
sub
pop
pop
mov
mov
and
adc
sahf
in
mov
and
mov
mov
test
cmpsb
and
test
iret
cld
int3
fisubrl
mov
pusha
dec
pop
dec
ljmp
adc
int
dec
rolb
cltd
fs
leave
vmread
sub
xlat
and
pop
cmp
xchg
mov
fld
add
insb
jmp
int
aam
jmp
push
lret
rcrl
push
sub
xchg
pop
dec
dec
cld
fidivl
mov
xor
push
lods
jmp
leave
and
ja
lock
pop
mov
out
mov
push
add
call
or
mov
pop
lret
enter
cli
push
sti
push
jbe
std
add
sbb
xor
jbe
stc
aad
mov
repz
adc
scas
js
jg
xor
outsb
mov
daa
mov
push
mov
xchg
sub
jne
or
fsubrs
pop
mov
ss
jmp
repz
lds
aam
sbb
lahf
dec
xchg
mov
outsl
mov
shll
sub
jns
xor
rcll
fimuls
cmp
mov
pop
xchg
ds
mov
ds
int
stos
mov
arpl
or
out
jp
push
loop
rcrl
cmc
mov
jge
fbstp
inc
inc
adc
pop
pop
movsl
sub
adc
xchg
push
dec
and
pop
cmpsl
pop
push
lcall
jbe
inc
sub
xor
fiaddl
push
or
cmpsb
sbb
js
or
sub
out
or
mov
shl
insb
daa
xlat
cmp
js
and
iret
ja
cld
test
fidivs
out
pop
jae
mov
ljmp
inc
xor
xlat
negb
daa
cli
pop
aaa
mov
sub
sub
cltd
inc
das
push
ret
jbe
aad
cli
mov
mov
push
das
and
push
add
adc
jl
jle
test
or
dec
push
mov
or
mull
dec
mov
push
stos
or
fldcw
push
lahf
inc
out
icebp
xor
pushl
xor
notb
pop
cmp
cld
push
cmc
lret
popa
shlb
out
or
shlb
aaa
mov
pop
sahf
push
lahf
add
jno
cwtl
push
in
dec
sarb
push
or
mov
mov
rcrb
cmp
cmpsl
adc
fldl
in
bnd
int
jge
mov
imul
dec
lret
fdivr
and
arpl
add
cld
mov
sbb
xor
mov
mov
cltd
sbbl
adc
and
mov
lods
loopne
inc
aaa
jl
inc
je
push
sbb
sub
ret
jge
cwtl
out
call
sub
mov
and
lock
jb
and
xor
jp
enter
mov
xor
xchg
adc
inc
dec
mov
sub
out
sahf
testb
repnz
jns
pop
pop
jno
cmpsb
xor
cmp
insb
mov
or
jo
push
mov
inc
pop
sbb
in
add
shll
jae
sub
rcr
xchg
pop
push
pop
jno
or
out
in
sub
mov
lds
jmp
adc
test
mov
dec
das
mov
ret
jbe
inc
mov
es
xcrypt-ctr
cmpsl
fildll
mov
xchg
sub
test
sarl
lahf
test
push
jnp
mov
mov
mov
cwtl
dec
lea
push
nop/reserved
mov
mov
bound
ror
fs
jmp
cld
and
dec
subl
mov
repz
xor
aaa
sahf
data16
mov
mov
cmpsb
cmp
jmp
test
loop
adc
sub
mov
add
sub
rolb
cmp
shl
data16
iret
pop
sti
sbb
jne
cmpsb
dec
out
dec
dec
xor
or
pop
sub
icebp
sbb
jno
bound
dec
popf
mov
das
or
rcr
sbb
mov
jo
aas
push
ret
adc
add
adc
iret
cli
push
stc
mov
imull
xlat
xor
inc
mov
mov
push
mov
dec
fcoms
xor
adc
js
and
add
sti
out
sub
data16
data16
mov
mov
repnz
mov
or
movsb
sbb
pop
mov
sbb
mov
shr
leave
pop
das
les
push
add
cmp
into
in
ficoms
xchg
mov
mov
adc
push
sub
repnz
pop
scas
insl
sti
fisttpl
out
sbb
add
iret
jne
cwtl
cltd
push
pushf
repz
dec
push
ja
pop
and
jae
add
jb
sub
dec
call
dec
cmpsb
out
xor
addr16
push
es
fs
ret
adc
xchg
cmp
bound
insl
xor
mov
pushf
mov
xchg
jns
xor
adc
push
jb
cmp
mov
ja
add
fwait
jo
adc
jb
loop
call
pop
stos
repz
or
lahf
out
ds
xchg
inc
bound
roll
jb
maxps
xor
xchg
shl
mov
andl
pusha
xchg
push
jne
aad
xchg
mov
ds
adcb
mov
mov
inc
xor
sbb
pusha
jnp
incl
in
dec
cmp
cwtl
pusha
fwait
sub
cmpsl
adc
push
sbb
inc
dec
fmulp
std
push
lahf
or
cmp
pop
xchg
sub
cmp
imul
dec
sbb
dec
xchg
inc
stos
lds
cli
jne
ret
outsb
lret
cli
xor
test
push
push
leave
mov
int
inc
stc
dec
mov
mov
popa
mov
test
xor
jae
push
cmpsl
ss
mov
shrb
lods
push
ret
or
mov
xor
sbb
xlat
add
loopne
and
jae
cli
lahf
sahf
popf
insb
aaa
mov
cmc
sub
fwait
clc
fisubl
inc
dec
out
lahf
ret
and
fstl
or
inc
pop
mov
loope
sub
rcrb
cmp
hlt
xchg
lods
push
es
jmp
add
or
ret
inc
sbb
in
or
outsl
inc
pop
mov
adc
popa
and
xor
mov
mov
call
jle
imull
xchg
pop
inc
mov
out
addb
lock
cwtl
lods
add
dec
js
mov
pushf
mov
xchg
mov
rcrb
addr16
jp
mov
dec
and
adc
int
fldenv
xchg
cmp
jecxz
je
jl
das
sahf
xchg
cmpsb
jb
pop
lea
xor
inc
sbb
testb
subl
mov
cmpsb
push
les
or
cmp
adc
decl
fdivrl
stos
in
idivl
cli
jae
cmpsb
push
jecxz
fstpt
cwtl
push
dec
sbb
mov
pop
or
les
inc
xor
into
adc
jo
inc
movsb
pop
nop
fldenv
rorb
sub
repz
inc
bound
cs
mov
push
loopne
xlat
mov
xor
fmull
outsb
pop
xor
inc
inc
xchg
notl
pop
mov
int3
sub
fsubrp
mov
jp
push
sub
les
pop
mov
pop
or
incl
icebp
test
jo
inc
data16
cmp
push
ret
out
jae
xor
or
gs
fs
and
cmp
fs
pop
test
bound
pusha
and
cmp
fbld
jge
cmpsl
push
xchg
pop
mov
cli
mov
js
or
cmpsb
lea
sahf
push
xchg
ljmp
push
sub
das
adc
and
cmpsb
adc
fimull
es
dec
mov
sbb
cmpsb
cmp
js
jg
ja
xchg
cli
sub
notb
and
ljmp
in
adc
test
fstpt
dec
xchg
push
cwtl
push
and
cmovo
sbbl
mov
popf
cmpsl
rorl
sarb
cmpsb
and
testb
and
mov
dec
mov
dec
cmp
in
les
and
fdivl
adc
stos
xor
push
adc
xor
dec
lods
cmpsl
cmp
mov
add
insb
push
pop
xor
cmpsl
mov
mov
ljmp
add
and
dec
out
and
jp
cmpsb
jo
sub
mov
add
jl
in
popf
outsl
aas
adc
mov
jnp
popa
mov
rcrb
lock
in
stos
ljmp
pextrw
das
mov
andl
xchg
ljmp
les
cld
std
push
lods
jge
mov
pop
mov
std
push
mov
jo
aaa
mov
pop
sti
cmp
pop
sub
pmullw
bound
call
dec
or
push
cmp
sub
arpl
in
ljmp
popa
aaa
and
into
into
xchg
push
xchg
call
jmp
and
xchg
fldenv
jle
push
aaa
rorb
imul
push
cs
xchg
in
dec
loopne
pop
dec
cmp
cmp
shlb
mov
xor
pushf
and
push
dec
loopne
gs
addl
pminsw
push
cmpsl
sub
adc
fisubrs
dec
das
adc
nop
adc
and
push
arpl
out
push
jb
cmpsl
mov
lea
mov
shlb
addr16
loope
insb
jp
or
arpl
and
sahf
sbb
cmpsl
xchg
psubusb
jno
aas
and
cld
je
push
add
or
sbbb
movsl
inc
and
pushf
rcpps
loope
cmpsb
in
mov
mov
sbb
es
xor
nop
out
mov
shl
addb
call
lret
xor
and
push
cwtl
or
popf
and
cwtl
ljmp
insb
jne
push
outsl
cmp
mov
pop
stc
stos
int
gs
or
subb
push
add
outsl
and
test
insb
push
int
stc
aaa
mov
xchg
aaa
in
cld
pop
mov
pop
test
mov
mov
push
into
scas
jbe
aas
adc
clc
jae
hlt
add
ss
test
and
mov
mov
daa
cmp
xchg
and
mov
dec
jbe
add
push
xor
mov
clc
xor
test
shl
popa
lods
in
fs
push
xor
pushl
stos
orl
inc
dec
mov
bound
sti
mov
ss
sti
sbb
cmpsb
scas
rorl
xchg
mov
add
push
cmpsb
lea
xlat
push
mov
or
xchg
pusha
push
rcrb
iret
dec
popf
jmp
cmpsl
xchg
pop
lcall
aaa
addl
jecxz
andl
or
fcompl
xor
scas
in
push
dec
xchg
jle
and
sahf
mov
movsl
mov
mov
in
xchg
cmp
lcall
fs
inc
xor
imul
sbb
inc
adcl
stc
lret
sarl
pop
ret
mov
sub
outsb
lcall
sbb
pop
xchg
out
into
ja
push
cmp
rep
cltd
test
aaa
mov
sarl
cmp
add
arpl
push
out
fisubl
scas
movsb
xchg
lods
loopne
mov
adc
or
lods
pop
pop
sti
stc
xchg
push
sarb
mov
dec
cmp
pop
inc
bound
inc
in
cld
aam
xchg
inc
fs
test
mov
sbb
shrb
mov
js
lret
iret
push
jl
popf
jno
stos
pop
lret
push
arpl
xchg
xchg
repnz
cmp
dec
xchg
aad
in
aad
das
cmpsl
dec
mov
pop
imul
cmp
fiaddl
sbb
mov
imul
xlat
xor
lahf
xchg
sbb
dec
push
mov
cmpsb
in
sub
sub
lods
add
out
rclb
lahf
in
xchg
lock
in
or
jp
and
mov
mov
xor
jge
flds
fs
fcmovb
cmc
test
das
mov
add
out
out
lods
sub
xchg
jns
loope
cld
stc
xor
call
jl
ret
or
dec
or
enter
je
add
lret
push
mov
scas
jmp
mov
cvtdq2ps
cmpsb
push
jmp
shrb
or
pop
sub
ficomps
mov
lds
cmpsl
stc
jne
dec
sub
out
daa
ret
cmp
push
popf
cld
test
lock
and
fsts
jecxz
mov
mov
push
jle
loopne
sarl
scas
add
cmpsb
mov
pop
test
mov
movsb
sbb
imul
decl
cli
and
aaa
mov
push
jp
jne
call
pop
mov
adc
test
mov
fdivrs
dec
or
test
push
and
xchg
pop
pop
push
in
cmpsl
and
sti
adc
stos
sysenter
in
test
fdivrs
and
cmp
rclb
jnp
enter
pop
loopne
dec
sub
jg
xchg
cltd
iret
shrb
fs
pop
ss
lret
scas
popa
insb
jnp
js
mov
add
pop
inc
pop
push
imul
inc
je
push
je
jmp
mov
aad
dec
push
in
repnz
mov
or
inc
ror
jne
test
xor
mov
ss
fdivs
cltd
and
loopne
icebp
inc
push
mov
sub
in
loopne
jnp
mov
lds
pusha
dec
pop
push
inc
aam
jno
mov
aam
pop
popf
lret
imul
daa
xor
and
ret
mov
nop
pop
dec
cmpb
movsb
popa
pop
int
into
dec
aad
inc
daa
mov
mov
ret
mov
sti
add
sti
jae
lods
mov
dec
rorb
lret
dec
push
fimuls
out
test
pop
adc
xor
lcall
sub
pop
dec
dec
mov
xchg
cld
cwtl
xchg
push
test
pop
jnp
fmull
jne
loop
lods
js
jo
cs
movsb
lea
pop
inc
adc
std
xor
shll
movsb
in
add
popa
jle
jmp
mov
fisubrl
cld
rcl
jb
jns
mov
sub
rcrl
lock
sub
mov
mov
mov
in
lods
adc
adc
mov
jg
sti
arpl
lcall
push
mov
and
mov
mov
push
sti
cwtl
fs
gs
xchg
and
loopne
add
mov
dec
loope
movsb
and
fcom
sub
xor
inc
aam
push
rorb
jno
and
dec
mov
cmp
es
sahf
xor
in
mov
mov
dec
aas
out
ret
xchg
int3
dec
and
or
push
jbe
into
adc
shrb
sbbb
push
movsb
lods
mov
pop
popf
loopne
ss
xor
jecxz
mov
cmp
cmc
adc
call
pop
xchg
cmp
cmc
add
mov
dec
addr16
sbbl
xor
loopne
mov
mov
inc
repz
imul
pop
lods
ljmp
fs
pop
lds
fiadds
cmp
ja
fstp
std
or
push
imul
es
imul
adc
xchg
sub
xor
fidivrs
pop
int3
outsb
aam
rol
mov
shll
test
dec
lcall
sub
xchg
jne
fcmove
jns
sub
and
xor
lret
push
xchg
ffree
or
mov
or
ret
cmc
adc
inc
xchg
frstor
or
push
adc
mov
imul
fisttpll
add
push
sbb
xchg
out
or
inc
mov
enter
in
pop
ja
push
pusha
push
inc
jae
loope
or
push
cwtl
or
jmp
pushf
mov
in
mov
xchg
push
test
hlt
clc
push
pop
add
adc
std
aad
and
add
inc
sahf
movb
mov
fstps
movl
sbb
pop
daa
or
ficoms
and
sarb
iret
insb
nop
cli
xor
and
fisttps
cmc
push
enter
fsubs
push
icebp
jl
mov
ret
clc
mov
sbb
mov
cmp
lahf
pop
cltd
cmp
dec
fsubl
notb
mov
or
enter
shlb
cmpsb
cwtl
repnz
fwait
push
push
push
aad
and
mov
rorl
test
adc
or
int3
dec
push
inc
hlt
icebp
jp
movsb
sub
inc
sti
inc
fistpl
mov
movsl
sbb
push
into
sub
push
xchg
xchg
aaa
push
mov
and
xor
mov
add
aam
lret
into
jl
stos
dec
and
mov
pop
mov
bswap
dec
stc
jmp
push
adc
cmpsb
shlb
stos
mov
dec
insl
xlat
dec
xor
rolb
and
xchg
int
rol
lret
mov
jg
ja
xchg
enter
or
movsb
xchg
jp
lea
or
xor
inc
js
imul
xchg
xor
fs
rol
dec
mov
lret
add
pop
insb
xor
cwtl
mov
mov
inc
jg
loopne
push
mov
add
mov
add
pop
add
pop
out
inc
cmp
lcall
xchg
dec
clc
ss
inc
pop
xchg
mov
scas
nop
aad
shll
and
ss
jge
or
pop
mov
jp
aas
xchg
in
into
mov
lock
add
int
rcrl
mov
aaa
push
daa
cmp
mov
or
inc
cmp
imul
sbb
stos
jmp
ret
cmp
dec
mov
int3
jp
lcall
xor
fisubs
ret
cmp
mov
xchg
aas
adc
test
pop
scas
scas
mov
repnz
mov
scas
outsb
mov
pop
or
in
stos
cwtl
dec
mull
in
or
push
mov
sub
add
mov
dec
shrb
insb
cs
loope
insl
loope
jbe
fstl
dec
cmpsb
scas
mov
dec
inc
jp
mov
mov
adc
fisttpll
add
mov
sbb
fnsave
out
jae
aam
aam
xchg
jns
incl
shrb
int
in
cltd
rcll
dec
push
jge
jno
jecxz
lock
daa
pop
xchg
xchg
or
mov
sbb
rolb
popl
push
bound
or
repz
pop
iret
fsubrs
lea
fwait
xor
nop
inc
dec
stc
pop
lds
mov
and
pop
and
repnz
cltd
sbb
enter
xor
std
jae
es
clc
xchg
push
div
cwtl
sbb
xchg
sbb
jg
cli
sub
stos
shll
les
aad
clc
outsl
mov
stos
jns
xor
insb
fs
sbb
loopne
fwait
into
out
pop
imul
sahf
cmp
adc
ret
mov
ret
shl
icebp
add
fisubs
jp
pop
loop
mov
xchg
lods
out
scas
mov
add
and
sub
sub
inc
aas
cmp
iret
daa
rcr
out
mov
adc
jmp
mov
mov
hlt
lods
sbb
ja
test
test
std
and
and
pop
fldenv
push
out
cmp
mov
repz
and
arpl
sbb
rcrl
es
fwait
or
fimuls
lods
imul
jle
addr16
xor
fldcw
aas
stc
jne
sbb
cmp
addr16
pop
in
pusha
push
add
test
push
adc
xor
ficomps
jmp
stos
sbb
xlat
dec
and
rorl
cmp
fdivl
mov
dec
and
cmp
xor
ja
mov
lds
pusha
inc
int3
pop
idiv
call
scas
sbb
pop
jl
or
orb
mov
push
lret
jecxz
or
push
negb
movsb
scas
mov
sahf
push
pusha
mov
push
ret
test
inc
xlat
mov
mov
out
cmp
pop
sub
ss
xchg
jae
dec
test
dec
cmp
push
cmpsb
dec
mov
pop
xor
sub
inc
push
mov
push
cltd
inc
dec
add
mov
ret
pop
sub
xchg
push
cmp
jp
out
inc
sub
mov
sub
sub
mov
sub
jl
insl
shl
push
cld
iret
negl
mov
shrl
and
inc
loopne
popf
add
lods
cmp
aam
jns
sub
pop
pushf
repnz
push
test
push
xchg
mov
jns
fidivrs
lds
add
std
jge
leave
inc
adc
les
stos
or
xor
xchg
ss
or
iret
sbb
pop
jbe
mov
lcall
inc
fs
mov
mov
repz
push
add
and
pop
inc
andl
sub
inc
iret
xchg
mov
sub
sbbl
addr16
push
mov
mov
pop
xchg
xor
loope
ss
or
test
mov
stos
sbb
cmp
mov
movl
nop
out
adc
xor
jmp
cmp
inc
testb
es
lods
jl
ss
sahf
mov
pop
inc
sbbl
data16
rcrl
jnp
dec
outsb
aas
cmp
cmp
in
fstpt
mov
js
pop
mov
jge
mov
mov
lahf
dec
negb
movsb
adc
ffree
jmp
test
mov
push
jmp
xchg
sbb
mov
shll
jge
sub
mov
bound
test
inc
cmp
lds
push
repnz
mov
cmpsl
push
roll
rolb
inc
loop
adc
out
out
movsb
mov
popf
gs
je
dec
xor
xchg
stos
repz
nopl
or
popf
dec
repz
es
adc
mov
cmpsl
shr
pop
es
leave
inc
loop
and
mov
and
mov
adc
cmp
pop
and
inc
ret
push
jg
out
push
notb
scas
pop
rep
in
stos
lods
sub
mov
test
adc
inc
out
test
cmp
dec
xor
imul
das
es
fdivrl
fcomps
into
pushl
call
add
sbb
insl
sub
pop
add
stos
push
loop
xchg
sub
xor
shrl
xchg
cmp
xlat
mov
and
jp
jg
xor
shlb
add
xchg
push
push
adc
add
or
or
mov
ret
xor
jae
xchg
stos
pushl
add
xchg
js
hlt
mov
mov
or
fcomps
sub
sahf
outsb
mov
mov
and
jecxz
and
add
pushf
dec
ret
sub
orb
inc
fmuls
and
mov
inc
data16
inc
dec
pop
pop
ss
pop
add
sbbl
cmp
push
loop
aaa
outsb
dec
addr16
mov
subb
jmp
sbb
mov
xor
mov
sbbb
lret
pop
test
fistl
push
pop
rcrb
call
cmpsl
inc
fnstenv
cmc
aas
out
jmp
jns
fwait
test
loopne
cmp
sbb
adc
adcl
out
mov
sbb
cmp
out
sbb
inc
adc
cmp
inc
add
mov
inc
xchg
ljmp
sub
xor
std
nop
in
aas
imul
sub
adc
ds
mov
lcall
fdivrl
rcrb
repnz
insl
cmp
je
xchg
sbb
xchg
inc
add
xchg
leave
adc
xor
dec
in
mov
stos
das
xchg
xchg
fiadds
cmp
pop
test
mov
sbb
push
xlat
shl
pop
mov
inc
orl
mov
out
push
and
mov
xchg
cmpsl
pop
push
adc
ss
push
dec
xor
das
lods
mov
xor
sub
adc
fwait
loope
jo
and
inc
rcll
fs
cmp
mov
in
stc
or
xchg
sub
int3
mov
in
fstpt
mov
lds
fdivr
loopne
adc
lcall
fdiv
mov
cmpsb
lods
jmp
das
shl
cmp
lods
loopne
mov
inc
cmp
ret
pop
pop
pushf
pop
cmp
and
cli
int
scas
rorl
pop
mov
fadds
rcll
push
fs
and
mov
loope
sti
cmc
jo
imul
in
shr
arpl
mov
imul
mov
mov
packssdw
mov
xor
cmp
repz
xchg
sbb
sub
out
jns
cmp
fs
data16
int
inc
jns
in
testb
sbb
test
lds
and
pop
aam
pop
inc
dec
xchg
add
cli
mov
pop
movsb
inc
inc
cs
add
xor
jge
jecxz
or
mov
stos
popf
mov
out
xlat
mov
xchg
adc
fbstp
dec
mov
cwtl
xchg
cmp
mov
mov
mov
dec
popf
jbe
push
subb
data16
cwtl
icebp
sti
sbb
pop
mov
sbb
pop
aas
or
and
sbb
das
nop
into
mov
pop
mov
push
xchg
sti
cmp
fdivs
fnstcw
or
pop
mov
jp
outsl
movsl
mov
mov
addr16
ret
and
mov
lods
xor
push
or
lock
sbb
insb
outsb
dec
fldcw
pop
push
scas
js
loopne
stos
push
lret
push
cli
mov
cwtl
clc
mov
mov
fstp
fisttpl
rclb
lret
popf
arpl
mov
cmp
push
hlt
mov
jae
dec
sbb
dec
xchg
ret
movsl
lods
pop
or
and
jp
sahf
pop
movsb
xor
lret
imul
push
xor
fs
mov
data16
xchg
daa
jecxz
lock
cmp
bound
or
js
pop
sahf
adc
pop
popa
div
push
in
mov
fs
sti
mov
repz
lahf
adc
cmc
jg
popl
xchg
ret
inc
mov
xchg
push
roll
aaa
inc
or
cltd
ret
xlat
imul
inc
hlt
addr16
or
add
insl
push
pushl
jne
cli
testb
sub
push
in
nop
pop
cmp
lahf
ds
add
or
pop
lahf
incl
fiaddl
dec
xchg
aas
add
mov
fimuls
sub
and
adc
ret
imul
xor
mov
or
push
mov
les
ljmp
mov
ret
inc
movsl
mov
cmp
out
outsl
rorl
push
daa
add
jno
stos
add
xor
jecxz
sub
jno
cmc
mov
je
fbstp
sbb
push
jp
add
shrl
loope
bound
popf
stc
push
fs
mov
pushf
mov
mov
add
ja
jbe
stos
in
andl
jo
mov
cmp
inc
ljmp
push
lcall
clc
mov
mov
outsb
xchg
or
clc
adc
push
leave
pop
mov
sub
inc
int3
clc
sahf
inc
sti
mov
mov
stos
xor
pop
push
scas
mov
add
cmp
es
xchg
sub
aaa
outsl
dec
push
mov
insb
and
xchg
pop
dec
and
mov
xor
scas
fldl
leave
jo
lret
add
loopne
xchg
jge
andb
push
mov
add
mov
add
mov
andl
insb
dec
sbb
fcmove
aam
shlb
ficoml
push
mov
lea
xor
imul
jns
cli
add
push
add
push
mov
push
clc
out
mov
addr16
paddsw
daa
inc
adc
fwait
xchg
jp
inc
popf
repz
lods
xlat
add
repnz
mov
push
sub
adc
fidivs
insl
xchg
mov
loope
ss
inc
push
pop
in
sbb
mov
or
inc
roll
jne
decl
iret
xchg
push
mov
repz
xor
pop
ret
repnz
xor
orl
loop
popf
inc
lods
imul
aam
cmpl
adc
call
sahf
adc
dec
adc
mov
imul
cli
sub
adc
or
mov
pop
xor
inc
sahf
sti
add
mov
cmpsl
sub
lahf
stos
xor
loopne
loop
dec
xlat
dec
cld
sub
out
outsl
imulb
int
imul
fdivs
cltd
mov
call
js
cmp
adc
in
mov
out
mov
jbe
jnp
dec
lods
dec
std
fimuls
mov
sub
scas
adc
int3
dec
sbb
lcall
push
stos
scas
or
in
mov
push
add
jmp
daa
add
fsubl
fisttpll
out
lcall
add
cmpsb
mov
sti
shll
ljmp
cmp
push
dec
push
int3
insb
xchg
fsubrl
fisubl
jnp
das
lock
adc
push
inc
fstps
mov
popf
movsb
lcall
imul
shrl
sbb
fcoml
lds
in
ret
mov
rorl
rep
movsl
test
jmp
add
ret
ljmp
pop
add
fwait
loope
push
movsb
push
fnstsw
inc
mov
pop
adc
and
shrb
dec
push
xor
ret
jnp
push
fsub
stos
jmp
ja
or
xchg
lea
insb
jbe
pop
mov
jecxz
cmp
push
gs
push
pop
cmp
jle
dec
and
pushl
std
mov
scas
push
lock
xchg
mov
jae
jl
add
sbb
mov
lods
mov
jmp
enter
add
dec
enter
sbb
inc
mov
mov
nop
mov
insl
jbe
dec
push
mov
fldt
and
scas
mov
jl
mov
test
fiaddl
test
push
shll
mulb
mov
add
dec
or
repnz
push
inc
pop
out
aaa
add
jle
ret
scas
test
jmp
js
push
popa
sub
test
mov
xchg
cmp
scas
sarl
sbb
mov
mov
and
popa
cs
repz
imul
adc
mov
leave
xchg
pop
xchg
clc
fdivrs
loop
push
popf
inc
leave
hlt
incb
jp
mov
insb
sub
add
jle
xor
mov
shlw
push
or
xor
mov
data16
outsb
jno
cwtl
push
shl
push
imul
pop
push
mov
lret
cltd
mov
ja
xchg
lret
stos
pop
cld
xlat
mov
sub
xchg
out
push
fdivl
mulb
cmc
pop
rcrw
cltd
aas
bound
inc
jmp
in
lahf
mov
add
std
dec
mov
adc
sahf
push
ss
push
scas
add
movsb
mov
inc
jns
in
in
scas
out
pop
mov
cmc
cmp
repnz
ja
popf
push
pop
int3
je
pop
in
cmp
push
jb
xchg
dec
cmp
lcall
ror
aam
lock
dec
inc
xchg
sbb
push
lret
xlat
insb
adc
and
imul
inc
js
popf
subb
mov
add
shl
dec
jp
and
mov
shlb
ja
xchg
or
or
mov
mov
inc
lock
mov
mov
cmp
add
add
scas
xor
loope
pusha
jge
dec
dec
add
mov
dec
pop
cmp
leave
jno
xchg
mov
fcmovb
jle
cld
rcrl
or
mov
xchg
orl
test
xchg
in
add
adc
mov
lahf
push
xchg
pop
push
stc
das
push
imul
insl
aas
mov
mov
mov
and
cmp
cmp
lds
xchg
cmp
in
inc
add
cmp
mov
cli
jno
pop
mov
sti
push
or
pop
cmp
dec
std
cmp
jno
out
test
mov
fimull
mov
in
call
push
push
mov
faddl
fwait
lret
mov
test
movsb
addl
idivl
call
pop
dec
cltd
outsl
fcmovnb
lret
rorb
mov
xlat
leave
lcall
scas
neg
and
loopne
shll
cmp
ret
mov
add
xor
mov
sub
dec
mov
enter
and
xchg
inc
imul
jae
jne
jne
popa
popf
lret
gs
stc
xor
mov
cli
inc
pop
adcl
xchg
loope
jmp
addr16
add
insl
leave
sbb
jg
push
xchg
dec
jb
mov
jb
add
jl
push
jge
lret
xchg
adc
mov
enter
addr16
in
imul
int
sbb
sub
mov
xor
dec
les
fldt
adc
mov
pop
mov
popa
outsl
add
aaa
aam
xchg
cs
jno
or
cmp
add
dec
rcrb
fmul
in
leave
mov
imul
or
xor
jae
jae
xchg
inc
out
mov
scas
add
push
mov
sub
sub
xchg
adc
mov
sub
addr16
cwtl
mov
dec
jmp
std
loope
adc
xchg
fsub
dec
dec
pushf
sahf
out
cmp
inc
movsb
pusha
or
cld
in
pop
adc
sub
jecxz
sub
pop
decb
adc
xorl
xchg
cld
popa
adc
jne
sbb
push
ljmp
movsb
mov
mov
or
fwait
test
push
push
inc
pushf
int3
shl
sarb
and
adc
adc
and
inc
inc
xchg
mov
and
out
cmc
lods
shrb
loop
lret
and
icebp
or
xor
lea
mov
push
dec
cs
pusha
icebp
stc
and
or
pop
inc
imul
inc
lahf
mov
jno
jl
jmp
xor
add
dec
adc
xchg
es
pop
scas
popa
aad
sbb
adc
out
out
inc
inc
cld
cltd
mov
or
jg
xchg
out
cli
lods
fcoms
mov
xchg
ljmp
in
jg
jne
push
xor
mov
mov
ret
fnstenv
fldl
xchg
dec
push
sub
xchg
adc
arpl
mov
ljmp
andl
js
jecxz
ficompl
adc
loopne
std
mov
fcom
or
testb
aam
mov
push
mov
stc
fimuls
fmuls
out
xchg
jle
sbb
and
push
mov
lfs
push
loopne
daa
jo
xchg
loop
outsl
inc
jns
rclb
out
pop
gs
xor
pop
adcl
mov
mov
push
lds
pop
mulb
sbb
and
mov
xchg
test
out
mov
insl
ss
mov
and
popa
mov
outsl
xchg
pop
test
push
push
rclb
lods
or
inc
sarb
jo
sub
push
add
xchg
loope
mov
stc
in
sub
mov
sahf
xlat
stos
add
jo
cli
jo
popf
int
imul
mov
popa
cmp
xchg
mov
pop
lret
mov
jg
movsb
in
inc
popa
mov
aam
pop
daa
cmpsl
mov
sub
shll
je
xchg
pop
nop
sub
cmp
push
clc
cs
pop
sbb
push
cld
add
lret
mov
fwait
shrb
imul
jecxz
loop
fwait
lods
push
mov
out
xchg
pusha
add
push
xchg
test
dec
pop
push
insb
das
sbb
decb
xor
popf
rcrl
loop
mov
add
dec
rorl
push
mov
imul
out
inc
psrlq
stc
test
sbb
les
dec
jne
jmp
dec
aam
fisttpl
adc
ret
loope
push
xor
sub
lret
pop
ss
xchg
sti
adc
fcoml
jp
xlat
or
or
rcrb
popf
mov
cli
and
inc
fnstenv
aas
dec
in
lret
mov
push
in
loope
sbb
shll
fsubrp
scas
adc
jle
ds
loopne
sbb
imul
or
test
pop
and
test
sahf
push
sub
adc
add
pop
adc
scas
mov
insl
jns
pop
push
or
xlat
es
sbbb
jp
lcall
push
sarl
jo
jl
jbe
and
lret
cld
jl
shl
and
push
inc
loop
out
adc
aad
popa
push
inc
mov
adc
mov
movsl
mov
gs
adc
lcall
mov
adc
xchg
cmc
mov
dec
or
add
test
notb
jl
cltd
jge
outsl
xor
jb
mov
dec
adc
sbb
popf
insl
jge
jg
mov
hlt
jne
and
dec
cmp
jecxz
sub
imul
mov
jb
and
stc
or
sbb
and
gs
pop
outsb
lock
in
dec
sub
dec
pop
outsl
mov
push
arpl
lret
shlb
out
fwait
into
inc
xchg
loopne
mov
mov
loope
fisttpl
pop
shrl
icebp
push
cltd
fisubrl
hlt
not
lock
sbb
dec
pusha
rorl
pusha
jecxz
sbb
adc
imul
pop
ret
setb
mov
push
bound
or
stos
std
js
lcall
xchg
stos
fiaddl
push
jb
dec
jne
fwait
test
mov
outsl
inc
mov
jbe
out
dec
mov
or
out
mov
cmc
xchg
xchg
out
lcall
fwait
dec
out
sub
addb
adc
mov
mov
cmc
aam
xchg
cmp
push
mov
mov
sbb
adc
scas
sbb
repz
sbb
inc
scas
fs
pop
cmp
pop
clc
das
or
mov
rcll
icebp
cld
rolb
xchg
popa
and
push
hlt
mov
dec
cmp
adc
out
mov
xchg
lret
dec
int3
cmpsb
lcall
pop
xchg
not
rolb
inc
shlb
xor
mov
mov
imul
stc
push
inc
aaa
shlb
test
fsub
pop
imul
add
or
dec
bound
adcl
in
dec
adcl
sbb
repz
test
test
imul
fwait
ret
fists
add
dec
dec
sbb
sbb
fwait
loope
outsl
sbb
jecxz
push
mov
ja
adc
or
xor
sub
add
mov
sarb
ljmp
mov
std
xchg
mov
push
jmp
add
push
inc
ret
movsl
stos
push
loop
lods
sbb
pop
lods
xor
sti
mov
mov
fcomps
jmp
popf
popa
jae
pop
test
xchg
aam
sub
rcrl
xor
shufps
outsb
inc
test
ret
inc
enter
mov
xchg
cli
xchg
push
in
shrb
pop
cmpsb
jmp
dec
or
adc
psraw
repz
jbe
add
insl
and
mov
dec
lahf
pop
sbb
cwtl
lds
xor
dec
jno
mov
lods
mov
jne
inc
mov
or
mov
sbb
push
cmp
hlt
loopne
loope
fdivr
call
jb
lret
cli
inc
cmpsl
push
adc
xor
sbb
sbb
jl
imul
cmp
xor
push
inc
int
adc
in
cmpsl
and
mov
mov
mov
fisttpll
andl
addr16
pop
shl
or
lods
mov
ja
mov
mov
outsl
or
stos
fs
jne
inc
jmp
xor
mov
and
outsl
mov
push
cld
dec
int
into
ret
xor
mov
mov
or
ljmp
hlt
iret
fcompl
cli
mov
in
dec
jno
mov
cmc
sti
add
sub
push
jae
push
imul
clc
xchg
sbb
mov
jmp
or
js
in
sub
rol
add
jnp
out
pop
push
sbb
or
sbb
and
repz
mov
jge
xor
push
sarl
jge
jmp
mov
cltd
stos
inc
lret
aad
shrl
xor
sub
cld
orb
mov
xchg
je
jno
fucomip
cmpsl
and
cmp
fwait
cmpsl
adc
std
andl
insb
lds
xchg
sahf
cwtl
xchg
jb
sub
mov
and
jnp
scas
push
xor
push
int
popf
inc
ja
lahf
xchg
dec
add
int
mov
aam
in
pop
cmc
mov
sub
addl
sub
sti
and
mov
add
mov
push
mov
mov
fstl
bound
mov
shrb
insl
dec
cmc
cs
shl
imul
xchg
pop
mov
ds
lock
and
inc
push
test
jnp
pop
lods
mov
adc
cli
push
test
inc
xchg
pop
dec
movl
or
data16
out
and
es
pusha
push
iret
lret
jnp
cmc
aaa
dec
stos
in
movsl
addr16
repnz
jae
pop
dec
cmp
sbbb
imul
cltd
push
notb
pop
call
in
mov
jecxz
adc
mov
xchg
mov
cmpsl
pusha
inc
xor
cmp
cmp
insl
outsb
fwait
xor
imul
sbb
push
mov
cld
inc
mov
icebp
lock
sbb
pop
je
add
sbb
aad
sbb
lock
stc
xchg
xlat
orl
xlat
rcl
outsb
mov
fbstp
push
ficoms
fsubr
add
lods
cli
sbbb
int3
clc
mov
mov
mov
pop
or
scas
jo
bound
or
mov
scas
popf
shlb
ja
pop
and
in
mov
ret
pop
ss
sub
pop
lea
dec
arpl
out
jns
pop
cmp
pusha
inc
std
push
cwtl
das
out
xor
vpmulhrsw
jle
fcomi
dec
in
push
or
add
push
iret
fisttpl
int
jns
ret
push
mov
inc
stc
sub
js
jecxz
stos
jle
pop
cmc
inc
shlb
xchg
jge
adc
roll
scas
test
test
pushf
dec
inc
clc
js
test
pop
xchg
mov
in
pop
incl
sub
outsb
test
hlt
mov
cmp
adc
leave
fisttps
sbb
shl
sbb
push
pop
in
mov
insl
mov
adc
lods
jle
in
mov
sbbl
dec
mov
sbb
dec
pushf
mov
pop
xor
xor
sqrtps
ds
out
shll
sub
ss
mov
fisttpll
shll
pushf
xchg
stos
roll
andb
cmp
xchg
or
jp
mov
lahf
in
in
inc
cli
inc
adc
or
repz
or
in
push
xchg
popa
and
ret
into
add
mov
out
cwtl
mov
je
arpl
sub
jae
fstl
and
mov
jl
dec
jae
bound
mov
inc
leave
std
ss
xor
clc
push
daa
inc
mov
dec
into
and
sub
xchg
inc
sbb
stc
pop
int
cmpsb
loope
out
loope
mov
push
sbbb
mov
mov
xchg
test
adc
ja
add
cwtl
call
insb
fnstsw
dec
push
filds
scas
dec
and
scas
arpl
inc
add
rcl
dec
jge
lret
hlt
iret
int
and
es
pop
push
push
xor
mov
sbb
leave
cmpsb
cmc
dec
sub
cmp
ja
pop
jb
cld
out
repnz
orb
mov
push
outsl
lea
jg
test
mov
fwait
insb
add
outsl
sbb
subb
xchg
mov
xchg
mov
mov
subl
into
inc
mov
ret
push
or
mov
shlb
aaa
push
insl
push
cwtl
into
orl
mov
xchg
int3
icebp
cli
negl
fstps
scas
pop
xchg
shr
aas
jge
jne
stos
mov
cmp
std
or
push
inc
addb
xor
xchg
test
ret
mov
inc
push
out
sarl
pop
lahf
inc
or
jmp
jb
mov
cltd
sub
pop
push
addl
fsubl
js
pop
jbe
push
and
sbb
mov
ss
mov
mov
clc
mov
out
jnp
lods
js
flds
sbb
xchg
xor
test
out
pushl
shll
je
js
inc
popf
movsb
or
xchg
push
push
sbbl
rol
stos
fbld
push
aam
dec
sahf
bound
ret
pusha
mov
push
mov
adc
dec
leave
add
scas
add
rcll
pop
hlt
ret
lods
mov
push
icebp
sbb
mov
and
mov
mov
imul
push
sbb
lock
insl
insb
add
icebp
xor
xchg
int3
neg
mov
cld
pop
sti
aam
mov
push
mov
incl
sub
lret
addr16
cmp
xchg
mov
jp
imul
pop
push
sub
pusha
fildll
cmp
push
loope
iret
repnz
mov
add
mov
xor
pop
stos
cwtl
sub
pop
fwait
sbbb
ljmp
ficoms
jb
xor
or
jle
repz
inc
sbb
push
cmp
pusha
sbbl
jmp
lds
jl
mov
jecxz
aad
iret
stos
in
cmp
and
dec
sarl
cld
loope
xor
mov
data16
inc
ja
cli
lcall
xlat
dec
test
aad
pushf
jg
shlb
shll
sbb
inc
cmc
mov
xchg
push
adc
push
call
scas
pop
ret
and
xchg
inc
inc
ror
ss
mov
ja,pt
dec
das
pop
xor
and
sahf
push
in
iret
pop
cmp
ret
in
mov
sbbl
cmp
cli
sub
cmp
sti
dec
enter
mov
test
xor
gs
ljmp
inc
dec
mov
scas
cmp
stc
pop
sub
or
imul
mov
out
lods
pop
push
inc
leave
xchg
jbe
arpl
sahf
ror
test
stc
push
enter
mov
lahf
xchg
fisubs
adc
insl
repnz
imul
stos
iret
mov
mov
mov
jmp
fistpl
idivb
adc
cld
add
jae
xor
push
xor
inc
pop
xchg
addr16
mov
pop
lock
outsb
sti
pop
mov
lret
and
loop
leave
dec
add
lcall
xor
adc
pop
push
lea
outsb
popf
push
popa
sbb
je
lcall
xor
xchg
xor
add
movl
in
fwait
pop
imul
mov
mov
xchg
dec
jbe
mov
call
std
adc
jecxz
fxtract
mov
push
outsb
mov
xor
lods
sahf
insb
or
dec
rcr
nop
movl
out
lds
das
pop
xchg
testl
mov
icebp
sbb
and
or
int
outsb
adc
out
cld
aam
jg
cmp
cmp
rolb
dec
mov
test
cmp
jge
jno
xchg
and
fidivrs
inc
enter
in
xlat
faddp
sbb
das
inc
mov
push
scas
ret
bound
pop
xchg
inc
sbb
or
lods
imul
xchg
mov
aad
cmp
dec
ljmp
jb
ret
dec
decb
imull
mov
pop
xchg
xchg
hlt
jle
cmp
arpl
cli
pop
sbbb
sbb
mov
leave
clc
dec
cmp
mov
cmp
inc
mov
ja
orl
xchg
adc
fisubl
inc
cmp
sbb
adc
xlat
inc
daa
push
xchg
mov
mov
in
aam
cwtl
pop
or
es
mov
mov
mov
lcall
add
mov
mov
inc
adc
mov
cmp
aam
in
ret
rorb
or
jmp
mov
or
inc
test
or
adc
cmpsl
fimull
lods
push
push
add
icebp
mov
jg
pop
test
insb
fldl
push
push
lock
push
push
push
pop
sub
pusha
outsl
in
jno
or
cmpsb
mov
mov
gs
cwtl
jle
jmp
lods
cmpsb
rcrb
sahf
mov
and
lds
ret
test
mov
mov
subb
fdivrs
and
mov
subl
mov
stos
sbb
dec
cmc
loop
pop
repz
pop
test
daa
addr16
imul
mov
cmp
sarl
popf
jb
mov
stc
mov
in
push
repz
inc
xchg
mov
dec
ja
mov
mov
push
outsb
push
mov
sub
std
fdivl
ret
sahf
sub
cmp
sar
pusha
mov
sahf
and
sbb
fsin
xlat
or
mov
notl
jle
or
push
imul
and
jp
add
jo
pop
mov
aad
xchg
add
int
pushf
inc
and
popf
out
jae
sbb
adc
loope
mov
out
push
mov
lahf
fmull
lcall
in
mov
inc
mov
jle
out
mov
movsl
lock
sbb
cmp
out
es
push
jmp
and
inc
jne
clc
cmc
mov
gs
lods
cmpsb
insb
aas
or
adc
mov
adc
mov
adcl
xchg
pop
and
nop
xor
inc
jae
ret
in
aas
jmp
adc
andl
stos
fsqrt
js
clc
mov
sbb
or
pandn
loopne,pn
lcall
jle
aad
pop
push
insb
test
mov
jne
jecxz
mov
gs
pop
inc
cmp
cmc
stos
loope
test
sub
sti
push
js
subl
imul
and
xor
adc
or
adcb
inc
test
dec
jmp
js
jmp
push
sahf
mov
subb
sbb
dec
cltd
sahf
data16
cmp
je
inc
pop
mov
jmp
fnstcw
inc
rcrb
inc
cld
inc
fmull
add
fdivrl
jo
push
add
jnp
pop
jb
adc
pop
lods
adc
dec
adc
jb
mov
loope
aaa
pop
mov
mov
push
pusha
fiadds
aam
mov
mov
repnz
movb
addl
out
aaa
xchg
jns
jp
sub
push
je
jnp
pop
sbb
mov
mov
xorl
in
out
imul
iret
fstpl
dec
mov
sub
iret
jecxz
fs
sub
pop
and
cmpsl
scas
and
das
shl
mov
xchg
xor
sub
push
inc
std
js
inc
movsb
mov
mov
call
lock
rorb
shrb
pop
push
xchg
es
shlb
test
sub
imul
cmpb
or
mov
adc
incl
in
inc
xchg
jb
fwait
arpl
xchg
xor
mull
cmp
sub
lsl
jo
and
adcb
cmpsb
lods
lods
aaa
adc
pusha
scas
enter
int3
jns
mov
out
aam
lea
mov
jg
or
add
inc
dec
inc
fimull
stos
pop
lock
hlt
mov
push
icebp
jae
sbb
aad
adc
xchg
pop
ret
or
mov
mov
cmpsb
stos
push
addr16
jecxz
std
cwtl
pop
hlt
loopne
sub
fldt
pop
es
mov
mov
jg
push
sbb
mov
hlt
cmp
mov
scas
outsb
test
lahf
int
jge
sub
sub
hlt
adc
dec
imul
stc
jmp
gs
sbb
test
jo
dec
js
or
pop
xor
mov
bound
xchg
std
mov
add
mov
add
dec
je
jo
jno
rorb
cmp
jmp
mov
ret
movsl
xchg
cmp
pop
and
popl
shll
pop
add
add
rcrl
mov
mov
sarb
flds
mov
inc
pop
jnp
mov
mov
xchg
repnz
popf
ret
test
sarb
nop
push
out
pushf
rorb
or
sub
addb
xorb
push
mov
ja
jmp
jle
idivb
and
cpuid
cmp
popa
jle
pop
mov
pop
or
imul
jb
adc
movsl
int3
cmp
push
cld
adc
testb
xchg
movsl
sub
jbe
push
push
lods
rcrb
cltd
push
mov
xchg
adc
aaa
pop
in
icebp
adc
pop
sbb
scas
adc
sbb
pop
or
leave
sub
sbb
or
dec
adc
push
dec
popa
scas
mov
pop
lds
inc
hlt
jle
add
xor
jecxz
jbe
loop
xchg
lods
cmpsl
jo
addr16
push
push
and
ret
leave
loope
shll
cmp
pusha
mov
ja
loopne
popf
jne
hlt
mov
or
push
cmpl
lcall
push
mov
adc
out
test
insb
xchg
daa
movsb
test
add
mov
in
jae
xor
je
daa
cwtl
fdivs
aam
pop
daa
out
sub
pop
les
push
sub
push
rcr
xlat
in
sti
cmc
shrb
xchg
sub
mov
loope
inc
or
xchg
fwait
push
jmp
sahf
lods
movsb
xlat
mov
adc
add
ss
out
mul
arpl
orb
arpl
test
cmp
pop
loop
out
xchg
mov
xchg
rorb
dec
int3
adc
in
push
lcall
movsb
pop
jnp
fucomip
ja
jae
negl
pusha
outsl
jp
pop
lea
std
scas
in
dec
or
out
ss
orb
push
mov
enter
cmovne
int3
pushf
shrb
add
mov
cmp
add
popa
sbb
xor
mov
jbe
dec
in
cmpsl
mulb
rclb
lock
inc
popf
mov
sbb
movsb
push
xchg
or
push
jmp
ds
mov
ja
and
outsb
push
jno
mov
mov
adc
daa
or
dec
test
xor
sbb
pop
out
push
lahf
add
xor
lods
jge
adc
dec
dec
push
push
in
adc
sbb
mov
xchg
dec
aad
xchg
lock
imul
subb
data16
jae
cmpsb
aaa
cmpsb
add
pop
int3
xor
jo
imul
pop
add
loop
ss
in
rcrb
add
xchg
dec
mov
lods
jl
stos
cmpsl
jecxz
test
repnz
scas
lret
push
cmp
sbbb
xchg
popa
mov
sbb
shr
out
jecxz
mov
xchg
sar
add
or
mov
pop
push
pcmpgtb
shll
mov
int3
cltd
js
xchg
jno
inc
cwtl
mov
in
rol
bnd
inc
jecxz
lock
das
nop
rcrl
popa
loopne
jns
jbe
repnz
stos
out
inc
sbb
jg
dec
ret
mov
dec
lods
inc
pop
dec
jl
inc
sbb
dec
fwait
mov
push
ljmp
insb
xchg
in
iret
push
scas
pop
loop
lcall
dec
mov
stc
adc
decb
shll
jb
shlb
test
jae
mov
mov
shrb
xchg
cmp
pop
pop
push
inc
mov
xchg
push
fimull
jno
rorl
xchg
pushf
insl
inc
mov
cmpsl
cmp
pop
push
xor
push
repnz
fs
adc
mov
sbb
inc
pop
push
out
pop
dec
xor
add
xchg
les
pop
fisubs
sub
push
or
cmp
cmp
mov
and
pop
mov
and
fiadds
cmp
test
sahf
fpatan
xchg
mov
sub
dec
and
pop
stos
movsl
cltd
into
jle
loope
rclb
inc
loope
add
pushf
iret
or
jle
inc
and
rolb
xchg
add
mov
movsl
dec
pop
pop
push
ja
movsb
insb
sbb
aas
jbe
or
pop
xchg
cmpsb
daa
sarb
sub
mov
xchg
mov
push
aam
mov
pop
push
dec
inc
sbb
lret
sub
fwait
sti
sbb
les
fwait
cld
sbb
shr
inc
lea
push
hlt
ret
push
pop
cmpsl
icebp
jecxz
aas
dec
and
lret
push
pop
xor
or
fs
es
sti
jmpw
mov
loopne
xor
movsb
push
std
jp
js
call
les
lods
vmovupd
mov
push
push
test
push
dec
arpl
push
mov
cmp
pop
ja
lret
lea
enter
andl
sbb
daa
xchg
loopne
sbb
add
push
inc
outsb
imul
cmc
or
cmp
cmc
int
xchg
fists
rclb
daa
or
xchg
les
or
divb
dec
or
in
jnp
fsubrs
xchg
add
aad
pop
mov
imul
aaa
xchg
cli
mov
imul
mov
push
addr16
mov
mov
ret
mov
mov
or
je
mov
sub
call
mov
pop
orb
add
sub
sbb
cmp
push
daa
push
out
test
push
rclb
pop
jnp
push
loopne
sub
jle
push
xchg
in
sbb
xchg
pop
sbb
lods
scas
inc
hlt
mov
adc
mov
test
lret
mov
sub
dec
jb
sub
mov
mov
sub
inc
mov
es
xchg
divl
dec
stos
sbb
orl
jae
sbb
fldt
xchg
xchg
jg
xor
lret
rolb
fwait
test
sbb
sbb
and
pop
cmp
out
popf
cmp
jno
shl
sub
ja
xor
icebp
and
xor
rcll
push
lret
cmpsl
xchg
dec
cli
js
cmp
adc
pusha
mov
jo
clc
sti
arpl
xlat
insl
inc
and
jnp
cmp
out
cmp
dec
and
adc
lahf
xchg
push
aas
shr
dec
mov
xor
jae
shll
int3
mov
inc
and
push
pop
dec
das
fdivs
adc
das
xchg
fcomip
mov
ret
cltd
xor
mov
mov
aaa
or
mov
in
jl
loop
and
mov
sbb
push
push
push
mov
pop
adc
inc
mov
bound
mov
stc
movsb
xchg
scas
stos
add
shl
add
jmp
es
stc
mov
adc
and
push
and
mov
addb
in
es
insl
lret
add
dec
jb
mov
cltd
push
test
and
mov
lods
std
orl
or
inc
in
xor
loop
xchg
pop
add
ret
xor
out
cmpsb
enter
cmpsl
mov
mov
inc
adc
mov
stc
aas
push
push
shlb
xchg
jns
outsb
mov
pop
lds
inc
mov
xchg
and
jb
sbb
cltd
lods
arpl
mov
aaa
sbb
mov
push
test
inc
test
out
movsl
roll
rolb
cmp
inc
ret
adc
pushf
imul
inc
or
add
xchg
jae
sbb
shrb
and
fsubs
jnp
mov
pop
in
xchg
addb
adc
lret
dec
arpl
movl
jo
or
movsl
arpl
push
addr16
dec
vcvttps2dq
mov
ret
fidivl
adc
faddl
lods
push
iret
mov
and
add
and
pop
fiadds
jmp
jecxz
lods
sbb
mov
pop
lret
je
scas
stc
fstp
dec
xchg
int3
and
add
sub
out
orb
mov
dec
mov
pushf
test
mov
mov
movsl
int3
adc
lcall
jg
shll
cmp
cltd
mov
jnp
cvttps2pi
popa
mov
jp
push
loop
cwtl
fisubrl
test
and
and
pop
gs
ret
pop
repz
jne
icebp
mov
xor
fistpll
roll
xchg
popa
xchg
rolb
cld
cmpsl
jnp
fs
add
fsubrp
mov
cmc
cs
stos
jmp
sbb
cmp
and
aad
sub
sti
jo
fcompl
push
out
and
incb
push
pop
dec
xchg
jle
mov
push
push
adc
push
mov
mov
sub
cmpsb
pop
es
cmp
add
or
fadds
inc
jo
push
or
mov
push
push
inc
mov
ret
in
mov
sbb
addr16
xor
pop
lret
push
pushf
ja
sub
sar
and
sbb
add
push
aam
sti
rorl
jae
repnz
jg
fnstcw
mov
fildl
push
js
push
and
rclb
push
sbb
imul
inc
cmp
and
mov
ret
lods
xlat
inc
mov
sahf
bound
scas
das
add
push
mov
insb
insb
inc
ret
std
and
inc
adc
mov
add
jns
adc
leave
imul
scas
pop
sar
jns
jmp
dec
inc
cmc
hlt
jecxz
mov
add
mov
sahf
popf
jne
adcl
imul
leave
dec
rcll
in
cmp
jge
push
xchg
mov
sub
ljmp
cmp
ret
js
testl
xlat
add
cmp
dec
jo
mov
add
mov
fsubl
cmovs
popa
faddp
jle
fisttpl
in
mov
jno
jb
sub
sub
std
push
cltd
or
aad
loopne
out
jmp
inc
sar
push
mov
in
hlt
jo
cwtl
test
hlt
mov
mov
mov
pop
adc
and
mov
test
inc
imul
repnz
jno
lret
loope
test
int
leave
cmp
xlat
lods
aam
push
pop
movsl
call
xchg
nopl
pop
loopne
or
hlt
cmpsb
fdiv
sbb
adc
jg
push
push
push
repz
xchg
mov
rcll
pop
inc
pop
jecxz
cltd
jne
mov
mov
xor
fs
push
ss
cmp
xchg
pushf
scas
lret
xchg
cmp
rolb
mov
in
xchg
push
in
dec
cmpsl
mov
inc
mov
sub
mov
mov
imul
push
insb
jae
pop
cmpsl
test
jp
pop
out
mov
ss
cmp
ret
iret
imul
ds
mov
ljmp
mov
mov
cwtl
jp
jecxz
cltd
mov
sub
mov
in
inc
movsb
test
es
adc
ret
fcomip
mov
pop
shll
xchg
xor
cmp
test
jo
sub
aad
rcr
fwait
xor
jne
into
push
lds
das
jl
add
and
inc
imul
arpl
fsubrs
cmp
xchg
push
jl
lds
mov
dec
sbb
xor
dec
and
lahf
dec
int
lods
adc
push
inc
push
jne
xchg
jecxz
xor
popf
insl
dec
pop
dec
iret
dec
nop
fistpll
test
sub
divl
cmc
xchg
add
or
sarb
push
insl
cwtl
jg
mov
cltd
sbb
loop
popa
lock
adc
xchg
push
aaa
mov
sbb
pop
cli
xlat
xchg
dec
pop
jp
xchg
fstpt
push
pop
push
test
adc
adc
adcl
movb
je
dec
adc
jg
inc
adc
cmp
cmpsb
faddl
or
push
xor
dec
mov
mov
pop
movsb
daa
add
lds
push
sub
or
xlat
or
jp
adc
fucomip
mov
pop
sbb
pop
js
sahf
and
lods
mov
imul
inc
push
xchg
ret
sbb
call
mov
xor
pop
insb
popa
ret
inc
inc
popa
inc
lods
jnp
adc
mov
mov
sub
jnp
push
in
inc
xchg
and
sbb
or
mov
xchg
data16
fldl
cmovnp
outsl
fiadds
push
in
stc
cmp
xchg
mov
pop
xor
add
roll
or
adc
mov
xchg
mov
add
xchg
mov
cs
fidivrl
fs
aaa
imul
sbb
jne
xor
sahf
mov
sub
js
imul
fcoms
or
or
rol
or
fstl
mov
mov
add
aad
popa
das
mov
je
or
mov
add
xchg
jbe
mov
and
fsub
pop
loope
fisttpll
mov
mov
rorl
pushw
push
pop
sub
push
decb
nopl
jae
mov
lea
mov
inc
pop
add
pop
jne
dec
mov
imul
mov
dec
pusha
fmull
addr16
imul
adc
int
mov
test
and
mov
pop
and
adc
xchg
sbb
loop
pop
stos
lods
insb
push
imul
xor
mov
mov
jge
out
mov
aad
inc
jecxz
or
pushf
pop
dec
sbb
xor
test
push
push
adc
pusha
shrb
mov
daa
addb
sub
movsb
sub
push
pop
pop
xor
dec
filds
aam
sbb
fcmovne
xor
in
out
mov
xchg
jp
jbe
jp
outsb
and
jmp
and
inc
lock
into
stc
lea
and
mov
mov
divb
mov
test
ss
ficompl
hlt
test
sbb
cltd
sarb
push
push
lea
inc
pusha
rcrl
hlt
xchg
int3
aas
mov
pop
sbb
sbb
sub
push
and
pop
sbb
xchg
push
pushl
push
xlat
fcoml
push
pop
cmp
cmpsb
js
ja
cmp
fld1
addr16
mov
jecxz,pt
sub
pop
movsb
lcall
mov
cmpl
dec
inc
aas
jg
and
lock
jecxz
lahf
jmp
adc
out
jbe
pop
dec
es
outsb
dec
sub
out
jno
mov
jbe
sahf
inc
inc
jp
or
addl
mov
add
sbb
shrl
adc
cmc
fbstp
gs
mov
fidivrs
test
ljmp
mov
sbb
ds
adc
cmp
fbstp
mov
and
ja
repz
adc
mov
cmp
and
add
and
imul
fisubrs
mov
outsl
mov
inc
add
jle
mov
subb
aas
mov
das
jno
pushf
fidivs
rorl
repz
enter
cld
stc
inc
pop
fisubl
push
push
mov
adc
jle
popf
adc
sbb
call
cmp
and
data16
mov
or
mov
imul
inc
adc
bound
pusha
aas
pop
adc
add
cmpsl
arpl
lcall
fsubr
testl
fldenv
dec
stos
pop
xchg
adc
cmp
addr16
and
push
or
xchg
mov
icebp
aad
inc
cltd
xchg
and
dec
mov
xchg
jge,pt
and
mov
fdivl
test
mov
and
imul
ds
daa
xor
int3
push
xchg
pop
pop
mov
mov
push
icebp
pop
out
jp
dec
jnp
ret
test
sahf
movsl
out
pop
in
or
adc
and
stos
sub
insl
lret
cli
cmp
push
mov
jb
mov
add
call
and
add
lcall
mov
insb
inc
js
cltd
popa
arpl
lret
mov
add
jb
icebp
nop
and
sti
xchg
cmp
jno
aaa
jecxz
aam
stos
lods
pop
xor
mov
inc
popf
and
fadds
call
in
mov
sbb
negl
repz
jne
mov
pop
adc
pop
mov
dec
addr16
mov
je
add
cmpsb
in
xchg
adc
insb
push
xchg
mov
push
add
lods
pop
cltd
xchg
sahf
push
adc
push
icebp
dec
add
inc
dec
out
mov
loop
out
mov
je
sahf
inc
sbb
mov
outsl
and
push
orl
jae
gs
scas
dec
xor
jl
jns
test
xor
mov
xchg
push
jo
xchg
call
fstl
std
dec
scas
movsb
and
lcall
cmp
jno
fwait
icebp
inc
mov
cmp
dec
push
out
adc
adc
or
xor
push
leave
movsl
lock
inc
sarb
icebp
mov
out
push
mulb
push
inc
pop
sub
mov
sbb
aas
xor
sbb
mov
fldt
cmp
sub
mov
pop
rorl
ja
lret
xchg
test
dec
cwtl
jno
and
fwait
movsl
mov
push
pop
add
push
ss
andl
inc
jmp
shll
xchg
add
cmp
mov
add
enter
cmc
imul
into
push
cli
sub
std
outsb
scas
dec
in
sbbb
js
dec
enter
cmp
dec
dec
fcomps
nop
lret
nop
movsb
and
and
cmpsl
mov
jnp
mov
icebp
dec
jnp
xor
jo
dec
sub
or
and
pushf
and
push
nop
repz
adc
pop
fld
negl
out
inc
nop
jmp
out
adc
dec
jp
sarb
insl
push
inc
push
pop
xor
imul
xor
clc
mov
in
xchg
les
inc
sbb
xchg
xor
mov
insl
orb
xchg
ficomps
js
lahf
mov
add
outsl
jge
mov
lea
adc
lret
pop
mov
stc
repz
mov
aaa
push
nop
mov
fcmovbe
mov
jl
mov
insb
mov
sbb
dec
cltd
xchg
cmp
sub
sub
sub
add
mov
pop
dec
in
sahf
cmp
mov
movsb
mov
fstps
in
out
stos
js
js
dec
js
add
lods
ret
mov
xchg
xchg
scas
std
imul
icebp
in
xlat
in
jmp
cmpl
xor
dec
jnp
cmpl
lcall
xchg
cld
cltd
mov
and
rorb
or
in
jp
jo
xchg
mov
repnz
popl
ret
fists
pop
adc
lahf
imul
fdivrs
leave
jns
xchg
add
insb
xchg
sahf
ljmp
sbb
iret
jnp
mov
gs
jnp
stc
stos
test
addr16
xchg
ret
mov
push
cmp
pop
movsl
rcrb
sub
adc
xor
iret
roll
xchg
mov
mov
outsl
notl
loopne
xor
mov
cmp
fdivrl
and
out
inc
jp
mov
repz
xchg
mov
mov
and
shl
rcrb
mov
add
pop
rorl
aam
mov
sub
push
imul
dec
movsl
push
daa
sbb
nop
fdivs
test
jnp
inc
stos
jmp
xchg
lret
aam
push
lahf
xchg
lds
cmp
pop
inc
or
inc
inc
mov
insl
movsb
mov
mov
aam
pop
mov
cmpsl
ret
std
stos
nop
int
mov
mov
clc
loop
adc
sti
out
insb
xchg
cltd
push
xor
js
inc
xlat
pushf
sar
outsb
insl
jb
sbb
mov
ja
dec
inc
add
cli
outsl
test
sbb
pop
hlt
fstl
jecxz
aam
push
in
jg
lods
shlb
shlb
iret
xchg
bound
pop
adc
lcall
les
mov
std
add
mov
lea
loope
xor
push
and
and
cs
stos
jbe
add
jns
cmp
imul
mov
pop
jmp
push
push
jle
in
and
pop
stc
je
clc
fsub
add
pop
lea
inc
cmc
push
cs
rolb
cmc
xor
adc
mov
sarl
mov
movsl
stc
outsl
cs
test
adc
ss
fwait
or
push
outsb
push
lcall
mov
xchg
fprem
fcomps
cs
inc
sti
inc
jne
mov
notl
add
push
or
xor
xchg
ds
mov
orl
test
mov
adc
fiaddl
mov
pushf
push
stos
jno
imul
adc
jg
mov
mov
dec
insb
mov
jl
push
and
jne
cmpsb
lret
add
push
sbb
mov
in
les
popf
jo
int
sbb
call
pushf
sub
jg
pop
pop
lea
sbb
fbld
jne
pushw
icebp
sbb
xchg
aam
repz
mov
enter
mov
lret
adc
cmc
sub
loopne
rorb
ljmp
push
leave
mov
dec
nop
xor
xchg
cmp
call
cmpl
add
mov
stc
dec
in
arpl
in
jle
cmp
dec
lret
cmp
cmp
cmp
add
mov
cmpsb
addr16
sbb
sub
lods
pushf
xchg
xchg
sbb
xchg
xchg
mov
cmpsl
fwait
ret
inc
out
xor
cmp
cmp
cmc
or
pushf
mov
leave
nop
sbb
pusha
mov
add
cmpsl
rcl
ficoml
out
xchg
mov
les
or
cmc
nop
push
jp
test
negb
imul
mov
adc
mov
mov
pop
stos
aam
xchg
pop
mov
pop
jo
xchg
cwtl
ret
aaa
stos
xor
xor
and
call
jb
aad
mov
lret
sti
inc
add
xchg
movsl
lcall
and
int3
push
sub
push
mov
dec
add
inc
lret
push
cli
dec
push
test
aam
lods
popf
icebp
xlat
repz
inc
push
mov
ficoml
stc
outsl
mov
pusha
fdivl
in
icebp
aam
jns
imulb
insb
in
sub
sbbb
xchg
add
mov
mov
gs
pop
test
adc
pop
add
mov
sub
out
hlt
mov
jle
sbb
cld
leave
xchg
orps
imul
out
test
pop
cmc
mov
fdivrs
ds
sbb
jl
outsl
fcmove
xor
daa
push
dec
xchg
dec
andl
out
mov
in
test
mov
push
ja
loope
bound
xchg
push
adc
icebp
pop
push
int3
pop
enter
leave
mov
or
xchg
ficomps
mov
or
jl
lret
mov
mov
pushf
and
xchg
mov
mov
test
xchg
outsb
inc
fisttpl
lahf
test
enter
dec
push
or
aam
and
push
xor
mov
xor
or
jnp
mov
lods
out
ljmp
shl
sahf
fdivr
mov
repnz
or
xchg
loop
push
pop
push
and
stos
pop
lahf
push
jg
lahf
cmp
fs
xchg
lea
push
aad
add
push
rcrl
dec
mov
repz
shrl
mov
cmpsb
lahf
jo
mov
xchg
daa
push
mov
push
lcall
xor
std
nop
adc
push
pop
add
mov
fwait
scas
outsl
lret
jo
int
fwait
or
pushf
dec
out
adc
jmp
fs
xchg
int3
pop
inc
and
pop
orb
clc
add
mov
icebp
loop
daa
pusha
pop
push
lret
mov
insb
pop
fdiv
pop
lock
jae
cmc
in
out
cmp
into
cmpsb
and
add
mov
prefetch
mov
push
sub
out
sbb
or
lock
jb
xor
popf
leave
sub
cmp
and
mov
test
jne
push
cltd
movsb
scas
aas
test
dec
int3
and
cmp
adc
pop
jg
sbb
xchg
pop
inc
xchg
dec
jnp
test
adc
popf
add
and
cmc
rcll
jmp
inc
in
xor
lea
lds
lods
mov
xor
cwtl
addr16
or
inc
xchg
cmpb
sbb
loopne
pop
add
pop
pop
cs
xor
push
add
adc
imul
mov
cld
lret
cmc
and
cs
dec
push
adc
sbb
sbb
sbb
cmpl
sub
jno
in
sub
loopne
lahf
mov
dec
cmp
int
push
or
and
lds
loope
mov
mov
push
push
enter
leave
arpl
pop
lcall
dec
fcmovu
mov
fcmovne
xchg
lahf
mov
mov
dec
sub
jg
xchg
mov
xor
jb
mov
xchg
mov
ret
aaa
cmp
pop
jno
mov
rcl
lods
mov
xchg
sbbl
sub
call
xchg
cmp
mov
pushf
inc
inc
and
xor
in
lods
jb
xor
call
std
lock
aas
nop
rcr
js
fnstcw
cwtl
jne
pop
nop
stc
es
mov
insb
jae
shlb
inc
mov
mov
int3
movsl
fcompl
pop
jl
sbb
shrl
mov
lods
or
stos
insl
insl
mov
add
into
mov
popf
int3
je
in
iret
sbb
stos
aas
in
push
or
ss
mov
sub
adc
mov
in
shl
popa
cmc
mov
enter
xchg
mov
sti
inc
loopew
jbe
fmuls
pcmpgtb
push
jp
cmp
pop
jnp
hlt
push
cmp
push
jle
or
pop
xchg
mov
add
jp
mov
push
sbb
es
mov
jb
cmovg
xor
dec
punpcklwd
mov
lret
mov
mov
bound
push
or
ja
push
or
mov
fidivrl
sub
inc
repnz
test
add
push
in
inc
loop
jo
lret
jnp
pop
dec
xor
movsb
lds
sbb
mov
jb
out
loop
add
xor
les
daa
lahf
dec
or
adc
fisubrs
or
or
xchg
stc
ret
jnp
xchg
lcall
inc
lret
mov
adc
jg
adc
inc
cmpsl
jne
jnp
outsl
idivb
mov
cli
or
sub
movb
fdivrs
sbb
pop
sbb
lret
out
cmp
xchg
jb
pop
adc
into
lret
adc
pop
pop
inc
fldenv
aam
lds
adc
mov
pop
imul
mov
fbld
movsl
xor
xor
sti
jle
icebp
xbegin
xchg
popf
push
dec
negb
sub
add
fistps
sbb
aam
pop
inc
pop
sbb
test
pop
xchg
cmp
add
adc
adc
stos
and
cmc
xchg
push
decb
sahf
inc
into
lock
push
in
push
pusha
sbb
dec
insl
in
push
mov
lret
in
pop
adc
xlat
cltd
fsubs
mov
sbb
lret
scas
loopne
pushf
push
shr
and
xchg
xor
push
jmp
sub
das
das
aas
sub
mov
mov
jbe
jle
push
and
or
ljmp
lahf
int
push
dec
mulb
sub
lcall
adc
mov
cmp
xor
xor
ficoms
popf
inc
jb
out
ljmp
inc
xor
loope
jp
mov
in
pop
std
bound
inc
cld
adc
inc
xchg
idiv
mov
cli
into
dec
xor
or
inc
adc
aas
aam
arpl
sub
popf
add
sub
xor
mull
test
xor
loope
int3
xchg
jne
stos
push
inc
in
or
lds
cs
loop
xor
adc
stc
outsl
das
xor
pop
sbb
or
into
and
mov
lahf
mov
jno
mov
cmp
or
mov
push
jp
and
std
aas
cmpsb
test
inc
cwtl
mov
ret
dec
sbb
test
mov
add
sti
cmp
jnp
fstpl
fistps
aad
lock
mov
adc
jnp
clc
add
inc
scas
pop
pop
sub
mov
sahf
lds
test
mov
out
les
in
into
pop
bndstx
aam
mov
adc
jmp
insl
mov
lds
cltd
inc
jle
rorl
les
out
pop
xchg
xor
push
xchg
movsb
inc
pusha
scas
dec
les
jp
mov
push
je
xchg
incb
std
cmpsb
push
push
push
test
dec
stos
cmpsl
and
add
jnp
push
stc
push
lock
add
xchg
insl
mov
pop
out
add
and
arpl
sbb
xchg
ds
ror
repz
ds
sub
cli
and
pop
inc
loope
fsubs
sbb
inc
addb
cwtl
mov
es
shl
int3
sub
arpl
sub
sub
push
jnp
cmp
imul
orl
in
xchg
repnz
cwtl
in
enter
inc
push
sbb
mov
or
fbld
adc
in
mov
lahf
aaa
adc
lahf
xor
aam
test
fsubrl
aas
sub
pop
dec
jae
sbb
mov
pop
adc
jp
loopne
pop
mov
les
xor
jb
add
mov
push
call
add
inc
rcl
and
testl
fadd
cmp
xor
pop
mov
outsl
call
and
pop
dec
mov
lcall
push
sub
lret
mov
sub
outsb
sahf
cltd
push
jbe
mov
xchg
mov
int3
pusha
mov
jne
jnp
mov
mov
jmp
add
pop
jle
push
mov
adc
out
scas
aas
sbb
fsubl
popa
sahf
push
mov
pop
jl
shll
idivl
xor
rcl
push
fwait
mov
test
iret
out
add
pop
sbb
push
push
and
pop
xchg
test
dec
push
aaa
push
sahf
mov
mov
xchg
mov
bound
cmp
mov
lea
rolb
mov
sub
dec
ret
jmp
sub
cmpsl
and
lret
xor
pusha
sbb
outsb
test
mov
lret
es
ror
xor
mov
xchg
fisubl
idiv
or
jne
cmp
mov
rorb
xchg
xchg
loope
inc
pop
jne
clc
in
arpl
adc
popa
enter
add
push
lahf
fcmovne
push
pop
into
xchg
loopne
push
into
xchg
lock
insl
pushf
pop
sbb
sbb
mov
mov
mov
pop
add
pop
xchg
or
mov
xchg
xlat
mov
xchg
pop
mov
pop
ljmp
repz
ljmp
imul
jnp
jbe
dec
or
mov
jnp
insl
cs
ret
xchg
push
iret
ret
cwtl
loope
jns
or
adc
stc
xchg
pop
jg
dec
xchg
data16
dec
inc
fmuls
daa
xor
jl
jne
inc
adc
pop
inc
lahf
and
popf
xchg
xor
popf
add
or
and
je
jae
mov
cli
fcompl
cmp
jg
and
mov
add
mov
ficoms
aad
mov
nop
jno
lds
mov
arpl
fcomps
emms
sbb
jno
rcl
xor
popf
inc
dec
paddd
dec
test
in
mov
mov
sbb
pop
dec
orb
or
rclb
repz
iret
inc
ss
test
test
cmp
jl
pop
sub
jno
shll
xchg
lret
lods
outsl
aaa
and
xchg
pop
or
pop
stc
inc
xor
testb
sbb
pop
xor
rolb
sahf
add
mov
loop
testl
mov
call
out
jg
std
inc
or
pop
and
les
daa
bound
scas
clc
push
push
call
icebp
iret
pop
cs
adc
test
das
icebp
mov
inc
inc
or
and
aam
inc
mov
pop
pop
ret
ja
sub
stos
jbe
sbb
dec
imul
lret
lock
ljmp
daa
push
mov
fsubl
dec
jge
xchg
sahf
nop
ds
outsb
scas
lds
out
mov
push
movsb
outsl
sub
dec
sbb
jl
inc
push
or
push
mov
sbbl
inc
test
xor
push
mov
inc
pop
xchg
inc
mov
sub
mov
es
push
mov
xor
sti
pushf
add
add
inc
iret
jp
shll
insl
mov
dec
cmp
mov
cmpl
in
sbb
xlat
rorl
mov
xchg
mov
adc
repz
mov
movsb
mov
jp
lret
mov
push
mov
fs
inc
xchg
mov
mov
pop
pop
jg
jl
loop
repz
inc
lret
into
and
test
into
loop
add
mov
mov
and
xchg
iret
mov
cmpsl
daa
jge
mov
out
xor
dec
sub
push
mov
xor
mov
cmp
out
sub
pop
jmp
imul
sbb
sub
addb
pop
xchg
xchg
lret
enter
mov
cs
clc
sbb
fistpll
insl
inc
ja
fs
test
enter
xchg
inc
add
int
inc
and
lret
out
movsl
xor
push
pop
and
aas
cmp
iret
dec
lret
fdivl
xchg
test
mov
cmp
push
cltd
jecxz
xchg
inc
stos
and
mov
stos
mov
shll
cmc
scas
rolb
mov
js
adc
jae
push
in
pop
out
or
sarb
push
xchg
movl
pop
mov
jb
aad
cmp
int3
pop
popa
cmpsb
cs
sub
dec
fnstcw
cli
push
shl
cli
fxch
pop
dec
inc
inc
add
repz
mov
testl
jle
aad
inc
punpckhwd
lret
push
dec
ds
cmp
repz
jl
popf
or
sbb
cmp
jae
mov
push
pop
and
fidivs
rep
ljmp
shr
stos
mov
sub
shlb
out
xor
mov
cmp
or
xchg
or
and
mov
inc
jns
test
fisubs
push
sahf
pusha
and
xchg
cmpsl
or
dec
out
repnz
sub
sti
clc
xor
arpl
aad
sub
unpcklps
fs
mov
mov
test
aam
mov
jno
addb
out
inc
pop
lret
bound
fs
dec
or
fsubr
mov
jecxz
push
filds
push
out
dec
sbb
fs
imul
jle
pop
push
jg
sbb
lret
stc
mov
lahf
sub
out
xor
or
adc
mov
sbb
xchg
mov
int
mov
xchg
xchg
mov
and
insl
pop
mov
lret
dec
loope
or
or
sbb
aaa
dec
mov
dec
adc
bound
hlt
insb
insb
popf
jl
jge
add
jmp
lcall
pop
pushf
sti
pop
gs
mov
mov
sbb
addl
xor
out
sbb
mov
push
mov
fsubrl
test
sub
hlt
mov
cmp
mov
ds
jae
daa
and
add
mov
dec
fnstcw
lret
fdivrp
and
outsl
outsb
xor
adc
lods
stos
or
pop
xchg
ss
xchg
sti
sbb
add
mov
adc
out
xorl
rcr
xor
jge
test
outsl
push
repnz
js
push
into
aam
icebp
mov
es
lret
xchg
inc
or
mov
call
jecxz
mov
into
fcompl
add
jno
pop
int3
inc
cmp
aad
roll
arpl
add
fnsave
mov
repz
xchg
adcl
jle
sbb
shrl
xor
inc
jnp
test
flds
inc
enter
es
mov
and
xor
pop
xchg
inc
in
aas
xor
out
dec
mov
out
adc
lcall
data16
xlat
mov
cli
inc
scas
in
dec
xor
push
push
adcb
loopne
sahf
cmp
sti
mov
mov
idivb
in
sbb
sbb
outsb
dec
push
les
lds
pusha
cmc
ss
sbb
cmp
daa
adc
ljmp
adc
repz
gs
loop
in
pop
add
pop
dec
imul
inc
mov
cltd
inc
jnp
jbe
pop
pushf
xchg
push
jp
jno
into
mov
int3
ret
adc
lret
les
jo
mov
push
sbb
iret
pop
faddl
inc
inc
sub
lods
into
or
mov
sbb
mov
scas
das
push
stc
jecxz
push
jo
mov
lods
add
mov
stos
leave
outsb
pop
adc
push
icebp
lea
jae
inc
sahf
lret
pop
test
and
jae
inc
out
adc
sub
aaa
out
scas
loopne
push
xchg
xchg
rorl
inc
pop
push
rcll
push
stos
aas
jae
add
push
shl
mov
push
arpl
lock
dec
pop
inc
orb
stos
and
mov
mov
popf
popa
mov
or
leave
outsl
sub
add
xchg
mov
cmc
addr16
sub
adc
les
jne
pop
hlt
sub
xchg
cmp
and
mov
leave
or
idivb
lea
stc
mov
cwtl
test
xchg
call
xchg
dec
test
cs
loop
jb
mov
xchg
cwtl
mov
scas
push
out
jmp
inc
mov
sbb
aad
call
out
dec
push
dec
and
add
out
mov
pusha
add
push
and
cmpl
xchg
or
push
inc
fmul
lret
aad
por
cmp
sti
dec
xchg
imul
repz
mov
popf
clc
adc
inc
pop
or
push
xor
or
or
cwtl
or
mov
pop
sbbl
jbe
test
inc
outsl
fiadds
enter
adc
cli
jns
mov
aas
fcomps
push
xchg
outsl
call
ficoms
loope
push
clc
and
mov
mov
test
mov
popf
ds
cmp
push
in
add
lret
cmpsb
sub
adc
into
lea
cmp
or
dec
and
repz
and
pop
pop
or
xor
inc
add
dec
push
lcall
fadds
cld
pop
cmp
std
inc
hlt
sti
stos
pop
cmp
mov
push
and
clc
pop
or
pushf
cmp
rcrl
shll
push
hlt
nop
rcrl
mov
fstl
loop
fistps
ret
lret
aam
je
mov
jl
push
or
pop
lret
cmp
lods
insb
mov
cli
arpl
inc
xor
rolb
mov
mov
das
add
cmp
mov
mov
clc
push
aam
ret
push
jmp
pop
leave
cmp
pusha
pop
mov
mov
in
fisubl
and
in
mov
arpl
test
ds
xor
jns
rolb
xchg
lds
push
jmp
xor
pinsrw
or
cmp
mov
mov
insb
icebp
aad
fisttps
mov
cltd
dec
int
out
jg
push
outsb
push
pop
xchg
enter
sub
mov
fcmovnb
clc
enter
int
sub
cmp
mov
repz
nop
mov
clc
xchg
xchg
xor
das
sbb
jmp
inc
jge
adc
jl
xor
push
lock
mov
orb
movsb
inc
sub
ds
xchg
pop
les
inc
xchg
dec
sbb
push
xlat
jmp
in
inc
jb
xchg
enter
add
push
mov
enter
push
xchg
leave
ret
aam
leave
push
xchg
push
and
cmp
scas
fmulp
push
int
xchg
flds
jecxz
repnz
mov
push
scas
data16
fldl
adc
nop
scas
in
add
aas
push
pop
imul
xchg
stc
jnp
sbb
or
hlt
ljmp
xlat
mov
fnstcw
push
pushf
and
stos
enter
inc
xor
sbb
fisttps
mov
cmp
cmp
mov
fstpl
push
out
dec
test
or
dec
fs
out
pop
mov
cmc
subb
inc
xchg
js
push
arpl
fnstenv
stos
sbb
push
fmuls
jp
dec
hlt
mov
je
jno
repz
dec
jnp
pop
test
pop
icebp
rcll
mov
mov
mov
push
push
pop
cld
sub
imul
mov
mov
jp
iret
mov
sub
push
mov
or
ds
mov
fdivs
or
adc
add
and
dec
enter
sti
ret
adc
mov
call
aam
loop
push
xchg
pushf
int3
xchg
loope
lds
sub
inc
adc
dec
int3
imul
out
call
ja
rcrb
or
sahf
jb
or
mov
lahf
xor
std
sti
aad
fistpl
push
inc
lcall
push
in
pop
mov
add
in
inc
mov
xor
dec
imul
mov
sbb
outsl
ret
and
dec
mov
cld
out
push
and
hlt
shrb
in
out
syscall
roll
insl
shlb
add
mov
xor
int3
shrb
insl
jnp
mov
test
scas
sub
push
dec
mov
out
lret
xchg
jge
mov
and
jb
jmp
cltd
dec
cmc
cmpsl
iret
inc
sub
sbb
adc
dec
fdivs
sub
scas
aaa
loopne
cli
outsl
mov
push
fildl
fcomi
lods
iret
cmpsl
or
cmp
lea
clc
or
outsl
pushf
inc
dec
jge
repnz
xor
xchg
or
stos
add
adc
popa
arpl
dec
push
aam
cmp
adc
sub
mov
aaa
bound
add
ja
ficomps
adc
js
bswap
sub
aam
mov
and
adc
jle
insb
repnz
inc
fsubp
inc
pop
mov
scas
bound
push
pushf
test
pusha
pop
adc
and
lcall
mov
fstl
cwtl
dec
popf
addr16
add
push
test
jne
out
cmp
out
lret
dec
xchg
test
es
ljmpw
in
scas
ljmp
in
stos
sar
mov
add
ret
sar
adc
mov
js
xchg
push
sbbl
shrb
push
xchg
mov
jo
xchg
ljmp
repz
cmp
inc
rorb
lea
sbb
out
add
mov
add
in
cmp
mov
push
iret
in
cs
fdivl
insb
pop
push
mov
aad
dec
mov
jo
sub
fnstenv
je
clc
lods
adc
or
mov
sub
cmpsl
xor
push
dec
fildl
pusha
adc
sbb
add
pop
add
popf
cmp
in
movsb
xchg
aas
bnd
enter
add
jecxz
pop
push
neg
and
ds
fs
mov
into
pop
add
lds
das
push
add
adc
addl
dec
sub
or
mov
outsb
dec
xlat
mov
xor
stos
sub
pop
xchg
lock
test
mov
sahf
mov
int
dec
mov
inc
dec
cmp
adc
mov
add
hlt
or
push
fisubs
xacquire
push
js
sub
xchg
mov
lods
or
cli
movsb
fistpl
je
out
and
push
mov
inc
icebp
lea
push
aas
jbe
mov
xchg
pop
call
sub
add
cmc
cltd
movsb
push
push
mov
lea
sbb
popf
mov
jg
int3
jmp
hlt
mov
repz
sarl
xchg
inc
cmp
mov
enter
jns
lcall
mull
pusha
fwait
pop
mov
movsl
mov
mov
sub
cmp
scas
lret
sub
fidivrs
sti
add
mov
arpl
xchg
aam
test
sbb
ror
fadds
or
mov
out
inc
clc
push
or
sbb
out
sti
leave
cld
inc
pop
mov
xchg
hlt
mov
mov
icebp
mov
int
in
cs
jbe
clc
insb
rolb
and
adc
pusha
call
xchg
loope
xchg
je
mov
mov
xor
data16
test
movsb
and
fidivrl
sub
cmp
dec
push
cmpsl
lock
cmp
in
or
inc
pop
loop
mov
mov
stc
js
movb
push
pop
hlt
mov
movsl
dec
sub
pop
lock
xor
sbb
int3
adc
loopne
xchg
mov
in
lods
in
lods
pop
dec
adc
push
data16
pop
xchg
xor
je
sub
fwait
cwtl
repnz
push
lods
loop
push
mov
test
pop
or
sub
repz
icebp
adc
lods
leave
loopne
push
test
mov
mov
mov
mov
push
and
mov
mov
test
dec
xor
or
add
or
jle
pop
push
jecxz
mov
xor
bound
mulb
std
jl
mov
push
gs
out
pusha
repnz
xor
push
sbb
in
inc
xchg
out
xor
mov
fisubrs
sbb
shr
dec
iret
mov
bound
shll
pop
inc
dec
sub
mov
shrb
sbb
mov
int
test
pop
andl
or
or
mov
pop
cmpsl
mov
test
fldenv
int3
pop
repz
pop
mov
fadds
mov
and
test
xchg
clc
mov
add
and
sbb
int
lahf
fcmovu
sub
mov
int3
js
push
pop
jne
or
inc
out
add
mov
adc
lods
cmp
or
call
aad
jle
adc
pop
cmpl
xchg
jns
jno
es
in
stos
push
mov
int3
out
and
xchg
cmp
xchg
sub
mov
jecxz
push
or
xchg
popf
ljmp
cmp
cmc
mov
sub
add
jge
dec
xchg
and
pop
enter
mov
jmp
push
pop
test
inc
test
pop
mov
and
sub
repnz
iret
jmp
mov
push
xchg
push
dec
xor
or
pop
mov
in
push
or
push
in
mov
loopne
test
xor
add
sbb
icebp
movntq
push
mov
repz
arpl
xchg
shll
aam
adcb
push
cmp
sti
insl
daa
imul
fidivrl
mov
pop
and
lahf
out
jl
rcpps
fsubrp
sbb
sbb
jl
or
adc
sarl
sub
leave
sbb
add
fnsave
test
jbe
mov
and
sbb
adc
sti
dec
fs
and
mov
jae
les
push
imul
push
inc
testb
push
or
fwait
adc
in
push
scas
out
pop
sarb
outsl
sub
or
mov
cmp
xchg
cmp
jmp
push
adc
dec
imul
or
jne
fwait
xor
add
ljmp
adc
fmul
pop
jl
xchg
mov
aas
cwtl
aas
hlt
popf
ret
sub
mov
inc
fldt
popf
cs
add
dec
cs
fldt
testb
xlat
in
xor
dec
das
xor
jae
or
leave
ds
lea
adc
pop
push
bound
jo
test
mov
mov
fildll
cmp
shlb
inc
dec
loopne
xlat
xchg
sarl
inc
xchg
in
push
push
inc
mov
push
push
hlt
push
mov
jecxz
dec
sbb
popa
addr16
fs
sbb
add
add
call
cmp
pop
or
cs
movsl
mov
cmp
pop
iret
jne
sbb
mov
sub
xor
inc
or
data16
xor
je
fdivrl
jnp
lds
stos
mov
mov
stos
loopne
xor
xchg
inc
adc
leave
push
mov
inc
popa
xor
cmpsl
cwtl
xor
bound
icebp
dec
test
call
mov
xorl
dec
loope
mov
dec
or
sbb
fsubs
and
or
loope
inc
push
fnstsw
adc
or
dec
mov
jge
or
int
stos
pop
cli
mov
xor
inc
lea
out
push
jo
js
call
ds
pop
push
subl
das
jnp
mov
add
rcrb
inc
fbld
push
test
pusha
int
imul
popa
subb
aam
out
gs
jns
ret
loop
cmp
icebp
cli
arpl
push
je
lcall
and
inc
push
xor
cmp
xor
dec
std
je
mov
lahf
mov
les
hlt
iret
xchg
sahf
lret
sbb
clc
sbb
outsl
fldenv
dec
les
lods
pop
jo
test
jmp
lods
scas
cltd
pop
test
in
sub
mov
add
fsts
in
mov
mov
sti
adc
mov
stos
daa
inc
mov
cmpsb
mov
mov
xor
call
stos
cltd
sbb
or
xchg
and
lock
nop
aaa
jns
sbb
mov
or
and
gs
xor
mov
les
fdivs
lea
xchg
sub
shll
test
fdivrs
mov
addr16
js
mov
test
leave
and
fisubrl
pop
mov
adc
fldl
jp
in
inc
adc
notl
dec
fs
call
clc
add
xor
jno
sub
cmp
mov
sahf
stc
pop
ss
dec
sub
xchg
mov
insb
dec
out
out
mov
or
xorl
andl
into
and
shrl
stc
push
xlat
sbb
xor
repnz
inc
test
xchg
stos
dec
pop
push
leave
out
fucomip
jae
leave
fldcw
or
mov
xchg
xchg
cmp
sarl
push
mov
cwtl
popf
ret
arpl
push
pop
xor
sbb
aaa
adc
into
dec
mov
push
sti
cmpsb
mov
pop
push
jp
xchg
mov
adc
mov
jecxz
mov
jae
sub
rcrl
sub
data16
add
mov
jge
in
jne
ficompl
or
xchg
jl
xor
mov
mov
mov
dec
sti
push
jmp
xchg
and
and
fcmove
pop
cwtl
int3
out
xor
pop
fwait
es
inc
popa
pop
mov
add
fwait
inc
xor
pop
or
leave
ljmp
aaa
cmc
xor
and
xchg
and
aas
push
cmp
ss
and
test
cs
jno
mov
xor
pop
mov
xor
push
loopne
pop
sbb
pop
nop
pop
pop
inc
sub
shl
out
icebp
cmp
std
push
sub
in
inc
jae
sbb
sbb
jne
test
cmc
push
sahf
mov
repz
cmp
jmp
adc
stos
dec
adc
inc
outsb
jo
adc
lea
fwait
xchg
pop
mov
dec
stos
loopne
adc
test
pushf
lret
orl
sub
jns
pop
or
loop
mov
xchg
dec
inc
popf
cmp
orb
jp
inc
cmp
adc
adc
xchg
test
popf
aam
push
jnp
adc
dec
lock
inc
rcr
test
out
xor
mov
mov
dec
cwtl
gs
fs
out
mov
lret
out
xchg
mov
add
jg
jo
sub
fdivl
cld
jle
mov
je
or
out
sub
sbbb
sub
std
sub
xor
dec
addb
mov
or
xor
lock
push
mov
lret
leave
and
pop
sahf
imul
ret
add
ja
lods
pop
mov
sbbb
pop
out
je
mov
ljmp
ss
xchg
stos
lahf
cs
movaps
mov
inc
call
in
jmp
jg
cmp
out
pusha
cmp
adcl
in
sub
ret
add
imul
sti
sbb
dec
fs
jae
or
mov
loopne
jmp
repnz
nop
fucomp
loop
xchg
jbe
mov
aas
jno,pn
imul
stos
daa
xorl
jp
ljmp
xor
loopne
out
inc
cli
pusha
cld
cmpsl
cmp
sbb
pop
or
dec
cmp
mov
dec
out
xchg
pushf
icebp
xchg
pop
hlt
mov
push
out
adc
sub
mov
cltd
or
jge
adc
and
push
addr16
out
test
fimull
inc
mul
mulb
jg
mov
pop
loope
adc
stos
stos
dec
adc
inc
in
xchg
scas
and
pushf
sub
pop
sub
xor
xchg
cmc
jbe
sbb
movsb
and
nop
out
imul
mov
sarb
popa
sub
cs
sub
icebp
cmpsb
mov
imul
inc
fisubs
push
ret
iret
push
ret
mov
lds
or
add
inc
outsl
lret
imul
and
push
pop
dec
pop
sub
icebp
ljmp
scas
jnp
cmp
in
mov
adc
int3
outsb
pop
sbb
or
mov
mov
fwait
mov
inc
insb
push
push
xor
xor
push
stos
dec
mov
scas
or
jmp
dec
push
pop
push
inc
jg
pusha
ret
aas
adc
mov
add
adc
stc
jg
and
and
sub
bound
mov
mov
mov
mov
fmuls
stc
mov
xchg
in
out
dec
sbb
cmp
push
cmp
mov
cmpsl
add
rclb
dec
mov
loopne
xchg
inc
movsb
or
cld
push
xor
xchg
jp
test
mov
sbb
dec
xor
movb
mov
movsb
lea
insb
push
xor
push
adc
xor
loope
loope
mov
std
out
mov
adc
ljmp
sbb
push
pop
or
inc
cmp
lcall
loopne
mov
cli
mov
fs
lds
xorb
sarl
std
jecxz
adc
jo
hlt
push
cmp
cld
cli
inc
jmp
cmpsl
imul
jo
add
jmp
pop
lds
cmpsb
push
loop
pusha
jl
push
dec
bound
cld
cmp
adc
mov
out
syscall
enter
cmpl
mov
mov
out
hlt
rclb
xlat
push
and
jbe
pop
adcl
les
loop
xor
loopne
lock
inc
loopne
sub
sti
jle
add
loopne
xchg
mov
inc
sbb
inc
push
mov
sub
and
imul
fnstsw
jns
ret
out
mov
rcrb
pop
inc
test
xchg
pop
out
mov
loop
dec
mov
dec
xor
nop
repz
jecxz
xchg
imul
inc
mov
imul
notb
lds
jb
fldcw
cmpsl
repz
sub
adcb
jns
in
push
into
or
mov
iret
ret
push
aad
inc
xchg
and
lods
pop
outsb
mov
ss
push
and
popfw
xor
pop
fcompl
leave
jo
mov
je
push
adc
jle
loope
lahf
or
add
dec
mov
pop
mov
jle
xor
push
inc
mov
test
mov
jmp
xchg
lret
pop
adc
movsb
movsl
xchg
inc
je
out
pop
adc
aas
mov
or
pop
mov
dec
int
mov
aaa
xchg
xchg
sub
xor
dec
jg
iret
xor
pop
dec
sbb
loop
and
call
lahf
rcrl
aam
mov
cmp
jmp
inc
test
es
dec
push
jbe
jb
xor
nop
mov
pop
pushf
mov
lcall
xchg
inc
das
int
jb
loopne
lods
xlat
fmuls
inc
jl
adc
xor
pop
iret
sarl
sarb
es
lcall
call
pop
imul
xlat
in
sahf
loope
test
xchg
and
and
pop
fmul
mov
outsb
add
sub
mov
or
repz
test
lea
fisttpl
pop
fldz
jecxz
mov
insl
mov
out
and
iret
sbb
fs
cmpsb
mov
pusha
nop
scas
jo
fsubrs
movsl
sub
popf
sub
cmp
adc
sbb
lods
or
add
daa
in
dec
jbe
aaa
push
lahf
les
nop
inc
mov
jns
xchg
in
jmp
or
out
mov
sbb
add
sbb
dec
test
push
mov
imul
nop
xchg
cmpsl
decb
xor
rorb
ret
cmp
icebp
add
mov
nop
bound
dec
dec
dec
pop
pushf
gs
ss
imul
sbb
inc
xor
flds
fmul
mov
pop
stc
pop
mov
inc
push
fisttpll
hlt
fsubrs
ficoml
jns
mov
xorb
stos
jb
and
xor
divb
sti
out
insb
mov
jae
and
mov
push
jl
daa
cld
mov
cwtl
push
jp
out
add
mov
push
in
push
xchg
sbbl
mov
mov
jb
add
xchg
cmp
xor
pop
lods
dec
sbb
cmp
mov
cmpsb
das
push
or
insl
mov
cmp
xorl
lock
shl
push
mov
lcall
mov
xchg
jno
mov
adc
inc
fsubs
out
push
sub
mov
mov
arpl
and
fwait
gs
dec
push
or
test
or
push
sbb
test
inc
xor
lds
fdivs
add
popa
iret
daa
jne
outsl
or
sub
jmp
inc
ss
push
inc
icebp
in
adc
dec
cld
lods
fimull
mov
cmp
and
lcall
mov
or
insl
test
xchg
je
lcall
xlat
scas
sub
out
loopne
mov
xorb
repz
push
sahf
inc
push
sub
and
rclb
setg
nop
push
loopne
jl
sbb
dec
mov
test
loope
xor
dec
in
push
xor
push
xchg
pop
push
js
mov
xchg
xlat
or
hlt
cmpsb
enter
jl
xchg
jnp
imul
in
dec
and
jecxz
dec
jnp
int
stc
fnstsw
cli
mov
sbb
ffreep
jecxz
lahf
out
loop
pop
add
push
xchg
loop
addr16
push
fucom
adc
icebp
rol
mov
xor
jae
sbb
out
stc
mov
sbb
mov
add
test
test
shrl
mov
stos
fs
sbb
xchg
push
xlat
and
mov
testb
sub
push
and
addr16
jecxz
mov
cmpl
loope
jns
xchg
lods
mov
imul
add
mov
fwait
pusha
stos
not
sub
int3
int
leave
adc
inc
pop
das
gs
mov
outsl
jg
or
aam
clc
xlat
xchg
xchg
adc
fildl
pop
daa
sti
test
orb
out
mov
ss
push
in
inc
xchg
sub
sbb
dec
mov
add
sub
loope
jnp
inc
push
stc
jb
xor
mov
jae
or
testb
scas
std
and
xchg
fcompl
fldcw
xlat
jbe
xchg
repnz
inc
cmp
sti
idiv
in
push
pop
mov
lock
icebp
shrl
dec
push
xchg
or
aad
into
jl
stc
sub
outsl
mov
xor
mov
jo
cli
ret
add
cmp
add
orl
pop
das
push
mov
loope
sub
iret
cli
push
mov
ret
xor
pop
test
cli
movb
pop
fcomps
sub
or
stc
push
jns
inc
lret
adc
paddusb
lock
jbe
xor
mov
ljmp
sub
ja
mov
std
xor
daa
dec
sub
mov
sbb
push
jg
xor
and
sub
add
pop
cltd
or
sti
sahf
dec
cmpsb
leave
fistpl
or
mov
push
lahf
movsl
flds
into
in
xlat
aad
xor
icebp
cmpb
push
and
fimull
pop
sbb
xchg
imul
daa
lods
cmp
sbb
push
daa
push
jge
or
or
sbb
sub
pop
out
xchg
xchg
push
loope
sub
mov
dec
in
fs
insb
adc
add
pop
mov
cmp
into
into
repz
jg
nop
sub
mov
dec
lret
lea
fwait
mov
and
jl
jle
repz
subb
gs
adc
xchg
jno
inc
xchg
in
fisttps
xlat
or
sbb
lret
in
pusha
jo
in
loop
insb
loopne
ret
dec
jnp
push
push
fidivs
inc
adc
mov
test
xchg
fnsave
js
shlb
in
cmp
movsb
ja
leave
clc
sbb
sbb
out
jno
das
cmc
inc
in
sbb
dec
sbb
adcl
lret
lods
outsl
jl
test
movsl
les
jno
jl
sbb
dec
aad
jnp
pop
stos
dec
fcoml
iret
mov
push
pop
sti
xor
xor
pop
xor
sub
mov
scas
data16
sub
div
roll
dec
push
cmp
inc
push
sti
mov
int
jne
or
shl
pop
cmp
sub
imul
jne
xchg
xchg
fbstp
xchg
sub
xchg
scas
pop
loopne
or
mov
dec
or
xor
xchg
popa
sbb
stos
cli
jne
push
cs
mov
pop
push
lret
iret
popf
mov
cmp
push
xor
or
inc
fisttps
and
lock
mulb
add
xchg
out
push
and
push
fadd
jl
outsl
push
test
dec
js
scas
popa
fdivl
test
add
scas
cmpsb
and
fistpl
sub
loop
push
push
pop
jle
pushf
mov
pop
mov
popf
aad
push
fsubrl
cmc
mov
lea
call
jae
mov
adc
push
cmpsb
jge
mov
rcl
mov
xchg
cmp
jae
push
and
mov
andl
addl
jnp
test
lods
clc
sbb
aad
push
cli
arpl
loope
dec
scas
or
sub
repz
sbb
xor
mov
clc
idivb
or
lcall
jle
data16
inc
test
inc
stos
daa
mov
pop
fisttpl
cli
pop
jne
leave
and
daa
dec
jp
push
bound
push
jge
sarb
adc
sbb
push
test
stc
cmpsb
dec
cmpsb
pop
rcrb
cmp
je
jecxz
ret
pop
in
mov
push
enter
hlt
pop
fsts
das
imul
xchg
mov
das
mov
pop
cmpsb
push
push
ret
fstpl
inc
lret
pop
hlt
fmul
pop
inc
cmpl
mov
insb
xlat
push
jb
mov
mov
adcl
sbb
scas
mov
mov
push
popa
mov
inc
scas
jnp
mov
and
mov
inc
pop
adc
out
iret
pop
lods
push
sbb
mov
lds
gs
popa
sub
adc
xchg
cli
inc
xchg
xlat
jns
scas
mov
lcall
mov
mov
andb
sub
andl
lea
fwait
xor
loope
mov
ljmp
outsl
mov
and
xlat
ss
xor
outsb
sbb
cmc
mov
mov
jge
inc
lods
pop
je
jb
mov
xor
pop
cwtl
mov
inc
jnp
inc
subb
mov
add
mov
stos
ficoml
scas
jmp
ja
xchg
cmp
mov
fdivp
dec
pushf
cmp
fildl
cmp
push
mov
pop
xor
les
sub
lcall
out
lahf
in
mov
mov
mov
jne
adcl
jb
cmc
fwait
xchg
cmpb
imul
sub
xor
test
cmp
pop
jl
popf
inc
in
clc
icebp
push
shlb
arpl
fcmovu
and
stc
mov
push
sbb
jbe
sahf
lods
shrb
inc
iret
paddq
fstps
imul
shlb
je
pop
mov
sti
xchg
jne
popf
xchg
xor
je
into
mov
insl
shr
shll
cltd
xchg
adc
adc
inc
scas
add
insb
in
lods
push
icebp
sub
mov
mov
paddb
test
and
xchg
inc
lock
mov
mov
sub
fnsave
fstps
xchg
cli
test
mov
pop
repz
int3
mov
pusha
dec
adc
bound
adc
sbb
mov
mov
imul
cmpsb
mov
pop
pop
cli
xor
std
ficomps
aaa
sub
ljmp
das
inc
xor
and
pop
jl,pn
mov
mov
mov
sub
xchg
loope
mov
es
xchg
adc
cmp
stos
mov
lods
cld
dec
mov
pop
imulb
push
hlt
repnz
fldcw
xchg
daa
les
sub
clc
xchg
lods
bound
test
pop
xor
ret
xchg
add
jno
popa
dec
adc
fldcw
in
loopne
stos
loopne
mov
mul
inc
pop
dec
sub
fisttpll
adc
and
xchg
leave
add
xor
sub
rorb
ja
ret
outsb
mov
pop
xchg
mov
pop
or
mov
roll
dec
icebp
cli
cs
jno
adc
lret
xlat
and
adc
fst
mov
cwtl
and
push
sbb
and
or
xchg
popf
mov
lahf
sbb
or
cwtl
mov
nop
jne
ds
inc
dec
cmp
mov
inc
shrl
pushfw
lods
cs
lahf
fwait
lock
ret
inc
fnsave
orb
push
imul
sub
imul
adc
push
loopne
mov
lods
sub
int
repnz
xlat
inc
cmp
gs
inc
bound
cmc
stos
inc
pop
mov
pop
outsb
lea
pop
movb
cld
xchg
xchg
aad
dec
or
pop
pusha
insl
jg
imull
mov
test
jb
and
xor
push
arpl
aas
idivl
repz
mov
rorb
push
add
mov
mov
cmp
or
enter
mov
cmp
lcall
sub
fwait
andl
sbb
les
js
sub
jne
repnz
cltd
stos
xchg
fistps
lods
or
mov
imul
add
push
ret
test
jp
arpl
ss
adc
cmpsl
test
mov
inc
xor
popa
jge
or
int3
mov
dec
jge
nop
sub
pop
ss
setns
add
icebp
adc
xchg
loope
jnp
popf
test
enter
dec
data16
test
call
stos
gs
scas
in
push
sbb
jnp
rcll
sbb
ss
xchg
mov
mov
xchg
gs
mov
out
imul
xchg
jbe
addr16
fwait
into
sub
pop
inc
mov
jge
mov
cmpsl
lahf
fwait
xchg
in
sar
clc
xchg
push
mov
xchg
xchg
jp
popa
xchg
xor
pop
mov
ljmp
outsl
and
movsl
faddl
jmp
fsubs
fdivrl
pop
movsb
mov
mov
and
inc
pop
popf
out
xchg
or
sahf
mov
notb
stos
in
mov
std
addl
nop
in
fadds
mov
out
mov
rolb
or
push
and
dec
jne
lds
loop
leave
pop
mov
push
xor
pop
xor
lret
aad
and
movsb
and
imul
daa
adc
aas
xchg
xchg
push
jno
xchg
pop
jmp
dec
jp
test
jo
mov
into
repz
aas
outsb
sbb
mov
testb
sti
and
sub
loopne
jg
cmp
mov
and
mov
push
mov
out
and
push
cmpsl
xorl
test
sub
or
sub
jae
pop
fbld
imul
xchg
mov
test
pushf
cld
cltd
jns
and
adc
push
inc
xor
mov
adc
adc
jle
ja
in
divb
mov
insb
int3
mov
pop
inc
xor
push
scas
adc
cmp
out
aaa
pop
pusha
xor
insl
sahf
xor
mov
sbb
in
push
inc
cmpsl
repz
push
xor
fiaddl
xor
jno
jns
sub
subl
add
sti
icebp
push
lret
sub
mov
fisttpl
or
mov
lahf
jecxz
and
dec
fsub
push
pop
sbb
or
sub
xchg
dec
or
mov
pop
jge
sarb
xor
adc
adc
insb
imul
sub
scas
rcr
inc
sbb
call
or
push
xchg
scas
cmpsl
mov
psubd
fisttps
sbb
jge
adc
dec
pop
mov
dec
aam
xchg
jl
fmul
mov
add
or
add
or
sub
ret
ljmp
aaa
negl
or
outsl
loope
pop
push
repnz
insb
lds
out
mov
iret
sub
pop
jo
inc
pop
jbe
fstl
data16
xor
pop
adc
enter
cmp
je
jno
sbb
mov
pop
andl
addr16
shlb
mov
js
xchg
fcom
bound
repz
stos
lds
sar
push
loopne
insb
sub
mov
repnz
lret
pop
xchg
mov
rolb
pusha
mov
mov
cld
fsubrl
enter
jle
cmp
dec
adc
mov
flds
xor
push
dec
push
adc
aaa
iret
rol
sbb
jecxz
fcoms
std
pop
mov
jg
and
and
dec
je
mov
or
cmp
jg
adc
xor
lcall
or
inc
les
mov
int3
xchg
dec
xor
xchg
fdiv
dec
cmpb
mov
enter
jmp
adc
cmpsl
mov
push
mov
dec
iret
scas
sbb
sbb
mov
jne
jl
xor
out
int3
js
mov
cmp
sub
mov
fsubrp
addr16
jnp
cmp
flds
mov
dec
fldz
push
cmp
call
xor
jb
mov
cmp
sub
aad
jns
jno
lahf
inc
in
repz
imul
ja
or
cmpsb
jo
pusha
cmp
push
cmp
out
loope
dec
jno
nop
jbe
dec
rcl
shl
adc
into
sub
sub
jo
push
mov
jne
jecxz
push
mov
mov
outsl
xlat
mov
xchg
sbb
inc
fidivrs
xchg
stos
add
xchg
xor
and
icebp
aas
pop
mov
sbb
sbb
cmpsb
fdivrp
and
jp,pn
outsb
daa
aam
jne
aam
and
hlt
lods
sbb
dec
jge
push
lahf
out
push
mov
popf
or
sbb
lds
mov
loop
and
mov
addl
mov
hlt
imul
movsb
xchg
push
pop
pop
pop
mov
pop
sbb
pushf
in
push
mov
cmp
iret
add
mov
out
std
jne
push
sub
insl
xor
cmp
add
daa
dec
mov
jne
mov
add
sub
or
les
ffreep
xchg
test
movsb
xchg
mov
mov
out
loop
mov
xor
sbb
fidivl
mov
cmpsl
out
scas
std
jbe
jb
jle
jmp
pop
lahf
and
push
sub
dec
xor
cmp
mov
pop
test
test
cmp
or
lock
lcall
jo
sbb
test
lret
add
sahf
sbb
dec
dec
aaa
pop
adc
mov
xchg
aaa
jb
or
mov
jl
in
pop
mov
je
adc
adc
lahf
sahf
adc
rcll
flds
test
mov
pop
aaa
mov
call
fs
mov
fcoms
dec
movsb
mov
mov
inc
mov
cmc
xchg
popl
ja
and
addr16
aaa
pop
in
sub
lret
pop
and
stos
add
and
cltd
mov
jecxz
jecxz
mov
and
inc
outsl
mov
lock
xor
inc
xor
mov
scas
test
lahf
ss
dec
xchg
orb
and
sub
push
add
pop
cmpsb
sub
and
push
sub
scas
lret
daa
stos
and
or
popf
mov
add
repz
mov
mov
je
ret
dec
push
aas
insb
loop
test
dec
lret
lahf
fiaddl
push
mov
jne
test
jg
in
imul
test
mov
es
clc
pusha
push
sti
inc
mov
pop
push
sbb
insb
mov
xchg
xlat
lcall
mov
fsubrl
rorl
ret
ds
cwtl
xchg
out
or
imul
mov
jg
cmp
push
cltd
fistps
ja
movsl
jns
mov
push
cmp
lds
and
repz
jp
dec
dec
mov
push
lcall
and
lahf
leave
xchg
pushf
mov
jns
pop
out
xchg
mov
dec
pop
adc
std
jmp
mov
pop
jecxz
or
gs
divl
pop
rorl
and
daa
mov
sti
lods
or
daa
jge
xlat
fwait
mov
fiaddl
xchg
sbb
call
in
push
pop
sub
ljmp
mov
sub
test
mov
scas
fcom
cmc
sub
popa
inc
arpl
jp
bound
cmp
push
es
in
or
and
out
adc
sub
adc
add
or
mov
andb
daa
popa
out
or
mov
adc
in
xor
pusha
mov
jae
jne
cmpsl
add
push
mov
out
inc
xchg
or
pop
das
sarb
xchg
andb
or
ret
js
fiadds
inc
sbb
decl
pop
les
or
movhps
push
imul
rolb
ret
in
jmp
pop
sar
pop
inc
cmp
ss
mov
or
jne
jno
insl
xor
and
pop
stc
mov
xlat
es
push
icebp
fwait
cmp
and
lret
sahf
shll
mov
pop
jb
fistps
in
adc
push
andl
push
mov
rcll
cli
xchg
cmpsl
ret
mov
pop
repz
out
bound
mov
and
push
andb
cld
sarl
hlt
mov
add
or
push
push
rclb
ja
test
ficomps
sub
lods
jmp
pop
popf
imul
pop
pop
pushf
in
add
imul
cli
sar
mov
in
add
shlb
sbb
stos
push
stc
lcall
ret
test
sti
add
jl
nop
dec
and
add
sbb
xor
xchg
mov
dec
pop
xchg
mov
xchg
xchg
xlat
jbe
je
xor
mov
ja
sub
or
jle
mov
je
cwtl
sub
outsb
mov
sbb
mov
dec
mov
push
insw
stc
adc
lods
sbb
inc
xchg
or
fcomps
in
lea
out
icebp
aam
pop
or
int
les
mov
xorb
fsub
jmp
lds
push
cmp
mov
imul
mov
xchg
cmp
fsts
loope
shr
mov
mov
pop
fstpt
std
xchg
pop
fcoms
mov
stos
int
lock
in
aad
pusha
push
or
cmp
cwtl
mov
inc
fwait
add
mov
mov
cltd
lret
xor
sbb
ficomps
fwait
cmp
xchg
inc
sar
push
add
sbb
jae
decb
jns
pop
fcoml
scas
jns
xor
sbb
addr16
xchg
aas
repnz
je
jmp
mov
pop
xchg
sub
lds
fidivl
ficompl
int
test
aam
inc
bound
xchg
pushf
rol
or
insb
push
mov
ljmp
inc
adcb
sub
les
jmp
je
pop
add
mov
or
in
sbb
outsl
mov
in
xor
pop
out
test
jb
push
scas
int3
cmc
add
mov
or
scas
cmp
loope
mov
xor
dec
inc
std
push
lock
movsl
push
push
mov
fdivl
jae
test
dec
sbb
xor
daa
cmp
ss
in
lods
xchg
addr16
adc
adc
je
pop
sbb
sub
xchg
icebp
lock
mov
stos
mov
fisubs
mov
in
jecxz
int3
pop
push
cs
dec
inc
sbb
cmpsb
loopne
inc
je
and
jge
sbb
add
lock
ds
jle
adc
pop
nop
mov
jae
fiadds
adc
and
jnp
andl
push
pushf
dec
lods
mov
mul
gs
inc
mov
adc
cld
fidivs
add
roll
jl
out
pop
inc
adc
into
jb
lds
int3
push
cmc
mov
mov
pop
in
pop
mov
push
rcrb
pop
test
std
cmpl
adc
mov
addr16
inc
push
inc
test
testl
add
dec
sarl
sbb
dec
js
aaa
int
fdivrs
push
cld
sbb
sub
pop
sahf
pusha
jbe
or
and
mov
subb
or
repnz
sub
out
lret
mov
add
fiadds
in
dec
les
ret
add
out
cmp
xchg
imul
shll
sub
xor
pop
push
mov
xor
pop
and
push
aam
push
imul
cmpsl
aad
xchg
aad
ficoml
push
jmp
fdivrl
mov
sbb
hlt
xor
mov
test
mov
adc
fsubr
jmp
pop
fisubs
imul
lcall
cmp
movsl
lret
shll
es
adc
pusha
push
xchg
mov
jle
or
cmpsb
mov
repz
mov
and
or
out
push
xchg
movsb
enter
stc
xchg
push
mov
jae
mov
inc
jns
sbb
scas
and
mov
adc
mov
in
mov
test
jnp
in
nop
aam
dec
das
xchg
mov
bound
adc
ds
ss
sti
pop
cltd
pop
push
jg
push
inc
fdivrl
sub
cli
nop
mov
adc
dec
adc
cmp
jle
test
and
ret
mov
enter
dec
orb
dec
fs
hlt
daa
push
push
cmp
test
or
jmp
add
mov
repnz
mov
and
and
jmp
cmp
cli
push
mov
frstor
push
fs
add
xchg
jae
es
cmp
pop
or
rcrl
cmp
insl
je
and
and
or
outsl
pop
and
dec
daa
das
push
daa
sub
clc
ljmp
xchg
add
dec
cmp
push
jae
cmp
faddl
jge
cmp
stos
or
aam
jb
data16
mov
cmp
xor
xrelease
loop
sbb
or
cmp
sbb
cmp
fdiv
in
push
mov
out
in
add
clc
in
push
and
add
dec
repz
inc
aad
rolb
testl
adc
aad
sbb
xor
inc
ror
sti
popa
xor
dec
popw
insl
push
add
push
nop
pop
sub
out
cmp
jecxz
lods
push
stos
test
xor
adc
enter
lret
sbb
sub
out
jnp
push
mov
cmpsl
rcr
mov
sub
xchg
jo
int
push
movsl
gs
push
enter
jmp
and
push
mov
negb
adc
mov
stc
dec
hlt
jo
pop
sub
pop
mov
add
adc
arpl
mov
mov
jle
in
and
mulb
jbe
scas
gs
xchg
pop
fmull
and
pop
fadds
and
in
rorb
outsb
push
add
inc
mov
mov
sub
inc
jle
cmpb
push
jmp
out
aaa
test
push
cmpsb
dec
test
lods
or
aas
in
popf
xor
int
mov
pop
adc
adc
xchg
je
add
cmp
out
push
adc
jae
std
mov
jne
push
pop
or
pop
push
jns
out
jns
les
ret
sbbl
rcll
add
jb
insb
jno
and
mov
ret
xchg
aas
dec
scas
int
mov
lret
jge
fisubl
aaa
push
stos
ja
jb
out
shrb
cmpl
pop
dec
aaa
ja
ret
scas
imul
jl
xchg
and
lods
addr16
xchg
addl
dec
loop
outsl
mov
pushf
cmp
jp
cmp
push
fwait
dec
das
xor
in
orps
mov
pop
xchg
cmpsl
cmc
dec
fs
mov
jl
icebp
lods
mov
mov
mov
pop
fmul
push
inc
or
lret
and
sbb
int
jecxz
pop
xchg
out
pop
jl
add
lret
mov
test
dec
xor
in
mov
rorb
icebp
icebp
pop
jge
push
mov
add
sub
push
arpl
leave
fidivs
in
or
iret
bound
xor
jle
test
fucomip
in
cmc
xchg
scas
aaa
and
loope
cwtl
xor
jns
idivl
mov
dec
lock
jle
inc
or
es
pop
ret
jo
test
xchg
jne
jl
jne
lahf
pop
sub
ljmp
je
mov
fwait
pop
daa
push
push
jge
sar
hlt
data16
or
push
adc
std
mov
and
sbb
ss
decl
push
sub
jno
jbe
data16
imull
sbb
pop
mov
stos
ja
xchg
xchg
into
hlt
shrb
daa
dec
mov
mov
popa
pop
sbbl
scas
pop
ret
aad
lret
add
rcl
lahf
test
dec
leave
sarl
cmp
inc
and
dec
xchg
ficomps
jae
lea
mov
dec
sahf
fists
xchg
xlat
das
inc
sub
sbb
push
and
or
sbb
out
fsts
ficoml
ja
imul
cs
xor
fildll
andb
sub
in
inc
mov
mov
sahf
cmp
sbb
scas
idivl
lcall
daa
or
lea
test
sub
popf
shlb
iret
idivb
push
mov
aas
ficoms
push
lret
arpl
mov
test
sbb
lock
jns
das
jae
jb
xlat
js
imul
or
xor
icebp
data16
lods
lea
mov
adc
and
fwait
call
lea
pushf
pusha
fsubl
inc
mov
out
aas
mov
mov
in
adc
aam
add
ficomps
stos
pop
add
int3
andb
sbb
imul
cmpl
add
jl
loop
cmp
daa
jnp
outsb
sti
jns
xchg
and
lcall
notb
xor
dec
std
arpl
fisubl
and
sub
dec
lods
fisubrs
cwtl
je
dec
xchg
sub
nopl
das
fstps
stc
adc
aad
dec
push
push
push
es
or
sub
or
mov
mov
fs
out
jge
jnp
or
stc
or
mov
mov
aas
cmp
push
sub
dec
cmp
fimull
add
pusha
mov
sbb
mov
mov
sbb
testl
fldl
adc
lds
aaa
pop
int3
insl
ljmp
pminub
stc
fs
sbb
inc
jae
push
es
pop
imul
test
pop
pop
pop
adc
xchg
out
jmp
mov
lret
hlt
popf
enter
cmp
pushf
push
cmpsb
dec
daa
dec
xor
jmp
dec
popf
enter
icebp
mov
popa
xchg
dec
xchg
jno
push
mov
loope
stc
adc
xchg
inc
fnstenv
xchg
fmull
movsl
adc
aaa
mov
frstor
in
push
lret
popl
jno
movsl
jae
loop
adc
div
aaa
int
mov
cmp
movlps
add
mov
xor
test
mov
lods
inc
movsb
pop
inc
pop
add
mov
pop
fstl
lret
roll
add
pop
dec
in
add
int3
jb
mov
dec
push
imul
pop
jl
test
mov
fsts
add
lock
dec
mov
mov
aad
adc
jecxz
sbb
out
popa
mov
and
pop
pushf
data16
insl
ret
dec
movsl
sbbl
data16
sub
sbb
bound
lret
xchg
push
aaa
pop
mov
push
popl
dec
mov
in
adc
shl
add
jge
out
push
in
or
sub
scas
xor
loopne
jle
push
insb
movsb
ss
imul
cltd
js
popa
xchg
scas
out
push
jns
sbb
mov
cld
fwait
mov
inc
mov
stc
out
xor
inc
and
arpl
jmp
xchg
lret
and
push
sbb
pop
daa
dec
xchg
push
rcll
inc
mov
jl
stc
dec
xchg
dec
ds
xchg
subb
xor
in
mov
mov
in
std
inc
call
xchg
sub
cmp
shl
shlb
in
push
ret
fs
mov
fildll
scas
pop
push
jge
push
gs
lea
in
jge
scas
sbb
mov
pop
dec
outsb
test
shll
cmpsl
cmp
adc
pop
stos
and
sbb
inc
pop
and
mov
push
jne
push
stos
cmpsl
add
xchg
mov
mov
int
push
dec
imul
sti
mov
repnz
in
mov
jbe
notb
aas
das
adc
insl
inc
pop
mov
cmpsl
mov
push
mov
xchg
xchg
cmp
pop
test
mov
cltd
stos
flds
mov
lea
adc
xor
mov
ds
jns
jb
out
cmp
pop
xchg
cs
dec
mov
nop
orl
stc
cli
jae
jg
lods
in
sub
test
xchg
mov
xor
xchg
xchg
adcb
in
aas
adc
std
adc
pop
pop
xorb
ss
jns
hlt
sub
es
test
xor
cmp
negb
or
cmc
mov
pop
jp
or
shll
and
mov
mov
sbb
test
push
cmc
jecxz
mov
sub
mov
int
mov
cmp
in
notl
out
test
fsubs
addb
xor
push
xor
lret
or
test
mov
dec
xchg
rol
outsl
add
mov
mov
dec
push
xchg
sbb
aaa
imul
nop
cmc
das
mov
xchg
fisubs
jne
pop
dec
push
cmp
hlt
cmpsl
or
mov
pop
and
sahf
inc
jno
sub
cmpsb
jae
dec
cmp
ljmp
adc
pop
shlb
testl
dec
pop
xchg
xchg
mov
pop
cmpsl
gs
xchg
cmp
aam
xor
mov
mov
stos
fwait
xchg
inc
and
push
clc
dec
icebp
cmp
push
test
push
negl
sub
popf
pusha
push
in
les
push
pop
xor
push
jbe
mov
cld
les
cmp
cltd
stos
mov
or
adc
call
sbb
push
rcrl
sbb
fldl
vandpd
sbb
or
mov
mov
mov
adc
jns
inc
jp
pop
push
sti
test
mov
jmp
cmc
popf
daa
xchg
int
fisubrs
scas
mov
jbe
shll
mov
mov
push
lods
js
or
jnp
sub
fldl
ljmp
bound
cmp
push
jo
xlat
adc
add
jb
pop
and
jle
add
ficoml
cmp
movsb
out
sub
jl
scas
int
lods
sub
pusha
sub
pop
nop
push
fmull
lods
aaa
jno
jno
adc
test
lea
js
sbb
xchg
adc
cmp
xchg
push
jns
jmp
jne
fisubrs
jmp
jmp
lea
test
xor
jne
fwait
adc
mov
fisubrs
pop
loop
lea
mov
add
push
incl
lods
sbb
mov
add
dec
inc
mov
cmp
add
loope
and
lcall
out
aam
jns
dec
call
push
push
add
aaa
sub
inc
icebp
fs
sub
lds
pop
mov
in
jle
ds
gs
xor
jmp
jp
sub
leave
inc
frstor
inc
test
xchg
mov
xor
call
insl
popf
sub
inc
insb
pop
jno
iret
lret
mov
push
pop
lret
add
mov
jecxz
adc
add
mov
rorl
je
add
xchg
adc
adc
sbbl
dec
jns
and
sub
sbb
dec
outsb
test
xchg
jns
push
mov
fs
js
adc
lock
pop
mov
mov
daa
push
arpl
and
std
jbe
lret
xchg
out
shrl
into
aad
xlat
dec
roll
out
je
insl
gs
enter
cmpl
pop
xor
test
jmp
jge
insb
cmp
dec
adc
add
dec
fs
add
in
je
push
mov
fsubrs
push
std
push
repz
inc
clc
into
mov
aas
sbb
dec
lods
push
sub
pop
xor
sbb
in
jo
mov
fidivrs
jno
test
xor
pop
stc
cmc
mov
incl
repnz
insl
and
pushf
jmp
lcall
lea
dec
jmp
in
std
or
jbe
inc
dec
or
shr
popa
popa
js
rcl
hlt
aas
xchg
test
repnz
lock
or
movsb
gs
mov
sbb
dec
mov
je
fmulp
add
adc
jmp
call
out
bound
push
stos
js
mov
pusha
inc
cmpsl
or
inc
mov
iret
or
outsb
mov
jnp
mov
popf
adc
xchg
filds
cwtl
dec
mov
fsub
push
xlat
call
jmp
dec
ret
daa
push
sub
lea
mov
mov
add
data16
vxorps
mov
adc
fwait
test
cltd
cmp
mov
insb
test
or
xor
shlb
inc
sub
xor
movb
in
fdivrl
cwtl
mov
fbstp
jbe
test
stos
mov
push
mov
jmp
mov
fs
adc
hlt
xchg
adcb
mov
sbb
ja
das
scas
mov
mov
sahf
lock
mov
mov
lahf
jg
xchg
xchg
rep
pop
pop
adc
sar
push
jae
lret
mov
push
jge
xabort
mov
push
mov
push
aad
pop
push
cmp
imul
xchg
fildl
mov
mov
mov
cmp
aam
lahf
adc
inc
repz
in
dec
jbe
pop
or
jg
sbb
lahf
out
or
call
jl
fwait
mov
sub
or
pop
lret
scas
fimuls
ja
lods
clc
mov
or
push
mov
mov
repz
fsubs
xor
dec
mov
lods
ret
test
pop
xor
std
pop
arpl
mov
and
aad
in
dec
imul
sub
cmp
push
push
xor
bnd
mov
in
int
ficompl
shlb
mov
sub
bound
jbe,pt
std
xor
es
in
sub
mov
inc
jnp
lock
mov
mov
adc
or
and
pop
xor
aas
mov
pusha
mov
ja
ret
cmp
shlb
lock
add
int3
lret
daa
hlt
loop
cmp
add
adc
adcb
sahf
xchg
xlat
addl
sub
mov
aad
imul
xor
fidivrl
jecxz
lret
scas
push
and
xchg
and
rolb
rorl
in
push
int
jg
xchg
push
ficompl
lcall
xchg
mov
ficompl
rorl
mov
cltd
stc
ja
cmp
sbb
outsl
push
dec
pop
lahf
mov
inc
fdiv
mov
mov
pop
neg
push
stos
data16
adc
xor
notl
loopne
das
popa
mov
jbe
adc
lret
mov
cmp
mov
dec
push
push
iret
lock
mov
pop
in
les
cwtl
adc
lcall
insl
pop
mov
jecxz
mov
cs
outsl
imul
mov
stc
movsl
xorb
rclb
decl
iret
push
add
in
out
stc
les
jecxz
out
clc
icebp
stc
jo
pop
inc
sbb
stos
daa
push
xlat
and
inc
addr16
xor
inc
dec
insb
jmp
jno
inc
scas
and
gs
sub
fldcw
lret
inc
xchg
loope
inc
add
fsubrs
mov
dec
pop
mov
adc
rcrl
cli
ja
sahf
sub
scas
push
movsb
inc
in
pop
cmc
in
ret
push
adc
add
jae
inc
jg
js
sub
xchg
ja
jp
mov
dec
jae
pop
adc
inc
cmp
cli
sub
and
cmp
out
les
loopne
pop
mov
mov
aad
cmpsb
js
dec
cld
inc
jb
sub
das
out
test
nop
aas
rcll
add
jge
ror
arpl
ljmp
or
clc
add
and
sub
xorb
bound
xchg
ret
inc
fidivl
inc
out
adc
lcall
jbe
addr16
mov
imul
cmp
jne
xor
mov
fimull
cmp
xchg
out
sbb
lret
sar
sub
xchg
popf
adc
sbb
pusha
aas
insl
and
sbb
mov
pushf
rol
jle
movsb
dec
addr16
das
mov
jmp
xchg
pop
push
xor
adc
loope
arpl
or
mov
popf
mov
in
ds
sub
cs
mov
aad
mov
xchg
or
mov
xor
iret
test
dec
ret
mov
push
sub
pushf
or
push
sbb
and
bound
movsb
xchg
jle
rclb
stos
mov
test
inc
imul
push
mov
xlat
sub
xchg
add
jge
xor
orb
mov
loop
aad
xor
mov
arpl
sub
into
out
arpl
ret
incb
adc
xor
insl
movsl
jo
dec
xor
cli
shll
push
je
cwtl
lret
and
stc
xchg
cmp
cmp
jp
mov
std
dec
in
int
inc
sub
mov
imul
pop
cmp
pop
xor
jp
hlt
xor
int
in
out
imul
push
mov
xor
bound
andb
cmp
or
lds
mov
notb
ljmp
push
in
aas
push
inc
rcr
imul
ja
fisubs
lret
sub
iret
xchg
push
jnp
inc
or
addb
lret
xchg
dec
pop
sub
stc
in
mov
lea
or
mov
dec
jne
push
push
inc
dec
addb
and
outsl
shlb
imul
xchg
mov
jb
dec
cmp
adc
and
sbb
push
dec
sub
cmp
pop
test
dec
pop
loop
ret
or
jns
xchg
je
cs
and
stc
pop
lock
fiaddl
cwtl
cmp
dec
adc
rorl
pop
dec
pop
ss
cmp
pop
jl
jecxz
xor
add
fldl
lahf
mov
dec
call
and
adc
sub
jbe
mov
in
popf
sbb
push
mov
in
loopne
mov
movsl
cmpsl
xor
cmpl
pop
or
frstor
mov
movsl
test
bound
test
lcall
cmp
pop
xchg
sub
cmp
mov
or
and
outsl
pop
dec
sbb
jns
mov
xchg
xchg
and
mov
aam
out
sbb
cmp
lret
mov
mov
es
inc
test
mov
xchg
cmp
mov
dec
out
ficoml
jg
mov
sbbl
aad
cmp
sbb
sets
gs
mov
pop
call
jle
mov
lcall
fsubrl
adc
mov
pop
gs
aad
test
lea
add
gs
inc
jle
xor
lods
xor
pop
mov
jp
add
popf
sti
into
repnz
stos
roll
dec
mov
dec
push
mov
mov
xchg
xchg
movsl
inc
and
arpl
and
add
out
fwait
and
pop
mov
jge
pop
dec
loopne
pop
inc
cmp
push
push
and
es
adc
pop
rcll
xor
leave
dec
add
and
inc
imul
mov
mov
lods
mov
jge
out
lahf
loop
aaa
mov
rol
cli
cs
pop
inc
rolb
jl
lea
fs
cmp
cmpxchg
jae
inc
inc
xchg
pop
and
hlt
push
add
imulb
push
mov
fdivs
stos
push
out
in
ret
lds
popf
lock
adcl
je
out
movl
hlt
xor
cmc
lcall
or
stos
test
sti
arpl
jmp
add
push
dec
mov
or
test
es
out
insl
jge
stos
lea
out
daa
in
or
cmpsl
je
out
inc
test
psrad
mov
mov
cs
fisttpl
mov
or
sbb
test
repnz
or
fdivl
aad
xor
jnp
mov
push
push
cli
shlb
jg
ret
stc
popl
cltd
shrl
fs
dec
lock
aas
push
shl
dec
jmp
or
ficomps
jbe
sbb
dec
int3
dec
sub
jmp
sbb
aam
mov
dec
push
sub
inc
es
fiaddl
inc
out
dec
dec
rcll
in
lds
xchg
sub
pushf
imul
test
jne
xor
stos
cld
jge
and
mov
or
mov
movsb
jle
movsb
inc
ja
sbb
mov
inc
dec
dec
test
cmp
in
fistl
push
mov
iret
cmc
nop
pop
xor
fcoms
cmp
adc
test
out
adc
xor
roll
aas
add
cmp
in
ret
cmp
cmp
jmp
pop
sti
add
push
shll
add
sub
push
and
flds
xor
pmulhuw
pop
lret
cmp
out
push
mov
xchg
mov
push
cmp
dec
sub
jmp
leave
sub
int3
test
push
addr16
mov
dec
int
lcall
xchg
gs
lcall
mov
cmp
outsl
or
gs
andl
jecxz
lahf
faddl
loop
and
sub
jno
jbe
xor
cmpsb
into
adc
clc
clc
pop
pushf
jb
rcll
cmpsb
lret
pop
out
mov
ret
mov
dec
or
aad
lcall
cwtl
and
ds
push
pushf
push
cltd
subl
sub
fisttpl
insb
add
xchg
sbb
fcomps
inc
js
shll
pop
mov
in
push
popf
stc
mov
orl
mov
mov
sbb
cmp
mov
out
lea
dec
and
cmpsl
mov
in
and
jbe
add
lret
sub
ja
xchg
and
rorl
fidivrl
add
stos
lret
cs
in
inc
loope
cmp
lods
emms
mov
jno
and
fabs
clc
out
sbb
push
adc
stos
push
lea
inc
bound
int3
add
bound
cmp
pop
xor
repz
mov
inc
iret
int3
sub
repnz
or
pop
mov
je
sbb
cmp
adc
loopne
rorl
pop
arpl
jbe
push
pop
add
lods
in
mov
fwait
jle
push
dec
aad
roll
rorb
mov
inc
lock
enter
repnz
adc
mov
dec
cmpsl
and
imul
or
idivb
testl
lds
xchg
or
jnp
aam
push
dec
pop
mov
fs
int3
mov
sbb
push
dec
shlb
adc
push
add
jae
imul
xchg
dec
jmp
and
aaa
aas
mov
inc
scas
xchg
mov
jg
mov
mov
es
in
mov
popa
mov
loopne
test
out
std
jo
lea
pusha
push
insb
lcall
xchg
mov
rcrb
repz
cltd
scas
xchg
test
mov
in
adc
pop
in
es
mov
dec
out
insb
add
pushf
adc
push
stos
lret
xor
mov
mov
aam
mov
in
mov
in
lods
leave
es
les
inc
mov
fistpl
call
in
mov
test
mov
jbe
sub
mov
push
test
cltd
mov
fistps
movsl
or
stos
dec
jge
jnp
cmpsb
fstps
dec
dec
push
jae
cmc
loope
bnd
xchg
pop
loop
in
lock
add
xchg
scas
inc
mov
or
lock
push
jmp
jnp
pop
and
push
std
jne
movsl
xor
or
mov
jnp
out
mov
int
ror
pop
inc
cmp
nop
inc
lcall
je
cs
loope
into
aaa
cmpxchg
imul
xlat
shlb
sahf
std
mov
push
mov
out
jle
push
push
dec
mov
outsl
test
frstor
les
lods
fdivrs
mov
pop
xor
inc
jecxz
les
shr
cli
pop
cmp
fidivrl
sub
std
sub
jg
push
cli
push
mov
out
jno
mov
push
test
imul
or
cmp
push
ret
cli
ja
add
aas
cmp
in
or
pop
sub
lods
sub
test
or
cli
push
icebp
int3
mov
pop
xchg
loope
stos
in
loop
and
dec
ss
rcll
fldenv
stos
mov
std
movsl
jnp
pop
dec
sub
push
xor
mov
sar
aaa
pop
je
add
inc
scas
inc
or
pop
jae
das
out
mov
sar
add
mov
je
js
mov
mov
pop
inc
adc
int
lret
out
call
es
inc
mov
ja
mov
mov
sbb
std
movsl
sub
inc
repz
loope
out
into
insl
iret
or
mov
sbb
adc
inc
dec
pushf
mov
jp
mov
sti
fnsave
mov
rcll
leave
mov
cmp
add
inc
pop
jae
iret
mov
mov
xor
cs
jno
popa
and
aaa
jl
inc
lcall
xchg
sahf
in
fcomp
mov
fs
loop
xchg
pusha
cmp
fisubrl
mov
popa
pop
imul
iret
addr16
or
add
lds
adc
inc
mov
or
xchg
pop
imul
call
in
lahf
cmpsb
imul
dec
inc
idivb
out
movsb
ja
aas
add
or
xchg
mov
jae
mov
stos
fildll
jl
push
scas
cmp
sub
or
xor
sti
aaa
subl
mov
jo
adc
lea
std
jmp
xor
jl
jp
iret
mov
mov
fwait
sbbl
stc
stos
daa
mov
cmp
testb
cli
xchg
mov
enter
cmp
enter
push
icebp
mov
push
lahf
mov
xchg
or
mov
aaa
jmp
adc
sub
push
push
xchg
loopne
arpl
adc
les
xor
repnz
stos
xor
push
scas
adc
cli
mov
sbb
jg,pt
test
jne
dec
mov
repnz
cmp
aaa
into
mov
add
sub
mov
mov
test
cmp
nop
xor
js
fsubs
dec
jp
inc
sub
shll
add
push
fsub
or
jno
dec
inc
leave
pop
pusha
xor
inc
fcoms
push
mov
decb
lret
adcl
in
sbb
add
xchg
rorl
push
adc
fnstcw
rcll
dec
cmc
popf
inc
pop
mov
dec
imul
sbb
ret
lea
cmp
out
mov
mov
cltd
sbb
in
ds
xchg
mov
inc
punpckldq
aam
jmp
loope
shlb
jge
insb
dec
and
sbb
outsb
or
xchg
pop
pop
ljmp
cs
in
dec
pop
dec
or
mov
xchg
mov
lods
dec
xorb
loop
ret
pusha
call
jmp
xor
xor
xchg
xor
push
aam
xor
cltd
xor
mov
xchg
ret
into
pop
xchg
adc
xchg
adc
sarl
add
mov
adc
lods
jmp
push
push
push
xor
iret
xor
push
mov
ret
fcompl
add
push
ror
push
dec
cld
or
int3
adcb
scas
lea
and
mov
mov
pop
ja
mov
inc
push
jno
sbb
testb
sub
mov
xchg
xchg
xchg
pop
jmp
add
pop
outsb
idivb
jecxz,pt
xor
jb
out
adc
add
sbb
stc
push
jp
mov
les
dec
push
sub
gs
or
push
push
in
xchg
push
pop
mov
pop
mov
mov
cmp
lods
fldl
fisubl
call
inc
rcrl
jecxz
in
cmp
xlat
jmp
adcb
or
imul
and
push
sbb
enter
pop
sub
hlt
jle
iret
test
das
xor
enter
and
or
xchg
sbb
mov
ret
lods
ret
lret
and
movsb
aam
cmp
dec
sahf
shlb
popa
mov
sti
fnsave
lds
xor
cmp
bound
lods
in
inc
pop
fsubrl
out
hlt
xchg
arpl
pop
fcmovu
and
push
in
stos
cmp
mov
addl
faddl
mov
sbb
jecxz
in
sub
psllw
push
in
aas
inc
push
aas
inc
and
mov
cmpsl
leave
inc
and
mov
out
adc
mov
jo
mov
or
pushf
iret
lock
mov
adc
mov
push
sub
push
dec
insl
or
mov
mov
lcall
mov
jns
and
or
xchg
dec
lcall
js
scas
insl
cmp
mov
imul
dec
sbb
shl
pop
pusha
pusha
mov
pop
loopne
scas
insl
fwait
out
data16
sbb
add
xchg
ljmp
lahf
loop
int3
adc
push
mov
stos
sti
movsb
jge
imul
mov
pop
mov
stos
sbb
out
clc
mov
enter
fcompl
or
jp
cwtl
hlt
xchg
pop
int3
ret
and
scas
lods
loope
or
xchg
mov
xchg
mov
cmp
sub
mov
and
mov
add
sub
sahf
push
std
mov
ret
popa
add
jge
lahf
popa
xchg
lea
mov
sbb
cmp
or
mov
cmp
mov
and
mov
in
insl
lock
mov
or
add
into
adc
jo
cltd
mov
nop
in
mov
jo
xchg
xchg
xor
bnd
xchg
pop
sti
mov
cmp
xchg
add
nop
sahf
stos
xchg
lds
sub
jp
mov
mov
xchg
dec
push
add
ja
test
jb
cmc
in
ja
or
dec
fldenv
push
fdivrl
mov
je
cmp
sbb
pop
scas
lods
or
mov
cmpsl
aaa
or
mov
sbb
test
testl
jecxz
pushl
or
lea
xchg
inc
mov
jecxz
inc
into
into
out
clc
sbb
sbb
loopne
add
jmp
cmp
fldt
hlt
pop
xlat
cmp
sbb
aad
ud0
add
mov
add
adc
mov
xchg
pushf
and
arpl
add
cmc
push
scas
out
js
clc
test
adc
mov
hlt
xchg
sbb
jne
popf
or
leave
sbb
adc
xchg
leave
int
lret
cwtd
int
and
xor
push
sub
aas
mov
bound
jno
outsb
inc
lods
loop
sub
out
mov
jo
call
cmpsb
mov
pop
cmp
mov
rcr
aaa
mov
and
push
jge
int3
sbb
mov
or
lock
inc
xor
xchg
sbbb
pop
out
jnp
xor
mov
mov
js
test
xchg
orb
inc
mov
iret
inc
push
cld
jnp
loope
xor
out
daa
xchg
xchg
outsb
inc
and
mov
add
outsb
cmp
push
and
cmp
in
inc
mov
leave
mov
mov
jmp
js
loopne
fs
inc
and
gs
cwtl
loope
daa
push
xor
and
xchg
popa
mov
loope
xor
in
adc
imul
pop
pop
leave
mov
cmp
xchg
xor
sahf
cmpsl
aam
dec
mov
cwtl
nop
dec
add
jb
sub
pop
lock
and
leave
pop
push
arpl
sbb
add
mov
int3
shr
and
adc
sub
xor
mov
xchg
adc
into
push
dec
adc
fucomip
cmc
jecxz
jmp
pop
out
mov
mov
mov
ss
rorl
cli
test
dec
pop
int
ljmp
clc
pop
lods
mov
jbe
hlt
insb
mov
out
mov
jg
xchg
sub
push
xlat
test
fcmovnbe
sbb
pop
in
pop
loopne
inc
mov
hlt
loope
sub
cmp
sar
inc
in
jb
lock
and
or
idivl
mov
scas
arpl
inc
fistps
mov
int3
inc
add
in
pop
sbb
aam
push
scas
loop
push
lock
cwtl
xchg
pop
xor
sub
rcrb
das
out
mov
cmpsl
inc
pop
sbbl
out
mov
leave
sbb
clc
int3
adc
cs
jno
aas
lea
jne
push
sbb
mov
dec
mov
cmc
xor
inc
in
add
out
xchg
fstl
testl
int
cld
mov
leave
jecxz
leave
cmp
rcrb
je
mov
bound
lret
or
and
or
adc
mov
stc
xlat
insb
call
test
jp
cmpsl
jecxz
dec
mov
lcall
dec
out
mov
cmp
push
pop
movsb
cmpsl
pop
mov
sub
mov
lret
add
fidivrs
jns
fsubl
push
ljmp
jecxz
add
imul
js
jo
cmc
fldt
rcr
nop
imul
or
xchg
jb
mov
pushf
or
data16
xor
std
insb
mov
mov
inc
adc
flds
shll
popa
xor
jp
push
sahf
inc
ja
push
fistps
je
lret
pop
and
mov
adc
cmc
cmpxchg
dec
shld
arpl
inc
movsl
lcall
pop
dec
jmp
pop
lods
bound
or
or
push
mov
jp
lret
push
jnp
sub
movsl
cmpsl
movsb
cmp
jae
push
scas
dec
les
xor
adc
dec
and
rorb
test
pop
pop
das
xchg
lahf
xor
fisttpl
lea
push
sbb
cmp
cli
jp
push
push
jnp
xor
jecxz
inc
sbb
sti
adc
cmp
pop
fucomi
or
js
xchg
sbb
mov
int3
popa
psllw
cmp
ficoms
nop
push
mov
nop
inc
and
test
jmp
jnp
xchg
add
push
inc
and
fsubl
sbb
inc
dec
pop
adc
and
leave
dec
pop
xor
in
gs
jae
movsl
sbb
repnz
loopne
lods
adc
adc
cmc
push
stc
xor
into
subb
mov
cmp
les
jns
jno
mov
and
dec
cli
jno
mov
enter
adc
icebp
iret
mov
xlat
push
jecxz
pusha
out
push
cltd
dec
add
adc
loop
loopne
jecxz
dec
fistps
xchg
add
out
aam
mov
cmpsb
aam
aaa
mov
push
cmp
lahf
xchg
out
icebp
shll
out
inc
jne
lea
or
imul
mov
adc
sub
jmp
std
daa
shll
mov
dec
jbe
mov
inc
les
jne
test
cmp
and
int3
mov
push
sub
loopne
movsb
xor
cmc
shll
outsb
sahf
push
push
test
mov
cmpsl
dec
imul
call
test
sbb
outsb
xor
shll
lahf
fistl
loope,pt
push
jo
mov
sti
cli
dec
push
lahf
lret
stos
push
ret
pusha
pop
jp
sbb
push
addr16
and
aaa
pop
sub
or
outsb
imulb
cmc
inc
jge
mov
call
call
mov
or
push
mov
je
inc
add
mov
negb
and
adc
pop
nop
rcr
ljmp
lods
imul
sti
push
or
xchg
mov
movsl
dec
aas
inc
cmp
icebp
rorb
cmpsb
hlt
cmp
mov
adc
pop
das
cmp
mov
movsl
sub
mov
sbb
jmp
mov
mov
stc
lock
cmp
mov
nop
mov
popf
stc
fwait
sub
insl
xor
call
jns
mov
and
fisttpl
fdivl
pusha
out
movsb
xchg
pextrw
mov
pop
lock
xchg
mov
mov
das
sub
inc
ss
andl
stc
sub
xchg
mov
and
and
pop
jb
out
aas
repnz
cmpsl
sahf
shll
and
int
test
jb
push
and
jno
cmp
addr16
pop
mov
sub
lods
cld
cmp
iret
aas
push
imulb
sub
mov
shlb
adcb
pop
sahf
mov
cmpsb
scas
or
xchg
jne
enter
and
aas
dec
adcl
lret
xchg
xchg
js
jbe
inc
and
repz
sti
mov
rcr
iret
clc
lock
jmp
jns
sti
pop
mov
add
xor
or
fcomi
jp
hlt
mov
push
stos
push
stos
incl
dec
adc
sbb
xchg
dec
push
sub
mov
push
shrb
mov
loope
dec
mov
cli
sbb
or
or
or
add
push
mov
shrb
fisubrl
add
sbb
dec
pop
scas
push
sub
pop
sbb
adc
shr
insb
mov
xchg
jo
add
sahf
push
push
sub
cmp
jb
or
bnd
adc
sub
lcall
xchg
dec
mov
pop
cmp
lods
push
adc
mov
fbstp
out
cmpsb
aam
es
scas
pop
pushf
dec
jp
xor
or
dec
lahf
shl
jnp
mov
cmp
or
push
mov
mov
sbb
fiadds
pop
push
xchg
jo
sbb
add
setp
insl
test
lds
add
decl
xchg
nop
lods
sub
add
or
dec
inc
push
dec
inc
dec
xor
add
add
add
add
je
jb
arpl
fs
jae
add
add
add
add
insb
jns
jb
jo
and
and
arpl
and
xor
xor
xor
xor
popa
bound
data16
popa
jb
add
inc
add
inc
