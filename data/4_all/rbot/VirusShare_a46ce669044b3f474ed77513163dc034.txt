push
sbb
in
orl
push
mov
lock
repz
movl
adc
push
call
lea
jbe
xchg
hlt
std
mov
add
sbb
push
adc
xor
add
cmp
in
push
dec
sbb
loop
mov
dec
ds
insl
sbb
in
jb
dec
adc
xor
mov
mov
sbb
dec
sbbb
mov
pop
dec
mov
test
push
push
pop
push
xor
pop
xor
movsl
mov
popf
dec
or
stos
les
add
adcl
shlb
jmp
incl
push
cs
add
addb
loopne
test
rcrb
add
ss
push
cmp
adc
cmp
pop
mov
test
cltd
mov
xor
data16
jbe
jle
lods
iret
int3
adc
nop
and
and
xor
xor
orb
push
fsubl
inc
out
adc
push
push
fildl
movzwl
cltd
mov
stc
push
movsb
sbb
adc
nop
push
xor
lock
pop
int
insb
or
add
push
push
adc
lock
cmp
push
and
cmpsl
stc
cltd
in
fimuls
iret
push
inc
add
ficompl
rolb
mov
push
adc
clc
push
lods
mov
stc
mov
push
adc
pop
xchg
mov
addr16
push
ljmp
cltd
push
and
push
mov
xorl
push
divl
jo
lret
outsl
cld
cmc
rcl
call
add
pop
jg
pusha
dec
cmp
mov
or
stc
lahf
mov
dec
push
enter
fcoml
mov
pop
nop
mov
xchg
xor
fmuls
mov
pop
dec
call
call
in
push
nop
and
dec
sbb
inc
jo
mov
int3
nop
xor
dec
jno
or
mov
dec
icebp
bound
enter
stos
inc
xor
add
xchg
sbb
sbb
add
push
lret
ljmp
push
shlb
dec
adc
pop
shr
ror
jg
cvttps2pi
pop
mov
pop
les
xchg
daa
add
jmp
jmp
xor
dec
mov
mov
rcll
fisubs
pop
lds
sbb
in
adc
add
jl
fdiv
in
mov
ret
movsb
add
or
movsl
push
cmp
sub
test
nop
add
sbb
test
mov
jne
outsl
inc
dec
repnz
enter
add
cs
push
push
inc
mov
lds
dec
andb
pushf
rcrb
push
cld
jne
pop
rcr
clc
inc
xor
fisttps
fisttpl
jge
fdivl
sub
cmp
fmuls
fwait
cwtl
xor
mov
mov
cld
test
mov
lock
dec
das
mov
test
hlt
pop
lcall
sub
jne
pop
jns
mov
inc
ja
cmp
sub
add
incb
push
push
dec
ss
pop
lea
aam
ss
mov
push
cmp
mov
push
lds
xchg
out
mov
xor
adcb
adc
jmp
sbb
jp
movb
mov
mov
sbb
mov
and
or
inc
mov
push
lret
addb
or
fs
jno
enter
adc
ffree
jb
or
in
adc
adc
jne
daa
add
adc
lds
sbb
stos
in
mov
mov
adc
subb
dec
test
test
push
dec
lea
cmp
xchg
push
fwait
ljmp
cld
push
cwtl
sbb
test
sub
adc
in
xor
negl
popl
jbe
int3
xchg
icebp
ret
xor
cmp
enter
or
jne
shr
push
push
es
dec
or
mov
bound
dec
adc
test
mov
enter
inc
inc
rolb
ja
push
rcrl
jmp
dec
test
loop
cmp
push
and
dec
cltd
jmp
cmp
mov
adc
lds
pop
in
inc
call
in
sti
add
xor
cmc
dec
cltd
sbb
or
in
gs
lcall
stc
sti
or
adc
push
push
adc
pop
mov
mov
dec
lock
xor
pop
mov
mov
cmp
movsb
mov
jle
rol
es
nop
inc
sbb
sbb
in
adc
test
je
add
push
push
lcall
idivl
pop
jo
adc
mov
es
hlt
or
push
sbb
inc
inc
sbb
clc
lahf
out
inc
dec
or
xchg
xorb
popf
loop
lea
clc
and
xchg
popf
inc
and
jno
lock
push
push
cmpsb
sbb
adc
test
push
test
xchg
les
into
das
icebp
mov
sahf
sbb
pop
inc
cs
cwtl
testb
mov
fisubs
push
popa
mov
call
lahf
mov
and
xchg
adc
loop
in
sub
add
xor
xor
xor
aam
dec
or
flds
popa
pop
ficoml
ficomps
inc
clc
enter
and
and
adc
iret
xor
addr16
cmp
imul
int3
nop
sbb
sub
shlb
adc
and
push
lock
push
mov
enter
dec
inc
or
push
pop
cmp
mov
loopne
sub
movsl
xor
pusha
enter
and
sbb
dec
inc
ds
bound
mov
inc
hlt
mov
outsl
xor
sub
adc
sub
pushf
xor
jae
push
adc
icebp
mov
dec
sub
mov
xchg
inc
push
les
std
and
sub
pop
or
shlb
pusha
sbb
and
and
pusha
or
mov
test
gs
pop
cmovg
push
test
xor
popl
xlat
mov
and
es
adc
and
rclb
mov
mov
inc
mov
push
fs
adc
jne
mov
inc
adc
test
mov
roll
les
std
lcall
into
mov
fs
inc
jo
popa
jno
sbb
mov
sub
dec
pop
mov
orb
jmp
lds
popf
push
fnstcw
jne
or
fidivrl
fdivrl
fidivs
inc
dec
lds
shl
dec
aaa
adc
enter
loopne
sub
inc
jmp
lds
mov
mov
dec
dec
push
sbb
cmp
pop
mov
sbb
imul
gs
add
xchg
pop
bound
inc
push
dec
fs
data16
or
add
pop
and
sti
inc
push
dec
dec
sub
nop
mov
fistl
in
push
inc
xchg
xchg
mov
xchg
mov
cmc
push
loop
xchg
loopne
inc
pushf
sub
or
and
movsl
ret
cmpsb
lea
ficompl
mov
outsb
mov
and
sbbb
es
mov
fs
or
inc
xchg
pop
inc
fcmovb
inc
mov
or
and
testl
enter
sahf
cmp
mov
inc
scas
and
inc
rclb
mov
sub
std
adc
inc
adc
sti
adc
xor
icebp
pop
lods
sbb
dec
xchg
mov
cmp
adc
std
enter
sti
or
xchg
inc
nop
jle
adc
lods
mov
xchg
or
movsl
cmp
jecxz
and
mov
sbb
int3
in
xchg
push
and
cmp
call
adc
loope
and
mov
divb
add
ja
mov
cld
movsb
ror
adc
add
inc
mulb
repnz
cmp
fisttps
dec
in
out
jo
movb
aaa
jne
mov
mov
push
xchg
sbb
fcoms
or
stos
and
and
shlb
or
mull
jb
xchg
gs
test
out
jo
mov
sub
adc
mov
sbb
and
mov
or
and
cmp
in
jmp
sbb
mov
cmp
and
sahf
xor
lea
add
add
call
notb
cmp
adc
movsb
xchg
sub
push
adc
mov
pop
mov
adc
movswl
push
in
xor
js
loope
test
jns
jnp
inc
sbb
orw
sbbl
inc
mov
or
adc
movl
sub
push
add
and
adc
cmp
in
and
and
xor
and
adc
dec
daa
jmp
or
and
cwtl
data16
mov
jnp
push
push
and
sbb
mov
inc
jle
sbb
test
inc
and
xor
test
jnp
and
lods
push
les
cmp
test
inc
cmp
stc
cmp
nop
xor
adc
add
add
push
pushf
cli
shr
adcl
mov
sbb
jge
mov
cmp
movsb
xor
lahf
sbbl
test
sub
call
les
add
mov
test
mov
stos
repnz
or
mov
test
sbbb
push
adc
pop
cmp
pushf
inc
pusha
out
sub
imul
mov
clc
cmp
xchg
pop
call
clc
inc
test
jle
or
loop
adc
push
call
fmul
dec
icebp
adc
fildll
jmp
cmp
mov
pop
orl
les
cltd
adc
sbb
movb
dec
push
fs
xchg
mov
nop
sub
test
clc
push
les
xchg
mov
sub
sbb
test
push
and
adc
es
pop
or
test
or
sbb
outsb
cmc
inc
loopne
xor
lds
mov
insl
dec
sbb
pop
push
sbb
cmpsb
mov
cmpsb
ds
mov
push
ret
andb
pop
lret
sbb
inc
lcall
jecxz
clc
dec
jmp
or
hlt
jo
push
es
sbb
mov
jae
sub
je
sub
xor
aad
and
ret
jno
stos
sub
sub
jmp
push
test
jg
adc
pop
mov
movsl
sbb
rorl
xchg
mov
xchg
movsl
inc
or
mov
jns
sub
cltd
add
sub
pop
adc
dec
pushw
mov
inc
loopne
xchg
test
sbb
gs
cs
push
pop
push
fs
mov
pop
cli
iret
mov
xlat
in
cmp
cmp
add
inc
js
add
inc
push
inc
dec
push
pop
test
sbb
adc
mov
lret
popf
jmp
cmp
cmp
je
push
mov
cmp
les
inc
faddl
sbb
jmp
ds
sarl
mov
or
clc
and
pop
jg
mov
loopne
xchg
mov
xor
mov
addr16
or
mov
enter
and
xor
arpl
add
mov
cmpb
inc
dec
mov
jo
adc
sub
jl
push
xor
add
ljmp
add
stos
mov
inc
into
dec
dec
sbb
push
or
das
adc
cmp
inc
jg
dec
adc
das
add
sbb
in
jmp
addl
mov
adc
jae
jge
imul
cltd
clc
cld
mov
jae
mov
dec
add
xor
neg
adc
or
jecxz
push
dec
push
xor
and
jle
lcall
and
jmp
int3
cld
cmp
and
test
xor
fcoms
jecxz
xchg
es
out
add
and
rclb
xchg
pop
fs
push
xorb
jb
cmp
push
pop
dec
adc
mov
mov
jl
andb
pop
test
push
sbb
xchg
xorl
sub
shrb
or
or
xor
mov
push
pop
sub
jecxz
xor
mov
xor
pop
push
pop
test
mov
xor
cmp
pop
adc
adc
mov
mov
sub
inc
push
pop
rorl
mov
xchg
pop
add
add
xor
mov
mov
hlt
cltd
mov
pop
adc
rcll
or
xchg
ds
and
push
cmp
je
sub
adc
adc
adc
scas
aad
cmp
sub
repnz
loopne
mov
lahf
xchg
fidivrs
enter
push
xor
call
sbb
and
adc
mov
adc
sub
mov
adc
insl
xchg
lods
sbb
adc
push
orl
cwtl
test
jmp
movsb
jl
int3
lods
dec
test
pop
rolb
test
rorl
test
adc
xchg
dec
test
and
aaa
push
loopne
mov
push
clc
push
or
mov
in
scas
inc
decb
dec
lock
pop
das
adc
jp
cli
add
rorb
xchg
mov
dec
or
mov
pop
xchg
jge
bound
push
movsl
iret
shlb
adc
mov
mov
loope
cmp
jne
mov
cmp
mov
fcomps
mov
test
jmp
cmp
mov
inc
testl
in
adc
in
inc
je
or
push
adc
mov
adc
lock
mov
dec
sub
dec
xchg
in
sbb
sub
je
dec
aam
inc
ret
imul
jmp
in
ss
xor
jne
inc
jmp
inc
and
addr16
sahf
inc
sub
repnz
dec
push
xor
je
and
push
mov
xchg
sahf
push
cmp
pop
jmp
inc
popa
mov
inc
or
arpl
dec
push
les
and
lahf
or
scas
test
int3
push
ret
lea
and
insb
mov
inc
or
mov
shrb
pop
xor
mov
fadds
inc
or
and
lock
shll
shll
and
mov
lret
xor
adc
jg
xchg
daa
out
mov
dec
pushf
andl
inc
mov
cmp
fnsave
loop
mov
push
xchg
push
push
mov
test
sbb
and
enter
adc
sub
ucomiss
mov
mov
nop
xor
jle
add
adc
xchg
aam
rolb
mov
mov
mov
lea
shll
pop
push
or
pop
sbb
adc
sbb
in
pop
jecxz
loop
xlat
shl
icebp
xor
pop
in
jecxz
loop
aas
aaa
js
shll
hlt
lock
adc
xacquire
xchg
ret
mov
call
daa
push
imul
mov
cmp
adc
push
daa
sub
or
adcb
inc
push
xor
dec
fistps
cmp
loopne
nop
add
pop
inc
pop
rcrl
shl
or
shr
mov
cmp
jbe
inc
shrl
sbb
test
xorb
dec
popa
mov
or
mov
mov
adc
mov
add
pusha
jne
push
mov
enter
mov
pop
and
cld
out
push
out
pusha
add
and
xor
dec
mov
xor
sub
test
test
adc
bound
push
inc
jge
dec
scas
cmp
int3
xor
call
pop
inc
mov
mov
sub
roll
adc
cmpsl
add
fiadds
mov
and
jp
inc
jl
mov
fs
ljmp
int3
fisubs
test
test
inc
push
call
fsubrl
push
pop
pop
push
xchg
test
sbb
lds
sbb
sbb
popa
sbb
dec
pop
push
fists
adc
jnp
push
cmpl
dec
adc
push
push
mov
jo
dec
pop
enter
add
or
repnz
mov
sub
fistl
inc
push
push
mov
pop
adc
in
and
adc
xchg
jnp
mov
stc
lret
push
add
xchg
push
jecxz
cmpsb
fs
enter
and
pusha
mov
je
mov
push
call
lock
inc
scas
mov
cmpsb
pop
sbb
sub
std
add
push
mov
xorb
add
sbb
inc
in
cmp
gs
clc
dec
sbb
cltd
and
movb
test
scas
jmp
mov
and
inc
insb
lods
push
loope
jae
pop
jbe
mov
and
sbbl
test
jmp
or
dec
pop
cmp
cmp
test
ret
sub
mov
inc
enter
movsl
lahf
fcoml
ja
call
bound
ljmp
cmpsl
lahf
push
in
mov
out
in
xorl
js
movsb
xor
xchg
xor
pop
push
jbe
das
and
leave
push
test
loope
in
inc
dec
faddl
lods
sahf
or
inc
pop
cld
jmp
scas
sub
add
add
adc
mov
pop
jmp
pop
sub
testb
and
andl
mov
add
jl
jmp
cmp
or
or
and
popf
sbb
cmpsb
int3
loop
mov
xchg
sub
jo
jg
xchg
pop
lds
xor
add
xchg
int3
mov
sbb
cmp
lock
push
mov
cmp
push
repnz
fadds
jecxz
lock
mov
sub
xor
pusha
push
dec
push
jbe
mov
cmp
aad
xchg
pop
jns
add
adc
push
inc
and
test
dec
xor
pop
test
dec
test
cmp
xchg
adc
loop
das
sbb
dec
push
sub
imul
or
xchg
mov
and
and
pop
mov
and
test
mov
push
inc
daa
and
mov
pushf
inc
dec
xchg
clc
mov
cld
xchg
xor
and
inc
les
jb,pn
jno
popf
jl
or
inc
pop
inc
pop
adc
test
pushf
sub
les
arpl
sub
jns
inc
daa
test
aam
inc
ret
inc
adc
sbb
xchg
or
enter
gs
nop
cmp
xchg
es
or
in
adc
and
mov
inc
mov
insb
out
sbb
jmp
and
dec
push
mov
adc
mov
mov
xchg
es
nop
cmp
and
xchg
cmp
jp
mov
lret
mov
out
xor
popf
push
roll
push
or
pop
dec
and
sub
lcall
and
ret
xchg
mov
icebp
cld
and
sub
loop
pop
mov
mov
popa
and
cmp
push
divl
pop
clc
hlt
lods
daa
and
mov
mov
push
sbb
push
movsl
data16
daa
mov
stos
out
and
pop
inc
push
and
adc
inc
mov
mov
xor
and
and
xor
mov
push
mov
adc
mov
and
push
mov
xor
insb
and
inc
in
enter
and
inc
movsb
sub
pusha
cmovg
adcb
adc
bnd
push
fists
ret
sub
sbb
and
daa
mov
gs
push
stc
ret
mov
lahf
lret
mov
mov
pop
adc
nop
pop
cs
jno
xor
push
and
jno
mov
pop
sub
inc
dec
daa
mov
inc
sarb
test
sbb
and
sbb
enter
sbb
and
inc
std
pinsrw
and
sbb
out
es
mov
in
mov
js
test
or
push
movl
sbb
xchg
sbb
xor
std
daa
movsb
and
lods
pop
loop
xor
push
adcb
mov
out
pop
stos
xor
int3
push
bound
fdivrs
in
lock
mov
mov
pop
push
in
and
xchg
adcb
stos
pop
test
loop
pop
popf
xor
xor
or
pop
push
les
mov
sub
dec
jnp
mov
xchg
push
dec
call
xor
inc
and
test
dec
je
mov
add
bound
mov
push
and
mov
push
push
icebp
pushf
fs
xchg
dec
adc
fisubrl
sub
insl
inc
inc
mov
jno
pushf
xlat
addl
or
add
test
scas
xor
das
hlt
sub
and
repz
add
jmp
push
pushf
arpl
gs
stc
sti
clc
push
popa
xchg
adc
mov
adc
push
hlt
and
popa
dec
dec
mov
in
cltd
xor
or
mov
xor
xchg
es
and
icebp
and
mov
mov
xchg
cmp
test
inc
dec
jmp
call
adc
dec
push
xchg
sub
and
shl
and
mov
and
xchg
push
adc
push
sarb
pop
mov
rcrb
fs
dec
push
inc
add
mov
pop
pop
cltd
and
adc
test
mov
enter
push
inc
mov
sbb
test
dec
sbb
sarl
add
fs
jle
ret
pop
shrb
pop
arpl
test
pusha
lds
and
jl
inc
and
push
inc
adc
pop
test
pop
aam
sub
ret
aam
dec
and
pop
inc
sbb
push
rcrb
hlt
test
sti
jbe
dec
add
mov
jmp
push
add
cmp
scas
xor
inc
je
or
or
lock
orb
stc
mov
imul
popa
and
push
in
lahf
scas
popf
push
add
in
ss
xor
movsb
loop
jb
mov
hlt
and
or
sarb
push
and
jbe
sub
icebp
test
inc
xchg
push
mov
rol
loope
shr
add
inc
jmp
push
jae
sbb
inc
cmp
jb
xor
push
mov
push
enter
addr16
gs
decb
add
ja
int3
das
add
xor
adc
icebp
adc
adc
pop
std
pop
adc
dec
xor
sub
and
rcrl
call
fcoms
push
push
test
or
ljmp
cltd
and
jo
xor
fadds
pop
clc
push
xchg
jae
sub
lea
stos
sbb
xchg
xchg
pop
jmp
loope
mov
jne
inc
pop
sub
ds
cwtl
stos
push
xchg
in
sbb
mov
popf
loopne,pn
cmpsb
sub
add
mov
cwtl
shll
or
or
es
or
adc
adc
bound
js
and
xchg
fcomps
nop
shlb
daa
mov
pop
and
scas
movsl
ljmp
xor
or
adc
sti
shr
adc
ja
into
and
push
xchg
push
daa
mov
rorl
add
sub
shlb
popl
sub
repnz
mov
roll
inc
enter
xchg
push
dec
xchg
dec
hlt
stos
call
push
jl
xchg
and
xchg
and
adc
xchg
pusha
sbb
and
and
addb
mov
jns
ffreep
inc
nop
mov
and
out
movsb
aam
sbb
lds
and
adc
and
jge
insb
adc
sbb
pop
mov
dec
mov
lods
into
sbb
ljmp
sbb
xor
je
mov
push
test
int
cli
dec
mov
fs
push
push
pop
adc
push
xor
adc
adc
das
daa
in
dec
and
inc
dec
xchg
mov
sbb
std
adc
sbb
add
outsl
cwtl
rolb
push
mov
or
pop
dec
ljmp
sbb
or
test
lods
cwtl
xor
push
call
pop
test
bound
push
fucomp
xor
xor
div
daa
clc
lds
jo
jmp
inc
lock
ljmp
inc
or
decl
idivb
jne
cmp
add
fstpl
int3
pop
ret
mov
dec
or
bound
jmp
inc
push
data16
pop
addr16
add
adc
xchg
call
lds
xchg
or
je
daa
push
insl
andl
push
aas
lods
or
pop
or
or
push
add
ja
adc
xor
and
es
scas
stos
and
sub
mov
jae
push
addr16
mov
or
cld
test
rolb
je
js
in
add
loop
adc
add
push
push
daa
call
ret
sbb
insb
jae
cmc
stos
xlat
imul
push
sub
mov
add
out
xchg
sbb
in
adc
push
dec
stc
addr16
inc
fs
test
fldl2t
jle
faddl
fisttpll
xchg
rcll
std
jne
fmuls
sbb
sbb
sub
jno
xchg
inc
fists
inc
or
in
pop
clc
cmc
xor
or
lock
lea
fisttps
adc
pop
push
jae
test
sub
and
nop
jmp
daa
xor
and
sbb
push
xchg
adc
enter
push
addb
insb
xchg
dec
xchg
mov
loope
sub
and
mov
sbb
lret
movl
or
and
mov
sbb
jl
faddl
or
pop
xor
sub
or
sbb
mov
or
push
push
cmp
fcoms
or
mov
call
push
lds
push
movsl
push
bswap
cli
xor
aaa
dec
mov
negl
imul
push
sbb
and
bound
fcoms
xchg
orps
jmp
adc
shlb
lret
lret
mov
fnstcw
or
daa
or
popf
mov
sub
out
inc
testl
or
xor
or
fsubs
aam
into
lahf
rclb
or
mov
cld
out
push
or
cmp
jae
shlb
in
test
nopl
or
cmpsb
dec
lahf
in
or
lret
cmpsb
and
hlt
jne
or
mov
push
mov
mov
sub
jbe
adc
test
inc
ret
lret
sub
jne
add
inc
jae
mov
leave
test
cmp
push
add
js
mov
das
jmp
cmpsb
or
add
mov
into
jbe
cmp
mov
enter
and
mov
pop
test
xor
cmp
cmc
push
or
pop
jmp
xchg
cld
inc
cli
ja
push
push
out
inc
mov
adc
dec
je
inc
movsb
ret
and
inc
inc
mov
cmp
push
inc
xor
dec
out
fs
or
sbb
lock
test
mov
add
adc
ja
mov
fdivl
ficoms
adc
dec
ja
and
cmp
cmp
lods
and
sbb
movsb
ja
adc
push
mov
lahf
and
adc
jb
data16
and
sahf
iret
xchg
rol
jecxz
xchg
jmp
inc
jo
sbb
push
mov
decl
mov
pop
punpckldq
scas
cltd
inc
push
or
inc
adc
push
pop
xor
mov
jne
call
add
sub
jmp
fsubl
sub
adc
ds
inc
invd
push
xchg
and
rcll
subb
adc
sub
inc
sub
adc
xchg
xchg
push
jle
dec
dec
push
jp
adc
jo
dec
and
add
push
adc
movsl
rcll
xchg
out
push
repnz
mov
adc
or
mov
sbb
xchg
xor
push
sub
pusha
int
adc
and
pop
sbb
jl
icebp
push
or
mov
imul
inc
cmp
cmp
scas
sbb
test
dec
jge
sub
data16
xor
sub
and
mov
pop
mov
inc
adc
jne
inc
sbb
and
mov
fisubrs
pop
or
cmp
test
mov
jmp
push
ret
jecxz
and
xchg
xor
in
mov
ljmp
inc
lock
jne
or
lcall
mov
push
adc
or
mov
push
inc
or
lret
push
xorb
adc
pushf
mov
ds
test
pusha
addb
jne
and
push
xchg
push
cli
push
loopne
cltd
sbb
cld
cli
test
mov
call
sarb
push
call
popf
movsb
scas
jno
lock
adc
lds
inc
adc
push
mov
fsubl
in
call
ret
std
jle
in
subb
sub
push
xor
fcoms
test
fdiv
push
inc
cs
pop
test
sbb
and
rorb
xor
fcomps
sub
inc
fbstp
icebp
mov
push
push
jns
adc
stc
dec
adc
aad
or
push
enter
mov
insl
or
fdivrs
mov
clc
jne
or
cmp
and
adc
jp
inc
inc
pusha
or
test
fs
fdivr
adc
je
jne
cmp
adc
pop
mov
dec
add
jne
ret
adc
xlat
or
mov
sub
jg
pushf
arpl
and
mov
addl
dec
adc
mov
pop
inc
cmp
add
mov
loopne
sbb
push
inc
lea
xchg
in
xchg
ret
jmp
and
pop
xor
lock
icebp
add
mov
pop
xor
cmp
jns
push
xor
nop
es
xor
sahf
dec
movsb
adc
and
inc
add
add
stc
pushf
push
push
imul
pushf
jb
or
xchg
sbb
outsl
fisttpll
mov
xor
jl
jmp
das
inc
push
maxps
xor
test
jecxz
aas
into
mov
call
clc
pop
jb
lahf
or
xor
mov
mov
cmp
sahf
adc
jmp
sub
fnstenv
mov
lods
adc
cmpsl
mov
lds
cmp
or
push
arpl
aaa
lods
sub
sbb
mov
call
inc
jmp
movsb
xor
push
test
mov
or
xchg
sub
push
movsb
lods
lea
js
lock
or
popf
mov
aam
ret
adc
cli
jle
in
call
and
mov
sbb
out
daa
mov
push
push
mov
imul
sub
mov
sub
call
push
cmp
adc
push
push
mov
adc
jnp
jmp
add
and
test
je
jns
popf
leave
add
xor
mov
push
sub
test
test
jecxz
daa
cwtl
xor
pop
movsb
mov
push
daa
mov
sbb
and
js
popf
lret
dec
test
cmpsb
and
pop
push
mov
jb
or
sub
sbb
xchg
sbb
adc
int3
fsts
push
dec
stos
push
icebp
fwait
test
fiaddl
adc
dec
push
inc
and
dec
test
negb
or
rolb
aam
enter
and
xor
enter
push
jbe
sarl
inc
sub
mov
cmp
movl
and
adc
sbb
mov
call
test
addl
cs
das
jne
push
pop
jmp
or
mov
pop
inc
inc
pushf
dec
push
sbb
push
mov
dec
nop
fsts
dec
or
and
sub
pushf
adc
adcl
push
in
mov
mov
cmp
clc
adc
mov
pop
pop
jmp
out
fwait
sbb
popa
add
mov
jge
or
arpl
ja
data16
adc
push
pop
nop
cwtl
fs
dec
mov
cltd
lahf
test
jle
jb
insl
dec
ja
cmpsl
dec
les
daa
sbb
sar
pop
jecxz
in
por
aas
pop
jmp
push
call
and
imul
xor
cmp
pop
mov
mov
push
ret
inc
mov
sti
cmp
add
pop
dec
mov
lret
adc
pushf
push
mov
movsl
lcall
jno
sbb
int
adc
sub
roll
cltd
movsb
inc
nop
sub
cmp
mov
cmp
inc
push
push
pusha
cmp
push
mov
jb
shl
add
xor
jmp
out
les
cli
adcl
clc
call
cmpsb
fidivrs
sub
pop
adc
je
and
jbe
mov
std
sub
sub
and
cld
xchg
dec
push
lock
mov
frstor
xor
jg
cmpsb
aaa
enter
adc
fisttpll
mov
cmc
cwtl
mov
sub
xor
push
inc
test
call
jo
sub
lret
out
adc
sub
push
xchg
pop
mov
enter
mov
or
inc
iret
lahf
jmp
cmp
pushf
je
push
mov
clc
add
loope
addr16
je
mov
sbbb
or
jle
dec
jne
inc
push
dec
xchg
fadds
mov
rorb
sub
jno
pop
leave
adc
js
inc
inc
dec
lods
pop
xchg
push
mov
dec
test
xchg
inc
mov
add
mov
mov
enter
push
pop
pop
in
scas
sub
xchg
aas
sbb
jno
scas
ror
mov
sbb
loopne
mov
stos
mov
cmp
pop
mov
mov
dec
push
repnz
mov
bound
add
push
mov
bound
divb
iret
adc
incl
adc
pop
and
jo
cmp
and
pop
mov
mov
cmp
mov
sub
xchg
add
test
inc
mov
loope
dec
aas
and
jge
push
add
pop
sahf
out
adc
or
jbe
xchg
or
adc
call
or
call
push
push
pop
dec
les
pushf
fwait
xchg
lea
push
mov
xchg
sti
int
push
push
pop
xor
inc
sbb
dec
mov
lods
cmp
js
push
icebp
movsl
push
or
jmp
mov
andl
lods
test
mov
xchg
dec
outsb
or
idiv
push
inc
push
test
or
les
push
adc
or
pop
pop
lock
ja
xchg
adc
push
mov
xchg
pop
test
push
pusha
mov
sub
adc
es
push
push
rorb
testb
movb
jl
insb
aad
int3
fildll
out
shll
xor
push
mov
cli
jnp
push
add
xor
imul
je
push
je
unpckhps
imul
aaa
fs
jg
filds
and
adc
mov
aaa
jl
das
mov
mov
data16
pop
jo
xchg
xchg
leave
push
push
push
jecxz
pop
cmp
add
inc
sub
es
sti
lea
xor
jbe
add
push
neg
pop
adc
sbb
sub
scas
xor
and
xorb
xor
xor
xchg
fcoml
xor
push
push
mov
stos
mov
sahf
add
cmpb
jne
jb
in
das
add
push
mov
pop
out
add
faddl
dec
cwtl
out
dec
daa
test
repz
and
sbb
push
and
jne
imull
call
adc
xchg
iret
jmp
je
testb
cmp
jne
jle
cmp
push
or
and
and
xchg
ss
pop
imul
mov
push
push
and
loope
pop
in
and
jno
mov
std
shlb
push
push
adc
pop
dec
or
rorl
or
cltd
or
test
adc
int3
in
sub
inc
inc
stc
fs
adcl
sub
test
lcall
add
jne
push
pop
sub
inc
sbbl
jmp
cmp
sbb
sbb
and
push
cmp
sub
mov
nop
inc
filds
cli
or
movsl
cwtl
call
sub
inc
leave
push
roll
mov
aam
pop
imul
mov
call
inc
sbb
xchg
xchg
mov
loop
and
test
adc
ret
inc
push
clc
jne
sahf
lock
sbb
cmp
in
push
imul
dec
mov
repnz
push
push
pop
cmp
ret
mov
mov
sub
int3
add
xchg
enter
sub
sti
mov
dec
inc
cld
sbb
pop
mov
lods
mov
popl
push
repnz
mov
jl
adcw
cld
adc
lock
fs
mov
push
or
and
adc
test
iret
bound
sub
arpl
adc
rcrl
testl
add
add
cmpsl
mov
inc
dec
push
sub
dec
xor
adc
pop
fwait
shl
and
in
and
cmpsl
adc
sahf
or
mov
inc
in
shll
clc
sub
mov
inc
lret
adc
push
nop
and
sti
sub
cltd
ret
stos
int3
clc
ret
les
push
incb
cli
bound
jecxz
or
das
xchg
mov
adc
ss
sbbb
or
leave
cld
sbb
adc
lock
sub
mov
jne
jns
cmp
in
adc
sbb
lock
addr16
add
mov
sub
and
cmp
add
sbb
xor
adcl
or
shr
inc
or
movzbl
rolb
shl
add
test
or
stc
loopne
call
xchg
inc
inc
stos
jno
pop
sbb
add
ret
inc
add
xor
lds
cmp
dec
sub
jecxz
ret
jmp
hlt
or
push
dec
hlt
jno
jg
mov
addb
ss
or
sahf
adc
cli
adc
xor
push
dec
jbe
jno
out
stc
lods
inc
idivb
xor
addb
shll
sbbb
mov
inc
push
mov
push
add
xorb
add
rcrb
push
mov
cltd
sub
sub
cmp
jle
clc
cwtl
call
sub
add
inc
or
and
nop
loopne
arpl
sub
dec
push
jae
mov
fimuls
and
es
adc
cmp
mov
call
xor
jle
andb
loopne
dec
mov
out
pop
testb
jmp
xor
xor
fcoms
repz
mov
dec
and
jnp
mov
addb
cmp
xchg
add
mov
or
inc
mov
push
call
nop
mov
inc
mov
mov
xchg
adc
fcoms
in
popa
or
mov
cli
xor
xor
repz
in
add
aad
mov
pop
divb
mov
inc
push
jg
jo
sbb
xor
cwtl
push
arpl
arpl
add
pop
xchg
sbb
xor
testb
push
pop
push
dec
or
xchg
xor
push
sbb
mov
jns
xor
push
push
push
pop
inc
pop
dec
cwtl
sub
sub
lock
sbb
in
mov
std
mov
mov
rolb
add
movl
inc
adc
push
and
add
mov
adc
cmp
or
xor
or
lock
and
xor
add
inc
int3
mov
jo
ret
test
and
mov
cmp
adc
xor
and
pop
js
jne
sbb
push
push
repz
loope
adc
adc
rorl
push
sbb
or
dec
loop
push
dec
xor
pop
cmp
add
mov
mov
adc
push
sbb
or
loope
test
outsl
andb
in
inc
sub
adc
es
sbb
xor
iret
loopne
xchg
pushf
repz
adcb
and
adc
or
test
das
test
sti
and
lea
inc
repz
sbb
dec
std
fiaddl
cmpsl
es
xchg
push
je
inc
stos
insb
cld
out
mov
jmp
or
adc
lea
insl
fidivs
loope
sub
mov
pop
adc
iret
and
push
ljmp
and
clc
inc
cld
lock
mov
pop
jbe
add
shr
stos
xor
and
dec
hlt
push
inc
pop
mov
sub
jo
xchg
stc
xorl
outsl
rcrl
clc
adc
sbb
or
nop
ret
loopne
cmp
incb
xchg
push
or
es
or
add
rorl
fwait
loop
add
out
pop
imul
cld
insl
adcb
dec
outsl
or
ja
lret
pop
or
shr
mov
in
xor
insb
push
pop
pop
clc
and
loopne
mov
mov
adc
xor
push
mov
fistpl
cmp
setg
sbb
daa
mov
jbe
push
movsb
xor
aam
movl
push
dec
stos
jno
lods
icebp
subb
pop
imul
movsl
dec
cmpl
xor
test
inc
push
and
stc
into
xchg
mov
mov
inc
in
je
mov
test
ret
xor
call
enter
mov
xchg
ret
adc
mov
outsb
loopne
jnp
popf
bound
movsl
adc
push
inc
pop
and
xchg
pusha
in
add
and
adc
adc
push
lret
adc
stc
or
pop
in
out
and
push
ret
test
mov
jo
loope
xchg
insl
push
clc
es
aam
es
loopne
jp
fsubs
mov
adc
pop
orb
or
or
mov
sub
adc
enter
int
dec
cmp
xor
test
cmp
addr16
nop
add
add
push
repz
adcl
in
sahf
xchg
inc
ja
dec
and
xchg
add
fsubrs
inc
inc
add
dec
aam
inc
dec
add
outsb
incb
imul
or
jne,pt
dec
mov
imul
adc
xor
push
test
out
adc
cltd
call
adc
sub
cmp
dec
lret
scas
adc
test
xor
aam
xor
sbb
testb
dec
inc
pop
andb
add
enter
and
inc
rorl
fsubrs
xor
pop
hlt
call
dec
pop
or
fimuls
cmp
dec
dec
fdivrs
dec
mov
adc
sub
jge
pop
shlb
jbe
shrb
je
jmp
lock
ljmp
and
cld
je
in
aam
fdivrl
out
aad
je
in
leave
rcl
and
jbe
add
push
push
gs
mov
js
in
loope
xor
jb
ss
aam
or
mov
dec
fistl
movsl
shrl
or
push
jmp
xor
xchg
add
push
xchg
test
inc
pop
mov
push
mov
aad
sub
iret
adc
subb
xlat
lcall
in
lret
dec
sub
mov
push
ret
pop
pop
lods
mov
daa
lods
jns
fs
lods
inc
lret
or
and
pop
dec
mov
pop
lret
dec
enter
pop
ljmp
mov
fstpl
test
cld
inc
jo
daa
dec
movsl
call
mov
dec
out
xor
xchg
xor
xchg
ret
cmp
inc
xchg
sub
enter
and
call
dec
dec
adc
je
jmp
lds
dec
frstor
mov
pop
push
xchg
dec
icebp
or
and
mov
jnp
outsb
adc
leave
inc
or
and
xchg
stos
push
xor
pop
fs
inc
or
lahf
repz
call
adc
mov
mov
dec
stos
lcall
adc
cmpsl
into
push
xchg
insb
and
inc
daa
cmp
mov
inc
or
jmp
push
aam
dec
mov
pop
push
mov
mov
int3
mov
ret
sbb
nop
mov
mov
adc
mov
mov
xchg
sbb
nop
mov
push
popf
jae
xor
call
ja
pusha
jo
sarb
inc
push
mov
daa
loop
adc
mov
jnp
mov
call
pushf
or
lret
iret
lret
pop
int
mov
ljmp
push
ss
inc
rolb
adc
jl
fadd
jmp
call
xacquire
cwtl
fucomp
andl
sub
dec
out
mov
and
aaa
fisubl
sbb
push
xor
xor
push
cmp
in
adc
pop
out
popa
dec
cmpsb
cli
daa
aam
ja
adc
sub
mov
mov
jo
xchg
adc
or
or
hlt
mov
jmp
out
adc
out
pop
add
push
dec
push
push
hlt
jo
add
inc
push
mov
sbbl
mov
sub
and
push
and
xchg
jge
dec
xor
xchg
sarl
adc
cs
std
or
insb
xchg
loop
int3
dec
lcall
pop
ljmp
mov
push
adc
adc
push
mov
or
sub
mov
hlt
inc
sub
and
dec
jmp
in
nop
xchg
pop
dec
and
xchg
adc
push
shlb
or
cmp
fstpl
in
cmp
xchg
add
add
cmp
mov
lds
leave
imul
xor
adc
or
push
xor
clc
and
cli
mov
test
stc
sub
outsb
cmc
pushf
dec
pop
sbb
ss
call
xchg
les
sti
add
or
bound
and
cmpb
in
add
sbb
mov
pop
push
mov
mov
ljmp
push
pop
push
nop
cmp
push
add
cmc
add
call
lret
adc
fs
push
xchg
daa
xchg
aas
loopne
mov
daa
jg
inc
xor
and
push
dec
mov
sti
push
xchg
sub
js
call
call
rcll
jb
mov
mov
popf
loope
and
adc
cmp
or
outsb
push
cmp
mov
and
pop
nop
push
hlt
cmp
cmp
cmpsl
rorl
inc
push
xchg
pop
or
fists
mov
mov
and
push
test
je
add
or
mov
test
and
hlt
insl
imul
pop
inc
in
scas
aaa
leave
dec
mov
adc
repnz
ja
aad
fstl
xor
sub
dec
iret
pop
pusha
or
sub
mov
cmpsl
sub
gs
push
addb
inc
inc
sbb
push
inc
jmp
xchg
push
cmp
mov
mov
cmp
ret
cltd
daa
mov
mov
mov
or
or
hlt
sbb
ja
adc
sub
mov
mov
enter
imul
push
sbb
test
mov
aas
add
or
sub
hlt
mov
add
and
nop
inc
xchg
cwtl
mov
mov
in
push
cmp
adc
mov
adc
add
mov
dec
mov
dec
sub
and
adc
xor
sub
sbb
fdivs
clc
imul
hlt
lahf
or
rol
shr
int3
loopne
xchg
add
push
cmp
add
mov
fisubrl
inc
xchg
scas
mov
js
ds
dec
xchg
push
shl
sbb
or
xchg
and
lods
aaa
mov
add
cs
shrb
xlat
jg
dec
mov
je
lea
xor
or
push
in
push
mov
mov
xchg
scas
lds
out
sub
rcrl
sbb
sub
sbb
sub
cld
xchg
call
stc
aam
clc
cmpsl
enter
cwtl
out
inc
divl
es
notb
or
jmp
adc
inc
push
dec
cld
fbstp
sbb
in
mov
aam
and
inc
push
sbb
or
jl
dec
and
jne
movsb
jmp
jbe
aam
test
push
jmp
pop
or
adc
sub
inc
xor
cmp
or
jmp
subb
push
xchg
sub
cmp
je
jno
mov
adc
adc
cld
xchg
and
mov
jmp
mov
pop
dec
or
xchg
loop
xor
sbb
sub
loop
movsl
dec
sub
sbb
adc
jno
cmp
push
add
adc
mov
mov
mov
leave
inc
or
jecxz
push
adc
sbbb
out
add
push
and
addr16
mov
sub
inc
sub
subl
or
push
jno
push
mov
sbb
aam
sbb
nop
lret
sub
sbb
or
or
adc
lods
in
adc
cmp
loope
dec
cld
cmc
xor
cld
sbb
std
mov
xchg
cld
add
je
sub
sub
movsl
push
and
or
fstps
inc
lock
stc
cld
add
fisttps
adc
sbb
and
sbb
add
and
push
cmc
xlat
sub
push
xchg
push
xchg
push
mov
mov
lods
repz
aam
add
xchg
sub
jno
xor
sub
jno
and
cmpsl
lods
in
and
inc
inc
shrb
jl
inc
xchg
or
push
lock
sbb
mov
sub
push
mov
ret
mov
or
mov
roll
pusha
pushl
dec
jbe
sbb
leave
adc
aad
imul
mov
nop
xchg
aad
call
push
or
push
push
pop
push
movsb
xor
push
std
jo
jmp
adc
shlb
cmp
loop
push
push
pop
clc
cltd
adcl
in
pusha
or
jne
jmp
xor
push
call
leave
inc
je
stos
mov
dec
or
pop
mov
pop
cld
lock
inc
fisttpl
and
adc
jns
or
jnp
push
stos
inc
dec
jg
std
adc
repz
in
jmp
out
adc
inc
orb
mov
or
pushf
cmp
jl
sbb
addl
fucom
lret
or
fs
xor
incb
faddl
pop
pop
pop
sub
sbb
sti
loop
xchg
mov
push
fs
fcoml
pop
clc
sub
sub
std
sbb
inc
dec
xchg
mov
inc
dec
inc
and
pop
daa
les
std
adc
inc
lea
outsl
fidivrl
push
and
mov
push
push
jmp
fsubrs
mov
jns
mov
cld
inc
bound
jge
adc
test
xchg
pop
xchg
adc
cmp
test
mov
notb
adc
push
cmpb
adc
jmp
or
push
cmp
or
push
cld
mov
sbb
and
push
push
sbb
push
loopne
adcl
je
insb
enter
stos
in
cmp
pushf
pop
imul
fidivrs
out
push
dec
test
test
mov
popa
push
inc
mov
sbb
mov
inc
xor
push
sub
addr16
test
mov
mov
call
jo
and
call
dec
lods
je
adc
push
or
mov
cmp
pusha
pop
jnp
pop
test
and
fs
shlb
xor
push
mov
adc
sbb
or
in
jmp
adc
cld
mov
xor
es
xchg
sbb
fmull
cmpsl
int3
lea
mov
or
repnz
mov
sbb
pop
xchg
cwtl
push
dec
mov
in
adc
leave
pop
jno
adc
pop
add
ret
cmp
sahf
xchg
ret
mov
ljmp
sbb
jmp
mov
add
jae
mov
mov
push
and
nop
wbinvd
inc
mov
pop
pusha
push
ret
jno
nop
clc
sub
mov
pop
jmp
push
xchg
adc
xchg
mov
and
inc
dec
xor
mov
sbb
lods
inc
jae
fs
xor
add
push
push
inc
jg
adc
inc
rcl
or
popa
or
out
dec
test
stos
adc
fbstp
sbb
inc
inc
jp
ss
sub
mov
adc
push
push
push
xor
xor
sbb
call
adcl
cmp
adcb
cmpw
add
lods
adc
push
idivb
loop
cmp
push
jge
lea
fwait
cs
decb
adc
xchg
mov
mov
pop
push
push
ss
push
mov
lret
or
mov
pop
pop
dec
lods
ret
push
std
pop
push
pop
jl
and
jbe
pop
dec
adc
or
cltd
les
loope
call
push
adc
mov
mov
out
sub
sbb
jb
lods
popf
fidivs
sub
imul
test
push
lock
imul
dec
xchg
xchg
push
dec
js
lcall
push
sbb
int3
mov
sub
sub
in
push
jmp
dec
dec
in
fwait
or
std
jg
pop
shll
jmp
push
mov
jne
push
outsl
in
mov
add
sarb
enter
test
testb
mov
rcll
movsb
mov
into
stos
inc
push
sub
hlt
push
dec
xchg
roll
cmpsl
cwtl
pop
cltd
jno
call
xchg
pop
inc
gs
jns
call
je
int3
test
loop
sbb
add
sarb
jb
jmp
xchg
das
pop
imul
push
stos
xor
ds
jmp
jbe
sub
jl
add
call
andb
mov
cltd
jo
mov
dec
sub
xor
add
test
cmp
pop
lahf
xchg
lock
int3
pop
cli
and
push
dec
daa
dec
lahf
pop
fs
jne
movsb
lcall
movsb
mov
loope
pop
mov
testl
and
fmuls
fcomps
or
je
mov
cmp
dec
in
outsb
scas
shlb
in
dec
push
sbb
push
xlat
mov
imul
movsl
inc
scas
in
daa
inc
mov
sub
outsb
sub
xchg
fwait
adc
pop
lds
sbb
mov
mov
add
jae
mov
xchg
adc
mov
nop
clc
pop
clc
mov
push
xchg
das
or
adc
and
sub
stc
je
sbb
inc
inc
das
cmpb
test
jmp
mov
sub
lea
xor
or
inc
xchg
fimull
add
push
pushl
dec
rcr
xchg
enter
call
and
xlat
sbb
sbb
sub
adc
call
sbb
mov
sbb
and
inc
call
xchg
inc
imul
int
mov
jp
xchg
or
lcall
mov
mov
xlat
mov
aad
daa
mov
jno
add
adc
or
cmpb
jbe
cs
and
sub
aas
test
jle
dec
or
cmpsb
mov
cmp
jb
test
repnz
push
out
mov
cmpsb
ljmp
movsb
sbb
hlt
cmpl
xchg
and
push
sub
aam
in
push
sbbl
adc
dec
push
aad
lea
xor
cmp
add
std
inc
push
inc
adc
sub
xor
xchg
push
mov
cmp
sbb
loope
ret
mov
fsubs
int3
sbb
in
sbb
cmp
jge
dec
sahf
sbb
jge
cmp
adc
adc
jae
sub
adc
mov
movsb
mov
push
lock
adc
inc
or
dec
pop
lods
sub
movl
lods
in
sub
insb
inc
daa
sbb
add
adc
push
adc
mov
or
mov
pop
xor
or
movsb
or
daa
enter
sub
sbb
mov
and
clc
stos
inc
mov
mov
daa
lock
inc
arpl
aam
in
bound
and
mov
push
and
inc
in
sbb
jge
enter
daa
and
inc
mov
or
sbb
rorb
or
in
xor
movsb
sub
push
les
hlt
xor
inc
pusha
sub
adc
inc
into
mov
mov
adc
sbb
and
push
mov
in
jb
sbb
pop
sbb
mov
inc
jo
stos
mov
test
sub
or
rorb
test
js
cmp
sbb
pop
xchg
test
daa
out
cmp
inc
and
adc
adc
fbld
aam
mov
add
or
push
mov
scas
out
xor
and
sbb
js
inc
or
xorb
test
call
loopne
adc
aam
jl
sub
les
and
cwtl
adc
js
dec
inc
adc
or
cmp
xor
adc
fwait
xchg
mov
cld
es
or
add
rolb
mov
movsl
add
lods
test
stos
cmpsb
adc
xor
sbb
movsb
or
adc
enter
xchg
xor
or
and
daa
nop
and
sarb
and
je
adc
xor
or
inc
xor
add
jo
cld
test
mov
sub
adc
enter
or
pusha
or
sbb
pusha
adc
or
fs
bound
adc
pushf
xchg
andb
xchg
dec
mov
bound
in
daa
inc
inc
or
lods
and
adc
xor
fsubs
or
loope
loopne
inc
in
and
nop
loope
xchg
fs
mov
cmp
dec
or
fs
mov
rcrb
or
xchg
sub
inc
lea
xor
je
adc
cwtl
inc
imul
or
pop
or
push
or
dec
or
enter
inc
fcoms
dec
sub
adc
movsb
jno
test
lret
hlt
mov
and
mov
fs
add
or
cld
and
xchg
mov
aam
or
xchg
sbb
or
mov
and
mov
or
les
inc
and
cmp
or
adc
andl
jp
inc
cmp
dec
in
jbe
xor
push
add
in
call
int3
nop
in
sbb
sub
ret
mov
add
cmpsl
mov
pop
je
pop
dec
fs
cmp
mov
jae
and
shlb
pop
pop
loope
call
and
jg
in
adc
xchg
adc
cmpsb
mov
or
xchg
and
xor
movsb
or
xchg
jg
or
xchg
pushf
mov
mov
xor
mov
sbb
sbb
mov
insb
daa
adc
iret
or
pushf
adc
nop
sub
setbe
pop
sub
xchg
pop
daa
mov
or
xor
sbb
or
enter
ja
adc
lods
dec
push
cmp
cmp
push
cmc
fdiv
xor
or
or
push
pushf
fs
adc
aam
bound
push
mov
enter
popf
or
adc
and
mov
jl
inc
dec
and
fs
clc
mov
mov
cld
movsb
mov
in
and
dec
lock
mov
and
xchg
test
movsb
cmp
sti
sbb
mov
loop
sub
pop
xchg
pop
lret
pop
std
add
inc
pop
outsb
lret
mov
sub
bnd
push
or
je
push
je
add
and
cmp
test
push
and
push
pop
push
inc
call
and
clc
add
sbb
call
in
inc
xor
sub
inc
enter
ret
adc
in
cmp
push
adc
xchg
pushf
enter
push
mov
in
cmp
sbb
xchg
ret
and
pop
jmp
jae
adc
ret
mov
adc
xor
fdivl
cltd
adc
cmp
and
nop
lods
dec
test
inc
frstor
push
inc
sbb
in
lods
adc
shrl
inc
push
mov
fs
sub
mov
pop
jb
sbb
mov
xchg
pop
jge
dec
movb
cmp
leave
xchg
adc
inc
adc
push
inc
sbb
sub
sbb
rorb
cmp
je
mov
jbe
xchg
adc
xchg
call
call
sbb
loope
rclb
arpl
in
ret
add
push
push
push
call
iret
adc
and
xor
repnz
bound
xor
rclb
or
loopne
and
test
jg
and
lret
ds
and
mov
mov
xor
dec
and
mov
nop
movsl
mov
cmp
jge
add
dec
mov
sub
mov
push
cmp
je
or
or
rolb
enter
xor
inc
jle
jle
pop
xor
enter
daa
cmp
or
cmp
cmp
sarb
xorb
pop
xchg
jae
jle
daa
rol
call
lea
mov
inc
push
cmp
pop
stos
lea
test
jl
loope
filds
push
xchg
inc
out
dec
loopne
mov
dec
push
cmp
jle
pop
jl
ret
movsbl
mov
mov
pop
jl
aam
jg
pop
sub
xchg
pusha
ljmp
ds
les
nop
mov
cmpsl
testb
repz
out
mov
adc
in
or
jmp
jb
push
shr
and
or
lret
mov
dec
pop
push
or
clc
push
jg
push
test
or
into
nop
es
add
roll
jge
icebp
dec
ss
lea
jb
dec
adc
bound
pop
or
clc
adc
dec
pushaw
dec
dec
add
jne
dec
dec
rorl
mov
add
jmp
mov
push
xor
push
mov
pop
out
xor
push
xlat
sbb
inc
adc
add
jg
leave
or
push
shll
jecxz
sbb
sub
sbb
or
jl
das
inc
push
push
mov
mov
sbb
out
ret
mov
pop
lods
aam
movsb
lods
add
in
daa
je
pop
movsl
movsl
lret
dec
inc
icebp
sbb
push
popf
cld
sub
dec
jnp
sub
sbb
or
jle
idivb
adc
cmp
je
fs
mov
cltd
push
mov
shrb
inc
and
iret
adc
loope
pop
jo
add
test
sub
bswap
sbb
push
lcall
adc
sbb
xchg
dec
xchg
mov
movsb
cltd
lret
fadd
jae
mov
push
sub
xor
scas
and
dec
aas
push
pop
std
push
lock
or
xorb
fistpl
jg
or
mul
imul
push
ss
push
or
push
out
push
or
shld
dec
mov
roll
pop
negl
fcomps
rorb
fs
sbbb
pop
jmp
mov
stc
adc
in
pushf
xchg
sbb
lret
push
mov
jno
sbb
and
jns
scas
or
jecxz
shrl
call
push
push
inc
adc
push
movsl
je
and
mov
inc
jo
push
pop
push
daa
push
push
cmp
lea
outsl
clc
inc
ret
sbb
xchg
inc
cwtl
sarl
sub
and
jne
out
push
sub
push
aam
sub
mov
push
daa
xchg
addb
in
cmp
adc
sbb
and
mov
mov
pushf
out
inc
mov
outsb
adc
out
mov
push
inc
stos
add
dec
daa
incb
adc
cmpsb
adc
daa
aad
mov
mov
mov
pop
mov
idiv
test
movsb
xor
es
sbb
dec
dec
and
iret
fbld
inc
inc
and
mov
out
inc
mov
push
inc
daa
mov
mov
outsb
push
adc
cmpsl
mov
mov
movlps
add
xchg
inc
xchg
adc
test
je
jmp
insb
jle
mov
inc
push
lcall
outsl
hlt
push
call
enter
or
xor
insb
adc
and
or
pop
lret
mov
add
xchg
mov
or
pop
push
dec
movsb
fwait
push
inc
ret
cmpsb
adc
sub
and
cmp
mov
push
and
scas
shlb
aaa
lea
xchg
jae
imul
jb,pt
jmp
and
xchg
adc
shlb
or
cld
and
leave
xlat
or
loopne
stc
int3
outsl
and
pop
xchg
push
adc
mov
dec
mov
cmc
xchg
inc
movzbl
repz
bnd
or
pop
lock
mov
scas
pop
or
rclb
pop
lea
or
call
fisubs
jno
push
je
movzwl
add
jno
add
negb
add
and
addr16
add
rclb
lret
incb
shr
out
mov
out
sbb
adc
not
xor
and
add
mov
inc
push
dec
in
popl
dec
push
xlat
inc
lods
js
test
stos
and
sbb
mov
push
cmpl
sub
lods
rcll
adc
inc
imul
sbb
lods
xchg
test
xor
in
and
cvtpi2ps
adc
ja
and
iret
or
pop
test
aam
mov
hlt
dec
loopne
mov
mov
sbb
js
cmp
insl
adc
fs
pop
sbb
jle
cmpsb
popa
mov
cld
mov
jne
pop
sbb
movsb
pushf
pop
inc
inc
cmp
sarb
mov
aam
and
and
xchg
mov
pop
insb
popf
mov
mov
cmc
test
mov
pop
mov
pop
movsl
aam
sti
mov
xchg
decl
xchg
call
aaa
sahf
mov
pop
push
pop
adc
cmpsb
test
fidivrs
add
in
cmpsb
fiadds
mov
adc
mov
pop
mov
lea
test
mov
and
nop
xor
call
and
push
cmp
das
jmp
jp
fwait
pop
stos
adc
loop
in
stos
lock
xchg
idivb
lea
loop
int3
call
call
test
or
aam
out
inc
test
outsb
or
popa
xor
inc
mov
aam
ret
xor
and
test
fsubr
iret
dec
sub
stos
lods
iret
or
adc
fcmovu
xchg
xchg
popa
repnz
jg
stos
mov
les
test
sbb
dec
or
and
je
push
gs
jo
cltd
xor
jp
mov
mov
pop
lods
and
or
fidivs
lea
mov
lea
add
xchg
divl
push
push
ljmp
addr16
aaa
xor
mov
mov
xchg
ljmp
pop
sbb
adcb
rcrl
mov
cwtl
jg
jp
scas
mov
cmp
mov
rcll
mov
loop
dec
ficoml
mov
popf
dec
div
ljmp
je
mov
inc
je
clc
out
sub
jo
inc
and
je
cmpl
mov
cld
nop
or
gs
popf
ret
push
or
bound
enter
push
adc
inc
ss
hlt
mov
sub
jno
insb
adc
icebp
insl
dec
pop
push
enter
push
or
repnz
pop
inc
stos
subl
xor
mov
mov
add
stc
call
or
sub
inc
add
ret
enter
ss
mov
xor
add
push
stos
fwait
jle
imul
xchg
in
mov
push
out
mov
fisttpl
sub
cmp
mov
rolb
xlat
test
xchg
cld
sub
adc
xchg
les
es
and
sub
inc
push
fstpl
xor
mov
iret
lods
sbb
mov
enter
push
cld
jge
fcmovnb
or
mov
jp
lret
lcall
mov
or
xchg
cmc
adc
sub
lock
mov
clc
push
jl
aam
xor
cmp
ret
jl
in
mov
add
push
push
mov
cltd
sub
cmp
lods
push
mov
in
cmp
push
add
mov
push
dec
push
daa
lods
mov
loope
xchg
aas
adc
adc
jne
xchg
add
inc
mov
insb
loopne
stos
out
rclb
adc
adcb
mov
cmp
inc
xchg
and
mov
mov
dec
ret
mul
lock
or
ror
adc
pop
push
test
jle
idivb
dec
std
push
into
xchg
adc
and
or
or
xchg
imul
jne
cmp
ficoms
sbb
and
iret
and
roll
je
jmp
sbb
and
ret
add
add
xor
or
sbb
add
ds
jbe
lods
inc
push
add
jmp
aaa
mov
dec
xchg
pop
mov
inc
xor
ljmp
mov
sub
cmpl
loopne
jl
pushf
xor
divb
jb
add
fists
push
or
jecxz
xor
rclb
push
xchg
test
leave
pop
ja
jb
andl
jae
push
dec
and
and
test
inc
dec
inc
les
and
and
bound
adc
adc
xor
or
mov
sbb
test
xor
sub
pop
add
roll
ret
adc
fisttpll
and
dec
push
subl
rorb
subl
xchg
gs
push
push
rcll
cmp
and
push
pusha
push
cmp
inc
xchg
addr16
inc
inc
adc
add
mov
xor
fs
cmp
pusha
or
and
or
inc
and
pop
push
insb
xor
or
mov
and
inc
pop
xor
and
jo
das
dec
cmp
mov
sbb
adcl
sbbl
inc
adc
cmpsb
pop
enter
or
push
aas
clc
test
adc
add
clc
aam
lock
popf
popa
scas
push
shrl
shlb
lods
pusha
mov
pop
mov
shlb
jge
inc
hlt
lret
cld
test
xor
jae
adc
cltd
call
pcmpeqd
xchg
les
aas
out
sbb
fmul
insb
daa
adc
cltd
iret
notl
cmp
and
add
outsl
les
cwtl
notb
and
push
adc
sbb
stc
adc
inc
cmp
das
inc
in
daa
pop
in
push
cli
test
repz
xor
decl
pusha
fs
xor
adc
pop
movsl
dec
call
dec
adc
inc
sahf
imul
mov
bound
test
or
push
xchg
stc
cmpsl
into
adc
push
mov
mov
popl
xor
lods
xor
sub
sbb
adc
push
test
int3
adc
int3
inc
add
popf
fsubs
xchg
jmp
mov
pop
jno
mov
xchg
mov
push
xlat
fistpl
mov
leave
repnz
movsb
pop
jmp
jmp
pop
enter
js
mov
sub
mov
adc
movsb
cld
fs
loope
sub
jl
sub
xchg
scas
sbb
cld
xor
shlb
call
cmp
repnz
fwait
push
in
xor
repnz
inc
push
mov
dec
mov
jae
les
clc
fmul
push
loopne
call
xor
imul
fstpt
pop
adc
jbe
shll
cwtl
int3
adc
mov
inc
movzwl
rcrb
out
fwait
repnz
sub
inc
push
adc
sbb
cmpsl
int3
adc
xor
test
mov
mov
push
imul
push
cmp
jbe
inc
xor
daa
and
push
movb
je
lcall
dec
sub
stos
or
dec
xor
cld
sbb
add
shll
mov
and
xchg
push
mov
das
ljmp
pop
sbb
add
jne
cmp
fsubl
shll
test
movsb
cli
sbb
sarb
loop
cli
adc
pop
stos
test
out
and
cmp
pop
add
lea
popf
and
or
jecxz
sub
cs
rcrl
push
sbb
jne
pcmpgtw
ljmp
fsub
ud0
add
orl
fucomip
inc
pop
mov
push
imul
or
adc
or
aaa
mov
ss
jae
and
lea
sub
dec
cwtl
mov
add
pop
cmp
imul
pop
sbb
dec
jmp
rclb
and
unpcklps
hlt
fwait
rclb
sbb
push
sbb
add
and
cmp
push
push
inc
sub
add
leave
mov
or
adc
mov
repnz
cmp
and
cmp
adc
lea
fnstcw
fistpll
fidivrs
pop
push
xchg
push
push
loopne
das
add
sbb
pusha
and
push
mov
jp
xorl
adc
mov
dec
xorl
mov
or
or
push
das
sub
or
int
jne
push
push
dec
test
add
and
push
sub
loop
ret
test
ret
int
les
push
adc
lret
pop
lret
cwtl
inc
jne
inc
push
or
and
xor
mov
sub
add
loope
xchg
in
and
lret
aaa
inc
cmp
jae
jae
es
push
push
mov
lahf
pop
xchg
movsb
nop
lahf
in
and
push
imul
pop
clc
mov
adc
mov
dec
or
cmp
inc
cmp
ss
inc
adcb
inc
ret
out
je
push
jbe
push
bound
xor
xchg
fistps
subb
popf
push
call
pop
mov
cmp
xchg
sbb
sbb
or
ret
into
dec
cld
cld
test
daa
out
pop
stos
movsb
or
in
dec
xchg
push
xor
cmp
push
clc
aad
lcall
pushl
jl
adc
jge
mov
adc
loopne
mov
push
mov
movsb
or
push
fistps
jae
or
sbb
lcall
adc
push
stos
and
cltd
inc
call
in
cld
sbbl
je
cs
push
mov
push
mov
and
inc
fnstenv
ret
test
pusha
sbb
fistps
lock
out
fsubr
push
not
pop
rcrl
jle
add
nop
movsl
outsb
or
call
pop
cwtl
or
rclb
inc
ret
sbb
push
mov
pop
inc
and
sbb
push
testb
cmp
dec
push
mov
ror
mov
pop
scas
decb
fcomps
ret
cltd
call
clc
push
mov
jl
leave
lock
xchg
jae
dec
xor
enter
push
sub
pushf
inc
je
and
out
mov
mov
dec
or
jmp
test
mov
enter
jno
inc
insl
xor
and
sbb
inc
pop
das
ret
xchg
adc
adc
into
and
movsb
pop
call
sbb
dec
jle
daa
push
xor
outsb
dec
and
mov
pop
mov
dec
push
je
icebp
fcompl
cmp
mov
fmul
or
push
xor
and
dec
pop
mov
icebp
mov
repz
or
xor
adc
movsb
testb
mov
lea
pushf
jnp
repz
arpl
push
imul
mov
mov
iret
xchg
lock
ret
icebp
insl
adc
adc
loop
adc
js
or
cld
jno
testb
add
mov
jp
push
mov
jne
push
jmp
rclb
jnp
test
dec
out
je
xchg
jb
dec
cmp
cmpsl
je
insb
adc
jmp
mov
xor
or
popf
and
and
addb
stos
push
mov
or
pop
test
pop
sub
sbb
dec
or
cmp
add
jbe
push
mov
sbb
jg
mov
adc
fs
ficompl
add
push
cmp
dec
adc
pop
cs
mov
cld
dec
call
in
cmpsl
pop
fwait
stos
cmc
jbe
push
dec
add
ss
and
dec
jge
dec
adc
dec
xor
test
or
movl
icebp
pop
loopne
test
cli
inc
xchg
jbe
jo
ljmp
mov
push
xchg
inc
andl
into
bound
jmp
in
into
cmp
daa
mov
dec
sbb
outsl
xor
pop
push
jmp
in
in
mov
and
test
push
negl
xlat
cmc
mov
pop
mov
fdivrs
sahf
jg
lea
das
cmc
fwait
pop
dec
xor
xchg
mov
adc
mov
stos
push
cltd
add
xor
push
hlt
mov
das
fsub
and
adc
test
orl
nop
call
lock
cld
add
mov
add
and
or
sbb
out
and
popf
cwtl
push
dec
jl
sbb
push
push
aad
xchg
decb
pop
cli
sub
add
into
and
ss
push
lcall
leave
inc
or
cmc
sub
inc
les
ret
es
cmpsb
xchg
inc
xchg
out
or
inc
pop
movsb
loopw,pn
std
sub
or
mov
pop
test
mov
mov
fisttpll
dec
lahf
sti
dec
xor
scas
out
xor
push
pop
jne
or
push
cltd
pop
or
cwtl
inc
rcrb
cmpsb
daa
lahf
cld
push
inc
pop
das
push
xchg
cmp
in
test
cmpsb
xchg
pop
cli
or
aas
movsl
inc
lock
sahf
imul
ds
pop
pop
or
adc
in
jns
xchg
lcall
ds
push
enter
cmpl
or
push
jae
sub
cwtl
orb
push
sbb
dec
push
test
adc
popf
je
iret
test
jno
or
js
jno
sbb
lds
and
ficomps
pop
jp
xchg
stos
sbb
dec
fidivs
add
iret
adc
popf
mov
pop
in
ja
sbbl
test
xchg
hlt
xor
pop
je
or
pop
push
or
lea
mov
shrl
dec
rolb
dec
dec
insl
inc
adcb
cli
xor
imul
pop
ja
dec
repz
cs
add
and
test
cwtl
movsb
and
ret
or
inc
loopne
pop
sbb
fidivrs
inc
in
pushf
pop
insl
jns
xor
scas
les
std
xor
inc
ret
lock
or
mov
rolb
clc
sahf
into
mov
and
call
das
in
mov
cmp
xchg
or
pop
and
shlb
adc
int
fdivrl
lahf
daa
or
gs
jae
xchg
jmp
sahf
mov
push
push
in
jp
pop
fsubrp
jge
sbb
cmp
cmp
es
dec
fistl
mov
and
cmpl
xchg
cmpb
xchg
fwait
or
xor
add
je
jne
pop
inc
les
and
push
push
push
dec
lods
and
dec
punpckldq
repnz
dec
sub
mov
or
sti
fsubl
loopne
test
movl
dec
cmp
mulb
scas
out
xchg
cmc
adc
push
mov
mov
sbb
fdivp
mov
in
pusha
dec
das
add
fidivs
xor
insl
lret
or
fmull
xor
and
dec
cmp
jg
pop
lcall
or
rclb
push
jmp
mov
stos
dec
jo
cltd
sub
xchg
inc
xchg
loop
movsb
ja
push
outsl
cld
hlt
push
pop
negb
jmp
mov
scas
cltd
adc
imul
orl
es
cmp
pop
xor
ret
adc
inc
rcrb
cli
sbb
das
fimull
push
sbb
data16
mov
and
jno
scas
loope
adc
pop
or
lcall
push
or
ljmp
cwtl
jb
mov
movsb
out
adc
jge
sbb
pushf
pop
pop
jne
pop
add
leave
cs
or
mov
xor
inc
cmp
and
loope
mov
mov
cmp
dec
and
sbb
cmp
push
cmpsl
rorl
mov
jp
call
pop
movsb
lds
mov
lock
and
push
inc
mov
scas
push
fadds
or
mov
je
cmp
lret
push
mov
test
jo
push
sub
sub
ret
in
mov
mov
inc
dec
add
jae
cmp
shrl
adc
test
call
sti
sub
sbb
ud2
push
mov
sub
and
fs
xor
sbb
jne
movsb
aaa
push
enter
hlt
inc
clc
cld
and
adc
sub
lock
and
xor
push
push
bound
add
and
jge
pop
dec
js
push
les
test
push
hlt
or
xchg
add
sbb
sub
push
inc
dec
in
xchg
ljmp
in
mov
mov
arpl
call
shll
mov
movsb
xor
ficompl
int3
dec
and
mov
daa
adc
into
push
xor
das
xor
pushf
pusha
push
cmp
sbb
lahf
inc
popa
stos
sbb
push
repnz
mov
pop
sbb
pop
sub
sti
lods
dec
mov
fwait
cmp
loope
sbb
push
pop
adc
sbb
push
jg
and
and
push
push
inc
mov
adc
xor
add
ljmp
mov
ror
push
popa
and
dec
push
cmp
stos
imul
sub
dec
pop
in
mov
dec
fnsave
into
test
adc
imul
xchg
xor
movsl
mov
adc
pop
clc
testl
mov
aas
arpl
adc
sub
inc
daa
push
adc
lea
rolb
add
into
sbbb
dec
andl
dec
add
xor
mov
or
mov
dec
shll
stos
xor
sbb
mov
mov
ret
sahf
daa
pop
adcb
or
test
pop
mov
push
pop
pop
lods
cmpsl
das
dec
pop
daa
sub
adc
and
mov
rcrl
cmpsb
cmpsb
dec
mov
cs
movl
xor
mov
push
mov
fmuls
subl
jle
push
jno
push
and
cmpsl
inc
call
push
adc
sarl
xor
mov
mov
add
clc
jno
adc
cmp
push
pushf
and
dec
sbb
mov
push
ret
out
xor
insb
or
dec
mov
data16
loopne
add
push
iret
push
and
adc
push
stc
inc
fisubs
repnz
popf
pushf
pop
dec
push
sbb
cmpsb
call
jge
call
into
push
cltd
add
pop
movsl
dec
mov
daa
lock
fs
or
xchg
sbb
sbb
inc
je
dec
cmp
xchg
ss
or
or
daa
call
test
inc
or
ret
sbb
and
sbb
ja
mulb
mov
ret
pop
jmp
xor
sub
and
push
adc
lcall
inc
jmp
dec
mov
add
sti
push
out
cltd
adc
test
test
fisttps
adc
mulb
stos
aad
outsb
cmpsl
movsb
inc
xchg
test
mov
mov
cltd
xchg
lcall
mov
clc
into
nop
fbstp
xor
add
add
or
or
ljmp
pop
mov
add
mov
push
sub
sbbb
imul
jo
inc
or
add
inc
sbb
xor
xchg
subl
inc
pop
in
nop
or
sbb
mov
enter
adc
sub
jne
push
sbb
push
push
es
mov
fnstenv
mov
gs
clc
add
jne
sbb
jle
push
push
jg
xor
cltd
gs
fstps
adcl
adc
pop
dec
xchg
daa
cmp
push
pop
adc
leave
dec
dec
sub
cmp
ja
fidivrs
xorl
and
imul
ljmp
and
sbb
adc
and
test
dec
push
test
or
and
adc
mov
test
clc
flds
sahf
mov
sbb
je
int3
scas
sbb
adc
nop
cmpsb
pushf
mov
and
jmp
ret
pop
jbe
adc
psubd
ja
je
lea
ds
adc
mov
and
imul
cmp
in
and
icebp
in
adc
repnz
or
cld
xor
jle
and
cwtl
add
loope
mov
test
sbb
push
push
jb
pop
sub
xchg
mov
fildll
xchg
or
and
push
sbb
xor
cmp
or
add
dec
lods
add
add
push
dec
or
in
movsb
and
bound
dec
daa
adc
mov
mov
lahf
push
dec
out
dec
cld
leave
xchg
scas
xchg
les
stos
in
add
xor
les
popa
cmp
test
fimull
mov
jae
inc
sbb
push
cmp
xor
sub
push
aas
adc
mov
test
adc
sub
testl
push
xchg
xchg
xchg
xchg
emms
xor
out
add
adc
jbe
movsb
cmp
sbb
aas
cmp
adc
mov
scas
sti
test
mov
and
jge
mov
lods
push
clc
mov
jl
inc
hlt
fnstenv
xor
pop
pop
in
outsb
lret
or
cli
lea
dec
nop
js
pop
fimuls
pop
icebp
and
mov
adc
jo
xchg
jo
xchg
jl
iret
stos
pop
ljmp
add
loop
lock
sbb
and
or
lea
jmp
push
cmpsb
push
dec
mov
scas
jb
pushf
xor
or
inc
fistl
lock
and
mov
pop
sub
push
lds
push
pop
ret
mov
adc
lods
mov
push
mov
dec
push
cli
rcrb
adc
fsts
test
sub
add
add
orb
nop
stos
or
test
pushl
xor
inc
maxps
mov
dec
mov
push
sbbl
dec
sbbl
push
gs
inc
call
adc
andl
call
fnstenv
cld
scas
gs
in
push
rclb
and
mov
into
cmp
test
cld
xor
outsl
dec
das
mov
mov
lea
aas
add
xchg
adc
pop
les
mov
xchg
adc
mov
stos
rclb
nop
or
pop
mov
or
inc
dec
xlat
sub
xchg
mov
outsb
mov
sub
enter
ss
inc
stc
daa
sbb
adc
shl
or
imulb
adc
nop
cmp
shr
sti
bound
js
xor
int3
jno
inc
std
xor
mov
jb
push
clc
popa
and
jmp
push
iret
mov
pop
mov
jbe
mov
cltd
mov
mov
push
shll
sbb
push
test
inc
pop
mov
cltd
pop
sbb
xchg
xchg
sub
push
or
cmp
and
les
stos
leave
or
cli
bound
icebp
xchg
out
daa
fsubp
ret
cmp
sub
xchg
sbb
and
jecxz
and
cmc
push
mov
and
jo
mov
mov
cmp
inc
and
cmc
jmp
mov
xchg
test
mov
pusha
frstor
inc
ljmp
or
xchg
sub
and
clc
jo
and
fmull
lods
mov
aaa
mov
xchg
xor
bound
mov
add
dec
in
xchg
jns
xor
clc
adc
dec
addl
jnp
cmpsb
call
push
cmp
imul
std
or
loope
loopw
sub
push
mov
in
pop
adc
push
mov
shll
push
sub
les
push
decb
lea
xor
filds
mov
jl
mov
nop
mov
sbb
jnp
inc
lods
fcoml
aaa
jne
jo
cltd
xor
or
mov
sub
sbb
repz
and
nop
adc
jno
push
pop
push
and
or
dec
push
inc
xor
mov
sbb
sub
and
cmp
adc
stc
lock
call
iret
aam
test
xchg
push
cmc
jns
adc
les
and
push
mov
mov
movsl
test
bound
cmp
data16
mov
and
cmp
and
je
sub
enter
aaa
xchg
xchg
hlt
sbb
mov
sub
sub
shlb
in
xor
cmp
or
test
cmp
inc
adc
pop
push
inc
or
cmp
sbb
and
fldl
adc
repz
dec
sub
mov
xor
inc
ja
gs
sub
pop
jmp
outsl
adc
cmp
enter
test
insb
and
mov
es
lret
aad
sbb
adc
inc
call
rolb
xor
cmp
clc
push
jg
sbb
cmp
inc
loope
imul
sub
hlt
je
cmp
mov
cmp
aad
xchg
push
adc
adc
call
loope
add
sub
lcall
xchg
sub
and
js
pop
hlt
movl
add
jb
jmp
bound
jae
inc
xchg
sbb
test
cwtl
and
pop
ret
push
xchg
push
cmp
je
js
lret
jl
inc
or
sub
rol
hlt
jne
loop
adc
mov
jnp
sbb
dec
push
add
or
and
inc
adc
jne
fsubr
fldl
je
leave
test
and
inc
cmp
stos
sub
ret
sub
xlat
sbb
or
and
das
inc
cld
loope
inc
test
fdivrs
jmp
test
pop
jle
inc
mov
jo
lds
daa
sub
push
lock
push
jne
les
and
mov
loop
loopne
ds
and
sub
popf
notb
pop
pop
or
in
add
pop
adc
and
jle
loope
test
lock
call
mov
icebp
push
sbb
imul
add
ljmp
clc
xchg
in
sbb
adc
mov
cld
xor
mov
xchg
adc
and
adc
repz
or
mov
shrb
dec
jecxz
mov
repnz
sub
pop
mov
lret
sub
sub
cli
or
push
int3
jno
mov
add
sarb
pop
inc
dec
push
add
jne
and
je
add
adc
jmp
ret
adc
pop
mov
loop
lret
mov
adc
loopne
mov
dec
jne
je
xchg
movsl
push
pop
dec
sti
push
push
push
mov
pop
mov
pop
lahf
mov
pop
dec
mov
xchg
inc
add
add
sbb
jns
cmp
and
pop
or
cld
dec
fisttpll
std
cli
and
or
xchg
psubd
push
and
movl
pop
add
imulb
xor
in
test
push
das
cld
lds
mov
aas
add
cmp
dec
or
push
add
mov
jnp
and
mov
frstor
aas
repnz
push
sub
mov
mov
aad
insb
or
int
cs
sub
lcall
idivb
pop
inc
mov
sti
cmpsl
xor
loopne
cmpsb
gs
ss
or
pop
out
cmpsb
xchg
pop
dec
andb
pop
push
and
adc
pop
inc
or
pop
ds
inc
inc
pop
popf
dec
loope
dec
and
adc
inc
xchg
adc
mov
je
add
inc
push
inc
negl
jg
adc
sub
mov
scas
mov
push
cli
push
shl
add
sub
pop
test
mov
aam
pop
loopne
or
stos
dec
push
addw
or
adc
or
popa
test
fdivp
push
push
fwait
xchg
cmp
int
adc
cmp
lock
lcall
les
stc
movsl
adc
or
rcl
and
pop
mov
mov
adc
cmp
jns
es
dec
orb
aas
dec
mov
and
push
xchg
mov
inc
pop
cmp
add
nop
xlat
jno
fwait
push
jbe
dec
inc
bound
imul
xor
push
mov
aas
test
and
or
jo
push
mov
jae
mov
sub
insl
mov
enter
sbb
xor
push
pop
xor
push
mov
mov
call
add
in
sub
push
pop
xor
or
call
mov
mov
lock
mov
sub
mov
adc
leave
mov
lods
pop
cmp
push
lahf
push
popa
inc
adc
pop
int3
lock
sub
push
les
add
test
je
add
dec
cld
push
rol
imul
or
add
xchg
add
push
mov
scas
mov
and
xchg
int
jmp
lds
dec
sbb
inc
xchg
cltd
inc
test
sub
inc
mov
sbb
aam
shr
popa
push
jmp
pop
js
push
jnp
adc
mov
pop
xor
push
mov
ja
repz
jnp
aad
fistpl
ljmp
or
clc
dec
xor
daa
pop
in
aam
cmp
push
adc
sbb
xor
push
push
rorb
inc
int3
pop
shrb
sbb
andb
shrb
mov
push
lret
xchg
lock
cmp
lock
push
xchg
lcall
les
lahf
or
sbb
and
js
xor
psrld
pop
outsl
sub
test
cmpsl
or
jmp
stc
push
lock
stc
sub
pop
adc
call
push
pop
hlt
push
or
add
cmc
jmp
mov
mov
adc
les
pop
mov
push
cmp
jne
and
cltd
cltd
pusha
or
dec
inc
mov
cs
mov
imul
imul
xor
mov
jns
in
pusha
fdivs
fsqrt
dec
xlat
push
push
dec
sbb
ficoml
mov
dec
mov
push
mov
jp
in
and
mov
mov
pop
pop
movsb
icebp
out
int
outsb
xchg
cmpsl
jle
xor
pop
mov
les
mov
and
and
dec
insl
bound
fcompl
les
jmp
cmp
je
mov
push
orl
push
ret
lods
mov
jl
cltd
jmp
inc
xor
pop
or
xlat
mov
test
mov
orb
testb
adc
fistpll
dec
dec
hlt
add
xor
enter
sbb
test
or
xchg
mov
push
pop
test
jp
call
inc
test
pop
add
movsl
pop
frstor
outsb
adc
js
dec
push
and
dec
push
and
push
or
stos
xor
and
inc
daa
push
dec
mov
fwait
xor
bound
jg
jns
jnp
and
daa
sub
cmp
add
adc
sub
imul
sbb
fnsave
dec
inc
and
pop
lea
fwait
add
cmpb
inc
xchg
mov
mov
movb
xchg
add
dec
jns
loopne
cmp
push
or
scas
and
daa
dec
add
cmpb
in
xor
nop
hlt
mov
inc
or
and
and
jl
push
pop
fwait
and
pop
push
dec
jnp
sub
inc
jp
rcrl
jp
push
xor
mov
pop
mov
mov
push
dec
or
jmp
inc
scas
inc
nop
adc
jp
adc
xchg
pop
xchg
out
test
inc
mov
leave
xorb
test
call
int3
dec
inc
mov
and
jle
ret
or
cmp
jbe
adc
fcoms
dec
lods
jecxz
je
test
sbb
jmp
stc
and
mov
adc
inc
xchg
outsl
cmp
in
fcompl
add
mov
in
insb
or
test
cmp
push
push
adc
sub
sbb
push
in
sahf
xchg
jns
xchg
lods
fs
je
gs
sahf
lret
push
jns
sub
mov
push
cwtl
sbb
cmp
leave
add
adc
xchg
shll
scas
roll
or
xchg
xchg
cltd
and
fildll
jb
dec
or
jns
cmpsl
xchg
inc
lods
dec
sub
push
sbb
mov
loop
jmp
and
push
xor
daa
add
filds
loopne
dec
test
mov
adc
jns
cmp
inc
push
orb
and
insb
and
pop
jle
add
push
inc
inc
push
test
jnp
subb
shll
adc
add
adc
je
stos
mov
sbb
mov
xchg
push
lea
imul
jge
add
cmp
je
pop
xchg
scas
jl
shlb
mov
jl
fucomp
into
popf
loope
xchg
or
je
push
sub
xchg
sub
popf
adc
jle
ja
mov
xchg
xor
notl
push
push
clc
jae
jb
mov
movsb
rcll
loope
or
imul
ja
je
and
inc
inc
jmp
scas
inc
adc
loop
scas
into
pop
sub
cmpsl
scas
xchg
fisubs
push
cmp
xor
sbb
adc
push
xchg
push
and
int
adc
loopne
or
adc
push
and
mov
xchg
push
movsb
push
loop
jne
sub
mov
je
ret
popf
push
pop
mov
xchg
xor
mov
inc
jg
jmp
mov
and
ja
fs
test
push
cmp
loop
inc
jbe
bound
jbe
push
out
pop
mov
mov
loop
test
lret
and
test
pop
push
xchg
pushf
sahf
push
leave
dec
cltd
cwtl
js
ds
xchg
mov
test
push
pushf
add
lea
mov
clc
sub
movb
sub
cmp
add
gs
daa
pop
and
push
cmp
call
fcom
xchg
movsb
adc
iret
and
ja
inc
sub
and
push
adc
push
add
cmpl
cmp
sub
sub
push
adc
adc
and
mov
inc
outsb
xor
mov
push
inc
add
pusha
test
mov
arpl
jne
out
ds
je
pop
outsb
inc
pop
jne
mov
ficoml
jg
sti
or
lods
jge
ljmp
movsl
je
popf
dec
sbb
movl
mov
aam
cmpsl
fsubs
xor
xchg
in
dec
mov
jnp
mov
push
push
xchg
scas
or
push
lea
cmpb
jb
mov
add
sub
aas
push
push
or
jne
out
jecxz
std
dec
adc
sbb
pop
jo
or
add
jb
add
and
jmp
test
pop
or
sbb
pop
aas
popa
cmpb
xchg
push
inc
mov
adc
cli
decb
je,pt
jmp
pop
cwtl
dec
jb
push
adc
and
int
es
pop
mov
je
test
adc
add
mov
push
adc
inc
insb
push
out
inc
fbld
lods
sarb
xor
test
jle
push
push
mov
les
stos
adc
adc
mov
and
repnz
stc
out
sub
cmp
test
sub
incb
xchg
dec
je
adc
test
arpl
adc
lea
mov
add
jb
aas
and
xchg
lds
jge
push
cmp
test
pop
push
enter
and
jne
sbb
mov
sbb
xor
adc
sub
sbb
mov
sub
mov
aas
cmp
cmp
xlat
xor
jnp
cmp
jmp
mov
andl
cli
add
imul
sets
add
jg
dec
xor
dec
jge
add
ret
adc
pushf
mov
xor
mov
inc
and
insl
inc
push
adc
in
xchg
in
cmp
or
inc
hlt
andnps
ja
and
call
mov
mov
jmp
jo
sub
push
add
stos
sub
jl
leave
adc
and
sbb
jl
or
add
movsl
adc
inc
movsb
pop
mov
mov
or
inc
insb
enter
mov
or
pop
jno
or
test
sbb
test
cmp
popa
movl
loopne
jle
ret
pusha
jl
push
call
lds
cmpsl
scas
or
or
adc
hlt
call
pop
pusha
enter
pcmpeqw
push
mov
cmpsb
int
dec
ret
jmp
adc
stos
sbb
movsl
iret
add
clc
push
shll
sbb
mov
or
inc
cmp
push
add
and
inc
jnp
mov
dec
mov
adc
and
and
push
dec
jbe
ret
mov
and
sbb
dec
xorb
adc
dec
cwtl
mov
sub
push
jne
repnz
call
test
jo
add
push
mov
mov
dec
adc
lahf
sbb
lahf
push
sbb
mov
sbb
jnp
dec
ret
in
inc
ret
dec
cmp
inc
test
xchg
jmp
and
mov
roll
mov
clc
or
cmp
hlt
inc
outsb
test
and
cmp
dec
adc
or
test
add
sbb
lock
mov
test
enter
and
push
inc
ret
adc
jb
pushf
or
fwait
dec
mov
inc
xchg
xchg
je
nop
jno
faddl
pop
xchg
and
es
adc
and
push
inc
adc
lods
adc
aam
dec
pusha
jle
adc
movsb
xor
dec
sub
adc
insb
test
mov
and
push
adc
inc
jp
inc
adc
xor
and
push
xchg
and
or
gs
sub
inc
sub
lock
push
adc
xor
test
sub
and
pop
punpckhbw
and
inc
ljmp
adc
adc
sub
mov
lods
enter
sub
pop
lds
test
lods
cmp
mov
test
enter
and
inc
or
and
push
jge
data16
cmpsb
adc
pop
cld
jo
xor
sbb
xor
es
ficoms
sub
test
mov
push
and
push
nop
pop
test
test
mov
adc
inc
xchg
and
mov
enter
jne
mov
jo
pusha
test
dec
mov
sbb
test
and
push
inc
fsubs
dec
adc
mov
inc
or
inc
imul
imulb
mov
cs
outsl
ret
js
gs
inc
je
push
xchg
sub
cmc
and
outsl
push
nop
adc
inc
mov
sbb
in
inc
test
push
push
inc
shlb
mov
inc
or
mov
mov
adc
inc
xchg
jl
std
loope
jno
jo
mov
xchg
or
test
mov
add
test
stos
mov
arpl
xor
das
movsl
push
int
adc
gs
sbb
sub
jns
mov
pushf
stos
in
sub
mov
mov
aas
aam
mov
fcomps
imul
fs
pop
dec
repz
push
and
pop
or
and
out
mov
sbb
shl
ret
and
mov
pop
adc
mov
mov
test
adc
cwtl
test
enter
and
inc
inc
and
mov
inc
or
inc
stc
inc
daa
sbb
mov
sbb
movsl
xor
or
or
sub
inc
aas
and
fnsave
enter
enter
sub
xchg
and
adc
add
je
stc
test
hlt
insl
inc
pop
pop
test
pop
jecxz
jne
fmull
jmp
aam
test
jbe
dec
sbb
lea
xor
popl
rol
lea
fs
mov
cmp
les
shrl
rclb
inc
clc
pop
mov
pop
xor
js
scas
movsl
lds
repz
mov
test
enter
and
inc
mov
inc
adc
clc
cmp
inc
push
inc
das
and
adc
mov
cmp
sbb
jmp
and
nop
or
pop
pop
sbb
test
cld
insb
and
fs
pop
xor
adc
or
mov
enter
inc
int3
and
les
sahf
test
mov
adc
sub
dec
pop
cmp
shr
les
push
cwtl
es
test
test
enter
mov
pop
sbb
test
enter
and
arpl
adc
xor
popa
adc
mov
in
and
push
inc
jne
pop
adc
or
les
jg
inc
andb
cmp
mov
push
or
cmpsl
nop
sbb
or
inc
and
cs
adc
clc
inc
imul
bound
fimuls
and
pop
xchg
sbb
test
enter
and
les
xorb
jmp
test
push
pop
jo
mov
mov
pop
out
mov
or
push
inc
shlb
js
clc
popa
push
sbbb
inc
loope
mov
bound
pusha
or
push
inc
pushf
sub
mov
and
adc
adc
sub
sub
inc
sub
sub
inc
mov
xor
sub
pop
in
and
push
and
sub
sbb
inc
or
in
cmp
inc
int
and
mov
or
adc
add
fldcw
push
fs
add
jmp
jae
sbb
les
cmpsb
test
std
xor
repz
push
or
jne
mov
dec
adc
call
push
mov
rorb
cld
jle
loope
xchg
jne
sbb
leave
adc
repz
mov
enter
push
pop
mov
add
out
or
cmp
imul
ret
and
xchg
mov
mov
push
test
and
sbb
or
xchg
and
mov
or
dec
pop
movsb
bound
cmp
dec
jno
dec
adc
cwtl
sub
sub
cmpsb
jno
xor
xor
sbb
mov
xchg
pop
mov
adc
sbb
add
push
xchg
mov
push
adc
push
leave
push
push
mov
rorl
js
or
mov
js
dec
clc
movsl
xchg
aam
push
scas
push
push
inc
mov
or
pop
mov
or
push
loop
cld
and
nop
sub
lods
out
pop
and
jmp
jnp
or
in
sbb
icebp
stc
mov
sub
mov
in
push
or
out
mov
orl
stc
jae
dec
pop
addr16
or
movsl
orb
mov
push
jne
mov
dec
and
inc
or
fadd
mov
xchg
test
xor
lcall
popa
lret
sbb
addr16
add
inc
and
dec
fdivs
iret
mov
sub
insb
adc
addr16
jmp
xor
or
ss
xor
push
xchg
movsb
ss
sbb
add
inc
or
test
mov
inc
cmp
popf
movsb
xchg
imul
lds
or
test
push
pop
sbbl
lret
stos
int3
test
enter
or
mov
ss
inc
scas
sbb
rcll
popf
mov
push
mov
xchg
and
and
or
cmp
add
add
pop
int
test
inc
push
or
adc
inc
rol
pop
push
test
mov
push
push
fists
cmpsb
call
imul
cs
leave
ficompl
test
jno
inc
xor
mov
dec
ja
ja
cltd
rol
inc
xchg
pop
test
addl
cmpsb
adc
pop
or
xor
and
push
jb
adc
mov
pop
adc
adc
int3
dec
leave
fsubs
loop
andl
stos
and
mov
xchg
cmp
or
sub
lret
or
mov
pop
push
inc
jae
or
ret
pop
or
sub
mov
hlt
gs
adc
and
pop
or
jp
loopne
out
clc
push
mov
and
fs
enter
and
inc
and
adc
mov
mov
and
pop
jb
adc
and
mov
mov
and
fs
je
add
adc
sbb
adc
mov
mov
cmp
mov
les
movsl
push
and
adc
mov
sbb
test
les
pusha
sub
dec
test
and
push
inc
dec
adc
and
or
inc
in
push
adc
mov
pop
mov
cmp
add
fistps
aam
sub
je
or
xchg
pop
jns
mov
xor
jg
push
adc
adc
and
and
test
push
inc
adc
lods
pop
inc
and
notl
bound
adc
adc
mov
adcb
mov
pushf
bound
or
gs
mov
icebp
or
dec
inc
subb
inc
imul
in
and
sbb
and
cmp
cltd
jl
sbb
frstor
inc
adc
sub
inc
std
push
adc
insl
pop
jo
inc
out
aaa
pop
popa
hlt
arpl
iret
push
inc
and
lock
or
aam
mov
inc
mov
rclb
jae
sahf
cmp
and
lds
adc
test
inc
cs
adc
call
add
and
or
es
mov
push
xor
mov
and
das
pop
push
pop
lahf
mov
cmp
dec
and
mov
push
or
fs
jg
push
test
push
push
daa
roll
xchg
in
lock
test
mov
aaa
shl
and
ffreep
xchg
ds
sbb
je
je
adc
or
mov
inc
sbb
pop
scas
lret
sbb
mov
movsl
fsubr
push
push
adc
mov
lds
dec
jmp
sub
movsb
xor
addb
xchg
dec
jg
adcl
cld
mov
jnp
push
sub
sbb
or
loopne
jmp
test
arpl
sub
bound
imul
test
cmp
lock
popf
or
das
push
testb
mov
cwtl
push
inc
stc
xor
bound
and
mov
movsl
or
sub
pop
add
mov
or
push
clc
cld
fbld
lock
xchg
test
loope
push
inc
pop
cwtl
call
adc
mov
arpl
aam
movsb
and
jecxz
sar
adc
sti
shrb
xor
in
jg
mov
push
dec
aad
movsb
adc
pop
cmp
jl
pop
les
sti
sbb
push
or
xchg
dec
bound
in
or
call
and
mov
jmp
lcall
dec
out
add
xchg
push
ret
sub
call
dec
clc
pop
rep
xor
push
cmp
call
out
or
rcrb
lahf
das
fildll
scas
sub
sbb
nop
test
jl
mov
pop
les
or
popa
and
cmpsb
mov
jp
push
orl
jne
pop
mov
iret
or
enter
cmp
setne
mov
inc
fldt
cld
xor
fidivrs
sub
popf
inc
and
popa
mov
psubsw
mov
movsl
xchg
sti
loop
int3
push
push
cld
fs
incb
sub
mov
push
inc
out
xchg
insl
sbb
mov
testl
pusha
arpl
pop
sub
fcomps
dec
fmul
test
sbb
add
mov
lds
sbb
imul
clc
fidivs
pop
adc
andb
xor
dec
push
sbb
dec
mov
mov
jb
pop
jg
jl
inc
mov
mov
fimull
jne
mov
pusha
sbb
push
and
push
cli
mov
sbb
cli
fsub
pusha
mov
and
lcall
les
dec
orl
or
and
lret
dec
sarl
mov
and
cltd
push
stc
pcmpeqw
movsb
das
xlat
cwtl
push
pop
jmp
lock
mov
pop
pushf
xor
movsl
push
movsl
cmp
lret
jo
xor
and
adc
or
dec
adc
inc
sbb
dec
push
add
nop
xchg
hlt
imul
push
dec
cltd
lahf
sub
pop
mov
and
add
push
mov
test
sti
ds
jno
pop
in
or
arpl
mov
jl
jae
push
pop
or
shll
lea
aaa
pop
orb
cmp
pop
inc
inc
adc
orl
xor
aad
inc
or
mov
push
andl
fadd
gs
ja
aas
adc
es
sbb
xor
cmp
sbb
sbb
mov
cmp
push
inc
lea
sub
mov
clc
mov
je
xor
aas
and
cli
in
call
js
adc
mov
iret
mov
stos
inc
lret
shll
mov
mov
ret
fs
mov
popf
rcll
aaa
fistps
daa
or
fisubs
test
data16
add
xor
shrb
lea
mov
mov
add
push
xor
movsb
jl
push
pop
sub
adc
pop
addb
das
jle
and
cwtl
push
mov
pop
shll
sbbl
clc
movsbl
cmp
iret
jl
int
insb
pop
xchg
fldl
out
push
call
pushf
cltd
dec
arpl
adc
ret
pop
sub
dec
outsb
lock
adc
hlt
bound
sub
dec
sub
jne
jg
adc
mov
in
dec
jo
mov
cmpb
call
push
lea
adc
or
sbb
push
pop
shr
movsb
pop
inc
inc
jne
mov
or
test
test
fs
jno
and
sub
lea
test
inc
jmp
cs
mov
cwtl
imul
arpl
out
dec
push
xchg
lock
adc
aad
inc
hlt
mov
popf
popa
or
mov
les
pop
lea
sub
xor
or
or
sub
pop
or
loop
cwtl
pop
pushl
push
mov
adc
out
mov
jne
cmp
lret
pop
aam
dec
dec
add
adc
mov
fists
inc
aas
pop
adc
mov
stos
and
sub
jae
int3
popa
aad
sbb
icebp
or
dec
and
je
add
sbb
jg
decl
and
loop
cmpsb
cli
loop
test
mov
rorb
inc
lea
sbb
inc
jmp
test
and
fs
adc
jbe
sar
jg
cmp
fdivr
lea
mov
or
jle
cmpb
inc
xchg
pop
mov
jo
xchg
pop
push
and
push
inc
fldenv
mov
bound
test
inc
sti
or
push
inc
jns
or
adc
out
iret
adc
movsl
outsb
inc
adc
mov
push
sarl
sbb
aas
out
enter
lods
sub
sub
outsb
je
or
movsb
pop
call
mov
dec
rcl
sub
dec
push
or
pop
push
adc
mov
and
pop
cmp
out
adc
movsb
in
test
inc
cmp
inc
out
loope
pop
adc
sbb
xor
sub
int3
adc
push
adc
sub
mov
popf
jo
loop
jp
pop
push
dec
jno
lea
sub
and
out
adc
das
cmp
dec
pop
mov
jl
sahf
cmp
bound
and
inc
xchg
js
rorb
pop
movzbl
movsl
test
fwait
dec
adc
and
mov
xchg
push
js
xchg
xor
popl
pop
or
add
push
jb
push
add
cmp
sub
insb
hlt
or
call
push
xor
icebp
add
jmp
adc
adc
inc
jle
in
cmp
movsb
adc
and
inc
rcll
je
mov
mov
mov
scas
das
imul
sub
cmpsl
pop
lahf
inc
pop
and
clc
inc
out
dec
inc
out
mov
or
loop
out
call
sbb
out
xchg
xor
mov
adc
adc
inc
cmpsl
lret
sbb
and
loopne
test
jmp
decb
fs
repz
sbb
loop
push
jecxz
cmp
push
sub
and
daa
push
dec
in
adc
or
fs
xchg
ljmp
ret
and
adc
sub
andb
inc
pop
test
or
shlb
test
push
pop
adc
xchg
cmpps
mov
in
in
jmp
mov
mov
in
sub
dec
fs
push
aas
xchg
iret
ljmp
push
xor
aas
mov
adc
cmp
add
test
jmp
sub
push
xlat
ror
mov
movsb
pop
mov
loopne
inc
mov
pushf
ss
sbb
dec
cmp
clc
ljmp
in
push
and
ljmp
xchg
clc
inc
cld
ljmp
call
add
or
loope
sub
movsb
inc
divl
inc
test
mov
mov
xor
arpl
xchg
mov
or
pop
int3
into
or
or
add
adc
mov
shlb
into
test
mov
jecxz
test
jmp
push
int3
cmpsl
sub
cli
imul
xor
sbb
pop
inc
lahf
adc
adc
mov
and
sub
inc
ror
inc
jle
es
inc
jmp
push
add
xchg
and
inc
pop
pop
les
inc
nop
in
inc
call
xchg
mov
inc
repnz
test
xor
jmp
lret
in
jae
inc
adc
jb
hlt
xor
pop
pop
icebp
test
push
and
xchg
in
test
or
bound
xchg
ds
pop
test
cmp
int3
test
xor
adc
push
in
sbb
and
incl
dec
clc
or
lds
adc
sti
or
add
mov
or
clc
pop
sbb
mov
mov
sbb
inc
daa
bound
leave
or
push
loop
into
cld
mov
pop
mov
jecxz
bound
add
mov
aas
mov
test
xchg
push
sub
adc
dec
or
xor
xor
int
inc
mov
inc
adc
cmp
add
repnz
mov
sub
cmp
xchg
int3
pop
filds
cld
aaa
inc
dec
daa
push
cmp
xchg
sbb
mov
xor
cltd
xchg
ficomps
push
adc
ljmp
sub
pop
adc
push
mov
sbb
xor
repz
sub
xchg
add
xor
std
sbb
mov
dec
cmp
pop
call
add
ret
jle
and
xchg
jp
xchg
mov
sahf
push
cld
popl
sub
inc
jmp
inc
adc
insl
les
pop
ret
test
dec
mov
inc
push
cmp
cltd
cs
push
je
outsl
mov
mov
or
push
mov
push
test
les
into
enter
jle
mov
jmp
clc
push
push
mov
pop
push
push
mov
fnstcw
jg
repz
cmp
mov
sub
pop
sbb
fs
int
xor
test
mov
test
or
xchg
xchg
or
test
adc
sbb
rolb
fstpt
mov
mov
xchg
adc
push
cmpsb
lahf
adc
inc
cmp
pop
jge
pop
adc
mov
adc
cmp
nop
dec
cmpsb
mov
enter
push
mov
movsb
add
sbb
je
outsb
and
sbb
cmpl
mov
push
mov
fcoms
out
jno
lret
imul
adc
inc
or
xchg
mov
imul
inc
out
int3
or
outsl
mov
adc
fiadds
rol
or
movsb
push
test
bound
mov
xchg
pop
pop
inc
ja
sti
fsts
mov
sbb
cmp
ljmp
dec
jbe
sahf
movsb
movsl
int3
pop
inc
and
cmp
addr16
and
xor
imul
inc
imul
sub
xchg
push
sbb
mov
and
cmp
pop
push
mov
adc
mov
data16
jmp
mov
idivl
xchg
pop
call
adc
mov
shl
xor
xchg
bound
xor
repnz
popf
mov
push
or
adc
mov
test
mov
pop
pop
xor
ret
sub
xchg
loopne
jmp
std
inc
push
xor
sub
add
and
cmp
xchg
push
in
mov
out
dec
or
jl
gs
or
test
daa
icebp
aaa
insb
cld
adc
cmp
in
call
clc
add
mov
sbb
test
sbb
inc
xorb
or
outsb
in
cmp
or
arpl
in
pop
bound
dec
inc
testl
ret
dec
sbb
gs
xor
inc
push
adc
add
repnz
mov
or
jl
cmp
nop
push
dec
xchg
mov
xchg
push
mov
fistps
adc
and
ret
loope
mov
testl
jb
adc
popf
dec
sub
cmp
push
sub
rclb
xor
and
and
out
or
je
xchg
out
mov
lock
mov
sbb
mov
push
inc
lock
lods
dec
lods
test
sub
movsl
mov
and
hlt
testb
push
test
push
cltd
xor
push
xor
push
mov
or
push
movsl
mov
or
xchg
mov
add
rolb
jmp
mov
js
sub
or
decb
es
adc
xor
pop
xor
mov
js
sub
xor
sbb
inc
lea
sub
add
pop
or
bnd
bound
jmp
push
jecxz
inc
bound
mov
gs
daa
dec
push
jb
and
call
out
call
jecxz
lcall
inc
xchg
lock
jnp
iret
lds
out
mov
subl
adc
pop
repz
negb
lock
lahf
outsb
loopne
add
mov
mov
mov
gs
adc
movsl
lds
adc
push
jnp
test
add
bound
xor
ds
das
sbb
inc
filds
sub
pop
inc
shrl
iret
sub
sub
xor
mull
push
out
xchg
adc
popf
das
add
lret
sbb
add
mov
fs
xor
mov
test
sub
inc
js
mov
and
test
mov
data16
dec
lcall
adc
jo
das
iret
jle
adc
xchg
pop
mov
or
push
xchg
andl
rclb
fisubrs
jne
xchg
push
cmp
ds
and
sub
and
dec
mov
fldl
fimull
pop
inc
jo
pop
das
add
push
jno
les
sub
test
jmp
pop
outsb
inc
pop
adc
jnp
jmp
inc
std
add
aad
or
mov
sbb
and
dec
adc
aad
sbb
xor
mov
repz
dec
jg
loopne
mov
mov
dec
scas
jo
or
mov
mov
movsbl
sbb
dec
xor
imul
and
and
mov
sbb
jg
fld
mov
cmp
movups
inc
dec
xor
and
cs
sub
mov
cltd
jge,pt
pop
fcompl
dec
sahf
push
std
gs
aaa
cmp
rorl
imul
sub
push
jmp
inc
mov
ljmp
cmp
mov
test
movsl
scas
mov
or
jmp
lea
jmp
insb
mov
adc
in
cmc
xor
mov
daa
bound
sub
addb
xchg
pop
dec
sub
sbb
and
and
jmp
pop
adc
inc
xor
pop
and
cwtl
repnz
pop
push
sub
mov
add
dec
daa
sub
loop
mov
xchg
mov
or
pop
lds
mov
pop
pop
andb
fcoml
fisubl
mov
cld
adc
ret
mov
test
mov
jmp
rorl
mov
divl
stos
or
adc
mov
dec
mov
idivl
add
sub
divb
dec
push
mov
test
sub
push
sbb
add
lcall
rorb
or
and
mov
mulb
mov
decb
mov
sub
or
cmp
add
out
pop
cmpsb
and
std
jg
popa
adc
pop
lods
dec
mov
xchg
insb
mov
mov
adc
pop
stos
cmp
adc
sub
xor
clc
push
and
sub
push
daa
jmp
mov
pushf
adc
cld
add
gs
ud0
sub
faddl
adc
and
and
adc
dec
test
or
lods
arpl
pop
or
daa
push
jne
cmpsb
addr16
push
dec
icebp
rclb
jle
addl
sarl
test
sub
jmp
push
mov
sahf
pop
out
bound
add
dec
cld
xchg
adc
int
int
cmp
dec
in
rcl
sub
loop
and
repz
std
test
xor
fmull
inc
xor
cmp
add
je
jmp
add
out
and
in
lret
cmp
fcmovnb
and
sub
dec
xchg
stc
mov
aas
sub
mulps
imul
in
out
add
lcall
outsb
lods
jmp
adc
jecxz
push
popf
adc
loope
and
sbb
push
mov
aas
das
jmp
or
add
mov
inc
inc
outsb
lods
cmpsb
les
add
fisubl
int3
pop
and
xchg
fs
or
jo
dec
mov
lret
mov
icebp
or
fldcw
rorl
adc
sub
inc
mov
push
std
pop
nop
jmp
mov
mov
xchg
out
xor
movsb
sub
imul
adc
mov
and
lret
jo
push
movsl
ja
into
xchg
push
sub
outsl
push
cmpsl
orl
ljmp
push
xor
sbbb
add
push
jne
and
jle
xor
mov
in
mov
shrl
outsb
inc
sub
xlat
jle
loop
repz
adc
imul
loopne
inc
adc
das
gs
dec
mov
loopne
addr16
test
sbbb
or
and
rolb
popf
int
add
sbb
jmp
cld
mov
ljmp
jmp
pop
push
pop
adc
outsl
dec
or
inc
push
jo
popf
in
subb
js
and
sbb
mov
adc
sub
pop
jle
sub
dec
mov
dec
imul
push
inc
sbb
and
shll
sub
fsubrl
dec
mov
sbb
std
fs
pop
arpl
and
pop
jmp
push
call
setae
jno
and
adc
cltd
dec
nop
cmp
cmp
dec
and
push
jge
jl
sbbl
push
push
sbb
xchg
mov
sub
or
sbb
cmp
pop
xchg
mov
cmp
jae
or
nop
es
pop
pop
inc
inc
inc
jno
and
adc
mov
jns
sub
repnz
jecxz
and
and
push
lahf
pop
fcompl
in
les
int3
inc
xchg
dec
lods
mov
inc
jg
mov
sub
pop
push
daa
in
mov
jo
jl
and
pusha
int3
add
or
lock
mov
mov
inc
adc
cmp
pop
add
sbb
call
jl
sbb
dec
inc
inc
fidivrl
push
inc
aam
pop
inc
jo
adc
shlb
sub
and
inc
mov
pop
pop
mov
arpl
stos
push
mov
jbe
rcll
aam
jno
mov
xchg
rolb
sub
mov
gs
das
clc
inc
pop
mov
sbb
movsb
outsb
adc
sub
adc
int3
stos
fisttps
mov
xor
in
sub
mov
mov
dec
into
test
mov
mov
rcl
adc
negb
or
sbb
les
imulb
sub
cmc
adc
push
and
pop
or
testb
in
push
push
dec
jbe
popf
in
mov
rcll
sti
test
and
sti
mov
sbb
movsl
push
mov
dec
fidivrs
mov
pop
xor
adc
xchg
push
mov
and
sbb
in
sti
adc
loop
jge
mov
out
fwait
stos
inc
js
sbb
into
xlat
icebp
loope
jg
push
and
push
out
in
arpl
imul
jae
mov
jle
fimull
push
cmp
xchg
imul
cwtl
and
and
das
inc
cltd
stc
pop
push
xor
mov
popf
loop
adc
push
pop
jmp
pop
sub
sbb
mov
sub
dec
and
jl
mov
xor
shr
test
add
dec
and
jle
pop
rolb
aam
jmp
lods
adc
mov
inc
mov
mov
and
cmp
inc
pusha
cld
inc
adc
or
push
jne
add
pop
jl
fidivl
pop
ret
ret
movsl
lods
mov
mov
push
rolb
mov
int3
psubsb
in
mov
xchg
adc
into
jne
dec
inc
adc
sbb
adc
lock
adc
xchg
out
out
adc
sti
les
push
jo
mov
ret
push
mov
in
pop
pop
adc
pop
and
fildl
push
dec
jo
and
mov
sbb
imul
cld
mov
popf
test
and
std
sbb
ss
and
push
cli
sbb
inc
aas
adc
fildll
daa
jge
stos
icebp
int3
xchg
cli
movsb
and
lret
push
rcll
popf
sub
and
cmc
scas
sbb
popa
ficoms
cwtl
enter
pop
lea
incl
sbb
les
sbbl
mov
jmp
shlb
inc
mov
and
xchg
cmpb
and
nop
adc
loop
jb
lcall
jmp
aam
lods
inc
jmp
nop
push
loope
idiv
dec
sbb
rorb
outsb
mov
and
and
ds
lret
jge
inc
adc
push
scas
pop
call
add
and
sub
test
stos
fs
pusha
xlat
call
mov
jge
rcll
cld
fstp
sbb
out
rclb
ljmp
mov
int
je
in
push
push
sub
sub
xchg
jno
xchg
mov
cltd
adc
adc
pusha
testl
sahf
xorl
dec
ljmp
js
enter
mov
inc
or
add
jge
jb
loope
loop
pop
xchg
mov
xchg
jge
jne,pt
stos
lds
ret
mov
fucomp
and
stos
mov
insb
enter
jp
jno
jecxz
xchg
xchg
xchg
pop
inc
sbb
inc
sbbl
jmp
adc
rolb
inc
mov
mov
in
ret
adc
pop
cmp
mov
stos
mov
push
push
push
sub
mov
popa
add
ret
sub
scas
dec
sti
pop
sub
cs
and
rclb
orl
jmp
or
cli
mov
sub
inc
pop
sub
add
xchg
aad
xchg
std
aad
je
dec
push
push
aam
or
mov
es
inc
mov
dec
push
pop
mov
lahf
fdivr
dec
sbb
adc
and
inc
xchg
rcpps
movlps
xchg
adc
movl
mov
sub
sbb
cmp
push
pop
stc
stos
mov
in
cmpsl
dec
pop
or
push
push
les
fld
push
sub
cwtl
adc
mov
inc
jb
jmp
faddl
push
push
roll
test
xor
lret
cmpsb
sub
scas
and
adc
push
or
push
or
dec
stos
sub
add
adc
shll
rcrl
scas
pushf
and
out
and
or
adc
subb
les
out
adc
sub
push
and
into
adcl
jmp
sub
xor
and
adc
adc
push
popa
mov
xorps
push
or
adc
inc
add
inc
dec
into
es
cwtl
push
into
jle
es
mov
adc
mov
fs
gs
idivb
stos
ss
cmpb
cmc
pop
andb
xchg
sbb
clc
jl
hlt
sbb
stos
adc
ds
mov
mov
and
pusha
les
push
imul
mov
dec
call
mov
pop
in
pop
xchg
mov
es
adc
out
dec
dec
cmp
insb
ret
leave
sbb
push
cmpsb
mov
or
mov
stos
outsb
movsl
xor
pushf
xchg
aad
pop
call
std
into
daa
cld
push
jae
or
sub
push
sbb
fcomp
or
das
sbb
sub
mov
xchg
push
push
add
jl
leave
mov
les
lock
push
call
and
cmp
es
bound
push
fcompl
adc
push
bound
mov
scas
push
dec
pop
adc
adc
pop
xor
or
pop
and
jle
fadds
xor
add
call
es
std
and
cmp
jl
mulb
ret
insb
out
fistl
jo
cld
popf
jl
pop
addb
mov
pushf
push
mov
push
jmp
pop
mov
inc
xchg
adc
or
pop
adc
and
dec
shrl
push
hlt
jle
cmp
inc
insb
es
sub
dec
and
sbb
push
and
adc
pop
cmpsl
jne
aad
nop
dec
push
push
adcb
jne
inc
daa
push
xor
test
pushf
scas
lock
push
push
stos
fcomps
and
femms
add
arpl
xor
jmp
aad
movsb
adc
mov
add
ds
push
lods
lds
push
push
inc
sub
and
add
and
adc
jmp
fcomps
movsb
jp
push
push
or
push
imul
push
mov
es
scas
iret
dec
lock
jecxz
fs
and
xchg
out
jecxz
dec
add
push
dec
in
pop
xchg
movsb
pop
sub
sbb
repnz
pop
les
lock
pop
jbe
fisubrl
aad
clc
stos
and
and
cmp
enter
fnstsw
or
or
mov
loopne
neg
pop
mov
jmp
push
mov
cmp
mov
adc
inc
mov
insb
cmp
or
mov
jge
push
dec
push
add
add
mov
adc
or
mov
adc
jne
push
inc
mov
test
stos
adc
int3
jl
pop
push
push
mov
push
les
jecxz
ret
aam
and
jmp
inc
je
sbb
xlat
fsubs
and
mov
mov
pop
sub
cld
sub
loopne
test
call
xchg
popfw
xchg
mov
int3
xor
cmp
add
pop
xchg
pop
aaa
into
jb
pop
add
push
int3
pop
stos
and
andl
pop
aam
cmp
sarb
xor
inc
inc
cmp
stc
adc
repnz
push
test
fsubrl
and
xchg
testb
cld
sahf
add
mov
movl
push
cmp
shl
lret
dec
mov
jne
mov
test
jg
mov
rorl
jg
insb
pop
push
test
mov
lods
add
clc
jp
xor
dec
sub
je
pop
call
out
cmp
stos
xor
in
fsts
or
cmc
rcll
adc
in
cmp
lods
push
mov
cltd
adc
push
cmp
loope
push
lret
call
adc
add
mov
call
xchg
adc
add
pop
test
das
mov
in
pop
outsb
push
dec
movups
or
jmp
or
movsb
push
cwtl
xor
enter
in
in
mov
jnp
and
in
les
pop
pop
ret
movsl
std
adc
add
mov
mov
hlt
movsl
cltd
imul
test
pusha
ficoms
push
pop
sbb
or
jp
push
or
mov
mov
mov
addr16
push
arpl
push
in
mov
scas
jne
add
test
cmpsl
and
lock
negl
or
roll
movl
mov
adc
incb
mov
pusha
or
and
jb
jmp
xor
inc
xchg
jbe
or
clc
sbb
add
jl
and
jne
fs
and
jne
js
sbbb
ss
sub
pushf
loopne
dec
xchg
les
add
inc
xorb
mov
adcb
and
das
fadd
bound
mov
adc
push
je
push
inc
or
push
jne
pop
icebp
adc
push
push
and
cli
test
ljmp
adc
iret
dec
test
int3
adc
mov
jo
popf
inc
loope
nop
or
loopne
jb
xor
loopne
adc
enter
popa
xor
push
enter
or
push
inc
pushf
mov
cmpsl
or
out
or
pop
or
test
inc
cmpsl
shlb
iret
or
adc
add
pop
and
in
and
cmp
call
inc
stc
xchg
loopne
xor
clc
cmpsb
push
push
lcall
jbe
xor
adc
sub
pop
and
inc
sub
push
mov
add
cwtl
arpl
das
lcall
xor
aad
ljmp
ret
and
adc
xchg
and
sub
add
lea
xor
js
jl
adc
inc
or
int3
fs
jbe
push
pop
add
ret
shrl
mov
dec
xchg
xor
mov
mov
pop
cltd
dec
imul
mov
hlt
pop
lea
inc
pop
adcb
addb
mov
stc
and
ljmp
dec
loop
and
movnti
push
test
sbb
ja
pop
sbb
call
inc
or
test
jbe
aad
pop
xor
xchg
lea
dec
mov
and
push
lea
inc
aaa
adc
inc
add
pop
test
adc
je
sub
push
mov
ss
or
cmc
sub
nop
pop
push
dec
xor
pop
push
out
inc
adc
xchg
push
push
add
mov
ret
and
inc
sbb
push
and
loope
dec
cmp
repz
call
pop
leave
jne
call
sti
and
jno
rorl
test
in
cmp
xlat
repnz
ja
cmp
imul
inc
push
int3
xor
add
sar
insb
xor
ret
mov
jae
sub
lock
pop
pop
pop
mov
push
dec
addb
jne
inc
and
sbb
xchg
add
cmpsl
adc
lahf
push
adc
mov
push
mov
arpl
jne
inc
mov
adc
push
mov
rcrl
or
or
push
inc
push
add
push
call
mov
out
add
fwait
cmpb
sbb
repnz
mov
jbe
sbb
add
xor
and
pushf
fiaddl
xchg
fcoms
ja
and
push
or
xor
test
inc
inc
push
bound
and
daa
and
pcmpgtd
mov
adc
jbe
xor
mov
dec
mov
xor
lret
mov
jb
cld
inc
sbb
shlb
xchg
pop
adc
syscall
sar
sub
jl
and
dec
dec
pop
imull
dec
mov
pop
adc
adc
andl
push
addb
fistpll
int3
xor
incl
adc
cmpsb
ret
in
inc
dec
imul
mov
add
mov
adc
mov
js
pop
cmp
aaa
or
adc
test
add
das
add
and
aaa
sbb
decb
push
push
push
fcompl
in
aam
sbb
ja
jno
imul
daa
lea
mov
xor
inc
mov
sahf
js
push
jl
mov
es
shll
addl
lea
push
mov
rcrb
pop
mov
lds
pop
xchg
push
or
popa
jmp
dec
xor
inc
mov
add
push
rorb
or
add
inc
rcrb
jne
sbb
cmp
xchg
scas
fisttps
xor
les
and
add
and
aam
pushl
popa
adc
push
popa
xor
sub
push
sub
jmp
and
xor
or
adc
sub
sub
es
xor
pusha
mov
and
mov
or
adc
mov
pushl
jns
sbb
sbb
popf
mov
fwait
int
sbb
nop
cmp
mov
mov
and
sub
or
or
jnp
xchg
or
or
xchg
push
or
lret
add
sbb
mov
xchg
test
orb
mov
cmp
push
sub
dec
aas
mov
dec
cmp
xchg
mov
pop
aas
mov
sub
or
leave
imul
adc
sub
adc
inc
mov
iret
test
adc
test
adc
or
mov
inc
push
pop
push
jmp
shl
and
jge
inc
cmpb
mov
mov
punpcklbw
sbb
cmp
icebp
lahf
sbb
subb
jno
mov
int3
push
cmp
enter
pop
je
cmp
cmp
mov
or
sbb
adc
fmuls
jg
mov
mov
repz
inc
sbb
les
dec
add
adc
jle
stos
lcall
enter
stc
cmp
mov
orl
xchg
push
xor
adc
les
jne
adc
sysenter
mov
pop
loop
filds
shl
add
clc
add
adc
shll
icebp
sbb
pop
xor
or
clc
test
mov
fwait
aaa
pcmpeqw
or
add
jmp
jbe
arpl
or
int3
dec
or
xorl
push
ss
jno
gs
jp
mov
jo
outsb
or
std
and
xchg
mov
dec
jmp
xchg
loopne
stos
adc
inc
xchg
and
dec
lods
aad
jg
pop
outsb
fmuls
sbb
fs
jo
xor
or
stc
cmp
cwtl
js
dec
in
mov
and
add
test
sar
adc
int3
add
cmpb
in
test
mov
mov
cli
add
sub
loope
je
sub
mov
inc
adc
cli
pop
xchg
mov
xchg
movups
and
jmp
rep
ja
xchg
dec
dec
gs
xor
je
dec
jmp
dec
dec
adc
xchg
fdivl
pop
add
cmp
jbe
add
jb
and
adc
fsubl
sub
add
xchg
test
inc
xchg
jmp
sbbb
push
loopne
enter
bound
push
lea
cmp
rcrb
test
and
mov
push
inc
add
mov
adc
int3
or
mov
cmpsb
sub
movsb
and
inc
inc
inc
or
mov
lahf
cltd
jl
and
dec
insb
xchg
and
mov
je
je
enter
inc
in
mov
mov
mov
add
add
and
or
and
shlb
int3
inc
loopne
cmp
or
sahf
inc
or
cli
nop
adc
movsb
push
push
aad
inc
sub
lea
jl
cmp
or
adc
inc
gs
adc
fs
mov
dec
inc
adc
xor
js
or
cmp
aad
xchg
mov
push
and
dec
movsb
xor
push
out
inc
jle
mov
lret
pop
push
dec
lods
mov
lods
adc
scas
xchg
or
sub
pop
shl
push
cmp
add
pop
or
adc
sbb
and
aaa
push
push
inc
sbb
and
pop
and
shlb
pop
and
shlb
pop
and
repnz
push
cltd
or
jl
mov
mov
adc
mov
fwait
mov
test
sbb
cs
je
loope
sahf
adc
shr
loope
add
sbb
sbb
roll
divl
mov
rolb
xchg
shl
inc
mov
and
inc
mov
inc
arpl
sub
shrb
and
inc
lret
popa
rcll
rcll
nop
or
or
or
and
loope
ret
push
or
fcomps
push
popf
or
or
inc
rcrl
sbb
repnz
psrad
popf
inc
and
test
jnp
mov
ret
cld
xor
add
shrb
sub
add
inc
adc
fistpl
or
cli
push
push
pop
inc
adc
mov
inc
or
adc
inc
shlb
push
jmp
cmp
add
jne
neg
pop
jp
popf
test
insb
mov
adc
or
cmp
add
js
adc
sbb
sub
push
push
pop
push
mov
movsl
sub
cmp
fisttps
divl
cmp
jmp
or
cltd
add
or
jne
pop
pop
pop
xchg
cmpsl
adcl
cmp
add
xchg
jne
es
add
sbb
mov
fucomip
mov
pusha
imul
std
lea
sbb
mov
dec
pop
or
inc
or
inc
xchg
cmp
movsl
jmp
out
xchg
xor
cs
xchg
pushl
adcb
jge
popa
jmp
adc
or
data16
cmpsb
push
pop
or
sub
hlt
dec
and
mov
push
iret
sbb
mov
daa
push
jecxz
daa
test
adc
add
push
sub
add
call
ret
push
sub
or
das
call
inc
and
inc
or
push
jbe
mov
and
and
shll
add
add
or
dec
pcmpeqw
icebp
mov
jle
rolb
xor
test
push
je
mov
dec
dec
and
test
pandn
cmpsb
lret
pop
int
jns
cs
or
incb
cmp
leave
sbb
mov
push
inc
arpl
out
bswap
mov
dec
inc
push
stos
adc
popa
xor
loopne
mov
mov
mov
jb
sete
mov
push
in
or
or
loopne
jg
lods
filds
mov
xchg
xor
and
adc
inc
inc
sbb
rol
decb
and
fs
jne
jo
cmp
mov
jb
sub
or
in
sub
mov
mov
push
daa
enter
pop
repz
adc
loopne
pop
clc
mov
xor
inc
jge
test
mov
or
pusha
xor
int
adc
sub
or
sbb
push
inc
cwtl
jmp
dec
pushl
and
cwtl
dec
sbb
cmpl
pop
and
adcl
cmp
je
inc
adc
and
mov
sbb
je
adcl
ja
add
and
add
scas
mov
out
add
push
pop
test
int3
inc
or
add
jl
rclb
push
push
and
test
mov
lods
scas
std
xchg
cltd
pop
insl
imul
dec
je
adc
xor
out
daa
sub
iret
lcall
jl
mov
outsb
inc
jmp
cmp
xor
test
insb
sub
pop
aam
leave
cltd
sbb
add
adc
and
jne
inc
mov
xchg
xchg
mov
pop
push
je
adc
push
ficoml
cmp
jne
and
or
add
jp
xor
and
lods
add
jb
jmp
or
ja
push
push
popa
pop
or
pop
insl
adc
push
stos
dec
js
xchg
push
sbb
add
movl
add
lea
clc
xchg
pusha
rorb
sbb
adc
testb
xorb
xor
mov
test
add
pop
sarb
jmp
jb
or
adc
cld
or
push
sbb
push
pop
push
mov
fwait
add
je
dec
pop
cli
loope
push
push
addr16
leave
push
sub
int3
imul
add
mov
sub
ret
adc
insl
sub
js
add
sarb
insl
push
clc
dec
and
add
xor
ja
xor
adc
inc
jne
or
jp
push
cmp
loopne
xor
lret
push
or
xor
cmp
testl
sub
cmp
aaa
jne
push
push
adc
add
sbbl
shl
rclb
add
test
add
push
movsbl
inc
jmp
or
xor
inc
pop
and
push
inc
dec
ret
nop
add
xor
cwtl
lret
aaa
cmp
lea
icebp
sahf
adc
or
jne
movl
cld
lret
add
imul
xchg
in
out
sbb
mov
daa
jmp
cmp
xchg
andl
pop
dec
cld
addb
mov
into
adc
mov
leave
or
cmpb
adc
and
daa
imul
adc
add
and
jmp
pusha
andb
sbb
je
cwtl
mov
add
popa
dec
nop
add
aam
loop
loopne
xor
add
popa
and
fsub
std
push
push
xchg
icebp
movsl
test
dec
dec
push
xabort
jns
cli
inc
fs
adc
or
loop
push
adc
mov
int3
push
pop
imul
ljmp
jne
xchg
sbb
and
adc
and
inc
mov
mov
mov
mov
jmp
sub
orl
adc
jge
into
clc
or
or
adc
aam
pop
jmp
pop
popa
mov
or
mov
pop
mov
mov
pop
and
adc
nop
mov
xchg
pop
or
sbb
js
and
xchg
stos
inc
fisubrs
sub
test
xchg
mov
xlat
sbb
testl
mov
jmp
and
push
mov
and
and
pop
push
pushl
cmp
call
sub
add
mov
sar
jmp
subl
push
xchg
rcll
daa
gs
adc
pop
ret
inc
xchg
mov
and
adc
sub
stos
add
jmp
xor
stos
mov
sub
lods
hlt
push
mov
jp
mov
orl
jmp
push
or
sub
mov
clc
mov
decl
fimull
stos
add
pop
mov
mov
pop
lret
and
int3
call
lea
push
sbb
or
in
pop
loop
inc
iret
adc
mov
push
lock
into
pop
rclb
shr
add
fnstenv
cmpb
inc
jmp
mov
inc
xchg
pop
push
and
push
dec
pop
sub
loopne
cmp
jne
dec
sbb
adc
ret
pop
jmp
push
mov
push
ret
mov
xor
push
xchg
jp
push
neg
xchg
lret
add
movb
mov
xchg
push
outsl
jmp
insb
sbb
test
lret
sub
xchg
pop
sbbb
cmpl
pusha
test
sarl
in
add
pop
pop
pop
ret
push
fisubl
adc
das
mov
out
dec
cmp
pop
cli
cmpsl
push
sbb
scas
jns
nop
push
mov
ficoms
sub
push
jb
xor
aam
movsb
pop
out
es
ret
and
lods
or
mov
xorl
scas
imul
in
jge
dec
subl
mov
and
sbb
cmp
or
setns
das
mov
and
sbb
insl
or
cld
push
inc
jmp
repz
cli
or
cmp
outsb
adc
add
pop
inc
push
dec
out
fimull
repz
mov
enter
mov
jecxz
xchg
nop
xchg
add
repnz
roll
inc
repz
sbb
inc
ljmp
mull
pop
test
cmc
jne
jmp
add
or
jbe
push
cmpb
sbb
enter
dec
push
les
xor
dec
mov
mov
or
jmp
rolb
or
xor
dec
jmp
sbb
dec
rclb
xor
ret
or
mov
lret
xchg
rorb
add
push
movswl
in
xchg
sub
rorb
insl
mulb
jmp
mov
xor
fs
andb
or
inc
subb
inc
xor
lahf
adc
xchg
push
adc
lea
pop
xlat
fstps
icebp
cmpsl
push
inc
mov
mov
cmp
sub
je
mov
inc
cmp
rcrl
cmp
or
adc
or
xchg
add
stc
xor
movsb
in
iret
dec
movb
jne
sbb
in
xchg
roll
jg
or
out
lea
shr
mov
cmp
push
stos
out
lock
daa
xchg
scas
dec
out
mov
inc
adc
aam
xchg
rcrl
pop
jo
pop
std
cld
adc
cltd
and
and
push
subb
push
cmp
adc
test
rclb
in
jmp
pop
hlt
adc
cmp
push
sub
push
jne
andb
mov
enter
inc
nop
push
lahf
xchg
lock
sub
push
sbb
pusha
imul
xor
nop
pop
or
stc
popa
jl
jp
add
mov
sbbl
jp
push
add
ljmp
push
ja
mov
pop
lock
cmp
sti
mov
xor
pop
push
jne
imul
mov
pop
sub
or
and
aaa
sbb
fists
lods
mov
cmp
jne
sbb
jl
pop
repnz
push
mov
jmp
mov
xor
loopne
fistps
jge
cmp
mov
adc
popa
adc
fmull
mov
rcrl
xchg
divb
adc
jmp
flds
or
out
or
int3
pop
or
pop
jmp
push
fdivl
ret
rorb
sub
nop
pop
mov
ja
and
mov
int
std
or
lret
xchg
xchg
adc
adc
testb
adc
aam
jns
xor
pop
sbb
push
pop
enter
push
add
push
shr
daa
fildl
pusha
fmuls
leave
jne
hlt
div
cmp
cwtl
xchg
or
add
jb
cmp
insb
or
push
jbe
sub
adc
std
adc
fdivs
cmp
cmp
push
sbb
sub
mov
adc
jmp
cmpsb
addl
and
push
sub
test
or
add
pop
mov
int3
scas
popf
inc
xor
xchg
fnstenv
jb
cmpb
jne
xchg
sbb
test
adc
inc
push
outsb
pop
and
jmp
test
inc
ss
loope
cmp
mov
mov
mov
movsl
shl
addb
and
ret
jmp
popa
fwait
das
and
push
or
jmp
lea
clc
bound
mov
movsl
jb
sub
out
pop
scas
sbbl
cmp
je
push
roll
adc
mov
mov
pop
adc
addb
and
fs
ja
rcl
dec
cmp
inc
aas
ret
dec
sbb
cmp
bound
popa
inc
sub
dec
pop
lock
push
popf
sti
gs
subl
adc
pop
sub
and
inc
inc
push
cltd
mov
pop
std
imul
filds
and
testl
je
inc
or
es
gs
scas
and
add
jp
movsb
xchg
adcb
jmp
mov
jne
pop
ret
loopne
xchg
test
insl
mov
test
dec
loope
bnd
mov
ret
jne
call
jge
and
cmp
inc
cld
dec
adc
inc
push
or
mov
pop
pop
sbb
mov
cli
iret
leave
push
inc
jae
jnp
mov
or
push
add
mov
pop
and
rolb
inc
cmp
test
data16
je
mov
fidivs
or
push
mov
inc
or
ja
divb
and
pop
enter
dec
je
ret
xlat
call
fmuls
dec
sub
jae
pop
inc
or
out
add
dec
or
notb
sub
mov
inc
inc
jmp
inc
lret
mov
dec
adc
sbb
push
cmp
jge
jb
maxps
sub
inc
inc
mov
adc
adc
sbb
or
call
andb
jmp
xor
and
and
xchg
cmovs
imul
decb
push
icebp
fs
inc
jnp
fbld
fs
xchg
pop
ffreep
dec
or
loope
add
mov
out
and
fsts
sti
int
das
add
call
mull
sub
in
xchg
inc
stos
xchg
pop
and
lret
punpckldq
jmp
or
sti
sub
sahf
push
cmp
push
rcl
pop
inc
add
sub
cmp
adc
bound
mov
add
jnp
mov
movsl
sub
lret
test
fucomip
popa
inc
or
push
sti
mov
in
int
sub
in
out
outsb
adc
jae
mov
mov
adc
mov
mov
push
mov
adc
mov
js
mov
adc
inc
mov
inc
mov
imul
dec
mov
stos
jbe
test
pop
ret
add
sbb
out
push
mov
fs
clc
mov
fisttpl
jle
rcl
nop
out
les
adc
es
enter
rorl
sbb
sbb
push
and
ja
adc
adc
adc
sbb
jb
dec
fldenv
ja
and
xor
sbb
and
adc
dec
mov
dec
repz
shlb
dec
imul
dec
repnz
sub
xlat
jnp
mov
fimuls
mov
cmp
jne
push
inc
inc
dec
or
cmp
js
cmp
in
cmp
loope
ret
out
mov
jecxz
repz
or
loopne
movb
repz
inc
daa
ret
outsb
cld
fwait
push
sahf
dec
je
dec
cmc
mov
cs
fsubrp
mov
add
ficompl
sbb
mov
std
les
cmp
jne
enter
out
loopne
push
adc
loop
push
cmp
int
test
xor
jmp
or
mov
aas
jnp
or
push
lods
or
call
or
cmp
mov
xchg
lods
imul
and
loopne
pop
cmp
cmp
inc
addr16
inc
imul
sbb
inc
mov
mov
orl
lea
cmp
jb
adc
cwtl
pop
sub
push
xor
pop
push
test
pop
rol
or
sub
xor
inc
sub
sti
mov
cmp
pop
movb
movsb
cmp
pop
bound
lods
jbe
mov
cltd
pop
sub
hlt
fstcw
movsb
call
int3
push
loope
cld
std
insl
int3
fistpll
hlt
or
es
int3
push
clc
popa
leave
cmpsb
xlat
pop
push
loopne
push
stos
lcall
cmp
sub
jl
gs
push
pop
mov
jge
in
add
orb
xor
lret
adc
adc
mov
jo
mov
xchg
icebp
sbb
mov
icebp
jne
std
sub
test
sub
push
inc
shlb
inc
insl
stc
inc
inc
std
cmp
adc
inc
adc
add
aaa
fpatan
pushf
negb
cmp
aam
pop
or
cmp
pushf
push
mov
mov
pop
insl
inc
bound
dec
pop
in
xorb
dec
add
inc
fcompl
dec
cmc
enter
xchg
repz
cmp
pop
aas
sbb
dec
cmp
sbb
popa
mov
xor
and
sub
test
and
push
pop
adc
test
imulb
cmp
mov
scas
add
andl
adc
xor
sub
mov
push
inc
xor
hlt
shlb
out
jnp
jg
xchg
adc
inc
sar
je
enter
jne
fsubrl
dec
lea
je
or
xchg
loope
sub
mov
cwtl
push
mov
dec
xchg
push
cmp
add
adc
adc
cmp
stos
lods
stos
cmp
das
sti
test
mov
std
lret
sar
lock
hlt
add
test
jg
cmp
mov
testb
je
push
xchg
or
outsb
inc
xor
mov
mov
outsb
cmc
dec
add
cmp
pop
mov
pop
nop
test
cmp
xchg
push
cmp
dec
jge
ljmp
xchg
adc
scas
xchg
shr
mov
pop
or
dec
lock
test
aas
pusha
rclb
push
in
wrmsr
mov
xor
adc
js
push
mov
addr16
cld
adc
fs
and
leave
add
lcall
lcall
mov
push
int3
push
inc
fsub
and
jmp
test
pusha
in
iret
or
inc
pop
dec
pop
int
sbb
aas
je
or
push
movsb
or
inc
inc
cmp
mov
lret
adc
in
or
adc
jne
hlt
ljmp
add
ds
pop
push
fucomp
jmp
lret
and
out
or
jmp
mov
aas
inc
push
xor
inc
add
lret
mov
jmp
je
popf
or
and
insb
mov
mov
xchg
xchg
mov
or
lret
cmpb
jne
adc
jg
xor
push
inc
cmp
xchg
js
insb
mov
lea
xor
sbb
fstps
jg
mov
sbb
inc
data16
das
jmp
clc
fmuls
add
sub
sbb
and
pop
shlb
sbb
call
push
outsb
jo
or
cld
test
add
xor
sub
shrl
xchg
fbld
ljmp
cmp
pop
mov
push
mov
sbb
test
movl
dec
xor
ficoml
lret
dec
jmp
inc
int3
test
add
inc
adc
lea
mov
iret
xor
jmp
and
and
subl
stos
out
dec
sub
hlt
stos
or
xor
out
sub
sub
aas
pop
je
or
push
lds
cli
mov
or
icebp
push
mov
shll
rorb
out
mov
add
popaw
xor
pop
sub
inc
xor
sub
call
jmp
stc
dec
cli
movsl
cmp
sbb
pushf
push
or
and
hlt
xor
mov
rorb
mov
lock
fs
push
mov
fcomip
jns
pop
jp
mov
or
out
jns
icebp
outsl
xchg
into
test
ss
mov
notb
enter
popa
sub
popa
sub
mov
mov
das
xchg
cld
xlat
push
les
pop
es
sahf
mov
je
daa
add
sub
leave
insl
add
aam
inc
jmp
stc
lods
adc
mov
sbb
loope
dec
repz
dec
jmp
jo
test
dec
adc
pop
mov
xabort
adc
add
mov
mov
dec
and
or
inc
ret
add
xor
add
dec
and
mov
jmp
mov
push
jo
jmp
cltd
inc
jnp
push
push
pusha
je
push
cmp
or
or
and
or
enter
pop
rcrb
or
sahf
aad
and
or
cmpsl
cmpsl
cmp
test
add
in
pop
jl
mov
jae
xrstors
push
cli
jmp
add
or
js
add
cmp
add
mov
or
fs
in
imul
or
xchg
jg
push
sbb
out
and
hlt
cltd
push
push
push
push
cs
call
loop
xchg
or
xor
rol
call
push
cmp
jno
xor
clc
jae
or
sbb
mov
sub
sbb
sub
sbb
xor
nop
or
dec
inc
and
xor
xor
or
cmp
mov
test
shll
aad
cmp
push
mov
and
sub
or
add
mov
sub
push
hlt
xor
sub
loopne
push
call
sbb
movsl
pop
xor
push
pop
lcall
xor
jo
xchg
or
push
jle
inc
clc
adc
add
je
in
call
adc
cmc
push
imul
dec
sub
adc
out
sub
mov
add
cmpsb
inc
jno
ss
sub
ficoml
addb
adc
mov
dec
inc
xorb
or
and
enter
testb
dec
add
dec
add
push
rcll
mov
pcmpeqb
xchg
mov
movsb
cltd
jle
pop
testl
adc
mov
ret
dec
or
and
xor
sub
adc
dec
lods
mov
jae
ds
dec
and
mov
out
dec
fnstenv
es
jnp
insl
adc
push
aaa
push
inc
insl
adc
aaa
enter
nop
outsl
loop
pop
jns
sbb
cmp
loope
push
or
or
push
cld
sub
xchg
jecxz
rol
cmp
or
mov
mov
pop
inc
jmp
bswap
push
ljmp
lds
inc
lds
sbbb
or
incb
std
push
lahf
scas
push
jnp
jle
mov
call
bound
call
sbb
fildl
ss
xchg
out
cs
cmp
addl
movsb
add
adc
lea
jge
add
xor
test
mov
inc
mov
sub
cli
call
mov
pop
cmp
lds
pop
inc
xor
xlat
rcrl
xor
call
xor
subb
in
mov
and
push
pushf
adc
leave
pop
loope,pt
xor
hlt
cmp
pop
pop
icebp
rep
out
pop
sbb
jbe
popa
mov
fstpt
mull
jbe
mov
enter
push
add
and
ret
lods
xchg
test
lret
and
and
testb
imul
lea
sarb
push
or
push
jnp
aad
mov
stc
call
or
repz
test
or
push
push
cmp
or
loope
push
dec
cltd
popa
loope
and
mov
cli
ror
call
arpl
aad
pop
pop
xor
xor
shlb
jle
mov
mov
jle
out
fisttpll
ljmp
add
push
cmp
and
inc
jmp
sbb
shlb
inc
add
mov
or
inc
push
cmp
push
mov
xchg
loop
out
xchg
adc
scas
xchg
add
ja
inc
pop
push
xor
lcall
subb
es
adcl
test
inc
adc
lea
xchg
mov
and
outsb
out
push
add
outsb
mov
inc
xchg
movsb
jbe
push
pop
or
dec
jl
or
pop
adc
aaa
es
or
imul
xor
push
pushf
adc
push
je
adc
test
movsb
sub
andb
sub
cmp
es
mov
mov
inc
inc
mov
jl
decb
mov
lods
xchg
fstpt
test
orb
sbb
sarb
testl
and
mov
into
ja
or
daa
adc
add
mov
and
ret
fistpll
or
shl
jae
mov
push
jg
pusha
fsubr
sub
inc
iret
or
dec
adc
or
dec
lcall
lea
fsubs
or
and
mov
xchg
mov
xchg
sbb
jge
scas
movsb
cwtl
adc
aaa
jae
aas
incb
daa
or
mov
sbb
jmp
bound
or
cs
or
sub
lds
pop
cmp
addr16
enter
popa
add
mov
cmp
fs
sub
loope
xlat
jmp
inc
sub
mov
test
or
mov
push
inc
push
mov
or
mov
mov
sbb
mov
int3
pop
add
sbb
or
push
sbb
dec
popf
cwtl
bound
sub
add
push
jle
mov
pop
xadd
je
testb
fmuls
inc
mov
jl
jmp
aas
mov
push
shl
sbb
add
mov
fwait
jecxz
cmp
cmp
je
mov
lock
adc
decl
in
cwtl
out
or
pop
ljmp
inc
int3
mov
xchg
mov
aam
xchg
inc
cltd
int
fs
xchg
sbb
inc
popa
cmp
pop
subl
or
sbb
ljmp
sub
fsubrs
jl
lds
and
out
mov
scas
adc
cmc
inc
sbb
sub
xchg
jmp
in
add
nop
xchg
mov
ret
or
lret
cmp
rorb
cmp
popf
push
jle
adc
orl
add
sub
mov
inc
mov
or
push
jle
mov
add
stos
bound
or
adc
add
mov
or
std
add
push
xchg
inc
pusha
and
aad
pop
loopne
je
xor
sbb
jecxz
sbb
clc
xor
out
mov
cmp
shr
sbb
repnz
push
add
push
sbb
add
dec
aam
xor
cwtl
mov
cmpb
pop
stos
ret
fists
inc
mov
push
scas
aad
pop
je
das
jp
cmpsb
add
shrl
mov
mov
jb
push
jne
push
or
mov
adc
paddq
in
push
into
push
aad
push
jl
and
pop
mov
sbb
mov
or
add
xchg
nop
mov
orb
or
notb
ret
cmp
pop
into
sbb
call
lods
ret
xchg
gs
out
adc
add
lock
ud2
iret
imul
add
mov
pop
lea
lock
xor
adc
lea
repz
hlt
lret
ds
clc
icebp
adc
ret
pop
or
jle
cli
sbb
aas
jbe
push
pop
mov
adc
or
jne
and
jae
dec
mov
roll
jmp
dec
add
mov
inc
decb
jne
pop
and
aas
or
pop
xchg
push
inc
pop
add
or
imul
clc
pop
add
in
mov
cs
or
and
aas
xor
lods
subb
hlt
mov
in
pop
sub
and
ss
add
cmp
jbe
je
fsts
cmp
cmp
and
arpl
adc
mov
fsincos
mov
lret
shr
notl
add
jne
nop
lcall
loopne
mov
push
pop
xchg
pop
lcall
int3
pop
loopne
and
iret
inc
pop
mov
ljmp
pop
roll
mov
insl
push
pop
jo
orw
adc
mov
push
add
scas
sbb
jae
test
in
push
mov
in
or
inc
outsb
adc
scas
jg
sbb
adc
push
enter
ljmp
cmp
xor
cli
or
cmp
testl
fsubrl
xor
psraw
add
cmpsb
loope
push
push
call
and
push
xor
push
or
sarl
xor
decb
movsb
or
in
cmpb
rolb
pusha
add
stos
adc
js
inc
sub
push
sbb
jo
mov
adc
adc
mov
int3
hlt
add
add
or
enter
out
movups
sbb
addr16
aas
pop
ljmp
cmp
dec
insl
or
arpl
dec
push
fadds
cmp
cmp
rcrl
xor
jo
pop
orb
loope
enter
cmp
and
leave
into
decl
inc
lret
lods
xchg
popf
push
call
push
push
cwtl
push
or
pop
and
decb
iret
mov
mov
out
adc
mov
cmc
fmuls
daa
adc
out
xor
pop
dec
jae
clc
jnp
lcall
mov
or
adc
call
cwtl
test
cmp
push
data16
pop
mov
push
inc
xchg
cmp
enter
sub
out
adc
loopne
cld
fistps
nop
adc
mov
movsb
adc
push
adc
pop
scas
dec
ja
test
stc
pop
aad
cs
sarb
sarb
cmp
xlat
je
lea
jmp
orl
mov
jne
arpl
add
pop
test
jl
shl
or
jmp
mov
stc
mov
sub
pop
icebp
cmpsb
pop
pop
decb
addl
enter
or
and
add
jmp
test
mov
push
iret
and
cmp
and
filds
decb
jne
stos
inc
dec
dec
in
and
jmp
lret
adc
dec
lahf
dec
xchg
push
test
cltd
xchg
push
jp
cmp
clc
mov
sbb
jae
lahf
idivb
icebp
lret
cmpsb
inc
iret
jbe
push
push
and
rclb
and
push
or
adc
sbb
and
into
or
out
or
or
nop
mov
jmp
sub
lea
stos
and
lea
mov
clc
in
mov
mov
dec
cld
pop
xor
ret
ds
adc
cld
mov
lea
and
les
cmp
mov
adc
cltd
jo
and
add
or
test
mov
pop
sub
push
jo
pop
mov
sbb
push
iret
scas
or
je
mov
xchg
leave
dec
ds
inc
xchg
loope
cwtl
inc
test
repnz
xorl
inc
lret
mov
add
xlat
scas
pop
mov
mov
adc
pushf
adc
test
xor
sahf
shlb
pop
dec
push
and
push
push
arpl
fists
loope
push
jmp
xchg
xor
loop
dec
push
loopne
mov
xor
imul
stc
adc
xor
or
dec
xchg
pop
push
sti
xchg
pop
out
push
jns
push
adc
xchg
jne
xchg
adc
cmp
ja
cmpsb
inc
lock
dec
repz
mov
pop
add
movl
push
push
cmp
dec
add
sub
and
sub
mov
pop
add
mov
aaa
dec
or
push
sahf
inc
xchg
inc
inc
ror
add
jnp
andb
or
js
mov
not
and
xchg
ret
into
mov
or
lret
push
adc
mov
pop
sub
ljmp
je
dec
cld
dec
cmp
inc
sub
cmp
mov
push
or
das
push
orb
add
lods
push
sbb
icebp
aas
mov
push
dec
xor
mov
in
push
dec
sub
and
sub
clc
adc
nop
test
push
lds
cmp
and
pushf
nop
sahf
cmc
cmp
cmpsl
mov
or
jg
gs
xor
sub
add
clc
sbb
clc
push
pushf
stos
int
mov
sub
incl
fwait
mov
xor
loop
and
hlt
and
or
fimull
jecxz
outsl
sbb
xor
push
jne
pusha
mov
cmp
stc
add
pshufw
mov
and
xor
lds
jmp
mov
or
inc
test
xchg
insb
inc
and
clc
and
ja
popa
inc
jge
fildll
mov
movsb
bound
pop
xor
movsl
in
mov
and
in
inc
push
mov
jbe
dec
push
cltd
add
cmp
jg,pn
push
mov
je
adc
pop
push
sub
dec
xchg
push
cmp
out
jp
ja
jno
xor
push
popl
out
mov
out
inc
jnp
xorl
jno
imul
pushf
scas
dec
sbb
scas
pop
jecxz
or
sbb
inc
into
and
sub
pop
add
jns
bound
dec
jmp
inc
dec
sbb
push
hlt
mov
jmp
mov
rcr
mov
xor
push
cli
jne
jbe
test
jae
sub
adc
sub
aad
mov
lock
sbb
xor
add
mov
jne
in
or
arpl
xchg
mov
mov
mov
movsl
xor
xor
mov
in
xor
jmp
mov
in
mov
rolb
ret
and
cltd
inc
mov
dec
jb
push
cmp
jecxz
or
repnz
add
clc
jae
orb
inc
orl
lock
movsb
mov
jmp
mov
mov
fwait
mov
mov
cmp
or
inc
mov
sbb
loop
adc
cmp
testl
fwait
push
xor
cmpsb
subb
or
outsb
inc
cmpsb
push
sub
in
dec
pushl
dec
jge
push
je
test
dec
sub
fbld
pop
jmp
stc
or
or
and
adc
cmp
sahf
gs
sub
out
test
and
push
enter
je
lods
jns
xchg
pop
lock
inc
daa
and
out
inc
inc
push
inc
cli
sub
or
or
stos
and
je
mov
cmc
and
push
add
movsb
testb
adc
or
jb
or
clc
je
add
out
test
jne
popa
push
mov
movsb
rcr
bnd
and
or
and
pop
push
mov
push
icebp
or
mov
inc
push
outsl
rol
sub
pop
stc
arpl
enter
add
mov
add
andb
cwtl
cmp
adc
inc
add
pop
das
pop
xor
push
and
adc
jg
bound
adc
pusha
int3
inc
mov
movsl
mov
aaa
push
ret
pusha
push
and
adc
sub
sub
movsl
div
int3
je
adc
cmp
shl
cmp
add
jl
cmp
pop
jbe
push
andl
jl
cli
or
cs
movl
jb
push
dec
push
test
sbb
das
clc
cmp
and
mov
adc
shr
call
es
cmpl
jge
jb
movsb
inc
jl
cmpsb
mov
je
mull
sub
clc
cmp
cmp
test
mov
or
pop
int
faddl
and
call
inc
xor
sub
push
out
loopne
and
cmp
jns
or
movsb
and
rcll
push
adc
pop
jne
movsl
aad
pusha
push
aas
mov
push
push
cld
mov
jle
mov
mov
hlt
gs
sbb
ljmp
adc
inc
push
popf
push
movb
sub
sub
add
mov
cmp
repnz
sbb
and
inc
or
sarl
xor
sub
sub
mov
rolb
pop
rclb
sub
xor
lea
fidivl
sub
mov
shrb
sbb
in
push
add
hlt
mov
add
cmp
lea
pop
and
nop
cmpsb
push
jae
add
sub
popa
loope
pop
pop
mov
mov
pop
add
mov
pop
lea
add
inc
mov
test
dec
cmp
bound
cmp
xor
inc
inc
jmp
pop
movsb
jae
and
sub
and
mov
cmp
mov
cltd
pushf
pop
ret
jmp
inc
mov
jne
call
sbb
jae
notb
mov
mov
clc
mov
inc
movsl
pop
lcall
sbb
mov
lods
sbb
stos
adc
repz
mov
xchg
ret
daa
add
jae
sub
imul
ret
rolb
mov
adc
sub
inc
mov
inc
mov
nop
lock
stos
and
gs
xchg
scas
push
adc
addb
cmp
mov
lea
sbb
clc
pop
add
enter
pminsw
loope
jmp
jae
sub
roll
lcall
push
shll
adc
jae
aas
xchg
cs
pop
aaa
hlt
sbb
mov
push
out
arpl
ja
clc
lock
cmpsb
sub
jae
adc
mov
cmp
loopne
inc
xorb
pop
cwtl
inc
push
inc
stos
and
add
sub
sar
mov
popa
add
xor
cmpsb
and
add
popa
cmp
sub
push
call
repz
pop
push
add
inc
push
dec
repz
push
ficoms
cld
xor
adc
rcl
push
stc
daa
stc
shrl
loope
aas
into
ret
cwtl
pop
les
dec
leave
jno
adc
pop
test
or
pop
int3
into
push
loope
xchg
leave
cld
aas
insl
or
jnp
inc
and
adc
mov
enter
jmp
ss
push
jge
cwtl
call
enter
inc
inc
add
pop
pop
mov
arpl
xor
dec
jmp
or
and
xchg
nop
lret
xchg
or
and
inc
repnz
mov
aas
xchg
fwait
in
inc
loopne
adc
inc
repz
ror
mov
jae
inc
add
inc
in
mov
je
dec
inc
hlt
jno
out
pop
adc
inc
shlb
sbb
gs
dec
jg
je
push
jne
xor
inc
movsb
push
push
in
mov
or
dec
enter
jle
ss
sub
or
xor
mov
shlb
popf
fcoms
in
xor
inc
repnz
and
push
mov
add
jmp
fstpt
testl
lds
es
adc
jmp
sub
mov
or
loop
sub
ljmp
call
inc
inc
dec
or
js
sub
add
in
add
cmpl
and
je
sub
arpl
or
scas
or
push
and
or
out
in
sbb
scas
in
cs
sbb
andl
hlt
popa
sub
outsl
lods
adc
bound
or
sub
adc
add
mov
packuswb
cmp
imul
add
dec
adc
fs
cwtl
sub
mulb
jle
test
jmp
or
lea
ss
mov
cmp
sub
mov
cwtl
sub
mov
data16
das
jae
jo
mov
lcall
or
inc
and
popa
jecxz
xchg
fsubl
or
mov
mov
inc
dec
pop
jo
mov
mov
pop
sub
fdivl
mov
test
inc
cmp
repz
loop
add
arpl
mov
rclb
cmc
outsl
sbb
jbe
movb
aaa
lret
xor
sub
test
lods
sub
sub
movsl
lods
cmovs
cmpsl
and
or
or
cwtl
cltd
mov
lea
testb
adc
es
movsb
mov
push
movsbl
enter
dec
cli
inc
test
mov
sub
ds
push
push
adc
shll
cmp
sbb
or
push
sti
mov
outsl
aas
je
mov
ret
imulb
xchg
je
test
cmp
test
popa
mov
add
xchg
es
mov
mov
pop
into
dec
cmpsl
adc
lea
jne
lea
xor
scas
in
test
sbbb
adc
push
and
add
lret
xchg
test
arpl
je
cmp
pop
cmpsb
sub
ds
push
cmp
outsl
pop
jmp
sub
push
popa
add
pop
jmp
inc
or
mov
iret
adc
adc
jg
fildll
xchg
inc
jnp
sbb
pop
cmpsl
or
cmpsl
and
add
xor
je
inc
insb
ss
in
fmuls
shlb
inc
cmp
jae
add
shr
ret
adc
and
rolb
inc
mov
in
add
add
jb
pushf
add
jne
xor
jmp
rolb
mov
scas
pop
or
cltd
add
or
push
mov
adc
add
in
cli
push
shr
cmp
push
xor
lods
icebp
shlb
test
mov
xor
enter
lret
pop
shrb
sar
adcb
or
adc
je
and
jne
cltd
or
xchg
inc
sub
pop
xor
add
leave
insl
stc
in
jp
lret
or
aam
adc
das
stos
adc
adc
mov
adc
stos
xorb
push
pop
or
imul
mov
into
mov
out
jecxz
sub
loopne
andl
cmpsb
push
pusha
adc
repz
pop
jne
and
les
add
xchg
dec
and
jmp
or
gs
sub
lahf
push
fidivs
mov
pop
dec
push
mov
lret
push
faddl
pop
call
mov
add
in
adc
call
jne
cmpl
sub
ret
fstps
call
and
inc
shlb
cltd
add
adc
in
add
in
ss
jmp
jmp
in
jmp
mov
in
or
sbb
jmp
mov
je
aas
or
cmp
inc
frstor
insb
add
out
jmp
lea
js
out
cli
inc
dec
inc
pop
fstpl
insb
cld
call
dec
in
fiaddl
lea
mov
fs
cmp
inc
add
inc
mov
sbb
fwait
pop
or
cltd
push
rclb
push
dec
or
jmp
es
xchg
cmp
data16
stc
fildll
pop
or
pop
inc
xor
cmp
push
ja
add
leave
cmp
sti
leave
or
test
fcoms
xchg
mov
sub
push
enter
pop
lahf
out
inc
test
mulb
or
idivl
outsb
cmp
scas
lock
pop
xor
xor
out
mov
pop
pop
lea
or
jae
dec
pop
int3
movsl
adc
cmp
inc
nop
mov
sub
push
jle
stos
and
stos
roll
and
xchg
aaa
cmp
aam
pop
ret
hlt
loopne
jae
js,pt
scas
or
ret
cmp
and
scas
daa
push
in
or
lahf
dec
decb
int3
and
call
in
fldt
push
dec
out
fdivs
and
pop
push
inc
pop
jmp
hlt
sti
or
lods
dec
mov
xchg
lahf
cwtl
pop
xor
sub
cmp
ret
aam
incl
add
inc
call
ret
lea
imul
movsl
jle
push
pop
or
add
pop
xchg
push
ret
sbb
or
inc
pop
dec
test
mov
sbb
push
or
int
jge
add
adc
add
push
jl
das
or
cmp
inc
mov
bound
pop
sub
sbb
mov
test
push
shrl
sub
orb
mov
mov
aas
enter
scas
sbb
jmp
sbb
lret
xchg
jbe
push
icebp
add
pop
lret
mov
inc
insb
mov
push
clc
test
and
push
andl
adc
scas
rcl
xor
je
or
pop
sbb
loope
fyl2xp1
pop
push
loope
mov
jb
jle
mov
jg
push
pop
inc
inc
lds
adc
mov
dec
sar
lcall
mov
jae
and
scas
fwait
cmp
xchg
adc
xor
out
daa
out
push
mov
mov
aad
ret
clc
mov
inc
mov
addb
gs
int
jge
iret
ja
push
iret
lret
xchg
add
or
mov
adc
call
in
pop
add
xor
loopne
shrb
call
stos
stc
ljmp
push
pop
hlt
into
mov
fcoms
clc
insl
loop
xor
inc
adc
es
mov
sti
push
xor
enter
sbbb
ja
pop
mov
mov
or
or
loop
or
mov
cmp
adc
imul
or
mov
sbb
push
push
or
jmp
cmp
sbb
inc
testl
pop
movb
outsl
inc
mov
jae
int
lods
adc
adc
and
inc
or
dec
inc
mov
je
inc
mov
push
and
push
pop
and
add
inc
xor
dec
jl
mov
mov
scas
pushf
icebp
stos
or
dec
mov
or
or
jb
mov
push
mov
or
mov
dec
mov
adcb
inc
out
cwtl
ja
jae
enter
push
popf
cmpsl
jb
test
mov
mov
sahf
xor
lret
dec
push
jmp
popf
ljmp
loop
mov
xlat
mov
fnstsw
push
cld
and
std
push
in
ret
pop
fwait
shrb
push
xchg
xchg
mov
pop
push
ljmp
mov
call
mov
pop
mov
test
add
sub
xchg
jle
mov
lods
insl
aas
fsubs
pop
clc
cmp
not
ret
cli
test
jecxz
push
adc
or
fcomp
add
aas
je
add
cmp
jae
lret
outsl
mov
icebp
sti
in
adc
cmpsb
pop
test
roll
outsl
inc
int3
mov
mulb
inc
or
fwait
mov
xor
xor
push
add
mov
and
out
das
lock
jecxz
in
xlat
mov
ret
push
sbb
jb
mov
jae
sti
cmp
inc
or
das
cld
xor
dec
cmp
cmp
ja
sub
out
fs
jle
shlb
push
inc
ds
sub
add
dec
add
mov
pop
and
jb
xlat
test
push
pop
push
push
mov
movsb
push
fnstcw
or
and
dec
sbb
push
sbb
pop
mov
add
xor
in
sahf
adc
push
and
stos
jne
scas
bnd
dec
sub
ficomps
rcrl
lods
call
and
shll
es
fs
push
and
sbb
outsl
and
call
and
mov
adc
adc
xlat
sub
icebp
dec
dec
pop
adc
jb
rclb
je
in
mov
cmc
xor
repnz
bound
add
or
testb
js
jle
sbb
mov
cmp
or
fcmovne
xor
scas
and
inc
xor
dec
lock
shll
and
xchg
fsubl
test
std
fbstp
push
lret
in
push
add
sub
push
lea
push
push
inc
dec
shrb
jmp
jb
adc
jmp
sti
imul
pusha
pop
mov
dec
ds
clc
repz
sbb
aas
add
sbb
bound
lock
jne
jp
pop
xchg
test
adc
push
or
mov
cmp
je
fstpt
xchg
inc
cmp
icebp
stos
mov
lods
jmp
and
push
jg
jne
add
shlb
jge
add
rep
stos
jno
add
add
lds
out
adc
mov
xchg
ja
sbb
sbb
aas
cmp
xchg
xchg
mov
dec
out
push
push
or
and
stos
adc
mov
sub
push
add
xchg
cli
or
ja
pop
scas
sbb
nop
mov
jbe
inc
sbb
xorl
or
pop
cltd
jmp
mov
mov
and
mov
pop
push
mov
push
cmpl
push
pop
lods
adcb
mov
test
push
repnz
inc
push
xchg
mov
adc
dec
xor
sub
or
jne
mov
jmp
mov
and
cwtl
fistps
and
std
push
pop
mov
bound
push
and
movsb
push
sub
call
jp
cs
pusha
xor
ret
mov
adc
adc
sub
sbb
stos
mov
and
xor
push
jmp
adc
add
xchg
call
push
jl
js
mov
imul
hlt
mov
flds
jge
or
push
test
mov
hlt
cmp
and
push
mov
and
mov
mov
inc
loop
out
shrb
pop
pop
push
call
test
sbb
push
adc
test
std
dec
push
adc
xor
adc
pop
daa
in
iret
mov
xchg
add
lret
out
lea
jae
adc
cmp
sti
add
pop
gs
nop
adc
add
and
xor
mov
cmp
dec
xchg
push
test
jle
sbb
pop
les
shll
in
dec
pop
xor
jb
or
push
lods
dec
into
cmp
movsl
jmp
dec
xchg
das
mov
pop
movsl
pop
jne
pop
std
call
std
or
jmp
mov
pushf
mov
xchg
movsb
imul
mov
arpl
pop
push
or
pop
xor
add
aam
testb
sbb
inc
inc
xor
push
test
adc
adc
jne,pn
adc
andb
cltd
add
pusha
add
dec
lods
xor
add
mov
or
pop
sub
add
sarb
or
pop
jns
xchg
or
in
dec
add
insl
adc
and
test
je
iret
call
test
fs
xorb
sub
or
xor
xchg
push
and
cld
cld
sub
dec
test
nop
push
mov
xorb
or
or
inc
adcl
or
int3
mov
cmp
sub
pop
push
jb
je
mov
pop
out
add
hlt
ss
adc
sti
pop
rcll
jb
inc
mov
cmp
and
or
push
pop
cmp
mov
icebp
push
adc
push
add
lea
mov
insb
push
test
or
test
cmpsl
sub
lret
mov
inc
sbb
decb
popa
or
xor
mov
push
mov
mov
sbb
mov
push
imull
frstor
add
pop
clc
adc
jg
nop
fdivl
insl
mov
aas
out
loopne
jne
daa
sahf
jbe
xor
mov
dec
xchg
mov
idiv
inc
mov
adc
adc
ret
jmp
mov
call
cmp
gs
je
jns
int
outsb
inc
pop
in
popw
lahf
pop
mov
aam
or
jne
jnp
out
mov
push
jno
xchg
push
adc
and
cmp
lret
dec
xor
inc
cmp
ljmp
gs
or
sbb
in
or
xor
adcl
add
mov
inc
lahf
xchg
mov
push
testb
inc
jmp
pop
or
mov
test
and
mov
jl
scas
dec
and
jge
dec
movsl
cld
test
mov
sbb
cmpb
mov
mov
leave
rcrb
sarl
cmp
jns
dec
add
dec
mull
out
add
mov
sbb
xchg
sbb
or
insb
pop
push
pop
and
add
xchg
cmpl
arpl
inc
mov
rorb
ja
and
mov
jne
testl
or
bound
mov
push
icebp
ss
jo
push
or
enter
fsubrs
aam
pop
push
es
cwtl
cmc
xchg
test
mov
cmp
pop
add
jns
neg
and
sub
jl
jne
push
ret
mul
and
mov
fisubrl
or
ljmp
not
xchg
mov
dec
push
xchg
sbb
insb
sbb
xor
flds
or
inc
int
cmp
in
pop
cmp
dec
xchg
and
or
and
or
inc
add
ret
inc
or
dec
and
mov
sar
inc
loope
lea
add
mov
call
movb
addb
add
xchg
sbb
mov
mov
jge
add
test
scas
je
neg
jmp
push
or
gs
or
push
pop
dec
mov
sbb
shl
adc
insb
icebp
stos
loop
adc
test
pop
sub
push
mov
dec
popf
dec
nop
or
jmp
les
and
or
cmp
pop
setl
mov
clc
dec
sar
inc
adc
jge
sbb
adc
sub
and
push
xchg
repnz
inc
lods
or
adc
or
dec
pop
jns
hlt
sti
push
add
mov
and
push
daa
or
cmp
push
and
out
sub
jge
roll
or
data16
adc
shll
outsl
in
sbb
push
loop
jmp
dec
adc
lahf
push
faddl
adcb
arpl
add
mov
cmp
xchg
fs
sti
int3
lret
ror
arpl
cmp
and
or
lock
imul
sbb
sub
nop
fsubrs
aad
mov
pop
adc
stc
fimull
xor
adc
sub
inc
or
lods
dec
mov
ret
xor
sbb
or
imul
jo
dec
sub
divb
lods
pop
js
cld
dec
cmpsl
add
push
stos
lret
inc
sub
iret
jbe
adc
rcll
lret
lea
sub
mov
mov
shrb
dec
jne
mov
dec
xor
aaa
sarb
sub
cmp
addl
xchg
repnz
aaa
cmp
inc
and
mov
add
cmp
mov
lcall
rcrl
mov
fcompl
sti
dec
sti
push
and
dec
repnz
or
test
push
in
jo
cmp
mov
pop
in
enter
push
addb
adc
cmc
lea
dec
pop
or
or
je
nop
pushf
repnz
add
xor
xor
mov
jne
aad
enter
pop
push
push
adc
push
ret
push
jno
mov
inc
inc
xchg
cwtl
inc
or
and
aaa
sbb
cli
aam
cmpsb
mov
xor
pop
mov
push
mov
and
xor
push
cmp
je
cmp
cmp
or
movsb
xor
fidivs
push
jmp
sbb
mov
mov
pop
xchg
push
pop
sub
dec
cld
sub
xchg
adc
aad
adc
cmp
je
push
shll
jne
sbbl
aas
pop
xchg
and
jge
jne
roll
push
das
cmpsb
adc
mov
adc
jge
xor
std
jo
leave
pop
std
dec
test
xor
cmpsb
das
mov
test
out
pop
imul
inc
mov
mov
xor
dec
mov
or
mov
outsl
ret
add
mov
std
fistl
inc
cs
mov
and
movsb
daa
aad
pop
mov
mov
cmp
call
mov
bound
hlt
insb
or
cs
lcall
andl
dec
jne
jne
xor
mov
and
mov
and
dec
and
pushf
add
add
cli
and
lods
ljmp
repnz
jno
adc
mov
inc
inc
or
aad
jmp
dec
or
push
inc
mov
jmp
adc
inc
mov
inc
sbbl
int
and
shll
and
call
inc
dec
pop
incl
loope
scas
es
mov
add
mov
sbb
mov
push
roll
push
xchg
inc
test
inc
xchg
daa
sub
es
xchg
mov
lock
push
in
cmp
ret
hlt
and
dec
or
mov
ret
rorl
jmp
rorl
jo
inc
movsb
mov
movb
inc
mov
jle
and
faddl
adc
jne
cmp
fldcw
push
sbb
and
and
sbb
jg
add
jmp
xor
std
pop
inc
lar
add
sub
pop
cmc
or
dec
mov
inc
subb
sarb
in
test
ja
push
lret
pop
dec
inc
cwtl
fisubrl
cwtl
pop
dec
cmp
fisttpll
jp
lret
add
incl
xchg
inc
and
push
cmp
adc
inc
loope
sbb
dec
pop
repnz
sub
fists
dec
sar
cwtl
icebp
movsb
push
pop
xor
mov
xlat
mov
or
jmp
xor
xor
xor
or
and
push
aad
dec
roll
push
pop
mov
flds
inc
pop
imul
jmp
fisubrl
xchg
mov
pop
cmp
js
icebp
cmpsl
fistpll
mov
repz
into
jecxz
into
iret
mov
or
mov
xchg
mov
pop
jl
or
xchg
pop
cltd
repnz
cs
in
dec
inc
in
jp
and
xchg
icebp
insb
xor
sbb
roll
xor
jns
sub
and
add
push
sbb
movb
or
ljmp
loop
fadd
mov
or
cli
and
loope
lret
xchg
mov
or
mov
daa
sbb
mov
cmp
add
mov
and
mov
addb
pop
lea
sbb
inc
add
shll
jl
hlt
push
mov
jle
inc
pop
add
jmp
mov
jp
clc
xchg
adc
das
sub
leave
xchg
and
mov
or
testb
add
cld
iret
adc
cmp
decl
dec
test
add
mov
negb
jmp
ret
pop
dec
cli
and
test
pop
push
pop
addr16
jno
or
orb
push
push
mov
pop
or
testb
add
fwait
mov
push
adc
inc
imul
inc
test
lret
into
inc
xor
std
das
mov
pop
jno
testl
add
je
mov
jb
push
push
mov
mov
jg
inc
pushf
push
push
insl
push
xor
jo
or
pop
adc
cmp
xchg
sub
add
or
mov
xor
dec
xor
pop
lods
push
push
int3
cld
inc
outsl
jmp
adc
ret
fs
jo
mov
imul
pop
daa
fs
push
adc
jns
imul
push
outsb
cmp
or
push
addb
mov
push
outsb
fwait
adcb
ret
pop
push
shll
xor
lahf
dec
push
rclb
xchg
mov
testl
inc
dec
clc
mov
fnstsw
inc
jae
jnp
ret
lea
cmp
test
sbb
test
add
dec
push
call
add
push
and
ficomps
mov
jle
sahf
add
lods
or
jns
jnp
sbb
mov
cmpsb
lret
mov
call
pop
das
xchg
jno
imul
sbb
or
call
inc
loop
pop
sub
test
mov
and
out
xchg
and
movsb
jg
xor
mov
xchg
sti
clc
cmp
push
out
mov
movsb
int
scas
and
nop
dec
aas
cmp
rclb
inc
cmp
xor
xchg
or
add
xchg
sbb
daa
cmp
push
insl
dec
mov
fs
je
xor
cli
inc
jbe
inc
icebp
lea
test
inc
push
jge
notl
sub
sbb
incb
call
leave
adc
or
push
or
pop
int3
cmp
sub
lcall
push
cmp
push
add
popa
fcompl
movsb
les
mov
in
inc
push
cmp
adc
cmc
cmp
or
sub
aam
pop
and
sbb
adc
add
mov
mov
imul
xor
mov
adc
hlt
cltd
lahf
out
pop
popf
imul
cmpsl
icebp
inc
or
mov
dec
add
add
lret
sbb
adc
das
jge
adc
adc
sbb
mov
pop
pop
dec
rcl
xchg
jb
mov
mov
rcl
jp
inc
sbb
mov
popa
adc
pop
jne
jp
push
andb
cli
mov
push
negb
movsb
xchg
and
es
mov
sbb
push
sbb
mov
lods
dec
add
testl
out
fidivrl
ljmp
ret
mov
pop
push
lock
dec
xchg
jnp
lret
or
bound
mov
jl
pop
or
call
cwtl
and
das
push
sbb
pop
add
test
add
rorl
popf
or
push
andb
lea
dec
jg
das
lea
imul
je
lds
and
push
in
pop
or
mulb
ret
pop
xchg
sbb
shll
in
ss
pop
push
leave
sub
add
call
push
int3
and
and
mov
xchg
push
pop
mov
and
fstps
xchg
add
or
push
xor
jmp
xchg
or
pop
sbb
or
sub
or
inc
lds
adc
xor
cltd
sbb
lock
pop
push
rorl
or
pop
or
aam
loopne
sub
xchg
loopne
es
cmp
adc
lret
out
leave
push
int3
sahf
into
push
sub
mov
xor
add
mov
push
inc
inc
ret
aas
adc
push
icebp
cld
mov
icebp
pop
dec
sub
mov
lock
aas
inc
repz
and
fldcw
add
inc
cld
andl
enter
or
lcall
adc
cwtl
jns
adc
jmp
call
fistpll
and
cwtl
es
and
lds
or
mov
push
mov
cmp
fmull
jmp
or
stos
add
addb
and
xor
pop
out
jmp
or
loop
push
pop
pop
mov
pop
xor
sub
nop
hlt
dec
jae
push
or
adc
cmp
xor
mov
pop
adc
mulb
add
bound
aas
and
sarb
loop
pop
aas
and
je,pn
xor
xchg
mov
test
pop
mov
push
mov
push
pop
sbb
pop
mov
adcb
jo
call
in
bnd
pusha
nop
andb
push
rcrl
xchg
mov
loop
adc
lds
pop
cmp
mov
and
inc
mov
sub
adc
mov
stc
mov
hlt
push
and
inc
inc
pop
daa
xor
pushf
clc
int3
je
or
ljmp
les
sbb
lock
inc
xlat
inc
ja
or
fcmovnu
movsl
pop
dec
mov
xchg
pop
dec
popl
and
dec
mov
xor
jp
js
dec
sbb
fs
add
and
xchg
xchg
clc
dec
xor
adc
cs
inc
add
adc
clc
or
jmp
and
pop
mov
jbe
daa
xlat
and
je
clc
or
or
and
sub
cmc
nop
fildll
jb
push
adc
dec
les
add
loop
or
lret
or
or
xor
iret
mov
dec
fisttps
repnz
ds
rclb
stos
mov
and
loop
jl
scas
shrl
lds
sti
mov
les
xchg
cmc
sub
pop
mov
mov
dec
cmpsl
or
pop
mov
dec
repz
or
data16
mov
xor
mov
orl
loope
stc
add
fnstsw
dec
faddp
or
pop
sti
xor
push
sbb
je
xor
aas
outsb
adc
inc
cmp
out
fcoml
call
lret
sub
mov
rclb
jne
sbb
mov
dec
ds
outsl
sbb
push
cmc
or
xor
pop
movsl
lock
dec
and
scas
sub
pop
in
and
fst
or
inc
sub
lock
jge
mov
enter
enter
inc
mov
movsb
adc
test
jl
fldenv
pop
mov
dec
icebp
inc
loopne
inc
in
rcl
out
scas
adc
mov
fsubrl
push
dec
js
cwtl
enter
jbe
aam
pusha
fcom
and
push
xchg
nopl
inc
and
mov
cmp
inc
dec
push
scas
jbe
push
push
jo
fs
mov
scas
jbe
push
dec
cmc
cmp
adc
in
dec
and
inc
jo
lahf
inc
jne
jnp
and
cmp
push
or
rcrl
aas
sbb
dec
loope
lds
dec
mov
add
cmp
jl
xor
scas
cmp
adc
testb
jne
push
jb
push
cmp
xchg
xchg
stos
insb
adc
jbe
push
mov
xor
jmp
jae
repz
mov
push
or
mov
mov
adc
xor
cmp
jae
popf
or
inc
push
shld
shl
int
rcr
cld
loope
hlt
loop
icebp
cs
iret
dec
imul
pop
inc
mov
add
xor
push
cmpl
dec
inc
shl
rcl
push
cmp
repz
sub
adc
pop
aaa
negb
je
decl
shll
loopne
psrlq
jmp
movnti
xchg
out
daa
and
rcll
ss
rclb
inc
or
call
inc
push
ret
pushf
jmp
xorl
aaa
cwtl
outsb
xor
mov
inc
and
paddsb
leave
cmc
push
or
jne
push
cmp
es
mov
or
cmp
dec
pop
mov
adc
icebp
imul
add
adc
inc
cmp
je
xor
in
sub
push
hlt
cwtl
and
mov
mov
inc
adc
mov
push
aas
mov
popf
mov
jp
movsb
rclb
add
andb
xchg
or
adc
xchg
pop
xor
and
enter
add
ds
jns
mov
das
xlat
sbb
es
mov
pusha
imul
js
stos
or
insb
inc
lea
push
daa
enter
mov
mov
test
cs
inc
mov
add
sbb
imul
adc
sub
inc
pop
xchg
imul
xor
out
loopne
mov
shrb
or
jl
pop
pop
cmp
mov
jne
jecxz
pop
cmp
and
add
mov
adc
inc
repz
inc
adc
sub
neg
sbb
nop
xchg
je
stos
mov
push
test
push
insb
lods
xor
cmp
add
scas
and
add
pop
shlb
sbb
adc
std
inc
mov
pop
es
mov
or
iretw
sub
adc
adc
and
jne
adc
adc
cltd
sbb
or
push
jmp
adc
push
adc
add
pusha
add
mov
push
and
out
and
or
sub
adc
cltd
sbb
or
mov
mov
or
inc
pop
lds
and
fnsave
add
xchg
or
insl
shll
nop
pop
aaa
adc
or
inc
jnp
pop
mov
aaa
or
cmp
add
jl
js
sub
jle
ret
jns
cmp
jl
adc
repnz
xor
xchg
mov
jg
add
adc
push
daa
push
fstl
rdpmc
leave
subb
shll
push
inc
pushf
sbb
mov
adc
les
pop
sbb
andl
adc
pop
push
mov
cs
movsb
or
or
insl
mov
sar
stc
sbb
mov
pop
cltd
testl
push
add
sub
jle
cmc
sub
cmpsl
stc
sub
or
and
xor
sbb
sarb
push
popa
push
enter
cmp
jle
sub
pop
push
sbb
rorl
jg
add
jge
addl
es
and
sub
mov
mov
sub
mov
std
mov
xor
movsb
sub
push
add
mov
add
mov
or
mov
push
mov
and
out
push
push
push
scas
or
cld
push
movsb
mov
mov
lock
not
and
or
mov
mov
fldcw
stos
fs
xchg
sbb
push
mov
cmp
sbb
das
push
hlt
or
xchg
pop
adc
sbb
or
push
pushf
pop
loopne
adc
add
dec
add
jle
add
ror
push
sbb
sarl
jge
or
mov
mov
adc
adc
daa
inc
iret
mov
inc
inc
stos
lds
jo
aas
pop
je
cmp
sbb
dec
pusha
outsb
pop
pop
test
adc
sarb
mov
sbbb
inc
cwtl
jl
adc
add
and
cmc
and
and
mov
lret
sbb
adc
gs
or
dec
xchg
pop
scas
sbb
dec
push
jne
pop
or
ss
ret
push
andl
leave
dec
adc
xor
negb
and
bound
std
inc
pop
sub
and
aas
shl
add
test
jne
inc
cli
incb
add
lea
or
xchg
push
iret
sbb
pop
and
mov
dec
loope
xchg
jbe
dec
mov
dec
test
lea
cs
pop
push
movsb
pop
shr
ds
lods
push
dec
cmp
das
in
jne
fisubrs
leave
push
sbb
icebp
out
repz
xor
iret
ret
pop
cltd
cmpsb
mov
enter
sbb
aad
mov
cmp
pop
mov
or
push
adc
adc
pop
pop
mov
dec
test
push
cld
lcall
sub
and
inc
clc
inc
cmp
jle
push
ljmp
enter
dec
stos
test
std
add
mov
cmp
add
ret
and
mov
add
or
adc
scas
jb
or
iret
sub
test
mov
test
cmp
and
lods
pop
pop
mov
sub
mov
push
mov
call
pop
cmpsb
imul
mov
out
mov
cwtl
hlt
mov
imull
or
cmpb
jl
scas
ret
pusha
roll
lahf
xchg
incb
sbb
sub
jns
mov
aad
icebp
nop
ljmp
pushf
andb
or
push
add
loope
mov
and
cmp
sub
push
sbb
shl
sti
add
mov
cld
mov
xor
stos
adc
scas
mov
cmp
es
fsubl
push
cmc
add
jmp
cmc
xor
enter
and
adc
adc
inc
add
dec
popa
icebp
or
sbb
cmp
or
jg
sub
sbb
jbe
adc
hlt
scas
xchg
dec
and
std
lds
xchg
movsl
pop
and
cwtl
sarl
cmp
fldcw
push
pop
push
mov
mul
push
adc
mov
push
mov
pop
andb
and
repz
inc
sahf
cmp
adc
or
or
xchg
ljmp
movsb
cs
clc
mov
sbb
and
jne
add
rol
mov
adc
lahf
fbstp
sub
xor
insb
dec
and
add
push
mov
adc
and
sub
les
jp
cmp
in
push
add
movb
test
jns
dec
pop
in
mov
fisubl
mov
pop
or
or
test
jl
mov
cmp
xchg
jp
and
cmc
incb
incl
adcb
call
scas
shrb
ljmp
push
push
popf
cmp
pop
jmp
aaa
shrb
sahf
inc
and
inc
mov
movsl
pop
xor
sti
or
xchg
jl
xchg
add
or
mov
sahf
or
flds
sbb
pop
jbe
jmp
inc
push
and
ljmp
dec
adc
icebp
and
mov
fisubrs
cmp
mov
cmp
aam
pop
adc
cmpb
frstor
imul
adc
pop
jge
subb
es
dec
inc
add
or
mov
loop
fldl
test
cmp
dec
lret
sub
add
fcmovb
jmp
or
lea
adc
loopne
xchg
lret
jmp
push
lcall
call
adc
loope
mov
test
mov
dec
xor
lahf
les
sbb
push
popa
cld
scas
inc
roll
jne
ds
out
test
cmp
popf
cmc
ss
addr16
cmc
nop
pop
push
imul
adc
jo
mov
fstl
dec
cltd
or
call
xlat
lods
fwait
repnz
add
cltd
add
add
push
adc
scas
mov
out
pop
xor
test
xor
push
ja
in
push
lods
cld
pop
inc
ja
jmp
aas
adc
mov
add
cs
sbb
scas
mov
es
jg
addl
mov
lds
jno
outsl
out
iret
jne
jb
sbb
dec
test
das
bound
jmp
ffreep
mov
jp
lods
movsl
push
mov
push
mov
push
mov
xchg
pop
lahf
fcomi
adc
testb
mov
adc
movsl
jg
popa
jmp
adc
pop
stos
and
xor
call
inc
or
or
mov
scas
mov
addl
jno
nop
adc
idivb
enter
inc
pop
xchg
xorb
call
mov
or
nop
xor
cs
aad
mov
std
inc
lea
cs
cltd
data16
mov
xor
add
ds
push
leave
mov
dec
xchg
jmp
fyl2xp1
pop
add
jne
jmp
mov
lods
dec
enter
je
test
inc
jge
in
inc
adc
push
leave
loop
aad
hlt
mov
xchg
dec
stos
roll
mulb
dec
adc
out
aam
dec
adc
and
jmp
mov
in
inc
cmpl
mov
fimull
push
je
movsb
dec
sbb
rcrl
push
add
xchg
push
adc
je
jmp
ds
jg
pop
bound
das
wrmsr
nop
pop
cmp
pop
xor
and
jne
push
push
sub
in
mov
cmp
fstps
repz
mov
rdmsr
cmp
jb
or
jae
scas
add
or
pushf
ret
dec
ljmp
cmpsb
cmp
or
push
lds
call
icebp
inc
or
divl
xor
and
gs
xor
js
in
into
add
cld
cmpsl
pop
xor
push
js
pop
icebp
xlat
sbb
iret
jo
scas
ljmp
ljmp
gs
repnz
or
out
jmp
sbb
sbb
ljmp
pop
imull
adc
lahf
xor
adc
test
add
roll
jbe
push
sub
xchg
repz
lea
movsl
aas
stc
mov
jo
adc
push
or
add
gs
jle
les
insl
mov
loope
iret
inc
sbb
cmp
sarl
cmp
shll
test
push
pop
fsubrp
mov
cmp
std
call
jae
incb
mov
mov
adc
mov
mov
loop
pop
leave
orb
les
mov
xor
out
movsb
fadds
pushf
mov
rcrb
fsubrp
imul
loopne
aam
rclb
in
clc
jg
rcrb
inc
pop
and
or
iret
rolb
inc
jmp
add
pop
sub
or
daa
xchg
pop
and
adc
lock
mov
sti
xor
pop
cmp
push
cs
cld
dec
fstps
add
mov
dec
jp
push
aam
inc
aam
pop
mov
bound
pop
jmp
xchg
pop
cmp
and
sahf
mov
jl
movsl
jle
movsb
dec
xchg
jl
dec
and
aad
add
rclb
inc
jle
inc
and
arpl
xor
jb
adc
jmp
loope
loope
mov
fs
push
xchg
lcall
xchg
sbb
mov
adc
mov
mov
sahf
ljmp
fdivl
jp
dec
pop
or
jl
add
jae
pop
hlt
cmp
xlat
loop
imull
icebp
sub
addr16
add
adc
jo
fdivrs
or
sub
repz
popf
sbb
inc
sbb
adc
mov
and
or
inc
jmp
shr
popa
mov
shrl
daa
cmpsb
mov
dec
decb
inc
cmp
mov
outsb
dec
add
push
jmp
sub
orl
scas
push
or
jmp
sub
and
push
pop
dec
jmp
xorb
roll
data16
mov
shlb
mov
adcl
pop
pop
xor
mov
or
movl
xchg
filds
outsb
or
divb
icebp
in
lea
mov
out
cmp
jg
addr16
mov
dec
loop
xor
dec
lret
lds
jle
movsb
and
or
pop
cmp
test
adc
add
shrl
xor
jmp
movsb
adc
inc
jbe
cmp
scas
mov
sub
mov
cli
movsb
sbb
das
xor
ficompl
sbb
fadds
dec
sub
loopne
xor
sbb
movntps
jle
cmp
xor
movsl
negl
aam
gs
xor
in
mov
les
add
pop
cmp
pop
gs
sarb
lret
jge
bound
sahf
lea
xchg
ret
or
sti
jmp
mov
push
dec
outsl
notb
xchg
add
dec
adc
pop
pop
sbb
jecxz
pop
mov
xor
loopne
inc
or
xchg
in
movsl
mov
iret
out
or
or
mov
adc
add
and
out
add
dec
sub
data16
xlat
inc
repnz
out
add
mov
cwtl
dec
mov
push
pop
push
and
or
mov
adc
and
dec
ljmp
out
inc
sti
out
dec
aas
std
ror
pop
add
add
push
jp
or
shlb
push
push
repnz
mov
add
add
jmp
rcl
mov
jo,pn
std
cs
movq
lret
sub
sti
push
jmp
xchg
push
je
and
sbb
mov
sbb
and
xor
and
ja
pop
xchg
roll
outsb
shrl
lods
sbb
dec
push
orl
xchg
iret
mov
jmp
adc
repnz
push
or
sbb
or
inc
pop
push
cli
sbb
jge
cmpsl
mov
repnz
mov
jne
inc
repnz
cwtl
cmp
inc
test
test
fldl
cmpw
dec
jb
and
inc
and
dec
fstl
add
nop
xor
jge
xchg
insl
add
stc
jg
jmp
jge
mov
pop
xchg
jne
sub
sti
aad
sbbl
pop
clc
sarb
sbb
and
pop
notl
fiadds
or
dec
ss
repz
fisubl
jle
pusha
cli
adc
jne
lock
adc
mov
clc
pushf
push
outsl
sub
or
divl
push
sti
cmp
mov
imul
or
mov
jne
mov
jmp
cwtl
cmp
add
cmp
jb
setb
icebp
push
mov
pushw
ret
sub
mov
add
andb
mov
cltd
popa
or
xor
jnp
pop
dec
flds
and
andb
call
inc
out
or
pop
push
stos
push
add
repz
sbb
xor
loope
jmp
cmpl
adc
mov
and
add
xchg
lds
jmp
dec
cli
lods
jnp
sub
fcomi
fcmovne
jbe
int
jp
push
mov
mov
aam
mov
out
outsb
mov
xchg
xor
jg
pop
sbb
push
call
sbb
call
push
fstl
jbe
sbb
enter
ds
push
inc
loop
stos
and
xchg
pop
inc
mov
xor
and
out
arpl
adc
mov
hlt
icebp
adc
mov
pop
data16
dec
or
idivl
es
loopne
stc
mov
clc
and
nop
lret
xchg
sub
cmp
add
add
jae
cmp
psubd
mov
mov
jmp
mov
ljmp
pop
test
push
mov
xchg
jg
or
outsl
pop
and
inc
pop
push
adcb
addr16
cmp
push
add
fadds
jmp
movsl
mov
inc
add
xchg
pop
lea
jle
or
daa
xchg
jmp
call
xchg
push
jbe
xor
xlat
cwtl
push
push
decl
xor
fdivp
outsb
rorl
pop
movsl
mov
insl
hlt
xchg
add
sbb
adc
add
xchg
add
mov
adc
and
lds
xor
or
movsb
pop
push
cmp
inc
push
int
popa
mov
add
mov
cmp
fmull
mov
adc
xchg
ljmp
cmp
scas
mov
jnp
or
or
inc
fdivrp
fldcw
fimull
sbb
out
inc
inc
push
xor
rcr
push
sub
push
lret
mov
aam
hlt
loop
push
xor
sti
jge
or
xor
push
adc
or
push
push
fstps
jmp
neg
call
mov
bound
andl
push
cli
rclb
rcrl
movsb
pop
jmp
pusha
cmp
add
cmpb
xchg
jp
pop
xchg
adc
mov
and
push
mov
xchg
add
js
pusha
cmpsb
je
daa
aad
cmpl
test
orb
push
or
dec
xchg
push
and
jb
mov
xchg
ret
mov
sbb
xor
pop
adc
jne
push
mov
and
pop
or
adc
scas
cmp
cmp
cvtps2pd
and
decl
cmp
sub
xchg
call
and
cmp
dec
sub
push
pop
or
call
xchg
rol
into
fisubs
dec
ret
and
scas
mov
arpl
je
cmpsl
xor
scas
lea
gs
daa
sbb
sub
insb
cmpl
les
adc
mov
sbb
jb
ds
pop
sub
and
mov
or
cli
lret
lods
inc
mov
add
movsl
xchg
mov
in
bound
or
xchg
mov
xchg
jmp
data16
push
scas
lret
or
test
dec
xchg
adc
push
les
ficomps
push
inc
fisttpl
stos
push
pushf
mov
xchg
dec
mov
push
mov
xor
jns
in
inc
je
jp
loopne
sub
leave
push
inc
adc
mov
fcoms
adc
popa
push
sbb
lea
sub
rolb
testb
jge
push
popa
call
call
clc
mov
les
pop
dec
pop
sete
jmp
xchg
pop
mov
fwait
hlt
or
jne
mov
sbb
cmp
call
xchg
das
ds
mov
filds
push
call
inc
cmp
mov
xor
jne
aaa
inc
mov
int3
ss
mov
sub
inc
shl
dec
sahf
test
or
inc
cmpl
ds
orb
xor
cmp
jnp
inc
adc
inc
mov
in
imul
jg
xor
jmp
xor
loope
lea
cwtl
push
adc
call
lret
inc
push
cli
inc
rcll
fs
loop
sbb
movsb
mov
fisubrs
dec
push
fstpl
cmpsb
aam
mov
xor
call
cld
sub
enter
clc
lcall
add
and
shrl
add
xchg
aaa
call
andb
js
xchg
mov
sub
push
and
xchg
clc
cmp
add
cmc
andl
and
xor
xlat
into
sub
cs
inc
sub
adc
sub
test
xchg
cmpsl
pop
ret
and
lea
mov
jp
mov
add
testb
jne
out
mov
adc
fbld
out
pushf
xchg
mov
pop
xorl
inc
pop
mov
inc
jo
setge
jns
popf
hlt
mov
xlat
add
xor
mov
cltd
aas
push
lret
cs
cli
shl
ret
cwtl
ds
jmp
and
cmpsb
push
adc
inc
test
pop
sahf
lea
decl
pop
sub
sub
aad
clc
popa
pop
rcrl
test
outsl
dec
loop
adc
jb
or
jg
stc
cmpsl
push
shl
jmp
mov
sub
lock
fdivrl
or
mov
or
mov
cs
and
inc
cmp
inc
repnz
cmp
loop
add
add
xchg
dec
cmp
adc
cmp
mov
inc
daa
test
fadds
jns
lcall
adc
fisubl
scas
movsl
movsb
loop,pt
mov
data16
sti
pop
ja
test
andl
and
sbb
pop
and
inc
loope
shlb
in
aam
push
add
lods
cmp
into
daa
jmp
les
movsb
clc
insb
adc
cli
push
in
xchg
dec
mov
sbb
pop
inc
repnz
sbb
push
add
mov
ret
sub
pop
imull
shlb
rclb
push
jp
dec
jmp
add
icebp
aad
mov
data16
xor
sarl
or
lods
lock
jno
inc
adc
insb
or
or
fsubs
and
icebp
xchg
jns
inc
mov
adc
mov
push
xchg
mov
pushf
outsl
jb
sbb
add
outsl
daa
clc
jl
movsb
adc
mov
push
cmp
jne
push
add
xor
mov
test
or
ja
xorb
daa
imul
idivb
scas
repnz
mov
add
push
leave
test
roll
cmp
leave
mov
or
mov
jns
enter
push
ja
insb
jno
idivb
add
je
push
push
xchg
push
sub
dec
call
leave
xchg
adc
push
lret
xchg
push
sbb
lock
pusha
bound
cmp
push
add
cs
imul
mov
add
sbb
das
test
xchg
cmp
mov
xlat
xchg
sub
sar
ficomps
or
dec
nop
adc
leave
push
out
leave
dec
pusha
inc
and
dec
mov
push
call
sub
insb
jmp
or
pop
push
dec
mov
mov
mov
push
sbb
dec
add
mov
fs
sbb
inc
sub
push
hlt
push
rolb
cs
jb
sbb
pop
dec
mov
jge
and
push
ret
pusha
int
das
mov
enter
mov
pop
lret
in
imul
lea
add
shlb
pop
jmp
das
mov
xchg
mov
push
cltd
xor
jmp
lea
out
dec
pop
mov
push
outsb
or
sbb
jmp
inc
cmp
sbb
adc
xchg
mov
push
dec
adc
call
imul
add
mov
