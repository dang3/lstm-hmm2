mov
xchg
in
lret
js
add
loop
mov
stc
in
test
sub
lock
loop
movsl
xchg
cmpl
bound
xlat
adc
jnp
dec
je
jne
or
jl
xchg
mov
gs
cmp
cwtl
hlt
rcrl
mov
adc
pop
or
lods
outsl
js
fcoml
cmp
and
shl
cli
push
push
adc
cmp
fsts
repz
out
cwtl
test
lahf
xchg
into
femms
sbb
into
pop
sub
cmp
ja
scas
sub
mov
stos
jecxz
sbb
nop
sbb
mov
jle
popa
adc
imul
cs
sub
sbb
push
stc
fistl
std
aad
popf
xlat
inc
xor
daa
iret
hlt
scas
add
jecxz
aam
movsl
jge
icebp
cltd
xchg
or
pop
cmp
mov
and
out
into
mov
into
addr16
stos
arpl
jne
sub
data16
test
in
pop
xchg
fisubrs
pop
inc
fbstp
inc
insl
sub
push
dec
addr16
orb
xchg
out
jnp
cltd
sti
mov
in
push
xor
fmull
icebp
ret
lret
popf
mov
imul
jmp
iret
adc
dec
mov
xchg
sbb
xor
lods
jecxz
jge
cltd
ljmp
dec
invd
jne
test
or
fiadds
ffree
sbb
jle
push
mov
pop
mov
pusha
lea
mov
sbb
aaa
aaa
adc
arpl
and
jnp
iret
movntps
sub
popa
popa
insb
mov
push
xlat
xor
fcompl
lds
sub
push
dec
sbb
adc
or
push
into
dec
and
or
orb
mov
dec
mov
cld
pushf
mov
mov
fiadds
outsb
loop
arpl
cld
negl
adc
notb
or
push
and
aad
cmpsl
jne
pop
loop
pop
inc
mov
xchg
xor
aad
movsb
dec
je
inc
in
outsl
call
int
fwait
push
nop
sbb
mov
pop
lds
out
push
divb
stos
shrb
xor
outsb
lret
xchg
mov
pop
push
sbb
mov
and
cmc
icebp
mov
arpl
ret
mov
xchg
xor
pop
dec
popf
in
fcom
pop
push
xchg
xchg
and
test
xchg
aad
std
test
ljmp
cmpsl
in
dec
in
aas
aam
aad
mov
pop
or
pop
add
jbe
stc
cld
cmp
xchg
jb,pn
jb
scas
sub
xor
iret
je
and
lods
popf
cmp
cmp
inc
jge
ret
lods
mov
or
aas
sbb
push
fidivl
pusha
test
mov
fs
xlat
push
jl
mov
icebp
nop
inc
mov
xchg
pop
neg
pop
int
push
or
push
movsb
je
mov
je
push
loopne
les
pop
les
fnstenv
in
cwtl
mov
daa
out
jmp
or
fnsave
fldt
popf
movaps
fldt
fisubl
clc
lcall
and
or
pushf
cmp
out
or
cmp
insb
xchg
xor
addr16
pop
lahf
push
mov
ret
cld
fdivrs
decb
mov
ljmp
fists
adc
push
push
dec
or
bound
in
inc
jge
inc
aaa
and
jge
mov
and
and
data16
push
sbb
xchg
aam
xchg
stos
data16
stc
add
test
nop
sbb
pop
pop
lea
ja
xchg
imul
outsb
push
lods
dec
outsl
mov
jecxz
and
mov
inc
mov
out
outsl
lcall
movsl
xlat
aad
sbb
fdivl
movsb
xlat
rorb
scas
or
xchg
mov
int3
xchg
push
addr16
push
cs
mov
sub
sbb
cmp
mov
xor
pop
test
jmp
xlat
insl
adc
xor
movsl
fidivrl
mov
mov
roll
lock
test
push
jns
inc
out
shl
cmp
insb
enter
in
roll
out
mov
sub
push
rcrl
ds
sbb
mov
xchg
xlat
repnz
popf
lahf
mov
popf
jo
jecxz
sbb
push
jecxz
je
dec
aaa
imul
sub
stos
ret
sarb
cltd
scas
xor
pop
data16
push
sub
imul
ja
negb
mov
insb
cmp
inc
add
fs
cmp
lret
xor
push
xchg
jo
movsl
push
clc
mov
pop
cmp
mov
xor
push
icebp
xor
data16
test
ja
lahf
sbb
adc
push
cmp
imul
aam
or
loop
lock
add
add
sar
lea
lea
sub
jb
jp
add
push
add
pop
xchg
mov
xchg
push
pop
or
clc
add
call
cmc
nop
test
push
pop
cmp
rol
push
push
pop
pop
jp
or
test
mov
test
stc
push
push
cltd
pop
pop
jp
nop
push
push
push
add
pop
pop
pop
or
jne
jle
push
add
pop
test
rol
call
push
push
mov
pop
pop
jle
and
and
nop
movl
push
push
jno
or
pop
pop
sub
push
and
pop
or
mov
movl
jg
je
shl
jno
cmp
push
push
jge
jns
inc
dec
pop
pop
push
popl
push
mov
pop
or
cld
clc
clc
stc
nop
jmp
test
jg
push
push
pop
pop
jne
push
push
mov
pop
pop
test
nop
jnp
and
lea
cld
dec
inc
push
movzbl
sub
push
jb
push
sub
pop
pop
je
test
push
push
pop
pop
push
jl
shl
pop
cmc
push
sub
pop
fnop
nop
loop
pop
clc
stc
clc
or
nop
jmp
jmp
call
cmc
push
push
push
js
inc
dec
pop
pop
pop
cmp
jo
js
and
push
mov
pop
jl
rol
dec
inc
rol
xor
shr
pop
jle
add
jle
jnp
test
jmp
pop
jb
xchg
adc
adc
jb
mov
pushf
std
imul
rcll
pop
push
jno
rol
pop
push
ja
sar
pop
push
sub
pop
push
xchg
pop
push
pop
and
push
test
pop
push
mov
pop
jns
jbe
test
or
lea
cmc
cmc
push
add
push
pop
pop
push
call
push
imul
jecxz
mov
adc
pusha
and
lods
and
xchg
pop
xor
jnp
inc
xchg
jb
add
aas
xchg
or
and
jae
pop
pop
pop
pushl
pop
add
nop
fnop
ror
xor
nop
testl
jne
jmp
loop
jecxz
xchg
ss
out
filds
adc
xchg
in
int
adc
mov
cmp
cmpsl
shlb
out
inc
add
push
add
pop
jo
jbe
push
test
pop
loop
jecxz
out
jecxz
test
into
push
sbb
pop
out
pop
int
imull
scas
fisubrl
add
xor
mov
cmc
cld
push
mov
push
xor
pop
pop
loop
jecxz
fucomip
jmp
loope
rcll
mov
fldenv
out
sbb
shlb
sub
jns
xor
lcall
pop
xor
mov
cs
inc
loop
jecxz
cmc
push
inc
push
call
xlat
push
subl
sub
mov
shlb
decb
adc
mov
push
mov
push
xchg
movsl
xchg
mov
pop
jge
push
push
jnp
clc
pop
pop
push
rol
pop
loop
jecxz
and
mov
jno
push
push
mov
pop
pop
pop
or
rol
jle
push
not
not
pop
push
dec
pop
push
push
pop
add
pop
push
mov
pop
cmp
or
add
push
or
pop
jae
and
clc
dec
jne
je
push
js
cmp
pop
ret
jmp
imull
cld
call
pop
add
iret
lea
push
xchg
jb
dec
insl
pop
pop
movl
pop
sub
xchg
hlt
dec
pop
xor
stos
fisubrs
mov
pop
lahf
inc
scas
or
dec
sub
pop
jnp
fidivs
jnp
push
sub
out
notb
inc
xchg
hlt
mov
int
mov
sub
mov
jl
mov
pop
nop
cmc
xchg
dec
cmp
push
mov
xchg
fildll
into
ss
aad
jb
in
pop
adc
mov
pop
cmp
sbb
rolb
add
mov
repnz
mov
mov
cltd
sahf
stos
or
stos
pop
lret
pop
in
pop
push
push
adc
push
xchg
sbb
adcl
mov
push
stos
adc
pushf
out
scas
call
stos
xlat
das
xor
sti
dec
ss
call
sub
rclb
stos
imul
outsl
mov
data16
inc
stos
mov
addr16
dec
pop
jnp
inc
sub
fs
add
insb
pop
jg
add
xchg
dec
adc
cs
push
jp
push
adc
jl
jnp
jne
cmp
icebp
cmp
divb
ficoml
push
pop
fsts
fpatan
into
dec
hlt
daa
dec
push
out
sahf
out
fwait
pop
sub
pop
mov
test
sti
pop
cmp
lret
adcb
lods
xchg
add
fwait
addr16
aaa
xor
jmp
cmp
push
loope
add
sahf
or
xchg
mov
or
jns
lods
iret
push
mov
mov
ja
pop
js
insb
pop
dec
or
and
divl
jbe
push
mov
mov
lret
dec
cmp
loope
shr
xchg
jp
pop
leave
mov
data16
repz
js
mov
in
sbb
sbb
incb
push
cmp
in
das
jno
push
inc
into
push
adc
cmp
add
jge
ret
flds
push
push
fcoms
iret
fdivrp
lcall
out
scas
loopne
aaa
dec
and
test
mov
cli
push
cmp
les
lahf
cltd
lods
lahf
xchg
jbe
xchg
into
fmuls
iret
bswap
inc
adc
add
mov
dec
inc
lahf
dec
outsb
dec
mov
into
pop
mov
ret
sub
lea
cmp
cmp
test
jge
in
jge
mov
add
fdivp
push
push
repnz
add
and
add
addl
inc
pop
movsb
mov
ds
jle
stos
jecxz
and
in
leave
pop
in
popl
arpl
stos
xchg
addr16
xor
addr16
sbb
into
push
adc
jl
jnp
mov
sub
cmp
mov
ficoml
dec
pop
fldl2t
int
repz
hlt
daa
out
sub
add
je
repnz
sbbb
pop
cmp
lahf
xchg
ds
iret
setbe
push
test
stc
inc
aam
jns
pop
outsl
into
inc
movsb
leave
pop
insb
nop
pop
sub
xlat
sub
pop
mov
cmp
or
js
hlt
mov
scas
sub
movsb
adc
and
stos
sarl
sahf
mov
lea
addl
inc
sahf
jo
pop
ds
ds
dec
mov
jecxz
and
in
xchg
pop
in
int3
bound
addr16
addr16
add
icebp
nop
dec
addr16
sbb
jo
push
push
adc
jl
jnp
mov
hlt
lock
pop
mov
fstps
pop
ficoml
dec
pop
fnstenv
dec
hlt
daa
mov
sub
int3
popf
out
lcall
mov
push
test
cli
pop
cmp
cmp
or
iret
punpckldq
popf
test
sbb
sbbl
fisttpl
outsb
into
adc
into
pop
cmp
xchg
shrl
push
and
cmpl
mov
ja
pop
js
insl
in
jge
cmp
scas
sub
jo
fdivp
in
push
repnz
popf
lods
popf
scas
and
sbbb
inc
jne
inc
pop
cmp
pop
ds
ds
push
mov
jecxz
and
in
popa
pop
in
cwtl
bound
addr16
xchg
addr16
int
icebp
nop
sbb
sbb
int
adc
jl
jnp
mov
shl
in
mov
fxam
pop
ficoml
dec
pop
flds
dec
hlt
daa
jg
sub
cwtl
popf
out
lret
pop
sub
mov
test
cli
pop
cmp
cmp
adc
into
cmp
iret
ucomiss
imul
dec
outsb
mov
outsb
into
into
pop
add
pop
sub
sub
icebp
lahf
push
cmp
cmpl
mov
ja
push
js
cmp
jge
push
repz
sub
cmp
fdivp
mov
lods
popf
jnp
sahf
mov
and
dec
icebp
inc
push
push
sub
mov
repnz
sub
fs
lret
jecxz
pop
sbb
nop
in
xchg
fidivl
stc
mov
inc
dec
movsb
popa
jge
ljmp
fnstcw
sahf
push
add
out
dec
mov
cmp
outsl
js
mov
out
test
fs
pop
cmpsb
push
xchg
or
lahf
cmc
pop
inc
dec
imul
lock
mov
int
aaa
or
sbb
push
xchg
fidivs
mov
or
das
push
nop
lahf
insl
pusha
int3
cmp
xorl
es
cs
lods
mov
fistl
or
push
test
je
out
and
fidivl
adc
cwtl
mov
scas
mov
sub
mov
int
adc
push
jmp
adc
aad
lcall
ret
call
and
sbb
je
js
lcall
insl
gs
nop
orl
repnz
scas
or
mov
and
pop
in
jns
test
mul
stos
xchg
out
stos
repz
dec
or
data16
sub
insb
push
mov
push
and
dec
ljmp
dec
sti
cmp
mov
out
dec
fwait
pop
test
movsl
out
xor
shrl
hlt
pop
movsb
jno
cs
fwait
and
fdivs
scas
shlb
sarl
leave
jne
fcomps
jo
bound
inc
aam
fs
pop
jge
test
or
pop
lret
sbb
or
test
xchg
sub
push
mov
add
popf
push
mov
cld
mov
mov
push
dec
jl
inc
cmp
and
out
loope
out
mov
or
xchg
or
and
pop
test
popf
sahf
jb
mov
jl
cli
ljmp
ficomps
xchg
orl
into
inc
push
push
push
adc
xchg
push
fisttps
movsb
stc
pusha
adc
lods
hlt
pop
fbld
std
add
mov
les
mov
testl
adc
xchg
sub
cmp
test
and
inc
inc
lea
movb
mov
add
cmp
mov
dec
xor
pop
adc
adc
xchg
pushl
push
fidivl
outsb
aad
bound
aam
inc
dec
pop
and
push
rcll
sub
in
dec
xchg
xchg
das
pop
adc
aaa
into
jns
cltd
or
mov
clc
dec
jns
test
jecxz
dec
mov
in
cmp
scas
mov
test
test
xchg
dec
xchg
mov
inc
movntps
dec
cmc
int3
xlat
loopne
or
xchg
dec
clc
xchg
mov
std
inc
scas
shlb
push
cmp
test
jae
negb
inc
sti
repnz
rclb
jecxz
add
cld
or
mov
loopne
lahf
mov
dec
inc
enter
xchg
adc
pop
push
sbb
test
ret
andb
push
add
cld
movsb
jmp
inc
jl
pushf
in
push
js
inc
and
mov
cltd
inc
pop
cmp
xor
scas
lret
data16
bnd
push
and
stc
ljmp
repnz
stos
inc
mov
fildll
mov
push
add
test
mov
xchg
jnp
adc
mov
mov
sub
inc
add
sbb
test
pop
xchg
jp
add
jb
shrl
fs
pop
test
div
jno
enter
cmpsb
pop
sbb
lods
push
add
jno
iret
sbb
mov
insb
addr16
sub
rcll
testl
into
iretw
cltd
cmp
insb
repz
sahf
lcall
fildl
popa
jmp
xchg
lds
loopne
movsl
std
leave
movsl
mov
inc
popa
mov
mov
mov
subl
iret
xchg
or
aam
rcrl
popf
imul
insb
bound
or
xor
mov
dec
and
xor
and
aaa
incb
cmpsl
outsl
pop
fcmovnb
lods
mov
pop
push
aad
inc
scas
imul
fwait
mov
dec
fdivr
bound
mov
ja
orl
jl
ret
jbe
mov
lret
outsl
mov
test
hlt
adc
jmp
sbb
mov
addr16
sub
aam
int
arpl
mov
fs
iret
sbb
stc
and
mov
adc
test
daa
repz
arpl
shl
sbb
mov
inc
sub
and
cmp
mov
fcmovb
clc
movsl
push
in
cmp
mov
cld
push
out
gs
ljmp
bound
xchg
sbb
adc
rol
sbb
lcall
push
pop
js
push
leave
add
and
inc
int
pop
mov
mov
xchg
cmp
dec
les
jmp
or
leave
push
jmp
adc
xchg
and
xor
leave
jmp
ret
divb
xchg
dec
mov
inc
dec
and
fisttps
mov
repnz
outsl
pop
push
sahf
sbb
mov
lods
std
pop
aad
mov
jne
lcall
test
fmuls
sub
inc
popa
les
repz
fld
pushf
pop
popa
icebp
iret
imul
cmpsl
fcomi
lret
incb
loopne
mov
int3
not
mov
add
in
xchg
inc
xchg
leave
movsl
mov
loope
cwtl
sbb
insl
sbb
out
xchg
add
mov
fldl
bnd
add
popa
lds
mov
jns
mov
je
inc
aam
adc
adc
mov
leave
std
lahf
inc
add
xchg
sub
and
scas
nop
pop
or
jl
lods
add
inc
inc
push
sub
xor
mov
test
in
std
iret
sahf
dec
sbb
pop
jge
xchg
jp
pop
fstps
sbb
ret
sahf
adc
adc
in
jge
sbb
fldcw
adc
and
mov
test
ja
ljmp
lock
dec
imul
nop
pop
test
adc
sbb
inc
rcll
loop
xchg
int
jle
pop
dec
push
stc
or
idivl
ljmp
pop
jnp
mov
dec
cltd
cli
or
cmc
cmp
xor
pop
mov
xlat
ss
pop
dec
int3
mov
xchg
lock
mov
cmc
inc
loopne
cmc
sbb
stos
clc
scas
mov
jo
movl
call
xor
jmp
xchg
int
imul
sti
sahf
mov
sub
and
leave
arpl
mov
dec
ds
fcoml
aam
addr16
pop
pop
add
and
pop
sbb
and
ficompl
clc
fidivs
mov
sub
and
xchg
shlb
hlt
cltd
jae
pop
daa
add
cmp
push
lods
inc
lods
loop
mov
lcall
push
test
pop
jp
aam
das
sub
mov
adc
loopne
xchg
mov
add
test
ljmp
or
pusha
add
fmull
sbb
add
sti
es
cwtl
or
lea
outsl
testb
rcr
test
jae
pop
lret
aad
imul
clc
jo
or
mov
lods
filds
xor
pushf
fld1
pop
outsb
xchg
jae
cmp
mov
xchg
sahf
lret
popf
jbe
loope
out
lahf
push
pop
lea
dec
lea
mov
dec
xor
cmc
pop
push
mov
pop
rclb
icebp
fs
jbe
test
rcr
sbb
add
cld
push
fwait
mov
or
push
cmp
mov
pop
sub
pop
std
xorb
xor
nop
mov
test
popf
sahf
cmp
xor
add
jecxz
push
or
xchg
push
jne
push
xor
sbb
es
jp
js
cltd
popa
nop
pop
sbb
and
jmp
inc
cmpsl
lcall
adc
mov
dec
sbb
dec
adc
dec
int
add
mov
push
cmpsl
outsl
leave
test
shrl
jb
mov
out
pop
inc
inc
ss
sub
jg
shr
add
inc
clc
adc
jae
test
and
mov
bound
cwtl
sub
je
jne
incl
hlt
lret
mov
test
sbb
cmp
scas
sub
lds
mov
cltd
je
jno
into
testl
jb
call
pop
cmpsl
andb
dec
add
cwtl
mov
shll
pop
cltd
mov
mov
add
fld
out
mov
jecxz
xchg
fisttpll
testb
aas
out
xor
push
push
mov
test
ret
test
lds
jmp
dec
push
shl
adc
insl
mov
inc
cmp
fldz
popf
jle
orb
adc
mov
clc
ja
mov
sub
repnz
ja
rorb
xchg
lea
adc
test
mov
fisubrs
orb
ret
push
xor
or
sbb
xor
pop
and
inc
pop
fisubrs
push
sub
and
enter
cmp
movsb
push
adc
or
lds
jne
mov
push
jg
mov
test
jb
imul
xchg
jge
leave
mov
and
pop
insl
sub
out
push
jl
pop
mov
xchg
ss
and
mov
aad
add
test
jbe
jg
xor
dec
cmc
cmp
pushf
cmp
repnz
mov
pop
sub
mov
xor
cli
lret
inc
dec
movsb
dec
pop
aad
popa
xor
pop
les
inc
cmp
stos
je
push
sub
inc
scas
push
mov
cmp
inc
addr16
test
jb
mov
loop
std
push
jnp
sub
mov
test
lock
push
mov
cmp
aad
daa
mov
push
adc
jne
fisttps
out
push
add
adc
cwtl
lds
dec
mov
vpsubusb
mov
mov
aas
je
popf
movsb
inc
push
and
incb
test
pop
rcll
rclb
dec
push
pop
jmp
pop
pop
mov
xor
xchg
jmp
or
sahf
inc
add
or
fstp
out
nop
pop
sbb
fadd
aad
dec
dec
stos
jmp
xchg
and
xchg
pop
popa
shrb
lds
lret
stos
lret
mov
divb
adc
pusha
test
adc
cmpsb
cmp
cmp
xchg
or
cmpsl
xor
addr16
sub
mov
mov
jg
mov
shll
into
xchg
mov
lret
or
inc
stc
fdivl
fsubp
es
push
or
sbb
sub
jbe
mulb
mov
aam
ret
xor
cmp
cmp
sbb
push
jl
dec
cmp
sbb
sbb
les
es
roll
bound
fdiv
fnstenv
adc
sub
fidivrs
lret
dec
mov
pop
jle
icebp
mov
cmp
sub
mov
out
insb
sbb
mov
cli
add
sub
cmp
jbe,pn
int3
cmp
in
in
sbb
or
call
stos
cmp
lods
lcall
aas
cmp
adc
mov
mov
sbb
push
xor
cmpsb
xorl
mov
push
cmc
xchg
lret
data16
je
mov
leave
xor
test
test
mov
mov
mov
out
mov
xchg
addr16
ds
jno
jmp
fs
stos
xchg
scas
lods
shlb
jle
sub
push
add
xacquire
lcall
or
mov
repz
sub
cmp
jb
xchg
cmpsb
addb
hlt
adc
mov
lahf
insl
cltd
arpl
movsl
adc
mov
add
xor
call
jecxz
add
gs
ret
int3
bound
in
push
mov
mov
mov
cltd
push
xchg
gs
jl
popw
xchg
mov
push
nop
in
push
pushf
fs
or
imul
add
adc
pop
mov
sbb
in
dec
enter
jmp
fisubl
cmp
mov
movsb
xor
jmp
popf
insl
xchg
arpl
leave
xchg
xchg
lret
sub
mov
jno
jnp
movsl
iret
xchg
aad
add
outsb
xchg
shrl
clc
sub
cmpl
std
cmp
les
fld
ljmp
sbb
xor
xchg
mov
sub
pushf
movsb
fsubrs
sbb
and
rclb
sbb
loop
jnp
jo
mov
jbe
inc
mov
sub
hlt
in
sti
mov
cmp
out
jg
xor
inc
decb
stos
loope
sub
fwait
mov
sbb
push
stos
mov
cli
call
test
sbb
clc
dec
mov
xchg
sbb
pop
add
loopne
jecxz
adc
cmp
sub
scas
jl
repnz
aaa
push
pop
xchg
clc
xchg
sbb
fcoms
aaa
cmp
scas
daa
pop
xor
pop
cmpsb
fdivl
push
and
bound
cmpsl
mov
test
cltd
push
loope
mov
dec
loopne
mov
cwtl
insb
inc
or
dec
adc
cmp
pop
clc
test
test
adc
ljmp
icebp
cmp
push
mov
push
inc
into
xchg
adc
out
mov
jge
fsubs
jns
adc
xchg
cmp
daa
fldln2
cmp
xchg
mov
or
jnp
adc
and
jl
mov
sbb
mov
movsb
out
dec
test
insb
fisttpll
movsb
or
in
fsubs
test
out
mov
mov
subb
mov
add
cmp
cmp
ja
ret
xchg
jo
inc
repnz
inc
xchg
add
jo
mov
xor
test
mov
and
sar
addr16
movsb
rcr
pop
xlat
cltd
rclb
mov
jp,pn
mov
mull
ljmp
stos
rolb
cmp
out
jl
push
shll
add
scas
int
in
aam
imul
out
in
inc
and
pop
enter
sub
xor
jg
imul
mov
dec
paddb
mov
cwtl
sbb
in
jg
test
or
nop
shrb
adc
outsl
fwait
sti
cmpsb
push
test
sub
inc
pop
sbbb
clc
mov
sbb
pop
cmp
mov
mov
mov
xchg
lods
inc
ds
call
and
dec
das
movsw
xor
sub
lahf
dec
lods
cmpsl
pop
mov
leave
mov
mov
test
or
mov
aam
sbb
loope
add
int
dec
movsb
add
push
cmp
sahf
and
mov
cltd
mov
cmp
add
xor
in
hlt
sarb
inc
icebp
aas
xchg
loope
loopne
cmp
icebp
test
jl
xor
push
mov
fisubrs
sahf
push
lock
dec
lds
inc
add
sub
sub
inc
and
dec
not
stc
out
inc
or
mov
sbb
ret
mov
out
mov
sub
jle
add
lock
rep
pop
dec
and
mov
jo
push
popf
adc
push
ficoms
jl
jecxz
inc
sbb
std
inc
pop
mov
jb
add
push
ss
mov
addr16
pop
in
test
idivb
dec
cmp
mov
xor
mov
jmp
pop
jl
fcmovu
cmp
or
push
sbb
pop
cmp
in
ret
scas
push
jo
jmp
jb
mov
xor
lea
scas
fwait
cmp
xchg
mov
xchg
dec
mov
jnp
jno
inc
gs
cmpsl
insb
stos
scas
jno
test
in
in
xor
mov
leave
xchg
pop
ficoms
rclb
cmovns
inc
mov
sarb
jns
mov
mov
xor
rcr
in
mov
push
movsb
jmp
mov
adc
mov
loop
aad
fcmovb
jo
mov
dec
hlt
bound
push
sbb
or
movsb
dec
push
popf
xor
mov
test
sub
xchg
es
mov
push
int3
cltd
pop
add
jmp
lret
mov
xchg
adc
enter
fisttpll
xorl
scas
xor
into
push
xlat
mov
out
pushf
inc
bound
bound
xlat
dec
cmp
fildll
jbe
js
daa
inc
enter
dec
push
xor
js
cmpsb
or
add
les
xor
cmpl
loop
xchg
into
arpl
and
mov
inc
inc
rorl
loop
or
jp
jo
in
mov
enter
gs
divl
in
sbb
jnp
dec
lret
cwtl
jns
push
mov
nop
xor
xchg
int
sbb
pop
sti
sbb
lods
dec
add
inc
add
cmp
xchg
ret
mov
shl
jl
cli
test
insl
mov
insl
mov
jl
or
or
cld
or
xchg
sbb
push
fcmovnu
push
xchg
addr16
jp
and
or
mov
mov
push
pusha
out
mov
cmp
sbb
adc
sub
push
sbbb
sti
xor
dec
gs
aam
inc
add
inc
and
push
imul
scas
cmpsb
leave
jns
pop
or
sub
push
jne
jmp
test
idivb
pop
sub
dec
cmp
cli
pop
aam
stos
inc
push
cwtl
ret
mov
push
jle
imul
lret
aad
cld
pushf
shrl
xor
or
lret
mov
mov
sbb
inc
sub
dec
pusha
xor
pusha
pop
pop
les
and
lret
push
out
sub
dec
aas
lcall
pop
jo
clc
outsb
cld
xchg
in
xchg
fnsave
js
dec
sbb
notl
cli
movsl
cmpsl
test
or
cmp
rorb
jne
dec
dec
in
xchg
push
adc
data16
mov
lea
adcl
add
jp
js
xor
push
lock
xor
sbb
dec
jnp
inc
lock
sbb
decb
jecxz
xor
jns
adcl
sti
mov
fnstenv
xor
fnstsw
in
adc
shl
jnp
in
mov
les
adc
inc
jns
or
or
inc
xchg
in
cli
jg
push
add
scas
icebp
dec
ljmp
stos
jp
mov
mov
pop
rorb
stc
push
add
in
push
cmp
ret
pop
dec
and
mov
push
popf
loop
test
and
sbb
and
fsubl
xlat
cmp
repnz
cmp
or
pop
stos
cmp
push
xchg
mov
cmpxchg
fldenv
jp
repz
mov
mov
lds
aas
rorl
xchg
pop
insl
xchg
pusha
rolb
mov
mov
arpl
or
lahf
push
jmp
fldl
dec
adc
movb
subb
xor
pusha
adc
scas
jae
out
cltd
mov
mov
imul
jle
push
aaa
insl
inc
dec
mov
mov
out
lods
orl
jns
mov
mov
pushl
leave
testb
jb
fcompl
mov
mov
in
dec
cmp
jg
fcoml
mov
das
pop
lahf
and
jl
out
add
cmpsl
rcrb
cli
ficoml
mov
aad
pop
test
test
iret
pop
in
adc
jp
cmpsl
jnp
push
pop
mov
testl
mov
out
push
mov
xlat
sub
adc
mov
out
or
sub
mov
adc
push
mov
xor
push
mov
lcall
ja
dec
test
in
add
mov
inc
imul
cmp
inc
bound
xchg
sbb
mov
mov
loopne
push
dec
pop
push
sarl
add
popa
ljmp
jns
inc
loopne
push
mov
xlat
sub
push
dec
jge
add
ds
jle
inc
xor
xchg
sbb
stos
and
push
mov
int
imul
mov
push
lds
push
mov
subb
xchg
test
inc
mov
imul
scas
xlat
outsb
push
stos
xor
xchg
clc
cmc
push
cwtl
fs
mov
xor
sub
dec
in
mov
cmp
mov
xor
fsubs
popf
or
sti
inc
setne
mov
inc
inc
outsb
jne
or
insb
jbe
xchg
pop
fs
lret
or
push
addb
mov
pusha
in
sbb
mov
sarl
dec
cwtl
add
mov
imul
adc
xlat
sub
ret
xorl
stos
mov
shlb
aad
cmc
call
sub
out
sbb
dec
ja
test
pop
mov
insl
cmp
jns
test
dec
push
cs
arpl
scas
enter
lods
pushf
mov
or
pop
mov
cmp
dec
push
stc
push
cmpsl
sti
mov
cli
and
pop
icebp
mov
pop
subl
mov
push
adc
cld
add
sbb
pop
mov
mov
in
pop
jge
mov
jno
outsb
test
orb
xchg
inc
loop
in
inc
repnz
adc
sbb
lds
shr
dec
xchg
cs
mov
and
ret
movsl
outsb
fwait
xor
ficomps
aas
popl
sbbb
shrl
jle
orb
cmpl
cmp
adc
sbb
xor
jns
pop
push
xlat
ljmp
les
push
insl
dec
mov
das
inc
or
sahf
jo
jne
jb
out
gs
shlb
or
and
mov
mov
hlt
out
add
insl
movsb
in
jp
arpl
mov
mov
mov
arpl
icebp
dec
pop
leave
push
scas
xchg
jg
test
inc
xchg
push
mov
aad
ss
out
stc
add
dec
xorw
lods
aas
dec
inc
imul
xor
push
mov
mov
in
outsb
mov
aaa
into
subb
jp
in
mov
mov
pop
push
push
pop
xchg
std
dec
pop
out
roll
in
iret
into
inc
out
pop
mov
sub
and
and
mov
add
fildl
cmp
out
dec
mov
adc
dec
movsl
pop
dec
adc
mov
sub
mov
insb
scas
scas
adc
out
or
in
mov
lds
sbb
imul
outsl
stc
fldcw
out
inc
icebp
dec
movl
or
inc
mov
jg
sub
insl
imull
xchg
pop
rcrb
xor
dec
push
inc
or
jbe
testb
orl
loopne
rolb
push
loopne
and
iret
or
ret
adc
and
jns
fdiv
pop
pop
jne
rclb
leave
loopne
ds
lds
xor
mov
lret
mov
inc
subps
sbb
fdivrp
addr16
movsl
lock
lret
insl
addb
mov
scas
pop
xor
mov
lret
in
stc
lret
sbb
test
cmc
sub
es
mov
cli
popf
insl
pop
insb
push
arpl
pop
sub
dec
jmp
pop
cmpl
insb
test
cmpsl
ljmp
shl
sub
pop
aaa
test
std
sbb
aam
addr16
mov
dec
sbb
jno
imul
sub
jmp
sti
bound
rol
mov
shr
pusha
nop
addr16
sbb
push
cmp
and
xchg
lret
push
xor
lds
inc
cli
in
clc
sub
jno
push
push
outsb
mov
jp
jecxz
in
mov
jecxz
or
mov
sahf
jmp
and
pop
loope
js
mov
or
aaa
jae
cltd
idiv
inc
decl
or
ficompl
mov
insl
incb
jbe
movsb
enter
out
movsb
pop
lahf
jp
sbb
imul
jnp
sub
mov
das
hlt
jnp
jle
pop
xchg
out
mov
push
push
stos
mov
push
ss
rcrb
sub
aas
push
xchg
mov
pop
xchg
les
xor
or
aad
or
cltd
ljmp
stos
iret
pop
in
mov
add
leave
ja
mov
inc
jns
mov
arpl
and
or
sar
xor
ror
je
cltd
adc
xchg
lcall
aam
jle
or
outsb
std
xorl
xchg
cmp
push
push
lods
mov
nop
adc
and
ljmp
punpckhbw
jbe
inc
cmpsl
popa
cmp
or
sbb
pop
xchg
pop
mov
fnstenv
push
mov
outsb
push
loopne
sbb
aas
sbb
jns
mov
xchg
addl
xor
mov
jl
das
dec
clc
sub
push
push
push
cmc
sub
outsb
dec
inc
rcl
cmp
cmp
aaa
decl
mov
mov
sbb
lret
std
test
adc
aaa
call
add
add
jle
xchg
out
lret
jmp
jle
fcoml
cmpb
setbe
cld
sarb
mov
adc
inc
call
add
and
pop
xchg
xor
xor
push
mov
adcl
push
dec
sar
cmc
add
jns
mov
movsl
xchg
or
ljmp
push
arpl
pop
fldenv
xor
ljmp
pop
inc
cmp
adc
mov
or
jmp
or
cmp
mov
in
lcall
mov
into
punpckhbw
mov
jo
repz
xchg
mov
xor
pop
test
pop
cmc
xchg
inc
xchg
push
xor
mov
jle
sub
insb
loope
shl
imul
dec
flds
or
ljmp
test
inc
sbb
jp
pop
fiaddl
mov
in
xchg
mov
imul
sub
lock
sbb
pop
lods
roll
cld
mov
repz
lret
and
ja
leave
or
and
mov
sub
shl
xor
inc
repz
xlat
xchg
das
scas
adc
add
mov
fwait
cmp
inc
add
push
push
jge
xor
in
out
scas
push
mov
cmovae
cmpsl
xor
mov
les
jmp
int
mov
je
cli
xchg
add
sbb
mov
push
pop
push
fisttpl
inc
xchg
imulb
pop
mov
inc
repnz
shr
int
sbb
addb
xchg
cmp
cmp
fwait
cs
jle
loopne
xor
dec
mov
cmp
rcrb
fwait
pop
push
push
and
xchg
loop
ror
mov
lahf
mov
add
pop
lods
cmpb
into
out
jl
pusha
jecxz
cmpsb
lds
jno
xor
xor
mov
adc
push
sbb
or
sbb
test
pop
pop
enter
or
add
inc
ret
fcoms
or
cmpsb
jle
insl
jl
lods
push
inc
stos
adc
leave
stc
or
fst
orl
lods
mov
int
loop
mov
push
mov
sub
cmp
push
sub
imul
rorb
add
mov
lods
add
mov
cmp
cmp
mov
scas
or
icebp
daa
mov
jle
mov
ljmp
loope
xchg
ficoml
jmp
in
inc
mov
divl
jmp
sar
cli
push
push
cwtl
fsub
mul
int
jno
pop
in
out
idivb
xchg
mov
jle
mov
scas
fxch
sbb
push
insb
arpl
dec
cmc
dec
pop
testl
mov
push
aad
movsb
mov
ret
and
insb
xor
add
mov
addl
push
pop
stc
sub
push
pop
cmp
imul
cmp
push
mov
in
push
push
lcall
sbb
jbe
popa
lret
imul
mov
jecxz
lea
outsb
idivl
imul
bound
sbb
testb
les
popa
pusha
jp
add
xchg
les
scas
jg
loop
fwait
stc
popa
dec
cmpsw
push
aam
push
jnp
cmp
nop
jecxz
pop
rcrl
repz
pusha
and
dec
adc
and
stos
shrb
mov
repz
stos
lods
mov
push
adc
sbb
jge
out
dec
mov
in
cltd
jge
add
inc
je
lcall
shl
xchg
cs
cmp
fimuls
jnp
add
out
sub
lret
outsb
icebp
icebp
mov
addr16
jg
pop
lret
aas
mov
or
shll
es
fucomip
out
jb
std
xchg
aad
mov
addr16
jge
sbb
mov
and
pop
and
popa
jmp
and
shl
and
or
jge
pushf
dec
sbb
jno
xchg
scas
inc
sub
jge
push
jge
arpl
push
shlb
sub
push
cli
cmp
loope
aad
lret
into
adc
cmpsb
inc
sub
out
in
mov
mov
insb
pop
add
shlb
ds
stos
incl
fs
fsubrs
mov
daa
jl
dec
imul
mov
lahf
cmp
addr16
cmpsb
or
xor
test
xchg
ja
jo
daa
mov
push
loop
nop
mov
inc
das
sub
adc
push
insb
pop
pop
aad
pop
mov
mov
in
jns
fiadds
xor
mov
ljmp
mov
stos
push
int
or
test
inc
pop
sub
and
xor
popa
insl
mov
or
icebp
mov
sti
insb
sub
add
ss
scas
jne
fildl
jl
jne
mov
or
adc
mov
out
xor
push
adc
mov
add
fs
adc
push
pusha
int3
enter
jb
pop
out
pop
shlb
xchg
aam
jecxz
or
fsubrl
aam
pusha
cli
aaa
add
pop
inc
xorl
rclb
popf
add
loope
sbb
xchg
push
jge
in
xchg
aas
mov
decl
sub
mov
adc
pop
push
xchg
jnp
push
shrb
push
xchg
mov
sub
jecxz
sbb
push
sub
mov
movsb
sub
mov
mov
cmpsb
cmp
adc
jbe
jne
and
arpl
pop
xchg
or
sbb
sub
xlat
aas
or
repnz
mov
movsl
jbe
pop
jb
mov
sbb
lea
int3
cmp
das
dec
sbb
add
mov
fcmovu
and
push
pop
fimuls
rcr
push
dec
jno
out
lods
xchg
icebp
xchg
rcrb
aaa
dec
add
into
sub
cmpsb
mov
lods
fdivl
rorb
cmp
pop
insb
out
inc
fiaddl
push
sbb
dec
andl
fwait
lods
jp
adc
adc
inc
adc
add
popa
sub
xchg
aas
push
and
sub
push
mov
dec
mov
dec
or
mov
lds
cmp
sti
cmc
mov
mov
pusha
fiadds
pop
movsb
and
jmp
lods
pop
outsb
push
jp
adc
pop
push
xchg
in
add
cwtl
jnp
cmpsl
sbbb
cmp
push
cld
leave
jns
mov
sbb
jno
mov
or
xor
test
enter
and
mov
int
push
in
mov
sub
sbb
pop
das
adc
jnp
mov
mov
ret
inc
jl
loope
arpl
sub
pop
adc
push
inc
int3
insl
mov
jne
inc
mov
ljmp
pusha
jp
inc
int
ftst
xchg
lds
and
xchg
sub
xor
inc
test
test
loope
cmp
ljmp
outsb
jbe
mov
sub
xchg
or
push
scas
push
cmp
mov
jl
cmp
jb
jmp
in
xlat
notl
mov
andb
jecxz
mov
jo
out
inc
add
imul
loope
testb
lock
outsl
enter
mov
fldcw
jo
mov
or
in
shll
out
add
mov
mov
gs
mov
cwtl
mov
int3
inc
push
mov
notb
sub
dec
fs
xchg
into
fsubs
aaa
or
fmull
or
xchg
movsb
pop
add
aaa
inc
mov
lret
ret
dec
sti
pop
stos
inc
jl
sbb
jbe
icebp
fucomp
popa
in
sbb
fldt
int3
xorl
pop
mov
xor
or
popa
jo
shll
fsubp
or
push
lods
iret
pop
pusha
nop
push
pop
fs
cli
out
stc
dec
cmp
stc
mov
jae
dec
pop
outsl
inc
push
pop
dec
mov
loop
dec
in
push
test
add
xchg
mov
outsl
std
inc
out
xorb
ljmp
dec
add
js
ja
jmpw
dec
adc
std
in
sbb
jge
push
push
daa
add
rcrl
add
clc
dec
or
movsb
out
jns
xorl
adc
mov
add
and
pop
es
xor
leave
jge
idiv
and
sahf
sbb
or
push
fsts
or
push
loopne
fwait
jp
sbb
popf
inc
add
cmp
xchg
aam
add
xor
jno
jg
xchg
out
flds
or
xchg
int
pop
push
push
sub
in
xor
ret
sbb
adc
fnstcw
daa
adcb
dec
xor
cld
mov
cwtl
icebp
mov
fdivl
and
das
push
fcmovb
lods
sbb
dec
out
lods
lods
addr16
shll
sahf
sbb
out
cmp
xor
mov
fstpt
jns
fwait
push
sub
dec
fwait
mov
mov
in
imul
sub
sbb
xor
push
iret
mov
mov
aas
sub
xor
mov
aas
mov
mov
xchg
push
ja
jmp
jb
jne
aam
sar
js
pop
enter
bound
jae
int3
fmull
mov
in
je
mov
mov
jp
lds
pop
ftst
jae
xchg
push
popa
ja
push
roll
xorb
adc
push
int
pop
jno
mov
sti
ja
lretw
je
and
das
sbb
mov
add
jg
cwtl
ret
lds
movsb
push
push
shll
push
sbb
adc
cltd
jnp
movsl
adc
inc
imull
jnp
jle
cmp
pop
cs
dec
shll
jo
mov
mov
fsub
and
clc
add
lea
lds
or
out
mov
mov
bound
out
in
or
pop
imul
pop
fimull
bound
adc
or
cmp
cmpsl
dec
adc
jo
loope
inc
add
pusha
add
aam
loope
adc
sbb
jno
pop
push
pop
xor
inc
andl
out
xchg
add
mov
dec
scas
mov
mov
stos
add
pop
pop
ljmp
imul
cli
xor
jnp
shll
mov
sbb
or
xor
cmp
pop
out
notb
sbb
mov
and
fdivrl
mov
lcall
cli
cltd
dec
xor
pop
mull
pop
mov
pop
inc
inc
sbbl
add
fadds
fs
xchg
repnz
mov
cmp
inc
jg
jg
scas
lods
nop
rcll
nop
arpl
call
mov
and
in
les
xor
xor
dec
insb
push
dec
inc
lret
daa
subl
add
pop
imul
or
mov
lahf
pop
daa
gs
pop
sub
xor
pop
movsb
xchg
call
sbb
sbb
mov
push
mov
inc
lcall
add
push
shl
pop
sahf
stos
repnz
xor
mov
mov
in
mov
xor
xor
sar
jmp
icebp
shrl
xlat
xor
mov
inc
movsb
cmpsb
xchg
pop
adc
das
jp
dec
ljmp
push
lret
hlt
fcmovnbe
mov
lahf
movsb
jne
aaa
add
lcall
pop
and
fsubl
sbb
mov
sbb
lods
movsl
pop
and
add
fstpt
mov
ljmp
loopne
sub
iret
pop
jecxz
aam
inc
mov
jnp
scas
mov
mov
mov
sub
lods
inc
scas
insl
addr16
mov
inc
pop
pop
shrb
repz
fwait
cltd
jl
push
insb
test
push
std
in
in
js
lock
es
mov
es
or
adc
mov
adc
or
mov
stc
cmp
popa
jle
cltd
imul
mov
out
sti
mov
mov
sub
mov
ret
rcrb
test
mov
or
and
add
jmp
bound
adcl
push
mov
jmp
movsb
negl
adc
lret
jno
cmpb
call
jle
xchg
push
pop
arpl
arpl
sbb
mov
xchg
nop
push
cltd
and
daa
ds
sub
enter
repnz
rcrl
imul
pushf
push
mov
or
jmp
fcoms
mov
push
fldenv
xchg
lret
or
or
stos
jle
mov
or
enter
insb
pop
cmp
es
cmp
adc
aas
ror
shr
das
dec
mov
mov
jmp
push
push
out
ja
mov
and
sarb
jae
sub
cs
test
xor
sub
in
cmpsl
add
add
scas
insl
enter
adc
fcompl
or
adc
jecxz
push
push
sbb
mov
shrb
movsb
cltd
out
js
inc
and
push
add
push
jo
and
mov
pop
aad
outsb
inc
sbb
cmp
lret
jnp
ficompl
fstp
in
sub
jp
cmp
insl
push
dec
mov
stos
or
sub
scas
leave
mov
jp
cmp
sub
sahf
mov
inc
shrl
xchg
push
push
fcmove
mov
sbb
dec
mov
push
cmpl
cmp
ja
stos
sbb
xor
fwait
lods
ror
jecxz
cmp
rol
dec
cli
sub
iret
jg
cmp
aaa
xchg
fwait
in
cmp
mov
bound
dec
jo
jp
mov
mov
sbb
xchg
mov
in
es
icebp
pop
xchg
fwait
stos
js
stc
lea
xchg
outsb
test
dec
mov
sahf
dec
jge
push
push
jne
push
lret
int
xor
bound
mov
xchg
stos
mov
pushf
std
jae
rcl
pusha
add
pop
sub
movups
fsubrp
inc
pop
jmp
cli
cmpsb
inc
mov
popa
pop
mov
mov
mov
mov
or
hlt
sbb
xor
jmp
inc
mov
lret
jmp
xor
out
jmp
mov
sub
jecxz
jl
shl
or
hlt
push
out
stos
adc
mov
mov
mov
sbb
jg
cmp
ret
data16
push
or
filds
je
mov
clc
cmp
and
out
ds
sti
scas
add
jg
rclb
gs
or
repz
cmpsl
cmp
fs
jl
lods
fld
insl
push
arpl
sbb
cwtl
xor
adc
ss
pushf
fadds
fdivs
pop
out
adc
xor
or
scas
mov
jo
mov
sbb
and
dec
out
lods
hlt
or
and
adc
cmp
dec
push
cmp
cmp
shlb
stos
rclb
rol
nop
xor
mulb
data16
and
imul
inc
pop
jge
mov
xchg
inc
cwtl
ret
or
or
sub
outsb
push
addl
dec
dec
dec
mov
pop
or
imul
insb
pop
sarl
pusha
pop
or
xor
loope
inc
push
sbb
push
sub
push
mov
movsb
inc
pushf
inc
in
stos
popa
clc
dec
pop
cmp
cmc
repnz
inc
test
mov
adc
mov
mov
negl
jle
inc
inc
inc
add
leave
inc
or
mov
testl
mov
mov
and
add
jns
mov
decl
lahf
push
jle
add
sub
or
jbe
mov
out
fisttpl
movsl
test
pop
gs
jb
pop
bound
std
adc
push
fstps
xor
push
addr16
jle
sbb
cmp
call
out
ficompl
jbe
or
mov
pop
movsb
ljmp
pop
out
loopne
adc
addr16
pop
imul
add
rorl
aam
imul
out
jns
jle
and
jle
cltd
in
push
pop
sbb
icebp
cmc
mov
jb
or
iret
cmp
leave
in
dec
jno
movsl
pop
xchg
orb
ja
dec
sub
loop
dec
sbb
in
daa
cltd
ja
adc
jb
sbb
in
in
imul
mov
rcrb
xchg
inc
add
pop
lods
mov
inc
cmpsl
push
in
xchg
aad
repnz
iret
aad
push
and
push
or
jnp
mov
mov
rcl
mov
fwait
sub
adc
fcompl
push
icebp
or
decl
push
ja
outsb
cmp
mov
rcll
cmp
icebp
outsb
in
sbb
in
push
call
jns
sub
decl
daa
fwait
mov
mov
xchg
fmuls
sbb
jno
or
fstps
pop
xor
jae
mov
mov
in
cmp
sbb
dec
dec
pop
jbe
sub
pushf
leave
in
or
add
or
jns
and
notb
mov
fisubrs
dec
pusha
sbb
pop
stos
mov
adc
out
mov
leave
out
push
sti
rcr
loope
xchg
ret
cmp
enter
test
sbb
xor
adc
or
inc
inc
adc
jbe
mov
xadd
sbb
push
icebp
pop
pop
hlt
jge
daa
es
or
xchg
add
pop
insl
mov
sub
int
fmul
stos
lds
mov
jb
xchg
push
lcall
sbb
repnz
dec
pop
adc
lret
cmp
scas
js
mov
jmp
rol
ja
js
jle
mov
repz
mov
sarl
leave
in
leave
fcomps
outsl
clc
and
out
loope
ljmp
sub
inc
arpl
ja
repz
lcall
and
sbb
push
or
in
pop
pop
lock
mov
jl
pop
movsb
loop
or
sbb
lahf
jne
dec
popa
mov
push
negb
jns
jb
in
jns
or
fnsave
into
outsl
inc
in
mov
adc
outsl
popl
cmp
ret
mov
ficomps
jecxz
mov
xor
and
xchg
fwait
rclb
lods
or
xchg
dec
loopne
mov
push
lea
jp
jg
jo
imul
lock
subb
pop
xchg
cmp
clc
xor
sub
in
fcompl
les
push
dec
pop
daa
scas
xorb
adc
fwait
insb
cs
or
scas
mov
arpl
cmp
outsb
jb
out
jnp
and
std
dec
leave
pop
jne
jo
adcb
add
lcall
dec
vmovntps
fs
cmpsl
into
adc
xchg
outsl
inc
imul
xor
dec
xchg
add
repz
mov
or
xor
cs
aad
fstps
push
adc
ret
enter
push
outsb
addr16
test
arpl
mov
push
push
push
mov
cmpl
push
int3
jno
mov
rorl
xchg
xor
push
pop
je
shl
mov
das
push
in
mov
addb
in
add
adc
nop
stos
sbb
jo
push
shll
pushf
add
pop
mov
mov
in
lock
out
fmul
enter
dec
pop
stos
mov
test
rcrb
in
sub
out
mov
or
mov
xchg
roll
ljmp
sub
insb
incl
sub
mov
aam
mov
push
xor
inc
pop
mov
cltd
aam
add
pop
mul
les
hlt
sahf
jne
out
mov
rcr
push
pop
adc
sbb
fldt
xchg
xchg
fbstp
imul
jmp
inc
push
sbb
lock
fnstsw
xor
xor
mov
push
js
lock
mov
lahf
add
aad
pushf
jecxz
add
cmp
mov
sbb
cmp
jecxz
push
xorb
dec
jecxz
pop
fs
push
mov
rorl
insl
test
imul
out
jno
rol
and
adc
xor
ljmp
addr16
push
push
adc
addb
pop
adc
cmc
arpl
mov
dec
aaa
mov
mov
xor
add
jp
add
cmp
fs
imul
xchg
add
push
xchg
jecxz
fs
dec
push
ret
jnp
pushf
adc
push
out
lods
and
inc
iret
xor
popa
inc
in
push
lds
add
in
stos
fistps
out
xchg
mov
je
aas
nop
out
or
rorb
cmp
jnp
int3
xchg
add
jmp
cmp
lea
or
cmp
dec
enter
std
mov
daa
jnp
fcomps
fwait
fs
mov
in
mov
xchg
pop
popf
shll
xchg
enter
gs
or
clc
ret
add
outsb
lcall
jg
sbb
mov
movsl
sahf
cmp
xor
rcr
pop
fcmovnb
or
rcr
inc
lea
rorb
loop
adc
pop
sub
cmp
inc
int
shr
jo
pushw
clc
ficoml
mov
push
mov
in
fists
ljmp
mov
or
xchg
test
in
mov
test
mov
inc
scas
in
adc
and
inc
out
aam
lahf
add
jmp
xchg
fiadds
mov
imul
cmp
inc
lcall
arpl
gs
xor
ss
mov
int3
xchg
clc
mov
je
outsl
xchg
inc
sbb
cs
fnsave
out
in
ret
shlb
rclb
inc
or
lahf
and
mov
cmp
and
adc
jmp
mov
cmp
outsl
inc
outsl
nop
mov
dec
mov
xor
nop
adc
jno
mov
jle
inc
mov
lret
pop
pusha
add
sbb
push
and
push
faddl
jle
add
aaa
popf
lock
lret
dec
mov
emms
push
jmp
dec
mov
lahf
and
xchg
dec
or
and
mov
and
inc
out
jmp
dec
push
insb
jl
sub
xchg
add
mov
cmp
push
insl
mov
js
push
lret
and
hlt
and
test
xor
xor
dec
adc
cs
mov
add
lret
dec
adcl
insb
xchg
stos
adc
and
dec
insb
ret
lcall
stos
pop
pop
mov
aas
xchg
nop
pop
pop
sub
jmp
dec
sub
lret
jmp
xor
divb
dec
xchg
or
rcrb
sbb
pusha
inc
sti
fucomi
gs
popa
inc
xor
movsb
nop
push
lret
mov
pop
lea
mov
adc
or
pop
das
hlt
xchg
test
pop
xchg
es
adc
enter
cmp
pop
les
add
jns
jno
mov
jp
mov
mov
sub
pop
adc
fptan
fs
dec
fwait
or
jne
popa
cmp
or
cltd
and
cmp
ja
cltd
xchg
sub
cmpsl
mov
mov
out
and
ja
dec
push
add
jnp
mov
jge
and
adc
andl
repnz
sub
lock
test
hlt
inc
mov
shlb
mov
and
hlt
push
decl
ja
stos
dec
roll
sub
xchg
in
hlt
push
test
xchg
jne
or
mov
enter
es
jns
add
call
sub
cmpsl
fisubl
sbb
test
adc
xchg
in
and
subl
pop
push
cmpsl
or
or
inc
enter
mov
fwait
mov
popa
add
std
pushl
rorl
xchg
jno
sbb
adc
icebp
sbb
stos
sub
cmp
ss
imul
push
es
pop
or
xor
pusha
daa
fs
mov
cmpsl
or
scas
subb
sub
cmp
out
dec
mov
add
arpl
std
add
rcr
int
in
repz
mov
pop
int
xchg
dec
mov
pop
pop
je
decl
ss
mov
mov
in
fmuls
insb
inc
adc
or
push
mov
mov
movsl
movsl
sub
ljmp
jbe
out
pusha
lretw
sbb
jmp
inc
mov
cmp
test
cmp
jge
out
cwtl
sub
jnp
jmp
xor
popa
xorb
inc
pop
fiaddl
cmp
pop
arpl
out
popf
notb
xchg
jb
xchg
out
movsl
mov
jp
lret
dec
add
push
push
sti
outsb
mov
dec
xchg
push
ja
popa
out
fsub
jg
xchg
int
push
rcl
sub
mov
imul
adc
push
pop
mov
push
fsts
or
cmp
mov
jg
sahf
into
out
sbb
sub
stos
addr16
movsl
mov
mov
mov
pop
cmp
popa
out
xchg
dec
jp
adcb
mov
xchg
or
fcmovbe
inc
sbb
add
add
xor
push
mov
rcrl
cli
push
pop
sub
mov
inc
decb
out
and
nop
fstp
stos
ret
push
dec
movsl
mov
xor
dec
sub
testl
jmp
cmpsb
pop
xchg
cmp
lcall
call
hlt
fcompl
repnz
je
movb
addl
inc
mov
icebp
nop
pusha
sub
dec
idiv
fldcw
mov
sbb
inc
xchg
mov
cwtl
adc
pop
cmp
jns
pushf
jp
sahf
js
jmp
or
mov
pop
rcll
cwtl
xchg
cld
lret
rcrl
xchg
iretw
dec
push
test
iret
fisttps
mov
mov
mov
cltd
add
mov
sbb
mov
jb
cmp
add
fucomp
dec
xchg
adc
fwait
jle
mov
jle
test
pop
mov
sbb
lret
mov
xchg
xchg
mov
pop
xchg
movb
xor
sub
xchg
in
scas
les
shrl
aad
in
inc
imul
add
pusha
stos
movsb
into
lcall
xchg
push
daa
xchg
sahf
xchg
loop
adc
jge
shlb
mov
jge
or
xchg
jnp
dec
sbb
sub
xlat
push
mov
sub
fwait
mov
cld
ftst
mov
test
push
xor
sbb
mov
movsl
push
shl
pop
xchg
sbb
pop
pop
addr16
test
add
test
fiadds
dec
cmp
movsb
adc
outsl
outsb
dec
pop
push
lret
scas
idivl
testb
xchg
andl
jge
ljmp
sbb
jbe
je
inc
jne
or
sti
aas
popa
fwait
or
repz
mov
inc
stc
inc
sub
decl
mov
xor
into
sub
mov
or
adc
and
dec
js
std
cmc
mov
fsubrs
push
nop
scas
scas
dec
rcr
xorb
jns
dec
dec
clc
insb
fadd
fistpll
or
xchg
mov
cwtl
jmp
mov
hlt
bound
mov
cmp
imull
xchg
gs
xchg
stc
mov
xchg
aad
add
imul
js
lods
dec
xchg
out
test
sbb
pop
cmp
jb
test
cltd
mov
xor
jnp
cmpsl
das
jmp
pop
clc
jbe
in
aam
mov
sub
in
test
mov
stc
out
xor
dec
aam
adc
inc
xchg
cmp
mov
sti
push
inc
jle
add
movb
xlat
sub
lea
mov
xchg
push
lahf
dec
jle
mov
imul
jl
pushf
mov
iret
ss
test
popf
dec
jle
fistpll
lock
add
aam
adc
and
outsb
xor
xor
lret
test
rclb
and
int3
jb
xchg
sub
outsb
push
out
out
inc
mov
fdiv
pop
jnp
mov
out
fstpl
pushf
in
mov
dec
popa
fs
fstpl
xchg
test
add
pop
push
fisubs
xchg
inc
ss
push
lahf
pop
lds
in
or
cld
sbb
gs
jecxz
cli
push
inc
lahf
mov
jge
mov
mov
and
push
das
ja
mov
or
inc
enter
xor
insb
lahf
mov
xor
clc
sbb
out
adc
mov
fstpl
leave
pop
or
aas
xchg
push
aad
sbb
cmp
mov
popa
popf
stc
adc
mov
mov
enter
cmp
stc
mov
shl
dec
xchg
inc
fmuls
loopne
out
mov
ret
into
mov
adc
shl
dec
push
mov
adc
aad
jp
js
outsb
cltd
mov
cmp
mov
lock
mov
adc
hlt
jae
es
imul
gs
cwtl
stos
push
sahf
jae
push
clc
in
mov
sbb
push
ret
mov
or
jecxz
adc
push
xchg
pop
lcall
pop
fwait
mov
adc
or
jae
add
enter
pop
push
xor
add
enter
cli
mov
jo
sub
sub
outsb
cs
or
repnz
lods
push
sub
mov
das
pop
clc
dec
insl
insl
into
xchg
or
daa
rcl
out
idiv
loopew
lret
adc
push
fwait
test
test
jg
xchg
lahf
imul
pop
mov
iret
in
mov
sbb
mov
imul
or
pop
imul
push
and
and
sub
stos
pop
push
imul
out
or
icebp
adc
push
dec
out
mov
pop
pop
mov
adcb
sti
ljmp
mov
push
inc
add
test
lea
movsb
push
cld
add
xchg
pop
shrb
adc
into
and
mov
and
dec
enter
sbb
je
out
push
scas
push
jne
jae
mov
inc
adc
insb
test
call
sahf
fistpll
inc
push
insb
mov
rcll
mov
insb
mov
int
int3
xchg
int
sbbl
in
push
pushf
or
aad
mov
lods
mov
mov
mov
fidivrl
insl
push
ficomps
mov
push
out
fildl
ja
sbb
and
lahf
out
and
iret
mov
out
leave
ljmp
divb
stc
or
inc
mov
or
pop
mov
mov
loop
xor
jmp
aas
notb
xlat
nop
adc
jmp
mov
aaa
adc
dec
arpl
test
xor
fistpll
mov
or
push
dec
in
stos
mov
jbe
sub
movl
insb
sarb
mov
lret
movsl
pop
mov
jp
or
mov
pop
std
mov
outsb
mov
loope
fdiv
jl
pop
shrl
aaa
dec
mov
adc
xchg
movsb
or
xchg
stos
popf
xchg
pop
xchg
pop
addr16
jo
jecxz
cmc
ret
or
mov
push
and
cmp
mov
ret
cmpb
mov
dec
loop
aas
cmc
sbb
hlt
test
mov
jg
rolb
push
push
pop
gs
dec
mov
arpl
int
ret
sub
adc
mov
add
cmp
popf
pop
xchg
loop
repz
stos
xchg
add
test
popa
clc
cmp
pop
lds
ljmp
dec
daa
pop
or
bound
sahf
inc
outsl
xor
xchg
popa
fucom
test
mov
and
enter
loope
loop
pop
jmp
pop
enter
imul
mov
mov
es
inc
mov
icebp
out
cmpb
xlat
mov
sbb
cmpb
js
lods
xchg
orb
out
push
xor
mov
movsb
repnz
xor
pusha
ret
cmpsb
jecxz
dec
jecxz
lahf
cmp
in
cld
scas
pop
out
adc
stos
mov
fisubrs
fs
in
mov
sbb
testb
rcl
xchg
stos
stos
shll
jb
aad
lret
insl
or
cltd
jb
push
out
push
lods
jne
pop
mov
xchg
push
stos
aam
mov
mov
fcoms
sub
adc
and
push
insb
add
ss
xchg
xchg
and
jmp
into
cmp
cltd
jmp
jmp
sub
inc
cld
lcall
mov
xlat
push
testb
push
stos
sub
addr16
xchg
cmpsl
mov
test
cmc
mov
outsl
andb
stos
subl
dec
orl
sbb
enter
mov
xchg
and
push
dec
mov
loope
cmpsl
sub
ds
mov
in
je
aas
push
lock
sub
sbb
xor
pushl
jecxz
popf
inc
jae
xchg
mov
inc
mov
scas
add
inc
push
rcll
mov
cld
cwtl
fisttpll
int3
mov
dec
adc
add
lock
bound
push
ss
js
and
cld
mov
ljmp
xchg
dec
xlat
xlat
rcr
std
lea
stc
cmp
mov
test
shl
fst
xor
ja
fsubs
inc
dec
sarb
ljmp
lcall
sahf
enter
pop
dec
push
nop
xchg
dec
add
repz
iret
sub
inc
in
jno
test
jmp
je
xor
jb
or
test
cmp
ja
shlb
push
or
dec
pop
nop
cmpsl
pop
pop
sbb
sub
movsb
imul
pop
aas
fwait
cwtl
xor
xchg
sbb
xchg
test
mov
dec
mov
stos
xor
mov
or
mov
repz
cmc
push
or
xchg
and
cmp
ljmp
pop
jmp
je
push
inc
pusha
push
mov
jg
out
adc
mov
in
jnp
sub
xlat
push
inc
sti
xchg
ret
push
sbb
in
testb
imull
das
div
add
mov
jnp
in
shr
scas
add
subb
cmpsb
in
mov
lea
clc
stos
js
push
push
hlt
adc
stos
adc
leave
std
frstor
jg,pn
and
mov
out
xchg
dec
inc
sti
stos
daa
push
movsl
xchg
xor
mov
push
add
test
pop
test
push
outsl
bound
je
das
sub
inc
out
xor
inc
push
inc
incl
popf
dec
clc
or
inc
and
sti
icebp
ret
mov
nop
js
icebp
and
push
faddl
data16
mov
inc
or
and
lcall
or
jmp
cmpsb
mov
jle
dec
pusha
jo
dec
pushf
push
clc
fwait
in
stos
jp
xchg
scas
cmp
sbb
addr16
insb
clc
or
pop
mov
xor
sub
inc
out
cmp
mov
scas
pop
lret
data16
rcrl
and
jns
dec
push
shlb
into
cmpsb
insl
gs
xor
mov
lds
push
clc
aaa
outsl
add
icebp
jns
test
inc
adc
xchg
add
test
fld
out
mov
xor
fistl
cmp
out
data16
ljmp
mov
imul
jge
jg
pop
cmp
xor
loope
sarl
popf
push
inc
cs
cmp
sub
jnp
fistpll
cmp
mov
mov
insl
lahf
fnstenv
sbb
jae
jecxz
xchg
pop
adc
mov
add
push
aas
test
mov
iret
fsubl
jbe
dec
popf
jecxz
push
sarb
mov
adc
outsb
add
dec
or
mov
call
ljmp
adc
lea
lea
lcall
addb
jnp
out
cltd
mov
loope
xor
push
aaa
scas
inc
sahf
cld
inc
incb
xor
aad
cmp
push
mov
sahf
mov
xlat
xor
xchg
mov
insb
cmp
adc
stos
jb
lods
fstpt
movsl
repz
pop
iret
inc
mov
push
sti
mov
or
sbb
xor
test
mov
push
mov
xor
sbb
push
sbb
and
mov
ret
ds
ljmp
sub
scas
push
or
pushf
stos
cmp
ss
iret
cwtl
pop
ss
mov
pop
sbb
lds
test
inc
call
jne
cmp
cli
inc
pusha
movsl
leave
rcrb
test
pop
sbb
arpl
sar
pop
xchg
jmp
mov
xor
xchg
ja
ret
in
in
int
loop
adc
sub
out
sbb
xchg
test
loopne
mov
inc
pop
les
lahf
pop
call
mov
test
and
cmp
insl
mov
inc
inc
and
je
push
or
inc
xchg
push
and
scas
arpl
mov
nop
stos
add
jmp
lcall
pop
dec
cs
enter
mov
xor
cmp
xorb
rorb
movsb
or
aaa
adc
pop
sub
dec
subl
leave
jnp
push
or
popf
mov
dec
jmp
jae
mov
gs
cwtl
in
jne
jmp
outsb
cmp
and
add
sbb
sub
pop
xchg
fidivrs
inc
dec
bndstx
and
imul
mov
scas
pop
leave
jo
or
push
mov
pop
dec
and
ljmp
sub
xchg
cmp
test
dec
outsl
scas
jp
cmp
mov
push
inc
fiaddl
fs
loopne
bound
fimull
push
fstl
dec
inc
and
and
enter
ss
mov
sub
call
mov
in
adc
cs
xchg
mov
int3
push
mov
and
aam
pop
das
cmp
sub
dec
cmp
imull
arpl
cld
pop
stc
imul
inc
pop
add
mov
aad
loope
sub
or
in
push
cli
dec
jne
fadd
lea
fcoms
jle
adc
cmpb
adc
or
std
out
and
iret
lcall
or
test
test
push
or
adc
sahf
ja
fmull
sub
mov
mov
xchg
inc
repnz
pop
add
int
out
cwtl
or
into
xlat
shlb
adc
push
cli
sbb
push
jp
scas
mov
sbb
jge
jp
jp
in
and
xchg
sub
fs
pop
pop
dec
xlat
inc
mov
lock
cmc
push
inc
ret
cmpsb
push
or
dec
fidivrl
push
das
roll
xchg
das
pop
lods
in
test
lods
loopne
pop
test
and
mov
in
repnz
in
incb
jle
pop
inc
xor
insb
pop
push
fmull
idivb
in
push
arpl
repnz
sti
outsb
mov
cmp
nop
sbb
hlt
lods
mov
das
outsb
dec
jl
stc
lret
ret
dec
dec
aaa
repz
lock
lods
pop
and
push
aam
mov
add
mov
pop
xor
inc
ret
in
lock
orb
mov
push
ficomps
push
inc
jge
sbb
mov
sahf
lock
dec
aad
mov
inc
loop
lahf
inc
pop
xor
xchg
pop
cmp
add
notl
jp
pushf
or
sub
jecxz
ss
sti
xchg
mov
mov
test
adc
mov
lret
loope
aad
rdmsr
loopne
push
out
shrb
pop
lea
stos
pop
dec
mov
mov
adc
mov
mov
cmc
jbe
push
jno
jnp
and
push
add
mov
xor
and
dec
fnstenv
add
mov
or
mov
inc
push
jmp
xchg
scas
or
fdivl
lea
sbb
dec
testb
lahf
dec
fiadds
les
dec
inc
push
dec
push
gs
aas
loopne
lock
fistps
push
and
or
ja
mov
ret
mov
dec
mov
jo
es
shll
sbb
fmuls
adc
shrb
jle
push
cmpsb
pop
mov
mov
adc
inc
int
dec
fsubl
push
mov
add
inc
rorb
push
dec
sub
mov
sbbl
inc
xchg
lock
in
mov
testb
jecxz
mov
mov
outsl
lock
jg
fstpt
shlb
loopne
jmp
cmp
rcr
imul
jno
and
cmp
dec
mov
sbb
cmp
jae
mov
or
loop
call
insb
test
pop
jb
push
scas
aad
mov
dec
sub
jae
mov
mov
repz
jne
sub
stc
xlat
jb
xchg
scas
and
inc
xor
mov
push
shll
in
mov
xchg
out
hlt
add
test
push
push
push
rorl
dec
jae
pop
mov
rclb
loopne
cmp
mov
push
sbb
es
sbb
insb
imul
testl
cmp
pusha
out
fdivr
and
cmp
xor
mov
xor
or
cmp
push
in
repz
xchg
enter
stos
dec
mov
push
lods
lods
sbb
pop
int3
xchg
pushl
xor
insl
in
adc
and
je
lret
jae
into
jmp
jle
movsb
idiv
inc
inc
add
xchg
push
pop
outsl
inc
pop
mov
add
lret
dec
add
outsl
inc
ror
aas
jl
inc
or
test
adc
fwait
fwait
and
outsb
es
stc
std
jle
xor
test
je
inc
adc
xchg
ljmp
or
inc
fcmovbe
and
lock
scas
sub
xor
inc
adc
mov
idivl
stc
xor
sub
negb
cwtl
pusha
mov
push
jbe
js
lods
ds
mov
stc
inc
push
cs
movsl
repz
mov
jb
fsubrs
outsl
imul
iret
and
nop
xor
cmc
jp
xchg
fsts
push
mov
and
lret
mov
test
out
inc
push
pop
roll
push
cltd
add
in
and
mov
add
rcrb
idivb
cs
aad
clc
mov
cmpsl
sti
es
pop
mov
in
add
neg
inc
cli
add
nopl
sti
jp
mov
loopne
orl
repz
add
ficomps
mov
lds
inc
mov
push
clc
shl
cmp
and
ret
xchg
cmp
pop
jmp
mov
xchg
lods
mov
add
pop
das
dec
mov
ret
fs
xlat
dec
or
xchg
sub
mov
jne
nop
push
movsb
outsb
les
imul
xchg
aaa
data16
in
adc
sub
outsl
or
dec
adc
mov
xchg
repnz
cmc
or
and
les
or
cmc
push
shlb
inc
lret
adc
xchg
jb
shrl
ret
loopne
adc
or
subb
outsb
jbe
pop
stos
and
jbe
fmull
data16
daa
jne
mov
ds
repnz
inc
and
sbb
lret
cmp
pop
xchg
add
out
jno
jne
mov
test
leave
iret
out
add
mov
sub
pop
mov
jle
push
in
jmp
mov
iret
pop
push
jge
out
jecxz
daa
mov
mov
in
mov
xchg
lea
lahf
aaa
repnz
cmc
imul
mov
sub
pop
xor
jae
mov
sti
out
rcrb
adc
xor
and
fidivrs
inc
insl
loop
or
cld
fstl
jbe
jg
out
add
out
rcll
and
mov
cltd
fcompl
fs
mov
mov
push
xchg
jp
bound
sbb
fcomps
int3
daa
aaa
jo
out
pop
in
push
mov
xchg
cmp
out
insl
aad
cmp
xchg
scas
out
enter
xor
sahf
in
and
lret
cmp
test
or
xchg
push
mov
mov
xchg
ret
stc
adc
or
sets
mov
movsl
ds
aaa
mov
add
adc
jbe
mov
int3
data16
lcall
pop
sbb
call
jmp
pop
xchg
nop
push
std
xor
int
add
imul
nop
fldt
pop
add
or
out
xchg
dec
xor
cltd
enter
adc
push
mov
mov
jno
sbb
stos
push
dec
fistps
dec
ror
pop
jae
je
das
bound
popa
shrb
sbb
fstpt
cld
popa
push
lock
or
popf
mov
nop
jno
ds
aas
out
lahf
ret
jmp
jno
add
cmp
enter
or
add
mov
jae
lret
push
mov
and
test
fs
adc
jmp
mov
out
inc
xor
or
mov
sbb
inc
out
adc
int
fdivrs
cs
mov
mov
ss
adc
mov
pushf
inc
shll
std
lds
pop
ret
repnz
pushf
add
mov
idivb
pop
insb
adc
repnz
add
xor
icebp
mov
stc
jne
mov
xchg
mov
pop
outsb
daa
mov
shlb
mov
mov
fsubp
inc
adc
xchg
pop
cmpl
push
call
sahf
mov
test
imul
lahf
push
pop
fistpll
mov
arpl
insb
xor
lahf
in
clc
jmp
mov
leave
imul
or
or
and
sbb
insb
mov
cmpsb
push
in
jne
or
xchg
repz
stos
sbb
cmc
lock
div
xor
dec
scas
push
leave
sub
lcall
adc
push
mov
sub
adc
out
jnp
and
daa
add
ljmp
and
sbb
sub
cmp
mov
xorl
adc
dec
sub
clc
mov
add
cmp
or
mov
jmp
mov
xchg
mov
incb
and
idiv
lods
sub
xchg
rcll
in
das
push
enter
stc
mov
stos
inc
xchg
int3
add
sub
loopne,pt
fwait
ret
sbb
lahf
cs
ret
push
mov
mov
lea
push
cltd
and
mov
out
jg
sub
iret
inc
mov
daa
xchg
jae
dec
xchg
lret
cwtl
adc
sbb
jo
and
sub
mov
in
imul
shll
cmpsl
xchg
push
lds
or
xchg
fstpt
pop
add
add
cmpsl
insl
mov
lahf
dec
pop
insb
xchg
jle
mov
rcl
push
cmp
or
xchg
leave
leave
mov
out
jns
fnstsw
push
push
add
fidivrl
cmp
jmp
add
adcb
adc
into
push
push
nop
mov
sbb
or
sahf
movsb
and
icebp
sub
and
insl
lcall
xchg
cltd
fsubl
mov
lret
or
or
jle
mov
push
shlb
add
fisubl
sub
push
add
jae
jmp
push
dec
lods
lds
pushf
inc
leave
shl
cmp
cmove
inc
push
adc
shlb
push
clc
lock
cmp
xor
inc
adc
add
pusha
into
push
mov
imul
dec
ds
xor
in
ja
out
or
inc
and
mov
jmp
aas
out
cmp
cmpsb
test
psubusb
xor
jae
hlt
pushf
push
xor
test
xor
ret
xchg
lcall
clc
pop
xchg
or
pop
loope
push
jns
push
fsubp
cmp
pop
mov
arpl
ret
aas
sub
push
jmp
mov
adc
fisttpll
mov
dec
pop
ja
ss
idivb
insb
insl
cmp
jecxz
jbe
pop
pop
push
pop
in
mov
insl
xlat
mov
dec
out
cmp
cld
int
cmp
mov
aas
data16
and
cmp
out
leave
je
adc
sarl
push
leave
jecxz
fidivl
shl
inc
inc
xchg
jo
pop
decb
mov
push
iret
sbb
arpl
add
inc
push
fs
out
mov
pop
imul
xchg
cmp
mov
jl
sub
dec
cmp
fmull
push
xchg
orl
imul
mov
add
sub
jecxz
adc
movsl
std
out
or
lret
xor
mov
movsl
stos
les
bnd
mov
repnz
das
mov
movsl
out
pop
lret
aas
cmp
hlt
cmp
mov
repnz
sti
lds
sub
imul
ret
js
push
lods
addr16
adc
out
cmp
es
fisttpll
mov
test
jle
sbb
jecxz
xchg
test
xchg
inc
mov
ds
and
imul
icebp
pop
sbb
and
xor
mov
lods
mov
test
dec
mov
adc
or
xor
shlb
pushf
notb
in
mov
negl
mov
iret
rolb
scas
sub
fistl
xchg
aam
dec
xchg
test
dec
cli
clc
sub
xor
bound
and
fcom
or
std
jnp,pt
jae
xchg
xchg
aam
clc
shr
in
inc
shlb
mov
iret
pushf
dec
aad
ret
pop
ja
sub
jl
push
xor
in
xlat
jbe
out
call
popa
and
jge
and
hlt
mov
push
mov
sub
xchg
andl
fisubl
or
scas
cmp
fisubrs
rol
mov
push
mov
pop
loope
mov
cld
inc
repnz
sti
scas
add
jmp
lret
xor
dec
sahf
outsb
adc
stc
loope
jo
mov
pop
mov
ficoml
ljmp
inc
stos
lock
pop
out
push
fbstp
push
nop
jl
out
xlat
pop
xor
scas
mov
pop
lfs
lret
mov
and
ficompl
aas
sbb
sub
add
and
push
pop
and
loope
pushf
sbb
jns
and
push
in
mov
mov
mov
mov
sub
sub
jmp
repz
xchg
and
push
mov
pop
mov
push
sub
push
or
insl
push
pop
gs
mov
loopne
mov
cmp
jbe
jle
imul
test
test
test
scas
rorl
mov
cmpsb
mov
lret
push
fidivrs
sub
outsl
ja
test
add
loopne
push
push
scas
or
inc
xchg
cmpsl
push
push
sbb
xlat
pusha
jl
mov
and
hlt
sub
mov
dec
lahf
push
dec
lods
pop
push
jmp
xchg
sbb
std
and
mov
inc
scas
add
cmp
dec
cltd
js
imul
push
sub
cltd
out
orl
mov
push
mov
pop
rolb
iret
negl
stos
mov
inc
mov
mov
mov
add
fbstp
popf
pop
lea
mov
lock
pop
loopne
pop
inc
testl
stc
mov
dec
mov
inc
mov
mov
stc
int3
push
inc
out
leave
jge
int3
lahf
jge
mov
ss
test
pop
lods
roll
pop
and
cmp
aam
arpl
mov
mov
add
sahf
out
movsl
call
push
jnp
sarb
push
ret
hlt
xchg
js
movsb
push
outsl
in
and
ss
jno
xor
push
in
push
inc
mov
and
imul
dec
xor
in
lods
cs
fs
and
jbe
push
jne
shll
fcmovb
adc
xchg
inc
cmp
lods
sub
adc
mov
pop
add
mov
mov
aaa
mov
jle
sti
andb
push
push
jg
xchg
out
pop
out
into
ret
data16
cmp
andb
popf
lret
push
fwait
xchg
xor
popf
jle
sub
lods
dec
xor
pop
jns
fisttpll
push
ds
out
ror
cmp
mov
xlat
aad
rolb
or
mov
pop
mov
test
dec
push
or
and
jle
add
fidivrs
adc
add
sbb
orl
push
add
arpl
mov
aaa
xchg
pop
jae
enter
and
pop
jle
mov
andb
sbb
ljmp
jnp
stc
in
mov
cmpsl
cmp
incb
bound
aaa
loopne
sub
lea
loop
scas
and
or
xchg
xor
pop
add
add
repz
icebp
mov
mov
jnp
fsubs
std
pop
or
lcall
fldenv
dec
jno
push
insb
lahf
inc
popf
push
stc
mov
sbb
gs
aas
or
mov
or
xchg
hlt
mov
add
mov
mov
dec
sub
das
and
outsl
pop
mov
and
push
dec
xchg
cmpsl
xor
dec
int3
sbbl
int
xchg
nop
pop
aaa
ja
lods
loop
mov
dec
daa
int
xchg
or
or
pop
push
jmp
jecxz
cmp
scas
pop
sbb
mov
lods
fdivp
fildll
adc
stos
inc
pop
mov
bound
cmpsb
das
adc
adc
jae
test
pusha
stos
cltd
lret
rcrb
inc
or
jmp
mov
out
and
mov
or
sub
mov
fcom
pop
mov
int
lcall
or
xchg
add
pop
arpl
xorb
hlt
je
rcll
mov
insb
mov
out
rorb
bound
shll
sub
and
mov
movsb
cmc
subl
sub
stc
dec
inc
mov
hlt
int
std
sbb
popf
loope
int3
jbe
push
pop
mov
mov
addl
pop
popa
push
jo
loop
adc
jg
push
push
repnz
addr16
push
xchg
lods
push
out
sub
dec
std
icebp
sbb
imul
add
jno
inc
imull
fs
outsl
fs
popa
jne
mov
js
mov
insb
stos
bound
movsl
lret
in
and
pop
cld
mov
or
scas
daa
sub
outsl
cmpsl
ds
inc
adc
or
int
loopne
adc
dec
loopne
mov
mov
mov
and
pop
mov
fwait
sbb
jl
xor
cs
xor
jge
push
test
nop
sbb
xchg
pop
and
cmp
push
pop
scas
push
mov
out
adc
dec
aaa
inc
enter
jge
jp
mov
cmp
lcall
mov
or
add
push
cmp
or
jnp
jl
jle
jne
xor
push
mov
jne
sub
pop
pushf
popl
test
xor
cmpb
fsubs
lock
setne
push
xor
and
jmp
xchg
dec
call
ret
mov
imul
dec
jae
sbb
daa
test
mov
cli
int3
jg
jbe
push
loop
addl
pushf
cmp
inc
push
pushf
or
cwtl
sub
js
push
inc
clc
mov
add
xor
push
pop
and
faddl
dec
xchg
stos
cmpsl
out
scas
mov
sbb
clc
out
sbb
dec
and
int3
mov
mov
idivb
xor
push
add
mov
inc
or
fcomps
xchg
push
sbb
and
or
cmp
jne
adc
jo
dec
or
in
and
out
push
adc
inc
add
dec
mov
mov
mov
xlat
lcall
push
and
jl
xor
gs
mov
rcr
mov
bound
in
and
xchg
mov
mov
mov
fs
mov
ret
divb
outsb
xlat
jl
aad
xchg
mov
es
fdivl
cmp
nop
movsb
jno
dec
repz
jg
push
sbb
dec
js
adc
rclb
fmull
mov
sahf
out
shlb
push
pop
ret
loop
mov
leave
xor
dec
adc
rclb
test
arpl
cmp
lcall
fisubl
mov
pusha
sub
and
mov
jmp
mov
inc
das
mov
das
sbb
movsl
adcl
push
outsl
int
out
mov
js
out
add
repnz
push
leave
sbb
cli
mov
push
mov
ljmp
hlt
pop
and
mov
xchg
cmpl
shll
jne
cmp
or
movsb
out
fimuls
movsl
insl
sbb
fldln2
xchg
fs
jb
dec
sbb
dec
or
fcoms
cwtl
lahf
mov
in
inc
fistpll
jae
out
aam
negb
jle
sub
repnz
outsl
jl
add
cli
enter
divb
xchg
xlat
push
cwtl
inc
and
sbb
out
jnp
push
pusha
adc
adc
outsl
sti
cmpb
dec
das
add
bound
test
in
xchg
test
pop
jp
jp
cmp
inc
aaa
jno
inc
xor
adc
cmp
sbb
xlat
jno
jbe
or
in
mov
mov
lret
xor
and
stos
dec
sub
xor
jb
push
dec
xor
add
xchg
xor
jecxz
inc
or
jmp
loopne
lahf
jb
mov
push
adc
or
scas
stos
add
xor
add
iret
test
sti
les
and
jge
dec
mov
add
test
xor
imul
cmp
jno
ja
sub
sahf
xorl
int3
idivl
jp
les
and
bound
outsb
xchg
xor
push
or
stos
adc
inc
stos
jne
rcll
hlt
pop
into
addl
pushf
xor
lock
fcmove
sub
dec
idivb
pop
rcll
shrl
mov
stos
js
out
mov
bound
shll
js
lds
inc
mov
ficoms
imul
shlb
xchg
cltd
cli
xchg
int
sub
cmpsb
aaa
inc
sbb
jo
in
pusha
pusha
cmp
jle
sub
or
jp
ljmp
jo
or
xlat
pop
pop
iret
push
dec
adc
andl
arpl
push
jnp
pop
add
sbb
fsubl
sub
pop
loope
js
adc
aam
pop
sbb
ret
xor
push
in
cwtl
test
xlat
psrld
test
jecxz
imul
dec
add
fiadds
mov
adc
sbb
and
mov
xchg
fidivs
cmp
jmp
iret
mov
jns
mov
loopne
sub
adc
inc
cmc
inc
mov
int
cmp
jae
fmuls
rol
pop
lcall
fidivs
divb
adc
aas
xchg
stc
ds
ret
push
mov
lods
test
sub
push
mov
jae
or
jne
mov
inc
fs
adc
inc
je
clc
sahf
xchg
mov
push
pop
lahf
mov
cld
jmp
jl
push
xchg
out
push
or
fldcw
test
mov
mov
xchg
ljmp
push
test
gs
pop
mov
out
inc
ljmp
lcall
js
shlb
xchg
subps
fcom
adc
aaa
sarl
cmp
add
cmp
lcall
jo
loope
lret
cwtl
imul
je
loop
and
push
pop
push
aaa
out
stc
cltd
push
aaa
mov
lds
orb
and
mov
push
push
push
lahf
sub
rcrl
iret
sbb
jp
icebp
pop
addr16
mull
xor
cs
xor
mov
aad
pop
mov
ds
mov
dec
pop
mov
fistl
mov
outsl
mov
add
dec
in
dec
mov
xor
pop
jle
mov
xchg
add
ljmp
int
mov
xchg
xor
popf
cltd
dec
push
arpl
stos
inc
leave
adc
cmpsb
stos
dec
or
jg
aam
fwait
jp
cmpl
das
push
pop
sarb
xchg
test
xchg
sti
jg
mull
pop
or
push
sub
jbe
sub
pop
out
fwait
cmpsb
xlat
xor
adc
pop
mov
out
mov
lret
sub
inc
sbb
mov
ss
jmp
arpl
fidivrl
inc
mov
fimull
push
addl
jle
add
incb
lds
cmpsb
stc
cltd
sub
sub
test
jge
cs
pop
inc
repnz
fs
dec
xchg
mov
xchg
xchg
push
mov
es
das
adc
and
jnp
cwtl
insb
sub
rep
push
fnstcw
add
cwtl
pop
cmp
in
pop
or
pusha
pop
loopne
lods
mov
shlb
pop
add
mov
inc
out
pushf
sub
out
inc
lods
adc
jp
pop
mov
mov
cmp
mov
xlat
mov
ret
push
data16
ja
pop
xor
and
scas
jl
ds
inc
push
xlat
jbe
mov
call
and
mov
push
mov
push
dec
fmuls
lods
out
push
or
xchg
sbb
in
mov
push
fimull
aaa
xchg
into
in
popf
fsub
mov
sarl
out
add
ds
out
pop
scas
cmpsb
pushl
in
sahf
add
mov
test
lcall
dec
inc
cmp
push
fstpl
add
insl
pop
jae
movsb
inc
mov
push
mov
inc
stc
pop
add
testb
aaa
mov
aad
pop
xor
adc
push
adc
add
js
scas
loopne
lahf
push
cmp
cld
push
cmp
add
inc
xchg
or
xchg
add
jbe
and
sahf
inc
inc
out
mov
out
add
adc
push
add
mov
roll
sbb
push
dec
sub
insb
shlb
inc
insl
ror
or
push
inc
mov
clc
push
sbb
and
push
lea
jl
jno
cmp
sub
mov
outsb
or
insb
lods
xchg
inc
mov
loope
dec
test
fldt
jbe
aaa
cmp
arpl
cltd
push
sbb
lret
xchg
sti
inc
cmc
xor
inc
mov
ret
xchg
push
out
js
xor
jl
mov
lahf
pop
push
xchg
stos
stos
cmp
ja
scas
and
negb
and
xchg
xor
das
jecxz
ljmp
lods
div
push
test
xchg
dec
into
xchg
hlt
jne
xchg
popf
pushf
idivb
and
xchg
jmp
push
cmp
xor
pop
cmp
aaa
cmp
cmp
les
imulb
test
xchg
je
dec
lods
in
jo
add
cmp
lcall
fs
mov
sbb
xchg
stos
jle
mov
ficoms
frstpm(287
mov
jo
cmpsb
fldl
popf
mov
in
sbb
cmpl
aad
leave
aaa
mov
jl
mov
cmpsl
roll
and
in
xlat
pop
arpl
dec
jae
push
les
xchg
add
movsb
cmp
hlt
or
in
aas
je
pushf
jecxz
test
jg
clc
mov
mov
das
sbb
cltd
mov
stos
pop
push
jnp
push
sbb
mov
mov
and
cld
pusha
fwait
sbb
sub
mov
inc
jmp
push
dec
dec
push
inc
lods
leave
int
mov
cmp
push
ljmp
add
inc
stos
out
repnz
fsubrs
mulw
sub
out
push
adc
pop
add
ja
addl
test
xor
repnz
sbb
inc
mov
inc
jp
inc
jo
xchg
xor
aam
les
cmpsb
lret
adc
out
fsubrp
inc
push
push
cmp
mov
roll
mov
xor
pop
cld
add
xchg
out
aam
pop
leave
push
in
dec
adc
jp
xchg
add
mov
int3
xor
jnp
xor
out
mov
sbb
dec
ss
add
xorl
shrb
xchg
mov
mov
xor
sbb
stos
lea
xor
jne
sbb
xlat
push
sub
dec
and
mov
xor
dec
lds
xor
sbb
stos
int3
jnp
mov
ficoml
sbb
fmuls
mov
filds
in
jno
sub
imul
mov
popf
push
out
xor
or
lahf
cmp
popf
or
mov
sub
and
push
lods
stos
add
jbe
inc
xchg
xchg
adc
and
cmc
add
dec
or
sub
jp
fldl
imul
jns
sbb
movsl
std
js
mov
cmpsb
test
inc
cld
add
lea
orl
ja
or
outsb
mov
or
mov
pop
mov
adc
dec
xchg
sbb
cmpsl
xchg
fstp
lods
ret
xchg
in
pop
mov
bound
fldcw
out
les
in
xor
adc
or
leave
or
mov
pushf
xor
pop
inc
inc
repz
sti
aaa
pushf
inc
adc
out
sbb
imul
push
gs
ja
pop
outsl
sub
lock
push
out
dec
sbb
push
sti
repz
pop
pop
out
in
addl
xor
dec
pop
rcll
or
xor
iretw
adc
flds
shl
into
push
mov
shll
inc
mov
push
jp
xlat
xlat
mov
inc
rcl
pop
mov
ja
add
sbb
and
push
movsl
cli
lcall
xchg
mov
outsl
push
dec
or
lcall
js
mov
jnp
jb
push
data16
rcr
cmp
lret
es
xchg
xchg
popa
inc
pop
or
push
push
pop
pusha
fisubrl
dec
fidivrl
mov
addr16
shl
jnp
jnp
aas
cmpb
xchg
sbb
mov
dec
mov
mov
out
cmp
fs
xchg
adc
adc
in
enter
push
pop
fimull
inc
lcall
test
sahf
sub
daa
mov
out
dec
mov
out
sti
jo
push
fstps
nop
xchg
inc
cmp
jae
jmp
jb
push
test
pop
xchg
iret
jp
scas
and
movsl
mov
and
fiadds
xlat
or
movsb
and
int
xchg
mov
pop
popf
lret
xor
push
cli
pop
dec
cli
pop
loope
mov
and
inc
xchg
adc
jge
lods
shl
sbb
pop
and
xchg
sbb
add
sub
clc
sub
std
cmp
or
aaa
mov
jae
ret
pop
push
mov
arpl
mov
or
test
and
xchg
cmp
mov
shrl
jecxz
test
out
out
mov
or
out
in
xor
push
add
mov
push
stos
fs
inc
lds
dec
cwtl
fwait
dec
mov
ja
push
ss
fldenv
jmp
hlt
sbb
ja
out
sbb
dec
adc
jae
stos
cs
sar
sub
in
pop
mov
ss
cmp
fnstcw
nop
or
cmp
mov
out
fs
fdivr
gs
xchg
xor
cmpsl
and
insl
sbb
sbb
jl
clc
rclb
inc
inc
test
aad
jecxz
repnz
lock
jo
neg
rcrl
add
xor
adc
mov
push
testl
add
dec
cmp
push
idiv
xchg
jge
sbb
and
jno
jne
inc
lcall
in
inc
mov
into
add
xchg
jmp
mov
loop
push
cld
fwait
lods
outsl
cmp
jmp
dec
inc
mov
cmp
std
pop
lods
pop
mov
in
jns
in
cmpsl
inc
pop
insb
push
bound
fs
mov
add
push
push
add
fistpll
push
daa
mov
imul
shr
cli
xchg
addr16
popf
cmp
mov
dec
pusha
pushf
loopne
mov
inc
aam
jle
pop
stos
push
int3
lahf
adc
pop
push
es
dec
arpl
loopne
data16
imul
mov
adc
and
xor
fidivl
xchg
mov
adc
sahf
or
in
xchg
cli
out
mov
xchg
xorl
adc
pop
pop
test
outsl
imull
lcall
jns
in
lret
add
push
aaa
neg
test
jae
sbb
pop
push
insl
push
cltd
mov
push
sti
dec
out
cmpsl
jp
popa
repnz
xchg
insl
xchg
pop
rolb
pusha
shl
adc
lds
ret
sahf
movsb
adc
jnp
jp
outsl
adc
and
jmp
clc
ret
aad
popa
mov
lock
sbb
push
lds
inc
out
imul
loopne
mov
les
add
mov
push
pop
push
pop
push
icebp
mov
dec
in
lods
dec
fildl
fs
addb
mov
jno
outsb
icebp
sbb
decb
xchg
fnstcw
loope
adc
sub
pop
cmpl
inc
in
push
xchg
fs
adc
push
dec
dec
cmp
mov
xchg
mov
lret
dec
call
xchg
outsl
fidivrs
sbb
lret
mov
test
test
je
popf
add
and
std
scas
xchg
inc
call
sub
jg
sub
leave
jo
rol
aas
cwtl
xor
xor
push
bound
xor
addl
push
jmp
dec
call
popa
fisttps
mov
fsubp
push
daa
rcl
ret
inc
mov
xor
popf
dec
xor
xlat
adc
es
lret
enter
lret
cmp
push
push
incl
jg
mov
adc
outsl
push
mov
hlt
fs
fcmovnu
jmp
in
lock
shlb
push
push
ds
lahf
cmpsb
scas
mov
arpl
dec
mov
roll
mov
je
sarl
jne
jne
adc
cmp
iret
sub
mov
loop
popf
push
mov
sub
adc
and
insb
mov
dec
pop
dec
xchg
adc
out
jo
cwtl
in
sahf
sub
fdivrs
and
dec
aas
sbb
mov
pop
sbb
lea
fisttpll
cmpsl
pop
sbb
pop
ja
mov
adc
mov
enter
sub
cmp
cmp
sbb
das
cld
and
cmp
push
cmp
xchg
inc
bound
jnp
inc
mov
jmp
and
push
lret
pop
adc
xchg
lret
pop
adc
inc
sub
adc
aaa
sahf
xchg
stos
shll
ret
pop
sbb
in
dec
aaa
xchg
movsb
push
push
loopne
push
jl
enter
aas
and
and
xor
push
imul
mov
repnz
call
stos
push
dec
rcll
lret
adc
das
mov
inc
imul
add
mov
loop
xor
ret
xchg
loop
cld
aas
cmp
lea
out
sub
add
push
or
push
int
sahf
adcb
sub
imul
cmpsb
mov
iret
fwait
js
inc
mov
mov
addr16
pop
push
jge
jmp
jno
adc
adc
xor
push
sti
mov
add
aad
fldcw
popa
insl
xor
mov
mov
add
mov
and
clc
test
inc
xchg
xor
lea
into
iret
test
mov
pop
sub
dec
push
and
imull
je
fsubr
ret
pop
xchg
add
imul
jecxz
out
jns
pop
push
or
popf
or
jp
mov
addr16
mov
sbb
loop
jnp
dec
cmp
pop
test
mov
gs
jns
pop
cltd
push
sahf
ss
ret
jge
flds
jmp
sahf
popa
adc
in
pop
xchg
push
ja
mov
leave
cmp
xchg
sti
mov
out
mov
into
rol
jae
lock
adc
dec
mov
or
enter
loope
sub
jp
inc
leave
push
pusha
inc
adc
gs
sarb
fdivs
shll
xlat
xor
dec
cmp
movsb
stos
in
inc
or
adc
sub
sahf
popa
xchg
ds
out
lods
jl
xchg
fildll
adc
jo
add
adc
add
adc
push
popf
sbb
xor
dec
std
das
cld
out
pop
outsl
jmp
jns
sub
cli
push
mov
bound
cmp
movl
mov
adc
or
push
xchg
sbb
jmp
gs
dec
push
loop
sub
fwait
scas
out
stc
scas
lods
dec
jmp
push
fwait
sbb
fcompp
rorl
push
rcl
fs
les
popf
jge
nop
leave
xor
insb
inc
cmpsb
jne
adc
cmp
add
push
es
pop
xchg
cmpsb
into
out
jnp
lods
add
mov
xchg
adc
icebp
mov
data16
push
dec
fistpl
dec
jp
push
push
cs
sti
adc
andl
sub
jbe
sub
mov
dec
mov
mov
aaa
jp
enter
fcmovbe
js
sub
inc
sub
push
sub
jecxz
sahf
adc
imul
and
repnz
cmp
xchg
nop
call
testb
inc
aaa
shrl
lds
pop
jnp
sar
fstl
xor
sub
cmp
notl
fbstp
iret
adcl
mov
add
iret
mov
pop
aas
pop
adc
add
cmp
idivb
movsb
mov
cli
mov
pop
out
sub
and
in
movsb
cmpb
fcoml
cmp
test
inc
filds
mov
mov
mov
adc
inc
mov
sbb
push
adc
mov
add
xor
cld
jne
cmc
rclb
mov
icebp
or
sbb
incl
fdivl
cmp
imul
push
mov
movsl
push
push
out
data16
imul
ds
sbb
ja
mov
xor
xchg
push
lods
pop
adc
fwait
push
jo
ljmp
sbb
std
xchg
ja
xchg
sbb
pop
jmp
pop
push
imul
cmp
jg
incb
lods
mov
jne
dec
jne
mov
xor
or
loop
imul
testl
test
push
dec
aad
mov
add
fsts
mov
insl
into
in
mov
packuswb
xor
pop
jo
movsb
sub
xor
adc
lret
jp
out
aaa
fidivl
pop
pusha
xor
movsb
mov
inc
cmp
push
js
jns
cmp
jmp
fisttpll
lcall
and
repz
sub
lds
xchg
orb
aad
mov
dec
int3
js
cmpsl
sub
adc
fisubs
movl
pop
xor
nop
mov
jno
ljmp
popa
push
mov
ret
mov
movsl
push
mov
mov
sti
ret
shrl
fistpl
lods
out
xlat
insb
xor
lret
repz
xchg
das
adc
push
jo
pop
xor
fnstenv
cli
aaa
pop
inc
xchg
adc
dec
jns
xchg
repnz
dec
and
add
loope
adcl
cwtl
mov
outsl
mov
lret
cmpl
xchg
das
add
scas
scas
sbb
shrb
push
jbe
arpl
mov
mov
sub
jg
inc
inc
ds
andl
sbb
popa
push
into
or
push
mov
mov
repz
lcall
test
das
cmp
out
pop
xchg
jns
cmpl
adc
aaa
cmpsb
sbb
arpl
and
in
or
inc
pop
out
xchg
mov
xchg
lret
pop
lret
push
pop
fs
pop
lock
fstl
test
or
repnz
test
sub
xor
inc
cwtl
inc
xchg
mov
fwait
sbb
ss
push
fcmovnu
xor
pushf
das
jne
leave
dec
xlat
cmpsl
flds
je
xchg
loope
xchg
jo
stc
mov
dec
lods
dec
addr16
imul
stos
push
mov
dec
divb
inc
cmp
cmp
pop
pop
dec
cltd
xor
je
dec
mov
xchg
mov
adc
pop
jnp
add
xor
pop
mov
inc
and
sti
cmpb
push
jp
xchg
out
hlt
es
test
icebp
arpl
addr16
fmull
aas
adc
jno
fimull
push
jb
add
dec
push
out
fwait
ror
insl
sbb
enter
cmpsb
leave
mov
imul
daa
sbb
push
xchg
mov
pop
xor
push
mov
adc
cmp
pop
pusha
fimull
dec
adc
mov
or
jae
mov
in
scas
add
sbb
inc
mov
std
iret
jb
inc
inc
repz
ljmp
lds
fs
lret
scas
int3
mov
aas
shrb
xor
xchg
mov
xlat
sub
mov
mov
xor
sub
and
mov
leave
lcall
iret
sahf
popf
inc
pushf
sbb
out
xchg
xchg
pop
aaa
cmp
cs
mov
inc
and
mov
or
rdpmc
add
and
test
mov
sbb
sub
inc
pusha
dec
lret
cs
js
in
fiaddl
je
jnp
sahf
test
xchg
ds
pop
xchg
test
cmc
int
lret
lods
decl
sbb
xchg
add
test
test
mov
inc
cld
cmpsb
stos
dec
push
sub
mov
pop
out
lock
bound
adc
outsb
jo
pop
sub
sub
push
sub
sub
push
inc
aam
or
mov
mov
jle
add
jno
outsl
movl
jp
adc
rcr
inc
mov
dec
std
push
add
test
ss
shll
inc
mov
mov
xor
les
enter
jle
loope
repnz
push
add
into
arpl
loopne
iret
fistl
in
push
mov
rclb
sbb
icebp
or
ret
shll
inc
xchg
les
xchg
and
pop
xor
pop
push
sbb
js
xchg
imul
lret
ret
push
sub
out
cmpsl
mov
out
leave
lret
mov
mov
pop
inc
out
imul
cmp
lret
and
das
adc
jns
fstl
stc
fs
notb
cmp
push
repz
mov
rclb
inc
jle
mov
scas
mov
sbb
pusha
pop
sti
std
out
and
call
es
xchg
and
into
lret
int
pop
in
cwtl
pusha
movsl
stos
ds
mov
cs
jg
fisttpll
sub
insb
jmp
pusha
fldl
and
mov
or
sbb
push
loope,pn
mov
xchg
inc
test
in
aad
or
insb
stos
push
xchg
jp
jne
xchg
icebp
xchg
dec
mov
popf
add
aaa
ljmp
subb
lock
fmuls
sbb
fimuls
cmpsl
fcmovnu
inc
or
sbb
rol
outsb
int3
xor
cmc
xor
jns
cmp
mov
sub
push
xor
lcall
xchg
mov
dec
int
pop
jb
into
push
dec
sar
dec
js
popa
or
pop
sbb
pop
lret
loopne
dec
jne
mov
mov
sbb
sub
push
sub
fisubrl
outsb
add
adcl
and
cltd
jb
sahf
adc
adc
push
popf
or
notl
xchg
pop
std
mov
fdivrl
insb
in
lahf
mov
or
xor
aad
mov
push
test
xchg
je
mov
mov
or
jg
in
inc
xchg
mov
cmp
lods
cmp
fs
aaa
dec
adc
jmp
es
aaa
or
out
dec
scas
xchg
psubq
lret
sti
mov
sub
mov
test
mov
adc
in
aad
pop
pushf
mov
fildll
cmpsl
xchg
ret
test
cld
aad
sub
repnz
faddl
sti
lds
or
mov
and
in
pushf
lds
scas
fwait
and
push
clc
add
loop
insb
cmp
faddl
xor
jmp
xchg
imul
jbe
pop
pop
push
and
adc
cmpsl
dec
or
lcall
push
inc
push
dec
adc
mov
sbb
dec
pop
rorl
inc
xlat
mov
aaa
sub
mov
sbb
jne
cltd
leave
xchg
insb
lahf
push
inc
cli
cwtl
adc
cltd
fldenv
je
aad
xor
sbb
pop
add
sub
sar
pushf
insb
outsb
mov
push
ja
push
pop
dec
stc
pop
pop
pop
test
hlt
nop
xchg
lret
push
dec
mov
jge
sahf
and
dec
jle
inc
sub
les
mov
fs
lret
arpl
inc
in
jb
xor
lret
mov
mov
mov
or
add
pusha
mov
sub
mov
sti
mov
inc
lock
adc
sahf
fcoml
pop
roll
push
xor
push
imul
ss
mov
dec
fs
hlt
push
and
xorl
push
aaa
cmp
pop
lea
jecxz
dec
cmp
stc
outsl
rcll
cs
adc
cwtl
jg
dec
mov
imul
mov
lcall
addr16
adc
scas
insl
adc
mov
aam
test
jne
xor
mov
lret
cmc
test
lock
pop
mov
pop
mov
fnstcw
bound
xorl
es
das
stos
push
cmp
lahf
add
nop
lahf
clc
cmp
outsb
leave
insb
push
lods
test
inc
cmpxchg
xchg
dec
stc
xor
pop
push
int3
add
xchg
mov
jl
fwait
add
or
packssdw
inc
pop
ljmp
mov
bound
pop
push
xsave
or
dec
jecxz
fldcw
test
mov
sbb
arpl
lock
jmp
hlt
adc
stos
mov
and
enter
inc
pop
mov
xlat
fisttpll
loope
aas
cmp
aam
adc
inc
or
ja
sbb
inc
cli
repnz
xchg
es
push
or
test
xchg
push
mov
leave
ret
aad
pop
imul
inc
cmp
mov
rcr
outsl
push
jb
movl
add
mov
inc
arpl
xchg
push
xchg
push
cmp
mov
dec
and
pop
iret
inc
test
push
pop
push
pop
out
shrb
jecxz
fwait
test
test
ss
push
test
fimuls
sbb
or
lock
add
pop
xchg
out
pop
jecxz
das
jmp
sub
lahf
in
cmp
test
or
push
cmp
in
add
sbb
bound
gs
push
add
dec
jnp
into
dec
test
sbb
lcall
fiaddl
lds
scas
adc
insl
dec
sbb
cli
inc
out
lods
pop
test
in
mov
in
jle
cmp
aas
adc
shll
fsubs
mov
shlb
xchg
dec
insb
xchg
rorl
cld
inc
outsb
addr16
xchg
mov
add
mov
int
fwait
addb
sub
mov
pop
imul
cmpsb
jno
ss
add
or
rep
mov
mov
jne
push
pop
mov
flds
cmp
xchg
and
mov
out
fildl
push
inc
push
mov
cs
adc
call
ja
jl
cmp
mov
cli
cli
mov
daa
dec
mov
jnp
mov
mov
dec
jns
mov
andb
inc
push
imul
or
sbb
sbb
cmpsl
shrb
ja
cmpsb
mov
fisttpl
pop
in
push
cmpsb
xor
loop
inc
or
xchg
test
rolb
outsl
les
push
or
adc
outsl
dec
push
jmp
and
and
mov
add
mov
mov
inc
cmc
add
jp
mov
fs
xchg
stos
ss
adc
stos
xor
ljmp
je
stos
jmp
xchg
pop
and
mov
decb
and
pop
mov
sbb
pop
jb
sbb
cltd
sahf
xchg
xchg
movsl
pop
xchg
jnp
xor
jmp
in
jbe
test
ret
nop
addl
mov
jmp
out
mov
cwtl
xor
add
adc
pop
popf
pop
insb
es
nop
out
pop
sub
cmpsl
repz
dec
push
adc
cld
xor
add
adc
out
jno
arpl
push
testl
repnz
sbb
movsb
movsb
mov
or
data16
pop
dec
daa
das
leave
bound
jge
pop
js
shlb
push
jl
mov
push
fdivrl
popf
cld
add
dec
pop
aas
xchg
jno
stos
stc
mov
xchg
mov
gs
fsubrs
mov
add
outsl
cmpb
repnz
jae
inc
sub
push
pop
decl
idivb
shl
push
jge
xor
pop
jb
pop
sub
fiadds
xchg
mov
hlt
adc
xchg
aad
fistpll
pop
xorb
push
mov
orl
cltd
aad
sbbb
pop
push
aad
inc
daa
add
int
ds
dec
sub
lahf
add
dec
ret
xor
push
sub
lods
mov
mov
arpl
dec
fists
jne
jns
inc
ss
inc
cmp
adc
out
orb
xchg
stc
pop
push
mov
int3
sub
xchg
fstpt
mov
cmp
push
call
push
and
stc
xchg
mov
lods
loope
mov
int
dec
inc
xchg
jb
shlb
jl
aaa
popf
out
push
mov
test
adc
icebp
sub
sti
mov
mov
jecxz
movsb
push
mov
aad
add
mov
sub
mov
xchg
je
cmp
test
or
mov
fmull
es
cltd
insb
add
ss
das
testb
push
shrl
push
sbb
scas
setbe
and
mov
in
mov
divb
idiv
adc
push
stc
sbb
pop
mov
movsb
inc
lods
cmpsl
mov
fsub
hlt
push
outsl
fidivrl
shlb
xlat
in
pop
rolb
lock
inc
or
jne
ret
lret
jno
and
incl
cltd
mov
push
aad
iret
sbb
xor
mull
lahf
fdivrs
aad
add
fimuls
aam
cmp
push
cwtl
jb
adcl
popa
or
in
mov
adc
adc
cmp
push
cmp
sbb
sub
dec
mov
dec
test
pop
push
scas
jmp
lds
jb
inc
addr16
sub
jg
cld
push
enter
aas
arpl
aaa
push
sub
es
and
dec
jle
adc
bound
dec
jg
xchg
cmp
fdivl
cmp
jbe
sbbb
ja
cmc
jmp
adc
hlt
imul
mov
aad
js
or
dec
cmp
test
add
dec
jle
push
mov
shrb
daa
stc
shll
int3
adc
push
jp
in
mov
push
xor
mov
rorl
push
cltd
fcom
mov
sbb
adc
stos
sbb
cmp
push
fcmove
sbb
addr16
sbb
pop
in
jecxz
push
imul
js
clc
mov
inc
adc
sub
push
lahf
jmp
xchg
mov
adcl
cmpsl
bound
int
or
jmp
or
sbb
rcrl
xlat
and
mov
sub
into
cmp
out
xor
fdivrp
int3
in
mov
mov
fldl
jle
ja
xchg
loope
sub
sub
lods
mov
push
xor
and
out
clc
xlat
adc
jp
popa
xor
repz
mov
xchg
pushf
jecxz
in
adc
jae
jae
dec
mov
outsb
aas
push
adc
jbe
pop
xchg
pop
or
lcall
call
ja
les
add
mov
pop
cmp
cmp
aas
adc
xchg
xchg
inc
adc
fidivrl
out
jne
ljmp
xor
sub
iret
shll
mov
push
sub
xchg
pushf
out
pop
cmp
lahf
jmp
aaa
ljmp
jg
mov
push
in
out
xor
movsb
jp
and
ret
push
daa
mov
ret
push
mov
js
pop
dec
dec
inc
sub
ja
cwtl
mov
lret
fnsave
andl
jl
fcoms
mov
clc
rcrb
insb
cwtl
incb
mov
mov
cs
outsl
inc
inc
mov
fnsave
adc
mov
add
stos
or
je
push
nop
mov
insb
mov
mulb
shll
pusha
xchg
adc
ror
lods
stos
cmp
arpl
addr16
and
scas
and
mov
cmp
xchg
mov
push
mov
rcr
cmp
repnz
mov
sbb
push
addr16
gs
iret
leave
sbbl
fmull
jl
enter
jp
push
xor
mov
into
jg
shl
cs
push
or
mov
push
leave
in
inc
lret
ds
dec
adc
cmc
sbb
lcall
mov
jb
outsb
jge
stos
add
or
jmp
inc
pusha
jno
or
inc
push
push
lret
inc
int3
adc
mov
pushl
push
jg
push
pushf
ja
dec
dec
mov
loope
into
mov
test
add
push
mov
xor
fidivs
add
lds
lods
sbb
mov
sub
pop
push
sub
inc
dec
and
sbb
and
pop
push
dec
maskmovq
daa
notl
mov
arpl
neg
cmp
lods
adc
dec
lret
cmc
mov
addr16
xchg
push
jl
push
pop
pop
pop
lds
cmp
test
mov
jecxz
int
cld
aad
jp
sbb
loopne
fnstsw
iret
inc
mov
repnz
pop
push
dec
adc
xchg
stos
xchg
jne
cli
es
inc
aas
test
dec
icebp
adc
loopne
in
repz
daa
in
inc
subl
mov
add
leave
pop
in
les
aas
sbb
or
test
mov
or
adc
jecxz
andl
and
xchg
rolb
inc
shr
insb
andb
cld
sub
pop
sbb
lock
dec
subb
push
inc
cmpsb
popf
outsb
mov
lock
pop
mov
sbb
jns
lds
sbb
sbb
mov
cmp
not
int3
cmpsb
movsb
xlat
pop
stos
adc
movsb
mov
aas
dec
lret
popa
pop
cmp
sbbl
or
push
or
loop
and
mov
sbb
insb
cmp
adc
popf
aas
cmp
out
jle
mov
pop
xchg
mov
jge
sub
test
mov
cli
fiaddl
sub
add
daa
xchg
cmp
mov
cmp
fs
std
cmp
daa
out
or
adcl
test
nop
adc
fisttpl
out
iret
ja
int
iret
sub
daa
sti
mov
int3
dec
mov
ja
fadd
sbb
data16
jnp
or
andb
jne
jl
sahf
out
inc
mov
cmp
mov
cmpsb
hlt
pop
ret
sub
lock
jo
iret
xor
push
rcrb
lcall
mov
dec
and
mov
test
test
jp
xor
iret
outsl
cmpsb
insb
mov
imul
fldenv
push
cmpsl
in
pop
lea
loope
mov
dec
insb
cmp
outsl
dec
mov
imull
add
xchg
add
add
out
sub
inc
cli
sbb
mov
xor
mov
pop
lea
push
add
push
and
movsb
movsl
jbe
xor
push
jns
xchg
jg
out
sub
gs
jo
pop
fsubs
ds
in
push
xchg
test
movsl
mov
loope
mov
into
sub
push
fnstenv
xchg
lock
mov
cmp
jae
ljmp
cld
in
inc
fwait
push
add
cmc
ret
sub
leave
arpl
cmp
push
push
push
popf
or
jmp
and
or
testb
int3
aam
push
xchg
dec
mov
dec
jo
sti
dec
and
stos
adc
mov
pop
pop
rolb
xchg
je
cwtl
push
mov
mov
mov
jp
loope
test
add
adc
je
fistl
loopne
js
sbb
testb
sbb
adc
adc
mov
xchg
or
fistpll
call
je
inc
push
inc
mov
mov
addb
into
mov
das
shll
sbb
pop
mov
fiadds
lock
sarl
lret
addl
xor
into
outsl
rcll
or
sbbb
lea
nop
xchg
popf
cmp
mov
out
mov
jge
sbb
enter
mov
sti
mov
stc
sti
aam
add
mov
scas
mov
mov
jno
sarl
and
pop
cltd
jecxz
xor
sbb
push
fildl
mov
dec
rcll
js
jns
xor
adc
daa
test
dec
pushf
mov
dec
lret
mov
mov
jne
cmp
dec
jae
pop
pop
pop
push
xchg
outsl
inc
nop
mov
fisttpll
or
mov
scas
movb
test
ss
pop
pop
mov
pop
aaa
add
iret
les
mov
xor
inc
shl
push
jno
xor
aas
push
mov
sub
sub
or
ret
push
ret
addr16
repnz
out
scas
cld
mov
cwtl
lods
inc
je
popa
adc
cld
ret
push
add
insb
aad
mov
xor
mov
or
lcall
xchg
pop
mov
inc
clc
add
orl
in
lock
cmp
push
pop
jno
negl
lods
or
in
lods
fldenv
mov
lret
cmp
lock
lods
repnz
pop
icebp
nop
or
dec
and
cmc
xor
xchg
in
or
test
cli
hlt
fnstsw
mov
xor
pop
popa
push
jb
fmull
push
int3
inc
insl
xor
mov
fcmovb
mov
insl
stos
or
ljmp
popf
repz
fcomip
dec
inc
xchg
cmc
js,pn
je
sbb
arpl
insl
sbb
sbbl
mov
sbb
imul
lods
xchg
xlat
shl
rclb
in
mov
push
inc
lret
push
mov
jl
fcom
mov
mov
movsb
hlt
xchg
sub
add
aam
imul
mov
mov
orl
ret
call
rorl
adc
out
fimuls
fisttpl
mov
das
xchg
xchg
cmp
xchg
shl
push
mov
xchg
xchg
and
mov
sahf
test
pop
dec
push
and
mov
movd
scas
idivb
mov
repz
sub
mov
push
bswap
test
imul
xor
adc
dec
xchg
push
xchg
orb
rcr
mov
xchg
out
neg
mov
adc
jp
lar
xor
mov
push
cltd
jne
inc
or
push
jg
lret
jl
inc
pop
aam
xchg
and
jno
mov
shl
lods
push
inc
adc
and
xor
xchg
xor
and
adc
mov
rcl
stos
or
outsb
stos
clc
loop
fstpt
mov
cmpsb
aaa
xor
insl
jmp
ret
fnstsw
dec
dec
mov
ljmp
sub
inc
jmp
mov
gs
lret
lahf
aaa
shll
adc
add
pop
sbb
orl
shlb
fbstp
pop
fsubl
inc
inc
loope
lret
push
nop
movsb
imul
test
aam
mov
out
mov
mov
xor
jnp
imul
mov
sar
out
mov
aad
xor
mov
aam
cs
mov
es
sbb
pushw
lds
imul
jbe
outsl
xchg
repz
dec
mov
adc
aaa
test
out
dec
fstpt
pop
in
loopne
xor
sbb
push
cmp
cld
pop
cmp
add
lahf
xchg
dec
in
in
cltd
data16
push
movsl
jge,pn
xchg
and
jnp
push
jmp
hlt
test
pop
aad
xchg
add
xchg
mov
xchg
fwait
into
imul
lret
xor
iret
xchg
xchg
mov
pop
fwait
sahf
call
cs
or
mov
mov
rcll
test
test
icebp
mov
aam
outsb
stos
xlat
call
int
loope
jbe
mov
aam
mov
test
jecxz
sub
lcall
sti
inc
pop
inc
and
and
sarl
xchg
mov
lahf
mov
sub
adc
mov
adc
cwtl
into
insl
es
fisubrs
xlat
cmpl
push
arpl
cmpsb
in
mov
aas
rol
out
out
mov
push
in
jp
cmp
adc
and
jecxz
movsl
cmpsb
mov
mov
sarl
pop
mov
into
inc
fisubl
loop
hlt
aad
inc
test
stc
dec
mov
and
pop
push
add
das
add
aad
push
repnz
ds
dec
add
xor
es
mov
aaa
sbb
mov
iret
and
test
jbe
in
popa
mov
and
inc
mov
xor
loopne
and
cmp
shll
pop
inc
mov
ds
ret
inc
cmp
outsb
icebp
sar
orb
cmc
ret
hlt
roll
pusha
pop
icebp
adc
jg
enter
pop
aaa
int
push
and
stos
mov
add
cld
dec
lcall
push
lcall
sbb
in
lret
pop
or
fdivrs
ja
sbb
fldenv
and
xor
inc
cmc
mov
pop
push
aam
inc
add
popf
push
jecxz
cs
fldenv
cs
dec
nop
mov
jno
fwait
jg
lret
fs
sbb
or
sub
inc
ficoml
cmpsb
and
lods
sub
sbb
inc
fwait
or
jmp
and
xor
jmp
add
into
xor
scas
aam
xchg
fdivs
xchg
push
xor
sbb
add
sub
test
jb
adcb
or
and
ljmp
lret
sti
outsl
mov
jo
int3
outsb
ja
jb
sbb
xchg
daa
call
sub
clc
aad
or
xor
xchg
ljmp
inc
pop
jecxz
cmp
sub
arpl
popf
sub
mov
add
mov
test
cmp
sub
movsl
shrb
jmp
xchg
dec
in
fildl
addb
outsl
nop
dec
lds
nop
and
cld
pop
xor
push
lret
outsb
mov
jmp
xchg
out
add
fbstp
cmp
leave
rcrb
leave
xor
std
lock
pop
and
or
and
mov
iret
cmpb
fcoms
push
test
dec
sub
fsubrl
jb
popf
sbb
loop
push
repz
insb
ret
in
xor
js
cwtl
aam
cltd
jne
or
pop
cmp
push
cld
adcl
lea
call
jmp
mov
jmp
sub
imul
mov
pop
int
mov
and
pop
stos
jns
jne
mov
movsb
add
inc
sub
push
ljmp
out
int3
jp
pop
jp
jmp
add
jl
into
test
adc
add
bound
bound
js
leave
cmp
cmpsb
push
imul
add
icebp
fs
or
sbbb
mov
adc
sub
lea
hlt
divb
pusha
mov
xchg
shlb
sub
xchg
mov
sbb
push
push
hlt
enter
inc
inc
mov
cltd
mov
or
out
rorl
cmp
jbe
aas
pop
into
pop
test
std
imul
test
ret
sbb
in
es
outsb
pop
push
imul
imul
stos
fcomps
lods
mov
das
nop
inc
adc
mov
cmpsb
mov
andb
mul
cmp
inc
lds
xor
jbe
jb
pop
in
fs
sub
jae
adc
pop
push
dec
test
pop
and
xchg
out
lret
sbb
push
mov
pop
xchg
stos
pop
jg
xchg
xor
inc
pop
and
mov
sbb
fcomps
pop
push
or
cmp
xor
push
adc
mov
add
mov
sub
ret
jp
push
and
mov
inc
outsb
sub
imul
xorl
sbb
jmp
mov
mov
mov
jns
out
popf
adc
pop
fadds
ss
xor
pop
lods
cmp
push
fisttpll
adc
pop
ret
inc
sar
cmp
xor
shrl
xchg
mov
add
add
nop
push
xchg
adc
ds
dec
insb
sub
int
icebp
arpl
call
mov
dec
lahf
jge
aad
sbb
jl
ror
jae
out
into
adc
imul
or
fisttpl
dec
inc
jecxz
sub
sbb
or
jge
jg
adc
mov
ficompl
sbb
scas
movsl
cmpsl
push
sub
xlat
mov
imul
jp
ret
dec
pop
fidivs
cltd
out
mov
sbb
sbb
mov
iret
incl
xlat
and
dec
in
imull
fs
sti
pop
jmp
dec
test
inc
fldl
cmp
ljmp
fadds
mov
sbb
daa
je
add
jg
dec
cwtl
insl
es
mov
or
enter
jns
sbb
pop
xchg
fildl
shl
fdivrs
adc
out
inc
dec
js
scas
repz
xor
std
jo
jmp
cli
in
xchg
pop
cmc
or
pop
add
lock
inc
iret
stos
fisubrl
aad
movsl
popl
or
iret
aad
xchg
xchg
jo
dec
mov
jp
inc
xor
jo
enter
into
dec
pusha
loope
pop
sbb
adc
xlat
or
mov
call
scas
in
idiv
jbe
cli
test
fistl
jge
add
out
mov
dec
sub
jmp
sahf
aad
pop
mov
dec
and
or
imul
test
pop
lds
mov
push
pop
sbb
das
mov
pop
dec
in
loopne
xchg
into
adcl
push
orb
test
jle
bound
sahf
nop
xor
adc
stos
xor
popf
fnstcw
mov
push
repz
mov
and
test
daa
jle
in
mov
mov
jae
inc
push
push
aam
dec
aam
sarl
mov
std
into
xor
adc
shl
dec
cmp
mov
pop
stos
daa
lcall
xor
test
addr16
jecxz
je
and
lahf
mov
mov
loope
push
lods
mov
adc
cmp
cmp
enter
sbb
loope
fstps
mov
js
or
pusha
sub
add
pop
pusha
cmp
adc
sub
outsl
mov
mov
lret
pop
dec
and
cli
jmp
adc
cltd
mov
bound
sub
cltd
in
movsl
xor
cmp
lahf
adc
or
xchg
test
shll
fistpll
xor
lret
in
lahf
cmp
mov
xor
lods
shll
test
inc
push
or
adc
aam
mul
cmp
lods
aaa
cmpsl
jo
insl
inc
mov
jg
gs
jg
inc
dec
xchg
bound
stos
iret
cltd
and
jle
cmp
cmp
dec
pmaddwd
jecxz
ja
test
mov
nop
in
fnsave
jbe
in
add
add
push
xor
mov
fildl
in
shlb
adcl
pop
repnz
xchg
jne
xor
inc
cmp
nop
ljmp
js
add
mov
mov
xchg
rcl
sub
lea
xchg
inc
out
rcrl
cmp
xchg
pop
rolb
xlat
cwtl
jmp
das
inc
sbb
xlat
xor
bound
push
adc
insl
jo
xchg
xlat
mov
imul
push
push
lock
inc
pop
fisttpl
or
push
clc
in
xchg
xor
xchg
and
jecxz
aad
push
mov
mov
mov
pushl
cmc
sub
jecxz
ret
gs
insl
insb
push
or
ret
pop
ss
pusha
popf
bound
je
jle
and
mov
xchg
jp
push
cs
inc
rcl
inc
lods
adc
lock
sub
mov
mov
imul
mov
inc
push
in
ljmp
and
inc
or
shrb
enter
jns
icebp
es
add
xor
jbe
hlt
push
lea
pop
cmpb
aaa
sahf
rcll
cltd
dec
test
or
dec
push
xchg
daa
ret
loop
sub
movsl
push
jb
sbb
pushf
xor
xor
daa
std
and
cld
sub
test
adc
pop
push
cld
adc
fiadds
jnp
mov
jb
xor
push
leave
xor
adc
jno
xchg
mov
xchg
pop
xlat
xlat
jl
jecxz
sti
imul
cwtl
popl
adc
sub
in
sarb
add
scas
sbb
or
cmp
push
pop
sub
or
into
das
mov
mov
repz
mov
inc
mov
or
in
testb
ret
das
push
mov
aam
orb
fidivs
cmp
aam
cltd
pushf
add
jne
frstor
call
mov
dec
xor
popa
rol
mov
insl
inc
clc
leave
imul
jle
sub
dec
arpl
jge
add
sbb
mov
pop
mov
and
in
into
lock
add
inc
fwait
ja
repnz
mov
stc
loope
pop
test
rcrb
jge
sbb
push
xchg
sub
push
cmpl
aad
jbe
cmpsl
sti
divb
fidivl
stos
mov
icebp
mov
xchg
andb
xlat
mov
adc
pop
inc
and
lahf
in
gs
xor
jmp
xchg
dec
and
outsl
xor
cmp
sbb
mov
outsb
mov
outsb
inc
out
cs
ret
stc
addr16
mov
push
push
and
push
in
cmp
sbb
movsl
psubq
movsb
jge
lret
jl
dec
test
or
inc
out
mov
cmp
in
js
clc
in
mov
repnz
mov
test
mov
jge
rol
inc
pop
bound
enter
mov
push
adc
pop
mov
pop
outsl
jecxz
mov
mov
sbb
mov
jmp
cmp
pop
pop
insl
cwtl
or
dec
jp
sbb
ficoms
pusha
fidivl
fadd
push
push
pop
shlb
fwait
test
xor
ja
std
dec
insl
mov
sbbb
mov
mov
or
fisttpl
lea
fildl
pop
out
inc
insl
stos
gs
cmpsl
adc
cmp
movsl
jb
xor
add
nop
sahf
add
popf
bound
push
outsb
jge
xchg
mov
sahf
push
sub
push
xor
outsl
sub
je
das
pop
jl
les
mov
or
add
cwtl
adc
or
ret
cmp
pop
sbb
out
or
inc
data16
jmp
bound
mov
push
push
cmc
in
aad
jnp
push
mov
ficoms
pop
mov
fcom
and
cld
loopne
mov
out
pop
dec
shll
daa
out
mov
shlb
lods
outsl
gs
popf
add
call
lock
mov
stos
fildll
jb
mov
icebp
jle
bound
jge
jns
movb
pop
imul
add
ja
pop
adc
jns
pop
call
stos
icebp
pop
inc
jo
subb
jmp
outsb
xor
sbb
les
bound
fidivrs
cld
test
push
sbb
ret
popf
xchg
clc
fstpt
inc
cmp
outsl
sar
mov
dec
jne
in
in
jnp
mov
add
subb
xchg
mov
pop
int
xor
std
adc
mov
enter
push
dec
loop
cmc
add
mov
or
setp
cmpsl
in
ror
lods
jno
mov
paddsb
xchg
shl
xchg
pop
jns
es
jae
add
mov
cwtl
mov
xchg
pushl
daa
dec
push
imull
shl
xchg
pop
sub
imul
das
mov
cmpsb
or
gs
mov
test
adc
movsl
fcoms
add
or
lock
or
clc
xor
in
out
lds
jo
call
mov
push
xchg
dec
in
xchg
fwait
pop
imul
cltd
push
movsl
insl
adc
rolb
les
lahf
jno
and
sbb
or
clc
xor
sub
and
sets
ljmp
add
mov
push
in
int
sbb
das
rcrb
ss
add
lcall
push
pop
xor
xchg
or
shlw
out
jp
mov
movsb
out
xchg
stos
cwtl
sub
add
scas
hlt
and
loope
and
les
pop
cmove
mov
loope
mov
jl
insl
cmp
xchg
jge
into
mov
inc
mov
sbb
movsb
ficoms
aad
adc
pop
push
mov
leave
sbb
ljmp
ss
and
sbb
push
sub
imul
gs
xor
roll
xor
lret
aas
shll
test
lods
and
jmp
cs
call
jmp
jbe
out
enter
push
sbb
push
xchg
imul
mov
test
or
fadd
lds
or
adc
dec
fstpl
push
imul
loop
xchg
push
popf
mov
hlt
imul
popa
mov
push
or
fistps
xor
pop
jne
in
arpl
cmp
pop
xor
add
es
rorb
jl
ljmp
outsl
mov
in
xor
and
lcall
adc
xchg
add
mov
xchg
fwait
fxch
xchg
dec
lods
or
lds
sbb
or
jne
mov
xchg
xchg
mov
and
or
inc
dec
cmp
lret
ret
les
iret
xor
inc
cld
sbb
lahf
jge
sbb
inc
jge
sarb
in
add
rorl
out
out
aaa
popf
hlt
push
sbb
fisubrl
pop
and
sub
dec
repz
fs
xor
shlb
cmc
mov
std
sbb
mov
loop
fcompl
daa
xor
insl
cwtl
or
mov
imul
xchg
or
mov
lods
aad
jg
cmp
mov
xchg
stc
jnp
xor
fmuls
jns
adc
mov
rcl
into
cwtl
add
gs
jge
enter
movsb
mov
or
mov
push
pop
xchg
cs
scas
sub
aaa
rorb
call
movmskps
imul
cmp
insb
add
loop
faddl
addr16
or
mov
mov
outsb
sbb
out
loop
mov
cmc
pop
nop
and
dec
loope
sub
push
mov
and
rcl
insb
aaa
fiadds
scas
sbb
out
add
adc
es
gs
pop
xchg
test
es
inc
add
add
xor
stos
icebp
mov
push
bswap
pop
xor
sahf
jecxz
in
call
mov
sbb
fnstcw
rcrl
jne
pop
push
sbb
test
sbb
pushf
in
jl
jns
push
inc
imul
cld
pop
jae
pusha
sbb
hlt
scas
push
lods
mov
pop
push
in
xchg
pop
sbb
mov
xor
sti
mov
cltd
mov
push
repz
movsb
adcb
or
adc
sahf
rol
and
and
outsl
push
pop
test
mov
sub
cs
loop
fisubl
push
cltd
iret
in
sahf
insb
mov
and
dec
ljmp
or
iret
arpl
sbb
aad
call
and
mov
xor
icebp
andb
xchg
lea
aam
in
repnz
or
mov
fdivs
adc
aad
xchg
bound
filds
movsw
js
into
test
xchg
inc
jp
lcall
popf
insl
negb
mov
sti
dec
js
jl
xchg
pop
cmp
leave
mov
inc
dec
rolb
scas
pop
dec
sbb
cmc
jmp
jge
movq
ret
loopne
dec
sub
cltd
xchg
cmp
arpl
aaa
mov
ds
xchg
jp
lods
inc
data16
or
fwait
aaa
xlat
movsl
lods
lock
addr16
cli
stos
add
dec
bound
ss
scas
cmp
inc
push
nop
pop
lret
arpl
xor
mov
push
jl
xorb
dec
rcl
sti
pushf
cmp
insl
enter
es
test
cmp
xor
insb
imul
int
or
xor
in
pop
push
daa
xor
outsl
mov
int
mov
push
popf
push
push
mov
aam
mov
push
out
fwait
out
adc
xor
jb
nop
pop
pop
xor
mov
cltd
add
mov
sub
mov
mov
adc
jno
push
fcmovne
and
add
xor
and
jbe
test
nop
out
jg
jmp
les
adc
xchg
dec
popf
dec
sub
push
mov
repz
jecxz
sub
scas
lea
insb
cltd
mov
fidivrs
out
gs
or
cli
push
mov
jno
jl
cld
and
test
push
sarb
aad
xchg
mov
stos
std
pop
hlt
fdivl
pop
xchg
sub
sbb
je
add
imul
sbb
sub
inc
dec
lret
cld
xchg
iret
or
pop
or
lret
shr
sahf
aad
push
imul
cltd
mov
or
mov
fmuls
outsb
jae
mov
add
int
js
cmp
imul
mov
psllq
pop
pushf
adc
pop
loopne
imul
ds
addb
inc
add
xchg
pushf
lods
cmpb
scas
and
sbb
pop
mov
or
mov
xor
or
daa
and
xchg
xlat
sub
fsts
fisubl
cmpsb
js
jne
jbe
add
mov
smsw
cmp
out
shr
mov
dec
mov
shrb
lea
fwait
or
popf
and
jle
jmp
mov
xor
mov
sbb
outsl
inc
shlb
jne
sub
fsin
lods
lods
std
jnp
cmp
inc
repnz
push
outsw
das
sub
sbbb
jnp
adc
and
nop
inc
xchg
cs
fmull
mov
sbb
or
cwtl
lds
adc
add
mov
int3
test
sub
xchg
xor
das
dec
push
dec
loop
aas
enter
pop
mov
sub
jl
adc
xchg
jbe
xor
icebp
jmp
sbb
rcrl
or
and
xorb
xchg
mov
fdivrp
pop
xor
rorl
shl
dec
push
mov
push
adc
ror
ret
or
jg
repnz
and
add
cmp
adc
and
loope
or
mov
lods
lea
in
jl
cmc
mov
sub
mov
add
cli
js
xchg
inc
scas
add
pop
in
jp
mov
xor
inc
inc
popf
outsl
mov
out
mov
xlat
or
mov
cmp
imull
sub
insl
in
cwtl
inc
mov
xor
pop
ds
leave
or
iret
mov
cmp
jle
loop
adc
outsl
aas
cmp
ficoms
pop
add
sub
jo
mov
insl
sub
lods
pusha
hlt
pop
insb
je
gs
jp
and
cmpsb
pop
aam
xor
das
push
xchg
mov
jo
jmp
sub
xor
adc
pop
sahf
pop
inc
jecxz
inc
fsubr
int
jae
fwait
xchg
scas
cmpl
and
and
sbb
rorl
add
pop
xchg
into
push
je
mov
insl
push
frstor
mov
mov
movsb
arpl
inc
test
addr16
sub
mov
mov
inc
mov
gs
sub
pop
inc
adcl
fstpl
xchg
jnp
lock
inc
sub
shrl
cmp
stc
dec
sub
hlt
movsl
divb
lret
loopne
lret
sbb
mov
xor
fsubrl
enter
mov
mov
rcl
sbb
and
ljmp
cmpsl
jecxz
pop
cld
pop
jne
mov
adc
push
rcrb
jl
or
mov
enter
ret
jo
lds
push
movsb
xchg
add
orw
mov
jle
ss
xchg
lret
sbb
out
pop
jecxz
xchg
xchg
fnsave
clc
mov
pop
leave
pop
jg
or
test
adc
and
sbb
xchg
xor
cmpsb
pop
scas
insl
cld
loopne
lds
imul
sti
frstor
jo
mov
mov
outsl
lret
aam
push
repz
adc
ja
mov
add
push
aaa
fistpl
sub
lods
jb
insl
cmp
add
sbb
gs
dec
cmp
xchg
repnz
clc
enter
adc
and
dec
mov
mov
sbb
cmp
stc
add
jge
bound
les
test
push
mov
pop
lods
mov
std
and
adc
rcrb
mov
mov
rcrb
mov
xor
and
mov
mov
adc
mov
add
mov
adc
pop
loop
jb
daa
add
rcr
in
pushf
iret
cmp
cmovle
xor
fisubrl
xchg
fiaddl
mov
popa
fsubrl
shlb
mov
push
and
sbb
test
jae
mov
sbb
push
and
fbstp
ljmp
aas
out
jo
out
mov
in
imul
or
loop
dec
sbb
shrl
std
aam
popl
pop
cmp
xchg
stc
mov
movsl
lock
xlat
cmc
or
stc
lcall
call
mov
sub
jns
push
loop
hlt
sub
adc
jmp
adc
xchg
test
filds
mov
lods
push
pf2id
out
iret
clc
jmp
mov
sub
rol
hlt
add
mov
or
mov
cmc
and
clc
adc
loopne
jge
inc
sarl
sbb
je
and
enter
sub
cmp
scas
cmp
dec
mov
jb
int
frstor
add
cmp
xchg
or
mov
or
mov
lock
push
mov
xchg
mov
jb
out
scas
pop
ret
aaa
sub
repz
cmp
lahf
adc
outsb
lret
dec
ss
add
jg
push
sub
pushf
repz
sbb
stc
push
jmp
dec
pop
xchg
and
jae
sub
jne
cmpsb
sub
cmp
ljmp
inc
or
cltd
rorl
rcr
cmpsb
test
sbb
pop
push
cmp
xchg
pop
pop
push
or
repnz
mov
dec
js
lret
fldcw
lock
or
cmp
icebp
jmp
negb
mov
cmp
inc
jbe
push
orl
nop
test
push
xor
sub
xchg
je
jnp
xchg
mov
mov
sti
or
pusha
jbe
jmp
in
xor
fiadds
insl
ds
xchg
pop
jbe
jmp
hlt
outsb
out
pop
in
pop
js
inc
rcr
test
fisttpll
ss
dec
popa
pop
subl
clc
fwait
jmp
inc
je
xchg
lods
repz
je
push
mov
and
test
inc
sbb
sti
sub
mov
pop
lahf
sbb
jno
out
call
mov
insb
pop
imul
pmuludq
sub
aaa
in
sbb
int3
dec
pop
mov
lods
adc
inc
cmp
push
mov
std
int3
or
insl
sub
xchg
or
lods
je
jo
loop
cmpsl
jb
test
cmc
imul
in
xlat
xchg
aaa
cmp
mov
mov
rclb
mov
cmp
mov
sub
cmp
nop
xchg
inc
mov
cli
push
mov
sbb
jne
sub
dec
shlb
test
jb
xchg
lods
jp
mov
daa
push
lds
mov
add
sub
sbb
iret
push
pop
xor
loopne
imul
add
data16
pop
lcall
inc
mov
repnz
xchg
mov
sub
push
aaa
xor
jl
in
fisubl
test
clc
and
repz
xchg
cmc
jp
lret
hlt
or
repnz
dec
loopne
push
movsl
mov
mov
popf
rcll
xlat
adc
leave
ja
fistps
outsl
mov
adc
addr16
into
pop
cmc
add
fdivrl
mov
fwait
mov
icebp
sahf
pop
cmp
mov
int
xchg
jne
sti
aas
cmp
push
sahf
int3
repnz
pop
test
mov
sub
xchg
js
cvtps2pd
jmp
jle
je
pop
mov
dec
sbb
out
fldenv
cwtl
in
outsb
cmp
cmp
push
pop
cmp
out
addl
loop
imul
inc
stos
stos
cmpsb
fsubrp
cmp
and
dec
dec
mov
sbb
call
out
enter
sub
add
repz
movsb
fcomps
jb
test
sub
movsl
inc
xchg
pusha
mov
stc
mov
sub
popf
fldcw
jl
ret
ja
cld
pushf
das
shrl
stos
xchg
insb
loop
mov
fisubrs
lahf
xchg
push
punpcklbw
adc
cmp
cmpsb
hlt
pushf
cli
cmp
jno
divl
cmp
test
fmulp
add
jg
mov
or
cmp
pop
cmpsb
das
iret
mov
test
bound
sub
stc
in
mov
lock
mov
cmpsb
movsl
shlb
out
aad
and
in
dec
mov
nop
push
loopne
cmc
or
lods
scas
cmp
jle
adc
faddp
or
xlat
cltd
cmpsb
arpl
adc
cmpsl
pop
add
movsb
iret
adc
fdivl
adc
hlt
or
jecxz
out
pop
jbe
push
pop
loop
dec
jbe
cltd
ftst
pop
jnp
inc
scas
sbb
cmpsb
sahf
add
pop
ja
stos
rcll
pop
call
fadd
push
into
sbb
loope
mov
dec
adc
push
imul
dec
push
xchg
and
sti
adc
push
and
push
stc
in
in
jno
into
daa
repz
add
xor
lret
mov
mov
dec
jae
mov
pop
cmpsb
leave
fsubs
push
out
jb
jg
cltd
add
adc
jns
jb
cmp
fwait
scas
mov
push
dec
stos
push
loopne
adc
jno
mov
xchg
ss
pop
xlat
mov
or
in
rorl
or
mov
pop
jmp
out
cmp
call
repz
aaa
divl
inc
es
out
mov
and
gs
adc
xorb
jmp
and
push
mov
push
push
cmp
loopne
lret
fists
jl
lock
dec
inc
adc
mov
jno
cmp
leave
and
and
popa
js
int3
and
clc
xchg
cmp
sbb
shll
xchg
dec
cmc
mov
int3
int3
mov
mov
sbb
ret
pop
aam
aaa
sub
mov
hlt
cmp
or
mov
add
fs
sub
pop
adc
push
lcall
lods
iret
jb
jmp
adc
jp
fiadds
mov
mov
les
loop
out
imul
push
sti
aas
sbb
sub
movsl
inc
xor
mov
je
sbb
xchg
jg
and
jle
sub
das
lods
push
mov
mov
mov
cmpsb
sbb
push
lds
ret
xchg
lds
popa
mov
jae
and
mov
sbb
sub
into
xorb
xor
pop
loopne
test
sbb
xchg
int
fcomps
xor
lock
xchg
ss
push
push
cmp
shlb
repnz
or
ljmp
cmp
inc
pop
xchg
sub
jae
imull
into
mov
cltd
sbb
hlt
lret
enter
les
sbb
ja
in
pop
shl
mov
nop
lret
mov
push
shrb
pusha
xor
add
add
pop
mov
mov
and
and
mov
leave
fldl
dec
es
inc
sbb
lods
fimuls
cmp
call
inc
xchg
test
mov
dec
das
inc
push
loopne
std
out
inc
negb
test
mov
push
xchg
inc
jnp
in
lret
or
fstpt
jecxz
mov
sti
stos
cmpsl
cs
je
incl
sbb
into
mov
xchg
out
xor
int
popf
push
and
xor
in
mov
jmp
fiadds
in
sub
outsl
pop
jle
dec
ss
jb
cltd
bound
jmp
stos
frstor
test
gs
subb
ficoms
int3
lret
scas
push
fbld
pop
sbb
scas
sub
mov
dec
dec
sub
test
aad
push
push
aaa
adc
sub
jae
pop
loope
out
and
stc
mov
sti
scas
clc
sub
lods
lcall
adc
jp
add
xor
in
push
push
cmp
imul
sub
or
xor
mov
rcr
pop
xchg
inc
adc
pop
xchg
push
negb
xchg
push
lret
sbb
insb
jns
mov
ret
mov
and
cmp
sti
insl
sahf
xchg
jb
aam
dec
xchg
dec
xor
sub
int
mov
mov
stos
pushf
xlat
dec
out
imul
jns
in
movsl
adc
sbb
push
push
leave
mov
js
or
lret
adc
repz
out
test
jo
add
popf
or
add
jb
adc
js
adc
push
mov
mov
out
sub
xchg
pop
shrl
lret
push
rorb
fnsave
jmp
xor
sbbl
test
mov
jmp
mov
jmp
rcl
negb
ret
cmp
cld
les
cmpsb
sbb
lods
inc
sbb
sub
jbe
mov
push
testb
pop
test
lgs
adcl
mov
mov
jecxz
nop
roll
test
pushf
cmpl
sbb
sub
mov
sbb
mov
incl
in
jecxz
xor
lds
mov
ret
daa
lcall
or
ja
push
cmp
mov
fisttps
cs
sub
in
test
cmp
mov
sbb
dec
mov
sbb
push
stos
xchg
mov
push
ficoms
lea
mul
xor
ror
stos
fcomps
mov
xor
insb
or
int
das
and
jo
lcall
aaa
mov
dec
push
xor
aas
dec
insl
rcl
xchg
aam
mov
fbld
adc
push
push
and
pusha
in
pop
mov
inc
es
jl
adc
sbb
pushf
pop
jne
cmpb
fstps
or
repz
jg
scas
hlt
rclb
push
leave
sahf
jne
jnp
les
idiv
push
cmp
nop
pop
movsb
xchg
js
sbb
xlat
dec
mov
sbb
lods
xchg
jp
gs
cwtl
aaa
dec
scas
mov
popa
and
xor
test
or
repnz
dec
push
int
test
jo
ret
mov
stc
adc
push
icebp
imul
ret
jge,pn
loope
mov
sarl
mov
push
loopne
dec
mov
stos
call
pop
jae
dec
test
or
pop
ljmp
mov
je,pt
repnz
movsl
push
pop
scas
test
mov
sbb
mov
imul
lahf
in
lods
jbe
xchg
dec
push
popf
adc
call
cld
sub
cmp
fbstp
mov
fisttpll
adc
pop
cmp
adc
loop
into
insl
in
mov
xor
cmovnp
ss
cli
and
mov
pushf
add
pop
mov
and
cmp
stos
lods
cmp
lds
sbbl
aas
xor
aam
dec
imul
lods
jbe
jmp
cli
mov
addr16
cld
adc
push
aam
and
je
sbb
and
jo
sub
ds
mov
add
into
pop
les
or
mov
ret
push
lcall
cld
lahf
and
imull
mov
mov
out
sbb
in
out
ljmp
outsb
pop
dec
adc
outsb
inc
cmp
fisubrs
outsl
hlt
jae
jne
add
je
push
pop
lret
sub
cmpb
inc
into
cmpsb
sub
cmp
lds
mov
xlat
insb
lahf
outsl
mov
adc
test
xorl
or
iret
add
cmpsl
and
push
jge
rol
insl
lea
loop
gs
sbb
pop
lret
mov
mov
loop
pop
je
es
in
pop
repz
add
mov
cmpsb
mov
roll
add
divb
sub
xor
test
ja
leave
add
rsqrtps
mov
mov
mov
mov
addl
sbb
push
jl
popf
dec
push
sahf
mov
aam
or
scas
sub
js
xchg
sbb
dec
mov
adc
ret
jp
test
mov
int3
dec
sub
lea
xchg
push
fsubrp
scas
cmp
xor
int
jnp
cmp
ret
xchg
pop
std
sbb
lds
cwtl
xlat
movsl
and
mov
jecxz
lahf
mov
inc
mov
dec
addb
icebp
mov
sub
cmp
jecxz
and
addl
sarl
push
dec
lcall
cmpl
vcvtps2dq
shll
js
push
testl
rorb
sbb
aam
add
insw
adc
push
loop
sub
or
cmp
subb
ja
enter
andl
scas
inc
xchg
bswap
mov
cs
mov
stc
jecxz
inc
xchg
dec
stos
imul
or
sarl
sub
rol
mov
aas
xor
lock
shlb
loopne
sub
shll
outsb
test
loopne
mov
fidivrs
mov
sub
pop
lret
pop
mov
fcoml
cs
aaa
jae
mov
inc
and
lea
inc
dec
adc
push
sub
pushf
shrl
jp
clc
cmp
inc
xlat
orb
adc
push
mov
lods
cld
int3
loop
jecxz
mov
orb
rcl
sbb
push
out
cli
in
sbb
pop
mov
mov
push
bnd
jns
mov
mov
sbb
push
add
rcll
mov
lret
notb
push
je
mov
shlb
cmp
sbb
das
sbb
repnz
push
or
lods
ss
pop
lret
js
ss
int3
xor
outsb
xor
xor
sub
in
lahf
push
inc
outsb
das
fsubs
adc
xor
push
dec
mov
inc
pusha
mov
jmp
vmovups
add
into
mov
mov
push
sarl
sti
test
lock
jge
in
int3
cmp
ret
push
pushl
dec
dec
inc
in
pop
cli
push
pop
inc
jmp
pop
mov
jno
enter
pop
jg
xchg
jo
mov
push
out
mov
test
mov
fidivl
imul
iret
adc
xor
movsb
fidivl
pop
xor
mov
cli
rolb
jae
call
ret
fwait
mov
cmc
cmp
out
and
dec
sbb
repnz
lret
les
test
jmp
xor
popa
xor
rclb
mov
idiv
imulb
fcmovbe
repnz
dec
jg
adc
fdivs
sbb
in
outsb
popf
in
cmp
push
movsl
pop
adc
mov
lret
ja
and
mov
and
xchg
xchg
mov
icebp
subl
or
mov
push
or
pop
jb
cmp
jns
push
cmc
loope
push
adc
jae
jg
les
inc
or
subl
orl
xchg
iret
imul
daa
jns
inc
pop
pusha
xor
and
idivl
outsl
popa
aaa
push
insl
std
mov
or
mov
and
push
mov
pop
call
int3
add
shlb
scas
mov
push
test
insb
inc
mov
sbb
pusha
pusha
or
stos
mov
add
cmp
mov
icebp
sbbl
push
and
shrb
popf
inc
sub
jns
ret
xor
inc
jbe
imul
jb
xchg
or
mov
stc
jle
dec
cld
stos
fdivrl
add
push
loop
xchg
and
shl
ljmp
enter
fwait
lock
shrl
fldt
and
jg
mov
jl
js
xor
mov
xchg
dec
cmpb
lods
stos
popf
addr16
pop
adc
inc
lahf
or
outsb
sub
jp
xchg
xor
pop
stos
aaa
stc
pop
xor
and
add
movsb
fucomi
xchg
pop
sbb
push
daa
inc
lret
xchg
out
fwait
movsb
aad
inc
je
mov
arpl
push
and
sarl
pop
adc
lret
dec
movsl
add
out
inc
leave
pop
adc
jbe
mov
pop
loope
adc
outsb
mov
and
js
push
mov
mov
fcompl
mov
ret
xchg
pusha
lock
outsb
xor
adc
test
jp
xchg
out
jb
dec
mov
dec
cmpsl
jge
je
cmpsl
and
sbb
cmp
lret
push
test
cmp
add
pop
xor
xlat
std
insb
fimuls
rcll
rcrb
jae
adc
into
andb
hlt
pop
insb
shr
and
ss
jo
js
loop
dec
cltd
lret
test
out
out
imul
xchg
dec
adc
cmp
cmp
mov
cmp
push
pop
into
pop
dec
xchg
pop
lret
or
movsb
das
out
scas
push
jmp
lahf
mov
call
incl
jge
aaa
loopne
pop
adc
cmp
pop
cmp
sbb
sbb
mov
repnz
jo
and
push
ss
testl
jge
scas
dec
mov
es
mov
sbb
jne
pop
mov
popf
push
add
xchg
mov
sub
xchg
mov
icebp
aam
adc
out
xchg
sub
ljmp
jns
jg
loopne
jo
repz
imul
xor
inc
and
jnp
stos
dec
xchg
jmp
adc
mov
sti
mov
or
pop
ljmp
sbb
scas
push
cmp
adc
int
cwtl
stos
jl
daa
pop
neg
inc
jmp
or
adc
mov
pop
enter
stc
pop
loopne
mov
and
xorb
pushf
jb
push
mov
push
inc
iret
sbb
test
add
or
or
fnstsw
xor
sbb
and
fwait
aam
sbb
add
mov
fldenv
and
in
aas
outsb
jge
ja
std
jl
mov
fcomp
push
pop
test
scas
fstpt
cmpsb
ret
loop
jne
aaa
jb
in
scas
pop
mov
cld
das
push
cmp
push
lea
mov
test
ds
cmp
mov
clc
jp
popf
sti
sti
ret
jmp
xchg
jp
test
fcmovu
adc
ret
les
xor
in
cmp
dec
imull
pop
xchg
aam
call
cmp
xchg
fists
mov
sbb
in
fs
adc
jle
pop
xor
inc
dec
loop
dec
push
push
pop
das
cmc
test
dec
push
add
xchg
mov
loop
sarl
imull
xor
sub
cmp
mov
int3
pop
or
mov
pop
inc
mov
ljmp
hlt
jecxz
jge
cmp
push
xor
adc
mov
int
adc
push
pusha
xlat
push
fildl
xor
sub
xlat
and
stc
mov
scas
mov
cmp
or
xor
addb
sbb
adc
cmp
pop
fiaddl
mov
pop
sub
push
out
pop
insl
cmpsl
mov
fsub
jmp
sub
jmp
cmp
stos
push
adc
push
inc
gs
add
and
push
out
out
fs
mov
daa
negb
inc
inc
and
ja
int
xchg
cwtl
and
adc
dec
cmp
clc
ret
cltd
je
aaa
cli
add
jge
cmp
shl
out
loop
cmp
std
pop
xor
mov
xchg
test
ja
xor
out
push
mov
das
add
pop
aas
outsl
mov
pop
jge
adcb
xor
andl
mov
jmp
inc
pop
cs
mov
movsb
jp
pop
jno
hlt
sub
xchg
cmp
cmpsl
fstpl
dec
jmp
jo
jo
cmp
faddl
pop
mov
add
sub
xor
popaw
stos
loope
sub
jmp
in
out
enter
ds
push
push
pop
pop
mov
cltd
fs
lret
lods
push
xchg
insb
adc
or
xchg
mov
adc
scas
stc
xchg
lret
jnp
call
in
in
bound
in
mov
mov
test
lds
sub
outsl
test
mov
mov
enter
xor
inc
loope
aas
push
push
mov
scas
das
dec
push
enter
cltd
inc
out
bound
pusha
sub
ret
pop
inc
adc
cmp
or
dec
mov
sub
ret
mov
cli
push
std
stc
cld
mov
mov
push
aam
clc
rorb
out
adc
mov
clc
inc
sahf
sub
std
lea
mov
xchg
pop
mov
and
pop
test
jae
icebp
xlat
add
push
inc
int
mov
or
and
sti
frstor
adc
dec
call
sbb
and
in
mov
and
mov
or
bound
int
cmp
adc
jl
je
push
in
scas
sub
ret
je
or
add
pop
push
mov
lcall
shl
pop
into
out
xchg
stc
sbb
mov
inc
xor
sbb
cmp
enter
fldl
and
imul
mov
andl
sbb
and
inc
push
mov
push
jle
sbb
movsl
das
inc
ret
mov
mov
dec
fstpl
and
lods
out
sub
repz
dec
jbe
jne
loopne
adc
dec
adc
int
es
lret
ljmp
xchg
iret
sbb
test
out
ret
pop
push
sub
xchg
sub
loop
fldl
cmp
adcl
in
cld
mov
jl
decb
insl
movsl
aaa
fildl
mov
lock
jno
xlat
cmpxchg
rsqrtps
push
pop
fwait
xchg
or
pop
mov
fsubr
dec
outsb
out
ret
push
or
and
in
lahf
jns
lret
outsl
sub
rol
mov
mov
sub
push
and
arpl
cmc
stos
fiaddl
pusha
or
push
cmp
jo
movsl
sub
jno
imul
sub
test
ret
outsb
jb
pop
cmpsb
movsb
out
enter
adc
test
hlt
xchg
and
xor
xchg
scas
test
std
pop
sub
fistps
imul
aas
stc
fdiv
xchg
push
test
jbe
and
dec
or
push
test
fiaddl
or
sbb
aaa
movsb
fsub
sbbb
in
sub
jne
sarl
pop
and
faddl
or
jne
ss
jne
pushl
cmp
loopne
addr16
mov
push
push
mov
out
andb
cwtl
inc
and
xor
call
cmp
sbb
pop
adc
test
sub
and
mov
push
loop
out
and
adc
mov
call
xchg
jmp
pop
addb
insb
addr16
test
out
lret
out
arpl
jecxz
mov
lret
out
sarl
test
sub
or
fsqrt
in
xchg
jbe
loopne
push
pop
lret
xor
xlat
lds
mov
into
sub
imul
add
lods
mov
adc
inc
test
sub
cld
dec
and
insl
mov
xchg
or
stc
inc
pop
cli
mov
daa
aam
out
mov
inc
mov
pop
mov
xor
xchg
sbb
cmpsb
sahf
add
mov
aaa
js
add
or
inc
inc
call
fnop
mov
bound
icebp
leave
jnp
negl
test
movsl
xchg
shr
dec
stos
cmp
int
push
sub
mov
mov
mov
xchg
adc
imul
hlt
jne
dec
mov
or
push
add
pop
iret
mov
icebp
mov
lret
cmp
test
sbb
repz
ret
adc
ja
xchg
stos
lahf
jecxz
xchg
stos
negb
or
out
pop
sbb
mov
clc
movsl
int
sub
in
sub
push
mov
add
adc
add
in
stos
hlt
call
jb
iret
jge
stc
int3
adc
or
cld
xchg
push
jl
lods
mov
pushf
int
shrb
cmc
lods
leave
adc
stos
imul
ljmp
adc
test
jg
jl
fistps
into
or
xlat
sbb
fsubrl
lahf
mov
fsubrs
fucom
fidivl
xchg
sbb
jb
insb
cmp
add
orl
or
mov
mov
adc
jmp
xchg
mov
ja
fsubp
push
inc
pop
mov
jbe
out
movsb
sub
mov
sub
and
movsl
pop
cld
aas
pop
int3
out
mov
scas
push
pop
adc
xchg
sub
cmp
jnp
inc
pop
popa
pop
push
imul
mov
mov
add
mov
fcompl
inc
rcrl
xlat
out
cwtl
sti
cmpsb
adc
push
mov
inc
std
jnp
jne
aaa
and
test
mov
sbb
int3
adc
filds
and
adc
aas
pop
xlat
cmp
pop
mov
cmpsl
test
stc
fcmovbe
cmp
add
or
rorb
push
ss
mull
sub
pop
fcmove
mov
in
or
fiaddl
in
std
bound
rolb
sbb
add
lock
pop
fcoml
sbb
mov
cmp
lcall
adc
add
andb
pop
push
and
push
push
pop
out
stc
push
loope
sub
pop
aaa
iret
pop
lret
push
push
xor
inc
dec
nop
add
enter
add
ret
cmp
aaa
in
xchg
sub
loopne
in
test
jno
cwtl
push
out
daa
movsl
loop
ror
ftst
mov
and
mov
enter
in
sbb
jbe
sbbl
shrl
outsl
push
aad
push
fwait
cld
ret
and
mov
pop
js
fldt
dec
dec
push
mov
int
call
or
aam
cwtl
mov
aad
out
mov
pop
std
leave
test
mov
cmp
cmc
ljmp
test
sub
push
movsb
cld
lock
dec
loop
add
jns
mov
out
nop
mov
mov
push
cmc
xchg
cmp
push
xchg
sti
jg
dec
repz
xchg
shrl
std
xlat
push
xchg
inc
jecxz
xchg
imul
mov
dec
les
pcmpgtd
inc
xchg
roll
orb
sti
pop
cmc
pop
dec
add
cmovae
daa
cmpb
or
aad
push
loopne
jecxz
xor
cli
push
and
arpl
lock
mov
inc
cmc
xchg
addr16
aas
in
push
cmp
cmc
mov
or
lock
ss
stc
les
stc
push
xchg
xchg
dec
pop
ret
addr16
jne
mov
aad
cmp
jnp
push
xchg
outsl
xchg
and
sub
ss
push
or
pusha
notl
xor
mov
push
sub
popa
dec
mov
sbb
fiadds
cmpsb
ficoms
jo
dec
ss
push
mov
sbbb
fs
cld
mov
jo
in
sub
dec
inc
mov
stc
movsb
aad
aaa
jne
cmc
out
sbb
inc
insb
out
ret
out
outsl
pop
xor
mov
mov
cmp
test
imul
jnp
cmpsb
pop
andb
add
xor
add
pop
jnp
xor
add
sub
mov
inc
push
xchg
les
xor
out
xor
adc
sbb
cmp
int
adc
push
adc
jmp
cs
insl
mov
sahf
lret
sbb
fcmovnu
cmp
mov
adc
mov
jl
in
and
rorb
sub
rcrb
push
sub
mov
test
loop
das
scas
notl
push
rorl
ds
mov
ljmp
xchg
add
int3
push
adc
and
hlt
in
or
add
ljmp
lock
jmp
mov
enter
add
mov
test
xchg
jne
mov
in
or
add
inc
fstpt
xor
shlb
jbe
out
and
push
push
aas
adc
sbb
scas
lahf
mov
mov
jmp
loope
sti
xchg
pop
sub
loope
dec
mov
lock
mov
jb
dec
rorb
aad
mov
inc
fs
add
dec
es
push
mov
shll
shr
outsl
adc
mov
cli
push
cmp
adc
stc
inc
out
or
and
in
mov
mov
dec
jg
xchg
sbb
or
rcr
notb
push
mov
decb
add
pop
icebp
xchg
cld
testl
insl
cwtl
push
cmp
xlat
out
cmp
aas
inc
loopne
jae
adc
add
add
jno
pop
sub
push
in
fistpl
xchg
jecxz
push
pop
arpl
fcomip
or
jmp
xchg
xchg
mov
dec
xchg
test
push
nop
pop
aam
mov
dec
add
fmuls
cs
shlb
jecxz
cmp
inc
xor
into
push
or
pop
jne
xchg
inc
shlb
out
mov
inc
add
aaa
sbb
xor
pop
jb
inc
xor
in
mov
out
subl
cmc
xchg
fimull
lds
cs
out
sbb
aas
pop
cmpsb
sbbl
daa
pop
mov
fs
enter
xchg
test
push
or
sub
cltd
cmp
cmp
leave
mov
movsl
inc
jge
scas
rcrl
mov
inc
xchg
mov
out
add
cltd
out
and
push
stos
sbb
fcomps
xor
dec
dec
xchg
int3
inc
and
pop
clc
xchg
cltd
in
pop
leave
ret
push
into
sbb
in
jg
mov
imul
pop
xorl
mov
and
pop
je
push
into
mov
sub
insl
push
or
fisttpll
call
std
aaa
movsl
faddl
cmp
pop
dec
int
mov
scas
xorl
mull
loope
cmp
fcoms
repnz
and
sub
lock
test
sbb
bound
dec
mov
push
add
adc
sbb
push
sahf
xlat
cmpl
lods
mov
jge
sub
lods
mov
or
aas
mov
sbb
mov
xchg
or
clc
mov
lock
imulb
cmc
lcall
or
adc
lock
leave
inc
loopne
fcoms
loop
jecxz
adc
pop
out
mov
mov
hlt
mov
scas
push
mov
call
aaa
dec
and
orl
roll
es
adc
fisubs
in
loopne
mov
xlat
or
push
test
fsubl
ret
jo
es
or
rcrb
repnz
cmp
xor
add
orl
aad
xor
pop
xor
leave
lret
cmc
cli
das
dec
xchg
mov
out
pop
pop
mov
int
pop
push
fstps
push
xchg
xchg
push
mov
imul
jae
call
push
test
xlat
test
xchg
xor
cmpsb
fs
negb
xchg
icebp
es
in
dec
daa
xor
mov
out
das
mov
jp
jns
fsubrs
xchg
arpl
jns
std
or
mov
mov
sub
sub
adc
fs
lret
mov
arpl
and
adc
adc
dec
adc
jns
rol
dec
xor
xchg
adc
popf
xor
shll
mov
movsl
std
cmpsb
iret
xchg
out
aaa
dec
testb
lahf
dec
fstps
mov
scas
pusha
push
test
xchg
push
ret
mov
loop
mov
dec
sub
xor
cmpsl
xchg
popf
xchg
icebp
pop
sub
cmp
and
lods
pop
into
add
jne
adc
insb
xorb
lcall
cmp
repnz
add
xor
sbb
xor
movsb
clc
mov
inc
jmp
imul
xchg
mov
mov
lods
push
aaa
dec
mov
out
jle
mov
mov
gs
add
notb
sub
push
sbb
jmp
inc
jb
repz
icebp
adcb
addl
lahf
lret
push
testb
adc
popa
cmp
test
jmp
mov
hlt
stos
inc
sarl
rcrb
cs
movsb
xor
push
cmp
call
hlt
sub
add
ja
clc
push
dec
mov
sbb
popw
pop
dec
mov
call
push
out
jge
pop
xchg
pushf
push
push
addb
pusha
dec
inc
pusha
cmpsb
test
push
hlt
in
nop
pop
in
sub
addr16
or
daa
mov
dec
jge
lcall
sahf
outsl
adc
lock
mov
xor
incl
jae
pop
sbb
adc
bound
adc
xor
outsb
push
mov
jb
or
repz
sbb
dec
xor
xor
data16
adc
les
mov
into
cwtl
mov
fiaddl
lods
out
and
ret
mov
pop
jl
lcall
dec
sub
fcomps
cmp
test
add
sbb
lahf
mov
and
push
mov
jb
and
inc
mov
in
fdivrs
mov
pop
arpl
ljmp
lret
mov
dec
mov
or
xchg
popa
mov
mov
mov
subb
xchg
sahf
ss
incb
inc
notb
mov
testb
test
pop
xchg
sub
es
popf
xor
nop
xchg
pop
test
sar
js
push
shl
scas
fiaddl
inc
jnp
in
pushf
mov
dec
cmp
mov
add
jno
mov
cmpb
inc
jp
das
sub
adc
push
cwtl
push
mov
iret
push
inc
pop
inc
xchg
lret
mov
lds
ss
sbb
outsl
cmp
outsb
mov
movsb
aas
mov
pop
pop
inc
lea
imul
int
pop
lods
mov
std
jb
lret
lods
jne
adc
out
mov
testl
es
imul
lret
test
xchg
mov
sub
and
les
sbb
aaa
pop
sbb
xchg
pop
sub
cmc
stos
lods
cmp
test
fsubl
lahf
pop
stc
jno
imul
imul
push
xor
jnp
dec
adc
push
xchg
mov
bnd
mov
cmp
imul
adc
add
sarl
xor
outsl
andl
adc
jmp
mov
push
mov
add
xchg
in
pop
push
test
lods
js
shll
fsubl
push
mov
psraw
ficoms
imulb
and
push
mov
clc
aam
insl
shlb
gs
cltd
stos
jmp
push
cmp
add
sub
sahf
mov
jbe
mov
leave
cmp
out
pop
cmp
push
xchg
or
rcrb
dec
cmp
dec
cmp
lret
add
or
out
inc
pushf
or
jo
adc
shl
adc
pop
pop
test
js
mov
rcrb
aas
aad
cmp
sbb
push
mov
xor
rcrb
or
popl
xor
and
jge
lods
sahf
jb
mov
mov
add
mov
add
stos
jmp
push
popf
mov
repz
mul
pop
call
lods
scas
jnp
loop
nop
insb
adc
es
out
inc
jo
adc
cmpsl
stos
test
pusha
adc
jbe
jne
sbb
addl
add
push
pop
cwtl
adc
cwtl
jb
fstpt
push
fiadds
cmp
nop
sbb
and
cmp
xchg
and
xchg
das
adc
leave
dec
and
cmp
and
movsb
xchg
lds
or
lahf
adc
loope
imul
cli
ret
sbb
adc
sbb
jl
outsb
add
insl
jl
aaa
daa
xor
dec
out
jno
dec
add
add
jl
stc
push
adcb
sub
adcl
ds
xor
lcall
cld
iret
xchg
add
inc
xchg
lcall
ja
sub
out
adc
ja
aas
fidivs
pop
pop
cs
pop
ds
jb
jg
in
std
push
inc
dec
inc
in
subb
cmc
push
loopne
jno
xchg
insb
rorb
jmp
cmpsb
jmp
test
imul
out
push
movl
sbb
sub
jge
xor
inc
jp
push
fwait
jle
push
mov
inc
sti
add
fmull
add
jnp
dec
mov
cmp
cmc
in
adc
dec
stc
loope
arpl
test
jmp
fwait
add
and
shll
sbbb
testb
aaa
in
sahf
leave
rcll
sub
cmp
in
pop
jge
adc
sti
fs
jnp
jge
sub
push
cmp
dec
mov
push
int3
push
xchg
adc
nop
aam
pop
push
leave
xor
lret
pop
or
cwtl
stos
rol
sub
xchg
mov
cmp
add
test
xchg
mov
mov
mov
sub
pop
push
ficompl
mulb
ror
mov
lcall
push
inc
add
rolb
pop
call
cld
fs
inc
in
test
sub
xchg
stc
insb
xor
mov
sub
in
stos
ja
iret
inc
or
pop
int3
loope
gs
sahf
and
stos
and
lock
sbb
notl
sub
push
push
jns
lret
ss
dec
sub
popa
into
push
cmc
stos
xchg
pop
push
xor
add
icebp
jo
repnz
stc
sbb
inc
imul
fiaddl
xor
push
sub
cwtl
add
scas
push
adc
imul
mov
in
xchg
and
mov
dec
inc
mov
testb
cmp
mov
push
stos
popf
rol
ss
push
xchg
or
xchg
add
add
les
mov
lret
xor
orw
mov
cmpxchg
loop
mov
pushf
jno
es
mov
movsb
push
subl
repnz
imull
add
dec
or
mov
push
pop
jb
jecxz
jge
test
loope
call
sub
xchg
fldt
add
jne
adc
cmp
sbb
dec
push
jge
add
sub
push
cld
imul
cmpsl
leave
js
pop
pop
jle
cmp
mov
pushf
pop
js
xchg
cmp
std
cmpsb
loopne
push
cmp
mov
dec
sub
dec
mov
and
dec
dec
call
sbb
mov
sbb
add
into
xor
adc
jecxz
pop
cwtl
cmpsl
sbb
hlt
cwtl
stc
test
jg
mov
dec
and
popa
stos
jnp
insb
dec
ljmp
mov
pushf
out
lods
in
mov
cld
int3
mov
inc
and
sarb
jl
xor
xchg
subl
mov
pop
out
mov
sub
mov
subl
adc
xor
nop
fldcw
jne
and
dec
mov
mov
rol
pop
call
jle
cmp
mov
mov
mov
push
push
cltd
shr
dec
in
les
fnstcw
mov
arpl
push
xchg
fsub
shll
popa
aam
popf
int
js
dec
adc
or
lock
cltd
jle
loopne
sbb
into
aaa
lods
data16
out
cs
ds
lods
pop
das
fs
cmp
mov
sub
mov
decl
jno
insb
add
dec
daa
popa
repz
rorl
jno
inc
sub
inc
mov
sub
data16
aas
insb
popf
push
jg
call
popf
jno
inc
push
sbb
xlat
aas
notl
inc
iret
inc
mov
ljmp
pop
mov
dec
jg
mov
sub
stc
mov
sbb
out
or
pop
ds
or
push
mov
pop
xor
mov
data16
icebp
inc
mov
pop
divps
pop
data16
test
push
into
lds
leave
dec
ja
js
mov
sbb
sub
adc
iret
adc
xchg
and
xor
ss
in
cmpsb
pop
mov
sub
stos
imulb
adc
lods
call
orl
or
or
xchg
mov
fcoml
dec
cmp
imul
cmp
test
or
push
dec
mov
shl
cs
pop
sbb
sbb
mov
loope
es
fistps
xchg
sbb
enter
jmp
std
les
in
jne
pop
or
mov
cmpsb
fimull
mov
into
mov
testl
sbb
decl
jbe
and
xchg
stc
mov
sub
scas
pop
fsubl
std
or
mov
and
imul
lds
subb
stc
xchg
bound
jae
jae
aas
mov
xor
or
xchg
or
psllq
dec
test
jno
add
add
sti
lcall
lahf
xor
push
into
dec
mov
inc
inc
or
lea
lods
int
int3
xor
pop
sub
sub
inc
sub
pop
jb
popf
test
dec
cmp
test
fsubr
iret
lret
ret
xor
xorl
cmpsl
push
mov
sub
test
loopne
inc
mov
imul
mov
jmp
sub
mov
stc
jae
enter
addr16
out
sbb
or
sbb
push
jmp
in
vmwrite
call
in
add
cmp
je
scas
pop
adc
xchg
dec
les
loopne
or
push
add
test
adc
inc
dec
sbb
jae
dec
adc
mov
xor
sbb
add
leave
xor
pop
ss
add
jg
push
push
call
rcrb
xchg
or
push
cs
loope
repz
dec
in
cmpsl
dec
fildll
xor
aas
cmp
xor
ss
sub
repz
xor
lods
dec
adc
jno
lods
pop
and
shl
lea
xor
mov
inc
or
jg
jmp
mov
fnstsw
push
dec
jno
mov
insb
pushf
test
pushf
add
push
or
jp
push
data16
xor
xchg
fwait
in
mov
jg
push
pop
dec
cld
inc
cli
jmp
mov
jmp
xor
add
mov
cs
xchg
and
mov
jae
cmpsl
add
stc
xchg
mov
arpl
sub
inc
jmp
adc
sbb
push
pusha
push
movsb
and
ffreep
inc
sbb
outsb
push
ja
cld
stos
ja
mov
inc
dec
iret
push
mov
cmpb
sub
dec
xor
sub
pop
mov
jbe
sbb
outsb
xchg
fsts
and
enter
sbb
sub
push
das
add
sbb
add
inc
popf
mov
dec
outsb
ret
pop
mov
xchg
rol
pushf
push
xchg
xacquire
lock
gs
inc
xor
add
movsb
jbe
rorl
sbb
cmpl
pop
xor
leave
or
push
movsb
fmull
aad
fucomip
xchg
hlt
scas
lret
sti
or
mov
mov
cs
add
int3
bound
imul
dec
xor
inc
lahf
iret
test
loope
inc
jge
or
inc
mov
lods
push
cmp
lea
cmp
pushf
repnz
divl
push
ret
outsb
loop
outsl
cmp
pop
orl
cmp
pop
ret
sbb
je
sbb
ficompl
cli
repz
hlt
mov
sbb
cmpsb
outsb
iret
add
push
cmp
jns
mov
sbb
test
jb
mov
mov
test
incl
jae
push
sub
mov
mov
xor
push
ret
pop
xlat
pushf
pop
mov
test
andl
inc
ljmp
les
mov
mov
test
push
subl
cmp
mov
lcall
inc
repz
xchg
call
test
push
loopne
or
xor
and
or
in
rcr
cmp
cmp
xchg
jo
mov
jmp
lret
out
mov
bnd
mov
sahf
push
xchg
and
iret
adc
dec
ss
fiadds
popf
add
inc
push
gs
loopne
xor
or
xorl
pop
lcall
shll
icebp
cmp
mov
push
lcall
mov
or
jge
out
or
fistpll
sbb
fs
shll
cld
and
jo
lods
sub
inc
clc
add
xor
lds
scas
jbe
xchg
mov
push
inc
push
movl
int
leave
movsl
sub
cmp
insl
xor
mov
out
mov
into
and
pop
sub
repz
mov
das
xor
lods
sub
or
mov
cmpsl
outsb
pop
jae
movsb
cmpsl
addr16
divl
es
cld
push
int3
dec
adc
sub
xchg
imul
repz
cmp
ret
jns
cmc
pop
mov
sahf
test
sub
push
adc
shrl
pop
sti
jecxz
test
mov
mov
jle
clc
scas
inc
push
add
xchg
sub
out
loop
jmp
inc
mov
sub
lods
add
incl
or
push
mov
fnstsw
mov
add
jmp
rcll
inc
sub
shl
addr16
mov
rorl
call
loop
mov
lcall
insb
push
ds
mov
or
in
and
iret
call
testl
fwait
or
inc
xor
shll
leave
jmp
push
mov
cs
sub
sbb
push
sbb
dec
sbb
fcmovb
adc
ja
pop
pop
adc
lock
jmp
xchg
jns
pop
dec
and
pop
inc
fsubl
imul
mov
imul
sub
inc
mov
out
addr16
mov
ds
cmc
mov
jl
movsb
xchg
out
jl
push
push
into
loop
pop
lds
jp
mov
dec
push
dec
jmp
mov
adc
fidivrl
or
mov
lock
sahf
jnp
lahf
fnstcw
xchg
out
and
loopne
jno
mov
jne
dec
lret
lret
mov
pop
xchg
iret
mov
addr16
sahf
das
mov
lds
add
jne
inc
and
rorl
sbb
dec
pop
lea
or
pop
movsb
fdivs
out
or
pushf
sbb
mov
dec
js
loopne
jp
out
mov
bound
jmp
fmul
inc
add
pop
sub
movsb
xchg
cmp
xchg
cmp
push
mov
ds
mov
push
dec
and
test
shrb
xchg
sbb
mov
js
inc
mov
xor
xlat
popa
shrl
sbb
cmpsl
mov
sub
inc
or
rcrb
scas
inc
popf
insl
aas
outsb
adc
mov
push
mov
nop
pop
xor
pop
jo
rol
push
adc
xchg
ficomps
mov
sbb
das
mov
and
lcall
sti
out
ds
inc
fimuls
cld
fwait
or
movsl
lods
sarl
adc
mov
and
push
add
dec
pusha
cwtl
test
pusha
fiadds
mov
mov
sub
js
int
xchg
add
and
hlt
mov
js
dec
cld
testb
enter
inc
addr16
pop
std
sub
jle
scas
movsb
cmp
jb
sub
sbb
push
pushf
pop
sub
and
cwtl
mov
stc
mov
jg
sbb
lock
push
add
sar
pop
sub
jle
shrl
and
jne
lea
jge
adc
sbb
ss
gs
lahf
jbe
into
jne
movsl
fdivr
mov
stos
insl
jnp
out
xor
ljmp
dec
loopne
xor
cmp
insb
ljmp
push
outsb
xchg
andl
cmp
clc
pop
lret
jb
dec
out
andb
pop
fsubrs
sbb
sub
xlat
ja
and
jae
rcrb
mov
adc
imul
imul
or
popa
hlt
fwait
jb
jle
mov
test
mov
add
jg
andps
aam
int3
add
inc
or
in
lods
sub
leave
fxch
mov
incl
pop
sahf
sub
lcall
lcall
stos
out
push
andl
mov
pushf
and
pop
xlat
push
push
rcll
aas
push
push
cmp
and
xchg
sub
xchg
lods
stos
xor
inc
movb
fistpll
cld
xlat
test
jl
fisubl
sbb
into
dec
mov
xor
push
repz
mov
scas
nop
mov
pop
in
rcrl
ret
popa
outsb
jg
xchg
mov
mov
xchg
rcll
xchg
add
aad
and
mov
in
in
dec
or
push
fstpt
xchg
data16
push
lock
aaa
xchg
sbb
inc
in
xor
nop
ja
dec
lahf
adcl
push
jmp
cmpsb
push
add
out
push
imul
stc
int
push
jmp
sub
pop
inc
and
lahf
mov
inc
cmp
into
jmp
and
cmp
cmp
xor
pop
cld
adc
popf
ja
lods
and
loop
inc
cmp
test
mov
mov
jmp
loop
lea
lahf
xor
or
dec
pop
in
clc
pop
test
push
jnp
gs
xchg
stc
insl
pop
les
leave
lods
sahf
inc
pop
ljmp
pop
ljmp
pop
ficoms
mov
dec
movsl
xchg
sahf
es
inc
cmp
push
push
cmp
mov
jecxz
add
pop
jl
mov
pop
add
fsub
xchg
jb
dec
out
arpl
fwait
inc
cmp
push
adc
paddd
rcll
jg
popa
pop
mov
mov
movsb
mov
outsl
jae
dec
stos
jbe
xor
ss
cld
mov
mov
int3
xchg
jmp
bound
data16
out
call
aam
fadds
arpl
cwtl
jg
or
mov
xchg
lahf
sbb
aam
adc
push
sub
and
aaa
dec
cmp
jbe
je
stc
mov
push
shr
jle
int3
sub
mov
dec
add
mov
and
add
cmpsl
add
inc
repz
jb
sub
mov
sarb
stc
int
sub
dec
sbb
int3
imul
divl
pop
dec
pop
nopl
adc
out
mov
jbe
bound
aam
sti
jg
xchg
loop
fildll
fistpll
and
sti
lcall
fisubrs
hlt
lock
aas
nop
orl
jne
lahf
shll
test
mov
lods
mov
pop
test
in
repz
sbb
lods
jb
xchg
push
mov
push
pop
outsb
adc
cmp
mov
dec
addl
mov
rclb
clc
or
imul
ds
fistpl
mov
lret
sbb
incl
cmc
add
aad
inc
mov
popa
les
out
sahf
mov
scas
mov
fidivs
pop
push
jge
das
ds
dec
popa
ffreep
sbb
xorb
in
out
inc
loop
and
decb
test
mov
decl
dec
test
jle
fwait
xor
xor
or
and
mov
and
push
imulb
notl
loope
in
mov
fldcw
arpl
cltd
jg
addr16
stos
pop
scas
aas
lahf
mov
inc
xlat
push
imul
jmp
adcb
call
rcrl
fistpl
imul
inc
cli
jo
int
andl
cli
xchg
fs
adc
ss
pop
imul
ljmp
stos
ja
adc
dec
push
mov
adc
or
mov
mov
adc
mov
add
ljmp
and
sbb
cld
pop
pop
fmulp
outsb
cli
std
pushf
adc
js
cmp
imul
xor
mov
inc
shr
repz
xor
add
pop
movsb
adc
sbb
test
xchg
or
xchg
add
jno
loopne
pop
fistpll
jmp
adc
sbb
xchg
daa
shr
sub
leave
adc
mov
mov
jg
shll
loopne
scas
add
adc
mov
out
dec
test
loope
out
mov
mov
xor
lock
ret
std
lahf
cltd
shlb
fdivrs
xor
jmp
inc
out
stos
test
mov
mov
imul
je
or
inc
inc
test
or
and
pop
scas
iret
cmp
jecxz
imul
cli
cmc
lret
sbb
sub
leave
lahf
call
add
and
or
inc
mov
jne
cmp
xchg
jp
sbb
inc
pushf
cmp
add
inc
jmp
jo
cmp
mov
push
sbb
lods
cli
xchg
js
mov
lds
movsb
push
sub
inc
rol
out
push
jmp
lret
stos
jns
pop
aam
repz
es
dec
add
push
ret
inc
inc
pop
inc
dec
adc
mov
adc
add
pop
add
in
imul
add
insl
jecxz
push
lret
ret
adc
push
jmp
and
leave
lahf
cmp
in
mov
dec
inc
icebp
or
clc
push
out
sbb
pop
cmp
mov
push
xor
jnp
outsl
sti
mov
push
cli
lock
xchg
fcoml
mov
ret
adc
pop
mov
mov
cltd
sarl
adc
jbe
mov
jp
test
gs
mov
test
mov
sti
nop
mov
cmpsl
outsb
aas
mov
dec
sub
aaa
xchg
stos
cmp
hlt
xchg
pop
shll
push
mov
sbb
ret
out
inc
push
lds
out
shlb
mov
aam
sub
fprem1
cmc
cmp
psubw
shrl
je
movsb
outsl
xchg
lock
adc
xor
rcl
int
add
mov
mov
sbb
test
ljmp
add
mov
je
aaa
xchg
dec
or
lods
out
iret
mov
enter
mov
pop
int
ret
hlt
dec
ja
mov
mov
lea
std
cwtl
ds
mov
mov
mov
ret
inc
cmpsb
inc
shll
insl
and
add
enter
push
loope
or
cwtl
fbstp
sub
dec
xlat
loopne
stos
jnp
das
jg
push
fwait
and
push
iret
mov
or
push
dec
lret
pop
push
cmp
ror
jecxz
add
xor
das
mov
ds
aad
jle
mov
push
repnz
in
pop
mov
push
inc
in
jo
jp
mov
jno
test
iret
mov
out
cmp
loope
rol
loope
and
and
sbb
add
push
mov
in
sbb
insb
loopne
and
in
andl
pop
xchg
inc
sarb
lock
pop
inc
cmp
or
mov
add
movsb
bound
lock
les
and
enter
test
push
adc
cmp
imul
fmuls
lea
popf
je
pop
out
xchg
dec
rcrb
icebp
inc
inc
cltd
sub
mov
jge
addr16
add
pop
test
outsl
in
inc
pop
scas
imul
jb
jg
sub
sbb
pop
popa
xchg
out
push
sub
jae
mov
mov
dec
dec
push
roll
ficoml
cmc
enter
scas
cmp
jne
sarl
jg
xchg
push
mov
aas
jle
xor
stos
out
mov
push
jg
ljmp
les
aaa
inc
nop
stos
pop
xor
adc
or
and
test
fstpl
ljmp
fimull
xchg
mov
fldl
jo
push
push
ss
jo
inc
rcrb
stc
mov
pop
mov
loope
cmpb
cmpsl
fnstenv
xor
fsubrs
inc
cmpl
jnp
push
lds
xchg
dec
pop
xor
sub
fldt
enter
rcrb
les
out
pop
jnp
cmp
lret
sub
fstpl
test
movsl
adc
aam
dec
in
jmp
cmp
fsubl
inc
inc
jg
or
pop
mov
fimull
mov
or
adc
stos
sbbb
fs
adc
and
sbb
stos
imul
dec
daa
test
iret
std
dec
mov
mov
stc
cwtl
std
cmp
pop
ss
or
adc
or
and
dec
and
jne
xor
mov
imul
adc
and
push
and
aas
into
pop
bound
xor
mov
mov
jecxz
ror
pop
xlat
nop
cld
push
or
mov
inc
cmc
xchg
les
jp
ret
in
std
mov
add
adc
out
xorb
push
cmp
cmc
mov
mov
push
test
adc
adc
cmp
cld
cmp
mov
jns
sarl
aas
rclb
jmp
lahf
add
imul
and
lcall
jge
inc
sub
scas
push
push
scas
stos
mov
xchg
mov
cmp
imul
xchg
jnp
cs
dec
mov
int3
or
faddp
jo
frstor
lea
jl
pop
push
dec
cmp
pop
aas
xor
adc
xor
cmp
mov
js
add
fsubp
mov
and
les
or
imul
hlt
push
push
rcr
push
push
or
push
mov
cmpsb
test
rol
loop
push
push
cmc
inc
mov
loop
xchg
and
orl
popa
popf
xor
mov
mov
fst
push
in
cmp
js
xor
push
mov
mov
sub
mov
dec
dec
pop
push
cwtl
repz
aad
adc
mov
repnz
push
sub
movsb
cmp
push
add
lret
inc
pop
pop
std
pop
insb
ss
popf
sub
mov
and
mov
test
jge
shrd
xchg
and
lret
sar
mov
sbb
ret
sub
cmp
dec
inc
jmp
into
mov
mov
xor
push
cmp
testl
into
jno
mov
mov
mov
insb
lret
mov
jg
dec
mov
aaa
scas
scas
into
push
test
cli
adc
loope
rcll
add
sub
or
popf
loope
ss
enter
mov
push
xor
adc
and
loopne
fxam
out
aas
and
add
test
jmp
xor
pop
out
cmp
inc
cmc
pusha
jg
lcall
mov
and
enter
mov
in
test
inc
loopne
out
andb
dec
adc
test
push
jge
leave
in
push
clc
fimuls
or
xchg
jmp
subb
dec
inc
test
jecxz
and
pushf
jo
cmpsl
dec
cld
sub
pop
lcall
fcomps
jno
rcrb
xchg
xor
outsb
cmpsl
adc
fcomi
push
lea
cmovle
inc
push
push
clc
cmp
out
out
pop
icebp
dec
bound
jge
aas
mov
mov
pop
mov
shrb
add
dec
cmc
mov
in
add
push
adc
arpl
push
adc
sub
in
andb
mov
in
push
lock
jno
sbb
cmp
push
lcall
xor
sbb
sub
call
mov
xchg
pop
scas
jae
inc
xor
dec
popa
mov
jno
cmpl
push
pop
decl
xor
push
repnz
dec
xchg
xchg
sbbb
jl
adc
adcb
mov
mov
std
inc
jns
push
ror
or
negb
sub
fcompl
xchg
shll
sub
faddl
pop
call
xor
mov
jne
sahf
inc
cltd
sub
out
test
pop
pop
cmpl
cmp
popf
sub
jg
stos
in
jbe
insb
push
or
pop
ja
stos
jmp
arpl
jecxz
pushw
bound
push
mov
or
je
into
cmp
mov
out
popf
in
mov
insb
addr16
call
xor
je
aas
scas
mov
cmpl
adc
pushf
add
xchg
jmp
in
mov
or
call
or
mov
rolb
int
mov
and
into
call
mov
dec
enter
out
add
push
mov
inc
jmp
mov
decb
out
push
xchg
jmp
int3
test
push
inc
or
push
cmp
rolb
sbb
testb
jge
push
jns
enter
jle
scas
sbb
sub
sahf
data16
andb
ds
or
in
inc
imul
and
sub
jl
cmp
inc
mov
lods
aad
and
enter
cmp
js
mov
jp
loop
add
inc
mov
incl
jbe
roll
mov
jmp
movsb
cmp
xchg
xor
dec
inc
add
in
jo
mov
inc
or
popa
push
lods
dec
sbb
push
jl
stos
aaa
aam
stc
push
pop
xor
sbb
inc
xorb
cmp
push
out
fcmovnbe
cmc
movsl
sbb
mov
out
jae
addb
pop
clc
fdiv
mov
mov
dec
cmpsl
fucom
or
dec
or
adc
negl
jnp
add
mov
mov
mov
mov
in
nop
xchg
push
pusha
adc
push
aas
cld
mov
lods
fs
mov
pop
mov
inc
mov
xlat
mulb
lds
xchg
std
xor
xor
xchg
out
out
xchg
mov
movsl
dec
in
aas
pop
sub
mov
push
adc
hlt
lret
xchg
mov
out
ljmp
insb
lods
cwtl
stos
pop
cmp
mov
popl
into
or
imul
jecxz
or
js
stos
or
rcll
inc
ficomps
mov
sub
push
aam
mov
addr16
mov
adc
sub
fwait
ds
mov
pop
mov
sbb
stos
stc
int3
loop
mov
dec
mov
mov
xchg
inc
sbb
cli
lea
sub
sti
pop
aam
mov
nop
repnz
loopne
mov
pop
in
pop
ret
das
inc
outsb
fdivrl
dec
scas
test
xorl
or
push
lods
adc
sarb
cs
dec
jb
xor
das
ret
and
or
orl
shll
ljmp
nop
xchg
inc
cmpsl
out
mov
call
dec
fisttpll
pop
push
addr16
xorl
insl
adc
cmp
nop
cmc
cmp
mov
mov
adc
xchg
sbb
mov
jbe
sub
inc
fwait
mov
xchg
sti
aaa
xor
js
loopne
push
xor
aas
out
push
out
jmp
jo
pushl
dec
pop
or
jg
lret
dec
or
push
sbb
xchg
add
dec
jbe
jb
push
inc
cmp
mov
jmp
mov
arpl
mov
out
xchg
mov
pop
out
test
and
aad
jmp
mov
daa
and
outsw
and
out
push
push
push
sbb
sbb
inc
inc
fwait
cmp
mov
notb
mov
xchg
push
push
xor
aaa
xchg
cmpsl
call
pop
xchg
sbb
mov
xor
std
cli
mov
xor
bound
or
mov
mov
and
sbb
sub
pop
imul
popf
xchg
xchg
aaa
sbb
negb
add
inc
cwtl
les
dec
jns
push
adc
push
mov
enter
sub
mov
mov
cmpsl
out
pop
insb
in
push
cmpsl
mov
loop
imul
xor
jp
jmp
mov
push
in
cmpsl
out
xchg
outsl
cltd
test
jp
mov
gs
int
and
js
repz
xchg
repz
adc
shlb
adc
popf
pop
push
push
insb
adc
ror
lret
cltd
xlat
cvttps2pi
sbb
ds
pop
lock
xlat
rcl
das
stos
fdivrl
cmpsl
pop
nop
sub
ret
out
and
or
adcb
lods
orb
lcall
mov
jno
into
leave
imul
xchg
bnd
xchg
sahf
cmp
inc
mov
mov
xor
or
loope
sbb
ljmp
repnz
aad
stos
das
xchg
xchg
test
mov
lret
dec
push
ds
mov
into
sahf
inc
lods
lods
and
stos
ljmp
outsl
pusha
rcrl
push
inc
xor
subl
stc
mov
outsb
pop
sub
call
sub
add
rclb
icebp
sbb
push
popa
pop
pusha
mov
inc
insb
cmp
sub
sar
mov
sbb
mov
cmp
and
je
sub
xor
ljmp
outsl
mov
lods
inc
adc
cmp
fisttps
ret
lods
push
in
call
xchg
ja
jge
push
inc
cmpsb
sub
popa
lods
xchg
mov
dec
mov
nop
iret
xchg
mov
je
pusha
push
outsl
outsb
rorb
adc
jl
enter
adc
or
cs
jg
adc
xchg
fidivrl
xchg
sarb
mov
add
mov
fstps
inc
sarl
dec
and
stos
push
inc
jno
xchg
cmp
stos
je
mov
mov
mov
jo
gs
mov
movsl
xchg
cmpb
out
lret
sub
jbe
daa
pusha
arpl
mov
sub
lods
cmp
mov
mov
pop
push
sub
pop
daa
mull
cmpsb
push
repnz
mov
fucom
and
sub
das
inc
test
mov
cmc
add
push
dec
lds
jbe
es
daa
cmp
mov
stos
or
mov
ljmp
xor
pop
shlb
sub
and
mov
loopne
rcrb
push
icebp
rclb
mov
idivb
xchg
test
loopne
inc
xor
mov
xchg
and
inc
aas
sahf
popf
sbbl
stos
orl
fistps
in
pop
lahf
xchg
xchg
arpl
pop
lea
clc
add
sahf
inc
out
sub
xchg
icebp
and
push
inc
bswap
push
fsubs
or
push
sbb
push
test
mov
cmp
loope
mov
or
adc
fwait
pusha
inc
setl
in
clc
dec
xor
push
cmp
enter
push
pop
jmp
adc
pop
outsb
out
xor
push
and
out
xchg
aas
xor
je
pop
pop
lock
mov
and
in
pushf
jle
lea
arpl
jbe
lahf
push
add
adcl
lret
mov
dec
push
call
pop
call
dec
orb
pop
jno
sahf
mov
or
sbb
pop
mov
and
cmpsb
jmp
mov
insb
hlt
test
xchg
sbb
cmp
or
test
cltd
rcl
mov
movsb
inc
es
fimuls
dec
pop
adc
mov
mov
lcall
test
sub
sar
cmp
xorl
mov
lret
mov
mov
clc
ljmp
sti
nop
adc
mov
add
adc
enter
dec
jo
sub
les
leave
stos
lret
iret
repz
jl
lret
push
sbb
mov
mov
xchg
mov
in
out
scas
aas
fcomp
rcrl
insb
movl
push
loope
add
insl
hlt
sub
jbe
sbb
ret
mov
sub
lds
and
jb
jne
data16
les
mov
pop
push
mov
insl
int
pop
outsb
ret
jle
or
jge
or
fsubrs
sub
push
mov
push
aad
jg
aam
es
shlb
xor
pop
xor
stc
dec
cmp
mov
and
or
xchg
xchg
mov
cmp
jp
daa
cmpsl
sub
lods
sbb
jmp
mov
ja
loopne
inc
sahf
add
sti
lea
movl
inc
adc
mov
adc
sbb
push
cltd
int
xlat
inc
push
jno
outsl
aad
pop
int3
loop
mov
mov
push
push
aad
scas
ss
cwtl
sbb
daa
mov
shll
sub
push
mov
or
xor
or
shlb
xchg
stos
repz
les
out
xor
pop
pop
adc
mov
mov
dec
adc
imul
push
or
mov
xchg
jae
xchg
add
repz
adc
and
imulb
mov
push
sti
add
in
xchg
cli
adc
mov
call
cli
enter
and
hlt
push
mov
jmp
dec
dec
insb
and
adc
mov
ret
xchg
lods
sbb
dec
xchg
and
lods
je
sbb
mov
stc
jae
loopne
mov
les
sahf
outsb
xor
push
outsb
test
lret
inc
mov
in
imul
aas
in
roll
xchg
adc
repnz
mov
sbb
enter
fdivs
mov
xor
leave
lods
dec
or
cmp
pusha
adc
add
test
int
dec
aaa
int
stc
adc
inc
push
fimuls
mov
js
add
inc
jno
lods
cmpsb
push
jnp
imul
push
fcompl
mov
add
cmpsl
mov
in
pushf
pop
sar
stos
mov
sub
in
push
outsl
xchg
jb
lret
js
mov
add
aaa
filds
mov
adc
mov
shr
pop
xchg
inc
dec
add
push
loope
jp
cmp
xor
in
insl
lock
ret
fiaddl
inc
push
dec
in
sahf
add
mov
pop
dec
jecxz
jecxz
fbld
js
inc
pusha
inc
push
mov
sbb
inc
adc
jge
aad
and
mov
push
jmp
stos
popa
adc
or
mov
test
sub
jmp
lods
mov
inc
xor
sarl
insl
shl
mov
orl
dec
xor
xor
inc
pushf
xor
bound
jmp
push
clc
stos
inc
frstor
mov
call
push
sti
inc
xchg
popf
out
in
push
dec
mov
cwtl
push
ljmp
cld
ds
inc
cmpsl
pop
fmuls
push
sahf
cmp
lods
cmp
cs
xchg
lea
out
cmp
push
xchg
xchg
push
inc
xor
or
or
je
repz
aad
in
xchg
jge
cld
add
stc
jne
mov
stc
xlat
packssdw
in
rclb
imul
repnz
popa
sbb
sub
push
dec
inc
mov
arpl
mov
jmp
or
pop
sub
in
mov
jo
sbb
les
and
cmc
or
ja
pusha
stos
jg
bound
sbb
lcall
fidivs
inc
in
push
ljmp
mov
insl
or
pop
mov
and
aam
aam
out
mov
div
jp
rcll
xlat
pushf
inc
and
rep
out
or
and
sbb
mov
sub
adc
loopne
push
adc
jbe
lret
jno
xchg
inc
mov
pop
mov
jnp
popf
pop
pop
fwait
sub
cmpsl
dec
cmp
test
lret
mov
push
inc
leave
push
mov
cmpsb
pop
negb
pop
jns
pop
or
nop
stos
imul
enter
scas
fldt
and
stos
sbb
out
add
dec
or
hlt
test
xor
pop
ss
insb
sbb
push
je
sbb
mov
imul
jecxz
dec
pop
aad
mov
sub
xchg
cld
stos
sbb
jmp
push
sahf
outsb
sahf
loop
or
jb
push
dec
bound
lods
mov
xchg
in
or
out
test
jge
lahf
sbb
hlt
mov
xchg
jp
out
aaa
pop
jmp
or
add
and
sub
hlt
mov
mov
out
mov
sub
lret
out
ljmp
in
inc
pusha
nop
std
mov
das
jbe
pusha
ds
xor
sub
sbb
in
lods
inc
jg
gs
or
mov
andl
fwait
iret
mov
mov
mov
movsl
mov
popf
mov
ds
cmp
out
dec
ljmp
sub
jge
cmp
fdivs
scas
xorl
xchg
lods
xchg
add
fstpt
add
cmpb
add
aas
jl
add
adc
into
inc
mov
jge
mov
mov
sbb
movsl
pop
lahf
xor
xchg
shl
in
in
mov
cmp
xchg
int
adc
shrb
cwtl
push
hlt
loope
sbbl
push
movsl
cmp
mov
out
sahf
data16
xorl
stos
enter
mov
mov
lret
pop
pusha
push
fcmovu
push
jo
inc
add
sahf
sarl
push
mov
push
sub
xchg
fsubl
ret
mov
inc
dec
ja
pop
inc
mov
scas
dec
incb
mov
leave
mov
jmp
das
xor
push
mov
push
cmp
pop
dec
sbb
sbb
pop
and
nop
xor
jge
lcall
adc
and
xchg
test
jbe
scas
mov
jbe
fldt
faddl
sbb
inc
xlat
fsts
sub
lock
ret
cltd
inc
aas
dec
sbb
inc
shl
jno
jp
dec
mov
cli
ret
xor
fists
imul
xchg
movsl
frstor
into
in
fnstcw
fisubs
jnp
das
js
xlat
jnp
repz
and
push
jne
jbe
sbb
sahf
mov
cmp
pop
lods
dec
repnz
addl
loopne
repz
fs
rclb
test
xchg
push
icebp
lds
mov
lods
add
into
icebp
push
cmpl
rcrl
inc
ja
fcomp
mov
pushf
add
repz
xchg
lea
icebp
xchg
inc
inc
daa
rcrl
pop
outsl
xor
bound
test
push
xor
aam
mov
std
outsb
pop
xor
jp
mul
stc
fdivrl
jecxz
mov
adc
sbb
mov
adc
sbb
rclb
jae
lret
and
mov
paddd
in
in
pop
dec
addr16
cmp
dec
scas
xchg
aas
inc
adc
iret
pop
insb
aaa
es
lds
mov
and
or
popa
andb
imull
dec
cmp
sub
roll
push
adc
imul
mov
scas
cmp
iret
mov
lods
shlb
sarb
roll
xchg
and
add
sbb
push
rclb
push
add
aam
jmp
stos
call
adc
xchg
data16
jle
push
or
les
js
mov
or
mov
xchg
icebp
pop
aad
dec
out
cmpsb
rclb
test
adc
pop
adc
sahf
mov
dec
loopne
sbb
sbb
inc
cmpsb
or
in
gs
sub
movsl
andb
iret
mov
out
in
lods
push
cld
clc
popa
aad
mov
sbb
sbb
insb
fcompl
adc
pop
xchg
or
xlat
push
jno
in
cmp
rcl
es
push
jno
jp
or
mov
xchg
mov
cmp
push
popa
adc
mov
dec
pop
dec
scas
scas
sbb
pop
sbb
mov
or
cwtl
imull
push
mov
add
cmpsl
in
js
stos
dec
mov
in
dec
xchg
sbb
subl
push
sbb
fcompl
cld
inc
pmulhuw
js
or
sarl
mov
push
mov
push
adc
cmpsb
push
sbb
lret
sub
lret
cmpsl
pop
testl
pop
or
push
dec
sbb
fdivrs
stos
add
mov
sti
imul
mov
push
repnz
push
pop
insl
pop
clc
movsl
or
addr16
adc
cmp
test
test
fdiv
lock
dec
xchg
mov
ficoms
cld
jmp
or
cmpsb
scas
pop
lret
add
or
pop
jb
lcall
cmp
inc
es
pop
cmp
xor
ficomps
stos
mov
in
cmp
ja
lock
jle
pushf
lret
call
xor
and
push
int
bound
lret
jne
inc
inc
xchg
dec
sbb
int
xor
sahf
stc
adc
push
mov
jmp
or
inc
sub
stos
cmp
call
lea
inc
ja
mov
cmp
sub
mov
sbb
fimull
adc
add
add
movsl
fsubs
out
pop
fldt
mov
adc
cmp
add
jbe
pop
leave
stos
je
stos
daa
mov
sub
movsb
jle
out
insl
jmp
shl
or
adc
nop
cmc
push
mov
daa
jb
in
cwtl
jmp
dec
fsubrl
pop
clc
insl
cmp
loope
shlb
fsubl
jge
cmp
subb
roll
sbb
mov
inc
sahf
sub
or
dec
jno
loopne
pusha
insb
pop
test
pop
dec
jmp
imul
dec
jecxz
sbb
ds
or
hlt
adc
imul
mov
adc
or
stc
sub
inc
push
pop
icebp
sbb
mov
xchg
sbb
mov
mov
out
lock
ret
dec
push
mov
push
sub
das
imul
dec
cmp
sarl
loopne
xchg
std
adc
fadds
sbb
inc
out
mov
jge
lcall
jbe
in
mov
sub
fiadds
pop
add
insl
inc
movb
pop
pop
test
and
or
xchg
push
add
jno
and
sub
scas
cmpsb
mov
pop
dec
jg
mov
stos
lods
clc
inc
popa
mov
int3
mov
out
cmp
dec
lret
sub
adc
je
push
adc
and
add
jbe
xlat
sub
repnz
iret
cmp
adc
push
es
fidivrl
inc
inc
mov
popa
jmp
xor
fnstenv
xchg
add
je
scas
jns
fmull
out
test
pop
lods
xor
jne
mov
fsub
mov
pop
aam
and
cmp
fldt
or
rorb
pop
adc
jne
cltd
cli
movsb
test
push
stc
insl
icebp
leave
pop
jns
sbb
jg
leave
aas
xor
adc
xchg
test
xchg
xor
sub
push
mov
ja
xchg
mov
and
pop
cs
adc
xchg
pop
or
jle
mov
rcl
aaa
rcrb
arpl
movsl
cmc
dec
cmp
sahf
mov
jge
adc
xor
sub
inc
or
leave
cmp
sbb
inc
loopne
in
and
mov
mov
push
mov
xor
shrb
fs
pop
lds
dec
lret
imul
inc
sub
xchg
adc
idiv
scas
clc
stc
test
es
adc
movsl
outsl
push
add
adc
sbb
in
xchg
push
test
imul
aas
repz
in
ficoml
xor
cmpsl
movsl
mov
mov
mov
cltd
sub
pop
hlt
or
je
xchg
pop
imul
pusha
cmpsl
dec
inc
dec
scas
xchg
add
scas
orb
sbb
adc
icebp
cmp
js
repz
sbb
and
sub
flds
jg
inc
jbe
mov
aas
test
xchg
inc
enter
mov
lods
mov
repz
gs
lahf
and
int
xor
idivb
loope
rorl
or
xchg
cmp
cmp
dec
shlb
testl
or
mov
jle
loop
inc
mov
jmp
push
rcrb
xor
addl
in
pop
in
cs
pop
sahf
int3
cmp
and
cltd
outsl
insl
repz
sbb
inc
cmp
enter
test
sarl
iret
ret
clc
arpl
test
pusha
enter
lret
jns
and
push
or
sub
repnz
add
es
jne
pop
sbb
dec
dec
jno
cmpsb
addr16
mov
pop
and
fiadds
popa
nop
cmp
rorb
and
cmp
xor
sub
scas
cmpl
and
rolb
inc
lock
pop
shrb
mov
mov
add
adc
jne
and
mov
pushf
nop
jnp
push
std
push
aam
xchg
cmp
iret
or
ds
test
and
pop
out
hlt
cmp
pop
sub
popa
loop
pushl
push
data16
dec
push
aam
or
das
outsb
lret
jg
xchg
dec
lods
xorl
xchg
out
cli
mov
pop
mov
mov
pop
cs
adc
test
mov
dec
fsubrs
jle
xchg
popa
cmpsl
in
mov
aam
outsl
scas
push
sbb
pop
fnstenv
xchg
cld
push
mov
call
mov
jg
in
mov
fldl
fstps
scas
cmp
out
fidivrl
ja
mov
push
fiadds
xchg
mov
cltd
fiaddl
push
dec
ja
jbe
adc
sarl
data16
jle
in
out
rcll
push
movsb
imul
popa
mov
repz
lcall
pop
repnz
stos
ret
insb
mov
in
lret
push
add
lds
iret
out
in
xor
in
sub
stc
xlat
ds
daa
scas
inc
push
ja
stc
push
inc
or
adc
dec
loopne
stos
iret
jp
pop
popa
push
lea
insl
sbb
cmp
lret
push
pop
stos
pop
push
cwtl
jg
fists
fs
ds
dec
mov
sub
mov
fwait
adc
pop
test
sub
push
dec
popa
xchg
and
js
add
add
sub
push
dec
push
ss
mov
leave
push
sbb
ret
lock
in
push
scas
cltd
and
add
insl
out
cmp
xchg
std
sbb
ja
pusha
push
xor
pop
std
sahf
xchg
int3
or
addb
es
jo
imul
femms
cmp
inc
jmp
imul
xlat
cmp
jbe
cli
ror
push
arpl
out
in
mov
cmp
subb
fsubrl
loope
cmpsb
add
push
and
insb
std
test
cli
in
sti
mov
mov
sahf
scas
pop
dec
test
ret
sub
lds
adc
or
repnz
jmp
sub
pusha
xrstor
addr16
sbb
loope
aam
aaa
push
int3
xor
dec
fcompl
xchg
adc
xor
push
xor
pop
jae
jno
jp
inc
iret
push
clc
cmovno
fldenv
cli
sbb
movsl
addr16
fisubs
leave
and
sub
ds
adc
filds
loope
jo
sub
fstps
mov
movsb
mov
or
inc
into
xor
sti
repz
inc
movsl
cwtl
mov
mov
test
hlt
addl
pop
mov
cmp
cs
outsb
shlb
xchg
mov
xchg
lock
scas
jbe
xor
sub
stos
fwait
addb
jl
sub
iret
and
mov
jb
in
in
jecxz
sbb
sub
push
stos
jnp
in
push
lret
inc
in
sub
or
cld
adc
cmc
das
inc
dec
mov
les
in
dec
inc
insl
leave
lea
fldt
adc
mov
or
xchg
ss
sbb
push
loopne
mov
mov
cwtl
ss
inc
icebp
int
or
std
divb
mov
xchg
scas
mov
test
mov
mov
inc
sub
add
push
or
push
sub
pop
xor
xchg
push
outsb
std
lods
inc
popa
xlat
vpsubsw
aaa
stos
pop
xor
imul
mov
leave
aas
push
inc
mov
dec
jp
mov
scas
iret
lds
das
or
in
sub
clc
cmp
out
aas
outsb
xchg
push
mov
sub
mov
add
cltd
jb
and
insl
in
lock
inc
lods
inc
jle
jg
nop
dec
aad
cwtl
cs
out
stc
pop
pop
mov
inc
minps
and
xlat
rcrb
clc
mov
jmp
ret
cmpsl
insb
xor
adc
inc
inc
leave
les
ljmp
clc
mov
addr16
std
ljmp
ret
je
cmp
movsl
fbstp
test
mul
lods
aas
jnp
pop
sub
mov
ljmp
and
xor
inc
movsb
sub
test
dec
imul
pushl
daa
cmp
push
jae
pop
cli
ss
mov
or
jne
mov
hlt
and
fwait
or
pushf
sbb
cmovp
mov
les
gs
ret
ljmp
icebp
pop
dec
pushf
call
mov
push
jae
mov
adc
mov
or
cmp
sub
in
mov
fldl
bound
pop
icebp
test
or
cmpsb
jb
stos
ret
ds
repz
push
mov
mov
push
cmp
lods
aam
or
js
shlb
push
push
adc
std
jle
cltd
inc
xor
jbe
xor
mov
lods
jmp
push
mov
mov
dec
repz
imul
or
fcoms
and
stos
mov
cli
pushf
nop
xor
loop
xor
shrb
xor
sbb
out
pop
mov
sbb
ljmp
hlt
in
cs
adc
repnz
sbb
pushf
out
pop
adc
jo
mov
inc
jno
pop
popf
jo
mov
iret
jns
lret
inc
inc
das
adc
push
in
outsb
push
xchg
dec
dec
sahf
pop
fistl
movsl
cmpsb
sub
test
jl
loop
xchg
pop
jns
sub
mov
nop
mov
iret
shrb
outsb
sbb
jmp
jmp
sub
sub
and
inc
test
add
test
add
test
mov
xchg
add
xor
dec
and
jmp
bound
daa
cli
mov
cmpsb
es
xchg
fst
repz
push
popl
mov
xor
pop
push
loop
mov
xorb
scas
stos
ss
ret
sbb
add
dec
xchg
mov
mov
cs
dec
push
test
mov
inc
movsb
pop
dec
push
mov
push
arpl
adcb
mov
loope
or
xchg
inc
data16
insb
sbb
mov
or
ljmp
xor
jb
and
icebp
or
pop
inc
mov
cltd
neg
imul
loopne
or
sbb
mov
and
testb
jecxz
xchg
test
fistl
sub
enter
repz
imul
inc
sub
push
mov
das
cli
xor
adc
in
or
fisttpl
mulb
inc
or
mov
ret
lahf
das
jae
rorl
pop
iret
inc
fdivr
fdivl
fisubrs
mov
push
or
out
inc
mov
mov
jno
mov
mov
cwtl
mov
xchg
sub
push
add
mov
ret
scas
loopne
imulb
out
inc
lret
fcomps
sbb
in
mov
mov
iret
push
or
pushf
ret
std
xchg
sti
dec
mov
inc
sub
mov
out
jae
cmp
jnp
jbe
inc
fs
ret
lahf
and
popa
sbb
xorl
adc
mov
dec
addr16
pushf
inc
sbb
stos
pop
popf
xor
mov
push
push
fildl
pop
mov
cs
lret
or
dec
insl
push
xor
adc
mov
aad
fstl
xabort
or
cmpsb
sbb
jge
cld
adc
popf
leave
outsb
inc
jge
sar
sbb
ljmp
ljmp
nop
or
dec
sbb
jecxz
dec
test
sub
cmp
jo
pop
mov
jecxz
add
push
ds
pop
test
and
adc
sub
inc
xor
jb
les
push
jp
xchg
xchg
jg
or
call
dec
xor
sub
jmp
enter
xlat
hlt
roll
cmp
insb
pop
hlt
into
std
adcb
repnz
cmp
mov
adc
mov
daa
push
dec
pop
pusha
movsl
mov
sub
push
sbb
scas
or
outsl
jbe
in
mov
in
in
push
std
sub
loopne
mov
push
xchg
xor
and
test
mov
es
push
inc
int3
mov
cmp
sti
mov
mov
enter
and
sub
sar
inc
jno
ficoms
in
mov
xor
fdiv
out
mov
sbb
test
cmp
push
and
sbb
loopne
adc
jne
dec
sbb
mov
sarl
lods
out
dec
out
leave
movsb
adc
mov
mov
xchg
xor
mov
jno
sahf
rclb
ja
push
pop
lods
jno
xor
aaa
mov
mov
loope
dec
inc
adcb
js
stos
addr16
jl
loop
sbb
test
xchg
orb
mov
sahf
add
mov
sbb
push
mov
mov
mov
push
dec
mov
fs
mov
enter
shrb
or
ret
sbb
push
call
cltd
cwtl
dec
push
dec
mov
adc
mov
fsubrp
pop
xor
jae
push
lret
jb
aas
xorl
inc
shlb
push
fsubl
mov
and
jbe
xor
lods
mov
jl
fcmove
pop
movsb
lds
test
mov
inc
aam
rcrl
xchg
out
lret
sbb
js
lret
aam
dec
jle
dec
push
loop
add
mov
inc
xor
inc
mov
xchg
inc
es
lds
int3
pusha
les
repnz
fdivrs
mov
and
jle
sahf
push
aad
xchg
rcrb
or
xor
sub
out
push
and
inc
sub
repnz
stos
int3
push
imul
je
les
imul
mov
sub
scas
popf
popa
ficoml
aad
into
popa
ja
lods
or
mov
clc
push
lods
imulb
cwtl
in
sub
jne
or
mov
inc
mov
fs
insl
push
ror
mov
add
jne
dec
jb
stc
jl
pop
js
mov
xchg
cmp
stos
dec
mov
pop
pop
bound
or
insb
insb
pushl
mov
das
js
iret
or
loopne
xchg
test
push
sbb
push
and
xchg
fiadds
in
mov
pop
push
fisubl
scas
inc
jle
lcall
in
int
jle
aam
push
push
cs
sub
mov
scas
mov
nop
imul
sti
shl
add
pop
xchg
xchg
test
test
mov
jecxz
repz
cmp
test
outsl
push
mov
or
mov
and
inc
mov
cld
cltd
ret
gs
inc
out
sbbl
inc
dec
rolb
xor
out
js
mov
push
push
in
pop
fiaddl
nop
mov
jp
xchg
aas
push
push
bound
and
xchg
inc
jg
rcll
pop
shlb
test
fidivrs
ret
sub
cmp
jecxz
pop
fildl
or
dec
out
or
cmc
push
sub
push
pushf
push
push
mov
cwtl
sbb
xor
cmpsb
adc
js
xor
pop
call
cmpsl
out
or
sub
xorl
cmp
aad
and
test
xchg
sub
sub
jecxz
lret
or
mov
inc
sbb
mov
xchg
nop
lcall
push
pop
mov
cli
pop
xchg
xchg
aaa
es
out
jns
rcll
sarl
lretw
adc
adc
fidivrs
adc
mov
inc
in
mov
pop
pop
aas
jle
cli
into
dec
add
mov
xchg
lret
das
inc
hlt
cmp
decl
and
add
fwait
cmpsb
xor
mov
push
cltd
push
or
dec
sti
and
paddsb
fnsave
dec
xor
flds
or
fwait
xor
fcomp
sbb
cmp
mov
dec
xor
pop
inc
out
xchg
push
arpl
popf
inc
push
orl
pop
ret
repz
adc
je
cmp
or
ret
mov
test
cwtl
popf
das
mov
sbb
ja
mov
jb
mov
out
je
dec
addr16
test
jnp
test
jg
ljmp
test
cmpsl
push
adc
sti
xor
int
subl
popa
dec
ja
clc
rcr
dec
mov
sbb
push
adc
lock
sub
push
into
mov
mov
pop
lahf
inc
incb
xchg
bound
sbb
and
mov
cmp
cmp
in
push
lret
ret
adc
inc
movsl
out
dec
bound
lahf
push
ficompl
mov
fimuls
popf
inc
fldt
lods
pushf
leave
data16
scas
je
fcmovne
in
clc
cmc
imul
ljmp
ljmp
pop
dec
add
cmp
jmp
in
nop
outsb
jae
aaa
jnp
cli
js
sub
inc
stos
inc
stc
xchg
fldenv
and
arpl
jle
js
push
mov
mov
fisubrl
mov
outsl
ret
lods
lods
sub
pop
pop
bound
sub
sub
dec
ja
scas
push
xor
aad
lods
inc
cld
sti
mov
mov
mov
mov
or
sbb
xchg
pop
call
ss
push
cwtl
enter
jb
pop
pop
dec
xor
cmpsl
mov
cwtl
pop
jne
or
repz
jle
sbbb
sub
pop
push
push
test
add
sbb
mov
push
xorb
adc
add
mov
dec
in
mov
jmp
dec
mov
mov
fistps
sub
pop
add
sbb
rcrb
mov
dec
mov
xchg
sub
mov
sbb
lcall
iret
in
aad
xchg
test
loop
orb
sub
lcall
cmpsb
adc
add
inc
adc
dec
add
jae
sub
testl
push
mov
and
mov
int
push
add
and
fsts
push
sub
pop
femms
ror
popa
mov
lds
pop
sbbl
aam
mov
push
sti
jns
inc
jo
dec
mov
jnp
inc
fadds
ja
enter
mov
inc
xor
mov
inc
adc
hlt
ss
mov
sar
daa
jno
sbb
cmpsl
test
xlat
scas
sub
outsb
es
jo
call
pop
push
add
push
sbb
push
xor
mov
xor
ficoms
outsl
pop
xchg
lret
bound
or
mov
sahf
adc
cmp
add
dec
mov
loope
push
out
and
mov
movsl
ss
push
cli
ds
mov
dec
insb
jnp
daa
cmp
and
icebp
fmuls
insb
lods
loopne
xor
sub
push
mov
pop
dec
insl
sub
addb
or
cli
cmp
test
sar
test
xchg
mov
sub
add
fnstcw
xor
out
and
lahf
add
jmp
fistps
arpl
mov
sarb
jno
aad
sbb
scas
loopne
inc
and
imul
jmp
popf
adc
insb
stc
data16
jle
mov
addb
mov
xor
and
mov
cmpsl
js
movsb
xchg
mov
loop
mov
dec
sub
loope
jne
jo
scas
and
sub
fsubp
inc
mov
repz
jnp
sub
adc
icebp
sub
and
dec
shld
aad
pop
popf
push
fsubs
pop
into
mov
inc
inc
mov
pop
in
mov
fwait
scas
cs
inc
dec
fcomps
sbb
mov
scas
push
outsl
cmpsl
mov
arpl
push
std
rorb
pop
add
cld
pop
addr16
mov
push
mov
or
cltd
mov
lret
pop
fstpl
sti
mov
jno
nop
and
mov
jmp
insl
mov
or
pop
daa
out
jmp
ret
push
and
dec
xor
pop
test
dec
or
daa
arpl
rcl
mov
popa
movsl
jne
xor
stos
subb
xor
dec
hlt
mov
fiadds
pop
xor
jbe
or
sbb
push
cmp
dec
bound
mov
test
pop
jp
ret
cmp
leave
es
and
xchg
movsl
aad
mov
stos
ljmp
das
mov
mov
test
fists
fidivl
call
insl
and
loopne
orb
push
mov
pop
mov
mov
ljmp
mov
arpl
nop
outsl
xchg
mov
popf
mov
icebp
jo
sbb
loope,pt
sbb
adc
ret
xor
je
stos
test
fsubrl
ret
inc
fwait
inc
dec
dec
ds
pop
mov
sbb
fisubl
imul
lahf
mov
push
std
in
pop
pop
mov
add
cmpsl
scas
pop
adc
orb
cmp
lock
push
dec
lret
pusha
mov
divb
cmc
das
add
mov
push
shrb
xchg
jne
push
scas
add
cltd
mov
fiadds
push
scas
loopne
enter
and
sbb
mov
sbb
sub
sti
out
ficoml
pop
insb
pop
sub
inc
out
pop
sbb
popa
mov
hlt
cmp
mov
jns
adc
out
push
sub
mov
jns
scas
jns
shll
dec
ss
fbstp
dec
mov
stos
sbb
mov
mov
loope
cli
out
pop
mov
xor
dec
in
pushf
xchg
push
test
inc
lea
test
lahf
test
sbb
sbb
ja
push
test
pop
xchg
imul
mov
add
fcoms
pop
push
mov
xor
enter
rolb
mov
test
pop
inc
add
inc
imul
sbb
cld
dec
aas
xlat
ljmp
dec
jg
mov
cmpsb
loope
xchg
inc
mov
outsb
jmp
add
ja
and
jmp
fisubs
inc
adc
and
inc
pop
or
or
imul
jb
xor
popf
mov
or
push
push
add
pop
dec
ss
sbb
or
lock
jg
mov
inc
leave
pushf
push
xlat
scas
and
testb
jae
pop
data16
cmpsl
add
sbb
mov
mov
push
mov
pop
loope
fucomip
mov
adc
and
test
mov
dec
xchg
aas
jmp
repnz
and
scas
mov
test
mov
and
jbe
outsb
in
popa
fs
out
loopne
pop
fcmove
or
test
mov
pop
jp
insb
bound
iret
sar
dec
or
fdivl
lret
aas
gs
rorl
jno
xchg
sbb
ljmp
ret
unpcklps
arpl
pop
jbe
add
scas
xor
pop
xor
adcb
add
jmp
js
rol
mov
mov
and
subb
sub
imul
cmc
pushf
in
mov
adc
sub
push
es
sbb
xorl
inc
cltd
sub
cwtl
stc
and
mov
ds
movsl
jo
clc
jns
pop
xor
sub
dec
mov
mov
inc
mov
sub
pop
pop
arpl
popa
mov
addr16
inc
xor
xor
std
iret
pop
outsl
dec
flds
andl
or
popf
pop
mov
aas
add
mov
xchg
pop
movsb
add
shl
popa
mov
repz
xor
xchg
mov
shll
dec
mov
bound
jecxz
push
add
ljmp
add
jno
or
pop
dec
scas
out
dec
cmp
cmpsb
mov
dec
scas
leave
add
int3
test
lcall
js
pop
not
dec
leave
add
fmull
dec
push
imul
in
jb
pop
cmp
mov
lock
jne
cltd
imul
and
movsb
popa
aam
lcall
stos
xchg
sahf
stc
rolb
mov
cmc
sbb
pop
push
mov
push
ss
ds
aam
add
iret
cltd
inc
aad
add
nop
add
push
push
mov
xor
mov
push
xchg
mov
mov
mov
mov
sahf
outsl
or
stos
aad
xchg
ja
add
cmp
lods
pop
push
sti
mov
jle
cltd
loopne
push
std
mov
push
and
lock
sub
pusha
xchg
aaa
sbb
mov
outsb
sub
and
mov
shll
imul
shrb
ret
ds
fdivrs
jmp
push
or
lods
mov
jae
xchg
lods
aas
pop
push
mov
mov
jne
xor
roll
adc
notl
mov
and
mov
ret
cmp
arpl
sub
adc
sub
repnz
mov
jns
dec
scas
add
aad
xchg
cmp
iret
mov
mov
cmpsb
sar
mov
cmp
insl
int3
sub
sub
cltd
aad
push
mov
sub
sbb
push
lahf
cmp
or
or
cmpsb
fwait
mov
jmp
lods
push
xchg
fistl
dec
cmpsb
sbb
mov
stos
push
dec
push
sub
xlat
pop
sti
cli
pop
fnstenv
adc
push
add
ds
or
jb
outsb
lods
jg
xchg
mov
fistps
push
sub
lods
cltd
add
test
imul
popa
and
xor
dec
leave
add
aad
jb
jp
scas
loop
xor
mov
pop
xor
clc
xchg
mov
add
test
clc
mov
test
or
push
orl
jg
ud2
sub
push
jmp
mov
jg
mov
mov
gs
leave
add
int3
sbb
subb
nop
and
mov
outsl
adcl
jg
jns
pop
push
push
fstl
sahf
std
andl
fdivl
repnz
dec
fimuls
je
cmpb
jg
int
xchg
mov
jns
xor
loopne
and
pop
addr16
rclb
cwtl
adc
pop
and
mov
loop
loopne
and
rcrb
cmpsb
inc
dec
addr16
push
sbb
xchg
add
sbb
mov
inc
popa
and
out
mov
dec
sbb
mov
or
mov
xchg
repnz
jbe
mov
cmp
iret
fwait
dec
out
pop
repnz
dec
repz
std
iret
fsubr
lds
push
cli
cmpsl
xchg
pop
jno
sub
xor
mov
js
cltd
inc
out
bound
lcall
or
push
xchg
lret
sub
jno
cmp
inc
dec
je
rorl
mov
push
imul
lods
sbb
lock
jge
push
inc
ret
and
lds
and
adcb
sbb
aam
mov
out
pop
insb
pop
loope
lea
cmpsl
dec
inc
adc
enter
lcall
push
and
mov
loopne
mov
lahf
xlat
jo
ret
das
fiadds
movsl
flds
xor
add
pop
test
inc
inc
and
pcmpgtb
mov
scas
dec
xor
clc
mov
push
shlb
mov
aad
pushf
scas
sbb
scas
outsb
or
xchg
sub
cwtl
cmp
dec
incb
or
loopne
jnp
iret
cld
rol
jecxz
andb
sbb
or
jns
push
inc
rorb
rclb
xor
or
ljmp
dec
add
jbe
and
jmp
jmp
mov
or
dec
aad
mov
insb
xchg
pop
sub
jnp
clc
test
cmc
shll
jmp
add
xchg
push
fisubrl
mov
lret
xor
xlat
ficoms
xchg
cwtl
xchg
inc
mov
mov
sub
mov
adc
ljmp
popa
push
push
pop
je
dec
push
push
imul
jno
push
icebp
pop
dec
sbb
pop
sbb
xchg
mov
mov
inc
mulb
ss
icebp
cltd
sub
jne
inc
sbb
cmc
xchg
xchg
push
fcoml
das
xor
mov
sub
mov
jnp
je
dec
push
sub
subb
lcall
insb
cmp
dec
and
xor
mov
mov
int3
and
push
mov
inc
lods
popa
data16
fiaddl
test
push
sbb
icebp
scas
loope
icebp
and
push
sbbb
clc
popa
out
xchg
mov
out
push
aam
adc
fildl
out
ret
xor
outsb
xchg
mov
stos
popa
sub
jnp
es
jle
pop
in
push
gs
daa
daa
out
inc
push
mov
push
movsl
push
cs
pop
leave
jns
adc
aas
mov
cmp
sbbl
es
gs
dec
pushf
lahf
jg
cli
ljmp
xor
aaa
and
movsb
into
es
rclb
add
out
cmp
xchg
lcall
ret
ret
mov
jmp
stos
into
or
aas
addb
push
in
mov
out
add
mov
sti
push
xor
dec
xor
pop
sub
mov
data16
out
mov
jg
lods
mov
cmp
mull
pop
xchg
pop
xchg
es
stos
cmp
pop
pop
pusha
dec
ja
outsb
scas
testl
dec
xlat
cmp
jmp
jbe
ljmp
push
dec
lock
mov
xchg
xchg
outsl
aad
mov
loop
lea
ret
out
lret
pop
dec
jmp
test
cs
hlt
cld
sbb
jmp
mov
leave
adc
push
and
pusha
scas
fldenv
jae
sahf
add
mov
loope
test
jae
adc
mov
mov
cmp
inc
pop
xchg
mull
or
stos
sub
jg
in
stos
jge
test
xchg
dec
cmp
jmp
sub
out
ficompl
js
jp
daa
rcrb
mov
icebp
push
pop
cmp
fidivl
sub
fisubs
cld
pop
mov
aad
push
shlb
pop
fimuls
out
adc
mov
push
bsf
xchg
in
mov
push
int
inc
push
lods
idivl
fdivl
xor
ljmp
or
jbe
mov
movsb
fcomps
scas
sub
xchg
xor
in
mov
inc
jmp
xchg
add
out
sub
xor
aam
xchg
mov
imul
sbb
int
int
mov
lods
pop
mov
adc
jns
dec
xlat
shl
cmp
aad
xor
pop
out
push
adc
stos
mov
aaa
mov
iret
mov
cs
cmpsl
push
mov
push
jno
push
add
test
movsl
mov
mov
mov
call
mov
mov
ds
pop
sub
ret
in
sti
pop
arpl
stos
in
sub
inc
adc
ljmp
or
int3
dec
mov
dec
scas
ret
cmpsl
sub
dec
sub
cmp
pusha
dec
jno
sub
add
or
nop
shl
adc
inc
scas
jbe
fwait
loop
xor
stos
pop
shrl
stc
mov
js
add
mov
cmpsb
test
aad
roll
adc
and
int3
loop
jl
ficomps
jb
pop
fdivr
jp
cmpsl
repnz
mov
add
sbb
sub
mov
sub
fnstcw
pop
test
mov
mov
lods
aad
aas
jecxz
push
call
jne
push
and
mov
sbb
jl
in
lcall
sbb
adc
dec
stc
pop
ja
sahf
add
and
ja
ja
and
mov
or
sbb
daa
cltd
xchg
push
in
or
inc
fwait
cwtl
data16
adc
inc
or
mov
pop
outsb
pop
push
cmc
les
les
fstps
cmp
pop
inc
outsl
mov
adc
in
in
add
ficompl
and
or
arpl
pushf
repz
inc
xor
test
jne
lret
fsubr
test
adcb
repnz
flds
mov
fistpll
stc
cltd
call
out
lret
dec
outsb
data16
xor
xor
and
movsl
xchg
shrb
pushf
stc
call
std
sti
cltd
dec
arpl
movsl
cmpsb
sbb
mov
pushf
jbe
sbb
outsb
neg
out
dec
jge
xchg
bound
fidivrs
stos
push
aaa
mov
in
xchg
int3
inc
sti
xor
js
call
addr16
adc
inc
stos
hlt
dec
js
xorb
bnd
sub
cld
add
push
adc
dec
xchg
xchg
mov
cmp
pop
cmp
pushf
fcoml
mov
push
daa
dec
dec
cmc
jp
inc
mov
cmp
mov
addl
sar
sbb
fwait
cmp
cmp
sub
sub
push
lcall
mov
jge
and
inc
cmpsl
push
mov
cmp
imul
push
fildll
out
mov
in
mov
adc
je
mov
imul
decl
mov
sbb
mov
insl
iret
cmp
sbb
cs
clc
std
sti
std
pop
int3
xor
scas
xchg
add
clc
ljmp
shrb
fstpt
adc
fimuls
jo
roll
and
divl
or
jo
mov
lods
or
vdivps
cmpl
sub
add
call
pop
mov
das
pop
pop
nop
adcl
adc
out
push
fnsave
add
cmp
mov
mov
and
out
in
fisubl
sbbl
mov
ds
into
gs
cmpsl
dec
push
dec
mov
popa
sub
mov
mov
ror
aaa
movsb
dec
cmpl
rcrb
loope
xor
nop
cmp
into
adc
dec
mov
ja
movsb
mov
pop
movsb
and
jae
push
jo
cli
adc
jp
or
sbb
mov
xor
call
push
pop
rolb
out
ljmp
push
inc
xlat
add
mov
sar
adc
push
xor
test
xor
icebp
stc
scas
pop
dec
xchg
test
push
daa
pop
and
lahf
aaa
add
add
pop
mov
jp
iret
shld
fwait
mov
es
into
sbb
mov
add
mov
nop
add
rorl
dec
dec
loop
fldt
pushf
dec
push
out
repnz
out
push
push
imul
scas
mov
lahf
cmpsl
fwait
ret
mov
mov
aam
pop
adc
clc
in
aam
dec
jae
inc
cmp
icebp
orl
xchg
mov
xchg
scas
lods
inc
ja
lods
ret
vpaddsb
insl
xor
adcl
ret
call
xor
sbb
sbb
inc
sbb
ds
adc
or
repz
lret
jb
subl
mov
xchg
out
int3
leave
jb
jecxz
fists
push
xor
jae
cmp
repnz
adc
imul
outsl
bound
mov
aad
loop
mov
rcll
pusha
or
jle
scas
lret
loop
dec
jg
enter
cltd
xchg
push
jb
test
dec
mov
sub
imul
cmp
ficoml
cwtl
and
adc
ss
pop
inc
push
movsb
sarl
inc
sbb
sbb
mov
push
push
inc
call
sub
testb
jge
or
lret
movsb
inc
jo
orb
and
sub
xchg
dec
out
mov
popf
xchg
jge
fistps
inc
jns
dec
out
es
mov
clc
std
dec
or
into
push
in
mov
out
movsl
loope
dec
cld
lock
jb
adc
out
js
sbb
sti
mov
push
inc
enter
xchg
loop
adcb
xchg
dec
ljmp
ret
mov
nop
mov
mov
inc
adc
ret
mov
xlat
mov
into
xchg
or
xor
and
inc
dec
jge
test
adc
test
mov
pusha
mov
addr16
cmp
push
imulb
shr
rcrl
insl
test
and
clc
nop
jle
adc
mov
dec
push
adc
dec
sub
test
cld
data16
sahf
les
stos
push
std
xchg
stos
ss
jmp
jecxz
arpl
adc
gs
pop
sbb
or
out
push
and
int
lcall
mov
out
fdivl
adc
pop
pushf
int
or
add
lret
and
pop
add
daa
in
pop
popf
xchg
jo
out
cmovb
dec
adcl
pop
jno
pop
xor
pop
js
adc
jo
sbb
push
insb
mov
pusha
pop
xlat
rcll
push
rclb
shll
cld
mov
dec
mov
inc
icebp
ss
enter
mov
sarb
adc
and
sub
cltd
arpl
sbb
pop
inc
test
adc
mov
adc
inc
inc
enter
test
daa
cmc
mov
xlat
test
out
mov
sub
insb
or
je
bound
dec
decl
and
lods
and
insl
inc
and
mov
lret
sbb
call
cmp
lea
dec
mov
add
xor
out
jae
inc
stos
dec
add
icebp
xor
add
lret
mov
push
loope
movsl
popf
mov
cmpl
rolb
bound
dec
cmp
clc
xchg
cwtl
call
add
lcall
mov
pushf
or
aam
mov
pop
xor
mov
je
cmpsb
inc
pop
push
jns
dec
or
andl
daa
xchg
inc
mov
sub
cmp
pop
sbb
add
clc
jo
jne
mov
push
xchg
jmp
jno
mov
aas
jl
push
test
sbb
orb
dec
or
ret
sub
push
xchg
jo
adc
aaa
xlat
mov
add
fwait
std
mov
push
psubsb
fcmovb
ljmp
sbb
out
mov
inc
fnstsw
imul
sbb
addl
dec
iret
cli
or
pushl
lods
aam
jo
mov
cld
in
or
pop
jbe
flds
or
cmc
rcll
cli
es
push
mov
cld
sub
mov
idiv
js
fcmovb
sahf
lock
adc
repz
push
inc
sbb
add
sti
push
ljmp
cmp
out
sub
mov
mov
pusha
sub
mov
xchg
insl
loopne
and
xchg
lods
adc
lods
xchg
in
ret
sbb
mov
mov
jnp
hlt
cmpsb
inc
fmul
mov
ds
sbb
mov
xchg
pusha
mov
jae
jns
pop
call
inc
gs
fisttpl
outsl
xchg
jp
mov
gs
insb
xor
loopne
dec
jp
add
jo
xorl
xor
xchg
les
or
lods
ss
jmp
cmp
es
decb
cmp
inc
arpl
in
rcl
minps
loope
sub
daa
andb
dec
clc
sub
jns
cmp
test
or
inc
fcmovne
sbb
movsl
mov
rol
jae
dec
fwait
mov
ljmp
or
fadds
xor
sbb
stc
and
hlt
cwtl
sub
daa
stc
popa
mov
dec
add
sub
dec
in
push
test
or
cmp
das
fs
pop
xchg
pop
data16
or
sub
out
dec
fsubrs
sub
jl
xchg
dec
push
movsl
mov
sahf
inc
pop
loop
add
sub
xor
jge
jle
sub
popa
mov
std
dec
add
and
loopne
dec
cmp
pop
int
push
mov
movsl
iret
jge
pushf
adc
adc
inc
ret
lcall
and
in
jnp,pt
cs
mov
stc
jmp
mov
in
inc
dec
sbb
in
xorb
test
rcrl
sub
test
shrb
cmpxchg
jae
pusha
pushf
mov
mov
outsb
push
dec
xchg
loop
mov
stos
cltd
pop
mov
cmpsb
lret
jmp
mov
xchg
test
mov
and
rcrb
adc
pop
xlat
cmp
lea
jo
push
cmp
inc
pop
lret
xorl
dec
cmp
mov
loopne
nop
shll
mul
sub
notb
ret
inc
jp
xor
xchg
jl
push
xchg
shrl
cld
out
cmp
lahf
jno
sti
in
sub
cmp
jbe
test
mov
pop
bound
incb
cmp
inc
mov
orl
dec
addl
cmp
dec
xor
push
call
jmpw
or
add
push
dec
pop
jmp
popa
mov
cmp
bound
dec
mov
adc
sbb
outsl
orl
ja
dec
add
daa
out
ret
shrd
jle
sub
inc
or
movsb
jnp
xchg
je
into
xorb
insl
xlat
pop
or
loop
clc
jmp
out
inc
cmp
sbb
dec
lods
mov
mov
push
adc
sti
addr16
sub
test
mov
xor
pop
dec
fisttps
in
xchg
cld
xchg
sahf
ret
mov
shr
cmpsb
into
or
bound
mov
mov
sbb
and
or
dec
pop
mov
popf
adc
mov
mov
aam
add
push
dec
mov
pusha
mov
dec
imul
icebp
repnz
hlt
scas
insb
bound
or
mov
loop
inc
stos
add
mov
mov
sub
inc
and
imul
fidivrs
ds
or
pop
shl
lret
jns
bound
mov
push
or
sub
fisubs
icebp
cltd
js
mov
sub
lahf
dec
flds
ret
add
testl
mov
xchg
imul
push
int3
jp
push
scas
push
jno
sub
cmp
subb
scas
add
and
push
int
outsb
push
mov
dec
mov
pop
ficoms
jecxz
mov
push
lods
jmp
mov
xor
ret
cmp
adc
ret
jns
loop
cmp
and
xchg
sub
cmpb
imull
iret
pop
cld
scas
in
dec
cmp
in
xor
and
xchg
rorb
negl
loop
outsl
stos
dec
mov
gs
adc
idivb
fwait
cmp
and
stos
leave
dec
cmc
push
imul
and
shrl
pop
lock
into
inc
popa
enter
fimull
sbb
mov
arpl
or
add
xor
ficoml
mov
mov
lcall
fs
mov
js
loop
and
ror
rcrl
repnz
xor
push
pop
add
neg
push
outsb
clc
sbb
ljmp
add
jnp
fadds
push
add
or
lcall
xchg
xchg
inc
cmp
jle
mov
outsl
push
fstpt
fcoml
in
insl
dec
bound
outsl
lahf
xchg
add
cltd
mov
pop
mov
test
push
cmp
add
cltd
xchg
push
xor
jge
jnp
dec
pop
ja
lock
lcall
adc
outsb
movsb
mov
or
scas
ret
subb
ja
cmpsb
lcall
or
mov
ss
rcl
stos
imul
out
dec
enter
xor
dec
xlat
xor
inc
jns
popa
std
xor
push
or
jecxz
lds
add
lods
push
xor
jg
out
xchg
es
shlb
jl
jns
shrl
bound
ja
pusha
leave
pop
mov
mov
mov
dec
xchg
sbb
fistps
lret
add
xchg
lahf
fwait
mov
sahf
jl
bound
out
inc
aaa
int
and
lcall
data16
or
cmp
xchg
movsl
dec
add
ljmp
movsb
mov
xchg
das
mov
jmp
jnp
push
sub
push
xor
stos
clc
bound
mov
incb
jo
stos
mov
cwtl
les
pop
add
fstps
call
cmp
lods
jg
leave
movsl
sub
mov
sub
mov
jno
cmp
mov
xor
es
sahf
xor
arpl
icebp
mov
dec
je
pop
mov
adc
negb
mov
sub
sub
inc
cmp
or
dec
mov
imulb
inc
xchg
testl
inc
xor
sbb
inc
cmc
nopl
xchg
sub
pop
adc
jbe
mov
std
rcrl
cmp
push
insl
mov
xchg
and
in
pop
sbb
fimuls
nop
pop
add
xor
movsl
nop
or
and
jp
lds
jae
mov
rcll
add
cld
inc
cmp
sti
push
and
ret
sbb
mov
mov
sahf
push
push
push
icebp
cmp
cmp
in
mov
add
fcoml
add
push
les
sub
into
lods
push
adc
pop
jp
in
mov
jmp
and
aaa
push
sub
popa
outsb
cltd
out
mov
mov
sbb
pop
and
fs
jae
jnp
lds
imul
mulb
adc
js
leave
cld
dec
imul
movsl
out
lea
fucomip
lea
mov
loop
jg
stc
xchg
push
pop
mov
mov
push
mov
sbb
loopne
mov
push
cmp
sbb
jmp
orl
sbb
push
sbb
pop
movsl
in
in
push
stos
adc
sub
data16
mov
popl
hlt
movsl
lods
pusha
daa
cld
dec
mov
mov
mov
xor
push
clc
jp
or
aas
popa
stc
and
ret
iret
mov
mov
ja
cmp
lcall
inc
data16
rorb
mov
out
sub
test
pop
mov
jb
jae
mov
cmp
push
mov
and
mov
sbb
stos
mov
ror
push
xor
add
fwait
cmp
int
out
fimull
dec
mov
jp
xor
pushf
js
stos
rorb
xchg
add
mov
pop
popa
xchg
movsl
or
inc
xor
and
mov
clc
jge
cmp
inc
xchg
push
mov
xor
jecxz
xor
lds
sub
or
inc
mov
cmpsb
sbb
hlt
xchg
in
mov
and
fstpt
rolb
popa
cmpl
inc
pop
fadd
jl
push
les
mov
subl
leave
inc
inc
imul
ljmp
jne
leave
sub
sub
je
mov
sbb
stos
sbb
or
push
push
cmc
mov
dec
jmp
and
fisubrs
push
push
popa
xchg
pusha
or
loope
enter
dec
push
fldt
jbe
push
add
cmp
pop
add
sbb
lods
gs
jp
ror
fnstenv
test
sub
or
arpl
jb
jo
paddd
out
aad
daa
sahf
ffreep
lds
inc
ret
loop
push
in
movsl
rclb
sbb
inc
dec
out
aam
insl
ret
xchg
and
mov
insb
into
dec
adc
gs
xchg
sbb
or
test
sub
mov
jb
std
dec
fwait
sub
mov
cmp
or
cli
jmp
movsl
jp
sbb
cs
rolb
dec
data16
push
mov
dec
das
and
rcll
aam
adc
lds
gs
cmp
mov
jmp
addl
xor
or
jmp
test
mov
fs
push
sbb
mov
push
xchg
and
cmp
sbb
stos
mov
in
enter
fiadds
mov
ret
sbb
jp
cmp
nop
or
push
stc
rcl
lds
inc
sti
mov
jo
mov
mov
fscale
sbb
scas
aaa
js
outsl
dec
mov
xlat
push
xor
or
xchg
or
inc
xor
mov
lahf
sbb
jae
inc
jae
sbb
jmp
lods
mov
enter
lea
mov
pop
test
xor
mov
add
inc
dec
test
sbb
clc
push
imul
cmp
pop
add
imul
test
xchg
pushf
sub
aas
shlb
inc
xor
cmpsl
or
pushl
outsl
js
xor
inc
imul
loop
xlat
movsl
inc
jb
adc
mov
fsubrs
scas
mov
jp
mov
out
add
popa
xchg
test
cwtl
ss
push
cli
inc
pop
in
inc
das
pushf
and
jae
xor
mov
add
and
movsb
or
imul
out
arpl
push
sub
jno,pt
pusha
or
out
dec
adc
mov
lods
jae
pop
in
fcoml
popf
push
jb
cmp
imul
and
std
jbe
stos
imul
mov
inc
adc
mov
out
data16
pop
mov
mov
adc
cmpsb
fisttpll
addr16
cmp
clc
icebp
pusha
repz
push
mov
push
or
std
dec
jbe
xlat
sub
push
pop
inc
pop
sbb
adc
xchg
xchg
mov
mov
mov
cmp
fiaddl
xchg
xorb
lock
mov
lods
out
or
xchg
ljmp
lock
push
out
push
xor
outsb
xor
dec
pusha
jmp
scas
push
dec
int3
cmp
popa
movsw
out
adc
adc
hlt
divl
mov
fisubl
loopne
mov
pop
pop
fildll
lcall
ja
sub
inc
loopne
adc
popa
pop
shll
cwtl
adc
fisubl
dec
mov
mov
dec
jno
or
jo
cmp
pop
test
push
int
incb
add
ret
mov
cmp
push
dec
sbb
sub
mov
jbe
xchg
addr16
icebp
jns
dec
imul
repnz
addr16
push
sbb
sub
test
xchg
adc
cmp
sbb
jno
mov
jbe
inc
xor
mov
push
or
pop
js
sub
lea
frstor
in
or
jge
lret
inc
jb
sbb
xchg
add
mov
fcoml
pop
xchg
and
xchg
sti
insb
inc
mov
mov
dec
shll
test
in
jnp
ss
daa
adc
pusha
loop
mov
inc
sub
mov
sub
cltd
cmpb
xor
cmp
shrb
inc
fcmovnb
outsb
lcall
mov
pop
cmpsb
sub
add
pminsw
js
fucomip
pop
push
jmp
mov
lea
icebp
movswl
mov
xchg
cld
sub
stos
loope
outsl
mov
int
arpl
dec
lods
cmp
inc
pop
xor
adc
sbb
ret
adc
jmp
sub
jae
jmp
jno
fsubs
stos
adc
xchg
jbe
push
mov
inc
mov
pop
jb
rcll
popa
xor
dec
mov
into
sahf
cmc
fmuls
sbb
cmp
loopne
lcall
es
and
das
je
mov
mov
out
mov
push
push
and
push
rorb
aad
sti
jecxz
outsb
sub
out
cmpsl
jl
dec
push
stos
sbb
es
int
lcall
stos
jmp
fwait
xor
push
ds
fsubr
sbb
dec
jmp
cli
push
or
scas
mov
dec
mov
and
mov
sbb
mov
leave
fadds
sarb
divb
add
leave
ss
insb
mov
mov
mov
inc
rcll
push
loopne
jge
fmuls
cmp
pop
cmpb
mov
mov
pop
pushf
cmp
add
dec
ljmp
or
pop
sbb
popa
nop
mov
jmp
xchg
xor
xchg
fs
inc
xchg
mov
xchg
sbb
pop
lahf
inc
rcrb
mov
push
push
fcompl
inc
xchg
and
cmp
into
out
out
inc
fmuls
out
push
push
jbe
int
cmp
aad
dec
dec
jmp
xchg
inc
aas
inc
dec
mov
pop
jb
test
addl
xchg
sub
lahf
dec
push
xor
push
mov
or
movsb
xchg
dec
xlat
aaa
push
jbe
fsubl
xchg
sbb
arpl
rclb
sub
adc
lcall
or
lret
popf
fld
imul
les
or
test
je
out
leave
mov
fwait
push
mov
mov
popf
lods
or
push
outsb
in
push
imul
sbb
and
sub
imul
test
sub
fldcw
lahf
and
adc
lods
sbb
jns,pt
jecxz
les
dec
mov
cld
ja
mov
in
inc
shlb
mov
add
loope
mov
jno
arpl
pop
or
xor
dec
mov
jp
sub
mov
push
lea
inc
or
ret
sub
inc
aam
or
es
jns
rorb
divb
adc
cmp
and
gs
xchg
popa
add
jmp
sub
scas
cld
inc
shlb
xor
out
or
add
push
sub
mov
mov
aad
mov
mov
fs
sti
std
or
test
adc
mov
mov
push
insl
jle
mov
inc
bound
fcomps
out
mov
dec
mov
ficoms
jg
jmp
test
insl
inc
out
mov
mov
div
pusha
ss
cli
lahf
icebp
clc
loop
leave
frstor
cs
sub
mov
sbb
jmp
in
adc
cmp
daa
std
mov
bound
in
push
push
mov
arpl
aam
faddl
int3
hlt
mov
and
or
jecxz
jo
fdivp
sar
aam
pop
lock
cmp
pop
aam
mov
addl
ret
pop
mov
mov
loopne
js
and
out
and
idivl
popf
pop
adc
inc
adc
or
mov
pushf
insb
orb
call
mov
mov
inc
lds
lds
jmp
sub
sub
aas
cmp
jmp
lret
push
cmp
add
mov
and
add
test
jmp
push
adc
mov
test
sbb
out
std
scas
ss
addl
add
insb
sbbl
jnp
and
enter
cli
mov
pop
mov
sbb
sbb
mov
dec
insb
inc
cmp
xor
adc
ds
pusha
jge
test
adc
fiaddl
mov
mov
jle
data16
fisubrl
push
xor
adc
jmp
sub
pusha
loopne
into
roll
hlt
scas
in
aam
inc
enter
dec
push
add
imul
push
mov
and
xlat
sti
ret
and
loopew
inc
lret
aas
mov
je
ficoms
adcl
out
sbb
jbe
movsb
xchg
or
int3
test
out
cmp
enter
sbb
insl
adc
outsl
mov
lret
xchg
mov
loope
dec
xchg
lock
pop
test
les
inc
int
push
int
mov
xor
test
sub
int3
call
enter
push
mov
bnd
int3
loope
push
fs
push
in
dec
fdivrl
mov
adc
aaa
icebp
popf
divl
push
out
jmp
pop
cmp
out
xchg
pusha
or
scas
add
jge
into
pop
cmp
push
loop
dec
pop
roll
or
ss
push
mov
xchg
scas
mov
xchg
jno
jle
mov
ds
mov
or
or
cmpsb
push
adc
cltd
cld
cmp
jge
fsubrs
test
bound
add
dec
and
sub
and
inc
mov
or
sub
jns
ret
imul
push
mull
in
push
dec
or
mov
push
scas
adc
scas
lret
sbb
mov
clc
idivl
jns
aaa
inc
loopne
in
xchg
and
mulb
push
jno
or
in
adc
in
mov
fiadds
jg
test
cmpsb
sahf
adc
cmpsl
hlt
sti
es
jecxz
add
insl
sbb
lret
lock
sahf
dec
std
outsl
imul
jbe
push
jae
lahf
stc
inc
jnp
notl
loope
jge
or
mov
negl
stos
fadd
mov
or
imul
sub
stos
lea
sub
dec
fimuls
mov
sub
testb
jg
xchg
pushf
mov
stos
push
pop
divb
cmp
jb
cmp
cwtl
jno
je
cmc
add
fcoml
mov
xchg
ret
xchg
cmp
sub
aas
or
sub
inc
sbb
ret
inc
pop
jle
fwait
cld
and
cmp
push
push
lcall
xchg
cld
loope
call
push
add
icebp
in
jmp
test
adc
ja
xor
mov
and
jge
push
xchg
fcmovnu
les
testb
push
inc
lret
lret
sbb
push
push
popf
fnstcw
cltd
stc
pop
loop
pop
aaa
dec
aas
mov
loope
mov
cwtl
or
loopw
out
and
sti
inc
int
adc
sub
inc
inc
mov
or
stos
mov
cwtl
call
adc
sbb
sub
xor
jmp
xor
pusha
push
sub
dec
add
cmpsb
mov
mov
xchg
pushf
add
adc
xchg
inc
fisubrs
in
das
jo
cmp
dec
xchg
nop
notb
or
jp
inc
data16
and
lods
ja
out
arpl
mov
inc
mov
lds
push
inc
cmp
sbb
inc
or
add
ds
out
ss
pop
out
repnz
fldl
repnz
sti
bound
cltd
xchg
outsl
andb
rclb
jg
loope
xor
sub
sbb
aaa
sbb
or
cli
lahf
mov
mov
dec
es
pop
sbb
outsl
repnz
pop
or
fsubrl
jmp
mov
inc
dec
and
aad
sahf
test
loop
dec
sarb
mov
lret
pushf
jmp
mov
sub
inc
jg
sbb
arpl
jno
stos
pop
subl
popa
push
jecxz
xor
out
xor
xchg
xor
daa
adc
dec
jae
sti
jo
pop
into
mov
inc
test
jp
push
sub
push
cld
add
adc
mov
or
test
sahf
insb
mov
mov
and
dec
mov
fcmovnbe
fwait
loope
jbe
mov
ja
mov
push
rclb
mov
call
push
stos
out
push
pop
cmp
mov
push
std
inc
popf
mov
sti
mov
mov
mov
pop
sub
inc
insb
call
in
push
rcrb
mov
outsl
xchg
mov
cltd
scas
push
mov
xor
ljmp
insl
arpl
jg
jg
ret
push
push
push
enter
leave
sub
inc
cmpsl
sbb
xchg
arpl
mov
mov
and
je
scas
rol
cmpsl
pop
and
out
in
stos
leave
mov
mov
dec
mov
test
incl
ds
shll
cmpl
rclb
add
cmp
and
cmp
mov
mov
sbb
cld
in
or
in
push
add
ficoml
inc
in
xchg
inc
loope
cs
cmpsl
incl
cmp
outsb
inc
cmp
pop
ret
sbb
mov
cmp
inc
lahf
mov
in
push
mov
test
jno
repnz
mov
pushf
push
mov
and
xlat
jl
outsl
adc
pop
iret
xchg
push
xchg
xchg
sub
ds
icebp
cmp
add
sub
dec
dec
stc
sbb
cmp
xchg
pop
inc
roll
push
ljmp
mov
cmpsl
addb
or
pusha
sahf
cmp
jne
test
xchg
jne
loop
idivb
rclb
pop
jl
scas
in
cwtl
out
shl
or
push
jo
pop
cmp
testl
js
pop
cltd
loopne
stos
adc
sbb
roll
inc
mov
movsl
fdivp
cmp
push
idivl
cmp
cltd
dec
movsb
int
mov
jmp
lret
adc
loopne
sarb
or
das
add
ficompl
cmp
andb
stos
les
push
inc
mov
sub
imul
in
jg
pushf
lods
ds
fwait
lds
dec
jnp
and
pushf
icebp
push
out
pop
test
xchg
mov
enter
shlb
push
mov
daa
inc
mov
jno
mov
icebp
push
int3
imul
inc
adcb
mov
sbb
push
outsl
mov
shr
and
int3
mov
sbbb
dec
or
xchg
out
imul
sbb
cmp
frstor
add
rcrl
stos
mov
shll
aam
std
dec
jae
insb
hlt
inc
fsubl
jle
mov
and
out
dec
sub
inc
aad
ja
sbb
cmp
les
xchg
or
adc
mov
mov
in
mov
xor
mov
aam
jae
scas
nop
lods
daa
cmp
sbb
cmp
int3
test
add
xchg
ss
ret
inc
mov
dec
dec
mov
fidivs
sub
mov
lods
pop
sub
mov
and
js
push
in
movsb
mov
dec
call
add
xor
jg
pop
and
stos
and
cmp
jb
add
sub
rclb
aad
mov
andl
jecxz
mov
mov
push
es
mov
pushf
mov
aas
fcomps
adc
fstl
dec
mov
pop
add
inc
popa
dec
add
mov
out
mov
stc
data16
call
adc
movsb
add
add
mov
das
sbb
fdiv
lea
mov
or
xchg
shrl
xlat
lea
ljmp
jmp
rep
movsl
out
adc
sbb
ds
xlat
popf
cmp
sub
push
xchg
sti
adc
leave
mov
or
loope
push
or
scas
adc
js
and
add
jne
mov
scas
fmul
mov
roll
add
outsl
fwait
push
mov
inc
and
sahf
insl
push
scas
inc
jnp
xchg
and
xchg
and
cmp
and
in
mov
sub
cmp
cmp
pop
bound
mov
int
xchg
bound
mov
add
mov
out
jg
fldl
pop
push
out
imul
icebp
in
or
pop
jmp
push
push
int3
popf
push
xchg
sbb
pop
fisubrl
and
push
dec
fidivrs
and
stos
andb
sarb
lahf
mov
test
jbe
jae
dec
mov
adc
jne
lods
sti
sbb
pop
mov
je
cmc
lock
out
or
and
movb
pop
and
ret
xchg
ljmp
sti
or
dec
lret
mov
pop
lcall
mov
rol
mov
insb
fistl
in
in
and
loopne
outsb
mov
jno
jae
out
test
aaa
lea
dec
std
sbb
jbe
inc
xchg
sbb
addr16
sub
cmpsb
mov
sub
das
xor
cmp
mov
adc
pusha
sbb
mov
add
mov
imul
mov
call
mov
outsb
mov
mov
push
cmpsl
inc
leave
popf
cmp
xlat
dec
cmp
pop
pop
push
lods
ds
xchg
adc
out
mov
jmp
test
jb
jnp
xchg
fidivrs
push
fcoms
mov
ret
mov
or
add
sub
out
cmpsb
push
pcmpeqd
sub
imul
push
mov
cmp
pop
mov
aam
xchg
mov
mov
es
dec
sbb
xor
cmp
xchg
mov
loope
stos
mov
xor
pop
cmp
aas
sti
cmp
test
jge
popf
sbb
inc
adc
in
aam
test
lods
jne
jmp
sbb
repz
pop
inc
lock
test
sbb
in
jg
jl
sub
sub
aaa
jbe
jmp
gs
stos
mov
mov
pop
lods
inc
cmp
imul
jmp
sbb
jnp
cs
mov
inc
and
sub
mov
loope
test
dec
sbb
inc
jo
insb
xor
xchg
and
cmpl
and
push
xor
pop
push
rcrb
ljmp
sbb
mov
cmp
inc
out
stc
add
insb
aas
lods
ret
ljmp
jecxz
pop
sub
int
lahf
cmpsl
movsl
in
loope
add
stc
std
movsb
cwtl
and
mov
gs
sbb
repz
es
jo
xchg
jecxz
sbb
add
pop
cmp
lea
inc
std
mov
jp
repnz
xchg
jmp
fisubrl
sahf
jg
mov
jecxz
jae
push
push
mov
cmpsl
out
loop
rcll
mov
dec
test
leave
pop
std
lock
je
rcrl
sub
adc
mov
inc
push
cs
jmp
cli
rolb
mov
mov
xchg
and
shl
movsb
enter
mov
mov
fildll
ffreep
nop
jle
inc
in
or
icebp
cli
sub
jmp
xlat
dec
cmc
cmp
pop
enter
jge
inc
jb
test
xchg
mov
imul
lahf
out
out
xchg
jnp
pop
clc
dec
lds
dec
mov
push
push
add
push
shrb
push
out
xchg
xor
in
lods
sarl
pop
jg
inc
shl
sub
xchg
push
leave
shl
sub
inc
in
dec
shld
les
sbb
mov
test
ret
ficompl
xchg
lcall
cmp
pop
xor
divl
adc
imul
lea
enter
daa
xlat
leave
bound
lds
push
shll
add
push
and
pop
lcall
into
or
ljmp
data16
jae
popa
insb
sbb
xchg
lods
jp
adc
sbb
jg
pop
movsb
fs
mov
inc
dec
mov
test
dec
call
jecxz
lcall
stos
fisttpll
sub
pop
mov
adc
jecxz
add
repnz
mov
test
mov
hlt
test
cmp
lods
scas
scas
xor
xor
push
ljmp
clc
int
arpl
into
hlt
jl,pt
movsl
mov
cmp
cltd
cmpsb
cmp
mov
sub
inc
and
lea
and
insb
pop
movsl
cmp
lock
imul
sub
jle
repnz
pushf
push
lcall
movsl
add
rcrl
ficoms
jge,pn
inc
sub
in
es
sbb
add
test
add
push
shlb
push
ret
adc
or
inc
mov
jp
arpl
insb
out
mov
outsl
dec
rcll
or
inc
xchg
aam
push
lock
fstpt
lds
pop
jge
pop
adc
bound
dec
jo
ljmp
in
hlt
pop
or
sub
cmp
jb
mov
in
fsubs
mov
cmpsl
and
jae
addr16
test
rorb
or
cmp
in
add
jo
fidivs
cs
or
outsl
lock
pop
int
xor
add
rolb
pusha
xchg
fisubs
sbb
mov
mov
and
pop
rolb
fsts
sub
mov
ljmp
xor
dec
sti
adc
stc
mov
sbb
jmp
xor
sbb
lcall
sbb
sbb
nop
push
xchg
fs
cmpsl
push
in
mov
or
ljmp
inc
dec
inc
pop
les
andl
mov
or
xor
add
mov
or
mov
xchg
sti
ja
outsl
outsb
or
jmp
call
jns
cli
stos
fstpt
dec
pop
aad
sti
cmp
repz
std
xor
jg
ror
lret
ljmp
outsl
cmpl
dec
cmp
mov
cmp
xchg
sti
sub
cmc
lea
sahf
xchg
loope
or
test
mov
mov
mov
lahf
lea
lret
icebp
add
cli
sbb
nop
rol
fisubrs
aam
aas
dec
or
fistpl
xchg
loopne
cmp
cmp
insl
imulb
fisubrl
sbb
mov
xor
lods
fdivs
sbb
sbbb
sub
add
dec
jmp
xchg
imul
or
aaa
mov
push
roll
outsb
add
lret
mov
movsb
gs
inc
lods
adc
push
test
ss
cmc
in
fwait
std
repnz
das
lods
ss
and
lds
add
inc
out
packssdw
mov
mov
dec
or
jmp
push
js
dec
lods
mov
xchg
cmpsl
scas
into
dec
push
xor
jne
testl
lods
mov
or
jl
call
sub
xor
stos
or
or
push
inc
add
pop
inc
xchg
test
mov
pop
push
or
fidivrs
scas
jge
lret
xchg
loop
cmp
fwait
and
xor
dec
mov
es
sub
or
adc
mov
jae
dec
cmpsl
das
iret
rcrb
mov
jle
inc
push
and
xchg
out
repnz
jno
rcrl
push
or
and
in
xchg
pop
push
out
subb
pop
sbb
cmpb
and
adc
pop
xor
lock
cmp
movsl
jecxz
outsb
adcl
lahf
sub
jmp
fucompp
pop
jle
sbb
push
shll
out
xchg
cltd
add
int3
in
mov
mov
mov
sub
hlt
cmpps
loop
shrb
lahf
mov
sbb
loop
pop
mov
out
sub
or
decl
fdivrs
lea
outsl
push
xchg
lahf
sarb
mov
jmp
cmp
mov
xorb
outsb
push
xchg
shrl
push
test
imull
sbb
xchg
gs
mov
add
ds
mov
clc
test
dec
stos
cmpsl
nop
imul
add
cli
std
mov
and
sub
or
and
bound
fwait
jmp
push
shl
push
inc
or
xchg
jecxz
mov
fcomip
and
aam
aaa
dec
loop
jecxz
add
shll
loope
xchg
and
dec
cmp
mov
dec
psubsb
ja
icebp
add
lcall
sbb
adc
and
pop
das
adc
push
dec
ret
cmp
dec
pop
or
jbe
imul
sub
call
test
xchg
adc
in
fbld
clc
js
outsl
xchg
rol
clc
adc
popf
mov
repz
pop
push
mov
fldenv
data16
in
jo
lods
insb
ljmp
dec
and
into
add
xchg
movsl
in
pop
sub
ror
mov
leave
in
adc
push
sbb
pop
pop
jo
scas
xchg
jmp
sbb
stos
xor
inc
in
imul
push
fistl
fsubl
and
shr
inc
sub
xor
push
xor
mov
xor
dec
push
mov
ret
pushf
shrb
inc
pop
call
cmpb
sub
cwtl
int3
loope
and
mov
adc
jo
dec
mov
jg
js
cmovbe
pop
cld
sub
push
in
in
movsl
hlt
jae,pn
jne
or
pop
sbb
test
popa
and
ret
mov
inc
into
cmpsl
cmc
xor
ljmp
gs
insb
sbbb
stos
enter
and
push
lods
mov
xor
xlat
push
jge
jnp
sar
adc
clc
push
mov
push
leave
pop
aam
xlat
adc
mov
and
ret
mov
lret
xor
sarb
cmp
jb
repnz
pop
cmp
in
ljmp
repz
jnp
dec
add
adc
adc
push
xchg
out
adc
stos
ret
adc
stc
add
loop
jnp
push
bound
imul
out
push
xor
into
inc
bswap
jno
adc
sub
mov
push
ds
jl
dec
mov
dec
jnp
push
add
jno
add
aad
mov
lcall
sub
cmpsl
inc
loopne
add
movsb
divl
adc
jecxz
iret
shr
aaa
sbb
test
dec
mov
jg
add
xor
xchg
push
and
inc
insb
ret
cmp
fsub
sahf
sub
mov
xchg
or
jp
mov
or
add
cli
ja
fnsave
dec
fbstp
ss
jle
fcmovnu
enter
jo
rcll
insb
mov
mov
iret
ljmp
xor
xchg
cmpsl
inc
mov
xor
lret
pop
out
cmp
outsb
mov
push
dec
lea
xor
or
adc
outsl
lods
or
fcomps
cmp
cmpsl
sti
mov
pusha
mov
jl,pt
mov
loopne
in
cld
in
dec
mov
and
xlat
lahf
inc
push
mov
addr16
stc
jb
dec
fsubrl
pushf
imul
sbb
clc
mov
enter
or
ljmp
cltd
inc
sub
lods
sub
inc
fildll
aam
fisubl
call
inc
pop
push
lret
sub
cmp
fdivs
and
adc
dec
add
lock
insb
pop
push
rcrb
fs
inc
andb
and
cmp
or
ljmp
jecxz
xor
mov
stos
es
popa
adc
xor
xor
dec
adcw
sbb
lods
mov
xchg
and
cltd
sbb
lahf
xchg
mov
test
xchg
jbe
inc
inc
scas
dec
leave
xor
mov
pop
add
lret
repnz
movsl
cs
wbinvd
and
mov
sub
push
in
pop
out
mov
shlb
fisubs
popf
cmp
lock
aaa
cmp
test
fisubs
xchg
outsb
inc
add
inc
ljmp
jae
mov
inc
fdivrl
loop
jne
or
cs
cmp
icebp
add
lret
inc
xor
mov
add
jmp
sbb
push
dec
push
sub
xor
cmp
fdivs
and
push
push
cmp
das
ficomps
jecxz
lock
pop
cwtl
sbb
mov
out
pop
sub
sub
icebp
mov
icebp
cli
js
shl
adc
clc
add
mov
imul
fnsave
hlt
lock
popf
fs
mov
sbb
repnz
test
pop
sub
pop
movb
push
adc
mov
shrl
fildll
sti
incb
ds
adc
ds
sahf
or
cmc
jl
mov
cmp
rolb
int
cs
arpl
mov
pop
cmp
imul
mov
jne
out
jno
pushf
ljmp
lret
pop
xchg
out
mov
mov
daa
pusha
mov
jecxz
mov
dec
nop
jnp
into
xchg
es
aad
cltd
jg
iret
lret
sbb
ja
lahf
sbb
leave
out
inc
and
mov
movb
addr16
jg
mov
lods
pop
and
or
jmp
inc
jge
das
aas
adc
mov
test
mov
fidivrs
lods
test
stos
mov
mov
les
dec
in
aas
dec
mov
fs
sbb
adc
scas
and
fsubrs
inc
faddl
rcrl
scas
cmp
or
mov
mov
mov
xchg
jo
insl
sbbl
in
dec
lret
ss
cli
lret
shlb
into
loope
lahf
pop
arpl
inc
mov
or
adc
add
or
xor
push
push
adc
inc
shr
push
dec
fidivl
pushf
fmul
push
adc
xor
mov
sbb
sbb
ret
daa
and
pop
mov
incb
aam
arpl
ret
jl
insl
adc
lahf
imulb
loopne
bnd
push
out
mov
pop
inc
jns
lods
sbb
or
in
xor
pop
jl
in
push
daa
in
cmp
bound
jge
addr16
cmp
lods
or
mov
fbstp
subb
cli
movsb
sub
loopne
scas
inc
adc
cmp
int3
pusha
pop
mov
push
ja
or
dec
mov
cmpsl
lret
xchg
in
out
xorb
scas
push
ljmp
scas
bound
pop
sub
test
es
add
add
add
addr16
dec
out
push
inc
add
and
sarl
cltd
loope
mov
inc
in
xchg
dec
xor
das
mov
push
cmp
mov
mov
and
add
add
add
mov
jbe
movb
xchg
inc
scas
loop
sbb
cmp
rorb
sub
out
jne
mov
mov
push
jno
xchg
dec
or
stos
nop
inc
pop
aam
inc
ret
sbb
inc
mov
push
mov
dec
mov
xchg
jne
inc
nop
jne
cmp
aam
push
sbb
push
fstp
lret
sbb
mov
iret
pop
imul
jmp
mov
mov
push
ljmp
xchg
sti
jbe
pop
aad
adc
adc
sub
sub
mov
xor
out
fnsave
ljmp
pop
xchg
dec
xor
movsb
add
ja
adc
xchg
fstps
loopne
mov
add
addr16
xor
aaa
and
dec
mov
gs
xchg
mov
fisubs
jnp
pop
xor
or
inc
js
lea
mov
xchg
mov
mov
mov
fisubs
loop
jp
cmp
ror
shll
xchg
inc
dec
lea
icebp
dec
sub
push
adc
test
sbb
pop
pop
dec
pop
mov
mov
clc
fidivs
mov
fsubrs
push
les
xchg
shrl
sti
sti
push
ja
pop
cmpsl
inc
cmp
movsl
add
mov
repz
repnz
jge
inc
in
dec
xor
cwtl
xchg
fstl
push
mov
mov
jl
add
xlat
cmp
test
or
or
mov
dec
cmpsb
push
and
mov
jbe
mov
pop
nop
add
xor
mov
cld
mov
shrb
sbb
addb
xor
xchg
push
mov
mov
sub
lahf
movsl
mov
push
xchg
subb
ret
repnz
rdmsr
rclb
daa
fwait
sbb
repz
in
dec
test
inc
push
call
mov
push
int3
call
xchg
shll
xchg
jp
jl
fwait
add
cmc
dec
loopne
mov
fwait
aas
pop
pop
mov
pop
mov
push
sbb
adc
mov
mov
sti
es
push
or
or
xchg
mov
jecxz
loopne
pop
cwtl
inc
dec
mov
adc
fsubr
sbb
cmp
sub
push
fsts
jne
jb
mov
scas
cmpsl
pop
dec
iret
pop
mov
sub
fidivs
mov
jp
cwtl
xchg
pop
stos
call
sbb
lds
inc
xor
adc
sub
jnp
mov
lea
rol
loopne
push
or
or
xchg
dec
sti
mov
adc
cmp
pop
adc
cmp
adc
jmp
je
icebp
add
mov
push
fiadds
cmpsb
pop
inc
and
add
jmp
test
fstl
mov
aad
popf
mov
out
out
ds
shll
out
in
loope
stos
jb
outsl
fwait
ret
mov
stos
out
ja
xchg
jmp
scas
and
rcll
push
mov
adc
addr16
inc
stos
sbb
cmp
test
mov
lds
lods
xchg
mov
push
pminsw
and
insl
bound
or
cmpsb
stos
jecxz
cld
cld
into
cmpsb
sub
repnz
pop
mov
sbb
fiadds
mov
bound
and
mov
xchg
lods
clc
fldt
and
mov
rcrb
cmp
lret
and
xlat
sahf
add
fimull
gs
xor
cmp
cmp
fisttpl
aam
pop
cmp
pop
push
inc
outsb
mov
into
sbb
idivl
dec
add
sub
mov
adc
call
inc
movsb
cwtl
data16
dec
add
cmpsl
subb
int3
insl
rcr
or
inc
xor
fldl
push
dec
adc
xchg
jl
and
mov
inc
stos
pusha
push
imul
icebp
inc
mov
mov
sbb
mov
jge
mov
inc
pop
out
sub
loopne
aas
bound
lahf
out
adcb
mov
stos
mov
cli
jb
fstpl
popf
lods
sub
xchg
mov
pop
inc
push
mov
xchg
imul
xor
dec
sti
pop
sbb
stos
mov
fcmovu
sub
mov
roll
inc
inc
ret
fists
das
push
test
outsl
das
sub
lea
cmpsb
das
pop
pop
sub
adc
iret
push
push
ret
mov
js
jne
out
push
mov
sbb
jge
push
int3
sbb
ficoml
xchg
jnp
mov
test
rclb
sub
xlat
fstpt
and
fists
push
fwait
ret
push
push
pop
inc
xchg
pop
sbb
ds
gs
popf
les
add
insl
jae
adc
or
hlt
inc
dec
std
pop
add
add
and
out
ret
sbb
into
or
bound
add
ficompl
fcomps
js
lcall
xor
arpl
fisttps
jne
cmc
ljmp
je
dec
test
fisubrl
xchg
mov
sub
dec
out
xorl
ss
scas
loope
out
scas
pause
sub
fcmovb
mov
stc
nop
mov
int3
mov
lock
push
fsubr
lds
sar
leave
clc
cwtl
dec
movsl
xor
jb
pop
test
mov
outsl
insb
call
or
bound
decl
out
fcom
jp
xchg
xchg
mov
cmp
aas
aam
mov
jecxz
sub
fucomip
out
pop
movsb
mov
jno
data16
inc
push
mov
adc
aam
dec
xor
lods
jo
sub
jl
push
scas
sub
frstor
mov
push
xchg
xchg
inc
cmc
stos
pop
scas
pushf
cli
cmpsl
sbb
add
mov
cs
cmp
in
sbb
sbb
jbe
inc
fidivs
sahf
push
sbb
test
fimull
cmp
push
imul
pop
jg
enter
mov
jae
jns
mov
inc
or
mov
mov
pop
bound
lcall
cltd
xchg
fs
daa
scas
and
mov
call
pop
fisubrl
xchg
repnz
dec
movsb
and
fldenv
mov
clc
jno
int3
rcl
adc
sahf
imul
jmp
addr16
cmp
loop
fdivrs
pop
ror
lea
repz
sbb
movaps
repnz
sub
scas
out
dec
bound
xor
jle
out
pop
inc
dec
push
xor
insb
int3
std
mov
dec
cwtl
sub
xchg
mov
inc
xchg
in
lret
add
enter
add
mov
aas
mov
ret
sahf
mov
test
sub
int3
enter
pop
mov
xor
sbb
add
xlat
cmpsl
stos
mov
out
sub
call
mov
push
add
mov
mov
jae
jbe
or
bound
jns
call
lods
xchg
out
xor
jecxz
pushf
outsl
and
test
dec
std
adc
sahf
ja
sub
or
mov
inc
cwtl
es
pop
call
imul
movsb
mov
movsb
mov
xchg
xor
cwtl
repnz
mov
out
js
sub
out
aad
add
mov
subl
stc
inc
inc
out
xor
mov
mov
out
ljmp
inc
mulb
push
aam
xchg
inc
mov
push
int3
mov
mov
or
and
aaa
cltd
loopne
inc
arpl
data16
xor
insl
sub
xor
jp
mov
subb
and
lahf
movsl
lods
es
jp
rol
faddl
das
cmc
out
and
push
jno
adc
push
and
rol
test
jecxz
fsubrl
push
loope
rcrb
ja
nop
mov
sahf
stc
jg
jns
sub
test
stc
mov
cmovg
mov
dec
lods
ja
or
sbb
sub
movsb
lea
and
fildll
mov
cmp
sbb
sti
out
xorl
adc
pop
popf
sbb
push
lods
xor
scas
ds
jmp
mov
jae
cmc
sti
xchg
lret
pop
push
push
mov
mov
pop
mov
lret
jbe
cmp
outsb
fldenv
add
add
xor
pop
lock
pushf
lcall
xor
imul
push
push
jns
jge
xlat
cltd
test
hlt
ret
dec
mov
cmp
push
sar
pop
push
cwtl
and
rcl
lock
xor
pop
jno
mov
mov
and
xor
cmp
loope
mov
push
add
mov
mov
xlat
data16
adc
xor
ljmp
test
cmp
addr16
jge
mov
outsl
and
orl
lret
mov
jmp
xchg
xor
shr
adc
inc
shrl
test
das
aas
push
dec
lds
jl
ret
mov
sbb
jle
dec
inc
inc
adc
int3
cmp
arpl
mov
bound
sub
inc
xor
jns
aas
adcl
bound
cmpsl
pusha
mov
push
fidivs
lret
xlat
dec
cmp
lret
jne
insb
mov
mov
stos
cmp
sub
inc
push
pop
cmp
scas
mov
mov
mov
pop
cmc
out
repz
aaa
dec
sbb
cs
cmp
jbe
jnp
or
das
sahf
negb
push
xchg
je
test
pop
ds
roll
pop
lods
jmp
xchg
mov
push
fdivrs
rorl
movsl
out
lea
dec
mov
jns
mov
scas
test
addr16
fdivp
mov
int3
adc
gs
mov
mov
shl
test
movsl
loopne
pop
in
std
jno
sbb
sub
xor
sbb
pop
and
and
pop
movsl
cmpsl
mov
jmp
ja
je
std
inc
stc
notl
mov
push
mov
sbb
ds
mov
test
mov
cmpsl
push
xchg
jp
push
pop
testb
dec
loopne
sbb
or
or
movsl
fdivr
lds
jge
sub
pop
in
test
lods
out
sahf
in
orl
lock
and
loope
es
outsb
ja
hlt
imul
into
aam
xor
lret
lds
dec
push
xchg
outsl
stos
arpl
adc
std
fidivs
pop
lock
mov
fistps
xchg
nop
fimuls
fwait
xor
enter
and
jo
or
cli
add
mov
or
stc
aaa
push
pop
xlat
je
mov
pop
add
mov
int
push
stos
mov
sub
push
rorl
sti
mov
int
int
sbb
je
mov
enter
jmp
pop
std
cli
or
rcrl
mov
popa
mov
int3
fbstp
sub
sbb
and
lods
arpl
ljmp
jg
lods
subb
sub
adc
pop
call
fiadds
outsl
shrb
sub
jae
lock
or
scas
jmp
out
cltd
sbb
ds
jmp
lods
stc
movsl
lea
cmpl
xchg
loop
outsb
push
inc
jecxz
fmulp
mov
and
daa
pop
inc
orl
mov
bound
cmp
enter
jbe
sahf
xor
push
push
mov
xor
jo
pop
inc
dec
lods
cmp
popa
stc
pop
adc
pop
sub
stc
add
cmpsl
jae
out
mov
hlt
mov
ret
movsl
jae
pop
mov
sub
sahf
rol
sub
xchg
push
push
loop
dec
in
movsl
add
xchg
dec
fndisi(8087
fadd
add
push
sbb
es
xchg
push
scas
xchg
test
scas
ja
lcall
lds
cs
jecxz
lahf
frstor
insl
jae
and
sub
and
leave
in
sahf
mov
add
push
and
fisubl
or
movb
mov
inc
fwait
pop
in
out
hlt
cmp
stc
mov
inc
loopne
or
imul
scas
addr16
mov
mov
pop
in
push
cli
mov
xchg
scas
cmp
daa
popf
sbbb
lret
in
and
shr
fistpll
loope
popf
ljmp
xor
js
rolb
jg
lahf
inc
cmp
aam
jb
sub
push
sbb
adc
in
push
sarl
xor
in
in
repz
push
push
fcmovb
mov
jecxz
shl
add
mov
pop
pminub
add
loop
jae
mov
cwtl
or
dec
cmpsb
ficoms
out
movsl
jl
js
je
cwtl
call
in
dec
out
fwait
xchg
and
xor
jnp
int
lahf
movsb
ret
rolb
mov
mov
push
jle
cltd
xchg
and
add
jge
push
mov
mov
imul
in
and
das
outsb
add
xor
xchg
mov
mov
sub
fdivr
arpl
ja
dec
jns
mov
sahf
or
mov
cwtl
jge
push
lahf
mov
xacquire
movb
cli
sbb
push
add
ljmp
or
pusha
fmull
mov
xchg
ffreep
out
lods
andl
xchg
adc
insb
sub
mov
mulb
push
cltd
jnp
test
pop
add
sub
imul
xlat
inc
movsb
dec
stc
orb
mov
mov
xchg
insl
mov
mov
xorl
call
scas
mov
push
pop
mov
imul
push
shll
daa
push
test
popf
cwtl
mov
mov
mov
pushf
popf
subl
lea
movsl
mov
imul
add
clc
or
xor
ret
gs
xchg
or
lea
jmp
xchg
adc
nop
push
stos
aas
cld
ja
jns
cmp
shll
outsl
jo
push
and
aam
or
cmp
movsb
jp
not
cltd
push
cltd
jne
in
xchg
jecxz
lock
lret
cld
loop
aam
sbb
adc
or
jno
or
ds
and
sub
testb
xchg
sbb
testl
rcr
or
mov
jge
push
adc
fwait
or
rorb
gs
out
sub
addb
movsb
cmp
xchg
dec
fnsave
flds
jns
dec
mov
and
daa
loopne
sbb
add
popa
xlat
and
cmpl
das
in
mov
pop
sub
mov
ljmp
xor
mov
mov
or
xor
mov
dec
jge
js
int3
clc
jne
gs
push
cwtl
lods
dec
inc
sub
sbb
insl
jl
call
mov
cmc
xor
mov
scas
xchg
repnz
je
loop
repnz
fcmovne
test
fcompl
jmp
xchg
jge
ret
inc
or
icebp
stos
mov
mull
sub
cmp
mov
adcb
or
pop
adc
out
mov
xchg
std
mov
pop
push
jno
out
sub
push
dec
pop
dec
rcl
enter
les
cmp
nop
mov
pop
dec
xor
test
push
mov
int
cli
in
outsl
mov
lahf
mov
push
outsl
sbb
shlb
leave
aaa
cmp
js
mov
pusha
insl
fisubs
xchg
mov
insb
arpl
inc
push
sub
sub
jl
jne
xchg
push
in
mov
inc
ficoml
sbb
pop
hlt
pop
gs
fwait
adc
pop
xchg
cmp
push
mov
das
jne
icebp
dec
jp
inc
jecxz
pop
jmp
sub
sub
std
jne
js
sbb
and
inc
jecxz
adc
cltd
dec
or
and
insb
repz
or
cmp
outsb
pop
push
mov
jno
popl
je
and
mov
add
sub
lock
jge
lret
jb
test
mov
cmc
add
jns
inc
dec
jle
push
xchg
mov
xchg
add
out
in
mov
mov
pushf
aas
and
push
mov
std
mov
loop
es
or
add
sbb
loopne
mov
sub
mov
mov
dec
sbb
sbb
adc
mov
scas
pop
xchg
xchg
pop
adc
inc
test
lret
inc
or
cmp
das
ja
mov
sub
adc
or
frstor
sahf
pop
adc
mov
mov
movsb
pop
lods
mov
mov
idivl
stos
inc
cmp
jo
mov
ljmp
add
icebp
mov
mov
inc
jae
and
fwait
pop
mov
or
imul
dec
fsubs
and
bound
mov
xor
scas
jno
xor
loopne
sub
add
or
imul
dec
clc
adc
dec
mov
test
mov
pop
iret
cld
stos
repnz
popf
or
mov
adc
jo
jle
push
pop
mov
int3
xchg
ret
and
sbb
adc
loopne
js
or
jle
pop
and
imul
inc
jne
inc
pusha
adc
es
xchg
daa
arpl
rol
add
aaa
stc
sub
push
lcall
inc
in
cs
lahf
mov
std
jl
mov
jmp
hlt
jg
xchg
mov
jmp
cmc
mov
push
sub
sbb
xchg
pop
push
cmp
sbb
stc
mov
out
push
scas
ljmp
push
pop
loop
mov
stos
xor
and
push
xchg
xchg
lea
into
mov
jmp
mov
adc
ja
inc
je
add
inc
ret
aas
xchg
clc
loop
inc
outsl
rclb
fld
cmpsb
and
and
and
ret
fcomps
xor
add
int3
add
test
xchg
fsubr
icebp
and
fists
ficompl
mov
or
mov
dec
push
dec
cmp
jg
inc
jp
jmp
jnp
ficoms
adc
inc
inc
aas
xor
icebp
mov
mov
inc
and
push
pop
sub
or
cs
lods
mov
push
sahf
jnp
cld
adc
hlt
ficomps
insb
lret
adc
aad
jge
rcrl
pop
inc
arpl
repnz
pop
xchg
xor
pop
pop
inc
test
adc
repnz
lret
push
pop
sti
add
movsb
std
jp
shll
iret
imulb
inc
ljmp
in
fsubl
fwait
mov
pop
insb
shll
sbb
xor
outsl
jg
add
sarl
inc
mov
mov
dec
mov
dec
pop
mov
popa
movsl
add
in
jae
sbb
dec
mov
jmp
dec
popf
jl
rclb
jp
xchg
shrb
out
jmp
jg
mov
dec
cmpl
mov
outsb
stos
aas
inc
iret
repnz
mov
cld
mov
push
sub
fucomp
std
cwtl
dec
ljmp
test
ffree
aam
outsb
outsb
xchg
push
cmc
enter
xchg
pop
pop
shlb
dec
cmp
sbb
das
add
add
pusha
push
and
pop
mov
or
xor
bound
xor
aaa
push
jne
add
pop
dec
in
sahf
repnz
cld
decb
inc
mov
add
je
mov
mov
pop
test
or
mov
dec
mov
pop
mov
lcall
popa
icebp
es
mov
dec
push
imul
push
pop
decb
stos
aas
adc
movsl
scas
mov
call
movsl
push
orl
and
push
popa
add
inc
adc
sbb
shrl
into
shl
lods
icebp
lret
mov
push
insb
inc
ret
sbb
cmp
test
cmpsb
sub
pop
in
xor
jbe
jp
test
xchg
lahf
and
out
and
daa
jnp
or
aam
or
mov
xor
in
into
hlt
lahf
add
loopne
push
cmp
ja
sbb
pop
and
jbe
loope
ror
adc
add
cmpsl
fcmovu
out
pop
xchg
out
ja
call
test
rcrb
orb
sbbb
dec
fldenv
inc
jnp
ljmp
cwtl
sbb
add
loopne
into
aaa
hlt
pop
push
movsb
mov
jne
fs
or
scas
push
xchg
xchg
add
inc
ljmp
cmp
gs
adcl
adc
repnz
pop
sbb
aaa
enter
aad
dec
mov
jbe
loopne
std
idiv
int3
rcr
or
mov
loopne
dec
adc
into
add
sbb
outsb
shlb
dec
pop
push
outsb
test
cwtl
dec
mov
clc
nop
jae
sbb
das
pushf
lock
daa
cmp
ficoms
xchg
rol
jecxz
mov
pop
addr16
cmp
add
xor
cmp
imul
pop
leave
jge
enter
pop
xor
daa
jle
cmpsb
in
inc
mov
lahf
xchg
lea
bound
dec
and
push
into
lret
mov
cmp
adc
jle
sahf
outsl
push
mov
aam
stc
cmpsl
and
pop
ret
xchg
setne
add
gs
les
adc
push
xor
xlat
adc
jb
and
and
push
jns
mov
lock
push
add
jge
aaa
mov
add
fs
add
mov
cmp
mov
mov
test
or
xchg
mov
adc
dec
mov
mov
pop
lock
out
movsl
stos
insb
xor
dec
and
scas
aas
aas
mov
iret
mov
or
cmp
bound
jle
stc
cmpsb
sbb
pop
cli
cs
loope
orl
std
lods
xlat
stc
das
clc
mov
pop
stos
iret
imul
xchg
adc
lds
cmp
ret
mov
mov
pop
push
and
icebp
dec
cltd
dec
arpl
in
sbb
lcall
mov
cmp
movsl
pusha
loop
cltd
inc
jecxz
cmp
mov
mov
cld
pop
icebp
pop
cmpsb
mov
xchg
in
dec
cli
js
iret
cmp
cmp
jecxz
outsl
addr16
pop
and
cmp
jp
sub
insl
scas
shr
aas
sbb
jmp
icebp
roll
inc
sbbb
cli
sub
inc
mov
outsl
cli
ljmp
sqrtps
mov
jbe
int3
pusha
divl
xor
add
pop
sub
orl
pop
gs
pop
dec
inc
push
inc
outsl
cmp
into
xchg
mov
xchg
xor
dec
jnp
popa
scas
fmulp
lret
lock
adc
popf
sbb
bound
sub
inc
stos
cmc
out
icebp
fdivrs
inc
pop
mov
dec
pop
rorb
shr
lret
sbbl
mov
xchg
fwait
pop
dec
push
repz
imulb
adc
mov
outsl
mov
xchg
out
cld
sbb
ss
inc
movsl
out
idivb
cmp
out
cwtl
dec
outsl
cmp
int
fwait
dec
mov
and
int
test
daa
lea
scas
pusha
insl
int
pop
sbb
cltd
cmpsl
mov
lret
mov
outsl
sbb
repz
lcall
push
rorb
shlb
push
sbb
pop
cltd
lods
pop
sarb
sub
test
dec
mov
inc
mov
loop
add
cmp
jnp
xor
xchg
add
insl
mov
push
sbb
lcall
out
nop
lds
and
add
test
push
test
mov
arpl
mov
adc
cmp
pop
add
sub
jmp
mov
ret
cwtl
cltd
cmp
jge
mov
mov
out
lea
xchg
imul
out
pop
and
sub
loopne
dec
inc
test
cmp
pusha
inc
and
lahf
sbb
lock
jns
dec
cmp
ret
fsubrl
mov
js
ror
cmp
lock
xor
mov
push
add
push
xor
loop
iret
out
subb
push
xor
pop
ja
icebp
test
leave
fcompl
jb
mov
pop
and
adc
or
out
jno
adc
dec
insl
les
jae
sbb
mov
lahf
pop
xchg
mov
fdivp
mov
cmp
ja
xchg
pop
jmp
ljmp
pop
das
mov
mov
daa
mov
mov
fildl
ljmp
out
inc
outsb
shlb
add
dec
pop
in
stos
add
xor
lds
xchg
mov
ds
mov
inc
push
mov
or
xor
mov
pop
pop
fmull
push
lods
hlt
test
out
jge
push
jns
gs
lret
lods
js
icebp
mov
es
sub
and
and
sbb
mov
xor
stc
call
outsl
push
pop
inc
cmpsl
ljmp
jg
les
lret
ret
adc
xor
mov
pop
mov
mov
xor
out
cltd
jae
out
xor
stos
dec
sbb
pop
dec
scas
in
adc
sbbb
cli
or
xchg
std
pop
jnp
fdivrl
test
inc
leave
aad
imul
sub
and
mov
mov
mov
enter
sbbb
dec
add
scas
mov
pop
ret
adc
jnp
fistl
dec
or
jge
and
test
xor
push
stos
mov
pop
adc
xor
test
jne
pop
dec
mov
stos
gs
movsl
jle
pop
xchg
cmp
lods
or
mov
push
imul
in
xchg
dec
pop
in
lahf
jmp
pop
cld
popf
pop
movsl
dec
test
push
mov
mov
inc
sbbb
sbb
push
jge
rorb
sbb
hlt
lds
jns
jbe
cmpsb
pop
sbb
xor
test
lods
aaa
adc
test
add
imul
dec
inc
enter
push
stos
daa
cld
jl
mov
andl
loop
sbb
mov
cmpl
add
add
mov
mov
fcmovnb
das
out
mov
or
jmp
loop
rol
call
push
pop
push
rorb
xchg
subb
add
sarl
inc
fs
pop
xadd
dec
out
xor
mov
cwtl
cmp
cmp
xor
outsb
out
cmpunordps
lock
jnp
pop
fsubs
inc
cmp
adc
and
outsl
cmp
sub
pop
cmpsb
mov
cmc
pusha
sbb
outsl
add
dec
jno
sbb
push
push
out
mov
js
stos
push
pop
into
push
out
movsl
subl
xchg
ja
and
shrl
adc
push
push
rclb
xchg
xchg
inc
sub
sub
push
or
int3
xlat
pop
lods
test
in
jae
aam
pop
xchg
jle
addr16
out
xchg
push
inc
jle
subb
adc
adc
insb
js
mov
xor
test
test
stc
roll
sahf
xchg
imul
pusha
les
fisubrl
gs
ret
xchg
imul
fisttpll
lret
xor
mov
gs
jb
rcl
fidivl
and
lret
loopnew
popa
insb
sbb
sub
mov
fs
mov
adc
pop
imul
test
cmp
push
lods
sbb
ds
int3
xchg
pop
add
xchg
in
xchg
fucomp
add
hlt
or
mov
xor
out
notb
inc
sarb
jle
gs
mov
add
pop
jno
cmp
out
out
imull
mov
dec
cmpl
icebp
in
rcl
loopne
fidivrs
xor
xchg
rcrb
or
pop
es
jno
aas
dec
adc
push
sub
jl
xor
and
mov
cmp
insb
fildll
pop
inc
int3
rolb
push
in
pop
xorl
push
pop
fidivs
shll
cmp
pop
mov
test
or
mov
adc
mov
xchg
inc
ret
mov
xor
xor
sub
or
or
imul
addr16
inc
add
fnstenv
pop
mov
in
lods
dec
fsubs
lods
mov
lret
mov
in
mov
sub
mov
add
es
insb
ror
imul
aam
jmp
push
movsb
je
mov
xor
cmp
imul
mov
lcall
pop
or
andb
sahf
and
or
inc
cmp
inc
or
jmp
xchg
mov
mov
insb
dec
iret
sub
js
into
mov
stos
or
push
inc
mov
aaa
gs
dec
lcall
test
dec
push
imul
fstl
scas
lea
inc
adc
lds
xor
std
fists
xchg
out
fldcw
cmpsl
scas
mov
imul
mov
movsb
jb
xor
xchg
andb
leave
inc
sbb
out
cltd
sbb
and
in
jl
add
rep
outsl
pusha
mov
repnz
stos
fistpl
bound
dec
lods
and
loop
push
push
pop
pop
sbb
push
sbb
imul
sbb
push
iret
jge
inc
mov
packsswb
cmp
and
jl
pop
hlt
push
sbb
or
ret
sub
ss
pop
ds
mov
stos
mov
ret
mov
test
mov
mov
adc
out
insb
leave
jo
ret
arpl
cmp
and
mov
push
adc
test
ret
test
int3
data16
icebp
mov
test
test
push
cmc
test
mov
adc
daa
mov
or
mov
lods
mov
popf
dec
sahf
adcl
imul
aas
sub
mov
or
nop
dec
push
pop
iret
push
pusha
stos
dec
pop
add
add
stos
aam
mov
in
inc
scas
jb
jo
or
sub
outsl
insb
lods
movd
stos
sub
fwait
or
and
jge
sub
fcompl
iret
mov
adc
gs
inc
cltd
andl
test
or
or
insl
int3
lahf
or
in
enter
jno
jg
and
and
push
and
ds
in
push
stos
mov
pushf
test
mov
cmc
dec
cmpsl
cmpsl
nop
mov
push
arpl
aas
cmpsl
call
pop
and
in
rorl
xor
incb
push
jnp
dec
xor
dec
add
sbb
adc
aad
imul
or
mov
in
in
and
mov
mov
jl
mov
mov
fimull
loope
loop
roll
and
jno
daa
xlat
ja
sub
cmp
ror
dec
push
lea
push
es
sbb
bound
pushf
in
pop
jb
pop
jmp
inc
cmpsl
test
lods
bound
std
dec
popa
std
push
cli
sbb
imul
mov
out
xor
dec
jl
mov
dec
lea
sub
mov
mov
lret
mov
pop
jnp
cs
das
mov
lcall
xlat
mov
mov
imul
sbb
and
clc
cmp
ljmp
sbb
ret
xor
fnstcw
push
or
iret
stos
lahf
xlat
jmp
out
fs
adc
pop
insb
mov
xchg
movsl
add
sbb
cmpsl
sbb
jmp
push
pop
inc
inc
add
sahf
mov
push
or
lea
pop
dec
rorl
or
lods
dec
sbb
pop
mov
add
ficoml
jnp
iret
xchg
inc
xor
cmp
cmp
sbb
cli
jne
test
insb
or
fildll
scas
jge
roll
or
fwait
mov
xorb
push
mov
pusha
xor
inc
stos
push
or
repnz
cmp
push
or
sbb
mov
repz
fwait
mov
mov
lods
add
or
pop
je
dec
dec
fstps
inc
je
add
adc
aaa
lods
jbe
loop
test
pusha
in
mov
stos
or
mov
jae
out
sbb
cmpsb
inc
mov
add
mov
or
cmc
std
mov
aas
mov
add
dec
sbb
mov
cs
jl
outsb
test
push
pushf
ret
andb
cmp
movsl
repz
cmc
loopne
daa
or
pop
notl
rorl
mov
push
lcall
cmpsb
daa
insl
xchg
push
rolb
out
or
gs
fnstenv
testl
xor
ds
hlt
out
ficomps
stc
sti
out
and
xchg
jge
cmp
out
mov
and
adc
push
sub
ds
scas
adc
int
lock
xor
mov
add
fs
and
add
or
movsl
add
pop
pusha
push
scas
cmpsb
pop
cmp
icebp
aam
cmp
sbbb
xlat
pushf
mov
repz
inc
mov
test
les
pusha
pop
cmp
push
sub
push
xor
pop
shrl
inc
add
enter
sub
fldenv
inc
int3
lcall
xor
fcomps
xchg
icebp
in
aam
imul
into
mov
bound
arpl
or
jmp
jns
jae
sahf
jnp
push
jb
bnd
dec
push
hlt
sbb
jno
mov
push
adc
pop
jl
popf
push
push
int
and
in
xchg
add
pop
pushf
or
inc
push
out
in
mov
mov
fsubrp
add
xchg
sbb
outsl
mov
dec
popa
inc
add
mov
cmpsl
movsl
xchg
mov
cs
fistpl
cs
xchg
sub
jl
cmpb
jbe
fnstenv
xor
testb
pop
clc
call
push
push
std
faddl
imul
mov
ret
fisubrl
jge
push
adc
or
icebp
cmp
pop
scas
dec
adc
xor
mov
pop
dec
bound
adc
cmp
inc
xor
mov
jno
mov
addr16
jge
divl
into
dec
mov
cltd
fidivrl
pop
and
xchg
es
ret
or
jno
subb
out
jmp
out
shll
fldenv
out
lods
es
pop
mov
mov
fstps
jg
push
mov
pop
fstp
sbb
push
dec
mov
pop
bound
and
and
dec
test
imul
cmp
fcoml
mov
mov
mov
aad
pop
mov
xchg
xor
insl
aad
pop
neg
test
inc
cmc
fistpll
xor
pop
adc
in
xor
mov
mov
fbstp
ret
les
loope
stc
pop
rcrb
cmpsl
and
jbe
xchg
and
mov
and
cmpsl
popa
jne
frstor
and
ss
mov
je
pop
fcomip
dec
lods
lcall
std
and
fildl
add
mov
mul
das
cltd
rcr
test
seta
fdiv
out
mov
sbbb
jl
shrl
jne
mov
fistl
int3
cmp
cmp
adc
nop
in
pop
jae
pop
or
andb
jb
jmp
lods
sub
loope
int
ret
xchg
mov
mov
sub
xchg
xor
add
leave
lcall
outsb
rclb
and
imul
dec
pop
or
dec
push
add
scas
pop
push
jmp
push
and
dec
js
aad
mov
inc
sbb
dec
je
incl
sbb
pop
aam
lods
in
jb
fs
fsubrl
rorb
jl
mov
inc
mov
pop
xchg
dec
inc
movsb
and
fsubrs
sarb
push
dec
adc
arpl
xchg
adc
adc
orb
cmc
jnp
out
adc
rol
std
xor
dec
xchg
icebp
js
jge
movsb
aad
int
pop
sahf
cli
sarb
pushf
inc
loopne
loope
xchg
mov
sbb
mov
mov
test
in
inc
aad
jle
in
mov
loop
fwait
jp
dec
add
mov
push
adc
pushf
ss
mov
aaa
push
mov
inc
pop
mov
and
imul
lcall
rorb
lret
mov
nop
jg
xchg
add
or
in
add
pop
mov
fs
lahf
jo
mov
paddd
mov
aad
insb
fidivrs
fwait
pop
fisttpl
fcompl
sbb
add
cmp
fsubrl
test
dec
gs
mov
jns
dec
lods
pusha
push
pop
adc
inc
dec
sub
adc
cld
test
lahf
sbb
imul
cmp
daa
movsb
dec
lock
cmpsl
ds
nop
in
mov
int
jbe
cmp
fs
pop
mov
ljmp
test
mov
outsl
and
xchg
rolb
sbb
sbb
mov
inc
into
jl
sub
push
jo,pn
decl
mov
dec
xor
jg
add
pop
into
inc
pop
xchg
je
inc
cmp
pop
js
inc
xor
aad
sbb
jae
mov
jg
pop
mov
imul
push
out
jne
les
push
test
stos
movsb
in
lods
or
jno
or
and
out
fucomip
aam
and
loopne
dec
rorl
cmp
leave
testb
jne
cld
pop
adc
lahf
adc
xchg
adc
lret
orl
mov
scas
cmpl
lcall
pop
pop
mov
xchg
or
mov
ds
sbb
xlat
ret
in
rol
mov
pop
filds
repnz
repz
mov
popa
add
loopne
outsl
imul
cwtl
cmp
add
int3
mov
test
repnz
stos
push
scas
rorl
roll
jmp
rcr
mov
sbb
xor
mov
adc
jns
arpl
mov
mov
xchg
aaa
lea
mov
dec
sahf
push
insb
mov
mov
xchg
outsb
adc
mov
xor
xchg
jg
mov
add
in
fsubrs
xlat
aas
cmpsl
pop
sti
in
push
out
ljmp
arpl
mov
leave
nop
cmpl
pushf
jl
mov
push
int3
mov
lret
mov
inc
sarl
dec
dec
xor
and
dec
rcl
xchg
ret
xor
insl
xchg
cmpsb
inc
out
cltd
pop
and
sbb
xchg
cmpsl
cli
adc
jmp
mov
xchg
add
js
xor
lods
es
clc
std
pop
xor
popa
leavew
stos
push
outsb
test
mov
jl
loopne
inc
int
shl
xor
hlt
mov
dec
xchg
xchg
sbb
inc
fnstenv
dec
movsl
jp
cltd
mov
pop
jb
outsb
aas
mov
into
out
cmp
mov
cld
leave
inc
loopne
aas
pop
and
sbb
imul
mov
test
fiaddl
ret
sub
aad
xchg
scas
dec
sbb
dec
pop
dec
addr16
adc
in
sbb
mov
xor
lcall
jns
leave
adc
lock
xor
iret
loop
mov
cld
das
pop
bound
jnp
xchg
add
jl
std
mov
repz
push
jle
sub
popf
mov
or
mov
add
mov
dec
adcb
pop
xor
outsl
inc
imul
out
push
les
dec
scas
pcmpgtw
in
sub
adc
lret
mov
mov
addr16
insb
pop
mov
insl
scas
ljmp
dec
push
jbe
mov
mov
pushf
mov
and
addr16
push
and
mov
iret
jb
adc
push
scas
sbb
and
iret
pop
xor
push
push
movsl
std
nop
scas
cmpsl
out
add
dec
push
fiadds
sti
sub
je
push
pop
jo
xor
cmp
sub
repz
out
loopne
jp
xlat
adc
popa
adc
inc
enter
xchg
rcll
addl
ja
mov
mov
ljmp
pop
pushf
and
add
lcall
mov
or
or
lcall
mov
sti
xorl
and
arpl
mov
addr16
cli
jo
add
outsl
xchg
loop
aam
inc
jns
or
or
mov
out
je
mov
loop
lods
mov
nop
mov
jp
js
xchg
xor
icebp
jne
repnz
es
cmp
push
inc
sbb
sbb
sub
jo
fwait
mov
and
ret
jge
add
iret
jmp
or
imul
jbe
fists
jl
sub
or
sbb
mov
and
not
shll
faddl
mov
cmpsb
shrb
into
sbb
scas
sub
lds
sbb
clc
out
outsl
arpl
ljmp
dec
sbb
addr16
pop
aam
imul
mov
sub
jmp
pop
sub
clc
add
iret
sub
sub
fldcw
cmpsb
push
fwait
lret
add
ficoms
outsl
inc
pop
inc
and
sbb
mov
add
icebp
mov
fstl
les
add
test
sub
movsb
rcl
xchg
scas
cmpsb
repnz
adc
adc
repz
jg
pop
addr16
push
hlt
adc
andb
ret
add
pop
repnz
sbb
sbb
pop
jp
inc
je
and
sbb
sbb
xchg
loop
mov
cmpsl
jne
sti
dec
sarl
and
sub
or
adc
decb
scas
mov
cmpsl
test
mov
and
jns
int3
ret
sub
test
mov
stos
addr16
mov
inc
hlt
mov
ret
fsqrt
sbb
jle
jmp
dec
inc
mov
adc
or
or
in
sbb
orb
cmc
test
jno
and
jecxz
out
mov
xor
jg
add
pop
inc
and
xchg
cs
mov
cld
outsb
inc
leave
mov
cltd
cmp
sub
or
dec
fcomps
cmp
fcomp
mov
dec
lods
cltd
inc
cli
add
push
loope
out
cmp
call
sub
jmp
push
sub
pop
fs
and
xor
mov
adc
add
aaa
imul
inc
test
xlat
mov
loope
mov
insb
scas
ret
stc
jg
or
or
xchg
int3
out
xchg
or
mov
cmp
sbb
xor
aas
hlt
lods
int
cmc
filds
add
inc
pop
jecxz
push
add
inc
stos
fdiv
adcl
shrl
mov
jns
clc
mov
lds
iret
push
cmp
out
mov
fcmove
lds
mov
icebp
outsb
ja
add
xor
sbb
sbb
push
pop
bound
dec
xorl
imul
and
sbb
mov
pop
jne
std
pop
xchg
mov
jl
xchg
idivl
lea
js
add
xor
xor
jne
int
andl
out
fnstenv
push
mov
cmp
cmp
fldlg2
mov
cwtl
lea
pop
sub
push
nop
js
lods
scas
inc
subb
mov
cmp
dec
aam
and
cmpsl
mov
or
dec
cmp
stos
pop
jmp
pop
pop
idivl
mov
imul
mov
dec
xchg
lods
add
adc
xor
or
in
imul
jecxz
pop
mov
and
fldt
les
call
mov
dec
mov
sub
jb
sbb
outsb
mov
mov
subl
aas
jnp
sub
cltd
lahf
cmp
and
push
mov
cmpsb
sarl
lret
and
xor
adc
dec
aas
push
fs
fidivrl
push
stos
jp
xchg
push
ss
loop
mov
jle
pop
out
insl
xchg
xchg
jb
std
cwtl
lea
loop
push
repnz
scas
sub
fs
inc
stos
sbb
int3
js
sti
jle
mov
adc
jno
loope
notb
adc
pop
adc
add
in
dec
jl
or
or
pop
push
pushf
scas
cltd
test
jno
inc
or
fsubrs
rorl
xor
test
mov
aam
inc
lds
pushfw
add
ds
fldcw
das
lahf
sbb
jle
mov
aas
stos
xchg
js
pushf
and
jmp
sbb
or
aas
enter
cmpsl
dec
adc
and
xor
mov
mov
jg
mov
mov
insb
xor
adc
add
stos
leave
lods
dec
add
inc
jmp
adcl
pushf
lahf
shll
jb
cli
loop
xchg
sub
and
ss
dec
add
fimuls
add
mov
nop
insb
xchg
jnp
sbb
xor
xchg
dec
mov
pushl
pusha
out
sbb
and
mov
ljmp
mov
movsb
mov
jmp
adc
pushf
mov
cld
test
mul
push
loopne
pop
cwtl
out
mov
and
xor
cmp
mov
xor
inc
test
adc
and
sub
sub
fnsave
aam
jp
aas
hlt
cmp
pop
jmp
out
scas
xchg
loop
lahf
xchg
xchg
repnz
jp
lret
lret
inc
pop
pop
sub
sub
xchg
sub
out
fistl
push
lcall
pusha
xor
rolb
dec
cltd
mov
sbb
out
fwait
into
faddp
mov
mov
dec
sti
lret
mov
fimull
dec
add
cmc
sbb
inc
subl
sti
or
pop
pop
cmp
pop
ret
ret
clc
push
sbb
in
orb
dec
sub
popa
push
jge
mov
pop
rcrb
in
iret
and
pop
fnstenv
pusha
lods
out
push
and
ljmp
adc
das
je
outsl
mov
test
jno
and
and
push
mov
mov
cmp
sti
xor
sti
cli
lods
stc
imul
gs
lea
daa
dec
inc
and
sbb
out
lcall
mov
jno
out
rcrb
mov
cmp
xor
add
leave
int
cli
pop
mov
icebp
call
pop
push
push
sub
inc
dec
fidivs
push
adc
adc
mov
jno
jbe
and
mov
sbbl
sbb
test
pop
adc
les
pop
sbb
pop
fcoml
cmp
shlb
insb
int
add
jns
clc
aad
in
push
shll
bound
sub
aas
add
aaa
jne
mov
mov
pop
fwait
paddsb
mov
adc
pop
dec
mov
ds
sub
pop
mov
jmp
je
nop
hlt
jns
mov
xchg
das
addr16
shlb
fistpl
lahf
insb
enter
in
arpl
pop
orl
inc
sahf
sbb
sti
cmp
dec
mov
iret
jp
outsl
or
mov
sahf
add
sti
inc
inc
sbb
inc
jns
rcll
sbb
cs
and
das
mov
lea
lahf
adc
pushf
dec
pushf
iret
push
mov
inc
clc
adc
stos
movsb
aas
or
fildll
and
or
dec
insb
movsb
jl
pop
inc
ret
sbb
cmc
imul
dec
mov
int3
cltd
popl
insb
xlat
ret
loop
popf
fnstenv
mov
jbe
lcall
std
ss
xor
test
es
loope
lds
stc
std
sbbl
xchg
push
and
movsb
mov
mov
jge
pushf
lds
in
scas
insb
mov
xchg
sbb
dec
cmp
call
shr
aas
dec
mov
pop
ret
movsl
add
movsl
adc
dec
cld
cmp
repz
ret
not
xchg
mov
mov
sub
repnz
xchg
pushf
imul
push
xor
sbb
les
repz
pushf
cmp
sub
movsb
lods
mov
movsl
ret
sub
xchg
jl
mov
jbe
imul
xor
pop
popa
mov
xor
insl
cmp
sti
int3
shlb
adc
movsb
sub
push
data16
xchg
aad
pushf
mov
lods
push
mov
je
sarb
push
lock
push
loope
xorb
push
loop
inc
call
loope
cmc
mov
pop
out
in
xchg
pop
jo
pop
push
mov
sub
pop
dec
data16
add
es
sub
and
int
outsb
pushf
iret
scas
sbb
adc
imul
imul
cld
test
shll
ret
mov
add
pop
sbb
inc
add
fisttps
pop
dec
scas
sub
stc
scas
lock
pushf
sbb
ss
inc
pop
outsl
add
ret
outsl
js
dec
rorb
inc
or
lcall
enter
inc
rolb
mov
push
out
ret
and
cmp
xchg
into
pop
nop
sahf
cmc
mov
push
jge
sbb
mov
aam
popf
cmp
jecxz
pushf
sbb
pushf
mov
int
push
push
iret
in
iret
aam
mov
in
into
mov
es
fcomi
push
sub
and
dec
pop
xchg
push
jb
aas
movsl
pop
into
pop
and
push
xor
mov
and
scas
es
jb
xor
insb
jb
push
xchg
fsubrl
cmp
adc
mov
es
adc
push
insl
mov
jns
outsb
fdivrs
adc
dec
xchg
repnz
mov
cmp
push
pop
out
sub
push
push
scas
sub
jae
pop
mov
adcb
cmp
push
pop
push
cmc
sbb
push
mov
stos
push
jmp
or
ljmp
cmpsl
rcrb
and
fstpl
lock
imul
es
xor
call
push
jecxz
popl
cwtl
pop
push
mov
adc
sbb
sti
cmpl
mov
xor
jb
mov
sbb
xchg
push
addb
testl
pop
dec
push
sub
inc
add
iret
mov
in
jb
jno
sti
jne
jae
sub
add
add
pop
fs
pop
fwait
mov
test
jne
mov
jns
mov
adc
xor
and
xchg
jg
cmp
js
lahf
daa
cmc
lcall
subl
out
sub
fidivl
out
sahf
mov
cmc
sbb
mov
or
cltd
test
dec
fmull
loop
and
addr16
inc
and
sub
mov
aas
hlt
pop
mov
sarl
mov
sbb
and
clc
sar
bswap
dec
adc
push
aas
mov
xor
test
inc
aam
pop
sarb
js
mov
stos
dec
ja,pt
jle
aas
loopne
or
outsb
push
mov
inc
sahf
out
jg
jno
or
jnp
jmp
cwtl
add
insl
and
push
mov
fisttpll
dec
xorl
fs
leave
jge
push
clc
sbb
jbe
addr16
sbb
add
pop
pop
mov
push
pop
push
pop
ror
jo
fucompp
dec
adc
popa
loop
mov
test
sbb
fdivrs
ds
std
rclb
sbb
andb
mov
fdivs
push
popa
sub
rclb
dec
cmp
dec
push
lahf
ljmp
insb
push
addr16
and
ss
repnz
call
inc
orl
stos
cmp
mov
faddl
testl
in
inc
shlb
push
push
or
xor
arpl
dec
leave
push
mov
xor
in
dec
jecxz
add
sub
jp
push
dec
imulb
jns
push
xor
lea
xchg
push
jne
or
in
cmpsb
mov
in
loope
or
outsl
ret
push
mov
push
mov
les
pusha
sub
je
mov
lods
ja
aam
rclb
dec
mov
mov
lahf
cmp
in
add
pusha
in
jecxz
dec
sahf
gs
daa
cmp
xor
dec
insb
mov
cmp
push
insl
cli
push
sahf
push
pop
push
bound
adc
dec
pop
pop
xchg
sti
xchg
out
addr16
ret
pop
andb
push
xor
jmp
addr16
xchg
shlb
lret
lret
sahf
dec
lock
pop
into
aaa
cld
stc
inc
notl
xor
xchg
das
or
jne
push
adc
add
pusha
lock
pop
or
xchg
sbb
xchg
adc
push
sbb
jo
and
in
loope
clc
pop
aad
mov
dec
idiv
jmp
mov
inc
xor
jle
daa
lock
inc
push
fwait
enter
iret
popa
loope
mov
mov
cmp
shll
mov
inc
lods
xlat
in
cmp
popa
inc
movsb
int3
shl
cmp
sub
insb
in
pushf
or
test
lds
mov
clc
ret
bound
fmuls
popa
jle
mov
pop
sub
jge
inc
mov
push
test
pop
adc
test
in
aaa
js
in
push
add
mov
stc
fcomps
outsl
jge
sahf
test
cs
ret
sbb
enter
mov
movsb
lahf
mov
mov
call
jle
jbe
clc
fsubr
pop
cld
jmp
jno
stos
in
movsb
clc
mov
in
and
shll
and
pop
dec
out
or
cwtl
add
sbb
inc
jne
rol
cmpsl
xor
or
jl
sbb
mov
mov
sub
cmp
sub
rorb
cmp
pop
add
scas
jns
fistpl
stos
mov
mov
mov
hlt
pop
pop
loop
or
mov
inc
dec
cli
daa
and
xor
rclb
mov
test
jle
xchg
xor
stos
pop
js
sub
lods
lea
push
inc
mov
lret
dec
push
xchg
es
inc
sub
in
and
xor
insl
out
fst
xchg
adc
roll
out
xor
sub
pushl
sbb
mov
insl
sbb
inc
cmc
or
push
push
fidivs
sbb
mov
jae
lcall
leave
pop
mov
scas
or
stos
fst
and
mov
inc
cmp
dec
and
pop
clc
xor
fimuls
sbbb
or
dec
ljmp
dec
cltd
cli
or
js
fs
push
mov
adc
pop
xchg
cmp
iret
mov
shrl
fwait
mov
adc
cmp
lret
movntq
aam
dec
shrb
mov
mov
insl
push
insb
mov
in
pop
xchg
pop
cmp
and
fcoml
shl
cmpsb
jae
mov
sbb
push
mov
loope
and
imulb
inc
push
loopne
push
inc
popa
adc
inc
sbb
push
ljmp
jecxz
dec
or
push
jnp
leave
mov
ds
or
cs
in
jnp
mov
cmc
and
pop
lods
xor
ss
dec
mov
add
push
sbb
out
dec
out
js
js
push
sub
mov
push
fidivs
sbbl
dec
push
cmp
jae
lret
push
mulb
adc
add
call
lods
sbb
and
rolb
aaa
xor
dec
sub
in
faddl
fidivrl
into
stc
mov
cmp
cs
xchg
inc
jno
jmp
fistl
movsb
es
xor
push
shlb
xor
sbb
pop
inc
pop
insl
les
imul
ficomps
dec
jmp
iret
mov
mov
push
ret
call
stos
outsl
sbb
in
dec
add
hlt
popf
sub
das
lret
add
adc
xor
pusha
xor
or
leave
push
cwtl
and
push
and
aad
lds
mov
lods
adcl
mov
dec
adc
iret
stos
dec
je
jno
jbe
sub
xor
push
or
loop
movsl
pop
lds
js
faddl
sbb
pop
inc
pop
push
lret
insb
mov
mov
push
sub
pusha
ja
xor
pop
insb
jb
jbe
fisubrs
std
cli
mov
pop
dec
mov
les
and
out
sub
test
sub
outsl
xchg
lcall
push
mov
mov
mov
jnp
hlt
cmp
mov
cmp
and
loopne
es
movsl
jno
pop
fcomps
lock
cmpsl
lea
inc
test
in
pop
loop
adc
xor
xchg
mov
jecxz
pop
dec
inc
mov
sub
js
mov
cmp
jo
pop
in
cmp
xor
push
xchg
or
push
push
add
inc
jb
ja
xchg
adc
lcall
sbb
dec
jmp
jge
ljmp
pop
cmp
cs
or
cmp
lds
lods
loope
mov
xor
cmpsl
pop
push
fmull
cmpsb
sbb
adc
sub
push
bound
shll
mov
lock
pop
std
in
popf
jmp
mov
mov
mov
movsl
and
aaa
lods
inc
pop
imul
adc
rorl
call
notl
pushf
pop
cmp
sahf
dec
in
and
sti
push
xor
cld
imul
sbb
movb
mov
adc
sbb
mov
pop
mov
rcrb
fs
pop
enter
jb
xor
cmp
push
clc
call
leave
inc
loopne
mov
clc
or
inc
xchg
insb
dec
cmp
out
lahf
jmp
dec
imul
sbb
int3
sub
loopne
ljmp
jns
lods
cmp
fstl
flds
bound
adc
loope
inc
adc
imul
dec
movsl
mov
jbe
fisubs
cmp
adc
je
pop
push
aad
pop
inc
sub
aam
sub
push
xchg
scas
dec
and
lret
mov
sub
dec
loopne
testl
inc
mov
cmp
or
sub
out
pop
imull
shlb
jb
add
sbb
inc
fs
cmp
or
jg
mov
icebp
push
popa
sbb
and
cmc
fisubrl
and
xor
mov
push
lcall
std
lea
pop
neg
repz
xor
xor
add
repz
aad
mov
sbb
mov
pop
cli
xchg
inc
mov
les
xor
inc
jle
imul
pop
mov
les
inc
xchg
push
mov
gs
addr16
lea
jbe
add
xchg
bound
bound
push
mov
mov
dec
pop
mov
test
out
leave
and
or
jbe
frstor
and
cmp
adc
push
push
lea
xorl
xor
dec
rol
mov
mov
jno
ljmp
scas
xor
lock
sbb
icebp
jle
sbb
and
es
pop
in
dec
lcall
mov
pop
loope
lahf
insb
inc
and
push
mov
dec
insl
dec
bound
aam
jmp
cmp
mov
inc
mov
mov
xchg
inc
lret
imul
fildl
xor
fcoml
gs
mov
out
mov
mov
movsb
loop
push
fsubl
push
cmc
daa
cli
mov
stos
mov
adc
test
and
pop
pop
js
mov
sub
fisubs
sub
cmp
adc
push
or
cmpsb
jb
outsb
movsb
inc
jmp
dec
leave
inc
icebp
xor
adcl
ljmp
loop
mov
lea
jne
jg
cmp
shll
rcrl
and
add
sti
fidivl
dec
and
sbb
int
dec
gs
add
pop
lods
inc
std
xor
jl
jno
xchg
pop
aad
in
insl
cmpsl
fisttpl
lret
rcr
lock
xor
sbb
dec
test
xlat
adc
xchg
jnp
sahf
inc
push
ret
in
jnp
ds
pushl
fucomip
mov
cmp
pop
jp
mov
xchg
mov
jmp
jb
inc
insb
cmp
insb
mov
adc
aas
inc
scas
mov
push
jl
inc
mov
enter
xor
insl
cmpsb
nop
add
out
xchg
sub
mov
test
mov
inc
push
in
hlt
xlat
and
mov
fs
xor
fcoms
lods
mov
popa
pushf
mov
or
sub
leave
aas
jmp
jecxz
pop
adc
adc
in
cmc
ret
add
bound
push
fistl
je
cmp
imul
jo
and
sbb
bnd
and
pop
jmp
jle
aad
xchg
adc
jge
xchg
repnz
inc
cmp
js
pop
and
fs
and
inc
or
add
push
cmp
pop
jne
fildl
fbld
jo
add
push
xorb
mov
scas
or
std
test
mov
jp
mov
lods
in
xchg
int3
rolb
sti
inc
dec
push
or
jecxz
out
mov
je
adc
aad
dec
stos
lret
jno
cmpsl
xor
sub
xor
push
loop
jle
add
ficompl
lea
jecxz
fildl
out
mov
xchg
adc
push
lock
pop
ljmp
adc
cwtl
dec
scas
mov
popf
divl
mov
es
icebp
dec
fdiv
ret
mov
fcoms
js
and
nop
loope
and
cmp
les
push
pop
or
rsqrtps
mov
movsb
fs
fildll
cmp
or
cmp
lods
dec
cmp
shrb
xor
test
lds
push
mov
and
mov
lahf
cmp
ja
mov
xor
ret
ja
leave
inc
hlt
mov
or
fstl
and
mov
push
sub
pop
mov
test
cmp
sub
jb
mov
and
cmpl
pushf
jne
loope
ret
push
add
push
push
rorl
ret
pop
clc
sti
filds
pop
xchg
dec
ja
jo
sbb
jle
add
je
scas
insb
push
push
cmp
hlt
xor
cld
ret
gs
shrl
dec
adc
cmpb
add
ret
cmp
stc
and
or
mov
pop
xchg
fs
mov
aas
rcl
clc
lods
ret
mov
mov
add
bound
in
enter
xchg
pop
jecxz
idivl
push
cmc
pop
and
test
xchg
mov
pop
leave
or
and
pop
fmuls
int
sbb
jo
sub
les
ret
xlat
in
shl
cwtl
fildl
jne
sbb
sub
test
data16
add
push
jno
daa
push
lea
sbb
gs
jbe
repz
loope
xchg
mov
jnp
insl
mov
inc
in
pmullw
xor
shlb
jle
cmpl
dec
mov
rorl
insb
cltd
mov
mov
gs
mov
shll
add
add
pop
in
fadds
ljmp
jb
mov
mov
dec
and
or
lods
roll
push
xchg
pop
xlat
xor
leave
ret
push
dec
fdiv
mov
dec
jnp
dec
icebp
sub
rep
push
dec
mov
scas
jge
and
ds
jl
xchg
es
bound
xor
pop
je
and
out
outsb
lcall
mov
inc
popf
jb
dec
pop
fs
mov
stos
adc
mov
ret
mov
and
jo
push
stc
pusha
loopne
xchg
rorb
icebp
aam
sub
je
pop
jecxz
adc
sbb
mov
and
pushl
mov
dec
xor
ljmp
and
mov
jle
test
rcr
lret
add
push
lahf
insl
pop
xor
mov
cli
movsl
hlt
push
xchg
icebp
lea
ficoml
or
mov
filds
push
pop
push
test
shr
sub
enter
xchg
pop
fistps
into
fdivl
fwait
mov
into
test
stc
lods
mov
mov
or
addb
mov
push
shr
or
inc
repnz
psubusb
outsb
std
lea
insl
pop
vmovaps
in
and
daa
or
cltd
fdivrl
mov
int
imul
aaa
add
ret
cmpsb
mov
xor
xchg
sub
adc
adc
add
ljmp
js
fwait
pushl
push
adc
dec
ret
aaa
push
adc
jns
jb
xor
mov
mov
jecxz
jmp
xchg
imul
push
psadbw
pop
dec
arpl
outsl
cmpsl
push
fcmovne
rorl
pop
xchg
jne
mov
and
and
in
fldcw
lods
xchg
cli
repnz
or
adc
sbb
cmpsb
xchg
push
jp
sub
push
xchg
xor
test
insl
fs
add
cmp
pop
cmp
sub
xor
adc
dec
sbb
ds
negb
fdivp
mov
aam
fwait
xchg
je
xchg
cmpsl
leave
shl
cs
mov
xor
xchg
out
and
loopne
ljmp
ljmp
or
push
add
jp
or
adc
repnz
pop
cmp
sbb
pop
sbb
add
mov
inc
aaa
addl
loope
push
xor
loop
test
in
pop
std
scas
icebp
sti
cltd
jbe
nop
cli
pop
enter
push
aam
sbb
sbb
and
xchg
mov
mov
jl
ds
clc
fcmovnu
or
dec
imul
sarl
shlb
dec
xchg
jge
inc
dec
jne
add
xchg
popf
or
sub
testl
mov
clc
cs
lret
sarl
mov
push
cmp
ret
das
xor
pushf
insb
sub
mov
mov
dec
insl
pop
pop
jne
xchg
sub
mov
jge
cltd
push
bound
ret
lret
pop
cmp
jns
push
jnp
or
adc
mov
pop
lahf
adc
movb
xchg
adc
lret
aaa
int
fstps
mov
add
jbe
inc
ja
add
mov
arpl
popf
pop
sub
mov
ja
mov
mov
sub
lcall
out
out
in
jbe
test
cmp
inc
or
cmp
inc
adcl
subl
sbb
iret
mov
test
adc
cmpsl
das
jg
repz
sub
sub
loop
jl
pop
mov
lock
repz
fldt
dec
lds
mov
shll
stc
xchg
pushf
stc
sub
push
push
cmp
jge,pt
into
jb
mov
mov
add
cltd
mov
jp
add
dec
stos
xchg
inc
icebp
and
hlt
jmp
stos
ljmp
mov
mov
aam
into
dec
inc
pop
loopne
lcall
cmp
or
add
xor
cmp
sbb
sbbb
jno
mov
cmp
inc
xchg
fmull
jge
jo
pop
stc
mov
or
pop
add
scas
push
mov
adc
pop
jne
push
add
stos
mov
mov
std
in
ss
jge
mov
jmp
mov
or
shr
fadd
push
cmpsb
jge
outsb
xor
nop
testb
nop
cli
iret
lcall
out
cmp
xchg
mov
aad
gs
in
es
sbb
inc
and
jae
out
test
pusha
add
xchg
add
inc
cltd
pop
xchg
je
arpl
xchg
mov
fmul
add
loope
stos
and
adc
push
aam
repnz
add
inc
ss
dec
ljmp
icebp
in
sbb
loop
pop
je
cmp
sub
add
push
inc
mov
add
out
fisttpl
repnz
jns
out
adc
loopne
les
sub
inc
mov
inc
into
sub
insb
cmpsb
push
push
push
mov
in
xchg
jmp
pop
bnd
jle
and
test
cwtl
lods
and
ja
xchg
adc
adc
stos
pop
stos
test
iret
in
push
lret
jae
sbb
sarl
iret
in
cmp
jmp
jge
push
sub
cld
pop
adc
faddl
xor
mov
cli
ss
pop
aad
ljmp
mov
or
hlt
movsb
pop
add
inc
imul
dec
into
imul
or
ljmp
adc
xchg
dec
dec
add
iret
iret
test
add
mov
mov
dec
xor
ficoms
or
popf
icebp
test
in
push
stc
mov
or
addr16
sbb
test
dec
fs
dec
mov
aam
push
push
add
inc
loop
jmp
fwait
sti
sub
mov
pop
daa
push
adc
push
jne
daa
aad
pop
mov
loope
incb
mov
js
jmp
cmp
push
daa
sar
xchg
test
mov
cmpsb
decb
add
add
loopne
and
adc
dec
in
add
lret
pop
xchg
dec
repz
ret
lea
inc
adc
push
cmp
aam
cwtl
shl
or
xor
mov
add
cld
daa
jnp
adc
out
negb
mov
les
loopne
movsb
std
loop
sahf
lods
mov
pop
push
pop
call
in
fs
fisttps
js
outsb
push
fildll
xlat
mov
sub
pop
dec
cmpsl
mov
jg
jne
mov
and
iret
cmp
adc
sti
stos
lahf
imul
push
gs
ficoml
push
imul
icebp
sbb
call
sbb
sub
xor
push
lret
push
mov
push
add
sbb
cmpsl
in
or
add
js
js
mov
dec
adc
outsl
xor
hlt
dec
mov
jbe
jp
jne
push
push
jno
ficompl
shrl
mov
test
xchg
inc
cli
lret
mov
enter
sbb
xchg
hlt
jo
rcrl
test
sbb
add
and
scas
cmp
jne
andb
cmp
in
out
les
js
sbb
inc
adc
dec
ds
test
jecxz
pop
fisttpll
pop
dec
inc
cmpsb
push
or
mov
sbb
mov
es
sub
lock
cmp
dec
arpl
lahf
mov
sbb
jle
mov
inc
stc
lret
out
mov
mulb
push
cwtl
inc
dec
cmp
add
jp
mov
nop
inc
jp
insb
push
mov
inc
cmp
mov
push
lods
pop
in
sbb
fcoml
xor
roll
cmp
movsl
push
aam
nop
sbb
mov
lods
repz
fisubs
or
sbb
ficoml
fisubrs
fldl
jmp
int3
mov
jecxz
testl
lret
mov
lds
xor
and
test
pop
xor
cmp
mov
nop
xchg
cmpsb
jbe
fists
pop
push
jo
inc
cld
add
push
mul
dec
fs
insl
std
mov
or
cli
push
push
lods
mov
test
jge
cmp
das
xchg
pop
pop
or
jno
scas
cwtl
add
nop
mov
adc
mov
inc
cmp
cltd
idiv
ficoms
int
mov
inc
push
test
push
test
cmp
cld
sub
cmpsb
push
xchg
cmc
push
xor
lea
dec
and
pop
adc
mov
add
mov
div
cli
in
sub
mul
and
mov
dec
or
shll
push
dec
cmp
adc
sbb
push
fisubs
or
adc
ror
lcall
sbb
pushl
xlat
push
pop
insb
int3
scas
cmpsl
push
adcl
imul
xor
in
push
stos
xchg
lret
arpl
pushf
inc
sub
mov
lcall
imul
test
ljmp
xchg
push
mov
aaa
push
mov
in
sub
fwait
jmp
sub
inc
je
in
dec
mov
adc
test
dec
jge
push
adc
imul
mov
ljmp
fmuls
pop
hlt
stos
orl
mov
or
cmpsb
fbstp
pop
jbe
sub
mov
push
out
xchg
add
pop
mov
lds
push
test
pop
mov
push
int3
test
xchg
test
outsb
jns
jmp
in
mov
adc
cwtl
inc
pop
push
sahf
dec
enter
sbb
imul
fcmovb
xchg
inc
jb
xor
outsl
shrl
in
dec
insb
movb
and
inc
jns
mov
mov
aam
dec
sub
into
inc
mov
imul
shlb
cmp
call
aam
cltd
lret
mov
push
or
loopne
bound
lret
add
add
subl
mov
push
sbb
push
push
add
xchg
or
sbb
addr16
jno
scas
arpl
xchg
jmp
lock
sbb
fwait
mov
filds
fadd
sub
inc
movsl
push
std
xchg
out
out
xchg
ljmp
cmpsb
jl
inc
loopne
xor
sarl
shr
push
cmp
adc
push
aaa
leave
or
add
mov
jmp
sub
sbb
xchg
mov
jb
pop
xor
pop
mov
stos
pop
add
xchg
sub
sbb
mov
popa
fstpt
push
mov
scas
int3
xchg
insl
gs
shlb
sbb
push
xchg
shl
out
addb
mov
mov
cltd
in
incl
cmp
scas
aad
popf
jle
cmp
imul
sbb
mov
cmp
adc
jnp
fldt
scas
sbb
ds
xchg
sbb
dec
test
xchg
int
push
dec
add
nop
lcall
cli
sbbb
or
mov
notl
dec
int
pop
adc
imul
mov
xchg
jp
ss
das
xor
sub
insb
fucom
jecxz
out
lea
std
pop
mov
mov
iret
xorl
inc
xor
ja
add
xor
ret
inc
leave
loop
xchg
cmp
mov
jae
cwtl
and
mov
std
fistpll
dec
mov
and
dec
jp
in
mov
ficoms
xchg
or
stc
int
mov
and
mov
loope
lret
ret
sbb
addb
or
mov
aaa
add
aam
mov
push
mov
pop
aas
pop
cmpsb
lds
mov
fwait
lds
insb
xor
lds
addr16
call
shll
stc
insb
nop
lds
lahf
mov
enter
mov
add
in
xor
pop
iret
sub
outsb
jle
mov
std
insb
jmp
outsl
push
add
sub
int
inc
std
cmp
push
repnz
jb
scas
mov
mov
shr
fstpl
inc
scas
stos
inc
in
jns
xor
lods
ja
mov
rorb
ret
add
stc
pop
jae
inc
mov
in
push
jmp
xchg
popf
mov
pop
dec
xchg
push
add
adc
xchg
push
aaa
xchg
push
jg
mov
iret
mov
mov
and
dec
mov
inc
xlat
bound
xlat
lahf
mov
push
pop
ljmp
pushf
adcb
xchg
pop
icebp
lods
fwait
lcall
stos
inc
sub
mov
mov
fnstcw
movsl
mov
jnp
imul
lods
cmp
xchg
jmp
adc
cmp
mov
and
xchg
fucomp
stos
xchg
test
in
fdivrs
data16
mov
popf
enter
cmp
add
push
rorb
mov
pusha
hlt
mov
inc
inc
test
fadd
jnp
adc
and
xchg
push
xchg
call
cmp
sub
jnp
test
stos
xchg
scas
jbe
testb
jmp
sti
pop
in
cmp
test
into
add
push
out
xchg
cmp
adc
push
mov
push
insb
in
pop
mov
push
or
icebp
icebp
enter
jmp
sti
jns
lcall
sub
pop
jbe
test
sbb
loopnew
lret
pop
popa
bound
insb
cmp
sahf
fsubrs
jle
pop
popa
or
out
inc
adc
sbb
sbb
push
jl
mov
ljmp
inc
or
iret
jp
loopne
test
in
shrb
imul
popf
sti
push
out
mov
jb
pop
dec
mov
inc
adc
mov
sbb
mov
dec
add
push
add
inc
leave
dec
out
test
push
xchg
pop
js
inc
fs
push
cmp
cmpsb
cmpl
lods
cli
mov
int3
stc
add
jo
iret
sbb
int3
leave
aas
icebp
sbb
clc
mov
mov
cltd
cmp
cmp
mov
push
pop
adc
lret
mov
push
lcall
out
insb
xor
int3
lahf
add
add
xor
fs
outsl
xor
pop
pop
shlb
pop
adc
mov
negl
stos
stos
cmp
sbb
mov
aas
xchg
xchg
out
mov
movsl
cmc
loopne
jp
mov
in
sub
lcall
or
into
adc
fildl
aad
push
ror
icebp
ljmp
mov
sub
sub
aaa
loop
iret
dec
stos
lea
in
cwtl
addr16
cmpsl
gs
push
aam
jbe
mov
and
stos
xchg
dec
lods
inc
sbb
insl
mov
fiadds
or
out
xchg
or
inc
mov
ljmp
inc
xor
pop
jbe
mov
in
in
movsl
aam
add
xor
push
cmp
xor
xchg
jb
mov
jbe
dec
sub
xchg
in
pop
cmp
popa
xor
leave
fucomp
fisttps
jno
int
out
int3
dec
cmp
shrb
xor
push
pop
test
sub
xchg
mov
pop
sub
addr16
pop
js
mov
mov
pop
push
fistl
or
sub
cli
adc
push
scas
std
imul
mov
hlt
xchg
adc
xchg
ret
lds
sbb
ljmp
lock
fs
push
loop
out
sbb
cmp
fsubp
in
insb
rcr
sub
shrl
fwait
dec
or
lods
fbld
adc
mov
imul
pusha
testl
fstps
xchg
gs
test
cld
push
movsb
push
sbb
fdivrs
cli
inc
mov
mov
fcomp
sub
test
pop
cltd
loopne
push
in
ficomps
hlt
cmpsb
adc
pop
daa
sbb
mov
or
mov
xchg
jmp
add
rcr
test
test
outsl
int
cmp
xchg
repnz
xchg
pop
push
jno
mov
addb
push
mov
sub
dec
popa
out
jbe
and
jnp
into
fdivrs
mov
sbb
sub
sti
sub
lea
repnz
mov
jg
jg
xorl
fadd
inc
mov
jmp
gs
sti
sbb
addr16
insl
sub
sub
sbb
jp
jmp
add
in
sbb
adc
pop
mov
pop
idivb
mov
xor
shll
out
mov
adc
sub
mov
sarb
push
inc
and
adc
les
movsl
es
ljmp
pop
das
sub
mov
add
stc
pop
cmp
orb
cmp
push
loopne
pushf
sbb
add
rclb
fwait
jns
imul
mov
jnp
out
addb
sbb
iret
mov
fldl
loopne
pushf
cld
mov
adc
cmp
sub
jge
test
dec
fs
ss
xlat
imul
roll
xor
cmpsl
and
xchg
int3
cmp
push
and
xor
popf
mov
push
rcrl
mov
adc
or
sbb
inc
jle
dec
loopne
adc
sbb
push
imul
lea
aad
jns
lock
pop
mov
or
movsb
xor
fsubr
add
ljmp
dec
lea
dec
mov
data16
add
aad
dec
arpl
addr16
pop
test
orl
push
fs
jmp
pop
push
sub
je
shlb
mov
or
xlat
ss
bound
in
adc
and
outsb
fldl
in
outsl
test
cltd
mov
sbb
add
sbb
xchg
mov
dec
jbe
inc
and
inc
ja
popf
xchg
out
mov
shlb
fildl
imul
nop
iret
jnp
sub
pop
pushf
rol
push
ret
das
fnsave
mov
andl
popa
and
inc
pop
push
cltd
jo
add
or
inc
je
sub
pop
xchg
or
mov
and
arpl
arpl
rol
testb
es
jp
jle
dec
mov
mov
mov
jge
pop
add
add
push
inc
cmpsl
sub
dec
stc
dec
cmp
pop
lods
movsl
std
xchg
pusha
or
push
xchg
jns
popa
push
fcomi
out
jl
xchg
nop
cmp
ljmp
test
cmpsb
jg
xchg
jno
inc
pop
lret
movsb
out
and
mov
cld
mov
xchg
outsl
js
cmpsl
and
sbb
addb
lret
pop
cmpsl
in
popa
inc
daa
push
fisttpl
pop
lcall
inc
test
jb
in
testb
rcrb
dec
je
mov
xchg
push
out
pop
lock
cmp
lcall
and
jmp
cmpsl
int
ret
pop
xchg
enter
dec
out
mov
xor
lahf
fwait
sbb
scas
out
data16
jmp
pop
pop
aad
mov
pusha
in
cltd
xchg
push
push
cmpsb
inc
call
lock
hlt
lret
call
sub
mov
jbe
in
cmc
dec
cs
fsubp
dec
sbb
sub
popa
mov
cmpl
fs
pop
pop
xchg
aaa
xor
enter
icebp
aad
test
mov
pop
pop
gs
pushf
xlat
shl
cltd
pushf
cld
leave
mov
jno
dec
mov
andb
cmp
xor
arpl
cmp
or
jbe
into
xchg
adc
test
ja
cmpsl
inc
xlat
sub
inc
or
pop
leave
cmp
dec
int
xchg
movsl
cmp
outsb
cltd
pop
sub
push
repnz
mov
and
and
stc
test
in
sahf
call
gs
pop
sti
int
cmc
push
lock
pop
repz
stos
movsl
mov
jp
test
dec
jmp
xor
std
outsb
shll
fwait
adc
es
add
pushf
mov
std
mov
push
add
pop
mov
cmp
jp
les
mov
out
scas
sbb
insb
xchg
in
stos
movsl
andl
stos
pop
or
jae
jmp
jae
xorl
cmp
aad
fcoms
insl
ja
ret
inc
dec
pop
test
adc
cmpl
xor
call
pop
push
icebp
adc
test
dec
jp
jle
inc
les
cmpsl
outsb
xor
dec
shll
paddsb
rol
idivb
jnp
stc
mov
mov
push
xor
outsb
or
jl
pop
mov
jbe
mov
push
add
leave
ljmp
adc
aas
jge
mov
sub
cld
dec
dec
cmp
lds
pusha
cwtl
movsb
pop
jmp
dec
dec
sbb
fsub
cmp
ss
cltd
and
ret
mov
mov
sub
pop
and
je
outsl
xor
pop
xor
or
fiaddl
fadds
mov
out
cmp
imul
jnp
sbb
popf
addr16
pop
decb
sbb
add
and
cmp
rolb
fsts
bound
sarl
lret
out
std
push
sbbl
push
pushf
add
icebp
mov
call
insl
push
add
xchg
dec
cmp
daa
jl
sub
dec
daa
push
rcl
repnz
into
push
xor
bound
adc
push
xor
popa
xchg
jns
add
dec
add
dec
call
jge
mov
repnz
fisubl
pop
popf
pushf
jno
loopne
loopne
mov
xor
xchg
sbb
lcall
inc
or
xchg
out
mov
lea
insb
inc
int3
lret
out
mov
push
xchg
scas
dec
cltd
xchg
add
out
sbb
mov
arpl
cmp
xchg
lock
sub
sub
cmp
mov
es
lret
push
add
xor
mov
aam
imul
scas
add
dec
test
imul
add
pushf
stos
mov
and
sbb
insb
aas
test
sub
pop
sub
mov
mov
xor
imull
or
xchg
aaa
sub
out
arpl
push
dec
jno
mov
jp
mov
inc
fwait
popf
fidivl
scas
pop
pop
sbb
scas
decl
nop
mov
add
cmp
sub
imul
inc
repz
adc
cld
loopne
or
pop
ret
inc
fwait
and
iret
dec
or
sub
mov
inc
enter
pop
test
mov
jnp
outsb
sti
out
in
aaa
icebp
mov
aaa
cmc
push
nop
into
in
aas
popa
lret
nop
lahf
pop
jns
das
mov
fiadds
out
adc
mov
inc
xchg
repz
xchg
push
cmp
push
jge
add
jg
jg
and
shr
jne,pt
xor
ret
push
inc
push
sub
cmp
stos
inc
jecxz
pop
mov
xchg
mov
fmull
cld
loop
imul
popa
mov
je
mov
aam
outsb
pop
popf
mov
aas
repz
lock
xchg
cmpsl
mov
mov
ds
scas
dec
mov
adc
cmp
sbb
scas
movb
pop
sbb
dec
inc
sub
cli
in
loop
sbb
mov
dec
sbb
scas
sbb
decb
mov
shll
pusha
dec
loopne
jge
cmc
sub
cwtl
jg
mov
ficompl
xor
jno
int
push
jnp
and
pop
fstpl
adc
pop
and
arpl
shll
stc
lea
dec
jg
push
xor
xor
xor
sbb
pop
mov
out
push
testb
mov
or
test
push
push
xor
lods
cmp
jae
notw
or
pushf
es
lcall
sbbl
pop
push
lahf
add
les
shl
dec
pop
ret
or
push
fldcw
mov
adc
or
mov
pop
sbb
cli
pop
mov
sub
cmc
xor
mov
mov
fadds
out
faddl
in
ja
jecxz
mov
in
call
ret
jae
nop
inc
in
inc
insl
das
dec
jnp
pop
das
aas
adc
dec
ror
xchg
aam
pop
gs
mov
fsts
cmp
push
cmp
mov
dec
mov
shl
pop
and
test
sub
xchg
sub
outsl
dec
sub
mov
lods
cmpsb
out
roll
cmp
cmp
pop
jge
std
negl
rorl
mov
aaa
and
adcb
or
jmp
int3
rcll
pop
mov
iret
jne
adc
xchg
stos
aas
iret
pop
mov
dec
inc
es
movsb
mov
imulb
lods
icebp
ret
bound
insb
mov
xchg
adc
clc
divl
in
gs
pushf
jnp
jbe
sahf
and
pop
cmp
xchg
sub
mov
add
fsubr
cmp
cmp
push
and
ss
andb
mov
fistps
dec
js
movb
mov
test
sub
scas
in
cs
test
xor
mov
mov
ds
enter
inc
les
xor
sub
cmpsb
jno
jb
or
cmpsb
push
and
sti
inc
pop
push
mov
ja
mov
imul
cmp
or
je
cltd
pusha
xor
adc
lcall
icebp
adc
xchg
add
adc
iret
enter
in
pop
mov
outsl
test
adc
cmp
sbb
mov
repz
inc
inc
xor
call
dec
jle
inc
xchg
mov
lock
movsl
mov
dec
and
mov
ss
fwait
mov
dec
jmp
mov
loopne
in
pushf
xchg
adc
mov
inc
adc
jbe
mov
sahf
fisubrl
dec
mov
jnp
addr16
nop
pop
jb
cld
cmp
push
inc
add
aam
iret
orl
xor
das
ret
push
pop
xlat
ja
jo
repnz
and
jg
sbb
rclb
pop
mov
lock
inc
shrb
sbb
stc
into
daa
fists
ret
outsl
fcoms
push
xchg
adc
movsl
dec
nop
adc
scas
fwait
xor
jg
dec
push
rorb
fidivrl
sbb
jb
pop
and
scas
add
and
inc
inc
gs
fcompl
pop
mov
or
ds
xchg
jg
cmp
cs
xor
sti
mov
dec
and
sub
mov
lock
imul
xor
shrl
cltd
mov
popa
test
push
adcl
jnp
call
repz
xchg
and
jge
pop
popf
push
or
ja
and
and
lock
xlat
lods
add
ja
cld
mov
loope
sub
jmp
xchg
movsb
repz
into
outsl
sbb
nop
cltd
and
mov
add
jecxz
jb
sbb
sbb
xchg
push
into
in
xchg
dec
hlt
data16
insb
and
jp
mov
dec
test
fbld
aas
stos
xor
std
out
push
push
mov
ds
pop
cmp
andl
test
fistpl
lock
jo
cltd
js
bound
sub
mov
iret
cmp
jae
dec
sub
clc
xchg
xchg
and
cmp
rolb
nop
mov
jmp
out
add
out
pop
lock
pop
aam
aaa
pop
jnp
rclb
jmp
xor
lock
fisttps
loopne
fldl
mov
lahf
sbb
push
jp
mov
mov
repz
and
cmp
sub
jge
mov
sub
fmuls
push
mov
hlt
pop
jl
std
jl
sbb
push
add
jle
sbbb
aad
sub
ds
mov
aas
or
cltd
push
icebp
sub
mov
fbstp
mov
and
movsb
mov
mov
insb
fsubs
pop
pop
outsb
pop
call
rcrl
adcl
cmp
pop
or
push
jne
aaa
int3
pushf
aad
pop
and
mov
js
push
popf
cmp
mov
and
flds
scas
jecxz
fstpl
repz
push
cmpsl
or
mov
test
mov
add
icebp
sub
mov
adc
jmp
sbb
pop
mov
das
and
aaa
cmp
mov
mov
arpl
sahf
and
add
cmp
pop
push
pop
push
jb
ret
stc
cld
jo
xor
cmp
icebp
jno
and
cmpsl
sbb
out
test
inc
jle
or
stos
xchg
repz
rorl
data16
and
xchg
js
loop
mov
loopne
mov
pop
sub
xchg
sbb
or
jne
testb
iret
sub
sbb
pop
sbb
cmp
push
jbe
jbe
gs
xchg
stos
in
push
sub
xchg
xchg
mov
or
fildl
dec
idivl
cmpsl
pop
pop
enter
xchg
mov
xor
push
sbb
roll
push
rclb
push
ss
mov
jl
jp
es
or
aaa
out
jmp
lods
adc
insl
outsb
push
test
std
adc
mov
and
sbb
popa
arpl
dec
shll
add
es
sub
mov
loopne
lret
out
sbb
out
in
aaa
movsb
mov
out
jae
scas
lahf
sub
pop
adc
sub
xchg
or
mov
mov
fcom
popf
in
xor
xchg
mov
fldenv
ss
lods
sti
lock
test
orl
test
or
out
jnp
mov
xor
lea
addr16
mov
push
and
sub
les
xlat
xchg
das
sub
arpl
push
inc
testl
xor
adc
pop
push
cmp
jp
cmp
add
inc
out
add
int3
jp
or
jecxz
xor
shl
test
jae
adc
and
ds
pop
mov
imul
loope
mov
clc
push
fidivl
iret
es
scas
or
dec
jle
adc
subl
xchg
xlat
xchg
inc
mov
test
repz
ds
dec
jae
sub
dec
mov
lcall
xchg
shld
push
push
ja
push
adc
and
call
test
enter
cmp
inc
jns
fst
das
pop
push
jmp
xor
add
xor
sbb
push
call
addr16
push
cli
jno
mov
xchg
movsb
jno
cli
repnz
das
inc
add
movb
aaa
ja
lret
inc
rcrl
fiaddl
pop
hlt
pop
or
mov
test
dec
sub
insl
je
psubw
mov
repnz
cld
mov
mov
cld
push
lcall
sbb
movsl
mov
jecxz
scas
mov
pop
jl
sub
xchg
loopne
mov
push
sub
notb
push
add
xchg
pop
jae
sub
mov
mov
stc
mov
mov
into
je
shll
or
int3
out
push
jbe
aas
into
inc
adc
and
imul
int3
loope
dec
out
fnstsw
mov
mov
cld
popf
out
sti
add
adcb
and
cmp
jno
xor
sbb
add
push
dec
pop
sbb
mov
and
sbb
sub
inc
adc
lock
adc
or
sbb
lret
xchg
aas
mov
mov
test
cmpsl
dec
cwtl
loope
xchg
out
divb
lods
scas
ljmp
adc
mov
aas
cmp
cmp
fdiv
popa
pop
mov
fs
lret
and
lahf
cmp
mov
popa
mov
mov
jmp
inc
or
xchg
and
push
ss
xchg
add
xchg
dec
inc
lahf
cmp
pop
or
imul
adc
sbb
cmp
mov
jne
fisttps
pushf
xlat
stos
and
mov
cwtl
jae
out
movsb
cmp
pop
stos
dec
jmp
and
mov
xchg
cmp
out
push
sbb
pusha
xchg
outsl
in
pop
cmpsb
pop
xor
loopne
mov
inc
cld
push
adcb
stos
out
sbb
in
push
add
pop
into
push
push
into
adc
sub
adc
sbb
dec
orb
enter
push
xchg
mov
pop
xor
cmp
sbb
out
std
mov
int
or
jb
cltd
fwait
jge
adc
rcr
movb
out
int3
rorl
mov
pop
push
out
sbb
andl
fldl
sbb
imul
inc
adc
dec
pextrw
scas
sar
and
push
push
ret
loop
stc
xchg
pop
ret
shr
filds
movsb
pop
push
sub
ds
pop
cmpsb
out
inc
lods
fcos
or
cltd
sbb
xchg
and
jmp
cwtl
pushf
leave
cmpsb
pushf
sbb
scas
cmc
pop
bnd
mov
inc
mov
add
test
loop
sub
imul
mov
jnp
and
cmp
sar
mov
ficoml
cmpsl
push
dec
jne
cmp
loop
jl
loopne
aaa
sbb
pop
jb
pop
lods
fwait
scas
cmpsb
pop
call
cmp
bound
push
dec
das
add
lds
push
outsb
push
inc
dec
add
adc
std
movsl
vmwrite
xor
fwait
into
mov
mov
in
xchg
cmpl
xor
bound
shlb
outsb
mov
or
inc
jp
in
or
mov
dec
mov
fcomps
pop
out
jp
testl
nop
dec
insb
scas
push
pop
ds
dec
sahf
test
jno
loope
jg
dec
cwtl
sub
push
shlb
loop
xchg
leave
js
pop
cmp
andb
mov
loopne
adc
add
mov
into
int
loop
push
arpl
lds
dec
loope
out
dec
mov
in
jb
lret
mov
add
in
xor
data16
fcmovu
cmp
mov
push
test
xor
scas
fcom
xor
fistps
mov
push
test
or
mov
ret
aad
push
mov
xchg
sub
mov
mov
adc
es
xchg
pushf
xor
stos
test
shll
inc
loopne
xor
stc
dec
movsl
ret
mov
es
xor
shrd
dec
cmp
pop
nop
push
jle
pop
sbb
dec
cmpsb
cwtl
or
js
lret
movsl
test
xchg
movsb
inc
mov
pushf
test
daa
add
cwtl
fsubs
orl
arpl
addl
jno
aad
push
xor
lahf
movsb
shrl
sub
sbb
fbld
test
gs
add
add
mov
cmp
imul
dec
shlb
mov
sub
cmp
add
cld
xor
lods
mov
add
aas
dec
movlps
mov
push
adc
pop
push
mov
push
sub
and
or
cmp
add
les
cmpsl
jnp
add
dec
push
shlb
es
out
mov
pop
fldl
pop
cmp
rcr
mov
xchg
xor
stc
mov
pop
movsl
push
shll
dec
dec
daa
cs
pop
out
pop
lods
icebp
subb
lods
or
loopne
sbb
sub
cwtl
je
int3
sub
sahf
icebp
sbb
cwtl
gs
cmp
xor
lods
lods
jle
xchg
jmp
mov
jecxz
fistpl
popa
dec
pop
mov
loope
sarl
or
repz
jge
inc
mov
loopne
out
loopne
fisubrl
push
pop
cmp
enter
xor
call
pop
nop
cmp
xor
or
push
adc
lcall
lds
jl
or
incl
jecxz
jne
mov
and
dec
enter
out
jg
push
or
gs
jecxz
and
loope
or
push
mov
mov
into
repnz
roll
mov
in
enter
dec
cmp
leave
jmp
movsl
push
sub
sub
cmp
pop
shrl
andb
xorb
or
outsb
jns,pt
movsb
test
sbb
mov
incl
adc
scas
cltd
or
pop
lods
in
sahf
loopne
sbb
xor
jge
pop
mov
push
imul
popa
jo
xchg
push
add
loop
les
test
adc
and
stos
cmp
cmp
jge
fnsetpm(287
pop
mov
js
push
sub
dec
add
cmpsl
mov
cwtl
sub
fadds
cwtl
xchg
imul
into
mov
inc
pop
jno
push
pop
dec
inc
lcall
or
jne
fidivrl
iret
dec
bound
sub
push
xchg
jmp
jo
cld
adc
lea
lods
sub
int
xchg
xchg
stos
clts
xor
xor
push
add
pop
inc
cmp
sub
mov
mov
sub
jo
or
call
add
sbb
mov
fcoml
insl
mov
stos
loop
fcmovu
pop
and
or
jb
xchg
add
leave
mov
jle
inc
add
pop
test
aaa
push
sti
sub
clc
es
and
andb
and
jo
stos
sbb
mov
data16
lods
inc
xlat
xor
imul
into
inc
ja
sub
push
and
pop
mov
jne
push
sbb
xlat
jnp
scas
lret
hlt
loop
lods
push
cmpsw
or
loopne
ret
xor
or
sbb
inc
sub
sub
sub
hlt
insb
test
jno
xor
sar
movsb
xor
adc
rcrl
xor
sbb
out
dec
push
lcall
jp
fisubrs
mov
add
mov
leave
jae
xchg
data16
inc
add
cmc
or
jbe
xchg
clc
out
pop
mov
inc
xor
inc
fs
idivl
inc
cld
jns
jo
ds
cmpsl
inc
xor
les
mov
push
insb
dec
add
mov
data16
lret
out
mov
mov
stos
movsb
fdivrs
into
fcomi
cmp
mov
pop
xor
shll
xchg
cmp
int3
or
insb
outsb
cltd
shlb
out
enter
lods
orl
adc
mov
cmpsb
lahf
pop
out
mov
sti
fsubl
cmc
jno
daa
adc
pop
in
outsl
scas
in
cmp
shl
daa
cmp
mov
jg
cmp
dec
xor
cmp
mov
adc
pop
and
dec
test
xchg
lahf
mov
ret
pop
shrl
xchg
jae
mov
ljmp
inc
mov
les
cltd
mov
sbb
push
mulb
int
inc
imul
fidivrs
xchg
dec
mov
push
xor
adc
mov
inc
sbb
into
pusha
xor
jo
inc
mov
out
cwtl
mov
xchg
addl
push
ret
push
jp
into
add
inc
pop
or
aad
flds
stos
leave
jmp
push
imul
pop
sti
inc
gs
jns
pop
add
into
mov
push
je
adc
subl
inc
ja
xchg
cld
sbb
xchg
add
inc
xchg
push
lea
lods
jmp
pop
push
dec
dec
imul
pop
pop
stc
cmp
idiv
daa
xor
jl
cmp
outsl
xchg
loope
push
adcl
addb
pop
loope
mov
mov
fmuls
pushf
xchg
pop
mov
jbe
int
or
mov
push
das
roll
lret
mov
pop
sub
push
mov
xor
aaa
pop
xor
push
inc
jb
adc
jno
fs
or
jne
scas
mov
aad
xorl
icebp
loope
jbe
mov
mov
lret
dec
mov
xchg
bound
xor
pop
xor
pop
ja
xor
cmpsb
test
aad
dec
fnsave
adc
jne
sbb
cmp
jl
or
cmp
aad
cmc
aad
shr
pop
shl
or
dec
cmp
aam
adc
sub
lcall
popf
push
add
dec
mov
sahf
push
mov
mov
xchg
out
loope
push
ljmp
push
enter
mov
add
pop
xor
das
das
jmp
lods
push
sbb
inc
mov
lods
insl
sub
xchg
fwait
leave
dec
cmc
lods
fwait
mov
loop
pop
sahf
dec
mov
mov
push
add
shll
stos
sub
outsb
push
xchg
xor
jo
outsb
inc
in
orb
mov
sbb
xchg
shll
cli
add
out
jnp
cmc
mov
addr16
in
add
fisttpl
sub
sbb
testl
mov
pop
outsl
mov
rcrb
sub
xor
xor
pop
imul
or
add
push
adc
jg
dec
mov
adc
rcr
xor
xchg
pop
cs
dec
testb
lods
adc
cmpsb
push
xchg
or
ret
mov
pop
rep
and
push
bound
mov
push
xor
pop
dec
mov
sarl
cmp
in
cmpsb
loopne
pushfw
lcall
mov
fdivp
test
repnz
test
icebp
xchg
cmp
popa
mov
adc
les
and
arpl
lock
or
rcr
jo
fdivrl
popf
sub
out
sub
and
adc
fcmovne
adc
push
cmp
xor
decb
leave
dec
es
shl
jmp
dec
mov
xor
scas
mov
lret
mov
pushf
enter
sub
xor
cmp
ja
test
jge
push
jle
sub
cmp
fdivp
mov
repnz
popf
jnp
popf
mov
and
addl
dec
pop
ds
pop
ds
loop
stos
jecxz
stos
jecxz
sub
in
sbb
addr16
sbb
icebp
cltd
addr16
nop
cltd
sbb
pop
push
jne
push
adc
push
adc
jg
jnp
mov
in
cmp
fprem1
rclb
cli
pop
fldcw
js
repz
daa
add
aam
mov
sub
jmp
cld
enter
aas
dec
mov
cmp
shl
icebp
insb
idivl
jo
insl
and
push
outsb
jge
outsb
into
stos
outsb
into
pop
ror
pop
sub
pop
sub
mov
push
cmp
insb
cmp
ja
test
jge
sarb
sub
or
fdivp
test
icebp
stos
xor
lods
popf
mov
icebp
mov
inc
pop
aam
pop
ds
pop
ds
scas
ds
jecxz
stos
jecxz
stc
jecxz
xor
sbb
nop
sbb
sbb
gs
nop
mov
nop
sbb
sti
push
push
inc
pop
push
adc
push
adc
dec
adc
cmp
cmp
mov
in
push
and
pop
fpatan
xchg
fpatan
daa
pop
hlt
daa
out
sub
sub
sub
gs
test
test
mov
cmp
into
aam
into
shufps
push
add
push
sbb
sbb
sbb
dec
dec
outsb
into
ja
into
pop
pushf
into
pop
sub
pop
sub
mov
push
cmp
push
cmp
cmp
ja
test
jge
sahf
jge
sub
aam
fdivp
push
fdivp
stos
add
stos
popf
adc
cmpb
inc
pop
mov
pop
ds
jp
stos
jecxz
stos
jecxz
cld
in
sbb
sbb
sbb
xor
nop
jl
nop
sbb
cli
push
push
or
push
adc
pop
adc
cmp
cmp
mov
in
dec
in
push
icebp
fsts
in
fpatan
fpatan
daa
jecxz
daa
out
daa
out
das
out
cwtl
out
sub
pop
popf
test
mov
lahf
popa
cmp
into
mov
inc
lret
ds
or
les
push
cmp
rorb
xchg
sub
ds
or
inc
pusha
in
add
push
sub
xchg
das
lea
subps
mov
add
dec
and
mov
repnz
push
sti
cs
push
aas
aas
push
push
scas
jg
mov
insb
into
inc
sub
add
or
xor
or
dec
inc
or
pop
inc
or
add
add
dec
inc
or
pop
inc
or
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
