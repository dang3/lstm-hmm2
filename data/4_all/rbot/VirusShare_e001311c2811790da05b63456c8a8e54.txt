push
add
add
in
sub
push
push
lea
push
push
xor
call
cmp
sbb
mov
mov
mov
fcoms
inc
ficoml
adcl
sub
orb
es
push
jb
das
or
add
cmp
les
jle
add
pop
push
dec
and
and
enter
adc
and
dec
or
call
test
int3
les
pop
leave
ret
mov
sub
add
add
add
push
push
je
cmp
sub
int3
adc
cwtl
je
xchg
mov
xor
rolb
test
pop
jne
sbb
rolb
add
push
push
mov
jecxz
mov
add
sbb
mov
push
call
mov
or
pushf
and
test
jg
mov
push
test
jg
test
push
loop
insb
aam
push
push
or
xchg
movl
lods
pop
ret
dec
push
jg
je
mov
jmp
jne
cmp
frstor
mov
lock
and
push
test
mov
shll
xor
adc
push
push
call
xor
imul
nop
cmp
mov
test
push
sbb
jl
sbb
pop
mov
gs
adc
call
sub
add
mov
sub
xchg
pop
call
mov
insb
jb
imul
sbb
js
add
inc
lock
fwait
xchg
jge
dec
enter
loope
jb
sbb
add
aaa
xor
aam
call
fwait
xchg
add
sub
push
movsl
and
inc
adc
je
jmp
test
movsl
dec
sub
sbb
sahf
adc
mov
ret
clc
mov
sbb
and
push
sbb
test
aaa
push
cmp
or
cmp
push
push
xor
pop
pop
pop
add
ret
or
fcoms
jmp
mov
push
cmc
test
iret
lea
ljmp
adc
in
inc
push
mov
mov
adc
loopne
xchg
fwait
push
movsl
xorb
ret
sub
push
or
daa
cmp
inc
mov
clc
cld
sahf
mov
add
lret
into
add
xor
jmp
lock
or
clc
hlt
fld
shr
sub
mov
out
sbb
inc
add
add
xchg
hlt
clc
xchg
xor
pusha
clc
cld
mov
mov
add
mov
jne
cmp
add
hlt
clc
add
mov
sbb
jg
pushl
fildl
push
push
mov
pshufw
lods
lock
mov
movw
dec
faddl
dec
data16
jb
sub
data16
push
loopne
pop
in
fs
sub
push
sbb
mov
clc
fcomi
xchg
popf
lea
dec
call
orl
in
mov
xor
clc
pop
or
mov
lahf
rorb
pop
mov
movsl
lock
push
pop
lea
inc
rep
mov
movl
cmp
push
xchg
jne
ficomps
fstpt
mov
psubsb
loop
jnp
or
jmp
fwait
aaa
cld
xorl
les
inc
popa
jno
je
das
pop
shll
mov
sub
orl
inc
out
mov
xchg
sub
mov
lods
stc
sub
jne
sbb
jns
push
jb
push
adc
or
jp
aam
jmp
sub
pop
sub
cmpb
test
or
incb
mov
test
loop
mov
insl
imul
js
or
jmp
pop
clc
pop
inc
data16
loopne
or
push
inc
mov
mov
test
cld
ret
cwtl
adc
inc
enter
ret
add
test
push
shll
call
pop
add
test
adc
add
pop
mov
sub
lea
stc
adc
call
mov
repz
jo
push
lcall
push
lret
scas
dec
shlb
adc
mov
inc
mov
aas
xchg
aam
lock
fwait
popa
out
inc
mov
xor
adc
mov
dec
mov
arpl
sub
inc
stc
sub
mov
les
jne
mov
and
cmp
mov
cmc
or
fidivs
adc
push
push
pop
jnp
pop
pop
jne
in
fld1
lret
and
mov
call
mov
call
pop
cld
ret
popa
test
mov
inc
mov
imull
sub
fwait
fs
jge
push
xchg
adc
add
adc
mov
pop
xchg
fsubrs
push
dec
lds
mov
push
mov
push
push
adc
inc
cmpsb
dec
sbb
push
xor
fisubs
sub
push
cmp
inc
cmp
xchg
cltd
pop
cmp
je
rcl
mov
jmp
and
imul
aam
shrb
mov
dec
fsubr
inc
mov
jbe
pop
push
pop
inc
jnp
nop
xchg
jbe
lock
mov
arpl
cwtl
mov
iret
notl
lcall
enter
mov
aad
call
dec
jp
push
add
mov
mov
adcb
mov
popl
add
movsl
cmp
mov
lds
mov
push
and
push
notb
push
cmpsb
rorl
lods
add
mov
pop
movb
incl
dec
or
inc
addb
sub
mov
push
push
push
mov
not
dec
jo
sbb
xchg
xchg
add
scas
push
add
push
xchg
mov
add
je
push
adc
add
sbb
and
add
pop
pusha
dec
shrb
aad
adc
dec
sbb
notb
mov
push
sbb
fiaddl
add
mov
or
sub
loop
xchg
mov
lock
inc
mov
mov
add
inc
add
dec
shrb
dec
pop
aaa
iret
shlb
and
lods
add
clc
test
je
cmp
mov
cmp
subl
inc
movsb
test
pop
cmp
lret
mov
cmp
xlat
ds
cmp
ret
rcll
ret
xchg
test
xor
je
xor
sub
orb
idiv
cmp
jne
cmpl
cmp
enter
adcb
fdivrp
inc
jne
push
push
sarb
and
dec
ret
mov
out
or
lods
pusha
push
lds
pop
repz
push
mov
jne
push
insb
repz
adc
es
lock
push
rclb
cmp
in
in
push
repnz
cld
and
ds
push
mov
add
or
add
add
adc
mov
jl
inc
cmp
xorb
mov
les
in
mov
push
or
mov
mov
push
ja
pop
inc
dec
call
push
push
push
or
outsb
loop
arpl
shrl
add
cltd
mov
mov
pop
pop
out
mov
or
cmc
mov
mov
xchg
mov
test
or
in
mov
ret
xor
ljmp
or
fistl
test
addb
push
push
push
sarb
movsl
sub
sub
xchg
jnp
jmp
fistl
movsl
inc
sbb
rorb
xor
cld
sbb
add
add
inc
clc
je
mov
push
loope
cmp
shl
pop
and
pusha
adc
push
sti
mov
sbb
adc
cmpb
in
push
nop
loopne
ret
push
mov
xchg
fnstenv
bound
orb
xor
dec
jne
cmpsl
stc
les
push
dec
cmpsl
mov
jg
xchg
push
pushf
fwait
sub
fstps
mov
shr
add
push
loope
stos
pop
cmp
clc
dec
push
imul
sub
lods
inc
popa
fcoml
int3
filds
inc
fdivrl
sbbb
xchg
xor
mov
sub
clc
and
aam
aaa
stos
xor
adc
xor
push
int3
sub
cmpsb
or
xrelease
jmp
mov
push
dec
loop
leave
gs
jne
push
jmp
push
cmpsl
cltd
enter
jmp
adc
out
pusha
mov
mov
out
dec
mov
jmp
and
call
scas
and
jmp
call
and
add
mov
push
cmp
and
ret
push
mov
loope
into
icebp
call
out
repnz
pop
lea
cmp
and
addb
and
cltd
mov
pop
add
ds
ret
push
pop
inc
xor
call
or
rcr
xor
divb
push
jecxz
es
mov
stos
call
aaa
inc
mov
mov
and
jnp
imul
lahf
xor
ret
pandn
mov
lahf
dec
jge
je
cmpb
aaa
data16
inc
inc
push
mov
cmp
sbb
clc
jg
test
add
popf
ret
lea
add
mov
in
add
push
test
adc
mov
cmp
jne
mov
push
add
jmp
movb
sar
mov
add
pushl
fldenv
mov
incb
test
add
push
ljmp
mov
icebp
adc
push
scas
sar
inc
mov
cmp
dec
in
inc
test
xchg
out
insl
cmp
sbb
loope
imul
call
lret
jle
mov
push
lock
jns
xor
sub
inc
clc
mov
cs
sub
adc
pop
mov
or
dec
mov
or
mov
sub
pop
inc
rol
or
adc
xor
add
call
mov
and
pop
push
or
ret
or
mov
pop
jp
nop
sub
pop
inc
and
call
fs
jg
add
sbb
ja
shlb
std
cmp
fisttpll
loopne
and
and
inc
cmp
cmp
shr
enter
mov
mov
lds
int
sub
mov
xlat
cmp
iret
test
paddsw
test
dec
dec
jl
push
cmpsl
mov
push
push
sub
mov
pop
pop
call
mov
or
movsb
ljmp
adc
xchg
lods
dec
cmp
mov
ret
sub
xor
je
aaa
lds
push
mov
subb
in
cld
pop
nop
lds
mov
inc
call
mov
aad
in
push
adc
imul
dec
int3
sub
mov
addl
roll
mov
jb
enter
fsubl
mov
ret
mov
test
inc
cli
mov
jnp
lods
lret
inc
les
cmpsl
and
leave
daa
cld
pop
cld
pop
roll
pop
inc
js
and
mov
jo
add
xor
dec
leave
xchg
add
dec
and
xchg
icebp
sbb
push
sub
adc
xchg
inc
mov
jo
mov
sti
cs
dec
dec
adc
fdivl
mov
push
push
and
xchg
push
xor
test
adc
jno
cld
adc
je
mov
mov
inc
xchg
pop
cmp
xchg
jne
sub
gs
movsb
les
fcompl
dec
test
pop
ljmp
sub
mov
mov
dec
add
add
jne
clc
push
jne
lock
push
sub
add
add
mov
inc
push
mov
and
adc
js
sbb
or
pop
or
sahf
push
xchg
cmp
jne
push
arpl
insl
adc
adc
pop
jns
stos
adc
or
sub
stos
mov
out
push
cld
push
cs
or
inc
pop
xchg
pop
add
or
dec
mov
movsb
sbb
rclb
fcomps
rolb
pop
xchg
xchg
mov
test
push
mov
mov
jne
jmp
adc
add
push
push
mov
mov
push
jle
imul
pop
cmp
push
lret
call
lea
mov
adc
enter
imul
adc
pusha
xor
jmp
mov
xor
and
xchg
roll
and
pusha
rorb
adc
aad
pop
mov
fs
push
gs
sub
xchg
or
xchg
add
or
dec
jne
loopne
and
sub
js
push
cmpb
lret
scas
xchg
xor
cmp
pop
adc
loopne
fildll
fsubl
mov
push
lock
sbb
fstl
fstpl
loope
fcoms
fadd
pop
pop
fsubr
mov
cmpsl
adc
dec
stos
xchg
sub
in
sub
ret
xorl
inc
adc
jg
pop
mov
mov
xor
inc
pop
lods
data16
aam
jae
leave
loope
movsb
mov
psubsb
xchg
add
repnz
sahf
inc
add
jb
push
pop
jmp
add
adc
repnz
jmp
add
decb
pop
nop
fadd
out
cmp
sub
enter
jns
mov
pop
cmp
adc
pusha
in
sbb
cmp
shr
lret
add
movsb
add
fisttps
sar
jae
in
and
and
mov
icebp
add
jae
mov
add
shl
add
icebp
addr16
pop
in
repnz
into
arpl
movaps
add
inc
popa
mov
outsl
out
mov
push
push
jbe
add
inc
xor
or
and
add
shrb
mov
cmp
jb
cmp
adc
mov
lods
pusha
mov
out
sbb
cmp
sub
mov
pop
adc
jne
xchg
mov
mov
into
jne
xchg
mov
call
decl
sbb
sub
push
fimull
fsubl
or
add
mov
jl
mov
xor
cmpsb
cmp
in
movb
movsb
mov
push
mov
jp
xchg
adc
sti
inc
cmp
je
mov
mov
cmp
dec
sbb
sbb
push
mov
add
fmull
mov
je
sbb
out
stc
or
out
in
sub
dec
dec
movsl
adc
mov
mov
outsl
insb
or
inc
ret
loopne
xchg
adc
mov
inc
test
loopne
mov
xor
ljmp
sbb
mov
test
adc
test
lods
aam
nop
add
ficomps
push
mov
test
xor
cmp
stos
pop
aam
jmp
jmp
add
add
mov
cmp
mov
lahf
iret
push
in
and
out
stos
xchg
movsl
pop
dec
cmp
movsb
inc
lods
in
push
dec
in
imul
add
xor
mov
test
add
add
hlt
mov
push
movsb
adcb
jecxz
mov
xchg
mov
sbb
jne
push
call
xchg
jmp
orl
inc
mov
jne
rorb
lcall
orl
inc
jae
dec
jne
incl
mov
add
hlt
add
mov
mov
hlt
sub
test
mov
dec
rorl
mov
push
loopne
icebp
test
gs
addr16
push
popa
dec
mov
lea
call
or
push
mov
dec
pusha
fdivr
in
sub
sub
inc
or
call
jmp
scas
jbe
mov
add
mov
addr16
movsl
inc
test
and
mov
sub
pop
sbb
dec
inc
mov
push
push
pop
pmulhw
rorl
mov
enter
or
add
sbb
xchg
jecxz
call
fnstcw
and
pop
or
cmp
jae
pop
lahf
add
sti
or
lock
adc
mov
icebp
push
iret
call
add
inc
add
iret
jmp
jbe
cmp
jne
jl
ss
add
jmp
js
jae
xor
ret
rorb
mov
or
pop
mov
cmp
xchg
push
cmp
xor
inc
inc
jo
andl
call
lods
inc
ja
xor
push
pop
push
push
std
pop
cmp
pop
and
std
jbe
movlps
pop
add
sarb
ret
add
dec
cmp
je
cmp
je
cmp
add
push
call
addr16
jne
cmp
cmpsl
or
je
into
jmp
mov
addb
mov
mov
jmp
pop
je
lea
or
cmp
push
or
jae
call
outsl
add
cmp
jae
xor
loop
adcb
jmp
push
push
insb
sbb
test
je
or
ret
decb
jmp
lcall
int3
insb
xchg
pop
stc
scas
scas
sbb
aad
or
icebp
call
cmp
push
adc
mov
lods
xchg
mov
aad
pop
lret
inc
fisttpl
pop
nop
sbb
jmp
add
dec
js
or
cmp
jae
mov
test
sub
add
jbe
mov
sub
add
push
lea
push
push
call
shrl
dec
movsb
push
call
in
mov
rcrb
js
mov
sbb
or
in
jo
pop
pop
or
nop
mov
mov
jbe
movsb
pop
push
lea
jge
mov
rcl
mov
jmp
mov
mov
stos
push
stos
inc
add
popf
cmc
rdmsr
pop
mov
mov
scas
jg
adc
jecxz
jbe
jbe
cmpsl
movsl
into
ret
int3
sub
adc
test
mov
call
sti
icebp
ss
xchg
lret
cmp
mov
sub
das
stc
add
add
add
mov
cmp
lcall
or
xchg
je
add
add
add
orb
push
movsb
cmp
mov
mov
inc
mov
pop
lea
roll
pop
and
call
cmpsb
pop
adc
leave
ret
sub
mov
cmpsl
scas
lahf
jno
pop
popf
add
in
lea
mov
fs
fs
or
mov
mov
add
xchg
call
pop
dec
inc
je
add
jmp
je
add
leave
cltd
add
fmuls
push
enter
push
add
push
push
dec
adc
inc
adc
in
cli
mov
cmp
repz
xor
in
and
pusha
imul
sbb
jecxz
or
adc
push
push
mov
ja
and
and
sub
add
scas
mov
test
lock
pop
xchg
push
sub
ret
lret
popa
sub
push
push
sub
flds
pop
pop
pop
pop
dec
pop
add
inc
mov
add
rcrl
and
adc
add
push
adc
cli
or
add
and
cli
pop
je
jne
inc
mov
mov
jbe
mov
sar
and
call
inc
add
shlb
ret
rcrl
xchg
mov
rcr
inc
jmp
xchg
rolb
out
mov
or
leave
adc
add
xor
mov
ss
or
sbb
ret
adc
rolb
jb
mov
and
push
inc
sub
sub
mov
sub
sub
shlb
adc
adc
adc
les
pop
cmp
jbe
dec
push
add
or
cmp
lret
mov
inc
cmp
jmp
lods
bnd
dec
jp
add
div
push
ret
mov
mov
or
fnstenv
xor
and
mov
icebp
repnz
inc
sbb
cmpsl
pushf
pop
movaps
or
inc
mov
xor
cli
and
aaa
push
call
cmp
push
adc
rorb
mov
xchg
sbb
testl
mov
mov
and
das
pop
push
adc
inc
es
adc
jbe
push
sbb
push
push
jns
int
je
push
mov
loope
inc
sbb
adc
mov
cmpsl
push
jne
jmp
call
imul
and
test
sub
xor
and
adc
outsb
inc
jno
sub
push
shll
xchg
in
mov
sbb
mov
test
inc
icebp
adc
and
andb
clc
cmp
jne
popf
dec
push
iret
dec
imul
and
les
inc
add
jp
dec
add
popf
and
add
cmp
xor
mov
xrelease
mov
in
call
pop
insb
and
repz
std
test
shlb
fwait
push
mov
inc
fnstsw
pop
mov
lods
push
push
fwait
mov
mov
je
adc
mov
mov
xchg
jmp
jmp
adc
mov
cmp
clc
jne
jb
mov
daa
mov
dec
add
mov
push
mov
xchg
cmp
repnz
or
cld
test
clc
inc
jns
push
int3
add
rol
adc
nop
add
pusha
test
int3
lea
adc
das
xor
mov
shl
mov
jo
iret
mov
dec
sarb
adc
stc
mov
mov
scas
aam
out
subb
add
mov
dec
mov
mov
cmp
push
std
cmpb
add
push
sub
pusha
mov
inc
test
jnp
mov
add
rorl
cs
orb
dec
lcall
mov
inc
in
lcall
in
jns
test
les
xchg
push
enter
shll
test
gs
xor
or
pusha
push
adcb
call
or
add
cli
popf
icebp
gs
push
and
in
enter
mov
push
xchg
dec
jmp
inc
aam
adc
pop
sbb
mov
fwait
mov
shrl
push
int
jp
data16
int3
add
test
adc
mov
mov
sbb
subb
push
or
shlb
jmp
inc
mov
lahf
pusha
mov
push
movzbl
leave
or
and
sub
push
int
test
cmpsb
mov
and
call
push
add
hlt
xor
mov
sub
dec
mov
xor
popf
jg
pusha
jecxz
adc
fwait
mov
pop
or
xor
push
xchg
out
push
xchg
pushf
cmp
dec
stc
lcall
sub
adc
xchg
in
out
pushf
mov
xchg
sbb
call
dec
adc
imul
and
push
mov
push
sbb
inc
add
adc
sub
add
test
jg
sub
sub
ret
stc
scas
fistpl
xor
xlat
mov
mov
push
push
sbb
sub
dec
pop
je
or
xchg
rcll
idivl
fadds
das
mov
leave
add
hlt
pop
popf
xor
fsin
push
loopne
mov
jne
push
jmp
or
mov
jne
aad
add
mov
mov
push
push
jmp
sbb
mov
pavgw
sbb
xor
into
fmul
push
xchg
push
popf
movsb
cmp
xor
mul
mov
add
ds
roll
xchg
clc
mov
les
out
cmp
mov
inc
lret
popl
push
jnp
jp
mov
fdivrl
add
mov
and
mov
add
ljmp
and
or
in
jmp
fsubrl
adc
inc
inc
imul
and
in
sbb
mov
sbbb
nop
dec
add
dec
in
rorb
push
add
loope
xor
and
xor
out
adc
fs
out
test
in
out
test
push
out
in
push
xchg
push
push
out
lock
xchg
push
push
test
clc
pop
pop
push
push
lock
mov
and
ret
pop
inc
into
or
call
clc
sbbl
scas
cmp
test
jle
push
push
adc
mov
std
andb
mov
test
movd
sub
fstps
mov
adc
and
sub
lock
inc
jge
mov
xor
enter
xchg
jno
inc
jmp
jbe
xchg
jl
pop
pushf
or
sbb
js
push
hlt
cld
sti
mov
cmp
movsb
mov
mov
movsl
mov
test
pusha
data16
mov
add
or
mov
adc
push
dec
jne
push
mov
lahf
cs
xorb
adc
push
lcall
pop
or
push
jne
adc
insl
jmp
push
mov
adc
call
daa
push
lock
test
jae
je
sub
mov
or
imul
inc
inc
lea
loopne
sub
sub
mov
insb
fs
xor
stc
movsl
push
dec
test
xor
subl
stos
jnp
inc
hlt
fistps
xor
push
adc
add
cli
xor
mov
sub
and
push
add
add
dec
and
xor
int
add
and
rolb
decl
ljmp
imul
cmp
repz
mov
enter
cmpsl
dec
imul
adc
push
test
movsb
mov
adc
push
and
dec
inc
pop
inc
add
xor
aas
sbb
inc
mov
push
sarl
js
sub
mov
call
call
addb
jbe
mov
xchg
pop
xor
scas
jbe
or
mov
push
adc
push
add
call
push
sbb
jge
ja
xchg
jmp
sbb
rcll
adc
cld
xchg
mov
xor
aaa
ficomps
pop
mov
dec
cmp
xor
xor
pop
fadd
pop
dec
push
repz
call
xchg
mov
lods
test
inc
adc
mov
pop
clc
inc
inc
xchg
ret
mov
push
xor
push
sbb
mov
lahf
push
xor
pop
and
or
sbb
je
fstps
call
mov
sahf
add
cmp
hlt
cmpsb
out
add
ds
icebp
adc
andb
or
dec
jne
add
mov
nop
test
push
push
sbb
push
ljmp
adc
xchg
sahf
cmp
push
inc
jmp
test
inc
xchg
ljmp
push
popf
hlt
jg
inc
enter
pop
inc
cmp
ljmp
push
push
cwtl
push
inc
sbb
add
call
push
push
adc
mov
sbbb
inc
adcl
inc
xchg
sub
nop
test
or
or
gs
or
adc
jno
adc
inc
jb
add
add
pop
add
xchg
pop
adc
xor
push
je
push
call
aas
push
xchg
andb
xor
jb
frstor
rorl
mov
pop
aam
mov
inc
dec
inc
inc
adc
xchg
cld
push
push
fwait
lds
inc
mov
xchg
insl
or
test
or
dec
adcl
adc
jb
adcb
dec
lret
std
pop
dec
sbbb
xchg
fsub
xchg
xchg
test
arpl
push
xchg
jbe
je
push
sub
or
push
adc
flds
push
mov
test
sub
nop
sub
xor
rep
das
sbb
mov
popa
push
pushf
ljmp
and
cmp
je
or
or
insb
lock
cmp
adc
sub
push
into
push
push
push
inc
pop
xchg
push
dec
jnp
mov
pushf
jmp
jge
test
pop
xchg
add
cli
adc
adc
nop
or
repnz
xchg
pusha
mov
pop
push
shr
mov
jno
add
cmp
ret
adc
scas
sub
sarb
mov
div
push
loop,pt
ret
inc
sub
mov
push
bswap
into
sub
dec
adc
fildll
add
adc
xor
roll
adc
je
add
inc
mov
lcall
jne
pusha
pop
mov
mov
xor
psrlw
lret
sub
mov
enter
in
add
inc
xchg
xor
sbb
addb
xchg
adc
cmpsb
adc
aad
in
cwtl
sahf
arpl
enter
loope
cmp
outsb
jecxz
or
xor
rol
sbb
and
test
enter
sbb
imul
jmp
call
push
inc
fisubrl
mov
fdivs
jb
push
xchg
mov
in
or
inc
xor
xor
xchg
enter
push
arpl
lea
je
mov
mov
idiv
test
movb
mov
jmp
mov
jmp
mov
mov
inc
dec
sub
lods
add
andb
sarl
dec
sbb
shr
je
dec
je
dec
and
dec
jo
sbb
push
or
ret
mov
and
sub
mov
push
dec
ss
xchg
sub
scas
and
addr16
cmp
clc
push
mov
pop
push
stos
data16
xor
push
rclb
scas
dec
push
call
rep
nop
stos
andl
xchg
mov
sbb
inc
pop
push
mov
add
mov
call
shrb
hlt
jno
adc
xchg
clc
cs
sbb
cld
mov
int3
add
or
cli
pushf
aad
cmp
xchg
lods
dec
mov
notb
adc
push
cs
jne
push
adc
inc
sbb
and
inc
movsb
out
ss
inc
xchg
inc
sub
cs
aas
pop
sub
das
mov
pushf
fsts
xchg
or
sub
mov
pop
in
mov
pop
jp
mov
ljmp
dec
dec
leave
pusha
hlt
or
pusha
lods
xor
jle
and
in
push
cmpsb
and
lock
jne
push
push
mov
push
mov
jle
jge
jmp
xchg
inc
shll
push
push
mov
or
push
dec
movsb
push
fwait
jbe
mov
adc
cmp
jg
xchg
push
sti
jne
cmp
and
inc
adc
inc
xchg
inc
rcll
mov
std
imul
sti
pop
push
push
sbb
mov
cmpb
je
cmp
addr16
movsl
adc
and
adc
inc
cmpsb
jae
cmp
push
add
add
push
jae
lahf
cwtl
pop
pop
add
imulb
jge
xchg
in
mov
sbb
or
add
test
cmc
pop
mov
inc
jecxz
rorb
jmp
adc
sub
xchg
repz
or
dec
push
je
enter
pop
dec
les
insb
xchg
pop
xchg
and
inc
hlt
aad
add
ficoml
fistps
dec
cs
je
jp
fsts
insl
mov
sbb
scas
dec
pop
adc
pop
add
call
cmpsl
xor
cmp
pop
xchg
dec
push
mov
xchg
mov
and
clc
lock
pop
loope
adc
adc
bnd
cmc
cmp
xor
or
loope
mov
or
xchg
jne
adc
mov
jo
inc
aam
call
push
test
mov
in
enter
outsl
sub
mulb
dec
lock
pop
jmp
icebp
insb
or
mov
daa
xchg
pushf
and
pop
sub
es
add
adc
fsub
mov
enter
fldenv
or
cmp
jae
repz
ficomps
xchg
push
mov
sbb
sbb
lcall
aam
mov
enter
int3
scas
mov
pop
lret
adc
sahf
pop
jmp
sub
adc
dec
mov
add
insl
inc
lea
pop
push
mov
enter
mov
push
mov
inc
mov
adc
test
jl
adc
jmp
add
out
push
incl
inc
or
jecxz
incl
xor
jo
roll
insb
push
insl
orl
mov
adc
mov
xor
iret
lcall
je
addb
lret
bnd
cmp
jae
mov
das
mov
incl
push
jle
push
pop
pop
sbb
xlat
call
jmp
push
xchg
xchg
in
push
ds
mov
dec
mov
sarb
jbe
cmp
xor
cli
jl
mov
push
mov
enter
dec
out
xchg
test
and
xchg
xchg
int3
and
call
fsubr
or
push
cmp
xlat
jne
dec
test
jmp
and
mov
adc
cwtl
inc
mov
mov
push
enter
jecxz
inc
mov
fs
cmp
xchg
cmp
xchg
push
push
sbb
outsb
sub
or
push
and
push
and
and
push
sbb
test
sbb
add
lahf
sbb
mov
data16
leave
les
pop
adc
dec
movsw
call
test
shll
insb
lahf
jmp
aam
int3
xchg
push
stos
sub
mov
aam
jmp
mov
xchg
dec
xor
xor
imul
arpl
or
jmp
inc
loopne
sbb
push
add
in
adc
dec
inc
test
call
inc
psubb
mov
pop
addl
dec
push
cmc
xchg
test
dec
sbb
push
push
and
sbb
add
mov
mov
add
cld
mov
push
cld
jnp
push
sub
and
mov
gs
ja
push
xor
add
push
or
push
cmp
mov
test
pop
push
adc
xchg
aam
jne
aad
mov
push
ret
sti
or
cmp
jg
push
mov
test
call
dec
xchg
xor
and
jmp
insl
add
xchg
mov
popf
testb
jmp
mov
adc
int
popl
and
jle
xchg
mov
and
dec
loopne
mov
es
dec
sub
mov
pop
rcrb
and
xor
repnz
and
sbb
push
or
mov
mov
stc
pusha
cltd
je
repz
cmpsb
sahf
cwtl
repnz
mov
dec
bound
call
negl
push
movsb
sub
adc
call
mov
ficompl
jmp
add
call
jb
or
and
pop
lcall
or
jne
cmp
jle
rorl
push
jecxz
loope
push
adc
mov
imul
ret
xorl
add
or
adc
sub
adc
ret
or
ret
je
lret
sar
or
sub
inc
push
mov
xchg
and
and
mov
adcb
pop
pop
inc
mov
rolb
movsb
jmp
and
ret
cmp
cmpb
imul
cmp
jne
inc
xor
sub
pusha
lds
push
or
mov
and
inc
cmpb
subl
jne
inc
push
pop
xchg
inc
or
mov
cmp
mov
dec
add
sarb
lea
mov
mov
cmp
jge
cmp
je
popa
sub
push
cmp
orb
jl
cmp
jg
mov
sbb
cmp
jne
enter
incl
stc
ds
stos
cmp
and
mov
sub
mov
cmp
in
jbe
decl
push
xchg
movsb
add
or
jmp
mov
cmp
or
or
jne
sbb
jae
pop
pop
add
cmp
jne
jmp
inc
mov
inc
in
cmp
shll
scas
fyl2x
sbb
pop
sub
es
cs
push
jb
sbb
popf
push
jne
incl
mov
jmp
add
add
jno
mov
pop
mov
adc
xchg
stos
mov
pop
sbb
aad
cmpsl
add
ret
jne
xchg
cmpsl
push
or
pop
cmpsl
out
lods
pop
mov
rcll
je
mov
movb
mov
std
cmc
push
pop
or
inc
add
ret
inc
and
xor
sub
sub
sbb
inc
adc
xchg
inc
imulb
lods
add
jecxz
pop
in
call
cltd
mov
lods
mov
inc
jle
clc
je
xchg
mov
jl
mov
aam
gs
jg
and
in
xor
mov
jne
add
popf
fdivrs
jns
movsl
shll
jp
stc
push
adcb
inc
cwtl
hlt
cli
sub
aas
mov
or
cmp
gs
shrl
test
loopne
test
mov
cltd
xchg
enter
pop
fsubs
je
leave
test
xchg
sub
inc
lret
jb
jne
cmp
jae
adc
inc
adc
mov
leave
xchg
inc
mov
add
push
cmpsb
sbb
push
mov
pop
scas
cwtl
jo
and
mov
in
and
sub
repnz
dec
jbe
sub
jge
lret
int
rolb
outsl
icebp
xlat
ds
pop
inc
xchg
lods
inc
cmp
mov
loopne
mov
lea
inc
dec
xor
lret
cli
push
or
mov
push
inc
and
jnp
test
mov
mov
cmp
sbb
or
nop
cmpsb
gs
xorb
inc
add
dec
inc
adc
fimuls
add
sub
sbb
adc
pop
cmp
pop
leave
add
xchg
lahf
in
jp
pop
push
sub
adcl
xor
mov
es
mov
inc
push
inc
call
add
clc
pop
jb
sbb
mov
dec
or
xor
out
jmp
leave
add
cld
adc
sahf
rorl
data16
add
lock
cmp
pop
jae
andl
insb
fmull
cmpsb
jo
fnstenv
cmpsl
rorl
adc
or
mov
xchg
mov
push
lret
xchg
jmp
or
xor
adc
push
mov
ret
mov
stos
cli
xchg
std
mov
and
or
cli
test
aas
adc
xor
or
mov
cltd
sub
jl
adc
jp
sub
test
inc
push
push
clc
xchg
clc
dec
lcall
or
push
sbb
cld
cwtl
cmp
sbb
cmp
stc
push
cmp
or
lock
jno
xorb
fiaddl
fcom
sbb
inc
cwtl
pop
mov
test
adc
pop
addb
inc
rorb
lcall
mov
push
addb
cwtl
loopne
or
xor
inc
push
lcall
ds
sub
loop
lret
pop
fsubrs
dec
and
xchg
push
mov
sub
push
call
jb
jmp
cwtl
add
inc
xor
add
dec
mov
xor
nop
jl
and
pushf
arpl
xchg
les
test
in
lock
mov
pop
test
push
xchg
cmp
push
adc
xor
enter
pop
push
es
xchg
jg
in
ds
dec
test
cmp
sub
dec
xor
jle
pop
cmp
cmpb
and
sbb
push
pushf
fs
xor
inc
movb
inc
add
sbb
add
in
inc
or
movsbl
mov
push
inc
call
ljmp
pop
sub
cld
adc
push
dec
push
shrl
or
addb
fmul
jbe
cmp
test
mov
jg
jecxz
sahf
sbb
pushf
pop
jne
adc
xor
popf
cmp
push
je
cmp
je
mov
and
push
dec
fwait
outsb
imul
push
pop
enter
xorb
add
call
andl
inc
shr
in
and
cld
push
test
out
xor
daa
inc
shlb
and
stc
jge
js
mov
ja
inc
pop
or
xor
cmp
mov
stc
mov
push
xchg
xchg
lods
xchg
outsb
ja
xchg
loop
test
xlat
int
jo
push
cmp
out
ret
pop
push
mov
dec
inc
sbb
xor
pop
jp
cmp
mov
cmp
push
dec
push
cmp
adc
add
cmp
jmp
xchg
pop
addr16
cmp
fistpl
stos
dec
insb
clc
sbb
fisttps
xchg
andl
push
call
cmpsb
test
push
je
mov
iret
inc
js
fbstp
xchg
lock
mov
dec
xchg
cld
cmp
or
je
push
enter
pop
cmp
fiadds
and
rorb
push
popa
subb
or
jle
xchg
or
fwait
adc
dec
test
adc
andb
sub
adcb
push
and
cwtl
xchg
xor
xchg
pop
xor
nop
pusha
dec
in
xchg
call
inc
repz
fnstenv
xorl
data16
pop
je
cmpb
xor
dec
jne
inc
push
adc
add
enter
inc
mov
mov
xor
rcl
sub
mov
adc
scas
push
je
mov
dec
sarb
cmp
cmpsl
add
sbb
pop
sbb
test
xchg
jno
fiadds
test
fnstcw
or
add
or
ja
add
push
ljmp
adcl
mov
push
sub
jp
in
stos
rol
test
xchg
cld
mov
pop
pop
dec
inc
je
pop
or
add
test
or
xchg
mov
mov
add
inc
xor
inc
mov
xchg
or
jmp
add
push
or
je
repnz
pushf
loope
fs
jns
cmp
adc
mov
adc
cmpsb
push
loopne
and
xchg
xor
mov
rep
enter
pop
and
faddl
arpl
int3
addb
add
and
push
push
push
jmp
xchg
sub
push
inc
adc
and
push
mov
test
cld
and
nop
inc
dec
call
pop
and
rorl
mov
adc
push
dec
jle
add
lods
mov
adc
cltd
icebp
fadds
adc
sbb
pop
adc
and
sbb
fildl
mov
cmp
loop
inc
or
fisttpl
adc
loope
es
add
xchg
inc
inc
dec
push
mov
sahf
andl
mov
call
test
push
xor
cltd
pop
jecxz
lret
xor
push
addr16
inc
mov
and
mov
test
xor
je
fimull
jbe
sub
movsb
push
adc
jbe
push
in
push
shrl
into
inc
add
sub
push
adc
push
xorb
push
fs
pop
data16
xchg
jo
push
test
je
push
cld
sti
mov
aaa
cmp
sbb
mov
neg
pushf
mov
mov
rcl
cmp
push
push
xchg
movsb
mov
mov
movsl
imul
dec
jbe
and
push
in
push
repnz
xchg
mov
rclb
push
push
cmpb
add
mov
xchg
add
push
inc
call
nop
dec
mov
push
pusha
ds
sbb
enter
cmp
xor
push
dec
pop
bound
fistps
dec
dec
mov
fsubl
or
cmp
sbb
shlb
sbbl
mov
decb
dec
fbld
push
repz
orl
and
cwtl
cltd
test
inc
lcall
push
ja
lea
dec
push
pop
xchg
mov
mov
pop
sbb
sub
adc
pop
pop
clc
into
jne
lock
pop
push
and
int
adc
and
dec
xchg
push
push
push
pop
push
imul
notb
int
aaa
arpl
out
mov
test
fstpt
std
test
enter
mov
push
cltd
add
adc
push
or
add
pusha
and
js
dec
sbb
push
andb
addb
and
sub
adc
push
bound
cmp
sbb
loopne
dec
loope
xor
sbb
je
jo
jbe
je
dec
xor
loope
in
js
push
cmp
sbb
mull
movsb
adc
push
out
sar
inc
out
movl
out
inc
in
mov
jge
jmp
push
xchg
xchg
adc
test
and
nop
or
pop
push
ret
mov
xchg
push
popa
add
lds
je
lds
push
pusha
sbb
or
add
inc
mov
mov
mov
xor
in
xor
mov
cmp
xlat
repz
loope
add
push
ss
sub
pusha
mov
les
mov
in
adc
cltd
imul
add
fcompl
call
in
jmp
or
in
movsb
jae
mov
in
adc
xchg
mov
or
add
cld
mov
sbb
test
andb
cmp
mov
mov
sbb
insb
inc
insl
sbb
add
mov
sbb
and
adc
inc
and
dec
xor
mov
or
mov
xchg
sub
mov
push
sbb
addb
add
js
inc
xor
or
rorb
add
pop
mov
pushf
and
andl
dec
cmp
loopne
std
inc
int
adc
adc
sbb
popa
push
xchg
or
inc
or
std
insb
adc
sbb
and
sbb
mov
and
sub
mov
addb
pusha
cmp
or
mov
test
sbb
addb
adc
in
pop
and
xor
lods
dec
mov
fsub
inc
nop
cmp
faddl
je
movaps
jmp
testb
and
mov
adc
mov
push
add
and
inc
push
mov
hlt
jecxz
push
in
call
inc
adc
enter
xor
push
or
dec
lods
add
lds
mov
or
mov
or
insl
les
mov
and
sub
js
sbb
inc
sbb
pusha
pusha
sbb
or
out
inc
xchg
sbb
add
add
xor
xchg
sub
addb
and
pusha
mov
mov
mov
sbb
push
xor
jo
loop
xor
sbb
or
add
sub
xor
adc
aam
add
inc
xor
mov
lds
mov
iret
add
lock
lock
in
push
mov
sbbl
mov
test
mov
sub
or
sbb
nop
test
push
jl
add
je
sarb
insb
lods
stc
ljmp
push
pop
pusha
push
test
mov
and
push
imul
clc
fadds
or
inc
dec
icebp
pop
mov
add
loopne
ja
mov
loop
mov
rolb
xor
push
dec
push
and
lea
inc
adc
andl
int3
sbb
loopne
push
sbb
or
and
inc
or
loopne
push
or
pop
int3
xchg
test
mov
lock
and
mov
cmp
pop
mov
ret
cmp
repnz
nop
jo
inc
dec
shlb
or
call
inc
js
out
xor
dec
cs
push
xor
jmp
dec
sub
sbb
loope
sbb
add
xchg
loope
pop
aam
mov
add
xor
mov
push
sarb
andl
mov
or
sub
cmp
add
addb
or
xor
or
loopne
mov
mov
cmp
dec
mov
add
mov
lock
cmc
xor
sub
loopne
sbb
mov
int
or
xorb
xor
sbb
call
mov
inc
dec
xchg
mov
xor
shrb
sarb
or
nop
xchg
xchg
or
mov
mov
and
cmp
mov
push
inc
movsb
in
andl
jae
subb
inc
aam
xor
inc
pusha
push
movsb
adc
inc
xchg
adc
add
fistps
repnz
rcll
dec
in
jl
movsl
mov
orb
push
or
addb
roll
andb
pop
mov
cmp
loopne
add
adc
imul
rcll
sub
flds
ret
push
lret
cmpb
aaa
rolb
je
add
push
push
add
dec
lcall
push
mov
push
es
pop
push
cmpsb
mov
mov
push
call
jne
push
lods
adc
jb
cli
leave
push
jecxz
sbb
mov
sbb
pop
xchg
xchg
ljmp
shrb
jns
clc
adc
dec
loopne
push
call
or
add
jmp
xor
mov
xorb
jle
mov
add
or
xor
enter
rolb
jns
add
cmp
dec
xor
cmp
je
push
adcl
cmp
mov
inc
inc
cmp
jl
cmp
dec
rcll
xchg
fs
adc
cmpsb
imul
gs
repz
mov
in
ljmp
adc
clc
sub
push
jae
inc
mov
lods
mov
fisubl
dec
aam
frstor
lock
andl
shrl
mov
fmull
add
or
in
push
test
push
imul
jno
push
sub
add
call
push
push
rol
in
xchg
movl
jg
push
pop
adcl
and
call
mov
clc
dec
and
lds
popa
push
fs
inc
jb
and
sub
lods
mov
push
dec
shrl
cltd
rcll
push
in
in
cmp
inc
aas
ds
mov
sbb
insb
shrb
xchg
movsl
adc
and
es
mov
sbbb
dec
push
rorl
push
dec
add
mov
xlat
repnz
cli
aaa
adc
icebp
lock
gs
movsb
pop
pop
push
addr16
test
xlat
sub
enter
cs
pop
ret
mov
mov
in
sub
sub
sarb
add
lea
add
lods
loop
sub
push
jnp
sahf
je
clc
test
add
gs
std
push
push
push
ss
int
mov
shll
lock
push
and
leave
lea
pop
rcr
push
sub
popa
and
cld
lods
cld
daa
stos
rorl
mov
or
test
add
call
or
mov
pop
sub
push
hlt
jb
test
ljmp
xor
sub
pop
shlb
xor
movb
decl
pop
add
je
je
mov
and
cwtl
mov
adc
jmp
out
add
jge
jo
jb
jmp
popf
mov
mov
dec
xchg
fcoml
and
pop
test
or
adc
jmp
stc
xchg
pop
or
xchg
or
iret
adc
cmpl
push
in
and
adc
addb
fiaddl
popa
push
jmp
mov
cmp
xchg
cmp
push
dec
mov
lret
popa
jo
decb
callw
xchg
dec
sub
xor
movsl
xor
leave
cwtl
cmp
stos
xor
ret
fwait
mov
fwait
std
mov
mov
je
jo
bound
roll
jne
jmp
sub
dec
xchg
rorl
push
push
push
mov
stc
hlt
lcall
das
push
jae
bound
push
sub
in
pop
jne
or
int
pop
dec
jo
dec
repz
call
cs
xchg
jb
pop
push
bound
nop
jne
push
mov
popa
pop
add
loop
cmp
inc
or
or
call
ret
stos
in
aaa
scas
pop
imul
popf
jae
rcll
outsb
jp
xchg
pop
ljmp
xor
push
xor
mov
sub
inc
ja
mov
pop
xchg
mov
xor
aam
adc
adc
sbb
call
std
lcall
jle
call
and
push
sbb
adc
inc
movsl
fmuls
xchg
mov
dec
mov
in
dec
fsubrp
xor
adc
mov
add
push
call
and
cmp
pop
inc
cmp
jl
andb
sbb
sub
rorb
sbb
add
imul
mov
adc
dec
adc
xor
or
cmp
movl
jmp
push
sub
jge
jno
dec
adc
dec
decl
dec
mov
leave
es
sbb
jns
dec
add
test
mov
test
loope
push
push
jle
add
sahf
add
mov
mov
test
cmp
mov
push
sbb
xor
mov
cs
aad
or
aad
popa
and
inc
pmuludq
adc
mov
or
cmc
scas
jo
hlt
dec
jbe
jmp
popf
xchg
pop
mov
popa
mov
sbb
jle
jns
hlt
rolb
inc
pop
lock
jge
aas
and
sub
call
out
in
cmp
mov
fdivrs
mov
pusha
push
and
xor
push
dec
adcl
push
addr16
inc
or
mov
cmp
jge
enter
dec
out
ss
push
cmp
inc
and
clc
fs
lea
ror
cmp
je
inc
lcall
or
pop
loopne
int
insl
dec
pop
push
mov
aaa
mov
push
jg
ficoml
and
mov
push
repz
jecxz
jb
call
ficoms
out
xchg
pop
fisttpl
pusha
sbb
xor
mov
mov
fistpl
push
inc
lcall
das
orb
fisubrl
loop
in
shrl
and
push
mov
mov
add
test
fs
shlb
or
push
daa
mov
ljmp
mov
cmpl
rcl
and
mov
movl
and
pop
push
add
push
subl
pop
push
test
or
mov
add
lret
mov
or
inc
add
adc
lds
xchg
cmpsl
dec
inc
js
sbb
fdivl
and
sbb
sbb
mov
mov
fdivrl
hlt
and
and
repnz
nop
push
jnp,pn
inc
aaa
pop
inc
push
loop
jmp
add
xor
add
bound
bound
or
push
adc
sub
decl
nop
call
xchg
enter
pop
cmpsl
rorb
in
movb
pusha
push
sub
push
pop
adc
rcrb
sbb
cmp
aam
daa
shll
jne
and
rolb
ret
daa
push
sub
jnp
sbb
mov
je
nop
mov
and
std
xor
cmp
mov
cmp
add
sub
sub
clc
push
test
imulb
imul
sbb
rorb
fildll
in
or
aam
or
cwtl
fistl
leave
ret
lret
sbb
jge
or
enterw
movsl
call
xchg
adc
inc
push
push
inc
loop
stos
fcoms
or
pop
aaa
mov
popa
or
sub
arpl
fiaddl
push
arpl
jae
pop
adc
push
mov
adc
jbe
pop
iret
ss
loopne
arpl
sbb
fwait
dec
cmp
test
loope
pop
cld
popa
sub
sub
out
call
pop
int3
xchg
push
cmp
xor
push
call
mov
adc
push
push
sarl
xchg
mov
in
or
push
ret
mov
scas
cmp
cs
cwtl
mov
push
sub
mov
enter
mov
mov
add
sbb
rcll
push
mov
adc
and
sub
pop
mov
pop
xchg
enter
orb
scas
ja
dec
mov
push
inc
mov
jo
or
mov
dec
sbb
cmpb
sub
add
inc
and
mov
push
test
mov
subl
pop
push
enter
mov
sub
mov
or
sub
mov
sbb
pusha
mov
pop
push
and
pop
xor
sbb
rclb
push
es
bound
nop
ret
pop
dec
jl
fwait
jmp
in
xor
pop
sbbl
mov
pusha
cld
cmpl
jl
pop
pop
test
test
jge
nop
fcompl
or
dec
rcrl
out
mov
mov
cmp
and
sbb
or
mov
push
cld
cwtl
push
jne
sbb
push
adc
jb
gs
lea
cli
lcall
adc
jl
xchg
cmp
xor
push
and
fstpl
lock
mov
data16
mov
jno
int3
js
pop
je
lea
andl
out
sbb
loopne
cmp
jge
cld
fadds
cmp
adc
adcl
dec
jno
sbb
fs
ret
rcrl
mov
int3
cld
shrb
loopne
inc
push
xchg
popa
dec
inc
clc
imul
lret
jecxz
add
inc
fistpl
fucomip
inc
sbb
loope
scas
jmp
bound
mov
sahf
pop
mov
mov
lahf
out
xor
sub
pop
jecxz
pop
packssdw
or
add
inc
and
in
aam
orl
pop
mov
and
dec
repnz
push
fisttps
jmp
fcoms
and
gs
scas
pop
or
sbb
pushf
push
xchg
test
xchg
roll
cmp
push
push
sbb
add
call
adc
outsl
lock
push
jns
mov
pop
push
pop
sbb
add
rol
inc
jge
dec
testl
fmul
push
add
xor
xor
lock
or
mov
xor
push
add
dec
mov
sub
lock
add
push
aas
mul
push
fstpl
testb
lods
and
test
xor
push
fisubrs
add
xchg
cmpsl
push
jl
cmp
repz
add
jp
push
test
add
test
call
jmp
andb
pop
ret
sub
and
pop
lods
and
mov
jne
add
ficompl
mov
sti
pop
mov
testb
sub
dec
lock
mov
xchg
cmp
rorl
cmp
add
cmpsb
lods
push
push
sbb
pop
push
pushw
in
scas
xor
xor
daa
mov
in
inc
lock
pop
cmp
stc
push
push
inc
push
lret
fstl
pop
mov
pop
in
xchg
lods
hlt
jle
lea
push
sub
and
aam
std
fstpl
xchg
jmp
dec
rorb
sub
iret
repnz
cwtl
subl
and
je
std
je
cli
into
in
movb
or
jmp
iret
jl
mov
sti
fiadds
pop
push
add
push
bound
xor
clc
nop
dec
or
pop
repz
cwtl
xor
sbb
aas
jb
rcll
loope
pop
or
gs
les
test
cmpsb
sbb
push
lock
shrb
punpckhbw
jno
mov
xchg
push
push
jmp
dec
mov
ret
test
xor
pusha
xchg
pop
ljmp
dec
mov
pusha
and
ljmp
ds
lds
scas
sti
mov
call
mulb
out
adc
pop
lea
mov
sub
cmp
xor
sub
add
movsbl
mov
movb
adc
cmp
pop
add
dec
jns
cmp
pop
je
lret
sbb
or
or
and
ret
cmc
cli
or
adc
push
xchg
pop
fadds
movsb
add
movsb
daa
and
and
push
call
stos
and
inc
xor
pop
sub
aam
rorb
or
sub
dec
inc
sbb
cmp
dec
adcb
dec
cmp
sbb
jmp
xchg
jl
xchg
mov
out
insl
sbb
and
xor
mov
cltd
cmp
mov
xor
xchg
subb
jmp
xor
jns
xor
add
and
xchg
out
nop
push
xchg
pop
and
add
jns
into
xchg
mov
lret
ret
sub
gs
pop
and
push
lret
adc
stc
out
push
pop
in
bound
sub
sbb
popf
pop
pop
scas
mov
xor
mov
orb
and
cli
arpl
sbb
pop
cmp
je
pushf
pop
xchg
dec
rclb
pusha
shlb
adc
adc
inc
mov
push
jo
stc
repz
lock
cmp
mov
sub
andl
mov
add
mov
inc
or
push
mov
mov
mov
cs
loopne
test
dec
push
es
dec
sub
or
cltd
push
xor
mulb
dec
dec
fsubr
push
xchg
cwtl
mov
rolb
and
add
incb
pusha
fs
jne
push
push
mov
inc
stos
mov
cs
test
add
cmp
je
push
call
xchg
arpl
inc
add
cmp
jl
jmp
or
hlt
xchg
ss
bound
push
test
sub
dec
inc
add
jle
addb
leave
addr16
out
add
dec
xor
sub
cltd
push
out
mov
adc
or
and
or
lock
cltd
push
push
call
pop
arpl
adc
pop
inc
push
inc
arpl
test
fimuls
jno
les
arpl
movsl
jne
cld
adc
push
or
add
scas
push
ljmp
and
xor
outsb
push
add
mov
xchg
arpl
mov
cli
dec
and
lds
lds
jl
cld
mov
or
xchg
inc
test
into
sti
push
xor
inc
inc
imul
mov
pop
cmp
dec
mov
icebp
xor
scas
xor
or
or
add
sbb
or
mov
add
fcoml
nop
push
mov
mov
dec
push
enter
add
or
mov
cmp
mov
data16
rclb
xor
inc
and
xor
jbe
mov
or
cmpsb
and
jbe
clc
mov
call
or
lock
in
dec
sub
or
push
scas
cltd
lods
add
dec
mov
stos
xor
icebp
leave
test
cmp
lds
inc
jb
dec
sahf
push
in
push
rcr
xchg
or
pop
or
or
pop
je
add
add
icebp
adc
push
or
add
mov
inc
push
jb
neg
sbb
ret
jge
add
mov
cli
js
xchg
mov
pusha
jmp
xchg
xor
cmpb
je
cmp
jbe
add
xor
mov
push
sub
and
sub
ret
sbb
mov
mov
push
push
cmp
stc
sbb
or
sub
in
fldt
inc
push
jae
xlat
mov
sub
shr
pop
xorl
xlat
xor
fstp
jmp
xchg
loope
movsl
or
ss
and
dec
clc
jne
mov
sub
or
pop
push
nop
xor
cltd
sub
lcall
or
cmp
sbb
jmp
pop
mov
pop
pop
push
adc
adcl
pop
adc
mov
add
push
mov
scas
push
inc
shll
out
cmpl
push
add
imul
xchg
push
sbb
mov
and
xor
add
add
sub
aad
dec
jnp
lods
enter
xchg
xchg
push
icebp
push
call
mov
push
pop
inc
fs
and
repnz
add
ud2
mov
xchg
add
xor
test
dec
pushl
sub
call
stos
dec
xor
das
sub
and
rcll
call
out
mov
sbb
dec
adc
outsl
test
js
inc
dec
insb
jl
adc
adc
adc
dec
inc
jnp
fisttpll
lods
inc
mov
inc
mov
mov
mov
test
mov
mov
or
aad
in
mov
in
push
outsb
loopne
mov
adc
cs
mov
push
and
push
sub
cmp
stos
sbb
push
dec
xchg
cs
inc
add
mov
mov
adc
lock
inc
mov
adc
and
push
call
test
ss
andb
sbb
addl
jle
push
mov
orl
dec
adc
or
data16
jl
xor
mov
adc
pusha
ljmp
add
and
stos
in
dec
in
sub
loop
mov
es
cmpsb
push
inc
lods
inc
xor
shrb
mov
shrl
sti
daa
aaa
enter
call
mov
mov
aam
mov
call
xchg
and
pop
imul
mov
inc
int3
out
lea
jl
inc
cmp
or
or
mov
movsb
and
jns
pop
fs
mov
sub
or
push
sbb
xchg
push
add
mov
inc
adc
or
test
aam
push
inc
jmp
mov
and
dec
inc
adc
pusha
aas
adc
sub
rclb
pop
adc
adc
adc
sbb
add
adc
add
push
sbb
rclb
les
mov
dec
or
pop
scas
xor
and
lods
andl
push
pop
or
subb
or
insl
adc
popa
xchg
sti
and
dec
inc
pop
jg
rclb
test
adc
popa
push
sbb
push
sbb
dec
adc
push
add
inc
dec
inc
adc
adc
or
inc
popa
adc
cld
and
mov
cli
and
sub
in
inc
adc
hlt
mov
test
data16
popa
push
rclb
in
adc
adc
xchg
sub
push
sbb
jno
subb
ret
pop
or
mov
mov
sub
or
sub
pop
jb
addl
nop
push
adc
repz
sub
imul
sub
adc
sbb
mov
scas
sub
push
or
pop
push
pop
sbb
sahf
adc
shrl
test
int3
aam
adc
or
or
mov
adc
push
add
orl
clc
je
add
in
mov
sub
pusha
orb
xor
dec
pop
adc
mov
dec
loope
jmp
in
push
pop
add
mov
push
sbb
sahf
add
push
push
sbb
rclb
test
aad
inc
popa
push
fs
add
mov
pop
inc
dec
inc
ds
push
adc
push
mov
adc
es
jmp
pop
test
or
inc
das
adc
and
sub
lock
ds
lods
inc
hlt
lds
and
adc
ret
push
in
push
adc
dec
insb
test
push
adc
imul
js
popf
loopne
cmp
rorb
dec
sub
dec
mov
andb
dec
xor
mov
arpl
mov
sub
lea
and
clc
push
enter
xor
add
sub
rcrb
cmp
and
cmpl
sbb
pushf
cli
sub
pop
xlat
dec
push
xlat
dec
daa
in
push
xchg
sub
inc
fistl
into
ret
imul
push
pop
jp
mov
ret
int
ret
inc
lods
int3
add
ret
and
pop
or
adc
or
sub
test
sub
loopne
jo
in
call
mov
jmp
pop
leave
push
cwtl
sub
cmp
and
clc
lock
aad
and
mov
scas
sbb
mov
cmp
mov
adc
jl
pop
mov
cmp
idivl
test
xor
inc
movsb
jne
xchg
test
shll
xchg
leave
and
sub
dec
dec
cltd
flds
xlat
cmp
add
pop
cwtl
mov
test
mov
pop
pop
jle
push
jno
cmp
mov
push
sbb
mov
or
add
popf
xor
jo
das
push
mov
adc
lea
rclb
test
js
inc
popa
push
cmp
mov
push
cmp
push
sub
mov
subb
or
or
mov
subb
ret
insl
or
sub
pop
dec
adc
adcb
movsl
and
pop
std
adc
dec
sub
xor
sub
push
add
pop
or
adc
clc
daa
or
or
hlt
push
popa
push
nop
push
xor
inc
adc
popa
lret
adc
mov
mov
add
inc
dec
inc
adc
jl
loop
inc
cld
rorl
push
rolb
dec
inc
jbe
enter
test
adc
test
push
dec
popa
push
rclb
rclb
inc
aaa
ss
and
inc
adc
add
xor
adc
clc
push
xchg
subb
test
adc
inc
dec
jecxz
pop
and
inc
into
into
adc
jne
inc
push
inc
aam
xchg
test
or
cmpsl
jnp
adc
popa
push
shlb
jge
adc
adc
test
sub
push
push
sub
orb
movsl
jae
sub
mov
add
mov
push
cmpsl
xor
and
adc
popa
push
pusha
ljmp
aad
xchg
sub
jecxz
sub
into
inc
adc
add
inc
dec
adc
sub
inc
popa
call
mov
cmp
push
add
inc
dec
inc
adc
jb
adc
popa
push
rcrb
sub
and
or
adc
sbb
inc
popa
jo
fwait
sbb
dec
outsb
sbb
xchg
enter
out
adcb
and
adcl
mov
mov
xor
push
adc
xchg
test
inc
and
outsb
jmp
add
lahf
mov
mov
xor
cltd
cmp
cmpsb
push
adc
push
sar
lahf
lods
data16
cmp
mov
stos
fdivr
mov
call
sub
cvtpi2ps
fldcw
inc
fisubs
and
xor
inc
aaa
jle
lds
or
inc
pop
jne
mov
fstpt
mov
into
xchg
shrb
gs
lcall
sti
jne
outsb
ja
inc
hlt
mov
je
mov
getsec
jmp
add
mov
dec
xor
or
pop
or
hlt
and
xchg
enter
and
mov
dec
fiadds
mov
or
pop
or
int3
inc
sub
fcmovne
test
test
inc
imul
jecxz
scas
cmp
lea
sbb
push
cmp
fwait
sbb
push
cmp
cmp
dec
adc
push
and
mov
sub
xor
ds
mov
sub
inc
dec
mov
cwtl
xor
ret
mov
sbb
lock
dec
sbb
daa
test
js
popa
xchg
addb
inc
adc
cmp
pop
xchg
inc
cmp
adc
ss
push
jo
adcl
cmp
sbb
es
jp
and
adc
adc
cmp
adc
and
cmp
movsb
lea
lcall
fsubp
adc
adcl
je
in
inc
mov
mov
adc
gs
pop
mov
mov
arpl
or
les
dec
xor
push
jge
dec
adc
callw
movsl
jp
es
xor
fldt
xchg
pusha
sub
inc
push
fdivl
mov
ds
stos
xchg
incl
push
sub
dec
icebp
outsl
push
orb
ljmp
cltd
imul
lret
xchg
jnp
enter
ja
dec
test
mov
push
das
insl
loop
push
jbe
loopne
push
lds
inc
adc
mov
add
pop
cmp
pop
push
xchg
daa
lock
xor
mov
push
sbb
pop
push
mov
shrb
stc
push
mov
outsl
sbb
repnz
jmp
enter
add
lock
push
pop
push
pop
cmp
jbe
mov
and
call
int3
push
cld
mov
inc
mov
pop
add
pusha
orl
jbe
dec
xor
je
mov
inc
fmuls
push
out
push
dec
test
jmp
mov
scas
jecxz
enter
enter
mov
sub
popf
jne
push
popa
jnp
xor
fs
pop
lods
adc
sbb
mov
jge
je
cmpb
je
mov
ret
iret
mov
push
dec
add
testl
dec
das
dec
jmp
js
idivb
faddl
mov
nop
jmp
cli
gs
push
jae
sub
dec
nop
dec
sub
fldenv
mov
and
test
add
adc
aad
inc
hlt
xor
je
xor
or
add
push
setne
inc
inc
decl
inc
in
push
add
push
sti
pop
mov
jle
push
movb
scas
insl
and
rcl
incb
dec
seto
jl
adc
xor
test
or
shlb
inc
sbb
xor
addr16
rolb
xchg
enter
or
inc
subl
or
cmp
or
in
inc
and
inc
test
popf
cmp
cwtl
adc
inc
pop
mov
jecxz
neg
jg
loopne
inc
add
jns
push
nop
lock
sbb
xor
ljmp
sahf
add
jge
nop
popl
stc
and
or
fwait
in
lods
call
and
push
or
and
xchg
mov
les
xchg
fisttpll
pop
cmp
adc
fcoms
hlt
adc
mov
shll
cmp
push
add
lahf
pop
pop
jo
cmp
test
fnstenv
test
and
iret
sbb
cltd
pop
jg
xchg
aad
pop
dec
mov
repz
jo
dec
clc
inc
clc
xchg
out
adc
lcall
jmp
ss
mov
shll
and
inc
sub
aaa
icebp
pushf
add
rorb
inc
cmc
insl
jmp
add
dec
test
dec
fsubl
dec
int3
inc
es
loope
push
jmp
sbb
xor
xchg
mov
inc
and
outsl
add
mov
movsl
imul
and
xchg
test
xchg
push
int3
call
pop
adc
xor
cmp
xchg
and
xor
push
insb
cmc
enter
icebp
ljmp
adc
pop
push
popa
loopne
or
mov
adc
test
push
jns
add
test
imul
push
dec
jo
jle
sub
arpl
lds
into
xchg
loope
push
adc
dec
into
pusha
or
inc
cld
push
call
mov
insb
inc
jo
pushf
sbb
fisubs
fimuls
xor
in
jne
push
sbb
js
das
inc
add
push
mov
and
xchg
mov
dec
jle
sbb
rcll
imul
pop
push
mov
les
or
fadds
and
jge
dec
inc
dec
rcrb
into
and
inc
pop
test
and
adc
add
dec
add
jmp
and
or
mov
dec
fisttps
out
adc
cmp
add
dec
push
sub
sbb
rcll
jmp
pop
mov
lods
subb
and
jge
xor
pop
sbb
xchg
ficoms
jg
xchg
fwait
xchg
push
in
inc
adc
mov
dec
push
or
in
or
mov
adc
push
dec
dec
inc
push
mov
cmc
dec
mov
jmp
push
and
dec
loop
mov
inc
dec
add
sbb
adc
mov
daa
fsubr
adc
xchg
push
mov
pop
xor
lretw
cs
dec
addr16
jo
popa
jmp
mov
xor
pop
call
pop
jns
outsb
mov
sub
in
jne
adc
cmp
mov
mov
pop
adc
sbb
add
dec
orb
add
push
and
or
adc
dec
add
or
in
sbb
adc
fs
dec
mov
loope
mov
sarb
xchg
movsl
adc
mov
jbe
call
adc
and
push
push
jno
clc
sub
and
push
jno
cmp
dec
cmp
cmp
mov
inc
xorb
adc
mov
cld
mov
sub
dec
add
fcoml
std
mov
std
xchg
addb
pop
xchg
nop
or
lds
je
mov
test
test
jmp
sbb
jecxz
cltd
cmp
push
add
dec
and
sub
jp
jge
dec
dec
push
jmp
jb
and
cmp
fwait
loop
fs
xor
cmpsb
cmp
push
push
dec
mov
sub
xor
dec
adc
push
pop
add
rcl
xchg
mov
inc
jmp
dec
or
ret
inc
mov
push
mov
adc
sbb
adc
sbb
pop
add
adc
les
push
dec
pop
push
mov
or
inc
pop
cmp
push
or
fidivrl
sbbl
add
jne
fcmovbe
adc
out
push
mov
int3
inc
icebp
in
nop
push
sub
sbb
ret
inc
mov
cwtl
jmp
xor
mov
push
call
mov
sbb
add
jbe
adc
sub
or
dec
push
jo
pop
dec
and
fwait
mov
xlat
setns
and
enter
cwtl
fisttpl
es
xor
shll
dec
and
or
shrl
fcom
stc
sti
or
nop
jmp
out
and
sbb
call
and
mov
pop
xor
cmp
fisubl
dec
xor
ret
add
inc
xchg
mov
mov
test
fiaddl
nop
add
xchg
sub
and
ret
and
pusha
mov
in
push
mov
jmp
mov
cld
push
and
inc
mov
inc
adc
aad
mov
sub
pop
adc
jno
xor
xor
adc
mov
push
dec
xor
stc
cmp
mov
mov
and
call
popa
daa
xor
daa
or
or
pop
inc
fidivl
pop
inc
int3
lods
mov
mov
or
mov
pushf
xchg
dec
or
je
mov
add
push
orl
cld
pushf
xchg
or
sub
lahf
loop
in
cmp
mov
out
or
rcrb
xchg
add
daa
lods
and
push
xchg
push
dec
adc
sbb
shlb
fs
add
cltd
mov
or
dec
or
pop
push
mov
push
fnsave
or
dec
jae
test
inc
push
pushf
movsb
and
inc
test
and
mov
insl
pop
mov
or
js
jo
or
inc
mov
dec
mov
jne
sbb
mov
insb
pushf
sub
es
adc
push
or
das
add
sub
sub
mov
jecxz
mov
cmpsl
or
fmull
mov
xor
lcall
cmp
mov
and
lds
test
data16
adc
and
add
clc
inc
cmpb
in
sub
jl
popf
movsb
xlat
popf
xchg
std
movsl
push
sub
mov
rolb
xor
sub
push
call
mov
adc
stos
xor
mov
cmp
jmp
cmp
sub
sub
jmp
sbb
movsb
loope
xchg
ds
mov
jo
and
mov
xchg
adc
pop
or
lret
add
sti
cmp
mov
cmp
dec
sub
jmp
cmp
enter
sub
push
sbb
mov
test
or
pop
jmp
inc
inc
mov
inc
sti
je
mov
mov
adcb
or
add
adc
jmp
lret
xor
andb
jbe
clc
in
fsubl
inc
mov
jbe
loopne
sbb
mov
dec
dec
mov
ret
xor
push
call
in
xchg
cmp
orb
loop
sbb
or
jl
lea
and
adc
inc
leave
adc
outsb
pop
xlat
roll
or
push
sbb
push
and
data16
not
push
cmp
scas
pop
push
sbbb
aam
dec
pop
adc
in
adc
call
lock
ror
sbb
push
push
insb
repz
ss
dec
sbb
sbb
inc
sbb
and
test
sbb
push
mov
in
or
loopne
test
xor
ljmp
lods
cmc
iret
add
popa
mov
jbe
add
ret
roll
call
inc
cmpsl
jmp
es
ss
cmp
jecxz
pop
sub
test
and
bound
xchg
cmp
clc
add
pop
and
rcll
xor
pop
or
push
push
add
and
les
xchg
and
mov
add
mov
inc
subb
or
rolb
cmp
roll
xor
cmp
pop
pop
inc
pop
jne
add
sbb
aas
xchg
sub
mov
xchg
lds
inc
sbb
sub
push
pusha
subb
adc
jne
jmp
mov
movsb
sub
cltd
hlt
xor
or
dec
pop
lret
arpl
mov
push
pop
sub
jecxz
mov
mov
mull
adc
lea
adc
push
cwtl
shrb
add
adc
and
jo
stos
inc
add
je
push
fdivrl
into
cmp
push
fs
adc
daa
movsb
es
or
and
or
sub
jmp
cmp
lods
test
mov
xchg
push
in
and
dec
xchg
dec
xor
pop
insb
wbinvd
pop
add
mov
and
xchg
add
out
xchg
mov
add
dec
and
fs
call
andb
jne
jg
and
inc
mov
ret
xor
jmp
addb
cmp
cmp
sbb
cwtl
cmc
xchg
xor
movsb
pushf
inc
jge
and
mov
hlt
or
mov
sub
outsl
mov
test
out
shll
cltd
cmp
sahf
jnp
add
xchg
pop
mov
fiaddl
pop
mov
repnz
ds
mov
mov
movsb
lea
test
in
gs
lods
inc
cmpb
loope
popa
fsts
mov
cmp
fsubl
stc
mov
shl
hlt
fsub
push
cmp
rorl
ret
sbb
out
mov
ret
loopne
les
outsl
jl
jmp
std
xor
pop
popf
in
dec
imul
inc
push
fwait
xchg
add
inc
or
adc
inc
enter
inc
sub
add
je
stc
jmp
inc
mov
jb
lret
cmp
andl
or
sub
fwait
xor
loop
fsubl
cmp
nop
jns
ret
data16
dec
sub
lret
jno
sbb
push
push
or
fldenv
adc
xchg
pop
xchg
mov
and
pop
dec
add
add
dec
mov
test
sbb
adc
and
pop
pop
pushf
cmc
cltd
in
or
cli
add
xor
rcrb
cmp
push
push
mov
add
and
cmpsl
push
into
int3
cmc
dec
mov
and
outsb
fldl
xor
addb
stc
orl
outsb
lods
mov
mov
loop
aaa
pop
jbe
loop
sub
push
stos
mov
daa
add
sub
clc
xchg
movsb
dec
scas
inc
lea
ret
adc
mov
dec
mov
call
mov
or
in
fmuls
mov
stos
sub
jmp
dec
or
stos
push
push
ret
test
and
sbb
push
xchg
or
pop
mov
push
pop
stc
movsb
or
lret
inc
push
jns
arpl
roll
loop
adc
repz
mov
pop
mov
add
aaa
and
in
dec
pop
push
push
lds
call
xor
stos
neg
mov
mov
orb
pop
dec
ja
sub
cli
mov
mov
inc
pop
and
or
push
call
lcall
loopne
cmp
or
ret
xor
into
xchg
out
rorb
out
in
cmp
mov
and
and
pop
cltd
fldenv
jb
repz
add
xchg
sbbl
jns
xchg
iret
xor
and
jo
scas
mov
dec
sbb
mov
add
movsb
adc
hlt
push
cs
xor
das
xor
jne
loopne
dec
dec
cmp
subl
mov
js
mov
fsubl
push
jl
mov
push
pusha
xor
nop
inc
pmuludq
pop
jne
push
sbb
jne
lret
push
js
mov
sub
cmpsb
or
movsb
subb
and
push
fwait
inc
js
push
xchg
test
push
cmp
aas
loope
push
xchg
xchg
call
pusha
jp
add
xchg
inc
and
mov
mov
popf
mov
ljmp
and
pop
idiv
push
push
mov
test
shr
jb
add
pop
pop
mov
into
cmp
data16
push
cmp
mov
push
push
repnz
adc
mov
fiaddl
rclb
push
sbb
push
push
xchg
sbb
sub
or
and
pop
ja
jb
cmp
ja
fs
push
call
or
lock
pop
test
add
add
push
push
inc
adc
mov
adc
and
and
and
and
push
sbb
or
add
sub
add
shll
xor
xorl
mov
out
add
pop
fidivl
js
sbb
movsb
mov
in
call
stc
call
sbb
imul
sbb
rcl
movsb
cmp
das
lods
cmp
push
lcall
clc
inc
fsubr
cmpsl
roll
inc
push
cmp
inc
add
out
int
xchg
stc
stos
shrl
add
in
jecxz
insl
push
std
mov
inc
and
mov
sub
xor
xchg
dec
adc
je
sbb
fdivl
jo
imul
scas
mov
pushl
lock
lods
or
push
bound
adcl
les
xchg
xchg
jns
pop
mov
int3
clc
inc
mov
or
jb
push
push
and
mov
xor
dec
hlt
mov
andb
movsbl
push
push
sti
or
add
andb
and
sbb
hlt
clc
sub
mov
in
push
and
bound
jo
mov
sahf
and
push
push
add
js
imul
add
cld
lret
ljmp
repnz
pop
pop
adc
xor
imul
sub
faddp
pop
mov
add
push
fisttpll
dec
mov
xchg
xor
xor
jns
add
mov
int
or
jmp
pop
inc
adc
add
shr
add
inc
sub
push
inc
sub
add
cmpsl
push
or
mov
das
jo
dec
mov
mov
mov
mov
addb
adc
cmpb
ret
cltd
adc
adc
stc
push
add
sub
adc
add
addb
in
and
mov
xor
or
sub
ret
or
incb
das
cwtl
sub
fistpll
add
inc
add
pop
test
xchg
jmp
push
cs
mov
adc
or
or
push
call
inc
loopne
add
sub
xor
loope
mov
cmp
int
xor
nop
xchg
adc
cmpsb
lea
fisubrl
or
jmp
adc
xor
imulb
aas
inc
jp
lret
nop
add
lret
jmp
insb
dec
cli
jne
out
ffreep
fwait
repnz
add
loop
call
push
jecxz
loop
movswl
push
mov
xor
or
mov
adc
add
lret
dec
or
adc
cmp
push
jne
sbb
sbb
xor
push
inc
add
daa
mov
push
aas
and
leave
call
cmpl
dec
fdivs
int3
call
adc
sub
pop
call
cwtl
push
and
and
clc
mov
sbb
or
bound
dec
and
fdivs
aas
cmp
pop
mov
in
cmpsl
lahf
lcall
adc
xor
adc
pushf
lock
push
jne
jl
xchg
and
lds
pop
movzwl
mov
pop
jae
ljmp
int
jo
sbb
je
sub
push
push
mov
xchg
adcl
nop
mov
xlat
push
cmp
cmp
or
dec
mov
pop
idiv
cmp
mov
orl
or
xchg
loope
sub
cmp
mov
and
adc
adc
sahf
pushf
dec
sub
and
test
test
xor
inc
mov
pop
test
test
sub
xchg
inc
je
sbb
jmp
call
sbb
pop
bound
xchg
adc
pop
mov
cmp
sbb
sub
xchg
inc
and
cmp
les
lods
sti
std
sub
fldenv
insb
sub
dec
cmp
popl
scas
xchg
pop
lea
mov
movl
push
popf
pop
mov
adc
jae
inc
fstl
sti
bound
fstl
jno
inc
mov
filds
mov
je
add
inc
adc
jb
mov
fs
sub
insb
add
test
mov
sub
cmpl
mov
int
jmp
fadd
mov
mov
jbe
ficoms
ret
xchg
fdivl
or
inc
and
pop
add
sub
popa
faddl
movsl
sub
xchg
jmp
imul
outsb
push
and
mov
rolb
xchg
adc
enter
movsl
movb
pop
xchg
movsb
aaa
mov
jmp
mov
mov
cmp
push
push
mov
push
and
dec
and
jge
lret
mov
outsb
jb
pop
push
mov
add
sub
push
rorb
cmp
test
in
test
dec
inc
dec
lods
add
mov
jne
cli
mov
jecxz
aaa
mov
mov
push
push
mov
ss
nop
mov
add
or
popf
pushf
push
push
or
in
jg
xor
add
imul
xor
in
hlt
mov
les
mov
imul
adc
test
xchg
lods
ljmp
xor
xchg
or
inc
inc
test
or
movb
loope
xor
push
bound
imul
les
xchg
movsb
jp
jnp
pop
sarb
inc
push
jne
sbb
push
mov
ret
call
xor
push
call
and
nop
rcll
leave
repz
xchg
sub
movsb
leave
mov
pop
repz
push
push
or
xchg
test
shl
out
jne
mov
push
daa
ret
cld
lahf
mov
jmp
jno
push
adc
fstps
mov
sub
jnp
sbb
fsubr
sahf
imul
imul
pop
mov
rorl
dec
je
xor
mov
daa
lods
sbb
paddusb
lret
and
mov
syscall
ja
inc
rolb
das
rcr
insb
add
jmp
push
mov
push
xor
out
insl
jo
mov
andl
adc
and
faddl
cmpsb
and
fsubl
jp
push
mov
lock
das
jnp
outsl
loop
lock
push
sub
add
shll
inc
push
and
fnsave
push
mov
adc
xor
xchg
leave
add
insb
jns
sbb
mov
or
repnz
jne
push
jl
xchg
push
sbb
ds
xlat
ljmp
xor
mov
mov
imul
mov
fistpl
jle
hlt
aam
insl
jge
mov
mov
aaa
movsl
pop
das
popa
test
icebp
cmove
out
mov
xor
mov
mov
pop
sub
or
nop
mov
pop
data16
into
lret
dec
aad
mov
pop
push
sub
pop
mov
pop
insb
or
outsb
or
ret
jl
sar
push
incl
add
fwait
push
cltd
aaa
push
inc
repnz
dec
je
idivb
inc
cld
cmp
adc
idiv
cmp
xor
push
loope
jmp
lcall
loopne
loopne
orb
jae
cmp
or
push
add
add
roll
and
ret
inc
and
or
mov
call
inc
je
sbb
sbb
mov
in
add
fsubs
jnp
dec
xchg
ror
adcb
sbb
call
mov
fwait
cltd
jl
sbb
or
adc
mov
mov
aam
mov
push
mov
push
test
mov
dec
cmp
mov
jo
push
mov
addb
adc
mov
out
shlb
or
and
or
mov
pop
push
sbb
push
rol
cwtl
mov
mov
das
dec
dec
pop
push
or
test
xchg
or
stos
lods
fnstsw
jbe
sub
shrl
xor
fisttpl
jge
movzwl
adc
ljmp
push
gs
in
mov
iret
sub
xor
in
gs
out
call
and
jle
push
addr16
movsb
popf
adc
lock
adc
pop
pop
iret
push
mov
push
xor
ret
mov
and
cld
je
pop
adc
scas
clc
push
mov
mov
xor
cwtl
mov
jne
sbb
mov
sbb
sbb
push
or
fdivrl
jo
xor
loopne
inc
rcll
and
push
add
jl
mov
shrb
add
orb
test
mov
sub
cmp
add
shlb
mov
mov
add
xor
xor
add
test
add
cld
pop
test
je
test
je
test
iret
dec
jmp
sub
jmp
add
jno
push
loope
add
test
or
adc
jmp
mov
inc
xorl
inc
dec
je
jmp
cmpl
or
pop
pop
xor
add
cvtdq2ps
ret
outsl
faddl
adc
pop
inc
adc
rorb
nop
mov
add
inc
push
add
rolb
adc
mov
jno
xor
pop
cmpl
push
add
imul
xor
mul
test
xor
outsb
lea
fcomp
and
mov
into
pop
jl
xchg
aam
into
ret
xchg
pop
pushf
pop
and
fbld
std
mov
adc
es
clc
adc
add
rcll
and
sub
mov
pop
rcr
ljmp
lds
call
push
pusha
or
and
push
loop
adc
pusha
or
loopne
pop
mov
inc
jmp
mov
or
fimuls
xchg
cmp
cmpl
mov
push
mov
pop
pop
pop
jmp
jg
xor
incl
dec
mov
mov
arpl
pop
push
add
sbb
imul
call
xchg
or
mov
add
cld
je
push
outsb
push
jb
cmp
lahf
or
cli
mov
mov
pop
xchg
shlb
sub
jecxz
inc
sbb
insl
or
jmp
mov
stos
lds
mov
insb
fcompl
sbb
scas
jae
add
and
or
jl
int3
inc
cltd
lahf
es
add
ret
out
mov
outsb
in
or
pop
popa
pop
jne
jp
mov
test
push
dec
cmpsl
outsb
lret
xorb
nop
add
cmp
jbe
cmp
jb
push
mov
and
jne
cmp
jb
and
sbb
inc
add
mov
sub
jb
push
mov
xchg
test
fmull
repnz
lods
faddl
and
inc
insb
shl
sahf
and
mov
loopne
sahf
add
mov
ds
lret
or
pop
lea
mov
add
push
adc
inc
inc
inc
push
in
sub
cld
hlt
in
or
aam
aam
int3
pop
jne
mov
in
push
pop
jne
call
pop
jne
lock
pop
jne
pop
hlt
clc
add
cld
cld
lea
add
lock
push
and
pushl
cmp
and
push
push
inc
or
sahf
mov
shll
mov
or
fbld
push
cmp
lea
cmp
xor
dec
and
push
sbbl
std
cld
mov
pop
mov
pusha
mov
push
stos
sar
sub
fnsave
enter
imul
add
sub
pop
add
fidivs
mov
fcoms
push
push
out
add
and
rclb
and
loop
out
jbe
out
xchg
loopne
lret
inc
sbb
je
aam
or
or
inc
xchg
cmpsl
fisubrs
sbb
test
cmp
sbb
cmp
cmpl
adc
cmp
add
pop
mov
aas
mov
lea
inc
fsubr
fisubrs
jge
lods
xchg
loop
fadds
mov
inc
cmp
and
pop
or
lret
in
fmulp
or
daa
add
decb
add
shrl
nop
adc
add
adc
add
pop
xor
pop
add
lock
and
xor
add
int
inc
call
sub
sub
ret
adc
push
pop
xor
pop
js
or
repnz
push
mov
sbb
inc
or
shll
add
mov
mov
lret
mov
je
rep
push
fstl
call
std
int3
push
cmp
lea
sub
sub
xor
jae
mov
mov
mov
aam
add
ret
inc
or
cmp
adc
mov
mov
add
das
inc
inc
data16
pop
ret
pushl
sub
sub
push
insb
sbb
loopne
and
cwtl
and
sbb
jne
or
push
cmp
xor
mov
mov
dec
scas
cmp
cs
cmp
inc
or
push
call
jb
movsl
call
mov
lea
and
jmp
push
pop
add
push
inc
pop
mov
shr
xchg
inc
push
push
mov
add
loop
lods
and
scas
popf
or
lret
jne
xchg
stc
mov
pop
or
aaa
cwtl
mov
je
imul
cmp
jae
fs
or
je
aas
or
mov
push
pop
inc
jmp
lods
pop
add
fistps
fidivs
frstor
cmpl
pop
push
mov
and
and
out
push
call
mov
pop
jle
jle
push
mov
push
and
push
dec
lock
call
adc
or
enter
js
sub
add
push
dec
or
cmp
clc
clc
fcompl
movsl
rorb
sahf
jne
imul
mov
clc
and
ret
and
and
ret
call
jo
dec
jne
or
xchg
jo
mov
and
inc
fnclex
ret
ret
mov
out
repz
in
cs
push
push
push
push
inc
pop
push
das
orb
pop
xchg
cs
push
pusha
cmp
adc
hlt
fstcw
fwait
cmp
cld
fldcw
fistpll
cltd
adc
hlt
mov
mov
dec
data16
int3
pop
dec
int
lock
or
test
sbbb
sbb
and
bound
add
inc
aam
xor
mov
or
inc
loop
mov
add
push
fsubs
mov
jns
xchg
jmp
or
pop
pop
xchg
mov
add
push
lds
push
mov
adc
mov
leave
repz
add
imul
cs
inc
std
scas
or
adc
clc
mov
dec
cmc
cmpsb
cwtl
in
add
shlb
push
push
jne
cld
insl
dec
inc
dec
or
movsl
adc
mov
lret
inc
loop
cmp
gs
hlt
mov
enter
inc
mov
movsb
lcall
in
xor
push
pushf
mov
sbb
jns
in
cmpsl
pop
sbb
cld
adc
and
sarb
and
adc
dec
xchg
adc
xchg
in
adc
pop
sub
sbb
jne
push
and
clc
stc
push
into
mov
dec
mov
sahf
neg
fcomps
or
test
xchg
or
fiadds
pop
xchg
aam
inc
mov
lods
pop
mov
adc
int3
add
je
jbe
popf
xchg
fcoms
into
or
pop
and
in
stc
and
push
movl
mov
pop
push
adc
adc
mov
xor
out
and
lock
js
add
mov
jb
sarl
add
imul
arpl
mov
imul
dec
ja
mov
jle
scas
cld
jl
or
popa
add
dec
lea
cmp
repnz
dec
addl
dec
or
or
cwtl
dec
xchg
jge
dec
adc
test
inc
mov
add
inc
or
or
lock
int
pop
out
pop
cwtl
pop
clc
pop
sub
dec
aaa
push
push
subb
test
inc
xor
pop
add
push
cwtl
in
sub
cli
adc
mov
push
push
inc
clc
add
sbb
push
push
push
xor
cmpsl
ss
and
mov
adcb
cmp
je
lea
sbb
or
or
mov
lods
jl
adc
lcall
jmp
push
pop
cmp
popl
movsl
sbb
movsl
int3
or
hlt
and
cs
push
or
icebp
imul
or
inc
add
imul
ljmp
push
push
leave
mov
insb
dec
sbb
lds
dec
mov
xchg
mov
mov
jp
jno
jb
das
push
std
adc
pop
and
movsb
xor
xor
rolb
dec
jmp
pusha
call
xchg
jmp
and
pop
add
dec
repnz
mov
icebp
aas
push
push
or
and
push
push
sbb
or
dec
push
push
cld
call
add
dec
dec
xor
sub
and
and
clc
les
nop
ljmp
adcb
nop
clc
sbb
jmp
jl
xor
es
push
into
adcb
aam
or
xor
inc
or
sbb
ds
xor
ds
push
stos
mov
clc
les
add
add
ret
test
addb
adc
sbb
add
repnz
fildl
cmp
pop
jae
push
call
mov
popa
jb
movsb
jne
ret
sub
mov
or
mov
leave
sub
or
add
stos
mov
test
dec
ret
cwtl
push
addb
je
jne
push
call
mov
cs
addr16
jmp
stos
test
je
subb
cmp
call
cmp
movsb
movsb
push
add
jbe
call
xchg
sbb
gs
fildl
sbb
mov
fstpl
xor
add
jge
imul
and
jbe
mov
test
xor
lock
or
jb
push
out
inc
adc
sbb
rcll
or
notl
mov
jb
cltd
pop
mov
sub
sub
sbb
add
add
mov
pop
loopne
push
dec
cmp
jb
mov
je
clc
fbld
subb
push
push
mov
mov
pop
lods
xchg
aaa
sub
jmp
aas
sub
adc
mov
inc
push
lods
push
xor
test
std
xor
orl
jmp
fimuls
mov
jnp
sub
in
gs
lret
movsl
cmpsl
cmpsl
push
sub
mov
and
out
faddl
mov
and
pop
repnz
pop
jno
mov
fsubl
push
pop
test
je
and
das
add
adc
adc
adc
les
mov
adc
dec
push
or
dec
enterw
or
jecxz
dec
push
mov
or
or
mov
testl
scas
neg
add
mov
outsb
fistpll
repz
mov
inc
pushl
into
rorb
dec
dec
not
pop
jo
sahf
sbb
lock
imul
xchg
test
or
pop
lahf
add
xchg
std
andl
jo
xchg
test
add
or
les
cmp
or
je
roll
push
call
adc
sub
add
add
mov
add
lcall
sub
std
nop
shl
inc
ret
xchg
scas
sahf
fs
inc
xchg
adcl
inc
loopne
mov
push
push
jnp
ror
test
mov
addb
mov
call
push
and
adc
pusha
scas
adc
into
push
and
mov
inc
adc
add
push
fnstcw
aad
pop
cmp
repz
lods
mov
mov
pop
outsb
cmpb
les
push
cld
mov
mov
mov
cwtl
orps
mov
lea
cmp
jb
mov
sub
cmp
jae
pop
push
dec
xor
push
test
lea
test
pop
inc
dec
dec
and
pop
cmp
adc
jmp
sub
xor
mov
push
or
push
popa
adc
lret
icebp
clc
hlt
addr16
out
lret
jmp
mov
add
test
shr
rcr
or
jne
imull
mov
mull
add
add
jb
cmp
jb
cmp
add
mov
pop
push
loop
mov
sbb
inc
adc
fs
ret
test
xchg
test
sbb
inc
jno
xchg
adc
pushf
lods
or
or
sbb
xchg
sub
neg
add
or
fadds
or
scas
lret
push
inc
and
inc
sbb
mov
adc
rorl
movsb
sbb
fcomps
sbb
xchg
rcrl
sbb
inc
push
movsl
fcoms
and
rcr
mov
or
sbb
sub
movsl
and
dec
jne
pop
pop
adc
jp
insl
inc
push
stos
std
test
push
mov
je
test
or
push
inc
inc
dec
inc
add
mov
cmp
jne
mov
mov
xchg
xchg
cmp
ljmp
jecxz
or
adc
ljmp
dec
cld
mov
lods
das
lret
inc
adc
cmc
jne
adc
inc
popa
add
inc
sbb
pop
inc
xchg
jb
mov
mov
mov
ret
lret
dec
out
jne
cmpsb
push
push
adc
inc
jne
cmp
dec
adc
xchg
xor
pop
fdivrl
mov
pop
jle
xchg
jo
ss
jmp
inc
pavgb
pop
inc
das
mov
das
rcrb
cmc
add
shrb
sbb
jmp
adc
aam
mov
mov
nop
dec
pop
test
and
jp
je
mov
je
and
xor
xchg
mov
cmp
je
cmp
or
add
pop
mov
cmp
jne
jl
movl
or
enter
inc
mov
lds
sbb
mov
or
lods
dec
pop
xchg
call
in
stc
jo
movaps
sub
loop
or
push
mov
loope
mov
dec
lods
sbb
ret
push
pop
xor
pop
mov
aaa
jae
dec
adcl
cmp
nop
adc
and
inc
cmp
jbe
jmp
imul
roll
icebp
mov
sbb
sbb
iret
add
test
mov
shlb
jb
int
jmp
add
and
mov
sbb
jne
subl
jp
add
pop
call
jne
cmpsl
mov
testb
and
jmp
dec
sub
pop
xor
sbb
lea
daa
enter
push
mov
outsl
mov
loope
jle
inc
mov
mov
xor
repnz
dec
pop
ret
in
loop
in
lds
pop
addr16
ficoml
mov
int
lods
mov
inc
jmp
test
out
aaa
sub
gs
incb
nop
pop
xor
xchg
xor
pop
sub
cmp
pop
inc
shr
iret
cmp
arpl
xor
in
mov
jge
mov
dec
pop
js
add
add
sar
loope
pop
mov
dec
ret
cmp
ja
or
idivl
or
sub
jle
cmp
mov
and
sub
test
leave
add
mov
mov
sar
pop
mov
add
cmp
inc
fiaddl
je
mov
cmp
jae
cmpb
ljmp
jmp
jns
enter
jnp
sahf
jmp
gs
mov
and
or
out
push
jl
xor
jae
push
xchg
fdivl
xlat
ret
sub
sar
pop
or
push
xor
add
sub
test
inc
push
dec
lods
loope
pop
jl
int
sbb
add
cmp
jae
cmpb
inc
test
or
push
sub
mov
shrb
add
inc
emms
or
test
inc
mov
sbb
fistps
sub
fisubs
out
cmp
pop
sbb
inc
scas
inc
push
pmulhuw
pop
cmp
lea
adc
and
xchg
fidivrl
icebp
jns
sbb
and
jmp
std
jmp
cld
enter
sbb
adc
and
jmp
test
mov
and
pop
dec
push
loope
es
jo
jbe
mov
dec
rorb
push
out
or
movsl
outsb
icebp
adc
call
test
dec
push
pop
pop
add
pop
pop
mov
mov
sti
add
mov
and
shr
shl
lea
adc
pushf
fidivs
push
mov
les
add
jo
mov
pop
shl
shr
mov
test
je
sti
inc
lods
pop
add
test
je
ficompl
inc
je
xor
loopne
bound
pusha
sbb
jg
inc
pop
sub
pop
mov
sbb
sub
mov
or
cli
fdivrp
xor
inc
imul
jno
dec
mov
mov
add
cmp
je
or
adc
jne
adc
dec
pop
jb
push
add
jne
lea
mov
sub
sub
cmp
jne
mov
jmp
das
mov
cmpsl
add
jmp
mov
inc
lea
jnp
cmp
ret
mov
cltd
inc
lods
mov
in
push
inc
dec
cld
inc
sub
or
add
pop
add
dec
lret
mov
out
xchg
or
sub
clc
inc
jl
idiv
pop
jg
cld
add
xchg
cltd
or
or
fistps
and
push
jle
pop
dec
in
dec
loop
or
dec
xchg
outsb
and
dec
mov
jg
mov
ret
add
andb
mov
mov
or
or
add
cli
lcall
push
test
pushl
mov
jge
scas
hlt
jb
jge
push
push
xor
sub
jp
or
cmp
inc
lcall
ret
pop
sbb
fs
xchg
and
mov
mov
add
inc
cmp
and
gs
push
mov
test
jne
or
push
jecxz
push
lret
and
adc
fistps
lret
stc
xor
mov
adc
iret
xor
inc
sub
xchg
and
or
inc
xor
and
outsl
add
cld
cmp
je
jo
std
jno
cmp
in
lret
jp
adc
shll
push
push
aam
xchg
push
dec
pushf
mov
gs
std
cld
in
jae
xor
outsl
xor
std
cmp
adcb
cmpb
jne
je
daa
fistl
addr16
pop
pop
bound
add
imul
add
sbbb
call
rsqrtps
mov
testb
jge
jmp
cmp
jle
lods
das
stc
pop
ficompl
push
clc
mov
lea
mov
inc
xor
inc
mov
sub
andl
je
sub
cmp
stos
addr16
adc
out
lcall
dec
test
and
cld
dec
cmp
jb
or
xchg
adc
test
inc
call
cmp
jge
inc
sub
jae
repnz
add
and
adc
jbe
mov
sub
pop
jge
adcl
test
repnz
xor
jb
ljmp
or
repnz
inc
neg
dec
mov
mov
sub
inc
cmp
xchg
mov
aas
cld
inc
leave
push
xor
test
outsb
fs
xchg
sub
mov
movsl
adc
mov
call
add
adc
ljmp
or
sbb
lret
jae
xor
test
imulb
adc
xchg
add
sub
call
fwait
pop
insl
leave
dec
push
shll
inc
dec
sbb
lcall
enter
or
push
add
push
jne
pop
iret
test
movsb
movsb
pop
icebp
data16
jnp
pushf
testb
nop
add
frstor
jecxz
aam
pop
mulb
fcomps
inc
call
arpl
lods
xchg
ret
jno
cwtl
mov
push
adc
sub
cwtl
call
js
cmp
pushf
inc
xchg
pop
dec
mull
hlt
rcrl
js
lock
and
inc
insb
pushf
je
and
adc
inc
pop
adc
or
or
test
jne
in
jbe
pop
dec
test
cld
les
dec
or
mov
mov
add
add
or
mov
std
and
std
pop
jne
pop
pop
mov
pop
insl
pop
imul
push
or
push
mov
fs
push
mov
dec
dec
sbb
jle
push
push
dec
stc
jecxz
pop
xchg
aad
jne
add
sahf
push
mov
add
and
loope
mov
pushf
mov
inc
add
je
jnp
mov
roll
mov
mov
jmp
push
test
cmc
pop
cmp
sbb
pop
in
jl
jmp
fistpll
sub
repnz
jmp
rolb
pop
sub
dec
hlt
push
adc
test
push
lock
test
or
pushf
sarb
push
in
jl
and
and
jg
fwait
add
mov
jecxz
lods
test
hlt
pop
inc
repz
add
clc
pop
sub
xchg
sbb
inc
or
lock
fsub
add
cmp
in
setp
sub
jmp
inc
cmp
add
inc
in
or
je
adc
movsb
enter
adc
add
or
push
add
inc
into
xchg
adc
add
ds
adc
and
sub
sbb
sub
or
test
ljmp
add
or
sub
lret
orb
pop
bound
jmp
das
xchg
push
mov
jae
cmpsl
lock
adc
pop
jmp
aam
jo
test
dec
je
arpl
subl
insb
test
test
insb
and
dec
std
xchg
xor
adc
cld
adc
mov
jmp
add
ss
cmpb
jne
inc
inc
adcb
cs
and
lock
mov
ret
and
push
lcall
pushw
xchg
xor
addr16
jne
gs
add
sbb
add
loope
ret
jnp
push
mov
inc
lahf
in
stos
shll
test
pop
push
or
sub
arpl
inc
cld
xor
jne
mov
inc
dec
cmpsb
xchg
mov
pushf
add
jmp
ljmp
imul
cld
mov
test
xor
or
mov
dec
mov
rcl
sub
dec
dec
inc
inc
jmp
mov
ret
and
mov
cmp
inc
mov
lock
bound
test
roll
in
fwait
in
adc
movsl
loop
xor
cmp
push
hlt
cld
fcom
pop
xor
xorl
je
or
es
bound
xor
push
jmp
push
sub
into
push
mov
out
dec
out
dec
es
xchg
add
mov
adc
loop
sub
inc
je
movswl
shr
or
cwtl
shll
jmp
jno
mov
mov
cmpsl
cwtl
push
mov
xchg
jne
mov
jne
sbb
fistl
int3
pop
fbld
sbb
clc
insl
in
pusha
mov
out
mov
std
call
sbb
out
cmpl
xchg
or
call
rcll
test
push
lods
ror
sub
clc
mov
mov
push
call
pushf
cs
mov
and
roll
add
call
xor
push
or
xchg
and
add
xor
imul
cmp
cmp
cmp
loope
clc
pop
icebp
jbe
add
mulb
or
pop
movsl
stc
sub
sbb
fnstcw
pop
mov
inc
ljmp
cmp
and
mov
cmp
jmp
je
fcompl
sbb
jl
xor
mov
add
jmp
mov
clc
popl
mov
pop
jmp
lcall
ret
mov
subl
or
or
cmpsl
popa
push
or
loopne
lahf
xor
ret
rclb
jl
inc
pop
mov
adc
lcall
mov
jmp
and
data16
add
jmp
dec
sub
cld
testl
sub
xor
pop
jb
jl
out
call
pop
push
push
rorb
cltd
fisttps
ret
xor
stc
jle
call
mov
add
mov
mov
jmp
sub
inc
adc
inc
je
mov
dec
stos
jne
loop
mov
add
xlat
cmpsb
pop
and
sbb
mov
repz
es
sbb
sub
inc
or
jmp
add
hlt
mov
and
pop
or
xor
jge
adc
mov
pop
sub
pop
ljmp
mov
jnp
add
movl
inc
or
stc
test
fmull
lahf
hlt
add
or
xchg
call
aam
jo
call
out
push
dec
fnsave
icebp
mov
and
ret
mov
jmp
and
sub
jno
or
adc
jge
stc
pushf
and
dec
dec
imul
add
xchg
test
xlat
push
mov
dec
fiadds
and
cmp
decl
mov
push
mov
mov
pushl
push
mov
testl
sbb
incl
pop
add
mov
jbe
and
adcb
cmpl
pop
dec
inc
xor
jo
mov
dec
mov
sbb
movsbl
shll
jle
push
inc
sub
push
push
jp
loop
push
jp
add
adcl
inc
sub
and
push
cld
data16
fwait
in
and
lods
pusha
mov
shr
jnp
sti
inc
jl
push
xchg
and
inc
mov
add
mov
js
xchg
loope
pop
jle
inc
call
mov
rcl
lods
cmc
mov
sbb
das
hlt
add
pushf
push
ljmp
lea
adc
or
or
add
sbb
or
sub
xchg
lea
jl
push
adc
and
aaa
dec
sub
lahf
call
jnp
dec
and
mov
push
mov
xor
adc
push
push
adc
add
xchg
adc
push
jns
and
add
rolb
test
pop
leave
ss
loopne
in
movsl
or
and
cli
inc
inc
inc
sub
mov
or
push
shrl
ds
leave
or
call
jmp
scas
sub
sti
add
dec
jo
loopne
hlt
rcrb
push
repz
xor
add
aas
lret
ja
inc
call
loopne
decb
fiadds
jmp
ret
in
jg
je
sub
ret
je
push
or
dec
jne
decb
inc
xorb
sub
pop
pop
adc
xor
inc
add
rclb
sbb
test
mov
jmp
bnd
xorl
ja
lock
jmp
arpl
inc
sti
jmp
decb
sti
cmpb
imul
sub
jb
pop
lods
inc
out
xor
xchg
aam
add
and
sti
ret
jbe
aad
cmp
push
pop
addr16
jmp
cld
insb
mov
add
cmpl
xor
loope
les
fcomps
jnp
rsm
cltd
push
jne
mov
cmp
pusha
call
jbe
outsl
pusha
push
loopne
or
jle
popf
xchg
fdivr
outsl
add
adc
pusha
or
push
adc
push
test
pop
addr16
imul
adc
xor
add
and
fnstsw
push
pop
in
pop
push
inc
push
sub
xchg
jmp
xor
lea
push
bnd
mov
inc
sub
xchg
adcb
push
call
dec
jmp
orl
jge
add
scas
sub
or
inc
push
or
push
call
rcrl
pop
and
mov
pop
pop
in
push
inc
xor
cmp
adc
pop
fnstenv
test
dec
mov
sub
mov
fstl
addl
pop
movsb
iret
gs
les
loope
addb
push
gs
test
in
sub
jne
mov
jbe
mov
adc
sahf
push
and
jne
cmp
mov
lea
mov
jb,pt
sub
jge
push
add
dec
fisubrl
int3
andb
jnp
arpl
mov
dec
mov
scas
inc
or
xchg
ss
sbb
inc
mov
stos
jle
add
dec
shr
or
out
sbb
add
call
xchg
ret
xor
mov
add
jecxz
xor
push
dec
mov
jmp
add
mov
ret
inc
mov
xchg
cmpb
loop
fwait
sbb
rorb
push
and
mov
push
inc
icebp
add
adc
lret
gs
xor
data16
dec
test
mov
adc
ret
loope
das
pop
mov
dec
daa
add
push
pop
jmp
mov
add
push
pop
jmp
sub
bound
int3
rolb
ljmp
test
mov
jl
lahf
sti
and
les
rolb
mov
inc
cmpsl
and
push
lret
mov
stos
scas
rcrl
cmp
ds
mov
mov
addl
ss
cmp
jae
mov
jmp
mov
cmp
ja
cmp
and
adc
sub
inc
mov
mov
and
mov
xor
or
pushf
or
inc
dec
jne
xor
jmp
mov
sbb
and
mov
jmp
addr16
pop
add
or
stc
mov
or
sub
imul
js
cwtl
mov
and
add
mov
mov
push
pop
sbb
ret
mov
call
add
add
or
shll
push
imul
enter
adc
add
jmp
daa
pop
bound
push
es
pushf
ret
push
jb
xchg
repz
mov
mov
push
ret
jmp
sub
fstpl
add
sub
ret
jb
ljmp
or
sbb
pop
or
add
fsub
dec
cmp
add
sbb
or
adc
cmp
jl
jecxz
dec
pusha
xor
jne
mov
mov
dec
jg
and
mov
fmuls
push
out
mov
sbb
jge
and
add
jle
xchg
pop
outsl
mov
dec
jne
cmp
jns
outsl
xchg
add
nop
ds
xchg
fsubr
in
xor
pusha
rorb
adc
jb
enter
in
mov
mov
jmp
cmp
lods
sbb
inc
jmp
fmull
xchg
jmp
jo
xor
je
xchg
inc
sahf
sub
aaa
pop
inc
xchg
sbb
testb
shl
cmp
shl
and
scas
aaa
stos
push
les
je
push
shrb
add
jl
sar
or
mov
pop
add
mov
filds
mov
sbb
into
add
stos
mov
out
cmp
jae
lds
mov
jmp
jle
call
cmp
loope
data16
js
das
pop
or
inc
pop
inc
dec
loope
mov
ret
cmp
inc
lcall
imul
enter
test
jne
add
js
outsb
jne
mov
mov
movb
pop
xor
cli
mov
and
mov
pop
pusha
inc
push
hlt
jge
pop
xchg
mov
pushf
adc
xlat
xchg
mov
adc
insl
imul
xchg
inc
nop
ss
in
jmp
mov
repnz
pop
ret
sarb
decl
js
mov
jae
jne
add
or
push
call
and
pusha
xchg
sub
push
inc
ljmp
xor
jne
xor
dec
out
fdivrs
or
arpl
adc
je
int
or
push
cmpsb
stos
in
add
cmp
inc
lret
loope,pt
cmp
add
je
add
mov
mov
mov
mov
pop
aam
test
sub
mov
into
lock
pop
std
pop
mov
lcall
sbb
insb
insl
es
adc
add
scas
outsb
cwtl
aam
cmpsl
lcall
inc
cwtl
mov
ja
pop
pusha
sbbb
fisttpl
add
add
jl
cmp
jg
sub
mov
pop
cmpsl
xor
push
call
jle
jmp
mov
in
gs
dec
push
lock
jmp
cwtl
ffree
nop
push
mov
dec
sti
in
sbb
mov
testl
testl
cmp
pusha
or
push
xchg
pop
add
add
fcoms
rcll
rorl
lock
lods
mov
outsb
mov
and
rorb
adc
lea
xchg
mov
punpckhbw
fnstcw
or
shlb
call
xor
bswap
pusha
je
xchg
ret
cltd
pop
push
call
call
arpl
add
sbb
inc
andl
jne
mov
mov
les
cmp
lcall
lea
adc
add
or
cli
add
push
insl
push
jb
adc
call
adc
adc
xor
add
sub
shr
imul
das
mov
orb
mov
push
dec
mov
loop
add
in
out
xor
push
les
sbb
mov
clc
mov
ret
clc
gs
jle
cli
add
cmp
jbe
push
pop
mov
or
dec
or
and
mov
mov
shr
lea
not
and
decb
jne
nop
inc
fisttpll
sbb
adc
inc
sbbb
push
into
cmp
pop
pop
add
addb
add
mov
add
mov
xor
mov
or
push
std
inc
je
or
and
out
mov
sub
sar
jbe
inc
mov
pop
cmp
jbe
mov
js
push
jle
js
push
mov
cmp
je
outsl
sbb
cmp
mov
push
add
mov
and
fs
dec
add
loop
dec
loopne
pop
inc
jo
and
pop
icebp
or
push
xor
pop
mov
push
add
mov
test
cmp
or
lret
pop
fisubrs
adc
add
test
dec
sub
push
or
jne
mov
jo
pop
mov
addr16
jae
es
jmp
andps
std
xor
es
sbb
and
cmc
mov
call
test
roll
or
mov
mov
xchg
mov
mov
or
or
in
adc
loope
add
jl
dec
scas
push
push
call
call
push
or
mov
movsb
mov
jp
xchg
decb
jl
or
jns
sbb
inc
adc
incb
inc
imul
or
test
test
mov
add
shl
pop
mov
add
enter
lea
push
sbb
dec
jbe
data16
cwtl
daa
or
dec
push
divl
or
fsubl
sbb
enter
sahf
adc
call
xor
lea
jge
add
lock
dec
cmp
jge
aas
add
push
insb
filds
pop
icebp
and
movsl
jmp
pop
jecxz
mov
shr
add
adc
clc
mov
or
mov
mov
and
or
inc
shrl
ret
adc
pop
cld
jb
and
jne
mov
cmp
adc
add
push
inc
movsb
pop
jae
cmpl
dec
cmp
jmp
ret
hlt
or
or
out
push
inc
andl
fistl
jno
call
out
adc
stos
mov
cmp
bswap
sub
fldenv
mov
lcall
mov
mov
mov
and
mov
loop
dec
inc
or
cs
js
pop
mov
add
cmp
xlat
je
mov
push
mov
mov
into
jne
push
dec
add
pop
test
jl
shl
inc
jmp
mov
sub
push
stc
or
rolb
mov
mov
incb
cmp
jle
push
das
or
cmp
sarl
cmpb
mov
push
leave
jge
iret
sbb
daa
mov
pusha
mov
pop
mov
pcmpeqw
cs
and
imul
js
nop
push
mov
cmp
clc
leave
test
jmp
or
add
mov
add
mov
mov
or
sbb
icebp
hlt
icebp
adc
decl
int3
push
lods
inc
testb
dec
push
js
imull
decb
jge
inc
clc
mov
dec
add
mov
cmp
ljmp
cmp
das
or
and
inc
jnp
sub
aad
movsl
and
aaa
orl
fmuls
mov
mov
je
mov
add
pop
sub
add
cld
mov
pop
popf
mov
sub
and
jne
cmp
pusha
lods
cmp
push
inc
add
repnz
or
les
lea
jo
movsl
push
inc
shll
pcmpeqb
inc
push
dec
mov
push
cld
je
sbb
jle
pop
inc
adc
inc
clc
pop
push
push
mov
push
dec
mov
int3
add
pop
orl
mov
incl
addl
fcoml
fimull
add
jno
ficomps
test
xlat
mov
ret
cmp
xor
pop
lea
inc
or
fsts
add
or
lsl
fs
dec
mov
dec
push
lcall
js
jo
jo
cli
ja
lea
jno
adc
add
mov
movl
push
sub
or
inc
movl
fists
adc
dec
push
dec
mov
add
movsb
pop
mov
or
icebp
mov
fs
sbb
in
inc
mov
sub
ds
mov
test
int3
adc
inc
jne
or
mov
ljmp
push
sub
jb
mov
lea
sub
inc
mov
shr
mov
out
add
cmp
leave
mov
cmp
push
sub
and
or
fimull
add
popl
and
jecxz
dec
jmp
aas
jbe
sbb
cmp
pop
mov
cwtl
test
mov
pop
clc
lea
nop
inc
add
test
xchg
sub
popa
adc
pushf
nop
cmpsl
or
dec
or
jg
mov
into
add
imul
jbe
sbb
sar
dec
push
xchg
cs
xor
mov
pop
sbbb
hlt
lea
cmp
jl
mov
popa
mov
loop
sbb
jno
jne
mov
scas
lea
addb
sbb
pop
and
lock
add
adc
xchg
adc
les
push
fsubp
pop
inc
xor
mov
and
mov
dec
sbb
clc
jmp
stos
xor
lea
jle
cmp
pop
or
clc
adc
xor
adc
cmp
xor
jbe
or
mov
cmp
mov
dec
ds
cltd
inc
cmp
xchg
movsb
push
dec
movsl
adc
es
lcall
gs
and
pop
stos
loop
repnz
js
fcoml
jnp
lock
push
pop
sbb
xor
adcl
or
jno
jae
enter
push
adc
insl
pop
sbb
sbb
xchg
fisttps
and
aas
cmp
loop
aam
adc
sbb
fyl2x
push
dec
lcall
lahf
push
fbld
inc
out
pop
ja
aad
mov
cmp
push
push
mov
mov
jnp
mov
rcll
sbb
xor
andl
mov
jns
orl
lea
mov
pop
or
adc
add
or
xor
mov
std
adc
popf
ret
rorl
mov
cmp
jl
push
add
rcl
sub
add
cmp
jae
orb
dec
inc
pop
movl
mov
rorb
jmp
xchg
data16
xor
je
jg
into
pushf
adc
in
fadds
arpl
xor
push
or
or
lret
fcompl
push
dec
repnz
iret
cmc
cmp
adc
or
mov
xor
out
jle
sbb
mov
lock
xchg
test
ret
sbb
cmp
add
push
cmpsb
pop
mov
orl
fdivrl
inc
sbb
add
jb
xchg
mov
loopne
sarl
sub
ja
or
jge
adc
jbe
je
cmpl
lea
mov
int3
sbb
cli
idivb
and
out
cmp
xor
mov
push
xor
xchg
stc
or
cmp
jbe
mov
jb
lret
out
add
jmp
test
jne
mov
and
bnd
call
adc
adc
jno
ror
arpl
cltd
in
sbb
or
dec
mov
or
sbb
enter
add
andb
xorb
cmp
inc
add
mov
incl
and
push
je
mov
push
mov
rolb
lods
lods
es
and
push
mov
sub
test
loopne
add
cmp
jae
mov
sbb
ficoml
push
push
outsl
cmp
mov
add
mov
test
xor
and
jb
inc
xchg
test
adc
stc
jmp
jae
jl
cmp
lea
push
imul
push
out
mov
mov
adc
je
movsl
scas
outsl
adc
in
sub
mov
sub
or
adc
aaa
out
jg
shll
or
aas
cmp
hlt
mov
xlat
call
arpl
or
repz
mov
sub
sub
sti
repz
cmp
test
jb
or
je
cmp
sub
cmovns
rol
jne
divb
mov
pop
cld
rorb
and
jle
mov
xor
pop
loope
push
cld
mov
adc
inc
fs
xchg
xlat
subl
aam
jne
mov
lea
sbb
ret
jmp
sbb
and
ds
or
add
push
loopne
xchg
jmp
call
sahf
sti
sub
mov
pop
push
sbb
mov
lret
pop
test
sarl
andl
cmp
dec
popa
ja
mov
rclb
jno
mov
sbb
mov
and
jbe
in
and
jae
add
sub
xchg
loop
in
add
movsb
jo
jmp
rol
add
cmp
jae
mov
test
pop
add
faddl
inc
jmp
jae
nop
pop
ja
add
jmp
cmp
scas
and
add
add
adc
jne
lea
cs
push
dec
clc
aam
jae
jne
cmp
sbb
add
inc
inc
loope
rorb
sub
lods
xorb
xor
ret
jae
sub
or
jmp
call
lock
push
mov
dec
orb
mov
lea
nop
adc
cmpl
or
jae
dec
ljmp
mov
adc
lea
jbe
andb
stos
sub
mov
add
movl
pusha
jae
out
pushf
adc
lea
insb
or
adc
cmp
xchg
hlt
mov
inc
mov
pop
cmp
ja
daa
pusha
push
pop
mov
div
add
cmp
jne
inc
cmpb
sub
loope
repnz
add
sahf
dec
add
loop
or
divb
push
shlb
popa
add
test
ret
rdmsr
icebp
aam
int3
ja
and
shlb
gs
push
nop
inc
sbb
add
cli
and
xor
mov
test
sub
push
inc
out
push
ret
scas
enter
sub
inc
lods
imul
test
fwait
daa
daa
mov
add
nop
aad
push
movl
inc
sbb
sub
outsb
lods
cli
xor
adc
or
shlb
mov
test
je
sbb
push
popf
adc
mov
orb
imul
test
xchg
sub
pop
add
leave
and
dec
xchg
and
stc
jo
push
add
xchg
push
or
shll
lret
and
shl
or
pop
xchg
xor
mov
push
mov
sub
add
jmp
cmp
mov
outsb
shr
test
je
push
and
adc
or
test
add
or
push
or
and
hlt
sbb
adc
int
push
mov
and
je
cmp
or
or
and
jmp
cld
insb
push
jne
mov
add
inc
or
sbb
and
add
ljmp
roll
jmp
leave
inc
inc
aas
out
leave
or
or
dec
aas
and
mov
add
cmp
je
mov
jecxz
or
js
adc
fldl
fstpl
addb
inc
push
push
mov
sahf
jecxz
loop
pop
leave
dec
pusha
pop
inc
call
pusha
push
adc
jl
inc
testb
sub
sub
inc
sub
add
add
or
test
stos
call
loope
cmp
mov
add
orb
jmp
and
in
or
test
add
push
jmp
pop
ljmp
call
adc
lret
adc
jmp
add
daa
rcr
inc
fstpl
pop
mov
cli
inc
std
hlt
out
test
sub
nop
cmpsb
fsubrs
loop
mov
lock
sub
call
add
lods
pop
push
mov
cmpsb
popa
adc
mov
test
enter
bound
ljmp
mov
inc
cs
push
sub
enter
repz
add
sbb
and
sbb
push
fdivs
loopne
pop
hlt
leave
push
jmp
push
popa
dec
inc
jns
or
inc
adc
sahf
roll
pop
dec
jns
mov
add
and
pop
push
mov
mov
add
fcoms
adc
in
aad
sbbb
ljmp
xchg
mov
ret
mov
out
mov
push
jae
addl
mov
pushf
idiv
nop
mov
movsb
mov
enter
sti
jg
sub
test
push
xor
shrl
adc
xabort
sbb
pmaddwd
dec
jne
jno
inc
adc
es
rcll
bound
pop
fstpt
push
adc
je
push
push
in
movsl
out
rcll
hlt
lcall
push
and
pushf
movb
sbb
je
mov
adc
adc
and
dec
dec
sbb
sub
and
fisttpll
test
call
inc
and
pop
aaa
pop
push
and
fldl
leave
inc
mov
adc
sti
call
bound
leave
in
fsub
pop
dec
and
adc
inc
and
rol
mov
leave
mov
dec
mov
rcrb
in
or
and
dec
mov
add
add
cmp
lret
mov
sub
test
add
and
cld
aad
shl
xor
xchg
stos
es
test
frndint
push
mov
cmpsb
arpl
push
dec
push
add
adc
rol
or
jl
inc
sub
lock
or
push
or
or
adcb
dec
push
adc
sub
mov
enter
and
add
pop
stc
shll
pop
pop
rcl
mov
flds
pop
mov
or
dec
push
cli
repnz
sti
or
insb
sbb
xchg
push
push
arpl
mov
setl
ss
popf
iret
rclb
iret
jmp
or
adc
and
addb
or
out
cltd
push
gs
out
sub
out
ficompl
pushf
mov
add
push
pop
pop
clc
and
sbb
lock
mov
pop
std
out
cwtl
fstsw
sbb
xchg
mov
in
inc
fnclex
or
enter
pop
adc
dec
cld
or
push
movsb
pop
fldcw
cld
mov
dec
adc
daa
or
sub
bswap
push
dec
movsb
push
rcrl
popf
adc
adc
jl
fld1
fdivp
fstp
popa
inc
lds
fldpi
mov
pop
cmpb
mov
jae
sbb
add
sahf
push
pop
into
cmp
lock
fmull
into
jno
insl
lock
out
loopne
jb
sarl
sbb
add
add
push
and
add
jbe
jo
pop
jno
cwtl
fcompl
je
sbb
cmpsb
cmp
dec
push
shl
in
enter
aam
loop
js
or
push
inc
mov
mov
mov
mov
mov
push
imul
inc
je
cmp
je
mov
inc
hlt
pusha
nop
inc
inc
inc
sub
push
or
pusha
loope
in
dec
cmpb
sbbb
je
cmp
dec
mov
inc
sbb
mov
inc
inc
fldl
jb
mov
jae
and
pushf
adc
sbb
cmp
sbb
mov
dec
add
adc
aam
adc
cmp
jle
subb
loopne
jp
fisttpl
lahf
rcll
add
xchg
roll
call
out
cmp
aaa
sarl
sub
push
jne
dec
shrb
lret
pop
daa
aaa
adc
out
inc
int
sarb
adc
sub
daa
loope
push
mov
xchg
mov
jne
push
or
or
enter
pop
inc
loop
pop
adc
pop
movb
ror
cli
inc
cmp
pop
add
icebp
dec
push
dec
jns
neg
sub
mov
jl
fs
pop
idiv
lds
ja
mov
add
or
mov
add
popf
mov
adc
lcall
mov
fdivrs
push
mov
aaa
xor
aam
insb
outsb
jmp
test
stos
leave
aaa
add
inc
add
ret
repnz
mov
aam
or
movb
imul
adc
pusha
push
ljmp
movb
pop
inc
jmp
add
inc
mov
push
jbe
add
mov
inc
pop
test
jge
or
movsb
push
je
neg
jmp
cmp
jl
adc
shll
mov
mov
xchg
jle
inc
sbb
jge
and
pop
cmpsb
push
mov
dec
add
pop
xor
push
push
mov
mov
les
mov
and
or
loopne
add
cld
mov
jl
jge
flds
int
or
mov
inc
es
jecxz
add
push
std
inc
jo
jae
jle
xor
arpl
add
sub
and
inc
lcall
push
dec
decb
adc
inc
cltd
incl
inc
data16
add
dec
out
jno
mov
and
in
cld
xor
adc
pop
mov
sbb
push
ds
inc
jno
sbb
add
cmp
cs
sbb
and
aam
add
test
mov
clc
jle
outsl
adc
imul
adc
push
add
add
or
cmpl
jne
sbb
adc
daa
sbb
insb
fstpt
sbb
push
sbb
dec
lock
inc
fs
pop
cmp
lods
inc
and
or
push
or
pop
ret
push
popf
pop
mov
pop
test
lock
xchg
in
sbb
inc
add
in
add
xchg
and
dec
mov
pop
insl
mov
scas
stos
cmp
push
cmp
jne
mov
mov
inc
aad
mov
hlt
mov
loope
std
ret
stos
xor
add
lret
xor
or
test
lret
cmp
sub
roll
adc
jp
clc
add
xchg
enter
xchg
pusha
cld
push
push
jp
dec
mov
pop
fadds
jae
cmp
jg
int3
mov
mov
inc
or
jle
daa
fisubrs
aam
pop
je
lea
data16
and
aaa
mov
test
mov
jno
aaa
fidivrs
jg
scas
dec
xchg
inc
hlt
orl
jmp
or
aas
push
aas
and
popa
in
push
add
push
adc
push
mov
or
adc
imul
pusha
add
add
ret
das
or
xchg
cltd
cmp
fsubr
aad
or
jae
loop
cmp
fsubs
jo
pop
mov
stc
addr16
scas
bound
lcall
mov
fs
jp
clc
jae
cmp
jl
cmp
jno
in
dec
adc
mov
dec
hlt
push
add
mov
cmpb
adc
add
mov
hlt
and
enter
out
push
adc
test
mov
add
lea
je
and
lods
push
dec
add
push
imul
dec
mov
jne
testb
rcrl
je
mov
loope
cmpsb
or
pop
add
es
mov
nop
xchg
aam
mov
imul
ljmp
sbb
cmp
lods
test
pop
add
inc
lock
ret
or
aad
jp
add
fwait
cli
ret
int
push
lret
dec
cwtl
or
sbbw
mov
ss
or
dec
pop
je
mov
sbbb
add
cmpsb
sbbb
pop
sbb
lret
push
xchg
xchg
add
xchg
add
loope
inc
sub
in
lods
roll
nop
mov
inc
add
icebp
enter
inc
mov
mov
or
push
cmp
dec
ret
aad
imul
enter
ror
push
push
aam
push
xlat
sub
fmull
and
ja
or
fwait
in
movb
loopne
cmp
fisubrs
mov
adc
mov
cld
sarl
gs
fs
call
pop
in
mov
or
add
scas
adc
js
jge
cmp
aas
fmuls
jmp
loopne
cmpl
daa
cmpl
xor
and
mov
xlat
fdivl
aam
sbb
or
hlt
scas
icebp
pop
and
js
sbb
rcll
push
or
sub
add
sbb
fstpl
dec
add
orb
jne
sub
imul
outsl
pusha
leave
inc
mov
jl
dec
pop
and
add
adc
adc
adc
call
pop
xor
lds
orb
mov
jp
xchg
lds
jmp
call
mov
add
inc
ss
add
mov
sub
push
unpcklps
xor
lods
scas
jle
leave
lcall
cmpsl
shlb
dec
ficoms
xchg
rcl
cmp
add
ja
lret
shlb
mov
jle
and
cli
add
cwtl
push
and
jmp
call
subl
mov
add
and
imul
test
test
sbb
sbb
arpl
sbb
inc
xchg
jmp
enter
movsl
push
mov
sbb
push
sbb
and
or
push
pushl
inc
test
sbb
or
cmp
sub
xor
ja
test
xor
add
test
in
add
xor
mov
add
add
pop
ret
mov
in
xor
mov
push
imull
leave
cltd
rep
cld
and
sbb
rorb
xor
jmp
stc
jne
mov
xchg
call
inc
add
push
fdiv
les
cld
sub
shr
pop
inc
cmpsb
xchg
and
push
das
pusha
sbb
jmp
es
inc
inc
fdivrl
inc
push
js
xchg
dec
jne
dec
cmp
push
jge
mov
adc
ja
imul
add
dec
add
loopne
xchg
add
fcomps
dec
mov
test
dec
mov
decb
push
call
mov
push
dec
ds
mov
fwait
repz
push
jo
push
mov
inc
xlat
daa
mov
icebp
clc
lret
fdiv
and
outsb
fstl
push
nop
flds
and
int3
adc
and
sbb
add
shlb
cmpl
test
negb
mov
add
in
jno
jmp
sbb
ja
cmp
divb
rol
mov
pushf
aad
loopne
in
enter
int3
jecxz
fimuls
cmp
pop
mov
shr
cmp
add
pop
push
movsb
jns
lods
jmp
sub
test
fs
out
lcall
sahf
mov
jecxz
loope
adc
inc
clc
popf
and
adc
cmpsl
inc
push
setnp
or
out
and
roll
int3
xor
ds
adc
inc
xor
jno
rcrb
sbb
or
aam
pop
push
in
jbe
ljmp
aad
inc
mov
cld
lds
mov
jmp
pop
pop
daa
mov
je
inc
mov
xchg
scas
je
inc
add
jbe
adc
pop
push
aad
cmp
fiadds
xchg
mov
and
arpl
xor
je
sbb
sub
cmp
in
ja
push
xchg
std
sub
pop
adc
lds
popf
cld
lds
aam
mov
pushf
or
out
sub
mov
movb
sahf
in
je
push
call
sub
adc
pop
addr16
jmp
bound
dec
ss
pop
lcall
push
pop
xlat
popf
mov
andl
add
test
inc
add
or
push
adc
call
data16
fcmovnb
testb
je
subl
jmp
pop
sbb
mov
xchg
jbe
pop
mov
enter
movsb
xchg
test
mov
jns
dec
mov
jecxz
push
push
mov
jo
lcall
mov
xorb
pop
or
lret
inc
icebp
xor
cmp
xor
hlt
push
cmp
mov
inc
xchg
cmp
dec
xor
xchg
xor
mov
shlb
inc
inc
dec
jne
ss
adcl
add
clc
inc
cmp
push
sub
jl
xor
ss
jae
pop
mov
mov
je
jns
imul
popf
push
pop
aad
sbb
push
shll
jmp
pop
sub
mov
and
inc
insb
mov
xchg
test
sbb
cmp
mov
sar
sbb
fcom
data16
iret
mov
mov
pop
and
add
push
push
push
or
jle
pop
repnz
test
lcall
test
adc
dec
lea
xor
push
fistl
mov
outsb
dec
inc
loop
push
push
jne
mov
shll
fistl
fst
lea
xacquire
mov
ds
mov
out
xor
mov
fwait
jo
hlt
hlt
add
cmp
je
pop
or
dec
les
xchg
fwait
aam
movb
add
int3
mov
sub
adc
mov
pop
adc
mov
nop
ds
out
in
jb
gs
mov
es
add
jg
ret
sahf
sti
lea
out
add
pop
rolb
or
cli
inc
push
and
mov
adc
lods
inc
cmp
cmp
add
out
test
ss
out
jne
js
cmp
inc
ljmp
push
addl
pop
movb
inc
and
jae
into
psllw
aas
push
pop
jmp
inc
dec
add
dec
insl
cmp
in
xor
arpl
mov
inc
mov
pop
out
add
dec
adc
movb
jmp
push
jo
mov
scas
jp
leave
je
push
push
inc
test
aad
je
push
cltd
filds
insl
leave
test
add
xorb
dec
cs
cmp
shlb
mov
addl
cmp
fcomps
push
psadbw
sub
xor
sub
jle
mov
jmp
repnz
cltd
pop
lods
js
leave
jae
aas
pop
popf
test
jb
mov
mov
and
mov
in
jg
cwtl
or
and
fs
ds
mov
arpl
out
das
popa
je
cmp
je
cmp
or
and
in
xchg
into
add
or
push
sbb
inc
add
hlt
xor
roll
and
movsbl
push
jg
test
pop
pusha
sub
je
sbb
les
push
je
dec
lods
dec
adc
add
leave
and
mov
out
adc
mov
roll
test
inc
je
pop
pop
jmp
jne
cmp
fidivrl
sbb
or
pop
sbb
enter
enter
bound
mov
inc
iret
mov
jne
test
fmull
mov
jmp
cmp
and
mov
cmp
mov
jmp
aam
sarb
loope
push
sbb
sub
and
mov
push
daa
mov
imull
lret
jge
push
pop
jbe
incl
jmp
jo
add
sbb
adc
mov
adc
xor
mov
add
cmp
push
jle
mov
sti
cmp
je
testb
je
inc
das
add
jmp
mov
jmp
jb
xchg
and
out
call
insb
es
sub
cmp
push
cmp
and
cmp
dec
adc
mov
pop
js
or
inc
adc
addr16
push
mov
dec
clc
mov
mov
cmp
out
push
cmp
adc
jmp
ja
add
push
jns
jl
and
ret
cmp
dec
jb
lret
xchg
push
mov
jbe
jle
xor
jle
popa
or
lcall
cmpsb
repnz
adc
call
mov
jge
xchg
or
test
outsl
dec
addl
imul
mov
push
fprem1
in
pop
sub
jge
xchg
mov
idivl
xor
jns
jo
fcmovu
test
cmc
push
xor
outsb
push
xchg
dec
pop
ja
pop
sub
mov
inc
jmp
lods
mov
push
psubq
arpl
lock
stos
xchg
test
mov
and
popf
cld
or
xor
cld
push
xor
push
cmp
xchg
push
imul
and
hlt
in
out
adc
fisubrl
pop
mul
push
insl
ja
ret
or
add
pop
xchg
xor
sub
push
call
mov
lock
scas
xor
call
or
xor
lods
and
addb
movb
mov
add
jno
sti
mov
daa
jbe
mov
lods
mov
roll
rcrb
lea
lock
add
cmp
mov
xchg
call
xchg
inc
cmp
cmp
shlb
jae
andb
xrelease
aas
insb
iret
sarl
and
inc
loopne
sbb
in
dec
mov
mov
mov
cmc
push
fistl
or
adc
insb
aad
mov
test
mov
add
pop
orb
ret
add
cmovo
xor
cmp
decl
test
sbb
jne
push
pop
adc
inc
mov
dec
shl
adc
lock
inc
inc
inc
je
push
or
xor
lcall
push
orb
jmp
push
push
sub
inc
sbbl
or
add
je
and
pop
imul
push
or
or
mov
inc
push
in
sti
add
push
push
dec
fs
or
mov
and
or
xchg
clc
xchg
and
cmpsl
movhps
inc
push
or
adc
adc
adc
mov
sbb
mov
sbb
push
hlt
insl
test
cmpsl
push
xor
and
pop
and
jl
xchg
repnz
or
inc
mov
sub
jb
cmp
mov
sbb
cld
call
push
push
fdiv
and
test
and
jb
xor
mov
cmp
inc
in
fcompl
push
xorl
int3
pop
adc
rcrb
mov
cmp
je
testb
je
fwait
pop
pop
pop
sbb
out
inc
jg
inc
sub
sub
jns
test
lea
lahf
popf
and
fistl
cmp
sub
inc
fbstp
in
adc
inc
cltd
bnd
movsb
adc
adc
push
or
add
cmpsl
cli
push
cs
jmp
mov
test
push
lea
test
dec
aas
xchg
out
push
dec
sub
dec
mov
push
mov
mov
addb
jl
stc
mov
lods
mov
sarb
scas
cmp
je
xor
inc
or
pop
repz
mov
sub
pop
or
adc
mov
add
loope
call
stos
lods
pop
inc
movsb
jbe
jno
xchg
inc
xchg
cltd
mov
test
shl
jnp
mov
call
cmp
ja
xchg
mov
mov
mov
cmp
js
shl
stos
lea
xchg
lret
je
mov
je
inc
jo
gs
cmp
ja
xor
or
cmp
push
or
sub
xor
adc
mov
or
add
roll
push
mov
call
xor
mov
mov
movsl
jmp
jns
lahf
enter
add
aas
repz
es
mov
jmp
xor
push
sbb
push
mov
insl
mov
call
mov
andl
jo
mov
inc
rorl
and
jne
nop
xor
mov
movsb
add
ret
je
or
or
mov
sub
mov
out
jl
push
pop
sub
mov
xchg
mov
daa
dec
mov
cmp
sti
iret
call
sub
or
scas
outsl
test
push
hlt
mov
movb
sahf
push
lea
jb
loopne
sarb
ja
add
inc
mov
add
lret
loope
sub
inc
mov
rcrb
lea
cmp
mov
push
lea
shrb
scas
lret
sub
cmp
mov
and
adc
and
leave
ret
lret
nop
enter
mov
mov
je
sub
xor
nop
mov
jmp
je
cmp
xchg
sbb
jmp
andb
jmp
mov
lods
xor
ret
sbb
add
and
inc
pop
jb
push
aaa
and
ja
push
fsts
cmp
and
loopne
mov
pop
lock
push
je
inc
jne
push
inc
into
jmp
jb
pop
imul
push
push
mov
pop
jne
inc
mov
sbb
repz
push
mov
mov
dec
jl
jo
testb
pop
je
inc
inc
sbb
ss
lahf
jbe
cld
add
jno
jne
jmp
andb
mov
ret
rcrb
stos
jae
add
mov
enter
dec
cld
pop
mov
xchg
movsl
popf
sub
lea
bound
xchg
lahf
cmpsb
call
insb
or
add
push
cmpsb
inc
jecxz
dec
or
add
mov
lret
lock
add
popa
mov
cmp
jge
lea
sub
fs
sub
out
pop
or
jne
mov
inc
push
test
test
cmp
lods
sbbl
mov
dec
cmp
ret
cmp
or
and
popl
adc
cld
sub
adc
sti
pop
rcrl
dec
ret
or
pop
pop
jmp
push
cwtl
xor
cs
jnp
push
sahf
inc
rol
pop
pop
mov
cmp
cmpsb
push
mov
lods
scas
mov
outsb
sub
add
adc
lea
pop
lea
cmpsb
pushl
xor
push
int3
push
sbb
call
and
mov
loope
stos
aam
xor
adc
call
loope
scas
fstpt
or
or
jbe
inc
and
insl
jne
xor
or
fstpt
sbb
cmpsl
push
insb
call
jp
fldl
loopne
ret
je
cmp
je
inc
push
call
add
push
add
call
add
push
xchg
push
mov
ret
mov
push
call
sbb
cmp
cmp
jno
jbe
call
and
loope
inc
push
call
dec
jo
test
ss
aad
pop
add
jne
pop
lcall
mov
mov
pop
pop
in
mov
sbbl
mov
sub
dec
lods
adcb
mov
mov
mov
cmp
cli
and
push
call
mov
out
pop
js
xlat
push
dec
xchg
incb
into
dec
sbb
scas
xchg
das
stc
xchg
stos
pop
add
push
jp
dec
cwtl
cwtl
or
mov
sbb
sbb
lods
ret
and
sahf
push
adc
push
js
pusha
pop
loopne
or
fwait
cmp
lret
pop
in
inc
mov
inc
cmp
xchg
fwait
cli
sbb
ja
sti
mov
xor
mov
mov
inc
inc
add
jmp
add
xor
pushf
jmp
add
inc
sbbl
sbb
inc
inc
jne
and
and
push
cli
or
jne
or
pushw
add
loopne
mov
fcoms
add
add
mov
mov
incl
cld
mov
rorb
jne
inc
mov
lods
int
mov
enter
sbb
std
pop
pop
js
and
ljmp
aaa
sbb
xchg
ret
or
adc
jmp
rorl
inc
sbb
add
cmp
int3
sub
test
sub
jne
aas
je
lret
cmp
aam
inc
sbb
mov
xor
xadd
stos
roll
xorl
pop
mov
in
pushf
pushl
fistl
bound
xor
inc
inc
push
cmp
scas
xor
sbb
and
je
adc
push
sub
sbb
add
and
mov
inc
out
or
mov
cmp
mov
inc
inc
push
add
inc
sbb
repnz
pop
push
cli
stc
sar
sti
xorb
daa
mov
lcall
jmp
xor
aam
mov
ss
push
cs
hlt
xchg
dec
and
hlt
or
cmp
ret
lds
dec
ret
jmp
fstps
cmpsb
mov
adc
je
cmp
mov
inc
pusha
or
sti
imulb
mov
mov
jmp
shl
jmp
push
mov
sub
jmp
cmp
in
adc
fsts
xor
add
jbe
push
jno
jp
inc
adc
cmpsw
xchg
popf
mov
jo
mov
dec
rolb
mov
or
cmpl
push
and
push
lea
call
xor
adc
shlb
push
call
mov
mov
mov
nop
or
scas
notl
push
call
or
sbb
mov
mov
test
xor
jmp
jmp
mov
adc
imul
pop
and
cmpsl
inc
push
jo
lea
sub
xor
push
popf
out
fwait
inc
aaa
arpl
scas
mov
xchg
add
cmpl
cld
test
xor
jno
jo
mov
loop
leave
insb
movsb
pop
pop
ficompl
jl
rorb
scas
or
test
in
pop
push
mov
xlat
stos
popa
sub
xchg
xchg
pop
or
add
mov
cltd
cmp
icebp
pop
lcall
push
add
pusha
jae
fistl
and
push
pop
xchg
push
mov
fstps
mov
sub
cli
adc
subl
clc
push
clc
push
call
iret
pushf
push
jno
inc
popf
or
data16
or
iret
popf
sahf
add
or
adc
add
or
mov
fsub
push
movsl
sub
jmp
push
nop
lea
dec
push
shll
mov
push
push
push
xor
iret
mov
add
insb
push
adcb
jae
push
mov
push
aad
add
loopne
lock
test
xchg
ror
push
push
call
int3
lods
sub
loop
rol
or
push
std
push
push
dec
and
sti
jo
jbe
cld
sub
jo
outsb
ret
sub
inc
mov
sbb
or
movb
inc
mov
add
dec
bound
fsubr
mov
jns
dec
sub
movsb
fstl
push
xor
pushf
repnz
inc
mov
cmp
jl
pop
pop
test
sub
jb
jg
sub
mov
mov
pop
cmp
push
dec
pop
mov
and
mov
mov
mov
lea
xchg
or
jge
stos
hlt
hlt
rcrb
pushf
inc
rorl
jle
jmp
cmp
inc
pop
sub
mov
adc
or
mov
cmp
jmp
sub
in
mov
fisubrs
sub
hlt
test
mov
aas
xchg
cmp
andl
imul
gs
mov
aad
pop
xor
pop
lcall
pop
repz
mov
push
enter
inc
ret
mov
sub
push
sti
aam
jmp
cmp
jge
lcall
stos
test
jecxz
aaa
and
subl
xor
push
add
insb
mov
mov
adc
call
jl
sub
mov
or
inc
sub
scas
aam
inc
popf
adc
or
and
mov
and
pop
ret
call
mov
jmp
pusha
xchg
jne
pop
hlt
out
xchg
ret
adc
sub
icebp
loop
stos
incl
ja
push
int3
xlat
sbb
cmp
std
sub
mov
fimuls
inc
xor
sbb
xchg
fidivl
push
xor
sub
jl
push
in
or
pop
add
ret
push
xor
loope
or
push
sub
inc
mov
stos
or
push
cmc
xchg
movsl
dec
fildll
es
daa
nop
pop
andl
inc
and
mov
js
outsl
cmp
mov
mov
icebp
imul
mov
sbb
lock
je
sub
repnz
mov
mov
jmp
aad
cs
pop
mov
push
push
mov
subl
push
sbbb
mov
insb
cwtl
pop
je
mov
push
or
and
mull
pop
cwtl
test
mov
ljmp
dec
inc
sub
xor
adc
das
add
hlt
mov
mov
adc
jne
dec
inc
ret
xor
call
jns
into
xor
int3
or
in
and
cwtl
and
ss
xor
dec
dec
in
adc
fcomps
add
inc
pop
xchg
mov
mov
push
push
int3
dec
mov
sub
ret
jl
cmp
jg
inc
jmp
cmp
cmp
jne
inc
pop
xchg
pusha
test
mov
mov
lods
test
test
xchg
xchg
push
and
or
neg
push
into
mov
xor
dec
int3
call
mov
sub
push
fsts
push
fwait
lahf
test
xchg
dec
and
adc
jl
jle
add
iret
call
dec
cmp
or
cmp
jo
loopne
add
test
ljmp
sbb
fwait
out
cmp
jmp
jb
inc
cmp
arpl
add
sub
stc
add
aad
push
inc
jns
adc
jns
jne
and
jae
nop
xchg
out
mov
mov
mov
pop
test
inc
push
rolb
in
push
jmp
push
xor
pusha
push
nop
inc
inc
rorb
add
aam
jnp
mov
pop
mov
cmp
push
flds
sarb
cmp
jl
mov
push
movl
and
jl
dec
int3
loope
jg
jle
cmp
repz
pop
add
cmpsl
cmpsl
add
pop
lock
repz
xor
cmp
popf
sarl
jae
rorl
mov
cmp
mov
push
push
cmp
std
mov
incl
mov
add
test
dec
jmp
jl
xor
shrb
push
hlt
pop
inc
call
clc
stc
sub
pop
add
lea
xchg
fiadds
pop
cmp
jg
inc
movsb
or
inc
sbb
mov
or
jne
mov
mov
cmpl
inc
push
xorb
jle
sub
jmp
add
popa
push
or
cmp
inc
add
bound
and
jne
cs
pop
or
sbb
pop
sub
movsb
lds
mov
dec
or
inc
rolb
jns
add
dec
jne
push
add
adc
inc
adc
xor
loop
lods
jp
or
test
adc
outsb
jnp
mov
mov
xchg
jg
popa
inc
xor
cmp
mov
pop
mov
int
loope
xor
dec
mov
jle
cmp
jl
or
jle
rorl
or
jae
pop
push
xchg
add
jne
jb
mov
rclb
test
rclb
mov
jmp
xchg
adc
mov
outsl
pushf
fnstcw
add
add
int3
cmp
jae
and
shld
shl
jo
rorb
and
shl
ret
or
in
rorb
cltd
xor
jp
xchg
cmp
jae
mov
aas
jo
test
jne
addl
mov
sti
stc
push
aas
push
cmp
shl
jne
inc
mov
idiv
in
in
inc
je
decl
daa
pushf
adc
xor
mov
or
js
jmp
jo
incb
fs
mov
and
or
push
add
shlb
xchg
cmp
and
lock
hlt
je
add
xchg
cmp
sub
rcrb
or
inc
and
pop
xchg
shrl
into
xchg
push
push
je
fstps
pop
add
add
or
push
xchg
add
sbb
mov
xchg
jle
add
add
mov
cmc
sarl
mov
scas
fwait
pop
int
pushf
jo
adc
dec
pop
or
add
out
or
or
jmp
or
and
cmp
dec
outsb
cltd
outsb
mov
sbb
pop
pop
mov
adc
and
cwtl
push
cltd
adc
mov
adc
test
and
mov
lret
mov
lret
and
adc
jp
orb
or
add
mov
rcll
or
add
jne
or
ret
pop
icebp
outsl
inc
sbb
test
mov
push
addr16
mov
adc
addr16
push
rolb
aaa
mov
sbb
adc
sarb
jmp
adc
sbb
es
outsb
dec
scas
and
in
push
adc
cmp
pop
pop
aad
out
dec
rcrl
call
mov
mov
inc
lods
aaa
sub
out
jo
jae
add
cmp
xchg
es
sub
ret
pop
cltd
mov
pop
iret
std
iret
pop
addl
cs
sub
pop
loop
sub
testl
cmp
inc
ret
adc
cli
inc
pop
adc
out
and
ret
mov
mov
iret
cmp
rep
dec
xor
cmp
mov
xor
pushf
mov
push
dec
cmc
rcr
jnp
xlat
test
dec
or
sub
and
lods
or
leave
pop
jmp
pop
cltd
jecxz
aad
cltd
fdivrl
mov
scas
xor
mov
sub
not
mov
cmp
aad
into
call
jecxz
pop
lret
mov
rcrl
fdivrl
add
push
pop
mov
push
pop
mov
fistpll
shrl
pop
cmp
jmp
mov
dec
mov
test
jns
out
xchg
dec
mull
aad
in
ja
addb
or
jecxz
cmp
fwait
push
and
sub
mov
je
cld
hlt
xor
adc
mov
xor
dec
imul
jmp
jmp
mov
adc
pop
xchg
enter
inc
test
dec
fstps
sbb
lock
jmp
cmp
jg
sub
inc
push
dec
mov
inc
scas
aam
push
mov
adc
cld
or
jl
pop
adc
call
inc
outsl
xor
insl
ja
and
push
outsl
filds
inc
adc
idivl
xlat
sbb
adc
call
js
add
xor
jg
sahf
dec
daa
das
divl
in
sti
or
or
inc
sbb
fs
clc
and
loopne
mov
sub
mov
and
mov
sub
push
lahf
push
jns
push
loopne
mov
call
lds
es
jp
pushf
cmp
bound
leave
test
or
jo
add
jle
movb
test
mov
jle
mov
cmc
imul
mov
pop
mov
pop
mov
inc
pushl
or
cmp
xor
jne
cmp
cmc
jl
loop
xor
inc
add
adc
mov
jg
mov
mov
mov
push
lods
mov
add
add
add
movsl
movsw
call
xchg
lds
inc
xor
les
dec
mov
add
mov
add
cmpsb
or
fnsave
push
mov
incl
and
shll
add
xchg
fnstcw
bsf
test
jno
add
ret
mov
ficoml
cmp
jne
repz
mov
push
cmp
data16
dec
xchg
mov
sub
jbe
or
enter
add
loop
aam
push
xlat
add
xor
mov
shr
or
lea
jl
or
mov
dec
lret
jmp
or
mov
or
dec
or
mov
xchg
xor
in
push
rcrl
xchg
adc
push
xchg
xor
add
xor
xchg
mull
adc
sub
or
pop
push
cmp
inc
cmp
pop
js
or
xor
xor
andb
xor
cmp
mov
adcl
getsec
dec
and
test
push
call
fucomi
call
add
add
pop
test
jmp
cmp
dec
loope
aaa
lea
ret
roll
popf
sub
subl
sar
xchg
sbb
pusha
jge
push
inc
add
cmp
dec
cmpsb
pop
cmp
sub
mov
mov
sub
call
jmp
shl
mov
jecxz
addr16
popa
subb
push
cmp
push
mov
icebp
cmpl
aam
shlb
mov
fstl
dec
pop
loope
mov
push
jmp
cmc
inc
mov
fcomi
das
pop
mov
mov
mov
cmpsl
sub
mov
cmp
push
mov
push
ljmp
aaa
xchg
dec
es
xor
sub
gs
pop
dec
dec
push
push
inc
xchg
xchg
push
push
xchg
call
xor
pusha
xchg
lea
inc
sub
out
shrb
idivb
lea
js
test
shrb
pop
roll
in
and
pushl
test
adc
adc
loop
sbb
add
roll
or
call
in
movb
jmp
andb
scas
cld
in
add
add
mov
add
incl
fdivr
pop
and
sub
je
insb
cwtl
add
and
mov
hlt
orl
jmp
xorb
popa
push
clc
adc
sahf
jo
jmp
sti
pop
add
call
insl
push
pushf
or
jmp
popa
xor
flds
add
mov
jg
je
imul
iret
inc
icebp
lcall
add
mov
push
lret
clc
aaa
cld
push
rcll
cs
dec
or
clc
jmp
add
push
push
bound
ds
pop
repz
daa
enter
sub
cli
add
mov
mov
and
pop
js
jle
add
les
stos
and
incl
cmpl
cld
iret
jmp
sbb
in
nop
mov
add
push
fisttpll
cltd
hlt
lcall
jg
xchg
lcall
sbb
jle
push
rcl
shlb
cmpsb
or
cmp
lock
or
push
popa
nop
xchg
jg
or
mov
or
jnp
and
jno
jmp
fcompl
idivb
je
push
fwait
aam
repz
push
adc
jb
mov
cmc
push
je
jmp
and
ljmp
imul
cmc
push
in
inc
sbb
mov
xchg
lret
nop
mov
mov
xor
or
pop
sarl
sbb
stos
push
inc
or
orb
cmp
pop
mov
mov
xchg
hlt
mov
and
mov
or
dec
and
pusha
mov
add
stos
mov
pop
cwtl
lret
int
xchg
int
ret
movsl
mov
and
dec
xchg
cmpsb
add
cwtl
push
xor
dec
lcall
xchg
sbb
loop
mov
es
sbb
loopne
pop
sub
arpl
pop
adc
and
ret
ret
fsubrl
xchg
hlt
cwtl
inc
sub
push
outsl
movsl
xor
insl
cmc
push
sahf
jge
mov
loopne
cmp
cmp
jecxz
pop
push
adc
addb
push
lret
inc
lea
je
sub
cmp
mov
dec
xchg
mov
pop
cmp
lcall
into
mov
ljmp
xchg
sub
adc
add
mov
jo
addr16
sub
push
jns
cs
or
push
push
loopne
inc
je
xor
mov
into
faddl
call
test
andb
add
jbe
int3
insb
aad
cli
push
popf
jmp
icebp
mov
loopne
xor
xchg
loop
ja
cltd
andl
mov
add
cs
movsl
into
nop
addr16
jne
jmp
out
ret
dec
adc
xchg
sti
mov
adc
scas
push
sub
aas
push
push
stc
jmp
outsb
leave
cmpsl
rclb
les
sbb
mov
aas
cld
es
or
dec
insl
push
push
test
imul
leave
xchg
add
call
adc
or
and
add
pop
pushl
call
sar
inc
repz
add
pop
push
mov
add
add
movsl
or
adc
push
je
sbb
xchg
andb
or
insl
sbb
mov
sbb
ds
call
push
mov
dec
xchg
add
shlb
cmpb
jne
pop
cmp
or
pop
fsubr
rcrl
cli
add
xor
outsl
dec
add
xor
lret
cmp
jae
loopne
mov
dec
out
push
insl
pop
jne
dec
sub
lret
call
jno
pop
mov
test
mov
call
or
dec
scas
inc
or
lahf
or
add
jmp
xor
into
add
mov
sbbb
aas
shr
or
mov
mov
shr
shl
into
fldenv
or
or
in
repnz
jmp
shl
dec
xchg
add
xor
mov
jl
mov
or
enter
push
cmp
mov
push
add
cmp
and
jbe
xlat
push
add
movsl
movsl
push
movsl
call
fisubrs
in
int
int
les
pop
push
add
and
loope
loope
sbb
mov
jne
pop
cmp
shl
sub
mov
sbb
cmp
lea
sub
sahf
ret
loop
lock
jae
aaa
lock
hlt
cmpsl
hlt
loop
mov
jmp
mov
data16
cld
lods
cld
enter
cmp
rcrb
mov
push
cmp
pop
cmp
jo
shl
loop
cmp
mov
je
jmp
add
out
hlt
push
inc
pop
add
clc
pop
dec
orb
xchg
sbb
xchg
pop
inc
jns
xor
sbb
and
jg
jmp
jmp
jo
jmp
enter
push
push
call
dec
es
and
test
xlat
js
xchg
pop
jmp
dec
cmp
jb
xlat
jl
mov
scas
je
inc
aaa
or
sub
loope
push
inc
jle
or
inc
jle
arpl
adc
xor
jg
enter
ds
push
jmp
inc
or
mov
ja
je
hlt
pop
loopne
ss
test
cmc
bnd
mov
jle
loope
push
ret
inc
rcl
insb
push
popf
jecxz
mov
and
cmp
sbb
les
je
dec
pop
dec
xchg
mov
jmp
stos
mov
lods
jo
ret
ror
pop
mov
or
repz
and
orb
dec
sub
jno
inc
stc
sub
add
jmp
pop
lea
xchg
add
je
ljmp
push
lea
aaa
push
sub
in
cmp
insl
insl
cmp
insb
sbb
jmp
dec
mov
jl
ss
dec
xor
nop
mov
or
pop
dec
jmp
add
inc
jmp
xor
cmp
je
cmp
cltd
jp
popa
push
mov
pop
jmp
roll
or
or
dec
adcb
hlt
adc
mov
repnz
xor
inc
fs
inc
into
sbb
pusha
mov
mov
je
rolb
bound
xlat
jg
mov
or
imul
dec
jmp
mov
cmp
repnz
outsl
or
cld
jbe
cmpb
mov
add
inc
mov
pop
jb
cmc
outsb
and
xchg
add
mul
in
std
or
lea
push
push
add
in
lods
pop
adc
mov
jo
loopne,pt
add
pop
xchg
sbb
cmp
jle
popf
cmp
pop
addb
inc
loopne
paddq
in
sarl
xor
mov
cmp
popl
enter
movsb
push
shrb
jbe
lret
out
push
mov
shrb
jmp
inc
mov
rcll
and
dec
or
inc
fcomps
jno
mov
inc
push
mov
push
sub
in
adc
or
inc
or
or
out
inc
or
xchg
push
aam
or
in
xor
int
enter
sub
dec
fadds
push
int3
or
out
inc
or
aam
or
or
inc
or
pop
lret
aas
rclb
adc
das
inc
add
cmp
or
jne
adc
add
sbb
shll
jbe
andw
mov
add
jmp
xchg
jp
leave
dec
cmp
movw
jne
inc
shrl
maskmovq
xor
cwtl
adc
adc
sub
jne
push
adc
lea
out
lahf
aam
mov
movsl
addl
outsb
push
and
inc
int
mov
inc
sar
jmp
out
or
scas
addr16
add
notl
dec
push
cli
imul
mov
lea
or
mov
loope
repnz
push
jns
mov
push
enter
cli
aas
jb
sub
in
mov
add
jg
pushf
xor
dec
push
xchg
add
lock
jmp
call
adc
pop
cli
pop
jno
pop
cli
sbb
inc
insl
jecxz
call
jne
bound
outsb
pop
neg
and
jle
outsb
out
xchg
out
repz
inc
push
mov
lea
adc
jmp
movsl
movsl
call
fiadds
adc
notl
js
test
mov
mov
xchg
popf
xchg
mov
add
jns
sbb
mov
jne
mov
cltd
cmp
lea
jl
test
sub
mov
dec
jmp
into
jnp
js
incw
incb
sub
sub
mov
fsubp
andb
xchg
out
mov
push
adc
or
fxch
insb
daa
clc
add
andb
cmpsb
lods
sub
push
sub
mov
pop
out
fadds
inc
inc
and
sub
push
ret
sbb
arpl
clc
xor
push
jmp
push
arpl
dec
dec
pusha
or
cmp
push
push
rol
rcrb
call
pop
mov
insl
dec
cmpl
ss
push
stos
xchg
daa
and
call
or
jo
jbe
or
jmp
adc
mov
xor
mov
or
or
mov
or
imul
adc
sub
jo
xor
xchg
and
iret
mov
jne
and
das
es
push
push
jmp
mov
pop
adc
xor
test
mov
push
mov
mov
add
cwtl
cwtl
jns
rcr
xor
add
add
in
inc
push
xor
cwtl
bound
cmp
cwtl
xor
cmp
add
testb
sub
mov
ret
lds
jmp
repnz
movsb
jnp
or
in
inc
mov
loope
jp
lock
xor
push
call
sub
jge
and
nop
xchg
mulb
xlat
addl
rcrl
pop
ret
jge
xor
nop
sbb
xchg
lahf
test
in
jae
cltd
xor
xorl
or
jns
jl
sbb
mov
or
les
and
jmp
sub
xchg
iret
xchg
insl
inc
pop
add
add
push
iret
and
add
dec
sbb
add
xor
xor
add
xchg
je
xchg
adc
loop
subb
pop
cwtl
rcrl
je
push
call
push
cwtl
das
push
push
push
or
mov
insl
test
add
sub
xor
or
xchg
ret
pop
int3
sub
cmp
mov
mov
lods
and
mov
roll
inc
or
add
xor
and
and
and
cmp
pop
jmp
mov
cmp
stc
lods
dec
addl
ja
pop
push
lods
ja
cmp
cmp
fsubl
push
mov
mov
xor
leave
jmp
int
push
xor
out
push
cmp
cmp
jne
js
sub
mov
jmp
xchg
push
aam
or
jae
jo
lock
icebp
loopne
loop
dec
dec
or
bound
xor
push
fwait
add
sahf
cmc
or
sar
sar
inc
inc
lcall
mov
add
dec
subl
decl
jne
orl
loopne
or
pushf
addl
sarb
xor
and
sbb
push
jl
cmp
setae
sbb
jg
cmp
jno
cmpl
add
fdiv
add
xor
jl
dec
ljmp
imul
jge
sbb
jnp
sub
jne
fisubs
insl
mov
andl
loop
cmpsb
movsb
add
add
pop
sub
pusha
psrld
or
lock
or
rcl
loop
ret
sub
sbb
ret
and
mov
sub
dec
add
push
int
stc
mov
jl
rolb
neg
sbb
cmp
sbb
mov
ja
stc
out
mov
jecxz
mov
pusha
cmp
arpl
pop
pusha
inc
push
push
test
jne
clc
dec
inc
or
or
leave
sub
and
repnz
cmp
cmpl
or
jge
pop
add
loopne
imulb
or
inc
lods
xchg
std
leave
push
repnz
std
jae
inc
fwait
ja
lea
ljmp
push
ret
xchg
cmp
add
loope
jmp
sbb
push
push
ret
or
mov
add
faddp
add
mov
push
xor
cld
lods
cltd
push
dec
es
pop
xor
iret
shll
pushw
add
inc
push
mov
les
cmovnp
imul
out
stos
in
mov
andl
adc
inc
call
adc
adc
pop
sbb
nop
inc
das
call
mov
pusha
cltd
lret
sbb
sub
mov
pop
cmc
popf
cwtl
mov
xor
into
mov
lret
jge
test
addb
imul
inc
les
cmp
xchg
push
cmp
stos
fadd
add
push
adc
add
je
cmp
inc
shrl
scas
mov
cmp
pop
outsl
arpl
jb
cmp
jbe
inc
out
lret
movsl
xor
add
movsl
popf
inc
push
pop
adc
sbb
push
ljmp
loope
loop
jp
cltd
fsubrs
in
mov
push
mov
add
iret
add
rcr
and
negl
aas
and
mov
pop
push
mov
xor
push
cmpsb
sahf
mov
inc
js
push
jns
adc
sub
lcall
dec
xchg
mov
xchg
lret
dec
xchg
fadds
or
loopne
cltd
lods
mov
mov
xor
sbb
add
push
pop
xor
jns
add
or
pop
or
cmp
push
sbb
pop
sete
movsb
lds
inc
mov
add
xor
push
or
sbb
cmp
adc
mov
adc
cmpsl
jns
pop
test
mov
inc
add
add
test
push
je
mov
jne
sbb
out
and
nop
les
cmc
mov
daa
ret
rolb
mov
pop
mov
inc
cmpl
out
adc
leave
xor
xor
lea
call
ret
inc
mov
movsb
cmp
lock
dec
or
add
outsb
rolb
je
jmp
aam
pop
scas
add
jmp
fwait
pop
mov
clc
dec
fidivs
lcall
cli
inc
inc
shlb
mov
fs
add
loop
inc
je
out
lcall
in
inc
or
and
call
das
and
pop
sub
data16
or
neg
sbb
not
and
adc
jle
fsub
push
push
pop
xchg
or
dec
or
mov
sbb
and
insb
dec
pop
scas
or
pop
add
push
test
fldenv
cmp
sub
and
ret
add
div
and
pop
mov
lea
lea
insb
mov
bound
push
jo
push
push
lea
sub
insb
pop
push
movsb
dec
mov
xorb
ret
mov
mov
xor
sahf
lret
push
call
int
cmp
stos
jmp
pop
call
movsbl
mov
out
jmp
pop
ret
loope
aam
data16
and
fsubr
lcall
cmp
data16
cmp
cmp
cmpsl
or
cmp
cmp
nop
or
jmp
push
ret
pop
push
ret
adc
rcrl
ljmp
push
stos
xchg
fisttps
lods
pop
or
outsb
pop
add
int3
or
xchg
add
int3
fstl
push
inc
or
cmp
jmp
call
clc
fidivl
into
push
popa
jp
orb
push
aam
inc
sub
or
jmp
cmpb
movsb
xor
sub
aaa
movsl
mov
mov
mov
test
inc
call
sub
push
xor
add
dec
jl
jnp
push
jecxz
in
repz
dec
adc
fiaddl
cmp
add
inc
jb
and
popa
enter
repz
push
cmpsl
dec
loopne
push
dec
inc
fs
add
dec
call
sbbb
shlb
fdivr
nop
xchg
mov
adc
jmp
icebp
mov
out
inc
pop
or
and
gs
or
sub
cmp
pop
out
loop
icebp
push
pop
int
mov
les
add
push
addr16
lds
adc
pop
adc
cmp
and
cmp
and
and
jl
and
sbb
cltd
fdivr
and
dec
and
mov
call
jmp
comiss
mov
call
jno
pop
stos
cwtl
mov
inc
pop
pcmpeqw
movsl
inc
push
jmp
incl
jmp
adc
jne
xlat
call
popa
mov
in
push
jo
or
mov
das
in
idivb
into
pop
pop
frstor
test
sbb
fisttpl
xor
mov
shlb
loop
and
mov
inc
test
ja
adc
mov
mov
mov
mov
dec
inc
cmp
jb
mov
lock
movsb
push
orl
xlat
mov
xchg
roll
testb
push
mov
inc
fnsave
push
lcall
inc
lods
and
push
xchg
mov
sbb
jo
je
iret
push
addr16
call
das
stos
adc
hlt
dec
sub
jmp
push
sbb
jns
cmc
sub
pop
cmpsl
jno
pop
enter
popf
pop
lds
cld
lods
scas
mov
sarl
cmpsb
movsl
das
lods
push
jbe
test
ss
negl
test
jmp
repz
or
test
jmp
lcall
sub
pop
dec
adc
mov
jmp
pop
xor
test
xor
sahf
in
jmp
int3
xchg
adc
jge
cmp
mov
push
inc
or
adc
push
mov
sub
aam
add
add
inc
daa
push
add
push
add
push
add
push
add
daa
push
add
add
add
and
add
and
add
and
add
push
add
push
add
push
add
push
add
and
add
push
add
and
add
and
add
and
add
and
add
push
add
and
add
add
push
add
push
add
push
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
push
add
push
add
push
add
push
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
push
add
push
add
push
add
push
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
push
add
push
add
push
add
push
add
and
add
and
add
and
add
and
add
and
add
and
push
add
and
push
add
push
add
push
add
push
add
and
push
add
and
push
add
and
push
add
es
add
es
add
es
add
push
add
push
add
add
push
add
push
add
es
add
push
add
es
add
es
add
es
add
es
add
daa
push
add
add
add
add
add
add
add
add
push
add
daa
push
add
add
add
daa
push
add
daa
push
add
daa
push
add
daa
push
add
sub
add
sub
add
sub
add
add
add
add
adcb
add
or
add
xorb
xor
add
or
add
adc
add
pop
add
adcb
add
or
add
add
add
adc
add
inc
inc
push
and
and
push
push
das
xor
xor
je
and
jne
push
popa
je
outsl
outsb
cmp
dec
outsl
je
popa
je
and
or
add
add
add
sbb
jno
jno
aas
push
push
push
push
push
push
lds
push
push
push
push
push
push
cmc
aas
add
push
aas
data16
cs
add
add
add
add
add
add
add
add
add
add
add
lock
jle
inc
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
sub
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
jo
js
js
or
or
add
add
or
add
or
or
pop
or
add
sub
outsb
add
insb
add
add
add
add
outsb
jne
insb
sub
add
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
pop
pop
dec
push
push
inc
push
push
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
add
add
pop
jns
add
xor
pop
jns
add
gs
add
add
outsl
add
add
pop
push
add
pop
arpl
jae
add
insb
fs
add
add
data16
add
popaw
bound
add
add
outsl
outsl
jb
add
arpl
insb
add
add
je
outsb
add
jae
jae
outsb
add
jb
add
add
popa
je
outsb
xor
add
popa
je
outsb
add
add
popa
arpl
add
add
popa
jae
outsb
add
add
je
outsb
push
arpl
push
jae
outsb
push
insb
outsl
xor
add
add
ja
gs
sarb
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
inc
push
dec
inc
dec
xor
add
add
sub
xor
add
add
jl
inc
add
add
add
incl
add
add
cmp
add
add
loopne
inc
add
aaa
inc
add
pushl
cmp
cmp
add
add
call
inc
add
add
add
incl
add
add
inc
add
add
add
inc
add
inc
add
incl
add
add
cmp
add
add
scas
cmp
mov
inc
add
lcall
dec
inc
add
call
inc
add
inc
add
outsb
je
insl
and
jb
jb
add
push
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
jmp
inc
add
inc
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
and
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
add
add
pushl
test
cmp
jmp
test
les
inc
add
mov
adc
inc
add
mov
add
add
imul
and
jb
outsb
and
jae
je
outsl
outsb
add
add
mov
je
inc
add
jb
outsb
and
outsl
and
add
add
add
lcall
sub
outsb
outsl
ja
and
arpl
je
outsl
outsb
add
add
add
add
insl
loopne
add
add
add
add
add
add
add
add
mov
inc
add
incl
add
add
add
add
popa
inc
add
add
add
add
add
incl
add
add
add
add
cltd
inc
add
add
add
add
add
popa
inc
add
inc
add
add
add
add
add
incl
add
add
add
add
cltd
inc
add
cltd
inc
add
add
add
cltd
inc
add
popa
inc
add
lcall
add
add
add
add
incl
add
add
add
add
inc
add
cltd
inc
add
add
add
inc
add
inc
add
add
bound
incl
add
add
add
add
inc
add
add
add
add
add
bound
nop
lcall
add
add
mov
inc
add
inc
add
js
inc
add
add
add
inc
add
add
add
in
inc
add
lcall
add
movsb
mov
and
add
adc
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
inc
add
add
add
add
inc
mov
and
add
mov
add
mov
inc
add
add
add
incl
add
add
add
leave
mov
add
add
int3
popa
inc
add
add
add
incl
add
add
add
js
inc
add
add
add
popa
inc
add
add
add
incl
add
add
add
loop
inc
add
add
add
fwait
inc
add
fwait
inc
add
add
add
mov
add
add
add
inc
add
call
mov
and
add
and
inc
add
jmp
mov
and
add
dec
pushf
inc
add
clc
mov
and
add
insb
pushf
inc
add
inc
add
add
add
incl
add
add
add
mov
add
add
nop
pushf
inc
add
fwait
inc
add
add
add
mov
add
add
lods
pushf
inc
add
decl
lea
and
add
int3
pushf
inc
add
add
add
fwait
inc
add
add
add
mov
add
add
lock
inc
add
nop
add
mov
add
rclb
add
and
add
inc
movsl
add
enter
dec
movsl
add
add
add
mulb
add
adc
add
push
add
gs
jno
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
jb
popa
je
push
push
add
jge
inc
gs
outsl
fs
gs
imul
add
mov
je
push
add
push
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
cwtl
add
je
jb
jb
je
arpl
push
arpl
outsb
add
filds
inc
gs
imul
je
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
addl
je
inc
jb
je
arpl
push
arpl
outsb
add
dec
jne
je
inc
jns
gs
outsl
push
imul
mov
push
gs
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
gs
imul
popa
outsb
jae
arpl
insl
gs
imul
jb
popa
je
inc
imul
jb
popa
je
push
jb
arpl
jae
add
mov
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
push
add
je
jb
jbe
push
jns
gs
add
inc
gs
imul
push
jo
arpl
js
add
inc
gs
outsl
imul
jbe
push
je
imul
add
je
imul
popa
je
add
inc
add
je
popa
je
inc
outsl
jb
popa
je
add
arpl
inc
gs
imul
pop
add
je
imul
bound
gs
add
into
add
outsb
fs
insb
outsl
jae
add
add
insb
gs
imul
jae
gs
push
imul
inc
imul
outsl
dec
outsl
arpl
inc
imul
faddl
inc
imul
inc
imul
imul
je
imul
push
gs
imul
gs
add
dec
outsl
popa
fs
imul
add
mov
push
jb
arpl
fs
jae
add
jno
push
outsb
insl
popa
jo
imul
insb
add
dec
popa
jo
imul
insb
add
jb
popa
je
inc
imul
outsb
addr16
add
pop
add
je
imul
add
je
imul
xchg
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
push
dec
outsl
fs
xor
inc
imul
push
gs
imul
outsl
arpl
jae
add
add
jb
insl
jo
inc
add
outsb
push
jb
arpl
jae
je
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
jmp
push
gs
imul
inc
add
je
jne
jb
outsb
je
jb
arpl
jae
add
gs
inc
imul
outsl
jo
inc
imul
gs
imul
bound
gs
add
roll
gs
jns
je
insl
inc
imul
jns
add
add
jb
insl
jo
add
mov
je
jb
arpl
jae
nop
add
imul
insb
gs
bound
arpl
add
gs
je
dec
jne
gs
add
aad
inc
gs
gs
jo
popa
je
inc
add
adc
inc
jb
outsl
jb
outsl
fs
jae
inc
gs
outsl
arpl
push
imul
push
gs
imul
jb
popa
add
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
add
inc
insb
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
inc
gs
outsl
imul
jbe
jae
add
push
dec
inc
dec
xor
cs
insb
add
cmp
push
outsb
fs
gs
popa
addr16
add
jecxz
inc
imul
outsl
ja
add
inc
push
xor
cs
insb
add
lret
add
addr16
insb
outsl
jae
dec
gs
fadds
push
gs
gs
gs
push
popa
insb
jne
inc
add
push
gs
gs
popa
insb
jne
inc
js
add
roll
push
gs
jb
popa
je
dec
gs
js
add
inc
gs
jae
jb
popa
insl
gs
add
in
add
addr16
jo
outsb
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
add
pop
add
gs
insb
inc
js
arpl
gs
add
inc
dec
dec
xor
cs
insb
add
xor
xor
fs
insb
add
imul
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
gs
gs
gs
fs
imul
outsb
je
jb
gs
jo
outsb
push
jb
inc
add
xchg
add
je
jb
gs
jo
outsb
inc
add
dec
je
jo
outsb
fs
gs
gs
inc
add
push
add
je
dec
jo
outsb
push
gs
gs
inc
add
outsl
add
je
jb
gs
outsl
outsb
outsb
arpl
add
dec
outsb
je
jb
gs
jb
arpl
jb
inc
add
dec
dec
dec
inc
push
cs
insb
add
add
je
push
fs
push
inc
push
dec
xor
cs
insb
add
loop
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
enter
je
jns
je
insl
push
imul
gs
jo
insb
insb
outsl
arpl
push
add
popa
jo
jb
add
xlat
add
insb
push
outsb
ja
outsb
add
push
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
dec
gs
jo
gs
jb
jns
adc
dec
gs
jo
jb
popa
je
add
addl
imul
jb
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
add
inc
popa
fs
jb
je
push
je
add
jae
inc
js
gs
imul
dec
gs
jo
imul
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
je
dec
popa
outsb
fs
add
add
je
imul
inc
add
popa
jo
je
imul
add
popa
jo
je
imul
add
je
push
dec
outsb
outsw
add
add
je
inc
push
add
xchg
add
je
inc
dec
inc
push
add
outsb
add
push
gs
js
gs
imul
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
add
je
outsb
push
gs
js
gs
imul
gs
xor
dec
jae
popa
fs
gs
fs
je
add
xor
dec
jae
popa
fs
outsl
fs
je
add
aaa
add
je
je
dec
popa
outsb
fs
add
out
add
jne
push
inc
jne
data16
add
mov
push
je
imul
inc
add
mov
push
je
imul
push
add
adc
push
gs
outsb
fs
inc
imul
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
cmp
push
add
xor
add
pop
push
inc
add
jmp
dec
inc
add
pop
nop
mov
inc
test
pop
adc
and
insl
xor
xor
add
aam
add
arpl
add
inc
add
pop
cmpsb
cmp
xor
adc
cmp
sub
cmp
outsb
xor
bound
and
mov
pusha
sub
add
or
push
mov
jae
pusha
es
shrl
imul
add
xchg
sub
andb
push
outsl
je
insb
cmp
and
or
jae
pop
push
inc
inc
dec
pop
mov
js
insb
outsl
imul
je,pn
arpl
add
popa
imul
jae
loopne
sbb
je
jb
sub
ror
jae
jb
jb
fldenv
pop
inc
ds
subl
or
and
fldcw
mov
sbb
nop
push
gs
adc
inc
adc
and
dec
push
add
inc
popf
add
bound
mov
fcoml
fdivrl
ljmp
jo
outsb
and
lock
inc
mov
subb
popa
fs
jne
sub
cs
ficoml
mov
cmpl
jne
jae
cmp
and
cmp
jecxz,pn
mov
pop
mov
test
daa
xor
fdivs
and
cmpsl
push
arpl
adc
les
rolb
add
jne
pushf
adc
fldl
mov
rolb
add
pop
mov
lahf
call
dec
pusha
add
mov
or
add
push
addr16
or
cmpb
pop
std
int3
inc
fs
mov
pusha
pop
or
jo
pop
push
out
jl
jg
adcb
adc
pop
scas
outsb
jb
or
dec
inc
push
inc
dec
addl
hlt
pusha
orb
pusha
dec
inc
lock
mov
cmp
xor
in
dec
sub
adc
adc
out
je
fadds
add
inc
les
les
int
fs
add
dec
inc
mov
loopne
cmpsb
ds
loopne
movsb
nop
loopne
or
ds
push
push
push
pop
nop
rcrb
rolb
pop
out
pop
push
mov
jge
dec
mov
and
dec
addb
add
inc
cli
xchg
xchg
inc
pop
or
and
adc
xor
js
or
add
jo
cwtl
xchg
cwtl
dec
rclb
test
rcr
and
xor
jle
or
loope
js
addb
cmp
add
enter
add
cltd
icebp
mov
jp
add
pop
sbb
or
inc
xor
or
push
and
fimull
xlat
pop
mov
inc
and
and
mov
and
cs
sub
jle
push
add
mov
pop
mov
inc
add
mov
add
xor
add
add
arpl
ret
dec
and
sub
js
add
gs
loopne
or
js
add
cmp
add
mov
std
jg
cmp
push
lahf
jno
sbb
adc
addl
add
sbb
pop
pop
and
jo
pop
gs
popa
jo
loop
call
in
pop
clc
movups
and
call
inc
jb
addb
push
enter
popa
inc
aaa
adc
inc
mov
dec
inc
push
push
dec
push
dec
and
dec
inc
push
inc
dec
and
xor
sub
dec
dec
push
imul
pop
mov
and
jb
jne
mov
xor
lret
test
xor
xor
cmp
and
xor
jmp
cmpl
pop
or
sahf
inc
add
add
push
inc
push
push
andl
inc
test
dec
inc
inc
inc
out
push
pusha
inc
inc
inc
add
js
fldl
pop
xchg
pop
mov
inc
inc
dec
dec
dec
dec
add
add
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
aam
add
jae
jne
ja
jns
xor
xor
ss
cmp
sub
jne
xchg
push
sub
pusha
in
out
in
test
inc
add
push
call
call
shlb
imul
lret
or
aas
xchg
addr16
push
cli
xchg
call
xor
fldt
add
rorb
adc
sbb
xor
pop
xor
push
push
loopne
push
cmp
or
xor
adcb
loopne
call
mov
pop
jl
inc
cmp
addl
andl
mov
add
push
ret
xor
pushl
mov
cmp
lock
add
mov
mov
repz
je
inc
jmp
mov
popl
pop
popa
ret
pusha
mov
mov
mov
mov
add
inc
test
add
or
clc
mov
cmp
je
mov
jmp
arpl
testb
inc
std
add
inc
inc
sbb
pop
push
mov
add
xchg
mov
mov
mov
add
ljmp
add
jecxz
dec
mov
add
xor
pop
add
cld
lods
cmp
je
ror
add
jmp
cmp
jne
loop
je
and
mov
mov
adc
out
call
or
jmp
mov
push
repnz
call
inc
jl
sbb
shr
dec
pop
cmp
rcrb
sarb
lret
and
jne
cwtl
ljmp
cmc
mov
xor
cld
fidivs
xor
loopne
add
lods
mov
jmp
jl
lock
push
pusha
push
jmp
push
dec
loop
add
mov
push
jmp
call
in
push
push
sub
add
xchg
push
inc
jmp
dec
jmp
dec
loop
das
das
arpl
adc
and
and
push
pop
ds
push
mov
jne
xchg
test
lret
and
gs
jno
imul
cmp
sub
scas
out
shrb
xchg
jp
or
jo
jmp
call
ret
adc
xorb
inc
loop
sub
mov
add
or
lret
or
clc
test
add
add
dec
js
inc
and
xor
xor
push
push
or
add
cmpl
jne
mov
add
jb
add
adc
add
add
test
je
test
je
add
add
push
call
inc
je
gs
add
add
ja
adcb
jne
ret
call
je
in
ret
pop
pop
pop
push
sub
test
add
inc
mov
rep
mov
stos
push
push
push
push
push
push
xchg
jge
jg
cmp
incb
mov
sbb
add
leave
rcr
ds
xor
pop
inc
add
pop
add
and
stc
add
add
add
add
cmp
adc
movups
add
add
add
data16
add
addr16
add
adc
movups
add
add
imul
cmc
add
add
inc
add
imul
adcb
inc
inc
jmp
or
insl
xor
sub
add
add
and
pop
xorl
sub
loop
xor
xchg
lret
cmpb
hlt
jmp
add
add
std
hlt
ret
add
xchg
hlt
fsubr
fcoms
es
mov
add
sbb
jae
lea
mov
add
loope
aad
or
lds
lret
cmc
hlt
push
movsb
std
arpl
or
movsb
jecxz
lcall
add
add
aam
hlt
mov
xlat
xchg
xlat
aaa
nop
scas
mov
mov
scas
or
xchg
lea
jnp
add
add
mov
loope
xor
test
mov
mov
mov
fwait
mov
add
pop
in
scas
mov
pop
mov
add
popf
mov
popf
es
out
insb
je
outsb
lahf
es
or
pushf
lea
call
pop
pusha
mov
push
rolb
loopne
pop
mov
inc
cmp
xlat
xchg
lock
das
mov
add
cmp
push
sub
cmp
adc
mov
pop
sbb
lds
cmc
ss
js
popf
xchg
mov
xchg
flds
sbb
aaa
or
sub
fdivl
js
out
inc
mov
js
xchg
fwait
xor
fistps
push
add
insl
add
mov
add
sub
pushf
shlb
and
cmp
mov
push
andb
push
arpl
sub
and
xchg
add
je
js
add
inc
inc
dec
dec
pop
xor
and
outsb
jae
inc
push
mov
insb
imul
sub
sub
and
xorb
cmp
sub
cmp
les
incl
jns
mov
arpl
shr
subb
cmpsl
sarb
xor
jb
jb
gs
js
sbb
lock
xchg
popf
shll
pop
inc
jne
jns
popa
jae
pop
mov
inc
inc
xor
and
mov
imul
inc
inc
push
fisubrs
push
ds
or
push
add
fimull
or
cmpb
inc
cmp
cmp
push
test
add
lret
sgdtl
push
jo
and
jae
loop
aas
jo
ret
add
and
icebp
cmp
xor
imul
and
and
pop
iret
jae
inc
outsl
sbb
mov
sbb
cmp
idivl
inc
int
or
or
jb
shlb
mov
mov
pop
pop
fs
outsl
or
in
shr
popa
cmp
lcall
mov
in
imul
lahf
out
hlt
andl
mov
and
shlb
add
dec
push
dec
jg
sub
inc
cmp
add
lock
pop
push
mov
mov
daa
je
or
push
outsb
imul
orb
dec
outsb
jbe
inc
lock
test
dec
jge
repz
inc
fs
xor
push
ret
sub
xor
dec
inc
dec
push
adcl
jbe
mov
inc
xor
mov
xchg
add
movsl
gs
jbe
push
dec
popa
fisubs
pop
adc
ljmp
scas
out
mov
cmp
sbb
aas
add
sub
rolb
rolb
leave
adc
pop
sub
mov
add
inc
sbb
add
lret
adc
or
pop
adc
add
aaa
rol
stos
jns
imul
or
push
jns
fisubrs
pusha
mov
rclb
push
xor
xor
inc
inc
popa
pusha
ljmp
int3
sbb
or
inc
push
dec
je
mov
scas
daa
dec
rolb
bound
and
sub
xor
or
xchg
inc
inc
push
pop
and
sbb
mov
mov
rolb
push
push
xor
sbb
aam
dec
push
push
insl
mov
lock
fs
arpl
fists
data16
add
lret
cs
shrb
pop
pop
pop
sub
sub
fidivs
sbb
pop
add
rclb
rcr
push
imul
cmpsb
outsl
das
loop
int
adc
add
data16
cmc
ss
push
lea
jp
push
jns
xchg
xchg
xor
gs
dec
inc
jo
jo
inc
push
pop
push
inc
xor
aaa
and
das
and
arpl
jb
lods
sub
imul
push
push
inc
or
push
add
push
gs
or
repnz
subl
cs
or
pop
shll
addr16
push
push
imul
xor
xor
out
xchg
add
loop
jno
xchg
push
and
push
push
inc
cmpb
xor
xor
adc
push
pop
dec
push
outsb
xchg
dec
push
dec
and
test
or
pushaw
add
fs
das
and
inc
sahf
add
push
xor
jns
outsl
scas
push
mov
sub
cmp
or
loopne
adc
js
into
ror
repz
cmp
test
in
int3
mov
sub
dec
outsb
mov
in
pop
dec
inc
jo
fisttps
push
popa
cmp
cmp
pop
push
dec
push
dec
ss
aaa
dec
outsl
jle
loope
imul
loope
mov
cmp
arpl
add
jae
add
dec
add
jo
cmp
cmp
mov
addb
andl
and
add
popa
insb
pop
mov
loope
jb
sub
mov
mov
into
cmp
sbb
das
push
sbbb
and
push
sub
jb
cmc
sbbl
enter
sub
ficomps
adc
loopne
pop
push
les
dec
imul
test
fidivrs
and
cmp
push
ds
and
push
dec
dec
push
or
cmp
cmp
push
das
sbb
adcl
leave
addl
dec
dec
ds
sbb
sbb
mov
in
jae
xchg
inc
xchg
and
in
icebp
or
xor
mov
xchg
outsl
sub
push
in
mov
hlt
ss
dec
inc
push
dec
icebp
sbb
dec
inc
pusha
out
pop
add
dec
dec
pop
xorb
inc
addr16
xchg
ret
imul
cmpsl
add
ds
add
jae
addr16
pop
pop
mov
pop
and
push
jae
push
lods
out
sbb
add
bound
das
clc
jle,pn
rolb
cmp
xor
xor
fldl
inc
mov
inc
inc
fbld
pop
or
mov
xor
pop
inc
or
fs
or
iret
xchg
fcmovbe
inc
dec
call
rclb
cs
mov
or
pusha
push
popa
mov
jmp
jns
enter
adc
movsl
arpl
push
and
xchg
add
and
or
dec
popa
insl
gs
fsubrs
test
push
and
adc
push
push
dec
orb
imul
ds
outsb
fs
pushf
xchg
inc
lahf
mov
sbb
push
push
cli
adc
and
xchg
ret
jae
inc
rorb
mov
push
or
dec
xor
push
and
lock
xor
loope
inc
push
mov
inc
mov
sbb
dec
outsl
jno
test
lret
and
insb
loopne
ret
rorb
inc
dec
cmpsl
pop
inc
insb
arpl
jmp
or
jp
out
rol
je
outsb
jbe
je
jb
enter
inc
xor
sbb
cmp
xor
sbb
dec
inc
push
jns
insb
cmp
push
mov
jae
lds
push
mov
in
arpl
push
add
xor
mov
dec
aaa
pushf
insl
jo
rorb
inc
gs
jo
xchg
pop
lret
dec
orb
mov
push
popa
bound
push
loopne
inc
jo
inc
outsb
jae
insb
ficoms
xchg
push
push
outsl
insb
jle
mov
out
inc
xor
shrl
mov
loopne
fmuls
cltd
fdiv
dec
xchg
dec
cmp
sarb
stos
or
inc
test
push
negb
lock
inc
sub
out
out
test
dec
rorb
dec
outsl
bound
call
inc
clc
dec
mov
jne
outsb
jg
xor
enter
jp
popa
das
xor
arpl
sub
push
sub
mov
dec
jb
jnp
mov
popa
push
fimull
std
adc
push
jb
sarl
add
loopne
mov
and
out
cltd
jo
jns
sub
scas
jle
rolb
aas
add
and
cli
cmp
inc
cmp
inc
leave
add
rolb
aas
stos
add
mov
loopne
jns
popa
jle
enter
fadd
add
pop
jae
hlt
dec
or
popa
sbbl
in
mov
bound
xlat
jbe
or
jbe
jbe
lods
push
lods
jae
pop
ja
je
outsb
cmp
ror
and
outsb
insb
mov
loopne
ljmp
adc
popa
lock
push
int3
mov
negl
mov
filds
pop
cmp
loope
push
dec
pop
pop
mov
inc
inc
inc
inc
dec
jae
and
arpl
cmp
mov
test
mov
mov
bound
pop
dec
adc
inc
xchg
je
insb
cmpsb
repnz
lods
jl
push
inc
xchg
jle
icebp
insb
mov
add
lods
pop
inc
bound
mov
xor
dec
pop
stos
adc
inc
sahf
or
inc
inc
fs
mov
inc
sbb
inc
sub
sbbl
scas
jne
scas
jnp
mov
arpl
jnp
xor
xchg
jne
jae
aam
jae
jae
sub
lret
fs
cs
xchg
push
stos
adc
or
into
push
add
xor
hlt
shlb
adc
mov
pop
push
or
inc
fs
push
outsl
imul
lahf
popa
pushf
or
dec
lock
aam
pop
in
cltd
jno
sub
and
dec
gs
and
jb
xchg
jb
mov
pusha
subl
clc
push
mov
jb
dec
push
sbb
sbb
fs
into
cli
imul
call
gs
jg
and
inc
or
mov
fs
dec
sub
sarl
jae
sbb
loope,pt
outsl
push
repnz
mov
fiaddl
push
mov
shll
fistps
add
jns
lcall
mov
std
mov
insb
xchg
jb
mov
roll
and
add
cmpsl
pop
loope
inc
sub
push
rcrb
push
aaa
gs
fildl
leave
es
cld
aam
inc
les
sub
jae
xchg
adc
imul
int3
pop
jns
dec
fs
jb
out
jnp
daa
dec
adc
cld
pop
ja
cmc
jecxz
cmp
in
xchg
scas
push
sub
outsb
push
lock
cmp
xchg
imul
outsb
insl
dec
push
inc
cmp
pop
fldenv
xchg
jb
mov
das
add
dec
inc
inc
inc
inc
lcall
mov
inc
dec
lds
add
mov
add
pop
sbb
cwtl
mov
lcall
jecxz
or
sub
incl
loopne
test
or
inc
inc
addb
dec
inc
call
mov
sbb
aam
test
sbb
test
sbb
subl
dec
cmp
test
sbb
and
rcrl
orl
test
in
sbb
test
sbb
sbbl
sbb
cmp
xchg
jecxz
xor
or
push
add
add
loopne
push
push
rol
mov
test
push
push
push
xorb
push
push
mov
mov
or
mov
test
sbb
fadd
sbb
cwtl
sbbl
test
sbb
test
sbb
sbbl
hlt
dec
sbb
aam
or
or
aam
or
or
pop
dec
inc
or
or
rcrb
or
inc
or
fsubr
orl
mov
test
pushf
nop
test
sbb
test
sbb
cmp
sbb
sbbl
adc
push
xor
mov
mov
push
nop
test
push
push
je
mov
dec
cmp
mov
or
push
push
cld
adc
mov
fmul
jb
push
push
lods
mov
cwtl
mov
push
push
jo
xorb
push
mov
xor
push
push
push
adc
orps
hlt
adc
push
push
int3
rolb
mov
push
push
nop
test
mov
push
push
push
push
inc
cmp
jb
sub
or
mov
xchg
add
fmul
add
xor
mov
xor
push
add
xor
or
rorb
sub
hlt
adc
enter
push
add
cwtl
mov
js
pop
add
push
add
mov
cld
jno
fsubrs
mov
sbb
test
jl
test
sbb
test
sbb
and
dec
popf
mov
add
aam
or
aam
or
or
aam
or
or
cmp
inc
or
xchg
lods
or
add
or
fmul
aam
or
or
mov
or
dec
or
dec
cmp
sub
push
jp
or
or
push
push
shrb
push
pushf
nop
push
push
push
test
push
push
insb
pop
dec
push
push
push
sub
push
push
push
or
xor
or
add
push
add
xor
jl
add
push
add
xor
sbb
scas
sub
clc
or
int3
rcrb
sbbl
sbb
sbbl
sbb
xor
sbb
test
clc
or
rol
inc
or
aam
or
or
push
inc
push
inc
aam
or
or
inc
or
mov
push
push
push
enter
push
mov
mov
push
push
push
inc
push
push
push
sub
call
cld
pop
sbb
les
movsb
test
sbb
mov
test
sbb
test
sbb
adc
test
add
push
sbb
subl
sbb
mov
insb
test
sbb
test
sbb
and
sbb
mov
loopne
push
push
aam
mov
mov
push
push
push
mov
mov
push
push
push
inc
cmp
push
push
sbb
mov
test
sbb
aam
sbb
xchg
sbbl
test
sbb
test
sbb
sub
sbbl
push
xor
push
push
int3
shlb
cwtl
push
push
push
je
push
push
push
pop
dec
mov
xor
mov
hlt
add
xor
push
add
xor
push
add
xor
sub
push
cmp
adc
test
inc
xor
add
sbb
rolb
mov
mov
test
push
test
cmp
test
sbb
adc
call
add
test
sbb
enter
test
test
test
sbb
test
sbb
sbbl
test
sbb
hlt
in
sbb
incl
inc
or
aam
or
or
insb
pusha
inc
or
aam
or
or
lock
faddl
aam
rol
aam
or
or
xorb
inc
push
aam
cmp
or
sbb
test
hlt
std
xor
enter
add
movsb
xchg
test
push
add
push
add
xor
xor
add
jo
xor
inc
xor
or
outsb
fadds
jl
sbbl
test
sbb
xchg
sbbl
sbbl
test
sbb
sarb
mov
xchg
test
test
sbb
sbbl
test
sbb
pushf
sbbl
sbbl
test
sbb
test
sbb
test
pusha
push
pop
lds
xchg
dec
push
add
xor
or
rorb
sub
cld
stc
xor
add
push
add
xor
js
add
push
add
xor
xor
xchg
add
add
enter
push
mov
add
xor
push
add
xor
or
inc
ja
add
not
inc
or
or
movsb
xchg
inc
or
aam
or
or
xor
inc
or
or
mul
inc
or
aam
or
or
xorb
inc
fs
aam
or
or
adc
cltd
lret
cmc
xor
enter
push
add
push
mov
xor
pop
dec
add
push
add
add
clc
dec
jb
in
stos
inc
inc
shl
les
jbe
mov
in
xor
dec
push
dec
xor
pusha
shll
cs
pop
inc
push
inc
push
inc
sbbb
inc
or
cmp
mov
mov
inc
inc
pop
test
and
cmpl
dec
push
push
push
inc
push
popf
pop
and
or
push
inc
push
push
inc
push
push
dec
js
pop
push
inc
inc
dec
pop
movsb
or
dec
push
in
adc
cs
inc
mov
jmp
ror
jecxz
add
push
js
xchg
push
push
inc
push
push
xor
xor
testl
adcb
inc
inc
dec
cld
adc
pop
push
push
push
dec
int3
flds
loopne
dec
dec
inc
dec
dec
inc
std
or
or
cmpsb
dec
inc
inc
dec
test
nop
xlat
fcomp
aas
pop
inc
icebp
mov
mov
adc
bound
clc
subb
add
inc
jae
addr16
je
xorb
stos
mov
xlat
loop
inc
inc
inc
cmp
sbb
mov
push
jns
push
and
aaa
dec
leave
pop
jb
mov
push
inc
pop
ret
pop
jb
mov
int
dec
and
cmp
les
xor
pextrw
jae
push
jle
xor
pop
inc
push
dec
and
xlat
sub
sahf
inc
push
dec
negl
sahf
mov
lods
dec
rcl
mov
data16
inc
and
in
xor
xor
inc
sbb
push
push
pop
orb
push
mov
xor
or
or
jo
pop
pop
mov
bnd
sbb
cltd
out
inc
dec
inc
js
enter
dec
arpl
mov
sub
les
pop
call
push
leave
test
cs
adc
std
inc
push
fs
push
xchg
sbb
adc
cmp
cmp
dec
and
adc
push
push
push
dec
pop
mov
and
popf
repnz
dec
push
pop
jecxz
and
mov
push
push
dec
mov
dec
mov
xchg
cmpsl
dec
dec
cmp
lahf
xor
pop
and
inc
dec
stos
or
inc
dec
adc
ret
loop
inc
dec
dec
jecxz
aas
outsl
popa
pop
sahf
popa
dec
mov
test
dec
hlt
xorb
inc
inc
scas
popa
das
adc
dec
xor
inc
inc
dec
dec
nop
les
xor
cmp
sub
sub
sub
inc
jmp
sbb
cs
push
dec
cli
subb
inc
ja
outsb
mov
repz
dec
sbb
cli
popf
push
xor
scas
push
push
call
inc
sbb
xchg
push
push
fxam
mov
add
ud1
xor
inc
pop
inc
mov
test
ret
insb
cli
rol
hlt
nop
je
inc
inc
pop
sub
mov
jno
xor
push
inc
inc
push
inc
pop
xor
xor
lds
push
and
push
nop
iret
decl
pop
and
push
push
pop
pop
pop
push
mov
loop
movsb
inc
push
push
cmp
fisubrs
mov
dec
sahf
pop
movsb
or
hlt
or
dec
inc
dec
inc
pusha
jle
push
pop
js
dec
mov
mov
sbb
adc
inc
inc
test
das
mov
inc
dec
dec
mov
xchg
jb
jae
js,pt
in
inc
inc
push
cmp
nop
jno
mov
dec
out
pop
cmc
cli
inc
push
xchg
rcrl
and
push
inc
dec
dec
lahf
pop
cmc
sub
js
and
insl
aam
mov
cmp
cmp
mov
lods
fcoms
mov
sub
or
loopne
nop
repnz
push
inc
in
or
dec
xchg
mov
inc
dec
inc
inc
jle
xorl
jp
gs
push
pop
inc
out
mov
push
dec
xor
or
adc
cmpsl
jle
loope
inc
mov
in
add
jg
push
and
out
sahf
push
inc
push
inc
adc
mov
and
cmp
inc
inc
push
lock
xor
add
push
inc
push
pop
jge
jle
inc
inc
pop
nop
inc
cmp
push
int
inc
push
nop
jle
mov
sbb
push
push
ficoms
lods
push
jg
rclb
add
dec
icebp
fdivrl
sbb
push
pop
dec
in
lahf
nop
jecxz
pop
sub
pop
sub
popf
jg
out
sti
and
xchg
sbb
dec
jge
les
push
dec
mov
mov
addl
push
dec
push
dec
lds
dec
outsl
sbb
pop
rcll
fs
out
push
push
adc
push
inc
inc
leave
lds
fmull
jge
inc
lods
fsubr
out
mov
inc
xor
outsl
and
sub
dec
xchg
das
cmp
mov
dec
inc
and
mov
push
lcall
pop
inc
dec
adc
push
inc
loopne
fdivr
test
pop
dec
dec
jg
and
sub
jl
push
inc
or
push
xor
xor
aaa
pop
xor
dec
lret
inc
dec
dec
stc
inc
cmove
cmove
inc
aaa
dec
std
inc
cli
orl
ja
insb
outsb
cmpsb
imul
xor
cmp
imul
cli
adc
popl
addl
pop
dec
inc
push
ja
dec
adc
testl
mov
xlat
daa
xlat
and
dec
inc
mov
inc
idivb
push
pusha
cmp
dec
pop
inc
pop
insb
sahf
popl
pop
pop
xchg
dec
push
repnz
xor
out
pop
inc
cmp
ds
dec
dec
icebp
add
xchg
inc
dec
arpl
or
mov
addr16
push
inc
ljmp
nop
or
jg
dec
inc
js
mov
call
sub
fistps
movsb
inc
aad
movsb
repnz
loope
inc
dec
cld
shrb
adc
imulb
inc
dec
jp
xchg
mov
xor
pop
push
push
pop
pop
repz
repnz
lods
leave
scas
fwait
testl
xchg
imul
pop
xor
aaa
lea
jle
int3
lds
jb
dec
dec
dec
pop
mov
add
xchg
mov
mov
fldcw
ret
inc
push
dec
pop
sbb
mull
hlt
and
add
push
outsb
js
inc
mov
dec
mov
mov
in
or
dec
push
sub
mov
incl
dec
inc
cmp
inc
or
pop
insl
dec
inc
popf
pop
mov
loope
cmp
mov
dec
push
mov
mov
rcrb
sbb
addr16
pop
mov
push
push
mov
icebp
rcrl
push
inc
push
and
cmova
cmp
pop
mov
add
wrmsr
mulb
dec
push
dec
push
xor
xor
clc
frstor
loopne
sub
sbb
add
dec
inc
pop
cmp
movsb
sbb
pop
dec
inc
push
add
mov
push
jle
inc
xor
and
jbe
dec
push
dec
sub
cmp
cmpsb
push
pop
test
dec
and
stos
test
xor
sub
clc
sub
mov
inc
pop
pop
jb
iret
add
rolb
mov
out
dec
push
mov
cmp
jl
fs
dec
cmc
shl
jb
fisttpl
xchg
jmp
dec
inc
sahf
and
popa
add
push
or
xchg
aad
push
pusha
ret
arpl
arpl
inc
add
dec
inc
push
xor
pop
sahf
movsb
inc
dec
inc
repz
xchg
pop
inc
repnz
int3
sti
movsb
ffree
xchg
cmp
adc
xor
jle
loopne
dec
dec
inc
dec
push
lahf
mov
adc
mov
push
push
js
adc
dec
cli
ds
cs
outsl
call
dec
push
adc
push
mov
dec
dec
sub
inc
dec
cmpsl
dec
adcb
fdivr
mov
dec
movsb
or
lds
aaa
sub
xchg
insl
and
ja
pop
and
push
dec
dec
pop
int3
mov
dec
xor
add
mov
push
push
push
sub
mov
mov
lret
iret
sub
or
popa
fldl
pop
pop
inc
testb
mov
xor
stos
jg
mov
dec
mov
jg
mov
notb
bound
scas
push
out
es
adc
inc
dec
xchg
jge
jmp
insb
sbb
mov
mov
in
cld
mov
push
push
test
js
dec
mov
mull
sub
fsts
inc
xor
cmp
push
sbb
dec
inc
icebp
sbb
orl
dec
inc
jnp
fadds
dec
bound
jl
pop
and
loopne
dec
inc
dec
mov
mov
cli
popa
sahf
xor
andl
dec
pop
dec
push
nop
push
xlat
mov
fstps
dec
push
push
xchg
mov
push
push
sbbb
push
jmp
mov
fiaddl
inc
pop
inc
shll
adc
mov
leave
inc
pushf
fsubs
mov
jne
xor
xchg
inc
push
dec
icebp
jno
gs
aam
sbb
mov
inc
and
cmp
dec
mov
and
sub
inc
add
push
push
inc
pop
daa
cwtl
or
or
daa
push
std
inc
dec
mov
push
push
out
xchg
bound
popf
pusha
or
loop
pop
ret
dec
jle
xchg
pop
xor
mov
inc
pusha
les
pushf
dec
mov
inc
cmp
ficompl
push
or
xor
arpl
push
arpl
push
imul
ja
cld
or
dec
mov
popf
inc
pop
and
lea
rcrl
scas
push
mov
sub
and
cmp
or
dec
loop
sti
mov
xor
repz
inc
push
inc
pop
pop
sub
dec
mov
sbb
mov
lods
lock
pusha
jne
add
in
cli
imul
insl
bound
pop
lods
in
leave
rol
cmove
pop
push
jns
scas
or
notl
xchg
mov
fbstp
mov
push
push
inc
addr16
jge
dec
mov
sbb
jl
dec
mov
xor
mov
push
push
pop
mov
insb
mov
dec
imul
inc
arpl
sub
pop
cmp
dec
jbe
inc
push
dec
inc
icebp
pushf
adc
xchg
add
jp
dec
dec
inc
xor
xor
das
inc
cwtl
shrl
popf
xchg
std
inc
jo
xor
ss
mov
inc
and
inc
repnz
pop
adc
inc
cmp
xor
fldl
cmovge
inc
dec
dec
and
rcrb
sahf
jns
hlt
ja
dec
pop
insl
scas
aad
jle
stc
clc
loopne
inc
xor
stc
jb
dec
test
fndisi(8087
dec
push
sub
imul
push
push
pop
call
push
add
mov
xor
or
pop
imul
js
lods
cwtl
pop
jmp
arpl
mov
push
loope
jecxz
sub
adcl
and
xor
push
dec
repz
xor
arpl
in
enter
pop
leave
and
or
pop
push
fcom
pmaxub
add
cmpl
out
mov
movsl
ss
mov
push
xchg
cld
mov
xlat
push
nop
add
inc
dec
inc
pop
pusha
ror
out
imul
dec
push
inc
ret
roll
push
mov
inc
push
or
inc
inc
inc
pop
in
xor
jbe
es
push
inc
out
rolb
mov
xchg
mov
cmp
push
hlt
outsl
negb
cli
xchg
xchg
add
inc
popf
xor
lahf
jl
lahf
shll
mov
inc
xor
cmpsl
push
cmp
std
and
pop
or
inc
pop
pop
pushf
arpl
div
mov
sub
xor
pinsrw
call
iret
push
notl
xor
mov
push
push
pop
mov
pop
mov
cld
pop
je,pn
sbb
mov
inc
in
scas
popa
loopne
xor
jmp
arpl
leave
pop
repz
test
jl
and
push
push
aad
push
cmp
sbb
sbb
cld
push
push
andps
dec
fistl
movsb
inc
add
mov
add
jne
int3
mov
mov
fdivrs
aas
dec
inc
lahf
ja
fists
fs
mov
jbe
push
jecxz
push
loope
into
sub
dec
jge
icebp
xor
repnz
mov
push
dec
inc
cmc
adc
iret
xor
mov
xor
xchg
dec
add
scas
pop
repnz
inc
xchg
loopne
xchg
dec
push
sub
dec
cmp
testb
jmp
push
pop
sub
sbb
and
outsb
pop
cmp
sub
jmp
push
out
pslld
pop
adc
push
add
adc
mov
push
or
pop
mov
jae
xlat
jmp
sbb
dec
lds
fidivrl
rorb
dec
push
jle
shrb
leave
push
xchg
cld
cmp
pop
inc
shll
inc
cmp
lock
clc
adc
and
imul
fldcw
hlt
push
push
enter
mov
inc
adc
adc
inc
push
push
dec
aas
mov
lock
sub
adc
push
dec
mov
stos
inc
sub
xchg
jae
enter
dec
or
and
sub
dec
fildl
cmp
stos
push
les
iret
jle
push
das
sbb
and
es
imul
xchg
jg
mov
fistpll
sbb
xchg
hlt
in
add
inc
in
mov
cmpl
push
adc
in
cmp
call
pop
in
jecxz
dec
dec
cwtl
ja
push
shr
sbb
pop
push
jl
mov
pop
popa
outsb
and
testb
mov
sar
das
inc
mov
inc
inc
push
push
add
not
dec
push
dec
ss
aas
jg
pushf
xchg
pop
xchg
inc
push
push
imul
mov
or
mov
push
sub
daa
or
test
inc
es
inc
pop
loopne
inc
inc
mov
jecxz
lds
sbb
push
mov
inc
push
cmp
int3
jp
loopne
push
jge
ficoml
xor
in
and
outsb
je
jae
insb
sbb
adc
insb
shrl
or
insl
arpl
test
inc
inc
mov
inc
nop
popa
jbe
imul
and
fs
xchg
push
dec
pop
jnp
mov
pop
fisubrl
pop
sti
add
bound
add
push
insl
sbb
mov
bound
push
andl
inc
ds
sar
push
dec
outsb
gs
and
push
mov
pop
and
jae
jae
outsl
mov
jne
call
ret
jae
subl
and
add
imul
cli
inc
gs
jb
xor
arpl
xchg
xchg
sub
insl
add
dec
shll
loopne
add
bound
pop
mov
nop
je
lcall
cltd
xor
scas
cmpsl
movsb
leave
lret
in
pop
test
aas
int
add
jmp
jno
jae
lods
adc
ja
add
es
int3
das
js
pminsw
push
or
aad
fdivs
imul
xlat
loopne
aam
cmp
xor
and
insl
inc
fdiv
fimuls
xor
xor
add
xor
xor
xchg
loop
xor
lcall
orl
in
dec
cmp
xor
ja
mov
dec
stc
fsubs
and
int
jb
arpl
in
movsl
dec
outsl
sub
shrl
sahf
pushf
dec
and
loop
imul
les
jge
push
or
add
insb
pop
sub
in
sbb
ja
frstor
shlb
outsl
and
shrl
faddl
inc
pushf
out
xlat
int
jmp
je
add
adc
cs
jmp
cmpl
add
jns
xorl
pushw
push
pop
sti
call
push
outsl
add
jae
pop
dec
push
dec
pop
cmp
pop
inc
mov
cmpsb
push
mul
arpl
pop
push
shlb
pop
mov
xchg
and
dec
aaa
ljmpw
outsl
xor
inc
sbb
popa
pop
insb
adc
call
mov
outsl
je
mov
lock
inc
push
das
inc
out
roll
and
ret
divb
ds
filds
jno
jo
mov
and
in
andb
cmp
sub
sub
sub
cmpl
loop
inc
rol
popa
jae
push
jnp
push
jge
add
adc
int3
inc
add
lcall
xor
into
cmp
enter
sub
add
mov
aaa
shl
rorb
lcall
ret
or
cmp
ss
push
add
dec
push
or
test
daa
loopne
imul
inc
push
xor
pop
loop
mov
insw
dec
and
jg
lcall
and
sbb
repnz
nop
stos
jbe
xor
and
shlb
push
jo
adc
test
xchg
jo
push
pop
jae
or
insl
jb,pn
sub
mov
ds
xchg
iret
cmp
inc
xchg
lds
pusha
mov
xlat
enter
popa
mov
add
cmp
or
popa
jae
sub
insb
sub
inc
adc
or
jae
nop
push
inc
inc
inc
insb
and
xor
imul
insl
cmp
je
shr
outsb
jp,pn
repz
push
mov
and
mov
xchg
jle
and
adc
clc
pop
push
pop
in
cmp
sub
pop
adc
cmp
dec
adc
xchg
jo
push
or
jbe
and
jmp
jmp
and
cmp
mov
add
jae
cmpsb
mov
pop
icebp
cmp
imul
es
cmp
outsb
jbe
int
and
popf
push
dec
cmp
cmc
or
cmp
jns
adc
push
dec
cmp
mov
aam
cld
inc
add
sahf
and
inc
jbe
cvtpi2ps
push
pushf
stos
jns
inc
les
adc
sar
inc
dec
outsl
stos
mov
jg
adc
insb
mov
mov
pop
mov
sub
out
mov
imul
mov
push
or
jno
sbb
scas
pop
stos
jne
cmp
adcb
clc
jg
jmp
in
js
or
movsb
loopne
pop
sbb
dec
cmpsl
xor
dec
sbbb
jle
mov
gs
inc
mov
outsb
xchg
enter
cmp
pop
adc
and
fadd
mov
xchg
leave
rclb
add
xor
fs
add
cmp
cmc
add
stos
addr16
insb
scas
enter
std
adc
bound
popa
loopne
jecxz
sub
pop
xchg
lea
jns
and
add
pushf
adc
or
pop
das
inc
jae
popa
out
pop
jl
insl
push
mov
lret
lret
fstps
dec
adc
ret
aam
sbb
fwait
int
ret
pop
fstpl
xorl
mov
push
aaa
shrl
clc
in
push
insb
push
or
subb
and
pusha
insl
sbb
testb
gs
in
inc
pusha
inc
pop
adc
loopne
aas
popa
jl,pt
xchg
xor
fsubs
inc
jae
popa
popa
fs
fstpt
jb
repz
xchg
jbe
dec
repz
mov
pusha
out
mov
jae
xlat
fcoms
add
js
addl
adc
xor
sbb
cmpl
loop
pop
xchg
mov
add
add
mov
outsb
sbbl
test
or
cmpsb
popf
arpl
adc
jae
and
testl
ss
repz
icebp
jl
cmp
sbb
sarb
jne
xor
cmc
shl
je
xchg
cs
pop
movsb
xor
dec
inc
pop
add
jmp
jecxz
sahf
inc
xor
mov
outsl
xor
loopne
popa
dec
cmpsb
jae
std
add
jae
cmp
aam
aam
and
jo
or
leave
insl
gs
mov
out
lods
jbe
jg
sub
push
dec
das
dec
lcall
fldl
xor
insb
loope
sahf
out
iret
jno
xor
sti
cwtl
test
shlb
bound
repnz
lret
xor
or
in
push
jno
push
mov
nop
cmp
enter
rolb
push
jne
movsb
sti
dec
add
jbe
jb
mov
fnsave
mov
mov
pushf
pop
adc
cwtl
sub
adc
add
fmul
jp
push
lock
and
and
in
or
fwait
lcall
addb
dec
sub
lods
lret
popf
jne
int
inc
bound
inc
fdivrl
and
stos
mov
rorb
ret
pop
pop
push
or
add
add
jl
xor
pop
jge
dec
cmp
sbb
inc
xor
fidivrl
out
xchg
call
ja
dec
addr16
jns
repz
lds
jg
in
flds
inc
call
xor
xor
dec
mov
add
popw
and
pop
lret
add
xlat
lock
ret
jne
scas
dec
cmp
ror
ss
and
lret
cmp
cltd
xchg
fisubl
int
mov
mov
in
pop
das
inc
add
stos
imul
mov
ret
sub
jo
dec
dec
jp
adc
mov
popa
insl
inc
loop
xor
push
fwait
daa
outsl
and
int
or
add
xchg
mov
fs
paddq
mov
inc
js
push
sbb
cmp
aas
mov
rolb
aam
and
aam
cs
add
cmpb
aam
sbb
add
shll
xorb
fs
adc
or
or
jne
jbe
mov
xor
cmp
inc
iret
sahf
inc
sub
push
insb
jl
aas
mov
addr16
add
pop
jns
outsl
ss
cli
mov
clc
call
cmc
imul
imul
xchg
push
jnp
cmpsb
pop
and
jbe
jae
ret
loope
arpl
inc
mov
adc
daa
daa
xchg
mov
mov
js
jno
stos
stos
inc
and
add
inc
clc
push
outsb
gs
das
or
lea
enter
push
adc
mov
jne
jecxz,pn
sbbl
mov
aam
push
pop
push
push
mov
push
push
dec
push
aas
and
fs
mov
iret
nop
add
stc
out
jb
and
dec
mov
sub
cs
add
add
pop
aam
xor
ss
enter
inc
push
lahf
or
arpl
das
loopne
pop
cmp
add
push
jp
and
pop
pop
movntq
out
inc
push
or
arpl
outsl
test
push
sub
inc
sub
jne
sti
adc
push
push
dec
dec
inc
jno
cs
outsb
jl
jb
add
and
sub
pusha
and
ret
aaa
aaa
push
call
or
orb
add
inc
rolb
adc
mov
add
test
mov
cs
xor
xor
cmc
in
xchg
inc
shlb
jle
dec
lods
cmp
adc
ja
xchg
cmp
xor
aaa
stc
push
push
mov
dec
mov
push
dec
leave
leave
mov
pop
add
mov
mov
stc
and
or
jb
dec
dec
mov
jb
into
xchg
sub
sub
movsb
and
pop
cwtl
add
std
arpl
inc
add
push
xchg
aas
sbb
dec
or
repnz
inc
je
je
pusha
xchg
cmp
sub
adc
or
inc
sub
inc
add
add
add
pusha
ret
pop
add
into
push
loopne
adc
aam
roll
sbb
into
inc
in
sub
aam
cmp
cmp
inc
sbb
or
push
lea
faddl
je
or
ret
or
clc
xchg
pop
jne
xchg
hlt
arpl
jne
adc
and
pop
std
or
cmpl
aam
inc
sbb
sbb
adc
pop
jne
mov
lods
jne
pop
jne
movsb
and
out
cmp
lcall
xchg
xorb
jg
incl
sahf
or
fisttpll
shrb
loope
adcb
add
ret
imul
imul
add
in
xor
add
cwtl
in
sbb
out
push
outsl
jp
orl
or
push
push
push
or
mov
outsl
push
or
repnz
in
pmaxub
adcb
sbbb
andb
repnz
inc
cmp
jns
push
push
das
sub
mov
fildll
insl
mov
xor
daa
xchg
dec
adc
xorb
addb
andl
xchg
test
xor
mov
xchg
cmpsl
mov
in
in
xlat
mov
in
pop
ljmp
mov
and
add
dec
adc
sbb
test
sbb
push
push
pop
push
addl
adc
add
jmp
stos
add
add
hlt
xchg
xor
add
fildl
add
movsb
fistpl
inc
cmpb
addb
fbld
add
jle
or
add
pop
fs
iret
cmp
inc
mov
add
inc
mov
add
xchg
iret
mov
in
call
nop
jle
push
add
ficompl
pop
fisubrl
xor
jo
clc
rcr
fsubp
stc
xor
pushf
mov
rorb
mov
mov
stos
pop
sub
orl
orl
sarb
xchg
add
in
enter
and
pop
jo
cmpb
and
lock
dec
mull
jmp
lahf
dec
mov
push
inc
shlb
sub
stos
dec
hlt
sub
xchg
inc
stos
and
nop
xor
cmp
push
pop
jns
dec
call
cmp
pop
cmp
fdivr
mov
jge
add
inc
sbb
add
mov
mov
sbb
or
add
inc
jae
mov
call
sub
lock
add
push
jecxz
or
jl
fistps
jne
or
push
cmp
and
pop
loop
adc
cs
cmpsb
add
repz
dec
dec
loop
fs
add
insl
adcb
add
in
rol
aam
insb
stos
inc
and
xchg
es
pop
mov
dec
xchg
pop
inc
add
test
inc
sbbl
or
or
inc
jg
add
ret
enter
and
fadds
or
ret
cmovno
mov
hlt
adc
and
add
mov
or
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
add
add
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
mov
popl
cmp
cmpsb
iret
decl
js
outsl
add
add
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
add
add
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
testl
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
add
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
add
add
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
shll
add
and
add
sti
aas
jno
or
mov
add
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
add
add
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
add
add
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
rcrl
add
jle
push
jl
mov
das
lea
mov
inc
aas
movsl
add
add
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
add
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
xchg
inc
inc
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
add
rclb
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
add
and
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
push
xchg
jge
ficomps
frstor
lret
add
inc
push
gs
ja
addr16
fldt
push
and
pop
jne
dec
inc
jae
add
and
pop
outsl
pop
jb
mov
cld
pusha
insb
inc
xor
xor
push
sbb
mull
fcompl
aas
xchg
pushf
mov
add
add
cld
incl
add
add
add
add
add
and
add
xor
add
nop
add
add
mov
xor
jmp
or
push
push
popa
arpl
xor
fs
jo
gs
imul
je
outsb
and
jb
imul
xor
and
cmp
cmp
push
imul
jb
jp
imul
outsb
and
popaw
insb
and
gs
bound
imul
or
add
pop
sub
push
pusha
xor
push
pop
push
push
mov
push
std
sub
mov
add
mov
add
push
mov
rep
mov
add
mov
cld
lods
mov
mov
jmp
xor
shld
sub
jle
shl
ret
je
neg
mov
shr
xchg
lods
xchg
shld
shl
mov
sub
ret
mov
lods
xchg
mov
ret
shl
dec
je
ret
lods
mov
mov
jb
movsb
shl
dec
ja
je
mov
call
cmp
jb
mov
call
mov
mov
add
dec
jg
shl
sub
jmp
inc
shl
sub
call
cmp
je
add
mov
movzwl
sub
mov
jmp
cmp
pushf
mov
call
cmp
ja
je
add
jmp
call
adc
jmp
cmp
je
add
cmp
jb
je
mov
call
add
jmp
mov
call
add
jmp
jmp
call
adc
mov
mov
shl
sub
call
add
mov
movzwl
sub
popf
jb
mov
je
inc
jmp
call
jb
xor
call
adc
jmp
mov
call
or
jne
mov
call
or
je
add
add
jmp
mov
push
mov
cmp
je
inc
inc
shl
dec
call
inc
jae
call
add
jmp
mov
call
pop
mov
xchg
rep
mov
jmp
pop
add
sub
mov
xor
rep
pop
pop
cmpb
je
add
jmp
mov
mov
add
add
mov
sub
add
mov
add
cmp
je
add
add
xor
mov
inc
cmp
je
add
jmp
pop
popa
pop
mov
add
add
pop
pop
jmp
add
inc
add
mov
add
mov
add
fistpll
add
js
add
add
add
add
loopne
add
push
add
clc
cmp
add
add
add
add
add
sbb
add
push
add
add
or
or
sbb
or
or
or
or
prefetchwt1
or
adc
or
adc
or
or
or
movups
adc
push
or
or
or
adc
or
or
push
adc
push
or
or
or
or
or
or
wbinvd
or
or
add
or
xchg
add
mov
add
or
pop
add
add
add
add
nop
add
lea
add
or
push
ud2
or
add
xchg
add
movb
add
add
add
add
xchg
add
roll
add
add
add
add
add
add
add
fcoml
add
or
adc
adc
adc
add
dec
add
add
xchg
add
insb
pop
add
or
inc
gs
imul
je
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
gs
gs
inc
jb
je
arpl
push
arpl
outsb
dec
jne
je
inc
jns
gs
outsl
push
imul
gs
fs
imul
dec
popa
outsb
fs
gs
jb
je
inc
imul
popa
arpl
insl
gs
imul
je
inc
imul
je
push
jb
arpl
jae
inc
js
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
je
outsl
fs
gs
popa
outsb
fs
gs
inc
gs
jb
jbe
push
jns
gs
inc
gs
imul
push
jo
arpl
js
inc
gs
outsl
imul
jbe
push
je
imul
je
imul
popa
je
inc
gs
popa
je
inc
outsl
jb
popa
je
inc
gs
imul
gs
imul
bound
gs
inc
imul
gs
imul
outsl
push
jns
je
insl
push
imul
push
imul
arpl
inc
imul
imul
inc
imul
inc
imul
gs
push
gs
imul
gs
outsl
popa
fs
imul
inc
gs
jb
arpl
fs
jae
push
outsb
insl
popa
jo
imul
insb
gs
popa
jo
imul
insb
gs
outsb
je
jb
jb
je
arpl
push
arpl
outsb
push
gs
imul
gs
imul
imul
outsl
dec
jne
je
inc
jns
gs
gs
jne
jb
outsb
je
jb
arpl
jae
outsl
fs
xor
inc
imul
insl
imul
outsl
arpl
jae
jae
jb
insl
jo
inc
dec
jo
outsb
push
jb
arpl
jae
gs
outsl
arpl
gs
outsb
outsw
inc
inc
gs
gs
imul
gs
jne
jb
outsb
je
jb
arpl
jae
fs
gs
gs
inc
imul
inc
imul
imul
bound
gs
inc
gs
jns
je
insl
inc
imul
jns
insb
jae
jb
insl
jo
inc
js
je
jb
arpl
jae
popa
imul
insb
gs
bound
arpl
gs
je
dec
jne
gs
inc
gs
gs
jo
popa
je
inc
push
gs
jb
outsl
jb
outsl
fs
gs
outsl
arpl
push
imul
imul
jb
popa
fs
gs
outsl
insl
jo
je
jb
popa
insl
gs
inc
insb
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
gs
outsl
imul
jbe
jae
outsl
insl
jo
jb
push
je
imul
jo
jb
push
je
imul
inc
outsb
fs
inc
imul
inc
jb
je
arpl
push
arpl
outsb
inc
js
je
push
inc
gs
outsl
fs
gs
imul
inc
jb
popa
je
push
push
inc
gs
popa
jae
inc
jb
outsl
jb
jb
popa
je
inc
imul
outsb
addr16
push
insb
gs
gs
je
imul
push
inc
gs
je
imul
inc
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
inc
insb
jne
push
inc
jne
data16
push
gs
je
dec
popa
outsb
fs
gs
jae
popa
fs
outsl
fs
je
dec
jae
popa
fs
gs
fs
je
push
gs
outsb
push
gs
js
gs
imul
gs
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
gs
js
gs
imul
gs
gs
inc
dec
inc
push
inc
gs
inc
push
inc
gs
push
dec
outsb
outsw
dec
inc
dec
popa
jo
je
imul
popa
jo
je
imul
inc
imul
gs
je
dec
popa
outsb
fs
gs
gs
popa
outsb
fs
gs
outsl
jne
je
gs
jo
imul
gs
js
gs
imul
fs
jb
je
push
je
dec
gs
jo
gs
insb
insb
outsl
arpl
jb
jne
insb
inc
insb
insb
outsl
arpl
jb
jne
insb
inc
jb
gs
gs
jo
jb
popa
je
dec
gs
jo
gs
jb
jns
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
inc
gs
gs
imul
outsl
insl
insl
popa
outsb
fs
imul
push
je
jb
jne
dec
outsb
outsw
inc
push
je
push
outsb
ja
outsb
fs
gs
jo
jb
gs
gs
jo
insb
insb
outsl
arpl
je
jns
je
insl
push
imul
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
inc
imul
outsl
ja
push
outsb
fs
gs
popa
addr16
inc
gs
jae
jb
popa
insl
gs
push
gs
jb
popa
je
dec
gs
js
push
gs
gs
popa
insb
jne
inc
js
push
gs
gs
gs
push
popa
insb
jne
inc
push
gs
insb
outsl
jae
dec
gs
gs
jo
outsb
dec
gs
js
push
push
js
arpl
gs
incl
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
orb
gs
gs
jo
outsb
inc
dec
outsb
je
jb
gs
jo
outsb
push
jb
inc
dec
outsb
je
jb
gs
gs
fs
imul
outsb
gs
insb
outsl
jae
dec
popa
outsb
fs
gs
outsb
je
jb
gs
jb
arpl
jb
inc
dec
outsb
je
jb
gs
outsl
outsb
outsb
arpl
je
jo
jo
outsb
push
gs
gs
inc
dec
je
jo
outsb
fs
gs
gs
inc
dec
gs
push
fs
or
add
add
add
add
or
add
add
mov
or
add
add
add
add
add
add
add
add
cmp
add
push
adc
add
add
add
sub
add
rorl
in
rorl
std
rorl
push
rorb
sbb
rorb
add
add
cmp
or
add
add
inc
rorb
add
add
push
rorb
add
add
push
add
addb
add
data16
add
add
jbe
or
mov
or
pushf
rorb
xchg
rorl
mov
add
add
rorb
lods
rorl
enter
mov
rorb
rorl
fcom
or
rcl
or
loopne
or
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
inc
imul
outsl
ja
add
add
je
jae
jb
popa
insl
gs
add
add
gs
insb
inc
js
arpl
gs
add
add
je
jb
gs
jo
outsb
inc
add
add
je
push
fs
add
rorl
inc
arpl
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
aas
add
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
out
add
add
or
add
add
sub
push
dec
fadd
xlat
mov
and
sub
popf
push
iret
notb
inc
pop
push
in
xlat
jb
pop
sahf
ja
lcall
ljmp
fnsave
xchg
fwait
jb
cmpsb
pop
pop
push
jg
ja
aaa
popf
bound
mov
lret
cs
push
sbb
dec
jl
addl
fcmovnbe
xchg
les
stos
push
into
cmp
addr16
rorb
jno
loope
or
lcall
sbb
lea
xchg
xor
pop
das
rcll
clc
cwtl
add
orl
in
add
lea
push
rcrl
out
push
bound
cltd
sbb
cmpsl
mov
or
jle
and
xchg
and
inc
leave
das
fs
pop
ja
push
ret
daa
push
lret
jbe
js
dec
xor
jnp
dec
mov
jp
lock
jle
arpl
das
and
inc
jb
cwtl
mov
xor
inc
test
adc
sbb
dec
xor
test
add
arpl
sub
outsb
fdivrp
cltd
or
sbb
rolb
xchg
push
mov
cmc
mov
xor
xor
push
icebp
lret
mov
push
pop
add
sbb
lds
jle
sub
leave
push
fwait
xchg
popf
xchg
stos
push
jae
je
andl
lods
out
daa
sub
and
addl
rcll
sub
jns
or
jp
and
stos
mov
push
sbb
negb
lock
repz
int3
lret
add
lret
in
insb
lods
push
xor
mov
mov
dec
fisttpl
mov
inc
scas
aam
incb
jg
adc
and
movsl
lcall
cli
popf
cltd
push
insl
pop
das
mov
mov
or
mov
dec
push
scas
movsl
inc
mov
repnz
mov
pop
xchg
adc
fcoms
sbb
adc
or
cmpl
mov
jno
mov
lock
xchg
repnz
and
mov
xchg
push
mov
pop
xlat
dec
aaa
shll
or
andl
dec
es
push
mov
insb
mov
mov
mov
mov
dec
adc
mov
push
call
mov
mov
or
pop
and
and
ret
fldenv
imul
add
jge
mov
jle
cld
roll
jae
dec
popa
fisubs
mov
or
sbb
stos
jno
adc
sub
cld
adc
test
leave
sbb
push
xchg
xlat
mov
les
pop
fwait
or
sub
cmc
push
nop
mov
out
jg
xor
xchg
out
std
jo
adc
fmuls
add
inc
movsb
xchg
imul
adc
shrl
sarb
sub
cli
loope
pop
xchg
std
adc
sti
insb
es
and
out
jecxz
inc
adc
pop
dec
pushf
js
lock
jae
add
push
outsb
adc
jns
es
cli
int
roll
add
mov
insb
cmp
ja
scas
shrl
push
pop
mov
add
rcll
mulb
orl
es
mov
sahf
cmpb
movsb
testb
cmp
xchg
mov
aam
jecxz
scas
scas
lcall
sub
packssdw
pop
xchg
aam
lret
xchg
ret
inc
add
pop
xchg
test
inc
lcall
lea
xchg
iret
adc
testb
inc
sub
sbb
pop
lret
aad
mov
or
outsl
or
movsl
jne
mov
inc
outsb
lods
pop
xor
sbb
mov
push
ret
xchg
fucomi
mov
outsl
aad
or
jne
insl
sahf
cld
hlt
sti
xchg
nop
fstpt
sub
cmpsb
mov
outsl
movsb
dec
scas
sbb
or
stc
insb
mov
testl
decl
mov
imul
sub
gs
pop
clc
cmp
pop
iret
dec
add
mov
daa
and
push
cmp
int3
in
sub
jg
sub
sbb
pop
sbb
ja
rorl
dec
in
outsl
pop
sbb
mov
test
fldl
mov
xchg
out
mov
sub
mov
sbb
or
mov
in
jmp
xchg
test
jmp
loopne
imul
push
in
and
push
mov
push
fs
insb
xchg
mov
lods
gs
ret
pop
mov
sbb
incb
loopne
mov
imul
les
push
cs
mov
mov
arpl
andb
hlt
out
fwait
in
cli
add
mov
ret
xchg
out
pop
mov
ljmp
addb
or
adc
xchg
cmp
cmp
pop
jp
fadds
mov
insl
rolb
push
lea
cmp
lock
test
in
fidivs
mov
loope
aaa
dec
push
cmp
flds
and
inc
into
and
cld
ret
xchg
rolb
lcall
mov
es
jecxz
pop
jl
and
jge
jae
cmp
out
mov
mov
and
add
mov
jp
aam
sub
popf
jg
xor
fisubl
sub
and
aaa
pop
push
xchg
call
dec
push
or
dec
xor
push
xor
int3
mov
lcall
popw
sbb
adc
push
and
or
push
xorb
adc
sti
outsl
push
xchg
fmul
adcb
adc
mov
sub
fs
in
mov
sbb
adcl
xchg
movsb
or
movsb
out
add
jo
pop
push
lcall
cmp
test
movsb
inc
leave
insl
lcall
or
inc
dec
lret
test
lods
outsb
lods
fistl
pusha
dec
mov
cmp
test
push
cmp
in
pop
xchg
inc
adc
idivb
insb
adc
mov
pop
add
pop
mov
sbb
shrl
test
and
shrb
dec
or
fwait
mul
loop
or
into
jnp
pop
mov
mov
or
adc
pop
xor
mov
inc
fcmovnu
or
dec
pop
cmpsb
jge
ds
add
dec
mov
lcall
pushf
inc
ds
mov
lret
cmc
out
jb
mov
cmp
sti
loop
add
movsl
shlb
test
cmp
jo
add
jne
pop
cs
fcomps
vphadddq
icebp
cmp
mov
lret
adc
xchg
lock
jmp
aad
enter
pop
roll
push
jb
cmpsb
mov
int
in
jecxz
lock
insl
xor
mov
or
fsubrl
fstpl
insb
cmp
jecxz
ds
outsl
outsl
sbb
out
xchg
cmp
xchg
frstor
pop
mov
mov
in
std
lods
sub
push
js
ss
aaa
stos
xchg
add
gs
je
jmp
lods
pop
mov
inc
jbe
xchg
mov
out
mov
scas
mov
push
xlat
int
sbb
xor
shrl
mov
sbb
sub
in
cs
loop
fimull
or
push
clc
stos
xchg
xlat
pop
arpl
adc
adc
xor
cmp
int3
mov
or
sbb
or
sbb
mov
ljmp
xchg
fadds
int3
jp
push
or
mov
add
daa
push
dec
ret
icebp
leave
fs
mov
gs
lea
sahf
mov
fsubrs
and
adc
paddsb
in
sub
xchg
daa
sub
ds
test
je
or
lods
fstp
pop
repz
xor
rcrb
lahf
lds
jmp
insl
or
cltd
pop
or
das
pop
adc
sbb
je
or
imul
and
ret
fs
add
push
sbb
mov
push
mov
push
ss
or
lea
xchg
cmp
lock
xchg
cmp
or
js
xor
adc
mov
mov
push
shlb
in
and
rcll
int3
cs
inc
roll
mov
loopne
mov
adc
cmp
repz
sahf
in
adc
adc
mov
and
fildll
inc
dec
rol
int
and
or
fisttpll
push
push
fldl
or
xor
jno
pop
enter
and
dec
xchg
lock
xchg
add
pop
out
jp
aaa
lret
mov
adc
add
add
xor
data16
ffree
xchg
lahf
jl
std
add
add
iret
jmp
cli
sub
pushf
add
in
adc
add
pop
scas
popl
xorl
sbb
dec
cltd
shll
loope
sti
or
shll
mov
add
lock
roll
shll
idivb
xchg
mov
gs
out
pop
mov
mov
mov
outsb
pop
inc
and
loop
xchg
test
or
pop
add
fisttps
fs
cli
push
hlt
xchg
adc
sub
cmp
cmc
inc
imul
cmp
psrld
sbbl
iret
xchg
or
inc
adc
jnp
inc
dec
js
int
icebp
sbb
fildl
push
out
hlt
mov
push
int
dec
cmpsb
jge
fistps
cld
lret
aam
ret
inc
movsb
arpl
sbb
ficoms
in
icebp
xchg
int3
sbb
mov
jp
jb
jecxz
rol
fldt
out
stos
mov
jns
outsl
shrl
aaa
subl
iret
cmc
ja
clc
xchg
repz
xorb
and
arpl
push
mov
sub
sti
or
xchg
add
daa
inc
daa
inc
loope
sbb
fistps
test
leave
xor
iret
jg
jg
ss
out
lret
or
jmp
icebp
dec
mov
inc
sub
ss
dec
cs
ja
or
mov
mov
clc
rorb
jecxz
mov
in
mov
pop
in
clc
jmp
lcall
adc
cmc
and
xor
push
push
inc
outsb
ret
or
mov
cmpsl
bound
iret
xadd
pop
fdivr
sub
aam
mov
inc
adc
fs
imul
jne
mov
mov
mov
jae
sub
enter
int
cmp
mov
xchg
test
fidivrl
jmp
repnz
jl
dec
loop
adc
mov
sub
gs
fucomp
out
sub
fwait
xchg
pop
insl
push
stos
icebp
or
shrl
mov
mov
pop
insb
iret
adc
iret
push
shlb
fs
jmp
fbstp
jne
pop
popa
and
push
divb
les
mov
in
xor
loopne
fs
fdivrs
mov
jbe
jl
push
or
aas
cmp
mov
xchg
mov
mov
repz
rol
sub
nop
rol
xchg
xchg
out
dec
je
mov
iret
mov
and
aad
lahf
rolb
sbb
mov
pop
push
jns
lret
in
mov
mov
dec
jg
out
mov
pop
and
and
sbb
mov
lock
xor
mov
push
and
cltd
in
sbb
movsl
icebp
es
js
add
dec
mov
lock
sahf
push
mov
inc
inc
jp
and
jbe
fildll
enter
inc
ljmp
xor
movsl
call
jg
push
test
fsts
mov
inc
data16
fadd
movsl
or
push
pop
mov
lods
inc
mov
addr16
xchg
dec
dec
pop
idivl
addb
js
xchg
dec
std
push
sub
aas
in
cmpsl
jne
inc
push
mov
push
lods
daa
jge
push
std
mov
outsb
push
into
sarb
jmp
popa
inc
and
loopne
out
adc
ja
lret
rcrb
je
adc
gs
in
pop
jge
insb
mov
aaa
add
mov
add
mov
and
enter
mov
xchg
addb
xchg
inc
outsl
dec
cmpsl
rcrb
inc
or
push
jp
rcll
int3
int
push
mov
adc
push
dec
xlat
sbb
stc
pop
adc
loopne
pop
xchg
jae
inc
fistps
add
mov
adc
out
add
and
hlt
jno
ret
mov
jmp
cmpsl
push
mov
lods
mov
mov
jle
sbb
std
sti
sub
fdivs
movsb
cltd
ret
and
xlat
push
and
or
sub
xchg
inc
mov
std
pop
rclb
pop
inc
and
test
in
xchg
inc
into
outsb
out
mov
pusha
push
push
leave
and
iret
outsb
push
cwtl
mov
subb
nop
xor
es
ret
pop
jb
roll
push
lock
and
jb
pop
xor
ficomps
movsb
jb
mov
movsl
lret
sbb
lock
subb
jp
push
fildll
inc
push
insb
cmpb
bound
sub
sbb
imul
inc
and
jmp
ds
movsl
loope
pop
repnz
leave
jnp
push
mov
lods
jb
push
mov
cmp
inc
and
test
out
pop
je
push
pusha
pop
data16
dec
aam
adc
ret
call
mov
andb
iret
jbe
mov
xor
mov
rep
mov
nop
pop
mov
cld
xor
mov
cmp
inc
jno
mov
xor
adc
mov
pop
jae
and
dec
and
xor
mov
test
mov
bnd
popf
sbb
repz
fiadds
mov
aam
insb
or
loope
xchg
popa
shll
insl
jl
cltd
cmp
inc
shll
pop
ret
push
push
cmp
fidivrs
loop
dec
sahf
add
mov
pop
stos
push
push
daa
stos
in
fiadds
inc
ss
psadbw
mov
xchg
cmp
cltd
mov
xor
les
arpl
sti
stos
test
cmp
cmp
mov
fidivrs
lahf
mov
mov
dec
aad
xor
adc
xchg
cmp
aam
pop
lcall
ret
dec
cmc
flds
and
push
inc
aad
and
push
subl
lock
pop
xor
mov
adc
push
pop
fldt
or
jb
xchg
xor
rclb
imul
sbbl
cwtl
rcll
mov
loopne
mov
pop
jl
xchg
jmp
inc
sbbl
jmp
cmp
cmpsb
xor
popa
orl
xor
lods
or
stc
ljmp
cltd
sar
adc
xchg
aas
cmp
lds
out
push
cltd
sarl
sub
mov
dec
adc
mov
mov
mov
inc
cwtl
daa
adc
pusha
movsb
push
or
or
jmp
jmp
xor
lods
jl
rcll
insb
sarl
aas
das
inc
pop
sti
pop
xchg
pop
mov
add
inc
dec
cltd
inc
out
jns
lds
pop
pop
outsb
call
popa
xor
add
add
mov
mov
stos
xchg
std
sub
jle
das
mov
iret
add
pop
sub
push
xchg
mov
jbe
dec
negb
mov
xchg
pop
dec
in
ds
imul
and
jae
mov
mov
sarb
in
pop
cli
pop
fisubrl
pushf
movsb
push
enter
out
mov
mov
jns
nop
mov
xchg
lcall
or
pop
dec
mov
fistl
stos
pushf
pop
sub
lahf
insl
sbb
jle
inc
mov
cmc
aaa
cmp
inc
xor
popa
push
mov
mov
out
pushf
mov
lcall
addr16
pop
jae
mov
fildl
sbb
ljmp
into
pusha
mov
mov
cmc
clc
loope
push
sub
mov
xchg
sub
clc
sbb
mov
gs
xchg
aas
in
push
shr
push
mov
mov
push
sbb
inc
lods
mov
aaa
xchg
xor
out
jae
mov
clc
loopne
push
push
mov
xorl
jbe
cli
fcomip
xchg
in
jg
xchg
cmp
mov
ret
mov
insb
lahf
push
lods
pop
jp
pop
mov
or
mov
mov
cmp
lock
jl
sbb
push
jae
mov
pusha
mov
adc
dec
mov
mov
jecxz
dec
pop
and
jmp
mov
push
ljmp
jecxz
push
pop
rcl
and
dec
stc
pop
out
xor
ficoml
sub
test
push
sub
pop
xor
adc
dec
repnz
push
mov
lcall
adc
rcll
mov
out
pop
repnz
scas
jle
mov
fmuls
and
jno
subl
dec
int
into
daa
call
jns
nop
shlb
mov
sbb
dec
mov
fdivs
and
mov
cmp
cmp
mov
rcl
pop
lock
xor
jb
aaa
jmp
add
push
mov
sti
movsl
adc
add
sarb
loopne
pop
fwait
fcmovbe
jae
addr16
pop
inc
or
xor
jno
sub
adc
sti
mov
mov
pop
mov
adc
call
pop
rcr
fists
imul
inc
negl
cli
lret
gs
push
pop
dec
xlat
outsl
mov
pop
pop
mov
movsl
adcl
jnp
xchg
nop
sub
int3
loope
inc
mov
sahf
ficompl
and
aas
pop
xor
ret
cmpb
fidivl
and
out
pop
loope
push
lds
sub
daa
cs
pushf
sarb
sub
add
inc
cltd
leave
adc
out
inc
imul
adc
xchg
adc
cmp
push
push
jb
leave
inc
hlt
aam
push
mov
in
mov
out
lret
push
dec
test
dec
adc
sbb
push
inc
or
sbb
adc
sahf
movsl
rcrl
out
sub
adc
or
aad
adc
pop
mov
loopne
cld
addr16
push
add
add
rclb
xchg
jmp
mov
in
shrb
or
call
roll
pop
pop
xchg
jo
movsl
jae
outsl
push
push
in
and
sbb
icebp
xchg
ja
mov
jno
mov
cltd
adc
ret
daa
dec
sub
jbe
add
lods
mov
push
xchg
lcall
push
inc
sub
push
cmp
clc
add
fcmovnbe
push
pusha
iret
jns
xchg
sbbb
stos
xchg
pop
cmp
ror
jne
jle
das
inc
lods
shlb
mov
mov
addr16
in
xlat
lcall
mov
pop
lock
shlb
cmc
xorl
les
jnp
cmp
cmp
jl
mov
mov
push
jecxz
pusha
mov
jmp
lret
adc
lahf
test
xor
xchg
mov
jo
into
in
adc
xchg
cmpsl
call
push
jmp
add
jbe
inc
decb
pop
ror
or
xchg
in
dec
add
les
mov
jge
sub
jle
cli
pop
or
jge
cmp
inc
xchg
mov
jb
jmp
cmpl
dec
jecxz
push
mov
adc
xchg
cmp
pop
mov
cmovnp
fwait
jne
push
jae
in
jbe
sti
insb
call
sbb
test
icebp
lock
cs
sbbb
pop
roll
ror
aaa
jae
mov
je
shl
test
std
or
sub
sti
dec
ss
andl
xor
add
jp
stc
or
decb
fdivrs
icebp
aaa
in
or
adc
push
daa
sub
clc
aad
in
loope
leave
ret
cmp
imul
int
test
dec
pop
add
std
mov
xor
xlat
std
in
sahf
mov
mov
inc
add
push
cmp
loope
jecxz
subl
cmp
hlt
sub
inc
and
adc
popf
adc
xor
jo
cmpsl
mov
idivl
jae
dec
iret
mov
sub
inc
stos
out
cld
jno
addr16
sbb
cld
pop
pushf
add
out
loope
int
or
jmp
xchg
addb
gs
icebp
cwtl
mov
leave
xchg
push
les
inc
mov
imul
pop
push
or
jp
jnp
sar
iret
xor
outsb
jne
clc
add
inc
adc
mov
loop
jo
mov
in
dec
push
dec
sbb
jmp
mov
push
jle
imul
xchg
or
into
fsubrp
fistps
repz
adc
aas
loope
bound
mov
into
sub
xchg
jp
and
sahf
lret
xchg
jmp
jge
lds
pop
mulb
adc
leave
pop
hlt
cmp
leave
xor
flds
mov
repz
imul
test
xor
jp
xor
inc
jnp
inc
pusha
adc
mov
mov
mov
xor
test
cli
sar
mov
rcrb
stc
inc
in
rorb
xchg
mov
insl
pop
sub
add
stos
cmpsl
insb
fildl
or
test
jns
inc
out
fcmovnbe
mov
xchg
lods
push
inc
inc
mov
movl
xor
mov
adc
in
data16
mov
sub
enter
stos
dec
repnz
lods
push
pop
xchg
cli
and
jnp
cld
fwait
ds
and
sbb
lods
dec
pop
xchg
jl
mov
movsl
push
inc
scas
jecxz
in
test
imul
mov
sub
jg
scas
xchg
and
jb
jnp
insl
xchg
icebp
imul
jl
ss
aaa
inc
fcom
cwtl
jnp
add
push
mov
outsb
and
cwtl
sub
notb
dec
fwait
push
aam
pop
pop
sahf
movsb
shr
mov
js
xchg
xchg
cs
xlat
loopne
push
xlat
inc
push
inc
mov
in
xchg
lods
stos
ljmp
push
jg
adc
dec
cmc
sub
xor
es
push
xlat
mov
or
jns,pt
cmpsb
sub
cld
xor
jecxz
sub
cmp
fs
bound
lods
inc
pop
cmp
add
stos
in
clc
xchg
dec
add
push
test
int
cmp
addb
lds
jp
int3
lcall
mov
and
xlat
jg
andb
sbb
loop
jle
cwtl
adc
rolb
addr16
stos
dec
inc
inc
or
and
out
iret
loope
lcall
mov
mov
ret
push
daa
xor
pop
mov
ljmp
push
xchg
add
dec
jge
add
mov
add
jle
xchg
xchg
xchg
popf
popa
pop
test
movsb
pushf
mov
push
pop
shl
outsl
or
mov
lods
lods
sbbl
insl
or
in
add
dec
mov
and
mov
sarl
fiadds
and
dec
in
jp
or
popa
adc
mov
mov
push
fidivrs
or
arpl
loopne
cmc
adc
pop
xlat
push
subl
adc
mov
mov
mov
pop
hlt
xor
adc
les
jl
ja
jb
sbb
fisubrl
out
inc
push
fstl
sbb
mov
daa
adc
ret
push
jbe
negb
sub
or
movsl
les
out
lods
out
sar
out
vmovhpd
and
inc
mov
test
insl
movsl
sbb
aaa
scas
dec
add
sub
xchg
cmc
adc
xor
imul
ljmp
cmp
in
xchg
push
imul
stc
fldl
and
mov
and
rorl
lahf
jne
xchg
jp
dec
lahf
sbb
add
jae
aad
repnz
pop
and
sbb
addr16
lods
fcomps
xlat
mov
dec
pop
sbb
dec
push
sbb
jnp
ror
cmp
inc
jo
fdivs
cmpsl
lock
sbb
mov
xchg
push
mov
or
popa
cltd
outsb
pop
js
rorb
into
loopne
mov
ljmp
ss
adc
imul
bound
mov
inc
ja
std
xchg
lahf
insb
icebp
insl
mov
inc
mov
sub
test
sahf
mov
and
push
daa
inc
xlat
sbb
sbb
sub
xchg
pop
or
xchg
lods
data16
ds
imul
test
pop
rolb
cmp
in
ret
and
mov
cmpsb
add
out
add
cmp
ja
aam
jae
adc
inc
in
sub
mov
add
inc
xchg
inc
add
jne,pt
push
jg
out
sahf
int
push
cmp
adc
addl
fnstcw
sbb
adc
rcrb
mov
std
fidivrl
jmp
xor
inc
js
sub
sub
add
pushf
mov
push
mov
scas
jmp
imul
jno
push
scas
in
pushf
in
add
mov
mov
sbb
jno
push
ffree
adc
faddl
xor
in
repz
adc
pop
cmc
loop
adc
pop
fwait
mov
cmp
mov
sbb
mov
stc
push
sbb
sub
js
dec
lret
add
jns
clc
ds
sbb
sub
fimuls
and
mov
lds
sbb
mov
mov
dec
cld
call
in
dec
mov
dec
and
mov
mov
test
int
pop
loopne
mov
pop
mov
leave
aam
into
push
or
call
enter
testb
ret
lret
movsl
cld
lcall
push
movsl
pop
pushf
cld
adc
jp
or
dec
xchg
pop
inc
xchg
push
cli
stos
and
inc
mov
sbb
dec
imul
ljmp
jns
daa
and
jb
into
les
stos
inc
mov
mov
add
cmp
stos
inc
jae
iret
adc
cmc
cmc
dec
dec
adc
add
dec
cmc
fisubrs
cli
mov
fists
sbb
jb
mov
adc
in
test
mov
test
stc
sti
stos
popa
cmc
jbe
rcl
sbb
out
stos
or
vmread
push
and
and
dec
mov
aad
push
stc
jl
mov
mov
je
nop
push
and
sub
cli
adc
test
pushf
inc
imul
dec
or
and
xor
and
dec
lret
jns
jp
push
lret
jmp
push
clc
jle
ret
cmp
mov
push
mov
jmp
sub
and
leave
adc
jmp
cs
jle
cltd
daa
mov
pop
jmp
mov
cmc
xchg
stos
stc
xchg
jge
test
pushf
out
repnz
dec
clc
xlat
cli
sbb
mov
push
fildl
fwait
adc
xor
incb
ja
in
out
xor
pop
inc
cmp
cmp
or
vpsubw
jb
std
cmp
jmp
stos
pop
aas
sbbb
aas
mov
pop
pop
adc
jmp
leave
lods
sahf
mov
cli
out
jl
push
push
sub
bound
daa
das
mov
lcall
mov
daa
fisubl
jb
clc
push
stos
mov
fadds
dec
sbb
sub
and
add
push
loope
or
stos
sahf
imul
xchg
js
dec
dec
out
pop
mov
or
dec
cmp
and
sahf
pop
push
cmpsl
inc
mov
push
fstps
inc
stos
mov
push
adc
shlb
in
bound
xor
pop
pop
inc
and
fbld
outsl
jae
jbe
xchg
adc
dec
aam
ljmp
in
mov
cmp
in
jmp
jge
es
push
movsb
outsb
xchg
lret
mov
mov
bound
das
pushf
popf
and
les
inc
mov
adc
push
dec
imulb
mov
aad
xor
sbb
pop
repnz
dec
leave
iret
sbb
arpl
fwait
loopne
xchg
movsl
jl
sub
sub
daa
fs
ljmp
cld
movsb
push
cmp
xchg
inc
sbb
xor
shrl
inc
sub
lret
lock
and
addb
push
jmp
inc
insl
add
data16
cmp
das
daa
xor
pop
push
push
imul
lds
dec
es
and
popa
push
add
dec
cmp
jmp
pushf
negb
and
dec
out
adc
bnd
enter
icebp
or
push
cmpsl
sti
arpl
cmpsb
rolb
fistps
xchg
pusha
aaa
cmp
adc
ljmp
nop
mov
pop
test
adc
aas
push
push
pop
mov
jno
clc
and
cs
or
shrl
je
adc
ss
dec
pop
cmc
cmpsb
lahf
icebp
push
pop
int
mov
jne
add
mov
loop
jg
jne
sub
pop
sub
jae
add
daa
mov
or
xor
push
adc
jge
push
in
mov
in
sub
push
and
test
mov
push
stc
cmp
repnz
pop
pop
pop
fbstp
adc
mov
pop
call
shlb
jne
jmp
cmc
test
test
rcrb
lret
push
and
cmp
outsb
dec
data16
and
fisttps
jae
sbb
pop
pop
sub
mov
cmc
cs
pop
sbb
jae
cld
sbb
mov
icebp
jge
xor
sub
fcomi
jle
out
insl
push
sti
push
dec
dec
push
ret
jecxz
hlt
pop
stos
lea
jg
incb
dec
sub
mov
lret
jge
pusha
movsb
jecxz
sub
popl
jnp
icebp
mov
dec
xchg
xchg
push
int
add
stc
adc
inc
gs
iret
pop
arpl
loope
in
int3
icebp
cmp
mov
lock
fildl
push
sahf
pusha
sahf
adc
rorb
or
and
push
cld
add
clc
aas
stc
insb
push
inc
in
dec
iret
inc
lock
jmp
and
and
cltd
inc
lcall
push
int3
jb
leave
pop
mov
or
xchg
inc
ret
popf
lock
ret
mov
push
nop
ret
mov
jae
jg
pop
test
ss
rcrb
pop
in
jecxz
push
dec
out
js
cmp
test
and
adc
stc
pop
in
sub
ret
stc
popf
xor
test
inc
xchg
sbb
gs
shr
das
cmp
mov
xchg
cltd
adc
mov
mov
lcall
inc
push
out
insb
in
shrb
notb
je
push
test
push
insb
push
jmp
jbe
lret
add
sub
cld
push
fdivp
jmp
mov
adc
jl
mov
sbb
xchg
jbe
and
sub
push
jecxz
je
repz
adc
ret
sarl
imul
nop
mov
movb
ror
psllw
mov
int
into
pushf
jl
int
cmp
dec
add
jnp
lods
push
dec
arpl
es
dec
push
cld
rcrb
mov
loopne
mov
add
mov
ss
push
insl
and
test
jecxz
ficoml
rorl
add
mov
dec
jne
fucomp
pop
fimuls
dec
cmpsl
dec
pop
cli
cmp
jb
std
add
sub
jl
push
sahf
repnz
dec
xchg
test
mov
inc
sbb
push
mov
lods
pop
jno
daa
int
test
sbb
xchg
sub
xor
xor
shr
js
mov
lret
mov
push
lods
adc
mov
ds
aad
xor
sub
aaa
sbb
mov
dec
popf
in
fistpl
mov
add
add
and
adc
gs
std
sub
ja
pop
jge
pusha
mov
and
in
rcr
cltd
pop
je
jle
aas
fisttpl
aad
daa
or
stos
sbb
shlb
lret
in
or
add
push
inc
mov
jbe
mov
mov
fsubrs
adc
jnp
jno
mov
pop
loopne
fdivl
es
push
insl
iret
lea
xor
in
dec
ret
int
pop
jns
push
cmp
dec
or
loop
ficoml
jp
or
into
fs
jg
xchg
inc
fcmovnu
pop
sub
jmp
jo
mov
bound
push
mov
sub
aad
sbb
bound
jmp
ja
aad
mov
imull
data16
aam
shl
in
inc
xchg
aas
mov
sbb
lods
int3
or
pop
mov
xchg
and
and
add
dec
fsubs
jno
mov
lods
mov
and
push
dec
cs
cmc
dec
test
and
push
mov
xchg
repnz
push
outsl
xor
xor
cmc
rolb
aad
loope
adcb
orb
lds
cmp
nop
mov
data16
xchg
pop
rorb
pop
jbe
mov
add
ja,pt
and
jns
stos
lcall
mov
aad
jl
out
lods
inc
xor
mov
dec
push
jb
test
leave
xchg
rcr
ja
and
pop
leave
mov
scas
push
iret
dec
clc
sub
sbb
stos
hlt
cltd
jp
push
clc
stos
jns
in
cld
xchg
aam
push
sarb
iret
test
xchg
adc
or
add
data16
inc
and
pusha
xor
sub
pop
arpl
mov
xchg
sbb
ret
jno
mov
fiadds
fld
or
lahf
lret
inc
jmp
out
mov
cli
ja
int
je
fsubp
lcall
push
or
sbb
sbb
dec
adc
iret
ds
les
push
fwait
xchg
jle
inc
push
lea
push
xchg
xchg
push
xchg
cltd
jne
inc
repnz
mov
mulb
jmp
fsubl
xor
pop
stos
daa
and
lret
sar
push
add
cmp
push
shll
and
sti
addr16
jo
int3
inc
cwtl
repnz
adc
cmp
mov
jmp
mov
int3
push
in
cmp
inc
into
cmp
or
sti
ljmp
insb
inc
mov
sbb
mov
mov
mov
pop
adc
aad
or
stos
out
test
mov
lods
mov
aad
inc
ljmp
sti
ret
arpl
xchg
mov
iret
mov
and
dec
adc
sbb
sub
mov
repnz
mov
add
sarb
inc
rcl
mov
loop
repnz
jo
fidivs
cltd
cmp
dec
out
mov
push
dec
add
ret
rorb
jno
mov
insb
inc
xchg
repnz
fdivrp
mov
mov
xchg
das
mov
enter
sbb
lock
mov
icebp
sbb
sub
sub
jo
cs
and
xchg
pop
daa
dec
into
push
pop
mov
jo
das
push
hlt
inc
pop
mov
arpl
add
fs
mov
mov
push
pop
push
push
stc
add
push
xor
mov
jp
xchg
cmp
add
jae
push
lea
mov
sub
or
lods
gs
push
xchg
xor
ret
fiaddl
and
sbbb
leave
push
add
outsl
sbb
xchg
lods
sbb
push
hlt
pop
xchg
mov
jmp
in
jp
push
mov
jbe
adc
dec
cmp
not
inc
add
or
jno
ds
repz
ss
shll
aaa
out
mov
push
aas
xchg
xchg
out
mov
jae
mov
xor
mov
xor
sub
cli
mov
ret
xchg
xor
dec
or
mov
enter
jmp
outsb
in
int3
pusha
imul
popf
gs
lcall
dec
fwait
or
xor
or
outsb
mov
jns
or
int3
push
xchg
fwait
popa
or
outsl
or
aad
xchg
jp
adc
mov
jae
cli
fcoml
and
lret
sarb
lret
sub
jp
mov
cmc
xchg
cli
sbb
lds
cmp
and
and
jle
xchg
cli
popa
mov
add
icebp
cmpsl
xchg
xchg
mov
push
mov
push
cs
pop
aas
inc
aad
imul
push
inc
lahf
pushf
mov
push
cmp
cld
sub
bound
repz
sub
cld
or
movsl
rol
mov
xchg
jge
xchg
and
mov
in
out
bound
loope
mov
push
xchg
icebp
jne
cs
ret
mov
cmp
and
lods
jnp
cs
lret
cld
stc
push
jno
xlat
jno
cmp
add
pop
jae
sbb
mov
xchg
sbb
or
in
cltd
inc
inc
add
cmp
sahf
pop
shll
dec
or
mov
jne
push
xchg
adc
xor
xor
inc
jno
mov
inc
sbb
divl
pop
orl
or
inc
addb
xor
loope
sub
sbb
push
movsl
and
mov
cmp
mov
add
inc
into
out
fwait
cmpsl
xchg
adc
cmp
out
push
dec
mov
push
ret
inc
dec
out
gs
ds
dec
movsb
gs
sar
xor
movsl
mov
negl
and
imul
movsl
mov
inc
rorb
jnp
das
adc
outsb
adc
out
jge
into
xchg
movsb
and
adc
inc
mov
jnp
lock
out
outsl
sub
fidivrs
pop
and
add
xchg
loop
movsb
mov
mov
cli
mov
push
bound
xchg
adc
push
sbb
adc
mov
mov
popf
or
cwtl
pushf
cmp
xchg
aad
mov
ss
divb
mov
fsub
div
mov
mov
mov
xor
cmp
cmp
lret
sub
cmpsb
fmul
stc
and
xchg
adc
push
adc
jno
lcall
sub
mov
or
xor
xor
data16
jl
cmp
dec
push
or
cmpsb
out
jmp
sarb
insl
jle
jne
xchg
add
fstpl
dec
or
hlt
xlat
aad
out
sahf
mov
mov
push
jmp
ficomps
outsl
sbb
jae
fdivr
cld
test
push
jecxz
shl
xchg
mov
push
addl
lods
mov
int
xchg
cmp
stc
cmp
mov
xorl
mov
inc
in
or
andl
sbb
es
test
push
mov
daa
sub
popf
jle
std
mov
fsubrl
jae
rol
aam
pop
add
int
push
lcall
or
mov
mov
pop
pushf
mov
mov
sub
aaa
call
pop
lret
popa
mov
sbb
ja
das
lret
or
mov
leave
ret
sub
cmpsb
jns
cmc
push
and
pop
out
mov
out
stos
out
hlt
rorl
cmpsl
mov
lock
and
cld
test
cmp
repz
lret
add
dec
push
out
push
mov
push
ftst
mov
lret
dec
jg
inc
inc
insb
pop
int3
jl
xchg
xchg
jp
fs
jne
add
mov
notb
sub
cmp
or
pop
xchg
mov
xchg
mov
dec
fmul
cmpsb
mov
scas
movsl
sub
inc
mov
insb
mov
jnp
mov
xchg
sahf
jmp
and
icebp
sbb
and
and
pop
ljmp
sub
and
jbe
cld
test
dec
add
into
subb
pushf
inc
pushf
fidivl
mov
push
and
mov
push
mov
jecxz
pop
dec
shlb
mov
xchg
add
fs
fnsave
and
push
adc
mov
stos
jge
jecxz
fsubrs
fwait
pop
jle
xor
mov
jbe
je
mov
push
dec
sub
mov
pushf
or
cltd
pop
jns
out
and
push
xchg
jge
dec
jae
dec
int
inc
test
jmp
sub
jns
fwait
repz
mov
cld
pop
mov
mul
test
sub
cmp
mov
inc
xor
or
and
stc
mov
inc
jae
mov
les
bound
xor
in
inc
dec
dec
sub
pop
lret
cs
xchg
mov
push
ds
test
dec
test
mov
stos
fsubp
adc
xor
cwtl
cs
leave
jp
movsl
mov
inc
jge
and
or
aam
jp
adc
loopne
loope
test
mov
jp
jl
mov
shrl
inc
adc
cld
xor
sbb
cmp
into
in
sbbb
popf
repz
xchg
lahf
xchg
orl
pop
xchg
cmc
mov
jo
dec
cs
incl
test
push
call
mov
push
das
in
xchg
pop
mov
inc
adc
mov
inc
cld
stc
ljmp
jbe
stc
int3
stos
pop
movsb
ret
adc
add
or
add
pop
sbb
aaa
call
outsb
lods
dec
jae
sub
dec
lock
pop
jle
xor
inc
xor
pusha
jae
jecxz
stos
or
add
dec
addl
push
int
inc
in
push
movsb
lds
std
rcrb
loope
mov
fmuls
inc
lahf
sbb
pop
rorl
push
xchg
lret
nop
loope
icebp
push
fists
sbb
mov
add
push
fcompl
push
add
int
inc
nop
mov
push
mov
mov
and
sbb
push
repnz
xor
jo
lret
mov
rcl
insb
out
andb
xchg
mov
or
adc
push
stc
jge
adc
mov
mov
les
xchg
jl
in
jno
imul
movsb
mov
lret
mov
imul
sbb
insl
lods
loope
mov
daa
mov
jns
add
mov
push
xorb
in
and
push
add
pushl
mov
jnp
mov
cs
dec
push
mov
stos
jo
mov
xor
pushf
idivl
xchg
mov
or
and
mov
inc
fcomip
iret
scas
bound
add
popa
xchg
mov
inc
loope
xchg
jns
out
adc
nop
in
push
sub
or
push
stos
sub
mov
dec
out
cwtl
mov
in
and
xlat
push
fildll
lock
xchg
fistpl
cmp
pop
aad
jno
adc
js
div
ret
into
test
cli
sbbb
rcll
jno
call
lret
gs
or
mov
stc
sub
mov
add
jns
pop
fcmovb
test
or
outsb
dec
pop
xor
mov
arpl
mov
leave
cmpsb
inc
out
aad
jae
and
push
bound
lahf
stos
pop
xor
aam
loopne
repz
jns
addr16
insb
xchg
das
xor
cmpsl
and
addr16
add
xlat
sbb
cmpsl
imul
add
inc
jecxz
sub
mov
clc
mov
jo
fneni(8087
lea
adc
shrl
out
sti
les
dec
nop
scas
push
mov
dec
mov
jp
outsb
adc
inc
xor
xchg
ds
xor
test
jmp
adc
cmpsl
jae,pt
sbb
mov
mov
mov
sbb
lret
and
adcl
loop
xlat
inc
movsl
shl
test
daa
call
jge
lahf
mov
nop
xlat
xlat
lahf
add
out
xor
rclb
fs
popa
jecxz
fdivs
dec
pop
ret
inc
fdivl
mov
adc
data16
arpl
sub
jmp
sahf
aam
icebp
mov
sbb
sbb
dec
xchg
pop
scas
mov
mov
dec
adc
ror
aaa
xor
sub
test
xor
arpl
fdivrs
pop
mov
push
data16
cld
rol
or
jg
add
cmp
mov
fistps
xchg
aas
out
jge
or
nop
push
out
andb
addb
outsb
pop
cs
or
shrl
adc
jnp
shll
cmp
stos
js
stc
inc
imul
movl
fwait
cmp
aad
pop
adc
xchg
jmp
cmc
adc
clc
and
sbb
loope
in
das
loop
daa
leave
jb
fsubrp
fwait
hlt
mov
jno
sahf
jmp
mov
mov
clc
pop
xor
repz
mov
push
push
dec
adcl
dec
ret
xor
xor
mull
pop
mov
push
rcrl
xchg
jo
adc
push
daa
shl
aam
xlat
je
sub
addr16
pushf
jo
adc
and
xor
or
adc
dec
dec
cmp
lds
mov
xchg
cmpsb
push
shlb
mov
negl
stos
lcall
cld
les
aas
in
mov
out
and
data16
aam
nop
aaa
mov
stos
jle
xchg
mov
packsswb
cwtl
push
push
cwtl
gs
out
sbb
loop
mov
js
imul
mov
push
shll
test
or
cmp
imul
adc
jp
cmp
fstps
movswl
adc
fwait
arpl
sub
push
test
hlt
out
inc
adc
push
ljmp
test
mov
mov
jecxz
xchg
push
mov
cmp
push
adc
es
lret
xchg
pop
std
or
sahf
adc
mov
pop
inc
fmul
mov
pop
adc
and
fbstp
das
out
jnp
mov
mov
push
addr16
dec
pop
mov
xor
cs
pop
or
and
mov
fidivl
aad
adc
push
mov
popf
push
dec
inc
lods
mov
imul
add
out
aaa
xor
movsl
lds
aas
aad
add
xchg
sbb
mov
mov
push
lcall
aam
dec
mov
in
orb
adc
call
ret
repnz
dec
outsb
mov
adc
cmp
mov
and
lcall
sbbl
stos
push
enter
incb
rcrb
movntps
xchg
inc
sbb
decb
inc
nop
cmc
stc
mov
xorl
lcall
adc
lahf
cmp
pusha
lock
xor
leave
xchg
jle
sbb
mov
cmpsb
or
idiv
cmp
movsl
rorl
test
mov
jo
js
pop
clc
mov
xchg
loope
ss
pop
popf
fstpt
pop
insl
mov
inc
mov
jno
addb
push
out
mov
ljmp
jbe
xor
mov
sbb
outsb
repnz
push
mov
in
xchg
add
mov
loop
loope
cmc
sahf
mov
dec
cmp
pusha
inc
pop
jp
xor
pop
or
mov
divb
mov
mov
aam
out
enter
jbe
pop
mov
call
test
js
std
inc
je
sbb
sbb
cwtl
test
push
push
into
mov
push
dec
es
xlat
adc
out
mov
cmc
push
and
and
out
loopne
mov
lods
pusha
ret
sub
mov
or
mov
jp
addr16
adc
mov
push
jnp
dec
jl
adc
adc
jg
jge
inc
sbb
out
mov
arpl
xchg
add
adc
psubq
or
fildl
inc
inc
jo
mov
imul
int3
outsb
leave
test
scas
cwtl
mov
lcall
cmp
adc
cwtl
mov
mov
sub
ret
or
in
and
mov
xlat
adc
mov
call
ret
dec
in
aam
cmpsl
test
add
stos
pop
adc
out
outsl
or
jae
push
faddl
into
xor
xor
jo
data16
adc
shll
aad
cmp
lock
cltd
shlb
stos
outsb
in
out
mov
lahf
push
mov
or
call
mov
dec
mov
pop
out
popa
addr16
je
rcll
mov
pop
dec
push
xchg
clc
push
xchg
fisttps
jmp
push
and
cmp
aas
jno
jle
adc
xor
mov
sbb
mov
cmpsb
mov
cltd
lahf
dec
push
callw
sbb
stos
xchg
js
xor
jno
cwtl
ljmp
or
lods
cltd
inc
mov
dec
mov
loop
sbb
ljmpw
push
mov
push
sbb
xchg
subl
daa
push
stos
inc
jno
sub
push
jmp
scas
outsl
insb
clc
lahf
xchg
lods
lods
in
mov
xchg
cld
push
aad
xchg
mov
outsb
subl
fnstsw
mov
xor
push
fistpll
into
xchg
sti
dec
loop
imul
lock
loope
push
mov
jg
insl
mov
lcall
popa
stos
sbbb
stos
outsb
add
iret
pop
dec
inc
adc
out
jecxz
dec
xchg
mov
cmpb
sub
aaa
inc
mov
pop
bound
imull
adc
mov
sub
sub
pop
cmpsl
les
jnp
rcrl
lea
mov
lret
cmp
mov
and
cltd
xchg
nop
push
dec
xchg
out
lcall
clc
push
fdivrp
or
ret
rcrb
fs
pop
inc
push
dec
jnp
lock
je
cmp
jne
push
ret
or
dec
adc
jge
mov
mov
mov
pop
or
xor
xor
dec
push
and
push
mov
stos
mov
push
jmp
sti
repz
test
cwtl
xchg
xchg
or
sub
loopne
dec
gs
shl
pop
mov
mov
sub
inc
cmp
mul
mov
in
fwait
and
aad
jecxz
sbb
outsb
add
fucomip
lods
or
mov
inc
les
cmp
mov
arpl
xorl
lods
xchg
lahf
cwtl
lret
arpl
adc
inc
mov
ret
movsl
ljmp
push
out
cmp
lret
decl
mov
add
dec
xor
add
ret
rcrb
out
push
int3
mov
push
sbb
adc
jne
mov
cmp
push
pusha
pop
fbld
es
add
jo
movsl
test
jp
fcoml
mov
push
cmp
daa
fildl
add
pusha
mov
jnp
cld
mov
mov
rcr
adc
pop
inc
std
mov
lods
mov
inc
xor
cli
jo
shrb
lods
stos
iret
test
mov
mov
arpl
xor
or
mov
fidivl
sub
repnz
jmp
push
int
repz
mov
mov
gs
int
outsb
hlt
cmp
pop
inc
inc
cmp
sub
mov
dec
adc
stc
xchg
mov
cmp
outsl
cltd
je
cs
jae,pt
and
push
push
ret
dec
xlat
loop
test
movb
dec
pop
sbb
pop
adc
rcll
pop
idiv
adc
adc
push
imul
pop
cltd
mov
jmp
cmovge
pop
imul
sahf
cmp
mov
test
mov
mov
imul
adc
mov
imul
cld
mov
ret
out
xchg
push
or
cmp
mov
dec
inc
fstpt
lods
sub
mov
jae
stc
push
nop
je
push
test
mov
cltd
dec
mov
aam
fldcw
rorb
loope
ja
sti
popf
mov
jl
in
dec
lcall
imul
mov
adc
cmp
sub
push
mov
rol
mov
mov
clc
jmp
add
dec
push
jp
xchg
mov
insl
sub
cli
hlt
cmpl
mov
aas
push
cmpl
fidivs
int3
lods
or
pop
sub
or
sbb
and
fistps
imul
fucomp
inc
dec
repz
jecxz
push
cmpsl
pop
dec
popa
pop
ja
sub
sbb
es
iret
xchg
sbb
add
rol
stc
inc
ss
cmp
xor
mov
mov
sub
mov
add
pop
int3
mov
mov
fdiv
mov
scas
sbb
dec
test
jmp
bound
stc
pop
icebp
pusha
jmp
sub
push
xchg
fwait
push
xchg
push
pop
cmp
xor
sub
push
cmp
loope
mov
lea
jge
clc
or
insb
inc
sbb
rcr
push
int
inc
sbb
lahf
push
push
and
add
sti
hlt
or
dec
sbb
jmp
out
outsb
and
sbb
fs
xorb
fwait
leave
mov
ss
xchg
push
adc
adc
jl
lcall
xchg
and
aam
out
in
adc
push
test
xlat
mov
sbb
cmp
pop
add
sbb
fsubs
into
xor
jns
mov
mov
push
xchg
mov
sub
mov
rorl
dec
fimuls
pop
dec
in
pop
mov
push
inc
in
xor
push
in
jno
or
aam
shl
adc
inc
data16
call
mov
sub
sbb
xchg
pop
daa
enter
inc
aam
xchg
cltd
insb
push
xor
dec
xchg
xchg
mov
in
mov
cmp
out
leave
fstps
je
into
orb
ret
adc
xor
into
xlat
mov
es
adc
hlt
repnz
ss
xor
xor
mov
repz
shll
mov
adc
jno
sub
cmp
mov
loope
dec
inc
data16
lcall
and
add
jg
fwait
inc
loop
loopne
cld
push
push
adc
les
gs
push
data16
insb
push
cwtl
lea
int
xchg
add
mov
mov
stos
mov
dec
mov
test
shlb
mov
rcrb
cmp
inc
clc
mov
movsl
lret
sbb
fidivrl
dec
sub
push
cmpl
std
into
inc
fisubrs
and
push
jp
xchg
dec
aaa
loop
mov
xlat
les
add
daa
xchg
lea
cwtl
loop
or
add
lcall
mul
pop
pop
adc
jmp
ljmp
test
dec
cwtl
add
adc
mov
insl
fcompp
and
jae
aaa
xor
mov
in
sub
mov
mov
push
sarb
aad
mov
stc
icebp
call
pop
outsl
in
ret
mul
movsl
lods
mov
jl
mov
in
flds
out
ja
mov
mov
bound
sbb
lds
add
xor
rclb
pop
repz
or
xchg
mov
in
jnp
and
or
repnz
push
imul
jbe
add
aam
cld
xchg
test
inc
bound
push
adcl
mov
scas
pushf
dec
in
jmp
in
cmp
outsl
dec
or
push
adc
in
mov
or
rorb
jno
mov
gs
xor
subb
push
xchg
lea
les
push
filds
aam
push
push
add
lahf
jae
or
or
ja
adcl
in
xor
cmp
push
rdpmc
mov
and
xlat
inc
sahf
cmp
mov
clc
dec
loope
mov
test
cli
cmp
fisubrl
lods
sbb
mov
or
rcrb
add
scas
sbb
push
repz
mov
test
shlb
fs
pop
insl
sub
sbb
xor
and
mov
jb
jg
xor
mov
ret
push
inc
shlb
ret
pop
imul
pop
xor
jge
enter
adc
pop
inc
lret
clc
mov
iret
push
loope
outsb
mov
sbb
lcall
loopne
cwtl
sub
xor
int3
xchg
bound
inc
and
sbb
sub
add
fnsave
xchg
mov
fnstsw
push
jb
cmp
xor
ja
push
adc
loope
push
pop
ret
fwait
enter
sbb
sbb
mov
fcoml
std
mov
jns
repz
sbb
mov
xchg
test
pop
cltd
adc
shll
ljmp
pop
push
dec
xor
add
loopne
arpl
fcmove
jp
enter
cmp
frstors
daa
sub
hlt
push
out
arpl
out
ljmp
fs
in
pcmpeqw
push
push
add
inc
pop
xor
lods
cld
push
push
jl
nop
lret
jns
jae
or
jnp
aam
sub
mov
addr16
jnp
icebp
shll
loope
inc
andb
mov
xchg
fwait
scas
sub
inc
mov
jne
lods
mov
xchg
int
lea
movsb
xor
inc
enter
sbb
jns
lret
mov
test
and
mov
out
xchg
lret
push
xchg
sub
aam
add
mov
aas
sub
fisttpll
inc
lahf
xor
sbb
cmp
lods
adc
lea
mov
mov
push
push
or
push
or
jne
loope
pop
popa
shlb
mov
cs
fwait
inc
sub
mov
or
xchg
cld
imul
int3
pop
xchg
in
and
in
and
dec
fbstp
pop
xchg
xchg
add
push
mov
dec
pushf
pop
xchg
fs
loope
in
fcmovb
lods
inc
outsb
rcrb
jae
sub
out
cmp
cmp
ret
arpl
push
lods
cmpb
in
jge
mov
jno
ljmp
mov
call
mov
mov
sub
int
lods
lea
push
orl
adc
cs
xor
lock
mov
rclb
insl
cmpsb
mov
popf
push
enter
pop
pop
push
daa
mov
push
inc
imul
jae
cmc
mov
jl
std
mov
push
iret
jns
pop
sub
popa
jnp
sbb
insb
mov
push
pop
and
mov
push
xor
mov
stos
or
mov
sbb
sub
sub
lods
jno
add
jne
aas
mov
daa
mov
sbb
gs
push
jne
popf
and
inc
cwtl
enter
andb
test
into
adc
stos
sbb
cmp
pop
filds
and
jle
andl
jmp
pusha
insb
imul
xor
in
push
stos
stos
mov
outsb
xchg
lcall
mov
push
push
jecxz
xor
sti
rorb
xchg
out
jecxz
mov
int3
or
mov
sahf
loop,pn
cmp
int3
scas
jnp
jns
out
dec
cmp
rorl
dec
or
ja
mov
fs
in
dec
or
and
jmp
adc
jne
ds
ja
test
jb
jmp
add
xchg
and
push
stos
roll
pop
mov
jne
stos
push
xchg
add
aas
scas
mov
es
sbb
inc
dec
ss
mov
into
into
push
and
mov
mov
dec
orl
rorl
xchg
fwait
pop
xor
adc
mov
mov
and
push
mov
xor
gs
lods
xchg
stos
and
arpl
cmp
jns
lock
out
popa
cmp
stos
jne
int3
test
movsl
push
imul
insb
adc
mov
or
push
mov
sarb
lret
addb
and
adc
ljmp
mov
jo
inc
add
cmc
outsb
or
stos
insl
call
xorb
ljmp
or
and
inc
dec
outsb
mov
mov
add
outsl
jmp
mov
pop
dec
xchg
out
hlt
aad
or
inc
popa
push
and
hlt
cmp
mov
mov
ds
add
mov
insl
pop
sbb
pusha
cmp
xchg
fadds
repz
jo
loope
sbb
mov
push
sti
mov
enter
push
sbb
out
loopne
push
jbe
movsl
mov
xor
inc
or
je
inc
jmp
lcall
mov
clc
push
xchg
ret
push
lea
aad
push
inc
xchg
jmp
jmp
cmpsb
out
add
pop
and
mov
xchg
sbb
push
insb
jae
rcrb
lcall
sbb
es
in
fidivs
or
cmpsb
rorb
mov
mov
mov
mov
orl
pop
dec
sub
inc
dec
loopne
stc
push
xor
xor
mov
out
push
inc
mov
in
shrl
xchg
push
jg
lret
or
lock
jo
mov
or
movsb
sahf
lods
mov
dec
fimuls
popa
test
pop
rolb
out
push
jg
mov
sub
jbe
fsts
fnstenv
xchg
jmp
fbld
push
sub
jbe
jne
inc
std
rorb
je
insl
sub
jnp
lret
sbb
mov
das
pop
sarb
shll
push
or
add
movsb
ficompl
pop
roll
fimuls
mov
and
popa
fwait
movhps
int
push
stc
cltd
ret
imul
mov
jne
push
inc
ja
push
iret
adc
or
xchg
xor
xchg
in
repnz
lret
mov
js
loope
mov
shrb
jb
bound
lock
aaa
push
inc
enter
jnp
mov
in
ss
or
in
jl
adc
jbe
ss
and
scas
movsb
mov
mov
popf
fistl
pop
stos
fs
or
sbb
dec
popa
shrl
sub
frstor
iret
ljmp
iret
adc
into
dec
mov
sbb
adc
ds
lret
add
roll
sub
cmp
add
pop
mov
jge
pcmpgtb
rcrl
mov
loopne
cmp
jno
push
or
sub
in
sbb
shll
pushf
das
in
inc
aam
iret
jmp
jnp
push
mov
jecxz
ljmp
jl
inc
mov
fsubp
lcall
or
lds
mov
je
cmp
mov
jge
insb
rorl
mov
cld
test
adc
mov
adcb
and
cmp
and
ret
popf
add
pop
pop
sbb
test
mov
adc
lahf
lods
cmp
push
aaa
mov
ss
popf
and
sub
mov
cwtl
cmc
xchg
addb
popf
xchg
jnp
icebp
sub
adc
mov
arpl
mov
pushf
test
repnz
ljmp
inc
flds
shlb
or
loope
adcl
or
add
inc
mov
or
enter
aad
iret
repz
add
insb
gs
push
jo
addr16
aas
repnz
int
push
pop
sub
out
bound
push
int
aam
and
mov
add
insl
push
push
test
jle
pop
lcall
inc
fiaddl
repnz
add
movsl
jae
xchg
movsb
sbb
in
lret
sti
cwtl
xor
adc
outsl
movsb
xchg
int
cmp
scas
ljmp
mov
mov
int3
xor
mov
les
jge
mov
mov
xor
pop
add
int
les
mov
mov
dec
sub
fistpl
stc
cmpsl
dec
jecxz
ret
stc
add
hlt
repz
cmp
pop
movsb
lds
cmpsl
pop
xchg
popa
ret
sbb
adc
and
lods
out
sbb
xor
cwtl
mov
arpl
sub
rcl
adc
adc
je
xor
xchg
jne
loop
mov
lds
dec
popf
add
ja
cmp
loop
outsb
testb
adc
mov
jle
xchg
pop
dec
out
push
repz
sub
mov
push
sahf
cmpsb
sub
in
sbb
dec
lods
addr16
cmp
push
pusha
jnp
cli
jno
pushf
sub
inc
sbb
mov
cld
pop
shr
push
cmc
xor
push
or
clc
xor
inc
enter
jl
subb
push
xor
inc
xchg
xchg
jmp
das
leave
icebp
imul
push
leave
mov
rorb
sahf
cltd
cmp
repz
xchg
fwait
xchg
jl
sbb
int
add
enter
test
into
pop
cmp
sbb
or
gs
sub
jae
sbb
adcl
inc
ja
movsl
iretw
or
loope
ret
jmp
dec
cmpsl
cld
cmp
mov
jo
sub
daa
sahf
cmc
and
push
and
cmpsb
jb
rorl
repz
push
sbbl
inc
lds
loopne
iret
pop
mov
cmp
fsubr
out
jecxz
inc
jae
cwtl
dec
rcrl
aas
push
orl
mov
mov
js
out
lcall
ficomps
cmp
mov
leave
stos
popa
cmp
adc
cmp
movl
dec
xchg
dec
sub
scas
push
adc
dec
pop
dec
add
lret
mov
push
test
dec
sub
adc
jbe
inc
xchg
loope
jecxz
mov
dec
inc
clc
and
scas
scas
call
sbb
pop
xchg
aam
push
pop
cs
pop
imul
or
sbb
mulb
hlt
jns
out
inc
push
xchg
std
sbbl
xchg
add
jge
lods
cmc
and
xchg
popa
cmpsl
lret
insl
rcrl
stc
fcoml
out
push
lods
sub
fdivrl
and
dec
xchg
mov
js
clc
out
mov
cld
dec
js
push
fwait
je
sub
dec
mov
mov
mov
push
mov
adc
stc
sbb
aam
cmpsb
xor
cmp
or
adc
out
sub
jns
adc
sbb
pop
jb
nop
lret
mov
push
jge
jbe
dec
sbb
xchg
dec
imul
push
pop
pop
mov
adc
push
ret
lods
push
inc
ja
pop
fwait
pop
dec
enter
push
scas
mov
mov
or
sub
ds
mov
cli
sbb
lock
inc
cmp
movsb
out
cmpsl
sub
and
mov
mov
and
in
jne
push
pop
jle
stos
pop
mov
mov
stc
pop
dec
mulb
out
mov
hlt
shll
out
or
mov
fidivl
shll
mull
jp
mov
mov
mov
ud2
nop
xchg
repnz
insl
andl
mov
xlat
push
rorl
xchg
lea
pusha
inc
push
pop
neg
jnp
mov
push
repnz
and
negb
test
jl
in
pushf
loope
sarl
out
adc
xchg
outsb
popf
iret
push
and
lahf
adc
insl
sub
cmpsl
push
jmp
jl
ret
es
cmp
data16
xchg
rolb
scas
das
mov
testl
fstps
in
adc
add
int
sbb
xor
jo
nop
cltd
mov
xchg
std
sbb
mov
jge
add
lds
inc
repz
pusha
pop
inc
xlat
xchg
jb
into
lods
lods
mov
divl
stos
std
inc
pop
imul
in
pop
xchg
push
add
mov
shlb
icebp
or
hlt
cltd
xchg
cmp
mov
push
dec
or
stos
sti
data16
scas
out
cmpsl
push
jp
xchg
jmp
dec
scas
movsl
adc
loop
cmp
adc
mov
cmpsb
sub
mov
enter
jl
rcr
pop
aam
jle
hlt
xor
push
loop
adc
aad
mov
aaa
sub
push
push
mov
jno
ret
jae
fisttpll
lea
scas
add
xor
pop
push
inc
insl
test
out
out
push
push
pop
push
dec
outsb
xchg
popf
and
int
cltd
mov
leave
and
stc
out
leave
mov
aas
xchg
push
cwtl
mov
jne
ficomps
jns
mov
cmpsl
xlat
subl
and
icebp
inc
xor
xorb
into
cli
sbb
jle
cs
movsl
lahf
jecxz
idiv
sub
test
outsl
lahf
xchg
push
outsl
daa
test
popf
scas
push
push
push
leave
shl
mov
in
movsb
je
cmp
lods
js
fisttps
rolb
add
flds
sarb
pop
fbstp
dec
push
insl
into
cld
pop
xor
adc
add
inc
xor
cmp
ret
push
xor
and
sub
lahf
out
jns
sbb
rcrl
jne
jl
js
andl
sub
aam
cmp
inc
sbbl
addr16
cmp
lret
ljmp
push
pop
jbe
xchg
or
out
mov
in
push
sahf
pop
jo
xlat
ljmp
xchg
xor
mov
cmp
mov
addr16
xor
sub
or
adc
out
insl
inc
mov
lods
ret
ja,pn
popa
call
push
movsb
pop
inc
push
sbb
inc
fildll
xchg
jg
daa
lret
dec
and
lods
repz
push
push
outsl
cld
sub
lahf
nop
icebp
enter
idiv
cmp
adc
ret
xchg
cwtl
sbb
xchg
testb
add
sub
xor
lock
jmp
cmp
mov
or
adc
fnstsw
lcall
jo
imul
scas
and
sub
out
pop
fdivs
pushf
mov
daa
js
inc
mov
pop
repnz
cmp
mov
sbb
loope
sub
sbb
add
pop
inc
cs
mov
or
imul
sub
jmp
jns
jno
and
pop
cmp
sub
pop
jne
out
mov
push
inc
and
arpl
mov
push
pop
adc
decb
outsl
in
inc
clc
xlat
pop
movsb
push
lret
push
cmp
stc
cwtl
pushf
stos
and
mov
pop
inc
in
notb
insb
lcall
adc
jmp
pop
stc
mov
in
xchg
nop
hlt
bound
cmpsl
lock
cmc
repz
push
jle
sbb
or
cmpsb
xor
and
xchg
push
push
or
mov
shrb
and
pop
ljmp
ffreep
mov
test
jns
adc
outsl
mov
pop
push
push
dec
and
xadd
jmp
movl
jno
push
add
mov
or
orb
adc
enter
pop
adc
cmpsl
add
push
cmpsl
add
dec
push
in
shlb
mulb
nop
push
add
cli
cmpsb
sub
in
insb
mov
jne
mov
into
jns
out
adc
fistpll
and
mov
xorb
scas
and
jmp
xchg
push
adc
in
mov
nop
mov
sti
jecxz
ret
je
js
mov
lock
fdiv
scas
or
jecxz
into
lret
aas
mov
lcall
sbb
shr
sub
inc
sub
mov
lret
sbb
aaa
push
mov
fiaddl
sbb
push
in
fdivs
clc
add
sub
in
lds
jp
repz
mov
int
jo
adc
loop
push
mov
mov
push
ja
adc
sbb
cmp
inc
sti
mov
sub
icebp
jg
dec
dec
pop
sbb
mov
xchg
lret
mov
call
and
daa
int3
inc
push
add
add
sub
jecxz
fildl
or
mov
es
mov
iret
sub
mov
gs
add
pop
push
sbb
shlb
cmpsl
pop
fsubl
cmp
lcall
push
cmp
mov
loopne
iret
out
xchg
lock
jns
add
add
sub
jne
ljmp
xorb
scas
jp
fsubl
jae
jmp
add
ret
xchg
xchg
xchg
ss
sub
xchg
inc
movsb
dec
out
push
xor
daa
dec
lcall
out
xor
test
dec
fnsave
sub
fucomp
inc
arpl
fadds
pop
notb
jmp
aam
inc
jp
movsl
jmp
out
movsb
mov
mov
mov
and
scas
dec
dec
sti
xor
push
inc
mov
jle
xchg
fimuls
lea
xor
xchg
ljmp
adc
cwtl
sub
or
imul
sub
mov
inc
mov
dec
bnd
and
or
mov
xchg
lods
inc
mov
mov
pop
lea
jg
fstl
lods
add
sub
xor
lcall
mov
lods
mov
enter
mov
test
push
and
aaa
test
insl
mov
and
int
dec
cmpsl
insb
fiaddl
xor
sbb
jg,pt
mov
pop
xchg
notb
sub
sub
stos
imul
subb
pop
testl
mov
jge
dec
jp
repnz
cs
cmpsl
fnsave
mov
sbb
fsub
push
xchg
dec
fbld
shr
mov
ss
stos
pop
repnz
cli
push
in
iret
popf
outsl
jns
jg
cmp
jno
movsb
push
dec
leave
stc
sbb
daa
loope
xchg
adc
sahf
std
and
jle
ss
lea
shrl
adc
cmc
add
lret
nop
arpl
je
lahf
cltd
pop
out
mov
inc
inc
mov
add
and
orb
hlt
inc
insl
out
dec
cmc
test
or
insl
cmpsb
fwait
ds
inc
sub
cmc
lcall
inc
shl
clc
xor
test
iret
jbe
fldenv
mov
push
outsb
mov
xchg
push
shrb
and
mov
or
fcomp
cmp
aad
stos
shll
push
push
or
push
add
js
je
push
add
repnz
je
xlat
sub
jecxz
push
lea
push
mov
push
fsubrs
into
jge
push
jl
lods
push
sbb
sti
jno
xor
ljmp
pop
andb
mov
push
rcr
or
mov
lret
movsl
fadd
dec
hlt
fldl
call
jle
aaa
loope
jbe
sahf
cmpsl
xchg
stc
fistps
jle
pusha
imul
arpl
jle
jmp
in
sti
inc
push
mov
loope
mov
mov
pushf
das
rcrb
loop
ficoms
or
or
das
lcall
loope
xor
and
andl
imul
insb
fisttpl
enter
insb
mov
cmpsl
pop
xor
rolb
sub
adc
loop
int
mov
mov
adc
int3
mov
mov
ficomps
fwait
lods
mov
add
sub
mov
sbb
les
push
mov
pop
push
rcl
add
mov
push
adc
leave
xchg
or
sbb
pop
lcall
mov
cli
adc
push
push
movl
or
jno
mov
fwait
hlt
sub
xor
pop
push
movsl
ret
lock
das
mov
mov
sub
in
daa
test
add
pop
add
neg
sbb
popa
ja
mull
imul
pusha
jl
and
or
pop
inc
add
lret
test
sub
mov
int3
js
fdivp
push
or
movsl
ds
mov
out
cmp
repnz
mov
out
int3
sub
xor
out
movsl
push
sub
mov
ficoml
daa
imul
and
movsl
mov
mov
xchg
jmp
adc
mov
pop
sbb
mov
mov
xchg
hlt
test
hlt
mov
add
clc
adc
cmp
push
xchg
stos
fistpl
xchg
clc
gs
gs
out
out
fsubrs
cli
mov
fisttpll
cmpsb
test
outsl
and
xor
leave
in
es
mov
jnp
push
push
jp
push
cmp
stc
mov
push
mov
inc
pop
imul
inc
jg
inc
test
lret
inc
jge
jg
test
pop
mov
inc
fstpt
cmpsl
cmpsb
dec
jno
inc
or
daa
mov
lods
arpl
clc
mov
call
out
shrb
or
inc
mov
xchg
jge
pop
cmc
mov
repz
negb
int
dec
call
jno,pn
ret
comiss
add
nop
out
js
xlat
mov
xchg
add
movsb
jmp
scas
xor
dec
add
sbb
xchg
out
arpl
rolb
out
dec
dec
xchg
xor
lods
ss
fists
das
add
mov
aam
or
test
pop
xchg
nop
push
in
sub
sub
add
push
dec
leave
sub
xchg
scas
xchg
and
call
mov
inc
in
dec
cmp
imul
les
mov
dec
into
stos
ret
test
rcll
movl
sarb
sbb
push
les
pusha
push
and
xchg
aaa
or
sub
inc
addr16
xor
hlt
mov
mov
cmc
imul
vandnps
xlat
push
loope
xchg
mov
fildl
fisubrl
dec
adc
add
cmp
cwtl
jle
repnz
aad
push
pop
pop
inc
aad
out
test
cmc
fcmovb
addr16
repz
dec
xor
xchg
movsb
inc
call
pop
pop
mov
xor
sti
adc
pop
inc
lcall
add
pop
sbb
push
and
inc
push
pop
insb
iret
mov
mov
js
sbb
aaa
scas
xchg
jg
lret
lods
ja
out
mov
mov
ss
stos
push
out
sbb
xchg
call
mov
sbb
xchg
test
xor
inc
adc
cld
js
ss
icebp
mov
mov
or
mov
cmp
and
dec
in
add
test
dec
dec
jae
mov
xlat
test
emms
call
std
xchg
or
ljmp
mov
ds
dec
dec
xchg
xchg
fisubrl
or
xchg
dec
clc
xorl
xchg
imulb
mov
xor
aad
lahf
jmp
loopne
add
push
dec
push
dec
fcomip
fcmovne
mov
js
xor
xchg
mov
sti
test
xor
gs
mov
cmp
dec
or
aaa
mov
addr16
sbb
lcall
push
ficoml
dec
sbb
push
fucomip
jecxz
mov
sub
or
clc
sbb
jnp
cwtl
add
sub
pop
mov
sub
shrd
sbb
pop
xor
dec
add
mov
pop
stc
mov
xor
xor
leave
push
add
out
bts
xchg
ror
int
fisubs
pop
out
jno
gs
sub
addr16
mov
cs
pusha
xchg
aam
out
bound
out
inc
aam
mov
rdtsc
xchg
stos
mov
jmp
jo
push
jae
mov
ror
int
jnp
xchg
addl
stc
cs
push
je
daa
xchg
lret
pop
shll
mov
popa
mov
push
mov
jp
xor
fimuls
push
mov
xchg
sub
fnstenv
enter
leave
divb
sub
cmc
mov
nop
stos
flds
pop
adc
sbbb
insl
hlt
add
cmp
pop
sub
int
sbb
loop
fidivs
or
sbb
dec
sub
fistpll
cwtl
mov
xchg
pop
jmp
sti
inc
and
out
xchg
adc
in
lods
push
in
push
mov
mov
push
test
mov
scas
lods
mov
and
sub
xor
pop
std
and
std
inc
sub
lcall
pop
repnz
or
lahf
popa
mov
cmp
fsubrs
add
lret
ret
mov
inc
lods
flds
in
lcall
loopne
je
int3
mov
push
daa
jecxz
fdivp
sub
stos
adc
lahf
sub
fdivs
or
std
mov
jmp
sahf
and
sbb
xchg
gs
pop
mov
mov
inc
inc
adc
or
pop
out
and
jno
sbbl
lret
mov
mov
or
outsb
inc
ja
mov
mov
add
shr
push
pushl
shlb
adc
rorb
aaa
fdivrl
mov
and
sbb
divb
popa
rclb
xchg
adc
pop
in
mov
in
mov
jp
icebp
lds
jno
in
pop
xchg
xor
adc
jge
scas
mov
push
mov
fcomps
mov
jl
jecxz
gs
cmp
ret
and
nop
pusha
int3
cmp
cmp
test
sub
cs
lret
mov
sbb
cmp
negb
and
pop
xchg
jo
add
cmpsb
ds
or
mov
push
sbb
dec
fs
pminub
mov
xchg
jns
jne
mov
fcmovne
mov
mov
enter
mov
push
xchg
jnp
and
mov
sbb
and
mov
inc
mov
daa
dec
cmp
loop
out
negl
pop
jmp
arpl
xchg
lods
mov
mov
dec
repz
xchg
mov
int
and
and
insb
gs
ljmp
cli
lds
add
inc
inc
pop
push
addr16
jmp
int
fisubl
xor
fs
insl
mov
lods
mov
and
cmp
int
dec
sbb
xlat
orl
add
add
sahf
ror
pop
cmpsl
push
test
inc
add
cmpsb
jle
subl
xchg
xor
pop
andl
jo
sbb
mov
add
dec
add
sbb
fcompl
mov
cmpsb
fsubr
push
dec
stc
ss
add
mov
nop
xchg
arpl
adc
push
lret
out
jno
inc
xchg
lods
fildll
test
sub
stos
dec
inc
xchg
sti
leave
rclb
lret
cmc
jo
xor
push
xchg
lahf
and
xchg
pop
mov
pushf
cmp
test
mov
out
pop
and
or
sub
dec
sub
mov
adc
in
fs
push
outsb
cmp
xchg
hlt
icebp
mov
in
sub
jbe
fiadds
jmp
push
hlt
popa
pop
sub
sbb
fs
out
sbb
adc
mov
sub
pop
int
add
xor
jecxz
or
sbb
imul
rcl
icebp
sbb
out
cmpsl
stos
push
pop
std
adc
cli
mov
shrb
jmp
popf
xchg
pop
ret
jmp
jl
mov
mov
outsl
das
mov
push
jne
pop
popa
xlat
sbb
mov
insb
stos
imul
pusha
mov
mov
scas
sub
sbb
lret
and
test
xchg
mov
mov
mov
dec
xchg
pop
jge
jb
lahf
jne
vcvttsd2si
std
shll
push
popf
adc
mov
scas
mov
mov
arpl
mov
jmp
in
and
mov
sbb
jne
dec
lret
pop
sbb
movsb
int3
dec
std
repz
dec
stos
repz
loope
roll
leave
dec
ss
incl
gs
or
xor
ss
ljmp
add
push
inc
push
inc
adc
push
pop
rorl
lods
lret
push
mov
cmc
mov
lea
and
callw
inc
cmp
int
int
fs
pop
lods
pushf
or
iret
push
jnp
jnp
mov
pop
enter
add
and
outsl
jg
sbb
shll
ret
jns
and
lea
push
push
add
pop
jecxz
les
mov
add
cltd
shll
sub
stos
jge
stos
dec
or
dec
push
lret
pop
adc
cltd
mov
xor
mov
xor
adc
xchg
lcall
mov
dec
mov
imul
repnz
jecxz
mov
mov
pop
out
cmpsb
xchg
ds
daa
call
sbb
aaa
jp
dec
clc
loopne
push
inc
push
roll
jo
mov
sbb
push
sub
cmc
pop
scas
sbbb
cltd
mov
scas
jns
xchg
loope
push
xor
jns
cmp
add
sqrtps
sbb
out
lret
std
sub
add
imul
xchg
scas
daa
rcrl
mov
pop
aas
jl
test
loop
fildll
sub
jno
gs
js
divl
cmpsl
imul
jne
test
repnz
mov
fists
scas
sbb
pop
hlt
insl
mov
push
cltd
xor
test
in
fwait
enter
fidivs
push
xlat
pop
inc
into
sti
adc
xchg
fsubrl
push
cmp
andl
adc
and
divb
hlt
and
adc
das
or
inc
lods
or
out
outsl
sar
jp
lcall
inc
iret
mov
in
jb
inc
xor
orl
or
in
mov
fsubr
clc
mov
sub
mov
cmp
repnz
fbld
jbe
loop
mov
repz
fsubrl
psubusb
xor
sbb
pop
std
jno
fcomip
std
sub
shll
sbb
add
jnp
xchg
jg
pop
adcb
ja
int3
push
xchg
add
out
and
stos
sub
adcl
sub
lods
lret
popf
or
or
sbb
sti
out
mov
pop
push
adc
fimull
clc
or
stos
cwtl
pop
mov
xchg
jo
add
cmp
cmp
dec
pop
jl
ds
jmp
aas
xchg
lret
add
sbb
das
shlb
jns
jg
cmp
ret
cmp
out
dec
daa
lods
js,pt
mov
mov
mov
adc
push
sti
lods
or
xor
sub
or
clc
cmp
and
and
stc
lock
push
cmp
clc
sub
rcr
dec
add
loopne
pop
dec
push
test
push
jnp
call
mov
testb
dec
call
stos
jmp
jnp
jp
add
test
pop
jne
das
sub
mov
mov
or
mov
add
pop
add
cli
lret
cwtl
insb
jo
cmc
daa
push
mov
cli
cmp
daa
or
fs
and
sahf
movsb
ret
sbb
cwtl
ret
add
ss
imul
stos
mov
mov
into
adc
into
lret
jg
or
sahf
aam
lods
push
adc
xchg
inc
pop
mov
lock
fwait
xchg
push
insl
xlat
outsb
cld
jne
xchg
js
negb
or
fstps
or
mov
push
jne
inc
popa
in
dec
cmpsl
pushf
cmc
xchg
add
adc
dec
dec
xchg
js
add
clc
lods
or
xlat
les
mov
xor
loop
js
sahf
xor
loopne
insl
imul
daa
jne
mov
dec
test
stos
and
test
mov
cmpsl
mov
outsl
cmp
sti
movsl
add
in
xlat
ret
jl
pop
xlat
outsl
outsl
cmp
out
pop
pushf
push
mov
inc
mov
call
jb
shr
movsb
xchg
and
adc
jge
stos
das
aas
rcrl
loopne
stos
out
push
pop
outsb
leave
loop
or
adc
xchg
xchg
pop
and
sbb
negl
cmp
scas
sub
movups
mov
inc
movsl
dec
in
push
jo
fimuls
adc
adc
in
js
sbb
sbb
and
add
pop
hlt
imul
popf
and
push
mov
aam
dec
adc
mov
adcb
imul
faddl
add
pushl
ja
test
mov
out
jle
push
sbb
aad
cmp
push
push
or
xor
xchg
ja
cli
ss
or
xor
push
lcall
dec
push
adc
jb
lret
or
add
int
mov
test
sub
xchg
sbb
sarb
xchg
push
adc
movsl
rcrl
mov
sbb
rol
cmpsl
out
xchg
cmpsl
fs
jmp
in
mov
hlt
xor
and
fsts
out
jecxz
mov
pop
sub
sbb
enter
out
pop
mov
xor
cltd
or
movl
mov
jno
xor
xor
loopne
dec
cmp
xchg
imul
cmp
jge
mov
jp
sbb
cmc
sbb
cmc
pop
js
fimull
push
mov
push
out
xchg
pop
addr16
fsub
ljmp
dec
or
sahf
sub
mov
sbb
movsl
jmp
inc
pop
mov
mov
std
mov
je
std
stos
mov
icebp
sbb
dec
xchg
jnp
icebp
out
fidivrl
scas
pop
nop
pushf
add
cs
xchg
cli
popf
and
jo
push
outsb
je
shrb
xchg
in
mov
push
adc
test
add
lret
xchg
xor
clc
pop
mov
data16
pop
lock
dec
cmc
or
add
in
or
pop
les
jmp
push
mov
pop
shl
mov
xchg
mov
pop
stos
pop
shl
or
adc
inc
movsb
fwait
cmp
mov
movsl
test
jae
pop
jp
mov
add
xor
test
sti
scas
mov
iret
loopne
dec
mov
sbbl
int
and
call
icebp
stos
int
jecxz
mov
pop
jecxz
outsl
xchg
mov
push
mov
loope
sbb
xor
jmp
imul
aad
sar
sbb
aam
stos
or
mov
mov
mov
adc
stos
xorb
xor
std
arpl
mov
je
and
leave
mov
pop
mov
and
adc
mov
mov
and
gs
iret
cmpsl
or
lret
rcr
pusha
test
in
mov
enter
lds
inc
sti
inc
push
push
imul
insl
icebp
and
mov
and
or
dec
stos
out
add
loop
test
rorb
lods
mov
dec
jecxz
jp
nop
pop
inc
scas
insb
test
cmp
or
jp
outsl
inc
mov
ss
test
inc
lcall
mov
fwait
jb
mov
xor
movsb
mov
dec
ret
dec
addb
outsl
xor
dec
jae
dec
ja
test
shl
jmp
pusha
and
aad
mov
dec
xchg
and
fwait
loop
ret
xchg
loopne
and
xor
sti
cmpsb
sbb
pushf
adc
push
inc
mov
xor
insb
sbb
aas
mov
lods
pop
hlt
mulb
jg
or
push
enter
xor
adcb
orl
push
mov
sub
pop
vmread
fwait
loope
int
pop
jg
enter
push
mov
pop
inc
xchg
call
push
mov
es
sti
lret
es
cltd
mov
sub
ds
inc
push
fisttps
lods
data16
iret
stos
ljmp
push
push
popf
ds
pop
and
mov
sarb
cmp
sahf
jae
mov
test
inc
mov
or
scas
ja
jge
push
add
insb
sarl
and
sub
and
or
addr16
popa
add
inc
out
das
sbb
xchg
sbb
mov
orb
testl
push
fwait
dec
dec
add
addr16
gs
dec
add
dec
and
out
ja
ret
dec
jmp
or
into
jae
nop
ret
rclb
and
fmul
push
inc
cmp
jle
scas
scas
pop
daa
push
inc
pop
roll
push
mov
mov
inc
sub
aaa
add
popf
lds
data16
mov
push
ss
sbb
and
insl
xor
jb
push
test
jb
jae
xor
sub
mov
cmp
pop
arpl
leave
lret
ret
outsb
dec
or
jae
cmp
jnp
loope
movsb
pop
pop
jg
scas
into
and
pushf
inc
jnp
mov
and
dec
or
test
cmp
mov
mov
lahf
aam
stos
mov
mulb
in
push
push
adc
xor
jae
push
sub
fiaddl
stos
mov
insl
mov
adc
out
jbe
std
in
icebp
mov
fstps
cli
test
insb
xchg
sub
xchg
pop
gs
lea
adc
mov
and
dec
pushf
test
insl
lret
bnd
jns
and
mov
mov
pusha
push
pop
pop
int3
sub
enter
xor
pusha
pop
clc
lret
adc
mov
dec
stos
pop
test
or
dec
inc
mov
loop
fsubrl
jbe
jecxz
or
out
jle
das
clc
out
jmp
outsb
pop
scas
outsb
sti
pop
pop
and
jle
or
les
aam
jnp
add
push
jl
push
push
pop
cli
out
ffree
push
pop
add
sbb
push
pop
mov
cmpb
enter
movsb
push
ds
sub
in
jbe
adc
jae
mov
sub
add
sub
xor
pop
aad
or
aam
push
stos
enter
ljmp
outsl
add
push
and
out
sub
jnp
mov
mov
pop
and
and
xchg
outsb
xchg
cmp
dec
cmp
mov
or
or
jg
daa
scas
punpckldq
lods
inc
jnp
movsb
push
cmp
iret
lahf
imul
jo
cmpsl
loopne
adc
pusha
aas
sbb
stc
movsb
scas
cmpsl
out
dec
jle
jbe
es
iret
xor
out
xor
int
xlat
mov
mov
outsb
sbb
mov
imulb
mov
xorb
cmp
fwait
je
test
or
das
into
mov
call
outsl
pop
sub
pop
add
inc
add
scas
mov
dec
sbb
push
shlb
mov
pop
jbe
sub
in
inc
test
in
test
in
aas
and
shlb
insl
mov
xor
push
sbb
xchg
movsl
mov
inc
outsl
sub
je
xchg
aad
add
or
push
xor
sub
push
push
nop
addr16
sbb
and
mov
xchg
bound
sbb
and
das
pop
or
in
shl
jae
sub
imul
not
xor
mov
repz
sub
cld
xlat
inc
push
idivb
dec
sub
xchg
mov
xor
adc
iret
xchg
jae
jno
je
shll
mov
sub
cmpb
dec
xorb
fwait
in
xchg
inc
movsl
out
ss
inc
sub
mov
inc
lds
cmpsl
pop
mov
insl
lods
dec
mov
jno
test
sub
adc
out
daa
or
clc
pop
cltd
popf
int
push
lahf
rorl
jmp
dec
adc
mov
pop
fs
mov
add
mov
shrb
dec
mov
xor
loopne
dec
movsb
les
std
ds
or
stos
cltd
iret
dec
cmp
icebp
jecxz
jp
xchg
push
aaa
repz
or
pop
sahf
jnp
hlt
mov
loope
lods
arpl
xor
lock
add
mov
dec
cmpsl
js
inc
adcl
insb
icebp
ficomps
and
rorl
push
sub
xchg
jnp
out
imul
push
add
es
and
js
sbb
push
imull
xlat
inc
fistpl
mov
or
fcmovu
lea
push
mov
fistpl
arpl
int3
loope
xchg
loopne
js
stos
lods
mov
cld
push
out
mov
dec
jl
into
rcrb
not
mov
jae
stos
pop
pop
inc
fimuls
pop
jo
push
or
and
mov
fwait
insl
or
mov
push
pusha
pop
inc
loope
movsl
in
int3
dec
cmp
cmp
xchg
fwait
jnp
jmp
les
sahf
and
pop
mov
outsl
fnstcw
js
jo
aaa
sbb
lds
adc
loop
push
out
in
dec
cs
jp
xor
scas
fwait
stc
jmp
sub
lret
xor
dec
or
into
sbb
sbb
loop
sbb
in
xchg
cld
cmpsb
rcl
jp
xchg
ds
shrb
movsb
loope
mov
out
cli
test
push
inc
mov
cmpsl
pop
test
mov
ds
adc
rcll
mov
jmp
pop
push
or
lds
xchg
xchg
sbb
inc
and
dec
or
mov
mov
outsl
icebp
inc
hlt
nop
sub
je
and
pop
inc
incb
cltd
and
nop
push
pop
lahf
in
push
jns
cmp
adc
add
inc
stos
clc
xor
jbe
dec
int
or
jb
xor
cmp
pop
pop
pop
out
lahf
pop
inc
mov
adc
push
push
push
pop
loopne
cmp
jle
pushf
gs
in
nop
jp
cmp
push
or
leave
push
scas
in
add
shll
cs
adc
inc
repz
lcall
xor
cmp
cmp
cmp
cmp
outsb
ljmp
jnp
lahf
mov
mov
or
fadds
das
inc
and
push
hlt
jb
icebp
push
sti
and
xor
mov
mov
fsubrs
into
inc
int
sbb
inc
mov
gs
or
shl
inc
dec
leave
in
adc
cmp
cmp
out
or
int3
pusha
lret
movsb
scas
sbb
sub
mov
push
ficompl
inc
mov
insb
int3
loopne
and
insl
add
or
mov
int3
push
xlat
lock
in
ja
or
pop
addr16
iret
mov
lahf
pop
push
in
mov
gs
outsl
psadbw
add
lock
adc
inc
ja
pop
clc
push
in
or
arpl
ljmp
out
fdivl
add
sbb
xlat
sbbb
adc
aad
rclb
mov
pushf
xchg
test
push
clc
pop
test
ljmp
fadds
mov
jp
aas
xor
in
fs
xor
sub
pop
sub
lds
ret
cwtl
iret
repnz
jl
ja
cmpsb
sahf
pop
mov
dec
dec
mov
sarl
pop
push
stc
mov
outsl
rcrl
rclb
in
ljmp
sbb
dec
fistpll
add
pushf
xchg
mov
enter
mov
popf
movsb
mov
stos
dec
dec
pop
setne
adc
cmp
ss
adc
jae
enter
add
das
jecxz
push
mov
rep
lods
fiadds
xchg
mov
sti
cwtl
push
mov
mov
rorb
testl
inc
daa
aaa
pushf
cmc
mov
mov
insl
and
jo
aas
flds
and
fildll
stos
cmp
dec
xchg
inc
andl
xorl
pop
mov
fcmove
adc
sub
imul
add
arpl
sub
xchg
cmp
mov
sbb
push
ljmp
lret
jno
jl
cli
insl
jmp
aas
adc
imulb
ds
testl
es
mov
jle
add
loopne
cmp
das
and
sahf
loop
arpl
inc
in
ja
dec
jae
xchg
pop
pop
out
cmp
mov
inc
sbb
cmove
pop
ss
imul
jmp
jns
cmc
and
or
mov
add
or
xchg
add
out
fwait
xchg
into
sub
dec
cmp
fbld
roll
ds
cmp
push
ss
xor
mov
push
add
es
xorl
push
or
out
stc
fdivrl
hlt
dec
je
pop
fsubl
or
dec
clc
mov
mov
shrl
sarl
cmc
pusha
mov
mov
out
mov
pop
jno
mov
sbb
or
cs
cmp
mov
xchg
lret
adc
ror
mov
sub
pop
add
lea
push
jnp
sub
pop
rolb
inc
out
inc
xchg
push
or
data16
es
ja
pop
mul
lea
xor
fisttpl
mov
loop
push
sub
add
rsm
pop
inc
push
aas
xor
sbb
fs
push
mov
add
add
pop
jne
shll
sub
jmp
jecxz
push
dec
rcl
test
icebp
cmp
adc
test
outsl
or
pop
in
mov
xor
popf
pop
fs
movsb
pop
pop
jne
repz
dec
pushf
jae
scas
mov
adc
cmp
dec
dec
xchg
sub
mov
add
fsubrp
ljmp
lods
sbb
test
jp
sbb
sbb
test
cwtl
mov
not
add
xchg
push
and
mov
mov
add
std
js
push
push
mov
mov
mov
push
jne
loope
and
push
fimull
dec
and
jno
pop
dec
xchg
hlt
loop
jl
mov
stos
mov
mov
lea
push
adc
mov
sub
jp
push
les
sbb
sub
lods
popf
lods
add
jge
mov
mov
dec
mov
pop
inc
js
lods
sub
dec
hlt
add
and
fnsetpm(287
mov
rcrb
mov
push
or
cmp
bound
out
fcomps
or
ljmp
jo
xchg
lret
fwait
inc
popa
scas
testl
loop
inc
jmp
cmp
mov
and
push
add
cmp
adc
pushf
lret
ds
mov
mov
pop
xchg
push
clc
mov
xchg
rcll
jg
mov
insb
dec
dec
in
into
mov
or
jecxz
fnstenv
out
sbb
out
iret
mov
pop
xchg
out
xchg
fwait
mov
fdivp
ret
fimuls
frstor
inc
repz
sbb
mov
jmp
xchg
nop
add
sbb
sti
cmp
test
jne
dec
mov
xor
inc
lds
xchg
dec
cwtl
dec
mull
cltd
outsb
int
iret
and
stos
jecxz
jns
mov
adc
add
lea
mov
inc
sbb
pop
jno
fwait
mov
cwtl
popf
ja
push
fdivr
push
xchg
jo
pushf
rorb
sub
stos
jb
ffree
mov
icebp
mov
cld
jmp
adc
push
push
cmpsb
scas
sarl
jns
sbbb
cmpsb
sub
mov
or
or
cmp
push
mov
mov
dec
fnstenv
movsb
push
jg
rcr
add
jl
scas
aam
loop
adc
insb
ss
insw
mov
insb
lcall
out
aam
pushf
mov
fs
xchg
incb
ss
rorb
inc
daa
out
cmpsb
lea
push
pop
adc
aaa
xchg
add
in
iret
std
dec
cmp
aam
loopne
push
push
loopne
or
add
xchg
xchg
dec
and
out
stc
jmp
mov
jae
sub
inc
add
ds
lret
out
jo
jge
sub
pushf
cmpsb
mov
call
cli
test
mov
idivb
fcmovb
push
mov
or
add
sar
rorl
sub
mov
pop
xchg
add
inc
sub
inc
mov
cmp
and
xor
add
mov
in
add
orb
xor
dec
cmp
lods
out
mov
mov
loopne
push
push
in
mov
in
or
orb
jecxz
je
xlat
cwtl
pop
mov
in
jb
ja
insb
and
pop
and
mov
mov
pop
pop
sbb
sub
sti
in
inc
pop
fiadds
dec
mov
sub
je
xor
test
bound
orb
cmp
pop
scas
shlb
dec
dec
divl
leave
or
repz
ret
push
out
repz
jae
mov
movsb
test
xchg
mov
push
lea
mov
les
dec
sbb
pop
push
xchg
dec
mov
jne
sbb
inc
mov
lods
and
test
outsb
cmpsb
jno
add
mov
ds
cmp
adc
fcoms
lcall
lcall
leave
add
jecxz
dec
mov
and
imul
or
jp
out
push
loopne
mov
push
movsl
mov
pop
add
clc
test
xchg
call
dec
pop
dec
cmp
stc
and
loop
lea
adc
inc
sti
push
or
add
repz
insl
mov
ret
mov
inc
fistps
aaa
stos
dec
xor
outsb
into
jmp
sti
in
push
jns
fnstenv
loope
jb
ja
and
sar
xor
ficoms
pusha
popa
mov
and
pop
in
pop
jg
in
leave
fldenv
lds
mov
push
mov
xor
int3
adc
mov
cmpsl
js
imul
sub
add
mov
mov
adc
adcl
jns
jle
pushl
insl
fcomp
push
add
jo
fnstcw
cld
xchg
imul
jmp
shlb
lods
out
dec
inc
loop
lret
rcll
jno
xchg
stos
test
nop
das
push
cmpsl
arpl
sbb
rcrl
mov
es
leave
cmp
push
jo
hlt
test
xchg
out
push
mov
mov
pushf
fsubrl
mov
not
in
jg
jl
cmpsl
scas
in
push
daa
nop
leave
inc
dec
and
data16
in
test
roll
inc
ret
dec
xor
or
movsl
lret
stc
jg
ret
sbb
push
jge
cmp
loope
outsb
jle
adc
jecxz
xchg
cmp
in
xor
lods
scas
andb
mov
and
mov
sbb
lret
orb
dec
out
jp
insl
hlt
inc
dec
sbb
cltd
cs
aas
hlt
mov
xor
aad
sub
stos
add
jbe
mov
cltd
push
mov
or
loopne
or
or
add
pop
xor
lods
xor
orb
in
neg
mov
jl
cmp
mov
xchg
outsl
push
sar
xor
jns
insb
repnz
pusha
pop
sbb
scas
sti
xchg
out
scas
inc
sbb
xor
out
daa
ds
out
push
jg
insb
subb
adc
out
sub
fldl
xor
inc
jmp
add
fisubrl
pushf
xchg
cmp
inc
add
data16
cld
cmp
mov
add
cwtl
add
rcll
sbb
xchg
sbb
je
cwtl
mov
mov
inc
adc
sub
out
or
mov
and
mov
clc
je
mov
xchg
subb
and
and
je
icebp
scas
xor
cmpb
pop
cmpl
bound
mov
push
and
int
scas
testl
sub
ss
outsw
repz
mov
pop
enter
mov
scas
push
xchg
xor
mov
jle
movsb
jp
cltd
imul
ficomps
inc
inc
jae
jnp
cld
mov
cmp
xchg
hlt
in
inc
in
jbe
in
add
div
pop
dec
mov
mov
inc
loopne
xchg
std
pop
mov
adc
cmpsl
stos
retw
push
lret
jecxz
or
lahf
sbb
sub
insb
cmc
sbb
push
leave
or
mov
rcll
imul
divl
xor
pop
rolb
sbb
roll
cli
mov
dec
pop
ljmp
push
add
push
addr16
jg
push
mov
outsl
mov
shlb
fidivrl
dec
rol
cmc
int3
cli
push
jbe
outsb
xchg
sbb
fldl
dec
fwait
repnz
pop
in
in
inc
pop
dec
and
inc
mov
mov
push
xchg
cwtl
ja
lds
sbb
pop
nop
jg
imul
adc
inc
jle
outsl
test
mov
sub
jbe
sbb
xchg
dec
imul
jnp
adc
jecxz
je
cmp
loope
mov
imul
cwtl
int
adc
roll
std
in
movsb
stc
cmp
pop
lods
mov
mov
pop
out
ljmp
insb
dec
mov
arpl
cltd
dec
lret
sub
sub
or
and
pop
clc
lahf
jp
mov
sti
or
add
clc
cs
jb
push
rorb
cli
lds
dec
cmpsl
mov
cs
stos
or
push
pop
mov
cmp
push
stos
adc
dec
mov
scas
inc
shrb
pop
xchg
fcom
xchg
mov
dec
jmp
es
mov
sarl
xor
lret
cmp
cs
mov
and
xor
jmp
add
jle
dec
sbb
hlt
or
rcrl
and
add
jo
neg
daa
daa
push
push
mov
mov
jl
aam
leave
aaa
or
pop
mov
ret
adc
jno
or
sahf
icebp
mov
rcr
mov
push
loopne
jne
jg
inc
xchg
fsts
cmc
and
das
popf
insl
mov
mov
insl
dec
sub
and
mov
dec
mov
into
in
enter
aaa
sub
mov
pop
xor
movsb
adc
lcall
pop
cmp
fnstcw
push
jnp
pop
bnd
mov
test
clc
fsts
popf
mov
sub
outsb
cmpsb
inc
lods
clc
xor
iret
inc
aad
xor
popa
popf
adc
cmp
cli
test
inc
jnp
push
push
and
outsb
push
push
jg
xchg
dec
or
insl
xchg
stos
sub
push
and
or
pushf
scas
mov
pop
push
dec
push
jo
in
sub
popf
cs
daa
movsb
je
and
jnp
xchg
xchg
jecxz
out
notl
xor
inc
andl
fcmovbe
hlt
loopne
data16
test
stc
rcrl
sub
in
xchg
push
cwtl
pop
push
aaa
incb
xchg
pop
loope
sub
int3
xchg
pop
push
push
push
jbe
or
cmp
test
mov
xor
pop
out
sub
xchg
leave
int
dec
xchg
sub
jae
xor
inc
pop
cld
pop
cs
sub
inc
lret
fdivrs
fwait
sbb
stc
cmp
and
xchg
data16
jae
pop
fs
xchg
gs
sahf
jo
mov
adc
rclb
mov
ret
in
rorl
jp
bound
pop
sbb
fstpt
add
xor
push
push
filds
jle
mov
push
mov
shl
mov
jb
out
loopne
mov
insb
cmp
cmpsl
adc
stc
push
jg
icebp
test
pop
hlt
pop
xor
jle
push
int3
push
xchg
bound
nop
fst
addr16
rolb
loope
ds
sbbb
movsl
push
std
lret
inc
jb
push
adc
fcmovne
lods
push
int
jge
mov
pop
push
mov
pushf
pop
js
lret
jb
daa
add
imul
cld
mov
es
insl
cmp
pop
leave
push
mov
jg
mov
fisubl
das
mov
icebp
mov
fwait
in
jecxz
ja
les
sub
icebp
jl
sti
and
xchg
out
andl
pop
in
push
aas
push
cmp
inc
fs
popf
out
push
adc
sbb
xor
fwait
orl
sti
cli
jle
jb
bound
jge
sbb
push
leave
xor
cmpsl
or
ss
mov
ss
jnp
je
xchg
push
sbb
mov
fdiv
add
sbb
scas
or
mov
pusha
mov
popf
lock
xor
inc
sub
outsl
push
out
cwtl
rolb
xchg
popa
cmp
sub
add
cmp
push
pop
inc
jno
jb
mov
jge
adc
add
in
es
sbb
shlb
and
out
cmp
lock
jecxz
push
sbb
mov
sbb
cmp
adc
jae
pop
stos
adc
lahf
and
push
and
addr16
les
je
xchg
xchg
add
jecxz
push
rcrb
dec
fimull
mov
cld
test
add
cmp
pop
pop
and
into
leave
cltd
ljmp
add
sub
testl
fcomp
sahf
pop
aaa
dec
js
mov
shrb
push
fldcw
xlat
fdivp
mov
sub
rorl
cmc
xchg
lds
add
out
out
outsb
mov
popa
loop
mov
xchg
xchg
int
adc
jnp
andl
pop
ljmp
inc
jne
fs
inc
jns
or
xlat
and
mov
xchg
lcall
cld
lods
sub
clc
cmp
icebp
dec
lods
push
mull
push
xchg
sbb
insb
dec
iret
xchg
sub
push
mov
jns
sub
stc
xchg
xchg
jo
sub
lods
adc
popa
sub
cmpsl
mov
outsl
inc
xchg
nop
jne
fisubrs
jae
pop
or
push
rclb
loopne
mov
fildl
inc
jmp
cmp
dec
rcll
mov
sbb
mov
leave
inc
addl
dec
data16
sub
shlb
lock
daa
or
test
cmpsl
pop
push
fdivrl
push
cltd
insl
test
into
xchg
rcr
in
pop
sub
jae
loope
ret
jmp
imul
imul
mov
mov
push
ja
jl
aad
jae
out
jno
ret
sub
add
scas
mov
dec
mov
jge
xor
or
and
xchg
les
bnd
fwait
sahf
jnp
lock
dec
leave
mov
aam
repnz
inc
rclb
pop
xor
push
push
cmp
sarb
out
mov
ss
push
roll
mov
jg
jg
mov
nop
les
mov
push
lds
stos
test
stos
mov
and
and
fs
jle
out
jmp
mov
sub
cmc
pop
cmp
int3
sub
cmp
test
cmp
imul
mov
inc
mov
es
rolb
sbb
mov
cwtl
fstpt
mov
adc
xor
fildll
or
xchg
out
repz
sub
and
cs
das
data16
mov
cltd
insl
mov
sub
paddw
push
cs
popa
dec
popf
test
mov
mov
xlat
mov
test
mov
incb
sub
sbb
xor
pop
sub
in
or
push
mov
and
mov
in
sarl
paddusb
sbb
bound
mov
jnp
sbb
push
sub
push
pusha
popf
out
adc
push
cmp
ss
jbe
add
lods
push
test
subb
ret
in
pop
int3
es
cmpsb
out
mov
in
jmp
jmp
test
movsl
push
push
mov
negl
es
mov
xchg
inc
and
xchg
das
lds
sti
sub
cmpl
call
subb
add
out
in
adc
into
test
mov
scas
rol
mov
aas
dec
xchg
jns
test
xor
aaa
xchg
pop
cmp
mov
cmp
outsb
aaa
dec
movsl
aas
sub
or
movsl
jo
pop
stos
ret
int
jne
js
or
int
ljmp
mov
loope
shll
pop
imul
dec
fwait
mov
inc
and
add
add
ret
xchg
dec
or
test
sub
dec
or
dec
cmp
mov
push
or
jmp
cli
mov
loop
insl
dec
mov
add
mov
push
adc
enter
movsl
scas
iret
mov
and
insl
mov
test
test
pop
fdivs
shrl
nop
mov
les
pop
mov
fdiv
insl
xlat
loope
inc
in
rclb
imul
ficomps
sbb
inc
out
dec
into
mov
push
rol
xor
out
ss
lds
enter
daa
jmp
call
ret
mov
scas
xor
andl
xor
mov
xor
mov
scas
xlat
cmp
pop
mov
sbb
clc
mov
xor
jb
aad
xchg
std
loopne
jl
and
and
sub
int3
loop
imul
cli
inc
inc
mov
or
xchg
movsl
add
cmpsb
xchg
rolb
andl
in
fdivrp
jl
test
fnstsw
loopne
push
out
xor
inc
jp
jne
loop
xor
xchg
les
ss
xor
pop
xor
cmp
mov
shlb
mov
or
xchg
clc
mov
aas
pop
in
idivb
sete
or
sbb
cmp
pusha
xchg
iret
xchg
cmp
testl
test
or
pop
mov
jge
pop
addr16
movsl
enter
sbb
rcll
mov
ret
jp
mov
push
in
in
ss
filds
mov
adc
sub
add
inc
cs
push
push
into
imul
push
mov
pop
aam
adc
jle
mov
lahf
cmp
rol
imul
les
push
sub
xchg
or
sbb
aad
test
and
mov
cmp
fdivs
jmp
sub
shrb
insb
xchg
mov
and
xor
lock
mov
jge
sub
in
cld
push
sti
sahf
ret
xchg
loopne
push
mov
xor
cli
out
fdivl
test
add
lret
pop
out
and
out
sbb
xor
pop
lret
or
sub
cmp
test
sub
pop
cmp
jb
js
test
mov
outsb
jae
inc
dec
mov
ret
push
lea
repnz
mov
loop
push
mov
adc
scas
stos
fs
mov
sub
insb
sbb
dec
aas
enter
cmp
leave
pusha
call
or
in
push
inc
sarb
pop
jae
sbb
pop
xor
aad
in
fisttps
cmp
sub
int3
pop
push
test
sbb
in
outsb
inc
inc
rorb
cmp
in
and
cmpsl
cld
jge
popa
icebp
xor
dec
popf
es
xchg
rcrb
pop
fstps
mov
inc
lcall
sbb
mov
fldl
loopne
dec
xor
mov
mov
les
mov
sub
int3
mov
jge
js
fiadds
in
adc
mov
nop
mov
and
jae
in
das
mov
lods
cmpsb
mov
lret
cltd
pop
inc
fldt
mov
test
sub
xchg
pop
xchg
jbe
xchg
jecxz
mov
adc
dec
shrb
hlt
and
nop
iret
out
pusha
xchg
pop
xchg
mov
repz
pop
xchg
ret
outsl
mov
icebp
xchg
add
inc
pop
sub
int
subb
cmp
add
pop
insl
pop
or
loopne
fdivr
data16
test
xchg
add
xchg
fstps
xchg
xchg
push
test
push
div
xchg
lds
adc
stos
pop
mov
sti
push
sbb
roll
icebp
das
adc
mov
adc
in
push
insb
inc
fmul
jecxz
rolb
insl
test
test
xor
push
es
jmp
idivb
mov
add
cmp
adc
insl
sbb
xchg
sub
mov
les
arpl
jbe
rclb
push
mov
and
mov
out
mov
xorl
adc
mov
orl
xor
jne
aas
jl
decl
inc
or
call
sub
jp
imul
adc
push
ret
cmp
inc
dec
inc
stc
pop
push
fwait
lret
push
push
sub
or
fiadds
adc
add
pop
mov
push
fwait
push
sbb
add
mov
cmp
and
inc
add
xchg
aad
lds
xor
subb
mov
and
iret
lret
or
xchg
adcl
or
loop
mov
push
test
fwait
cmp
push
mov
les
outsl
mov
cwtl
jbe
aam
nop
out
sbb
push
dec
mov
das
push
cmp
jle
mov
push
ffreep
sub
leave
mov
daa
pop
and
inc
lahf
lea
in
test
out
push
cmp
int
cmpsl
nop
or
push
mov
cmp
xor
xchg
pop
inc
push
shrl
imul
mov
pop
lret
stos
test
sbb
sbb
xor
int3
mov
xchg
mov
adc
add
mov
movsl
ficoms
or
xchg
scas
pop
push
xor
insb
inc
push
bnd
or
inc
movntq
lret
jno
push
ss
insb
scas
int
mov
jnp
mov
adc
call
or
xchg
ficomps
xor
test
xchg
lret
push
out
and
fildl
mov
push
out
push
jns
mov
push
push
and
lea
jmp
xchg
cmp
xchg
loope
lock
call
inc
pop
fwait
popa
cmovle
ja
fistps
mov
pop
mov
movsl
or
mov
ret
mov
bound
int
in
das
lcall
add
adc
jle
mov
and
sub
fsubs
mov
lods
mov
adc
loopne
pop
scas
bound
mov
fcmovne
gs
or
cmp
lods
fcomip
lret
mov
push
pop
mov
js
pop
aaa
js
push
mov
rcrb
addr16
inc
adc
gs
scas
rclb
daa
push
pop
and
mov
lret
push
jmp
cmc
dec
and
inc
push
stos
and
adc
mov
xor
jne
imul
test
sbb
jne
mov
mov
enter
jmp
push
enter
arpl
xchg
int
push
pop
mov
sub
in
int3
adc
dec
in
push
or
inc
subl
or
inc
rcl
orb
int3
mov
mov
es
incl
xchg
jnp
mov
popa
cs
in
pop
sbbl
out
add
adc
mov
jmp
jno
adc
ds
inc
sub
and
cmpsb
adc
and
sub
in
mov
xchg
vmread
cmp
repnz
mov
std
dec
mov
sbb
stos
aas
cmp
sahf
push
je
lods
lock
cmc
pop
les
push
pop
out
or
fnop
mov
in
lock
jae
jle
xchg
cltd
push
gs
mov
mov
hlt
je
cmp
cmp
test
push
jge
mov
fwait
inc
inc
pop
cltd
sbb
adc
je
inc
or
adc
dec
jp
inc
inc
pop
or
or
nop
xchg
cmpsb
xchg
xor
xor
cmp
inc
mov
jo
lea
cmpsl
mov
jnp
hlt
or
mov
xor
jmp
repnz
xchg
add
ljmp
push
pop
xor
dec
mov
lock
rcrl
in
in
rcl
mov
js
lret
ss
cli
out
mov
enter
loop
xor
insl
inc
jns
sbb
jmp
out
xorl
mov
xchg
cmpsl
dec
sbb
daa
repz
jecxz
lods
xchg
mov
dec
inc
jg
bound
inc
nop
pop
xlat
xorl
jo
dec
push
pusha
adc
aam
loope
cmpsb
je
xor
or
sub
mov
aaa
and
cmp
nop
pop
fildll
subl
fiadds
mov
fs
aam
pop
inc
sbb
mov
add
daa
mov
fisttpl
outsb
mov
scas
test
lods
loopne
adc
pop
addr16
mov
imul
and
xchg
mov
mov
pop
xor
in
aaa
xor
xchg
std
push
cli
inc
xchg
jo
add
jmp
jle
and
add
not
mov
or
clc
fsubrl
push
or
not
cmp
mov
pop
nop
clc
pusha
xlat
push
sbb
scas
inc
pop
fdivs
pop
test
inc
or
je
shr
adc
jg
or
movb
jns
je
jbe
hlt
add
popf
xlat
lea
subb
inc
jno
icebp
sbb
mov
mov
xchg
insb
shlb
outsl
inc
mov
cli
mov
lods
outsb
aaa
inc
cmp
inc
cmpsl
mov
aas
xchg
adc
jle
test
jbe
jle
dec
or
insl
mov
int
fs
out
cwtl
imull
shlb
test
push
hlt
subl
mov
sti
jne
mov
daa
cmc
mov
mov
repnz
mov
pop
sbb
push
dec
outsl
or
mov
fcoml
mov
movsl
push
jno
add
mov
or
jmp
mov
jb
nop
jo
ja
push
inc
or
adc
push
cmp
xor
popw
ja
mov
lcall
add
add
mov
pusha
inc
cmpsb
inc
pop
ret
repnz
div
repz
xor
dec
inc
sti
xchg
fwait
xlat
dec
xor
jp
pushf
xchg
jns
ljmp
aad
test
push
sub
rorl
mov
cmp
jne
cmpsl
add
lods
mov
push
push
jbe
inc
push
popf
stos
data16
cli
data16
and
mov
andb
pop
out
cli
inc
shrb
dec
pusha
or
shrl
push
mov
out
fcoms
pop
scas
loop
call
dec
or
aam
test
push
pop
jmp
shrb
lock
arpl
iret
ret
movsl
xchg
clc
xor
push
in
repz
mov
ljmp
mov
adc
push
aam
leave
mov
imul
add
imul
mov
std
sub
popa
push
xor
cmp
nop
jnp
mov
or
xchg
jp
out
cmp
jne
subl
sbb
push
inc
jno
sbb
adc
or
cmp
mov
gs
dec
pop
gs
movsb
mov
daa
in
int3
loop
call
std
rolb
xchg
jmp
les
lahf
sub
roll
push
mov
dec
push
and
cli
lcall
mov
insb
cltd
sbbl
sbb
dec
push
jbe
int3
lret
dec
in
arpl
xchg
fsubrs
lret
add
add
fldenv
mov
pop
negl
sar
push
cmp
addr16
lds
packuswb
mov
std
add
dec
hlt
cmp
mov
sbb
mov
mov
movsb
or
jge
push
testl
push
cmovp
sbb
fs
pop
mov
xor
cmpsb
adc
sub
es
mov
loopne
xor
sub
mov
fisttps
in
fisttpll
xor
in
sbb
sbb
nop
and
mov
repz
pop
clc
inc
stos
push
into
aaa
xor
mov
jne
push
clc
adc
scas
dec
adc
outsb
jg
mov
jns
cli
jp
cltd
adc
stos
sbb
mov
fld
jmp
jne
lret
fldenv
push
gs
fdivrs
cs
das
add
invd
mov
test
jmp
cmpl
fwait
push
jns
out
jmp
out
lret
scas
std
mov
cmp
pop
cwtl
loop
push
sub
ja
lock
add
mov
inc
mov
dec
sbb
fs
add
inc
int
pop
xchg
add
adc
in
addr16
xor
xchg
mov
sbb
insb
packssdw
sub
pop
or
cmpsb
lcall
cld
in
dec
rolb
std
sti
push
test
popa
xchg
jno
fsubr
sub
or
mov
lds
mov
pop
mov
andl
sarb
iret
mov
ss
lcall
push
sub
rorb
scas
inc
int
push
or
dec
fcmovnu
dec
pop
cmp
leave
sub
jle
es
push
es
jne
nop
or
push
stos
ds
pop
push
jp
pop
xor
test
inc
call
in
lods
inc
in
imul
xor
lahf
adcb
jecxz
adc
lret
jecxz
sub
sbb
pop
push
mov
sbb
push
sbb
pop
cld
mov
jg
icebp
jge
or
test
push
fcoml
or
or
xchg
enter
mov
push
sbb
movsl
stos
mov
sbb
imul
lock
cmp
mov
sahf
or
adc
stc
jmp
hlt
and
inc
push
cmp
mov
mov
enter
ret
sub
dec
xor
fnstsw
cmp
cmp
popa
xor
std
addl
mov
or
sub
addr16
xorb
xchg
lret
xchg
fldl
xchg
lea
fwait
dec
repnz
and
test
inc
xchg
push
loop
mov
jg
ja
and
jbe
nop
nop
aad
push
or
addr16
xlat
cmpsl
mov
jmp
loopne
pop
fidivl
pop
adc
or
lcall
xlat
mov
mov
mov
cmp
fs
sub
movsl
int3
or
mov
jbe
dec
inc
out
not
jb
or
cs
push
jae
xchg
push
sbb
and
cmp
lret
xchg
lods
insb
push
inc
ret
sbb
xchg
sbb
negl
inc
push
out
jb
in
insl
mov
xor
lret
fs
jge
mov
or
shlb
adc
jno
push
xchg
fistl
mov
ljmp
jecxz
pop
test
cltd
out
pop
stos
jno
xchg
mov
mov
push
inc
push
out
pop
in
dec
adc
jl
cmc
es
jecxz
jge
jae
push
repnz
in
jle
lods
test
je
mov
xchg
sub
xchg
inc
out
jecxz
icebp
cli
jp
jmp
mov
xor
orl
cmp
dec
les
xchg
sub
fstps
ljmp
mov
sbb
pop
mov
sub
or
fnstcw
idiv
inc
pop
or
lds
stos
cltd
pop
hlt
jg
mov
jmp
loope
mov
movsl
loop
pop
enter
enter
in
dec
mov
lret
in
ficompl
dec
sarb
add
aam
adc
jae
ja
inc
mov
stos
stos
into
out
push
lahf
fcompl
push
fnstcw
nop
sbb
lds
dec
jns
push
sub
inc
cwtl
insb
aad
push
mov
mov
mov
xor
lret
sub
lods
dec
daa
pop
jp
push
xlat
adc
pusha
cmc
outsl
jge
cmp
loope
je
mov
icebp
lods
xor
cmpb
dec
mov
rolb
imul
cltd
scas
popf
and
adc
mov
cmp
or
dec
jle
int3
push
or
lret
fdiv
mov
push
stos
push
cmp
scas
inc
sub
or
fdivrl
sbb
sbbl
fs
sahf
lcall
stc
push
aaa
shlb
imul
cltd
dec
and
ss
sub
sub
jae
aas
adc
inc
jae
test
insl
mov
arpl
sahf
cmp
jecxz
pushf
adc
divb
or
mov
mov
pop
aad
add
and
dec
leave
lcall
mov
in
xor
xchg
xchg
leave
pop
xchg
sub
cmp
lcall
mov
mov
xchg
mov
das
jbe
adc
pusha
xchg
add
dec
push
leave
bound
xor
pop
lret
in
mov
mov
scas
inc
pop
rcr
daa
je
jmp
adc
mov
loopne
push
jae
add
test
add
push
adcl
mov
mov
rolb
cwtl
out
movsl
fs
inc
cmp
imul
push
mov
pop
dec
jecxz
fsubs
add
rcl
pop
push
push
xor
cmp
push
mov
outsl
add
mov
mul
scas
or
xchg
jp
std
and
sbb
add
sub
xchg
mov
sbb
ds
sub
outsb
test
in
push
xchg
ja
enter
lahf
xchg
cs
aam
or
sub
pop
shr
jg
inc
dec
xchg
push
lahf
sub
push
mov
fistpll
push
jb
push
fwait
sbb
fists
pop
jmp
std
fstl
xchg
jmp
cmc
dec
and
cli
shlb
inc
xor
mov
scas
mov
sarb
jmp
jecxz
pushf
add
jg
int
adc
dec
mov
test
fistpll
xchg
jb
lds
divb
mov
cmp
test
pop
repnz
out
sbb
push
shrb
cmpsl
lcall
and
adc
cs
mov
mov
test
sub
jo
mov
sbbb
out
mov
pop
inc
inc
jbe
ja
test
test
std
aaa
fistpl
gs
hlt
pusha
sbb
rorl
inc
xlat
int
inc
push
loopne
movsl
push
ret
fwait
mov
sub
push
addl
xlat
pusha
adc
dec
in
cmp
sbb
test
mov
test
loopne
push
sarl
scas
imul
mov
push
sbb
inc
dec
and
call
or
ljmp
sub
mov
xorl
xchg
mov
mov
repnz
leave
test
leave
test
push
out
idiv
sbb
imul
mov
push
in
mov
xor
or
std
insb
nop
fildll
sub
xor
add
aad
gs
xor
mov
int
xchg
push
inc
add
jle
mov
inc
out
xchg
adc
stos
add
inc
adc
pop
add
addr16
aam
out
fidivl
adc
xor
sbb
scas
pop
loope
xchg
cltd
mov
pushf
in
jge
enter
mov
xchg
in
dec
out
ja
call
add
dec
mov
loopne
pop
stos
cs
mov
loope
rcrl
insl
rolb
jmp
jnp
shr
idivl
js
fs
xor
xchg
sahf
pop
xor
leave
sbb
nop
mov
and
mov
rclb
arpl
jle
fiadds
mov
lret
push
lds
pop
push
movsb
push
or
repz
mov
inc
iret
nop
adc
vcomisd
jb
loope
aad
out
js
stc
lea
jmp
mov
jns
xor
data16
repnz
or
nop
sub
inc
lcall
lret
int3
pusha
xor
fdiv
push
scas
mov
mov
call
push
cmp
jno
hlt
pop
cmp
add
and
fsubl
dec
mull
and
jge
xchg
lea
adcl
xchg
jns
test
sub
jl
mov
jns
or
scas
mov
cmp
sar
push
jge
nop
out
xchg
inc
jg
xchg
iret
aad
int
loop
push
js
testb
ud2
repz
cmpsb
xor
fwait
in
jge
cmp
cmp
push
xchg
mov
jne
cld
daa
inc
stos
adc
addb
dec
xchg
or
jl
stos
jnp
xor
shrb
add
mov
or
nop
sub
ss
xchg
sti
aad
add
rolb
dec
jmp
mov
sti
loope
jno
iret
shl
data16
testl
add
mov
push
cmc
inc
jge
adc
mov
aaa
lds
popa
xlat
aad
push
mov
jne
dec
sbb
lret
xchg
int
or
sub
mov
les
adc
and
adc
mov
loop
xor
sbb
or
inc
add
mov
pop
lret
call
mov
nop
mov
arpl
sti
pop
call
xor
data16
pusha
push
xchg
add
push
pmaxub
stc
lds
rcrb
dec
outsl
fwait
out
jp
dec
nop
mov
outsl
pop
add
push
nop
in
in
mov
dec
xchg
repz
pop
jmp
mov
pushf
ss
es
popf
pop
sbb
les
and
dec
mov
jl
adc
cli
xor
mov
mov
into
push
mov
mov
mov
mov
flds
pusha
pushw
lds
or
pop
js
es
dec
push
repnz
popa
movsb
pop
xchg
cli
out
push
xor
push
lcall
sub
add
arpl
fnstcw
stc
xor
lahf
fwait
pop
std
dec
add
ljmp
pushf
push
add
lea
inc
xchg
dec
adc
inc
push
stc
sub
daa
inc
arpl
or
cmpsb
cli
cmp
ds
rcrl
pop
stos
popf
out
inc
add
shrl
adc
cli
outsl
or
mov
push
divl
push
mov
aas
outsl
lret
test
into
mov
xlat
lret
dec
mov
and
ror
sbb
push
lahf
pop
enter
cmp
mov
xchg
data16
test
imul
dec
adc
or
and
adc
jmp
add
xlat
lods
fs
push
inc
pop
push
cmpsb
popf
xchg
stc
xchg
lea
lret
mov
or
popa
inc
sbb
mov
ss
mov
push
cld
mov
loope
sub
mov
push
rcrb
push
nop
imul
push
insl
int3
cmp
xor
add
cs
sti
xchg
loopne
cmp
add
jg
mov
mov
mov
stc
fchs
pop
iret
lods
pop
add
idivl
popa
push
jl
inc
lds
sub
repnz
or
call
mov
dec
dec
mov
sbb
or
add
into
inc
bnd
ficomps
push
pop
push
cmp
jge
lahf
xchg
aas
aam
arpl
or
mov
pop
aam
xchg
mov
jb
mov
mov
jnp
jns
mov
dec
jmp
sub
and
add
and
pop
adc
dec
mov
and
shrl
fstps
sbb
inc
mov
in
cmc
and
ret
mov
jbe
das
out
jb
xor
fsts
xchg
test
push
in
into
xchg
mov
or
clc
mov
mov
add
loop
sbb
mov
stos
xor
test
inc
clc
or
pop
push
stc
cwtl
adc
xchg
out
jne
cmp
pop
cmp
rol
fcmovnb
out
ljmp
ret
in
sub
imul
or
push
cmp
iret
push
adc
fimuls
cwtl
add
arpl
mov
xchg
shl
cld
adc
dec
push
and
mov
int
mov
adc
cmp
gs
adc
clc
or
adc
sbb
jle
ss
fmuls
pop
pop
mov
mov
lret
daa
ficoml
fstps
sbb
xchg
dec
xor
jecxz
int3
inc
fiaddl
data16
pop
dec
repnz
fdivs
aam
xlat
or
mov
mov
ds
divb
add
jmp
push
push
xlat
jns
dec
xlat
test
mov
jno
push
cs
mov
cli
sahf
jecxz
or
sti
inc
pop
or
and
or
jne
outsl
xchg
push
jne
loope
xchg
out
mov
fbstp
pop
aad
xchg
mov
je
lods
stc
stc
dec
or
sub
out
int3
jae
lcall
sahf
cld
ss
push
fs
add
out
imul
ljmp
stc
sbb
adc
adc
repnz
push
pop
test
dec
pop
in
jmp
inc
popf
or
sti
in
add
loope
xchg
push
jmp
dec
lods
push
ja
inc
movb
arpl
mov
js
dec
mov
das
jo
jno
cli
dec
repnz
cwtl
movsl
xlat
xor
jmp
hlt
dec
testl
es
std
jg
pop
inc
stc
pushf
imul
clc
out
push
popf
stos
cmp
lret
int3
xor
and
xor
dec
sub
enter
xor
xchg
inc
adc
mov
repnz
adc
rol
inc
ret
aas
insb
mov
inc
mov
data16
pop
aad
dec
pushl
inc
or
push
cmp
jmp
xor
jnp
jg
adc
push
push
insl
in
cmp
pop
push
movl
in
aaa
daa
mov
jecxz
push
loopne
imul
scas
int
xor
cmpsb
fcmove
inc
and
leave
gs
cmpl
and
enter
xor
aad
sbb
test
sti
mov
imul
xchg
lahf
push
out
repnz
dec
out
aaa
and
and
sub
inc
fsubl
xor
push
cmpl
lcall
test
lods
inc
in
mov
xchg
stc
adc
and
pop
xchg
jb
mov
pop
fwait
jne
cmc
les
inc
js
push
inc
cwtl
mov
jge
arpl
jbe
sbb
sub
outsb
or
dec
add
jmp
cltd
fdivrl
inc
xlat
jecxz
sbb
je
sbb
lea
roll
aam
jbe
push
sbb
ret
pop
sbb
into
test
add
je
rclb
push
mov
out
pminsw
push
enter
pop
stos
pusha
push
clc
stos
in
mov
addr16
push
pop
or
dec
psraw
cmpsl
dec
mov
imul
and
fistl
imul
mov
sbb
sub
lods
mov
or
mov
mov
push
xchg
ret
mov
imul
add
ljmp
cwtl
inc
out
mov
xchg
nop
js
lea
incl
add
and
faddl
mov
jge
jne
push
fistps
leave
mov
in
rclb
pop
fnsave
dec
dec
daa
or
loopne
outsb
mov
jns
mov
push
outsb
cmp
xor
cs
push
ss
lcall
jbe
lret
dec
jg
testb
ret
cmpsl
jge
rolb
lods
or
cmp
dec
add
fldl2t
mov
push
dec
adcl
je
outsl
subb
neg
cltd
loope
add
arpl
xor
xor
sbb
shr
pop
imul
jo
xor
jns
push
pop
mov
loopne
mov
cmp
js
movl
pop
roll
cmp
cmpsl
or
addb
jg
ret
lcall
xor
mov
jg
xor
adc
inc
push
jl
mov
adc
pop
bound
lods
dec
add
or
mov
pop
xchg
shlb
mov
repnz
dec
xorl
or
lods
rcrb
mov
sub
pop
xchg
jge
add
movsl
push
push
add
ret
sub
sbb
pop
pusha
inc
or
add
cli
movsb
mov
sahf
jge
outsl
jns
dec
aaa
mov
pop
add
imul
mov
xchg
fistps
push
mov
mov
aaa
pushf
lods
imul
fadd
push
dec
xor
adc
sbb
xor
adc
xchg
mov
stos
rclb
ss
jae
push
cmp
and
cmp
outsl
hlt
xchg
and
lods
push
movsl
inc
jae
shlb
aam
inc
inc
out
out
push
mov
negb
push
test
xchg
dec
and
or
mov
stos
xor
sbb
imull
dec
cmp
mov
inc
scas
add
mov
dec
pop
jne
dec
pop
imul
push
out
aas
das
mov
dec
imul
loope
xchg
pusha
aam
or
cmpsl
mov
jmp
and
push
int3
mov
ja
out
stos
bnd
aas
or
and
lods
loop
mov
jg
dec
mov
pushf
inc
jl
cmpsl
push
pusha
dec
stos
cmp
inc
lea
lahf
aad
leave
sbb
jp
xchg
cltd
push
push
fists
iret
dec
rcrl
jecxz
xchg
les
sahf
sbb
sub
adc
xchg
jp
sub
add
cmp
and
popf
mov
sbb
mov
push
cmp
inc
push
test
jno
mov
mov
push
cld
push
pop
and
out
jbe
xor
in
in
mov
lods
nop
pop
out
aad
addr16
mov
push
mov
out
xor
out
inc
push
lods
stos
incb
cmpsl
aam
pop
cwtl
test
xor
mov
cmc
fdiv
push
in
dec
faddl
mov
mov
bound
pop
push
jg
cmp
adc
popf
rcrl
aaa
adc
clc
push
scas
fs
js
mov
ljmp
jg,pn
push
cwtl
mov
dec
mov
dec
in
sar
out
cmp
jns
mov
testb
cli
repnz
out
or
push
mov
aad
add
pop
cmp
or
and
or
cld
jle
or
leave
pop
and
js
popa
shlb
pop
sbbb
outsb
into
inc
mov
int
cmp
or
out
cmp
mov
sub
imul
dec
push
cmc
sbbl
lock
inc
test
outsb
jl
pushf
xabort
fstpl
cmp
push
imul
xchg
pop
sub
in
jle,pt
ja
add
lgs
sbb
xor
add
lods
scas
mov
adc
mov
repz
sub
mov
or
add
loop
xor
push
and
add
xchg
sub
sub
std
or
lret
fidivrs
xchg
xor
sbb
cltd
rcl
fistpl
shr
xor
mov
pop
pop
addps
inc
jno
sbb
enter
mov
into
rcrb
lret
sub
clc
stos
push
dec
jb
adc
dec
ret
or
cmpsl
sub
jno
pop
es
nop
mov
mov
push
mov
scas
adc
sub
cmpsl
pop
mov
adc
frstor
outsb
and
jno
mov
push
jl
outsb
mov
xlat
sub
ss
in
enter
dec
in
sbb
leave
movsl
push
sub
or
rcrb
dec
jbe
or
lock
fsubs
ds
inc
add
push
or
mov
lea
or
mov
add
in
lcall
fldcw
lcall
sti
js
cmp
xor
outsl
loopne
nop
fdivl
cmovns
popa
rcll
gs
inc
add
jmp
jae
outsl
cmpb
xchg
test
mov
stc
jbe
mov
jnp
ret
lods
sub
imul
loopne
out
pop
jo
push
lods
aam
repz
jge
ret
and
mov
cmp
out
out
les
in
xor
fcomip
out
out
les
rclb
xchg
mov
cltd
mov
pushf
out
fadds
mov
push
imul
pop
xor
les
inc
mov
aam
fwait
hlt
scas
jle
mov
dec
sub
mov
fists
jl
sub
adc
pop
nop
add
jnp
inc
lcall
push
pop
in
insl
adc
dec
jmp
lds
xor
add
sub
dec
dec
mov
add
xchg
mov
cmp
lcall
test
cmp
inc
leave
movsb
cmpsl
jns
xchg
aas
in
icebp
mov
aas
stc
push
pop
lcall
mov
mov
xor
adc
ljmp
push
or
or
adc
sub
mov
arpl
xor
cmpsb
ret
orl
cli
mov
test
mov
nop
jb
or
inc
popa
lods
fdivp
xor
outsl
lods
pop
mov
iret
out
inc
push
pop
andl
inc
push
mov
jg
sarb
push
data16
xor
fdivs
jo
cmpsl
sub
imul
dec
xchg
sbb
add
and
fstpt
pop
std
push
ja
scas
jg
call
mov
sub
daa
data16
mov
call
sub
enter
leave
ljmp
cs
or
mov
iret
in
cmp
sbb
inc
fsubrs
mov
sbb
mov
mov
shrb
fs
test
ljmp
std
sbb
sbb
cmc
inc
jno
push
mov
inc
fsubl
and
int3
sahf
sub
dec
call
das
hlt
hlt
stc
sub
pop
inc
xlat
imul
fstps
cmpb
fsubrl
stos
pop
sbb
sub
mov
dec
movsl
jne
xor
lds
out
fiadds
push
jle
scas
mov
repz
testb
add
push
ljmp
ret
jo
jae
inc
cmpsb
adc
scas
adc
jne
lds
jmp
xchg
push
fwait
outsl
rcrb
ficoms
rcrl
xor
ds
sbb
push
ljmp
sbb
mov
pop
or
push
rorl
int
push
pop
adc
push
enter
ja
sub
inc
repz
lret
adc
xlat
sub
lcall
mov
mov
and
lds
hlt
ficoml
test
sbb
and
rcrl
aaa
out
das
faddl
cmp
ret
xchg
lds
aaa
loop
pop
movsb
xor
and
bound
dec
add
push
sbbb
daa
je
movntps
inc
dec
jmp
cmp
cmpsb
mov
pop
call
insl
das
stos
enter
scas
jnp
and
vpsrld
sbb
aad
xchg
jb
push
or
stc
lcall
ja
fwait
mov
cmpsl
add
ss
test
fiaddl
test
and
push
mov
jns
push
jae
movaps
pop
shlb
mov
push
pop
adc
and
repnz
jno
fisubrl
mov
data16
add
xor
popf
mov
hlt
fsubl
xorb
dec
in
test
or
cwtl
lea
mov
xchg
bound
pop
icebp
push
js
inc
rorb
out
cli
jmp
mov
adc
adc
out
adc
cmp
xlat
andl
enter
mov
je
pop
sub
into
test
mov
repnz
popa
xchg
in
ja
andl
dec
movsb
shlb
test
inc
inc
xor
push
sahf
push
pop
notb
jge
stc
pop
nop
aaa
sbb
fldl
fsubs
inc
out
push
sbb
xchg
jl
push
imul
dec
fldt
cmp
shl
pop
sti
and
push
stos
jge
and
dec
push
fcomi
imull
add
jle
cmp
push
sub
mov
pop
mov
fistl
js
push
inc
imul
or
imul
mov
jle
add
or
test
and
sub
add
imul
mov
out
add
lea
xchg
out
mov
push
sub
add
ret
mov
add
inc
and
hlt
mov
jle
ss
or
mov
sbb
ja
enter
cltd
add
movsl
sbb
fldenv
jno
cmp
xlat
subb
and
into
in
inc
arpl
jb
data16
out
scas
mov
and
pop
jg
sbb
add
sub
add
loopne
test
xor
xor
out
ficomps
xchg
ja
jp
out
call
and
dec
mov
add
mov
insl
push
xor
lock
mov
popf
mov
jb
sub
sub
add
xchg
and
jo
popf
jle
push
nop
jg
pminub
popa
mov
or
shll
mov
xor
xchg
repz
pop
pop
pop
rorb
fists
mov
scas
incl
ja
xor
jle
rcr
cmpsb
jp
and
pop
dec
mov
mov
cld
scas
in
pop
in
add
sbb
sbb
bound
mull
fs
orb
fidivrl
fldt
fwait
jae
test
and
bnd
xlat
jae
addr16
negb
mov
jl
and
jnp
insl
popl
pop
pop
fcmovnu
aaa
mov
add
adc
std
mov
lods
push
pop
aaa
jnp
repnz
mull
mov
ret
sbb
lcall
insb
nop
sbbl
mov
pop
adcb
or
jmp
sbb
mov
and
stos
or
pop
cltd
loopne
xchg
nop
sti
xchg
into
adcl
bound
xchg
and
push
pop
mov
push
or
and
nop
popf
mov
cmpsl
movb
cmp
jo
leave
add
enter
in
sub
adc
cs
or
into
pop
or
shl
xor
inc
rcll
fidivrs
adc
cmpb
scas
mov
sub
repnz
imul
scas
call
and
cmp
fnstcw
bound
movsb
add
cmp
sbb
dec
cltd
js
and
sbb
mov
push
into
les
pop
pop
cli
aam
and
pusha
scas
push
andl
mov
dec
xlat
inc
not
adc
sti
lods
xchg
adc
call
repnz
dec
xchg
jbe
outsl
mov
cmp
loopne
adcl
or
out
xchg
add
test
ret
adc
pushf
mov
xchg
clc
push
inc
xchg
dec
je
test
scas
call
dec
cld
popf
and
pop
test
xchg
sbb
addb
fsubrp
les
daa
xor
int
outsl
or
xchg
inc
adc
xor
xor
out
andb
xchg
push
iret
das
mov
pop
push
es
clc
pop
add
pop
cld
mov
orb
add
push
pop
sti
jl
inc
out
inc
adc
leave
jne
push
adc
loop
dec
iret
adc
adc
pop
add
lds
ftst
add
insl
ljmp
in
out
dec
xor
push
push
xor
or
and
cmp
pop
rcrb
sbb
les
scas
sub
and
mov
mov
lods
outsb
cmc
dec
shll
cmp
dec
pusha
fisttps
in
xchg
das
xchg
mov
mov
lcall
repnz
jg
jno
imul
call
sub
or
cmp
shl
cmp
fidivl
roll
test
pop
adc
jg
lds
cmp
sub
sarb
or
lret
push
out
int3
insb
fidivrl
nop
cmpb
and
inc
fwait
pushf
mov
lcall
lds
cmpsb
shlb
adc
add
inc
pop
sbb
scas
int3
adc
adc
pop
js
add
movsl
jmp
insl
cmpsb
jle
or
xor
in
ffree
xchg
sbb
and
aam
nop
loop
gs
stc
adc
jno
inc
pusha
pop
cwtl
je
ss
xchg
sbbl
imul
daa
add
dec
or
push
ljmp
in
jp
out
pushf
xchg
dec
shrb
imul
and
cmp
outsb
adc
pop
inc
xchg
stos
cmp
adc
fstpl
mov
mov
xchg
xchg
sbb
inc
loope
dec
pop
ret
mov
adc
andb
dec
xchg
mov
mov
out
pop
icebp
mov
movsl
adc
and
movsb
sbb
std
aas
sbb
mov
cli
inc
jbe
test
push
out
pop
dec
subl
and
outsb
adc
push
std
out
adc
test
mov
out
lods
dec
mov
sbb
leave
sbb
jecxz
push
dec
adcb
mov
or
repnz
daa
sbb
mov
outsl
add
loope
repnz
in
into
mov
jne
loope
fwait
jl
mov
jp
in
xor
ja
pop
lahf
or
pop
mov
push
rcr
movsl
lock
and
and
xor
inc
sub
cli
repnz
cmp
fbld
hlt
imul
jb
adc
test
std
jns
inc
push
aaa
ret
popa
cld
rcll
push
push
insb
mov
mov
add
xchg
iret
jb
inc
mov
and
stos
adcl
jle
mov
in
sub
add
jp
rcrb
pop
dec
cwtl
xchg
mov
sti
loop
fstpt
or
js
orb
pushf
push
adc
jecxz
inc
mov
mov
cmp
or
dec
sub
pop
lock
in
add
mov
or
jns
push
adc
pop
cmp
add
push
mov
repz
ljmp
push
sahf
imul
inc
cli
sbb
ljmp
xlat
push
cld
into
mov
shlb
sub
sbb
mov
lods
xlat
jno
movsl
hlt
adc
cltd
dec
push
mov
stc
mov
data16
insl
sbb
mov
ss
in
push
and
sub
stos
xor
fidivs
enter
scas
cmp
and
out
lock
sbb
adc
inc
arpl
outsl
dec
inc
pop
add
inc
int3
cmp
mov
pushf
add
gs
leave
sbb
ljmp
xchg
bound
or
mov
cmpsb
push
dec
sbb
insl
aaa
lret
subb
add
bound
fwait
jecxz
sahf
pop
jle
mov
sub
lcall
popa
pushf
aas
cmp
lea
sbb
add
imul
cltd
int
mov
loopne
add
rolb
and
inc
add
leave
push
lods
jp
xchg
insb
cmp
adc
popl
inc
je
lret
and
daa
pop
imul
sbb
loopne
mov
and
lahf
daa
cld
movsb
mov
mov
sbb
mov
loopne
push
mov
lret
loopne
idivl
adcl
inc
shll
cmp
notl
scas
push
jne
mov
movsl
movsb
mov
and
int3
or
inc
fs
cmp
mov
push
icebp
in
les
mov
fs
iret
xor
or
lds
lea
insl
icebp
rclb
inc
push
imul
bound
shrb
mov
mov
lds
dec
sub
xchg
cmp
cmp
lods
ret
mov
or
int
push
or
cli
fs
insb
pop
jbe
out
sbb
imul
mov
rol
mov
decb
fadds
and
push
dec
fidivs
std
sarl
repz
xchg
mov
iret
fisubrl
add
cmp
pusha
mov
repnz
int3
jge
mov
aad
xchg
aad
mov
lcall
xchg
and
or
sbb
jne
int3
fwait
and
mov
scas
pusha
jno
add
shrl
repnz
loop
jbe
addr16
cmp
xorb
and
shlb
bound
ss
nop
cwtl
ja
mov
pop
cmc
sub
cmpsb
incb
sbb
jg
xor
movaps
inc
shl
dec
ret
mov
push
inc
fiaddl
inc
lea
sahf
outsl
je
xor
fs
lret
jne
lret
mov
idiv
xor
cs
adc
out
mov
pop
sbb
into
cmp
out
subb
dec
xchg
pusha
sahf
xor
or
gs
adc
jns
xlat
mov
sbb
decb
out
sbb
push
sub
addr16
xor
popa
inc
icebp
sbb
pushf
fisubrl
ljmp
sub
and
insl
daa
add
mov
ljmp
pop
dec
loope
mov
mov
and
dec
in
outsb
test
je
imul
add
or
imul
fsubr
in
or
mov
and
inc
sbb
xor
fs
pusha
ds
jle
mov
xchg
sub
andl
imul
divb
mov
shll
cmp
fstpl
xchg
sbb
filds
pop
xchg
or
xchg
xchg
scas
xlat
mov
jae
fmulp
mov
pop
pop
adc
sbb
lcall
and
lahf
lods
rolb
cmp
lea
dec
push
xchg
jle
jp
mov
out
jb
sub
dec
mov
clc
mov
mov
cmpsl
cli
fdivl
sbb
xchg
out
push
push
mov
sbb
and
out
aam
mov
arpl
fiadds
or
or
dec
jl
lods
sbb
cmpb
adc
or
lock
xchg
cltd
xor
in
cmp
xchg
roll
decb
sti
imul
push
pop
cmp
jmp
xchg
pushf
fmul
mov
jns
push
mov
cvtps2pi
rol
sub
sub
mov
and
inc
stos
in
cmp
sahf
and
aas
dec
push
lret
or
push
rol
cmpsl
mov
adc
cmp
add
bound
iret
xorb
pop
notb
xor
sub
icebp
xchg
or
rorb
lea
xchg
inc
push
sbb
mov
jnp
std
pop
arpl
push
mov
mov
addr16
bound
and
movsb
sti
call
sbb
pusha
inc
stc
in
mov
std
sbbb
mov
sub
je
inc
fimull
jmp
dec
in
or
decl
add
addr16
and
xchg
daa
mov
mov
aas
mov
xor
fucom
in
mov
xor
out
push
vpunpckhbw
lock
inc
and
and
out
jae
cmp
dec
mov
dec
out
add
push
mov
repz
mov
std
icebp
icebp
inc
ljmp
aam
scas
xor
mov
inc
in
or
mov
in
aam
sub
push
jb
fldt
pop
stc
and
xchg
and
cmp
jge
fwait
mov
lcall
cmp
mov
mov
cmp
sub
jge
adcb
inc
push
stos
xchg
aam
testl
fists
test
inc
inc
xor
jns
addr16
push
push
mov
adc
dec
add
out
mov
loopne
jb
jecxz
lock
jno
jmp
push
outsb
aam
scas
sub
add
jg
add
mov
je
js
jmp
pop
arpl
mov
mov
inc
hlt
das
rorl
jmp
cmpsb
call
loope
enter
sbb
loop
xchg
pop
mov
or
fnsave
sbb
out
add
cmp
shrl
cmp
sbb
dec
cmp
mov
push
jmp
fmul
inc
mov
arpl
arpl
adc
cmc
enter
dec
add
or
push
aas
pop
pop
das
and
test
and
jge
into
fldcw
jbe
sahf
xchg
cld
int
fistpl
je
fldl
lret
mov
inc
in
pushf
out
out
inc
aas
fwait
push
sub
popf
test
or
test
jne
sub
cmp
es
jne
or
loopne
mov
pushf
mov
sti
mov
dec
inc
mov
lods
inc
xor
push
push
stc
out
out
inc
lcall
xchg
cmc
mov
test
sub
sbb
cmc
adc
lea
xor
les
inc
cmpsl
xchg
add
cmc
xchg
jo
push
pop
or
mov
xchg
cmpsb
sub
fwait
sub
mov
outsb
sbb
sahf
sbbl
pop
fldt
jmp
cmp
lods
repz
xchg
pop
test
mov
pop
jo
mov
lret
popa
push
call
out
fisttpll
imul
and
mov
sbb
sub
repnz
mov
push
les
std
fstpt
pop
scas
pusha
ja
lea
sbb
sub
pop
sub
fstps
repnz
insb
aas
lock
cli
pop
sbb
fbstp
dec
jno
call
jns
ja
hlt
filds
jbe
out
call
and
lea
inc
push
rorb
sbb
mov
fisttps
adc
insl
scas
sub
mov
adc
in
jae
sbb
mov
xchg
mov
cmp
popf
sub
adc
int
cmp
jb
xchg
push
xor
and
sarl
xchg
data16
scas
into
xor
mov
iret
ds
das
cld
sub
in
test
ret
push
dec
push
out
xchg
into
subl
lret
xchg
push
sub
iret
jp
jo
fcoms
loope
pop
add
xor
mov
sub
pop
jo
repz
rolb
lods
je
sub
fwait
loop
in
ss
fstl
mov
mov
pop
ret
pop
inc
sar
out
std
or
int
xor
or
mov
movsl
push
jp
xor
mov
int
lret
stos
filds
mov
inc
icebp
pop
mov
cli
push
mov
loope
nop
cwtl
mov
xor
and
rorb
les
cmp
mov
cld
daa
mov
dec
xchg
fldl
xchg
ss
add
ljmp
out
rolb
sub
ss
or
dec
xchg
pop
cmovnp
sarb
mov
mov
mov
pop
jl
cmp
notb
push
xchg
inc
mov
stos
addr16
mov
mov
out
clc
sbb
pop
push
insb
mov
adc
dec
iret
adc
jbe
jns
ret
movsb
repnz
repnz
je
ret
xchg
imul
or
inc
lods
mov
fistl
push
cmc
loope
daa
jne,pn
jle
and
xchg
cmp
insb
lods
adc
out
mov
xor
mov
shlb
jns
dec
pop
mov
movl
cld
cmpsl
sub
fstpl
jo
lret
inc
lcall
add
mov
sub
ficompl
into
stos
push
dec
das
les
push
mov
outsl
push
cltd
push
cmp
jge
xor
cmp
popf
sub
mov
add
lret
in
inc
jns
dec
push
pop
inc
aas
stos
dec
into
adc
dec
cmp
jno
pusha
pop
cmc
sbb
inc
aas
sbb
cmpsl
jl
mov
adc
push
mov
add
or
jb
push
mov
stos
out
lds
xchg
push
js
leave
mov
rcrb
lods
push
pusha
push
mov
mov
sub
insl
xor
xchg
jo
mov
jns
arpl
pop
xor
jno
out
cmpsl
repz
insl
sub
sbb
dec
out
aam
and
push
push
scas
inc
es
insb
stos
idivl
movsb
jge
mov
mov
test
insb
fdivl
adc
int
cmc
cmpsb
repnz
std
xchg
jmp
cli
sub
rolb
fwait
cmp
sbb
into
insl
or
loopne
push
in
mov
push
cld
lea
outsl
add
add
add
in
ret
mov
je
jp
es
sub
push
mov
dec
inc
sub
movsl
lods
fdivrp
xor
sub
mov
inc
fnstcw
add
mov
xchg
movsb
loop
xor
addr16
mov
daa
inc
add
js
sbb
xchg
pop
rcrl
inc
jae
fwait
dec
in
mov
jne
xor
lcall
push
adc
ljmp
inc
out
mov
xchg
sbb
lock
xchg
fcmovu
pop
imul
cmp
push
inc
push
fcmovnb
xor
int
sub
nop
loop
fisubrl
add
popa
scas
rcrb
lahf
or
fdiv
dec
lretw
or
shll
and
inc
mov
outsl
loop
jo
int
outsb
in
push
test
and
inc
mov
fistpl
clc
xchg
jbe
mov
cli
adc
and
ljmp
loope
xlat
into
in
fsts
rclb
mov
jmp
scas
mov
insl
ret
aaa
daa
pop
dec
roll
lahf
adc
xchg
shl
sbb
xchg
inc
mov
insb
adc
cmpsb
add
xchg
test
aad
sub
or
popa
je
mov
pop
lcall
lock
push
fstpt
and
pop
icebp
mov
stos
hlt
and
pop
aam
push
scas
push
inc
jno
mov
add
std
lds
bound
xchg
push
add
in
xchg
scas
test
or
gs
insl
and
mov
or
sub
shr
mov
mov
inc
ficoms
das
aaa
push
in
fdivrs
mov
dec
pop
pop
shr
mov
ja
loopne
xchg
mov
lock
ss
push
out
jmp
ret
push
push
xchg
jp
push
leave
les
leave
jle
bound
iret
xchg
clc
mov
sbb
jl
popf
daa
jo
xchg
mov
mov
in
jmp
jecxz
push
popf
test
out
shrb
xor
mov
ds
insl
mov
mov
nop
xchg
xlat
idivb
jo
pushf
mov
in
pop
add
mov
test
and
js
adc
mov
mov
xchg
push
in
and
mov
insl
mov
add
imul
clc
js
push
inc
push
adc
out
call
xor
xor
aaa
xchg
lods
lea
sbb
leave
shll
jle
and
sub
adc
outsb
and
jae
loope
sbbl
and
dec
and
cmp
sbb
fdivr
pop
movsl
subl
call
fldt
cmpsb
incb
jle
pop
cmpsl
or
outsb
popf
push
add
and
lret
xlat
adc
add
mov
and
loope
imul
es
add
mov
adc
xlat
fwait
push
xchg
xchg
repnz
xchg
arpl
sub
outsb
negb
xchg
mov
push
shrb
and
out
rorb
sbb
push
jg
jnp
clc
pop
sbb
aaa
scas
adc
sti
nop
cmp
das
cmc
push
fldl
mov
ret
cmpsl
and
sbb
fdivr
lret
aam
les
fistl
rorl
push
sti
xor
fbld
dec
ljmp
adc
shll
jcxz
xchg
push
sub
ret
fs
lock
push
cltd
lock
popa
bound
jns
push
stos
rcrb
jb
pop
mov
aam
gs
clc
jae
sbb
aas
adc
popf
les
jle
add
mov
pop
jne
adc
or
aas
notb
popf
inc
jae
scas
mov
call
out
mov
sti
pop
add
sub
loope
ret
insb
clc
ds
shl
sub
repnz
mov
add
mov
or
jno
loopne
fwait
in
add
out
pusha
rol
push
cli
jnp
mov
outsl
jae
and
jg
jmp
fmull
es
sbb
data16
push
arpl
ret
imul
enter
fbld
xchg
lcall
sub
push
jecxz
adc
inc
out
sub
jp
xor
cmp
int
gs
clc
decb
adc
andl
dec
pop
dec
mov
int3
pop
mov
lahf
cld
jp
jns
pushf
insl
negl
pop
and
sbb
mov
and
call
mov
rclb
loope
add
xchg
pushf
cmp
iret
mov
mov
mov
das
arpl
imul
inc
cmp
mov
and
adc
out
jb
mov
push
mov
insl
push
gs
push
lds
sbb
testb
jns
adc
dec
jno
addr16
divl
adc
cmp
sbb
cli
inc
in
out
fisubrs
mov
fstenv
mov
xchg
cwtl
je
push
mov
jle
inc
daa
mov
mov
push
out
es
mov
iret
dec
pop
rolb
cmp
in
pop
mov
pushf
rolb
mov
movsb
xlat
adc
sub
cmpsb
xchg
or
aas
push
jne
scas
push
sub
sub
xor
sub
testl
sbb
test
icebp
shl
push
mov
neg
and
fldenv
mov
push
xor
popl
cmp
fwait
loop
jno
dec
inc
in
jo
shlb
jnp
mov
fnstsw
jge
adc
inc
insb
jo
aas
ret
or
cmpsb
add
aam
mov
data16
xchg
push
pop
dec
mov
sbb
xchg
out
push
adc
ljmp
push
test
pop
rcr
pushf
xor
scas
adc
cli
mov
call
or
std
out
iret
jp
xchg
or
mov
ja
pop
inc
rcl
ja
pop
mov
cmp
adc
adc
loop
lods
ret
or
into
inc
mov
cld
mov
cmpsl
dec
outsl
imul
add
push
or
add
test
mov
add
scas
imul
xchg
loopne
sbb
ljmp
jbe
jecxz
dec
test
dec
lods
push
mov
or
das
add
pop
loop
imull
dec
push
push
int
pop
mov
mov
nop
in
push
sub
dec
sti
push
fsubl
mov
scas
loope
nop
jne
and
jb
test
or
pop
mov
pop
pop
mov
cmp
into
shl
fdivrl
xor
pusha
mov
and
gs
mov
mov
movd
shll
jecxz
nop
mov
add
adc
mov
or
sub
sbb
push
mull
xchg
dec
lock
add
mov
iret
xor
bound
fistl
adc
fdivr
repz
inc
pop
roll
lret
pop
pop
popf
add
jne
or
push
or
and
es
add
and
cltd
add
clc
pushf
in
int3
les
lock
xor
je
add
mov
mov
sub
jbe
das
jl
cmpsb
scas
mov
mov
fwait
pusha
mov
idivb
jno
test
stc
ja
fistpll
movsb
and
sbb
dec
lods
call
dec
mov
mov
add
pop
nop
sbb
aas
sbb
or
push
cmp
adc
cs
aad
adc
out
jne
pop
pop
fdivr
fimull
pushf
xor
mov
cmc
inc
mov
jno
addl
les
xor
xor
loopne
pop
jmp
and
test
add
inc
lods
ljmp
stos
xor
fidivs
mov
lods
aaa
pop
add
pop
popf
out
movsb
cmp
xchg
dec
mov
add
out
dec
in
xchg
or
aam
jnp
clc
pop
sub
dec
testl
push
outsb
xchg
cmp
ret
adc
sbb
pusha
adc
jns
cli
add
adc
and
or
inc
repz
xchg
pop
test
xor
inc
repnz
mov
or
sbbb
push
out
cmp
cmp
xor
js
sbbb
subb
stos
rcrl
dec
push
scas
dec
adc
sub
aad
scas
sub
aad
jnp
out
lahf
jno
mov
or
subb
add
mov
mov
ret
cli
add
lcall
pop
inc
int
and
adc
daa
push
push
ss
mov
dec
mov
fbld
adc
nop
divl
repz
or
pop
cmp
mov
cmp
mov
add
mov
sbb
inc
push
notl
mov
cmp
ja
shlb
xor
xchg
pop
lods
or
jmp
add
call
mov
imul
mov
js
sub
push
in
sbb
scas
idivb
dec
jns
sti
and
xor
sahf
inc
aam
xchg
orb
pop
call
cli
add
data16
sbb
mov
daa
pop
mov
loope
adc
mov
adc
xor
shll
mov
ja
fstl
dec
cmp
lods
or
cwtl
cld
insb
mov
or
adc
jne
mov
fnstsw
sbb
jp
in
test
out
lahf
lods
stc
fisttps
pop
in
je
add
insb
inc
sarb
mov
loopne
aas
mov
icebp
nop
or
arpl
lret
push
push
in
pop
subl
or
ficompl
push
mov
and
out
mov
and
rorl
pop
mov
into
xor
shll
and
iret
repnz
imul
fisttpl
js
pop
add
xor
xchg
adcb
imul
xor
fbstp
mov
jb
fs
in
or
scas
jl
ds
add
arpl
cmp
cmp
aad
ja
push
xor
push
push
sub
subl
push
int
jnp
jns
lds
sbb
push
inc
scas
add
adcb
fbld
and
cmp
les
addr16
mov
loop
fnstcw
call
jge
popf
jmp
into
call
push
add
mov
inc
cmp
and
arpl
add
or
testl
sub
push
lds
mov
mov
dec
inc
cltd
adc
jne
mov
dec
mov
call
mov
int
loop
test
iret
add
inc
popl
jp
push
sub
inc
std
pop
loop
mov
lea
sub
andl
add
pop
mov
js
in
mov
loope
testl
push
jle
loope
sbb
inc
mov
aam
aaa
mov
fdivl
add
mov
xor
mov
jge
fwait
lcall
loope
xor
inc
int
lcall
push
jne
dec
inc
inc
or
les
shll
rclb
nop
xchg
aam
push
ficompl
or
inc
push
ret
adc
addr16
adc
push
lds
sub
sbb
fists
iret
xchg
sbb
sti
push
xor
cmp
mov
xchg
cmp
outsb
hlt
out
xchg
test
scas
push
int
lock
jb
call
jne
pop
xor
cmp
xchg
adc
dec
es
sbb
push
jmp
dec
inc
lods
xchg
jmp
pop
aas
mov
pop
jge
aas
sti
xchg
mov
cmpl
add
int3
add
sbb
pop
or
inc
push
inc
lret
jle
pop
lods
jnp
pusha
jg
cmp
mov
xchg
aad
lret
jne
and
cmp
dec
or
out
jno
dec
out
subl
enter
shll
mull
sub
rorl
cs
stos
add
repz
repz
fildll
dec
xchg
lods
adc
add
sub
inc
and
loop
cld
pop
xor
stos
lahf
cs
adc
ja
cmp
jns
push
xchg
in
test
fbld
xor
popa
adc
xchg
cmpsl
leave
icebp
mov
ja
fdivrl
sub
es
or
pop
or
repnz
xlat
das
and
adc
sbb
rcl
icebp
daa
ja
pop
adc
jnp
jno
mov
negl
xor
xchg
subb
stos
lods
mov
sbb
and
mov
dec
xchg
mov
testb
int3
sub
sarl
out
mov
ds
ja
jae
sbb
lods
dec
cmp
push
out
pop
jb
test
repnz
les
rorl
js
cmp
cmp
cli
dec
in
std
fnstsw
pop
xchg
dec
and
pop
and
jmp
fistpll
mov
imul
adc
sub
les
scas
mov
nop
js
jae
fmull
fwait
notl
insl
and
push
xor
or
adc
clc
je
jbe
ret
inc
dec
roll
outsl
inc
scas
inc
cmp
repz
dec
cmovae
in
add
xchg
pop
sbb
ss
xchg
shlb
inc
pop
lret
sub
sub
inc
std
test
movsb
in
mov
sbb
stos
stc
out
pushf
mov
jne
addr16
and
jg
sti
adc
into
loope
xchg
pop
push
ficompl
xchg
xchg
xor
and
add
lock
orl
int3
xchg
insl
mov
or
lret
ret
aam
stos
sub
jnp
sub
cld
fs
add
mov
pop
pop
sbb
rorb
mov
jmp
jae
fistps
xor
jnp
cltd
adc
inc
lret
mov
jg
xchg
test
xchg
mov
sub
movsl
out
bnd
das
lret
mov
add
jl
fucomi
add
insb
push
push
or
insb
hlt
mov
inc
test
jo
movsl
cmp
ja
pop
mov
sahf
es
arpl
jno
imulb
lea
push
adc
mov
je
ret
les
mov
fadds
cmp
arpl
les
xor
fisubs
outsl
sub
mov
out
mov
aam
scas
adc
xchg
push
lahf
push
daa
fadds
mov
aam
arpl
andb
shrl
mov
and
mov
call
orb
add
or
les
addb
fs
sbb
jno
lods
cld
mov
push
cmpsl
mov
addl
sub
pop
and
clc
addr16
jb
inc
jns
xchg
xorl
pop
into
dec
fildl
icebp
orl
je
jb
push
movsb
jae
lea
pop
jb
push
cmp
fwait
pop
dec
scas
cmc
jno
stos
xchg
add
mov
pop
push
add
pusha
mulb
into
scas
jns
xchg
mov
stos
test
pop
adc
rorl
pop
xor
testl
shlb
jbe
js
arpl
mov
dec
cmp
dec
lods
fst
loop
sbb
dec
jl
mull
dec
adc
bound
xlat
sub
push
cmpsb
adc
sbb
xchg
mov
add
mov
rorl
push
adc
aaa
xor
lock
mov
or
xchg
loope
inc
aam
add
jno
inc
dec
xor
dec
aam
jo
cmp
outsb
outsl
scas
pop
xor
hlt
nop
sbb
xchg
sbb
push
scas
inc
lcall
std
out
dec
mov
adc
pop
xchg
nop
outsb
out
dec
test
xor
push
jmp
sub
or
push
jnp
add
scas
dec
pop
shlb
test
xchg
insb
bound
inc
ror
push
aas
cmp
hlt
adc
dec
dec
add
sbb
in
cli
sub
int3
push
in
addl
outsb
push
xor
and
mov
fisubrl
pop
push
fisttps
jl
mov
lret
mov
rorl
cmpsb
sub
inc
and
jl
push
js
fimuls
call
sub
push
or
into
xchg
movd
das
in
push
xchg
pop
jbe
sbbl
adc
ljmp
fldl
popa
mov
xor
icebp
mov
mov
ljmp
out
int
stos
xchg
jno
ficoml
lds
lret
js
push
fisubl
cmc
lods
lods
sub
mov
jae
sbb
cli
push
test
push
dec
aam
pop
pop
mov
jo
lds
in
enter
cmc
and
in
add
sbb
cmp
xchg
test
pop
popf
mov
cli
imul
ds
out
xorb
jns
aas
fcomps
cmp
mov
pop
cltd
clc
psubsw
adc
add
inc
inc
and
xchg
inc
xor
mov
das
int3
and
xchg
fnstsw
lds
mov
xchg
ja
daa
outsl
mov
xchg
sbb
mov
scas
sti
shrb
adc
cmpb
scas
fdivs
sbb
nop
push
or
push
mov
loop
push
pusha
loope
adc
lds
push
sbb
fcomps
lret
add
lret
mov
mov
enter
nop
and
cmp
xor
aaa
test
fsub
adc
adc
or
out
inc
pusha
movsb
sbbl
cmp
int3
std
push
pop
xchg
cmpsl
rolb
shl
inc
xor
divb
lock
pop
pop
and
ret
mov
sbb
jae
loope
fwait
imul
scas
xor
pop
cmp
scas
shll
xchg
xor
xorb
jnp
add
xor
pop
aaa
xlat
fcoms
xor
or
gs
jns
xchg
xchg
mov
jne
stos
xor
rcrl
lods
fdiv
aas
repz
movsb
out
sbb
clc
xchg
imul
fdivl
xchg
lods
jno
pop
loop
pusha
out
jnp
cs
sbb
add
push
fwait
jl
fmuls
shll
ficomps
sbb
lahf
xchg
xchg
sarb
sbb
dec
ds
cld
or
mov
lock
jne
or
mov
cwtl
jne
adc
and
out
and
in
int3
cmp
lods
adc
repz
lret
pop
mov
pop
mov
mov
bound
shl
jle
insb
push
or
sbb
in
mov
push
stc
xchg
ja
add
jbe
insb
cmp
jb,pt
pop
sbb
lods
adc
jns
fstps
clc
jp
push
test
adc
jp
scas
inc
gs
shrb
sub
ret
in
jbe
insb
inc
or
push
and
mov
cs
arpl
add
sti
rolb
lods
das
pop
in
aam
test
xor
xlat
aam
in
jl
pop
lret
ret
sbb
dec
mov
jg
cld
pop
inc
jno
push
rcl
es
shlb
mov
mov
lret
jb
loop
ja
push
outsl
adc
std
add
aad
repnz
lahf
insl
cmp
adc
jb
fsubrl
push
shll
or
sbb
push
cmpsb
movsb
rolb
mov
and
mov
popa
stc
ljmp
ljmp
push
mov
mov
cmp
mov
sub
leave
fwait
outsb
nop
jle
adc
stos
push
mov
arpl
fwait
mov
mov
pusha
dec
adc
inc
imul
lcall
xchg
adc
repz
gs
adc
int3
or
adc
stc
pop
add
sub
pushf
loopne
ret
jb
repz
inc
jo
jno
push
add
fsubs
push
enter
inc
out
test
rcl
cmp
popf
and
and
inc
push
ljmp
js
pop
push
push
aaa
rcll
fwait
out
filds
or
cwtl
jae
popa
and
and
aam
mov
and
mov
mov
xor
sbb
jp
js
mov
sub
fisubs
ljmp
fidivrs
lret
icebp
sub
jno
test
clc
setge
popa
ljmp
inc
or
inc
lock
pop
inc
hlt
mov
add
into
int
imul
jnp
inc
jmp
js
int3
push
cmp
or
les
adc
pop
fdivl
mov
cli
jp
nop
test
push
popa
xor
imul
mov
test
stc
fisubrl
pop
mov
xchg
aad
aaa
xor
pusha
xchg
push
pop
std
icebp
out
aaa
fwait
js
adc
dec
pop
scas
stc
mov
sbb
popf
sbb
mov
pop
jb
aad
leavew
inc
fmuls
mov
dec
fcmovb
notb
sahf
mov
mov
rcl
and
mov
cmp
pop
sub
inc
testb
shrl
add
or
movsl
mov
in
inc
inc
into
rcrl
lahf
repnz
cmp
fildl
push
mov
popf
decl
icebp
out
jb
cmpl
ret
adc
jb
sahf
lcall
ret
push
cmpsl
outsb
stos
scas
xchg
adc
inc
xchg
mov
movl
add
pushf
xorb
ret
lret
test
enter
xchg
iret
pusha
les
sbbb
add
push
mov
mov
imul
sbb
inc
ret
in
ret
pop
aam
mov
sub
mov
stos
ret
sti
pop
and
fsubr
sbb
pop
dec
or
in
mov
pop
icebp
xchg
dec
insb
jne
lock
adc
and
pop
lret
loope
hlt
push
ss
mov
inc
shrl
mov
xchg
mov
dec
loop
bound
xor
test
inc
jno
mov
lods
cmp
cmp
mov
ljmp
cmp
repnz
aas
rcl
idivl
scas
pop
movsb
shl
jp
pop
and
fnstenv
es
frstor
mov
fildll
les
dec
lret
aas
mov
lret
cmpl
and
das
rol
testb
test
lea
in
mov
mov
xor
dec
dec
data16
sub
inc
xchg
aad
shrb
aas
mov
push
lahf
jb
and
clc
sti
mov
push
outsb
mov
inc
lods
addl
xchg
xchg
popa
data16
mov
int
xchg
and
js
pop
add
sbb
and
jge
lea
dec
or
inc
xor
sub
sbb
jle
repz
mov
add
push
cmp
lret
push
dec
sbb
loope
xor
or
add
cli
lret
insb
sub
mov
in
aad
cs
sub
ja
or
push
dec
scas
lahf
movsb
pop
cmp
cmc
dec
mov
lcall
add
jmp
scas
aam
add
sbb
out
js
adc
add
out
push
mov
cmc
call
std
add
loop
push
cmp
jp
mov
mov
xchg
ss
stos
sbb
bnd
mov
jae
fsubrs
push
repnz
shlb
cmp
cmpsl
or
mov
jnp
out
dec
in
sbb
ss
and
pop
clc
pop
call
and
shlb
sub
dec
mov
fnsave
fsubp
loopne
adc
ss
sbb
xchg
fs
mov
push
in
xor
xchg
jns
gs
push
mov
repnz
ror
jg
mov
iret
pop
loop
rcrb
dec
push
fwait
jp
xor
mov
mov
push
mov
popf
aad
stc
das
insb
stos
lds
jge
adc
xor
cmp
add
mov
push
push
sbb
hlt
pop
mov
add
xlat
sbb
ret
pop
sti
sarb
lea
push
rcrl
sub
pop
addb
xchg
mov
cmp
cmc
stos
dec
sub
pop
xchg
es
xlat
subl
push
loop
lret
add
jb
lahf
jle
bound
rcll
lds
mov
movsl
mov
pop
cmpsl
mov
mov
fwait
push
jo
adc
inc
add
sbb
fninit
subb
popa
xor
push
cmp
sahf
popf
push
add
pop
push
xchg
add
iret
stos
lahf
movlps
sub
and
call
dec
fs
jae
cmp
push
pusha
add
sahf
jge
mov
jmp
divb
lcall
pop
xor
push
inc
add
mov
call
dec
and
popf
sbb
lahf
jbe
lods
sub
pop
mov
and
xchg
inc
int3
stc
and
or
popa
pop
cmp
dec
pop
push
orb
sub
xor
outsb
stos
push
pop
or
jg
jbe
aaa
fsubs
mov
scas
pop
inc
in
leave
xchg
dec
lock
pop
mov
leave
dec
fs
adc
mov
jnp
pop
dec
fidivl
fisubl
add
movsb
cmp
sbb
fidivrl
lock
stc
mov
inc
mov
loope
cltd
test
mov
jbe
clc
clc
or
outsb
jb
inc
int3
cmc
cmp
jne
imul
cli
mov
addb
add
sbb
outsl
in
mov
mov
push
movsl
sub
adc
jp
cld
repz
inc
lds
dec
jmp
jne
out
popf
adc
mov
mov
loop
rcl
dec
dec
mov
cmp
fistl
push
and
mov
jbe
adc
pop
rcr
pop
test
xor
push
dec
inc
xchg
popa
es
push
push
jmp
cmp
xor
ret
cld
outsb
rorl
push
push
repnz
inc
jge
or
dec
hlt
loope
add
sbb
shll
inc
push
sub
xor
dec
adc
clc
cmp
adc
aaa
xchg
int
and
repnz
cwtl
lea
ret
dec
bound
incl
push
or
mov
mov
scas
jne
leave
push
or
int3
jp
xchg
or
jne
mov
jge
test
pop
in
pop
faddl
les
fists
xchg
lea
mov
mov
mov
jb
sub
cmc
cmp
fsubs
cwtl
lds
mov
cwtl
fidivs
lods
out
outsl
aad
pop
std
or
lock
xchg
mov
pop
push
lds
dec
add
xorb
pop
jle
cmpsl
cld
mov
dec
and
in
out
mov
and
jno
rcr
movsl
fsub
flds
pusha
xor
fcoml
fmuls
lret
loope
add
adc
mov
inc
movlps
lods
cmp
int
jmp
sbb
or
add
mov
sub
or
xchg
jle
cmp
pop
sti
shl
fwait
shrb
mov
icebp
out
cmp
jecxz
lahf
mov
rolb
push
xchg
sti
push
fwait
sbb
hlt
fwait
leave
popa
out
jne
xor
push
repnz
hlt
and
insl
inc
mov
mov
jbe
xchg
jbe
loop
or
cmp
mov
cmc
popa
out
sub
mov
std
jno
pop
and
das
leave
cmp
jnp
and
movl
inc
cs
shlb
xchg
lea
adc
sbb
shlb
lea
and
and
push
and
iret
push
pop
pusha
arpl
hlt
inc
mov
and
test
cmp
test
cmp
js
out
xchg
jne
xchg
leave
xchg
push
filds
mov
loope
ret
cmc
outsb
fisubs
push
rorb
dec
cmp
jecxz
dec
addr16
data16
mov
shrb
std
loopne
pushf
push
dec
pop
cmpsl
inc
fisubrl
mov
mov
shrl
cmpsb
mov
mov
mov
lret
push
daa
mov
repnz
or
loop
cltd
xor
lcall
popa
jne
out
arpl
push
sbb
xor
cmp
jne
adc
xlat
test
jno
insb
push
dec
iret
int
inc
mov
pop
push
or
jns
sbb
in
les
adc
push
add
mov
test
repnz
popa
push
cmpsb
dec
xlat
cwtl
scas
ret
in
mov
pop
adc
aaa
push
pusha
mov
mov
das
pop
sarb
call
fcmovnb
lock
inc
or
sbb
je
call
loopne
jmp
fdiv
push
cmpb
pop
in
data16
add
lock
jmp
mov
in
xchg
jge
push
sub
cli
jb
dec
pop
pop
sbb
xchg
mov
jp
cltd
mov
xchg
shll
inc
lcall
je
pusha
pop
and
add
or
bound
scas
out
sbb
sbb
sahf
push
dec
das
or
repz
notl
inc
cmpsb
push
jbe
cmp
and
mov
mov
xchg
jge
pop
fimuls
mov
push
rcl
decb
pop
sbb
fsubl
shll
mov
loope
sub
push
jo
repnz
daa
cmp
cwtl
inc
inc
cwtl
add
push
and
sub
movsl
out
sbb
into
loope
xchg
les
xchg
pushl
push
push
aad
dec
bound
sub
sbb
push
loopne
xchg
lock
lret
icebp
inc
mov
jbe
adc
lcall
pushf
push
cs
adc
dec
and
inc
mov
mov
jbe
and
lods
inc
pop
shrb
sbb
push
push
sub
xor
scas
push
inc
jecxz
jbe
cmp
xor
push
cwtl
xchg
sub
lret
sbb
fcompl
aam
inc
dec
ja
mov
xchg
sbb
mov
mov
je
mov
push
in
add
mov
cmp
daa
sahf
stos
adc
and
test
call
shlb
ret
pop
mov
cltd
cli
clc
fcomip
cltd
mov
push
rcll
roll
pushf
add
add
jecxz
pop
aad
das
mov
jecxz
adc
xchg
xor
mov
inc
stos
insl
arpl
dec
lret
inc
divb
xchg
fidivrl
int3
rolb
xchg
xchg
pop
sub
pop
xor
stos
iret
or
arpl
dec
push
fdivr
xchg
jge
mov
jg
mov
lock
bound
cmpsl
lock
mov
add
inc
dec
pop
stos
mov
mov
mov
mov
fidivrl
and
inc
mov
mov
xchg
mov
fstpl
repz
int
dec
scas
ret
std
int
pop
push
or
shr
mov
add
fidivs
mov
and
cld
push
fsubr
jl
scas
inc
movsb
mov
sbb
mov
stos
and
sbb
mov
stc
pop
xor
int3
rcrl
movsb
pop
insb
loopne
fistl
das
jl
lcall
jnp
mov
cwtl
fnstenv
xchg
pop
mov
ss
mov
shl
lret
mov
adc
loop
insl
call
xor
out
ficompl
mov
jecxz
xor
adc
push
mov
cmp
xor
pop
push
int
xchg
lods
das
shrl
cwtl
ja
lret
outsl
jns
add
push
add
push
clc
shl
or
jecxz
arpl
pop
clc
rcrl
adc
dec
dec
dec
adc
ljmp
lcall
in
sarb
out
cwtl
inc
out
pop
repnz
std
sbb
decl
out
inc
add
push
imul
sbb
aam
jl
nop
les
fimull
insl
mov
jne
jp
daa
push
mov
ja
push
xor
roll
inc
fs
in
jg
sarl
mov
insl
aad
rcll
and
sub
jge
shll
push
shll
sub
call
orl
aaa
mov
inc
and
test
imul
adc
xor
pop
adc
filds
lea
int
pushl
repz
lret
mov
fwait
lods
loope
ss
jle
repnz
mov
test
stos
sub
sbb
aad
mov
ljmp
xchg
or
lahf
inc
cmp
rcll
sub
pop
out
leave
in
pop
enter
jb
and
loopne
rcll
movsb
jnp
ret
stc
repz
lret
adc
in
sub
rol
pop
xchg
dec
daa
movsl
or
or
sub
mov
int3
adc
int3
or
push
cld
jmp
jb
inc
push
mov
mov
mov
jo
pop
negl
insl
mov
xchg
or
push
data16
xchg
repz
mov
jo
mov
xchg
xorl
inc
adc
cwtl
mov
movsl
jle
jae
xchg
jbe
adc
fucomi
ds
int3
ja
movsb
pop
dec
gs
fmul
sub
out
shlb
sahf
mov
shrb
rcrl
pop
sbbb
inc
cmp
add
shlb
inc
add
in
sahf
sti
dec
sbb
push
notb
scas
fiaddl
ret
or
jns
adc
xor
mov
icebp
cmp
cli
jae
icebp
dec
std
push
fidivs
fadd
fisubrl
mov
jns
mov
xor
pop
add
mov
out
pop
add
jecxz
in
dec
pusha
inc
cmp
push
andl
mov
cmpsb
cmpsb
jecxz
jnp
jle
std
popa
stc
sbb
jnp
popf
adc
xchg
insl
imul
aam
adcl
jmp
cmp
push
adc
aaa
sbb
jmp
ret
out
or
jbe
xlat
mov
lahf
push
fidivs
xchg
testl
mov
out
xor
mov
rcrb
outsl
jb
jl
hlt
pop
and
inc
or
lret
sub
rcl
dec
push
jmp
dec
in
in
ljmp
push
in
cmpl
push
adc
mov
ja
cld
mov
adc
ds
dec
stos
mov
insl
add
lock
movsl
jns
scas
in
fbld
jg
stc
cmp
xchg
jns
lea
ret
and
cmp
aaa
sti
lods
ror
pop
ret
jb
sub
loop
into
hlt
rorl
pop
and
int3
fmull
loop
das
cmp
ss
xchg
push
lods
imul
add
xor
mov
in
sub
iret
leave
mov
pop
out
mov
ss
das
adc
lret
lods
iret
cmp
sbb
cltd
pop
lahf
out
dec
lds
dec
jle
or
out
dec
stos
fidivrs
adc
xchg
push
xchg
dec
sahf
jle
cmpsb
jp
icebp
adc
jne
loope
loop
or
pop
push
jae
push
mov
ret
lock
or
cmp
aaa
mov
mov
and
lods
sbb
inc
scas
jecxz
inc
shrl
jae
scas
adcl
xor
inc
jo
lods
jne
adc
lods
cmpsl
add
xlat
cmp
or
fistps
fdivrs
aaa
fimuls
sbb
test
mov
sahf
mov
cmpsl
sbb
mov
xlat
bndstx
cmp
xchg
adc
jp
jns
test
mov
push
dec
rcl
cld
fisubl
inc
mov
ds
addl
fdivrp
cltd
add
xor
jl
adc
les
cs
xor
out
cli
inc
mov
cmp
xlat
fldenv
icebp
or
mov
fwait
mov
cltd
shll
xor
ja
adc
xchg
and
popa
aas
out
jmp
pop
stc
enter
mov
sbb
push
int
mov
xchg
cs
scas
arpl
hlt
cs
or
jne
aad
dec
out
lahf
mov
cmpsl
pop
jecxz
outsl
movsl
dec
mov
xor
rorb
sub
xor
inc
std
jbe
aaa
mov
mov
pop
xor
rcrl
push
orl
push
jg
jp
pop
lock
xor
mov
sub
and
rcrb
inc
mov
push
xchg
outsb
cltd
jb
lods
add
or
mov
leave
adc
mov
hlt
or
test
fldcw
mov
add
iret
insb
adc
sub
aaa
add
movsb
nop
and
jne
shlb
pop
subb
inc
push
jns
jne
lret
pop
inc
jmp
loopne
cmp
pushf
outsl
inc
xorb
adc
rcll
imul
fiadds
inc
cld
test
ret
fadds
xor
add
scas
and
sub
xchg
sub
in
cwtl
xchg
adc
lods
adc
jns
xor
popa
xor
push
in
mov
pop
icebp
subb
jmp
faddl
xor
test
cmp
fadd
hlt
les
lods
lods
repz
sub
scas
mov
imul
outsl
lahf
add
fwait
cmp
orb
fstpt
addr16
cmp
shrl
pop
mov
movsb
in
lret
jle
inc
sbb
sub
xor
call
shl
cs
pop
aam
clc
push
cltd
cmp
leave
dec
mov
sbb
dec
jnp
mov
cmp
mov
aaa
sub
cmc
fimuls
or
xor
test
mov
pop
push
enter
lahf
push
arpl
ficompl
sub
popf
mov
jnp
mov
leave
cmp
pop
cmc
ds
or
mov
mov
std
adc
sub
or
cmp
sub
xchg
fdivr
ds
and
ss
je
adc
sbb
movsb
lock
mov
adc
movsl
or
cwtl
lock
push
add
sbb
pop
je
adcl
shrl
test
inc
xchg
jp
pop
pop
jne
sbb
inc
aam
fnsave
pushf
adc
and
ds
nopl
mov
shlb
icebp
xor
mov
push
mov
mov
loop
xchg
mov
pop
es
flds
aas
jbe
imull
mov
xchg
adc
mov
adc
mov
clc
pushf
fldenv
mov
enter
mov
dec
ficoml
xor
scas
mov
fs
mov
gs
push
pop
jbe
sbb
push
jo,pt
loop
xchg
test
es
push
push
into
xchg
jmp
pop
push
push
divb
xchg
push
mov
pop
fistl
or
or
pop
sub
push
fistpl
movsb
insb
pop
lods
and
lock
jle
cli
cmp
cmp
push
push
std
mov
dec
push
xchg
xor
mov
inc
lcall
out
cli
fs
adc
jle
imul
or
mov
insl
mov
mov
push
enter
mov
mov
or
inc
cmp
lret
gs
xchg
sub
sbb
aas
divl
out
imul
cmc
lret
push
lcall
das
dec
mov
pop
dec
cmpsl
and
mov
daa
mov
mov
test
icebp
in
dec
ror
stc
cmp
inc
mov
mov
mov
mov
dec
jecxz
test
xor
fisttpl
add
jnp
sub
ss
insl
inc
cld
mov
or
mov
scas
imul
jo
movsl
sub
scas
push
outsb
les
in
aam
xlat
dec
and
stc
sbb
sub
mov
mov
rcrb
or
dec
mov
push
aad
cmp
mov
cmp
lret
fcmovnb
enter
xchg
mov
dec
cs
int3
add
movsl
xor
fidivrl
mov
pop
stos
jg
push
xorb
jp
sbb
mov
dec
sbb
mov
dec
ret
dec
fs
stos
les
push
popf
mov
push
jne
in
add
mov
xchg
jnp
out
pop
jge
mov
xchg
adcl
sbb
addr16
sbb
add
mov
dec
lea
ret
xchg
and
adc
loope
jl
loopne
dec
sbb
mov
test
idivl
je
cmp
mov
dec
push
out
stos
loope
or
and
shlb
mov
jo
fadd
jae
jl
test
ss
nop
sbb
rclb
adc
pop
lods
ret
sahf
push
pop
mov
and
ret
cltd
push
push
xchg
jo
outsb
mov
sub
xchg
pmaxsw
scas
push
jnp
push
cmp
addr16
mov
imul
xor
aaa
stos
push
lods
xchg
clc
pusha
pop
mov
lea
jae
pushf
cmp
inc
xchg
pop
orl
xchg
cmp
jmp
push
sub
push
jmp
dec
sahf
addr16
push
jb
pop
or
notb
daa
repnz
sbb
fidivrl
loope
jne
jle
scas
insb
push
insl
out
fisttps
mov
sbb
std
std
pusha
out
sbb
sub
call
mov
in
push
outsl
sub
inc
fcoms
ds
lods
movsl
push
adc
mov
out
cltd
dec
ret
xchg
rcrb
daa
add
repz
sub
mov
or
mov
pop
jle
pop
sub
push
dec
out
dec
nop
ljmp
cmp
mov
adcl
movsb
xlat
out
in
lods
jmp
push
adc
fdivrp
mov
xor
and
mov
loop
adcl
mov
jb
iret
jp
or
mov
mov
mov
push
in
mov
mov
lcall
add
dec
dec
inc
push
fimuls
or
or
xchg
aaa
sbb
iret
dec
inc
sbb
cmp
or
out
mov
out
dec
adc
insb
mov
sub
add
pop
adcl
fcoml
sarl
pop
dec
push
fldenv
lods
push
mov
stos
sbb
cmp
bound
into
mov
sahf
jno
shrl
xor
nop
and
xchg
jno
in
dec
mov
in
into
or
xchg
mov
add
pop
and
cltd
sbb
outsb
in
push
push
mov
push
mov
fdivrs
in
fs
jbe
push
ljmp
fsubrs
cmpsb
imul
in
imul
loope
mov
test
xlat
scas
dec
adc
scas
sub
or
xchg
sub
pop
mov
scas
dec
pop
push
dec
xlat
stos
xchg
imul
jb
imul
adc
xchg
inc
xchg
pop
add
add
add
fwait
push
cmp
pop
push
out
mov
loop
push
scas
mov
icebp
push
movsl
adcb
outsb
lods
adc
or
inc
or
jnp
push
ljmp
test
push
mov
cmp
cmp
mov
fdiv
in
mov
mov
mov
roll
fimull
into
lods
mov
pop
sbbl
mov
std
dec
mov
mov
push
outsl
sub
mov
movb
mov
dec
add
sub
mov
mov
aam
push
popf
ja
leave
es
jne
mov
push
dec
call
mov
mov
iret
xchg
outsl
out
test
or
sub
adc
cli
jmp
mov
xlat
sub
fsubr
dec
call
outsb
ret
jne
sbb
mov
sbb
out
add
jle
dec
out
mov
movsl
cmpsl
mov
and
xchg
and
out
or
pushf
neg
push
loopne
into
sub
mov
flds
fadds
push
push
sbb
add
pop
insl
push
pop
adc
sbb
or
inc
jge
mov
xor
push
mov
std
lods
shlb
add
sti
lods
fisubl
push
int
and
xchg
jns
sub
or
lock
mov
out
xlat
insb
cltd
cmp
push
popa
jecxz
pop
aam
push
adc
bound
ljmp
aad
mov
xchg
test
arpl
fbstp
xor
inc
inc
pushf
sub
incl
leave
lahf
cmp
adc
jl
pop
push
sub
into
xchg
testb
fistpl
xor
xor
rol
data16
pop
lods
jmp
push
popf
test
es
loop
dec
sti
into
jl
dec
in
and
mov
cs
stos
pusha
rcll
sub
insb
out
addr16
jecxz
push
adc
push
inc
jns
dec
pop
outsl
lods
pop
mov
fcmove
clc
loopne
inc
mov
jl
std
repz
cwtl
aam
daa
xor
test
movsb
jbe
mov
lret
pop
or
push
jp
dec
jecxz
jo
mov
dec
push
mov
lds
mov
fdiv
es
stos
mov
mov
inc
aam
lret
shl
mov
out
mov
pop
aas
push
mov
neg
out
insb
push
lock
sbb
or
push
dec
jg
out
scas
mov
ret
andl
mov
xchg
jo
sub
fld
inc
lds
mov
sbb
icebp
flds
cmp
dec
fsts
lret
cmp
push
adcb
mov
nop
pop
cmp
mov
enter
jbe
iret
icebp
push
call
sti
cli
inc
mov
fisubl
mov
repnz
add
sub
sub
lret
cmp
and
aaa
or
mov
pop
gs
cmpsl
mov
shll
sub
mov
aas
scas
leave
in
test
push
xchg
sub
loop
test
xlat
xchg
cmp
push
cmp
addps
inc
clc
jmp
shl
inc
add
adc
lret
jecxz
add
bound
mov
ds
sbb
inc
xchg
cmp
inc
inc
pusha
cmp
or
dec
into
cmp
adc
dec
lahf
out
fsubl
mov
sbb
xchg
inc
sahf
clc
nop
fstl
sbb
inc
pop
sub
push
fiadds
les
cltd
mov
push
stc
mov
push
idivl
adc
jb
out
cwtl
scas
pop
push
ljmp
cmp
pop
out
fdivrl
js
adc
gs
inc
mov
sbbl
hlt
pop
inc
cmpl
dec
mov
int
subl
cwtl
jno
out
mov
mov
cmp
push
leave
icebp
sbb
jle
xchg
dec
sahf
cmp
popa
jle
inc
push
sbb
cld
mull
test
leave
pop
gs
movl
call
or
rcr
fldl
cmpb
inc
in
adc
push
jmp
sub
dec
dec
push
es
mov
mov
dec
jl
sarl
inc
pushl
mov
cmpsl
negb
add
dec
loopne
lea
pop
push
test
mov
and
std
and
mov
inc
loop
jne
hlt
aas
daa
cld
sbb
push
and
adc
out
shrb
les
add
dec
aad
loop
popf
jecxz
pop
push
push
inc
sub
imul
cmp
sbb
ljmp
fdivrl
mov
sbb
dec
xchg
xor
test
dec
sti
dec
add
xlat
and
test
loop
push
adc
rcrb
xor
in
sub
mov
negb
popf
jmp
push
push
jo
inc
mov
inc
imul
dec
mov
imul
push
mov
ljmp
aam
and
mov
lea
inc
xchg
push
icebp
adc
out
fldl
flds
mov
icebp
mov
enter
cli
fdivrl
mov
movd
mov
mov
pop
les
aas
cmp
cmp
imul
mov
movsl
dec
fisttpl
andl
pop
push
jl
adc
in
outsl
inc
imul
pop
out
mov
sub
test
lods
add
stc
jecxz
arpl
sub
and
add
test
loope
sub
or
mov
pop
inc
dec
pushf
in
xchg
adcb
xor
sarb
push
mov
dec
test
pop
int
add
in
stos
mov
mov
push
fldenv
jle
xchg
jge
jmp
ljmp
rcl
pushf
and
cmp
cmc
lret
cmp
cltd
pop
stos
stc
sahf
or
mov
mov
js
dec
and
and
sub
sbb
test
int3
mov
xlat
test
loopne
mov
add
jb
pop
dec
test
push
xlat
push
fwait
dec
adc
xchg
ret
xor
outsb
lcall
sbb
push
mov
mov
or
and
or
idivb
mov
pop
fcmovb
push
mul
lea
mov
or
xor
ja
lret
addr16
mov
int3
addr16
mov
fwait
test
pop
inc
adc
and
loope
mov
mov
decb
mov
dec
and
xchg
sub
loope
repz
or
xchg
hlt
or
jmp
adc
sbb
mov
jb
xor
inc
int
dec
iret
dec
jo
cmp
cmc
mov
xchg
cmp
rorb
into
es
addr16
sbb
iret
cmpsl
ljmp
jg
and
inc
or
xor
or
xlat
test
mov
jnp
enter
mov
mov
jo
aaa
mov
out
xor
fdivs
popf
cmpsb
sbb
add
mov
cmp
dec
mov
ror
cmc
cwtl
scas
arpl
mov
ret
insb
clc
pop
call
mov
das
stos
or
in
and
jge
mov
aam
mov
das
jmp
dec
jg
mov
pusha
out
or
lods
or
movsl
xchg
inc
fistpll
mov
xchg
aad
fmull
push
mov
push
nop
xor
mov
lock
and
ficoml
loop
out
out
add
int3
scas
jg
clc
mov
mov
pop
xor
mov
push
xchg
jno
pop
repz
inc
icebp
and
or
mov
cli
loop
dec
adc
icebp
mov
mov
mov
or
cmp
jge
flds
inc
aad
loop
mov
xor
pop
xrelease
leave
jle
shl
and
fwait
jne
popa
or
adc
std
bts
inc
jne
pop
pop
arpl
js
cmp
xchg
movntq
push
or
fnstsw
and
or
addr16
test
in
scas
mov
inc
pusha
sub
out
popf
fcmovu
jnp
out
dec
push
movsb
mov
cmpsl
cli
movsb
inc
dec
popf
aaa
arpl
xor
outsl
cmc
cmp
scas
xchg
repnz
sbb
aas
mov
xchg
sarl
push
mov
flds
or
sbb
jmp
stos
fwait
nop
cli
pusha
stc
ss
push
jb
add
inc
inc
push
push
mov
ja
cmpsb
in
adc
cwtl
ret
push
and
fimull
shrd
data16
fcomi
jo
aam
std
inc
sbb
bound
stos
jno
add
adc
in
mov
and
xchg
mov
ret
call
testb
mov
push
jle
xor
push
inc
imul
mov
jnp
xchg
xchg
loopne
add
sub
ss
lret
jb
call
stos
pop
xor
lcall
lods
movsl
push
repz
push
inc
jnp
xchg
push
xor
cmp
pop
add
loopne
sahf
mov
push
rcl
pop
push
imul
sbb
repz
pop
sbb
cli
pusha
inc
mov
or
das
fiadds
mov
out
out
lret
imul
in
sub
nop
daa
sub
arpl
inc
ja
mov
push
addr16
add
in
sub
pop
rcll
jne
add
adc
leave
mov
iret
out
fsts
mov
jecxz
negb
pushf
pop
cwtl
lea
fidivs
adc
sbb
adcb
filds
jle
cmp
dec
adc
jg
sbb
inc
loopne
push
jp
nop
addr16
mov
inc
dec
iret
mov
into
sarb
add
out
std
cwtl
sbb
popa
sarb
sbb
test
inc
icebp
orl
mov
xor
or
movsb
sbb
inc
pushf
jb
lret
add
adc
or
pop
ret
rcrb
dec
ss
mov
mov
cmpsb
aas
xchg
xor
inc
mov
sub
xchg
loope
pop
fstpl
jle
ljmp
pusha
call
or
adc
push
je
in
imul
cltd
sbb
fdivs
in
mov
adc
push
jle
mov
push
mov
xchg
push
lcall
enter
scas
push
mov
int
cli
adc
sbb
cld
ljmp
daa
sahf
xor
pop
push
cmp
jb
lcall
fimull
dec
xchg
push
das
jb
scas
ficoms
fld
pop
clc
repz
sub
dec
aaa
or
jmp
cmpsb
push
inc
movsl
repnz
fsincos
pusha
xor
es
mov
pop
notl
hlt
add
jae
pop
jmp
xchg
jle
add
js
jge
cmc
scas
xchg
stc
ret
dec
je
sti
mov
jp
add
pop
out
repnz
add
add
cltd
lret
orl
dec
add
xlat
adc
fiadds
out
push
repz
and
lock
pop
xor
enter
cs
and
add
repz
popa
iret
sub
sbb
mov
int3
outsl
inc
sbb
pop
xlat
sbb
mov
lds
cltd
rorl
lret
pop
xor
ss
sub
aaa
stos
xor
inc
inc
in
jb
mov
cmpsb
xchg
fbld
lcall
sub
push
push
jge
sub
lcall
push
xor
daa
rcrl
dec
and
sahf
arpl
jle
int
xor
sub
xchg
sub
imul
ss
mov
into
lea
mov
into
addr16
into
sbb
push
ljmp
gs
clc
pop
arpl
dec
mov
xchg
cmpsl
gs
cmpsl
cmp
cmp
pusha
rcrb
push
jnp
outsb
ss
cld
mov
iret
loope
in
test
lea
pop
shrl
sbb
stc
cmpsl
repz
lock
jns
cwtl
inc
push
inc
cmp
adc
addr16
std
push
scas
repnz
into
cmpsl
stc
adc
cmp
xchg
adc
clc
and
popa
add
pop
jb
sbb
aad
and
jo
mov
and
mov
pop
mov
add
rolb
add
je
cltd
or
mov
mov
loope
inc
xor
xchg
xchg
jmp
push
sbb
into
or
xor
jne
incl
stc
cmp
push
les
fwait
push
cli
mov
push
pop
aam
and
flds
dec
add
arpl
add
gs
mov
dec
dec
call
mov
mov
adc
sbb
fistps
cmc
fwait
jmp
addr16
and
mov
pop
cmp
adc
in
popf
mov
std
sar
jo
mov
data16
lods
mov
push
test
rorl
mov
mov
sarb
sub
ret
out
xchg
outsb
xchg
rolb
ret
hlt
sbb
pop
jo
icebp
ret
fiadds
pop
bnd
sbb
cmp
int3
movsb
or
dec
push
xor
and
mov
dec
sti
dec
call
ljmp
stc
testl
jns
and
push
pop
outsb
cli
sub
mov
inc
sbb
icebp
sbb
inc
loopne
pop
sti
mov
aas
out
sbb
sub
xor
stos
loop
cmp
cbtw
insb
jo
inc
dec
mov
outsl
movsb
aaa
out
add
push
push
jno
pop
dec
popl
dec
lret
in
jg
inc
dec
sub
subb
out
sbbl
cmpsl
ljmp
aam
and
and
jns
xchg
sub
les
aas
test
jne
lea
add
jmp
int
lcall
mov
shll
call
fs
in
inc
out
xor
lea
jp
jle
popf
fwait
mov
xchg
sbb
inc
mov
or
mov
xchg
cmpb
imul
daa
rcrl
call
jbe
mov
mov
sub
xchg
xchg
cli
push
xchg
mov
pop
or
push
imul
popa
addl
outsl
push
pop
mov
xor
xchg
arpl
enter
pop
sti
cmp
cmpsl
cli
fisubl
jmp
out
frstor
inc
je
pop
sahf
mov
cmpsl
fnstcw
lea
xor
mov
push
and
mov
mov
int
mov
ds
cmp
mov
push
outsl
xchg
add
jecxz
xor
xchg
sub
lahf
in
mov
xchg
sbb
push
lcall
ss
mov
and
mov
jecxz
mov
in
les
cmp
push
or
xchg
pop
push
mov
adc
and
movsb
call
inc
cli
mov
das
rclb
mov
stc
jo
insl
xchg
decl
lret
xorb
cs
mov
pushf
jo,pn
cli
enter
mov
mov
xchg
movsl
hlt
popf
imul
lcall
adc
inc
out
jp
mov
jl
or
repz
xchg
or
cli
push
mov
xor
pop
xchg
or
add
test
test
and
ljmp
mov
scas
dec
jg
mov
sbb
daa
leave
mov
sub
pop
lcall
mov
mov
cs
repz
cld
lahf
int3
push
jle
xor
popf
imul
jmp
mov
movsb
dec
mov
mov
sbb
aaa
test
cmp
jne
jecxz
rcr
int3
jecxz
cmp
mov
jmp
psubd
xor
and
pop
cld
outsb
insl
roll
jp
clc
mov
rorb
in
in
adc
out
jb
orb
or
clc
jne
inc
jmp
xchg
out
ja
xchg
mov
data16
xchg
lock
add
dec
out
pop
adc
xchg
out
xchg
pop
xchg
jge
lret
sub
test
int
cli
in
pop
jg
insb
mov
sub
aaa
fildll
pop
xchg
ret
dec
aad
stc
or
testl
bound
ss
test
lods
lock
mov
dec
inc
rorl
dec
bound
cmp
sbbl
sub
pusha
repnz
pop
inc
cwtl
inc
movsl
int
je
pop
div
lds
sar
lea
icebp
sbb
ljmp
mov
jecxz
in
gs
inc
das
push
test
sahf
push
xchg
or
xor
imul
adc
jg
pop
pop
push
daa
ljmp
cmpsb
int
mov
cld
dec
sub
loopne
push
call
dec
inc
insl
push
xchg
inc
mov
clc
fstps
cmp
rorb
xchg
xchg
je
dec
int3
jecxz
cmp
dec
outsb
int3
mov
call
sbb
mov
sbb
into
xchg
and
fldcw
scas
lahf
mov
xor
pop
jg
or
loopne
mov
xor
lret
dec
dec
ds
pop
mov
dec
dec
daa
adc
in
out
or
push
push
xchg
stc
mov
lret
push
mov
inc
popa
adc
add
or
cwtl
push
lahf
push
xor
sub
sbb
push
mov
push
insb
sub
xchg
cmp
in
mov
dec
and
cmpsl
pop
inc
and
movsb
fildl
mov
ljmp
mov
les
subb
stos
mov
pop
sbb
iret
pop
push
xor
xor
xchg
mov
cmc
clc
fsubrs
icebp
clc
je
pop
mov
adc
aaa
push
jmp
mov
filds
push
xchg
pop
int3
jle
push
ficompl
lea
push
lods
lods
pop
or
into
and
dec
in
insl
sar
icebp
mov
inc
sub
pop
xorl
push
popa
mov
ret
imul
cmp
lods
mov
push
jge
ljmp
mov
in
ja
sbb
fldenv
xchg
cmp
dec
push
out
loop
daa
xchg
inc
xchg
inc
test
jge
cltd
pop
icebp
pop
mov
sub
pop
mov
stos
adc
xchg
movsl
fwait
cmp
cmp
mulb
test
dec
sub
mov
jno
push
xor
pop
mov
jmp
jae
inc
jl
add
and
push
bswap
or
jg
ret
insl
int3
inc
scas
sbb
jae
mov
fucomi
xchg
dec
adc
iret
inc
call
fstl
mov
push
cmp
or
push
das
sbb
fs
dec
scas
inc
mov
xchg
jg
adc
shll
insb
sbb
lea
dec
cmp
das
jno
lods
in
xchg
and
in
sub
scas
std
imul
aaa
fnsave
fs
insl
insl
and
cli
dec
jge
pshufw
push
cmp
or
sbb
pop
out
out
lods
jge
out
scas
cmp
dec
mov
or
aad
mov
stos
out
pop
mov
rorb
insl
adc
add
mov
sbb
xor
push
shr
lock
sbb
inc
cli
out
bound
ja
mov
push
leave
sub
scas
jge
cmp
xchg
dec
mov
and
cmpsl
jbe
arpl
jg
icebp
incb
pop
push
insl
jle
mov
test
and
cwtl
inc
lods
jno
push
mov
mov
mov
mov
pop
shrl
lret
addl
sub
cmc
je
or
sbb
sbb
mov
icebp
shlb
in
iret
or
dec
incl
ds
imul
adc
sub
cmp
cltd
pop
xchg
ret
pop
mov
cmp
int
xchg
xchg
test
cmp
dec
andl
adcb
lods
push
xor
sbb
insb
pop
ficoml
popf
divl
xor
iret
flds
loope
mov
mov
adc
in
xchg
mov
cmpsb
xor
dec
in
orl
inc
loope
mov
adc
cmp
sub
inc
cmc
jle
lea
in
jbe
xorl
nop
mov
cli
daa
mov
sbb
jnp
and
push
pop
lds
js
cmp
stos
mov
inc
inc
jge
aad
les
sbb
into
repnz
js
ds
rcll
jmp
mov
inc
mov
iret
loope
mov
and
sub
sahf
jns
rcl
or
mov
movsl
cmp
xchg
xchg
or
push
pop
add
push
loop
xchg
loope
dec
mov
or
pop
xor
imul
icebp
jg
popa
jno
dec
iret
sbb
stos
adc
ljmp
sti
cld
mov
loopne
xor
lcall
mov
jae
mov
sub
cmp
je
loopne
dec
dec
and
cmp
rorl
lods
adc
mov
loop
sub
sbb
movsl
sti
mov
pop
lds
out
aas
ret
imul
pop
outsb
mov
and
lods
add
outsl
stos
push
sub
into
mov
mov
fmull
arpl
negl
sbb
sbb
mov
push
jno
jb
xrelease
sbb
sbb
je
cmp
in
mov
sbb
daa
sub
push
mov
cli
stos
jmp
push
mov
mov
xor
ss
filds
popf
loopne
cmpsl
out
and
fwait
push
sbb
jbe
or
xchg
out
inc
jg
and
sarb
into
ficompl
jecxz
xchg
xor
bound
inc
cmp
outsl
loope
lods
mov
add
pop
cwtl
outsb
jnp
cli
jl
in
lods
and
mov
cmp
mov
push
mov
mov
lods
jno
mov
inc
dec
inc
inc
pop
lcall
fistpll
mov
shrl
sahf
xchg
push
jp
js
push
pop
popf
sti
push
int
xorl
or
inc
fldcw
mov
int3
out
loope
iret
lret
imul
mov
lahf
stos
sbb
inc
and
inc
movsb
rcrl
push
in
inc
xchg
decl
xor
stos
dec
sti
ret
repnz
dec
dec
mov
cmp
adc
cmpsb
ret
test
mov
mov
xor
cmp
xchg
adc
mov
xchg
sbb
sub
inc
xor
aam
fnsave
movsb
sbb
or
movsl
jecxz
or
in
xchg
adc
sub
int
frstor
push
imul
popf
adc
fildll
imul
call
aaa
add
pop
or
ja
jmp
inc
shll
dec
push
cltd
push
pop
imul
cltd
ljmp
lret
jp
jmp
sbb
int
inc
dec
jecxz
mov
repz
rcrl
or
inc
or
jecxz
xchg
push
mov
hlt
inc
cltd
incl
shrb
add
xor
gs
sbb
or
jno
push
mov
pop
test
aad
mov
out
test
sbb
fdivr
imul
add
popf
call
das
push
xchg
xor
push
in
jbe
rcr
xor
dec
daa
cltd
les
mov
pop
test
pop
icebp
aas
bound
push
or
and
jns
adc
dec
movsb
in
adc
xchg
lock
jae
ficoml
jbe
loop
out
xor
mov
pop
decl
add
xchg
sbb
push
sti
xlat
pop
xor
xchg
mov
arpl
orl
je
in
mov
mov
fcmovnbe
and
testl
fwait
test
push
adc
mov
fcmovbe
push
dec
and
daa
xchg
fcomps
hlt
dec
push
and
cs
ljmp
cld
and
inc
or
leave
adc
mov
cmp
cmpsl
aas
adc
sub
pusha
and
fwait
or
insl
pop
daa
push
cmp
add
inc
jmp
push
je
icebp
sti
xchg
pop
aad
rdmsr
repnz
dec
mov
data16
aas
jl
ss
je
int3
sbb
gs
enter
inc
fwait
dec
dec
out
inc
int3
inc
push
into
mov
pop
addr16
xchg
iret
push
subl
xor
jecxz
adc
imul
test
adc
jmp
roll
xchg
dec
and
rcrb
adc
and
fildl
push
push
cltd
xchg
push
cmp
icebp
int
hlt
lahf
mov
jo
dec
stos
xchg
ljmp
jmp
pop
mov
push
cmp
xchg
test
adc
popf
or
push
insb
lcall
adc
in
fistpl
dec
pop
cmp
sbb
inc
xchg
pusha
pop
ret
cmp
repnz
imul
dec
fcmove
mov
mov
data16
mov
out
popl
push
dec
add
repz
jbe
out
sbb
aas
and
jb
jg
dec
int3
xchg
cltd
adc
shll
stc
mov
pushf
sbb
pop
pushf
pop
fsubl
adc
andl
push
les
xchg
push
mov
int
pop
xchg
mov
stc
cmpl
daa
testl
jecxz
imul
inc
mov
test
sub
and
jns
sub
arpl
mov
es
mov
sbb
mov
xchg
cld
orl
das
xor
subb
xor
test
in
add
mov
call
sbb
mov
movsl
in
and
mov
addr16
ja
dec
fsubrs
adc
add
imul
push
inc
pop
in
fsub
pop
lcall
push
aad
mov
test
js
lcall
test
bound
aaa
mov
and
repnz
push
imul
lods
rorl
aaa
mov
push
add
mov
lcall
dec
mov
jae
push
mov
out
pop
push
mov
imul
sahf
das
or
std
jecxz
addr16
xor
ljmp
hlt
sbb
dec
and
movsb
push
pop
jp
rcl
mov
push
in
outsl
inc
jne
or
gs
jnp
mov
arpl
add
inc
imul
jne
push
mov
and
sbb
mov
icebp
fnstenv
sub
out
xlat
aam
and
jnp
or
jo
cli
mov
adc
dec
mov
je
push
mov
mov
xor
int3
xor
lret
mov
pop
sub
pushf
or
mov
call
mov
mov
insb
sub
mov
pushf
addr16
xchg
fwait
dec
adc
sub
pusha
movb
fwait
call
fisubs
push
sub
jp
mov
jmp
or
fnstcw
mov
icebp
sub
outsb
cmpsl
cmp
xchg
add
push
dec
jno
pop
sbb
sub
mov
enter
mov
mov
mov
pop
imul
cmpsb
sub
loope
enter
fwait
out
rol
lcall
out
clc
xchg
fimull
movsb
pop
push
loopne
mov
cmp
push
xchg
mov
frstor
sbb
aam
pop
imulb
dec
xchg
xchg
xchg
aad
adcl
inc
inc
pop
lods
mov
sbb
jmp
inc
stc
pop
push
add
cs
cld
cmp
bound
or
out
xchg
xchg
push
push
ss
fnstenv
or
mov
dec
inc
cmp
sub
push
mov
cmp
sub
or
cmp
xor
std
es
xchg
jo
in
shlb
xor
sbb
adcb
lods
mov
or
imul
stc
xchg
les
push
out
inc
dec
orb
int
pushf
mov
mov
iret
data16
jae
xchg
notl
push
xor
test
mov
mov
rorb
inc
cmc
push
daa
imul
imul
adc
rcrl
shlb
data16
aam
lahf
jae
mov
addr16
push
xchg
mov
clc
ds
xchg
and
cltd
or
pop
mov
sub
push
icebp
add
sti
adc
xor
mov
dec
les
scas
xchg
ret
rorb
adc
sub
repnz
repz
out
negb
test
inc
sbb
add
dec
in
push
adc
xchg
outsl
push
sub
test
sub
push
fstl
out
aas
shrb
push
pop
popf
xchg
push
stc
pop
and
mov
fs
int
lods
scas
or
or
inc
xor
mov
mov
xor
mov
aad
sarl
mov
inc
sahf
mov
dec
loope
fiaddl
pop
std
mov
imul
adc
dec
jg
mov
jl
stos
inc
ja
arpl
xchg
push
movsb
shrl
mov
dec
mov
ret
cmp
shl
cltd
into
cmp
adcl
xchg
adc
leave
inc
insl
mov
xchg
cmpsl
xor
jbe
add
into
sbb
ret
xchg
mov
loopne
insl
pushf
hlt
sbb
and
cwtl
sbb
add
rcrl
or
outsl
out
or
iret
fnstenv
mul
retw
cmp
push
rorb
mov
rcrl
outsl
mov
pop
arpl
test
mov
arpl
adc
xor
add
fdivrs
imul
faddp
or
jl
pop
lret
lahf
or
push
xlat
add
pusha
and
cwtl
adc
or
cltd
inc
xor
cmp
fcmovbe
sarl
jae
mov
in
sub
adc
imul
sbb
mov
clc
push
jns
aas
in
sarl
stos
xchg
xor
in
add
ss
pop
or
add
inc
mov
jle
mov
lds
jmp
xchg
arpl
cmpb
mov
add
inc
scas
movsb
mov
or
adc
mov
lahf
cmp
add
jmp
mov
pop
mov
dec
sub
or
cs
lods
imul
jp
cld
adc
les
jbe
mov
or
dec
js
test
mov
push
mov
ret
lcall
sti
jge
cld
sbb
dec
lock
and
cmpsb
adc
stos
jg
dec
mov
xchg
add
fiadds
orb
rclb
loope
dec
mov
mov
lea
in
test
mov
dec
insb
stos
pop
push
pop
xor
pop
repz
pusha
or
sbb
aam
pop
mov
punpckhbw
sub
dec
cwtl
mov
bswap
mov
xor
sub
pop
pop
inc
xchg
psrad
jmp
xchg
push
aad
insb
sbb
push
aas
arpl
sahf
mov
mov
fnstenv
jbe
adcb
cld
cmpsl
jp
mov
shl
mov
xchg
test
mov
out
sbb
ds
sbb
out
mov
push
inc
pop
push
xchg
shr
in
and
sbb
adc
es
inc
jmp
push
movsb
push
jbe
pop
shll
aad
push
or
push
cmpsb
iret
mov
rol
and
dec
xor
xor
movsb
js
or
cmp
rcr
loop
lcall
inc
inc
xchg
xchg
xor
xor
jmp
pop
jge
dec
jmp
mov
shrl
insb
adc
dec
xchg
inc
pop
cmpsl
jp
iret
pop
int3
xor
inc
stos
xchg
cmp
xchg
and
test
aaa
xor
mov
rcrl
cmpsl
movl
ret
inc
out
push
sti
lods
repnz
dec
cmpsb
jecxz
mov
pop
mov
add
in
dec
cmp
fstpl
sarl
aam
movsb
inc
imul
xor
jecxz
movb
test
add
xor
enter
or
stc
add
jb
dec
arpl
lea
mov
stos
aam
gs
mov
pop
and
or
jae
dec
dec
out
mov
in
jns
or
jbe
add
call
jnp
jg
mov
inc
or
movsl
outsl
jle
sub
adc
sahf
ret
pushf
inc
mov
pusha
in
pop
dec
jecxz
pop
pop
test
pop
aad
ficoml
xchg
mov
sbb
xchg
les
push
adc
xchg
ds
dec
adc
xor
popf
mov
fidivrl
and
orb
mov
in
test
in
push
daa
iret
movsl
cmpl
push
add
ss
adc
outsl
xorl
fidivrl
fistpl
xor
push
cwtl
or
mov
mov
xor
pop
popa
mov
push
ss
jle
inc
jne
jne
stos
mov
mov
andl
in
test
xchg
mov
cmpsb
je
push
inc
and
std
xchg
inc
mov
push
pop
pop
adc
add
jb
jne
cmp
jnp
pop
outsl
into
rcr
cmpsl
push
mov
fs
lock
int3
fiadds
repnz
mov
enter
iret
mov
lods
cmp
mov
les
loop
rcrl
xchg
fs
jno
rolb
mov
std
sbb
cmpsl
aaa
mov
imul
mov
and
sbb
mov
push
push
xor
fs
ds
pop
sbb
jo
dec
insb
loop
mov
stos
addr16
pop
in
ret
inc
add
pop
push
or
popf
inc
mov
shrd
lea
push
cmp
xchg
loopne
fistps
mov
mov
push
std
cmc
dec
mov
jmp
shlb
sbb
push
sbb
mov
test
mov
jb
jle
cmp
rol
pop
shlb
loope
and
aad
and
ds
hlt
sub
loop
or
jo
pop
test
outsb
mov
push
insb
inc
or
test
jmp
stos
pop
sub
xchg
stc
pop
lods
lods
push
je
aaa
cmp
jge
mov
sub
mov
pop
data16
mov
mov
xchg
push
fsubrs
out
inc
insb
or
outsl
sub
xor
scas
test
arpl
mov
in
mov
mov
cmpsb
push
fsubrs
cmpsl
hlt
cmp
scas
or
dec
push
jno
lret
mov
scas
fnstsw
pusha
or
mov
call
aad
stc
cltd
adc
push
push
or
out
jp
loopne
mov
sbbb
fimull
and
pop
mov
fdivrl
xchg
or
push
inc
shl
movhps
mov
ja
negb
imul
scas
hlt
ror
scas
mov
sub
dec
pop
in
xlat
icebp
cmp
frstor
push
movsb
fdivs
and
out
hlt
mov
dec
movl
imul
cmp
push
sub
mov
mov
rol
jl
imul
push
jae
dec
xor
pop
or
pop
xor
jne
xchg
adc
xchg
orl
movsl
loopne
daa
and
movsb
int3
and
add
test
inc
lock
movsl
repnz
or
pop
stos
or
xor
inc
hlt
aaa
cmp
jmp
inc
test
pusha
sahf
jnp
ficomps
lret
xchg
jp
xchg
push
add
adc
xorl
insb
mov
pop
imulb
dec
cmc
pusha
repnz
stos
jo
and
sbb
xchg
mov
je
jne
enter
ljmp
push
arpl
outsl
cmpl
xchg
sbb
fdiv
push
jl
cmc
xor
and
and
mov
inc
lcall
lcall
jns
add
xadd
cwtl
mov
or
pop
arpl
scas
inc
mov
sbbb
lds
lock
jne
jp
stos
in
push
sub
inc
les
push
test
fwait
sub
or
loope
push
lret
inc
add
fnstcw
xchg
jno
sbb
imul
add
pop
fnstenv
in
movsl
adc
mov
das
scas
push
sub
idiv
stc
push
test
or
sbb
call
movsb
loope
mov
xor
fnsave
outsl
sarl
pop
shr
pop
xchg
and
jge
insl
movsl
ss
test
stos
test
mov
xor
and
in
out
and
adc
inc
jmp
aas
adc
xchg
xorb
jecxz
inc
ds
mov
loope
inc
xlat
pop
loop
es
outsl
shl
les
mov
dec
ret
imull
jge
inc
sar
dec
mov
jg
aas
mov
std
xchg
cmpsb
cmp
fbstp
outsl
xchg
cmp
jns
movb
icebp
std
mov
jno
add
rep
adc
pop
imull
jp
lods
ret
xchg
test
in
xor
lahf
xlat
or
push
inc
ret
enter
mov
and
dec
popf
mov
ljmp
xor
in
cli
xchg
pop
lret
mov
popf
cld
inc
push
icebp
out
inc
cmovs
and
popf
aaa
pop
icebp
loope
out
inc
and
mov
push
jp
add
roll
mov
mov
shlb
outsb
jmp
pop
test
cmp
jnp
dec
cmp
push
push
dec
incb
pop
dec
push
loop
inc
ror
and
iret
iret
or
nop
imul
fbld
adc
test
es
dec
fcompl
int
push
push
ss
jl
incl
push
lds
xchg
out
push
cmp
add
add
mov
xchg
pop
movsb
xchg
mov
lods
pop
add
clc
imul
mov
in
cmp
add
in
scas
movsb
outsb
dec
ds
xor
jl
shlb
lds
mov
mov
dec
lods
or
dec
bound
push
pop
js
out
fwait
inc
or
jp
and
or
in
pop
adc
stc
sbb
mov
clc
cmpb
mov
leave
cmp
mov
mov
jecxz
mov
lds
aaa
ljmp
mov
mov
popf
stos
subl
fstl
stos
inc
sahf
or
jg
xchg
dec
icebp
ds
icebp
push
dec
inc
sti
paddq
cmp
and
jb
insl
add
std
frstor
lock
mov
imul
or
imul
ds
xchg
iret
mov
imul
sub
mov
in
push
arpl
xchg
mov
shlb
cmpl
arpl
lahf
adc
adc
push
xchg
sub
ja
outsb
xchg
add
lock
fs
cmpsb
fs
arpl
xchg
cmpsb
adc
xorb
dec
sub
jge
lock
mov
repz
cmp
idivb
loop
sub
mov
xlat
roll
fisttps
add
imul
movsb
jl
call
mov
adc
jo
add
sbbb
mov
lock
shll
repz
pop
sub
inc
pavgb
add
lret
jecxz
jbe
ds
mov
int
jae,pn
es
jo
mov
daa
subl
sub
adc
adcb
pop
mov
cmp
cli
cmp
faddl
jg
adc
pop
or
jns
add
and
test
sub
jbe
mov
xlat
sbb
call
push
mov
and
push
js
jno
cmpb
fidivrl
xor
in
icebp
and
mov
ljmp
push
xchg
cmp
stos
inc
imul
xor
test
iret
lds
test
push
out
jnp
loope
pop
xlat
sti
mov
repnz
dec
cltd
lret
xor
addr16
add
mov
push
out
push
sbbb
stc
mov
std
test
aaa
mov
sub
dec
addr16
push
jo
enter
sub
scas
test
inc
xchg
ja
icebp
xlat
push
pushf
mov
in
mov
int
jl
pop
lret
outsl
or
xlat
das
test
shrb
xchg
movsl
inc
inc
in
mov
rcl
pop
mov
loop
sub
add
xchg
test
mov
add
insb
mov
cmp
or
aas
cmc
fwait
dec
insl
popf
mov
push
pop
test
ds
dec
movsb
mov
sub
xchg
ret
pop
lahf
adc
xor
xchg
or
mov
and
mov
cltd
sahf
cli
adc
pushf
popa
mov
dec
hlt
loop
push
or
xor
testl
imul
xor
pop
addb
push
movsb
das
scas
inc
xor
xchg
push
loopne
arpl
testl
sub
push
xchg
in
mov
nop
rolb
in
adc
insl
std
or
imul
mov
shl
fsubrs
lods
sbb
pop
and
dec
and
aad
cs
hlt
aad
imul
push
lock
jg
add
mov
ljmp
push
dec
cmp
fsts
dec
jo,pn
popf
test
in
mov
leave
testb
xor
adc
push
fsubp
gs
test
test
cmpsl
push
xchg
adc
mov
push
or
les
pop
out
xchg
std
lret
sub
push
mov
subl
jge
adc
push
lcall
mov
out
mov
out
in
in
daa
xor
hlt
rclb
pop
sbb
dec
rol
fwait
and
stos
cmp
and
dec
mov
cli
sarb
fildl
mov
in
lret
mov
jle
sub
ja
pop
jp
rcrb
mov
into
jecxz
push
add
or
adc
pop
popf
jns
xor
scas
in
push
lret
sahf
jecxz,pt
insl
sti
rcl
lret
ret
movsl
insl
fstpt
and
lock
in
cwtl
push
inc
xor
sbb
aad
lcall
push
xor
int
cmpsb
sahf
pop
stc
xor
and
ljmp
dec
pop
dec
inc
popf
mov
sub
sub
fstl
xchg
sub
test
aaa
rcrb
popa
mov
xchg
and
scas
push
lock
sarl
scas
push
push
dec
mov
cmp
xor
movsb
das
jnp
mov
pop
fiaddl
fiadds
aaa
or
outsb
daa
dec
mov
or
xor
sbb
lea
sbb
insb
sub
fisubl
pop
aad
outsl
lcall
leave
out
mov
pop
jae
aad
adc
add
aas
lahf
outsb
xor
cmc
imul
or
scas
shrb
cmp
inc
dec
js
sub
sub
or
xchg
add
ret
pop
jbe
xchg
mov
fwait
sahf
cs
mov
pop
mov
cwtl
and
or
mov
inc
sbb
mov
inc
mov
mov
or
clc
aaa
adc
lea
out
lods
leave
adc
enter
call
and
and
sbbb
push
clc
push
add
repz
in
icebp
dec
jbe
iret
jnp
add
pop
inc
cltd
ljmp
fnstenv
and
dec
jbe
jge
sahf
stos
js
out
xor
inc
sti
repnz
pop
xchg
sub
cld
pop
les
cmp
pop
sahf
and
fidivrl
daa
mov
jo
lock
xchg
dec
out
jg
xchg
or
test
push
or
inc
mov
xchg
gs
add
push
lods
or
mov
scas
repz
or
sbb
pop
inc
dec
push
mov
mov
mov
lods
dec
and
movsb
stos
int3
or
sbbl
test
test
inc
cmpsb
add
adc
dec
pop
das
fnstsw
clc
jnp
push
adc
mov
adc
mov
jmp
push
cmpsb
jmp
sub
xor
pop
push
repz
lods
and
in
push
fildll
sub
xchg
leave
fimull
in
adc
out
insb
sbb
stos
sti
ret
out
jno
es
and
fst
and
stos
inc
xchg
jb
nop
movsl
test
xchg
roll
fwait
pop
mov
outsl
or
jle
lcall
test
or
jb
je
jge
popf
fdiv
xorb
xchg
pop
xchg
xchg
fstpt
sti
jbe
cmp
bnd
pop
addr16
inc
leave
and
cwtl
push
pop
andb
in
push
mov
sbb
lods
dec
clc
push
aam
dec
sub
test
mov
sub
xor
sbb
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
hlt
jecxz
in
xor
xor
pusha
jp
test
xlat
mov
cmp
push
adc
cmp
jp
test
adc
add
scas
flds
test
es
push
rclb
insl
mov
pop
fsts
jae
pop
fistpll
inc
jnp
andl
shr
sbb
push
flds
push
hlt
movsb
adc
pop
es
aad
lock
mov
andb
fdivl
lock
dec
mov
cmp
lcall
out
arpl
insb
into
mov
add
and
testb
aam
inc
fs
in
jmp
adc
in
icebp
xor
push
jmp
jae
inc
jno
mov
daa
pop
sbb
add
and
and
push
sbb
push
aas
jns
pop
mov
mov
jmp
and
fdiv
lret
test
lret
sub
inc
cmpsb
inc
ror
mov
adc
orb
jle
pop
push
inc
pusha
and
frstor
aaa
subl
adc
cmpl
sub
push
cld
je
sub
lods
adc
enter
imul
mov
jle
enter
mov
or
mov
mov
pop
lret
fmuls
into
inc
pusha
lea
movsl
sbb
pop
lods
jg
aaa
call
insl
adc
dec
jg
aam
in
in
cli
add
cmp
fcom
cmovb
mov
arpl
scas
mov
mov
mov
fisubl
add
outsl
jge
xor
bound
push
xor
and
ffree
pop
dec
and
jb
cmpb
cmp
stos
mov
add
pop
scas
int
movsb
pop
dec
push
je
es
mov
dec
and
nop
pop
loop
mov
repnz
lcall
arpl
jne
cli
lds
in
add
adc
xchg
fistps
sub
icebp
push
fcompl
jmp
test
jnp
jge
pop
jp
inc
adc
inc
insl
fstpt
adc
fsubl
stc
fs
icebp
in
rorl
fimull
cmpsl
jmp
cltd
or
daa
pop
shrl
pop
call
mov
mov
test
adc
lods
hlt
and
dec
mov
push
jl
mov
xchg
adc
cmp
jo
push
outsb
inc
pop
ja
out
lock
rcrb
and
sti
cmp
imulb
xchg
aaa
pop
inc
dec
xor
addr16
cmp
push
or
or
jae
scas
push
mov
push
subb
xor
jne
out
cmp
xchg
add
sbb
lock
jl
cmpsb
mov
or
gs
push
pusha
pop
adc
xchg
icebp
test
inc
sbb
aaa
outsb
sbb
xchg
fwait
es
stos
mov
sbb
adc
call
jno
out
cwtl
int3
in
xor
or
lret
lret
mov
scas
mov
xor
js
pop
gs
push
mov
pop
fidivrl
jmp
push
cmpsl
mov
add
aam
call
popf
scas
dec
pushf
mov
dec
popa
sbb
jecxz
sahf
mov
or
or
xchg
mov
inc
loopne
dec
in
mov
xor
popa
inc
adc
imul
jmp
dec
enter
scas
cmp
test
rclb
in
mov
xchg
xor
fnclex
xchg
adc
add
xchg
xchg
adc
call
ret
sbb
inc
xor
xchg
jbe
adc
mov
mov
adc
mov
in
ror
pop
and
out
ret
gs
push
shlb
fs
add
lods
adcb
pop
inc
fmull
mov
or
out
push
mov
addl
scas
mov
ret
dec
jmp
fwait
push
cmpsl
or
push
adc
jecxz
sub
xchg
push
into
fs
insb
loop
mov
pop
dec
ss
cmpsl
in
jns
aam
hlt
ds
aas
mov
in
xchg
dec
pop
sub
push
fwait
cmpsl
imul
dec
xchg
lea
out
jno
adc
xchg
adc
jl
pop
repz
add
inc
gs
imul
je
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
je
inc
jns
gs
outsl
push
imul
add
push
gs
fs
imul
outsl
jae
dec
popa
outsb
fs
add
add
imul
add
push
jb
outsb
jae
arpl
insl
gs
imul
jb
popa
je
inc
imul
jb
popa
je
push
jb
arpl
jae
add
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
jbe
push
jns
gs
add
add
je
imul
push
jo
arpl
js
add
add
je
outsl
imul
jbe
push
je
imul
add
je
imul
popa
je
add
add
je
popa
je
inc
outsl
jb
popa
je
add
add
je
imul
add
inc
gs
imul
bound
gs
add
add
outsb
fs
insb
outsl
jae
add
add
insb
gs
imul
jae
gs
push
imul
imul
outsl
dec
outsl
arpl
inc
imul
add
inc
imul
inc
imul
imul
je
imul
gs
imul
gs
add
dec
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
insl
popa
jo
imul
insb
add
add
jo
imul
insb
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
je
imul
add
inc
gs
imul
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
dec
outsl
fs
xor
inc
imul
push
gs
imul
outsl
arpl
jae
add
insb
jae
jb
insl
jo
inc
add
add
outsb
push
jb
arpl
jae
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
add
je
gs
imul
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
gs
inc
imul
outsl
jo
inc
imul
gs
imul
bound
gs
add
add
je
jns
je
insl
inc
imul
jns
add
add
jb
insl
jo
add
add
imul
jae
add
push
popa
imul
insb
gs
bound
arpl
add
gs
je
dec
jne
gs
add
add
je
gs
jo
popa
je
inc
add
add
je
jb
outsl
jb
outsl
fs
add
je
outsl
arpl
push
imul
gs
imul
jb
popa
add
add
je
outsl
insl
jo
je
jb
popa
insl
gs
add
add
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
inc
gs
outsl
imul
jbe
jae
add
inc
outsl
insl
jo
jb
push
je
imul
inc
outsl
insl
jo
jb
push
je
imul
push
gs
outsb
fs
inc
imul
popa
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
add
add
je
outsl
fs
gs
imul
add
add
gs
je
push
push
add
add
je
popa
jae
inc
jb
outsl
jb
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
add
gs
add
inc
gs
je
imul
push
add
add
je
je
imul
inc
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
jne
push
inc
jne
data16
add
add
je
je
dec
popa
outsb
fs
add
add
inc
popa
fs
outsl
fs
je
add
add
inc
popa
fs
gs
fs
je
add
add
je
outsb
push
gs
js
gs
imul
gs
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
push
gs
js
gs
imul
gs
add
inc
gs
inc
dec
inc
push
add
add
je
inc
push
add
add
je
push
dec
outsb
outsw
add
add
popa
jo
je
imul
dec
inc
dec
popa
jo
je
imul
inc
gs
imul
add
inc
gs
je
dec
popa
outsb
fs
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
dec
gs
jo
imul
popa
imul
jo
imul
jae
popa
fs
jb
je
push
je
add
add
popa
jo
gs
insb
insb
outsl
arpl
add
push
imul
insb
insb
outsl
arpl
add
push
imul
jb
add
add
popa
jo
jb
popa
je
add
add
popa
jo
gs
jb
jns
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
gs
imul
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
insb
push
outsb
ja
outsb
add
add
popa
jo
jb
add
add
popa
jo
insb
insb
outsl
arpl
add
inc
gs
jns
je
insl
push
imul
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
add
outsb
fs
imul
add
push
outsb
fs
gs
popa
addr16
add
add
je
jae
jb
popa
insl
gs
add
add
addr16
jb
popa
je
dec
gs
js
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
insb
outsl
jae
dec
gs
add
push
gs
jo
outsb
dec
gs
js
add
add
gs
insb
inc
js
arpl
gs
add
add
je
jb
gs
jo
outsb
inc
add
add
je
jb
gs
jo
outsb
push
jb
inc
add
add
je
jb
gs
gs
fs
imul
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
jb
gs
jb
arpl
jb
inc
add
add
je
jb
gs
outsl
outsb
outsb
arpl
add
dec
je
jo
jo
outsb
push
gs
gs
inc
add
add
je
push
outsb
fs
gs
gs
inc
add
add
je
push
fs
add
mov
or
sbb
add
rclb
add
add
add
xchg
rorl
rclb
add
mov
nop
add
enter
lods
rorl
enter
add
add
add
add
mov
xchg
add
fcoml
add
add
add
rorl
fcoml
add
rcl
or
rclb
