jns
pop
mul
in
or
pop
jl
int
jnp
fsubl
lahf
iret
mov
pusha
gs
sbb
and
lds
dec
lods
adc
popf
push
lock
sbb
cli
jmp
outsb
lds
inc
loop
mov
adc
cmpsl
cmpsb
inc
aam
call
fwait
mov
loopne
and
int
aas
int3
cltd
addr16
push
cmp
shl
test
cmp
jg
add
mov
jp
pop
mov
add
mov
add
cmp
je
aas
repnz
or
sbb
rcrb
popa
ss
rol
cmp
cmc
ret
test
adc
jnp
test
jns
adc
xchg
arpl
adc
mov
lods
ljmp
inc
mov
shrl
out
xor
xchg
sbb
out
cmp
sub
ret
xor
pop
push
cmp
fisubrs
jnp
jno
dec
mov
jl
imul
ds
ficompl
pop
idivl
lret
cmp
mov
adc
ret
mov
jns
cmp
outsl
mull
push
xor
in
test
push
push
mov
inc
mov
pop
ljmp
xorl
pop
xor
add
clc
sbb
push
cmpsb
mov
cwtl
jp
push
mov
mov
pop
pop
or
push
sti
bound
push
test
dec
dec
cmp
enter
ljmp
jb
mov
incl
test
mov
je
inc
cli
inc
loop
ret
test
stos
push
inc
and
rcr
mov
cmpsb
pop
lods
jle
jbe
out
mov
mov
cmp
inc
int
cmc
mov
push
in
jecxz
sbb
jae
test
fmull
jge
ja
je
es
ds
movb
clc
fwait
pop
test
push
pop
sub
std
inc
pop
cmp
aas
lods
mov
clc
xor
lret
ret
jns
icebp
sti
scas
xchg
add
lahf
call
push
idivb
icebp
hlt
add
jmp
mov
xchg
cmpsl
stos
ret
adc
jge
bound
imul
cs
mov
pop
adc
xor
sbbl
inc
outsl
pop
repnz
addr16
jae
mov
push
mov
nop
je
mov
out
or
rcr
repnz
ret
inc
cmp
cld
dec
dec
jmp
sbb
test
push
xor
std
enter
pop
jnp
push
in
flds
adc
js
mov
clc
inc
push
lahf
inc
or
inc
sahf
fildll
pop
in
jmp
popa
ret
or
ret
inc
stos
lret
push
out
imul
sub
mov
xchg
nop
jno
iret
das
aas
enter
es
outsl
addl
mov
cmp
xchg
negb
add
xchg
daa
and
push
add
push
js
sub
jge
sub
dec
iret
out
jle
jno
popf
fninit
mov
test
jo
movsb
shl
int
cwtl
orb
cs
push
mov
and
ficoml
mov
xor
jecxz
fcmovnbe
adc
scas
mov
or
call
mov
pop
mulb
aaa
fdivs
xchg
push
xor
mov
je
lahf
cmc
movsb
mov
sbb
dec
or
pop
das
stos
fldl
cmpsl
mov
and
loope
outsb
inc
test
out
jle
dec
add
inc
cmpb
xchg
mov
mov
in
mov
cmp
mov
loope
rcrl
enter
push
inc
iret
adc
bound
aaa
fcmovu
outsb
xor
dec
popl
ss
fdivrl
shrb
xchg
mov
js
inc
mov
sub
pop
push
pop
test
fcmovb
xor
fiadds
or
out
ds
std
adc
mov
test
xor
mov
adc
mov
inc
mov
out
mov
dec
sbb
jle
mov
or
and
inc
xchg
mov
xor
push
mov
bound
mov
outsb
bound
es
sbb
push
push
push
push
sbb
or
orl
icebp
lret
sub
sub
add
jnp
movsl
mov
std
dec
sbb
pop
nop
sbb
ss
mov
insb
fwait
dec
jg
jle
imul
repz
mov
pusha
xor
out
dec
lods
jmp
add
insb
xchg
xor
decb
and
add
mov
movsb
xor
idivl
adc
shlb
xchg
or
adc
fbld
popa
cmp
jbe
mov
cmp
inc
jns
fnstcw
data16
sub
pop
push
jne
fdiv
jb
enter
std
jae
push
mov
inc
mov
cmp
rclb
adc
mov
pop
xor
push
sbb
add
ds
rorb
cmp
cmp
sbb
mov
sub
repnz
out
fidivs
xor
push
clc
outsl
add
jmp
xor
sbb
stos
pop
adc
dec
push
adc
cmp
mov
pop
rcll
cmp
push
push
pop
out
and
cld
or
or
push
mov
es
or
and
cmp
fwait
in
mov
mov
jns
fcoms
mov
flds
out
cmp
fwait
lcall
pop
xor
adc
pop
push
pop
daa
out
inc
mov
int
addr16
jg
sbb
mov
sbb
je
ror
aam
ret
dec
sub
icebp
jecxz
adc
fistps
hlt
mov
mov
and
sub
iret
ljmp
push
imul
cmp
mov
xchg
hlt
sub
sub
jecxz
cmpsl
jne
and
inc
sbbl
sbb
ret
and
push
cmpsb
and
add
pop
fisubl
dec
sar
jecxz
das
loope
or
cltd
lea
or
je
mov
out
pop
out
out
test
and
mov
pop
es
xor
out
mov
or
dec
dec
sub
repnz
dec
adc
and
inc
mov
sti
sbb
pop
dec
enter
pop
push
cmpsl
shlb
jne
cmp
adc
mov
sub
movsl
mov
jg
pop
jmp
lock
lods
push
xchg
andb
jo
cli
mov
test
aam
mov
push
dec
mov
fidivrs
fsubl
inc
scas
adc
call
mov
movsl
loope
xchg
sbb
jb
pop
stos
ret
xor
ss
loope
cmp
mov
or
jnp
xchg
fwait
pop
mov
ret
std
call
dec
scas
test
lret
pop
popa
adc
mov
outsl
out
xchg
ja
push
or
mov
dec
scas
adc
or
pop
push
push
sbb
sub
xor
int3
jae
scas
enter
mov
ret
jg
lahf
inc
jl
xchg
jno
les
mov
ja
popf
out
movsb
fidivrs
dec
mov
xchg
aam
lock
push
xchg
dec
mov
in
test
pushf
pop
mov
sub
cli
sub
bnd
jno
stc
xor
or
sub
push
lock
mov
mov
adc
jb
aas
add
sub
lea
lahf
loopne
cmp
xchg
mov
mov
movaps
jge
add
comiss
sti
arpl
push
or
jmp
add
jecxz
insl
mov
push
lret
in
ljmp
sbb
push
mov
in
test
lock
bswap
mov
xor
and
inc
shll
addr16
les
ss
adc
push
mov
sub
popa
xlat
mov
add
in
mov
push
cmp
test
cmp
out
mov
out
jge
inc
dec
cmp
mov
imul
scas
incl
mov
testb
or
xor
sti
push
cli
fidivrs
pop
into
call
pushf
arpl
pop
mov
xor
gs
aad
pop
or
out
pop
or
stos
mov
jb
mov
out
pop
mov
push
pop
xchg
js
ss
cmp
in
lea
data16
sub
cmpsb
aaa
xchg
push
cwtl
es
lods
nop
lcall
into
pop
daa
adc
add
jb
push
xchg
data16
or
sub
or
pusha
pop
pop
push
clc
push
add
ljmp
out
mov
cld
jno
jge
xlat
mov
mov
jp
hlt
es
cmp
pushf
mov
js
outsb
int3
adc
fwait
leave
jl
or
mov
fldcw
mov
and
sbb
call
mov
mov
sub
inc
and
xor
aad
push
sbb
adc
int
ret
mov
xor
push
ret
adc
pop
sub
rcrl
out
push
jmp
repnz
in
push
pop
sti
je
xor
inc
push
lret
subb
inc
popa
jne
xchg
cmp
cmp
bound
jecxz
push
jmp
and
jp
dec
mov
lea
les
mov
fdiv
sbb
sub
mov
sbb
into
xchg
dec
pop
mov
sbb
enter
in
add
push
fstpl
movsb
cmp
sarl
cli
or
aad
mov
ret
cmp
sbb
andl
fwait
sub
xor
das
mov
rorb
subb
inc
ficomps
cmp
lea
test
cmpsl
push
das
mov
sub
jp
sbb
dec
mov
xchg
aad
sti
rorl
mov
jo
push
sbb
lcall
fidivrs
dec
dec
pop
stos
dec
scas
call
pushf
es
rolb
pushw
fsubrs
xlat
andl
sub
xor
mov
aam
ret
movsl
sbbb
xchg
jbe
mov
mov
sub
test
xor
and
push
arpl
lea
ret
cmc
mov
arpl
mov
sbb
mov
dec
xor
cmp
int
add
mov
mov
pushl
pop
lret
pop
mov
lcall
lret
push
in
xor
or
mov
mov
pop
jbe
mov
inc
sub
jae
pop
fisubrs
andb
jge
pop
movsb
cmp
test
pop
int3
lea
addr16
daa
repnz
loopne
les
mov
push
stos
pop
pop
movsl
call
lret
jns
mov
jae
aas
inc
pusha
aas
xchg
rorl
lods
pop
data16
btr
pop
push
sbb
add
cli
jl
call
ret
cltd
pop
fmuls
dec
lcall
xchg
scas
dec
xor
test
test
aas
lea
pop
push
push
mov
test
xor
inc
inc
fisttpl
in
xchg
xchg
stos
rorl
aas
scas
cmpsb
loop
jecxz
lcall
inc
jl
shl
test
or
out
or
add
js
mov
mov
jg
mov
push
pop
into
push
adc
je
jnp
inc
sub
fisubl
je
es
cmp
fmuls
adc
pop
stos
pop
sub
pop
fnstsw
fisttpl
add
stos
push
mov
adc
cmpsb
sub
push
fistpl
mov
push
movsb
lods
sarl
or
fucom
imul
outsl
ljmp
mov
mov
push
push
xchg
cmp
mov
hlt
cmp
shrb
lods
loopne
xlat
ret
or
push
roll
jnp
sub
sbb
cmp
xor
sub
faddp
jle
cmpsb
xor
lods
lcall
rorl
insl
imul
ficoml
or
push
adc
cmc
call
stos
insb
call
xchg
xchg
xchg
movsl
adc
xchg
bound
push
xchg
stos
or
mov
inc
shll
fwait
add
xchg
push
rclb
loop
icebp
inc
movsb
jo
xchg
cmc
out
inc
add
ficomps
inc
cmpsl
js
xor
mov
cmpsb
and
pop
push
lret
mov
psubq
lds
mov
fbld
scas
in
sbb
push
ja
hlt
stos
pop
jg
jns
pop
outsl
xchg
mov
out
out
dec
outsb
fnstcw
jno
int
lret
rclb
xor
inc
fnsave
pop
and
ljmp
ret
movsl
sub
mov
pusha
push
es
cmc
ljmp
in
int
pop
arpl
nop
ss
cmpl
adc
loope
inc
dec
sahf
and
mov
inc
inc
sbbb
xchg
out
sub
popa
sahf
mov
mov
push
lds
or
sarl
pushw
je
gs
xor
addr16
imul
adc
mov
clc
sub
imul
sbb
adc
jo
xchg
sarb
loop
aaa
push
sbb
inc
pop
arpl
loopne
sub
cwtl
divb
jae
xorb
dec
shrb
push
sbb
cs
enter
andb
movl
sarb
and
in
xchg
outsb
lods
out
les
mov
jg
jp
xchg
jbe
cmc
sub
data16
sbb
add
dec
jnp
das
sub
or
inc
mov
mov
mov
bound
orl
loop
imul
enter
fstps
outsb
jnp
jp
loopne
rclb
cli
and
and
popa
cltd
mov
rol
daa
mov
mov
loopne
mov
cmpsb
mov
mov
or
jnp
and
and
push
adc
push
cld
jmp
mov
dec
inc
lret
jo
mov
dec
aas
ror
imul
gs
xor
test
pop
add
sbb
pop
and
shll
or
loopne
fists
xchg
mov
xor
iret
sub
int
jne
and
popa
sbb
inc
daa
mov
mov
adc
mov
dec
movsb
mov
fadd
inc
mov
xor
push
jnp
pushf
cs
mov
test
enter
push
xor
arpl
das
xchg
push
icebp
addb
aaa
cmp
pop
mov
cmp
mov
aas
scas
hlt
dec
rolb
std
cmp
mov
jno
sbb
ljmp
aaa
fmull
sub
push
sub
mov
ret
pop
mov
subb
jle
in
sub
jmp
sbb
push
or
jg
aas
xchg
sbb
cwtl
mov
mov
mov
call
mov
inc
xchg
inc
jl
or
xor
xor
xlat
jl
push
ds
mov
outsb
add
xor
push
jns
push
lret
shl
sbb
mov
cmp
pop
iret
mov
std
cli
xor
push
xor
or
call
clc
psubd
fcompl
loop
ljmp
les
push
out
fnstenv
jecxz
movsb
out
and
jl
and
and
mov
lret
and
hlt
mov
cmp
add
bound
or
add
mov
into
add
inc
mov
mov
cmp
in
mov
sahf
mov
xor
jle
lods
insl
adc
jge
xchg
test
fwait
lret
jl
and
gs
lcall
fcmovnbe
mov
jmp
and
dec
pop
rorb
jo
mov
jg
jnp
or
cmp
gs
lcall
shlb
xchg
cmp
in
cld
dec
imul
je
add
outsb
out
ja
xor
out
or
inc
push
aas
push
and
cmpsl
xor
imul
test
pop
inc
mov
push
mov
clc
push
mov
jle
sbb
xchg
xor
es
and
fbstp
jb
sarb
mov
outsl
fisttpll
pop
xor
aad
sbb
es
jbe
out
fsubrp
shll
subb
cmpsb
inc
mov
dec
lea
fucomp
test
xor
getsec
mov
loope
pop
jo
lret
cmpsl
or
or
xlat
pusha
rcr
fwait
sub
and
imul
ret
push
ficoml
inc
daa
add
out
push
pop
cmp
hlt
lahf
or
mov
call
enter
xchg
pop
mov
aad
insl
movb
arpl
lret
rcll
and
rcrb
mov
ljmp
adc
xor
aad
ljmp
imul
inc
lcall
outsb
push
push
inc
xchg
sbb
pop
adc
cmp
mov
inc
das
fsubs
jp
sbb
jge
out
int
hlt
data16
or
push
inc
cmp
or
lret
jmp
imul
and
pop
cmpsb
pop
repnz
mov
mov
jecxz
ljmp
fwait
negb
mov
or
sti
out
shrl
cmp
outsb
push
scas
popa
aam
inc
imul
test
fsubrl
cmpsl
dec
xor
pop
sub
enter
loop
iret
mov
jnp
push
add
xchg
or
ljmp
mov
lret
movl
std
adc
mov
idivl
leave
or
stos
roll
testb
push
mov
xchg
ret
shrb
sti
les
sahf
cld
outsb
mov
xchg
out
ljmp
lds
sub
push
xchg
add
stc
push
and
inc
ss
lret
popf
push
and
lret
or
test
mov
lods
jno
ss
cmp
mov
loope
outsl
pop
loope
outsl
sti
jg
mov
out
movmskps
cmp
push
mov
add
addr16
cmp
and
sbb
jmp
in
mov
lret
lods
inc
xchg
adc
lods
push
sub
sub
ja
in
pop
js
scas
shrb
push
ret
lods
dec
lods
inc
jne
sbbb
mov
jmp
sbb
xchg
sahf
xor
mov
out
cli
xchg
jnp
dec
lods
inc
enter
int3
xlat
xor
or
arpl
ret
inc
out
sub
push
mov
mulb
inc
dec
xor
imul
dec
dec
popf
aaa
movsb
inc
cmp
and
fsubrs
rolb
in
xchg
push
push
dec
aam
xor
push
shl
fisttpl
jno
dec
sti
aaa
cmc
mov
andb
xor
and
mov
jnp
pop
pop
in
repnz
std
mov
ror
insb
add
cmp
xchg
xchg
push
ficomps
fldl
push
dec
and
aaa
mov
push
je
shrb
mov
mov
pop
mov
mov
sahf
pop
js
adc
mov
sbb
adc
pop
xchg
sub
js
cmp
jle
in
cmc
xor
call
test
popf
sub
rorb
and
fnstcw
cli
jp
mov
lret
inc
adc
insl
xor
xor
mov
fstps
les
cltd
pop
cmp
cs
lahf
test
movsb
les
shrb
dec
call
lahf
mov
pop
into
add
jecxz
aad
xor
dec
test
fimull
andb
sbb
std
inc
sbb
lahf
xchg
and
stos
mov
xor
es
shlb
fsubs
fwait
aad
shrd
cmpb
xor
ja
aas
pop
pop
int
lret
push
mov
repnz
iret
out
fbstp
xchg
jg
rorl
and
dec
cmc
push
and
lret
filds
lock
pop
cmpsb
dec
movsl
or
push
adc
loopne
js
icebp
sub
mov
dec
rcll
jmp
lods
bound
sbb
mov
insl
dec
pop
or
xchg
mov
imul
jg
repnz
femms
mov
dec
xchg
xor
push
cmp
jb
aaa
or
in
nop
push
mov
jmp
push
rcll
shlb
std
jns
or
push
in
dec
pop
insl
fwait
inc
lahf
mov
jo
cwtl
clc
lds
jp
pusha
shll
fsubrl
jmp
mov
inc
mov
mov
cmpsl
aaa
aad
jbe
push
dec
lret
add
xor
nop
pop
xchg
dec
scas
leave
push
mov
xchg
insb
push
addps
sub
add
lahf
cmp
mov
jae
pop
inc
jo
inc
pop
popa
aad
add
inc
xor
mov
inc
call
call
jno
out
and
and
mov
insl
mov
jl
mov
and
int3
mov
push
leave
ss
mov
sbb
sub
ret
mov
out
jge
mov
arpl
sub
frstor
stc
mov
inc
push
into
xchg
outsb
adc
rclb
fcmovu
inc
loop
pop
je
xor
stos
cltd
pushf
sti
xor
out
mov
mov
or
adc
or
mov
adc
insb
arpl
enter
adc
adc
leave
mov
xchg
cmp
in
aam
cmp
fs
inc
jb
jb
inc
xchg
jns
arpl
ljmp
inc
call
lahf
push
in
xlat
hlt
fldl
das
jne
pop
inc
jne
cmp
adc
jns
popf
inc
xchg
jecxz
test
fstl
movsl
loope
loope
inc
rcrl
and
fsub
mov
mov
daa
ficoml
shl
out
jnp
mov
jmp
ljmp
mov
ds
cmpsb
jg
jb
notl
mov
out
shll
imul
adc
dec
je
add
xchg
pop
insl
lods
data16
jle
sbbb
mov
sbb
ret
lea
dec
pop
mov
idivb
or
aad
xor
ljmp
cmpsb
orl
sbb
xchg
lret
jge
xor
fsubr
adc
sbb
dec
jnp
sbb
jmp
pop
add
test
es
out
adc
pop
mov
add
outsl
mov
adc
sahf
hlt
jge
jns
adc
pop
inc
sub
sbb
xor
mov
cmp
pop
rclb
pushf
ret
out
mov
adc
push
adc
in
xchg
jl
mov
loopne
xor
dec
push
arpl
sub
and
test
lret
loopne
pop
pop
ljmp
repz
cmp
cmc
cld
icebp
fwait
ljmp
pop
outsb
or
inc
sbb
fnsave
test
in
xor
or
sbb
popa
sbb
jns
das
mov
pusha
or
pusha
in
pop
aam
ret
jg
mov
mov
lret
movsb
fincstp
daa
lea
and
imul
es
xchg
outsb
cmp
out
mov
push
dec
jae
add
lods
adc
mov
inc
dec
mov
dec
in
xor
outsl
push
or
jmp
dec
cmpsl
adc
mov
andb
loopne
aam
bound
mov
fildll
xor
fsubrs
loope
xchg
cld
xchg
jge
mov
lret
xor
iret
cmp
mov
int
jb
adcb
call
and
std
jb
cmp
dec
mov
xor
and
adc
insl
fwait
shll
add
je
out
and
adcb
xchg
js
mov
daa
or
add
jnp
sbb
outsl
inc
daa
and
and
cmp
shll
imul
nop
clc
outsl
imul
mulb
adc
xchg
movsb
in
or
lret
cmp
and
cwtl
test
jo
jbe
xchg
inc
pop
dec
cwtl
pop
jmp
xor
lods
les
adc
sbb
ret
mov
xor
xor
scas
dec
test
sub
sti
in
cmpsb
xchg
inc
pop
mov
repz
jecxz
adc
loope
pop
xor
jbe
mov
inc
xlat
jmp
sub
cmp
es
rclb
shlb
es
mov
lcall
push
insb
adc
push
xor
test
std
mov
push
inc
and
mov
cli
cmpsl
inc
xchg
jle
push
xor
lcall
rorb
fstpl
clc
loopne
mov
add
push
scas
fcoms
insb
lods
fs
dec
mov
insb
cs
xlat
jae
lahf
inc
xchg
pop
push
les
aad
stos
jge
push
cmp
mov
or
jp
sub
cmc
mov
gs
ds
outsl
pop
xor
sub
or
outsl
outsl
stc
adc
sahf
or
fldt
xor
jb
push
mov
push
xchg
movsb
jle
mulb
add
test
cmpsb
mov
test
fidivl
cmp
cmp
add
mov
aas
adc
mov
pop
jg
jp
les
mov
mov
test
pop
fiaddl
adc
jo
adc
jecxz
jle
enter
mov
mov
int3
or
ret
sbbb
or
sbb
xchg
int
xlat
cmp
pop
loopne
push
stos
pop
test
fdivr
lock
jne
aam
or
or
loope
fsts
jge
ret
mov
lods
jo
cmp
mov
jns
stos
jge
fistpl
popf
int
and
adc
mov
bound
jno
sbb
shll
cmp
jno
sahf
pop
cmp
inc
push
icebp
jle
jmp
sti
out
add
clc
daa
leave
das
mov
rcrl
xchg
popa
shr
inc
in
insb
adc
sub
jae
in
jg
xchg
lods
jbe
stc
dec
xor
add
repz
push
aas
shrb
ljmp
loopne
inc
and
data16
and
roll
xlat
cmp
and
cmp
jecxz
sarb
cld
arpl
cld
mov
adc
jge
sbb
mov
inc
xchg
sub
xlat
shrl
ret
cld
in
iret
nop
sti
lods
and
push
dec
jg
mov
xchg
fidivrl
out
fwait
xchg
repz
or
loopne
mov
mov
ss
stc
xchg
mov
lcall
add
xchg
add
or
inc
xor
addr16
mov
repnz
sbb
cli
cld
add
or
mov
pusha
pop
jl
int
fisttps
add
pop
sub
add
add
fbld
jo
inc
int3
pop
js
in
dec
cmp
and
or
xchg
aam
inc
cld
pop
imul
data16
or
fwait
orb
popf
scas
aad
rcl
pop
rorb
in
shlb
or
shll
into
sbb
repz
test
xchg
jmp
inc
shll
pop
mov
call
out
xorb
push
gs
ds
or
sbb
push
aad
mov
adc
jo
inc
ror
sbb
sub
or
mov
test
ret
dec
js
rolb
jg
sarb
mov
clc
dec
adc
mov
mov
ljmp
inc
lods
in
sub
mov
pop
enter
cmpb
in
mov
cmp
ret
bound
cmp
dec
clc
dec
lcall
dec
sbb
ljmp
pop
test
stos
movsb
shrl
push
icebp
js
xor
cltd
in
lret
int3
sbb
pop
scas
mov
dec
xor
ja
fcmovnu
fldcw
pop
mov
mov
sbb
test
adc
daa
aas
and
cmp
and
fcmovu
mov
lret
pop
and
sub
repnz
or
cld
incb
xchg
inc
leave
lret
test
xchg
push
stc
popa
iret
jle
call
dec
push
add
fdiv
and
sub
jge
push
mov
mov
push
pop
jae
jbe
adc
test
das
lds
xchg
mov
pop
or
jecxz
jl
cltd
fldcw
inc
out
pusha
inc
sub
cmpsl
or
shlb
xchg
test
sub
fdivl
int3
dec
push
shll
jns
dec
jnp
mov
xchg
lods
outsb
hlt
or
mov
incb
push
ja
ljmp
arpl
add
cmpsl
and
inc
add
fists
popf
and
jle
xchg
mov
test
hlt
cmpsb
mov
movsl
jp
sarl
stos
es
jb
sbb
lock
mov
jp
int3
stos
orl
add
jp
sar
dec
xor
ret
jmp
inc
adc
loop
in
mov
out
lds
imul
das
add
arpl
mov
cmp
lods
jge
adc
cli
call
push
popa
pushf
jg
add
nop
ds
sub
nop
cmp
pop
jo
mov
mov
out
addr16
jbe
jmp
mov
mov
dec
not
dec
addr16
hlt
divl
cmpsb
int
bound
sahf
xor
or
push
and
jmp
scas
add
addr16
repz
fdivr
aad
xor
gs
cmp
das
add
out
mov
push
rcll
pop
pop
push
xchg
add
xchg
nop
mov
inc
std
push
in
ror
stos
mov
cmp
jle
inc
test
popa
mov
cmpsb
fsubrs
sub
sbb
mov
aam
lcall
or
insb
call
shlb
loope
jle
mov
jp
jg
mov
push
sub
loop
push
adc
jl
ljmp
into
sub
cmpsb
lahf
mov
mov
fldenv
je
jle
jmp
stos
jae
sbb
popa
fsub
inc
cmp
add
scas
adc
mov
dec
or
sbb
inc
movsl
je
push
cwtl
pushf
mov
xchg
dec
mov
or
pop
lret
xor
sbb
xchg
ficompl
rclb
pop
or
add
int
dec
je
ljmp
leave
jmp
cmc
cmp
clc
cmp
shr
fisubrs
loop
loopne
lds
mov
int3
dec
push
xorb
xor
cmp
outsl
mov
fwait
dec
lock
jbe
icebp
gs
push
mov
mov
fsubrs
dec
pop
dec
mov
in
mov
lcall
stos
push
pop
cmpsb
fcomps
jecxz
or
js
scas
fdivs
and
inc
out
xchg
shrb
sbb
mov
xor
or
std
stos
add
jbe
rol
das
push
test
cmp
mov
lds
or
lret
rolb
jnp
ljmp
loope
push
shlb
pop
and
sti
jle
rolb
push
bound
shr
ss
ficomps
push
sub
mov
jle
cld
ja
push
stos
mov
scas
jg
sub
pop
loop
sbb
lahf
or
jmp
mov
push
les
testl
pushf
inc
pop
xchg
xor
je
in
push
push
sub
jo
sbbb
pop
mov
inc
cmp
xlat
cs
movsb
sub
aam
pop
shl
insl
out
lret
add
or
xchg
push
dec
pop
or
dec
dec
rcr
xor
test
cmp
flds
pop
in
inc
repnz
xchg
mov
cmp
out
jge
hlt
nop
out
sbb
imul
or
lret
cmpb
bound
mov
push
cmp
pop
orb
loope
in
lret
sar
ss
setge
loopne
nop
loop
jle
xor
push
xor
subl
mov
jp
or
movsl
pop
lret
push
lods
xor
pop
loope
in
stos
mov
adc
sub
in
fdivp
push
loope
jp
into
sub
jecxz
xor
or
repz
cmp
sbb
mov
sbb
add
in
movsl
ret
aas
add
gs
ljmp
orl
ret
mov
mov
and
addb
jle
aas
test
mov
imul
mov
pop
push
add
and
imul
out
ss
jbe
mov
enter
xchg
mov
sub
sti
pusha
push
and
sbb
pop
aam
pop
pusha
mov
mov
and
shll
push
sub
mov
push
rcrl
cmpsb
jo
mov
pusha
addr16
sub
imul
sub
sbb
mov
mov
movsl
ret
adc
rolb
push
test
call
push
stos
fsubrl
cmpsb
jae
sub
jne
scas
cmp
push
xchg
dec
push
and
cmpsb
in
pushf
ds
xor
sbb
lret
lds
lock
rcrl
loope
daa
mov
jg
adc
mov
jbe
xor
push
adc
sbb
in
jne
sti
or
int
adc
ficomps
mov
sbb
pop
or
push
jg
fcoml
pusha
cmp
cmpsb
arpl
lock
mov
fisttps
jno
pop
sbb
lcall
mov
rorl
push
dec
in
and
je
fwait
out
fwait
jnp
inc
nop
lret
fadd
das
jg
mov
iret
fsubs
sarb
fidivs
test
popa
mov
pop
pop
outsb
xchg
push
imul
out
cmc
cmp
aam
mov
cli
jp
jbe
lret
cmp
sbb
jmp
pop
dec
xor
aam
push
adc
adc
push
sub
push
ret
jge
add
cmp
push
push
mov
addr16
jge
out
and
loope
or
pop
and
mov
push
aam
sbb
mov
movsb
in
push
sub
dec
fsubrs
sub
ja
scas
xor
mov
fstps
pop
inc
js
fimuls
lock
fwait
mov
and
inc
xlat
xchg
xchg
jae
pop
jo
int
xchg
push
sub
aaa
int3
clc
mov
out
pop
test
dec
xor
sub
xchg
loope
push
inc
mov
test
dec
xchg
fwait
or
push
push
imul
aad
cmpsl
int
lret
pop
pop
adc
and
jecxz
fcoms
mov
sub
adc
rcr
cmp
jo
jo
aam
testb
mov
mov
xor
cmp
xor
mov
sarb
mov
cmp
ja
mov
push
arpl
sti
std
mov
mov
and
dec
add
cld
adc
outsl
jo
data16
out
mov
loopne
xchg
scas
adc
xchg
mov
cmp
add
jle
repnz
mov
and
push
pop
js
pusha
cld
aaa
mov
jns
mov
pusha
sbb
popf
or
or
jg
popl
dec
sub
addl
js
ss
insl
mov
adc
jb
and
inc
aas
lods
ret
add
subb
cmp
aam
addl
mov
fldenv
out
mov
jle
hlt
lods
push
add
xor
insb
push
loop
lcall
cmp
xor
cltd
movsb
adc
out
pop
push
lcall
sbb
pop
mov
xchg
xor
xlat
cltd
mov
pop
mov
rclb
mov
psrld
inc
and
in
movsl
dec
push
mov
ljmp
xlat
xor
arpl
js
test
cmpsb
adc
rcr
in
rol
push
lcall
inc
rcl
pop
cltd
lods
dec
call
and
push
and
pop
cld
mov
fwait
ret
lea
scas
sub
push
mov
inc
mov
ret
test
fsubp
sbb
repnz
sbb
add
cmp
adc
ljmp
pop
int3
arpl
lret
and
push
mov
and
pop
loopne
bound
jbe
scas
sbb
mov
negb
aas
jb
cwtl
das
mov
in
ljmp
sbb
sub
imul
push
mov
mov
test
pop
mov
dec
add
push
push
pop
add
mov
cld
test
sbb
push
mov
mov
inc
adc
push
jge
pop
mov
lea
cmp
in
xchg
jg
and
jns
lock
jl
mov
stos
dec
insl
outsl
jno
inc
in
mov
mov
ret
push
lods
fcmovb
jp,pn
mov
je
lret
mov
fdivrl
jle
les
dec
mov
xchg
cmp
xlat
outsl
or
push
cmpsb
adc
sbb
vpmaddwd
fsubl
sub
xchg
cmp
xchg
je
das
pushf
sbb
or
sbb
sub
xchg
mov
fcmove
scas
data16
jnp
sahf
sbb
pop
dec
dec
mov
mov
mov
stos
pushf
xchg
mov
jg
mov
cmp
add
vpavgb
sub
stos
mov
in
gs
lret
or
pop
pop
push
lret
add
mov
es
in
ds
add
dec
xor
or
loope
mov
daa
mov
out
imul
in
loop
xchg
or
xor
dec
lods
test
jae
mov
cmpsb
js
push
in
pop
cmp
std
nop
sbbl
jle
imul
lret
cmpl
mov
jbe
sub
cmpsl
jb
imul
cmp
push
faddl
dec
fldt
inc
adc
insl
pop
in
daa
mov
xchg
dec
dec
push
jns
idiv
data16
fcmovnbe
mov
xchg
testl
rcrl
or
sbb
cld
in
fcmove
jo
xor
popl
lods
push
stos
sti
repz
scas
xchg
jne
jecxz
mov
cmp
rcrl
test
sbb
and
jnp
adc
inc
in
pop
jo
or
adc
xor
lds
clc
mov
and
movsl
frstor
movsl
inc
mov
ss
xchg
hlt
in
push
sbb
mov
pop
imul
dec
mov
loopne
insb
adc
sbb
cmp
cmp
mov
mov
and
stc
sbb
and
fstpl
jnp
push
rcrb
cwtl
or
xor
add
push
or
pushf
or
daa
dec
out
std
lock
in
icebp
pop
outsb
outsb
xchg
sub
mov
fldl2e
add
out
ja
ljmp
ljmp
mov
stc
xchg
sbb
outsb
sbb
cwtl
xchg
or
mov
roll
repnz
negb
fnstsw
adc
pop
nop
jb
in
je
fcom
fmull
sub
ss
shlw
jp
bound
lcall
sbb
shlb
fwait
sub
cmc
scas
in
imul
je
xchg
rcr
push
outsl
inc
std
jmp
push
out
pop
ljmp
add
inc
mov
inc
jne
js
inc
cmp
xor
jmp
mov
xor
dec
inc
loope
mov
lds
out
jbe
xchg
outsb
pusha
std
pushf
repz
mov
and
aas
fisttpl
add
push
push
push
push
bound
cmp
push
add
ljmp
jge
das
dec
mov
stos
xchg
loopne
mov
test
sbb
out
jl
jge
dec
mov
lahf
lret
in
adcb
jae
xchg
clc
xchg
push
add
das
enter
xchg
pop
inc
add
inc
mov
sub
cmc
ficoml
sub
shrb
pop
ret
or
jge
push
and
hlt
stos
lret
jmp
insb
jns
inc
jg
fnstsw
dec
lret
push
les
outsl
ret
push
jmp
cmp
adcb
ja
sbbl
pop
mov
imul
pop
out
ret
push
popa
lods
sbb
pop
mov
cmpl
adc
mov
scas
mov
cmp
lock
addr16
nop
mov
push
repz
pop
fcompl
je
xor
cld
push
cmc
lcall
mov
dec
mov
xor
subl
inc
stos
loope
leave
ret
loopne
arpl
and
jae
xor
out
test
xlat
fnstcw
addl
push
cld
mov
cmp
jmp
inc
je
push
or
fsubl
insl
enter
push
mov
stos
popf
ret
xor
repnz
ja
repz
insl
into
insb
cs
leave
jge
out
xchg
cld
and
js
std
add
dec
and
cmp
loope
stos
xor
lret
ret
lds
cld
sbb
popa
push
call
lcall
xchg
xor
imul
sub
sub
mov
popf
sbb
inc
lret
pop
mov
dec
lret
push
adc
repz
cmp
cmp
std
sub
mov
ljmp
sahf
mov
stc
mov
xchg
sub
jnp
cmp
and
ficoms
mov
lea
call
jle
sbb
and
inc
push
in
inc
mov
xchg
sub
mov
imul
sbb
jo
std
or
arpl
mov
loopne
mov
out
loope
mulb
xchg
dec
add
dec
dec
cmpsl
pop
and
mov
inc
iret
out
scas
xchg
out
mov
sub
movl
fadds
add
cmpsb
mov
out
rclb
int
mov
cmp
subb
orb
add
add
aas
xor
or
aad
rcrb
adc
lods
mov
mov
rorb
dec
add
scas
in
in
dec
inc
stos
std
out
or
mov
push
fucom
mov
cld
fldcw
hlt
outsl
pop
inc
iret
ss
adc
enter
xor
fcmovb
imul
inc
addr16
cmp
jge
dec
jle
cmp
in
ret
sbb
cmp
mov
push
push
xorb
pop
cli
loop
xor
ret
mov
clc
cwtl
clc
in
cmpsb
push
inc
mov
je
clc
lahf
and
mov
mov
dec
mov
shlb
lods
insb
ret
mov
adc
jo
mov
bound
cmp
push
jge
mov
adc
xor
aam
cmp
cmp
inc
ja
fwait
pop
dec
inc
pop
and
test
nop
jge
fisubrl
xchg
push
outsl
fs
mov
xchg
push
xchg
push
enter
adc
ret
or
lea
fdivrl
insb
push
pop
or
fstl
pminub
insb
cmp
pop
adc
out
add
icebp
dec
cmp
xchg
rcrl
or
mov
pusha
ds
push
push
pop
pop
mov
push
jns
push
push
adc
or
adc
adc
jge
loop
mov
add
mov
gs
ss
pop
or
mov
xchg
pop
fwait
push
mov
nop
lret
into
ret
repz
cs
mov
dec
into
hlt
xor
xchg
and
push
ss
dec
repnz
push
sub
inc
adc
scas
nop
pop
lret
pop
add
dec
test
addb
test
es
mov
test
call
push
sbb
ret
or
push
jle
cltd
shll
es
lea
shrl
out
pop
sahf
push
xor
popf
add
push
mov
inc
adc
push
pop
jnp,pn
push
add
sub
loope
roll
cwtl
and
sbbb
inc
insb
sub
push
fwait
sar
and
jnp
mov
shrl
out
pop
inc
bound
out
adc
xchg
push
cmp
fisubrs
mov
sub
mov
mov
rcl
pop
push
imul
in
bound
lock
jmp
dec
pushf
add
aaa
shl
rcrb
xor
or
mov
lret
andl
sub
loope
push
icebp
pusha
add
xor
add
jle
daa
lods
std
data16
mov
adc
jmp
scas
insl
rcr
dec
adc
xor
test
rclb
mov
lods
xchg
inc
mov
cmp
mov
mov
push
and
lock
pop
mov
pop
xchg
fwait
into
pop
xchg
pop
xor
adcb
inc
mov
fwait
popa
sbb
jecxz
fnstenv
js
into
pop
sti
cmpsb
push
push
and
out
adc
push
fsubl
dec
inc
imul
mov
repnz
arpl
jge
pop
mov
fldenv
pusha
or
lcall
fisubrl
mov
es
sub
add
jno
fstpt
push
out
subb
mov
sub
adc
aas
loop
sub
add
int3
sti
movsb
add
and
ss
mov
dec
icebp
scas
pop
ret
sbb
mov
scas
test
and
or
add
rclb
dec
inc
pop
fs
out
es
mov
inc
addr16
in
jg
outsb
test
sbb
jp
sahf
sahf
jns
xchg
xchg
pop
mul
add
fdivrl
shl
sbb
sbb
insl
ljmp
xchg
push
mov
push
sbb
out
ret
xchg
jp
jp
lea
pop
xor
add
stc
jle
mov
add
rorl
inc
xor
pop
sub
stos
adc
out
and
jg
loop
mov
jae
jne
inc
pop
fs
dec
popf
das
cmp
pop
dec
int3
push
ds
add
push
push
dec
test
or
sbb
adc
jnp
es
xchg
daa
add
mov
xchg
dec
lods
jne
cmpsb
sub
popa
push
adc
add
cmpsl
and
mov
push
pop
add
inc
pop
cmpsb
fisttpll
dec
or
lcall
mov
ret
and
fstps
fistps
hlt
lret
lods
into
push
rcrb
mov
sub
adc
lock
lds
or
negl
or
xor
insb
mov
scas
out
popa
mov
mov
xor
jnp
cld
push
cmpsl
pop
push
mov
loop
dec
ja
lock
test
push
xabort
setl
pcmpgtd
addl
mov
mov
scas
aad
inc
loopne
push
pop
sbb
arpl
imul
sbb
es
and
aam
xchg
adc
jle
in
jp
gs
pop
xor
or
loop
push
dec
mov
pop
or
add
cvtps2pd
je
xor
sub
jecxz
test
xchg
pop
xor
mov
xor
lahf
push
push
sbb
icebp
dec
das
adc
lds
adc
fidivl
and
jmp
psubusw
loopne
jae
fisubl
enter
cmpl
lahf
nop
pop
adc
mov
xor
hlt
mov
cmpl
jne
mov
sbb
mov
xchg
and
sbb
fmull
ds
js
mov
out
jmp
xchg
mov
adc
popf
jge
test
in
ljmp
push
cmpsb
adc
add
pop
loop
and
jmp
pop
movsb
arpl
mov
add
cmpsl
adc
push
idivb
fistpl
mov
or
lret
repnz
imul
push
scas
sbb
pop
pop
in
xchg
ds
mov
and
or
mov
sbb
out
daa
add
xlat
rcrl
xlat
je
ret
repnz
mov
jmp
cmpsl
and
aam
pop
dec
test
adc
adc
sahf
cmp
int3
inc
sub
jmp
jp
add
lahf
dec
andb
std
mov
js
inc
sbb
test
cmpsl
xchg
enter
out
jle
lods
aam
dec
aas
pusha
and
xchg
lahf
and
pop
test
mov
mov
repnz
cmp
out
adc
pop
mov
pop
loopne
xchg
adc
mov
xor
inc
mov
mov
push
cmc
pop
inc
out
inc
lods
push
xchg
dec
fcomp
xor
fwait
mov
addl
cli
adc
mov
les
inc
xor
mov
inc
movsb
cltd
bnd
add
in
and
dec
jg
push
fwait
xor
push
fisubs
test
ds
pop
out
cmp
inc
mov
fs
scas
inc
mov
inc
pop
xchg
lret
das
loop
pop
cmp
filds
popf
mov
loope
mov
ret
imul
lods
lock
inc
out
lods
leave
pop
fdivrl
loope
cmp
call
scas
inc
jl
jg
pop
xor
xor
xlat
pusha
lock
jmp
out
inc
sbb
sub
loope
xchg
fwait
bound
sahf
pop
mov
lds
ss
insb
xchg
outsb
cmp
jnp
lret
pop
mov
lods
xor
ja
xor
mov
es
inc
sbb
or
mov
sub
sub
sbb
insb
rcrl
ret
adc
pop
pop
nop
jg
dec
cmp
jb
cmpb
adc
mov
add
inc
add
xchg
adc
lods
pop
adc
xchg
or
mov
rclb
cmp
nop
push
adc
mov
dec
pop
xor
mov
shlb
mov
inc
loopne
add
mov
ja
in
fimuls
jno
in
pop
stos
dec
ret
inc
bnd
negb
push
add
int
loope
dec
jle
loope
adc
sub
and
roll
aaa
cltd
enter
add
mov
add
int
mov
mov
lock
neg
mov
jnp
push
negb
js
popl
and
pusha
out
fwait
mov
inc
mov
nop
loopne
arpl
loop
or
sbb
jg
xchg
xchg
testb
adc
les
cmp
mov
pusha
add
pop
mov
mov
sub
iret
cmc
pop
clc
aas
cmp
fldl
or
pop
inc
rclb
jg
xor
adc
test
pop
mov
push
mov
inc
idivl
out
sbb
push
divl
aas
arpl
inc
sub
jae
or
out
shlb
jge
fstpt
and
xor
in
mov
xor
arpl
or
lods
xchg
scas
arpl
and
mov
icebp
push
fnstenv
ljmp
lret
es
cmpsb
mov
pop
lret
lret
and
mov
in
or
mov
jbe
mov
mov
imul
out
xchg
ja
pusha
jns
dec
in
mov
fidivrl
dec
push
jnp
daa
mov
pop
pushf
imul
cs
repnz
mov
cmp
sahf
pop
jno
jp
das
mov
cmp
lods
dec
xor
loop
mov
push
sub
xlat
loopne
pop
or
fists
aad
sbb
int3
mov
push
out
icebp
pop
inc
mov
push
pop
xchg
or
shl
jle
mov
push
pop
cli
popa
and
in
mov
xor
push
orl
ret
aas
xchg
pop
push
rorl
fs
push
ret
or
dec
pop
out
rcr
xchg
inc
sbb
push
sbb
sub
cld
seta
push
movsb
pop
loopne
fstpt
mov
or
sarb
pop
jge
scas
cmp
loope
movb
shrl
fs
adc
movsb
scas
loopne
out
cmpsl
fistl
scas
out
sbb
sbb
jecxz
ror
cmp
mov
repnz
sub
decb
pop
fisubs
mov
fdivrs
pslld
leave
mov
insb
lret
bound
jge
mov
clc
sub
insb
adc
shrb
xor
push
mov
mov
xchg
fbld
pop
push
rolb
ja
push
fiadds
pop
movsb
decl
xchg
jmp
mov
add
mov
ja
lds
in
and
call
adc
inc
jg
int3
jbe
push
jo
mov
mov
arpl
add
scas
jl
mov
xchg
push
or
in
pop
out
xorb
negb
mov
out
sbb
xchg
stc
xor
mov
push
push
sti
mov
loop
idiv
ljmp
lahf
ror
adc
fdivs
insb
insb
push
jle
or
jno
sbb
mov
mov
cwtl
cli
xchg
lret
pop
mov
int3
pop
pusha
mov
xlat
fnstsw
mov
bound
test
xchg
xchg
sub
outsl
xchg
imul
mov
clc
je
cmc
inc
jecxz
xor
call
jmp
movsb
ret
add
lahf
js
inc
nop
fsubs
lds
jle
pushf
scas
lret
fnstsw
pop
push
lcall
sbb
push
rolb
push
xor
cmp
and
pop
jns
lods
test
roll
sti
sub
cmp
jbe
test
icebp
fimull
lahf
xchg
adc
stc
aam
inc
imul
fldcw
je
mov
pop
dec
jge
push
je
in
mov
jl
jnp
pusha
sub
es
cmp
outsb
iret
cmp
loop
xor
xchg
mov
dec
mov
jae
sub
xor
data16
mov
xor
push
insl
push
mov
xchg
and
push
xchg
cli
dec
inc
lahf
inc
sbb
push
xor
loopne
push
pop
sbb
xor
jle
sub
jno
add
out
xchg
add
stc
orb
outsb
push
mov
hlt
mov
sbb
sub
mov
out
repnz
mov
stc
mov
push
inc
test
out
icebp
inc
jg
pushf
fisttps
arpl
dec
ljmp
out
pusha
icebp
pop
pop
lea
mov
repz
ljmp
push
fcomps
lret
jg
mov
xor
pop
fnstenv
shlb
xchg
xchg
adc
lcall
jge
inc
out
jno
xor
jne
ljmp
mov
adc
pop
pop
mov
sub
movsl
ds
and
push
or
pusha
ret
cmp
aam
idivl
dec
and
ja
or
stos
inc
in
lods
ja
xchg
ficompl
dec
fidivs
sbb
mov
inc
add
sbb
pop
pop
pusha
sbb
das
les
loope
stos
popa
xchg
cltd
fisttpll
test
add
popa
push
stos
jno
xchg
cmp
pop
push
inc
rorb
dec
call
outsb
mov
mov
leave
push
mov
cmp
sub
faddl
test
xchg
test
push
inc
add
mov
pusha
int
fdivrp
cmp
fs
sub
orl
mov
inc
pop
in
or
test
imul
mov
repz
push
loopne
das
add
xorl
fisubrs
add
addl
ljmp
daa
movsb
loop
das
out
push
mov
cltd
lods
cmpsb
mov
dec
xchg
xchg
leave
in
in
and
mov
sub
out
rcrl
mov
or
jae
mov
orb
mov
out
mov
jp
jl
pop
hlt
cmp
inc
sbb
nop
sti
mov
or
negb
and
mov
push
insb
push
mov
mov
mov
fcoms
divb
xor
ss
cmp
bound
fdivs
mov
mov
repnz
loopne
sbb
fs
mov
xchg
repnz
xor
add
jbe
pop
mov
inc
cmp
dec
in
add
push
enter
pop
inc
xor
repnz
push
or
outsl
jbe
addb
dec
scas
pop
rorb
lcall
out
cmpsb
lret
sub
pusha
cltd
mov
ds
loopne
cmpsl
fdivrp
in
lcall
and
adc
or
fstps
sub
add
xor
enter
punpckhdq
out
in
and
stos
jecxz
out
push
or
stos
cmp
push
or
leave
inc
ficompl
mov
sub
pushf
es
adc
in
push
pushf
aas
sub
jp
pop
pop
and
mov
out
addr16
outsl
roll
stos
call
fdiv
mov
xlat
loop
jae
scas
mov
fwait
ret
rclb
sbb
push
out
xor
or
repnz
dec
add
mov
xor
lods
mov
push
cmpsb
leave
out
cs
cmpsb
jmp
daa
insb
outsb
icebp
push
dec
fcmovnbe
sahf
in
ds
clc
or
inc
add
sub
aam
pop
out
push
dec
inc
jmp
pop
lods
push
sbb
inc
fidivrs
mov
or
in
lods
or
inc
imull
inc
lcall
push
jmp
test
dec
inc
pop
cmp
in
xchg
or
leave
lcall
add
jno
mov
xor
xor
xor
jge
enter
pop
mov
mov
rcrb
pop
sar
dec
mov
lods
dec
insb
mov
addr16
call
dec
inc
dec
jmp
call
xchg
xor
and
jl
mov
cmpsl
sbb
or
xor
sti
mov
jg
dec
stc
dec
xor
xchg
or
inc
add
inc
pushl
xchg
sbb
dec
lret
fsubrs
in
aas
lds
ret
arpl
icebp
leave
xchg
mov
cli
push
jp
xchg
cmpsl
mov
pop
xor
push
adc
fisubrs
add
stos
in
div
mov
test
cwtl
cmp
enter
daa
lret
pop
and
push
nop
xchg
mov
push
mov
imul
sub
xchg
shll
jge
add
add
fisubrs
cmpsl
add
jae
dec
dec
fmuls
and
cmp
mov
dec
mov
loop
adc
sbb
out
sti
and
mov
arpl
js
js
jns
addr16
aas
or
das
add
xchg
mov
xchg
loopne
pop
stos
ljmp
outsl
aas
dec
or
je
xchg
lock
jo
shl
push
sbb
adc
inc
and
add
jge
shlb
sbb
cli
or
mov
or
pop
pusha
lods
inc
sub
jle
mov
daa
in
es
jecxz
sub
cmpsb
int
push
repnz
andl
aaa
mov
lcall
stos
lock
in
enter
les
pop
fcomi
pop
pop
test
mov
repz
inc
out
adc
test
stc
add
std
ret
cmpl
cltd
nop
mov
xchg
ficomps
xor
stc
add
es
lods
push
das
sbbb
or
jge
mov
fsubrl
fsubs
inc
mov
mov
insl
lret
je
push
fisubrs
jle
sub
xchg
iret
lret
xchg
xchg
or
fsub
imul
push
sbb
rcll
pop
iret
adc
shr
mov
enter
cld
sbb
bnd
mov
jmp
icebp
jne
sub
mov
xchg
xor
sub
decb
inc
push
testb
or
xor
pop
push
mov
cltd
jne
sbb
pop
in
jae
mov
ret
lock
data16
mov
es
test
mov
call
ljmp
fdivs
lret
xorb
test
inc
sub
adc
roll
xchg
dec
inc
push
inc
mov
mov
mov
inc
ret
mov
cmp
arpl
in
add
inc
jmp
push
icebp
fimuls
pushf
nop
shrb
incl
cmp
jb
push
jb
mov
test
shrb
int
mov
push
cmp
adc
repnz
loop
nop
outsl
or
sub
pop
cmp
xor
outsl
push
fwait
loop
and
ficompl
stos
cmp
punpcklbw
or
add
enter
cmc
lods
notb
pop
mov
sbb
sti
pop
lock
jg
movsb
arpl
lock
lock
push
adc
hlt
ljmp
insb
xor
decl
jns
test
adc
mov
lahf
push
jne
adc
or
mov
dec
in
int
jbe
dec
mov
daa
sub
add
adc
sub
data16
xor
rcll
daa
mov
dec
push
cmc
xchg
fmull
lret
cmp
aad
push
imul
add
jle
call
sub
adcb
pop
out
jbe
leave
stos
and
push
in
mov
mov
lea
dec
arpl
in
inc
add
gs
movsl
pop
adcb
test
push
and
jecxz
lret
lods
mov
xor
jmp
aaa
push
add
adc
push
sub
and
loopne
xor
jbe
push
inc
mov
cmpsb
xchg
ljmp
lods
add
incl
repz
nop
mov
inc
add
mov
sub
nop
test
dec
das
mov
inc
pmaxub
lret
push
nop
cld
push
outsb
pop
adc
movsl
out
jno
push
dec
adc
daa
stc
jb
mov
and
lahf
fwait
fwait
dec
data16
push
lea
and
jge
mov
shll
mov
mov
loopne
dec
repnz
jb
push
cmpsb
movsb
add
insb
push
pop
cmp
pop
sub
cmp
sub
sub
or
inc
ljmp
cmpsb
dec
stos
mov
loop
shrb
mov
or
sub
mov
add
inc
rcr
inc
out
cmpsb
pop
mov
sti
add
test
sarl
and
and
adc
xchg
loop
repnz
jle
cltd
xchg
cmp
dec
andl
mov
fldl
adc
fstp
or
jg
mov
mov
inc
stos
pop
jae
cmpsb
jle
popa
cmp
mov
xchg
loop
mov
mov
cmpl
xchg
mov
ret
xchg
jmp
or
aam
pop
push
js
inc
lahf
ljmp
loopne
js
and
clc
popf
popa
sub
jbe
daa
dec
cmpsb
insl
push
into
dec
mov
mov
rorb
or
sbb
test
insl
mov
cmp
insb
ds
fistl
fadds
xor
test
enter
adc
fst
out
mov
dec
inc
sub
mov
enter
into
in
fldenv
js
mov
ljmp
xor
testb
insl
add
jp
or
insl
inc
inc
movsb
jg
int
inc
mov
xchg
gs
insl
jmp
xchg
cmp
dec
mov
pmuludq
jnp
mov
scas
lcall
les
sahf
pop
or
push
pop
jbe,pn
xchg
sub
pop
popf
test
fwait
mov
in
pop
aas
inc
gs
movsl
mov
and
lret
push
push
dec
outsb
inc
xorb
mov
lock
mov
imul
pop
nop
mov
std
xchg
jbe
mov
inc
adcl
pop
jnp
pushf
movsl
sbb
push
lea
dec
mov
adc
mov
gs
stc
repnz
mov
mov
sahf
data16
js
ss
out
sbb
sbbb
mov
mov
std
xor
mov
movsl
daa
popl
jns
fadds
push
cmpsl
sahf
pop
ror
cmp
inc
jno
inc
inc
jmp
pop
sbb
adc
pop
sbb
in
mov
jg
ja
cmc
fisttps
fucomip
dec
outsl
sub
movsl
ds
repz
add
sarb
stc
jecxz
sbb
mov
ljmp
jmp
push
in
arpl
sub
lret
fiaddl
aas
push
xor
dec
or
das
stc
pop
enter
loop
lock
sub
push
pop
sbb
add
add
out
mov
imul
mov
mov
cwtl
pop
push
into
lods
pop
or
lret
xor
les
fs
stos
test
push
imul
aas
in
jmp
or
lret
loop
cld
les
loopne
cmp
mov
stos
xchg
test
pop
and
cmp
lahf
or
inc
adc
hlt
mov
push
jb
push
mov
mov
shrb
jae
mov
push
xchg
lods
movsb
add
add
nop
dec
adc
mov
lret
lret
cmp
jae,pt
push
stos
cmp
mov
dec
pop
add
inc
loopne
in
popf
shrb
cmp
cmpsb
loop
movsb
push
fildl
mov
push
inc
js
call
inc
ljmp
dec
pop
aaa
mov
add
xchg
pop
xchg
stos
call
loope
shl
insb
fsub
call
add
cld
insb
fwait
inc
xor
xchg
les
cmp
fnstcw
push
punpckhbw
lea
mov
aad
and
loope
jmp
clc
push
in
inc
lds
xchg
sub
push
sub
adc
xor
add
add
push
imul
int3
lret
pop
ljmp
mov
and
xchg
cltd
push
cmp
mov
mov
mov
ja
xchg
cmp
jge
and
mov
lock
lahf
push
push
mov
in
addr16
arpl
mov
jge
addl
or
push
jg
add
or
and
jb
cltd
cmp
sub
add
int3
xchg
push
mov
sub
cmc
cmp
push
ja
mov
sub
cltd
add
mov
add
inc
pop
jo
hlt
and
int
dec
xchg
xor
ficompl
mov
xchg
adc
xchg
jnp
and
outsb
and
xor
inc
int
cmpsb
mov
jle
mov
imul
inc
fwait
mov
and
inc
scas
test
pop
aam
fcmovnu
sbb
dec
ret
lret
cmpsl
adc
cmp
data16
dec
inc
fnstenv
mov
in
insb
jae
jp
and
xor
cwtl
sub
jnp
mov
call
inc
xchg
arpl
push
dec
inc
lcall
out
dec
movsb
pop
xchg
enter
sarb
cmp
inc
scas
shlb
jbe
and
jp
lcall
push
out
shrl
xchg
mov
fidivl
pop
adcb
incl
mov
arpl
xor
xor
pop
jbe
ss
iret
and
sub
adc
xor
cmp
mov
mov
pop
loop
iret
pop
aas
inc
stos
mov
jl
mov
bound
sbb
sbb
mov
inc
scas
sbb
dec
push
and
and
jmp
fistps
pop
pop
or
and
mov
mov
stos
inc
sub
push
xchg
sub
jno
mov
fwait
push
jg
inc
subb
insb
imul
push
lahf
push
fldl
mov
sbb
mov
fimull
out
mov
add
mov
pusha
pop
xor
xlat
pop
xor
cmp
sbb
andb
xchg
lret
and
cmp
push
jle
mov
xchg
sbb
mov
jecxz
and
fs
adc
fcoml
mov
orb
dec
insb
or
sarb
jno
stos
jnp
sbb
xchg
xchg
outsl
fidivl
hlt
cmp
mov
xor
stos
xor
ficoml
stos
addr16
cmp
lcall
sbb
xchg
int
ljmp
fucompp
lcallw
arpl
aam
dec
mov
loopnew
fcompl
daa
push
mov
das
push
jo
pop
push
les
push
sbbb
rclb
or
outsl
loope
in
pop
testl
in
repz
mov
xor
jae
int3
xor
jo
sbb
into
in
xlat
and
sbb
push
push
or
xor
lock
orb
outsl
cli
mov
imul
mov
push
sub
call
pop
xchg
addr16
lods
imul
adcl
decl
mov
aas
fiaddl
adc
xor
int
or
loop
in
push
imulb
xchg
mov
enter
inc
jle
sub
outsb
call
sub
sub
sarl
dec
push
mov
mov
and
ss
mov
and
in
xor
jg
sub
mov
and
push
add
jo
push
xchg
stos
ja
lret
xchg
outsl
lock
xorl
call
mov
sub
pop
jp
jecxz
lret
stos
xchg
stos
and
adc
fldt
dec
push
cmp
jno
in
pop
insb
sarl
xor
lock
lods
or
xor
or
sbb
jb
add
pushf
test
ds
pushf
mov
ret
hlt
out
test
xchg
insb
sbb
lcall
dec
lods
cwtl
or
or
popf
and
insb
mov
pusha
dec
or
adc
pusha
xchg
ds
jo
enter
cld
pop
adc
push
dec
push
inc
popl
sbb
out
xchg
ja
pusha
push
mov
mov
or
inc
int3
enter
mov
xchg
sub
xorl
dec
out
mov
imul
mov
jl
fstl
fadds
int3
leavew
jmp
ss
movsl
hlt
mov
lds
or
lods
push
jecxz
jb
loope
mov
stos
cmp
cmp
test
cs
adc
mov
cmpsb
push
es
fmulp
sub
adc
stos
aam
xchg
js
sbb
scas
ljmp
lods
loope
push
out
dec
mov
lret
dec
xchg
ljmp
cwtl
mov
enter
jg
dec
xor
inc
out
cmpsl
pop
ss
stos
mov
mov
dec
jl
push
add
push
in
mov
cmpb
xchg
adc
fcomps
xchg
inc
jmp
adc
inc
lcall
push
cmp
mov
dec
arpl
mov
push
mov
mov
lock
xor
mov
sbb
sbb
inc
orb
mov
insl
lods
cmpsb
sub
lods
outsl
fnstcw
test
lret
stos
mov
xchg
cld
push
addr16
xlat
push
sub
ljmp
jb
lret
addr16
xchg
popa
jecxz
jl,pn
sahf
test
and
outsb
xchg
dec
push
push
pop
xchg
scas
pop
adc
imul
sub
mov
aas
cmpsb
mov
mov
cltd
pop
leave
fsts
push
jmp
dec
mov
rcll
xchg
rdmsr
bound
or
movsl
jo
xchg
nop
dec
stos
mov
mov
mov
xor
in
int
xor
dec
pop
in
jecxz
sbbb
dec
pusha
popf
cmp
jle
pop
xor
out
mov
xchg
loopne
fadd
inc
mov
sarb
lret
pop
add
xchg
fdivl
inc
jae
jo
adc
imul
in
inc
es
or
cmp
mov
call
inc
mov
pop
xchg
cmpsb
dec
subl
arpl
int3
cmp
out
xchg
enter
or
daa
call
inc
sub
mov
lock
lahf
enter
xchg
inc
xor
dec
fisttpl
outsl
aas
xlat
aaa
add
mov
pop
stos
xor
jns
sbb
ljmp
subb
or
jo
push
xchg
dec
leave
int
inc
adc
cmp
icebp
xor
xchg
cs
pop
push
test
jo
jbe
movb
and
or
adc
leave
js
je
add
rolb
mov
cld
leave
ds
push
sub
xorb
and
xor
lods
mov
jg
ljmp
jmp
fadds
and
sbb
push
inc
les
xchg
push
mov
jp
test
push
pop
imul
into
or
xchg
loope
cmp
in
out
xchg
arpl
sbb
addr16
sub
adc
push
fwait
cmp
cmpsb
jmp
jle
repnz
in
mov
jbe
jae
scas
js
push
aaa
sti
adc
inc
xor
cld
out
test
mov
jmp
scas
pop
stos
leave
xchg
bnd
dec
inc
hlt
fldl
and
subl
mov
adc
mov
or
stos
sahf
lock
push
ljmp
cmpsb
and
loopne
loop
out
fmull
xor
jge
clc
mov
sbb
adc
jno
out
pop
imul
adc
lret
scas
cmp
popa
jecxz
adc
dec
test
lea
test
scas
lock
xchg
or
aam
push
sbb
mov
cmp
scas
inc
pop
loopne
push
jns
cs
and
dec
addr16
cmpsb
sub
mov
in
fnstcw
xor
push
inc
or
inc
and
and
lcall
sub
lret
pop
jnp
out
mov
dec
dec
pop
sub
fisttpll
dec
test
mov
movsl
arpl
sub
xlat
dec
dec
arpl
xchg
popf
mov
xchg
dec
div
mov
cld
cmp
je
jb
notb
stos
mov
out
mov
adc
clc
outsl
xor
cld
dec
inc
rcl
rcr
test
jle
push
sbb
in
mov
inc
pop
jns
sub
adc
rorl
jae
jle
outsl
jecxz
dec
pop
data16
mov
mov
add
dec
dec
pop
aaa
adc
fbld
adc
fimuls
cwtl
ja
cmc
and
or
popa
mov
push
pop
push
mov
mov
pop
sbb
inc
std
les
xchg
xchg
fucomi
int
push
push
mov
stos
push
sbb
repnz
jl
es
push
xchg
sub
les
or
test
cmpsl
lcall
jo
cld
jg
test
push
xor
fstpl
add
mov
dec
out
push
jno
jo
pop
xor
xchg
mov
adc
lock
jne
fdivrs
dec
gs
les
sub
and
outsl
push
cmp
jp
lds
xchg
ja
pop
push
xchg
inc
aaa
mov
icebp
xlat
jmp
leave
sbb
int3
sub
inc
inc
or
loop
std
or
rcll
fsubrs
aaa
mov
jno
adc
or
or
in
sti
add
out
cmp
int3
pop
push
ficoms
leave
pushf
jle
out
push
mov
and
aaa
lret
pop
push
cwtl
int
jle
pop
push
mov
xchg
ss
dec
cmp
cmp
dec
sbb
ret
jl
inc
pusha
out
sti
xor
or
rclb
loop
xchg
aaa
lahf
mov
outsl
lea
ss
outsb
pusha
add
sub
add
and
ret
inc
or
clc
dec
xor
cmp
pop
fists
inc
outsb
daa
push
out
and
rorb
sbb
fisttpl
sub
pusha
push
aad
insl
push
and
inc
dec
call
mov
mov
fdivrs
mov
or
or
xchg
jbe
xor
std
pop
or
fisttps
mov
mov
mov
cmp
outsb
mov
add
cmp
aad
sub
lock
mov
loope
insl
jb
adc
mov
jae
push
in
inc
xor
loopne
or
push
mov
cmp
jo
add
lds
mov
sbb
push
cld
outsb
cltd
pushf
cmp
xchg
ss
fcompl
ret
mov
push
add
and
fistl
movsl
xchg
je
mov
fcomps
lods
xor
lret
add
pushf
aaa
jecxz
stos
mov
and
in
in
ss
cltd
mov
sub
dec
mov
cld
xor
in
nop
push
data16
out
inc
xchg
adc
inc
and
divl
mov
or
xchg
mov
loop
or
mov
mov
or
add
mulb
cmc
jns
fs
or
std
xchg
lret
dec
jbe
out
out
inc
jno
add
mov
filds
loope
js
addr16
bound
and
xchg
sbbl
cmp
lea
test
hlt
movsl
movsl
pop
fcoml
rcl
xor
cmp
fwait
or
das
push
and
jbe
inc
in
iret
xchg
or
aam
jns
fldenv
andb
fucomi
and
mov
cwtl
outsb
adc
and
into
add
mov
cli
push
adc
cltd
scas
and
xchg
cmp
jle
mov
adc
adc
fdivrp
fwait
pop
out
insl
stos
mov
cmp
mov
push
lods
push
inc
jle
imul
lret
cwtl
xchg
loopne
dec
ret
sahf
mov
push
lods
fldl
sbb
and
sub
sub
mov
aas
jnp
or
lock
inc
aam
adc
das
bound
shl
or
rclb
mov
push
fsubl
lods
imul
rcrb
repnz
jp
lret
mov
pop
add
in
pop
mov
mov
lods
or
inc
mov
push
adc
iret
pop
adc
out
lds
inc
flds
cltd
testb
cmp
pop
add
push
mov
jns
push
pop
out
repnz
clc
mov
sarl
sub
jl
mov
sahf
aam
aam
xor
cwtl
mov
lret
and
fs
push
outsb
inc
es
xchg
insl
mov
insb
sub
stos
arpl
xor
pop
call
ss
inc
adc
sub
loop
lods
lret
lods
mov
inc
push
lds
add
fsubs
outsb
outsb
mov
lret
sbb
popa
sbb
mov
sub
cmpsl
test
in
push
pop
negb
imul
dec
aas
mov
sbb
mov
push
cmp
push
ds
les
adc
lock
or
arpl
xchg
dec
out
shl
shlb
sub
arpl
cmp
std
fists
sub
push
cwtl
and
pop
lock
hlt
test
mov
adc
add
insb
and
jb
mov
mov
mov
rcl
cmp
ret
adc
jmp
pop
mov
adc
sbb
jmp
pushf
add
pushf
cmp
out
loopne
mov
and
je
f2xm1
xchg
pop
stos
shl
sti
adc
ljmp
icebp
mov
push
jbe
movsl
jns
arpl
imul
xor
cmp
inc
imul
cmp
sahf
jb
int
pop
inc
test
pop
mov
fsubrs
push
cmpb
mov
stos
adc
fisubrs
movsb
pop
jmp
or
push
fiaddl
lds
mov
lods
xchg
push
sbb
cld
cmp
out
mov
lcall
out
xchg
mov
addr16
outsb
cmp
adc
dec
jb
or
adc
sub
and
mov
and
das
dec
push
adc
pop
pop
inc
repnz
out
shlb
jp
mov
mov
adc
arpl
mov
inc
popa
inc
dec
add
fcomip
cs
imul
mov
in
adc
test
repnz
filds
xchg
push
out
loope
inc
cli
out
xlat
push
mov
lret
test
lcall
pop
mov
jmp
mov
sub
inc
fidivrl
loope
cmp
mov
cmpsl
push
push
mov
out
jecxz
xchg
fisubs
pop
fdivrp
into
mov
dec
std
and
add
add
mov
mov
ret
mov
mov
cmc
mov
xchg
add
sub
push
mov
ficomps
push
scas
movsb
mov
pop
inc
jbe
cs
mov
xlat
int
jo
push
mov
mov
pop
das
add
inc
fcmovu
dec
pop
sub
rcrl
cli
lds
cwtl
jbe
and
les
mov
xchg
pop
xchg
fisubrl
mov
xor
sub
gs
hlt
movsb
and
jmp
je
or
aaa
mov
ja
call
mov
fisubs
dec
or
jp
add
sub
xchg
bound
fcompl
pop
pop
mov
outsl
loopne
out
outsb
cmp
cmp
jb
cli
jl
add
xor
xchg
add
mov
and
adc
sub
clc
cmpsl
lds
test
jne
pop
pop
imul
repnz
mov
insb
jns
xchg
popa
jecxz
push
pop
mov
cmp
jmp
inc
fildll
fildll
mov
cmp
or
pop
popa
dec
lea
ja
outsl
cmp
dec
cmp
sub
jbe
call
mov
mov
das
in
jg
cs
mov
dec
gs
jecxz
jae
pop
call
push
shrb
lcall
inc
xor
ljmp
cmpl
xchg
rcl
mov
xchg
jg
cwtl
inc
xchg
and
js
pop
xchg
fimull
pop
fnsave
movsb
adc
and
jne
inc
xchg
pop
ror
sub
xor
lods
scas
clc
jbe
jbe
push
adc
jg
gs
xor
push
or
dec
xchg
and
out
push
sbb
out
and
arpl
mov
jns
pop
push
push
xchg
cmc
ljmp
cmpsb
sub
loopne
fsts
flds
addr16
xchg
pop
jo
lock
push
loopne
adc
xor
mov
ret
fistpll
sbb
inc
loope
in
push
out
nop
aaa
jno
jge
jecxz
mov
jecxz
cmp
add
adc
cmp
inc
jl
lahf
sbb
mov
mov
lods
negb
add
dec
roll
hlt
fadd
pop
fpatan
dec
inc
int
mov
addb
sahf
int3
or
mov
xchg
movsl
cmp
fprem1
pop
push
or
dec
lods
aas
xor
sbb
cmpsb
cmp
pop
scas
and
pop
xchg
mov
jmp
imul
push
dec
mov
pop
mov
cmp
push
jns
push
clc
loopne
and
ss
pop
daa
add
pop
out
repz
aad
adc
stos
sbb
push
insl
jl
push
or
lea
sbb
or
mov
xchg
xchg
or
ss
adc
pop
add
xchg
xchg
das
popa
pop
xchg
push
arpl
pop
inc
stos
xor
xor
bound
xchg
dec
daa
mov
das
mov
lret
push
xor
sub
push
mov
daa
and
xor
or
iret
inc
mov
jp
mov
shll
mov
mov
mov
adc
andb
loope
jb
xchg
enter
inc
loopne
fstl
dec
or
and
hlt
fdiv
fldt
jmp
and
xchg
push
mov
push
xchg
dec
mov
outsb
lock
mov
xor
int3
in
mov
cmp
cmp
sbb
dec
jecxz
mov
sbb
sbb
dec
mov
xor
and
push
mov
adc
mov
and
lcall
fidivrl
sub
stos
dec
mov
filds
or
fnsave
gs
shl
sbb
fimuls
fwait
sbb
lret
jae
lea
push
lret
lods
and
clc
mov
push
notl
push
clc
mov
xchg
xchg
inc
outsl
mov
cmp
xchg
nop
cmpb
push
cmc
jnp
push
je
jo
std
test
xor
add
cmp
dec
inc
iret
fisttpl
out
arpl
mov
std
mov
xor
mov
movsb
adc
lods
sbb
sahf
shl
out
push
jae
scas
out
sti
add
push
pop
add
pop
jmp
cmpsb
aad
dec
push
or
ss
cmp
cli
push
xor
mov
pop
mov
xor
fsubrl
push
jnp
test
mov
dec
loope
jge
movsb
popf
xchg
inc
pop
xor
imul
mov
sbb
or
sub
lea
in
in
lcall
int
xchg
je
mov
mov
xor
das
cmp
arpl
adc
push
add
test
int3
pop
xor
jle
mov
test
pushf
add
push
sahf
pop
out
adc
fsubrl
mov
loopne
stos
cli
cs
xor
mov
fisubl
fdivrl
mov
les
lret
cmp
lods
ljmp
xchg
mov
mov
ficomps
in
loop
sbb
or
sbb
push
adc
push
and
popf
jmp
fldcw
ficoml
dec
aaa
push
stos
mov
jns
pop
scas
nop
mov
sti
pushl
insl
mov
movsb
imul
xchg
lahf
mov
jmp
rcrb
push
hlt
sub
push
nop
les
or
xchg
or
repnz
dec
push
daa
add
sub
shlb
cmc
and
ret
lret
lahf
inc
cmp
lahf
je
inc
mov
int
adc
xor
aad
push
sub
sbb
pop
sbb
stc
sub
stos
cmp
push
xchg
jns
test
push
in
pop
mov
push
mov
jo
push
sbb
insl
xlat
xor
faddl
fidivl
xchg
or
das
fdiv
cmp
stos
lods
cmp
test
ficoml
ljmp
xor
sub
cmp
jmp
mov
lret
mov
xchg
dec
cmp
cmpsb
cltd
fcmovne
mov
out
out
out
scas
test
lock
and
pop
dec
test
test
add
lock
push
push
jns
inc
xchg
orb
unpckhps
inc
addr16
test
test
or
pushf
inc
mov
mov
sub
addr16
mov
lret
bound
mov
mov
loopne
fidivrl
out
ja
outsl
mov
movl
xor
mov
sbb
orl
lds
jne
mov
pop
pop
fsubp
stos
test
aas
fisttps
repnz
mov
lcall
and
das
mov
sub
insb
add
int3
add
push
adc
int
mov
sub
add
dec
addr16
jl
xchg
push
inc
push
sub
scas
out
test
xor
dec
xor
push
les
mov
lret
or
mov
repz
sub
jge
pop
dec
jecxz
lret
mov
movl
xchg
cmp
cmp
cmp
stos
sub
aad
or
negb
xchg
xor
mov
inc
pop
sub
mov
push
jmp
push
out
xchg
and
out
in
movb
xor
mov
fstpt
ljmp
xor
cli
adc
jnp
pop
je
ss
jnp
inc
or
sahf
mov
add
lods
jnp
loopne
repnz
dec
inc
subl
push
push
in
lret
jg
jo
lret
ljmp
mov
std
adc
sub
cmp
lods
lods
imul
push
das
scas
pop
mov
jp
mov
jge
add
sbb
xor
xor
pop
mov
rorl
jno
lods
in
imul
ljmp
out
push
cmp
jo
ret
ds
adc
cmpsb
add
jmp
stos
rol
xorl
js
xchg
and
cmpsb
lahf
xchg
adc
mov
inc
into
jb
add
xchg
xchg
stos
sbb
sbb
xor
clc
lock
je
nop
pop
xor
xchg
es
cmp
jne
and
fmull
ljmp
jb
cmp
scas
shrb
ljmp
out
add
jo
loope
mov
ljmpw
aaa
rorb
sbb
js
inc
or
cltd
push
dec
int
pop
fbstp
cltd
inc
sbb
in
jmp
cmpsl
out
mov
cmp
sahf
scas
jmp
fistl
insl
dec
leave
enter
fidivrs
pop
mov
mov
in
repnz
imul
imul
fcmovnbe
cmp
and
cmpsl
arpl
adc
adc
and
leave
imul
dec
ljmp
popa
mov
xor
pop
mov
cmpsl
hlt
ljmp
subps
aas
pop
mov
inc
subb
ds
add
add
mov
repnz
movaps
leave
scas
inc
aam
mov
adc
cmp
and
push
lock
arpl
cmp
cmp
add
cmp
jp
test
loopne
gs
jl
adc
movsb
sahf
jbe
jl
arpl
cltd
leave
addr16
or
jmp
xchg
shlb
cmp
push
ficoml
call
dec
add
inc
mov
out
or
cmpsl
cvtps2pi
jecxz
sahf
cmp
cmc
mov
idiv
sbbb
mov
int3
std
les
add
jns
mov
dec
shll
inc
cs
ficomps
loop
adc
out
mov
push
int
adc
mov
filds
pop
xor
and
xchg
popa
subb
lds
sub
inc
xor
gs
jg
test
fucomp
jae
imul
es
jecxz
jle
and
push
sub
xchg
adc
aad
addr16
sub
pop
sub
jp
and
add
lea
xor
sti
popf
js
or
out
ljmp
arpl
mov
fisubs
and
rcll
icebp
xor
mov
mov
pop
mov
mov
ds
xchg
push
clc
inc
loopne
test
out
lret
xor
inc
sub
or
sub
mov
sub
jl
push
fninit
or
pushf
and
and
popa
pushf
les
lock
mov
stos
adc
xchg
outsl
and
jmp
push
dec
push
jbe
mov
fiaddl
js
pop
sti
test
sbbb
sbb
jb
loopne
dec
sub
jg
test
leave
push
mov
inc
and
dec
addl
cmp
pop
sub
mov
pop
fcomps
insl
stc
push
ret
movsb
push
add
mov
push
mov
fcmovb
add
dec
fwait
or
fisttps
dec
scas
inc
mov
jecxz
cmp
mov
shll
sarb
mov
test
test
jno
jbe
add
sarl
ret
add
push
cltd
addb
push
push
mov
dec
leave
xchg
adc
push
addr16
and
jbe
faddl
je
in
clc
lods
fimuls
mov
lock
fbld
xlat
lds
or
jno
fisttps
bound
jnp
loope
mov
and
fstp
xchg
out
push
imul
je
cmp
sbb
sub
loope
cmpsb
movsb
test
fwait
dec
pusha
push
dec
push
in
in
jecxz
mov
cmp
sbbb
pop
inc
fs
inc
aam
inc
sbb
mov
loop
das
in
in
and
cwtl
inc
mov
imul
fwait
mov
push
pop
into
dec
movzbl
cltd
imul
xlat
xchg
mov
dec
sbbl
xchg
clc
push
dec
lahf
or
push
adc
das
mov
mov
fnstsw
movsb
xchg
dec
lret
addl
dec
or
fiaddl
cmp
rolb
pop
push
jge
xlat
imul
pop
fsubs
bound
insb
pop
sub
jl
push
rclb
flds
jae
stos
sbb
sub
mov
fdivl
in
jmp
push
inc
fistpl
notb
dec
std
fstp
das
push
int3
dec
pop
jno
add
sub
cmp
xchg
das
push
subb
imul
inc
loop
mov
test
ficomps
add
xchg
lret
or
sub
sub
pop
push
pushf
push
xor
call
and
inc
cs
jge
loopne
mov
cmp
mov
int
mov
push
aaa
adc
cmp
dec
lret
test
lea
ficomps
fistpl
mov
adc
pusha
fldt
test
dec
adc
cmp
jno
insl
ljmp
pusha
mov
push
add
jmp
bound
cli
int
cmp
jl
sub
loop
xchg
fdivp
push
and
outsb
xchg
dec
or
cmp
jle
adc
xchg
sbb
test
pop
xor
jmp
sbb
and
test
xor
imul
push
stos
or
push
xor
xor
dec
jle
jge
dec
test
mov
sub
imul
sbb
and
or
inc
push
arpl
out
add
push
push
and
mov
inc
jns
pop
dec
pop
andb
pop
mov
addb
lock
into
pusha
in
lods
cmp
fildll
in
xchg
adc
pop
mov
add
mov
cli
fnsave
cli
pusha
in
stc
es
jle
loope
mov
popa
fisubrs
stos
orb
and
ljmp
dec
fnstsw
orl
pusha
mov
push
fldt
lcall
call
out
in
ja
orl
data16
cltd
mov
sbb
ljmp
mov
cmp
sub
dec
cli
sahf
cmp
pop
sbb
call
shl
out
mov
aas
imull
cmp
cmp
add
inc
push
mov
rep
fcomps
inc
test
jne
fadd
mov
scas
imul
ds
rcrb
mov
jmp
mov
inc
sbb
sub
cltd
data16
xor
in
add
mov
jmp
push
scas
jecxz
xchg
xorl
mov
enter
pop
xchg
adc
dec
sub
jae
mov
push
imul
stos
xchg
in
stos
push
adc
sub
rcrb
jne
sub
xchg
pop
lods
xor
lahf
fs
push
dec
iret
xchg
mov
jecxz
mov
jns
imul
in
push
lret
ret
imul
mov
fisubrl
out
mov
mov
adc
xchg
add
aad
call
and
mov
pop
scas
fcomps
insl
das
jle
lret
mov
push
sub
mov
push
xor
xchg
daa
mov
mov
jecxz
lods
rorb
fisubs
fadds
mov
mov
sub
adc
cmp
sub
pop
mov
jne
repnz
mov
fcmovnb
mov
inc
outsb
pop
pushf
iret
popa
mov
mov
fimuls
sbbb
and
cmp
push
mov
lock
dec
mov
test
into
das
cmp
jmp
insl
inc
ret
scas
push
arpl
cwtl
in
inc
fwait
shlb
ficoms
push
js
aam
imul
cmpb
scas
rcrb
adc
daa
cmp
jb
cmp
mul
cmp
repnz
in
pushf
arpl
imul
xor
int
sub
or
fistl
fidivl
ja
adc
insb
or
es
mov
mov
or
mov
mov
or
aad
mov
push
xor
cs
and
push
pop
mov
bound
mov
cwtl
repnz
cs
test
mov
jnp
icebp
push
fsubrs
mov
jmp
or
jp
je
xchg
out
imul
int
cmp
mov
bound
outsb
mov
jg
or
xchg
rorb
pop
mov
repnz
xchg
out
sbb
or
shrb
mov
ss
int
sub
rolb
dec
cbtw
jae
dec
data16
push
xchg
adc
add
int3
dec
and
scas
out
je
and
pop
push
inc
push
push
test
adc
sarb
jp
jmp
imul
insb
dec
outsb
push
jno
mov
ror
in
outsb
mov
add
mov
sbb
fdivrl
push
sbb
push
inc
int3
xor
dec
cmp
mov
pop
mov
inc
mov
test
cmp
fcmovne
and
xchg
shlb
xor
or
jp
cmp
je
in
test
cwtl
pop
insl
cmpsb
stc
mov
or
mov
rolb
adc
pusha
pop
test
fsubl
push
mov
jl
add
xchg
sub
ret
je
and
push
fsubl
xor
aaa
mov
push
dec
jno
outsl
incb
popf
mov
je
mov
pop
cmp
gs
and
movsb
adc
in
lret
in
cmc
xor
shrl
pop
mov
mov
idivl
mov
fidivs
mov
sar
or
fiaddl
fimull
gs
mov
fs
dec
shll
test
or
dec
fnstsw
in
dec
fdivl
fs
fists
lods
push
pop
out
test
mov
dec
faddl
add
inc
ret
js
fimull
popf
mov
mov
mov
lret
std
or
dec
inc
inc
imul
push
jge
mov
dec
shl
jae
jecxz
ljmp
out
gs
inc
cli
mov
cmp
xor
inc
je
pushf
in
adc
cmp
fisubl
stos
fsub
cmp
lcall
jbe
add
inc
lcall
xor
xchg
mov
arpl
stos
pop
orb
pop
pop
adc
mov
mov
leave
pop
dec
je
mov
jp
lods
cmp
stos
xchg
out
pop
jge
fsubrp
js
and
add
inc
nop
pop
mov
jb
cli
pop
dec
jns
mov
jmp
cmp
cli
pop
jg
jmp
adc
ljmp
sbb
hlt
mov
es
in
repz
lcall
adc
pop
and
push
mov
inc
out
mov
loopne
cmp
ret
aas
out
mov
fidivs
cltd
int
xor
out
dec
movsb
jnp
mov
outsb
repnz
add
pushf
aas
aas
xor
mov
pop
add
xor
push
stos
cmp
jns
cwtl
in
dec
mov
and
xchg
mov
icebp
fimull
pusha
cmpsl
ja
pop
xchg
or
arpl
and
orb
pop
adc
mov
fwait
dec
mov
nop
rolb
shr
xor
mov
insb
xlat
inc
and
add
xor
xchg
mov
arpl
stos
add
cltd
pushf
lret
scas
xchg
xchg
xchg
dec
jns
mov
push
subb
insb
mov
addr16
jnp
iret
aad
mov
fsts
inc
and
call
fwait
and
fdivs
jp
mov
adc
cmp
out
dec
inc
jnp
mov
mov
and
fimuls
in
mov
add
sub
inc
xchg
aam
lret
jle
and
dec
inc
int3
cwtl
push
pop
in
sbb
sub
push
push
fdivs
ljmp
int
data16
jbe
das
inc
mov
sbbl
stos
or
loopne
js,pt
and
addr16
cmp
outsb
jbe
fistpll
add
nop
xchg
push
sbb
stc
ja
scas
insb
popl
stos
push
push
dec
sub
jae
fwait
or
sub
out
mov
and
and
jge
ljmp
jnp
cmp
movsb
and
stc
jb
stos
test
cmp
and
pop
aaa
dec
lock
scas
out
push
mov
jge
cli
movb
sub
push
shrl
lods
jmp
out
inc
pop
repnz
push
jo
cmp
mov
inc
pushl
xor
push
pop
cltd
sbb
or
or
xchg
mov
pop
sahf
adc
sti
inc
jns
push
or
mov
ds
stos
dec
dec
rorb
mov
push
ljmp
and
imul
pop
ret
or
pop
in
sbb
in
cmpsl
cltd
dec
outsb
insb
stos
mov
movsl
cmp
mov
inc
icebp
insb
repnz
mov
pop
data16
loope
cmpsb
xor
xor
mov
xor
mov
jmp
jnp
mov
in
jbe
jb
adc
add
nop
sub
inc
xchg
or
out
dec
pop
adc
arpl
and
rclb
mov
fneni(8087
push
add
lcall
scas
mov
inc
jo
js
mov
jns
popa
or
loop
movsb
nop
inc
jl
out
xor
mov
ljmp
pop
dec
andb
outsb
aas
sbb
jl
mov
pop
sub
dec
add
sub
jmp
adc
push
inc
out
int3
into
aad
adc
int3
cmp
mov
dec
xor
xchg
push
mov
cmpsb
mov
sbb
add
mov
sub
mov
pop
xor
out
mov
nop
push
mov
inc
xchg
jmp
out
jle
ret
call
sbb
scas
insl
loope
xchg
addr16
xchg
scas
xchg
es
sub
mov
leave
inc
push
push
or
mov
pop
je
xchg
and
je
inc
out
in
aas
adc
or
fisubrs
mov
inc
in
lods
sub
jecxz
std
arpl
cmc
outsb
aad
inc
cs
jle
dec
test
insb
xor
mov
jns
loope
daa
es
nop
inc
mov
push
out
jecxz
sbb
mov
mov
jecxz
dec
push
sub
lret
imul
lahf
fmulp
popa
push
mov
cld
loopne
push
and
frstor
stos
xor
mov
pop
int3
call
mov
insb
out
lds
sub
push
sub
pop
loope
mov
divb
pushf
cli
mov
rorb
pop
aas
pop
ret
jo
mov
jbe
divl
pop
pop
jg,pn
sub
outsl
mov
mov
and
leave
decb
dec
stos
or
xor
add
insb
outsb
inc
fisubrl
inc
and
or
call
shrl
pusha
popa
xchg
je
mov
xlat
pop
push
pop
out
push
push
or
mov
pop
test
std
cmp
call
xor
aas
push
std
mov
lods
or
enter
jno
inc
out
jl
iret
inc
sti
fdiv
test
mov
insb
pop
fcoms
jg
subb
jg
enter
or
xchg
rcrb
mov
push
push
mov
insl
push
inc
pusha
mov
push
mov
or
das
push
mov
cmp
mov
shlb
fcoms
sub
repnz
dec
ret
les
or
xor
and
mov
mov
or
ja
cmp
out
adc
xor
cmp
xor
mov
or
jge
cmp
adc
out
nop
pop
data16
pop
mov
sbb
mov
stc
xor
je
add
pop
xchg
subl
xlat
mov
lret
sbb
add
mov
push
clc
arpl
dec
push
add
xor
pop
mov
pextrw
lods
mov
ljmp
adc
out
pop
repnz
aas
and
cmp
ljmp
aaa
cmpsb
and
or
jge
cmpsl
lea
lret
mov
loope
je
aad
jmp
jnp
mov
jge
jae
jns
dec
xor
lcall
sbb
adc
add
imul
mov
rcr
mov
out
shlb
jo
popf
mov
fisttpl
jnp
mov
jge
and
testb
mov
repnz
insl
add
lret
sbb
imull
insb
mov
fdivr
out
into
inc
xorl
or
int3
jmp
mov
mov
cltd
ret
pusha
loope
in
xor
mov
mov
xchg
test
cli
dec
scas
push
out
divb
jo
popf
sbb
mov
sub
loopne
jl,pt
and
lds
xor
fcoms
pop
push
inc
push
test
cli
loop
outsb
sbb
stc
jl
scas
jle
dec
xchg
jns
dec
mov
addr16
cmp
mov
loope
inc
loope
sti
jle
mov
lret
adc
mov
mov
sub
in
popa
pop
mov
popf
aas
iret
inc
pop
outsl
inc
mov
insl
in
lds
sbb
xor
cmp
pushf
jns
cmpsb
mov
inc
sbb
jns
dec
xor
jp
insb
adc
and
addr16
xor
xlat
dec
xor
out
mov
scas
dec
push
xchg
scas
movb
cmpsl
loopne
ds
sub
xor
inc
push
jge
ljmp
bound
mov
movsb
out
mov
scas
aad
mov
out
aad
mov
in
in
push
add
fistps
or
sub
sbb
mov
rclw
inc
dec
sub
loopne
push
jns
dec
lock
xor
out
mov
scas
insb
or
shr
data16
adc
in
cltd
adc
xor
inc
mov
inc
aaa
out
mov
inc
mov
aad
call
dec
dec
cltd
insl
push
push
mov
cmpsb
mov
jecxz
and
mov
sbb
or
sti
sub
cltd
sbb
and
jo
lods
std
sub
dec
addr16
aam
out
or
and
cmp
bound
sbb
sub
cmp
xchg
dec
xchg
inc
mov
mov
xor
jge
popl
sarb
xchg
add
rcr
cld
add
mov
jmp
pop
adc
xchg
xchg
jns
pop
scas
dec
loop
inc
push
jl
inc
inc
jo
sbb
mov
insb
push
ret
je
mov
insl
std
cmpsl
cwtl
add
push
loop
mov
mov
sub
bound
mov
mov
sub
add
lret
or
cmp
pop
xor
adc
fdivs
fsqrt
mov
out
push
in
stos
bound
or
insl
fdivrl
mov
sub
dec
push
movsl
stc
mov
cmp
stc
enter
dec
inc
loope
push
imul
xor
loopne
mov
and
mov
lahf
out
outsl
mov
fistl
cmpsb
add
cmp
in
cmpsl
jo
test
mov
inc
std
add
push
arpl
push
repnz
test
test
daa
push
sub
inc
xor
push
mov
push
and
push
arpl
mov
xchg
jp
test
or
mov
nop
bound
or
adc
pop
adc
adc
sti
aam
pop
pmaxub
pop
and
insb
or
fldt
icebp
shlb
test
icebp
aas
jmp
pop
lods
out
sbb
fidivs
inc
fcomi
in
pop
clc
push
sbb
jecxz
ljmp
jmp
adc
mov
sbb
xor
or
fidivrs
sbb
shll
mov
adc
add
xchg
sub
adc
sub
sbb
pop
or
out
in
shlb
sbbl
adc
insb
dec
arpl
pusha
cmc
push
cmp
addr16
mov
xlat
jmp
jbe
jmp
enter
inc
pop
hlt
push
xchg
in
in
inc
pop
mov
cmp
shrb
das
xlat
xorl
pop
jg
push
daa
es
pop
dec
cwtl
inc
pushf
cmpsl
xlat
stos
sarl
nop
xchg
lret
cmp
out
repnz
sub
xchg
inc
or
mov
subl
out
dec
into
ds
repz
xorb
aam
daa
movsb
pop
xor
cmp
test
inc
and
jg
iret
or
jle
pushw
add
fcoms
movsb
dec
test
cs
fisubs
adc
loop
mov
mov
int
mov
push
mov
repnz
jmp
push
cmp
aas
dec
mov
arpl
add
bound
aaa
mov
pop
je
mov
or
daa
decl
jb
inc
and
xchg
lret
fdivp
push
mov
dec
sarb
test
adc
fsts
cli
jo
insb
cmp
imul
xchg
or
mov
xor
add
inc
pop
push
mov
mov
jo
out
sbb
outsb
out
push
in
out
sub
icebp
jno
stos
pop
loopne
loopne
xor
shr
push
adc
mov
loop
pop
or
mov
out
or
dec
int
dec
adc
dec
sbb
dec
add
dec
mov
mov
lods
inc
inc
cld
cmp
fcoml
pop
adc
in
or
and
popa
push
push
mov
cmp
rolb
mov
add
std
ja
xchg
jae
in
repz
dec
jmp
dec
add
push
fwait
enter
cmpsb
imul
cmc
jp
push
dec
mov
mov
loopne
enter
jae
jo
scas
lret
stos
frndint
sbb
and
adc
cmpsl
add
and
scas
shll
bound
mov
inc
jg
pop
stos
mov
add
pop
addl
jp
push
adc
call
cltd
xor
fwait
testl
adc
fwait
out
and
ret
mov
dec
dec
dec
add
jl
movsb
xchg
dec
mov
dec
fldl
mov
lods
push
fistl
insb
andb
lret
push
jmp
js
pushf
sbb
shlb
jecxz
xchg
sarl
insl
xor
mov
mov
dec
jnp
lcall
enter
repnz
or
inc
in
inc
jl
dec
int3
testb
imul
jg
mov
jae
sbb
fwait
sbb
mov
and
pop
rcll
stos
mov
jp
cmpsb
stos
push
cld
jns
sbb
mov
ljmp
out
out
bound
inc
enter
idivb
cmpb
jns
push
or
and
xlat
and
fildl
push
sbb
xchg
adc
aam
test
push
test
ret
and
imul
fstl
outsb
xor
shll
in
lahf
cmp
icebp
ret
fmuls
pop
jne
loopne
cmp
sub
pop
sbb
fs
adc
fs
setno
movsl
fwait
rcll
addr16
ficoml
sbbl
push
sti
jle
mov
cmp
nop
jp
sbb
rol
data16
pop
int3
jl
aad
lahf
inc
testb
rorl
dec
jns
test
mov
push
fsubrl
and
subb
cwtl
jle
aaa
add
pop
push
mov
add
mov
xor
pop
mov
or
addb
loop
xchg
test
sub
fwait
add
stc
jl
sub
dec
dec
dec
aam
out
mul
cli
add
cld
xor
das
sbb
mov
js
xor
xchg
in
scas
push
mov
jo
out
cmpl
out
call
or
sbb
dec
ss
jnp
in
xchg
push
pop
arpl
mov
aas
pop
xchg
std
ljmp
mov
lret
lret
sbbb
dec
ss
out
push
fsts
jge
je
je
push
bound
sbb
jge
not
lret
pop
das
sub
sbb
add
sbb
cli
into
ja
bnd
add
or
pminub
dec
dec
ret
repz
dec
xor
shr
dec
pop
push
cmpsl
xchg
imul
pop
xor
insb
sti
mov
cli
push
mov
imul
cmp
or
loop
rcrb
in
and
sbb
mov
stos
popa
imul
shlb
sbb
mov
and
sub
and
or
test
mov
inc
loope
sbb
sbb
push
mov
fbstp
sbb
stos
inc
loop
enter
mov
data16
mov
fadd
insb
clc
jae
ja
xchg
pop
loop
loop
inc
iret
and
add
or
pop
mov
mov
mov
cs
sbb
outsl
mov
aas
movb
jge
dec
loope
std
js
sbb
mov
mov
movsl
cs
imul
or
arpl
mov
pop
out
fildll
aad
aad
cmp
pushf
lret
leave
sbb
or
fisubrs
lsl
nop
es
movsl
cmc
sub
idivl
jl
xor
jle
cmpsl
rcrb
ficoms
cwtl
sbb
cmc
push
push
int3
lcall
insl
repnz
fmulp
mov
push
and
xor
out
lret
stos
sbb
adc
aas
and
cmp
add
mov
pop
es
sub
xchg
stos
int
xor
fildll
push
ror
out
mov
lcall
orb
in
xchg
int
adc
push
mov
inc
imul
dec
data16
or
xor
or
lret
adc
cmpsl
and
cmc
insb
ret
push
fidivs
test
je
ds
push
and
jmp
or
outsl
dec
addl
repnz
sub
xor
jno
sub
int3
push
insb
inc
jg
aad
pop
xchg
push
mov
cmpl
inc
sub
nop
jge
arpl
pop
mov
xchg
inc
out
imul
xor
addr16
cli
sti
xor
scas
stc
out
push
imul
dec
mov
cli
out
cmpl
leave
xchg
ds
in
scas
mov
popa
ret
fsubl
xor
loope
fisubrs
pop
outsb
stc
xor
adc
push
mov
scas
imul
mov
mov
call
movsl
and
push
xchg
daa
dec
in
pop
aam
dec
pusha
mov
push
es
call
rclb
xor
inc
loope
fildl
addb
and
mov
jne
fcoms
pop
mov
ss
mov
push
jo
pop
lock
inc
popa
sub
je
xor
push
add
jl
push
pop
push
rcrl
push
ret
cltd
xchg
outsl
push
arpl
sbb
mov
xchg
lcall
jecxz
pop
cmc
das
sahf
push
dec
cmpsl
out
fldl
xor
popa
outsb
loopne
push
pop
push
push
sbb
jp
mov
jo
jg
ds
push
xchg
fildll
push
cld
iret
sbb
pop
in
add
xor
mov
test
push
inc
repz
es
aad
mov
push
or
jmp
enter
lret
push
fwait
shll
xchg
movsl
add
pushl
loop
data16
loopne
dec
aad
mov
push
nop
out
cld
repnz
in
mov
sub
stos
mov
sub
insb
push
int
fstps
or
pop
mul
sub
movl
or
fisttpll
loope
xchg
imul
sahf
into
cmpb
call
dec
and
sub
mov
add
pop
repnz
dec
out
xchg
aam
rcl
or
jmp
adc
mov
or
daa
inc
leave
cmp
movsb
cmp
insb
ljmp
fisubrs
scas
or
or
jl
push
cmp
arpl
mov
push
push
in
pop
pop
movsb
xor
popf
xlat
daa
cltd
adcb
aaa
sbb
divl
dec
mov
xchg
cmp
imull
push
sbb
mov
nop
loopne
bound
shrl
les
or
insb
cli
dec
mov
imul
cmp
xchg
daa
cmp
roll
cmp
mov
cmpsl
push
xchg
push
mov
orl
cmc
mov
cmpl
xor
in
lods
nop
push
popa
in
jae
mov
jnp
dec
out
imul
push
mov
push
in
xchg
les
sub
dec
lret
rcr
jne
sbb
xor
jbe
out
mov
cli
aad
sbb
dec
lods
cmpsl
int3
out
mov
imul
stos
sub
faddl
bswap
adc
out
adc
adc
rorl
cmc
sbb
pushf
adc
cmp
jg
fnstsw
push
into
lahf
push
dec
adc
lea
and
out
repz
inc
cmp
push
scas
lock
push
out
jb
repnz
roll
pop
pop
mov
repnz
or
cltd
aaa
jo
cmp
scas
push
fists
fmulp
push
and
cli
shr
push
je
daa
mov
cmp
adc
ret
sti
pop
fiadds
cmp
and
mov
sub
mov
das
dec
in
pop
sbb
out
and
scas
adc
xor
xor
dec
lods
cmp
rcrb
add
push
lea
sbb
add
out
enter
iret
push
jo
jnp
test
jae
xchg
insb
push
fcom
xchg
jns
cmpxchg8b
iret
aad
inc
and
push
add
cwtl
adc
aad
push
add
in
test
rorl
cmp
add
mov
enter
mov
daa
push
insl
stc
test
jnp
sbb
cltd
mov
repnz
pop
mov
jbe
xchg
push
jp
mull
sbb
pusha
lods
inc
cli
gs
test
ljmp
xor
or
fistps
push
jo
popf
add
cltd
ficomps
popa
lcall
add
mov
std
jbe
sbb
lods
dec
fisttpl
mov
das
cltd
push
lret
inc
mov
sbb
imul
mov
mov
sbb
mov
shlb
mov
inc
mov
clc
add
jp
inc
cli
jbe
mov
sbb
loopne
bound
mov
ljmp
fmull
fdivrs
clc
lret
inc
jb
out
pop
cmp
mov
es
adc
mov
dec
popa
push
jmp
lret
xor
in
and
arpl
or
cli
enter
insb
mov
fwait
or
mov
sub
in
dec
sbb
insl
stc
ljmp
inc
mov
mov
jns
in
dec
popa
out
daa
cltd
cmpsl
sbb
adc
dec
jbe
cmc
push
jmp
inc
rorb
rol
inc
mov
sbbb
dec
orb
cmc
clc
loop
bound
lock
fisubrs
push
push
ljmp
pop
push
lret
add
sub
and
aad
add
test
arpl
int3
repnz
push
mov
sbb
jb,pn
in
pop
dec
cltd
stc
inc
popl
xlat
int3
repz
mov
sbb
les
dec
lea
iret
sbb
adc
jnp
jp
scas
cwtl
test
push
roll
jl
shlb
aas
dec
popf
sbb
xchg
cmp
cmp
inc
inc
lods
add
cmp
xchg
sbbl
ds
movsl
pop
scas
imull
push
sbb
xchg
call
adcl
je
mov
xor
movsl
dec
inc
iret
mov
jne
jne
out
arpl
popf
fs
adc
dec
or
subl
test
in
jne
ja
and
or
test
and
lahf
fimuls
int3
add
jno
fisttpll
clc
push
into
mov
fisubs
or
add
inc
ja
pushf
xchg
mov
dec
cmp
in
jne
shlb
pop
test
stos
insb
stos
pop
fimuls
sub
ficoml
rcrb
add
jge
add
cmp
adc
insb
mov
fwait
pusha
mov
mov
cli
cmpsl
lds
sub
mov
fsub
sbb
fxam
jecxz
insb
xor
aad
adc
call
xor
nop
shl
es
iret
nop
pop
or
cwtl
cmp
jne
sbb
test
sbb
fdivr
mov
cmc
negb
mov
insl
loope
xchg
mov
push
lret
push
shrb
and
sahf
arpl
add
push
push
push
mov
rcl
mov
loope
lods
mov
cmc
dec
push
cmp
sarl
jmp
mov
xchg
fiadds
das
jb
jp
push
outsb
in
fxch
xlat
mov
sub
inc
adc
paddusw
xchg
orl
push
mov
sbb
pop
jg
fidivrs
sub
loopne
stos
inc
das
call
dec
lcall
loope
and
dec
push
mov
sbb
mov
or
loop
fwait
scas
dec
in
or
mov
and
ja
mov
jae
arpl
cmpsl
fmuls
jns
jl
xchg
aam
mov
cmp
cli
xchg
lods
jne
and
fnsave
xor
jo
dec
cmp
and
mov
fcmovne
fdivrp
push
mov
aaa
xchg
lea
xor
mov
addr16
punpckhdq
imul
into
icebp
sub
mov
aam
imul
shl
and
call
mov
push
jne
adc
loopne
cmpsl
xor
std
dec
add
mov
insb
les
fdivs
mov
pop
adc
pusha
jge
iret
xchg
cwtl
mov
xor
lock
rcl
mov
jp
dec
pop
xlat
ret
mov
jbe
pop
ficoml
pop
mov
or
fwait
cmpsb
clc
fs
addr16
pusha
dec
mov
cld
sti
adc
iret
pop
dec
mov
push
pop
pop
loopne
ret
scas
orl
mov
add
add
scas
das
cli
mov
mov
aaa
adc
fidivl
stos
cld
or
test
xchg
xorb
jecxz
outsl
sub
repnz
adc
cmp
ds
push
test
lret
aam
in
xchg
adc
ficomps
out
or
or
in
jmp
jp
cli
add
pop
adc
xchg
pop
ss
adc
out
andb
jae
mov
xchg
insb
fistps
dec
imul
jne
ret
or
add
cmp
adcb
xchg
push
jl
sub
ss
fimull
and
xchg
pop
loop
sub
jmp
movsl
xorb
ret
push
cmp
bound
mov
insl
jle
adc
shrb
rol
pop
jmp
add
repnz
push
stc
inc
sbb
into
sub
movsb
pop
mov
jp
fisubl
add
fistpll
dec
jno
mov
adc
pop
xor
or
cmp
jae
xor
sbb
out
add
adc
xchg
sbb
cld
lods
lcall
fistpll
jp
and
push
jp
jbe
push
negb
mov
pop
pop
aad
pop
cmpsl
test
cwtl
sbb
mov
sbb
call
insb
jg
mov
movb
push
lcall
mov
mov
ja
dec
mov
mov
and
std
sub
adc
cmpsb
cmp
jo
loop
imull
aam
fldl
sbb
fadds
int3
xlat
mov
cmpsl
mov
xor
adc
sub
fcmovnbe
adcb
iret
pusha
adc
cli
ds
fiadds
mov
xchg
mov
mov
inc
imul
jl
test
sahf
sahf
mov
mov
mov
push
test
cli
xchg
mov
and
mov
add
jp
cmc
mov
es
inc
aas
mov
sub
cmp
leave
or
pop
icebp
xor
mov
lods
jnp
mov
nop
jle
xor
fld
push
jge
sahf
rcrl
jg
ljmp
loopne
sub
sbb
cltd
sub
push
or
inc
addr16
clc
add
cmpsb
cltd
jl
subb
pop
cld
lret
decl
adc
mov
jbe
mov
rolb
lahf
sub
lods
adc
add
jo
das
imulb
dec
jp
jmp
js
mov
lcall
and
outsb
fmuls
dec
mov
ror
je
shrl
push
adc
sbb
clc
xor
mov
adc
or
push
mov
daa
mov
test
out
mov
lds
pop
loop
mov
cmpsb
mov
paddd
mov
mov
pop
inc
jl
xchg
sahf
pushf
mov
jnp
cltd
fisubl
push
ja
push
mov
pop
jne
xchg
cmp
cmp
or
gs
pop
cltd
enter
popf
dec
and
xchg
xor
push
stos
scas
cmp
insb
jl
pop
faddl
stos
pop
add
or
into
loope
sbb
int3
popf
arpl
inc
dec
add
out
mov
pop
mov
or
pushf
xchg
lcall
cwtl
lods
test
mov
pop
pop
add
jo
jge
sub
aas
sub
xor
ss
add
fisubrl
int3
subl
push
pop
or
inc
out
mov
jecxz
mov
inc
cmp
jp
and
add
xchg
pop
and
dec
xor
popf
mov
dec
adc
rolb
mov
sbb
dec
loopne
cmp
sarl
pop
fcoms
push
adc
inc
je
mov
sub
loopne
flds
push
and
jns
sub
lret
push
inc
mov
mov
and
leave
jne
xorl
mov
mov
loop
gs
imul
jns
sarl
xchg
push
or
aad
mov
sub
pop
movsb
mov
out
cmc
repz
dec
or
adc
add
les
ret
sbb
fbld
ja
jbe
sub
inc
cmpsl
adc
mov
sub
subl
fucomp
mov
xchg
divb
mov
or
arpl
jecxz
and
dec
push
inc
movsl
and
sbb
lock
xchg
dec
push
mov
mov
mov
mov
adc
sub
or
cmp
js
mov
lahf
add
stc
xor
jne
and
insl
in
jo
mov
pop
cwtl
sahf
xor
xor
orl
movsl
mov
imull
stc
add
sub
add
rcll
mov
cmpsl
rorb
outsb
arpl
mov
push
stos
sub
adc
dec
push
add
movsl
icebp
inc
jle
rcrl
pop
jecxz
inc
sbb
or
sbb
fwait
jge
stc
mov
mov
ficomps
xor
xor
xchg
mov
mov
xchg
or
push
loopne
enter
add
test
imul
aaa
shlb
cmpsl
xchg
mov
mov
xchg
add
out
adc
adc
pop
inc
mov
not
imul
fbld
out
or
ja
sbb
cmp
outsl
pop
cmp
fcom
jle
test
ljmp
rcrl
imul
jp
mov
cmpsl
cs
out
mov
aas
fsubrs
mov
adc
repnz
lock
or
movsl
out
lods
pop
je
int3
cmp
leave
dec
adcb
push
pop
aaa
jbe
add
das
xchg
mov
aas
jmp
or
jb
bound
add
mov
dec
insb
sbb
loopne
imul
movsb
xor
adc
mov
and
pop
jmp
cld
jge
adc
lcall
sbb
test
imul
push
xorl
lods
xor
sbb
or
nop
lea
scas
jbe
mov
and
gs
in
lcall
in
mov
and
sbb
ds
ja
fneni(8087
in
mov
aad
hlt
xchg
jns
movsb
dec
push
scas
or
and
je
cmpsb
or
jb
mov
adc
lret
push
fcom
lods
pusha
inc
std
out
aad
jle
add
sbb
lret
inc
inc
sahf
ret
scas
js
cmpsl
das
arpl
dec
pop
mov
ret
xchg
pushf
rol
xor
dec
mov
pop
lahf
fwait
inc
xor
push
out
lods
mov
imul
rolb
inc
xor
sub
xor
inc
or
push
mov
add
inc
mov
cwtl
pop
sub
jo
lret
push
in
ljmp
sahf
pop
stos
int3
push
sarb
sbb
cmp
mov
test
sbb
stos
std
xchg
push
mov
mov
jo
push
adc
sbb
mov
imul
add
cmp
xchg
cwtl
test
pusha
mov
lret
mov
or
push
cmp
sbb
mov
aas
fisttps
cmp
add
cli
das
dec
and
push
adc
inc
cmpsl
inc
loope
pop
xchg
sti
cmpl
orb
and
call
push
addl
out
xor
in
pop
sbbl
jg
inc
shrl
bound
adc
sub
cmpb
mov
push
sub
int
inc
lcall
loopne
sbb
mov
sbb
in
xor
mov
cmpb
js
mov
insl
adc
xchg
cmpsb
pop
xchg
sub
xchg
xchg
lods
adc
mov
jo
pop
dec
pusha
mov
repnz
sbb
pop
stos
sub
jne
pushl
xor
aaa
or
pusha
les
jbe
repz
mov
adc
lret
int3
jbe
mov
pop
push
mov
and
add
xchg
push
or
aas
testl
pop
jno
rcrb
xlat
sub
sbb
push
fdivrs
aas
jnp
mov
push
in
jecxz
lods
jae
add
loope
mov
les
pop
mov
inc
xchg
imull
mov
cmc
xor
jbe
and
data16
mov
adc
test
call
mov
arpl
xchg
dec
stos
aad
mov
pop
in
sub
fcomip
les
inc
lret
xchg
sub
cmc
mov
sub
dec
out
rcr
xchg
mov
ret
mov
pushf
out
inc
aam
and
add
stos
xchg
xor
sub
pop
pushf
enter
lock
pop
cmp
stc
fstl
aaa
jne
mov
ja
ljmp
sub
ja
jns
jge
pop
movsl
test
loope
push
pop
jg
lods
cltd
cmp
or
xor
nop
push
mov
mov
and
and
pusha
sbbb
sahf
add
mov
in
int
dec
insb
mov
jecxz
jle
dec
inc
int3
lods
or
push
mov
xchg
test
loop
xchg
and
clc
enter
dec
push
add
add
pop
push
push
sbb
inc
mov
leave
mov
enter
add
pop
test
ds
adc
ds
fisttpl
jb
out
adc
pop
dec
jne
mov
inc
sbb
jge
and
pop
cwtl
repz
jl
inc
add
mov
sahf
sbbb
inc
jns
mov
mov
cmp
loopne
aam
add
jle,pt
cmc
aas
push
cmpsl
fiadds
lret
lret
imul
loopne
inc
xchg
mov
inc
push
mov
cmp
in
lret
and
or
xor
dec
enter
stc
mov
aam
jle
out
cmp
inc
inc
mov
sub
movsl
xchg
stc
out
lcall
jle
mov
cli
imul
cmp
xchg
push
pop
stc
cs
cmc
shll
clc
je
fcoms
fsubrs
push
repnz
arpl
dec
sbb
push
mov
push
fidivrs
fst
out
jnp
adc
xor
imulb
jmp
pop
mov
mov
sbb
leave
jg
std
loopne
dec
lahf
jp
mov
sarl
xchg
sahf
adc
jmp
stos
ss
ret
ljmp
xchg
sub
dec
cmpsl
pop
cmpl
pop
js
call
int3
inc
icebp
gs
bound
jecxz
jo
out
push
push
xor
mov
out
daa
rolb
jp
xchg
ljmp
mov
xchg
jb
cs
addr16
dec
xchg
pop
jle
gs
rorl
out
dec
dec
or
lret
inc
push
ljmp
jne
lret
sbb
repnz
movsb
sbb
mov
inc
lretw
test
daa
scas
adc
add
aad
es
fsub
cmp
insl
mov
inc
movsb
pop
cmp
jbe
loope
sbb
fdivrs
outsb
insl
push
ss
mov
jge
cmp
nop
orb
jmp
call
aas
adc
sbb
pop
sarl
cmp
repz
or
mov
push
sahf
cmc
xor
rclb
xor
add
push
jae
pop
cmp
jp
inc
jno
nop
scas
cmp
ret
mov
dec
mov
roll
shrl
es
inc
pop
fs
or
arpl
mov
ficoms
lods
push
jle
arpl
nop
push
sub
dec
rolb
daa
fisubrl
add
enter
xor
cmpsb
jbe
dec
call
mov
lock
outsl
addr16
subl
insl
mov
jg
int3
jnp
cmp
lds
sub
add
mov
jbe
inc
push
or
xchg
push
icebp
or
mov
jecxz
fs
inc
ss
lods
jg
adc
lea
popf
jb
out
push
xor
out
lcall
popf
lods
rcrl
cmpsl
sarb
cmp
sbb
and
lock
je
ljmp
push
adc
sub
and
in
ja
popa
fcmovu
scas
stos
add
dec
in
pop
enter
in
fidivrl
xlat
fs
fwait
pop
push
das
xchg
dec
mov
and
popa
inc
testb
test
xchg
or
mov
pop
mov
mov
or
je
dec
and
and
cmp
lods
xchg
sub
ret
cmpsb
outsl
iret
inc
das
push
xor
push
cmc
jp
xorb
enter
jbe
mov
pop
inc
add
jl
mov
xchg
push
mov
jbe
fidivrl
jg
repz
test
movl
mov
jae
push
daa
pop
xor
sbb
xchg
sbb
inc
jno
sbb
inc
out
mov
sub
push
lods
lahf
jl
out
xchg
sub
adc
mov
inc
xor
fs
cmpsb
lea
popa
pushf
loope
cmp
and
push
fmulp
pop
push
sbb
loop
lret
jle
xlat
inc
push
in
push
cmpsb
sub
xchg
and
mulb
es
outsb
cmpsb
push
movsl
rclb
mov
lods
fistpl
xchg
jns
cmp
in
bound
std
loopne
mov
stc
mov
es
mov
sbb
in
push
dec
arpl
dec
incl
xchg
push
scas
lcall
mov
sbb
popf
outsb
hlt
jp
inc
or
adc
dec
addb
rcrb
pop
hlt
aas
scas
std
xchg
ficompl
in
xorl
and
dec
jecxz
xchg
adc
test
or
mov
inc
loope
fidivl
mov
ljmp
add
mov
cmp
fs
jnp
push
fsubl
or
xchg
lret
vminss
addr16
fdivrl
pop
push
adc
pop
mov
bound
or
cmp
dec
cld
int3
xchg
xor
cld
inc
pushf
sbb
or
loopne
test
insl
mov
jbe
push
jnp,pn
lods
es
push
js
pop
jmp
adc
lock
sbb
cmc
cmp
dec
xor
shll
xor
inc
iret
sbbb
pop
stc
xor
xchg
cmpsl
lods
ret
jmp
lret
inc
jmp
pushf
dec
lret
ror
je
stos
xchg
das
bound
sub
cs
mov
mov
cld
arpl
sarb
dec
in
dec
cmp
push
pop
add
andl
popa
xor
es
adc
sub
jne
mov
pop
punpckhwd
cld
call
dec
pop
xlat
add
sbb
and
pop
nop
test
sub
loope
adc
sub
loopne
inc
repz
mov
or
rol
adc
repnz
or
xor
sbb
js
push
icebp
mov
mov
arpl
lds
stos
mov
add
inc
or
test
mov
dec
cmc
cmpsl
in
sub
inc
or
bound
pop
jnp
push
jno
and
fidivrl
xor
loopew
dec
add
shll
jns
pop
pop
ja
pop
dec
xchg
in
out
cmc
ss
nop
and
fidivrl
jmp
add
mov
jae
das
pop
or
cmp
cld
lret
cmp
adc
dec
into
rolb
sahf
adc
stc
popf
fisttps
test
imul
rcr
or
jle
sub
mov
shll
mov
mov
scas
jle
ror
leave
stc
sbbl
aam
adc
jl
mov
daa
lahf
mov
push
scas
out
push
add
pop
aas
sbb
push
inc
pop
sti
sbb
jae
inc
outsb
sti
mov
xchg
fs
inc
data16
jnp
sub
out
fisttpl
pusha
push
addr16
mov
xor
lock
sub
fsubl
int3
mov
cmp
adc
and
rolb
insb
stos
xor
mov
pop
mov
call
mov
ljmp
in
mov
pop
xchg
shr
push
or
mov
mov
js
testb
popf
imull
lea
xor
sub
in
or
aaa
stos
and
mov
mov
jg
dec
fisttps
cmp
lods
stos
adcl
push
push
std
cmc
imul
arpl
sbb
out
leave
lret
dec
in
mov
aaa
mov
lret
test
pushf
push
lea
loopne
call
lds
lock
push
xor
and
aad
and
or
xchg
push
std
shl
cmp
call
out
cmp
mov
pop
in
imul
int
jecxz
loope
pop
das
xor
push
iret
push
mov
out
push
ret
jp
rcll
outsb
mov
mov
fisubrl
js
loop
repnz
adc
lahf
mov
bound
mov
dec
popf
fcompl
cmc
imul
mov
adc
cmp
jnp
std
ds
push
hlt
xchg
fistps
mov
mov
xlat
jg
mov
cmp
mov
jmp
or
int3
mov
loop
xchg
xor
mov
mov
push
aas
pop
add
imul
test
mov
loopne
rorb
bound
int3
jge,pn
and
xchg
stos
scas
sbb
or
sarb
xchg
adc
testl
push
jo
imul
or
ljmp
sub
push
add
sub
in
arpl
int3
xchg
lcall
mov
flds
aad
push
or
movsb
pop
push
loopne
push
out
or
mov
sub
dec
and
ljmp
mov
fwait
repz
sbb
stc
fsubrp
lahf
add
out
or
sbb
mov
adc
popa
cmpsl
loope
rcrb
adc
mov
fsubrs
movsl
in
adc
push
fldcw
lea
das
mov
jmp
lcall
mov
add
sub
xchg
mov
dec
sbb
sub
pop
jbe
loope
cmp
xchg
cmc
test
pushf
pusha
cmpsl
mov
and
xchg
mov
mov
outsl
popa
daa
in
xchg
pop
inc
call
fisttps
pop
negb
add
cwtl
fwait
out
push
cmp
in
xchg
imul
aaa
sub
rcrl
cmp
repz
adc
lock
idivb
and
ret
stc
push
pop
jbe
push
push
sub
arpl
adc
inc
call
mov
mov
sti
fldcw
cmpsb
int
or
mov
mov
fsubrl
mov
jbe
jge
xchg
mov
push
jo
rcll
stos
insb
jb
ret
inc
out
scas
addr16
mov
les
xchg
sub
lea
cmp
imul
lea
mov
sbb
push
xchg
rorl
popf
ficomps
xor
or
inc
pop
pop
inc
jmp
or
xchg
clc
xor
outsb
lods
adc
jns
jae
inc
std
inc
lret
fcos
bound
adc
jmp
jne
cld
ds
add
test
sbb
or
test
pushf
imul
fistl
loopne
sbb
shrb
sub
dec
cmpsb
rcrl
dec
iret
das
inc
jmp
rcll
mov
jne
addb
dec
inc
jge
das
loope
adc
scas
out
mov
outsl
fs
pop
scas
cmp
insb
sub
cmp
or
lret
lret
push
inc
int
sarb
mov
pop
cs
loopne
and
dec
xor
out
fisttpll
lahf
stos
into
dec
lcall
add
ret
fadds
inc
inc
push
fsub
xchg
outsb
xchg
mov
imul
loopne
imul
rcrb
push
sbb
jnp
sbb
pop
cmpsl
cmp
sbb
dec
outsb
jns
in
xchg
fiaddl
fnstcw
shrl
sub
cmp
orb
mov
sbb
pop
mov
jno
addl
or
mov
jbe
aas
es
adc
mov
lods
pop
cltd
sbb
fs
ds
sarb
popa
cli
aas
inc
aam
imul
cmp
add
cs
or
cmp
mov
pop
lds
test
xchg
jecxz
ljmp
xor
bound
or
mov
dec
adc
mov
add
cmc
jo
nop
fisubrl
int3
and
arpl
mov
jecxz
shrl
jne
sub
cltd
movsb
pop
pop
in
cmp
lods
stos
or
push
arpl
mov
jle
je
aad
bound
insl
inc
cmpsl
cld
fcomps
sbb
sub
test
mov
add
int
xor
jae
dec
jp
xor
and
adc
jbe
cmp
loope
je
and
mov
enter
lret
xor
je
inc
hlt
mov
cltd
pop
jnp
scas
jbe
pop
push
test
ficoms
inc
lods
mov
movsl
inc
or
push
rcll
leave
inc
pop
jbe
stos
jns
cmp
aad
push
and
sbb
cmp
cmp
repnz
inc
dec
xor
or
imul
add
pop
dec
aaa
in
lret
out
outsb
sbb
sub
mov
call
dec
subl
es
lds
and
add
jmp
icebp
pop
dec
xor
adc
shll
out
aaa
mov
lods
fnstsw
iret
pop
leave
aas
or
dec
ror
fcmovbe
lret
stc
dec
mov
pop
jnp
jno
xchg
pop
outsl
jle
mov
adc
jne
psrld
es
outsb
mov
and
mov
cmp
addr16
xchg
imul
out
jg
aas
sub
mov
pop
sub
fninit
jle
push
mov
int
mov
das
dec
xchg
into
mov
call
leave
cltd
data16
nop
xchg
pop
shrb
pop
xchg
scas
pop
cmp
fcompl
mov
push
sarl
shr
xor
inc
mov
xor
pop
mov
mov
mov
xchg
add
adc
cs
cld
shl
xchg
ret
xor
movsl
bswap
adc
mov
jmp
adc
test
fwait
orl
sbbb
pop
add
xchg
mov
js
loopne
inc
cmp
arpl
mov
mov
sti
sarl
cmpsb
fwait
sub
jno
sub
push
fnsave
jg
pop
leave
inc
lds
jmp
cmp
mov
lods
hlt
cmpsb
add
mov
or
xchg
mov
push
or
xchg
xor
xchg
xchg
xlat
pop
or
out
mov
shll
xor
sub
loopne
inc
cmpsw
loope
call
mov
xchg
or
aaa
rcll
mov
sarb
popa
xchg
inc
or
inc
sbb
in
inc
in
jge
and
out
dec
mov
dec
je
cmpsb
notb
sbb
push
inc
loop
mov
xrelease
sbbb
push
add
jg
and
rcr
int3
mov
adc
in
cmpsb
outsb
shrb
dec
jno
sbb
jecxz
add
and
xchg
cmc
fwait
lods
jne
bnd
jle
mov
mov
or
je
mov
loopne
test
jmp
jae
stos
mov
rcr
mov
loopne
fstps
add
or
push
mov
pop
add
push
xor
sbb
add
add
jb
push
mov
mov
jge
dec
sbb
sti
jl
negb
aam
pop
clc
pop
sub
push
imul
xor
xchg
xchg
scas
aad
inc
leave
mov
cwtl
lret
push
ds
sbb
or
sbb
dec
sbb
inc
xor
imul
xlat
xchg
jnp
cmp
push
frstor
enter
test
repnz
mov
stc
push
nop
push
call
pushf
xchg
mov
jl
fcmovnbe
hlt
xchg
xchg
stos
or
push
in
xchg
adc
pop
aad
xor
lcall
rolb
cs
push
sbb
pushf
stc
cmpsb
aas
test
movb
negl
idivl
lock
pop
jecxz
push
call
js
mov
rorl
sbb
or
mov
mov
dec
sub
aas
mov
addr16
jecxz
adc
mov
sub
pop
sub
repnz
push
adc
test
pushf
outsl
fisttpll
ror
outsl
es
inc
jae
mov
andnps
pop
push
lods
sbb
adc
cmp
psubw
xor
in
ljmp
cmp
xorl
xchg
jle
inc
lods
test
cmp
adc
jne
mov
jle
jne
stc
arpl
push
sub
gs
xor
ret
jne
mov
xchg
mov
jge
adc
out
xchg
enter
in
push
sub
cwtl
sahf
loopne
mov
xor
aam
scas
push
push
in
adc
push
js
shl
mov
push
add
jmp
and
add
dec
shll
lahf
enter
repz
repnz
mov
mov
ljmp
ret
addr16
loope
xor
jmp
into
mov
xor
push
and
pop
add
addr16
jb
add
fmulp
or
mov
imul
mov
pop
cmp
icebp
xlat
testb
or
cmp
add
test
and
std
loope
xor
outsb
stos
dec
xchg
imul
pushf
adc
into
pop
push
loopne
int3
jmp
data16
inc
pop
pop
dec
xor
jb
jb
out
cmp
lods
push
rorb
jl
out
push
sub
inc
pop
out
push
jg
mov
ja
addr16
fstps
mov
mov
jp
add
push
fwait
inc
fisttpll
inc
cmpsl
fsubl
or
push
mov
call
cli
push
ret
dec
inc
in
popa
mov
fcmovb
inc
add
adcb
out
shl
mov
adc
pop
fdivrp
fldcw
xor
cs
jno
xor
hlt
mov
adc
mov
and
stc
into
dec
arpl
mov
ljmp
lcall
adc
cmpsb
mov
loopne
jbe
imul
and
int3
inc
outsb
jmp
or
adc
rol
sbb
shr
push
jg
negl
jae
sbb
jmp
pop
leave
es
aad
stos
sbb
shlb
sub
mov
sbb
mov
push
mov
mov
adc
shl
jecxz
mov
std
or
gs
ret
ljmp
adc
push
sub
addb
movsb
pusha
mov
cltd
dec
push
fsubr
dec
sarl
ret
or
fdivs
inc
xlat
and
insl
inc
add
dec
jl
in
cmp
enter
mov
push
dec
int3
mov
dec
jl
int3
inc
jo
mov
in
pop
pop
and
push
add
lods
outsb
adcb
xchg
out
mov
xchg
jmp
sbb
cmp
jp
sti
imul
lea
lds
sub
dec
out
adc
add
jnp
adc
into
lock
xlat
cmc
aam
or
movsb
adc
inc
lcall
cmpl
fwait
nop
data16
loope
cmp
shlb
cwtl
data16
push
push
push
stos
in
xor
xchg
test
fldt
xor
xchg
sbb
outsl
xor
test
inc
mov
dec
cmp
outsl
push
mov
or
repnz
xor
leave
cs
pop
dec
cli
xor
jo
aad
in
dec
daa
mov
out
shrl
ss
repnz
xchg
push
push
jnp
je
leave
pop
fcomi
cwtl
dec
sub
add
nop
lcall
pop
xor
es
call
mov
dec
or
pop
and
and
mov
and
rclb
test
jge
push
push
push
clc
insb
add
or
sub
xchg
jns
xchg
das
adc
dec
fildll
mov
add
push
in
add
inc
fcoml
dec
iret
popa
jg
ret
xchg
and
cmp
push
outsb
jae
int3
pushf
imul
loope
enter
jae
jb
xchg
push
sahf
mov
and
aas
lds
fdiv
push
rolb
mov
insb
jecxz
insl
out
dec
pop
rcrl
cmp
das
xchg
cmpsb
jecxz
shrl
mov
aam
pop
ljmp
jnp
call
dec
lahf
mov
jl
popf
mov
mov
data16
insl
cld
in
push
pop
leave
pop
fists
es
in
movsl
jmp
push
jg
adc
xor
arpl
into
int3
subl
cmp
mov
and
mov
mov
mov
push
xor
xchg
mov
lret
sbb
mov
aas
mov
xor
pop
jb
loop
loopne
jbe
pop
fbstp
and
push
rcrl
sbb
dec
test
fadds
bound
xchg
daa
inc
fists
cmp
daa
test
push
push
xor
jo
imul
xor
notl
mov
xor
adc
xchg
daa
push
pop
es
push
sbb
enter
dec
mov
or
fldcw
pop
jmp
aam
loope
xchg
fwait
dec
mov
mov
insl
rolb
push
aaa
out
test
push
mov
xchg
inc
or
out
adc
jb
repnz
mov
out
xor
push
lret
sti
lcall
movsb
dec
pushf
pop
out
pop
imul
cmp
push
jecxz
add
sbbb
sti
jp
fsubp
inc
bound
outsb
enter
arpl
lret
inc
les
dec
cmp
setg
in
ja
xchg
mov
mov
and
cwtl
mov
pop
cmp
icebp
call
inc
or
inc
pop
mov
cli
xor
jge
mov
jae
cwtl
pop
jne
popa
cwtl
aas
jge
add
push
fisubl
jo
enter
out
mov
inc
fcmovb
in
into
loop
lret
pop
xor
aas
aam
xor
repz
repz
jge
mov
clc
jns
mov
adc
mov
test
imul
test
loope
cld
xor
jae
inc
rolb
arpl
outsb
xchg
or
push
je
movsl
fs
inc
dec
sbb
jae
dec
adc
jns
inc
add
jl
xchg
mov
inc
out
sbb
pop
rcrl
inc
mov
dec
sub
mov
dec
jmp
mov
xor
sbb
out
xor
clc
mov
xor
xchg
fsubrl
sbb
or
jle
add
outsb
pop
pusha
mov
das
test
loop
dec
arpl
jmp
mov
cmp
fnstenv
aas
ljmp
nop
shl
dec
dec
ljmp
xlat
jns
push
out
int3
in
fbld
cmp
pop
sub
xor
scas
nop
mov
adcl
inc
pop
push
popa
mov
sbb
popf
pop
js
xchg
cmp
lock
lcall
xlat
cltd
add
xor
mov
cmp
imul
inc
in
xor
add
inc
adc
jp
inc
cmp
sbb
xchg
movsl
repnz
lds
les
pop
mov
je
mov
ficoml
inc
inc
in
stos
jbe
in
inc
add
pop
mov
ret
pop
mov
xor
ja
out
leave
push
lret
fistpll
mov
mov
insb
cmp
jnp
mov
lock
mov
idivl
in
in
insl
jbe
shl
jmp
adc
xor
aad
push
push
mov
pop
adc
cmpsb
rorl
aaa
mov
adc
jge
sub
push
jge
insl
inc
aad
lcall
mov
imul
loop
xchg
out
lock
cmp
mov
sti
into
pop
xor
je
lea
hlt
inc
bnd
cmpsb
sbb
jge
or
pop
xor
xchg
hlt
or
inc
add
cmp
stos
aad
and
adc
lret
jae
mov
loop
pop
xchg
sbb
pop
imul
pusha
loope
jne
xor
lods
sbb
std
fmull
pop
mov
jns
dec
mov
dec
sti
adc
scas
cmpsl
adc
cli
add
mov
cmp
lret
adc
pop
cli
int3
aaa
mov
test
inc
mov
mov
out
push
test
jmp
jmp
mov
mov
xor
in
dec
inc
insl
and
mov
fnstsw
and
les
or
loop
ds
dec
je
sbb
jmp
cmpsl
adc
xchg
jb
jl
scas
cmp
in
lret
sub
add
inc
pop
cmpsl
icebp
sbb
sbb
insb
ds
fidivl
cld
sub
mov
xchg
push
fidivrl
sahf
lea
rol
fistpl
push
sar
call
xchg
arpl
mov
sub
mov
xor
sahf
aaa
cmp
in
jb
and
mov
cmc
jae
adc
pop
or
add
loop
lds
inc
add
inc
mov
jmp
clc
aas
lds
xchg
push
xchg
in
adc
cmp
rorl
or
fdivl
mov
xchg
push
clc
sbb
sarb
mov
int
gs
add
or
in
dec
cmp
push
cmp
xchg
stos
loope
mov
inc
pop
inc
xchg
filds
cs
test
add
int3
mov
cmc
test
int3
inc
mov
mov
mov
shll
roll
xor
add
push
xor
test
aas
mov
mov
dec
or
int
add
xchg
sbb
push
fisubrl
in
popa
cltd
or
outsl
add
pop
mov
lock
and
xchg
sub
cmpsb
inc
rorl
cmpl
sbb
scas
je
into
sbb
addb
mov
cmp
and
xor
jecxz
jne
mov
movsb
rclb
pop
fwait
lods
cmp
int
jmp
sbb
mov
orl
pop
ret
imul
int
sti
mov
cmp
cmpsl
mov
fnstenv
xor
pop
loopne
aad
jnp
or
mov
fdivrs
dec
lret
fisubs
xlat
mov
in
out
lret
test
add
pop
or
mov
sahf
adc
or
fcoms
mov
xchg
mov
shrb
daa
in
gs
movsb
mov
test
push
arpl
std
ficoml
lcall
mov
and
ss
add
mov
shrl
bound
orb
dec
inc
jecxz
hlt
sbb
mov
xchg
or
cmp
jns
sbb
or
movsb
sub
push
cmpsl
in
inc
inc
and
push
arpl
out
out
inc
aaa
or
dec
fstps
std
add
xorb
sbb
mov
icebp
scas
cmpsl
xchg
xchg
jns
sbb
sbb
mov
lcall
dec
in
loopne
imul
imul
lods
jo
iret
popa
ljmp
in
cmp
test
dec
insb
push
mov
call
jo
in
adc
orl
pop
aas
jo
js
xor
rcrb
jle
sbb
mov
int
and
xor
adc
ds
loopne
add
inc
sbb
int
shll
test
mov
sub
xor
xchg
rclb
sbb
lret
scas
pusha
jecxz
push
lods
jne
mov
jns
sbb
mov
mov
sbb
ret
jp
insb
push
testb
arpl
fxch
pop
adc
dec
rclb
xor
loope
push
ds
mov
fstl
in
mov
addl
mov
mov
je
cwtl
dec
scas
aaa
pop
outsl
mov
out
and
js
dec
mov
dec
lret
lahf
fidivrl
pop
xor
dec
pop
movsl
mov
popa
out
inc
inc
pop
test
pop
popa
dec
mov
jge
cmp
adc
clc
pop
pop
test
jle
jae
fwait
push
push
enter
test
cmp
dec
mov
scas
pop
daa
push
jne
lret
stc
ret
bound
lea
shll
push
adc
or
dec
jle
ljmp
cwtl
rcrb
pop
inc
ds
loope
mov
scas
or
xor
mov
xor
enter
jns
pop
outsl
scas
scas
pusha
mov
divl
jle
movsl
testb
xchg
sbb
push
adc
xchg
cmp
iret
pop
xor
dec
xchg
xor
xor
adc
rcll
loope
bound
negb
in
inc
movsb
jns
aad
jb
mov
leave
push
nop
mov
rcrl
mov
jb
and
int
inc
rolb
xor
mov
lods
jmp
outsl
xchg
leave
mov
push
push
xchg
cmp
shlb
mov
or
fs
das
mov
adc
js
and
bound
pop
and
js
gs
xchg
fdivl
and
cmp
mov
cmp
mov
inc
jl
lds
nop
inc
xchg
jnp
jecxz
xchg
cmc
xchg
scas
js
repz
xlat
push
addb
xor
jl
subl
lds
xchg
fistps
jmp
mov
jbe
loope
lods
adcb
shr
sub
out
sub
mov
and
add
and
push
and
mov
pop
into
push
es
dec
not
jno
mov
jns
fcompl
adc
inc
pop
cwtl
dec
inc
jnp
xchg
loope
leave
enter
rolb
push
dec
xor
negl
ss
subb
dec
jl
mov
jne
pop
stos
pop
mov
xor
sti
dec
push
mov
and
adc
or
jl
clc
ds
adc
adc
in
fs
ficoml
push
dec
sti
xchg
scas
cli
adc
sub
or
arpl
les
cmp
cmc
dec
mov
cmpsb
mov
movsl
jg
in
fildll
add
shrb
jbe
and
stos
loope
loope
out
cmc
insl
jns
and
dec
rorb
xchg
dec
adc
pop
fadds
sbb
pop
insl
sti
or
popa
dec
inc
mov
inc
ja
mov
movsl
roll
inc
nop
loope
andb
jbe
addb
jmp
subb
lods
adc
dec
es
jae
jle
lods
loop
cmp
pop
ret
mov
das
dec
xor
push
lock
insl
dec
insl
adc
outsl
xor
push
js
out
js
pop
push
shrb
out
dec
or
fistpl
mov
cmp
dec
into
in
pop
in
xor
xchg
ds
andb
daa
sub
jg
push
stos
enter
mov
cld
popf
push
cmp
insb
push
dec
push
add
mul
xchg
xor
push
sbb
jle
je
outsb
fcomps
shrl
xor
lret
je
jg
and
jmp
pop
ljmp
or
lret
xchg
mov
inc
in
rcll
ds
leave
bound
aad
cmp
dec
xchg
out
push
stos
rorl
dec
push
jns
and
shll
pop
stos
mov
mov
popa
cmp
sbb
cwtl
lock
movsl
scas
insb
add
jg
adc
jnp
cmp
cmp
sub
out
cltd
or
aad
rcr
push
dec
test
xor
pop
xorb
mov
cld
repz
mov
mov
pop
mov
push
sbb
inc
jb
jo
mov
cmc
int
mov
xor
mov
into
adc
es
mov
lret
push
pusha
cmp
or
jmp
xor
mov
iret
bound
sbb
cmpsb
loopne
push
inc
mov
clc
stos
test
or
fidivrl
pop
imul
mov
pop
mov
outsl
dec
rcrl
sbb
dec
sub
jns
mov
adc
push
mov
loope
and
cmpb
enter
lods
cwtl
out
push
mov
mov
pop
enter
mov
pop
cmp
mov
mov
mov
mov
pop
stc
rorl
jno
sbb
xchg
insb
sbb
xchg
mov
adc
out
adc
es
ret
dec
hlt
lods
cli
loopne
cs
push
or
scas
ret
inc
into
gs
ficompl
mov
add
add
leave
or
ret
mov
pop
dec
and
dec
dec
notb
inc
pop
push
gs
bound
sub
add
test
mov
lea
xor
add
es
or
imul
adc
and
or
or
cmp
cmp
jb
std
addl
test
ljmp
sub
lret
mov
xor
and
cmp
dec
jnp
lea
dec
jle
outsb
pop
ret
pusha
scas
lock
out
or
cs
mov
inc
imul
xchg
movsl
repnz
testb
nop
xor
shll
jg
in
push
pop
ja
cmc
cmp
push
fs
jp
je
dec
into
loop
push
lock
nop
mov
aas
xor
mov
mov
lods
inc
sub
bound
xchg
xchg
mov
test
dec
push
loop
jecxz
or
loope
mov
fisttpl
mov
imul
out
mov
adc
dec
daa
xor
rcrb
jp
loop
scas
jp
popl
test
and
es
imul
cmp
push
jo
mov
push
loope
mov
in
adc
add
mov
push
repnz
xchg
enter
test
pop
mov
ret
mov
repnz
dec
fcomp
sub
rorb
sub
aam
jmp
mov
jmp
outsl
mov
repz
fstpt
adc
push
mov
xchg
mov
mov
pop
jbe
add
jmp
xor
mov
inc
push
xchg
lret
mov
das
mov
hlt
jnp
push
outsb
sbb
imul
add
sbb
ja
adc
jle
in
mov
out
pop
mov
out
in
mov
jp
dec
add
enter
aaa
xorb
mov
add
adc
lret
es
inc
lret
xchg
cmp
add
mov
push
adc
jnp
xchg
enter
test
pop
scas
out
pop
and
ds
xor
cmp
js
ja
out
sub
sbb
movl
cmp
push
in
fcoms
xchg
cmp
outsl
inc
jge
cmp
sub
call
ret
push
lahf
ljmp
out
cmp
push
out
mov
cmpsl
xor
in
adc
lea
movsl
push
orl
push
sub
loope
pop
jno
cmpsl
loopne
mov
gs
jg
xlat
fidivrs
xor
sub
lds
jb
pop
push
pop
cmp
sahf
mov
inc
popf
lea
inc
dec
fnstcw
mov
xchg
and
push
cvtpi2ps
mov
mov
xor
dec
jg
lret
jle
jno
mov
jns
cltd
jmp
shl
dec
push
push
mov
dec
leave
out
jmp
fmuls
add
loopne
ret
jl
test
mov
cmp
outsb
movsb
lds
inc
mov
xor
inc
int3
push
shll
adc
sub
js
daa
pop
pop
add
fs
push
xchg
addr16
rorb
dec
and
push
hlt
fldenv
roll
mov
xchg
in
sub
mov
mov
mov
call
loope
jle
mov
test
roll
ret
mov
xchg
push
push
adc
dec
and
hlt
cli
lret
fcmovnbe
xchg
int
es
sub
cwtl
fdivrp
mov
fwait
shlb
mov
clc
outsl
mov
add
xchg
out
push
jg
mov
adc
mov
test
adc
insb
divl
inc
pop
add
jl
into
inc
insl
pop
int
bound
push
ja
and
and
dec
out
shlb
scas
xchg
dec
fistpll
sbb
inc
loope
enter
mov
mov
and
addr16
mov
jno
pop
jg
pop
fucom
jae
hlt
imul
mov
in
xor
and
jns,pt
cmp
adc
outsl
setb
lret
adc
push
mov
cmpsl
nop
pop
in
pop
adc
push
lock
or
daa
dec
cmpsb
rcr
into
jg
das
sub
setae
dec
push
and
inc
int3
aaa
pushf
adc
xchg
sahf
fadds
xor
call
and
out
fisubs
push
inc
ret
mov
cmp
mov
ret
jl
jg
hlt
pop
std
jbe
add
movsb
das
xlat
lret
push
stc
sbb
imul
ss
mov
sbb
xchg
xor
divb
cwtl
enter
jg
popf
add
int3
ja
sahf
sub
or
pop
sub
pfmax
mov
aaa
adc
pop
mov
xchg
test
out
inc
or
lret
sbb
popf
leave
mov
fiaddl
mov
ds
jge
xor
lret
mov
sbb
int
lret
push
lahf
popf
mov
cmp
xor
repnz
inc
cltd
adc
and
clc
pop
cld
xchg
loope
sub
mov
aad
mov
push
pop
movsl
sub
cmp
shrb
lret
jo
push
fiaddl
jle
lods
in
mov
sub
div
insl
sub
ret
out
mov
xchg
cmc
xchg
popa
mov
inc
mov
or
jns
pop
inc
mov
jp
xchg
int
enter
mov
mov
test
xchg
mov
inc
xor
andb
sbbl
push
les
and
mov
test
sbb
add
xor
pop
xchg
int3
mov
orl
ds
bound
into
and
cmc
cmp
adc
rolb
loopne
outsl
loop
bound
pusha
or
imul
repnz
ljmp
sbb
xor
scas
or
js
or
les
xlat
sbbl
subl
or
call
pop
dec
stos
inc
imul
jb
xchg
fadds
dec
jb
inc
or
jo
loopne,pn
jle
mov
dec
adc
faddl
ja
lret
inc
add
dec
xchg
shll
loope
push
popa
imul
mov
in
pusha
push
lock
add
adc
stos
dec
addr16
mov
dec
aaa
sbb
push
sti
fs
hlt
add
popf
pusha
xchg
or
push
fsubrs
sbb
stos
fistl
xchg
inc
dec
or
cmp
cmpb
scas
jg
dec
psubsw
jle
mov
jmp
push
shl
subb
sbb
scas
xor
inc
xchg
cld
adc
lret
cmpsl
ret
jle
lods
adc
and
jo
mov
xchg
enter
aaa
sbbl
inc
pop
fucomi
dec
mov
and
cltd
mov
fisttpll
mov
or
rorb
in
sahf
cmp
jge
dec
addl
cmc
xchg
test
stos
jg
mov
stos
popa
add
sub
loop
dec
sub
js
bound
ret
fistl
icebp
sti
js
test
out
bound
and
mov
xchg
out
xchg
imul
and
adc
pop
fcomps
sub
cmp
je
add
nop
sbbl
shlb
aaa
insb
divl
sbb
pushf
push
call
push
ret
das
mov
lods
rorb
xchg
add
mov
push
dec
std
cs
push
pop
shrl
ljmp
in
or
sbb
sub
xchg
mov
cld
mov
inc
data16
nop
loop
lods
es
sub
les
adc
mov
sub
inc
orl
ret
dec
lea
xchg
arpl
adc
ss
gs
je
jbe
pop
push
cmp
pushf
xchg
add
jle
rolb
outsb
xchg
push
cmp
adc
sub
aaa
or
cmpsl
fdivrl
sub
lods
xor
adc
cmpsl
das
in
out
fsubrl
dec
lds
push
pop
sbb
rol
pop
and
sbb
inc
xchg
pop
addr16
mov
dec
pop
or
ja
out
or
xor
cmp
jecxz
inc
adc
push
lods
jo
dec
inc
rcl
rolb
cmpl
xor
mov
fadds
pop
stos
sahf
pop
inc
sbb
insl
and
mov
dec
js
call
shlb
stos
out
leave
into
jb
aam
mov
inc
in
test
jge
inc
jne
mov
adc
adc
adc
sub
loop
cmp
sar
faddp
stos
mov
insl
sbb
lahf
mov
das
add
xorl
jl
int3
inc
dec
inc
ret
sti
pop
pusha
pop
arpl
xchg
dec
pop
rcrb
mov
push
cmp
dec
push
jno
repnz
loop
lds
and
dec
fs
jnp
mov
daa
sbb
shlb
pop
fs
shr
out
stos
sub
sbb
popf
cmp
cmc
cmpsb
mov
jne
rcr
lret
pusha
pop
imul
cld
and
popf
inc
xchg
mov
bts
jo
mov
xlat
out
gs
std
imul
insl
and
push
sahf
pop
sub
pop
outsb
mov
dec
popl
jo
sub
xchg
mov
pop
jle
sub
adc
xor
add
mov
stos
stos
pop
aad
movsb
mov
iret
fwait
adcb
jno
out
cld
mov
lea
push
mov
fdivrl
loope
scas
test
mov
stos
mov
sub
gs
mov
test
xchg
lret
setno
pop
xor
xchg
test
movl
js
fnsave
pop
roll
scas
push
fcoml
lcall
mov
jne
popa
popa
stos
rclb
sub
jbe
ljmp
dec
imul
and
dec
push
ljmp
imul
dec
push
adc
xchg
outsl
fldcw
cs
cmp
loope
push
xor
cmpsl
js
sub
adc
cmp
div
fs
dec
mov
xchg
loopne
xor
lret
xchg
imul
adc
jae
jecxz
int
ror
rcr
pop
sub
cmp
popf
push
xchg
dec
cmp
push
loopw
lods
aas
mov
xor
cmp
repz
stc
frstor
push
cmc
cmp
stos
es
test
lds
andb
test
pop
sbb
xchg
cmp
outsb
mov
ljmp
frstpm(287
jg
mov
inc
stos
push
iret
cmc
leave
mov
lods
inc
in
inc
fwait
mov
in
adc
jns
loope
into
sbb
lahf
jns
jg
push
sbb
out
dec
sti
lret
jp
cmp
stc
mov
stos
push
outsb
das
xchg
mov
psubb
out
aad
aaa
lret
and
inc
mov
add
xor
xchg
cmpsl
inc
and
lods
ss
insb
jle
sbb
sar
mov
lods
push
pop
rclb
jne
aaa
stos
stos
scas
outsl
xor
jno
insl
pop
cltd
cld
fucomip
shrl
js
ljmp
out
hlt
repz
jae
push
cmp
out
xor
xchg
ds
lock
lret
add
test
cmp
js,pt
mov
jbe
fincstp
pop
rol
repnz
dec
cmp
lret
cmp
add
scas
pop
jbe,pt
std
iret
es
bound
movsb
rcrb
adc
dec
jmp
hlt
mov
stc
jbe
inc
xchg
loop
inc
xor
adc
pop
sbb
pushf
dec
cmp
mov
cmp
sbb
in
mov
hlt
cmp
mov
ret
jno
enter
out
pop
icebp
mov
fbstp
inc
repz
inc
and
aas
mov
sub
pop
inc
lods
imul
sahf
mov
mov
push
push
ret
es
adc
mov
pop
shr
jb
pop
xchg
push
dec
add
dec
out
test
adc
cmp
popa
aaa
pushw
pop
or
scas
bound
jno
testl
imul
xor
pop
mov
lea
addr16
add
mov
fs
iret
insb
clc
test
stos
or
adc
cmp
push
sub
sub
fwait
test
pop
cmc
lds
or
lock
push
outsl
fmulp
cmpsb
push
leave
mov
out
punpckhbw
mov
add
or
jmp
cmp
outsb
loope
imul
leave
subb
inc
insb
xchg
push
pop
addr16
scas
cmpsb
mov
clc
push
sbb
dec
jg
push
rolb
jne
inc
arpl
jb
int3
adc
pop
sub
xor
cmp
loopne
fcoms
mov
fwait
inc
fistpll
in
cs
std
push
xchg
les
xchg
and
or
out
js
dec
call
jle
xchg
pop
fldt
negb
push
push
or
inc
pop
jl
movsl
lcall
mov
das
add
imul
push
inc
pop
rolb
test
push
dec
sbb
inc
test
push
bound
aam
push
jp
out
add
push
sbb
call
stos
out
dec
cmp
jl
mov
jecxz
ljmp
add
leave
imul
lret
jge
loopne
jge
lahf
jns
arpl
pop
push
mov
and
in
ficompl
lods
dec
iret
pop
sbb
pushf
cltd
sbb
mov
scas
subb
fmuls
mov
mov
loope
pushl
aam
xchg
outsb
xchg
add
subb
mov
or
pop
lret
pushf
cmp
dec
sbb
mov
and
push
fsubs
cs
add
clc
mov
sbb
adc
xchg
pop
jnp
add
inc
lahf
sbb
adc
pavgw
pop
cmp
dec
hlt
insl
insl
add
jbe
shlb
cmp
fimull
imul
fistl
popa
or
in
fldcw
inc
push
hlt
loop
mov
push
popa
adc
xchg
movsl
fs
cmpsl
in
ret
mov
pop
sbb
cmc
dec
push
clc
lods
testb
jge
mov
push
inc
mov
pop
mov
sbb
fdivs
jg
out
mov
jg
sub
mov
call
lcall
ret
or
dec
sbb
adc
adc
mov
mov
mov
gs
inc
pop
test
movsb
sub
shr
sahf
xlat
loop
jne
stos
and
aas
mov
lods
push
cld
movsl
cli
adc
icebp
ja
incl
adc
xchg
out
and
sbb
mov
inc
xchg
mov
call
pop
nop
mov
or
fdivrs
outsl
mov
push
int
mov
dec
inc
scas
adc
cli
cmp
mov
cmp
mov
xlat
push
inc
andl
mov
adc
fbstp
mov
cli
adc
sub
xor
in
imul
outsl
jae
sbb
loopne
push
and
adc
aad
or
push
leave
rcrl
push
cmp
mov
xchg
inc
iret
xchg
push
stos
repz
jns
cs
adc
jg
mov
mov
sub
bt
jns
xor
daa
scas
sti
add
xor
sbb
and
lret
jae
dec
xorb
out
push
add
mov
xchg
xorb
lret
jl
mov
aad
test
loope
add
pop
sbb
jle
stc
cmp
pop
inc
ljmp
xchg
fnstsw
scas
repnz
cmpsb
insb
push
cs
outsb
inc
pusha
mov
ja
popf
and
testb
movsl
cmc
cmp
int3
in
or
xor
cmc
cmp
xor
mov
dec
orb
push
fxch
cmp
outsl
aam
in
rcrb
lock
nop
movsb
lret
popw
stc
movsl
fisubl
popf
or
sbb
lods
dec
out
sub
imulb
andl
lods
pusha
jge
jo
push
push
jno
sti
out
push
cmp
shlb
pop
dec
in
push
xchg
jecxz
stos
push
inc
testb
and
sbb
cmp
adc
jge
pop
push
test
sub
pop
loopne
pushf
scas
mov
dec
fadd
lret
push
jno
push
sbb
xor
mov
jmp
or
es
push
pop
fistl
push
into
cs
cmpsb
fisttpl
push
push
cmp
dec
inc
xor
adc
js
pop
ja
xlat
rcr
pushl
or
push
shlb
cmpsb
cmpsb
adc
into
jl
clc
pushl
jle
rolb
call
push
pusha
nop
in
ljmp
lret
ret
cmpsl
jle
lret
das
stos
nop
inc
xchg
mov
lods
inc
shll
sub
mov
scas
adc
inc
ret
mov
lea
xchg
or
inc
adc
shlb
inc
inc
lahf
or
ficoms
andl
add
lret
adc
or
jnp
jge
sbb
jp
mov
xchg
js
dec
or
xor
int3
mov
mov
gs
cmp
jle
daa
fbstp
push
cwtl
mov
mov
cmp
inc
leave
cltd
mov
pop
fsubrs
xchg
scas
and
jmp
xchg
cmpsl
mov
mov
fsubs
jl
push
inc
jb
jb
aas
mov
sbb
sub
xchg
push
lcall
sbb
fcmovb
ljmp
mov
je
xchg
adc
jne
xlat
icebp
jo
fimull
mov
add
loop
and
and
into
add
jno
mov
and
stos
mov
mov
xor
xchg
or
dec
movsb
cmc
ficomps
and
mov
xchg
push
cmp
and
push
daa
test
mov
push
outsb
das
ret
sbb
push
xor
cmpsl
jp
in
push
lea
xor
xor
rol
xchg
std
and
jg
sbb
push
fldt
pusha
aas
cmpsl
shlb
outsl
iret
cld
cmpsb
mov
repz
cmp
inc
xor
jg
pop
add
and
mov
getsec
loop
mov
or
test
test
sahf
cmc
or
inc
ret
scas
cmpsl
js
and
jnp
push
sti
cmp
or
cwtl
sbb
sahf
divl
lret
cld
adc
sub
or
loop
adc
popa
cwtl
mov
sbb
adc
out
sub
mov
rcrl
xor
pushf
gs
jp
ret
icebp
mov
cli
lods
jmp
cmovge
push
xor
je
scas
mov
xchg
adc
sahf
xlat
mov
pop
sbbb
in
or
and
mov
in
movb
loop
pop
push
mov
int
sbb
mov
ret
loopne
pusha
mov
or
popa
decb
fnstcw
lret
insl
xor
mov
call
mov
pop
xchg
jae
ficoms
mov
andb
push
push
in
push
cmp
or
movsl
inc
pop
stos
jp
cmpl
inc
cmc
movntq
push
ljmp
xchg
nop
bnd
mov
sarl
repnz
cmpsw
push
sub
pop
scas
inc
lcall
xchg
inc
fcomps
lret
ss
movsl
push
lock
xchg
mov
dec
jbe
in
xor
adc
rolb
imul
cld
mov
fucomi
stos
or
mov
lret
mov
str
push
xor
mov
push
xchg
cli
popa
jne
xchg
sbb
lea
sbb
imul
jbe
pop
jle
xor
scas
add
jp
adcl
lds
mov
push
mov
mov
jno
xlat
ret
mov
sub
adc
push
xchg
push
cwtl
cmp
mov
clc
push
mov
inc
scas
outsb
loopne
mov
jmp
lods
sti
jg
bound
out
mov
cmp
pop
loope
popa
out
scas
ficoms
jmp
insb
pop
out
lcall
sub
sbb
mov
push
loop
mov
aas
xchg
sub
push
jb
data16
push
out
rorb
or
sbbb
rorb
aas
inc
lret
rclb
es
pop
in
decb
jne
jbe
mov
cli
push
dec
aas
inc
fisubs
mov
inc
cmp
inc
xor
inc
mov
cmc
imul
aam
dec
cmp
jne
orl
fsubs
jecxz
mov
cmc
movsl
jbe
jle
call
fisubrl
ret
push
rclb
inc
xor
out
pop
insb
pop
gs
insb
pop
icebp
pop
inc
pop
xor
loopne
jg
xor
subl
cmp
inc
ret
arpl
fnstcw
inc
imul
lret
pop
loopne
adc
or
aam
xchg
and
lret
inc
iret
and
adc
jg
dec
xchg
iret
stos
subb
jo
fcompl
adc
cmpsb
inc
push
adc
aam
mov
adc
cmp
out
cltd
cmp
ljmp
lods
xchg
push
adc
in
xchg
aam
je
setp
js
xor
iret
mov
push
pop
out
and
xor
lret
clc
xchg
sub
push
dec
loopne
mov
imul
xor
mov
in
push
loop
gs
pushf
add
movsl
cmc
lcall
lock
pop
aad
std
mov
mov
fcompl
je
push
leave
mov
or
jmp
pushf
call
orb
xchg
pop
loop
add
jmp
das
pop
in
pusha
in
sbbb
clc
sbb
sarb
test
add
cmc
cmp
pop
push
push
pop
sub
cmp
ds
test
mov
fcmovnu
push
insb
ret
cmovb
xlat
xchg
cld
out
loop
and
in
dec
out
out
mov
cmc
push
xorb
lret
push
pop
ret
inc
cmp
fisttps
push
push
lds
lock
add
push
cmp
mov
sub
out
jle
cmp
mov
loope
cmpsb
loope
and
cmpsb
ljmp
mov
inc
sbb
lcall
aam
les
popa
imul
sub
sbb
mov
mov
es
mov
fldcw
cmp
pusha
pop
jmp
paddusb
pop
pop
xchg
push
cmp
mov
mov
inc
inc
mov
cmp
sub
cmp
xor
sbb
dec
in
xor
mov
mov
cs
push
stos
xor
lea
or
inc
stos
jne
jns
adc
fisttpll
loope
inc
push
call
inc
mov
loopne
jge
jno
aas
lds
test
push
mov
push
mov
repnz
cmp
iret
js
loope
push
push
fadds
pop
js
mov
xchg
insl
xor
dec
fildll
in
pusha
loope
loop
js
xchg
xor
fimuls
sarb
lds
mov
and
test
and
cmpsl
popa
lret
adc
test
mov
hlt
mov
fcmovne
repz
inc
jnp
xor
in
lcall
movsb
jb
jmp
mov
ficoml
adc
cmp
subl
inc
pop
mov
cmpsb
xor
adc
iret
icebp
push
test
jle
int3
jg
out
movsl
dec
and
sar
cmp
mov
lret
lds
add
inc
test
insb
adc
pop
inc
push
scas
aad
xor
mov
sub
int3
lds
ffreep
leave
xor
ret
and
cmp
or
sbb
fildl
xchg
mov
inc
sbb
mov
push
loopne
inc
ret
in
mov
push
inc
imul
out
cli
daa
cmp
fnstsw
adc
test
or
push
stc
dec
pmaxsw
jmp
add
int3
cmp
sarb
cmpsl
loope
dec
loopne
push
xor
mov
pop
cs
mov
push
std
xchg
adc
out
sahf
inc
adcb
test
sti
mov
cld
aam
outsb
xchg
sub
es
cmp
xor
mov
mov
pop
sub
pop
incl
push
fidivs
push
sbb
in
push
inc
mov
jb
add
inc
pop
sub
movsl
inc
inc
push
outsb
fcom
addb
mov
dec
xchg
aam
clc
lock
push
lock
hlt
push
lods
scas
xlat
mov
mov
or
xor
arpl
or
cli
addr16
lret
adc
jb
sarb
fldt
mov
cmp
aas
loopne
inc
scas
push
dec
ds
and
loope
add
cmp
pop
mov
xor
cmp
pop
jl
mov
mov
jg
cmp
orb
int3
pmulhuw
sbb
xchg
or
mov
iret
bound
push
aas
xor
xchg
lret
xchg
adc
mov
cmpsb
jmp
mov
push
movsl
inc
adc
sub
ds
fs
sti
sbb
out
repz
mov
sbb
add
sarb
mov
cmc
xchg
lret
xor
scas
push
cmpsb
lret
jl
jb
rolb
sbb
int
gs
xor
push
cmp
jecxz
inc
sbb
aaa
incl
push
sbb
mov
iret
stc
cltd
inc
sbb
mov
pop
jecxz
les
and
pushf
mov
push
in
fisttpl
inc
mov
pusha
enter
inc
sbb
jb
or
js
cmp
addr16
in
xchg
pop
or
jp
cmp
call
fidivrl
nop
popa
aas
arpl
call
out
cltd
jne
outsb
sub
aas
mov
in
mov
mov
dec
enter
mov
mov
nop
addr16
in
pop
outsl
test
mov
and
mov
or
pop
fdivs
push
addr16
and
cmp
xchg
push
jle
add
jmp
pop
dec
jle
jne
mov
pusha
scas
xchg
fistl
mov
ja
in
xor
popf
dec
xor
cmp
dec
cmp
mov
dec
jmp
xor
outsb
sbb
ss
sbb
sbb
xchg
cmp
sub
jl
dec
dec
andl
stos
les
lods
out
lahf
jle
pop
push
cmp
push
xor
mov
jbe
clc
xor
pop
xchg
fldenv
xchg
movsb
das
jnp
pop
cmpsb
lods
and
mov
fsubr
sbb
or
in
movsl
mov
and
clc
pop
and
lret
and
push
rcr
fwait
sti
fstpt
mov
pop
mov
in
xchg
fsubrl
cwtl
push
arpl
xor
push
jl
jecxz
arpl
push
adc
sub
mov
mov
stc
jnp
idivb
dec
push
add
mov
cmp
jg
xchg
ret
sbb
imul
inc
je
fistps
adc
xor
jne
add
and
gs
dec
rcr
cmp
loopne
aad
jo
cmp
push
divl
sti
inc
pop
push
xor
cmp
add
out
ljmp
inc
clc
push
sub
pop
push
mov
pop
rorl
test
mov
pop
mov
ficompl
dec
mov
push
push
mov
out
fcoml
cltd
pop
mov
xor
out
pop
popl
pop
mov
xor
mov
pop
push
nop
es
ret
popf
jo
inc
dec
int
fcomps
mov
ja
ret
add
and
jle
icebp
sbb
ret
adcl
bound
sbb
sbb
fwait
ret
jl
aas
xchg
je
push
shlb
int
push
cmp
xchg
mov
xor
mov
push
push
xchg
cmp
jp
mov
mov
xor
mov
out
aam
push
sub
xchg
push
push
mov
into
inc
adc
xchg
imull
pop
jo
jnp
xor
outsl
xchg
sub
fsubrp
fidivrl
mov
sbb
dec
les
int
inc
incl
sti
mov
mov
sub
cltd
jmp
pop
fucomi
int3
in
fldl
in
xchg
lcall
out
mov
pop
insl
cmpsl
adc
rol
mov
push
jmp
dec
pusha
or
ffreep
shrb
push
data16
rcrb
jge
ljmp
imul
icebp
pop
fs
loopne
lcall
sbbl
mov
fcomip
jne
xchg
inc
in
cmpsb
in
in
test
xchg
xchg
inc
ret
sub
sarl
rorb
push
adc
test
xor
jns
mov
mov
mov
ljmp
lea
dec
or
lods
lret
jmp
loope
pop
push
loopnew
fs
inc
cltd
push
imul
sti
pop
nop
and
test
mov
or
pop
out
fldt
sub
mov
daa
add
xchg
mov
imul
adc
jbe
mov
push
filds
jecxz
mov
pop
adc
je
imulb
jmp
xchg
and
sbb
cmp
or
stos
stos
fsubp
mov
aaa
addb
js
push
lret
jecxz
sub
int3
xor
xchg
lahf
or
xchg
aam
adc
mov
xor
cmp
jbe
addr16
je
xchg
jo
inc
stos
test
mov
push
inc
fs
lret
cmp
jg
fldcw
out
push
xchg
lahf
arpl
js
sti
ds
mov
add
lret
inc
mov
mov
cwtl
xchg
jnp
ss
ss
or
adcb
push
fnsave
jnp
mov
ss
sub
aaa
pop
xor
push
push
fprem1
sub
sbb
lods
mov
ret
xlat
push
push
xlat
xchg
push
inc
in
sbb
nop
or
dec
cmp
scas
mov
call
add
xor
and
fldl
sbb
adc
and
and
filds
xor
sub
stc
fcompl
cs
xor
xchg
icebp
insl
jo
adc
pop
imul
jbe
scas
and
loop
xlat
push
add
cmc
dec
nop
dec
xor
mov
fcomp
insl
ss
xor
enter
mov
ss
xchg
fstl
pop
inc
jo
fwait
push
jae
sbb
lock
jb
pop
inc
or
sar
xor
pop
add
sbb
ret
out
cmpsl
push
jb
je
mov
pop
addr16
jo
scas
in
pop
push
ror
sti
ljmp
pop
mov
mov
pop
ret
add
cmp
xor
stos
inc
fucomi
mov
lret
jg
enter
inc
xchg
loopne
cs
pop
out
repnz
cmp
push
sub
fnstenv
xchg
movsl
in
icebp
gs
add
add
pop
dec
out
daa
pop
mov
sub
xchg
push
dec
pop
ret
ret
adc
pushf
inc
xor
and
arpl
ljmp
in
out
es
jb
jo
fbstp
leave
push
jg
std
les
lret
addr16
in
dec
movsb
mov
repz
pop
push
push
inc
cld
dec
push
mov
in
mov
scas
mov
das
push
ret
cli
dec
add
ja
push
aaa
mov
fisubl
xlat
outsb
xchg
mov
and
adc
loope
jge
mov
mov
jecxz
sbb
fnstcw
jp
cmp
adc
push
push
or
arpl
cwtl
jp
mov
xchg
aam
stc
rcr
inc
cld
lea
add
hlt
aaa
pusha
inc
pop
jmp
sbb
out
subl
pop
sbb
lahf
in
fstl
ja
inc
shr
push
loopne
test
insl
or
lea
rcll
mov
ljmp
enter
divb
cld
in
out
mov
pop
push
sbb
pop
inc
cmpsb
mov
mov
ja
mov
lcall
gs
sub
xor
loopne
push
xchg
arpl
xchg
xchg
repz
rorb
sub
add
movsb
ret
leave
mov
enter
dec
mov
mov
pop
sbb
inc
jb
dec
negl
pop
push
testl
xor
jg
mov
push
mov
jns
jg
xor
mov
cmp
add
mov
lret
pop
clc
cli
dec
push
add
mov
loop
les
push
lods
sub
or
jae
sub
jp
cmpsl
fwait
dec
mov
or
xchg
pop
jmp
imul
or
data16
sub
pop
xor
loop
fsubr
rorb
sbb
lods
cmp
dec
into
fistpll
aas
jno
into
inc
mov
arpl
jae
xor
mov
loopne
cwtl
push
aad
xlat
cmp
and
push
sub
insl
inc
ja
xchg
mov
pushf
sub
imul
and
rcrb
leave
lods
or
push
pop
int
jb
scas
dec
es
sbb
and
dec
sub
pop
jg
adc
jg
jge
adc
rol
xchg
pop
xchg
jnp
push
inc
clc
testl
jnp
dec
cmp
sbb
rol
lret
or
in
dec
fadd
dec
inc
mov
es
aas
iret
cmc
cmp
addb
repz
add
cs
xchg
testl
dec
push
mov
push
mov
andl
loope
mov
jg
sahf
in
or
insl
aas
pusha
jge
call
inc
rorl
mov
inc
mov
out
xor
mov
or
das
out
ret
mov
xchg
sbb
les
ret
jp
jp
fdivs
cmp
jecxz
inc
lods
scas
sub
xchg
mov
icebp
mov
fldcw
ror
mov
out
push
ss
pop
mov
add
xchg
xor
mov
jnp
cmc
icebp
xchg
sub
mov
xchg
or
push
fisttpl
mov
mov
dec
rclb
mov
ffree
pop
cli
daa
mov
cmp
and
adcl
inc
lds
add
push
mov
nop
or
add
xor
add
cmp
and
jns
mov
mov
rorl
bound
test
scas
ds
fsubrs
mov
and
icebp
mov
cs
lds
popa
sarb
movl
push
jg
xchg
orl
int
pop
jo
jl
pop
sbb
std
gs
pop
add
insb
xchg
idivb
fmull
mov
lods
mov
push
addb
jl
mov
xchg
call
inc
inc
aaa
fnstsw
xor
push
mov
jo
aad
fldcw
lods
xor
call
ljmp
fisttpl
push
loope
out
icebp
out
adc
sub
aas
cmp
cmp
rorl
addb
xor
ret
sub
mov
cmp
les
and
inc
mov
jp
insl
ja
int
stos
jno
ds
ljmp
mov
negb
pop
or
mov
sbb
or
outsl
mov
xchg
xchg
dec
add
pop
cmp
push
pop
push
jmp
iret
jmp
xchg
xchg
scas
lea
inc
jo
mov
sub
imul
sti
repz
das
out
xor
divb
adc
cmpsb
and
dec
inc
mov
call
imul
push
xor
je
mov
mov
xchg
jb
out
movsl
jg
adc
ja
sub
cmp
icebp
aam
sub
add
dec
sbb
jbe
inc
mov
cmp
xor
inc
mov
cld
paddq
movsl
in
mov
outsl
lret
jp
sbb
jg
mov
mov
cld
insl
push
jmp
leave
xor
xchg
movsb
out
push
and
sar
cmpb
adc
inc
fistpl
int
fs
pop
cld
stos
push
sub
pop
fcom
cmp
dec
mov
lcall
jmp
mov
push
sbb
cmp
aas
mov
lds
xchg
lock
mov
mov
in
mov
jle
mov
repnz
outsl
mov
add
add
pop
fisttpl
jge
jg
out
mov
jne
popf
stos
aas
ljmp
pminsw
mov
into
jns
push
repnz
dec
icebp
jge
dec
aam
mov
mov
cmp
arpl
hlt
scas
inc
das
stos
das
or
inc
scas
mov
ss
out
ret
addr16
dec
push
xchg
in
fldt
sub
cmp
jmp
imul
aam
dec
in
jbe
push
cmp
cmp
add
cmc
cmp
aaa
cs
push
cmp
pop
xchg
icebp
int3
jo
cli
leave
ljmp
xchg
loopne
js
push
cmc
outsb
xchg
fisttpll
scas
outsl
scas
cmc
test
xchg
or
mov
push
fcomip
data16
popa
jl
inc
xor
mov
mov
add
mov
and
subb
pop
fs
enter
mov
and
in
or
stos
add
in
pop
shll
mov
or
and
adc
jmp
inc
es
sbb
and
dec
sub
add
mov
xchg
cmp
jle
lods
aad
lcall
cld
je
cmp
sahf
jmp
nop
xchg
imul
ret
les
mov
in
push
jae
jo
adc
fnsetpm(287
ret
and
mov
stos
cmpsb
adc
das
cmc
cmp
mov
mov
rcrb
push
sbb
or
pop
xchg
dec
dec
ljmp
mov
mov
push
xchg
push
mov
cmp
mov
cltd
sbb
xor
and
add
movsb
sub
pop
rolb
xchg
enter
mov
xor
jb
stc
rolb
or
cmc
call
xchg
inc
ja
adc
mov
jg
inc
aam
push
andl
faddl
daa
jle
or
lcall
xchg
adcb
addr16
mov
rclb
decl
mov
mov
adc
dec
out
negb
xchg
shrb
jle
ss
jg
dec
xchg
inc
in
and
out
inc
insl
push
adc
adc
imul
mov
mov
das
xchg
sub
pushf
mov
and
push
lret
pop
or
test
dec
mov
dec
inc
adc
daa
jp
or
clc
je
jl
or
ret
xor
cmp
mov
mov
jg
inc
sti
dec
imul
stos
jae
and
inc
loope
push
insl
xchg
dec
arpl
arpl
outsb
inc
pushf
pop
push
leave
dec
add
mov
mov
or
dec
mov
ficoms
daa
mov
mov
xchg
js
insl
xor
jle
addr16
cmp
das
dec
sub
rorb
clc
cmp
hlt
cmp
mov
jb
shlb
sbb
inc
daa
sbb
inc
jg
xor
cltd
mov
pop
and
add
sbb
sbb
or
and
popf
scas
test
cmp
xor
xchg
adc
repnz
movsl
adc
mov
cmp
and
fucomi
negl
rcl
mov
test
daa
mov
push
sub
dec
dec
pop
jle
and
push
pop
fdivrl
jge
cmp
lods
cmpsb
outsl
in
std
nop
sub
add
cmp
arpl
xor
out
rorl
sbb
mov
mov
inc
hlt
push
adc
dec
push
push
add
jle
mov
add
cmp
mov
leave
fucom
adc
lock
out
jo
jle
inc
adc
push
mov
push
pusha
sub
out
subb
inc
xchg
aad
mov
add
rcpps
ret
lods
lret
stc
xor
dec
push
test
shll
and
mov
jp
negl
popf
aaa
mov
rcl
xchg
mov
outsb
push
outsl
inc
cmp
xchg
in
push
stc
imul
inc
or
inc
mov
sub
sub
dec
mov
pop
or
leave
sbbl
fdivrl
mov
jl
push
and
mov
test
mov
in
sub
cmc
lahf
sbb
inc
and
mov
out
dec
loop
pop
stc
fsubrs
fdiv
sbb
testl
mov
dec
inc
inc
jne
cmp
call
push
dec
and
xchg
cmc
pop
lcall
int3
pop
mov
out
mul
and
inc
cmp
lret
lds
xor
and
mov
adc
insl
les
imul
push
and
pushl
outsl
lea
or
insb
pop
push
mov
cmpsl
das
add
repz
aas
fists
jbe
orb
fs
mov
cs
push
jg
test
dec
pushf
jno
inc
jb
gs
push
shrb
or
cmp
jno
xchg
push
lret
test
daa
or
lods
dec
out
push
movsb
xor
xor
imul
inc
iret
sub
mov
mov
fstps
cli
rclb
imul
add
xor
cmpsb
inc
mov
lret
push
lds
mov
sbb
jmp
mov
xchg
popa
ljmp
out
add
je
rol
pusha
outsl
vaddps
bound
jns
and
sbb
dec
int3
push
mov
cmp
push
jl
pop
in
mov
adc
and
adc
sbbb
mov
add
mov
out
push
nop
xchg
dec
xor
pushf
jno
xlat
mov
lcall
int3
mov
shll
jo
mov
inc
cmp
sbb
dec
cld
and
mov
lea
jg
test
sub
pop
loopne
outsb
cld
add
gs
jb
addr16
repnz
xchg
push
lock
jecxz
jp
xchg
or
cmpsl
cs
jg
cltd
push
pop
jmp
cwtl
sub
test
pop
inc
inc
push
sub
sub
add
push
imul
add
mov
pop
mov
dec
push
outsl
add
push
mov
shl
jne
loopne
gs
fistpl
cmp
sbb
mov
dec
push
out
dec
andb
loop
arpl
mov
dec
mov
xchg
jg
adc
fwait
inc
in
pop
add
push
sbbb
mov
push
inc
fsubl
cmp
sbb
sub
pop
pop
hlt
pop
mov
sahf
and
pushf
push
call
sbb
loope
leave
sbb
adc
ja
dec
jp
xchg
int3
mov
pusha
cwtl
mov
data16
sub
out
mov
dec
xor
lret
or
adc
ja
and
add
out
popa
mov
shlb
mov
xchg
pop
pop
xor
outsl
adc
and
pop
cmp
nop
rcr
fucomp
out
notb
rol
fldcw
mov
mov
sbb
mov
das
and
shll
stos
out
mov
iret
out
imul
xor
sbbb
hlt
cli
inc
sahf
lret
in
rcr
out
dec
jb
sbb
jne
cld
dec
dec
stc
mov
pushf
popa
mov
xchg
xor
popf
mov
cmp
jb
pop
mov
ds
ds
cmpsl
cmp
push
inc
addb
jg
retw
pop
aas
pop
mov
loopne
mov
es
mov
and
repnz
loope
sub
es
mov
cmp
lds
loop
mov
pop
sub
xor
pop
sub
mov
test
outsb
lcall
adc
mov
in
mov
pop
out
pop
adc
popf
adc
iret
mov
rorb
and
les
pusha
movsb
mov
stos
mov
je
mov
mov
cmpsl
in
es
shlb
sub
jecxz
push
xor
dec
ficoms
dec
dec
int3
jge
xor
loopne
out
fs
pop
hlt
fimuls
push
fscale
mov
dec
in
sbb
sarb
popf
xlat
jne
nop
mov
popa
in
roll
loop
popf
pop
or
imul
cli
daa
mov
jbe
mov
pop
pop
arpl
andb
in
fdiv
imul
adc
into
outsb
imulb
repz
fucomip
imul
out
xchg
lret
add
cmp
call
dec
xchg
jo
mov
addr16
fstl
loop,pn
sarl
inc
jo
les
in
xor
jbe
jecxz
je
iret
mov
xchg
loope
push
addr16
aaa
jecxz
sbb
in
cmpsl
loope
dec
push
inc
std
or
sarl
sbb
xor
inc
push
add
stc
hlt
cwtl
or
inc
lea
repnz
xchg
mov
hlt
int3
out
pop
cmp
ljmp
push
lds
mov
jbe
jge
into
inc
jb
imul
and
imul
xchg
mov
mov
xor
sahf
testb
shrb
jg
out
stos
pop
adc
out
inc
and
ljmp
xor
xchg
sub
sti
sbb
inc
xchg
dec
rcrl
bound
fwait
and
fcoms
adc
push
daa
sbb
sub
call
pop
cli
pop
and
push
cmpsb
test
outsl
sub
dec
xor
jnp
push
mov
mov
clc
mov
cmp
leave
sahf
push
cmpb
xlat
lret
or
aaa
jge
and
movsb
jle
leave
pop
popf
out
pop
outsb
pop
cld
pop
in
inc
fst
loop
lcall
and
outsb
incb
inc
cmp
icebp
mov
dec
int
inc
sub
nop
add
fldenv
cmp
xlat
out
pop
test
stos
popa
push
jns
test
inc
test
and
push
flds
jnp
jg
add
out
out
cmp
sarb
imul
sub
stos
jbe
das
cmpsb
or
test
rcll
push
fildll
stc
pop
sub
add
xchg
addr16
testl
mov
lahf
pop
pop
push
xchg
pop
adcb
lods
fs
cmp
lret
or
les
das
leave
gs
jnp
sub
cmp
sbb
cmc
cmpsl
loop
inc
cmc
inc
lods
mov
inc
inc
add
xor
jnp
inc
jp
mov
and
add
or
out
sub
lret
sar
adc
enter
sahf
lock
pushf
or
xor
mov
repz
xlat
insb
mov
mov
in
and
and
data16
fidivl
ljmp
add
xchg
imul
or
out
jne
lcall
sarb
not
and
and
stc
in
add
lea
clc
ljmp
imul
in
loope
pop
sbb
je
out
mov
je
or
repz
xchg
int
xorb
daa
daa
xchg
mov
add
sub
mov
inc
jb
and
xchg
sub
jmp
fsubr
repnz
adcl
fildl
adc
pop
cli
jmp
or
xor
les
scas
sbb
iret
sub
jg
inc
lretw
sbb
add
imul
mov
mov
rclb
data16
pop
loopne
ds
adc
or
sub
push
inc
or
cmpsb
cmpsb
xor
sbb
test
andb
jecxz
jo
push
ss
fisttpll
addr16
push
xchg
rcr
aam
out
addr16
add
xor
imul
in
aas
push
sbb
mov
sbbb
lock
sub
loop
fmull
jl
xor
push
xorb
shll
push
mulb
adc
loope
inc
sbb
arpl
xor
sarb
push
insb
stc
negb
xchg
and
mov
and
push
aas
shl
das
loop
testl
pop
and
pop
pop
mov
stos
inc
insb
inc
std
and
push
ret
and
icebp
imul
rcrb
mov
xlat
sbb
add
push
mov
xor
insl
cmpsl
and
addr16
stos
in
cld
xchg
mov
cmp
and
sbb
ret
or
in
sti
xchg
push
jbe
pop
pop
insb
loope
sbb
dec
movsl
clc
push
mov
add
in
jp
dec
pop
adc
notb
push
cld
push
out
sbb
je
push
testb
ljmp
push
decl
xlat
test
mov
dec
pop
andl
xor
enter
lods
push
adc
adc
mov
fcmovb
repnz
mov
push
mov
add
sbb
fnstsw
test
bound
lret
incb
fidivrs
jns
adc
mov
jbe
shl
dec
dec
sarl
nop
insb
push
xchg
push
das
mov
xor
dec
mov
nop
lret
xchg
sahf
add
jp
rolb
loope
and
dec
pusha
dec
cwtl
xor
jno
xor
decb
mov
adc
negb
adc
mov
out
in
stc
inc
stc
movsb
and
push
fcomps
inc
pop
cmpsb
rorl
cmpsl
jo
xchg
iret
shlb
cwtl
cmp
rcll
xor
mov
mov
jo
mov
mov
cmpb
fcmovnu
mov
push
or
jnp
in
insl
dec
jb
pop
outsb
insb
pushf
bound
dec
repz
imul
pop
pop
in
mov
into
ret
stc
add
out
gs
imul
dec
int3
pop
imul
xor
sub
lcall
movsb
cld
sub
in
mov
gs
jp
jle
or
xchg
andb
shlb
imul
das
shl
xor
or
sbb
dec
jp
pop
loopne
repz
add
mov
iret
aaa
ja
aas
lret
sub
jecxz
dec
mov
inc
rorb
insl
xor
or
nop
push
scas
pop
stos
clc
loope
out
cmpsl
lret
inc
stc
push
inc
les
fidivl
xchg
mov
int
cwtl
cmp
and
xchg
std
lods
enter
mov
imulb
je
and
mov
inc
mov
movsl
xor
in
shlb
int3
jae
cmp
dec
xchg
fadds
loopne
cvtps2pi
sbb
push
xor
adc
inc
push
int3
frstor
xchg
dec
cld
push
icebp
adc
cmp
or
out
dec
imul
jmp
shrl
sbb
pop
int3
push
scas
outsb
lock
test
lret
or
xchg
lahf
aas
pop
sbb
mov
gs
xor
sub
push
jo
lods
gs
mov
push
cmp
stc
ds
rcrb
lock
mov
out
sbb
out
and
cmc
fmulp
lret
or
in
test
or
outsb
in
cmpsl
push
jle
in
push
ret
pop
int3
xor
faddl
adc
aam
lods
das
cmp
push
xchg
or
mov
fnop
test
mov
repnz
inc
and
mov
nop
xor
cmp
lods
lahf
mov
jp
xchg
sbb
inc
adc
scas
fidivs
rcrl
leave
rorl
fldcw
adc
push
sar
push
inc
aam
xchg
dec
pop
cmpsb
arpl
outsl
pop
dec
call
pusha
mov
sub
jns
push
leave
lods
push
in
lret
and
bound
and
mov
mov
or
pop
aaa
xchg
test
and
or
movsl
sub
sub
lods
pop
xor
jl
out
lcall
xor
xchg
cmpsl
lcall
ficoml
xor
dec
or
pop
pop
test
popa
fmuls
adc
or
xchg
fcom
pop
stos
sbb
pop
insb
push
xchg
mov
dec
adc
iret
pusha
inc
fistps
jae
out
sub
sbb
in
nop
fdivs
testb
cmp
sub
imul
xchg
movsb
xor
out
xor
loope
insl
mov
pushf
stos
sbb
repz
fwait
rorb
daa
clc
das
push
push
dec
shll
adc
push
ja
andb
paddsb
insb
sub
push
jo
inc
or
loope
fcom
push
stos
jp
mov
mov
adc
insl
inc
out
repz
pop
pop
loope
int3
imul
out
xor
mov
out
cmpsb
clc
sub
fmuls
push
add
gs
aaa
inc
mov
jmp
stos
cmp
movsb
mov
xor
call
cmp
sub
xchg
xor
sbb
stos
cmp
push
jae
movsl
cmp
sbb
dec
jmp
into
mov
jne
xchg
andl
push
aad
mov
jnp
inc
and
fsubrl
pop
and
stos
lcall
xor
out
filds
pop
cmp
or
xor
push
inc
mov
cli
aas
ret
call
jmp
inc
out
scas
stc
out
mov
sti
js
mov
rsm
mov
inc
or
rcrl
cmp
subb
or
setne
mov
shlb
dec
call
xor
or
jbe
test
loopne
mov
fcoml
in
mov
roll
and
push
mov
jo
insb
mov
add
mov
jp
sbb
imul
sti
xchg
pusha
jae
push
jo
fbstp
adc
data16
ficoms
sbb
push
cmc
ja
cmp
jg
aas
hlt
int3
in
mov
dec
insl
push
imul
hlt
pusha
cmp
pop
clc
jb
clc
repnz
lcall
out
inc
mov
dec
rcrl
int3
mov
jne
dec
fs
in
lods
adc
xor
leave
push
daa
and
pop
pop
stc
es
dec
aad
dec
leave
shlb
xor
push
mov
cmp
dec
pop
lahf
aaa
sub
jno
jg
ss
stos
inc
mov
sbb
subl
add
dec
jno
inc
dec
add
pop
decb
dec
lcall
inc
xchg
mov
push
out
outsb
sbb
ja
dec
xor
pop
or
int3
dec
mov
jl
dec
roll
pand
mov
stos
loopne
pop
inc
or
xchg
xor
mov
aad
mov
cmp
fldenv
imul
cmpsb
sar
cmp
stos
test
movsb
dec
repz
sbb
roll
enter
sarl
sub
sbb
push
push
and
cmp
leave
xchg
xorl
add
jbe
imul
shll
shlb
push
or
inc
dec
inc
in
popw
jo
shll
xor
pop
fsubs
loop
lret
xchg
add
aas
lea
ficoml
jb
mov
lods
xor
push
sbb
inc
mov
mov
pop
scas
cmp
dec
mov
mov
aaa
insb
mov
mov
inc
and
pop
mov
fists
loope
add
cmp
jns
adc
push
add
mov
clc
sbb
test
sarl
les
sub
cmp
out
mov
sbb
les
inc
jge
mov
mov
clc
std
xor
popf
insb
fidivrs
cmp
mov
adc
clc
stos
push
test
popf
repz
lret
xlat
push
test
fistps
xchg
lea
sbb
or
test
ficoms
jae
js
xor
xor
xor
enter
and
push
mov
or
rolb
jns
cmp
push
dec
mov
sub
rol
mov
jno
movsl
pop
repz
icebp
adc
out
fwait
push
enter
push
jg
js
dec
push
bound
cmpsb
sub
repz
mov
lret
neg
adc
mov
in
sahf
dec
stos
pop
imul
push
jae
test
addl
inc
xor
xchg
cmp
jb
sub
sar
push
hlt
mov
xchg
in
jecxz
mov
inc
and
xorl
dec
in
ds
jge
fwait
inc
xlat
das
aas
mov
add
mov
sub
in
jbe
mov
mov
pop
lods
fcom
popa
pop
pop
clc
lods
mov
lods
inc
mov
sbb
aas
leave
and
pop
push
fsubs
mov
sub
aad
inc
and
ficomps
mov
sti
ror
std
mov
jmp
pop
shlb
mov
mov
sub
aas
pop
hlt
shlb
pop
adc
insl
add
jp
xchg
sbb
addr16
push
jbe
les
sbb
push
jno
movsb
je
fs
mov
fidivrl
push
mov
mov
shrb
jbe
jb
jg
inc
int3
mov
push
sbb
aad
adc
xchg
stos
add
dec
cmp
xor
cmp
hlt
mov
xchg
lret
xor
ret
mov
mov
mov
outsl
mov
shll
stc
mov
aam
dec
mov
pop
arpl
aad
fcoms
stos
mov
add
sbb
xchg
jb
dec
dec
sub
adc
adc
xor
xchg
test
or
adcb
jbe
or
daa
leave
or
aas
jp
or
cmp
lods
in
jg
andl
fcoms
scas
sbb
sti
sbb
fbstp
xlat
int
xor
adc
jnp
insb
xchg
into
pop
jae
sub
scas
div
pusha
into
bound
pushw
es
cmpsl
xchg
and
jnp
add
movsb
mov
neg
inc
lret
push
mulb
mov
outsl
dec
stc
dec
mov
dec
push
xchg
lea
xchg
xchg
or
mov
rol
lret
lock
fwait
or
ficoml
add
mov
xlat
int3
cmpb
in
xor
fadd
pusha
xor
test
push
xor
test
cmc
xchg
divps
pushf
sarl
dec
mov
cmp
jmp
std
dec
std
test
cmc
test
mov
xor
mov
push
lods
jo
mov
and
mov
in
inc
sub
cmp
mov
scas
cmpsl
jne
xor
adc
pop
or
loop
outsb
es
sbb
xchg
or
pop
lods
xor
jo
cld
aas
mov
emms
ret
xor
scas
or
mov
jmp
repnz
out
imul
xchg
aas
mov
testb
loop
subl
loop
insb
ja
xchg
aaa
dec
lahf
and
ficomps
adc
lock
mov
fdivrs
or
sub
insb
dec
dec
mov
mov
or
pop
bnd
test
arpl
mov
add
jmp
inc
lds
mov
xchg
mov
xchg
cwtl
cmp
xlat
jmp
mov
aas
shrb
ficoml
rorb
fprem
jl
dec
jno
mov
mov
or
aad
inc
mov
dec
in
jne
inc
aam
pop
popa
inc
or
fldt
cmp
imul
jo
jnp
xchg
mov
pop
cmp
xor
mov
movsl
ret
add
xchg
out
mov
leave
mov
sub
fs
mov
jbe
dec
clc
daa
orl
xchg
movsl
fwait
mov
enter
mov
or
gs
push
sbb
push
mov
inc
push
jns
imul
std
xchg
xor
jno
stos
dec
sbb
clc
and
shll
pop
lahf
xor
dec
jnp
cmp
mov
jl
pusha
popf
test
out
rcr
clc
and
cmc
or
mov
cmp
gs
cmp
push
push
mov
daa
lcall
into
insb
xchg
cmp
adc
ja
jne
and
inc
out
add
mov
dec
stos
xchg
pop
pop
fidivrs
add
jns
cmp
mov
out
xchg
inc
adc
mov
ficomps
fdivs
cmp
gs
addl
jp
daa
into
enter
xchg
mov
sbb
xor
sarb
xchg
cmp
addr16
in
cmpl
xor
push
push
les
push
pop
xchg
insb
cmp
ljmp
cmp
jb
adc
or
sbb
lret
outsl
adcl
lret
mov
pop
xor
sub
aad
push
push
in
hlt
add
mov
sbb
pop
lods
fcoms
and
push
inc
cmp
es
cmp
js
insl
xor
insl
dec
pop
pop
dec
add
call
repz
xor
pop
cmp
lret
imul
arpl
ja
push
in
test
scas
lcall
cmpsl
fstl
mov
test
mov
inc
xchg
and
cltd
es
xor
pand
cld
fsubrp
sub
int
adc
xchg
fildll
mov
add
data16
int
jecxz
sbb
mov
inc
sub
ror
add
pop
or
push
aas
xlat
push
stos
ss
stc
sub
sub
punpckhdq
sarb
jno
mov
in
jbe
inc
outsl
mov
push
sbb
mov
add
sub
sbb
cmp
pop
in
ss
js,pn
adc
xchg
or
out
and
fsts
and
ja
mov
xlat
jmp
inc
xchg
test
mov
pop
popa
and
fldt
lock
lods
mov
sub
repz
xchg
mov
inc
pop
clc
cmp
xor
pop
pop
mov
imul
imul
sub
hlt
popa
xchg
xchg
jb
push
sbbb
fdiv
mov
clc
sbb
negb
mov
jns
xchg
or
pop
roll
push
cmc
repnz
pop
loopne
xchg
push
clc
mov
in
movsb
aam
imul
cmp
mov
insl
stos
inc
jne
add
add
shr
incl
pop
jp
xchg
or
pop
or
jns
sbb
dec
sahf
adc
pop
enter
dec
or
inc
iret
add
cmp
xor
mov
xchg
inc
push
and
dec
scas
popa
into
mov
xchg
lahf
imul
in
enter
push
fistps
imul
mov
in
call
pop
mov
fistps
or
repz
in
and
lock
insb
stos
fnstcw
outsl
mov
jp
shlb
add
pop
adc
jno
sub
adc
ljmp
mov
lcall
xor
xchg
mov
inc
pop
out
push
adc
orl
xor
mov
stos
jo
in
push
aaa
arpl
push
in
xor
pop
ds
fsubs
mov
lret
xchg
jo
cs
inc
js
and
cli
jb
push
stos
adc
mov
jo
xlat
cli
idivl
out
cmp
mov
adc
js
orb
mov
imul
push
or
hlt
and
pop
insl
pop
inc
push
cmp
pop
repnz
mov
ja
xchg
ss
push
loop
cmp
jbe
jge
addl
popa
cmpb
pop
stos
cli
push
aaa
push
fsubrp
mov
stos
cmc
push
dec
sti
sarb
stos
pop
test
jno
shlb
xchg
inc
sbb
jge
push
das
aaa
adc
xchg
cmc
inc
pop
vfrczss
lea
lods
lcall
or
sub
lret
xor
stc
dec
mov
or
pop
rcr
rorb
cmc
mulb
stos
imul
outsl
dec
xchg
outsl
mov
sub
jge
mov
sub
jae
shrl
loope
xchg
mov
push
inc
mov
pop
es
push
jg
inc
fcoml
jmp
out
fwait
idivl
dec
test
jge
cmpsl
mov
xchg
in
or
es
inc
test
cmc
mov
das
das
int
addr16
rcrb
cmp
fldt
shlb
shl
inc
mov
cmp
mov
in
or
fwait
xlat
cmpsb
jle
cld
fdiv
cs
int
push
pusha
or
xchg
sahf
jbe
push
xor
cmp
dec
sub
div
addps
fs
and
add
xchg
loope
xchg
mov
lret
lock
dec
xchg
mov
jns
pop
decb
jecxz
lods
ds
cld
outsl
jecxz
sbbb
cli
mov
sub
or
sub
xor
test
arpl
cmp
inc
push
push
popa
ret
or
and
sbbl
push
and
in
repz
jecxz
mov
mov
push
xor
popf
out
imul
imul
xchg
mov
es
adc
cld
xor
clc
dec
lahf
sub
adc
dec
int3
int3
ja
aas
in
pop
cs
int
sub
sub
dec
mov
aas
shll
xchg
dec
cmp
daa
push
jge
and
imul
or
movsl
cmp
cmp
mov
pop
shlb
push
pop
in
xchg
test
dec
repz
push
fisttpll
push
cli
fstpt
xchg
int3
rcll
or
pop
test
ljmp
std
or
cli
push
gs
and
mov
pop
lahf
push
xchg
lret
lock
rcrb
dec
and
in
push
or
lret
jg
int3
clc
add
xlat
push
je
sbb
dec
xchg
fmull
test
cli
icebp
jbe
fdiv
cmp
aaa
int
outsb
cmp
lret
out
dec
jne
rcr
add
xchg
rclb
mov
push
in
jnp
or
jno
aas
out
push
jge
sbb
lret
sahf
scas
in
mov
out
leave
insl
xor
jb
sub
popf
test
xchg
mov
mov
outsb
pop
mov
add
dec
and
hlt
push
roll
loopne
icebp
dec
mov
lret
jl
jb
dec
ja
fists
inc
jns
ret
mov
dec
call
sbb
sbb
repnz
mov
jae
mov
add
and
pop
push
test
ja
pop
shll
outsb
arpl
fdiv
sub
arpl
mov
pop
bnd
or
jo
adcl
jno
movsl
sbb
lcall
ss
cltd
xchg
outsb
jo
enter
sub
shl
xor
mov
xchg
neg
mov
mov
mov
inc
sbb
call
mov
lea
jmp
dec
push
ret
cs
push
bound
imul
dec
icebp
push
dec
fs
xor
iret
fsts
or
fcmovnbe
mov
xor
cs
dec
out
jmp
repz
pop
sbb
mulb
inc
cmc
cmp
je
push
data16
addr16
inc
mov
ret
in
inc
mov
adc
and
or
mov
lea
pop
xchg
inc
cs
sub
out
cmp
fsubrl
xchg
jg
loope
dec
repnz
cmp
loopne
push
pop
idivl
and
loop
xchg
sub
das
sbb
pushf
lret
test
push
mov
xchg
push
pop
dec
movb
push
mov
mov
pusha
cwtl
xor
mov
inc
test
vorps
jg
mov
fsubrs
mov
or
cmpsb
aaa
xor
pop
xor
sub
dec
mov
fidivs
and
sbb
inc
pop
and
push
insb
shll
inc
xor
jmp
mov
or
mov
lods
mov
jp
loopne
mov
xchg
mov
cwtl
cmpsb
inc
or
sbb
jl
cmp
jns
sbb
out
cmc
fistpll
adc
ss
mov
ja
sub
xlat
pop
sahf
xor
jne
jecxz
iret
or
lcall
loope
and
loopne
fnsave
sub
push
roll
pop
popa
mov
push
pop
ret
mov
xchg
pop
push
insl
repz
or
push
add
icebp
jl
in
xchg
adc
fst
insl
rcrb
push
cltd
push
adc
movsb
outsb
inc
inc
or
inc
jp
outsl
add
imul
lcall
stos
testb
inc
mov
and
push
push
mov
shl
dec
cmp
dec
mov
decl
or
mov
and
dec
inc
mov
in
cld
rcrb
roll
pop
push
stos
jmp
or
mov
orb
sub
pushf
xor
xor
and
push
add
cli
sub
push
lret
ss
cmp
and
push
loopne
subb
cmp
push
inc
and
and
inc
outsb
jnp
pop
mov
sbb
pop
adc
mov
pop
in
xchg
mov
push
scas
sbb
insl
push
in
in
push
lcall
insl
pop
leave
add
add
mov
sbb
dec
push
sbb
sti
and
push
push
sbb
aas
cmpsb
xchg
nop
or
mov
aas
loopne
inc
les
push
idivl
xchg
movsb
jle
adc
adc
inc
fiadds
push
cmp
or
iret
mov
push
sbb
clc
xor
mov
fwait
push
cs
out
cmpsl
xchg
pop
aad
jle
lds
in
mov
xor
cmp
mov
int3
into
sbb
cmc
or
adc
adc
cmp
sar
jle
imul
xorl
mov
mov
fpatan
dec
int3
inc
mov
jno
hlt
mov
inc
mov
inc
fmuls
xor
xchg
mov
dec
in
mov
dec
xchg
out
nop
dec
es
shl
mov
ds
inc
cld
xor
lods
xor
xchg
mov
icebp
cmp
mov
iret
dec
outsb
xchg
add
scas
inc
stos
pop
and
lods
cmpsb
lsl
fstps
jnp
je
test
loopne
xor
ss
mov
jbe
xchg
pushf
dec
int3
xchg
ret
ds
imul
sbb
mov
pop
jmp
das
and
jg
not
movsb
scas
mov
lahf
daa
mov
inc
ret
mov
arpl
mov
addr16
hlt
lods
adc
dec
sarb
ret
jno
push
stos
xor
pop
adc
xchg
lds
push
insl
pminsw
add
adc
scas
and
stos
insl
les
inc
sbb
and
or
pusha
xchg
mov
arpl
sub
add
xor
cmp
jo
dec
push
scas
pop
fstpt
and
sub
repnz
mov
adc
sbb
imul
cmp
xor
mov
xchg
cmp
test
pushf
mov
fbld
or
push
ss
adc
in
jbe
subl
scas
xchg
cmp
mov
push
ret
or
ror
insl
call
or
jo
sub
pop
adc
xor
ret
adc
clc
pop
test
pop
icebp
mull
mov
cmp
or
cmp
cmpsb
ret
xor
dec
jnp
loop
inc
stos
lds
je
fstpl
call
cmp
lahf
aad
jne
jae
mov
out
xor
pop
pop
jp
mov
mov
jl
ret
fcoms
ljmp
stc
inc
jae
outsl
sti
movsl
ja
sbb
sbb
xor
jnp
das
loopne
cmpsl
ficomps
je
inc
lock
push
fwait
test
dec
xchg
lock
adc
sbb
outsb
mov
sarl
add
mov
and
shll
lahf
out
cmpsl
mov
or
arpl
sub
cmp
sbb
xorb
push
and
xchg
push
fs
mov
popa
lods
inc
push
outsb
movsl
lret
adc
jnp
add
es
sahf
nop
cltd
jb
test
adc
aad
xlat
das
enter
aam
push
cmp
sub
in
or
xchg
gs
test
and
mov
shrl
enter
in
mov
push
adc
test
pop
iret
dec
cmp
std
call
jle
sub
jo
push
sub
mov
pop
pop
pop
fcoms
lret
stos
mov
repz
je
cmp
and
jns
ljmp
fcomp
subb
enter
stos
out
outsb
ficoml
test
mov
push
call
popf
push
mov
jl
out
and
xchg
jecxz
out
out
lods
rcr
xchg
in
cmpsl
adc
cmp
rcr
jno
gs
jns
mov
xlat
cs
xchg
cmpsb
lcall
adc
xchg
xor
fld
push
inc
aam
dec
mov
sub
nop
inc
add
inc
lods
and
out
fstl
insb
or
rol
jnp
pop
les
imul
repz
mov
test
xor
insl
and
xchg
daa
js
dec
sub
pop
cmp
pop
aad
inc
incb
pop
cmp
dec
clc
dec
mov
and
outsl
mov
imul
faddp
movaps
outsb
adc
fwait
out
jbe
mov
add
adc
in
call
add
adc
gs
jg
jmp
aas
jbe
xor
xor
fisubrs
mov
sbb
dec
ret
nop
iret
rcrl
add
cs
xchg
dec
cmp
imul
xchg
jecxz
or
push
stc
loopne
sbb
filds
fmull
pop
fimuls
and
gs
jnp
inc
psubusw
xchg
push
sti
outsl
jecxz
out
cli
fs
addb
push
js
dec
or
arpl
in
sbb
rcl
mov
mov
addb
dec
fdivr
cmpsb
and
and
jp
jle
lret
in
cmp
adc
outsb
cmp
dec
cmpb
addr16
cmp
adc
mov
add
movsl
add
enter
cwtl
ljmp
pop
into
xchg
sbb
ja
jbe
ljmp
int3
jecxz
call
lea
dec
sarb
sahf
inc
mov
push
push
int3
push
sbb
mov
pushf
enter
es
fstl
mov
imul
loopne
insb
mov
faddl
frstor
push
mov
lds
shrb
out
cwtl
push
sbb
xchg
jbe
sti
xchg
push
dec
adc
push
adcb
ds
adc
or
ds
int3
push
fbstp
add
or
lldt
mov
adc
adc
mov
stc
into
pop
rol
lods
or
xor
jl
or
inc
loopne
xor
dec
inc
mov
stos
outsl
mov
cmp
sub
push
push
cli
add
mov
lods
mov
jecxz
cmp
sahf
xchg
mov
ja
dec
lock
jnp
ss
sbb
pop
scas
mov
int
fcmovnu
cmpsl
mov
aaa
cwtl
and
push
sbb
inc
or
xchg
icebp
loop
push
push
push
out
cwtl
push
mov
clc
mov
sub
or
scas
xchg
xchg
inc
inc
or
pusha
je
test
andb
les
sub
jg
cmc
mov
inc
sub
inc
nop
xchg
cmp
fisubrl
loope
cmp
pop
clc
xchg
push
or
cmc
decl
mov
jl
jecxz
jle
sub
xor
pop
test
jae,pt
dec
pop
push
xchg
sub
insb
sub
lods
jnp
inc
subl
pop
insb
xor
dec
lods
push
iret
jbe
js
dec
loop
shrb
es
cmc
ja
push
hlt
cmp
lea
lcall
jge
add
xor
sub
xor
xor
lahf
xor
rep
push
jp
movsb
aad
adcl
repnz
pop
jne
cmp
sarl
fcom
inc
dec
adc
sbbb
adc
fiaddl
jecxz
pop
xor
imul
repz
call
ds
xchg
push
add
mov
mov
adc
cmp
dec
mov
les
mov
jo
outsb
sbb
cmp
add
adc
jecxz
movsb
popf
sbb
in
shrl
xchg
ret
int
fnstcw
loop
repnz
push
lret
int
mov
xchg
pop
and
test
fsubp
mov
or
sub
jae
and
rorl
fldenv
xor
ljmp
cmpsl
bound
fimuls
movsb
mov
pop
mov
fxch
loop
xor
insl
popf
push
sbb
mov
mov
nop
and
add
push
adc
outsl
mov
scas
adc
sbb
sub
cmpsb
inc
jb
pop
xchg
outsb
adc
push
ret
sbb
cli
popf
inc
mov
and
pusha
hlt
xor
fildl
shlb
loopne
push
into
jne
pusha
fisttpll
dec
mov
dec
push
arpl
cli
subl
or
imul
jecxz
xchg
mov
sub
cltd
push
ss
mov
adc
ds
cmc
iret
lods
inc
rcl
mov
loopne
pop
scas
out
sbb
popa
std
mov
cmpsl
xor
outsb
fsubrl
fstl
test
push
add
fisubrl
or
movsb
in
adc
into
ds
lods
lods
push
sbb
push
aas
mov
pop
dec
daa
out
pop
cmp
mov
dec
dec
clc
xchg
flds
in
iret
in
gs
jnp
inc
xchg
mov
sub
xlat
jge
mov
mov
dec
repnz
lock
add
je
in
or
adc
mov
fldenv
stc
adc
out
pop
pusha
mov
sub
xchg
or
sarb
js
xchg
and
out
sti
sbb
cmpsw
pop
int
sub
push
cltd
das
sub
mov
cmc
jg
sbb
sbb
cltd
pop
into
jbe
mov
and
cmc
mov
jo
icebp
jp
sub
aaa
jecxz
and
ja
xchg
or
pop
incb
rcrb
push
or
jbe
cmp
xor
dec
inc
push
aam
hlt
jle
or
sti
cmp
mov
sbb
lea
inc
or
fiadds
popa
sbb
mov
pop
sub
inc
mov
jecxz
pop
int
cli
mov
cmc
xchg
push
sbb
add
xor
dec
dec
cmc
aam
cmp
mov
push
mov
insl
subb
pushf
fcmovnu
pop
push
mov
js
mov
xchg
cmp
data16
sub
pop
mov
sti
push
mov
or
mov
ljmp
jo
cli
jge
sbb
cmp
fwait
dec
movsl
enter
push
xchg
or
sub
out
adc
stos
mov
push
adc
sub
mov
dec
in
loopne
push
cmp
fistpll
xchg
out
push
icebp
gs
arpl
int
mov
lret
mov
sub
ficomps
fisubrl
cmp
push
dec
inc
std
and
jae
fidivrl
adc
xor
int
mov
jnp
insb
pusha
into
insl
xchg
sub
outsb
unpcklps
icebp
outsl
mov
aas
or
nop
ds
in
add
xor
dec
xchg
sbb
into
push
cwtl
push
adc
push
push
iret
loop
mov
addb
gs
sub
and
or
into
nopl
cmp
cmc
lods
inc
pop
divl
int
fisubl
adc
cwtl
js
and
inc
ret
xchg
push
mov
pusha
jno
pop
std
or
push
inc
sub
imul
push
xchg
push
int3
cwtl
rcrl
jbe
in
test
lret
sahf
in
adc
stc
ret
xor
icebp
fdiv
scas
in
inc
jle
mov
cltd
jae
fmul
dec
xchg
cld
ljmp
loope
adcb
dec
loop
ficompl
cmp
jnp
mov
xchg
ljmp
push
cmpl
fnstsw
insl
jmp
loop
push
pop
neg
xlat
jo
mov
repnz
aam
xchg
xor
cmp
sub
movsb
jb
or
inc
test
popl
push
ss
cld
aaa
hlt
test
jmp
daa
into
call
cmpsl
leave
push
and
sbb
stos
push
sarb
pop
sbb
icebp
out
pushf
xlat
xchg
ret
loopne
dec
or
pop
inc
fnstsw
xor
jnp
xchg
inc
or
xor
data16
mov
inc
aas
xchg
add
les
sub
in
aad
push
pop
dec
push
enter
jbe
mov
pop
stos
iret
fs
pop
push
movsb
inc
mov
xor
sarb
pushf
ficompl
rcrb
lahf
xor
stc
fs
mov
loope
mov
fildl
push
mov
mov
mov
mov
and
mov
add
xchg
inc
dec
leave
fucomp
loop
fmulp
push
inc
jae
xchg
ja
fisubl
ds
xchg
clc
cli
pushf
in
insb
adc
insb
testl
loope
das
push
in
or
in
cmp
in
sbb
sbb
mov
movsl
lods
xor
fsubrl
mov
add
cmpsb
xor
dec
cmpsl
in
mov
lret
add
stc
int3
scas
cmp
je
xor
iret
xchg
arpl
dec
jge
aad
in
or
or
add
and
loop
pop
into
pushf
imul
pop
xor
enter
icebp
mov
pop
insb
push
pop
cmpsb
dec
insb
mov
popf
or
fnstcw
push
arpl
inc
fildl
xchg
in
mov
sti
jge
inc
adc
pop
fcoml
lods
mov
cmc
xor
enter
sub
jae
pop
nop
movsl
fs
sub
icebp
imul
dec
loope
or
out
call
gs
push
insb
fs
cmp
dec
sti
std
pop
aam
xor
or
daa
out
lods
loopne
jns
inc
push
les
xor
push
dec
arpl
iret
mov
add
adcl
jno
nop
out
pxor
inc
xor
push
adc
mov
fldenv
or
add
les
mov
push
push
push
loopne
or
out
pusha
hlt
test
lds
mov
push
outsb
xchg
sbb
lock
pop
mov
inc
cmc
lock
push
packuswb
pop
sub
jnp
outsl
and
mov
in
cmpsb
jg
shr
push
cmp
pop
add
testl
imul
push
add
xorb
test
cmp
movsb
ds
xor
inc
jmp
ja
add
stos
scas
aam
push
ret
fwait
in
sbb
mov
fwait
scas
pop
pushf
xchg
cmpb
xor
cmpsb
dec
inc
cmp
inc
popa
xor
cltd
jns
pusha
repz
clc
add
or
daa
sbb
adc
pushf
xchg
pcmpeqb
imul
and
add
insb
loop
repnz
mov
pop
test
arpl
ss
xor
xlat
shrb
mov
pop
xchg
inc
hlt
stc
pop
es
sbb
out
pop
fidivl
jbe
aas
and
out
int3
mov
xchg
jno
clc
add
aam
mov
pop
lds
dec
pop
test
pop
jae
pop
loopne
movsl
lods
adc
push
stos
mov
xor
fcomps
leave
mov
stc
xor
movsl
dec
test
mov
sbb
or
lret
jae
push
xchg
xchg
fs
cmp
xchg
jmp
push
inc
and
in
mov
cmp
repz
mov
icebp
xor
pop
inc
lea
scas
inc
in
test
cs
xchg
mov
imul
inc
jo
lea
jg
ficompl
pushl
stos
add
sub
push
pop
dec
jnp
inc
mov
push
jge
jg
jbe
sbb
data16
cs
lock
out
loop
xchg
xor
jg
jbe
out
inc
not
push
int
call
dec
ljmp
xor
mov
pop
inc
jle
lret
push
sbb
pop
mov
hlt
inc
cmpsb
gs
mov
dec
fistpl
popf
xchg
ljmp
sti
aad
mov
pop
cmpsb
and
shrb
and
fmul
mov
mov
add
fdivrs
gs
cwtl
out
mov
mov
loope
nop
fimuls
out
mov
pusha
xchg
dec
pop
inc
and
test
jle
dec
push
loopne
inc
and
out
lret
call
pop
xchg
in
mov
leave
ret
int
ret
push
push
leave
cmc
shll
rcll
cmp
dec
adc
or
pusha
int3
mov
fldl
add
rcrb
and
jae
pop
and
jae
test
sub
jle
jle
xor
repz
repz
rcr
js
push
loope
ss
pop
mov
mov
rcrb
jge
outsb
mov
sub
stc
jecxz
mov
ret
test
dec
push
mov
dec
out
add
xchg
push
mov
fdivrs
lods
adc
push
ds
std
cmpsl
lds
inc
sbb
jb
shll
jae
dec
cmp
sub
test
mov
dec
ret
addr16
mov
mov
and
fstpl
pop
push
mov
rclb
dec
scas
popa
es
mov
or
pop
push
adc
dec
jo
adc
push
mov
ret
popf
lret
lods
mov
cmc
sti
mov
lea
mov
loopne
mov
sbb
sbbb
outsb
add
lods
lock
pop
cmp
adc
inc
fmul
mov
inc
test
jnp
lahf
add
fistpll
outsl
nop
jle
test
cmp
xchg
mov
inc
jae
lods
or
or
imul
in
jno
fcoml
adc
and
inc
jg
mov
xor
lods
loopne
lea
cmp
mov
loop
xchg
stc
popf
sub
cli
inc
outsl
cmp
stc
add
push
sti
pop
sbb
push
xor
mov
jecxz
gs
outsb
orb
nop
sub
mov
mov
mov
fcmovu
inc
pushf
loope
mov
mov
push
mov
and
xchg
mov
sub
fsubrs
mov
pop
cmpb
xchg
jb
jae
rclb
mov
push
ret
jg
jp
call
jo
popa
mov
clc
les
outsb
adc
mov
inc
cmpsl
sub
mov
xchg
dec
cmpsb
enter
fldenv
xchg
stos
or
or
push
iret
mov
hlt
xor
lock
push
testl
shlb
mov
fistps
std
in
mov
int
cli
pop
sbb
xlat
mov
xchg
ja
cli
imul
push
mov
fldcw
out
push
mov
mov
ret
inc
andl
out
aad
es
int3
xor
or
push
or
loopne
ret
call
sbb
jno
cmpsl
mov
xchg
push
ss
enter
aad
sub
jnp
jnp
xchg
push
sub
push
lds
xorl
mov
or
jne
adc
fisttpll
or
xor
jbe
jle
test
orl
push
cld
add
into
xor
lret
and
xor
sahf
and
push
mov
in
cmp
jg
xor
lea
in
push
rcl
lods
pop
repnz
jg
mov
nop
stos
lret
jl
in
mov
inc
xor
cmp
push
lods
lret
int
ljmp
xchg
test
into
cmp
add
cmpsb
sbb
pop
sahf
add
sbb
clc
repnz
aad
add
inc
roll
not
jg
xchg
xchg
push
pop
dec
fldcw
arpl
push
cltd
lahf
cmpsb
fsubrs
scas
xchg
in
dec
mov
loop
test
fidivrs
mov
push
dec
cmp
mov
mov
cmpsb
lahf
aam
push
dec
dec
mov
cmp
push
aam
fs
jge
cltd
jp
outsl
int3
jle
popf
mov
test
xlat
sbb
xor
and
andb
loopne
jle
outsl
stc
iret
cmc
dec
push
pop
inc
add
insb
cmp
mov
xor
xchg
ret
lahf
out
cmp
adc
xchg
mov
in
cmp
pop
dec
imul
and
xor
mov
sub
pop
into
or
shll
mov
cmpsl
loope
adc
sub
fbld
inc
push
out
inc
push
dec
sbb
mov
icebp
int
in
or
xor
or
mov
inc
mov
pusha
out
in
aad
arpl
pop
mov
pop
xlat
repnz
dec
scas
lea
or
mov
hlt
or
ret
mov
cmc
xor
into
jb
pop
fistpll
lcall
push
mov
and
fdivl
mov
add
push
lds
jge
and
xor
or
cmp
adc
mov
std
lret
jne
jb
lods
fs
