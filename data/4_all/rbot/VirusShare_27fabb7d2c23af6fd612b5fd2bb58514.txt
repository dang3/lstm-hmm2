push
jl
dec
cwtl
jle
int
jl
dec
cwtl
jle
int
cwtl
xchg
cltd
cmp
push
sarb
pop
aam
mov
xchg
sbb
xchg
jge
fsubr
insl
insb
js
jbe
push
adc
dec
data16
push
int
gs
mov
pop
into
xchg
dec
lret
push
xor
and
sub
fldt
xor
sub
outsb
mov
test
pop
or
xchg
xor
imul
es
fwait
xor
mov
sbb
popf
popa
jle
mov
or
rcl
and
pushf
fwait
fimuls
jge
sti
loop
adc
mov
test
cmp
pop
jno
sub
mov
pushf
les
dec
xchg
xor
adc
mov
and
outsb
sub
scas
push
inc
out
mov
sbb
cmp
cmc
lret
push
cmpsb
and
xor
lahf
ss
adc
jge
mov
repz
adc
cltd
inc
js
stos
icebp
movsb
jp
push
cltd
lret
push
jno
in
mov
mov
fwait
or
ror
sbb
movsl
ret
mov
popf
stos
cmpsl
sub
inc
movsl
mov
pop
dec
push
inc
mov
subb
in
mov
mov
stos
mov
sub
mov
mov
dec
outsb
sbb
rclb
daa
xchg
inc
ja
sub
xchg
or
mov
mov
or
int
out
je
popf
and
fcmovnu
aas
pop
mov
stos
je
push
and
stc
or
or
jecxz
adc
jns
cmp
jl
cwtl
dec
and
xchg
pop
popf
and
cwtl
clc
pop
mov
cmpsb
adc
dec
sub
jns
mov
int3
jecxz
icebp
add
jb
sbbb
cmp
in
sbb
jle
orl
cmp
ja
adc
aaa
in
ret
xor
ss
pop
push
bound
push
imulb
xchg
movsb
sub
jmp
clc
jnp
es
cmp
mov
inc
adc
pop
mov
or
sbb
dec
ret
inc
orb
fst
xor
mov
xchg
push
dec
rcrb
lds
lahf
xchg
jle
push
imul
add
mov
sbb
push
jbe
xchg
fstps
ret
ret
mov
fstps
ret
or
rorb
or
sub
push
xor
xchg
jle
push
das
cs
imul
pop
dec
dec
jp
jg
in
pop
cld
dec
divb
test
in
das
add
es
pop
int
ja
mov
loopne
or
adc
in
mov
das
inc
mov
sbb
inc
dec
mov
mov
fstps
hlt
bound
je
jb
add
pop
jge
in
cwtl
sbb
jbe
or
dec
cmpsb
fimull
into
push
push
lods
sti
inc
fdivr
mov
imul
std
and
mov
inc
ja
mov
shr
out
jl
or
movsb
sbb
faddp
rclb
sbb
or
push
cmp
add
or
jle
or
arpl
test
adc
test
ljmp
jmp
enter
lods
mov
hlt
int3
or
out
xlat
dec
shlb
mov
or
or
lret
or
loop
push
iret
adc
jo
sbb
mov
leave
sbb
jge
and
lds
xchg
jle
push
imul
push
mov
cmp
adc
test
push
xchg
cmp
insl
loop
in
pop
out
aaa
and
fiaddl
or
mov
inc
std
adc
ljmp
fstps
ret
dec
jns
or
mov
dec
cmpsl
jo
cwtl
and
or
sbb
dec
gs
mov
outsl
iret
sahf
adc
or
shr
in
test
push
jb
jge
fisubrl
cli
cmp
lea
mov
sub
inc
in
orb
mov
push
sbb
in
lds
or
rcr
lods
out
fstps
mov
sbb
or
sbb
sbb
shlb
push
adc
loopne
or
mov
cmp
in
xchg
out
mov
xchg
sub
jnp
xchg
faddp
out
shl
ret
push
push
cli
rolb
jmp
sub
leave
movmskps
mov
lret
sbb
push
push
push
push
fnstsw
xchg
cmp
mov
sbb
sbb
rolb
cltd
inc
adc
or
mov
mov
mov
movsb
sbb
push
outsl
jecxz
sbb
xor
sbb
frstor
or
pop
push
inc
mov
and
sbb
or
dec
mov
jnp
mov
pop
scas
or
cmp
push
leave
inc
cltd
pop
in
and
push
xor
inc
jno
cmp
inc
imul
mov
in
xchg
sub
jns
int
in
sbb
adc
push
pop
lcall
ljmp
ret
ret
mov
mov
out
or
cmp
int3
push
mov
mov
repnz
movsl
xchg
fbstp
movsl
leave
sbb
mov
jmp
jecxz
outsl
ret
movsb
sbb
fldcw
xor
or
jno
fmull
lds
stos
xchg
jle
push
cmp
or
sbbl
push
push
iret
add
cmpsb
clc
iret
jmp
xchg
jbe
fcoms
repz
rcr
cmpsl
cmp
scas
or
int3
dec
cmpsb
test
cmp
arpl
push
xor
les
pusha
dec
popa
loopne
sbb
repnz
sahf
sbb
nop
push
adc
push
mov
xchg
jle
cmp
movq
xchg
enter
mov
jns
arpl
push
repz
adc
or
jae
inc
jge
xchg
shl
add
dec
imulb
outsb
ret
repnz
rolb
pushf
pop
int3
sbb
pop
push
push
push
fisttpl
xor
xchg
mov
popa
pushf
inc
sbb
faddl
jle
mov
in
repz
cmp
sbbb
mov
add
sahf
mov
lods
es
fstpl
int3
sbb
insl
fucomp
jecxz
test
jmp
push
pushf
adc
adc
push
movsl
sbb
nop
dec
or
lds
cmpsb
xchg
jle
push
sub
popf
mov
and
sub
jb
or
and
push
add
and
ficoml
movb
or
dec
ljmp
fst
inc
popf
mov
jb
sbb
or
loop
pushf
in
xor
pop
add
popl
xchg
insb
mov
aad
out
test
cli
test
jle
imul
push
in
push
leave
jns
sbb
jns
out
mov
inc
sarb
js
stos
and
stc
sbb
or
cltd
dec
adc
sbb
xchg
xor
insb
cld
xor
cwtl
fisttpll
js
arpl
pop
sarl
cltd
cmp
mov
xor
std
fsubrl
sub
inc
test
fwait
stos
lcall
dec
push
or
sub
enter
mov
movsl
sbb
in
bound
push
dec
loop
pushf
inc
dec
lods
ja
fnstsw
xlat
mov
push
jo
sbb
and
sbb
jle
push
cmp
mov
cmpsl
xacquire
cmp
mov
ss
sub
inc
jecxz
cmp
mov
movsl
mov
mov
scas
jle
rclb
enter
sbb
cld
loope
daa
out
mov
in
push
scas
ja
mov
mov
in
lds
push
cmp
addl
cmpsl
lds
cmp
fmul
mov
push
jae
rcll
mov
fisubl
orl
jne
and
jb
push
xchg
dec
movsl
repz
fstpt
shll
sub
cmp
inc
das
mov
arpl
insl
push
jae
int
lds
push
in
inc
cmp
mov
mov
adc
inc
call
xchg
dec
outsl
mov
int
iret
lcall
repz
mov
sub
shll
pushf
add
out
mov
jg
pushf
in
gs
aas
push
or
negb
push
in
negb
outsb
pushf
inc
and
push
dec
enter
mov
push
inc
les
jp
jg
loop
inc
loop
jg
ljmp
daa
leave
fimull
mov
gs
int3
adc
test
in
fiaddl
fsubrl
sahf
andb
xlat
pop
push
int
sub
xor
or
test
push
add
add
push
push
sub
lahf
push
add
cli
data16
repnz
ljmp
inc
xchg
jno
and
mov
mov
pop
inc
adc
pop
mov
bound
xlat
test
jnp
jg
rcrl
popa
js
test
pop
sbb
push
jnp
das
push
rol
dec
movsl
inc
inc
mov
shrb
and
iret
mov
lcall
or
mov
push
xchg
sbb
sbb
pop
ret
or
xchg
jle
cmp
sbb
xchg
outsl
fistpll
stc
lods
enter
jmp
xchg
cld
sahf
loopne
iret
enter
aad
rol
push
in
sbbl
lret
int
mov
iret
and
mov
sub
das
imul
push
xlat
fmul
mov
pop
xor
paddd
leave
test
rcll
or
add
lds
dec
xlat
or
das
sub
cli
stos
data16
pop
out
movsl
mov
xchg
out
or
orl
aad
dec
pop
inc
fisubrl
xchg
add
ss
mov
lods
ficoms
jnp
lcall
push
dec
push
push
sbb
test
pop
jmp
lret
fcmovnb
fdivrl
lods
adc
or
daa
cmp
cmpsb
scas
xor
and
cmc
cmp
in
adc
cmp
push
roll
xor
jg
add
in
mov
push
aad
pop
push
rcll
push
das
xchg
iretw
pop
mov
push
mov
and
sub
fst
icebp
adcl
add
push
imul
out
out
xor
xchg
adc
gs
sbbl
sbb
add
sti
cmp
dec
push
jmp
fs
outsl
das
or
data16
repnz
clc
sub
xchg
mov
sub
adc
inc
inc
inc
arpl
or
jbe
les
pop
stos
mov
out
push
aaa
adc
sub
jle
loopne
sub
pusha
adc
sbb
loopne
or
ja
sahf
mov
int
sub
test
dec
outsl
fsubrs
test
mov
in
or
sbb
sbb
lret
push
sbb
lods
jp
mov
dec
int
fstps
mov
or
movsb
test
adc
and
fimuls
insb
add
jmp
popa
stos
mov
movsb
dec
pop
ds
into
xchg
lea
mov
andb
mov
in
outsl
in
loope
or
cmp
adc
bound
shrb
scas
xorl
rcl
push
mov
ljmp
shr
lods
mov
cmpsl
neg
and
ret
arpl
lret
shlb
sbb
lds
jmp
jns
or
sarb
popf
call
mov
jecxz
pop
cmp
xchg
adc
jnp
xor
js
cmp
mov
stos
xor
mov
adcb
or
lea
adc
dec
pop
std
decb
movhps
mov
add
rcrl
add
stos
je
add
icebp
insb
sub
je
cmp
movb
cmp
cmp
mov
out
sub
outsb
out
repnz
aad
inc
outsl
xchg
xchg
insb
outsl
jbe
mov
enter
adcb
xchg
jmpw
fwait
mov
fs
mov
push
pop
test
imul
mov
cmp
sbb
imul
jp
adc
or
lahf
cmp
dec
js
pop
int
sbbb
dec
adc
lea
mov
jge
cmp
stos
mov
dec
imul
stos
out
in
push
mov
fidivrl
mov
adc
ret
fucomp
lcall
mov
jle
push
das
sbb
jl
lret
jb
je
inc
dec
dec
or
stos
sbb
xor
mov
add
mov
sub
xchg
cmp
cmp
dec
jp
or
into
shr
xor
cmc
pop
sub
test
in
dec
mov
nop
gs
data16
jne
arpl
aad
or
jbe
clc
std
insl
cltd
sbb
adc
push
jne
mov
outsb
cltd
mov
push
lret
sbb
mov
mov
mov
in
jle
jle
cmp
ds
ljmp
sub
cld
dec
dec
into
arpl
dec
add
loopne
cmp
adc
les
xlat
js
mov
lods
mov
lds
inc
pop
cmp
cmpsl
inc
sub
and
mov
imul
inc
shrl
stc
stc
jno
lcall
inc
xor
stos
and
xor
orb
cmp
jp
sti
lock
inc
push
fldcw
jne
std
aas
mov
mov
mov
xor
loope
pop
jnp
jg
dec
lock
push
call
or
or
or
.byte
imul
jo
mov
scas
jo
or
or
or
or
dec
adc
or
dec
adc
or
jmp
cmp
fisttpl
fisttpl
jmp
sbb
dec
mov
xchg
pop
fldcw
jnp
stos
jbe
test
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
.byte
.byte
.byte
sub
add
add
add
jb
gs
xor
cs
insb
add
push
add
dec
push
add
add
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
add
add
add
in
shll
inc
add
add
add
jmp
jmp
add
jmp
jmp
sub
add
jmp
add
sub
mov
nop
lea
mov
lods
stc
add
xor
clc
stc
sub
add
add
stc
sub
sub
clc
xor
add
nop
nop
sub
nop
add
clc
add
stc
stc
add
xor
clc
stc
sub
add
add
stc
sub
sub
clc
xor
stos
loop
xchg
sar
loopne
cld
pop
pushf
adc
adc
pushf
adc
adc
mov
sbb
add
xchg
xchg
sar
pushf
adc
adc
pushf
adc
adc
sub
repz
cmp
fs
lea
data16
sbb
xchg
mov
mov
sbb
sub
fmull
xchg
sub
sbb
iret
push
in
add
inc
inc
inc
fists
or
out
mov
xchg
lahf
pop
pusha
mov
out
in
gs
xchg
xchg
sti
sbb
lahf
sbb
test
xchg
xchg
xchg
sti
sbb
pop
lds
sti
sbb
xchg
lea
mov
pushf
mov
not
sbb
xchg
sub
rcrb
in
mov
rcrb
xchg
fcoml
fsubl
lea
inc
rcrb
xchg
sub
sbb
fs
lea
xlat
rcrb
xchg
sub
rcrb
fs
lea
push
rcrb
xchg
sub
rcrb
fs
fmull
fcoml
fsubl
lea
rcrb
xchg
sub
sbb
fs
fmull
fcoml
fsubl
lea
mov
sbb
xchg
sub
sbb
fs
fmull
fcoml
fsubl
lea
rcl
sbb
xchg
sub
pop
in
cmp
fcompl
sub
fcoml
ret
add
fcoml
pushf
xor
xchg
xchg
xchg
sbb
fsubrl
fmull
fsubrl
data16
lods
pop
cs
fsin
xchg
mov
lods
xchg
sti
sbb
lahf
or
sbb
xchg
jo
sub
cltd
sbb
in
fisubs
sti
sbb
mov
rcrb
subl
sti
sbb
add
jae
in
add
fcompl
fmull
fsub
pop
lahf
fiadds
pop
jecxz
jns
rcrb
pop
mov
fldenv
xchg
inc
rcrb
pop
fs
mov
rcrb
pop
pushf
out
scas
xchg
sub
cltd
sbb
in
cmp
mov
rcrb
xchg
shrb
lods
fmull
fsubr
xlat
xchg
sub
pop
xchg
data16
xorl
pop
scas
pop
outsl
mov
rcrb
jp
jecxz
jns
rcrb
adc
sub
add
add
xchg
sub
sub
in
pop
xchg
test
fmul
test
push
clts
fldcw
faddl
push
fldcw
faddl
psubusw
faddl
fldcw
faddl
cmp
test
faddl
push
faddl
psubusw
out
test
jmp
out
test
xor
add
out
pop
add
fcoml
stos
pop
add
cmp
push
lods
pop
push
xchg
xor
mov
or
out
xchg
sub
sbb
and
daa
rorb
mov
sahf
lds
sub
sub
or
sub
sub
and
mov
pop
gs
push
push
or
cld
mov
xchg
sti
sbb
sub
and
sbb
fadd
lods
xchg
and
fadd
cwtl
xchg
sti
sbb
lahf
or
pop
ja
adc
lahf
and
filds
faddl
faddl
pushf
adc
mov
js
sbb
adc
fcoml
faddl
fdivr
fcoml
dec
cmp
fmul
int
mov
jns
sti
sbb
out
inc
pop
xchg
mov
sbbl
or
add
data16
faddl
mov
rcrb
pop
pushf
fldcw
pop
rorl
push
add
lahf
and
pop
fs
xchg
sub
pop
cmp
xchg
mov
fstps
loop
outsl
mov
rcrb
sub
fsubr
subl
sti
sbb
mov
adc
fsubr
xchg
inc
xlat
xchg
pop
int
lahf
xchg
lahf
xchg
xchg
sti
sbb
xchg
mov
sbb
in
pop
faddl
pop
flds
add
sub
xchg
mov
aad
outsl
mov
rcrb
pop
pushf
fisttpll
in
cmpsl
push
cmp
sub
fcoml
adc
fsubr
xchg
fsubl
out
out
xchg
pop
in
outsl
mov
rcrb
sub
subl
sti
sbb
cld
fcoml
jmp
sbb
fcoml
xor
or
add
ja
mov
sahf
out
test
pop
out
jecxz
xchg
inc
fcompl
mov
pop
fs
ljmp
jmp
lds
mov
mov
pop
add
orb
mov
adc
gs
subl
sti
sbb
fcoml
aam
inc
xchg
sti
sbb
lahf
or
sbb
stos
fsubr
mov
xchg
sub
repz
cmp
out
in
fs
js
mov
add
sti
sbb
iret
pop
adc
add
fs
xchg
inc
fnstenv
sbb
xchg
fmul
push
test
add
push
fbstp
xor
push
jno
jbe
push
fidivrs
or
jmp
rcrl
std
addr16
inc
dec
loopne
cmpsb
aad
jmp
jle
repnz
inc
adc
es
movb
dec
cmc
ljmp
and
bound
fadds
mov
mov
xor
dec
jb
ja
test
sub
jle
cmpsb
iret
pop
jne
getsec
xchg
adc
outsb
mov
rcrl
lret
jge
jg
jl
les
stos
jnp
cwtl
fwait
ja
jge
sahf
sahf
mov
and
icebp
call
arpl
or
bound
mov
pop
xchg
xchg
mov
ret
es
loope
inc
enter
les
adc
jnp
sbb
cmp
sub
push
push
movsl
scas
sub
movsl
faddp
out
push
fcompl
hlt
sbbl
call
xchg
mov
rcrb
pop
pop
je
lea
xchg
pop
dec
fsubl
jmp
pop
cmp
lods
xchg
mov
rcrb
pop
pop
je
lea
xchg
pop
sbb
je
fsubr
int
xor
frstor
sbb
add
fsubl
inc
or
jb
push
push
adc
adc
add
push
add
inc
fdivrl
insl
push
adc
gs
or
adc
adc
adc
add
push
or
jno
inc
push
or
or
insl
push
fcoml
push
inc
push
adc
ss
fsub
or
ljmp
adc
adc
insl
push
or
fildll
wbinvd
inc
gs
push
dec
pavgb
fnstenv
xor
push
in
push
or
or
faddl
add
add
cs
