push
jle
aam
sub
imul
mov
aas
jge
jle
aaa
adc
dec
mov
out
rolb
pop
jne
push
xlat
dec
lcall
repz
lds
sbb
jno
mov
lahf
jnp
pop
loopne
movd
pop
adc
les
fildl
ja
je
sbb
mov
xchg
and
xchg
cmp
sub
mov
outsb
pop
mov
or
lods
jg
jg
les
sarb
pop
enter
sub
jbe
add
cwtl
std
cmpsb
lret
jle
test
add
push
add
jg
cmp
out
call
stos
push
in
andb
ss
add
ja
mov
ret
das
cmp
push
cwtl
adc
test
cld
cmp
jp
pusha
xchg
mov
add
and
mov
inc
jp
mov
mov
add
mov
inc
ljmp
lret
imul
mov
pop
push
jmp
push
jmp
aas
test
fcomps
xor
hlt
pop
dec
inc
xlat
iret
addr16
lret
loopne
les
mov
mov
fisubs
sbb
pop
or
mov
insb
inc
mov
jbe
mov
pushf
cmp
cmp
imul
out
fcmovu
sti
mov
out
add
mov
jp
fsubrp
test
xor
cmp
enter
fsubrl
cmp
inc
fisubl
xchg
and
inc
or
out
aam
fsubrs
cli
out
jnp
sti
cmp
jecxz
mov
cltd
fisttpll
push
int3
movsb
xlat
sbb
iret
sbb
aas
fwait
pop
inc
cltd
lahf
fildl
pop
pop
and
jmp
mov
xchg
jb
push
mov
jae
call
call
xchg
sub
arpl
fistpl
sbbb
push
fndisi(8087
cmpsl
popf
mov
loopne
xchg
sbb
daa
das
dec
lea
push
js
fwait
cmpl
loopne
rclb
ljmp
cmc
jge
push
adc
int
test
imul
cwtl
repz
lahf
sahf
ret
dec
ljmp
cmpsl
xchg
test
dec
add
xchg
pusha
fisubs
sub
pop
loope
or
xchg
out
dec
int3
jae
sub
ret
dec
pop
ja
or
dec
shrb
cmpsl
adc
adc
pop
test
cmpsl
stc
push
out
mov
xor
jmp
mov
pop
pop
mov
push
add
push
jge
fdiv
mov
push
lcall
imul
es
fsubrp
xor
popa
jb
push
repz
stc
aad
jp
mov
lcall
dec
adc
ficoml
test
mov
inc
aaa
dec
cwtl
jne
popf
pop
mov
lock
xor
or
inc
inc
mov
popf
mov
stos
shlb
dec
xchg
ja
mov
xor
pushf
jle
lcall
mov
nop
ja
rcr
dec
adcl
pop
inc
or
xor
adc
imul
test
mov
add
ja
stos
aaa
rcll
and
int
mov
ja
in
and
pushl
push
adc
push
and
pop
mov
aas
sub
mov
jnp
cmpsb
filds
sarb
sub
arpl
cmp
push
enter
fists
mov
dec
cmp
addb
push
cli
cli
push
push
aas
push
fucomp
push
mov
aaa
mov
or
das
out
and
je
ja
aam
inc
jg
scas
push
mov
outsl
aaa
lea
and
test
lahf
incl
inc
icebp
pop
mov
push
xchg
or
sbb
xchg
sbb
xor
fnstenv
cmpsl
push
adcl
pushf
stc
out
out
jecxz
push
mov
out
ret
andb
fstp
out
push
inc
into
mov
cmp
outsb
pop
jg
mov
cmpsl
jnp
aaa
pop
out
inc
out
dec
das
and
stos
dec
sahf
imul
mov
outsb
or
pop
add
mov
fldl
sub
push
dec
insb
enter
movb
aam
mov
ret
pop
aaa
insb
push
repz
add
popl
iret
sub
cmpsl
loopne
sbb
cmp
enter
push
out
jecxz
jmp
mov
rcrl
xchg
gs
je
mov
push
mul
and
mov
imul
fldt
out
scas
pop
push
mov
xchg
outsb
cmp
add
cmp
inc
push
inc
mov
cmp
jg
outsl
scas
push
lods
bound
repz
push
jbe
cld
testb
cmc
jo
lcall
dec
xchg
loop
imul
mov
mov
in
pop
sub
cltd
add
add
mov
or
mov
jbe
sti
jl
lahf
movl
lock
rcr
adc
icebp
add
repz
pop
jmp
dec
cmp
inc
ss
mov
dec
fwait
and
jne
inc
arpl
xchg
mov
xchg
and
pop
jmp
das
dec
jbe
in
ds
add
ret
mov
dec
movsl
es
xchg
sub
aas
stos
mov
mov
mov
or
mov
jecxz
xchg
sub
fists
inc
mov
jbe
outsl
pushf
dec
iret
cs
sub
push
mov
sub
jae
sub
xchg
or
add
adc
dec
jmp
mov
push
out
out
lds
push
add
ja
aas
aas
cwtl
mov
inc
jmp
or
pushf
mov
or
shrl
shrb
aaa
std
std
push
add
push
cmp
mov
jg
jg
fs
cmp
aam
add
fcmovnbe
fidivrs
jg
fdivrs
cmp
sti
mov
add
xchg
test
xlat
push
adc
lods
mov
sbb
inc
imul
dec
inc
arpl
jne
je
mov
mov
jecxz
add
inc
add
out
pop
pop
enter
adc
aad
jg
inc
mov
mov
imul
mov
psrld
aam
push
out
xlat
outsl
popa
hlt
xor
fiaddl
test
cmp
scas
mov
lds
shl
mov
sub
iret
test
xchg
out
sbb
jae
push
sti
and
add
ljmp
xor
lcall
imull
mov
cmp
icebp
lods
pop
push
xchg
xchg
push
add
sub
cltd
mov
add
ds
xchg
popa
or
sbb
adc
aaa
xchg
jb
cs
outsb
inc
xchg
mov
lret
and
adc
push
nop
jle
and
mov
xchg
xchg
inc
push
add
sbb
cwtl
std
dec
jge
jne
add
repnz
hlt
xchg
lods
and
mov
test
inc
and
add
xor
das
rdpmc
adc
sbb
movl
ja
aaa
hlt
fstl
adc
add
mov
pop
pop
das
or
mov
pop
cmp
or
cmp
nop
cmpsb
push
orb
pop
int3
and
cld
push
negl
add
push
out
jp
pusha
mov
xchg
cwtl
jle
jae
mov
jmp
aad
push
add
inc
insl
rcrb
mov
jo
dec
sbb
cmp
xor
dec
cwtl
hlt
xor
pop
xchg
bound
mov
xchg
jnp
cmp
cmp
cmp
mov
sarb
leave
push
stos
cli
add
xchg
lock
fmul
adc
xchg
pop
push
cmp
mov
movsl
in
dec
push
arpl
rcl
add
mov
cld
or
fxch
test
mov
push
rcrl
sub
stos
daa
in
repnz
mov
mov
out
cmp
les
jp
or
ret
lret
and
sub
push
xchg
in
repz
stos
add
sbb
push
cli
punpckhdq
cmp
add
test
mov
lret
xchg
cwtl
mov
in
sahf
pop
mov
sub
xchg
push
pop
sti
push
mov
pop
inc
push
out
jl
loopne
inc
push
dec
ss
xchg
adc
sbb
dec
movsb
mov
cmpsl
jb
lods
sti
and
nop
nop
cmp
mov
inc
stos
jne
aad
mov
divl
imul
inc
pop
or
lret
mov
lret
outsb
add
jae
sub
add
call
xchg
divl
pop
sbb
or
dec
fnstcw
cmpsl
mov
jecxz
je
add
roll
je
add
xchg
push
daa
mov
xor
outsl
aad
jl
lods
mov
jnp
ret
insb
inc
loopne
jnp
lret
stc
mov
ficoms
scas
xorb
mov
into
push
cmp
jae
push
stos
push
sub
roll
adc
cmpsb
call
cmc
and
cmpsl
shrb
add
loop
in
aas
cmp
das
push
xchg
lds
adc
xor
inc
sub
lds
outsl
out
pop
arpl
shlb
mov
cwtl
shl
out
pop
iret
cmp
lock
mov
push
and
adc
mov
push
cmp
push
jne
cmpsl
dec
lds
inc
sbb
jg
adcb
rorl
test
lahf
sub
jl
lahf
repz
cmp
xor
jp
sbb
dec
push
fdivr
or
adc
fildll
jbe
jae
ficoms
mov
cwtl
scas
sub
xchg
fmull
popf
pop
into
xor
loopne
pop
and
dec
jle
clc
jg
push
repnz
ja
std
mull
imul
orl
test
dec
je
cmp
ret
test
and
dec
adc
jp
xchg
les
sub
int
mov
dec
movsl
jl
aas
jg
adc
mov
mov
pop
les
dec
sbb
pusha
adc
cmp
daa
sub
xchg
xchg
dec
jg
ss
pop
mov
adc
shrb
es
mov
inc
jae
dec
adc
cmp
inc
sbb
cmpb
pop
je
lock
rcrl
push
xlat
add
lahf
inc
notb
mov
lods
xchg
fadd
cmp
daa
inc
js
test
cmp
sbb
xor
sbb
push
cmp
sub
cmp
xor
sbb
add
std
pushf
sbb
lret
sub
sti
or
mov
out
and
push
js
jnp
inc
or
pop
mov
or
hlt
mov
and
pop
call
testb
je
sbb
out
mov
jne,pt
sbb
sar
test
mov
outsb
push
and
into
inc
sub
lds
out
popf
pop
nop
cmp
aam
ret
test
loopne
je,pn
mov
jp
jl
clc
outsb
sub
push
xor
adc
aaa
cvtdq2ps
and
test
xor
fsubrs
test
sti
jb
dec
pop
dec
inc
repz
iret
outsb
mov
adc
loop
lret
popa
pop
xor
aad
xor
shrl
or
daa
jg
es
cmp
lahf
scas
pop
dec
lea
dec
pop
or
dec
out
xlat
loope
ficoms
push
movb
scas
out
mov
cmp
fmulp
jle
out
popf
jl
jle
pusha
clc
jle
dec
inc
mov
add
inc
lret
mov
mov
outsl
add
xor
lcall
ss
sbb
sbb
fs
dec
xor
popf
lret
jbe
ja,pt
sarb
xor
rolb
adc
loope
cmc
push
stos
mov
sbbl
inc
dec
iret
mov
and
and
jo
dec
pop
and
je
das
sub
cmp
push
fldt
rcr
out
jge
or
sahf
sub
mov
or
sub
xchg
insl
push
mov
and
ficoms
mov
or
or
dec
adc
adc
mov
jge
divl
mov
mov
iret
sub
insb
lret
xchg
adc
das
das
daa
push
fiadds
sbb
fadds
popa
shrl
arpl
jmp
cmp
inc
push
jge
mov
push
hlt
test
jmp
cmpsb
adc
cwtl
repz
mov
out
call
fldl
negl
pop
outsl
repz
xchg
xchg
out
xor
jg
scas
repz
aad
xchg
insb
pop
inc
pop
dec
in
aad
std
iret
cli
cmp
mov
nop
inc
shr
jae
cli
dec
jmp
hlt
and
mov
push
jg
sbb
leave
aas
out
in
inc
js
dec
ret
pop
mov
push
fcoml
fwait
jg
pop
fmuls
sahf
mov
dec
cmpsl
or
in
insb
mov
push
lods
iret
push
push
cli
mov
adc
lahf
inc
xchg
cmpsb
jecxz
stos
sub
out
mov
sarl
enter
out
notl
fcoms
mov
inc
enter
leave
add
sahf
mov
fbstp
add
mov
mov
pop
jnp
pop
int3
mov
push
jmp
mov
lahf
push
xor
lods
push
adc
mull
dec
push
cmpsl
inc
or
sbb
jecxz
jecxz
push
add
mov
ret
lret
and
add
fmull
test
scas
je
and
stos
and
and
or
fisubrs
into
dec
xchg
aas
loope
andnps
jp
dec
pop
mov
dec
sbb
push
mov
sub
sbb
fstpl
in
sbb
testb
call
lahf
cmpb
xor
addr16
loopne
imul
dec
jge
dec
inc
loope
ror
scas
dec
jnp
in
cmp
jnp
mov
pop
repz
xchg
sbb
inc
mov
push
pop
aad
push
fisttpl
jnp
cmpsb
dec
push
mov
jne
cld
or
cmp
int
xchg
leave
mov
shll
sub
les
enter
fwait
mov
mov
sbb
dec
bound
std
outsl
test
nop
xor
xor
mov
add
out
xchg
xor
or
mov
test
xor
xchg
jge
or
add
dec
push
xor
xlat
scas
adc
jb
mov
add
ljmp
add
cmp
adc
sub
fisttpl
decl
addr16
xchg
clc
dec
push
ret
mov
in
shlb
das
fsubrl
add
insb
mov
pop
into
cmp
dec
dec
movsb
pop
fstps
ja
xchg
loopne
adc
das
sti
cli
pop
addr16
mov
jnp
cmpsl
push
inc
jp
xchg
lock
fnstcw
and
xor
inc
icebp
jge
lret
cmp
popf
dec
inc
jne
and
test
in
sub
xchg
ds
and
push
and
cltd
pop
push
cmp
push
inc
addl
jg
xchg
mov
dec
ljmp
xchg
fnsave
mov
jge
popa
fistps
pop
cmp
in
lahf
inc
sub
lret
lret
lahf
cwtl
jae
push
jo
jne
outsl
test
clc
xchg
ret
scas
movsb
aaa
jge
xor
jl
js
sti
in
jo
cmp
std
xchg
movsl
mov
inc
ss
pop
jno
ljmp
xchg
lds
ficomps
int3
cmpsb
cmpsl
neg
test
popa
xor
popa
sbb
lret
sbb
loope
sbb
ljmp
mov
inc
adc
push
int
scas
mov
fs
fwait
loop
rorb
dec
jp
mov
push
pop
sub
xchg
out
bnd
movsb
jg
outsl
int
push
mov
orl
and
adc
add
add
ror
lahf
inc
lods
int3
dec
mov
adc
or
outsl
stos
lret
pop
inc
lcall
loope
scas
fldl
ret
das
cmpsb
push
ret
push
popf
jge
out
xchg
pop
mov
sti
out
mov
dec
sub
jle
cmp
out
mov
push
inc
add
jp
mov
sub
mov
movsl
shrl
pop
pop
dec
or
mov
push
ffreep
les
shl
jge
mov
inc
cli
push
add
cmp
lret
imul
ret
mov
pop
inc
sub
adc
push
inc
cmp
loop
dec
mov
in
inc
cltd
or
dec
jg
test
ljmpw
scas
sbb
cmpsl
aaa
xor
mov
mov
push
pop
xor
push
pusha
leave
out
scas
mov
lahf
jae
fidivrl
into
scas
insb
and
lcall
adcl
jle
or
bnd
scas
repz
ror
test
jnp
mov
jg
test
mov
pop
mov
mov
jo
jbe
cmp
test
decl
xlat
xchg
cmp
xchg
test
push
hlt
test
sahf
incl
add
or
inc
cmpsl
into
inc
aaa
push
sahf
cmpb
jl
push
int
push
andb
shrl
std
in
jb
in
xchg
push
pop
bound
repnz
sub
pop
fsubl
sub
test
cld
cld
add
movsb
movsb
sub
int3
dec
push
dec
pushf
lahf
out
loop
mov
inc
scas
stc
mov
ret
sbb
and
pop
lds
push
lock
pop
inc
push
xchg
push
xor
repz
outsb
fstpt
sub
sub
lods
mov
jne
sub
sarl
adc
in
and
lahf
ret
xchg
mov
imul
or
jae
outsb
jnp
in
int
xchg
ja
cli
in
xchg
fstl
test
rorb
shrb
add
inc
aaa
ret
fcmovbe
ret
xchg
xchg
icebp
out
and
rcrb
movsl
imul
test
mov
fnstcw
mov
cmp
test
inc
repnz
add
mov
push
fldcw
ja
mov
test
stos
fcoms
xchg
clc
cmp
jae
xchg
fs
stos
xchg
push
pop
add
cmc
sbb
push
into
cmpsl
out
inc
imul
push
jl
mov
sub
cmp
jae
mov
cmp
jmp
jno
cmp
inc
push
add
cmp
sbb
cwtl
add
int
lock
aaa
lock
mull
sub
pop
lret
pop
repz
fistps
or
pop
jmp
out
in
push
add
fs
sti
cmpb
aas
dec
add
cmpsb
rcrl
mov
xor
inc
sub
lcall
sub
mov
push
lahf
adc
cwtl
shlb
cld
and
xor
outsb
xor
jb
add
lret
jbe
mov
or
popa
pushf
mov
xchg
xlat
cmpsl
rorl
or
sbb
and
movb
push
sbb
sub
lahf
pop
xchg
dec
int3
mov
jmp
mov
adc
lods
clc
clc
sbb
lret
cmpsl
out
adc
mov
jae
cmpsb
imul
push
push
movsl
or
xchg
mov
adc
dec
into
idivb
sbb
inc
add
push
hlt
daa
notl
loopne
jae
pop
cmpsl
push
mov
mov
hlt
dec
xchg
jae
clc
shrl
enter
mov
pcmpgtd
mov
shrl
jle
negb
cltd
adc
xchg
sub
sahf
les
mov
lock
lret
aas
and
sti
jle
dec
mov
rcrl
dec
adcb
xchg
xchg
popf
jecxz
cld
cmpsl
out
add
into
call
mov
adc
sub
pop
shlb
jbe
or
stos
xchg
das
mov
push
jge
mov
or
pushf
dec
test
inc
inc
lret
mov
inc
inc
xor
inc
jmp
push
jb
fcomps
pusha
clc
sub
dec
mov
jne
mov
mov
lret
xchg
cmpsb
fbld
inc
adc
pop
inc
push
adc
test
cmpsl
push
insb
jg
jle
cwtl
dec
sar
jle
fwait
push
and
mov
inc
pop
ds
mov
or
and
sarl
iret
mov
popf
sbb
addb
xchg
add
out
mov
inc
or
and
cmp
cltd
cs
mov
dec
fistpl
dec
shl
mov
or
popa
push
dec
xchg
jl
aad
xor
cmp
neg
popl
push
add
cs
movsb
iret
test
xor
push
js
or
xchg
mov
push
pop
aaa
arpl
ret
aaa
jl
mov
push
inc
sar
faddl
aas
jmp
aad
push
fdivrl
xchg
xchg
jmp
jnp
fdivl
fwait
outsl
stc
mov
stos
or
cli
rdtsc
popf
in
cmpsl
enter
pushf
aaa
jge
mov
das
mov
pop
mov
nop
decl
mov
les
ret
and
cltd
mov
bound
test
scas
mov
push
jns
imul
cltd
adc
scas
or
mov
and
pushf
cmp
lret
jp
mov
jne
mov
es
inc
movb
fidivrl
mov
mov
inc
add
or
out
aaa
hlt
test
inc
cld
cmp
push
daa
mov
faddl
mull
aas
inc
sub
push
jno
xchg
icebp
nop
xor
xlat
lods
mov
xor
pop
xor
and
pop
sbb
call
add
jnp
xor
sub
jo
inc
pop
cmp
push
add
rorb
add
test
mov
sub
roll
inc
in
das
push
fimull
mov
out
add
mov
pop
fstpt
fisubrs
iret
fwait
dec
cmpsl
mov
pop
pop
and
nop
push
lret
lret
out
mov
pop
jo
xor
cli
jg
in
pusha
out
int
aam
daa
add
out
out
out
jmp
comiss
or
inc
icebp
push
add
fwait
punpckhdq
xor
mov
out
cmpsl
clc
adc
jge
pop
movsl
rclb
aaa
fidivl
cmp
stc
dec
jl
jb
push
dec
movsb
xor
aaa
daa
mov
sbb
test
popa
xchg
pop
lret
outsl
sub
mull
xchg
lahf
bound
push
sbb
and
sub
daa
or
lahf
inc
mov
lahf
cmp
fadd
jns
sar
jmp
ja
cmp
and
dec
inc
jecxz
xor
pop
cmp
add
outsl
xchg
rolb
jnp
mov
pop
test
dec
inc
jbe
xchg
inc
or
push
ja
sub
cwtl
xor
cmp
data16
sbb
mov
xchg
dec
fadds
xchg
test
fldt
sar
add
dec
push
or
push
cmp
stc
mov
add
adc
xchg
test
testb
int
fildl
jle
cmp
mov
pop
cmp
ds
addr16
jae
jg
in
pop
xchg
pop
mov
sbb
mov
ja
or
fcomps
inc
pop
fldenv
or
mov
popf
jp
pop
and
lahf
xor
jno
cli
das
push
inc
mov
nop
into
cmp
sub
add
lret
fs
xlat
cltd
je,pt
xor
cwtl
aad
pop
jg
shlb
jl
xchg
xor
bound
xchg
and
mov
xchg
push
ja
inc
rolb
roll
xor
sub
sub
mov
lret
sbb
or
scas
cmp
adc
or
mov
mov
iret
or
sti
fmull
xchg
out
pop
stos
scas
jge
pop
mov
ficoms
inc
fisubs
ret
test
xor
fimuls
mov
jl
pop
testl
push
cwtl
cli
mov
pop
pop
lock
mov
jg
add
out
xor
shlb
stos
fildl
xor
rclb
sbb
cwtl
movsl
and
mov
xor
cmp
and
jae
mov
insb
lods
add
cmpsl
dec
sbb
mov
test
push
push
jg
ret
ljmp
orb
icebp
insb
setne
mov
push
pop
hlt
inc
jns
das
add
nop
pop
add
cmc
aad
negl
lret
icebp
arpl
cmc
stc
inc
push
adc
int3
dec
sarl
mov
push
push
lock
popf
iret
inc
sbb
fildl
je,pt
int
movl
lods
subl
incl
jecxz
ds
push
push
rolb
into
mov
push
inc
jge
sbb
dec
jg,pn
xor
inc
add
cwtl
fwait
xor
dec
jp
push
in
jle
ljmp
xchg
sub
shll
out
mov
adc
imul
cmovg
inc
jecxz
loop
mov
inc
push
pushf
out
pop
push
into
sbb
lock
addl
or
out
xor
mov
ljmp
pop
sbb
idiv
adc
das
movl
aaa
sti
mov
aam
cli
mov
outsl
xchg
psubusb
pop
push
out
out
hlt
inc
dec
mov
sub
cmp
mov
push
ss
push
xor
sub
orb
daa
cmp
sub
mov
pop
test
mov
data16
rorb
repz
mov
mov
jae
je
shrb
fildll
pushl
repz
popf
xlat
pop
rol
aam
movlpd
inc
aas
lahf
clc
cmpsb
push
fwait
mov
imul
stos
shlb
in
shlb
js
cmpb
add
sbb
outsl
hlt
push
in
and
lret
dec
xor
lods
mov
andb
lret
lret
test
lcall
roll
sbb
cmpsl
inc
add
aas
sti
dec
or
cli
mov
xchg
out
lds
das
add
idiv
push
mov
iret
fists
push
inc
push
jae
xor
xchg
ret
lcall
push
hlt
inc
mov
add
movsb
sbb
pop
subb
inc
xor
adc
jle,pt
in
mov
add
adc
mov
mov
xchg
outsl
pop
aam
jmp
jb
adc
orl
mov
cltd
inc
gs
stos
aas
or
daa
mov
loopne
xchg
scas
cmpsl
iret
jl
cli
ja
inc
xchg
jl
outsl
lret
mov
mov
push
sbb
addr16
jb
add
in
mov
sub
xor
dec
cmpsl
das
ret
xchg
cmp
rorl
mov
push
push
faddl
subb
cmp
jbe
xchg
cld
sarb
inc
mov
fiaddl
nop
mov
add
call
int
js
pop
sbb
pop
popa
adc
xor
fistpl
push
or
jo
xchg
jns
add
pop
fucomp
clc
jae
cmp
push
mov
test
dec
adc
push
mov
mov
inc
iret
sarb
mov
sbb
mov
jecxz
pop
pop
cwtl
or
ret
mov
push
mov
das
ja
xchg
add
pop
pop
mov
adc
outsl
std
pop
test
fmull
pop
dec
aad
push
fcomip
or
rorb
sbb
stos
mov
xchg
and
sbb
push
jnp
setg
mov
sbb
cmp
in
pop
cmp
dec
inc
pop
dec
fisubrl
ret
repz
jle
pop
adc
xlat
xorl
jl
mov
inc
ljmp
pop
xlat
jle
shlb
xor
mov
jle
or
mov
sarb
inc
mov
in
jb
mov
add
cmp
mov
aad
aam
ret
xor
cmpsl
mov
aad
test
mov
or
scas
cmp
inc
sbb
cli
xorb
in
mov
mov
sarb
or
in
push
or
lret
pop
js
add
jbe
jae
adc
cmpsl
sete
add
ret
xchg
addr16
insl
or
push
mov
rcrl
add
mov
in
popa
inc
jmp
push
clc
pop
mov
mov
mov
inc
jecxz
js
xchg
or
rolb
and
fwait
cmp
cvtpi2ps
movsb
adc
mov
js
in
sbb
cmp
lds
test
jle
popf
int
sarl
pop
push
inc
mov
or
mov
dec
cmc
loope
inc
mov
push
pop
mov
and
iret
inc
and
add
dec
or
cli
pushf
xchg
jle
in
cmpsl
out
push
sbb
outsl
cmpsl
xchg
js
insb
xchg
dec
xor
xchg
mov
mov
mov
pop
and
fsub
sbb
lret
push
cltd
jl
fimull
stos
negl
int
fadds
push
fcmovne
lret
push
jecxz
push
addr16
and
emms
sahf
push
testb
iret
mov
aad
mov
dec
mov
cmp
loopne
mov
push
pop
sbb
push
ja
js
push
sub
inc
pop
out
mov
or
sbbb
xlat
inc
or
pop
test
xchg
ret
sbb
js
bound
jecxz
out
add
lahf
adc
lahf
mov
addr16
movsl
outsb
xchg
pop
in
add
add
sbb
inc
xchg
ja
bound
push
jo
cli
je
pusha
lahf
and
out
decl
add
sti
lea
and
cmpsb
mov
aam
xlat
fcompl
jne
dec
pcmpeqb
push
sbb
add
pop
adc
push
imul
lea
push
mov
lret
aaa
mov
push
sarl
loopne
add
sbb
movsb
cmp
jp
pop
inc
cmc
adc
repnz
inc
xlat
loopne
outsl
sub
daa
and
mov
jmp
arpl
inc
xor
sti
adcb
pushf
cmp
push
add
add
popa
fistps
testl
mov
mov
inc
popa
pop
jle
push
dec
push
or
das
adc
jmp
pushf
enter
or
push
negb
dec
inc
pop
mov
push
and
xchg
sub
clc
in
push
mov
jb
xchg
outsl
lret
fildl
add
div
movsl
sub
movb
lods
mov
jp
filds
inc
lcall
std
dec
or
cmpb
xor
sub
ret
rcrb
push
inc
gs
jecxz
test
stos
inc
mov
adc
jle
jmp
add
mov
jb
insb
lret
inc
es
jle
lea
xor
leave
lea
jl
pop
jge
xor
jle
decl
xor
mov
repz
xchg
in
loopne
add
inc
jl
mov
inc
jle
jbe
mov
or
cld
xor
movl
sbb
std
jnp
repnz
cmc
push
mov
dec
ja
jo
jnp
pop
mov
aaa
testl
pop
out
mov
mov
hlt
das
jl
push
xchg
pop
sbb
cmp
lds
add
es
scas
test
jl
dec
inc
xor
ja
lret
and
inc
add
cmp
jp
inc
fnsetpm(287
outsb
ljmp
enter
fists
mov
or
ret
outsl
mov
dec
cwtl
xor
movsb
das
daa
mov
sub
js
jnp
jecxz
outsl
insb
push
es
ja
sbb
aaa
jae
mov
scas
xchg
adc
inc
addb
jl
jg
call
filds
add
cmc
pop
or
hlt
mov
lds
test
stc
xchg
adc
mov
jmp
outsl
addr16
loopne
notl
xor
sub
adc
lock
push
jg
ret
dec
and
in
out
ds
inc
push
xchg
imul
mov
pop
arpl
push
daa
iret
add
and
sbb
xlat
cwtl
xchg
mov
test
mov
lahf
xor
cmp
cmpb
pop
pop
sub
push
pop
into
mov
lea
jmp
into
push
mov
js
inc
outsl
bound
daa
out
iret
sbb
iret
mov
hlt
addr16
aad
aad
xor
or
out
and
mov
lods
xor
outsl
adc
xchg
popa
or
shlb
xor
adc
push
das
jl
roll
dec
fildll
pop
mov
jne
aas
ja
dec
mov
mov
jne
fwait
cmpsl
inc
push
inc
rcl
push
stos
adc
jne
push
cmp
jg
xchg
cli
cld
addr16
dec
in
aas
sti
xor
and
arpl
hlt
jno
fnstenv
and
xor
or
stos
sbb
cwtl
dec
pushfw
fwait
inc
mov
les
inc
pop
mov
dec
scas
sub
pop
fidivrl
jb
adc
fwait
add
mov
lahf
aaa
sbb
jae
jl
cmpsl
sub
xorb
loope
mov
xchg
ds
fdivr
xor
cld
daa
mov
in
push
mov
ss
xchg
test
add
add
xor
test
inc
dec
xchg
or
js
cltd
mov
sub
mov
ficompl
sub
test
inc
mov
pusha
sub
xchg
adc
or
scas
sbb
aaa
mov
lcall
shrb
push
repz
daa
mov
je
mov
stos
lods
in
ficoms
aam
addl
scas
cmp
sub
mov
or
outsl
push
mov
xchg
mov
mov
les
dec
push
bound
pop
ret
dec
mov
test
leave
addr16
sub
orl
pop
stos
jae
pop
inc
cs
pop
mul
or
jg
jp
inc
xchg
push
xor
mov
lcall
lret
push
incl
mov
fdivrs
cmpb
dec
xchg
aaa
cmp
xchg
xchg
lret
inc
popf
rolb
movsb
xchg
test
arpl
xchg
daa
sti
dec
sub
scas
shlb
add
push
cltd
movsl
sti
lahf
push
fwait
out
pop
jae
out
cmpsb
or
fcompl
add
mov
jae
hlt
pusha
hlt
rcl
mov
sti
ds
out
addr16
call
inc
out
repz
leave
enter
sub
sub
rcrb
push
nop
dec
adc
fwait
inc
pop
push
ficoms
std
push
dec
cli
mov
mov
repz
inc
aas
or
and
add
sti
xor
pop
lret
push
ljmp
in
in
addr16
ljmp
clc
ja
movsl
cld
dec
decl
enter
cmpsl
pop
clc
jae
mov
mov
ljmp
pop
pop
insl
test
adc
leave
fcompl
mov
pop
inc
aaa
xor
fwait
popa
add
stos
loopne
mov
pop
add
in
xchg
inc
insb
jp
mov
enter
cmp
lea
dec
jno
mov
movsl
and
push
sbb
cld
stos
add
test
push
cmc
add
cmp
sbb
sbb
cmc
xchg
pusha
push
sbb
cwtl
mov
sarb
out
xor
addr16
scas
daa
mov
add
xchg
inc
pop
inc
out
mov
test
loope
xor
xchg
inc
pop
xor
sub
ljmp
push
fmulp
pop
ja
dec
inc
ret
les
xchg
outsl
pop
pop
fwait
jle
inc
mov
lahf
xlat
out
pop
stos
movsl
shlb
lea
subb
dec
shl
push
adc
or
pop
loopne
cmp
sahf
inc
scas
aam
les
pop
cltd
sub
sbb
je
xor
sub
mov
xor
sub
nop
xor
je
push
cmp
sahf
push
mov
jne
and
not
dec
xor
jg
sbb
enter
xlat
rclb
rcll
mov
fcompl
jmp
lea
scas
jg
jp
cmp
mov
add
shl
aas
cmpsb
loope
xor
cmc
mov
movhlps
faddp
mov
into
sbbl
inc
je
pusha
xor
pop
test
xchg
push
push
mov
jae
aas
jge
jb
xchg
nop
jle
sar
xchg
mov
inc
lds
cmp
pop
xchg
or
lahf
xchg
jmp
lret
lahf
xchg
xor
popa
dec
test
or
xchg
in
cmp
cmpsb
xor
je
mov
aas
pop
cmp
shll
and
xchg
ja
lahf
addr16
ficomps
fldcw
jecxz
push
cli
or
jge
inc
inc
shlb
fisubs
iret
and
pop
fs
dec
push
sbb
adc
adc
sti
rclb
addl
cwtl
cmpb
scas
add
andb
hlt
sahf
movb
stos
dec
ret
push
fcmove
mov
cmpsb
xlat
pop
dec
clc
add
mov
xor
mov
dec
or
shlb
mov
imul
jae
and
mov
in
roll
mov
pop
adc
pop
sbb
or
inc
daa
xchg
and
push
mov
sbb
mov
xor
ds
nop
scas
das
fsubrl
push
std
daa
fwait
das
jl
adc
sbb
shl
bound
cld
mov
and
in
addr16
incl
sub
mov
das
ficoms
inc
mov
pop
adc
mov
mov
add
jb
xlat
clc
pop
push
mov
bound
out
lea
idivb
adcl
insl
daa
mov
lahf
xor
push
pop
shl
pop
xchg
testl
inc
xor
xchg
movsb
test
andb
cmp
loope
sub
jo
mov
jae
stos
or
xchg
jbe
mov
cmp
jnp
test
jle
popf
pop
pop
mov
mov
mov
inc
push
mov
pop
xor
cmpsb
ss
inc
roll
dec
fcmovne
aaa
dec
inc
adc
inc
cmp
xchg
call
adc
cwtl
ds
daa
add
iret
pop
mov
pop
scas
inc
mov
sub
fcoms
lcall
or
xchg
and
and
push
std
imul
jl
pusha
push
pop
inc
jecxz
test
rsqrtps
test
and
pop
mov
int
scas
fistpl
dec
in
dec
jecxz
mov
sbb
sbb
and
dec
and
scas
sub
insb
mov
scas
lahf
subb
push
jge
pop
or
pop
mov
xchg
lds
ljmp
pop
fdivr
mov
aam
ret
push
adc
or
cbtw
in
mov
cmp
iret
cwtl
sti
mov
inc
adc
pop
dec
lods
outsb
push
or
or
hlt
sti
loopne
call
jnp
push
jmp
decl
mov
mov
movsb
mov
inc
mov
xchg
xchg
daa
xlat
je
fisttpl
and
test
adc
ficoml
mov
pusha
sarl
lods
mov
fiaddl
push
js
and
roll
xor
dec
fisubrl
je
arpl
pusha
rorl
xchg
rcrb
jecxz
pop
inc
and
jmp
sub
mov
cmp
or
cld
mov
popf
fildl
dec
ss
add
mov
mov
movsb
insl
les
jb
pop
xchg
ja
mov
pop
push
movsb
adc
ret
adc
sahf
in
sti
aaa
xlat
add
roll
or
push
pop
addr16
xor
test
aas
cmc
inc
mov
shll
xchg
mov
inc
push
xor
push
cmpsb
mov
ljmp
push
test
jl
in
jge
jge
sbb
lcall
popf
lods
add
xor
adc
scas
inc
lods
or
into
mov
cmp
inc
lds
mov
ret
and
gs
fidivrs
jnp
push
jb
fld
aas
std
adc
dec
xchg
mov
and
mov
movaps
test
add
add
mov
pop
or
aas
and
lahf
fwait
sbb
out
mov
in
or
and
clc
or
je
pop
pop
hlt
push
adc
popa
mov
aas
jg
std
das
shr
subb
imul
ljmp
inc
repz
or
into
inc
jae
ret
xor
or
jmp
inc
setl
sbb
ret
inc
cmp
mov
divb
cltd
cwtl
int
cmp
loop
popf
mov
shrb
pop
clc
push
sub
mov
xchg
popf
subl
aas
fidivl
test
push
push
pushf
or
jmp
mov
fwait
mov
bound
mov
add
lret
repz
sbb
dec
das
pop
xchg
pop
push
cwtl
out
stos
jecxz
das
jnp
int3
clc
sbb
mov
dec
xlat
repz
aaa
repz
xor
fidivrs
sub
mov
cmp
loopne
dec
cli
inc
into
das
mov
cmp
test
popf
inc
or
test
scas
dec
sbb
push
jle
ljmp
and
in
push
jecxz
das
xchg
rorb
imul
popa
sarl
out
xlat
jno
cwtl
sbb
mulb
jb
cwtl
pop
jb
sbb
ficomps
cmp
dec
je
and
cmp
pop
mov
jb
xchg
out
inc
xor
addl
pop
sbb
jle
adc
pop
inc
pop
jmp
xlat
inc
push
pop
cs
andl
shl
inc
sub
fmuls
push
stos
or
fwait
out
int3
dec
dec
inc
inc
jle
dec
leave
fsubrl
out
out
pop
mov
imul
mov
lcall
out
arpl
jno
cmp
jno
mov
or
ret
call
adc
sti
push
fwait
rorb
mov
out
loopne
mov
add
inc
pop
lods
stos
or
fcomip
arpl
fiaddl
int3
lcall
or
mov
ja
mov
lock
lock
add
addr16
xchg
testb
jg
or
fsincos
mov
xchg
les
pop
push
jp
push
fistpl
out
push
clc
jmp
loop
pop
cmp
loop
loop
lret
daa
add
mov
jg
cmpsl
xchg
ficompl
bound
or
add
mov
aas
js
notb
and
pop
aas
mov
adcb
dec
add
daa
fisttpl
scas
iret
mov
jne
add
fs
sbb
jmp
jno
push
repnz
cwtl
out
xor
outsb
insb
and
jecxz
jnp
pop
dec
mov
jmp
mov
push
cmc
jno
mov
rcll
int3
es
stos
xchg
ja
fisttpl
and
or
pop
jae
pop
mov
mov
lahf
imul
xor
cwtl
sbb
dec
dec
cltd
sti
jb
stos
lds
xchg
and
fcomps
mov
insl
pop
arpl
pop
or
or
sub
dec
push
cmp
sub
or
enter
mov
push
scas
loop
ret
jo
and
cmc
enter
jnp
fwait
push
les
push
repnz
mov
aas
mov
push
mov
xlat
aam
vpslld
mov
push
sar
pop
arpl
pop
int3
inc
lock
add
mov
sbb
mov
push
repz
test
jae
inc
scas
xor
and
dec
pop
call
mov
fstl
inc
mov
pusha
pop
dec
push
mov
push
jno
or
dec
outsl
mov
xchg
pop
ss
mov
pop
pop
adc
add
mov
out
and
pop
dec
test
jae
lret
lcall
cmova
inc
lock
mov
inc
loop
pop
lret
add
mov
aaa
fsubp
cmp
outsl
dec
repz
mov
int
decl
dec
jne
lahf
mov
adc
cmpsl
dec
and
push
daa
xor
pop
mov
or
out
xchg
das
jg
jb
mov
out
push
lcall
dec
xchg
cwtl
pop
std
pop
outsl
stos
test
and
jno
and
dec
or
jb
mov
jl
scas
mov
mov
test
test
xlat
fmul
ret
mov
mov
mov
cmp
pop
scas
xacquire
inc
mov
fwait
sarb
xor
xchg
aaa
xchg
lods
and
rorb
addl
mov
lds
or
dec
mov
aam
clc
jecxz
or
stos
pop
insl
mov
mov
jns
xchg
fs
sub
aaa
push
jae
push
jno
lldt
outsl
fwait
xor
mov
shrl
repz
add
adc
rclb
ljmp
dec
bound
or
push
lock
sbb
lahf
xchg
ja
lcall
popw
inc
lahf
mov
xor
outsl
pop
es
xor
mov
mov
cmovnp
scas
add
xchg
sti
and
sub
xor
pop
lcall
inc
and
jnp
jo
shrb
out
jae
pop
rcll
push
aas
bnd
sti
mov
xor
cli
xlat
adc
pop
inc
pop
dec
xchg
push
ja
push
shlb
xchg
psllw
cmpsl
push
jle
dec
push
pop
sbb
mov
push
test
mov
decl
clc
mov
lahf
or
outsb
repnz
jae
ds
ja
in
nop
stc
or
dec
and
cmpl
sub
outsb
jnp
out
ja
lds
add
add
fwait
lret
iret
jecxz
bound
adcl
sub
insl
jecxz
pop
add
dec
ja
imul
mov
push
testl
push
out
xor
in
xchg
pop
psllq
xchg
xchg
fninit
xchg
dec
icebp
fcmovnu
aas
rclb
or
ljmp
scas
adc
rcll
call
ffreep
pop
stc
adc
aaa
adcb
mov
cmpb
out
out
aas
dec
xor
decl
mov
jnp
or
outsl
push
or
decl
pusha
vpsubusw
nop
jg
stos
call
or
jle
cmp
test
fxtract
xchg
insb
push
test
push
insl
ret
mov
sarb
or
add
ficoml
bound
ljmp
daa
repz
outsl
pop
push
sbb
pop
inc
ds
mov
mov
push
jmp
incl
scas
add
ja
dec
addb
rcl
pusha
add
loopne
aad
inc
je
add
ret
addr16
mov
dec
mov
sbb
in
pop
dec
add
push
ds
pop
mov
jmp
call
jle
out
ffree
les
jbe
inc
or
jp
stc
rclb
shrl
jle
popa
mov
inc
mov
nop
mov
push
cli
cmpsb
loopne
pop
test
dec
ret
push
outsb
mov
bound
pop
in
mov
divl
in
fyl2xp1
iret
inc
aaa
push
stc
rcrb
cmpl
inc
mov
sub
loop
daa
ucomiss
test
out
sbb
out
or
pop
ljmp
xchg
fprem1
movsb
sub
xchg
jmp
pusha
fs
insl
insb
xchg
lea
mov
cmp
test
jno
jbe
xchg
std
adc
ret
ret
lret
mov
mov
inc
pop
adc
mov
push
leave
cs
inc
xchg
daa
mov
sub
push
mov
jle
sarl
add
add
and
push
test
pop
and
mov
mov
push
pushf
push
cmp
stc
fs
jbe
adc
add
dec
scas
data16
popa
cmp
notl
iret
rorl
daa
out
movsb
shlb
dec
and
dec
push
shrb
dec
pushf
dec
data16
dec
fidivl
jne
pushf
xchg
test
push
dec
xchg
fwait
jno
pop
sbb
cmpsl
adc
add
cmpsl
cmpsl
fidivl
add
outsl
xor
fmuls
mov
aas
pop
hlt
pop
ds
imul
cmp
loope
sub
and
xchg
insb
xchg
sbb
jle
cmc
dec
gs
and
jle
xor
iret
scas
cmp
mov
add
fs
jbe
pop
loope
rolb
imul
cmpl
or
andl
jo
sub
test
in
jmp
or
inc
sahf
imul
roll
pop
out
daa
inc
mov
fwait
inc
movsb
xor
jo
jle
jmp
jle
inc
push
out
cmpsl
jnp
lcall
fldl
sahf
add
out
je
adc
sbb
dec
inc
push
xor
xchg
stos
mov
or
sub
mov
je
xchg
mov
loopne
lcall
jg
push
pop
pop
int3
xchg
xor
aam
scas
or
sbb
iret
pop
in
or
dec
lock
lahf
movsl
or
push
mov
jae
cmp
xor
ja
imul
push
push
and
mov
push
xlat
pop
in
frstor
mov
push
dec
jg
pushf
scas
lahf
lea
iret
sarl
das
jg
and
mov
xor
sbb
cmp
lahf
push
sub
jnp
lret
sub
test
dec
push
mov
mov
mov
cwtl
xor
cmp
clc
mov
dec
adc
scas
incb
test
sub
or
dec
mov
mov
push
or
xor
mov
xchg
cmpb
cmp
mov
outsb
lret
xor
mov
jae
add
sbb
jl
or
das
xchg
mov
fmul
repz
roll
lret
popl
adc
sub
pop
into
imul
ja
scas
dec
je
pop
xchg
or
mov
dec
addl
mov
or
push
dec
fwait
inc
lret
jge
mov
jle
int3
mov
pop
stos
mov
cmp
dec
mov
popf
pusha
test
xchg
bound
add
mov
in
pop
cld
inc
cmp
jnp
cmp
repz
mov
push
insb
mov
js
xchg
inc
dec
cmp
test
sbb
adc
dec
or
jp
mov
inc
pop
fnstcw
loopne
add
orl
pop
fnsave
jno
pop
adc
lcall
dec
mov
push
dec
into
mov
add
sbb
lea
xchg
in
or
pusha
cmp
pop
sub
sub
add
or
cmp
mov
add
or
push
movsb
xor
mov
enter
ja
pop
sub
add
lret
test
xchg
in
fiaddl
xchg
int3
pop
pop
out
push
jmp
fstp
fsub
xor
aas
enter
xlat
jmp
add
and
adc
test
sbb
rcrb
adc
pop
sub
lds
je
jp
idivb
inc
ret
arpl
scas
cli
arpl
inc
adc
pop
test
adc
mov
lret
loope
aam
inc
notb
scas
fwait
das
add
inc
dec
call
call
inc
add
movsb
arpl
inc
or
inc
cmpsl
outsl
xchg
enter
stos
jb
mov
push
xchg
inc
push
xor
add
rcrb
xchg
jns
or
push
outsl
sub
dec
sbb
shlb
adc
jg
inc
and
imul
push
addr16
fmuls
notl
popf
push
jp
shlb
push
addr16
mov
movsb
scas
push
ret
int3
das
adc
inc
bound
sbb
loop
pop
and
aam
and
hlt
inc
push
pusha
outsl
pusha
test
loop
movsb
js
push
xchg
push
jmp
rcll
and
popa
movhps
pop
dec
inc
lret
jo
jbe
cmc
rorl
daa
cmp
test
push
push
int3
mov
or
shlb
add
xchg
mov
jl
jle
add
mov
push
pop
fs
sub
insl
psadbw
add
lret
mov
fwait
jmp
inc
das
lahf
push
xorb
push
push
rol
inc
jbe
pop
inc
rclb
mov
or
pushf
mov
movswl
add
mov
mov
adc
in
cmp
push
push
xchg
test
negl
je
sub
aaa
sti
cmp
pop
cmp
stos
cs
ljmp
mov
lods
fidivrs
mov
xlat
aas
daa
pop
ljmp
mov
jecxz
jg
jno
push
lods
pusha
pop
outsl
mov
mov
sub
incb
sahf
adc
pop
adc
inc
repnz
mov
mov
or
mov
jge
mov
xor
hlt
dec
shrl
fistps
mov
xor
jg
ud2
or
push
sahf
pop
dec
and
int
adc
in
iret
mov
fisttps
mov
aas
scas
xchg
stc
cmpb
inc
sub
cs
mov
test
push
shlb
dec
jecxz
add
xchg
cmp
xchg
clc
pop
daa
fwait
adc
or
mov
cmp
orb
lcall
mov
pop
sbb
shlb
push
pusha
lret
cmc
addr16
in
out
xor
std
dec
jge
cmpsl
clc
sbb
lods
repz
dec
xchg
das
sti
jle
ret
jbe
dec
jne
scas
or
dec
fiaddl
rcl
cld
or
lods
lret
cs
ficomps
xchg
and
negl
cmpsl
lret
xchg
addr16
ss
out
mov
mov
and
js
popa
les
loopne
cs
ljmp
push
xorb
sbb
lds
fwait
imul
enter
sbb
cld
outsb
enter
inc
test
movb
add
adc
xchg
xor
psubusw
adc
cmc
jne
sti
inc
fwait
iret
enter
cltd
push
repz
sti
clc
mov
push
cld
jmp
outsl
add
mov
pop
jnp
lea
js
jnp
xchg
mov
add
icebp
addr16
adc
nop
xchg
or
das
stos
xor
pop
dec
adc
mov
mov
xor
dec
test
mov
dec
test
mov
pop
xor
jnp
pop
out
outsl
mov
aam
xchg
mov
and
loop
jns
jae
aaa
sub
enter
aaa
rep
pop
test
mov
fstpl
fsts
decl
lcall
into
xchg
push
stos
sarl
or
movswl
es
out
xchg
xchg
cmp
mov
jl
jne
out
mov
ja
mov
push
or
jnp
cmpsb
pop
jb
add
fisttpl
mov
dec
stos
cs
mov
sub
mov
add
loop
inc
add
cli
out
add
or
ja
ret
cmp
jp
cmc
les
cmp
jecxz
shlb
mov
decl
xchg
pop
jbe
bound
or
dec
pop
ss
jle
and
push
pop
pop
mov
xor
int
lret
adc
cmpsl
pop
pop
xchg
fiadds
pop
cmp
jg
ds
ret
inc
or
jle
repz
adc
enter
add
les
add
add
inc
jge
sbb
add
xchg
negl
jg
dec
aam
xorb
rolb
add
shll
adc
mov
adc
inc
test
lods
pop
fsubs
mov
xchg
pop
scas
cmpl
mov
je
ret
aam
nop
or
insl
test
add
ljmp
icebp
xchg
cmp
out
jmp
ljmp
add
dec
pop
out
cwtl
jns
mov
xor
cmp
jmp
dec
icebp
mov
or
fidivrl
xchg
push
mov
push
jl
gs
sbb
push
cld
xlat
cmc
inc
testl
jle
ret
inc
stos
out
jo
test
addb
push
adc
scas
xor
xor
push
movsl
imul
mov
jb
pop
xor
pop
and
shll
into
repz
lahf
push
jp
cmp
mov
stos
inc
jae
lods
xor
lods
popl
jg
cwtl
inc
in
nop
fwait
and
ja
push
subl
shlb
popf
jns
mov
stos
add
lock
in
mov
mov
stos
push
cltd
cltd
mov
fwait
int3
xchg
shl
daa
mov
rolb
iret
fidivl
repz
pushl
cld
push
fistpl
jns
ljmp
add
enter
nop
push
pop
aas
out
add
nop
pushf
les
mov
add
fistps
shlb
dec
inc
inc
nop
xor
or
imul
sbb
or
das
enter
xchg
adc
mov
sbb
scas
cs
xchg
out
repnz
push
rcll
int
stos
mov
jle
je
daa
add
out
xor
dec
dec
arpl
mov
adc
add
add
in
mov
lds
inc
ss
ja
imul
ja
or
push
repz
dec
aam
repz
sbb
lahf
sub
mov
pmulhuw
jnp
jmp
loope
lds
aam
mov
and
into
sti
fs
add
adc
and
outsb
sub
xchg
sub
jnp
fs
mov
ret
outsl
and
pop
xor
fs
pushf
xchg
add
icebp
adc
and
ljmp
sarb
cmp
adc
inc
sahf
fsubrp
enter
mov
mov
adc
int3
aad
iret
pop
outsl
jns
loope
in
inc
push
popa
add
jmp
mov
addr16
pop
push
adcl
xlat
bound
bnd
mov
fdivl
ret
lock
inc
aas
xor
jbe
inc
mov
adc
fcoms
xorl
addr16
pushl
movb
jp
adc
add
arpl
mov
dec
clc
and
bound
das
mov
cld
jae
xchg
test
mov
imul
out
sub
jnp
repnz
mov
test
or
mov
xorb
negb
xor
addl
jo
dec
pop
cmp
xor
adc
pop
ja
add
sbb
mov
repz
mov
insb
mov
mov
je
daa
fisttps
push
mov
dec
cmpsl
xchg
mov
test
sub
push
mov
pop
add
les
or
jno
add
inc
in
xor
scas
mov
xlat
imulb
fldl2e
mov
scas
fmuls
shll
add
neg
pop
ficomps
push
cmpsl
pop
or
test
add
iret
mov
les
xor
and
scas
xchg
daa
cmp
mov
aaa
jge
add
mov
jbe
sbb
pop
out
sahf
test
jmp
sub
xor
sub
inc
cmp
cmpsl
std
xchg
add
cs
call
dec
dec
adc
jecxz
mov
rcrl
inc
lret
imul
repnz
ret
sbb
jle
pop
sbb
push
push
inc
mov
fdivrs
addr16
mov
mov
fldt
ds
fcomi
das
cli
sarb
fwait
cs
and
mov
fwait
sub
pop
cmpsl
aas
dec
imul
xor
xor
jecxz
mov
aaa
jg
cmp
mov
adc
cmp
icebp
cmp
xchg
bound
mov
adcl
ficoml
cmpsl
xchg
aaa
dec
lret
sbb
jns
jp
dec
mov
fdivp
jp
lret
xor
mov
cli
std
jge
mov
enter
cmovp
incl
xor
subb
inc
pop
cmp
jg
lret
jle
aam
dec
mov
or
aas
mov
sti
sbb
mov
mov
adc
rclb
std
jg
lea
jg
mov
push
push
adc
add
mov
pushf
iret
cmpsl
movl
dec
sub
fldt
inc
hlt
lret
add
loopne
in
or
movsl
out
aas
cltd
dec
mov
jae
jo
add
imul
sti
dec
mov
adc
ja
dec
ret
int
enter
jo
fistps
cmp
mov
nop
pop
jp
jmp
test
sub
xchg
inc
push
je
fsubrl
cld
testl
jae
ja
and
movl
add
mov
fldenv
push
dec
adc
repnz
out
scas
cmp
sub
lcall
jns
adc
popa
stos
push
dec
frstor
testl
and
xchg
fldenv
ds
callw
add
xchg
enter
ss
dec
lock
or
xor
jg
les
je
std
out
sbb
imul
das
push
pop
dec
mov
inc
lcall
lahf
fimull
sarb
jbe
cmp
mov
push
xor
addb
dec
mov
outsl
movsb
loopne
mov
scas
sbb
ja
shll
pop
cmp
nop
push
inc
xorb
or
add
sub
into
mov
dec
inc
xchg
and
aaa
jmp
xor
or
sbb
adc
mov
adc
lds
pushf
ret
add
inc
lds
cmp
mov
fadds
cmpsl
cmp
adc
in
int3
sbb
out
xchg
je
mov
adc
mov
mov
sbb
inc
popf
sub
cmpsb
into
dec
jnp
movsb
mov
cmp
sbbl
mov
adcb
out
iret
inc
outsl
fs
ja
mov
push
jae
xchg
icebp
aam
push
scas
aaa
jle
call
insl
repnz
inc
sbb
add
leave
js
outsl
movb
daa
mov
sub
imul
push
xor
data16
aad
daa
int
push
mov
sub
js
xor
lds
mov
pop
jp
xor
sub
cmpsl
pop
jp
aas
pop
dec
lret
pop
sbb
sbbb
jl
sbb
dec
pop
popa
shlb
repz
ljmp
in
or
into
int
les
push
mov
cmc
les
mov
mov
push
icebp
iret
pop
xor
add
dec
jmp
sbb
cmpb
std
pop
int3
cmpb
out
cmp
lret
into
jbe
mov
test
xor
pop
or
ret
fidivrs
push
inc
mov
add
addr16
add
popl
dec
mov
clc
add
inc
or
test
enter
ret
aad
push
roll
test
dec
lods
shrl
imul
or
pop
lods
out
push
addr16
pop
push
add
mov
push
cmp
hlt
or
dec
pushf
hlt
jnp
mov
iret
mov
sbb
mov
push
dec
addr16
ja
hlt
add
sbb
test
clc
jl
cmp
inc
std
mov
jge
sbb
out
orb
das
das
fldl
xor
cmc
jmp
mov
dec
and
fistps
xlat
aam
inc
mov
jo
or
pop
pop
sub
push
pop
add
aas
out
enter
outsb
and
sub
bound
cmpb
sar
sub
je
mov
pushf
pop
insl
xor
out
add
inc
inc
fwait
pextrw
dec
mov
mov
dec
lahf
push
fdivl
mov
mov
aad
js
ret
sbb
mov
add
ss
sub
mov
xchg
nop
ja
jle
fcmovne
inc
daa
sahf
dec
add
sub
pop
pushf
iret
xor
xlat
mov
cmp
mov
push
outsl
push
push
hlt
jle
cmp
inc
mov
pmaxub
fisttps
xchg
mov
pop
jle
mov
pop
xor
addr16
or
int3
imul
movsb
jae
mov
cmp
adc
es
imul
sbb
andl
in
imul
push
faddp
hlt
into
mov
sbb
dec
cmp
sub
mov
stc
or
inc
push
jl
sbb
xor
rcrb
or
fcoml
cmp
outsb
cmp
sti
jecxz
sti
mov
jo
jg
test
andb
clc
xchg
lcall
mov
aaa
jae
adc
fwait
fs
ret
xor
das
shrl
das
xchg
xchg
adc
jo
xlat
xorb
cmpsl
xor
inc
pop
nop
mov
movsb
fdivl
inc
bound
pop
fucomi
sub
lret
dec
mov
ljmp
out
mov
ss
push
push
stos
lret
and
out
out
es
pop
fcoml
inc
xor
adc
clc
insl
push
das
test
pop
push
or
and
data16
shll
lahf
into
fidivs
lcall
aas
leave
pop
movl
das
pop
repnz
dec
xor
or
or
add
test
into
cmpsl
pop
pop
mov
sub
push
mov
dec
adc
rcr
adcl
push
sbb
lds
mov
mov
cmp
xchg
aad
aas
and
clc
rorb
in
fs
xlat
sbb
and
pop
enter
mov
addb
mov
lret
dec
add
popf
add
jmp
aad
mov
mov
sub
mov
xchg
outsl
movsb
jmp
or
out
inc
outsl
jl
jae
imull
xor
maskmovq
mull
insb
pop
lret
fcmovnbe
repz
mov
ficoml
inc
cmpsl
or
pop
dec
imul
in
xlat
enter
dec
or
addb
sub
mov
aas
or
je
out
out
iret
jbe
mov
jp
mov
xsave
orl
ret
sbb
sarb
popf
push
fcomps
test
push
add
mov
outsl
xchg
ja
jge
fimuls
loopne
jno
xor
int
mov
mov
xor
mov
adc
jb
iret
pop
in
mov
shl
negl
fistl
sahf
aaa
mov
jg
mov
data16
push
xor
jl
push
push
aad
aaa
and
hlt
bound
xlat
test
mov
sbb
push
ret
inc
pop
dec
xchg
and
out
in
addb
dec
sub
jle
rol
jp
ret
mov
outsl
mov
inc
mov
add
inc
add
out
add
aas
loope
loope
lods
pop
or
in
sub
dec
mov
push
int
test
inc
mov
int
xor
jmp
inc
mov
xor
nop
divb
bound
adc
lcall
mov
or
add
mov
stos
pop
push
pop
dec
cld
inc
jg
loopne
jg
push
and
inc
in
das
mov
fstpl
inc
mov
les
rcrl
insb
jb
mov
jnp
out
jns
jg
add
testl
mov
and
jb
mov
lret
int
mov
inc
pop
push
cmp
cli
xchg
imul
cmpsb
push
pop
dec
dec
jo
push
xchg
dec
pop
xchg
pop
loop
sbbb
jmp
movsbl
ret
sbb
flds
into
mov
mov
inc
cmp
cs
outsl
push
xlat
sub
dec
cmp
dec
mov
sbb
ljmp
outsb
xchg
fistps
stc
dec
addb
or
es
jns
in
jns
outsl
xchg
adcb
out
or
add
pop
test
cmpl
cmc
mov
xchg
fstl
pop
bound
cmp
ret
xchg
int3
and
fnstenv
mov
adc
loope
xchg
sub
fistpll
dec
dec
xlat
push
sbb
ret
mov
ret
int3
int3
lds
mov
xor
adc
insb
dec
inc
sbbb
cmpsl
int
mov
lods
pushf
cli
cmp
sbb
data16
ds
mov
cmp
sbb
add
xchg
lcall
aad
mov
mov
add
mov
ret
push
mov
mov
pop
movsb
dec
xchg
sub
push
and
mov
incl
enter
hlt
add
push
xchg
stc
mull
aad
dec
testl
sti
hlt
out
dec
push
test
xchg
xor
in
mov
push
jb
or
or
pusha
lcall
cmc
push
out
push
mov
xchg
cli
lods
arpl
popf
loopne
imul
push
pop
add
pop
and
aad
cmp
fwait
aas
cmp
scas
xchg
adc
jle
add
adc
jmp
test
add
dec
pusha
mov
imul
out
add
push
mov
icebp
pop
jbe
mov
or
ljmp
dec
pop
imul
sbb
xchg
mov
xor
push
stos
imul
cmp
fnstcw
aas
pushf
sahf
push
or
lret
cltd
sub
mov
mov
test
cld
mov
cmp
ss
jnp
adc
popf
out
mov
outsb
shrb
movsb
sbb
cwtl
jle
inc
mov
fistl
add
jg
and
enter
jnp
lret
aaa
inc
adc
lods
cld
pop
add
adc
outsl
dec
push
dec
addb
scas
sbb
lahf
inc
pop
addr16
fadd
jne
inc
adcb
xadd
xor
sub
imul
dec
xorb
pop
ds
jmp
test
mov
and
sub
nop
and
inc
filds
mov
hlt
add
pop
inc
test
jns
push
insb
dec
ror
mov
lods
pop
sbb
mov
inc
das
unpckhps
dec
xor
push
or
jp
das
adc
lods
imull
cmpsb
outsl
inc
sbb
push
mov
mov
pop
push
inc
jb
push
ret
ret
rorl
pop
pop
push
inc
mov
add
mov
out
inc
iret
xchg
les
je
sbb
mov
aam
lret
js
mov
mov
sbb
cld
pop
mov
sub
ficoml
addr16
imul
or
add
mov
sbb
fidivrl
cmp
push
pop
loop
ds
pop
pop
loop
mov
fimull
add
xchg
pop
jle
jae
cmp
dec
mov
out
mov
stos
or
je
pop
test
jg
jle
jg
or
pop
lds
jge
push
inc
jge
xor
mov
jg
add
mov
mov
out
or
mov
pop
and
push
into
jne
daa
inc
mov
mov
bound
sbbb
inc
outsl
enter
push
incl
jle
xchg
lods
cmc
sub
xchg
repnz
addb
mov
push
lahf
pushf
and
adc
xor
loop
cmpsl
inc
xor
or
sub
iret
int
scas
xchg
mov
std
aaa
xor
xlat
push
push
mov
xchg
sub
jb
movsb
mov
fistps
sbb
sbb
adc
js
scas
sub
rcrl
push
dec
out
out
mov
sub
sahf
push
jecxz
shlb
mov
xlat
add
jge
inc
dec
fadds
in
lods
or
insb
xchg
add
cmp
repz
mov
adc
inc
lret
cmp
jg
inc
lret
scas
mov
push
repnz
test
add
push
mov
add
xchg
pop
push
cmpsl
neg
dec
popf
mov
aas
test
into
mov
add
mov
mov
mov
icebp
push
inc
rcl
mov
add
test
xchg
adc
push
ljmp
or
ja
inc
int3
add
mov
jge
arpl
jg
icebp
int
js
xchg
rolb
rorl
rclb
imul
mov
or
mov
mov
inc
mov
fnsave
jmp
inc
iret
push
out
inc
fildl
pop
ljmp
cltd
mov
inc
add
mov
and
push
pop
pop
pop
fs
mov
xor
cli
pop
andl
scas
jne
pop
test
pop
cwtl
add
cmpsb
and
loopne
mov
dec
adc
int3
jmp
cmp
pop
packssdw
loopne
pop
pop
addr16
dec
imull
pop
adc
sub
xchg
pavgb
mov
xor
mov
and
lcall
imul
cmp
xor
fdivrs
test
mov
andb
dec
lds
stos
in
repz
aas
pop
cltd
je
jmp
rolb
push
in
or
fbstp
test
fidivs
rcrb
cmp
add
mov
jnp
sub
rol
testb
or
mov
std
fdiv
sbb
std
inc
in
outsl
inc
mov
or
lret
shl
lahf
fwait
cmpsb
sarb
sahf
and
adc
add
cmpsl
repz
push
mov
inc
sbb
les
fisttpll
cmpsl
arpl
out
sti
es
fbld
pushf
push
xchg
inc
jg
cmp
iret
sub
rcrb
addl
call
lods
das
jb
ffreep
arpl
loop
push
outsb
fimull
xchg
jg
aas
mov
mov
repnz
mov
add
inc
sti
popf
ja
andb
ret
inc
ret
stos
inc
adc
inc
or
aas
jg
adc
std
and
jg
stos
or
sbb
enter
inc
pop
mov
sahf
mov
insb
dec
cmp
in
xor
ja
outsl
das
mov
repz
inc
pop
mov
gs
das
jno
fwait
pop
add
mov
mov
mov
pusha
sub
add
imul
loop
es
add
dec
ljmp
inc
xchg
ror
ss
mov
ja
leave
aaa
cwtl
cmp
cmp
mov
int
mov
scas
add
adc
imul
dec
clc
insb
jae
int
inc
popa
cmp
or
cmp
push
cwtl
inc
ja
gs
cmpsl
aaa
cmp
add
sbb
das
icebp
popl
pop
popa
xchg
aaa
mov
std
shl
rolb
mov
js
xor
in
mov
xchg
sub
fdivl
out
inc
frstpm(287
cmpsl
call
xor
arpl
push
dec
testl
fbld
inc
dec
lret
bound
dec
dec
out
pushf
leave
movntq
pop
or
aas
clc
mov
je,pt
pop
nop
ja
aaa
hlt
dec
iret
shl
add
js
xorl
xchg
loopne
mov
jle
adc
mov
fsubrl
and
mov
add
pop
mov
add
mov
pusha
push
cmpsl
mov
jne
xor
push
pop
inc
dec
xchg
push
mov
push
imul
mov
leave
ja
daa
movl
or
jg
push
xor
xchg
add
mov
pop
and
xor
add
inc
add
pop
ds
mov
rorb
stc
test
dec
into
in
aaa
leave
jle
dec
jns
adc
pop
cmpsb
xor
cmp
outsl
xchg
aas
imul
loopne
sbb
fcomip
xorb
jbe
daa
xchg
testb
pop
mov
push
dec
dec
pop
adc
adc
add
std
xchg
mov
fistpll
cld
push
jnp
fisttpl
xchg
adc
inc
test
xchg
or
ds
icebp
test
filds
pop
add
sub
scas
nop
pop
pop
out
pop
mov
into
loope
mov
out
imul
mov
inc
dec
adc
pop
jle
outsb
and
dec
sbb
inc
xor
aam
dec
and
imulb
jp
jo
xor
outsb
xor
scas
cs
mov
rorl
rolb
fsubrl
pop
decb
or
inc
test
push
mov
addl
test
inc
jp
lret
pop
inc
xchg
sbb
sahf
notl
data16
icebp
movb
lock
hlt
dec
icebp
xchg
orb
int3
add
cltd
xchg
cmp
xchg
int
shll
mov
dec
dec
xchg
push
lcall
test
fwait
addr16
out
and
out
push
mov
fldcw
pusha
or
or
stos
jmp
jbe
xor
outsl
jnp
push
call
adc
aam
mov
sbbl
and
call
movl
add
pop
loope
pop
xchg
sub
ret
push
jecxz
cmpsb
addr16
mov
data16
je
inc
test
add
iret
add
aaa
mov
daa
inc
mov
add
pushf
cmp
iret
aaa
and
pop
orl
lret
push
and
idiv
xor
push
add
jecxz
ret
into
xor
or
out
cmc
lahf
orb
movsb
xor
fwait
pop
call
and
mov
xchg
roll
mov
or
jns
outsl
movsb
arpl
fwait
mov
adc
lahf
ror
das
add
xor
sub
jnp
out
movl
mov
push
xchg
dec
jecxz
ret
dec
lret
pushf
stos
packsswb
cmp
out
divl
idiv
lods
addr16
insb
adc
enter
mov
addr16
push
rcrb
movl
iret
xor
cltd
mov
cmp
nop
movhps
pop
or
mov
loopne
mov
out
ds
and
cmp
xchg
outsl
mov
sti
rcr
addr16
ljmp
addr16
cmpsl
iret
int
js,pn
ja
pop
push
inc
and
mov
pop
icebp
and
insl
mov
xor
cmp
jne
push
jge
addr16
pop
clc
call
movups
push
mov
push
jno
addl
add
dec
bound
scas
mov
and
xor
or
into
pop
mov
mov
jg
seto
shl
sbb
adc
das
add
sti
inc
shll
imul
push
lret
pop
xchg
mov
insl
ret
add
inc
inc
lret
sbb
leave
mov
pop
xchg
adc
cmc
push
cmp
dec
or
sub
sub
not
xlat
jne
jb
test
mov
cwtl
js
pop
icebp
cld
push
icebp
jno
inc
dec
outsb
das
lret
mov
lahf
repnz
call
scas
mov
daa
fwait
in
adc
and
mov
adc
and
in
inc
jg
xchg
mov
mov
inc
xor
imul
sub
and
rorl
mov
xchg
or
sub
movsb
cmp
bound
iret
rorb
or
lret
repz
repz
mov
iret
fistps
pop
dec
fs
loopne
pop
push
shr
aas
mov
ss
in
sarl
js
mov
cmp
mov
pop
sub
cld
lret
xor
outsb
arpl
mov
dec
repz
jno
cmpsb
pushf
sti
push
icebp
movl
pop
outsl
int
mov
in
fistps
das
mov
sbb
int
iret
push
xor
movl
imul
inc
daa
arpl
arpl
and
or
iret
add
inc
out
fsubs
add
pop
or
xor
or
loopne
stos
dec
daa
push
xor
inc
jno
inc
js
push
outsl
fucomi
jp
dec
out
jecxz
ret
add
and
movl
test
xor
rol
mov
jo
jp
jg
iret
add
sti
mov
cmp
sub
or
cs
sahf
mov
push
fmull
test
fs
xchg
xchg
in
cmp
addb
repnz
fidivrl
cmp
sub
popa
les
cs
sti
mov
repnz
mov
pop
jl
pop
cld
aas
cmp
adc
cmp
fucomi
clc
jle
loop
js
jecxz,pt
int3
mov
lret
sub
sbb
cli
sahf
cltd
jge
add
fisttpll
rclb
inc
repnz
aas
push
hlt
xor
shll
test
stos
cltd
mov
push
idivl
push
push
out
cmp
xchg
inc
outsl
add
mov
test
dec
push
adc
pusha
rorb
test
mov
dec
adc
jo
add
sub
cmp
dec
in
or
inc
sub
add
loopne
inc
loop
and
test
jo
add
adc
stos
xchg
lret
fnstsw
rclb
dec
pop
daa
add
sbb
add
or
add
sbb
sub
flds
pop
jnp
fldl
sti
out
inc
dec
mov
mov
movsb
aaa
test
lock
sbb
lods
incb
fldcw
repz
js
sub
lahf
bound
pushf
mov
ja
xchg
popf
jp
mov
add
xchg
movsl
jl
outsl
fbstp
iret
sub
jne
out
sbb
nop
ss
xlat
xchg
test
add
jbe
into
inc
dec
pop
iret
flds
das
cmp
xchg
and
fidivrl
mov
rcrl
xlat
ret
xchg
pop
jp
daa
jnp
jp
dec
sub
push
or
mov
or
lock
jmp
xor
popl
jb
inc
add
daa
sub
adc
cmpsl
dec
lcall
jg
les
mov
and
pop
cmp
xchg
add
loopne
cmp
das
push
ja
inc
dec
mov
cmpsl
cs
push
pop
add
cs
out
das
dec
pop
push
out
inc
je
dec
movsl
dec
jecxz
dec
cwtl
mov
rolb
sub
fnstsw
ss
and
out
add
dec
lret
add
loop
jg
xor
das
insl
lahf
es
shlb
cmp
clc
inc
cmpsl
incb
loopne
cwtl
fsubr
shlb
lods
ret
rolb
cmpsb
outsb
arpl
out
loope
loopne
push
mov
mov
adc
and
pop
insb
cwtl
or
xor
enter
adc
cmpsb
dec
pop
and
sub
push
lods
movsb
icebp
xchg
sbb
xlat
sbb
lret
cmp
and
insb
cmpsb
cmp
pusha
lea
enter
sub
lcall
add
popf
pop
xchg
mov
fildl
mov
jnp
pop
icebp
xchg
aaa
test
inc
pop
xchg
xchg
addr16
fnstcw
xor
lods
in
pop
cmpsl
sbb
or
loope
push
lret
jp
jbe
or
subl
mov
cmp
addr16
mov
rclb
lret
or
push
mov
fcompl
mov
std
mov
fidivrl
cmpsl
pop
jle
adc
pusha
lret
jae
loope
scas
adcl
dec
or
mov
pop
sub
mov
push
xchg
cld
adc
call
inc
mov
addl
mov
and
sti
mov
push
dec
sub
out
imul
pusha
jns
orb
lret
loop
adc
popa
insb
pop
out
jnp
aam
call
mov
sub
adc
outsl
mov
push
movb
jo
pop
addr16
jno
or
dec
les
xor
inc
or
ret
pop
push
lret
das
pop
lds
addr16
cmc
inc
dec
ja
fwait
out
icebp
inc
mov
and
sahf
jle
jb
shll
sbb
shl
pop
pop
icebp
fisttpl
popa
jns
xchg
roll
pusha
pop
rcll
jle,pt
add
jg
xchg
fs
pop
leave
mov
jecxz
out
pop
jns
out
lock
cmpsl
inc
add
push
nop
shll
stos
push
and
add
or
push
sub
cmpsl
call
pusha
push
movsb
cwtl
or
add
xchg
lds
dec
and
out
push
mov
push
dec
mov
outsl
jae
mov
sub
add
aas
and
movsl
or
int3
and
out
xchg
lret
xchg
xchg
push
pop
lret
fdivs
and
push
or
and
add
shrl
lods
jecxz
jmp
pop
addl
les
aas
push
lea
lret
test
adc
mov
in
and
cmpsb
push
lcall
push
push
dec
ja
mov
inc
adc
and
mov
or
sub
mov
testb
mov
dec
lock
sbb
jp
fdivr
divb
addb
js
cmc
add
sbb
out
hlt
imul
mov
imul
mov
sbb
push
loopne
les
in
xchg
pop
cmp
push
fadds
aaa
in
xchg
jno
jno
xchg
push
pop
int
xchg
inc
jle
sbbb
subl
xchg
into
cmpsl
adc
pop
jae
xchg
test
loopne
sub
leave
and
fcoms
push
cmp
out
les
lea
push
adc
jne
out
xchg
jmp
xor
fdivl
or
mov
fidivs
add
mov
or
out
aaa
fisubrs
push
mov
cmp
adcb
dec
cmc
aaa
sub
imul
mov
or
inc
pop
jbe
mov
packuswb
lret
imul
or
cmpsl
mov
mov
cmp
and
push
pop
cmpsl
mov
mov
int
xor
in
dec
or
outsb
test
xor
repz
cld
xchg
push
sbb
add
insl
ljmp
jo
mov
push
jg
iret
push
scas
js
stos
imul
stc
mov
jnp
aaa
test
or
fidivs
pusha
dec
mov
clc
mov
dec
stc
sub
mov
mov
push
inc
dec
dec
inc
push
pop
ret
cmp
cmp
fdivrl
pop
mov
fistpl
arpl
loop
ss
call
jnp
incl
insb
or
outsl
test
fnsave
cs
sbb
sbb
stos
inc
dec
fmull
lds
loopne
sub
dec
bound
jb
lcall
in
das
and
aas
inc
out
inc
add
subb
fldcw
std
mov
push
or
loope
aas
ret
test
mov
loopne
aad
mov
lcall
orb
or
hlt
lods
cli
aaa
mov
cli
shlb
pop
jb
jge
cld
push
cltd
idivl
jne
repnz
outsb
cmpsb
add
lahf
pop
push
cli
inc
cli
adc
or
push
cmpb
cmp
andb
jnp
xor
sahf
sub
inc
ljmp
les
je
pop
mov
or
xchg
adc
xor
mov
das
mov
mov
aas
in
push
scas
push
iret
stos
aaa
mov
gs
sbb
adc
repnz
pushf
repnz
or
dec
and
sub
notl
push
cmp
xchg
mov
sub
leave
test
xor
mov
out
mov
roll
idivl
xchg
movl
mov
das
mov
mov
fadds
jp
xchg
sahf
test
aas
ja
das
jp
les
add
into
jnp
cwtl
lds
xchg
fwait
add
add
das
nop
test
pop
shl
dec
lcall
fidivs
cmp
jae
out
xchg
jns
and
or
lret
movb
stos
push
std
xlat
stos
aas
adc
movl
ja
mov
roll
hlt
jmp
xor
fcoms
imul
lret
lods
jmp
imulb
inc
xor
mov
mov
push
and
shl
mov
cmc
adc
stos
test
mov
incl
xor
dec
aas
stc
cltd
dec
cld
add
enter
push
scas
mov
outsl
xchg
xchg
sub
dec
test
cmp
pop
enter
faddl
rolb
jo
sub
add
jle,pn
inc
xchg
lahf
out
xchg
mov
fcmovbe
mov
test
jge
call
or
daa
arpl
aas
cmc
lret
popa
jae
mov
xorb
sub
iret
enter
or
pop
adc
inc
clc
adcl
pop
inc
imul
jecxz
mov
stos
sbb
test
sbbb
inc
jmp
xlat
test
pop
xchg
out
cmp
testb
mov
adcl
test
idiv
out
xor
and
xor
mov
in
add
and
repz
inc
cmp
add
jnp
ret
mov
lea
fsubrp
pusha
ret
dec
xchg
popa
fdivl
xchg
jg
repnz
mov
pusha
inc
cs
lods
xor
xor
xchg
mov
push
mov
aaa
xchg
movsl
arpl
and
icebp
pop
xor
insl
test
adc
mov
das
out
xchg
xchg
pop
ret
and
mov
mov
ret
sbb
jb
out
paddsw
xchg
push
dec
mov
fwait
push
daa
lret
scas
inc
outsl
test
pop
xchg
mov
ds
clc
mov
dec
mov
sub
lods
mov
int
test
push
push
push
pushl
hlt
sti
clc
mov
sub
pop
pusha
addr16
mov
fbstp
xchg
inc
add
lock
mov
and
inc
fists
inc
bnd
mov
pushf
fstl
cmp
xlat
outsb
push
mov
and
sbb
ficoml
cmp
hlt
fildl
adc
or
dec
ret
lahf
sahf
cmp
out
mov
push
imul
out
data16
ja
int3
addr16
inc
je
sti
out
adc
das
insl
mov
push
sahf
lcall
shlb
loopne
in
rcrb
imul
bound
inc
lret
stos
and
dec
jnp
imul
call
rcrb
jae
mov
and
popa
cld
mov
fsubrl
or
push
sarl
pop
nop
push
scas
xor
pusha
mov
fwait
daa
sub
les
pop
lret
sbb
imul
xchg
enter
pop
filds
jg
mov
sbb
movsb
sti
cltd
jmp
xchg
fisubrs
sbb
ljmp
add
cmp
mov
sub
adc
fisttps
rcll
ret
push
mov
in
dec
xor
mov
testl
popa
or
sbb
xlat
rorl
cmpsb
mov
js
push
rclb
pusha
xor
xchg
repz
xchg
push
mov
or
out
and
loope
jg
and
cltd
frstor
out
cld
fucomip
mov
or
addr16
cld
rsm
stos
popf
mov
outsl
cli
das
ja
daa
and
out
add
movsb
adc
inc
cmpl
sub
enter
push
mov
jecxz
cmp
sub
loopne
pop
bswap
xlat
imul
mov
adc
insl
xchg
daa
in
add
jle
data16
out
inc
xchg
enter
pop
sub
jnp
imul
insl
shlb
and
inc
call
sub
dec
adc
mov
push
inc
mov
int
mov
cmp
dec
mov
dec
add
int3
cwtl
gs
inc
and
fwait
test
aas
pop
pop
cmp
mov
sub
pop
rcll
push
push
cltd
pcmpgtw
mov
sbb
cltd
mov
inc
add
les
aad
add
inc
call
aaa
in
cmp
xchg
pusha
mov
add
movl
fnstcw
pcmpgtw
or
dec
mov
ret
faddl
cld
fwait
mov
adc
clc
xor
or
notl
jbe
xor
fistpl
mov
push
rol
xor
adc
xorb
rolb
cmove
xor
cmpsl
inc
fmul
bound
pop
push
mov
adcb
mov
add
andb
bswap
aas
sub
idivl
outsl
sub
jg
je
or
jno
xorl
pop
pop
pop
aas
scas
mov
ljmp
movsb
push
push
jg
inc
mov
call
lea
ja
cmpsl
jmp
es
xchg
fldcw
cmpsl
jecxz
mov
insl
fiaddl
fistpl
and
or
repz
leave
test
dec
sbb
aam
or
inc
xchg
jnp
sub
movntq
add
xchg
arpl
cmpsb
shll
fldln2
jns
push
pop
ret
pop
loop
cs
mov
pop
xorb
aaa
sahf
fsts
pop
mov
add
push
pop
stos
loopne
dec
xchg
and
pop
inc
sub
bound
call
mov
adc
xor
sub
push
fimull
data16
xchg
inc
cli
and
rorl
call
mov
add
scas
sti
inc
adc
sbb
adcl
inc
insl
fisttps
ficoms
iret
pop
loop
mov
push
iret
push
pop
test
daa
inc
add
inc
into
vcvtpd2ps
add
jns
lock
xchg
sub
sahf
icebp
enter
mov
add
pop
addr16
pusha
iret
mov
mov
pop
xor
int
push
mov
pop
push
aam
ja
test
test
mov
push
sahf
add
pop
sbb
test
out
out
pop
test
jb
mov
ja
ljmp
or
mov
jns
subb
sbb
fwait
mov
sub
iret
repz
xchg
mov
adc
dec
je
xlat
fimull
out
sbb
jmp
add
addr16
dec
inc
add
cld
add
aad
test
push
jle
sbb
incb
pusha
fcmove
pushf
cmp
aad
test
cmp
dec
adc
dec
test
addr16
inc
out
dec
xchg
dec
sti
push
ds
fxch
popa
outsl
pop
jge
adc
lods
in
inc
pop
xor
maskmovq
imull
add
mov
add
mov
cmovbe
and
cmovns
jnp
xor
cmp
pop
test
xchg
mov
dec
addb
test
testl
add
loopne
dec
adc
and
cwtl
iret
push
sbb
xchg
push
pop
pop
ja
subl
adc
mov
inc
out
push
push
mov
cmpsl
out
sbb
pop
push
sbb
adc
sarb
data16
out
or
xchg
lods
int3
fmuls
clc
stos
xor
shlb
and
jmp
cmp
hlt
jge
mov
and
push
cli
dec
adc
hlt
out
mov
xchg
imul
pusha
inc
fmuls
lahf
ret
jp
pop
and
or
jp
bound
mov
pop
xlat
mov
add
sub
loopne
popf
mov
test
lret
cmpsb
xor
inc
pop
shlb
aaa
inc
pushf
cmpsl
xchg
xchg
mov
cmpsb
loope
cmp
dec
xchg
cmpsl
or
cmpsl
xor
sub
push
std
lea
fmulp
cmpsl
or
rorb
loope
lret
aam
xlat
push
mov
fwait
addr16
rcrb
shll
mov
xchg
mov
rolb
mov
push
xchg
sub
push
aam
push
mov
jbe
jns
frstor
aas
arpl
pop
stos
jbe
sub
xchg
mov
xor
xchg
stos
mov
das
loop
push
xchg
pop
adc
inc
es
pop
test
rcrb
mov
ja
mov
add
mov
test
test
adc
pop
pop
pop
pop
push
push
outsl
push
dec
lods
inc
inc
cmp
xchg
dec
and
sbb
xor
dec
xchg
jle
ja
mov
outsl
push
test
jno
jo
sbbb
jae
das
add
in
divb
ror
rorl
and
addb
jg
push
les
lods
push
xchg
ret
push
mov
lcall
or
loope
mov
movsb
dec
jae
sub
orl
pop
push
cmc
mov
jle
adc
mull
cwtl
fmuls
mov
mov
pop
subb
xchg
outsl
push
test
aas
rcrb
sub
aad
aad
xchg
orl
mov
hlt
dec
es
popf
test
xchg
xor
addl
jbe
pop
movl
mov
or
pop
adc
dec
sbb
add
pop
inc
mov
push
xorl
clc
call
xor
push
ljmp
test
pop
sub
loopne
cmp
cmpsb
dec
inc
xor
cld
xchg
in
jns
sub
mov
insl
add
inc
jnp
and
add
jo
mov
in
loop
sub
jg
mov
lods
bound
into
lahf
mov
call
mov
pop
sbb
rorl
xor
jmp
daa
inc
mov
fld
inc
push
aaa
lods
push
or
inc
cmp
insl
adc
js
push
push
in
sub
shlb
xrelease
subl
addr16
jo
or
dec
sbb
or
push
fidivrl
xor
pause
ficoml
inc
call
aam
adcl
inc
ljmp
pop
aas
mov
cmc
mov
add
jno
das
aas
lea
bound
add
out
ja
scas
sub
fistpl
cmp
ret
enter
pushf
jmp
cmpsl
addr16
notl
sub
ss
mov
lcall
push
test
mov
adc
mov
and
repnz
dec
sbb
pop
mov
mov
inc
rcll
xor
repz
pusha
rorb
and
xlat
aas
xor
test
repz
mov
pusha
xlat
push
ss
mov
fbstp
aas
rcr
pop
jge
mov
sub
push
pop
ret
lds
arpl
jo
add
inc
int
rorb
push
testb
nop
iret
push
out
push
psubb
and
inc
les
inc
mov
aaa
inc
dec
sbb
decl
insb
xchg
sbb
inc
pusha
sbb
sbbl
mov
cmpsl
mov
mov
rclb
sar
adc
mov
dec
fbld
shr
test
and
or
or
cmp
daa
lret
pop
aad
in
or
add
mov
in
push
push
mov
sti
mov
test
shlb
or
out
sub
repz
mov
sbb
loope
xor
clc
xchg
cmpsl
add
mov
mov
mov
in
add
xor
or
aas
mov
xorb
icebp
inc
test
ss
iret
push
push
push
xchg
mov
daa
add
adc
fdiv
mov
clc
pop
fisubl
int
fwait
jg,pt
sub
pop
jl
dec
pop
lret
into
or
pushf
mov
pop
ret
dec
push
fsubrp
pop
into
inc
and
inc
or
inc
fidivrl
out
xchg
and
inc
shlb
frstor
nop
xorb
xchg
pop
inc
arpl
ficoml
mov
mov
jl
pop
punpckhbw
testb
pop
test
out
loop
xor
xchg
mov
dec
mov
push
inc
scas
sub
jnp
push
mov
push
fistl
xor
dec
lret
sub
addr16
adc
xor
jmp
mov
test
mov
lahf
orl
iret
and
insb
test
bound
jmp
ja
or
inc
or
mov
jle
mov
fwait
call
sub
addr16
loope
or
stos
xlat
daa
clc
xchg
jg
loopne
cmpsl
ja
push
push
or
in
fimull
movsb
sti
mov
hlt
imull
dec
xor
sti
shrb
movl
aas
xchg
mov
mov
nop
mov
adc
xchg
ja
push
xchg
fwait
inc
jg
cmp
lds
cmp
or
xchg
pop
imul
mov
cld
jno
je
nop
mov
xor
jo
add
adc
mov
scas
mov
rorb
xor
addb
fcmovb
mov
loop
cmpsl
sbb
add
cltd
outsb
inc
fidivrl
xor
xchg
test
movsl
ds
addr16
inc
lcall
inc
test
int3
mov
mov
mov
pushf
ja
add
inc
sahf
sub
ljmp
dec
xor
enter
imul
mov
push
sbb
jle,pt
and
int
dec
cld
adc
and
fisttps
dec
idivl
and
sti
fmull
add
repz
aam
popa
jg
jg
adc
xlat
mov
rorb
aad
aaa
fisttps
inc
popl
pop
or
clc
add
and
stos
adc
popf
dec
mov
mov
out
out
test
adc
push
cmpsb
xchg
jnp
inc
xchg
test
aam
imul
nop
rcr
dec
inc
inc
int
jo
pop
out
pop
popf
lea
push
in
out
loop
aam
cmp
inc
filds
icebp
push
jg
andb
pop
filds
jae
sub
mov
ss
aas
mov
mov
xor
out
push
aaa
les
out
fcomps
daa
adc
jg
cmc
sub
xor
in
xor
aad
xchg
mov
inc
add
dec
add
loopne
lods
and
ret
jae
dec
push
sbbb
mov
jg
es
push
cmpsb
pop
pop
jo
push
das
xchg
or
dec
mov
enter
mov
add
cmp
mov
pop
mov
xchg
push
int
fucomi
adc
mov
je
test
cwtl
and
stc
add
mov
ss
aad
shlb
pop
push
in
int
loope
jmp
xor
fcomps
sbb
std
dec
mov
addr16
iret
push
cwtl
rcrb
test
cmp
enter
mov
inc
or
add
fdivl
aaa
jg
lcall
xchg
mov
orl
sbb
shlb
and
mov
pop
inc
mov
out
push
push
addl
inc
fadds
movsb
aas
lock
mov
mov
pop
ja
xchg
mov
or
cmpsl
add
inc
cltd
repz
lods
fnstsw
dec
cld
sbb
dec
mov
ror
jmp
icebp
inc
sub
daa
gs
mov
arpl
lahf
mov
mov
pop
inc
shrl
ja
js
mov
dec
sub
aas
or
aaa
pop
add
aam
shlb
popl
xor
insb
ja
in
aam
push
repz
ds
xlat
pop
pop
imul
adc
mov
push
ret
sub
ljmp
scas
xlat
jg
mov
pop
enter
pop
out
mov
or
mov
inc
fwait
imul
add
test
out
dec
and
jne
add
call
lret
sub
jae
arpl
push
mov
lods
enter
mov
incl
stos
and
pop
inc
adc
inc
enter
or
jo
les
rolb
jge
pusha
mov
jne
stos
and
adc
fs
test
in
sarb
add
lods
shlb
mov
xor
inc
rcl
pop
aas
ds
orb
cmp
dec
test
mov
push
cmp
movsb
sbb
aad
into
mov
stos
fimuls
std
push
iret
insb
aaa
jo
testl
sbb
addr16
jg
outsl
inc
stos
dec
fwait
int3
sub
lret
xlat
int3
sub
test
push
xchg
xchg
outsl
and
and
dec
mov
push
lret
dec
inc
shlb
icebp
add
fucomi
jne
push
loopne
cmpsl
stc
iret
ja
bound
jmp
nop
jbe
inc
mov
pusha
stos
sbb
fbld
mov
jne
sbb
fwait
mov
fcom
in
hlt
out
movsb
roll
mov
jns
inc
or
mov
mov
push
push
mov
out
jo
dec
lret
hlt
push
les
iret
lret
mov
dec
xor
aad
adc
outsl
shll
clc
or
lcall
add
addr16
jae
je
sbb
dec
stos
stos
cmp
fidivrs
jmp
test
jl
int
fdivrs
jg
and
pop
jb
cmp
xor
jg
inc
jno
mov
clc
repz
jecxz
and
jnp
add
fsubs
popa
dec
andb
into
inc
incl
or
pop
mov
mov
xchg
mov
cmc
inc
je
daa
mov
scas
movsb
call
test
sub
adc
pop
pop
lahf
mov
jecxz
mov
ret
add
cmp
repz
adc
popl
sub
jmp
loope
jbe
xlat
xlat
lret
sub
std
jl
jl
mov
int3
add
test
dec
adc
push
xor
lea
push
lret
shl
pop
push
inc
les
jl
inc
dec
push
dec
lret
addl
sub
rol
jp
push
pop
dec
jge
or
mov
add
icebp
adc
stc
shrb
stos
add
add
loope
idivl
push
shll
test
clc
or
adc
add
daa
das
push
pusha
movsb
and
and
je
push
inc
inc
dec
fwait
jg
decl
das
mov
daa
icebp
shrb
out
mov
test
testb
dec
add
xor
cmp
xchg
in
xchg
insl
jg
fmull
ja
jmp
outsl
mov
jb
adc
pushl
aaa
xor
mov
mov
sbb
inc
push
mov
daa
adc
test
or
xor
mov
roll
inc
mov
or
mov
push
pop
add
mov
cltd
add
mov
and
push
sub
sahf
je
stos
xchg
mov
or
cmc
arpl
outsl
testl
jo
and
dec
jae
pop
and
daa
inc
mov
mov
loopne
pop
mov
push
ds
push
push
sbb
lret
in
sbbb
jl
mov
pop
pop
add
xchg
add
arpl
jge
sbb
lret
push
out
shlb
in
sti
out
push
cld
daa
mov
andb
out
cli
rcl
and
rclb
pushl
add
cmc
dec
sub
rcrb
mov
loop
mov
sub
rol
lret
cli
testl
ljmp
jae
iret
sbb
push
rclb
ja
sarl
or
inc
inc
fidivl
loop
stc
push
xor
jl
movsl
or
sarb
pop
mov
iret
fadds
pushf
mov
jge
push
mov
push
lods
sbb
cmpsb
sub
and
fcoms
mov
lock
pop
adc
dec
aaa
lahf
xor
mov
cmp
xor
jle
pop
inc
jo
movsb
aad
scas
in
push
cmp
add
pop
movsb
xorl
imul
xlat
pop
mov
in
or
dec
enter
orb
cmpsl
push
mov
inc
xchg
sahf
jae
push
test
stc
pop
lea
bound
loopne
and
push
add
imul
or
jae
dec
mov
dec
push
ss
cmp
xchg
rcl
mov
cld
mov
jg
rorb
cmpsb
pop
ret
scas
notb
lea
xlat
ja
xor
sbb
inc
jo
stos
outsw
xorl
mov
rcl
pop
ret
and
lcall
push
adcb
inc
mov
dec
push
jnp
fidivrl
fwait
or
pop
popa
mov
das
sarb
pop
les
inc
pop
push
push
xchg
cwtl
jecxz
or
mov
cli
lret
add
xchg
xchg
adc
fwait
and
jl
mov
xor
xor
pop
les
je
sub
scas
ds
push
cmp
jmp
pop
addb
pop
push
and
loopne
push
mov
inc
and
cmp
adc
push
loopne
sbb
roll
jl
orl
mov
sbb
mov
loope
scas
clc
fisubrs
pushf
inc
mov
arpl
inc
add
lds
jo
cmp
adc
add
xchg
jne
adc
mov
std
pop
mov
fiaddl
mov
mov
dec
xor
jge
into
fdivrp
minps
cltd
hlt
cmp
les
lods
cmp
sub
bound
fdivrp
adc
cmp
sti
or
xlat
std
jno
xor
mov
add
sbb
ljmp
outsl
xor
jg
add
jne
and
push
int3
pop
inc
xchg
mov
sbb
fldt
sbb
xor
fidivs
in
lock
jmp
sti
mov
push
hlt
fisttps
lds
mov
xchg
jg
lds
inc
cmc
mov
xchg
push
fcomps
push
dec
int
lods
rclb
aad
add
push
xchg
jno
pop
shl
xchg
sti
inc
ds
ss
jp
rorb
sti
add
push
aaa
aas
dec
imul
stos
jg
outsl
pop
rorl
addr16
clc
dec
inc
cmp
cmpsb
mov
xchg
sbb
pop
xor
je
add
out
enter
daa
imul
pusha
pop
ljmp
pop
daa
xchg
xchg
mov
pop
fnstsw
orl
mov
adcb
int3
loop
inc
ret
ret
pop
out
aad
pushf
sbb
roll
rcrl
mov
ja
xor
add
add
aaa
pop
push
mov
mov
loopne
loope
in
addr16
repz
adc
mov
mov
das
mov
push
pop
xchg
mov
out
push
and
xor
push
cmp
or
gs
ret
iret
lret
fbld
and
mov
cwtl
add
dec
insb
jmp
cmp
xor
pop
xlat
inc
mov
in
xchg
add
nop
icebp
push
xchg
push
ret
xchg
or
mov
into
adc
into
inc
xchg
jg
or
ljmp
mov
xchg
shl
test
pop
lds
dec
mov
cmovg
cmpb
adc
addr16
jae
pusha
jo
cld
add
movsb
jns
cli
shll
mov
xchg
mov
xchg
les
jp
mov
mov
test
out
ds
add
movsb
cld
scas
lds
or
test
cli
lock
inc
rcl
sarb
ja
iret
jne
push
cltd
out
cmp
jp
aas
xor
les
gs
or
mov
rcll
xlat
jns
stos
enter
movl
sbb
mov
cltd
outsl
xor
fbld
and
pop
lods
inc
mov
pop
fisubl
push
outsl
add
and
pop
mov
add
lock
xor
sbb
push
dec
push
out
or
and
mov
add
pop
inc
and
jns
test
ja
jecxz
je
push
sti
cmp
or
mov
sub
lock
cmc
jle
xchg
aas
inc
push
in
cmc
shll
cmp
xlat
dec
test
mov
xchg
jle
stc
mov
sub
jns
test
lcall
push
nop
sub
push
xchg
jae
pop
xchg
inc
xchg
dec
push
stos
cwtl
add
or
push
cld
fdivrl
dec
add
pushf
sub
inc
pop
add
ror
clc
arpl
sbb
cmpsb
add
add
mov
xor
clc
pop
sbbb
dec
xor
or
jbe
insb
bound
cmp
mov
push
je
iret
call
push
stos
cmc
xchg
and
fcmovbe
filds
mov
adc
sub
sbb
jmp
inc
xchg
ret
popa
jnp
add
xchg
xlat
pop
add
sbb
iret
or
add
shlb
aam
leave
je
sahf
push
jo
popf
cld
cmp
test
int
lds
out
scas
sahf
out
icebp
jns
jae
pop
xchg
add
inc
adc
popf
mov
or
add
mov
clc
les
mov
loop
push
or
push
sbb
ret
cwtl
data16
lods
imul
cmpl
dec
lret
add
mov
arpl
cld
lea
leave
repz
movsl
sbb
cmp
inc
dec
push
jl
das
xchg
scas
xchg
or
and
shll
lcall
mov
stos
test
push
fsubrs
loope
les
testl
mov
sahf
repnz
repz
push
add
xor
repz
daa
iret
push
movsb
movsb
int3
sub
cli
xchg
in
push
or
pop
stos
sahf
sub
ljmp
sub
sarl
and
or
dec
ret
inc
test
les
inc
push
fcom
test
outsl
cmpsb
add
xchg
xlat
je
xchg
jge
imull
push
fwait
pushf
sbb
mov
dec
mov
mov
push
cmp
adc
hlt
insb
aas
jmp
cli
mov
repnz
mov
sub
mov
or
fbstp
mov
and
xor
cmp
add
lahf
jnp
jp
sbb
aaa
cmp
mov
adc
daa
mov
add
fbld
int
sub
xchg
ret
ficoms
lock
int3
inc
push
stos
sub
dec
inc
mov
add
lcall
bound
inc
jg
out
sbb
mov
dec
and
daa
cs
dec
jne
sub
mov
lcall
enter
add
pop
or
lret
jg
out
add
mov
sub
incl
das
popa
fs
or
loop
mov
aas
xor
stos
xchg
cli
andb
inc
sub
fdiv
dec
loop
push
add
imull
xchg
pop
ljmp
fcomps
or
loope
xchg
gs
mov
add
jae
lds
iret
stos
mov
inc
or
ret
push
cli
pop
icebp
aad
and
mov
std
pop
mov
jg
filds
mov
fxch
mov
mov
lods
nop
adc
push
loop,pt
fistl
add
push
fidivl
and
push
out
xor
arpl
cwtl
adc
movl
and
mov
and
xor
jnp
dec
mov
xor
imul
je
lret
sbb
mov
stc
cli
mov
jl,pn
imul
aas
xchg
push
test
int3
mov
cmc
xchg
jmp
dec
test
ds
xor
dec
inc
aam
pushl
mov
dec
movsl
andl
adc
mov
ja
aas
and
lret
xorb
push
mov
or
lcall
leave
sub
popf
cmc
pop
mov
and
push
mov
add
leave
lcall
or
scas
xchg
insb
fwait
iret
adc
ror
sahf
mov
out
mov
add
std
dec
xor
ror
push
xchg
xchg
mov
sbbb
xorl
mov
js
mov
xlat
jmp
mov
dec
or
push
push
mov
mov
mov
jb
xor
adc
ret
frstor
or
jbe
jo
scas
scas
ret
inc
add
mov
pop
call
or
mov
rolb
xchg
add
mov
jbe
orb
xor
pop
in
xchg
push
popf
sub
int3
xchg
push
popa
sahf
fstp
lahf
or
add
testb
inc
jmp
test
inc
test
or
push
dec
rcrb
pop
dec
iret
xchg
add
xchg
ljmp
inc
cmpsl
push
mov
enter
ja
cmp
xchg
testl
in
dec
push
sarl
insb
push
dec
push
dec
pop
jae
adc
dec
sub
sahf
jle
adc
sbb
xchg
push
jb
repnz
inc
push
rolb
adcb
std
fidivs
or
pop
aaa
fwait
or
adc
aad
inc
adc
mov
add
fs
fdivrs
sbb
inc
lcall
clc
fildll
jmp
out
xor
xor
sub
inc
mov
lods
adc
call
adc
fidivrs
mov
or
inc
out
and
decl
or
jmp
adc
fcmovu
out
loope
dec
pop
jl
enter
add
test
xor
les
xchg
pop
sbb
dec
pusha
orl
imul
pop
arpl
into
test
loop
inc
jmp
je
jle
sub
inc
pop
stos
repz
rclb
hlt
dec
push
dec
xor
leave
into
sbb
or
les
ror
xchg
pop
jb
or
push
mov
jg
stos
jb
les
push
inc
das
pop
daa
gs
test
xor
or
test
push
jmp
xlat
rcrb
mov
mov
ret
aas
call
leave
shlb
loop
test
sti
loop
test
cltd
mov
je
repnz
andb
jecxz
ror
sbb
test
test
inc
pusha
out
testl
mov
jns
pusha
subb
mov
mov
fldl
mov
cmp
jo
cwtl
lahf
pusha
inc
sahf
negl
mov
nop
jnp
mov
adc
test
shrb
cli
popf
sbb
inc
sbb
test
push
mov
iret
test
filds
inc
cmpsl
sbb
mov
les
data16
or
xor
inc
test
add
and
push
popf
cmc
xchg
test
push
mov
aas
mov
lcall
sbb
inc
inc
int
aas
push
ljmp
xor
mov
arpl
adc
mov
inc
out
out
push
or
shll
jno
jge
fbstp
js
inc
mov
push
xchg
mov
cmp
dec
push
sbb
testb
inc
pop
mov
mov
lods
inc
jo
mov
push
xorl
andl
dec
jmp
stos
sub
dec
jbe
jmp
je
je
loop
jno
and
fmuls
adc
loope
pop
and
jns
lock
pop
push
cltd
mov
xor
adc
scas
out
fwait
inc
inc
orb
enter
scas
jle
and
test
sub
rolb
out
add
shlb
std
jecxz
xor
inc
daa
leave
and
pop
xor
inc
andb
xor
jo
inc
add
jecxz
lock
pop
testb
gs
mov
xchg
add
push
jns
xor
mov
dec
push
pop
add
pop
out
iret
fistpl
test
int3
aaa
sub
cwtl
push
adcl
enter
xor
cmpsl
jecxz
int
add
pop
sub
jmp
jmp
daa
arpl
mov
inc
adc
push
xchg
arpl
mov
gs
mov
lret
and
dec
inc
sti
dec
jae
in
rcrl
pop
lahf
ljmp
orb
out
xchg
cmpb
clc
dec
ds
jl
std
popl
jnp
stos
andl
and
mov
sahf
jne
das
into
ds
ss
adc
xchg
jge
loop
jno
das
in
push
sub
out
std
mov
xor
lret
xor
add
push
dec
jle
and
inc
mov
test
mov
icebp
cmpl
cmp
mov
mov
shlb
mov
ret
popf
push
nop
jb
imul
lret
shll
out
div
sub
cmp
int3
and
ds
jb
dec
xor
fsubrp
xchg
lcall
adc
add
in
push
fcomps
mov
ret
pushf
jnp
pop
testl
mov
mov
das
ffree
mov
negb
aas
in
outsl
ljmp
inc
cmp
xchg
mov
pop
sahf
popf
lret
inc
hlt
inc
je
push
popf
fsubr
lcall
push
popf
lcall
mov
sti
daa
lock
lret
negl
pop
shr
test
inc
in
add
ror
fmul
cmp
and
jmp
stos
jecxz
gs
popf
int3
and
jns
and
fs
loope
mov
dec
arpl
push
jle
arpl
insl
test
inc
push
cmp
stc
xlat
jecxz
inc
jle
xchg
push
xchg
xor
jp
jns
xchg
lret
xchg
mov
jno
cltd
adc
add
dec
int
jl
jecxz
and
adcl
imul
jmp
adc
xchg
fcmove
loopne
out
push
jne
mov
or
mov
cmp
mov
iret
je
dec
inc
mov
mov
andl
xchg
call
in
adc
fbld
jnp
push
lods
imul
inc
xchg
sbb
popa
push
mov
sahf
xor
int
inc
add
mov
mov
orb
lods
rcrb
adc
enter
pop
aas
hlt
leave
sub
roll
pop
push
mov
ljmp
fbld
mov
mov
add
outsb
jge
lret
call
inc
xor
decl
or
adc
or
jae
dec
pop
nop
inc
cltd
leave
push
aas
dec
pop
lcall
mov
pop
lahf
ds
scas
dec
add
mov
lret
outsl
adc
fcmovnb
pop
aam
es
mov
fidivrl
mov
mov
inc
mov
and
loopne
aas
data16
mov
pop
lahf
cmpsl
iret
mov
lret
inc
pop
xchg
lock
dec
xchg
mov
and
int3
inc
jecxz
cmp
pop
sbb
inc
pop
mov
cmp
das
rcrl
pop
fdivrp
xchg
iret
and
push
fdivrp
shlb
pop
xor
pop
mov
scas
popf
or
mov
sbb
mov
js
fnsave
add
jg
outsl
inc
cli
xchg
shrl
rcrb
or
inc
push
mov
mov
fsts
shrb
pop
sub
pusha
xor
sbb
push
scas
nop
push
xor
inc
inc
fldenv
in
ret
gs
xor
dec
cld
fildll
fstpt
cmp
or
loope
dec
out
lahf
adc
in
push
inc
add
dec
push
mov
dec
lret
sti
sub
push
mov
pop
filds
add
ss
imul
test
dec
mov
inc
sub
add
add
js
mov
pop
jb
popf
fsubs
sti
pop
push
or
dec
cmp
bound
push
ljmp
mov
cmp
xor
ss
inc
out
inc
jl
xchg
mov
subl
adc
add
shr
mov
push
imul
inc
cmp
mov
out
xchg
jns
cmp
cmp
inc
xor
push
test
mov
jg
adc
repnz
movsl
mov
cmpl
mov
out
jecxz
fists
mov
stos
sarl
push
lahf
test
pop
fwait
mov
fildl
aas
testl
mov
push
mov
mov
add
int
xchg
pop
mov
lcall
inc
sub
negb
das
addl
xor
ret
lcall
imul
outsb
pusha
inc
inc
or
imul
add
and
xor
notl
mov
add
mov
jmp
int
push
dec
daa
push
out
mov
scas
jae
icebp
sub
psrld
push
adc
sbb
push
mov
sbb
push
enter
jp
inc
jbe
sub
inc
pop
xchg
and
negb
xchg
xchg
dec
test
add
mov
pushf
iret
fsub
mov
pop
mov
enter
ret
dec
xchg
add
loopne
addl
stos
stos
pop
pop
dec
das
shr
loop
pop
mov
daa
inc
rorb
mov
loopne
mov
adc
jo
push
aaa
inc
lahf
xchg
xchg
push
mov
shll
or
mov
adc
push
notl
rcrb
push
imul
sarl
and
leave
stc
lret
iret
jb
or
and
das
fstpt
adc
pusha
pop
sub
cmpsl
daa
fcmovbe
sahf
pusha
outsb
in
xchg
testl
push
mov
and
or
mov
mov
out
mov
xchg
les
cmc
mov
inc
movsl
adc
dec
stos
add
dec
cltd
push
sbb
mov
loopne
inc
ret
push
out
mov
mov
scas
das
jnp
push
aas
ret
fisttps
out
sbb
pop
rcr
and
push
push
add
repnz
or
cltd
push
mov
mov
lods
fiaddl
adc
in
push
icebp
cmp
inc
pop
xor
push
test
push
mov
and
in
sub
xchg
or
lock
jne
or
cmp
int3
in
int3
sbb
and
ret
mov
dec
out
sub
shrb
jnp
loope
enter
test
mov
test
sub
test
inc
cmpl
movsl
xchg
mov
insl
jl
enter
mov
mov
adc
lret
iret
push
arpl
cmp
sbb
out
in
adc
inc
push
push
in
in
push
pop
mov
xor
cld
push
push
mov
movsl
fidivrs
mov
jle
push
jb
test
push
push
enter
mov
pop
add
or
pop
insb
inc
cmp
inc
frstor
dec
dec
ret
rcrb
das
or
fimuls
pop
pushf
pop
xchg
jb
and
aaa
in
mov
xor
lahf
test
and
mov
lret
out
push
jge
inc
pop
inc
xor
stc
mov
pop
repnz
cmp
mov
xor
inc
mov
add
sbb
addr16
into
add
mov
jge
imul
inc
inc
lret
add
mov
dec
push
fdivs
addr16
fdivr
push
mov
add
sbb
pop
xchg
sarl
add
inc
mov
push
fmul
add
xchg
add
daa
fwait
xchg
xor
jl
ret
jo
inc
jmp
aas
inc
in
inc
mov
mov
xlat
mov
dec
dec
ja
inc
mov
add
sarb
xchg
int
divb
movsb
arpl
inc
test
out
iret
inc
not
cmp
mov
adc
jg
inc
inc
sub
or
xlat
mov
add
jae
push
and
divl
add
jl
jl
mov
cmp
scas
fists
imul
lods
add
xchg
shrl
push
sti
inc
mov
out
push
cmp
outsl
cmp
jns
mov
pop
repnz
data16
and
fwait
repnz
int
shll
push
adc
and
sbb
dec
add
mov
pop
adc
adc
push
iret
fldt
ljmp
decl
mov
adc
dec
xchg
aas
std
and
jns
out
dec
in
addr16
outsl
or
mov
xchg
test
or
inc
inc
cwtl
mov
add
test
push
daa
pop
pop
orl
xchg
mov
rcl
ret
mov
add
out
fidivrl
jo
sbb
mov
outsl
pop
mov
fs
scas
push
cmpsl
ss
out
cmpsb
mov
and
mov
stos
dec
outsl
lods
xchg
or
loop
cmp
imul
adc
mov
loopne
mov
jmp
mov
mov
inc
jns
js
je
fldcw
lret
test
xchg
add
add
mov
incb
lcall
insb
decl
sub
xor
mov
sub
mov
xor
jno
outsl
xor
mov
scas
mov
inc
das
cwtl
addb
movsl
and
mov
add
adc
sub
pop
xchg
push
mov
repz
inc
imul
mov
cmpl
fsub
xor
mov
cmp
jo
cmp
jns
mov
jmp
or
jmp
subl
or
sub
mov
lret
insb
cmp
pop
jae
pop
push
mov
in
push
mov
xchg
cvtpi2ps
or
imul
test
xchg
pop
sbb
xchg
cmpsl
jns
push
dec
pop
imul
bound
mov
jns
test
imul
add
daa
ds
adc
inc
lahf
lods
mov
adc
add
dec
mov
cld
ret
jg
xor
js
pop
icebp
inc
imul
push
rolb
dec
push
scas
shlb
push
stc
mov
dec
maskmovq
testl
filds
jg
mov
xchg
sbb
or
inc
test
pop
cmpsl
push
sarl
inc
lret
jbe
stos
fsubrs
inc
out
fbld
pop
push
mov
and
dec
js
mov
sub
bound
sarl
mov
cmove
sub
lret
dec
clc
sub
scas
sub
pop
mov
cmpsl
push
iret
gs
xchg
push
sti
jge
sub
mov
adc
mov
mov
dec
jae
outsl
jae
xor
ret
cmpsb
dec
push
in
lds
popf
jne
adc
sbbb
mov
add
jl
jmp
and
dec
or
fistpll
xchg
jno
push
lea
bound
insb
mov
test
pop
and
cli
lock
stos
in
push
mov
idivl
clc
pusha
test
xchg
xchg
pusha
leave
leave
pop
jg
pushf
push
jmp
movb
lock
icebp
aas
sub
mov
add
mov
jle
aas
or
sbb
sti
adc
pop
decb
mov
insl
mov
push
hlt
subb
and
pop
jle
sarl
fdivs
mov
mov
or
jp
mov
outsl
aas
dec
and
xchg
inc
adc
ds
ja
sub
mov
test
ret
movb
lret
inc
ja
hlt
mov
lds
mov
jns
hlt
adc
mov
inc
sub
adc
and
push
lcall
incb
xchg
ljmp
mov
enter
jns
xor
clc
ljmp
add
popa
int3
xor
dec
ret
mov
outsb
lea
les
and
jnp
fildll
sbbb
add
inc
cmp
jae
cmp
hlt
jo
jns
jge
mov
inc
test
outsl
adc
sub
and
mov
or
mov
xor
mov
push
dec
ljmp
dec
pop
mov
test
shl
inc
pop
cmpsb
cwtl
subb
je
sub
leave
xchg
inc
mov
repnz
push
or
lret
pusha
xor
cmp
add
je
pop
dec
pop
lds
pop
pop
andb
into
outsl
pop
lods
pop
rorb
mov
or
mov
add
add
jae
jbe
adcb
add
dec
test
push
gs
push
xlat
inc
xchg
add
sub
inc
sbb
sub
add
mov
leave
inc
dec
out
test
ss
and
ja
mov
mov
add
jo
mov
lret
lock
and
ds
sub
mov
and
test
xor
ret
jns
shrb
loop
notl
scas
sub
pusha
xchg
loope
daa
popf
and
test
push
add
add
pop
cmc
loope
stc
scas
sahf
jb
add
repz
or
push
pushl
mov
cwtl
in
insl
je
das
sbb
cmp
adc
scas
test
imul
loop
ret
push
or
xchg
int
pop
shrl
sub
mov
lds
imul
add
sahf
pop
in
adc
pop
push
fisubrl
mov
or
inc
test
dec
add
cmpsb
push
loope
mov
test
mov
xchg
aaa
cmp
ret
mov
lret
sahf
addb
add
push
cltd
jb
push
cwtl
arpl
sti
dec
int
adc
shlb
lds
dec
lds
inc
or
jbe
mov
stos
nop
xor
jb
adc
enter
inc
in
jne
repnz
inc
dec
sub
icebp
mov
cs
sbb
dec
push
in
xor
shlb
mov
inc
mov
dec
shlb
dec
jmp
scas
jae
negl
shlb
idivl
mov
add
out
add
push
jle
popl
aad
or
das
loope
lods
xchg
imul
xchg
jb
loope
and
lcall
int3
xor
mov
clc
cmp
and
rorb
cld
inc
sti
insl
movhps
and
out
add
jl
push
or
pop
xchg
iret
cmpsl
jl
data16
push
pop
iret
das
add
ret
cli
lahf
out
outsl
into
stos
cmc
dec
dec
ds
repnz
push
lods
les
mov
aaa
dec
or
push
push
in
push
mov
lret
mov
mov
inc
adc
popf
vrsqrtps
push
imul
pop
adc
mov
int3
bswap
mov
push
xor
mov
in
pop
leave
addr16
mov
pop
out
fwait
addr16
inc
scas
jmp
pop
mov
or
lcall
iret
stos
fdivrp
std
add
leave
push
inc
add
incl
aaa
add
cmp
aas
push
jg
incl
dec
test
sbb
and
mov
pop
loop
push
ret
scas
mov
stos
mov
inc
inc
mov
rclb
add
push
add
sbb
lock
shlb
or
add
jecxz
xor
push
mov
jmp
ret
sar
cld
mov
shll
or
dec
das
repz
push
mov
fstpl
cmp
jb
add
mov
dec
dec
fimull
cltd
mov
mov
ret
jae
mov
mov
lds
outsl
inc
jg
cmp
inc
fisubs
xor
adc
call
add
jb,pn
dec
dec
sbbl
mov
pop
sbb
cmp
cmp
inc
mov
aam
stc
mov
int
mov
fmull
inc
adc
out
lcall
add
hlt
xor
pop
sub
ljmp
pop
rcrb
decl
addl
cmpsb
add
in
xor
loopne
sub
mov
pop
and
add
iret
pusha
arpl
adc
shl
dec
paddusw
lahf
fsubr
xchg
xchg
jp
and
jne
cld
daa
or
pusha
cs
std
mov
xor
stc
daa
notb
rcrb
lret
adc
add
jp
not
xchg
push
stos
shrl
mov
rorl
out
lret
push
sbbl
pop
push
dec
roll
sbb
xchg
dec
ficomps
addb
pop
add
add
add
imul
pop
mov
test
or
ret
pushf
inc
dec
push
adc
pusha
jg
inc
stc
je
lret
mov
rorb
xchg
xor
cli
out
movsl
pop
ret
push
test
or
xchg
lret
mov
and
pop
jo
xor
mov
pop
nop
ds
jp
mov
sbb
clc
sub
add
std
test
xor
lret
test
inc
mov
inc
xchg
les
cli
mov
rclb
je
mov
fldl
iret
test
mov
cli
cmp
mov
cld
xchg
push
ffree
lock
xlat
fldl
xor
mov
jns
xchg
scas
xchg
push
inc
jecxz
sub
inc
sub
inc
dec
jecxz
mov
jle
bound
dec
mov
scas
out
aad
pop
and
jnp
pop
sahf
and
out
xchg
repz
mov
adc
cmp
mov
and
nop
daa
outsb
mov
or
jg
or
int
mov
jge
xor
pop
idivl
mulb
sbb
es
dec
xchg
int
pop
addb
mov
retw
pop
jbe
out
test
mov
daa
mov
es
mov
orb
or
inc
jge
pop
dec
not
cli
hlt
cmp
mov
mov
inc
cmpsl
repz
cmpb
lods
dec
out
mov
gs
push
dec
fldl
cwtl
inc
std
enter
or
fcmovu
mov
sbb
shr
sub
xchg
movsb
pop
add
jge
call
dec
test
mov
cmpsl
ret
cmpsl
sbb
mov
jle
or
aam
push
jae
cmp
popf
ljmp
ss
sub
mov
int3
inc
inc
cmovnp
xchg
pop
mov
push
stos
imul
mov
dec
andb
mov
xchg
mov
pop
jle
push
sahf
lahf
call
dec
adc
insb
mov
divb
mov
subb
add
xor
pushf
aam
ret
ljmp
jnp
cmc
mov
xorb
mov
inc
sbb
jbe
stos
mov
dec
push
pop
jne
int3
jecxz
xchg
int3
jecxz
xchg
pop
lcall
cmp
add
and
addl
cmp
mov
iret
adc
jmp
dec
fwait
inc
and
mov
xor
xor
movsl
je
and
adc
inc
ljmpw
mov
mov
push
jnp
loop
aaa
xchg
hlt
or
fwait
xor
shl
lods
and
arpl
fildl
sub
push
sbb
cmpl
inc
jb
dec
mov
or
cli
pop
xor
mov
bound
lea
and
or
cmp
neg
inc
sub
stos
sub
inc
xchg
mov
jmp
adc
mov
outsl
fisubs
addr16
clc
leave
nop
inc
bound
mov
subb
xor
xchg
dec
xchg
aaa
iret
mov
ss
mov
inc
ds
sub
add
out
hlt
ljmp
xchg
xor
and
pop
inc
leave
add
loope
jle
scas
pop
mov
jle
and
push
sub
aas
cmpsl
dec
adcl
add
shl
cmp
xchg
imul
lret
xchg
lds
mov
imul
rolb
ret
inc
mov
nop
or
adc
iret
inc
lods
daa
hlt
mov
push
lcall
push
pop
rcrl
xchg
movsl
test
cmp
or
xor
inc
pop
adc
xchg
mov
ret
and
mov
imul
js
ret
gs
or
xor
inc
test
push
push
sahf
mov
lret
push
xor
ret
enter
xchg
fisubrl
xchg
cmp
mov
jne
ss
xlat
ljmp
dec
negb
ja
push
ret
rol
mov
lcall
enter
or
pop
call
jp
inc
in
adc
push
je
fstp
fstl
adc
daa
adc
sub
clc
inc
inc
ja
ljmp
daa
out
les
mov
mov
hlt
add
mov
ret
xor
scas
outsl
mov
inc
cli
inc
stc
add
mov
mov
pop
aam
add
rcll
adc
mov
inc
xor
mov
scas
dec
xor
fcoml
das
jne
test
dec
rorb
xchg
adcl
je
inc
mov
loopne
push
mov
dec
rorb
jae
fisubrl
adc
and
xchg
xor
stc
shll
inc
mov
sbb
jle
sbb
mov
rorl
add
push
lret
outsb
add
cltd
enter
dec
lea
push
pusha
and
lret
ror
pop
mov
and
add
scas
hlt
push
adc
mov
dec
lock
add
ljmp
dec
lds
in
or
add
aas
and
test
push
rorb
xorl
dec
es
mov
push
xor
mov
push
jp
movsl
test
jbe
out
jle
dec
cmp
int3
enter
mov
xchg
addr16
or
cwtl
xor
jle
mov
xchg
sbb
test
xorl
sbb
add
push
roll
es
call
ss
pop
sub
pop
lcall
mov
cmp
jecxz
sbb
fdivrp
aad
or
push
or
add
sub
sahf
mov
jae
mov
mov
xchg
divl
jb
push
xorb
filds
mov
test
clc
or
add
call
jns
jp
loop
out
adc
dec
pop
pop
mov
cli
xor
dec
mull
mov
lods
ds
dec
mov
icebp
mov
cmp
inc
rorl
int
ljmp
imul
and
inc
push
cmp
ja
push
and
fs
loopne
daa
push
inc
in
mov
test
ret
bswap
lfs
dec
mulb
jbe
adc
mov
pusha
add
leave
mov
pop
pop
push
insl
mov
push
fstp
out
es
add
pop
jmp
inc
mov
cmc
mov
rorl
mov
call
sbb
pop
out
andb
pmullw
xchg
or
mov
and
add
pop
xchg
in
les
sbb
mov
fnsave
xchg
mov
loope
sub
push
push
fidivl
jg
or
lcall
or
pop
lret
adc
xchg
in
or
icebp
in
or
pop
icebp
xor
in
call
nop
pop
or
xor
xlat
add
cmp
adc
ret
dec
mov
push
jp
xor
xchg
cmpsb
inc
pop
lds
push
sbb
or
xchg
mov
bts
fsubrs
pushf
iret
or
add
mov
xchg
scas
push
xchg
adc
pop
push
fistpll
jg
sbb
cmp
ficompl
repnz
movb
dec
and
push
mov
mov
in
xchg
fwait
dec
xlat
jge
or
int3
dec
push
jb
inc
jb
scas
dec
push
sub
mov
push
xchg
iret
jnp
push
ds
ficomps
ret
lea
adc
popa
movsl
and
mov
dec
jae
jno
pop
dec
or
lds
std
mov
push
xor
dec
dec
add
push
adcb
test
mov
je
mov
xor
pop
xchg
lahf
leave
ljmp
aas
fcomp
push
mov
pusha
mov
add
dec
cltd
add
lods
dec
sub
je
test
add
dec
hlt
inc
mov
jg
mov
mov
divb
cmp
call
mov
cltd
ds
mov
out
pop
cmp
mov
aam
fs
xorl
loop
add
dec
popf
add
je
or
sbb
lcall
lods
decl
fmuls
add
ret
ret
into
dec
mov
loope
sbb
xor
push
mov
push
leave
lds
aaa
cmp
inc
cwtl
in
push
jle
dec
int3
iret
clc
add
push
hlt
adc
inc
icebp
pushf
push
jg
fldl
lds
sti
sub
jae
cmp
mov
sbb
ret
mov
mov
sbb
mov
push
mov
popa
lahf
idivb
repnz
flds
cli
enter
push
les
std
cli
dec
jne
inc
ljmp
ja
lock
ja
leave
xchg
ficoml
mov
or
push
jmp
xchg
ss
jne
inc
sbb
mov
shrl
xorl
pop
push
aaa
jae
aaa
inc
xor
add
aas
rclb
imul
out
push
mov
movl
push
out
inc
ds
sbb
negb
addb
ja
or
cli
out
mov
inc
mov
push
sbb
cmp
jo
sti
xchg
or
sbbb
cmp
mov
cmp
push
dec
add
mov
in
lds
cmp
xchg
repz
daa
pop
lods
and
jb
mov
sbb
push
pop
loopne
mov
sbb
out
adc
jae
aad
movsl
inc
cld
int
mov
fwait
das
lahf
imul
pop
stos
lds
mov
mov
jne
mov
loop
ffree
xchg
aam
inc
in
xchg
sbbb
faddl
inc
dec
in
sbbb
fldl
or
push
xor
xor
movb
cmp
pop
xchg
sbb
mov
rolb
sub
push
cmpsb
pop
loop
or
ret
pop
icebp
mov
add
cmp
fnstsw
js
mov
push
xchg
push
or
addb
cmp
jge
sub
mov
aaa
mov
out
cmp
jne
mov
sub
inc
shll
inc
pop
dec
enter
aas
rcr
subb
jp
ret
adc
xchg
je
push
out
out
out
pop
nop
push
in
mov
add
mov
sbb
xchg
inc
loop
and
out
enter
xchg
aas
jmp
loop
ljmp
sbb
push
jnp
push
dec
xchg
mov
out
imul
xchg
dec
xor
movsl
pushf
xor
mov
out
ret
add
aas
pop
out
inc
inc
xchg
mov
sbb
dec
jo
sub
or
or
jne
das
inc
and
xchg
pusha
stc
jbe
jmp
cmp
int3
mov
leave
movl
pop
push
rol
in
mov
add
fidivrs
inc
aaa
popf
xchg
ljmp
mov
ljmp
mov
push
or
dec
jbe
fisttpl
push
jae
add
mov
iret
daa
adc
dec
xlat
mov
popf
or
mov
dec
xchg
cmp
xor
aas
imul
push
jle
fidivrs
movsl
fcoml
dec
sbb
idivb
or
stos
addl
dec
lcall
mov
xor
jl
lock
out
icebp
xchg
dec
inc
scas
sub
jp
ret
mov
sbb
or
xchg
adc
pop
and
fidivl
xor
dec
adc
jbe
pop
cmp
repz
or
inc
int3
loop
out
fs
inc
xor
inc
inc
and
mov
lcall
andl
mov
fisubs
ds
cmp
jns
lret
mov
inc
xor
rorl
fdivr
inc
xor
hlt
ret
jae
or
jbe
or
cld
mov
ja
insl
inc
xor
pop
jns
ja
leave
pop
or
arpl
aad
jp
cmp
stos
sti
insl
and
dec
addr16
mov
mov
pop
cmpsl
fadds
adc
ud1
pop
xor
add
pop
mov
xchg
sub
jbe
in
or
mov
mov
cmp
out
hlt
inc
test
or
sub
inc
pop
ret
jmp
or
notl
das
push
xchg
mov
mov
out
add
mov
fsin
dec
shlb
loopne
ret
shll
jnp
and
mov
aaa
jb
popa
jp
aam
call
cs
adc
cmpsl
repz
std
mov
and
repnz
imul
and
shll
je
pop
jne
mov
add
arpl
lahf
adc
mov
fwait
data16
push
inc
adc
push
dec
and
loope
lea
test
or
push
pop
seto
fbstp
cmpsb
or
push
jnp
cld
ud0
mov
aaa
jo
lods
pop
lods
lock
mov
shrl
add
jecxz
test
in
test
ljmp
xchg
andb
sub
xchg
mov
cld
xchg
mov
shll
cmp
xchg
ror
fwait
add
fldcw
ret
cwtl
movsl
mov
push
mov
xchg
mov
push
push
jae
rclb
pop
mov
or
xchg
jge
push
mov
rcll
push
lret
cld
mov
mov
inc
pop
mov
daa
adc
movsb
add
jno
aad
loopne
mov
and
sub
cmp
sahf
cmpsb
jl
xchg
push
mov
insl
xchg
or
loop
mov
test
push
or
outsb
sub
in
repnz
xor
inc
jl
rorb
fs
mov
cli
mov
dec
adc
aam
dec
mov
lods
aas
jp
jnp
enter
fisubrs
jg
xor
lahf
push
popf
sahf
ret
test
jns
out
mov
inc
and
push
sbb
dec
mov
popa
fcmove
aam
add
pop
arpl
out
outsl
stos
sti
pop
pusha
imul
pop
inc
fmull
jle
lods
dec
mov
shl
pop
pop
call
xor
jb
mov
movnti
dec
int
mov
mov
xorl
add
cli
or
mov
mov
fisttps
lret
or
int3
add
sub
lret
sbb
cmp
das
push
inc
mov
cli
xchg
cmc
icebp
jmp
test
enter
out
lahf
adc
dec
mov
push
cmp
iret
push
cmpb
pop
and
jne
push
jg
add
lea
push
dec
ljmp
lock
jno
nop
clts
repz
mov
xor
or
ljmp
sub
push
das
inc
add
in
data16
dec
pop
mov
divl
test
bound
and
add
cmpsb
cvttps2pi
sbb
lds
push
jecxz
lds
das
scas
pop
imul
mov
roll
insl
mov
lock
jb
iret
xchg
inc
or
sarb
pop
pushf
cmp
ljmp
jmp
and
aad
inc
adc
adc
out
aaa
outsl
leave
sarl
stos
out
lods
iret
mov
add
or
xchg
dec
cld
pop
int3
mov
packssdw
jecxz
repz
out
dec
pushf
movq
pop
test
stos
cmpsb
xorb
dec
faddl
jno
nop
ds
pop
push
daa
fnstenv
icebp
or
add
enter
cmpsl
shl
std
xchg
inc
xor
pop
push
push
orb
dec
pop
stos
inc
mov
dec
inc
stos
scas
fmulp
scas
or
sub
push
mov
fadd
lret
test
mov
push
test
pop
push
mov
ret
repz
test
je
popa
lahf
push
xor
mov
inc
jg
dec
imul
xchg
dec
aaa
lret
add
mov
xchg
xchg
sbb
sti
in
inc
xor
insb
jle
gs
inc
std
push
test
push
push
adc
loopne
out
pop
cwtl
stc
xchg
les
mov
sub
hlt
or
xchg
jl
jg
shrb
jo
jmp
jb
bnd
test
pop
aad
stos
outsb
xor
mov
aas
inc
mov
xchg
add
xchg
fistl
test
stc
cmp
dec
jp
or
and
mov
mov
pop
cli
push
mov
mov
repz
out
test
outsl
inc
nop
mov
add
ljmp
inc
cli
addl
add
lahf
jle
ds
aaa
jp
dec
pop
sub
fidivs
sarb
clc
pop
neg
cwtl
sub
mov
mov
les
pop
push
push
ss
sahf
ficompl
push
push
jno
pop
ds
sub
adc
mov
into
pop
ds
adc
jns
mov
mov
es
cmp
cmp
jnp
mov
mov
and
jmp
cmp
inc
jno
out
int3
sub
lods
xor
sbb
call
ret
int
dec
mov
inc
aas
adc
push
sbb
jp
lea
inc
sbb
dec
sbb
pop
sub
fildll
pop
les
sbb
or
jmp
outsl
pop
push
pop
mov
pop
vcomiss
sti
outsl
mov
mov
movsb
and
jge
xchg
adc
push
adc
stos
mov
xor
pop
into
jecxz
pop
cmp
and
dec
lahf
lock
xor
or
ja
add
sbb
in
arpl
pop
push
cmpb
ret
add
lock
inc
ss
cmp
jns
ja
jp
inc
ja
cmp
lcall
sub
cmp
sti
lret
xor
xchg
jae
fadds
and
jae
mov
jns
hlt
push
xor
filds
lods
pop
dec
add
lahf
xchg
xor
int3
dec
mov
cmp
ja
mov
je
movl
mov
or
pushf
subb
fsubr
xchg
cmp
xchg
ret
bound
shll
int3
in
add
and
lret
push
fsubs
insb
mov
and
cmp
xor
add
imul
lret
jmp
jmp
aas
loop
mov
pop
pop
cwtl
adc
sub
rolb
adcl
cmc
and
call
mov
dec
xchg
mov
push
push
or
popf
ret
xchg
in
mov
pop
in
aas
in
incl
xchg
mov
push
or
ret
imul
inc
adc
pushf
jnp
dec
nop
in
jge
adc
test
in
addr16
push
stc
or
mov
mov
dec
push
ss
cltd
adc
or
sub
cmp
jl
aaa
ret
jl,pt
mov
and
or
int3
jmp
cli
cli
inc
mov
or
enter
std
cmp
push
xchg
les
shlb
lds
inc
test
mov
mov
push
test
mov
jl
cli
enter
loop
jo
or
incb
inc
std
dec
repnz
cld
mov
lea
mov
lods
dec
mov
push
add
pop
popl
rcl
cmp
cmp
cmp
adc
dec
jg
cld
lods
sub
in
test
mov
jmp
faddp
cmc
xor
lahf
ret
xchg
xor
jecxz
pop
shll
cltd
cli
xchg
jg
mov
add
cltd
jmp
leave
mov
enter
notb
jns
cmp
scas
push
into
popf
in
add
rcr
xor
loop
inc
and
push
xor
lods
or
aaa
mov
and
inc
jne
xor
mov
lea
test
stos
sub
std
imull
outsl
adc
pushf
fiadds
inc
fcoml
mov
cmp
push
in
push
or
int3
adc
pop
ss
push
xchg
movsb
sub
stos
sbb
add
inc
jmp
cli
loopne
nopl
jo
dec
mov
push
ljmp
mov
xor
scas
jecxz
sbb
pushf
jmp
mov
push
mov
orb
xchg
lds
scas
iret
jg
arpl
dec
sarb
loop
inc
into
add
push
mov
lock
dec
pop
jnp
pop
jno
clc
push
loop
or
xchg
out
xchg
push
xchg
addb
xchg
pop
inc
pop
or
std
pushf
jae
std
inc
test
dec
add
roll
or
jecxz
loopne
in
or
out
jb
pop
loop
shlb
dec
outsb
fldenv
ss
mov
ror
pop
aad
movsl
scas
imul
xchg
jns
lock
sbb
fadd
rcr
mov
pushf
sbb
xchg
ljmp
cltd
out
jecxz
add
xchg
push
ljmp
dec
jnp
mov
inc
xor
mov
mov
dec
testl
mov
movb
sub
mov
cmp
jb
pop
addr16
adc
mov
aaa
sarb
out
repz
mov
fwait
in
cmp
outsb
test
test
je
fimuls
sbb
xchg
pop
lods
outsl
cwtl
mov
jmp
rorb
incl
sub
sbb
add
cmp
xchg
pop
hlt
or
adc
pop
jp
push
lret
mov
jnp
fimull
add
xor
add
inc
xor
push
shrb
leave
nop
stc
ss
movsb
dec
ret
mov
or
dec
add
repnz
cmpsl
mov
add
xor
xor
sub
adc
dec
mov
stos
stc
push
pusha
pop
or
pop
inc
pop
rcll
stc
sub
je
icebp
xchg
sbb
add
lea
inc
outsl
je
jne
js
mov
jge
inc
jmp
jo
pop
xchg
fsub
shl
hlt
cmp
xchg
dec
stos
jnp
mov
les
ror
test
inc
and
inc
inc
and
ja
int3
mov
dec
je,pt
inc
rcrl
push
xchg
xchg
pop
add
testb
lds
outsl
ret
dec
push
int3
xchg
push
pushf
jg
sbb
pop
dec
jg
mov
jno
loope
dec
add
fiadds
mov
filds
dec
push
ja
sbb
adc
call
cmp
add
jne
xchg
mov
mov
in
mov
xor
push
test
cmpsl
xchg
out
mov
dec
dec
cmc
loop
pop
mov
cmp
mov
adc
adcb
je
cs
stos
xor
ja
xchg
push
xor
or
in
push
push
mov
jle
or
pop
inc
repz
add
fcoms
inc
sbb
loop
and
cld
bound
adc
sub
xor
fwait
addb
jge
push
mov
fsubs
mov
mov
jns
cmp
sub
dec
jnp
adc
ljmp
xor
xchg
mov
int3
mov
jnp
int
push
xchg
test
jmp
xor
outsl
adc
push
sbb
sarb
pop
mov
mov
jbe
sbb
repnz
ret
mov
in
out
push
stos
and
ljmp
xor
fiadds
push
jp
mov
pop
inc
xor
mov
cltd
testl
aas
sub
ret
dec
scas
dec
inc
ret
cld
push
jnp
aad
ss
dec
test
add
pop
movsb
inc
dec
lods
mov
inc
xor
jl
iret
mov
inc
or
ja
ret
or
ret
stos
xchg
jge
lods
leave
inc
add
pusha
dec
pop
xchg
aas
pop
inc
test
in
sub
mov
xchg
push
iret
xchg
mov
mov
dec
dec
ret
popa
push
cmovle
jle
push
cmp
stos
pop
cwtl
fldcw
mov
push
stos
inc
adc
std
cmpsb
ljmp
out
jmp
std
push
or
idiv
testb
fstsw
add
pop
inc
out
push
mov
and
lds
notl
mov
xlat
dec
dec
leave
sub
mov
push
inc
cmp
add
aad
xchg
rcr
xor
movsl
or
and
xchg
push
lods
xlat
aaa
cmp
rcll
push
in
mov
ret
fstpt
das
dec
jl
adc
ja
ja
dec
ret
xor
cmp
inc
cmp
xlat
sti
jo
ret
lods
pushl
mov
jecxz
mov
ds
adc
out
mov
int
jg
mov
jmp
into
add
imul
int3
out
dec
adc
int
mov
jle
cmp
mov
and
pop
sbb
dec
push
repz
add
sbb
sbbb
imul
inc
sarb
inc
cmp
jbe
outsb
test
aaa
inc
jnp
inc
add
pop
mov
jb
popa
loop
imull
mov
xor
inc
pop
add
inc
aaa
xlat
pop
sub
inc
push
mov
ja
dec
pop
movsb
fs
mov
jne
ljmp
ja
add
cld
inc
je
mov
mov
push
add
xchg
test
stos
sarb
sbb
xor
lahf
jns
and
loopne
mov
jb
and
jno
out
subl
jnp
and
jb
jl
mov
mov
and
pop
movsb
or
sbb
push
pop
bound
addr16
fdivs
jae
push
notl
dec
ret
rclb
jg
mov
mov
arpl
ficoml
add
leave
stos
inc
stos
ds
adc
inc
sahf
add
daa
jge
pop
add
jge
dec
fldl
repz
add
test
pop
add
push
movb
push
dec
aam
jne
mov
cmp
xchg
aam
ja
aas
pop
aas
xor
mov
repnz
rorl
push
iret
sahf
pop
imul
mov
dec
addr16
adc
pop
sub
adc
dec
cltd
add
pushf
sbb
jae
add
jle
rcll
mov
outsb
push
sbb
je,pt
or
pop
inc
scas
std
fimull
mov
repz
pop
xchg
sub
pop
aaa
add
pop
andl
sub
lock
mov
dec
mov
mov
jno
xor
jbe
fdivr
test
push
cwtl
sarl
idivl
pop
xchg
cld
in
adc
push
and
inc
inc
pop
clc
jge
jg
sub
movsl
mov
fcomip
outsl
call
dec
dec
iret
push
and
mov
nop
fisubrs
leave
orb
in
dec
xor
mov
push
shl
sub
adc
dec
cmp
xor
stos
leave
jg
sub
add
into
out
or
or
cld
loopne
or
sbbb
test
inc
lds
test
ret
stos
in
mov
sbb
jnp
dec
add
leave
mov
mov
adc
rcll
sbb
test
sub
pop
cltd
inc
cld
ja
rclb
sbb
pusha
cmp
or
lods
jmp
xor
lret
xchg
push
push
iret
jno
fidivl
pushl
cmp
sti
xchg
push
push
inc
add
sub
sub
ret
das
add
push
pop
cld
movsb
stos
xor
add
pop
and
xlat
ss
fisubs
mov
imul
pop
lods
jge
stos
add
das
inc
or
jo
cli
mov
and
div
imul
dec
fimuls
int3
pop
sub
or
shll
in
mov
ret
push
cwtl
mov
loop
push
cltd
stc
rclb
adc
dec
and
xor
loope
xchg
sbb
dec
daa
shlb
mov
pop
xchg
inc
add
mov
stos
negl
inc
dec
add
xchg
into
out
push
scas
adc
sub
scas
outsb
jge
xor
and
aas
insb
add
out
or
ss
mov
loopne
push
pop
outsl
mov
roll
push
mov
mov
lret
call
ljmp
decb
xlat
mov
cli
mov
imul
inc
mov
into
call
jb
enter
mov
fistl
cwtl
nop
mov
aas
out
and
xchg
lock
fcomi
jmp
dec
xchg
pop
mov
adc
jle
dec
mov
cmp
mov
jmp
mov
jp
into
dec
push
lahf
repnz
aas
mov
xchg
inc
xor
and
testl
or
lahf
add
ja
adc
push
movsl
pop
add
cwtl
add
sti
mov
outsb
imul
lret
inc
or
dec
cltd
insb
adc
cmpsl
dec
daa
and
push
out
nop
fmull
xchg
js
mov
out
fbstp
mov
add
mov
and
popf
cli
popf
jne
mov
cmp
test
cmp
and
inc
dec
mov
sub
mov
dec
adc
subb
mov
pusha
repz
dec
inc
ret
hlt
in
xor
cmp
outsb
ds
in
jnp
test
jb
inc
enter
fsubr
push
addl
rorl
sbb
mov
mov
inc
das
sub
or
fucom
nop
fwait
or
data16
cli
pop
hlt
lahf
dec
std
pop
inc
mov
and
inc
adc
imul
pop
fwait
sbbl
xchg
ljmp
fsubrl
jmp
mov
xor
ret
out
sti
pop
in
loopne
pop
jb
imul
fisttpll
mov
cmp
inc
pusha
mov
mov
mov
dec
rclb
adc
adc
iret
pop
fisubs
inc
movsb
pop
xor
mov
xchg
inc
ljmp
adc
dec
js
les
ret
mov
mov
cld
call
lret
ds
movsb
adc
lea
adc
jne
sbb
rorb
test
add
lret
push
sub
dec
pop
rcrl
icebp
jmp
mov
cmp
inc
mov
in
pop
push
sbb
lcall
and
add
xchg
aad
xchg
or
jle
cmpl
ss
and
orl
mov
ret
into
int
adc
rorb
pop
fsubrs
xchg
pop
imul
sbb
mov
js
pop
orl
push
std
dec
dec
add
ret
adc
out
icebp
dec
hlt
clc
mov
cli
xchg
dec
aam
outsb
fisubs
ljmp
nop
cmpb
jno
popf
and
sub
jne
mov
mov
pop
mov
adc
mov
ss
rorb
adc
ds
ret
cmpl
mov
inc
cmp
lret
mov
inc
iret
add
lret
mov
inc
jp
xchg
inc
dec
decb
rolb
stc
rclb
clc
or
cmpsl
cmp
xor
subb
nop
or
jmp
push
fsin
les
mov
sub
mov
ljmp
cmp
std
ds
scas
dec
mov
fistpll
leave
add
or
dec
pmaxub
jecxz
in
inc
inc
mov
icebp
int3
sub
lret
sub
rorb
push
aas
ret
jl
sbb
insl
push
loope
lret
dec
cwtl
dec
shlb
notb
les
imul
push
mov
mov
mov
adc
nop
xorl
je
into
mov
jl
inc
lods
mov
pop
popa
add
aad
cld
ret
and
aam
or
pop
sub
filds
adc
xlat
jg
sub
subl
xor
leave
or
gs
pop
jp
add
add
mov
hlt
ds
ret
sahf
std
mov
cmp
fcmove
jnp
add
and
pop
dec
fistl
mov
rolb
sbb
sub
scas
js
cmovs
pop
inc
fstpl
push
xchg
cs
shlb
sbb
push
hlt
ss
xchg
outsb
movsl
dec
loopne
repz
es
adc
push
popf
push
xchg
pop
pop
pusha
hlt
mov
je
xchg
cmp
loop
mov
clc
lea
fildll
lret
inc
inc
out
xor
insl
sbbb
push
aas
mov
adc
jmp
pop
xchg
popf
ffreep
idivl
mov
lock
inc
add
aas
pop
jg
pop
xor
jbe
inc
dec
mov
js
lahf
lcall
aas
push
fnstcw
arpl
stos
or
mov
incb
out
pop
in
inc
imul
cmc
adc
xchg
mov
inc
ja
outsb
ljmp
cmpsl
add
jecxz
inc
or
outsl
push
inc
insl
pop
ss
dec
mov
ja
pop
push
and
dec
mov
mov
dec
rol
push
jecxz
lock
ficomps
lds
inc
orb
test
scas
repz
int
je
enter
xor
shll
mov
aas
subb
flds
aaa
out
decb
xchg
int3
scas
xchg
sub
mov
sub
enter
xlat
std
into
mov
pop
clc
jae,pt
jb
lea
ja
mov
jb
pop
int3
mov
and
fnstenv
mov
mov
xchg
divl
es
dec
mov
mov
dec
repz
iret
jns
fst
push
iret
test
leave
je
jo
dec
ljmp
das
sarl
cmp
ss
inc
jnp
inc
orl
xor
mov
mov
dec
xor
jp
mov
jle
mov
mov
ret
sti
lret
pushf
mov
push
inc
adc
rcll
push
push
xchg
mov
dec
lds
loop
xchg
push
push
lret
mov
xor
dec
sub
dec
or
rorb
jb
push
sbb
mov
pop
dec
aam
int3
inc
mov
sub
or
add
jae
mov
movsb
icebp
xchg
jge
dec
filds
dec
dec
hlt
aam
into
xchg
sbb
call
fwait
xor
and
pop
inc
jge
push
adc
mov
sbb
push
lods
je
dec
jo
or
adc
pusha
push
int
push
or
dec
loop
jb
push
lds
rorb
mov
or
jbe
jge
aas
mov
push
dec
ljmp
xchg
leave
mov
fimull
inc
inc
mov
lods
loopne
mov
call
add
inc
jb
dec
lods
inc
adc
in
xchg
mov
inc
mov
lahf
adc
push
stc
xchg
mul
sub
pop
mov
jecxz
push
sti
insl
sub
push
call
push
inc
dec
push
dec
dec
inc
neg
fldl
mov
jp
cli
rcrl
xchg
add
lea
dec
cmp
mov
push
dec
add
cmp
xor
je
mov
int3
push
or
insb
int
add
jmp
dec
aam
cmpb
mov
ss
adc
add
loop
dec
add
lock
and
inc
mov
les
pop
mov
aas
cmpl
div
pop
dec
aaa
push
xchg
push
incb
mov
aas
xchg
xchg
fwait
or
andl
ljmp
cmp
dec
pop
aas
inc
fidivrl
in
pushf
mov
push
dec
sub
loop
pop
aas
and
sbbb
outsl
les
sbb
sub
mov
or
push
inc
inc
andb
push
sbb
outsl
adcb
pop
jge
sti
ja
dec
test
mov
js
fists
enter
rorb
lahf
es
lret
or
pop
rolb
iret
lret
das
inc
int3
lahf
ljmp
or
sub
ret
test
std
into
xchg
mov
xor
clc
dec
push
push
ss
inc
lahf
flds
jne
das
lret
or
mov
mov
dec
sub
inc
or
jle
mov
or
or
cmp
push
incb
jp
xor
sub
sub
scas
pop
cmp
cmp
jecxz
xchg
stos
sahf
pop
or
outsl
sub
or
je
sbb
xor
add
xchg
add
mov
testl
xorb
aas
inc
imul
mov
sbb
pop
mov
testl
shll
and
mov
cmpsb
test
mov
cmp
jae
sub
out
lret
add
cmp
int
bound
repnz
sub
pop
ds
test
xorl
out
into
int3
sub
add
mov
mov
mov
mov
mov
jle
enter
sub
sbb
jnp
push
push
xchg
psrld
cltd
xchg
popa
jne
xchg
add
sti
ds
sbbb
mov
in
jae
lcall
mov
test
sub
sbb
jg
sarb
sahf
cwtl
lds
mov
sub
ficoms
call
xchg
add
or
xlat
xchg
mov
inc
mov
push
testb
jge
jbe
jp
xchg
ss
sbb
lods
pop
mov
ret
lods
mov
jecxz
pop
xlat
mov
aad
mov
xor
call
scas
gs
leave
mov
das
in
imul
mov
popa
test
dec
sti
jns
cmc
nop
push
add
mov
adc
jmp
xchg
les
insb
mov
ja
jno
pop
jg
add
jmp
aas
or
pop
sub
call
shrd
jecxz
dec
ljmp
ret
cwtl
mov
cwtl
xchg
sbb
xchg
test
leave
mov
int3
add
or
mov
push
sbb
lock
push
mov
scas
inc
mov
mov
push
jl
pop
push
or
adcb
dec
mov
adc
sarl
lea
mov
fisubs
shrl
repz
jb
mov
xlat
ret
pop
xor
xor
hlt
cmpl
inc
ss
ljmp
sar
scas
add
dec
js
out
adc
test
fcomps
ljmp
inc
xorb
lock
mov
mov
out
jg
xor
insb
mov
popa
popf
inc
push
fs
sbb
bound
sub
sbb
jle
inc
dec
sub
call
push
mov
insl
or
out
stos
out
push
testl
jns
jle
inc
push
push
shl
popa
addl
push
aad
into
mov
add
or
sti
or
es
xlat
xor
pop
add
into
xchg
or
cmpb
fs
sbb
xchg
dec
loop
inc
add
add
xchg
testb
ljmp
jb
dec
mov
testl
fisttpll
adc
add
ljmp
add
nop
das
mov
inc
rorl
sbb
cmp
mov
inc
test
or
mull
mov
inc
cmc
subl
mov
popa
jbe
sub
les
inc
xchg
call
add
fwait
push
imul
les
add
add
mov
xor
push
clc
repz
inc
test
rorl
or
push
enter
jg
inc
jns
sbb
jne
and
jp
in
inc
push
fstl
aam
movsb
push
add
dec
nop
or
popf
ret
out
sti
sub
sahf
mov
int3
jg
jg
inc
xor
mov
scas
sbb
sbb
cmc
cmp
lahf
xchg
xchg
push
mul
push
aaa
movsb
lock
push
mov
or
dec
outsl
jg
dec
jecxz
das
sub
orb
pop
or
jo
jmp
dec
fdivrl
push
inc
js
decl
pop
ljmp
movsb
push
aaa
idivl
popf
dec
mov
pop
hlt
mov
sub
cmp
add
jmp
dec
sub
mov
lret
cli
pop
sti
mov
pusha
dec
dec
test
jg
ficomps
add
cmp
push
sbb
fiadds
mov
sub
pop
loopne
sbb
xchg
jle
xchg
fs
inc
or
rcr
jg
lretw
inc
inc
xor
xchg
jge
push
add
test
cmpb
das
pop
es
cmp
mov
mov
sbb
inc
std
fistpll
inc
or
cmp
jbe
push
int
imul
leave
das
dec
add
sbb
ja
pop
or
sub
ret
push
in
mov
scas
test
aaa
inc
mov
sarb
add
stos
fisubs
filds
inc
sbb
lret
mov
aaa
xchg
inc
jns
nop
cmp
adc
cli
lods
not
mov
jp
daa
sub
dec
cwtl
xor
cs
pop
imul
dec
aas
pop
cmp
mov
push
push
mov
jg
cmp
mov
idivl
popf
mov
scas
mov
inc
lea
sub
jmp
je
or
inc
xchg
lret
inc
lods
dec
dec
xor
fsubr
aas
data16
std
mov
mov
mov
addb
mov
xchg
jmp
out
cmp
jae
adc
fldenv
dec
addr16
inc
daa
pushf
ds
inc
fidivrl
cmp
pop
outsb
push
sbb
mov
mov
pop
out
jge
fwait
or
inc
dec
xchg
mov
jno
add
mov
jp
dec
mov
cmpb
jg
cli
inc
mov
xor
sub
aas
sti
jecxz
sbb
sub
mov
repz
lods
jp
cld
jbe
dec
fldl
sub
and
add
mov
jns
mov
adc
leave
aad
jg
pop
sahf
inc
xor
roll
add
maxps
cmp
ds
push
ret
ficompl
popa
mov
test
ja
lret
insb
add
loope
push
aas
test
xor
mov
add
test
test
lods
fcomps
out
cwtl
divl
inc
notl
aam
test
cmp
lcall
aad
in
cmp
sub
sub
outsb
stos
xchg
mov
adc
mov
dec
stos
add
fdivrs
fiaddl
jle
test
aas
mov
inc
sub
and
add
lods
iret
inc
xchg
aad
fildl
fnstenv
nop
lret
loope
dec
ds
xchg
outsb
mov
cwtl
dec
insb
repnz
inc
sbb
inc
lahf
mov
test
repnz
push
push
jg
and
test
push
fists
pop
adc
shlb
ds
dec
movb
cmp
ds
inc
add
movb
xlat
in
mov
int3
pop
jno
ret
sub
or
mov
scas
imul
je
roll
aas
sarl
jecxz
cld
jg
rep
lahf
sbb
inc
xchg
jnp
jle
or
dec
out
add
mov
scas
rorb
adc
imul
lock
das
clc
pushf
mov
das
rcll
ljmp
test
ja
bound
mov
or
call
and
and
and
mov
push
ret
dec
mov
sar
cmp
stos
push
nop
push
push
outsl
add
mov
xchg
and
cmp
mov
and
lock
xchg
scas
cmp
outsl
push
cmp
pusha
sub
push
std
inc
xchg
inc
lret
jne
ss
sbb
sbb
lret
les
xchg
cmp
push
aad
or
sub
insb
shll
mov
repz
push
or
jo
cmpsb
and
aas
das
pushl
mov
or
daa
in
sbb
xlat
push
add
inc
xchg
ds
sbb
shrl
jp
sbb
mov
pop
xchg
fadd
das
sbb
rclb
mov
jns
mov
in
xchg
sbb
pushf
cmpsl
pop
pop
pop
repz
fistps
dec
lret
aas
pop
stc
dec
pop
adc
cmp
ss
aaa
fwait
inc
jbe
sbb
pop
into
ss
ret
jl
scas
mov
cmp
lcall
sbbb
mov
pop
hlt
rclb
dec
sarb
lods
adc
inc
sar
ss
outsb
test
inc
lret
dec
movsb
cmpsb
iret
repnz
dec
push
mov
or
cmp
xchg
repz
mov
jo
inc
test
fsub
ret
sub
mov
enter
aaa
iret
je
inc
mov
jno
mov
xchg
fcomip
add
xor
push
add
lea
mov
and
xchg
mov
jmp
push
jno
mov
orl
aam
outsb
push
pop
xor
inc
aas
sahf
mov
mov
dec
lcall
sbb
pop
pop
or
imull
push
add
imul
ja
outsb
movsb
push
rolb
jl
mov
lock
mov
jl
inc
inc
dec
add
fiadds
mov
xor
mov
push
mov
pop
addb
aam
daa
addr16
mov
jle
testl
inc
xorl
lret
dec
bound
cmp
fldl
clc
push
pop
outsb
inc
jbe
out
cli
arpl
sub
inc
jnp
cwtl
fnsave
incl
pop
mov
lahf
shl
dec
push
leave
xchg
add
rclb
sub
xlat
negl
lret
movl
scas
inc
sbb
mov
adc
ljmp
push
sub
add
ret
movb
cmpb
add
jl
lea
outsl
sahf
lahf
inc
xchg
mov
outsl
cwtl
ljmp
push
ja
ljmp
ds
inc
inc
cmp
push
xor
popf
ljmp
adc
test
fcoms
das
lock
insl
rorl
dec
in
xor
aas
std
push
mov
fisttpl
setb
mov
clc
cmpsl
and
loop
pop
pop
pop
jge
xchg
mov
int3
pop
ja
inc
add
bound
jnp
add
fdivrl
dec
fisubrl
stos
xor
push
mov
push
sbb
and
inc
test
cmpsb
lods
addr16
xchg
jg
mov
sbb
ret
push
adc
test
lods
mov
dec
int3
sub
in
and
jl
pop
pop
sbb
je
sub
mov
shrb
mov
loopne
mov
nop
mov
mov
sub
cltd
push
cmc
out
cmpsb
jecxz
aas
pmullw
ss
imul
adc
shrl
aaa
mov
mov
jae
into
cmp
inc
adc
mov
arpl
inc
jl,pn
add
inc
aam
adc
pop
add
lods
pop
das
lods
or
ljmp
rcrl
and
mov
sbb
mov
test
dec
push
and
inc
pop
sbb
push
cmpb
mov
add
xchg
mov
enter
mov
mov
add
adc
scas
jo
fsubr
jg
push
mov
out
mov
jecxz
lea
das
idivl
vmovups
xor
adcl
scas
pop
aad
cmp
xor
mov
jg
sub
or
sbb
xchg
arpl
negl
test
in
lret
add
aam
inc
nop
int3
xor
cmp
cld
dec
dec
dec
mov
imul
inc
loopne
inc
jbe
cwtl
pop
or
shl
outsb
filds
ss
sarb
scas
inc
mov
inc
push
jnp
mov
jecxz
sbb
add
das
mov
movsl
loope
add
fistps
fisubrl
xor
xchg
pop
mov
fadd
icebp
ret
jae
adc
in
btr
lcall
rolb
pushf
and
test
push
dec
adc
jae
subl
sub
or
movsl
xchg
lret
outsb
mov
dec
pop
push
std
and
je
ds
xchg
add
pop
iret
push
clc
enter
fnstcw
repz
sbb
aaa
cmpsb
dec
jmp
sub
mov
mov
pop
cmpb
jae
and
jmp
icebp
xchg
xor
lcall
pop
dec
cltd
ret
pop
jg
scas
fimuls
sbb
sub
subb
decb
pushf
cmp
rcrl
sbb
jmp
adc
mov
adc
andl
dec
xchg
aaa
shrb
jns
jge
mov
sub
sub
xchg
pop
inc
mov
jmp
shll
push
add
push
jecxz
imul
inc
mov
cmpb
xchg
mov
dec
pop
dec
mov
adc
movsl
scas
sbb
test
cmc
lret
push
xor
push
dec
mulb
ret
sub
inc
mov
or
xor
jl
test
test
scas
push
popf
mov
pusha
in
mov
xchg
push
fmul
adcb
in
mov
dec
clc
pop
mov
mov
test
add
or
xor
movsb
cmp
pop
jae
arpl
fwait
popf
cmpsb
aaa
aad
and
shlb
inc
lahf
add
xor
imul
std
icebp
xor
lea
fdivs
sub
xor
les
pop
mov
adcb
xor
add
into
fidivrl
sbb
cmpsl
and
mov
mov
xchg
sub
int3
data16
bound
inc
push
loop
inc
outsl
mov
sbb
test
jl
mov
cmp
fisttps
test
xchg
aad
mov
sti
pop
dec
push
lret
adc
inc
shrb
out
stos
jae
loope
jge
ljmp
and
adc
ds
jb
clc
loop
mov
xchg
cs
add
cmpsl
dec
nop
cmp
mov
dec
mov
jg
leave
mov
aaa
subl
lcall
xchg
test
xchg
lcall
fiaddl
divl
scas
add
adc
dec
imul
imul
mov
inc
pushf
lret
pop
out
ficoml
pop
mov
mov
push
int3
pop
push
pop
sti
add
cmpsb
loop
mov
dec
outsb
cmp
push
xchg
cmp
jno
mov
inc
inc
out
cli
push
out
or
aad
sub
mov
add
mov
xor
sbb
xchg
jae
xor
clc
mov
fcomps
lahf
push
jb
and
or
xchg
movsl
or
or
mov
sub
inc
inc
cli
std
fidivrs
push
sbb
add
xchg
jp
cld
aam
jae
ljmp
xor
sbb
inc
or
xor
ja
cli
add
hlt
arpl
cld
xchg
mov
iret
xchg
add
outsl
mov
into
jg
pushf
cld
adc
or
xchg
mov
cmp
jbe
or
mov
mov
rorl
sbb
fdivrp
rolb
adc
inc
xor
and
lcall
inc
aaa
daa
cmc
xchg
outsl
cmc
pusha
fisubrl
mov
or
sbb
inc
sub
mov
dec
or
push
mov
mov
jae
pop
out
fwait
add
pop
int
sbb
fisttpl
and
add
sti
xchg
nop
cli
test
adc
mov
lods
nop
scas
mov
add
mov
inc
sbb
sbb
insl
imul
imul
ret
jnp
jae
inc
sbb
xchg
fcomps
inc
ljmp
cld
add
mov
pop
inc
sub
in
loope
into
cld
add
jecxz
xchg
push
clc
adc
pop
adc
cwtl
inc
jg
push
mov
stc
cmc
inc
sbb
cmp
mov
inc
mov
jl
sbb
mov
sbb
push
pop
in
or
push
jb
lcall
mov
lea
out
and
arpl
or
inc
push
mov
sbb
add
xor
xorb
outsl
xchg
inc
pop
pop
push
mov
test
push
xor
ss
mov
mov
or
ljmp
sub
push
inc
mov
or
fsubs
jle
mov
leave
jo
pop
loope
jl
jo
dec
mov
add
test
pushf
fdivr
leave
dec
xchg
inc
call
aam
or
test
cmp
mov
sti
fisttpll
mov
mov
repnz
jge
sub
lods
leave
lahf
xor
or
or
lret
cmpsb
mov
mov
and
push
mov
dec
cmpsl
and
dec
xchg
les
pop
hlt
es
in
lahf
js
or
dec
mov
cltd
movsl
push
inc
outsl
xchg
int
cmpb
and
test
loope
push
out
test
cltd
stc
mov
xchg
ds
mov
enter
mov
dec
xchg
or
std
syscall
inc
fildl
je
sbb
pop
orb
jb
dec
xchg
jbe,pt
ret
and
lods
iret
pop
add
jb,pt
pusha
add
jmp
aas
data16
andl
mov
pop
sti
adc
sahf
ror
sub
fwait
sti
pop
inc
inc
notl
mov
mov
sub
mov
daa
jmp
xorb
imul
gs
push
add
sub
adc
es
std
aas
mov
jae
xchg
fimuls
inc
outsb
nop
notl
scas
cli
sahf
pop
mov
or
mov
adc
mov
bound
cmp
call
add
xor
mov
insl
sti
lds
popl
mov
inc
je
mov
das
inc
cs
and
mov
aam
scas
std
xchg
aam
and
scas
das
addl
pushf
mov
lock
dec
in
aas
inc
pop
cmovno
cmpsl
pop
std
imul
push
xlat
sbb
hlt
xchg
or
fistps
or
int3
and
xchg
xchg
lods
inc
add
sarl
mov
xchg
inc
test
jo
test
test
bound
mov
int3
sbb
jg
clc
mov
xlat
fidivrs
cmpb
loopne
xor
repnz
mov
into
fldl
gs
sar
imul
adc
mov
test
dec
jnp
ljmp
inc
fcoml
loope
dec
shl
mov
addr16
or
sbb
test
and
ljmp
cwtl
sti
xlat
decb
hlt
dec
test
ret
inc
jl
out
mov
inc
pop
xlat
and
movsb
mov
gs
mov
dec
bound
adc
lds
cmpsb
sbb
lcall
push
or
add
cmp
pop
mov
mov
sub
lahf
enter
ss
dec
pop
imulb
xchg
pop
add
aad
aas
add
fdivl
pop
sti
lret
je
push
ss
cmp
sahf
mov
mov
jg
shrb
mov
mov
xchg
jl
xchg
ja
jns
std
daa
mov
or
push
aam
ret
pop
or
outsl
sahf
orl
xor
mov
mov
or
sti
mov
je
jle
sbb
cmp
aam
push
push
and
lea
jg
jnp
testl
pop
sarb
bswap
ds
adc
mov
loopne
xorl
nop
jp
adc
leave
imul
mov
sub
fcomp
inc
dec
push
push
ret
xlat
inc
das
dec
mov
pop
repz
nop
inc
outsl
inc
mov
pop
xchg
xchg
es
mov
loope
ret
out
incb
or
mov
push
aam
push
out
repz
xchg
pushf
sbb
ja
leave
xchg
mov
mov
daa
out
stc
push
pop
addl
push
aad
inc
fmull
pop
jae
jae
ljmp
sub
sub
push
sbb
mov
cli
mov
sub
rcrb
pop
js
shll
call
mov
loopne
cmp
jg
iret
test
mov
pop
fstpl
inc
test
push
out
fwait
jle
inc
aam
ja
cmp
dec
mov
dec
pusha
cmp
mov
or
xchg
decl
aas
sbb
dec
loopne
decl
imul
add
nop
sar
outsb
and
lcall
fcomip
loop
ret
cwtl
cwtl
lret
push
sub
pop
scas
mov
mov
addr16
inc
fstps
test
loopne
lcall
lock
out
andb
ret
in
std
rcrl
insb
out
pop
inc
pusha
cmpsl
mov
loope
push
mov
pop
pop
ljmp
and
imul
shll
ss
fwait
ja
xor
or
loope
xchg
cli
add
lahf
xor
push
push
sbb
push
das
arpl
sub
adc
inc
xchg
iret
add
pop
fisubs
pop
sar
pop
mov
lods
outsl
add
add
and
pop
sbb
inc
pop
ja
je
nop
cmp
sbbl
xor
icebp
test
leave
fcoms
les
mov
aad
and
dec
mov
scas
xchg
sbb
cmp
mov
pushf
jmp
pusha
lahf
cmp
dec
icebp
cs
pop
adc
dec
outsl
popa
xchg
ret
mov
mov
and
mov
push
cwtl
cmp
pusha
int
push
ffree
sub
and
scas
sub
test
lret
insb
ret
aad
push
call
int3
push
add
pop
andb
jno
pushl
sub
aaa
add
xor
bound
sbb
shlb
rcrl
mov
cmpxchg8b
stos
pop
xlat
mov
jl
pop
push
cmp
dec
xor
inc
ficomps
jne
mov
dec
dec
or
adc
scas
xchg
mov
push
sti
outsb
into
aad
xchg
ret
mov
pop
push
sub
mov
inc
out
cwtl
je
push
icebp
add
pop
lret
pop
daa
lods
xchg
add
xor
mov
pop
out
mov
jle
push
sub
int
add
inc
add
lods
cmpb
pop
scas
inc
andl
repnz
enter
jbe
repnz
pop
fcmove
lcall
add
repz
pop
mov
icebp
cmp
mov
xor
xorl
int3
add
inc
pop
lea
pop
jge
xchg
outsb
jne
into
adc
mov
pop
int
xor
xchg
ret
ljmp
inc
ret
and
or
pop
adc
mov
xchg
dec
fcmovnbe
loopne
mov
rdrand
inc
std
daa
mov
aad
inc
fwait
icebp
jmp
test
pop
mov
inc
mov
adc
mov
rorl
test
int3
add
adc
cwtl
popl
dec
jmp
adc
dec
mov
mov
xlat
lcall
mov
push
xlat
insb
cmpsb
xor
dec
add
fidivrs
sub
xlat
hlt
mov
xor
lret
xchg
xor
jl
popf
int
mov
sbb
test
push
push
adc
xchg
in
inc
sub
fsubl
outsl
mov
jle
js
add
adc
addb
add
sar
mov
shlb
add
push
dec
add
mov
add
lds
pop
rcrb
mov
fldt
arpl
jae
push
inc
test
mov
add
les
inc
gs
add
add
inc
mov
leave
out
ja
test
lcall
inc
jae
jle
clc
mov
mov
sarb
xchg
das
inc
xor
jo
mov
in
movsb
imul
add
adc
pop
push
pop
lahf
sarb
test
shlb
push
mov
dec
dec
sub
lcall
adc
cmp
jge
out
cmpsb
test
pop
and
aaa
test
mov
mov
ja
mov
mov
sub
sarb
ds
ss
adc
sub
ljmp
or
inc
testl
scas
lock
inc
jl
push
jp
in
xchg
dec
pop
push
addr16
pop
push
lock
push
aaa
and
imul
push
push
mov
data16
lsl
pusha
jle
dec
das
jle
jg
fs
loopne
jbe
lahf
into
aas
into
inc
pushf
inc
push
aas
cmpb
xor
popa
fidivs
adc
fs
mov
adc
das
push
shl
lods
mov
lcall
cmc
inc
mov
xor
das
sub
add
sbb
mov
push
aam
xor
in
shlb
les
and
inc
ds
mov
pop
loop
jg
or
shrb
stc
into
mov
stc
push
adc
inc
sub
nop
ljmp
test
decl
ljmp
outsl
and
cmp
pop
and
cmp
lods
addb
and
inc
lahf
or
xor
mov
fsubl
mov
enter
push
gs
into
mov
subl
sub
lea
enter
loop
mov
pop
testl
scas
inc
inc
sbb
mov
loop
push
sub
or
jg
adc
cmc
inc
cmc
ret
and
cmp
pop
inc
mov
pop
sub
daa
sub
push
xchg
jne
orl
push
loop
adc
lcall
loopne
inc
sbb
gs
daa
lahf
mov
je
fidivl
lahf
scas
aaa
mov
les
nop
inc
dec
dec
xchg
mov
xchg
idivb
inc
mov
dec
mov
jb
cs
inc
hlt
idivl
das
push
clc
repz
test
imul
add
out
hlt
add
lret
xor
jle
and
stc
sub
inc
xchg
jno
adc
insb
pop
ljmp
cmc
das
imul
sub
shrl
test
add
xor
mov
push
jecxz
jb
lahf
xorl
jo
add
pop
mov
inc
inc
mov
out
adc
dec
mov
sub
pop
scas
adc
sbb
in
or
pop
and
jbe
dec
mov
stc
xor
push
mov
inc
in
xor
sub
adc
inc
iret
add
stos
lret
dec
jg,pt
fstps
dec
sarb
mov
fiadds
loop
cmp
pop
loop
jmp
mov
int
inc
cmp
mov
xchg
or
dec
push
sub
pop
fcompl
cmp
ss
xlat
push
fdivl
dec
fidivl
stc
lods
sub
scas
push
inc
dec
add
adc
inc
dec
xlat
mov
pop
testb
fwait
mov
push
or
stos
pop
xchg
sarl
jecxz
sti
add
dec
mov
or
leave
sub
add
mov
sahf
stos
ret
dec
scas
lret
pop
or
sbb
test
iret
lods
fs
or
imul
jnp
testb
adc
imul
inc
mov
test
scas
mov
out
aas
into
stos
mov
rolb
jg
sbb
das
cltd
test
ret
jne
adc
fs
jns
sahf
xchg
les
cmp
ficomps
xchg
jmp
imulb
push
les
or
sbbl
push
xchg
cwtl
out
mov
jno
lods
dec
or
clc
popa
pop
rorb
add
xchg
bound
fcmovne
or
lahf
stos
xor
loope
cli
jmp
and
fld
jmp
fsubl
and
inc
ret
leave
push
add
and
inc
rcrb
addr16
inc
inc
jb
or
mov
aad
jbe
outsl
or
or
sbbb
jb
mulb
fisttpl
enter
dec
cmpb
outsl
add
push
test
push
add
pop
xchg
fcoms
push
lret
lock
cmp
sub
jecxz
in
fnstenv
aad
imul
addr16
loop
jns
daa
dec
xchg
imul
lret
aad
add
out
les
push
cmp
lret
xor
or
or
cmp
cmpl
dec
aas
pop
in
loopne
mull
dec
xor
pop
dec
sub
mov
pop
inc
sbb
adc
mov
add
movl
idivb
and
shlb
push
mov
mov
incl
sti
xchg
mov
fcompl
repz
cmpsl
mov
aas
rorb
jmp
iret
mov
mov
jle
movl
aaa
ret
xchg
orb
scas
pop
pusha
dec
cmp
mov
sub
outsl
into
out
inc
add
jmp
jae
pop
cwtl
aas
xchg
jp
adc
cli
fidivrs
and
xor
decl
push
add
cmp
mov
xchg
addl
jmp
jle
cmpsb
xchg
fdivrs
cwtl
idivb
mov
pop
mov
lret
mov
xor
sub
je
adc
or
ret
xchg
xor
adc
add
out
adc
std
xchg
icebp
addr16
sub
shrl
iret
fldl
mov
lret
push
fdivrl
push
or
cwtl
adc
bnd
test
pop
cmp
les
shrl
mov
jge
jp
fidivrl
and
shlb
adc
pop
pop
iret
lret
aam
mov
sub
enter
dec
cmp
aas
mov
clc
das
inc
loopne
ljmp
mov
lock
xchg
or
ljmp
xchg
nop
dec
mov
cmpsl
jl
sbb
mov
mov
sbb
add
adc
loope
aas
cmp
add
mov
jge
in
inc
sub
and
pop
pop
dec
mov
xchg
int3
adcl
pop
pusha
incb
sub
ds
mov
sbb
sbb
bound
mov
sub
push
push
cwtl
addb
stos
add
pop
inc
cmpsb
aam
xchg
test
clc
aas
or
decb
inc
xor
mov
xchg
cmp
or
inc
and
inc
in
cmpsb
jbe
ret
adc
or
aas
mov
sbb
sub
push
out
aam
fimull
dec
or
sub
rorl
mov
scas
jae
orb
mov
dec
mov
movl
iret
pop
or
hlt
incb
inc
sti
cltd
inc
push
lods
repnz
out
or
fs
shlb
lahf
repnz
pushf
jnp
out
ror
fistl
adcl
adc
les
xchg
dec
push
jp
ja
jecxz
and
cmp
andl
clc
in
gs
insb
push
in
mul
imul
mov
cli
jo
xor
ret
stc
xor
lcall
xchg
in
aam
jno
lods
out
std
and
dec
stos
lods
insb
popf
dec
sbb
insb
ret
pop
dec
hlt
pop
iret
aam
in
ret
dec
ja
mov
xchg
and
sti
jae
mov
lcall
icebp
sbb
lahf
sbb
aam
dec
mov
sub
cmpsl
adc
repz
mov
iret
inc
daa
inc
ss
popl
sahf
add
jmp
out
ffreep
xor
dec
xor
add
jle
out
or
pop
loop
fistps
fnsave
mov
and
fs
test
popa
sbbl
lahf
in
hlt
or
or
inc
mov
dec
repnz
aam
enter
loop
aas
push
fsubrs
mov
cmp
ds
inc
push
loopne
mov
add
xchg
pop
pop
mov
addb
cltd
mov
fcomip
xchg
mov
dec
sub
mov
aaa
pusha
andb
lret
sub
inc
sub
mov
fwait
dec
mov
sub
xlat
mov
inc
sub
push
push
cli
les
sarl
scas
and
out
push
pop
push
mov
xchg
mov
pop
or
out
in
aaa
pop
dec
ror
xor
lea
sub
pop
sarl
mov
enter
push
adc
mov
push
test
je
outsl
sahf
les
add
xor
das
adc
dec
in
jmp
das
imul
mov
xchg
out
and
xor
adc
sbb
stos
inc
mov
xchg
jle
jg
push
adc
cmpsl
dec
or
stos
add
jp
sub
test
jne
push
xchg
lea
dec
jl
mov
or
into
into
testb
and
mov
cltd
cmp
mov
ljmp
rcll
push
inc
ret
dec
lds
testb
pop
outsl
push
sbb
ljmp
negb
pop
outsb
mov
mov
ds
push
lea
cli
cld
mov
lea
mov
mov
adc
mov
push
adc
mov
int3
ret
jns
and
xchg
inc
mov
mov
cmp
aaa
sub
ret
cmp
mov
shr
xlat
xor
add
test
or
out
outsb
mov
pop
add
test
inc
pop
inc
add
cmc
dec
pop
jl
push
cmp
sti
aaa
dec
or
popf
inc
addr16
add
scas
xchg
stos
mov
arpl
out
ljmp
cmp
inc
xchg
or
add
aaa
dec
mov
cwtl
push
jns
fs
out
andb
inc
repnz
fstl
into
cmc
mov
mov
ret
cltd
mov
dec
cmp
rorl
or
rol
xchg
mov
int
xor
aas
std
mov
pop
inc
rcrb
add
daa
xor
cmp
fwait
or
mov
cld
jl
pusha
cmpsl
prefetch
mov
cmc
inc
push
or
xchg
and
ss
pop
and
shl
sbb
outsl
cmp
mov
leave
mov
adc
inc
push
pop
xchg
enter
mov
push
adcl
add
mov
iret
repnz
adc
xor
cmpb
xor
inc
aad
pop
imul
and
aas
mov
lret
dec
push
das
lods
xlat
in
aam
lea
rcll
sbb
sbb
add
xor
js
jl
mov
sti
xchg
push
ds
adc
repnz
fistpl
inc
and
test
lahf
mov
add
pop
mov
jmp
inc
mov
fdivrl
or
leave
push
cwtl
xor
filds
adcb
inc
mov
test
aas
imul
inc
test
inc
ljmp
push
pop
xlat
mov
pop
and
sahf
shl
cli
aaa
mov
push
mov
xchg
pop
sub
ret
leave
cmp
repz
das
lret
lcall
cmp
pusha
and
or
cmpsb
mov
cltd
mov
fstpl
inc
fildll
mov
xorb
pushf
add
inc
test
je
pop
add
into
movsl
aas
or
jno
adc
cmpsb
ret
mov
fbld
popf
mov
dec
inc
pusha
pop
test
fnstenv
and
add
xlat
add
outsl
data16
in
xor
dec
scas
movl
and
push
std
mov
das
mov
jne
xor
add
pop
cmp
jo
loopne
dec
scas
ret
inc
imul
add
mov
jno
cmp
rcr
cmp
lret
pop
movl
lret
mov
sbb
dec
push
ljmp
aad
dec
mov
stc
adc
adc
adc
adc
rorb
adc
mov
fs
movsb
jmp
pop
push
mov
lcall
pop
lcall
pop
mov
cwtl
outsl
sbb
jne
fidivrs
sub
or
push
jo
scas
dec
ret
dec
pop
push
movsb
sub
bound
aad
inc
bound
mov
ljmp
lea
mov
dec
jns
mov
inc
cs
aas
into
jnp
movsl
jle
push
mov
lds
pop
rol
aas
fdivp
shll
add
lcall
xlat
pop
cs
pop
add
aas
bnd
ss
xchg
add
pop
scas
mov
sahf
orb
pop
xor
or
jg
shrl
xor
xchg
jmpw
loop
pop
enter
push
push
mov
and
pop
dec
mov
cmp
mov
fcmove
push
jns
fadd
jae
test
or
stos
push
roll
shll
jl
add
sbb
xchg
mov
mov
jl
xchg
sub
pop
dec
push
pop
cmc
fdivrl
push
loopne
das
adc
xor
push
pop
popf
jp
jp
adc
add
dec
mov
dec
and
sub
mov
lea
add
or
mov
subb
fisubrl
mov
xchg
lret
nop
mov
clc
adc
fcomps
orl
aad
mov
dec
sbb
mov
outsl
scas
sub
mov
ffreep
mov
push
shrl
pop
fbld
push
adc
or
or
jnp
xor
adc
mov
fwait
mov
out
adc
subl
cmp
mov
mov
mov
test
mov
dec
mov
push
inc
push
add
adc
sub
sub
xlat
inc
xorl
mov
jno
xchg
push
sub
notl
mov
xchg
into
adc
adcb
pop
aas
repz
inc
jbe
xlat
xchg
sub
je
push
sahf
mov
pushf
dec
or
mov
dec
outsb
iret
inc
push
loope
pop
out
cmp
jno
and
xor
faddp
xorl
es
push
add
js
les
nop
adc
fs
divl
mov
in
add
xchg
dec
ja
incb
subb
sti
cmc
push
mov
ret
cli
aas
inc
dec
or
mov
mov
xorl
and
jbe
xor
mov
daa
arpl
mov
es
sub
mov
or
push
pushf
enter
push
sti
pop
fldt
add
cmp
jge
les
iret
out
into
scas
xor
pop
jnp
adc
jb
aaa
inc
or
mov
jl
add
outsb
inc
cld
mov
stos
jp
cwtl
inc
xchg
aaa
test
rclb
vpsubw
enter
inc
sub
push
inc
sti
shl
popf
aam
add
adc
dec
mov
pop
mov
test
movb
lret
or
shlb
sbb
vpaddusb
shlb
push
or
fiadds
sbb
lret
cmc
jno
fxam
jl
movsl
inc
mov
movsb
cmpsb
push
call
movsb
dec
movsl
in
insl
cli
scas
ds
and
pusha
pop
ucomiss
inc
lods
push
dec
popl
sbb
movsb
cltd
mov
movsl
ret
outsl
movb
mov
pop
adc
sub
into
shl
push
ret
iret
inc
push
addr16
mov
cmp
pop
pop
repnz
sub
inc
test
or
daa
shll
xor
mov
xchg
ds
fidivrl
cs
test
pop
mov
clc
add
out
or
imul
bswap
xchg
lods
int3
imull
dec
sbb
jle
adc
push
dec
enter
mov
or
scas
inc
std
lret
mov
lahf
mov
insb
cmp
adc
push
popa
cmpb
icebp
int
mov
dec
arpl
ror
xrelease
dec
mov
fs
xor
pop
inc
jle
insb
pop
inc
mov
push
sahf
or
std
shrl
jns
fwait
aaa
das
jns
sub
xlat
rcr
hlt
lock
push
mov
inc
in
mov
xchg
jb
jno
inc
xorb
ror
scas
cmp
fs
in
xchg
sahf
nop
xchg
stc
shll
or
loope
faddl
out
inc
xor
mov
mov
inc
mov
ret
sti
out
pop
mov
icebp
inc
pop
push
das
cs
das
jmp
fidivrl
xchg
jmp
add
add
sub
notl
repz
sbb
inc
outsl
aas
les
push
shrb
das
xchg
fnstenv
ror
ja
mov
lcall
adc
sub
cmp
orb
lds
sub
fdivrs
aaa
mov
outsb
adc
push
fdivs
aaa
jl
mov
and
int3
jmp
adc
aaa
add
lret
inc
test
or
fld
stc
mov
rorb
mov
mov
dec
cmp
js
hlt
jmp
stos
mov
mov
in
xor
dec
aas
dec
movsb
lods
shrl
andb
fsubs
dec
xchg
rorb
jb
push
dec
jge
adc
or
addb
mov
cmp
cli
pop
mov
ja
add
shlb
cmp
ss
push
inc
pop
xor
aam
stc
cmp
dec
xchg
jle
cmp
or
adc
xlat
loope
test
insb
addr16
pushf
js
push
xchg
or
or
push
cmp
adc
cmp
js
mov
inc
ret
loopne
loope
sub
mov
or
ret
jmp
int3
or
cmc
inc
incl
inc
aaa
shlb
jae
cmc
scas
subl
jo
mov
sar
jo
test
push
push
pop
jle
fadd
in
xor
addr16
sub
and
mov
andb
and
and
push
popa
adc
cmpsb
jg
push
test
jmp
mov
xchg
sub
movsb
adc
pop
push
mov
cmp
pushf
jmp
imul
inc
mov
jmp
inc
push
aas
adc
fwait
cli
das
dec
sbbb
fwait
ss
cld
sbb
fsubl
rolb
mov
aaa
cs
popf
mov
popa
and
pop
fidivl
mov
movsl
loope
subb
gs
ljmp
loope
jo
adc
or
fidivl
jnp
div
inc
rorb
jecxz
mov
lock
je
pop
lcall
jmp
cltd
push
fidivl
mov
inc
bound
repz
jle
cmp
and
or
mov
xor
pop
cmp
jmp
iret
xor
fisttps
bound
scas
ret
bound
xchg
inc
push
inc
sub
ret
mov
push
push
scas
movl
adc
push
jb
sti
xchg
mov
mulb
jge
ret
aad
adc
pop
popf
push
add
dec
mov
inc
mov
aaa
mov
jmp
jg
shrl
ror
mov
outsb
int
rolb
scas
movsb
pop
ja
jbe
xchg
aam
data16
adc
out
and
cld
fldcw
fld
pushf
lcall
mov
fisubl
je
lahf
repz
cltd
inc
out
rolb
arpl
ja
pop
cltd
daa
jne
repz
scas
pop
mov
jge
loop
imul
test
xchg
fwait
hlt
fmull
xchg
adc
and
and
push
jae
pop
mov
fs
pop
mov
adc
lcall
cmp
les
cvtpi2ps
aas
fdiv
arpl
and
push
inc
pushf
xchg
outsl
out
adc
jge
mov
ss
repz
cltd
cmpsl
add
jle
aam
shl
jl
mov
dec
jae
inc
iret
xlat
mov
mov
cmpl
and
imul
cwtl
xchg
ja
push
mov
xchg
and
push
mov
cmp
xchg
pop
dec
imul
mov
mov
sbb
aas
push
push
xchg
ret
push
xchg
mov
or
pop
in
mov
xchg
mov
clc
pop
add
sbb
pop
rcrl
scas
mov
adc
jecxz
popf
mov
mov
out
mov
data16
xor
cmpl
push
js
mov
repz
mov
inc
dec
std
cmp
or
jnp
movsb
xor
hlt
jmp
jae
add
in
xchg
imul
negb
cmp
xor
loopne
shrb
ja
inc
mov
loopne
bound
ficoms
cmp
inc
sub
addr16
adc
pop
pop
or
dec
in
out
inc
inc
jp
jmp
repz
out
adc
mov
stos
mov
fs
repnz
test
add
and
jle
ss
jnp
outsl
jno
dec
addr16
into
je
add
adc
test
xor
xchg
mov
shlb
xor
add
stos
icebp
inc
sub
pop
xor
int3
inc
dec
fists
orl
mov
in
or
lret
out
add
add
rcrl
and
xor
push
mov
xchg
inc
in
mov
scas
pop
mov
pusha
fdiv
jle
aad
mov
pop
mov
bound
or
mov
daa
outsb
inc
test
ret
xor
loopne
enter
in
pop
mov
aaa
pushf
sbb
jl
mov
push
sub
cli
hlt
test
adc
ljmp
ret
jnp
xlat
push
rorb
ljmp
jno
outsb
mov
lret
imulb
imul
orl
sub
fs
sbb
mov
pop
jp
test
sbb
call
aaa
popf
fiadds
je
jo
scas
insl
sub
je
lahf
scas
movsl
add
cmpsb
and
mov
in
pop
dec
push
out
mov
rcrb
ja
sub
dec
sbb
or
push
sub
xchg
xchg
rorl
mov
mov
ljmp
push
pop
fsubr
popf
rcll
out
mov
xchg
pop
cld
inc
dec
add
and
aas
in
aaa
inc
jle
test
outsl
jbe
and
cmp
jle
ds
fadds
insb
push
dec
mov
outsl
mov
mov
pop
dec
jecxz
fwait
cmp
sub
inc
cwtl
adc
jle
jle
ljmp
mov
push
sbb
packsswb
mov
icebp
lahf
out
sub
xor
ds
inc
cmp
sub
adc
xchg
push
jmp
jmp
loope
jmp
in
mov
sbb
bound
jl
cmp
pop
mov
movaps
jno
data16
mov
cmp
inc
mov
xor
movsb
stc
addr16
sub
inc
aad
mov
jle,pt
stos
loop
xchg
mov
sbb
fistpl
adc
sub
sbb
aas
sbb
pop
xchg
loopne
jle
ds
xor
and
jns
dec
fs
ja
ja
out
movl
and
jle
arpl
out
nop
mov
pop
pusha
add
cmc
iret
sarb
mov
mov
sarb
xchg
out
or
fidivs
pop
repnz
aaa
cmpsl
popa
mov
add
clc
call
xchg
dec
pusha
cmp
ds
xchg
mov
movsl
jae
sub
mov
out
and
dec
mov
inc
jmp
jle
mov
inc
jae
adc
fsubrs
push
test
xbegin
loope
dec
lods
fsts
or
dec
or
jnp
mov
jle
jge
and
mov
aam
ret
jecxz
mov
xchg
test
pop
in
xor
es
ja
ds
ds
cltd
xor
jb
or
imul
inc
add
cmovg
mov
jle
or
je
push
jb
cs
shl
js
jecxz
or
xlat
dec
pop
test
xlat
iret
outsl
jae
push
lahf
jle
xchg
mov
xor
cli
fwait
mov
and
mov
xor
sbb
mov
lock
push
imul
movsl
lcall
mov
jle
inc
jp
push
cmp
cltd
imul
pop
decb
mov
push
into
outsl
mov
movl
std
roll
xchg
and
fs
stos
fsubs
test
xor
ds
pop
jbe
cmp
or
sbb
cs
mov
jle,pt
or
xchg
or
adc
mov
shll
sahf
dec
xor
shlb
jle
movsl
pop
test
cmc
xor
sub
or
leave
out
mov
add
inc
scas
push
sahf
data16
ds
sub
add
fld
gs
lahf
xchg
outsb
movsb
jne
daa
push
push
mov
dec
add
or
js
inc
loope
test
stc
test
pop
jae
add
jb
mov
mov
iret
jle
jle,pt
mov
sbb
lods
popf
sbb
xor
stos
sbb
in
sub
mov
mov
inc
es
icebp
push
push
aas
add
or
adc
loope
sub
ja
xor
push
mov
aam
mov
sbb
push
lcall
mov
pushf
cmpsl
lods
sbbb
push
std
add
cmp
push
jle
mov
notb
fnstcw
incb
add
adc
insl
popa
aaa
adc
push
enter
jle,pt
mul
or
roll
orl
cmpb
gs
adc
test
sbb
lods
jge
jle
or
nop
sub
movsl
dec
fdivrp
outsl
mov
cmp
sbb
jno
test
jle
ror
fwait
xor
cmpl
and
xor
mov
or
push
pop
adc
jns
jb
leave
pusha
addl
addr16
push
sub
test
outsb
cmp
add
pop
inc
pop
or
subl
pop
mov
inc
jg
push
iret
jg
mov
dec
mov
inc
rolb
aaa
xorps
inc
jg
outsl
jp
pop
cmc
out
push
pop
popf
lahf
sub
pop
addr16
mov
jg
sbb
mov
inc
pop
mov
je
lcall
xor
mov
imul
push
mov
pop
inc
cmp
ficoms
adc
int3
rcl
adcb
sbb
cli
push
bound
cmp
jp
mov
mov
icebp
out
mov
icebp
test
mov
in
sarl
pop
and
mov
lret
dec
xor
jbe
lahf
push
mov
scas
fimuls
fs
add
pop
lock
pushf
inc
cmp
test
sub
pop
xor
dec
xchg
lcall
fimull
or
inc
pop
mov
int
adc
xor
sti
mov
into
mov
sub
lods
inc
outsb
movsb
mov
cmp
inc
mov
insl
jae,pn
enter
fbstp
outsl
and
lahf
push
in
fbld
xor
subl
mov
das
xchg
lahf
xor
mov
and
lretw
fbld
stos
movsb
adc
xor
jae
fildll
cmp
fbstp
movsb
das
mov
add
mov
ja
dec
dec
lods
or
inc
and
jb
cmp
in
cmc
pusha
int
cwtl
mov
ds
andb
dec
out
test
loopne
fcmovnu
scas
loopne
inc
inc
inc
xor
mov
scas
andb
lods
rclb
movsb
pop
lret
clc
pop
and
test
jnp
in
fstpl
aaa
sbb
scas
cmp
lss
cmp
movsl
inc
fldt
mov
jp
int3
arpl
or
xor
ds
mov
ljmp
sub
add
mov
test
mov
testl
and
or
std
insl
inc
mov
cld
gs
jl
ljmp
push
cs
fld
xchg
mov
push
out
push
jle
push
addr16
add
sbb
jp
pop
popa
dec
and
dec
add
add
sahf
mov
dec
xor
outsb
cmc
ret
mov
adc
mov
sub
fmuls
xchg
cmc
movsb
les
sahf
push
jge
pop
dec
xchg
arpl
and
in
outsb
negl
sbb
data16
push
int
or
mov
dec
xchg
outsb
std
push
call
repnz
sub
test
aam
jno
sti
add
fsubrs
mov
jbe
decb
mov
mov
or
mov
lea
in
jae
mov
xchg
iret
movl
jge
mov
insb
jo
xor
ret
pop
jne
push
add
test
jbe
xchg
xor
mull
nopl
pop
jo
adc
mov
inc
push
stos
cltd
mov
dec
gs
or
ficoml
pop
jle
ds
fadds
pusha
xchg
push
adc
inc
jae
cwtl
nop
xchg
inc
push
jmp
outsb
mov
pop
cmpsb
mov
int3
sub
into
int
shll
mov
aas
inc
fidivrs
jle
sbb
fwait
cli
das
into
xchg
cltd
pop
xchg
ds
rcrb
lcall
xchg
bound
xchg
enter
mov
std
mov
pop
ror
push
in
and
shlb
movsb
das
mov
aas
mov
xor
push
fcomp
mov
fdiv
enter
leave
es
je
pusha
leave
in
xor
adc
mov
iret
inc
xchg
cmp
pop
loopne
movsb
fcomps
mov
sbb
inc
mov
cmp
mov
scas
inc
mov
hlt
fcmovnu
jmp
movl
mov
cli
jbe
lock
gs
mov
stc
pop
mov
jmp
jle
mov
jnp
cwtl
pop
loopne
lods
pop
fcoms
sahf
ds
mov
aam
cmp
mov
lahf
xor
sub
int3
xchg
dec
cli
cmp
cmp
out
das
jmp
jns
ja
mov
pop
push
scas
jae
sub
mov
pop
pop
lret
gs
pop
sub
jle
pop
push
inc
orb
add
out
imul
aaa
jae
mov
xor
notb
mov
adc
loopne
lods
outsb
cmpsb
inc
cmp
test
dec
iret
mov
add
xchg
es
das
add
cmp
or
mov
xor
insb
sbb
mov
out
cmc
cmc
xchg
jle
jmp
ficomps
scas
insl
push
push
push
jb
and
or
lret
adcb
cmp
mov
mov
adc
mov
pop
xchg
outsl
pop
and
jae
jge
adc
cwtl
mov
xor
ds
cmp
inc
outsl
enter
iret
loope
jecxz
push
pushf
jp
mov
xchg
xor
lods
pop
in
aad
push
and
icebp
loopne
mov
lahf
fidivl
popl
out
jbe
je
cmpsl
xor
push
and
pop
imul
sahf
push
ss
sub
ljmp
xchg
ds
inc
cld
or
adc
mov
pop
rolb
cmc
data16
mov
add
stos
in
lahf
sarl
xchg
pushf
in
repz
sahf
push
and
icebp
jecxz
mov
outsl
and
sbb
inc
dec
into
inc
pop
sbb
insl
in
movsl
pop
stc
pop
subb
xor
sub
mov
push
adc
stos
mov
mov
add
incl
jle
das
lret
orb
sub
sub
pop
cmc
jmp
shlb
xor
cltd
adc
pop
fxch
xor
ret
ds
lds
dec
dec
jg
or
lods
mov
daa
lahf
pop
cli
mov
sub
inc
inc
adc
fstpl
mov
out
fcoml
sahf
das
lds
stos
xchg
scas
sbb
and
pop
ret
shrl
lret
lds
scas
mul
sahf
ffreep
xor
out
sub
mov
arpl
and
lahf
xchg
jp
jle
movsb
out
pop
mov
lcall
xchg
arpl
or
icebp
pop
icebp
mov
and
inc
pop
lret
cmpsl
mov
jle
ret
test
sbb
mov
and
arpl
sbb
in
add
mov
scas
scas
pusha
push
cwtl
pop
shrl
and
scas
adc
mov
outsl
pop
mov
lahf
add
push
xlat
cmp
mov
negl
push
pop
jno
dec
fxch
lds
dec
out
mov
push
cltd
mov
fcmovnu
mov
ret
pop
ds
mov
repz
dec
sbb
mov
sub
adc
pop
lds
dec
pop
add
daa
ja
mov
subl
dec
iret
or
sub
cmc
lea
xor
inc
out
icebp
and
xor
dec
mov
pusha
icebp
push
cs
and
sti
shlb
jbe
sbb
sub
mov
es
imulb
and
fdivrs
cmc
shrb
scas
mov
cmp
lods
negb
scas
inc
pop
pop
add
push
or
test
pop
push
add
or
repnz
repnz
cs
popa
and
jb
jno
dec
sub
sub
lods
inc
mov
or
insb
sti
pop
dec
lahf
in
shlb
sub
lods
fbld
sti
push
or
sub
popl
addr16
inc
mov
mov
mov
xchg
insl
pop
movsl
mov
insl
in
testl
and
sub
test
or
xor
pop
and
jge
jmp
fucomi
add
in
fs
push
ret
cmpsb
rorb
icebp
jle
insb
inc
pop
jbe
mov
pop
xchg
xor
stos
in
mov
cs
imul
add
xchg
push
mov
dec
jno
fcomip
jbe
repz
shll
addb
pop
out
inc
jbe
call
inc
pop
sbb
push
lods
jo
mov
mov
dec
pop
je
sbb
sub
dec
aam
jae
std
cmp
pop
inc
in
mov
xor
incb
cs
or
dec
andl
enter
loop
andl
xor
das
mov
sbb
hlt
rcrb
call
test
in
out
jp
jne
sub
xchg
inc
or
mov
or
lahf
pusha
push
lret
pop
fwait
inc
lret
sbb
xor
lahf
rol
mov
jne
xchg
faddl
xor
jnp
jno
mov
out
cmpsb
scas
ljmp
popa
jns
imul
test
je
pop
jae
inc
inc
int3
inc
rcr
or
mov
sbb
lods
or
or
xchg
xlat
mov
insl
arpl
push
inc
or
mov
jle
inc
iret
mov
jb
call
test
push
xchg
mov
shrl
outsb
lods
jo
pop
and
or
push
mov
imul
lcall
or
int
testb
mov
xlat
aas
jle
lds
pop
push
push
dec
rcrb
jg
xchg
cmc
lock
lret
mov
sbb
mov
bnd
fiadds
lea
push
push
js
adc
fsubs
je
dec
cs
xchg
mov
jns
in
mov
jg
lcall
outsl
rcll
sahf
fbld
pop
insb
out
push
stos
inc
mov
bound
mov
stc
cli
inc
stos
and
ljmp
pop
dec
dec
insb
bound
xchg
outsl
lahf
mov
jae
add
ljmp
clc
xor
push
and
test
fildll
ljmp
or
push
mov
shrb
mov
mov
divps
cmpsl
movsb
pop
enter
sbb
rcrb
fisttps
ficompl
xor
dec
add
jne
and
or
imul
jno
jne,pn
adc
imul
or
pmuludq
subb
test
loope
xchg
cmc
fidivl
enter
inc
es
fildl
popf
mov
push
push
bound
lea
jb
notb
lret
or
pop
dec
sbb
jecxz
pushf
or
mov
sub
gs
sbb
xor
sbb
inc
jbe
lds
mov
out
xchg
movsb
les
mov
push
dec
out
cs
jae
xchg
inc
gs
in
int3
and
jg
cmp
bound
xchg
mov
ss
call
enter
dec
lods
pop
scas
and
mov
ds
mov
das
icebp
jne
pop
mov
outsb
rol
fildl
cs
sub
mov
cltd
xchg
in
dec
push
cmp
or
inc
hlt
dec
jb
xlat
scas
mov
lods
jbe
in
fs
lahf
mov
mov
nop
out
jg
inc
xchg
outsb
mov
or
shl
or
cmp
pusha
mov
lahf
daa
fsubrs
push
out
mov
addl
cmc
fiaddl
popf
stos
es
sub
push
movb
movsl
and
pushf
fidivs
popa
push
das
adc
into
inc
mov
adc
scas
jg
rorb
inc
jle
adc
or
push
push
lea
aas
add
dec
sub
scas
pop
fwait
inc
mov
fdivp
mov
and
stos
push
jg
sub
mull
test
mov
sbb
push
cld
jg
mov
xchg
and
mov
scas
push
stc
pop
xor
rolb
out
rol
test
ss
popa
adc
xchg
in
jbe
sub
add
mov
jge
into
pop
add
cmp
mov
jp
in
outsb
xor
lahf
pop
out
test
or
cmpsl
jg
pop
icebp
loopne
iret
les
fadds
fpatan
sub
cmpl
gs
xchg
notl
xor
dec
outsl
pop
orl
push
cltd
and
out
pop
sub
outsb
mov
mov
lea
and
test
fcoml
shlb
pop
mov
inc
add
push
fnstenv
sub
mov
push
popa
sub
into
mov
pop
pushf
xchg
loopne
jmp
inc
xor
and
jp
mov
lret
jne
lret
and
mov
stos
jne
aaa
xchg
mov
lods
and
cmpsb
and
sbb
cmc
fdivl
inc
dec
add
repz
iret
xchg
ret
popf
sbb
ret
aas
call
add
leave
sub
rcrb
addr16
stos
dec
pop
sbbl
mov
movsb
sbb
lds
mov
xchg
jl
test
outsl
out
fsubrl
jmp
rcrl
push
imulb
popf
jnp
jg
jg
lock
test
test
mov
int3
adcb
jle
jbe
out
das
sub
dec
cmpsl
jae
jg
popf
inc
int3
test
pop
mov
ret
movsl
mov
lods
pop
das
cmc
out
and
cmpsb
dec
aas
inc
dec
shr
mov
push
insl
pop
mov
xchg
mov
cmpsl
mov
and
int3
aas
mov
in
daa
cmpsb
push
and
mov
cld
dec
dec
imul
filds
mov
pop
add
push
scas
push
mov
movl
les
inc
in
inc
dec
mov
mov
jg
pop
mov
outsl
push
xchg
push
mov
into
xchg
adc
cld
jge
icebp
int
jo
aas
xor
adcb
rorl
push
scas
incl
dec
out
xchg
inc
inc
jg
call
fcomps
xor
inc
push
push
sbb
push
dec
xor
fxch
push
and
dec
cmp
or
inc
dec
add
jb
mov
mov
mov
repnz
dec
dec
decl
pop
into
fwait
add
mov
leave
lock
sbb
ret
cli
xor
cmc
mov
out
mov
push
movsl
outsb
in
xchg
cmpsl
mov
cmpb
or
incl
push
or
dec
pop
jl
lds
jbe
inc
aad
pushf
xchg
push
or
xadd
iret
xchg
and
mov
ret
jge
jle
pop
out
push
pusha
out
outsl
jne
inc
arpl
jle
xchg
movsl
mov
mov
mov
shlb
adc
xor
inc
pop
xor
mov
xchg
add
iret
mov
jp
aas
sbb
lock
rolb
call
jle
aam
mov
push
jnp
repz
outsl
loopne
jbe
out
into
cmpb
inc
cmp
inc
sar
pop
or
dec
push
mov
out
mov
scas
arpl
call
test
jo
pop
lods
aas
push
inc
test
cmp
push
and
jb,pn
sub
jge
lods
sbb
loopne
scas
jb
out
imul
addb
lods
ljmp
dec
aaa
sbb
scas
rcl
xor
lret
gs
xchg
adcl
out
outsl
jecxz
inc
cmp
cs
lea
inc
lret
mov
pop
cmp
push
mov
int3
or
decl
dec
rcrl
dec
out
lods
sahf
lods
pop
add
xor
pop
xchg
xlat
pop
imul
outsb
xlat
dec
int
ret
out
push
into
lahf
push
pop
rolb
fstl
outsb
ret
jo
xchg
cli
dec
mov
test
add
jb
push
or
in
jns
push
lock
cmpsb
jecxz,pt
inc
shll
divb
ficoms
push
xchg
lock
rorb
push
adc
mov
mov
mov
mov
push
ja
out
arpl
shll
mov
push
pop
rcll
mov
loopne
cmp
sub
lock
mov
adc
es
fcoml
jp
inc
dec
out
pop
orl
dec
sahf
ret
outsb
inc
or
gs
sub
ljmp
adc
ds
xchg
das
ret
ja
xor
test
dec
sti
ja
ss
imul
shll
outsb
mov
enter
aad
ja
xchg
sub
add
aam
or
push
ds
scas
rclb
mov
iret
adc
mov
push
movsl
mov
sbb
addb
loop
cmp
lock
cmpsl
daa
jo
xchg
and
outsb
xor
push
js
icebp
das
scas
inc
les
std
leave
call
aam
adc
pusha
pop
adc
rorb
int3
ss
or
test
xor
hlt
sub
je
pop
mov
adc
insb
cmp
cmpsb
arpl
add
xchg
inc
sbb
cmp
bound
femms
rcl
sahf
xor
adc
push
or
movsl
add
push
out
or
cmpsb
test
in
popf
sub
jmp
dec
fdivrl
lcall
inc
jmp
mov
and
pop
test
push
outsb
hlt
pop
out
nop
xor
out
jb
jne
adc
iret
inc
dec
out
xchg
cmp
or
push
enter
adc
dec
mov
jb
scas
mov
outsb
and
idiv
arpl
push
pop
add
in
jno
mov
cwtl
push
push
sub
movsb
xchg
push
jae
clc
mov
jb,pn
xchg
dec
pusha
out
mov
notb
enter
xchg
dec
xor
xor
cmova
mov
js
jo
cmpsl
call
push
les
pop
pusha
decl
push
out
jle
das
add
sub
push
ljmp
filds
mov
mov
ret
pushf
int3
daa
jge
into
cmp
jg
scas
jo
rol
lret
sahf
mov
adc
out
clc
shrl
das
jmp
dec
repz
jbe
sub
imul
sahf
push
mov
sub
cmp
cltd
pop
cmp
scas
push
out
dec
jns
bound
inc
in
pop
insb
jns
loop
or
jnp
dec
data16
shrb
ja
xchg
leave
bnd
cli
add
scas
ljmp
mov
cmp
movsl
sub
stos
and
and
cmpsb
pop
mov
insb
and
jb
test
dec
sahf
ss
jns
cmp
bound
push
lahf
int3
rcrb
and
add
sbb
testl
sub
xor
jae
stos
mov
sub
xlat
imul
outsb
xchg
dec
add
bnd
jecxz
test
pop
mov
sub
fsubrp
in
int3
sub
sbbb
sti
test
add
sarb
jl
jb
jge
inc
ljmp
mov
addb
test
push
jmp
cmp
dec
or
sqrtps
xchg
dec
xchg
inc
and
mov
pop
add
adc
and
lcall
lods
jno
daa
in
inc
sbb
jp
insl
cmp
add
or
xchg
inc
sub
in
imul
fwait
enter
mov
adcb
es
pushf
cmc
rorl
adc
jecxz
push
xlat
add
data16
mov
xor
in
test
and
lahf
push
jmp
xchg
pop
stos
add
jb
ss
or
test
arpl
add
mov
mov
jl
push
push
es
outsb
or
lahf
std
sti
rcrb
jmp
pusha
fnsave
test
movsb
mov
sbb
lret
rcll
jecxz
repnz
roll
mov
push
mov
sub
pusha
out
ret
and
inc
repz
into
or
push
lock
mov
lock
add
mov
cmp
movsb
push
stos
mov
popf
sub
ljmp
pop
lahf
pop
add
cmc
cld
adc
rcrl
out
and
mov
xor
dec
xchg
lret
test
orb
add
jg
xor
mov
leave
xchg
sbb
inc
mov
or
int3
push
fists
mov
out
jle
lahf
dec
in
aas
inc
incl
pop
xchg
push
inc
loopne
outsb
jne
in
vpmadcsswd
sbb
inc
mov
aas
pop
pop
jp
add
insl
cmpsb
lahf
add
mov
pop
sub
pop
mov
cs
test
repz
push
jo
scas
jbe
popf
or
pop
inc
or
cmpsl
inc
jecxz
add
cs
dec
enter
into
add
test
pop
sbb
mov
dec
jns
xor
push
cs
ret
sub
jb
les
and
mov
pop
push
or
icebp
and
xchg
mov
sbb
mov
cmp
or
ret
sbbl
cwtl
xor
int3
jne
xchg
mov
xchg
sbb
outsl
jne
sbb
push
sbb
sub
fs
push
fdiv
pushf
or
out
and
pop
negb
mov
mov
or
pop
xchg
add
js
mov
clc
fwait
popf
cltd
lret
sbb
sar
xor
sbb
lock
xor
pop
jg
aas
aas
std
jne
insb
call
data16
pop
jmp
and
jb
sub
cltd
mov
aas
arpl
and
sbb
xchg
scas
mov
aas
popf
data16
add
mov
xchg
leave
pop
sub
add
inc
xchg
pop
ljmp
call
pop
lea
cmp
sub
mov
addr16
mov
bound
call
out
mov
cmpsb
insl
and
adc
test
sarw
add
dec
xchg
push
xchg
sbbb
inc
add
adc
pop
inc
jno
aam
sub
je
orb
scas
adc
mov
sbbb
sbb
pushf
mov
xchg
mov
pop
test
xchg
mov
imul
xchg
test
aad
dec
mov
lds
push
lcall
xchg
shrb
xor
leave
test
ljmp
dec
test
sar
ljmp
fldl
cmpsb
push
loope
pop
pop
xchg
inc
inc
repz
push
stos
insb
push
dec
inc
push
loop
add
mov
push
mov
inc
add
mov
int
jg
lods
push
add
xor
inc
mov
mov
insb
out
aas
mov
or
out
add
data16
dec
xchg
fcomi
sarb
sarb
pushf
dec
ficomps
enter
lahf
cmpsb
imul
pusha
lds
sysexit
fimull
adc
lret
or
out
cmp
data16
dec
test
rclb
iret
pop
int3
jbe
cld
test
sbb
add
pushf
int3
add
xchg
jecxz
mov
int3
cmpb
or
or
fisubrl
pop
pop
xor
fnstenv
inc
xchg
fmull
or
ret
inc
int
mov
outsb
ss
in
or
mov
mov
out
pop
sub
fbstp
cltd
outsl
jmp
out
xchg
es
aas
sbb
xchg
xor
orb
inc
mov
and
dec
add
mov
mov
out
push
mov
add
inc
mov
call
int3
mov
dec
mov
add
and
repnz
and
test
xchg
dec
pushf
andb
adc
mov
rcl
dec
jp
jmp
mov
inc
repz
jo
inc
out
jecxz
outsl
inc
pusha
loop
pop
data16
jbe
jg
or
and
adc
jno
fs
rol
lret
out
in
mov
inc
and
ret
mov
hlt
loopne
sub
xchg
sub
test
fsubrp
xchg
jmp
fiadds
bound
rcl
bound
incb
cli
add
jne
repz
push
sbb
cmpsb
adcb
bound
adc
inc
ja
movsl
or
scas
shl
outsl
repnz
fadds
bnd
loop
push
imul
icebp
xchg
ljmp
inc
rolb
fsubs
sub
sahf
sub
xor
inc
out
sbb
xor
lahf
loopne
pusha
and
ret
pusha
movsb
stos
das
ljmp
sub
push
xor
imul
mov
sub
test
cs
loope
add
mov
mov
xor
outsb
push
jp
insb
ret
in
cmp
jmp
sub
jne
mov
mov
dec
out
mov
out
mov
mulb
outsb
loope
out
inc
js
lcall
push
cmp
mov
cmp
pusha
cs
adc
add
jo
std
jge
add
scas
cmp
in
pushl
cmpsl
adc
inc
mov
fistl
add
loope
inc
mov
lock
push
icebp
xor
outsl
iret
jge
out
loopne
stos
xchg
xchg
lret
in
lcall
cmpsb
testb
and
push
ret
js
dec
xlat
mov
ss
bound
xor
enter
bound
fdivrl
pop
push
nop
dec
mov
lods
or
fidivrs
leave
sub
add
xor
push
sbb
sub
xchg
cmc
gs
jno
mov
imul
jae
into
jle
daa
imul
cmpsl
mov
fistpl
lea
dec
dec
repnz
add
outsl
inc
ds
dec
dec
into
xchg
ljmp
subb
hlt
sub
ss
aas
pop
cltd
inc
sti
add
repnz
imul
push
je
into
sbb
push
ja
push
inc
xchg
dec
popa
sub
pop
inc
in
repnz
shrl
pop
push
inc
mov
ja
inc
in
push
iret
dec
imul
in
mov
leave
icebp
mov
addl
xor
sub
jg
cli
fbld
add
hlt
dec
pusha
inc
xchg
adc
push
jb
xchg
icebp
je
dec
add
aam
in
cs
jmp
test
aad
cmp
aas
xlat
in
test
call
inc
mov
jne
setne
ficompl
and
out
sbb
mov
sbbl
mov
mov
push
imull
inc
sub
mov
xchg
out
mov
dec
inc
xor
movsb
das
je
insl
mov
cmpb
pop
enter
test
jp
push
mov
clc
pop
fwait
sbb
out
ficomps
std
orb
fisttpll
lcall
ss
iret
test
dec
andb
in
xchg
or
lahf
adc
push
jge
sub
sbb
lds
mov
jb
call
inc
das
subb
and
lcall
jbe
push
leave
jmp
js
push
jnp
mov
je
lcall
stos
jg
sub
pusha
lods
ret
loop
pusha
pop
aad
mov
lea
mov
cmp
inc
dec
in
sbb
mov
push
daa
push
js
ss
insb
loopne
test
pop
adc
aas
js
cmp
and
call
neg
aaa
xchg
push
inc
fwait
shlb
dec
lods
add
pop
sbb
inc
xor
in
dec
inc
xchg
sub
dec
in
pop
push
jl
add
mov
xchg
push
inc
jle
lods
jge
push
xor
xchg
and
in
and
adc
or
or
or
insl
mov
fistl
outsb
mov
inc
and
scas
outsl
mov
or
ficoml
repnz
pop
shlb
xchg
pop
scas
out
adc
xchg
cmp
inc
arpl
and
test
repnz
mov
or
jbe
ljmp
ret
lret
shlb
addr16
lds
lret
rcrl
loope
nop
xchg
insl
sahf
pop
lcall
xor
xor
sbb
and
ficoml
mov
hlt
negb
mov
or
or
mov
xorb
cwtl
sbb
rcll
enter
sarb
lock
mov
push
movsb
mov
jle
fisubs
sbb
enter
cld
push
inc
icebp
jp
lcall
inc
xorb
movsl
scas
test
push
fucomp
dec
fcoml
movsl
daa
push
rcrb
mov
and
or
jle
mov
sbb
pop
imul
iret
push
xor
sub
push
data16
mov
rcll
fld
sbb
loopew
sub
pop
cmpl
adc
rol
push
fidivrl
ds
jg
jo
adcb
xor
out
dec
repz
mov
jle
mov
js
adc
mov
mov
mov
std
pop
pop
fistpll
ficoms
push
inc
ds
daa
lahf
push
mov
sub
xor
inc
sbb
xor
push
shlb
in
and
fidivl
and
mov
and
stos
mov
mov
in
pop
stos
stos
leave
test
mov
xor
push
nop
add
mov
cwtl
xor
rorb
jle
cmpsb
xor
inc
cmp
pop
andl
push
xchg
dec
adc
inc
pushf
lahf
mov
out
mov
int3
inc
push
test
addr16
mov
mov
scas
pushf
repnz
xor
add
xor
adc
cmpb
fbstp
push
xor
movswl
xchg
add
push
sbb
adc
fmull
jg
jmp
pusha
mov
push
inc
pop
fistpll
rcl
outsb
popa
inc
mov
mov
push
sbb
scas
add
loopne
aas
hlt
inc
xchg
sbb
jp
aas
out
and
pop
adc
mov
push
cmp
xlat
jecxz
add
gs
push
add
jle
popl
cmp
pop
xchg
fbstp
pop
jle
sbb
xor
pop
addr16
outsl
xor
adc
and
orb
fistps
add
inc
cli
mov
scas
xchg
rcr
sbbl
inc
in
scas
das
lret
ret
lcall
dec
ret
mov
lods
push
sbb
adc
adc
dec
scas
mov
rcrb
push
pop
sbb
das
mov
dec
clc
pop
fucom
pushf
sub
fisttps
cmpsb
ret
ss
push
cmp
sub
xchg
mov
decb
add
inc
addl
ret
inc
aas
sahf
imul
iret
adc
pop
sub
pop
sahf
js
adc
and
popl
jo
lahf
inc
test
scas
mov
mov
xor
cld
into
aam
mov
scas
cmp
aas
aas
inc
ds
add
mov
push
data16
into
testl
ror
pop
dec
enter
std
or
and
mov
or
data16
test
imul
pop
inc
in
or
lods
or
push
xlat
js
pushf
push
push
push
cmp
out
or
xor
es
push
cli
aaa
outsl
cmp
into
add
aas
mov
stos
dec
or
add
jp
fldenv
push
xchg
jg
in
call
mov
test
dec
push
sub
push
or
lcall
mov
in
movsb
mull
xorb
jbe
push
pop
stc
xchg
or
mov
inc
jp
push
adc
add
mov
xchg
mov
xor
shll
fwait
je
rcr
loopne
mov
cmp
out
adc
adc
sub
popw
pop
mov
mov
add
out
loope
or
xorl
movsb
sbb
scas
lahf
lods
sbb
jns
sbb
scas
negb
mov
test
adc
lds
sbb
pop
ret
push
xchg
in
push
jle
scas
add
fs
leave
into
inc
data16
or
lds
mov
mov
inc
into
out
daa
mov
into
in
shrb
in
jb
mov
pop
out
bound
mov
xchg
dec
fcoml
push
and
xor
lock
push
out
jne
lea
sbb
and
push
lods
mov
add
inc
cmpl
cli
test
dec
sahf
pushf
adc
decl
repz
dec
push
cltd
imul
add
xor
or
dec
imul
dec
xchg
pop
les
iret
lahf
and
and
fadds
out
lahf
int
test
add
into
push
cmpsl
imul
push
mov
push
in
arpl
cmp
dec
notl
mov
ret
sbb
sahf
movb
dec
and
cmpsb
lods
or
aad
or
pop
and
outsl
mov
jo
sub
mov
pop
outsl
sub
pop
rol
jmp
mov
jnp
insb
loop
mov
mov
cli
and
ljmp
movsb
lods
ror
pop
addr16
dec
inc
add
in
iret
jno
or
aam
stos
filds
test
mov
sbb
roll
dec
shrb
ds
adc
jg
pop
pop
mov
lods
lock
mov
shll
jmp
imul
stc
movd
call
xor
enter
mov
jmp
test
orb
xchg
and
in
and
mov
je
push
pusha
xchg
out
pop
or
push
cld
sub
pslld
je
mov
insb
or
into
mov
inc
xorb
push
jmp
xor
fxch
cwtl
out
out
out
add
lock
sub
pop
push
rcrb
mov
jg
xor
sbb
mov
push
sub
xchg
push
jbe
sbbl
sahf
pop
jge
pusha
repnz
fisubs
mov
pop
mov
pop
mov
loop
lahf
fs
add
jmp
xor
decb
adc
mov
xchg
inc
pusha
push
and
popa
mov
flds
push
or
int
xchg
out
jg
push
arpl
bnd
out
cmp
dec
scas
xchg
add
and
lret
xlat
mov
xchg
ljmp
mov
mov
imul
aam
outsb
inc
fisubrl
xchg
rorl
add
scas
pop
push
pop
bound
sub
ss
xor
add
in
lcall
call
leave
arpl
xchg
inc
orb
jne
out
rcr
add
es
loope
push
fs
lock
sbb
cmc
mov
push
mov
repz
pop
or
sbb
fbld
push
clc
shlb
xchg
jae
pop
jmp
cmpsb
je
and
rorl
jge
aas
jg
nop
xchg
inc
xor
movl
fildl
pop
mul
push
inc
add
mov
ds
or
and
in
push
sarb
sub
inc
out
add
cmc
lahf
push
je
lea
dec
cli
gs
add
xchg
aas
movsl
lea
lds
cmp
pop
cmpsb
push
out
movsl
movsl
xor
adc
insb
pop
lods
shrb
xlat
fistpll
mov
add
aam
sbb
shl
fildll
stos
jl
mov
fs
sub
mov
lds
sub
addb
push
aas
fisubrl
or
fcmovnb
imul
and
stc
and
push
pop
and
dec
das
dec
nop
adc
idiv
dec
ffreep
mov
les
mov
add
push
jno
add
loope
and
lahf
xchg
pop
aas
xchg
adc
add
jns
sahf
bound
fdivrp
jg
add
add
loop
jae
mov
add
rclb
ljmp
je
and
adc
ja
mov
ja
xlat
mov
lods
sar
out
dec
out
mov
out
add
cmp
xor
cld
ror
rorb
pushf
sti
lods
call
dec
scas
dec
repnz
inc
pop
add
sbb
push
cs
inc
aas
xchg
inc
les
mov
js
fucomip
push
arpl
sub
inc
mov
out
subb
aas
jo
enter
lahf
out
sbb
add
test
arpl
push
fucomip
iret
lcall
sub
test
scas
mov
mov
mov
pop
dec
ja
je
fs
mov
mov
dec
mov
scas
sbb
sub
insb
and
call
andl
jno
jno
decb
dec
or
jb
stos
lahf
aas
ss
sub
lret
sbb
pop
sbb
pop
cmpsb
pop
or
insb
xchg
adc
cmp
stos
jb
pop
xchg
pop
div
or
inc
lahf
mov
inc
mov
sbb
adc
mul
loop
and
push
je
push
dec
jp
xor
mov
push
xchg
out
cmpsl
in
jecxz
push
sbb
mov
add
ret
dec
mov
insb
xor
clc
je
pushf
movsb
rorl
out
push
hlt
inc
push
dec
pop
sub
in
lods
outsl
aam
mov
mov
inc
lock
adc
inc
lcall
nop
xlat
xor
shl
push
inc
dec
into
ficoms
scas
jle
lcall
fists
fs
add
into
call
popa
jb
enter
mov
inc
aas
sbb
outsb
ret
push
dec
shrb
in
das
push
arpl
test
dec
daa
or
popf
insb
cld
mov
xchg
lcall
inc
cmp
mov
sub
jmp
add
and
and
jmp
icebp
subl
add
mov
pop
xor
lahf
cmp
pop
lods
loopne
mov
pop
mov
scas
loopne
pusha
arpl
roll
jecxz
test
inc
sub
inc
inc
mov
xchg
ds
add
fistpll
in
call
xchg
and
add
iret
mov
pop
cwtl
add
loopne
stos
sbb
xchg
cmpl
pop
pop
std
lahf
or
in
and
nop
push
and
pop
loope
mov
mov
mov
outsb
lods
and
arpl
sbb
mov
inc
insl
ja
testl
xchg
inc
repnz
out
lods
and
and
xor
xchg
fildll
into
xchg
mov
mov
aam
dec
enter
out
mov
gs
aad
aas
leave
aaa
adc
stos
pop
mov
scas
aam
mov
adc
cmpsl
mov
outsl
pusha
clc
test
jecxz
adc
fadds
out
pop
sub
stos
mov
sub
xchg
jp
push
test
cmp
pop
gs
addl
sbbb
lret
ret
inc
dec
push
mov
pop
iret
inc
push
lods
add
aas
add
ret
mov
mov
test
sub
inc
xor
repz
pop
lods
pop
dec
repz
push
pop
rol
xchg
call
shl
xchg
sub
adc
pmaxub
scas
movsb
add
xchg
jle,pt
rol
adc
dec
dec
bound
out
out
jecxz
hlt
adc
mov
mov
lds
aas
loopne
and
sub
ficoms
leave
hlt
xchg
outsl
insl
dec
bound
in
or
inc
mov
jne
inc
in
inc
lds
sub
popa
mov
inc
ffree
imul
in
cmc
cmp
fists
in
std
or
cmp
movsl
push
sub
cmpsb
movsb
stos
inc
aas
pop
push
int
lods
in
fisttps
lret
add
mov
sbbl
loopne
jne
mov
dec
mov
mov
sbb
xchg
fwait
xorb
gs
inc
out
pop
add
aaa
jne
xor
bound
dec
mov
or
mov
lds
in
repz
int
push
jae
cmpsl
adc
push
mov
arpl
lds
adc
dec
xor
stos
out
xor
lret
add
repz
mov
mov
mov
jg
out
daa
sub
push
lea
iret
xchg
ljmp
sub
cmpsb
jecxz
pop
lds
or
or
imul
repz
adc
mov
ja
jecxz
adc
cmp
rep
mov
adc
stos
daa
jecxz
xchg
sub
std
add
in
sub
sub
push
lret
xchg
pop
jp
test
out
lahf
lea
iret
sub
sub
mov
jecxz
in
pop
gs
dec
movl
jae
pop
bswap
outsb
xchg
fadds
lea
movl
lea
aad
lea
cltd
test
add
or
inc
xchg
sbb
sub
mov
sbb
fldt
aaa
pop
mov
pop
push
ds
aam
mov
push
jmp
adc
sub
andl
ret
dec
in
incl
dec
pop
imul
lea
pushf
xlat
cmpsl
adc
shrb
cmp
shl
and
cmc
jge
push
dec
dec
mov
in
insb
inc
and
xor
std
outsb
mov
cs
jno
repz
outsl
sahf
push
lods
sbb
cli
or
jbe
movsb
icebp
xor
push
test
and
or
dec
inc
bound
sbb
and
sbb
ja
imul
sub
xor
xchg
mov
push
mov
and
test
add
inc
push
sbb
add
aaa
and
push
aad
ljmp
jmp
dec
insb
xchg
jno
add
cmpsl
nop
xlat
lahf
shll
stos
inc
lods
aaa
test
hlt
mov
inc
cmpsb
test
data16
ljmp
in
imul
outsb
mov
in
mov
std
sub
in
loope
popa
jg
jo
pop
mov
push
repnz
and
push
jmp
aas
shlb
outsb
outsb
push
imul
mov
mov
addb
sub
iret
jl
jmp
dec
dec
jg
fwait
pop
and
push
push
xlat
push
pop
decl
inc
xchg
cs
add
scas
dec
mov
insb
loopne
jne
xchg
dec
popf
xor
in
xor
add
cmc
push
das
dec
jns
mov
imul
into
jo
nop
mov
sub
xor
lods
jge
sub
pop
movsl
sbb
scas
mov
pop
add
daa
or
sub
xchg
pop
jle
hlt
jne
ja
outsl
push
scas
push
inc
inc
les
out
rclb
mov
mov
data16
push
out
test
into
pop
and
mov
jbe
jne
pusha
push
repz
adc
repz
mov
aam
dec
pop
cmpsb
es
lahf
lret
rcrl
lahf
stos
push
sahf
daa
ss
shr
test
add
xchg
movsl
movsl
out
sub
push
push
xchg
dec
mov
mov
mov
jecxz
cmp
sahf
sub
in
sahf
mov
fisttpl
sbb
je
sub
push
orl
xorb
mov
add
decb
inc
adcb
outsb
add
aam
js
inc
pop
loop
scas
xchg
mov
dec
scas
icebp
cmp
cmpsb
loopne
adcl
xor
add
add
adc
shrl
insb
movsb
int3
add
rolb
aas
cwtl
mov
cmpsl
inc
sbb
or
stos
test
repz
enter
dec
cwtl
inc
cli
out
lds
sbb
adc
pusha
xchg
je
cmpsb
add
xor
hlt
adc
decl
inc
add
fdivrl
mov
jae
mov
dec
ret
mov
pop
pop
mov
loopne
mov
cmp
es
enter
sub
push
jg
lret
sub
icebp
in
mov
xor
ds
xchg
xchg
fcomps
jmp
jp
ret
cmp
or
int3
mov
dec
or
cmpsl
fists
or
sahf
adc
lret
inc
in
or
jmp
dec
dec
loopne
xchg
sbbl
outsl
das
rorl
pop
pop
jle
pop
rcrb
addb
dec
test
mov
add
test
add
sub
push
fistpll
add
push
push
pop
jg
inc
inc
mov
push
out
add
xor
add
or
push
add
lock
cld
daa
shll
stos
sbb
mov
sbb
in
xchg
stos
mov
iret
mov
scas
pop
xchg
stos
test
or
lods
pusha
test
cmp
rclb
jae
xchg
sbb
and
scas
test
push
fld
xchg
hlt
fiadds
loope
pop
or
icebp
pushl
push
dec
add
sbbb
and
stos
or
int3
leave
push
mov
insb
pop
mov
test
testb
cmp
aam
sub
inc
and
into
insb
out
sti
add
cmpsb
xchg
rolb
inc
xchg
sbb
xchg
mov
inc
xchg
fsubr
inc
scas
or
sahf
scas
sbbb
hlt
mov
fisubrl
dec
push
pop
or
sbb
jmp
pusha
aad
jl
rorb
or
out
inc
jg
mov
dec
and
push
negl
cli
jo
call
stc
das
and
or
xor
xchg
scas
dec
xchg
xor
das
inc
aas
lods
push
push
add
add
out
dec
sub
xor
rorb
ss
mov
jbe
dec
xchg
dec
scas
sbb
pop
jp
add
push
pushl
inc
mov
shrb
addb
imulb
push
icebp
insb
sbb
jnp
jecxz
or
fsubr
add
movsl
sbb
lret
mov
cwtl
and
dec
gs
fistps
insl
insb
subb
test
sbb
ficoms
js
pusha
out
shrb
es
push
aam
daa
pop
push
or
outsb
push
addr16
mov
xchg
add
sub
jmp
pop
inc
adcb
pusha
ljmp
out
lods
adc
mov
pop
mov
jbe
cs
xor
add
or
xor
insl
mov
push
inc
or
push
and
xor
pop
xchg
flds
fidivrl
insb
daa
jle
inc
imull
mov
mov
dec
and
xorb
inc
or
mov
scas
or
movsb
arpl
loopne
daa
push
jbe
jae
xchg
push
cmc
int
jp
dec
push
jae
ds
clc
lods
mov
mov
inc
in
shrl
rorl
clc
popa
add
fs
xchg
outsl
lods
outsb
push
xchg
xchg
inc
cmp
inc
incl
xchg
push
ss
out
xchg
xchg
insb
adc
sub
mov
push
arpl
sahf
sbb
mov
jg
adc
pop
imul
lods
dec
and
xchg
mov
mov
mov
pop
outsb
sbb
popf
sarb
cmpsl
icebp
fistpll
xchg
enter
repz
out
pushf
xchg
lods
data16
xchg
jg
ds
imul
mov
nop
roll
xchg
mov
push
dec
in
xchg
dec
testl
and
push
push
shrl
shrl
and
shlb
scas
cs
jle
sub
mov
mov
loopne
mov
insl
inc
in
aas
rolb
jp
and
dec
push
push
adc
pop
push
xchg
pop
lock
and
sysret
cs
push
les
inc
loop
xlat
int3
movsl
dec
scas
jecxz
mov
push
mov
scas
mov
xor
cltd
add
sbb
cmpsb
es
aad
sarl
xchg
push
mov
out
mov
jle
addl
push
repz
pop
add
mov
and
jb
or
jl
pop
pusha
and
adc
pop
insb
jb
shl
and
hlt
stc
jae
xchg
jo
dec
ja
mov
xchg
lea
and
in
and
jo
ds
enter
mov
jb
inc
pop
add
mov
push
shll
mov
jg
sub
mov
fsubp
icebp
lahf
outsb
mov
jle
pusha
mov
inc
mov
xor
mov
push
popl
roll
jo
loope
adc
inc
call
add
push
push
sub
inc
add
push
lods
push
add
test
and
dec
cs
push
add
sub
and
push
mov
jg
sbb
inc
adcb
jo
mov
push
insl
scas
inc
es
jns
test
sahf
jg
inc
push
pop
add
xchg
fs
lods
popa
push
inc
sahf
scas
iret
pop
sub
jp
daa
sbb
div
add
out
add
pop
test
mov
rcr
cmp
insb
add
pop
loop
lods
and
outsb
jo
loop
xchg
out
call
addl
push
inc
mov
imul
fmuls
add
ret
inc
push
mov
fs
ficoml
inc
orl
inc
push
and
sbb
mov
mov
loopne
push
xchg
sub
adc
in
out
iret
add
lahf
adc
jb
dec
std
and
jecxz
imul
mov
repnz
scas
outsl
lahf
repz
rclb
add
inc
inc
push
ss
loopne
xchg
pop
loopne
jg
cmpsl
int3
push
xchg
jne
dec
add
les
lahf
test
inc
mov
pop
jnp
or
outsb
std
xchg
sub
cltd
mov
mov
shrb
test
imul
das
or
je
cs
jbe
cmpsb
pushf
in
pusha
ljmp
sbb
lods
pop
inc
xchg
or
fidivrl
movsb
mov
movsl
jl
daa
ds
mov
fbld
aam
or
stc
push
sahf
inc
les
call
inc
push
jnp
in
cmp
lea
cmpsb
rorb
add
mov
mov
data16
sti
mov
pavgb
pusha
adc
lahf
ficomps
inc
jl
mov
cmpsb
ja
pop
xchg
pop
pop
push
adc
jns
das
pushf
arpl
mov
loopne
je
fwait
sbb
imul
das
fsubs
aaa
scas
pushf
cs
daa
int3
loope
push
shl
ret
mov
das
ret
lods
repnz
xchg
sub
int3
mov
je
inc
lock
int
mov
pop
or
push
mov
aas
xor
ss
js
in
daa
into
jbe
xlat
fbstp
mov
fucomi
ret
or
xchg
punpckhwd
mov
test
push
mov
jle
movsb
vpminub
mov
loop
xlat
sbb
or
popf
add
push
rcrb
inc
leave
sub
decl
fs
adc
fcoml
and
inc
out
cmc
das
jbe
jg
or
jo
call
mov
data16
hlt
mov
jbe
mov
ss
sbb
aas
mov
fsubl
jo
outsl
insb
decl
ljmp
bound
or
ret
fldenv
push
and
xor
add
negb
cmp
jle
add
pop
dec
inc
xchg
sbb
jne
pop
decl
and
xor
in
xor
mov
and
addr16
inc
xchg
mov
pop
in
repnz
loope
lea
xchg
gs
popf
mov
mov
jno
push
mov
adc
mov
imul
sahf
cmp
inc
jo
insb
add
mov
lea
testl
xchg
bound
lds
add
add
and
pop
add
xchg
movsb
mov
das
add
mov
pop
aas
mov
mov
pop
lds
shr
rorl
mov
sbb
add
into
in
add
jecxz
and
dec
or
cvttps2pi
inc
mov
mov
pushf
inc
jne
pop
imul
shlb
test
rcr
xor
lcall
xchg
push
ljmp
out
jbe
dec
aad
out
inc
mov
inc
pop
lds
cmp
pop
test
int
ds
mov
and
loop
ljmp
xchg
out
and
sub
push
sub
ret
push
jecxz
cld
lahf
loop
adc
jl
rorl
adc
jmp
pop
fs
test
mov
mov
lahf
sub
push
daa
jp
scas
xor
cmpb
test
mov
icebp
jae
mov
adcb
in
and
push
dec
push
jmp
add
xor
push
cmp
jmp
jo
mov
xchg
mov
fldcw
inc
mov
pusha
cmpsb
mov
loop
lcall
xchg
gs
scas
cmp
lods
insl
sub
sub
dec
dec
out
clc
push
lods
xor
sbb
in
mov
gs
sub
push
inc
test
jne
das
cmp
jp
mov
or
jb
mov
sub
dec
cmp
inc
das
add
mov
scas
lods
popa
loope
dec
push
sbb
xor
loope
ljmp
nop
mov
xor
inc
pop
popf
xchg
lahf
int
fcmovbe
in
sbb
mov
rclb
xchg
movsl
repz
mov
jg
cmp
daa
jae
addr16
xchg
xor
ror
bnd
mov
test
aas
cs
pop
xchg
pop
xlat
popf
xor
mov
mov
or
mov
and
sbb
stos
shl
mov
popa
hlt
push
movb
les
cmp
push
sbbl
movl
mov
insb
ret
cs
aam
push
or
in
inc
scas
lcall
mov
jecxz
stos
fsubr
xor
pop
pop
cmp
push
je
les
insb
add
es
ret
cmp
jb
mov
jle
mov
xor
repnz
enter
mov
cmp
dec
pop
and
xchg
and
and
sub
inc
movsb
and
mov
cmpsb
lods
into
xchg
pop
shrb
fs
fldl
inc
lods
sub
pop
jns
adc
mulb
out
scas
jae
push
lea
scas
dec
dec
rcrb
add
mov
adc
sub
leave
lret
fildll
jne
lea
repnz
lods
sub
sbb
pop
inc
iret
fwait
sti
lret
iret
mov
jnp
mov
fs
sub
mov
cmpsl
xchg
or
push
out
out
jle
cmp
loope
ljmp
jno
mov
xor
enter
sub
jbe
jecxz
pop
mov
and
inc
popf
push
es
cwtl
pop
fwait
pop
pusha
data16
cltd
outsb
das
es
cs
mov
prefetchw
or
test
mov
push
std
lea
ffree
mov
pushf
inc
mov
es
out
mov
das
cmpsb
mov
aas
push
in
xchg
dec
add
fildl
data16
or
mov
scas
jle
xchg
les
inc
mov
pop
iret
push
int
mov
xchg
mov
push
movsl
jbe
push
inc
stos
mov
mov
scas
int
insl
jg
jge
mov
ja
jb
jo
insl
add
mov
dec
jb
gs
scas
and
jg
pusha
loop
mov
cmp
inc
mov
aaa
or
and
mov
dec
popf
and
inc
in
cmpsb
mov
iret
pop
jo
cmpsl
mov
outsl
adc
fnstenv
jns
je
pop
add
fistl
xor
mov
jbe
cmpsl
pop
aaa
loop
loopne
outsb
sahf
jl
sub
xchg
push
bsf
rolb
movsb
lods
insb
ret
out
in
test
roll
xorb
cwtl
push
push
test
pop
inc
cmp
xlat
push
stos
into
jp
adc
cmpsl
xchg
sbb
dec
mov
icebp
jbe
pop
cmpsl
lret
testb
mov
jb
push
and
inc
inc
adc
xor
mov
dec
adc
xor
and
andb
scas
mov
cld
addb
xchg
test
inc
bound
dec
out
add
cli
sub
sarb
jecxz
rcl
mov
jae
cli
fwait
and
add
pop
pop
push
jo
pop
ja
sbb
push
xor
outsl
mov
and
dec
mov
jne
or
jg
mov
nop
add
into
flds
pop
ja
fldt
or
xchg
fisttps
jmp
push
aas
mov
mov
xchg
clc
fsubl
push
mov
adc
faddl
int
add
jg
cmp
call
inc
pop
dec
mov
pusha
pop
rcrl
out
lret
cmp
fmuls
mov
cmpsb
pop
dec
test
test
mov
aad
out
inc
xor
cmp
jg
xchg
sarl
cmpsl
add
mul
call
in
cmpsl
insb
pop
out
xor
add
adc
cmp
dec
data16
pop
add
pop
pop
sarb
sub
fwait
jae
imull
push
dec
push
test
lea
xor
xchg
pop
out
and
mov
shll
insb
dec
jne
mov
ljmp
inc
pop
es
faddl
add
dec
push
mov
sbb
pop
in
icebp
dec
out
or
int
insl
dec
in
outsl
lds
inc
inc
into
ret
sbb
pop
dec
pop
pop
jo
push
push
fldl
xor
dec
mov
leave
bound
stc
out
into
fbld
add
ret
jle
add
sbb
add
aaa
pop
fsubp
inc
in
bound
ja
mov
insl
mov
mov
add
movsb
arpl
ljmp
and
or
movsb
push
popa
push
push
clc
dec
cmovb
xchg
out
addb
dec
and
cld
shrb
push
pop
push
jno
cwtl
xchg
jo
mov
and
and
sub
inc
aas
dec
xchg
scas
xchg
cmpsb
jb
stos
mov
out
inc
outsl
push
mov
insl
mov
es
insb
into
scas
add
in
cmp
mov
sub
inc
xor
in
lea
jo
sbb
enter
sbb
mov
and
mov
adc
adc
enter
rolb
xchg
sub
inc
pusha
sahf
xor
cli
mov
mov
incl
xor
sbb
loop
dec
jae
fimuls
scas
sub
jb
addr16
mov
or
out
ret
xor
and
mov
inc
outsb
es
in
pop
push
repnz
cmpsb
inc
sub
enter
pop
mov
test
push
notb
mov
aaa
or
pop
scas
xor
add
bound
inc
and
out
mov
jne
and
stos
movsb
daa
pop
xlat
stos
aas
loope
jo
or
cmp
int
inc
loope
out
pop
xchg
mov
cmp
adc
cmpsl
and
outsl
sbb
xor
or
xor
lret
dec
ret
add
mov
add
dec
mov
sbbb
lret
popl
scas
lret
hlt
add
jb
add
jno
jp
or
inc
lock
das
push
sub
mov
mov
push
push
aas
scas
mov
fcompl
dec
in
pop
mov
and
popf
inc
lret
jge
ret
or
add
imul
mov
lret
sub
push
rcll
push
fsts
pop
xchg
mov
add
jg
mov
fdivrs
mov
sub
push
inc
cltd
popa
dec
outsb
lods
sub
flds
inc
lds
jns
sub
iret
daa
loop
lahf
sub
out
imulb
scas
dec
shll
and
ja
and
and
sub
imul
jg
push
daa
lds
xlat
xchg
enter
push
mov
pop
inc
paddq
mov
jae
cld
add
ret
add
add
jns
mov
jp
mov
pop
pusha
je
adc
mov
xchg
inc
sub
add
lret
jbe
rorb
insb
and
enter
out
or
jmp
adc
push
push
push
in
sub
dec
ss
stc
cmpsl
enter
bound
push
or
inc
mov
mov
lods
mov
stc
in
outsl
enter
push
sub
mov
push
xchg
or
aaa
mov
js
int3
in
fmuls
sub
mov
inc
lods
shrl
push
repz
mov
in
cs
lahf
mov
daa
rolb
aaa
lahf
incl
ljmp
fistl
push
sbbb
sbb
or
jle
sub
dec
jo
imul
lret
pop
xchg
mov
outsl
dec
and
sub
mov
cmpb
in
lcall
daa
rclb
xlat
dec
mov
mull
iret
lahf
adc
mov
sub
mov
mov
sub
mov
in
lea
std
adcb
pop
push
jmp
sbbb
movsb
loop
ljmp
insl
test
ds
pop
aaa
leave
subl
mov
sbb
decb
mov
mov
push
roll
mov
in
xchg
mov
mov
jg
push
jle
mov
mov
sti
mov
jmp
mov
cmp
mov
and
inc
data16
or
pop
jle
in
jo
addb
inc
test
xor
psubd
xor
jg
fmuls
and
push
sbb
ss
jnp
int3
mov
or
jo
inc
inc
mov
cmpsb
lcall
out
rolb
pop
or
fdivrs
xchg
add
inc
inc
repz
out
push
jg
pop
jg
pushf
jmp
dec
ret
ret
loopne
rolb
mov
roll
popf
pop
incl
aas
insl
mov
or
fstp
add
mov
inc
mov
rcrb
cmpsl
in
dec
pop
sbb
loop
sarb
shlb
mov
popf
push
and
loope
jmp
out
sbb
cmp
fcoml
nop
add
sbb
mov
imul
mov
xchg
pop
popf
pop
pusha
jo
repnz
adcb
dec
scas
scas
lds
out
repz
mov
sahf
push
xchg
mov
lret
imul
xchg
xor
and
cmc
sbb
jbe
adc
add
outsl
add
inc
roll
lds
cltd
movsl
sub
mov
das
movsl
or
mov
rcr
adc
test
test
push
ret
mov
inc
add
xchg
pop
iret
xchg
cs
mov
inc
mov
push
ds
ss
inc
pop
and
sbb
and
sub
push
fidivl
addb
and
sbb
fisubrs
outsb
idivb
decb
int
push
xchg
push
push
lea
xor
lcall
adc
int3
int
pop
ret
iret
rolb
jno
add
add
test
push
or
pop
mov
leave
push
xorl
jne
into
fstl
aaa
add
int
in
sbb
xlat
shll
pop
movsl
cld
jne
adc
mov
pop
flds
add
sbb
push
lret
lahf
shrl
jnp
ret
mov
mov
push
pop
jg
pop
or
cwtl
shufps
pop
roll
inc
push
andb
jnp
xor
push
inc
cs
and
push
rol
push
inc
dec
inc
inc
push
popf
outsl
xchg
push
or
adc
sbbb
test
das
cs
int3
sbb
add
je
lret
rdpmc
shl
and
sbb
dec
sub
cmpsb
cmp
jbe
gs
inc
jg
inc
adc
add
adc
stos
lea
or
xor
aas
es
push
xchg
sbb
data16
dec
or
mov
arpl
jg
xlat
aad
sti
mov
sbb
xor
in
dec
int
inc
push
int
pop
das
sbb
lods
les
fdivrl
jle,pt
push
pop
stos
cmp
adc
inc
or
out
sbb
add
adc
add
aas
cmp
and
ja
aas
outsb
call
adc
inc
mov
clc
or
jle,pt
mov
mov
fdivr
ljmp
mov
dec
xor
outsb
add
imul
insl
iret
bound
shll
mov
mov
in
ror
gs
test
jle
or
mov
inc
dec
push
andl
mov
insb
adc
fdivrl
pop
cmp
pop
adc
pop
outsl
pusha
lahf
jg
movsb
mov
pusha
sarb
ds
jle
jl
pop
or
cmpsb
test
mov
ljmp
pop
leave
adcl
ret
movsb
mov
inc
jp
xor
xchg
jle
jle
and
aaa
fldenv
cli
sahf
push
mov
mov
pop
and
ds
jle,pt
jle
push
jmp
es
jle
movsl
cmc
push
ss
sub
repnz
cmpl
mov
mov
push
jbe
stos
mov
mov
aam
enter
push
cmp
or
mov
out
push
js
sub
lock
push
mov
mov
lret
jle
pusha
adc
cmpb
push
ds
sub
xchg
les
jle
push
jle
es
cld
sub
jecxz
mov
push
jge
jp
mov
shll
jl
stc
jle
mov
loop
xorb
sti
mov
xchg
ja
jl
mov
fidivl
jle
mov
ret
inc
add
lcall
loop
icebp
sub
and
fnstcw
mov
mov
loope
jno
es
add
imul
and
mov
push
shr
int
movsb
push
fdivrs
jle
add
jg
add
addr16
fsts
push
mov
push
or
orb
sarl
ds
jl
pop
fstp
dec
adc
sbbl
push
imul
mov
mov
rclb
adc
daa
icebp
test
push
xchg
xchg
push
lret
imul
rcl
fs
addr16
sbb
imul
xchg
in
dec
out
adc
mov
xor
sub
aam
movsb
and
daa
test
adc
aam
test
xchg
add
and
mov
nop
aam
push
dec
cmpsl
jno
sub
jmp
push
lret
jmp
xchg
push
adc
aam
out
sub
push
jno
lret
test
xchg
nop
xchg
and
imul
adc
jno
mov
sbb
xchg
aam
fs
daa
imul
xchg
jno
sub
fcoms
jmp
push
push
push
or
jmp
xchg
lret
jmp
push
adc
fs
cmpsl
sub
and
fcoms
aam
test
push
adc
loop
cmpsl
imul
adc
icebp
jmp
or
and
daa
test
push
or
xor
aam
aam
lret
in
test
aam
push
dec
daa
icebp
imul
aam
or
sub
xchg
rclb
jmp
adc
jno
dec
imul
adc
fs
addr16
adc
adc
jmp
mov
loop
addr16
adc
aam
imul
test
movsb
bound
or
nop
push
push
push
enter
sub
adc
dec
imul
enter
test
aam
push
lret
imul
rclb
shrl
adc
sub
test
push
xchg
aam
loop
imul
xor
sub
fcoms
and
leave
jmp
push
dec
cmpsl
xor
imul
bound
mov
xchg
enter
jmp
aam
xchg
lret
imul
adc
loop
daa
sub
arpl
adc
push
mov
or
imul
push
and
jmp
arpl
mov
imul
adc
movsb
and
mov
push
xchg
rcl
dec
addr16
test
push
aam
or
bound
push
movsb
xchg
or
sub
and
cwtl
aam
xor
jmp
push
push
aam
enter
imul
jmp
leave
add
mov
nop
arpl
dec
push
mov
jmp
add
and
adc
xchg
mov
icebp
sub
xchg
push
push
lret
test
xchg
rclb
dec
cmpsl
imul
xchg
aam
push
dec
jmp
xchg
push
aam
and
mov
mov
lret
imul
xchg
adc
and
sub
mov
jno
sub
fcoms
push
lret
and
imul
jno
test
aam
xchg
mov
and
inc
xchg
nop
adc
aam
daa
test
pop
xchg
xchg
xor
inc
adc
xchg
in
dec
cmpsl
jmp
adc
adc
sub
test
aam
and
cmpsl
test
adc
push
xor
aam
xchg
adc
and
jmp
adc
aam
xor
imul
or
push
enter
sub
fcoms
adc
sub
imul
jmp
adc
push
mov
sub
mov
ds
add
stos
in
mov
jno
popa
mov
xor
inc
cld
pop
ss
scas
sub
push
pusha
repnz
ret
lock
in
das
push
lret
sbb
in
es
push
mov
into
in
ds
jbe
pop
test
xor
repnz
push
jecxz
and
mov
js
movsb
cmc
cmp
jmp
in
jbe
jecxz
iret
das
pop
pop
xlat
outsl
push
or
aam
subl
jp
add
mov
inc
cld
inc
inc
mov
movsb
push
lock
test
scas
pop
dec
and
icebp
xorb
fisubl
xchg
cmpsl
or
mov
pop
push
addr16
loopne
sbb
xor
dec
dec
jne
pusha
repz
loopne
shlb
or
sbb
xchg
push
and
mov
and
cmp
add
das
add
push
imul
fs
mov
and
jnp
insb
xor
stos
outsb
jb
or
push
in
or
ljmp
sub
pmaxsw
loopne
cmpsb
popa
int
shrb
mov
lcall
mov
ret
cmpl
pushf
and
fwait
mov
push
icebp
loop
pusha
add
arpl
pop
push
sti
ss
hlt
push
js
push
in
sub
loop
movsb
outsl
lods
and
in
adc
pop
cmp
fmull
je
jb
mov
pop
outsl
sub
test
divl
fildl
push
fidivrs
jno
push
sahf
ret
pusha
jae
shlb
stos
and
add
lcall
and
scas
orb
xchg
jnp
xor
and
mov
inc
jns
adc
mov
data16
das
cmp
add
and
rcr
jne
xor
pop
or
xlat
sub
push
out
aad
movsb
jbe
int3
faddl
stos
push
das
out
test
cmp
mov
cwtl
mov
nopl
scas
pminub
mov
push
addb
fstpl
pop
inc
icebp
mov
sbb
js
ret
in
adc
notl
sub
cmp
into
das
mov
sub
cld
mov
int
lahf
push
adc
sub
xlat
add
das
or
ja
inc
out
pop
adc
ret
xchg
add
and
insb
and
inc
mov
sub
push
hlt
repz
inc
or
push
fstl
pushf
shrb
mov
rcrl
fsts
xchg
imulb
in
jbe
pusha
add
mov
xchg
das
xlat
pushf
fnclex
push
lods
scas
sbb
cld
lret
mov
xor
mov
xchg
hlt
pop
xchg
scas
add
aam
adcb
pushf
pop
add
in
inc
lcall
add
jns
sub
inc
bound
iret
iret
push
add
into
push
test
pusha
pop
insb
test
mov
xorb
sbb
xchg
adc
push
inc
pop
imul
lret
inc
inc
dec
inc
sbb
sbb
mov
cmp
test
ds
vmovdqa
dec
jecxz
sarb
mov
adc
mov
push
push
in
push
and
or
aad
xchg
push
push
iret
test
pusha
inc
push
testb
dec
inc
cwtl
xchg
fcoms
mov
lahf
jg
rorb
add
sti
leave
and
aad
cmpl
lock
fadd
into
jg
dec
fsubs
inc
jnp
nop
dec
mov
dec
inc
idivl
sti
sbb
pop
jmp
mov
sub
pop
cs
pop
test
jno
or
icebp
xchg
mov
dec
cs
in
dec
fisubs
mov
xlat
mov
aas
jg
jecxz
std
mov
jbe
mov
add
add
add
add
add
add
int
push
push
push
push
mov
mov
mov
and
shr
xor
sub
shr
imul
not
inc
loop
pop
pop
pop
pop
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
