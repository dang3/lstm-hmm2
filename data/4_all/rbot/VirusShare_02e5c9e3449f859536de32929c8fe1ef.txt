xchg
cli
imul
in
xor
loop
and
adc
push
mov
in
and
in
sarb
pop
cwtl
cltd
inc
negl
xor
push
dec
add
aas
cltd
ficomps
jecxz
dec
push
xor
pop
and
sti
pusha
inc
xor
rcrl
loop
add
push
mov
pop
loop
cmp
xor
ror
fsubr
test
out
jmp
arpl
insl
adc
pop
jmp
inc
cmc
dec
jae
pop
notb
push
in
sub
insl
inc
adc
sbb
sub
clc
jl
cmc
sub
test
fsub
repz
call
dec
out
stc
in
cmpsl
push
or
in
cmp
adc
stos
out
pop
xchg
push
test
cld
loope
pusha
repnz
shll
test
and
xchg
lods
push
inc
addr16
enter
dec
int
loopne
shlb
jmp
or
push
mov
dec
pusha
push
addr16
pop
jne
pop
jno
inc
sbb
add
dec
cs
push
mov
add
into
pop
out
bound
jbe
sub
inc
mov
fstps
push
std
call
xchg
mov
or
in
in
xchg
or
mov
cltd
adc
sbb
ja
cmp
cmpsl
pop
outsb
mov
out
cmpsl
add
push
les
xor
xor
add
adc
pusha
fldenv
xor
xor
in
and
fmull
push
es
shlb
xor
mov
rclb
xchg
icebp
push
clc
pop
in
inc
adc
fidivl
out
and
push
sti
ja
dec
or
add
dec
aam
into
xor
cmpsl
adc
ds
jo
daa
rcrl
mov
outsl
jno
repz
jle
fcomps
xchg
push
stos
jmp
rorb
mov
jl
lods
push
inc
cmpsb
sbb
fucomp
dec
add
mov
incl
push
cmc
jp
in
test
jns
cmp
push
jecxz
xor
rcrl
daa
inc
ss
lahf
aaa
push
xchg
leave
and
and
imul
into
mov
jno
fbstp
repnz
sbb
shl
mov
sbb
pop
sti
repnz
orl
into
push
or
imul
mov
divl
leave
lret
jne
movsl
push
xchg
ja
fnstenv
sbb
mov
call
mov
fildll
movsb
out
out
sti
pop
out
in
mov
data16
shl
add
inc
in
dec
jmp
mov
push
sbb
mov
push
xor
das
iret
lock
mov
mov
inc
or
cmp
inc
imulb
or
lods
sahf
and
jmp
popf
cmc
or
outsb
loopne
mov
sbb
jns
push
jg
or
mov
and
sub
xchg
loopne
sbb
bnd
or
repz
shr
xor
shl
adc
xor
xchg
xor
sbb
sub
xchg
lret
adc
push
xchg
cli
add
daa
adc
lds
pop
insb
mov
jb
dec
pusha
psubsb
sbb
push
test
orl
add
jecxz
push
sub
adc
adcb
loopne
popf
test
jo
rcrl
dec
xlat
pop
clc
cmc
jb
in
aas
xor
shll
push
loopne
dec
sti
loop
stos
cmpsl
add
xchg
pushf
bound
push
lret
inc
push
pop
mov
or
jae
in
das
cmp
jmp
pop
push
sbb
out
and
xchg
lds
inc
push
mov
sbb
sbb
int
leave
sub
adc
fwait
cwtl
fdivs
dec
xor
mov
push
in
cmp
pop
dec
adc
mov
mov
repnz
bound
imul
lods
xchg
pop
insb
icebp
into
sbb
or
inc
in
mov
sub
ret
pop
in
ljmp
push
sub
add
movl
test
sub
mov
cmpsb
dec
sbb
push
cltd
imul
sbb
out
mov
mov
rorl
cmp
jae
stc
mov
mov
jns
sbb
daa
lds
mov
jns
jl
add
mov
js
pop
andl
sub
mov
rorb
daa
mov
push
stos
mov
xor
mov
xor
jl
fcmovnu
loopne
jbe
inc
mov
sbb
test
sahf
add
dec
mov
pushf
roll
decb
pop
sub
mov
push
adc
mov
sbb
sahf
or
lcall
mov
jmp
mov
push
sbb
mov
pop
mov
test
sub
sbb
jb
sbb
push
add
mov
fwait
adc
lock
dec
adc
push
cmpl
push
cltd
and
adc
cmp
int
push
fcomps
push
and
or
out
cmovns
dec
cmpsb
pop
es
xorb
out
sbb
mov
jo
xor
cli
rclb
mov
loop
and
in
out
sbb
mov
int3
dec
ja
int3
inc
dec
dec
adc
xor
inc
and
pop
pop
mov
add
jns
inc
mov
jecxz
lahf
lcall
ficomps
adc
sub
scas
test
shrl
mov
outsl
or
mov
cmp
mov
jmp
test
and
sti
mov
dec
sub
push
pop
mov
nop
shl
je
insb
xchg
mov
and
or
cmp
push
cld
leave
enter
loop
rorb
sub
loopne
hlt
dec
or
pop
mov
xor
inc
aad
int3
movsl
cmp
xchg
add
nop
sub
cmp
mov
push
cltd
sti
mov
push
popa
pop
mov
repz
fucomi
pop
cmp
out
dec
cmc
lcall
mov
pushf
cld
cmp
je
in
lds
dec
mov
xchg
arpl
imul
or
cmp
testb
je
mov
sbb
mov
mov
andb
movsl
add
in
xchg
push
push
lock
gs
je
ljmp
std
ljmp
fimull
fld
out
testl
push
xchg
das
aam
xchg
cs
xor
add
ret
fnsave
sbb
test
mov
sub
lahf
fs
loopne
in
and
add
mov
push
dec
lock
xor
inc
pop
stc
add
push
and
sbb
addr16
shlb
sbb
outsl
mov
push
movsl
ret
cld
sub
aam
jmp
mov
outsl
jle
and
cltd
sub
mov
and
pop
jbe
fistl
addr16
into
je
insb
popl
mov
outsb
mov
push
cmpsl
xor
ja
loope
adc
sbb
fwait
sbb
pop
jmp
mov
lock
aas
mov
iret
pusha
or
mov
adcl
loope
sub
ljmp
lret
push
imul
into
and
sti
xchg
int
mov
popa
in
sti
xchg
inc
cli
jo
addl
loopne
movsb
in
push
jl
xor
outsb
in
shrl
les
inc
daa
mov
inc
push
push
mov
test
pop
stos
fisttpll
jne
or
lock
leave
xchg
mov
aad
and
scas
bound
rcrb
scas
outsb
xor
push
mov
mov
add
inc
or
mov
shrl
jae
push
xchg
push
inc
pop
push
andl
add
fwait
pop
ljmp
dec
out
cli
jmp
int
jns
or
ror
push
movsb
pushf
push
ret
scas
orb
xor
ljmp
and
das
dec
daa
ficomps
xorl
leave
aas
les
shlb
inc
test
jmp
add
pusha
out
xchg
int
push
jmp
sub
daa
push
mov
into
pop
push
mov
cmpsb
add
fbstp
in
xchg
jb
xlat
subb
sbb
jb
repz
sbb
inc
out
jo
push
fsubs
dec
and
sub
call
xor
cmp
push
clc
cwtl
aad
xchg
add
xchg
lds
cmovge
aas
aaa
mov
test
js
faddl
or
dec
and
sub
movsl
inc
mov
or
enter
imul
fdiv
or
andl
mov
inc
movsb
stc
fisttps
mov
adc
clc
hlt
add
in
mov
cmp
xchg
push
adc
orb
dec
sahf
adc
xor
xchg
flds
ret
xor
clc
push
cmp
fwait
shlb
cmc
icebp
popa
ret
inc
rcrb
xchg
or
inc
loopne
jg
aam
push
cmp
jo
xlat
nop
mov
or
sbb
fidivs
call
enter
cwtl
xor
mov
pop
ljmp
mov
nop
ror
lock
je
push
in
push
test
nop
in
pop
inc
stc
add
in
add
out
dec
xchg
lcall
out
sbb
or
outsl
cmp
test
jg
dec
in
xor
adc
and
sbb
lcall
fs
and
imul
and
lock
insb
mov
jmp
lcall
out
adc
div
sub
jne
faddl
imul
nop
lret
into
rcl
les
xor
in
daa
int
push
sub
js
inc
leave
gs
inc
clc
loop
sub
repz
std
xor
addb
jo
jg
aaa
xorl
xchg
aaa
mov
cmp
jp
mov
out
xor
add
sti
pop
xchg
pop
out
sbb
mov
movsl
andb
lret
add
push
inc
rol
mov
std
jb
push
nop
jmp
aad
inc
sarl
stc
sub
out
std
pop
inc
add
popa
cs
mov
pop
in
lahf
sbb
bound
xor
mov
mov
inc
ljmp
data16
add
repnz
es
sub
mov
es
mov
test
aad
insl
jno
test
aad
outsb
std
fbstp
or
fsubrl
loop
jmp
imul
insl
mov
xor
mov
ljmp
icebp
xchg
jae
and
sbbl
pop
ja
adc
or
inc
out
jno
mov
add
cmp
xor
mov
jae
leave
jl
aad
add
lods
mov
es
in
movsl
inc
xchg
mov
orl
pushf
dec
ret
inc
icebp
cmp
sbb
push
and
test
fisubl
inc
pop
jne
cmpsb
or
leave
mov
jns
xlat
dec
adc
xor
mov
adc
outsl
xor
out
sbb
push
mov
gs
pusha
je
dec
pop
ret
ja
xchg
lcall
out
shrb
or
jbe
sarb
pop
ret
incl
cmp
bound
add
push
dec
push
out
hlt
xor
adc
lahf
sub
pop
out
fildll
ficoms
lock
jnp
inc
dec
inc
leave
iret
call
shlb
loopne
push
mov
loop
icebp
mov
fistpll
xchg
mov
insl
ficoml
dec
rcrb
clc
and
aaa
test
dec
adc
and
sbb
push
sub
xor
jno
mov
or
nop
sub
xor
in
sub
xchg
popa
out
and
lret
lcall
lcall
inc
cmp
mov
repz
mov
dec
xor
mov
lahf
hlt
lret
jbe
cwtl
je
xor
dec
xchg
aad
inc
or
cmpb
rclb
mov
xor
and
mov
push
gs
dec
into
int3
mov
stos
or
push
jnp
jo
and
push
jle
fstps
jge
imul
add
faddl
mov
mov
mov
aas
leave
mov
sti
pusha
pop
add
and
pop
minps
lods
scas
push
rolb
out
mov
xacquire
adcb
mov
xor
sbb
add
pop
lret
jecxz
jmp
inc
xchg
lock
outsb
out
xlat
ss
testb
hlt
icebp
fs
xor
mov
push
mov
jbe
mov
sub
mov
outsl
lea
negl
testl
inc
adcl
es
es
outsb
pop
pop
imul
and
ret
mov
and
xchg
inc
add
jne
pop
mov
mov
test
adc
testl
les
lds
or
mulb
push
jbe
cmc
xchg
jns
outsb
iret
xor
push
adc
aad
outsl
test
and
movsb
mov
jecxz
es
shr
imul
mov
clc
and
loop
mov
pop
cmp
xor
shl
decb
pop
add
push
sti
insl
roll
lret
into
adc
decb
cmpsl
lock
and
leave
loope
popa
sbb
jne
ds
push
dec
clc
or
sub
sub
adcl
jb
fidivrs
stos
mov
shll
xchg
mov
sbb
add
push
daa
push
test
xchg
push
aaa
add
pop
or
jg
in
push
popf
xor
push
mov
and
in
pop
das
adc
pop
mov
and
or
test
mov
clc
test
mov
xorb
cmp
xlat
xchg
xchg
push
rolb
adc
lret
mov
shrb
out
daa
sbb
jno
leave
mov
in
pop
xor
repz
or
xlat
inc
inc
fucom
push
lea
test
test
mulb
xor
fisttps
dec
xor
pop
jae
in
xor
inc
mov
mov
out
xchg
xor
pop
pop
test
arpl
stos
out
push
in
jp
lcall
in
sbb
dec
xor
adc
adc
rcll
dec
imul
adcl
negb
addr16
cmpsb
and
push
xchg
xor
push
pop
push
mov
repnz
jmp
bound
icebp
shll
add
outsb
test
push
mov
adc
fcoml
in
cmp
push
test
insb
push
or
mov
outsb
jmp
pop
mov
sti
mov
xchg
ror
push
out
lret
and
fisttps
popf
xor
mov
adc
data16
test
in
and
pop
dec
add
popa
inc
adc
stc
mov
xor
call
xchg
pop
xchg
pop
xor
and
push
test
leave
adc
insl
cmp
xor
test
pop
in
stos
lods
out
loop
push
pushf
jecxz
int3
fwait
lods
cmp
add
push
xor
and
bound
test
dec
xor
jb
mov
dec
jbe
mov
mov
xorl
xchg
jg
xchg
cltd
aas
arpl
inc
and
addb
cmp
jecxz
repnz
push
pop
test
dec
lock
or
mov
call
and
gs
addl
inc
push
or
dec
bound
pop
sti
and
fstpl
iret
add
xorb
mov
bnd
lcall
dec
je
int
add
xor
lds
jecxz
inc
ljmp
std
sahf
dec
sbb
insl
xchg
xorb
out
or
testl
or
call
xchg
push
dec
sub
mov
jle
xchg
test
sbb
rclb
scas
push
jge
aaa
in
in
xlat
repnz
fidivl
mov
in
cmc
adc
mov
pop
pusha
xchg
xchg
xchg
iret
adc
es
cmc
cli
pop
and
push
xor
dec
jmp
or
mov
inc
clc
arpl
shl
ss
cmp
call
sub
xorb
mov
add
dec
and
stc
movb
les
jecxz
lcall
in
push
aad
mov
into
popf
mov
dec
fwait
inc
lock
xlat
out
outsl
push
in
andb
ljmp
and
add
aam
inc
stc
mov
inc
cmc
std
movsl
out
xchg
stos
inc
jg
ds
lahf
lock
push
stos
das
leave
dec
shll
sti
cmp
sub
mov
xor
push
pop
push
xchg
fnsave
pushf
mov
stos
inc
inc
push
imul
adc
and
cld
aas
jno
movsb
and
mov
and
sbb
jl
test
pop
icebp
push
leave
jmp
mov
push
into
mov
xchg
lret
test
sub
and
test
and
popf
xchg
add
imul
sbb
xchg
push
dec
int3
xor
pop
jne
jecxz
dec
push
adc
adcl
cmp
fstp
inc
leave
fistpll
adc
mov
jno
pop
sbb
mov
cmpsl
inc
icebp
inc
xchg
test
mov
insb
add
stos
mov
pusha
pop
cmp
popf
jns
sub
call
lret
shlb
addr16
faddl
add
shlb
or
push
inc
pop
jno
popa
data16
fwait
icebp
push
mov
sbb
in
dec
pop
add
inc
cmp
or
gs
xchg
push
imul
mov
iret
pop
sti
cli
or
cmp
sbb
push
add
sub
test
or
lret
add
sbb
shlb
into
mov
mov
lods
ret
adc
cs
lods
insb
sub
mov
pop
sub
popa
push
sbb
mov
add
loop
addr16
icebp
mov
movsl
movb
cmp
add
xor
xchg
f2xm1
push
lret
and
inc
rorb
xor
es
aaa
out
insl
pop
xor
push
push
outsb
jp
icebp
sub
out
pop
jns
sbb
out
or
mov
sbb
push
mov
xor
or
addl
aas
out
shlb
mov
pop
sbb
jp
test
das
adc
cs
cli
push
ljmp
fs
lahf
dec
jns
stos
jmp
xor
pop
pusha
inc
inc
movsl
leave
push
imul
scas
push
rcrb
dec
sbb
mov
imul
xorl
push
mov
js
inc
dec
fnstcw
repnz
in
sbb
into
repz
sbb
outsl
lahf
push
mov
or
aas
adc
add
pop
into
adc
inc
ret
adc
andb
add
and
fdivl
inc
into
frstor
cmc
mov
lret
dec
cs
pushf
mov
adc
int3
sbb
aad
ljmp
jne
aad
loop
mov
lret
lock
icebp
mov
test
in
cltd
or
cmc
mov
imul
dec
jle
sbb
jns
dec
adc
mov
jmp
or
pop
test
xchg
rcrl
mov
sbb
movsb
cld
insb
adc
imulb
cmp
jp
fsubl
mov
lods
mov
add
dec
push
repz
movsb
in
and
or
push
loop
xchg
xor
sbb
dec
push
decb
push
xchg
xlat
sbb
sub
push
loopne
sti
sbb
mov
mov
jp
test
jecxz
push
lods
icebp
adc
cmpsl
mov
das
iret
movsl
stc
inc
dec
mov
int
and
in
mov
pop
arpl
pop
mov
push
or
out
dec
leave
imul
js
xor
out
push
cmc
and
sti
mov
in
loope
mov
xchg
inc
mov
pop
and
and
jo
xor
cld
test
ljmp
pusha
push
mov
xchg
mov
iret
int
xor
or
ret
aaa
mov
or
pop
ds
fcmovb
ret
movsl
iret
dec
mov
stos
rcrl
in
clc
testb
push
sub
jbe
nop
imul
testb
mov
mov
dec
cmp
inc
dec
cmpsb
repz
lock
xchg
jne
addr16
in
stos
bound
inc
adc
pop
out
test
pusha
cwtl
fisubs
sbb
icebp
jge
lahf
cltd
push
push
movsl
mov
inc
xor
inc
addr16
rclb
fwait
dec
or
jmp
dec
push
xor
jno
movsl
mov
jle
xchg
sbb
cwtl
pushl
sbb
cmpsl
shll
lds
push
in
dec
addr16
xor
ds
cmp
or
mov
js
insb
lock
fsubs
aaa
adc
movsl
sbb
imul
mov
sub
push
outsl
sbb
insb
repz
push
and
aas
cmc
add
inc
enter
adc
test
xor
sti
adc
cmpsl
and
mov
int3
aad
sub
lock
in
movsl
ret
cld
fcomps
push
dec
pop
jge
push
sub
out
dec
xor
pop
mov
aam
cmp
daa
cmp
adc
cmpsb
xor
or
daa
out
xor
pushf
mov
pop
imul
inc
pop
mov
dec
sbbb
data16
push
movsb
insl
lods
movsb
pop
sub
pop
insb
cmpb
imul
dec
pop
clc
cmp
test
outsb
aam
adc
scas
cli
push
gs
fldl
adc
adc
add
adc
ror
dec
add
movsl
sub
mov
mov
out
popf
dec
jle
nop
xchg
shrl
clc
inc
sti
mov
pop
sub
sahf
pop
movsl
dec
or
jo
and
cltd
aaa
xor
inc
mov
and
int3
mov
mov
testl
push
mov
adc
lock
call
push
out
out
inc
xchg
sbb
sub
or
ret
adc
inc
sub
or
sub
cmp
inc
sub
mov
lret
inc
ret
outsl
mov
cs
in
cmp
decb
sbb
sbb
push
mov
es
icebp
dec
gs
dec
push
stc
notl
fcomps
add
cmc
sbbb
aaa
decb
ljmp
xor
movsl
cmp
mov
dec
popa
pop
add
lods
jo
pop
jge
sbb
xor
mov
mov
bound
es
bound
xor
add
popl
mov
stc
loop
adcl
sti
adc
pop
sahf
dec
scas
xor
jmp
add
jae
xchg
lods
repz
fistpll
mov
js
push
jge
cmp
jp
adc
push
lea
out
sbb
sbb
iret
mov
jae
ret
push
data16
imul
xor
outsb
sbb
xor
mov
mov
inc
dec
sbb
mov
leave
loop
mov
fld
adc
mov
and
push
or
pop
ss
aam
in
adc
insl
add
insl
push
iret
nop
in
and
sbb
dec
jne
dec
pusha
dec
mov
mov
or
inc
dec
out
sbb
cmpsb
andl
xchg
jo
loopne
pop
pop
icebp
dec
and
and
adc
xor
dec
addb
or
dec
xor
outsl
clc
dec
lea
js
fs
scas
lahf
je
mov
add
push
and
aam
clc
mov
rol
in
pusha
add
push
lock
mov
mov
push
push
fiadds
scas
mov
add
call
xchg
popa
mov
popf
lock
fiadds
mov
rorb
push
fldt
cmpsb
cli
ljmp
push
sbb
and
sar
mov
ret
sub
lds
fcoml
cmp
notl
syscall
sbb
pop
ds
imul
in
mov
or
arpl
cmpsb
sub
push
push
stos
or
inc
xchg
rcll
out
adc
cmp
inc
cmpsl
xor
mov
fimull
sbb
or
es
sub
mov
push
jge
imul
add
fsubrl
and
mov
cli
ret
mov
and
sub
or
mov
sub
dec
out
pushf
outsl
push
lea
out
movsl
mov
sar
frstor
or
sbb
inc
test
inc
jb
inc
popa
loopne
jg
xor
inc
shlb
dec
jae
out
mov
cwtl
or
loopne
ds
xchg
mov
popa
push
xchg
xchg
mov
hlt
repz
pop
icebp
inc
je
dec
push
or
jno
cmp
les
or
pop
data16
lret
outsb
lods
cmp
sbb
hlt
ret
punpckldq
xor
out
icebp
outsb
push
ud2
cmp
movsl
sbb
push
mov
aad
mov
dec
in
and
xor
xlat
xor
jge
xchg
outsl
dec
pop
inc
pushf
inc
aaa
stc
or
rcrb
xchg
pop
andps
and
dec
jb
pop
jno
lret
je
pop
jp
andb
movsl
in
inc
inc
insb
dec
popa
fs
dec
lods
cmc
mov
sub
ret
cli
rcrb
push
mov
sbb
scas
lret
enter
repz
rolb
imul
repnz
and
push
mov
test
das
mov
aad
adc
push
jle
mov
bound
jmp
cltd
pop
ret
testb
sub
or
repnz
int3
mov
adc
insb
iret
xchg
mov
in
adc
lahf
cmp
cs
orl
adc
mulb
lret
mov
jae
inc
mov
pushf
ja
fs
cmc
iret
into
push
mov
lret
add
shrb
inc
adc
aas
lahf
adc
iret
fists
dec
fsubl
hlt
push
xchg
fnstenv
mov
movsb
xor
cmpsl
pushf
jne
inc
std
push
cmp
cmp
mov
and
xchg
sbb
push
cmp
or
hlt
xchg
sbb
imulb
shl
and
or
pop
and
cmp
enter
jp
int3
imul
mov
lret
lcall
mov
xor
ds
xchg
pop
test
rclb
mov
cld
mov
sub
xlat
mov
dec
or
fldcw
sub
aad
jns
pop
adc
mov
mov
sub
mov
push
and
out
dec
fcompl
fneni(8087
pop
leave
stc
stos
pop
jno
jle
xor
in
out
and
jbe
enter
sbb
jne
sbb
out
scas
add
mov
ss
dec
mov
or
mov
and
gs
xchg
leave
dec
push
or
push
stos
inc
push
add
jg
insb
movsl
push
and
mov
fdivrs
dec
push
push
sub
loopne
addr16
aam
mov
jne
bound
in
stos
adcb
xchg
test
sti
mov
mov
jno
fstpl
inc
clc
call
or
pop
popf
popf
movsb
xor
fcompl
mov
aas
imul
or
out
push
gs
scas
add
adc
icebp
xlat
pop
sub
sub
jne
pop
and
xor
test
jge
xor
shl
out
or
into
add
rcr
movsl
xchg
mov
sub
stos
into
xchg
mov
sbb
or
xchg
push
sub
push
lds
xchg
stos
jecxz
popf
sub
mov
add
loopne
xchg
inc
sub
enter
xchg
adc
or
and
jmp
outsb
out
push
std
push
in
mov
gs
in
dec
dec
push
int3
lret
int
dec
pop
jecxz
or
fstl
movsb
sti
popa
jge
mov
insb
lock
lcall
lea
sub
and
jb
xchg
push
int3
dec
sub
push
mov
sbb
or
popa
repz
mov
xor
sbb
fdiv
insb
mov
pusha
les
lods
fmull
in
sbb
cmp
mov
cs
cmp
add
repnz
out
lds
sbb
xor
icebp
push
mov
lods
xchg
mov
cs
pop
pop
cmp
fldenv
cwtl
scas
push
lock
dec
sbb
sbbl
or
inc
insl
cmp
mov
nop
sbb
int
add
push
iret
cltd
out
or
sub
in
xchg
cmp
xchg
jmp
and
out
mov
xlat
fs
xor
loop
sub
es
mov
out
add
jecxz
adc
dec
add
test
add
push
stos
adc
mov
adc
sub
ljmp
lds
test
shlb
stc
xchg
outsl
xchg
push
test
jns
lea
push
lret
mov
jae
jb
inc
ficoms
fs
jnp
test
push
and
gs
xchg
ja
xor
in
ficoml
lock
cli
inc
mov
jg
mov
mov
mov
out
or
test
jge
test
push
cmp
mov
xchg
mov
in
js
cli
mov
sbb
push
dec
in
mov
loopne
pop
xor
inc
dec
sub
adc
stos
inc
or
in
cmp
jecxz
add
pop
and
add
and
mov
pop
testb
push
pop
mov
pop
mov
push
xchg
js
lock
bound
jl
in
jmp
mov
mov
xlat
or
out
lock
jbe
and
xchg
nop
jmp
ret
test
jge
shll
divl
mov
xchg
sub
subb
inc
cld
pop
jp
and
sar
add
mov
xchg
adc
add
and
pop
lock
adc
test
iret
sti
and
xchg
push
mov
and
or
cmp
pop
push
xor
fistpl
test
sub
data16
scas
push
xchg
mov
in
out
push
jle
mulps
psllw
adc
and
bound
xchg
mov
fdivl
stos
aas
in
dec
pop
and
out
inc
mov
scas
es
outsl
cmp
pop
lret
icebp
scas
inc
add
pop
insl
nop
and
jno
repnz
pop
cmc
in
out
lock
repz
sub
movsb
notl
movsl
jmp
dec
add
aam
and
cmp
out
rorb
mov
popa
xchg
pop
test
mov
push
sub
or
nop
cli
inc
dec
push
add
into
push
push
leave
stos
xor
ss
dec
mov
std
rorb
inc
or
pusha
shll
orb
or
sub
dec
ficomps
pop
rcr
jnp
fistps
inc
scas
jmp
jb
sbb
pop
out
das
fwait
add
daa
add
lds
and
movsl
fs
or
in
cli
lcall
enter
hlt
dec
out
pop
inc
mov
movsb
xor
xor
push
cltd
shrl
add
jno
jae
cmp
mov
icebp
dec
gs
push
push
fiaddl
adc
push
scas
popf
int3
in
push
lock
adc
mov
test
add
or
ja
lcall
inc
xchg
jb
mov
mov
test
inc
jecxz
cmp
sbb
out
fadds
mov
push
jne
adc
clc
add
hlt
daa
mov
push
in
icebp
out
jno
daa
jbe
add
imul
push
xor
enter
jmp
jle
jne
add
mov
adc
mov
sahf
std
cmpsb
or
leave
jge
dec
sbb
hlt
inc
fdivl
das
sub
pop
cmpsb
inc
pop
or
add
jmp
add
incl
push
aaa
push
scas
ret
mov
std
add
sbb
or
jb
rclb
call
mov
test
jae
or
pop
test
cmp
popf
push
inc
adc
xor
jae
add
and
lahf
push
jl
fs
ja
cmp
push
insl
pushf
adc
imul
inc
jmp
adc
cwtl
push
push
or
and
or
jno
lcall
sub
and
leave
inc
jae
xchg
jbe
loop
adc
xchg
adc
pop
sbb
xor
lods
jns
mov
adc
dec
fidivl
scas
xchg
push
rcr
cmp
test
pop
jne
mov
rclb
ljmp
jb
sbb
out
add
inc
movsl
jb
stc
dec
test
sbb
pusha
push
scas
xchg
ret
pop
mov
xor
sbb
fucomi
adc
cmc
push
cmp
imul
fs
push
pop
cwtl
lds
or
popl
push
mov
gs
mov
out
int3
xchg
ja
jne
out
add
or
and
dec
js
stos
jo
jb
sbb
xchg
fildll
push
push
add
xchg
or
mov
push
push
mov
add
fbstp
icebp
imul
int
negl
popa
repz
out
in
nop
xor
stc
cwtl
mov
push
outsl
jge
push
adc
aas
test
sti
jecxz
push
mov
dec
ret
fisubl
dec
shl
and
xchg
mov
sahf
cmc
jmp
pop
es
addr16
or
jno
out
scas
leave
push
nop
dec
xchg
xor
mov
mov
adc
loope
shrb
sub
push
nopl
sub
andb
lock
cmpsb
sbb
adc
push
dec
mov
and
xor
mov
fdivp
mov
cwtl
lods
push
push
add
mov
sbb
enter
or
cmc
insl
das
test
push
adc
and
jp
adc
inc
scas
ljmp
mov
insl
lea
pop
shrb
adc
pushf
push
out
and
cmpsb
mov
jle
js
sbb
dec
jo
shl
imul
mov
sbb
sbb
test
out
outsl
aaa
cmp
jle
inc
sbb
jmp
data16
cli
add
fldt
daa
push
push
and
mov
push
push
in
push
jne
mov
push
mov
xor
inc
jge
addl
jle
cmpsl
inc
addr16
dec
outsl
rcrl
pop
push
sbb
pop
push
loopne
inc
inc
fdivl
bnd
push
insb
pop
in
mov
mov
fcomi
into
out
xlat
push
fs
cmp
movsl
cmpsb
or
pop
clc
xor
jae
sbb
mov
mov
mov
jne
ret
push
nop
or
shl
and
push
jmp
iret
fsubr
cld
outsl
pusha
dec
xor
inc
push
movl
jae
leave
push
cld
mov
jb
cmp
mov
xchg
push
aas
dec
sti
mov
lcall
arpl
or
xchg
push
cmp
dec
xor
adc
push
ja
repz
xchg
xchg
loopne
test
cmp
push
fsubrl
testl
aas
fmull
fcmovnbe
jmp
nop
lods
dec
pop
mov
or
add
sbb
jge
in
insl
ja
scas
push
les
mov
bound
jecxz
jns
cli
insl
cmp
mov
xor
inc
mov
or
shl
popf
lock
cmp
loop
mov
pop
fadds
add
cli
push
xchg
jb
or
push
std
sbb
dec
or
outsb
rcll
xchg
cmpsl
and
fwait
jb
into
mov
xor
sub
and
es
xchg
outsl
das
xor
in
pop
inc
jb
push
test
push
push
mov
push
sbb
popaw
pop
mov
inc
mov
add
repnz
pop
inc
test
mov
fwait
test
nop
jle
adc
loopne
bound
test
repnz
aad
xchg
dec
or
insl
dec
test
cmp
xchg
add
xchg
add
insb
add
cmp
lods
fmul
int
add
repz
sub
jp
dec
xlat
andl
cwtl
lds
cmp
cmp
in
in
pop
leave
xor
dec
or
and
mov
andb
mov
into
jne
imul
arpl
in
lret
jno
lret
inc
xor
add
jbe
mov
jmp
movsb
es
dec
pop
loop
inc
push
xchg
lret
bound
dec
sub
loope
lret
or
into
inc
pop
out
scas
and
xor
lods
loope
call
push
cmc
out
inc
mov
test
aam
adc
loopne
sub
dec
pop
in
jo
std
cmp
sahf
cmp
mov
xchg
les
jge
dec
and
push
popa
subb
ret
hlt
imul
sub
addb
xlat
std
xor
cmp
arpl
pop
xor
or
mov
mov
pop
mull
in
push
xchg
cwtl
hlt
fisttpl
shlb
mov
mov
gs
cmp
decl
sub
or
mov
lds
xchg
frstor
sub
pop
mov
out
lcall
cltd
je
stc
xor
imul
fists
in
imul
in
or
mov
sub
jp
xor
xchg
jo
mov
outsb
loop
adc
mov
jmp
add
cmpsb
flds
mov
cmp
fnstsw
lock
adc
aad
cmp
inc
notb
imul
fcmovnu
push
jmp
cltd
imul
and
pop
popf
sbb
repnz
test
jmp
xchg
data16
test
cld
add
mov
imul
and
cwtl
test
sbb
xor
push
and
out
repnz
test
and
jae
push
mov
mov
mov
mov
mov
add
adc
adc
lret
mov
and
shr
add
fstl
push
sub
jbe
mov
ds
mov
jmp
dec
sub
test
pop
js
push
aas
pusha
xchg
data16
shl
pusha
mov
ljmp
push
mov
rcrl
jae
addr16
jbe
mov
xor
out
outsb
cwtl
jnp
mov
xchg
ja
ficomps
punpcklbw
stc
and
aas
iret
inc
dec
movsl
aas
inc
dec
ret
out
aam
mov
push
inc
cmp
movsl
test
cmpsb
cltd
fldt
rorl
les
mov
jmp
mov
hlt
ret
cs
xchg
into
out
pusha
movsb
mov
or
icebp
outsb
ret
lods
jl
ljmp
rorb
repnz
icebp
push
add
mov
hlt
shll
je
jg
sub
xchg
xchg
in
xchg
mov
push
mov
repnz
sbb
mov
ja
mov
das
into
add
fadds
mov
xor
sbb
mov
or
sub
aas
jno
pop
lock
scas
hlt
xor
insb
add
testb
leave
add
outsb
push
or
insl
bnd
shrl
lret
lock
fadd
ss
sub
popa
and
in
out
sub
hlt
daa
out
adc
arpl
jb
push
mov
andb
xchg
add
loopne
mov
inc
test
inc
mov
in
jno
sbb
adc
rol
or
cs
aad
stos
jmp
adc
loopne
fcoml
lods
dec
nop
pop
outsl
push
iret
mov
inc
je
sub
gs
inc
push
xlat
int3
testb
iret
std
insb
rorb
mov
mov
add
aam
fsubr
out
inc
popf
xchg
lods
es
jne
xor
mov
icebp
adc
inc
push
mov
mov
fs
enter
jmp
imul
pushf
dec
xor
ja
xchg
andl
cmp
mov
lret
pop
and
and
repz
xor
test
jae
lcall
stos
shlb
data16
stos
mov
mov
sbb
dec
pop
mov
test
sbb
vmulps
aam
adc
je
sub
test
data16
mov
icebp
jns
outsb
pushf
movsb
popf
jb
gs
pusha
push
adc
sbb
pop
mov
cwtl
loopne
sar
popa
and
lret
mov
xchg
and
mov
xor
lret
push
jnp
add
leave
push
cmc
or
xchg
add
int3
xchg
sub
repz
add
sub
pop
enter
loopne
add
mov
mov
fstp
int
imul
insb
in
mov
test
flds
repz
loop
pop
insb
inc
cli
pop
mov
sub
nop
loop
iret
out
or
popa
loop
xchg
popa
test
mov
jmp
push
shl
ss
jae
push
push
test
mov
pop
dec
aaa
insl
std
mov
fsubl
test
add
mov
inc
pushf
xchg
into
loop
xlat
out
ret
mov
iret
xchg
cli
rcr
rcrl
push
popa
pop
mov
aas
sub
sub
aaa
dec
in
in
decb
dec
shr
gs
cs
pop
pop
sbb
sub
rcrl
inc
sbb
test
jo
push
push
push
xchg
xchg
pop
test
mov
lret
test
mov
pop
xchg
lods
cmpsl
and
jmp
xchg
or
mov
stos
outsb
push
mov
mov
js
xor
sbb
fstl
test
lahf
dec
aam
mov
or
dec
fucomp
push
or
lock
fcomps
add
inc
inc
dec
loop
dec
xchg
cmp
inc
test
dec
insl
bound
cmc
lock
pop
inc
cmp
jecxz
and
add
testb
movsb
adc
sbb
and
push
jb
fistpl
mov
xchg
je
daa
popf
les
popf
add
xchg
xor
adc
popf
gs
mov
pop
mov
rcll
in
mov
push
xchg
je
sub
stc
int3
fisttps
and
dec
pop
je
nop
lahf
jb
outsb
cmp
push
sub
xchg
loop
in
divl
nop
int3
out
add
loope
in
add
xor
jne
and
xchg
out
into
add
lods
movsb
pop
in
adc
sub
mov
clc
stos
rcrl
sbb
mov
fwait
dec
pop
shlb
mov
outsb
dec
cmp
and
sub
dec
call
push
push
inc
xchg
xchg
cs
clc
and
sub
add
out
vmovapd
loope
inc
repz
mov
repnz
xchg
mov
adc
pop
push
faddl
or
jbe
ljmp
jle
ret
cmp
inc
push
ja
mov
mov
js
push
not
stc
mov
sub
sbb
dec
cmc
lret
xchg
inc
cli
push
aaa
pop
in
add
fdivrl
xor
pop
pusha
add
push
daa
adc
decl
je
loopne
lahf
cmc
cmp
pop
sbb
or
xor
mov
mov
mov
dec
jo
mov
push
test
push
or
sub
test
call
pusha
sbb
cwtl
scas
lods
mov
mov
sbb
jg
jl
or
aas
movsb
mov
xchg
sbb
add
daa
jae
push
clc
rol
cmp
dec
add
or
js
aas
inc
pavgw
filds
out
and
notb
clc
pop
mov
repnz
into
pop
daa
push
es
test
leave
pop
imul
push
notl
into
sub
std
popf
pop
popf
sub
jmp
jmp
adc
sub
inc
and
shll
mov
cmp
jge
cli
insb
mov
sbb
out
sahf
sar
pop
aad
in
sub
das
pop
cmp
mov
repz
mov
repnz
mov
enter
and
out
negb
pop
pop
inc
push
sbb
mov
push
or
dec
or
imul
pop
out
push
add
lahf
cmp
pop
dec
cli
pusha
in
or
sbb
in
pop
mov
jecxz
sbb
movsb
imul
xchg
rcrl
fimuls
inc
push
dec
push
and
enter
xchg
mov
dec
push
push
fdivrs
sarl
out
pop
push
cs
sub
out
or
sti
and
xchg
rcr
sbb
enter
dec
push
or
jne
loop
add
mov
loope
jae
and
and
adcb
and
add
mov
dec
icebp
fs
push
outsl
lods
xchg
loope
jno
int
mov
sar
outsl
mov
enter
aad
cmc
jp
jl
mov
add
cmp
xor
jge
pop
xchg
xchg
dec
lret
push
jo,pt
jne
cmpl
or
dec
fwait
repz
push
add
inc
dec
mov
mov
out
in
iret
adc
popf
cmp
mov
je
jb
dec
loop
cld
test
addl
daa
jecxz
jo
repz
mov
jp
and
push
xlat
jae
and
inc
loopne
in
loopne
lds
fmuls
dec
pusha
push
push
sub
outsl
pop
push
data16
pusha
out
test
ret
jg
pop
push
dec
repz
jecxz
push
pop
push
lea
mov
xchg
mov
push
mov
cmpl
push
mov
push
icebp
xor
pop
insb
add
push
cmp
stc
inc
and
mov
in
je
xchg
push
jbe
pop
pop
pop
fwait
shrl
inc
enter
fst
subb
pop
idiv
push
outsb
mov
or
iret
mov
add
icebp
dec
sti
icebp
sub
mov
sti
lcall
cld
icebp
addr16
mov
jae
fcomip
es
out
or
std
fs
mov
jecxz
pop
push
test
fbstp
push
pop
out
stos
push
jp
icebp
push
lea
out
cmp
inc
test
push
mov
xor
cmp
jo
js
cmpsb
into
ficoml
dec
cmp
out
push
pop
jecxz
das
cli
fcmovu
mov
rcrl
imul
lahf
in
decl
test
fwait
out
out
sbb
loopne
es
sbb
inc
rcrb
push
jo
pop
xchg
sbbl
movsb
cmc
xorb
or
pop
leave
mov
push
xor
inc
sbb
les
out
pop
out
add
leave
cmp
inc
ficoms
lock
pop
out
lcall
add
jge
dec
dec
in
sarb
testb
rorb
sahf
insb
sbb
stc
sub
repnz
lcall
movb
fsts
xchg
jo
sarb
add
dec
pop
lock
xchg
out
es
aaa
mov
push
push
out
pop
lock
mov
fimull
xchg
adc
test
xchg
pushf
arpl
aad
xchg
dec
mov
xchg
cld
mov
xchg
pop
push
hlt
mov
adc
cmp
inc
or
pop
in
iret
sub
nop
and
adc
and
out
cli
sbb
fcoml
inc
idivb
cmp
ljmp
mov
jg
pop
lret
cmp
pusha
push
adc
je
icebp
ss
loopne
repnz
hlt
push
jp
rcll
stos
mov
mov
movsb
jmp
pushf
push
fiadds
push
sub
cli
sbb
std
icebp
xchg
jl
iret
call
pop
jp
pop
mov
out
aam
xchg
add
sti
xchg
add
rorb
popa
daa
clc
icebp
rorl
cmp
leave
aam
push
lds
cmc
aad
jne
imul
ret
mov
rorl
push
jmp
ljmp
imul
into
cmp
rep
pop
cli
mov
adc
shll
dec
xlat
popa
imul
popa
hlt
jne
add
data16
or
adc
repnz
dec
das
pushl
loop
xchg
mov
loopne
push
and
cmc
bound
shl
sbbl
push
jns
xchg
push
rorb
cli
cltd
push
out
out
fptan
lds
mov
arpl
in
test
sub
jge
lret
cmc
subb
add
jmp
mov
les
mov
cmpsb
lcall
mulb
sub
bound
push
repz
ss
and
es
and
cmp
xor
sbb
mov
aam
addr16
movsl
push
lods
mov
push
out
sub
imul
mov
mov
rcr
xor
les
leave
cmc
mov
popa
pusha
js
imul
jnp
mov
shrl
cmpsb
fimuls
or
call
fsub
mov
cs
adc
add
xchg
mov
cs
inc
mov
and
sub
dec
pop
rcrb
cmp
push
cli
jns
out
bnd
sbb
cltd
pushf
stos
mov
les
daa
in
pop
cmpsl
rcl
add
inc
loop
or
and
push
cli
into
pop
imul
out
mov
out
int
xchg
jmp
pop
pusha
imul
ljmp
inc
dec
xor
inc
add
test
dec
cmp
loop
shlb
adc
popf
icebp
ss
push
stos
inc
out
mov
in
jecxz
cmp
decb
jg
subl
ds
cmp
cli
or
pop
and
add
mov
das
push
popa
clc
out
fiadds
lods
sbb
arpl
icebp
mov
lret
int
jno
sbb
test
ret
xchg
add
clc
mov
shrb
leave
sbb
push
push
sarb
sub
imul
imul
push
jns
add
shll
leave
das
xchg
sarb
repnz
dec
and
xchg
or
fistl
jge
push
cmp
shll
arpl
xor
dec
ret
or
clc
fs
bnd
repnz
fnsave
push
sub
ret
mov
mov
xor
add
negl
pop
xor
addr16
mov
adc
mov
mov
add
push
cmpl
adc
shrb
lahf
xor
cs
hlt
push
adcb
std
push
lahf
push
fisttps
lods
mov
andb
rclb
leave
add
inc
cmp
xlat
mov
out
dec
adc
in
jb
aad
lds
mov
mov
imul
das
insl
push
cmp
and
fbld
sahf
popf
fldcw
leave
jmp
cmp
and
adc
and
loop
xchg
push
mov
pop
dec
out
mov
inc
repz
push
popa
mov
xchg
lds
xchg
push
push
hlt
mov
mov
pop
sbbl
iret
add
xor
call
jmp
out
dec
xchg
cwtl
inc
push
sbb
into
inc
mov
mov
cmp
jo
les
push
in
sbb
insl
adc
test
ja
sbb
idivl
cmc
dec
mov
loopne
xorb
adc
inc
adc
pop
add
adc
mov
and
inc
lds
push
xchg
daa
imul
or
cmc
notl
inc
std
cmp
mov
loope
or
sbb
add
mov
lcall
mov
inc
test
insl
movsb
jl
lret
and
fildll
rcl
push
notb
mov
hlt
mov
aam
loopne
arpl
mov
icebp
push
push
ret
pop
mov
icebp
sahf
sub
mov
gs
mov
push
add
enter
sub
push
or
push
sub
mov
outsl
jne
push
stos
insl
enter
pop
push
and
and
add
fcompl
cmp
js
cs
in
movsl
stos
sbb
cmp
sbb
or
or
lds
cmpb
sti
aad
in
sti
fwait
ds
add
es
push
inc
fwait
mov
mov
sub
cmpsb
andps
rol
dec
sub
add
sbb
jle
and
xor
xchg
dec
xor
fstpt
popf
xchg
and
and
add
fcompl
and
sub
in
jecxz
cmpsb
cmp
test
in
xchg
and
push
cmc
enter
and
push
jecxz
test
es
adc
sub
dec
push
mov
negb
sub
subb
mov
mov
rcrb
loop
or
or
aam
aad
cmp
or
and
iret
jecxz
mov
push
outsb
dec
addb
cmc
xchg
lea
orb
push
mov
inc
pop
mov
push
sub
mov
mov
inc
or
popf
jmp
xchg
orb
add
dec
ja
push
iret
sub
jge
dec
stc
test
int
out
jno
add
aad
cld
lods
pop
out
xchg
fsubrl
jl
sahf
xor
push
fldenv
pop
lret
add
or
scas
xchg
test
popl
repnz
sbbb
sub
test
sti
jecxz
xor
shrb
je
mov
jnp
add
out
inc
bound
jcxz
xchg
and
add
cld
mov
ja
test
adc
test
dec
and
notl
call
cmp
in
mov
out
jmp
adc
sbb
jecxz
cld
in
insl
sbb
hlt
leave
imul
ja
test
subb
mov
aaa
mov
pop
mov
xor
movsl
push
mov
pop
es
and
lock
aaa
jle
lret
repz
notb
scas
nop
lds
cmc
in
in
add
sbb
aaa
repnz
lcall
icebp
sahf
test
pop
fldl
sbb
sbb
das
int3
or
mov
mov
push
or
in
inc
ss
cwtl
cmc
pop
mov
lods
cmp
add
jp
dec
xor
lret
std
pop
sarl
and
jae
xchg
sub
jnp
cmp
int
pop
data16
sub
pop
xchg
cld
sbb
sub
add
mov
stc
repnz
xor
inc
cmp
lock
sub
dec
fistps
sbb
popa
and
fldenv
sbb
test
out
cmpsl
mov
mov
shrl
pop
repnz
mov
mov
fisubl
pop
cld
mov
and
push
repz
cmp
push
push
jl
jmp
lret
pop
add
out
arpl
aad
stc
enter
out
fdiv
fcoms
cmpsb
mov
outsb
movl
cmp
jg
aam
push
jnp
aaa
or
clc
dec
push
sbb
add
fdiv
mov
arpl
fisubrs
cmpsl
jns
mov
cmp
adc
jl
push
in
cmp
ljmp
and
and
and
ror
adc
dec
adcl
dec
adc
loope
test
jae
mov
inc
arpl
xor
lret
imulb
lea
jl
fbld
idivl
or
or
pushf
jns
xor
in
cld
and
sub
ss
xor
add
add
out
jp
inc
les
sub
dec
outsb
or
dec
ficompl
mov
push
xchg
insb
lahf
ljmp
push
andb
jg
fistpll
push
mov
or
push
adc
mov
stc
push
enter
test
cmp
sub
mov
int3
sar
into
int
pop
mov
add
fdivrs
or
pushf
ja
daa
loope
and
sbbl
test
in
xchg
adc
push
and
nop
cmp
mov
faddl
xor
xor
xchg
lret
adc
fisttpl
cmc
dec
repnz
pop
pop
scas
cmp
mov
outsl
pop
in
inc
mov
mov
ret
add
bound
adc
fs
dec
pop
xchg
push
movsl
out
sub
add
movsl
xor
xor
fwait
out
mov
jp
sbb
cwtl
sbbl
or
out
ficoms
inc
sbb
test
nop
test
aad
sbbl
jae
mov
test
and
dec
aad
sti
push
fidivs
jl
jp
ficoml
loopne
push
push
iret
aas
and
push
in
adc
fldcw
sub
mov
sbb
pushf
xchg
rclb
jbe
lret
jp
inc
mov
pop
in
sbb
adc
shr
add
xchg
dec
jecxz
addb
cmp
lds
ljmp
dec
cmpsb
adc
adc
jae
mov
gs
out
mov
icebp
sbb
and
repz
mov
xchg
es
xchg
jle
aaa
xor
sub
mov
dec
leave
push
and
add
or
push
xor
test
stos
jb
xchg
insl
jae
bound
sub
out
or
and
mov
xchg
mov
dec
ljmp
aad
adc
jns
dec
sub
iret
sahf
add
pop
pusha
jp
shrl
xlat
adc
cwtl
dec
jmp
jecxz
in
loope
stc
dec
jae
add
xchg
addr16
in
ljmp
leave
sub
ljmp
cmp
js
in
dec
xor
jmp
iret
mov
sub
imul
dec
jecxz
fdivr
mov
aad
loopne
mov
push
jle
js
jo
lods
dec
bound
shll
mov
mov
inc
mov
mov
or
sub
and
jno
pop
out
xor
bnd
cmp
sub
pusha
sub
stos
add
loopne
and
cli
cld
jle
push
add
adc
sahf
xchg
pop
sbbl
mov
jge
pushf
lods
cmp
or
mov
jge
pop
insl
ds
add
int3
clc
or
jns
pop
enter
jo
stc
fucom
or
cmovbe
pop
adc
scas
popa
aaa
aas
fs
xchg
cwtl
cli
repnz
insl
or
mov
cmp
cmp
sub
inc
mov
int3
or
cmp
jo
xchg
shrl
sbb
mov
fldl
push
xor
repnz
and
pushf
sbb
jb
fdiv
imul
cld
ljmp
scas
out
cmp
and
fildl
popa
add
push
add
cltd
movq
pop
pop
dec
call
fmull
or
out
add
xor
arpl
sub
subl
sti
popa
rclb
sub
lret
into
and
push
std
pop
cmp
sbb
js
into
fldl
rcr
arpl
pop
pop
push
dec
sub
jnp
shrb
jle
stos
movsb
and
repz
subb
pop
sub
xrelease
call
inc
lret
loop
push
mov
fldl
mov
cmpsl
ret
scas
inc
mov
push
test
orb
lods
into
and
inc
jnp
ret
cmp
mov
ja
cwtl
rcl
add
mov
pop
imul
jmp
push
lds
mov
dec
hlt
imul
or
icebp
out
in
imul
sti
add
pop
xor
hlt
out
push
cmc
add
std
xchg
xchg
mov
scas
inc
ljmp
lret
loopne
mov
arpl
ret
xor
leave
adc
insb
mov
mov
sub
addr16
jg
jmp
jo
lcall
mov
add
inc
push
push
xor
fwait
lcall
loop
or
popa
cs
nop
xchg
in
fisttpl
sub
xchg
xchg
xor
fsubrs
mov
mov
stc
cmp
mov
mov
push
shl
xor
es
test
fisubrl
pop
fnstenv
es
inc
jmp
cmp
pop
sub
std
mov
es
cmc
je
push
push
rorl
sub
mov
and
sbb
aas
imul
mov
movsb
lock
enter
push
mov
add
in
jo
xlat
mov
loopne
sbb
hlt
insl
sbb
adc
push
mov
stc
dec
imul
faddp
mov
adc
loope
mov
mov
sbb
pushf
std
xchg
mov
in
sbb
xor
in
and
out
imul
xchg
sub
sbbb
and
lret
pop
sub
jae
mov
popf
pop
lcall
clc
push
mov
mov
or
lret
and
dec
pop
test
xor
adc
push
xor
out
pop
xor
and
mov
and
sbb
inc
mov
fnstsw
lea
lahf
lahf
fs
push
xor
mov
pop
inc
rcll
into
jae
jns
loopne
aas
dec
pop
fstpl
xor
pop
fisttps
jmp
push
into
cmp
and
jmp
xor
pop
inc
push
imul
mov
add
lret
jg
jge
mov
shlb
popa
cmpsb
aas
mov
jnp
and
push
push
push
popa
sahf
and
dec
push
cld
pop
in
push
push
xchg
mov
or
adc
js
pop
mov
in
cld
mov
lods
dec
pop
push
insl
mov
in
mov
and
rol
pop
hlt
jg
adc
mov
jbe
mov
mov
imul
mov
mov
lea
imul
test
pop
cli
hlt
push
out
xor
jbe
push
fs
add
dec
enter
call
and
jmp
and
repnz
hlt
dec
cwtl
pop
pop
xchg
mov
lock
or
jl
dec
xchg
fs
mov
push
shrl
adc
or
jg
cmp
out
push
push
pop
in
arpl
cmp
jo
shll
loop
push
cmp
subl
enter
imul
pop
movl
mov
dec
insl
jno
out
add
xor
bound
clc
push
jae
arpl
adc
add
dec
bound
int3
jp
sub
shlb
out
imul
mov
ss
cli
gs
inc
or
pop
out
divl
xor
sub
mov
jae
les
xlat
inc
sbb
jno
mov
mov
or
ljmp
repz
test
push
add
inc
adc
into
inc
xor
pop
fisttpll
in
xor
fcmovnbe
stc
insb
loopne
push
add
mov
lahf
mov
repz
ret
loop
in
fdiv
js
or
in
in
mov
test
mov
dec
in
outsb
pushf
and
sub
sbb
or
push
jge
jmp
add
xchg
mov
outsl
pop
dec
daa
sub
fwait
in
pop
and
and
push
xchg
in
leave
xor
sar
nop
iret
pop
or
sti
je
movsl
jl
je
and
ss
add
test
jecxz
push
mov
mov
sub
jl
fstpl
sub
jle
int3
mov
mov
pop
jge
lahf
push
movsl
scas
out
shll
lret
sbb
mull
pop
push
loop
fmuls
adc
sbb
sahf
mov
aad
or
mov
push
and
jmp
inc
imul
or
xchg
movups
scas
negb
out
sub
mov
jle
stos
and
push
push
xor
mov
pop
add
cltd
loope
aaa
and
cwtl
and
xchg
dec
or
fsubl
dec
inc
hlt
lds
xchg
popa
push
cld
cmp
cmpsb
push
dec
cld
pop
outsb
nop
and
jne
mov
pushf
lret
adc
xor
add
mov
inc
icebp
cmp
mov
mov
inc
adcb
outsb
pop
ljmp
jmp
adc
jmp
jl
xor
add
jmp
pop
shrd
inc
mov
lcall
repnz
in
mov
add
cmc
pop
add
jns
addr16
push
jecxz
pop
xchg
jle
std
push
pushf
sbb
xchg
sub
push
test
push
in
add
repnz
adc
or
cmpsl
adc
inc
imul
lea
pop
loope
lock
arpl
sar
mov
call
adc
mov
int3
je
cmpsl
mov
mov
imul
pop
mov
cltd
push
ret
sbb
testl
dec
fsubr
add
jecxz
and
sub
push
pop
je
pop
mov
dec
into
pop
imul
add
and
xlat
push
leave
outsb
sbb
or
movsl
xchg
pushf
add
rcrb
orl
inc
fsts
jle
mov
cmp
int3
jns
mov
mov
adc
sub
sbb
push
cmpsl
les
inc
sbb
mov
fsubs
xchg
andl
jne
mov
jmp
mov
pop
adc
cmp
dec
stc
sub
mov
sbb
pop
push
sbb
lahf
inc
jecxz
pop
out
ret
pop
adc
sbb
dec
add
test
scas
sahf
push
and
pop
je
xchg
mov
arpl
movsb
rcl
stc
gs
add
outsb
hlt
pop
push
imul
mov
sarb
popf
sub
dec
add
aad
call
pop
rcll
aaa
pop
daa
inc
push
out
aas
das
push
jne
sub
inc
push
out
daa
out
sub
push
js
adc
pop
adc
mov
cli
sub
es
popa
in
insb
movsb
cld
pushf
inc
mov
cli
retw
sar
dec
pop
int3
jns
gs
adc
insl
cmpb
inc
jmp
adc
mov
in
push
xor
imul
and
int3
xor
nop
push
sub
out
push
adc
lods
cmc
cltd
jns
xor
or
rorb
ljmp
out
inc
xchg
lock
cmp
inc
push
adc
dec
or
out
add
sbb
shl
mov
and
icebp
push
or
fidivs
sti
test
in
data16
jg
movsb
sbb
out
daa
pop
test
adc
call
mov
or
aaa
sbb
sbb
in
test
cmp
cmp
clc
clc
pop
cli
jg
loope
scas
xorl
imul
push
bound
popf
lret
adcb
sbb
adc
arpl
clc
das
sbb
cmp
enter
dec
fiadds
loope
stc
nop
jns
sub
add
popf
cmc
fnsave
ficompl
into
dec
lods
pop
mov
pop
add
das
in
pop
out
into
sti
imul
mov
gs
shll
stos
adc
mov
scas
repz
pop
inc
dec
mov
aad
popf
in
cli
mov
cmp
push
or
gs
mov
and
jnp
adc
inc
sbb
jae
popa
shrl
imulb
in
dec
out
jno
push
inc
add
mov
call
pop
jo
subl
sahf
xchg
ret
adc
pop
subl
jae
jo
lock
mov
movsl
int3
je
sti
js
pop
jb
movsl
fildl
sub
je
rcrl
outsl
mov
lcall
cmp
inc
aad
aad
aas
les
dec
into
idivb
flds
andl
cmpb
es
test
int
fcoms
push
addr16
shl
js
rclb
inc
cmc
push
or
add
cmp
cli
sub
ljmp
mov
lahf
mov
pcmpeqw
xchg
add
pop
decb
arpl
xchg
add
jp
mov
les
and
outsl
pop
outsb
scas
daa
jecxz
xchg
and
inc
push
aaa
imul
lret
repnz
scas
pop
jmp
int
sbb
std
push
push
in
outsl
out
dec
mov
pop
out
mov
idivb
xchg
xchg
cmc
jne
arpl
icebp
pop
adc
or
push
call
cmp
mov
faddl
lret
push
cld
jo
or
mov
or
jno
dec
incl
notl
xor
jmp
test
pop
shlb
out
pop
popf
pop
rol
movsl
in
jmp
or
nop
xchg
push
jmp
xchg
jne
popf
add
xchg
mov
in
pop
mov
mov
cmpsl
jp
leave
out
shrl
out
add
xor
test
imul
ljmp
xchg
cmc
push
mov
jbe
out
xor
roll
arpl
in
xor
adc
adc
inc
mov
mov
mov
ss
mov
dec
and
adc
inc
pop
push
test
bound
xchg
add
in
decb
lods
dec
fcomip
out
lock
push
sbb
push
add
fmull
stc
cmp
shl
cmp
andl
mov
xchg
repnz
pop
mov
movsl
or
cmpsb
mov
mov
lock
idivb
xor
sti
arpl
push
aad
neg
rcll
add
adc
outsb
pop
mov
mov
push
dec
stc
mov
mov
andl
into
add
xor
stc
add
push
cmp
sbb
jmp
xchg
pop
and
out
pop
adc
fsubl
icebp
xlat
repz
enter
cmp
pop
rcrl
imul
adc
out
test
mov
fcom
std
imul
dec
and
push
xchg
incl
xchg
jle
xchg
aad
or
sarl
leave
push
fadd
nop
pop
fdivrl
imul
inc
outsb
pop
popf
data16
adc
xchg
add
movsl
push
add
sbb
in
jne
arpl
add
in
or
and
arpl
push
push
dec
lcall
fldl
add
ret
sub
adc
aad
test
and
stos
ja
mov
jle
lock
mov
bnd
xchg
fs
subb
bound
fstps
call
mov
inc
imul
test
out
xor
mov
xchg
ljmp
xor
lret
outsb
add
fcoml
bound
dec
jb
rorl
mov
and
aas
loop
std
or
jmp
xor
sbb
cmp
fmull
push
inc
inc
mov
rcrl
inc
out
dec
mov
mov
and
roll
jl
lret
inc
dec
jecxz
mov
adc
in
sti
xchg
inc
leave
js
call
in
or
push
test
enter
sbb
mov
insl
adc
sub
bound
fdivr
idivb
adc
aaa
or
sub
mov
or
xor
icebp
sub
push
inc
lods
out
mov
dec
in
mov
scas
fisubs
lret
inc
je
imul
mov
stc
pop
fdivl
adc
push
ljmp
push
mov
stc
push
sbb
fmull
pop
cltd
and
push
mov
test
dec
mov
aaa
inc
fadds
push
dec
testl
dec
jne
xchg
or
ret
aad
inc
push
xchg
add
push
ret
jl
lock
or
clc
mov
cmp
das
cwtl
shl
xor
pop
mov
repnz
gs
adc
andl
xchg
aad
testl
daa
clc
int
fcom
add
into
test
out
hlt
xchg
sbb
xchg
into
stc
movsb
or
push
pop
push
jg
push
dec
sbb
hlt
in
and
aaa
xorb
fsubrp
cmp
lahf
fs
imul
mov
fildll
push
lahf
cmp
insb
sti
test
out
sub
aaa
mov
dec
fdivrp
push
test
out
cmp
sbb
aas
pop
jp
mov
or
sbb
stc
adc
out
test
aam
add
push
pop
xchg
test
iret
out
jbe
sub
shrl
test
popa
out
aaa
dec
cwtl
pop
push
dec
insb
sub
fs
std
shll
insb
xor
xor
cmp
clc
adc
gs
add
adc
fdivl
aas
add
fcmovnb
mov
or
loope
push
lods
das
popf
dec
jnp
gs
pop
xor
mov
mov
fwait
stc
mov
es
mov
xor
in
outsl
push
orl
jge
in
icebp
jl
and
pop
jnp
dec
push
in
daa
dec
lea
lea
ja
out
dec
mov
xchg
clc
sbb
xor
push
adc
fisttps
pop
arpl
mov
mov
lods
call
fbstp
repnz
add
xchg
in
in
sbb
movsl
je
cmp
clc
xor
icebp
sub
add
mov
shrl
and
leave
dec
in
mov
js
and
dec
add
das
insb
test
test
lret
lret
jne
lea
pop
lods
test
sub
xor
hlt
loopne
and
movsb
add
xchg
add
loope
imul
jmp
sub
jno
xor
pop
imul
addr16
jne
leave
fistpll
sti
dec
mov
pushf
repz
or
imul
hlt
das
inc
xor
lret
lods
fisttps
into
cmp
mov
add
mov
in
les
mov
in
push
pop
mov
in
mov
daa
xchg
push
sbb
jge
push
mov
adc
jne
mov
test
inc
inc
in
add
lock
test
ror
and
ds
loop
jo
cvtps2pi
cwtl
lret
pop
dec
popa
fidivrl
xchg
xchg
in
outsl
mov
les
xchg
lods
arpl
aas
push
mov
pop
xor
push
lret
push
cmp
dec
mov
das
movsb
out
xor
sub
pop
ret
sbb
addr16
dec
ret
and
push
jmp
loope
lock
push
int3
scas
arpl
cmp
out
pop
push
and
addr16
push
mov
jecxz
jbe
ljmp
je
stc
andl
push
pop
repz
push
cwtl
inc
cli
cmp
out
into
leave
std
daa
pop
xor
xchg
outsb
or
push
lret
pop
xor
or
cmc
mov
cmpsl
or
mov
rcrl
adc
cmc
daa
mov
inc
adc
mov
int3
repz
int
xor
out
fistps
sub
inc
xchg
or
imul
incl
or
lock
mov
loopne
mov
inc
adc
loop
inc
roll
insl
pop
inc
or
xchg
aad
fcompl
lret
repz
enter
pop
push
sub
mov
pop
cmpsl
hlt
js
pop
out
pop
or
mov
pusha
jno
pop
repz
adc
sbb
fdivs
ss
mov
sub
add
mov
in
movups
inc
adc
sti
fs
or
sbb
sub
bound
shl
dec
inc
mov
add
dec
mov
xor
cmp
sbb
pop
les
sti
pop
das
in
inc
adc
add
js
xchg
imul
in
jns
fiadds
bound
pop
or
fdivr
mov
fbld
adc
push
sbb
lods
jbe
mov
std
xchg
dec
insb
shr
xor
arpl
jmp
lds
aam
jg
fst
cmpsb
cmp
lds
add
mov
push
adcb
sub
sbb
rolb
adc
dec
div
mov
negl
sbb
rcll
dec
xchg
fdiv
call
cs
push
movsb
inc
nop
lods
add
push
popf
dec
pop
dec
sub
jnp
lret
cli
sub
dec
in
mov
jo
leave
hlt
out
mov
ljmp
jecxz
aam
or
fs
fsubrs
mov
push
bound
fnstenv
aam
in
ret
push
add
mov
nop
pop
mov
pop
shr
sub
xchg
pop
dec
rol
jb
sahf
inc
push
mov
or
lock
nop
cmc
or
lea
pop
mov
push
shr
xchg
adc
jecxz
out
stos
pop
arpl
add
lds
aam
mov
arpl
repnz
xorl
and
sbb
nopl
fadds
shrb
xchg
mov
sub
nop
push
inc
sbb
notb
dec
push
adc
ss
shll
push
dec
out
popf
push
or
lds
xchg
cli
push
ffreep
inc
fdiv
daa
inc
cmp
mov
pop
out
adc
xchg
push
fbld
add
mov
jb
mov
push
jle
cs
inc
int
sub
and
push
jo
imul
cltd
mov
sbb
push
inc
add
repz
mul
xchg
bound
shlb
or
jle
in
lcall
jecxz
data16
shlb
xchg
out
push
mov
outsb
mov
push
xor
add
push
or
jne
rcrb
mov
add
inc
xor
getsec
jecxz
ficoml
mov
inc
sbb
lock
insl
insl
dec
or
adc
imul
pop
sbb
xor
xor
popa
loop
mov
rcll
lods
sub
sahf
imul
lods
int3
add
lds
aad
test
mov
mov
jg
loopne
dec
mov
aas
fcmove
and
push
push
cld
stc
les
insl
mov
dec
adc
push
icebp
mov
or
xchg
addr16
cld
sub
push
and
xchg
dec
push
mov
jp
fcompl
adc
or
mov
xor
out
add
add
or
push
aad
mov
add
aaa
mov
and
mov
xchg
xor
mov
rorl
sub
and
jne
sbb
pop
cmc
out
cmpsl
jne
cmc
inc
aad
fisttpll
leave
push
mov
pop
gs
lds
pop
ja
lock
jb,pn
fdivl
pushf
xor
cmp
scas
push
pushf
call
pop
iret
data16
pop
jmp
aad
jecxz
int
out
stc
dec
je
test
mov
add
pop
hlt
lea
int
insl
fstps
ja
nop
pop
sbb
out
add
out
ljmp
lods
cmpsb
inc
cs
inc
insl
pcmpeqw
jno
gs
add
sub
sbb
bound
pushf
lods
cltd
movsb
in
icebp
push
cwtl
out
or
test
loop
or
icebp
repnz
outsb
add
ret
inc
outsb
ficoms
inc
push
pop
out
and
push
fwait
addr16
sti
push
jmp
or
rolb
pop
insl
or
add
adc
stc
in
push
and
jmp
das
xor
cltd
mov
ud1
andb
mov
jmp
adc
in
jmp
xchg
pusha
inc
sub
lods
push
out
scas
push
les
roll
scas
in
add
daa
dec
je
or
dec
jmp
dec
push
mov
test
dec
push
add
add
into
sub
adc
popa
sbb
add
add
fwait
popa
or
push
clc
out
sub
dec
mov
adc
xor
icebp
sbb
aad
imull
cli
sub
popf
fs
scas
out
hlt
pop
add
out
adc
push
test
push
mov
ret
lods
dec
pop
daa
paddw
int
mov
dec
testb
test
leave
mov
jmp
mov
cli
xor
repz
fs
icebp
orl
sbb
enter
mov
mov
jecxz
xchg
in
ljmp
decl
add
loop
xor
add
push
ljmp
mov
outsl
fs
shlw
add
call
adc
aad
dec
mov
push
xchg
ret
test
mov
movsl
fiaddl
pop
loop
push
test
shrd
pusha
leave
clc
push
and
ljmp
or
lock
stc
adc
out
out
sbb
dec
and
xchg
in
xor
psllw
jmp
lock
cmp
out
mov
jg
daa
inc
pop
inc
hlt
pushf
sub
leave
insb
shr
or
or
rclb
call
mov
cmp
xlat
sti
add
jb
lret
dec
hlt
cld
out
xor
push
movlps
test
add
and
fnstenv
mov
inc
dec
and
std
subl
sbb
cmpsb
dec
pop
push
data16
jge
jno
imul
xchg
sbb
shlb
dec
sbb
mov
adcb
xchg
jecxz
xor
or
cmpl
flds
inc
mov
cs
lock
pop
jb
in
xlat
int
imul
rorb
dec
out
adc
dec
adc
cmp
inc
sbb
ret
dec
lea
push
or
mov
cld
pop
lcall
lret
xor
loop
loopne
push
jb
dec
ljmp
gs
call
movsb
cmpsb
lret
stc
sbb
out
dec
ds
pushf
pop
arpl
repz
jo
dec
xchg
addr16
rorl
or
movsb
push
orl
popa
mov
mov
inc
icebp
xor
dec
jmp
leave
dec
and
push
iret
in
pop
and
in
dec
outsb
mov
cltd
dec
call
lock
adc
jnp
mov
and
and
push
stc
aas
mov
push
jecxz
push
ret
xchg
stos
lcall
and
dec
fimuls
and
imul
push
fsubl
dec
and
shll
int
dec
repz
testl
push
mov
outsb
in
rorl
push
ja
ss
fdivl
dec
and
std
jno
jl
lods
incl
or
push
dec
push
mov
in
push
imul
in
xchg
jg
subb
jmp
repnz
ret
out
dec
aaa
popa
push
gs
xor
mov
in
in
jecxz
pop
or
sarl
pop
xchg
rcr
shlb
xchg
sysenter
sbb
mov
mov
ret
mov
scas
sbb
out
cli
lret
ljmp
aam
dec
mov
pop
inc
pop
lock
dec
inc
or
stc
repz
daa
sbb
adc
or
xchg
out
push
and
fmull
push
mov
in
gs
mov
ret
add
add
cmp
pop
pop
cli
sbb
jmp
repz
lods
lods
mulps
lods
insb
pop
loopne
pushl
lcall
mov
repnz
int
dec
xchg
cmpsb
dec
or
je
push
bound
and
push
cltd
mov
jae
mov
bound
pop
xchg
test
or
lret
lahf
shlb
push
jmp
out
jmp
jnp
mov
outsb
fsubs
push
scas
and
test
pop
lock
mov
fdivs
popf
fsubrs
addr16
cmpsl
sbb
xchg
bound
or
data16
xchg
aaa
adc
fwait
push
dec
in
mov
and
bound
and
cmp
and
jne
mov
dec
jb
or
outsb
or
test
and
decb
loopne
inc
movsl
adc
aad
add
lods
lcall
dec
data16
mov
cmp
add
dec
mov
fpatan
dec
cli
dec
jb
out
mov
aaa
cmp
aad
fcoml
xor
adc
cltd
int
in
push
dec
or
into
sub
pop
or
arpl
test
jo
xor
and
pushf
lret
cmp
push
jg
imul
fistpll
imul
pop
sub
or
sahf
dec
scas
call
rcr
xor
jbe
mov
in
movsb
leave
in
fidivrs
push
fsubs
sahf
pusha
shrb
mov
lea
out
inc
insb
sbb
jno
xor
inc
popa
pop
jbe
jge
call
popa
push
int3
enter
push
fdivrs
inc
jg
pop
aam
and
and
bnd
adc
jmp
push
aad
pop
add
in
pop
test
hlt
jge
sbb
inc
push
cmc
push
and
je
pop
ss
mov
and
add
sarb
xor
bound
daa
loope
push
test
add
inc
xchg
mov
mov
int
adc
gs
rolb
lret
xlat
movsl
cmp
mov
pop
sub
jno
mov
pushf
imul
pop
inc
stc
jecxz
mov
outsb
push
mov
xchg
sbb
mov
gs
mov
jns
sub
andl
sub
push
add
mov
dec
cs
jmp
iret
in
into
xchg
xchg
sub
dec
lock
nop
and
sbb
cltd
pushf
lret
xchg
mov
fwait
inc
mov
shrl
xor
pop
mov
mov
mov
fstl
repz
lock
and
into
nop
push
outsb
ret
xchg
lods
out
roll
shl
cmp
addr16
and
outsl
and
sbb
pushf
pop
repnz
push
in
ret
jmp
inc
sub
mov
push
mov
out
jb
scas
push
dec
xor
lcall
test
orb
daa
repnz
gs
cmp
icebp
push
sub
loop
lea
gs
cmc
rcrl
add
hlt
xchg
jns
and
lret
or
inc
fcmovnbe
sbb
mov
cmp
bound
iret
in
push
sub
adc
leave
pop
imul
es
xor
mov
mov
sbb
mov
jnp
xor
jnp
or
jbe
push
jbe
push
dec
push
inc
or
fdivrs
mov
sub
pop
mov
mov
sub
jns
mov
mov
std
fnsave
sub
and
xlat
dec
arpl
cmp
mov
cmp
or
push
mov
shr
xchg
packssdw
xor
daa
add
xor
inc
mov
xor
jmp
pop
jne
popf
adc
leave
mov
push
jle
xchg
std
bound
insb
xlat
in
inc
inc
fimuls
shrl
add
data16
pop
mov
rcl
inc
push
addl
es
mov
std
push
xor
push
in
scas
aam
pushfw
sub
inc
rol
jecxz
cli
pop
push
stc
les
aaa
or
ljmp
cli
hlt
xor
lcall
and
jge
xchg
jne
jb
jle
fildl
cmp
mov
push
mov
cs
add
dec
cmp
push
xlat
cmp
loop
fbld
shrl
push
dec
jge
stos
sub
sbb
or
or
rclb
in
mov
out
cltd
negb
out
pop
mov
cmpsb
imul
gs
mov
repnz
out
aam
repz
and
out
icebp
lahf
adcl
xchg
data16
mov
pop
add
arpl
cmp
jmp
jge
hlt
inc
inc
repz
ffree
sbbb
push
daa
loop
and
cmp
sbb
add
xchg
daa
xor
loop
leave
mov
inc
or
add
sar
pushf
insl
jmp
call
ret
add
lods
es
mov
js
mov
rcll
std
xor
inc
push
or
hlt
xchg
add
push
inc
add
fdivr
imul
ja
icebp
mov
cmovle
sub
jle
ds
imul
stc
mov
out
jecxz
data16
mov
mov
fcmovnbe
outsb
mov
fwait
add
cmp
xor
or
fsubrp
sbb
aad
mov
test
push
jecxz
sahf
out
and
add
aam
sub
mov
push
fldl
rolb
adc
out
inc
loope
adc
xor
stos
pop
mov
lcall
test
sub
xor
sti
sub
mov
cmpsb
int
out
add
aad
xchg
stos
sub
sub
xor
rcll
fs
movsb
inc
gs
sub
mov
enter
int3
xchg
pop
pop
lret
ja
rorb
pop
dec
push
cmpl
dec
pop
jnp
into
cmp
cmp
mov
aam
mov
das
outsl
jle
das
push
fisubl
mov
push
and
jge
fdivr
or
dec
mov
and
div
daa
sub
divb
jbe
dec
fdivs
test
sub
dec
sub
gs
arpl
mov
dec
mov
xor
pop
pusha
shll
xchg
enter
xchg
mov
stc
xchg
ret
cwtl
jo
xchg
adc
pop
mov
pop
push
daa
sbb
dec
adc
xor
inc
add
cmp
mov
xchg
outsl
stc
outsb
or
pop
xchg
pop
mov
movsb
mov
pop
out
mov
add
nop
cwtl
shlb
dec
jmp
xor
sub
sub
push
xor
xchg
lret
cmp
in
out
test
out
and
repnz
mov
hlt
jl
mov
in
xor
push
sub
add
and
add
data16
and
imul
sbb
lret
cmp
inc
lock
addr16
roll
arpl
jle
dec
dec
in
dec
mov
cmp
cld
and
mov
add
andb
push
or
clc
gs
jl
push
mov
xor
iret
shl
leave
cmpsb
xor
cmpps
push
das
imul
cmp
cmpsl
repnz
xor
jmp
out
stos
adcb
loopne
push
shl
cmp
xor
in
decb
xor
ret
sub
out
jecxz
xor
lcall
push
jle
mov
pop
or
stc
jg
fisttpl
test
sbb
pop
popa
out
shrl
jle
and
add
lret
mov
mov
sub
sub
and
es
push
scas
jmp
fbld
ljmp
fwait
or
leave
stos
notb
inc
outsb
leave
mov
rcl
push
mov
and
loop
sahf
fisubrs
sbb
pop
insl
push
lods
add
fcomps
sahf
mov
out
cmp
fyl2x
ret
ficoms
cmp
outsb
cmp
in
jle
and
cmp
test
xchg
in
xchg
xchg
dec
rclb
mov
mov
mov
jb
int
testl
xlat
call
adc
loope
in
popf
dec
add
imul
push
pop
sub
pop
push
sub
lock
mov
in
aas
mov
sbb
cwtl
pop
pop
daa
inc
cmp
mov
in
insb
lea
push
mov
lret
addl
clc
mov
test
or
aaa
pop
push
gs
in
mov
fnstsw
cmp
hlt
xchg
xchg
fisubrs
and
xor
aam
icebp
inc
cmp
repnz
xchg
gs
lahf
mov
sub
mulb
aam
cld
in
aam
pop
pop
and
sti
inc
mov
das
jp
push
push
addr16
lods
push
cmpsb
jne
arpl
inc
pop
pop
mov
notl
mov
test
mov
les
or
sub
jle
cmc
repnz
lds
fs
sbb
pop
rol
and
pop
cmc
mov
loope
stc
sbb
adc
xor
test
in
and
push
mov
dec
pop
test
je
xchg
mov
lods
shll
xchg
ljmp
mull
sbb
aam
cmc
jecxz
in
pushf
out
repnz
leave
ret
pop
stc
xchg
and
add
mov
popf
sti
sbb
and
sub
jmp
sbb
push
mov
xor
call
xchg
repnz
or
out
sbb
pop
mov
xchg
mov
gs
mov
sbb
aas
xchg
inc
scas
push
jmp
stos
test
not
pop
popa
fldt
lds
icebp
adc
shr
hlt
sub
inc
xchg
and
pop
stos
inc
jno
loop
mov
cmp
xor
xor
fsincos
idivb
cwtl
int3
pop
pop
ds
repz
test
cmp
add
pop
int3
adc
les
mov
lahf
xchg
pop
lods
xchg
cmp
mov
aam
fstpl
or
sarb
xchg
xchg
cmp
dec
xchg
xchg
int
test
in
in
pop
addb
out
push
out
add
movsl
jb
repnz
jne
fldt
lret
fs
cmp
test
inc
add
cli
mov
xchg
push
pop
add
sub
stos
out
flds
mov
push
cli
out
inc
dec
push
lea
outsb
fistps
xchg
stc
test
cmpsb
dec
out
push
sahf
push
xor
ret
popa
data16
cmpl
in
das
push
xchg
mov
test
jae
pop
sub
mov
jae
outsb
ja,pn
pop
rcll
xchg
add
and
mov
sub
addr16
lds
out
in
fists
sub
and
lea
loopne
dec
mov
cmp
or
pushf
add
hlt
or
cmpsl
addr16
push
mov
repnz
xor
out
rcr
xor
lahf
cmp
lret
push
mov
insl
lcall
mov
sub
add
sub
lds
loop
in
cmp
sub
xor
jmp
push
add
jmp
and
pusha
lret
cli
push
sbb
out
pusha
movb
jns
jecxz
dec
mov
gs
imul
inc
jnp
adc
inc
xchg
sysexit
decb
ds
push
inc
data16
add
ss
addr16
loope
popa
lret
dec
pop
sbb
sub
push
pusha
ss
into
lock
fimull
or
push
loop
rcl
push
pop
mov
xchg
rolb
imul
ja
adc
or
jae
jae
xchg
mov
fwait
aad
out
repz
sub
lcall
and
push
jae
cli
popa
mov
dec
loope
adc
mov
sub
ja
cmp
dec
adc
sub
add
dec
ficoms
jmp
repnz
adc
inc
inc
xchg
movsb
dec
push
lock
pop
jne
mov
xor
sti
pop
outsb
sbb
jno
sub
push
lock
out
aas
cmpsb
pop
fwait
inc
or
repnz
fmul
inc
adc
adc
neg
shl
push
aam
pop
in
je
nop
xchg
mov
test
mov
xchg
loope
inc
xchg
clc
dec
jo
push
pop
cld
rclb
and
movsl
push
jl
push
xor
jne
xlat
jmp
mov
push
lods
cmp
aad
mov
add
cmpsl
jmp
iret
push
adc
dec
lret
push
movsb
negb
xor
add
sub
push
arpl
xchg
pop
xchg
ficoml
sub
xor
adc
pusha
out
iret
cmpsl
fistps
sub
cmp
mov
jns
gs
testb
add
sbb
lret
sub
aaa
prefetch
or
loop
and
and
mov
movsb
arpl
push
lds
fstl
sub
in
insb
inc
xchg
push
add
jp
je
cltd
ss
jns
mulb
cli
jne
loopne
xchg
sbb
imul
or
pushf
xchg
mov
sti
out
pop
js
pop
call
push
lea
je
out
jmp
je
sbb
mov
pop
adc
or
adc
ljmpw
subb
subb
aaa
rorl
jecxz
xor
xor
xlat
xor
push
test
clc
push
sahf
mov
ljmp
inc
mov
xor
movsl
je
cwtl
or
sbb
clc
dec
testb
cs
add
mov
push
sub
testb
cli
lret
sbb
scas
inc
or
xchg
sub
jb
fcomps
cmp
loopne
dec
jne
test
inc
inc
cmp
cmp
loopne
jp
add
pusha
std
insl
push
clc
pop
inc
dec
push
add
aad
mov
cli
movl
test
pop
push
jns
stos
xlat
addl
inc
or
lock
stos
push
pushf
fmul
add
in
xor
sub
or
add
and
fsts
inc
fs
add
mov
pop
fstpt
adc
pop
mov
or
adc
sbb
mov
pop
lock
sub
jle
pop
push
stc
pushf
ljmp
ret
xchg
clc
dec
add
xchg
and
roll
add
xorb
testb
push
jecxz
add
and
sbb
cltd
js
mov
mov
inc
jns
push
sub
or
sbbl
pushf
aam
cltd
js
fs
and
inc
shrb
jns
loope
add
push
dec
test
insb
dec
pop
push
jmp
or
jp
sbb
xchg
mov
hlt
jbe
out
jno
in
mov
xorb
push
fwait
dec
les
lea
jns
roll
adc
int3
fidivrl
imul
sbb
sbb
jmp
or
test
mov
and
fldcw
popf
lods
and
sbb
enter
lods
repnz
stos
aad
xor
adc
jecxz
push
ja
scas
mov
pop
stc
sbb
sub
inc
pop
adc
cmp
std
clc
in
stos
xchg
cmp
push
cmp
loope
fldl
hlt
addl
pushf
xchg
faddl
cwtl
popf
or
sub
jno
sarl
mov
add
pop
or
pop
add
pusha
mov
out
adc
and
daa
jae
out
leave
xor
jecxz
xchg
inc
mov
sbb
cmp
push
xchg
xchg
scas
repnz
push
and
std
or
out
xlat
add
add
push
add
rorb
into
ljmp
pop
and
negb
xchg
lods
dec
iret
and
int
sbb
mov
or
or
icebp
cs
lock
xor
xlat
arpl
fs
fldenv
aam
popf
jno
jecxz
in
arpl
pop
cmp
pop
in
cmp
test
jb
clc
int
js
xchg
pushf
leave
aas
dec
inc
dec
jl
push
pop
repnz
jge
loope
ljmp
test
imul
cli
ret
mov
imul
stos
mov
adc
adc
je
lock
mov
xchg
inc
outsl
dec
divb
push
jnp
aam
push
je
fldl
addr16
mov
add
in
out
mulb
ljmp
hlt
adc
cvtps2pi
inc
fadds
mov
loop
cmpb
add
xchg
xlat
sub
and
arpl
or
jnp
inc
mov
mov
loope
test
xor
aam
dec
dec
xor
mov
mov
lock
nop
fisubrl
call
mov
add
or
enter
inc
pop
mov
insb
or
and
fmulp
push
shlb
loop
leave
mov
lds
jae
int3
sub
dec
out
or
dec
hlt
repnz
cmpsb
sti
jg
cmp
jg
arpl
rcll
push
out
lret
jae
cmp
movsb
cs
iret
jl
add
or
rorb
jae
out
int
scas
push
sbb
pusha
test
cs
mov
test
sub
jp
adc
js
ret
jnp
adc
and
les
and
xchg
addb
mov
sbb
inc
out
push
mov
push
jl
mov
aam
subl
ljmp
xor
pop
mov
test
lahf
and
icebp
les
sub
popf
aaa
aad
add
sti
jmp
les
loop
xor
movsl
call
mov
stos
push
push
sbb
adc
out
ja
mov
sub
jl
and
dec
pop
mov
cmc
imul
sub
call
xor
fstpl
add
aam
or
lea
sbb
shll
sbb
xchg
xchg
jb
in
jmp
cld
jmp
or
out
jns
add
sti
mov
lods
dec
xchg
pop
adc
pushl
push
les
mov
mov
sbb
adc
ret
jb
dec
pop
xor
xor
rcll
sbb
dec
fists
subb
xchg
mov
sub
lret
add
iret
adc
rolb
push
loop
jns
aad
pusha
out
popf
pusha
ja
in
mov
test
pop
lret
sub
or
xchg
out
sbb
pop
in
bound
icebp
inc
pop
cs
stos
or
popw
jnp
inc
decb
jmp
xchg
shr
in
enter
das
jne
int
or
fdivs
shll
insb
or
jecxz
test
mov
shrl
and
pop
dec
mov
and
rcr
inc
xlat
adc
in
or
jns
or
lcall
dec
fidivs
mov
jp
rclb
aam
test
pop
pop
pop
popf
fsts
ljmp
data16
or
sbb
ret
sub
mov
or
ficomps
pushl
jmp
push
loop
push
dec
or
mov
cmp
addr16
dec
cmpsb
jge
icebp
xchg
rcl
jmp
ljmp
pop
cmpsl
adc
xor
xor
fsubl
popf
push
pop
loope
and
xchg
sarl
cmp
icebp
inc
pop
lods
jmp
out
mov
sbb
ja
cmp
outsl
mov
loope
inc
xor
mov
adc
mov
pop
out
subl
out
dec
clc
loop
cld
std
jge
push
xor
out
mov
add
aaa
or
test
fcomps
pop
in
enter
es
movsl
fdivr
std
stos
push
into
sbb
sbb
neg
cltd
add
mov
add
pop
or
mov
into
cs
mov
and
push
fnsave
inc
and
pop
ret
xor
std
cmpb
into
dec
push
call
mov
add
leave
sub
out
in
and
lods
fiaddl
jne
sahf
jno
or
mov
and
xlat
and
cmp
xchg
cmc
mov
sub
mov
std
jecxz
push
push
in
mov
leave
push
push
pop
int3
mov
lahf
bound
jmp
cmp
in
rorb
imul
into
inc
rorl
mov
out
push
aas
or
and
adc
jae
jne
icebp
mov
push
shll
mov
ss
xchg
jo
sub
lret
popa
stc
in
imul
xor
out
ret
pop
insb
fcmovu
adc
pop
mov
pop
int3
arpl
dec
lods
push
push
sub
pop
xor
push
mov
orb
sbbb
mov
or
add
lea
inc
stos
pop
in
mov
sub
out
adc
insb
pop
sub
cs
pop
add
fildll
movsl
mov
and
sbb
jg
jb
jno
mov
xchg
cltd
jne
fstpl
xchg
adc
fsubs
jecxz
incl
xor
imul
lret
movsb
sub
aad
enter
inc
dec
loope
jl
push
push
inc
ljmp
mov
sub
imul
fs
and
add
or
and
add
add
jmp
and
into
popa
fldenv
fs
aam
les
add
xor
and
xor
fldcw
add
dec
mov
insl
push
aam
mov
jno
push
int
pop
cmpsl
ja
lock
jg
out
out
sub
hlt
or
jecxz
pop
bound
in
jb
mov
loop
gs
jp
inc
mov
aad
ds
aam
aam
push
mov
mov
adc
add
dec
add
movl
xlat
std
pop
fstps
dec
lds
xorb
aas
fmull
cmp
or
je
cmp
xchg
sti
jecxz
scas
out
xor
stos
mov
fcomps
mov
or
pop
lret
inc
pop
xchg
push
ljmp
int3
pop
cld
pop
sub
sbb
pushf
fnstcw
push
je
jecxz
dec
xor
roll
jb
mov
and
and
mov
pop
cmp
mov
outsl
mov
pushf
mov
push
cmp
aad
mov
mov
shl
in
mov
negl
in
sti
movl
add
push
mov
sbb
sub
insl
fldt
adc
arpl
sarl
and
pop
fcomip
mov
sti
mov
repnz
imul
add
sbb
cmc
adc
jb
cwtl
fs
xor
icebp
sti
xor
in
int3
pop
jmp
and
pop
xor
jb
out
leave
mov
movsl
mov
push
push
fisubl
jne
stos
xchg
dec
pushf
imul
lock
jne
mov
in
add
push
arpl
adc
add
out
insl
pop
rclb
add
lcall
mov
and
sub
lret
mov
cmp
and
lahf
lret
or
lahf
pop
mov
std
lds
sbb
arpl
dec
add
or
and
push
jmp
aaa
sub
mov
popa
xchg
aam
arpl
into
and
sbb
lods
lods
cmp
in
in
fs
jo
loop
pop
jmp
jecxz
xor
jb
dec
pop
cmp
cli
shl
je
ficompl
fnstsw
mov
xchg
testb
jae
pop
push
lds
jg
andb
scas
sahf
mov
dec
push
sti
ss
out
stc
int3
xchg
dec
fists
mov
movsl
mov
adc
add
jmp
out
mov
cltd
xor
test
movsl
jns
imul
cld
aas
out
in
hlt
pop
pop
inc
fadds
sbb
inc
pop
out
sub
mov
cmp
push
dec
out
mov
pushf
jge
mov
lods
mov
pop
jg
mov
xchg
inc
dec
leave
icebp
and
pop
push
or
ljmp
sahf
ljmp
imull
mov
xor
jo
adc
push
mov
xchg
lcall
test
aaa
gs
push
pusha
mov
push
and
mov
loope
mov
xor
sub
cwtl
enter
cs
out
xor
nop
outsb
adc
xor
outsb
icebp
dec
and
sahf
jle
ret
push
inc
push
in
call
cld
aas
test
sub
adc
mov
sbb
andb
lock
aam
mov
xchg
jbe
mov
pusha
pop
xchg
in
out
push
mov
popa
xchg
push
add
in
aaa
outsl
mov
jnp
fmulp
ss
repz
pushf
xor
inc
rcr
daa
or
ret
mov
movsl
mov
pop
lods
push
jae
push
mov
call
iret
adc
pushf
jae
jnp
xor
mov
ljmp
push
lea
dec
shl
sub
sub
jle
pop
fsubl
sub
movsb
push
xor
push
pushf
sub
add
adc
test
scas
mov
dec
pop
sti
add
or
out
cmpsb
pop
or
stos
sbb
mov
fmul
mov
test
push
dec
loop
fiaddl
mov
pop
sub
inc
adc
add
push
fs
rsqrtss
repnz
mov
loop
xchg
filds
cmp
push
adc
fnsaves
mov
mov
lahf
sub
rolb
cmp
or
clc
cwtl
pop
cmp
add
jle
push
or
ja
aaa
jecxz
scas
jp
sub
push
ja
inc
sarb
int
mov
jmp
xor
and
add
jg
pusha
dec
jecxz
fists
jp
int3
lock
loope
mov
rcrb
fdivl
or
mov
ret
add
pop
add
nop
testb
dec
inc
adc
sahf
pop
cmpsb
sahf
jecxz
divl
push
mov
sub
pop
dec
in
mov
sbb
popl
sbb
popa
and
lds
sbb
sti
sub
jno
pop
dec
stos
mov
inc
and
pop
std
mov
movsb
xor
xchg
dec
rclb
test
cmp
inc
push
lock
test
or
pop
leave
movsl
push
jecxz
pushf
incb
xchg
push
scas
dec
iret
dec
pop
add
jp
orl
push
mov
jo
push
push
dec
movsl
mov
pop
pushf
fnstenv
mov
pushf
cmp
dec
and
mov
jge
adc
mov
insl
sbb
shll
adc
sbb
jp
dec
jge
sub
mov
push
dec
jl
cmpsb
sbbl
outsl
and
ret
dec
push
jnp
push
jmp
fistps
add
out
cmp
nop
adc
mov
pop
sub
shll
jmp
xchg
loope
push
xlat
hlt
inc
inc
movsl
sub
inc
lea
or
insb
sub
mov
dec
lea
mov
sbb
and
in
adc
test
cmp
test
sub
incl
das
mov
push
aad
pop
stc
fwait
and
aam
in
jecxz
movsb
push
jle
fiaddl
jo
or
add
ljmp
sahf
cmp
adc
into
push
loop
rol
imul
cltd
add
adc
mov
aam
repz
repz
mov
xor
or
sub
jp
lock
jnp
pop
inc
es
or
cmp
ret
sar
stc
rcrl
push
sahf
ret
dec
stc
lret
mov
je
stos
pop
push
arpl
int3
add
in
pop
stos
fdivr
pop
mov
out
mov
lret
pop
shrl
mov
inc
pop
int
lret
gs
add
leave
cli
inc
inc
fidivl
push
mov
test
xor
mov
popf
xchg
fcmovne
inc
imul
add
aas
aad
sub
into
jnp
inc
repz
pop
int
mulb
bnd
in
jmp
fldcw
lahf
or
jle
xchg
test
mov
mov
aas
call
aas
insb
mov
push
xchg
aaa
sub
fs
aad
push
push
shrl
loop
xlat
aad
cmp
jg
pop
xchg
push
insl
cmp
dec
and
outsl
ss
or
inc
fwait
lret
pop
cmp
push
push
stc
and
pop
add
jge
in
xor
lcall
testl
rclb
ret
fucom
or
addr16
out
push
xor
jp
cmp
pushl
pop
push
push
pop
dec
pop
push
push
aam
xchg
movsl
dec
in
cltd
cmpsb
push
std
cld
sub
jbe
push
xchg
mov
sbb
test
mov
xchg
out
push
push
push
and
call
loop
push
sti
xchg
pop
push
icebp
in
pop
xchg
out
imul
cmpsb
cli
clc
shr
push
fs
and
dec
mov
inc
icebp
xchg
into
mov
cs
mov
imul
inc
out
fimuls
aam
inc
xlat
dec
ret
cltd
les
sbb
data16
mov
pop
jo
and
dec
dec
dec
faddp
mov
and
sub
sbb
js
pop
dec
aas
rclb
call
push
scas
clc
out
int
jns
mov
mov
xchg
push
dec
lock
pop
jae
cmp
lcall
add
shll
test
les
lret
push
das
ljmp
shrb
fisubs
data16
pushf
dec
addr16
out
movsl
repnz
push
in
lcall
cmp
movsl
push
nop
push
dec
testl
dec
cmp
lcall
dec
shl
mov
int3
inc
fstp
loop
fldl
es
fldcw
push
or
sbb
pop
push
pop
outsb
pusha
dec
jns
or
ljmp
gs
daa
and
movsb
inc
aam
sahf
cmp
jmp
inc
std
jmp
mov
out
push
out
dec
xchg
jp
icebp
popf
cmp
add
mov
and
or
pop
lds
stos
mov
scas
xchg
lcall
jg
movsb
aam
mov
dec
sub
xchg
ja
mov
push
ja
jp
jb
fs
imul
lock
dec
cmp
inc
in
xchg
mov
jmp
pop
pop
jecxz
cmp
repz
popa
loopne
sbb
and
cmp
pop
push
xchg
sbb
adc
jmp
inc
sti
aas
mov
cmp
aaa
mov
in
and
popa
imul
or
hlt
fwait
repnz
pushf
cmc
test
inc
fcoml
cmp
shll
jne
mov
lds
mov
sarl
jl
mov
xor
lods
adc
out
icebp
lea
xor
in
sub
iret
dec
movb
movsb
orl
inc
mov
and
cmp
sub
add
aam
das
movsl
and
insb
pop
add
int3
xor
jmp
aad
push
test
mov
bound
jl
mov
pop
call
jno
cld
push
pop
call
pushf
jbe
imulb
loopne
repnz
xor
dec
fisttps
cs
xor
outsb
push
data16
cld
clc
cmp
sti
and
push
lcall
dec
std
adc
lret
xchg
test
jns
imul
cli
loop
mov
fsubrl
jecxz
fldl
cmp
jecxz
adc
xchg
shl
fdivs
cmp
cmp
xor
jmp
mov
outsb
cs
fiadds
inc
mov
cs
test
pop
loope
fsubrp
push
loop
push
out
call
in
popf
out
int
ds
mov
inc
inc
xchg
sub
adc
xchg
inc
fnsave
call
xor
push
inc
fldenv
mov
jne
repnz
mov
pop
icebp
mov
cmpsb
sub
test
rolb
mov
sub
lock
xchg
sbb
les
fwait
clc
and
test
notl
or
sub
push
xor
inc
mov
repz
cmp
push
into
add
pop
sahf
or
dec
int3
mov
addr16
in
jle
pop
or
push
jne
ret
ret
aaa
test
pusha
jecxz
aas
dec
lds
and
in
push
inc
mov
pop
jb
xlat
dec
mov
pop
inc
sub
out
roll
push
xchg
daa
adc
inc
jmp
mov
sarb
mov
arpl
lcall
dec
sub
pop
sbb
xor
ret
roll
out
mov
mov
push
insb
mov
jbe
lcall
popa
or
jns
xchg
add
and
jbe
mov
ret
insb
jp
ret
mov
inc
and
fsubs
mov
aam
jae
add
or
repz
sbb
fisttpll
shlb
xchg
xor
nop
aas
xchg
xchg
jbe
jne
pop
mov
faddl
xchg
out
movsb
rol
dec
dec
lahf
or
mov
and
and
rorb
dec
fistpl
fbld
test
sub
xchg
movsb
sub
sub
adc
icebp
filds
test
out
gs
nop
rcl
add
jb
and
loope
or
syscall
mov
in
mov
leave
addr16
cmp
es
movsl
cmp
sub
ss
sbb
sub
sbb
add
sub
sahf
or
sub
sbb
inc
push
out
dec
lret
lock
cmp
out
gs
test
fcoms
bound
sbb
in
lcall
movsb
jo
xchg
xchg
icebp
pop
cli
inc
and
cmp
lods
aas
push
idiv
pop
popw
pop
mov
int3
std
push
push
out
sub
dec
insb
xchg
or
scas
in
or
jle
bound
jae
cmpsl
aaa
xor
sub
enter
leave
pop
je
mov
ret
add
clc
mov
xor
xchg
aad
mov
jno
dec
lret
xor
xor
ja
push
into
sbb
push
in
add
int
pop
dec
cli
push
lock
icebp
data16
xchg
mov
imul
inc
lahf
jbe
cld
and
repz
pop
sbbb
mov
jmp
jo
xchg
pushf
xchg
test
push
negl
cmp
jge
xlat
fdivl
adc
mov
arpl
pop
push
or
add
sbb
stos
xchg
jns
clc
mov
jmp
add
xorb
jle
adc
xor
xor
ja
and
push
jp
sub
push
dec
or
dec
mov
mov
push
mov
jmp
xor
and
push
cwtl
add
rolb
icebp
fnstenv
cmpsl
pusha
add
push
jno
mov
test
popa
sbb
jne
jg
push
inc
loopne
cwtl
pop
lcall
push
pop
sbb
pop
push
rorl
clc
es
test
push
movsb
sub
nop
int
fdivs
int3
aad
fadd
lock
stc
xlat
lods
ds
dec
popf
cmp
pop
xor
push
xor
mov
fwait
dec
dec
adc
sub
clc
jge
mov
cmp
sub
mov
pushf
inc
ret
add
data16
jp
cmp
adc
mov
cltd
push
out
mov
mov
roll
les
pusha
data16
test
sahf
push
shl
imul
stc
pop
pop
icebp
cmp
jnp
aas
sub
dec
push
sarb
inc
jmp
je
sbb
xchg
sub
pushf
xorl
insb
stc
sahf
arpl
movlps
ss
sahf
ljmp
and
jno
scas
repnz
subb
jmp
push
ret
xchg
push
arpl
dec
push
mov
cmpsb
adc
push
nop
jmp
andl
imul
imul
lahf
add
adc
jg
add
js
mov
mov
inc
inc
fisubs
push
into
cmp
push
roll
jns
xchg
xchg
ret
sbb
pushf
add
lods
xor
sahf
pop
xor
lock
xor
test
xchg
loope
pusha
xchg
lock
addr16
push
pop
pop
sub
les
stc
test
cmp
mov
rol
out
inc
sbbb
adc
testb
cmp
add
jns
push
sbb
mov
inc
pop
lods
sub
aam
imul
cmc
jns
mov
cld
and
cmp
popf
int3
fstl
les
adc
add
mov
and
xchg
xchg
cwtl
hlt
es
in
test
rol
jbe
test
sub
andb
lret
add
outsl
cmpsl
xchg
mov
in
sub
or
lcall
mov
jmp
in
lahf
mov
xchg
cwtl
jle
insb
imul
pop
push
int
fstps
popa
scas
enter
xor
mov
call
jo
leave
or
imul
lock
pop
xchg
sub
adc
mov
add
mov
lods
xchg
stos
dec
jmp
and
cltd
sbb
inc
xchg
push
inc
cmp
lret
adcl
and
xchg
imul
sbbl
stc
rolb
aad
stos
adc
jmp
dec
call
cmp
ss
pop
pushf
fsubrs
icebp
jns
dec
pavgb
in
mov
rolb
xor
ret
call
ja
cwtl
xor
fsubs
aas
or
mov
dec
out
in
adc
and
pop
leave
jp
std
dec
outsb
outsb
fsubl
imul
mov
clc
add
test
dec
jg
and
push
loop
xor
bound
adc
pop
and
adc
sbb
subb
pop
clc
add
push
out
sub
out
in
push
push
daa
imul
icebp
ret
adc
fnsave
stc
add
push
ret
clc
out
mov
out
jno
fwait
jecxz
repnz
pop
decl
or
add
push
mov
in
push
out
jo
icebp
push
loop
fstp
rcll
stos
dec
sarb
mov
jmp
xchg
dec
repz
out
pop
push
jne
das
mov
fwait
push
fsubs
mov
pop
cmpsb
ret
fsubrs
leave
sbb
and
push
xor
pop
push
out
adc
roll
mov
lahf
add
dec
lods
sbb
pop
push
or
in
cmpsb
lahf
clc
in
or
or
es
stc
jg
sahf
loop
push
out
xchg
xchg
inc
ljmp
fidivrl
cmpsl
inc
sbb
push
les
mov
mov
push
jno
add
fidivrl
or
in
lret
inc
rcrl
xor
imul
imul
xchg
add
mov
add
xchg
jle
int3
repz
mov
cmp
or
xor
rorb
jg
in
pop
and
repnz
stos
daa
mov
mov
lahf
fcomps
pop
inc
and
mov
rcll
sub
roll
sarb
fiaddl
cmp
inc
mov
clc
cmp
loopne
icebp
jo
js
decl
pop
pushf
jne
aas
dec
repnz
and
insb
dec
mov
inc
pop
xor
push
pop
imul
xlat
cmc
and
push
push
push
jle
mov
add
cmpsl
xor
test
xor
jge
or
data16
push
add
sub
sub
push
mov
mov
popa
mov
neg
into
bound
loope
push
jmp
orl
adc
mov
jecxz
in
xchg
push
lods
in
dec
dec
push
jb
add
data16
fstps
scas
repnz
fstl
pop
imul
mov
insl
sub
jmp
enter
aad
out
loope
out
movsb
hlt
sbb
lea
add
jmp
and
adc
push
mov
insb
lret
lar
push
cmpsl
loop
divl
in
push
in
fsubr
clc
cs
fildll
lock
stos
jno
insb
and
sbb
in
mov
int
into
in
shlb
cli
cld
mov
jl
pop
ljmp
test
loope
and
das
fcomp
loopne
xor
fsts
push
cmc
insl
xor
lods
leave
pop
push
inc
sub
hlt
ffreep
ret
stos
clflush
pop
push
popa
dec
push
jne
jne
faddl
adc
push
notl
sub
and
cmp
cmp
xchg
movsb
les
dec
mov
out
inc
xchg
daa
push
daa
xchg
push
lods
push
fstl
push
and
mov
lret
inc
push
xlat
pop
aas
test
jmp
divb
pop
lret
xor
in
push
mulb
mov
or
and
movsl
jecxz
leave
repz
inc
xor
stos
sbb
movsl
dec
lea
jle
mov
out
enter
imul
cmp
mov
gs
inc
outsl
mov
jg
test
aas
xchg
jg
and
lret
cmpsb
push
mov
xor
add
mov
sbb
inc
add
and
push
xlat
movsb
popa
mov
mov
xor
outsl
dec
mov
into
jmp
xor
ss
outsb
sbb
xor
es
shl
mov
std
inc
loopne
leave
rorb
popf
dec
xor
pop
jge
jmp
es
filds
xlat
jno
loopne
inc
std
outsl
sbb
daa
jne
push
or
testb
inc
or
loope
adc
je
jecxz
jg
push
sub
sbb
cmp
cmp
inc
lret
pop
push
mov
pop
subl
mov
fnstsw
mov
out
je
pop
aaa
and
cmp
adc
add
in
mov
insb
xchg
sub
sarl
loopne
mov
dec
popa
mov
filds
and
adc
lret
rclb
ss
adc
xchg
sbb
inc
pop
ret
sbb
xor
xlat
out
fists
jne
mov
popa
dec
jmp
idiv
cwtl
aas
and
es
leave
rolb
adc
vpshufhw
test
cmp
dec
cmp
enter
loopne
dec
gs
xchg
add
adc
mov
and
aad
ror
int
cmp
xchg
xor
cmp
aas
insl
lods
push
dec
inc
jp
lahf
stc
test
nop
fdiv
imull
and
sbb
cmp
and
sub
stos
add
lods
mov
add
jmp
push
xchg
xchg
insb
push
pop
and
push
fdivrl
popa
mov
movsl
sub
loopne
xor
and
jp
lea
cmp
test
sbb
or
das
mov
pop
shr
jg
mov
div
inc
jmp
and
mov
mov
cwtl
popf
adc
or
shr
pusha
push
mov
mov
fsub
lret
dec
popa
pusha
mov
cmpsl
sub
lcall
jecxz
fimuls
fmull
dec
dec
repz
repz
popa
data16
xchg
pushf
add
pop
shlb
loop
push
out
lret
lock
lock
or
xor
fldl
in
dec
sub
cmpsl
sarl
pop
push
xchg
adc
scas
lret
adc
iret
sbbl
add
aam
in
xchg
popl
xchg
and
int3
mov
push
test
je
cmp
pop
push
inc
jb
not
push
nop
mov
jmp
jbe
test
or
leave
cmc
in
dec
orb
inc
adc
ljmp
mov
mov
mov
clc
pop
sub
add
cmc
lock
jns
lock
jg
in
sub
cmp
mov
jecxz
jecxz
out
pop
xor
dec
push
adc
idivb
call
cmp
fstps
pop
jle
jo
add
xor
loopne
mov
popf
cwtl
sar
push
ret
sub
les
mov
mov
testl
and
pop
clc
sub
pop
push
xor
fidivs
push
or
mov
imul
push
adc
jl
dec
scas
je
dec
dec
pop
push
pop
add
mov
xchg
sbb
cmpsb
xor
mov
outsb
fldcw
testl
cmc
lock
jmp
mov
hlt
mov
out
mov
inc
jmp
repz
cmpsb
mov
fs
xchg
repnz
int3
aad
sahf
inc
cmp
pusha
pop
test
in
pusha
cmp
in
rol
rcrl
lods
idiv
push
dec
pop
fimull
sub
movsl
testb
pop
push
dec
std
mov
fwait
xor
sbb
loope
dec
sbb
jns
and
cmpsl
dec
mov
in
push
mov
or
sbb
mov
lcall
pushf
xchg
repz
bound
sub
adc
out
outsb
pushf
std
sub
mov
insb
dec
mov
dec
les
xchg
lahf
sti
push
jnp
and
in
fs
push
movl
cmp
xchg
push
pcmpeqd
das
pop
hlt
movsb
xchg
int3
fildll
cmp
stc
ss
inc
stc
push
daa
push
dec
leave
sahf
dec
xchg
sbb
xlat
loop
sbb
push
jae
sub
mov
cmc
sbbb
jno
stos
adc
mulb
cmc
xchg
sub
insb
pushf
sbb
dec
mov
cmp
jo
fstl
add
out
bound
or
dec
dec
in
xchg
xor
dec
xor
lods
cmp
push
cmp
sbb
ljmp
inc
inc
popa
pop
mov
das
lret
and
cli
sub
fsubrs
rcr
xor
test
lea
out
sbb
pop
pop
dec
flds
push
push
or
repnz
aam
mov
ret
xor
clc
inc
sub
les
dec
cltd
test
pop
sahf
out
fcomp
dec
jmp
xor
pop
and
outsb
add
mov
int
xor
int
out
sbb
jl
xchg
xor
inc
jecxz
es
push
jp
mov
cmp
push
mov
nop
sub
sbb
pop
leave
pop
addl
shll
mov
jmp
adc
out
inc
shlb
mov
cmpsl
mov
mov
add
xchg
movsl
sub
fiadds
fcmovnb
xchg
mov
mov
mov
mov
cltd
sahf
dec
incb
pop
fwait
gs
mov
mov
sahf
inc
test
into
push
test
in
out
or
jno
adc
xchg
ss
das
mov
icebp
and
ret
lahf
dec
ficompl
gs
jne
cmp
inc
movsb
out
xchg
mov
pop
mov
sbb
leave
scas
and
sub
popa
in
and
imul
js
scas
inc
fnstenv
dec
dec
sahf
pop
mov
adc
pop
lret
cmpsl
cwtl
mov
test
push
cmp
test
arpl
mov
loope
push
adc
inc
or
les
cmp
out
cmp
test
sbbl
out
scas
leave
or
mov
clc
enter
mov
in
push
mov
imul
inc
pop
ja
sub
sbb
mov
repnz
lahf
loop
cmp
mov
rorb
cmc
xor
dec
jle
fcoml
jne
loopne
icebp
adc
sbb
ds
and
inc
cltd
mov
loope
mov
outsb
mov
pop
das
sub
mov
cmp
xor
or
jbe
mov
or
mov
mov
xor
fs
and
inc
lcall
aas
xor
test
lds
jle
fs
hlt
and
repnz
jg
sub
or
stc
movsb
hlt
push
imulb
cltd
push
xor
adc
and
or
cmp
test
sub
or
push
sbb
add
pop
jb
or
out
pusha
in
out
mov
insb
sbb
cmpsb
repz
xchg
xor
inc
imul
sub
dec
dec
and
pop
sbb
inc
int3
xor
loope
mov
push
fdivl
ss
pop
xchg
cld
jmp
mov
test
or
xor
nop
inc
clc
sarb
mov
jle
leave
popf
add
sub
repnz
jge
enter
ss
adc
sub
lock
test
rcrl
fdiv
into
repnz
andl
sahf
sti
jmp
cmp
lods
cs
sbb
nop
imul
mov
popa
mov
ljmp
pop
push
int
or
insb
nop
pop
and
and
mov
in
notl
jmp
add
jmp
mov
movsl
les
sbb
sub
pop
jp
and
and
lret
push
es
testb
fdivrs
fistl
adc
out
hlt
add
lret
jl
cmp
incl
bound
dec
scas
push
fidivrl
insl
adc
dec
daa
dec
push
loop
fldt
xchg
nop
push
xchg
cmpsb
and
lods
pushf
jbe
mov
enter
aaa
fidivrs
out
inc
aam
mov
mov
outsb
adc
pushf
sub
adc
cmpsl
jl
jns
shl
shr
lock
mov
imul
aad
and
out
fstp
dec
xchg
pop
pop
cmp
mov
xchg
and
mov
mov
leave
repnz
neg
xor
icebp
pop
mov
sub
stos
les
dec
sbb
pop
push
jl
or
pop
mov
testl
js
mov
push
loope
add
xor
add
fcmovbe
mov
dec
dec
leave
out
into
cli
scas
movsb
loope
enter
in
fists
enter
mov
xor
cmp
dec
out
and
push
fs
scas
mov
out
loopne
lods
in
inc
rclb
mov
sub
jge
cmpsl
int3
push
add
sub
test
inc
lods
sbb
call
out
push
stc
outsb
test
enter
ret
and
js
aaa
jp
out
jp
cmp
cmp
cmp
cmc
ljmp
outsb
shrb
add
fdivl
dec
jle
scas
test
imul
jl
push
dec
jg
sub
inc
inc
ljmp
in
lods
or
push
mov
in
xlat
jnp
fists
pop
cld
lahf
sub
cmp
jge
or
jl
cmp
xchg
mov
cmc
stc
lcall
push
xchg
das
leave
and
cltd
jne
rcrb
into
aaa
imul
xchg
ror
jmp
inc
inc
in
int
cmp
xorl
mov
js
sahf
loop
lahf
push
inc
cmp
lds
test
dec
in
call
inc
sub
pop
inc
push
rorl
in
and
popa
xchg
xor
mov
pop
dec
mov
dec
lret
idiv
sub
adcb
pop
out
xchg
aam
push
iret
jge
inc
shlb
push
sbb
add
inc
push
cmp
out
cmp
in
rcll
dec
ffree
cmp
fcompl
push
bound
xor
push
inc
or
inc
je
movntq
cs
loopne
out
lret
dec
inc
pop
cmp
mov
dec
cmpsl
or
outsb
pop
in
mov
add
cmp
mov
out
js
jae
dec
sub
jmp
fists
out
je
imul
xchg
mov
pop
aam
xchg
stos
push
jmp
cmp
dec
mov
pop
lock
insl
pop
mov
inc
jae
inc
pop
fstps
mov
xor
ljmp
xor
out
in
mov
in
shll
xor
bound
and
cmc
insl
sub
data16
pop
jno
ss
xchg
push
xor
inc
push
mov
imul
data16
sarl
dec
inc
into
test
pop
adc
cld
push
lods
jge
add
ror
cmp
sbb
jno
sbb
jmp
fcmovu
out
sahf
and
jne
mov
and
dec
dec
jmp
dec
dec
pop
bound
mov
outsl
inc
jne
sub
adc
shrl
scas
ljmp
lock
push
dec
inc
mov
scas
pop
daa
dec
cmp
add
push
dec
fisttpll
mov
push
fdivp
push
inc
push
imull
cs
es
aam
pinsrw
xor
and
push
jmp
jns
xor
xor
dec
inc
mov
incb
out
add
aam
cli
int3
push
xchg
es
jno
adc
xlat
sub
lock
adc
gs
and
xor
adc
inc
xor
sbb
push
wrmsr
mov
lock
cmp
insb
sbb
out
int
fwait
popa
enter
aas
in
in
and
andl
xchg
imul
scas
push
cmc
cmp
xor
popf
pop
and
adc
out
pop
adc
mov
int
sub
std
je
push
xchg
cs
pusha
and
test
iret
test
adc
insb
xorb
popf
pusha
stos
fstl
dec
stos
roll
lock
aaa
mov
and
mov
sahf
imul
push
cld
push
adc
stc
add
and
pop
and
rcr
bound
int
loop
or
sahf
adc
sub
inc
mov
push
jecxz
lock
and
shlb
mull
pop
push
pop
add
std
test
mov
scas
cli
in
outsl
adc
and
aas
mov
sbb
adc
dec
lret
push
sbb
aad
ljmp
leave
lods
sub
loopne
push
rcrb
adc
or
push
mov
cs
pushf
nop
lock
dec
jl
outsb
mov
data16
in
daa
jo
in
push
xor
loope
lds
aaa
mov
movsb
dec
inc
inc
xchg
mov
mov
or
loopne
xor
xor
out
imul
jne
push
fildl
insl
sbb
out
jns
stos
repnz
sub
and
pop
pushf
fidivl
iret
movsl
ds
gs
mov
dec
dec
call
push
filds
cbtw
push
dec
pop
inc
add
or
push
adc
loope
adc
arpl
in
icebp
or
rep
ds
mov
stc
push
movsl
xchg
xchg
push
mov
mov
pop
shr
inc
push
jecxz
pop
sbb
scas
dec
push
mov
jge
xor
movsl
and
in
addr16
push
and
popa
ljmp
inc
ror
rcrb
xchg
sub
sbb
out
mov
js
xchg
mov
adc
cmp
xchg
sub
or
outsl
push
adc
or
mov
lret
adc
mov
mov
xor
call
inc
mov
adc
je
inc
sbb
cltd
push
push
divl
cli
push
ret
sbb
rorl
push
mov
and
repnz
jns
mov
inc
pop
jmp
fimuls
daa
jbe
test
dec
sbb
push
mov
or
pop
loopne
mov
aas
out
mov
sub
inc
jl
sbb
fidivs
mov
fiadds
test
sub
dec
dec
push
rcrl
inc
mov
push
movsb
clc
je
pop
xchg
inc
push
sbb
jo
xchg
cwtl
inc
bound
sub
jno
ja
lock
mov
pop
cmp
push
mov
push
and
push
in
lods
scas
or
shll
mov
jno
cmp
xchg
or
push
jle
or
aas
std
sbb
sbbl
in
and
inc
push
mov
out
stos
mov
outsb
push
pop
cltd
pop
call
dec
xchg
iret
sub
mov
xchg
cwtl
inc
cmp
scas
dec
add
mov
cmp
adc
arpl
test
xchg
repnz
stos
xor
out
aas
inc
and
stos
test
rcl
cmp
and
movsl
push
cmp
mov
sbb
mov
jle
cmp
cmp
mov
aad
fnstsw
and
int
jg
imul
mov
lods
dec
ljmp
in
clc
sti
dec
imul
sub
cmp
pop
in
push
leave
les
dec
adc
lret
dec
jae
js
mov
mov
ret
sarb
mov
mov
decb
repz
popf
adc
sub
orb
frstor
les
xor
mov
aad
xchg
loopne
mov
clc
test
lea
and
es
repnz
int
cmp
xor
in
adc
push
mov
ret
dec
out
call
aas
or
adc
inc
dec
fimuls
mov
xor
sahf
jns
lret
in
aaa
repz
loopne
mov
add
push
ljmp
sub
imul
aad
jns
iret
lds
int3
rcl
clc
cmpsl
call
jae
scas
lods
movsb
ss
xchg
jnp
fisubs
pop
cs
popa
lahf
push
push
mov
jecxz
inc
out
icebp
and
inc
cmpsl
pushf
push
loop
sub
in
orl
scas
ffree
cld
loopne
lock
pop
and
hlt
in
inc
imul
jle
testl
dec
fs
test
dec
ss
cmp
pop
es
cmp
adc
stos
inc
insb
scas
fstpl
dec
loope
test
xchg
jecxz
lds
daa
int
xchg
popf
push
iret
lods
js
sbb
stos
fidivl
out
pop
xchg
vcvtps2pd
mov
into
fs
inc
mov
je
std
orl
sarb
push
cmp
loop
and
je
add
jns
sahf
rolb
sahf
sbbl
test
pushf
push
xchg
inc
jle
fld
das
loope
addr16
ss
xchg
repz
dec
outsl
clc
and
xchg
test
movsl
mov
cli
cmpsb
push
add
cmp
dec
xor
mov
or
push
pop
adc
lret
aaa
gs
pop
adc
ljmp
push
dec
adc
add
fwait
in
jge
es
xchg
cmpsl
xchg
push
int
adc
fcmovb
add
cmpsb
leave
jns
out
ficoml
jbe
sub
xor
cmp
jge
mov
or
sbb
in
xor
cmpsl
repnz
fidivs
notb
fsincos
lock
xor
xor
push
out
push
imul
xor
scas
hlt
and
test
call
xor
aad
ljmp
mov
mov
push
test
push
jne
aad
mov
xor
scas
xor
loope
mov
ljmp
insb
jmp
in
popa
or
repnz
out
scas
jge
jns
inc
or
int3
test
mov
mov
rcrl
push
nop
lret
jb
xchg
pop
jne
test
int
jp
repz
jnp
lret
int
mov
popa
xlat
push
add
push
outsl
cld
fsubp
loop
jbe
mov
or
pop
jne
jge
mov
pop
lds
lods
jno
and
inc
jmp
pop
shrl
mov
sub
mov
xor
nop
push
sbb
adc
insb
fmul
push
pand
mov
adc
dec
shll
mov
or
stc
imul
mov
pop
mov
andb
in
loopne
fdivr
cmpsb
gs
fiaddl
cld
cli
sub
lods
sub
icebp
clc
je
adc
inc
lcall
pop
mov
insl
stos
jl
mov
or
fbld
jbe
aaa
icebp
test
mov
dec
add
mov
pop
rclb
icebp
sbb
mov
loop
inc
sub
dec
sbb
repz
xchg
in
push
mov
or
loopne
jae
addr16
or
mov
pop
lods
aam
bound
pop
push
pop
inc
xchg
int
add
inc
xchg
add
inc
addl
mov
fnstcw
mov
ja
pop
dec
into
add
mov
cmp
das
push
mov
mov
fadd
cmp
les
mov
inc
pop
xchg
dec
xchg
inc
es
mov
xor
sub
sub
mov
mov
int
int
add
out
lahf
cmc
ss
into
shrb
int
icebp
outsl
stc
subb
push
jnp
jo
mov
sbb
ja
dec
mov
cli
adc
mov
pop
lea
jecxz
popa
imul
adc
fcoml
mov
decl
inc
push
imul
mov
or
out
popa
fisubs
cmc
push
leave
mov
and
xor
pop
push
nop
into
jno
push
fsubrl
cmp
lods
mov
dec
and
shrl
out
sahf
sbb
sbb
push
and
pop
xor
sub
cs
and
gs
and
inc
out
xor
addl
mov
cltd
or
mul
add
int
add
and
cmc
call
dec
push
sbb
push
ficoml
das
jge
lods
add
insb
loope
icebp
xor
mov
or
clc
add
cmp
stos
xor
jne
xchg
pop
in
iret
rcl
outsb
pop
ss
mov
faddl
mov
push
inc
ljmp
loope
cltd
insl
imul
in
pop
leave
sub
adc
repnz
movsb
pop
cmp
sub
add
clc
call
ret
mov
mov
sub
and
cmp
cmc
push
jo
loopne
dec
in
jns
out
dec
mov
out
adc
mov
test
cwtl
icebp
jo
inc
lock
loopne
out
jmp
decl
loop
sbb
fcompl
add
lock
adc
xor
dec
push
push
cmp
push
out
fildl
cld
fbstp
out
lods
or
xor
popa
jecxz
cmp
addr16
loope
inc
orb
data16
cmp
sub
mov
xchg
in
jge
dec
ljmp
mov
xchg
sbb
push
push
jecxz
jge
inc
inc
mov
sub
sbb
jne
loop
jge
or
mov
jno
mov
stos
popf
in
mov
push
mov
mov
out
add
stos
jno
sarb
inc
xchg
and
out
mov
loop
xor
dec
inc
jno
or
mov
in
mov
sarb
mov
test
push
or
mov
cmp
loopne
pop
inc
push
andb
cmp
icebp
mov
sub
daa
fdivs
jmp
bound
inc
pop
ljmp
xor
fwait
inc
push
sbb
dec
adc
shlb
pop
rorb
dec
xor
inc
adc
xchg
out
mov
xor
mov
sbb
xchg
lock
inc
mov
inc
in
insb
decl
dec
in
push
jne
sbbb
inc
inc
stc
rolb
lock
scas
pop
xor
in
out
cmpb
int
jp
pop
mov
xchg
and
cmp
arpl
inc
dec
jmp
cmovnp
mov
and
addr16
cwtl
sbb
add
jg
adc
out
inc
and
cltd
adc
xor
pop
inc
xchg
pop
xchg
popa
xchg
cs
sub
fsubrl
out
inc
add
nop
outsl
insl
jbe
mov
sbb
cmp
cmp
rorl
les
sub
sbb
enter
lods
inc
push
filds
scas
mov
add
aad
xchg
in
inc
aaa
pusha
repnz
sti
jmp
cmpsl
and
mov
or
repnz
mov
add
adc
cmp
or
cwtl
sahf
push
aam
xchg
dec
mov
loop
dec
jae
testl
loope
orl
jb
aas
add
add
dec
adc
cs
push
add
mov
cs
mov
dec
cs
mov
or
repz
dec
lods
jecxz
lahf
and
js
jnp,pn
pop
xchg
cmp
or
mov
lods
enter
arpl
orb
stos
mov
lret
xor
pop
lret
fs
test
or
insb
push
or
pop
out
jno
loop
jbe
mov
inc
test
push
jmp
loopne
outsb
rol
pop
inc
testb
cltd
add
or
test
cmp
loope
lods
add
lods
lret
stc
mov
push
push
movsb
cmp
dec
pop
pop
sbb
pop
cs
inc
pusha
nop
inc
jle
mov
or
gs
das
jmp
or
adc
mov
sahf
popa
lock
mov
in
mov
sbb
test
mov
push
popa
cmp
loop
mov
in
into
cmp
and
cmp
mov
mov
and
rcrl
fbld
adc
and
pop
pop
ss
cmp
mov
xor
cmp
scas
and
rol
dec
xor
insl
sub
xchg
cs
inc
mov
and
loopne
dec
leave
cmp
aaa
pop
mov
cs
inc
xor
xor
shll
clc
fwait
mov
inc
cmovno
divb
data16
cli
and
loope
inc
fidivl
inc
loop
int3
imull
xorb
jmp
hlt
es
sbb
adc
mov
fbld
in
cld
fidivs
int3
add
push
push
mov
lods
std
dec
stos
adc
jecxz
sbb
fcmovnbe
loopne
mov
jno
enter
pop
call
mov
mov
xlat
stos
imul
sbb
inc
roll
lahf
js
inc
inc
pop
inc
in
mov
rolb
mov
ficomps
std
sbb
sub
fisubrs
mov
mov
sbb
enter
cmpl
xchg
dec
pop
int
adc
pop
jae
leave
push
mov
push
mov
test
jl
loop
lahf
aad
or
movsl
cmp
repnz
push
or
shr
xchg
sar
pop
imul
jp
gs
inc
testl
push
shl
test
add
enter
dec
cs
shrl
aad
loope
mov
sbb
int3
movsl
data16
inc
loop
in
sbb
cmp
pusha
dec
and
insb
inc
sub
fisttpll
dec
lahf
js
xor
sbb
call
cmp
int
imul
mov
lods
inc
mov
push
out
xchg
sub
out
inc
sub
aad
daa
test
mov
out
js
int
jp
mov
fucomip
fldcw
sbb
ss
mov
xchg
adc
loope
and
fwait
insl
and
adc
xchg
int3
jle
mov
cmp
int3
cmp
and
xchg
insb
sub
nop
insb
jo
es
lods
lock
popf
or
dec
push
fcmove
adc
add
pop
mov
ljmp
inc
push
cmp
stc
stos
cs
fisubs
or
push
cmp
or
out
dec
mov
inc
loopne
rcr
xor
add
dec
jg
or
imul
dec
out
xchg
shl
call
sbb
filds
loope
repz
inc
scas
push
jp
or
jecxz
push
ss
jno
cmp
sahf
faddl
inc
out
sub
enter
fsubl
add
pusha
iret
xor
or
adcb
adc
lahf
push
jo
xor
mov
mov
mov
or
mov
and
xlat
jno
jne
addr16
inc
mov
fidivl
jmp
shr
arpl
lahf
jo
inc
pop
mov
pop
inc
js
sbb
inc
test
or
cmc
pushf
or
xchg
fldl
cli
inc
scas
xchg
hlt
negb
or
fmull
daa
sbb
dec
out
cmp
cmpsl
push
jae
mov
jne
adc
adc
lcall
and
mulb
inc
je
frstor
mov
dec
out
cmpb
cmpsl
inc
xchg
scas
gs
fnsave
scas
sbb
jp
push
push
jno
fisttps
lods
pop
loop
lcall
pop
dec
add
lock
pop
es
pop
dec
dec
imul
out
and
insb
add
xchg
call
add
pop
in
movsb
mov
outsb
push
add
mov
jbe
mov
push
dec
add
adc
pop
adc
cltd
push
jp
stos
jns
push
inc
xchg
aas
and
mov
xchg
in
cmp
mov
insb
cmpsl
jne
push
das
pop
mov
inc
cmp
dec
sti
mov
add
hlt
fdivrs
dec
bound
inc
and
xchg
pop
sbb
mov
imul
dec
ficoms
dec
mov
cmp
add
adc
cmpsl
add
movsl
mov
jbe
jl
xor
or
divl
mov
jmp
or
repnz
repz
xchg
cltd
sub
push
je
fcomps
daa
int3
dec
jmp
push
mov
dec
push
shrl
movsl
mov
cmp
add
cmp
cmovb
dec
aaa
cmpsl
stc
loop
cmpl
or
stos
test
sub
lea
arpl
cmp
enter
xor
in
and
xor
push
lret
call
mov
and
test
dec
into
cmc
mov
lods
inc
nop
dec
pop
ret
or
cmp
push
mov
jno
mov
jbe
add
arpl
daa
jno
mov
xor
xor
jl
dec
daa
inc
jno
push
mov
or
sub
out
add
inc
fmuls
aaa
lahf
pop
adc
mov
cmovs
cmp
mov
lret
ret
jle
in
js
pop
dec
sbb
add
jb
lret
add
fsubs
loopne
jl
sbb
add
aaa
lds
jne
mov
leave
nop
sbb
pop
jae
jne
sbb
mov
jecxz
iret
adc
dec
inc
popa
push
push
iret
fdivs
jecxz
jbe
pop
aad
or
pop
adc
and
cmp
stos
mov
loopne
cmpsl
mov
inc
jo
push
mov
mov
push
push
add
into
push
mov
mov
fwait
arpl
test
add
add
pop
shrb
xchg
push
add
in
xchg
popa
jns
lods
cld
mov
xor
and
sub
sahf
add
orl
and
push
in
in
in
sti
popf
inc
aas
push
pop
sub
push
in
xor
mov
cmp
repz
mov
push
pop
fsubs
and
outsl
mov
cmp
cmpl
xchg
add
fistl
paddq
jmp
ret
sub
in
xchg
cmp
xchg
into
inc
dec
mov
and
xchg
insb
cs
gs
adc
jge
leave
imul
jo
iret
shll
push
rcpps
mov
sbb
inc
jno
sti
pop
jb
ljmp
jle
push
ss
int3
les
mov
bound
mov
push
scas
jb
xor
fdivl
fs
mov
mov
insl
nop
add
xor
inc
sub
xor
outsl
mov
lods
cmpb
dec
in
mov
sub
int
out
add
and
sbb
jmp
call
pop
add
stos
inc
push
dec
pop
add
sbb
inc
sbb
jb
jo
inc
xor
push
pop
mov
jno
sbb
mov
cmpsl
sbb
out
cli
cs
mov
test
sbb
adc
mov
inc
jnp
rorl
cmp
scas
inc
dec
clc
xor
sti
adc
enter
inc
dec
mov
sbb
std
push
outsb
mov
push
lret
adc
push
mov
fcoms
sub
iret
aad
hlt
cmp
or
jle
popf
or
out
popa
imul
sbb
inc
xchg
add
clc
xchg
push
dec
jae
pop
js
adc
lcall
jns
sub
add
and
jg
imull
adcb
cli
pop
ss
xlat
lret
nop
push
ljmp
jno
jl
add
imul
push
xor
pushf
add
cwtl
adc
mov
sbb
or
xor
call
dec
aad
paddw
mov
jmp
push
sub
aaa
or
adc
or
xchg
aam
push
mov
es
outsb
inc
aas
pop
mov
addr16
mov
test
xchg
fwait
dec
adc
xor
mov
outsl
aam
inc
fcomps
std
stos
and
pop
imul
jg
mov
sar
popa
or
movsb
nop
xor
test
pop
and
fidivs
add
popa
es
out
push
adc
dec
pop
adc
mov
les
stos
push
shl
sahf
mov
push
push
jge
xor
push
jne
jnp
ljmp
jo
in
jbe
cmc
lock
push
push
rcll
scas
jns
mov
or
mov
push
xor
ljmp
jo
mov
fdivl
in
repz
dec
shll
push
mov
lcall
jp
sbb
sub
cmp
movsl
movsb
or
xchg
out
xor
xor
ret
stos
xor
jae
jo
insl
push
xchg
add
jg
outsb
movsb
cmp
pop
repz
pop
ljmp
clc
fiadds
dec
inc
cmpsl
int
mov
jae
fwait
int
pop
cli
call
sarl
rcrb
pop
fwait
mov
push
jae
add
and
jg
mov
outsl
cmp
fs
or
test
fists
mov
mov
jnp
pop
lds
cmc
int
adc
test
test
inc
jmp
inc
lds
rolb
push
inc
mov
rorb
sbb
xchg
jmp
andb
js
or
lea
ljmp
in
aaa
jnp
pop
icebp
sub
popf
inc
add
dec
shll
push
cmpsb
outsb
xor
push
icebp
add
xchg
or
sub
jns
mov
or
sub
out
cmp
mov
imul
test
dec
das
push
and
sub
sub
ret
and
adc
iret
sub
shl
sub
jb
lret
lret
jl
jb
test
xorl
xchg
pop
xchg
bound
inc
push
ret
mov
dec
and
lcall
das
je
scas
stc
pop
mov
aam
test
cmc
sbbl
and
or
int3
mov
pop
sbb
add
or
mov
cli
push
lea
adc
cmp
mov
mov
fildl
mov
mov
cs
and
mov
xor
sbb
xor
pop
add
stos
dec
int
mov
outsb
fcomi
pop
mov
push
fs
outsl
pop
fcmovbe
xchg
xor
xchg
sar
jae
push
mov
xchg
adc
mov
out
mov
aad
lds
iret
push
pop
addr16
das
mov
in
je
cmpsl
jae
push
push
push
pop
lret
pop
or
push
fs
fsubl
pop
das
add
xchg
dec
outsl
ss
xchg
or
hlt
lea
inc
insl
aas
orb
rcrb
outsl
adc
stos
cmp
cs
xchg
xchg
xor
mov
lods
mov
inc
mov
push
xchg
mov
mov
xor
mov
jg
lea
pop
leave
dec
out
add
push
and
xor
in
sahf
out
mov
mov
mov
adc
out
push
adcb
in
adc
push
inc
xor
dec
insb
and
xlat
mov
call
les
repz
mov
xor
mov
repnz
adc
pop
test
push
out
xor
les
icebp
add
sub
movsl
enter
mov
aam
imul
dec
add
fldcw
mov
and
pushf
mov
adc
cmpsb
xlat
sbb
dec
push
mov
jbe
sub
pop
ret
or
xor
sbb
sbb
subb
aad
xor
jge
in
dec
ljmp
out
loop
pop
xor
or
add
fs
ds
sub
nop
add
lock
fcmovnu
pop
sbb
pop
movsl
cmpsl
xor
push
add
stos
or
push
inc
fisubs
jnp
mov
sti
jbe
out
shlb
mov
sub
es
testl
addr16
mov
mov
mov
test
out
sbb
sahf
mov
jg
pop
idivl
mov
lods
dec
mov
leave
sbb
outsb
jo
mov
scas
insb
in
push
movsl
repz
xchg
lahf
lcall
filds
push
cmp
add
add
adc
std
clc
add
icebp
rorb
jp
call
fs
inc
jp
cmp
daa
and
add
xchg
inc
pusha
out
mov
or
cmp
pop
mov
roll
jb
sub
addl
adcl
inc
mov
mov
pushf
add
xor
dec
add
aaa
mov
dec
and
inc
mov
loopne
adc
xchg
data16
stos
pop
add
fldl
inc
mov
mov
dec
and
insb
int
jne
sbb
mov
sahf
sub
xchg
mov
adc
mov
and
mov
insl
icebp
adc
and
mov
cmpsl
adc
and
dec
jmp
clc
rcll
call
pop
js
jb
outsb
sub
adc
sub
int
in
dec
call
add
or
dec
ret
dec
and
in
popa
das
ss
jne
push
pop
mov
xchg
pop
push
movsb
jb
sub
cmp
cwtl
mov
inc
sbb
push
add
fcoms
xor
mov
cmpsl
add
xchg
add
nop
pop
adc
or
fcmovnbe
stc
nop
dec
adc
lcall
push
std
xor
sahf
dec
cmp
and
mov
cld
loope
xor
mov
push
lret
xorl
call
daa
lahf
or
xchg
mul
jg
jns
sub
adc
sbb
or
dec
dec
ds
pop
or
add
aam
push
inc
adc
nop
mov
cld
test
jp
and
xor
or
xor
push
rol
aaa
mov
iret
sub
or
rcr
inc
xor
sbb
and
add
fdivr
aad
sub
nop
sbb
xor
rcll
outsl
pop
push
cmpsb
pop
mov
fcoml
dec
stc
mov
imull
pop
inc
adc
nop
xor
sbb
pop
test
push
jns
mov
pop
ss
mov
sbbl
idivl
mov
cmp
out
add
popf
jmp
sbb
mov
cld
lcall
and
and
jae,pn
inc
outsl
add
out
psubusw
jecxz
lret
mov
test
ss
jae
add
cli
sbb
lahf
loope
mov
and
xlat
add
or
xor
sub
jg
adc
ret
outsb
push
stc
xor
sbb
push
or
inc
stc
cmp
jae
push
lret
pop
test
or
push
xor
insl
sbb
jmp
les
ds
mov
and
push
dec
jp
sbb
cli
cmp
pop
sub
sub
jnp
sub
xor
ret
inc
and
mov
adc
add
sub
cmp
andl
cmp
push
pop
jno
lea
clc
dec
cmp
push
xchg
into
adc
mov
cmp
fdivs
xor
jle
and
scas
adc
and
es
lock
jb
daa
mov
jmp
insl
cmp
jae
in
cmp
mov
sub
repz
sub
xor
or
mov
les
push
sub
repnz
mov
in
xor
mov
push
push
mov
lods
push
sbbb
inc
cli
or
pop
aas
ss
xchg
add
sub
nop
mov
popa
flds
stc
dec
cwtl
xor
adc
or
jge
mov
cmpsb
and
popa
js
mov
inc
ja
mov
jne
mov
push
imul
mov
nop
mov
movsb
cmp
aad
lock
inc
lds
in
mov
add
lret
inc
stc
icebp
ficoml
fwait
pop
mov
outsl
scas
pop
lea
inc
stc
push
dec
bound
xchg
push
fimull
adc
push
movsl
bound
in
inc
push
xchg
lret
repnz
add
sbb
or
mov
xchg
pop
dec
mov
call
add
std
jge
pop
mov
dec
les
or
lods
icebp
popa
add
addr16
lock
xor
push
ljmp
in
mov
in
out
outsb
sub
jb
inc
aam
sti
addr16
scas
idivb
xchg
jge
pop
inc
pop
add
dec
cli
sbb
mov
shrb
mov
push
sub
cld
jnp
inc
cmp
dec
out
das
add
lods
jne
dec
cli
sti
test
mov
addr16
dec
js
movl
outsb
dec
mov
mov
mov
stc
mov
and
mov
or
mov
popa
test
inc
mov
and
imulb
mov
pop
push
stos
jb
mov
aas
cmp
stos
cld
inc
scas
notl
cmpb
scas
lods
jno
or
fadd
inc
dec
addr16
adc
ja
inc
and
mov
cmp
add
jne
pop
jmp
mov
xchg
dec
fldenv
cmp
mov
inc
or
jns
int
fidivrs
es
xchg
bound
je
rcrb
idivb
lahf
das
out
and
add
repz
bnd
jg
test
repz
sbb
mov
xor
addr16
and
add
and
syscall
push
nop
xchg
xor
dec
testb
push
es
xor
xor
jecxz
sbb
out
test
insl
subb
add
push
test
sub
dec
ss
pop
jmpw
out
add
sub
fnsave
adc
scas
dec
ret
out
xchg
fadd
adc
dec
ss
es
sti
cmpsb
sbb
insl
add
divb
xchg
dec
xor
cmp
xchg
aam
push
fistpll
jae
jp
hlt
ds
inc
fsubrl
mov
test
int
aad
orl
jb
or
mov
and
icebp
or
cmc
sub
xor
add
pop
std
cmpsb
sbb
mov
add
mov
stos
sub
gs
jge
in
in
popf
jo
imul
adc
dec
and
adc
sub
stos
push
repnz
cmp
inc
sbb
inc
mov
mov
insl
or
ja
insb
movsl
xchg
inc
push
sub
and
xchg
push
push
sbb
jecxz
setle
mov
push
jae
clc
push
mov
dec
xor
stos
ja
sbb
dec
push
icebp
in
outsb
jo
dec
mov
lds
pop
pop
jge
xor
and
shll
xrelease
dec
repz
int3
cs
shl
nop
cmc
xchg
inc
push
sub
and
inc
or
inc
and
inc
xchg
mov
jns
repnz
std
inc
sarl
aas
dec
cmp
push
pop
jmp
sbb
sub
shl
jecxz
add
je
sarl
popa
jae
pop
test
sub
repz
push
repnz
inc
movsl
xor
or
inc
outsb
cmc
popf
sbb
push
imul
in
or
dec
add
stc
pop
xlat
add
dec
out
jne
mov
shll
xchg
xchg
outsb
cmp
mov
hlt
mov
rorb
xor
mov
push
in
add
cmp
lock
pop
sbb
cmp
test
daa
mov
jle
cmp
aam
sub
loopne
xor
repz
add
mov
js
push
das
popa
push
mov
cmp
mov
cs
repz
in
cmp
in
repz
out
enter
add
xor
fnstsw
push
sti
mov
out
jp
adc
cs
jns
repnz
push
jno
clc
in
push
into
push
je
mov
sub
or
push
cmc
dec
push
fcoml
imul
in
jg
xchg
push
cs
jno
inc
dec
dec
lods
dec
in
push
xchg
mov
in
jo
sub
xchg
bound
adc
mov
and
adc
clc
sti
fldenv
mov
sub
mov
icebp
push
mov
jmp
jne
push
nop
and
dec
and
cmpb
push
rolb
lret
push
add
mov
loopne
jo
sub
jnp
lcall
ja
pop
mov
push
jp
mov
in
jle
inc
das
pop
imul
push
lds
pop
jle
xor
fwait
ds
das
syscall
inc
mov
and
dec
fsubr
pop
lea
jmp
fwait
inc
push
adc
push
mov
aas
pop
cltd
mov
inc
sbb
pop
daa
and
xor
imul
adc
inc
or
dec
cmp
sarl
and
pop
in
mov
mov
out
push
mov
or
in
push
sbbl
repz
loopne
mov
ja
push
clc
jo
and
xchg
add
test
lcall
pop
push
cmc
push
push
aad
dec
ret
aam
inc
xchg
std
popf
pop
or
outsl
in
lretw
and
je
jecxz
mov
movsl
dec
cs
and
xchg
add
pop
pop
and
push
leave
cs
in
and
mov
inc
test
sub
jmp
jbe
xorl
orl
xchg
add
and
and
cmp
push
cmp
xor
icebp
add
jmp
jge
lods
dec
inc
sbb
es
sbb
fwait
inc
fucomi
jnp
addb
and
jmp
jmp
mov
jae,pt
lock
fiaddl
out
sub
mov
lea
mov
sbb
popa
sbb
ret
test
mov
pop
push
stc
dec
push
push
test
push
mov
xor
ja
inc
es
jg
push
jp
in
xchg
mov
push
add
adc
cwtl
subb
pop
or
xchg
repnz
repz
mov
scas
out
dec
out
idivb
add
cmp
aad
sub
and
mov
push
cltd
xchg
out
xlat
lret
dec
sub
xchg
mov
pop
call
push
or
pop
subb
dec
fwait
das
add
push
ds
fsts
movl
aas
arpl
and
das
xor
aaa
fiadds
stos
dec
or
scas
push
sub
push
pushf
enter
jne
bound
aaa
insb
and
flds
fdivr
lds
in
pop
enter
cmp
xchg
or
gs
xor
lcall
test
hlt
push
into
fsub
inc
inc
mov
fsubr
cli
mov
sub
xchg
test
jmp
lret
jg
xchg
imul
aas
lods
fs
or
cmpsl
dec
arpl
adc
clc
pop
cli
mov
mov
and
aas
mov
clc
popf
fs
mov
jecxz
inc
test
push
or
pop
pop
in
xchg
xor
loope
and
and
add
es
push
pop
aas
fmuls
sub
mov
cmp
add
addb
push
add
adc
fnsave
pop
loopne
test
sbb
xor
xlat
xor
idivb
movsl
repz
inc
in
sub
movsl
xor
sti
add
and
push
push
jmp
adc
dec
fwait
jp
sub
or
jmp
les
inc
push
flds
imul
mov
mov
nop
push
loop
xchg
pop
sbb
daa
imul
mov
push
imul
enter
cmc
jo
add
push
scas
or
sbb
div
lret
fdivrl
jb
cmp
arpl
jne
test
into
stos
jnp
icebp
add
dec
jp
xchg
es
push
adc
mov
jmp
adc
test
movsl
sub
adc
rcrl
int
or
in
ss
xor
and
cmpsl
sbb
cltd
out
and
pop
fldt
cmp
aas
ss
pop
push
mov
outsl
push
test
in
and
repz
and
stc
test
inc
lea
jge
jge
mov
js
addb
pop
cltd
int
dec
push
pop
inc
mov
push
daa
sbb
xor
adcb
pop
mov
or
test
loopne
cmp
jns
in
add
pop
sbb
dec
adc
call
mov
push
fcompl
in
push
push
popa
xor
dec
outsl
fnsave
aaa
xchg
dec
jo
cs
insl
es
dec
sub
aad
or
sbb
sbb
add
xor
xchg
out
loope
xchg
sub
pop
push
sbb
mov
dec
es
ss
hlt
or
mov
mov
lret
jle
mov
pop
dec
test
inc
pushf
push
jno
push
mov
out
sub
mov
cmp
lahf
icebp
sbb
jg
fbstp
or
cmpsl
mov
sbb
and
sub
dec
xor
xor
pop
sti
mov
lock
js
jne
inc
or
or
sbb
mov
testb
jge
sbb
push
aam
inc
in
push
in
pop
push
push
mov
fiadds
jge
push
inc
add
push
pushf
es
mov
push
add
bound
test
mov
lock
cwtl
push
dec
sahf
cmp
fsubs
in
and
xchg
outsb
stc
jge
leave
scas
adc
sahf
loop
mov
insl
mov
loopne
fcomi
cmp
test
inc
xor
or
add
roll
dec
inc
sub
and
push
sub
adc
fsubrl
pop
xor
xchg
xor
xorb
mov
push
dec
jg
add
or
in
add
in
mov
scas
pusha
push
push
je
cwtl
paddw
cmp
jbe
push
push
add
mov
mov
stc
mov
xchg
shl
xor
mov
xor
mov
jmp
test
es
je
or
dec
and
jge
xchg
fildl
inc
ss
lea
xor
subl
pop
nop
and
adc
jne
fwait
js
lods
pop
test
cmp
pop
xor
icebp
cmp
fs
in
dec
jo
test
jle
push
add
negl
push
cmp
adc
jle
les
outsl
out
xor
jne
fimuls
inc
ja
test
inc
cmc
stos
shr
and
xchg
pop
fmull
xlat
or
or
pushl
dec
stos
and
pop
xchg
aaa
loop
dec
xor
dec
lock
ss
sbb
subb
ret
adc
xor
jne
jbe
leave
sbb
pusha
jl
dec
inc
xchg
cmp
and
in
jle
add
push
out
mov
in
pop
sub
mov
movsl
andl
loopne
or
mov
push
xor
testb
mov
sbb
out
xorb
xlat
pushf
das
push
je
pop
clc
adc
cmp
inc
hlt
fsubrl
and
fisubl
fidivrs
add
adc
popf
out
or
inc
sbb
adc
popa
cmp
lahf
jp
fidivs
xor
incb
cmp
aas
repnz
jecxz
ljmp
fs
inc
add
or
frstor
cld
xor
push
add
ja
adc
sbb
and
les
adc
xchg
xor
push
ljmp
xchg
cwtl
cmpsb
cmp
popa
scas
adc
push
xor
and
jg
out
jg
test
sbb
sbb
pop
cmp
loope
inc
add
testb
dec
cmp
je
adc
popa
loope
sbb
xor
sbb
or
adc
mov
add
pop
lock
loopne
mov
inc
add
pop
pop
popa
inc
jl
fwait
or
insb
and
mov
shl
adc
push
sub
jo
imul
sub
adc
lock
arpl
popa
cli
mov
and
cmp
sub
add
adc
xorb
rcll
push
pop
pop
adc
aas
mov
nop
mov
dec
sbb
push
sarb
loop
leave
mov
fs
lds
arpl
in
or
dec
ss
mov
or
and
add
movsl
loope
jbe
mov
or
outsl
int
and
add
xor
mov
fdivr
cmp
and
dec
or
mov
aam
mov
sbb
out
enter
dec
cmp
mov
dec
add
int3
inc
in
push
pop
loopne
lret
dec
xchg
nop
dec
cld
mov
push
xchg
in
in
pushf
cmp
aas
test
inc
fstps
out
dec
jne
adc
test
scas
or
fnstcw
add
icebp
xchg
xchg
icebp
pop
fmulp
test
arpl
push
cmp
add
stos
dec
shll
add
lock
or
ret
cmp
insl
inc
or
and
loop
sub
lret
bound
sub
test
mov
loopne
shl
inc
fnsave
test
mov
xchg
mov
icebp
stos
cmp
ljmp
mov
mov
ja
loopne
popa
aad
mov
dec
imul
dec
rcr
repz
inc
sub
in
pop
cmp
push
stos
push
cwtl
xor
int
mov
or
xor
scas
clc
fcoml
cmp
stc
loop
aaa
mov
add
xlat
dec
icebp
mov
cmpsl
out
lcall
push
mov
dec
divb
out
lret
decl
subb
jnp
inc
fdivr
cmpxchg
call
pop
xor
fcoms
dec
fsubr
mov
negl
sbb
mov
test
in
out
frstor
ret
jecxz
xor
psraw
xor
cmpsb
fdiv
sahf
dec
push
cmp
stc
ficompl
or
add
adc
stc
xchg
lods
xor
dec
push
inc
lcall
jecxz
jns
push
cmp
xchg
mov
addr16
push
jecxz
jns
or
dec
xor
lahf
add
mov
adc
jl
imul
loopne
clc
ljmp
nop
inc
movsl
pop
mov
mov
ss
adc
and
xor
dec
cmc
fwait
adc
lods
ror
stos
mov
inc
das
rcll
stc
repnz
cld
les
add
movsl
sti
sbb
scas
ljmp
sub
dec
leave
xchg
jg
mov
xchg
xchg
xor
push
orl
test
mov
inc
sub
test
inc
fs
inc
cli
mov
or
clc
pop
or
mov
aam
and
int
fbld
push
sbb
cmc
sbb
in
pop
dec
jmp
or
jle
sarb
outsl
loope
lret
adc
sub
lock
sub
les
imul
ficomps
inc
add
cmp
and
repnz
pop
mov
sub
inc
scas
xor
movb
fistpl
xchg
and
mov
negb
xchg
mov
sbb
pop
dec
aaa
inc
sub
fs
test
fcomps
repz
xchg
hlt
daa
add
outsl
add
imul
xchg
lock
rcrb
ffreep
lds
add
xor
mov
mov
add
sbb
push
in
adc
cs
mov
out
inc
je
fisubl
divb
loope
fld
xlat
loope
add
popa
loop
adc
mov
add
push
push
pop
or
stos
cmpl
cwtl
sbb
jnp
in
xchg
fnstenv
ljmp
cmp
test
dec
add
loopne
or
mulb
pop
lock
scas
sbb
pop
std
ret
inc
push
push
jnp
lods
pushf
sti
sub
loope
popl
ret
mov
push
push
orl
fiadds
std
add
sbb
rorl
pop
or
fdivl
fisubs
cmp
das
jns
xor
shlb
stos
aad
and
testb
xchg
xor
adc
stos
add
or
cld
icebp
inc
pop
ss
inc
inc
xor
in
push
fsubrs
loop
cs
and
in
leave
xor
je,pn
inc
push
jl
jbe
inc
mov
lock
jg
mov
pushf
inc
fisubrs
call
in
jp
clc
lock
adc
pop
jns
out
mov
dec
push
dec
ljmp
push
nop
mov
jae
dec
call
xor
dec
imul
pop
push
jne
push
and
jnp
dec
aam
lock
int3
inc
and
sub
xor
movsl
movsb
les
imul
dec
dec
pop
push
sbb
fimuls
call
xchg
fildl
not
popf
jmp
in
out
mov
shr
xchg
in
aam
daa
mov
sub
push
lods
mov
cmpsb
in
je
idiv
jae
sub
loop
fsubrl
or
jmp
in
loopne
cs
pop
xchg
xor
fsubs
add
repz
das
mov
jmp
out
sbb
adc
pop
mov
sbb
lcall
repz
aad
add
and
add
mov
push
mov
mov
test
repz
sub
mov
jmp
std
scas
xchg
and
daa
inc
ja
sub
pop
enter
sub
test
xchg
aam
and
outsl
mov
dec
mov
mov
xor
or
loopne
xor
or
xchg
sbb
call
pusha
push
push
and
cmp
fmuls
shr
insl
incl
movsl
pop
addr16
pop
sbb
inc
mov
repnz
mov
cmpsb
cld
adc
bound
xor
cld
outsl
jecxz,pn
cmp
sub
inc
sbb
mov
or
sbb
and
sbb
add
xor
fstp
cmovb
ror
and
frstor
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
inc
fsubp
lret
sub
lret
jns
add
add
jb
add
loop
cmp
scas
sbb
test
jecxz
adc
arpl
lods
hlt
cltd
mov
push
pop
cmp
cmp
cmp
jp
cmp
cmp
xchg
outsb
add
xchg
lock
daa
xor
lret
in
jecxz
push
sub
xor
cmp
cmp
jle
sub
cmp
add
aaa
lcall
cmp
test
dec
xor
and
jecxz
cmpl
ficoms
jecxz
mov
shl
xchg
add
cld
jecxz
pop
rcll
test
cmp
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
push
lods
call
jnp
loop
in
test
cmp
mov
mov
mov
je
enter
cli
in
xor
jge
jecxz
mov
es
cmp
mov
je
enter
enter
or
daa
xchg
bt
xchg
lods
out
sarl
cli
in
xor
jge
jecxz
mov
imul
clc
jae
cmp
cmp
cmp
cmp
or
daa
xchg
bt
xchg
lods
out
sarl
aaa
rcr
imull
jecxz
test
cmp
cmp
or
daa
xchg
btrl
lods
out
sarl
aaa
rorb
scas
mov
xchg
push
inc
inc
lcall
mov
jl
adc
jecxz
test
mov
je
enter
enter
or
daa
xchg
test
jl
movsl
jecxz
add
cmp
or
inc
inc
lcall
mov
in
pop
and
or
and
cmp
cmp
cli
fwait
cmp
mov
arpl
fisttps
mov
add
test
jecxz
add
cmp
mov
push
int
movsl
xor
cmp
cmp
in
jnp
cs
iret
pop
dec
aas
les
orb
out
in
adc
aas
addr16
bound
jae
cmpb
out
cmp
mov
xchg
sub
or
xchg
add
jb
packuswb
jns
pop
sti
imul
lcall
push
push
subl
xor
push
hlt
fyl2x
adc
fdivrl
test
into
add
xor
cmp
aad
inc
push
cmp
movsb
stc
xchg
repnz
inc
add
sbb
cli
pop
sub
xchg
leave
les
inc
in
cltd
jnp
ja
nop
in
inc
push
add
dec
test
xor
outsl
and
mov
ret
aaa
fwait
movsb
mov
mov
ret
push
mov
out
repz
xor
jmp
movsl
add
int3
scas
lock
xor
outsb
jbe
cmp
jg
ja
sbb
icebp
cmp
outsl
cmp
cmp
push
dec
cmp
sub
inc
and
dec
jle
movsb
mov
jns
mov
mov
push
test
loopne
sbb
arpl
push
loop
add
mov
cltd
pop
lock
lods
call
jae
jo
je
and
and
test
mov
xchg
add
scas
mov
ret
test
cmp
adc
adc
sti
mov
inc
xchg
mov
mov
dec
ss
sub
stc
lods
xchg
pop
notb
jp
flds
in
sub
in
imul
out
cltd
dec
fwait
mov
shll
imul
pop
aaa
jbe
xor
ds
xor
jge
lcall
xor
and
mov
mov
inc
std
loope
mov
inc
cmp
ret
cmp
les
flds
out
aad
mov
testb
sub
shll
pop
pop
divl
pop
sbbl
sbb
les
jle
scas
ret
movsb
into
push
mov
and
ja
jb
fnstenv
in
stc
ss
or
lods
addl
xor
jg
outsb
pop
cmpsl
mov
mov
sbb
test
sub
mov
enter
pop
jmp
daa
and
pop
sub
clc
mov
scas
sub
and
shrl
clc
popa
pop
mov
dec
add
pop
add
testl
xor
es
mov
leave
scas
add
adc
pop
sub
das
add
bnd
jp
dec
stos
fistpl
or
sub
outsl
dec
daa
xchg
movsl
pushl
imul
adc
aad
or
or
js
jo
xchg
mov
leave
xorl
mov
cmp
jge
stc
mov
std
inc
xor
mov
insb
xchg
mulb
icebp
xor
daa
cli
or
cmpsl
test
push
repz
cld
xor
imul
push
or
jnp
mov
add
aaa
ljmp
jle
flds
out
cli
jle
clc
movsl
sub
adc
repz
es
outsl
inc
push
mov
xor
loope
mov
cmp
sub
jno
aas
lock
aas
mov
cmp
in
in
pop
cmp
jmp
clc
imul
jge
xor
in
mov
dec
dec
xor
mov
je
add
xchg
je
nop
and
neg
mov
xor
bound
or
and
iret
mov
mov
cs
je
sbb
stos
push
int3
addr16
jae
lods
cli
test
pop
repnz
xchg
mov
repz
mov
mov
addr16
jg
cmpsl
add
hlt
jae
fsincos
or
cld
inc
cmp
lahf
sub
scas
adc
in
inc
aaa
xor
mov
dec
sarl
lods
push
sahf
sub
fldcw
push
testw
xor
fisubrs
mov
and
xor
out
out
inc
mov
ja
sub
and
jp
xor
rcll
push
xor
sarb
inc
sub
xchg
or
arpl
stc
add
mov
dec
stos
es
adc
jae
push
add
and
cmp
jae
pop
fsubrs
xor
mov
mov
dec
or
sub
jle
inc
cmp
loopne
rcll
sbb
xchg
pop
mov
fcompl
addr16
repz
int
sub
aad
fmul
jmp
mov
mov
sub
sbb
and
lods
test
aaa
mov
js
dec
jg
paddd
mov
bound
fcompl
push
pop
sbbb
mov
xchg
push
jmp
leave
xchg
dec
in
xor
inc
pushf
inc
gs
cmp
or
inc
cmpsl
test
dec
xor
test
sarb
adc
mov
sub
into
rcl
shll
sbb
pop
add
and
cmp
imul
aam
jo
add
cmp
pop
mov
clc
hlt
fisubrs
or
xchg
outsl
test
insl
lret
fisubs
add
in
shl
cmp
xchg
push
out
fistpl
mov
repz
add
or
xor
loopne
addb
mov
rep
push
cmp
fdivrs
hlt
sub
cli
sbb
mov
pop
xor
imul
inc
mov
cmp
add
inc
stos
lock
mov
movsb
xor
cmp
lret
mov
sti
sarb
xchg
mov
add
push
ret
and
push
cmp
test
pop
adc
sub
jb
xor
xchg
push
loope
pop
xchg
cmp
xorb
mov
add
ja
aaa
mov
cmp
pop
inc
xchg
jecxz
mov
pop
mov
daa
daa
cmc
movsb
int
push
sub
cmp
stc
push
psubsw
lods
sbbb
inc
and
into
pop
lods
mov
pushf
sub
jo
std
fucomip
and
mov
cmp
xor
test
and
jmp
jb
out
add
jns
push
stos
adc
mov
fsts
sub
inc
pop
lahf
fisubrl
lret
jmp
push
cmp
dec
xchg
test
inc
or
cmp
jae
loope
mov
jo
mov
xlat
roll
cli
or
xchg
jmp
mov
cmp
xchg
aaa
add
xor
test
test
lods
and
jp
imul
dec
mov
sahf
push
out
or
sub
cmp
cli
xchg
stc
outsl
iret
sbb
fnsave
outsl
sbb
sti
scas
xlat
ss
cmpl
pop
dec
inc
jge
mov
dec
sbb
xchg
xor
cmp
pop
xchg
jp
xchg
or
mov
lret
cmp
fstl
xchg
push
movsb
pop
push
add
jecxz
fistpl
in
jecxz
xchg
dec
clc
mov
and
fs
test
and
or
jle
sub
sbb
mov
cmpsb
and
mov
or
push
ljmp
pusha
push
and
pop
sbb
sbb
pop
pop
jno
cmp
mov
sub
and
rep
loopne
call
sub
jp
insl
idivl
jno
xchg
pop
subb
imul
pop
jb
test
fmuls
jecxz
mov
add
clc
dec
push
push
push
and
jmp
lds
push
lock
xchg
inc
in
pop
cld
leave
mul
xchg
pop
mov
ss
mov
dec
bound
jns
jmp
xchg
add
xchg
pusha
aad
mov
xchg
mov
out
push
push
sub
mov
jecxz
test
xchg
dec
lahf
popf
lret
roll
aad
add
push
mov
sub
mov
iret
push
jmp
push
mov
jo
call
mov
sub
sbb
adc
les
out
add
jl
xchg
cmp
push
or
lret
jg
sub
inc
sub
jmp
test
cmpsl
mov
cli
lret
imul
ss
sbb
mov
popa
ficoml
jecxz
movsl
pop
push
pop
es
mov
mov
sbbl
nop
pop
add
dec
adc
iret
test
test
push
cltd
mov
or
fmul
pusha
je
pusha
loopne
insb
jge
jg
sti
jae
cmp
mov
cmp
stos
sub
jns
sbb
andl
xchg
xor
push
xorb
out
jecxz
loop
xor
idivb
dec
jge
cmpl
mov
ja
push
fcomip
mov
mov
mov
outsl
sub
lcall
bound
fsubrs
rcll
stos
sub
push
movsb
out
mov
jg
clc
mov
and
mov
lcall
jo
addb
loop
stos
xorl
xor
inc
push
push
sub
ljmp
cltd
cmp
sbb
and
xor
pop
pop
stos
loope
push
mov
je
outsl
sbb
add
mov
lret
jnp
ljmp
aad
std
sub
dec
cmp
xor
loop
sbb
xor
or
in
mov
cmp
sbb
ret
jp
cmpsl
ficompl
pop
cmp
and
lret
test
cmp
lods
or
shr
mov
pop
popf
adc
inc
int
dec
repnz
push
mov
or
fisubrl
addl
push
push
jecxz
movsl
add
out
mov
scas
lret
aas
xchg
aam
pusha
fs
gs
push
mov
int
lahf
iret
fdivrp
addb
repz
mov
cld
sub
push
rorl
shlb
stos
das
push
outsb
jge
out
xor
insl
fwait
lahf
or
xchg
fcompl
push
dec
dec
xchg
and
pop
cmpsl
cli
nop
out
or
jne
mov
and
orb
xchg
mov
adc
pop
inc
imul
sub
and
inc
cmpsl
jg
cmpsb
push
hlt
xor
imul
and
aam
call
and
add
dec
push
daa
fcomp
scas
sti
test
rolb
hlt
testb
fld
aas
scas
imul
repnz
sar
cmp
mov
jle
cs
push
scas
scas
ss
mov
jns
cmp
popa
push
dec
js
cmp
clc
leave
pop
cmpb
pop
xchg
aas
add
dec
jns
cmpl
and
jbe
cli
jmp
cmp
adc
jo
push
cmp
loop
movb
test
pop
out
mov
jo
imul
out
popl
iret
insl
jb
cmp
sub
mov
mov
jbe
jmp
mov
mov
les
out
insl
jmp
cltd
insl
mov
mov
and
pop
or
xchg
or
xchg
loopne
mov
jne
sbb
and
pop
lods
inc
pop
mov
pop
cld
add
fildl
cmp
popa
cmpsb
sub
mov
loope
je
and
lods
pop
lret
pop
jo
pop
sbb
fisubrs
test
and
dec
jne
cmp
mov
mov
add
pmullw
out
arpl
daa
test
xlat
sbb
mov
jecxz
mov
lock
loope
outsb
imul
lds
rcll
lret
inc
xchg
rolb
dec
or
mov
xor
loop
pop
inc
into
dec
adc
add
push
mov
and
insb
sub
dec
ret
xor
daa
xchg
mov
inc
bound
push
push
add
add
inc
fcmovbe
sbb
outsl
insl
cli
push
lds
adc
in
sbb
add
jo
daa
sbbb
enter
pop
testb
loopne
dec
and
or
jno
add
add
pusha
inc
mov
inc
pop
repnz
jg
mov
adc
dec
add
sbb
mov
std
loopne
adc
mov
pop
sbb
hlt
xor
inc
mov
out
jge
cmc
icebp
loopne
jb
adc
xor
cmc
div
repnz
enter
shl
adc
sahf
mov
test
dec
psubb
inc
pop
sbb
adc
in
insl
push
pop
ret
sub
sbb
stos
or
fisubl
sub
mov
jmp
inc
imul
dec
mov
sarl
addb
push
adc
loop
add
add
sti
add
mov
pop
xorl
jb,pt
fiadds
dec
add
sub
test
and
shlb
call
add
mov
mov
test
leave
mov
adc
nop
push
or
clc
lock
rcll
xor
ret
or
add
xchg
leave
mov
rcrb
add
mov
or
sbb
xchg
push
call
xchg
imul
xor
rorb
mov
addb
mov
xor
add
out
jns
testb
dec
bound
sub
inc
jl
getsec
clc
lds
xor
adc
leave
shll
mov
dec
cmc
call
mov
addr16
xchg
xor
jae
inc
cmpsb
mov
test
push
xor
nop
cmc
es
or
push
adc
sub
jmp
sub
pusha
jns
in
lock
sarb
scas
sub
sti
cmp
push
adc
fstl
loope
jl
cmpsl
loopne
pushf
imul
stc
jbe
test
sbb
dec
pushf
cmp
push
out
js
add
dec
push
xchg
mov
jl
cmp
sub
adc
xor
cwtl
and
adc
icebp
daa
repnz
add
test
jb
ret
fsubrs
or
adcb
adc
adc
popf
enter
popf
and
rcrl
cmc
xchg
pop
jp
pop
add
jno
jnp
cvtps2pi
je
shrb
xor
sbb
adc
push
cmp
cwtl
jl
out
and
sub
sub
pop
mov
cmpsb
test
pop
add
cmp
jno
xor
test
clc
mov
mov
es
xor
or
sarl
fmull
mov
mov
mov
adc
or
test
cmp
test
repnz
inc
sbb
dec
pop
cmp
cltd
std
inc
roll
sarl
scas
dec
cmp
mov
out
sub
sti
add
inc
imul
sbb
jp
push
or
rorb
enter
out
mov
xchg
mov
enter
dec
jo
jl
mov
arpl
and
pop
and
xchg
faddl
push
andb
iret
sahf
pop
es
lock
mov
add
add
or
mov
lods
xchg
jne
xchg
clc
jg
add
ja
cwtl
cmp
mov
mov
jbe
dec
xor
xor
int3
mov
adc
push
cmp
addb
jl
stc
in
pop
mov
push
pop
cmpb
cmp
jo
std
add
dec
cmc
xor
dec
andb
bound
jae
jl
xor
pusha
popf
ja
jns
into
stos
loopne
sbb
push
loopne
inc
aad
cltd
fsubs
push
xchg
int3
pop
xor
call
sbb
imul
xorb
mov
mov
sbb
out
add
lods
mov
loop
xchg
lods
sbb
test
stc
sbb
add
sbb
push
movsl
add
sbb
inc
jl
push
psubb
std
push
adc
cmp
add
cwtl
dec
add
js
mov
arpl
jne
lahf
mov
test
xchg
sub
add
push
outsb
and
aaa
xor
jo
in
pop
popf
inc
cmp
lds
sub
pusha
sbb
xor
icebp
mov
inc
sahf
jb
jne
add
clc
fisubl
sarl
xchg
push
and
pusha
out
push
and
insb
pop
ret
or
int
cmp
sbb
sbb
pop
adc
pop
push
mov
bound
jo
xor
nop
jecxz
jo
xorl
or
or
xchg
orl
cwtl
push
insl
mov
sbb
out
xchg
and
pop
shrb
daa
mov
sahf
mov
stc
lock
fwait
pop
cld
add
das
jnp
add
cmp
test
mov
dec
mov
cmc
loop
ds
xchg
push
std
clc
fs
pop
out
rclb
nop
enter
cmp
in
push
sub
xchg
ret
das
sub
xor
or
jo
sbbl
sbb
cli
adcb
add
fisttpll
jb
or
and
iret
add
pusha
add
push
pop
push
sub
sub
stos
mov
or
pop
out
aad
add
jle
mov
scas
scas
pop
frstor
cmp
add
mov
cmp
pushf
sbb
ja
enter
fimull
je
les
and
jo
xlat
or
or
add
mov
mov
mov
jg
dec
inc
fbld
add
xchg
int3
and
test
aad
fs
idivb
xchg
scas
adc
subl
sub
enter
movsb
inc
add
xor
gs
sub
mov
adc
jp
repz
cmpsb
ret
jns
cmp
xchg
es
pop
xchg
inc
cwtl
imul
inc
sbbb
add
xchg
icebp
aaa
and
push
mov
xchg
pop
cmp
adc
adc
or
jmp
xor
jnp
jl
jp
inc
rcr
cli
xor
stos
xchg
std
arpl
add
outsb
daa
lret
cmp
into
test
jmp
xor
push
rorb
repnz
mov
mov
xchg
scas
fldl
lcall
ret
xor
xor
xchg
std
and
sbb
xchg
add
cmpl
dec
insb
les
pop
fldl
and
pushf
mov
push
idivl
jnp
test
jnp
cmp
incb
subb
pusha
and
outsb
mov
mov
ret
popl
inc
mov
cmp
cwtl
loopne
repnz
push
subl
imul
pop
outsl
pusha
pusha
stc
xor
or
sbb
rorl
sbb
sbb
xchg
mov
aam
or
add
or
ja
mov
inc
or
mov
lcall
int
repnz
add
out
mov
call
push
inc
xor
add
pop
repnz
in
js
sarl
ret
mov
fidivrs
and
repnz
sbb
xchg
daa
sbb
loop
pop
and
aaa
adc
rcr
sbb
push
add
sbbb
enter
iret
pop
jae
std
pop
int
cmp
inc
mov
add
pop
dec
les
sub
ja
test
or
pushf
popf
call
sbb
xchg
test
mov
push
jns
mov
push
mov
sbb
dec
xor
cwtl
add
sub
mov
mov
rcrb
mov
aas
and
xor
das
inc
xchg
cmp
aad
or
bound
je
icebp
xor
sub
pop
sahf
cmp
repz
dec
mov
xchg
out
mov
xchg
in
dec
mov
into
adc
inc
jl
pop
cmp
xor
push
int
loop
or
notl
mov
mov
xchg
mov
test
test
and
bound
cmc
jae
stc
mov
add
mov
pop
pusha
xchg
in
push
pop
mov
pop
loopne
js
adc
loop
xor
sbb
lock
and
les
loop
push
es
sbb
faddl
movsl
adc
mov
mov
rorb
pushf
cmp
outsb
sti
enterw
and
inc
jp
lret
xlat
push
mov
pop
js
fs
or
jge
pop
pop
and
xchg
pop
pop
clc
insb
shl
mov
sub
enter
lods
stc
add
fldl2t
xchg
rol
rclb
js
adc
arpl
loopne
inc
mov
testl
xchg
sbb
cli
dec
nop
or
mov
pusha
add
sub
mov
rol
js
pop
or
cmp
add
adc
movsb
loope
or
je
adc
leave
cmpsl
test
and
add
xchg
nop
push
xor
mov
mov
dec
sub
mov
jge
les
mov
gs
sbb
cmc
xchg
hlt
sbb
arpl
dec
xor
sbb
cmp
testb
pop
loop
sub
mov
lds
push
pop
cmpb
ja
or
cmp
cmp
and
stc
fsubrp
adc
mov
into
sbb
cmp
push
loop
std
sbb
sahf
bound
push
push
fidivs
and
mov
mov
scas
std
or
mov
sar
xchg
out
mov
mov
and
jno
cmpsl
or
add
andl
dec
inc
dec
xchg
outsl
rorb
and
mov
test
loope
pusha
fsub
mov
cmc
mov
aam
or
jb
adc
jnp
daa
jge
push
push
push
lock
cmc
lahf
sbb
or
stc
bound
stos
mov
xchg
cld
and
test
ljmp
xor
outsb
add
jno
jmp
sub
push
xor
push
push
fists
dec
xor
cmp
add
jmp
dec
push
mov
std
sbb
js
sbb
rcrb
or
mov
fadds
xchg
xchg
dec
xchg
fsubrs
cli
rcrb
push
sbb
fcompl
add
scas
cmc
in
fisttps
arpl
pop
cmpl
insl
jp
lock
push
push
gs
cs
loopne
push
jmp
sub
lds
fucomip
and
add
push
adc
or
fstps
pusha
add
hlt
call
jns
ljmp
mull
leave
pop
test
jno
add
cmp
xor
cmp
pop
mov
enter
or
subl
popa
xchg
pop
cmp
cltd
add
in
add
mov
sub
in
mov
insb
ret
cmpsl
aad
call
adc
dec
inc
enter
add
jns
imul
dec
dec
loopne
push
jge
jle
mov
andb
or
jae
push
push
cmp
push
xor
stos
pop
pop
aaa
pop
inc
pushf
mov
xchg
call
push
shrb
add
out
lcall
pop
ret
insb
test
xor
push
mov
inc
shlb
sub
js
lock
fsubrl
xor
in
je
scas
jle
popa
mov
lods
int3
dec
xor
and
xchg
scas
fstpl
cltd
scas
sub
inc
outsb
add
out
leave
int3
cmp
and
mov
and
loop
add
sahf
jg
mov
pusha
mov
orl
es
pop
and
fistpll
add
ss
or
pop
mov
clc
adc
push
idivl
repz
jo
mov
xchg
jge
ja
cmpb
mov
fistl
mov
sbb
cwtl
dec
xchg
jne
push
pop
insb
addr16
test
xor
and
addr16
lds
lods
adc
jle
lods
adcb
gs
xor
in
mov
fistpll
pop
xchg
xchg
adc
fs
cmp
adc
test
jp
add
xor
mov
adc
test
aaa
clc
sub
jnp
pop
std
insb
in
test
inc
arpl
or
add
xchg
push
pushl
dec
popf
cmpsl
fstps
shr
sub
leave
dec
adcb
cltd
jo
test
nop
mov
or
add
push
xor
push
xchg
inc
push
add
pop
in
add
and
dec
jo
adc
mov
add
adc
add
cmp
pop
mov
dec
or
mov
test
push
stos
sub
adc
loopw
std
imul
add
push
or
pop
lock
call
cmc
cli
scas
cltd
mov
and
sub
add
xor
out
push
cmp
test
cmc
mov
push
int3
xchg
and
and
movsb
push
js
dec
cmp
rcrl
push
clc
and
sub
sbb
nop
stos
pusha
xchg
sbb
dec
inc
arpl
test
movsl
adc
cmp
add
sbb
enter
push
sbb
add
in
jmp
lock
push
pusha
stos
and
iret
xor
lret
dec
mov
sbb
add
inc
imul
into
pop
rcrl
fdivl
clc
or
inc
inc
jo
add
xchg
xchg
dec
dec
push
mov
adc
cmc
jg
insb
add
jns
pop
arpl
int3
rcrb
inc
cwtl
and
mov
lock
add
inc
and
hlt
jno
nop
int3
imul
aas
ja
mov
jmp
ss
add
pop
adc
dec
pop
arpl
and
sbb
imull
and
das
out
into
cwtl
pop
js
mov
inc
outsb
arpl
in
subl
push
pop
in
addb
loop
pop
jecxz
ret
add
cmc
push
call
test
test
cmpsb
and
pop
out
xor
sbb
scas
fnsave
jl
and
push
dec
ret
loopne
loope
sbb
add
push
outsl
leave
mov
or
pusha
adc
push
jg
rorb
add
ficoml
pop
outsb
leave
mov
in
add
stos
push
jecxz
mov
mov
push
lock
sub
fs
fs
adc
inc
xor
lock
ds
mov
mov
adc
outsb
js
pop
mov
and
dec
jns
popf
add
push
xchg
sbbb
sbb
loope
ret
pop
adc
inc
addl
fisubs
imul
pop
sar
sub
enter
add
ret
jns
jno
sbb
add
and
lcall
testb
sbb
jge
jno
test
mov
adc
and
jno
push
and
cli
out
test
and
or
or
add
mov
pop
pop
fnsave
cwtl
scas
lret
cmc
std
jecxz
dec
cmp
inc
xorb
sub
inc
icebp
add
inc
cmpsl
push
push
pop
sub
sbb
mov
int3
and
leave
sbb
add
pop
andb
andb
dec
subb
cld
add
lahf
inc
bound
adc
scas
xchg
mov
std
sbb
aas
push
call
push
mov
loop
xchg
std
pop
shrb
inc
inc
dec
jp
aas
shl
into
aaa
fcompp
int3
add
lret
and
push
aam
xchg
sub
ret
add
cmpsb
flds
ja
lods
adc
in
dec
inc
nop
clc
dec
andl
cltd
cwtl
sbb
push
and
mov
insb
ret
or
push
mov
sub
and
jg
inc
in
ds
int
sbb
push
and
movzbl
addl
jge
cmpl
adc
and
xchg
aam
adc
ror
test
cwtl
and
jmp
xchg
mov
xadd
sbb
mov
sub
adc
in
add
or
adc
shlb
or
inc
pop
gs
and
pop
fldcw
xor
pushf
add
or
movsl
into
xor
push
mov
in
mov
pop
les
test
test
es
xchg
dec
stc
andl
pop
or
jl
gs
and
lahf
inc
xor
repnz
xor
test
insb
test
aaa
add
orb
jmp
cmp
adc
dec
add
add
fs
sti
adc
fwait
hlt
add
or
jo
mov
jne
bound
adc
jle
pop
jp
and
bound
mov
push
das
cwtl
and
sub
stos
popf
js
add
push
movsl
cmc
fucom
lea
pop
xlat
cltd
xchg
out
cmp
jbe
pop
xchg
je
inc
addb
clc
js
out
fstpl
jge
add
and
or
xchg
or
insb
jl
sbb
inc
pop
out
and
mov
xchg
mov
jo
inc
repnz
aas
nop
movsb
daa
sub
dec
and
push
add
xchg
push
add
loope
jge
dec
mov
xor
sbb
or
and
into
imul
push
rcr
pop
std
call
sub
inc
mov
rorb
jae
push
xchg
xor
call
inc
jge
js
xor
ret
push
fstpt
jg
lahf
jne
test
stc
lods
dec
and
loopne
mov
pushf
test
imull
push
les
sarb
sbb
and
scas
mov
call
gs
or
rclb
pop
addr16
lcall
xchg
cmp
in
in
pusha
mov
pop
pop
xor
andb
cmc
mov
inc
movsb
add
jae
and
pop
jbe
fs
fnstsw
pop
jg
push
outsl
rol
mov
les
hlt
adc
cmpsb
or
insb
push
adc
scas
in
cmp
in
adc
fidivrs
repnz
xor
insb
add
mov
clc
sbb
js
pushaw
not
loopne
pop
mov
stc
inc
sar
mov
add
add
lahf
outsb
call
sub
daa
dec
adcl
mov
adc
cmp
aam
or
clc
add
or
mov
in
push
dec
or
add
icebp
sub
inc
cmp
mov
jg
push
jmp
pop
push
inc
arpl
mov
cmp
mov
sbb
loope
test
insl
test
xchg
pop
andb
pop
ds
and
arpl
in
adc
and
int3
enter
in
popa
dec
sarb
and
insl
pusha
in
cmp
pop
pop
fs
push
ret
pop
pop
inc
jmp
in
and
add
or
mov
ljmp
and
sbb
sub
int
out
sub
in
pusha
xchg
add
rclb
daa
popa
jb
pop
int
lock
dec
jo
mov
cld
or
fstl
and
loopne
jo
jl
daa
loopne
pusha
cmc
adc
add
jb
adc
mov
adc
lret
cmpsl
adc
xor
and
cmc
aad
adc
insb
mov
stc
ret
nop
nop
and
push
pusha
repnz
xor
loope
inc
xor
mov
pushf
dec
ss
jmp
lods
inc
mov
rcrb
mov
and
adc
adc
les
sub
jg
inc
mov
add
out
jno
pop
adcb
add
test
pop
insl
add
maskmovq
testl
ror
pushf
mov
mov
popf
xchg
inc
es
test
addr16
dec
pop
dec
lock
pop
cmp
insb
adc
add
xor
pop
cld
mov
ds
mov
add
dec
int
jne
pusha
and
or
sbb
push
gs
movsb
pusha
out
push
mov
mov
stos
in
dec
xchg
jl,pn
mov
xor
lret
or
dec
notl
and
iret
or
pushf
add
out
mov
test
movsb
enter
outsl
xchg
adc
or
inc
mov
sub
dec
cmp
and
je
or
or
enter
shlb
or
and
add
xchg
mov
xchg
push
lods
push
out
aam
ds
data16
mov
outsl
rcll
hlt
aas
out
jns
movsl
adc
shrb
mov
cmpb
add
dec
addb
arpl
inc
pushf
fstp
std
cmp
sbb
pop
inc
orl
or
daa
fstps
add
movsl
sub
pop
shl
jae
add
cmp
mov
fcomps
sub
cli
pop
test
lds
in
aas
pop
test
xchg
dec
mov
fucomip
rorl
and
fcoml
test
cmp
or
mov
dec
push
add
mov
jae
push
out
pusha
cld
inc
insl
sub
inc
leave
rcl
adc
test
pushf
fisttpl
add
push
je
test
fdivp
add
mov
and
pop
or
pop
cmc
andl
leave
or
sub
mov
nop
pop
sbbb
jp
mov
popa
loope
cmp
cmc
mov
arpl
gs
or
jnp
scas
add
push
push
add
pop
sbb
movsb
add
add
mov
jmp
insb
add
jge
sub
mov
or
mov
sub
sub
mov
lahf
sbb
test
les
shl
or
xor
dec
lret
bound
cwtl
pop
mov
les
xchg
scas
sbb
dec
clc
aad
and
push
and
sbb
inc
mov
add
mov
push
jae
add
inc
mulb
stc
and
insb
inc
test
cwtl
mov
xchg
fwait
nop
and
test
fisubrl
call
cmp
cmc
repnz
add
or
cmpsl
pushf
scas
inc
add
stos
and
arpl
mov
adc
js
stc
call
or
test
or
movsl
cmpsl
xor
les
sub
fldenv
adc
jg
mov
mov
add
out
test
addb
fucom
mov
add
pop
movsb
xor
loopne
mov
cwtl
adcb
push
call
mov
sahf
call
in
jl
pusha
fsubrl
xor
cli
lds
enter
aad
and
inc
shrl
jmp
push
add
fs
not
test
das
mov
pop
cmp
sbb
js
dec
les
test
inc
dec
mov
aam
sbb
push
xor
jge
and
cmp
in
xchg
or
mov
cmp
lock
sbb
add
pop
clc
loopne
push
rorb
movsb
mov
push
nop
mov
lods
mov
sarb
std
in
cmp
or
dec
int
mov
jl
aaa
dec
mov
enter
push
dec
mov
pushf
xor
push
scas
lcall
cmp
fs
divb
inc
scas
outsl
and
rorl
std
xchg
add
pusha
repnz
sub
outsl
fidivs
mov
inc
repz
xchg
ss
mov
pop
fldt
add
out
inc
cmp
mov
subb
xchg
inc
cltd
add
xor
mov
hlt
add
jg
pop
fcomip
adcl
xchg
dec
xlat
inc
cwtl
push
lds
sub
or
popf
shl
pop
or
inc
xor
sbb
and
dec
sbb
iret
loopne
inc
mov
pop
into
pop
sub
cmp
push
xorb
hlt
sbb
dec
pusha
or
addb
cmp
add
iret
lret
xor
int3
fstps
sub
sarb
lea
inc
cld
and
add
dec
xchg
inc
leave
dec
jo
add
sub
pop
push
iret
push
popa
clc
repnz
aam
mov
repnz
lock
andl
adc
scas
and
mov
out
jo
lods
and
push
jl
icebp
test
daa
and
fisttpll
loop
or
out
fnstenv
xchg
and
mov
cmp
inc
push
pop
sbb
out
xchg
movsb
adc
adc
cmpl
push
fbld
fs
movsl
pusha
lds
dec
xor
mov
sahf
pop
addr16
es
lahf
icebp
bound
cmp
enter
fldl
stc
add
orb
inc
jae
loop
push
imul
add
clc
iret
insl
mov
sbb
std
or
daa
mov
imul
out
and
xor
push
xor
pop
outsb
add
fiaddl
icebp
or
sub
pop
repnz
dec
fucomi
or
jecxz
add
cltd
mov
scas
dec
jo
fcoml
nop
pop
outsl
pop
adc
mov
pop
add
outsb
jge
mov
mov
push
xchg
scas
sub
divl
shlb
xchg
addr16
popa
dec
sahf
dec
mov
stc
cmp
dec
sbb
add
push
and
or
hlt
jns
jge
cmp
xor
push
notb
pop
pop
rclb
fisttps
inc
add
xor
lea
xor
je
xlat
push
adcb
pop
mov
xchg
sub
pop
fstl
cmp
push
loopne
xchg
cmp
mov
add
mov
std
mov
xchg
test
lds
call
sahf
and
jo
add
adc
pop
inc
fmull
sub
push
rolb
lods
cmp
std
leave
movsl
xlat
dec
hlt
xor
push
sbb
push
js
pop
stos
push
pop
mov
xchg
and
and
inc
mov
add
shll
insb
test
pop
loopne
pop
dec
or
pop
mov
repz
pop
addl
sub
mov
dec
mov
xor
cli
add
outsl
pusha
fs
push
addl
xlat
into
leave
sub
fisubrl
adc
fmuls
mov
mov
insb
or
cmc
cmpsl
mov
or
sub
mov
mov
push
outsl
mov
mov
in
jo
movsb
mov
adc
inc
and
aas
lret
test
mov
outsl
nop
stc
mov
icebp
mov
dec
inc
enter
sbb
cli
mov
fldl
popf
gs
jmp
ja
rclb
bound
inc
andl
lods
or
push
adc
xor
inc
and
addl
call
lds
add
sub
int3
or
push
adc
pop
sbb
push
pop
xchg
dec
dec
mov
or
jg
clc
mov
pop
push
cmp
fbld
inc
ds
jmp
xorb
clc
mov
pop
gs
sub
aam
add
cmp
add
data16
daa
gs
pusha
popa
push
add
scas
in
mov
ret
imul
push
and
std
inc
scas
loope
faddp
add
jl
das
int3
inc
dec
add
jg
out
sbb
dec
fsubp
pop
int
mov
call
ret
or
mov
lar
push
jns
mov
sbb
xchg
orb
icebp
jo
dec
stos
sbb
adc
dec
mov
mov
mov
mov
or
ror
ss
pop
movsb
push
icebp
test
sbb
shrb
or
xor
sbb
adc
push
out
mov
repnz
inc
cmc
in
clc
cmp
test
fistpll
and
stc
insl
addb
ficoms
jo
lods
add
lret
incb
daa
add
insl
stc
popf
add
repnz
mov
add
mov
mov
shll
out
mov
ds
adc
xchg
les
in
lcall
les
mov
test
clc
loopne
inc
inc
adc
in
mov
xchg
mov
dec
mov
dec
pop
cmpsl
inc
adc
imul
pusha
pop
sti
loopne
push
in
mov
scas
fwait
and
lods
lret
bound
and
xor
add
fsubrs
add
sahf
or
stos
jno
lret
sbb
jecxz
test
cmp
sub
movsl
jno
or
mov
js
jmp
add
sub
fld
jbe
jne
push
gs
adc
push
cmp
add
mov
sub
mov
push
xchg
or
xor
sub
movb
loopne
cmc
dec
adc
push
inc
dec
ret
rol
loop
les
cmp
mov
popf
loopne
push
add
add
fsubrs
add
adc
jp
xchg
xor
sub
loope
mov
out
cmp
push
popf
cld
adc
sbb
push
std
sub
push
mov
jno
mov
add
imul
pop
mov
sbb
push
pop
lods
adc
dec
test
loope
rcl
les
adc
jne
in
push
and
mov
rorb
adc
dec
rolb
or
mov
or
hlt
enter
and
dec
add
inc
insb
scas
call
icebp
pushf
dec
sub
inc
lock
imul
and
outsl
sbb
or
outsb
jg
push
and
adc
lret
test
and
popf
pop
dec
hlt
clc
cmp
in
mov
pusha
icebp
out
inc
fs
mov
stc
jmp
movb
jo
test
adc
add
dec
cmp
je
cmp
pusha
enter
xchg
mov
push
jo
adc
ficoml
mov
faddl
inc
nop
cltd
mov
push
fsubs
and
add
out
loope
push
rol
nop
sahf
dec
mov
mov
in
add
lea
dec
ret
mov
push
add
lods
jg
lahf
xchg
adc
inc
add
dec
mov
xor
pop
and
sub
mov
sub
aam
insl
fwait
sbb
in
push
call
xchg
aaa
pop
scas
jo
sbb
push
jg
imul
enter
adc
pop
inc
push
add
jae
in
movsb
or
out
outsl
mov
lods
dec
dec
ret
dec
xor
pop
fmul
mov
add
in
pop
sub
lcall
lods
rolb
mov
das
sub
addb
imul
je
nop
sbb
je
test
add
cmp
xor
and
jp
sahf
jl
icebp
cmp
mov
pusha
stc
inc
sbb
idivb
sub
push
mov
test
push
int3
push
mov
or
es
clc
mov
pop
fsubrp
xchg
out
sub
mov
xor
jnp
hlt
cmp
stos
insl
repnz
xchg
fsubl
in
cmp
xor
rolb
scas
in
sbb
aad
pop
add
leave
lock
jmp
adc
loopne
jg
cltd
or
mov
ffree
movsb
sbb
daa
mov
inc
inc
les
pusha
mov
sti
push
push
or
jg
test
jge
das
xor
nop
pop
nop
jno
sbb
in
xchg
sbb
mov
jmp
es
test
out
push
xor
dec
enter
mov
lahf
add
add
xor
imul
andb
mov
add
aas
enter
dec
push
sub
push
mov
add
rcr
loope
adc
sub
inc
fdivrs
outsb
lahf
sbb
push
test
inc
je
jns
add
lods
icebp
or
cli
out
cmpb
add
pop
xorl
or
roll
cmpsl
ss
fdivrl
fdiv
in
cwtl
and
pop
mov
adc
pop
mov
aad
xorl
jne
cmc
push
les
jae
hlt
dec
and
lods
adc
sbb
ds
push
jl
pop
enter
add
movsb
pop
arpl
ror
div
bound
or
popa
test
adc
rolb
mov
jl
jmp
xchg
int
fisubrs
mov
cwtl
jne
sbbb
xchg
push
jns
and
and
or
sarb
push
loop
idivb
aas
mov
in
mov
xchg
or
pop
inc
jne
in
push
mov
daa
push
int
rclb
adc
inc
jns
mov
mov
xor
xchg
push
mov
add
cwtl
cmpsl
hlt
loopne
pop
or
test
sahf
out
loopne
xchg
and
adc
sahf
push
adc
and
or
add
lcall
xor
lods
lods
sbb
lds
mov
xchg
mov
cs
pushf
negl
xor
mov
xor
cmc
push
or
mov
push
in
jne
icebp
push
pushf
fs
mov
cmp
push
mov
ficoml
cld
rolb
pop
add
sub
repnz
repz
or
sbb
mov
add
stc
inc
enter
push
sub
or
arpl
daa
xchg
ds
jge
or
repnz
fadds
ja
mov
pop
cmp
xor
add
mov
add
fucomp
pop
dec
aas
mov
test
push
lods
mov
mov
and
jo
push
lds
mov
add
push
push
outsl
and
lea
lods
mov
add
inc
inc
out
xchg
lods
mov
cmp
push
stos
movsb
mov
add
ss
or
dec
aas
adc
xor
pushf
mov
add
and
adc
mov
call
pop
mov
jl
insl
or
mul
cmpsb
orb
nop
xchg
call
out
jno
jne
cwtl
dec
xor
inc
cmp
sbb
fdiv
push
add
popf
shrl
scas
mov
dec
loopne
insl
mov
or
xlat
shrb
stos
dec
add
movsb
push
lret
or
pop
aas
je
pushf
jo
and
outsb
adc
and
lods
push
repz
mov
fmulp
xchg
push
pop
mov
adcl
adc
jo
daa
fadds
nop
sub
sbb
pop
shll
xchg
pusha
jg
outsl
add
out
fwait
add
test
nop
insb
inc
aam
push
push
push
movsl
xchg
movsb
fcompl
sbbb
cli
ret
or
in
je
js
cmc
enter
inc
cwtl
mov
add
imul
xor
test
adc
lock
cwtl
incb
or
fcom
bound
mov
orb
push
mov
sbb
mov
pop
seta
inc
jae
push
push
loop
fbld
inc
rclb
cvtdq2ps
daa
cmp
xchg
dec
and
and
dec
inc
mov
std
pop
jg
mov
hlt
cs
xchg
jb
and
inc
mov
jo
mov
ljmp
xchg
adc
jbe
add
mov
imul
jnp
mov
dec
push
add
or
rolb
adc
stos
or
fistpll
insb
pop
daa
or
or
icebp
adc
outsl
sbb
int3
xor
mov
xor
aaa
iret
adc
rcrb
sub
incb
dec
arpl
or
xor
and
ret
push
xor
ds
test
add
sbb
out
push
dec
sbb
jp
cmp
adc
jo
or
orb
add
mov
rcrb
call
cmpb
sub
cwtl
les
mov
inc
bound
and
loop
cmp
mov
sbb
mov
imul
adc
xor
adcl
ljmp
lea
orl
inc
insl
push
xor
mov
hlt
push
adc
clc
stc
push
add
or
loopne
shl
or
push
xor
arpl
pusha
es
sbb
icebp
xchg
mov
les
dec
popl
sbb
sub
imul
xor
mov
pop
ficomps
lcall
test
inc
rclb
inc
or
pop
adc
sbb
xor
mov
outsl
xlat
and
adc
pop
cmp
jecxz
and
sbb
push
or
sbbb
or
add
mov
sbb
or
adc
aaa
addr16
adc
pop
and
xor
xor
lock
sbb
sbb
adc
insl
sub
pushf
and
xor
xchg
rorl
pop
and
jbe
orb
cwtl
add
cmpl
sbb
mov
inc
cmc
nop
mov
or
xor
inc
lret
mov
push
cmp
adc
sub
jno
cmp
and
loope
inc
push
adc
add
and
jmp
xchg
lret
mov
test
test
in
mov
sbb
and
mov
in
hlt
push
add
std
mov
pop
inc
test
int3
adcb
pushf
out
in
add
mov
jmp
pusha
pop
jae
lcall
jl
pop
adc
or
pop
cmpsl
mov
push
inc
adc
out
jae
and
andb
std
add
push
popa
xchg
push
jnp
push
pop
jne
xchg
xchg
adc
cmp
movsl
js
push
popf
or
push
adc
pop
add
sbb
adcb
push
daa
push
loopne
pop
enter
inc
fsts
adc
inc
sub
test
mov
aam
dec
or
jl
js
pop
push
dec
add
notl
sbb
inc
stc
inc
mov
dec
add
std
adc
add
jo
mov
movsl
add
mull
xchg
cmc
mov
add
jge
push
add
xchg
xchg
rorb
es
adc
cltd
add
xchg
notl
in
add
je
cmp
xchg
mov
cmpl
mov
bound
add
push
or
or
adc
add
push
cmpsl
push
movsl
enter
mov
sahf
dec
pop
bound
lock
add
push
daa
inc
popf
das
add
push
mov
mov
jl
mov
ret
push
and
gs
and
mov
std
stos
call
icebp
inc
in
int3
shrl
js
push
cmp
add
sbb
or
jne
out
inc
or
insb
sbb
testl
out
and
iret
jo
push
or
inc
ret
push
sbb
test
mov
sti
xchg
mov
xchg
insb
and
out
mov
pop
loope
sub
jl
std
fwait
dec
hlt
push
mov
push
scas
adc
jo
ds
nop
pop
jge
ret
or
sbb
xchg
inc
sbb
push
add
adc
repnz
add
ds
out
call
add
jo
cltd
call
loope
int
dec
test
and
pop
insb
inc
rclb
mov
lret
mov
cmp
scas
adc
lods
jnp
in
in
and
data16
sub
and
sub
mov
push
decl
cwtl
jae
inc
sbb
fucomp
and
inc
xchg
imul
fmuls
std
xor
xor
fmuls
or
popa
fcoml
js
dec
mov
ret
jmp
and
sub
cld
xchg
pop
adc
push
and
xchg
cmp
inc
cwtl
pusha
or
sub
pop
mov
pop
ja
insl
loopne
rcrl
adc
pop
dec
push
movsb
adc
mov
gs
jl
hlt
xchg
cmc
mov
jnp
pusha
pop
push
sub
mov
dec
fbld
cmc
add
inc
and
and
je
xchg
jo
ja
pop
add
lcall
insl
sqrtps
mov
in
rorb
or
lock
clc
les
cmp
pop
dec
pusha
mov
pop
push
mov
pop
or
in
rsm
sahf
cmp
orb
cmp
xor
dec
stc
and
add
dec
xor
filds
adc
and
scas
dec
out
and
ret
enter
jb
pop
or
jp
repnz
sub
dec
push
jg
les
enter
cmc
cwtl
pop
xchg
jp
fwait
testl
sub
loop
arpl
es
push
mov
and
nop
push
xchg
and
movlps
sub
jno
xor
mov
adc
pushf
push
sub
sbb
inc
xor
ds
mov
mov
jg
and
bound
mov
rcll
push
imul
test
mov
es
lock
pop
pop
fwait
mov
add
cld
jne
push
add
leave
mov
xchg
xchg
test
in
xorl
lods
addb
add
outsb
lret
dec
sub
push
jmp
addb
inc
pop
lds
mov
jge
pop
push
dec
mov
adc
mov
popa
idivb
inc
and
xor
in
orb
sub
or
or
mov
dec
dec
push
jmp
mov
and
rolb
cmp
incl
mov
mov
lcall
add
mov
inc
loopne
adc
addb
loope
fists
inc
outsb
jbe
nop
cld
and
sbb
aaa
fdiv
and
xlat
xor
cmp
cwtl
scas
dec
pop
add
not
mov
loope
pop
cmpsb
sub
jp
adc
mov
or
jg
push
mov
and
push
add
xchg
in
and
aam
cwtl
add
sbb
xchg
cmp
xor
into
pop
pop
ss
push
rcrb
or
dec
xchg
loopne
idivb
and
cmp
push
pusha
pop
ja
xor
xchg
mov
arpl
mov
sti
mov
stc
add
test
inc
jnp
adc
xchg
rorb
add
xchg
aad
pop
mov
sbbb
test
or
fs
mov
test
or
xor
mov
add
and
push
push
jo
fdivl
or
fwait
insb
or
dec
pusha
mov
mov
sbb
js
cwtl
add
lods
add
outsl
loope
fdivs
cmp
xorl
inc
nop
imul
xchg
nop
pop
arpl
movsb
pop
cmpsl
mov
mov
pop
inc
push
sbb
ja
pop
xchg
push
data16
xchg
inc
inc
insl
in
sub
inc
call
shl
enter
sbb
xchg
mov
cwtl
and
add
push
sub
dec
xchg
add
test
ret
dec
inc
movsb
or
pop
fsub
popf
pop
das
shlb
std
xor
xor
mov
int3
rol
cld
and
adc
scas
dec
xchg
xchg
dec
and
icebp
and
inc
call
add
push
inc
or
out
or
xchg
dec
add
mov
xchg
sbb
xchg
or
rorl
clc
aam
test
nop
dec
jmp
pushf
add
and
bound
aaa
xchg
xor
pushf
inc
pop
je
sub
mov
dec
xor
and
andb
and
sbb
pop
xor
lret
and
mov
mov
mov
add
add
loop
cmp
jne
jns
test
or
stos
test
cld
sub
int3
and
fs
mov
gs
or
cmpb
les
pop
je
imul
sbb
out
cmp
dec
out
jo
pop
push
pop
pop
int3
mov
jbe
pop
or
add
mov
mov
or
inc
pop
push
mov
sub
call
add
xchg
lods
sti
shl
aaa
js
sbb
pop
jo
dec
cmp
cs
sbb
ret
pusha
or
mov
dec
mov
dec
out
call
or
push
and
jecxz
mov
and
test
cmpsl
mov
shrb
add
cltd
cwtl
dec
imul
inc
enter
call
dec
adc
mov
bound
jbe
mov
daa
divl
inc
pop
push
jno
lahf
repz
jge
xchg
or
imul
add
sub
mov
in
popw
add
xchg
and
lods
jge
pusha
dec
sbb
cmp
les
jb
add
cmp
mov
ljmp
out
cmp
adc
enter
test
pop
popa
jl
push
je
mov
pushf
add
add
or
xchg
sbbb
jmp
test
pop
lahf
std
fbstp
jo
adc
faddl
mov
testb
and
clc
sti
pop
xchg
mov
adc
int3
les
or
gs
adc
xchg
sub
jo
roll
addr16
jge
cmpsl
out
or
dec
dec
pop
rcl
push
ds
add
insb
mov
out
sbb
shr
sub
aam
pop
dec
or
sahf
pop
cltd
xchg
add
je
adc
pop
leave
lods
add
hlt
in
jp
out
nop
mov
add
xchg
mov
mov
push
lods
or
jae
ud1
and
or
mov
icebp
aas
mov
add
cmp
mov
mov
orb
xchg
mov
outsl
mov
add
out
jno
xchg
popf
cmc
pop
rolb
and
pop
jl
sub
pop
aad
outsb
ret
inc
add
nop
cmp
rorl
adc
add
jo
loopne
nop
and
ret
mov
loopne
ret
loopne
enter
dec
test
mov
jo
cltd
dec
and
lods
sbb
std
cld
jbe
add
push
pop
and
in
ret
pusha
adc
fcomp
aam
adc
add
push
or
jno
mov
cld
jle
insb
and
dec
xchg
inc
jp
rclb
push
movsb
call
pusha
pusha
jbe
dec
subl
add
iret
or
xor
pop
dec
sub
pop
mov
pop
cwtl
dec
dec
jle
add
ja
hlt
and
add
loopne
out
es
push
dec
cmp
adc
xor
cmc
mov
sub
dec
test
outsb
add
or
dec
push
and
push
add
ret
xchg
sbb
in
loop
sub
lds
mov
push
data16
es
call
jns
pop
push
push
gs
or
es
mov
and
mov
push
mov
pop
push
mov
inc
out
hlt
int
dec
jg
sahf
sbb
inc
mov
push
lods
dec
mov
test
add
mov
addr16
movsb
pop
pop
arpl
cmp
jno
dec
pop
clc
add
cmp
aaa
push
sub
and
dec
fcomps
popf
mov
add
adc
xchg
and
xchg
jae
aam
pop
jl
dec
push
jmp
ja
lock
mov
add
mov
mov
sbb
push
or
xor
testl
les
or
out
mov
jo
loopne
mov
pop
jge
cwtl
sbb
and
mov
rolb
ljmp
jae
test
or
push
daa
mov
mov
jp
xor
in
out
out
pop
sarl
pushf
or
mov
dec
mov
push
inc
sub
mov
or
pop
mov
cmp
arpl
push
jg
and
push
mov
aam
jns
add
dec
scas
addr16
and
mov
and
adc
inc
sub
cwtl
push
inc
je
add
jae
inc
aad
imul
ja
inc
mov
inc
int
or
cmp
repz
adcb
arpl
loopne
cs
xor
test
and
insb
ja
dec
das
mov
popf
pop
sbb
sub
ljmp
mov
inc
or
or
and
push
mov
fisttps
out
jae
outsb
js
daa
or
test
add
aad
ret
cmp
cmpsb
cltd
add
sti
cmp
orl
or
xor
add
fnsave
js
inc
popf
pushl
pop
mov
hlt
or
mov
lcall
imul
lds
mov
cwtl
aas
aad
xchg
xor
mov
and
loopne
sbb
add
xlat
inc
daa
cwtl
mov
pusha
clc
in
xchg
jl
cld
xchg
dec
push
testl
call
mov
dec
add
mov
push
xchg
inc
mov
and
xlat
push
mov
loop
add
mov
iret
mov
popf
ja
hlt
mov
divb
dec
nop
sar
xor
lret
and
add
jno
orl
sub
lcall
add
add
aam
lret
dec
pop
and
test
jb
push
mov
and
cmpsl
mov
fwait
or
sub
int3
cltd
jae
xchg
xchg
pop
xlat
xchg
adc
in
add
decb
push
xor
cltd
dec
popf
nop
jl
daa
inc
xchg
adc
faddl
ja
cs
fdivs
bound
xchg
pop
jns
push
popf
loopne
xchg
and
add
sahf
jo
leave
push
xor
negl
mov
cmc
add
mov
stc
push
xchg
insb
xchg
add
and
cwtl
push
jmp
xor
jge
push
lods
insl
daa
jmp
adc
jecxz
dec
or
aam
xor
call
sbb
and
xor
push
jle
shlb
ds
ja
pop
jne
inc
in
push
shrb
adc
std
or
lods
insb
mov
jo
add
push
sahf
xchg
jae
call
push
inc
imul
and
gs
in
cmp
pop
loop
call
or
ljmp
xlat
xor
std
loopne
mov
jb
and
mov
xorl
and
inc
inc
and
dec
mov
shl
cmp
and
fdivr
rcrb
sbb
in
test
mov
xchg
cld
and
ljmp
mov
cmp
je
mov
sbb
cmp
sbb
adcb
mov
lret
inc
fwait
bound
cwtl
cmp
xchg
rcll
sbb
cmp
jmp
dec
mov
and
xlat
mov
add
adc
push
subl
adc
dec
push
in
icebp
push
pusha
lcall
push
lea
add
pop
sub
add
mov
xor
lret
cltd
aas
push
push
idiv
and
mov
inc
daa
das
push
cld
fadds
dec
xor
lods
mov
push
int3
xor
xorb
ror
add
mov
test
addb
adcb
add
or
test
fildll
js
mov
dec
cmp
mov
iret
add
lret
add
xchg
les
and
and
jb
gs
pop
pusha
insb
dec
dec
andb
pusha
mov
or
scas
xchg
pop
subps
mov
cltd
test
sahf
xor
cld
and
adc
hlt
sub
add
pushf
push
jge
and
popa
js
insb
int3
movsb
xchg
enter
sub
cltd
add
out
adc
mov
push
and
popa
pop
test
repnz
addb
jno
add
outsb
aaa
push
cmpsb
lcall
clc
in
push
add
cmpsl
push
std
and
mov
fstps
test
outsb
insb
and
lds
cmc
mov
in
push
inc
mov
test
pop
std
pop
mov
push
inc
sbb
fldl
xor
aad
test
ret
lock
call
scas
xor
addr16
lret
flds
orb
add
dec
push
cs
cmp
call
jp
pop
jp
leave
mov
popf
push
gs
cmp
jecxz
add
xchg
popf
jns
and
cwtl
bound
andb
std
cld
mov
fucomp
inc
aam
adc
xor
test
rcl
inc
test
xlat
rcl
pusha
in
std
aad
sub
mov
and
fadds
sub
sbb
sub
and
dec
xchg
movsb
jl
mov
mov
pop
pop
pop
sub
and
js
sub
push
xor
test
ret
in
sub
rolb
bound
or
pop
arpl
pushf
and
dec
cmc
in
aam
call
xor
sbb
inc
in
scas
or
mov
mov
sub
jae
adc
and
or
jb
mov
inc
in
sub
sbb
cwtl
out
jnp
xchg
sub
xchg
inc
add
rolb
jno
nop
ret
cmp
xchg
pop
mov
pusha
lock
pusha
cmp
cld
sbb
xchg
out
loopne
or
insb
push
cmp
cmp
pop
sub
in
xor
sbb
pop
aad
subb
and
js
lods
xor
mov
lea
xor
lods
ds
int3
xor
add
xchg
test
popa
std
stc
xor
inc
adc
mov
mov
es
enter
inc
call
clc
lods
add
lret
add
pop
jb
popa
cmp
in
in
or
jmp
stc
aam
jmp
js
iret
mov
lret
jp
cltd
sbb
lods
testb
xor
movsb
push
jo
push
inc
xorb
enter
xchg
pop
aas
rcrb
in
ds
sub
sub
cmp
push
fcompl
cmpsb
scas
push
add
add
jmp
sbb
insb
in
faddl
sahf
rol
mov
mov
fistps
mov
jo
bound
repz
add
aad
cmp
pop
dec
pop
enter
hlt
and
jae
loop
shlb
sbb
adc
push
add
pop
xor
lcall
popa
dec
adc
sub
jecxz
cwtl
sbb
ds
imul
test
dec
std
sbb
sbb
rcrl
addb
loopne
sbb
inc
dec
addb
arpl
push
xor
inc
cwtl
scas
popf
push
jns
clc
les
or
add
cmpsb
std
add
sub
cmp
rcrb
cld
sub
xchg
or
jge
subb
bound
and
lock
jo
cmpb
enter
shrb
ds
aas
jns
mov
mov
pop
add
pop
lock
mov
pop
add
inc
lock
mov
jno
dec
push
or
inc
mov
lock
and
lods
sub
rolb
lret
mov
test
and
cmp
xchg
lds
mov
inc
mov
mov
lret
inc
mov
lea
dec
mov
inc
jp
ret
jle
mov
insb
add
or
and
mov
pop
ud0
mov
sti
jl
das
sbb
nop
mov
xor
mov
cmp
xchg
cmp
xchg
je
in
or
or
test
nop
xlat
out
mov
je
inc
push
cmp
movsb
add
icebp
insb
and
lds
and
push
xor
push
test
add
pop
mov
inc
into
cmp
inc
fmuls
bound
pop
repnz
stos
test
dec
int3
mov
inc
pop
xlat
aaa
dec
mov
pop
add
std
fldl
xor
mov
sub
add
jae
cmp
jno
fs
clc
aas
xchg
pop
cli
hlt
inc
or
jnp
xchg
int
cmp
js
test
aam
and
mov
imul
sbb
ja
hlt
mov
sub
cmp
pop
popf
ret
xchg
inc
test
jo
cmp
pop
popa
shl
xor
int3
xchg
subl
ljmp
stos
inc
cwtl
cmp
sub
dec
pushf
mov
adcl
xchg
pop
aaa
in
fsubs
pop
and
sbb
popf
pusha
adc
mov
je
nop
push
mov
sahf
cld
add
std
push
jae
shlb
or
repnz
cmp
test
sbbb
clc
into
xchg
sbb
mov
add
addr16
cmp
cld
pop
sti
call
fs
sub
repnz
popf
jbe
pop
lods
sub
addb
xchg
popf
jo
mov
xor
insl
out
add
dec
mov
clc
ss
or
and
mov
outsb
sbb
or
aad
cmp
outsl
add
mov
fwait
popa
jo
mov
push
andb
test
or
adc
mov
pushf
pop
add
xchg
and
lea
scas
xorb
or
push
xor
outsb
sub
push
leave
popa
mov
std
addr16
rorl
pop
aam
add
int
cmc
pusha
pop
jb
add
dec
movb
pop
test
outsb
scas
jno
jmp
mov
and
pop
xchg
das
dec
test
cmpb
in
and
xchg
aas
aad
xchg
pop
jno
jb
push
and
cmp
push
std
loopne
add
cmp
cld
sub
and
movb
mov
or
movaps
inc
test
test
or
sub
les
inc
imul
adc
lods
aad
add
bound
mov
cmpsb
stos
add
ds
xor
inc
pop
push
outsb
shll
rcll
loope
mov
loopne
dec
pushf
loopne
test
push
lahf
lock
cmc
ret
sbb
add
rcrl
xchg
cld
sub
jmp
inc
and
sub
push
int3
mov
das
adc
loop
or
cld
pop
sbb
sbb
jo
aas
adc
mov
bound
call
dec
ja
call
adc
test
pop
sub
add
mov
dec
ror
jg
lock
mov
adc
push
sub
push
add
les
xchg
mov
adc
jo
inc
lret
push
out
inc
mov
jmp
adc
dec
int3
inc
popf
sbb
add
hlt
outsb
xor
xlat
cmpsb
xorl
jo
in
adc
mov
or
std
cld
jnp
or
dec
add
gs
aad
or
dec
pusha
jg
and
xorl
lret
jge
jmp
dec
adc
mov
test
sub
inc
jl
pushf
cmp
enter
xchg
sub
out
int
mov
inc
xor
or
lds
inc
and
test
popf
add
push
das
add
add
xor
pop
add
fistps
pop
push
xchg
lcall
mov
add
popf
ljmp
jge
and
pop
dec
les
in
enter
lods
add
mov
pusha
movsb
test
pop
ja
jae
jbe
inc
or
clc
and
mov
addr16
out
dec
loop
bound
dec
imul
or
push
pop
xchg
std
sbbl
push
adc
cmc
pop
add
lods
call
or
enter
jecxz
or
push
mov
add
gs
dec
jl
in
push
imulw
sbb
inc
sbb
cmp
pop
push
pusha
mov
pop
sub
scas
mov
subl
add
mov
xchg
push
cmp
jp
sarb
fimuls
or
fs
dec
adc
and
ss
add
fwait
cs
lret
gs
cmpsl
shlb
clc
push
add
lcall
mov
std
fldcw
lock
adc
mov
cltd
cmpb
aad
mov
add
faddl
sti
sub
pop
push
jl
jp
rclb
or
pop
mov
outsl
inc
cwtl
in
cmp
mov
movb
notb
or
sub
pushf
pop
cltd
sub
xor
xchg
and
inc
cmp
push
pop
xor
xor
in
dec
pop
inc
mov
cmc
aas
das
and
mov
cld
inc
idiv
inc
cmp
jg
add
call
int3
add
std
mov
fs
testb
jne
pop
mov
add
adc
pusha
xor
add
insb
xchg
test
jo
loopne
pop
mov
popf
mov
xor
xchg
rorb
inc
das
or
cld
adc
xchg
sub
pop
sahf
jno
adc
pop
cltd
pop
call
push
add
mov
shlb
xor
jmp
test
stc
rcl
or
inc
outsb
js
adc
lret
rolb
mov
data16
shll
sub
enter
lret
ds
sub
add
mov
pop
add
mov
jo
cwtl
xchg
mov
pop
movsb
inc
jno
sub
mov
dec
gs
hlt
popa
jmp
push
mov
mov
or
outsl
ftst
test
mov
lret
stos
inc
fnstcw
test
adc
cmp
rclb
mov
cmc
cwtl
les
mov
ds
or
orb
out
inc
cmp
enter
cmp
std
xchg
fwait
inc
jg
cwtl
sbb
jp
adc
pop
pop
cwtl
adc
add
xchg
fidivrl
in
xchg
stos
xor
mov
dec
and
add
pop
popa
sbb
lcall
rolb
loop
fcoms
add
negl
and
inc
push
rcl
mov
push
push
xchg
xchg
pop
inc
loop
in
and
add
mov
out
add
rolb
xor
loope
cmp
or
cmp
or
ljmp
testb
bnd
clc
push
xlat
movsb
inc
clc
in
test
sahf
adc
cmpsl
pushf
in
mov
and
xchg
jg
dec
fdivr
mov
in
enter
testl
fcoml
fldcw
mov
sahf
xchg
cld
sub
and
popa
xchg
mov
mov
fiaddl
out
sub
pop
xchg
cmp
or
dec
cld
xchg
add
insl
jo
or
xor
mov
ljmp
or
sub
or
rcr
mov
call
test
popf
mov
add
push
fadds
adcl
jmp
xchg
add
inc
cmpsl
cli
sbb
mov
or
stc
ret
jne
int
fadds
inc
xorb
mov
test
lds
add
dec
sbb
testb
rolb
push
inc
fs
pushf
xor
insb
pusha
into
sbbb
mov
hlt
adcb
add
xchg
rolb
icebp
adc
fldl
add
subb
xchg
int3
loope
sub
stos
mov
cs
or
aad
pop
leave
lds
and
xlat
inc
pop
fwait
sub
cmp
fiaddl
push
sbb
out
test
add
ret
or
icebp
data16
cmp
les
xchg
mov
add
ret
mov
aaa
mov
inc
nop
pop
dec
in
orb
shrb
mov
cld
xchg
cmpsl
pusha
sarl
aas
sbb
adc
repz
mov
bound
push
outsb
add
jno
jle
pusha
out
mov
push
adc
cwtl
mov
mov
ret
enter
mov
lahf
hlt
xor
push
popa
adc
adcb
scas
pop
mov
mov
ret
repnz
sbb
push
sbb
mov
loop
and
negb
mov
cltd
mov
adc
push
pop
sbb
mov
aas
cld
mov
pusha
fildl
adc
jbe
push
mov
loopne
sbb
adc
xor
bound
mov
sbb
pop
add
aaa
inc
mov
or
fsubrs
test
add
push
sub
push
push
nop
inc
ljmp
sub
dec
lock
dec
mov
pop
add
or
int3
sbb
add
popf
scas
cmp
js
clc
dec
je
mov
popa
fdivs
push
xor
rolb
mov
add
sub
out
pop
rcrl
push
aaa
clc
lds
mov
cld
pop
pop
adc
cmp
xor
popa
pop
mov
lret
sub
adc
xchg
movsb
jnp
mov
add
dec
inc
aas
dec
add
mov
or
sti
dec
and
mov
mov
lahf
int3
add
inc
dec
add
dec
or
clc
pop
mov
dec
and
pusha
sbb
jl
ljmp
lock
lahf
fdivs
fsubrl
sub
aad
sub
inc
stc
mov
clc
cld
dec
sub
inc
ret
add
inc
iret
subb
test
out
sub
lea
push
lds
stc
outsb
add
mov
fcomps
xorb
rclb
inc
add
int
mov
xor
jae
lds
insb
adc
out
sbb
lods
iret
cwtl
pop
addb
xorb
ror
test
sub
lea
sbb
add
cli
inc
fsubs
stos
andb
pop
add
add
xchg
push
cmpsb
int
pop
es
movsl
iret
mov
cmp
push
cmc
add
or
add
addl
stos
mov
push
lods
test
inc
add
movsb
repnz
clc
addb
jne
inc
sub
mov
clc
icebp
or
es
mov
mov
repz
addr16
or
mov
mov
scas
xorl
sbb
or
xorl
lock
imul
in
clc
sub
js,pn
leave
sbb
push
mov
push
cmpb
mov
xor
test
add
inc
cmp
frstor
ja
sti
dec
sbb
push
pusha
add
es
dec
nop
ror
mov
xorb
mov
rorb
xbegin
nop
xor
shlb
fsubs
leave
ret
roll
mov
arpl
jecxz
aam
les
movsl
mov
push
jnp
popa
aas
insb
adc
cwtl
lcall
mov
xchg
push
rcll
popa
mov
adc
sbb
dec
test
ror
mov
inc
sarb
dec
push
insl
fmuls
xor
aas
jmp
sti
add
add
dec
mov
add
lahf
lods
mov
or
mov
in
std
cmpsb
lock
enter
mov
movsb
sub
movl
inc
mov
pushf
push
add
andb
push
inc
cld
xor
loope
mov
or
or
adc
repnz
or
sbb
rolb
es
lcall
inc
cmp
arpl
cmp
test
in
popa
or
pop
cmp
xchg
sbb
inc
or
je
or
sub
push
repz
lock
test
push
mov
mov
shrb
mov
ds
inc
and
outsl
add
jg
in
cmc
roll
movsb
roll
xor
sbb
call
pop
add
daa
xor
dec
jnp
sbb
pop
aam
addb
xor
pop
add
andb
xchg
enter
adc
les
and
push
add
imul
xchg
pop
mov
jp
cmp
enter
rolb
mov
gs
sbb
imul
in
jb
pop
mov
pop
test
dec
mov
add
adc
xor
mov
mov
ror
and
pop
sbb
repnz
or
xchg
push
inc
and
xor
adc
add
loop
out
add
cmpsb
cmp
out
dec
pop
adc
dec
cld
mov
cmp
jp
dec
fdivrs
mov
pusha
push
gs
add
jecxz
loopne
loopne
sbb
pop
inc
inc
repnz
mov
xchg
add
and
push
cmpsb
pop
add
push
push
push
add
and
jp
repnz
clc
and
cs
add
or
sub
cld
adc
lods
xor
fbld
fcoms
js
push
cmpsb
hlt
adc
stos
movsb
add
fbld
fadd
loopne
addr16
test
repnz
inc
sbb
jns
sbb
leave
popa
push
jb
incb
int3
mov
and
adc
mov
scas
movsb
cwtl
fs
imul
xchg
jns
js
sub
stos
mov
mov
or
push
rcrb
and
into
aam
cld
into
js
xchg
cmp
dec
data16
lret
mov
fisubl
call
push
push
pusha
xchg
sub
sbb
dec
addb
fiaddl
inc
mov
push
inc
enter
add
adc
push
data16
pop
sti
sbbl
add
push
lods
addr16
sbb
pop
mov
mov
pusha
jp
adc
es
mov
add
lds
cs
aam
call
push
or
js
mov
or
imul
jmp
fs
add
sahf
outsb
xchg
add
std
mov
mov
data16
and
jns
dec
enter
iret
inc
jnp
dec
int3
aam
cmc
inc
mov
xor
outsb
xor
mov
xchg
jl
xor
push
stos
jg
mov
push
insb
adc
cmp
pusha
stos
jbe
jnp
orb
push
adc
mov
adc
add
test
scas
sub
mov
lret
imul
xorb
mov
push
push
or
sahf
jo
shlb
inc
js
pop
and
mov
mov
imul
mov
mov
outsl
sti
sub
pop
jp
or
cld
orl
test
sub
or
popf
cmp
add
fcompl
enter
addr16
push
ds
cli
inc
fsubs
xor
js
loope
and
popf
test
fisttps
andl
cmp
or
mov
push
enter
insb
lds
std
incb
pop
mov
and
cld
push
jo
jne
mov
popf
xchg
mov
and
mov
cmp
adc
cmp
lret
les
or
divb
pop
jo
lock
sub
sub
lret
sub
inc
mov
jge
pop
aam
sub
pop
xchg
jae
test
mov
sarb
lock
faddl
inc
and
jecxz
or
shl
call
pop
add
cs
pop
fildl
pop
nop
aam
clc
decb
js
flds
in
mov
inc
lcall
dec
lock
jnp
out
rolb
push
pushf
insl
ss
push
pusha
imul
sti
add
push
mov
sti
sub
icebp
out
lock
and
jmp
dec
or
dec
out
sbb
cmp
out
jno
les
jne
push
in
or
mov
adc
iret
sbb
adc
mov
pop
sub
iret
sbb
mov
cwtl
dec
cmp
push
push
jmp
neg
push
mov
xor
or
orb
mov
cmp
or
sbb
lock
vmread
jp
xor
xor
xor
jmp
push
pop
pop
shr
mov
sbb
ja
in
call
and
ret
pop
es
or
add
xor
adc
push
das
sbb
xor
sahf
push
jmp
add
and
cmp
jnp
lods
sbb
pop
cmp
sbb
add
add
mov
out
imul
inc
jmp
xchg
push
sub
outsl
in
and
iret
mov
ret
ret
cwtl
xchg
push
push
xchg
dec
or
dec
arpl
sbb
fsubrp
mov
repnz
add
decb
or
repz
add
xor
xor
pop
sbb
pusha
fs
push
pusha
lcall
out
jle
lahf
dec
xchg
adc
prefetchnta
repz
nop
push
mov
jmp
xor
or
or
stos
mov
push
pushf
push
cmp
shr
and
or
fiadds
cmpl
mov
mov
enter
je
or
lods
push
jmp
push
pop
mov
cmp
shll
mov
xor
frstor
mov
pop
test
jmp
cmp
outsl
add
pusha
mov
dec
jmp
add
pop
pop
push
jecxz
pushf
cmp
adc
pcmpgtb
xor
push
add
xchg
adc
test
mov
mov
adc
dec
lock
arpl
push
inc
dec
sbb
outsb
and
push
mov
mov
jns
iret
test
cs
mov
test
inc
lret
jmp
add
and
jecxz
add
out
nop
insl
mov
andl
stc
and
icebp
das
pushf
and
add
xor
push
mov
fs
add
jle
lock
mov
orb
pop
mov
arpl
je
das
xorl
adc
push
add
pop
test
mov
insb
adc
lahf
or
pop
hlt
mov
add
sbb
mov
push
jb
in
outsb
cmp
mov
pop
rol
jmp
mov
mov
cli
add
adc
outsl
sub
pop
out
imul
or
repnz
dec
sub
into
inc
dec
test
pop
call
inc
sub
lcall
adc
xor
xor
sub
mov
fiadds
pop
jmp
out
xor
mov
and
stos
fdivp
inc
fadd
mov
pop
aam
outsl
sub
or
lret
mov
insl
movsb
and
xor
and
push
or
addr16
mov
arpl
mov
mov
push
xor
pop
test
mov
xchg
cmp
sbb
mov
mov
loope
or
xor
inc
in
xorb
loope
lcall
in
dec
add
stc
iret
add
jmp
xchg
bnd
push
xor
fdivr
insb
dec
dec
jecxz
push
hlt
roll
or
push
xchg
inc
add
movsb
or
inc
inc
add
nop
frstor
and
fildl
nop
stos
sbb
int3
adcb
bound
pop
xor
pop
sub
clc
xchg
cli
jno
cltd
dec
es
arpl
dec
add
icebp
push
xor
jb
movb
outsb
rorl
roll
jo
jmp
push
pop
lahf
dec
lods
add
orl
popf
add
adc
negl
pop
inc
add
lock
mov
mov
nop
sbb
pop
or
jmp
pop
xor
jbe
fisttps
push
xchg
lret
add
sub
cmp
or
xchg
or
push
andl
push
sahf
jns
jg
dec
xchg
jmp
push
mov
div
hlt
in
subl
mov
sub
aad
xchg
testl
mov
pop
pop
or
cmp
pop
push
mov
nop
int
pop
sub
outsl
or
insl
cwtl
adc
pop
dec
fidivs
jo
sbb
sbb
pop
sbb
mov
sahf
pusha
push
out
pop
dec
inc
push
push
jae
pop
shl
addr16
ljmp
fisttps
insl
fimuls
jns
sbb
sti
push
push
repz
inc
jecxz
dec
sbb
lahf
adc
xchg
xchg
add
sub
fldl
fidivs
sbb
xor
push
xchg
adc
push
sub
cmp
lret
fstpl
or
pop
ss
jmp
fimuls
and
jns
add
and
mov
push
adc
pop
das
in
movb
push
sbb
mov
jnp
cwtl
inc
push
stc
push
sbb
jmp
not
xor
sub
cmp
sub
imul
inc
inc
cs
cmp
adc
adc
adc
cs
xchg
or
rcrb
sub
sub
jmp
xchg
fistpl
sbb
pop
orl
fiaddl
mov
add
loop
sysenter
mov
mov
fs
sub
pop
and
in
es
inc
pushf
mov
push
sbb
jae
pop
fstps
fadds
mov
pop
inc
data16
xor
and
push
or
rorl
push
adc
inc
push
enter
jmp
pop
mov
fisubl
sbbb
and
sub
outsb
pop
xor
addb
fsubs
pop
mov
pop
jne
mov
add
pop
pop
addr16
xchg
sarl
sbbl
ja
rol
cmp
ret
int3
test
inc
cs
sbb
xor
ljmp
sbb
add
fistpl
xadd
ret
push
add
imul
xor
fimuls
sbb
in
mov
push
ret
jmp
pop
mov
mov
ds
add
inc
test
test
mov
pop
cs
sbb
push
cmp
push
loop
mov
jbe
mov
aaa
cmp
stc
jle
or
js
aaa
sbb
sub
js
adcl
push
mov
push
roll
sbb
testb
enter
popa
pop
lcall
pop
imul
cmc
jno
adc
movb
push
jle
mov
and
add
lcall
lds
stos
mov
and
or
push
loope
push
xchg
push
shr
lcall
sub
pop
shlb
pop
aaa
outsl
push
xchg
not
or
arpl
mov
out
popf
or
push
mov
jg
dec
loope
cmp
xchg
mov
mov
xchg
pop
inc
mov
jl
xor
test
add
pop
inc
shr
and
je
and
ret
or
or
add
dec
pop
mov
bound
ret
and
pop
popa
nop
fwait
adc
jo
or
das
sub
mov
pop
gs
add
jmp
mov
jo
mov
sbb
pop
xchg
mov
dec
neg
add
dec
jmp
lock
pushw
dec
pop
mov
imul
add
ficomps
lock
jecxz
push
rclb
fcmovnb
fstl
pop
add
jmp
cltd
cmp
cs
pop
mov
shll
jp
pop
jb
adc
rorb
out
sbb
insl
cmpsb
test
adc
adc
in
mov
adc
dec
sar
push
add
test
mov
out
orb
aam
sub
push
push
xor
adc
inc
inc
inc
std
lret
pop
push
mov
xor
shlb
push
neg
dec
push
mov
rol
add
jo
xor
rcrl
xor
cmpsl
sub
pop
mov
shlb
push
or
dec
pusha
sub
jmp
and
xor
add
push
xor
and
xor
das
xor
imul
cmp
inc
pop
pop
fisubs
repz
mov
sub
ret
pop
and
in
xchg
cmpl
aam
xchg
movl
je
adc
loopne
not
dec
and
sbb
out
pop
dec
mov
lahf
mov
and
ret
xor
out
fwait
jno
sub
xchg
lret
and
pop
sbb
fisubrs
pop
sbb
cmpsl
clc
fs
pop
fldl
les
mov
xor
pop
add
test
rcll
push
push
xchg
adc
inc
xor
nop
mov
jmp
sbbb
mov
cwtl
push
cld
imul
add
xor
cmp
sub
mov
loop
jno
lret
cmp
sub
into
jle
out
ret
xchg
not
or
mov
add
add
sub
cmpsb
dec
je
ljmp
jmp
mov
popa
dec
fsubs
ret
push
rorl
outsl
daa
pop
adc
jmp
cmp
aam
bound
sub
test
mov
and
aaa
inc
in
jnp
add
dec
cmp
dec
neg
and
sub
mov
sub
icebp
lret
cltd
ret
add
and
dec
or
outsl
pop
icebp
and
sbbl
adc
lahf
rorb
push
pop
push
repnz
mov
mov
outsl
jbe
or
out
and
emms
sbb
sub
adc
lcall
cli
cmp
cmp
or
fs
sbb
or
shrb
icebp
rorl
add
mov
repnz
mov
push
rorb
xchg
add
jnp
addr16
add
inc
dec
push
rcll
jmp
xchg
lea
or
push
xor
in
jmp
mov
mov
mov
mov
dec
push
lods
stc
test
adc
jmp
add
outsl
cli
sub
jmp
in
push
sbb
leave
mov
adc
add
and
add
aas
sub
into
out
mov
dec
js
int
mov
xchg
sub
out
js
mov
lret
sbb
addr16
pop
out
push
push
and
jbe
pop
pop
orb
ss
sbb
adc
andl
iret
fwait
jne
adc
pop
mov
ds
adc
enter
sar
sbb
xchg
std
push
nop
pop
inc
sbb
jbe
adc
xchg
inc
jb
xor
sbb
outsl
shr
dec
neg
cwtl
les
cmc
ret
inc
cmp
test
and
mov
sub
pop
adc
ret
movsl
adc
not
cmc
in
fwait
repnz
nop
push
xchg
or
add
push
sub
and
xchg
orl
pop
in
sbb
insb
dec
out
cmp
fnsave
enter
in
gs
popf
mov
jmp
test
lea
and
cmc
xor
sub
xchg
push
add
in
sbb
data16
inc
inc
cltd
sub
call
jmp
xor
push
addl
adc
mov
cmc
xor
prefetcht0
xor
mov
loop
ret
test
jmp
jbe
inc
mov
add
add
sub
sub
pop
push
nop
xor
cmp
push
pop
xor
xchg
pop
pusha
lret
nop
ljmp
roll
adc
imul
push
imul
rorb
and
add
dec
sbb
jb
add
sub
jmp
pop
sub
jp
xor
fs
lods
push
mov
and
cmp
jnp
popa
cmpsl
vpunpcklqdq
xor
aad
lods
xchg
add
push
sub
push
orl
call
pop
mov
adc
xor
mov
ja
ficomps
xchg
jmp
add
je
lret
xor
or
repnz
loop
cmp
mov
mov
subl
fmuls
je
push
add
dec
and
mov
cmp
lds
mov
mov
push
mov
mov
fs
stos
rcl
test
rclb
movl
xchg
lcall
or
daa
push
dec
sub
stos
sub
and
push
or
daa
icebp
inc
lcall
inc
pusha
push
jmp
adcb
daa
sbb
cld
pop
test
mov
push
add
lea
and
sbb
pop
xchg
xor
cld
cli
xchg
mov
inc
aas
adc
pop
inc
and
adc
pop
push
jo
jmp
mov
js
inc
cltd
sarb
movsb
lcall
mov
cmp
sbb
adc
inc
bound
adc
sub
xchg
fimull
aaa
fwait
subl
ret
pop
loope
mov
or
sub
xor
lret
push
mov
gs
sbb
repnz
or
jmp
pop
sbb
fldenv
and
scas
addr16
mov
add
repnz
push
neg
sti
inc
mov
outsb
call
dec
outsb
jae
xchg
mov
inc
sbb
rolb
jbe
ljmp
insb
movsl
dec
std
out
testl
jb
mov
ds
jmp
push
stc
dec
pop
xor
or
cltd
pop
je
xor
jmp
jp
push
push
ret
arpl
leave
shrl
adc
pop
mov
adc
rep
add
xor
fs
fcoms
xor
loopne
je
popf
xor
sub
sti
add
push
add
les
clc
lcall
jmp
dec
xchg
pop
pop
inc
sbb
pushf
clc
cmp
sbbl
inc
and
push
sbbb
push
dec
jae
add
inc
pop
es
inc
or
dec
call
cmc
lcall
sbb
sub
aas
push
outsl
movsl
dec
fimull
xorl
rcl
gs
aad
jmp
push
sub
pop
cmp
add
push
mov
or
pop
jmp
punpckhbw
insb
out
jl
cmp
adc
test
xchg
add
psubsw
mov
sub
push
in
push
inc
push
jl
jmp
and
add
iret
or
pop
divb
pusha
push
push
dec
mov
les
or
pop
push
scas
lds
sub
xchg
orb
or
fnstsw
sti
shlb
pusha
pop
pop
mov
push
sub
sti
pop
ret
xor
pop
mov
mov
mov
lock
hlt
fimuls
sub
pop
into
push
jns
enter
mov
sub
jo
add
fucomi
jecxz
sbb
and
push
push
pop
mov
gs
adc
lret
fwait
pusha
into
xchg
adc
inc
nop
fmull
pop
aas
adc
and
jg
insl
icebp
or
sub
add
push
jnp
out
mov
loopne
pushl
sub
leave
jnp
inc
jg
cmpsb
repz
js
dec
jbe
add
fldenv
mov
jbe
cmc
mov
mov
xor
pop
idiv
pushf
pop
popa
push
mov
enter
sbb
mov
sub
aaa
cmp
cmpb
lahf
out
and
iret
push
mov
or
mov
push
mov
xor
cmp
or
push
jmp
rorl
aas
imul
jo
dec
shl
pop
adc
adc
shr
shll
je
aam
leave
pop
rclb
pop
push
add
and
jb
test
add
mov
scas
inc
adc
pop
push
push
or
or
add
lea
test
in
mov
or
sub
push
adc
not
fisttps
pop
add
cmpb
add
jmp
or
push
fildll
push
pop
pop
dec
mov
int3
loop
ret
adc
std
sbb
inc
movsb
or
jmp
add
xor
ja
sbbl
in
test
loop
enter
aam
or
out
je
mov
add
push
push
nop
jne
mov
mov
shr
pop
add
add
adc
push
orb
inc
xchg
sub
testb
mov
and
sub
sbb
ds
into
pop
dec
cmpl
lahf
add
pop
xor
out
in
or
adc
push
xchg
jns
cmp
addb
mov
jmp
push
or
mov
jnp
inc
add
push
add
in
pop
push
xchg
sub
lcall
or
dec
sarb
or
scas
lahf
and
movsl
out
inc
xchg
push
push
mov
mov
aas
xor
gs
cmovle
mov
ss
and
out
or
jno
sarb
loopne
iret
daa
or
movsl
popa
cmp
push
mov
mov
lods
add
mov
je
inc
nop
pop
add
jg
sub
xor
sub
mov
and
gs
sub
push
xchg
repz
pop
push
je
icebp
jnp
xlat
sub
xlat
mov
es
pop
bound
or
pop
data16
xor
adc
jne
fs
insl
ja
adc
mov
test
loope
cmp
idivb
pop
pop
test
cmp
jne
lret
cwtl
dec
push
xchg
cmp
fidivrs
dec
lcall
lds
sbb
jae
mov
jno
dec
inc
aas
js
xchg
shlb
mov
push
sub
push
sbb
lods
test
xorl
push
ja
push
popa
add
shlb
and
sarl
insl
nop
loope
mov
ror
xor
xchg
push
sbb
add
dec
lahf
add
test
int
in
dec
xor
xor
ret
add
cmpsb
popf
xor
inc
fisubs
add
inc
out
push
push
dec
pop
xor
add
mov
inc
fldt
clc
push
push
adc
and
pop
jb
adc
vmwrite
inc
mov
dec
mov
nop
in
dec
outsl
or
and
add
pop
imulb
xchg
js
neg
shl
rorl
sbbb
dec
popf
xchg
pop
dec
push
icebp
mov
scas
jle
lcall
adc
jo
lret
push
leave
enter
pop
xchg
push
jecxz
subb
pop
push
push
pop
push
pop
or
out
cwtl
js
and
mov
test
repz
adc
insl
das
inc
loopne
pop
sbb
push
movsl
or
xchg
jmp
sbb
lds
xor
adc
or
mov
sub
lock
pop
fs
adc
mov
shr
sbb
push
push
adc
jne
leave
push
pop
mov
shrb
add
mov
in
add
and
mov
nop
jp
dec
sar
add
mov
jmp
jo
add
xor
cmp
jmp
mov
sub
dec
sar
fwait
lds
fldt
iret
dec
lods
inc
sub
mov
sti
mov
jmp
sub
cmp
scas
and
shr
push
cmp
cvtdq2ps
fstpl
pop
les
push
out
mov
cmc
xchg
mov
push
outsb
imul
hlt
xchg
sbb
testb
shll
roll
mov
push
push
add
lahf
jbe
aaa
shlb
bound
fildll
jge
sub
arpl
sbb
pop
mov
rolb
sub
xor
or
sbb
call
ret
lret
lods
add
push
push
shl
andl
add
cld
std
xor
mov
ljmp
add
cmpsb
mov
and
push
mov
fs
cmpb
sub
pop
movsb
add
adc
push
pop
jmp
dec
rorl
aas
mov
or
clc
cmp
push
pop
repz
xchg
adc
sub
mov
sub
mov
xlat
push
mov
xor
dec
or
jb
or
mov
jecxz
shll
push
push
push
add
fisubl
pusha
rol
lods
add
jmp
cmp
dec
enter
pop
dec
xchg
jmp
call
es
adc
bound
mov
and
outsl
inc
lret
xor
ret
or
mov
add
fnstsw
lret
or
inc
les
or
xor
iret
inc
dec
inc
arpl
add
scas
js
adc
out
sbb
inc
daa
push
mov
sub
jmp
xchg
or
jns
and
out
sbb
stos
ficoms
or
pop
jns
pushf
mov
lods
jp
popa
in
flds
popf
xchg
push
in
add
cmp
shll
add
and
push
cld
gs
inc
scas
adcl
daa
in
imul
cltd
inc
std
test
bound
arpl
jno
and
sbb
or
mov
inc
sbb
add
nop
sbb
ljmp
in
lahf
mov
inc
jbe
inc
cmp
dec
sbb
push
stos
xor
outsl
xor
and
mov
jmp
fdivs
notb
mov
xchg
and
pop
mov
pusha
test
or
loope
inc
rorb
jne
push
shr
repz
pop
mov
sbb
sbb
mov
push
mov
add
and
jp
stos
daa
push
insb
inc
shl
mov
mov
movsb
cmp
rorl
inc
lods
add
pop
lahf
das
adc
in
add
mov
fs
or
dec
lods
ret
fwait
push
nop
dec
add
sub
ds
cs
xor
fistpll
bound
mov
hlt
push
mov
mov
mov
push
xor
mov
adc
push
push
jmp
jnp
mov
les
ret
pop
add
jp
fxch
mov
movsb
or
pop
xchg
not
je
in
aam
mov
xchg
adc
divb
out
fsts
dec
or
inc
add
jl
add
dec
push
stos
jo
sbb
inc
jo
jge
mov
xchg
cmp
stos
sahf
sbb
add
pop
es
stos
push
pop
add
sahf
mov
jb
or
push
push
jns
lahf
cwtl
dec
mov
pop
mov
add
pop
ficoml
push
pop
not
inc
xorb
pop
test
int3
add
popa
jp
sub
or
shl
push
add
jmp
cs
sub
mov
pop
jmp
pop
subl
mov
les
push
lock
jae
push
adc
mov
cmp
sbb
sbbl
mov
ds
roll
rolb
sub
movsl
adc
repz
xor
sub
or
sbb
pushf
sub
lret
in
pop
jmp
loope
inc
out
imul
enter
dec
lret
nop
add
or
pop
mov
add
clc
pop
cltd
imul
inc
sti
pop
clc
ret
sbb
push
mov
xchg
push
pop
lret
int
xor
andl
sar
xchg
imul
loope
push
mov
sub
aas
xor
scas
pop
add
shl
push
pushw
cwtl
imul
stc
out
dec
mov
lret
clc
loope
mov
andb
jecxz
enter
cwtl
pop
jg
jg
adc
sbb
jmp
cmp
out
aam
or
jmp
push
sbb
lret
jle
test
and
jmp
xor
jne
popf
adc
add
pop
pop
test
or
cmc
and
add
lret
sub
add
pop
jge
xchg
sbb
sbb
xor
push
rep
xchg
add
insb
iret
cmpsl
fs
mov
sbb
insb
mov
dec
xchg
imul
scas
xlat
mov
or
cmpsb
sti
fwait
mov
rolb
ret
mov
pop
mov
inc
ret
or
icebp
adc
xor
pop
pop
pop
lret
jmp
jno
add
xor
ss
jmp
add
sbb
jno
ret
in
mov
jo
or
push
push
jmp
shll
ljmp
add
sub
push
add
aam
out
pushf
add
pop
add
test
in
hlt
cs
shll
in
sub
hlt
or
jecxz
repz
orl
add
adc
xor
sarl
sub
arpl
jns
repz
or
sub
pop
les
pop
dec
add
mov
nop
jns
dec
sub
dec
test
mov
xadd
sbb
lcall
jns
mov
mov
hlt
sub
cmc
pop
jmp
outsb
add
add
pushf
dec
test
dec
ja
jle
cmp
cmp
call
sub
pop
cld
xor
mov
dec
pop
out
add
cli
push
ret
pop
sub
lret
add
sarb
jmp
push
and
add
movl
ficoms
icebp
cmc
bound
pop
fcoml
mov
mov
or
mov
push
dec
pusha
cmp
stc
js
xor
call
xchg
xor
mov
add
shrb
pop
lock
mov
or
dec
lcall
fiaddl
testb
out
and
inc
mov
inc
xor
jle
add
cmp
inc
pop
and
xor
fs
add
ja
roll
sbb
fwait
cltd
int
std
icebp
cmp
mov
pop
sub
out
data16
jae
cmp
mov
inc
dec
sbb
sbb
xor
push
add
mov
ljmp
aaa
enter
xchg
and
fildl
add
cli
lods
pop
addl
icebp
pop
push
xchg
mov
fimull
into
push
hlt
jb
xchg
jno
leave
pop
cwtl
dec
ljmp
shl
add
jae
xchg
test
fsubrl
sbb
dec
jmp
aas
xor
jl
adc
ret
xor
dec
adc
je
push
leave
aas
loopne
mov
test
lock
sbb
mov
js
cmp
rorb
push
pop
push
mov
mov
fsts
push
adc
movsl
xchg
pop
mov
adc
sbb
sbb
or
sbb
jl
mov
and
jmp
sar
sarb
mov
in
xchg
jmp
mov
push
or
loope
sub
jae
repz
jmp
call
movb
stc
or
xchg
cmp
pop
push
cs
jmp
ja
add
dec
jmp
fcoml
xchg
daa
or
xchg
and
push
lcall
fnstenv
add
mov
xor
or
enter
add
sub
int3
mul
inc
int3
cmp
or
data16
jge
dec
mov
dec
rorl
cmc
xchg
pop
ljmp
movsl
jmp
cmpsl
fisttpll
sbb
mov
dec
and
mov
sub
xchg
lret
lret
cmpl
xchg
push
dec
adc
mov
in
out
cmpsb
lahf
scas
inc
pop
push
outsl
arpl
ret
add
and
jmp
and
add
mov
jle
xor
inc
mov
cmc
inc
cwtl
pop
push
cmp
dec
sbb
jmp
mov
inc
pop
popf
sbb
adc
movsl
add
imul
cmp
jno
dec
shlb
or
xchg
and
mov
mov
adc
iret
xor
add
test
cmpsb
fisttpll
xor
push
dec
pop
sub
adc
push
call
scas
pop
insb
adc
iret
lods
or
in
pop
sbb
mov
outsb
out
lds
lahf
pop
icebp
jno
xor
bound
pop
and
testl
mov
scas
aad
push
pop
sub
cmpsb
push
xchg
ljmp
jmp
dec
add
adc
in
adc
popf
inc
mov
mov
jmp
pop
rcrb
rol
test
orl
lock
nop
pop
orl
dec
mov
in
adc
cmp
adc
dec
mov
dec
and
cmp
or
repnz
sbb
loope
adcb
add
scas
arpl
ja
sub
aad
cmpsl
pop
scas
cmp
dec
mov
xchg
mov
lcall
loop
jmp
xchg
mov
andb
cltd
add
add
inc
in
insl
cmp
imul
in
cltd
lahf
mov
mov
frstor
sbb
outsl
sub
dec
mov
out
jp
mov
xor
push
dec
js
and
pop
pushf
add
sub
adcb
aaa
jge
pop
psubb
push
sub
cmp
push
clc
jns
mov
jle
xor
jo
js
mov
icebp
cmp
aaa
add
adc
inc
pop
adc
jmp
rolb
ljmp
pop
addr16
cmpsl
adc
popa
das
and
dec
lods
xor
jecxz
jle
push
mov
mov
daa
fs
jle
jge
and
pop
dec
jne
adc
mov
call
cmpb
call
ret
cmp
mov
dec
pop
out
sub
jmp
mov
sbb
out
aam
mov
add
jnp
sub
pop
and
mov
fistpl
sub
add
xor
or
test
clc
mov
adc
sub
movsl
flds
or
cwtl
rorl
iret
out
leave
add
push
adc
mov
xchg
int
imul
stos
pop
and
xor
add
ret
xor
add
jl
cmp
test
iret
push
mov
lcall
or
add
adc
add
stos
lret
imul
or
sti
pop
lcall
daa
ljmp
movb
or
inc
mov
jnp
daa
pushl
and
jb
stos
adcb
mov
add
outsb
adc
add
dec
int3
in
xorl
pop
cmc
out
jmp
push
in
lret
push
mov
mov
js
and
add
loope
or
pop
dec
sub
cmp
mov
stc
jo
or
add
dec
js
testl
ret
sbb
pop
push
inc
pop
mov
in
aam
push
jp
mov
sub
in
and
fildl
loopne
or
pop
pop
dec
clc
rolb
clc
scas
lods
inc
adc
pop
add
fs
or
push
loopne
or
push
add
xchg
inc
sbb
int3
aaa
dec
mov
and
mov
movsl
adc
repz
rclb
sbb
mov
outsb
mov
lods
mov
jno
nop
dec
add
fstpl
jmp
test
adc
xchg
movsb
rcrb
mov
ja
ljmp
add
rorl
das
push
jae
push
fwait
mov
dec
rorb
icebp
dec
mov
xorb
mov
xor
int
and
jp
adc
xor
ds
cmp
push
inc
push
pop
or
cmp
push
sub
fwait
gs
and
mov
add
pusha
xor
fiaddl
mov
addb
loop
adcb
cmc
das
add
in
aam
pop
jmp
mov
fsubs
mov
pop
jp
sti
or
arpl
push
add
test
sub
neg
nop
inc
push
mov
jl
pusha
push
sbb
pop
jae
fists
sub
mov
fstl
dec
push
add
push
push
xor
enter
sub
loop
and
repz
arpl
sbb
dec
fidivrs
or
add
repnz
dec
repz
das
outsb
into
cmp
cmp
jl
jne
mov
pop
sub
xchg
sbbl
mov
sub
mov
jbe
sub
pusha
and
bndstx
xchg
enter
sub
mov
fsubrl
ret
push
sub
mov
pop
out
pop
mov
iret
pop
inc
dec
shl
incb
or
arpl
add
jmp
repz
or
sbb
or
jne
or
pop
inc
lds
inc
fistps
daa
mov
inc
inc
or
or
xchg
xor
scas
xor
add
sub
shlb
xchg
adc
imul
les
push
or
lea
pop
mov
pop
ss
jmp
jmp
dec
add
inc
shlb
mov
add
ljmp
jp
das
jmp
fs
arpl
insb
in
rolb
fcoml
dec
mov
add
mov
roll
addl
cs
mov
pop
xor
xor
into
add
pop
and
cwtl
out
roll
add
and
mov
xor
push
inc
enter
jp
cmp
jb
push
loop
dec
out
pushf
je
or
pop
dec
add
xor
sub
jmp
sbbl
sub
jecxz
and
xchg
add
lods
notb
insl
mov
fcomps
and
xchg
in
bound
push
push
jmp
push
js
inc
in
mov
popa
sbb
addr16
lcall
test
push
das
add
mov
mov
xor
and
shlb
int
rorl
jmp
and
inc
jae
xchg
xchg
stos
mov
mov
mov
push
adc
pop
cmpsl
jl
lods
add
or
fisubl
xchg
push
pop
sub
ret
scas
call
faddl
sbb
aas
add
or
dec
xchg
or
sub
cmp
nop
and
rolb
mov
sub
push
sbb
rcrb
adc
and
fisubl
dec
clc
sbb
ret
repnz
add
jl
push
sub
mov
notb
and
xor
psllw
push
xchg
call
popa
addr16
test
lock
mov
clc
push
and
ja
dec
inc
and
in
mov
add
out
dec
mov
mov
jl
addl
sbb
sub
or
rcll
cwtl
loope
sti
mov
mov
adc
push
int
in
xor
xchg
imul
xor
mov
pop
out
xor
ret
or
cmp
rcrb
and
xchg
call
push
pop
fwait
or
sub
mov
or
leave
add
dec
mov
inc
push
and
repnz
mov
nop
jo
sub
or
shr
xchg
pop
aaa
add
xor
ss
adcl
add
dec
and
stos
or
sbb
cmp
inc
cmp
lock
pop
idivb
sub
jg
lods
fsubs
or
ret
sub
imul
add
sarl
stc
or
xchg
jp
add
ficoml
lcall
add
dec
adc
push
mov
sbb
shl
and
lret
dec
push
bound
push
jge
movsl
imul
jp
xchg
es
sub
xor
pusha
stos
jmp
pop
xor
mov
mov
add
loope
in
out
pop
mov
add
mov
push
mov
ret
lods
call
sub
push
scas
jecxz
adc
daa
and
and
xchg
push
frstor
push
lock
or
or
cmc
and
fmuls
xchg
not
or
pop
ja
jbe
add
dec
pop
jo
inc
aas
sbb
adc
test
ljmp
jmp
jmp
add
jno
repz
pop
jl
lods
adc
xor
fdivrl
inc
pusha
push
movaps
jl
cs
fcmovnbe
xchg
and
xor
loopne
push
mov
bound
jbe
jnp
and
push
stos
test
xor
inc
dec
neg
movsl
test
pop
test
rcll
cmp
xor
push
mov
cmpb
fcoml
jmp
lods
add
fcmove
add
orb
sbb
addr16
push
and
jb
pop
xchg
js
decb
cmpsl
ret
xchg
sbb
xor
dec
jno
jmp
xlat
loope
pop
xchg
jge
adc
test
mov
inc
leave
lds
loop
or
es
mov
es
dec
jbe
add
mov
xchg
push
popf
outsl
scas
daa
jno
adc
rcrb
xchg
and
or
insb
ficomps
popf
out
testb
and
sahf
jns,pt
and
sub
jmp
or
push
adc
mov
pop
repz
pop
rcll
cmp
lds
fldenv
pop
or
mov
fsub
push
push
mov
insb
push
mov
sub
and
sbb
repnz
push
sbb
cmp
addb
mov
adc
xor
or
add
inc
add
lahf
shll
jle
in
xchg
sbb
cltd
enterw
push
mov
push
pusha
dec
or
pop
cmc
jb
in
mov
outsl
jbe
mov
inc
push
cld
fsubr
cmp
add
sub
testb
mov
push
mov
adc
add
fnsave
adc
sti
mov
sbb
movsb
mov
lock
push
xchg
sarb
pop
and
push
add
pop
test
adc
pop
sar
push
dec
sbb
inc
push
mov
dec
leave
xchg
jbe
cmp
jmp
lcall
xor
sti
outsb
shl
push
push
or
in
add
out
adc
sbb
inc
daa
pop
xor
insl
mov
fs
cs
xchg
sbb
popl
in
jae
or
call
in
outsl
cmp
pop
mov
push
roll
es
push
inc
out
xchg
loopne
cmp
jmp
pop
push
jae
lahf
xchg
imul
sub
or
xor
pop
out
and
sbb
in
pop
out
mov
shrb
cs
ret
xor
cli
sub
sbbl
jmp
test
sub
pop
in
jmp
popa
mov
add
clc
dec
lock
pushf
pop
mov
fs
cmp
cmpsb
pop
pop
mov
jmp
mov
and
int3
out
cmp
cli
push
loopne
les
ja
xor
xor
divb
incb
jns
mov
add
int
movsl
mov
cli
subb
sbbb
jno
xchg
mov
mull
jg
aam
pop
divps
ficoml
aaa
cmp
xor
pop
stos
repnz
push
shl
mov
push
inc
and
mov
jmp
ficoms
xor
leave
and
loopne
and
rcrb
movl
mov
add
loope
jp
data16
into
mov
mov
mov
pop
addl
xor
pop
jmp
mov
sbb
inc
popa
xor
push
add
lods
stos
push
adc
fs
jbe
mov
pop
aaa
inc
add
lock
pop
add
push
mov
fidivs
inc
mov
push
add
jmp
movsb
repnz
in
xor
movsb
aas
je
xlat
enter
pop
sbb
dec
inc
cmp
push
pop
mov
xchg
leave
mov
hlt
sahf
fldl
fdivs
jmpw
push
lret
cs
pop
add
mov
xchg
mov
enter
ret
adc
push
pop
xchg
fwait
inc
das
mov
into
and
push
lret
popl
or
cltd
adc
enter
add
pusha
out
clc
test
inc
movsb
pop
jecxz
mov
mov
jno
mov
mov
shl
ss
movsl
pop
outsb
sub
das
gs
stc
mov
jecxz
shlb
inc
sbb
scas
fsubrp
jecxz
out
adcb
fs
pusha
pop
add
push
mov
fisubrs
sub
cmp
fadds
js
dec
ss
or
test
jns
pop
jl
dec
mov
fucom
loop
mov
imul
mov
xchg
outsb
dec
pop
std
xor
mov
mov
dec
mov
adc
push
or
pop
push
fisubs
fstpt
inc
jmp
test
adc
rolb
sub
jmp
and
sbb
sbb
xor
rorl
mov
cmp
sub
lock
add
je
das
sahf
cld
inc
inc
dec
and
mov
pop
loopne
hlt
xor
add
jmp
mov
jp
push
cmp
icebp
adc
cmp
push
aam
mov
cmpsl
sbb
pusha
dec
mov
adc
cs
pop
fadds
push
rorb
and
add
pop
lahf
pop
mov
pop
pop
rcrl
les
add
in
mov
inc
aad
pop
adc
xchg
mov
in
push
or
adc
xchg
cmpsl
inc
mov
jl
pop
ja
notl
jp
or
pop
or
repz
mov
push
sub
test
jmp
out
add
scas
and
testb
cltd
mov
dec
shl
xlat
mov
das
or
pop
and
dec
rcl
xorb
inc
std
jp
add
adc
mov
mov
repz
test
sub
mov
jg
cmc
or
dec
push
aad
adc
jecxz
std
ret
push
notb
jo
pop
mov
mov
and
xchg
out
shlb
add
icebp
xchg
cld
mov
inc
xlat
add
pop
add
jmp
icebp
and
repnz
push
and
ss
ljmp
lret
in
cmp
ret
sbbl
fmuls
dec
mov
rcr
push
sahf
popa
out
ror
dec
push
daa
add
add
mov
fisubl
mov
add
xchg
sbb
rorl
mov
add
mov
jo
and
inc
push
or
push
in
sbb
mov
imul
subl
xchg
insb
pop
ror
inc
sub
subb
jp
pop
xor
adc
push
inc
pop
add
not
push
push
pushf
and
sub
incl
xorb
jmp
clc
jae
adc
loope
adc
or
sub
and
daa
lds
pop
cmp
out
inc
jns
or
or
cmp
pop
scas
imul
mov
pop
inc
addb
mov
jmp
fnstcw
dec
or
dec
stc
fimull
jae
and
orb
adc
cmp
ret
xor
adc
add
stc
sbb
sub
mov
loop
in
dec
loope
daa
lret
and
je
and
adc
loop
jg
pop
cwtl
orb
push
sub
xchg
push
fldt
inc
adc
fucomp
pop
add
or
push
or
jmp
popf
dec
mulb
and
lret
cli
lahf
pop
sahf
aas
ds
push
imul
dec
cmp
push
add
dec
sub
sub
inc
xchg
adc
or
dec
pop
pop
mov
call
add
add
inc
xchg
les
outsb
and
inc
int3
add
test
push
aas
lret
add
sahf
sub
adc
or
pop
dec
pop
das
add
inc
daa
dec
sub
dec
xor
lret
push
popf
inc
cli
adc
mov
mov
orb
cmp
test
jmp
js
dec
or
sbb
push
mov
pop
lds
cld
dec
ljmp
xor
in
jne
inc
and
subl
pop
add
jbe
push
push
loopne
nop
dec
xor
fldenv
push
jmp
adc
sub
popf
mov
dec
or
adc
insb
iret
mov
cmp
adc
cmc
xchg
arpl
push
cmc
pop
sarb
loop
xchg
lret
ljmp
add
imul
pop
popa
jg
or
out
cmp
mov
cwtl
push
mov
fcoms
or
push
into
mov
or
adc
pop
push
test
push
fcompl
sbb
int3
cmc
sub
lea
xchg
mov
pop
and
adc
cli
push
xchg
and
mov
push
mov
and
ss
popa
adc
cld
cmpsb
sahf
push
bound
add
in
jae
mov
mov
insb
rcll
or
insl
mov
enter
cmp
add
push
test
inc
outsb
dec
std
mov
aaa
jmp
movsb
das
cmpsb
fs
push
pop
sub
ret
jmp
push
cmp
push
push
mov
and
xor
arpl
sbb
sbb
xchg
adc
sbb
imul
dec
xor
push
mov
add
rcrl
pop
cmp
arpl
jns
addb
mov
push
pop
xchg
sub
mov
into
xchg
les
imul
jnp
add
mov
rorl
movsl
sahf
daa
pop
dec
loop
push
or
adc
and
fwait
lret
pop
pop
or
cmpb
add
dec
or
enter
lret
mov
sbb
cmpsb
xorb
xchg
lock
jg
scas
inc
pop
stos
push
push
icebp
jo
xor
cmpsl
or
push
outsb
pushf
icebp
cli
aad
jne
xor
lods
popa
pop
dec
adc
pop
add
pop
stos
daa
push
in
dec
jmp
jns
mov
pop
push
imul
and
ljmp
mov
or
adc
sarl
lret
mov
and
jo
repnz
addb
pop
fsubr
bound
push
dec
outsl
shll
add
mov
push
dec
push
add
shll
add
int
adc
das
pop
pop
test
jecxz
fs
stc
jmp
cmp
push
xor
aas
lock
push
jmp
test
push
mov
inc
enter
jmp
push
shll
popaw
sbb
gs
pop
sbb
mov
and
inc
mov
enter
mov
mov
pop
push
pop
add
cltd
out
or
push
lcall
nop
out
popa
rcrb
sar
cs
inc
orl
movhps
xchg
jg
push
jmp
loope
daa
dec
sub
popf
adc
mov
rcll
xlat
js
sahf
or
jge
add
jle
andb
sti
pop
pop
clc
sub
jnp
mov
out
mov
inc
pop
sub
mov
lcall
mov
mov
xor
pop
mov
fwait
repnz
inc
inc
fwait
rcl
mov
loopne
je
nop
bound
jge
loop
mov
mov
sbb
rolb
repnz
pushf
pop
add
insl
imul
leave
sub
and
lahf
mov
psrlw
faddl
sbb
call
inc
xchg
call
stc
movsb
add
inc
lock
fsts
xchg
sbb
mov
jne
das
sub
loopne
inc
push
add
in
xchg
in
ret
pop
mov
or
cmp
sbbb
cmpsl
mov
or
movsl
jp
mov
mov
pop
or
jl
mov
pop
add
fistl
add
cmp
fstpl
push
push
std
out
imul
call
fisttps
stos
mov
jecxz
cmpsb
xchg
cmp
sbb
jne
loopne
xchg
mov
std
mov
mov
lods
jmp
mov
call
cli
das
scas
sub
or
jmp
sbb
lods
or
mov
cwtl
add
pusha
xchg
inc
outsl
and
dec
pop
push
push
and
pop
jns
xor
dec
ret
push
jmp
or
and
les
inc
mov
inc
sbb
jmp
cmpsl
and
mov
mov
enter
push
aaa
fcmovu
adc
adc
andb
clc
adcb
pop
pop
lods
inc
xchg
enter
xor
in
jns
neg
xchg
sarl
xchg
sub
shr
add
push
push
jns
push
and
mov
mov
dec
xor
imul
in
andb
and
test
mov
dec
and
push
sub
or
jmp
or
jns
popa
xor
push
jg
jmp
inc
add
push
push
xor
les
lret
in
call
mov
fimull
sub
mov
or
add
sub
lock
and
mov
xchg
lock
add
sti
xor
int3
rorl
sub
aam
sub
push
jmp
jl
xchg
pop
push
addr16
xorb
sbb
jge
dec
aad
idivb
mov
stos
adcb
stc
jmp
adc
in
int3
hlt
clc
jbe
pusha
pop
or
push
mov
sbb
in
pop
pop
out
pop
test
sub
push
push
mov
xlat
std
das
aad
adc
lret
daa
jo
add
push
stos
xor
mov
dec
cmp
jbe
push
loope
sub
dec
sbb
mov
add
sbb
sbb
jp
xchg
lds
xor
push
std
cmp
aas
or
cmp
jmp
repnz
ljmp
cmp
jnp
lea
or
xor
loope
rorl
aas
xchg
mov
mov
push
pop
nop
sahf
xor
out
push
leave
fisubl
push
jno
out
int3
cs
and
pop
adc
adcl
sub
add
fadd
aaa
xchg
jno
imul
idiv
push
scas
jo
and
mov
cmpsl
orb
or
jp
movb
jns
mov
or
pop
in
bnd
xor
dec
into
or
nop
out
das
jo
inc
out
jmp
bound
push
mov
nop
out
or
imul
icebp
mov
and
cmp
push
ret
jmp
and
stos
adc
add
loope
scas
mov
dec
mov
mov
sub
and
dec
stc
sbb
push
es
in
mov
pcmpeqw
or
or
and
loop
dec
add
jmp
fs
pusha
cmp
mov
shrb
imul
scas
push
xor
popa
sub
sub
ss
pop
pop
cmp
sub
and
pop
out
into
scas
adc
adc
out
sti
mov
cmp
sbb
sbb
mov
sub
loopne
or
je
addl
xlat
loope
push
jecxz
dec
xchg
mov
roll
xor
pop
xchg
sbb
push
xlat
lods
inc
sub
mov
mov
stos
divps
shlb
je
mov
pop
fadds
inc
xchg
push
mov
xor
cltd
push
mov
add
faddl
shrb
and
add
push
dec
mov
jno
imul
inc
or
sbb
dec
mov
dec
popa
call
cmp
pop
push
mov
mov
shlb
adc
dec
fdivrp
mov
push
mov
pop
push
or
call
push
adc
jns
inc
imul
mov
mov
or
jo
xchg
mov
jae
pop
out
push
mov
pusha
cmc
jne
jge
insl
push
or
dec
sbb
inc
lret
add
shrl
inc
cli
jg
mov
dec
es
pop
dec
mov
xchg
add
enter
ds
xor
pop
sub
dec
imul
pop
pop
mov
ljmp
mov
pop
sahf
out
lods
inc
push
subb
rcll
dec
mov
dec
in
cmc
pop
and
insb
add
xor
or
loopne
sub
cs
lods
jl
mov
daa
out
or
rcrl
jno
pop
xor
js
xor
push
cmp
sti
pop
cli
pop
repz
mov
jnp
mov
dec
mov
icebp
adc
orb
add
push
cmp
and
sbb
add
aad
mov
pop
or
or
sub
and
movsl
cmp
sub
xchg
inc
inc
push
rorl
inc
jne
pop
orb
push
jbe
rcl
sti
bound
test
mov
cli
add
sbb
add
pusha
add
push
movsb
push
cmc
subl
ds
mov
cltd
icebp
fsubl
push
sbb
popf
add
dec
pop
outsl
jecxz
and
jmp
xchg
pop
fmul
adc
jnp
jle
std
pop
add
aad
inc
cli
and
aam
ljmp
popa
push
jmp
xlat
enter
pop
mov
mov
mov
nop
add
sbb
mov
jmp
stc
imul
jb
mov
add
cmc
adc
or
pop
add
cld
in
inc
xor
xor
cmp
mov
mov
mov
add
fsubs
mov
jmp
push
push
mov
add
xchg
inc
pop
or
add
mov
jns
pop
lds
das
test
or
pop
mov
cwtl
shr
pop
enter
and
xchg
ret
lret
sbb
sub
cmpsl
pop
and
cwtl
mov
stos
not
hlt
pushf
pushf
cmpsl
or
mov
movsb
sarl
push
mov
cmpb
xchg
cmp
mov
pop
shl
push
ds
scas
jmp
cmp
das
pop
sarl
ret
outsb
push
xor
cmc
jmp
sbb
xchg
add
pop
jg
clc
insl
lahf
xchg
adc
adc
fcompl
pop
inc
mov
lahf
mov
sbb
inc
movsl
or
jno
mov
jg
insl
push
popf
fidivl
shrb
or
cld
call
sub
adc
cwtl
mov
mov
xorl
daa
and
or
fdivl
or
mov
imul
push
cs
call
icebp
or
rcll
xor
lods
xor
lahf
daa
mov
inc
das
pop
ret
cmp
and
add
jo
pop
jl
cld
jecxz
xor
or
xor
sub
nop
sbb
and
mov
daa
out
outsl
je
or
mov
add
push
mov
add
add
jmp
scas
das
pop
scas
into
jo
jbe
cmpb
cmp
jae
int
add
mov
leave
pop
shl
lods
xor
inc
fisttps
out
jecxz
jnp
rorb
pop
or
stc
xor
push
or
adc
sbb
jbe
pusha
push
push
mov
pop
in
stos
jne
pop
xor
mov
mov
xchg
jne
insb
add
jmp
push
lds
or
cmc
mov
inc
inc
push
jmp
ret
cli
mov
or
adc
add
ljmp
pop
and
pusha
xchg
jle
jns
jo
mov
xor
push
push
enter
pop
pop
jecxz
add
push
push
jmp
sub
negb
insl
jne
inc
push
cmpsl
mov
stc
stos
mov
and
mov
faddp
mov
dec
sub
pushf
leave
mov
cld
lcall
adcb
mov
or
sbbb
ss
cmp
dec
adc
pop
jbe
sub
nop
je
or
pop
inc
pop
adc
fstps
and
stos
push
mov
cltd
jns
fwait
dec
fdivrl
jno
ds
dec
mov
rol
lahf
add
js
out
add
dec
testl
xor
sub
sub
orb
in
xor
aad
mov
out
or
addr16
xor
jo
daa
jmp
scas
ret
push
repz
into
outsl
sub
add
jmp
xlat
jno
cmpsb
push
sub
jns
stos
push
jle
and
push
pop
rcll
cmp
roll
mov
or
adcb
ljmp
gs
insl
adc
and
push
add
in
cmpsl
adc
lock
pop
mov
or
cmp
add
nop
dec
pop
mov
clc
and
ja
adcl
fwait
pop
add
mov
andb
add
pop
outsb
cmpsb
xor
or
pushw
enter
addb
inc
mov
outsb
or
jns
mov
or
inc
or
test
jnp
rol
out
add
sub
and
pop
push
push
ds
and
mov
inc
mov
inc
hlt
and
dec
mov
xorl
jbe
and
sbb
cmp
push
pusha
sbb
adc
mov
ja
out
sbb
jecxz
or
cmp
adc
mov
dec
outsb
push
je
jmp
jecxz
sbb
or
push
sbb
mov
push
cmc
sub
or
fcmovnb
cmpsl
fdivrs
adc
addr16
les
xchg
sub
xchg
and
adcl
cmp
mov
sbbl
shl
in
inc
mov
jnp
adc
mov
xchg
lret
push
aam
lcall
pop
mov
into
inc
xor
mov
mov
out
ss
mov
in
or
daa
fstpl
add
mov
pop
bound
inc
lods
dec
test
scas
sub
das
jns
ljmp
rol
shr
xor
aam
push
enter
rclb
adc
mov
insl
popa
adc
push
adc
or
outsb
je
ds
xchg
sub
jo
push
jmp
mov
cwtl
out
add
sbb
jmp
out
xor
inc
mov
sub
scas
xchg
mov
rcll
repnz
add
subl
or
call
fstl
add
fildll
popa
add
cmp
push
mov
call
xchg
rcll
dec
out
enter
repnz
dec
and
imul
adc
push
int3
leave
decl
inc
decb
dec
mov
and
pop
xor
addr16
push
loopne
dec
inc
mov
iret
push
popf
mov
dec
jecxz
add
add
int
das
push
pop
add
push
push
repz
ret
pop
xor
stc
sti
ja
xchg
add
and
add
inc
add
jmp
daa
mov
inc
es
je
xchg
iret
not
or
repnz
jp
outsb
ret
adc
inc
mov
dec
inc
aaa
push
das
jmp
shrl
or
xor
outsb
cmp
dec
push
enter
sub
and
out
push
bound
cmp
or
fnstcw
push
xchg
jmp
filds
mov
ja
sbb
std
dec
pusha
lock
inc
aad
or
cmp
pop
fmuls
jl
push
pop
mov
lret
add
outsb
addl
bound
push
xchg
or
pop
push
dec
mull
push
pop
mov
add
jmp
pusha
mov
or
mov
repnz
not
push
ja
or
or
stos
mov
popf
jmp
sub
adc
ud0
add
push
jle
push
xor
add
pop
fldt
idiv
sarb
push
roll
div
add
mov
fwait
cmp
mov
pop
or
insl
add
ds
sbb
js
pop
daa
outsb
add
sti
inc
jbe
gs
dec
mov
cmp
push
or
xor
adc
test
cmp
outsl
iret
insb
adc
sarl
jne
bound
ds
aad
rcr
push
loop
mov
in
mov
pop
xchg
pop
out
clc
jmp
hlt
dec
xor
loop
aad
mov
in
cmp
or
insb
jg
pop
jns
imul
xchg
test
dec
bnd
stc
ss
sub
in
mov
stc
jl
cmpl
mov
pop
inc
sub
xlat
aas
imul
sub
mov
xchg
fs
xchg
enter
push
iret
cltd
pop
shll
pop
movsb
mov
iret
xor
daa
jmp
es
inc
pop
sub
add
out
xchg
mov
push
fldl2t
pusha
dec
and
movsl
pop
lds
fwait
stos
pop
aaa
dec
scas
mov
jecxz
rorb
jmp
bound
or
xchg
orl
lret
fmull
movsl
fnstenv
push
mov
sub
dec
sarb
enter
xor
push
test
and
xchg
std
fiaddl
dec
add
aaa
mov
or
orb
daa
push
dec
enter
jg
lahf
xor
xchg
insb
jmp
out
pop
pop
les
mov
daa
pop
jl
js
mov
inc
cs
stos
mov
or
jmp
sub
out
sub
idivb
in
or
sahf
fimuls
push
ret
pop
sbb
adc
mov
daa
and
jmp
fsts
push
jbe
js
lock
jg
shrb
mov
imul
and
mov
imul
inc
mov
adc
pusha
dec
sbb
notl
sub
mov
xor
js
insl
push
ret
adc
lods
aaa
es
int3
pop
xorb
and
mov
push
mov
lock
or
lock
sub
call
mov
hlt
rorl
mov
jge
ret
mov
jmp
mov
ja
dec
or
sub
adcb
pop
xor
mov
addb
ljmp
jmp
cmpsb
dec
dec
testl
jge
push
jo
push
xor
dec
rcll
pop
push
je
inc
leave
pop
sbb
pop
loope
cmp
add
rcrl
jle
in
ds
cmp
in
sub
outsl
mov
add
or
jmp
pushf
outsb
add
pop
addr16
addr16
cmp
repnz
add
stos
into
mov
push
inc
add
lret
dec
xchg
and
push
out
jae
xor
fadds
mov
inc
mov
into
fs
aas
inc
addl
and
icebp
pushf
movb
sub
loopne,pn
cmp
pushf
std
push
mov
in
and
shll
es
mov
xor
movsl
pop
daa
pop
das
xchg
push
sbb
pop
mov
dec
mov
inc
xor
push
mov
adc
add
and
popa
push
or
and
or
data16
dec
shr
sbb
add
add
cltd
or
out
arpl
mov
shlb
xor
fidivs
jnp
adc
imul
push
mov
jns
int
and
outsb
push
pop
xor
mov
pop
arpl
xchg
call
cmp
mov
pop
add
pop
jb
and
ret
out
xchg
jne
pop
cwtl
jne
adc
sbb
mov
or
repz
inc
push
or
outsl
xchg
mov
push
daa
es
popa
mov
add
xchg
adcb
aaa
fldenv
cmp
pop
cmp
jbe
add
gs
jecxz
sub
movsl
negl
shlb
fdivl
and
out
jmp
adc
movsb
mov
inc
data16
jo
sbb
in
adc
sub
add
aaa
dec
add
add
inc
fs
mov
pop
jle
fimuls
jnp
pop
cmp
gs
sarb
shrb
mov
and
sub
in
mov
roll
sub
mov
add
in
dec
shlb
cmp
bnd
jg
shl
out
mov
ds
jmp
sbbb
out
addr16
les
js
mov
and
mov
push
cli
hlt
int
sub
stc
inc
cwtl
and
sub
add
shlb
and
dec
and
in
mov
pop
sbb
not
inc
loop
or
adc
xor
inc
mov
or
mov
pushf
inc
testb
jl
dec
pop
jbe
fildll
insl
aas
cltd
adc
pop
or
std
push
push
stos
rolb
mulb
loope
loop
mov
dec
jp
add
loop
rorl
jle
xchg
sub
int3
jo
and
aam
jns
xor
adc
mov
addl
xor
dec
cmp
imul
sar
add
shrl
inc
setb
xchg
arpl
xor
or
outsb
not
call
jbe
jns
pop
mov
add
inc
dec
push
and
dec
push
jne
pop
or
sub
lret
pop
adc
xchg
das
movsl
roll
push
addr16
push
lcall
hlt
push
pop
movsl
loopne
inc
mov
and
add
push
dec
lods
and
call
clc
sarl
test
ret
repnz
inc
fs
xchg
ret
out
test
ja
psrlq
add
sbbb
push
aam
inc
mov
inc
pusha
cmp
clc
push
add
add
push
inc
ljmp
push
aas
into
fisttpll
dec
sbb
aad
mov
roll
mov
or
in
pop
cmc
es
aas
cmp
subb
or
fisttps
scas
cld
insl
pop
mov
shlb
or
push
xchg
neg
pusha
add
or
jmp
or
dec
pop
out
call
fcompl
mov
js
sti
popa
stos
mov
dec
orl
sbb
adc
rcrb
mov
rcrb
jge
mov
jg
push
and
pop
loop
jge
and
ja
xchg
sub
pop
push
jne
jae
and
bound
lock
xchg
dec
arpl
push
and
pop
movsl
imul
push
repnz
jl
out
pop
push
roll
mov
xor
into
add
inc
sbb
xorb
jmp
xchg
push
mov
mov
adc
or
clc
enter
dec
cmp
aas
sbb
mov
aam
lods
pop
push
xor
pop
loopne
sub
int
jecxz
push
mov
ja
and
aas
dec
xor
pop
mov
mov
dec
sarl
add
sub
cmp
das
cmp
or
lcall
cmp
leave
ror
hlt
es
rep
fsubs
and
adc
ficompl
xor
mov
lcall
dec
mov
add
mov
push
pop
call
es
ficomps
add
or
cmc
lahf
push
in
or
lcall
pusha
repz
nop
sub
add
fstl
repz
or
mov
mov
xor
jmp
cmp
mov
popa
popa
xor
pop
dec
pop
ss
aaa
mov
mov
cmp
jmp
xchg
in
push
push
lods
std
mov
and
push
dec
dec
sbb
or
push
mov
sbb
jae
add
fstpl
jns
jle
lock
rcrb
pop
test
xchg
popw
pop
push
mov
inc
test
movswl
dec
ja
or
xchg
push
jns
and
mov
add
jp
mov
add
test
add
xchg
xlat
pop
mov
mov
inc
xchg
sub
ja
jnp
out
sbb
or
dec
push
aam
mov
scas
insb
test
mov
mov
nop
xor
insl
sub
mov
lock
jmp
lds
pop
or
cmp
add
push
adc
or
rol
test
jbe
mov
add
cmp
dec
test
adcl
jnp
mov
jmp
add
sub
pop
pop
sub
fidivl
and
loop
push
pop
mov
aam
add
mov
shr
xorl
push
jb
inc
mov
and
cli
enter
test
push
mov
inc
jmp
mov
mov
lock
push
sub
inc
hlt
dec
repnz
adc
adc
push
inc
adc
or
pop
xchg
or
pushf
mov
negl
in
jbe
leave
add
icebp
push
fnstenv
push
sub
shll
jmp
xlat
mov
fsubrs
lret
pop
mov
push
xor
push
mov
imul
mov
or
mov
mov
sbb
jp
lods
movsl
fiadds
les
add
and
and
jmp
add
shr
data16
jb
or
xor
push
push
add
xchg
push
dec
xor
sub
push
cmp
aam
mov
loop
jge
cmpb
dec
xchg
mov
push
pusha
movsb
stos
jno
adc
or
xchg
push
xchg
or
pop
les
inc
ret
jae
push
out
orb
das
sbb
es
arpl
jle
lock
daa
cmp
out
and
ret
dec
jmp
mov
dec
imul
or
dec
xor
push
sti
mov
fisttpl
jge
pop
mov
loope
int3
cld
mov
and
mov
stos
xor
mov
shl
push
mov
inc
pop
adcb
lock
dec
icebp
mov
sbb
sub
pop
xor
fldcw
mov
xor
insb
mov
sbb
mov
jne
mov
push
add
je
and
adc
jmp
xor
add
ffreep
adc
orb
mov
add
push
and
add
adc
xor
and
add
js
adc
jge
mov
ja
andl
push
call
mov
xor
or
mov
jmp
inc
loopne
rorb
push
lods
insb
dec
mov
push
stos
adc
xor
pop
mov
dec
ja
add
cmpsb
cmp
pop
adc
mov
add
add
xor
xchg
mov
jp
cwtl
add
dec
xor
push
out
sub
push
or
sub
in
jnp
xor
pop
je,pt
stos
fldl2t
inc
pusha
mov
adc
mov
jbe
fsubl
pop
push
dec
add
mov
lret
xor
cld
jmp
subps
cltd
mov
pop
mov
add
mov
and
sti
xchg
or
divl
mov
bound
ss
push
jns
cmpsl
popa
adc
das
and
shll
sub
jns
mov
dec
les
ljmp
cmovnp
lds
jmp
pop
adc
addr16
mov
ret
mov
adc
fisttpll
adc
cmc
mov
out
push
cmc
pop
loope
mov
push
sub
dec
pop
mov
mov
rcrl
nop
testb
jns
pop
add
orw
mov
nop
es
jb
sub
pop
mov
daa
push
jmp
sbbl
mov
pusha
or
and
xor
les
adc
or
xor
pop
ret
loope
push
outsb
enter
iret
pusha
fpatan
into
xchg
fs
mov
adc
sub
add
test
push
add
sarb
daa
xor
push
cmp
and
gs
insb
sub
add
mov
mov
jnp
sbb
enter
pop
jbe
xchg
inc
inc
mov
or
test
dec
and
mov
inc
inc
add
cmc
into
cmp
add
mov
pop
decb
dec
or
or
pusha
mov
gs
das
push
push
in
or
jo
jae
cs
push
or
repz
out
mov
mov
inc
popf
shrl
mov
jns
push
and
into
out
mov
pusha
in
sbbb
cmpl
jl
cmc
jae
pop
mov
jecxz
inc
mov
cmpb
xor
add
mov
push
push
push
push
and
and
dec
sbb
inc
loop
int
xor
add
adc
daa
or
into
orb
popa
out
push
push
std
sbb
inc
pop
mov
inc
pop
ret
xchg
cmp
fnstcw
mov
out
jo
sub
pop
nop
test
adc
or
stc
icebp
dec
pop
push
jmp
push
xchg
stc
mov
jmp
daa
add
add
enter
or
and
pop
jl
mov
inc
jecxz
pop
loopne
jmp
xorl
mov
inc
inc
xlat
sub
sub
mov
dec
lret
mov
or
fs
add
cwtl
icebp
pop
xchg
cmp
sub
es
das
push
adc
xor
scas
fisubl
cmpsb
icebp
popa
movsb
mov
lret
push
pop
sbb
gs
or
sbb
fisubs
ret
aad
in
incb
pop
mov
add
fld
sbb
scas
mov
inc
mov
lahf
jp
pop
push
std
daa
lock
mov
xchg
stc
push
add
dec
mov
mov
ljmp
ja
mov
data16
stc
dec
ret
xchg
pop
or
add
cli
and
push
ret
xor
and
jmp
and
inc
mov
and
push
pop
mov
enter
test
or
xchg
sub
pop
pop
imul
xchg
fcoms
jp
sub
sub
and
sub
lcall
loop
xchg
mov
pop
iret
xchg
push
lret
addr16
or
idiv
inc
or
sub
out
dec
fnstcw
rcr
insb
or
stos
sbb
outsb
dec
and
or
cmp
jmp
inc
mov
mov
jle
inc
or
out
add
stc
dec
or
xor
aad
addb
cli
pop
pop
outsb
les
add
push
xor
push
xchg
or
xlat
cmp
outsl
ja
fnop
or
les
fists
mov
and
je
sub
lds
popa
mov
adc
outsb
xor
lret
stc
nop
cmp
je
adc
rorl
mov
ds
mov
cs
ss
icebp
fsubl
dec
xchg
push
stc
ficoml
jo
or
daa
xor
bound
cmp
or
neg
in
inc
aad
pop
testl
mov
cmp
push
lock
test
cmp
cmp
roll
dec
ficompl
inc
call
xchg
sti
fsubrs
push
leave
sub
jp
add
inc
stos
sub
add
adc
lock
testl
adc
mov
rorb
sar
mov
xor
in
xor
jmp
insb
and
shrb
ja
pop
pop
cmp
mov
push
add
fildll
sub
shlb
sub
mov
lea
or
fsubl
scas
lahf
rcrl
mov
push
adc
cmpsb
outsb
popf
add
fnstcw
pop
es
popl
push
push
out
aas
aad
sub
fsub
outsb
mov
fists
cltd
in
pop
jecxz
inc
stos
xor
pusha
add
enter
nop
aas
test
or
roll
inc
dec
xor
cmp
jns
imul
insl
jbe
push
pushf
dec
sbb
lea
dec
bndldx
or
inc
mov
jg
add
loop
and
push
jecxz,pn
pop
jmp
pop
add
sbb
aad
scas
add
jbe
sub
fisubrl
pop
addb
add
xchg
cmpb
ret
add
out
and
das
push
scas
outsb
mov
rcl
pop
ficomps
ds
mov
or
and
jp
ret
fadds
data16
iret
dec
add
push
jmp
loope
rorl
enter
mul
xor
mov
mov
push
lods
aaa
add
mov
inc
sub
sbb
and
sarl
gs
push
mov
jo
loope
bnd
xchg
jb
je
push
pop
push
rorl
add
hlt
push
xlat
fisttpll
out
sub
out
scas
cmp
scas
inc
mov
mov
daa
mov
aad
dec
add
add
xor
xor
and
cmp
inc
pop
push
rclb
mov
inc
inc
cmp
or
xor
fwait
xlat
sbb
cli
push
sti
dec
pushf
ficoms
push
add
notb
add
jge
repnz
mov
ret
add
add
stos
aad
mov
cmp
hlt
xchg
push
repnz
cld
andb
pop
add
xor
dec
cmc
int
mov
adc
jno
cwtl
sub
mov
or
mov
cli
lods
es
les
cmpb
mov
add
push
popa
jl
sub
outsl
cltd
sub
xor
push
jl
sbb
or
cld
and
test
lds
jmp
ucomiss
jne
loope
imul
ret
sbb
pop
or
outsb
or
xchg
jmp
push
pop
testb
outsl
hlt
sbb
inc
or
sub
out
cld
in
mov
jb
rorb
mov
movsb
xor
popa
setbe
mov
jns
xlat
hlt
int3
pop
or
push
xchg
inc
fs
xor
imul
xlat
mov
mov
xor
stos
fisubrs
add
inc
int3
in
cmp
sarb
out
pop
sub
or
mov
jmp
shr
dec
pop
push
movsl
ss
adc
mov
mov
notb
xchg
xchg
sub
out
aam
mov
push
push
aaa
jbe
clc
in
popf
sarl
jb
push
repnz
jo
sbb
repz
ja
sbb
neg
andb
jle
daa
mov
and
or
movsl
and
mov
sbbl
sbb
cmp
xchg
es
test
adc
std
or
jno
mov
jmp
fcomps
or
hlt
mov
cmpsl
or
push
stos
xor
ror
test
add
shll
scas
pusha
ljmp
adc
sbb
pop
enter
dec
push
push
fidivl
add
into
xor
test
in
sbb
popf
addr16
add
out
adc
stos
sub
add
adc
add
or
shr
call
sub
scas
or
and
arpl
and
xchg
mov
movsb
cltd
lret
test
mov
test
sub
mov
addb
xchg
pop
das
and
or
les
pop
sbb
add
repz
jns
outsl
sub
inc
mov
pop
jmp
mov
insb
adc
lods
mov
pop
les
mov
cmc
mov
ret
jg
dec
es
inc
inc
je
lret
or
stos
ljmp
sti
sub
sbb
cmp
or
lcall
sbb
adc
test
out
dec
ds
adc
pop
mov
jmp
mov
pop
pop
push
inc
aam
fdivs
nop
pop
adc
mov
and
jle
jmp
stos
inc
sub
test
in
jmp
pusha
mov
shr
or
dec
or
daa
sub
hlt
dec
sbb
cmp
add
iret
sub
and
inc
mov
enter
fs
mov
orl
dec
mov
sub
adc
add
nop
add
ljmp
pop
js
or
jmp
add
and
frndint
shr
add
push
sbb
adc
in
aad
pop
lods
scas
mov
cmp
in
adc
jp
pop
sub
adc
lcall
lahf
int3
pop
cmp
xchg
mov
cmpb
js
mov
jns
jb
fsubrs
jmp
sub
and
mov
sub
mov
push
rcrl
lods
jp
jge
ja
ret
add
arpl
mov
add
adc
add
clc
jmp
rcrb
cmp
fldl
lret
test
roll
aaa
inc
out
cvtps2pi
add
add
repnz
sub
push
pop
and
cwtl
test
sbb
sbbl
loopne
in
push
jmp
xor
xchg
icebp
push
inc
jl
or
sub
rorb
mov
sbb
xchg
pop
pop
xchg
rol
out
push
or
jl
pop
aad
sbb
dec
pop
xor
pop
mov
cmp
mov
jae
pop
sub
int
mov
push
test
or
pushw
data16
adc
fisttps
xchg
fs
lock
cli
push
pop
aas
xor
enter
push
int
push
xor
cmp
jbe
inc
and
popf
adc
mov
packuswb
pusha
movsl
push
mov
xor
or
sbb
movsb
xor
scas
ss
int
xor
mov
test
mov
adc
lret
or
jmp
filds
ja
aad
out
rorl
in
push
add
jb
add
shrl
sub
add
lret
clc
je
loopne
sub
std
pop
add
sbb
xor
enter
push
or
jae
sub
add
or
push
sub
sbb
jp
fcom
xchg
leave
or
pop
stos
lret
and
outsl
rcr
imul
mov
xchg
cmp
sbb
je
imul
mov
cmp
sbb
push
pop
adc
testl
pop
test
add
jne
js
pop
pop
imull
decb
out
fcoml
leave
shll
not
loop
ret
xor
adcb
loop
mov
stos
pop
mov
mov
ffreep
mov
filds
leave
notb
cltd
pop
or
xor
mov
and
or
mov
lock
aam
and
pushf
mov
push
inc
mov
subl
and
hlt
das
mov
jno
and
push
aas
pop
pop
and
inc
loop
shrb
mov
pusha
aaa
push
push
inc
dec
pusha
push
or
jo
pusha
clc
out
add
ss
filds
push
jmp
adc
jp
and
jo
lea
or
adc
les
and
adc
xchg
inc
ret
adc
mov
pop
mov
mov
pop
std
out
inc
xor
mov
mov
sub
and
outsl
or
cwtl
and
minps
iret
pop
or
enter
pop
sub
push
jl
sbb
loope
mov
pushf
out
inc
stos
push
pop
mov
and
pop
mov
jbe
mov
push
pop
mov
lret
rcll
ja
inc
mov
pop
rcrl
jecxz
and
push
jp
adc
rclb
mov
jecxz
push
push
jb
mov
mov
imul
inc
sub
lds
test
dec
pop
dec
rcrl
and
dec
pop
jge
pop
mov
fs
lock
out
dec
dec
imul
mov
inc
push
pop
mov
subl
shll
ljmp
inc
inc
inc
call
mov
or
jo
mov
sub
or
lcall
cmpsb
jl
xor
or
and
jae
adc
mov
not
cmp
lahf
icebp
nop
leave
rcrb
dec
mov
pop
push
add
popa
pop
pop
cmp
jmp
or
pop
pop
mov
jl
mov
es
sbb
xchg
jno
push
mov
add
and
xor
sbb
stos
jle
aam
pop
and
jb
pop
push
aam
dec
nop
cmc
ja
or
mulb
xchg
pusha
int3
pusha
mov
jl
push
addr16
jmp
fwait
adc
push
nop
sbb
imul
sahf
dec
daa
pop
fcompl
cmp
filds
es
lret
push
jg
sub
ror
xchg
clc
ja
xor
and
addb
ret
out
fldenv
push
xor
lret
or
loope
cmp
add
popa
aam
test
stos
sub
pop
xchg
xorl
icebp
dec
mov
setl
mov
cmp
pop
xchg
fwait
adcl
push
adc
mov
cmp
adc
lcall
inc
es
repnz
add
push
and
push
mov
ss
jb
xchg
or
mov
popa
cmpsl
push
rol
mov
aam
xor
jle
daa
dec
int
cmp
pop
mov
addb
pop
rorl
outsl
ds
rorl
rcrb
push
mov
inc
fildll
or
xlat
and
xor
push
dec
dec
imul
add
and
or
xchg
and
pop
add
jmp
jae
add
jbe
insl
repz
ror
cmp
inc
mov
or
mov
add
leave
loop
sub
push
add
sub
stc
inc
pop
lret
mov
or
jle
jl
adc
push
push
jmp
mov
jle
or
sbb
iret
ds
sub
clc
adc
cs
les
mov
add
adc
out
push
dec
xor
cmp
shlb
add
in
jnp
fwait
pop
jo
test
pop
pop
dec
push
mov
sar
bound
insl
add
in
das
subb
add
inc
imul
in
push
xorb
jmp
push
fistl
adc
inc
or
loope
jmp
xor
outsl
shr
adc
ret
loop
mov
data16
or
icebp
jp
xor
xor
pop
loopne
in
xchg
and
or
jmp
mov
mov
sbb
cmpb
pop
or
pop
out
lcall
ret
dec
add
insl
adc
outsl
shrl
lds
jb
xor
shrb
pop
cmp
shrb
pop
lcall
dec
inc
xor
jmp
inc
sub
jnp
sub
pop
jmp
sub
hlt
or
test
dec
lock
xor
cmpsb
inc
pop
xlat
dec
or
push
out
test
push
cmc
in
push
mov
mov
orl
ss
and
mov
nop
dec
add
adc
incb
or
repnz
xchg
ret
push
jae
mov
sub
pop
pop
and
add
mov
negb
or
dec
clc
mov
mov
inc
mov
call
dec
cld
les
pop
mov
sub
xchg
pop
pop
add
fwait
adc
ja
cltd
push
jg
in
or
xchg
jle
aam
test
sbb
leave
int3
imul
sub
popa
sbb
lret
jmp
movsl
pop
pushf
sbb
cwtl
pop
and
push
pop
sbbb
xchg
stos
sub
inc
inc
pop
popf
inc
cwtl
xor
jns
scas
sub
xchg
dec
sbb
incb
cmc
sub
jnp
mov
popa
sahf
sbb
jo
negl
jmp
cmpsl
jns
cmp
or
push
jae
mov
cmpsb
pop
lock
xchg
add
pop
push
pop
sub
ret
add
addr16
mov
xchg
in
inc
or
mov
ljmp
outsb
push
gs
movsb
adc
out
or
sbb
je
sub
rclb
sub
sub
arpl
cs
push
xchg
movsl
jle
pop
sbb
add
sbb
fldl
sub
add
inc
dec
jg
xor
inc
mov
push
jmp
mov
popa
aaa
smsw
sub
add
movsb
dec
push
repnz
adc
repnz
rorb
mov
cmp
mov
jbe
and
aam
sub
or
cmp
sub
dec
mov
mov
popl
or
mov
sbb
jne
adc
sub
push
push
mov
int
sub
sub
jmp
not
xor
out
or
mov
movl
or
popa
enter
cmpb
les
scas
and
dec
ja
stc
pop
cmp
test
or
inc
add
ja
push
fildll
shll
in
mov
test
repnz
dec
daa
es
sub
xor
jmp
pop
push
adc
cwtl
stos
inc
jne
or
daa
lret
cmp
and
jecxz
imul
es
adc
addr16
ret
lahf
wbinvd
popa
jmpw
jp
or
subb
ja
shrl
ficoms
arpl
cmp
lea
inc
jo
and
xor
jb
jns
dec
or
jmp
mov
shrb
and
loopne
mov
jmp
inc
jecxz
pop
pcmpgtd
clc
lds
mov
mov
cmpb
or
xor
cmp
and
sub
add
pop
movsb
jmp
adc
mov
das
cmpsl
cmp
cmp
cmp
xorb
jns
xor
add
pop
pop
movsl
and
mov
and
pop
push
data16
sbb
mov
jne
adc
addb
jb
mov
les
imul
sbb
sub
pop
enter
jge
aaa
mov
clc
stos
adc
xchg
sbb
sub
sbb
dec
pop
push
inc
popl
stc
imul
jo
lcall
lret
adc
adc
mov
test
fsubs
dec
dec
test
adc
adc
sub
test
mov
test
popa
xchg
jmp
mov
jl
push
inc
cmpsb
jle
dec
cmpsb
xorl
jno
xor
pop
or
sub
xchg
push
ret
out
pop
idivb
scas
push
nop
adc
adc
add
jno
adc
add
scas
or
adcb
or
cmp
push
sarb
push
in
jecxz
add
jno
adc
cwtl
lods
lock
dec
movsb
xor
jbe
add
xor
or
or
or
out
xor
into
add
jg
push
call
push
sub
pop
iret
ret
pop
add
pop
sub
push
and
mov
stos
cmp
add
jmp
push
insb
bound
sbb
push
add
and
enter
push
xchg
mov
jo
mov
call
pusha
dec
gs
mov
mov
cmc
adc
mov
mov
fnsave
hlt
mov
inc
cmp
adc
adc
mov
cmpsb
inc
or
add
xchg
outsl
sub
repnz
leave
adc
push
shll
cmp
in
or
xor
jmp
push
mov
mov
mov
rolb
push
push
loope
pop
inc
stc
mov
arpl
jmp
rcrb
clc
es
test
pop
sub
icebp
xchg
jle
jo
mov
pop
jmp
enter
mov
inc
or
xchg
cwtl
xor
sbb
stos
sarl
xchg
dec
xchg
pop
adc
adc
mov
inc
cmpb
dec
push
push
shrb
orl
jmp
scas
test
or
push
adc
jmp
lea
clc
not
jo
xchg
jbe
loopne
divb
cli
or
rcrb
orb
jg
xor
and
xchg
dec
jecxz
add
cs
jae
aam
or
shr
push
xchg
das
inc
pop
cmp
insl
xchg
xchg
sub
outsl
mov
stos
xor
clc
cmpsl
sbb
int
jmp
xor
mov
pop
xchg
jo
and
pop
push
or
iret
clc
dec
call
sbb
stos
or
xorb
repnz
or
bound
push
add
or
add
pop
fsubr
movsb
and
sub
xor
add
adc
adc
loope
insl
dec
clc
out
pop
push
add
test
pop
loop
ret
xchg
push
fs
mov
mov
add
rol
add
das
xchg
icebp
mov
int3
inc
or
jmp
mov
shrb
test
fadd
mov
aas
fstps
addb
add
leave
adc
or
jmp
mov
aad
mov
pushf
scas
shl
xor
pop
sub
aad
mov
into
jno
inc
fistpll
pop
sarl
pop
lret
sbb
add
xor
andb
push
mov
jmp
mov
mov
pop
int3
and
movsb
dec
test
cmp
mov
adc
jecxz,pt
adc
push
imul
jo
xor
add
pop
testl
xor
push
inc
inc
in
sbb
inc
cmp
or
setp
sbb
lret
cmp
add
mov
and
mov
jecxz
out
outsl
std
push
cs
insl
subl
int3
fnsave
pushf
dec
sbb
cmpl
sbb
cmp
jmp
pop
mov
add
inc
xchg
imul
push
out
add
cmpsl
adc
sti
rclb
adc
inc
ljmp
jbe
ret
sub
jno
scas
or
fdivs
out
mov
mov
or
subb
push
in
sub
sbbb
add
mov
pop
push
lea
gs
sarb
lods
sub
mov
and
mov
or
jp
icebp
or
push
mov
hlt
jae
or
iret
inc
mov
dec
push
dec
or
inc
add
pop
jmp
push
sub
pop
daa
and
test
lret
push
sub
out
xor
adc
imul
add
mov
xor
out
pop
cmc
icebp
or
or
push
or
mov
insb
ds
mov
inc
push
data16
scas
lret
adc
cmp
addb
push
lahf
dec
movsb
pop
mov
addb
xor
pop
or
rcll
out
jg
add
push
rcrl
pop
jle
xchg
stos
movsb
adc
in
xchg
lret
fs
push
sub
arpl
and
aaa
add
or
daa
jmp
imul
pop
jl
and
outsb
pop
outsl
adc
mov
inc
jge
test
lods
fldl
and
mov
fs
in
mov
dec
adc
inc
xchg
dec
pop
xor
add
add
hlt
pop
sbb
and
into
push
unpcklps
rolb
pop
dec
push
sbb
fsub
faddl
dec
mov
xor
jmp
fmuls
clc
notb
or
pop
sbb
pop
push
adc
mov
lods
jge
mov
xor
imulb
out
lret
addl
sub
xor
mov
cmp
movsb
xchg
jg
sbb
mov
push
repnz
add
jmp
jecxz
mov
push
nop
push
sub
add
leave
dec
aaa
dec
and
jecxz
sbb
test
in
mov
push
ret
mov
push
ljmp
pop
xor
dec
pop
push
xchg
negb
out
std
movsl
les
inc
lods
movb
je
lahf
ret
jae
and
pusha
dec
add
mov
jle
jb
xchg
and
xor
xchg
xchg
leave
sbb
daa
xor
fcoms
out
sbb
dec
popa
xchg
sub
popf
pushf
xchg
mov
sub
das
jns
dec
sub
loop
or
jmp
repz
fsubrl
sub
imulb
xchg
daa
fcoml
jmp
xchg
addl
cmp
jne
sub
push
scas
cltd
adc
jbe
push
jmp
cltd
mull
pop
sti
xor
out
xchg
hlt
aas
inc
js
cli
out
adc
inc
mov
adc
jbe
pusha
xchg
jp
xchg
cmp
mov
popf
dec
inc
dec
icebp
adc
stc
insl
cmp
pop
in
jmp
push
xor
fcoms
or
pop
adc
lcall
pusha
rcr
adcb
xcrypt-ctr
cmpsl
sbb
add
adc
jnp
add
insb
mov
xor
aam
adc
or
jns
in
or
insb
cmp
dec
lret
dec
pop
pop
sub
add
bound
int3
stc
sub
mov
jmp
out
cmpb
or
rcll
rclb
enter
mov
shr
lahf
cmpsl
pop
stc
or
jno
dec
pop
or
inc
push
jmp
rorl
jmp
inc
fsubrp
sbb
hlt
popa
inc
pop
mov
mov
add
jmp
rol
push
push
pusha
addr16
push
enter
push
cmp
adc
fcmovb
movsl
out
mov
pop
enter
ret
push
xor
lea
mov
or
les
into
or
ja
dec
out
sub
cmc
mov
inc
xchg
xchg
dec
lods
sub
jmp
movsl
dec
add
mov
iret
jmp
or
cmp
or
inc
or
dec
hlt
or
jg
addl
call
sub
rcrl
rcll
shll
mov
and
add
sub
cmpsb
notb
pop
adc
or
imul
xchg
pusha
addb
test
test
jmp
fcoms
pop
fdiv
pop
push
repz
addl
push
or
loop
js
jmp
pop
add
cmp
add
movsb
push
pop
and
loopne
fisubl
pusha
sbb
lods
cmpl
test
mov
aas
or
pusha
add
jmp
or
push
cmpl
in
lret
ror
int
std
lcall
jg
push
inc
insb
mov
ja
loope
movsl
sub
sub
bound
and
xor
push
adc
syscall
fistps
lock
imul
out
jnp
jnp
popf
inc
jle
push
movsl
rcrl
imulb
mov
and
fs
pop
test
stc
ror
rolb
sbb
dec
jmp
das
pop
pop
lock
mov
rorb
lcall
outsb
mov
dec
leave
dec
enter
hlt
jnp
adc
pop
sub
inc
push
das
icebp
test
mov
inc
loope
mov
in
push
mov
fwait
or
jp
outsb
pop
pop
pop
mov
push
pop
push
xor
mov
dec
adc
mov
ret
jg
ljmp
sbb
fisttpll
pop
incb
repz
mov
aas
dec
jae
pusha
sub
and
dec
gs
jb
scas
popa
in
pop
cmp
aam
mov
push
mov
mov
sub
jmp
sarl
out
jnp
cmp
cmp
int
xchg
sbb
test
arpl
lock
cmp
jnp
dec
or
rcl
adc
jge
test
adc
xchg
sbb
jns
cmpl
xchg
test
pop
test
push
jle
call
fcmovnu
test
icebp
add
and
int3
fstl
adcl
andl
pusha
addl
sub
into
jmp
cmpsb
ds
mov
xchg
push
lods
pop
adc
shll
shl
pusha
push
negb
shlb
sub
test
add
ljmp
add
loope
push
jne
add
icebp
out
loop
pop
xchg
popl
mov
not
pusha
clc
push
xchg
jnp
or
imul
imul
jmp
lds
mov
ficomps
mov
fmuls
loop
mov
sub
jp
sbbl
scas
add
jmp
fwait
clc
push
push
jmp
lods
loope
dec
std
orb
scas
imul
push
call
push
mov
sahf
neg
and
dec
jmp
loope
sbb
add
pop
or
xor
dec
in
hlt
mov
mov
lods
inc
or
mov
push
insb
pusha
cltd
push
and
pop
shl
and
and
or
jo
adc
jb
inc
inc
or
xchg
lret
mov
rcl
cmc
call
int
dec
dec
jecxz
pop
push
lods
and
fwait
pop
out
adc
cmp
xor
adc
add
cmp
or
jmp
or
xor
jmp
inc
rclb
pop
add
sub
sub
cmc
push
mov
add
jmp
inc
rcl
ret
icebp
sub
or
cmp
jns
dec
cltd
jmp
mov
push
cmpsl
inc
inc
push
mov
inc
adcb
mov
add
stos
jmp
jnp
dec
adc
js
or
xchg
mov
mov
push
xor
stos
popf
jp
mov
adc
mov
push
mov
and
or
aaa
push
and
cmp
dec
inc
fldenv
popf
push
and
cmpsl
rcrl
rcrb
adc
push
add
cmp
xor
mov
cwtl
inc
out
pop
fs
aas
lods
mov
push
add
inc
cmp
pop
jmp
lock
jmp
cli
movsl
idivb
push
jmp
stos
mov
jae
and
cmp
inc
clc
pop
and
orb
jmp
lahf
add
cmp
out
les
push
pop
js
xchg
rorb
sub
arpl
aad
push
inc
jge
mov
popf
jg
and
fwait
rorl
mov
push
push
and
sti
sub
xor
lret
cmp
sub
daa
dec
movsl
add
add
cld
gs
mov
jns
xchg
mov
or
jbe
add
pop
frstor
fcmovb
add
adc
push
fimuls
adc
dec
subb
movsb
mov
in
pop
mov
pop
repnz
cmpsb
stos
dec
cld
mov
sar
lds
pop
or
adc
lods
and
or
or
and
insb
roll
sbb
cmp
dec
push
add
mov
xchg
and
xor
adc
dec
sub
mov
pop
add
repnz
mov
pusha
jge
rcrl
movl
testb
xchg
push
dec
aaa
fstps
jp
repnz
sbb
imul
jns
xlat
sub
or
stc
jmp
mov
push
pop
pushf
and
and
pop
add
lods
dec
xchg
movsb
ret
jmp
decb
push
xchg
sub
daa
inc
iret
pusha
pop
dec
fiaddl
sub
cmp
inc
push
push
sub
mul
ret
icebp
dec
or
int3
je
xor
jmp
in
sbb
or
jmp
pop
loopne
jbe
adc
imul
ret
cmp
and
fimull
xorb
sbb
push
xchg
cmp
adc
adc
mov
in
add
mov
push
cmp
sarl
jp
sub
rclb
add
xor
pop
ja
inc
push
lods
and
mov
sub
sub
and
aam
adc
fwait
popf
and
lret
xor
filds
add
jmp
or
sub
mov
add
sbb
ficomps
and
sbb
push
push
aad
das
fnsetpm(287
pop
xchg
or
push
mov
imul
sub
mov
pop
arpl
xor
cs
pop
or
repz
sahf
iret
mov
pop
sub
mov
pop
mov
loope
xorb
add
add
cmpsw
sbb
dec
xor
or
lea
mov
hlt
aam
xor
outsb
dec
popa
shrb
sub
mov
mov
mov
add
out
pop
or
orb
cmc
adc
dec
pop
inc
cmpsl
inc
pop
jmp
mov
xchg
add
fisttpl
mov
jp
in
adc
adcl
push
jecxz
xchg
in
dec
hlt
sub
cs
out
enter
push
sub
ds
iret
pop
xor
testb
pop
xorb
clc
push
adc
cmpsl
hlt
sbb
lea
scas
sub
mov
andl
xchg
or
sub
movsl
ja
pop
cmpsl
add
pcmpgtd
pop
pop
pop
inc
sub
pusha
xor
sbb
inc
xchg
into
es
xor
dec
adc
and
jo
xchg
add
jno
push
mov
dec
sar
jns
pop
js
gs
push
add
scas
inc
and
aaa
pop
pusha
ds
push
addr16
or
pop
std
popl
ror
call
inc
and
sbb
mov
fmul
mov
jle
pop
sbb
mov
cs
inc
sbb
vpcmpgtb
xchg
ds
mov
and
sbb
dec
mov
add
jmp
stc
inc
jb
or
inc
add
lds
mov
add
imul
mov
stos
dec
rol
mov
xor
test
add
push
jge
shr
je
insb
insl
jmp
xor
pop
imul
lods
xchg
lcall
lods
pop
add
insl
xchg
xchg
int
inc
adc
cmp
add
mov
and
mov
adc
rcl
dec
push
cmc
mov
cwtl
or
addb
pop
jne
fdiv
or
jge
mov
pop
nop
popa
push
jmp
lcall
jno
add
fldt
inc
pop
imulb
push
in
popf
rorl
xor
sub
rol
push
add
pop
inc
nop
pop
and
jbe
imul
std
xchg
jle
pop
push
pop
add
pop
int
mov
cld
repnz
push
les
cli
out
push
jl
loope
cld
lock
repnz
adc
or
subb
pop
pop
inc
push
and
aad
pop
repz
push
pop
cmp
mov
pop
aas
push
cmp
sub
rcl
sbb
fsubrp
push
or
sub
rolb
or
push
mov
test
dec
out
cwtl
inc
pop
add
gs
pop
sbb
adc
inc
and
push
inc
mov
lret
out
jns
shrl
loopne
cld
sub
in
dec
sbb
lret
daa
adc
push
outsb
orl
lea
and
add
mov
fistps
repnz
popf
inc
movsl
push
push
jnp
xor
adc
cld
jmp
push
or
jo
sti
push
or
div
mov
mov
je
lods
adc
fs
xchg
pop
shrb
add
jge
mov
test
fiadds
cltd
inc
outsb
dec
xor
jae
sahf
das
mov
jo
dec
scas
jmp
outsb
cmp
out
jp
push
pop
sub
adc
sub
inc
push
daa
daa
push
push
sub
popf
pop
adc
fs
popf
jns
or
and
and
lahf
cmp
push
push
pop
sub
mov
ljmp
jl
in
adcb
push
cmp
dec
jmp
iret
push
sbb
jnp
sbb
divb
dec
push
popa
call
in
jno
je
jno
cmp
faddl
mov
fbld
mov
mov
xor
lds
adc
ret
or
sbb
mov
sbb
or
clc
test
lahf
clc
pop
pushf
pop
dec
test
ret
pop
xchg
loopne
addb
jge
jecxz
cli
fsubs
or
mov
imul
push
pusha
add
cmp
pop
mov
ss
sbb
rorb
lock
pop
dec
xchg
add
or
xor
mov
xchg
mov
sbb
test
or
cmc
call
xor
inc
add
sbb
cs
cmp
test
sti
xor
cltd
add
outsb
in
repnz
mov
jmp
add
sub
testb
fnsave
rcll
lret
in
xchg
push
adc
cmp
adc
repz
push
sbb
xlat
sub
push
lds
or
xchg
cwtl
les
push
push
jmp
sub
push
bound
daa
mov
jl
loope
cmp
popa
js
or
loope
xor
push
je
pop
mov
je
lahf
pop
xchg
shl
es
in
fnstenv
es
in
adc
mov
jae
cmp
out
mov
lret
pop
sarb
repnz
push
adc
sbb
sub
xchg
fsubs
pop
and
sbb
or
scas
jle
or
lods
xor
cmpsl
cmp
push
rorl
jp
sbb
sbb
or
adc
jmp
repz
adc
dec
lods
xchg
or
xchg
nop
fldenv
fimuls
pop
and
jl
add
mov
pop
pop
nop
mov
sub
cmp
ret
xor
cwtl
lahf
or
subb
xchg
test
adc
ljmp
enter
xchg
aam
ret
xor
add
rcll
pop
leave
pop
clc
adc
aas
xchg
out
dec
add
out
or
cmc
rcll
test
popa
cmpsl
sbb
aas
neg
add
jecxz
dec
pop
rcrl
mov
and
adc
jbe
push
pop
test
testl
or
dec
inc
push
push
push
scas
gs
and
xor
adc
shll
cmpsl
loop
int
cmpsl
and
je
pop
ret
push
xchg
mov
faddp
and
test
popa
push
popl
popa
mov
cmp
das
sti
dec
inc
xchg
movl
pop
clc
stos
test
and
sbb
insb
adcb
add
in
dec
clc
push
test
mov
sbb
test
pushf
push
mov
int3
push
lods
in
mov
popa
add
loopne
aas
in
ja
pusha
pop
movsb
insb
sub
and
fistps
push
jmp
pop
xor
push
push
and
jmp
and
loopne
push
and
jbe
sub
add
cmp
dec
xchg
adc
mov
nop
dec
mov
xchg
fs
add
push
imul
dec
cmp
pop
call
cmpsl
inc
jnp
jo
sub
or
insl
mov
xor
or
xchg
cmc
out
mov
add
ljmp
jmp
mov
sbb
mov
xchg
and
inc
das
xchg
push
and
dec
jbe
dec
push
xchg
jg
out
inc
mull
repnz
push
cli
pusha
add
ss
adc
lock
cmpl
or
aas
push
subl
xor
mov
cmp
add
or
sbb
sub
pop
mov
and
in
testb
in
ret
inc
sbb
xchg
imull
mov
fadds
or
jmp
inc
cwtl
add
xchg
mov
stc
mov
adc
stc
divb
fwait
and
xchg
push
cld
in
gs
aas
das
insb
mov
dec
fwait
xchg
test
aaa
add
mov
inc
push
jecxz
addl
or
mov
pop
in
push
lret
sti
sbb
jmp
incl
mov
adcl
int
pop
adc
loopne
out
mov
jmp
inc
dec
js
inc
popf
fmul
pop
inc
mov
ficomps
daa
adc
lods
pop
in
xor
jmp
sarb
scas
repz
subb
int3
imul
mov
xchg
or
cmpsl
pop
sahf
in
imul
pop
insb
jmp
sar
into
xor
cmpsb
jmp
and
pop
jmp
repnz
insb
jmp
sbb
adc
add
push
mov
pop
mov
sbb
das
pop
jmp
sbb
sub
adc
repz
mov
push
mov
push
sbbb
inc
jns
xchg
push
nop
aas
mov
dec
into
sbb
cmp
mov
call
and
sub
mov
loopne
mov
push
dec
shr
adc
lahf
xchg
sbb
hlt
mov
scas
lods
test
call
jle
mov
jmp
mov
pop
stos
mov
neg
insb
mov
sub
pop
aas
cli
pop
xchg
aaa
divb
into
pop
dec
std
add
push
pusha
mov
es
jno
daa
cmpsl
outsb
cwtl
int
cmpb
add
dec
jo
int3
loopne
pop
xchg
push
adc
mov
test
inc
es
inc
ret
testl
add
adc
dec
xchg
addr16
fwait
ds
pop
mov
mov
jmp
mov
and
sbb
sahf
jns
dec
fmulp
inc
or
adc
popf
cld
out
sub
ss
dec
mov
jmp
pop
ds
outsl
pop
test
add
pop
idivl
cmp
shlb
mov
xor
pop
pop
sbb
sbb
nop
cmp
jmp
rclb
add
xor
lods
adc
out
dec
xchg
jne
mov
inc
dec
add
lea
push
stc
aaa
mov
mov
push
dec
ja
ds
test
rcrl
stos
inc
or
rclb
push
dec
nop
movsb
pop
xchg
movsl
or
sbb
in
rorb
fdiv
cmpsl
adc
and
mov
pop
lfs
loopne
xchg
movsl
fsubl
cmc
or
mov
je
push
into
cmpb
mov
jmp
sub
scas
adc
into
or
shlb
adc
stos
sbb
xchg
sub
outsb
mov
pop
push
jmp
push
adc
push
not
push
mov
sahf
dec
pop
jae
lods
pop
cs
fildl
es
adc
stc
rcrl
inc
inc
jns
jns
and
in
jnp
cmp
pop
sub
pop
dec
pop
lret
xor
mov
dec
and
das
sub
js
or
cld
sub
ljmp
or
lock
jne
sti
jae
mov
mov
jns
outsb
les
movsb
inc
out
mov
add
sub
dec
push
rcr
in
movsl
in
pop
mov
dec
pop
arpl
lods
scas
mov
mov
push
daa
push
xchg
inc
mov
add
add
ret
pop
addr16
adc
mov
rcll
in
insb
sti
cltd
sub
sbbl
inc
xor
pop
pop
and
pushf
jp
sub
dec
sub
adc
pop
jge
cli
add
push
rorb
mov
std
xor
dec
add
jmp
fimuls
bnd
ret
scas
dec
psadbw
mov
dec
or
xor
or
push
mov
in
mov
test
and
fs
or
mov
in
add
mov
and
das
or
or
sub
cli
push
insb
idiv
loopne
pop
sub
aad
shr
push
bound
pop
sbb
lret
mov
xor
add
loopne
or
dec
neg
pushf
push
push
or
aam
in
xchg
pushf
sbb
test
mov
sahf
xor
mov
daa
stos
cmc
push
push
adc
stos
cmp
aas
pop
out
add
jecxz
setge
xor
cld
push
pop
pop
insl
add
inc
jmp
or
decl
mov
stos
xor
or
aaa
and
aam
jns
push
xor
addl
fidivrl
or
jg
xchg
shrl
leave
push
inc
cmp
pop
and
pop
pop
fildl
daa
jp
jmp
mov
pop
dec
and
cld
repz
sub
aas
push
adc
dec
out
aaa
gs
scas
xchg
push
add
or
ljmp
les
pop
mov
call
inc
ja
data16
push
clc
add
mov
cmpsb
adc
ds
jb
popf
pop
push
test
div
cli
aaa
inc
pop
mov
or
push
movsl
psrlw
data16
and
cmc
jp
and
pop
or
adc
ja
shl
stos
nop
mov
fisttps
outsl
movsb
lret
fwait
repnz
and
mov
js
aas
repz
or
lock
sub
lock
pop
cmp
dec
ljmp
and
fs
jmp
add
jmp
mov
push
cwtl
push
add
and
mov
jp
scas
rorl
jo
push
xchg
add
in
insb
sbb
push
inc
stos
push
daa
push
mov
daa
add
pusha
pop
push
dec
dec
daa
pop
dec
jno
sbb
lds
test
xor
sub
add
in
xor
xor
mov
sbb
and
dec
jge
shll
js
xchg
jle
jo
clc
fisubrl
fmuls
and
mov
add
jmp
punpckldq
push
repz
or
pop
and
rcrl
loopne
xor
in
mov
cltd
sub
push
test
push
push
rsqrtps
gs
pop
mov
jnp
jl
popf
or
in
push
push
xchg
popa
jle
fldenv
push
in
xchg
les
mov
mov
xor
pop
xor
adc
pop
arpl
lcall
ret
or
dec
stc
xor
pop
ret
or
inc
or
pop
pusha
test
pop
adc
inc
ret
mov
lds
sub
sub
ret
mov
add
xor
or
clc
sub
test
add
or
jmp
pop
test
pop
add
add
xchg
sbb
dec
ret
lock
lods
cmpsl
pop
mov
push
push
add
mov
or
out
divb
xchg
sbb
push
add
push
push
add
pop
mov
xchg
mov
mov
fldl
push
jne
cmpsl
and
add
ret
insb
jmp
aam
push
sub
cmp
stos
fidivrl
mov
adc
out
xchg
jno
js
add
mov
aas
xor
adc
inc
xchg
mov
add
in
or
das
aam
out
scas
les
inc
outsb
mov
cmp
ret
or
sub
sub
pop
pop
push
pop
mov
cmpl
mov
fldl
mov
push
inc
stc
pop
ja
dec
insl
add
ds
sti
test
flds
jo
and
fldcw
ljmp
mov
sub
cmp
js
jg
aaa
pop
adc
adc
mulb
cmpb
call
shrb
pop
push
add
lods
add
sub
push
push
push
inc
jmp
mov
shl
push
mov
inc
cmpsb
adc
jnp
aam
shl
sub
xor
adc
daa
pop
or
out
setns
jo
inc
jg
loope
cmp
xchg
lock
mov
xchg
adc
jne
pop
hlt
inc
sbb
push
call
sti
cmp
sbb
sub
or
xchg
and
lea
inc
xor
scas
cs
mov
adc
push
mov
cmpl
jle
das
mov
in
pop
xor
and
and
sub
scas
loope
mov
sub
or
lods
lock
shl
add
dec
loopne
nop
mov
dec
pop
add
data16
imul
mov
push
jmp
data16
xchg
pusha
out
cmpsl
xchg
pop
adc
sbb
cmp
ja
cs
ja
push
stc
int
push
or
cwtl
call
inc
mov
lcall
pop
das
shr
rcrb
bound
out
mov
sub
sub
pop
push
add
adc
lock
xlat
movsl
sbb
gs
fisttps
iret
pop
pop
push
mov
clc
roll
push
dec
loop
and
sub
nop
cld
into
jle
dec
subl
dec
lret
xchg
js
xchg
negb
test
mov
dec
mov
out
mov
fs
aaa
ds
test
or
lock
lahf
stc
add
jle
and
add
sub
sahf
or
ss
adc
cmpb
push
jns
xor
and
stos
je
shll
push
mov
pusha
mov
push
pop
shl
mov
std
in
or
ljmp
dec
push
dec
test
lea
and
or
pushf
sub
int3
adc
and
or
cmp
aam
popa
or
cs
xorl
and
lahf
aam
lahf
or
mov
fbld
imul
and
ret
mov
jbe
or
xor
incb
push
iret
inc
cmp
nop
jp
push
xchg
sti
xchg
push
mov
xchg
ret
ftst
mov
stos
imul
dec
imul
hlt
aas
or
jge
pushf
mov
sbb
inc
dec
das
sub
gs
and
xor
xchg
nop
lret
push
pop
mov
movsb
jb
rcll
xor
fstl
pop
iret
icebp
decl
pop
pop
and
shl
jb
nop
sbb
cmc
or
xorb
insl
cmp
pop
decl
test
pop
scas
cmp
jmp
dec
mov
pop
mov
jg
test
sbb
les
les
ljmp
std
in
inc
or
rep
xchg
divl
int
fistpll
jp
mov
testl
out
adc
je
jnp
dec
sbb
mov
rorl
das
jge
pop
xlat
les
cmpsb
and
pop
cmp
adc
xchg
pop
push
mov
add
pop
add
sub
loopne
or
mov
xor
or
popa
stos
dec
adc
add
adc
inc
push
mov
push
in
leave
jno
fs
adc
jl
mov
add
popf
pop
jbe
outsl
enter
jmp
cmp
lea
pop
enter
icebp
sub
fistl
mov
push
fstpt
icebp
scas
or
and
iret
add
sub
call
add
adc
mov
xchg
dec
and
ljmp
stc
push
popa
push
les
and
rcr
rolb
rorl
cmp
dec
lret
lret
mov
jecxz
push
push
ds
cmp
inc
xor
pop
gs
insb
jo
lahf
pop
incl
mov
int
int3
in
xlat
or
sub
inc
lahf
xor
jmp
mov
sbb
adc
sub
and
push
ljmp
les
mov
in
popa
sub
cmp
mov
gs
in
movsl
push
les
push
js
jmp
popa
or
adc
loopne
dec
xchg
cmp
clc
sahf
es
imul
test
jmp
xor
sub
push
xchg
or
xchg
mov
jmp
and
dec
imul
pop
push
xchg
std
xchg
push
daa
push
push
out
and
test
or
pop
out
adc
mov
mov
stc
rcrl
pop
push
push
aad
movsb
repnz
pop
popf
push
cmpsl
cs
scas
int3
stos
cwtl
sub
aaa
aam
adc
into
pop
jb
cmpsl
sti
test
mov
push
add
sub
ret
xor
add
sbb
mov
stos
pop
cmp
test
pop
xor
mov
and
int
cmp
rcll
inc
and
cmp
loopne
cmpsl
std
xor
loop
jnp
clc
loopne
ss
xchg
aaa
push
jmp
ja
ja
add
mov
xchg
in
or
or
push
sub
and
xor
xor
scas
pushf
and
clc
pop
and
jbe
adc
sbb
js
add
sbb
add
js
dec
aaa
xchg
push
jmp
push
cmp
and
shr
cmc
mov
aaa
fstp
cmp
stos
cmpsb
loop
push
loopne
push
test
lcall
and
cmp
mov
push
dec
pop
xchg
std
out
dec
cmp
mov
push
sti
int
in
pop
ret
adc
push
les
lahf
cmpsl
stc
push
or
sbb
loop
push
push
jns
shr
jnp
inc
xchg
jle
ds
xor
push
adc
jg
leave
daa
inc
bound
std
and
test
inc
dec
pop
or
adc
mov
pop
and
mov
lds
push
mov
popf
jb
pop
movb
push
leave
addb
inc
insb
inc
ss
aam
push
xchg
jge
cmp
sbb
cmc
pop
add
outsb
dec
push
xor
movsl
or
stos
popf
das
out
stos
cmp
inc
xor
push
js
pop
data16
pop
rclb
fwait
or
mov
iret
jp
add
inc
lret
test
sub
jo
xchg
add
inc
arpl
cwtl
sbb
lcall
cmp
or
in
and
js
mov
cmc
inc
sbb
push
daa
shr
loop
aaa
add
xor
dec
jne
mov
cmp
addb
xor
data16
addr16
jno
push
into
mov
xor
jae
icebp
daa
outsb
pop
loopne
lds
pop
cmp
in
adc
int
and
pop
adc
pop
insb
test
add
push
jae
jle
add
iret
mov
push
xchg
cmpsl
add
push
mov
sbb
std
xlat
mov
daa
push
dec
add
mov
fisubrl
test
dec
inc
icebp
adc
sub
push
lods
jle
adc
sub
and
rcll
xor
popa
rcrl
mov
outsb
add
push
mov
inc
sub
rorb
xor
and
push
into
add
cmp
loope
hlt
push
fiadds
sub
fmull
scas
out
xlat
and
into
inc
jnp
repz
cld
inc
add
cmc
popl
adc
xlat
loop
push
test
cld
mov
fldt
dec
mov
add
xchg
aaa
fnstenv
and
add
sbb
fsubrl
and
dec
dec
push
sbb
rclb
mov
adc
jno
andl
imul
fs
dec
ja
sbb
push
aas
dec
add
roll
out
pop
lods
ret
sub
xchg
jns
dec
and
jb
jo
jmp
pop
sub
pop
sub
jmp
or
push
scas
sbb
loope
imul
aad
jnp
jmp
sub
push
nop
shlb
inc
xchg
in
int3
xor
inc
rolb
dec
sbb
add
sbb
aas
push
adc
mov
pop
mov
add
add
sar
into
pop
xchg
mov
out
or
notb
out
leave
fiadds
pop
orb
stc
repz
or
inc
cmc
mov
shll
notb
jne,pn
mov
dec
add
repnz
mov
and
mov
loopne
neg
add
shlb
cld
push
adc
pop
push
clc
pop
or
movb
idivb
jmp
dec
dec
scas
cmp
sub
fwait
add
ret
adc
xor
fnstcw
jmp
dec
repnz
fistpl
test
aam
cli
arpl
push
and
loope
cwtl
add
popf
rcl
push
inc
leave
pop
mov
jbe
inc
pop
cmp
add
mov
add
push
and
or
xchg
add
pop
loopne
jmp
stc
xchg
pusha
dec
xchg
jmp
mov
and
xor
and
mov
popf
icebp
xor
adc
add
adc
shr
add
ds
mov
mov
mov
loop
cld
add
es
and
je
sti
popa
lods
out
jne
es
ljmp
in
addr16
mov
mov
not
or
inc
or
or
inc
inc
add
pop
xchg
adc
ficompl
mov
aam
pop
or
push
popf
lret
insl
mov
mov
int3
sbb
add
push
je
pop
dec
cmp
mov
or
jle
dec
inc
and
push
jno
sub
push
test
movsb
mov
and
test
insb
cli
dec
dec
pusha
push
test
hlt
pop
lret
imull
shrb
add
js
sub
sbb
fsubrs
push
jns
daa
ja
adc
push
test
add
cmp
stos
xor
adc
push
fstpl
mov
pop
pop
push
mov
xor
stos
or
rclb
pop
mov
subb
xchg
or
and
insb
daa
xchg
sub
pop
pop
mov
sub
xor
push
loope
sub
jne
mov
pop
adc
adc
leave
js
sub
pop
jmp
inc
xor
inc
jb
fwait
mov
sbb
daa
out
push
or
cs
cmc
mov
push
pop
and
mov
adc
push
inc
adc
mov
adc
aam
test
mov
cld
sbb
lock
sub
aaa
mov
adc
ds
inc
popa
mov
and
aad
sub
and
lds
add
pusha
or
jle
mov
std
test
xor
in
cwtl
xchg
add
insb
or
out
jne
mov
cmp
gs
cmpsb
mov
andb
or
push
xchg
std
loop
xchg
ljmp
sbb
push
mov
push
loop
jns
jo
adc
ss
pop
mov
mov
into
dec
popa
repz
inc
or
aas
test
adc
bound
aad
fs
in
nop
sub
or
ds
push
pop
mov
jno
bound
push
cld
mov
xor
pushf
icebp
cld
adc
pop
mov
int
fsubs
int
or
pop
xor
out
das
into
sbb
push
push
dec
jl
xchg
sti
out
movsl
and
xchg
das
push
sub
jmp
cmp
cmp
add
pop
pop
and
dec
jmp
movsb
jge
jne
lds
in
test
push
das
and
jle
repnz
bound
pop
xor
pop
sub
shll
testb
fnstsw
push
ret
jmp
or
sbb
mov
pop
push
sar
lret
fs
aaa
push
dec
pop
repz
mov
test
mov
or
dec
adc
cmp
add
movsb
xor
or
push
and
bound
loope
lock
mov
inc
cltd
testl
rorl
add
mov
rorb
adc
aad
insl
into
or
cli
add
pusha
pop
insb
shl
add
mov
js
xchg
jbe
ret
sbb
out
push
adcb
call
loopne
insl
loope
adc
jmp
dec
cli
or
xchg
lahf
mov
je
xchg
les
in
fiaddl
out
pop
jmp
rorl
or
mov
dec
push
sbb
jg
rorb
jnp
push
popa
stos
ficoml
fucomi
and
dec
pop
insl
mov
xor
mov
adc
pop
xor
jne
cmp
xor
xchg
icebp
in
mov
jb
dec
ret
test
fcoml
mov
mov
jl
and
subb
push
xor
pop
jae
and
xor
les
jecxz
add
scas
andl
addl
add
inc
arpl
imul
pop
mov
pop
xor
add
repz
inc
fldl
mov
cmp
adc
push
mov
mov
jmp
popf
cwtl
in
out
mov
pop
cmpsb
add
aas
mov
or
jae
int3
mov
push
jb
xchg
pop
mul
push
xchg
sub
lea
and
ja
mov
mov
pop
les
scas
pop
stos
push
inc
sbb
repz
rorl
lods
insb
jo
je
pop
push
sub
test
or
sub
jne
imul
pop
ss
mov
dec
cmp
xchg
pop
pop
imul
adc
or
jmp
rcrb
cmp
lods
fists
mov
in
faddl
dec
and
pop
mov
pop
pop
inc
jb
sub
push
mov
add
xorb
jmp
or
pusha
push
jbe
pop
imul
repz
and
inc
cmpb
xchg
out
mov
fistpll
push
test
adc
add
push
adc
push
xor
cmpl
sbb
xor
jl
cmp
inc
dec
sub
dec
inc
xor
into
out
mov
adc
jmp
push
shl
cmp
mov
rcll
cmc
inc
loopne
inc
pop
int
sub
mov
nop
add
pop
mov
pop
xlat
add
adc
push
ficompl
mov
inc
sub
add
pusha
jmp
dec
cmp
rclb
mov
lods
lock
rorl
xchg
lods
pop
push
mov
or
mov
xchg
int3
ds
pop
dec
push
mov
movsb
gs
xor
pop
mov
adcb
push
push
adc
cmp
push
in
pusha
fsts
xor
pop
and
mov
sub
or
xchg
sub
das
dec
stos
sahf
mov
jmp
jg
jns
das
aam
jae
xor
mov
mov
adc
lret
push
jbe
or
dec
leave
sub
xchg
popl
sbb
and
cmp
arpl
sahf
es
es
sub
cmp
repnz
cmp
pop
pop
jae
push
repz
daa
movsl
ret
incb
rorb
dec
xchg
adc
mov
mov
das
jmp
or
and
mov
clc
aas
mov
or
test
jmp
xchg
pop
push
aam
add
insb
divl
lock
adc
lods
mov
pop
xor
ret
in
icebp
add
ljmp
push
fistpl
xor
cwtl
mov
push
inc
mov
sub
pop
push
mov
fcoml
in
cmpsl
pop
pushl
cld
gs
cmc
push
test
sub
hlt
loope
xor
stc
sub
mov
and
and
pop
pop
imul
push
cmp
lock
dec
jp
shlb
int
mov
ja
inc
stos
and
pop
lcall
inc
dec
das
mov
jo
popf
hlt
or
xchg
scas
fiaddl
popa
imul
add
inc
cmp
je
jns
mov
and
or
iret
push
and
inc
mov
and
pop
pop
inc
mov
adc
lds
pop
shr
stos
movsb
ret
test
aam
stos
aam
add
mov
mov
push
orb
mov
sub
and
pop
mov
daa
lret
push
test
mov
sbb
add
popa
jnp
inc
sub
pop
test
repnz
pop
cwtl
push
out
add
ret
dec
and
adc
pop
inc
xchg
int3
lret
lret
add
mov
rclb
shl
add
rclb
jp
add
cmc
pop
mov
pop
addr16
aad
out
lock
mov
or
movl
pop
cmp
xlat
add
addr16
and
dec
repnz
and
add
pop
clc
add
sub
je
cmc
lock
push
xchg
shll
ja
pop
or
in
cmp
repz
jb
cwtl
test
jl
pusha
push
rolb
les
pop
pop
and
jmp
fldcw
and
xchg
add
cmp
jo
das
and
xor
popf
cmc
mov
out
hlt
or
inc
sarb
jne
jge
idivl
adcl
hlt
shll
lods
sub
jmp
adc
loop
cmp
sub
jg
push
imul
ja
cmp
mov
popf
mov
xchg
jmp
pop
sub
jp
adc
jmp
xor
push
sub
das
fbld
cmc
imul
pop
xor
leave
js
cmpsl
in
adc
mov
or
jmp
in
adc
xchg
push
or
and
repz
jp
add
and
loope
mov
jmp
xor
or
mov
xor
pop
and
push
mov
pop
push
mov
jmp
sbb
add
fadds
into
call
fs
mov
movb
stc
xchg
in
mov
mov
xor
mov
push
stos
ret
xor
jl
push
fldcw
dec
mov
mov
outsb
add
pop
or
iret
cwtl
xchg
lahf
adcb
or
push
and
in
aas
sbb
daa
sbbb
add
add
dec
je
ds
push
pop
adc
into
cs
rol
sub
test
fisubrs
push
pop
jb
pop
enter
lahf
cltd
adc
out
adc
jo
jo
cmp
pop
mov
inc
push
leave
dec
fwait
cmp
sub
pop
lahf
fcompp
imul
in
jle
daa
mov
ret
mov
jle
test
and
pop
ja
jmp
hlt
mov
xorb
inc
jl
push
test
mov
adcb
xor
aam
fstps
into
sub
push
js
nop
lea
out
out
add
xor
inc
xchg
xchg
daa
decb
xor
fisttpl
mov
cmpl
or
mov
ds
add
mov
rcrl
adc
repz
jg
push
adc
movsl
js
aam
xor
mov
fs
scas
aam
jmp
lds
je
mov
mov
stos
je
cli
nop
enter
add
pop
mull
pop
pop
pop
adc
push
xor
stos
or
ror
and
nop
cmpl
test
into
mov
mov
and
xchg
pushf
jp
mov
jo
addl
jo
jb
add
shrb
fimull
not
inc
jmp
xchg
sub
mov
idivl
mov
sub
jne
outsb
dec
dec
mov
sbb
pop
push
push
pop
inc
and
pusha
loop
adc
sub
push
mov
mov
lods
dec
sbb
fisubrs
inc
push
jmp
dec
loope
sar
out
dec
cmp
nop
das
xor
push
adc
xchg
gs
inc
push
lret
pop
push
mov
pop
movsl
mov
mov
lret
pop
ljmp
add
push
add
sub
sub
push
sub
sbb
pop
mov
add
jge
and
enter
sub
inc
jmp
mov
and
dec
inc
push
dec
mov
pusha
inc
out
lret
sub
or
inc
lret
mov
or
pop
xor
or
dec
bound
inc
pop
test
imul
push
mov
dec
imul
jle
jno
lock
out
loopne
pop
mov
test
out
sub
jle
add
call
ljmp
leave
cmp
pop
out
mov
repz
add
rcll
mov
rorb
or
lds
pop
or
mov
imul
inc
not
xor
insl
hlt
mov
aas
cmpsb
lahf
lahf
mov
add
add
jmp
lock
lods
and
popf
cwtl
cmp
in
leave
les
pop
add
jmp
ja
xchg
lret
ret
inc
cld
jbe
ljmp
je
adc
mov
jo
push
adc
addb
sub
dec
mov
inc
in
add
fnstcw
in
adc
call
pop
leave
out
orb
dec
jmp
popf
jg
repz
lds
xchg
pop
push
fildl
in
sub
ret
push
mov
mov
xor
cmp
jo
cld
sbb
out
popa
xor
xor
or
push
movsl
lcall
mov
shlb
stc
mov
daa
je
sub
adc
push
popa
add
inc
cmpsl
push
aaa
pop
imul
repnz
lcall
out
fistpl
adc
push
sti
adc
es
sbb
aas
roll
hlt
jg
cmp
mov
loop
jnp
push
jmp
ficomps
mov
je
mov
fidivrs
in
js
roll
pop
in
add
push
das
lock
lods
ds
daa
mov
cmp
out
dec
dec
aas
push
movsl
mov
lret
or
dec
lcall
test
and
dec
inc
inc
jae
jge
jg
cld
mov
xchg
xchg
dec
bound
test
mov
std
stos
mov
xchg
ljmp
push
push
push
mov
push
adc
jno
aad
push
scas
test
cmp
in
sbb
scas
add
rolb
add
dec
das
mov
jmp
cmpsb
das
pop
push
jno
pusha
or
sbb
sti
adc
jne
push
or
push
mov
jg
shl
addr16
mov
or
je
xor
mov
call
sbbb
mov
mov
push
pop
pop
cmp
push
adc
mov
roll
sbb
out
pop
fdiv
xchg
xchg
inc
ljmp
hlt
push
mov
filds
imul
cmp
sub
sahf
inc
mov
rorb
aam
adc
ljmp
pop
push
pop
addr16
cltd
lcall
add
iret
dec
dec
mov
xchg
xor
pop
dec
jp
xor
roll
testl
cli
mov
add
jmp
ljmp
push
add
mov
push
jnp
nop
fwait
add
inc
bound
add
xor
sub
pop
mov
sbb
sbb
xor
fidivl
sti
add
cmpsl
xor
mov
mov
sub
loop
sbb
pop
and
cmp
xor
inc
mov
inc
test
adc
and
inc
dec
jecxz
and
push
enter
mov
adc
push
out
aas
dec
xor
or
jbe
or
jmp
mov
push
push
fdivrs
xor
cmp
roll
rclb
xchg
testl
mov
inc
sti
les
ret
pop
adc
les
int
outsl
int3
add
sub
jnp
push
inc
cmp
roll
push
add
dec
aaa
sbb
pop
push
ss
fdiv
or
add
sbb
pop
in
ffreep
mov
shr
or
rolb
add
xor
mov
popa
inc
dec
push
mov
mov
mov
fucomi
jmp
add
cmpb
add
push
push
mov
jmp
loopne
inc
jecxz
push
mov
dec
pop
push
mov
dec
sahf
mov
push
es
pop
dec
adc
or
jnp
mov
repnz
cld
popl
mov
pushl
mov
imul
xor
shrl
sub
pushl
int3
fdiv
add
jb
cmp
add
stos
rcrl
nop
add
mov
sub
mov
push
cmp
jns
jmp
jb
stc
push
adc
repnz
push
clc
mov
jp
out
enter
mov
js
cmp
cmp
jecxz
cwtl
add
mov
push
or
or
xchg
fstp
aad
es
and
hlt
cmpsb
jge
add
pop
ret
push
hlt
mov
push
aad
loopne
repnz
ds
sub
lds
and
sbbl
mov
push
jmp
and
jp
mov
cmp
adc
jne
push
divl
or
ficoml
rclb
add
xchg
sub
ja
pusha
sub
leave
test
cmp
cmp
popa
mov
addb
incb
pop
sub
or
inc
jnp
ds
dec
push
xchg
mov
testl
xchg
pop
mov
ds
fildll
repz
and
jmp
addps
test
std
cmp
xor
sub
sbb
push
or
inc
inc
push
orb
jns
sbb
xlat
pop
ds
jle
or
adc
mov
add
pop
push
push
movb
cmpsl
cs
icebp
repnz
mov
fcomps
outsl
test
mov
fbstp
nop
jo
movsb
js
jns
out
dec
je
push
add
es
push
add
adc
adc
jnp
hlt
faddl
pop
shl
xor
pop
mov
mov
and
aas
pop
mov
inc
pop
pop
and
sbb
test
pop
adc
sub
mov
push
lahf
hlt
rcll
test
add
push
out
lea
jbe
aas
ret
dec
pop
xchg
cmp
mov
sbbb
add
gs
xchg
add
xor
xor
mov
pop
mov
pop
cmp
adc
lea
rcll
daa
pop
mov
int
mov
sbb
loop
xchg
outsb
test
mov
push
pop
jnp
mov
push
dec
sub
mov
out
pop
not
xchg
js
hlt
decb
pop
push
mov
daa
hlt
out
les
aam
xor
or
mov
jno
insb
pop
ds
add
xchg
xor
or
xchg
sub
or
xor
pop
jg
test
adc
call
in
lret
push
push
xchg
repz
add
inc
push
or
mov
jns
jmp
fldcw
xor
js
jmp
dec
arpl
test
adc
addr16
test
jmp
xchg
popa
nop
lea
out
and
push
adc
out
xor
inc
leave
xchg
push
pop
mov
pusha
inc
pop
xor
jmp
fwait
insl
fcoms
es
pop
add
shrl
mov
xor
mov
adc
pop
dec
xchg
add
pop
adc
mov
test
pop
addr16
mov
xchg
test
popf
push
std
and
mov
jle
std
outsb
hlt
loopne
dec
data16
ljmp
adc
and
fistpll
pushf
out
or
mov
adc
movsl
xor
rcrb
dec
les
pop
fdivrp
js
push
mov
inc
enter
add
pop
or
xchg
daa
mov
xor
jo
inc
mov
xor
in
iret
add
dec
pop
loop
incl
dec
pop
stos
cmp
mov
mov
push
pop
ret
cltd
stc
or
loop
sti
rcll
loop
ja
fisubrs
cmp
js
xchg
xchg
ftst
push
cmp
jl
mov
jmp
adc
popa
cmpsb
data16
leave
mov
push
shrb
cmpsb
push
mov
add
jmp
lcall
addr16
mov
or
dec
add
mov
jb
repnz
sub
pop
pop
push
and
jmp
jl
subb
scas
jne
cld
inc
imul
xchg
dec
jmp
sub
cmp
cbtw
mov
push
pop
push
push
repnz
aad
jmp
sti
cltd
lock
and
inc
std
mov
jg
adc
pusha
jecxz
add
add
sti
not
mov
and
clc
cmp
mov
roll
mov
inc
es
cltd
sub
or
outsb
lods
jge
das
repz
fdivr
mov
cwtl
adc
adc
movsl
push
mov
lods
repnz
in
popa
outsb
or
ficoms
xlat
mov
dec
adc
insb
and
sbb
sbb
loope
mov
adc
mov
push
mov
sub
test
enter
pop
mov
dec
dec
and
push
pop
lds
neg
xor
ss
jmp
in
dec
scas
pop
xor
push
ret
jp
das
test
enter
popf
inc
jb
rcr
testb
push
sub
push
push
mov
icebp
aaa
sub
xor
das
lcall
xor
shlb
insb
inc
std
xchg
xchg
cmp
shl
adc
jp
in
push
pop
push
adc
xor
mov
ret
out
add
and
inc
mov
dec
idivl
add
jle
jnp
fnstsw
aas
xchg
or
sbbl
sbb
dec
dec
in
daa
std
lock
cmp
cwtl
adc
sti
push
je
int
adc
call
xchg
push
mov
cs
imul
and
sbbl
loop
decl
js
pop
sti
inc
inc
dec
popa
data16
clc
pop
mov
mov
aad
push
imul
fdivs
pop
pop
push
mov
push
cmp
xchg
mov
jle
mov
mov
das
pop
and
sbb
in
cmp
inc
inc
out
fiaddl
aas
add
jnp
repz
pop
push
mov
add
not
add
xchg
cwtl
test
sbbl
sub
push
jmp
cld
push
fisubs
adc
sti
mov
jg
mov
push
fwait
add
jp
aaa
mov
jno
rcrb
std
test
scas
test
mov
clc
or
popl
cli
xchg
lret
or
sbb
pusha
mov
int
div
pop
cltd
in
jl
inc
test
cmp
adc
push
cwtl
or
daa
xchg
inc
sarb
inc
loope
imul
sahf
xor
fnsave
lock
jmp
pop
pop
inc
xadd
or
add
popa
out
push
mov
test
mov
lods
sub
fisttps
dec
arpl
jmp
adc
add
mov
or
push
push
xor
xor
ret
jne
neg
push
or
sbb
inc
mov
sub
shll
pop
pusha
fisubrl
ds
shr
dec
jmp
xchg
iret
addr16
out
icebp
or
cs
imul
clc
xchg
pop
daa
jb
pop
jl
or
pop
cwtl
and
sub
imul
aam
movsl
jl
jne
iret
lods
enter
popf
rcll
testb
adc
adc
popf
inc
aaa
xor
mov
daa
mov
cwtl
arpl
xor
cmc
pop
neg
pop
outsl
inc
jg
adc
lret
xchg
sbb
xchg
in
push
test
leave
push
mov
mov
pop
xor
jmp
ret
dec
inc
nop
mov
pushw
add
jmp
pop
fidivrs
mov
dec
nop
rcll
das
ja
cmp
jne
hlt
dec
inc
xchg
jns
jmp
sub
pop
shl
lcall
rcll
push
add
mov
ret
outsb
xchg
inc
jmp
fs
adc
add
mov
sub
mov
xchg
ret
push
test
enter
repnz
pop
push
lds
arpl
add
lock
test
es
pop
or
cmpsl
jb
add
xor
pop
sub
pushf
fs
push
and
add
enter
push
add
adc
or
jno
or
rorb
mov
adc
or
jno
mov
ja
inc
movsl
and
jmp
pop
mov
add
aam
loop
js
lods
rcr
ret
or
xchg
ficoml
ret
loopne
push
mov
je
pop
scas
inc
pop
sbb
hlt
imul
push
pop
pop
inc
xchg
in
ljmp
fisttps
out
rorb
xchg
imul
and
rcr
repnz
jl
jne
js
mov
pop
out
loop
andb
xchg
pushf
mov
jge
cwtl
rorl
xor
ja
flds
add
shl
push
pop
jmp
xor
jle
ds
cmp
sub
xchg
daa
mov
test
lret
dec
out
push
push
rolb
divb
sub
mul
fistpl
cmpsb
aad
mov
fdivr
jmp
fisttpll
xor
pop
or
mov
xchg
jmp
fsubrl
clc
jmp
jne
adc
and
adc
hlt
in
int
mov
ror
sbb
repnz
mov
xor
mov
push
cltd
push
icebp
add
mov
and
sbb
imul
inc
jns
push
dec
dec
inc
test
outsl
out
not
arpl
leave
lret
mov
adc
pop
inc
es
jns
push
cmp
into
add
mov
pop
jns
jbe
insb
shrb
neg
lock
sahf
and
add
pushf
jge
cli
cmc
and
into
or
push
inc
nop
loopne
pop
dec
mov
shr
or
xor
bnd
les
jg
movsb
nop
shrb
gs
ljmp
mov
addb
dec
scas
leave
sbb
fsubl
pop
subl
or
cs
mov
stos
sub
inc
inc
cmpsb
ds
popf
xlat
in
loopne
jge
sub
addr16
movsl
std
or
movb
mov
pop
fcoml
push
lret
jmp
mov
jae
cmp
repnz
rcr
mov
xchg
jmp
and
push
fsubrl
add
xchg
mov
out
add
jne
xor
test
mov
push
fildl
jecxz
adc
add
or
and
xchg
jg
test
mov
sarl
in
lock
and
add
insl
or
pop
push
notl
das
stc
fnstsw
stc
cmp
push
adc
mov
rclb
adc
and
pop
ja
xor
mov
xchg
pop
divl
dec
inc
popl
xor
push
push
mov
jmp
pop
arpl
pop
pop
pop
in
inc
or
bound
pop
mul
and
jle
xlat
cld
loopne
pop
sar
add
loope
nop
sub
test
sub
pop
cmp
stos
and
inc
inc
xor
or
mov
mov
jecxz
imulb
cmp
adc
shrb
jno
sahf
add
sub
pop
testb
ret
in
fwait
add
xor
ss
adc
lret
sbb
nop
pop
push
ss
les
push
lock
mov
clc
ja
cvtdq2ps
loop
push
pop
fldenv
mov
and
loopne
xchg
addb
jmp
scas
js
jmp
fnsave
idivb
mov
outsl
pop
add
ljmp
cmp
das
mov
mov
lret
mov
adc
adc
std
dec
stos
mov
ret
cmp
cmp
fsubl
and
pop
pop
rcrb
call
cmp
add
pop
xchg
imul
cs
fdiv
dec
xor
adc
adc
inc
popa
inc
and
fs
rorl
out
mov
aas
add
xor
addr16
adc
clc
cmp
sub
push
aam
add
je
aas
ret
mov
cmc
imul
bswap
loopne
subb
dec
inc
sbb
pop
fdivl
stos
add
stos
xlat
movsb
adc
push
es
or
mov
fsts
bound
inc
add
jp
mov
add
xchg
xchg
pop
mov
mov
int3
cmp
add
add
fstpl
leave
loopne
es
push
mov
cmp
aas
sbb
pop
ja
mov
cmp
loop
daa
or
add
out
aaa
jb
push
inc
adc
xchg
fcmovbe
or
add
fstp
cmp
int3
sbb
leave
xor
pop
loope
lods
xchg
scas
xor
inc
frstor
mov
mov
mov
xchg
lret
sbb
jne
mov
jbe
insl
rclb
sub
sub
or
push
lock
fs
mov
daa
mov
jne
xlat
imul
loop
daa
jno
fmull
pop
jns
jmp
mov
add
imul
mov
inc
add
lds
pop
xor
and
or
push
push
jb
adc
adc
push
hlt
pop
insl
test
mov
or
dec
rorb
mov
das
add
fstpl
push
jl
cs
push
push
das
cwtl
cs
adc
cmp
aad
je
out
sub
outsb
sub
in
mov
iret
or
insb
pop
roll
and
fs
movsb
cmp
popf
add
inc
push
cmp
or
pop
fsubrp
dec
mov
pop
mov
fldl
icebp
push
and
or
add
inc
xorb
fsts
dec
or
push
lock
dec
incb
pop
mov
add
aad
xchg
jne
add
xor
push
dec
mov
or
popa
push
jmp
ret
mov
dec
es
inc
enter
jmp
and
or
push
mov
pop
mov
adc
clc
rorl
cmp
xor
es
add
mov
stos
gs
add
clc
es
rolb
imul
xchg
xor
jmp
cli
lret
dec
adc
ret
dec
loope
pop
mov
push
push
jbe
push
enter
movb
outsl
std
add
movsl
adc
xor
imul
ja
adcb
inc
xor
xchg
sbb
push
mov
xchg
rcrl
mov
dec
mov
pop
sarl
mov
shlb
push
push
test
movsb
and
push
shl
jmp
mov
sub
sub
add
mov
pop
aam
jmp
adc
and
std
pop
sub
call
jp
xor
rorl
and
pop
and
ret
add
xlat
inc
call
push
add
repz
sub
imul
popf
sbbb
pop
add
xchg
jno
adc
scas
adc
ds
push
bound
add
ljmp
jnp
cs
jb
sub
sub
pop
jns
int
jp
adc
rolb
inc
sbb
cmp
jno
push
fdivl
lods
push
ja
and
push
rcr
out
push
sub
arpl
test
divb
outsl
add
aad
ficompl
out
cmp
jo
sti
push
jp
mov
sub
ja
mov
push
xor
int
jmp
aam
rcrb
add
ret
pop
loopne
sbb
xchg
leave
test
js
or
or
loopne
add
mov
icebp
fnstsw
add
and
fwait
cmc
push
mov
pop
ja
cmp
sbb
out
scas
push
in
sub
movsl
adc
adc
mov
insl
mov
inc
dec
mov
test
in
inc
cmp
jbe
add
inc
lret
js
mov
or
xor
mov
pop
ja
icebp
fidivrs
pop
inc
xor
xchg
cmp
pop
sbb
push
xor
andb
sbb
xchg
cmpsb
sarb
and
push
push
pop
push
cmp
pop
jg
add
jmp
addb
sub
sub
or
aaa
imul
and
mov
xchg
adc
push
stos
adc
lds
adc
aad
sub
adc
pop
adcl
push
in
fucomip
mov
add
and
adc
repnz
cmp
jo
incb
sub
sub
xor
jmp
pop
pusha
jecxz
leave
imulb
dec
or
cmpsb
scas
icebp
pop
xchg
mov
inc
mov
pop
sub
add
loop
stc
sarb
jae
adcb
jle
popa
xchg
push
mov
mov
pop
push
mov
mov
jns
cmpsl
sbb
cmp
dec
lahf
inc
xor
int
das
pop
xchg
flds
cmp
pop
faddl
fadds
jmp
or
je
sahf
xchg
sbb
fwait
out
jmp
mov
push
xchg
xorb
inc
popf
push
movsl
dec
fxch
or
xor
sarb
ljmp
mov
dec
cld
mov
popa
sbb
stos
jnp
fadds
mov
mov
in
pop
or
jb
jmp
inc
nop
lret
data16
inc
or
mov
xlat
in
scas
push
push
inc
push
mov
dec
dec
dec
cmc
pop
inc
jb
xor
lahf
out
sbb
cmp
pop
push
sub
pop
movsl
mov
pop
xor
cs
adc
loopne
sub
mov
add
pop
cmovae
dec
sub
and
push
mov
or
jmp
jg
cmp
jbe
inc
notl
mov
cmc
fwait
jp
int
adc
mov
pop
inc
cmpsl
pop
push
addb
imul
jo
or
push
clc
jle
or
flds
pop
sbbl
fnsave
fs
sub
addb
or
cwtl
sub
sbb
mov
mov
mov
mov
xorb
jl
dec
js
push
repnz
imul
loope
add
int
and
push
or
dec
push
ficoms
fs
fstl
add
adc
cmp
dec
pop
pusha
sbb
add
popa
leave
ret
pushl
and
pop
inc
shrb
cmc
sub
les
test
adcb
add
add
dec
add
imul
rolb
in
add
stos
sbb
addb
in
xor
ljmp
dec
jmp
psllq
add
arpl
push
xchg
cmpsb
jno
testl
test
pop
out
cmp
push
push
sub
rcl
mov
add
push
cmpsb
cmpsl
arpl
test
fisttpll
dec
dec
sub
rclb
push
xchg
jno
mov
out
sub
jne
lods
mov
or
xchg
orl
inc
push
mov
mov
cli
neg
jnp
push
int3
inc
dec
jecxz
orb
jmp
out
shrl
xor
mov
stc
or
adc
movl
and
sti
add
or
push
cmc
inc
dec
xchg
shlb
push
inc
adc
iret
jbe
add
or
mov
and
jne
or
outsl
xchg
jmp
ret
cld
xor
lret
pusha
push
mov
inc
xchg
pop
je
mov
pop
lret
enter
cltd
jbe
cs
xchg
repnz
lods
pop
and
add
jmp
cwtl
mov
mov
loope
andb
xor
enter
incl
and
inc
add
data16
jno
mov
inc
fistpl
mov
lds
sbb
jne
stos
icebp
es
dec
cli
or
lock
jbe
das
sbb
scas
mov
mov
xor
sub
call
mov
jl
inc
pop
mov
xor
xor
dec
shr
add
xchg
sarb
decb
les
add
cmp
push
mov
push
push
test
cmp
std
xchg
jl
pop
dec
pop
mov
push
inc
negl
sub
leave
sub
cmpsb
cmp
adc
call
xor
and
movsb
pop
xchg
add
js
cmp
lcall
adc
outsb
push
push
shr
out
xchg
lods
jmp
into
jp
addr16
sub
jge
sahf
jle
pop
add
add
cmpsl
cld
dec
addb
cmc
imul
insb
sbb
dec
clc
in
push
sbb
jmp
adc
inc
sahf
mov
jg
popf
bound
dec
jne
inc
cmp
xchg
and
push
dec
mov
fcmovb
pop
mov
mov
dec
cmpsl
test
mov
sub
in
movsl
es
movsl
sti
mov
dec
rorl
mov
andb
loope
pop
sub
adc
nop
or
cmp
int
pop
in
jb
out
inc
pop
jge
cmc
pop
ret
push
push
mov
push
mov
mov
jns
popa
jmp
xchg
dec
xchg
dec
jo
nop
xchg
popf
push
add
or
js
pop
sub
pop
xor
xchg
cmp
mov
shrb
stc
add
ds
or
je
xchg
jmp
jg
mov
xchg
loop
dec
jecxz
dec
add
inc
push
das
andb
mov
adc
sub
adc
dec
shl
pop
ja
jb
sbb
enter
xchg
cmp
mov
shl
sub
inc
mov
lock
jb
jg
imul
cld
push
push
add
pusha
fcoms
add
and
xchg
or
pop
or
adc
xor
mov
pop
xor
mov
push
das
test
hlt
xchg
or
cmp
out
out
mov
mov
inc
orb
ds
fsubs
stc
dec
dec
ljmp
mov
ret
add
sbb
or
test
lock
sahf
mov
flds
add
jbe
je
xor
xchg
repnz
cs
out
sti
pop
or
in
pop
divl
das
cmc
add
mov
push
and
xor
incb
repz
jb
sub
lcall
add
out
test
loope
push
movsl
and
pop
in
cld
xor
out
test
mov
icebp
dec
aas
mov
inc
mov
sti
loopne
insl
and
orl
sbb
shlb
pop
pop
test
mov
int3
arpl
jg
push
jmp
fisubl
sbb
sub
insl
es
in
xchg
sti
mov
dec
cmpsl
pop
aam
cli
ret
mov
push
bnd
cltd
xor
std
inc
daa
aad
jo
and
out
adc
shl
or
sbb
inc
jge
fistl
and
and
addb
inc
mov
xlat
sbb
add
cld
in
mov
jmp
fmul
add
jbe
push
sub
push
jbe
or
dec
and
lock
movsl
cld
dec
addb
xor
sbb
jecxz
jo
popf
cld
insb
jns
outsl
cmpsl
jb
lds
sub
mov
push
inc
adc
in
dec
jl
jo
ret
fcoms
inc
aaa
fs
sbb
subb
push
inc
inc
fisttpll
test
imul
inc
out
cmc
push
aas
repnz
ja
subl
sbb
cld
mov
fstl
pusha
jg
das
and
hlt
int
push
push
add
mov
cs
sub
pop
shrb
stos
popa
fiadds
aas
cmpsb
stos
pop
mov
and
loopne
shlb
sbb
xor
adc
ljmp
pop
scas
or
fcmovu
and
imul
adc
lret
lea
and
insb
add
ss
mov
sub
loopne
xchg
into
call
jmp
lea
push
sar
jne
orb
nop
and
mov
sub
xchg
add
ret
shlb
or
cmpsl
jl
or
or
fimull
inc
jb
orb
mov
jg
bound
int
popa
mov
mov
jle
or
xchg
xlat
mov
fmuls
xchg
dec
fucomip
mov
rcl
testl
and
add
push
xor
or
pop
setno
mov
in
push
xlat
das
test
popf
je
shl
and
cltd
dec
mov
jp
addr16
and
orl
mov
pop
xchg
add
neg
negl
daa
popf
add
adc
stc
add
xor
inc
or
adc
dec
loop
add
ja
and
push
xor
ds
xorl
dec
fildl
push
sub
fstpl
in
arpl
in
lret
add
ljmp
mov
pop
mov
or
jno
jge
vpavgb
rorb
leave
xchg
cmp
cmp
add
outsl
mov
scas
sub
lock
loope
cld
cmpsb
cmpsl
jb
ds
scas
push
lock
std
pop
fwait
and
mov
cmpl
push
cmp
das
inc
in
push
add
cmp
xchg
xlat
or
dec
or
iret
push
ljmp
xchg
sub
repnz
mul
xor
or
pop
fimuls
movsl
jnp
add
or
and
cmc
fstl
arpl
std
xchg
adc
add
sub
cs
and
mov
repz
sbb
xchg
sbb
adc
rolb
hlt
and
or
jg
sbb
jge
insb
test
inc
sti
sub
sahf
pusha
sub
dec
sbb
andl
sarb
icebp
push
ds
and
inc
jnp
fildl
mov
pop
je
xor
xor
idivl
or
aam
jb
call
and
insl
bnd
inc
js
and
and
loop
mov
jmp
adc
sub
push
test
addb
push
insl
cmpl
xor
xor
mov
sub
cs
add
ret
es
nop
jle
stc
lahf
or
fists
das
xor
jmp
ret
addl
ret
iret
jo
xor
or
sub
fstpl
in
jmp
stos
adc
jmp
or
lds
out
cwtl
test
popf
shlb
jbe
sbb
push
pop
pop
pop
es
imul
sbb
mov
pushf
loopne
shl
push
jne
pop
inc
test
xor
mov
out
mov
push
inc
movsb
idiv
test
push
repnz
sbb
xor
add
xlat
inc
inc
or
lahf
push
cmp
test
gs
jb
jns
dec
stos
xor
pop
jmp
rcl
push
inc
push
data16
cmp
call
imulb
popf
or
dec
xor
fdivr
pop
pop
loope
and
or
push
jb
rcrl
mov
push
mov
sbb
add
mov
addl
pop
jl
push
ret
out
pop
mov
in
ljmp
pop
jg
push
cmp
nop
daa
lock
fidivl
into
xchg
dec
mov
int
shll
adc
jecxz
sub
scas
cs
mov
and
cmp
pop
add
lods
stos
jbe
dec
lcall
lret
push
lods
mov
dec
mov
into
mov
or
mov
jle
call
stos
insb
std
pop
cmp
imul
fwait
and
xlat
sbb
or
iret
es
cmp
int
mov
imul
sub
or
xor
das
push
aam
mov
mov
adc
lea
push
xlat
mov
ds
xchg
cmp
jg
in
pop
sub
or
add
dec
pop
mov
es
bound
shl
xchg
div
adc
icebp
mov
jns
pop
sbb
mov
mov
lock
lods
xchg
out
xchg
push
pop
into
data16
adc
icebp
jae
pop
mov
call
pop
in
push
jmp
add
mov
inc
cltd
inc
mov
jmp
jg
les
jg
rcrb
repz
out
adc
mov
aam
jmp
and
cmc
adc
test
shr
insb
fadds
mov
lret
or
add
iret
pop
xchg
cmp
insb
fistps
jmp
fimuls
inc
les
xchg
stc
inc
cwtl
sub
jbe
mov
xchg
xchg
inc
or
clc
das
loopne
jle
sub
inc
jb
imul
cmp
adcl
nop
cmp
pop
popf
arpl
aam
es
pop
lds
sub
std
push
mov
dec
sti
inc
or
cli
out
test
test
imul
pop
jne
cwtl
addr16
fldenv
add
adc
add
jge
and
jno
cmpsl
jg
mov
jmp
sub
scas
clc
mov
push
sahf
jmp
sahf
mov
jb
out
out
cmpsb
dec
mov
out
repz
scas
dec
cld
pop
cmpsl
loop
push
xor
pop
jo
jge
jecxz
ret
jmp
in
lahf
push
and
aad
iret
dec
mov
xor
xor
and
out
push
movsb
or
or
add
mov
pop
xor
lret
push
add
xor
jmp
pop
iret
pop
mov
enter
xchg
xchg
outsb
sub
jnp
stos
and
lds
cmp
sbb
mov
loop
imul
mov
es
int3
adc
dec
pushl
jge
jmp
stos
jmp
inc
inc
and
pop
test
sub
pop
adc
dec
jecxz
daa
mov
push
out
cmpsb
push
cwtl
cmp
ret
pop
icebp
data16
add
pop
sub
push
inc
scas
movsl
das
add
push
mov
sub
cltd
rclb
pop
sbb
popa
mov
mov
rcrl
push
pop
cmpsl
pop
xchg
add
lds
or
pop
pop
inc
jmp
xor
mov
xor
es
cpuid
fnstsw
roll
ja
xchg
adc
out
or
mov
adc
aad
fwait
das
in
mov
xchg
roll
out
cld
jecxz
enter
jge
inc
xlat
dec
xor
scas
and
call
pop
or
or
repnz
add
push
scas
arpl
xchg
sbb
cmp
pop
push
add
push
mov
or
inc
add
sti
or
xor
jnp
or
push
add
iret
or
je
sbb
or
or
sbb
mov
cmp
fistps
pop
ja
in
or
fcomps
adc
leave
xchg
adc
les
and
cmc
js
add
push
incb
pop
popa
inc
cld
int
jne
scas
fstl
jmp
and
add
out
and
orl
fimuls
cmpb
cmpsl
popa
cld
incb
or
lahf
adc
mov
mov
sub
fstps
loop
std
sub
push
add
push
sarl
add
dec
adc
and
push
push
lret
xor
imul
push
xorb
repz
xchg
cli
cmp
and
adc
ds
sbb
adc
das
mov
cwtl
pop
nop
cmpsl
out
push
mov
fimull
clc
jle
repz
scas
mov
dec
clc
and
lret
iret
jmp
xor
lds
cmp
push
inc
sti
cs
call
push
movsb
sbb
sub
jo
int3
popf
mov
xor
stos
mov
pop
jae
leave
dec
inc
mov
fnsetpm(287
out
icebp
push
jp
pushf
push
adc
aas
lds
pop
mov
mov
jg
cmp
loope
subb
inc
jmp
call
or
fbld
std
das
sub
add
pop
push
out
and
pop
test
into
or
fldenv
nop
rclb
xor
movsb
sarl
push
xor
xchg
pop
stos
std
xchg
call
cmp
loop
pop
pop
sub
or
mov
sbb
adcb
cs
mov
mov
std
gs
cmpsl
shrl
adc
in
adc
sub
mov
mov
test
clc
inc
out
dec
push
or
or
xchg
add
inc
or
sub
cli
dec
and
mov
push
add
hlt
sub
add
sbb
sbb
rolb
inc
push
mov
xor
add
xchg
adc
mov
dec
in
inc
sbb
bound
cmp
or
divl
xorl
and
les
lret
mov
cltd
sub
push
xchg
or
or
adc
add
hlt
dec
sbb
cmp
mov
and
or
subb
or
push
push
ds
sbb
add
jecxz
sbb
lret
dec
inc
enter
out
push
inc
push
adc
and
jnp
dec
push
inc
cmp
add
add
pop
cmp
xchg
enter
mov
lret
mov
cld
dec
sub
ret
je
dec
add
pop
or
not
sub
cmp
sbb
push
mov
shlb
and
pop
sti
and
mov
mov
pop
pop
push
mov
dec
mov
push
inc
mov
out
adc
or
xchg
mov
lcall
lods
jmp
out
repnz
adc
rclb
pusha
in
jo
push
push
adc
sbb
jmp
movsl
loopne
rolb
pop
nop
rclb
dec
test
adc
ret
imul
push
das
jge
add
dec
call
xor
dec
fldl
dec
add
add
shlb
cli
sub
sub
pop
and
and
jg
xor
mov
adc
jae
jae
push
mov
xor
pushf
lea
pop
add
or
sbb
in
push
lret
and
pop
sub
das
sbb
push
push
pop
in
dec
in
mov
lret
inc
or
aad
xchg
adc
shll
and
int3
loope
cmpsl
xor
push
sbb
jnp
call
xor
add
xor
fiadds
dec
clc
jmp
daa
sub
sti
inc
sub
add
jmp
rcrl
pop
imul
pop
inc
incb
inc
or
ficoms
mov
cld
fsin
test
enter
xchg
lcall
fiadds
and
outsb
push
mov
loopne
inc
mov
inc
jl
icebp
sarl
jl
dec
scas
mov
cmp
and
adc
es
inc
add
std
lods
cmp
and
repz
and
out
adc
inc
mov
jg
cmp
pop
loopne
jge
pop
imul
test
xchg
je
dec
sub
dec
test
out
es
adc
dec
push
adc
ss
push
push
sbb
jmp
inc
inc
or
imul
adc
inc
adc
add
stc
xchg
ret
lods
pop
or
out
add
inc
mov
pop
add
lds
pop
inc
sub
je
mov
or
and
inc
jecxz
dec
and
cmp
push
add
jb
lcall
movsb
jae
sub
pop
mov
jb
popl
lods
jl
mov
mov
sbb
mov
sub
nop
out
push
add
adc
xor
sar
add
lock
jmp
rolb
popf
loop
xor
into
les
jns
add
push
sahf
and
push
dec
push
insb
in
lock
imul
test
in
push
or
inc
jno
add
add
lods
inc
dec
cmpb
sub
rol
mov
mov
test
icebp
mov
rcll
sub
enter
loope
and
and
sub
sbb
loopne
xor
das
jecxz
jbe
pop
insb
adc
int
push
push
addl
inc
sbb
pop
popa
cs
pop
pop
push
sub
cmpsb
jmp
cmpl
inc
and
xor
out
pop
adc
mov
cmp
add
push
xchg
add
push
cwtl
imul
push
ds
in
jmp
jns
add
clc
adc
mov
xchg
sub
scas
enter
inc
in
and
int3
and
imul
insl
mov
mov
fldcw
imul
das
fbstp
bound
sahf
xchg
jg
or
jge
pop
jno
pusha
or
mov
rcr
scas
ret
cli
orb
pop
mov
xchg
inc
mov
xor
dec
les
jno
add
adc
adc
orb
xor
mov
adc
clc
push
daa
push
push
leave
loop
mov
lds
push
sti
push
mov
mov
sub
popf
icebp
mull
adc
shr
sbb
cmc
sub
daa
pop
sarb
adc
movsl
fiaddl
push
je
sub
sub
pushf
inc
dec
addl
mov
pop
in
jne
fadds
push
or
mov
or
bound
sbb
clc
adc
in
sbb
mov
inc
jle
push
mov
shrb
shrb
jg
stos
push
shl
pop
in
pusha
fs
jne
jl
add
and
aam
jmp
ds
rclb
scas
sbb
lret
pop
aam
loopne
cmp
jl
push
sub
sub
insl
jne
pop
das
or
jecxz
jmp
cli
cmpsl
adc
movsl
inc
mov
ret
cmp
out
adc
inc
xchg
mov
inc
xchg
stos
fxch
inc
ds
lret
jno
lds
fimuls
inc
or
std
jle
sub
movsl
mov
in
pop
pop
jb
addb
inc
insl
or
jbe
stc
in
jge
and
add
jmp
jnp
in
incl
inc
pop
incl
adc
outsl
dec
pushl
mov
cwtl
cmp
jl
cmc
xor
test
xor
fstps
aas
std
iret
pop
call
mov
ds
xor
dec
inc
adc
scas
add
jmp
movsl
xchg
fs
icebp
add
test
or
inc
pusha
or
xor
push
popf
xor
or
push
out
sbb
jnp
add
mov
add
sbb
mov
inc
sub
mov
push
outsl
pop
inc
stos
gs
pusha
popa
push
push
cwtl
fadds
cmp
add
adc
mov
add
jb
add
addr16
and
push
jle
pop
push
pusha
jo
dec
das
in
scas
shrb
mov
jecxz
or
push
push
sbbb
or
sub
fstps
orb
and
fcoms
mov
dec
ret
fdiv
popf
dec
mov
sub
and
pop
jmp
push
and
ja
jmp
flds
data16
shlb
popf
mov
loope
fmulp
imul
add
pop
and
push
xor
loop
push
push
push
push
bound
or
adc
outsl
inc
stos
push
ret
icebp
add
sbb
pop
add
mov
jmp
adc
scas
pop
cmpsl
popf
add
sub
pop
loopne
pop
push
orb
pop
lahf
test
xor
loope
pop
cs
popa
cmc
add
sbb
jns
ret
xor
and
call
lahf
and
push
movsl
dec
adc
ja
dec
pop
jmp
jg
inc
xchg
or
mov
mov
cmpsb
orb
insb
cmp
in
sar
shlb
or
enter
xor
push
dec
out
and
negl
ljmp
out
loop
push
aam
jmp
out
ret
dec
mov
add
jae
pop
aas
add
xor
imul
add
insl
test
loop
adc
pop
pop
sbb
in
xchg
out
jmp
dec
cmpsb
fldcw
pop
adcb
push
pop
push
movsl
adc
xor
stos
test
in
stc
adc
dec
cli
and
pop
push
push
outsb
sbb
push
jmp
inc
dec
push
gs
push
fstps
cmp
jle
push
push
adc
mov
push
pop
jecxz
sub
shll
mov
xor
daa
push
push
in
fldenv
mov
idiv
insl
and
hlt
inc
mov
sub
jecxz
push
xlat
pop
push
or
mov
bound
frstor
mov
mov
jno
shll
fwait
into
adc
xor
mov
and
jmp
cmp
or
push
cmp
int
jle
popf
fimuls
inc
cld
and
jmp
sub
jecxz
sub
pusha
fcomi
sbbl
icebp
jl
int3
add
jle
int3
push
sub
lahf
adc
adc
enter
and
jecxz
push
pop
jmp
test
pusha
addb
loopne
lods
in
iret
ja
out
fst
imull
pop
js
sub
movsl
push
lds
or
gs
and
addb
xchg
sarb
pop
jecxz
test
cmp
cs
scas
mov
test
jge
cmp
out
mov
mov
idivl
xor
std
lret
test
cmp
imul
jo
mov
scas
push
fs
jo
adc
cmpsb
pop
ret
mov
pop
imul
mov
mov
dec
mov
rcr
cmp
mov
mov
pusha
add
mov
sti
or
xor
stc
pop
shl
mov
add
inc
daa
and
pop
mov
repz
add
push
bound
dec
jge
cwtl
out
ja
and
add
jne
stc
add
shlb
out
mov
add
sub
sub
adc
mov
add
ljmp
xor
dec
aad
loop
xchg
push
aam
add
sub
bound
inc
jmp
or
jns
push
mov
das
daa
sub
test
or
sbb
dec
sub
jg
mov
inc
fnstsw
inc
push
aad
mov
fistps
pusha
pop
pop
or
push
scas
cli
push
clc
repz
testb
push
push
inc
jle
dec
mov
cmc
lock
xchg
jb
pusha
fnsave
fs
aaa
and
dec
ds
lcall
lds
dec
or
inc
orl
cld
testb
aam
and
movsl
in
aam
jno
fimuls
pusha
popa
sbb
inc
in
iret
or
inc
test
je
cs
insl
pop
ljmp
dec
es
std
fcomps
ret
adc
addr16
mov
jo
pop
not
sbb
pop
xchg
gs
sub
pop
dec
aad
ja
repnz
jmp
mov
sarb
push
fs
xor
cli
mov
push
stc
or
ds
test
loope
das
cmp
sub
adc
or
movsl
jne
or
xchg
pop
mov
sub
push
adc
mov
jne
jp
out
stos
cmc
mov
fs
mov
jge
test
inc
mov
pop
sub
or
clc
add
dec
cmp
push
mov
adc
shl
pushf
push
test
clc
jmp
push
jmp
rcrb
iret
repz
sub
pop
fs
jg
pop
mov
pop
push
hlt
fistpl
mov
lahf
adcb
in
inc
mov
xor
add
imul
pop
arpl
movsb
jnp
popa
or
adc
add
jmp
and
xchg
dec
pop
cld
pop
inc
les
mull
and
xor
or
addb
js
or
pop
push
jmp
xor
jbe
add
bound
mov
jnp
sbbl
pop
cmp
adc
mov
push
mov
pop
pop
and
addb
loop
shl
pop
shl
ret
das
pop
pop
adc
sub
movsb
push
push
enter
sbb
mov
sub
bound
mov
fistl
sbb
enter
ret
xchg
inc
jne
mov
adc
cmp
cld
push
neg
jno
repnz
or
in
lods
pop
imul
aam
movsb
aad
std
xchg
scas
xchg
jl
push
pop
cld
faddl
dec
mov
fnstenv
loop
or
repnz
cs
out
dec
pop
sbb
cmp
je
mov
jp
enter
xchg
mov
lret
outsl
movb
addl
pop
push
add
add
mov
and
insl
pop
outsb
test
andl
loopne
sub
movsb
adc
xlat
scas
repnz
xlat
or
dec
dec
mov
inc
xor
mov
daa
mov
pop
cmp
cmc
mov
xchg
call
scas
pusha
xor
push
ret
or
pop
and
push
mov
xor
mov
dec
nop
rorb
jl
add
leave
and
out
movsb
push
adc
mov
mov
sbb
sub
and
jo
sbb
mov
mov
insl
and
xor
repnz
into
pop
dec
movsl
sub
and
fisubs
or
cs
lcall
into
jl
inc
mov
sbb
mov
jmp
adc
fldl
call
sub
das
xchg
xchg
out
push
push
jno
and
pop
xor
pop
mov
or
add
pop
jle
or
sub
sub
sub
push
jecxz
mov
push
sbb
je
mov
in
gs
inc
xchg
and
lret
jg,pt
out
lcall
lock
bound
mov
and
pop
pop
mov
arpl
mov
test
mov
jg
fisttpl
xor
inc
std
adc
add
xor
es
popa
inc
fmul
loope
jle
icebp
sub
adc
or
movsl
inc
shl
mov
pop
adc
std
adc
jmp
icebp
lret
inc
mov
fadd
mov
xchg
pop
testb
jle
rcll
adc
les
popf
xor
call
les
mov
sbb
cwtl
push
pop
dec
incl
sub
test
addb
test
xchg
xchg
ljmp
inc
inc
jle
scas
fcompl
mov
mov
add
cmp
jmp
pop
out
imul
sbb
or
pop
and
incb
pop
lret
jp
adc
mov
xorb
fnstcw
pop
pushf
sbb
mov
or
popa
sub
stos
loopne
and
dec
jmp
stos
and
sub
negl
mov
jbe
sub
jb
inc
dec
or
fucomp
and
push
test
and
rcr
stos
adc
mov
add
ret
hlt
push
or
orl
iret
push
mov
sub
cmp
cmc
call
pop
outsl
add
inc
jmp
sbb
dec
sub
pop
lds
pop
pusha
iret
jae
aas
pop
imul
mov
int
cmp
sbb
cmp
xor
in
mov
lea
pop
jno
jmp
xor
and
jle
pop
out
loope
outsb
xor
adc
enter
adc
and
and
jge
or
jmp
jne
pop
xchg
sbb
sub
cwtl
mov
sbb
imul
std
xchg
inc
nop
jne
pop
or
jmp
dec
push
out
sarl
dec
and
movsl
xor
mov
loopne
js
nop
or
and
dec
fisubs
orb
testb
mov
pop
jg
xor
push
inc
or
cmp
xchg
cli
push
jbe
cmp
mov
add
pop
and
and
add
mov
pop
outsl
add
xchg
icebp
icebp
add
bound
push
push
es
fwait
adc
ljmp
jmp
dec
and
out
push
push
sbbb
loop
mov
xor
int
mov
and
cld
inc
in
stos
mov
add
xlat
jmp
jne
mov
pop
fnsave
adc
daa
ds
inc
repz
pop
jo
or
test
inc
andb
mov
jge
sti
push
es
sub
sarl
mov
inc
or
popf
clc
xor
sbb
push
jle
xchg
femms
mov
adc
roll
mov
inc
sub
adc
imul
push
or
fidivl
test
lds
rorl
xor
pop
dec
dec
enter
xor
add
pop
push
jmp
out
sub
sbb
mov
add
les
xchg
sbb
popl
xchg
push
in
int3
addr16
dec
push
loope
cwtl
imul
add
inc
enter
add
add
add
push
xor
pop
pop
jmp
sub
pop
pushf
fwait
aas
fs
das
sub
mov
ret
dec
stos
ja
repnz
pop
icebp
sub
or
pop
sbb
pop
pop
sub
dec
out
cli
imul
lds
andl
mov
mov
dec
mov
loope
jle
shlb
stc
mov
fisttpl
xchg
dec
mov
push
popf
xor
mulb
sub
add
inc
dec
ds
lds
cmp
add
negb
sub
loope
lret
xchg
dec
sbb
icebp
push
xor
mov
dec
jmp
shlb
push
mov
sub
and
enter
fdivs
push
loope
cmc
add
and
mov
xor
push
pop
xchg
outsb
mov
cld
jle
adc
mov
pop
add
jmp
subb
sbb
mov
or
cmp
jnp
in
bound
jge
push
push
pop
pop
adc
mov
xchg
push
sti
repz
std
mov
or
sbb
adc
dec
orb
adcb
jbe
out
lahf
cli
mov
xchg
xor
or
mov
or
push
jbe
shr
sbb
xchg
mov
jmp
and
add
jle
sub
push
dec
gs
fcompl
adc
cmp
xchg
xchg
pop
jb
jbe
mov
pop
dec
cld
stos
pusha
add
xor
jmp
testl
lret
or
imul
nop
sbb
add
pop
mov
jmp
and
daa
in
jmp
pop
push
add
mov
add
adc
fnstcw
aam
aaa
test
mov
push
add
mov
mov
mov
in
das
fnsave
mov
cltd
xchg
mov
mov
out
inc
movsl
sbb
jp
aam
lcall
dec
mov
pop
xor
cmpl
push
mov
or
mov
shlb
pop
insb
inc
shr
mov
aam
jo
loope
mov
jp
out
xchg
es
mov
lock
inc
push
fidivl
lcall
xor
movsb
jmp
xlat
jle
and
mov
cmp
inc
xchg
pop
push
cltd
scas
add
jo
jg
pop
sbb
mov
adc
test
add
addr16
movsl
xchg
aaa
stos
test
scas
popl
hlt
xchg
les
push
fimuls
pop
and
dec
hlt
xchg
xorb
popa
ret
mov
pop
das
repz
push
and
or
addr16
aaa
inc
cmpb
inc
inc
xchg
dec
clc
inc
mov
inc
popf
pop
dec
adc
imul
sub
loopne
push
mov
push
cld
sub
stc
ltr
les
sub
or
adc
cmc
or
adc
jmp
test
in
add
jg
pop
xchg
add
and
add
std
rclb
pop
lock
and
and
adcl
mov
into
inc
ret
das
fldl
fisttpl
fidivl
in
in
add
fadds
dec
xor
pop
test
push
dec
fwait
ret
fidivl
scas
adc
sbb
cmpsl
stos
sarb
mov
gs
mov
cmc
sub
test
inc
xor
lret
shrb
xor
pop
add
jmp
sti
sub
and
into
add
dec
adc
scas
push
pop
jle
jb
insb
xchg
push
and
add
and
outsl
lods
inc
and
dec
pop
cmpsl
icebp
xchg
mov
mov
ss
out
and
data16
bound
adc
push
pop
mov
or
jno
jmp
inc
adc
and
loope
cmpsb
daa
inc
insb
aad
mov
aam
dec
jns
in
jno
add
pop
in
les
add
inc
hlt
daa
xorb
std
negl
fucompp
mov
scas
inc
or
in
hlt
mov
sbb
fistps
xchg
xchg
fwait
xor
int
call
shr
push
jb
sub
daa
jle
mov
test
int
mov
in
lds
inc
and
jne
push
int3
mov
mov
bound
adc
shlb
inc
les
dec
dec
loopne
push
adc
adc
mov
mov
adc
add
ljmp
pop
add
mov
lds
imul
cmc
sbb
shll
jne
xchg
das
cwtl
lcall
push
fldenv
jae
pusha
sbb
ret
or
xor
loopne
cli
arpl
cmp
push
dec
cltd
je
and
jmp
mov
xlat
in
add
maskmovq
notl
mov
jmp
shlb
movsb
sbb
rcr
or
pop
dec
pop
cmp
or
xchg
ljmp
and
xchg
and
jle
push
jmp
cmpb
or
shll
fwait
xor
jmp
jnp
in
out
sub
shr
pop
dec
inc
verw
ficompl
pop
pop
xor
out
dec
add
jnp
into
adc
lds
adc
dec
scas
fs
repnz
sbb
xchg
daa
ficompl
adc
sbb
fadd
jno
adc
cwtd
pop
add
cs
insl
cmp
mov
xchg
inc
mov
mov
pop
and
pop
repz
out
mov
mov
enter
cmp
jmp
int
flds
clc
lea
pop
sbb
sub
or
fdivl
sub
or
xor
pop
shlb
pushf
test
out
xchg
push
jmp
ret
cmc
int3
clc
and
or
push
lahf
add
pop
xorb
das
cmpsl
jl
and
dec
add
xlat
bound
dec
scas
fadd
push
mov
lret
jle
mov
int3
jge
and
scas
xor
add
repnz
loop
adcb
xor
jb
mov
jge
xchg
ja
insl
push
adc
pop
mov
lret
fsubrl
jmp
fwait
or
sbb
or
outsb
mov
cmpsl
mov
push
stc
cmp
outsb
scas
and
sub
test
mov
cmp
push
in
or
fstpl
xor
pop
adcb
push
sub
mov
add
mov
xchg
sub
aad
stos
or
xchg
pop
dec
jle
lahf
jno
dec
pop
cli
inc
gs
add
ret
daa
pusha
popf
leave
in
or
pop
in
mov
jg
sar
fwait
cmp
ljmp
mov
repz
lahf
lock
push
cmp
or
cmp
mov
dec
shlb
add
push
push
outsb
in
rclb
roll
sub
pop
mov
jmp
sbb
cmp
filds
dec
push
pop
mov
sbb
jne
jne
test
jae
adc
cmp
fwait
add
popa
xchg
lcall
pop
sub
xor
cmp
push
lea
sub
sub
aam
mov
test
test
mov
dec
jg
ljmp
or
roll
loopne
or
dec
add
sbb
rclb
fildl
inc
jmp
jbe
bound
add
popa
dec
mov
cwtl
sahf
pop
mov
inc
push
addb
mov
pop
js
xor
or
or
out
dec
add
pop
sub
pop
call
call
cmc
cmp
push
push
push
jo
dec
push
js
ss
addl
cmc
loope
mov
pop
in
lock
pop
add
sub
push
imul
movsl
inc
insb
jno
or
lods
inc
adc
sub
sahf
push
bound
movsl
fcoms
pop
jg
jno
dec
rolb
add
sub
lcall
xchg
rcrb
syscall
push
push
mov
inc
push
jne
repz
call
jmp
and
movsl
test
hlt
loope
lcall
stos
jmp
jp
push
mov
pop
or
sbb
xor
pusha
into
jg
psubsw
push
stos
adc
sahf
add
mov
add
sub
sarl
repz
push
inc
pop
jnp
jmp
jae
add
or
adc
pop
dec
mov
mov
dec
push
lods
rolb
cmpsb
add
pusha
mov
inc
xchg
jne
sub
mov
adc
sub
outsb
or
and
shlb
jae
sub
and
mov
add
test
add
and
or
add
mov
cmpsb
and
sahf
movntq
es
pop
cmp
sarl
dec
dec
pop
out
or
ss
mov
mov
daa
rcl
adc
mov
jae
daa
clc
jae
shlb
sub
rorb
outsl
shll
adc
and
sub
mov
or
add
sub
jmp
xchg
sti
and
xor
mov
stc
pop
add
fwait
idiv
shll
mov
mov
stos
mov
sbb
sbb
mov
movsl
jbe
js
jp
fisttps
movb
arpl
jl
clc
jmp
repz
ret
or
and
movsl
negl
movsb
daa
hlt
pop
mov
lea
add
dec
xchg
testb
adc
pop
or
sub
loope
movsb
cmp
xor
je
xor
in
or
push
flds
jb
mov
mov
inc
addr16
mov
jno
dec
icebp
enter
lret
ja
sub
daa
inc
pop
mov
xchg
mov
in
jmp
stc
cmp
push
push
sub
jo
push
add
adc
mov
sti
add
or
sub
push
lret
jmp
in
jmp
fiaddl
or
stc
rclb
push
nop
fdivrp
sub
pop
sub
stos
mov
and
mov
push
and
or
pop
ret
or
mov
add
xchg
cmpsl
int3
fcoms
dec
mov
shlb
adcb
pop
loop
xchg
cwtl
cltd
mov
cmp
push
out
pop
pop
insl
sbb
test
jp
sub
sbb
cld
test
ret
sbb
jno
push
jmp
cs
insb
push
sbb
or
repz
sub
lcall
mov
adc
in
mov
push
push
mov
addb
xor
push
mov
jmp
sbb
dec
xor
test
push
inc
cmpsb
and
nop
mov
ja
mov
xchg
out
out
les
cmp
dec
push
mov
je
inc
pop
fs
call
adc
dec
or
fistl
mov
dec
cli
and
or
push
dec
push
in
test
mov
dec
stos
mov
xchg
int
and
jo
movsl
test
push
or
adc
push
or
rorl
mov
pop
dec
lods
cld
out
rcrb
jnp
pop
mov
sub
cmc
das
push
jmp
ja
add
pop
in
inc
inc
sub
sub
out
dec
push
fsubp
je
rcrb
ds
imul
dec
push
adc
dec
ret
pop
mov
mov
pop
orl
add
lret
and
bound
mov
push
fists
add
js
stc
andl
and
sub
in
push
xlat
in
insb
aaa
rolb
dec
pop
push
dec
das
push
ror
jmp
gs
lods
ja
daa
xchg
test
jecxz
shl
mov
adc
pop
stc
or
dec
divps
popf
ds
scas
insl
imul
push
mov
fnstcw
push
dec
dec
and
jl
add
xor
int
mov
cmc
mov
fwait
pop
lock
addb
adc
call
jmp
jmp
das
fwait
dec
pop
rcrl
ds
stos
jle
gs
repnz
adc
lods
notb
lret
sbb
dec
frstor
ja
jp
fucomi
push
lret
in
lock
sub
sub
clc
lods
adc
fistps
bound
sbb
sbbb
mov
nop
and
sub
cmc
dec
cmp
subl
push
in
cmpb
out
fstps
scas
mov
or
sbb
dec
bound
fsubrs
inc
mov
mov
je
addr16
incb
push
cmc
sub
adcb
iret
arpl
cli
bound
ret
stos
and
negb
je
and
and
dec
imul
add
inc
mov
push
add
jae
test
and
push
nop
loope
or
and
mov
aad
push
clc
fcomi
sub
jnp
mov
inc
loope
add
dec
jge
mov
jmp
test
ljmp
mov
mov
ret
jecxz
mov
test
loop
movsl
jecxz
add
mov
ret
adc
popf
or
hlt
or
outsl
orl
sbb
mov
pop
ficoml
sbb
push
add
push
sbb
pop
cmpsl
or
dec
jb
dec
push
insl
pusha
or
test
and
inc
fisubrs
mov
mov
push
jp
in
popf
lret
mov
das
mov
cmpsl
movsb
mov
std
push
ja
jno
dec
les
insl
mov
pusha
dec
dec
cmp
sarb
cmp
push
test
popf
lahf
xchg
std
add
scas
add
test
aad
cmpsb
in
in
movsl
test
push
xchg
pop
dec
pop
pop
popa
icebp
stos
enter
add
xchg
js
xor
dec
xor
ja
mulb
lods
outsb
add
scas
ds
sbb
insb
dec
loopne
add
mov
xorl
mov
lods
ret
xchg
cmp
sarl
int
nop
ja
int3
push
aad
push
mov
mov
or
push
mov
mov
movsb
out
inc
pop
jmp
sub
es
add
inc
sbb
popa
ds
fs
sbb
sarl
sbb
sbb
cmc
add
pop
in
sbb
stos
adc
mov
mov
cld
dec
sub
pop
js
sub
add
jg
pop
pop
push
mov
pop
lds
subl
cltd
push
cmp
mov
xchg
and
xor
mov
std
outsb
pop
lahf
vpandn
cld
inc
dec
outsl
mov
aas
and
xor
syscall
or
pop
push
xchg
add
pusha
notb
adc
and
rcrl
push
jmp
jne
scas
ja
dec
loope
adc
imul
mov
push
push
add
pop
and
fwait
and
pop
pop
out
rcl
push
dec
stos
insb
test
mov
bound
sub
pop
ret
inc
leave
jno
js
dec
stos
xorl
loop
xlat
test
mov
mov
jmp
mov
loop
outsb
inc
or
fisubrs
xchg
cmp
scas
cltd
push
xor
daa
push
pop
fsubl
pop
push
stc
hlt
cs
leave
jmp
out
pusha
dec
or
sub
sub
fadds
pop
movsb
add
repz
jno
sub
fsub
bound
or
jecxz
cmp
js
data16
mov
mov
mov
aas
hlt
cmp
jl
shl
jnp
cmp
dec
or
pop
adc
aaa
hlt
outsb
js
orl
jg
scas
sbbb
push
outsb
fistpl
jmp
test
fimuls
adc
dec
imul
adc
pop
mov
loopne
jmp
jl
stc
adc
fdiv
push
sbb
adc
stos
les
sub
adc
pop
into
push
push
test
jl
leave
and
lret
adc
cs
pop
push
out
lock
addr16
js
and
fucomp
addr16
push
inc
and
sub
stos
add
and
pop
adc
mov
sbb
out
mov
clc
jnp
in
scas
and
push
xlat
in
mov
out
jb
mov
sub
ret
std
pop
fsub
add
sub
pop
jmp
inc
jo
pusha
cmpsl
xchg
loopne
jge
out
pop
gs
dec
dec
inc
imul
add
icebp
cs
in
pop
scas
cmpsl
adc
lds
sub
adc
mov
adc
ljmp
push
dec
sti
aas
dec
mov
daa
push
xor
aas
adc
mov
mov
stc
cli
sub
dec
cli
mov
insb
bound
inc
jbe
adc
sub
aad
cli
sbb
jle
mov
leave
int
std
cmp
adc
ljmp
test
xor
lock
or
aad
aas
movsl
fsin
popf
jbe
fsubr
inc
xchg
or
sub
xchg
inc
push
push
cmp
pop
js
ss
loopne
in
xchg
dec
loopne
push
loop
inc
cs
les
inc
sbb
push
test
add
roll
sbb
inc
dec
ds
sbbl
stos
or
test
pop
fbstp
sbbl
push
inc
imull
lea
jge
mov
mov
pop
hlt
daa
xchg
cmpsl
xchg
cmp
xor
sub
jg
adc
loope
popa
lds
popf
in
dec
add
cwtl
daa
add
sub
mov
add
pop
push
push
mov
stc
iret
scas
inc
mov
cmpsl
push
mov
push
divl
pop
push
push
ficoms
xor
adc
pushf
int3
stos
mov
jle
repnz
mov
jo
mov
rorl
sub
cmpsl
sub
or
xor
nopl
aaa
std
xorl
mov
inc
xchg
xor
jmp
scas
testb
lcall
mov
ficoms
out
add
fdiv
mov
adc
inc
mov
sub
pop
cmpsl
pop
jnp
xchg
or
std
ds
pop
and
pusha
repnz
jne
fs
daa
jbe
popa
outsb
fisubrs
or
add
popa
hlt
mov
push
jge
push
dec
or
loope
cmpsl
or
or
or
fs
xchg
mov
fisubl
shrl
dec
addr16
loop
dec
sbbl
adc
lret
pop
cmpb
inc
dec
sbb
add
cmp
in
pop
inc
loopne
rorl
and
pop
inc
xchg
pop
mov
mov
lods
subl
mov
add
mov
xchg
pusha
push
mov
cld
subb
test
dec
ror
cmp
pop
inc
xor
aaa
and
push
cmpsb
adc
jbe
pop
sbb
adc
ljmp
jo
movsb
xchg
sbb
xor
jp
or
cmp
add
insb
or
or
sub
dec
push
push
jle
stos
push
pop
dec
push
test
cmp
out
jp
shlb
cmp
mov
ret
push
repnz
movsb
lret
mov
fisttpll
shlb
mov
inc
jmp
leave
outsl
dec
popa
inc
mov
je
jp
mov
inc
fidivl
add
f2xm1
pop
inc
cmp
pusha
xchg
add
sbb
xor
cwtl
iret
or
dec
xchg
inc
lock
lods
dec
push
and
adc
je
adc
mov
sub
add
fs
es
or
lea
rolb
xor
or
push
test
call
xchg
cmp
test
fucomi
and
bnd
sbb
in
dec
xchg
xchg
add
lret
cltd
mov
push
mov
and
sbbl
pop
adc
out
pop
pop
out
push
call
aas
xor
or
stos
mov
jecxz
mov
or
jno
pop
add
cmp
jmp
imul
mulb
ret
push
push
bound
cld
ret
or
jge
pavgb
adc
sbb
mov
mov
sbb
cwtl
push
pop
and
shrb
pop
shlb
lds
cmp
sub
call
dec
jno
mov
push
add
ljmp
push
cmp
lods
dec
push
cmc
out
xchg
frstor
outsb
cmp
add
or
jl
mov
pop
xchg
adc
int
cs
pop
into
neg
cmc
rorl
icebp
jmp
sti
popa
xchg
insb
inc
test
cld
dec
iret
addb
aaa
cltd
je
adc
out
adc
add
add
inc
pushf
lods
negb
std
dec
insl
and
into
cwtl
and
sahf
inc
mov
jne
insb
dec
pop
lods
popf
or
xchg
shlb
ja
mov
outsl
mov
pusha
add
adc
pop
stc
sub
and
out
jb
arpl
hlt
push
jmp
leave
pop
cld
mov
je
dec
pop
adc
dec
sub
testl
push
xchg
sub
test
add
out
adc
add
push
cwtl
hlt
imul
and
xor
and
fsub
popf
sbb
push
mov
cmc
faddl
adc
pop
shll
push
jle
push
pop
dec
xchg
sub
or
adc
outsl
pop
in
popl
push
push
jmp
insb
xor
mov
and
shrl
and
cs
bound
shlb
loope
xchg
mov
in
mov
in
jle
and
in
bnd
sub
push
xchg
add
pushw
push
loopne
dec
sbbl
and
std
int3
mov
or
rolb
daa
push
pop
jg
push
sub
mov
jae
dec
in
insl
les
in
mov
sub
and
enter
add
xor
push
inc
cmpsl
inc
or
into
or
add
or
mov
outsl
sarb
mov
or
add
adc
pushf
pop
out
rcll
iret
cmp
sbb
cmp
out
sub
add
aas
shlb
lods
dec
push
ficoms
sub
and
adc
sarb
enter
imull
jno
or
dec
mov
or
push
aam
add
jnp
xor
fsubs
lahf
aam
push
test
clc
sarl
in
xlat
and
jnp
testl
call
std
add
vmwrite
ffree
jb
mov
cmc
sub
and
je
add
fdivl
cwtl
xor
sub
push
lret
or
outsl
dec
cmp
and
inc
movsb
sbb
inc
mov
cmpsb
add
adc
inc
shll
cmp
fsin
je
lods
cli
inc
rcll
idivl
sub
das
add
push
sub
cmp
mov
adc
and
cli
outsl
addb
sub
adc
imul
mov
and
jb
pop
jns
mov
orb
pusha
or
invd
scas
mull
lock
cmc
jb
sbb
or
sbb
mov
or
or
or
pop
xor
inc
mov
inc
fstl
loop
inc
loope
data16
or
add
xchg
inc
add
cmp
aas
dec
loop
lock
mov
add
push
js
xchg
orb
mov
sbbb
jl
cltd
test
arpl
js
sbb
add
inc
inc
or
es
sub
adc
sti
or
ret
sbb
inc
test
push
stc
add
add
movb
xor
inc
insb
pop
bound
adc
push
jae
add
push
sbb
les
insb
flds
push
sbb
or
add
mov
and
push
cmc
imul
cld
and
dec
mov
lds
mov
add
mov
cmp
mov
pop
aaa
or
cmc
lods
dec
fmuls
sub
aaa
add
and
movsl
inc
mov
sbb
inc
in
push
movsl
sbb
inc
add
sbb
mov
sbb
and
xor
rcrb
or
or
jmp
mov
sbb
adc
mov
or
xchg
and
adc
roll
mov
adc
or
stos
andl
hlt
dec
or
bound
call
sub
jno
push
or
mov
jmp
or
data16
adc
pop
push
fmull
inc
inc
pop
cmpsb
inc
push
stos
push
xor
mov
rcll
cmp
push
pushf
aas
mov
pusha
dec
mov
jns
cmp
ljmp
inc
push
outsl
and
scas
cmp
jp
imul
into
jne
movsl
mov
xor
inc
clc
adc
pop
push
add
lret
vmwrite
push
mov
loopne
adc
mov
lcall
scas
das
pop
stc
fs
mov
stos
cmp
mov
shlb
xchg
jno
push
sub
jb
sub
push
cmc
lcall
add
jmp
or
pop
enter
ror
sub
add
dec
push
mov
add
not
and
xor
add
imul
push
out
andl
fwait
dec
lods
fildl
push
pop
call
xor
xor
sub
jp
xchg
pop
add
push
or
add
sub
or
sahf
shll
push
sbb
loop
mov
aaa
push
mov
in
and
andl
lock
into
pop
test
jmp
pop
aaa
or
pop
ja
cld
jne
or
int
push
loope
scas
cmp
mov
sahf
inc
pop
sub
mov
loopne
push
fsubs
adc
pop
pop
add
dec
sbb
jle
pop
inc
or
adc
das
push
std
xor
inc
cmp
inc
add
cmp
lea
push
push
mov
cmc
xor
icebp
fsubl
clc
mov
xor
ret
mov
imul
or
and
sub
sub
sahf
mov
jle
pop
adc
or
cmp
jne
add
pop
cmp
repz
dec
loop
lods
insb
testb
fbstp
popa
pop
pop
icebp
mov
lock
jno
hlt
movsl
and
loop
orb
imul
sbb
pop
clc
adc
in
ret
fidivl
add
jb
aad
dec
xchg
sub
aas
adc
ficoml
sbb
pop
sub
inc
fistl
xchg
pop
add
xchg
inc
fldt
aas
or
and
outsb
jge
xchg
pop
dec
or
or
sarl
jmp
iret
aaa
push
jmp
push
push
call
mov
fisttps
dec
adc
test
push
pop
popa
and
pop
cmp
bnd
sbbb
adc
call
out
mov
xor
or
pop
pop
adc
xchg
jnp
cld
push
fildl
addr16
out
in
sbb
push
ret
xor
in
out
pop
sub
punpckhbw
push
push
cmp
inc
push
add
push
pop
push
sahf
clc
ret
loope
mov
imul
shlb
call
jl
loop
lahf
insl
lods
adc
je
lcall
in
sub
pusha
mov
aas
iret
mov
pop
sub
sub
or
inc
add
pop
xchg
lret
push
ss
jg
fisttpl
loope
roll
xchg
cmp
in
testl
lds
and
orl
dec
inc
mov
add
outsl
xorb
or
fwait
pop
rorb
movsl
adc
dec
push
xchg
and
out
pop
test
dec
ret
inc
dec
cmp
and
xor
pop
fdivrl
cmp
cwtl
shr
sahf
or
push
dec
push
jns
and
sub
push
stos
add
jnp
sbb
cwtl
outsl
lods
add
jns
lret
mull
les
nop
andb
sub
inc
adc
cmovle
dec
or
inc
push
inc
pop
push
aad
adc
test
ss
pop
cmc
push
add
sub
mov
decl
push
out
imul
int
xor
sub
add
mov
jae
mov
xor
std
cmp
push
ljmp
push
es
xor
popa
mov
and
pop
mov
jae
flds
push
addb
xor
mov
add
push
imul
adc
lods
jo
push
or
pop
or
pop
jge
outsl
inc
push
push
add
push
lods
ja
jae
add
or
sub
xor
pop
orb
and
mov
pop
pop
or
sub
pop
ljmp
adc
sbb
push
fmull
mov
adcl
or
xor
out
xor
and
mov
insb
push
test
add
inc
push
adc
or
push
adc
mov
add
sub
shll
int3
or
adc
dec
lret
push
lods
pop
xchg
faddl
push
sarb
pop
mov
sub
ljmp
repz
push
mov
lcall
test
bound
pop
inc
iret
popf
jne
xchg
in
cld
cs
jnp
pop
dec
cli
add
sbb
xor
pop
jbe
and
add
addr16
test
pop
test
inc
or
add
mov
cli
jecxz
add
mov
push
pop
pop
jns
dec
in
roll
iret
add
jmp
pop
adc
shlb
inc
addb
jnp
pop
and
aas
mov
add
insl
dec
sub
push
pop
sub
or
xchg
or
jmp
jle
pop
inc
sbb
dec
jnp
insb
inc
mov
sub
or
or
fbstp
leave
inc
inc
or
and
mov
cs
mov
rcl
add
inc
dec
mov
sbb
aaa
dec
leave
bound
sub
dec
xchg
add
rclb
cmp
dec
inc
subb
daa
arpl
add
hlt
jmp
fmull
push
push
dec
fcomps
cltd
xor
inc
arpl
fdiv
movsl
call
or
inc
pop
or
mov
xchg
lahf
rol
dec
das
adc
sbb
push
xchg
jb
imul
inc
cltd
idivb
jns
dec
stc
test
pop
pushf
lret
arpl
aam
jne
or
add
cld
add
or
fcomps
xchg
pop
mov
dec
gs
add
out
push
pop
add
cli
cmpb
dec
push
loope
outsl
fwait
pusha
loop
inc
cmp
prefetcht0
or
enter
filds
pusha
repz
pop
adc
jo
cwtl
add
push
pop
push
or
add
mov
insl
dec
xor
leave
std
movsl
or
push
enter
pop
testl
dec
leave
sbb
push
adc
and
in
das
into
sbb
adc
bound
stos
pop
cmpl
xchg
adc
loopne
popa
jns
mov
jbe
dec
outsl
dec
and
xorb
jb
adc
insb
lods
mov
xor
adc
adc
scas
add
cmp
adcb
pop
pop
pop
adc
cmc
lock
add
clc
push
xor
add
pop
jg
xchg
xchg
pop
push
inc
push
nop
push
inc
adc
inc
pusha
test
adc
lds
and
and
dec
sbb
jnp
jne
jp
jae
add
inc
dec
pop
add
jl
bound
dec
add
imul
mov
xor
lea
pop
xor
les
pusha
dec
stos
jp
ret
enter
ljmp
movb
push
pop
subb
pop
roll
adc
lds
or
pusha
mov
jnp
dec
add
mov
mov
xchg
pushf
xor
in
shll
loopne
or
pop
add
pop
cmp
adc
inc
and
or
push
das
call
sbbb
xor
push
mov
pop
movsl
pop
and
in
fs
shll
pop
pop
jno
lods
mov
das
test
cltd
or
jg,pt
aaa
and
cld
cwtl
mov
cmp
push
xchg
in
or
adc
push
mov
pop
xchg
adc
lock
jl
add
fisubrs
push
ja
inc
inc
scas
hlt
jb
adc
ss
pop
mov
push
dec
dec
data16
or
xchg
cld
je
push
filds
cmp
jb
add
jno
or
fistl
cmpb
add
sub
xor
xchg
mov
mov
outsb
mov
pop
inc
sarl
mov
mov
lahf
push
rclb
stos
mov
bound
loop
andl
dec
jo
les
movsb
mov
fbld
icebp
into
jno
mov
fdiv
sub
push
jg
outsl
out
loope
sub
jle
xor
xchg
cli
lret
into
add
shl
mov
dec
and
ss
and
and
mov
push
push
mov
cmp
into
ficoms
in
sub
repnz
push
xor
aam
add
push
adcl
dec
sub
cld
popa
cmp
mov
enter
clc
adc
jecxz
jns
or
inc
dec
or
jmp
dec
cs
sbb
and
push
push
dec
in
test
scas
push
lock
push
dec
dec
ds
xchg
movsb
mov
jae
outsl
push
and
sbbb
pop
xor
push
imul
pop
out
inc
mov
loope
cmp
pop
jo
inc
jl
or
test
push
movsb
adc
repnz
cwtl
je
xor
mov
flds
out
ljmp
or
pop
inc
movsl
popl
cld
and
adc
push
mov
xor
scas
loop
leave
in
incl
sub
pop
jp
mov
ret
pushw
sub
daa
adc
xor
filds
mov
and
pusha
dec
sbb
les
lret
pop
add
push
inc
mov
xor
push
addr16
insb
inc
sub
fs
jle
arpl
das
jnp
dec
xlat
sti
rcrl
sbb
add
popf
outsl
mov
in
push
dec
and
sbb
mov
nop
cmpb
jecxz
cmp
jmp
xchg
add
or
test
sbb
jecxz
jle
std
push
sbb
rclb
outsl
pop
xadd
bound
incl
jb
mov
dec
aam
rorl
sahf
jae
orb
or
sub
sub
sahf
shrl
inc
xchg
push
adc
sbb
pusha
sub
bound
jmp
mov
outsb
ds
mov
into
or
lret
fistps
inc
push
andb
dec
or
and
adc
jmp
pop
mov
jg
jmp
imul
jmpw
add
mov
les
das
sbb
mov
nop
xor
jp
sub
sub
jnp
scas
in
cmp
mov
push
or
pop
pop
ficompl
sub
sbb
mov
xchg
mov
jmp
pushf
push
xchg
adc
add
aad
push
out
pop
inc
cmc
push
push
mov
xor
js
in
push
cmpsb
or
es
daa
jno
iret
mov
adc
ja
and
ffree
inc
pop
adc
movsb
or
out
out
pop
std
mov
mov
lret
dec
addr16
lcall
add
pop
fisttpll
jle
mov
add
xor
aad
stc
sti
add
fiadds
mov
push
or
mov
and
adc
in
daa
pop
data16
popa
mov
inc
daa
jl
mov
imul
adc
inc
jbe
xchg
enter
adc
sub
popf
push
aad
pop
mov
pop
xor
stos
leave
addl
scas
add
aaa
shl
orb
jae
push
inc
jmp
loop
cltd
in
xchg
add
dec
push
sbbb
push
push
xchg
sti
std
sbb
or
js
mov
lods
enter
cld
dec
shl
scas
shr
lret
dec
adc
mov
clc
lock
or
outsb
pop
int3
ljmp
and
mov
adc
sub
jmp
push
inc
push
mov
out
pop
or
push
jbe
inc
xor
out
and
out
cs
in
dec
cltd
testl
sbb
imul
fisubrs
sub
inc
push
mov
push
scas
nop
sbb
add
repz
dec
mov
pop
xchg
fstl
xor
cs
nop
loope
rclb
imul
jnp
je
mov
pop
sub
add
jmp
rclb
jae
out
jno
jle
xor
pop
repz
adc
mov
shlb
loop
jnp
fwait
xlat
dec
out
test
cli
imul
dec
fsubr
into
add
popa
pop
jmp
xor
xchg
inc
add
daa
inc
or
xor
jb
push
cmp
cwtl
into
push
jbe
pushf
jmp
loope
cmp
cmp
push
repz
pop
cmp
testb
mov
push
push
cmpb
or
loopne
add
jnp
mov
int
add
stc
cld
adc
popa
push
mov
mov
add
add
inc
jmp
sbb
popf
and
cs
scas
out
out
xchg
btr
adc
bound
adc
fcmovnu
xor
orb
dec
mov
andb
in
jnp
jo
pop
sub
in
aad
cli
js
jmp
mov
xor
xor
xchg
icebp
mov
inc
outsl
test
and
out
call
push
mov
inc
and
xor
stc
pop
sub
push
clc
jmp
sbb
dec
rolb
mov
sbb
pop
leave
xor
sub
repnz
adc
mov
dec
insb
sub
jg
loope
leave
ss
neg
imul
push
scas
int3
pop
push
mov
mov
orb
ret
sarb
iret
mov
mov
movsl
adc
dec
xchg
mov
pop
jge
scas
outsb
cmpsb
xor
inc
and
sub
mov
jmp
incl
movsl
ss
or
xor
push
sbb
mov
pop
not
shlb
and
orl
jne
push
icebp
dec
push
inc
cmp
pushf
bound
shrb
dec
inc
push
rorb
sub
dec
mov
and
popf
jp
mov
add
cmp
or
push
sahf
add
insb
or
aad
pop
call
dec
bound
and
aam
hlt
repz
roll
scas
int
pusha
pushf
scas
mov
fsubrl
pop
je
jae
imul
xor
pop
pusha
out
xor
dec
and
cld
dec
jns
daa
jmp
xor
dec
pop
stos
lea
gs
ret
movsb
pop
sub
and
ljmp
sub
xor
mov
mov
fs
stos
fistl
inc
stc
add
dec
or
jg
in
push
add
out
mov
push
int3
push
movsb
mov
ret
and
ja
adc
addl
jmp
jle
out
xchg
push
xlat
mov
dec
jb
adc
mov
add
push
jl
push
je
sbbb
push
ret
rcr
sbb
push
cmp
xchg
dec
das
push
push
dec
pop
mov
cmpsl
popa
xor
jnp
sub
jp
nop
inc
inc
pop
xor
rorb
int
std
loop
or
aam
bound
push
sub
stos
or
sbb
adc
and
mov
ds
pop
xor
push
lcall
mov
adc
daa
mov
decl
pop
std
sbb
pop
jae
or
xor
cld
inc
push
daa
cmc
jno
sbb
xchg
mov
mov
mov
rorl
repz
int3
fdivr
pop
mulb
ficoms
std
fbld
gs
mov
and
jge
loopne
shl
mov
dec
fidivs
stos
dec
std
adc
mov
or
shlb
push
push
push
cli
or
push
mov
andl
lret
xor
add
jge
pop
pushf
sbb
mov
cmp
sbb
ja
roll
in
xor
sub
and
ret
icebp
or
mov
push
mov
cmp
jbe
mov
insl
inc
or
lahf
dec
lods
push
lods
sbb
lret
fisubs
rcl
cmp
aas
inc
inc
mov
cmc
rcrl
ss
je
pusha
arpl
jmp
add
push
pusha
sbb
add
dec
jmp
add
sub
inc
lock
insl
ja
jmp
push
mov
pop
xchg
jbe
sbb
negl
push
or
push
adc
jno
ret
push
push
sub
xor
jae
out
dec
push
test
push
int3
aam
add
adc
add
mov
jge
sub
cmp
data16
pusha
mov
ret
in
or
fs
mulb
add
jle
outsb
lds
popf
inc
push
jmp
xchg
bound
mov
jnp
sub
aad
jns
roll
dec
dec
cld
jecxz
xor
add
pop
clc
out
ss
test
negb
repnz
or
sbb
jne
into
mov
push
cmpb
xchg
imul
mov
inc
pop
mov
daa
test
lcall
daa
push
pop
frstor
add
jmp
or
inc
jl
and
lds
sub
jnp
pop
shlb
or
ret
fcmovu
ds
orl
out
and
fwait
add
into
adc
jnp
cmc
mov
pop
sbb
jmp
or
and
cmp
daa
dec
addb
leave
arpl
mov
cmp
and
clc
adc
mov
xor
pop
cmp
inc
add
push
cmpsl
jmp
sub
dec
or
jp
xchg
mov
mov
in
cmp
int3
mov
gs
in
ret
pop
inc
push
adc
push
and
adc
pop
rcll
outsl
sub
jmp
movsl
jge
popf
push
push
add
xor
lds
and
push
push
mov
call
mov
je
inc
or
inc
xchg
xor
mov
xchg
xchg
xor
aaa
inc
jmp
icebp
ljmp
or
push
adcb
or
adc
xor
jbe
mov
add
jp
ja
cs
aad
aas
sub
rcl
add
pushl
fiaddl
popa
jae
scas
fnstcw
rcrl
mov
jbe
js
outsl
dec
ret
arpl
shl
pop
loope
adc
xor
fcoms
adc
jmp
fimull
out
mov
int
jo
popf
std
adc
mov
je
int3
adc
daa
std
xor
in
xchg
cmpsl
rol
mov
cmp
fmuls
loopne
adc
sub
mov
test
mov
xchg
scas
lret
inc
jno
and
and
sub
out
int
ds
int
call
xor
add
pop
push
mov
jmp
dec
pop
push
or
insl
pop
mov
test
adc
jno
and
test
add
inc
outsb
lahf
shll
adc
or
xchg
or
frstor
add
insl
aaa
hlt
sub
xor
loope
jo
push
outsb
push
aas
addl
iret
xlat
mov
add
das
out
jno
es
outsl
sub
pop
test
out
jnp
dec
jnp
mov
test
and
jg
or
inc
push
pop
push
das
or
add
pop
cmp
fiadds
add
sbb
or
popa
lds
add
mov
mov
iret
push
or
les
add
sbb
push
mov
shr
add
testb
sti
jmp
sbb
jg
pop
mov
ljmp
inc
das
dec
or
push
jle
ss
pop
repnz
cmp
cmpps
adc
adc
fucom
andb
sub
orb
mov
add
js
jg
les
add
ds
ret
sbb
out
insb
push
iret
in
sti
cmpsl
into
fisttps
mov
test
insl
or
inc
ficoms
insb
sahf
add
or
push
mov
sub
int
bound
xchg
ds
rcrl
mov
movsl
mov
xchg
lcall
loopne
mov
mov
roll
inc
mov
or
lds
outsl
jo
xchg
pop
or
push
push
mov
imul
mov
int
bound
sub
add
add
test
lds
inc
loopne
loope
fidivs
add
xchg
arpl
jne
mov
fildll
pop
push
adc
sbbb
push
ret
adc
and
mov
pop
jmp
and
mov
sbb
repnz
ret
ljmp
stos
jecxz
loopne
sti
xor
ret
add
add
enter
add
insb
mov
sub
adc
out
dec
add
int3
popf
push
pushf
mov
add
stos
cmp
lods
xor
add
mov
adc
idiv
add
test
jg
stos
add
test
cmp
pusha
inc
ret
push
jnp
and
in
mov
inc
sub
sbb
jl
sbb
jmp
jnp
fdiv
shll
and
push
sti
daa
idivb
fstpt
add
push
xor
add
cs
shlb
orb
push
pop
xchg
push
dec
xchg
and
mov
insl
mov
lock
mov
and
jp
sub
in
and
xor
and
cmc
adc
lods
and
rcrb
fldcw
jmp
or
push
jmp
iret
add
mov
sub
xor
and
sub
addb
mov
and
and
pop
jle
inc
call
popa
jns
xchg
sub
rcrb
fmuls
add
cmc
loope
leave
fldl
and
jbe
cmp
or
scas
and
cmp
sub
test
mov
pop
mov
popf
dec
cmpsb
repz
push
pop
dec
mov
int3
push
loop
cmp
insb
addl
push
mov
fnstcw
xor
push
stc
ficoms
dec
nop
mov
aad
or
lret
jmp
into
loopne
jmp
mov
icebp
sbb
inc
into
cli
out
rcpps
vunpckhpd
imul
xchg
lods
aam
xchg
mov
push
test
repz
div
test
sbb
outsl
and
adc
mov
lcall
rorl
leave
xor
sbbl
das
test
and
sbb
data16
enter
shrb
jl
jnp
pop
add
xor
fisttps
dec
mov
adc
pop
xor
inc
in
fwait
add
fs
lret
jl
call
jmp
rolb
adc
or
push
leave
mov
loopne
aaa
pop
jae
aas
push
stos
dec
jno
aad
cmp
jle
das
test
mov
push
adc
adc
inc
dec
add
push
pop
xlat
sbb
cmp
test
lods
dec
xor
mov
cmpb
jmp
push
push
jo
sbbl
push
push
mov
pop
in
mov
sub
add
push
fsubrs
nopl
ret
jmp
or
inc
pop
repnz
ret
xorb
ds
rcll
inc
mov
inc
cmpsb
and
shlb
jo
scas
gs
inc
sbb
jmp
inc
and
push
add
dec
in
adc
fisttpll
xlat
repnz
push
mov
outsl
mov
nop
jmp
jp
or
js
push
pusha
jecxz
jp
daa
dec
add
sub
adc
push
ret
xchg
lock
js
and
add
fsubs
insl
push
push
enter
xor
pop
aam
jbe
pop
adc
or
insl
inc
adc
into
scas
loop
inc
mov
mov
dec
xchg
scas
add
aaa
dec
std
sbb
mov
cmp
cmp
ds
push
roll
out
xor
lods
jnp
cmpsb
cmp
mov
inc
pop
repnz
xlat
insb
aas
nop
sti
test
je
sarb
insl
add
push
inc
mov
and
push
jnp,pt
or
je
out
push
mov
jns
rclb
jecxz
pop
cs
xchg
aas
das
add
enter
push
adc
jmp
push
push
and
lret
add
iret
aad
xlat
jg
ljmp
push
scas
pop
xor
out
jmp
xlat
out
daa
cmp
fadd
sbb
sub
sti
or
adc
mov
and
testb
orb
dec
ret
bnd
mov
negl
sbb
mov
jecxz
frstor
add
mov
icebp
push
push
les
sbb
dec
xchg
sub
movzwl
push
stos
sub
aaa
push
inc
jmp
aad
test
in
jg
pop
cmp
mov
push
std
mov
aaa
xchg
xor
or
jmp
aad
mov
mov
shll
mov
and
lods
mov
and
xchg
and
dec
scas
aaa
sub
aas
sub
daa
outsl
mov
mov
push
repnz
cwtl
imul
mulb
pop
fmuls
ror
add
ljmp
ljmp
xchg
lds
pushf
fidivl
push
pop
push
subb
testb
add
pextrw
adc
lret
scas
sbb
lods
mov
fdivs
or
sarb
sub
sbb
jne
xorb
jne
leave
aam
mov
add
repz
mov
jne
fisttpl
jmp
pop
mov
negl
dec
int3
sub
ret
movl
or
mov
pop
dec
jge
not
pop
sbb
add
cmpb
jmp
in
enter
shlb
mov
jge
popf
and
pop
sub
jb
stos
xlat
push
adc
add
lock
loop
movsl
mov
out
popf
in
mov
cli
pop
and
psrad
push
repnz
inc
mov
int3
xlat
mov
xor
or
pop
cmp
stc
lds
ljmp
fisubl
mov
and
dec
inc
nop
add
je
or
mov
in
loop
push
insl
adc
add
jbe
rolb
pop
mov
and
mov
into
add
lahf
mov
mov
dec
cmpsb
add
mov
sbb
cmp
sub
fcomps
adc
out
xchg
adc
push
add
into
push
repz
data16
adc
cwtl
lret
and
daa
push
xor
mov
dec
sbb
mov
dec
xor
icebp
xor
adc
jecxz
push
push
mov
xor
pop
pop
lock
rorb
pop
in
cmc
in
xchg
add
add
roll
mov
pop
adc
cli
or
sar
dec
or
fnstsw
fucomp
jo
add
xchg
and
jl
add
sbb
shrd
jns
sub
sub
dec
insb
dec
icebp
inc
jnp
ret
sti
cmp
stos
inc
inc
add
imull
push
pop
pop
push
subb
shrb
mov
movl
mov
push
cwtl
bound
push
fcmovnu
in
shrl
and
inc
addr16
jns
sub
rclb
call
popa
mov
inc
pop
xchg
xor
mov
xor
mov
incl
and
xor
or
dec
xor
call
popf
sbb
jmp
cmpsb
test
pop
jne
and
hlt
jbe
pop
or
inc
lret
add
hlt
loope
or
pop
mov
mov
add
decl
push
in
xchg
aad
fisttpll
cs
inc
dec
cmpl
in
xchg
pop
pop
repz
sub
mov
push
push
mov
sub
xor
push
adc
adc
scas
addr16
pop
neg
mov
sub
scas
add
or
xor
je
adc
pop
nop
or
mov
jmp
in
pop
rcrb
adc
inc
les
cwtl
or
aas
shrb
ds
ret
stc
lock
push
enter
xor
xor
push
xchg
lock
sbbl
outsl
orl
add
popf
aam
pusha
sub
jmp
andb
mov
daa
mov
cmp
pop
pop
add
inc
stos
and
js
daa
adc
ss
push
movl
cwtl
mov
rorb
sbb
pop
dec
std
add
xor
fdivrl
popa
aaa
pop
cmpl
int
fxch
aaa
cmp
sbb
in
jno
mov
add
push
sar
mov
out
loope
sub
jge
sti
cmpb
mov
out
lcall
pop
and
jae
sub
sub
aaa
sub
xchg
pop
pop
lods
ffree
push
mov
add
add
stc
inc
pop
lret
pop
cld
and
test
xchg
dec
cmp
jb
hlt
data16
xchg
or
int
or
push
ror
cwtl
dec
inc
leave
cs
test
out
repz
jp
mov
dec
out
adc
inc
scas
lret
out
rcr
pop
add
icebp
add
xchg
jae
jp
sub
inc
cmp
inc
insb
mov
sbb
in
xchg
les
jge
add
jbe
add
aaa
das
jp
dec
out
hlt
cmp
mov
lods
enter
ja
pop
add
mov
lret
xchg
dec
mov
or
add
fisubl
xor
pop
mov
adc
mov
movzwl
aam
ret
shl
cld
jns
mov
jmp
mov
cmp
shrb
or
and
mul
sub
or
or
lock
or
jb
mov
daa
push
mov
lds
int
and
cmp
jo
add
nop
mov
fsts
sti
push
data16
and
xor
add
xchg
dec
ds
cmp
cwtl
xor
pop
mov
mov
pop
fwait
or
mov
loopne
pop
sbb
js
mov
or
movsl
stos
push
stos
add
jbe
sbb
out
or
jl
pop
xchg
jmp
inc
sub
mov
cld
icebp
sarb
jmp
dec
add
add
push
or
mov
mov
inc
out
mov
add
fwait
sub
or
adc
dec
sub
xchg
adc
ror
out
mov
mov
pop
push
and
add
xor
sub
test
scas
in
xor
sbb
dec
aad
cmc
mov
or
sub
aas
aam
sub
daa
mov
xlat
xor
jle
std
pop
pop
sub
jmp
shr
xlat
dec
sub
push
or
push
out
jl
cmp
jp
sub
inc
pop
fcomip
ret
das
out
mov
inc
jl
xor
es
dec
scas
or
jg
fincstp
fldt
push
jno
or
hlt
fsubr
frstor
out
sub
jmp
fsub
fcomps
and
jbe
dec
punpckhbw
in
jns,pn
test
mov
xchg
mov
sub
adc
xchg
nop
ret
jmp
fcomp
jno
dec
xor
scas
test
mov
in
iret
sub
popf
and
push
stc
jbe
mov
mov
xlat
add
push
daa
out
xchg
sbbl
pop
dec
subb
pop
add
jbe
sub
rolb
jmp
int3
cli
mov
mov
mov
cmp
cmp
lcall
or
add
sbb
xorb
add
push
inc
jmp
mov
and
hlt
sbbb
in
adc
jecxz
inc
inc
fisttps
sub
or
jmp
aam
and
outsl
sub
icebp
add
add
dec
not
inc
sub
cmc
insb
daa
add
and
inc
out
pop
push
mov
fildl
adc
sub
lods
insb
push
mov
xchg
ret
nop
mov
test
imull
loop
out
scas
out
add
add
or
ss
xor
adc
in
pop
aas
push
popf
cmp
fwait
loopne
pop
incb
cmc
lea
repz
lret
pop
xor
repz
fst
int
inc
stos
rorb
push
nop
inc
es
out
sbb
jmpw
jnp
test
fs
popf
pop
mov
push
addr16
add
lods
sbb
pop
push
mov
pop
stc
dec
add
jle
outsb
scas
int
loope
js
add
loop
loopne
cmpsl
jge
enter
mov
jno
nop
movsb
pop
sub
mov
call
jp
or
test
sub
pusha
cmp
neg
mov
pop
or
jecxz
test
mov
test
leave
or
cmc
fs
or
sbb
xchg
or
pop
aam
rorl
cmc
adc
or
shlb
pop
ds
push
adc
shlb
add
dec
cmc
xchg
add
out
mov
adc
or
cld
jle
dec
push
inc
fildl
loopne
mov
inc
sahf
or
push
mov
nop
mov
inc
dec
jg
pop
add
in
sub
lock
stos
adc
mov
cmovl
dec
cmp
pop
mov
or
or
push
mov
xchg
pop
stos
add
icebp
out
jmp
lds
pop
xor
ret
or
sub
pusha
jmp
and
pop
jne
cs
dec
pusha
mov
xor
outsb
mov
ficoms
ds
arpl
adc
xor
int
cmp
sbb
pushl
jns
fsts
sub
repz
sbb
add
ss
adc
add
dec
cmp
leave
push
push
aam
add
imul
jp
jmp
rol
xchg
orb
pop
faddp
loope
lahf
jle
pop
adc
mov
sahf
xchg
adc
mov
or
mov
xor
push
mov
iret
adc
les
aas
outsb
inc
push
add
ret
shll
jnp
das
add
and
dec
push
mov
push
push
push
stc
mov
or
out
push
mov
inc
stos
pop
pop
in
rcll
subb
push
mov
aad
loope
das
lock
adc
clc
fldenv
inc
xor
lock
xchg
cwtl
mov
cmp
xchg
or
push
out
xchg
fstps
push
cmp
scas
cld
or
push
jge
cmp
popf
pop
aaa
leave
adcb
mov
mov
mov
jmp
fstpt
xor
cmpsl
push
push
jne
ljmp
mov
add
jmp
test
loop
add
add
inc
sub
pop
pop
mov
hlt
ret
and
xor
addb
xchg
ljmp
pop
inc
aas
dec
jp
ss
push
test
std
daa
mov
shlb
lret
loope
jmp
adc
shll
dec
add
scas
xchg
sbb
push
inc
mov
sbb
jo
push
pop
ror
dec
es
pushaw
imul
dec
push
add
add
cmpl
stc
xor
jp
jo
cmp
jmp
xchg
dec
and
loopne
sub
lret
jmp
jecxz
ljmp
cmc
and
push
ss
out
imul
mov
inc
popf
gs
rcrl
mov
scas
xor
mov
sarb
stc
imul
lea
call
jecxz
cmp
xchg
mov
arpl
inc
push
adc
sub
cmp
popw
icebp
xor
inc
dec
jge
cwtl
in
sbb
loope
lods
not
push
lahf
lret
xchg
xchg
testl
adc
or
xlat
mov
outsl
pop
mov
xor
or
push
adc
dec
pop
call
mov
or
hlt
lret
jecxz
add
pop
jle
sub
mov
int3
add
or
and
adc
fs
test
pop
test
ja
xchg
pop
mov
ja
out
call
mov
ljmp
push
push
jle
and
js
add
dec
or
jae
pop
lret
xor
push
pop
gs
add
sub
lea
mov
in
and
fldl
and
mov
mov
sub
int3
pop
jmp
fnstsw
xor
push
mov
pop
int3
sbbl
jbe
add
push
test
jbe
add
mov
dec
das
es
mov
and
cmpb
shll
test
hlt
lods
sbb
in
push
mov
jmp
and
mov
cwtl
cmp
adc
push
pop
cs
jp
xor
sub
leave
dec
lcall
jmp
lahf
clc
mov
sbb
mov
hlt
add
push
add
pop
sub
sub
clc
sub
add
nop
aaa
push
adc
push
cwtl
and
test
sub
pop
push
or
and
xor
jbe
push
mov
lea
hlt
adc
imul
inc
sbb
imul
xor
mov
pop
jnp
dec
pop
ret
es
rcrb
mov
cli
add
clc
add
push
daa
fisubl
sbb
enter
or
push
pop
jmp
repnz
aas
and
clc
xchg
jne
mov
xchg
and
aaa
push
outsb
inc
ret
loopne
sbb
inc
push
scas
pop
arpl
sbb
sbb
adc
add
jmp
cmp
cwtl
dec
shl
negb
sub
mov
add
bound
inc
xchg
call
movsb
add
movsl
sarl
mov
imul
cmp
sahf
add
in
imul
int3
xchg
mov
mov
pop
push
loop
xlat
pop
pop
sub
in
push
inc
in
dec
pop
mov
lds
pop
sub
add
and
add
mov
cmc
push
fs
mov
push
jge
jmp
jg
push
push
xor
sbb
ss
sub
rcrl
or
test
pop
mov
repnz
out
cli
sub
dec
je
lds
pop
push
cli
cltd
pop
sub
push
xchg
mov
mov
adc
jmp
in
jbe
adc
xlat
inc
or
mov
mov
test
dec
jno
push
lret
data16
jno
add
cltd
pop
cwtl
mov
mov
xor
xchg
fwait
adc
pusha
jns
push
daa
jle
das
popl
push
push
das
nop
mov
xchg
jnp
psllw
mov
mov
xor
sub
out
or
movsb
popa
add
outsl
and
pop
in
add
sub
inc
ds
imul
vmwrite
or
adc
mov
dec
fmuls
mov
and
nop
stc
add
xor
mov
std
jnp
pop
mov
mov
push
cmp
xchg
cli
lods
push
aaa
daa
popa
pop
cmp
adc
lds
mov
inc
sbb
or
aad
jmp
add
je
inc
bound
pop
and
cwtl
dec
jb
sbb
or
aad
sub
xor
or
push
or
mov
mov
shlb
fs
lret
lret
pop
jle
or
sub
jmp
and
out
inc
mov
outsl
iret
pop
dec
rol
jmp
js
shr
jo
pop
addl
in
xchg
push
ljmp
stc
mov
fistl
pop
arpl
and
or
dec
pop
shl
adc
out
in
fnsave
or
lods
bound
sbb
add
pop
add
jno
loopne
push
push
cmpsl
pmuludq
shlb
sub
xor
adc
sahf
adc
add
std
int3
mov
loop
sub
not
out
int
and
sub
inc
xchg
add
test
je
mov
in
imul
nop/reserved
loop
divl
cld
adc
pop
in
fidivs
mov
mov
add
dec
xchg
or
es
push
inc
pop
adc
pop
into
xlat
mov
scas
mov
imul
adc
pop
inc
add
xor
mov
call
popf
rorb
push
rcrl
mov
dec
sti
test
jmp
mov
or
test
pop
test
cmp
cltd
pop
mov
xor
movsb
dec
mov
pop
xor
pop
pop
jb
push
lock
push
inc
popa
xor
push
pop
lds
mov
or
mov
mov
xchg
xor
pop
push
push
dec
sub
loope
xchg
add
imul
sar
mov
jo
mov
add
mov
insb
add
mov
inc
and
jnp
out
mov
daa
pop
lea
jno
inc
or
add
inc
push
pop
shlb
dec
shrl
jmp
jge
movsl
sub
xor
sbb
das
bound
jbe
sub
inc
xchg
stos
mov
fs
add
xchg
jno
subl
xchg
lods
xchg
fs
cmp
dec
mov
inc
mov
and
test
push
pop
bound
mov
sahf
jmp
push
pop
js
add
cmp
imul
cli
push
jmp
into
push
popa
xchg
push
ja
pusha
clc
xor
dec
fbld
sbbb
lods
xchg
leave
in
add
push
xchg
outsl
inc
xor
dec
test
jg
push
ret
loope
fs
cmpsb
je
jle
jns
mov
leave
pop
in
mov
mov
imul
mov
sbb
jne
add
fisttpl
jmp
add
push
out
jle
push
mov
xor
and
push
cwtl
pop
nop
inc
inc
pop
add
and
or
mov
cwtd
mov
pop
ss
jmp
ljmp
pop
push
mov
rclb
cli
push
mov
sbb
movups
or
adc
add
mov
inc
outsl
pop
cmp
mov
orl
orb
jmp
adc
loop
inc
loopne
insl
lods
loope
jle
cs
inc
adc
pop
imull
insb
imul
and
and
adc
sub
hlt
data16
clc
mov
add
mov
fldcw
shrb
jmp
scas
add
call
gs
sub
xor
cmpsl
push
mov
fstl
pop
cmp
out
sbb
adc
mov
xlat
push
jp
push
inc
psubd
fcomps
lea
aaa
roll
outsl
daa
repz
pop
mov
mov
pop
dec
shl
fwait
mov
lds
or
mov
cmp
adc
popa
in
jecxz
add
or
daa
enter
in
jle
enter
sub
jno
into
lods
loop
popf
cmc
adc
sbb
push
push
adcb
outsb
leave
clc
pop
add
stc
and
std
dec
jnp
into
outsl
mov
xchg
inc
inc
fs
cmp
mov
jns
xlat
xchg
xor
sub
push
hlt
call
test
ljmp
cld
lds
repnz
vpunpckhwd
jle
enter
dec
push
in
inc
adc
imul
inc
or
pushl
mov
aas
cmp
add
pop
sti
sub
push
test
adc
stos
gs
mov
lea
jmp
add
push
xor
nop
stc
pop
sub
andb
dec
inc
push
cld
add
ljmp
pop
jp
and
in
push
lods
neg
loope
shl
cli
jmp
cmp
rolb
xchg
not
xor
push
mov
push
mov
pop
popa
pop
shl
aam
andb
call
adc
lahf
sub
rcll
sbb
push
pushw
movsl
or
loopne
jno
movsb
sub
mov
adc
je
mov
fcompl
pop
sbb
push
sbb
jns
outsb
dec
adc
mov
and
inc
jmp
add
jmp
jp
mov
imul
in
and
jge
mov
xor
popl
jmp
sbb
dec
pop
add
out
cmp
hlt
insl
xor
pop
jle
xor
jae
les
pusha
push
test
sub
sbb
inc
push
mov
jmp
mov
adc
jecxz
push
xor
mov
outsb
xor
decb
les
stc
dec
ja
inc
dec
int
pop
icebp
or
mov
adc
ds
xor
and
add
inc
loopne
dec
push
sbb
imulb
push
sbb
addr16
mov
scas
loop
lahf
or
fmuls
pop
scas
push
jecxz
jne
aas
push
rcrb
add
aad
hlt
stc
je
jnp
and
cwtl
repz
xchg
push
pusha
ljmp
mov
push
sbbl
pop
daa
jno
mov
xor
add
shrb
orl
clc
mov
or
pop
xchg
pop
into
push
mov
jge
fimuls
adc
inc
or
jl
pop
lods
xchg
idivl
sbb
stc
mov
aad
xchg
sbb
sbb
out
xor
mov
pop
out
push
mov
movsl
push
cli
lcall
jle
jle
neg
inc
add
leave
cltd
aaa
or
test
jg
sub
mov
andb
je
aam
xchg
mov
shlb
testl
inc
xchg
lds
ljmp
into
invd
test
xor
pop
or
xor
scas
test
and
test
or
in
outsl
push
and
shll
mov
or
popa
inc
lret
call
addr16
mov
hlt
outsl
stos
adcb
lea
shlb
pop
insl
xchg
daa
rcll
cmp
cld
ljmp
push
pop
je
mov
decl
imull
negl
jmp
mov
pop
leave
je
push
sti
and
scas
mov
push
pop
add
es
push
push
xor
dec
jmp
cmp
push
inc
dec
adc
pop
ret
mov
inc
pop
push
loop
or
loopne
dec
outsb
cmp
int
leave
xchg
cmp
jmp
jb
or
cmp
pop
xchg
pusha
imul
test
in
jno
or
out
mov
cmp
es
ret
pop
or
les
clc
aas
jge
lock
add
sub
sub
jmp
adc
add
and
xchg
pop
mov
lcall
adc
sbb
mov
and
xchg
cmp
sbb
in
mov
xor
loop
and
xor
push
movsl
mov
add
and
stos
cmp
push
add
je
or
add
xlat
arpl
loopne
push
test
mov
in
cli
test
les
insl
jmp
bound
das
sub
xchg
pop
xor
xor
call
loop
cmpb
hlt
add
add
mov
push
out
dec
lret
shll
clc
jnp
es
sub
xchg
sti
xchg
push
mov
sub
pop
hlt
cs
add
dec
movsl
dec
stc
xchg
adc
test
or
out
jno
scas
daa
adc
sbb
adc
fidivrs
push
mov
ja
fadds
cmp
dec
or
pop
not
rcr
add
cs
xchg
mov
out
jge
divb
out
jl
pusha
push
or
arpl
pop
mov
sub
jg
or
mov
out
mov
or
jns
daa
push
push
mov
mov
mov
inc
sub
pop
outsl
mov
test
fiadds
push
nop
ja
cs
inc
mov
mov
imul
fiadds
hlt
scas
inc
adc
xor
ret
out
in
jnp
inc
mov
or
or
xchg
repz
lock
xor
mov
daa
push
jo
jno
pop
mov
adc
inc
or
adc
mov
adc
cmp
repnz
jmp
push
push
sub
sbb
push
mov
dec
xor
xor
xor
cmpsb
xlat
fst
ret
mov
cmp
sub
pop
call
imul
mov
shrb
test
insl
cmp
inc
mov
and
out
mov
mov
popf
sub
fildll
mov
icebp
push
in
push
daa
mov
jo
loopne
jp
icebp
add
shlb
insb
push
push
dec
cwtl
add
push
pop
imul
call
fdivs
jno
or
incb
jbe
push
movb
imul
jnp
cmp
pop
ret
and
and
cmp
pop
dec
pop
mov
xchg
xchg
push
and
jbe
es
jbe
add
shr
mov
clc
jmp
mov
push
pop
inc
es
or
pushf
scas
in
cmc
and
add
xchg
pop
lret
ds
xor
add
sti
sbb
or
inc
adc
jb
fiadds
or
pop
dec
neg
inc
outsl
add
adc
pushf
xchg
pop
jmp
insb
xor
jne
sbbb
int
fcmovb
cmp
pop
pop
stos
jne
orl
adc
push
es
scas
dec
or
pop
outsb
or
add
sbb
and
adc
and
add
loope
and
data16
adc
and
dec
shll
loope
shrl
fwait
mov
lcall
inc
lock
mov
pop
inc
push
aad
outsl
adc
or
loope,pn
pop
or
mov
add
lds
push
test
pop
inc
incl
stc
push
mov
mov
xor
in
push
pop
repz
xchg
pop
and
in
push
sub
xorb
out
push
imul
out
jno
and
xor
jbe
xor
cld
mov
mov
shl
or
enter
sbb
test
int3
mov
ret
xor
add
pop
gs
cli
jbe
mov
jb,pt
lret
out
or
imul
fnstcw
test
test
loopne
jmp
lds
push
inc
loopne
dec
pop
sub
adc
pop
push
mov
jne
lods
or
or
or
adc
aad
mov
sub
mov
add
jmp
push
jno
add
clc
and
leave
mov
pop
shrb
xchg
push
negl
pop
repnz
push
mov
add
jno
clc
repz
jle
lea
and
mov
adc
sub
push
jge
pop
dec
mov
cwtl
push
push
cmp
sbbl
adc
outsl
movsb
iret
stos
lods
xor
loopne
inc
and
testb
outsl
pusha
dec
mov
js
adc
stos
mov
xchg
mov
das
sahf
das
rclb
ljmp
stos
aaa
adc
out
push
mov
xor
pop
add
fsubrp
push
int3
cmpsl
icebp
shll
ficoml
pop
loopne
xchg
or
into
outsl
push
sbbl
xor
out
jg
leave
sub
sti
call
into
pop
dec
pop
inc
test
inc
enter
jnp
stc
push
jb
adc
jle
fldlg2
les
repnz
lret
call
call
scas
imul
orb
add
sbb
mov
jb
repnz
rcl
jno
mov
setle
aas
push
iret
incb
ja
les
xchg
ljmp
clc
fisubrs
inc
leave
sbb
add
stc
xchg
xlat
loop
ja
arpl
pop
pop
in
jl
std
aas
push
cmpsl
inc
mov
pop
pop
sarb
xchg
pop
fidivl
or
rclb
cmp
and
adc
add
add
cld
push
add
adc
pusha
andl
addr16
cmpl
ret
shr
popa
pop
std
loop
data16
push
rcrl
icebp
jg
jl
dec
in
sti
push
dec
test
add
js
or
mov
mov
jge
add
pop
cmpsl
cmp
hlt
add
pop
sub
loopne
push
jg
sub
fsubl
dec
ljmp
fistps
pop
sub
or
inc
into
mov
push
push
lds
movsb
inc
sti
lods
push
jp
push
mov
adc
fwait
stc
dec
mov
xor
adc
cmp
add
dec
xchg
addr16
daa
jae
cmp
dec
ja
sbb
xor
pop
jmp
pop
push
pop
lea
mov
mov
mov
push
test
test
xor
push
jmp
stos
fstp
loop
adc
adc
push
add
sbb
loopne
jmp
aam
loopne
jns
into
ds
jbe
aaa
push
dec
idivb
or
leave
lds
dec
jb
aas
rcr
repnz
cmp
fiaddl
pop
lock
inc
pusha
stos
es
push
add
mov
push
mov
and
mov
add
jg
push
or
int3
lahf
sbb
jb
inc
xchg
neg
push
sbb
outsb
lock
add
jne
add
and
xor
sub
adc
or
and
iret
and
les
pop
imul
out
cmpsl
nop
and
int
jmp
into
or
or
xchg
pop
xor
push
push
imul
out
ds
xchg
daa
aad
out
fwait
int
push
cs
jle
movsb
rcll
loope
outsb
cmp
pop
xchg
mov
stos
jbe
mov
aas
in
cmp
mov
pcmpgtd
sbb
jmp
cltd
or
js
mov
push
or
push
out
or
ja
adc
inc
sbb
mov
bswap
mov
sub
mov
and
pop
or
pop
pop
add
pop
cmpb
xor
xor
jns
pop
jnp
andl
mov
decb
or
std
fldenv
push
push
dec
pop
cmp
mov
adc
ret
push
sbb
jmp
loop
mov
pop
divb
push
jnp
cmp
sbb
js
arpl
or
sbb
dec
loopne
scas
popf
xchg
bound
jg
or
repz
das
js
cmp
and
lcall
orl
xor
add
xor
sahf
and
inc
ret
pop
xlat
xchg
jmp
rcll
pop
push
mov
mov
es
mov
xchg
or
and
cld
dec
imul
lods
out
or
cmpsl
inc
or
out
add
lret
fldcw
push
sti
push
mov
inc
push
out
iret
sbb
mov
pop
mov
sahf
push
inc
sahf
cmp
nop
add
ficompl
loop
fsubs
or
ljmp
and
negl
mov
mov
and
cmpsb
add
pop
add
js
dec
int3
mov
pop
outsb
fwait
mov
and
xchg
movsb
fwait
or
mov
add
or
mov
test
rolb
pop
arpl
fsts
in
lods
dec
pusha
and
sbb
push
xor
in
jg
imulb
sbb
push
scas
icebp
pop
add
clc
sbb
add
and
out
jb
das
sbbl
inc
jno
jmp
mov
hlt
jno
popl
jecxz
sub
pop
dec
xor
jmp
inc
or
cmp
push
dec
jge
inc
jmp
pop
inc
add
enter
iret
adc
sarl
ficoml
or
sbb
dec
push
rolb
add
add
mov
pop
popa
push
sub
add
loop
mov
imul
adc
push
pop
out
pop
adc
inc
add
push
lods
faddl
and
loopne
in
and
scas
and
or
ljmp
icebp
or
jb
into
mov
push
mov
jecxz
add
sarl
xor
lret
repnz
add
aad
or
not
or
aam
push
inc
mov
or
fcoml
xchg
push
pop
mov
pusha
decb
or
add
int3
sbbb
lock
xchg
dec
and
and
movsbl
or
inc
aad
mov
arpl
push
jb
jmp
cmp
push
xor
out
ret
cmp
mov
gs
subb
inc
daa
xchg
sub
adc
push
jns
and
popf
pusha
sbb
cmc
jbe
or
sbb
pop
insb
jecxz
mov
movsb
lret
and
cs
pop
inc
negb
dec
lock
mov
ret
push
jp
inc
mul
cwtl
push
pop
sub
xchg
jo
push
mov
cltd
and
add
inc
push
cmp
and
andb
xchg
xchg
add
jmp
lds
ljmp
sub
lret
adc
out
ss
cs
pop
pop
push
add
ret
or
sbb
in
cli
cmpsl
aam
cmp
push
adcb
imul
push
cmpb
mov
int3
cmp
add
out
sbb
fwait
jns
add
ja
xchg
push
loope
outsl
inc
or
lds
test
mov
pop
cmp
fmull
xlat
push
aam
imul
bound
inc
popa
stos
data16
loope
xchg
pop
out
in
dec
dec
mov
and
sbb
inc
aaa
addps
jo
push
pop
and
pushf
cmpsl
push
mov
or
arpl
test
frstor
stc
clc
mov
xchg
int3
scas
xor
xor
cwtl
cmp
ror
inc
loopnew
testb
inc
in
sarl
sub
nop
mov
idivb
sti
cmc
arpl
or
imul
mov
rorb
repz
mov
ljmp
in
pusha
mov
push
or
mov
idiv
stc
jg
mulb
repz
fstl
nop
cmp
jo
popa
push
clc
dec
int3
push
or
jle
add
xchg
addb
mov
sub
or
pop
sub
insl
or
pop
neg
mov
mull
xor
pop
std
add
add
gs
sbb
sbb
or
xor
mov
adc
rcll
mov
pop
mov
sbb
stos
and
pop
mov
mov
xchg
imul
adc
xchg
fdivs
jl
xor
call
scas
and
dec
xor
les
jno
xchg
push
sbb
add
add
loope
sub
sbb
mov
pop
scas
bound
pop
sub
mov
and
inc
add
leave
ds
insb
xchg
push
mov
cwtl
pop
adc
testl
pop
in
inc
cmp
inc
adc
fdivrs
mov
mov
jae
adc
mov
and
cwtl
inc
and
lods
das
call
sbb
push
xchg
scas
push
push
incl
fs
mov
popf
fnsave
ficomps
sub
mov
push
pop
or
popa
repnz
not
jg
test
jecxz
mov
xchg
bound
sbb
fsubl
outsb
cld
dec
or
push
push
mov
nop
mov
cmp
cmp
mov
dec
ffreep
mov
outsb
les
mov
mov
pop
mov
adc
pop
pop
push
loop
adc
data16
jmp
push
das
in
ss
adc
je
sbb
and
lds
jmp
adc
add
and
sub
jmp
lds
mov
ds
sub
sahf
xlat
sti
xor
sbb
inc
xchg
inc
jmp
icebp
cltd
call
shrb
lods
inc
in
mov
inc
pop
adc
jmp
mov
push
pop
pushf
aaa
ds
jb
dec
fs
subb
repnz
inc
dec
inc
pusha
cli
in
or
sub
lods
adc
mov
and
cli
sub
sar
flds
pop
test
imul
pop
nop
push
pusha
sub
inc
addr16
call
xchg
dec
mov
stos
stc
cltd
add
loope
jbe
fmuls
and
add
cli
pop
push
dec
subb
dec
dec
cmp
mov
mov
cmp
mov
inc
dec
dec
cmc
pushf
outsl
icebp
ljmp
add
dec
add
push
dec
xchg
mov
push
jmp
push
in
jmp
shlb
lock
push
fadd
or
jmp
cltd
rcrl
push
or
cli
xchg
add
test
or
jmp
lock
push
lret
push
sub
movsb
lds
fnstenv
sub
out
mov
popa
cli
cmc
fdiv
sub
mov
sub
cli
nop
sbb
insl
or
jae
movsl
jmp
push
mov
sti
mov
test
popa
mov
dec
adc
and
fs
adc
int
dec
out
mov
clc
pop
lds
loope
jmp
mov
jb
aad
sbb
ds
or
aaa
push
jmpw
andl
jno
in
ja
pop
aas
lock
jns
movsb
push
jno
faddl
fidivrl
ja
jo
add
sub
add
ret
jmp
mov
mov
push
enter
pop
cmp
js
sub
mov
stc
pop
jns
pusha
sub
adc
pop
add
orb
adcb
sbb
xor
aad
out
push
mov
int3
sub
pop
xchg
lock
push
fs
mov
mov
cmc
adc
xor
daa
push
xchg
imul
mov
mov
dec
lods
jl
stos
iret
push
adc
out
repz
cmp
imul
dec
sub
inc
pop
inc
xor
mov
push
and
roll
stc
popa
jbe
ffree
push
push
sbb
sbb
inc
div
jge
and
or
roll
pop
sahf
push
mov
rcr
push
cs
das
insb
jecxz
loope
push
xchg
push
pop
stos
int3
scas
icebp
add
xor
ficoms
jecxz
fwait
xchg
leave
leave
out
and
inc
mov
inc
mov
push
jnp
jl
sub
pushf
and
daa
or
mull
add
xchg
call
sub
sub
pushf
inc
mov
mov
pop
lahf
flds
pop
push
add
cmp
icebp
sahf
cmp
add
test
push
stos
popf
inc
sbb
mov
or
fdivs
mov
jmp
and
dec
xchg
fstl
cs
mov
jp
nop
jns
cmp
xchg
mov
and
stc
movsl
ljmp
sbb
jae
dec
bound
push
and
aaa
or
mov
cmpb
pop
xchg
nop
popa
push
cmp
xchg
lea
push
add
sub
xchg
in
or
jmp
mov
and
push
repnz
cmp
lret
or
aad
sub
and
inc
dec
and
add
pop
pop
jp
jmp
lahf
jle
int3
stos
cmc
xor
sbb
cld
dec
push
or
and
movsl
pop
pop
std
and
shll
push
xor
rclb
mov
jne
out
adcb
and
sti
shlb
aam
rolb
sbb
add
mov
xlat
ds
lds
mov
pop
inc
fmull
or
cmp
add
aad
loope
test
sbb
jg
shll
loope
or
in
js
jl
lret
mov
notl
mov
repnz
add
ret
lds
cmp
or
or
xor
xchg
push
or
add
jmp
xor
push
mov
push
sbb
in
out
dec
andb
in
adc
jmp
or
mov
out
mov
cs
mov
add
lret
xchg
loop
or
or
aas
jecxz
sarb
pop
ljmp
lahf
dec
jb
jne
mov
push
cli
jno
addb
loopne
xor
movsl
jmp
lods
adc
add
popl
sub
mov
or
mov
in
test
mov
pop
pop
fsubrs
mov
dec
movsb
push
cmp
loop
adc
and
pusha
push
mov
xor
and
and
repz
inc
ds
lods
inc
pop
or
setne
rorb
faddl
jne
cmpb
sbb
divb
ret
pop
jnp
insl
or
mov
mov
ja
daa
mov
push
outsl
sub
mov
lret
dec
dec
inc
add
add
daa
or
sbb
fadd
mov
push
xchg
int3
dec
dec
sub
bound
sub
loop
jo
xchg
pop
adc
pop
popl
push
or
imul
mov
push
xor
push
jle
xchg
mov
or
fdivs
icebp
out
ljmp
pop
xor
cli
daa
js
jbe
lds
push
cmp
fiadds
lea
cli
push
pop
pop
popf
adc
data16
sub
ss
pop
mov
aas
cmp
icebp
dec
add
arpl
jle
pop
adcb
xor
jmp
daa
inc
xchg
cld
jb
jl
xorb
pop
jmp
out
push
ret
push
mov
push
cmpsb
sub
jmp
mov
jae
mov
gs
push
mov
jg
xor
inc
pop
scas
mov
push
xor
push
jmp
fadds
imul
xchg
add
xor
psubb
adc
popf
adc
cmp
cld
dec
adc
and
mov
js
xor
ficompl
ret
mov
imul
lret
jl
add
dec
inc
sub
divl
fdivs
inc
call
stc
sub
inc
ljmp
rdpmc
mov
xchg
inc
jmp
sbb
in
xchg
dec
push
or
lret
addl
stos
movsl
out
adc
jge
and
es
sub
push
loop
sub
data16
xchg
enter
mov
decb
xor
imul
out
mov
jge
lahf
fildl
repnz
dec
sbbb
roll
pusha
and
scas
jl
jmp
sbb
loop
adc
mov
push
pop
cmp
fwait
pop
aam
inc
mov
mov
imul
sub
xor
sahf
adc
adc
ret
or
inc
pop
int
cwtl
mov
mov
dec
adc
jle
jg
dec
aas
pop
std
hlt
out
es
add
dec
xor
jecxz
into
and
adc
add
jmp
jbe
sub
aas
lahf
add
xchg
stc
xchg
xchg
pusha
pop
push
push
mov
push
test
pop
filds
xchg
notl
pop
inc
add
adc
jo
and
iret
nop
int3
dec
mov
inc
pop
push
sub
jp
jo
pop
pop
mov
cmpsl
cmp
and
not
sub
rorl
fldcw
jmp
sti
sub
add
mov
movsb
jl
dec
enter
ret
and
cmp
add
mov
jg
in
mov
pop
negl
add
cli
icebp
stc
add
push
mov
outsl
push
pop
test
enter
mov
add
sbb
sub
out
shlb
adc
inc
xor
or
icebp
push
call
test
inc
mov
pop
or
dec
cmp
movsl
sbb
jo
ret
cmp
fisubl
rorb
es
inc
fists
stos
jne
cli
rcrl
pop
xor
jmp
hlt
icebp
xchg
addl
mov
stc
or
outsl
fisttpl
pop
add
jle
push
sbb
mov
sub
mov
sahf
xor
es
push
mov
aam
mul
mov
loopne
shll
mov
out
enter
hlt
into
pop
pop
call
and
mov
int3
fs
xchg
cli
xor
push
mov
or
sahf
jno
leave
or
xor
sbb
or
push
sub
sub
add
pop
cmpl
loopne
sub
cmp
into
gs
add
lea
add
adc
sarb
sub
es
adcl
incb
pop
xor
sub
push
inc
fisttps
in
or
enter
cmc
icebp
or
pop
and
pushf
add
in
push
add
pop
pop
addb
or
or
add
outsl
je
add
sub
add
jmp
dec
in
push
mov
popa
dec
cld
sub
lret
or
push
mov
sub
adc
lods
test
rorb
add
xchg
imul
sub
sub
lret
cwtl
addr16
pop
loop
pusha
in
pop
imul
mov
fimuls
dec
inc
mov
dec
shll
push
fsubs
xor
leave
je
sub
stos
jne
jnp
push
mov
dec
movsb
or
in
shrl
ja
xor
out
inc
mov
push
out
cli
frstor
pop
xor
jge
mov
add
adc
pop
sub
push
mov
dec
fdivs
mov
jns
movsb
pop
sarl
cmp
and
push
lahf
and
and
dec
and
pop
jns
mov
lcall
inc
stc
rcrb
movsl
jle
pop
ljmp
and
nop
jnp
mov
jge
jb
or
pop
add
cwtl
xchg
xor
add
dec
push
pop
cmpsl
ljmp
pop
rol
ds
jl
sub
push
jg
pop
cmpsl
dec
jecxz
daa
clc
std
add
loopne
icebp
mov
loop
push
cld
mov
cmc
push
adc
and
std
jl
popa
jns
push
into
pop
lea
ds
xor
fwait
loop
or
push
pusha
lret
xor
jp
or
xchg
iret
decl
mov
cmp
nop
popf
dec
push
mov
popf
nop
out
xchg
add
je
adc
jmp
and
sub
mov
cli
sub
aad
call
xorb
mov
lret
in
xchg
xchg
in
mov
fucomp
mov
test
jg
cld
fmull
movzwl
loopne
inc
pop
push
jmp
push
push
in
test
jae
movsb
push
inc
lea
cmp
dec
adc
int
add
xadd
add
mov
nop
negb
push
pop
mov
loop
mov
cld
xchg
pop
push
cmc
mov
mov
stos
adc
lcall
scas
cs
fwait
xchg
aas
mov
les
push
ffreep
call
jno
add
pusha
xor
add
out
jge
repnz
lahf
and
jg
and
jmp
or
add
pop
mov
dec
cwtl
rclb
ljmp
int3
inc
pushw
adc
jmp
jmp
sbb
andb
mov
js
sub
or
add
mov
and
ret
add
shll
pop
das
rcrb
shlb
mov
cmpb
ficoms
fbld
cmpsl
pop
mov
pop
pop
mov
cmc
cwtl
in
xchg
testb
xchg
add
stos
mov
or
push
ja
jbe
jp
and
pop
push
mov
push
cld
pop
push
mov
incb
push
push
or
push
sar
fnsave
jmp
int
jp
jge
sti
cld
scas
add
decl
fwait
sub
inc
in
mov
and
ret
xor
pop
dec
ficompl
faddl
cmp
outsl
loop
int3
jle
popf
movsb
lds
or
jb
outsl
xlat
or
test
aam
test
nop
sub
push
mov
fwait
ljmp
jmp
imul
sbb
ret
fiadds
jmp
sbb
xor
and
nop
mov
pop
push
push
pop
js
pop
bound
push
mov
std
sub
jmp
pop
out
or
int3
xchg
cmp
sub
pop
in
pusha
add
push
inc
or
repnz
jb
fnstsw
ror
ds
cmp
fxch
int3
add
inc
cwtl
sub
inc
and
inc
xchg
mov
xor
dec
inc
mov
pop
mov
hlt
mov
pop
mov
mov
in
lds
mov
nop
mov
cmp
fs
pop
int3
xor
push
mov
dec
inc
push
call
pop
or
push
lods
dec
shlb
sub
inc
add
cli
mov
lret
pop
adc
loope
sub
pop
mov
ret
adc
insb
aam
mov
sti
adc
mov
dec
test
iret
xchg
popa
pop
sar
cmp
add
ja
xchg
int
pop
jmp
subl
frstor
fiadds
push
pop
mov
ret
sbb
repnz
pop
ljmp
add
ds
loop
jg
pop
repnz
dec
dec
movl
or
shll
das
push
loop
jg
std
pop
and
push
pop
or
jo
add
cltd
ret
fldt
mov
add
dec
mov
pop
js
mov
mov
jo
mov
fs
stos
call
ret
push
mov
call
nop
pop
xchg
pop
insl
das
push
adc
pop
bound
add
rolb
int
popa
scas
push
push
movsb
add
dec
xchg
push
add
pop
call
fisttpl
lret
jg
push
pop
dec
push
adc
jb
xchg
dec
mov
cltd
jb
mov
jmp
dec
stos
shll
adc
adc
andl
mov
mov
fidivrl
jns
push
lods
testl
fbstp
cmp
sahf
or
nop
rcll
lahf
mov
xor
add
mov
push
adc
insl
and
decl
data16
adc
popf
pop
and
dec
jmp
ret
pop
rolb
enter
push
pop
js
out
rcll
pop
test
xchg
stos
testb
clc
insb
xor
sub
loopne
in
out
in
fdivrs
mov
repz
bsf
js
push
mov
lahf
incb
shl
rcl
inc
ret
xchg
ja
mov
push
mov
in
cmp
sarb
adc
add
and
pop
lcall
movsl
sub
xor
in
xor
mov
cmp
es
pop
jle
add
das
jmp
push
fimuls
mov
int3
nop
add
das
testl
mov
movsb
cmp
pop
adc
test
ja
roll
jmp
inc
in
adc
or
fidivs
and
mov
flds
sbb
imul
loop
mov
xor
xor
out
stos
addb
xor
jge
daa
mov
push
enter
pop
fiaddl
push
add
dec
fisubl
lret
pop
das
mov
pushf
mov
repnz
xor
sbb
sbb
add
inc
jbe
das
xor
imul
mov
int
cli
xor
or
adc
shl
in
lret
add
and
es
out
and
jmp
imul
xor
xor
mov
int3
push
xor
mov
aas
and
sbb
imul
jnp
jmp
fdiv
inc
mov
rorb
sbb
push
subb
lea
or
pushf
xchg
sahf
mov
adc
orl
mov
inc
hlt
or
and
push
movsb
sbb
mov
dec
mov
mov
sbb
ljmp
and
xchg
ja
lret
cmc
es
adc
cmp
in
or
or
rcll
pop
or
aad
xorl
sub
sub
bound
aas
outsb
clc
outsl
inc
or
and
add
insb
cmp
jp
jne
addl
dec
inc
gs
mov
lret
leave
push
sub
xchg
repz
mov
scas
jg
int
xor
fs
shll
jbe
mov
cld
outsb
mov
sub
cltd
xchg
lret
push
xor
inc
push
add
aad
mov
jmp
push
inc
jmp
sub
push
push
pop
outsb
inc
loop
jl
inc
jo
inc
nop
push
dec
std
mov
loopne
jae
adc
out
mov
std
cltd
sub
and
sub
sbb
mov
hlt
shlb
sahf
inc
stos
pusha
inc
inc
ret
gs
jns
add
dec
mov
xor
push
push
sub
pop
or
ds
xchg
xor
pusha
daa
pop
ja
add
cltd
dec
inc
shl
add
lcall
adcb
ljmp
ror
imul
orb
add
out
add
add
pop
jo
xchg
hlt
pop
stos
test
inc
or
mov
out
mull
dec
xor
test
test
jno
imul
out
imul
mov
push
or
add
and
adc
add
ljmp
out
jo
ss
mov
ljmp
inc
sub
jbe
nop
pop
scas
loop
or
jmp
mov
sub
sub
ret
push
mov
mov
shll
jmp
push
mov
loop
ret
cmp
or
jmp
mov
jge
stc
aas
xchg
or
hlt
push
lret
mov
adc
out
adc
pop
or
pop
inc
fwait
addb
lock
or
out
aam
mov
add
jge
mov
enter
sub
mov
aas
push
call
outsb
mov
fwait
cltd
and
mov
imulb
repnz
cs
pop
mov
adc
push
inc
xchg
pop
mov
enter
jo
fcoml
repnz
dec
mov
inc
cmp
sti
cmpsl
aas
xor
mov
sbb
jmp
inc
pop
dec
push
lds
dec
mov
mov
inc
in
aad
clc
inc
cmpsl
test
push
adc
repz
add
adc
pusha
aam
lds
test
add
jle
dec
into
add
shll
inc
add
push
push
cmpsl
out
repnz
bound
mov
xchg
xor
repz
add
push
mov
inc
xor
jbe
pop
jmp
bound
or
mov
cmp
cmp
add
jmp
idiv
leave
jge
and
jbe
xlat
adc
sbb
inc
push
gs
les
add
aam
test
xchg
out
sub
xor
ja
sarl
in
mov
das
xor
pop
mov
jns
jbe
mov
mov
mov
push
mov
call
imulb
adc
push
sub
sub
test
cli
mov
push
lcall
push
mov
cmp
mov
cmp
or
adc
int
loop
int3
daa
pop
push
cld
scas
lock
add
mov
mov
fs
mov
push
push
mov
push
xor
dec
clc
pop
jle
das
fstpl
mov
nop
mov
ficomps
rep
jno
cld
sbb
add
jp
movsb
cld
repnz
fmulp
jl
add
fs
sub
test
add
jmp
add
mov
test
xchg
push
mov
in
mov
mov
mov
xchg
push
mov
sub
daa
adc
call
negb
add
cli
push
fldt
inc
cmp
add
sub
and
adc
cmp
jge
sub
mov
dec
rcrb
and
adc
adc
mov
arpl
add
add
fiaddl
shrb
adc
dec
push
movsb
les
and
mov
pop
in
in
bound
js
xchg
add
repnz
lock
sub
in
push
ret
add
loope
rclb
or
add
sub
mov
loope
add
add
popf
bound
call
add
dec
outsl
clc
stos
and
jge
inc
sub
sub
adc
out
pop
sbb
cmp
aad
sbb
jmp
int
lahf
adc
xor
or
jecxz
pop
push
jae
mov
std
aad
push
sbb
mov
pop
out
sub
mov
fs
add
jns
inc
roll
push
jl
test
push
push
iret
bound
test
xchg
jne
aad
mov
jge
push
cmp
push
or
jl
cmp
xchg
ss
or
add
cltd
dec
sub
cmp
mov
inc
xor
iret
lret
in
adc
test
sbb
adcb
std
cmp
inc
fwait
pusha
push
outsl
subb
cwtl
xchg
xchg
nop
lret
fwait
movsb
push
mov
add
mov
shlb
and
sbb
mov
xor
cld
dec
inc
or
mov
dec
cmpsb
sbb
add
sub
mov
sub
xor
stos
test
pusha
xchg
je
sub
or
js
inc
hlt
repnz
ljmp
dec
pop
mov
fidivrl
and
ficoms
cmp
dec
sahf
inc
push
gs
ret
imul
sarl
lods
fistpl
xchg
daa
sbb
mov
les
inc
test
jle
pop
insl
dec
and
or
dec
aas
jo
andb
or
test
adc
mov
push
mov
rcll
loopne
lret
insb
mov
add
mov
sub
fadds
xchg
mov
aad
sbb
sti
add
pop
sbb
jle
ret
add
clc
aas
or
sub
add
mov
jge
or
stc
iret
cli
mov
push
pusha
icebp
sub
sub
lret
sub
ret
sbb
inc
scas
aas
pushf
ret
jbe
jmp
repz
and
fdivs
lret
or
dec
push
adc
mov
xchg
or
dec
out
movsl
aam
leave
sbb
shl
test
lret
jnp
jg
add
sti
shl
movb
jmp
js
xor
outsb
cmp
in
scas
fbld
or
add
push
xor
mov
xor
xlat
or
call
xchg
popa
or
inc
mov
ds
mov
pop
pusha
outsl
pop
fstl
xor
pop
mov
jle
cmp
fcomi
jle
adc
adc
dec
add
enter
jmp
negl
popa
jmp
cli
das
inc
das
xor
in
pop
push
lahf
xchg
add
jo
xlat
hlt
push
mov
push
and
or
aad
jb
inc
or
mov
push
and
ss
or
pop
test
dec
aaa
xchg
push
jbe
pop
inc
das
sub
les
in
jge
jl
mov
xor
enter
jo
dec
cmp
leave
cmp
mov
mov
insl
push
adc
sub
aas
mov
mov
pop
jb
addb
scas
inc
xchg
push
aas
nop
sbb
add
push
xor
aad
std
sti
jnp
push
push
insb
or
pop
push
mov
es
dec
pop
test
jecxz
fst
aad
rorl
scas
dec
std
lds
dec
mov
mul
inc
sbb
jnp
popf
inc
loop
push
aad
cmc
mov
pop
jg
in
les
or
pop
xor
enter
lock
add
outsb
call
addl
add
cmpps
or
clc
push
adcb
les
pop
fs
les
lahf
and
push
outsl
xchg
div
xchg
dec
push
xchg
xchg
pop
stos
mov
enter
xchg
ret
pop
in
addr16
enter
xor
push
push
daa
notl
loope
rolb
sti
mov
pop
mov
jo
add
push
push
jns
push
push
inc
adc
pop
lods
cwtl
adc
sar
repz
fbld
in
out
or
daa
jge
inc
dec
dec
push
ljmp
push
fcmovnu
xchg
fsubl
fdivrs
repz
mov
dec
sbb
lahf
and
int3
dec
jo
xchg
bound
mov
jb
movsl
push
adc
sbb
push
jmp
sub
mov
data16
fnstsw
or
mov
mov
inc
dec
add
es
or
xlat
rol
inc
popf
sub
ljmp
pop
jge
daa
mov
pusha
sbb
add
sti
adc
pop
jl
adc
roll
les
pop
sub
xor
aaa
jp
or
dec
test
int3
pop
mov
jnp
mov
xchg
pandn
ss
pop
pop
scas
int3
mov
dec
inc
stc
xlat
push
ficompl
pop
xor
dec
and
mov
cld
push
mov
dec
push
mov
mov
test
pusha
scas
out
push
cmp
loopne
shll
add
or
sahf
jg
loopne
cmp
mov
add
jecxz
mov
pusha
cmpsl
icebp
xchg
add
rcll
leave
and
and
or
repz
push
xorb
jp
shll
lret
jg
lahf
lds
lea
or
dec
push
adc
fidivrl
push
jp
repnz
jnp
sbbb
icebp
icebp
xor
cmpb
in
mov
adc
shrb
push
call
mov
and
out
add
repz
cmp
jmp
fs
psllw
push
pop
jecxz
dec
mov
adc
push
iret
push
shll
or
adc
popf
and
pop
sbb
or
jmp
sub
or
jbe
mov
adc
dec
pusha
mov
outsw
rorl
scas
movq
adc
or
testl
ret
daa
pop
rcrb
push
mov
icebp
es
lods
mov
aad
mov
pop
movsb
sub
and
mov
mov
mov
xor
pop
jnp
jnp
push
scas
test
imul
add
ret
stos
jbe
push
pop
sub
push
lds
lret
ljmp
jle
rorb
mov
or
push
mov
pushf
outsb
movsb
inc
mov
inc
xor
pushf
push
inc
mov
push
lret
nop
jae
cmp
icebp
and
jns
pop
or
push
rorb
push
movsl
inc
mov
imul
lods
dec
loop
mov
push
leave
push
xorb
pop
push
pop
pusha
inc
mov
push
daa
cwtl
push
and
sti
faddl
pop
shrb
dec
out
filds
jb
pop
pop
sbb
out
dec
add
mov
dec
push
xor
das
pop
mov
popf
testl
loop
dec
pop
mov
leave
jae
dec
incb
inc
mov
pop
push
jo
roll
xor
cmp
ja
pop
pop
pop
fs
enter
mov
aaa
push
or
loopne
xor
negl
add
dec
pmuludq
xchg
or
out
cmp
insb
sub
sahf
cmp
fwait
pushf
aam
dec
push
clc
xor
add
sub
xchg
add
mov
sub
mov
fisubrl
add
pop
inc
push
sub
sbb
sbb
push
add
xchg
pop
mov
ret
gs
imul
push
loope
sub
mov
cmp
mov
add
arpl
dec
push
enter
adc
daa
mov
js
add
pop
lods
inc
shrl
ds
test
or
pop
cltd
jp
inc
shlb
mov
and
mov
das
subb
pusha
cmp
mov
or
sub
ja
or
pop
mov
seta
push
jnp
pop
movsb
push
push
loope
mov
mov
dec
add
sbb
pop
scas
adc
xor
pop
imul
or
lds
or
adc
mov
jge
jne
jg
sbb
nop
add
dec
push
ret
add
repz
jno
bound
add
std
mov
fisubrs
sub
int3
fs
inc
cmpsl
pop
or
pushf
adc
mov
sahf
leave
or
jb
das
sub
push
out
adc
dec
leave
dec
fists
add
mov
testl
mov
add
les
xor
dec
shrl
nop
mov
ret
mov
mov
loop
loope
roll
hlt
pop
inc
int3
push
jb
mov
lea
cs
pusha
xor
inc
dec
pop
and
mov
add
adcb
jo
add
jo
inc
push
rclb
in
jmp
dec
pop
push
dec
pop
jmp
stos
mov
sbb
decb
lret
push
mov
inc
jb
add
lahf
orb
add
loop
jne
jno
in
lds
out
push
adc
inc
ljmp
jg
pop
addr16
add
mov
cwtl
push
jg
inc
mov
addr16
sub
jmp
cld
ljmp
and
xchg
jmp
incb
adc
fisubl
into
and
cmp
add
push
push
adc
and
ds
fiaddl
aam
jle
push
sub
add
or
push
divb
or
xor
loope
outsl
dec
popl
fdivp
into
dec
pop
inc
mov
xchg
test
or
aaa
movsl
mov
add
out
dec
jbe
rcr
inc
test
jno
stos
std
ja
test
xchg
dec
push
pop
cmp
mov
or
cmp
daa
stos
sub
push
js
jo
xchg
std
xchg
je
nop
popa
stc
daa
xor
neg
shlb
jmp
jo
adc
or
sarb
sub
dec
iret
out
cmovno
cmp
push
mov
adc
outsl
mov
psrlw
and
test
cs
dec
jecxz
das
loop
jmp
cmc
fucom
xor
xchg
inc
push
sub
pop
and
mov
push
mov
add
imul
jmp
lods
bound
aas
fsts
in
repz
pusha
js
mov
mov
daa
fdivrl
movsb
pop
mov
add
xor
jg
fdiv
jb
xlat
repnz
in
in
mov
sub
add
das
jbe
add
out
pop
bound
xor
jae
pop
inc
gs
xlat
or
dec
fldcw
xor
jge
cli
jle
loope
inc
inc
dec
xchg
push
add
mov
clc
jmp
test
or
cmp
xor
rcrl
icebp
addb
cli
ds
pop
mov
pop
pop
icebp
add
imul
loop
push
jg
outsl
out
and
mov
inc
insl
pop
or
std
dec
shrl
fiaddl
inc
stc
out
xchg
pusha
pop
pop
pop
bound
jmp
jae
test
push
jp
cwtl
test
cmp
shrb
mov
sbb
ja
sbb
sub
sbbb
jmp
in
adc
je
test
shrl
push
mov
pop
and
in
sub
and
add
cmp
xchg
jle
adc
pusha
xchg
mov
sub
or
pop
or
xor
int3
sub
fsts
dec
mulb
mov
ljmp
cltd
popf
pop
add
jge
push
xchg
add
lret
mov
enter
pusha
adc
popf
das
shlb
outsl
inc
sbb
jns
fstpt
pusha
rclb
xor
dec
push
or
jmp
insl
int3
add
mov
das
jmp
in
dec
imul
and
jno
rorl
push
stos
popa
add
mov
push
and
push
push
hlt
jmp
cli
xchg
dec
fdivrs
inc
cmovp
lods
movsl
ret
pop
shl
or
ret
or
push
mov
xor
pusha
xor
or
dec
sbb
jbe
add
test
or
insb
jle
mov
stc
push
xor
sub
fcomps
cmp
stc
imul
add
xchg
not
out
add
arpl
jmp
pop
jmp
out
add
mov
or
add
movsb
dec
ljmp
ret
dec
in
inc
sbb
mov
pushl
imul
adc
push
dec
xorl
jecxz
xchg
inc
adc
jne
pop
daa
jge
jbe
jmp
lret
cmp
cwtl
mov
add
dec
xchg
lods
adc
pop
cmpb
mov
shll
dec
add
shrb
inc
jno
sub
cli
popf
adc
sub
lods
rcll
pop
jo
xchg
outsl
cld
mov
sti
sub
in
repz
idivb
shlb
and
jmp
xor
pop
cmp
xchg
cmp
xchg
push
xor
ficomps
sbbl
enter
pop
orb
push
cmc
jnp
add
mov
aas
cmpsb
xchg
mov
jg
mov
fnstcw
cmp
and
or
out
sub
sub
fstl
les
or
pop
dec
mov
jo
pusha
inc
repz
rolb
rcrl
cmp
pop
jmp
mov
push
call
lods
mov
addb
lods
xor
jmp
pop
xor
ja
ret
stos
pop
frstor
pushf
pop
outsb
cmp
cmp
xorl
inc
push
adc
push
add
cli
inc
cwtl
bound
jmp
jbe
add
ret
loope
push
mov
hlt
xor
in
jae
out
push
std
jo
stc
inc
int3
pop
inc
test
add
leave
or
fnstcw
fadds
adc
test
xchg
adc
pop
pop
add
negl
xchg
aaa
call
gs
sub
pushf
loop
pop
fdivrl
jno
lods
cltd
xlat
stos
sub
jb
insb
ss
adc
jo
or
fsubrs
pop
lock
mov
pop
sub
inc
and
popf
pusha
sbb
sub
pushf
push
es
push
add
insb
aam
imul
in
loopne
jb
mov
push
and
xchg
dec
test
ret
rcrl
and
or
lcall
js
pop
push
adc
ljmp
push
mov
jo
fists
lds
cmp
or
lea
jg
push
lret
adcb
xor
ret
dec
sbb
jns
andb
inc
cmc
repnz
js
test
sub
and
and
and
mov
jmp
pushf
ret
pop
rorl
adcb
inc
rclb
push
or
outsl
pop
pusha
mov
les
fistl
lahf
roll
dec
popw
sbb
dec
scas
test
std
out
or
vmovsldup
je
dec
jecxz
inc
mov
outsb
lds
xor
mov
dec
push
jp
xlat
fsub
mov
xor
or
mov
shlb
lret
xor
push
mov
insl
mov
and
push
adc
outsb
lods
cmp
clc
jbe
sub
push
shr
or
mov
pop
xor
dec
daa
xor
mov
in
push
das
xchg
fstpl
adcb
sub
xor
fs
sarl
fsqrt
mov
gs
movaps
in
adc
mov
inc
mov
fsts
mov
in
mov
stos
sbb
jo
pop
lret
adc
and
mov
add
out
adc
xor
xor
jmp
gs
jmp
pop
shr
xor
xor
imul
cmp
jmp
xchg
negb
pop
hlt
fwait
xchg
pop
and
stc
push
or
fnstenv
jp
and
jns
cmpsb
cld
pop
adc
popf
push
inc
lock
movsb
cwtl
sbb
ss
in
mov
push
ret
add
mov
clc
add
testb
mov
pop
sbb
subb
arpl
inc
out
adc
push
sbb
mov
bnd
or
mov
xor
out
popf
psllw
ds
xor
mov
pop
enter
lcall
sub
addl
xor
jmp
lahf
dec
pop
or
cmp
sbb
pop
and
es
ds
inc
push
mov
push
push
jns
popa
pop
loop
outsl
xchg
push
out
add
pop
mov
inc
xor
in
fildl
leave
push
test
cwtl
pop
pushf
or
and
pop
mov
in
push
imul
rclb
ja
mov
xor
lock
mov
push
loopne
jae
dec
push
or
inc
icebp
cmc
aad
pop
ss
add
in
xor
push
or
stos
pop
dec
cmp
fwait
pop
push
mov
sti
pop
push
jg
mov
sub
xchg
add
and
xor
sti
jae
or
stc
jmp
adc
adc
mov
jp
pop
sbbl
mov
hlt
pusha
jmp
jae
push
mov
sub
cmp
sub
jmp
xor
jge
and
lret
sahf
icebp
aam
leave
daa
ja
les
and
loopne
xchg
inc
and
and
lcall
sub
lods
fs
test
push
jmp
jb
add
sarl
dec
add
lahf
add
pop
sub
add
sub
xor
pop
mov
pop
jmp
mov
or
sbb
test
jbe
dec
ret
cmp
mov
or
cmp
out
dec
idivb
pop
jle
pop
mov
xchg
dec
add
sarl
pop
sahf
mov
add
ja
sub
inc
and
or
pop
repnz
dec
pop
addb
addr16
mov
adc
lahf
loopne
mov
pop
fidivrs
loopne
clc
add
sub
push
jmp
rorl
loopne
sub
and
cmc
int3
push
xchg
sarl
fisttps
fldl
xor
inc
add
jbe
std
sub
test
cld
mov
xor
inc
add
push
clc
lea
jae
jg
push
jo
mov
or
inc
dec
inc
sub
adc
lret
pop
adc
test
das
mov
sub
push
mov
jne
test
inc
pop
stos
or
test
or
sbbb
xlat
pop
mov
imul
dec
mov
dec
cmpsl
push
jmp
das
pop
lds
dec
jno
test
mov
cmpsb
jle
jo
fcoms
adc
pop
pop
out
jmp
xchg
cltd
push
jmp
dec
cmpsb
repnz
icebp
stos
imulb
push
push
das
and
sbb
xor
scas
add
inc
rclb
out
jae
xchg
dec
fmul
mov
xchg
add
and
into
push
mov
sbb
in
not
shll
sahf
sub
and
or
mov
inc
add
scas
sarb
mov
sub
xchg
dec
push
xchg
or
cmpsb
inc
adc
dec
movsb
xlat
setns
sub
lock
jb
jo
add
outsl
pusha
xchg
mov
sub
mov
lock
sub
mov
mov
sub
out
pop
test
add
mov
jle
lret
sbb
jns
cmp
scas
in
lds
repnz
mov
sub
jmp
fwait
dec
out
jge
cmp
popa
negl
fwait
cmp
and
or
or
jg
pop
popf
pop
xchg
lds
jmp
shl
jp
decl
popa
xchg
xchg
mov
mov
sub
lea
or
inc
pop
pop
mov
adc
adc
and
test
and
lods
sub
sbb
aam
outsl
aas
test
cmpl
fdivs
sbb
lods
or
roll
adcl
mov
and
idiv
pop
cmp
cmp
cwtl
imul
ds
imul
pop
loop
lds
xchg
add
xlat
mov
aas
inc
and
mov
mov
pop
daa
sub
or
add
xor
ja
repnz
pop
in
pop
push
negb
popa
pop
popf
push
dec
jb
cli
xchg
push
xchg
cmp
into
sub
call
scas
fs
fucomip
mov
xor
dec
jg
jne
out
clc
xchg
and
push
mov
mov
push
loopne
pop
pop
roll
pop
xor
mov
push
pop
js
mov
pop
in
shl
fdivrs
mov
push
push
movsl
fistps
scas
popf
add
arpl
push
in
leave
add
js
orb
out
call
jb
cmp
test
cmp
xorb
icebp
dec
lea
jo
xor
mulps
push
xchg
gs
stc
ds
lods
pusha
adc
fldl
gs
push
clc
fwait
mov
shrl
in
sbb
ljmp
arpl
lods
mov
push
inc
sub
xor
sbb
lret
add
nop
sub
adc
sub
leave
pop
stc
and
or
das
fs
inc
icebp
mov
adc
shrb
jmp
lret
mov
loop
jmp
push
pop
outsl
fcompl
xchg
sbb
test
daa
das
push
insl
xchg
xchg
add
bound
push
or
adc
adc
fsubrl
pop
addl
pop
cld
mov
cli
das
aaa
mov
xchg
pop
push
in
jle
loope
cmp
ljmp
add
jno
pusha
adc
adc
xchg
add
icebp
pop
cmp
jo
push
gs
inc
fwait
adc
xor
push
sub
or
add
aas
jmp
ja
addr16
mov
pushf
add
jmp
lea
pop
dec
and
mov
dec
push
pop
pop
xor
inc
out
or
fstps
outsb
push
cmpl
and
dec
out
push
scas
add
decb
ret
mov
pop
push
and
insb
stc
imul
daa
fsubl
sub
pop
dec
fcompl
push
lahf
in
xchg
pushaw
ss
lcall
fsubs
mov
fnstcw
dec
lret
pop
std
mov
dec
push
and
push
cmpsb
ret
jns
pop
pop
mov
stc
cmp
inc
test
shr
inc
xchg
add
or
sbb
push
or
cmc
sub
add
jg
pop
loop
pop
pop
nop
orl
call
pop
mov
test
insl
pushl
ds
test
cli
mov
pop
sub
call
jge
out
sub
mov
bt
and
loop
cmp
xor
shr
or
repnz
ljmp
cltd
mov
fdivrl
dec
adc
xchg
leave
pop
pop
xchg
mov
std
test
jns
mov
es
and
or
insb
add
push
iret
push
jb
outsl
or
mov
mov
je
ret
fwait
sub
aas
mov
cmp
dec
sub
in
jae
inc
lock
xchg
add
enter
shlb
loop
jmp
stc
pop
cmp
xchg
mov
xor
and
push
and
shrl
and
cmp
test
rclb
add
push
lea
cmpsl
jnp
les
mov
comiss
lods
pop
mov
jnp
imul
test
loope
push
mov
xor
jmp
xchg
jmp
aad
xlat
push
mov
mov
je
fadds
je
jp
push
xchg
das
in
mov
dec
xor
lock
mov
ret
pop
mov
push
int3
pop
dec
add
imul
push
or
leave
xchg
push
lods
pop
mov
es
jae
pop
mov
jo
aam
outsl
daa
push
and
gs
jl
addr16
xorb
ja
repnz
jmp
dec
lcall
and
adc
lret
addb
sub
mull
mov
mov
loope
push
mov
rclb
add
sub
pop
mov
jae
sub
push
push
mov
xor
cmpb
repz
aad
mov
dec
fs
push
mov
xchg
xor
add
cmpsb
xchg
pop
aaa
in
outsb
addl
mov
jno
in
out
test
push
sub
adc
or
aas
out
push
sub
push
inc
daa
mov
mov
cld
fs
push
out
rorl
dec
push
push
add
or
push
push
mov
push
je
dec
jp
pop
lock
lahf
imul
cmpsl
iret
adc
push
sbb
lahf
mov
dec
out
sbb
jmp
aas
or
iret
add
into
cmp
dec
pop
mov
inc
add
push
xor
xchg
add
addr16
sbb
xor
xchg
ljmp
mov
jno
imul
pop
adc
iret
pop
out
mov
sti
lret
mov
rolb
mov
dec
stc
or
push
or
sbb
dec
xchg
sbb
push
jb
ret
out
pop
dec
ljmp
clc
add
and
xor
out
push
mov
pop
jmp
sarb
sub
or
bound
sarb
dec
pushf
cs
ljmp
iret
inc
or
mov
cmp
pop
jecxz
push
xor
lcall
inc
les
adc
pop
xor
pop
test
shll
mov
ret
or
push
add
or
popf
pop
pop
loop
or
jbe
or
dec
inc
imul
arpl
xorb
sub
ret
fbstp
shll
cli
sub
aas
dec
sbb
into
fs
push
cs
imul
add
sbb
or
fmuls
or
rcll
inc
popa
sbb
and
cmpsl
push
jno
xor
xor
mov
and
ficoms
ret
dec
xchg
pop
int3
outsl
in
ja
jae
pop
inc
push
add
lret
jo
add
inc
leave
fstl
fs
sub
jns
enter
xchg
jmp
adc
cltd
jbe
aas
ret
pop
arpl
add
adc
or
or
or
decb
and
subl
fsubrs
inc
and
xlat
bnd
fistps
pop
push
jbe
mov
push
inc
jo
pop
sarb
sub
mov
or
popf
add
lret
imul
xor
or
jbe
sarb
subb
dec
or
test
or
sbb
pop
push
movl
cmp
in
or
out
jmp
xchg
jae
cmpsb
and
adc
lods
jecxz
dec
push
into
dec
sub
jle
sahf
subb
push
xchg
and
xchg
imul
xchg
les
push
mov
mov
mov
or
aaa
leave
push
push
arpl
cmpsb
fs
popa
cmp
pop
out
sub
jo
inc
xchg
repnz
ds
mov
and
dec
push
stos
mov
inc
and
jg
lea
sub
jmp
movsl
jl
add
outsl
hlt
gs
mov
dec
mov
push
ret
addl
or
xor
nop
mov
lods
add
fisubrs
lret
pop
xor
fcompl
jmp
jbe
jno
mov
jmp
push
ds
pop
in
pop
cmc
xorb
rcll
jno
andb
push
jmp
push
or
sbb
xchg
add
cmp
lock
out
out
xchg
bound
push
mov
inc
xchg
jecxz
out
pop
in
out
pop
andl
mov
push
int3
push
leave
inc
add
push
pop
or
fbld
int
outsb
and
push
pop
and
jg
adc
aas
push
aas
push
xchg
mov
pop
stos
mov
dec
jmp
inc
jae
loopne
mov
mov
jne
lret
xchg
data16
or
push
add
jle
push
mov
xor
pop
add
lods
js
pop
dec
cmpsb
jge
pop
mov
les
call
push
push
xor
jmp
jmp
cld
pop
daa
loopne
mov
dec
xor
pop
inc
and
cmp
xchg
int3
xchg
ret
pop
clc
or
lret
sti
cmp
test
xchg
mov
add
pop
lcall
sbb
and
repnz
sbb
loopne
xchg
sbb
stc
outsl
sahf
pop
fstpt
notl
mov
testl
adc
mov
dec
and
jne
mov
out
repnz
aaa
jo
sbbl
out
cs
inc
cmpsb
sbb
test
sub
repnz
mov
pusha
out
xchg
fsts
popf
call
jmp
out
xchg
dec
gs
cli
clc
movsl
and
pop
mov
mov
add
xor
mov
ret
lret
push
pop
or
stos
negl
loop
cmp
or
and
jbe
out
es
lock
dec
push
adc
clc
or
sti
fs
jle
sub
pop
ret
int
orl
addb
inc
push
mov
cmp
mov
xchg
leave
icebp
xor
add
gs
in
ss
pop
add
ljmp
pop
mov
mov
xchg
cmp
push
inc
cwtl
inc
or
sub
pop
inc
sub
leave
push
push
add
inc
jge
xchg
dec
push
int
jmp
mov
lret
xor
pop
push
and
xor
push
ret
insl
and
sub
inc
mov
or
xchg
loopne
dec
mov
xchg
andl
dec
pop
mov
fucomip
es
fimuls
rorb
into
dec
and
daa
add
and
jl
cwtl
pop
add
pop
or
or
mulb
ret
xlat
fld
daa
pop
popf
add
test
int
in
jg
adc
or
jl
pushf
addr16
jbe
in
mov
inc
mov
rcr
xchg
mulb
mov
push
nop
insb
or
adc
cmp
jp
adc
inc
sub
mov
and
setge
jae
jnp
ljmp
cld
and
mov
mov
mov
imul
sbb
nop
pusha
ljmp
ss
roll
fstps
hlt
mov
lahf
movsl
scas
mov
sahf
test
movsb
push
rcll
shll
add
mov
push
push
push
popa
les
lret
push
or
rorl
inc
popf
jb
xchg
pop
or
sbb
pop
dec
not
or
mov
dec
adc
dec
arpl
std
sub
fs
nop
movb
dec
cmp
fmuls
jmp
insl
pop
sbb
popa
ret
push
test
sti
push
int3
icebp
in
std
movsb
pop
push
mov
movsb
mov
test
movsl
pop
shll
jmp
add
dec
add
inc
cld
adc
mov
idivb
sahf
negl
clc
imul
jg
lock
dec
cmc
int
and
adc
push
jp
in
mov
imull
add
aad
out
or
pop
ja
ret
fcompl
inc
les
pop
or
mov
repz
add
enter
sub
dec
dec
xor
adc
adc
sub
pop
inc
aas
jo
cmp
lcall
jge
mov
dec
jg
pop
addb
in
nop
jno
add
mov
jg
gs
pop
xor
mov
cmpsl
rorb
cs
add
ror
or
bound
add
insb
xor
jmp
bound
ret
inc
sbb
popa
pop
sahf
and
add
mov
outsb
test
test
adc
sub
sarb
inc
push
not
ret
mov
sub
lret
pop
in
xchg
pop
push
add
loope
and
dec
add
inc
push
or
faddp
adc
cmp
push
cs
sahf
mov
xor
shll
mov
sarb
mov
mov
out
jne
sbb
jl
xchg
ja
js
xchg
pop
dec
lds
pop
add
push
mov
jg
xor
cwtl
jns
inc
or
adc
mov
mov
mov
mov
fcmovbe
cmp
and
aad
mov
fldenv
call
mov
lods
rcll
fcoms
bound
push
or
imul
fldl
sub
add
jg
mov
iret
imul
popa
test
and
push
ljmp
or
mov
mov
jmp
xchg
pop
pop
pop
and
out
fs
sti
sub
bound
jmp
sub
je
dec
popa
fsts
lods
adcb
mov
cmove
fdivl
dec
push
pop
mov
pusha
sbb
inc
push
push
sbb
sub
lcall
mov
leave
xchg
call
xchg
adc
inc
out
xchg
mulb
mov
stos
sub
push
push
addb
loope
cmpsl
push
and
sub
pop
pushf
xor
in
test
adc
dec
pop
jo
sub
cltd
xchg
das
out
sub
xor
insl
sbb
adc
xchg
sbb
nop
sarb
je
add
das
and
mov
cmp
mov
and
pop
xchg
or
sysexit
les
mov
mov
pusha
push
xlat
adcb
adc
dec
ljmp
add
lret
inc
call
push
jno
push
push
push
shll
add
js
cmpsb
fptan
inc
ds
xchg
jbe
add
mov
xorb
ljmp
push
sub
pop
xor
js
rcr
ja
add
xor
push
sub
mov
shll
mov
pusha
loop
xchg
stc
xchg
xchg
and
xor
lock
add
adc
or
jmp
in
movhps
insb
pop
jb
sub
mov
daa
add
popa
cmpsb
push
mov
and
mov
jbe
sub
arpl
data16
mov
pop
ds
inc
xor
stos
js
and
add
mov
loop
arpl
cs
pusha
sub
xor
pop
xchg
cmp
pushf
or
ret
ror
std
or
repnz
orb
out
pop
jmp
test
dec
xor
push
test
insb
push
imul
lock
mov
or
out
loope
add
ret
sub
nop
sub
fdiv
adc
push
xor
pop
add
xchg
pop
dec
cmp
test
jmp
sbbl
jnp
jb
das
lock
inc
lret
push
push
push
cmp
dec
or
pushf
xor
lds
testb
inc
ret
pop
rol
add
out
jmp
int
jnp
dec
bound
inc
xchg
jnp
addr16
push
cmp
mov
mov
ljmp
int3
adc
fwait
pop
hlt
aas
and
adcb
pop
lock
or
and
cmpsl
sti
push
ljmp
and
bound
push
ficoms
adc
adc
jmp
push
pop
mov
jecxz
add
add
dec
sub
push
pusha
adc
add
dec
jmp
ret
arpl
push
jmp
mov
mov
mov
lds
add
jmp
adc
ljmp
dec
dec
add
fnstsw
push
dec
add
jns
out
subb
add
fistl
out
daa
sbb
pop
adc
pop
pop
xchg
negb
mov
mov
jae
leave
xchg
add
bound
inc
mov
iret
hlt
lds
pop
push
sub
sub
or
jmp
xor
jmp
mov
mov
jae
lret
shlb
mov
mov
xchg
xor
adc
daa
push
pop
dec
ror
mov
pop
adc
sub
sti
test
jnp
mov
ret
push
mov
sub
pop
cwtl
jbe
mov
xor
pop
cmp
fildll
icebp
and
jecxz
adc
mov
enter
ds
pusha
mov
imul
push
lods
add
aas
fmuls
xchg
add
popa
adc
aas
sti
push
mov
addr16
rolb
jmp
lret
jb
pop
addr16
push
sbb
scas
pop
push
aas
or
xor
and
push
mov
pop
in
hlt
pop
fs
lods
aad
or
fmuls
sbb
jmp
push
or
mov
lds
add
sarl
cmp
pop
mov
inc
shlb
adc
add
mov
jmp
push
pop
out
sbb
jge
jge
mov
and
cmp
loopne
packsswb
repz
and
pop
outsb
mov
sbb
xor
test
jnp
andb
push
sbb
clc
push
shrb
ljmp
push
inc
jno
shrl
push
mov
inc
aaa
push
mov
xchg
adcb
popf
insl
out
popa
and
inc
sub
aaa
xchg
in
mov
neg
xchg
add
or
js
dec
pop
jmp
jb
rclb
call
ss
addl
push
mov
push
mov
pop
and
in
dec
and
fists
mov
and
rcll
add
aas
clc
cvtps2pd
sahf
cmp
xchg
and
rcrb
add
and
pop
or
fldt
pop
push
frstor
xchg
dec
loope
and
mov
push
xor
xlat
push
ja
inc
sbb
xchg
add
and
popf
jnp
xchg
inc
dec
sbb
repz
and
pushf
or
mov
adcl
ror
ret
cmc
add
jb
rolb
mov
jmp
out
jecxz
xor
mov
shlb
and
mov
sbb
mov
push
pop
pusha
cmp
jne
add
pop
or
repz
jns
jle
mov
sbb
js
dec
xchg
mov
popw
mov
xchg
pop
adc
sub
jno
cmp
lcall
shr
sbb
pusha
fcmovnb
or
outsl
int
lea
add
vunpcklps
sub
mov
add
int3
dec
rol
mov
enter
ret
lret
je
ss
int3
push
cmp
nop
ja
pop
and
inc
pop
pop
push
dec
or
mov
jge
cmp
sub
movsl
test
ss
stos
addb
jle
rclb
repnz
sbb
jb
add
in
or
inc
cmp
xor
add
daa
jmp
js
pop
push
ljmp
mov
mov
jmp
jl
push
icebp
out
shrb
aaa
push
push
push
xchg
jmp
lds
sub
push
lahf
dec
daa
add
enter
popf
or
popf
sahf
lods
lahf
or
shrb
pop
jp
pop
push
rorb
das
dec
dec
fimuls
jbe
pop
add
cmp
or
clc
shll
mov
pop
cmpsb
pop
in
imul
popa
andb
pusha
in
mov
xchg
push
aam
inc
mov
inc
shll
std
add
psadbw
std
out
test
mov
push
std
adcl
adc
cmp
pop
clc
adc
or
adcl
lret
adc
jno
out
test
sbbb
dec
mov
jbe
pusha
sbb
and
insl
sbbb
or
xchg
push
jmp
sahf
int3
clc
popl
pop
scas
mov
jmp
out
mov
cli
ja
pop
loop
jmp
fmull
sbbb
inc
mov
jp
addr16
pop
js
jnp
dec
dec
repz
clc
in
dec
test
das
adc
lock
sub
daa
push
pop
push
push
ret
bound
lods
xchg
std
xor
fildll
seta
jmp
inc
lods
inc
scas
push
test
clc
stos
cmpsb
push
cwtl
and
mov
lahf
shr
inc
mov
lea
rcll
shl
sub
push
mov
pop
mov
push
mov
cmp
and
fcomps
xchg
sub
jmp
mov
popf
lret
aas
cwtl
fisubrl
or
jmp
sbb
add
aad
les
cmpsb
cld
ret
push
in
in
dec
cs
add
rorl
pop
lahf
mov
das
and
jg
jmp
iret
dec
xor
inc
in
andb
test
test
add
push
inc
dec
pop
shlb
andnps
daa
ljmp
iret
or
imul
push
mov
xorb
add
push
out
lds
push
call
scas
bound
subb
push
mov
in
add
mov
lock
sahf
ljmp
pop
cs
and
lahf
rolb
sbb
lock
int3
idivb
inc
pusha
dec
lahf
push
pushf
jecxz
sub
lock
inc
ds
inc
scas
pusha
or
pop
or
aas
jmp
pop
inc
orl
rcr
imul
pop
sub
lahf
add
xchg
lods
adc
pop
repz
add
mov
mov
cs
mov
add
int
pop
iret
cmpsl
fisubrl
fdivrl
sub
xorl
adc
addr16
mov
cs
scas
fdivl
push
adc
adc
hlt
push
jnp
lcall
adcl
mov
es
ljmp
popa
dec
push
arpl
iret
sub
push
jns
add
push
fadds
jo
lahf
push
ja
in
hlt
inc
fisttpll
aas
cmp
mov
and
or
jae
lock
jo
testb
cmp
pop
jle
in
mov
cmpl
mov
mov
or
mov
lret
inc
pop
ljmp
scas
notl
clc
js
loop
cmp
cmpsb
and
scas
cld
cmp
xor
rcll
xchg
or
pop
sbb
scas
leave
sbb
or
jge
es
and
rcr
pop
push
mov
ret
jge
mov
mov
fisubl
pop
fbld
ret
or
pop
stos
out
adc
xchg
sub
xchg
mov
pop
cmp
mov
pop
sub
shl
mov
loop
call
addb
shr
add
jg
jl
jae
pop
pop
inc
rolb
cmp
mov
dec
shl
or
test
mov
sub
and
insb
clc
push
ret
pusha
adc
or
aas
add
call
sbb
and
push
data16
or
fldcw
lea
out
adc
invd
cmpsb
mov
jb
and
repnz
xchg
pop
jmp
std
cmp
mov
xchg
pop
mov
mov
das
pop
mov
shr
testb
mov
stos
pop
fs
push
pop
rorb
and
daa
sbb
mov
sub
mov
mov
xor
or
add
push
or
dec
adc
add
data16
mov
push
subl
arpl
mov
mov
sbb
divl
mov
mov
mov
jo
inc
subl
stos
inc
addb
xor
xor
pop
adc
add
adc
push
adc
dec
or
adc
sub
sbb
or
jl
or
mov
mov
cli
ja
js
shlb
cmpsl
mov
mov
or
out
mov
dec
lods
mov
mov
daa
pop
je
lods
sub
pop
cmp
pop
or
hlt
cmp
mov
pop
iret
pop
cld
mov
pop
iret
jle
push
addr16
bound
in
popf
repnz
xchg
in
dec
mov
lods
lds
adc
cltd
lahf
or
xchg
xlat
adc
sbb
pop
rcrb
or
rorb
dec
test
jle
mov
stc
stos
cwtl
or
or
sub
orb
daa
jmp
pop
sub
mov
test
hlt
in
popf
sbb
pop
inc
pop
adc
push
add
jo
je
pop
ret
stc
jae
mov
lds
cmp
stos
pop
jle
mov
pop
mov
push
dec
add
push
jmp
sub
cmp
fisttpll
cmpsb
mov
and
push
pshufw
test
rep
lods
mov
push
xor
cmp
jmp
cmp
jmp
sbb
lcall
mov
flds
push
mov
addr16
add
add
jmp
testb
pop
gs
rcr
dec
out
rolb
sbb
push
js
and
sbb
icebp
adc
lret
cli
mov
pop
xchg
je
imul
xchg
sub
jmp
sbb
sub
pop
mov
mov
les
popa
mov
mov
ret
cwtl
mov
fists
incl
sub
outsl
enter
inc
jno
sub
push
xchg
lock
test
out
sbbl
sbb
mov
mov
push
sub
xor
popl
jae
fs
rcrb
jbe
jmp
stc
mov
mov
inc
scas
in
add
cmc
or
jae
jge
inc
gs
mov
jmp
adc
cs
and
and
sub
mov
add
add
pop
in
adc
sbb
or
cmc
push
or
jmp
jns
and
neg
jo
out
mov
pop
sbb
sub
lea
les
add
jg,pt
aaa
mov
popf
mov
dec
mov
lods
cmp
and
jo
pop
pop
rcll
adc
pop
sbb
jnp
inc
add
xor
jmp
xchg
xor
push
sahf
inc
cmp
xor
xor
inc
adc
fidivrl
inc
sbbb
adc
push
icebp
jg
and
rorl
adc
ss
pop
test
clc
repz
imul
fmull
xchg
sahf
pop
and
idivl
push
mov
mov
pop
fadd
or
out
adc
jmp
xorb
test
mov
sahf
ret
loope
pop
jle
or
or
xchg
std
mov
in
popf
stc
inc
leave
xlat
rcll
sub
push
scas
pop
test
xor
mov
cmp
call
clc
mov
sbb
push
lcall
or
mov
or
dec
dec
push
loop
xchg
pop
and
bound
push
movsl
popf
out
or
cmpsl
popf
das
hlt
xor
dec
inc
ss
sub
add
mov
adc
ret
dec
jb
shrb
ret
dec
out
add
pop
inc
jmp
dec
jo
inc
mov
movsl
jne
mov
lret
xor
push
mov
jbe
es
sub
lods
shl
cvtdq2ps
iret
fdivrl
dec
push
dec
pop
icebp
incb
cmp
rcl
dec
and
mov
add
or
inc
int3
hlt
adc
ror
dec
jecxz
arpl
xor
push
stos
mov
dec
or
ret
mov
je
mov
pop
jmp
mov
lea
push
ljmp
push
test
in
leave
idivl
jne
mov
dec
dec
mov
adc
adc
rolb
sbb
or
xor
out
inc
aaa
jmp
push
or
mov
pop
mov
dec
or
adc
inc
dec
jg
mov
enter
push
xlat
lock
lahf
scas
mov
arpl
xchg
cmp
stos
cmp
xor
push
push
jmp
xchg
dec
sub
in
dec
stos
sub
pop
test
aas
iret
xchg
aad
inc
jae
clc
aaa
add
jge
pop
add
sub
ss
add
push
mov
rcr
jmp
xor
inc
push
sbb
or
inc
mov
dec
leave
sahf
push
fldenv
sbb
mov
mov
sbb
cli
fiadds
push
mov
daa
popa
cmp
loop
jns
jmp
push
xor
jmp
push
jne
inc
sub
cmp
sbb
mov
popa
add
test
cwtl
ret
in
pop
and
outsb
push
add
push
push
nop
dec
jnp
xchg
or
gs
popa
mov
nop
xchg
aas
xchg
imul
out
fwait
push
sub
out
and
movsl
push
insb
pop
push
mov
and
and
xor
sub
lcall
push
jg
pop
add
les
addb
shlb
add
inc
xor
lods
jae
adc
mov
add
jp
in
scas
rorb
add
je
adc
movsb
xor
imull
cmpsl
push
in
pop
das
clc
out
push
pop
xchg
add
jmp
popa
push
stos
or
addr16
push
push
cmp
add
pop
jmp
pop
mov
jbe
jnp
popa
jmp
xchg
stos
add
cld
or
or
or
and
and
push
pop
das
shlb
testb
and
fcmovnb
or
cwtl
mov
mov
in
popa
clc
mov
mov
add
or
mov
sbb
pop
daa
push
shrb
mov
out
dec
int3
add
jb,pt
daa
rclb
pop
pop
loope
fs
adc
popf
iret
leave
mov
mov
lock
xchg
jb
push
mov
cmp
mov
shll
adc
lds
mov
or
fidivrl
jg
or
push
clc
popf
push
gs
test
add
inc
testb
adcb
mov
aas
hlt
pop
jl
clc
mov
adc
addr16
xchg
pop
lds
test
adc
mov
mov
pop
push
subb
cmpsl
jns
sarb
or
or
jg
aas
jmp
xchg
into
movsl
and
std
loopne
pop
cmpl
lock
sub
cld
pop
test
mov
mov
sti
sub
test
push
add
cmpsb
fs
mov
test
push
movsb
pusha
cmp
mov
inc
adc
jmp
sarb
loopne
dec
rolb
testb
pusha
inc
dec
jl
or
or
rclb
repnz
call
xlat
lret
mov
and
das
cwtl
push
xor
das
cltd
inc
pop
std
dec
cmc
cmpb
xchg
sbb
jo
icebp
sbb
jnp
into
push
cs
add
push
adc
sbb
jmp
andb
pop
push
dec
jns
lds
sbb
xchg
and
cmp
dec
out
lea
int
lahf
stc
iret
imul
out
pop
mov
ret
or
lahf
dec
add
inc
test
in
inc
pop
test
lods
cmp
icebp
and
or
adc
iret
add
aas
hlt
jae
pop
nop
ljmp
sub
mov
sub
jne
cmp
aam
push
mov
mov
jmp
dec
pop
jge
and
int3
sub
sbb
cs
loopne
push
shl
popa
sbb
movsl
scas
lret
gs
stos
and
sub
inc
push
ja
push
adc
adc
test
dec
mov
shlb
adcb
mov
das
mov
orl
movsl
scas
and
push
ja
out
pop
pop
bound
or
pop
and
inc
and
into
or
sub
adc
daa
dec
push
jns
iret
int
xor
out
lock
pop
xlat
add
add
sbbl
sbb
pop
and
cmp
push
push
ret
ss
sub
or
add
jmp
jne
push
sub
jge
pop
pop
test
sub
lods
out
test
xor
cld
out
pop
pop
mov
sub
xchg
mov
cmp
out
push
xchg
sub
push
adcb
dec
imul
or
inc
bound
cmp
xor
cmp
out
es
mov
push
pop
jnp
scas
shl
in
fsts
leave
mov
icebp
call
sahf
inc
stos
iret
repnz
push
and
adc
pusha
xchg
pushl
jmp
pop
faddl
sahf
daa
inc
and
aaa
add
sub
repz
fimuls
pop
pop
push
mov
jnp
pop
jns
jp
fildll
pop
jecxz
adc
pop
adc
and
push
js
insl
cs
push
xchg
dec
xor
sbb
in
adcl
mov
inc
dec
cli
add
das
icebp
mov
nop
cmpsb
shrb
or
jbe
mov
or
add
jae
test
inc
or
repz
mov
xchg
hlt
ljmp
jne
cmp
out
jle
pop
sbb
sub
orb
dec
adc
inc
dec
mov
push
call
pop
lock
and
rcrl
dec
out
push
push
ja
shr
add
fbstp
int3
aam
insb
inc
xor
sub
dec
sarb
jmp
in
jmp
imul
dec
dec
and
cmp
mov
mov
ret
gs
or
es
jp
xor
dec
shrl
out
sbbb
popa
dec
sahf
orl
cmp
testl
inc
mov
pop
push
shl
jg
xchg
dec
adc
sub
lahf
push
andb
or
cmc
das
pop
pusha
orb
add
jmp
mov
bound
jl
sub
loopne
inc
popa
xor
ret
shlb
sbb
jp
gs
mov
in
mov
xor
cmpb
pop
sahf
hlt
mov
push
mov
pop
scas
lret
sbb
adc
popf
pop
int3
fwait
inc
aad
xchg
shl
xchg
pop
adc
mov
lahf
pop
mov
or
cmp
add
jbe
push
scas
mov
jno
xchg
xor
cmpb
jmp
push
xor
insb
xor
cli
cld
cmc
jb
call
dec
mov
cwtl
popf
dec
mov
push
clc
ret
lds
mov
adc
push
leave
jno
ficomps
fdivrl
pop
stos
mov
adc
repz
dec
and
scas
dec
mov
ljmp
gs
xlat
dec
push
aam
or
sbb
mov
dec
push
push
mov
dec
push
lock
test
and
std
insb
sbb
aad
sbb
sub
mov
loop
push
push
in
std
nop
xchg
add
rolb
mov
sub
cmp
iret
cmp
repnz
push
push
mov
ret
jnp
add
jbe
sub
jmp
cltd
shll
das
ljmp
pop
push
stos
enter
nop
jmp
out
jle
dec
inc
mov
insl
xor
pop
cli
rcl
int3
mov
sbb
daa
lds
jmp
mov
stc
popa
les
lds
add
mov
mov
pop
inc
mov
dec
push
cli
xor
add
cli
rcrl
jmp
outsb
push
inc
les
xor
into
cmovb
jl
pop
lods
cmc
mov
jge
aas
out
push
cmp
rcll
enter
cmp
lds
jne
or
fldenv
adc
imul
sub
sbb
add
xor
pop
scas
push
inc
out
lret
pop
pusha
hlt
lods
cs
adc
pop
push
cmp
out
jge
mov
rcl
cmc
popa
subb
int
pop
test
mov
jg
xor
notb
cmp
jle
in
in
pop
lret
add
inc
cwtl
andl
insl
cwtl
mov
sbbb
mov
aad
push
sbb
mov
xchg
repz
imul
adc
dec
sub
popf
dec
gs
rcll
push
mov
push
xor
pop
pusha
dec
mov
jmp
pop
push
daa
and
pop
dec
push
in
lret
cmp
lds
push
fwait
movsb
mov
aas
xlat
stc
xchg
or
ds
adc
jne
fstl
push
sub
inc
pop
mov
pop
xchg
dec
stos
jge
rolb
lods
enter
sti
in
aam
cmp
movsl
mul
add
push
das
xor
cmp
jmp
fcomps
pop
mov
data16
mov
inc
jmp
sub
popa
mov
jne
sub
popf
gs
icebp
mov
cld
or
div
jg,pt
cwtl
mov
or
aam
or
rolb
xor
inc
out
xchg
rclw
pop
sbb
in
daa
push
dec
js
nop
dec
pop
inc
cmp
in
xchg
xor
pop
add
stc
sub
sub
add
push
adc
jge
in
and
jl
add
jns
arpl
mov
pop
out
sub
shrb
pop
adc
xor
mov
dec
jnp
pop
xor
and
movsl
pop
mov
jmp
call
daa
fadds
jle
push
mov
pop
out
aaa
push
dec
rcll
mov
push
mov
test
or
inc
jno
push
mov
pop
icebp
xchg
ret
std
mov
cmp
or
or
add
adc
or
push
xor
xchg
std
mov
loope
xchg
mov
pop
sub
test
add
into
stos
mov
mov
cli
lock
bswap
lcall
es
cltd
or
cltd
les
push
in
mov
push
xchg
enter
enter
sub
test
das
lahf
jg
enter
jno
add
sub
xor
jae
xor
inc
jg
cmp
xor
lcall
mov
and
aaa
adc
mov
pop
in
pop
andb
dec
cmp
cli
shlb
adc
cmp
pop
jmp
mov
adc
push
fmull
push
ret
daa
imul
test
or
cmpsl
ret
rolb
inc
je
cmp
mov
nop
push
nop
dec
mov
mov
mov
or
dec
movsl
in
leave
test
in
mov
cmp
jmp
mov
cmp
pop
mov
xor
aam
inc
lock
imul
outsl
cmpsl
xchg
dec
lds
add
jmp
ror
sarb
mov
loop
mov
dec
cmc
icebp
cld
jl
or
pop
cltd
add
sub
or
sbb
clc
sbb
add
pop
rcrb
mov
pop
pop
sbb
or
and
cmp
dec
dec
es
sbb
vpsubsw
lahf
lock
addl
mov
mov
xchg
mov
jns
xor
jne
lods
ret
aas
ret
mov
icebp
lret
ret
nop
rcl
mov
inc
mov
jns
in
and
outsb
je
mov
xchg
jo
dec
sub
cmc
inc
pop
pop
inc
sarl
push
mov
mov
lahf
loop
and
dec
xorb
push
mov
ffreep
xor
inc
xchg
icebp
inc
mov
jmp
jmp
jns
ja
sub
mov
jle
sbbl
cmpsb
or
jb
sub
jmp
clc
jge
movsb
jbe
add
andb
jno
sub
mov
dec
lret
push
call
jmp
push
jae
push
mov
push
jmp
mov
cmc
insb
mov
pop
inc
pop
mov
popf
adc
pop
scas
sub
jmp
mov
fs
cmp
sbb
jecxz
push
mov
cmp
fsub
fisttps
mov
mov
cmp
jle
add
jae
cmp
or
sub
sub
into
xchg
out
rorl
xor
jge
adc
mov
push
sti
push
fwait
or
pop
jmp
pop
dec
add
mov
ljmp
orl
imul
ret
pop
mov
or
ficoms
jns
xchg
ret
pop
popf
inc
jmp
pop
mov
add
mov
jmp
add
and
pop
in
lahf
pop
aam
dec
jmp
inc
dec
sbb
push
pop
inc
fwait
repz
mov
or
mov
xchg
sbbb
push
sub
sub
mov
mov
or
sub
pushl
pop
sti
fisttpll
push
or
mov
or
xchg
and
mov
jmp
or
fstl
jmp
flds
mov
inc
call
cmpsb
sbb
or
in
and
xchg
inc
bound
dec
or
cmp
xchg
add
aas
popf
std
sbb
dec
sub
fisubrl
inc
jmp
jns
dec
xor
fists
mov
gs
inc
or
int3
push
xchg
dec
add
push
sti
movsl
sub
rorl
ret
lock
push
out
adc
bound
shl
fldl
push
mov
add
and
rclb
cmp
jmp
sub
and
sub
mov
mov
out
mov
dec
nop
out
pusha
xor
clc
mov
cmpxchg
mov
xor
ljmp
and
xor
inc
mov
push
movsb
popf
fsin
test
ljmp
pusha
dec
mov
movsl
xchg
pop
fldcw
arpl
stos
jmp
jnp
add
test
mov
and
add
dec
add
push
mov
setle
jnp
adc
cmp
loop
add
int
sbb
test
bound
fsubr
mov
mov
dec
push
mov
mulb
movsb
or
xorl
sbb
ret
lds
push
movsb
ret
sub
cld
cmp
mov
adc
imul
cwtl
cmp
push
cmp
xor
cmc
aad
cmp
out
mov
push
push
mov
jg
jbe
mov
and
inc
inc
dec
sub
test
fcoml
fisttps
mov
aad
mov
mov
mov
xchg
rcll
inc
dec
mov
sub
sub
sahf
cmp
fisubs
jae
movzbl
push
pop
and
or
dec
ret
dec
call
ficoml
mov
popf
sti
mov
dec
pop
inc
jb
cmp
push
push
push
cmp
dec
fldl
dec
fnstcw
adc
jns
push
icebp
sub
mov
sub
sub
mov
pop
push
or
adc
add
push
repnz
pop
xchg
insb
xlat
jmp
cli
lret
inc
adc
out
adc
add
adc
mov
pushf
adc
test
cmp
int
outsb
daa
notl
mov
push
jnp
mov
js
jecxz,pn
sub
dec
mov
adc
pop
out
sub
and
shlb
push
push
mov
shll
lret
pop
and
or
jns
dec
andb
sub
sub
jmp
ret
push
mov
dec
cld
push
lock
mov
push
mov
pop
pop
sub
addr16
aas
jb
and
jmp
stos
dec
dec
pop
shrb
jae
lahf
ret
or
dec
cmp
stos
sbb
das
jmp
outsb
enter
cmp
popl
call
sbbb
dec
out
mov
and
add
dec
out
push
dec
sub
mov
ljmp
adc
jno
push
mov
add
push
out
sarb
aam
add
cmpsl
pop
hlt
decl
push
mov
pop
or
loopew
imul
scas
mov
adc
fmuls
fistpll
roll
add
push
fildl
shll
mov
pop
out
adc
jo
cmpsl
imul
stos
sub
daa
pop
in
mov
sbb
jnp
pop
jae
cmp
call
cmp
outsl
call
dec
pop
out
cmp
test
push
shll
popf
or
inc
mov
pop
jge
dec
push
pop
push
test
mov
fimull
mov
pop
dec
cmc
mov
daa
std
mov
pop
mov
jmp
das
mov
lcall
inc
sub
sbb
or
and
or
inc
daa
mov
dec
pop
add
movsb
push
shll
mov
jne
cmp
imul
xchg
add
sbb
nop
jbe
out
imull
or
rcll
push
push
lcall
aam
mov
inc
jmp
ret
insb
insl
loop
push
xchg
out
adc
imul
mov
mov
adc
fistl
sub
scas
xchg
inc
adc
cmp
jge
int3
int3
push
fs
flds
push
and
mov
icebp
jo
iret
ds
test
push
or
dec
xor
sub
cmp
mov
rclb
stos
or
lock
add
jmp
out
into
bound
pusha
outsl
frstor
xor
push
mov
mov
std
pop
push
mov
popa
sbb
push
jns
cmp
dec
pushf
dec
push
loopne
sub
bound
adc
subl
cmc
and
lret
sarb
insl
cwtl
aam
cmp
out
pop
or
cwtl
outsb
popl
jmp
scas
loop
jl
mov
xlat
dec
cli
dec
pop
out
mov
adc
xor
sub
imul
or
pop
or
es
lahf
push
loope
pusha
fs
loopne
out
pop
sub
or
icebp
adc
fsubrs
mov
inc
jp
divl
ds
adc
imul
sbb
and
or
pushf
dec
dec
das
lea
out
mov
xchg
jne
inc
cmc
sbb
add
add
sbb
or
dec
push
mov
jle
adc
sub
adc
call
movsb
adc
ljmp
add
test
cltd
or
inc
rolb
add
xlat
pop
inc
push
adc
pop
push
lds
jge
inc
rcl
dec
shlb
mov
cld
mov
mov
or
xor
jno
push
pop
imul
pop
and
mov
call
adc
jne
inc
jg
cmp
push
cmc
int3
inc
daa
sub
fucomp
sahf
ljmp
or
push
add
mov
adc
jmp
int
das
call
repz
and
jb
pop
xor
js
jge
sti
pop
shlb
add
cmp
dec
or
and
lret
jno
scas
ficoms
cli
pop
mov
push
ret
lret
jo
pop
push
icebp
and
pop
shl
mov
sub
add
inc
outsb
dec
or
sti
or
mull
or
push
jae
mov
mov
pop
mov
scas
sub
or
test
fldz
mov
das
mov
mov
andb
xor
and
pop
fimull
and
mov
dec
cmp
inc
rcrb
lods
cwtl
xchg
add
orl
inc
lea
es
jne
scas
xchg
xchg
adcb
cmp
jge
mov
in
inc
lock
scas
data16
xor
ja
inc
sub
add
out
pop
inc
mov
and
mov
sub
iret
or
std
adc
and
mov
add
xchg
xchg
xor
sub
fidivl
sub
push
xor
lahf
test
jle
out
enter
repnz
mov
jbe
inc
xor
movsl
add
add
hlt
lea
mov
lods
jmp
add
aas
add
cs
scas
sarb
fcompl
hlt
inc
mov
mov
mov
mov
aas
add
cld
imul
imull
and
xor
or
mov
cltd
sbb
lock
mov
lcall
jle
sub
jmp
dec
loopne
and
test
sahf
cmp
fcmovb
jne
jmp
cwtl
xchg
popa
and
adc
dec
lea
push
out
in
loope
dec
push
adc
xor
adc
xchg
jge
jbe
mov
insl
imul
cmp
shlb
inc
adc
jg
pop
sbb
add
cmp
cmc
fcomp
fdivrp
pusha
and
pop
pop
dec
je
xchg
pop
lret
xor
pusha
icebp
adc
jp
push
std
sbb
enter
lods
mov
mov
push
ret
mov
pushl
add
adc
pop
clc
xchg
or
push
and
add
cmp
cmp
mov
inc
sub
outsl
test
hlt
inc
xchg
pop
jns
dec
les
loope
mov
pop
push
or
mov
dec
ret
out
lods
and
add
clc
pop
xor
cli
cs
outsl
leave
mov
test
inc
mov
sub
mov
cmp
mov
cmp
mov
adc
or
push
jge,pt
adc
clc
adc
or
iret
bound
mov
xor
adc
clc
test
sub
hlt
xchg
or
dec
cltd
or
ret
and
mov
push
sub
not
jmp
push
sar
push
ret
aaa
addb
pop
outsb
mov
pop
int
loopne
cmp
dec
pop
add
mov
flds
dec
arpl
stos
fnstcw
push
or
and
aas
test
mov
inc
dec
cmp
push
shlb
shr
dec
sbb
jle
or
ja
sub
or
xchg
inc
aas
out
enter
pop
call
push
sub
jno
shl
jbe
jmp
test
lods
push
adc
mov
rcrb
aaa
inc
stos
and
movsb
xchg
enter
sti
loope
in
push
mov
add
popf
inc
in
mov
icebp
arpl
push
hlt
mov
mov
daa
pop
pop
ret
or
add
pop
mov
enter
jnp
xchg
flds
pop
xchg
add
shr
mov
loope
mov
fisttps
pop
lods
jle
pop
clc
cmc
je
rorl
mov
pusha
loop
dec
test
orl
cmp
movsl
stos
sbb
data16
rcrb
mov
push
mov
xor
movsl
mov
loopne
mov
push
sub
or
aaa
mov
aam
and
fsubrl
add
lret
ficompl
mov
sysret
cmp
std
rolb
sub
xchg
aaa
shlb
bound
push
xchg
jmp
mov
lock
push
call
cmp
pop
jmp
or
xor
push
jl
repz
xchg
add
int
lds
jo
lcall
test
add
pop
inc
mov
outsb
adc
mov
popa
fdivl
mov
adc
jae
inc
mov
jmp
les
jmp
and
cltd
testb
xor
jmp
cmp
fs
cli
hlt
cld
add
ret
out
sub
cmp
shr
jp
xor
imul
es
popa
pusha
sbb
xchg
inc
loop
jo
xchg
jne
xor
pop
adc
xor
outsl
add
daa
in
dec
paddw
das
pop
mov
sub
sahf
sahf
xor
push
sbb
nop
rcrl
mov
imul
adc
push
movsb
je
mov
repz
daa
fistps
push
hlt
lods
jp
pop
adc
mov
inc
aad
xor
shl
adc
jmp
push
jne
lahf
in
jle
out
xchg
cmp
loopne
lock
xor
in
xchg
mov
popf
sub
es
sbb
add
ret
imul
rcll
xchg
sbb
inc
fistpll
in
sub
mov
push
mov
and
dec
push
clc
adc
lock
fists
sbb
mov
jl
pop
push
out
mov
or
lock
fidivs
data16
pop
push
mov
mov
ret
imul
mov
pop
pop
stos
push
or
jmp
cli
cltd
lret
push
cmc
ret
add
or
jg
adc
push
shr
jmp
dec
mov
cld
sub
in
push
mov
aam
roll
inc
inc
sbb
mov
out
mov
imul
dec
pushf
test
orb
sbb
rcrl
jne
or
xor
pop
add
shr
add
fucomp
fwait
adc
dec
push
std
cltd
aas
push
in
adc
in
and
test
rolb
shl
repnz
xor
push
aaa
js
pop
sbb
sub
or
adc
sub
outsl
push
ror
inc
lcall
and
and
adc
jp
mov
add
sarb
test
movl
rcr
push
mov
push
add
jae
and
movnti
aad
fisttpl
inc
js
jns
lods
inc
or
xchg
pop
cltd
add
lcall
and
daa
pusha
or
fmull
jmp
inc
inc
call
mov
fmulp
pop
add
icebp
sbb
cmp
or
andb
mov
or
and
cmp
sbb
pop
jmp
cmp
or
mov
imul
mov
fs
xor
xor
lock
jae
sbb
jne
scas
pop
adc
test
and
outsl
mov
dec
loopne
ljmp
out
insl
or
push
test
sahf
out
or
jno
enter
es
insl
adc
or
push
ja
jp
jmp
jl
jb
daa
sub
mov
mov
rorl
xchg
enter
dec
and
outsl
movsl
dec
imul
push
add
mov
arpl
or
push
hlt
sub
fsts
arpl
movsb
sbbb
repz
push
cs
ja
jns
in
insl
fsubl
cli
push
sub
jg
fwait
test
push
nop
sahf
and
jbe
adc
sub
jmp
shlb
or
add
cmp
push
xlat
xorl
mov
fildll
inc
popf
neg
lret
test
sub
movsl
out
mov
jle
stos
jnp
scas
add
mov
movsb
sub
dec
stc
xor
cli
jge
jg
fcoms
inc
sub
in
into
das
hlt
in
adc
push
repz
push
and
out
jecxz
loope
mov
testl
mov
hlt
cs
add
mov
sarl
sub
clc
xchg
add
lcall
cltd
push
les
jmp
ljmp
hlt
sahf
xchg
push
and
ljmp
adc
clc
lahf
push
sbb
ljmp
push
adc
aam
sarl
sub
and
xchg
lods
and
jg
mov
or
xor
xchg
in
test
adc
add
daa
jbe
sub
test
sub
enter
pop
sub
and
xor
movsl
lock
dec
lahf
pop
xor
push
xor
rcl
or
push
push
data16
repnz
icebp
add
push
in
daa
jo
xor
lock
mov
xchg
sbb
jmp
daa
scas
adc
orl
sub
shrl
and
xor
and
xor
push
jmp
xchg
adc
inc
push
push
daa
sbb
mov
and
bound
push
xchg
je
sbb
repz
pop
sbb
or
jns
dec
decl
pop
push
ljmp
ret
das
sub
or
bound
aas
and
mov
loopne
aas
inc
inc
and
push
dec
push
in
sti
add
sbb
pop
out
inc
and
adc
pop
or
loope
ja
and
psubsw
xor
push
adc
push
cmpsb
js
popf
mulb
scas
ja
mov
inc
push
dec
and
nop
imul
jge
and
movsl
jo
out
mov
mov
mov
rcrb
test
sub
loop
or
cmp
add
adc
loop
aad
jecxz
push
adc
lcall
add
imul
gs
or
popf
testl
xchg
jbe
inc
je
and
repnz
jbe
add
mov
add
fnstenv
into
inc
mov
xor
pop
cli
push
das
or
ror
rorb
out
stc
xchg
push
pop
pop
scas
lcall
push
decb
imul
sbb
add
push
mov
cld
int3
addr16
xchg
push
dec
jle
les
es
add
adc
pusha
mov
dec
mov
add
hlt
xlat
movsl
mov
adc
dec
add
and
sbb
xor
adc
shl
shll
pop
inc
test
mov
push
ret
push
pop
inc
xchg
sub
arpl
fsubs
add
dec
rcrl
fisubrs
std
test
pop
add
push
push
lcall
not
rcl
in
nop
popf
ja
ss
in
mov
and
movsl
inc
imul
mov
outsl
xor
push
and
sbb
scas
dec
xchg
test
rolb
orb
add
sub
ja
lcall
ja
adc
mov
xchg
cmp
sbb
and
push
mov
test
adc
fstl
int3
or
push
pop
jns
aas
push
push
pop
mov
fadds
sub
sub
in
jg
adc
push
call
ret
lret
jecxz
arpl
add
mov
scas
mov
ds
lcall
mov
adc
jne
push
jb
scas
fs
lods
adc
mov
push
push
jl
mov
jmp
std
jne
jmp
pop
pop
stos
movsb
js
cwtl
repnz
mov
lret
push
pop
add
das
jmp
gs
jg
add
push
pop
gs
jmp
sub
xor
shll
mov
pop
pop
mov
dec
test
out
stos
adc
or
jno,pn
inc
repz
and
lods
adc
dec
fsubp
in
std
movsb
mov
pop
mov
lea
sbb
xor
js
and
in
daa
pop
mov
xchg
lret
jmp
inc
out
negb
stos
lret
faddl
addr16
mov
ret
movsb
add
movsb
xchg
push
scas
cmpb
adc
push
pop
dec
or
pop
or
add
andb
push
adc
cmp
mov
cmp
imulb
repz
lds
lods
mov
inc
xchg
pop
scas
cmpsb
nop
jp
inc
lods
jge
fmulp
pop
test
les
push
in
lds
push
inc
sub
cmp
je
mov
adc
clc
aaa
data16
xor
push
mov
or
dec
ret
sub
sti
add
inc
mov
hlt
sub
inc
inc
sti
mov
repz
sub
adc
pop
cltd
adc
xchg
mov
and
cld
push
pop
push
sub
inc
test
or
inc
shr
outsb
pusha
mov
mov
ret
jle
shlb
adc
mov
inc
dec
inc
or
ss
add
inc
movsl
repz
int
push
and
add
jmp
iret
inc
hlt
and
jo
push
sbb
adc
and
scas
rcr
mov
dec
adc
shl
push
aaa
add
sub
bound
dec
jbe
rcrl
mov
and
mov
notb
sar
ret
add
push
push
jg
and
cmp
adcl
pop
mov
addr16
icebp
adc
mov
cmpsl
sbb
das
xor
out
add
jecxz
xor
fisubrl
sub
add
add
addl
cmp
jp
xchg
mov
push
and
or
push
jb
add
lcall
clc
js
cltd
andb
jnp
sbb
data16
cli
shrl
clc
icebp
negl
mov
idivb
out
aas
or
cmp
or
mov
dec
pop
fs
jnp
lods
mov
punpckhbw
push
sub
ds
mov
mov
jge
push
pop
add
pop
ret
jns
je
add
push
mov
adc
pop
mov
notl
sub
stos
cmc
mov
ljmp
push
lods
lcall
jae
pop
lret
dec
stos
sub
inc
add
xor
sbb
lock
pop
ret
xchg
inc
xchg
leave
dec
in
inc
sbb
mov
xchg
push
arpl
push
sub
add
stc
inc
pop
orl
pop
mov
in
ds
cmp
out
xchg
mov
call
add
sarb
sahf
stos
cld
fsubs
je
je
adc
in
jmp
fistl
stos
cmp
jmp
mov
inc
xchg
adc
mov
sbb
leave
mov
lods
inc
orb
iret
repz
and
out
add
in
push
adc
push
mov
repz
xor
in
add
jge
adc
jbe
xchg
repnz
mov
dec
das
shr
sub
adc
add
mov
adc
mov
mov
xor
into
jge
repnz
push
sbb
lds
dec
xor
enter
adc
pop
push
jno
in
in
jge
sub
push
js
in
movsl
jb
pop
add
inc
mov
inc
cmc
add
popa
lahf
and
xor
pusha
sbb
adc
pop
jl
adc
or
pop
jl
xor
inc
sbbb
sub
js
and
pop
rcrb
or
jo
dec
or
sbbb
in
and
sub
repnz
adc
or
xchg
add
add
aam
push
pop
or
stc
stos
and
sub
sub
shrb
and
xchg
nop
xor
or
push
sahf
pop
mov
test
out
gs
dec
jns
inc
mov
pop
nop
daa
mov
arpl
or
mov
mov
loop
icebp
and
mov
and
mov
jge
clc
mov
js
pop
pop
mov
xlat
mov
in
mov
sub
cmp
stc
or
lahf
xchg
jns
dec
into
fst
cld
mov
in
cmp
mov
rep
push
mov
add
sub
sub
stos
ret
sub
xchg
pop
mov
inc
mov
je
jb
or
rcrb
push
mov
into
add
xor
push
jmp
dec
ret
xchg
mov
push
push
sub
in
fidivrl
cmpsl
notb
push
pop
xlat
mov
enter
inc
rol
jl
xlat
in
or
jmp
add
push
pop
test
add
in
jecxz
lods
jne
out
pop
sub
xor
and
mov
inc
scas
in
roll
fistl
out
or
leave
jge
inc
sub
xor
jmp
xor
or
xor
fcoms
ffree
ljmp
nop
lods
pop
hlt
push
stos
call
test
mov
jl
ret
or
sbb
addl
add
roll
or
mov
sar
inc
or
push
dec
inc
enter
test
or
sbb
xchg
js
xlat
or
inc
roll
push
mov
lcall
mov
sbb
push
dec
dec
mov
push
mov
xor
or
bound
movsl
sub
lock
jle
pop
stos
sub
mov
jmp
xchg
out
aas
mov
ljmp
pop
repz
fsubrp
xchg
mov
mov
dec
loope
inc
sub
mov
sahf
adc
orb
xor
je
adcb
popf
clc
pop
rolb
pop
shl
dec
push
cltd
mov
repz
sbb
xchg
idiv
push
inc
mov
push
imul
xor
or
xchg
call
push
or
jne
pop
xor
dec
addr16
loopne
push
stos
mov
stc
xor
pop
jb
dec
in
shlb
pop
mov
leave
adc
test
negl
loopne
pop
cli
or
out
adc
jns
lods
jns
cmp
adc
lods
lret
in
cltd
dec
push
movsl
jno
fwait
and
dec
in
loopne
mov
pusha
mov
push
mov
jge
add
inc
jno
insb
fsubr
inc
pop
dec
mov
push
ja
sub
jmp
jmp
sbbl
imul
inc
xchg
in
jne
dec
es
ficomps
lock
pop
addr16
jne
cld
push
pop
sub
or
dec
data16
and
or
xchg
adc
sarb
test
incl
mov
dec
addb
test
je
ljmp
inc
cltd
jg
and
enter
inc
fimull
add
loop
sub
adc
pop
and
scas
insb
sub
std
xor
mov
or
cmp
mov
out
in
popf
fcoms
jb
test
pop
pop
js
aaa
clc
pop
sub
pop
or
loope
loopne
adc
pop
add
sbb
and
push
sub
mov
cmp
invd
pop
gs
shlb
push
cld
daa
xchg
add
ret
out
cmp
mov
movsl
inc
mov
xor
push
cmp
push
insl
imul
or
jmp
bound
stc
in
test
int
aam
pop
mov
adc
aam
push
xor
inc
sbb
push
sub
ret
dec
pop
push
and
fdivrs
sub
xor
popa
mov
sub
xor
push
imul
mov
cwtl
sbb
bnd
dec
add
xchg
jbe
daa
push
neg
arpl
cmc
mov
pop
pop
loopne
dec
fs
add
pop
adc
jne
rcrb
inc
mov
ret
and
jbe
inc
xchg
mov
jmp
sti
fisttps
adc
loop
push
push
xor
jg
add
and
out
sub
jmp
out
add
and
push
or
pusha
xor
dec
popf
jne
testl
pop
push
and
loopne
popa
mov
jp
sub
push
mov
push
pop
add
or
pop
testl
or
shlb
testl
stc
mov
lret
ret
rcrl
push
inc
cwtl
add
int3
es
test
mov
hlt
jg
mov
xchg
pop
inc
push
pop
pop
stos
xchg
insl
pop
sub
lcall
cmp
jbe
pop
mov
inc
rcr
lea
les
sub
cs
dec
add
pop
ljmp
scas
icebp
xor
sub
mov
xor
mov
push
mov
jmp
fldl
jo
add
adc
pop
lret
imul
jge
cld
or
ret
cmp
popa
cmp
add
leave
jae
les
cmpsl
out
or
push
mov
mov
xor
inc
sbb
popa
xor
adc
sbbb
cvtps2pi
xchg
dec
inc
imul
mov
pop
xchg
and
fcoms
mov
sub
test
out
test
sbb
fcoms
sub
xchg
and
and
pop
out
nop
sbb
data16
xchg
push
pop
lods
fsubs
jns
lahf
or
mov
fdivl
pcmpeqd
push
mov
rorl
cs
mov
adc
popa
add
cmp
test
push
push
jo
hlt
add
sbb
pop
add
xor
arpl
sbb
and
mov
mov
push
nop
in
or
inc
fcompl
aad
jp
neg
test
daa
xor
ja
pop
push
mov
dec
or
add
inc
cld
ja
mov
shr
and
fmul
inc
outsl
sub
mov
test
insl
push
fidivs
and
sub
sub
push
pop
lea
cli
notb
sbb
out
or
pusha
in
repnz
outsb
push
or
daa
add
sub
movsb
mov
imul
jae
and
pop
sub
gs
movsl
out
mov
mov
and
mov
cmp
xor
sahf
sub
adc
aas
scas
cmp
xor
push
movsl
xchg
aas
aam
out
in
push
mov
sub
xlat
dec
rorl
jbe
jno
inc
lret
je
cs
sbb
xchg
or
into
popf
aam
out
les
pop
xchg
cmp
and
cmp
je
mov
movsl
dec
cli
adc
out
enter
adc
push
push
ljmp
xchg
inc
scas
and
and
lahf
loop
inc
xchg
pop
addb
sub
mov
sub
jle
data16
cmp
pop
cmc
xchg
jp
imulb
dec
pop
stc
mov
xlat
jp
and
int3
cs
clc
inc
scas
mov
sub
mov
pop
sub
int3
add
es
xor
loope
mov
rcrl
inc
dec
outsl
and
push
arpl
inc
ljmp
adc
xchg
test
add
lahf
and
rcl
adc
pop
or
or
test
sub
inc
lods
je
dec
push
fucomp
cmp
pop
adc
sahf
stos
aas
sub
push
and
add
push
dec
imull
stos
rcll
jl
pop
and
ret
pop
ds
mov
pop
movsl
rcll
add
scas
into
lock
sub
and
mov
jmp
or
in
xchg
or
and
inc
push
lock
lret
into
dec
cmpsl
out
pop
stos
xor
push
je
movsb
and
lds
cmp
test
and
cmpsl
daa
pop
xlat
enter
push
pop
movsb
xor
push
push
stc
pop
add
mov
movsb
insb
iret
push
adc
loope
or
dec
and
scas
pop
or
outsl
dec
or
inc
subb
frstor
rorb
push
test
xorb
repnz
or
pop
dec
jl
dec
xchg
ja,pn
adc
je
mov
jne
cmp
jle
inc
nop
mov
mull
scas
push
outsl
push
mov
sub
cmpsb
sub
loope
sub
jbe
add
sti
jle
into
xor
pop
ret
xchg
jae
jl
xchg
mov
orl
dec
mov
jg
cwtl
lret
xorb
fmul
pop
xor
push
push
add
mov
shrb
sub
pop
loopne
cltd
mov
dec
and
cs
xor
fisubl
lret
inc
roll
pop
loope
call
js
xorb
test
rolb
enter
push
pop
push
push
mov
mov
add
push
jb
arpl
insb
or
shl
fistpll
add
jmp
arpl
sbb
test
mov
mov
pop
and
pop
pop
or
rorb
mov
sbb
std
call
pop
cltd
pop
out
cmp
out
stos
lock
pop
xchg
adc
adc
jno
cmpsl
iret
xor
call
push
adc
jl
xor
hlt
cwtl
roll
pop
cmp
and
or
popf
sbb
sub
xchg
es
pop
pop
dec
xor
pop
dec
movsb
bound
xchg
or
cmp
repnz
aaa
mov
loopne
dec
dec
dec
sbb
push
out
inc
jg
filds
es
addb
cmp
xor
lret
mov
xor
in
movsb
jge
ret
push
lcall
mov
into
in
xchg
inc
imul
pop
pop
pop
pop
cmc
jo
push
lds
call
daa
add
mov
jl
flds
arpl
scas
inc
push
add
jmp
sahf
jge
in
cli
mov
mov
repz
lock
lds
out
xchg
sbb
jns
jne
fmull
xchg
loope
cmp
add
stc
dec
ljmp
fstpl
imul
inc
in
stos
fcom
push
idivl
mov
sbb
or
or
mov
or
inc
mov
and
xor
add
jnp
pusha
adc
pop
std
clc
test
lcall
cli
adc
orb
and
daa
push
xor
or
outsl
cld
xor
or
mov
jp
js
sub
add
rcr
jne
pop
push
ja
mov
pop
hlt
loopne
jmp
iret
enter
push
adc
pop
dec
mov
cmp
mov
rolb
add
sti
dec
inc
dec
lods
mov
es
jmp
xchg
inc
sub
ss
out
inc
push
and
adc
cmp
mov
inc
scas
repnz
scas
and
ljmp
pop
pop
jl
dec
shl
add
inc
add
jmp
mov
scas
fisubrs
pop
cli
icebp
js
push
sub
jo
enter
fiaddl
or
inc
xchg
jae
pop
sub
adc
fdivp
cltd
pop
lea
or
cld
pop
movsl
sbb
push
mov
das
fisubrs
jns
jmp
test
mov
jnp
and
or
mov
cld
aas
lods
mov
cltd
push
add
shr
fcompl
ficomps
add
xor
push
js
inc
dec
mov
out
sub
mov
pop
xchg
sub
or
adc
push
out
push
jl
dec
test
sarl
xlat
or
pop
xchg
shlb
mov
sub
pop
ja
leave
sub
aam
pop
repnz
inc
jb
stos
sbb
shr
lods
or
xchg
fimull
aas
popa
cmp
repnz
xlat
stos
cmp
idiv
xchg
je
popf
ret
pop
sbb
mov
rclb
mov
jmp
add
orb
movsb
faddl
mov
aam
dec
adc
sbb
or
push
push
out
std
dec
add
jo
and
sub
call
cmpsl
inc
mov
push
out
jg
dec
cmp
jle
push
mov
xchg
scas
push
mov
into
ret
or
sub
ret
subl
stos
mov
shrb
xchg
add
lret
arpl
rorl
push
aaa
pop
pusha
and
rcl
sub
sub
aas
mov
mov
mov
pop
roll
xchg
sub
or
loope
roll
xchg
mov
sarl
inc
in
and
xor
adc
mov
lds
push
sti
sbb
sbb
popf
mov
mov
pushl
pop
mov
adc
addb
jb
pop
jl
outsb
call
jmp
adc
push
and
ret
push
bound
mov
loop
add
jno
mov
add
fmuls
sub
or
add
jmp
push
ret
dec
jg
in
in
lea
pusha
sub
ficompl
fcomip
fwait
lds
push
repz
stc
push
sti
out
cmp
push
inc
adc
lret
adc
call
adc
addb
add
lods
add
inc
sbb
outsl
inc
lock
jp
mov
pop
in
pop
add
lret
xor
stc
adc
or
nop
cmp
or
insl
sub
inc
cmp
mov
adc
test
mov
xchg
dec
pop
add
adc
dec
mov
pop
pop
pop
fimuls
xchg
mov
pop
fdivs
push
push
push
and
repz
mov
jle
mov
mov
cld
push
pop
fs
inc
aam
push
jl
imul
inc
ds
push
movsb
sub
aas
sbb
sub
scas
adc
popf
and
or
pop
add
rcrb
sub
idiv
pusha
and
es
iret
cwtl
mov
in
xor
xor
test
popa
out
or
pusha
jb
aas
sub
dec
lods
inc
movsb
mov
enter
mov
movsl
je
clc
jmp
int
pop
push
add
add
pusha
repz
dec
mov
aam
pop
fsubrs
in
pop
sbb
jne
imul
mov
dec
or
clc
push
sub
cmp
stos
cwtl
fbld
sbbl
jecxz
ljmp
jmp
jo
pop
cs
add
je
jbe
mov
sbb
sub
or
xchg
add
mov
add
adc
or
sub
pusha
nop
dec
sub
lods
dec
push
decl
out
push
pop
cmp
sub
dec
and
fisttps
call
add
jns
cltd
pop
outsl
lods
rolb
rcrl
jb
repnz
fcoms
cmc
jnp
or
or
addr16
inc
sub
pop
cmp
das
cmp
mov
rcrb
loope
enter
and
mov
dec
mov
jmp
mov
mov
in
push
ja
inc
and
notb
jmp
cmp
mov
not
in
or
cli
mov
or
cli
pushf
push
mul
push
sub
xchg
sbb
fdivrs
jmp
jne
mov
jno
popa
push
mov
push
ret
add
pop
js
cmp
scas
and
data16
sahf
outsl
cmp
decb
shll
pop
cli
xor
pop
divb
adc
cmpsl
imul
inc
sub
and
ja
je
jmp
adc
out
dec
mov
leave
test
subb
add
cmp
mov
icebp
mov
jecxz
or
jmp
xor
and
roll
ret
jno
mov
mov
sbb
pop
push
or
hlt
pusha
or
pop
shl
add
push
push
jbe
nop
xor
test
cmpsb
mov
pop
sub
sub
out
add
fwait
jg
aas
and
js
add
xlat
nop
inc
pop
dec
cltd
sub
jno
adc
jle
mov
pop
call
xchg
adc
jns
jb
inc
dec
xchg
insl
mov
push
loopne
iret
cltd
pop
dec
jbe
test
mov
daa
add
enter
shrl
test
sbb
das
sbb
imul
or
add
clc
sub
fdivs
lods
les
inc
inc
jge
xchg
ds
scas
andb
mov
push
inc
js
jp
jbe
mov
cmp
addl
push
add
push
dec
dec
push
sub
or
pop
add
out
dec
mov
test
les
xor
xchg
xrelease
push
mov
xchg
outsl
xor
sti
popa
xlat
pop
sub
test
ss
adc
pop
or
mov
rolb
out
jb
pop
out
mov
jl
dec
loop
pop
out
pusha
mov
jae
cs
xlat
sub
testl
loope
sar
test
aas
inc
cmp
lea
mov
je
rcrb
lods
pop
decb
jno
out
fimuls
cmpl
add
icebp
dec
dec
jmp
jp
xlat
or
hlt
hlt
sub
stc
adc
stos
stos
enter
lahf
inc
push
inc
mov
add
dec
sub
push
and
mov
mov
stos
aad
mov
incl
inc
cmpsb
sbb
lret
pop
pop
push
sbb
xor
jl
out
adc
into
dec
mov
xchg
mov
sub
mov
adc
adc
andl
or
pushf
cld
mov
sti
mov
loopne
push
push
push
jb
andl
mov
cmp
xor
inc
inc
sub
gs
ret
jmp
lock
fldenv
adcl
mov
cmpsl
mov
xlat
xlat
mov
out
mov
inc
das
or
cmp
inc
mov
lahf
jae
push
sub
sub
fsubp
and
mov
xchg
or
test
push
sub
xchg
pop
dec
jo
mov
cs
pop
and
gs
push
jge
adc
add
push
les
in
cli
lods
imul
mov
mov
xor
bound
lret
imull
test
xor
jmp
dec
shll
add
sbb
cmp
pop
mov
sub
pop
inc
in
wbinvd
jle
daa
add
push
add
jmp
jb
pop
push
mov
cwtl
sub
mov
lods
sahf
pop
inc
std
jne
jbe
pop
test
and
cmpsb
shr
adc
or
adc
les
lret
stos
inc
push
jmp
pop
mov
gs
fnstsw
daa
and
dec
pop
fnstenv
push
mov
iret
mov
dec
lds
and
test
inc
sub
aad
mov
lret
jae
or
inc
mov
out
out
and
add
jnp
add
push
mov
xchg
jmp
int3
insb
fnsave
fidivrl
mov
rorl
dec
inc
sahf
jns
bound
lods
ret
add
push
sbb
sub
or
jno
adc
jge
scas
dec
fiaddl
fldcw
sub
aaa
test
cmp
push
xchg
add
add
aas
adc
xchg
scas
adc
dec
inc
incl
mov
mov
xchg
nop
push
jmp
inc
inc
and
xor
fnstenv
mov
add
nop
push
push
mov
loopne
orb
fwait
xchg
rcrb
pop
inc
dec
inc
popf
out
subl
add
xor
adc
or
inc
inc
cli
dec
xchg
dec
bound
or
mov
jle
ret
cmc
imul
xchg
mov
jge
in
iret
and
inc
pusha
mov
jg
mov
and
add
pop
push
push
es
jge
jnp
adc
push
and
dec
ja
es
mov
xor
aas
fldl
mov
cmp
mov
xchg
xchg
sub
xor
inc
and
lods
mov
jl
cmp
pop
mov
loopne
aam
dec
das
das
adc
orb
mov
aas
int3
and
fadd
cs
in
cmpsl
sbb
pop
stc
movsb
push
and
adc
sub
addr16
jo
push
and
inc
rorb
xchg
shrb
sub
hlt
fs
out
pusha
pop
scas
cmp
xor
fdivrs
lcall
mov
movl
decl
ret
jmp
mov
dec
in
aam
das
dec
adc
add
add
push
pop
cmc
dec
mov
push
add
inc
sub
push
imul
sbb
nopl
pop
xor
sub
or
mov
mov
ret
pop
pop
and
cmp
xor
cmpsl
pop
mov
adc
jp
aas
imul
and
arpl
or
or
dec
filds
and
cmpl
lea
daa
jae
push
push
jmp
fists
shll
jecxz
loope
testb
sbb
in
sar
or
lcall
repz
dec
loop
xor
jg
add
shll
sub
pusha
into
ss
int
call
jns
je
daa
sahf
ds
sub
sub
sub
cmp
xchg
out
das
sub
les
jmp
inc
adc
rol
js
insb
jmp
cltd
and
add
cmp
mov
arpl
sub
test
lret
mov
sub
add
pop
mov
jmp
or
pop
sbb
cmp
push
fadds
adc
lahf
loop
jne
fists
mov
pop
mov
out
mov
mov
call
in
jbe
leave
or
es
sti
cmp
jl
mov
lods
cmp
add
ret
pop
mov
push
dec
xchg
mov
in
outsl
test
pop
icebp
sub
xchg
lea
dec
sub
jo
push
and
dec
cmp
fstl
mov
addl
sub
call
js
hlt
psubsw
stos
jns
jo
fstl
jp
add
pop
daa
js
mov
mov
pop
xchg
jmp
push
mov
mov
jo
mov
in
bound
or
or
xchg
push
mov
out
movsl
bound
mov
jle
push
adc
test
push
insl
push
mov
subb
adc
inc
les
xchg
subb
mov
jmp
daa
sub
jle
xorl
out
cs
pop
mov
shrb
adc
dec
test
adc
sbbb
mov
ret
fucomip
jp
dec
or
repnz
iret
inc
call
mov
pop
ret
jge
rorl
add
fs
out
in
sbb
adc
pop
adc
inc
inc
sub
dec
and
les
xor
in
repz
mov
push
jmp
lret
mov
movsl
xor
loop
mov
fldl
dec
fmulp
test
dec
lret
cmp
xlat
jmp
lret
lea
in
jb
and
cmp
dec
mov
pop
lahf
js
repnz
push
mov
cmp
adc
mov
mov
cmpsl
add
ljmp
pop
add
push
andb
sub
fiaddl
sub
movsl
jne
addb
fdivrp
bound
add
stos
fstps
add
cld
push
push
aaa
push
xor
push
pop
push
sub
jmp
push
stc
out
pushf
mov
call
cmc
adc
xor
divb
dec
fyl2x
push
in
cld
cli
daa
aas
inc
push
push
jl
in
scas
fadds
outsb
or
dec
mov
lock
jo
mov
xor
stos
mov
aaa
std
jo
sbb
add
clc
dec
mov
mov
inc
das
cli
push
sbb
popf
fldcw
inc
cmp
test
sbb
pop
push
jmp
pop
xlat
in
jle
xchg
mov
sub
and
ret
pop
loope
push
lahf
mov
dec
adc
sub
push
imul
push
mov
dec
jns
push
in
jecxz
xor
add
jmp
out
dec
out
sbb
xlat
loope
add
adc
pop
pop
fimuls
test
adc
push
bnd
or
movsb
inc
mov
ret
lahf
shll
inc
add
sub
push
fimull
mov
jmp
neg
push
mov
cli
into
adc
sub
mov
data16
mov
add
fs
mov
dec
jmp
add
add
subb
rorb
adc
jno
int3
in
sub
fucomip
jne
add
inc
lea
sub
and
cwtl
cmp
cmc
loopne
or
test
push
add
out
shl
xorb
jo
xor
jecxz
les
cmpsl
adc
lods
and
jo
inc
xlat
add
mov
jbe
xor
test
push
dec
sub
add
pop
xchg
inc
int
pusha
add
rcrb
cmp
adc
jne
pop
pop
mov
xchg
push
insl
push
mov
sub
adc
cmp
and
inc
int
pop
stos
xor
adc
ja
sti
test
int
lahf
pop
xchg
nop
fisttpl
aad
push
fimull
shl
addb
mov
arpl
add
loope
push
jl
pop
aam
enter
cli
and
mov
test
and
ret
arpl
add
in
adc
sti
rorl
jbe
mov
cli
in
insl
push
pop
cmp
cmp
xor
in
pop
rorl
add
mov
xchg
test
xchg
dec
or
aam
xlat
sub
mov
call
loopne
and
and
ror
jecxz
sbb
sub
enter
xorl
enter
jl
mov
jle
xor
or
out
ja
mov
inc
xchg
loopne
pop
xchg
inc
mov
scas
jle
jns
outsb
pop
cmpb
xchg
shlb
fs
arpl
pop
adc
and
out
mov
add
ss
pop
adc
jnp
negb
sub
inc
test
sub
ds
sbb
pop
cmp
iret
bound
out
pop
pop
jno
and
sub
push
pop
sub
divl
and
pop
push
stc
push
idivb
push
mov
jmp
inc
pop
js
xor
fcoml
dec
ret
pusha
jno
add
mov
jge
in
sub
das
pop
push
dec
push
mov
and
add
jmp
stos
push
imul
divb
mov
dec
lret
mov
pop
push
fdivrs
rol
mov
add
pop
push
xchg
xor
cmp
add
ss
mov
out
fidivs
xchg
outsl
lds
push
jb
push
out
lods
call
or
bound
jg
adc
es
sub
inc
and
cmp
stos
mov
sub
jbe
es
push
jl
pop
scas
mov
xchg
ljmp
hlt
iret
loopne
push
jns
loopne
cmp
inc
orb
fcompl
jmp
mov
sarl
or
cs
ss
or
call
insl
add
inc
sbb
mov
imul
adc
dec
enter
lret
in
inc
add
dec
mov
loopne
inc
bound
dec
in
pop
pop
adc
ret
or
pop
cmp
xor
inc
popf
out
sub
add
push
in
or
popf
add
mov
sub
xchg
dec
xchg
add
aaa
or
subb
cmc
outsl
rorl
xor
or
inc
jne
mov
xor
xchg
pop
add
leave
bswap
cmp
out
sbb
ja
jo
jle
mov
add
mov
xor
pushf
std
pop
dec
popf
loopne
pop
and
sub
pop
or
je
ljmp
jge
mov
push
xchg
add
imul
aam
push
ja
fneni(8087
leave
pusha
push
or
outsl
stos
popa
xchg
dec
push
push
cmp
mov
loopne
push
push
sbb
sbb
xor
in
jne
stos
shll
cwtl
aam
cmp
aaa
push
add
lods
leave
into
pushf
fldcw
dec
and
inc
pop
jmp
leave
out
cs
jns
inc
mov
ret
bound
sub
adc
lret
add
sub
icebp
mov
sbb
xor
in
inc
or
cwtl
adc
pusha
fstps
mov
das
sbbb
pop
lds
ds
mov
adc
xor
int
dec
jg
int
out
and
pop
lds
cmp
push
fnstcw
inc
outsl
fistl
jnp
or
imul
xorb
inc
pop
ds
jbe
cmp
mov
jmp
leave
jo
fldl
pusha
sti
xchg
sbbl
outsb
add
rolb
mov
inc
cmpsb
cmp
jns
das
je
ret
ss
mov
pop
mov
pop
add
pop
mov
inc
leave
pop
pop
inc
outsl
scas
adc
adc
add
rorl
fucomp
clc
xchg
fcompl
mov
pop
inc
stos
pop
or
sbb
mov
pop
sbb
jmp
pop
mov
fsts
loopne
sub
mov
push
push
loopne
mov
jmp
je
sub
aam
ret
shrb
cmc
mov
dec
adc
cmp
popf
cmovno
or
adc
stos
dec
pop
mov
enter
adc
cmpsb
cli
fdivrp
addl
pushf
sub
adc
inc
leave
jmp
dec
add
pop
loopne
mov
sbb
mov
or
ja
ss
daa
mov
popa
mov
xlat
dec
xor
rolb
adc
das
mov
add
pop
sbb
and
pusha
imul
push
sti
add
nop
add
xchg
cmp
sub
pop
enter
int
adc
or
movsl
add
gs
jmp
inc
rolb
or
add
xchg
sbb
push
mov
sub
or
xor
outsb
xchg
sbb
mov
bound
lock
jns
push
push
xor
adc
andl
pop
push
stos
cmp
xchg
pop
adc
push
jge
imul
mov
repnz
outsl
push
sbb
scas
fsin
idiv
and
or
mov
xchg
sbb
push
pop
add
cmp
sbb
cmc
jle
popl
pop
pop
repnz
mulb
and
mov
dec
scas
xchg
not
xor
aas
inc
or
cli
mov
cmp
je
insb
ljmp
add
inc
xorl
jo
xor
add
mov
cmpsl
xchg
xor
pop
cmp
sub
es
rorb
and
aas
lock
or
in
jge
mov
pop
jno
leave
add
test
movsl
inc
push
imull
imulb
data16
sub
das
jmp
adc
and
pop
test
pop
stos
sarl
aas
add
and
add
cmp
imul
or
adc
adcb
xor
popa
in
icebp
or
fmulp
push
int3
fistpll
iret
adc
jmp
push
mov
fs
js
mov
adc
lds
test
popf
sub
or
cmp
popf
adc
push
orl
test
mov
xchg
aas
xor
inc
xor
mov
pop
ds
cmp
insl
stos
mov
inc
xorb
jmp
dec
fstpt
js
mov
and
in
jge
jno
xchg
enter
adc
dec
in
dec
test
aad
mov
lea
das
mov
fadds
adc
cmp
cmp
pop
jge
or
mov
xor
push
ds
and
scas
xchg
loop
push
cld
mov
ret
push
out
mov
cmp
xchg
and
lock
xor
into
clc
lret
fmuls
std
psrld
cmp
sub
push
sbb
out
inc
aad
pop
pop
mov
push
sub
sub
adc
xchg
jno
bound
ficoml
aas
ficoml
jecxz
int3
aam
popf
stos
inc
xchg
add
push
push
add
out
out
jp
adc
mov
xchg
ds
pop
xor
mov
sbb
or
xchg
addr16
mov
cmp
mov
lahf
out
pop
xor
aas
test
jae
dec
shlb
cli
cmp
aas
sub
rorl
sbb
andl
lock
call
ss
in
pop
add
flds
mov
iret
jmp
int
mov
push
or
sub
cs
sti
cmpsb
ds
push
lods
jne
pop
push
mov
jle
sub
and
gs
sub
push
out
mov
sub
cmp
sbb
test
adc
and
roll
icebp
std
inc
or
ficoml
sub
dec
fs
xchg
stos
jo
jmp
xchg
mov
out
lea
jl
les
xor
jl
dec
fs
xlat
gs
fldcw
mov
andb
mov
icebp
push
push
sub
jmp
icebp
in
mov
mov
shrb
push
inc
rcrb
icebp
sbb
aam
jnp
dec
cmc
mov
pop
xor
jmp
inc
imul
mov
sbb
fdivs
mov
test
mov
into
sbb
arpl
jbe
movl
jno
xor
adc
fmull
ret
popl
nop
and
push
jg
lock
mov
subl
mov
aad
mov
pop
imul
lds
inc
xchg
rorb
or
or
adc
add
xchg
sti
dec
dec
rclb
pop
push
cmpsb
out
outsl
sbb
fistps
enter
pop
push
mov
add
add
subb
mov
sbb
pop
push
or
mov
mov
push
cmc
or
cmp
lods
in
popf
dec
push
hlt
lods
jae
pusha
int
push
inc
jmp
js
xchg
popf
pushf
mov
mov
push
push
mov
jmp
outsb
sbb
pop
ret
jle
mov
ja
out
xchg
dec
testb
repz
or
das
mov
movd
fstps
scas
adc
popa
push
xor
and
sub
leave
dec
sbb
adc
push
or
jge
mov
pop
add
lret
pop
sbb
cmp
cmc
inc
adc
mov
adc
xchg
mov
stc
sti
fmull
dec
cmp
aas
das
jmp
loop
xor
mov
and
mov
and
test
out
add
sub
aad
pushf
dec
pop
insl
arpl
nop
sub
inc
cmp
imul
push
pop
data16
in
or
sub
bound
push
scas
adc
repz
not
cwtl
aas
add
and
adc
iret
xor
aam
push
fs
rcrb
mov
xchg
shrl
mov
jmp
mov
or
dec
sub
push
mov
shr
pop
push
add
or
push
mov
lods
xor
mov
and
pop
pop
jns
cmpsb
mov
xchg
cli
jmp
xlat
pop
fisttpl
add
sub
mov
ror
sbb
daa
repnz
or
push
pop
fidivs
or
lea
add
js
stos
pop
pusha
add
inc
xor
sub
negl
loopne
mov
inc
adc
xor
and
ljmp
int3
jle
adc
adc
roll
push
xchg
sub
nop
sbb
sub
ljmp
or
jbe
mov
mov
sbb
xor
fdivr
and
cmp
dec
push
lret
jl
push
and
jmp
ja
and
jno
push
jne
adc
lods
push
dec
out
xor
repz
and
add
mov
test
mov
lahf
add
out
pusha
adc
sub
cmp
mov
clc
mov
jmp
jmp
stc
push
inc
xchg
or
fstps
or
or
inc
push
pop
das
cmc
rolb
jp
sub
jge
lcall
push
shll
xor
or
cmp
add
xchg
fwait
mov
es
and
push
cmp
cli
mov
cli
xor
push
adc
add
mov
xor
test
pop
mov
pop
dec
pusha
xor
dec
addb
jge
add
mov
stos
test
push
mov
pop
cmp
or
adc
mul
push
push
dec
cmp
in
fs
push
and
push
ja
and
push
mov
sahf
mov
scas
jp
and
daa
cmp
cmc
popf
pop
dec
cmovbe
clc
fisubl
add
sarl
shll
push
mov
fsubrl
push
and
repz
aad
pusha
push
fistl
inc
dec
jmp
mov
add
push
test
mov
xlat
adc
stos
push
int
hlt
cld
pop
je
add
dec
fucomip
cmp
shll
mov
fsubl
imul
cmpsb
sbb
aas
nop
cmpsb
das
xor
pop
jle
add
xor
in
daa
daa
add
aam
add
popa
and
sbb
xchg
jne
outsb
fwait
pop
int3
cmp
push
stos
lcall
pop
sub
adc
fs
ss
add
jg
jle
push
xchg
test
and
dec
enterw
mov
pop
lea
lock
scas
or
add
aad
out
cld
adc
add
call
dec
pop
xor
xchg
cwtl
or
andb
push
ds
and
jmp
iret
xchg
std
sti
xor
in
xor
mov
scas
add
adc
pop
push
push
mov
sbb
jmp
or
jg
lcall
mov
lds
inc
jge
ret
sub
mov
addl
sub
lock
add
mov
enter
les
cmp
fs
inc
inc
orb
inc
daa
inc
and
testl
ret
daa
inc
dec
js
ja
xor
or
sbb
add
mov
mov
jp
or
pop
push
mov
mov
jg
mov
mov
mov
mov
pop
paddb
lret
test
jne
or
movsl
sub
xchg
mov
lret
pusha
push
fisttps
adc
jnp
lret
out
gs
cwtl
iret
jge
xchg
inc
pushf
inc
inc
mov
enter
add
xchg
xlat
fsubs
cs
das
push
push
inc
push
repz
movsb
sbb
clc
call
and
cli
mov
xor
adc
sub
addb
fadds
and
mov
pop
xor
aaa
and
inc
in
neg
xlat
or
inc
mov
shr
psubq
inc
pop
push
sub
movsl
js
xchg
aad
mov
cld
aaa
test
stos
xor
cmpsb
push
sub
xchg
push
mov
aas
mov
sbb
scas
imul
mov
and
push
mov
lds
ljmp
xchg
test
push
or
jle
fldl
and
jne
shl
pop
rclb
mov
pop
insl
jle
sbbl
iret
test
inc
inc
clc
rorb
xchg
lret
and
pop
jp
sub
and
ret
fcmovb
movsl
test
push
cmpsb
or
mov
add
dec
xor
xor
leave
or
dec
mov
xor
xchg
das
call
scas
mov
aas
add
outsl
shr
push
je
and
cmp
stos
popa
pop
pop
add
sub
shll
push
mov
adc
fucomp
push
jecxz
fdivs
adc
mov
mov
pop
dec
in
push
sub
or
pop
inc
lret
loopne
out
adcb
adc
mov
inc
or
pop
cmpsb
and
add
sbb
scas
jge
loop
adc
lea
xor
jns
cmpb
sarb
xor
outsl
cmc
fwait
lret
and
dec
add
dec
add
hlt
lcall
inc
mov
pop
and
add
sbb
or
movsl
adc
movsb
pop
rorb
repz
or
xlat
test
or
in
es
sub
popf
ret
outsl
daa
imul
xchg
hlt
ret
or
sub
and
add
dec
rolb
and
mov
jns
jmp
fdivrs
adc
in
nop
in
sbb
outsl
mov
push
mov
push
int3
pushf
std
fldenv
push
repz
mov
sub
dec
stc
pop
pop
xchg
mov
adc
popf
pop
pop
adc
negb
iret
repnz
adc
jmp
push
push
mov
outsb
sub
jmp
lods
jle
in
test
scas
fsubl
dec
or
pushf
mov
ljmp
ret
jmp
repz
cmp
das
in
icebp
jmp
stos
repnz
sub
insl
lock
sbb
pop
sub
adc
xor
pop
and
mov
add
adc
adc
mov
stos
xor
sbb
push
pop
adc
adc
cmp
pop
add
sbb
adc
lds
mov
jg
jge
and
gs
xor
pop
lock
cmp
fnstcw
add
jmp
cmpsl
dec
sub
test
mov
or
mov
pop
push
mov
or
xchg
cmp
inc
lods
and
sub
nop
or
add
pushf
fwait
xchg
shlb
and
or
mov
insl
ret
fmulp
dec
stos
mov
jg
or
pusha
add
and
or
mov
push
push
mov
in
clc
sub
jle
jp
sub
push
push
or
pop
push
pop
mov
stos
jl
or
sbb
and
cmp
jg
xchg
out
or
push
jo
add
push
or
jae
je
xchg
imul
lock
inc
lahf
push
pop
sarb
xchg
sbb
push
jmp
adc
fwait
inc
jp
xchg
das
mov
ret
push
or
mov
xchg
std
mov
cmove
inc
gs
mov
xchg
adc
psrad
jmp
insl
xor
lret
out
stos
sub
clc
hlt
aad
sti
mov
jle
in
rorl
cmp
adc
ret
pop
xchg
je
enter
call
mov
cmp
std
jecxz
dec
call
inc
push
or
xchg
or
push
repz
xor
incb
pop
mov
xchg
dec
mov
mov
adc
fwait
xchg
cmp
inc
pop
jmp
test
or
cmp
cwtl
lods
nop
sub
dec
mov
xor
dec
mov
sub
add
push
dec
lret
pop
jmp
jmp
dec
pop
pop
mov
pop
or
arpl
movsl
jno
pop
mov
inc
or
add
inc
pop
pop
lcall
jge
nop
jnp
jbe
sbb
sub
shlb
sub
jno
pop
shrb
jo
mov
filds
and
mov
adc
mov
ljmp
xchg
pop
add
jmp
xor
sti
jbe
cwtl
jns
jmp
divl
push
pop
leave
or
mov
dec
in
xchg
mov
jge
ret
add
xor
mov
jg
mov
push
mov
push
mov
shl
jmp
push
push
jb
pop
push
jno
in
lds
add
jns
cmc
dec
and
fists
dec
xor
adc
inc
ds
fmul
jp
xchg
fdivrl
das
aad
pop
shl
stc
and
push
ficoms
add
cmp
or
mov
lret
lods
out
adcl
pop
push
and
sub
cltd
les
or
push
xchg
cli
cmp
add
mov
sub
dec
je
cmpl
out
push
cmp
sub
mov
sub
and
mov
loope
inc
aas
sub
leave
mov
divb
jmp
jl
xchg
or
jo
sub
pushf
pusha
and
jp
dec
inc
jmp
and
xchg
cwtl
in
mov
dec
mov
sub
push
jnp
xor
cltd
leave
sbb
adc
push
pop
jge
jne
cld
pop
mov
and
jno
js
push
push
pop
lds
jg
loop
lds
aaa
addb
xor
scas
pop
out
jl
lea
mov
pop
mov
js
or
pop
ret
aaa
jne
mov
sub
sub
lock
jns
mov
imull
icebp
jg
enter
js
sbb
cmpsl
add
cmp
iret
scas
and
pop
add
inc
iret
div
in
fstl
sbb
movsl
inc
aas
add
push
test
push
mov
xchg
xor
outsl
loop
mov
das
push
cld
fwait
pop
sub
nop
xor
out
fldl
adc
jb
jg
push
out
or
insb
out
psubsw
adc
lds
sub
pop
push
out
pop
push
sbb
adc
add
mov
subl
test
leave
test
icebp
pop
cmp
fists
pop
mov
in
sarb
sbb
cld
clc
bound
pop
pop
push
sbb
pop
mov
jp
mov
xchg
lahf
cmp
pop
les
fstl
iret
fwait
mov
jmp
or
and
ja
in
andl
aad
adc
fwait
jmp
mov
xchg
dec
stos
sub
push
mov
cmp
sbbl
ljmp
push
add
or
imul
xchg
inc
lahf
add
jmp
pop
lahf
outsl
addr16
stc
into
and
cmc
leave
cmpsb
push
cmpsb
sub
inc
xchg
pop
outsl
xchg
clc
xor
sub
pushf
imul
add
in
cmpb
loope
cli
and
mov
pop
or
xor
mov
dec
push
add
inc
test
cmp
mov
mov
xorb
dec
jb
fmuls
es
cmpsb
repnz
inc
hlt
and
mov
and
sub
jmp
mov
mov
add
push
scas
and
ret
pop
cmp
pop
lock
and
jg
or
shlb
dec
pusha
loope
sbb
repz
aam
pop
mov
rorb
pop
mov
das
insb
cmp
lahf
in
adc
inc
lods
stos
add
pop
jo
push
jge
loop
daa
ja
fcompl
rorl
dec
inc
mov
push
lods
out
jb
pop
clc
push
mov
add
pop
add
int3
daa
or
xlat
shlb
cltd
sub
popf
cmp
mov
push
pop
dec
xlat
xchg
daa
lahf
jl
js
pop
adc
jno
sti
push
pop
pop
out
adc
cmpsb
and
loop
adc
int3
mov
data16
ficomps
popa
test
pop
adc
mov
mov
mov
push
sub
sub
ljmp
xchg
aaa
mov
popa
adc
adc
sti
loop
fmuls
stos
xchg
or
mov
jg
fs
adc
dec
inc
lea
add
jb
and
int
hlt
dec
loope
jns
test
andl
ja
jge
cmp
inc
hlt
inc
mov
or
scas
out
les
adc
movsb
or
pop
push
dec
je
xor
and
loop
pop
je
sbb
sub
popa
cmp
and
sbb
loop
jno
mov
sub
arpl
pop
pop
push
push
jmp
push
push
mov
adcb
jb
scas
xor
loope
lret
xorl
xchg
shrl
ljmp
sarl
in
adc
movlps
mov
cld
pushw
add
les
xor
pop
mov
pop
je
add
sarb
sbb
sbb
fnsave
scas
psubq
dec
iret
pop
repz
iret
es
or
jne
repnz
aam
imul
inc
ficoms
push
cwtl
enter
cmp
ret
frstor
in
aam
push
daa
popf
xor
loop
ss
cs
inc
imul
xor
mul
inc
scas
sbbb
xlat
rclb
add
or
push
jle
inc
cwtl
mov
inc
xor
inc
mov
fstpl
test
xor
jo
cmp
jge
ret
xchg
mov
push
adc
sbb
mov
insb
add
cmpsb
inc
dec
mov
cmp
pop
mov
out
or
lock
xchg
mov
fiaddl
outsb
cmp
dec
push
je
or
sbb
mov
addr16
dec
int3
jnp
xchg
pop
lods
pop
icebp
call
ljmp
cmp
cld
xchg
mov
push
jo
ljmp
test
test
daa
cmc
repnz
pop
add
xor
or
rorb
push
adc
and
mov
dec
sub
cmp
and
ret
push
pop
addb
mov
add
imul
pop
mov
jne
lret
cmc
or
or
aas
push
inc
pushf
ss
loope
ljmp
cmp
dec
cwtl
pop
add
sahf
arpl
add
push
pop
sbb
mov
popf
leave
sbb
hlt
dec
ret
cmp
sbb
dec
sub
icebp
mov
push
repnz
in
and
inc
cmp
addr16
mov
imul
cmc
jecxz
ret
sahf
movsb
setne
pop
add
sub
data16
jmp
mov
out
mov
push
test
cld
shl
ljmp
fdecstp
xlat
xor
push
loopne
jmp
push
int
lahf
cmp
mov
adc
sub
pop
inc
std
shlb
lock
and
xor
daa
dec
jae
fiaddl
es
pop
popa
jmp
ret
jg
and
jecxz
or
xor
mov
dec
xchg
push
andb
cmp
leave
xor
mov
loop
mov
decl
mov
lret
lods
std
adcl
push
aad
outsb
js
or
jne
and
movsl
xchg
add
sti
xor
push
ret
insb
mov
and
icebp
pop
dec
mov
sbbb
add
loope
add
mov
pop
xchg
mov
mov
out
add
out
push
add
sub
sub
mov
push
pop
js
mov
in
xlat
pop
ljmp
jnp
push
aam
adc
in
mov
inc
jne
add
push
daa
rol
jae
xor
fldl
daa
add
aad
fs
ja
inc
test
ficoml
sub
ds
inc
inc
lcall
hlt
sub
xlat
sub
dec
mov
aad
mov
pop
lods
xchg
or
test
sub
jmp
add
or
ret
jno
cli
mov
jmp
push
mov
jnp
pop
adc
sub
das
cmpsl
dec
or
push
addb
jbe
xor
mov
mov
dec
orl
pop
pop
movsl
cmp
popa
in
jg
sbb
pop
add
cmp
outsb
sub
loopne
push
mov
hlt
inc
aaa
sub
aad
push
out
int3
or
movsb
mov
add
push
mov
mov
cwtl
rclb
sub
xchg
and
mov
inc
pop
xchg
and
inc
testb
into
and
loope
iret
push
wrmsr
mov
sbb
adc
ror
add
je
pop
stc
das
test
xor
cmpsb
sbb
lcall
adc
cld
pushl
mov
mov
and
jnp
imul
les
inc
xchg
sti
in
jle
xchg
mov
or
mov
push
ds
sub
lret
dec
jmp
aad
ss
or
pop
cwtl
pop
add
clc
pop
out
call
je
push
push
in
test
inc
mov
dec
jge
cmp
cli
mov
out
and
adc
jp
idivl
mov
xor
sbb
cltd
xchg
jnp
shl
nop
jl
outsb
sbbl
cmp
jg
outsb
bound
jne
test
push
fmull
pushf
out
push
popf
sbb
jle
add
addr16
movsl
js
xchg
xchg
icebp
lcall
mov
sti
repz
jae
mov
popa
outsb
pop
push
test
shr
sub
inc
dec
inc
std
int
push
inc
cmp
add
ljmp
bound
push
stc
xlat
push
shlb
push
jne
jno
sahf
scas
rcrb
push
jmp
xlat
shlb
and
mov
adc
dec
out
iret
dec
mov
lods
cmp
mov
pushf
movsb
cld
testl
pusha
test
loope
xor
xlat
adc
das
scas
icebp
and
mov
push
insb
jmp
repz
out
dec
adc
mov
testl
add
andb
mov
adc
xor
xchg
ret
inc
jbe
push
push
cmp
mov
sub
jge
and
je
aad
inc
inc
lods
pusha
push
pop
sub
xchg
in
or
sub
add
loopne
and
int
or
pusha
and
rol
pusha
mov
arpl
mov
sbbl
lret
test
xor
icebp
ljmp
add
icebp
or
loopne
dec
hlt
mov
mov
xchg
cld
ljmp
sbb
dec
mov
add
es
xchg
ja
pop
xor
mov
outsb
in
add
dec
movsb
adc
cwtl
sub
mov
enter
and
test
jnp
sub
add
xlat
jecxz
jmp
out
add
and
sub
icebp
cmc
cmpsl
or
inc
add
repnz
add
pop
adc
shl
dec
add
mov
or
or
push
push
dec
lock
cmpl
sbb
test
cmpsb
xor
hlt
mov
in
testb
hlt
mov
mov
jb
xor
sub
cmp
roll
mov
xchg
ret
loopne
lods
jmp
sbb
adc
roll
add
add
jge
out
add
pop
sub
test
xchg
sub
add
cmc
out
add
pop
jge
adc
or
lret
ljmp
add
pop
xor
fistps
call
or
imul
stc
insl
pop
imul
mov
call
cld
nop
not
aaa
or
stos
mov
je
setnp
adc
stos
mov
or
out
pop
fiaddl
mov
adc
push
data16
pop
pop
or
or
adc
pop
popa
lea
ret
mov
add
out
into
pop
sbb
rolb
xlat
popf
iret
add
adc
sub
inc
les
add
adc
adc
xlat
pop
xlat
inc
jmp
inc
sbb
dec
add
pop
and
xchg
test
nop
inc
pop
outsb
jmp
jg
mov
into
jle
mov
cmp
xchg
or
in
test
jo
xchg
push
xchg
cwtl
movsl
aam
mov
in
dec
shlb
mov
xchg
mov
clc
sub
jo
pop
lret
or
sahf
jns
cwtl
add
xchg
inc
add
mov
xor
fs
mov
sbb
and
lds
movsl
cmc
mov
inc
addr16
adcb
mov
fstl
xor
pop
lds
pop
push
add
imul
or
iret
add
pop
push
cmp
mov
add
out
xor
aaa
inc
arpl
cwtl
int3
cld
xor
mov
repz
lea
jge
std
andb
repz
sub
or
mov
dec
xor
icebp
mov
int
ds
xor
inc
jg
fwait
mov
fstps
aas
or
fistps
mov
or
pop
mov
jge
xor
sarl
dec
fnstsw
loop
test
nop
jle
sub
xchg
ficoml
pop
inc
call
js
jns
dec
cmp
and
sbb
pop
clc
mov
lret
lods
cmc
mov
rolb
aad
adc
mov
jbe
dec
lock
repnz
cmp
xchg
jnp
adc
jmp
dec
pop
movsl
or
loopne
cmp
cmpsb
inc
or
jo
stc
sub
dec
out
loope
cmp
adc
pop
jle
jo
mov
mov
dec
and
rolb
mov
fisubrl
push
outsb
push
push
fildl
jns
jnp
andb
sub
gs
dec
xorl
mov
sub
sti
mov
stc
add
test
xor
xor
shrl
call
push
dec
addb
xchg
add
jmp
pop
adc
mov
adc
or
push
icebp
outsl
andb
mov
call
xor
pop
stos
subb
addr16
or
mov
cli
pop
jecxz
pop
in
add
pop
pop
test
mov
sbb
push
mov
push
cmp
ja
and
cmp
hlt
in
jecxz
mov
push
pop
cmp
inc
push
andl
add
movsb
and
jp
mov
dec
or
jnp
pop
nop
in
repnz
add
arpl
jp
das
lret
popa
stc
pop
outsb
negb
pusha
cvtps2pd
xchg
outsl
icebp
insl
or
jns
xchg
mov
jge
fldt
cmp
out
mov
fimull
jmp
jbe
pushf
mov
sub
pop
adc
and
cwtl
fsubs
pop
notb
sub
or
push
mov
add
push
inc
pop
lds
jmp
pop
mov
dec
mov
decl
dec
inc
test
enter
pop
sub
adc
out
add
sub
pop
aaa
mov
dec
rorb
sarl
adc
push
nop
pusha
sub
nop
pop
and
push
insl
js
xchg
mov
mov
loop
pop
jbe
outsb
rcl
inc
or
stc
mov
dec
add
xor
mov
movsl
xchg
dec
les
sti
icebp
xchg
cmp
stc
push
lcall
mov
sub
and
jmp
cmp
push
sub
mov
shr
mov
idiv
sub
addb
cmp
xlat
xchg
and
mov
data16
dec
jno
push
sbb
pop
sub
pop
les
pop
out
fstl
jnp
test
andb
test
jbe
dec
mov
add
pop
add
aam
push
add
shr
jne
rcrl
dec
push
add
loop
loope
jne
mov
cld
xor
jmp
insl
lahf
loop
jge
and
mov
xor
out
pop
repnz
mov
and
jp
jae
cmp
mov
faddl
push
push
pusha
out
mov
jno
hlt
cltd
leave
call
xchg
inc
scas
cmpsl
out
call
mov
fnstenv
push
mov
add
dec
jecxz
mov
xor
std
pushf
jmp
mov
inc
lret
and
lahf
push
mov
test
mov
roll
jl
add
popf
jecxz
xchg
add
mov
dec
pushf
jge
cwtl
xchg
std
pushf
pop
mov
out
add
lods
pop
ret
jp
adc
dec
mov
shrl
inc
add
xor
andb
dec
xacquire
test
int
mov
js
ret
or
pop
cmpsl
mov
mov
jmp
shlb
lret
inc
sub
dec
in
jnp
push
mov
add
pop
push
cmp
lds
and
push
adc
pop
out
icebp
daa
scas
es
inc
bound
xchg
out
hlt
sahf
cwtl
xchg
out
mov
stos
jo
cmpsb
shlb
out
mov
pop
push
cmp
aam
mov
ja
mov
loop,pn
pop
sub
clc
sbb
xor
mov
adc
roll
arpl
rcll
mov
xchg
mov
mov
bound
outsl
aas
aam
lcall
fucompp
mov
cwtl
cmp
mov
adc
xchg
movsl
xor
shr
dec
push
lcall
xchg
add
imul
mov
das
and
sti
mov
dec
int
repz
jmp
push
xlat
pop
mov
xor
pop
enter
xor
xor
add
push
test
negb
jae
inc
cmp
dec
push
std
pop
out
sti
inc
movsl
adc
mov
fwait
pop
xchg
out
and
into
pop
and
ret
push
dec
fmull
mov
xchg
rcl
outsl
pop
sub
sbb
push
faddl
jmp
inc
jbe
pop
mov
xor
pop
jge
jge
or
or
sub
jge
stos
adc
jmp
sbbb
mov
js
xorl
mov
dec
pop
fldcw
in
sbb
loope
xchg
pop
or
or
or
push
or
jmp
pop
push
mov
fadds
int3
pop
dec
push
push
pop
data16
filds
mov
repz
pusha
int3
inc
aam
add
sub
jmp
xor
pop
pushf
cli
bound
loopne
data16
nop
add
mov
jecxz
pop
call
push
add
jecxz
stos
mov
les
push
xchg
popf
jno
les
push
xorb
dec
lds
pop
mov
mulb
pop
andl
inc
dec
nop
int3
sti
xor
sub
pop
dec
in
add
pop
dec
mov
jnp
ret
mov
lock
add
outsl
test
pop
bound
adc
cltd
aad
jnp
add
sub
or
dec
fs
pop
arpl
inc
cmp
out
pop
pop
aam
mov
imul
adc
in
mov
std
cmp
adc
leave
sbb
sub
xor
inc
cs
loopne
popf
dec
jmp
pop
sbb
jno
add
add
pop
ljmp
or
or
ret
fs
push
in
add
sub
jge
or
pop
xor
cmp
inc
push
xor
push
xchg
aad
xor
cli
mov
orl
fdivrs
jmp
repnz
jae
ja
adc
push
repnz
adc
jne
adc
mov
orb
roll
std
or
out
orb
mov
mov
fstpt
cmpsb
mov
mov
dec
stos
rcrb
outsl
xchg
pop
or
cs
dec
mov
inc
add
pusha
adc
stos
inc
push
cmp
pop
mov
jecxz
pushf
shl
mov
loopne
push
add
or
push
js
sub
and
rcrb
adc
shl
subb
fists
or
push
push
test
dec
mov
dec
dec
lret
cli
das
and
push
sub
jo
and
std
jae
sbb
or
xor
das
or
push
push
sub
adc
xchg
stc
scas
jecxz
mov
mov
push
outsl
das
cmpl
push
ss
test
adc
or
adc
push
popf
insl
add
call
cwtl
inc
adc
add
dec
pushf
or
cmp
mov
sub
adc
leave
adc
mov
push
pop
push
out
mov
add
popa
or
push
mov
mov
push
adc
inc
mov
lods
pmaxub
movsb
pop
push
xorb
jge
mov
cmpsl
cmp
dec
push
or
pop
lods
ljmp
shr
fbld
push
fimull
jo
cld
inc
pop
out
hlt
mov
push
push
xchg
rolb
push
add
cmp
sbb
sbb
imul
xchg
shll
cmp
adc
push
hlt
out
imul
jmp
inc
scas
sub
sbb
pop
sub
lea
shll
sub
out
lret
das
pop
jl
addr16
sbb
jg
mov
shlb
jnp
adc
xchg
add
or
inc
sub
xor
aaa
sbbb
int3
sub
dec
pop
enter
vmovsldup
mov
aaa
lret
jns
andb
jns
or
test
pop
fbstp
fistl
adc
dec
jae
xchg
xorl
pop
xor
bound
sahf
and
sarb
aaa
pop
sub
shl
and
adc
xchg
dec
xchg
mov
add
repz
bound
es
push
pop
push
fdivrs
pop
or
adc
cmc
dec
add
xchg
mov
std
sbb
and
push
add
fcompl
mov
insl
adc
lods
push
mov
outsl
mov
adc
ljmp
inc
nop
std
loopne
add
and
cltd
adc
scas
jo
push
mov
cwtl
adc
push
cwtl
push
notb
add
jno
mov
and
xor
xlat
pop
notl
fisttps
andb
mov
push
das
mov
sbb
xchg
dec
inc
nop
subl
mov
lahf
add
add
and
pop
dec
mov
lock
sub
lahf
cwtl
pop
call
add
push
wrmsr
cmp
mov
jle
pop
sub
data16
sti
fistps
rcll
jmp
cld
xor
pop
mov
mov
outsl
test
pop
jne
add
loopne
xor
cmp
sub
add
mov
enter
push
movsb
clc
add
ds
pop
int3
clc
pop
adc
and
push
lds
pop
pop
mov
nop
push
dec
push
mov
push
xor
ja
mov
stc
int3
ret
or
rclb
test
loopne
dec
loopne
lret
push
mov
addr16
stos
js
sbb
lcall
sub
ja
jnp
jb
and
stc
mov
in
pop
pop
mov
sbb
xchg
cmc
mov
pop
or
jne
mov
mov
nop
jne
sbb
pop
jmp
into
dec
or
je
fisubs
jmp
push
fwait
imul
out
jmp
jl
ja
mov
in
in
add
dec
push
roll
inc
add
mov
xor
inc
mov
aas
mov
scas
jle
or
fwait
daa
mov
sbb
sub
mov
mov
lret
sbb
xlat
jecxz
sahf
push
sub
mov
incl
adc
xor
jp
or
fdivp
js
or
pop
mov
push
punpckldq
sbb
enter
sarl
cs
xor
sbb
stos
adc
sbb
pop
fisubs
push
or
cltd
add
push
push
pop
xlat
mov
pusha
les
xchg
add
add
cmpsl
mov
push
mov
jmp
and
subb
neg
and
and
jge
repnz
es
mov
xchg
enter
addb
es
sub
jo
cmpsb
or
jle
add
mov
jb
cmc
adc
imul
dec
and
push
xchg
jmp
xchg
out
and
outsl
lret
dec
std
daa
repnz
add
jmp
fnsave
sub
out
pop
inc
pop
push
mull
in
add
lret
lahf
mov
push
and
andb
xorl
add
shrl
addr16
mov
test
push
push
jg
call
lods
push
fdivrs
call
xchg
andb
add
add
aam
out
and
dec
add
jmp
mov
inc
sbb
inc
and
pusha
lret
mov
ret
sub
or
jmp
mov
in
iret
or
mov
rcl
add
cmp
or
loopne
or
xor
out
lahf
inc
mov
fimuls
jmp
add
xor
les
jae
xor
add
stos
pop
lahf
leave
fiadds
mov
lahf
sahf
jp
incw
rcrl
jbe
xchg
mov
in
mov
and
cwtl
and
xor
dec
lahf
push
xor
push
mov
daa
dec
jmp
bound
push
ret
push
jb
or
pop
test
int
daa
movsb
popa
pop
ljmp
dec
roll
aam
sarl
stos
nop
cli
add
ds
lcall
das
loop
icebp
lock
call
lcall
arpl
jb
mov
mov
mov
out
loop
jmp
lret
je
mov
dec
pop
sub
jmp
test
mov
iret
pop
push
xchg
repz
dec
js
mov
dec
lods
pushf
mov
call
push
xor
xchg
mov
push
sub
inc
mov
jnp
mov
ljmp
add
xor
and
roll
xor
loope
lock
jns
push
push
push
addr16
test
xchg
sub
mov
push
mov
or
jmp
loop
push
sub
adc
xor
loope
inc
outsl
and
andl
inc
jg
testb
sbb
push
std
cmp
sub
adc
mov
aad
lods
sbb
pop
popa
daa
sti
test
lock
adc
daa
jmp
adc
inc
lea
hlt
push
jmp
into
or
mov
aas
or
lcall
mov
xchg
push
in
sbbl
add
scas
cltd
into
and
jmp
mov
lods
inc
les
adc
bnd
pop
add
jae
add
pop
push
mov
cmp
out
mov
lcall
sub
add
mov
xor
push
inc
btr
xor
aaa
add
shll
sbb
mov
pop
inc
popa
xchg
or
mov
mov
mov
hlt
mov
push
loop
loope
and
out
dec
fisttpl
movsb
dec
ficompl
and
js
lcall
pop
in
dec
mov
mov
jmp
test
repz
adc
pushw
out
mov
pop
cmpsl
pusha
les
fs
and
pop
pop
insb
push
popf
mov
aas
aad
inc
push
mov
jmp
cmp
add
sbb
ret
leave
test
add
sbb
pop
xchg
or
cmp
jbe
push
and
push
and
orb
dec
adcb
iret
out
push
jmp
xor
xor
jmp
dec
out
stos
sub
pop
rcrb
movsb
add
jno
and
cmp
rol
mov
imul
popa
push
jno
sub
jnp
imul
in
mov
je
add
push
or
pop
sbb
push
or
mov
xor
rcrl
sub
xchg
and
and
xor
fcompl
add
jns
or
sub
mov
inc
push
lock
push
imul
jno
and
xor
pusha
lock
int
outsl
ret
add
mov
and
and
data16
sbb
out
xchg
sub
and
inc
xor
lahf
adc
mov
gs
sbb
cmp
loopne
add
loope
out
adc
or
inc
out
test
push
stos
fisttps
fwait
sub
adc
lcall
fstl
inc
or
popf
or
mov
dec
sti
adc
fs
sbb
xor
jge
or
jg
loope
js
add
add
add
pop
lret
fstl
or
out
aas
mov
jle
jnp
adc
pop
xchg
inc
movsl
andl
sbb
or
mov
daa
push
and
lods
and
lret
dec
or
mov
and
jmp
xor
xor
mov
or
adc
and
xchg
mov
sub
add
add
pop
int
and
mov
mov
out
add
fmuls
mov
jnp
or
push
xchg
sbb
mov
adcb
fistps
in
xchg
or
test
adc
sbb
subb
dec
inc
cmpl
hlt
rol
adc
cs
xchg
xchg
loopne
or
fldl
cmp
dec
mov
xor
sbb
mov
or
and
or
add
and
cmp
sub
rcrb
scas
clc
mov
pop
pushf
push
leave
rolb
add
cmovbe
inc
call
xchg
jge
movsb
dec
ljmp
add
stos
call
mov
cmp
sub
or
sub
sbb
push
aaa
sub
mov
lret
dec
test
jmp
dec
sbb
cwtl
aas
xor
pop
sub
mov
jge
dec
mov
nop
cmpsb
imul
dec
mov
sub
movsb
cli
sub
stos
xchg
or
sub
jno
pusha
mov
insb
mov
add
nop
fbld
mov
shlb
les
movsl
jp
mov
adc
mov
aam
mov
push
mov
xor
ja
add
push
out
mov
ds
mov
cmp
pop
shlb
pop
sbb
pushf
add
pop
xchg
test
add
jnp
js
pop
repnz
add
adcb
add
not
xchg
xorb
scas
add
scas
inc
in
repnz
aas
inc
neg
add
sbb
lods
xor
mov
inc
sub
or
pop
leave
inc
xcrypt-cbc
cmpsl
ljmp
std
out
sarb
dec
sub
adc
push
adcl
pop
jno
xchg
xor
or
js
popf
int3
cmpsl
and
cmp
mov
jo
popf
idivb
adc
dec
int
std
pop
sub
pop
test
sti
mov
repnz
adc
inc
mov
adc
adc
or
loop
pop
mov
push
int
test
lds
es
hlt
push
mov
xchg
lahf
movsl
jg
jl
pop
loop
subb
push
push
pop
lods
data16
push
push
mov
fldcw
jns
fcmovnb
ljmp
adcb
push
iret
and
xchg
xchg
xchg
pop
sahf
test
mov
popa
fistl
iret
and
pushl
xor
pop
dec
mov
ss
xor
lahf
push
sahf
push
xchg
notb
push
push
aam
dec
je
aam
and
xchg
loopne
push
or
add
cmc
jle
lret
xchg
and
xchg
push
mov
std
dec
subb
rcl
xchg
insb
enter
shl
or
xchg
not
add
or
fcmovnu
sarl
aas
les
jecxz
pusha
dec
and
and
push
mov
leave
push
mov
nop
repnz
jo
aas
fnstcw
sahf
dec
mov
cmp
pop
pushf
pop
repz
push
test
iret
popa
test
add
je
int3
nop
mov
das
push
ss
cmp
fisttps
test
fldl
inc
xchg
push
jp
xor
cld
xor
mov
test
lret
and
cmp
pop
xor
mov
add
lea
sbb
std
xchg
pop
add
rcrl
or
sbb
dec
cmp
pusha
jmp
add
cwtl
adc
lock
mov
push
ret
nop
add
in
in
ljmp
pop
out
sahf
add
push
mov
je
add
inc
or
mov
pop
sub
sub
repnz
mov
int
pop
jno
loope
pop
test
test
or
or
jmp
adc
or
out
push
es
xlat
or
ljmp
cmp
out
repnz
gs
or
or
fistpl
in
inc
out
shll
mov
cmp
cmp
push
xchg
push
fwait
add
sarb
fs
testl
add
fs
jmp
and
pop
repnz
push
sub
insl
mov
xchg
push
sub
jge
dec
sub
adc
mov
adc
push
loopne
sarb
push
push
pop
sub
dec
sub
add
jne
in
ljmp
push
gs
jmp
sub
sub
aam
push
lret
cs
xchg
xchg
mov
pop
mov
jp
sub
mov
pop
sbb
test
xor
push
pop
push
outsl
jg
and
jmp
movsl
push
out
or
not
je
xor
add
inc
xchg
sbb
in
lret
pop
mov
cmp
xlat
sub
into
test
cs
sbbl
xor
push
imul
mov
ret
out
int3
add
push
pusha
jbe
sub
movl
ss
pushf
xor
mov
dec
cmp
cmp
add
add
std
sub
and
push
mov
jl
pop
aaa
shl
push
jl
push
rcrb
push
inc
psrld
add
icebp
jb
xchg
mov
xor
add
jns
cmovo
push
jp
xchg
xchg
xchg
jne
pop
pop
icebp
int3
jmp
aad
loop
jne
or
jmp
push
bound
xorb
jp
jecxz
shr
loopne
xor
std
jg
fists
les
scas
test
or
mov
inc
adcl
pop
mov
pop
andb
pop
sbb
mov
xor
mov
fnstsw
call
pusha
mov
pop
and
incb
cmc
ss
daa
push
shlb
xor
or
adc
and
xchg
dec
es
sub
lret
add
ds
nop
cs
roll
xor
xor
addr16
rcrl
pop
push
popf
insl
inc
test
daa
icebp
int3
divb
pop
in
jb
rol
pop
jmp
or
add
pop
push
add
add
push
inc
xchg
mov
fcoms
bound
xor
sub
out
inc
es
nop
insb
orl
or
popa
adc
test
fwait
xchg
add
cmp
and
ja
js
or
popa
sbb
xchg
bound
jno
out
xchg
sbb
pop
sub
jb
xchg
fistps
sub
ja
and
cmpsl
clc
sbb
push
jle
xor
movsl
sbb
xchg
push
push
mov
pop
jp
add
cmp
mov
daa
mov
shl
inc
or
push
imul
mov
scas
push
or
push
mov
or
inc
cmpsb
into
or
xor
mov
out
add
ficomps
out
dec
add
roll
stc
or
dec
idivb
xor
jnp
add
in
je
int3
dec
xor
xchg
adc
dec
fs
jle
or
adc
loopne
xor
dec
or
cmp
xchg
pop
push
and
flds
inc
and
es
sbb
xor
mov
jae
mov
push
push
add
dec
out
lods
aas
mov
test
imul
sub
inc
add
dec
lods
inc
andl
loopne
in
or
sar
add
int3
sbb
push
add
repnz
push
or
jg
cld
jle
mov
subl
add
dec
sub
test
xorl
jmp
lret
jb
xor
mov
cmp
pop
inc
push
push
xchg
divl
dec
std
mov
insb
cmp
out
pusha
imulb
push
sub
push
std
xor
fsts
jl
adc
pop
add
pop
adcl
or
shlb
popf
push
push
les
or
jle
pop
mov
outsl
fldt
dec
jmp
inc
mov
xor
lock
cmpsb
ret
subb
xchg
jmp
mov
xor
push
mov
gs
pop
scas
nop
mov
sbb
lock
pop
stc
sub
aas
fwait
jg
scas
or
addr16
cmp
push
or
pop
jmp
mov
jns
push
insl
scas
sbb
popf
push
jmp
popa
dec
sub
mov
fs
in
int
mov
or
fistps
pop
fimuls
mov
push
and
cs
rcl
ret
xor
pop
jo
fsubrl
movsb
xor
mov
jmp
mov
adc
mov
clc
aaa
mov
push
movsb
aam
out
es
cs
les
les
xchg
mov
add
dec
add
dec
movb
adc
mov
or
pop
pop
cmpsl
inc
aad
xor
cmp
movb
daa
cli
mov
lahf
dec
lret
lret
popf
sub
jle
jge
dec
aam
icebp
movsl
hlt
inc
sbb
jl
ret
or
sarl
pop
pop
push
rclb
pop
xor
dec
hlt
push
dec
jp
jmp
mov
out
in
inc
push
push
or
pop
add
add
test
or
mov
dec
ljmp
sub
sub
in
outsl
stc
loope
stos
je
mov
scas
repnz
or
add
xor
dec
dec
push
nop
jp
add
iret
popa
fsubr
daa
dec
es
out
jno
push
mov
push
push
pop
nop
testb
faddl
or
inc
and
std
jno
das
repz
sar
sbb
jge
gs
aam
ficoml
dec
outsl
ds
sbb
insb
pop
sti
adcb
jne
out
repz
and
mov
sbb
jle
mov
fists
addb
adc
or
dec
out
cld
sbb
inc
xlat
sbb
lock
mov
sbb
cwtl
mov
mov
jno
out
inc
pop
inc
pop
fadds
mov
xchg
std
movsb
sbb
adc
jno
jns
adc
mov
pop
mov
jmp
cmp
inc
fsts
mov
flds
in
lock
mov
sahf
outsl
or
sbb
or
cmp
sub
rorb
jmp
test
sbb
rcll
fiadds
xchg
jmp
mov
jae
in
das
push
pop
add
ret
inc
orb
pusha
inc
pop
and
xchg
xchg
in
xchg
push
push
popa
sbb
pop
mov
sub
mov
fbstp
push
mov
clc
xor
je
aam
or
cmp
push
movsb
or
dec
repnz
fiadds
and
sbb
leave
inc
pop
xchg
test
dec
pop
not
dec
cli
pusha
xorl
push
push
ret
adc
lds
popf
js
push
push
loopne
mov
loopne
xchg
cltd
movsb
or
mov
xadd
orl
mov
js
mov
lea
pusha
stos
imul
adc
pop
ja
or
push
bound
fs
pop
mov
aaa
fidivl
cli
std
mov
mov
mov
sub
loop
xor
mov
pop
ja
and
enter
mov
add
cmc
or
insl
mov
enter
lods
push
imul
mov
mov
pop
cwtl
repnz
add
aad
jmp
popa
fisttps
adc
and
scas
pop
cmp
sti
fs
inc
int3
imul
ficoms
or
sbb
push
mov
outsl
rcr
add
dec
lret
mov
loope
std
ds
xor
sub
jb
ret
mov
dec
mov
jecxz
testl
ret
lcall
cmp
out
push
pop
call
adcl
std
push
cmp
or
pop
pop
lcall
aaa
jmp
or
fs
adc
pop
sbb
icebp
add
push
jmp
mov
mov
mov
sub
fildl
adc
add
jl
pop
out
and
jmp
mov
pushf
push
pop
xor
rcll
sbb
jno
dec
pop
test
dec
mov
aam
sub
or
out
jnp
cmpsl
jbe
pop
scas
jno
sub
das
add
enter
pop
lcall
sbb
push
sbb
popf
or
icebp
push
or
jbe
lds
arpl
cmpsb
xor
mov
cmp
fabs
add
daa
fisttpl
jl
out
int
sub
ja
push
daa
sbb
mov
adc
add
pop
lods
add
stos
sbb
out
cmp
pop
jnp
sub
test
fbld
adc
xchg
ds
add
jbe
jmp
ret
dec
ffreep
sub
test
cltd
jmp
adc
jle
sub
das
pop
jle
mov
push
pop
pusha
dec
shl
fs
cwtl
mov
pop
andb
test
call
push
push
inc
dec
lods
push
mov
lock
pop
push
xor
fsubrs
mov
inc
rolb
sbb
add
sti
adc
sub
and
shrl
lcall
shrl
outsb
mov
mov
les
pop
jl
or
pop
sub
add
jbe
mov
sbb
or
push
add
inc
scas
das
xchg
repnz
mov
dec
inc
push
mov
fcmove
pop
adc
aaa
push
or
stc
sub
jp
inc
inc
xchg
push
lret
add
orl
aaa
push
push
lret
mov
or
push
add
pop
inc
cmp
cmc
xchg
sub
in
cmpsl
dec
mov
aad
dec
cltd
ret
mov
loop
and
push
xor
push
incl
mov
and
cli
inc
mov
rcl
pop
dec
jecxz
out
out
adc
rorb
add
or
mov
pop
pop
dec
push
add
pop
stc
stos
je
xchg
or
xchg
and
fsubl
popa
pop
aas
add
adc
add
repz
cwtl
jecxz
test
scas
jg
sti
lret
imul
int3
sbbb
sub
jnp
fs
pop
loopne
das
pop
je
sbbb
lds
mov
mov
incl
lds
pushf
push
inc
call
dec
out
mov
nop
mov
add
cwtl
push
pop
repnz
or
xor
repz
xor
hlt
cltd
out
es
sbb
sarl
das
push
xchg
mov
sbb
jp
xor
inc
mov
xor
cmp
and
aam
dec
adc
add
fdiv
mov
push
inc
or
dec
jb
ret
and
movsb
adc
or
jmp
cmp
dec
hlt
ret
add
xor
pop
jo
push
mov
cmp
jo
push
mov
mov
mov
lret
aas
stos
popa
push
or
add
dec
imul
push
xor
cmp
or
add
xor
add
fldl
adc
out
fwait
popf
sub
pop
push
adcl
xor
paddsw
pop
sub
add
add
int
sub
enter
cwtl
jns
mov
mov
jns
adc
push
jbe
stos
loop
fists
add
out
or
loopne
jmp
fs
or
imul
adc
add
aas
sbb
sub
out
or
ss
adc
cltd
loopne
jb
cmp
popa
sbb
push
into
mov
imul
or
sbb
mov
aad
pop
mov
mov
movsl
jae
orb
mov
shlb
int3
jno
pop
cmpsb
add
std
pusha
sti
push
cld
and
shlb
inc
call
pusha
dec
xchg
sub
pop
cmp
inc
shl
mov
into
jo
nop
popf
xlat
xchg
mov
fists
sbb
mov
add
popf
shrb
push
pop
dec
pop
dec
cmpsb
sub
pop
or
das
push
lea
lods
jmp
xor
imul
ja
dec
arpl
mov
xchg
loop
lods
mov
push
fsubl
fnstenv
incb
stos
jns
mov
outsl
in
lds
add
push
repz
pop
pop
int3
add
lret
add
ficoms
mov
call
fdivrl
jo
cmp
sub
lods
adc
and
idiv
jb
mov
inc
enter
jmp
inc
dec
andl
and
addr16
jae
int
cmp
adc
sbb
adcb
or
pop
push
push
pop
jmp
bound
sub
sub
orb
pop
push
into
cs
jecxz
xchg
ret
jle
mov
adc
push
or
inc
push
std
daa
mov
add
out
inc
add
and
inc
adc
dec
add
incb
push
jecxz
test
mov
pop
int3
push
es
rclb
mov
mov
jae
sti
and
lahf
jnp
jbe
xor
xchg
into
mul
loop
enter
int3
push
and
push
push
mov
fldenv
shlb
gs
dec
es
test
das
add
pop
mov
ret
or
cmpsb
xchg
push
clc
inc
dec
scas
mov
dec
xchg
ss
inc
pop
popl
mov
mov
adc
adc
testl
pop
sub
push
jne
jmp
push
and
test
lds
or
arpl
pop
mov
fstps
enter
adc
jnp
sub
mov
jp
jae
lods
fmuls
mov
push
scas
mov
test
lods
bound
sbb
shl
xor
not
test
cmp
xchg
ja
jb
and
jle
xlat
mov
or
test
lret
test
icebp
fisubrl
icebp
push
pop
cmc
and
mov
add
enter
ret
push
or
inc
xor
loopne
dec
adc
mov
inc
scas
gs
pusha
leave
adc
mov
adc
cmpb
cmp
add
pop
adc
pop
lds
sub
rcll
xchg
out
das
xor
or
mull
sahf
das
inc
mov
sub
mulb
or
push
mov
add
add
jmp
xor
das
or
repz
jl
aaa
test
mov
inc
test
sbb
inc
inc
and
cmpb
push
mov
cltd
lcall
ds
dec
pop
or
lods
cmpb
jns
es
mov
cmp
jno
les
mov
loop
push
cld
push
jmp
push
imul
jp
test
das
add
jnp
in
subb
or
cltd
xchg
pop
jl
adc
mov
fs
inc
mov
mov
mov
popa
out
cmc
ljmp
mov
inc
xchg
add
sti
push
pop
cs
ljmp
add
add
in
add
jecxz
xchg
stos
es
xlat
adc
or
xchg
adcl
mov
mov
cmpb
int
pop
pop
xor
sub
add
inc
mov
push
scas
mov
jo
rclb
dec
pop
fisttps
push
imulb
add
cmc
stos
push
push
mov
test
adc
arpl
sbb
pusha
std
clc
sub
cltd
mov
mov
dec
push
sub
sub
enter
rcl
outsb
lods
lea
into
and
jae
pcmpgtb
daa
add
es
mov
xor
sub
andl
jmp
add
out
adc
xor
push
pop
dec
inc
sbb
addl
pop
adc
mov
mov
cmp
repz
dec
mov
xor
adc
xor
add
pop
pop
lcall
aad
dec
push
das
xchg
shrb
fldl
fiaddl
out
sub
movsb
inc
or
xchg
fsubr
mov
or
icebp
jae
push
add
or
ja
dec
push
mov
sub
mov
arpl
popf
mov
in
and
inc
jmp
mov
mov
sub
dec
imul
cltd
jbe
arpl
add
roll
xor
push
insl
icebp
xchg
je
cmp
cld
sbb
sub
mov
rorl
push
xchg
into
sbb
and
jge
add
mov
push
cmp
push
scas
pop
mov
lret
sub
mov
dec
ljmp
pusha
sbb
jecxz
lock
and
in
jae
mov
arpl
test
add
mov
movsl
hlt
push
cmp
pop
in
push
or
fwait
push
mov
leave
cs
filds
mov
or
sub
add
jbe
call
iret
cmp
mov
or
push
dec
popf
lods
adcb
push
mov
adc
sub
lods
add
push
mov
and
xorl
push
push
std
adc
pop
cltd
aaa
outsl
fsubs
dec
push
fmul
pop
jmp
fstpl
add
in
push
repnz
ret
sbb
jmp
mov
xchg
stc
pop
pop
rcrb
dec
mov
xor
pop
sub
rcrb
icebp
pop
xor
dec
cmp
or
fsts
mov
aas
jl
or
loop
sbbb
or
test
enter
inc
or
jmp
mov
pop
sub
add
mov
sub
pusha
es
cmp
or
add
push
aad
adc
pop
mov
mov
mov
lock
repnz
push
adc
in
int3
into
push
push
shr
rorl
sub
aad
inc
or
lods
test
add
shl
lcall
adc
xchg
add
sub
jmp
adc
xor
xor
ret
fs
or
movsl
dec
inc
xor
sahf
xchg
pop
stc
lods
insb
mov
out
xchg
cld
int
xor
in
addps
pop
std
in
ret
cmc
adc
or
fs
jp
mov
mov
imull
jmp
or
xlat
sbb
dec
and
inc
push
pop
push
arpl
pop
cmp
jns
sub
adc
xlat
xor
out
cwtl
sub
cld
pop
mov
int3
and
imul
in
cli
pusha
hlt
stos
mov
sub
mov
aaa
iret
cmp
inc
dec
xorb
pushf
xchg
rcl
mov
loope
xchg
cs
into
icebp
sub
lock
jecxz
xchg
pop
insb
adc
mov
or
outsl
fsubl
dec
inc
shr
mov
daa
cmpsl
pop
adc
sahf
mov
push
xor
jg
imul
lea
sbb
mov
mov
flds
loope
sbb
jmp
addr16
mov
insb
mov
pop
push
test
hlt
aam
inc
mov
test
jmp
jg
scas
or
push
lds
imul
add
cmp
sbb
int3
xor
or
lret
popa
cwtl
cmc
mov
xor
mov
pop
inc
pop
sub
or
hlt
mov
adc
flds
mov
adc
mov
test
xchg
mov
push
and
xor
imul
add
fadds
ffreep
jmp
inc
insl
cmp
addl
outsl
mov
mov
aam
lret
lods
dec
test
jmp
mov
clc
xchg
and
sub
dec
mov
movsl
repnz
add
jge
lcall
outsb
aaa
int3
iret
mov
add
pop
push
sti
cmpsb
pop
adc
pop
xchg
adc
jge
pop
push
push
add
icebp
dec
or
jl
add
sarl
push
ds
inc
arpl
add
cmp
fwait
jp
jg
cmp
xchg
dec
loop
add
xchg
rclb
cmp
pop
scas
push
repz
mov
leave
and
add
sub
xchg
lahf
dec
and
lods
pop
add
addr16
dec
mov
add
stos
repz
es
or
jmp
daa
mov
jae
pop
scas
push
ds
call
cmc
ja
xchg
out
test
mov
arpl
cmc
iret
pop
push
int3
das
inc
adcl
clc
mov
add
shlb
ja
ja
stc
stc
aas
sbb
fistpll
push
mov
pop
fnstenv
fucompp
addb
jp
jp
pop
push
orb
das
jo
push
lcall
mov
fwait
andb
stc
rcll
mov
pop
out
mov
jne
ret
ss
xor
ret
fcoml
dec
dec
push
aas
mov
pop
mov
flds
dec
sarl
lods
mov
mov
ljmp
sbb
and
or
add
and
idiv
adcb
pop
cwtl
fists
hlt
ficoms
inc
and
add
jnp
jg
in
repnz
enter
subb
push
out
lods
sbb
and
testb
xlat
push
data16
pop
jle
mov
sti
mov
sar
jmp
test
test
testl
scas
and
rol
and
cmc
ret
adc
push
popa
aas
push
vmread
fistl
test
out
push
ss
xchg
mov
pop
add
jg
dec
sub
xchg
push
push
pushf
out
imul
lds
sub
push
mov
push
jmp
aaa
jecxz
pop
sub
clc
xchg
imul
or
lret
xchg
mov
test
pop
mov
rorb
push
jmp
cmp
pop
jbe
es
and
adc
bound
aad
or
add
lock
jae
xor
ja
xor
xchg
jmp
lds
addr16
and
xchg
push
call
sbb
aas
xchg
outsl
and
jne
pop
mov
jmp
out
fcompl
ja
mov
mov
sub
in
in
mov
xor
xor
inc
ds
push
pop
jnp
cmp
fucomi
mov
ja
pop
std
cmp
daa
sar
inc
mov
sti
sbb
xor
push
or
pop
fstl
mov
bound
jae
repz
inc
push
movsl
mov
sbb
sub
lret
jge
jne
add
cmp
sbb
repz
xchg
in
cmp
adc
add
cmp
cwtl
xchg
loope
shll
dec
pop
or
xor
cwtl
js
xor
ja
pop
or
stos
jbe
cmpsb
mov
push
sahf
xlat
out
pop
pushl
jmp
in
or
shll
lcall
cmp
test
faddl
dec
mov
mov
rolb
jle
sub
mov
mov
mov
mov
cmpsb
or
lods
fsubrl
jno
jbe
in
and
push
adc
cli
fildl
jmp
pop
sbbl
insb
call
pop
mov
cmp
std
dec
scas
mov
adc
mov
cmp
jecxz
mov
ljmp
imul
sbb
push
and
mov
outsb
cld
imul
mul
call
movl
sub
lods
out
addb
ds
xchg
mov
inc
cltd
lds
sbb
xchg
test
test
pop
test
or
add
push
jbe
or
jae
adc
jge
or
dec
push
cmpsb
adc
roll
dec
jl
xlat
jge
adc
push
rclb
gs
pop
jmp
js
ljmp
sub
cli
mov
mov
xchg
pop
inc
mov
stc
out
out
leave
ja
push
push
mov
pop
dec
shl
mov
dec
lret
and
adc
orl
jne
mov
jmp
imul
cmp
xor
loopne
mov
inc
repz
mov
jmp
lock
je
jb
int
sti
and
sbb
mov
mov
mov
mov
pop
cmp
add
push
push
push
sub
test
adc
adc
jg
sar
mov
int
enter
pop
adc
movsl
add
xor
in
stc
add
xor
in
xor
icebp
cvtps2pi
jb
ret
testl
repz
ljmp
call
mov
xor
jno
inc
fiadds
mov
dec
add
adc
call
andb
and
arpl
xlat
push
inc
and
xor
jnp
inc
jmp
inc
add
add
push
mov
sub
pop
jl
and
ret
mov
jmp
sub
repnz
add
push
mov
or
mov
push
sub
mov
cmp
pop
cli
and
nop
not
fiadds
sysenter
mov
pop
movsb
out
fwait
jecxz
andl
fincstp
pusha
cli
sarl
or
pop
addr16
push
mov
push
add
push
push
or
lahf
jns
dec
and
mov
cmp
scas
addb
pop
xchg
jl
jnp
mov
cmp
xchg
cs
cli
hlt
and
adc
add
call
daa
imul
cmpb
inc
sub
inc
inc
pop
lahf
sbb
pop
adc
add
sbb
push
push
hlt
mov
pusha
xchg
mov
and
mov
sub
or
xchg
jmp
lods
aaa
add
sub
inc
loopne
push
dec
add
jle
daa
pop
mov
neg
or
adcl
mov
add
mov
add
push
dec
rcl
ljmp
push
or
pop
nop
mov
js
xchg
pop
and
sbb
fstps
push
test
sbb
push
cmp
or
push
jmp
jmp
mov
lahf
fmul
dec
aad
fbld
outsb
jmp
push
aad
pusha
pop
push
test
out
setne
add
or
or
push
xor
or
rcl
ja
or
jmp
and
bnd
and
dec
xchg
pop
push
inc
out
and
popa
adc
and
add
push
mov
and
mov
xchg
orl
bnd
subb
pop
aas
xor
iret
out
out
stos
test
mov
aaa
iret
js
jp
mov
xor
xor
jge
shlb
cmpsl
pop
orb
jmp
loopne
pusha
push
jbe
dec
sbb
or
jne
iret
jle
jo
gs
outsl
and
mov
jo
data16
add
in
stos
les
pop
inc
cmpl
pop
or
xchg
test
jno
xchg
inc
cmp
xor
inc
pop
shrl
imul
adc
incb
sub
cmp
dec
lcall
fistpl
xchg
sub
mull
push
push
add
out
mov
sbb
popf
pop
dec
mov
rorl
lods
mov
add
push
or
mov
in
push
sub
rcrl
xor
sub
mov
mov
adc
mov
sub
aam
cwtl
rclb
inc
mov
in
pushf
cwtl
cmp
insl
lods
gs
xchg
xor
popf
std
mov
and
aas
dec
iret
ffreep
movsb
fldl
rcl
out
test
addl
testb
je
sbb
inc
bound
cld
or
cmp
jecxz
rcll
flds
subb
and
andl
xor
jnp
and
int
mov
xchg
jbe
daa
je
xorl
and
pop
ja
fists
dec
aad
js
cltd
testb
xchg
bound
mov
fnstcw
or
out
sbb
push
sti
addl
push
push
in
push
fcom
mov
fs
and
sub
and
add
jae
pop
xor
ljmp
scas
mov
mov
mov
dec
and
sub
or
je
pushfw
mov
jmp
movsb
js
out
sub
movsb
adc
lock
add
dec
pop
sub
loop
nop
fisttps
xchg
scas
les
cmpsb
push
fdivr
pop
sub
popf
adc
notl
jl
inc
nop/reserved
aas
notb
cmp
not
xchg
ror
cmp
sbb
ljmp
xor
xor
sbb
inc
xor
aad
cmp
gs
jae
faddl
mov
jne
mov
or
push
push
jmp
mov
imul
mov
rcrl
xchg
popa
cmp
add
mov
mov
ljmp
push
mov
iret
into
inc
out
ret
loope
or
xor
pop
inc
jge
lods
in
jns
lods
dec
xor
xchg
lods
in
repz
sbbl
pop
xor
inc
pop
ja
das
or
loope
dec
and
js
cmpl
imul
xchg
inc
fidivl
and
or
dec
add
inc
cmp
sub
push
rol
dec
or
mov
or
addb
test
sub
mov
push
test
js
shr
dec
shl
loopne
add
neg
jmp
sub
in
xchg
and
dec
jge
xor
and
or
mov
cmp
xchg
cwtl
push
sub
inc
sarl
cmp
pop
nop
iret
lret
ret
pusha
out
clc
xor
arpl
insl
cmp
adc
or
aad
rep
xchg
xor
loope
or
mov
mov
fwait
push
leave
mov
mov
mov
aaa
sbb
inc
stc
xor
add
push
int
adc
dec
cltd
pop
stos
lahf
xlat
mov
xorl
lahf
jl
pop
adc
mov
mov
pop
xchg
and
mov
jnp
das
daa
sub
popa
in
lds
mov
adc
sbb
fsubl
inc
push
cmc
mov
mov
pop
nop
dec
add
xchg
imul
andb
sub
sub
add
push
pop
fldl
out
rol
cmpsl
push
add
push
add
mov
sub
fdivs
xchg
int3
adc
js
xor
add
xchg
mov
add
in
adcb
add
pop
inc
xor
daa
adc
pop
sbb
imull
cmp
rcrl
jle
pusha
inc
jo
push
mov
add
rorb
shr
add
leave
push
pop
push
scas
and
test
lods
mov
jbe
xor
push
cmpl
and
inc
jne
jge
cmp
mov
adc
pop
mov
sub
pop
and
add
cmp
adc
add
mov
push
icebp
adc
test
sub
adc
mov
mov
aaa
jns
loop
pop
pop
push
std
out
jb
pop
mov
add
sub
js
sub
xlat
mov
aam
pop
addb
pop
rolb
jg
mov
js
adc
or
call
rolb
outsl
dec
push
add
push
jecxz
mov
dec
sub
testb
adc
cmp
jmp
loop
lret
dec
popa
add
pop
mov
adcb
inc
xor
data16
out
cmc
aaa
pop
pop
mov
pop
imul
or
dec
mov
cwtl
pop
enter
sahf
dec
sub
cmp
mov
mov
xchg
push
xor
push
ret
sbb
popf
or
and
pop
pushf
inc
jb
push
dec
push
sbb
and
or
inc
mov
cltd
pop
movsb
ja
mov
out
mov
outsb
sub
fists
xlat
add
cmp
lods
lahf
fisubrs
push
pop
and
stc
mov
jns
or
lds
inc
fidivs
pop
test
lods
jmp
mov
mov
xchg
cld
push
sbb
xchg
add
js
mov
mov
cmpsl
lcall
push
push
bound
out
push
pusha
stos
push
outsl
mov
pusha
sahf
dec
es
xchg
cli
push
orb
push
push
aas
push
push
adc
out
out
adc
test
pop
cmp
push
mov
inc
or
inc
pop
rclb
incb
sub
imul
xadd
inc
loop
imul
xchg
nopl
and
jae
enter
sub
jne
jnp
lods
popa
lock
mov
movl
popa
inc
xor
scas
aaa
es
test
mov
aaa
ficoms
push
popa
neg
lock
fs
adc
mov
dec
scas
xor
xor
in
inc
sti
decl
ret
cmpsl
cmp
and
jge
stos
jbe
sbb
jno
fdivrl
inc
mov
repz
add
jb
insl
dec
add
dec
sub
lea
pop
inc
pop
sub
jnp
aaa
push
pop
sbb
fwait
das
add
jmp
loope
xor
jae
and
repz
mov
je
and
lods
mov
push
rorb
cmpsb
daa
pop
or
mov
stos
jg
adc
mov
sub
dec
les
cld
mov
lea
aaa
cmp
adc
dec
mov
icebp
lret
iret
sar
push
rcrl
sbb
sbb
pop
shrb
call
hlt
add
cmp
add
add
jg
shrl
mov
addb
testb
in
js
xchg
gs
movsl
cli
xorb
push
cmp
add
ss
outsb
pop
test
in
add
pop
mov
jmp
loope
mov
ds
ljmp
ffreep
jmp
mov
mov
std
inc
inc
mov
orl
nop
cmp
fdivrl
cmpsb
add
test
mov
sub
jae
dec
icebp
mov
icebp
mov
mov
adc
dec
mov
add
jmp
jb
out
xchg
or
add
xchg
and
aas
jge
fldenv
xchg
fistpll
cmpb
mov
adc
or
and
adc
pop
push
mov
or
add
push
inc
fwait
outsl
adc
dec
add
xor
add
add
jmp
mov
cmp
pop
dec
cmp
adc
inc
mov
jl,pt
loope
sbb
popf
push
in
jp
cmpb
call
jmp
dec
pop
aam
mov
mov
js
sbb
icebp
pusha
push
mov
cs
pop
add
xor
gs
mov
sub
cmc
pop
mov
movsb
inc
stc
pop
xchg
loop
jo
loopne
movswl
xchg
jmp
mov
and
xchg
addr16
xor
or
inc
pop
jo
xor
enter
cld
movl
icebp
test
xor
movsbl
push
in
xchg
daa
subl
xlat
clc
pusha
dec
jmp
sub
sbb
pop
in
shrb
add
clc
adc
push
leave
xor
or
push
and
jmp
and
mov
adc
push
ret
jmp
push
inc
dec
in
lock
popa
mov
addr16
andl
add
popa
push
out
sub
call
aas
stc
jb
jbe
cmp
pop
lods
out
or
in
add
fidivrs
outsl
into
dec
push
xchg
neg
or
out
pop
pop
xor
pop
sbb
mov
jmp
je
cs
push
roll
mov
dec
sub
aam
or
adc
out
xchg
int3
pop
jne
add
subb
sub
cmp
rclb
push
stc
in
in
pop
stos
dec
shl
daa
push
xor
or
pop
xorb
cmpsb
push
movb
xor
loop
popf
and
lods
sti
mov
cmp
sub
fadds
jmp
push
sti
mov
lods
jp
mov
jbe
and
or
dec
jge
sbb
jl
or
xor
pop
mov
add
jmp
mov
subb
scas
iret
out
inc
push
jno
pxor
into
cmp
fists
cld
fstl
int
dec
movb
and
mov
pop
jecxz
repz
clc
dec
push
mov
in
and
jmp
jg
sub
cmp
add
sar
in
inc
popa
neg
mov
sub
inc
jl
clc
sub
das
cmpb
and
or
mov
int
xchg
aaa
loopne
xchg
xor
add
jmp
pop
adc
or
pushf
add
into
inc
daa
cli
cmpsl
jecxz
adc
and
sbbb
pop
pop
mov
mov
pop
mov
xor
lahf
inc
jmp
out
add
into
jp
push
pop
sub
and
sub
daa
ljmp
loop
mov
push
dec
sub
dec
daa
cmp
mov
loope
jmp
cli
xor
push
js
mov
xor
stos
cmp
xor
arpl
or
cmp
or
pop
inc
repz
lods
nop
adc
inc
cs
jns
das
in
loopne
sti
dec
and
imul
adc
js
loope
imul
adc
mov
daa
rolb
popf
daa
sub
pop
aaa
or
mov
in
push
adc
inc
cmp
add
or
mov
mov
mov
adc
lret
sub
sub
cmp
jmp
mov
int
mov
xor
shrb
and
pop
sub
pop
andl
inc
mov
jecxz
sbb
pop
add
test
pop
mov
int
pop
add
jp
pop
jmp
je
push
mov
adc
in
pop
dec
jp
mov
aaa
xor
xor
ret
in
sub
jns
hlt
rolb
test
push
jge
add
loope
outsb
and
mov
lret
push
push
push
into
iret
inc
cli
pop
pop
cmp
jecxz
push
loopne
in
lea
cmpxchg
std
xchg
cmp
jle
jl
test
shr
cmpsl
dec
push
repnz
mov
out
jmp
sub
mov
push
pop
shlb
cwtl
loope
xor
cwtl
dec
add
jl
push
add
or
je
xor
pushf
add
jns
sub
push
cmpb
arpl
sti
jp
and
jmp
dec
stc
scas
mov
outsl
xchg
mov
dec
insb
add
les
sbb
shll
rcrb
pusha
in
adc
ja
cs
pop
sub
lock
enter
mov
add
add
mov
cs
add
pushl
pusha
xchg
cld
nop
in
dec
imul
or
mov
jmp
mov
cmpsl
stos
pop
inc
inc
or
add
push
add
add
adc
dec
xor
xor
dec
repnz
cmp
add
dec
inc
sbb
xchg
das
pop
sub
cmp
mov
add
insb
sub
jne
and
lret
mov
push
mov
hlt
test
ret
jecxz
clc
ja
and
in
and
xor
push
add
cli
fdivl
dec
pop
mov
shr
stos
push
adc
lds
scas
mov
test
roll
or
push
add
mov
shlb
adc
movsl
add
xchg
jle
stos
and
cmp
repz
jb
push
dec
imul
xchg
insl
shrb
inc
jge
movsb
push
inc
sbb
fistps
or
jmp
fnstenv
push
pop
and
push
or
ds
das
bound
fadd
xchg
cli
or
mov
pop
cs
jecxz
mov
inc
out
cli
inc
sbb
or
es
xor
ficoms
fildl
movsb
je
jb
cmp
or
mov
push
push
jns
or
daa
pop
add
or
push
add
and
sub
cmp
push
add
sub
inc
mov
push
bound
jmp
nop
push
sbb
xchg
addb
arpl
cmpsl
sub
sti
push
push
popa
and
call
fistps
xor
arpl
and
xor
scas
int
xor
add
mov
repz
pop
in
dec
daa
pop
imul
dec
stos
mov
push
sub
loopne
cmpsb
loopne
mov
xor
movsb
aam
stos
repz
and
inc
hlt
xlat
adc
in
icebp
push
mov
or
test
push
add
ljmp
out
pop
pop
repnz
stos
dec
sti
nop
ret
adc
fld
or
pushl
mov
dec
movq
into
inc
pop
sbb
das
in
shll
push
push
mov
or
fbld
and
xchg
fstpl
addb
mov
pop
jae
pop
outsb
insb
push
rcrb
cmpsb
jle
leave
push
jno
loope
push
and
cwtl
push
push
push
push
andl
arpl
rcrb
jg
jnp
dec
xchg
dec
cmp
jne
dec
cmc
sti
jno
sub
neg
mov
ficoms
xchg
hlt
loop
std
or
jne
push
add
push
fld
and
mov
and
xchg
jbe
pop
cli
push
imull
mov
daa
adc
cmp
test
sub
jns
push
call
and
xlat
mov
cs
inc
pop
dec
popa
fwait
add
fiadds
mov
or
inc
ds
add
ret
jae
push
test
jmp
or
mov
cli
sbb
sbb
mov
jecxz
and
sbb
mov
ret
icebp
int
and
test
pop
pop
cmpsb
pop
and
les
push
int
aad
push
xchg
mov
mov
jmp
and
int
add
cwtl
pop
outsl
and
sub
add
or
pusha
aam
test
shl
cmp
mov
negl
sbbl
xor
lret
orb
jae
sbb
jecxz
es
xchg
xor
int3
mov
add
lods
jl
xor
add
gs
mov
int
inc
dec
movsb
nop
nop
or
das
jne
stos
sbbb
xchg
inc
or
push
push
lcall
xor
pushw
inc
mov
push
fsubrl
mov
or
push
inc
push
add
xor
je
cmp
cmc
popf
jo
lahf
fidivl
ret
cmp
sub
int
rcl
loope
mov
ja
pop
inc
clc
inc
lahf
ret
mov
jo
out
cwtl
or
aaa
addb
dec
dec
mov
xor
test
stos
push
es
in
sbb
cwtl
aaa
sub
or
or
push
adc
xor
xchg
dec
call
xchg
andb
add
mov
insb
add
push
andb
push
int3
lods
stos
jo
xchg
aam
arpl
into
daa
sbb
inc
stc
fistpll
inc
sbb
mov
cld
lods
pop
popl
iret
loopne
jle
clc
mov
mov
dec
int3
dec
dec
daa
inc
jbe
adc
and
popa
out
decl
xchg
and
cmpsb
out
aas
sar
test
mov
cmpb
jne
jae
hlt
decl
xlat
jb
inc
call
pop
in
in
into
add
push
adc
or
pop
mov
add
push
data16
and
lock
js
cmpsb
data16
test
roll
pop
push
inc
fldl
sbb
mov
push
in
nop
jnp
in
jb
ds
pop
or
test
sub
mov
rolb
insb
bound
pop
push
mov
sbb
mov
mov
and
adc
xchg
ja
cli
mov
inc
adc
cmc
subb
jne
cmpsl
mov
addl
insb
aaa
and
add
add
jmp
xor
inc
rol
lret
pop
dec
in
and
add
mov
fdivrs
jge
or
push
add
enter
fiaddl
inc
popf
jo
adc
mov
lret
jmp
cld
jne
pop
inc
dec
js
fists
out
jno
dec
push
or
stc
push
mov
inc
cmp
xchg
cs
cmc
aam
popl
mov
mov
cmp
adc
ret
jns
sbb
or
jmp
or
sub
push
inc
or
mov
mov
mov
push
pop
sbb
or
cmp
cwtl
jae
ret
test
push
repnz
leave
jecxz
or
add
loopne
add
sub
loop
pop
rorl
lds
ja
scas
or
and
out
das
data16
das
xor
cmp
mov
add
pop
add
pop
rcrl
and
cmp
in
rol
adc
das
popw
or
popa
and
in
pusha
subl
adc
mov
daa
fldt
jl
ret
and
dec
ficompl
or
aad
mov
and
add
lods
push
sbb
push
frstor
fs
inc
aam
or
cmp
xchg
push
push
cs
dec
lods
in
adcb
jmp
dec
add
jp
sub
pop
and
nopl
out
mul
jle
std
rclb
push
in
imul
mov
btr
jne
cmpsl
mov
push
fiadds
jmp
std
add
mov
fldcw
iret
mov
jle
adc
aas
add
or
cmc
lock
js
xchg
add
dec
inc
dec
mov
sub
or
pop
mov
call
das
enter
mov
imul
add
hlt
or
fiadds
sti
das
std
xchg
push
popf
flds
pop
cmp
mov
test
call
adc
jne
mov
in
or
push
jge
push
lods
sbb
cmc
cmpsl
je
mov
pusha
add
ljmp
insb
xor
pusha
cltd
dec
test
cmp
repz
mov
mov
and
orl
and
and
rcrb
cwtl
int3
jns
mov
in
popa
fs
xor
loopne
leave
rorb
scas
lock
pusha
shll
xlat
mov
jmpw
dec
sahf
cld
xor
divl
pop
jne
bound
scas
iret
mov
mov
and
pop
dec
or
insb
or
imul
cmp
insl
and
push
pop
sub
insb
pop
mov
xchg
add
jo
mov
add
inc
add
testb
test
or
pop
adc
add
les
adc
xor
mov
sbb
mov
mov
dec
movsl
outsl
flds
sbb
imul
push
add
xchg
stc
sub
scas
inc
test
mov
xlat
adc
mov
dec
xor
mov
test
xchg
mov
testb
inc
je
add
mov
inc
in
adc
mov
sub
aam
popa
push
add
mov
imul
push
add
lods
or
xor
jl
imul
ret
mov
iret
pop
push
lock
popf
mov
ja
outsl
sbb
jg
out
or
or
push
call
inc
adc
sub
add
lret
and
cli
add
repz
push
movsl
push
cltd
cmp
daa
sbb
mov
jp
pop
mov
das
xchg
pop
mov
jae
and
xor
aaa
add
and
or
adc
insl
sbb
or
adc
push
in
dec
test
cli
add
mov
popa
shl
xchg
mov
jecxz
jmp
push
pop
cltd
jo
jg
mov
pop
aaa
les
iret
add
shr
lcall
test
pop
lret
push
int
pop
mov
dec
push
or
pushf
sub
add
cmpsl
inc
adc
pop
popa
push
imull
jo
pop
adc
aam
outsb
pop
lock
sub
pop
out
xor
test
add
sbb
jmp
pop
pop
or
lret
sbb
js
out
lcall
lret
xor
push
jo
pop
xchg
jle
mov
test
xor
xchg
jbe
inc
pusha
add
lods
cmp
or
sub
sub
pop
xor
repnz
push
mov
jno
jmp
pop
mov
add
xor
mov
inc
inc
add
adc
push
push
jmp
fmull
mov
add
inc
mov
inc
inc
dec
push
inc
cmp
fidivrs
rolb
scas
push
jno
or
pusha
add
sub
aas
cmp
daa
clc
mov
pop
pop
into
push
in
push
push
pop
add
orb
dec
imul
xor
scas
mov
pop
pusha
dec
adc
xlat
mov
and
mov
inc
cmp
out
push
pop
jp
or
repnz
pop
aam
add
andl
mov
jno
pop
leave
rcrb
dec
fsubrs
daa
popf
add
xlat
adc
or
or
lea
shrl
in
in
shrl
or
ficomps
lret
shr
or
and
add
lock
push
dec
jp
cmp
jmp
mov
sub
xor
mov
sti
pop
jmp
lds
mov
mov
mov
fidivrs
fnsave
sub
stos
mov
xchg
in
sbb
jp
sbb
pop
jle
xchg
add
mov
mov
sbb
loop
jne
push
push
xchg
cmpsl
ja
out
cmp
lea
mov
xchg
outsb
in
xchg
shrl
cmp
stc
sub
cmp
sbb
xlat
jecxz
data16
cs
imul
loope
cmp
pop
add
push
pop
jmp
jge
jmp
and
xchg
pop
push
add
outsb
cli
add
mov
ss
dec
jo
sbb
or
rcrb
call
imul
shlb
or
repnz
xor
mov
xchg
add
mov
or
sbb
mov
mov
loop
lods
sbb
bound
mov
add
lahf
or
rcrl
jmp
xchg
and
push
or
or
nop
sub
mov
push
ret
sahf
xor
or
bound
pop
test
xchg
mov
cmp
scas
or
insb
and
sub
dec
mov
push
popw
xor
cmp
mov
jno
cmp
mov
scas
and
rcll
in
sarl
adc
out
mov
sub
int3
loopne
dec
inc
adc
inc
lods
gs
outsb
or
cmp
adcb
push
sub
add
imul
add
mov
add
pop
xor
and
xlat
jmp
and
sbb
fstpl
out
cs
insl
aaa
clc
mov
push
mov
mov
adc
push
and
inc
xchg
or
add
pop
cmpsb
jb
add
push
shll
lock
push
daa
fdivrs
test
sub
dec
lea
fidivrs
test
xor
in
loope
stc
push
sbb
sahf
rol
subb
cmp
loopne
add
outsl
sub
jl
sub
jle
adc
mov
sarb
das
mov
xchg
mov
jbe
sub
das
add
push
dec
rcrb
dec
inc
mov
popa
push
inc
and
lods
cld
mov
cmp
mov
shl
and
pushf
mov
pop
add
in
stos
in
sbb
push
cld
and
fiadds
add
hlt
jecxz
mov
push
dec
and
nop
mov
inc
adc
fwait
cld
movb
jo
mov
ds
sbb
xchg
orb
add
jge
dec
add
lret
mov
sbb
push
jb
mov
mov
pop
inc
cs
adc
ss
sub
or
fisubrl
adc
imul
test
sub
lea
xchg
imul
adc
add
nop
sub
das
and
mov
inc
cmp
add
mov
pop
xor
pop
lahf
adc
add
xchg
mulb
or
iret
dec
xchg
in
adc
test
mov
ja
aaa
jmp
mov
hlt
lcall
mov
imul
in
addb
xor
xchg
fs
inc
filds
mov
push
xlat
pop
adc
jmp
cmp
cmc
ss
cmp
dec
notl
adc
in
cmp
cwtl
xchg
jmp
push
jmp
push
inc
xor
cmp
cli
rcll
arpl
or
push
jbe
add
mov
pop
in
jnp
xchg
sbb
fs
inc
lret
sub
push
jmp
in
popf
inc
jne
sub
jmp
dec
in
inc
mov
or
adc
adc
inc
pop
notb
pop
xor
test
cld
outsl
push
nop
and
mov
pop
pop
add
rclb
aad
cmp
outsb
es
mov
xchg
and
es
or
stos
add
sub
pop
cs
ror
cltd
inc
jg
mov
jg
mov
push
sti
imul
lods
ljmp
jnp
mov
push
mov
cmp
sarl
sub
aas
xchg
mov
pop
rcl
ret
jbe
daa
icebp
jo
and
lret
or
or
cmp
rolb
insb
fcoml
dec
xchg
jg
add
insl
aad
inc
test
jmp
sub
push
gs
shlb
xor
addb
orl
mov
and
hlt
inc
cwtl
or
sti
and
sub
imul
push
push
dec
sbb
mov
push
icebp
and
or
in
pop
inc
add
or
push
and
push
incb
mov
les
shr
jmp
xchg
sub
icebp
cmp
add
aam
ret
inc
push
jmp
pusha
cli
fmuls
mov
pop
or
loope
sarl
lock
mov
orl
pop
negb
lock
mov
add
outsb
jne
idivb
lds
xchg
add
movsl
sbb
mov
pop
push
push
add
add
pop
mov
clc
sub
mov
shlb
add
imul
loopne
or
push
ljmp
mov
mov
movsb
dec
jb
and
mov
push
add
or
sub
jmp
xor
fdivl
mov
stos
sub
push
inc
mov
xor
aam
adc
test
mov
int3
jne
mov
popf
push
or
outsl
js
and
pop
add
mov
adc
cmp
int3
mov
out
and
pushl
shrb
arpl
fiaddl
dec
mov
push
mul
sbb
jno
xchg
mov
jg
add
or
add
sub
fcmovu
sbb
mov
adc
clc
jbe
sarl
pop
xchg
jmp
repz
test
lods
pop
mov
lret
stos
lret
adc
pop
fstl
jmp
and
mov
lock
fcomps
sbb
ss
dec
test
lock
pusha
push
pop
push
psraw
dec
in
das
mov
out
cmp
and
aad
inc
add
mov
ds
repnz
jge
adc
mov
mov
daa
jp
xchg
loope
mov
loope
nop
inc
cmp
push
add
cwtl
in
ljmp
andl
sbb
sti
pop
cld
push
rolb
xor
and
les
xchg
inc
mov
insb
adc
mov
js
rcll
and
enter
dec
roll
cmp
dec
mov
stc
xor
adc
repz
iret
mov
cs
repz
outsl
adc
xchg
push
pop
cmp
pop
adc
hlt
or
in
or
push
adc
adc
popf
call
inc
inc
das
cld
enter
les
mov
push
xor
mov
inc
imul
inc
add
jmp
inc
dec
mov
arpl
push
rcrl
cmc
xor
sbbl
xchg
aas
clc
loop
popf
cmp
rcrb
or
jne
xchg
adc
or
pop
cmp
adcb
pop
add
loope
mov
inc
adc
push
dec
popa
add
sbb
push
sbbb
inc
pop
dec
es
negb
cmp
movsl
push
jecxz
dec
jo
and
rcll
test
adc
mov
and
jns
adc
in
arpl
xchg
addr16
aas
push
cmpsb
rolb
je
imul
cmp
dec
lods
cli
mov
adc
lcall
dec
int3
xor
pop
add
push
jle
mov
jle
add
jp
push
movsl
addl
sub
repnz
lea
mov
pop
pop
sub
mov
jb
ja
cld
cmp
or
mov
jg
add
testb
sahf
ds
jmp
and
adc
pop
inc
pop
mov
gs
repnz
js
pop
xchg
pop
std
cs
js
xor
add
stos
div
enter
addr16
ret
and
sbb
sub
ljmp
mov
xlat
push
fiadds
out
xor
out
loope
cmp
mov
or
and
rcr
xchg
push
xchg
adc
lret
xchg
pop
test
lret
movsb
or
cmp
adc
add
loopne
push
push
sbb
jmp
notl
call
das
push
int
xchg
cmpsl
or
xchg
mov
xchg
or
iret
adc
mov
mov
rorl
jne
add
lods
int3
xlat
out
xchg
xchg
add
fnsave
cmp
cld
and
jae
es
lahf
call
sbb
cmp
fwait
inc
push
push
and
or
push
roll
ljmp
mov
xchg
pop
dec
xchg
add
adc
into
mov
adc
sub
add
rcrb
inc
or
ljmp
and
mov
push
flds
imul
psubw
pop
xor
cmp
into
cwtl
dec
nop
std
sub
in
cmpsl
seta
call
pop
cmp
or
dec
pop
pop
jmp
push
lahf
sahf
outsl
pop
xlat
adc
je
iret
stos
ffree
jns
xor
mov
repnz
test
sbb
mov
test
and
adc
repnz
int
or
ret
ljmp
push
jbe
ret
add
add
xor
xor
xchg
inc
gs
xlat
bound
or
mov
out
clc
dec
daa
mulb
xor
notb
rcrl
inc
inc
or
push
negl
cs
push
ret
movsb
mov
ficoml
push
mov
lods
jbe
push
adc
inc
ds
data16
shll
jae
in
xor
or
icebp
idivl
jmp
pop
sub
sbb
jmp
xor
mov
or
mov
std
cs
out
mov
dec
lods
lea
cmpsl
pusha
in
sub
clc
inc
cmpsb
aad
sub
ds
testl
repnz
out
mov
pop
lahf
cltd
or
ljmp
leave
loop
mov
cli
or
call
loope
sub
xchg
or
pusha
inc
adc
rcrl
and
push
add
mov
sub
daa
and
jmp
jns
mov
mov
pop
adc
inc
loopne
dec
out
iret
add
jg
or
push
push
ffree
ss
pop
lahf
cmc
sbb
or
push
push
lcall
cld
hlt
mov
fnstcw
fs
add
js
add
ja
mov
pusha
adc
jnp
ficompl
into
out
adc
lds
ljmp
sbb
mov
repz
jg
sbb
loopne
dec
dec
rol
push
push
out
sub
int
jmp
push
mov
xor
imulb
ds
and
rol
jmp
push
xlat
push
and
sarb
in
and
test
aas
pop
jecxz
pop
cli
shl
fiaddl
fldcw
cmc
mov
sbb
daa
jns
sbb
fnstcw
outsl
cmp
lret
cmp
repnz
insl
xor
fwait
sarb
sbb
dec
adc
not
in
testb
nop
push
gs
out
lock
stc
data16
sbb
mov
push
int
test
mov
aam
push
xchg
sbb
sub
test
cld
jns
or
ret
call
pusha
jmp
fst
inc
jmp
push
in
sbb
inc
rol
fstl
loop
push
push
sbb
jmp
jl
mov
or
call
mov
rclb
jmp
push
leave
ret
xchg
push
ja
jae
inc
xor
daa
xor
jl
out
ss
arpl
xchg
in
add
sub
pushf
test
jp
jb
or
popa
daa
pushf
adc
decl
cmp
aam
sbb
xor
xchg
mov
out
sub
adc
add
ljmp
mov
or
repnz
sbb
pop
jmp
xorb
mov
lods
sbb
add
outsl
in
xor
or
cs
pop
or
add
leave
pusha
sub
adc
or
xor
mov
shlb
fimull
jae
stos
movsl
mov
dec
mov
aam
test
xchg
jge
cs
sub
add
sbb
or
add
jmp
inc
push
xor
scas
mov
dec
ffree
adc
cmp
xchg
stc
cmp
adc
sub
mov
add
sub
push
mov
or
cvtps2pi
out
or
out
mov
xchg
jmp
xor
dec
hlt
ljmp
pop
addr16
add
pop
shlb
sbb
subl
jl
lret
inc
inc
mov
test
add
sub
push
cli
xchg
out
add
mov
movsb
jge
adc
cmp
scas
fldcw
dec
popf
sbb
icebp
xchg
xor
jge
js
push
mov
adc
add
add
int
mov
cmp
mov
or
sbb
jl
in
sti
jmp
mov
push
lret
xchg
pusha
mov
xchg
mov
jne
push
fnsave
nop
or
js
fbld
rol
or
pop
cmp
mov
sbb
sub
insl
stos
or
sbb
and
add
pop
inc
push
push
orb
mov
push
xlat
cmp
sbb
leave
lret
sub
lret
nop
arpl
cs
push
dec
js
imul
pop
addr16
lock
xlat
xor
push
or
xor
js
cmc
les
push
sbb
pop
sub
add
mov
jmp
adc
dec
cmpsb
rcrb
or
add
mov
xor
pop
push
pop
scas
jae
rolb
mov
adcb
xor
aaa
repnz
push
xchg
mov
lock
xor
sahf
add
int
mov
test
lock
push
jmp
jo
pusha
pop
add
fcoms
cltd
dec
mov
daa
lods
pop
jno
jmp
push
add
and
rcrl
cwtl
lock
lcall
insb
cs
mov
lock
xchg
push
cmp
fiaddl
cmp
push
scas
loopne
push
jmp
jmp
outsb
daa
insb
push
jge
lret
scas
jnp
loope
cmpxchg
cmp
mov
pop
ds
inc
adc
add
lret
mov
jg
pop
or
dec
dec
inc
jecxz
sbb
movsb
test
andl
flds
jnp
dec
addl
mov
adc
stos
inc
scas
or
push
popf
or
jge
mov
pop
cmp
in
inc
add
mov
pop
out
pop
adc
mov
or
cli
shl
repz
repnz
pop
pop
mov
jg
jmp
xor
xorb
add
jmp
idivb
ret
dec
push
pop
mov
mov
loope
mov
aas
dec
xor
bound
lret
inc
adc
cwtl
xor
mov
enter
pop
psrld
mov
and
pop
mov
xchg
ret
adc
stos
mov
push
push
push
mov
jge
mov
and
stc
push
subb
loope
clc
repz
aaa
call
pop
pop
and
jmp
and
or
jb
mov
and
or
push
sub
jnp
pop
push
mov
fisttps
add
add
jl
lds
push
mov
cmc
and
cmp
pop
pop
sub
xchg
xor
push
add
test
fldl
jp
and
or
pop
or
aam
jge
rolb
pop
pop
xchg
sti
mov
cld
and
sbb
mov
insb
xor
icebp
cmpsl
out
loopne
notb
in
testb
mov
sub
imul
aas
shlb
mov
jnp
clc
and
adc
out
mov
inc
xchg
shll
cmp
and
adc
jge
ds
or
cli
sub
push
dec
and
jno
sub
push
mov
and
push
and
enter
or
ja
cmp
xchg
or
xor
cwtl
jl
roll
or
cmp
ljmp
jmp
mov
mov
cmp
push
mov
std
cld
shr
imul
adc
stc
sub
popf
sub
and
mov
add
dec
inc
inc
adc
movsl
mov
pop
mov
lods
push
pop
hlt
cmp
xor
jmp
sysenter
sub
adc
and
push
adc
inc
mov
loop
repnz
icebp
das
push
fcomp
sbbl
stc
pop
pop
stos
mov
add
add
ss
push
aam
add
icebp
mov
cmpb
rorl
lret
add
jge
and
rclb
mov
imul
xor
sub
ret
add
push
add
inc
test
call
sub
or
js
orl
or
pop
mov
shlb
jmp
push
push
xchg
xor
push
add
mov
lods
ja
sub
inc
cwtl
pop
add
int3
jmp
into
push
push
sbb
push
mov
jbe
pop
out
cmp
std
jl
and
fiadds
ret
pop
mov
jo
andb
mov
or
mov
cmpw
mov
dec
dec
into
or
movsb
ficoms
mov
movsl
adc
rclb
icebp
mov
adc
jmp
push
scas
pop
ficompl
add
arpl
mov
jmp
pop
dec
sub
fisttps
push
cli
addr16
rcll
subb
jmp
jge
movsl
mov
push
pop
test
pop
jle
xor
repz
jne
cmp
pop
sub
push
xchg
aad
aaa
push
repz
lret
orb
lock
pushl
stos
cmp
shr
adc
std
sub
ret
jmp
in
mov
jle
add
int3
adc
jne
mov
jbe
out
testb
sarl
cmc
adc
inc
rorl
add
into
popa
cmp
pop
subl
outsb
popf
mov
fsubp
pop
cmc
insl
sbb
jmp
mov
mov
mov
das
push
sbb
mov
sub
jle
or
loop
decb
imul
sub
push
mov
aam
add
add
xor
dec
sbb
repnz
lret
or
out
cwtl
push
add
out
dec
push
xor
or
push
ret
notl
hlt
pushf
mov
xchg
or
jnp
and
xor
push
sub
clc
pop
cmpsb
loopne
daa
add
push
add
cli
or
jmp
pop
sub
sbbl
int3
or
sbb
xor
loope
dec
pop
bound
mov
cmp
lods
push
div
pop
push
xor
jl
push
mov
shll
mov
mov
push
stc
sti
icebp
xlat
in
sbb
inc
ja
mov
pop
add
ret
or
hlt
jo
or
ljmp
mov
dec
test
or
je
loopne
aas
add
dec
aam
out
pop
fs
jl
pushf
aad
xor
jns
or
out
mov
movl
inc
call
or
pop
jo
loope
push
mov
adc
cld
icebp
sahf
fwait
pop
push
dec
lcall
xchg
cltd
stc
cld
aas
das
lret
aam
out
pop
or
out
bt
pop
dec
cmp
ja
test
aam
cld
dec
and
push
inc
and
jge
test
pop
dec
sarb
cs
in
andb
sbb
jbe
arpl
and
cld
or
xchg
dec
out
xorl
enter
sub
sahf
out
bound
push
pop
push
sub
or
xor
arpl
arpl
js
adcb
inc
pop
mov
sub
hlt
xchg
out
fwait
inc
add
cwtl
add
imul
in
xor
dec
lds
addr16
xor
das
movlps
aam
jb
enter
cmp
or
pop
cmp
pop
dec
lret
pop
test
jp
scas
xor
call
outsl
inc
pop
push
gs
aas
cwtl
lods
pop
pop
in
stos
jo
repnz
daa
push
cmp
push
adc
push
sub
sbb
or
test
mov
outsl
sbb
xlat
push
jae
sbb
insb
pop
lods
mov
cmp
or
sbb
dec
es
call
add
ss
mov
adc
and
int3
adc
nop
nopl
movl
jmp
cwtl
stc
out
cmp
enter
cwtl
sub
mov
jne
mov
bound
mov
je,pn
out
or
loope
sub
inc
lret
leave
mov
pop
push
add
fdivrp
and
adc
into
imul
cmp
fsubl
iret
daa
or
mov
mov
test
cli
ja
add
addl
dec
mov
cmp
push
push
or
sub
sbbb
ja
lock
push
pop
inc
fisubl
ja
pop
xor
out
imul
mov
adc
cld
cmc
jp
aam
js
out
mov
push
shll
insb
or
shr
arpl
add
jmp
jns
push
xchg
clc
sti
call
jmp
aad
out
lret
ljmp
shll
insl
mov
imul
xor
cs
jmp
daa
pop
scas
je
or
pop
int3
test
xchg
sub
mov
push
push
xchg
shr
loopne
pop
lret
mov
je
js
repz
pop
orb
push
cmovno
pop
leave
in
ret
das
adc
scas
idivb
ret
jbe
mov
mov
xor
add
push
popf
dec
jmp
cmp
daa
lahf
dec
stos
pop
adc
cmp
je
outsb
lcall
gs
push
lods
js
dec
or
test
jmp
inc
ffreep
lods
test
jnp
out
int3
sar
bound
sbb
push
in
negb
add
pop
add
adc
arpl
push
fmull
add
xor
xchg
sbb
pop
xor
and
sahf
xor
fcomps
mov
ja
or
jo
jmp
xor
in
add
push
push
mov
inc
xchg
js
js
mov
cltd
mov
hlt
jecxz
or
xor
inc
hlt
inc
pushf
xchg
mov
or
xor
dec
std
popa
test
pop
ljmp
scas
dec
xchg
setg
and
int3
pushf
xor
das
fs
scas
cmp
jmp
mov
rcrb
rcl
add
out
aaa
xor
push
test
and
lods
push
ffree
push
xlat
sub
sub
sub
in
scas
sahf
dec
add
push
pop
pop
and
cld
mov
push
fildll
jge
repz
outsl
int3
jmp
push
sbb
cmp
test
push
scas
sub
adc
idiv
push
adc
mov
xlat
push
pop
jbe
divb
fiadds
roll
leave
inc
xor
outsl
add
mov
add
pop
dec
sbb
dec
lahf
loopne
xchg
stc
cmpl
out
out
xchg
add
and
inc
push
cltd
add
dec
sub
jle
insl
into
pop
dec
ret
loopne
das
jae
daa
sub
sbb
or
xchg
dec
nop
fimull
test
test
in
pop
dec
sub
bound
les
pop
data16
outsb
or
inc
or
sub
aaa
outsl
cld
mov
xchg
jl
pop
dec
adc
aad
mov
or
jmp
add
rclb
dec
pop
pop
adc
xchg
add
jge
mov
inc
pop
jbe
nop
adc
ret
jmp
lret
jl
jo
lods
sbbb
xchg
jle
pop
es
push
mov
imul
mov
frstor
jb
sub
pop
aas
dec
jo
or
outsb
mov
xchg
dec
mov
jl
call
ds
adc
pop
lret
lea
adcb
shrl
jb
pop
lods
sub
inc
sbb
mov
add
sbb
mov
mov
cwtl
jmp
add
arpl
or
ljmp
and
inc
mov
xchg
or
outsb
or
stos
stc
outsl
out
lret
jg
test
cmpsl
sbb
jge
outsl
dec
jge
xchg
dec
insl
repz
inc
add
sbb
push
rol
ret
sbb
int3
xchg
push
out
jno
mov
cld
in
mov
loope
sub
pop
xchg
hlt
jmp
lods
fistps
or
in
mov
iret
add
popa
lcall
data16
sbb
scas
jmp
loopne
push
mov
push
aaa
rcrl
fstps
adc
mov
adc
or
push
adc
pushf
imul
loop
lahf
mov
pop
mov
shlb
movsb
jecxz
or
jmp
dec
mov
pop
pop
jnp
sti
add
cs
popa
dec
add
sbb
sub
push
jne
sbbl
add
jl
adc
cmp
lods
out
mov
cs
adc
sub
sti
or
repnz
in
call
addl
pop
popf
cld
xor
insb
repz
in
call
daa
pop
in
jg
add
aaa
mov
cld
mov
leave
push
sbb
nop
sahf
push
mov
imulb
sbb
or
insb
lock
pop
mov
mov
lock
jge
les
and
shll
xchg
cld
popl
rolb
cld
lods
lds
sarb
into
insb
pop
popf
push
loope
pop
filds
push
loopne
int
mov
push
ja
lods
xor
lock
mov
aas
add
out
stc
push
push
adc
int3
xchg
xchg
cmp
mov
sbb
pop
stos
jl
jmp
mov
xchg
adc
imul
jns
cmp
ret
mov
lock
add
mov
push
mov
sbb
cwtl
aam
je
js
sub
shlb
jp
push
test
jle
fwait
cmp
xlat
stc
mov
adc
push
adc
mov
in
cmpsl
cmpsb
cwtl
add
loope
push
and
xor
add
or
nop
cmpsl
fbld
lods
data16
mov
inc
jecxz
arpl
push
pusha
xor
fs
rcrb
in
scas
inc
ljmp
jle
testl
jmp
repz
ljmp
inc
pop
stos
add
push
sub
add
mov
jp
sub
add
push
nop
sub
std
popa
cs
scas
xchg
add
xchg
rcrl
fnsave
adc
rorl
and
jle
pop
push
and
stos
in
mov
popf
dec
mov
ret
jl
pop
or
popa
hlt
push
gs
cli
or
cmp
mov
lods
xchg
add
sub
js
jmp
rolb
add
push
add
inc
add
in
bound
mov
push
push
fs
xchg
sub
push
add
mov
jns
dec
aad
add
mov
jbe
push
movsb
mov
addl
cs
add
sub
cmp
jae
jb
pop
mov
mov
es
add
cli
rclb
pop
sub
and
pop
inc
js
push
jmp
mov
addl
jmp
pop
lds
fbstp
sbb
pop
mov
jb
sbb
and
pop
adc
fidivl
or
dec
xchg
subb
shrl
enter
call
jmp
repz
add
or
pop
stos
sarl
adc
xor
dec
xor
mov
scas
add
mov
inc
and
jns
jge
mov
daa
sub
jge
push
ret
add
loop
jl
stos
inc
mov
xchg
loop
lods
jne
out
mov
mov
dec
bound
inc
loopne
dec
sti
andb
sub
push
mov
mov
movsl
sbb
neg
lahf
rclb
jbe
cmp
push
lods
add
fidivs
pop
jbe
int3
inc
ljmp
std
jmp
stos
fbld
daa
or
dec
movsb
and
pop
sahf
cmp
stc
repz
dec
cmp
or
imul
add
jmp
shr
jg
inc
sahf
add
rol
outsb
mov
fcoms
mov
neg
push
and
stc
and
jnp
arpl
shrb
mov
mov
lret
xchg
fistpll
test
fidivs
out
lret
dec
loop
push
nop
pmullw
push
and
cmp
pop
add
mov
rcll
pop
sub
ljmp
cmpsl
pusha
mov
push
cltd
in
inc
daa
lcall
add
test
push
bound
cltd
pop
pop
and
jmp
or
out
test
jae
sbb
jl
pop
insl
push
in
or
jns
pop
or
xor
or
jno
sub
movsb
sub
add
test
dec
inc
mov
inc
int
push
arpl
mov
rep
lahf
decb
xchg
je
popa
push
push
cwtl
loopne
pop
movsb
notb
movsb
shl
and
mov
test
sbb
dec
push
pop
jmp
push
aaa
insl
jmp
mov
push
add
int
in
mov
jge
add
pop
pop
push
pop
xchg
jle
push
dec
mov
div
push
push
jmp
mov
pop
stc
adc
ljmp
add
adc
sub
les
enter
cmp
lods
mov
mulb
jge
lods
test
mov
add
loopne
mov
rcrl
movsb
xchg
call
adc
inc
adc
xchg
and
pop
mov
cmpb
and
cmp
aam
js
test
inc
int3
mov
and
adc
jmp
jne
xor
mov
xchg
dec
out
and
or
lods
pusha
popf
sti
in
jno
or
add
aas
hlt
aas
mov
sub
movsb
addr16
mov
pushf
cmpsl
push
test
mov
or
and
cmc
clc
sub
stos
pop
mov
push
jle
add
inc
in
jl
ja
int3
cmp
jae
js
in
or
mov
xor
mov
fildl
mov
sub
mov
mov
mov
clc
fistl
push
rorl
lds
mov
repz
cmp
fisttps
shrb
mov
cmp
dec
ds
icebp
inc
sub
in
pusha
push
cld
cmp
add
sbb
ficompl
or
dec
jge
xor
xchg
push
dec
clc
cmp
push
imul
xchg
cmp
cwtl
dec
pop
es
lods
mov
stos
icebp
in
scas
adc
mov
jo
adc
pop
adc
xlat
mov
arpl
rcll
fwait
mov
xchg
push
mov
push
mov
cmpsl
xchg
data16
pop
sub
in
shll
cmpsb
testb
mov
in
mov
scas
mov
jmp
dec
xor
sub
or
shll
ret
frstor
aas
push
xchg
adc
pop
and
pusha
xchg
shll
es
subb
scas
inc
psubd
mov
sub
movsl
ljmp
add
out
xchg
jl
xor
mov
sub
adc
mov
cmp
and
mov
xchg
pop
sbb
mov
mov
adc
push
sbb
inc
icebp
sub
jo
loop
shll
sbb
mov
mov
push
jmp
popa
jmp
shll
ret
or
pop
js
pop
imul
add
call
lcall
sub
mov
call
sub
cs
jmp
dec
dec
das
and
fcmovnbe
or
cli
aaa
add
cmpsl
test
or
push
add
dec
push
or
imul
pop
inc
out
shlb
jns
adc
pop
les
rcrb
aam
out
cs
sahf
push
mov
subb
mov
test
lds
outsl
sub
movsl
fneni(8087
or
inc
pop
push
inc
xchg
mov
or
sar
fmull
in
jmp
pop
xlat
or
inc
stc
shlb
mov
mov
mov
pop
push
iret
mov
and
xchg
int3
xchg
or
cmpsb
loop
call
mov
lret
push
push
xchg
jecxz
stos
add
fidivl
imul
sub
into
test
xlat
push
mov
xorb
xor
and
jae
fcoms
aaa
or
push
or
mov
push
repnz
stos
in
mov
push
sub
ljmp
mov
add
sub
jle
sbb
pop
sub
xchg
leave
and
mov
icebp
xchg
push
push
mov
sbb
in
inc
add
rcll
insb
mov
nop
inc
xor
and
sub
sub
divb
xor
movsl
xor
pop
and
sub
adc
test
add
and
mov
into
jbe
add
adc
mov
adc
ffreep
inc
in
xor
xchg
push
pop
das
imul
add
shr
mov
pop
xchg
xlat
inc
std
ss
mov
in
out
inc
mov
pop
pop
dec
aad
fnstsw
loopne
mov
dec
mov
mov
fwait
lahf
or
sbb
xchg
inc
mov
shll
inc
push
push
shl
lods
test
fs
add
pop
push
xor
dec
cwtl
ja
decl
daa
addl
ret
pushf
mov
dec
mov
and
push
lret
add
push
mov
sarl
stos
mov
jle
jae
dec
xchg
push
loope
add
push
xchg
push
test
push
push
push
rorb
adcb
push
orb
call
jmp
jne
in
inc
ljmp
mov
or
in
imull
test
push
jno
in
xchg
pop
ljmp
outsb
aad
mov
popa
aad
sub
add
push
cltd
push
add
pop
loope
or
rclb
int3
or
rcll
push
clc
xor
sub
xchg
push
push
pop
inc
xchg
mov
and
or
shl
mov
inc
loopne
xchg
inc
xchg
out
ret
jbe
adc
add
jl
push
dec
loopne
rclb
mov
pop
push
test
sub
mov
outsb
sub
mov
jp
push
nop
sub
ret
or
jns
mov
mov
test
adc
aad
and
pop
hlt
mov
aam
out
sbb
or
dec
inc
stos
push
mov
cmp
das
movsl
cs
and
out
ss
jne
mov
pusha
mov
add
sub
jno
and
lahf
mov
lods
inc
dec
fldl
shrl
cmp
pushf
push
adc
xor
sub
add
inc
xlat
test
call
xchg
pop
in
arpl
mov
sbb
jne
push
ret
xor
sti
or
mov
sub
xor
adc
sarl
mov
mov
pop
sub
cmp
or
test
xchg
out
notb
clc
xchg
test
mov
pop
mulb
or
xor
xchg
pop
push
xor
cmc
mov
push
std
imul
jnp
jne
inc
data16
mov
or
js
or
add
shlb
add
xor
test
mov
cmp
inc
dec
adc
sub
inc
or
dec
push
sahf
divb
jne
mov
fsubrl
jns
jo
hlt
xchg
in
movsl
jbe
scas
scas
mov
rep
or
popa
pmulhuw
js
inc
add
jo
les
mov
push
pop
inc
mov
add
adc
inc
test
cli
jne
and
push
jecxz
pop
and
mov
int
cmp
insb
or
or
pop
bound
pop
movzwl
test
ja
das
xchg
adc
sub
std
push
hlt
loope
mov
sbb
push
mov
jbe
rclb
aaa
pop
testl
or
cmp
add
dec
add
xchg
mov
mov
shrl
hlt
cwtl
cmp
inc
cmpsl
fmuls
add
xor
das
dec
pusha
mov
loope
pop
jmp
fbstp
loopne
outsl
and
push
lret
or
mov
shlb
cli
and
clc
xchg
les
mov
ljmp
scas
mov
pusha
mov
xor
cli
out
or
and
xchg
pop
in
push
mov
adc
or
ret
mov
out
xchg
and
int
push
mov
add
push
adc
es
dec
xchg
and
add
pop
push
stc
push
imul
sub
xchg
and
movd
mov
or
test
subb
adc
shl
jmp
adc
ret
adc
rcrl
out
jno
push
rolb
push
jle
pop
xorb
pop
imul
pop
sbb
push
into
subb
and
mov
push
repnz
and
jno
and
clc
scas
call
mov
adc
sub
pusha
mov
adc
mov
xchg
or
cmp
jno
outsb
add
mov
mov
pop
xchg
orb
jmp
dec
sub
add
push
add
sbb
mov
inc
fisttpl
int3
popf
and
lods
adc
dec
add
and
pop
jl
daa
mov
mov
das
mov
xchg
adc
jae
hlt
ret
and
js
or
dec
mov
pop
push
or
inc
call
cwtl
bound
and
sub
jg
jae
lds
call
or
mov
icebp
inc
add
repz
pop
popf
or
test
icebp
mov
fistpll
icebp
lahf
add
pop
div
sbb
xchg
mov
jae
insl
in
cmp
xchg
sub
scas
push
mov
adc
jl
nop
call
sbb
scas
stos
test
leave
xor
xchg
push
jmp
mov
fstpt
leave
cmp
lock
pminub
or
xlat
aad
aad
push
mov
sub
addl
aas
movsb
je
cmp
in
push
rclb
addr16
ja
add
arpl
ret
lret
sub
pop
inc
jecxz
jo
add
shll
in
xor
or
mov
add
out
xchg
insb
push
push
push
js
orb
push
adc
mov
mov
add
lret
movsb
iret
pushf
jb
pop
out
bnd
in
mov
imul
push
pop
jmp
and
stc
popf
add
loope
int
aam
lea
push
add
xchg
sbb
and
int
arpl
add
shr
out
sbb
mov
gs
xchg
sti
xor
jns
dec
push
ret
jp
push
cmpsb
scas
fmull
int
jb
data16
insb
js
pop
mov
mov
ss
pop
or
js
pop
jecxz
jnp
jl
aad
xchg
das
fdivl
add
add
mov
shll
or
mov
add
add
lock
cmp
rcrb
aad
scas
in
fldt
push
adc
adc
hlt
dec
adc
inc
or
push
lret
push
je
or
popa
add
outsb
jo
insl
sbb
or
xchg
sbb
pop
add
rorb
jmp
push
xchg
sub
sbb
pop
or
test
pop
adc
push
aad
cmc
ja
jae
add
push
push
or
jno
jnp
cmp
dec
jne
cli
pop
mov
mov
movsl
dec
adc
mov
mov
jno
pop
lret
cs
inc
push
hlt
xchg
push
push
les
ljmp
aad
ss
gs
insb
fwait
add
sub
bound
ljmp
add
data16
sbb
sarl
insb
aas
int3
push
or
add
or
inc
out
mov
push
sbb
xchg
push
scas
or
xorl
push
inc
cmp
and
push
pop
jmp
fucomip
ljmp
dec
ret
fs
mov
and
add
mov
faddl
shll
iret
mov
subl
adc
adc
dec
in
aam
iret
fidivrs
mov
add
sub
fldl
notl
rcrl
push
shlb
movsl
std
movsl
call
sub
sbb
jo
jbe
pop
out
jmp
xor
sub
sbb
ja
xchg
mov
jb
mov
jbe
dec
not
rol
xchg
sbb
mov
and
inc
cmpsb
mov
jmp
xchg
leave
jp
addl
rcr
inc
adc
and
xchg
adc
aam
add
jmp
sub
jns
add
dec
ss
les
es
bound
in
jno
add
sub
or
nop
add
cs
inc
mov
pop
lods
test
inc
mov
int
dec
mov
pop
sbb
mov
jg
dec
bound
inc
aad
test
sbb
jmp
cmp
sub
fidivrs
repz
jne
repnz
mov
in
mov
cmp
pop
sbb
adc
nop
pop
inc
cmpsl
sub
or
jecxz
push
push
aas
dec
jbe
cmp
xor
inc
mov
or
push
aad
imul
lods
and
pop
pop
das
jl
pop
add
jbe
add
addr16
add
subb
push
ds
mov
add
sub
inc
sub
mov
daa
cmc
adc
inc
jg
cmp
ja
sbbb
xor
arpl
or
cmp
loope
popf
inc
inc
push
push
lret
outsl
add
and
rorb
lock
cmp
push
loope
cmp
lods
repnz
or
jnp
out
mov
jge
sub
mov
push
push
pop
std
into
loopne
mov
jnp
test
cmc
add
cmp
add
sbb
pop
pop
repz
out
inc
test
mov
fildl
outsb
lret
enter
sbbl
loop
add
nop
inc
or
and
adc
push
pop
dec
sub
test
mov
mov
add
xor
dec
punpcklbw
sub
or
pop
add
in
fstps
lods
jmp
push
mov
cld
gs
or
jmp
les
fisttpll
push
cwtd
adc
ds
and
je
aas
mov
out
inc
jnp
or
add
push
mov
adc
lret
test
std
call
mov
sub
adc
dec
add
lret
jge
bound
jmp
xlat
mov
dec
xor
mov
ja
pop
incl
arpl
inc
xor
push
push
jmp
cld
mov
sbb
sti
xor
mov
loop
je
jle
negb
out
cs
addr16
mov
ss
mov
pop
ljmp
mov
pop
ret
sbb
push
mov
inc
mov
fldenv
arpl
loopne
test
cmp
mov
jns
pusha
in
push
orl
adc
daa
stc
popf
rcr
add
clc
add
cld
aaa
out
es
lods
lods
std
xor
fildll
pushf
test
inc
xchg
push
cld
pop
push
mov
ret
push
int
bound
jnp
push
jmp
mov
or
sbbl
add
pop
and
sub
int3
sub
adc
orl
fstl
mov
jb
inc
jo
add
and
pop
adc
mov
mov
dec
mov
push
adc
push
push
scas
push
inc
push
lods
xchg
pop
ljmp
fldcw
and
cltd
pop
shl
xor
push
jg
pop
ljmp
rclb
mov
mov
mov
inc
jno
pop
push
test
add
ljmp
je
pop
mov
fisttpll
adc
rorb
fmul
and
xchg
adc
js
add
dec
mov
dec
xorl
add
mov
add
int
jmp
pop
mov
cmp
cltd
daa
and
fsubl
je
xchg
or
out
add
mov
std
lahf
pushf
movsb
movsl
pop
pop
mov
js
jno
sbb
adc
mov
movsl
pop
cmp
repnz
adc
js
testl
and
jl
iret
mov
ja
xchg
or
add
imull
push
sarb
pop
jle
adc
fsubrl
pop
inc
add
push
movsb
lret
add
xor
and
imul
shll
jmp
xor
in
inc
and
vpsllw
lret
out
ja
loop
outsb
xchg
int
sub
jo
jmp
adc
jae
or
loopne
xor
scas
mov
xchg
jo
jo
jns
cs
das
pop
mov
es
push
icebp
jnp
xor
fldt
adc
dec
pop
jmp
enter
jbe,pt
sbbl
sub
jge
push
stos
test
out
sub
inc
test
pop
out
repz
mov
mov
xchg
fstps
popa
jmp
mov
push
shr
adc
jae
aas
dec
jl
lea
cmpsl
mov
mov
add
scas
or
fldl
into
or
pushf
ljmp
fisttpl
jo
cltd
xchg
repnz
and
mov
push
push
fsubl
xor
add
sti
or
and
or
sahf
push
inc
pop
cmp
or
push
mov
pop
sti
mov
pop
sub
inc
add
inc
sub
or
xchg
xchg
mov
jecxz
push
cmp
rcrb
push
and
inc
push
mov
fwait
sbb
or
jmp
jp
cld
stos
lock
pop
dec
ds
loopne
into
and
imul
test
movsb
std
mov
cmc
iret
stc
cmc
je
pop
pop
push
mov
jmp
jno
fistps
das
mov
out
jp
push
or
inc
cli
mov
dec
test
in
mov
fs
lods
push
pushw
xchg
xchg
lods
stos
test
std
pop
xchg
outsl
sarb
lock
push
insl
rcrl
in
mov
lock
add
leave
sbb
cmp
add
cmp
das
not
dec
inc
inc
and
mov
jo
cli
add
add
nop
das
pop
sbb
lods
and
or
jmp
ret
sbb
adc
loop
mov
sub
movsb
add
or
jmp
jae
ja
mov
mov
adc
aas
es
sti
sub
les
fimull
stos
sub
imul
outsl
add
cmp
stc
mov
and
out
or
pop
or
sbb
or
pop
push
ffreep
adc
pop
jmp
icebp
and
out
psubb
and
pop
sahf
mov
jmp
rorb
add
xor
mov
push
add
je
and
hlt
mov
jge
jp
dec
mov
mov
pop
push
pop
ljmp
clc
jge
icebp
cmpsl
aaa
xchg
add
loope
jp
pop
pop
daa
and
int3
cmpl
jmp
adc
sbb
out
sub
les
movl
pop
mov
and
add
ja
cmc
pop
rolb
cmpsb
incl
add
jmp
jp
and
arpl
jne
inc
bound
lahf
adc
out
pop
sub
cmp
adc
test
js
pop
jnp
jmp
adc
sub
push
mov
push
stos
add
sub
stc
ret
adc
adc
roll
pop
xchg
not
aaa
addl
loop
xchg
fwait
nop
pop
dec
mov
or
fidivs
or
rcll
insl
xlat
mov
push
pusha
inc
not
rolb
mov
or
clc
pop
fnstsw
dec
ljmp
popl
push
mov
pop
sub
test
neg
mov
imul
push
mov
negl
xchg
jbe
rcrl
jmp
ljmp
out
repnz
jle
inc
pop
dec
nop
jo
dec
bound
cli
mov
dec
fxtract
jp
nop
out
mov
jg
adc
add
scas
iret
call
pusha
movsl
inc
dec
pusha
jmp
dec
cmpsb
popa
sub
das
mov
push
xchg
mov
das
in
fsubrl
mov
dec
lods
ljmp
add
lret
mov
jns
cmp
imulb
mov
mov
mov
mov
push
out
add
add
adc
xchg
jmp
and
push
jne
add
add
push
jecxz
inc
or
cmpsb
stos
rcr
mov
repz
mov
fisubrl
cmp
stos
xor
pop
pop
pop
xor
mov
hlt
cmp
imul
outsb
jnp
dec
aaa
cli
xor
cmp
test
mov
lds
pop
add
dec
mov
aas
ret
or
inc
popf
addr16
movsb
or
or
jle
or
jmp
in
mov
pop
fcompl
insb
bound
pop
std
inc
or
sub
pop
cmc
and
adc
fmull
cmp
add
adcb
fdivs
dec
call
jge
fmuls
xchg
mov
mov
and
aam
dec
pop
cmc
movsl
push
cld
stos
sub
data16
cmp
in
and
ja
subw
xor
insl
negl
inc
pop
mov
rclb
lods
or
cmp
mov
add
stos
sbb
insl
push
cmpsb
sub
dec
mov
pop
ret
mov
ds
mov
and
push
push
sub
cmp
insb
stc
inc
pusha
jg
xor
mov
cmc
push
aas
lret
cmc
test
mov
or
dec
push
popa
add
add
sbb
pop
jmp
xor
push
neg
xor
jle
ljmp
mov
inc
push
push
cmp
adc
inc
cmc
mov
outsb
xor
pop
cli
mov
stos
inc
sahf
push
sub
sub
or
mov
xor
adc
test
movsl
fisubrs
xor
pop
fstpl
pop
push
pusha
add
outsb
into
pop
mov
xchg
xchg
adc
loopne
rorl
mov
addr16
insb
out
out
mov
sub
stos
mov
mov
mov
push
dec
push
scas
xor
dec
jne
pop
pop
mov
ljmp
push
test
addb
movsl
pop
les
in
push
fisubs
add
jle
mov
ljmp
aas
popf
add
lahf
insl
dec
cmc
and
js
insl
orb
lea
jmp
pop
daa
push
pop
pop
ret
insl
lahf
xchg
jmp
pusha
sbb
push
lret
push
add
add
insb
pushf
lret
out
inc
or
mov
mov
pop
add
xchg
xor
mov
shll
xor
mov
sub
ret
mov
jo
dec
call
jne
jmp
add
xchg
ja
and
jmp
mov
add
push
mov
add
xor
mov
mov
lock
add
mov
push
shlb
scas
push
xchg
sub
mov
and
sbb
pop
leave
pop
cs
add
hlt
push
mov
add
adc
sub
inc
xor
subl
and
xor
dec
jo
cmp
push
andl
or
mov
lret
jmp
pop
sbb
lahf
xor
xchg
adc
jns
inc
popa
decl
clc
or
lods
sbb
les
ss
and
or
push
fists
xchg
add
sub
out
pushf
or
pop
aad
and
jne
enter
pusha
pop
clc
popf
and
sub
in
mov
mov
jae
das
das
stc
bsr
out
or
inc
push
or
and
adc
jnp
stos
out
das
pop
hlt
shr
sbbl
aaa
push
lods
inc
add
mov
adc
pop
push
jno
pop
clc
es
cmp
gs
sbb
pop
add
ja
jnp
xor
or
in
push
add
push
push
mov
mov
dec
push
popf
gs
movsb
cmc
sbb
jne
and
jmp
icebp
cmp
je
inc
loopne
or
nop
jge
add
pop
pop
repnz
and
push
pusha
pop
js
pop
adc
sub
loope
or
jmp
addr16
jae
jecxz
nop
fldt
pop
mov
sub
or
xchg
or
sub
cmp
sarb
or
jae
xchg
mov
jnp
fwait
and
ret
or
mov
xchg
jnp
or
out
pop
push
jbe
xchg
dec
xchg
repz
xchg
xlat
movsl
inc
movsb
inc
cmpsl
sub
sub
jo
cwtl
xchg
dec
xorb
mov
or
test
cmp
aam
inc
ds
push
push
popf
fadds
popa
sbb
mov
fstl
movsl
mov
push
into
xchg
mov
add
mov
in
xor
or
or
adcl
mov
xlat
pop
fld
cmpsb
mov
out
jle
sbb
into
rorb
and
js
inc
daa
mov
cmp
sub
stos
lods
mov
adc
enter
mov
inc
testb
fdivrl
jmp
cwtl
iret
bound
and
add
add
add
lret
dec
push
int3
sub
push
dec
rcr
inc
test
test
out
xchg
push
sbb
dec
das
fidivrs
xlat
insb
sbb
divl
leave
cmc
adc
adc
call
shl
sarb
pop
in
dec
pop
pusha
imul
cmp
fists
int3
lds
mov
jl
pop
std
icebp
pop
mov
mov
and
cmp
cs
xor
ret
lret
jne
dec
shl
js
or
popf
xor
inc
sub
in
popa
sbb
imul
and
add
mov
lahf
jmp
pop
push
decl
mov
jge
imul
push
jns
out
out
jo
repnz
xor
pushf
popa
test
stc
pop
pop
add
pop
cmp
push
push
sub
mov
mulb
aam
pop
test
lock
popf
mov
mov
fs
xor
je
ret
pop
jne
dec
sbb
xor
sti
xorb
and
and
add
inc
inc
stos
cmp
sub
add
jne
inc
dec
test
in
adc
dec
jp
sbb
jno
and
outsl
ret
and
outsb
stc
xor
push
or
movl
push
or
ss
sub
pop
aad
dec
pop
mov
sbb
jmp
jle
clc
mov
call
mov
adc
inc
and
rcr
cmp
cwtl
xchg
mov
mov
sub
addl
adc
xchg
jnp
add
or
ds
fmuls
pop
add
inc
dec
sbb
add
push
mov
and
adc
push
jns
add
push
ds
jbe
enter
ljmp
jae
aam
jecxz
push
and
fldcw
rorl
xchg
pop
or
sub
fwait
jno
es
lret
push
jbe
cmp
cmp
jmp
rorb
and
sub
add
loop
xchg
or
fadds
pop
inc
test
aam
add
cmp
pop
xchg
and
adc
xchg
decb
lods
js
jl
mov
jp
push
xor
in
cmp
repz
mov
cli
repnz
pop
addr16
sbb
ffreep
and
jo
sub
inc
and
add
mov
pop
mov
addb
add
mov
lcall
sub
pop
pop
push
xchg
flds
pop
sbb
mov
rcll
es
push
mov
add
out
add
dec
xchg
xor
add
jmp
mov
mov
stos
pusha
or
sbb
adc
mov
mov
mov
lods
mov
push
push
xor
mov
in
mov
and
pop
rorb
scas
xlat
jb
fbld
outsb
dec
icebp
jmp
dec
rcll
movsb
push
or
sbb
loopne
lea
push
int3
add
sbb
gs
in
out
cmp
rcl
adc
out
mov
fists
in
jp
jne
pop
lds
sub
and
idiv
and
jmp
mov
test
inc
cwtl
ret
jmp
mov
and
sub
fdivr
and
jle
jge
das
clc
mov
stos
fmulp
adc
or
push
jl
imul
in
or
mov
inc
hlt
es
cmp
mov
mov
rorl
pop
in
fists
inc
std
xchg
dec
sbb
ljmp
cli
xchg
xchg
mov
imul
call
xor
lds
adcb
enter
xchg
div
call
pop
insl
fwait
cmp
divl
sub
adc
in
mov
add
shll
cmp
sti
sub
outsl
xor
inc
xor
push
push
cltd
or
pop
jno
add
sbb
push
cmp
sub
mov
mov
andb
js
or
jb
jp
and
jmp
cli
mov
dec
in
pop
mov
and
addl
clc
out
stos
xor
lea
add
xchg
pop
out
nop
jno
fisubl
pop
jae
fimuls
rol
or
jns
mov
xor
jmp
mov
and
add
fistps
stos
xor
mov
cmp
jbe
fimull
adc
mov
push
add
cmp
xlat
xchg
dec
push
mov
in
pop
in
cltd
cmp
jl
or
push
add
test
int3
cmp
out
mov
rcrb
xchg
pop
mov
push
add
cmp
das
sarl
mov
cmc
xchg
mov
pop
push
pusha
scas
jl
adc
jmp
push
dec
xchg
or
popa
imul
push
rorb
icebp
mov
inc
inc
xchg
cmp
cs
cmp
dec
pop
inc
push
sub
lahf
pop
jns
add
popa
mov
jmp
mov
xchg
xor
add
pop
inc
xchg
push
pop
jmp
push
icebp
dec
xchg
sub
mov
push
add
mov
mov
jmp
add
push
mov
lock
push
and
xchg
add
je
cmp
popl
rolb
push
js
jno
or
or
lcall
cmpsl
push
inc
adc
jmp
in
jns,pn
lods
adc
xchg
ja
and
pop
pusha
int3
push
mov
mov
push
mov
pop
aad
pcmpeqw
shr
or
sbb
and
icebp
pop
neg
cmpsl
movsl
jge
xlat
sbb
sahf
adc
lds
loop
dec
pop
mov
add
sub
xchg
jo
stos
not
add
shrl
loop
push
cmp
nop
pop
test
dec
ret
lea
in
add
cli
aas
out
add
pop
adc
mov
cltd
frstor
mul
push
sub
or
mov
pusha
xchg
pop
mov
jbe
out
test
xchg
aas
mov
inc
or
or
pop
and
dec
pop
call
sbb
fs
sub
or
loopne
jmp
popf
pop
jno
and
or
add
sub
loop
mov
dec
test
sbb
dec
nop
loopne
movsb
sub
outsl
dec
and
jge
xor
pop
mov
pop
jmp
lock
roll
mov
sti
add
out
push
jg
imul
in
sbb
cltd
repz
or
test
push
mov
jne
test
mov
rorl
nop
or
or
loop
orb
neg
lret
insb
nop
push
insb
shl
xchg
bound
pop
in
mov
cmpsb
cld
imul
dec
pop
mov
dec
sub
outsb
loop
add
push
dec
dec
cmp
mov
fs
or
arpl
ret
jge
lret
repz
dec
or
aaa
es
mov
mov
and
jle
pop
add
or
sbb
push
pop
mov
lock
pop
lods
movsb
mov
and
add
mov
fistpl
xchg
sbb
mov
pop
add
mov
jmp
das
test
dec
in
cmc
fs
imul
push
xlat
cmp
xor
cmc
les
outsb
mov
and
push
stos
daa
add
fs
rcl
cs
pop
js
fsubrs
pop
sub
adc
sub
jmp
mov
cmp
cmp
xchg
das
add
js
pop
cwtl
inc
jmp
inc
inc
mov
xor
cwtl
cmp
sbb
arpl
test
ror
pop
xchg
inc
sub
mov
aad
add
mov
adc
xorb
cmpsb
shlb
push
icebp
orl
add
mov
push
nop
push
push
add
pop
stos
jne
shl
loope
or
faddl
push
xchg
mov
cmovge
nop
rorl
push
bound
jge
int3
movsl
pop
pop
or
fcompl
add
loop
imul
roll
mov
ret
cmp
movsb
push
cli
pop
add
push
mov
sub
push
outsl
int
or
jnp
nop
and
push
jmp
std
and
mov
sbb
cmp
mov
sbb
insl
sub
mov
ret
test
sbb
popa
xchg
stos
call
fbld
in
sub
clc
lock
mov
jmp
loope
add
and
jle
mov
lahf
dec
ja
test
or
ret
shl
cli
outsb
push
repnz
cmpb
sub
pop
or
push
add
into
adc
or
pop
xchg
not
cmp
mov
inc
repnz
pop
mov
and
mul
packssdw
and
mov
push
mov
mov
jmp
call
and
movsl
sub
or
pop
negb
daa
fsts
pushf
jno
inc
pop
scas
data16
fistpll
xor
nop
fdivl
or
add
and
xchg
push
pusha
sub
ss
add
pop
sub
push
std
add
xor
std
inc
lock
jp
jle
sbb
cs
in
dec
lods
in
adc
lea
mov
xchg
pop
xchg
ret
push
jmp
pop
mov
pop
popf
pushl
xor
cmpsl
sbb
sbb
dec
push
scas
mov
push
mov
imul
jmp
lcall
pop
andl
div
daa
inc
stc
shrb
bound
push
jl
subb
js
enter
loop
lahf
or
js
icebp
mov
add
and
adc
in
rorl
scas
loope
or
cld
and
shll
mov
xor
mov
xchg
sbb
aaa
adc
push
stos
and
adc
cmpsb
stos
mov
add
dec
lock
int
cltd
ja
push
shl
jns
xor
or
push
movsl
dec
jmp
jmp
adc
dec
pop
daa
or
or
add
mov
push
js
mov
mov
dec
or
mov
iret
mov
and
cmp
jnp
ljmp
mov
aas
sahf
add
push
pop
push
xor
insb
sub
lock
add
lahf
shlb
pusha
cs
adc
test
lods
test
imul
add
cmpl
in
or
arpl
xor
or
rcrl
pop
stos
rcr
xchg
cwtl
mov
addb
sti
push
flds
add
pop
xor
adc
jns
rcrb
push
fwait
mov
pop
push
mov
add
pop
push
xchg
pop
cmp
adc
sub
pop
icebp
push
sbb
push
sbb
ja
jmp
mov
pop
jmp
ror
push
aas
pop
sbb
movb
call
xchg
mov
test
pop
pushf
push
and
pop
pop
jbe
jge
xor
orl
ja
inc
aam
into
jo
gs
mov
cmp
xorl
pop
mov
nop
sub
sahf
sar
incl
xor
pop
ret
pop
push
mov
fs
jbe
xor
mov
in
pop
dec
dec
ds
jmp
add
out
clc
mov
cmpsl
outsb
mov
jecxz
loope
mov
jmp
shrl
xlat
xchg
pop
dec
sub
rcll
jg
repnz
test
sbb
jg
or
orb
xor
push
lods
in
pop
sub
aaa
and
loope
add
xor
out
add
pop
mov
mov
lock
loope
adcl
out
mov
add
xor
pop
cmp
lods
test
dec
daa
andl
cmpsb
xchg
dec
lods
mov
lret
adc
ret
cwtl
mov
inc
jle
sbb
ljmp
inc
daa
pop
bound
clc
in
rorl
push
add
mov
adc
sahf
add
and
pop
mov
push
pop
ret
test
sub
orb
dec
sub
scas
jmp
or
cmc
movsl
flds
push
repnz
sbb
xchg
xlat
inc
jb
int3
or
and
or
adc
loope
push
inc
mov
push
popa
and
loopne
xor
push
mov
jb
mov
or
mov
xchg
cmpsb
popf
gs
add
test
gs
xor
jecxz
ret
jns
shl
outsl
or
pushl
mov
mov
fwait
push
cmpb
or
jo
jb
pop
das
mov
mov
push
je
mov
repz
sub
pop
sti
adc
dec
mov
arpl
xorl
push
sub
aam
mov
pop
sub
jg
popf
jns
sbb
fucomip
add
mov
push
rorl
pop
mov
jmp
call
mov
lret
std
push
lds
add
add
orb
xor
or
mov
rcl
ds
int3
jb
mov
pop
pop
cwtl
inc
mov
orb
cmc
and
sbb
dec
xor
inc
mov
ret
ja
fbld
sarl
mov
or
pop
fmull
mov
cs
add
lods
clts
inc
dec
call
outsl
lock
lcall
dec
pop
xlat
and
xor
sub
or
push
or
jge
mov
push
and
cmp
outsl
neg
mov
imul
jbe
test
imul
add
movsb
or
push
mov
sub
jnp
nop
bound
nop
mov
icebp
jo
les
shr
mov
push
jns
imul
es
inc
push
dec
cmp
mov
icebp
add
je
mov
mov
test
dec
lods
adc
rcrb
fdivrs
mul
mov
add
inc
nop
xchg
add
dec
mov
loop
call
cmp
cmp
inc
add
pop
shlb
add
pop
xor
inc
dec
add
ffreep
mov
pop
inc
insb
push
cmpsb
dec
mov
sbb
xor
sahf
jo
jnp
dec
add
out
test
xchg
mov
orb
aam
sub
add
mov
jg
inc
dec
xchg
push
pop
int3
inc
add
dec
jo
adc
sub
add
test
jae
and
mov
mov
arpl
push
subl
mov
mov
xchg
mov
xchg
jno
jns
decl
push
sub
sub
in
jecxz
or
outsb
sub
cld
fidivrs
std
adc
dec
bound
sbb
int
xchg
sub
mov
xchg
xor
jbe
xchg
mov
and
cmp
push
mov
xor
push
iret
adc
and
std
shrb
or
xchg
push
arpl
pusha
sub
adc
pop
dec
xorb
xor
es
int
xchg
push
sub
dec
aam
imul
rclb
sbb
or
out
pop
pop
and
mov
sbb
sub
out
scas
or
or
push
cli
jo
incb
lock
push
push
sarl
or
daa
inc
cli
xchg
pusha
repnz
lods
sub
popa
add
fidivrs
mov
outsl
outsl
shrb
aaa
fidivs
xor
cmc
jge
push
mov
out
mov
adc
mov
sub
push
jmp
xor
dec
xorl
push
and
scas
sbb
or
es
mov
sub
pop
jns
adc
sti
sub
lods
dec
out
data16
test
cmpb
or
inc
fadds
je
dec
test
jg
push
mov
pop
insb
in
dec
sbb
xchg
sbb
mov
cmpb
lods
popf
fisttps
sub
xor
movsb
sub
repnz
aaa
dec
jne
rcll
and
movsb
inc
enter
mov
fisubrl
popa
mov
hlt
lock
push
jmp
and
mov
push
sbb
aaa
sarl
aas
call
add
or
jo
push
shl
jmp
jno
dec
sbb
icebp
sbb
or
imul
xor
lock
or
imul
mov
xor
and
pop
lock
push
add
outsl
mov
inc
test
notl
in
mov
jp
inc
lock
xor
dec
add
stos
scas
movsl
fs
adc
cmp
sbb
nop
jne
jne
push
mov
out
lods
pop
or
aas
ret
adc
cltd
cmp
outsb
push
or
push
cmp
inc
mov
push
adcl
mov
mov
adc
mov
rorb
adc
jge
fcom
sti
std
popl
ret
push
daa
test
and
rcrb
add
or
or
pop
adc
add
push
push
jns
inc
or
mov
xor
out
jo
iret
mov
jno
jno
xchg
fbstp
inc
jmp
pop
les
loop
jge
sbb
clc
das
and
movsl
lret
popa
push
jmp
add
outsb
mov
push
cs
xlat
in
and
lods
dec
and
or
jecxz
ljmp
subl
sarl
mov
imul
mov
jmp
and
sub
adcl
dec
lcall
mov
cmpsb
bound
imul
adc
orl
or
mov
cmp
mov
stc
mov
mov
stos
cmp
adcb
stc
dec
mov
jge
and
and
pusha
mov
insl
push
and
add
pop
or
popf
imul
add
cmpsl
add
das
test
mov
adcl
add
insl
mov
xchg
dec
jmp
and
lds
hlt
inc
mov
ret
or
mov
rolb
mov
mov
cmpsb
mov
xlat
and
ret
ret
mov
mov
jecxz
pop
jmp
add
les
outsl
push
jne
mov
mov
push
insl
lock
stos
mov
xchg
push
adc
sub
push
add
add
ss
movb
push
add
shl
cld
xchg
sub
sub
cmp
jg
push
pop
jle
sbbb
and
out
push
or
pop
pop
mov
dec
add
or
dec
and
pop
mov
repnz
mov
jnp
in
out
adc
pop
or
repnz
add
fisubrl
ret
inc
jno
in
or
ret
mov
mov
dec
mov
shrl
data16
xor
mov
out
dec
or
in
movsl
rcll
sub
mov
jp
pop
int3
ret
cmp
pop
xor
add
jecxz
push
push
es
inc
sbb
inc
sbb
imul
inc
pop
push
xor
xor
add
sub
sbb
mov
push
cmp
cwtl
push
in
jae
pusha
or
or
add
outsb
movsl
push
push
inc
cli
sbb
fucomp
jle
inc
sbbl
add
or
cmp
sbb
scas
jne
mov
shrb
push
lock
xor
fs
xor
mov
es
mov
add
sub
imul
push
mov
jno
cmp
test
and
cld
sub
orb
sahf
testl
sub
mov
adc
jae
sbb
add
insl
daa
jge
ficoml
or
gs
jg
mov
mov
sub
js
push
and
scas
sub
inc
cmc
daa
lret
xchg
or
xchg
fsubs
pop
roll
cltd
mov
ds
inc
mov
dec
and
fwait
mov
add
in
adcl
xchg
dec
shl
adc
mov
inc
inc
pop
jnp
arpl
inc
lods
pop
or
xchg
cwtl
loope
movsl
adc
mov
fs
add
add
imul
mov
jb
test
pop
les
jle
push
outsb
inc
sub
mov
ljmp
arpl
ret
inc
pop
cmp
jl
xchg
add
dec
mov
ficoms
dec
push
ret
loop
jns
or
xchg
scas
loop
xchg
xor
cwtl
pop
les
aaa
enter
jl
pop
pop
cmp
and
pop
test
mov
and
inc
negl
jbe
mov
cmp
mov
nopl
inc
or
xor
sub
cld
call
adc
pop
pop
add
adc
and
jle
or
jmp
pop
xchg
push
and
in
data16
shlb
test
call
xor
or
outsb
mov
inc
lds
pop
mov
mulb
mov
and
add
aad
pop
pop
pop
pop
adc
push
xchg
addb
loop
mov
sub
je
push
mov
add
not
push
or
shr
or
loop
mov
pusha
ds
pop
andb
call
imulb
sahf
inc
jmp
jns
in
pop
adc
lds
or
sbb
in
lcall
rolb
jb
inc
push
jns
sti
xchg
bound
fimuls
sub
push
push
sub
push
adc
das
sub
loopne
stos
and
jo
push
sbbb
movsl
mov
or
push
aas
sub
mov
mov
shlb
push
sbb
clc
sarl
rorb
inc
sbb
sub
push
pop
jnp
push
sti
bound
or
lea
aad
jecxz
test
pop
mov
xor
cld
scas
lcall
xor
sahf
ja
idivl
sbb
popf
ret
add
insl
xor
dec
and
mov
pop
jns
push
sub
jae
jl
push
pop
popa
jmp
daa
mov
xor
fs
sarb
enter
pop
or
add
enter
pusha
mov
lcall
iret
sub
mov
sbb
push
jno
out
cmp
mov
push
xchg
dec
xor
mov
sub
testb
stos
lods
jmp
cmpb
push
xor
cwtl
pushl
mov
nop
jnp
jmp
cmp
out
add
aad
test
fs
adc
push
int3
inc
jg
popa
pushf
enter
cmp
mov
aad
push
ss
scas
pop
adc
aam
mov
ja
ja
pop
iret
cld
cmp
ret
sub
cmp
pop
in
fwait
rolb
push
or
loop
push
pusha
testb
inc
addb
in
push
mov
push
push
cmp
xchg
shl
cmp
or
jmp
loopne
enter
xor
dec
out
fdivrs
movsl
rcll
std
mov
xor
dec
scas
imul
and
add
loope
test
sub
rclb
mov
jmp
push
add
push
mov
hlt
cmc
lahf
gs
jnp
incl
or
inc
cmp
out
add
push
or
mov
movsl
xlat
sahf
rorb
dec
test
rol
sbb
jmp
xchg
pop
or
mul
in
pop
push
pushl
shr
data16
push
mov
cli
inc
mov
add
adc
pop
xchg
das
and
push
stos
and
lcall
dec
mov
testl
mov
push
mov
add
add
fisubl
push
mov
dec
lret
sub
pop
and
xor
xor
dec
push
in
and
prefetchnta
pop
jle
in
cmpsl
jne
cld
hlt
mov
add
sub
pop
jecxz
add
jae
inc
loop
push
idivb
loope
mov
ds
add
or
xorb
loope
test
jmp
mov
adc
jno
jmp
push
pop
pusha
dec
test
cmc
cmp
xchg
lock
push
daa
add
push
pusha
mov
jmp
push
jge
dec
sbb
sub
xchg
xor
sub
mov
aas
fadds
pop
jmp
push
push
add
jnp
inc
orb
dec
in
xor
lea
xchg
adc
outsl
outsb
repz
xchg
lret
inc
imul
jge
push
lahf
jp
pop
mov
and
roll
lods
jne
stos
xor
fstl
fnstcw
movsb
mov
jle
adc
sub
or
or
jge
bound
loope
or
outsl
inc
sub
jmp
lods
loope
data16
adc
out
pop
aas
cmp
nop
pop
add
mov
je
in
mov
cmpsl
dec
faddl
imul
xor
call
inc
and
mov
pop
pop
push
stos
out
xchg
push
outsl
add
ljmp
shlb
shrl
fildl
or
dec
jae
adc
clts
add
inc
sbb
inc
add
out
mov
fsqrt
dec
xlat
xor
pop
dec
dec
xchg
jp
jb
testb
lret
imul
add
cwtl
push
add
sub
push
loope
imul
dec
sub
pop
popa
mov
jnp
cmc
nop
jmp
repz
ret
shr
inc
adc
iret
add
or
xlat
dec
movsb
push
sub
icebp
dec
add
nop
jmp
jne
out
inc
dec
adc
sub
sub
inc
inc
icebp
out
sub
sub
enter
cld
mov
std
sub
push
xchg
nop
or
aaa
xchg
pusha
sbb
jo
js
lcall
lods
dec
add
and
neg
xchg
clc
sub
cltd
xor
or
outsb
add
lahf
pop
jmp
fldl2e
cmp
mov
add
sub
out
pop
mov
or
fadds
jmp
push
and
or
jne
ror
loop
aad
pop
adc
pop
pop
jp
ja
cli
popf
call
shlb
inc
cmp
bound
bound
ja
mov
xor
les
cmpsl
adc
sbb
les
adc
or
pop
repnz
hlt
aad
push
aaa
push
xor
les
clc
dec
mov
inc
adc
mov
ds
ljmp
pop
pop
add
repz
mov
gs
pusha
lret
push
mov
in
push
mov
jmp
fwait
aaa
or
call
mov
dec
xchg
test
lret
jle
pop
push
sbb
jle
push
add
dec
in
mov
jno
sub
pop
shrb
cmp
inc
addl
sub
pop
sti
lea
stc
in
js
cmpb
cli
sub
data16
sub
outsb
in
imul
lahf
fdivrs
shl
fcmovnu
cmpl
push
test
daa
sbb
shl
push
addl
jmp
out
push
mov
pop
aas
xchg
stc
xlat
mov
sub
cld
push
mov
lds
dec
in
stos
fs
inc
movsl
xchg
pop
inc
fidivs
xorl
add
dec
push
xchg
or
xchg
mov
jns
adc
lods
movsl
daa
mov
hlt
xchg
add
or
pusha
cld
push
push
cmpsb
mov
pop
xchg
cmpsl
push
or
push
push
push
mov
mov
std
and
outsb
push
jmp
add
mov
xchg
repz
adc
pop
subl
jmp
cwtl
push
lahf
jp
stc
outsl
loop
xor
mov
orb
filds
or
jo
and
repnz
in
add
adc
aas
add
jbe
jne
jne
rolb
sahf
adc
add
jecxz
xor
sub
add
jecxz
outsb
test
push
sbb
test
lock
sub
xchg
sub
outsl
dec
dec
clc
daa
sbb
pop
pop
add
add
add
mov
call
push
scas
lods
push
mov
inc
adc
dec
inc
lcall
fadd
mov
daa
add
sbb
stc
add
lds
inc
mov
add
pushf
rol
push
mov
test
bound
lods
bound
jo
cwtl
popf
sub
sti
mov
sbb
adc
divl
jno
mov
push
add
or
add
jbe
push
int3
xchg
push
sub
pop
mulb
bound
jmp
cmp
ja
inc
int3
shlb
push
cmp
test
jne
ret
fadds
repnz
or
repz
not
movsb
or
and
mov
pop
stc
inc
fists
test
dec
sti
jno
jg
jnp
dec
das
lret
test
jp
push
push
test
pusha
xchg
test
dec
iret
sub
or
pop
and
test
jbe
push
ret
push
or
das
mov
jmp
mov
mov
xchg
imul
nop
mov
clc
das
subps
rcr
pop
inc
cmp
dec
dec
stos
sub
inc
aad
mov
dec
mov
cmp
rcrl
std
xor
push
mov
mov
mov
out
dec
leave
scas
and
push
cmpl
and
adc
loop
popa
notrack
and
mov
xor
add
lret
sub
jmp
push
mov
xchg
and
enter
sti
lret
pop
sar
cmc
popa
sub
inc
test
das
mulb
jno
inc
jmp
adc
repz
ljmp
dec
jnp
push
ret
jns
arpl
loopne
pop
inc
add
fsubrp
pop
sub
jae
push
loope
aam
push
ret
in
fstps
or
mov
push
xorl
sub
pop
fiaddl
loope
xor
sub
shll
mov
cmpsl
adc
mov
xchg
out
sti
adc
lret
jmp
pop
cmp
int
jb
daa
xor
rcll
js
jmp
in
test
dec
cs
inc
mov
sti
pop
daa
add
fcmovnbe
or
ja
lahf
cmp
aas
sbb
jp
and
filds
push
push
pop
sub
lods
mov
jbe
ljmp
adc
in
push
pop
sbb
pop
add
out
xor
push
repnz
push
cwtl
and
ficompl
push
jmp
jmp
sub
sbb
push
sub
int3
lcall
pop
mov
fstpt
and
jne
aaa
and
call
ljmp
shr
ret
or
aas
sbb
sub
sbb
sbb
cwtl
pop
mov
pop
or
push
mov
neg
mov
in
fldt
loopne
test
nop
nop
or
repnz
ljmp
adc
and
or
call
sub
roll
les
jne
and
jae
or
mov
lret
insl
add
jmp
and
add
imul
cwtl
clc
pushf
jnp
test
push
add
pop
fdivl
fdivrl
jmp
push
push
test
pop
pop
nop
js
scas
mov
clc
cmp
sub
repnz
inc
imul
dec
je
fisubrl
inc
xchg
pop
adc
push
stc
stos
adcb
ret
and
cmp
out
popf
inc
or
sahf
mov
xor
stos
add
test
popf
subb
jg
cltd
add
pop
hlt
dec
xchg
popa
pusha
fldln2
add
js
in
addr16
mov
les
mov
pop
sar
les
xchg
xchg
mov
jl
cmp
out
nop
movlps
fsubs
jmp
repz
jmp
mov
or
push
subb
push
mov
jmp
push
mov
jns
push
clc
push
imul
push
mov
int
leave
push
jnp
aas
mov
in
mov
mov
inc
mov
xchg
dec
shll
cmp
int3
scas
mov
pop
xchg
cmp
out
test
pop
push
push
fadds
std
add
push
mov
and
aas
dec
jb
xchg
push
loope
hlt
push
cmpsb
push
test
dec
mov
push
mov
xor
hlt
pop
out
mov
dec
mov
cmp
cwtl
and
imulb
movsl
mov
mov
aaa
std
and
and
je
std
jl
and
in
xor
fnstsw
xor
pop
insb
sub
shl
aam
xor
rol
sub
push
mov
push
in
add
or
bound
shr
push
mov
xor
sbb
mov
ds
mov
and
ret
or
jno
mov
cmp
popf
ss
ret
inc
inc
mov
out
push
sub
dec
lahf
xor
sub
fwait
or
dec
xchg
xorl
jmp
stos
and
jns
movsb
push
leave
pop
add
bound
sub
out
mov
aad
clc
mov
nop
jae
dec
shrl
popa
lret
js
or
pop
mov
inc
xchg
sub
add
sbb
jl
jo
pop
lret
cmp
subl
in
lea
hlt
xlat
push
inc
in
adc
add
lods
in
mov
push
std
inc
mov
mov
add
push
cli
adc
movsl
push
add
pop
push
fistpl
sub
mov
lock
mov
xchg
fstl
adc
sbb
pop
ds
jbe
mov
pop
and
or
or
mov
test
cwtl
lods
in
shlb
ret
repnz
pusha
xorl
pop
or
inc
pop
mov
sub
xchg
imul
out
outsl
inc
in
sub
leave
mov
lret
ficoml
jae
or
ss
jmp
hlt
jns
arpl
idivb
push
add
das
adc
cltd
inc
enter
push
push
push
ds
in
sbb
sub
inc
fs
pop
mov
movsb
leave
mov
in
adc
or
jge
and
cmp
sahf
add
arpl
jmp
sbb
add
adc
or
test
cltd
mov
jle
scas
out
jb
inc
int
pusha
add
jge
and
in
addb
cmp
pop
imul
dec
int3
push
stc
add
loopne
insl
das
cltd
pop
pop
mov
mov
mov
je
or
jge
stos
mov
push
push
inc
pop
test
pop
xor
mov
repnz
sub
jl
pop
jl
push
or
adc
fsubs
cmp
sbb
ss
pop
or
jae
imull
outsb
xor
dec
lock
mov
xchg
xor
inc
push
mov
pop
mov
shr
inc
xchg
movsb
call
pop
and
jg
and
orb
mov
dec
mov
das
push
cmpsb
ret
loop
pop
je
mov
jmp
or
mov
dec
add
adc
aas
add
mov
push
jg
js
lret
sbb
jge
jb
or
mov
push
fisttpl
add
pop
push
movl
insb
lret
int3
jge
loope
cmp
mov
dec
gs
add
imul
pusha
push
iret
mov
pop
sti
pusha
sbb
dec
xor
xchg
outsl
add
jmp
jae
or
test
test
out
or
ret
jmp
rol
xchg
push
xchg
aas
shr
jnp
or
mov
lds
push
push
inc
or
in
hlt
mov
cmp
pop
sub
or
lret
sub
dec
imul
push
cmpb
and
adc
bound
push
mov
sti
xor
movlps
xchg
add
add
shl
push
mov
dec
inc
and
cltd
in
pop
popa
sub
dec
addr16
repnz
push
insb
test
cmp
dec
cmp
xor
in
add
divb
add
adc
in
and
add
pop
add
push
mov
jnp
test
mov
pop
jmp
out
sbbl
push
ljmp
out
add
mov
inc
mov
cs
sbb
mov
test
fisubrs
into
add
lmsw
nop
mov
pop
cmp
xor
cmp
sub
mov
pop
mov
mov
add
cmp
push
mov
aam
jmp
mov
js
add
test
mov
in
aas
stc
fs
subb
mov
fildll
notb
pop
andb
add
insb
cmc
add
sbb
mov
cmp
pop
xchg
pop
push
cmpsl
jl
or
pop
je
pop
sbb
popf
jle
arpl
pop
xor
cwtl
inc
insb
or
dec
sub
push
jl
bound
repz
rorl
arpl
and
scas
push
or
mov
sti
pop
mov
jmp
pop
test
push
loopne
leave
or
inc
xchg
dec
dec
or
add
cld
decl
test
pop
lock
mov
and
dec
out
fmull
mov
mov
add
mov
das
or
mov
pop
dec
frstor
fwait
dec
inc
shll
bound
jmp
aad
ror
pop
out
dec
push
sar
add
push
mov
jp
add
jecxz
stc
mov
test
pop
mov
testb
sub
sub
decb
add
jmp
or
icebp
testb
jae
push
add
inc
jo
jecxz
mov
pop
and
xor
cmp
arpl
test
inc
pop
inc
jl
vmovhps
pop
push
mov
jne
mov
jp
add
mov
jnp
arpl
cmp
add
sbb
jnp
cmp
mov
push
std
push
lods
andl
repnz
and
push
sub
push
sub
arpl
ror
sub
call
push
negb
xchg
jnp
es
and
sub
adc
sti
adc
inc
or
jne
inc
sub
stc
inc
push
ret
xchg
aam
xchg
sub
je
shrb
inc
dec
addl
xchg
pop
fimuls
push
adc
pop
jp
or
out
sbb
or
das
mov
in
loop
jmp
shll
loopne
pop
or
je
pop
push
orl
shrb
std
inc
cmp
or
in
hlt
fsubrl
jb
and
dec
ret
cmp
mov
or
out
cmp
jecxz
les
lret
daa
enter
mov
mov
xor
inc
out
in
adc
cmpsb
arpl
and
adc
jne
mov
fstpl
dec
jmp
ja
inc
jmp
and
mov
mov
in
fdiv
add
fisttpl
push
add
lds
sub
push
mov
rorl
repz
pop
inc
addr16
fstl
jmp
and
stc
add
mov
jae
sub
and
sub
xorl
add
repnz
push
mov
mov
repnz
cwtl
mov
mov
mov
push
les
push
xchg
mov
test
repnz
pop
ss
inc
movl
push
outsb
lea
and
stos
add
sub
dec
das
push
bound
adc
test
mov
add
shrl
addl
ficomps
push
xlat
bound
cmp
cmc
dec
cmc
add
pop
jmp
fcmovbe
pop
mov
push
in
cmp
cwtl
loope
dec
repnz
jmp
or
add
stos
push
jns
cmp
roll
sbb
arpl
call
shlb
mov
adc
add
push
sub
out
pop
pop
leave
lret
add
mov
fnstsw
bound
pop
add
push
push
pop
addr16
push
or
pushf
xchg
jmp
pop
jge
dec
movsl
fcmovb
sub
std
adc
sub
cltd
shrl
or
out
xor
nop
sub
sbb
dec
or
mov
in
xor
xchg
ljmp
add
loop
pop
out
shrb
xor
fstpl
or
stos
mov
xchg
mov
dec
cs
ljmp
mov
sub
mov
pop
hlt
sbb
aad
jae
leave
daa
inc
inc
xor
mov
add
adc
cmp
and
jae
jmp
dec
add
or
xchg
adc
sbb
popw
fadds
inc
and
jp
pusha
mov
and
pop
pop
adc
popa
jg
pop
and
arpl
es
dec
dec
cmp
push
add
jmp
int
sub
or
cmp
inc
insb
xor
cmc
addb
mov
mov
das
lea
addr16
call
std
stos
out
jg
xchg
pop
out
scas
adc
pop
std
dec
pop
push
and
dec
out
orl
mov
cmp
cld
lods
sahf
stos
sbb
mov
test
xor
sub
or
mov
mov
and
jns
and
rcll
jmp
sbb
sub
dec
mov
add
sub
inc
add
jnp
test
shlb
push
dec
insl
mov
mov
jns
mov
cmp
pop
and
outsb
mov
mov
mov
xor
popf
js
aaa
adc
add
in
sahf
adc
cli
push
xchg
jge
out
mov
push
xchg
xor
fst
sub
or
or
or
pop
imul
out
jo
paddsw
sbb
scas
mov
mov
xchg
addb
daa
ret
inc
inc
push
xchg
xchg
sub
jns
imul
adc
scas
mov
jnp
xchg
loope
push
addr16
add
add
inc
test
cwtl
loope
testl
loopne
push
leave
push
xchg
push
add
sub
sub
add
sub
negb
cmpsl
test
dec
inc
add
call
or
mov
imul
add
fldcw
pop
dec
inc
lret
pop
sub
fisubl
push
add
xor
push
jecxz
mov
sub
das
xchg
out
cmp
andl
test
stos
mov
nop
lods
sub
test
icebp
rcll
or
and
push
add
cmp
pop
jmp
pop
ljmp
bound
push
push
add
test
dec
repnz
add
xor
add
cmpsb
fs
xchg
cltd
push
cmpl
sub
gs
xor
add
fstpt
sbb
mov
in
cmp
dec
pop
pop
jne
ljmp
ds
cli
jecxz
mov
or
push
imul
cli
mov
push
mov
and
std
cltd
dec
cld
dec
call
xor
popf
in
add
xchg
fbld
stos
test
mov
fidivl
pop
cmp
pop
adc
imul
imull
das
mov
pop
mov
jle
dec
mov
ljmp
in
adc
add
pusha
adc
xor
add
push
jno
sub
jno
sub
pop
dec
inc
cmp
dec
xchg
pop
out
adc
add
push
mov
ja
in
jecxz
shr
lods
imull
ret
pop
pop
xchg
jmp
xchg
mov
push
add
dec
fwait
add
pop
mov
sbb
cmpsl
push
fstpt
xchg
pop
pushf
xor
mov
mov
rorb
lret
mov
inc
mov
pop
sbb
les
push
add
mov
sub
stos
push
xor
lret
in
pop
pop
mov
daa
sub
dec
push
add
imulb
jge
xor
mov
sub
sub
ljmp
xor
push
mov
shl
xor
rolb
jg
dec
call
jecxz
and
std
stos
rcrl
lods
and
adc
pop
repnz
dec
jne
xchg
mov
cmp
mov
jmp
pop
lods
call
lds
enter
pop
in
inc
loop
loope
inc
push
in
dec
xchg
scas
aam
scas
pusha
mov
ja
xchg
mov
add
add
jns
xchg
daa
ljmp
adc
pop
adc
push
pop
jmp
dec
mov
dec
mov
mov
cmp
test
lods
orl
mov
sub
cmp
adc
add
bound
push
or
inc
xor
xor
jmp
mov
mov
in
repz
cmp
sbb
jp
rolb
add
inc
xor
lds
mov
ficoml
mov
aas
mov
shr
cmp
out
es
xor
jmp
dec
jmp
xchg
icebp
cli
xor
insb
sub
stos
and
push
mov
stc
rcrl
icebp
ret
adc
and
mov
jmp
mov
jmp
shlb
push
pushf
adcb
or
imul
sub
add
mov
in
fs
jecxz
test
mov
cwtl
push
divb
or
mov
inc
sub
jbe
dec
sbb
or
pop
or
add
ret
dec
sbb
dec
xor
les
sub
out
or
adc
dec
and
lret
mov
rolb
cwtl
or
arpl
cmpsb
xlat
jmp
add
xor
sub
fdivrl
mov
das
sbb
or
scas
and
pop
roll
aad
cmp
push
fwait
push
int3
and
xchg
xchg
fisttpl
dec
ret
push
cmpsl
mov
filds
sbb
scas
add
sbb
mov
jno
inc
xchg
inc
call
push
mov
gs
inc
subl
stos
insb
lret
mov
invd
push
and
call
xor
gs
jp
mov
iret
fcoml
inc
stos
pusha
adc
out
adc
sbb
dec
push
xor
dec
pop
scas
das
push
mov
add
xor
jle
ret
or
xor
add
jbe
aad
stc
push
push
sbb
iret
jae
sbbl
mov
adcl
add
or
mov
adc
mov
add
mov
cmp
jmp
pop
mov
push
pusha
sub
cli
stos
sub
stc
sbb
jg
xchg
in
xlat
lahf
cld
mov
sub
incb
xchg
jmp
dec
lods
js
push
mov
push
lods
mov
sub
in
outsb
clc
daa
mov
ret
push
push
and
lret
dec
arpl
addl
mov
inc
xorb
imul
push
shll
dec
sub
lret
or
add
dec
not
mov
dec
pop
decb
sbb
cmp
fadds
dec
and
jns
jmp
inc
jmp
push
inc
sub
std
sbb
adc
testl
loop
add
ja
jns
lea
test
pusha
push
in
les
rcr
dec
jle
push
push
mov
jno
pop
jmp
xchg
cmp
dec
xchg
lcall
cmpl
rcll
adc
imul
cmp
ss
sub
sbb
pop
inc
out
sbb
sub
clc
mov
ja
icebp
jle
aas
dec
ja
pop
push
out
mov
mov
mov
lds
mov
cmp
out
mov
out
xchg
outsl
push
fnstcw
mov
mov
imul
push
outsl
sub
dec
nop
mov
xchg
ffreep
adc
cs
sbb
sub
rclb
mov
cwtl
cwtl
push
and
pop
and
inc
cmp
jbe
les
in
or
dec
ficoml
loop
pop
push
mov
enter
adc
pop
cld
js
fbld
inc
xchg
sub
mov
push
mov
test
sub
into
int3
test
mov
jecxz
and
mov
mov
pop
ja
jo
orb
mull
push
sbbl
xor
add
push
inc
adcb
andl
pusha
outsb
inc
pusha
and
and
out
pop
pusha
push
or
mov
pop
inc
bound
cmpsl
adc
repnz
adc
scas
ss
std
adc
or
mov
or
mov
jnp
in
push
mov
lahf
pop
sahf
xor
xor
cmp
out
stc
mov
inc
jne
add
inc
pop
mov
cmp
xchg
pop
rclb
dec
inc
and
jne
inc
adc
pop
mov
cmp
ret
push
cmc
mov
mov
stc
mov
push
pop
addr16
pusha
negl
into
jmp
dec
xlat
and
loope
sbb
sbb
scas
xchg
pop
mov
push
sub
mov
xor
insl
ss
sub
ret
outsl
push
pop
pop
stc
cmp
cmpl
mov
sbb
inc
xchg
mov
ret
shlb
outsl
imul
cmp
orb
inc
add
inc
cmp
sbb
jo
xchg
out
rcr
das
cmpsb
stos
adc
or
jmp
sti
cs
adc
xchg
fiadds
adc
dec
pop
loope
xchg
add
jmp
mov
add
das
mov
popa
lds
adc
shr
daa
push
call
lods
jns,pn
stc
mov
inc
cmp
sub
mov
push
cmp
aas
sbb
add
add
jb
dec
fistl
daa
test
subb
sahf
jno
out
into
int
adc
dec
add
inc
adc
jae
dec
stc
lea
aas
std
jmp
push
dec
jns
jbe
adc
dec
or
lock
sub
stos
mov
mov
mov
and
inc
cmc
inc
stos
and
shll
xchg
push
or
mov
xchg
xchg
push
shr
pusha
add
xor
and
and
xchg
pusha
inc
or
js
ljmp
sub
or
xchg
inc
and
lahf
pop
sub
dec
or
jg
inc
cmp
adc
pop
jb
fcomi
mov
ds
pop
jecxz
add
or
or
mov
pop
mov
sahf
negl
push
daa
mov
insl
popf
ljmp
mov
inc
cmp
adc
pop
pop
and
push
ret
mov
fsubl
or
lahf
loopne
jbe
xchg
fstl
push
mov
add
outsb
ret
dec
jnp
sbb
sti
or
mov
scas
adc
neg
adc
les
daa
icebp
fisttpl
mov
push
pop
push
jmp
sub
mov
jmp
aam
xlat
out
dec
push
dec
add
pop
call
iret
mov
out
or
push
xor
adc
xlat
adc
adcl
rol
outsb
jp
enter
cli
cmpsb
stc
les
cltd
or
orb
cwtl
testl
sbb
mov
push
pusha
or
add
dec
push
push
das
int3
test
not
push
sbb
adc
mov
inc
ja
mov
mov
xchg
push
mov
inc
xor
pop
push
das
rolb
nop
popf
or
cmp
adc
xchg
bound
cli
orb
js
and
movsb
cmc
gs
and
or
jmp
jns
imul
rorl
out
nop
xlat
sbb
cmpl
daa
push
push
push
dec
dec
pop
loop
test
cld
adc
xor
xchg
jnp
nop
fcoms
ret
xchg
xchg
sar
repnz
or
loop
fidivrs
imul
gs
or
jmp
aad
pop
mov
mov
cli
ss
jnp
jb
shll
add
les
cs
fst
xor
pop
loop
movsb
jmp
sbb
loop
jnp
mov
test
decl
divps
or
push
or
ljmp
ss
pop
xor
add
out
add
or
repnz
ret
shl
mov
push
or
jmp
addb
mov
das
ss
hlt
fiaddl
out
out
xor
add
add
pop
cmp
fst
jp
mov
mov
xchg
loopne
jmp
push
push
call
mov
in
movsb
xorb
xchg
gs
xchg
mov
xchg
cs
movsl
mov
jmp
cmc
sub
les
inc
adc
xchg
adc
pop
push
mov
mov
inc
repnz
dec
rcll
iret
inc
or
pop
mov
sub
stos
xchg
loop
push
loop
jmp
test
out
inc
xor
and
xorb
inc
dec
pop
rcrb
in
jb
stos
xor
jmp
loop
cld
das
cld
in
push
test
mov
ror
adc
adc
hlt
mov
inc
out
xchg
test
mov
out
pushf
push
jmp
nop
stc
dec
jmp
pop
pop
ret
shr
push
push
jle
shrb
or
pop
xchg
shll
add
xchg
fs
lock
sub
sbb
adc
ljmp
enter
jmp
cvtps2pi
xchg
mov
das
push
pop
mov
pop
sub
loop
rcrl
bound
mov
stos
ret
popa
out
adc
cmc
cld
or
jno
pop
movsb
mov
or
xchg
daa
dec
test
popf
dec
scas
jne
addb
and
negb
xchg
or
adc
or
adc
and
shl
jnp
xchg
dec
aas
test
sub
rorl
jno
cmp
fcoml
lock
or
dec
inc
push
lods
sub
outsl
push
xlat
pop
lods
inc
dec
push
lods
cwtl
movsb
sti
and
in
std
mov
rolb
or
cmc
and
mov
out
popf
cld
jp
notb
cmp
enter
fcomip
sarl
and
mov
test
push
popa
andb
and
ret
mov
push
pusha
test
cmpsb
push
das
je
adc
mov
and
rolb
test
add
or
std
inc
sub
pop
xchg
push
jle
pop
andl
jmp
sub
jl
shl
out
cwtl
jl
mov
pop
dec
jnp
mov
lret
stos
dec
inc
ss
sub
add
and
das
inc
add
into
push
dec
dec
sub
add
int
dec
rcrl
mov
out
pop
inc
pusha
add
lret
sub
arpl
dec
call
xor
out
hlt
dec
lret
jecxz
jnp
rcrb
cs
imul
sbb
xor
pop
push
sub
dec
or
notl
rcrl
popa
xchg
movl
dec
sub
add
cmpsb
outsb
fadd
push
push
addr16
mov
pushf
clc
ljmp
cltd
rcr
add
mov
or
aad
push
or
rcll
jno
add
and
aas
add
push
push
push
shrl
push
adc
insb
dec
out
xor
lods
je
add
sbb
out
ret
je
sub
pop
cmp
push
adc
pop
adc
fs
sub
push
cld
hlt
adc
sbb
lock
mov
mov
dec
jbe
xchg
jb
xor
add
popa
std
mov
dec
dec
and
push
pop
jmp
push
mov
das
or
push
xchg
mov
add
ficoms
dec
cmc
jp
dec
std
popa
add
jmp
icebp
scas
add
xor
add
rolb
inc
xor
pop
cmp
and
in
lods
xor
add
fists
and
adc
xlat
adc
test
les
push
outsb
or
pop
push
xchg
arpl
cmp
nop
nop
add
cs
sub
mov
push
xor
xchg
inc
lret
or
or
and
sbb
filds
sbb
out
ja
rolb
add
call
push
pop
or
jg
cli
jp
dec
pop
orb
pop
adc
fidivs
and
gs
test
loopne
sub
jge
sahf
add
mov
mov
mov
push
out
or
loope
or
rclb
clc
or
jmp
fistl
dec
or
into
pop
mov
sub
and
push
stc
cld
aas
sub
sbb
and
mov
clc
jmp
divl
adcl
jg
enter
mov
mov
dec
stc
lret
jg
sub
ret
mov
sbb
repz
mov
pop
push
xchg
call
mov
or
cld
pop
popa
push
push
inc
pop
jbe
mov
inc
sbb
pop
mov
adc
mov
jae
jle
mov
xchg
call
fbld
pop
dec
add
push
shl
add
mov
popf
imul
neg
jmp
fadd
int3
dec
pop
pushf
fwait
pop
mov
xchg
pop
inc
push
cmp
out
push
add
pop
pop
popa
and
sbb
mov
std
push
fdivrs
cmp
shlb
insb
push
mov
xor
iret
test
jmp
lds
aad
sub
dec
xorb
sbb
je
pop
add
jge
pushf
or
movsb
pushf
xchg
add
ds
jne
bound
hlt
push
add
push
fs
jle
sub
fistpl
push
and
or
fiaddl
or
stos
fsubrs
push
push
inc
push
ret
sub
test
shrl
mov
sub
stos
mov
sti
aas
mov
repnz
and
loop
push
daa
mov
pop
nop
loop
push
dec
xor
add
push
mov
out
xorb
inc
clc
pop
enter
mov
je
lahf
cwtl
inc
ficomps
ds
and
ja
rolb
insb
mov
adc
cmc
shrb
cld
xchg
mov
fstpl
mov
sbb
popf
xchg
cmc
or
sub
fucomip
pop
xchg
push
rorb
dec
cmovp
jp
and
in
sub
addr16
in
in
dec
mov
imul
and
sbb
pop
stos
adc
out
ja
mul
test
lds
sahf
pusha
jge
loope
or
call
out
adc
scas
mov
mov
and
pop
mov
xor
fsubrl
les
insb
push
pop
nop
daa
jmp
imul
or
icebp
xchg
pop
xchg
repnz
mov
shlb
add
and
mov
das
and
dec
or
and
popa
pop
adc
dec
popa
xor
das
inc
or
xor
dec
pop
scas
cmp
jmp
pop
ffreep
out
push
adcb
int3
subb
inc
scas
dec
sti
cltd
add
mov
lcall
mov
daa
sti
jne
pop
ret
clc
out
cmp
test
insl
mov
cli
pop
and
je
jge
pop
jmp
lcall
mov
mov
pop
cmpsl
or
sub
hlt
dec
shlb
stc
movsb
rolb
jmp
mov
arpl
dec
mov
and
popf
pop
pop
pop
shl
das
push
sbb
pop
stc
mov
adc
out
or
cmp
cwtl
cmp
ret
subb
jmp
arpl
or
shlb
dec
test
flds
fidivrl
addr16
pop
mov
and
es
lret
movsb
notl
and
test
mov
sub
adc
xor
xor
sbb
xor
loope
adc
dec
sbb
add
lret
fs
mov
push
or
pop
rorb
add
add
das
jmp
push
lods
push
add
and
rclb
or
xor
dec
jle
adc
add
lock
mov
pop
mov
jmp
xor
push
pop
mov
int3
jmp
lcall
les
test
fstps
xchg
test
adc
dec
bound
dec
pop
add
adc
sub
adc
xlat
push
mov
dec
or
xor
adcb
push
mov
outsl
divb
aam
inc
jg
int3
pop
in
test
pop
jmp
inc
add
jp
adc
sub
inc
lahf
icebp
idivb
addr16
push
jo
and
or
sti
or
add
jnp
jp
xchg
fnsave
pop
jne
aad
jecxz
loop
push
push
loop
dec
jmp
jg
daa
fstl
mov
xor
sbb
data16
add
cmp
mov
dec
mov
in
adc
lret
add
fwait
dec
jmp
mov
cmpsb
mov
xchg
loop
test
pmulhuw
push
jg
push
and
fnstenv
stc
jg
jmp
and
jp
pop
inc
daa
xor
cmp
adc
inc
mov
les
popf
add
stos
adc
out
leave
ja
xchg
or
iret
adc
lahf
addl
cmp
gs
sbb
sub
add
pop
jp
ficoms
push
mov
loop
loopne
shr
add
rorl
mov
test
xchg
ljmp
ret
je
jecxz
jge
fs
push
mov
mov
add
xchg
ss
mov
ja
leave
push
sub
mov
xchg
out
inc
jle
ret
xchg
mov
mov
pop
xorl
orps
inc
in
stos
xchg
sbb
loop
popa
adc
jmp
or
mov
into
je
ret
xor
pop
test
push
fdivrp
pop
sbb
sbb
lret
inc
mov
gs
neg
dec
pop
adc
inc
stos
add
popa
js
xchg
das
jbe
sbb
scas
repnz
sar
xchg
arpl
movsb
ror
cmpsb
pop
mov
jmp
sub
fmuls
rorb
and
clc
mov
sbb
lock
push
std
cli
pushw
shl
scas
sbb
test
clc
pop
xchg
nop
jo
and
xor
push
push
imul
pop
add
mov
subl
push
ds
push
movsl
push
in
js
inc
sub
iret
repnz
icebp
icebp
or
std
mov
xchg
and
std
jae
dec
imul
sub
shr
or
jmp
jb
add
mov
jmp
cli
sub
loop
ffree
enter
cmp
std
repz
adc
sub
ljmp
bound
xchg
adc
xchg
out
mov
shrb
out
lods
mov
add
push
dec
rclb
mov
and
add
gs
push
cmpsl
addl
xor
shr
pusha
push
adc
mov
stos
cwtl
inc
popa
dec
lret
push
pop
out
hlt
push
mov
ror
pop
nop
in
inc
mov
mov
pop
cmp
testl
jle
mov
lods
and
sti
or
ficomps
repnz
lea
push
out
out
mov
add
loop
add
fldcw
jno,pt
push
aas
xchg
cld
mov
outsl
clc
inc
mov
pop
pop
testb
into
dec
or
mov
sbb
jmp
scas
mov
lahf
int3
adc
std
daa
in
or
xchg
or
jmp
dec
jmp
test
sbb
mov
pusha
insb
mov
sbb
xchg
push
push
xlat
add
add
div
add
pop
addb
addl
add
jo
fadd
addl
lcall
push
push
mov
mov
idivb
push
add
roll
pop
add
je
or
xlat
movsb
in
xor
ds
aad
outsb
xor
mov
leave
mov
stos
fs
dec
repz
inc
or
jne
insl
outsb
jb
mov
adc
bound
pop
adc
adc
add
in
rorl
mov
rol
dec
daa
dec
push
in
in
ds
mov
cmp
push
push
pop
jmp
and
outsb
popa
sub
pop
repz
jb
adc
jp
or
and
pop
cmpb
fcomps
cs
mov
jbe
or
sub
adc
push
mov
les
adc
jne
pusha
insl
jmp
ret
mov
je
sub
ja
cmpsb
enter
mov
jecxz
outsb
rol
fildll
pop
jl
or
lds
sbb
andl
in
mov
pop
hlt
inc
repnz
jg
ret
stos
insl
test
outsb
mov
adc
and
push
call
jmp
scas
cmp
adc
push
bound
pushf
or
fwait
and
dec
daa
out
jb
sub
cld
mov
adc
or
dec
add
inc
mov
pop
faddl
or
push
cwtl
notb
mov
fists
lcall
nop
repz
xlat
int3
gs
pop
push
xor
ret
ljmp
inc
testb
out
xchg
out
mov
dec
rcrb
repnz
in
and
lahf
adc
sbb
mov
dec
mov
into
mov
inc
setge
loop
pop
push
lock
mov
out
mov
mov
sub
ret
xlat
pop
pop
cli
scas
mov
addl
clc
push
in
add
std
and
and
adcl
and
or
jae
pop
lret
jl
jmp
hlt
adc
xchg
pop
cmp
sarl
push
jecxz
pop
xor
pabsw
call
inc
lds
aaa
push
add
cmc
add
pop
rclb
inc
shlb
push
bound
jge
into
jae
sub
ret
xor
movsb
xor
dec
push
or
pop
pop
cs
mov
js
mov
idiv
fbld
dec
repnz
sub
enter
jg
mov
lods
xor
jmp
or
aas
or
xor
push
add
js
clc
adc
add
int
xchg
cmp
aam
rcrb
pop
ss
adc
or
or
test
inc
xorb
mov
mov
jl
stc
cmp
mul
push
cmp
cmpsl
cmp
sub
es
lahf
js
es
negl
das
push
mov
mov
adcb
inc
add
insb
jmp
loopne
pushf
prefetch
or
rcrb
pop
fnsave
xchg
xor
rorl
add
mov
lahf
push
in
or
add
nop
adc
push
sub
fcmovne
inc
adc
insl
adc
imulb
pop
es
lret
rcr
leave
push
in
aaa
pop
push
mov
movsl
mov
xchg
and
mov
push
push
fsubs
xchg
pop
mov
jge
fmuls
sub
add
es
mov
adc
or
insb
fmuls
mov
outsl
sbb
dec
das
dec
sub
mov
jno
shr
jb
mov
or
pop
iret
add
out
sti
into
sbb
aad
xchg
loopne
inc
mov
and
les
mov
mov
bound
loopne
jmp
push
mov
adc
pop
sub
ljmp
sbb
sub
xlat
sub
or
mov
xchg
daa
ja
cmpsl
cli
hlt
fdivs
jbe
inc
xchg
cmc
pop
imul
xchg
mov
add
in
xor
filds
and
std
sbbl
and
lcall
sbb
sbb
je
les
mov
and
pop
xchg
jge
push
mov
adc
out
repnz
test
out
pop
xor
sub
mov
sub
and
popf
ja
fstpl
adc
or
mov
jne
in
sti
push
mov
sahf
push
push
mov
arpl
mov
xor
inc
stos
and
push
add
into
das
mov
stc
sub
pop
xor
pusha
jbe,pt
adcb
ds
xchg
sti
clc
jmp
ljmp
mov
clc
loope
mov
rcr
xchg
xchg
sti
pusha
lds
jecxz
adc
fs
sub
pop
insl
enter
outsb
add
mov
jg
fnstenv
adc
gs
pop
cs
push
xchg
sbb
push
fwait
pop
sub
sub
add
pop
pop
mov
aam
aam
cmp
mov
sub
test
dec
mov
out
movsb
xchg
call
jle
inc
sbb
push
lds
hlt
jmp
fdivs
cwtl
jge
or
pop
loopne
mov
jo
fstps
mov
dec
jnp
sahf
pop
cs
dec
fidivrs
xlat
mov
adc
sub
mov
cmp
outsl
mov
repz
and
ja
int3
lods
or
mov
push
mov
out
imul
add
jo
xchg
pusha
mov
notb
int3
mov
jecxz
or
cmp
xor
scas
pop
sub
lock
push
daa
jecxz
and
jp
nop
lods
mov
outsb
jmp
out
arpl
mov
lods
call
cmpl
cmpsl
inc
dec
repz
sub
cmpsb
or
inc
je
pusha
mov
fcompl
addl
add
add
mov
pop
and
outsb
and
push
jmp
jl
mul
mov
or
or
ja
add
push
dec
mov
sbb
xor
mov
inc
inc
jb
add
add
mov
pusha
out
fimull
cmp
jae
mov
cwtl
and
mov
adc
test
pop
fdivl
movsb
pop
jmp
call
ret
dec
stc
mov
mov
loopne
mov
xor
icebp
jae
add
mov
imul
in
das
bound
dec
mov
and
mov
pushl
pop
pop
in
roll
and
pop
neg
add
cmp
mov
jl
or
icebp
repz
pop
xlat
addr16
mov
mov
push
fmull
ja
dec
insl
in
fldenv
pop
mov
push
add
lods
push
jae
and
movsl
jl
mov
out
in
repnz
aaa
and
lret
dec
push
push
aaa
ja
add
mov
sbb
les
jle
or
test
test
cmp
div
ds
or
in
in
inc
xchg
mov
shlb
icebp
cmpsl
inc
xchg
lea
dec
mov
sub
mov
push
jge
std
jno
aas
jg
add
mov
out
xchg
je
mov
mov
test
dec
in
push
ret
ja
inc
pop
dec
adcb
mov
push
mov
jb
les
jae
jne
stc
stos
jp
adc
repz
das
sub
lods
and
xchg
cwtl
and
push
inc
push
fiaddl
or
outsb
inc
leave
sub
out
mov
aad
stc
jl
mov
repnz
in
push
or
xor
xchg
lret
xor
test
movsl
enter
jmp
addr16
in
add
iret
push
add
and
fiaddl
xchg
jmp
insl
mov
dec
std
sbb
mov
pop
jmp
scas
and
or
inc
pop
add
add
mov
mov
mov
mov
pop
in
and
dec
scas
andb
leave
add
xorl
push
pop
xor
push
pop
shll
push
sub
xchg
push
mov
hlt
lret
and
in
inc
call
fmuls
and
sti
packsswb
cmpsl
loop
and
add
sbb
or
inc
repz
jmp
mov
pop
mov
ret
xor
in
and
jmp
xchg
jns
push
pop
into
jge
test
nop
mov
jle
cwtl
shlb
push
mov
stos
cmp
xchg
aam
pop
dec
pushf
pop
push
push
jae
and
lods
cmp
add
pop
push
adc
or
adc
lcall
cltd
pop
sub
push
dec
dec
das
mov
push
or
pusha
repz
jnp
mov
jmp
jg
popf
ss
lret
xchg
sub
orl
iret
jecxz
push
pop
push
notb
or
and
imul
sub
mov
shrl
pop
repz
gs
in
xchg
adc
sbb
pop
stc
scas
imul
mov
mov
int
imul
ds
leave
or
pop
sub
out
pop
mov
add
rcll
aas
inc
xchg
mov
cmc
stc
into
loop
std
loopne
lds
pop
push
sbb
sub
sub
bound
adc
inc
mov
out
or
push
std
pop
push
es
or
lcall
add
xlat
dec
cmc
jp
or
add
or
adc
or
and
mov
repz
insb
and
outsl
jp
or
int
or
shrl
rol
jmp
cmpsb
dec
outsb
sub
and
loopne
pop
rorl
xlat
loope
pop
lret
div
gs
mov
jmp
aad
and
mov
cmpsb
lret
or
add
scas
cld
push
imul
hlt
and
xor
and
dec
sub
jmp
insb
sub
data16
jecxz
pop
fcomps
fstpt
lahf
gs
xchg
sub
jae,pt
dec
fistpll
addr16
jno
sub
ja
lret
sub
and
cmp
cmc
test
sub
pop
int3
add
or
inc
add
and
daa
jns
lds
js
das
cmc
mov
shlb
or
pop
pusha
mov
add
arpl
imul
cmpsl
decb
push
icebp
jne
push
bnd
pop
fcmovne
sahf
jl
je
fcmove
pop
xor
inc
jnp
push
lcall
iret
mov
xor
add
xor
orb
pop
jo
mov
out
sub
add
call
clc
pop
sub
inc
jbe
sbb
not
or
test
sub
mov
jmp
pop
cli
in
sub
inc
pusha
aas
not
mov
or
jl
loopne
push
jbe
jmp
mov
imul
inc
dec
dec
js
out
insl
sti
add
mov
lret
gs
shl
lock
add
xor
cld
pop
test
mov
jae
push
pop
pop
mov
test
push
adc
je
in
ret
call
push
add
sbb
cmp
push
repnz
sar
or
outsl
push
or
cmp
inc
daa
jmp
gs
es
loop
aas
pop
mov
sub
jge
inc
dec
push
pop
sub
dec
roll
movsl
cmpl
dec
or
outsb
fs
and
pop
jnp
daa
push
iret
adc
pop
dec
out
fldcw
cmp
cli
adc
clc
and
imul
push
inc
lods
push
shrb
pop
mov
ds
inc
adc
mov
pop
aas
idivl
sub
mov
cmp
stos
loopne
std
xorb
fsubl
in
push
icebp
sub
lret
adc
sub
xchg
out
icebp
repnz
jb
test
pop
pop
mov
xchg
rorb
push
or
inc
les
mov
jmp
mov
jns
xlat
shl
xchg
sub
mov
pusha
test
push
dec
xchg
cmp
inc
add
mov
lods
add
lcall
pop
rorb
jl
jb
dec
adc
lds
jg
ds
cmpsb
or
inc
dec
js
and
lock
pusha
repnz
pop
dec
jl
ja
aaa
mov
mov
popf
push
out
sbb
pop
out
push
jp
adc
sbb
jmp
lahf
sub
shrb
push
sbb
aaa
cmpsl
mov
cld
and
sbb
xlat
popf
xchg
xchg
push
mov
push
rcrb
push
jge
mov
bound
rclb
adcb
adc
jmp
sbb
jle
roll
inc
sub
loop
adc
daa
loope
mov
and
incb
inc
in
adc
mov
clc
push
comiss
inc
jle
mov
ja
in
inc
mov
add
jmp
sub
mov
add
push
mov
inc
push
mov
aam
and
dec
and
add
sbb
jmp
push
movb
addb
cld
cmp
dec
or
cmc
pop
loope
or
sub
stc
sarb
and
push
pop
jbe
clc
jmp
mov
adc
push
dec
add
adc
and
cmp
in
dec
popf
mov
adc
jae
push
int3
adc
add
push
out
mov
outsl
adc
shr
addr16
xor
mov
test
jmp
xor
ret
psubq
adc
sub
sub
repz
mov
push
popf
nop
mov
in
and
popa
or
or
jmp
mov
pop
dec
add
das
loope
aas
lods
dec
hlt
scas
test
clc
ljmp
std
lds
lods
bound
fiadds
push
jmp
nop
pop
sub
sahf
dec
js
cmp
js
pop
xchg
fidivs
pop
shll
cmp
mov
pop
push
int
sub
lret
nop
hlt
push
sub
jmp
fimuls
movsb
or
and
out
dec
jb
rorl
adc
push
test
shrb
mov
stos
and
mov
or
jo
xchg
lods
in
jmp
das
test
sub
andb
adc
push
jae
notl
push
not
mov
icebp
movsb
cmp
or
pop
add
inc
cmp
sub
test
or
or
or
fxch
cld
ljmp
adc
and
inc
cmp
push
and
dec
pop
out
rorb
inc
jno
adc
pop
jmp
aam
loop
adc
mov
add
mov
jl
shrb
xchg
in
cmpsl
mov
loop
out
fucomp
jmp
sbb
dec
jecxz
shrl
loopne
fidivl
pop
sbb
push
negl
clc
enter
fimuls
stos
out
pop
pop
cmp
sub
movsl
mov
inc
lods
pop
popa
xchg
sub
movsl
popf
pop
pop
iret
testb
incb
jo
rcll
jmp
into
lret
addb
int
sbb
stos
pop
xor
mulb
or
adc
mov
jne
cmp
jae
and
mov
xor
cmp
add
or
add
mov
ljmp
xor
in
or
mov
mov
pusha
imul
sbb
es
lock
sbb
daa
jmp
push
mov
testb
xor
lock
adc
mov
add
inc
push
fisttpll
js
mov
rorb
popa
xchg
pop
sub
mov
add
aad
nop
mov
push
leave
and
sbb
cmpsl
or
and
es
jo
or
jg
mov
push
or
add
push
loop
daa
loop
iret
ljmp
pushf
fs
ljmp
inc
mov
adc
daa
mov
pop
fstps
mov
negl
and
sbb
pop
inc
loop
add
mov
call
add
cmc
fdivrl
aas
cltd
cmp
pop
mov
dec
loop
inc
ja
cmp
dec
stos
gs
dec
incb
repnz
rcrb
cmpsb
or
sub
cmp
aad
cltd
add
push
push
sub
xchg
and
shlb
sub
fadd
insl
ret
cmp
xlat
xchg
and
inc
xchg
pop
add
xor
ret
mov
add
dec
xchg
push
pop
out
fwait
cltd
es
test
dec
or
push
add
sub
mov
push
les
ret
pop
push
dec
std
movsbl
jmp
mov
xchg
dec
inc
xchg
jb
clc
cwtl
add
sub
jmp
shlb
inc
pusha
dec
or
insl
je
jno
testb
and
cmp
fisubl
in
out
mov
inc
cmp
fcmovbe
lea
sbbb
pop
sub
loope
pop
or
or
mov
push
sbb
adc
xchg
push
push
adc
xor
test
ds
xor
out
or
xchg
jae
push
jp
or
ret
cmpsb
lds
jmp
pop
and
mov
scas
enter
or
jmp
sub
cmc
or
subl
sbb
loopne
push
push
inc
jb
add
mov
lock
add
inc
das
lock
lahf
in
ja
xchg
inc
jmp
lods
push
mov
or
dec
push
adc
xor
cmp
cwtl
and
push
fwait
psubq
test
mov
mov
mov
pop
adc
and
int
mov
adc
push
loopne
repnz
cmp
data16
lret
or
jo
cmpsb
jnp
rol
jp
cwtl
jns
xchg
test
rcrb
pop
mov
aas
lahf
sub
mov
ficoml
pushl
jmp
scas
cltd
int3
jne
jb
or
loope
add
push
inc
out
sub
add
bound
sysexit
shr
adc
or
addl
test
mov
ret
or
push
test
lahf
add
inc
add
stos
fldenv
movsb
sbb
jne
lret
cmpsl
fimuls
or
imul
push
mov
pop
ja
xor
pop
mov
push
mov
ss
and
add
add
dec
sahf
dec
add
push
add
das
sub
pop
aaa
add
jmp
mov
out
out
adc
inc
jp
mov
lret
jmp
sti
enter
sbb
sti
addr16
jae
inc
inc
subb
mov
xchg
cmpsl
push
and
add
ret
test
inc
push
pop
xor
pop
ljmp
jbe
push
aaa
dec
adcb
pop
sub
adc
pop
add
xor
idivl
insb
in
into
popf
js
nop
add
push
imul
gs
mov
pop
cli
add
not
cld
add
lock
add
int3
shlb
fadds
push
inc
pop
xor
add
or
stos
mov
sub
push
push
jmp
lahf
jg
mov
cmp
out
or
adc
sub
or
dec
mov
push
out
movsb
dec
sahf
xchg
lds
add
push
clc
sub
add
shrl
fbstp
push
js
jmp
pop
adc
fdiv
adc
sbb
pop
adc
daa
xor
add
sub
pop
xchg
notl
xor
add
sub
adc
push
and
in
jmp
mov
loopne
push
into
out
adcb
sahf
sub
jecxz
pop
pop
adcl
not
push
lret
andl
mov
es
bound
push
add
inc
pop
pop
movsl
bound
aad
fsubr
lret
lret
fs
sbb
rolb
pop
push
testb
sbb
cltd
dec
mov
ljmp
dec
cmp
or
push
aad
les
mov
xchg
shrl
in
popa
jmp
repz
daa
fisubrs
push
fprem1
std
add
movsl
cwtl
mov
jge
push
pusha
cmc
lods
lods
js
lret
aam
je
dec
xchg
notl
jns
push
mov
jp
jne
xor
bound
inc
fsub
jmp
pop
add
jl
imul
arpl
or
cmp
jge
repz
xor
leave
adc
push
ljmp
movsl
jb
pusha
sbb
pop
aam
mov
dec
and
inc
pop
ret
fwait
sbb
and
fistps
int3
es
mov
adc
dec
pop
or
movsb
and
mov
pop
push
test
jp
repz
xor
mov
jnp
xorb
aam
or
or
adc
dec
int3
jg
lods
push
inc
dec
sub
xchg
jecxz
xor
adc
aaa
nopl
aam
lret
pop
push
adc
out
rolb
add
popa
push
ret
jae
jecxz
imul
sub
mov
dec
outsl
jg
mov
inc
pop
sub
push
aas
rcrb
gs
add
pop
push
loope
xchg
or
sub
in
xor
jnp
push
test
hlt
test
aam
scas
mov
loopne
mov
outsb
movl
imulb
jb
pop
or
scas
pop
push
rorb
insb
xor
add
and
dec
ja
pop
nop
stos
daa
adc
int
rol
pop
sub
jmp
imul
add
shr
or
arpl
sub
das
inc
add
pop
xchg
sbb
inc
jns
orb
clc
scas
pop
jmp
cmc
cmp
js
jmp
scas
repz
dec
inc
sub
sbb
test
jbe
and
adc
loop
mov
fadds
adc
dec
xor
jge
or
inc
jne
rcrb
or
mov
pop
pop
sarl
push
add
or
mov
pop
ss
mov
imul
fimull
cmp
dec
shll
and
dec
inc
mov
lcall
pop
loope,pt
pop
pop
pop
adc
inc
jae
add
rolb
test
push
pop
rcrl
ljmp
insl
sbb
inc
stc
out
repnz
push
pop
jmp
push
aam
in
xchg
dec
jmp
fidivrl
add
out
loope
aaa
jp
ret
sub
in
shlb
adc
lret
out
jl
ret
add
mov
xor
call
pop
or
shll
push
jmp
add
inc
lods
rorl
dec
jb
jns
dec
fldcw
jae
sub
vmread
paddb
xchg
out
sub
mov
sbb
add
pushf
jle
cmp
xchg
hlt
cmp
dec
sbb
mov
add
mov
and
and
testl
nop
scas
sub
ja
mov
xlat
outsb
testl
orl
adc
push
mov
loop
ficoms
cmpsb
mov
pusha
adc
and
pop
pop
xchg
jae
adc
add
mov
test
xor
les
adc
or
and
jmp
and
cmp
ljmp
add
xchg
sbb
mov
mov
pusha
fsubl
jp
cmp
pop
and
in
dec
sub
xor
add
mov
outsb
repnz
cli
pop
int3
and
adc
loop
or
cltd
jae
hlt
out
in
pop
and
scas
add
push
mov
pop
dec
sub
aaa
lcall
mov
fcomp
pop
enter
scas
sbb
incb
mov
add
inc
jne
or
add
push
mov
pop
mov
aaa
mov
dec
mov
addb
popa
mov
jge,pn
push
rcrb
js
and
and
test
push
jmp
aas
into
mov
mov
and
dec
ret
jmp
mov
mov
fst
in
lahf
jno
pop
mov
jnp
mov
pop
aad
cltd
mov
es
jl
in
jo
ds
std
mov
out
mov
lds
sti
pop
mov
cli
lret
call
jg
dec
aam
jmp
xor
js
stos
clc
add
out
out
jb
nop
mov
xor
jge
xor
pop
jo
xchg
lcall
push
push
push
outsb
test
stos
not
xchg
in
dec
sub
fisubrs
les
inc
pop
sti
bound
imul
sbb
push
or
mov
outsl
inc
and
daa
ja
sub
xchg
mov
sbb
push
xchg
dec
add
pushf
lret
fisttpll
jmp
movsl
in
push
mov
mov
xor
ds
ss
outsb
sub
jmp
add
out
or
maskmovq
testl
testb
out
pop
add
push
cli
rcll
mov
mov
mov
cmp
xlat
or
ret
ja
jge
cmp
push
mov
fs
push
sbbb
movsl
pop
add
or
hlt
scas
push
cs
push
pop
mov
cmp
int3
adc
jmp
iret
lret
imul
mov
xor
mov
sub
sub
push
mov
inc
sub
rorl
lods
adc
mov
or
pop
cmc
xchg
push
mov
sub
loop
adc
jno
jnp
push
or
mov
jge
repz
gs
loope
mov
sub
and
xchg
imulb
test
pop
push
adc
dec
out
test
pop
repnz
jl
cmp
mulb
call
sbb
xchg
push
push
sub
push
repz
xor
push
nop
mov
pop
adc
xor
pop
mov
pop
add
xchg
add
mov
stos
adc
inc
or
mov
fs
dec
xor
pushf
jno
data16
or
pushf
adc
and
dec
cmp
pop
popf
call
iret
jb
xchg
fmulp
imul
jecxz
outsl
push
pop
inc
push
mov
shll
scas
shrl
int3
fdiv
fs
mov
sub
roll
in
icebp
int
cmp
jle
adc
push
mov
adc
mov
dec
test
out
int
incl
xchg
push
cmp
pop
pop
aas
not
mov
sub
in
add
leave
neg
jmp
sub
mov
jo
adc
movsb
rorl
cltd
mov
or
mov
add
ficompl
out
movsb
pop
mov
test
ficomps
add
add
sub
test
test
dec
aad
jmp
aam
std
mov
pusha
inc
mov
lock
stos
in
or
pop
pop
out
push
shrl
jb
inc
leave
inc
cmp
cs
jo
jmp
fidivrl
out
adc
daa
xor
mov
not
jns
rcll
orb
shrb
mov
or
pop
pop
dec
add
outsl
and
outsb
test
sub
jg
xchg
push
pop
adcb
movsb
je
dec
xlat
xchg
fmul
and
and
insl
or
push
popa
ror
pop
or
stos
adc
push
pop
out
adc
jmp
dec
scas
sbb
mov
sub
inc
lret
pop
rcll
push
pop
add
mov
xchg
mov
lret
subb
mov
mov
pop
push
xchg
jae
add
and
inc
orb
xchg
cmp
pop
int3
orb
stos
test
or
sbb
ljmp
fildll
fcom
mov
xor
jne
addr16
js
add
gs
cmp
pushf
aaa
mov
mov
addl
xor
jmp
mov
push
inc
fmuls
xor
or
adcb
inc
imul
jbe
add
call
loope
call
testb
mov
gs
jnp
or
in
pop
mov
nop
dec
insw
mov
icebp
jmp
adc
mov
incl
jecxz
dec
push
xchg
lcall
sub
jne
imul
loopne
mov
xor
or
sbb
jecxz
pop
cwtl
pop
dec
cmp
repz
xor
lods
push
bound
or
mov
cmpsl
push
mov
roll
xchg
scas
pop
out
mov
loopne
jae
fidivrs
push
dec
pop
sub
pop
mov
movhps
in
inc
lret
push
cmp
jmp
dec
sti
ljmp
repz
shr
dec
jge
pop
rcll
or
lret
sti
sbb
push
sbb
mov
repz
push
adc
jno
lock
xor
push
push
inc
orb
mov
cmp
or
shrb
mov
push
in
mov
in
or
jmp
imul
pop
xchg
cmp
mov
lods
sbb
jg
aad
adcb
pop
mov
stos
popa
mov
shrb
xchg
mov
mov
add
pop
cmc
pusha
add
imul
iret
push
push
jl
loop
divl
xchg
and
adc
sub
test
sbb
inc
andb
int3
sub
mov
add
mov
popf
mov
push
dec
or
popa
cmc
movsb
imul
sub
sti
adc
jge
push
sarb
pop
outsl
jo
in
stos
push
invd
adc
xorb
popf
fisttpl
dec
and
fwait
mov
ret
jbe
lds
and
outsb
movsb
and
xor
jae
add
clc
inc
mov
inc
push
sbb
addb
shr
rol
mov
xor
pop
subl
pusha
or
or
js
cvtdq2ps
mov
push
fisubrs
stc
enter
icebp
adc
pop
cli
and
fistpl
or
sbb
xchg
popa
testl
or
push
mov
push
ret
push
jbe
hlt
inc
push
jo
adc
mov
ret
clc
cwtl
cmp
push
add
jne
roll
mov
and
or
adc
loop
dec
rolb
push
jl
push
push
in
cltd
cmp
mov
xor
dec
pusha
mov
sub
xor
or
in
sbb
jg
fstp
call
ret
push
jle
xchg
out
mov
push
jae
dec
xor
imul
aam
ret
push
testb
xchg
jl
and
adc
adc
sub
call
xchg
add
or
inc
lret
daa
sub
fnstsw
mov
nop
inc
or
das
loopne
cmp
leave
and
mov
test
push
jmp
cmp
add
xchg
push
lods
mov
sarl
not
xchg
or
cld
adc
jmp
out
loope
insl
addr16
fcomi
cltd
push
leave
bound
mov
push
loope
insl
push
clc
push
xor
or
rclb
dec
pop
cmp
arpl
mov
loop
std
enter
add
jge
and
loope
pop
loope
fst
mov
or
and
cmpsl
sti
pop
mov
ljmp
sub
daa
xlat
inc
inc
das
add
or
jbe
pop
pop
push
mov
cmpsb
xchg
jns
mov
aas
xor
push
or
inc
or
call
jl
mov
jg
jo
cmp
push
cmp
adc
add
movsl
out
mov
out
jmp
lods
adc
scas
push
sub
pop
shr
jns
adc
xorb
adc
shr
xchg
stc
sbb
jb
jne
out
ljmp
pop
out
xor
push
mov
daa
test
mov
xor
mov
stc
cli
dec
test
cmp
fsubrp
sub
imul
pop
jl
xor
pushf
fsubrl
push
movsl
std
mov
mov
xchg
xlat
mov
or
cmp
dec
fmulp
sbb
or
fdivrl
inc
pop
jge
push
push
add
fstps
cltd
in
and
mov
dec
push
mov
gs
shr
mov
dec
gs
sbbl
es
faddp
in
sahf
inc
push
pop
pop
sub
shrb
and
and
popf
js
pop
movl
rcrb
icebp
push
mov
es
mov
jns
xchg
into
or
mov
out
ds
dec
or
test
dec
mov
add
jns
inc
mov
je
popf
adcb
mov
push
and
mov
loope
mov
push
fwait
add
int3
pop
sub
add
loop
leave
sub
fisubrs
cli
pop
in
mov
push
mov
pop
cmp
add
pop
lods
xchg
pop
test
mov
mov
vpaddd
add
sahf
pop
xor
push
sbbl
pop
jge
mov
ret
jmp
lods
notl
outsl
add
sub
mov
pop
push
mov
aaa
pop
sbb
jmp
dec
push
inc
sub
sbb
xchg
sbb
in
dec
push
sub
xor
mov
mov
and
fistpl
xchg
xor
inc
mov
loopne
mov
pop
movb
add
clc
ret
xchg
adc
jge
sub
or
xor
cmp
mov
hlt
mov
pop
xchg
pop
cmp
or
dec
lret
out
rcrb
cmpsl
jle
and
add
inc
and
and
aam
out
inc
notl
inc
shrb
leave
movsb
mov
mov
sub
jl
fs
xor
adc
out
pop
fisttps
jmp
daa
decb
sub
mov
xchg
lds
inc
push
pop
or
shll
pop
idivb
gs
enter
ljmp
cld
icebp
decb
int
adc
pop
sub
or
jle
aas
fldl
mov
sbbl
out
cmc
leave
cmpsb
xchg
daa
bound
jg
cmp
push
inc
adc
pop
test
enter
addl
divb
int3
jp
in
xchg
or
dec
mov
popf
add
add
push
sub
adc
pop
in
stos
mov
dec
test
test
lods
add
push
hlt
pop
pop
add
xor
mov
xchg
pop
ds
shll
das
mov
out
cmpsl
cmp
test
dec
mov
jge
jb
mov
stc
xchg
xchg
mov
pop
out
dec
insl
test
ljmp
andl
mov
jmp
jg
pop
pop
pop
cmp
dec
mov
jmp
xchg
mov
dec
and
or
add
jne
push
nop
decb
dec
inc
setbe
daa
and
dec
add
xlat
jmp
inc
sbb
fdivs
xchg
hlt
adc
or
mov
dec
jno
mov
mov
les
shlb
jno
or
pop
sbbl
addl
test
add
xchg
fdivrl
dec
std
add
push
clc
jae
ja
sbb
sub
ds
push
pop
repnz
pop
cmp
mov
and
gs
arpl
inc
sbb
div
sbb
pop
repnz
push
or
jge
ds
pusha
sti
bound
xchg
add
mov
mov
jae
push
clc
pop
shr
push
add
daa
jl
cmp
aam
inc
out
data16
push
popf
ja
push
roll
fsubl
sub
jmp
mov
add
rcr
insb
pop
xchg
adc
sbb
fnsave
jecxz
push
pop
pop
sbb
inc
out
test
pop
xor
push
stos
adc
adc
or
roll
loope
stc
pop
inc
jmp
repnz
mov
pop
sti
dec
dec
and
aam
xchg
aaa
xchg
mov
aam
stos
loope
or
pop
not
inc
psubd
or
dec
inc
lods
xlat
aam
pop
aam
mov
roll
add
and
mulb
or
push
inc
mov
or
push
mov
sub
inc
push
push
sub
call
pop
fmull
mov
xchg
mov
repz
scas
adcl
testl
and
push
les
push
pop
push
pop
roll
add
mov
cmp
and
jmp
mov
repnz
inc
mov
xchg
sysenter
rcrb
pop
fwait
sub
int
push
popf
add
shrb
leave
mov
mov
pop
das
push
fstl
nop
sahf
jle
movsb
cld
add
iret
push
sub
inc
outsb
or
inc
ret
and
dec
insl
lods
sbbl
sahf
adc
xchg
call
movsl
sarl
mov
jmp
loope
es
push
divl
jmp
add
je
sbbl
mov
xchg
jg
push
xor
pop
xchg
xor
or
loopne
icebp
pop
xchg
push
movsl
in
or
pop
or
inc
inc
mov
outsl
loope
pop
mov
jp
xorb
pop
imul
jne
push
out
loop
pop
pusha
int
sti
xchg
fwait
addr16
dec
lods
adc
cwtl
or
and
push
mov
lret
push
mov
xor
das
lock
push
xchg
or
xor
mov
pop
inc
notl
out
int3
je
mov
popf
mov
push
adc
dec
adc
push
add
sub
inc
in
stc
cmp
in
ljmp
adc
or
sub
xchg
sub
mov
loop
dec
ret
add
out
mov
push
jp
and
jae
call
out
inc
and
sub
clc
sub
mov
jmp
and
pop
push
jo
out
jbe
sbb
and
xor
push
shrb
js
sbbb
or
push
push
jmp
jl
repnz
push
jbe
leave
cmc
int3
xchg
sbb
inc
dec
add
push
jb
inc
daa
les
fwait
mov
out
loop
aad
jp
jmp
mov
add
xlat
or
cs
or
add
addb
mov
sbb
clc
jecxz
xchg
sbb
fnsave
sti
fs
lods
adc
cmc
aad
cmpsb
cmpsb
pop
out
orb
arpl
jmp
movsl
into
roll
popa
loop
jge
push
pop
push
adc
stos
sbb
pop
cmp
cmpsl
and
iret
test
mov
mov
xor
add
push
jne
sets
inc
aas
inc
call
pusha
sub
pop
mov
sub
sub
and
or
jns
cmp
add
xchg
mov
or
push
jmp
and
sub
xchg
pop
test
pushf
iret
xlat
pop
pop
in
mov
sbb
sub
add
shrb
lret
cmc
daa
test
jmp
dec
movsb
mov
ret
push
fisttpl
or
movsb
pop
adc
adcb
dec
les
push
cmp
cmp
dec
ljmp
pop
add
subl
sub
pop
enter
push
mov
mov
xchg
addb
lahf
cmpsb
loope
inc
mov
sub
dec
aad
roll
notb
mov
jae
pop
rcr
stos
xor
add
out
dec
pushf
das
es
add
and
adc
clc
add
out
shrb
push
daa
cmpsl
adc
inc
cltd
inc
imul
and
stc
lcall
movsl
add
and
or
inc
dec
cmp
push
shll
int3
shl
mov
jmp
jl
jbe
les
jbe
mov
adc
sub
mov
xchg
daa
jo
mov
in
pop
sbb
pop
aaa
shrb
or
cmp
imul
lods
adc
xor
scas
rorl
out
cmpsb
je
or
push
and
jae
pop
cs
inc
mov
push
sub
or
mov
sub
cli
fdiv
rcl
mul
mov
cltd
bound
cld
sbb
xor
or
pop
sub
jo
or
inc
jp
pop
in
loop
add
ficompl
dec
mov
aas
cmpsl
filds
adc
rorb
pop
push
inc
popa
cmp
add
push
sbb
sbb
imul
xchg
add
inc
mulb
pop
push
mov
es
lds
dec
add
sub
xchg
dec
pop
jge
test
mov
aaa
inc
xor
mov
outsl
and
sub
addb
mov
dec
mov
xchg
jl
lock
push
icebp
vorps
leave
repnz
in
das
outsl
mov
lods
dec
sub
scas
adc
in
gs
mov
and
push
jo
hlt
sub
push
push
in
cs
movsl
dec
es
adc
push
in
ret
mov
push
je
daa
fnstsw
mov
push
pop
popa
mov
cmpsb
jnp
in
jo
cmp
cli
in
mov
jg
test
adc
adc
rcr
lret
cmpsl
pop
popa
daa
cmp
mov
idivl
pop
test
cmp
daa
fldenv
int3
inc
shrl
pop
cwtl
adc
sub
ds
dec
sub
jmp
inc
loopne
mov
loop
imul
enter
sub
xchg
xchg
shll
std
cld
mov
mov
inc
add
jge
jmp
adc
add
aad
jmp
cld
das
imul
cmp
ss
scas
adc
pop
dec
sub
das
add
xchg
xchg
xchg
loopne
js
jle
push
xlat
inc
xlat
sub
stos
test
dec
pushf
adc
fstp
cmovg
push
je
sarb
popa
jmp
movsb
stos
and
popf
js
dec
and
dec
call
mov
dec
inc
clc
mov
jmp
mov
les
clc
xor
ret
fstl
sbbl
sbb
lock
pusha
pop
and
rorb
cmp
xor
neg
jecxz
sar
and
test
nop
push
inc
inc
cmp
add
inc
or
orl
sub
scas
into
orb
add
cmp
xchg
jae
lods
jbe
pop
xor
je
scas
add
inc
lds
sub
inc
pop
pop
inc
pop
sbb
or
jg
adc
aas
out
adc
test
pop
xor
cmpsb
mov
dec
sbbb
stos
pop
insl
orb
aam
push
sbb
out
gs
int
xor
cmp
pop
sbb
popa
div
pop
jnp
enter
ds
pop
imul
jne
clc
cmpsl
movsb
pop
pop
cmc
mov
pop
pop
call
cmpl
popa
imul
mov
jle
gs
repz
adc
pop
fcomp
lcall
push
cwtl
pop
adc
mov
xor
mov
pop
aaa
insl
or
adc
adc
scas
and
add
push
movsb
test
pop
enterw
mov
bnd
add
movsb
lods
push
movsb
cli
mov
rcll
test
jo
or
inc
add
add
pop
out
shlb
xchg
push
test
std
inc
jno
sub
fwait
and
or
add
call
push
lods
jmp
xchg
jge
and
imul
push
out
sbbb
jne
pop
mov
cld
lahf
test
jp
loop
inc
cmp
and
mov
jmp
pop
mov
pop
shr
xchg
inc
ljmp
and
sbb
and
outsl
test
push
sub
jb
push
sbb
es
pop
ss
adc
hlt
pop
push
jmp
dec
mov
jns
pop
and
pop
andl
popl
inc
stos
sbb
push
jnp
inc
cltd
jmp
or
mov
pop
mov
xor
pop
push
mov
testb
push
mov
add
shl
pop
roll
aas
add
je
test
cld
js
push
cmp
jnp
inc
in
imul
push
ret
add
stc
insb
xchg
xchg
jg
jg
flds
lods
pop
in
add
jmp
mov
adc
mov
mov
jecxz
jmp
sbb
inc
add
sub
fists
mov
pushf
adc
fiadds
sub
sub
into
xchg
adc
xchg
in
gs
imull
jne
mov
mov
out
stos
xchg
das
lock
mov
js
fldl2t
mov
jb
sub
dec
inc
inc
mov
and
inc
pop
int3
and
jge
sub
test
pop
push
mov
repz
repz
cmpsl
push
pop
imul
ret
jl
ret
jge
outsb
out
pop
push
rol
ret
jo
or
pushf
adc
in
push
aas
loope
and
es
insb
mov
pop
mov
pop
or
sub
incl
les
mov
push
in
jnp
cmpb
clc
xchg
mov
loop
aam
push
mov
add
testb
mov
inc
test
fwait
cmpsl
cmpsl
pushw
mov
aam
or
subb
es
inc
inc
cwtl
xorb
adc
adc
ret
inc
pushf
in
in
adc
mov
sub
sub
pop
cmpsb
push
roll
mov
push
xchg
mov
push
aam
rcrl
adc
lea
xchg
cmp
outsb
lds
aad
mov
pop
inc
pusha
or
xor
stos
and
and
pop
add
and
test
loop
sbb
test
pop
jno
and
push
push
adc
inc
rorl
cs
add
nop
lock
shll
test
int3
pop
cli
arpl
cli
arpl
in
sbb
mov
sub
sub
in
in
xchg
std
sub
or
pop
inc
xor
pop
xor
pop
sub
cmp
or
sub
push
xchg
sbb
dec
pop
mov
jmp
scas
movsl
pusha
sub
addr16
pop
in
xor
jle
xor
mov
es
das
insb
ret
pusha
addl
nop
std
push
icebp
pop
pop
pop
and
mov
add
fwait
cmp
add
xorl
push
cmp
add
cs
xor
ret
enter
push
int3
cmp
push
popa
daa
pop
xor
leave
sbb
loop
adc
add
mov
call
jne
shrl
out
dec
add
inc
incb
pop
push
out
jno
fdivrp
inc
xor
push
xor
hlt
mov
mov
jmp
push
dec
cwtl
push
pop
sbb
jns
and
jbe
andb
aas
push
sub
add
loope
jnp
pop
pop
inc
xchg
xor
pop
loop
and
aam
imul
rcr
add
leave
mov
scas
mov
add
pop
or
xor
mov
or
rorl
fwait
mov
out
xor
push
sbb
mov
push
xor
out
stc
jnp
test
pop
fs
lods
rol
push
xchg
adc
in
push
dec
loopne
shlb
adc
push
es
clc
test
leave
sub
dec
ljmp
ss
jmp
mov
or
pop
inc
mov
addr16
stc
inc
dec
sti
inc
roll
sarl
shlb
add
xchg
ficomps
pop
in
mov
imul
inc
arpl
cmp
sub
leave
fists
add
lock
hlt
adcb
dec
sar
ret
sub
sbb
lds
adc
add
jle
aaa
in
je
mov
or
xchg
cs
push
adcb
mov
adc
test
mov
dec
or
pop
dec
cltd
add
push
pop
add
ret
adc
add
adc
or
pop
cmpsb
inc
push
mov
xor
pop
push
mov
cs
inc
mov
cmpl
push
or
aad
in
add
lahf
add
inc
mov
hlt
roll
mov
push
push
mov
rcrl
push
cmp
or
adc
std
or
xor
jne
pop
hlt
mov
mov
lcallw
sbb
jge
flds
push
pop
cli
cmp
mov
adc
lods
sub
pop
jb
add
popa
imul
sub
sarl
push
push
inc
xchg
mov
daa
cli
iret
pop
mov
inc
add
ss
cmp
adc
dec
add
inc
rcrb
dec
adc
std
pop
or
cld
xlat
sbb
adc
int3
inc
mov
inc
jge
pop
xchg
xor
ret
push
xorb
fsts
jg
sbb
add
enter
jnp
icebp
test
in
mov
sub
cmpsl
popf
cld
lret
mov
or
sti
add
dec
or
and
ljmp
pop
out
sub
xchg
inc
cmpsl
in
das
mov
movsb
pusha
add
mov
mov
cmp
rorb
scas
loope
and
cmp
int3
pop
add
aam
icebp
push
cmp
aam
or
stos
mov
sbb
mov
stos
ret
jbe
push
push
rclb
jle
out
inc
xorb
mov
adc
jmp
cmc
jmp
add
je
ficoms
std
outsl
std
mov
andb
pop
sbb
add
lret
out
dec
in
roll
adc
jmp
test
cmpsl
inc
sbb
mov
mov
mov
mov
cmp
xor
test
lds
cmp
ret
dec
fwait
call
mov
push
lock
push
dec
dec
jae
push
mov
pusha
xor
mov
mov
out
addl
xchg
mov
jp
jb
push
daa
cmp
movsl
cmc
fcoml
loop
shll
inc
je
lods
or
jae
repz
adc
cmpsl
pop
sti
xor
icebp
cmpsb
pop
dec
out
scas
xchg
mov
test
subl
sahf
push
popf
or
xchg
and
pusha
or
call
mov
in
stos
mov
push
outsl
fnstenv
mov
pop
dec
inc
pop
jecxz
ds
xchg
sbb
movsl
xor
pop
xchg
call
dec
stos
jne
repz
adc
and
pop
lods
sub
aad
mov
pushf
jbe
or
dec
daa
sub
and
and
adc
jl
aaa
add
sub
mov
cld
adc
mov
shl
int3
test
xorb
adc
loope
out
jne,pn
or
jge
bound
mov
jg
insb
push
lods
test
lods
and
iret
stos
roll
cs
xchg
mov
add
pop
push
or
inc
or
add
daa
popl
jge
dec
ret
ja
test
hlt
hlt
inc
test
ret
dec
push
sbb
pop
or
dec
push
add
cs
imul
pop
addr16
stos
loop
inc
cmp
xor
push
xchg
aad
cmpsb
add
incl
jmp
hlt
stc
or
aaa
rcll
ljmp
push
mov
jo
and
or
pop
test
push
jle
push
xor
cs
dec
xchg
or
dec
data16
ljmp
inc
dec
sti
xchg
xor
or
andb
fidivrs
pop
jg
mov
mov
je
add
jnp
inc
mov
cmpb
or
pop
mov
inc
jmp
jns
dec
aad
xor
push
cmp
pop
adc
inc
push
bound
sub
pop
inc
mov
adc
pop
jno
mov
ss
xchg
jmp
or
clc
inc
mov
mov
push
mov
aaa
or
sbb
inc
jecxz
xchg
and
dec
xor
js
sbb
jo
mov
rorl
mov
jmp
inc
mull
push
dec
push
ja
test
les
jbe
popf
shlb
sbb
dec
daa
mov
push
or
mov
negb
mov
pop
incb
cld
push
sahf
ljmp
add
push
and
lahf
shlb
jl
mov
cmpsl
cs
fmull
push
push
xorl
push
dec
push
jmp
cld
add
xor
filds
dec
mov
push
stc
pop
push
sbb
bound
sub
xchg
jecxz
fnstenv
icebp
inc
sub
dec
add
sub
dec
push
xor
lcall
mov
loop
cmpsl
cld
int3
push
cmp
dec
addb
pop
adc
add
in
jle
sbb
xchg
int3
xor
mov
xor
cmc
dec
outsb
test
sub
add
mov
fldcw
mov
add
lea
add
dec
jne
add
pop
push
jb
dec
pop
daa
jmp
mov
popf
bound
addr16
mov
xchg
sbbb
mov
minps
pusha
dec
push
pop
xchg
incl
mov
xchg
ljmp
inc
mov
xorl
lock
jp
cwtl
push
cmp
rcll
lret
xor
negl
adc
sub
lock
dec
aad
ss
or
push
jbe
xchg
inc
mov
push
bound
dec
iret
stos
fdivl
mov
adcb
xchg
fmuls
rol
or
into
repz
pop
data16
ljmp
adc
or
cmp
ja
cmp
sbb
jle
add
shl
mov
dec
push
mov
loop
fildl
xchg
push
dec
sbb
mov
popf
inc
inc
movsl
pop
pop
gs
push
enter
xlat
inc
cmp
push
adc
push
into
stos
or
fistpll
push
dec
push
or
pop
je
fstpt
add
dec
cmp
push
int3
repnz
sub
or
mov
lods
add
add
xchg
push
loopne
sbb
sbb
decb
xchg
inc
xor
add
adc
inc
popa
icebp
jmp
add
jne
xor
ret
inc
xor
sub
sub
sub
ljmp
push
sub
jp
mov
daa
mov
fwait
xchg
lret
lret
cld
dec
pop
lods
loope
xor
and
rorb
or
or
pop
lods
adc
and
or
dec
pop
cmp
jnp
adc
cmp
fwait
or
xchg
or
fisubrs
test
loopne
or
cmp
mov
push
and
and
imul
mov
add
push
test
mov
jl
add
push
dec
out
icebp
test
rclb
popf
inc
fisubl
dec
das
cld
scas
jle
xchg
je
rorb
cld
push
xchg
sub
pop
loop
bound
sub
int
jae
xchg
bound
insl
les
jmp
adc
push
push
cmpsl
jle
das
adc
out
andb
mov
push
je
push
cmp
imul
lods
mov
mov
push
rorb
mov
pop
xchg
push
rcr
dec
loopne
les
add
push
dec
stc
xor
fbstp
daa
jmp
imul
inc
sub
sbb
gs
in
fmuls
fs
lret
repz
arpl
lahf
or
dec
mov
jl
cmc
icebp
inc
mov
mov
fbstp
mov
and
mov
or
add
mov
jecxz
imul
nop
iret
add
sbbl
or
mov
xor
clc
ss
jg
lods
out
xor
adc
mov
pop
mov
pop
mov
or
test
add
push
add
cmpsl
mov
xlat
int3
jnp
pop
rcr
fs
mov
ret
pop
imulb
mov
mov
mov
mov
pop
mov
imul
or
sub
shr
add
jg
jl
mov
adc
mov
mov
pusha
sub
adc
pop
xor
sbb
insl
push
mov
stos
mov
inc
push
mov
mov
rcrb
inc
testl
add
inc
fimuls
mov
jmp
fmuls
or
cmc
adc
daa
bound
mov
aam
out
xor
mov
jae
add
popa
sub
sub
decb
xor
xchg
mov
cmpsb
dec
adc
fisubrl
xlat
and
ljmp
not
push
imul
rol
loop
mov
cmp
loopne
add
scas
push
cmc
out
sub
inc
add
xchg
cmpsb
dec
pop
out
and
cwtl
lahf
xor
pop
cld
scas
pusha
cmp
test
adc
sbb
sbb
andb
add
and
pop
popf
adc
bound
pop
in
xor
sbbb
lods
add
shrb
nop
into
push
xor
testb
lds
mov
fidivs
sub
jmp
xchg
stos
mov
in
xchg
push
xlat
mov
sahf
inc
xchg
inc
or
repnz
xor
jp
fs
int
in
xchg
push
insl
dec
add
daa
loopne
cmpsl
jmp
jmp
inc
cmpsb
mov
insl
dec
rol
add
shlb
push
shrb
stos
imul
jo
addb
pop
dec
outsb
mov
js
add
idivl
out
clc
fnstsw
stos
leave
ret
xlat
fcoms
pop
cmp
fisttpl
rcrl
add
js
imul
add
movsb
das
mov
scas
xchg
test
xchg
not
rorb
lds
add
sub
jmp
cmp
dec
mov
adc
cltd
loopne
cmp
stos
pop
add
xor
pop
in
lods
jns
jmp
inc
lcall
xor
jmp
push
push
mov
sub
or
mov
outsl
inc
xorb
hlt
rorl
and
xchg
pushf
pop
jecxz
jge
jbe
sub
add
insb
push
jbe
jmp
cmpsb
jne
inc
and
stos
push
jns
shrl
es
mov
out
int
xchg
imul
and
pop
mov
das
jge
jbe
xchg
call
loope
cmp
scas
xchg
or
sbb
inc
aaa
push
add
xorb
pop
in
sti
inc
rorl
adcl
mov
repnz
mov
ret
sub
aam
inc
popf
pop
in
dec
pusha
push
jge
icebp
data16
bnd
divb
sbb
or
loopne
stos
inc
mov
add
jge
adc
adc
mov
push
jge
inc
push
ds
dec
pop
popf
loopne
jmp
jnp
shr
hlt
popf
push
push
shr
cmc
xchg
insb
mov
lock
ja
or
insb
pop
aad
sub
push
inc
add
in
jl
xchg
xchg
ret
jmp
mov
dec
mov
mov
aam
mov
lock
pop
push
xchg
pop
ljmp
jbe
adc
fs
xchg
gs
loope
frstor
jns
test
cmp
dec
aad
sti
enter
or
movsb
push
jmp
pop
add
push
push
pusha
pop
mov
add
jp
xlat
lahf
jbe
inc
jo
pop
mov
mov
repz
fnstsw
lret
add
lcallw
mov
mov
inc
push
pop
int
push
ljmp
in
mov
xchg
push
mov
add
lret
xor
mov
testb
pop
or
outsb
shrl
lcall
fcompl
bnd
dec
xchg
and
push
pop
shlb
pop
jp
pop
ss
pusha
lock
insl
popf
ret
call
push
jge
sbb
mov
sbb
pushf
fstl
cmc
ds
mov
mov
pop
dec
ljmp
fs
pop
out
or
in
inc
fiadds
inc
xchg
aaa
add
cld
loopne
pop
lcall
sub
fsts
or
stos
inc
jl
sub
mov
pop
mov
mov
data16
or
jp
orb
adc
sub
push
ljmp
push
fstps
dec
notl
and
pop
clc
out
inc
sbb
aad
inc
fldcw
mov
adc
xor
sarl
in
add
gs
mov
sbb
out
loope
inc
sub
push
int3
sbbl
movsb
xlat
addl
ret
mov
ljmp
push
add
popf
dec
and
mov
inc
xchg
stc
test
jmp
mov
roll
jge
popa
mov
in
add
add
cmp
mov
or
lds
movsb
and
lret
or
adc
adc
cltd
push
mov
daa
add
sub
dec
stos
lret
orl
lahf
push
push
ljmp
mov
or
xchg
push
or
lea
push
adc
sub
inc
or
xchg
pop
cmc
ror
sbb
ja
xor
loop
icebp
xor
jp
and
xor
rclb
push
imul
xchg
sbb
mov
dec
or
pop
es
popf
repz
pushf
push
inc
gs
cld
ret
mov
or
pop
shl
sub
imul
loop
roll
dec
jge
mov
clc
add
test
sub
sub
push
rclb
push
cmp
popf
or
call
adcb
pop
aas
jae
push
add
or
xchg
daa
dec
ja
aaa
cmp
mov
addr16
jmp
in
sub
inc
mov
jo
rcrb
adc
ret
clc
cwtl
pop
inc
rcrl
das
jno
push
leave
insl
aad
add
pop
jge
and
xor
or
je
sub
jecxz
adc
std
sub
pop
notl
iret
and
arpl
inc
xchg
lea
push
inc
ljmp
jbe
adc
nop
sbb
into
outsl
mov
lret
rclb
push
not
cli
inc
stos
cmp
std
mov
andb
cwtl
arpl
xor
add
dec
and
inc
add
fisubrl
stos
inc
fimuls
or
adc
pop
fwait
lods
sbb
das
add
ret
xchg
fldl
mov
inc
cli
pop
cmp
daa
mov
pop
xchg
pop
push
cltd
xor
jge
cli
xchg
int
mov
mov
add
add
xchg
add
or
mov
jge
sbb
pop
xchg
cs
das
jle
push
sbb
dec
out
xor
adc
shlb
sbb
push
add
xchg
jno
push
or
mov
push
into
in
fistpll
shl
mov
aas
mov
adc
pop
push
clc
jl
divb
jmp
fadds
cmp
push
sbb
or
jmp
mov
test
out
lcall
ljmp
mov
sbb
ret
xlat
inc
add
shr
repnz
pop
mov
fcoms
jmp
rclb
leave
mov
add
jae
pop
stos
and
pop
iret
pop
push
rcrl
cmp
subb
sbbb
jle
add
sub
shl
ja
pop
sub
stos
lret
push
jge
xor
lds
sub
scas
cwtl
mov
lahf
push
fdivrs
in
and
imul
mov
stos
test
or
push
push
adc
ljmp
xor
jmp
loop
adc
call
std
aaa
ja
into
add
jmp
sti
and
in
lock
mov
into
addl
inc
xchg
stos
cmp
push
pop
les
fsubs
fnstcw
shll
sub
in
jne
cmp
xor
loope
push
daa
mov
push
loop
repz
lret
test
imul
add
push
jmp
inc
push
sbb
pop
push
pop
mov
out
lret
dec
adc
add
inc
movsl
sub
xchg
xor
mov
mov
mov
xlat
xor
sub
leave
mov
insb
test
pop
shr
xor
ret
decl
lock
xchg
mov
scas
pop
xor
mov
inc
cmpsl
test
inc
push
mov
out
pop
scas
jne
add
adc
enter
pop
push
shl
cmp
pop
pop
mov
dec
jg
adcl
stos
mov
and
dec
adc
scas
mov
push
fnsave
push
jno
pusha
mov
sbb
mov
add
stos
add
dec
sbb
xor
push
mov
pop
jecxz
mov
xchg
out
arpl
jl
mov
add
mov
and
int3
jle
repz
leave
dec
dec
push
mov
test
mov
cmpsl
or
daa
sbb
adc
and
mov
rolb
cs
inc
or
sub
jg
pop
pop
outsl
test
jmp
pusha
adc
sbbl
mov
ljmp
and
ror
add
inc
add
aam
out
aas
adc
scas
repz
cld
fimuls
or
movlps
jns
mov
bound
pop
leave
adc
or
jns
pop
mov
sti
outsl
notb
std
dec
mov
cld
push
cmc
addb
or
and
push
sbb
xchg
sub
push
push
addb
add
imul
push
or
neg
cmp
jne
aam
sbb
jo
mov
push
mov
cmp
mov
outsb
adc
add
push
add
je
fdiv
jo
dec
jne
daa
fimull
dec
add
icebp
sahf
fsubrs
or
lods
es
fs
xchg
lret
imul
fcomi
pushl
jno
cs
xor
xor
cmpl
mov
or
cmc
outsb
stc
je
clc
inc
mov
dec
testb
inc
and
nop
aas
add
bswap
das
and
jmp
mov
dec
or
and
shr
jmp
outsb
out
mov
dec
lods
daa
jmp
xor
scas
xlat
jmp
or
add
jecxz
daa
mov
adc
mov
or
fidivs
dec
loopne
sbb
int
add
outsl
in
dec
scas
sahf
dec
dec
nop
sarb
mov
test
jmp
test
jmp
jns
inc
jp
loop
std
add
sub
push
ret
inc
inc
or
jmp
jno
mov
aad
ret
dec
xor
rclb
outsb
shl
adc
inc
shl
outsl
das
add
test
pusha
inc
int
mov
sub
aam
cmp
jge
mov
sti
out
adc
jle
cmp
xchg
pop
xchg
mov
mov
sub
or
not
or
jmp
popf
push
test
pop
mov
adc
xchg
rcrb
inc
sbb
xor
gs
mov
adc
data16
pop
pop
dec
divb
sub
cmp
add
das
loop
pop
lret
adc
imull
loopne
bound
cs
dec
stos
adc
push
jmp
dec
dec
jnp
dec
xor
ffreep
or
sbb
fnstsw
in
or
hlt
mov
out
loop
jnp
popa
push
cmp
mov
mov
pop
outsb
mov
adc
xor
adcb
jo
xor
and
pushf
xchg
bound
mov
xchg
push
lret
sbb
sarl
inc
shll
fstpt
lods
scas
rclb
pop
arpl
lret
jg
loop
push
jmp
pop
mov
pop
pusha
mov
jg
in
push
inc
mov
lahf
push
rorb
xchg
push
dec
mov
rcrb
or
cmp
lods
sub
jmp
fstpt
mov
testb
filds
mov
push
test
movsl
cmp
mov
sub
clc
adc
and
lss
ja
mov
or
jle
dec
and
jmp
add
jns
dec
or
sub
xor
jnp
add
ljmp
lea
sti
lret
push
dec
clc
leave
add
dec
adc
pop
cwtl
fidivl
sub
or
xchg
sub
je
in
rcll
jnp
mov
jl
test
repz
pop
xor
in
nop
lcall
dec
shl
cmc
pop
jo
dec
mov
das
jne
cwtl
mov
sbb
je
add
xor
jg
add
or
lcall
jns
pop
sti
test
add
adc
in
add
jmp
mov
lock
pop
test
or
sub
ret
dec
stos
xor
xchg
xchg
mov
scas
lods
mov
inc
ficoms
xchg
xor
aam
push
stc
in
mov
add
jmp
stos
outsl
ret
push
dec
cltd
mov
mov
jmp
icebp
mov
jp
cli
mov
mov
idivl
add
popf
add
outsb
jmp
jns
mov
pop
popf
push
and
inc
and
int
outsb
test
and
test
cltd
pushf
jo
sbb
lock
adc
imul
lret
or
enter
jmp
cmp
lock
jp
out
aas
mov
icebp
add
push
sub
pushf
das
cmp
aaa
cmc
sti
jg
xchg
aad
aam
call
pop
sti
sbb
mov
pop
add
pop
sbb
out
sbb
cmp
lods
fists
mov
or
or
out
add
add
mov
jmp
daa
or
pop
xorb
pop
or
lahf
cmp
mov
inc
push
push
mov
cld
cmp
std
mov
stos
push
mov
loope
push
ja
xchg
xchg
xor
hlt
and
mov
cli
hlt
pop
pop
jmp
mov
or
int3
call
scas
and
mov
mov
jno
add
push
jmp
add
adc
mov
clc
enter
mov
inc
mov
rclb
out
and
dec
jle
stos
aad
cmp
mov
and
inc
push
outsb
scas
sti
adc
or
ja
test
pop
daa
mov
das
mov
inc
enter
push
mov
sbbb
js
dec
mov
mov
out
pop
in
or
daa
aam
add
movsl
popa
mov
or
jne
das
xor
and
call
inc
in
dec
or
lods
push
pop
hlt
add
in
mov
stos
cmp
mov
cmp
sbb
shl
dec
daa
xor
insb
lcall
xlat
lock
inc
js
adcb
mov
test
dec
push
mov
mov
mov
xchg
dec
lods
sbb
pop
pop
sub
sub
lret
das
cld
mov
push
movsl
lods
inc
inc
arpl
add
fidivs
mov
scas
lock
cmpsl
sub
insl
lcall
jns
push
out
or
subb
sub
inc
rclb
std
orb
push
jmp
push
adcl
xor
jne
xor
dec
jmp
add
xor
cmp
mov
insb
test
pop
xchg
jmp
jmp
cmpsl
das
adc
sti
je
and
adc
or
jnp
leave
nop
and
out
push
cld
and
ljmp
cmp
adc
rcrl
mov
shr
pusha
notb
or
into
dec
xor
clc
out
xchg
popf
js
in
aam
dec
sub
pop
gs
in
or
dec
dec
dec
pop
pop
jb
out
gs
lds
adc
xchg
sub
fldl
cmp
jle
cmc
jb
fwait
test
lea
fists
fsts
adc
lret
push
fists
das
sti
pushl
push
incb
test
pushf
js
lahf
jo
mov
or
and
xor
mov
jnp
dec
dec
in
in
and
stos
ljmp
and
jbe
push
lods
sub
lret
xchg
pop
mov
movsl
inc
push
dec
push
or
repnz
mov
push
pop
sbb
imul
add
jne
dec
inc
aad
add
push
mov
sub
mov
push
sub
xor
inc
movsb
pop
add
push
mov
mov
pop
sub
add
ret
jp
and
ficoms
arpl
mov
sbb
fisubrs
pop
sub
cmp
clc
fs
inc
adc
test
push
repnz
stc
sub
inc
jns
adc
mov
add
add
and
or
es
push
adc
adc
cmp
dec
add
or
and
fildl
adc
xor
adc
sub
adc
sbb
or
aad
adc
arpl
dec
in
bound
dec
jl
and
test
xorl
pop
out
aas
call
jns
xor
ret
and
xor
jns
jnp
add
add
mov
jl
or
xchg
or
inc
inc
les
and
stos
xchg
add
addl
xchg
and
jle
xorb
sub
imul
push
call
push
add
loopne
dec
push
add
aas
or
mov
and
adc
jno
scas
mov
lock
or
sti
test
adc
cmp
add
sub
sbb
in
add
add
mov
cmp
mov
outsl
xor
xchg
mov
jae
add
or
cwtl
xchg
jle
push
inc
sub
cltd
jmp
mov
leave
les
jl
subl
int
or
adc
sbb
adc
mov
adc
lock
dec
dec
sbb
bound
add
add
test
mov
or
lret
push
orb
or
movsb
xchg
cmp
push
or
xor
add
push
push
jecxz
or
nop
adc
dec
fs
or
sub
cmp
and
loopne
and
sbb
arpl
inc
es
or
ret
add
adc
decb
and
cmp
jb
and
mov
clc
sbb
xchg
inc
enter
add
pop
xor
mov
add
shrb
push
xlat
rcrb
push
aaa
in
mov
ret
ret
out
popf
popa
arpl
add
push
push
jl
or
outsl
adc
push
int
push
mov
jae
xor
or
rclb
inc
pop
in
rcll
rol
lret
cmp
sub
mov
aas
f2xm1
cmp
mov
bound
dec
stos
fwait
jecxz
lods
pop
lds
jmp
in
sub
dec
inc
or
cmpsl
sbb
jle
add
testl
mov
lret
mov
mov
shrb
fidivs
subl
or
and
cli
sbb
sub
or
sbb
or
pop
add
jge
pop
push
test
loop
add
jb
fisubrs
popf
fisttpl
push
pop
das
lret
jl
inc
push
pushf
inc
and
arpl
add
jle
js
sub
movsb
lods
add
and
lods
adc
adc
scas
or
add
or
pop
aas
loop
jae
test
sahf
dec
adc
cmp
jmp
fldl
sub
pop
sub
fwait
nop
popa
das
push
jno
loop
mov
lret
outsl
push
xlat
shlb
and
daa
or
cmc
popf
divl
js
shlb
not
test
pop
inc
dec
add
xor
jbe
adcb
das
push
inc
push
data16
outsb
jbe
sub
fldl2e
jmp
jge
mov
loopne
test
cwtl
daa
out
das
cld
push
rcrl
push
inc
mov
test
push
jmp
mov
mov
popf
and
js
add
inc
test
in
and
out
jecxz
xlat
mov
dec
jns
push
or
pop
sbb
pop
out
push
invd
push
loop
mov
adc
iret
lcall
xchg
notl
mov
jmp
inc
ds
jp
inc
mov
add
daa
push
mov
jp
rorl
push
and
js
push
pop
out
mov
stos
std
pop
in
jnp
enter
push
neg
shl
cmp
inc
adc
jne
fdivl
std
subl
push
sbb
add
pop
out
jle
ljmp
dec
das
imul
jae
fs
push
pop
adc
sbb
pmullw
adc
jmp
add
ja
and
lret
xor
and
repnz
sbb
insl
lahf
mov
pop
mov
mov
shll
cmc
mov
in
mov
imul
arpl
lock
sti
lock
ljmp
inc
xchg
cmp
or
pop
pop
push
dec
sub
das
sbb
mov
out
pusha
and
scas
or
pop
mov
jne
test
lcall
adc
dec
loopne
fwait
add
scas
add
xchg
not
mov
dec
and
aas
in
mov
sub
xlat
shrb
xchg
gs
mov
sbb
push
lahf
push
cmpb
lret
mov
icebp
testl
mov
or
subb
mov
jnp
mov
dec
xchg
jns
push
inc
mov
in
inc
pop
mov
pop
and
jecxz
mov
idiv
out
dec
popf
cmp
pop
mov
adc
test
clc
jae
ret
pop
mov
xchg
inc
bound
je
or
mov
lret
dec
add
adc
pop
pop
pop
clc
push
ret
mov
jmp
mov
shlb
rcrl
bound
lcall
mov
scas
push
fisttps
sub
pop
es
adc
xor
lock
stos
lea
scas
inc
rcl
or
dec
sbb
in
rcrb
or
or
xor
xchg
add
ds
jae
pop
dec
pop
mov
rolb
pop
mov
xor
inc
mov
jnp,pn
jmp
or
in
repnz
and
sarb
push
mov
pop
pop
out
jl
mov
arpl
add
sar
inc
daa
xchg
push
push
push
lods
jg
loopne
or
xor
out
test
ret
add
js
push
outsl
mov
pop
adc
dec
push
inc
pop
test
mov
push
and
nopl
sbb
fadds
shlb
pop
jle
into
adc
popf
add
in
pop
clc
cmp
push
add
dec
or
adc
sub
dec
je
jnp
add
mov
xor
push
je
outsl
mov
out
movl
add
inc
decb
sub
das
lahf
push
pop
push
in
or
cmp
dec
lret
sbb
mov
sub
pop
mov
jg
pop
add
xor
movsb
push
imul
loopne
and
pop
xchg
mov
mov
lret
bound
rcr
add
ljmp
adc
mov
cmpsl
sub
xor
jb
hlt
repnz
push
jecxz
add
mul
daa
pop
repz
jmp
dec
sub
add
lcall
test
sbb
and
jmp
sbbl
sbb
push
or
inc
aas
pop
sub
push
dec
jmp
fisubrl
mov
and
and
push
aad
cmp
xchg
push
pop
lock
mov
push
mov
ja
jg
cmpsl
mov
and
inc
clc
push
add
adc
out
inc
mov
inc
cmpsb
mov
adc
xchg
and
jl
test
pop
mov
sub
pop
or
jmp
es
add
imul
adc
fstpt
dec
inc
test
xchg
inc
test
pop
dec
rclb
pop
je
in
inc
pop
test
dec
scas
fimuls
js
jns
dec
into
arpl
mulb
pop
addb
and
roll
push
xor
mov
and
test
xlat
es
mov
jmp
add
pop
mov
push
push
or
jbe
or
incb
aaa
inc
inc
sbb
dec
mov
cmpb
shl
inc
jle
mov
and
call
shr
or
fcmovbe
shrl
inc
add
inc
int
aad
cmp
leave
jno
push
push
stc
pop
shrl
push
addr16
aad
mov
movb
jne
add
mov
sbb
push
xor
xor
out
push
sub
in
imul
adc
inc
mov
and
icebp
sbb
jbe
jmp
lods
mov
aam
adc
mov
mov
bound
pop
outsb
pop
cmp
data16
fidivrs
hlt
dec
xor
jnp
ds
pop
sti
xor
push
mov
mov
pop
scas
cs
dec
sub
lods
dec
jmp
add
add
arpl
jne
pop
dec
bound
adc
add
pop
mov
or
push
cmp
xchg
mov
dec
sahf
xor
and
inc
mov
pop
mov
and
mov
pushw
aas
jmp
cmp
inc
dec
push
adc
pop
stc
sbb
in
aam
out
mov
das
es
rcrb
inc
out
or
jnp
sbb
or
jecxz
jmp
aaa
dec
fnstcw
inc
enter
jb
aad
jp
push
xor
add
ficomps
dec
mov
dec
xchg
dec
sub
cltd
into
cmpsl
out
cmpsl
fmull
pop
enter
pop
push
mov
xchg
xor
jmp
xlat
push
insb
sub
adc
add
fcmovnu
lret
mov
or
jmp
push
mov
mov
inc
loop
add
jg
pop
rcrb
jmp
inc
sbb
mov
mov
jmp
fists
pop
cmovae
fs
pop
leave
std
cmp
or
rcrb
mov
sbb
leave
xor
jmp
in
push
push
xchg
xor
das
or
mov
lcall
call
add
mov
imul
or
jmp
sbb
fildll
shl
add
cmp
mov
mov
xor
pop
push
loop
and
add
xor
js
push
lahf
pop
cmp
xor
adc
repz
jo
mov
fcomps
or
sbb
cltd
cmp
loope
test
repz
and
inc
or
stos
dec
in
int3
pop
xchg
aam
jo
inc
sbb
mov
inc
cld
dec
lds
pop
cmp
cmpsl
pop
jno
rcrb
daa
stos
out
jb
and
dec
push
gs
inc
stos
push
ds
dec
push
push
mov
test
add
sub
xor
pop
dec
pop
and
icebp
sbb
mov
jnp
in
insl
pusha
mov
pop
sub
pop
add
sub
loop
xlat
mov
dec
icebp
rcrl
or
xor
mov
outsl
loopne
nop
testb
jmp
fcom
enter
push
sbbl
int
addl
cmp
aam
pushf
not
sub
sub
push
cmp
sbb
xchg
adc
push
add
orl
sti
and
mov
jo
cwtl
jb
xchg
cmp
mov
jmp
mov
jo
ljmp
pop
and
add
adc
jbe
flds
and
into
int3
cmpsl
subl
popa
add
inc
aam
or
pop
mulb
jae
daa
es
add
idivb
popa
xor
mov
jnp
pop
adc
mov
outsb
dec
test
aaa
inc
test
cmc
adcb
insl
loop
cmp
hlt
add
or
jnp
out
out
jae
dec
xchg
pusha
out
insb
push
ret
test
cli
pop
pop
out
adc
je
repnz
and
aad
call
lahf
addr16
and
adc
sub
push
fiadds
sub
cs
and
cli
jmp
sarl
sub
adc
dec
insb
test
clc
pop
sub
or
in
or
pop
adc
shll
mov
mov
decl
adcb
jp
push
repnz
lods
sub
fs
mov
push
cmp
mov
cmp
and
and
push
sbb
test
sbb
popa
push
xor
or
add
inc
jmp
pushl
dec
xor
aaa
mov
repz
push
popl
subl
mov
std
jne
push
popf
jae
addr16
mov
or
jmp
pop
fwait
mov
jp
leave
cvtpi2ps
xchg
pusha
cltd
sbbl
push
add
addr16
mov
mov
daa
fnstenv
push
add
shlb
inc
daa
inc
sub
or
ficoml
and
jmp
mov
popf
inc
cmp
mov
shr
nop
xor
pop
inc
push
push
push
das
mov
pop
pop
sub
shlb
cltd
test
cs
jecxz
jmp
push
push
ret
dec
push
pop
xchg
add
mov
cld
push
int
aam
pop
mov
pop
pop
das
sar
scas
pop
xchg
stos
xor
dec
icebp
sti
test
and
outsl
loop
cld
adc
jl
or
lods
sbb
adc
sbb
push
pusha
sbb
repnz
jge
push
lods
cmp
nop
jnp
dec
stos
les
addr16
push
sbb
pop
xor
or
orl
jae
pop
inc
cmp
mov
rcll
pop
add
push
insb
jmp
and
xor
mov
sbb
pop
outsb
arpl
cs
lock
cmpb
sub
sub
mov
add
cli
fimuls
shr
jae
or
je
cmp
test
or
adc
dec
mov
and
mov
in
sub
xor
not
push
enter
and
mov
leave
add
aaa
sub
adc
inc
loope
sub
sub
sub
or
daa
and
pop
dec
or
pushw
push
iret
pop
sti
mov
push
pop
mov
shll
cmp
jae
sub
push
add
pop
push
push
clc
roll
insb
addr16
mov
mov
adc
leave
dec
shl
pop
jno
add
xchg
scas
mov
jle
loop
ficompl
lods
push
repz
inc
lcall
and
addb
dec
sub
sub
add
cs
pop
jmp
sub
movb
jne
or
inc
add
or
add
mov
iret
push
and
inc
sub
scas
shl
jp
jmp
push
test
jae
popl
scas
mov
pop
push
adc
fimuls
or
out
add
add
cs
icebp
mov
push
push
or
movsb
gs
aas
sbbb
not
adc
inc
repz
push
int3
cs
cwtl
inc
js
pop
lret
jecxz
and
sub
xor
lahf
and
jecxz
pop
mov
inc
jns
dec
and
dec
sti
dec
lret
loope
xor
int3
or
push
and
shrl
cmp
lahf
sbb
xor
fsts
jno
inc
lcall
push
cmc
jge
sbb
xchg
gs
mov
test
xor
out
icebp
push
shrb
inc
sbb
add
pop
adc
outsb
xchg
inc
mov
enter
xchg
pop
mov
mov
push
stos
out
sub
sbb
ja
cmp
std
push
jmp
dec
nop
nop
jmp
shr
data16
lock
dec
rcll
in
fdiv
scas
pop
sbb
clc
out
adc
scas
push
pop
int
insb
pop
add
mov
mov
adc
add
scas
jecxz
pop
dec
int3
xchg
jmp
pop
push
xchg
cmp
mov
jge
gs
jle
rorl
dec
and
pop
pop
test
adc
sbb
adc
sub
pop
pop
cli
mov
and
xchg
sbb
insl
mov
sbb
ret
ss
repnz
push
add
jle
jmp
mov
outsb
int3
xlat
push
data16
push
ret
das
add
jbe
test
or
imul
jmp
and
push
pop
inc
add
out
sub
ja
jnp
loope
or
popw
daa
lret
cwtl
xchg
rol
in
dec
fstl
xor
or
xchg
stos
les
jg
xchg
daa
in
mov
clc
out
xchg
jbe
pop
fstl
movsl
cmp
jmp
pop
aad
adc
mov
xor
mov
mulb
xor
daa
jp
sub
cltd
cs
sub
outsb
enter
jecxz
sti
shlb
sub
shrb
jo
add
das
cmp
rolb
sub
inc
or
jmp
sub
or
shl
push
push
cli
hlt
jo
popf
fistps
sbb
popa
out
hlt
sub
adc
lds
ds
sbb
ret
addl
pop
fimuls
cmpb
and
lds
xor
leave
push
sub
ljmp
and
sbb
xor
or
jl
das
cmpsl
xlat
adc
mov
pop
sub
add
scas
add
or
mov
push
pop
call
or
roll
inc
int3
adc
cmc
adc
clc
mov
scas
in
loopne
movsl
adcl
push
jmp
popf
int3
or
popf
faddl
lret
push
mov
int
add
bound
dec
xchg
cltd
clc
xchg
imull
insb
loopne
jmp
shl
pop
repz
adc
xor
jne
sbb
xlat
dec
cmovno
test
stc
pusha
shr
fnstenv
xchg
test
or
pop
jmp
pop
inc
shr
sbb
sub
ljmp
sbb
xor
sbb
pusha
aaa
sbb
adc
jmp
test
rolb
push
mov
push
cmc
scas
sub
call
cmc
cmp
mov
ret
and
pop
sbb
inc
cmpsb
testl
sub
pop
xchg
jo
adc
push
mov
cmp
adc
and
andb
sbb
nop
sub
inc
push
inc
push
pop
and
jp
jns
adc
int3
dec
into
xchg
fcomps
add
mov
adc
sub
jbe
and
test
dec
pop
lcall
cmp
or
push
lds
and
dec
xchg
mov
in
or
inc
jne
xor
cmpb
push
enter
push
lahf
pop
inc
pushf
sub
movsb
not
add
cmp
mov
stc
sub
daa
into
loopne
or
push
mov
fs
xor
stc
pop
jbe
repnz
pushw
mov
addr16
dec
sbb
rolb
sub
in
or
cmpsl
push
das
mov
mov
mov
jmp
dec
push
push
jnp
divb
daa
xor
push
xor
push
sbb
loop
movsl
jne
imulb
push
pusha
push
cmp
imul
es
filds
mov
outsl
lret
mov
add
pop
or
add
inc
or
int3
call
aaa
dec
mov
jp
add
sbb
pop
cs
test
fs
sub
out
or
or
push
mov
adc
add
push
repz
arpl
lods
ja
icebp
fwait
cmpsb
jae
scas
jns
pop
ret
jg
ret
lret
add
repnz
sbb
rolb
int3
push
loopne
je
in
add
frstor
aaa
mov
sahf
xor
gs
add
push
pop
hlt
sub
call
adc
push
or
xchg
sub
sbbl
scas
lret
jle,pn
daa
jnp
imul
mov
mov
int
mov
stc
adc
out
xor
or
push
jo
xchg
repz
sub
sub
or
jo
fidivrs
or
pop
out
outsb
popa
pop
insl
leave
or
rcrb
addr16
lret
loope
push
pop
push
pop
lcall
sub
fldenv
bound
mov
push
xor
ljmp
mov
mov
sbb
hlt
rolb
out
dec
daa
gs
add
sbb
pop
mov
mov
cmc
loopne
int
ds
outsl
scas
fldenv
js
in
add
mov
movl
jmp
xchg
dec
sbb
pop
outsb
movsl
arpl
push
push
movsl
or
cmp
pop
add
loope
dec
xchg
orb
add
scas
sahf
dec
test
push
lcall
ljmp
mov
jns
mov
add
sbb
stos
xchg
mov
das
and
out
test
scas
xor
movsb
cmpsb
lret
rcrl
and
or
lea
bound
mov
and
mov
push
add
test
aaa
push
arpl
add
add
jmp
mov
subl
sub
cmp
mov
outsl
pop
lea
out
or
inc
test
scas
shr
jmp
xchg
pop
subb
pop
jmp
xlat
cltd
adc
out
out
mov
adc
repz
out
inc
sbb
jo
push
or
jle
fs
loope
sub
insl
jl
mov
dec
clc
mov
sub
jne
scas
mov
icebp
fsubl
add
mov
pusha
pop
imul
psubsb
mov
add
std
arpl
xor
push
mov
pop
fmul
push
mov
icebp
xor
stos
mov
or
loopne
lret
jb
inc
xor
inc
mov
clc
cmp
pop
pop
xor
inc
shr
es
jnp
loop
imul
pop
xor
filds
pop
mov
mov
push
cmp
and
push
jns
mov
subb
xor
inc
mov
hlt
loope
ds
lahf
rol
ljmp
or
mov
or
push
jmp
sub
sbb
mov
jns
adc
popa
inc
inc
sbb
int3
inc
mov
pusha
jo
xchg
dec
and
mov
popa
clc
mov
not
call
out
push
jp
je
push
dec
out
push
push
pop
xor
cltd
repz
xchg
les
ret
mov
out
roll
test
jecxz
and
mov
jnp
jb
sbb
pop
fdivr
cmp
arpl
or
loopne
xor
fbstp
lea
push
movsb
addr16
push
rcl
pop
mov
aad
mov
fimuls
push
push
dec
push
inc
push
and
subl
dec
cld
mov
push
cli
pop
clc
int3
fs
mov
adc
dec
jne
mov
add
jmp
ja
jle
addb
cmp
icebp
nop
jb
popf
test
push
ret
ljmp
sbb
out
popf
jmp
hlt
out
int3
inc
setge
mov
pop
fwait
cmpsl
shl
loopne
inc
cmp
ss
jg,pn
xorb
pop
mov
cld
dec
mov
push
inc
lahf
dec
lods
mov
pop
or
insb
add
xchg
fiaddl
stos
add
jl
jle
stos
ret
and
adc
push
cltd
xor
int3
fwait
test
mov
ljmp
mov
mov
ret
sub
xchg
cmpsl
mov
inc
or
orb
cs
add
daa
mov
sbb
loopne
adc
fisttps
imul
jp
cmp
test
and
jmp
es
dec
adc
rcrl
add
xchg
divl
pop
inc
pop
jo
adc
cs
das
jne
xchg
dec
movsb
sub
add
sbb
mov
pop
dec
mov
adc
loope,pt
inc
xor
into
or
flds
mov
hlt
das
out
push
loope
cmp
inc
xor
test
icebp
cmpsb
mov
xor
push
xor
sbb
mov
dec
xor
and
dec
movsl
movsb
inc
movsl
push
int
nop
jmp
push
jl
xlat
dec
out
mov
pop
out
sub
sub
and
shrl
push
sub
scas
test
mov
or
out
not
xchg
xchg
sub
jg
ret
nop
ljmp
in
xor
add
sub
jne
pop
xchg
cmc
mov
lds
or
scas
add
push
test
adc
pop
mov
inc
pop
add
add
add
mov
subb
pop
xor
pop
or
push
inc
add
add
pop
push
stc
add
outsb
jle
sub
and
enter
inc
mov
in
pop
pop
stos
inc
ficompl
push
add
push
addl
sbb
lret
in
jno
and
cmpb
lret
jae
jmp
sbb
push
xlat
cltd
mov
shll
pop
das
das
cmp
push
cwtl
movsb
adc
sub
stos
mov
push
jnp
inc
push
push
pop
xor
nop
lock
mov
cltd
add
dec
jb
shl
or
sbb
or
push
jmp
mov
xchg
pop
das
sub
int3
dec
out
cmp
jp
mov
ss
jmp
movl
loopne
cmp
push
add
push
jecxz
pop
xchg
push
sub
jg
push
mov
xor
rorb
in
mov
loope
inc
inc
loopne,pn
or
jnp
cmp
adcl
adc
incb
les
test
sub
pusha
imul
mov
mov
inc
jnp
xchg
sbb
push
ds
pop
not
cwtl
pop
sub
dec
xor
and
mov
loopne
xor
sbb
sub
sarb
leave
jne
xlat
loopne
les
push
sub
dec
mov
out
mov
mov
cld
mov
jns
ljmp
testb
fdivs
jo
das
mov
nop
shufps
mov
dec
mov
enter
push
aas
mov
xor
sbb
push
or
out
xchg
lret
mov
mov
adc
dec
popcnt
mov
add
jle
fmull
inc
or
pusha
pop
imul
inc
or
mov
adc
mov
fstl
clc
jns
or
aaa
neg
loopne
cmp
add
add
fwait
jg
lock
jo
mov
roll
dec
pop
cs
cmp
jnp
mov
test
add
dec
push
or
jle
jl
and
popa
insb
mov
stos
xor
pop
sub
push
push
subl
push
das
push
scas
sub
sub
aad
xchg
int3
js
shrl
xor
jnp
or
stos
mov
cmpb
mov
incb
dec
out
add
jge
push
add
jbe
mov
inc
xchg
xor
mov
and
push
clc
dec
mov
add
pop
aam
stos
dec
push
faddl
inc
cmp
add
aad
lahf
sbb
in
je
cli
std
mov
push
imul
inc
xchg
mov
pop
pop
push
bound
jmp
aaa
jbe
enter
jmp
sub
jmp
mov
shr
xchg
or
push
mov
or
and
xchg
or
sbb
jo
mov
lock
inc
or
mov
cmpsl
lcall
dec
jnp
pop
add
add
cmp
ret
cmc
pop
es
ret
jae
in
sbb
imul
rolb
add
mov
inc
idivl
sub
nop
and
xor
mov
add
xor
roll
ljmp
or
sti
jge
bound
jmp
ficoms
mov
pop
mov
push
mov
adc
jg
out
sub
in
fstps
and
cltd
add
jnp
and
xor
mov
mov
sbbl
mov
rorb
fs
mov
dec
test
sub
xchg
push
sbb
and
cmp
stos
mov
pop
pop
push
lret
or
shlb
add
and
jo
pop
lahf
push
jmp
rcrb
ret
dec
outsl
shr
cmpsb
xchg
pop
or
push
les
push
sub
insb
jns
jne
aas
push
popf
dec
or
dec
or
dec
aam
and
fimuls
push
sti
push
xor
mov
inc
mov
push
and
push
mov
outsb
jmp
sub
add
pop
subb
sbb
out
sub
lcall
dec
xor
push
fistl
inc
sarb
xor
or
mov
mov
bnd
adc
inc
pop
dec
testl
and
pop
lcall
add
mov
pop
pusha
aas
mov
out
add
xor
clc
jmp
stc
push
and
xchg
xchg
adc
and
and
cs
insb
stos
or
ja
into
data16
cmp
xor
adc
mov
shlb
into
xchg
pop
scas
fcomps
out
das
out
or
stc
and
or
lock
scas
test
mov
jae
call
adc
scas
addr16
sti
pop
out
lret
out
cs
xchg
lods
stos
test
add
into
or
bound
out
out
add
ret
dec
sub
push
mov
pop
sbbb
xchg
push
iret
pop
pop
rcrb
pop
mov
pop
add
fists
and
add
popa
mov
push
aam
ljmp
inc
pop
cmp
clc
or
daa
ljmp
ss
in
cmp
pop
jae
stc
pusha
mov
mov
push
xor
dec
cmp
or
xor
cmp
and
es
call
repz
mov
out
imul
jns
xor
mov
popf
mov
sbb
hlt
mov
fnstcw
sbb
xchg
into
or
loop
mov
add
movsl
push
xchg
mov
inc
fcmovnbe
dec
xor
insl
adc
clc
xchg
add
mov
xor
adc
pop
xchg
xchg
out
xlat
repnz
cmp
shll
jns
inc
pop
enter
mov
mov
and
loop
fs
idivl
lea
or
jmp
xchg
rclb
das
or
js
mov
or
mov
lock
jge
mov
jle
and
or
mov
clc
or
lss
lret
insb
ret
rol
loop
add
jmp
jmp
push
or
popf
jg
or
mov
xlat
shll
add
jmp
pop
addb
xchg
jge
xor
out
xchg
push
xchg
or
pop
mov
xchg
pop
sbb
dec
pop
inc
es
pop
and
outsl
dec
les
cltd
imul
sub
repnz
inc
ds
xor
inc
cmp
insb
loopne
clc
mov
imull
repnz
adc
sbbb
sub
pop
out
lahf
pop
lret
push
jmp
out
mov
loope
ds
enter
xor
pushw
mov
ss
hlt
and
aad
mov
add
add
adc
icebp
clc
mov
and
fs
lods
leave
inc
jno
daa
ret
mov
adc
pop
mov
xchg
jae
adc
sbb
push
xchg
sub
push
pop
inc
push
push
xchg
enter
lock
fs
lock
int3
loope
pop
mov
dec
pusha
xlat
cmp
clc
and
cltd
or
pop
xor
mov
push
pop
adc
jo
int
push
sbb
jmp
xchg
cwtl
mov
lfence
pop
mov
mov
imull
xor
jg
fcompl
ret
gs
call
jg
push
in
mov
or
mov
mov
or
les
jnp
pop
and
fcomip
mov
jae
inc
add
sub
push
add
ret
in
add
scas
jno
test
fs
ret
add
add
pushf
pop
imul
jnp
jbe
sbb
push
mov
ja
add
cmp
push
sbb
pop
mov
ficompl
xlat
insl
sub
clc
xor
popa
lock
push
or
and
sub
pushf
popf
or
jge
fnsave
cltd
push
or
lock
adc
dec
mov
push
push
sbb
in
mov
or
ret
pop
jne
or
add
pop
mov
jno
pop
pop
push
into
sbb
push
pushf
pop
mov
fcmovbe
gs
push
mov
not
cmpb
jge
icebp
scas
jns
aas
mov
push
jmp
push
in
jmp
in
cmp
das
pop
mov
mov
pop
pop
xor
shr
adc
or
rcrl
mov
stc
mov
in
insb
sbb
scas
mov
push
push
imul
cmpsb
cmp
lret
mov
or
jb
hlt
xchg
mov
aaa
sub
jl
outsl
iret
xchg
jo
push
cmp
pop
out
mov
mov
mov
pop
jge
movl
dec
ljmp
ss
push
and
shl
ret
cmp
pop
mov
mov
push
sbb
sahf
insb
and
jp
cs
mov
jecxz
xor
push
cmc
mov
pop
adcb
testb
cmp
pop
jb
mov
inc
subl
xchg
call
mov
inc
jmp
cmp
sbb
clc
cli
add
inc
inc
add
into
ret
or
push
shll
xchg
roll
shlb
in
dec
add
push
mov
pop
sub
xlat
pop
xchg
pop
faddl
nop
dec
scas
jne
mov
sti
xchg
adcl
push
pop
fs
dec
mov
dec
xor
fists
sub
dec
stc
fldt
ret
cli
imul
cmpsb
jnp
in
cmp
push
hlt
mov
inc
hlt
movb
push
pop
cmp
sahf
sub
mov
addl
outsl
jmp
inc
stc
or
les
dec
cmpsb
andb
push
bound
aad
push
pop
mov
sbb
push
mov
aaa
dec
decl
push
pushf
pop
push
or
fistpll
adc
int
ror
sbb
mov
add
xor
push
sub
in
xor
cmp
sub
inc
and
mov
and
lea
popa
inc
imulb
push
es
test
and
pop
xor
cmp
push
or
or
inc
stos
add
imul
in
adc
popa
fwait
clc
push
les
es
dec
pop
adc
popa
sbb
or
sub
pop
mov
add
jmp
jmp
cld
push
aad
jge
rcll
jbe
fidivrl
adc
push
mov
sbb
pusha
xchg
mov
inc
icebp
cmp
xchg
add
loopne
int
sub
add
push
mov
xor
sbb
sub
jle
mov
iret
clc
push
int3
xor
add
dec
fdivl
std
pop
pusha
in
movsl
inc
test
or
imul
test
xchg
mov
add
mov
adc
clc
mov
pop
dec
mov
dec
adc
cmp
out
add
mov
movl
xor
cmp
aaa
pop
ljmp
xor
adc
mov
and
sbbl
mov
pusha
fsubr
lret
jge
movsl
xchg
pusha
nop
jmp
or
sub
rorb
mov
jae
test
adc
cmp
mov
ret
out
sbb
push
adc
jmp
jp
aaa
loope
cmp
je
sub
testl
cli
subl
pop
std
lahf
add
fmuls
adc
and
loopne
pop
jge
dec
and
clc
push
mov
rorl
or
icebp
xor
hlt
or
pop
jne
or
adc
in
mov
or
ror
dec
inc
jnp
mov
das
ds
stc
divb
mov
add
inc
xor
mov
add
and
pop
jns
jg
lcall
adc
push
das
movsl
mov
or
cmp
sub
add
fisttpll
xchg
add
ds
cmp
rcll
dec
sti
add
fstps
rcr
ret
cmc
inc
out
jmp
dec
outsl
pop
pop
pop
movl
jl
shll
loope
push
call
sub
inc
mov
push
jmp
mov
dec
scas
sub
sar
dec
dec
inc
das
pop
xor
xor
and
out
mov
push
fs
orl
test
and
and
in
push
pushl
jmp
mov
dec
sub
push
rolb
jmp
imul
and
xor
add
pop
or
or
pop
push
call
les
jge
sub
jmp
or
dec
popa
push
pop
or
dec
pop
fincstp
stc
push
push
push
sbb
stos
sub
jle
xor
jb
and
imul
and
lahf
test
or
dec
out
shl
pop
push
push
addr16
mov
push
xor
add
dec
hlt
sub
cmpsb
cmp
cs
mov
jmp
add
sub
hlt
imul
test
mov
lret
xchg
sahf
xor
andl
cmp
lock
add
inc
sub
xchg
out
inc
add
jecxz
test
xor
add
xor
out
jmp
fiadds
ljmp
repnz
outsl
push
jmp
sub
sbb
jg
ficoms
jmp
mov
aad
or
das
divl
pop
sub
popf
sub
fmull
adc
mov
push
ret
and
lahf
rcll
push
and
cmp
leave
ja
push
jmp
clc
fsubrs
or
and
data16
loope
pop
aas
ret
rcrb
jo
shrl
out
add
ljmp
jp
mov
sbb
scas
or
jmp
mov
in
fcoms
adc
or
sbb
or
push
inc
pop
mov
jno
bound
xchg
jae
das
pop
pop
fs
and
lods
call
outsl
ffree
add
lock
mov
inc
lods
add
xchg
cmp
dec
shrb
sub
mov
out
sub
push
sti
mov
adc
push
or
sub
cmp
jb
mov
mov
sub
movsb
cmpsl
push
mov
call
ljmp
add
ss
jp
adc
pop
mov
push
pop
cmc
inc
js
xor
push
add
cld
bound
out
xor
add
push
jo
pop
fsubr
inc
dec
mov
push
lock
cmc
push
in
fs
int
push
sub
out
mov
jg
lahf
lock
pushf
sbb
rorb
pop
add
shlb
cwtl
pop
inc
add
push
movb
imul
or
add
adc
sub
push
mov
cld
xchg
mov
mov
add
in
or
xchg
pop
notb
stos
scas
cmp
push
nop
in
sar
xor
or
ret
and
and
scas
stos
adcl
in
inc
clc
jno
jmp
cmp
adc
dec
testb
jmp
mov
sub
lods
or
shll
aad
add
ret
jne
jmp
test
test
push
mov
pusha
sub
arpl
pop
xor
push
leave
mov
sbb
mov
inc
call
stos
mov
adc
cmp
cmp
ja
andb
or
lds
xor
or
ret
xchg
pop
cmp
sbb
dec
inc
mov
cmp
push
jecxz
and
adc
mov
sbb
das
notb
and
test
push
add
or
std
jmp
fsubrs
int
cli
sbb
jmp
mov
mov
rcl
mov
in
add
mov
pop
push
fcoms
sahf
add
push
and
gs
iret
loope
std
sahf
ficomps
jne
and
ss
test
dec
in
mov
insl
into
or
loope
or
repz
aam
jo
rolb
cmpl
add
outsb
arpl
lahf
lret
mov
sub
pop
dec
xchg
push
je
aas
daa
lods
adc
mov
shlb
out
fwait
add
add
cwtl
mov
xchg
aad
jecxz
push
jns
and
push
mov
mov
rol
dec
push
shl
jge
test
shll
pop
ret
std
xchg
xor
fistps
jmp
xor
aam
cli
adc
mov
xor
and
jns
es
out
push
jge
popa
js
mov
add
cmp
rcr
repnz
xor
sbb
pop
out
sti
cmpsb
in
mov
sbb
or
adc
pop
add
decb
cmp
fstl
nop
rorl
rep
cmc
sub
jb
movsl
jo
pop
pop
mov
popf
sub
cwtl
pop
test
xorb
adc
pop
sbb
jl
xor
movsl
add
or
and
add
shr
xchg
out
xchg
mov
and
clc
add
or
jmp
out
mov
sub
in
jmp
das
and
lcall
push
je
jmp
push
pop
jg
mov
cmp
adc
addr16
pop
in
nop
stos
push
add
lahf
insb
or
push
xor
mov
jns
add
mov
pop
mov
lock
push
outsb
ret
inc
scas
pop
out
repz
in
or
push
adc
xlat
ss
mov
inc
leave
adc
jmp
push
mov
pushf
xor
pusha
adc
sub
jp
jmp
movsb
and
int
add
std
xchg
cs
mov
nop
adc
jle
orl
in
daa
xor
cmp
sub
push
ja
inc
cmp
xchg
mov
mov
sbb
cld
mov
inc
or
sbb
mov
push
bound
daa
pop
jbe
pop
sub
pop
jmp
fisttpll
jb
sbbl
rorb
inc
push
adc
dec
das
ffree
add
push
dec
aad
add
mov
add
push
pop
adc
leave
push
fs
jbe
sub
cld
cmc
dec
xchg
jbe
pop
mov
sbb
into
inc
dec
das
loop
push
mov
rcr
push
dec
mov
out
xor
flds
jecxz
hlt
pop
push
jae
mov
lahf
adc
or
push
pop
aam
testb
pusha
xorb
or
fcoms
int3
or
sbb
mov
xchg
aaa
or
mov
push
out
outsb
loop
push
adc
sub
add
inc
mov
comiss
shll
cld
hlt
adc
fnstcw
test
push
cwtl
cli
mov
push
neg
sub
test
dec
lcall
pop
pop
lods
mov
adcb
je
sub
popf
lods
xor
add
sbb
dec
in
das
mov
das
mov
pop
bound
push
mov
mov
out
pop
add
jo
test
pop
pop
cltd
je
xchg
flds
pop
xorl
sbb
mov
jmp
pop
out
add
inc
dec
push
push
jmp
add
jmp
add
jp
loop
dec
xchg
test
rcr
push
movsl
pop
sti
or
xchg
or
rcrl
cld
add
pop
adc
pop
cltd
inc
adcl
cmc
shlb
dec
pop
push
dec
mov
jecxz
mov
lret
out
xchg
gs
adc
sub
pop
pop
out
addr16
cli
mov
sub
push
xchg
stos
xorl
jecxz
pop
popa
xor
shrb
or
mov
je
gs
dec
lods
call
adc
ret
or
out
mov
fcoml
pop
push
orl
leave
push
sub
lods
ds
jecxz
bound
lea
xchg
sbb
jmp
xlat
push
mov
andb
or
fistl
mov
ret
mov
push
outsl
cmp
adc
bound
cmp
push
and
inc
jl
mov
insl
pop
xor
push
popl
jmp
pop
xor
or
and
pop
subb
or
xchg
jmp
adc
mov
sub
gs
mov
jmp
divb
jecxz
dec
push
mov
push
or
mov
cmc
movsb
mov
cli
mov
pusha
jns
insl
push
orl
adc
add
inc
xchg
aam
add
mov
leave
push
inc
in
push
pop
je
add
orl
sbb
pop
push
push
jmp
add
inc
loopne
mov
sub
ret
and
loopne
add
pop
mov
and
scas
push
ret
mov
or
pop
jo
das
push
notb
add
or
enter
mov
push
aam
inc
push
and
popf
mov
add
ljmp
push
sbbl
outsb
pop
lret
mov
adc
mov
repz
mov
fbld
add
inc
xor
jo
mov
in
sub
pop
dec
cmp
mov
push
aas
daa
in
xlat
lahf
lods
enter
xor
ss
jmp
jg
mov
mov
push
xor
jmp
lret
pop
les
cltd
sub
sti
aaa
or
pop
nop
nop
push
xor
pop
add
mov
and
cmpsl
testl
cmpsb
rorb
cli
fidivs
pop
testb
mov
loop
inc
test
add
dec
xor
sub
inc
push
pop
in
addb
rcll
scas
pop
or
andb
cld
repz
jge
mov
lock
das
xor
insb
lds
jmp
xchg
inc
and
or
mov
ficoms
leave
push
decl
mov
mov
mov
lock
sahf
lods
xchg
outsb
add
inc
cmp
in
insb
inc
mov
push
xor
sub
mov
loopne
mov
sbb
mov
mov
ret
mov
sbb
mov
dec
and
popa
inc
fstpl
cmp
adc
repnz
xor
jp,pt
xchg
adc
and
mov
nop
adcb
loopne
mov
int
cli
sahf
shld
nop
jl
test
loop
adc
lret
out
jne
jl
mov
subb
cli
mov
popf
adc
fxtract
pushf
jmp
jo
and
mov
cld
or
adc
pop
ret
push
aas
jns
adc
shrb
lods
adc
imulb
xchg
mov
fistps
into
lods
push
dec
aas
mov
dec
mov
daa
xlat
sbb
daa
jmp
cmp
pusha
jmp
sbb
pop
mov
mov
cld
div
sti
leave
dec
sub
push
xor
jne
addb
xchg
jne
pop
enter
sbb
sarl
or
cmp
popa
fwait
mov
push
aad
adc
jmp
push
cmp
pop
mov
outsl
aad
jmp
add
cmp
sub
ss
aas
push
and
push
int
in
insl
stos
sarb
and
mov
push
inc
dec
cmpsb
ret
xor
loop
int
cmp
addl
enter
add
leave
sbb
push
jl
adcb
je
scas
inc
jle
aas
adc
mov
push
add
xchg
dec
and
dec
sbb
jmp
mov
rcll
cld
adc
xor
push
sbb
pop
gs
mov
xorb
in
jmp
push
push
inc
mov
push
adc
sub
shrb
jl
add
sti
mov
test
neg
out
xor
rorl
ss
clc
cmp
lds
xor
or
rolb
ljmp
ret
aad
movsb
push
fdiv
xchg
test
jno
cli
push
or
mov
push
jmp
lea
cmpsl
addb
mov
mov
xor
mov
add
pop
xchg
and
shrl
pop
cmpsl
and
je
std
jp
daa
fnstenv
daa
in
mov
fisubl
fnsave
aaa
jns
xchg
dec
out
push
out
add
sub
sub
push
inc
or
add
adc
dec
xor
inc
lea
sub
insb
sysret
or
push
mov
dec
pusha
jp
inc
lods
and
and
pop
inc
and
out
push
xlat
jns
mov
js
dec
sti
add
or
jmp
or
jne
out
mov
outsl
loope
leave
stos
or
sbb
outsb
les
nop
sbb
imul
add
xor
mov
mov
adc
sbb
je
xorl
test
fldt
mov
add
rorl
cmp
into
lods
sub
fsubr
push
push
shr
sub
pop
fs
adc
jge
aas
addr16
adc
das
cmp
add
scas
fs
leave
jo
fisttpll
ds
lea
or
or
sub
pop
insb
sbb
push
cmp
popf
sbbb
out
pop
out
lret
addb
test
rorb
mov
push
xchg
stos
test
cwtl
sti
sub
mov
cld
stos
clc
out
jmp
mov
add
out
pushf
mov
cmp
add
aaa
adc
dec
cmp
shll
inc
fcmovnbe
mov
jg
inc
sub
xlat
xor
mov
xchg
ret
mov
outsb
or
pop
lds
out
sub
sub
push
push
dec
jmp
inc
jp
push
or
adcl
fdivl
aas
daa
push
xchg
aam
xchg
jmp
mov
repz
ljmp
sbb
inc
inc
scas
push
push
repnz
mov
mov
sti
imulb
pop
xor
jnp
inc
push
and
or
mov
and
mov
jmp
mov
xor
pop
daa
sub
jne
cmpsl
add
mov
into
or
popa
fstps
inc
xchg
out
or
ret
add
lret
inc
cmpsl
push
sar
adc
sub
or
imul
dec
and
sbb
push
test
sbb
mov
fnsave
enter
push
mul
adc
outsb
cmpsb
out
dec
faddl
inc
and
movsb
sbbl
out
cmp
neg
jmp
mov
movsl
jle
ret
lahf
dec
sbb
arpl
mov
jmp
push
sarl
mov
in
dec
test
scas
xor
jnp
add
nop
pop
jmp
inc
daa
out
pop
bound
adc
adc
fiaddl
dec
mov
adc
xchg
bound
aam
push
push
push
push
jmp
cmp
xlat
mov
and
hlt
mov
ljmp
ljmp
push
bound
je
mov
or
pop
or
ret
jmp
cmc
mov
daa
lcall
out
adc
and
jl
or
adc
dec
and
dec
popa
test
clc
je
xor
and
cmp
mov
mov
int
xchg
dec
sub
out
repnz
jmp
std
or
arpl
or
roll
lret
enter
push
out
adc
fisttps
in
movsb
push
add
mov
and
sub
popa
repz
clc
mov
pushf
sub
call
push
movsb
sti
scas
daa
stos
jbe
or
out
stos
jns
inc
aas
mov
ljmp
mov
and
dec
jle
push
mov
test
mov
push
or
sub
jmp
sahf
push
repz
stc
test
push
in
nop
push
das
loopne
jno
int3
nop
test
or
aaa
jmp
leave
push
push
xchg
sub
fstpl
inc
pop
add
push
fldcw
adcl
xor
sarb
sbb
ss
jo
inc
dec
daa
js
push
lock
push
fistps
or
mov
push
push
fisubl
add
cmpl
and
add
out
shr
jo
pop
les
scas
iret
mov
lods
jmp
addr16
in
sbb
adc
out
or
clc
jmp
jae
mov
lds
pop
xchg
cmp
push
push
jmp
cmp
dec
rcrl
pop
push
imul
mov
push
xor
push
mov
or
sbb
xor
and
push
jl
or
inc
add
pop
inc
fstpl
or
ss
mov
mov
fisttpll
mov
and
addr16
pop
daa
pop
or
leave
mov
dec
mov
cmpsl
xlat
rcl
pop
jmp
inc
dec
add
or
and
mov
loop
pop
imul
test
popl
test
fwait
xchg
inc
jb
mov
adc
scas
sub
addr16
sbbl
mov
adc
daa
push
dec
out
xchg
pop
outsl
jecxz
xchg
adc
shlb
cmp
testb
fs
pusha
push
arpl
pop
sbb
or
and
push
lea
aad
frstor
enter
push
push
xchg
mov
xchg
pusha
push
lret
out
aam
or
cmp
jbe
mov
jecxz
xor
out
push
add
cltd
xor
mov
in
mov
push
int3
mov
jmp
adc
adcb
aas
and
fucomip
and
xchg
pushf
fstps
daa
scas
sbb
mov
xor
xor
daa
or
sbb
lea
cld
adc
push
fisttpl
orb
std
jle
je
sbb
in
mov
lds
stc
test
rorb
loop
test
or
push
icebp
jmp
movsb
push
loope
rolb
push
add
dec
test
icebp
pop
pop
jmp
add
push
dec
dec
pop
nop
mov
cmp
inc
sub
fsubrl
shr
call
inc
xchg
fcoml
mov
imul
add
inc
shll
jmp
ja
aaa
xor
lret
rolb
sbb
sub
cwtl
or
not
xor
out
in
and
fnstcw
sub
aam
cmp
mov
clc
roll
cmp
pop
push
and
mov
and
aad
adc
dec
cltd
jne
and
ss
pop
dec
mov
pop
jle
dec
push
push
mov
cmpl
movsb
shrl
sarb
or
ds
in
lock
movsb
jmp
icebp
arpl
inc
sub
mov
clc
lret
mov
gs
in
fdivp
jp
inc
ret
push
dec
pop
cli
jl
cmp
inc
and
adcl
add
pop
in
std
nop
push
inc
call
sub
push
fimuls
xor
push
imul
mov
or
mov
mov
or
ljmp
xor
ss
xchg
push
popf
jecxz
xchg
add
push
dec
dec
ret
in
push
push
sahf
adc
add
andb
jp
push
leave
lcall
bound
fstps
xchg
adc
push
mov
lods
daa
add
movsb
cmp
jnp
add
adc
addb
add
push
test
mov
ja
dec
ljmp
dec
sub
xor
ds
int3
and
mov
cmpsl
outsb
inc
inc
lock
and
and
add
pop
mov
push
mov
adc
subb
adc
push
pop
push
out
xor
or
add
jne
push
or
sub
adc
sbb
fisttpll
and
add
push
or
xchg
into
add
push
mov
roll
shl
sub
or
pop
dec
push
mov
fstpt
not
add
jge
sbb
into
in
loop
push
adc
sub
push
sbb
lret
dec
cvtps2pi
subb
or
sub
mov
mov
pop
and
adc
loopne
sub
push
push
or
icebp
xchg
or
adc
or
mov
add
int
in
cmp
dec
push
sbb
pop
dec
inc
addr16
mull
stc
outsb
call
and
add
pop
add
xor
mov
dec
ljmp
pop
mull
enter
adc
and
push
clc
fiaddl
push
cmpsb
dec
sbb
cmp
cld
add
pop
push
push
adc
in
incl
nop
push
dec
fisubl
loope
fisttps
sub
rorb
bound
sub
inc
fisubrs
jae
shlb
inc
sbb
xchg
insb
mov
or
jb
mov
add
popa
popa
sub
insl
inc
jo
cmc
add
subb
das
jno
inc
pop
js
push
jl
mov
fdivrs
popf
data16
lret
sbb
loope
add
xchg
mov
jmp
xchg
add
push
mov
mov
addb
bound
addl
in
jl
es
adc
inc
add
jnp
sti
sub
mov
roll
jge
sbb
xor
stos
inc
pop
adc
push
xor
push
push
call
xor
cmp
mov
dec
ja
add
xchg
dec
es
jae
sbb
aad
sub
jmp
xchg
mov
loop
idiv
push
pushf
or
out
push
mov
inc
pop
pop
fists
arpl
inc
or
outsl
inc
ret
and
push
ficoml
inc
jg
inc
dec
pusha
pop
pop
add
inc
shr
jmp
xchg
adc
fcos
fdivrl
mov
aas
xlat
out
add
dec
loope
imul
cs
shrb
pop
push
mov
iret
pop
cmp
loopne
sub
mov
sti
cmpsl
mov
test
ljmp
or
dec
scas
push
dec
jecxz
jns
pop
sbbb
add
jge
or
sarl
push
shlb
stc
lcall
loopne
lock
pop
inc
adc
sub
jnp
scas
mov
xchg
pop
loopne
inc
or
adc
sbb
push
jno
mov
test
pop
int3
fcoms
aad
push
adc
in
mov
dec
add
repnz
dec
xchg
rclb
xchg
jg
mov
idivb
adc
xor
pop
mov
addb
pushf
sub
lret
fwait
or
xlat
mov
inc
sub
push
ret
or
push
movl
ret
mov
subb
xor
push
test
xor
mov
div
jge
sbb
mov
mov
notl
pop
inc
test
sti
cmpb
sbb
pop
fstl
sub
inc
or
fidivs
aas
cld
movsb
mov
push
xchg
jge
push
or
push
lcall
mov
jecxz
or
lea
testb
and
xor
or
loope
push
mov
pusha
mov
scas
mov
xorb
test
dec
mov
xor
mov
mov
push
adc
push
push
imul
sarb
dec
jo
cwtl
orl
or
fcoml
mov
idiv
dec
push
cld
or
sub
das
fsubrs
ret
roll
cli
mov
cmp
dec
pop
loope
jmp
dec
inc
mov
pop
push
cmp
jb
or
adc
xlat
dec
pop
int3
mov
mov
mov
int
jmp
sub
sub
or
jecxz
icebp
push
push
inc
lock
mov
xor
and
and
rolb
lahf
testl
mov
inc
adc
lock
lds
test
aas
add
fucomp
xor
shll
adc
movsb
dec
mov
jmp
lret
ror
dec
adc
pop
add
or
jae
adc
pop
dec
ret
sbb
loope
int3
and
hlt
adc
fcoml
adc
jecxz
sub
fisttps
mov
sarl
add
cmpsb
lods
xchg
incl
push
sahf
adc
fdivr
pop
dec
jg
dec
jmp
inc
adc
jbe
xor
aam
add
push
popa
push
daa
adc
push
lods
xorl
push
loopne
push
clc
xor
movsb
adcb
push
pop
pop
adcl
das
add
push
stos
int
and
pop
adc
cmp
sub
imul
mov
lods
jb
push
aad
sbb
or
xlat
adc
or
add
cld
es
dec
dec
ret
je
ja
adc
call
xor
pop
add
pusha
and
daa
divl
xor
xor
das
pushw
int3
mov
call
lds
rolb
pop
bound
and
enter
push
mov
sbb
lret
in
xor
dec
xchg
pop
dec
mov
cld
cs
pop
movsl
loope
xor
jbe
neg
adc
xor
sub
mov
or
pop
mov
mov
pop
out
xlat
or
aaa
jo
push
push
lock
adc
xor
popa
test
outsl
push
cmp
dec
mov
lret
pop
push
subl
jp
das
ja
icebp
ds
mov
sti
mov
add
adc
mov
and
or
mov
popf
mov
cltd
sbb
or
faddl
ss
hlt
pop
and
xchg
or
push
add
es
popa
cld
out
add
xchg
xchg
movsb
mov
sub
call
xor
jne
cmp
pop
mov
into
loopne
arpl
xchg
fs
aam
add
jmp
inc
adc
mov
rcl
jle
xchg
cmpsl
les
mov
rclb
es
bound
sub
inc
cmp
psrld
in
jnp
in
mov
insl
adcb
stos
sbb
or
xor
adc
pop
testb
sub
xor
popf
hlt
int3
bound
dec
std
sbb
push
push
int
lods
xor
sub
imul
jecxz
fwait
sub
adc
pop
aaa
arpl
js
push
repnz
sbb
pop
cmp
push
push
cmp
rcrb
sub
js
xchg
cmp
push
mov
daa
jae
repz
xchg
pop
push
add
and
bound
cli
cmpsl
scas
push
hlt
jmp
pop
sub
fstpl
sub
fistpl
jp
fimuls
sub
xchg
mov
mov
inc
icebp
pop
dec
mov
pop
jg
jbe
pop
imull
outsl
jnp
jle
add
cmp
shlb
xor
xorl
cli
xor
inc
aas
loop
inc
add
nop/reserved
and
push
jg
into
or
ds
out
repz
stc
loope
cmp
or
xor
xor
pop
scas
out
push
jp
xor
xor
in
cmp
fsubl
push
mov
clc
into
adc
xchg
or
push
lock
jno
imul
popa
roll
cmc
idivb
popa
ss
scas
loopne
es
pop
shlb
incl
cld
imul
scas
flds
sbb
pushf
jge
mov
ror
scas
or
mov
sbb
and
or
enter
daa
jge
push
cmp
bound
xchg
xor
add
sub
push
fs
scas
adc
jmp
mov
pop
call
lods
cmpl
sub
out
or
adcb
sbb
pop
inc
mov
and
filds
xchg
cmp
lock
fdivs
or
inc
mov
inc
cmp
in
cld
jae
inc
dec
jnp
mov
and
enter
int3
xchg
add
mov
push
add
xor
add
jne
ljmp
inc
mov
xor
mov
addb
inc
nop
inc
xchg
test
movsl
out
out
sbb
loope
mov
jne
das
nop
mov
das
dec
jne
sbb
fwait
ljmp
cmp
push
add
sub
aas
add
mov
or
dec
pop
lock
into
inc
subl
jb
xlat
or
fbstp
push
inc
mov
jbe
dec
add
mov
aam
xor
subb
fs
mov
les
aad
mov
pop
loope
outsb
adc
dec
push
jns
movsl
xor
mov
push
push
lds
das
mov
push
dec
pop
mov
in
aaa
stos
sbb
dec
movsl
test
pop
xor
ss
jno
into
push
mov
dec
adc
fsubs
cmp
jmp
ljmp
pop
pop
inc
sti
ret
stc
js
mov
aam
pop
test
arpl
sahf
stos
mov
roll
lret
cld
cmp
idivl
add
loop
add
mov
mov
jns
inc
daa
arpl
adc
xor
pop
into
idivb
fdivr
cmc
adc
cmp
shll
aaa
insl
lock
or
pop
xchg
add
sti
inc
int
cld
mov
mov
jmp
mov
xor
pushf
sbb
mov
xchg
fdivl
test
xor
push
push
push
fmull
loop
jne
jae
mov
pop
and
ljmp
ja
push
push
neg
andb
xor
and
mov
shlb
pop
add
and
fcomps
or
lods
lods
iret
add
jecxz
sbb
inc
inc
lret
inc
add
jge
pop
repnz
es
pop
test
push
xchg
xlat
pusha
adc
int
pop
mov
scas
mov
stos
cmc
mov
pop
rorl
xor
int3
inc
movsl
dec
test
cmpsb
mov
shlb
adc
cltd
mov
xchg
push
in
sub
add
pusha
sbb
push
push
pop
fildl
xchg
or
roll
imul
ja
and
pop
push
sub
mov
pop
xlat
push
clc
aaa
jo
lds
not
in
test
dec
fiadds
or
nop
popf
push
mov
insl
or
ss
not
sub
mov
outsl
or
cmc
sbb
icebp
inc
and
inc
js
pop
add
jmp
or
fs
jae
push
inc
dec
pusha
icebp
mov
xor
add
pop
nop
inc
push
out
or
lods
mov
popf
daa
stos
mov
or
dec
data16
and
jmp
rorb
repz
inc
mov
inc
js
into
inc
ret
add
lret
or
movsl
jb
xchg
sti
adc
inc
xor
push
mov
jp
leave
movsb
cmp
sub
mov
push
out
jo
and
mov
jge
dec
test
pushf
fstpl
clc
push
cs
pop
ret
inc
les
sub
or
or
ficompl
inc
cmpsb
scas
jb
mov
add
add
in
cmp
and
push
and
sahf
scas
jb
mov
adc
aam
stos
mov
rclb
sub
mov
scas
cwtl
or
mov
andb
bound
fstpl
test
into
jno
jnp
dec
or
pop
out
daa
in
inc
push
mov
aaa
and
pop
movsl
divb
pop
cmp
outsl
lret
pop
in
lret
fs
daa
push
hlt
pop
sub
popa
sbb
roll
pop
insl
cmp
cmp
push
pop
out
das
mov
inc
dec
roll
sub
jmp
mov
incb
mov
jmp
xor
ret
xor
add
std
jg
xchg
lock
js
ficompl
jno
lods
adc
add
mov
sub
xchg
out
or
sbb
test
adc
lds
add
mov
push
xor
and
faddl
push
int
jmp
inc
xchg
test
cmp
lret
out
adc
or
ret
inc
adc
jle
addr16
cmp
fists
sti
rclb
inc
mov
imul
mov
sbb
cmpb
scas
inc
in
xchg
pop
and
adc
add
sbb
loop
lea
dec
or
aad
fsubr
mov
add
inc
repz
add
or
inc
jne
xchg
es
add
fidivs
jns
scas
dec
sbb
in
inc
out
or
add
cmp
shlb
xor
mov
xor
add
and
add
aas
xor
ret
sub
das
or
lock
cld
adc
loope
or
ret
nop
inc
pop
stos
jmp
leave
das
dec
addr16
mov
or
adc
adc
sbb
or
jne
addl
out
add
add
push
sub
adc
dec
bound
scas
popf
mov
lahf
shlb
pop
fstpl
sbb
xchg
out
inc
loope
sub
mov
dec
or
test
sub
loope
rorb
sub
imul
jp
pop
mov
in
mov
sbbb
and
mov
in
xchg
loope
xchg
fisubs
loop
pop
mov
xchg
ret
jmp
mov
sub
sbb
adc
std
inc
jmp
xchg
das
not
inc
pop
mov
add
dec
and
pop
jmp
mov
mov
or
mov
cmp
push
fcoml
jmp
stc
or
add
and
out
sub
and
daa
push
or
jmp
out
ljmp
push
stos
in
fadd
and
adc
inc
mov
push
xchg
inc
imul
adc
mov
popf
movsb
pop
mov
pusha
sbb
fs
cld
inc
dec
or
jno
cmc
dec
inc
and
add
add
or
ja
test
bound
sbb
mov
pop
push
mov
adc
and
add
add
fucompp
xor
xor
cmp
pop
jecxz
mov
sar
enter
popf
popf
mov
mov
loop
mov
xlat
pop
test
popf
mov
push
in
imul
mov
mov
mov
sub
sbb
es
or
push
inc
push
lahf
adc
iret
inc
shll
adc
or
jmp
scas
add
sub
add
or
js
js
pop
neg
add
ficompl
outsl
add
int
sub
sbb
inc
bswap
dec
sub
xchg
pop
sub
cld
clc
stos
enter
add
mov
pop
scas
add
scas
test
jmp
adc
repnz
popa
mov
jle
icebp
add
pop
in
sub
xor
mov
fisubrs
enter
inc
adc
xchg
pop
sub
mov
mov
icebp
mov
or
or
mov
lret
lahf
push
negb
or
lock
enter
add
push
xchg
cmc
xor
aas
vandnps
sub
je
or
fsts
pop
pushf
add
inc
cmp
imul
and
xchg
jnp
pushf
inc
xor
push
sti
xor
mov
adc
xlat
push
pop
adc
pop
sbb
in
add
push
das
ret
or
fcoml
add
shrb
movsl
enter
cltd
test
add
xchg
jmp
pop
lret
pop
cmp
repnz
mov
inc
rorl
sbb
xor
sbb
sub
inc
int
inc
pop
add
mov
push
add
icebp
xor
pusha
xor
push
rorl
ret
mov
ret
std
mov
mov
stos
jns
pop
adc
addr16
sbb
inc
or
roll
out
mov
roll
mov
push
iret
inc
imulb
int
ljmp
mov
testb
inc
jmp
push
xor
xchg
push
add
inc
stos
or
repz
scas
xchg
dec
and
xchg
add
ficompl
call
les
add
sub
cs
jae
push
in
fsubrp
or
mov
mov
xorb
pop
andb
jbe
dec
sub
jnp
insl
jl
mov
mov
inc
jae
xor
pushf
ds
out
pushf
mov
adc
jbe
inc
das
repnz
ret
cli
xchg
int3
mov
lods
sub
push
sub
pop
xchg
sahf
loop
adc
cmp
subb
push
int
pop
adc
xor
inc
out
add
insb
dec
mov
ljmp
cld
cmp
push
inc
bound
test
adc
add
cmp
sbb
out
jae
mov
jmp
push
push
das
xchg
sti
test
adc
jmp
in
mov
add
jecxz
shlb
sub
push
mov
sub
shll
mov
leave
xor
sub
mov
mov
jp
pop
push
mov
jb
inc
fsubrl
mov
pusha
fidivrs
mov
sub
sti
roll
scas
sbb
fs
add
adc
mov
int
jle
pusha
and
cltd
loopne
mov
shr
mov
test
jmp
dec
mov
xor
js
mov
add
xor
out
into
cmp
test
or
shl
test
fnstcw
cmc
dec
pop
sub
dec
mov
pop
sbb
shlb
sub
mov
bound
mov
mov
loope
jo
cmp
in
push
push
push
jge
aas
enter
mov
dec
sub
inc
neg
sub
dec
push
dec
loope
outsb
daa
sbb
sarb
cmp
push
mov
shlb
and
xor
or
push
jnp
lea
ret
fcoms
lods
xchg
faddl
or
sub
mov
dec
xor
les
add
imul
sbb
and
add
fs
sbbb
pop
pop
loop
aad
cs
cwtl
add
int
and
repnz
push
ret
sbb
fsubrp
add
daa
das
xor
jge
xor
xchg
ss
xchg
mov
out
shlb
out
cmc
repz
adc
in
cmp
pop
or
dec
add
mov
mov
int
xor
pusha
js
mov
ficoml
mov
push
mov
imul
mov
mov
das
jbe
leave
std
insb
test
dec
push
mov
orb
jmp
sahf
ss
out
and
mov
js
sub
fsubs
rorb
dec
into
cmpsl
packuswb
add
sub
adc
push
jmp
negl
jns
add
xchg
or
test
dec
out
jmp
jle
mov
in
inc
dec
mov
rcr
or
sub
mov
divb
adc
xchg
shlb
mov
sub
stos
mov
adc
lret
cvtps2pi
pushl
mov
xchg
jns
inc
push
and
movsb
or
jnp
movsb
popa
xchg
add
scas
ss
ljmp
sahf
lds
mov
sbb
in
loopne
rcr
ror
fidivl
out
mov
jge
fwait
or
inc
cmp
into
pop
out
mov
xor
adc
and
and
pop
enter
mov
or
jmp
int
inc
leave
dec
add
sbb
ret
sbb
pop
test
dec
loope
icebp
and
pop
pop
adc
addr16
and
mov
adc
push
mov
xchg
xchg
sti
sub
mov
and
cs
sbb
add
jg
xchg
and
popa
inc
xchg
sub
sub
push
gs
mov
cmp
cs
frstor
add
mov
xor
ret
push
pushf
xchg
or
inc
jmp
fsts
or
ret
ror
jge
or
imul
adc
or
cmc
mov
mov
push
and
dec
mov
cmp
inc
jp
push
or
pop
xor
pop
mov
into
inc
xchg
icebp
mov
pop
xchg
xchg
jmp
xchg
or
or
mov
inc
dec
sub
inc
dec
int
mov
jge
or
lahf
push
pop
out
inc
xor
pushf
push
push
mov
push
lret
mov
pop
mov
mov
into
imul
pop
xchg
mov
in
pop
dec
insb
xor
xchg
ss
or
sub
subl
push
sbb
mov
jns
cmp
fs
pop
repnz
repnz
push
in
sti
jmp
push
das
outsb
bound
push
mov
sub
movsb
cmpsb
mov
adcb
shl
fcoml
popa
xchg
rcrl
jne
add
mov
arpl
sbb
mov
fwait
mov
dec
sub
movsb
and
mov
xlat
pop
push
jl
lahf
pop
jb
test
pop
das
lea
push
push
fucom
add
pop
add
jne
pop
and
mov
mulb
add
sub
aas
icebp
scas
add
ret
mov
or
dec
rol
and
call
adc
rcl
xor
jmp
out
xchg
mov
fdivl
or
lods
mov
in
pop
in
int
inc
rcr
push
test
sbb
jae
adc
notl
and
or
test
or
outsb
push
icebp
adc
das
xchg
aam
stc
inc
mov
lret
inc
daa
push
and
or
ljmp
outsb
jmp
fsubl
popf
push
adc
inc
jb
xchg
pop
into
mov
jae
push
jmp
ljmp
jbe
push
loop
push
cmp
bound
xor
rcrb
cmp
das
jge
dec
adc
jg
es
sub
and
shr
adc
test
stos
cwtl
or
js
inc
fldenv
jbe
dec
xchg
int3
gs
sub
inc
sahf
int3
add
mov
sbb
pop
xor
pop
jne
mov
jo
lahf
in
dec
sbb
lahf
dec
jecxz
inc
stos
xor
or
jmp
adc
push
mov
lret
dec
pop
stos
sub
mov
test
pop
mov
daa
jle
pop
fldt
lock
inc
movl
ret
add
push
das
mov
inc
push
push
dec
into
pop
dec
cmp
out
dec
test
psubw
stos
jnp
add
je
popa
jmp
gs
jmp
push
pop
jo
mov
push
cld
and
jno
stc
sub
int3
stos
xchg
inc
push
mov
ja
pop
rcrb
and
ret
cmp
scas
sub
inc
js
rclb
push
or
mov
ficompl
fnstcw
popf
sub
and
pop
ret
cli
pop
mov
loope
jg
push
mov
lcall
stc
sti
inc
xchg
push
test
push
or
mov
and
add
jo
jmp
xchg
out
add
pop
dec
ljmp
xlat
stos
inc
jbe
mov
sub
cltd
xchg
aaa
test
lods
shll
cmp
sti
push
adc
pop
rcrl
dec
jle
mov
inc
je
push
mov
pop
movsb
add
xor
ret
dec
lret
adc
push
push
dec
inc
fyl2xp1
int
movsl
pop
push
outsl
das
mov
fcoms
mov
int3
push
jbe
pop
sbb
ret
cmpsl
cli
push
dec
cmpsl
or
jnp
mov
shlb
dec
mov
push
xor
mov
out
xor
sub
imul
adc
insl
mov
adc
das
pop
jmp
jne
imul
cmpsb
and
ds
xchg
jp
xor
dec
mov
push
mov
add
inc
mov
pop
jmp
int3
pop
lahf
fsubrl
mov
enter
out
imul
adc
lock
ficoml
pop
shl
outsl
add
mov
inc
lea
sbb
jnp
daa
sti
loop
lret
jmp
mov
lea
adc
decl
push
xlat
out
pop
imul
pop
xchg
xor
aam
addb
cmp
insb
ljmp
jne
leave
and
fstl
adc
out
adc
fisubrs
or
xchg
loopne
pop
or
mov
test
and
mov
mov
xor
mov
jmp
pop
push
mov
adc
add
adc
xlat
lret
lahf
dec
add
push
sbb
testb
sub
mov
std
andnps
popf
shr
mov
or
aad
repnz
testb
inc
cmp
add
cmp
fmuls
mov
inc
add
sub
push
inc
int
bound
shl
shrb
repnz
xor
shr
cmp
inc
pop
stos
mov
pop
shrb
adc
pusha
mov
push
inc
jbe
push
jmp
mov
dec
mov
sbbb
test
bound
jge
pop
pop
and
dec
dec
rcll
and
lock
mov
fdivrs
test
adc
je
add
imul
sub
in
stos
adc
xchg
in
movsb
lods
adc
js
and
mov
jne
cmp
adc
cmp
adc
rcll
xchg
dec
cwtl
cmp
enter
notl
push
rol
and
lock
add
mov
jge
roll
mov
mov
pusha
mov
pusha
pop
xor
dec
sub
mov
pop
jne
and
jnp
add
divb
jmp
das
jmp
sarb
or
les
inc
xor
ja
dec
sub
or
add
xor
pusha
daa
push
adc
xor
ds
jnp
sub
enter
dec
je
xchg
push
sti
movsb
jmp
push
add
neg
outsl
movsl
popf
xchg
jo
insl
xchg
dec
fcoml
pop
stc
xchg
leave
mov
aas
mov
push
fwait
mov
xor
mov
xor
xchg
and
pop
idivb
add
mov
and
sbb
ret
mov
xor
jle
scas
xchg
and
xchg
cmpl
lods
push
lahf
push
adcl
neg
or
pop
test
add
cmpsl
rclb
mov
and
jno
out
cmp
mov
jmp
imul
sbb
ja
push
add
lahf
scas
mov
lods
out
loopnew
addr16
popf
jp
in
jmp
cwtl
jle
push
xchg
jnp
inc
jmp
cmpsl
rorb
js
aam
add
mov
push
pandn
icebp
pop
dec
daa
mov
repnz
or
push
xor
mov
dec
sub
mov
loopne
mov
adc
data16
inc
adc
loop
add
push
gs
or
xchg
loopne
rclb
shl
push
cmp
daa
sub
or
pushf
and
mov
jmp
addb
das
or
adc
roll
insl
push
lock
sarb
xchg
sidtl
jmp
js
sub
scas
and
sbb
das
clc
mov
or
aas
push
inc
insl
loop
adc
test
fld1
fadd
mov
fisubs
and
jle
or
ja
imul
lcall
and
vmwrite
and
out
and
lock
imul
mov
sbb
sar
xor
dec
sub
push
dec
int
add
inc
and
sarb
push
add
sbb
mov
push
dec
scas
call
outsb
xor
pop
mov
in
adc
and
jns
mov
push
inc
mov
pop
xchg
in
pusha
popf
dec
iret
adc
lahf
aad
mov
dec
and
loopne
pop
sbbb
add
scas
pop
fsubrs
xlat
out
movsl
push
fs
aas
or
fcomps
sub
push
popa
lahf
mov
inc
jge
pop
mov
xor
mov
in
je
mov
lcall
push
add
sub
push
mov
insl
add
shll
in
cmp
sub
push
xchg
ja
pop
sbb
inc
cwtl
sub
sbb
xchg
and
idiv
mov
jle
jno
aam
inc
es
addr16
outsl
adc
sbb
or
mov
lret
icebp
and
cmc
mov
pop
aad
push
push
mov
call
out
adc
adc
repnz
adc
mov
cmpsb
jnp
pop
lods
gs
or
mov
pop
push
add
pop
mov
bound
std
sub
pop
xor
and
aas
stc
in
mov
adc
popa
and
iret
int3
push
mov
addr16
out
test
push
jmp
push
scas
int3
fs
or
repz
sub
jmp
roll
ljmp
or
and
jbe
xrelease
add
movb
add
test
not
push
add
push
outsl
fdivs
dec
call
aad
repnz
xchg
cli
xor
fsts
push
dec
cli
addb
xchg
inc
test
out
shlb
mov
jmp
aas
mov
xchg
mov
and
scas
not
mov
add
mov
fwait
pusha
mov
xchg
fcoml
or
sub
push
rorl
push
mov
aad
xor
test
jle
outsl
add
jmp
lock
dec
push
dec
test
roll
pop
pop
xor
sbb
mov
fadds
and
ffreep
mov
dec
or
fiadds
push
xor
dec
pop
xchg
mov
pop
shl
add
add
mov
std
or
jae,pt
enter
mov
adc
data16
aam
cmp
ljmp
gs
jle
es
mov
ret
cmp
jecxz
mov
enter
scas
das
pusha
je
push
fstps
xchg
dec
push
push
stos
testb
add
test
pop
daa
and
loop
pop
les
mov
addb
lock
inc
ljmp
mov
jge
jns
test
lcall
es
sbb
push
or
ljmp
and
xchg
sbb
mov
les
pop
cmovo
sub
xor
sbbb
add
ror
xchg
dec
and
and
shlb
xchg
xchg
dec
scas
xchg
ret
push
jbe
dec
jno
or
add
out
out
cwtl
and
jb
scas
stos
or
out
sub
out
pop
jnp
fisubrs
lds
add
pop
stos
and
loop
jg
dec
add
in
test
lcall
cmc
or
pop
cwtl
daa
inc
test
xor
push
jg
push
push
xchg
dec
dec
or
fadds
cld
and
inc
jo
adc
and
idivl
pop
mov
dec
xchg
mov
add
nop
mov
add
mov
jne
pusha
sbb
add
rorb
nop
and
jmp
arpl
insb
cmp
rorb
in
stc
popa
jmp
inc
add
or
rol
adc
mov
xor
inc
cmp
icebp
stos
or
push
push
push
je
or
mov
test
push
into
mov
flds
les
insb
cmp
aaa
pop
fisttpl
call
jp
dec
xchg
nop
lahf
sub
loopne
daa
pop
pop
jl
loope
push
cmpb
imul
mov
pop
sti
push
or
pop
sub
ja
test
mov
test
scas
mov
or
adc
mov
xor
push
jne
jo
jp
lcall
push
nop
jmp
xchg
cmp
mov
xlat
cltd
cli
or
loope
add
je
jp
jl
inc
mov
mov
pop
les
push
adc
dec
mov
mov
test
lock
inc
sahf
or
and
pop
sub
pop
in
xor
scas
loop
sarl
outsl
in
jl
stos
fisubrs
add
je
mov
sub
je
movsb
dec
popa
jns
test
mov
mov
clc
cmc
inc
je
ja
add
push
push
jae
jmp
mov
aas
hlt
mov
push
push
jmp
cli
aam
mov
inc
sbb
popa
addr16
adc
pop
data16
jb
push
lahf
adc
jle
mov
inc
mov
sub
movl
lods
jmp
inc
push
ret
aad
adc
arpl
pop
addb
jns
imul
repnz
push
pop
shll
mov
es
sbb
add
aaa
add
sbb
add
xor
sub
sbbb
rorb
pop
cmp
jb
sub
pop
xchg
jmp
add
sar
sbb
data16
clc
test
fstps
mov
sub
pop
ret
or
lock
ror
mov
mov
mov
mov
aad
mov
adc
mov
mov
sub
and
jge
push
rolb
aad
push
pop
ret
and
ret
setns
jp
dec
outsb
push
mov
jp
mov
arpl
aaa
loop
popa
and
aad
out
or
jae
not
add
dec
scas
and
pop
fwait
pop
xchg
mov
xchg
in
lods
xor
push
sub
loope
jb
jmp
lods
bound
pop
inc
cwtl
test
les
mov
inc
stc
jns
es
mov
push
pop
scas
adc
jl
mov
push
dec
mov
jmp
test
ljmp
mov
xor
fs
js
sub
and
loop
pushf
or
inc
add
inc
sub
jnp
xchg
stos
mov
xlat
sub
and
mov
pop
and
das
aas
or
pusha
and
cltd
push
clc
and
test
scas
jo
lods
cmpsb
cmpb
imul
adc
adc
cmc
imul
gs
add
loopne
out
adc
push
lcall
mov
inc
ljmp
add
jnp
add
pop
and
nop
enter
jae
or
mov
adc
daa
sbb
mov
sub
iret
jbe
jle
test
stos
jo
jbe
push
jb
push
cmp
pop
hlt
and
adc
ljmp
cli
setge
inc
mov
imul
fildll
lahf
shr
cmp
adc
mov
sub
mov
jmp
jno
push
jmp
pop
push
xor
fs
or
roll
xor
or
mov
xor
mov
add
dec
jmp
testl
loop
add
push
adc
adc
xchg
nop
sar
jp
or
add
dec
loopne
ret
push
and
and
imul
les
jmp
adc
add
sbb
lods
pusha
pop
sbb
pop
or
add
pusha
sbb
sub
es
add
nop
cmp
jp
add
rorb
cmp
call
push
push
es
dec
stos
add
xor
add
jmp
les
mov
mov
insl
pop
jmp
cmc
sbb
jmp
xchg
sar
pop
pusha
jecxz
mov
push
xor
adc
add
and
or
shlb
jae
dec
add
mov
ljmp
pop
pop
mov
fldl
jbe
push
ljmp
bound
or
push
test
xorb
jmp
es
adc
mov
out
cmp
push
shlb
xchg
lcall
mov
gs
fiadds
cwtl
int3
or
dec
pusha
xchg
enter
pop
aaa
inc
in
sysret
dec
shlb
mov
sub
jno
rcl
jmp
cmc
inc
adc
ljmp
dec
and
daa
sub
es
mov
add
test
shlb
pushw
sar
mov
mov
add
add
jl
outsb
out
call
scas
mov
dec
dec
insb
add
jo
jmp
pop
in
jmp
and
pop
stos
push
jb
jle
lds
mov
movsb
popa
pop
popf
adc
mov
cmpb
pop
pop
clc
fadd
fucomip
int
loope
push
mov
jg
push
out
adcb
adc
push
repnz
push
jg
lods
xor
mov
xchg
pop
and
data16
stos
lret
and
dec
jg
ljmp
jo
stc
xor
inc
xlat
jmp
push
or
imulb
scas
lock
imul
fstps
shr
xor
pop
xchg
adc
aad
adc
adc
aaa
dec
test
into
pop
pop
push
lds
add
mov
arpl
mov
mov
mov
sbb
jns
leave
test
sbb
or
repz
push
push
shlb
cmp
and
push
ja
aaa
sbb
rol
dec
add
jne
insl
push
ret
inc
fidivl
push
push
pusha
push
dec
jnp
pop
or
loop
std
pop
jns
inc
dec
adc
pop
fmuls
lds
aaa
leave
fsubrs
pop
adc
push
jmp
pop
loopne
jp
cmp
xor
lahf
pop
jmp
fisubrs
gs
dec
sbb
fmull
vpshufd
lcall
push
cli
shll
push
push
push
pop
xchg
add
filds
subb
push
daa
fidivs
fists
jae
loope
in
jbe
clc
daa
ret
imul
jmp
push
mov
mov
subb
lea
mov
pop
ret
into
sbb
sbb
pop
in
test
lret
mov
stos
mov
dec
in
adc
and
in
xlat
ja
pop
jmp
jo
mov
pop
ljmp
xchg
dec
leave
daa
lret
push
push
js
std
clc
and
sbb
jge
pop
sub
out
sti
iret
scas
jle
scas
lods
popa
loopne
dec
jo
ds
add
add
add
push
je
scas
inc
repnz
push
adc
test
mov
fsubrs
sbb
jmp
scas
jle
jmp
jg
push
dec
adc
push
popf
inc
lods
cmpb
xor
add
add
pop
push
les
push
inc
xchg
dec
push
inc
ljmp
cmpsb
and
aam
pop
andb
je
inc
push
mov
adc
fisttps
push
xchg
and
or
arpl
mov
sub
popf
pop
push
add
cmp
jmp
mov
xor
pop
rorl
pop
push
sub
stos
xor
xchg
cmpsb
cmpsl
sub
ret
shrb
sub
ds
mov
xorb
xchg
jl
aad
ss
add
dec
jmp
sti
xor
push
enter
sub
addr16
push
jae
sub
sahf
jbe
mov
inc
xor
filds
lock
enter
ret
cmpsb
fwait
pop
dec
add
mov
arpl
mov
imul
insl
int
push
adc
jmp
sub
cmc
dec
cmp
push
cs
xchg
pop
sbb
adc
mov
xorb
sbb
jmp
jb
dec
adc
adc
icebp
movsb
xchg
sbb
pop
mov
cmc
jmp
dec
stos
cmp
sbb
jle
ficomps
inc
divl
mov
bound
adc
and
adc
push
sub
shlb
sti
mov
pop
loopne
out
push
mov
addr16
loop
push
mov
adcb
pusha
mov
mov
lcall
cmpsl
jge
cmpsl
xor
daa
or
adc
sahf
das
xchg
jb
test
pop
mov
mov
mov
push
xor
fstpl
dec
adc
out
or
jle
sub
mov
cmpb
fisttps
insl
push
inc
movsl
aas
mov
add
adc
xorb
iret
push
cmp
jp
pop
push
addb
mov
add
sub
enter
hlt
mov
ljmp
das
sbb
mov
ficompl
mov
or
in
xor
in
inc
cmp
jle
sbb
roll
jne
call
or
or
cmp
sti
lcall
clc
mov
hlt
or
cld
orb
shr
mov
xchg
pop
or
in
sbb
jne
jmp
jmp
inc
add
dec
or
rcll
xor
sbb
mov
inc
cmp
or
mov
sbb
pop
in
sbb
mov
jo
mov
sub
iret
xorl
int
mov
mov
insb
loope
push
rcrb
jno
mov
mov
fists
iret
push
mov
out
inc
mov
outsl
ret
cli
add
pop
mov
push
jbe
mov
push
add
stc
outsb
and
rolb
jmp
cmp
loopne
pop
pop
ret
jmp
mov
add
movb
and
popa
aad
sub
jmp
push
dec
std
add
mov
test
sub
inc
pop
pop
mov
mov
xchg
repz
cs
add
adc
pop
mov
push
xchg
jmp
jb
stos
jg
add
loope
nop
cli
jo
pminub
ljmp
mov
xchg
les
or
into
xor
mov
mov
jg
jp
cmp
fnstcw
add
pop
add
sbb
stc
cwtl
stos
push
mov
sub
mov
inc
jmp
loopne
cli
and
pop
add
enter
mov
sti
add
xor
add
push
andb
push
movb
cmc
pop
jle
pop
arpl
mov
xlat
xchg
or
mov
mov
cmpsb
jl
cmp
adc
hlt
adc
add
xlat
push
popf
aaa
add
out
xor
add
pusha
adc
push
sbb
cwtl
movsl
mov
and
lea
or
mov
xchg
idivl
aad
popa
mov
mov
insb
cmp
imul
andb
mov
iret
aaa
mov
add
cmp
mov
sub
gs
lret
xor
mov
mov
ja
push
out
lahf
xor
insb
repnz
mull
push
pop
in
pop
xlat
inc
mov
mov
add
dec
cwtl
ret
ds
and
or
pusha
scas
jne
xlat
and
or
jno
pop
push
sbbb
adc
xor
fstps
push
xchg
aam
add
clc
gs
push
das
mov
pop
fwait
cltd
mov
adc
jnp
lret
cld
movsl
aam
or
sbb
adc
fisubs
mov
add
insl
cmp
sbb
pop
orl
push
nop
add
xchg
push
mov
push
and
jge
nop
bound
push
and
lahf
xchg
fwait
dec
sub
pop
jmp
clc
pop
push
add
outsl
dec
jo
and
test
mov
pop
mov
decb
outsb
or
aad
test
into
nop
out
sbb
jp
xor
dec
rclb
add
dec
test
jmp
push
hlt
xchg
adc
add
adc
in
sarb
push
sub
in
test
dec
cltd
mov
cli
nop
ja
lret
push
int3
add
pop
lcall
inc
adc
cltd
mov
aam
push
clc
mov
xor
test
and
leave
and
stos
inc
and
pop
fisttps
add
xchg
sbbb
rcr
or
sub
lock
push
push
mov
popf
incl
das
add
mov
in
mov
ja
adc
lock
cmc
loop
adc
and
ljmp
xchg
mov
mov
inc
jb
add
mov
push
dec
add
mov
adc
repnz
mov
out
pop
notb
ljmp
mov
mov
jbe
jle
cld
outsl
pop
xor
jb
pusha
ja
jo
pop
scas
inc
nop
int
adc
loop
push
add
out
mov
add
inc
add
pop
pop
xor
dec
cltd
and
cld
jle
insl
add
jb
jp
orb
and
in
push
jp
shrb
cwtl
xor
push
add
dec
lods
sub
lock
jne
push
mov
pop
dec
in
outsb
mov
or
int
mov
pop
sub
jmp
aaa
mov
test
mov
and
sub
mov
sbb
jge
shrb
add
js
jo
shrb
cmp
cmp
out
jg
add
xlat
sarb
or
jne
int3
adc
aam
jp
inc
rcrl
subl
pop
mov
mov
cli
pop
mov
add
test
pusha
test
lret
add
adc
add
mov
insb
xor
xchg
pop
icebp
dec
xchg
ret
push
add
and
dec
neg
or
aas
and
pop
push
shrl
mov
cmpsb
add
push
jmp
jg
xchg
sbb
adc
or
hlt
enter
xchg
sub
shl
test
mov
mov
dec
push
add
add
cwtl
in
mov
sahf
mov
stc
mov
jg
daa
fwait
cmpsl
in
and
cwtl
push
add
sub
jle
not
jae
movsl
and
inc
stos
loopne
jmp
aas
adc
dec
push
pop
cmp
js
es
and
enter
xor
es
fistl
mov
rcll
test
fmuls
push
mov
shl
dec
add
in
mov
mov
sahf
sbb
fcmovbe
ljmp
aad
mov
dec
notb
inc
pop
mov
pop
add
mov
pushf
inc
lea
out
adc
clc
loope
iret
sub
push
roll
jno
mov
ds
imul
outsb
adc
repz
ljmp
ficoml
test
js
push
out
push
popa
or
cmp
pusha
sub
and
in
push
popf
addr16
push
test
or
pop
jmp
loope
jns
adc
lret
jns
cmp
jb
sub
outsl
push
sarl
jae
push
jg
dec
sarl
cli
xchg
rep
jmp
ss
clc
dec
std
movsb
adc
jmp
pop
sub
arpl
mov
hlt
aad
dec
dec
add
xlat
cs
mov
movsb
test
mov
bound
adc
mov
data16
out
add
mov
fldenv
imul
mov
and
and
sbb
mov
mov
out
dec
int3
out
cvtdq2ps
or
adc
sbb
sti
and
add
xor
mov
mull
cwtl
mov
lock
clc
inc
shrb
push
jae
mov
adc
pop
jns
dec
nop
daa
mov
pusha
pop
cmpsb
imul
and
jg
adc
push
jmp
fs
mov
pop
addl
cmp
arpl
ror
adc
or
mov
add
cli
cmp
add
push
imul
pop
outsl
mov
inc
adc
stos
mov
stos
add
cmpl
int3
xor
jl
push
flds
dec
cmp
lret
push
scas
ds
mov
in
jmp
scas
addl
nop
and
and
repz
call
or
push
sbb
leave
pop
ret
pop
fstps
lea
push
mov
pop
and
fadds
adc
pop
mov
pop
into
mov
inc
adc
aas
mov
test
pop
and
jmp
lret
rolb
sub
pop
ret
rcrb
mov
inc
std
loopne
mov
jecxz
leave
sbb
mov
pop
insl
sbb
push
mov
fcoms
mov
xlat
pop
subl
repnz
add
call
out
out
push
divl
in
ds
popa
cmp
scas
xor
xchg
aam
clc
adc
ret
sub
sub
cli
push
dec
scas
jo
push
and
outsl
or
jl
das
adc
arpl
rclb
push
jbe
xor
jmp
push
jb
int3
mov
sbb
pop
dec
loopne
xorb
jnp
cltd
sahf
dec
and
cmp
inc
xor
lret
mov
jno
jmp
add
movb
adc
jmp
movsl
adc
jno
jbe
push
ss
insl
filds
xchg
push
or
iret
lds
xchg
jecxz
xchg
clc
adc
enter
shrb
jle
addl
lods
addb
sbb
mov
cmp
jecxz
and
dec
or
push
push
pusha
and
inc
jnp
or
adc
add
adc
pop
data16
mov
cwtl
test
stos
mov
sahf
bound
aas
test
cld
xchg
push
add
cmpsb
dec
js
pop
mov
and
addb
jno
les
dec
cmpsl
dec
pop
inc
iret
loope
adc
push
and
xor
add
pop
pop
jp
rcll
inc
jg
insb
movsl
sub
sbb
sub
icebp
mov
xchg
aas
mov
add
test
pop
mov
add
icebp
and
andl
in
jg
push
pop
cmp
dec
xchg
lret
aas
subb
pop
inc
jmp
mov
mov
mov
out
dec
rol
sbbb
adc
or
aas
loop
adc
mov
shlb
movlps
xchg
add
mov
jg
jmp
mov
pop
into
add
ja
imul
cmp
int
mov
mov
push
xchg
fmul
arpl
inc
test
push
lock
pop
rcrl
add
jmp
xchg
popa
sbb
push
outsl
scas
leave
scas
outsl
jecxz
dec
mov
inc
fs
out
push
ljmp
lcall
pop
jae
xchg
add
add
fyl2x
in
dec
out
and
jmp
adc
popf
pop
lods
int3
test
xchg
into
jb
and
cmc
jns
adcb
jle
pop
jnp
push
repz
out
pop
pop
lock
mov
notl
and
add
lock
rol
jae
add
rorl
popf
pusha
cwtl
mov
add
orb
pop
push
paddsb
jo
sbb
mov
out
xchg
pop
test
mov
sbbb
outsb
aaa
pop
icebp
adc
ja
test
mov
mov
add
test
dec
xchg
sub
push
out
mov
xchg
fcoms
inc
imul
mov
inc
decl
add
xor
or
sub
cwtl
inc
sub
push
inc
jbe
scas
cltd
jmp
test
sbb
es
xorb
fbstp
fisttpl
rorb
inc
mov
sub
or
jmp
arpl
xchg
enter
aam
fs
sbb
rorl
mov
dec
jbe
fsub
push
inc
jno
pop
imul
mov
pop
mov
push
xor
jmp
mov
cmp
in
add
pop
pop
dec
inc
cli
adc
or
push
jmp
mov
sub
test
inc
daa
add
push
nop
loopne
xchg
xchg
in
or
fildl
xchg
ja
xchg
push
call
mov
pop
or
clc
cli
xchg
shrl
imul
jne
mov
push
xchg
or
sub
pop
rcrl
cmpsl
adc
xchg
mov
shrl
push
xchg
out
aas
mov
popa
xlat
xor
int3
cs
fs
in
cmp
dec
out
shlb
nop
idiv
sub
jge
cmc
subl
repz
pop
or
dec
xor
lods
faddl
out
repz
sub
add
pop
push
sub
nop
pushf
mov
xor
mov
clc
jmp
ret
insl
pusha
pop
jno
jae
mov
add
dec
nop
insb
not
inc
jle
cmp
enter
or
pusha
inc
xchg
and
es
mov
or
push
push
pop
lds
rcll
lahf
xor
sub
adc
sub
dec
add
shr
fsub
sbb
xchg
inc
jmp
mov
adc
ret
aam
add
push
or
aaa
lea
cli
je
addr16
xchg
clc
jae
mov
add
jl
xchg
sahf
ljmp
mov
loopne
cmc
int
mov
mov
rcll
cli
adc
mov
ja
dec
stos
sub
call
push
pop
cmp
mov
shlb
jp
jle
cltd
inc
xchg
sarl
fwait
dec
pop
jb
std
jp
jle
mov
and
jae
mov
mov
xchg
aam
icebp
cmp
xor
rcrl
in
gs
pop
inc
fwait
scas
subb
jge
cmp
bound
mov
push
mov
or
shrl
rcrl
inc
inc
add
adc
in
jne
subb
xor
mov
lods
jns
mov
lret
dec
xorb
pop
dec
fldl
cmp
sub
fadds
lret
push
sub
cmc
icebp
mov
push
push
mov
or
andl
xor
popa
data16
dec
rcrb
inc
cmp
xor
jp
fistps
movsb
cmpsl
lock
inc
out
shr
or
cmp
add
cld
pop
ds
and
cwtl
inc
mov
pop
pop
mov
pop
test
sub
enter
adc
popf
push
mov
ss
push
push
xchg
jecxz
cmc
and
lahf
inc
and
push
push
pop
xchg
int3
shr
adc
fists
xchg
pop
xchg
mov
loopne
xor
popa
jo
test
xchg
pop
inc
rorb
push
aad
xchg
daa
add
ja
pop
das
cmp
in
enter
sub
cmp
dec
ret
jmp
icebp
mov
sbb
lret
add
in
xor
and
pop
out
mov
sbb
sti
or
jg
push
mov
das
dec
cld
leave
mov
lods
rcll
xchg
jle
fstpl
inc
mov
add
and
jno
fstl
add
fsts
inc
or
sub
repnz
imul
ds
ja
inc
add
popf
pop
and
js
in
push
dec
test
inc
movsb
jns
cltd
adc
push
or
lods
mov
cwtl
pop
fldenv
push
jmp
movsl
lock
mov
push
jg
push
mov
add
push
jecxz
mov
cmp
add
xor
cs
add
xchg
cmp
stos
popf
mov
lods
testl
inc
or
hlt
lock
pusha
jmp
jnp
popa
mov
outsb
rolb
xor
adc
jmp
cld
dec
mov
popa
and
push
cld
cmp
lahf
rolb
jo
mov
xchg
dec
ja
jl
jmp
mov
pop
mov
clc
and
and
mov
add
inc
jmp
inc
roll
sub
das
testb
rol
sar
test
test
pop
popf
mov
pusha
stos
push
jmp
lret
sahf
jnp
cs
and
jp
jbe
adc
pop
push
jne
sub
out
nop
pop
mov
mov
addb
push
or
pop
inc
mov
add
pop
sub
loope
out
add
or
inc
or
pusha
ficomps
and
movsl
push
and
inc
imul
jmp
sub
fs
fidivrl
bound
nop
dec
sbb
pop
mov
scas
repnz
ret
shl
xor
mov
adc
adcl
push
mov
cmp
dec
stos
mov
jbe
xor
push
neg
pcmpeqb
xchg
or
cwtl
out
addr16
aad
bnd
push
push
adcb
add
mov
add
ss
adc
adc
xlat
push
repnz
orb
lret
pop
cmp
neg
or
xchg
and
and
and
pop
pop
adc
add
push
insl
pop
adc
adc
arpl
xor
or
movsl
add
aas
les
shlb
jmp
add
out
stos
into
sub
in
cmpsl
mov
adc
jl
daa
faddl
mov
loopne
mov
mov
in
dec
in
inc
in
and
aad
sub
adc
aaa
es
les
or
pop
cwtl
mov
ret
jnp
into
jns
out
pop
jle
push
pop
push
push
rclb
enter
jbe
test
cld
ret
sub
jmp
js
sub
or
or
xor
jp
xchg
pop
out
jmp
dec
adc
mov
movsb
add
cmp
pop
insb
and
sbb
mov
int
push
xchg
clc
push
in
mov
pop
cmpsb
pop
mov
pop
mov
aaa
in
fdivrs
movsl
jl
lods
sub
daa
add
cld
and
aaa
mov
das
out
fs
mov
in
pop
mov
add
dec
and
sub
in
add
pop
enter
pop
fwait
dec
es
pop
iret
sbb
adc
jmp
push
jo
cmp
aas
jp
jmp
mov
imul
jmp
cmp
test
or
daa
sub
imul
jb
adc
lock
adc
dec
push
xchg
cmp
pop
jb
xchg
jnp
or
mov
adc
mul
jmp
push
mov
or
xor
add
sub
pop
xor
mov
and
cmp
mov
push
not
inc
ffree
in
orb
sub
call
push
pop
mov
mov
push
pop
adc
daa
xor
push
pop
xor
cs
adc
stc
mov
mov
push
repnz
pop
push
jbe
loope
cmp
dec
divl
push
movl
js
ss
dec
or
insl
adc
jmp
and
pop
aad
or
into
push
imul
mov
test
stc
pop
imul
imul
jl
or
mov
mov
mov
cwtl
data16
pop
jno
cmpsl
xlat
add
cmp
mov
inc
das
mov
jb
scas
das
ss
mull
cltd
dec
pop
sub
add
mov
cltd
pop
call
das
inc
orb
pusha
pop
repz
scas
pusha
dec
adc
xor
call
and
sub
pop
std
scas
push
xchg
jb
add
push
lds
jmp
imul
pop
mov
or
xchg
and
leave
shrb
fdivrl
jmp
xchg
add
push
cmp
or
dec
and
sub
outsl
dec
dec
aaa
lods
push
inc
or
dec
les
pop
ljmp
pop
sub
jge
add
iret
fildll
mov
add
push
int3
pop
add
pushf
sub
loope
arpl
dec
pop
inc
push
sbb
aaa
fbld
repz
add
cmp
push
cli
mov
add
jl
je
jmp
movsb
lss
mov
add
test
or
pusha
punpckhdq
push
mov
jo
jo
orb
jle
sub
stc
mov
pop
dec
push
mov
sub
push
inc
outsb
xlat
and
jo
mov
pusha
or
sub
or
mov
lret
jmp
ret
shll
lds
xchg
pop
and
js
push
popf
nop
xor
filds
mov
not
movsl
shl
add
aas
lds
jmp
movsl
lcall
inc
cli
shrb
sbb
mov
mov
xor
adc
movsl
scas
dec
div
pop
cld
or
pop
dec
jp
or
push
push
push
dec
sbb
inc
stc
imul
add
in
sub
push
stos
cld
mov
cwtl
sub
push
add
pop
xchg
in
push
cmc
mov
push
push
das
into
jmp
push
test
leave
xchg
cld
je
dec
ja
lods
pushf
pop
mov
or
test
push
js
ss
sub
xor
fcomps
test
or
pop
mov
push
jmp
je
in
and
add
ret
lahf
inc
fsubs
jmp
ret
nop
or
dec
jo
cld
movsb
push
mov
mov
mov
sub
inc
movsl
fldt
std
cmp
xor
not
mov
jle
sub
outsb
add
in
adc
jl
or
in
push
repz
out
js
dec
push
xchg
std
and
xlat
add
jmp
add
jge
and
cmp
cld
dec
lds
lret
clc
inc
jle
mov
xchg
push
push
ss
jmp
roll
push
stc
sbb
cmc
add
lret
inc
sbb
or
mov
psubsb
pop
aad
add
mov
das
pusha
dec
add
add
jmp
add
push
jnp
inc
cli
push
mov
xor
aas
dec
mov
mov
fiaddl
pop
pop
xor
shll
xor
jp
fnstcw
movsb
pushf
roll
adc
jmp
sub
push
xor
push
push
adc
add
ficoms
mov
adc
cli
sbb
hlt
push
or
xchg
mov
leave
jmp
xor
outsb
jo
xchg
jne
adc
scas
and
push
push
cld
jo
test
es
push
shr
push
rcrl
push
das
jp
inc
sub
addl
ja
pop
adc
jns
pusha
shlb
rcll
or
rolb
xor
stc
add
xchg
xor
sub
or
hlt
dec
and
push
add
and
orb
outsl
fstpl
push
lret
outsb
rcrl
pop
pop
jmp
push
xchg
sub
icebp
loopne
stc
syscall
push
xor
faddl
pop
enter
cmp
xor
pop
pop
and
shll
push
jl
push
xlat
lds
ret
jnp
repnz
pusha
jl
jp
cld
dec
inc
test
lea
add
jb
dec
incl
add
inc
jmp
mov
jnp
sub
dec
inc
xor
insb
add
push
jnp
inc
ret
jle
and
hlt
push
pop
or
out
adc
mov
pop
nop
xor
addb
bound
imul
jmp
fs
cmpsb
movsb
nop
jmp
lcall
cwtl
push
repnz
cmc
or
dec
push
sub
fsubs
or
aaa
push
ret
inc
push
pushf
add
es
push
and
popa
xor
dec
sub
cwtl
iret
js
xor
notb
mov
sub
pop
sbb
gs
and
xchg
cltd
push
cs
mov
cmp
xor
pop
popa
dec
mov
and
out
inc
push
or
mov
rcrb
fldl
pop
dec
xor
in
in
ret
adc
inc
xlat
pop
xchg
jmp
mov
mov
or
data16
adc
sub
mov
mov
push
lahf
pop
xchg
bound
das
stos
jne
sub
push
vpcmpgtb
jne
jle
mov
mov
inc
cmp
mov
push
shl
mov
orl
xor
or
push
test
inc
test
neg
mov
pop
ret
sarb
imul
ret
jmp
add
adc
cld
or
pop
push
xchg
add
pop
mov
js
fisttpl
jae
sub
xchg
push
jmp
mov
jae
inc
mov
sbb
dec
and
pop
daa
xchg
ret
lock
in
pop
jne
aam
mov
or
movsb
add
inc
and
ja
push
imul
sbbl
aas
fdivs
jecxz
or
mov
mov
dec
outsl
setl
into
testl
cmp
leave
cltd
push
push
daa
in
inc
push
jmp
pop
xchg
movsb
jg
and
or
push
jne
add
or
mov
pop
and
rorl
pop
push
in
add
mov
inc
fisttpll
shlb
mov
jl
push
call
lods
push
and
inc
fcoms
mov
orb
dec
add
push
mov
adc
mov
das
jns
cmp
cmp
cmp
jge
addr16
and
aaa
aam
cltd
lock
push
fwait
jbe
add
aas
les
mov
dec
movsb
or
adc
jg
mulb
jno
imul
repnz
sub
int
daa
jmp
fcoml
loop
mov
aad
push
sub
jecxz
push
dec
push
sar
push
mov
add
pushf
jmp
mov
dec
sub
leave
ffreep
push
xchg
lods
or
fsubrs
xchg
leave
bound
add
push
ja
xor
pop
and
sub
leave
xor
mov
pop
pop
lcall
cli
popf
mov
and
jmp
adc
cmc
push
mov
out
cmc
fsubrs
sbb
pop
jmp
arpl
mov
and
and
jmp
sub
xchg
aas
or
or
insl
subb
jne
pusha
movsl
pop
inc
enter
loop
inc
add
pop
push
cmc
insb
dec
sbb
pusha
mov
aas
lahf
mov
cmp
push
inc
sbb
sub
test
pushf
add
jno
ret
xor
xchg
mov
lock
mov
xchg
pop
push
xchg
xor
fbstp
das
inc
adc
jge
into
arpl
push
xor
int3
mov
pop
nop
notl
xchg
push
sbb
shlb
lcall
and
adc
jne
sbb
xor
in
fs
or
mov
mov
add
mov
inc
subb
out
jno
mov
test
lret
addl
inc
push
push
bound
not
loope
dec
dec
add
insb
call
add
pop
ror
add
rcrl
push
pop
faddl
out
cld
push
dec
fs
adc
repz
or
pop
pop
xor
xor
sub
push
cmc
stc
jmp
fimuls
insb
popl
jl
sub
push
icebp
ret
dec
push
pusha
arpl
or
or
into
inc
std
ret
cmc
imul
or
jmp
jne
jmp
fnstsw
adc
xor
lret
lcall
jns
sub
sti
or
cmp
repnz
dec
jnp
jmp
mov
or
cmp
add
int3
pop
sub
or
notl
pop
ljmp
mov
add
out
not
sar
clc
lcall
insb
jmp
xor
outsb
xchg
fcomip
cmc
les
dec
jmpw
xchg
jmp
repz
push
pop
add
jmp
mov
scas
test
imul
repz
dec
clc
mov
adc
icebp
mov
xchg
das
aas
cmpsl
dec
ja
outsb
or
pop
add
dec
sub
push
push
push
mov
push
mov
inc
mov
not
add
repnz
push
pop
jmp
les
icebp
inc
cmp
lods
cmpsl
adc
jo
mov
push
ds
sbb
pop
roll
xor
pop
add
cmc
repnz
and
lret
mov
mov
stos
dec
cli
or
xor
dec
adc
add
jecxz
call
pop
cmpsb
add
pop
pop
push
push
push
shlb
cli
cmp
ret
mov
cmp
mov
nop
xlat
imulb
sahf
aas
add
cmc
mov
mov
stos
inc
adc
inc
scas
xor
mov
daa
leave
jle
inc
xchg
nop
lret
into
mov
and
dec
sbb
rolb
sub
jl
and
lret
fprem
jnp
shll
ss
jns
cmp
orl
out
mov
nop
xchg
sub
dec
cwtl
or
add
and
loope
cmp
push
addr16
fidivrs
add
add
fs
lds
and
movsl
into
mov
add
adc
xor
jle
or
inc
in
cwtl
push
mov
push
xchg
pusha
aaa
and
addr16
fsts
xchg
push
mov
add
sub
lea
aas
push
or
mov
lret
out
jnp,pn
mov
push
add
js
xor
push
mov
dec
mov
jmp
mov
dec
mov
xchg
lods
aam
hlt
inc
jle
aas
cld
cmp
add
out
or
pop
call
adc
adc
jmp
shr
add
pop
pop
xchg
add
in
aas
pop
push
jb
jnp
rolb
dec
lea
adc
scas
and
pop
fldt
fildll
pop
cmp
mov
loopne
jae
lret
push
pusha
mov
popa
jo
mov
jns
or
pop
add
jecxz
subb
sbb
jg
rol
adc
lcall
cli
mov
mov
and
mov
rdtsc
loope
push
mov
shl
pop
loopne,pn
rolb
mov
jp
addr16
push
les
das
mov
aad
cmpsl
pop
xor
lds
push
pop
fdivrs
mov
pop
add
and
adc
mov
imul
mov
mov
cmp
or
adc
mov
mov
leave
pop
cmc
add
dec
rclb
in
and
xor
mov
bound
pop
xlat
adc
or
sub
enter
xchg
or
lea
jno
jg
inc
pushf
dec
jbe
push
sti
sbb
ret
mov
popa
mov
xor
dec
movsb
jmp
hlt
sub
mov
mov
dec
adc
adc
lret
pop
cmp
mov
sarb
cmp
xor
and
mov
popf
jle
jmp
sahf
pop
leave
pop
jno
hlt
push
aad
mov
aaa
xor
movsb
jg
mov
int
movsl
test
xchg
pop
out
xchg
cs
inc
cmpl
cmp
xor
test
shl
dec
jl
xchg
lcall
pop
cld
ds
inc
sbb
and
sbb
inc
jmp
enter
add
jns
mov
gs
inc
push
adc
xor
inc
movsl
push
or
push
and
jb
add
adc
loop
or
enter
pusha
adc
sbb
adc
sti
inc
fsubrp
add
inc
mov
popf
rorb
bsf
pop
andb
sbb
push
add
aam
cmp
sub
lret
push
data16
jnp
adc
dec
loope
fcoml
mov
inc
lcall
xchg
xchg
mov
bound
neg
add
mov
inc
adc
xlat
cs
aas
and
ficompl
push
daa
cld
xor
ljmp
cmp
int
xchg
fldenv
lcall
push
cwtl
cmp
jnp
pop
xchg
movsl
cmp
add
mov
push
mov
and
sub
cmp
inc
sub
sahf
push
push
jbe
popf
push
ret
negb
aaa
pxor
sub
add
xor
rclb
test
adc
xor
int3
stc
inc
sub
add
lds
in
pop
test
and
mov
call
xor
and
jae
xchg
lahf
pop
xor
xchg
inc
data16
add
not
rol
mov
icebp
inc
repz
insl
push
mov
xor
lods
stos
add
out
hlt
pop
push
repz
adc
lds
sarl
cs
xor
bound
jnp
je
jo
mov
into
mov
push
push
push
stos
add
icebp
xor
mov
xor
in
xchg
jo
into
and
jg
dec
into
mov
push
lahf
fimull
fwait
jo
mov
movsb
mov
fcom
mov
je
stos
aam
hlt
or
ja
dec
stos
lea
adc
lods
aas
jmp
pop
shrl
and
push
xchg
movhps
ljmp
xchg
movsb
xchg
in
or
lret
push
ret
imull
add
movsb
xor
pushf
mov
xchg
pushf
and
bound
andnps
add
adc
scas
bnd
mov
mov
mov
mov
sub
std
pop
movsb
sbb
or
cmp
mov
xor
popa
hlt
and
pop
jb
adc
lods
sub
jmp
pop
es
jbe
vphadddq
inc
and
and
push
sub
adc
jmp
call
add
inc
and
mov
inc
push
js
jmp
out
sar
add
cwtl
or
xor
xchg
xor
sbbl
jae
inc
sub
das
jbe
movsl
lock
shrl
sbb
andb
fs
sbb
das
cmpl
pop
movzwl
es
enter
adc
clc
or
enter
xor
adc
rol
mov
test
mov
jmp
addb
jo,pn
or
pop
jecxz
and
lcall
mov
testb
adcb
pop
and
lret
mov
adc
lods
mov
nop
xor
mov
popf
fists
dec
add
sbb
push
out
mov
daa
and
jo
pop
add
cmpb
aad
das
dec
pop
mov
mov
std
jle
add
in
pop
push
and
pop
mov
movsl
sbb
jmp
sub
adc
dec
cmp
dec
xchg
cltd
dec
cmp
and
add
or
sub
and
jmp
mov
xor
in
in
insb
xchg
inc
push
jmp
or
add
loopne
out
jno
in
jp
in
pop
inc
push
adc
inc
xchg
in
push
dec
rclb
cmc
dec
pop
loope
in
shr
cld
sub
outsl
xor
dec
inc
xor
add
mov
cmp
xor
push
jb
jbe
mov
addr16
pop
pop
jnp,pt
ja
and
mov
cli
pop
pop
lret
and
adc
pop
or
push
or
std
xor
ret
enter
cmc
pop
dec
sub
fdivrs
push
push
mov
jns
pop
fwait
pop
pop
mov
push
add
push
mov
inc
pusha
jns
jbe
cmc
sub
std
adc
add
leave
pop
stos
push
push
ret
push
push
push
pop
movsb
sub
and
imul
dec
push
das
mov
inc
nop
orl
pop
xor
stos
mov
jg
mov
pop
mov
hlt
pop
imul
xor
add
and
shrb
push
and
or
cmpb
out
sti
sub
mov
or
std
cmp
sub
and
mov
insb
test
jle
ds
mov
xor
fnstsw
popa
mov
testb
jbe
add
inc
orb
push
pop
mov
pop
and
mov
sbb
daa
adc
inc
xchg
or
mov
push
and
xchg
js
push
icebp
cmpsl
icebp
leave
mov
ss
and
ret
mov
cmp
and
push
mov
hlt
add
insl
mov
outsl
testb
daa
addr16
jb
mov
jmp
sahf
push
ds
mov
jmp
lods
xchg
sub
sbb
pop
add
aad
adc
mov
in
stos
dec
xchg
inc
pusha
aas
adc
inc
mov
pop
int3
add
in
rcll
adc
mov
push
push
pop
add
lcall
cmp
and
pop
xchg
push
add
test
fistpl
add
daa
inc
es
pop
hlt
inc
or
jne
mov
or
push
idivb
es
insb
dec
test
jecxz
pop
adc
mov
stc
pop
jmp
xchg
das
mov
and
jno
popf
cld
and
aam
xor
into
dec
jmp
icebp
mov
and
sub
inc
bnd
movsl
jbe
jo
add
jne
add
arpl
lods
aas
adc
imul
sbb
xor
pop
adc
rolb
xchg
cmp
push
popf
and
sbb
pop
push
sahf
jnp
adc
inc
or
mov
outsb
jae
aam
hlt
test
into
inc
pop
adc
cmp
jecxz
test
cmp
imul
sahf
push
int
jo
pop
push
dec
or
jmp
lods
sub
fisubrl
inc
and
pop
mov
mov
push
xlat
cltd
pop
cmp
test
push
sbb
jge
pop
xlat
push
test
or
test
add
push
add
testl
add
jg
and
subb
adc
jae
inc
and
push
mov
and
mov
les
adc
adc
mov
jb
insl
sarb
or
fwait
cltd
leave
loope
inc
or
jo
cld
cmp
dec
mov
add
les
enter
mov
add
cmp
inc
testl
insl
lret
sbbl
cmpsb
addb
push
popa
sarl
xor
sub
dec
movhps
or
mov
and
daa
sub
sbb
push
imull
inc
dec
aam
pop
lock
inc
xchg
mov
mov
shl
out
cld
mov
rorb
push
adc
mov
ljmp
das
xor
adc
sub
sub
ja
out
std
das
add
movl
sub
test
adc
xor
jbe
add
push
dec
test
push
lret
repz
mov
cmp
repnz
and
arpl
push
sbbb
dec
iret
pop
push
adc
jg
jecxz
jle
inc
sub
add
lret
stos
test
push
icebp
pop
lea
push
not
push
mov
out
cmp
imul
fisubl
sub
lahf
mov
pushf
inc
shrb
and
lds
sbb
repz
pop
mov
out
jb
aaa
cli
adc
loop
movsl
or
mov
and
or
or
faddp
xchg
pop
or
ret
out
movsb
rolb
mov
sti
loop
push
jl
cmp
cmp
dec
ljmp
popf
add
pop
pop
push
add
ljmp
or
ss
push
mov
mov
push
mov
mov
and
jmp
shlb
xor
lret
push
das
push
shr
imul
out
pop
divl
cmp
push
outsb
jbe
dec
fnstcw
mov
test
or
pusha
prefetcht0
or
fsubrl
test
push
scas
popa
es
pop
mov
pop
hlt
mov
dec
xchg
and
orb
fldcw
test
sbb
xlat
gs
push
sbb
jae
mov
enter
push
gs
add
jbe
testb
sbb
cltd
adc
stos
cmpsl
mov
add
mov
jb
ja
fisttps
repz
and
jbe
adc
pop
dec
fisttpl
jmp
mov
out
popa
ja
aad
and
or
or
or
fbld
mov
orl
loopne
pusha
xor
push
or
jnp
dec
add
pop
pushf
dec
push
out
cmpsl
cld
dec
mov
xor
dec
sbb
sub
and
mov
add
test
mov
pop
xor
add
add
xchg
push
sub
andb
sbb
add
in
popf
or
sti
loope
jbe
push
roll
cmp
sub
in
neg
cwtl
jg
out
add
push
shl
ret
and
repz
je
jg
mov
mov
repnz
or
push
dec
add
jmp
mov
mov
gs
push
icebp
sahf
xlat
outsb
mov
ljmp
insb
mov
sbb
or
mov
dec
orl
neg
pop
pop
add
sti
cmpsl
push
dec
jecxz
adc
not
xchg
mov
lahf
dec
js
out
or
jmp
mov
mov
fldl
mov
rcrl
fsts
pop
fcomps
mov
pop
pop
jl
arpl
cmp
push
in
popa
adc
adc
mov
dec
xchg
push
mov
mov
add
clc
pop
sub
push
outsl
stos
cli
stc
xor
mov
add
out
mov
pusha
adc
pop
and
ljmp
mov
cmp
jb
cmp
test
sub
add
add
lret
movsl
repnz
les
cli
icebp
mov
add
aad
mov
cmp
adc
not
outsl
inc
or
daa
out
cmpsl
pop
gs
sahf
xchg
ret
js
xlat
sub
sub
iret
das
adc
xchg
push
mov
out
push
xchg
inc
jmp
aaa
push
sbb
popa
or
fisttps
movsl
jle
pop
or
popl
fildll
or
add
inc
or
jl
dec
test
sbb
xchg
add
lret
dec
cld
test
imulb
ret
cmp
jge
out
add
dec
jne
ds
divb
or
xorl
and
pop
jmp
lds
and
clc
out
repnz
mov
push
inc
imul
shlb
sub
xchg
or
jmp
fstl
inc
sbb
popa
push
loope
pop
sub
lea
shll
test
out
lret
push
push
cld
fmul
jge
adc
pop
and
lret
das
test
int3
jmp
repnz
shl
ja
xchg
jae
fcompl
adc
rorb
outsl
inc
cld
jmp
out
mov
xchg
sub
xor
adc
and
push
out
pop
mov
push
in
and
or
addl
fs
lahf
jl
scas
dec
xchg
push
mov
mov
aad
dec
push
mov
notl
test
inc
jle
pop
pop
push
mov
out
and
add
jle
jp
in
add
pop
mov
mov
and
pop
stc
dec
insl
es
push
imul
fdivr
xor
sub
inc
aas
test
inc
inc
inc
cmp
test
fwait
push
xor
mov
cmp
inc
jmp
shr
push
jnp
mov
loopne
sahf
xor
in
lds
mov
test
bound
jp
rclb
or
hlt
push
clc
dec
mov
adc
loopne
jo
imul
enter
popf
cwtl
imul
pushf
std
and
ret
test
add
lods
and
das
add
adc
pop
mov
cltd
mov
pop
aaa
push
push
ret
enter
addb
int
pushf
or
adc
mov
push
jo
hlt
bound
cwtl
jle
jg
test
adc
or
out
or
xchg
pop
dec
andl
outsl
clc
ret
add
jle
into
jbe
mov
push
hlt
inc
testl
inc
jmp
dec
test
inc
adc
xlat
lock
add
frstor
idivl
movsb
sbb
mov
lds
int
dec
inc
out
sbb
sub
mov
mov
adc
jp
cmp
inc
inc
cmp
dec
test
call
hlt
andb
jmp
sub
jbe
pop
es
xchg
inc
loopne
dec
sbb
repz
mov
dec
xor
add
je
loope
lea
adcb
push
xor
shlb
mov
dec
in
pop
pop
cmp
sub
add
pusha
inc
insb
or
aaa
cwtl
pop
mov
adc
xchg
adc
pop
das
cmc
push
fdivrp
dec
ja
push
add
js
sub
test
mov
mov
mov
in
xchg
iret
push
out
mov
inc
js
insl
mov
out
or
mov
andb
into
jne
xchg
push
sub
and
mov
or
insl
stc
add
mov
lock
lahf
dec
scas
sub
rorl
xchg
xchg
adc
daa
jbe
dec
pop
sti
xchg
test
lcall
push
sub
mov
repnz
and
popf
push
inc
imul
or
jo
mov
loop
add
stc
ret
cli
jnp
arpl
and
push
or
lea
add
fldlg2
test
mov
adc
nop
hlt
je
cmp
jmp
or
in
fiaddl
sbb
and
jbe
inc
or
shll
mov
push
mov
push
daa
cld
pop
mov
pop
data16
adc
push
mov
nop
mov
mov
lret
and
add
cmp
jb
andb
or
aas
add
jne
js
xchg
in
scas
ja
leave
add
adc
mov
jmp
dec
or
push
mov
add
cmpsl
sbb
and
mov
xchg
or
popa
jns
add
outsb
repnz
mov
jno
sub
mov
inc
dec
sub
dec
dec
call
mov
ffree
xor
cmp
mov
push
repz
inc
das
mov
js
cmc
stc
mov
dec
push
dec
inc
inc
loopne
or
sti
in
std
push
mov
cmpb
cmp
aas
loop
rolb
fcomps
gs
addr16
loop
sbb
inc
js
cli
call
mov
mov
out
les
add
jg
add
add
cltd
sub
aas
mov
add
dec
sub
dec
xor
sbb
sti
jne
mov
bound
fwait
loopne
sti
cmpb
adc
into
aas
mov
mov
mov
adc
mov
add
sub
test
mov
jg
arpl
push
rcrl
sub
ja
pop
cld
test
cli
loope
jp
push
call
pop
loope
rorl
sbb
xchg
andb
xor
adc
cwtl
xor
sub
add
out
sub
iret
cli
pop
push
inc
rclb
jno
lea
cmp
pusha
gs
sub
inc
iret
sbb
arpl
inc
dec
loope
add
xor
cmp
mov
xor
push
dec
jnp
mov
jle
xchg
cmp
pop
sub
or
mov
sub
sbb
mov
inc
xor
cmp
dec
test
xor
negb
ljmp
sub
inc
nop
xor
or
xlat
fisubs
loop
je
push
mov
mov
sbb
dec
jmp
mov
adc
and
dec
repz
pop
and
xchg
out
pop
push
jecxz
sub
pop
push
pop
and
arpl
or
test
shl
inc
in
jne
adc
mov
xchg
imul
push
ljmp
inc
in
fisttpll
pop
sarb
mov
cs
push
aad
imulb
push
sti
mov
xchg
dec
jbe
sub
out
lahf
mov
push
xor
aam
mov
pop
lods
iret
mov
pop
push
pop
mov
jo
or
push
rorb
mov
subb
movsl
fistps
xor
or
push
orb
adc
movsl
int
popa
or
std
xor
push
jmp
pop
pushf
stos
mov
lds
mov
sub
and
or
push
or
dec
jno
add
or
inc
sbb
sarb
pop
btr
test
lret
adc
push
add
ror
jg
jnp
loopne
xor
das
jbe
and
in
add
jp
adc
cld
test
mov
pop
add
insb
movsb
jl
xchg
outsl
or
push
fstpl
xor
add
push
mov
dec
ljmp
into
std
lret
lret
rcll
jno
leave
test
push
lods
cmp
xchg
fcomps
add
mov
sbb
incl
xor
and
cmp
pop
jle
sub
push
fs
sub
mov
push
xor
pop
dec
test
movsl
and
push
cwtl
jb
loope
or
adc
stos
cmp
mov
call
fs
xchg
pop
clc
mov
orl
add
pop
fadds
pop
push
inc
xchg
and
mov
jl
std
dec
mov
test
lret
lret
iret
adc
movsb
das
xor
or
arpl
push
mov
dec
xchg
int
cld
push
jle
dec
xor
int3
arpl
stos
xlat
pop
icebp
add
pop
out
test
lods
aam
mov
adc
mov
mov
jl
jmp
pushf
ljmp
dec
loope
roll
xlat
mov
sub
jmp
mov
jae
mov
fnstcw
xor
test
and
daa
rcr
add
pop
and
push
mov
outsb
cld
push
pusha
or
xor
mov
or
xchg
sub
addb
or
or
and
push
dec
movl
pop
mov
mov
jmp
xchg
cmc
add
call
enter
cmp
jle
xor
sub
daa
mov
jo
pop
mov
mov
ret
pop
in
loop
mov
outsb
pushf
fsubl
mov
ret
add
clc
xor
cmc
xor
rcr
dec
inc
stc
mov
dec
shrl
stos
in
jnp
add
xor
sub
adcb
out
dec
aas
inc
push
jmp
mov
inc
inc
adc
rcll
aaa
pop
add
loope
enter
out
movhlps
mov
in
cmp
jae
fnsave
bound
adc
mov
adc
mov
dec
int
inc
loop
fidivrl
adc
ficoms
xorb
push
pop
daa
mov
daa
add
xchg
fstpl
add
mov
lock
pusha
js
mov
sbb
clc
sti
iret
mov
dec
xor
push
leave
addb
mov
imul
pop
and
iret
shl
and
ds
cmpsl
arpl
shll
das
pop
lods
mov
or
and
addb
xchg
xor
stc
gs
dec
fldz
mov
aas
mov
popa
das
sbb
fisttpll
daa
testl
lods
lock
add
popf
jnp
and
mov
rcrl
leave
hlt
andb
dec
sub
in
sub
xor
push
jnp
lods
xlat
adc
inc
push
add
not
inc
or
imul
mov
mov
adc
inc
loopne
cmp
and
inc
or
cmp
pop
dec
lock
ja
ret
inc
jmp
and
adc
cmc
xchg
call
inc
mov
xor
cli
add
pop
rcrb
jmp
pop
jo
fcmovnb
sub
xor
lret
mov
push
orb
push
imul
je
mov
inc
add
or
inc
int3
xchg
sbb
mov
jp
add
pop
push
inc
push
jno
adc
inc
add
dec
push
daa
xor
add
xor
mov
out
xlat
sarb
orb
sub
mov
mov
or
aaa
add
pop
mov
stc
jecxz
and
lods
aam
inc
in
icebp
xbegin
xchg
sub
cmpsb
adc
push
out
adc
ljmp
jno
outsb
clc
xchg
sbb
pop
rolb
push
unpcklps
cmc
mov
cs
ret
xchg
rcl
inc
or
adcl
mov
dec
jge
jne
call
leave
std
out
jg,pn
cld
dec
test
les
xchg
push
popa
xor
cmpl
adc
inc
mov
sbb
imul
out
xor
mov
cmp
xchg
mov
sub
push
add
cld
jno
push
push
and
out
jle
inc
add
cmp
pop
sbb
jl
pop
jmp
push
testb
cmp
das
pop
cmpb
cmp
jle
mov
add
add
cmp
test
add
addr16
addb
jmp
mov
push
shlb
adc
jo
push
fnstenv
xchg
fdivr
and
xor
mov
or
jb
dec
or
adc
gs
xor
aas
out
cmp
arpl
js
jmp
shll
lea
in
pop
xchg
cwtl
test
sbb
mov
cmc
enter
jge
lahf
and
mov
pop
mov
dec
adc
mov
ljmp
out
loope
pusha
hlt
orb
adc
push
out
iret
sub
inc
cmpsb
push
icebp
pushf
sub
pop
pop
dec
lds
mov
xchg
or
add
sub
out
xchg
xchg
pop
out
inc
cmp
es
add
push
push
lods
mov
dec
lret
test
cmp
push
std
imul
push
incl
mov
les
loope
push
inc
ret
cmpsl
mov
int
or
cltd
repnz
pop
xchg
hlt
xor
cltd
in
js
ret
mov
scas
ss
ja
in
add
mov
divb
pop
and
push
inc
out
sti
jle
dec
pop
test
jl
xlat
sub
dec
push
inc
in
cmp
xchg
mov
push
jmp
cmp
inc
push
push
cmpb
or
imul
mov
gs
repz
jo
or
pop
xchg
add
push
stos
pop
jle
popf
mov
or
aad
add
into
xchg
cli
into
imul
and
sbb
and
lret
or
shr
xor
xor
ret
popa
sbb
push
subl
dec
loop
pop
mov
dec
dec
cmpb
cmpsb
cs
movsb
xor
xor
or
mov
subl
mov
add
sarl
popa
and
jo
and
mov
ret
dec
lock
adc
insl
inc
xchg
mov
or
mull
movsl
adc
push
push
popf
jge
lea
sbb
pop
sbb
push
push
inc
push
jp
popf
dec
jg
jno
add
push
push
incb
mov
shrb
clc
sub
out
pop
adc
cmp
mov
outsb
fsubs
out
popf
mov
call
or
sti
mov
iret
add
cmp
adc
adc
xlat
adc
cld
add
xchg
adc
add
fmull
xor
arpl
or
mov
sbb
add
add
jecxz
sub
fiaddl
dec
push
xor
adc
test
sarb
mov
mov
fisttps
xor
sub
dec
dec
jae
inc
sub
repnz
shl
inc
add
push
mov
shrl
sub
pop
add
inc
int
rorb
bound
icebp
adc
push
add
pop
pop
fldcw
shll
je
add
xorl
fdivrl
mov
or
lods
adcl
xorl
cmp
push
loope
mov
sbb
outsl
pop
test
push
mov
push
and
mov
or
cmpl
sub
mov
stc
jo
jo
cmp
and
mov
xchg
push
sbb
loope
sub
fadds
jle
jge
push
jo
or
and
rclb
loopne
lods
sub
mov
jae
daa
lds
ljmp
orb
add
neg
nop
adcb
add
and
std
push
add
pop
into
aas
addb
jp
sub
icebp
adc
push
in
test
shll
popf
in
xcrypt-cbc
cmpsl
push
push
ljmp
pop
jb
cmp
daa
dec
subl
adc
cmp
add
sar
cmp
push
mov
pop
inc
fisubs
sbb
push
negb
int
jle
or
bound
jne
adc
lock
or
pop
push
push
andl
sbb
jmp
lods
outsb
in
mov
addr16
jnp
cmp
dec
scas
fisttpll
mov
scas
dec
enter
cmp
sub
pop
push
inc
or
or
push
jmp
insb
or
or
dec
jae
sbb
loopne
xlat
dec
dec
jno
inc
inc
sbb
inc
xorps
pop
jmp
adc
jg
lcall
rclb
or
stc
cmp
lods
add
test
pop
inc
push
adc
and
or
jge
das
sbb
or
xor
pop
mov
outsb
repnz
lods
adcb
js
push
lea
enter
aas
mov
fsubrl
outsl
push
mov
andb
stc
das
mov
lock
or
repz
mov
nop
outsl
and
add
xchg
pop
cmc
mov
mov
add
imul
ret
lock
mov
and
and
push
or
jns
rcrb
xchg
jg
mov
sub
pop
rol
xor
test
jmp
call
cmp
jp
cs
scas
inc
dec
leave
clc
pop
dec
hlt
add
in
dec
or
in
rcrb
test
pusha
adc
inc
xor
es
add
sbb
shl
in
or
call
jp
push
mov
hlt
mov
rorl
push
imul
std
add
xchg
ret
or
sbb
sub
loope
add
in
loope
insb
aas
dec
decb
push
sahf
lods
jge
adc
ljmp
mov
mov
sar
xor
inc
sbb
repnz
pop
fwait
cli
inc
cld
adc
push
sbbl
fsubr
mov
arpl
push
add
or
jg
jnp
and
movsb
mov
mov
mov
loop
xchg
or
scas
sub
add
push
mov
sub
mov
pop
inc
mov
and
mov
inc
push
mov
xchg
pop
mov
orb
add
inc
or
jmp
sub
xor
push
jmp
cmp
popf
roll
stos
jns
cli
or
fistps
mov
mov
movsl
pusha
aaa
add
mov
sbb
inc
cmc
inc
sbb
mov
sbb
push
jge
adc
lahf
mov
pop
mov
mov
xchg
pop
adcb
push
mov
popf
fldl
mov
rcpps
cmpsb
inc
je
imul
out
sub
ja
add
mov
in
xor
bound
ret
jg
adc
loop
mov
sbb
pusha
popl
jmp
clc
add
std
or
mov
mov
and
adc
inc
rolb
push
inc
dec
sub
pop
dec
subb
scas
ret
push
mov
cmp
pop
mov
fidivl
jmp
ljmp
outsl
add
xor
fldl
andb
dec
insb
vcvtps2pd
and
add
push
dec
cld
fs
ret
mov
outsl
sbb
sub
pop
cli
pop
inc
call
repz
shl
fisubrl
push
or
aaa
lea
or
pop
dec
movsb
loope
mov
mov
mov
pusha
pop
je
add
call
outsb
dec
push
in
sub
cmp
fistpl
nop
fiadds
pop
out
add
pop
repz
in
aam
sti
ffree
hlt
jle
xchg
pop
pop
sbb
js
loope
mov
cmpsl
mov
xor
pop
pop
loopne
jle
add
push
xor
int
dec
out
test
jp
adc
sbb
insl
jecxz
ja
outsl
pop
mov
mov
push
daa
push
scas
push
pop
inc
mov
addr16
mul
push
aam
sbb
sahf
xor
pop
daa
shl
mull
pop
inc
cmpb
mov
inc
pop
push
pop
in
fwait
jmp
and
pop
xchg
xchg
xchg
rcrb
mov
cs
inc
dec
pop
xchg
imul
cvttps2pi
sub
mov
jae
pop
or
pop
lds
or
loope
xlat
inc
mov
iret
aas
orl
test
mov
add
mov
push
cmp
loope
jmp
dec
shll
outsb
mov
cmpsb
fistpll
xorl
inc
popa
or
mov
loop
add
or
xchg
push
int3
xchg
stc
rcr
lret
out
push
shl
xor
shlb
xacquire
mov
pop
cs
push
outsl
or
fsubl
pop
int
gs
test
lock
pop
xchg
sbb
pop
adc
xchg
mov
lret
sti
xchg
cmp
adc
jae
pop
sarl
mov
negl
std
in
ljmp
ja
xchg
inc
push
xchg
jmp
push
mov
mov
xchg
and
or
xor
mov
or
aad
sbb
pop
and
cmp
aad
mov
dec
or
mov
adc
daa
aas
push
shrb
test
xor
jge
jmp
sub
inc
shr
js
adc
fiaddl
pop
push
movsb
mov
push
dec
pop
sub
dec
and
lds
icebp
push
jp
orl
mov
out
mov
mov
es
addr16
not
subb
mov
push
int3
pop
cmp
add
insb
dec
jnp
nop
dec
dec
movsb
push
or
push
mov
lcall
push
nop
or
cwtl
mov
push
mov
je
push
pop
add
rolb
jns
lock
out
dec
imul
xchg
movsb
cmp
xor
add
cmp
pop
xchg
mulb
shlb
leave
outsb
xor
pop
shll
repz
mov
frstor
imul
sbb
data16
jmp
out
mov
and
mov
ljmp
repz
dec
stos
inc
jecxz
addr16
loop
cli
or
push
rclb
cmp
sub
or
jl
and
jmp
adc
sti
es
add
dec
pop
popa
dec
mov
cli
pop
mov
and
bound
push
push
and
out
cmpsl
pop
xlat
leave
imul
pop
mov
or
es
scas
mov
mov
adc
push
insb
cmp
inc
add
and
adc
push
push
stos
shr
pop
out
cld
leave
rorb
jb
and
xadd
leave
sbb
imul
ljmp
mov
int
bound
dec
lock
in
aad
pop
fnsave
mov
js
xchg
pop
int3
xchg
push
js
idivb
push
les
push
mov
cltd
shrb
or
mov
inc
jmp
ret
cmc
test
cmp
jne
pop
enter
out
jmp
inc
xor
and
int
inc
jnp
pop
repz
push
xor
adc
push
push
inc
mov
pop
mov
aas
adc
pop
dec
mov
lret
loop
add
pop
pop
cld
in
jmp
xor
xor
push
mov
or
jp
repz
ret
cmp
and
add
cmc
cmp
popaw
imul
fbld
dec
cs
add
push
push
cmp
or
std
xor
lods
roll
pop
jae
leave
fisttpll
push
xchg
add
xor
sub
imul
call
je
push
xchg
shll
sti
pop
clc
inc
sub
and
sbb
loope
je
pusha
mov
mov
adc
xor
test
xor
add
xchg
push
stos
insb
mov
les
jb
aas
jge
enter
mull
xor
jnp
lret
dec
call
sub
hlt
push
jge
sbb
pop
push
out
inc
xchg
mov
cli
xchg
fstps
out
jnp
push
adc
sub
in
inc
or
jmp
rclb
dec
xchg
mov
dec
into
mov
sub
mov
dec
mov
pop
shr
fistl
pusha
push
cld
cli
int
cli
testb
push
pushf
mov
and
idivb
jp
aaa
movsl
xor
icebp
or
ljmp
repnz
push
inc
xchg
adc
out
out
jne
jmp
xlat
sbb
stc
pop
in
ffreep
mov
fmull
in
dec
or
fidivs
push
adc
cmp
sbb
lret
nop
sbb
cmpsb
pop
dec
mov
inc
push
loop
repz
fsubs
add
push
push
mov
hlt
sub
xor
test
movsl
and
or
aad
push
jbe
jle
daa
outsb
shll
cmpsb
movsb
xchg
pop
stos
dec
outsb
outsb
loop
mov
jg
pop
mov
push
call
push
add
outsb
jne
sbb
jle
pop
sub
pusha
mov
dec
negl
fstl
push
lods
out
or
push
sub
aaa
push
das
into
add
shlb
pop
add
cmp
sub
pop
pushw
lret
test
cmpsb
mov
inc
js
push
loop
cld
aaa
jmp
mov
sub
cld
addb
icebp
and
jecxz
dec
lods
push
adc
scas
xor
add
loopne
adc
negl
je
std
dec
test
popa
call
push
push
rorb
jmp
jbe
rorl
mov
sbb
mov
sub
inc
pop
clc
fistpl
outsb
add
xchg
inc
and
jp
and
mov
adc
mov
mov
mov
mov
fistl
stos
add
add
xor
add
lret
repnz
rcrl
push
jae
not
mov
negl
sbb
cmp
pop
xor
ja
inc
or
pop
and
iret
imul
or
test
sub
sub
sbb
adc
add
cmp
into
inc
test
inc
or
rcll
push
fimuls
mov
shrl
add
subl
lods
and
mov
ret
add
movsbl
jmp
jo
out
inc
mov
add
icebp
mov
mov
in
outsb
sub
mov
adcb
iret
test
dec
rcrb
js
cmp
or
pop
add
sub
lds
ds
out
pushf
popf
test
mov
addr16
lds
xchg
xchg
je
inc
movsb
es
mov
push
sbb
jg
mov
negb
sub
sbb
push
int3
pop
mov
sti
and
adcb
jns
cmp
dec
subb
and
and
imul
outsb
dec
js
or
in
mov
pop
xor
push
or
mov
push
xor
js
mov
mov
cmp
sarl
dec
je
dec
call
xchg
inc
ljmp
test
adc
mulb
xchg
push
ss
pop
mov
xchg
adc
sarl
jbe
add
push
bswap
cwtl
xchg
mov
mov
and
in
imul
out
stos
daa
mov
sti
popa
test
pop
add
ret
shll
cmp
push
pop
mov
mov
push
orb
pop
mov
dec
pop
sub
loop
sub
mov
shl
xchg
not
repnz
inc
or
or
mov
insb
sarl
add
xchg
cld
jne
popa
inc
adc
lretw
dec
ljmp
push
and
jo
and
mov
sbb
lret
cltd
shl
jne
mov
push
cwtl
mov
mov
and
je
aas
mov
add
push
jmp
shll
fldl
mov
adc
fdivrp
rcrb
sbb
cmc
or
xor
ret
jo
jne
in
pop
push
ret
dec
rolb
mov
push
pop
lahf
ficomps
jl
pop
mov
jo
mov
or
sub
push
xor
arpl
add
adc
shlb
push
adc
fwait
sbb
cmp
or
push
add
push
adc
xor
push
sub
int3
das
push
jno
mov
aaa
xchg
nop
mov
aam
jge
inc
sub
pop
in
mov
xchg
adc
xchg
sub
aas
cmc
dec
inc
mulb
dec
ficoms
mov
sub
dec
sahf
sbb
divl
and
jmp
fadds
mov
and
shrb
sti
test
popa
add
shll
fs
pop
mov
mov
in
dec
shlb
add
cmp
push
dec
push
cmpsl
and
xor
or
popw
cld
push
mov
adc
jp
leave
cli
mov
div
push
outsl
or
or
xchg
scas
into
outsl
loope
repz
and
out
add
out
testb
cmpsb
xchg
sbb
jmp
leave
push
mov
dec
push
and
or
inc
cmc
xchg
jne
fdivrp
cli
addb
pop
xor
stos
mov
hlt
cmc
mov
cmpsl
jge
mov
jbe
jp
adc
pop
inc
cmp
loope
sub
cli
movsb
dec
pop
mov
pusha
inc
loopne
aad
mov
subb
fsubr
sub
add
cmp
std
adcl
daa
mov
cld
dec
and
mov
lds
andb
roll
adc
cmp
pop
pop
add
or
sub
jp
jecxz
adc
push
xchg
pop
push
jo
addb
pop
or
sub
mul
cwtl
add
push
addb
aad
insb
cs
jle
andl
test
shlb
and
dec
mov
jp
pusha
out
inc
cmp
repnz
cli
jne
pop
add
inc
cmpsl
push
or
pop
pop
add
and
inc
cmp
mov
jmp
cs
and
clc
jnp
pop
mov
dec
mov
aas
xchg
cmp
xor
loop
sub
jmp
lret
mov
fsubs
pop
inc
mov
test
pop
mov
leave
mov
pop
aam
sub
nop
mov
dec
mov
mov
movq
stos
dec
stos
rol
or
inc
xchg
xchg
icebp
fldt
inc
das
imul
popa
mov
in
sahf
pop
jmp
shrl
xchg
stos
iret
pop
push
push
push
loopne
fadds
leave
add
xor
dec
jp
xchg
out
xorl
nop
adc
fsubrs
sti
and
push
sub
mov
mov
dec
xor
mov
push
push
ss
out
and
pop
mov
mov
push
and
and
cmpl
push
fisttpll
add
in
jmp
pop
xchg
pusha
repz
sub
mov
sub
jmp
xchg
jmp
jns
mov
rorl
push
mov
cmp
leave
xor
dec
push
pop
loop
imul
mov
push
mov
mov
xlat
andb
pop
mov
ds
or
shrb
out
movsl
mov
sub
cltd
mov
ja
xchg
fcompl
push
fists
pop
inc
push
pop
int
pop
pop
push
movsl
jne
push
popf
push
aas
or
repnz
xor
push
loop
popf
mov
and
xor
adc
push
fmull
subb
mov
mov
fists
or
lahf
das
sub
and
xor
mov
inc
push
aad
fimuls
inc
cltd
imul
testb
aam
push
xor
pop
negl
jbe
add
outsl
pop
sarl
jmp
push
mov
cmp
cli
push
mov
and
pop
fistl
jge
pop
addb
fwait
adc
imul
push
pop
xor
das
ja
sub
movsb
stc
or
aam
mov
test
loop
shlb
shlb
jle
push
mov
bound
repz
imul
sub
push
push
loopne
popa
adc
mov
xchg
inc
cmp
mov
pop
or
pop
lret
adc
mov
std
pop
adc
imul
shrb
dec
dec
jbe
lcall
or
outsl
cmpsb
dec
mov
cmp
test
in
cmp
and
fs
das
xchg
out
and
pop
jo
ljmp
and
test
xchg
adc
sti
addb
popa
xchg
dec
pop
adc
inc
out
add
out
popl
or
pop
add
xorb
loopne
lock
not
dec
sub
cltd
jmp
hlt
lea
aad
out
loope
loope
sub
mov
cli
mov
mov
push
mov
mov
add
dec
shl
pop
fs
loope
imul
xor
movsb
and
push
add
add
or
stos
sbb
shl
xor
inc
loope
jle
mov
cs
in
addr16
sbb
call
push
fisubrs
sti
test
pop
dec
and
jno
pop
jmp
or
jns
mov
or
ret
mov
ret
pop
dec
adcl
andb
mov
and
gs
mov
mov
xorb
pop
sarl
fstpt
dec
gs
sub
lret
cwtl
loopne
cltd
pop
imul
jbe
int
das
les
stos
leave
aad
in
pop
loopne
mov
push
add
mov
shl
int3
cmp
sub
sub
dec
sub
dec
xchg
push
clc
jl
push
jmp
scas
dec
movsl
mov
cmpsb
push
xchg
or
imul
sub
adc
ljmp
arpl
int3
dec
enter
or
sbb
rorl
pop
xchg
cmp
out
add
loop
xor
addl
xor
pop
pop
in
push
and
gs
loopne
movsl
lcall
fwait
std
incb
and
dec
mov
push
pop
cmc
sar
rorb
pop
pop
mov
adc
xor
dec
adc
push
out
push
sbbb
jno
jmp
cltd
add
shll
xchg
add
jns
add
popa
jbe
xor
filds
roll
pop
inc
and
mov
rcll
add
and
adc
pop
or
sbb
test
rol
mov
sub
jmp
mov
mov
mov
imul
push
les
stc
adc
mov
iret
lock
add
adc
lret
xor
in
idivl
add
jae
bound
xchg
scas
push
mov
inc
cld
or
sub
pop
push
push
bound
and
enter
inc
mov
test
add
daa
shlb
xchg
dec
jb
sbb
jo
mov
fdivrs
mov
add
into
outsb
inc
test
xchg
add
sbbl
sub
mov
mov
jmp
in
pop
jns
daa
lods
push
xchg
cmp
lret
rorb
mov
jl
ds
pop
jb
cmpsb
mov
shr
ret
bound
cmc
shlb
aam
xchg
test
and
dec
and
pop
repz
fildll
test
mov
aad
rorb
push
mov
dec
shl
inc
jbe
rorb
inc
add
push
push
mov
or
scas
lahf
rcll
mov
cmp
pop
stos
and
test
idivl
and
push
push
cmc
and
xor
jmp
call
adc
dec
jbe
pushl
push
cli
and
jge
adcl
sahf
out
adcb
lret
aad
pop
xchg
or
push
pop
mov
xor
pop
cmpb
dec
popf
call
dec
sub
nop
push
bound
rcr
cmp
ss
push
add
repz
jle
xor
neg
ret
push
out
and
inc
pop
push
mov
xchg
add
cmpsl
sub
pop
or
mov
jg
test
sub
pop
or
cmp
daa
arpl
inc
mov
jmp
sub
pop
inc
sbb
in
push
or
mov
lock
mov
sbb
add
add
mov
sbbl
nop
xor
orl
ret
neg
dec
mov
dec
cld
scas
pop
aaa
dec
adc
sub
sub
pusha
in
es
punpckldq
cmpsb
aam
or
das
adcl
mov
dec
push
mov
sub
iret
inc
add
iret
nop
out
notl
fcom
call
rcr
inc
in
cmpsb
and
mov
jmp
add
inc
or
cmc
jle
jg
call
addb
cmp
sub
rcll
aam
adc
in
or
loopne
push
xchg
inc
push
adc
repz
pop
test
pop
sub
mov
xchg
das
mov
or
add
sbb
inc
rcrl
or
xor
jmp
addr16
and
rol
bound
dec
incb
jle
imul
pop
add
xor
mov
aad
or
push
std
jle
fcomps
ffree
jmp
loopne
jp
cli
pop
mov
sbb
cltd
cmc
scas
flds
adc
xchg
or
sub
lods
ljmp
pop
adc
jle
addb
sub
mov
xchg
sub
sub
and
adc
and
jnp
pushf
jp
cli
pop
outsb
dec
mov
jbe
cli
das
add
adc
ret
test
idivl
xchg
test
imul
push
or
pop
add
vmread
fstpl
adc
cld
ljmp
push
icebp
inc
outsb
mov
das
pop
enter
xchg
fstps
jp
or
ja
sub
mov
stos
push
sbb
cli
lods
push
pop
adc
fsincos
and
or
sbb
repz
in
mov
mov
dec
pop
xlat
pop
xchg
leave
insb
adc
aad
adcl
mov
dec
insl
push
lods
data16
dec
pop
ja
testl
mov
xchg
adc
xchg
sub
xor
add
mov
xorl
addl
jb
ss
in
orb
lahf
dec
arpl
sbb
dec
cmp
jmp
scas
ja
aad
inc
xchg
lods
sub
xor
aaa
fidivs
cmp
cmp
push
push
xchg
xor
inc
pop
cs
cmc
int3
cli
xor
inc
shlb
fimull
mov
xchg
ret
push
jnp
aas
sub
ds
xlat
in
mov
xchg
jle
ficoms
mov
fnstsw
xchg
addl
scas
lcall
mov
jmp
or
and
mov
jl
lret
pop
in
xlat
out
inc
and
mov
inc
dec
mov
in
ror
or
outsl
mov
cs
cmp
les
xor
adc
cmp
push
je
jae
mov
insl
ss
cmpsl
xor
sub
arpl
or
es
pop
orb
push
loope
inc
daa
pop
inc
lret
dec
ret
rol
mov
and
movsl
add
push
push
aam
sub
push
pop
sbb
cmp
pop
int3
dec
push
jmp
in
push
inc
or
into
push
fs
jo
xchg
negl
add
stos
addr16
fs
pop
jmp
fiadds
repnz
add
test
dec
pop
jge
or
pop
pop
jb
mov
dec
mov
mov
add
mov
shl
xchg
repz
test
push
fistps
fistl
mov
iret
js
adc
add
jmp
push
popa
xchg
mov
mov
jnp
in
add
push
push
test
add
jecxz
fimuls
das
punpckldq
jmp
push
les
popf
lock
jmp
into
pusha
ja
xchg
outsb
or
sub
repz
mov
outsl
add
sub
outsb
lds
sub
sub
pop
push
inc
aam
lock
inc
loopne
jl
dec
repnz
mov
test
ss
and
orl
sub
and
icebp
cmpsl
out
cmp
push
mov
stos
and
lret
pop
jo
je
lock
jno
jnp
enter
das
inc
or
jge
fs
lret
leave
clc
fldcw
push
fsubrl
sarb
xchg
xchg
enter
test
mov
push
test
lahf
inc
mov
adc
nop
push
sub
push
popa
xchg
shl
or
jmp
xor
mov
imul
sbb
enter
sub
inc
mov
xchg
and
xchg
lock
dec
pop
mov
xor
mov
mov
stc
into
cmpsb
inc
adc
popf
cli
in
imul
mov
push
jbe
mov
dec
sbb
shlb
xchg
and
aas
addr16
enter
fs
stc
pop
mov
xchg
mov
sub
push
jns
jmp
mov
pop
and
dec
cmp
inc
sarl
dec
mov
lds
jne
push
or
pusha
ret
push
shlb
icebp
sub
es
loopne
ljmp
shr
js
dec
mov
jmp
pop
cmp
out
add
in
and
shr
subb
orl
pop
addl
sti
mov
fdivrp
jg
ret
neg
loopne
call
jns
push
push
or
dec
pusha
inc
mov
jmp
push
add
push
mov
pop
push
mov
aas
mull
xor
subb
jns
mov
lods
pop
bound
push
mov
test
fs
add
or
fmull
decb
push
cmp
push
lea
pop
stos
scas
fisubl
sub
mov
stos
add
xor
and
daa
pop
dec
enter
adcb
iret
cmpsb
sahf
in
mov
out
push
xchg
jg
xlat
shr
jo
fisubs
pop
jns
cmc
das
mov
xchg
jp
roll
jmp
mov
jmp
mov
sahf
jle
push
and
mov
lds
mov
insb
sti
adc
cmp
sbb
ja
cmpsl
jl
add
sub
push
or
or
ss
mov
xchg
leave
mov
push
mov
mov
loop
push
mulb
add
rolb
cli
xchg
dec
cld
call
dec
jmp
push
enter
div
repz
lret
lock
jp
mov
mulb
cmp
push
out
xchg
outsb
addb
cld
add
leave
pop
xor
mov
inc
xor
inc
jb
sahf
leave
mov
fld
push
push
xor
push
add
lret
loope
jbe
lds
test
push
add
xchg
or
pop
mov
bound
mov
bound
lock
mov
dec
and
stos
cmp
addl
mov
jmp
imul
jg
xor
push
idiv
fwait
mov
fsubs
sbb
add
nop
adc
pop
fldl
or
out
push
sub
xchg
nop
sub
pushl
mov
insb
movsl
push
frstor
loope
stc
inc
xchg
mov
jge
and
xlat
mov
jmp
in
outsb
cmp
push
xchg
adc
jo
or
and
cli
adc
fdivrs
roll
add
call
cmp
sbb
mov
mov
cmp
je
pop
adc
in
je
jg
dec
lods
pop
sub
in
or
dec
push
in
mov
jmp
cmp
inc
dec
xorl
sbb
adc
and
mov
lcall
bound
js
jb
in
xor
aad
ret
incl
repnz
addr16
neg
push
nop
lcall
cmp
jmp
test
xchg
fbstp
pushf
negl
aam
fs
mov
jo
and
and
dec
jle
out
fldcw
sub
cmp
fcompl
insl
sti
xlat
ret
pop
mov
jg
idivb
dec
inc
idivb
cmc
pop
fwait
addl
icebp
cmp
pushf
sqrtps
sbb
or
fstpl
rcrb
inc
dec
fsts
je
test
dec
sti
fs
mov
add
inc
js
pop
out
lods
test
das
ffreep
add
mov
xchg
out
jmp
mov
shrl
xor
pop
repnz
add
sbb
jmp
imul
mov
dec
test
sbb
inc
push
inc
or
adc
out
xor
push
mov
cmp
and
call
mov
mov
xchg
daa
js
jbe
pop
sbb
mov
pushf
add
mull
rolb
std
sbb
cmp
int
cltd
loop
mov
es
jg
jmp
jge
sub
pop
sbb
in
pop
mov
xchg
xchg
sub
cmp
and
jl
inc
stos
testb
jle
xlat
or
lods
push
mov
gs
jecxz
pop
xchg
ss
push
inc
and
mov
fadd
push
addl
push
out
test
out
aas
clc
dec
sarl
mov
in
and
iret
lcall
add
int
jmp
das
dec
push
mov
cmp
inc
adc
and
or
jle
and
aas
and
xor
push
pop
pop
jmp
popf
jge
add
test
pop
pop
dec
sub
jnp
adc
or
jmp
pop
fcomp
dec
inc
loop
fs
push
jb
push
adcl
scas
mov
jg
in
dec
sbb
sbb
cmp
fldt
mov
xlat
call
and
xchg
lds
push
lcall
adc
sbb
xchg
jmp
cmp
ja
mov
pop
jmp
inc
call
jmp
scas
jo
pop
fs
cld
mulb
sar
or
les
in
call
not
data16
or
bnd
xor
xor
pop
pushw
lock
stos
mov
sbb
xchg
jmp
pop
xor
daa
ret
push
cmp
mov
adc
adc
add
cli
je
scas
loope
fisubrl
push
jo
xorl
xor
add
jp
rol
or
in
jb
jo
xchg
jbe
pop
pop
mov
jmp
xor
add
mov
add
ja
push
jmp
pop
into
movsb
mov
mov
jae
fs
adc
rorb
cmp
mov
adc
daa
inc
jmp
dec
dec
adc
push
push
pop
adc
out
mov
fwait
inc
movsl
and
hlt
add
jle
stc
push
cmp
ror
add
mov
ljmp
out
loopne
xchg
rolb
pop
cmp
lds
xor
mov
push
adc
cs
push
pop
scas
cwtl
pop
cli
pop
pop
jmp
jecxz
push
or
pop
mov
mov
xchg
gs
out
addl
sub
leave
pop
pop
mov
push
ja
sub
shlb
xchg
ret
dec
test
dec
ret
cmc
jo
mov
outsl
jl
outsb
dec
out
icebp
or
pop
dec
jmp
cmpsb
sbb
jge
jmp
repz
negb
mov
and
mov
push
inc
es
xor
add
test
fdivs
dec
and
sub
jne
mov
xlat
push
or
shr
inc
adc
and
sub
or
testb
pop
aad
in
and
mov
xchg
mov
add
fsubrs
pop
xor
cmp
test
and
stos
lods
in
dec
notl
in
mov
dec
mov
mov
xlat
inc
dec
jmp
mov
jo
inc
sbb
negb
imul
pop
push
and
mov
or
xor
outsl
jmp
popf
gs
mov
lods
mov
subb
mov
inc
sub
sbb
outsl
adc
icebp
mov
mov
imul
add
imul
pop
call
push
xor
dec
mov
sbb
ja
cltd
dec
ds
push
cmp
icebp
inc
mov
fwait
cwtl
jne
mov
icebp
dec
testb
xchg
dec
mov
mov
pop
or
xor
jmp
adc
shlb
xor
sub
add
or
adc
xor
cmp
pop
xchg
inc
inc
cmc
inc
pop
mov
test
orb
ja,pn
jns
pop
cmp
shll
jl
dec
adc
sarl
popf
pop
mov
pop
cli
mov
cmp
push
push
popl
sbb
loop
pop
shr
xchg
les
subb
jmp
stc
push
and
dec
arpl
mov
or
subl
aas
cltd
ljmp
popf
mov
in
test
int
rolb
xchg
mov
nop
gs
insl
sbb
fisttpll
scas
mov
jmp
scas
fs
iret
dec
jg
ss
push
add
pop
mov
pop
add
sub
and
jmp
neg
jg
testl
rcrb
jae
mov
push
flds
sarl
push
shr
popf
push
jae
std
adc
or
popa
xchg
add
or
fsubrp
xor
mov
push
and
jne
lods
adcl
xor
cmc
add
inc
push
mov
nop
adc
imul
inc
or
mov
adcb
cs
push
outsb
lret
add
xor
stc
rcrl
ds
dec
popf
fistpl
std
or
jo
push
sbb
arpl
sub
shufps
lahf
dec
rorb
dec
mov
and
add
jb
clc
out
xor
setno
movsl
jnp
clc
mov
scas
cmpsb
xchg
xor
adc
cmp
jmp
out
rcll
pop
cld
push
clc
outsl
pop
mov
leave
shll
pop
out
push
lods
mov
add
inc
std
in
pop
jmp
in
subl
jb
push
jns
mov
xorb
test
xor
movsl
sbb
addb
test
std
js
dec
pop
xor
incb
repnz
sub
adc
ds
subb
dec
xchg
ret
enter
pop
push
push
jmp
mov
cmp
or
pop
mov
fwait
clc
mov
jb
xor
or
mov
pop
repnz
add
sbb
xchg
sbb
and
and
lret
pop
jnp
jp
imul
mov
push
pop
js
fbld
xlat
or
dec
add
fldl2t
push
mov
ss
dec
jmp
dec
les
ljmp
or
in
cmp
xchg
decb
xchg
mov
add
out
aad
cwtl
pop
sub
pusha
mov
out
mov
mov
call
pop
lods
stc
jp
jmp
test
iret
mov
inc
mov
add
sub
in
rcll
pusha
mov
push
push
pop
pop
xor
xchg
loop
shl
jo
cmp
jmp
jl
mov
cmc
xor
out
loopne
xchg
push
daa
jmp
out
mov
jmp
test
frstor
or
adc
or
add
or
sub
mov
and
or
adc
sbb
jp
inc
add
xor
jp
int
push
add
lock
push
xor
adc
sub
or
jp
mov
and
mov
xor
stc
loop
jmp
pop
pop
pop
subb
movsb
inc
cmc
xchg
enter
sbb
call
push
gs
dec
pop
sbb
test
ja
aas
add
cmp
rolb
fs
sub
push
ds
push
sbb
jg
aas
dec
pusha
push
mov
sub
inc
in
dec
xor
cld
sub
add
pinsrw
outsb
insl
addr16
lret
xor
add
test
scas
dec
mov
decb
je
add
cmp
mov
and
add
jge
leave
mull
push
rorb
mov
or
or
jl
into
cmp
sarb
testl
das
xor
push
int3
bound
and
sub
sbbb
test
and
jo
dec
jo
xchg
pop
and
jmp
sahf
cmpsl
decb
add
sub
sub
pop
rcr
add
shr
mov
push
mov
daa
xor
adc
loopne
xchg
test
int
imul
or
call
and
mov
sahf
mov
sub
movsb
fisubrs
or
icebp
pop
shr
rolb
or
dec
pop
lock
leave
cmp
stc
push
ljmp
mov
es
stos
sbb
inc
popa
xchg
xchg
fmuls
scas
pop
icebp
push
xor
decb
cmpsb
adc
xor
cmp
add
lock
hlt
add
add
ss
js
ret
jp
bound
xchg
ds
mov
sub
std
test
pop
cmp
push
cmp
sub
dec
ss
mov
adc
mov
dec
rcrb
imul
lahf
xor
cwtl
mov
shl
cmp
push
imul
cmp
loop
and
push
mov
jmp
insl
lock
dec
and
lds
mov
xchg
ret
fwait
pop
push
push
jns
sbb
shrb
cmp
mov
leave
inc
lcall
in
sub
mov
add
in
loope
test
leave
xchg
push
test
mov
inc
loopne
jns
xor
sbb
mov
mov
pop
cmp
cld
sub
xchg
into
mov
lret
jo
gs
xchg
fcompl
xchg
dec
cmp
sub
movsl
xor
scas
in
imul
enter
pop
enter
lock
xor
pop
mov
sub
aam
mov
dec
jl
pushf
arpl
or
cld
adc
add
ds
inc
aad
mov
push
jmp
les
push
mov
add
popa
lea
cmpb
aad
push
pop
sti
mov
dec
push
dec
jmp
push
mov
and
and
rolb
push
pop
loop
je
push
xor
sub
cs
pop
arpl
push
xchg
add
mov
add
mov
test
pop
xor
push
add
cli
sub
xchg
shlb
lahf
roll
flds
bound
fcoms
pop
and
jmp
push
cmp
xchg
jnp
lods
dec
jecxz
cli
jne
dec
jecxz
clc
mov
or
cmpsb
push
xchg
test
adc
rcrb
mov
or
xorl
xchg
out
les
pusha
out
lar
sub
sbb
jnp
repz
ret
in
mov
lods
loopne
and
push
sti
inc
ljmp
enter
bound
sti
cmp
das
lods
cwtl
cmc
jmp
mov
and
notb
bound
cmp
in
sti
hlt
cmp
add
ret
leave
cmp
inc
scas
pop
fidivl
cmp
shl
icebp
popf
fistpll
scas
aaa
add
out
mov
sarl
jg
mov
push
and
push
mov
outsl
lds
rcrl
fidivrs
inc
sbb
shl
cmpsl
mov
sti
mov
pop
and
lret
jno
bound
pop
push
divl
cmc
jmp
push
les
lret
cmp
add
call
rolb
daa
rcrl
rcll
loop
adc
sbb
mov
aam
adc
insl
and
fsubs
shl
fisttps
fsubrs
adc
shl
cmp
inc
stos
in
and
dec
sub
or
mov
dec
lds
es
push
push
jp
enter
loop
jecxz
in
mov
pop
stos
pop
mov
inc
push
sti
fcmovne
jg
mov
insl
or
or
mov
lea
or
call
ficoms
xor
loopne
out
dec
fmuls
mov
stos
icebp
stos
or
fstl
das
push
loop
call
dec
xor
sbb
mov
jmp
ret
gs
loope
cmp
lods
push
or
leave
cld
arpl
sbbl
ror
add
inc
mov
out
mov
inc
scas
add
or
jmp
add
mov
sbb
sub
xor
push
or
mov
push
jecxz
scas
adc
notb
inc
pop
dec
in
sub
stos
mov
stos
test
dec
xor
push
cmp
pop
push
jmp
cmc
or
add
mov
add
mov
sbb
mov
and
mov
lahf
gs
push
push
add
and
mov
dec
mov
outsb
mov
es
push
iret
cmpsb
nop
flds
xorl
dec
and
lret
divb
pop
mov
adc
sub
and
and
xchg
pop
out
add
outsl
jo
jne
pop
clc
jmp
outsl
sub
jmp
xchg
push
lock
inc
sub
or
pop
lret
push
dec
js
in
push
dec
push
xorb
popf
sub
jmp
jb
lock
rcll
ret
pusha
push
adc
test
daa
cli
cwtl
sub
mov
mov
pop
nop
dec
xor
imul
in
xchg
bound
shr
push
aam
or
or
or
push
or
jge
in
mov
pop
dec
jecxz
pop
into
pop
inc
cmp
push
adc
xor
pop
and
mulb
call
cwtl
aaa
popa
inc
push
sub
pushf
mov
and
cmp
addl
add
sub
add
lds
rorl
jmp
dec
repnz
adc
out
cmpb
xchg
pop
xchg
imul
jmp
xor
dec
or
in
movsb
pop
pop
mov
lods
cmp
enter
stc
mov
mov
shll
pop
movsb
inc
dec
mov
jnp
por
mov
repnz
pop
and
pop
dec
andb
add
std
test
dec
stos
lret
div
sbb
push
outsb
fcoms
pop
aad
addr16
pop
nop
inc
jmp
ret
pop
test
mov
adc
push
xor
pop
pop
pop
mov
cwtl
add
test
mov
adc
sub
pop
jmp
in
jg
jb
xchg
cmp
sti
mov
xor
popa
or
push
gs
sbb
sub
add
xor
or
adcb
in
cld
xchg
enter
repz
and
icebp
nop
shrl
aas
mov
xchg
mov
sar
lahf
add
push
push
dec
insb
mov
iret
push
sub
pop
mov
jo
outsl
jmp
cmpsl
lcall
push
inc
cs
pop
pushf
or
aad
rclb
push
push
mov
fisttpll
or
and
out
jb
sub
test
xchg
mov
adc
mov
sbb
dec
jle
shll
dec
sub
cmp
lret
push
jmp
xlat
xor
and
pop
pushf
addr16
push
sbb
pop
mov
push
mov
dec
or
jp
cmp
jg
insb
add
lahf
pop
mov
adc
and
incb
test
jp
das
arpl
shrl
xchg
and
mov
btrl
or
mov
jmp
and
sub
push
cmc
fisttpl
out
lahf
jp
pop
aas
sub
jmp
es
in
ljmp
jle
hlt
sbb
pop
mov
adc
or
test
rcrl
add
bound
test
addr16
pop
testb
js
addr16
pop
ja
loopne
and
mov
shr
or
pop
lods
or
movsl
repnz
shll
testl
xor
push
adc
mov
add
int3
mov
xlat
out
leave
bnd
in
jne
mov
push
adc
pop
dec
int
and
test
inc
sbb
icebp
xchg
jp
mov
or
es
shll
or
psllw
jmp
pop
xchg
jp
cmpsl
cmc
repz
in
add
sub
xchg
push
mov
in
dec
push
mov
repz
imul
jnp
add
mov
imul
loop
mov
loopne
or
xor
addr16
jo
dec
je
add
int3
sbb
add
jbe
pop
sub
push
xor
add
push
mov
sub
jmp
add
arpl
icebp
fdivl
les
js
sahf
shlb
xchg
aad
nop
mov
cmp
outsl
jns
aas
bound
ljmp
sti
inc
and
or
dec
in
pop
mov
jmp
mov
push
pop
shr
shrl
sbb
push
popa
cmp
push
stos
cmp
sbb
rorl
ret
add
lds
shlb
pop
jle
pop
push
inc
sbb
sbb
mov
add
and
mov
push
dec
jge
cli
and
mov
dec
rorb
sbb
mov
push
jo
xchg
lret
or
pop
mov
push
lock
orb
sbb
jnp
add
nop
pusha
jmp
notb
mov
out
push
sub
into
jmp
fdivrl
into
in
js
bound
lcall
jecxz
inc
adc
les
xchg
cli
lds
call
xor
mov
stc
push
int3
hlt
sub
minps
jo
push
out
shlb
jp
gs
icebp
sub
cmp
shll
int3
jbe
pop
xchg
sbbb
xor
aas
add
pop
std
push
dec
mov
jecxz
test
fidivs
push
xor
jne
dec
lret
dec
imulb
jmp
and
cmpsl
lret
jecxz
fdiv
mov
mov
int3
xor
lret
out
ja
clc
and
fmul
mov
mov
xor
mov
cwtl
dec
jns
cltd
sti
repz
xor
mov
push
sub
pusha
add
adc
insb
adc
sbb
cmp
cld
imul
je
push
and
out
cmp
and
mov
decb
mov
daa
sub
xor
or
mov
add
mov
mov
int
stos
fildl
push
push
imul
inc
push
ds
mov
sti
orl
sub
mov
add
lcall
inc
mov
out
add
repnz
lods
aam
arpl
lahf
pop
sti
cmp
in
and
das
or
iret
loop
sub
fstl
std
daa
test
fsubrs
data16
sti
push
add
add
push
xor
push
rorl
add
in
xor
jbe
sub
add
xor
inc
add
jae
aad
bound
mov
loope
rcrb
xchg
push
xchg
addr16
xor
bound
pop
fwait
add
iret
cmpsl
xchg
cmp
ret
std
mov
mov
and
mov
lds
in
idivl
mov
sub
or
jo
xchg
out
pop
and
lahf
faddp
leave
dec
rcrb
add
or
xchg
jmp
ret
push
cmc
cld
mov
cli
pop
mov
mov
mov
xchg
outsl
and
mov
mov
push
insl
daa
jl
dec
lea
das
pusha
mov
inc
hlt
or
shl
divb
adc
mov
and
jp
rcrb
imulb
sub
dec
loopne
pop
jno
mov
pop
adc
pop
or
roll
pop
lea
adc
dec
out
or
loop
xor
popa
ret
dec
popf
ret
push
imul
sbb
add
sbb
push
adc
cmp
or
sbb
jmp
lcall
enter
jl
inc
push
iret
loope
cmp
sbb
stos
sub
mov
cmp
jecxz
daa
push
xchg
fnsave
jmp
cltd
or
mov
dec
or
int
cmpsl
mov
es
add
insl
jge
add
push
call
pop
inc
mov
mov
add
dec
adc
fistpll
repnz
lahf
dec
fdivrl
cli
imul
fcoms
aaa
xor
lahf
fwait
push
std
mov
mov
mov
dec
add
push
bound
xchg
inc
or
push
cwtl
xlat
ja
pop
push
mov
add
jmp
sbb
push
jmp
fsts
lea
mov
and
mov
add
mov
int
out
add
cltd
pop
jae
push
mov
shl
movb
movsb
push
pop
loopne
or
ljmp
popa
mov
out
or
and
cmpsb
inc
add
rep
or
sub
lods
sub
push
icebp
decb
add
mov
and
push
mov
cmpsl
popf
mov
in
cmp
sti
mov
mov
inc
jbe
js
inc
cld
cmpl
aas
jnp
lock
adcb
icebp
or
jbe
jb
mov
dec
xchg
sbb
adc
repnz
add
mov
sbb
mov
push
pop
adc
inc
hlt
fwait
add
test
cli
test
or
add
imul
xor
add
xchg
mov
das
mov
mov
bound
ja
dec
push
pop
push
out
xor
add
push
push
inc
mov
xchg
push
arpl
dec
or
rcl
pop
add
out
and
dec
ljmp
sbb
loop
ljmp
pop
jp
cwtl
lret
pop
jmp
xlat
xchg
rorl
pushl
mov
inc
test
inc
add
add
pop
pop
xchg
pop
dec
mov
xchg
popa
das
jp
push
dec
inc
sbb
iret
ja
cmp
mov
mov
xchg
aaa
jae
adc
lret
gs
xor
xor
das
adc
in
pushl
push
mov
sahf
mov
lret
fs
add
push
cld
stos
pop
mov
sbbl
fsubs
jle
pop
xchg
cld
and
jmp
inc
cld
adc
and
jne
add
pop
not
cli
jmp
adc
cmp
rcpps
xchg
xchg
add
loope
push
push
mov
jmp
and
jge
dec
sub
push
add
jns
cmp
push
mov
out
pop
pop
sub
add
dec
inc
sarl
mov
add
jns
mov
shlb
jmp
loopne
inc
xchg
xorb
icebp
mov
or
imul
loopne
pop
inc
pusha
dec
mov
testb
ret
in
addl
xchg
out
hlt
and
inc
sbb
add
xor
fucompp
xor
and
das
loope
add
int3
int3
inc
inc
xor
out
aad
mov
mov
ljmp
pop
stc
jg
or
pushf
jmp
cmp
pushf
pop
adc
jne
psubsw
fisubrs
mov
and
or
xchg
cmp
mov
xchg
add
jmp
ja
lds
shl
cmp
test
in
mov
push
dec
es
int
sbb
mov
movsl
in
roll
pop
xor
int3
sbb
and
mov
mov
sub
das
dec
and
cmp
dec
sbb
lock
pop
outsb
icebp
and
lock
pop
loope
das
jmp
and
xchg
push
xchg
popf
cwtl
je
fnstcw
jne
addr16
jmp
pushf
sahf
mov
stc
mov
sar
jecxz
dec
leave
xor
inc
imul
and
outsl
or
jb
js
orb
and
push
pop
adc
pop
aas
jecxz
push
imul
ja
mov
jne
pop
xor
or
cmp
leave
sbb
sub
cs
xor
mov
popf
sbb
push
shl
pop
mov
mov
std
stos
xor
or
inc
out
jo
rcrb
hlt
inc
lds
push
es
xchg
leave
sub
imul
outsb
dec
jae
and
add
inc
int3
xor
ret
jb
xor
sub
fstpl
fistl
jge
push
xchg
xor
jae
add
dec
adc
push
shrb
bound
sub
mov
imul
cwtl
iret
and
call
mov
in
int3
or
fsubrl
ljmp
add
xor
or
cld
cmp
arpl
lods
scas
push
test
movl
out
cli
rorl
hlt
mov
pop
mov
outsb
mov
lods
insb
mov
icebp
rclb
cwtl
or
fildl
loopne
jne
scas
ret
cmc
pop
test
ljmp
lret
adc
data16
bound
lcall
stos
mov
cmp
push
repnz
mov
push
mov
push
test
dec
iret
andb
ja
mov
sarl
push
push
mov
incb
push
mov
adc
mov
pushf
jno
jnp
or
cli
mov
mov
mov
sbb
xchg
cmp
or
pop
test
push
orb
cmp
fiadds
add
lret
adc
fcompl
fmul
stos
mov
push
mov
bound
popf
loope
jp
dec
movsb
push
cmp
adc
orb
inc
sub
in
xchg
outsl
lahf
ret
mov
jae
je
push
jmp
rorl
pusha
add
push
push
mov
sbb
sbb
ja
mov
in
loopne
nop
insb
and
mov
push
test
add
and
js
push
mov
sub
push
mov
push
shlb
leave
js
sub
adc
aas
push
add
sbb
mov
andl
push
pop
jb
push
cs
pop
xor
mov
daa
mov
std
sbb
pop
pop
call
je
dec
jge
dec
cld
rorl
notl
and
pushl
adc
shl
xor
lods
sub
pop
pop
in
pushaw
adcb
push
cwtl
push
pop
mov
roll
cmp
aam
clc
mov
bound
xchg
aas
loopne
leave
adc
fwait
pop
sub
ret
jmp
orb
idivl
xchg
jle
leave
add
pop
out
xor
cltd
mov
cwtl
or
adc
ds
mov
pop
jmp
push
xchg
xchg
dec
scas
pop
jnp
aaa
push
jge
adc
xchg
xor
cli
jp
sub
shl
inc
mov
icebp
call
xchg
add
fisubrl
shrb
or
inc
lods
adc
mov
std
push
les
inc
adc
jl
fwait
pop
xchg
jno
xor
outsb
loop
leave
adc
add
pusha
jmp
daa
sbb
pop
or
pop
jno
or
shll
xchg
or
lock
aaa
or
cli
ljmp
mov
clc
clc
dec
pop
fcom
aas
cltd
pusha
or
lcall
add
mov
mov
add
xor
pop
ror
loop
mov
in
lea
in
and
jle
subb
out
jg
pop
xchg
xchg
vpsubsb
sub
sub
pop
pop
mov
shlb
jmp
arpl
push
adc
iret
stc
ficoms
ljmp
push
sub
jmp
mov
cmp
outsl
repnz
shlb
sub
popa
jns
xor
fists
out
jecxz
out
mov
pop
movhlps
add
push
test
in
cmp
stos
pop
dec
sbb
pop
sub
jecxz
sub
sub
stc
xchg
push
mov
sbb
nop
sub
or
jmp
adc
pop
xchg
mov
or
jge
xor
sahf
and
xor
push
mov
lsl
test
jbe
sbb
sbb
loopne
mov
push
or
cmpb
cmpsb
mov
sub
and
jne
loopne
push
mov
cwtl
mov
pop
lahf
pop
test
call
jmp
ja
clc
add
xor
imul
jo
daa
jge
push
out
nop
mov
in
sub
push
mov
lret
mov
pushf
fistl
xchg
loop
hlt
or
push
inc
push
pop
pop
rorl
mov
std
jp
dec
in
add
inc
xchg
or
push
movsb
add
sbb
jmp
xor
adc
dec
mov
sbb
push
jnp
add
adcl
pop
mov
add
mov
pop
mov
push
not
add
jmp
in
test
test
push
test
or
mov
je
mov
and
mov
insl
adc
jl
addb
cmp
sbb
outsb
adc
call
mov
sub
add
mov
into
or
mov
pusha
sub
xchg
push
inc
jecxz
mov
and
es
enter
mov
adc
cmpb
pop
adc
nop
jnp
or
xchg
cmp
jp
pop
jge
pcmpeqw
jo
pop
mov
push
push
xor
pop
or
shrl
aaa
adc
mov
stos
movsb
mov
stos
rolb
push
insb
jl
bndstx
leave
and
aad
xor
pop
pop
mov
cmp
in
cmp
add
cmp
inc
cmp
icebp
pop
xor
mov
mov
jnp
scas
or
jne
jb
sub
xlat
dec
sbb
fldenv
xchg
repnz
xchg
cs
adc
jmp
adc
cmp
and
in
stc
pop
sbb
cmp
dec
gs
ja
mov
push
inc
repnz
inc
sbb
movb
sbb
je
jae
das
xchg
mov
dec
shl
mov
jmp
bound
dec
push
aam
imul
push
out
dec
mov
push
rorb
pop
in
push
rorb
in
jb
xor
repnz
xor
cmp
hlt
enter
adc
pop
rcl
jmp
sbb
cs
or
mov
lahf
push
dec
jns
add
xchg
jmp
sbb
dec
lret
mov
mov
hlt
ljmp
daa
in
cli
std
xor
call
jno
push
mov
stc
icebp
push
mov
mov
or
xor
cmpsb
adc
cmp
push
push
mov
ret
sub
mov
in
add
pop
adcl
fs
sbb
mov
lcall
js
and
leave
pusha
mov
add
pop
adc
jne
in
or
mov
orb
dec
call
adc
push
add
mov
mov
loope
sahf
sbb
sbb
cmpsb
cmp
pop
jg
mov
mov
mov
aam
jns
and
mov
pop
sub
sbb
stc
scas
pop
insl
cli
sub
add
push
pusha
jb
iret
movl
ret
stos
mul
mov
lret
lock
mov
movsl
aaa
pop
scas
sarb
lods
xchg
repnz
hlt
pop
test
push
pop
pop
pop
popa
jmp
mov
push
andb
stc
js
stos
fbld
mov
cmp
fisubrs
sbb
rcrl
icebp
inc
pop
sub
jae
cmc
fs
cmp
outsb
dec
jnp
xor
sub
inc
popf
aam
and
mov
enter
sti
movsb
add
aas
and
cwtl
fmuls
pop
leave
mov
and
xchg
loop
imul
nop
sub
sahf
jle
adc
push
push
push
in
xor
outsl
jmp
jmp
xor
cmp
dec
ss
sub
sub
push
stc
push
movsb
xchg
inc
cltd
adc
pop
push
stos
dec
in
sub
xlat
inc
push
ljmp
ljmp
xchg
jns
shll
sub
mov
add
fiaddl
sub
test
pop
pushw
dec
divb
mov
daa
aad
or
outsb
sub
les
and
mov
or
adc
inc
int3
xor
sub
push
push
addl
pop
jno
jo,pn
stos
or
lock
fisubrl
es
push
add
clc
pushl
pop
xchg
jne
mov
pushf
and
inc
stos
call
mov
ja
out
inc
adc
pop
mov
sub
les
std
xor
daa
pop
pop
mov
das
xor
lods
lods
xorb
cmc
pop
mov
cli
sub
insl
das
xlat
cmp
fldl
rcl
fistps
jmp
test
imull
test
inc
das
icebp
lcall
pop
stos
push
subl
inc
fldcw
hlt
arpl
jmp
push
pop
aam
dec
xlat
inc
jno
jmp
inc
rcrl
ds
add
in
movsl
fs
jge
push
mov
mov
or
xor
and
ret
mov
rcr
in
insb
stos
xor
xor
and
mov
pop
daa
movsl
lea
mov
mov
sub
clc
mov
pop
das
sub
leave
mov
pop
fldenv
inc
xchg
pop
bound
dec
inc
push
repz
jmp
insl
adc
lock
js
imul
mov
dec
or
ret
xchg
rcrb
pop
sbb
repz
lahf
call
outsb
dec
jns
push
jmp
sub
lods
mov
enter
pop
add
push
xor
jmp
inc
out
fs
xchg
mov
inc
fcomi
adc
mov
repnz
push
add
neg
ljmp
push
mov
loopne
mov
dec
mov
fwait
add
dec
add
sub
mov
fiadds
add
push
outsl
inc
loope
jbe
jg
add
adc
adc
pxor
push
push
xor
or
rclb
loop
fiadds
pop
xchg
ljmp
add
mov
jmp
mov
repz
loop
lret
dec
pop
jl
ds
int
test
add
daa
or
sub
mov
leave
xor
push
imul
enter
adc
lahf
and
sbb
adc
add
pop
push
stos
sub
mov
clc
pop
xchg
stos
enter
sbb
xchg
and
xchg
rcrl
leave
jge
add
out
sti
sti
dec
dec
mov
orb
lret
sub
imul
lret
out
and
ds
iret
inc
adc
pusha
and
cmpsl
or
jmp
sub
add
pop
jp
loop
repz
test
pop
mov
filds
adc
out
inc
xor
add
adc
js
enter
push
lock
fs
out
jmp
and
pop
inc
in
stos
mov
into
idivl
popa
cmp
and
push
shll
cvtpi2ps
out
and
or
mov
ds
or
sub
add
fst
call
and
add
push
js
pop
and
pop
push
cmp
mov
adc
jp
lcall
push
add
dec
mov
xchg
xchg
add
movsl
stos
push
mov
add
or
xor
add
push
push
add
adc
repnz
inc
mov
pop
cmc
pop
int
and
sbb
add
add
push
adc
sub
outsb
js
jne
sub
add
xlat
adc
and
adc
andb
push
jne
gs
dec
and
data16
add
add
sub
shl
jmp
sar
sbb
xor
xchg
jno
xor
pop
pop
sub
ret
sub
das
and
mov
jmp
xlat
les
data16
sub
les
push
pop
jmp
enter
repnz
jmp
sub
xchg
rolb
inc
sub
mov
daa
std
pop
push
cltd
dec
jp
and
mov
ret
cmp
and
and
fstp
pop
jno
mov
dec
xlat
add
adc
mov
test
out
mov
pop
rcl
xor
or
lea
ja
mov
pushf
jmp
adc
mov
mov
pop
add
mov
mov
cmc
jmp
xchg
pop
das
adc
mov
mov
ret
cli
pop
or
mov
add
fwait
sub
add
test
xlat
sbb
xchg
dec
dec
js
out
push
mov
jmp
mov
push
insb
sub
or
outsl
adc
inc
or
push
hlt
and
and
mov
popf
jg
adc
daa
push
and
divl
xor
add
sbb
callw
fs
jnp
mov
pop
cli
inc
mov
and
push
sub
and
ret
lods
pop
xchg
ljmp
rorb
fidivrl
sub
jmp
xchg
or
inc
xchg
loopne
lahf
lock
mov
nop
popf
dec
sbb
push
mov
bound
add
inc
addb
mov
jl
aad
insb
cld
or
push
mov
mov
or
ret
or
lods
mov
jmp
push
cwtl
out
sub
xor
lock
jno
stc
push
mov
or
or
xchg
call
loop
push
push
pop
sbb
xchg
dec
jl
cli
jecxz
pop
lcall
adc
inc
adc
jno
add
mov
mov
mov
cltd
rclb
adc
dec
mov
jb
xor
das
aas
push
es
inc
stos
lock
cmp
lret
xor
sub
mov
or
jbe
test
popf
pop
xor
movsb
cmpsl
xchg
outsb
add
cs
incb
mov
jecxz
sub
mov
call
push
cwtl
hlt
adc
mov
lock
xor
out
lock
sbb
cmp
xchg
jmp
loope
xchg
pop
or
and
add
shr
adc
xor
cmp
popf
cmc
sahf
leave
cmp
ljmp
mov
fcompl
xor
dec
fbstp
jmp
icebp
pop
push
mov
fs
add
jmp
imul
das
xor
lret
xor
mov
push
jno
daa
popa
sub
pop
aam
jg
js
lret
inc
xchg
pop
xchg
test
add
std
lret
dec
dec
lcall
xchg
xor
adc
jecxz
std
and
maxps
inc
pop
or
sub
pusha
xor
movsl
and
test
sti
push
mov
jp
mov
ja
shrl
xor
mov
jg
and
sbb
scas
ja
push
and
add
xor
or
jl
negb
push
sub
pop
xchg
stos
dec
out
lcall
mov
pushf
and
push
scas
inc
fs
dec
test
push
ret
sub
testb
bsf
iret
push
adc
dec
loope
roll
xchg
mov
pop
xlat
jmp
out
and
push
jl
gs
aam
mov
inc
enter
xchg
push
cmp
je
jmp
sub
jmp
lret
cmp
add
jmp
or
push
jg
push
push
mov
aam
push
mov
pushl
icebp
icebp
and
push
dec
mov
not
rorl
sub
jl
dec
jmp
pop
sarl
push
adc
or
and
daa
jnp
or
cmp
xchg
mov
add
jg
lret
lods
and
imul
dec
pop
std
push
inc
dec
push
cmpsb
outsb
add
shl
dec
mov
sub
push
mov
push
es
insl
jecxz
sub
loop
popa
xchg
es
stos
jno
lret
mov
addr16
iret
mov
mov
imul
imul
lods
pop
add
repz
add
out
dec
xchg
jbe
xor
sub
mov
mov
ret
dec
dec
shlb
push
inc
subb
adcl
idivl
insl
loope
imul
adc
insl
leave
test
push
mov
enter
jns
jmp
aas
add
stc
add
mov
shlb
lods
adc
xchg
repnz
mov
mov
mov
sub
mov
hlt
push
lods
outsl
insl
ret
int3
sarb
std
movsb
cmp
loopne
cmp
loopne
adc
sbb
outsl
dec
mov
cmp
cmp
ret
xchg
dec
addb
or
adc
adc
dec
cld
dec
fdivr
cvtdq2ps
gs
leave
jne
pop
push
mov
dec
call
mov
cmp
add
mov
sti
ljmp
sbb
mov
jns
push
inc
test
pop
jmp
fsts
bound
jl
arpl
pop
add
lods
jo
push
xor
push
add
loopne
push
adc
push
popa
popf
shl
lret
pop
sbb
xchg
pop
aam
and
mov
cmp
xor
cmp
inc
pop
cmp
popa
rcrl
xor
imul
dec
mov
cld
xchg
pop
mov
mov
lahf
mov
jbe
mov
dec
or
xor
mov
daa
dec
mov
pop
sbb
hlt
pop
mov
jno
mov
lock
adc
sub
and
das
movsl
je
divb
js
inc
jmp
sti
jl
jmp
addr16
or
dec
cmp
ret
push
mov
ret
lcall
mov
mov
add
mov
push
test
xor
xchg
cmp
adc
xor
push
jmp
call
adc
pushf
xor
cmpsl
lock
test
sub
std
js,pn
mov
adc
int
adc
jge
xchg
and
mov
push
sbb
or
gs
lds
mov
dec
scas
movsl
jne
int
mov
mov
mov
stc
jmp
sti
mov
pushl
jmp
neg
test
or
add
daa
aad
pop
add
jmp
test
pop
pop
xchg
pop
out
insb
xor
inc
lods
mov
outsb
xor
pop
inc
cld
add
pop
jne
push
mov
pop
enter
push
pop
mov
push
inc
mov
push
adc
mov
xchg
or
in
aad
and
pop
rorb
movsl
xlat
les
add
cmp
fiaddl
push
mov
jae
enter
fnstcw
pop
pop
pop
mulb
shll
xchg
cs
mov
sub
add
lcall
iret
test
add
test
repnz
imull
mov
pop
ret
jl
mov
mov
pushf
or
in
pop
push
int
push
push
xor
jmp
mov
pop
scas
add
adc
jnp
cmc
cmp
cltd
dec
and
add
std
test
adc
int
and
pop
inc
pop
inc
jns
lret
jne
jbe
jmp
pop
push
push
icebp
rcrb
jo
inc
les
or
push
imul
arpl
push
mov
push
mov
inc
jle
inc
push
xlat
and
sahf
pop
push
lret
add
jle
xlat
loop
fisttps
sub
sti
dec
les
mov
pusha
and
daa
std
je
push
pop
ljmp
and
and
loop
lods
in
pop
mov
lods
faddl
add
pop
cmpsb
and
mov
repnz
xor
pop
imul
push
sbb
adcl
sub
je
push
cmp
pop
jo
sbbb
repnz
rorl
inc
ljmp
pop
add
cmp
js
das
xor
in
mov
and
jbe
cs
clc
cli
mov
aam
sbb
jge
push
scas
mov
pusha
add
pop
inc
and
cmp
add
jne
leave
daa
sub
jmp
fidivrs
jp
jge
loope
mov
mov
dec
lret
sub
cltd
mov
imul
sub
inc
les
push
stos
push
cmp
lret
lea
or
rcr
test
mov
and
push
jmp
mov
clc
push
and
pop
ljmp
bound
rorl
subb
push
push
test
mov
bound
pop
pop
movsb
sbb
pop
cs
testl
or
lret
fisubl
or
leave
test
cmp
push
push
push
jmp
repz
adc
sub
mov
and
mov
dec
adc
pop
and
adcb
pop
and
jnp
xchg
fistpl
mov
fst
ficomps
add
fincstp
mov
leave
mov
mov
lock
push
push
mov
add
xor
testb
sti
and
mov
add
xchg
and
jmp
ljmp
xchg
mov
sbb
dec
cltd
out
xchg
xor
nop
push
pop
lcall
movsb
iret
pop
mov
pop
fiadds
in
daa
push
cmc
and
xchg
repz
sub
ljmp
mov
in
int3
aad
cmc
rorl
adc
into
mov
pop
push
subl
jl
pop
test
incl
xchg
pop
nop
insb
mov
and
mov
arpl
insb
push
lock
mov
shll
test
dec
ja
test
mov
xchg
pop
call
push
repz
inc
and
ds
ljmp
xchg
out
sbb
dec
sbb
mov
push
adc
cli
icebp
cmp
mov
mov
js
push
int
jnp
sbbl
into
pop
jb
push
lds
xchg
mov
jp
xchg
push
pop
out
pop
cli
mov
pop
into
push
into
sub
sbbb
movsl
jno
in
test
xchg
lods
fwait
dec
mov
adc
push
xchg
jmp
ret
popa
in
and
mov
xchg
xorl
sahf
push
mov
jne
adcb
pop
jmp
pop
push
and
xchg
push
or
pop
daa
jbe
jp
loopne
pop
jle
ja
outsb
pop
jmp
mov
cmp
xchg
out
jbe
imul
nop
xchg
movb
scas
adcb
mov
scas
jl
nop
call
imul
mov
xor
add
push
pop
ret
call
loope
ror
fcompl
pop
not
lahf
jg
imul
pop
add
fcomps
bound
push
and
adc
xchg
lahf
fdivl
dec
out
cmp
xchg
cltd
ret
push
cld
sbb
movsb
clc
jns
lahf
lcall
mov
ret
addb
add
test
cltd
sbb
mov
addr16
or
add
dec
pop
in
sub
sub
arpl
and
jae
adc
or
ret
push
test
rol
dec
cmp
jbe
push
inc
sbb
jg
cli
cmp
inc
cli
mov
xor
cmp
xchg
xor
sbb
inc
test
addr16
sub
dec
and
sahf
shlb
sub
mov
mov
pop
scas
jmp
xchg
add
sub
lcall
xor
clc
cltd
mov
cmp
nop
adc
pop
mov
addr16
into
or
jnp
insl
add
repnz
test
pusha
lods
fs
push
in
daa
sub
stc
inc
addr16
mov
pop
and
xchg
pop
fmul
test
inc
rcrb
jae
js
adc
enter
pop
dec
jmp
das
clc
mov
mov
push
cmp
out
inc
orb
add
aad
mov
dec
push
lds
not
xorl
das
pop
and
in
cmp
push
ret
idivb
int
fdivl
cmp
sub
and
jb
or
pop
push
pop
fsub
cmc
insb
mov
pop
insb
jge
sub
adcb
push
jmp
pushf
shl
pusha
stos
call
sti
sub
imul
jnp
imul
or
test
adcb
rorl
mov
inc
add
cld
dec
mov
dec
sub
jp
push
push
mov
neg
jnp
jmp
stos
and
stos
std
mov
cmpsb
sub
std
and
or
push
mov
adc
inc
lock
add
leave
int3
adc
mov
push
into
test
mov
daa
imul
add
inc
andl
dec
xorb
imull
or
insb
adc
nop
cmpb
incb
xor
jl
mov
add
scas
sub
jmp
rcrl
pop
sub
jg
mov
mov
pop
iret
sbbb
enter
es
sub
jp
enter
sahf
aas
adc
sbb
cwtl
xchg
adc
lock
add
jne
std
and
sub
cmp
loope
scas
xor
mov
xor
jnp
pop
fbld
mov
sub
mov
push
test
sub
pop
ljmp
jmp
pop
push
dec
outsl
cs
add
jb
add
xor
jmp
stc
and
cwtl
cltd
dec
add
xchg
dec
call
jmp
push
sub
out
cmp
cltd
mov
lods
imul
js
sahf
mov
andl
push
sub
xor
or
aas
icebp
daa
outsb
mov
adc
add
ret
mov
jmp
xor
mov
fnstcw
das
andb
inc
or
popf
imul
inc
pop
dec
enter
jecxz
stc
mov
adc
pop
pop
mov
lods
daa
dec
xlat
cmp
pop
inc
mov
ljmp
xchg
adc
das
cmc
xchg
dec
or
imul
mov
jmp
stc
ja
inc
mov
sahf
cmp
xlat
in
or
imul
sbb
arpl
lods
jnp
loope
sub
cld
cs
bnd
add
pop
dec
or
jle
fldl
daa
popf
push
inc
hlt
jmp
jg
iret
and
xchg
push
mov
sbb
or
or
testl
push
leave
lahf
loop
push
mov
mov
push
jmp
add
cmp
cmp
sub
pop
ja
movsl
and
cwtl
xchg
pop
dec
push
and
mov
mulb
leave
mov
nop
testb
ret
in
or
pop
sbb
push
push
les
push
in
popf
rcl
test
mov
mov
dec
push
mov
mov
xor
add
xor
not
mov
pop
add
pusha
dec
add
ret
or
add
enter
mov
ja
pop
jge
push
push
push
push
add
push
jno
push
push
cmp
pop
xchg
add
pop
mov
dec
xor
data16
and
fwait
mov
cmpsb
lret
dec
sub
xchg
cli
ficompl
or
adc
out
add
xchg
push
testl
jo
push
in
repnz
clc
pop
loopne
mov
sub
dec
inc
sub
lds
ror
iret
cmpsb
pop
cs
sub
scas
ja
mov
push
ror
pop
or
arpl
ret
shr
test
clc
ror
pop
jmp
mov
xor
fnstcw
bound
and
push
pusha
outsl
test
and
or
mov
sub
sbb
out
stos
mov
inc
test
jmp
xor
cltd
loope
sub
mov
push
out
sbb
add
rorb
pop
inc
mov
and
movsl
rol
mov
sub
and
xchg
xor
ljmp
call
sbbb
fucompp
idiv
outsb
dec
jmp
fwait
sub
fcomi
or
iret
dec
test
out
comiss
movb
sbb
mov
sti
jbe
push
aad
incl
mov
sub
clc
xchg
dec
adc
sub
rcrb
or
jg
jne
and
jne
xchg
lret
pop
scas
popa
into
pop
mov
add
adc
push
mov
mov
pop
add
cltd
push
inc
jnp
orl
push
pop
push
mov
sti
add
sub
jbe
add
mov
das
jne
and
test
adc
adc
into
and
mov
push
pop
push
rep
jae
cmp
or
clc
int3
or
scas
push
add
pop
or
and
ffreep
mov
ror
add
insb
imul
dec
fimull
push
mov
mov
sbb
jecxz
jb
setne
inc
imul
inc
push
push
push
push
pop
inc
add
mov
jb
scas
jg
mov
mov
add
lret
mov
dec
jecxz
cmpsb
cwtl
mov
out
repz
push
inc
add
dec
dec
jg
inc
mov
sbbb
cld
in
mov
adcl
add
push
dec
sbb
inc
xor
fstpl
imul
or
pop
inc
inc
jp
mov
mov
xchg
dec
stc
loop
xchg
mov
mov
mov
sbb
mov
jge
ja
int3
incl
pop
inc
call
mov
mov
in
cmc
cmp
adc
nop
mov
or
imul
mov
cmp
adc
mov
inc
hlt
pop
jl
add
xor
sub
cmc
stos
mov
push
mov
into
inc
hlt
push
int
sub
or
cmpb
jns
decl
mov
cmp
adc
add
cld
jnp
out
xchg
leave
mov
add
sahf
adc
sub
xcrypt-cfb
cmpsl
fstps
mov
mov
push
jg
popa
in
jne
mov
pop
or
jbe
insl
mov
inc
je
lret
fsubp
adc
mov
mov
loope
int
fisttpll
insb
pop
sub
test
add
nop
push
or
dec
cmpsl
and
or
ret
jecxz
test
mov
or
mov
push
into
int3
and
push
push
lds
mov
xchg
pop
push
rclb
pop
jbe
jo
shrb
icebp
jns
push
idivb
stos
lahf
inc
adc
xor
sub
popa
aas
rclb
sub
dec
insl
ljmp
pusha
pop
mov
popf
add
adc
xchg
push
arpl
jge
sub
inc
cmp
dec
mov
mov
jmp
xchg
neg
in
pop
ret
jle
mov
mov
fbld
and
jp
lahf
jnp
and
das
mul
cmp
xlat
sub
cmp
bound
push
lcall
lea
fadds
jnp
mov
aam
add
xor
es
shl
or
daa
add
push
inc
or
push
xchg
scas
ljmp
test
jmp
inc
push
pop
loopew
sub
pop
mov
and
mov
jno
stc
mov
mov
adc
scas
popa
pop
in
add
and
ret
mov
jge
push
dec
sbb
enter
sub
or
outsb
shlb
pop
and
mov
cmp
dec
popf
orb
pop
sbb
or
movsl
jno
dec
lock
dec
pop
fnsave
pop
and
pop
dec
rcrb
pop
push
repnz
push
xchg
xchg
add
mov
clc
add
testb
xlat
or
movsl
pop
or
mov
sub
mov
icebp
xchg
add
pop
add
xchg
pushf
push
mov
dec
xor
pop
or
call
push
movsl
aad
jne
divb
mov
xchg
out
or
push
rcrb
aas
outsl
fucompp
push
mov
mov
insl
nop
adcb
mov
jb
dec
mov
and
das
adc
jmp
mov
sbb
push
jecxz
mov
shrl
mov
push
sub
iret
add
cli
lret
enter
pushf
xchg
mov
xchg
add
sub
xchg
jo
pop
pop
into
jne
jae
xchg
push
into
push
js
out
ret
push
pop
xor
adc
xchg
sub
xchg
mov
or
and
test
cmp
sbbb
pop
ds
gs
sub
arpl
fistpll
in
add
out
push
sub
cmp
mov
mov
lock
mov
popa
xor
add
xchg
add
pop
insl
clc
bswap
mov
jae
pop
jns
test
mov
ljmp
cltd
or
insl
cmp
mov
sbb
or
cltd
pop
mov
jg
fwait
add
jmp
repz
mov
push
cmpsl
cld
dec
movsl
stc
cmp
scas
fsubrs
addl
frndint
std
iret
dec
cli
test
dec
fdivrs
jbe
cwtl
dec
gs
adc
out
rcr
pop
mov
pop
xor
xchg
clc
mov
mov
pop
das
jns
out
pop
mov
mov
sti
sub
inc
xor
mov
ret
imul
add
and
add
add
jmp
jae
pop
inc
or
push
cmp
mov
dec
jnp
sub
scas
adc
mov
push
push
or
addl
jbe
mov
in
sbb
sbbb
in
cmpsb
movsl
or
rcr
shll
jmp
dec
or
adc
mov
test
test
pop
inc
js
push
ljmp
lods
or
pop
push
or
and
sbb
push
cwtl
pop
mov
jmp
aam
js
lret
ds
lods
mov
add
in
bound
nop
sahf
les
cmp
add
lds
push
lret
gs
cmp
add
add
divb
hlt
rclb
fildll
or
or
outsl
sbb
addl
lds
shrl
dec
inc
test
pop
arpl
xor
and
and
cltd
pushf
or
inc
mov
push
sub
push
and
cmp
sub
adc
or
aad
fsubrl
xchg
pop
repnz
add
std
push
jnp
jns
jbe
inc
push
pop
inc
test
inc
ss
and
lret
popf
and
sbb
adc
and
jl
mov
stos
sahf
lds
std
lock
lods
loopne
mov
and
add
adc
or
adc
mov
mul
jns
xorb
lcall
in
enter
incb
push
and
jmp
or
sub
leave
adc
add
adc
lcall
aaa
mov
invd
xchg
or
add
mov
and
and
cwtl
and
mov
mov
jno
enter
mov
or
testb
test
mov
and
mov
icebp
adc
addr16
cmp
or
fmuls
popa
arpl
push
mov
xor
cmp
mov
xor
inc
add
xchg
add
add
lea
iret
or
mov
or
inc
add
inc
push
bound
dec
cmp
or
xor
mov
test
xor
or
or
imul
adc
sti
mov
in
sbb
dec
or
xchg
add
add
or
jo
and
mov
adc
out
sub
push
and
pushf
fisttpll
rorl
pop
int3
test
into
or
fisubs
or
pop
sub
jns
dec
push
ret
lds
mov
roll
or
mov
pop
mov
push
sahf
push
push
orl
lret
push
mov
xor
rorb
push
test
add
mov
pop
push
pop
js
pop
and
pusha
mov
imul
cmp
int
fadd
xchg
rcrb
incl
pop
je
cmp
ret
sub
test
ret
push
fwait
out
add
or
js
mov
cmp
xor
outsl
adc
in
push
add
lahf
add
data16
in
testb
cli
mov
and
dec
add
aad
sub
fisubrs
pop
fs
add
add
leave
sti
lahf
popa
arpl
xchg
not
scas
push
aam
add
jmp
mov
push
dec
sbb
stc
pop
or
adc
pop
sub
mov
push
fldcw
push
data16
sti
jne
test
mov
cmpsb
dec
sbb
andl
pop
xadd
icebp
inc
cmp
sbb
fcomp
xor
dec
inc
add
in
add
jle
cmp
xchg
repnz
cmp
and
push
jb
dec
push
sahf
add
jge
inc
cmpsl
jg
loope
push
xchg
int
das
gs
push
or
cmp
out
mov
cmp
xchg
pop
pushf
mov
or
icebp
in
ja
lods
jmp
imul
jg
jnp
pop
stos
movsl
js
mov
addr16
icebp
pop
in
mov
jne
cmpsb
add
into
bound
sbb
pushl
xor
ror
out
adc
pop
add
cs
rcrb
test
orl
sub
loopne
repnz
or
adcb
inc
sbb
icebp
jl
adc
jo
push
dec
test
cld
xor
xor
add
add
into
lret
add
push
and
rorb
enter
and
testb
add
lds
push
inc
xchg
mov
mov
stos
inc
inc
enter
push
mov
cmp
test
mov
xchg
xor
cmpb
test
xor
testb
sub
shrl
add
pop
push
mov
mov
pop
arpl
lock
fidivrl
cpuid
in
loopne
xor
sahf
gs
xchg
inc
dec
or
mov
jno
mov
popa
pop
or
inc
or
cmp
mov
sub
lds
xor
jbe
pop
pop
and
and
mov
shl
or
inc
dec
adcb
jle
loop
push
loope
sub
sub
dec
mov
or
dec
not
and
sbb
cmp
fildl
or
mov
cli
je
es
or
adc
sahf
test
insl
scas
addb
pusha
or
or
jne
adc
dec
in
adcl
pop
xchg
je
pop
jo
add
sahf
sbb
jmp
and
inc
xor
aam
iret
aad
std
and
push
fsubs
divb
sbb
gs
add
xchg
je
mov
push
popf
add
cmp
shll
sbb
aas
cmp
insb
ljmp
test
cmp
popa
push
subl
pop
push
or
sub
setno
bound
push
sbb
dec
xor
cmp
das
jbe
dec
xor
jnp
adc
dec
pop
fstps
jns
push
jmp
cltd
or
add
push
test
push
arpl
or
sbb
add
add
pop
push
jp
cmc
mov
mov
push
adc
xor
xor
sarl
out
push
mov
cmp
ret
sub
push
dec
xor
pop
adc
lret
aas
mov
inc
pop
adc
mov
loope
repz
and
lods
cmpsb
xchg
mov
xchg
fcmovb
nop
pop
or
call
lds
push
mov
shlb
add
dec
mov
lar
int
cmp
fmull
mov
lods
movsb
mov
daa
push
sbb
mov
and
outsb
xchg
cmp
sbb
clc
movsl
adc
addl
and
addl
adc
or
dec
fimuls
add
subb
cmp
inc
test
out
xchg
test
inc
pusha
out
imul
xor
adc
pop
cs
sub
and
xchg
xor
jno
sub
dec
sub
add
les
inc
or
addr16
aas
stos
lret
into
sbb
fdivrs
or
addr16
jmp
subb
cmp
pop
stos
mov
xchg
scas
fst
add
test
mov
aad
dec
es
push
es
jo
and
sbb
jmp
dec
or
lcall
and
pop
test
imul
out
xor
subl
add
add
mov
mov
jmp
inc
stos
and
jbe
fcom
mov
push
add
scas
cmp
mov
ljmp
sub
jbe
xor
add
add
and
bnd
mov
add
mov
fimuls
mov
pop
and
loope
jno
sub
mov
rcll
ss
iret
icebp
pop
push
dec
lcall
dec
pop
roll
subb
xchg
cmp
adc
cmp
xor
jnp
push
or
inc
add
popl
push
pushf
jmp
call
add
inc
push
add
out
jge
js
dec
fld1
inc
rolb
or
xchg
dec
and
sbb
sti
sub
dec
fmull
or
xchg
pop
std
or
and
or
in
lods
call
sti
cli
xor
xchg
sub
loop
xchg
mov
not
xchg
data16
xor
cmp
or
sbb
sbb
pusha
cmpsb
mov
das
dec
data16
add
jle
push
xor
inc
dec
jmp
push
sub
and
jp
jo
lods
std
jae
xchg
and
in
ljmp
ja
add
ds
add
pusha
sub
inc
push
dec
push
ss
dec
jo
push
push
mov
rclb
and
or
daa
push
leave
js
in
or
mov
out
dec
jmp
xchg
scas
or
or
inc
aas
pop
sub
push
dec
pusha
mov
xchg
sbb
inc
popa
jns
shrb
jg
ret
les
xor
jle
aaa
sbb
pop
punpcklbw
and
icebp
dec
dec
gs
js
mov
fsts
sbb
xchg
cmp
add
daa
sub
outsl
jno
out
popa
sbb
push
decl
xor
xor
mov
loopne
loop
adc
cmp
jb
or
push
and
fstps
roll
rorb
outsl
jnp
add
dec
cld
adc
xlat
cmp
sub
rcrl
leave
or
test
jmp
jnp
xchg
mov
fsubp
imul
popa
pop
sub
add
daa
add
pop
xor
xchg
es
filds
mov
adc
out
ret
adcb
repz
mov
or
inc
pop
ljmp
add
addr16
push
dec
jne
jno
pop
cli
add
pop
sub
adc
jbe
in
addr16
mov
inc
mov
pop
scas
imul
jp
pop
jne
xchg
sub
enter
lods
call
sarl
adc
pop
cmp
fisubs
cmpsb
mov
cs
xor
jnp
int3
addr16
and
xchg
loopne
aad
fnsave
jb
repnz
inc
adc
lret
jne
cwtl
xchg
xchg
lcall
mov
adc
bound
jmp
cmp
pusha
lds
xor
rorb
mov
xor
jmp
pop
xor
rclb
cli
mov
adc
mov
jle
lods
add
aad
xchg
jl
mov
adc
mov
mov
pop
lea
or
mov
or
jns
imul
adc
pop
add
inc
xchg
sub
and
xchg
decl
jle
push
dec
insb
add
icebp
cmp
loopne
imul
sub
add
pop
mov
push
cmp
mov
sbb
pop
in
jl
jmp
addr16
sub
add
dec
fs
je
fdivrs
inc
test
dec
add
out
jnp
dec
inc
leave
pop
pop
gs
lods
out
or
shl
mov
and
dec
adc
xchg
add
and
lods
in
sub
xchg
rorb
jl
mov
add
push
fnstsw
jmp
pop
xchg
sub
pop
imul
pop
jmp
mov
ret
mov
das
adc
xlat
scas
cmp
cmp
jle
xchg
rorl
push
lods
and
decb
mov
jg
enter
inc
add
push
adc
popa
pop
pop
fsubrl
je
add
sub
and
test
and
fbstp
mov
sahf
mov
xchg
sub
sbb
loopne
movsl
jmp
pop
scas
dec
or
repz
leave
insb
mov
jp
push
jb
aas
int3
cmp
jp
or
inc
insl
out
out
or
add
ret
xchg
push
and
fsub
mov
push
mov
loop
xlat
pop
pop
scas
cmpsl
jl
xor
sbb
je
outsb
fldt
ret
xor
mov
rorl
or
xor
shl
fnstcw
and
adc
sti
subl
negb
pop
jecxz
rclb
rcll
pusha
sbb
push
shlb
fwait
and
dec
pop
xchg
loopne
or
jl
and
and
lahf
arpl
andl
pusha
and
cmp
jecxz
in
xchg
adc
out
add
call
mov
ret
xor
jo
test
dec
push
out
push
mov
ret
fbstp
xlat
inc
sub
mov
cmovle
push
dec
and
test
repnz
sbb
ret
push
fisttpl
pop
loopne
xchg
imul
mov
pop
cwtl
jb
pop
sbb
incl
jecxz
mov
sub
inc
cwtl
sub
pop
push
popa
cmp
and
testb
divb
or
and
xchg
inc
mov
xchg
and
pop
xchg
fmuls
adc
inc
insl
and
or
adc
sub
cmp
test
cmpsb
push
mov
and
dec
jb
dec
addr16
dec
xchg
jns
in
mov
jmp
ja
mov
out
and
out
xchg
popa
xor
jmp
rcrb
jnp
push
mov
mov
and
push
add
inc
call
iret
jecxz
push
sbb
push
mov
add
test
test
jns
add
adc
push
or
jle
add
lods
inc
les
push
lds
outsl
push
outsl
and
xor
pop
pusha
sub
or
lcall
shll
inc
mov
idiv
fstpl
xchg
shr
fisttpll
mov
sub
or
xor
mov
aaa
fnstcw
jae
and
test
push
add
mov
and
add
lahf
add
xlat
xor
xchg
and
outsl
xor
in
push
and
imul
mov
std
fsubrs
pop
mov
mov
std
fwait
vcvtps2dq
pop
shll
loopne
add
xor
or
lea
lock
sbb
andb
inc
arpl
sbb
shll
int3
push
add
test
sub
push
push
repnz
ja
pop
pop
or
sbb
ds
pop
and
pop
mov
inc
and
add
jl
leave
je
jbe
arpl
pop
es
mov
test
adc
jae
jne
cwtl
push
cmp
adc
adcl
xchg
into
lea
and
push
mov
inc
dec
leave
insb
test
add
xor
inc
jmp
push
subl
rolb
divb
pop
out
and
sub
lea
dec
and
dec
jl
sbb
push
xchg
add
mov
in
leave
rorb
push
js
sbb
nop
in
cmc
mov
loop
xchg
lods
testl
xor
mov
xor
pop
rcrl
jmp
xchg
scas
repnz
sbb
adc
jo
or
push
or
insb
jp
jmp
push
jae
aam
test
inc
scas
cmp
adc
mov
add
inc
push
mov
add
push
scas
push
aas
shr
cwtl
dec
fimull
or
xor
cmp
xor
call
fists
push
jae
sti
jge
and
ret
dec
mov
sahf
fldcw
add
sbb
sti
jne
cmc
jb
sbb
sub
push
outsl
push
pop
sahf
testb
pusha
test
push
jo
push
or
jmp
or
pop
xchg
inc
mov
jmp
add
shll
mov
inc
cmp
jno
pop
sub
jge
jnp
pop
lcall
aam
jmp
sub
mov
out
in
mov
or
jle
into
mov
repnz
int
movsb
testl
dec
aas
and
cmp
ds
adc
insb
loop
inc
movsl
fwait
push
jae
xor
sar
xor
test
lods
daa
lcall
call
movsl
inc
jnp
and
ss
and
imul
popl
add
and
and
inc
or
fwait
pushf
push
dec
test
xor
enter
bound
je
lds
mov
xchg
push
push
lahf
bound
mov
mov
cmp
mov
pusha
jecxz
push
and
sbb
or
and
aas
mov
xchg
or
mov
jnp
add
or
add
jne
jecxz
lret
adc
call
dec
sub
aaa
outsl
jmp
cmpsl
pop
je
push
stos
cmp
rcl
mov
ja
xor
adc
cmp
out
aam
stc
and
es
xlat
pop
out
mov
or
jo
and
dec
dec
gs
mov
out
test
add
lods
mov
xor
cmp
jmp
les
mov
cmpb
or
jmp
xor
js
add
out
mov
adc
mov
adc
adc
loope
stc
push
push
mov
mov
sti
add
inc
xchg
push
xor
mov
cmp
popa
xor
out
imul
xchg
test
stos
pop
bound
cltd
repz
jmp
inc
push
test
hlt
repnz
adc
jmp
push
inc
mov
jg
ret
nop
and
add
adc
outsb
lock
and
xor
pop
jl
fcmovbe
les
inc
lret
push
pop
js
sti
lock
bound
cwtl
js
push
sbb
clc
push
ffree
fs
pop
pop
push
and
xorw
mov
adc
dec
push
shr
inc
and
and
dec
sub
dec
adc
add
nop
sbb
xchg
sub
pop
push
jmp
dec
cmp
or
test
pop
mov
add
mov
or
sbb
mov
inc
dec
hlt
inc
push
je
and
mov
cmp
outsl
or
dec
jno
test
out
push
movsl
popa
fdivs
std
add
pop
ret
and
xor
mov
daa
mov
fisttpll
cmp
or
pop
sub
mov
push
and
mov
pusha
adcb
mov
pusha
or
or
cwtl
std
das
jl
and
add
mov
jp
adc
mov
add
and
aam
pop
loopne
mov
mov
gs
inc
or
cld
insl
inc
popa
jmp
ret
jecxz
xchg
push
add
addr16
jmp
loop
addb
jo
inc
sub
inc
xor
daa
add
xor
adc
sbb
mov
pop
pop
xchg
fs
push
pop
fwait
sub
test
test
mov
xor
push
xchg
pop
and
jmp
out
std
inc
cmpsb
ficoml
addb
or
sbb
les
stos
lret
aam
sub
jmp
shlb
mov
ds
inc
push
addr16
add
cld
adc
pop
push
or
rolb
jmp
fiaddl
pusha
add
aad
sub
sbb
loop
adc
add
xor
dec
or
or
fcoml
nop
nop/reserved
in
mov
mov
dec
aad
dec
or
push
jns
add
or
orl
add
or
sub
clc
inc
mov
or
push
mov
outsl
mov
xor
add
push
shlb
insb
es
xor
ljmp
cmp
xchg
push
aas
add
pusha
pop
jmp
adc
sti
imul
das
std
and
lret
ret
ror
mov
js
daa
divb
pop
add
jnp
jbe
out
iret
push
loopne
or
outsb
sbb
daa
ret
shrl
ret
popa
cwtl
dec
stc
pusha
adc
lea
movsb
shl
push
call
xchg
push
fnstcw
push
aad
dec
es
rcll
pop
scas
iret
xchg
pop
lret
pop
cmp
jmp
sub
jo
loope
out
leave
roll
push
stos
add
pop
ljmp
and
mov
mov
and
xor
push
sbb
jbe
mov
pop
lcall
cmp
push
test
js
cli
outsl
jecxz
shrl
pop
ja
sti
pop
mov
hlt
mov
add
rcrb
pop
mov
fs
sti
jne
pop
sub
sub
dec
icebp
scas
jne
sbb
sub
pop
xor
int3
push
lret
pop
mov
fdivrs
pushf
xchg
lret
mov
pop
inc
sub
or
sbb
divl
add
icebp
add
jnp
mov
mov
xor
ss
aad
mov
mov
mov
mov
leave
ss
sahf
cld
cwtl
xchg
xchg
add
pop
mov
cld
xor
xor
or
pop
cwtl
xchg
lods
inc
pop
pop
pop
andl
push
mov
adc
dec
jne
in
dec
add
into
mov
add
pop
add
call
mov
loope
rclb
sub
cli
xor
mov
pop
imul
adc
cltd
andb
movsb
add
add
dec
add
sub
or
nop
ret
mov
mov
dec
out
bound
dec
jmp
enter
add
sub
fnsave
xor
pop
cs
and
mov
iret
fnstenv
xor
lods
mov
popf
pop
or
insb
add
inc
jmp
and
mov
nop
lahf
decl
inc
push
ljmp
mov
test
push
adc
xor
popa
adcb
push
cmp
inc
not
arpl
xor
mov
xor
sub
stc
and
pop
mov
shl
popa
and
pop
insl
orl
xor
mov
mov
sub
or
dec
js
pop
lahf
out
ficoml
out
or
inc
daa
daa
push
pop
add
lret
js
dec
movsb
sbb
les
jnp
sub
int
cwtl
pusha
jecxz
sub
or
adcb
dec
lds
sbb
fwait
add
in
sbbl
cmpl
dec
lock
mov
loope
lret
insl
movsl
add
dec
loop
fstpl
aam
ja
mov
pop
lret
pop
dec
enter
movsb
sbb
rcrb
xor
push
xchg
daa
pop
mov
ret
or
lahf
mov
sbb
cmp
add
mov
lcall
pop
mov
or
ret
add
or
xchg
xchg
or
into
or
daa
rcrb
ret
nop
test
sbbb
dec
dec
test
inc
push
adc
stc
xchg
inc
or
shll
dec
stc
xchg
test
sub
xchg
ret
mov
inc
movl
movsb
xor
xor
out
popa
movsl
fstps
frstor
enter
jl
or
xorb
add
mov
inc
push
repnz
ljmp
add
jae
scas
jnp
add
push
insb
adc
iret
adc
add
addb
notb
hlt
push
in
test
push
int
mov
clc
sahf
shrl
test
andl
xchg
stos
shl
or
xlat
cmc
or
loop
fwait
sbb
sub
jmp
xchg
push
mov
jle
mov
push
scas
popf
cmp
ljmp
xchg
aas
fs
das
adc
addl
ret
adc
sub
push
fsubs
pushf
stos
mov
mov
and
insb
les
cmp
cmp
push
push
testb
and
add
cli
push
ret
test
add
pop
adc
ja
roll
push
push
rolb
jmp
add
add
add
rolb
fnstenv
sub
mov
ret
pop
sub
cltd
test
push
inc
pop
add
add
add
xlat
jae
jg
in
jmp
jg
movsl
mov
mov
inc
js
add
push
push
nop
mov
pop
mov
mov
bound
popf
mov
and
shll
popa
dec
pop
inc
pushf
dec
add
test
jmp
inc
int3
call
mov
push
push
mov
es
xchg
mov
aas
jmp
sub
and
ret
test
mov
aam
pop
inc
mov
popa
mov
pop
jmp
jns
addr16
xor
mov
xchg
adc
ds
bound
data16
aam
push
mov
iret
xor
mov
add
pop
not
xchg
cmp
sahf
andb
movsl
pop
jmp
pop
or
pop
xchg
add
add
adc
cwtl
mov
hlt
push
adc
out
pop
jp
jno
sub
pop
and
and
cmpsl
add
mov
mov
mov
das
mov
in
addr16
jmp
adc
in
and
idivl
xchg
jl
shrl
jb
xchg
lret
sub
inc
fiadds
hlt
mov
and
inc
adc
jmp
cmovg
dec
daa
sbb
sti
add
shrb
in
and
jmp
lock
cmp
js
push
ret
lcall
adc
cmp
inc
mov
lds
pop
sub
sbb
pop
push
mov
dec
jmp
loope
xor
popf
fists
data16
pushf
xchg
inc
sbb
ja
pop
jne
into
push
out
add
enter
cmp
pusha
add
nop
sub
mov
int3
std
insb
mov
mov
pop
imul
pop
lret
cmp
add
repnz
incl
lahf
mov
shrl
imul
into
je
xchg
ljmp
push
jmp
pop
dec
xchg
pop
fcomip
pop
add
mov
mov
pop
pushf
sbb
adc
inc
push
lcall
out
jbe
dec
push
cmpsb
jl
sub
add
sbb
push
sub
lods
fisubs
es
adc
xchg
jmp
xor
mov
or
sub
andl
jmp
dec
mov
cs
jo
jmp
add
lret
int3
pop
das
push
js
adc
sub
sbb
pop
xchg
into
dec
rcll
xor
inc
xor
das
sub
scas
or
push
in
push
jnp
push
call
sub
jmp
push
nop
inc
or
add
cmp
fsubp
inc
or
push
xor
iret
pop
dec
dec
dec
orb
test
scas
mov
add
sbb
jge
mov
and
xor
and
xor
call
jo,pn
out
test
fdivrs
xchg
imul
and
test
shll
mov
and
jns
aaa
push
pop
orb
popf
out
jecxz
ret
or
xor
xor
add
xor
andl
fbstp
xor
pushf
or
xchg
orb
push
add
inc
rcrb
std
jmp
cmc
mov
add
stos
test
push
xchg
lds
jmp
cld
sbb
ss
inc
xor
inc
push
push
pop
push
jmp
rolb
roll
inc
jge
repz
insb
aaa
sub
and
dec
pop
insb
push
mov
scas
je
or
ja
jp
out
mov
pushf
push
jp
aas
adc
xor
in
orb
jge
cmc
clc
ja
inc
jo
mov
dec
add
cmp
or
push
jge
cmp
dec
je
inc
pop
pop
scas
loopne
mov
jg,pn
push
add
lcall
mov
das
outsl
add
jecxz
sub
sub
fstpl
or
inc
xor
arpl
dec
dec
and
xchg
fisubrl
jmp
not
xchg
fs
cmpb
into
xchg
or
mov
insb
ss
jmp
cmp
into
daa
dec
jns
or
nopl
push
push
mov
mov
into
pop
mov
pop
int3
orps
mov
add
movl
lret
sub
add
add
fmull
adc
and
cmp
or
pop
xchg
and
aam
hlt
mov
mov
imull
es
xor
jmp
out
sarl
int
aam
pop
popf
icebp
jg
push
outsb
aad
add
xor
push
push
sbb
rcrb
push
sub
adc
clc
daa
pop
loopne
dec
sbb
push
dec
ret
lods
xor
inc
clc
frstor
mov
aas
std
ljmp
call
stos
repnz
shlb
icebp
mov
jbe
sub
loope
addb
rcrb
jmp
icebp
ret
pop
xchg
add
popl
pop
push
shlb
js
popf
jle
imul
or
jo
add
add
sub
push
push
xor
sub
ret
cmp
jmp
xchg
bound
mov
and
xchg
bound
ss
mov
enter
pop
xor
icebp
and
sub
add
sbb
add
sbb
or
adc
cmp
mov
mov
pop
jle
jp
xor
loopne
pop
dec
ds
aam
push
adc
aas
decl
mov
das
add
mov
dec
sub
andl
add
fimull
xor
and
les
insb
in
jbe
cltd
stos
mov
mov
pop
push
movsb
dec
jmp
inc
adc
ret
fwait
pop
lret
shll
mov
pop
sub
scas
push
sbb
fs
or
lds
incb
dec
repnz
mov
jae
adc
inc
and
jns
mov
push
daa
ret
pop
fs
movsl
hlt
ljmp
push
jno
mov
push
mov
push
in
lret
not
test
test
lret
push
or
in
jge
aad
add
xor
stos
call
sbb
push
scas
cmp
jmp
movsb
add
cmc
clc
push
push
mov
stc
sbbb
not
inc
mov
mov
jno
and
pop
adc
test
mov
ret
lahf
or
add
inc
sub
dec
fsubs
push
inc
xor
in
push
cmp
std
test
add
dec
mov
pop
aas
inc
movsl
lock
add
sbb
hlt
cmc
and
mov
das
decb
rorb
mov
xor
mov
sub
adc
mov
out
push
pusha
xlat
and
jl
clc
xor
ret
stos
mov
or
aaa
mov
aaa
dec
rorl
pop
fstps
jmp
test
outsb
jmp
loop
mov
lret
sbb
ret
push
jae
jmp
and
add
mov
and
jbe
cmp
inc
mov
aaa
popa
ljmp
cmpsb
sub
cs
inc
push
in
sahf
popa
out
fs
cmp
jmp
mov
pushf
inc
stos
push
mov
lock
sbb
inc
and
adc
jmp
inc
cwtl
jns
outsb
mov
out
add
adcl
and
in
subb
pop
fimull
out
or
in
adc
or
add
cmp
jae
push
add
jmp
test
or
mov
push
cmp
add
lcall
mov
add
inc
jo
ljmp
xor
cmp
mov
pop
enter
xor
adc
jecxz
test
lret
mull
aaa
std
cmp
out
add
imul
fadds
testl
mov
sarl
dec
cmp
rclb
jns
xchg
adc
add
cs
adc
lret
dec
cs
jne
push
xchg
push
cltd
add
cli
fisttps
pusha
ret
ja
sub
test
aas
lcall
push
pushw
out
mov
mov
fnstsw
dec
push
jmp
mov
push
jge
call
clc
xchg
pop
or
dec
jg
jnp
repnz
jecxz
std
mov
mov
pop
mov
out
xor
mov
shrb
icebp
idivl
test
out
add
lods
sub
aam
in
cs
fs
cmp
add
lret
push
in
lods
sbbl
mov
add
fmull
pop
jne
push
cmp
push
push
inc
fisubrs
jmp
cvttps2pi
inc
pop
push
inc
ret
jmp
fadds
bound
lods
jae
pop
add
xchg
sbb
pushf
jmp
cs
repz
inc
inc
add
cmp
ret
jno
or
stos
jno
dec
fisubl
and
xor
cmp
test
out
loop
lret
lcall
cmc
pop
push
stc
jecxz
clc
push
and
popf
andb
xchg
stc
push
orb
push
arpl
push
or
and
aam
and
test
add
aam
sbb
faddp
repnz
mov
add
inc
movl
imul
jmp
pusha
stc
insb
pop
xor
adc
sbb
mov
add
mov
lods
daa
ret
cs
pusha
scas
or
jmp
xor
push
xchg
cmpl
or
jmp
aad
dec
mov
pop
sub
xor
ficomps
inc
cmpb
adc
iret
mov
push
jno
push
push
test
pop
sbb
jecxz
jmp
test
lods
inc
push
clc
shl
mov
xor
ljmp
insl
push
or
inc
pusha
jmp
shlb
and
mov
pop
push
push
push
sub
and
leave
jnp
push
jne
frstor
pop
neg
les
sub
add
or
lret
push
daa
xchg
popa
test
je
adc
mov
scas
cmpsl
fwait
bound
sub
xorb
shll
loope
adc
push
add
mov
add
out
mov
mov
aad
aam
dec
jmp
mov
pop
push
nop
sbb
mov
push
jecxz
cmpsb
jno
pop
xor
ja
sbb
sti
dec
pop
les
mov
add
nop
add
cmp
ret
pop
dec
dec
cmc
adcl
into
jns
into
add
mov
aaa
add
or
jp
movb
pop
out
cmpb
imul
insl
insb
add
push
inc
psubsw
loop,pt
and
fcomps
inc
mov
in
mov
inc
loopne
jb
mov
cmp
xor
mov
pop
or
pop
inc
jg
ds
xor
sbb
xor
stos
int
loope
jp
sbb
shl
xor
rcr
push
push
xor
mov
push
xchg
sub
sub
jo
mov
inc
jl
push
dec
cli
nop
pop
mov
xchg
pop
jno
xor
arpl
pop
sub
sub
je
or
fildl
lock
enter
fs
sti
mov
popf
fdivrl
call
jle
fdivrl
insb
orl
add
mov
pop
jl
cmp
daa
sbb
mov
mull
repz
rcrb
cmp
xchg
adcl
idivb
sub
jns
pop
dec
repz
push
rorl
cltd
xor
inc
jno
mov
fadds
mov
push
andb
mov
or
dec
pop
sub
jp
xchg
sar
mov
dec
out
sbb
jne
or
jmp
and
mov
mov
popf
clc
and
pop
cwtl
test
out
xchg
add
push
add
xlat
mov
add
gs
cmp
add
out
cwtl
mov
xchg
fldl
out
aad
repnz
sahf
shl
orb
mov
icebp
cmp
xchg
push
mov
jns
hlt
inc
add
arpl
test
sbb
or
pop
gs
daa
jae
dec
xlat
cwtl
aaa
jmp
int
mov
loopne
bound
cmpsl
push
mov
rol
test
or
inc
sbb
mov
push
enter
or
pop
rorb
fcoms
fucompp
pop
loop
or
jg
push
movsl
out
fmuls
push
add
in
pop
push
push
into
jns
adc
icebp
ja
adcb
lcall
adc
hlt
scas
insl
lahf
push
bound
fs
adc
push
jmp
clc
mul
and
add
or
mov
mov
push
jg
sub
insl
or
mov
neg
mov
jae
pop
pop
sub
pop
mov
jmp
mov
cmp
and
bound
rol
ljmp
scas
jmp
push
sub
sbb
out
call
insl
mov
addr16
test
mov
fnstcw
push
jp
bndstx
enter
subb
inc
rcrb
lods
sarl
lock
pop
sub
cmp
xor
adc
lock
and
fidivl
push
enter
sub
jne
or
es
dec
mov
sub
lds
jbe
jmp
or
mov
in
fwait
pop
adc
ja
sarl
and
xor
push
sbb
or
mov
xchg
mov
add
cld
cmp
xchg
add
jecxz
push
cmp
inc
in
fisttpll
mov
push
in
loop
int3
inc
nop
dec
push
sbb
gs
mov
ss
push
nop
sbb
jmp
pop
pop
jmp
out
rcrl
outsb
popa
and
jg
sub
jg
mov
dec
push
jmp
lock
test
jmp
mov
xor
pop
pop
in
sbb
and
rcr
mov
mov
ss
mov
add
dec
jne
cmp
xchg
sbb
mov
sbb
rorb
mov
outsb
dec
icebp
scas
and
sbb
and
mov
fs
xchg
mov
add
sar
in
sub
sbb
lods
add
xorl
mov
sub
adc
and
cmp
mov
sbb
adc
push
mov
mov
roll
add
imul
fmuls
std
dec
or
inc
test
loopne
add
push
dec
and
mov
mov
cs
mov
xor
adc
insl
sbb
xor
cmp
sbb
sub
nop
leave
pop
jb
xchg
mov
aad
outsb
shlb
popa
pusha
inc
push
xchg
pop
jl
ret
xchg
lods
fildll
and
sub
inc
push
rcll
and
add
pusha
movswl
push
popa
mov
xchg
das
adc
pop
je
pop
add
push
inc
cld
and
sub
and
cmp
dec
push
addb
push
xchg
cmc
stos
rclb
pop
add
test
mov
xchg
jo
daa
inc
pop
insb
ljmp
sarb
enter
cmp
rorl
ror
pop
repnz
adc
stos
inc
movl
mov
int3
add
xor
js
mov
mov
jl,pn
daa
pop
mov
in
or
sbb
cmp
sbb
orb
dec
in
decb
add
add
lock
add
push
scas
push
or
dec
mov
cli
out
xlat
sbb
sti
jge
dec
or
fildl
jl
cld
xchg
push
cmp
sub
push
mov
vhaddpd
adc
inc
push
or
out
daa
cs
mov
jns
adc
minps
pop
loopne
imul
les
gs
lds
sbb
jecxz
or
or
mov
test
movsb
fsub
ret
lods
cmp
cwtl
sbb
std
das
xlat
adc
aad
sub
or
dec
pop
lret
and
sbbb
jns
out
or
jmp
mov
jecxz
lds
lds
pop
shr
jmp
data16
sub
cli
sbb
stc
and
addl
jbe
loope
and
inc
daa
xor
inc
xor
xchg
push
mov
sub
mov
xchg
into
jl
jp
and
adcl
daa
jmp
sar
jg
push
lcall
inc
icebp
sbb
out
imul
cmp
add
subb
lcall
and
pop
mov
lods
in
mov
int
ret
or
mov
sbb
in
aam
mov
lds
mov
cs
test
mov
mov
mov
and
sahf
xor
imul
je
xchg
mov
push
pop
pop
fdivr
icebp
push
movsl
xor
fidivrs
xchg
dec
movl
psubd
jp
adc
das
add
arpl
inc
sub
cs
imul
mov
or
cmp
inc
inc
inc
pop
outsl
adc
pop
out
add
xchg
jecxz
mov
popa
dec
mov
fldcw
lcall
jg
xchg
shlb
push
lods
or
outsl
xchg
fs
sbb
lods
and
pop
test
lea
pop
sbb
aaa
ja
clc
or
ds
adc
sub
xchg
sbbl
scas
cs
inc
or
sub
pop
psrlq
in
divb
popf
movsl
xchg
lods
push
mov
fstpl
lret
test
push
movsb
jl
push
sbb
push
and
stc
push
or
sub
jo
out
movsl
int3
xchg
adc
xchg
xlat
or
lods
or
mov
add
jmp
mov
stos
popa
xor
pop
repz
in
subb
inc
push
cmp
add
adc
arpl
xor
dec
divl
es
ror
and
je
pop
push
inc
fsubrl
mov
icebp
dec
lods
lea
enter
cmp
fwait
jae
js
cmpsb
popa
popa
daa
ja
lea
xchg
adc
or
pusha
dec
incw
iret
shlb
push
in
jle,pn
cmc
pop
kmovw
addr16
mov
push
loop
rcrb
iret
xor
fisttpll
jmp
hlt
mov
arpl
sub
adc
or
push
mov
or
xor
pop
das
add
popa
and
test
sub
test
nop
lret
add
jl
gs
mov
clc
mov
ror
pop
int3
rcr
xchg
cmp
dec
mov
push
add
push
imul
add
in
add
das
pop
push
icebp
lods
lret
adc
fildl
stos
sti
filds
in
mov
fildl
dec
pop
xor
ret
enter
insb
int
call
pop
dec
mov
inc
add
sub
xchg
pop
rcrb
inc
push
ds
ret
and
pop
jmp
subb
add
add
jecxz
inc
imul
and
mov
sbb
inc
xor
push
das
dec
xor
add
ss
pop
add
add
js
icebp
arpl
jae
mov
pop
dec
or
jg
sbb
and
sub
push
movntps
lods
or
pop
out
sub
mov
loopne
insl
push
call
add
or
shll
loop
mov
scas
jmp
push
movl
push
stc
std
pop
aas
int3
jl
dec
outsl
sub
mov
sub
ljmp
cli
push
push
cmp
jmp
cwtl
dec
push
daa
clc
push
xchg
push
call
push
jmp
cmp
addl
shrb
and
dec
test
xor
movsl
mov
call
cmc
adc
xchg
jmp
cmpsl
pop
shlb
out
add
mov
pop
sub
mov
xor
cmp
add
add
pop
push
jae
movsb
test
xchg
cmp
bound
nop
in
subb
pusha
sti
decl
stos
scas
push
arpl
mov
add
dec
jmp
cmpl
pop
sub
mov
fmull
inc
out
iret
add
pop
adc
ret
push
or
lock
std
pushf
add
mov
mov
add
mov
adc
add
push
bound
outsl
in
nop
add
jl
cwtl
js
or
sub
and
add
or
lds
mov
push
cmp
and
nop
adc
test
popa
int
mov
and
outsb
testb
movsb
jb
and
jae
sbb
xor
mov
hlt
hlt
subl
pop
lock
xchg
int
mov
cmpsb
insl
xchg
std
fsub
and
and
in
ja
add
into
push
fwait
sbb
leave
lock
ja
das
mov
scas
and
addr16
mov
pop
add
loope
ret
test
mov
push
out
or
xchg
clc
mov
xlat
mov
cmc
bound
mov
popa
lods
xchg
call
sti
cmp
dec
ljmp
xchg
stos
sub
adc
lds
dec
and
es
push
push
push
inc
jp
pop
ljmp
imul
lret
pop
adc
inc
out
mov
jmp
insl
mov
xor
add
mov
out
pusha
pop
jmp
clc
out
testb
mov
inc
jmp
mov
arpl
hlt
pop
jae
mov
ja
cmp
mov
add
xchg
pop
lock
loope
jne
out
fildll
mov
cli
mov
cwtl
adc
mov
xchg
xor
aam
shl
rcrb
push
cmp
push
push
std
in
mov
pop
or
adc
pop
pop
xor
xchg
scas
push
in
or
scas
pop
add
xor
xor
test
arpl
jnp
mov
push
mov
insb
pop
push
scas
lret
repnz
shrb
sub
or
jb
popf
mov
aad
mov
adc
xor
das
pop
pushw
dec
dec
mov
mov
movsb
jg
cmc
mov
pop
flds
ljmp
xor
mov
jb
dec
pop
lods
daa
jno
mov
stos
xor
outsb
lock
mov
inc
inc
fcompl
jo
sbb
dec
fs
cmc
repz
adc
in
orb
lret
and
or
movsb
push
xchg
mov
push
rcrb
in
icebp
pop
outsl
and
rcrb
jns
push
jae
icebp
call
je
in
inc
pop
fldln2
sbb
lahf
clc
dec
lods
xchg
out
cmp
mov
push
dec
outsl
push
add
or
xchg
pop
icebp
in
imul
sti
pop
aad
or
ja
fisubrl
push
xchg
mov
push
lods
mov
jge
rolb
adc
jae
test
or
pop
hlt
push
lahf
or
inc
pop
sub
call
fistpl
mov
and
or
jle
mov
pop
jmp
inc
or
das
or
cmp
cmpsl
fs
mov
mov
or
xor
add
jns
and
cmpb
dec
popf
out
mov
fcompp
adc
shl
cli
out
bswap
and
pop
xchg
push
pop
xchg
iret
add
jmp
mov
xlat
fst
idivb
mov
lahf
cld
mov
pop
pop
pop
adc
adc
mov
jl
sbb
push
fisttps
rorl
push
pop
in
jb
out
sarb
dec
push
xchg
sbb
and
rorl
out
cld
push
pusha
sub
pop
pop
ds
jbe
dec
scas
popa
jl
mov
fdiv
inc
lea
adc
add
jmp
ret
scas
adc
stc
inc
jecxz
and
cli
pusha
mov
xor
dec
leave
or
mov
cmp
jmp
pop
sarl
adc
ret
dec
adc
lahf
test
xchg
jno
inc
daa
jnp
sbb
std
sbb
scas
mov
xchg
cld
cmp
popa
xor
push
inc
adc
dec
adc
aas
pop
xor
lret
ds
xchg
jge
cs
push
pop
inc
fs
sbb
and
mov
jmp
ja
dec
lds
out
push
pop
inc
or
stos
ss
add
into
xlat
jns
dec
idivb
cmp
inc
jge
or
roll
dec
or
or
fmuls
in
add
loopne
cmp
xchg
stc
movsl
inc
test
sub
adc
rclb
cmp
loop
int
xchg
movsl
cmc
in
arpl
pop
mov
mov
loope
stos
jmp
jmp
dec
aad
ja
ret
repnz
sbb
ss
cwtl
loope
jns
nop
or
pop
in
dec
cmp
sub
dec
jne
enter
and
fcmove
nop
ret
je
ret
and
adc
push
push
push
push
pop
addl
fs
and
dec
mov
mov
add
ret
jecxz
adc
cmpb
push
pop
add
or
enter
mov
jge
jp
rcll
push
inc
jmp
or
mov
aaa
and
jmp
xchg
and
cmp
sbb
ljmp
jge
add
sub
fimuls
or
test
dec
sbb
jbe
push
fdivrl
clc
add
andl
hlt
and
push
sbb
pop
stos
mov
cmp
fs
lret
in
or
sub
add
adc
add
in
mov
xor
add
mov
rol
jnp
inc
outsl
jle
sahf
inc
or
dec
jbe
push
cs
adc
in
outsl
das
movlps
out
pusha
push
test
push
add
sub
push
cmp
xchg
add
das
xor
cmc
add
fwait
sub
fdivs
push
xor
push
mov
dec
aaa
or
sub
adc
jmp
mov
or
push
loopne
sub
clc
repz
pusha
xor
dec
pop
aaa
sbb
dec
or
lock
nop
xor
int3
push
ja
cmp
add
aas
cmpb
pop
xor
aad
sub
pop
jge
in
cmpb
dec
faddl
sbb
mov
dec
sti
mov
sub
jl
fnstsw
clc
das
vmovupd
mov
pop
enter
in
pop
icebp
mov
xor
pusha
out
stos
push
mov
inc
add
adc
pop
mov
cli
inc
or
xor
inc
lahf
jbe
js
push
mov
xchg
pop
sbb
or
xorl
pop
fidivrl
sarl
dec
stos
mov
jne
stc
aam
mov
out
idiv
ret
pop
clc
inc
idiv
dec
in
inc
pop
lds
ds
push
add
cmp
push
ds
inc
mov
cmp
and
jae
pop
lcall
mov
xor
loope
sub
sbb
orl
jnp
push
cmc
movsb
dec
cmpxchg
addl
jge
xor
add
lea
clc
xchg
es
mov
ss
cli
movsb
rorl
sbb
popw
adc
sbb
xor
dec
lret
xor
lret
mov
not
xchg
lahf
fadds
das
pop
or
add
lods
mov
sub
pop
jmp
push
xor
xor
push
das
xchg
push
jp
and
add
shl
aad
add
mov
ljmp
adc
incl
mov
or
jg
dec
daa
mov
sbb
mov
sub
ljmp
cld
sbb
or
add
pusha
mov
fmull
nop
dec
or
data16
loopne
jmp
fisttpl
cmp
mov
lds
cwtl
cmc
cld
cmp
xor
movl
cmp
inc
mov
gs
sbb
icebp
xor
push
xchg
cmp
inc
movsl
jle
push
push
imul
add
mov
jmp
cmc
jnp
jo
cmp
add
pop
adc
push
mov
jge
ret
dec
add
pop
push
clc
orb
adc
lret
cmp
idivb
cmp
jno
sbb
ja
inc
outsl
cmc
inc
pop
mov
mov
ret
cmc
pop
and
jb
or
jbe
incl
shr
push
mov
leave
pop
lds
daa
add
int
loope
xor
jnp
or
push
xchg
ret
mov
mov
sbb
push
cmp
xchg
loopne
inc
xor
push
rcl
sub
out
or
mov
jmp
inc
add
test
gs
jmp
pusha
aaa
cmp
add
mov
stc
imul
lea
xchg
out
push
xor
sub
adc
mov
xchg
add
push
mov
lret
jbe
js
inc
and
push
insb
or
mov
mov
clc
and
xchg
lcall
push
lods
fstl
fcomps
mov
or
aas
loope
fnstenv
add
aas
in
adc
outsl
push
shr
jmp
pushf
mov
xchg
shlb
testl
imul
push
leave
cli
mov
xor
inc
push
fmulp
pop
xor
ret
and
arpl
inc
pop
xchg
cwtl
scas
inc
or
mov
aam
xchg
cmp
push
or
sub
pop
adc
dec
std
push
sub
testl
mov
jbe
jmp
mov
aas
xor
daa
cmp
sbb
in
and
aas
xchg
pop
movsl
dec
js
and
cmp
rorl
inc
lds
add
icebp
subl
push
ljmp
add
or
or
sub
inc
sub
mov
pop
rcrb
push
pop
pop
pop
push
mov
adcb
sub
and
pop
inc
nop
jno
incl
enter
out
pop
pop
movsb
lea
adcb
dec
movsl
cmp
add
ja
add
jmp
fstpl
les
fsub
mov
loop
push
sti
xchg
inc
aas
mov
std
mov
dec
push
les
and
fldt
xor
push
outsb
sub
xor
aad
fwait
movsl
inc
into
loopnew
test
and
mov
jmp
push
push
xchg
mov
add
gs
movsb
xlat
mov
insl
sub
filds
jo
repnz
adc
mov
pop
and
gs
ficoms
lock
and
push
jmp
or
shlb
sbb
push
jb
test
out
sub
add
hlt
pusha
outsb
cmp
add
push
popf
outsl
popf
hlt
arpl
loope
sbb
pushf
inc
and
pop
addr16
push
lret
xor
xchg
sbbb
pop
sub
jp
in
loop
add
jg
push
mov
jnp
push
push
push
js
addr16
jae
inc
adc
or
mov
movsl
jl
lret
mov
sahf
or
mov
sub
lock
repz
mov
mov
lea
cwtl
aad
mov
add
icebp
test
imul
push
test
out
or
jl
add
jmp
scas
int3
cmp
sub
leave
cmc
add
lds
jge
jl
add
push
in
in
sub
dec
ds
inc
xchg
xor
cmpsl
push
mov
fs
push
lahf
loop
jne
jge
mov
jge
pushl
jo
cmp
push
and
shr
or
cmp
outsl
mov
cmpsb
sub
pop
xor
fisttps
pop
xor
fstl
xor
jg
and
ret
jmp
loope
das
mov
ja
cli
inc
cli
adc
jle
pop
and
inc
jno
jl
fdivrs
jmp
adc
xchg
fstpl
pop
std
les
and
nop
insl
imul
js
sbb
adc
pop
sub
pavgw
jne
test
mov
sub
mov
out
adc
stos
adc
or
lahf
adc
andb
or
or
push
mov
fildll
xchg
dec
lock
lret
mov
mov
and
xchg
fchs
and
add
scas
add
dec
push
pusha
pop
cld
or
stos
fs
leave
repz
subl
push
and
mov
inc
rorl
lods
add
sbb
pop
cld
cmp
out
lcall
ret
fildll
sarl
out
fs
test
clc
out
fcompl
and
stos
push
push
add
imull
or
rcl
adc
nop
push
fidivl
or
ret
pop
pop
leave
cmp
inc
mov
inc
sbbl
mov
pop
push
pop
jl
sub
and
and
push
xchg
fmuls
xor
or
jo
mov
push
xor
cmp
mov
jmp
cwtl
jae
mov
push
or
dec
loope
sub
mov
xor
mov
movsl
pop
incb
add
das
lock
lea
push
add
shlb
xchg
pop
popf
mov
pop
cwtl
or
ds
dec
xchg
xor
test
jno
sub
mov
or
movsb
xchg
imul
sbb
adc
das
scas
sbb
and
mov
lds
mov
loopne
or
xor
dec
sub
add
or
cli
jge
cld
push
dec
push
add
add
cs
pop
add
push
inc
dec
test
and
sbb
cmp
popa
lea
sqrtps
lds
cli
xor
add
adcl
pusha
xchg
stos
aad
test
neg
add
dec
scas
or
and
and
sbb
enter
or
out
mov
fadd
jmp
jmp
jo
int3
inc
fdiv
or
fs
loope
cmp
add
movb
mov
adc
adc
idivb
push
outsb
jmp
mov
dec
mov
cmp
pop
fwait
lock
push
xchg
ljmp
and
mov
mov
addb
push
loop
sub
inc
rcrb
sbb
and
test
xchg
jg
mov
fstl
leave
lret
jle
inc
scas
mov
sub
pop
mov
movl
or
and
sub
jl
sbb
in
pusha
jle
fsubrp
pop
outsb
lock
pop
pushw
mov
test
pop
fsubl
xchg
in
out
cmpl
pop
adc
test
mov
push
adc
popa
jge
sbb
es
cs
add
jge
rorl
dec
and
push
jnp
inc
mov
push
cmp
add
xor
imul
mov
jmp
prefetchnta
cltd
sbbl
nop
testb
pop
inc
mov
and
push
jbe
push
cwtl
shll
enter
neg
jmp
popf
loopne
jae
mov
and
pusha
sbb
adc
push
push
mov
mov
int3
adc
jle
sbb
mov
add
xchg
loope
inc
subb
outsl
sub
dec
pop
out
adc
jae
sub
mov
push
jge
mov
testb
push
or
inc
ret
paddsb
sub
mov
incb
es
dec
mov
jmp
out
outsl
inc
push
push
pop
mov
mov
call
xchg
xchg
xchg
dec
pop
mov
cmp
pop
mov
add
cmp
pushl
or
mov
mov
cmp
ret
pop
aaa
pop
fs
or
mov
imul
sub
add
and
daa
fistps
movb
push
and
or
in
lock
into
cmpl
push
sub
or
adc
inc
aam
loope
jp
cmp
mov
adc
les
rcrb
fs
mov
call
pushf
fisttps
push
repnz
jno
mov
and
daa
fnstenv
lcall
lahf
das
pop
and
cltd
push
das
bound
and
scas
push
rcll
inc
xor
pop
dec
push
cmp
pop
scas
subb
repnz
adc
and
mov
or
adc
jne
push
mov
dec
jmp
std
dec
scas
aad
subl
iret
push
cmp
call
xchg
scas
mov
pop
pop
pusha
xor
les
aad
dec
orl
xchg
iret
aas
call
out
jno
jg
sub
int
ret
jns
addb
pop
std
shll
and
adc
adc
pusha
pop
push
jmp
stos
lods
andl
pop
xor
and
pop
push
and
int
andb
sub
jb
in
comiss
dec
pop
rorb
out
scas
hlt
out
adc
scas
push
and
in
das
ret
dec
cmp
pusha
loopne
gs
push
call
add
jmp
push
pop
sahf
push
ret
sahf
sub
leave
dec
inc
lds
pop
add
adc
arpl
incl
mov
minps
inc
cmpsl
aam
jl
pop
jl
shl
mov
adc
mov
mov
jge
je
inc
add
insl
jne
lret
notl
add
jg
jns
rclb
pop
and
or
aas
pop
xchg
orl
and
inc
dec
lahf
mov
filds
dec
imul
shl
cmpsb
ret
mov
adc
int
push
cmp
push
adc
dec
add
jp
sub
scas
mov
mov
mov
or
lds
jb
jb
dec
icebp
push
xchg
stos
repnz
adcb
inc
push
adc
test
jnp
lret
pusha
dec
push
ja
mov
loopne
gs
push
mov
scas
jl
push
in
and
mov
roll
adc
pop
dec
mov
push
cli
popf
fs
adc
jmp
push
leave
dec
shrb
mov
fnstcw
add
test
inc
inc
pop
cmp
jns
js
pusha
test
pop
std
push
cmp
rcrb
and
in
jg
ljmp
sahf
jae
mov
testl
mov
pop
or
rcll
add
insl
mov
xchg
pushw
push
and
inc
aam
jmp
xchg
dec
sub
insl
add
jb
popf
shrb
adc
push
fstpt
mov
or
pop
or
and
mov
sub
das
cli
adc
das
add
hlt
add
daa
jns
mov
jmp
push
sub
and
pop
into
out
adc
mov
mov
push
mov
add
andl
rcrb
sbb
loopne
notl
and
cmpsl
mov
cli
add
pop
lahf
lock
fs
sub
or
sbb
mov
mov
add
or
mov
out
push
clc
scas
add
sar
push
mov
pop
mov
sbb
pop
imul
fs
xor
loop
pop
xchg
inc
or
jb
push
pmuludq
xchg
cmp
pop
mov
jno
xchg
inc
mov
adc
sbb
xchg
repz
fcomps
nop
je
xchg
mov
std
cmp
dec
testl
repnz
and
or
cmp
mov
lret
jbe
outsl
adc
xorb
adc
sbb
ljmp
adc
jle
enter
ds
sub
push
mov
jmp
and
push
mov
push
jge
popf
adc
lahf
pop
mov
sub
mov
dec
push
icebp
sbb
xchg
rcrb
cmc
lds
or
inc
rol
mov
dec
insl
mov
rcll
or
out
push
add
mov
out
lcall
add
aam
data16
or
push
xor
or
jle
lods
or
cmp
rorl
ret
xor
frstor
push
popf
pop
push
ljmp
outsb
and
jno
add
mov
mov
mov
ljmp
sarl
jae
inc
cmp
cmc
lcall
adc
repnz
pop
into
cmp
mov
out
sub
pop
mov
sub
jmp
xchg
in
add
inc
ds
pop
jbe
lahf
xchg
out
or
push
xor
cmp
pop
add
dec
sub
sarl
cmp
push
or
push
testl
stc
sub
daa
fcomps
add
rcl
xorb
push
or
cld
jl
jmp
add
xor
out
cmp
jb
arpl
not
ret
dec
cmp
jne
push
dec
loop
frstor
jb
sub
inc
filds
sarl
or
or
push
xor
xchg
xchg
xor
or
int3
div
add
push
shll
jp
push
mov
push
adc
mov
or
sbb
mov
scas
jecxz
add
push
fcompl
push
jbe
test
jns
xchg
fsub
or
ret
ljmp
stc
jle
in
test
pop
test
dec
inc
scas
dec
add
pusha
enter
xchg
pop
jmp
loope
das
out
sub
shl
mov
icebp
mov
mov
iret
add
adc
or
add
orl
xor
cs
lods
mov
loop
add
in
int
push
sbb
and
aam
and
cmp
jno
mov
inc
xchg
hlt
lcall
scas
and
or
test
rcll
cld
mov
xor
mov
or
popa
jge
and
fstl
pop
push
pop
mov
sahf
mov
inc
fs
subl
imul
test
fisttpll
fsubs
repnz
push
mov
in
test
adc
xchg
dec
in
jmp
fmuls
das
inc
adc
add
sub
les
loope
push
das
test
jmp
push
add
cwtl
in
test
pop
inc
stc
jl
or
and
pop
pop
push
jmp
int3
push
mov
or
and
mov
movsb
shll
test
pop
sar
loope
push
cmp
xchg
dec
jb
decl
xlat
mov
or
add
pop
push
inc
sub
jno
lret
and
xor
ficompl
pop
repnz
shr
jnp
mov
cmp
add
and
in
and
negb
dec
mov
sbb
ja
cmp
call
or
cmp
and
ljmp
add
pop
fsubl
add
stos
mov
ret
push
stos
add
jnp
out
cvtps2pi
push
and
not
icebp
jmp
add
cld
andb
sub
push
test
sbb
cs
xchg
into
xchg
lahf
and
jecxz
pop
add
inc
jmp
push
pop
pop
mov
ret
fmulp
pusha
push
adc
adc
cltd
xchg
dec
cs
js
sbb
inc
dec
jb
leave
mov
pop
mov
sti
popf
shrb
sub
sbb
je
cwtl
ja
shrb
outsl
out
jp
lret
push
jmp
nop
sub
ds
pop
cmc
scas
lcall
cmpsb
lods
xchg
pop
sub
add
xchg
rcll
cmp
dec
adc
lcall
mov
add
ja
dec
push
scas
adc
sahf
pusha
sbb
pminsw
shr
or
icebp
mov
adc
stc
push
fwait
aaa
test
push
mov
xor
fiaddl
add
cltd
subb
xchg
xadd
adc
jmp
or
adc
xor
fldl
repz
jo
dec
xor
add
push
xchg
aad
or
mov
sti
xor
ljmp
or
out
cltd
out
dec
fsubr
aas
pop
sub
fiaddl
or
pop
xor
lea
or
mov
jne
mov
dec
mov
push
jp
cmpsl
adc
cwtl
adc
xor
push
jb
adcb
dec
sub
pop
das
scas
cmp
xor
push
push
add
cmp
xchg
dec
and
mov
jo
and
xor
dec
pop
scas
enter
insb
or
shr
data16
rorb
pop
mov
cmp
xchg
jbe
lret
push
insb
sub
shrb
or
xchg
inc
or
inc
xchg
mov
add
loope
andb
cmp
mov
inc
push
rclb
inc
fbld
pop
xor
dec
pop
gs
or
and
fdivrs
mov
imul
out
orl
sbb
daa
jne
call
dec
jne
sbb
addr16
andb
mov
sub
pop
or
dec
fsubrl
cli
dec
cs
pop
sbb
iret
lahf
and
inc
jecxz
out
xor
sbb
fmulp
pop
scas
mov
push
clc
mov
sbb
ffreep
ja
aad
notl
sub
movsb
jns
push
xchg
xchg
pop
jg
jnp
and
orb
aas
shr
add
or
cmp
rorl
lods
in
sub
leave
test
xor
out
mov
scas
ljmp
adc
push
aaa
fwait
xchg
in
daa
pop
mov
and
push
sub
or
mov
imul
std
cmc
mov
mov
or
std
pop
jbe
mov
mov
jg
ljmp
xor
or
inc
mov
jbe
dec
push
mov
xor
mov
leave
cmp
pusha
lock
sbb
xchg
lahf
mov
adc
mov
aas
xor
mov
jmp
add
xor
xchg
ret
xor
dec
pop
jno
add
out
rorb
test
mov
enter
or
jl,pn
mov
mov
in
in
scas
push
sbb
fdivl
and
insl
stos
xor
adc
xor
and
mov
mul
adc
out
or
sub
push
mulb
add
jb
jmp
rcl
pop
mov
pop
add
push
cmp
mov
mov
xchg
popa
enter
mov
add
push
mov
push
jmp
int
dec
push
cmp
mov
lods
rcl
out
mov
and
je
adc
push
mov
outsl
aam
incl
test
clc
pop
mov
or
sub
test
sub
pop
in
mov
adc
mov
mov
and
cmp
loope
pop
mov
and
adc
cld
sbb
ja
mov
cmp
lods
mov
shll
cmc
sbb
mov
mov
std
movsb
enter
add
jecxz
and
mov
push
xor
jge
add
add
mov
test
aaa
jo
lcall
or
xor
addl
jb
dec
jge
pop
and
lahf
scas
inc
std
ss
push
stc
ds
andl
pop
jle
pop
cmp
add
inc
pop
jb
sarb
dec
mov
scas
pop
push
push
sbb
mov
push
jmp
mov
movsl
adc
jbe
adc
ja
adc
xor
pop
stc
std
dec
cmc
sbb
jmp
icebp
or
cmp
arpl
shrb
sbb
scas
push
mov
rolb
xor
popf
and
add
push
push
add
sarb
jmp
popa
xor
mov
addr16
aad
add
dec
dec
cmpsl
fistps
pop
push
dec
add
adc
iret
bound
jmp
pop
imull
sbb
std
sbb
cmc
jecxz
lret
leave
outsb
add
jns
sub
push
pusha
cwtl
xchg
and
jmp
enter
jno
lahf
pop
sti
pop
sub
push
push
xor
andl
addr16
rcrb
push
and
dec
adc
mov
inc
push
mov
not
add
aas
jmp
repnz
pop
shll
xor
jae
mov
cltd
push
push
out
push
push
mov
pop
jecxz
cltd
jge
sbb
mov
stos
repnz
xor
imul
inc
sub
mov
repnz
or
or
jp
adc
pop
cs
cmp
js
mov
or
inc
jl
inc
xor
mov
jg
mov
not
repnz
dec
lds
dec
ret
inc
mov
fcompl
ret
or
mov
add
pop
sbb
and
dec
cmp
push
add
out
add
jno
ljmp
or
ds
mov
aad
sub
push
jmp
xrelease
push
pop
add
pop
jne
cmp
sub
push
pop
xor
push
pop
mov
sub
je
shl
inc
add
or
fucomip
dec
xchg
jmp
adc
mov
out
inc
jmp
mov
add
je
mov
fisttpl
das
shl
push
add
call
test
les
or
dec
xchg
loope
xor
dec
mov
xchg
outsl
leave
or
into
out
out
aam
iret
cld
adc
or
adc
and
mov
jne
or
and
xchg
add
out
or
daa
mov
add
mov
inc
insb
and
dec
or
pop
add
hlt
inc
pop
jmp
nop
cmpsb
add
adc
dec
add
shl
aam
call
dec
push
popa
inc
das
daa
rolb
jmp
pop
mov
xor
addr16
fwait
pusha
mov
out
mov
mov
out
mov
xchg
popa
push
or
lret
pop
daa
jl
les
inc
xor
loopne
incb
mov
mov
stos
add
push
push
jne
das
in
jns
add
into
jae
inc
jg
jno
test
jns
adc
out
cld
mov
pusha
inc
sti
or
shlb
clc
xlat
cmpps
pop
xor
test
cmpsl
adc
ficoml
call
cli
push
push
adc
ja
pop
push
cs
mul
push
fsubl
ljmp
jle
mov
je
loopne
lahf
xor
add
out
jae
add
movsb
dec
loopne
mov
call
int
fwait
or
lcall
out
pop
pop
adc
sub
and
add
cmp
cmp
dec
icebp
fstl
pusha
rcll
pop
sub
loopne
or
pop
imul
dec
adc
shlb
sub
sub
testb
sub
test
lods
push
push
repnz
push
inc
jns
inc
sub
inc
sbb
mov
sub
sub
ficomps
imulb
inc
inc
call
pop
adc
incl
push
ret
aam
scas
shlb
cld
popa
or
hlt
jge
inc
and
sbb
lcall
fsubl
pop
pop
pushl
mov
lcall
xor
mov
mov
and
dec
js
adc
gs
sub
pop
pop
lods
jbe
stc
add
and
adc
push
iret
daa
cmp
out
sub
jmp
shl
ficomps
and
mov
add
sub
icebp
insl
cmp
cmp
dec
filds
test
rcll
jmp
test
mov
mov
mov
jnp
xor
jmp
in
je
add
shlb
ret
in
pop
add
add
clc
lret
jns
xor
dec
sbb
sub
andb
jo
shrl
mov
insb
jle
fisubl
mov
pop
mov
jg
jnp
sbb
mov
xchg
ffreep
or
lret
add
int3
lret
fmull
xor
cmpsl
lods
or
jae
jl
fdiv
movsl
clc
mov
pop
pusha
adc
dec
add
jmp
adc
test
in
xor
ljmp
cs
xor
push
mov
xchg
lea
movsb
add
outsb
js
ljmp
push
push
push
out
adc
inc
sbb
popl
ret
ret
dec
or
jne
adc
cmp
or
jmp
pop
or
aad
pushf
scas
inc
ret
ret
add
pop
data16
fstpl
mov
xor
push
repz
jne
mov
mov
orb
push
nopl
ret
divb
mov
outsb
xor
pusha
movsl
xchg
inc
push
or
es
cmpsl
pop
mov
xor
sub
mov
fwait
push
mov
loop
rcrb
xchg
lahf
adcb
icebp
jecxz
cmp
xchg
and
orb
out
aad
sbb
andb
aam
in
pop
outsl
repz
int3
aad
out
jecxz
push
push
rorl
stos
mov
adc
jmp
addr16
push
ljmp
pop
sub
incb
xchg
or
kmovb
test
sbb
fimull
mov
sbb
test
inc
fisubrs
stos
xor
mov
daa
inc
mov
add
sarl
fidivl
jbe
andb
push
popa
aaa
mov
ja
mov
mov
insl
push
or
out
dec
call
mov
js
dec
pop
scas
lcall
out
les
call
movb
out
sub
dec
mov
mov
pop
inc
sub
pop
mov
xchg
xor
mov
add
push
das
pop
aam
test
lahf
push
loop
adc
cmpsb
dec
mov
rcrb
fimuls
scas
push
clc
or
mov
push
pop
push
mov
pop
push
inc
push
push
clc
shlb
sub
pop
and
jbe
push
cmp
or
xor
jg
xchg
cmp
cmc
push
notl
outsb
add
jle
and
js
ret
ja
sub
or
arpl
scas
inc
lds
mov
push
mov
pop
test
sub
mov
mov
inc
xchg
xlat
cmpsl
mov
sub
test
push
cld
inc
jb
xor
mov
xchg
push
aaa
ret
roll
lret
jecxz
sbb
inc
cmp
pop
inc
jnp
sbb
cmpl
lret
push
int
pop
mov
int
lea
loop
mov
add
ljmp
xchg
xchg
or
outsb
xor
jl
or
fldcw
fists
into
les
aam
mov
pop
jl
pop
sti
sub
mov
in
dec
stos
test
nop
insl
lds
pop
lahf
push
cltd
shll
sbb
xor
pop
orb
xchg
ss
in
adc
add
dec
bound
sar
jp
xchg
icebp
push
pop
jns
adc
or
std
lds
sti
sub
ret
add
inc
cmp
lahf
add
jnp
mov
dec
add
movaps
xchg
pop
dec
pop
or
push
addb
push
stc
mov
mov
and
xchg
test
int
cmp
out
adc
jns
sub
lret
lahf
bound
ret
sbb
negb
or
pop
xchg
add
lock
fstl
mov
xchg
push
add
cmpsb
out
lods
dec
mov
mov
add
sbbb
xorb
hlt
mov
addr16
mov
mov
pop
jmp
sbb
or
stc
sub
loope
test
dec
pop
adc
xor
hlt
rorl
daa
cmp
add
out
or
sub
push
mov
fnstenv
jb
jbe
inc
cmc
xchg
or
hlt
popa
jecxz
mov
test
sub
pop
lahf
pop
add
cs
jmp
push
sti
inc
fcomp
insl
xor
ja
add
ret
add
or
mov
loop
cmp
iret
fstps
fidivrl
jmp
cli
xchg
mov
dec
iret
loope
push
insb
inc
das
mov
ror
lret
not
mov
pop
pop
jle
outsl
push
adc
dec
push
dec
add
xchg
loope
inc
dec
jmp
mov
dec
pop
dec
enter
ljmp
mov
std
or
lahf
jbe
pop
add
inc
insb
shrb
pop
add
out
cmp
rclb
adc
lahf
sbb
xchg
pushf
xchg
lcall
popf
push
or
sub
ljmp
repz
xor
movsw
or
jne
pop
daa
scas
pop
lahf
andb
sbb
sub
inc
xor
jo
icebp
add
xchg
xchg
inc
fs
and
pop
pop
in
mov
add
mov
arpl
sub
or
push
shrl
jecxz
mov
ret
test
xor
adc
xor
cltd
out
scas
jle
xlat
test
adcb
and
mov
shll
mov
jmp
add
jmp
sbb
mov
bound
push
rcrb
clc
in
sbb
jns
das
ja
inc
and
aas
addl
out
sub
and
frstor
mov
pop
adc
mov
pusha
or
fsubrl
dec
pop
pop
aaa
insl
aad
add
pop
dec
mov
test
leave
mov
sub
bound
sbb
xor
mov
aam
and
xchg
sahf
xor
push
add
inc
push
mov
pusha
add
add
arpl
not
pop
cmp
or
mov
fcomps
in
mov
pop
idivb
cli
aad
jge
mov
push
xchg
mov
mov
inc
aas
adc
sar
push
mov
xchg
out
int3
push
or
cmp
ja
in
sub
sbb
or
fidivrs
sti
dec
or
or
push
mov
adc
dec
stos
outsl
sub
push
mov
dec
jnp
shr
int3
out
adc
xor
cmp
lret
in
int
pusha
jle
out
leave
imul
or
lods
repz
add
ds
insb
dec
pop
sub
popa
jmp
mov
dec
divb
dec
fiaddl
out
sbb
mov
mov
mov
cs
loopne
mov
sar
jmp
pop
pop
dec
inc
or
push
inc
test
mov
lret
xchg
leave
jb
loope
pop
jmp
mov
hlt
pusha
inc
aas
repnz
enter
rclb
add
out
cwtl
push
sub
faddl
call
lret
aaa
aam
or
js
jp
cmp
cmc
fnstenv
pusha
or
ret
gs
sarb
lods
cs
out
faddl
fsubrs
je
jmp
aam
add
mov
clc
push
inc
cmp
mov
dec
xor
rolb
pop
push
test
jl
jle
and
jmp
pop
loop
jne
sub
pop
cli
push
and
mov
lock
rorb
sar
sub
jno
cmp
dec
out
dec
stc
mov
sarb
mov
push
xor
jmp
push
out
xchg
push
add
inc
ja
je
pop
pop
add
sbbl
inc
movsl
cmp
loop
outsb
clc
jl
xchg
sarb
jp
push
shl
pop
in
ss
mul
push
cmp
add
jmp
push
pop
mov
push
and
push
pop
loope
mov
test
in
adc
ljmp
pop
cmp
pusha
xchg
jmp
popa
pop
fnstcw
outsb
clc
jmp
sub
adc
push
mov
push
push
scas
dec
adc
xor
std
ja
xchg
mov
push
add
arpl
or
pop
push
fdivl
push
outsb
jns
push
mov
lahf
shlb
insl
cmp
add
dec
out
push
jno
les
rcr
jno
xor
in
add
rorl
pop
push
dec
pop
cmp
pop
scas
add
nop
jle
in
es
jmp
inc
nop
mov
add
sarb
jmp
addr16
js
mov
add
push
add
ret
aam
daa
jl
jb
rcr
xchg
loope
cmp
imul
add
push
pop
inc
jo
add
mov
std
cmp
push
repnz
enter
xchg
and
add
ficoml
dec
les
lahf
call
in
lock
mov
xorb
xchg
jns
mov
adc
add
add
inc
push
cmp
aas
cmp
movlps
jl
add
pop
cmp
jmp
clc
cli
pop
sbb
pop
add
cmp
cmp
xor
mov
and
sub
dec
push
add
daa
data16
sti
cwtl
pushf
mov
xchg
jno
or
add
or
dec
cmp
xor
jl
jns
sbb
cmp
mov
rcrl
orb
or
jmp
out
push
or
inc
inc
mov
shlb
pop
rorl
ret
loopne
mov
dec
out
or
out
stos
ja
daa
mov
out
popf
adc
test
imul
push
loop
cmc
nop
ljmp
movsl
xchg
push
sub
int
mov
mov
mov
aam
rcr
pusha
push
push
mov
loopne
rorb
jmp
fwait
sub
adc
stc
pop
test
stos
cltd
sub
out
dec
jbe
pop
int
adc
rol
jp
mov
movsl
sbb
rorb
mov
cld
popf
rol
push
loop
jns
dec
cli
add
test
inc
roll
pop
dec
rorb
inc
or
push
mov
sbb
jle
push
ljmp
add
pop
fldcw
push
imul
jae
mov
mov
call
add
pop
sub
imul
mov
add
xchg
outsl
pushf
pop
leave
xor
mov
pushf
lods
dec
std
ret
dec
push
bound
xchg
mov
inc
jmp
cltd
push
or
cmovo
pop
arpl
sub
sub
cs
cmp
and
pop
jbe
xchg
es
jb
inc
sarb
and
pop
add
ret
mov
jge
xor
loope
sub
push
mov
iret
push
pop
lods
push
jecxz
sub
pop
pop
ret
mov
push
xchg
xor
adc
push
ficoms
fbstp
or
std
xchg
imull
jbe
idivb
movsl
cld
inc
mov
shr
or
cmp
cwtl
aaa
lahf
xor
insb
add
xor
inc
dec
jo
clc
pop
jmp
inc
jne
and
pop
push
pop
xchg
fnstsw
scas
dec
adc
cmp
add
jmp
xor
sub
out
pusha
ret
add
pop
or
jecxz
dec
pop
fnstcw
repz
movsb
push
add
int
mov
hlt
sbb
add
pop
hlt
rorb
ja
mov
loop
sub
in
cmp
pop
and
mov
mov
aas
push
enter
xchg
daa
or
in
mov
mov
imul
and
cmpb
dec
stos
repnz
in
test
pop
icebp
sub
dec
aam
mov
mov
pop
das
dec
mov
insb
imul
jo
xchg
pop
andb
adc
js
in
adc
std
sbb
add
jo
cmc
dec
add
sub
mov
pop
sti
xor
in
mov
add
sub
jne
fdivr
enter
sub
aad
push
pop
repnz
pop
add
sbb
ficoml
mov
test
cmc
shrl
pusha
loopne
subb
test
movsl
in
sub
dec
je
imul
shlb
ret
mov
test
int
jl
and
fcmovnbe
dec
pop
mov
daa
mov
inc
jns
sub
and
fcompl
adc
sub
add
imull
jl
fdiv
ret
jmp
ds
and
cld
or
popa
ret
cmp
jns
movsl
test
cld
xchg
xor
or
mov
cmp
repz
pop
test
aaa
decb
icebp
ljmp
int3
push
push
xchg
cmpsl
bound
nop
cmc
mov
fimuls
cmc
into
into
popa
push
sub
or
inc
fwait
cltd
data16
and
dec
sub
out
imul
pop
sub
jmp
push
mov
mov
call
mov
xorb
jmp
add
inc
cld
dec
xor
cmp
xlat
lods
in
loop
sub
or
dec
ds
shrl
add
sti
cmp
cmp
sub
mov
pop
out
lret
dec
pop
enter
mov
xchg
xchg
or
lret
fcoml
es
repz
sbb
add
mov
push
cmpsb
jno
cmp
cmc
mov
pop
mov
and
mov
lret
inc
ret
imul
das
or
jmp
mov
inc
mov
insl
xchg
imul
inc
add
stos
pop
jae
jmp
and
inc
cld
xchg
pop
adc
sarl
mov
push
pop
gs
jge
imul
jp
add
push
sub
stos
jle
jmp
xchg
andl
movsb
shlb
xchg
aam
sti
jo
mov
dec
pop
xchg
ja
sahf
inc
bswap
sbb
imul
xchg
arpl
xor
dec
cwtl
fisubs
xor
xchg
push
dec
shll
jecxz,pt
fadds
jmp
loope
push
cs
add
fildl
jmp
add
sahf
sub
sub
push
add
push
xor
les
xchg
cmp
sbb
fdivrs
mov
dec
dec
and
pop
xor
adc
call
std
xchg
xorl
dec
mov
mov
shl
ret
loopne
imul
js
movsl
mov
pop
gs
push
jmp
loop
lds
bound
lods
inc
adc
test
into
inc
adc
adc
int3
lret
jb
hlt
fs
add
dec
mov
xor
cltd
sub
adc
out
mov
sub
insb
pop
pop
lcall
cmpb
mov
xchg
rolb
not
push
mov
cmp
push
mov
lahf
fcompl
xchg
fstps
jno
dec
orb
xor
inc
ljmp
mov
inc
jne
mov
adc
rorb
add
imul
pop
and
sbbl
sti
jle
sbb
jge
add
in
es
ljmp
and
add
and
mov
pop
push
leave
push
jns
loopne
xchg
sub
pusha
push
and
jne
inc
rcrl
outsb
mov
das
sbbl
out
pop
inc
xlat
mov
pop
pop
sub
pop
mov
dec
pushf
cmp
pop
cmp
push
or
jmp
push
adc
call
repnz
leave
xor
sub
sub
sbb
aaa
mov
lock
sahf
lea
test
jns
enter
dec
mov
popw
aad
add
popf
sub
outsb
imul
sub
xchg
cmp
add
stos
or
hlt
outsb
mov
cmp
iret
ret
fisttps
rcrl
xchg
ja
adc
xor
push
cmpsb
hlt
and
pop
or
movsb
aad
repnz
mov
pop
jle
mov
add
into
or
add
call
nop
add
inc
enter
jns
xchg
out
ret
idiv
pop
push
test
add
mov
xchg
inc
fimull
daa
decl
ljmp
or
lcall
xchg
enter
stos
mov
aad
xchg
push
in
sub
push
scas
sbb
adc
cld
lods
dec
mov
enter
dec
pop
xor
jnp
xlat
jbe
jp
sbb
sub
enter
or
cld
push
sub
xchg
icebp
andb
inc
enter
jmp
in
inc
adcb
push
push
lods
push
add
out
xchg
jnp
fwait
sub
or
test
dec
mov
ret
or
movsl
hlt
ljmp
pop
incb
cmp
shll
nop
xchg
xchg
ljmp
jp
jne
jno
jmp
into
js
dec
push
mov
jmp
repz
pop
popa
or
test
repnz
mov
cmp
sbb
dec
or
sub
je
pcmpgtd
push
cmpsb
adc
cmp
in
jne
or
dec
cld
aas
test
add
popf
fmuls
fldl2e
sbb
xlat
sbb
adc
xchg
sbb
pop
stos
insb
mov
dec
das
int3
andl
mov
jecxz
scas
in
sbb
lods
mov
cmp
dec
mov
cmp
scas
add
cmp
sbb
sub
and
dec
sbb
inc
je
push
mov
jmp
mov
xor
mov
mov
ret
test
and
cmc
inc
xchg
mov
add
jmp
cltd
add
cmp
cs
sub
cs
dec
sbb
xor
jmp
jmp
add
ljmp
jmp
rorb
js
shlb
shr
push
and
ljmp
out
pop
dec
ds
dec
lret
sub
cmc
or
push
and
mov
ss
jge
bound
jns
jbe
daa
pusha
icebp
pop
add
out
sbbl
mov
and
fs
jge
shlb
cmpsl
jb
cmp
in
ficoml
vmwrite
mov
dec
push
shl
pop
adcb
add
cld
xchg
push
orb
pop
pop
adc
popf
push
cmp
add
cmp
mov
cmp
lret
xchg
in
adc
adc
or
push
gs
or
or
shrl
sbb
jb
inc
aad
fistpll
sub
fs
mov
jns
push
adc
sti
loopne
xor
enter
sbb
pop
filds
ljmp
or
in
aas
xchg
pusha
jmp
lods
adc
push
ja
mov
mov
pop
lods
in
inc
popf
test
push
andb
mov
fdivs
dec
push
rclb
popf
sub
es
insb
xchg
jecxz
mov
orl
clc
xor
imul
pop
das
int3
sbb
xchg
jg
push
add
mov
inc
gs
inc
inc
pop
pop
pop
jle
pop
jp
js
push
in
add
daa
jmp
enter
addb
pop
inc
add
push
fs
add
adc
pop
add
or
hlt
aad
ret
subl
add
pop
rcrl
jne
cmpsl
jns
mov
jns
addl
jmp
int3
ss
sub
push
push
pop
mov
adc
inc
or
les
gs
xchg
cmc
dec
sub
push
xor
jmp
mov
or
iret
adc
movsb
pop
je
imulb
scas
icebp
out
xchg
jmp
inc
ss
xchg
xor
outsl
mov
pop
pop
jge
mov
and
pop
push
pop
mov
sbb
pop
and
adc
sub
pop
jmp
shr
jg
mov
lea
xchg
or
jecxz
push
ret
pop
mov
or
add
adc
dec
adc
push
sti
imul
mov
xchg
scas
es
fmul
jnp
insl
pop
inc
push
mov
pop
std
add
out
loopne
xchg
add
xlat
pop
push
jmp
cmc
test
or
fsts
add
pop
sub
pushf
pop
or
lcall
jl
aam
nop
lret
inc
repnz
aad
pop
daa
mov
cwtl
scas
and
or
adc
push
popa
dec
jecxz
push
adc
push
mov
sub
xor
jmp
int3
inc
pop
cs
inc
and
lds
loop
jmp
fsubr
sub
cmp
jae
mov
mov
jb
jae
pop
pushf
mov
stc
add
shl
or
in
pop
pop
push
aam
das
sti
or
test
xchg
loope
pop
cmp
ret
push
mov
jle
je
and
out
add
mov
push
fs
jmp
daa
shrl
jmp
jmp
les
out
popf
jbe
mov
xchg
scas
shrl
push
insl
mov
cwtl
adc
jmp
xchg
insb
inc
rcl
pop
fs
dec
xor
jb
push
mov
repnz
dec
xchg
divl
mov
inc
std
or
add
or
xchg
xchg
adc
or
out
mulb
pop
stc
mov
loopne
sahf
ljmp
cmp
add
add
sub
mov
sub
or
insl
or
xlat
jge
mulb
mov
jmp
pop
or
or
xlat
sub
cmp
outsb
add
fwait
dec
filds
fcmove
or
push
mov
push
xchg
sbb
shl
cld
int
jbe
dec
jo
add
sub
in
pop
rclb
scas
mov
jo
or
das
dec
add
or
pop
mov
inc
pop
hlt
adc
and
and
negl
leave
or
sbbb
stc
inc
sbbl
sti
sub
dec
into
sub
and
outsl
add
push
xchg
call
in
cli
mov
inc
sbb
push
push
adc
cmp
adc
addl
mov
std
jbe
jg
sbb
aas
in
mov
dec
dec
xorb
push
push
jns
dec
inc
add
inc
dec
mov
adc
push
lret
and
and
push
sbb
add
ja
scas
jg
les
cmp
adc
pop
or
inc
fisttpll
push
push
add
inc
sub
ror
repz
or
mov
rolb
outsl
mov
fdivrs
scas
mov
aas
inc
or
div
adc
jnp
cli
imul
enter
and
test
pop
pusha
out
xchg
pop
dec
js
add
pop
push
mov
es
mov
std
jmp
aas
adc
jns
sub
sbb
pop
js
jnp
out
dec
and
and
or
daa
sbb
loop
push
je
pop
jg
icebp
inc
inc
push
mov
jecxz
or
xor
pop
test
xchg
mov
adc
push
mov
adc
cmp
sbb
mov
outsb
xchg
leave
gs
mov
nop
cld
xchg
dec
add
dec
push
mov
arpl
leave
ds
aam
jb
testb
cmpsl
mov
sbb
insb
loope
pop
js
add
outsl
sub
push
dec
orb
sub
shl
mov
sti
and
fucomi
or
loope
lods
nop
sbb
cmp
sub
int
lds
push
test
test
ss
and
adc
sbbl
ljmp
xchg
sub
sub
push
add
out
icebp
cmpsb
add
andl
clc
sub
lret
xchg
das
icebp
lds
pop
push
aam
cmc
adc
cmp
xchg
inc
push
fmulp
or
sub
adc
dec
test
shl
fwait
or
and
xor
mov
and
rcrb
jmp
fimull
shl
lret
fnstsw
or
jle
inc
lea
mov
insb
or
sub
jns
push
fcomp
loopne
cmc
xor
nop
inc
out
imul
cmc
lds
sbb
imul
add
fisttpl
orb
pop
int
shll
call
pop
add
not
jo
cmp
mov
xchg
inc
dec
testl
stc
outsb
inc
icebp
rclb
out
scas
loopne
pop
jns
mov
mov
mov
add
inc
jb
and
or
cmpsb
cs
and
push
pop
ds
sub
lds
sub
je,pt
stos
adc
test
mov
lods
add
icebp
ret
sub
inc
test
pop
push
jg
mov
pop
inc
data16
ds
cwtl
jbe
cmp
cmpsl
mov
sarb
daa
mov
aad
xchg
jno
jg
lret
sub
dec
lret
incl
or
neg
xor
mov
jbe
push
cld
xchg
add
fdivrs
mov
test
xor
rorl
in
lds
pop
push
sub
loope
xor
rclb
inc
jp
cmp
cmp
loop
xchg
or
cltd
incl
sbb
cwtl
nop
push
mov
adc
cltd
in
inc
call
sbb
scas
loopne
push
dec
daa
test
rcl
lods
push
sahf
test
jmp
mov
outsl
inc
mov
jbe
imul
xor
and
faddl
jne
jg
add
test
js
or
mov
dec
add
mov
inc
lock
and
xor
cltd
into
popa
jmp
into
lds
adc
add
mov
and
int
push
sbb
pop
addb
cmp
cmc
sub
xor
and
push
jae
roll
out
and
fidivl
insl
popf
push
add
cli
loop
rclb
pop
mov
add
not
into
push
inc
cmc
add
outsb
cmp
or
ds
add
jno
add
push
push
mov
sbb
and
dec
jne
jmp
jl
ja
call
dec
test
repz
sub
jbe
xchg
int
inc
dec
dec
mov
clc
cmpsb
into
mov
mov
daa
lods
je
and
jl
dec
mov
add
int
xchg
sub
popf
enter
cmp
cld
xor
mov
gs
cmp
adc
js
inc
outsb
fdivrs
xor
mov
rcrb
or
push
lds
shrl
sub
push
inc
sub
jmp
xchg
mov
inc
jne
cmp
xchg
jl
pop
cmc
jns
or
int
ffreep
imul
jae
mov
inc
filds
les
push
mov
inc
movl
xchg
pop
sub
jmp
pop
out
mov
sub
lahf
enter
das
xor
loope
mov
or
add
dec
push
xchg
add
icebp
stc
add
pop
add
inc
stos
lods
or
inc
dec
loop
sub
mov
movsl
mov
mov
mov
daa
jmp
shrl
pop
sub
enter
int
mov
pop
shr
or
iret
ficoml
rol
jmp
fcomps
jnp
popa
repnz
push
pop
mov
or
aas
pusha
dec
repnz
pop
jne
dec
sub
shrl
sbbb
icebp
dec
pop
stc
int3
lds
cmc
fs
stc
xor
into
pop
mov
icebp
mov
enter
sarb
loop
xor
les
flds
pop
cmp
xor
orl
mov
shl
mov
ja
test
push
lds
jle
mov
pop
lods
push
stos
xchg
add
sub
add
das
xlat
cmp
jl
cs
in
insl
outsl
pop
and
lahf
sbb
or
jle
inc
pop
mov
dec
or
stc
pop
xchg
popa
icebp
into
or
nop
or
xchg
sbb
imul
pop
jl
pop
std
mov
in
out
js
dec
sub
push
sub
or
jl
outsl
xor
sub
sub
fadds
push
mov
xor
jmp
insb
push
mov
insl
pop
adc
adc
dec
xor
ja
fildl
pop
add
sub
shl
rclb
pop
and
mov
movsb
pop
jp
insl
out
movsl
inc
dec
xor
mov
sahf
push
jecxz
orb
rclb
fisubrl
ljmp
in
loope
jnp
jno
cmpsl
lods
pop
jmp
adc
sub
and
leave
pop
sbb
push
scas
lea
adc
cmp
lods
xor
pop
cwtl
cli
mov
cli
pop
and
jmp
dec
sub
negl
jecxz
mov
fstpl
push
cltd
or
ljmp
add
sub
push
test
bound
clc
sub
cmpb
stos
xchg
adc
mov
inc
addr16
cs
sbbb
pop
addl
or
mov
push
jmp
out
pop
out
sbb
dec
push
sarl
repz
ret
imul
dec
push
dec
mov
imul
rclb
jmp
sbb
pop
shrb
push
xchg
int
mov
xchg
sbbb
inc
dec
push
fisubrs
cmp
movsl
pop
lret
pushl
push
in
sbb
stos
pusha
lea
call
mov
xchg
sub
sbb
jmp
xor
push
jmp
sahf
les
bound
mov
repz
dec
adc
test
rcrb
movl
lcall
daa
pop
dec
and
add
adc
xchg
lock
mov
cmp
xchg
push
outsb
leave
mov
movsl
rorb
test
dec
cmpsb
mov
and
and
push
pop
stos
out
xchg
xor
push
imul
add
inc
ret
push
fldln2
sub
add
cmp
repnz
sub
fwait
pop
jmp
pop
add
test
push
and
jmp
inc
mov
cmp
test
test
xchg
cmc
mov
lcall
stos
lret
add
pop
ret
add
jbe
addr16
loop
pop
add
dec
call
loope
imul
das
jge
mov
cmp
mov
or
fimull
add
mov
fs
xor
pop
jb
sub
jle
and
lret
hlt
out
mov
into
mul
imul
sbb
bound
sub
das
dec
sub
sbb
dec
pusha
or
push
push
sbb
lea
jmp
or
rolb
push
mov
adc
ljmp
jo
push
pop
shl
jg
add
test
mov
jecxz
push
mov
ret
jnp
xor
inc
push
in
adc
pop
mov
loop
dec
adc
xor
popf
sub
sbbl
mov
daa
mov
push
pusha
inc
scas
xor
les
or
mov
roll
lret
dec
ja
xor
ret
push
pop
pop
pop
cld
jmp
ror
push
add
cmc
clc
dec
xor
jmp
nop
xchg
and
push
push
mov
mov
add
out
sbbb
cmp
out
or
push
fldl
add
pop
jne
pusha
dec
adc
inc
andb
xchg
lods
dec
sub
adc
cmp
ljmp
push
xlat
adc
mov
push
adc
aaa
sbb
mov
inc
adc
jmp
pop
adc
sahf
xchg
add
xor
and
iret
std
scas
add
xor
subl
jmp
mov
mov
pusha
jecxz
mov
push
cwtl
sbbl
and
inc
jbe
xchg
aad
loopne
lock
aas
push
rcrb
push
pop
pop
xchg
addr16
addr16
cmp
daa
mov
jnp
add
sub
ljmp
jecxz
stos
xlat
and
mov
inc
outsl
adc
cmpb
fnsave
inc
jge
and
fistpl
stc
xor
jmp
bnd
pop
cmp
and
pop
dec
ss
lock
shlb
repz
cmp
iret
out
cwtl
aas
xor
jno
mov
mov
jb
or
loope
mull
add
pop
add
jae
ret
mov
dec
inc
add
pop
push
sbb
aam
pop
or
push
jns
shr
pop
sub
mov
dec
sbb
jle
jge
daa
adc
out
stc
aaa
mov
aaa
jbe
rorl
inc
sbb
or
or
pop
idivb
dec
scas
lds
sbb
cmp
jmp
adc
ret
sub
or
sub
and
adc
fs
movsb
mov
pop
es
mov
repnz
cs
clc
xor
xchg
enter
and
push
push
push
xchg
mov
arpl
outsb
stc
add
or
jne
and
jb
push
jne
idivl
push
mov
xchg
mov
hlt
or
mov
inc
cmp
jbe
es
mov
jmp
mov
pop
adcl
pop
cmp
pop
pusha
push
mov
dec
sub
jecxz
add
xlat
add
sub
ds
push
pop
repnz
adc
stos
aad
enter
sbb
or
jno
popf
push
je
push
scas
adcb
dec
sub
inc
lods
in
sti
mov
push
xchg
ficoml
js
ljmp
lret
adcl
mov
pop
repnz
mov
sbb
adc
aas
jns
push
ja
mov
loope
push
push
iret
leave
cli
call
into
pop
data16
dec
mov
sbb
pop
and
lret
add
dec
pop
xor
cld
add
pop
dec
xchg
add
andl
hlt
lods
add
sub
inc
xchg
decl
lock
pusha
or
xchg
cmp
shr
dec
insl
add
aaa
mov
jmp
iret
pop
scas
inc
dec
imul
push
pop
and
movsl
mov
sub
add
or
mov
mov
test
and
out
nop
aas
jge
nop
or
or
cmp
xor
or
and
nop
inc
inc
aas
sub
xor
ret
ja
jle
jle
and
dec
orb
xchg
imul
jmp
push
mov
or
cmp
or
push
or
aaa
xor
adc
sbb
mov
das
pop
ss
inc
xor
daa
adc
push
mov
faddl
pop
ss
dec
int
outsb
fildl
dec
mov
adc
sarl
std
lods
xchg
sarb
jmp
push
pop
lock
and
or
mov
inc
pop
xlat
stos
push
movsb
test
adc
add
xchg
adc
jnp
pop
xchg
clc
adc
sub
outsl
or
sbb
or
cli
psrad
jnp
jo
push
push
js
xchg
push
sarb
cs
push
pop
mov
adc
pop
jb
pop
push
rcll
test
mov
sbb
stc
nop
fistpl
repz
push
sbb
push
mov
mov
push
or
ds
fbld
add
dec
pop
testl
xor
bound
lds
push
or
cmp
repz
addb
movsl
fsubs
bnd
mov
jbe
pop
add
dec
sub
cmpsl
ds
pop
repnz
xor
out
loopne
test
enter
das
push
pop
loope
inc
adc
adcb
vpshaq
sub
cld
ds
pushf
lahf
in
dec
ja
xor
mov
sarb
cli
mov
jg
adc
inc
popa
add
pusha
mov
cmp
push
cwtl
cwtl
jo
xlat
pop
mov
pop
jl
pop
xchg
mov
jge
dec
xchg
pop
mov
adc
add
dec
pop
xchg
repnz
pop
adc
xor
add
push
pop
pop
mov
sub
xchg
mov
es
pushf
stc
loop
popf
sub
mov
inc
sahf
inc
pop
movsl
xor
push
add
and
jmp
mov
call
sbb
dec
inc
cmp
pop
jge
push
inc
movsl
xchg
jbe
mov
push
int3
test
and
adc
mov
jmp
mov
mov
sbb
mov
addb
popa
pop
push
add
push
jbe
outsb
cmc
fwait
sbb
mov
lcall
inc
mov
xlat
dec
cmp
push
mov
rcll
sbbl
lret
push
mov
loope
add
outsl
cmp
cmp
andl
ficoms
mov
jge
mov
pop
std
jo
cld
data16
pop
popa
data16
inc
xor
sub
push
subl
pop
xor
or
scas
out
add
test
icebp
adc
xor
sbb
je
xchg
mov
and
dec
adc
cmp
rolb
jge
dec
roll
push
mov
bound
cmpsb
fs
jmp
sbb
pop
mov
sub
aaa
adc
in
imul
fcom
mov
adc
fsts
test
shll
mov
ret
lea
and
out
fldl
lret
in
xchg
push
pop
pop
sub
cmpsb
fists
scas
xor
ret
lods
movsb
stos
sub
or
adc
dec
cmpsb
lods
push
fimuls
iret
repnz
inc
add
cmp
inc
pusha
push
xchg
dec
xchg
sub
js
ds
rorl
sarb
cs
xchg
sti
push
push
ret
or
in
pop
sub
push
bound
or
out
stos
jp
fisttpl
jmp
xchg
push
push
mov
or
pop
dec
or
sbb
push
jmp
sti
sbb
jecxz
jnp
dec
fs
xor
xchg
and
xchg
pop
xchg
cli
popa
into
push
push
pusha
imul
fdiv
testb
daa
daa
rcl
push
mov
aaa
sub
pop
scas
adc
dec
mov
and
xchg
je
jp
into
popf
pop
mov
inc
pop
inc
add
roll
int3
jl
xor
jecxz
cmp
leave
cmp
fs
adc
or
sub
push
sbb
jmp
int3
sbb
or
or
and
out
leave
adc
and
xor
jle
mov
bound
cltd
das
cmpsb
pushf
pop
sbb
xor
push
push
data16
test
push
call
sbb
jl
pop
sti
cmp
mov
mov
jmp
xor
aas
add
mov
inc
xor
fwait
xor
out
xchg
testl
xor
pop
xchg
sbb
push
rorb
push
sub
jmp
or
xchg
pop
xchg
pop
mov
pop
repz
sbb
sub
or
das
jl
sub
inc
daa
jbe
pop
sbb
jmp
dec
jo
push
addl
add
push
and
pop
adc
inc
stos
sub
arpl
mov
or
neg
mov
arpl
repnz
imul
adc
in
pop
stc
pop
ds
pop
hlt
xchg
ret
aas
pop
das
sbb
and
xchg
adc
roll
inc
icebp
pop
repz
mov
push
mov
push
pop
cwtl
sub
loopne
js
jmp
pusha
ljmp
cmp
mov
xchg
les
or
smsw
xchg
mov
or
xor
jle
push
pop
mov
mov
enter
inc
sbb
ret
call
lea
push
pop
imul
push
das
pop
scas
and
push
jne
mov
pop
xor
adc
in
jnp
lods
orl
clc
insl
or
insb
stos
ret
jns
adcl
push
sub
icebp
out
add
fwait
adc
scas
daa
aas
push
cmp
sbb
rclb
pop
enter
jo
sahf
mov
adc
inc
orb
inc
cli
sub
shlb
or
daa
movsl
inc
mov
push
lock
sbb
scas
cmp
scas
mov
inc
in
pushf
jo
push
inc
mov
lock
mulb
jg
xor
cmp
and
in
sub
and
in
mov
mov
or
sub
mov
inc
mov
lea
fs
push
add
call
out
pop
push
cmp
pop
add
jno
test
lds
mov
pop
sub
add
pop
imul
add
mov
add
je
jmp
push
jbe
sub
dec
dec
mov
scas
pushf
lods
jmp
pop
ficoml
pop
adc
cmp
jl
sub
add
inc
sub
adc
cmp
cli
scas
sub
and
rcrb
rorb
sbb
push
adc
es
in
push
out
lcall
js
dec
sbb
jbe
push
lock
dec
mov
adc
negb
call
jno
sbb
inc
or
xor
or
xchg
popf
dec
fcompl
lods
adc
and
cwtl
addr16
mov
sub
pop
adc
pop
test
repnz
mov
dec
sub
xchg
or
xlat
add
js
cwtl
sub
lcall
popa
xor
xchg
pop
test
insl
addr16
adc
inc
or
sbbl
and
daa
or
insb
inc
or
rcrl
sbb
jecxz
dec
ds
sbb
sub
pop
loope
inc
js
pop
jle
xor
adc
push
stos
lods
popf
mov
xlat
mov
or
sub
dec
jmp
add
adc
sbb
jle
pop
dec
mov
xor
push
inc
adc
ret
push
shll
stos
arpl
xchg
mov
inc
or
incb
xchg
hlt
out
bound
mov
mov
push
mov
mov
and
xchg
mov
sub
xchg
lods
and
repnz
mov
and
and
je
push
mov
or
loope
lods
outsb
imul
pop
xchg
push
inc
jne
insb
sti
or
jmp
in
push
mov
add
and
push
mov
or
rclb
shrd
dec
push
add
jb
lret
fwait
or
and
add
xchg
lea
daa
es
mov
or
adc
jge
sub
jmp
mov
andb
scas
ret
jp
cmc
sbb
dec
sbb
cltd
ja
mov
adc
lret
or
pop
idivl
iretw
cmp
negb
hlt
mov
bound
jno
das
jo
adc
dec
mov
rorb
adcb
frstor
sub
cmp
sub
push
out
or
dec
movsl
into
or
mov
mov
inc
outsl
add
loope,pn
inc
mov
jb
idivl
pop
lahf
stos
nop
js
mov
cltd
inc
imul
inc
cmc
mov
popf
cs
mov
add
inc
es
shrb
cmp
lret
inc
jno
mov
dec
or
xchg
lea
ljmp
sbb
inc
or
lods
pop
lahf
iret
test
enter
add
decb
push
or
fisubl
adc
mov
movsl
pop
inc
outsb
xor
mov
js
icebp
rolb
outsl
stos
mov
xorl
adc
add
mov
add
ja
jmp
pop
mov
adc
xchg
clc
adc
sti
test
push
push
mov
adc
popf
adc
clc
xchg
dec
inc
shrb
push
jl
rclb
lret
adc
clc
and
in
xchg
sahf
rorl
xor
fs
incb
pop
cwtl
mov
cmpsl
test
insl
cmp
ljmp
les
lods
les
push
push
stos
mov
mov
xor
push
jmp
cmp
int3
mov
fwait
mov
jge
inc
rorb
mov
scas
xor
jp
sub
sbb
es
adc
cmp
test
pop
mov
lods
mov
pop
jne
xor
mov
sub
and
pop
flds
das
test
xchg
in
data16
and
ret
sub
mov
jmp
std
cmpb
pop
jo
clc
test
mov
rcl
sbb
aam
sbb
push
push
pop
lock
jg
mov
icebp
test
push
cmp
add
into
mov
mov
sub
cmpsl
loopne
lock
jg
daa
enter
pop
out
or
pushf
adc
mov
sub
xor
jl
mov
push
shll
outsl
inc
dec
jl
adc
add
mov
or
out
sub
mov
and
push
std
lea
lds
push
jmp
test
push
cs
adc
xor
pop
sub
lcall
cld
pop
das
mov
fldl
lret
icebp
jmp
dec
lret
pop
icebp
sub
pop
xlat
shr
xor
cwtl
ret
jp
sub
pop
fmuls
popf
jmp
mov
pop
dec
es
cmp
les
out
xor
push
pop
int
in
dec
cltd
mov
das
dec
into
int
movb
popf
mov
mov
xchg
cmc
sub
test
in
popf
adc
dec
icebp
xchg
inc
mov
jmp
cltd
push
add
ret
add
dec
sub
rcrl
xlat
imul
xchg
or
mov
xchg
dec
call
adc
mov
adc
cs
lcall
mov
int3
nop
add
jae
xor
jnp
pop
imul
push
xor
add
in
in
dec
lret
in
lods
lds
ret
stos
mov
js
das
mov
ds
cmp
loopne
xchg
mov
ljmp
lods
push
push
push
xor
sbb
adc
jl
push
jnp
xor
push
jnp
das
push
jp
cltd
dec
in
xchg
cmp
leave
cli
cmp
repnz
call
push
sub
inc
xchg
fimuls
sbb
push
lods
sti
filds
stc
int
jns
es
pushf
xchg
and
lcall
or
jg
test
push
xchg
pop
cmp
xchg
lret
stc
imul
aas
imul
orl
btr
xchg
inc
mov
sub
push
sub
sbbb
aaa
mov
mov
jmp
pop
mov
mov
xor
mov
ja
add
test
sbb
xor
and
adc
sub
and
out
xlat
mov
adc
mov
adc
mov
push
cmp
mov
mov
or
cli
add
pop
insb
das
mull
inc
and
jb
pop
sbb
or
mov
outsb
cmp
dec
scas
add
jge
and
xchg
xor
push
in
mov
pop
sub
or
jp
pusha
imul
shlb
outsl
daa
pop
sti
and
mov
and
ret
jae
mov
push
push
mov
cmp
rorb
or
sahf
out
or
adc
scas
xchg
push
adc
cwtl
orb
mov
and
imul
or
aas
sub
sbb
jp
push
mov
scas
or
ds
xchg
movl
adc
inc
push
stos
popa
pop
jl
mov
stos
xor
jmp
or
jmp
mov
jmp
fidivrl
inc
add
arpl
adc
stos
xor
scas
mov
adc
dec
dec
out
pop
and
sub
andb
pop
or
or
rorb
mov
adc
jmp
mov
enter
out
lahf
cmp
push
in
div
sti
adc
sub
int
xchg
adc
or
sub
adc
adc
push
movsb
mov
sub
jo
popf
testb
mov
add
mov
jle
dec
push
aad
dec
jbe
xchg
sub
adc
and
mov
or
jne
jl
sbb
lock
sub
xor
push
xchg
xlat
iret
or
jp
aas
fwait
sbb
mov
mov
dec
push
xchg
push
jno
iret
push
movsb
sbb
dec
add
outsb
sbb
and
lods
jle
jecxz
fwait
add
lret
pop
inc
flds
shll
xchg
push
adc
sub
data16
aas
shrl
shlb
push
mov
and
pop
stos
fstpl
xchg
fdivrl
icebp
hlt
mov
mov
xchg
fidivl
and
stos
dec
add
leave
clc
mov
or
lea
push
add
fstpl
add
enter
mov
sbb
mov
cmc
sbb
cmp
imul
mov
shrb
in
cmp
mov
sub
inc
pop
jmp
mov
and
sub
rcll
jnp
lret
popf
jg
sub
push
or
addr16
lods
jnp
push
ret
fwait
and
mov
add
lds
mov
or
mov
sub
leave
mov
fldl
movsl
mov
dec
push
das
jmp
test
sub
pop
cmp
pop
pop
mov
add
ret
pop
mov
fdivp
into
add
daa
jmp
sub
push
push
pop
add
int3
xlat
scas
stc
lret
sbb
mov
or
or
pop
inc
pop
inc
push
push
mov
pop
adc
or
and
loope
add
mov
pop
xchg
lret
mov
push
xchg
adc
mov
popf
hlt
arpl
adc
adc
and
or
and
lock
jmp
dec
xor
cltd
nop
inc
fisubrs
iret
add
ret
dec
cld
ja
sarl
call
ds
sub
inc
jp
ja
lahf
call
jg
lock
or
fmull
xchg
inc
push
mov
cmp
std
adc
inc
ret
lret
mov
mull
add
xchg
pop
add
xchg
jb
hlt
inc
lahf
jno
xchg
pop
and
cmc
in
ja
inc
add
add
das
or
mov
imul
sub
gs
xchg
xchg
sub
rcll
cmp
repz
adc
sbb
imul
add
adc
cmp
sbb
xchg
add
jbe
cwtl
adc
daa
js
enter
xorb
cli
lret
dec
push
xchg
stos
add
fst
pop
adc
cmpl
incb
adc
fcompl
add
jmp
dec
add
fadds
lret
lods
cs
push
add
sbb
ja
xor
dec
xchg
sbb
cmp
pop
lods
jmp
in
adc
push
dec
xor
sbb
movsb
xchg
or
fcmove
cmp
adc
out
rcr
loop
inc
inc
stos
push
add
aas
add
jmp
out
test
call
cmc
xchg
bound
cmp
imul
mov
mov
int3
scas
cmpsb
in
cmp
adc
lock
dec
rorl
fmul
loopne
jmp
pop
fmulp
vpsadbw
not
xchg
mov
negb
ret
pusha
xor
mov
int3
sub
out
push
push
or
lahf
and
jae
xchg
icebp
inc
test
xor
cli
int3
cmp
push
sub
jl
into
dec
movsb
pop
arpl
xlat
adc
adc
aad
arpl
dec
dec
dec
pop
stc
call
adc
hlt
inc
add
nop
lret
sahf
push
pusha
std
jmp
pop
add
push
add
adc
fcos
dec
sbbb
pop
inc
leave
insb
hlt
imul
ret
inc
pop
push
scas
mov
movsl
testl
sub
cmpsl
out
pop
push
xlat
push
popf
mov
fwait
add
idivb
mov
cld
pop
or
jo
pusha
aas
push
pop
or
pop
or
inc
push
jle
or
pusha
stc
or
dec
das
mov
sub
orl
adc
stos
pusha
push
push
sub
aad
mov
jmp
xchg
push
daa
movsb
inc
cmpsl
aad
mov
sub
add
inc
inc
jg
mov
dec
stos
add
dec
dec
je
or
call
rcrb
stc
repnz
nop
ffree
mov
mov
inc
xor
ja
into
mov
add
aam
add
lret
dec
jmp
jb
xchg
dec
jp
mov
mov
lods
dec
mov
cmp
adc
xchg
sbb
into
inc
mov
mov
repz
cmp
andb
dec
or
faddp
imul
push
movsb
mov
inc
in
stos
jae
int
das
pop
repnz
or
push
scas
sbb
push
hlt
rolb
or
xlat
imul
movsb
jnp
push
push
cld
sub
pop
add
test
into
aas
push
pop
and
xchg
call
fnsave
sti
mov
push
bound
shll
push
or
push
sbb
sti
lods
data16
add
xlat
cmp
xor
mov
cmp
push
sub
fstpt
cmpsb
add
sti
sub
dec
imul
nop
nop
xor
jmp
insb
dec
mov
push
xchg
pop
shlb
jmp
incb
adc
gs
inc
push
mov
jp
imul
sbb
xor
repz
cmp
mov
std
xchg
add
xchg
je
test
mov
sub
aam
divb
cmp
testb
push
xchg
jle
lds
cmp
mov
or
lds
mov
mov
pop
mov
pop
mov
in
fucomp
mov
jo
xchg
push
xchg
lret
std
lds
or
cmp
cmp
pop
fmull
fmuls
and
push
add
sbb
subb
xor
xor
aad
sub
mov
xor
cmpsb
mov
shll
push
mov
je
push
dec
cmpsl
jbe
jle
pop
push
cwtl
and
mov
adc
adc
gs
add
stos
inc
fidivrl
fildl
push
inc
fldt
jg
loopne
cmp
add
sub
es
fstps
call
daa
jg
lods
cmpsl
jbe
repnz
sbbb
in
mov
jp
cli
mov
xchg
lcall
mov
dec
add
dec
push
mov
jmp
js
pop
push
inc
inc
jmp
fucom
fcmovne
sbb
inc
adcb
flds
sahf
xchg
lcall
add
jmp
and
or
cmp
jecxz
test
cmc
push
stos
xor
clc
das
mov
adc
sar
fimuls
xchg
out
push
mov
pop
pop
aad
mov
lods
xor
sbb
xor
in
in
push
cmp
sarb
ss
adc
xchg
xor
xor
test
lret
loope
mov
mov
jne
cmpsb
dec
push
jmp
loope
jnp
pushf
iret
enter
xchg
sub
inc
out
shrb
test
or
jecxz
xchg
shrb
xchg
or
insw
addl
sub
scas
mov
mov
or
jbe
add
adc
or
add
and
inc
dec
or
loopne
dec
or
sub
pop
mov
std
fidivrl
pop
dec
sbb
ljmp
lahf
mov
inc
xor
pop
pop
out
icebp
adc
dec
pop
push
push
sub
lret
lret
or
test
push
les
xor
shlb
xor
arpl
mov
and
popa
push
push
mov
pop
andb
add
xchg
jecxz
cmp
mov
adc
enter
xchg
rorl
or
or
and
push
push
daa
pop
push
pop
nop
or
add
adc
popa
inc
mov
add
xorl
mov
pop
out
adc
out
pop
adc
stc
int3
les
mov
out
pop
pop
lea
pop
push
pop
mov
lcall
pop
sub
cmp
and
inc
add
mov
pop
cli
sub
push
push
jmp
mov
inc
xor
js
es
jo
jle
leave
jae
cmp
adc
add
fistpll
pop
lahf
neg
jb
cwtl
jns
or
adc
xor
and
push
out
or
pop
sub
mov
sbb
out
aas
mov
and
rclb
aas
xchg
ja
jg
ljmp
test
jne
mov
test
push
xor
add
inc
lahf
pusha
push
not
in
xorl
add
nop
push
bound
mov
int
shlb
or
and
sbb
adc
mov
jmp
push
mov
mov
mov
jg
in
arpl
pop
leave
repz
push
mov
pop
sbb
cmp
movsb
addr16
mov
mov
and
or
cmpsb
popf
ficompl
mov
push
and
inc
sub
and
sub
inc
push
or
or
or
insb
das
cwtl
jns
cs
fists
push
test
nop
ret
das
or
nop
or
std
inc
mov
out
or
inc
fmul
cmp
in
adc
and
sub
repz
jae
stos
cli
mov
push
inc
add
cld
out
and
in
movsb
andl
roll
cmpsb
and
mov
lds
inc
das
sub
sbb
gs
and
mov
adc
sub
int
lock
shrl
dec
icebp
add
jmp
jns
mov
imul
cmp
in
jle
pusha
dec
adc
xchg
testb
int3
or
fstl
cli
orl
add
pushf
pushf
pop
or
or
push
add
cld
adc
mov
sub
push
xchg
repnz
inc
hlt
ret
ljmp
add
jmp
push
daa
jl
test
xchg
es
orl
imul
or
push
add
in
flds
jecxz
das
daa
push
xchg
shrl
add
inc
push
ss
fs
shrb
dec
loop
dec
push
add
fists
std
cmp
xor
repnz
imul
loope
push
dec
subb
add
inc
mov
sub
movlps
es
sbb
or
aad
jne
mov
xor
insl
push
and
pop
push
push
mov
push
subl
cwtl
sti
mov
test
nop
mov
pop
xor
lret
mov
push
aam
je
popl
push
push
lcall
cmpsl
test
outsl
adc
das
call
add
adc
jl
out
mov
jnp
cmp
jne
test
das
jnp
inc
addl
pop
add
push
xor
and
add
outsl
mov
dec
roll
notb
dec
cmpxchg
sub
sub
cmp
push
or
jmp
mul
repz
movsb
or
int3
inc
sub
insb
xor
icebp
adc
repnz
mov
test
sub
lods
pop
mov
and
jbe
js
cwtl
xlat
sub
add
popf
pusha
aaa
and
xchg
xlat
xchg
iret
or
dec
push
sub
cs
repz
jbe
or
mov
inc
fmuls
fmuls
stc
mov
mov
ja
push
cmpsl
mov
testl
pop
push
and
in
rolb
popa
aaa
das
mov
mov
je
sub
dec
movsl
cli
ja
mov
sbb
xchg
jmp
jmp
jno
xchg
sub
ljmp
jo
stc
xchg
mov
mov
and
ds
push
pop
repnz
xchg
std
push
clc
cmp
cltd
sub
lds
int
jmp
lods
shll
repnz
xor
clc
lods
xor
mov
jo
push
out
add
pop
ja
push
fsts
or
add
push
pusha
add
adc
or
pop
hlt
sbb
pop
out
xchg
add
les
push
cmp
mov
jmp
inc
daa
jnp
xor
movsb
xorl
push
mov
test
xchg
es
imul
jnp
daa
enter
xchg
bnd
or
mov
cmp
pushf
lds
cmp
cmc
or
loopne
jb
push
aad
jg
push
popa
sub
push
inc
or
bound
xor
cmp
and
sub
dec
xor
iret
mov
hlt
pop
int
js
xlat
cltd
or
xor
ljmp
cli
mov
imul
inc
mov
pop
incl
ljmp
movsb
out
add
jmp
inc
fbld
loopne
xchg
add
pop
sub
dec
shrb
mov
test
stos
hlt
enter
std
add
pop
add
adc
shrb
push
xchg
lods
out
sbbb
aad
mov
or
xchg
sbb
xor
mov
push
xchg
into
subb
add
inc
push
imull
enter
lock
jnp
das
sub
jne
or
dec
cmp
or
sbb
icebp
clc
out
es
test
add
lds
pop
insl
movsb
fldl
inc
pop
or
pop
lret
std
mov
push
and
inc
and
lret
add
mov
lahf
mov
and
push
sbb
add
sub
mov
es
xchg
repz
or
shrl
inc
pop
or
cvtps2pi
add
mov
cmp
pop
std
nop
mov
push
je
paddsb
push
pushl
mov
jmp
ds
pop
jmp
jae
xchg
data16
call
push
mov
shl
add
cmp
pushf
jmp
popa
iret
and
sub
cmp
adc
mov
sbb
lock
lret
in
mov
pop
popa
push
inc
gs
lock
jmp
or
sub
ffree
sbb
xor
jl
mov
mov
stc
xor
xchg
mov
mov
stos
adc
mov
imul
pop
outsl
adc
stos
stc
mov
dec
adc
jle
add
jmp
mov
andb
rol
push
cmpsb
jno
sbb
and
cmpb
push
and
repnz
sub
mov
cmp
mov
push
stos
mov
negb
shr
add
shr
mov
cld
outsl
xor
sti
sub
sbb
cmpl
mov
jl
cmp
call
pop
and
pop
jbe
repnz
pop
pop
add
js
gs
mov
cmp
mov
rcrb
cli
push
insb
and
fldl
and
xor
cli
inc
pop
sub
cmp
mov
adc
icebp
out
iret
dec
add
dec
mov
dec
pop
aad
push
cmp
push
mov
and
jne
adcl
cld
sbb
mov
jmp
xchg
lcall
cmp
imul
push
mov
jnp
jp
ret
push
fimuls
adc
movsl
xor
add
cmp
nop
cmp
sub
mov
lock
pop
or
shll
repnz
push
and
cmp
sub
bound
mov
jne
lock
subb
xchg
movq
push
or
loop
shrl
rcr
inc
inc
aam
fcomps
in
ficoms
push
sbb
add
sbb
movsl
repz
and
loope
push
mov
xchg
adc
mov
ds
fucomp
data16
or
mov
jbe
andb
jl
cmp
cmc
test
dec
ljmp
int3
les
add
add
jno
inc
jo
adc
xor
sub
jne
pop
pop
cmp
inc
mov
sub
xchg
lds
add
push
stos
inc
mov
jl
inc
pushf
or
ss
cmpsl
imul
lock
fisubrl
adc
push
jle
outsl
pop
push
dec
xor
push
mov
push
adc
inc
into
dec
adc
or
daa
xchg
jg
mov
push
lods
cmp
movsl
fs
in
add
cmp
mov
add
and
clc
xchg
test
push
jmp
mov
mov
mov
xor
popw
in
inc
cmp
jnp
in
push
sbb
ret
inc
neg
mov
call
pop
bound
fidivrs
push
or
xchg
test
cmp
gs
repnz
cs
xchg
outsl
mov
ljmp
das
aam
pop
stos
out
clc
negb
les
push
mov
in
adc
push
test
stos
dec
sub
adc
imul
cld
jle
add
lret
dec
popf
add
push
push
push
jge
push
inc
fs
and
jmp
sub
pop
jle
repz
mov
adc
mov
stos
loop
shr
pop
enter
fldenv
loopne
das
in
push
or
adc
enter
pop
mov
mov
ja
fdivl
inc
push
push
mov
js
testl
adc
jge
idivb
add
arpl
clc
sub
push
lret
iret
mov
lahf
push
xchg
inc
jnp
mov
pop
or
sbb
in
das
arpl
push
flds
mulb
and
stos
cmpsb
jecxz
jmp
mov
fidivrl
mov
jle
into
sub
hlt
cltd
dec
push
sbb
mulb
test
dec
and
lret
mov
pop
xor
int
pushf
movsb
push
inc
dec
sub
add
dec
sbb
popf
mov
inc
hlt
aam
pushf
stos
outsb
inc
mov
add
ds
test
pop
adc
lcall
adc
popa
pushf
xchg
jae
or
jle
jmp
outsl
and
rcll
inc
outsb
mov
pop
mov
sub
out
movsb
test
xor
call
inc
lahf
popf
push
insl
xchg
jl
add
mov
daa
or
das
pusha
fwait
data16
mov
jns
dec
jb
dec
push
cs
not
mov
push
add
sub
loop
adc
xor
inc
push
push
scas
mov
adc
testb
and
push
loope
jp
dec
pusha
and
push
xchg
inc
jl
call
lds
addb
xchg
push
arpl
push
lds
dec
mov
out
or
pop
out
ret
push
loopne
incl
pop
sahf
mov
lock
fimull
and
subb
dec
das
lock
dec
out
ljmp
sub
subb
jg
adc
out
repnz
adc
push
jmp
adc
push
jno
jmp
jbe
jns
sub
leave
scas
add
dec
push
popa
cwtl
out
sti
mov
jge
cmc
and
cs
and
add
iret
inc
lret
and
dec
pop
inc
enter
xchg
mov
subb
adc
mov
icebp
in
ja
enter
jo
lret
test
leave
subb
ja
mov
xchg
push
or
pop
dec
add
pop
add
push
sbb
mov
cmpxchg
pop
mov
add
nop
cmp
or
mov
inc
scas
dec
add
stc
jp
pop
sahf
inc
scas
rorl
loop
ja
lahf
sarb
xor
iret
dec
add
test
inc
or
orl
jge
testb
sbb
sub
nop
jne
icebp
add
xchg
pop
cli
bound
adc
add
sub
in
pop
fsubrs
dec
inc
inc
push
insb
arpl
sbb
cs
mov
adc
inc
and
mov
adc
repnz
rcrb
inc
mov
mov
cmp
sar
pop
popf
gs
xchg
add
sub
aam
xor
scas
sub
sub
orl
jmp
cli
mov
sbb
in
repz
xor
dec
jmp
add
imul
dec
jl
mov
bound
jp
cwtl
aas
je
adc
mov
push
lods
sub
sbb
cmp
pop
lock
xor
pop
jge
pop
imul
xchg
addb
or
add
push
cmp
inc
dec
dec
mov
mov
push
jg
push
xor
pop
mov
or
mov
xor
fcomps
inc
lret
icebp
add
ret
cmp
jnp
or
push
sub
nop
xor
imul
dec
xchg
sub
in
hlt
mov
jle
push
pop
call
sub
not
push
and
xlat
leave
dec
push
fdiv
pusha
sub
jo
and
mov
mov
lock
jmp
mov
adc
mov
je
push
out
shlb
sub
push
mov
outsb
mov
mov
push
xor
cmp
lret
or
sub
push
inc
clc
mov
sahf
adc
cmp
stos
add
outsl
adc
fsts
pop
movsb
rorb
or
pop
pop
lds
mov
imul
lods
enter
jge
sbb
xorb
add
test
sbb
xchg
xchg
or
inc
adc
sub
jne
mov
nop
into
adcb
rol
pop
push
jge
jmp
test
jmp
push
out
pop
adc
daa
pop
insb
dec
sbb
jge
gs
mov
add
daa
jns
push
pop
es
ds
pop
ljmp
jmp
mov
fistpl
or
push
cmp
insb
xor
pop
mov
xchg
add
jo
mov
add
or
dec
mov
mov
push
jne
cwtl
mov
jmp
sahf
mov
sub
xchg
lods
xorl
cmp
or
fsubs
dec
pop
adc
jno
xchg
sbb
adc
cwtl
fcoms
rcrl
ret
mov
sbb
xor
filds
add
testb
cmp
xor
orb
sbb
bound
loope
mov
stos
loopne
xchg
mov
sub
mov
mov
add
pop
iret
outsl
daa
mov
and
or
xchg
out
jg
sbb
cli
push
cmp
ds
pushf
lods
lods
push
test
xor
xor
movsb
inc
sbb
mov
pop
jne
cli
inc
fisttpll
jmp
ljmp
out
or
or
loop
rcrb
clc
clc
leave
push
mov
loopne
sti
pop
push
ficoms
cmpsl
inc
xor
xchg
hlt
adc
jmp
pop
dec
xlat
adc
add
ljmp
pop
gs
and
cld
ja
add
push
mov
push
mov
sti
fdivr
pop
push
pop
xchg
inc
sbb
dec
push
pop
in
loope
les
movsl
insl
mov
jp
sub
mov
cli
js
or
xlat
mov
sub
mov
xchg
mov
in
adc
pop
sbb
ffreep
xchg
mov
mov
pop
pop
pop
lock
lret
andps
nop
jae
mov
or
js
inc
add
adc
sbb
add
js
jb
das
clc
xchg
imul
ja
scas
ss
ret
mov
cwtl
inc
adc
jo
add
mov
pop
dec
adc
inc
ljmp
xchg
pop
sbb
and
jne
jg
xchg
add
sbb
mov
jmp
mov
mov
jne
pop
push
mov
lcall
sub
push
sahf
inc
push
rcrb
pop
lds
or
incb
inc
hlt
adc
xor
cwtl
sub
sbb
aad
es
sbb
add
and
repz
push
sbb
popa
sub
push
invd
movsl
jg
mov
push
cmp
in
dec
daa
dec
movsb
shl
sbb
push
int3
mov
and
pop
xor
leave
enter
popf
daa
lahf
int3
and
psubsw
push
mov
push
addr16
cmpsl
shll
inc
and
pop
cli
sub
into
rcrb
xor
push
push
jmp
pop
jp
pop
les
not
outsb
int3
orl
xchg
mov
aad
xchg
mov
mov
clc
pop
arpl
sbb
iret
jmp
rclb
out
lcall
fnstcw
adc
pop
lods
pop
add
arpl
xor
outsb
sub
jmp
scas
into
rcrb
sub
or
push
test
test
daa
adc
pop
and
inc
mov
into
cmpsb
imul
mov
dec
push
and
sbbl
mov
stos
adc
loop
add
pop
xor
pusha
lds
inc
and
sub
push
pop
push
add
sub
xor
add
ret
add
andl
daa
fs
mov
pop
pop
add
push
xchg
stos
jbe
mov
in
scas
lret
ret
pop
stos
je
jecxz
dec
stc
pop
dec
scas
rolb
pop
adc
or
loop
or
xor
cs
sub
xor
adc
lods
pop
inc
xlat
lods
cwtl
mov
popa
pop
jmp
mov
mov
shrb
dec
loope
or
call
dec
lock
jbe
push
push
jg
and
cld
js
cli
adcl
sbb
in
cmc
call
push
jmp
adc
test
sbb
imul
mov
hlt
and
pop
test
mov
addb
call
xor
es
mov
dec
fisubl
mov
aaa
inc
in
and
cmp
pop
jg
cli
adc
pop
pop
out
cmpb
jmp
pop
mulb
xor
inc
imul
jno
aam
mov
adc
xchg
pop
sti
bound
sar
mov
js
adc
lret
mov
xlat
mov
decl
push
xchg
aam
mov
pop
and
cs
fildl
leave
jne
xchg
pop
imul
mov
cli
mov
xchg
aam
repnz
or
imul
add
dec
jmp
inc
pop
or
imul
fildll
jle
push
cmp
adc
shl
ret
dec
inc
and
add
or
pop
mov
push
cmc
sbb
jae
into
cmp
jbe
sub
push
mov
inc
add
cmp
loopne
ljmp
rclb
lret
push
out
push
mov
and
into
hlt
adc
out
jb
pop
push
push
mov
pop
not
jmp
pop
insb
int3
dec
mov
sbb
daa
aad
lods
dec
cmpsb
test
scas
mov
mov
push
jg
ficoml
orl
sbb
xor
jae
ret
icebp
push
jp
or
push
mov
aaa
dec
mov
jmp
hlt
ja
and
mov
and
or
js
pop
mov
cli
add
sbb
bnd
mov
hlt
enter
inc
addr16
jo
es
mov
orb
add
mov
orb
dec
cmovno
add
shrl
test
repz
dec
mov
movlps
out
jno
inc
push
add
xor
dec
push
shrb
add
int
xchg
cmp
sub
push
rol
ja
and
je
pop
mov
push
in
xor
adc
aam
jns
inc
aas
neg
sarb
cmp
xchg
jmp
out
les
lahf
or
cmp
mov
jno
in
imul
fwait
push
cmp
jbe
add
addr16
inc
add
jb
jo
adc
decb
bound
jge
dec
cli
pop
daa
jecxz
and
out
mov
adc
fisubs
or
jnp
jb
push
loopne
lcall
hlt
movsb
test
or
push
xor
xchg
subl
mov
in
sub
jbe
dec
fs
inc
dec
adc
gs
push
jmp
mov
sub
dec
cmc
cmp
sbbb
adc
mov
inc
aam
inc
test
imul
sub
mov
and
add
sbb
mov
cmp
adc
jbe
inc
lock
dec
decb
push
sbb
sub
call
pop
fcoml
les
pop
sub
cmp
pop
push
sbbb
js
fistl
sub
jb
inc
ljmp
in
dec
pop
test
cld
lret
fs
pop
jle
add
stc
out
stos
sbb
jne
push
hlt
dec
lea
test
ljmp
pop
adc
and
movb
sarb
pop
push
fistl
mov
nop
lsl
add
adc
xchg
das
test
sbb
pop
in
lods
push
or
add
mov
dec
xorb
jae
mov
leave
icebp
xor
leave
aaa
cmp
push
mov
xor
je
dec
lock
adc
add
sub
push
inc
mov
add
ds
ja
rcr
dec
nop
sbb
push
and
lock
or
mov
repnz
mov
mov
pop
pop
lret
inc
mov
loope
lods
insl
imulb
add
pop
das
and
dec
sub
or
in
or
push
test
or
sbb
adc
jle
push
in
loopne
pop
add
sub
add
ds
inc
adc
daa
rcll
adc
leave
orb
jg
sahf
out
pop
lret
jp
dec
push
mov
pop
les
or
mov
adc
or
sbb
call
jmp
and
js
sti
cmp
xorb
testb
jmp
mov
sub
notb
stos
push
add
sub
add
pop
push
sub
cmpsl
clc
ds
test
push
das
mov
sub
xor
mov
pop
dec
mov
sbb
mov
adc
adc
stos
repz
pop
push
ja
or
sub
cmp
pop
push
and
and
cmc
xchg
cmp
cmpsl
stos
dec
mov
pop
pop
call
and
les
dec
add
xor
cmp
sarl
outsb
fsubr
dec
nop
inc
pop
sub
xor
xchg
dec
add
push
pop
mov
rolb
xor
jmp
dec
lcall
mov
cmc
in
cmp
scas
pusha
push
cmpsl
fdivrs
hlt
mov
inc
js
sub
mov
fsubrs
lods
push
insb
xor
add
frstor
scas
add
jge
int
cmp
mov
push
sub
add
sub
inc
sub
dec
sub
sub
sbb
andb
lret
pushf
xor
loopne
insb
cwtl
mov
popf
push
xor
cs
ja
jo
sub
dec
dec
jo
xor
ss
pop
or
mov
movsl
push
pusha
cmp
or
pop
pop
idiv
sti
jnp
push
adc
shl
cmpsl
push
and
call
popa
or
arpl
mov
cmpsl
pop
je
pop
pop
pop
push
sbb
dec
sahf
or
adc
add
rolb
xchg
mov
sbb
leave
add
loop
or
es
sti
in
sub
xlat
pop
mov
or
dec
jecxz
faddl
ljmp
stos
test
cmp
sbb
adc
jmp
inc
pop
push
mov
jbe
mov
bound
sub
jg
xchg
mov
out
xchg
push
xor
push
mov
mov
aaa
mov
ret
mov
popf
leave
cmp
orb
rcr
pop
add
xor
pop
jg
mov
pop
dec
add
nop
in
adc
and
xor
or
imul
je
push
push
mov
dec
in
sbb
int3
sbb
inc
addb
push
xor
mov
popf
je
push
scas
lahf
pop
xchg
jno
jmp
adc
push
orb
sub
and
xor
cli
inc
pushf
icebp
xchg
cmp
pusha
mov
pop
mov
imul
or
movsl
pop
pop
add
and
shr
filds
sub
pusha
sub
dec
add
orb
xchg
incb
xor
xchg
jg
adcl
mov
or
neg
pop
mov
sub
push
xchg
ds
sbb
mov
icebp
rorb
push
jbe
imul
cmp
add
mov
test
dec
sub
sub
and
push
pop
push
mov
and
xchg
push
add
push
sbb
les
sub
dec
or
jl
and
movsl
std
cmp
xlat
ljmp
push
ja
rorb
das
add
daa
pusha
insl
adc
push
in
xorl
test
sbb
mov
jecxz
jmp
or
xor
adc
lds
in
or
jle
xor
das
repnz
pop
pop
out
inc
scas
std
adc
arpl
int
frstor
jge
iret
and
mov
stos
mov
scas
fcmovne
pop
add
enter
mov
jo
mov
cmp
bound
or
adc
loop
mov
mov
add
ljmp
mov
jmp
xor
pop
loopne
roll
jae
and
add
cmp
out
dec
imul
lods
sub
or
or
cmpsl
ret
lods
stc
lea
mov
movsb
stos
lods
cmovp
lret
adc
xchg
pop
pushw
dec
nop
test
sbb
pushf
in
pop
add
push
xchg
cmpsl
mov
insl
stc
inc
addb
outsl
lahf
call
push
jnp
es
leave
pusha
leave
push
cmp
addl
fmul
gs
sahf
xchg
jae
lock
jns
mov
shl
in
movsb
inc
dec
sbb
and
mov
push
sbb
push
mov
pop
stc
stos
les
out
adc
stos
jnp
inc
lcall
rolb
push
leave
inc
adc
jmp
inc
dec
mov
sub
or
cmp
pop
cwtl
lret
test
jmp
aas
call
out
paddd
xchg
push
sub
iret
pusha
xor
pop
jge
jecxz
xor
dec
dec
ljmp
repz
inc
add
xchg
bound
inc
xchg
icebp
sub
sub
fs
rcrb
xor
pop
or
pusha
adc
adc
daa
sbb
push
mov
add
pop
add
clc
scas
mov
lods
adc
xor
add
lock
or
adc
es
pop
push
sbb
cmpsl
cs
dec
call
je
movhps
sarl
aam
lock
pop
aaa
dec
inc
out
inc
push
push
push
xchg
xchg
adc
add
mov
ds
and
cli
mov
xor
nop
cmpl
pop
add
into
lcall
pusha
cmp
push
or
dec
push
loopne
mov
xor
jmp
add
lahf
adc
or
dec
sahf
cs
push
aas
fadd
xor
jns
and
sub
add
xlat
push
push
and
adc
mov
sbb
push
pop
inc
movsb
mov
gs
sub
pop
sub
push
mov
pop
jp
sub
xor
adc
stos
and
mov
data16
xor
and
pop
in
nop
jnp
ret
jnp
fcomps
jo
nop
sahf
adc
jnp
stc
sub
cli
pop
mov
cwtl
xorl
pop
inc
or
jno
jb
pop
inc
pop
dec
cmp
and
dec
add
enter
filds
and
repz
test
sti
xchg
push
notb
ret
fnstenv
sub
sub
xor
decb
cwtl
adc
add
xor
jg
and
je
fists
fldcw
jo
xchg
push
mov
je
out
data16
jmp
mov
cmp
and
movsb
cli
fadds
add
mov
jmp
nopl
push
lods
add
sti
movsl
jecxz
icebp
loop
add
lds
test
push
adc
mov
mov
and
pop
pop
push
add
sbb
unpcklps
fadds
sub
std
jle
cmp
lahf
jno
xchg
iret
dec
mov
push
lret
es
andb
and
repz
in
nop
mov
add
push
xchg
or
xchg
jmp
ss
lret
je
jns
dec
out
outsl
xchg
invlpg
loop
shl
js
incb
and
or
xchg
and
xchg
shll
mov
shrb
leave
dec
stos
pusha
or
add
dec
pop
mov
mov
call
or
sub
mov
xor
xor
jne
sub
or
js
push
vlddqu
or
cmp
add
sub
fs
stos
sbb
test
mov
cmpsl
popa
jg
es
movsl
sbb
adc
jecxz
repz
xor
testb
push
andb
mov
add
dec
scas
mov
shrl
insl
movsl
scas
leave
and
add
test
mov
pop
mul
loop
ja
pop
jp
cld
imul
inc
push
shlb
pop
add
jl
jecxz
bound
lret
and
sbbl
lock
or
gs
stc
repz
lret
adcl
cmp
mov
cmc
push
add
mov
test
push
mov
jns
fcoml
mov
jl
mov
inc
pop
fsts
decb
movsl
in
sbb
fisttps
inc
loop
insb
pop
arpl
notl
mov
mulb
and
dec
add
mov
sub
inc
insl
lds
idivl
clc
inc
push
out
fildl
inc
rolb
lret
cmp
daa
inc
jge
scas
xor
xchg
les
add
pop
adcl
adc
xor
jmp
add
pop
pop
xor
and
data16
pop
lods
xor
jmp
mov
outsb
sbb
cli
lea
mov
mov
add
clc
jmp
test
jmp
rcl
mov
stos
push
mov
call
pop
inc
or
xor
push
popf
arpl
out
sub
sub
in
stos
push
push
add
mov
jb
pop
and
pop
push
adc
out
cmc
decb
sub
ljmp
jb
xchg
jge
pusha
cs
mov
add
mov
ljmp
add
push
fdivrs
inc
fimuls
jmp
fwait
arpl
js
aas
shll
femms
lods
mov
das
xchg
call
daa
dec
les
jp
push
mov
sbbb
in
xchg
pusha
pop
add
fiadds
mov
and
shr
cmp
insl
scas
fmulp
and
negb
addr16
or
inc
xlat
inc
pop
add
xchg
pop
and
pop
sub
lods
mov
pop
or
pusha
in
add
std
mov
xchg
in
rcrb
push
gs
dec
test
loop
pushf
adc
rcrl
ljmp
xchg
dec
cmp
dec
adc
stos
push
or
push
jl
lcall
stc
lcall
daa
mov
imul
cmp
dec
pop
movsb
and
cmp
jnp
sub
and
dec
jae
dec
fcomps
xor
neg
adc
add
push
mov
sub
test
or
out
dec
mov
and
and
add
insb
jmp
mov
pop
xor
mov
push
sbb
push
std
ds
out
push
jmp
sbbl
pushf
push
add
jmp
push
or
sbb
cld
xchg
add
inc
mov
cmp
lcall
xchg
dec
push
sub
mov
or
cmp
cld
test
jge
loopne
in
shll
js
push
dec
iret
push
stos
nop
ja
lcall
sub
sbb
inc
out
outsl
or
fwait
pop
out
jno
cs
outsl
mov
push
jp
cs
nop
lea
xchg
mov
subb
stc
jp
xlat
xchg
mov
dec
leave
jl
out
add
pop
push
mov
adc
cs
inc
test
push
data16
sub
add
mov
pop
lahf
fs
cli
sub
and
scas
test
mov
jmp
inc
push
imul
jl
adc
call
xor
push
mov
enter
ds
inc
pop
out
jmp
xchg
ljmp
shr
es
add
dec
add
sarl
in
inc
lcall
mov
ret
bound
mov
scas
je
xor
push
sub
jle
cmp
aas
loopne
sub
add
or
fstl
dec
int3
dec
mov
push
dec
hlt
orl
out
imul
push
imul
jecxz
call
fwait
mov
push
mov
lahf
sahf
clc
out
jp
and
sbb
push
addl
add
stos
or
pop
push
dec
jmp
lret
jg
jb
mov
orb
and
lahf
dec
xor
popa
or
aad
dec
scas
add
adc
push
inc
or
adc
lock
or
int3
jae
popa
aam
mov
mov
xchg
into
mov
fnstenv
xchg
hlt
sbb
jl
ljmp
cmp
sub
lock
add
scas
or
dec
sbb
inc
add
push
push
rcl
repnz
adc
xchg
fimull
adc
jmp
dec
faddl
sub
mov
push
or
xchg
sbb
or
fdiv
mov
xor
pop
jg
xor
jmp
imul
rolb
fs
or
pop
aad
push
scas
mov
in
fsubrl
dec
ja
mov
ja
push
dec
pop
loop
call
add
pop
add
clc
das
add
or
inc
adc
push
xor
mov
pusha
cmp
sub
mov
mov
or
jle
adc
push
ds
dec
or
push
cmc
cld
xchg
jp
mov
jnp
inc
sub
divb
call
cwtl
je
lahf
sub
ljmp
xchg
cmpsl
push
nop
in
outsb
leave
add
ljmp
pop
ja
repz
sbbb
xor
xorb
inc
jmp
std
mov
lahf
rcrl
push
clc
and
in
adc
push
repnz
xlat
pop
mov
sti
xchg
sub
push
popf
in
fidivrl
sbb
not
xor
sub
cmp
pop
cmp
lods
add
or
add
bound
dec
inc
dec
sbb
and
push
cmp
mov
pop
filds
mov
or
mov
sti
out
dec
cmc
test
lret
stos
add
imul
xor
xchg
in
loop
dec
int3
xchg
and
lock
dec
jp
inc
test
fiadds
cld
lahf
inc
mov
enter
mov
jmp
mov
inc
push
mov
and
sub
pop
push
mov
cmp
and
jno
or
rcrb
das
add
mov
fstpt
mov
negl
pop
jp
daa
aam
mov
mov
cld
repz
dec
shl
xor
jne
push
dec
movsl
pop
ret
mov
pop
flds
shr
sbb
jae
std
outsl
mov
mov
dec
pop
pop
adc
out
sub
cs
or
pusha
in
adc
sbb
insb
mov
xor
repnz
sbb
xchg
mov
stc
insb
repz
ss
jle
shlb
dec
dec
daa
icebp
lret
add
cmp
inc
into
fs
mov
push
sub
pop
andb
push
jns
imul
arpl
addb
mov
in
adc
xchg
jge
xchg
loope
jge
cmc
bnd
xor
inc
jo
fcoms
mov
inc
mov
sub
push
jl
cwtl
test
fcoms
xchg
fistpll
push
add
daa
mov
es
pop
clc
push
mov
inc
mov
repnz
mov
jp
dec
jno
push
loop
pop
or
decb
jmp
cmp
gs
sub
inc
cmp
sub
loope
les
js
mov
add
adc
out
dec
mov
movb
xchg
fcoml
lds
test
stos
testl
stc
push
sub
pop
add
jo
and
cmpsb
sti
pop
loopne
jno
mov
es
add
fucom
push
orl
stos
and
cli
js
arpl
mov
out
xchg
inc
frstor
mov
jecxz
inc
int
push
and
and
es
mov
mov
add
int3
jae
push
inc
aaa
sub
xor
and
mov
daa
push
loop
gs
in
xor
mov
dec
pop
stos
lret
cli
sbb
mov
hlt
cmpsb
pop
push
xorl
adc
jne
pop
push
insb
popl
pop
push
lock
adc
loope
mov
pusha
add
jecxz
dec
pop
mov
add
stos
push
rcrb
add
fidivrl
and
pop
negl
imul
jmp
aad
xor
cli
test
mov
std
lock
jle
and
lds
scas
dec
insl
clc
sub
or
je
lds
or
xor
int3
push
pusha
cmp
mov
dec
and
pop
push
pop
sti
xchg
sub
dec
js
jg
sbb
inc
push
inc
addl
mov
push
add
xchg
notl
cmpsb
repz
ljmp
imul
imul
test
rorb
rorb
jno
mov
or
clc
bnd
mov
fldcw
loopne
dec
fs
outsl
adc
cmp
jmp
sbb
fstp
mov
cmc
test
scas
xor
int3
sub
call
pop
sbb
adc
jne
addr16
sub
cltd
mov
lahf
cld
lods
clc
loopne
test
out
pop
push
stos
jp
test
pop
add
xchg
daa
pop
daa
std
and
sti
inc
lcall
addr16
sbb
pop
pop
aam
jb
pop
ret
shl
adcb
fdivr
jecxz
pushf
push
stos
or
sbb
push
iret
dec
dec
outsl
hlt
xchg
lcall
aas
inc
lds
xor
pop
mov
push
test
lock
imul
ret
popa
call
outsl
add
pop
push
mov
add
or
mov
mov
jnp
nop
rorl
cli
lea
push
jno
mov
add
bound
jmp
mov
push
fnstenv
xchg
pop
enter
int3
in
sbb
cld
packssdw
arpl
ljmp
cltd
test
add
add
mov
jmp
ror
pop
iret
jno
fsubl
aad
arpl
xchg
ja
dec
movsl
mov
xor
push
jmp
ljmp
cmc
pusha
mov
push
pop
daa
ja
inc
cltd
inc
jno
lock
and
repz
and
inc
loope
clc
inc
loopne
out
mov
sub
jmp
mov
enter
add
mov
and
jbe,pt
push
push
xchg
data16
sbb
push
pop
xchg
push
push
aas
xchg
popa
aaa
inc
add
or
out
sbb
mov
mov
jmp
push
mov
cmp
jnp
sub
cs
fildll
enter
popf
fcmovbe
push
inc
sbb
mov
cmp
or
dec
fists
push
push
loop
pop
dec
cmp
iret
sub
push
add
pop
sub
sub
jmp
aaa
ja
add
pop
sub
jb
mov
fcmovne
imul
ret
mov
xchg
int
pop
mov
xor
mov
or
cmp
pusha
or
xorl
out
or
fiadds
rcl
sub
dec
jmp
scas
and
rorb
mov
add
fs
xor
imul
test
and
lret
cmp
imul
int
ljmp
out
fsubs
xchg
inc
sub
mov
sub
mov
xchg
push
mov
je
es
pop
push
insb
popa
jmp
sub
sub
adc
pop
pop
mov
inc
dec
jg
push
rcrl
mov
mov
std
mov
mov
mov
lahf
adc
enter
cmp
cwtl
negb
xor
mov
insb
xor
popf
jae
mov
jle
addr16
ds
cmp
icebp
and
xor
je
add
cmpsb
push
pusha
cmp
outsl
das
or
fists
repz
push
sarl
dec
push
and
and
movsl
push
sbb
xchg
and
fs
inc
std
cmp
incb
cmp
orb
jmp
inc
js
xor
loope
sub
les
decb
sub
pop
cmc
xchg
jl
inc
aam
xor
push
adc
mov
mov
ljmp
adc
ja
push
ja
fistpll
add
mov
in
mov
inc
sub
lret
out
orb
dec
addr16
pop
fwait
cmp
jmp
or
das
pop
pop
add
aas
call
xchg
scas
lret
roll
push
pop
pop
push
imul
test
push
bound
mov
inc
das
test
jmp
jg
int
inc
gs
imul
xor
push
and
daa
push
imul
insb
or
fistps
dec
lea
mov
rcrb
jns
inc
das
inc
testb
add
or
ja
lods
fsubs
and
add
mov
dec
mov
pop
in
out
cltd
push
data16
in
fdivr
ret
push
inc
xor
adcl
sbb
add
pusha
dec
insb
push
mov
add
dec
add
adc
push
push
pop
sub
pop
fadds
add
mov
mov
ja
mov
out
sub
insl
or
lods
sbb
sbb
pop
dec
in
jnp
or
movl
insb
or
pop
adc
jns
push
mov
daa
jnp
or
rorb
sub
iret
inc
lock
xchg
ret
ja
add
mov
aas
or
and
xor
mov
insb
dec
and
pop
cld
jns
add
rcl
dec
out
jmp
and
lret
push
push
jmp
test
sbb
sbbl
sub
das
lahf
sbb
lods
or
int3
sbb
daa
popf
add
dec
rcll
lock
dec
scas
sbb
enterw
jnp
dec
jg
lea
test
loope
jp
and
jp
test
cmp
xor
sub
sbbb
mov
push
and
dec
pop
mov
jmp
out
xor
add
lea
xor
ret
or
shlb
pop
inc
add
rcr
push
push
clc
mov
or
das
sbb
or
sub
outsb
adc
push
sti
add
inc
mov
or
or
sbb
mov
mov
jne
punpckhdq
cmc
or
add
add
mov
cmpsb
rcrb
pusha
fwait
push
mov
out
push
inc
out
fld
lahf
push
aas
xchg
test
stos
loop
rcrl
cs
call
sbb
cli
mov
shrb
or
ds
and
add
or
sub
sbb
jmp
xchg
or
adcl
das
push
sar
inc
int3
out
ret
imul
cmpsl
divb
stos
int
das
bound
pop
pushf
add
mov
ljmp
mov
xor
rcrl
xchg
cld
movsl
inc
sahf
pop
fucomip
mov
xchg
push
xlat
push
pop
adc
rcl
imul
xchg
pop
mov
ret
and
pop
add
mov
divl
pushf
jge
mov
test
outsb
lret
mov
clc
js
or
push
push
pop
jmp
dec
jo
mov
shlb
adc
popf
add
push
cvtps2pi
mov
pop
or
jno
pusha
xchg
jle
adc
and
ficompl
shl
pop
xchg
pop
add
push
xorb
lret
fucomp
movsl
not
sbb
out
test
stc
or
cmp
test
sbb
pop
shr
sub
adc
add
push
pusha
pusha
pop
pop
jmp
arpl
push
gs
xchg
mov
jmp
mov
fists
mov
and
dec
pop
jg
les
out
popf
push
or
icebp
xor
loop
push
inc
push
pusha
pop
lret
fs
sbb
xchg
lds
add
adc
xchg
in
mov
ret
or
bound
adc
or
sbb
push
lods
xor
incl
subl
dec
lahf
test
push
lock
mov
inc
xor
addr16
ja
outsl
lock
pop
loope
test
mov
and
jl
mov
push
dec
mov
adc
push
lock
shld
bound
dec
xor
xchg
xor
add
jmp
in
arpl
adc
or
jne
sbb
cwtl
cmp
sub
jb
and
mov
ss
filds
sub
sub
inc
add
xor
xchg
xchg
js
leave
or
push
lahf
bound
sbb
ret
or
addr16
lods
lret
mov
jb
xchg
jle
movsl
test
mov
or
adc
mov
dec
add
xchg
lahf
push
adc
je
inc
test
mov
or
xchg
jg
or
jmp
sahf
jnp
js
jnp
xchg
test
and
dec
ljmp
mov
adc
add
add
jmp
nop
ja
sbb
clc
loop
aas
xchg
lret
mov
sarl
mov
aas
enter
pusha
mov
not
pop
scas
lcall
and
mov
mov
xlat
ljmp
leave
mov
bound
clc
adc
sub
das
push
mov
dec
push
es
or
jns
in
pop
adc
js
cmpxchg
push
jns
sbb
popa
test
cmpsb
push
cmc
lcall
in
ret
rcrl
lds
push
mov
push
movsl
call
mov
scas
arpl
stos
imul
dec
or
incb
incl
mov
dec
xor
pop
mov
popf
add
les
outsb
mov
mov
dec
sub
or
das
pop
nop
jg
sbb
std
shll
pop
dec
and
imul
mov
jbe
pop
inc
shll
in
aad
push
pop
iret
add
push
pop
xchg
mull
mov
shlb
and
out
aas
add
cmc
adc
push
pop
or
fdiv
push
mov
sub
jns
sahf
lret
stc
call
pop
std
dec
add
bound
sub
jne
xor
sub
cmp
loop
rcrb
xlat
jbe
mull
sub
mov
jmp
mov
pop
push
rcrb
stc
mov
jb
mov
push
hlt
inc
pop
pmulhuw
in
jecxz
sete
xchg
bswap
das
int
xor
insl
jns
popa
pop
sbb
or
push
mov
in
out
mov
rcl
mov
push
jne
ljmp
mov
adc
xchg
dec
push
pop
pusha
pop
sbb
xor
sub
cwtl
iret
or
or
jne
mov
jmp
test
lods
mov
in
cs
or
clc
bound
dec
xadd
pop
cmp
cwtl
sbb
cmp
mov
inc
and
in
testl
xchg
fmuls
fistps
add
movsb
xchg
and
mov
sub
out
inc
sbb
inc
pop
test
rorl
xchg
inc
push
andl
leave
shlb
mov
or
add
addl
adc
sub
adc
sub
add
das
jmp
out
pop
sub
add
ljmp
push
xchg
mov
lea
xorb
mov
inc
jle
xor
insl
inc
pop
sbb
arpl
push
mov
sub
enter
incl
mov
js
push
nop
clc
add
jbe
adc
xchg
stos
stos
xor
mov
pop
dec
js
jmp
in
rorb
dec
pop
pop
pop
lds
scas
mov
pop
rcrb
clc
in
pop
loope
fnsave
in
repnz
xor
sbb
ljmp
pop
sbb
cmp
ljmp
das
hlt
adc
jg
pop
mov
jmp
ljmp
inc
push
sub
popf
push
adc
cmp
mov
test
sbbl
lock
dec
sub
xchg
fs
cmp
mov
mov
jnp
pushf
out
sub
js
dec
out
adc
and
fwait
imul
rcrl
or
popl
jg
add
and
xor
push
aas
mov
adc
push
add
inc
inc
cmpsl
add
int
lock
cmp
aam
mov
test
mov
mov
xor
es
or
ret
in
add
push
mov
aas
daa
inc
sbb
pop
xor
jo
push
sbb
mov
push
cmp
outsl
add
mov
xchg
xchg
inc
xchg
push
lds
shlb
fisttpll
mov
inc
scas
pop
call
pop
pop
sub
shrl
add
cmp
sub
sub
shlb
push
in
pop
dec
cli
fiaddl
pop
mov
pop
xorb
dec
mov
out
das
idivb
out
jae
adc
pop
adc
clc
dec
pop
or
nop
xchg
add
stos
sub
mov
xchg
pop
jmp
iret
and
sub
cs
sub
insl
push
push
cmp
and
movsl
pusha
or
push
push
add
js
add
cli
ja
xchg
test
scas
jge
inc
icebp
call
pop
incb
dec
out
sbb
jecxz
lea
sub
pop
lock
push
cli
jne
inc
inc
addr16
or
cmp
jmp
push
lret
or
cmp
outsb
pushf
insb
push
mov
xchg
jmp
mov
shr
add
push
nop
popf
ret
or
inc
rcrb
jne
mov
cmp
movsl
lcall
cmpsl
das
divb
gs
xorb
add
push
push
push
dec
mov
push
mov
xor
push
xor
pop
push
or
leave
mov
xlat
xchg
sub
mov
lods
clc
pusha
jo
adc
sub
add
pop
sbb
pop
movsl
cmpsl
imul
mov
sub
stos
sbb
mov
xchg
add
adc
xchg
sub
jo
movsb
sbb
pop
dec
adcb
add
arpl
dec
dec
add
ud0
rcrl
popa
xchg
or
or
mov
bound
cmp
or
or
pop
ret
sub
mov
test
adc
in
dec
out
out
adc
rorb
push
lds
inc
cltd
mov
mov
add
push
mov
int3
mov
das
in
push
push
out
repnz
std
jp
pop
mov
push
cwtl
ds
jp
jo
fimuls
nop
cld
xsaves
into
fmuls
mov
sbb
xor
sub
cmp
rcrl
fisttpl
sbb
sub
adc
flds
sbb
stos
pop
stc
mov
mov
pop
push
fdivs
cmp
inc
sbb
test
repnz
lahf
push
nop
out
push
mov
fstps
jmp
jmp
push
gs
xchg
lret
sti
lret
subb
add
mov
sbb
mov
enter
inc
inc
out
jecxz
lds
sbb
dec
repz
out
inc
mov
xchg
outsb
mov
pop
cmc
imul
out
mov
insl
jl
dec
sub
pop
pop
sub
push
push
push
mov
shlb
lods
push
add
stc
inc
push
push
dec
leave
std
xchg
jp
pop
sub
jmp
clc
int
adc
push
sar
sti
mov
std
scas
imul
sub
and
cli
push
popf
inc
lcall
sub
lods
std
mov
add
xor
shl
test
test
mov
lds
aas
flds
pop
xlat
cmp
loope
xchg
cld
add
cld
test
pop
jmp
call
pushf
jo
xchg
jge
sbb
inc
add
inc
mov
aad
ss
lock
jecxz
adc
xor
int
jmp
cmpsl
push
add
or
je
inc
jb
xchg
sub
fnstsw
pop
daa
dec
faddl
jle
iret
or
pop
jge
mov
out
push
push
imul
xlat
lds
add
lret
push
adc
pop
fadds
xor
stos
pop
out
insl
and
shrl
pop
adc
jmp
and
dec
push
jle
jne
or
and
sahf
fldl
pop
lret
and
or
push
and
stos
cmp
xlat
jmp
xchg
xor
sub
dec
or
es
sub
rcll
inc
add
in
add
hlt
pop
lahf
push
sub
and
mov
pop
push
sub
sti
out
sti
inc
rorl
je
xor
xchg
stos
and
mov
pop
lods
push
cmp
add
inc
js
faddl
lds
leave
add
pop
jge
das
jmp
lahf
lea
mov
cmp
pop
add
mov
pop
inc
dec
sbbl
inc
test
add
fstl
xor
mulb
jo
mov
ret
or
jmp
mov
push
mov
cmp
push
push
ja
xchg
les
iret
cwtl
aam
mov
fdivp
movsb
jnp
ljmp
jne
std
setg
dec
scas
shll
cli
cmpl
imul
jmp
mov
xchg
xor
ret
test
jnp
pushf
test
adc
adc
add
push
push
mov
scas
sbbb
sub
cmp
pushf
pop
inc
pop
mov
insl
and
dec
test
push
xchg
sbb
in
sub
dec
mov
subl
icebp
mov
lods
push
pushf
or
jbe
push
push
and
lret
pushf
outsl
sub
shlb
pop
pop
pop
loop
adc
lret
lods
loop
or
add
pushl
or
pop
mov
push
loope
add
jae
push
lea
mov
cmp
add
add
ret
and
out
shrl
add
mov
add
ficomps
inc
adc
setle
dec
add
push
pusha
inc
cld
fidivrs
scas
cli
mov
sub
sarb
inc
test
dec
push
mov
adc
pop
mov
enter
ror
lret
xor
mov
add
sti
popa
ljmp
popa
addl
xchg
icebp
clts
or
arpl
add
jne
inc
pop
dec
cld
and
addl
fwait
scas
cmp
cmpsl
ja
repz
lret
cli
dec
in
shll
pop
and
ret
call
loope
out
inc
mov
mov
pop
scas
cmp
rcrl
mov
cmp
mov
sbb
aaa
stos
sub
or
cld
adc
movsb
mov
xor
xor
ds
adc
cmpsb
gs
xorb
pop
push
mov
push
ja
loope
cld
notl
out
jp
jbe
loopne
icebp
sub
icebp
adc
int3
mov
loope
push
mov
add
aas
add
movsl
lods
gs
aaa
sar
mov
jmp
add
sbb
gs
setne
test
or
adc
es
inc
popf
icebp
shll
sub
loope
repnz
xchg
and
arpl
ret
push
leave
int3
add
inc
sub
stos
lds
add
xchg
jno
push
sbb
sbb
sub
inc
sub
pop
pop
imul
pop
mov
or
pop
and
dec
jae
or
icebp
insl
mov
jg
pop
and
dec
cli
adc
or
push
pop
push
sahf
jl
call
pop
loopne
sub
xchg
and
add
sti
mov
cli
mov
adc
movsb
mov
fwait
aas
dec
mov
aaa
insb
cmp
scas
test
cs
jns
test
ret
aad
mov
add
out
xor
pusha
fstps
cmp
dec
lods
in
ficomps
cmpsb
aas
sub
sbb
xor
clc
test
cmp
pop
sub
xor
adc
and
pop
cmpb
ud2
jecxz
icebp
dec
callw
add
pop
stos
xor
imul
ds
inc
sti
pop
or
iret
xchg
and
lds
call
xor
loopne
pop
or
cld
hlt
imul
into
daa
rcll
nop
jb
dec
out
and
jbe
cmp
and
repz
mov
aas
stc
add
nop
pusha
jg
mov
movsb
push
push
adc
scas
jo
and
push
ffreep
cmp
test
pop
jmp
adc
inc
adc
in
or
sbb
cmp
jne
push
xorb
pop
icebp
fs
pop
sbb
ds
test
test
pop
add
int
inc
and
xor
and
jo
inc
idivl
andl
mov
in
dec
cli
mov
fnstcw
lcall
mov
leave
add
mov
add
push
call
or
push
mov
add
cmp
test
hlt
jg
or
xor
lahf
je
pop
aam
arpl
jne
add
out
dec
pop
xlat
xor
adc
sbb
mov
jl
imul
scas
xchg
pop
mov
mov
loope
jno
add
jmp
dec
or
adc
dec
cmp
pop
pusha
imul
mov
pushf
or
leave
jae
test
daa
and
adc
call
daa
mov
icebp
orl
into
mov
jne
sub
sbb
inc
xor
pusha
push
aaa
adc
sub
jmp
test
ljmp
loop
test
xor
push
repnz
sub
pop
ja
sub
push
mov
jbe
mov
sub
jbe
jae
lock
stos
mov
mov
shlb
pop
pop
and
pop
push
mov
push
pop
pusha
mov
in
sub
fstpt
in
push
pop
inc
jge
arpl
sti
psraw
les
insl
rolb
sbb
or
push
sub
push
or
out
scas
shlb
push
aam
insl
jle
sub
push
in
push
cld
neg
add
jmp
fs
gs
or
scas
mov
aas
or
sub
dec
inc
shr
dec
sub
dec
in
pushf
inc
xchg
sub
stos
adc
stos
xchg
gs
adc
jmp
or
pop
and
dec
dec
aad
cmp
aas
pop
repz
mov
bound
xchg
xor
adc
mov
loopne
into
das
pop
flds
sahf
mov
add
lock
sbb
cmpsb
lds
sbb
adc
test
and
or
mov
fmull
add
cwtl
push
inc
sbb
add
mov
daa
push
wbinvd
jo
in
add
adc
xchg
aas
shrl
aam
push
or
aas
vmread
fisubrs
jmp
ljmp
jne
cs
sub
pop
push
jl
pusha
xor
sub
inc
or
pusha
test
adcb
and
push
push
stc
movl
sub
jae
or
push
addb
add
ds
push
insb
lods
fldl
outsl
repnz
andl
movl
push
sbb
jmp
cmc
pop
dec
adc
lahf
and
cmpsb
cwtl
in
daa
sbbl
mov
jmp
jne
lret
or
pop
fisttpll
pop
fsubrs
jns
cltd
mov
pop
roll
ret
mov
cwtl
insl
jmp
fsub
mov
push
jp
pop
dec
clc
idivb
icebp
jmp
push
pop
add
fcomp
fs
pusha
cmp
mov
sbb
xor
push
jge
pop
inc
mov
scas
mov
cmp
sbb
jmp
stos
mov
jge
pop
pop
dec
or
jo
adc
cmp
ret
stc
pop
mov
cmpl
add
xchg
shll
popa
sar
push
into
cli
pop
mov
ljmp
data16
jmp
push
shlb
pop
outsl
adc
loopne
mov
push
xorb
add
sub
divl
sbb
dec
lds
push
std
or
or
pop
sub
das
sbb
scas
jo
mov
cmp
mov
pop
repnz
pop
jg
push
insl
stos
fsubrs
popa
mov
loope
jb
add
adc
mov
out
cmpxchg
test
lret
dec
lds
fdivrs
dec
mov
add
repnz
xchg
icebp
inc
jecxz
fcmovnu
pusha
or
push
xchg
push
mov
orb
pop
pop
xor
mov
xor
inc
pop
inc
dec
add
xlat
incb
push
push
mov
mov
shll
mov
sbb
roll
inc
in
ss
mov
sbb
pop
add
ljmp
jbe
push
cmp
mov
pop
sbb
jmp
stos
fsubl
jle
xchg
test
push
pushl
mov
mov
cli
jge
push
mov
das
lds
sbbb
pop
xlat
inc
cld
and
jo
xor
add
enter
stos
jb
int3
cmp
jo
test
lea
pusha
mov
mov
sarb
xchg
pop
xchg
and
add
push
mov
mov
iret
gs
loop
lret
add
pop
or
outsl
inc
and
adc
push
or
pop
dec
mov
dec
xchg
jp
xor
and
add
push
sbb
arpl
and
cmp
add
xor
pop
out
ljmp
fldl
imul
inc
nop
movsb
push
add
insb
jb
jae
mov
sub
jmp
mov
shrl
test
mov
mov
out
sbb
jmp
repz
idiv
testb
push
in
xor
andl
xchg
push
adc
pop
ja
dec
call
inc
pop
rcl
dec
mov
mov
jl
xchg
cli
adc
add
ret
xchg
lret
pop
pop
loop
xchg
pushfw
sub
jp
leave
imul
jmp
push
movb
jge
ret
pop
stos
sbb
ljmp
pop
jle
enter
add
mov
out
sub
push
loope
and
test
dec
xor
sbb
scas
mov
adc
push
les
orl
xchg
push
or
leave
sahf
sarl
sbbl
shl
mov
test
dec
jp
aaa
dec
cld
pop
ss
fstl
mov
sub
pusha
popa
mov
xchg
add
movsl
loopne
cmpsl
pop
aaa
in
fs
xor
mov
dec
pop
mov
imul
mov
dec
jmp
jg
inc
aas
jbe
mov
mov
jo
mov
daa
mov
add
pop
sub
or
push
adc
lahf
in
shll
and
xchg
mov
push
add
sbb
sub
je
push
add
dec
inc
out
add
pusha
bound
mov
movsl
popa
test
or
pop
cmp
add
or
pop
call
jmp
ffree
sub
or
jg
inc
fcoml
adc
add
push
push
sbb
pop
outsl
lds
pop
jmp
add
add
add
jmp
daa
out
or
or
pop
sub
push
dec
mov
les
add
hlt
test
scas
aad
dec
add
int3
jno
cmp
mov
flds
ss
pop
ds
add
pop
inc
jbe
stos
pop
jne
cmp
dec
js
sbbl
adc
pop
pop
ja
push
loopne
pop
lods
cwtl
and
pop
push
and
push
movsl
add
jno
aas
in
es
aas
insb
xor
in
repnz
mov
jmp
inc
call
imul
xor
sub
inc
xchg
push
cmp
push
mov
clc
out
mov
cmp
mov
mov
rcll
mov
lea
push
aaa
es
mov
add
inc
xor
sbb
int3
add
pop
or
jmp
lods
push
jb
es
mulps
add
jns
scas
aas
mov
mov
lods
and
and
push
cmp
les
and
jno
add
lods
add
sub
lods
and
add
jno
mov
xchg
mov
mov
add
popf
outsb
jo
mov
repz
jmp
inc
push
lods
xor
aaa
add
dec
cvtdq2ps
into
popa
pop
in
push
test
jns
xchg
push
adc
ret
add
lea
arpl
xchg
jo
mov
leave
incb
and
lcall
cli
push
push
ja
aam
sbb
adc
fs
adc
mov
dec
shlb
mov
dec
mov
inc
push
pop
pushf
sbb
jnp
dec
jmp
shlb
xor
imul
pop
mov
sub
pop
decb
mov
lret
outsb
shll
jne
mov
inc
pop
sub
jae
das
jb
cmp
xchg
mov
repnz
sbb
add
lret
ja
sub
sub
pushf
pop
andb
ljmp
adc
mov
test
in
rorl
jno
repz
hlt
cmp
popa
pop
push
ret
cwtl
push
adc
xor
sub
cmp
popf
shlb
dec
add
add
mov
cmc
mov
jle
mov
sbb
inc
imul
repnz
add
cmp
dec
push
xchg
not
or
push
xor
aad
icebp
or
leave
cld
add
movb
add
cwtl
xchg
ja
pop
and
lock
xlat
ret
scas
icebp
push
add
test
mov
lahf
jecxz
add
test
sti
sbb
dec
and
cmpsl
push
sbbb
mov
mov
cmp
mov
and
inc
add
jnp
rcrl
xchg
outsl
xor
loop
gs
inc
imul
ret
sahf
add
sbbb
adc
or
xor
and
or
adc
and
mov
jge
push
loope
xchg
mov
xlat
or
sbb
jle
mov
xor
add
mov
push
jns
xor
xor
stos
xchg
inc
cld
pop
mov
cmp
shll
out
shll
repz
xchg
sarl
jne
in
dec
je
ljmp
lahf
nop
or
add
and
aam
aaa
add
dec
ss
inc
loopne
push
adc
mov
jmp
out
mov
clc
iret
xorb
out
add
cmpl
lods
or
push
dec
inc
stc
cld
mov
push
ret
sbb
mov
pop
xor
push
mov
ljmp
daa
addr16
sbb
rcll
or
ficoms
imul
outsb
push
xor
repz
pop
hlt
jbe
mov
jg
testl
jnp
or
push
jmp
imul
mov
pop
call
xchg
fs
sbb
pusha
push
add
xor
mov
jmp
lret
or
ret
out
mov
adcl
test
loop
xchg
mov
and
push
xor
cmp
xchg
push
push
push
xor
adc
push
or
daa
push
js
and
push
mov
inc
sub
jno
inc
cmp
dec
les
add
test
inc
pop
jmp
mov
xchg
loopne
inc
movlps
mov
inc
mov
mov
ficomps
jge
add
out
fdivl
hlt
add
jmp
xor
jmp
cmp
cltd
das
add
aaa
shrl
pop
adc
dec
mov
cmp
pusha
mov
out
push
fdivrs
jno
cmp
int3
rcrb
xor
fstps
mov
and
fdivs
repz
fcoms
mov
jle
mov
or
mov
cmpsb
sbb
push
or
out
into
dec
sub
fldenv
and
mov
cmpsb
dec
jne
mov
add
enter
aaa
test
and
inc
in
add
push
mov
xor
push
dec
fsts
jge
shl
negl
pop
test
iret
loopne
pop
sbb
popa
pop
stos
and
cmp
cmp
or
cmp
dec
adc
popf
push
and
imul
dec
mov
xor
testb
cmp
inc
lret
add
lahf
and
adc
pop
mov
mov
xchg
add
mov
push
mov
outsl
in
aaa
leave
push
jle
and
je
sub
lret
sub
lcall
and
std
mov
subl
add
sbb
or
pop
mov
add
repnz
cmpxchg
push
push
push
aas
add
push
mov
shll
inc
jae
add
insl
pop
adc
shr
or
test
and
and
leave
ret
in
into
pop
push
scas
jl
loope
invd
mov
push
jecxz
add
and
mov
loopne
jmp
scas
jmp
jno
pop
mov
rcll
arpl
call
and
mov
cld
sub
out
and
out
ret
inc
dec
jne
mov
add
pop
add
shl
pop
pop
sub
xchg
fimuls
jp
les
sti
fsubrl
icebp
fldt
rclb
push
push
add
ljmp
mov
mov
xor
mov
test
pop
xchg
cmc
jmp
std
call
imul
out
push
filds
sub
or
icebp
orl
or
stc
cmpsb
xor
and
push
out
adc
int
cltd
xchg
in
mov
idivl
or
jo
mov
cmp
add
stos
pop
push
pop
sub
bound
lods
lds
pop
or
pop
arpl
movsl
jae
mov
mov
pop
out
mov
stc
or
out
inc
or
lds
xchg
mov
lret
xor
scas
xlat
stos
aad
cld
adc
push
sub
xor
or
push
sbb
fucom
jns
sbb
xchg
pop
adc
dec
pop
fldenv
push
scas
fmuls
add
xor
push
sbb
jae
fidivrl
push
repz
inc
pop
xchg
fs
lret
or
icebp
add
jne
enter
incb
outsl
mov
and
sub
sbb
xor
mov
cmp
scas
aad
mov
test
mov
fwait
mov
pop
std
adc
dec
push
das
popf
pop
add
cld
and
sub
pop
or
int3
fbstp
add
pop
dec
adc
sahf
mov
shrl
ljmp
and
jmp
mov
mov
and
cmp
inc
inc
and
loope
sbb
pushf
inc
add
in
out
fimull
push
lods
divb
push
jecxz
add
dec
push
mov
call
test
xor
xor
out
dec
mov
repnz
push
mov
adc
setno
fisubrs
mov
ret
jl
cmp
inc
test
sub
je
movb
mov
jb
push
adc
push
add
cmp
mov
inc
jge
insl
pop
and
sbbb
test
es
sahf
shr
push
xor
jl
jp
cmp
xorl
dec
or
and
loope
std
in
add
lret
xchg
in
fmull
jmp
push
mov
jb
xchg
cmp
das
ljmp
das
mov
js
or
jo
and
sbb
add
fidivs
test
add
les
inc
push
test
cmp
das
cmp
pop
xor
inc
sbb
and
dec
or
jnp
lods
ror
sub
jp
mov
add
cmpsb
sub
mov
jecxz
cmpsb
adc
mov
rclb
mov
addr16
mov
adcb
ja
ja
insl
loope
dec
push
mov
sbb
iret
in
sub
jb
mov
iret
push
push
push
dec
loope
jle
sub
jo
mov
mov
cmp
data16
mov
loop
pusha
scas
shrl
or
repz
orl
jne
pop
subb
adc
repnz
clc
loop
std
pop
or
mov
dec
call
cld
test
push
pop
fstps
nop
mov
scas
mov
mov
xchg
divl
jg
data16
sbb
xchg
xor
push
dec
loopne
sub
mov
add
cltd
test
or
xor
call
inc
push
jp
loopne
pop
mov
jge
dec
lret
adc
mov
pop
xor
xor
jmp
xor
enter
xchg
pop
loop
or
and
add
inc
inc
pop
xor
pop
mov
mov
mov
out
mov
mov
push
lcall
dec
xor
lret
sub
mov
js
ss
mov
pop
ficoms
add
loopne
sub
imul
aaa
cmpsl
je
mov
enter
jne
xchg
and
sbb
push
lea
leave
outsb
xor
pusha
and
or
sbb
pop
call
fcmovnu
jg
rcrl
pop
mov
in
dec
add
add
push
push
cltd
test
mov
cwtl
pop
mov
jg
jp
test
xchg
fwait
adc
stos
shrl
mov
movsb
ja
inc
sub
mov
daa
test
and
xchg
jge
mov
push
add
movsl
mov
mov
rcrl
adc
sbbb
add
jmp
fwait
xchg
or
shll
in
add
repnz
cltd
inc
test
add
cmpsb
dec
outsl
xor
or
sbb
shr
jp
adc
pop
or
dec
repnz
add
or
add
in
ret
lahf
push
mov
adc
enter
sbb
cmpsb
test
movlps
mov
ljmp
pop
lds
cmp
xchg
pusha
add
shr
push
mov
rcrl
jmp
jecxz
sbb
adc
mov
das
add
adc
jmp
xchg
pop
ret
andl
std
bound
test
popa
imul
sub
sub
push
ret
jmp
dec
lock
ja
ret
scas
sub
add
cmp
stos
xorb
and
and
pop
and
addb
mov
ljmp
fs
test
enter
out
mov
mov
in
sub
inc
outsb
sub
or
dec
push
jmp
les
and
sbb
or
pop
sub
mov
or
jmp
fst
push
cli
jp
adc
mov
push
ljmp
pop
fldl
lret
ss
jne
lret
fsts
lock
mov
xor
out
push
shl
inc
stc
jge
push
xor
jne
das
push
rcl
xor
lret
je
clc
scas
leave
insl
bound
cwtl
push
add
mov
xchg
dec
cli
mov
loope
addl
mov
push
pop
push
shrl
xchg
nop
pop
ja
adc
adc
sbb
test
das
notb
aad
sub
aas
icebp
mov
fimuls
jmp
movsb
jl
jo
mov
xchg
add
xchg
jmp
jl
adc
xor
arpl
insl
mov
lret
xor
pop
dec
ret
aad
cmc
mov
fildl
pop
jge
popa
pushf
pop
inc
push
std
lock
jmp
xchg
xchg
out
dec
pop
cmpsl
push
fdiv
shlb
mov
test
inc
xchg
xorb
shr
hlt
call
jne
pop
fst
outsl
dec
mov
inc
shr
xor
or
sbb
aas
sti
jle
in
in
scas
mov
push
pop
scas
fidivrl
or
adc
or
ljmp
fldcw
add
xchg
std
and
sub
push
push
push
push
nop
cmp
test
gs
dec
adc
stos
pop
adc
add
pop
xor
repnz
sbb
pop
imul
mov
hlt
sub
ret
jmp
sub
dec
pusha
sub
in
cmp
mov
push
dec
push
or
xchg
test
jle
iret
nop
or
test
pop
or
icebp
push
popa
xor
xor
mov
mov
scas
insl
or
sub
dec
imulb
pop
ds
mov
pop
or
cmc
mov
add
cmp
sub
dec
in
add
sub
push
nop
add
aas
rorb
imul
cmp
xchg
cmp
push
jle
addr16
sarl
push
push
fndisi(8087
push
mov
cli
jmp
lahf
and
iret
pusha
add
ret
pcmpgtb
dec
out
mov
adc
pop
sub
xchg
mov
loop
and
je
cwtl
sub
mov
fisubl
js
addl
add
pop
add
push
push
mov
std
sub
stos
test
and
sbb
loope
and
mov
sub
pop
pop
mov
sbb
mov
push
mov
mov
or
add
maxps
xchg
stos
sbb
daa
movsl
sahf
fbstp
lea
bswap
mov
notl
incb
mov
es
push
sub
jo
adcb
mov
cmp
movsl
daa
imulb
jecxz
shrl
fptan
pop
or
prefetch
or
push
pop
cli
aaa
js
sbb
push
outsl
pusha
ret
pop
pop
cmp
and
mov
wbinvd
notl
push
mov
inc
lods
or
add
jmp
fisttpl
sbb
lods
mov
and
sbb
xor
dec
in
cmpsl
enter
sub
push
daa
push
lds
in
in
mov
sbb
iret
jbe
and
mov
jnp
push
in
jl
push
mov
popf
xchg
push
adc
rclb
mov
xchg
push
das
loop
jne
in
mov
lret
ss
cmc
pop
jns
or
push
dec
dec
mov
pop
les
add
outsb
fwait
adcl
movsl
pop
dec
sub
loope
imul
xchg
push
je
fs
jge
mov
mov
lods
xchg
cmp
bound
mov
add
or
not
in
push
inc
iret
cmp
mov
dec
push
lods
das
call
fcmovbe
dec
mov
mov
jmp
mov
dec
adc
dec
mov
jae
sbb
or
icebp
add
pop
sub
xchg
cwtl
aas
or
jl
mov
scas
subl
sbbb
pop
push
call
in
add
out
ds
jne
pop
add
push
loope
sub
inc
dec
mov
orb
ret
out
das
fldl
daa
xlat
out
repz
jmp
pusha
dec
adc
sahf
xorb
pop
jne
aad
into
cmp
jle
push
leave
pop
add
pop
jle
int3
mov
std
insl
pop
pop
mov
lret
add
cli
pop
adcl
xchg
test
ljmp
adc
add
inc
lret
stos
sbb
push
push
jl
push
fildll
jno
out
cltd
enter
dec
dec
int3
call
mov
hlt
imul
aad
add
sarb
stos
cmp
addr16
jae
add
jnp
or
movl
xchg
mov
push
push
cmpsl
leave
sbb
jno
xlat
inc
or
lods
push
xor
arpl
mov
notl
mov
jne
mov
dec
arpl
jp
inc
inc
sub
push
cwtl
push
push
cwtl
test
fst
ljmp
lret
add
popa
inc
jl
dec
add
inc
fs
orl
sbb
push
ror
xchg
jge
adc
rorb
pop
push
jbe
scas
mov
adc
lcall
sub
pusha
jecxz
cmp
test
insb
call
push
sbb
adc
aaa
inc
xor
xor
daa
lds
push
sub
or
pop
ljmp
mov
adcb
shrl
mov
mov
dec
jmp
xchg
stos
fiadds
push
pop
push
mov
xor
test
jl
sub
pop
mov
or
decl
pop
or
pushf
pop
adc
lcall
fldcw
lods
or
pop
lods
arpl
pop
sbb
cmp
or
jle
jb
jmp
jle
or
test
sar
mov
jl
add
fs
xor
or
xchg
movsl
dec
mov
inc
test
pop
xchg
sub
push
mov
push
jg
aad
in
mov
cmc
cmc
mov
les
adc
shrl
adc
mov
mov
push
jecxz
dec
push
loopne
lcall
ret
pop
out
in
sbb
mov
jb
push
stos
addw
lods
xor
mov
inc
in
and
fisubrl
cmp
test
pop
movsb
adc
sub
imul
loope
int3
jecxz
lds
in
mov
jmp
movsl
in
and
out
dec
pop
vmovlpd
or
jae
xlat
out
daa
rsm
or
add
leave
jo
push
icebp
add
and
mov
sarl
das
or
addb
inc
xor
jmp
cmp
push
sub
sbb
jnp
gs
movsb
adc
jge
pop
cli
xchg
movsb
mov
jo
shlb
pop
aad
adc
adc
call
mov
add
dec
sub
inc
mov
cltd
push
ja
push
add
fadds
data16
sbb
mov
das
mov
sti
xor
pop
dec
push
push
jmp
or
xabort
xchg
test
push
shl
add
out
push
in
sbb
add
and
pop
or
fnstenv
mov
add
neg
xor
in
xchg
pop
lods
add
push
mov
inc
add
lods
andl
dec
add
add
rolb
fdivs
lds
dec
xor
rcrl
and
movsl
je
add
or
xchg
adc
fs
and
insb
add
xchg
inc
movsb
pop
sbb
or
popa
cltd
mov
jg
dec
mov
and
adc
pop
jmp
nop
and
mov
or
in
pop
add
aad
xchg
aam
jmp
xchg
pop
fistps
mov
cltd
or
and
pop
mov
sub
bound
and
shlb
xchg
xor
xor
or
add
ror
enter
sbbl
out
out
sub
repz
not
inc
mov
hlt
inc
or
in
sbb
fists
in
lods
out
and
jbe
pop
adc
scas
dec
sbb
or
sbb
xor
and
mov
neg
xchg
call
pop
jae
add
mov
sarl
pop
sti
or
rolb
inc
pop
jmp
lds
lret
pop
std
out
mov
jbe
jle
imul
divb
sub
or
fidivrl
mov
adc
cmp
mov
push
fisttps
push
and
xorb
sub
mov
push
fsub
pop
jle
adc
add
out
dec
xor
mov
pop
idiv
dec
jecxz
dec
mov
pop
pop
pushl
clc
fistpl
int
in
js
xchg
inc
iret
mov
hlt
jle
pop
int3
and
mov
add
adc
cld
insl
pop
mulb
and
jle
dec
testb
ja
and
jmp
jge
jp
lds
mov
mov
out
jbe
xor
in
cmp
or
xor
mov
inc
mov
loop
dec
insb
test
and
pop
std
call
rolb
fidivs
mov
mov
and
and
bound
pop
push
mov
shll
adc
aas
iret
test
les
push
pop
lea
loopne
xor
sub
dec
fwait
ret
mov
dec
sub
out
or
or
in
pop
xchg
mov
into
lods
repnz
sub
add
pop
dec
mov
out
in
mov
pop
mov
mov
cwtl
mov
mov
fildl
insl
cmp
outsb
jmp
sbb
mov
jo
ret
cs
sarl
ljmp
inc
sub
xor
push
jmp
mov
and
mov
or
fsubs
push
roll
sbb
xor
push
xchg
popa
jmp
push
xchg
pop
bound
push
push
pop
rorb
andl
stos
jo
mov
push
mov
mov
or
push
cld
dec
or
xchg
ret
testb
jp
dec
and
and
movsl
lds
in
xchg
dec
stc
and
mov
or
sbb
imul
sbb
dec
rorb
push
movsb
sub
out
lods
add
jge
or
pop
cwtl
clc
xchg
add
mov
inc
dec
adc
mov
cmc
inc
incb
xor
out
mov
or
jno
and
imul
aaa
mov
pop
jg
xor
and
mov
lock
sub
add
stc
add
push
push
push
nop
jo
stos
push
mov
pushl
popf
jg
adc
int3
inc
shrl
ss
xor
or
setae
lahf
fstpl
inc
ds
std
stc
sub
std
jl
in
fs
dec
aam
bound
std
xchg
rcrl
pop
pop
clc
stos
out
add
outsl
and
lahf
bound
mov
mov
shrb
jno
movsl
pop
ret
xor
or
push
push
pop
fdivp
or
mov
jbe
das
and
push
pusha
jno
lahf
clc
test
adc
mov
ret
sub
shlb
jo
pop
std
add
push
cli
push
add
adc
adc
or
pop
cmp
inc
pop
jge
rcr
popf
xor
pusha
or
dec
or
push
loope
xor
mov
or
pusha
jmp
rorb
cmp
cmp
push
rcr
push
mov
clc
pop
sbb
cmp
cltd
pop
incl
lea
adc
or
arpl
sbb
stc
mov
das
rolb
out
sti
pop
aas
push
mov
jne
push
dec
bound
bnd
jmp
faddp
leave
fistpll
das
xor
sbb
jno
add
pop
cmp
or
xor
add
out
jmp
cmpsl
sbb
and
sbb
pop
push
mov
pop
sub
jns
sub
outsb
ret
push
pop
and
iret
outsb
inc
mov
repnz
and
mov
das
mov
dec
cmp
xchg
fwait
popf
fnstsw
or
nop
or
das
int3
sti
pusha
and
xor
jnp
lods
fldl
stos
mov
sub
sbb
lock
push
or
add
jecxz
xchg
sbb
push
daa
test
xchg
add
xchg
sbb
iret
js
sub
adc
not
dec
jmp
add
mov
movsb
cmp
dec
add
int3
mov
dec
pop
lods
movsl
bnd
jecxz
jl
sahf
adc
cmpsb
daa
push
dec
adc
test
push
sub
fs
cmpsl
das
sub
and
inc
rclb
inc
xchg
push
push
pop
outsb
pop
push
icebp
addb
jnp
dec
jg
fdivrs
enter
jg
jns
mov
mov
add
add
pushf
lahf
bound
pop
lods
add
rclb
jmp
mov
iret
dec
roll
xor
push
shrb
dec
popf
bound
push
ljmp
cmc
shll
lods
ljmp
mov
pop
pop
nop
test
call
ret
push
clc
sbbb
aad
test
sbb
bound
cmp
pop
and
mov
shll
sub
rol
or
jmp
jbe
daa
or
add
mov
fisttps
cmc
or
push
lds
or
incb
jmp
test
in
add
rolb
sbb
adc
adc
popa
adc
rorl
into
mov
lds
jmp
lcall
pop
mov
jl
in
mov
xchg
xchg
imul
and
add
adc
sub
sub
daa
push
add
add
cmp
push
mov
pushf
pop
jl
sub
imul
jmp
out
xor
mov
or
ja
subl
pop
and
into
fbstp
cmp
adc
mov
call
sahf
pop
lahf
shr
dec
ror
scas
jmp
ret
mov
stc
nop
mov
push
mov
xchg
jecxz
aas
das
and
and
lods
inc
popa
push
es
popw
imul
pop
push
and
ret
pop
or
mov
insl
pop
popl
pop
cmp
or
jecxz
add
lds
xchg
push
mov
jle
loop
sub
add
mul
mov
push
push
xchg
mov
ljmp
or
sub
dec
pop
push
test
adc
adc
or
fdivs
shlb
pop
cli
rcrb
pop
pop
das
cmc
cwtl
xchg
mov
and
insb
je
testl
push
xchg
lock
lock
dec
inc
rcrb
adc
jb
add
repnz
mov
bsr
and
cmpsb
xor
outsl
adc
mov
jmp
insw
rolb
int3
add
jge
dec
pusha
or
pushf
ficomps
mov
dec
inc
das
js
xor
cmpsb
sbb
das
inc
loopne
mov
insb
cld
sbb
in
sub
or
or
or
jb
call
push
mov
jle
lahf
or
mov
fidivs
das
lock
shr
out
dec
add
xor
pop
pop
jge
movsl
add
fdivrl
jecxz
jnp
mov
mov
cs
and
loopne
popa
pushf
nop
sub
add
inc
in
rcll
pop
out
mov
sarl
lock
leave
fldenv
rcrl
adc
les
xorl
fldl
and
push
xor
insb
push
cmp
mov
out
or
stc
pop
lea
push
repnz
and
ja
sbb
xchg
pop
ljmp
sbb
xor
cltd
xchg
inc
popf
in
add
jns
xchg
push
sbb
sbb
push
and
aas
outsl
pop
push
idivb
sub
std
nop
dec
clc
stos
rolb
jmp
mov
std
bound
jg
add
popa
sbb
out
push
xlat
push
push
mov
mov
lret
jbe
or
push
pop
xor
addr16
in
bound
loop
test
ret
jp
cs
pushf
mov
push
clc
adc
dec
cmp
into
jmp
push
push
hlt
lods
mov
sbb
jo
out
mov
imul
std
addr16
inc
pop
jl
shlb
iret
or
mov
rclb
add
out
or
std
xor
call
js
xchg
xchg
lret
and
pop
pop
sub
jle
or
jmp
sar
add
sti
std
mov
sub
dec
adc
push
aad
mov
mov
lods
or
call
pop
ljmp
ss
call
inc
insl
stos
inc
xchg
lcall
pop
sub
sub
mov
mov
lret
mov
pushf
and
push
iret
push
daa
pop
inc
mov
pop
mov
imul
xor
adc
fmul
inc
push
leave
cmpb
fisubs
pop
jmp
lds
xchg
inc
cli
xor
bound
imul
push
cli
mov
fdivs
mov
inc
dec
push
dec
lret
jmp
in
or
stos
daa
hlt
gs
mov
sub
cwtl
sub
mov
pop
xor
mov
repz
push
iret
mov
lcall
push
mov
or
loopne
popa
cs
adc
lods
cmp
push
aas
movsl
fstpl
mov
iret
sbb
pop
inc
jmp
jle
push
inc
daa
imul
and
fsub
fcomi
jo
popf
cld
inc
fiaddl
sub
jnp
sbb
inc
jle
jae
les
jecxz,pn
jae
dec
cmp
sbb
jmp
pop
rsm
xor
pushf
aam
push
bound
push
jmp
sahf
and
jns
mov
push
pop
iret
pop
adc
dec
dec
hlt
adc
mov
push
mov
mov
inc
xlat
mov
add
lds
push
inc
push
mov
push
xlat
fimull
mov
lcall
testb
xor
insl
adc
loope
push
call
jmp
icebp
mov
das
sti
jb
pop
das
andb
neg
out
imul
inc
int3
pop
dec
add
repnz
jbe,pt
add
jp
out
shrb
mov
push
mov
je
stos
subl
mov
test
shr
and
add
ret
cmpl
mov
xchg
add
je
push
jmp
push
das
adc
ret
jmp
push
pop
jne
pop
loopne
push
push
inc
lcall
push
push
dec
jmp
xor
inc
adcb
sbb
pop
call
aaa
jbe
or
dec
jle
and
mov
popf
pop
lock
imull
lods
push
addr16
lds
es
push
adc
sub
mov
cmp
pop
jmp
mov
dec
jg,pt
pushf
insb
test
test
xchg
mov
jae
push
mov
pop
xchg
sbb
mov
mov
and
mov
hlt
or
arpl
in
hlt
inc
ljmp
add
push
mov
movsl
test
sbb
push
push
mov
pushf
or
clc
mov
add
adc
test
or
pop
push
or
pop
mov
xlat
call
fnstenv
test
mov
ret
jbe
adc
dec
das
mov
jle
jno
lret
jmp
add
jcxz
jno
sbbb
lahf
shl
sub
pop
jns
jb
outsb
loope
or
sub
or
sbb
jno
cmp
aas
mov
dec
out
sub
das
add
aas
int
mov
pop
inc
leave
div
pop
ss
jb
xor
inc
xor
scas
dec
pop
mov
into
clc
sub
mov
out
das
or
push
cmpsb
popf
movl
push
xchg
mov
push
push
popa
cmp
aaa
xchg
gs
out
adc
cld
int
adc
test
pop
icebp
shr
push
add
mov
jmp
push
mov
xor
inc
scas
rolb
add
mov
mov
sub
jmp
add
popa
fnstcw
or
adc
out
lret
push
in
sbb
push
add
out
push
sahf
or
imul
icebp
mov
loope,pt
pusha
mov
loopne
mov
aam
movsb
cmc
and
pop
push
mov
sub
repz
mov
aad
or
mov
sbb
scas
push
mov
cmp
ret
xor
adc
add
pushf
cli
xor
rcrb
ret
dec
cwtl
xchg
js
sti
mov
sbbb
popa
shr
aas
movb
or
popf
sub
call
shr
xor
iret
sub
push
lcall
inc
mov
ret
add
xlat
push
mov
into
adc
rcr
nop
cwtl
and
loop
mov
aaa
sbb
outsb
cmp
rcr
test
add
cmp
test
iret
and
popa
icebp
jnp
jb
leave
xor
mov
test
adc
xchg
fildl
aam
ror
jge
dec
sbb
xlat
jae
jbe
xchg
mov
lret
push
cmpl
adc
xor
aad
shl
rcrb
clc
push
xchg
scas
test
mov
add
cmp
dec
sub
sbb
sub
pop
add
lret
push
ljmp
negl
dec
or
cmp
inc
inc
jbe
jmp
cmpb
in
movsb
xchg
lret
movsb
daa
inc
pop
jle
test
xchg
and
sub
jb
imul
lods
sub
std
ljmp
lea
loopne
push
sub
adc
call
xchg
pop
mov
das
pop
or
in
aam
jne
cmp
fisubs
cmp
and
fmull
lahf
push
leave
sub
sbb
and
shr
arpl
fisttpll
mov
sahf
into
ret
shlb
sub
jmp
xlat
sbb
cltd
push
insl
xlat
sub
ljmp
cmp
mov
int3
cmp
pop
fldcw
cltd
mov
jbe
lret
and
sbb
daa
lds
dec
loopne
gs
jmp
std
and
jp
xor
bound
or
jecxz
add
jnp
push
mov
and
jo
or
roll
jb
push
fisubl
loop
or
adcb
insl
test
fildll
int3
sub
test
ret
push
inc
subl
push
popf
and
jae
or
push
cmpsb
or
add
int
push
push
sub
lahf
daa
repz
xchg
out
mov
add
ss
roll
mov
xlat
inc
jae
add
dec
push
fwait
add
sub
push
in
lret
and
adc
mov
adc
cmc
adc
out
jae
add
pop
call
xor
sbb
or
ds
inc
mov
imul
adc
mov
inc
xchg
sub
subb
sti
pop
insl
out
aaa
sub
jmp
mov
hlt
jae
xchg
adc
jmp
mov
cmp
push
insl
pop
xor
lahf
cmpsl
popa
cld
fbld
jne
lahf
pop
in
in
sti
or
cmc
push
push
fnstsw
jmp
ss
ret
xchg
sbb
mov
pop
les
cmp
pop
mov
xchg
inc
sbb
out
sub
in
or
sub
not
imul
add
movsl
lret
add
lcall
call
ficompl
stc
cmp
dec
mov
dec
fldl
imul
mov
ss
cmpsb
ljmp
loopne
call
xchg
and
incb
inc
dec
aam
sbb
ret
mov
sub
mov
sbb
int
push
fcoml
int3
out
lods
mov
sbb
es
ds
call
adc
inc
stos
pop
ljmp
loope
and
jmp
gs
mov
pop
push
jbe
popf
cli
mov
int
add
fldcw
lods
out
and
add
call
sub
mov
add
cwtl
js
dec
push
cld
xor
mov
push
jmp
nop
jl
testl
sbb
jle
push
lds
orl
sub
loop
js
pop
sar
inc
shll
scas
mov
call
pop
push
aaa
mov
subl
cmp
xchg
mov
xlat
inc
sbb
ja
out
mov
pop
adc
arpl
xchg
push
adc
in
fmull
mov
jnp
out
add
mov
rclb
roll
adc
add
push
and
add
sahf
or
fcompl
cmp
pop
cmp
jecxz
inc
pop
xlat
xchg
inc
xchg
rorl
cmpsl
jecxz
mov
imul
and
bound
aaa
push
or
popa
and
cmp
and
or
je
or
push
xchg
leave
decb
push
shll
sub
add
jae
adc
and
or
into
scas
cmp
ds
pop
mov
inc
aam
mov
outsb
cltd
push
ret
xchg
test
or
pop
jae
jecxz
mov
pop
jmp
sbb
push
mov
filds
sbb
xchg
pop
inc
and
mov
pop
cmp
rorl
pop
lock
mov
inc
add
in
insl
adc
push
popa
and
or
push
xchg
or
xor
popf
or
push
and
push
mov
and
push
ret
and
pop
ljmp
xor
daa
imul
mov
sub
stc
fisttpl
inc
sub
mov
jmp
cld
dec
xchg
xchg
add
pop
lahf
sbbb
sub
mov
xchg
jbe
mov
jo
push
movsl
ja
push
sbb
fwait
xchg
adc
pop
mov
popa
cmp
ja
cmp
out
fisttps
in
pop
in
jecxz
mov
sub
mov
ficoml
dec
mov
dec
sbb
enter
cmpsb
sbb
gs
adc
jmp
fs
xlat
xor
pop
das
mov
add
and
jae
mov
add
dec
push
mov
pop
sub
jmp
outsl
add
pop
dec
sarl
cmp
mov
js
pop
dec
mov
or
xor
sbb
out
fmul
or
jmp
adc
dec
jecxz
add
jmp
test
icebp
and
adc
loope
jbe
stc
mov
and
mov
xor
add
add
out
dec
test
fiadds
add
in
sti
repnz
or
pop
xor
stc
sub
cmp
rcr
and
dec
pop
xchg
gs
orl
mov
dec
push
push
les
mov
dec
add
or
jg
push
adc
mov
lods
jo
inc
cmp
jnp
mov
add
mov
dec
ds
push
mov
sbb
pop
fisubrl
jbe
repz
or
inc
mov
push
inc
mov
or
test
mov
add
cs
add
addr16
and
pop
int
in
pop
les
rorl
mov
jno
xor
and
div
mov
cmc
sub
sub
aam
pop
cwtl
xchg
dec
shlb
pusha
xor
add
rclb
pop
pop
sub
cmp
sub
aam
fcompl
jb
inc
fisttps
lahf
fistps
loopne
in
mov
cmp
jnp
pusha
pop
push
jmp
xor
pop
push
inc
mov
jl
psubsw
scas
sti
mov
dec
fstps
test
cmc
call
mov
pusha
dec
ss
bnd
call
pop
mov
fidivrl
mov
jmp
arpl
out
xor
mov
subb
loope
lahf
sbb
imul
lahf
int3
cwtl
psubd
fisubrl
xchg
mov
fisubl
push
push
jmp
add
bound
bound
es
sbb
mov
clc
sub
xchg
pushl
add
xor
adc
inc
inc
cs
sub
xchg
scas
ficomps
adc
add
push
aad
sub
lock
cld
push
adc
addr16
in
ja
lds
out
xlat
cwtl
add
dec
inc
int
pop
cs
pop
jbe
adc
or
adc
flds
push
loop
adc
scas
xor
aaa
mov
add
mov
test
xchg
add
repnz
xchg
stos
mov
push
jmp
sub
je
cli
sub
dec
ja
inc
mov
dec
pop
sbb
into
mov
pushf
and
adc
pop
test
xchg
lds
push
jl
xor
outsb
dec
dec
jle
mov
out
test
sub
push
mov
or
pop
neg
jge
mov
sahf
jg
pop
stos
xor
adc
mov
mov
ja
movsb
mov
dec
or
jbe
test
movsl
ret
jl
and
or
aad
aas
and
in
addr16
ljmp
test
or
fwait
push
or
sub
pop
aas
xor
or
shll
adc
lea
adc
inc
loop
leave
xor
les
dec
pop
adc
pop
xchg
hlt
notb
push
stos
and
cmp
sbb
or
add
pop
jge
add
mov
aad
stc
xor
mov
jo
add
and
nop
test
sbb
out
lahf
lret
or
pop
sbb
loop
xchg
outsb
add
pop
mov
push
cmp
lock
hlt
scas
stos
adcb
inc
cmpsl
mov
nop
sahf
fisttps
das
adc
popf
inc
cli
push
inc
bnd
jge
icebp
inc
movsl
jne
and
iret
xor
das
cmp
je
sbb
maxss
and
sbb
sbb
cwtl
and
fdivrs
ds
rcll
loop
pop
aam
xlat
stos
mov
xchg
stos
or
pop
movsl
ja
jmp
fwait
or
sub
in
sbb
mov
push
pop
pop
push
sub
add
pop
pop
push
ret
out
mov
ds
and
scas
push
add
cmp
inc
and
dec
inc
pop
cmp
sub
add
dec
cli
call
and
cmp
cli
pop
insb
fisttps
dec
add
cmp
xor
daa
and
mov
mov
mov
xchg
push
pop
inc
pusha
add
out
mov
rcrl
neg
shl
push
mov
loope
jmp
or
aad
aad
jecxz
sarl
mov
fwait
pushf
or
sub
fstpl
divl
imul
pop
insl
mov
push
mov
testb
dec
and
cwtl
jbe
add
push
sbb
cmp
jg
std
sti
lock
rcrb
mov
testb
clc
add
push
inc
scas
adcl
or
in
push
or
sbb
popw
iret
xchg
stos
scas
push
mov
mov
cmp
adc
dec
pop
inc
js
adc
add
adc
outsb
sub
or
adc
and
add
cmp
dec
cli
push
mov
and
out
cld
shl
jo
dec
sub
xor
call
insl
outsl
lds
ja
pop
mov
push
and
pop
or
and
mov
push
aaa
pop
mov
enter
mov
clc
add
cwtl
xchg
push
ret
movsb
bound
decb
enter
adc
push
cmp
adc
popf
lahf
andb
mov
test
mov
call
push
mov
js
insb
or
test
dec
pushf
or
mov
adc
dec
push
sub
fs
jle
je
lds
je
and
cwtl
and
push
inc
mov
sbb
xor
pop
jp
daa
das
pop
repz
pop
xchg
lcall
lcall
adc
mov
mov
push
jle
in
push
or
and
cmp
mov
dec
insb
xchg
mov
and
mov
pop
test
pop
hlt
imul
adc
cmpl
dec
add
push
push
gs
push
sbb
jle
mov
xor
lds
shr
enter
lock
push
sbb
dec
loope
sub
int
push
mov
xchg
xor
pushf
or
inc
dec
jnp
dec
or
fisubrl
xchg
sahf
inc
ret
xlat
xchg
in
push
push
cmp
jbe
in
push
cli
dec
pop
add
add
sub
out
pusha
or
lods
sub
mov
imul
pop
bound
push
mov
mov
aaa
lds
popl
jl
sub
add
repnz
pushf
adc
adc
int3
inc
lcallw
sbbb
lahf
adc
add
sbb
ja
popa
mov
xor
ret
push
and
ds
icebp
out
lea
cmp
and
and
jnp
cli
pop
pop
sub
xor
sub
shrl
and
arpl
clc
jmp
subb
pop
sub
js
add
and
shlb
sahf
stos
mov
mov
jle
sahf
stos
lret
data16
es
jp
pop
xchg
inc
call
or
arpl
pop
fucom
push
add
push
ja
dec
lcall
push
pop
mov
mov
cwtl
jmp
or
lret
push
adc
xchg
insb
loopne
out
lods
mov
push
push
xchg
imul
bound
cmp
lcall
or
mov
mov
jg
lcall
xchg
add
cmp
clc
adc
jo
inc
and
and
sub
push
adc
testb
shl
cmp
inc
sub
xor
cmp
mov
orb
mov
inc
or
dec
call
sub
mov
push
push
inc
out
lret
mov
cmpsb
fildl
push
push
mov
jle
mov
xchg
jns
ja
pop
mov
push
mov
or
stos
out
push
pop
ljmp
push
mull
add
pop
add
test
fsts
cwtl
into
pusha
inc
sbb
sub
pop
pop
add
push
push
mov
pop
xor
lea
sub
inc
inc
int
or
push
xor
into
xchg
sbb
push
jg
mov
outsb
daa
inc
pop
jbe
mov
les
push
pop
inc
xor
pop
cltd
in
or
xchg
push
jmp
jae
fidivrl
jl
inc
jl
repz
scas
out
fdivrl
xlat
pop
enter
jl
push
shr
inc
repnz
lea
rcrb
cmp
adcb
pop
inc
and
cmp
sub
push
xchg
loope
lcall
lds
pop
scas
jo
push
jmp
push
lds
mov
lahf
fldt
push
push
lret
pop
inc
sbb
inc
cltd
fildl
sub
mov
push
or
ret
mov
sbb
dec
out
pop
xor
jb
cmp
mov
lcall
push
add
insl
loop
enter
sub
push
popa
and
add
test
jae
je
loope
enter
push
shrb
daa
jmp
or
pop
pusha
cltd
arpl
xor
or
jge
sub
cmp
cmp
les
leave
add
rolb
mov
and
push
xchg
fs
and
or
pop
mov
push
js
cltd
inc
mov
les
cmpsl
add
jae
imul
add
pop
add
enter
xchg
leave
pop
fldl
roll
add
in
adc
pop
or
sbbb
cltd
cwtl
cltd
lahf
imul
inc
sub
in
inc
and
orb
jecxz
popf
rorb
test
cld
mov
addb
add
xor
mov
jmp
vmwrite
jno
jno
push
or
mov
xor
and
or
or
mov
incb
add
push
add
aaa
push
movsb
imul
shlb
inc
jle
add
pop
xor
xchg
add
dec
or
aad
aas
push
test
ret
mov
bound
xor
jnp
add
add
add
mov
sbb
pop
add
out
add
addr16
popa
xchg
inc
push
and
or
or
lods
adc
adc
cmpsb
sbb
mov
cld
add
cwtl
add
fiaddl
out
movsb
jns
js
inc
loopne
inc
je
inc
rorl
cmc
jb
xchg
xor
push
add
rolb
mov
pop
sub
adc
pop
fisttps
clc
mov
pusha
sbb
roll
push
ret
or
adcl
xor
pop
and
jmp
add
mov
insl
lret
add
and
adc
and
mov
push
push
aad
and
in
push
mov
sub
testl
inc
in
inc
test
sub
lock
mov
sbbl
push
outsl
add
loopne
push
mov
xchg
push
cli
into
jecxz
and
icebp
xor
negb
pop
add
adc
sub
fsts
or
test
cmpsb
xor
dec
loopne
inc
popf
aam
mov
fisttpll
pop
pop
test
sub
inc
push
inc
or
mov
mov
in
or
mov
or
out
jae
cs
dec
cmpsb
hlt
add
cmp
repz
push
adc
jp
inc
mul
popf
jmp
mov
sbb
pop
pop
stos
pushf
adc
je
jb
fwait
ja
scas
sarb
sub
ret
xor
lcall
cmp
push
xchg
mov
fildll
push
push
sub
scas
adc
xor
jns
ret
data16
repz
jo
push
jnp
pop
add
xor
inc
or
cwtl
std
mov
push
cltd
cli
adc
adc
mov
jg
jmp
mov
idivb
insl
or
out
mov
loopne
fcoml
sub
pop
mov
xor
sbb
push
stc
sbb
fimull
mov
or
adc
add
pop
add
gs
sub
pop
in
shll
add
add
push
push
cmc
dec
dec
mov
and
mov
adc
cmpsl
cli
les
cld
sbbl
shll
push
ret
or
xor
push
jns
jl
add
pop
dec
add
xchg
mov
lret
push
cmc
out
sahf
dec
pop
jl
and
sbb
push
sahf
sbb
mov
sub
das
push
adc
add
inc
sahf
add
pop
add
pop
pop
popf
and
jns
ljmp
sar
in
xor
jmp
clc
jge
rcrl
mov
outsb
out
in
dec
aad
enter
scas
xchg
insb
mov
lock
adc
push
xchg
push
push
and
dec
setnp
sbb
push
or
adc
int
and
sub
jg
or
testb
fistpl
dec
outsb
push
or
or
or
stos
roll
pop
cmp
dec
xchg
sub
inc
mov
inc
pusha
sub
inc
rol
inc
or
sub
enter
sti
ror
nop
mov
jge
pop
aas
outsb
inc
orb
xor
xlat
mov
inc
dec
adc
clc
xor
mov
inc
xor
shlb
daa
cmc
adc
or
rcrb
popa
xchg
roll
pop
cmc
loop
or
subb
mov
lahf
add
dec
fsubr
or
int
inc
or
push
jno
ja
adc
xchg
in
lods
adc
jg
test
add
out
or
pop
adc
out
or
add
inc
pop
xchg
add
orb
jns
out
and
lds
adc
fadds
loope
xor
imul
stos
jl
or
dec
adc
inc
daa
je
jae
pop
sub
xor
cmp
push
jg
xor
fmul
and
inc
outsl
push
cmp
sub
cwtl
test
inc
es
ror
icebp
pop
xor
int
out
rorb
pop
push
jmp
pop
jb
pop
fsub
push
push
xor
mov
jp
xor
dec
repz
sub
push
push
mov
pop
mov
test
or
pop
inc
xchg
dec
and
popa
shl
roll
stos
outsl
sub
or
sbb
outsb
sub
out
frstor
movl
and
into
adc
xor
pushf
xchg
shl
or
adc
push
repz
mov
nop
inc
xchg
repz
push
mov
xchg
pop
dec
stos
outsb
or
jl
shrb
or
or
cmp
ds
adc
mov
xor
lock
test
lods
jmp
out
or
lret
add
pusha
jmp
xor
cmp
jbe
dec
addl
outsl
rclb
call
add
pop
adc
and
push
pop
lret
movsb
inc
out
shlb
pop
pop
xor
or
push
inc
pop
les
popa
pusha
mov
fs
mov
ss
hlt
mov
test
jns
cmp
mov
inc
dec
jecxz
xor
push
rolb
fs
sub
and
push
add
add
inc
dec
mov
repnz
mov
or
cld
push
jo,pt
jb
add
ss
mov
pop
inc
jmp
pop
cmp
cld
fiadds
ret
cmpsb
mov
es
daa
mov
mov
shr
loop
inc
pop
push
mov
pop
add
js
xchg
aas
ret
pop
mov
or
lods
lea
push
mov
and
jle
push
mov
push
xchg
jge
roll
mov
adc
sti
pop
leave
cs
pusha
mov
jmp
adc
and
add
inc
enter
ds
push
mov
ret
inc
lods
add
push
repz
stc
or
push
clc
sbb
iret
and
adc
scas
sub
cmc
mov
std
mulb
fsubrs
scas
movsb
lock
pusha
mov
add
push
jmp
push
cmp
mov
adc
cmpsb
add
inc
dec
jmp
negl
neg
push
mov
push
inc
and
addb
or
stos
psllq
cld
pop
sub
stc
mov
repz
sbb
loope
jmp
scas
pop
into
jmp
fidivrs
and
push
or
stos
les
arpl
fistpll
cs
mov
lret
stos
xor
and
imul
movsl
lahf
mov
in
inc
adc
push
scas
lea
sbb
xchg
jge
movlps
movsb
cmp
loopne
insl
jnp
in
add
cwtl
sub
pop
jno
jge
and
cmp
sbb
pop
testb
push
mov
xor
jno
out
out
dec
jg
in
cld
sbb
xchg
mov
shrl
mov
add
xorb
jnp
lds
out
cld
ret
mov
mov
sbb
mov
shll
sub
xor
clc
dec
add
not
fisttps
xor
rcll
dec
xor
sbb
mov
popf
fs
add
dec
cli
arpl
mov
inc
or
xor
jae
pop
daa
xor
cld
jne
sbb
arpl
sub
ss
lods
in
add
push
inc
adc
inc
les
adc
jns
out
inc
cmp
jle
repnz
pop
bound
sub
fisubs
mov
add
xor
movsb
adc
imul
jge
fisubs
rolb
cmc
jno
mov
lahf
xchg
cmp
sti
xorl
daa
add
cmpsb
mov
jnp
lods
lcall
or
dec
pop
xor
add
in
cmp
lret
push
fcoms
outsl
or
movsb
addr16
push
xor
rcr
add
inc
sbb
dec
jne
push
rolb
sub
not
mov
pop
clc
leave
add
je
pop
daa
push
testl
and
push
repz
pop
call
ror
mov
push
or
push
jns
in
rcrb
sub
inc
add
jmp
mov
lret
insb
aaa
mov
cmpsb
xchg
cmp
inc
cld
jo
cwtl
je
sub
incb
xchg
cli
ss
aad
sbb
dec
pop
pusha
xchg
repz
out
and
xor
sub
stos
cltd
dec
jmp
dec
push
in
dec
and
push
mov
push
add
and
cltd
rcll
cs
imul
fstpt
test
or
xchg
sbb
cmp
mov
adc
xchg
int3
inc
push
dec
cmp
adc
mov
or
sub
xor
in
mov
jo
mul
and
pop
sub
cs
movsl
pop
orb
mov
dec
in
fs
push
pop
notl
rol
loop
push
jp
push
cmp
pushl
mov
aad
push
pop
jo
cld
jo
xchg
xlat
pop
stc
orl
test
ret
cmp
mov
xchg
roll
pop
sub
mov
pop
push
jmp
pop
xchg
mov
mov
adc
inc
adc
sub
in
out
sti
and
pop
sub
jle
lret
push
repnz
mov
popa
xor
push
test
test
sub
out
into
fidivrl
loopne
pusha
imul
jns
sbb
test
pop
xor
jmp
or
clc
iret
orb
xchg
push
dec
dec
push
jns
dec
out
sub
or
or
fldcw
xor
dec
in
or
push
rolb
adc
xchg
stc
fistl
push
inc
lods
xor
arpl
rcrl
sbbb
arpl
sub
sbb
cmpsl
sub
mov
push
mov
inc
icebp
add
sub
clc
jp
lret
jmp
sub
xor
jp
sub
popf
rolb
pshufw
sub
and
bound
add
jge
and
mov
jmp
cmp
add
inc
roll
pop
adc
mov
push
add
sti
mov
dec
pop
sbb
rcrl
enter
aad
mov
jns
jno
sub
add
mov
push
xor
out
adc
push
sub
movsb
into
data16
xchg
inc
push
jp
mov
mov
add
add
adc
adc
icebp
xchg
jo
insb
or
ja
xor
pop
jmp
jno
pop
aaa
lock
dec
ret
aad
sub
and
testb
xor
or
sub
sbb
std
cmp
and
or
shlb
stos
pop
imul
mov
inc
enter
leave
sub
add
sub
test
xchg
dec
push
or
and
iret
push
movsb
and
cltd
cmp
lret
or
cmp
iret
push
push
sbb
lret
push
sar
sub
push
inc
movb
sbb
inc
shr
cmp
sub
jnp
jge
sub
mov
pop
pop
not
dec
sub
jmp
push
cmc
loopne
testl
add
cmc
sbb
inc
test
sub
add
add
pop
and
xchg
int
sub
mov
mov
jmp
les
sub
cmp
fldenv
pop
in
cmpsl
xchg
push
add
adc
xor
mov
jmp
das
sar
ret
test
test
fisttps
mov
daa
dec
insl
fisttps
jbe
xchg
and
pop
iret
pop
lock
imul
movsl
outsb
dec
pop
rolb
sete
aad
xor
les
push
leave
xchg
and
pop
add
jbe
lea
mov
repz
fildl
or
mov
rolb
pop
cmp
cmp
js
xor
movsb
sub
mov
xchg
jp
sub
or
jg
out
jge
mov
out
testb
mov
add
pop
add
jo
sub
je
out
pop
mov
das
or
add
sbb
ljmp
add
add
and
mov
add
and
xchg
jne
add
xchg
mov
mov
inc
addr16
xchg
push
cmpsl
insl
cmp
push
cwtl
jecxz
jle
push
shlb
andb
enter
and
add
scas
xlat
pand
jmp
push
cmp
add
pop
push
rorb
out
test
insb
cmp
sub
adc
sbb
inc
jecxz
jns
cmp
xor
nop
sahf
pop
lods
sahf
fadds
dec
add
shl
pusha
push
in
xchg
sbb
pop
dec
add
dec
cld
sti
fwait
xchg
cmp
movsl
mov
add
stos
dec
daa
pop
mov
aad
add
outsb
mov
sbb
das
mov
sbb
pushf
push
ret
push
adc
push
xchg
repz
lahf
pop
mov
jp
pop
or
mov
out
movswl
jae
pop
fs
insl
sub
xlat
mov
ds
out
push
ret
subl
push
sub
inc
sub
xor
inc
loope,pt
shll
icebp
orl
and
xor
add
xchg
push
mov
and
add
in
sahf
sub
mov
push
xor
pop
inc
mov
jo
loope
in
cmp
imul
xchg
fcoml
lea
bound
fxch
mov
push
les
sub
das
mov
and
dec
push
sub
cmc
adc
xchg
push
movsl
enter
addr16
add
inc
fs
sub
mov
cmc
cmc
adc
in
add
loopne
jb
inc
jmp
mov
lret
mov
shll
sahf
mov
mov
movl
add
ja
inc
push
stos
mov
fists
sub
je
imul
push
sub
dec
test
adc
test
test
push
repz
lods
pushf
dec
in
add
adc
es
and
pop
push
jmp
out
into
mov
pushf
dec
push
sub
jmp
pop
in
andl
or
add
mov
test
and
xchg
das
shrb
dec
test
jge
outsl
out
les
scas
nop
xchg
sub
pop
pop
addb
pusha
jp
daa
cmp
add
jp
sbb
and
push
jb
popf
mov
loope
sahf
cmc
ds
daa
stc
mov
add
or
sbb
outsl
pop
inc
sub
shll
les
insb
enterw
test
mov
ja
scas
adc
or
sub
dec
icebp
push
xchg
and
inc
dec
add
std
push
mov
incb
ret
sub
push
loop
dec
into
and
jmp
adc
pop
pop
jmp
add
or
jns
xchg
lock
push
push
test
stos
sbb
ja
jns
xor
add
cmp
test
movsl
jge
ss
xchg
es
add
stc
pop
dec
repnz
xchg
adc
sbb
lret
inc
jmp
stos
adc
fstpt
jecxz
inc
dec
mov
cmp
out
pop
aad
enter
sub
push
popf
loop
jbe
pop
pop
push
xor
dec
fnstsw
push
jmp
int3
dec
pop
mov
push
out
push
mov
add
inc
fs
push
testl
push
pop
sub
push
push
movsl
add
pop
inc
dec
xor
add
cmp
fsubr
xchg
jo
loope
stos
mov
aaa
mov
xor
pop
pop
shl
push
or
or
test
pusha
pop
push
push
hlt
lret
and
aam
xor
inc
or
add
xchg
inc
adc
popf
dec
mov
push
popf
jnp
test
xchg
or
icebp
push
imul
or
lods
jbe
pop
add
mov
mov
push
int3
fs
push
and
or
in
loop
mov
push
loop
lret
adc
xor
fcomi
cld
sub
movl
push
loope
push
andb
xchg
add
inc
jge
jmp
lock
loopne
jmp
hlt
dec
pop
add
cmc
cli
jae
addr16
icebp
pop
aas
jecxz
dec
mov
test
jle
aaa
inc
movsl
scas
inc
mov
adcb
lods
add
lcall
cmp
repz
imul
jle
xlat
add
cmpsl
mov
push
xor
push
mov
add
shll
stos
pop
daa
clc
pop
popf
fnstcw
sub
xor
ret
cmc
mov
mov
popf
repz
add
jmp
pop
loopne
mov
sub
push
push
add
sub
add
or
xor
or
fdivrp
mov
xor
xchg
dec
cmc
ss
sub
mov
add
into
fldl2t
aaa
mov
lods
in
in
inc
jnp
sbb
adc
adc
pop
test
mov
or
leave
or
filds
push
sti
dec
xor
or
add
or
cmp
cld
mov
imul
push
jne
xchg
jo
pop
movsl
xor
jns
cmpsb
fisubrl
nop
cmp
cwtl
or
cli
popa
dec
mov
fcoms
push
aas
xorb
imul
or
pop
jp,pt
mov
push
adc
push
cmpsb
sub
mov
inc
aad
fs
jmp
cld
int
push
sub
sbb
movsl
push
loopne
xchg
sub
mov
jb
adc
clc
in
jnp
cmp
jae
in
cli
les
add
mov
not
inc
sbb
push
popa
push
or
lea
sub
mov
pop
cmpsb
sub
xor
xchg
enter
outsl
xor
addr16
cmc
push
into
jae
test
pop
xchg
add
lds
add
int
daa
pop
outsl
push
test
dec
mov
xchg
aam
in
dec
mov
les
dec
or
mov
scas
jb
incb
pop
daa
fwait
or
lods
mov
subb
adc
leave
pop
fisttps
sub
sahf
idivb
dec
ret
push
or
lahf
fidivs
jo
sbb
dec
pop
mov
mov
sbb
or
push
jns
jge
mov
push
push
sbb
xor
lcall
jge
dec
and
mov
jbe
mov
sbb
push
into
ljmp
push
mov
push
movsb
add
pop
xor
jl
mov
adc
call
mov
lods
and
sub
pusha
sbb
jno
sbb
pushf
cli
xchg
sbbb
enter
in
clc
push
sbb
addb
mov
rorl
mov
and
push
rcll
cmp
adc
jg
mov
push
add
imul
jae
or
or
adc
ds
rolb
sbb
ret
int
adc
jmp
ret
dec
inc
mov
je
hlt
cmc
xor
add
adc
in
rorb
cmp
sub
xor
outsl
pop
js
jg
cmp
insl
dec
mov
sbb
sbb
into
lods
jnp
xlat
je
imul
pop
or
mov
and
ds
add
or
push
sbb
cmp
mov
or
jecxz
cmpb
pop
bound
mov
mov
pop
pop
sbb
ss
push
stos
mov
enter
pop
push
mov
sub
add
mov
pop
and
jmp
cwtl
mov
adc
aad
pop
fmuls
inc
inc
dec
mov
jp
daa
dec
cmp
lret
mov
repz
push
or
push
mov
push
cmp
ja
and
sub
fadd
test
ret
pop
push
jecxz
fiadds
push
ljmp
inc
and
jecxz
sub
outsl
push
or
pop
ret
add
popa
xlat
add
pop
shl
inc
mov
add
add
jnp
jae
and
cmc
jmp
lods
jb
dec
out
push
cld
mov
jl
js
add
aaa
xor
dec
cltd
dec
jnp
pop
lods
insl
popf
sub
cld
loopne
leave
mov
fisubl
and
sbb
or
cmp
xlat
xchg
test
in
dec
lret
jmp
cli
pop
incl
insb
out
fucomp
inc
pusha
test
and
and
out
sbb
mov
pop
outsb
mov
or
add
adc
pop
mov
push
inc
pop
shl
jp
sbbb
jnp
ds
xchg
leave
cmp
das
xchg
xchg
imul
pop
xchg
hlt
pop
lss
jg
sub
inc
mov
hlt
inc
xlat
cpuid
aas
mov
and
add
sub
jmp
push
mov
pop
popa
cmp
pop
test
cmp
jmp
or
adc
sbb
dec
in
lods
push
sbb
xor
push
rcll
sar
dec
or
or
mov
dec
je
mov
pushl
adc
or
jae
fdivrs
pop
adcl
xchg
jmp
ds
repnz
leave
xchg
push
std
pop
and
jae
in
jbe
movsb
stos
leave
loop
push
push
xor
in
inc
out
jno
mov
mov
movsb
jmp
ljmp
add
subl
nop
sub
adc
aam
sub
cmp
inc
add
sub
sub
pop
or
mov
mov
aaa
arpl
pop
neg
test
xchg
inc
dec
mov
dec
jbe
push
sbb
and
and
jmp
xor
mov
leave
add
pushf
mov
sbb
repz
jae
ficoml
push
daa
lahf
fisubrs
xchg
xchg
addl
or
and
xchg
and
inc
push
fnstsw
sub
incl
pop
push
jl
pop
in
mov
and
movsb
adc
adc
fs
dec
sub
cld
push
loope
in
inc
fwait
xchg
inc
dec
push
xchg
shll
loope
js
rcl
pop
add
cs
pop
jge
sbb
inc
sub
sbb
pop
jp
sub
inc
inc
mov
arpl
repz
ret
mov
or
mov
dec
jge
pop
push
xchg
pop
testb
xchg
adc
sub
xchg
and
dec
jg
adc
int3
nop
cmp
insb
jbe
pop
jmp
or
rorb
push
adcb
adc
or
mov
xchg
test
call
and
popf
divl
mov
daa
pop
ja
add
pop
ffreep
jno
fmull
popf
clc
in
test
fcos
jns
ret
jmp
mov
pusha
mov
mov
dec
mov
lahf
repz
call
or
test
mov
sub
and
push
dec
ja
je
lods
adc
cmc
out
xchg
ficoms
push
and
sub
jae
hlt
inc
ja
or
push
pop
cmp
ret
mov
movsb
or
test
inc
cmc
and
adc
inc
leave
inc
cmp
cmp
inc
aam
lock
les
xor
cltd
fists
imul
dec
loopne
lea
pop
mov
dec
jne
or
pop
push
cmc
imul
sub
lods
hlt
push
sbb
in
dec
add
push
cmp
loope
insl
xor
lods
in
dec
mov
add
cmp
xchg
and
std
arpl
lea
arpl
sub
mov
iret
push
cs
sub
fs
cld
adc
or
add
jmp
adcb
or
std
outsl
ret
les
pop
dec
popf
cmp
pop
xor
stos
cmp
pop
das
and
adc
pop
repnz
fildll
push
icebp
jp
sti
mov
pusha
xchg
in
out
adc
jge
stos
mov
jmp
xlat
mov
mov
inc
test
clc
push
cltd
cmp
vminpd
movsl
je
xchg
int
push
mov
adc
sub
es
addr16
sub
pause
pop
push
pop
mov
incl
icebp
mov
mov
rclb
or
adc
mov
pop
jae
call
push
movaps
add
imul
push
jge
movsb
or
xor
pop
addr16
and
cld
in
insb
mov
mov
das
push
sub
mov
jp
js
mov
mov
loope
clc
mov
stc
xor
andl
and
test
add
jae
mov
push
cmp
shlb
inc
jl
xlat
fadd
xor
add
dec
mov
ss
push
je
jno
xlat
jl
and
ds
mov
sbb
fisttps
loopne
icebp
sahf
adc
sarb
mull
out
pop
pop
dec
popa
inc
xor
jp
jne
add
push
jge
push
add
jmp
dec
hlt
cli
subl
mov
mov
das
das
pop
fadds
popa
inc
mov
sbb
lret
test
loopne
shll
sub
cmp
add
sub
sub
mov
push
dec
cmpsl
cmc
sbb
cmp
movsl
rcr
adc
outsl
cld
inc
dec
push
int3
xchg
scas
addb
push
cmpb
jle
es
pop
adc
orl
mov
std
movsl
jbe
in
call
sub
xor
pop
out
enter
loopne
sub
mov
sub
in
std
mov
cmc
jb
iret
add
mov
add
lds
ja
push
mov
lahf
shlb
xor
lods
dec
pavgw
adc
call
sbb
lds
iret
les
adc
dec
stos
pop
hlt
mov
loop
jns
xor
hlt
out
dec
pop
call
add
lods
lods
mov
lods
and
test
in
shll
mov
daa
aam
and
adc
lret
outsb
cs
dec
into
jns
sbb
mov
jo
fidivs
cld
data16
sbb
inc
jo
sub
iret
push
sub
push
jmp
shrb
inc
xchg
dec
xor
inc
or
out
adc
adc
shll
scas
push
call
test
fiadds
or
cltd
jmp
in
xchg
fucomip
lea
pop
sub
pop
inc
push
jl
inc
jmp
jnp
std
xchg
push
ljmp
pop
movsl
or
pop
xor
inc
inc
pop
sub
arpl
push
adc
xchg
xchg
or
xor
fisubrs
mov
pop
subl
xchg
cmp
sbb
mov
je
lds
ljmp
mov
inc
aas
out
and
test
dec
in
cmp
jb
dec
mov
cld
std
cwtl
push
popa
es
jmp
shlb
loopne
daa
xor
mov
mov
push
xor
mov
jne
jnp
inc
repz
jne
jb
mul
pop
cld
jae
jmp
mov
aas
es
mov
jne
sti
int3
mov
xor
jmp
add
dec
decl
jbe
push
jb
adc
adc
stos
pop
pop
lods
mov
and
add
les
push
clc
pop
xor
inc
xchg
test
loope
push
hlt
or
xor
add
mov
xor
mov
aas
and
sbb
movsl
inc
ja
mov
add
and
pop
pop
push
add
pop
aas
stos
aam
mov
cmp
jmp
adc
adc
pusha
pop
jle
and
sub
add
jb
movsb
cmpsl
or
filds
popf
fmull
xor
push
popa
fisttpll
pop
push
clc
cmpsb
sub
sub
xor
jmp
fidivl
inc
pop
daa
xlat
fwait
jno
imul
nop
lods
loope
ds
adc
sbb
fidivl
inc
jmp
out
xor
pop
lcall
mov
inc
adc
add
jecxz
inc
ljmp
mov
or
popf
dec
movsl
push
nop
jl
sahf
subb
jbe
jbe
fisubrs
testl
adc
pop
push
js
and
inc
aaa
mov
and
pop
das
rorb
cmc
and
xchg
pop
xchg
gs
aad
mov
pop
lret
mov
jae
cmpsb
test
cmp
or
insb
ljmp
call
aaa
sub
out
pop
mov
enter
jns
jmp
std
cmpsb
sub
xlat
movhps
into
ss
incl
sbb
sbb
lret
adc
rcl
xorb
jmp
push
mov
add
rol
sbb
cmp
jp
and
pop
cmp
dec
shrl
nop
insb
xchg
dec
test
cmc
ret
push
mov
xchg
mov
mov
ficompl
inc
dec
dec
push
mov
aam
ret
jmp
and
dec
icebp
mov
inc
add
ja
scas
adc
testb
pop
xor
mov
mov
test
divl
fisubrs
test
and
inc
jp
orb
gs
cmp
xor
inc
dec
sub
dec
cwtl
jp
in
ss
or
mov
daa
xor
pop
push
bsf
and
dec
loopne
sub
mov
je
and
sti
flds
jo
xchg
outsl
daa
or
test
dec
push
inc
or
push
ret
decb
mov
adc
and
pop
sti
popa
or
push
adc
mov
sub
xor
dec
jnp
jge
xchg
mov
orb
lret
scas
je
jmp
pop
sbb
push
jmp
mov
aam
jge
mov
push
int3
and
pop
push
mov
insl
and
or
or
jo,pt
adc
sub
pop
das
xchg
xchg
sub
jbe
sbb
sub
push
lock
jmp
enter
jmp
push
mov
sub
jmp
icebp
clc
das
xlat
mov
push
add
mov
pushf
and
pop
ds
mov
les
xor
pop
pop
sub
jnp
add
or
pop
add
in
enter
xchg
pusha
jg
jbe
pop
sub
ss
insb
dec
inc
and
mov
mov
test
jmp
fisubrl
test
mov
and
shl
loope
lods
icebp
adc
lock
fisubrs
mov
rolb
inc
sbb
ja
out
cmp
mov
push
push
xchg
sbb
clc
outsl
mov
or
cmp
movsl
jno
dec
push
add
mov
sub
ffree
test
mov
pop
add
sub
or
add
cld
mov
pop
adc
testl
mov
mov
or
mov
push
data16
leave
arpl
xor
cld
pop
icebp
adc
jnp
pop
push
addb
ret
push
adc
pop
xchg
sub
or
pop
mov
nop
enter
jno
cli
xchg
mov
mov
cmp
cmpsl
sbb
dec
into
xchg
daa
pop
sti
cmpsl
and
xchg
adc
jmp
xchg
dec
sti
pushf
sub
push
inc
inc
mov
jecxz
xchg
sbb
test
push
repnz
and
mov
sub
mov
loop
shl
popf
jge
fs
xor
inc
jge
fmuls
push
add
jmp
repnz
and
jae
pop
sbb
dec
mov
add
filds
adc
lcall
mov
sub
or
sbb
sub
add
xlat
xor
dec
push
bnd
mov
jmp
mov
push
sbb
xchg
pop
push
and
add
neg
inc
ljmp
add
leave
inc
push
cwtl
xchg
idiv
hlt
nop
pop
or
adc
sub
scas
dec
sti
enter
xchg
mov
sbb
pop
sub
comiss
sti
loop
sbbb
push
jl
jb
inc
push
xchg
pop
dec
sbb
dec
cmpsl
dec
sub
mov
sbb
add
popf
push
insb
adc
xchg
pop
mov
jo
cli
adc
dec
les
ss
pop
ret
add
les
inc
scas
xorb
fdivl
lcall
xchg
lods
cld
mov
add
movb
or
cmp
pusha
mov
cld
sub
loope
add
mov
xor
jle
pop
inc
enter
sbb
das
and
aam
rol
inc
aad
jne
jo
aaa
push
jp
mov
inc
cmpsb
stc
sbb
inc
xchg
addr16
pop
clc
outsb
les
lods
fs
ret
andl
cmc
adc
lds
xchg
push
aas
fidivrs
adc
push
flds
add
cmc
cmp
rcll
xchg
das
shlb
jmp
lods
dec
leave
pop
inc
lods
xlat
push
aam
push
xchg
fcomps
cmpb
scas
dec
js
or
or
add
fiaddl
pop
pop
push
adc
ret
call
add
pop
jno
fisttps
xchg
arpl
fldcw
mov
rorb
pop
inc
jns
xchg
movsl
test
mov
add
mov
push
mov
icebp
inc
das
sar
add
jbe
mov
ja
pop
xchg
mov
lods
pop
add
rclb
js
in
clc
ljmp
mov
push
jno
insl
push
or
lods
add
dec
jne
orb
insl
xor
mov
pop
pop
push
fwait
cltd
pop
jmp
adc
pop
cltd
or
aad
mov
pop
add
xchg
xchg
aaa
call
inc
nop
addb
push
jo
mov
std
pop
cmp
adc
sub
pop
ljmp
stc
aam
clc
in
mov
push
ret
pop
mov
jmp
jnp
xchg
bnd
jmp
or
adc
cmp
adc
ljmp
or
push
push
xchg
inc
xchg
pop
mov
pop
shlb
inc
cmpb
xchg
cmc
mov
fucomi
pop
push
push
outsl
sbbb
push
sub
sub
pusha
inc
or
orb
sahf
adc
push
test
mov
jmp
rorb
lock
or
in
add
das
setne
fmull
adc
jne
pop
xor
jb
sar
aam
mov
loope
test
repz
jae
icebp
lret
mov
cli
ror
loopne
sbbb
inc
jmp
xor
cmp
cltd
xor
jo
scas
add
push
push
pop
dec
stos
add
movb
and
jno
jmp
mov
add
lods
fldl
push
mov
jmp
push
popf
push
xchg
jae
jnp
or
or
bnd
mov
stc
sbb
mov
neg
inc
movsl
mov
add
sub
adcb
ret
jb
pop
fwait
das
and
xlat
adc
sub
xchg
push
sub
xlat
sub
push
sub
inc
dec
cs
inc
jb
and
movhps
in
addl
sub
mov
lahf
jmp
fldl
or
xor
sbb
jmp
jl
push
sub
jno
push
inc
pop
outsb
mov
and
in
fs
scas
mov
int
scas
xchg
clc
xchg
loope
cmp
sarl
outsb
fs
push
daa
jmp
out
xlat
rcr
adc
les
push
mov
mov
mov
mov
cmc
cmp
xor
in
push
daa
in
out
add
jae
push
shl
lahf
insl
into
shl
std
cwtl
sbb
jp
push
inc
repnz
nop
sti
jl
sub
je
adc
add
pop
testb
jb
das
outsb
iret
pop
lods
je
nop
pop
popf
divl
insb
dec
sub
in
xlat
jmp
jecxz
mov
inc
pusha
jmp
lds
mov
push
cs
or
mulb
pop
sub
xchg
cmc
in
cmpsl
push
leave
or
into
fwait
dec
ret
mov
jg
dec
pop
dec
inc
pop
ret
pop
stos
jl
jge
jo
popf
std
sahf
enter
jae
out
push
mov
fnstsw
add
ret
sub
fnsave
repnz
sub
push
ret
dec
repz
sti
mov
or
sbb
shlb
lret
mov
mov
sbb
xor
addb
sub
push
push
mov
rolb
mov
shl
push
rcrb
mov
mov
fdivrs
ret
dec
pop
fisubrs
and
mov
cmp
nop
pop
and
inc
add
sti
pop
lret
ror
and
mov
jl
arpl
jns
mov
aad
mov
cwtl
js
stos
in
fstl
dec
and
inc
lcall
mov
pop
pop
sarb
lea
or
jmp
incl
sub
lods
movsl
mov
jmp
dec
xor
inc
fimull
mov
xor
frstor
sbb
and
push
push
jmp
inc
push
adc
enter
arpl
neg
orb
dec
push
sbb
add
jnp
pop
stos
jp
xor
push
and
daa
pop
scas
or
mov
jmp
js
pop
add
popf
dec
add
push
dec
iret
sahf
cmpsl
cld
inc
push
jmp
pop
in
add
jns
int
das
pop
daa
jmp
dec
dec
jle
inc
jmp
sub
mov
lods
push
add
cmc
popa
mov
push
pop
popa
push
mov
in
mov
xchg
lahf
loopne
movhps
sar
mov
xor
ljmp
push
lds
xchg
push
jo
add
or
inc
jb
cmp
ja
sub
jmp
lret
push
mov
mov
inc
adc
mov
dec
or
pop
or
xor
pop
mov
jmp
and
xor
jecxz
or
jmp
inc
xchg
inc
cmp
dec
or
inc
push
imulb
mov
push
sub
pop
lock
dec
push
lea
xchg
sub
cs
push
test
mov
bnd
movsb
das
int3
in
add
pop
push
or
sbb
mov
jmp
push
aaa
test
lahf
in
cmc
loopne
add
enter
cmc
jecxz
movsb
ljmp
cmp
push
sub
mov
repz
test
es
pop
jl
sbb
fsubrl
mov
test
dec
xor
out
mov
jge
mov
daa
leave
or
div
or
lock
mov
inc
daa
or
neg
inc
inc
adc
incb
xchg
jl
mov
cs
rclb
int
pop
mov
movsl
cmc
adc
sub
ljmp
cmpb
cmp
stos
mov
jmp
rolb
jecxz
lea
or
out
xor
sti
xor
jmp
mov
outsb
pop
cwtl
jg
daa
push
xor
daa
jne
jmp
mov
jg
mov
or
sbbb
push
and
or
jb
push
or
pop
push
mov
cmovge
test
xchg
test
xorb
lret
adc
pop
lcall
rorb
jg
aaa
jmp
inc
and
mov
cmp
jle
fimuls
or
add
int3
jg
jae
daa
loop
cld
mov
aaa
jns
mov
jo
jmp
inc
mov
adc
lret
xor
inc
mov
ret
add
push
xchg
inc
pop
jl
mov
pop
adc
push
and
mov
jmp
pop
mov
popf
lods
dec
push
and
jmp
push
add
imul
or
or
push
pop
in
psrlq
jg
leave
loope
mov
inc
mov
sub
mov
pushf
cmp
test
add
mov
aad
mov
das
or
sbb
mov
mov
jle
or
sub
std
je
adc
fcoms
inc
or
call
push
adc
push
pop
lret
cmp
shlb
fcoms
mov
enter
inc
sub
repz
cmpsb
adc
jl
jmp
or
lea
nop
jmp
shl
orb
imul
mov
movsl
mov
xor
mov
jmp
sub
cmp
mov
dec
hlt
pop
dec
cltd
shlb
je
dec
push
subb
jne
aas
pop
xchg
push
and
or
sbb
xchg
test
lock
push
inc
cmp
pop
xor
js
mov
test
and
imul
push
sub
or
and
call
addr16
std
inc
jle
cmpsb
and
cmc
mov
ficomps
jl
out
inc
jmp
add
adc
dec
pop
sbbb
and
jb
or
inc
cld
inc
mov
pop
pop
mov
cmp
iret
scas
imul
cmc
test
arpl
andb
adc
pop
add
push
and
xchg
scas
mov
push
mov
lea
add
ljmp
stos
negl
repz
es
clc
jg
daa
cmp
aas
ds
inc
movsl
or
clc
or
xchg
add
push
mov
repnz
repnz
add
call
in
push
sahf
mov
sub
sahf
pop
xchg
pop
leave
leave
je
les
test
jbe
or
ljmp
pop
test
sub
dec
pop
mov
xchg
fbld
jnp
sub
leave
xor
setge
push
in
inc
and
and
test
push
xlat
fs
in
lret
or
cmp
adc
jl
xor
push
iret
outsl
jmp
int
or
push
xor
aaa
sbbb
nop
scas
and
inc
push
dec
xchg
enter
add
sub
jae
xchg
mov
cmc
dec
push
xor
mov
sub
fisubl
call
mov
loopne
jbe
out
xlat
sar
int
addb
sub
mov
jge
cmp
jle
addr16
nop
mov
leave
loopne
pop
insl
fldcw
out
mov
inc
and
sub
pop
xorl
and
push
add
jbe
add
pop
xor
jmp
clc
ret
mov
movsl
rclb
pop
test
add
cwtl
jmp
jae
sub
out
or
push
cmp
scas
out
je
pop
icebp
push
sub
push
inc
enter
sub
inc
ret
fcom
pop
jo
xchg
inc
pop
loop
cmp
mov
jp
int3
push
or
xor
daa
push
std
nop
and
sub
push
stos
dec
pop
xchg
inc
dec
scas
loopne
sarl
jmp
inc
xor
pop
inc
sbb
enter
and
inc
or
xor
les
pop
mov
xchg
sub
xor
pop
stc
sub
push
push
movb
push
or
adc
leave
push
push
out
mov
inc
jmp
jb
loop
mov
mov
xor
adc
cmp
jle
movsb
cs
test
cmovs
in
test
das
pop
ret
ret
xchg
popa
das
jg
ret
loopne
or
rcrl
jge
and
pop
pop
mov
xchg
cmp
movsb
inc
xor
negl
sub
rcrl
jae
mov
int
mov
inc
and
std
lds
ret
push
icebp
dec
jno
add
outsb
insb
or
adcl
out
test
pop
std
xchg
addl
add
cmp
lahf
jo
mov
sub
jg
dec
add
clc
idivl
and
inc
mov
addl
inc
and
repnz
push
xchg
stos
mov
rorl
pop
xor
mov
pop
rolb
push
out
imul
xor
cli
pop
orb
rorl
enter
out
jg
and
mov
jb
mov
xor
mov
frstor
sub
pop
ficomps
pop
mov
jo
xchg
ja
cmp
xor
xchg
lock
ja
jno
daa
jbe
rorb
jmp
cvtdq2ps
mov
mov
mov
insl
lock
lret
fdivs
sub
cmp
repz
sbbb
dec
pop
fwait
je
pop
add
dec
loope
sub
xor
enter
sub
pop
push
pop
scas
add
xor
add
adc
arpl
or
inc
pop
mov
sti
pop
pop
push
jno
ja
sahf
jnp
sub
mov
cmpsl
scas
push
dec
push
xor
cwtl
lds
xchg
adc
pusha
jp
out
pop
dec
js
aaa
jbe
push
mov
mov
xchg
fstl
and
jmp
cmp
pop
arpl
insb
aas
addb
sub
mov
cmp
dec
mov
jp
hlt
xchg
xor
add
outsb
not
shll
add
daa
repnz
mov
mov
jno
sbb
cmp
push
inc
add
jnp
pop
pop
sbb
lret
clc
sbb
push
mov
popa
jle
lods
or
xor
pop
xchg
out
sub
push
push
les
mov
fnstenv
loopne
inc
loope
cld
movsb
test
es
push
or
xor
xlat
dec
loop
mov
jbe
add
mov
int
push
sarl
bnd
add
loopne
xor
shrl
mov
or
inc
cs
add
jmp
inc
shlb
adc
mov
test
mov
sub
pop
sub
lcall
and
cwtl
inc
adc
pop
daa
pop
mov
pop
dec
js
add
adc
loop
add
in
in
aas
add
mov
cmp
dec
or
addb
dec
add
repnz
jge
lds
loopne
mov
test
int3
mov
push
scas
pop
pusha
repz
les
pop
and
and
mov
xchg
fmuls
pop
sub
mov
jmp
pop
push
cs
ljmp
jp
das
pop
or
or
sbb
popa
lds
pop
into
lock
or
adc
jbe
xchg
pop
out
push
out
mov
add
dec
adc
ror
and
orb
mov
sti
rcll
push
addr16
scas
xor
cmpsb
insb
inc
fldcw
xor
xor
negl
call
out
xor
out
nop
mov
aas
mov
gs
xor
lock
insb
ret
popf
ja
pop
cmc
adc
push
leave
fiaddl
in
xor
lea
ljmp
inc
add
mov
push
add
sarl
in
add
or
sub
dec
ds
neg
insb
loopne
and
and
jno
fisubrl
iret
xchg
mov
mov
mov
fsubrl
clc
mov
sbb
or
adc
rorl
push
adc
es
int3
sub
dec
xchg
add
xor
sub
sbb
or
or
inc
aaa
adc
xchg
ss
pusha
pop
push
idivl
cld
adc
pop
es
push
fdivr
xchg
sub
mov
pop
jecxz
pop
sub
push
mov
dec
lds
out
addl
pop
test
xor
lcall
les
into
shll
cltd
shlb
and
loopne,pn
loop
push
cmp
push
inc
filds
mov
call
push
enter
inc
addb
pop
popa
mov
test
pop
fs
rcrb
fstps
clc
cmp
xchg
pop
xchg
imul
push
rcll
daa
push
add
sahf
repz
jmp
ret
push
pop
in
xchg
push
xorb
mov
mov
xchg
dec
jmp
sub
mov
loope
jmp
push
ds
fadd
movsb
cld
repz
mov
pop
loope
mov
cmpsl
dec
adc
test
call
lods
sbb
sub
push
pop
and
out
or
hlt
pop
aam
movsb
addl
and
xor
jl
and
lret
adc
or
push
sti
adc
jmp
adc
cmp
scas
cmp
mov
inc
sub
add
mov
sub
add
addr16
test
push
data16
js
cmp
mov
dec
xorb
inc
sti
enter
mov
divb
adc
out
dec
fistpl
adc
mov
pop
in
pop
repnz
fsts
fs
in
das
test
mov
sub
repz
outsl
je
pop
xchg
adc
jecxz
in
mov
mull
icebp
mov
in
sbb
push
inc
mov
not
rcr
das
sub
decb
int3
jmp
fsubl
js
imul
jmp
pop
clc
es
xlat
mov
push
test
xchg
jbe
sub
out
pop
les
stos
mov
sub
fistpl
movsb
bound
scas
jl
sti
add
mov
test
jle
mov
mov
ds
inc
out
mov
das
rclb
pop
pushf
rcll
adc
mov
pusha
pop
mov
mov
ss
sbb
mov
int3
insb
push
push
add
mov
fwait
cmp
fsubs
inc
call
jns
or
ffree
popa
testb
jecxz
push
push
jmp
xchg
lahf
das
cmp
jg
jmp
sarb
ds
rep
in
dec
pusha
sub
andb
divb
cmp
daa
sbb
jne
rorl
aad
and
push
add
in
or
sub
int3
and
into
jle
sub
jmp
loopne
stos
cmp
in
cmc
ds
cmpsb
xchg
pop
jp
and
insb
test
rorb
mov
add
idivl
add
out
int3
push
mov
push
aad
inc
sub
xchg
sub
add
sub
xor
adc
inc
or
add
pop
xor
call
xor
or
adc
rcrb
jbe
pusha
or
pop
mov
or
xor
test
or
push
mov
loop
inc
jmp
lret
sarb
add
call
ljmp
shrb
in
cltd
fistps
inc
push
fldl
push
adc
pop
int
mov
jmp
ret
stos
popf
dec
out
push
push
dec
mov
lcall
jae
lret
or
pop
in
lret
jmp
mov
add
sbb
lret
push
insl
cs
mov
xor
mov
jg
jns
or
mov
aad
dec
dec
add
shll
add
sbb
jno
xor
leave
pop
fnsave
out
add
or
jb
adc
gs
pop
call
std
and
xchg
push
xchg
dec
popf
aam
loope
jns
imul
pop
mov
js
rclb
sahf
mov
pop
mov
mov
mov
mov
push
mov
mov
mov
jmp
add
dec
ficompl
ficoms
xor
adc
test
ja
sub
adc
push
std
shl
rcll
ja
dec
and
push
add
add
and
in
mov
mov
test
lods
sub
adc
mov
push
mov
aas
loopne
xorb
inc
push
movsb
std
popa
cmp
mov
xchg
inc
lods
mov
ljmp
pop
mov
orb
mov
xor
pop
sbb
mov
add
xchg
jmp
rcrl
js
xchg
aad
jmp
pop
mov
add
shlb
sub
dec
mov
dec
pop
popf
into
outsb
mov
push
inc
mov
lcall
leave
jo
push
jmp
test
pop
push
xchg
lock
popa
cmp
push
pop
push
mov
adc
xchg
push
mov
jne
xor
testb
shlb
pop
mov
decl
inc
jge
cmp
test
lahf
lods
addr16
push
jae
jbe
sub
outsb
mov
mov
iret
mov
gs
test
pop
inc
jecxz
adc
push
adc
lds
mov
xlat
jmp
fstps
xorl
in
mov
movups
in
daa
push
rol
mov
dec
dec
rcrl
xor
daa
sub
shlb
mov
scas
adc
shll
sub
push
pop
xchg
inc
faddl
push
xor
and
shr
inc
popf
idivl
pop
and
cmp
popa
xchg
adc
push
jmp
dec
shl
lcall
sub
je
lock
outsl
std
pop
dec
filds
mov
xor
pop
icebp
sbb
fs
cmp
jne
aaa
mov
mov
push
push
in
jo
pop
pushw
loope
sbb
cld
ds
xlat
out
xor
sub
lock
or
push
dec
es
mov
push
daa
iret
pop
fxch
loopne
mov
push
rorl
rcrl
dec
test
ret
dec
push
and
pop
cmpsl
imul
xchg
push
sbb
adc
mov
jbe
jne
pop
das
pushf
or
xchg
pushf
fdivrl
mov
xchg
sbb
ret
mov
jecxz
or
das
subb
add
sub
add
lret
movsb
bound
paddq
and
xor
add
and
jmp
test
mov
jo
sahf
xor
and
push
or
push
jle
dec
adc
sti
push
add
inc
adc
adc
inc
jbe
repnz
inc
sbb
or
dec
lock
mov
dec
rorl
enter
sti
mov
sbb
scas
pop
sub
dec
fucomip
xchg
xor
cmpsb
pop
jge
xchg
push
pop
dec
rclb
push
mov
popa
aad
push
add
mov
or
leave
rcr
sub
cmp
je
into
mov
jle
in
mov
or
pop
xchg
jno
pop
xchg
pop
lods
mov
ljmp
jbe
or
nop
add
xor
enter
sub
lock
aas
inc
and
dec
out
std
outsb
outsl
into
nop
add
out
pop
and
out
cltd
cld
hlt
in
xchg
faddl
push
or
cmp
pop
jmp
div
inc
cmp
inc
xor
sbb
mov
cli
ret
and
sbb
fsin
addl
add
fiaddl
pop
jbe
push
xchg
pop
mov
mov
addl
iret
or
mov
vmaxps
lret
ret
sub
bswap
jne
mov
push
lea
push
adcb
addr16
pop
mov
xor
mov
movb
cmp
sub
ja
das
pop
test
sbb
pop
pop
outsb
push
or
filds
pusha
and
jns
arpl
mov
cmp
aaa
lds
mov
add
pop
push
mov
lcall
test
inc
aas
pop
adc
pop
repz
idiv
sti
xor
or
adcl
pop
dec
ljmp
or
and
sbb
add
add
pop
pop
lret
xchg
push
lds
divb
or
inc
or
in
adc
aad
inc
aam
xlat
loopne
dec
push
inc
clc
arpl
sbb
lahf
loop
jne
sub
aad
sarl
push
push
pop
shrd
and
or
sub
and
mov
and
sti
pop
lahf
fsubl
fisubs
push
xor
or
es
int
nop
leave
mov
push
pop
push
and
jl
test
adcl
mov
lods
scas
jl
pop
add
sahf
mov
pop
adc
adc
sahf
lock
pop
movl
mov
mov
js
cmpb
pop
push
gs
jge
inc
xlat
sbb
leave
push
mov
push
je
jle
jp
cld
fs
fisttpl
push
ds
data16
pop
sub
adc
je
inc
stos
subl
iret
inc
lret
fildll
ret
xor
mov
xchg
xor
shr
jmp
push
push
jl
js
pop
cwtl
mov
xchg
adc
mov
add
loop
test
mov
xchg
sub
xchg
mov
js
pop
sub
inc
dec
lods
sub
adc
scas
mov
orl
mov
add
outsb
sub
scas
aad
cmp
out
mov
pop
cmp
rorl
out
add
jg
cmp
push
pop
sub
push
push
xor
push
mov
lods
rclb
andb
push
ret
cmpsl
outsl
das
push
mov
or
jo
sbb
pop
jb
mov
fnstsw
pusha
xor
leave
test
cmp
inc
mov
int3
inc
sbb
mov
xchg
int3
stos
or
pop
jne
fwait
in
add
mov
je
es
jg
cmp
aas
mov
or
or
dec
mov
testl
fld
int
add
aam
lret
pop
dec
push
and
lds
aas
lods
out
adc
pushf
jge
inc
je
leave
add
push
mov
rcrb
adc
testb
push
ror
push
in
add
fldl
or
dec
stos
lret
jns
aas
lods
push
push
mov
cmp
push
jmp
daa
clc
popf
call
fdivrs
aad
and
movsl
xchg
in
or
daa
dec
inc
mov
int3
and
pop
je
sar
push
push
push
jmp
mov
mov
sub
call
jle
inc
lds
pop
das
push
dec
stc
pusha
xor
cld
rclb
dec
orl
jmp
jge
pop
iret
bound
loop
push
enter
ret
jecxz
repnz
or
mov
pop
repz
push
das
sub
ret
je
jl
imul
dec
mov
ljmp
mov
mov
adc
jp
out
pop
clc
lret
xor
repz
push
fs
stc
lods
adc
fisttps
imul
add
aad
aam
push
loope
aas
add
in
add
xlat
dec
cli
mov
jmp
inc
dec
add
icebp
or
sub
add
jmp
jne
xor
cs
lret
lods
stos
xor
sub
lret
dec
mov
fs
mov
lret
pop
loopne
jb
fnstsw
xlat
stos
mov
push
push
imul
repnz
outsl
sbb
lods
data16
or
test
mov
mov
dec
arpl
inc
fdivrl
sti
pop
stos
lea
inc
cs
jae
popa
test
jmp
push
dec
sbb
add
call
add
fs
inc
push
shr
add
mov
xor
jmp
imul
xchg
or
push
and
add
jecxz
dec
pop
push
mov
xchg
pop
out
and
jno
xor
push
inc
sbb
ss
scas
arpl
jge
pop
push
ja
popf
cld
cwtl
lret
push
inc
push
jne
popf
dec
imul
jns
push
jmp
pop
loopne
insb
repz
cwtl
outsl
orb
dec
orb
push
pusha
cmp
jmp
mov
adc
sbb
jecxz
add
prefetch
std
loope
in
jb
fiadds
inc
leave
int
cmc
adc
or
aaa
lcall
gs
xor
aad
pop
test
adc
inc
dec
hlt
dec
lods
jb
pop
push
leave
lahf
push
xlat
sub
inc
push
push
and
btc
xor
jle
les
movsl
mov
call
xchg
xchg
pop
push
leave
lock
push
pop
das
pushf
bound
mov
sub
aas
cwtl
rcrl
shrb
jae
pusha
or
sbbl
je
sbb
sbb
call
add
lds
mov
pop
jmp
movsb
mov
mov
adc
filds
and
aaa
fcomps
stos
xlat
cmc
scas
into
popa
add
stc
xchg
xchg
xchg
imul
test
stos
jg
dec
das
daa
fsts
mov
mov
push
mov
push
cmpsb
scas
inc
aad
pop
push
out
dec
ret
push
lods
xchg
and
je
stos
pop
push
repz
sarl
xor
cmpsl
nop
lods
inc
jg
aaa
daa
les
sbbb
frstor
mov
lahf
in
jae
dec
or
mov
inc
cltd
iret
je
push
sub
jnp
ret
imul
xchg
mov
lock
out
mov
push
mov
cmp
dec
sarl
jnp
out
cs
mov
jl
adc
jns
and
xchg
inc
mov
inc
outsl
push
push
gs
xor
lods
inc
dec
inc
sub
sub
cmc
inc
jb
push
in
mov
in
dec
xor
subb
gs
sub
ret
inc
jb
lret
lods
cmc
cmp
imul
in
shlb
jle
lea
sub
fisubl
fbld
push
outsb
data16
cmpsb
or
adc
scas
and
clc
outsl
mov
add
push
and
adc
dec
aad
loopne
sub
mov
movsb
dec
add
divl
cmp
sub
and
addr16
aad
adc
push
iret
movsl
test
adc
mov
loopne
inc
pop
xor
leave
push
dec
in
mov
rorl
dec
adc
sti
and
incb
loope
mov
pop
adc
lahf
lock
or
cmpl
int
mov
jp
sbb
shrl
sub
add
jmp
xchg
mov
fs
cmp
ljmp
loop
dec
lods
pop
ja
lods
mov
sub
lock
paddusw
je
ss
in
rcll
ficompl
cmp
sub
out
sbb
testb
ljmp
pop
xchg
inc
xor
repz
enter
adc
jmp
dec
jle
pop
cmp
lea
lcall
sub
stc
pop
imul
mov
xchg
xlat
lcall
lret
adc
dec
aaa
sub
pop
pop
cmp
push
jp
icebp
ljmp
test
mov
incl
inc
push
mov
bnd
mov
mov
push
adc
dec
add
icebp
dec
and
sbb
cmp
in
scas
push
sub
test
sub
fsubr
fdiv
mov
mov
mov
sbbl
mov
outsb
dec
inc
adc
push
scas
into
or
push
std
lds
test
jbe
ficomps
loope
xor
and
xchg
cwtl
test
jbe
mov
add
aam
cmp
stos
out
imul
or
dec
data16
jnp
daa
inc
addr16
outsl
add
fsubr
inc
shlb
xchg
ja
sub
mov
inc
cmpsl
push
cmp
movsl
mov
xor
jno
daa
loope
int
xlat
cltd
fnstcw
icebp
es
mov
and
ret
les
movsl
clc
mov
cltd
xchg
xchg
pop
in
add
or
test
pop
mov
jb
jne
or
push
mov
or
in
and
shr
ffree
sub
sti
and
mov
dec
sub
add
fwait
cmp
mov
push
dec
and
sbb
neg
pop
xor
rcr
cmp
dec
into
adc
in
pop
add
pop
jle
push
clc
stc
push
mov
rorl
fstpl
repz
nop
xor
mov
loopne
dec
adc
lea
popf
push
stc
adc
arpl
jmp
je
bound
push
mov
sbb
fisttps
in
pop
or
add
lds
je
bound
mov
subb
or
mov
pop
mov
enter
or
or
mov
dec
xchg
push
xor
sub
inc
xlat
and
sbb
inc
ret
xor
fldl
add
addr16
test
push
ret
xor
xor
das
inc
cmpb
cli
popa
cmp
add
sub
scas
popa
ret
dec
cli
add
shll
xchg
add
cwtl
loopne
xchg
jg
std
adc
add
pop
sub
dec
out
dec
adc
and
jnp
repnz
imul
jae
mov
dec
testb
pop
xor
repz
mov
popa
enter
jb
jno
lock
in
pop
dec
cs
xchg
cmp
stc
cmp
icebp
jb
ret
push
xchg
lds
push
loopne
xor
adc
fdivrl
addl
aas
push
or
mov
push
xchg
push
jmp
cmp
add
ret
fcompl
adc
pop
stos
mov
and
push
sub
xchg
loope
outsb
bound
repz
ljmp
or
and
dec
ds
pushf
test
push
or
mov
loop
inc
cli
fidivs
and
xor
mov
fs
mov
or
aaa
pop
xchg
push
je
dec
jnp
mov
adc
imul
xor
add
pop
rorb
movsb
xchg
lea
cmp
cmp
pop
sub
mov
push
jns
test
and
xchg
popa
xor
stc
ds
adc
jne
lret
in
sbbb
push
cltd
out
outsl
fnstcw
mov
leave
xor
dec
sbb
pop
daa
mov
add
sub
jmp
add
and
sub
xchg
xchg
hlt
sbbl
sub
xchg
jg
pop
inc
stc
aas
std
inc
fists
mov
scas
dec
inc
push
or
sub
mov
stc
jns
fs
xchg
ljmp
inc
or
testb
jne,pn
dec
inc
hlt
sub
nop
in
mov
lds
out
jl
xor
cld
add
bound
dec
jmp
rcl
popa
movzwl
aas
mov
pop
add
jb
xchg
aam
loopne
jmp
xchg
cld
pop
or
dec
or
lds
and
xor
cs
mov
mov
and
pop
ja
leave
lret
je
shl
icebp
push
push
les
out
int3
out
inc
and
push
xchg
add
repz
push
rclb
sbb
dec
xor
pop
add
pop
and
adc
aam
mov
fistl
jg
sbb
pop
shlb
pop
add
or
or
jo
test
mov
out
sub
clc
mov
in
xor
mov
push
add
xlat
push
insl
and
cmp
daa
mov
push
inc
aas
sub
sarl
pop
push
mov
mov
adc
shr
push
xchg
shlb
sub
jmp
and
loopne
add
pop
filds
dec
push
adc
mov
aam
or
xor
ror
imul
ljmp
and
sbb
mov
pop
xchg
dec
adc
push
test
test
dec
sti
push
lock
lret
adc
dec
pop
and
lock
ret
nop
sub
out
les
mov
mov
cmp
mov
fcomps
out
addr16
daa
pop
pop
pop
jmp
pop
jg
repnz
jl
adc
inc
mov
pop
mov
mov
push
mov
cmc
pushf
add
mov
xchg
outsl
daa
jmp
mov
inc
loope
push
jge
pop
aas
or
subb
mov
inc
bound
rcrb
or
insl
push
add
aam
shl
fistpl
and
mov
popl
mov
out
movsb
cs
lds
aad
imul
xor
jmp
or
push
adc
jg
pop
ds
fst
sub
push
sub
and
add
sbb
ljmp
pop
js
add
jo
sub
movb
dec
pusha
mov
push
xchg
pop
jecxz
je
jb
mov
xor
imul
adc
les
out
dec
cwtl
inc
push
and
and
jmp
sbb
rcll
lcall
xor
adc
shll
cmc
mov
loop
xchg
lea
pop
mov
add
push
xor
je
das
std
ljmp
sub
gs
and
xor
dec
mov
adc
ljmp
decl
lret
xchg
test
inc
bound
or
loope
pusha
test
pop
imulb
popa
sahf
les
sar
jne
mov
repz
out
mov
icebp
add
sbb
test
call
fidivs
bnd
sub
push
add
test
cwtl
movsl
leave
xchg
pop
shlb
lret
cmp
pop
nop
xchg
jecxz
js
mov
sub
rclb
mov
xorb
testb
mov
sub
sub
test
pop
stos
pushf
push
pop
pushf
cmc
add
pop
sbb
icebp
in
jmp
dec
int3
pop
or
cmpps
pop
lock
fwait
outsl
loop
enter
es
imul
inc
jne
pop
mov
and
jnp
mov
stos
or
push
pop
push
mov
icebp
js
and
mov
xchg
jl
scas
push
fucomi
dec
add
lea
inc
insb
int3
mov
dec
or
fwait
adc
jp,pn
out
inc
sbb
pop
sub
push
mov
sahf
das
inc
scas
pop
add
or
packuswb
and
jno
and
ljmp
push
pop
mov
inc
pop
xchg
andb
sub
mov
inc
cli
pop
pop
sub
imul
adc
pushf
add
imul
ljmp
pop
jmp
in
icebp
aam
jo
sub
or
fwait
pop
push
inc
movsb
add
popf
push
mov
sub
sub
rcrl
xchg
in
mov
xor
test
inc
dec
mov
xchg
adc
cmp
sbb
mov
mov
push
js
imul
push
sbb
ds
push
das
xchg
sub
dec
inc
in
movsb
js
pop
ja
pop
cmp
pop
ja
mov
gs
pop
dec
pop
inc
in
jg
repnz
shl
inc
hlt
lock
mov
frstor
test
pop
lods
cmp
pop
push
push
je
lahf
mov
outsb
or
lock
add
jg
or
jmp
xor
dec
cmpsb
adc
adcl
or
jp
sbb
xchg
pop
iret
lret
push
test
sti
cmp
scas
orl
sub
repz
jmp
pop
push
insb
pop
call
jg
and
movsl
icebp
aad
dec
mov
sub
inc
mov
and
lock
insb
xor
add
scas
sub
rcrb
add
enter
imul
pop
popf
push
inc
call
lods
push
sub
test
lcall
adc
popa
push
mov
stos
popf
sbbb
fnsave
jmp
inc
imul
mov
xor
and
shrl
sbb
pop
jmp
mov
lods
or
insb
pop
jmp
jecxz
dec
push
jl
xchg
jmp
and
pop
lock
dec
pop
mov
sar
mov
push
dec
cmp
in
shlb
push
outsl
xchg
jmp
jno
aam
call
ret
jp
cmc
mov
jmp
nop
dec
das
sbb
andb
cli
ja
dec
mov
addr16
add
sbb
or
mov
enter
pop
sub
mov
jmp
in
or
cmp
xor
push
mov
pop
sub
jg
pusha
cmp
mov
fcmovb
jns
push
pop
pushf
jp
rcrl
or
or
and
and
les
jmp
addr16
popa
sub
xorb
add
ljmp
adc
icebp
xor
xchg
rolb
sbb
sub
stos
dec
jecxz
adc
dec
mov
es
pop
int
mov
leave
jae
pop
int3
adc
cmp
pop
or
jecxz,pn
cmp
popa
ds
adc
or
push
test
inc
jle
ret
ret
push
add
jmp
jns
sub
add
int
cwtl
lahf
push
inc
test
lahf
jmp
and
mov
push
jmp
lods
and
mov
mov
inc
push
jmp
fistpl
imul
add
inc
or
lds
dec
pop
cwtl
lods
in
mov
pop
push
sub
loope
sub
jmp
dec
and
cs
jmp
or
lds
adc
mov
inc
or
lods
add
cmc
mov
fwait
or
inc
push
iret
pushf
inc
dec
scas
inc
test
ds
sub
popa
rol
mov
mov
cmp
std
xchg
cmp
pop
push
outsl
xchg
movsl
lods
negb
add
or
negl
add
jge
mov
faddl
imul
push
fiaddl
mov
loope
mov
sub
fsubrl
lock
sbb
or
icebp
adc
bound
and
mov
hlt
and
cmp
bnd
mov
dec
orb
cs
jne
les
cmc
ffreep
or
xlat
inc
sarb
and
and
mov
push
shll
xchg
repz
mov
out
je
scas
inc
int
push
jmp
movsb
mov
sub
pop
int3
out
add
cmp
jmp
popl
mov
sbb
add
jmp
and
fcmovnbe
adc
pop
sti
sub
fsubrl
sub
adc
or
nop
push
rcrb
pop
push
sub
jle
test
jg
scas
mov
push
jno
xor
cwtl
add
add
push
test
or
jecxz
mov
js
dec
movl
mulb
fs
nop
popa
push
aaa
jmp
push
cmp
xchg
loop
inc
jne
mov
jnp
cmpsl
jmp
mov
rolb
inc
pop
mov
fisttpll
mov
mov
inc
fwait
stos
mov
xor
xchg
popf
nop
pop
pop
inc
aad
cmp
daa
jmp
jmp
dec
aas
inc
xchg
sub
and
pop
mov
xchg
jns
add
adc
dec
xchg
adc
inc
xor
cwtl
mov
ja
inc
rolb
pusha
cmp
jg
jmp
mov
and
pop
lods
cmpsb
mov
and
adc
es
add
cmc
xor
subl
or
and
inc
imul
pop
scas
sub
addb
jg
adc
pop
lret
cltd
add
call
xchg
mov
enter
test
or
fmuls
pop
cmc
movhps
push
lret
and
lret
pop
or
fs
ret
jb
out
lea
in
pop
push
lret
out
dec
insb
mov
mov
push
out
lock
sahf
pop
sub
cmp
popf
sti
vpmacswd
or
out
sub
mov
sbb
push
push
mov
fs
stos
jmp
mov
scas
mov
notl
or
bound
add
lahf
notl
movsl
stc
stos
fs
ljmp
sbb
xchg
add
outsl
lret
add
scas
sti
or
xor
sahf
jmp
sti
push
add
pop
loope
pop
popa
add
add
mov
outsl
rcrl
and
pop
leave
pop
sti
je
push
stos
dec
and
pop
pop
mov
pop
daa
hlt
mov
mov
mov
jno
pop
mov
rcr
cli
sub
xchg
adc
out
mov
dec
mov
jl
fs
sub
test
pop
add
and
xchg
out
sub
pop
hlt
test
sbb
xchg
and
sti
inc
sub
jecxz
andb
jmp
pop
cmp
mov
dec
jmp
sub
cmpsl
hlt
sbb
xchg
and
in
and
ss
push
mov
mov
mov
daa
pop
outsb
insl
dec
dec
xchg
ret
pop
pop
orl
and
push
shrb
jb
cmp
and
jmp
pop
mov
mov
pop
dec
sub
and
not
jge
adc
call
jbe
mov
bound
cli
or
or
addr16
pop
dec
push
movl
lds
clc
mov
icebp
mov
mov
lea
jno
xor
aas
rcrb
in
adc
repz
pop
sbb
sbb
sbb
loop
cmpsb
inc
inc
cmc
push
push
mov
mull
daa
push
jmp
fs
mov
jg
and
sbb
mov
mov
test
add
test
lock
cmp
mov
sub
xchg
minps
mov
shlb
rorb
add
and
dec
mov
sbb
pop
imul
enter
pop
shlb
jo
mov
and
and
mov
into
jge
mov
mov
out
mov
decl
push
pop
dec
nop
out
loope
movsb
pop
and
or
xchg
mov
pop
xor
jle
out
push
xchg
aad
adc
add
je
or
or
cmp
and
lret
shlb
jge
xchg
fisubl
or
xor
stos
das
push
push
orl
or
imul
or
pop
pop
pop
inc
and
in
add
mov
or
icebp
dec
ljmp
fwait
xor
daa
xchg
bnd
pop
aas
es
xor
in
pop
aam
push
dec
mov
pusha
push
add
out
or
push
mov
jmp
dec
push
push
fists
mov
push
dec
fmull
and
jns
rorb
push
insb
pop
mov
sbbb
and
sub
adc
mov
pop
push
pop
cltd
test
push
cld
mov
iret
imul
jns
pop
or
xorl
and
stos
jle
pop
sub
xchg
xchg
ret
add
fnstcw
pop
xor
rorb
stos
xchg
inc
push
and
sub
mov
xor
pop
outsl
dec
cmc
mov
and
or
push
push
mov
push
mov
in
mov
and
pop
std
pop
add
sub
pop
sahf
addl
mov
and
jmp
pop
inc
das
or
loopne
out
jnp
inc
outsl
push
mov
jmp
orb
and
lret
xchg
add
test
shl
fdivrs
lods
lea
push
xor
add
outsl
out
jle
pop
popf
push
xchg
fchs
xchg
or
sub
add
push
mov
incb
mov
or
jmp
xchg
movsl
jae
mov
outsb
adc
int
movsb
adc
push
scas
ljmp
subl
inc
dec
jmp
je,pn
es
into
lods
jle
bound
aaa
mov
loop
jns
sbb
cmp
rclb
inc
adc
mov
stos
inc
add
inc
sub
xor
ret
or
aaa
shr
mov
jno
in
or
popa
sub
aam
mov
sbb
inc
lods
add
pop
sbb
sbb
adc
je
jg
call
fistpl
dec
mov
outsb
ljmp
mov
push
and
dec
popf
pop
int
call
flds
mov
data16
es
sbbb
push
sahf
lock
and
push
pop
out
mov
out
sbb
jmp
and
pop
and
push
mov
jg
add
bound
sarl
sti
adc
icebp
mov
int
xchg
and
push
pop
jmp
pop
pop
in
and
int3
dec
daa
lock
xlat
xchg
jae
jne
xchg
sub
mov
mov
sbb
adc
jg,pn
and
out
into
roll
mov
xor
add
adc
xchg
fldl
and
adc
iret
lret
gs
or
out
out
jbe
lret
pop
adc
xor
int
cld
pop
add
jecxz
sbb
mov
inc
cld
cmpsl
adc
dec
mulb
decl
pop
in
sub
inc
push
shlb
adc
xor
jmp
sahf
dec
pop
jno
mov
cmc
dec
add
je
data16
jmp
jne
xor
pop
pop
push
adc
or
add
dec
lock
inc
sub
shlb
inc
outsb
add
jl
and
and
in
jl
shr
and
test
pusha
int
push
outsl
xchg
dec
or
cmpl
pop
lahf
js
add
mov
or
sbb
xchg
or
fidivrl
adc
sbb
pop
xchg
pop
les
in
outsb
cwtl
dec
icebp
mov
aam
push
cmpb
es
or
test
cmp
int3
popa
mov
inc
mov
or
or
stos
out
mov
cmp
mov
loope
shrb
and
leave
fcomps
add
cld
mov
rol
jmp
mov
jge
bound
cmp
pop
cmc
pushf
out
rol
xor
add
jne
or
daa
les
or
out
or
mov
and
je
pop
pop
fistpll
mov
dec
orb
insl
add
dec
out
add
push
push
push
add
pop
mov
icebp
and
sbb
jmp
addb
maxps
mov
pushf
xchg
jle
insb
ds
movb
das
xor
and
jno
push
clc
jmp
jmp
inc
test
jb
push
shr
xor
cmp
cld
mov
mov
sub
push
loope
add
dec
xchg
dec
cmp
sub
pop
or
repnz
in
mov
loop
mov
fcompl
mov
or
leave
add
jae
xchg
out
adc
adc
cli
insb
in
and
push
dec
roll
sti
add
mov
adc
in
jg
push
jb
or
xor
lea
nop
push
dec
pop
gs
and
stos
cmpsb
pop
in
movsl
jne
mov
rolb
push
push
mov
push
push
inc
pusha
jmp
iret
popf
loop
clc
cmp
test
and
sub
pop
jmp
lret
jbe
sub
pop
push
jmp
inc
mov
lock
push
push
mov
add
cmp
sub
neg
pop
rorb
xorb
add
test
fistl
cmp
mov
scas
fildll
push
leave
push
aad
in
adc
jo
popf
in
push
xchg
adcb
add
push
rcll
cli
mov
js
dec
xor
sbb
insb
scas
gs
mov
repnz
xlat
or
inc
xor
adc
jbe
xchg
cmp
add
sub
mov
inc
negb
dec
popa
sarb
xor
cmp
mov
jnp
movsl
enter
mov
mov
fildl
and
out
push
and
mov
les
jo
popa
adc
push
inc
xchg
pop
fadds
jge
mov
test
push
int3
xchg
xchg
stos
dec
inc
loop
repnz
loopne
cmp
pushf
addr16
clc
push
dec
in
dec
mov
cmc
adc
out
aas
cmpb
rorl
popf
jmp
mov
add
cmc
shrb
imul
adc
aas
xchg
and
push
push
ds
fs
jmp
inc
mov
xchg
pop
or
mov
push
frstor
test
test
dec
lret
add
xchg
sub
and
inc
push
cli
jbe
adc
imul
into
xor
add
stc
lahf
adc
mov
sub
mov
push
out
mov
push
nop
imul
ret
int
mov
xchg
adc
test
dec
pop
add
add
push
mov
or
xchg
sbb
pop
or
call
or
cmp
insl
rclb
xor
inc
push
les
addr16
dec
pop
int3
leave
adc
mov
sub
pop
push
inc
clc
cltd
adc
cmp
push
leave
pop
jmp
inc
scas
mov
pop
mov
add
in
in
jnp
lds
in
mov
jne
xchg
jecxz
add
push
cwtl
in
loope
sbb
lret
jb
add
out
jb
sub
js
dec
into
jp
push
ret
sbb
sub
cmp
pop
mov
dec
mov
mov
add
adc
mov
fistpll
push
push
add
xor
sbb
es
sti
cld
addr16
ss
add
sub
or
repnz
out
sbb
daa
daa
xlat
gs
scas
out
pop
divl
rolb
xor
enter
orb
add
ljmp
jmp
pop
outsb
imul
mov
sub
adc
cmpsb
fisttps
mov
sbb
stos
lahf
mov
jnp
mov
jns
dec
pop
sbb
lock
xchg
das
loop
jo
add
out
bound
xchg
mov
out
mov
lock
sub
or
in
mov
and
jno
sarl
in
and
leave
testb
push
add
inc
adc
cld
movsl
pop
out
pop
xchg
sti
sub
negl
scas
dec
xor
ret
sub
xchg
pop
push
sub
insl
add
das
je
popf
clc
lret
sti
aam
xchg
push
sbb
mov
stos
addr16
int3
push
inc
movsb
pushf
pop
das
sub
iret
je
cli
pop
repz
out
in
stos
push
add
daa
sti
sbb
int3
fldenv
jno
leave
jge
lret
add
jb
fldl
movsl
lret
xchg
pop
lock
push
or
sti
out
mov
int3
mov
push
push
rcr
pop
lods
lcall
jns
insb
xchg
pop
mov
cmc
or
cmp
push
xor
lahf
push
and
movsb
repz
pop
add
and
ret
cmp
pop
lea
pop
add
mov
sub
jmp
jb
xor
and
xor
push
jmp
repz
dec
cmp
cs
shlb
mov
sbb
dec
mov
mov
aaa
out
testb
loope
jp
push
jecxz
rcll
mov
stos
pushf
push
ja
xchg
xchg
push
mov
and
clc
clc
mov
jne
jecxz
add
xor
and
and
jno
xor
pop
push
dec
dec
scas
dec
sar
sub
mov
outsl
and
mov
scas
sbb
into
mov
sub
jnp
and
aam
or
push
mov
and
mov
hlt
mov
movsl
add
out
dec
leave
rcll
pop
vmwrite
stc
popa
les
test
pop
loop
pop
cmp
pop
jmp
push
lds
mov
js
cmp
outsb
jnp
push
mov
sub
mov
inc
lret
xor
mov
movsl
pop
cs
push
bound
or
jne
sar
dec
sbb
fiaddl
pop
adc
leave
push
sub
jne
in
jmp
nop
jb
jl
lds
movsb
add
mov
jmp
cmp
cmp
hlt
pop
xchg
push
push
pop
xor
scas
addr16
fwait
or
jmp
insb
or
xchg
or
pop
fdivr
mov
xchg
sbbb
xchg
cmp
xchg
cli
movsb
jmpw
int3
aas
lcall
dec
push
jae
mov
test
in
xor
cmpsl
scas
mov
pop
push
and
clc
pop
les
xchg
test
push
decb
cwtl
push
jge
imul
shr
add
dec
mov
and
fistpl
pop
jmp
or
loop
fldl
adc
pop
sub
arpl
mov
mov
call
xor
iret
dec
cmp
in
scas
inc
out
jb
jp
cmp
pop
cld
jb
pop
adc
adc
cld
inc
cli
mov
or
popa
mov
pusha
imull
ret
repz
lcall
add
daa
lea
dec
dec
mov
jle
test
push
stc
cmpsl
repz
pop
sti
adc
mulb
cmp
lret
add
imul
xor
in
cmpsl
cmp
pop
inc
out
sbb
or
jbe
daa
dec
mov
scas
cmp
push
shrb
push
cmp
leave
push
aad
mov
imul
xchg
and
cmp
not
mov
push
adc
sbb
aaa
sub
aas
push
mov
add
and
sub
shl
adc
inc
xor
and
mov
sub
add
addr16
jnp
dec
pop
and
ja
or
push
mov
xchg
hlt
stc
xor
or
dec
xor
mov
push
pop
push
dec
fmuls
push
arpl
mov
dec
pop
add
sbb
addr16
push
sub
sub
test
pop
bound
xor
pop
out
in
cmpsl
cmp
sbb
jmp
in
or
adc
inc
push
or
adc
jecxz
xor
mov
inc
add
out
jmp
in
add
dec
mov
sub
xlat
or
mov
leave
lock
mov
mov
push
out
pop
push
cmp
cmp
hlt
inc
es
inc
or
not
jmp
fwait
cmp
xor
push
push
adc
shl
jl
lahf
push
mov
mov
mov
call
dec
push
mov
lods
cmc
dec
lea
out
pop
adc
loop
shlb
adcb
not
or
jo
mov
add
push
push
mov
cmp
push
in
or
ds
cli
sub
inc
inc
pop
or
pop
test
das
out
adc
add
push
negb
movsb
daa
outsb
or
dec
pop
push
xor
jecxz
out
test
xor
dec
mov
and
pop
clc
aam
inc
fdivrs
lds
popa
xor
mov
push
pop
add
pusha
dec
adc
pushf
arpl
pop
mov
repz
cmpsl
jg
pop
shrb
das
cmp
mov
lods
and
scas
adc
push
mov
xchg
push
mov
add
add
xor
sbb
pop
add
add
dec
pop
jb
mov
and
xchg
push
fidivrl
or
mov
jne
push
rclb
mov
ficomps
mov
and
jnp
pop
mov
fnstcw
mov
jbe
loop
jp
pop
jnp
sub
or
sub
out
sub
push
or
xlat
or
add
sar
and
adc
push
icebp
outsb
ret
dec
bound
or
or
add
sub
push
ds
xor
outsl
in
jmp
ljmp
pushf
int
jge
add
push
push
sbb
imul
xchg
jmp
ret
jmp
popf
dec
popf
push
mov
outsl
clc
fwait
hlt
outsl
out
xchg
inc
xor
lret
subb
int3
lahf
clc
mov
mov
jnp
or
jne
push
sub
ja
and
mov
pop
orb
out
xchg
rolb
mov
add
inc
push
push
mov
xchg
ret
xchg
mov
addb
mov
jmp
notb
add
or
pop
sub
sub
mov
push
inc
jne
mov
shrl
push
sub
xchg
dec
aad
mov
push
jp
add
iret
stc
incb
aad
mov
movsl
sbb
scas
out
add
hlt
jo
icebp
and
jo
stos
mov
cmp
mov
sub
sub
mov
add
shl
imul
sbb
sbb
fbstp
jecxz
jmp
pop
mov
ret
add
pusha
lds
add
mov
daa
add
das
aam
mov
inc
sub
in
cmpsl
inc
imul
dec
adc
data16
aaa
sub
sub
pop
or
cmp
imul
popf
pop
xor
pushf
ljmp
notl
mov
loop
jge
fcomps
cmc
add
dec
and
jno
test
or
pop
mov
cmc
dec
mov
lret
add
mov
xlat
sahf
mov
shll
jae
jae
iret
out
and
stc
sub
movzbl
push
xlat
or
lods
sti
outsb
cmpsl
sub
inc
push
mov
adc
sub
xor
push
push
ljmp
ljmp
lcall
cli
push
rorl
mov
mov
bound
jp
shr
adc
andb
or
jno
or
in
rcrl
sarb
mov
call
sbb
test
enter
mov
and
rcll
cs
fldcw
aam
bound
int
icebp
adc
jge
hlt
movsl
inc
in
inc
push
jge
sub
cltd
dec
add
and
orb
or
nop
cmpsb
inc
sub
pop
sbb
cmp
pop
mov
iret
dec
and
imul
cli
stos
daa
movb
decb
pop
and
les
gs
push
paddusb
ret
out
shrl
sub
add
mov
and
int
sub
dec
sub
cmp
sub
and
mov
pop
push
nop
arpl
jge
jle
mov
loop
push
push
ja
mov
dec
mov
push
mov
dec
divps
push
ret
jle
add
mov
stos
xor
xor
push
push
and
xor
sbb
mov
in
ljmp
cmpsl
sti
push
imul
jnp
jnp
fmul
jbe
inc
cmc
xor
dec
xor
cmp
rorl
scas
adc
mov
xlat
add
repz
xor
mulb
pop
inc
mov
add
push
push
adc
lock
pop
cmp
mov
mov
out
hlt
test
imul
stc
and
jo
jns
adc
fwait
and
mov
push
arpl
dec
arpl
and
lods
iret
inc
cwtl
jo
add
jns
and
adc
stos
cmp
ja
mov
jmp
push
mov
sbbl
push
push
push
mov
in
aam
out
cmp
xchg
cmc
mov
jns
push
add
cmp
mov
dec
cmp
lds
cmp
into
pop
push
dec
std
gs
mov
mov
push
mov
jbe
filds
sub
mov
mov
xor
ja
test
test
mov
fmul
and
lock
mov
jmp
dec
push
rcrl
lods
push
fiaddl
add
test
xor
jle
sub
outsb
aaa
cmp
in
sbb
nop
xor
push
push
lods
mov
das
insb
mov
and
pop
popf
inc
xorb
hlt
fnstenv
ret
pusha
push
xor
enter
mov
in
jnp
mov
mov
push
or
mov
adc
sbb
jbe
mov
and
insb
push
jo
wrmsr
filds
incb
sbb
jmp
test
icebp
mov
sbb
mov
rol
or
inc
jo
int3
clc
in
jmp
jl
out
push
gs
das
js
adc
out
repnz
dec
adc
mov
ds
sub
or
mov
je
movsb
push
and
dec
std
push
jae
aam
das
cmc
loopne
cld
inc
adc
fistps
or
rorb
jp
cmp
lret
adc
out
sbb
sub
push
popa
dec
or
testl
mov
dec
les
repnz
xor
adc
enter
dec
daa
pop
pop
inc
cmp
push
pusha
es
mov
or
dec
shr
mov
push
mov
in
jl
popf
and
inc
mov
mov
test
cld
inc
fs
mov
adc
jbe
aas
jbe
adc
sbb
add
pop
movsl
and
jb
jns
cli
std
andb
cmpsl
mov
pop
test
and
pop
in
fstpl
ret
pop
es
jno
adc
out
xchg
and
xchg
jns
popa
push
mov
sub
sti
jmp
and
lds
fs
js
xchg
push
cmp
add
cmp
or
mov
loope
bound
rorb
cmpsb
xchg
rolb
pushw
jmp
test
push
fisubrs
loop
test
lds
xlat
cmpb
arpl
repnz
push
sub
jmp
icebp
mov
bound
inc
sbb
or
in
lods
or
and
lret
nop
in
orb
jge
shl
sub
add
mov
and
cmp
in
test
sbbl
sbb
add
jmp
adc
out
jae
push
push
sbb
push
jno
and
test
cmp
cld
jb
mov
loop
jp
mov
pop
pop
scas
pop
and
mov
or
addr16
sub
xlat
lods
in
push
or
mov
pop
lods
mov
mov
mov
pop
bound
movsb
rorb
xor
cs
push
fiaddl
lock
xor
jp
add
push
loop
lods
push
mov
pop
add
mov
pop
push
xor
pop
jmp
mov
jbe
pop
ja
jns
int
jno
or
test
movsb
popa
add
inc
add
jb
cmp
xchg
mov
jmp
cmp
xchg
add
ljmp
in
fwait
int
push
out
fisubl
ja
push
arpl
add
dec
repnz
jmp
mov
jg
popf
jae
lods
adc
add
jp
and
fstps
int3
jbe
mov
cwtl
mov
ds
shll
mov
push
ljmp
aam
mov
imul
mov
movsb
push
cmp
sub
loopne
mov
fs
mov
jle
mov
or
in
in
add
lds
ljmp
and
mov
ret
sahf
outsb
gs
mov
inc
push
push
insl
loope
inc
xchg
add
adc
jl
mov
clc
or
jbe
or
or
cmpsl
mov
jbe
ret
out
and
gs
jns
lods
cmp
test
jp
pusha
sub
adc
and
adc
sub
jmp
mov
push
mov
dec
inc
and
xchg
and
testl
cmpsl
lds
into
cmp
btc
xlat
add
adc
push
mov
xchg
adc
adc
pop
mov
pop
mov
out
std
or
xor
imul
cmp
sarb
shrb
adc
loop
int3
in
and
jmp
adc
out
repnz
jl
jmp
pop
cmp
ficoml
jmp
out
cmpsl
clc
repz
lahf
test
sub
sbb
into
xchg
jnp
mov
movsb
addr16
rcl
hlt
daa
adc
movsb
pop
ljmp
or
sbb
xchg
dec
mov
test
sbb
cld
iret
shlb
dec
add
rol
xor
push
xor
push
mov
push
mov
or
sub
jno
stos
scas
outsl
inc
cwtl
lods
and
sub
mov
das
mov
push
sub
sbb
adcl
xchg
fsubs
shll
insb
iret
stc
dec
push
orb
cwtl
dec
add
cs
xor
or
movsl
or
mov
lods
mov
adc
jne
sub
sbb
dec
imul
xchg
js
mov
push
idivl
mov
popf
dec
ret
or
push
insb
push
je
lea
aad
pop
xor
sti
jmp
mov
and
dec
pop
lock
scas
lahf
out
repnz
pop
add
pop
xchg
mov
pop
popf
je
pop
test
retw
es
mov
les
xchg
divb
sbb
mov
jne
adc
clc
rcl
lds
or
lods
insb
mov
xchg
call
inc
adc
bound
mov
lds
inc
mov
add
sbb
daa
aam
stos
cmpsb
cwtl
es
cmpsb
xlat
sub
in
adc
jge
sarb
sub
jmp
dec
adcl
xor
dec
push
dec
mov
inc
mov
scas
sub
mov
iret
out
scas
push
inc
xorl
test
and
jne
inc
push
add
fstps
es
or
xor
xor
xchg
cmc
and
push
mov
loopne
out
leave
je
add
fstl
jne
push
mov
testb
add
pop
mov
out
cli
dec
enter
movl
add
cmp
sub
fdivrs
loop
lock
cmc
cmp
les
pop
inc
fs
aam
fs
push
fstps
adcb
loop
popa
sub
je
mov
xchg
fdiv
or
push
push
cmp
pop
mov
pop
mov
jmp
lret
mov
loope
cvtdq2ps
sti
sub
xchg
rcrl
xchg
jmp
sbb
sub
or
xor
inc
mov
or
ja
daa
rcrl
push
jge
ds
in
push
mov
jmp
sub
add
cmpsb
and
scas
push
hlt
xor
inc
add
arpl
dec
or
sbb
jne
push
cs
cltd
pop
dec
mull
daa
sub
adc
sub
das
rolb
add
ljmp
and
dec
das
push
push
gs
mov
xlat
les
daa
jl
nop
mov
adc
cs
repz
icebp
push
pop
add
shll
fstps
pop
and
jo
pop
pop
add
jno
test
mov
in
push
or
push
pop
in
add
and
nop
or
je
or
xchg
add
daa
dec
push
pop
sarl
pop
xchg
loope
nop
sub
adc
jnp
and
mov
sub
sbb
jle
mov
rol
fucomp
push
add
inc
out
inc
sub
adc
lret
add
fwait
les
mov
sub
push
mov
sub
and
xor
js
lods
fdivp
inc
lcall
and
jns
pop
dec
pop
mov
je
push
mov
aas
cwtl
es
and
mov
cltd
dec
imul
and
push
insb
pop
sub
popa
dec
mov
shr
xor
jb
iret
mov
mov
pop
add
dec
add
sbb
das
add
mov
adcl
test
mov
lds
outsl
lahf
push
inc
xchg
pop
loopne
add
adc
addb
pop
sub
lock
jns
jp
mov
hlt
add
xor
sub
add
add
sub
push
cmpb
push
mov
rclb
gs
jne
push
repz
or
or
cmp
mov
fst
push
xchg
inc
out
mov
mov
adc
adc
adc
fsubrp
rclb
add
sub
stos
lods
arpl
or
inc
hlt
icebp
sub
dec
xor
dec
dec
jbe
mov
inc
pop
ja
scas
and
jns
movsl
mov
mov
fwait
leave
sbb
xchg
mov
pop
std
inc
lods
or
cmp
sar
sub
jo
dec
sarl
aas
dec
dec
jnp
adc
or
and
add
pop
cmp
cltd
subb
or
xchg
outsb
jae
push
lret
mulb
pop
mov
mov
add
push
mov
sar
xor
daa
je
pop
sbb
jno,pt
push
or
xchg
mov
stos
add
lds
clc
dec
test
or
pop
push
inc
xchg
xlat
cmpsl
test
jmp
and
stos
divb
es
cmpsb
add
aaa
shr
leave
aam
and
push
add
in
vmovdqa32
loope
xchg
jg
hlt
and
fmuls
inc
and
sti
pop
adc
cmp
jns
and
imulb
imul
xlat
mov
sub
std
inc
adc
adc
and
and
mov
pop
test
mov
push
jge
mov
shll
dec
pop
lods
jge
inc
xor
scas
sarb
add
lds
aas
outsb
mov
adc
mov
inc
or
sbb
jecxz
daa
push
pop
mov
pop
clc
push
mov
outsb
frstor
lret
stos
pusha
sbb
mov
pop
lock
pop
fidivl
sub
cmp
or
and
imul
test
mov
mov
mov
les
pop
lock
and
out
mov
mov
sti
cmp
inc
movsb
lods
das
mov
mov
and
aam
jmp
rcl
popf
pop
pop
xor
adcl
lahf
stc
test
xchg
sub
dec
cltd
loop
in
out
das
inc
push
and
push
lret
add
out
jns
in
lds
movsb
negb
fstps
xor
shlb
xor
pop
sub
outsb
icebp
and
lods
add
movl
pop
orl
mov
sub
xchg
xchg
or
pop
mov
sub
jmp
xchg
pop
data16
pop
cltd
sub
test
xchg
add
ds
xor
jne
jns
xchg
mov
jp
sub
or
cmp
lock
loop
adc
adc
dec
neg
mov
add
pop
xor
mov
jns
andb
sub
and
jnp
mov
gs
jb
out
shr
adc
inc
push
xor
xor
mov
dec
xor
jne
jl
pop
les
pop
sti
xor
push
cmp
xlat
or
jmp
inc
sbb
adc
neg
stos
sub
jmp
out
mov
xchg
and
pop
adc
sub
ret
in
pop
add
loop
or
mov
and
mov
and
pop
push
pop
das
jg
xchg
xlat
out
and
fcoms
dec
pop
or
mov
adc
ret
cmp
or
or
pop
and
bound
pop
adc
mov
sbb
add
jle
add
inc
jmp
xchg
push
mov
fadd
xor
xor
mov
or
sti
ja
das
mov
push
aas
imul
lahf
stc
xchg
mov
add
jl
xor
pop
push
inc
jnp
in
push
xchg
pusha
sbb
mov
add
mov
xchg
or
adc
xchg
leave
pop
xor
fmuls
lahf
push
cmp
sub
shlb
aas
hlt
pop
or
enter
and
adc
pop
add
xor
mov
pushw
es
arpl
push
icebp
stos
mov
or
test
mov
lahf
adc
and
scas
xchg
xor
sti
adcb
shlb
mov
sub
fists
sub
fstpl
push
adc
incl
and
pop
push
mov
mov
testl
push
sbb
mov
add
pop
or
popf
push
adc
hlt
in
ljmp
icebp
leave
xor
out
xchg
popa
inc
or
mov
inc
js
xorb
jge
sub
scas
popf
add
inc
or
jmp
mov
pop
pop
or
insl
neg
in
sub
mov
setnp
ret
pop
loopne
and
ss
xchg
arpl
out
aad
jmp
scas
and
sub
cmpl
jns
push
add
or
cmc
in
dec
xor
and
gs
sqrtps
mov
ret
fstl
icebp
push
and
add
jno
jno
mov
sub
pop
pusha
xchg
mov
mov
pop
jmp
cmpl
xchg
add
cmpsb
and
and
in
push
test
int
jnp
sti
sub
test
test
rcll
fsts
cmp
or
iret
inc
push
loop
int3
mov
sub
daa
pop
pop
fdivp
ret
negb
push
jno
int
or
pop
movsb
push
push
repnz
pop
aam
test
xchg
jg
cwtl
mov
xor
movsb
cli
push
mov
sub
sub
jo
mov
pop
iret
or
fidivs
xor
aad
or
mov
fwait
xor
cmc
and
or
mov
push
bound
cmovb
in
ljmp
add
addl
lock
add
out
bound
pop
mov
pop
imul
mov
jns
or
jmp
aaa
arpl
xchg
icebp
sub
pop
adc
pop
dec
add
dec
int
xchg
xor
mov
xchg
cs
push
jge
loopne
or
ret
inc
xchg
scas
push
push
mov
incb
rcr
mov
add
mov
stos
pop
push
loope
leave
cmc
sub
iret
or
xor
loopne
dec
mov
out
push
call
test
push
leave
popa
loopne
xchg
mov
pop
lds
sbb
leave
xlat
sub
jecxz
pop
cmc
out
dec
pop
xchg
xor
jns
popf
adc
stos
xor
mov
sbb
test
inc
mov
mov
cs
test
cli
mov
ror
in
aas
jecxz
dec
clc
fisubrl
push
addr16
daa
jbe
jno
insb
mov
sbb
mov
jb
push
dec
sti
push
setbe
inc
lods
sub
push
or
adc
arpl
inc
xor
decl
in
movsb
cmc
xor
jecxz
shr
comiss
mov
stos
push
add
fstpt
mov
xchg
or
jl
and
outsb
mov
adc
mov
lahf
push
mov
popa
loope
lcall
orb
or
and
ret
outsl
bound
stos
mov
add
pusha
cmc
sub
and
loop
int
push
psrld
pop
cmp
ret
jl
adc
sub
rorl
sbb
xchg
jecxz
push
ljmp
pop
jle
addl
test
lahf
in
aad
inc
mov
negl
dec
jb
dec
push
mov
add
aad
inc
or
push
mov
std
xchg
sahf
inc
push
pop
test
xchg
stos
mov
lahf
inc
push
pop
pop
push
std
lods
mov
aam
mov
popa
icebp
jae
pop
fidivrl
pcmpgtb
pop
and
fdiv
inc
add
sbb
or
mov
sub
fidivs
mov
and
nop
fisubl
cmp
inc
or
movsb
cwtl
inc
push
cli
mov
xchg
aaa
adc
add
pop
jae
daa
addl
sbb
outsb
loope
sub
test
push
pop
sub
pop
pushf
add
add
popf
aad
cmpsb
dec
xor
adc
cmp
insb
scas
cmc
movsb
div
repz
pop
jle
jmp
push
addl
jg
and
jl
ret
ljmp
xor
mov
sti
gs
xlat
dec
sbb
push
rorl
stc
fisubrl
add
xchg
mov
sub
shrb
add
mov
inc
push
pop
mov
xor
bnd
mov
dec
mov
push
in
sbb
push
sub
in
adc
repz
push
sub
mov
movsb
or
flds
adc
add
jp
test
pusha
or
pusha
pop
cmp
jbe
mov
push
pusha
dec
add
fisttpll
jmp
cmp
mov
jne
or
mov
jmp
jno
jg
push
jns
ljmp
xor
push
addr16
sbb
xor
jmp
std
inc
test
mov
insl
lods
adcl
mov
out
inc
into
push
pusha
rolb
es
pop
mov
rclb
mov
add
sub
fstl
repz
mov
cmp
inc
sbbb
xchg
pop
adc
cmc
js
adc
jge
cmp
aam
add
iret
inc
xor
adc
or
adc
inc
sbb
ret
pop
inc
sbb
shr
jns
sub
inc
imul
rcrb
enter
and
mov
popl
pop
add
imul
ud0
jl
jp
loop
mov
mov
xor
xor
and
movsl
ds
xchg
arpl
mov
add
or
cmc
ljmp
and
dec
cmp
jp
shlb
rcl
lret
cmp
fists
mov
mov
insb
cmc
sar
stc
out
pop
popa
addb
or
adcb
aas
and
stos
aas
popf
or
add
mov
testl
test
add
clc
inc
je
cmp
das
shlb
mov
pop
pop
add
fisubl
jle
loop
or
or
movsb
out
add
push
sub
aas
test
sbb
gs
jmp
mov
or
sub
stos
push
dec
movsl
test
xlat
in
add
xor
rep
ficoms
push
std
dec
adc
dec
adc
xchg
mov
inc
cmpl
or
jne
stos
xchg
das
mov
pop
lcall
dec
pop
mov
outsl
or
jge
fmull
xchg
les
repnz
adc
add
push
push
movsb
jnp
jge
std
imul
pop
mov
and
add
pop
testb
sahf
add
inc
cmp
xor
add
aaa
popf
loopne
jae
daa
jne
lea
mov
mov
lods
or
std
dec
mov
jmp
inc
sbb
subb
sub
rcll
jo
stos
nop
out
fwait
xor
sub
jg
jo
xchg
icebp
andl
push
push
and
mov
int
pusha
imul
mov
stc
cmp
or
jnp
pushf
add
jl
cwtl
aam
popf
jb
pop
mov
cmc
and
push
jmp
jo
jns
dec
stc
lds
mov
das
sub
js
mov
sbb
out
and
int
xor
fdiv
mov
dec
mov
xor
or
push
xchg
mov
cmp
das
dec
fsubr
lock
add
loop
pusha
push
scas
adc
pop
and
fidivl
nop
dec
xchg
pusha
add
cmc
xchg
frstors
outsl
mov
and
in
or
and
test
mov
jb
cld
jg
test
mov
add
mov
lret
ss
xor
add
lcall
sbb
aad
cld
mov
xchg
xchg
xchg
dec
les
sbb
loop
in
or
loope
mov
inc
cwtl
jne
nop
sbb
hlt
gs
push
ret
aad
loop
stc
mov
movsl
jbe
pop
fdivrl
pop
or
fs
push
cmp
or
push
pop
inc
clc
aam
scas
icebp
lret
pusha
xchg
mov
cmp
add
loop
shrb
mov
sub
dec
pop
mov
movsl
jae
and
pop
xrelease
out
and
cmp
sbb
jp
ljmp
fcmovu
jmp
sub
cld
decl
nopl
aad
test
pop
or
add
std
icebp
inc
fsubrl
adc
stos
xchg
xchg
mov
add
jmp
and
not
dec
or
icebp
mov
inc
mov
inc
pop
bound
add
rcrl
lcall
sub
aad
pop
adc
cmp
pop
inc
mov
ds
stos
push
lods
xlat
leave
aad
icebp
and
loope
scas
mov
lret
loop
push
mov
inc
add
xor
pop
jnp
push
jbe
dec
ljmp
mov
cld
xor
int
jne
testl
mov
push
fldcw
dec
adc
bound
jg
leave
mov
imulb
xchg
add
inc
mov
data16
rol
lock
or
icebp
aaa
addl
mov
and
pop
pop
inc
ds
and
pop
add
jg
ficomps
movsl
mov
jmp
or
pop
out
into
rclb
mov
xchg
sub
add
jns
mov
ja
xchg
pop
push
dec
repz
rorb
lea
dec
mov
or
imul
sbb
popa
or
std
pop
push
xor
pop
sub
pop
dec
pop
jecxz
cmp
scas
xor
xlat
js
je
das
stos
jb
pop
clc
enter
ja
jo
or
aas
sbb
mov
sub
jae
js
fmull
insl
lods
fmull
je
lds
loope
cmp
fwait
scas
add
test
xlat
add
xchg
scas
sbb
mov
add
pop
mov
pop
enter
out
mov
push
aaa
xor
jmp
cld
icebp
in
pusha
mov
addb
sbb
sub
jmp
pop
lods
hlt
leave
pop
pop
sahf
loop
xor
xor
pushf
js
repnz
enter
or
nop
mov
inc
in
dec
and
add
mov
sub
xchg
in
mov
call
push
jmp
mov
jp
stos
addb
add
jg
fnstenv
pop
jmp
lds
clc
outsb
mov
icebp
sub
dec
js
repz
and
adc
cmp
push
aam
pop
jno
jmp
movb
test
adc
adc
and
cli
loope
ljmp
mov
and
fldl
sbb
mov
jmp
add
movsl
pop
mov
jb
push
sbb
das
sub
nop
clc
js
adcl
aad
or
testl
cs
test
push
jne
loopne
jbe
or
mov
inc
stc
das
pop
or
pop
inc
sbb
rcl
dec
and
push
test
xor
mov
add
ret
outsl
icebp
in
sahf
mov
pushf
mov
pop
sbb
lahf
xchg
inc
xchg
faddp
cmpsb
jecxz
add
pusha
out
sbb
std
out
mov
push
mov
not
jmp
and
nop
and
adc
push
not
add
das
push
leave
sarb
sbbb
xchg
dec
or
xor
and
and
lock
mov
xchg
es
xchg
orb
sbb
push
stos
sub
jecxz
sub
icebp
dec
pop
in
test
ds
bound
int
addr16
add
jecxz
mov
inc
mov
mov
add
mov
ss
fisubl
jb
sub
cmp
jns
jmp
insl
das
xor
pop
orb
imull
fistl
pop
and
xor
and
cs
add
out
and
inc
pop
lea
cmp
hlt
or
sub
pop
lods
mov
jg
int
les
pop
mov
sub
mov
sti
mov
inc
leave
push
pop
test
in
xor
stos
mov
insb
pop
xchg
mov
lock
sub
cmp
jmp
or
push
leave
dec
test
out
mov
lahf
dec
push
maxps
xchg
repnz
repz
sbb
fsts
mov
push
pop
mov
dec
inc
mov
in
push
push
cmp
adc
pop
lods
enter
and
cltd
mov
push
mov
mov
pop
test
push
je
cmp
adc
push
pusha
inc
xlat
jae
mov
repnz
dec
mov
mov
sub
out
push
push
add
test
cld
loopne
jg
push
xchg
pop
pop
push
int3
jo
mov
cmp
add
lret
not
push
and
cmp
and
sarb
adc
cmp
mov
das
add
pop
fcmovbe
inc
mov
mov
rorl
int3
pop
sbb
pop
xchg
inc
pop
xor
sbb
mov
and
mov
inc
add
xchg
pop
out
mov
push
icebp
adc
push
push
xchg
push
data16
jp
dec
enter
in
jle
xor
repnz
jmp
jne
lds
mov
shl
fildll
sbb
jb
gs
xor
push
sbb
push
cmc
and
and
iret
xchg
movsl
leave
jmp
mov
fldenv
frstor
push
cltd
push
xor
lret
or
clc
addr16
mov
push
movsb
jle
jmp
pop
mov
push
push
fisttpl
lcall
mov
pop
jne
adc
mov
leave
in
mov
scas
sub
mov
das
cli
fwait
out
clc
add
mul
inc
lds
xchg
xor
jmp
xchg
stos
mov
mov
leave
das
loopne
xor
xchg
sti
add
stc
mov
jecxz
add
add
sub
test
stc
lahf
mov
push
inc
das
dec
enter
fsubl
add
jmp
push
mov
push
mov
out
pop
repz
adc
sub
xor
or
adcb
push
jl
adc
js
jge
into
jp
clc
adc
pop
push
or
fisttps
xor
xor
push
push
jmp
mov
xor
shrb
sub
pusha
imul
jne
or
insb
fcompl
mov
or
rorb
fisttpl
enter
push
adc
jns
lds
mov
add
lea
imul
sub
add
push
addb
cmpl
stc
pop
shr
dec
and
inc
cs
jge
push
inc
and
jmp
sarl
add
dec
pop
in
adc
pop
jg
imul
es
xchg
mov
pop
data16
in
out
stc
in
mov
jbe
int3
or
popf
jno
or
add
jb
scas
inc
in
pop
pop
xorl
or
cmp
add
mov
inc
push
xor
fists
fwait
lcall
aaa
loope
inc
mov
popa
jl
pop
gs
aam
inc
stos
test
dec
out
andl
add
imul
adc
popa
or
fadd
subl
or
sub
faddp
push
pop
ret
cmp
jae
mul
mov
inc
fucomp
cmp
push
cli
cmp
push
inc
int
daa
mov
cmp
push
add
xor
cmc
mov
fsubr
and
mov
xor
or
pusha
adc
not
xor
insb
sub
or
fstl
jmp
pusha
iret
in
addb
sub
stos
xchg
or
push
adc
mov
fsubrl
iret
add
pop
xor
adc
in
xchg
inc
adc
incl
push
mov
mov
sarb
loop
test
popl
aaa
setb
in
push
inc
and
jecxz
adc
insb
mov
xchg
ficoms
testw
adc
mov
imul
pusha
cmpsb
or
int3
or
xchg
and
sti
or
mov
jge
data16
call
jg
stos
leave
mov
and
imul
fbstp
dec
inc
jle
mov
icebp
stos
mov
xchg
stos
outsl
imul
or
jbe
sub
or
add
das
or
cs
push
sar
es
add
jne
push
je
push
dec
add
sti
jecxz
leave
xchg
adc
dec
addl
lahf
sub
pop
adc
dec
subl
aaa
aam
pop
pusha
add
loope
sbb
stos
pop
and
testb
dec
inc
enter
push
adc
into
dec
daa
xor
out
loope
popa
push
pusha
out
push
pop
add
cmpb
std
and
inc
dec
nop
xor
add
lds
jmp
pop
mov
mov
sub
push
mov
lret
es
lods
imul
sub
add
inc
jnp
jnp
ror
sbb
gs
inc
or
push
add
dec
mov
pop
add
clc
sub
sahf
or
addr16
ret
mov
pop
sub
gs
addb
mov
and
adc
add
inc
shl
mov
imulb
lock
je
clc
push
or
cmpsb
cld
das
fsubrp
movsb
fldcw
push
call
test
lds
push
sbb
shrb
add
repz
arpl
inc
test
pop
aas
jmp
xor
pusha
mov
add
aaa
scas
xlat
mov
das
fnstenv
js
dec
imul
lods
insb
outsb
dec
into
insb
adc
jne
shlb
mov
loop
jg
sub
xor
outsb
push
inc
ret
out
pop
sbbl
stos
icebp
jne
shlb
xchg
bnd
stc
fisubrs
inc
pop
push
sti
jge
testb
cs
dec
int
mov
scas
adc
shl
bnd
dec
cmp
push
ret
push
push
or
mov
leave
rol
jae
mov
insb
mov
divb
add
xlat
push
mov
outsl
add
rcr
sbb
and
mov
imul
in
lcall
or
or
sub
push
add
in
pusha
std
sarl
xor
cld
sbb
xchg
lea
jbe
pop
adc
dec
mov
mov
dec
or
leave
xchg
arpl
pop
mov
push
stc
sub
scas
in
jge
adc
out
pop
std
xchg
adc
std
inc
xchg
push
add
push
mov
or
les
xchg
lods
push
pop
xchg
not
or
add
push
out
ljmp
push
jmp
pop
mov
pop
xor
or
mov
cmp
shld
adc
mov
mov
push
ds
push
push
mov
cmp
sbb
pop
out
and
pop
sbb
adc
hlt
add
fidivrs
jmp
fiadds
xor
ret
xor
in
leave
xchg
repnz
lcall
jno
pop
stos
stos
add
or
jmp
cmpsl
pop
js
sub
xlat
add
or
mov
cld
into
out
sbb
cli
enter
xor
push
ds
jg,pt
divb
cmpsb
xlat
mov
hlt
inc
pop
pop
fcmovu
fsubrl
mov
sbb
or
jns
int
rcr
or
pop
xor
jbe
stos
xor
cmp
sub
sbb
xlat
ljmp
jge
mov
ret
jg
inc
fsubl
sbb
roll
mov
xor
outsb
xchg
cmc
cmp
cli
lret
outsb
icebp
dec
test
les
movsb
sbb
daa
sub
shlb
call
xchg
sbb
aaa
mov
icebp
leave
movsb
sub
js
xchg
jl
js
fistps
call
adc
push
or
xchg
andl
mov
and
xchg
adc
xchg
aas
dec
add
or
cmpsl
sub
imul
or
inc
or
fwait
push
repz
jp
xor
je
add
insb
sub
dec
in
out
pop
dec
loopne
adc
and
mov
and
cs
jg
push
loop
rorb
push
daa
fistl
xchg
mov
dec
in
push
stos
sub
cld
pop
les
add
sbb
jmp
mov
stos
push
scas
stc
icebp
test
je
aam
nop
jo
xchg
inc
cmp
add
shrb
jmp
es
cmp
jle
or
nop
cwtl
mov
cltd
mov
out
cwtl
dec
and
adc
jno
daa
inc
xchg
pop
cld
fbstp
jmp
jmp
jl
add
push
imul
jno
xchg
mov
bound
dec
dec
notb
es
pop
jb
xchg
jmp
rcr
push
adc
and
nop
or
dec
pop
xchg
pop
imul
inc
repz
js
popf
ret
sbb
dec
pop
test
push
sub
jmp
pusha
push
in
outsb
shl
leave
pop
push
or
mov
scas
push
jns
pop
filds
inc
xor
push
pop
mov
sbb
inc
push
lahf
pop
mov
daa
push
push
les
incl
push
dec
ret
add
rorl
mov
fidivrl
add
push
movsb
repnz
pop
add
dec
jb
scas
dec
mov
lods
adc
addr16
pop
push
in
adc
dec
push
cs
movsw
negl
push
push
add
mul
lods
fidivs
pop
inc
mov
daa
push
inc
dec
into
xchg
flds
add
cmp
or
mov
lret
adc
mov
das
xor
inc
xchg
mov
or
sbb
repnz
test
loope
jmp
cmp
mov
mov
pop
and
outsb
mov
hlt
aas
cmovo
insb
fists
mov
scas
mov
dec
push
sub
bound
dec
fdivp
adc
cmp
sar
mov
jae
ja
shrl
ds
mov
adc
jle
jb
in
adc
fisubs
pop
clc
rorl
mov
and
adc
add
jge
cmpsb
das
cmp
leave
es
add
shll
flds
xchg
inc
outsb
out
roll
pop
xor
movhps
push
mov
leave
subl
mov
xchg
push
loope
inc
pop
jmp
or
push
push
push
push
jmp
in
int3
cmpsl
hlt
ja
scas
push
arpl
mov
dec
sbb
xlat
push
and
add
std
add
out
fmuls
push
pop
sbb
add
mov
ss
adc
aaa
pop
mov
sbb
dec
filds
fisttpll
push
push
nop
cmpsl
jp
pop
mov
mov
push
xchg
add
lcall
add
and
cmp
xchg
ret
iret
in
xchg
xchg
daa
push
xor
push
cmc
insl
inc
push
inc
sub
sub
add
mul
lcall
sbb
std
cltd
mov
xchg
sarl
bound
jmp
xchg
xchg
rol
add
insb
test
loopne
popf
cltd
add
jns
mov
pop
lods
nop
xchg
jp
jo
pop
xchg
push
push
push
jmp
mov
xchg
push
popf
scas
les
mov
neg
inc
stos
jle,pt
pop
das
push
sub
and
push
push
sbb
jle
add
pop
push
rcrl
xor
and
push
adc
pop
sub
jns
xchg
jb
frstor
fcoml
or
aam
fs
jge
or
mov
and
outsl
inc
ret
cs
add
hlt
or
bound
mov
cmpsb
pop
xchg
jno
addr16
pop
add
pop
xor
popf
scas
ljmp
addr16
push
jb
sub
mov
test
pop
add
jle
add
xor
sbb
dec
dec
pop
xchg
ret
push
hlt
cmp
or
jnp
aaa
inc
xchg
jo
adc
jmp
test
mov
dec
cmp
add
jle
repz
and
cltd
xor
and
push
dec
jmp
repnz
cmp
xchg
cmp
pop
cs
or
pop
ret
test
sub
enter
lods
add
cltd
cmp
dec
add
push
gs
sti
xlat
pop
out
in
js
sbb
or
cmpb
pop
inc
repnz
cmc
adc
outsb
lret
cmp
sub
xchg
or
call
add
not
xchg
mov
fwait
add
sub
jmp
push
xor
inc
sbb
inc
popf
and
pop
and
in
dec
pop
call
aas
cld
fwait
cltd
xchg
sahf
sub
sub
shlb
xchg
insl
jge
cmp
jns
push
outsb
cmpb
or
dec
pusha
sbb
add
dec
icebp
jg
rorb
in
mov
subb
jmp
xchg
xchg
pop
loope
pop
pop
mov
dec
or
repnz
and
fsubrs
xchg
imul
xchg
sub
shl
xor
dec
out
inc
mov
pop
fnsave
test
icebp
cmp
sub
sub
sub
dec
pop
dec
jecxz
push
test
fwait
ljmp
push
jmp
inc
ret
xchg
dec
inc
aas
jns
and
loopne
or
push
push
xlat
dec
mov
jg
jno
xchg
ljmp
add
call
adc
dec
fisttpll
arpl
push
cmp
mov
push
leave
inc
mov
loopne
jb
shrb
ljmp
dec
sbb
lea
js
andl
mov
pop
xor
lret
dec
sub
sbb
mov
and
xchg
xchg
pop
add
cmpsb
jl
inc
push
push
mov
stos
inc
add
and
mov
insb
xor
xorb
push
pop
fsubs
xchg
add
jmp
and
arpl
mov
jmp
popa
hlt
lea
daa
ljmp
cmc
pop
movsl
cltd
aam
mov
pop
mov
mov
adc
jns
cld
mov
jne
cmp
or
inc
rorl
cwtl
int
inc
jl
jmp
inc
add
icebp
ret
mov
add
leave
add
adc
sub
adc
sbb
adc
es
sub
add
push
lret
shrl
sub
aam
mov
jge
push
pop
mov
cld
inc
xchg
test
out
outsl
cmp
adc
loope
pop
jmp
test
add
stc
sub
loop
shrl
das
mov
cmp
adc
sahf
xchg
cwtl
movsb
shr
or
adc
sbb
fwait
xor
nop
mov
data16
js
add
mov
fists
push
movsb
dec
pop
popf
orl
add
fs
shr
inc
lods
and
pushf
or
addr16
ret
bound
cld
pop
adc
push
and
out
pop
pop
std
sbb
adc
idivl
shrb
aas
jo
jno
js
push
lahf
int3
fists
jns
inc
mov
dec
mov
shlb
mov
adc
mov
lret
pop
pop
inc
jle
dec
loop,pn
mov
lahf
jb
and
mov
insb
ret
sarl
orl
mov
pop
out
mov
inc
mov
pop
mov
mov
push
mov
int3
out
fnstsw
and
scas
sbb
repz
pop
aam
jmp
push
jg
ret
pusha
push
lahf
mov
push
std
call
pop
pop
bound
mov
ret
test
add
jae
push
or
cli
loopne
dec
pop
pop
adc
stos
mov
pop
mov
cwtl
cmp
out
add
pop
mov
scas
mov
sti
test
push
mov
dec
notl
std
pop
ret
adcb
sbb
push
or
incl
or
nop
cltd
jmp
test
add
mov
rorl
add
pop
push
loop
inc
push
out
pop
dec
call
cmp
add
mov
and
sub
and
shl
jnp
mov
lods
gs
daa
xchg
fs
stos
mov
xchg
dec
bound
adc
ret
add
iret
add
sarl
push
mov
or
je
fisubl
ljmp
hlt
xchg
dec
push
cltd
dec
hlt
xchg
loope
mov
jmp
cs
insl
and
lahf
add
add
xchg
or
mov
bound
pop
lds
adc
or
lcall
loop
mov
ret
mov
jmp
push
xchg
push
push
and
loope
inc
add
push
ja
dec
gs
pop
jns
pushf
sbb
inc
lock
or
inc
pop
mov
pop
nop
int
test
push
xor
or
or
pop
pop
push
push
pusha
pop
lret
cs
xor
mov
movsl
ljmp
jnp
add
push
xor
cs
jecxz
inc
inc
jae
and
dec
push
into
dec
xor
or
push
or
pop
icebp
arpl
inc
adc
repnz
in
hlt
and
xchg
and
mull
and
cld
call
sti
dec
aad
mov
fs
sbb
adc
adc
push
icebp
adc
and
pop
cmpsl
jno
cltd
addr16
add
jae
push
outsl
cmp
fisttpl
insb
lods
sbb
add
orl
lahf
pop
push
mov
aas
and
add
repz
adc
dec
es
sbb
push
pusha
and
mov
fs
pop
test
lock
mov
out
data16
xor
add
das
jle
test
ret
push
lods
sub
mov
pop
and
repnz
jbe
mov
jbe
mov
adc
ror
lock
in
and
jb
mull
popf
sub
add
enter
iret
push
sub
add
icebp
daa
xchg
enter
add
cmpsl
loop
xor
add
in
jae
push
mov
add
pop
ljmp
mov
add
push
loopne
add
repnz
jns
jecxz
enter
in
push
cmp
sub
pusha
sub
arpl
lret
push
iret
add
push
aad
sbb
cld
cwtl
sub
mov
pop
mov
mov
sbb
push
jp
mov
jl
repnz
push
or
orl
scas
push
push
sbb
mov
gs
jge
adc
and
pop
mov
push
sbb
into
das
or
daa
js
add
test
les
scas
sub
or
add
inc
test
jnp
xor
jne
sbb
xchg
pop
mov
add
inc
inc
pop
jno
sarb
shll
sbb
inc
mov
adc
je
test
lret
scas
std
add
mov
stos
push
nop
test
adc
jo
test
jnp
or
rsqrtps
test
add
int3
dec
fadds
pop
adc
xchg
das
dec
add
scas
jnp
or
add
pop
pop
andb
xchg
inc
sub
mov
repz
loopne
data16
add
xor
xchg
xor
dec
cmpsb
cwtl
pop
lcall
adc
js
aad
int
dec
enter
jl
ljmp
jle
add
mov
lahf
sub
push
js
movb
leave
mov
inc
jl
add
add
or
mov
popa
je
ja
jbe
add
jmp
mov
dec
loopne
aad
jns
add
pop
xor
dec
sub
or
ljmp
shlb
out
aam
mulb
cmp
loop
push
mov
testb
sbb
pop
sbb
in
pop
inc
xchg
xorl
enter
pop
and
data16
clc
jno
dec
or
cmp
popf
fs
lea
ljmp
cwtl
leave
push
mov
pop
add
out
shl
xor
jne
loopne
aad
cwtl
xor
dec
loopne
add
add
mov
imul
push
in
sarl
sub
loopne
andb
ds
inc
add
adc
test
les
mov
rolb
movsb
scas
xor
std
and
and
addr16
pop
mov
add
mov
sti
fstps
add
cltd
test
push
or
loopne
clc
pusha
mov
jmp
roll
push
jo
cmp
mov
pop
xor
mov
mov
push
dec
mov
xor
popf
jns
mov
pop
sbb
in
rcrb
enter
pushf
add
xchg
pop
in
add
sub
pop
mov
ljmp
sub
lea
pop
xchg
push
adc
adc
imul
add
sahf
xor
andb
out
or
xor
jge
mov
out
jl
add
mov
test
fnstsw
jg
sbb
insl
cmpsl
or
scas
movsbl
add
mov
jmp
push
mov
dec
xchg
cmp
das
pop
pusha
xchg
addl
cld
daa
add
repnz
mov
dec
jb
push
imul
xor
pop
sbb
insb
test
add
jp
test
addb
inc
mov
stc
popf
rcrl
cld
jb
pop
pop
nop
mov
popa
xchg
ja
mov
xor
add
mov
gs
add
add
mov
jecxz
sub
and
dec
dec
mov
adcl
aaa
sbb
cmp
gs
cmc
sbb
mov
add
mov
jbe
subb
push
mov
ds
or
jecxz
jnp
pop
int3
xor
mov
push
adc
cld
ret
inc
push
mov
mov
add
fdivrl
mov
inc
add
xchg
jno
inc
dec
rorb
or
xchg
das
loopne
xchg
rol
arpl
dec
ret
mov
les
js
lret
cmp
cli
movsl
xor
cld
mov
in
clc
ret
and
rolb
or
add
xor
lcall
fs
jno
pop
pop
jle
adc
and
sbb
jo
xlat
xorl
cli
outsb
inc
add
cmp
add
jg
js
or
xor
pop
jle
int3
cmp
jb
dec
daa
mov
add
push
mov
add
repz
dec
add
enter
outsl
cmpb
mov
push
dec
add
lods
stc
jne
fadds
xor
in
or
ss
jbe
imul
mov
jae
pop
dec
iret
unpckhps
sbb
pusha
mov
loope
mov
ds
jo
cmpsb
add
imul
sub
sbb
xchg
clc
sbb
jl
push
shlb
lcall
dec
in
pop
add
lds
jle
sub
cli
insb
add
bound
les
mov
jmp
pop
inc
and
add
repz
mov
mov
arpl
stos
or
inc
sub
jmp
notb
jne
mov
test
add
test
je
adc
sub
stc
mov
add
jo
mov
jne
jecxz
push
ja
test
cmp
adc
inc
dec
test
inc
sub
xchg
mov
sbb
xchg
rorb
repz
inc
jge
add
ljmp
add
push
outsl
pusha
xor
in
cltd
lea
outsb
jecxz
loope
into
inc
cmp
xchg
sti
sbb
mov
add
lcall
dec
add
adcb
jbe
repz
sti
xchg
movb
lret
sti
add
and
cwtl
out
mov
pusha
xchg
sbb
sub
outsb
adc
add
jp
sbb
pop
mov
ss
psubusb
cmp
or
lcall
dec
jg
mov
jbe,pn
mov
cmpsb
loop
fsubrl
sub
in
popf
dec
adcl
es
add
cmp
insb
pop
mov
or
in
push
add
ficoms
push
inc
xor
sti
dec
clc
shll
add
clc
pop
dec
enter
rorl
xorb
and
int
hlt
jne
leave
pop
mov
out
aaa
shlb
add
mov
or
pop
xor
iret
and
lds
pop
and
cs
mov
roll
imul
push
and
stos
dec
leave
xor
add
pop
lahf
pop
pop
jae
mov
clc
pusha
data16
mov
jmp
add
push
imul
fiaddl
mov
cltd
lahf
push
add
imul
ret
jmp
or
mov
rolb
xor
lcall
sub
aam
push
mov
mov
jecxz
add
cmp
add
and
jmp
and
push
mov
lret
daa
enter
repz
pop
mov
jp
pusha
dec
mov
or
push
movsb
fadds
sub
add
jne
add
lea
inc
movsl
push
insb
rclb
arpl
mov
daa
int3
adc
daa
jbe
sahf
adc
cmp
test
or
add
imul
dec
jae
push
xor
pop
testb
adc
adc
xor
add
xor
subb
stc
add
into
dec
mov
loopne
stos
insb
fiaddl
add
movsl
adc
loopne
and
je
adc
add
push
pop
addr16
xor
sub
mov
jo
out
inc
nop
test
popa
sbb
sub
gs
stos
loopne
imul
out
cwtl
outsl
incb
xchg
divb
and
aad
push
and
mov
add
ljmp
das
and
pop
mov
xor
xorl
pop
shlb
xlat
sub
icebp
insl
pop
add
inc
push
add
movsb
int3
jmp
add
cmc
xchg
jb
add
sub
mov
ret
mov
add
movsb
or
das
bound
cltd
imul
cmp
push
jae
cld
sbb
xorb
add
push
sub
ror
mov
fwait
sub
jnp
pop
pop
jbe
add
pop
mov
test
cmc
mov
enter
mov
jno
sti
leave
aaa
cmp
aas
add
add
into
mov
rorl
aam
cmpsb
mov
cli
jg
pop
jbe
adc
jp
dec
add
popa
inc
cmp
jecxz
arpl
mov
mov
rcrl
cld
push
lods
add
push
cmpb
mov
add
cwtl
aam
hlt
push
les
aas
jg
or
enter
mov
cwtl
sbb
roll
gs
inc
add
nop
lret
or
sbb
adc
and
and
movsb
add
stos
adc
into
shl
pop
inc
loopne
scas
pop
add
add
xchg
lret
inc
lods
sbb
push
inc
sbb
add
aaa
jecxz
or
xlat
mov
xor
mov
shlb
repz
divl
jne
pop
jp
or
push
add
add
push
jbe
imul
push
add
push
push
inc
incb
or
xchg
jne
dec
xchg
cmpb
dec
cmp
cltd
mov
xchg
dec
add
mov
push
push
add
scas
insb
in
dec
add
push
dec
roll
mov
aad
mov
mov
xchg
arpl
mov
cmpsb
sarb
inc
mov
rcl
rcll
add
stc
sbb
adc
out
dec
jge
iret
mov
cmp
add
sbb
xchg
add
pop
pop
stos
imul
lock
andl
pusha
imul
add
mov
fiaddl
jmp
dec
sbb
cmc
add
daa
aam
cmp
and
scas
push
roll
fcomip
add
mov
add
mov
das
xchg
divl
xor
lcall
push
sbb
pop
lret
push
xchg
into
arpl
mov
and
je
push
xor
or
mov
add
icebp
or
iret
js
mov
adc
mov
aas
mov
and
popf
or
xlat
aas
ss
nop
pop
or
and
add
cmp
lock
inc
or
mov
pop
roll
or
sub
ja
adc
push
add
or
pop
xor
popa
out
fcmovnu
call
int3
scas
or
or
pop
jne
add
sarl
into
inc
xchg
push
fistps
movsb
idivb
push
in
adc
adc
dec
add
jg
push
jo
xchg
ret
sub
int
fmulp
test
and
add
sbb
mov
outsb
add
out
mov
mov
add
sbbb
xor
cmp
mov
es
pusha
loopnew
imul
and
add
xchg
pop
mov
stos
and
fldt
ret
lock
jo
mov
js
dec
mov
pop
mov
mov
ret
add
pop
inc
add
xchg
push
mov
ret
add
cmpsb
loopne
test
sub
ljmp
orb
repz
or
inc
cmc
add
pop
or
push
mov
in
cmp
popf
rcrl
pop
aas
arpl
mov
rolb
icebp
mov
push
jns
inc
cmp
dec
push
test
sbb
in
fiaddl
add
jg
cmp
and
movsb
xchg
pop
xchg
ljmp
sahf
jle
roll
nop
mov
inc
ret
mov
stos
push
add
cli
icebp
mov
outsl
add
mov
mov
sub
dec
or
mov
cmc
pushf
ror
xchg
jl
jae
popa
add
test
pop
sbb
rcrl
cli
je
push
add
loop
xor
mov
push
adc
push
jg
in
jb
mov
clc
and
mov
jcxz
mov
push
leave
xchg
push
mov
xchg
lock
call
sub
xorl
std
pop
xchg
add
or
sub
push
jno
sbb
sahf
lock
das
mov
fiadds
and
mov
out
sub
repz
sarb
sti
bound
int
jnp
mov
fstps
adc
das
orb
push
mov
leave
push
dec
imul
out
add
out
das
jnp
fwait
jge
cld
pop
push
ffree
add
add
dec
jecxz
aas
outsl
pusha
adc
add
frstor
popa
jno
adcb
dec
lret
inc
pop
xchg
xor
xchg
sbb
sub
outsl
add
subb
mov
xchg
jae
je
aas
fxtract
out
js
dec
stos
lahf
in
sub
or
push
daa
je
ret
inc
jp
mov
push
movl
pop
std
xor
sahf
or
movsl
insb
repnz
mov
fnsave
mov
vxorps
cmpsb
push
js
enter
fldenv
or
in
add
imul
xchg
or
inc
les
pop
daa
add
inc
nopl
mov
push
inc
mov
lret
paddw
notb
xor
mov
mov
cmp
adc
jmp
xor
xchg
or
cli
out
cmp
dec
iret
add
sbb
testl
int
leave
mov
sbb
sarb
enter
inc
add
mov
inc
es
or
addl
dec
mov
sti
into
aam
pop
cwtl
jns
in
insb
lret
lret
xor
cmp
add
push
rcll
mov
add
test
adc
mov
mov
add
and
cld
dec
sbb
repz
sub
rolb
addb
sbb
mov
xlat
out
and
stos
and
popf
cmp
sar
pop
int3
dec
int
pop
and
adc
push
aaa
pop
ds
arpl
cs
or
lcall
jnp
les
sbb
adc
add
jl
pop
xor
push
stc
mov
adc
loope
jno
es
add
push
enter
sbb
fldl
add
pushf
and
add
pop
pop
out
pop
mov
fadds
inc
jl
xor
sahf
and
rorb
loop
rorb
test
aad
cmp
lods
rcrl
pop
aam
int3
sbb
mov
adc
jle
cld
lret
push
enter
pop
dec
test
inc
add
pop
mov
xor
int3
shlb
fiaddl
add
enter
lret
arpl
es
add
enter
mov
add
sbbl
jns
sarl
xchg
arpl
jecxz
xor
lock
data16
pop
pop
add
sub
and
add
lret
pop
data16
jb
cpuid
push
es
popa
cmp
cmp
add
cmpsl
push
andb
loope
loop
push
stc
jge
mov
pop
cmp
sarl
loopne
sar
add
in
push
and
icebp
cmp
or
push
adc
mov
sbb
outsl
cmpsl
xlat
sub
pop
sub
or
popf
xor
adcl
add
aaa
xchg
rorb
or
add
push
pop
loop
sub
and
mov
call
push
in
xor
mov
pop
mov
mov
jl
shlb
push
xchg
sub
test
mov
int
popa
sbb
xchg
xor
push
adc
adc
orb
dec
outsl
rcr
jno
rolb
xchg
inc
add
xchg
inc
pop
repnz
push
push
mov
or
sbb
ljmp
cmp
leave
adc
aam
and
and
bound
pusha
xor
inc
sbb
xor
add
jbe
repz
mulb
dec
mov
mov
add
and
out
inc
or
test
add
in
call
loope
push
dec
in
sub
dec
stos
sbb
dec
out
mov
sub
jnp
add
xchg
dec
dec
xchg
sbb
push
popf
adc
xchg
cmp
jb
inc
icebp
es
pusha
repz
jnp
shlb
push
mov
add
cmp
adc
mov
stos
icebp
dec
mov
add
add
or
addl
shrl
jmp
ss
popf
add
add
and
imul
jae
sub
sbb
loopne
sarl
add
add
inc
aad
add
in
aaa
gs
and
cs
ret
imull
mov
lods
cmp
gs
add
mov
in
mov
cmp
std
pusha
xor
jge
enter
pop
ret
in
adc
sbb
or
jo
data16
lret
mov
mov
stos
adc
or
push
lds
mov
sub
push
cmpsb
in
pop
aad
sub
add
xchg
cli
fs
imul
ja
xchg
adc
jge
ss
repnz
mov
xchg
lret
movb
sbb
in
push
dec
vsqrtps
mov
repnz
sub
sbb
adc
xchg
add
loope
dec
addr16
jno
pop
or
notl
jnp
xchg
inc
pop
lea
das
sbb
cmpb
lock
mov
add
sbb
loope
sbb
ret
cmp
fsubrs
addb
lcall
fisubrs
lock
jmp
orl
out
add
imul
mov
mov
mov
pop
sub
xor
outsl
movsl
sbb
inc
in
loopne
fsubrs
repnz
pop
pop
fiadds
xchg
mov
xor
jnp
adc
fidivrs
ja
pop
outsl
das
inc
jecxz
andl
dec
add
icebp
ds
lods
add
pop
mov
sarl
mov
or
push
xor
mov
add
insl
bound
add
loopne
jne
push
push
cs
addl
rcrb
add
xchg
repz
mov
movsb
xchg
xor
in
mov
pop
adc
js
ljmp
mov
adc
subb
mov
lds
mov
data16
jecxz
jg
int3
dec
test
lock
pushf
into
or
add
je
inc
flds
mov
add
and
ja
mov
add
jg
rcrb
pop
or
inc
and
in
scas
fadd
adc
icebp
mov
inc
xor
dec
and
aam
test
add
pop
mov
lahf
add
jecxz
call
jns
and
ret
add
out
scas
push
jecxz
data16
ss
and
ret
adc
add
inc
mov
pop
cli
jae
pop
roll
mov
jnp
mov
jmp
popf
rcrl
dec
mov
loopne
es
aaa
adc
aas
adc
test
rcll
mov
add
jae
xchg
sub
movsb
add
outsl
or
hlt
mov
xor
leave
lds
negb
pusha
into
cmp
je
test
dec
insl
cmp
or
subb
pushf
sub
dec
inc
mov
sbb
sti
jg
adcl
cld
lret
mov
inc
shlb
je
pop
test
add
inc
xchg
cmp
jae
pop
jno
xor
shl
or
cmp
outsb
or
cmp
mov
mov
add
mov
push
test
js
dec
scas
mov
inc
mov
lret
loopne
arpl
xchg
jns
mov
fimull
pusha
and
add
icebp
jb
loope
sbb
mov
push
mov
arpl
xchg
dec
icebp
ret
push
lods
cmpb
outsb
leave
add
sarl
adc
testl
push
mov
cmpsb
pop
cmpsl
jmp
rolb
inc
adc
aas
mov
xor
pop
adc
jns
lret
int3
adc
sbb
xor
xorl
enter
loopne
sbb
mov
inc
das
ret
sub
xchg
lock
shll
outsl
pusha
aad
dec
lods
xor
fsub
scas
add
lock
cmp
or
push
and
mov
pusha
lods
popa
ja
mov
rcrb
push
adc
xor
stc
jge
push
ret
xor
pushf
add
jo
das
add
or
or
jbe
inc
add
add
or
jae
push
pop
mov
ds
shlb
xor
mov
push
in
pop
pop
xor
test
shl
add
out
lea
rorb
sbb
xor
cs
cmp
sbb
or
xor
add
inc
stos
adc
xchg
dec
arpl
xchg
sbb
cmp
mov
add
loopnew
mov
or
and
loopne
add
adc
shl
inc
adc
jno
sarb
loope
xor
and
rolb
inc
iret
or
dec
pop
repnz
daa
ljmp
repnz
mov
cltd
inc
sarl
pop
sub
imul
cwtl
jo
cmc
movsb
int
mov
cmpsl
sbb
aaa
xchg
or
dec
xor
dec
or
rclb
adc
loope
movsb
daa
sahf
sub
pop
mov
fidivrs
dec
out
add
add
imul
psllq
cmp
sti
pop
arpl
cwtl
gs
in
jo
push
add
adc
push
aaa
inc
mov
stos
pop
rolb
shll
mov
or
in
mov
push
add
sub
adc
and
imul
push
adc
xchg
inc
add
sub
jae
jmp
pop
mov
loopne
jbe
xchg
lahf
add
dec
xchg
jb
and
outsl
inc
sub
mov
lahf
stc
and
add
hlt
ljmp
mov
mov
push
sub
push
mov
fbstp
icebp
pop
jbe
pop
push
cmp
or
pop
jmp
push
jmp
or
cmp
mov
dec
add
lret
mov
push
add
push
inc
lock
sbb
dec
ss
dec
mov
add
push
xor
jge
ret
and
add
pop
das
add
cmpsb
nop
adc
pop
mov
ljmp
inc
cli
pop
add
gs
and
out
jbe
or
inc
push
cs
rol
dec
xchg
dec
lds
mov
out
and
mov
and
adc
lahf
add
enter
into
xchg
add
scas
lcall
sbb
movsb
lds
push
jle
scas
pop
jmp
push
mov
pop
pop
shl
add
shld
inc
scas
popa
mov
pusha
xor
pushl
add
pop
jge
sbb
out
gs
loope
mov
lock
pop
xchg
pop
inc
sbb
mov
inc
mov
mov
jae
jg
jae
jmp
push
sbb
jp
push
pop
dec
jne
pusha
add
pusha
sub
fwait
inc
aas
lcall
mov
sub
negl
jmp
mov
pop
mov
loopne
xor
adc
mov
mov
xchg
loop
add
adc
jno
daa
pusha
data16
loop
inc
pusha
and
xor
push
or
add
add
cmp
fsts
xor
or
inc
mov
sbb
leave
std
and
or
sub
sub
dec
dec
xchg
push
adc
mov
ljmp
rclb
js
daa
bound
fldl
pop
adcl
fisttpl
mov
mov
dec
int
pop
adc
fwait
inc
test
push
mov
cmp
in
filds
jnp
fidivrs
pop
sahf
inc
or
sbb
inc
jb
loope
inc
push
movsl
xor
loop
adc
mov
in
loope
mov
out
push
cmp
sub
mov
lock
adc
icebp
cmp
std
jbe
psubq
pop
arpl
sbb
call
loope
sbb
xchg
rorb
out
int
andl
arpl
mov
inc
and
jnp
adc
add
inc
cs
lock
inc
mov
cltd
add
shl
cwtl
jp
cmp
icebp
aaa
dec
cmp
arpl
adc
ret
push
add
mov
and
aaa
cmpsb
xchg
mov
rclb
in
or
pusha
rcl
nopl
hlt
push
call
lea
add
jmp
mov
push
jl
pop
push
ret
mov
dec
shrb
je
cmpsb
xchg
push
pop
jbe
push
mov
mov
pop
pushf
add
in
inc
jp
js
jne
sbb
xor
jbe
testb
lods
add
out
jp
je
inc
jmp
xchg
and
pop
je
cmp
in
add
fs
jns
outsb
loop
and
out
pop
rclb
sbb
mov
rclb
ja
sub
push
xor
jno
sbb
add
pop
add
and
lock
test
pop
adc
dec
add
or
jg
outsl
les
xchg
pop
xor
adc
lahf
push
pushf
sbb
cmp
in
or
sub
dec
add
and
add
int3
icebp
sub
pop
pop
or
rorl
xor
loopne
movsl
scas
dec
pop
les
fcompl
in
sub
or
pop
int3
push
pop
jns
mov
pop
and
fists
dec
cmp
and
mov
pop
fisttpll
pxor
and
mov
adc
shrb
insb
loopne
or
stos
adc
sbb
js
dec
inc
in
ret
adc
xchg
adc
fcmovu
or
xchg
fistl
nop
cld
cwtl
mov
add
sbb
rorl
cmp
int
adc
jge
add
fistps
popf
adc
jmp
lcall
data16
fiaddl
jae
sbbb
adcl
pop
or
dec
cmp
xchg
mov
cmp
rcr
add
xor
dec
loopne
xor
stos
es
out
inc
mov
popa
insb
push
push
pop
into
dec
mov
loopne
push
or
inc
sub
add
cltd
aas
mov
and
xchg
cltd
or
or
orl
mov
arpl
jns
test
outsb
and
inc
mov
enter
xchg
adc
ljmp
lahf
sub
fmuls
popl
xchg
inc
inc
xor
scas
subb
or
cmc
cmp
mov
andl
push
inc
dec
rolb
sbb
cwtl
test
movsl
pushf
inc
aam
mov
xchg
mov
or
inc
push
xchg
inc
cmp
sub
test
test
das
dec
out
insl
xor
lret
xor
in
push
in
mov
or
jmp
aam
insb
bound
repnz
cwtl
faddl
ret
or
test
or
mov
enter
aaa
lret
loope
inc
adcb
rcll
lcall
and
sbb
notb
pusha
adc
cwtl
cmp
dec
repnz
and
mov
outsl
movsb
push
iret
repnz
je
cmp
repnz
inc
sbb
jo
inc
mov
roll
sub
shrb
dec
aas
xchg
lret
sub
add
push
sbbl
push
sbb
ss
sbb
xor
jno
mov
test
clc
sub
dec
cli
movsb
jns
add
add
jo
roll
lret
cmp
sbb
add
add
push
push
add
aas
das
les
mov
inc
fadds
xlat
sub
fsubl
sub
mov
cld
jno
adc
add
xchg
inc
push
jmp
ret
and
add
mov
and
adc
test
cli
test
add
xor
and
jo
out
mov
pop
je
lock
pusha
sbb
xor
adc
js
test
add
cs
add
xor
nop
int3
lret
scas
pop
dec
push
int
out
jb
add
jl
movl
sbb
popf
jae
lock
clc
push
add
mov
mov
sub
fs
cmp
cmc
lock
shlb
imul
mov
clc
and
js
add
outsb
and
andl
movsb
mov
xor
iret
js
rolb
push
or
push
add
js
add
fs
and
mov
loopne
pop
adc
fiadds
mov
sub
mov
add
imul
mov
mov
inc
push
cmc
cmp
into
mov
add
lahf
cld
enter
pop
adc
aas
movntq
lock
cmp
push
fnstcw
js
insl
adc
mov
roll
repz
mov
fwait
out
push
and
sbb
popa
stc
imul
mov
into
sbb
cmp
adc
out
pop
fimuls
sti
mov
inc
sbb
mov
add
mull
mov
test
jne
add
mov
imul
ret
push
call
cmp
pop
sahf
out
add
mov
in
cmp
dec
dec
mov
pop
imul
xor
lods
xor
add
xchg
mov
add
cli
dec
pop
mov
fwait
loopne
out
cwtl
add
sub
xor
or
inc
pop
mov
push
push
add
or
cwtl
iret
xor
stos
arpl
imul
mov
mull
or
js,pn
push
add
jno
pusha
clc
mov
std
aad
pop
push
addb
insb
add
cmp
nop
add
pop
shrb
add
movsl
imul
fistpl
dec
lret
shl
pop
add
in
leave
sbb
addb
sub
andl
jg
or
inc
or
lods
cmp
mulb
add
xchg
sub
mov
call
dec
ja
push
or
xor
xlat
cmp
xorl
pop
addr16
or
xlat
nop
add
mov
inc
inc
mov
add
aam
mov
add
out
ja
in
sub
xchg
inc
cmc
push
pusha
push
outsl
add
sti
dec
test
mul
push
xchg
add
insb
mov
and
adc
cmp
in
xor
push
and
pusha
xchg
pop
inc
faddp
cmpsl
sbb
mull
xor
jge
clc
add
xor
push
loopne
mov
add
inc
xor
insl
popl
jnp
pusha
mov
push
pop
pminub
pop
hlt
sub
das
neg
pop
add
cmpsl
enter
mov
jne
aad
std
lret
mov
add
ljmp
and
inc
sbb
aaa
pop
or
cmpsl
clc
fstpt
imul
xor
push
add
xlat
mov
add
sub
lods
or
inc
pusha
faddl
stos
cltd
rcrl
fisubrl
subb
push
mov
push
fiaddl
cld
mov
jb
sub
repz
add
xlat
test
push
gs
inc
push
add
jge
sahf
cmp
jo
add
data16
in
adc
cmp
or
push
shlb
jle
leave
test
inc
mov
scas
dec
sbb
add
add
pop
add
lahf
in
inc
scas
pop
sbb
mov
lods
lds
sub
jnp
adc
sahf
dec
mov
lahf
call
add
xchg
mov
inc
movsb
pop
jae
aad
ds
add
or
je
cmp
test
pop
dec
lret
add
mov
jns
lock
add
xchg
push
lods
std
icebp
jge
jae
repz
rclb
cld
fidivl
movsl
pop
jmp
int3
or
sbb
das
sbb
shll
pusha
push
push
lds
loop
jle
adc
notb
xchg
rcrl
add
push
pop
loope
ffree
cmc
dec
sar
popa
stos
mov
roll
push
enter
aam
sarb
xchg
lretw
je
mov
jbe
adc
mov
inc
add
xchg
jnp
jge
jne
add
and
or
loop
or
jo
inc
outsb
fisubrl
mov
xchg
pop
mov
sbb
ret
sbb
das
ljmp
inc
lock
or
or
repnz
jmp
sbb
jle
add
call
inc
add
mov
sbb
pop
sti
add
into
in
dec
jge
pusha
iret
push
pop
ret
add
or
or
mov
loope
jl
rolb
movsl
js
add
jno
pop
in
dec
dec
imul
sti
out
inc
scas
jle
pop
fidivs
add
cld
mov
adc
nop
pusha
popf
inc
outsl
dec
arpl
ja
pop
hlt
lock
in
out
xor
stos
stc
mov
iret
pop
mov
and
in
aaa
cmp
mov
inc
push
adc
xor
scas
jp
add
sbb
test
and
inc
and
push
popa
sbb
sbb
xor
xchg
add
test
jne
mov
movsl
addl
js
jl
jl
cld
cmpsl
push
test
and
or
adc
icebp
or
mov
mov
xorb
dec
xor
adc
sbb
mov
ja
pop
sbb
ljmp
xchg
pusha
or
cli
push
dec
or
out
stos
lret
or
cmp
sub
dec
repnz
inc
jmp
add
or
mov
push
jb
into
sbb
loop
inc
pop
mov
fsubrp
pusha
outsl
repnz
arpl
inc
lods
add
adcl
shlb
std
ficoml
and
fistps
push
push
gs
push
mov
or
add
add
fiaddl
add
arpl
shl
push
xor
or
shl
aas
sbb
popa
scas
push
aaa
test
repnz
xchg
mov
mov
ds
inc
and
ja
dec
shl
add
pop
orl
add
adc
add
and
add
mov
mov
int
mov
nop
jne
inc
and
jmp
push
sub
sub
xlat
in
inc
mov
imul
lods
push
inc
je
jae
xchg
pop
adc
je
jp
xor
xor
inc
aaa
in
fbld
orb
sbb
sub
sub
fiaddl
mov
shlb
inc
dec
pusha
test
push
mov
insl
inc
rorb
xchg
dec
loopne
or
imul
sar
push
enter
insl
add
iret
push
je
stos
inc
incb
xchg
into
mov
sbb
sub
mull
push
sbb
shll
dec
movsl
sbb
or
add
ljmp
add
mov
xchg
popa
add
push
divb
and
ljmp
push
add
mov
std
fiadds
adc
fwait
ljmp
xorb
dec
and
pop
test
out
add
sbb
jl
jl
or
dec
xor
outsl
or
cmp
stos
cmpl
rorb
jo
sbb
ljmp
jl
inc
jl
aas
inc
mov
arpl
mov
sbb
push
add
and
xor
movl
sbb
inc
add
js
aam
out
jmp
push
idiv
sbb
cmp
test
outsb
test
mov
add
lods
and
and
dec
add
aaa
lea
jmp
ljmp
sub
fs
cwtl
ficomps
adc
add
or
jae
add
mov
mov
dec
dec
inc
push
iret
addb
push
add
int
pusha
faddp
mov
sub
hlt
add
and
push
or
mov
fcoml
add
les
mov
or
or
das
out
rclb
adc
cwtl
xor
mov
loopne
mov
dec
mov
or
dec
adc
push
stos
mov
sarb
push
xor
and
inc
jl
inc
rolb
jl
es
xor
pushf
lock
scas
push
les
and
push
or
sub
sbb
or
mov
push
and
dec
pop
xchg
pop
and
push
push
mov
pop
and
dec
popa
xchg
bound
jnp
jl
out
mov
and
mov
jmp
test
or
int
cmc
call
jmp
loope
jmp
int3
add
pop
push
jb
jecxz
mov
push
icebp
lahf
inc
mov
or
add
js
out
jmp
rcrl
or
add
decb
ss
sbb
jl
leave
scas
push
stos
cmp
sbb
mov
sbb
fcompl
adc
or
sbbb
add
pop
shrb
out
push
aad
sub
add
inc
stos
iret
xchg
cmp
xor
sbb
testb
ret
mov
or
jmp
in
ds
add
inc
int
mov
lret
ret
in
sbb
scas
sub
stos
pusha
jno
test
mov
int
jmp
fnstsw
add
in
iret
mov
cmp
cmp
mov
add
jmp
mov
in
enter
cmp
mov
pop
cmp
inc
xor
inc
ljmp
js
jle
add
jno
dec
out
jns
sbb
rcrb
pop
inc
cli
popa
xorb
rcr
ret
add
pop
js
ljmp
popa
pop
and
and
jnp
addb
pop
jno
or
rclb
ss
and
pop
std
or
fsubr
xor
int3
xchg
push
ljmp
decb
jl
add
icebp
sub
lea
out
sbb
test
aad
aaa
lods
pop
sar
cltd
inc
add
icebp
imul
push
enter
shll
xchg
dec
mov
and
das
sbb
or
adc
and
push
int
lea
cmp
sbb
adc
and
sub
push
pusha
mov
sub
jno
mov
inc
xor
jns
push
subl
mov
inc
es
xchg
test
xor
aaa
add
fsubrl
xchg
and
int3
jo
push
jno
or
sub
jno
cmp
xor
jl
push
sbb
mov
push
push
lea
or
push
repz
jmp
dec
or
out
and
xor
popf
es
in
dec
inc
adc
std
orb
add
rcll
dec
out
push
lods
pop
adc
ret
cmpsl
dec
xchg
lret
and
bound
xchg
adc
scas
or
and
pop
testl
jl
xchg
xchg
adc
and
sub
pop
mov
clc
adc
test
icebp
popf
mov
adc
mov
lret
inc
mov
xchg
push
or
fnsave
les
push
popf
push
loope
sbbb
dec
daa
nop
xchg
or
add
push
and
dec
or
mov
and
lds
mov
jecxz
push
mov
pop
cwtl
mov
jno
into
add
sbb
add
test
lret
das
cltd
clc
inc
pop
mov
jo
add
imul
push
xor
mov
adc
xchg
inc
adc
int3
add
movsb
test
dec
out
dec
or
dec
pusha
movsb
testl
jecxz
xor
sbb
mov
imul
loopne
push
pmaxsw
ror
or
rcl
inc
pusha
mov
sub
int
pop
mov
jno
shr
mov
lods
mov
nop
das
mov
mov
inc
roll
add
inc
dec
cmpl
mov
xor
js
push
inc
sbb
xor
into
cmp
push
lahf
inc
fnstsw
xchg
movsb
inc
mov
xchg
sbb
sub
ret
push
push
jle
popa
ret
inc
mov
jg
add
push
fs
dec
cmp
push
je
lret
or
push
cmp
jp
lds
out
adc
add
and
mov
int
xor
lahf
push
clc
sub
faddl
pop
push
cmpb
rorb
add
shrl
add
call
popf
push
dec
pusha
mov
push
sub
lea
and
add
into
pop
out
and
stos
push
je
mov
pushf
pop
je
pop
jg
mov
xor
jl
out
add
fmuls
das
add
jmp
xor
rolb
dec
std
sbb
negl
inc
pop
in
jmp
clc
push
xlat
pop
dec
in
or
out
in
sbbb
pop
ds
inc
or
xor
or
cli
push
add
or
pop
cmp
pop
icebp
mov
xor
adc
pop
repz
out
sbb
push
inc
xchg
cmc
or
cmp
inc
cld
jnp
pop
out
pushf
inc
aas
mulb
cli
push
sbb
push
adc
jmp
or
notb
inc
sub
sti
adc
inc
push
jo
aas
pusha
repnz
hlt
inc
push
jbe
call
repz
stc
cwtl
sbb
add
push
shrb
push
ficomps
inc
xchg
popa
movsl
xor
cmp
neg
inc
add
popa
dec
test
xor
add
notl
notb
test
add
cmp
or
je
add
popa
push
lock
repz
stc
pusha
add
jmp
fstpl
repnz
add
std
inc
enter
shll
icebp
or
cmp
call
pop
inc
sub
aaa
and
add
call
and
in
push
cmp
inc
add
call
clc
into
and
lahf
dec
pop
sbb
or
mov
jl
repnz
adc
pcmpgtb
inc
repz
adc
and
jb
pop
push
sbb
addb
push
not
stc
cli
cld
test
pusha
push
pop
and
or
ds
dec
adc
imul
in
or
lock
or
es
jge
incl
into
lahf
xor
das
pushf
lods
hlt
mov
add
mov
jns
or
jb
movsl
mov
xor
and
movsb
mov
add
mov
lahf
sbb
and
shrb
mov
js
lahf
cmpl
pusha
jl
inc
pop
or
and
add
jns
test
addb
pop
decb
andl
rcll
adc
fsubp
mov
sbb
mov
push
addb
xor
rcrb
cmc
les
jne
iret
popa
sbb
pop
xchg
adc
shll
dec
or
shl
lds
inc
iret
stos
scas
fadds
xchg
mov
faddl
outsl
push
lahf
and
ret
or
pop
inc
or
aad
add
pfrcp
out
add
mov
mov
xor
sbb
movsl
add
pop
sbbb
dec
dec
call
rorl
pop
les
mov
movsl
lds
mov
pop
dec
xchg
sub
inc
mov
pop
nop
loopne
idivb
popa
imul
dec
int
lock
xchg
test
jb,pn
stos
orb
dec
push
cld
push
add
push
pop
sbb
xorb
mov
daa
xchg
arpl
and
nopl
sub
les
int
and
pop
imul
xlat
inc
movsb
sbb
inc
mov
icebp
or
lock
pusha
add
jle
xchg
mov
sbb
add
les
xor
xor
test
mov
js
mov
sbb
sbb
cmp
inc
add
aad
aas
mov
icebp
outsl
pop
xor
mov
lods
fildll
pop
dec
mov
movsb
mov
adc
dec
cmp
add
fwait
mov
int3
or
ds
addl
and
leave
fdivrs
xchg
inc
xchg
ds
pop
jbe
add
movsl
add
pop
fcmovu
add
pop
mov
enter
jo
and
push
dec
xchg
pop
add
mov
mov
xchg
sbb
shlb
and
add
in
add
ret
imulb
and
sbb
xlat
pop
xor
xchg
les
insl
es
push
push
rolb
cmpsb
adc
push
dec
add
xor
bound
rclb
pushf
and
dec
xlat
push
fwait
lods
sbb
or
es
jge
inc
mov
pop
add
add
loop
fiaddl
xchg
adc
addb
push
std
pop
jns
and
adc
ret
pop
je
adc
sub
inc
fmuls
push
dec
leave
fmulp
add
xchg
in
test
loopne
xchg
sbb
cmpsb
bound
mov
jge
adc
fcoms
aad
insl
xor
xor
outsb
sbb
mov
daa
mov
gs
es
xor
adc
out
rclb
fidivs
leave
iret
call
mov
cld
rorl
roll
out
test
dec
mov
jnp
leave
das
out
jne
sub
aam
loopne
push
andb
pop
andl
ret
popa
fdivs
fwait
sbb
dec
mov
cmp
mov
and
or
stc
lods
add
sbb
aas
adc
cs
mov
loopne
and
dec
enter
mov
sub
filds
call
mov
stc
xchg
jno
ljmp
jl
loop
xor
mov
ret
dec
sbb
add
adc
xchg
xor
lea
fdiv
add
pop
xor
xor
sahf
mov
mov
int3
and
ret
sbb
xchg
and
aad
add
movsb
out
aad
push
jle
cld
adc
xor
xchg
or
sbbb
and
pop
add
nop
arpl
sub
aam
adc
mov
mov
add
mov
adc
mov
and
push
test
and
push
fidivrl
cltd
mov
sbb
xchg
xchg
adc
add
ficoml
daa
cmpl
push
popa
jo
shrb
inc
sub
add
dec
jge
std
adc
outsl
or
int
push
loopne
sub
sbb
ret
out
jb
xchg
pop
xor
ret
xor
cs
sbb
jb
inc
pop
lods
pop
aam
sub
decb
shlb
lahf
xor
xchg
mov
jno
or
test
sarb
nop
and
sbb
jb
inc
add
mov
and
xchg
movsb
sbbb
insb
or
inc
sub
into
mov
mov
enter
cmc
inc
scas
ret
sbb
mov
sahf
test
adc
xchg
andb
or
pop
sub
stos
sub
int3
icebp
inc
and
adc
pushf
mov
sub
mull
lods
inc
enter
andb
pop
imul
into
pop
hlt
mov
sub
out
add
out
dec
xchg
mov
adc
aas
add
xor
test
int3
add
push
inc
sub
jno
adc
cmpsl
es
add
adc
orb
push
fstpl
test
adc
in
imul
adc
imul
les
les
and
and
sahf
mov
incl
nop
fcomps
push
mov
mov
cwtl
xorl
outsl
sarb
in
or
imul
test
clc
xchg
addb
xchg
pushf
rorb
add
rcl
push
jno
mov
mov
push
ljmp
adc
pusha
cld
ret
push
call
adc
push
call
adc
in
mov
cmp
hlt
mov
fnstsw
popa
dec
and
aad
call
adc
sub
mov
adc
push
push
cld
pusha
in
fcmovbe
cmp
adc
push
mov
es
enter
lret
pusha
or
push
and
push
adc
icebp
mov
orb
sbb
fpatan
sub
push
cmp
xchg
sarb
push
inc
pop
cs
andb
add
jo
scas
into
jb
add
pop
sbb
adc
popa
cmp
xlat
inc
xchg
add
mov
mov
in
mov
add
dec
mov
push
cmp
push
jae
subl
dec
shll
sbb
jns
mov
pop
or
repz
insl
xorb
movsl
pushl
push
lea
sub
rorb
leave
mov
adc
push
push
push
call
cmp
and
pusha
pop
and
ret
out
js
shlb
sbb
add
xchg
cli
mov
and
jo
cwtl
pop
sbb
mov
int3
gs
adcb
adc
mov
shll
bound
testb
xchg
xchg
orl
adc
or
add
roll
adc
jecxz
add
push
xor
push
mov
mov
enter
pop
ret
xchg
mov
inc
push
ret
mov
arpl
mov
inc
mov
xor
push
adc
add
inc
andb
roll
jne
push
mov
inc
xor
push
xor
mov
add
dec
dec
addl
adc
adc
sbb
sbb
ret
xchg
mov
mov
add
jno
movswl
cmpb
jp
test
xor
std
addr16
cmp
add
push
ds
mov
add
ds
push
cld
pushf
add
clc
stc
sbb
mov
xchg
sub
mov
add
mov
xor
sub
movsl
adc
mov
mov
popf
pop
pop
push
push
mov
data16
sub
mov
pusha
or
xor
int
popa
addl
sbb
jne
adc
and
push
hlt
or
mov
add
cltd
rorl
and
pop
adc
icebp
add
sbb
cmpsb
push
mov
rol
loope
inc
and
ret
fs
cmp
pop
or
test
push
jb
dec
aaa
clc
sub
and
xchg
inc
mov
mov
push
fnsave
push
cmp
cmc
mov
cmp
rcrb
test
push
mov
ret
and
inc
push
ret
jo
out
sbb
mov
pop
push
insb
inc
mov
aas
xor
dec
push
out
je
call
in
add
lods
call
push
or
add
cmc
lcall
sbb
out
mov
stos
enter
insl
inc
sub
orb
mov
sete
fcomps
and
add
cs
andb
mov
out
sub
test
add
movl
xchg
add
xlat
sbb
cltd
and
or
add
aam
pusha
xor
outsb
loop
dec
jae
adc
dec
sub
mov
sub
adc
rcll
or
cmp
and
into
rorl
popa
cli
fistl
xchg
jno
aas
psllq
mov
sarb
int
insb
jg
push
pop
mov
mov
jmp
test
xchg
daa
push
sbb
mov
ja
inc
out
insb
ret
push
mov
lock
popa
sbbl
cmpsb
sub
sbb
fldcw
test
jge
mov
sahf
fs
popa
pop
ret
enter
mov
enter
adc
and
jmp
or
dec
push
inc
adc
xchg
push
jl
ret
and
inc
push
ret
inc
lods
test
or
adc
dec
test
imul
adc
cwtl
mov
leave
push
add
sarl
imul
add
test
add
out
cwtl
jp
addr16
xor
sbb
jmp
inc
push
xor
push
fs
rorl
data16
add
push
mov
dec
cmp
sbb
cld
jle
test
adc
jg
push
das
or
adc
push
in
inc
ret
mov
pop
pop
fidivl
insl
add
push
jae
cli
lods
pop
or
mov
adc
and
out
lods
inc
and
push
vprotb
push
mov
les
loope
or
mov
push
out
out
cmp
push
mov
pop
pop
mov
cmp
add
ret
cli
xchg
popa
push
mov
mov
orl
xchg
adc
push
add
mov
add
fmuls
mov
cmp
orl
or
inc
jns
xchg
jo
pop
bnd
xor
sbb
mov
inc
test
gs
cld
and
fwait
and
xor
mov
hlt
push
mov
out
pusha
xor
pop
and
or
sbb
fs
sbb
pop
push
push
or
cld
outsb
pop
add
repnz
adc
xchg
cmp
mov
insb
sub
xor
ret
outsl
inc
pop
inc
add
sahf
cld
stos
test
call
mov
or
imulb
fdivs
arpl
shll
mov
xor
push
adc
ja
lods
push
cmp
and
add
inc
fucomip
fwait
cmp
mov
mov
fsts
enter
pop
in
insb
je
sbb
out
jle
aaa
mov
bound
cmp
pop
call
stc
lret
lret
xor
mov
push
add
popa
or
xor
pop
lret
and
hlt
sti
out
add
cmpsl
xchg
insb
loopne
mov
add
popa
or
sub
into
mov
sbb
fnstsw
in
add
and
pop
xor
jb
jmp
pop
cmc
pop
dec
and
push
fcmovne
mov
push
rcll
push
ds
pop
sbb
adc
imul
popf
push
test
push
andb
aaa
call
pop
mov
in
push
jle
shl
mov
jl
test
add
es
adc
sub
leave
dec
popa
dec
pop
pop
mov
stc
mov
add
mov
pop
adcl
inc
pop
inc
xlat
inc
lea
sbb
es
sbb
adc
xor
adc
enter
daa
mov
insl
adc
add
rcr
xor
add
inc
movlps
xchg
dec
adc
pop
dec
fstps
push
cmp
adc
pop
jl
cmp
ret
inc
scas
aad
mov
inc
lods
repnz
icebp
enter
and
cmp
cmc
pop
and
adc
add
inc
rcll
rcl
mov
ret
shlb
fcomi
or
push
or
jnp
aad
xchg
mov
mov
cmp
clc
rorb
dec
mov
xchg
xor
lcall
or
pop
jo
int
pusha
mov
fadds
in
push
pop
pop
inc
pop
sbb
add
movsl
mov
add
adc
mov
cmp
aad
adc
jne
mov
sub
push
jmp
dec
push
mov
orl
jne
adc
in
adc
push
scas
dec
or
loopne
rcrl
sub
xchg
popa
add
pop
add
jmp
mov
ja
es
shl
inc
mov
test
mov
push
push
pop
mov
mov
or
push
fadd
insb
mov
cmpl
movsb
mov
push
cmc
das
push
and
add
add
mov
and
push
jmp
cmpsl
pop
popa
into
mov
test
sahf
and
sbb
push
mov
sbb
flds
decb
into
ror
shl
xchg
xor
and
jnp
jl
adc
cmp
mov
out
in
jnp
bnd
push
nop
sbb
or
add
push
sub
pop
pop
push
xor
mov
add
mov
mov
dec
and
les
popf
sbb
stos
outsl
inc
push
pusha
pusha
imul
fsubrl
mov
adc
hlt
push
icebp
test
cmpsl
adc
imul
shrb
add
adc
loope
push
lock
pop
subb
and
cltd
fldenv
iret
cmp
pop
pop
add
xchg
mov
cmpsb
pop
jmp
sbb
clc
fidivrs
push
push
push
push
xor
into
xlat
mov
pusha
in
xchg
fmull
stos
adc
lea
xor
xchg
sub
or
rcl
cmp
jno
aad
xchg
push
mov
popa
dec
and
movsb
xor
and
test
scas
dec
scas
mov
in
dec
loope
xor
xchg
int
mov
mov
mov
in
dec
inc
pop
imul
or
xor
mov
sub
fiadds
test
pop
test
xor
lret
sub
cmp
mov
push
inc
pop
arpl
sub
cmovp
dec
aas
mov
add
insl
andl
addl
sub
or
mov
xor
fadd
and
cld
add
inc
jp
xchg
aaa
push
sbbb
jle
or
fbstp
dec
pop
pop
adc
repz
pop
mov
fwait
pop
inc
adc
sahf
popf
push
sti
add
mov
fistpll
adc
add
xchg
cli
mov
pusha
dec
clc
and
repnz
xor
nop
add
dec
loope
in
and
adc
lods
cmpsb
push
jo
pop
fnstenv
pop
pop
pop
popa
pop
fldt
push
test
lods
mov
mov
add
aaa
dec
sbb
jno
loopne
clc
xor
or
aad
sbb
dec
xchg
dec
xor
les
push
andb
mov
or
adc
and
js
xchg
fsubl
mov
add
pop
pop
pusha
pusha
shll
mov
popf
lods
inc
rclb
mov
jno
jmp
enter
mov
hlt
lods
xchg
lahf
mov
pop
dec
pop
or
roll
or
adc
ljmp
pop
add
push
addb
add
pusha
and
ret
imul
iret
push
mov
roll
mov
xor
je
repz
mov
or
mov
es
dec
mov
fstps
sbb
add
in
fistps
xor
fadd
js
or
push
adc
pusha
xchg
mov
daa
cmp
pop
mov
call
jo
push
pop
and
jge
and
ss
inc
in
mov
mov
clc
jmp
out
xor
test
pushf
adcl
adc
jmp
dec
ret
out
push
popa
push
xlat
inc
mov
ja
cmc
or
pop
mov
in
add
mov
test
xchg
stos
das
xchg
inc
jne
js
jge
pop
inc
fcoms
ljmp
jmp
mov
sahf
add
cmp
lds
dec
cmp
fmulp
sub
xor
imul
stc
adc
dec
test
out
mov
les
adc
jb
repnz
xor
inc
sub
mov
jmp
ljmp
cwtl
cwtl
aaa
add
mov
add
rclb
mov
test
mov
clc
pop
pop
jmp
shl
and
out
outsb
in
fisttpll
movsl
sti
push
xchg
sub
mov
imul
gs
nop
dec
inc
cltd
inc
aad
pop
loope
adc
push
mov
and
das
mov
out
add
sbb
fsubrs
shll
lcall
dec
lods
outsb
jmp
hlt
pop
lods
adc
das
add
dec
aas
push
push
repnz
inc
or
jge
jno
cmpsb
push
adc
mov
repnz
mov
clc
add
or
mov
or
or
sbb
testb
lcall
jp
jle
or
and
xor
lods
mov
sbb
jmp
jo
loop
xchg
add
mov
xchg
sbb
pusha
add
enter
jnp
shrl
pop
inc
inc
adc
push
pop
shrb
sbb
fs
inc
sub
mov
sbb
pop
sbb
lahf
or
add
mov
enter
aam
jecxz
or
mov
dec
mov
popf
xchg
fucom
in
lret
shlb
mov
cmpsb
add
pop
nop
mov
push
js
push
es
ss
xchg
lea
add
add
loope
jnp
lods
cmpsb
xor
pusha
mov
mov
push
int
inc
loop
xor
xchg
cmp
lcall
sub
mov
dec
call
lret
sbb
lahf
add
cmp
cmp
add
inc
push
mov
mov
fs
cld
pushf
or
xor
pop
addb
movsb
cmp
test
push
aas
pop
imul
pusha
and
mov
pop
test
aaa
push
andl
mov
mov
pop
adc
xorl
and
add
or
sti
dec
sbb
sub
xor
and
call
pop
ja
add
cmp
dec
cli
sbb
push
xor
leave
inc
icebp
push
icebp
sbb
or
ret
jmp
ds
stos
mov
adcb
imul
into
loopne
ss
fnstenv
pusha
outsl
ja
outsb
add
enter
pop
data16
xor
push
add
add
repz
popa
inc
daa
iret
adc
movsl
test
mov
add
out
xlat
or
inc
filds
insb
decl
and
fs
ror
lea
popa
xor
inc
mov
sarl
nop
pusha
leave
lahf
negb
add
pushf
mov
lock
nopl
pusha
int
out
cmp
sub
sbb
dec
dec
add
pop
scas
mov
mov
pusha
mov
lea
popf
aaa
pop
add
sbb
repz
jnp
insl
flds
xchg
rolb
mov
dec
hlt
cmp
add
scas
inc
shlb
adc
inc
xchg
push
and
les
dec
push
rolb
clc
sbb
mov
dec
sub
dec
adc
mov
pop
lock
xchg
in
and
sarb
pop
dec
push
jnp
push
adc
push
pop
add
mov
mov
stos
push
adc
test
push
incb
add
in
js
cwtl
mov
lods
xor
out
loopne
iret
roll
and
pop
push
push
scas
xchg
pushf
and
inc
adc
out
pusha
xor
mov
sti
int
push
xchg
xchg
js
push
mov
pop
push
mov
movsb
ret
add
inc
adc
xor
cmpsl
push
add
ret
insb
scas
fcoml
test
incl
xor
lcall
orb
stc
jl
dec
mov
rclb
pop
or
add
or
add
fs
pusha
xchg
insl
nop
enter
gs
sub
ror
sbb
clc
lret
cmp
ret
jge
loop
or
adc
test
outsb
xchg
roll
mov
xorl
pusha
xor
sbb
push
sti
cmc
iret
add
fsubs
bound
dec
add
lret
jp
and
adc
notl
mov
mov
rclb
subb
sbb
lea
jecxz
cmc
sub
rcll
cmp
js
nop
mov
scas
pop
cld
mov
test
cs
gs
gs
mov
push
pushf
in
inc
fcoms
pop
xor
add
cmpsb
mov
hlt
mov
notl
inc
aas
loopne
in
cs
dec
add
dec
fs
dec
xchg
mov
xor
ret
fldcw
es
cmpsb
lock
cmp
fiaddl
mov
sub
pop
cltd
das
sub
push
es
or
sbb
mov
xchg
xchg
xor
mov
add
pop
lock
or
pop
add
pop
mov
and
sysret
pop
xchg
leave
sub
add
shrl
outsb
loopne
adc
sti
sbb
lret
sub
loope
sbb
lea
repnz
cmp
inc
imul
push
fbstp
leave
pusha
or
mov
xchg
push
outsl
push
xor
jns
add
daa
push
push
mov
mov
lcall
sahf
and
testl
insb
pop
push
mov
rorl
lds
faddl
mov
adc
jp
filds
adc
pusha
sub
popf
inc
xchg
popa
sbb
js
prefetch
xchg
leave
icebp
add
pop
add
scas
and
sar
and
stos
or
xor
movsl
xor
cld
pop
sbb
dec
inc
ret
es
sub
sbb
pop
sbb
jecxz
xchg
stos
fst
rcl
dec
dec
enter
jl
js
repnz
popf
idiv
jecxz
lret
dec
jns
add
adc
adc
push
adc
mov
mov
and
lea
in
pusha
and
sub
lds
mov
and
push
and
xlat
jno
or
popf
in
adc
dec
int
push
ja
test
adc
jns
cmp
mov
call
mov
add
mov
or
inc
pop
pop
bound
call
mov
repz
pop
in
jg
fnstcw
out
rcrb
mov
push
mov
push
andb
int3
cmp
shll
push
nop
mov
pop
add
or
mov
add
lods
ret
cwtl
push
sub
jb
call
push
and
mov
cld
es
sbb
or
push
adc
insb
aad
das
sbb
mov
and
call
pop
mov
ds
sbb
and
mov
data16
pop
pop
sbb
bound
ja
and
pop
jmp
nop
xchg
push
mov
adc
adc
sti
adc
and
cmp
mov
push
add
pop
fdivrs
jmp
bound
or
push
cmc
sub
push
inc
cmc
inc
pop
pop
stc
int3
cld
or
rcll
mov
add
xor
mov
orl
test
sbb
popf
push
outsl
outsl
add
mov
cwtl
icebp
cwtl
fisubs
out
inc
sbb
inc
je
dec
cli
les
fdivrs
cmp
pop
das
push
jle
movsb
add
pop
in
adc
ss
add
xchg
les
push
scas
dec
inc
pop
cmp
adcl
and
inc
sarl
xlat
cmp
mov
lahf
mov
add
or
inc
and
sub
int
insb
leave
xchg
test
mov
add
cwtl
pop
dec
mov
outsb
leave
insl
fisttpl
and
inc
jae
iret
addb
inc
add
movsl
stos
stc
pop
cwtl
mov
cmp
sbb
push
add
xchg
or
sub
loopne
and
or
or
cmp
pop
push
je
push
clts
sahf
jecxz
ret
push
xor
rclb
and
push
or
jl
push
sub
cs
dec
aaa
lock
adc
xchg
mov
add
push
fsubl
fnstcw
cltd
pop
lret
fsts
sub
pop
xor
push
and
sti
pusha
nop
mov
mov
jmp
fs
stc
jbe
in
lret
repz
loopne
mov
sub
jmp
xchg
inc
adc
dec
je
xor
or
repz
popf
jge
insl
pop
pop
pop
dec
and
xchg
jns
pop
push
sahf
icebp
fldl
pop
test
pop
cs
adcb
and
stos
xchg
mov
add
add
mov
popf
mov
lret
data16
mov
dec
jg
aaa
add
dec
sar
scas
or
pop
jbe
lar
inc
pusha
notl
pop
aaa
push
add
xor
push
sahf
test
in
les
xor
lahf
hlt
mov
outsb
push
xchg
mov
test
sbb
adcb
mov
push
test
sbb
idivb
xchg
lds
fwait
lods
sbb
cmp
add
inc
push
add
popa
es
fucomp
dec
mov
xor
jge
das
push
jecxz
sub
jne
addb
fs
mov
push
out
andb
mov
add
scas
sub
movl
inc
or
cmpps
add
add
mov
add
xor
mov
push
pop
or
inc
add
mull
cmp
jne,pn
cmpsb
data16
and
push
inc
or
jecxz
pop
adc
push
ret
shlb
lahf
jmp
xchg
jbe
mov
cmc
cmp
jge
mov
test
lds
xchg
ja
mov
push
cld
es
ret
xchg
push
je
cld
lret
sbbb
push
pop
nop
loopne
dec
mov
and
mov
jecxz
lret
push
mov
cmp
scas
mov
mov
add
inc
sbb
cltd
cs
mov
mov
push
push
add
xor
fstpt
push
bound
jae
mov
mov
cmpsl
incl
shll
jo
test
pushf
jbe
add
xchg
or
je
rorl
mov
sbb
lea
gs
test
adc
shlb
add
in
inc
mov
rolb
push
sbb
pop
hlt
mov
or
andl
add
ret
xor
pop
xor
and
pop
sub
inc
sbb
jl
mov
pop
dec
mov
leave
cmp
shrb
lret
inc
add
jmp
rorl
xchg
push
inc
clc
mov
cmpsl
add
mov
push
arpl
jmp
adc
ret
xchg
mov
cmpl
add
mov
xchg
xor
call
or
loopne
push
jne
add
fisubs
sub
mov
sbb
and
mov
popf
test
lret
push
popf
or
aaa
repnz
add
inc
inc
mov
mov
data16
inc
inc
cmp
jnp
pop
or
add
mov
out
scas
nop
or
mov
pop
mov
rolb
cmp
sub
sbb
scas
xchg
int
das
addl
xor
sbb
fdivs
mov
loopne
push
add
pushf
and
mov
sub
aam
sahf
jp
mov
jle
xor
inc
adcl
fldl
mov
xchg
mov
adc
sub
inc
jp
and
xor
inc
cmp
adc
test
and
jl
mov
mov
loopne
repz
add
push
mov
xchg
insl
mov
add
outsb
std
mov
xchg
push
shl
mov
push
ljmp
fsubr
and
insb
lahf
jae
daa
mov
cmc
mov
lock
inc
insb
hlt
mov
dec
push
fcmovnu
test
push
in
movsb
shr
jne
jp
lods
adc
add
add
out
push
dec
pop
out
add
pop
in
mov
imul
fstpt
push
dec
lock
xor
sahf
test
loopne
xor
in
in
cwtl
or
sbb
pop
in
adc
or
test
jnp
add
ja
jae
add
lret
out
pop
push
add
icebp
cmc
cmpsl
ror
cs
pop
ja
and
cmpsl
sub
push
fldz
insl
cmp
addr16
add
sub
and
lods
mov
jle
inc
xor
int
pop
push
sub
pop
push
andl
and
xchg
sbb
mov
mov
adc
mov
adc
mov
iret
add
pop
loope
add
pop
inc
add
inc
in
jo
sub
dec
add
notl
addr16
mov
arpl
gs
imul
in
jb
insl
popa
or
push
cmp
gs
arpl
je
repz
aad
mul
jae
data16
jmp
adc
ds
mov
xor
imul
es
addr16
inc
jae
fcoml
popa
jge
jge
jnp
aaa
or
sub
xorb
push
push
cmp
fldpi
js
inc
inc
xchg
fs
sbb
jnp
jns
or
call
sub
inc
inc
inc
ror
imul
sbb
popa
dec
push
push
sbb
aas
jb
rcrl
bswap
in
cmpsl
sarb
in
mov
sbb
dec
push
dec
cmpsl
rdtsc
sbb
vmread
add
ss
lea
add
repnz
movsl
int
daa
mov
pop
dec
pop
jo
movsl
inc
and
mov
xor
cltd
adc
jge
inc
mov
mov
add
push
xchg
push
and
pop
hlt
cmp
lea
loop
xor
xor
push
mov
push
aaa
mov
test
and
movsl
cli
outsb
adc
mov
dec
xchg
enter
xor
inc
ret
aam
xchg
popa
cmc
xor
or
mov
dec
jo
cmpsb
mov
in
daa
sub
or
andl
int
mov
push
popf
fs
xor
xchg
and
fs
sub
cmp
rorl
pop
jg
dec
cmp
push
and
xchg
sbb
inc
test
pop
pop
dec
mov
fcmovnb
sti
hlt
jno
add
jl
enter
add
popa
add
mov
push
mov
gs
dec
dec
lock
sbb
rolb
dec
lods
cltd
inc
loopne
mov
cmc
dec
pop
andb
mov
imulb
mov
sub
dec
movsb
pop
mov
push
popl
add
add
testb
sbb
pop
and
inc
jno
push
mov
rol
mov
mov
je
data16
loop
inc
or
and
push
and
std
dec
pop
addr16
lock
or
fldl
xor
cmp
dec
cmp
flds
aas
sub
jmp
lcall
inc
fisttps
mov
les
mov
ficomps
rcrb
outsb
popa
ret
sahf
leave
xchg
push
mov
add
orl
pushf
mov
stos
nop
jns
popa
jns
jno
loop
cwtl
xorb
cmpsb
pop
inc
cmp
xchg
or
test
sbb
sub
add
cmp
xchg
xor
cmp
jae
add
enter
or
add
sub
loope
stos
cmp
mov
das
jl
dec
jno
jne
dec
jmp
fs
mov
roll
pop
mov
xchg
or
xor
int3
scas
dec
mov
mov
or
inc
popa
std
cs
loope
mov
pop
les
sub
mov
call
cmp
and
lds
lret
jo
add
movsb
add
add
into
add
sar
and
int3
cmp
fs
xchg
jp
repnz
xor
mov
pusha
cltd
push
lahf
lds
adc
mov
or
shrb
mov
addr16
mov
and
insl
jno
loopne
mov
xchg
mov
add
data16
hlt
mov
xor
pop
mov
jecxz
test
mov
rolb
jmp
adc
pop
repnz
cmp
repz
jnp
repnz
sub
sbb
pop
sub
ret
jecxz
fmuls
fstl
pushf
mov
xchg
arpl
sub
pusha
aam
shlb
lahf
push
jns
adc
cs
or
shrl
cld
inc
rolb
xlat
inc
insb
xor
mov
pop
ret
and
pusha
adc
aam
push
pop
xor
mov
jl
lret
push
push
pop
mov
call
lret
pusha
fcoms
add
push
mov
or
cmp
sub
loopne
cwtl
je
aaa
or
lea
push
pop
mov
add
fildl
mov
push
or
in
xchg
adc
or
pop
test
cmp
push
and
mov
mov
adc
test
rolb
xor
enter
test
rcrl
add
inc
fbld
pop
sub
nop
add
inc
pop
xchg
and
sub
subl
xor
and
inc
adc
push
or
in
divb
add
push
sbb
pop
mov
or
js
adc
add
mov
inc
nop
leave
push
mov
xchg
fldcw
sub
popl
in
sbb
lock
faddl
je
add
adc
xor
xchg
in
pusha
test
mov
xor
mov
mov
mov
push
insb
les
cmp
jl
cs
dec
add
nop
sarb
fcomps
mov
adc
push
mov
dec
and
jae
clc
roll
jp
sti
jmp
cwtl
pop
test
jl
xor
cmp
or
enter
pop
dec
lret
test
aad
jmp
pop
and
ficoms
xor
add
lret
sarl
add
pop
decl
cmp
in
mov
mov
stos
adc
hlt
test
clc
les
add
fisttps
js
add
mov
rorl
les
add
fcomps
add
stos
push
scas
pop
mov
push
jge
add
lods
test
fsubl
inc
dec
shrb
jl
xor
in
sti
or
push
aam
test
inc
sub
dec
xor
aas
lods
xor
add
jp
sarb
enter
lcall
add
test
add
push
lret
in
dec
xchg
inc
xor
mov
mov
fisubs
add
lret
pop
lods
adc
mov
sub
clc
jae
mov
pushf
rclb
xlat
faddl
dec
mov
popa
loopne
push
add
stc
add
dec
mov
bound
sti
out
push
sbb
cli
xchg
xchg
mov
or
push
nop
out
mov
shlb
mov
pop
sbb
push
push
popa
add
pop
cld
add
xchg
mov
mov
add
xor
arpl
out
xchg
push
push
mov
and
aam
cmpb
sub
inc
add
sarb
and
sbb
dec
mov
out
push
mov
push
sbb
xlat
pop
out
xchg
pusha
mov
add
add
fwait
xor
mov
adc
pop
xchg
in
repnz
and
mov
popf
movsb
imul
dec
push
mov
xor
imulb
mov
jecxz
cwtl
jbe
fstpl
sub
insl
pop
or
ss
adc
sub
push
push
sbb
faddl
push
or
pop
int3
cltd
andl
mov
in
arpl
push
movl
cld
iret
and
pop
sbb
lock
test
subl
les
add
adc
xchg
notb
add
mov
mov
adcb
dec
jmp
xor
dec
push
sahf
clc
out
push
inc
add
imul
jp
cs
xor
dec
jbe
loopne
fs
je
mov
andl
in
mov
out
xchg
sub
lahf
sub
call
jne
pop
je
shlb
push
lods
inc
mov
add
insl
xchg
in
and
pop
lock
add
sub
add
lds
pop
add
imul
push
lods
and
addb
mov
cmc
dec
add
xchg
push
xor
adc
adc
popa
and
and
push
add
or
sub
lods
mov
and
rorl
ljmp
add
mov
push
pop
icebp
add
mov
in
sub
dec
movsl
or
and
xor
and
cmp
daa
lret
shll
add
xor
cltd
cmp
cmpb
dec
addl
add
push
jns
es
mov
jl
jb
cld
xchg
mov
stos
orb
dec
cld
add
xlat
lock
arpl
pop
push
loop
insb
cmp
pop
cmp
sbbb
push
imul
ret
mov
add
mov
test
and
jg
scas
call
or
mov
test
and
mov
mov
out
icebp
dec
xchg
add
adc
repnz
fsubrl
add
push
mov
jmp
das
xchg
daa
add
xor
inc
arpl
inc
test
adc
pushf
js
jge
hlt
xor
pop
push
sub
pusha
mov
mov
test
cmp
ljmp
outsb
mov
pusha
jb
lods
mov
cmp
lret
test
add
leave
dec
add
xchg
jns
popa
inc
jae
shrb
cmp
cli
adc
mov
pop
hlt
fwait
fstp
out
scas
add
cmp
loopne
cld
add
test
add
xor
add
scas
adc
ret
repz
and
test
mov
add
adcb
nop
pop
add
xor
sbb
cmp
cmp
jle
xor
jne
add
arpl
fsubrl
bound
pop
push
jg
add
add
lret
and
inc
pop
inc
push
xchg
cmp
xchg
add
pop
mov
cmp
imul
shrb
sub
test
dec
dec
js
out
std
mov
push
scas
sub
pop
adc
shlb
mov
adc
cmp
fcompl
nop
dec
pop
int
add
pushf
mov
ds
rclb
lahf
andb
bound
sbb
into
pop
or
and
shll
sbb
ret
lods
mov
mov
push
add
imul
dec
movsl
testl
movsb
mov
hlt
cmp
loope
fistl
arpl
cmpsb
add
xchg
xor
das
out
adc
mov
aas
sbb
push
add
jnp
cmp
loopne
and
aas
and
orl
mov
add
into
sub
les
adc
out
xchg
add
pop
cmp
icebp
pop
xchg
pop
in
data16
lods
lret
ss
repnz
scas
pop
fnstenv
out
dec
mov
or
pop
push
adc
pop
dec
loopne
subb
fbstp
dec
int3
shrl
shlb
xchg
add
and
stc
add
jle
int3
test
xor
inc
jae
push
add
and
stc
cs
lock
bound
add
les
loope
jecxz
test
push
pushl
out
push
xchg
cmp
add
nop
or
mov
mov
add
outsl
insb
dec
mov
mov
mov
leave
pop
add
jg
cmp
add
add
test
ret
add
jle
jecxz
repz
jmp
jmp
rolb
pop
testl
rcl
and
cli
add
jle
xor
popl
jmp
dec
popf
add
je
ja
mov
jmp
sub
test
in
rclb
dec
fiaddl
shlb
cld
out
adc
cmp
sub
push
sahf
dec
add
inc
xor
pop
lret
add
jae
sub
inc
repnz
sub
scas
mov
lock
mov
xlat
mov
ljmp
push
sub
xchg
add
insl
mul
jb
cld
ret
imul
xlat
pop
hlt
ret
pusha
test
pop
into
cmp
add
push
mov
fcomps
insl
add
shr
xor
jp
add
inc
cmp
rcrb
add
aad
dec
mov
jg
mov
je
push
xchg
inc
add
push
cmp
add
cmc
and
je
add
fldl
add
sarl
mov
or
jg
lds
call
dec
add
cvtdq2ps
cli
add
cmpsb
dec
xor
dec
fldcw
lods
pslld
pop
nop
and
lret
enter
sbb
addb
fwait
daa
imul
addb
adc
ja
in
lods
loopne
sub
addr16
ja
push
fadds
notb
sbb
and
xchg
inc
xor
xlat
test
outsl
jb
dec
imul
orb
lods
jbe
cld
pusha
fmul
loope
fwait
pusha
test
outsl
cmpsl
jae
add
mov
mov
jnp
mov
in
inc
inc
sbb
lahf
aaa
jae
add
xchg
jl
add
xchg
call
mov
or
pusha
lds
jle
aam
jl
loopne
test
mov
insb
inc
xlat
nop
and
push
add
int3
add
cld
push
add
push
jns
pop
jle
xor
fdivl
ljmp
add
sbb
arpl
lock
mov
add
ja
sbb
mov
sub
add
push
mov
mov
sub
inc
cmpsb
sbb
add
cmp
xor
sbb
add
cmp
pop
fiaddl
add
add
push
xchg
cli
pop
loope
or
sub
lock
stos
into
mov
add
negl
mov
pushf
outsb
mov
fisubl
lcall
test
pop
rorb
aas
daa
ljmp
inc
sbb
pushl
push
jge
enter
adc
add
frstor
addb
add
xchg
or
into
fwait
lret
lods
add
popf
cmpsb
xor
xchg
inc
jp
pop
call
mov
mov
mov
jge
rolb
jp
loopne
orl
jns
or
mov
rcrl
filds
dec
outsb
icebp
mov
jle
lds
movsb
lret
into
xorl
push
dec
sub
xchg
and
xor
add
inc
pop
xlat
sbb
pop
aas
mov
dec
lods
jne
add
ret
andl
mov
or
pop
and
pushf
dec
and
mov
pop
and
add
ret
fnstenv
iret
int
add
jmp
enter
jmp
sbb
in
sbb
cmp
ljmp
dec
push
bound
mov
lds
sbb
hlt
pop
mov
pop
js
cmp
push
jge
pop
pusha
lock
add
lea
sbb
sbb
cmp
or
test
mov
daa
and
sub
dec
popf
movsb
cld
mov
dec
jne
pop
popa
jo
jb
add
xchg
cld
test
jg
aas
add
lret
sub
jp
add
fidivrs
cs
push
mov
call
add
or
inc
sbb
dec
mov
fbstp
sbb
xchg
mov
aad
adc
adc
adc
pop
push
movsl
orb
add
gs
xchg
cwtl
add
enter
into
xchg
cltd
add
lret
je
bound
lret
add
add
sub
push
je
test
jbe
stc
call
xor
jp
mov
push
xchg
or
add
sti
movsl
out
aas
jge
add
mov
mov
imul
cmpl
or
into
inc
ja
sbb
lods
je
fwait
int
xchg
cmp
jae
and
inc
movl
insb
adc
mov
mov
mov
mov
add
sbb
adcb
scas
or
dec
std
add
aad
lds
mov
adc
xchg
add
cld
subb
inc
pop
push
sbb
insl
pop
adc
les
add
cmp
rclb
sahf
rol
shrl
stc
lea
add
push
sub
add
mov
std
xor
nop
mov
sub
sbb
cs
sub
lea
or
pop
inc
popa
jne
sbbb
lcall
shlb
daa
dec
fsubrs
adc
push
pop
pusha
push
fiaddl
call
in
fwait
add
pop
and
adc
dec
fiaddl
ljmp
psubusb
lahf
dec
pop
sti
decb
outsl
repz
shlb
xchg
xor
cmp
testb
shl
into
push
sbb
jno
adc
fadds
lock
mov
test
orb
aas
cli
add
and
push
sbb
xor
lock
xchg
bound
mov
mov
stc
jl
mov
push
cwtl
and
push
adc
mov
xchg
cmp
or
and
pop
add
movsl
test
pop
jmp
add
dec
or
add
pop
insl
sarl
fistl
loopne
or
jbe
xorb
subl
sbb
pop
sub
lret
js
sbb
add
jl
pop
lea
stc
movb
sbb
lahf
mov
pop
sbb
xchg
daa
pusha
sub
imul
dec
add
in
jns
mov
cmp
ja
adc
fs
adc
ds
in
mov
push
sarb
mov
sub
dec
adcb
cli
mov
popf
repz
mov
add
in
add
mov
mov
incl
mov
xor
sbb
add
xchg
inc
nop
clc
jb
jae
push
ljmp
pop
icebp
rorl
lcall
cmpsl
pop
mov
jp
push
sub
pop
inc
scas
mov
rcrl
add
test
testb
cmp
mov
mov
jae
pusha
mulb
or
cltd
scas
pop
sub
and
rcl
pop
rcrb
mov
clc
outsb
xor
pop
pop
cmpsl
xchg
inc
mov
rcrl
aas
pushf
loopne
pop
xor
add
jb
enter
jp
xor
or
dec
and
int3
fsubl
xchg
mov
and
pop
push
out
jns
xor
outsb
je
fbld
mov
adcb
push
cmp
xor
cmp
sbb
jns
mov
fwait
leave
add
jnp
add
and
in
and
add
int
enter
addb
cmpsb
or
dec
aaa
cmp
sbb
loope
dec
int
clc
scas
push
mov
insl
out
fldt
xchg
sub
xor
or
adc
imul
or
xchg
out
push
cmp
daa
imul
rclb
repz
xchg
adc
jnp
cli
xor
xchg
or
push
jl
mov
sbb
lods
mov
add
push
mov
add
imul
xchg
jmp
add
jbe
rolb
sbb
and
shlb
nop
and
clc
push
inc
pop
mov
outsb
add
inc
jl
pushf
add
mov
jno
jmp
test
add
lds
sbb
in
fadd
sbb
or
inc
or
nopl
adc
inc
jge
add
xor
add
and
xor
sbb
or
sbb
imull
mov
out
mov
ror
add
and
das
fwait
je
movl
ljmp
push
aad
fs
or
out
aaa
cmp
add
jae
popf
loop
mov
pop
aam
mov
sub
xor
push
fstp
ret
mov
addl
sbb
inc
mov
cmp
add
add
test
mov
or
push
xchg
cs
pop
sub
xchg
inc
dec
add
inc
hlt
add
stos
lods
es
dec
inc
jnp
nop
in
data16
or
inc
stos
insb
shll
and
mov
stc
jp
in
push
xor
and
jae
in
add
insl
fmuls
movsb
cmpb
push
je
add
shlb
out
sub
or
push
gs
sbb
dec
pop
inc
sbb
pop
mov
cmp
ljmp
popa
and
lock
adc
xorl
jnp
xor
outsb
adc
pop
stos
adc
into
les
iret
push
rcrb
repz
enter
dec
inc
aam
pop
add
mov
add
jae
xchg
and
jo
pop
add
dec
push
nop
pcmpgtw
and
lahf
add
and
arpl
cs
in
xchg
leave
les
add
call
or
shrb
add
arpl
call
les
lock
jge
add
cmp
sub
test
add
fidivrs
ljmp
push
aam
jo
dec
add
xlat
lahf
mov
sub
xchg
enter
mov
shrb
inc
pushf
es
sub
cld
mov
mov
frstor
sub
ljmp
add
mov
enter
mov
and
daa
arpl
xlat
add
adcb
and
popa
push
in
out
add
jg
sub
sub
aas
stos
ljmp
pop
mov
rorb
cs
loopne
and
test
stos
xchg
add
mov
test
add
mov
js
pop
mov
push
inc
shl
bound
imul
movsb
cmp
orl
movsl
stos
or
jne
sub
adc
add
ret
data16
mov
sub
pop
sbb
pop
fldcw
in
sbb
xchg
mov
mov
adc
xchg
xchg
add
pop
xor
andl
imul
nop
xchg
mov
aas
xchg
cli
les
out
jge
shlb
push
push
test
push
jo
xchg
mov
sub
enter
dec
movsl
stos
dec
pop
cmp
xchg
fidivrl
sbb
mov
mov
out
pop
mov
add
add
mov
insb
or
mov
cmp
push
add
mov
mov
xchg
sbbb
sahf
xchg
push
mov
popa
push
jmp
scas
sbb
sub
insb
mov
sbb
dec
pop
push
aas
in
int3
rcr
fadds
test
push
xchg
push
add
mov
push
pop
call
out
fiaddl
push
repz
or
sbb
enter
mov
daa
xlat
add
sbb
js
out
test
add
es
orb
and
and
popa
xchg
aaa
ss
jecxz
xlat
push
and
cmp
push
pop
std
out
aas
pop
jae
clc
pop
inc
inc
jb
push
and
hlt
add
mov
ret
cmp
jmp
insl
xchg
fldl
int
push
daa
nop
es
cmpsb
jb
in
push
cli
cmp
or
dec
mov
movb
pushf
add
pusha
mov
movsl
test
mov
cwtl
sbb
pop
adcl
movsb
pop
add
pushf
pusha
lahf
fimuls
mov
mov
and
insl
inc
cmp
cmp
cltd
add
xchg
cld
and
add
dec
jge
fnstenv
sbb
sub
xchg
push
cmp
sub
mov
fmuls
push
jae
popf
lahf
inc
loopne
enter
add
pop
mov
mov
subl
rclb
add
fidivl
pusha
or
push
lcall
aas
and
int
ss
sbb
popa
iret
dec
pop
xchg
repnz
shlb
into
inc
outsl
add
xchg
sbb
loope
paddusb
aad
cmc
outsb
mov
xchg
xor
add
mov
arpl
lahf
jle
sbb
xchg
cli
ret
push
movsb
fsts
sarb
jno
add
std
lods
mov
orb
mov
sub
pop
mov
loopne
fisubl
clc
or
insl
sbb
dec
xor
pushf
hlt
add
mov
add
aas
std
aam
es
les
cmp
add
ljmp
cmp
call
cwtl
imul
and
inc
std
or
gs
psraw
cld
daa
mov
in
fs
inc
cmp
lock
lcall
sub
push
or
cltd
stc
cmp
or
xor
jno
add
xor
sub
scas
dec
jmp
mov
je
push
jbe
es
rcll
lods
outsb
and
hlt
hlt
inc
push
jg
fbstp
out
cmp
mov
ljmp
mov
data16
jl
loope
shrb
adc
push
pop
mov
add
cmp
or
hlt
ret
stos
xor
fld
les
cltd
mov
enter
push
jo
leave
jnp
add
xor
imul
push
enter
andb
jp
mov
ret
xor
fisttps
shlb
out
jno
sbb
lods
fwait
outsb
mov
lods
sti
xchg
sbb
push
ljmp
clc
add
fldcw
in
bound
les
outsl
push
test
push
inc
sub
jecxz
jle
add
mov
fsubrl
mov
add
in
push
push
mov
sti
in
in
imul
inc
xchg
sbb
or
pop
pop
or
xchg
push
std
scas
jno
add
mov
stos
cmpsl
push
mov
sbb
cmpsb
adc
inc
add
scas
jbe
push
in
out
pop
mov
sbbb
mov
or
mov
xchg
mov
popf
pop
push
out
xchg
les
pop
test
mov
jb
or
fcoml
dec
xor
jae
pop
js
das
das
adc
movsb
sahf
popf
add
xchg
test
aam
sub
fldl
dec
leave
dec
loopne
decl
add
push
sarl
jg
mov
cmpsb
roll
mov
or
adc
data16
pop
jo
add
mov
movsl
or
in
add
call
jl
add
es
jb
lcall
inc
shrl
outsl
xchg
pushf
add
rol
inc
add
sbb
xor
jg
add
inc
mov
addl
inc
repnz
add
sbb
ret
sbb
cmp
adc
addl
or
pushf
jbe
lds
pusha
push
popl
sbb
or
add
addl
add
out
mov
inc
mov
mov
xchg
pusha
out
shll
or
stos
ret
inc
and
clc
push
dec
xchg
inc
mov
or
mov
xlat
pop
push
pushf
sub
lcall
and
or
orb
in
and
and
inc
out
adc
cmp
mov
dec
inc
inc
fwait
test
mov
inc
adc
jo
lret
adc
xchg
sbb
sub
or
and
pop
inc
push
adc
cmpsb
and
test
rorb
js
push
cmp
lret
mov
and
xchg
or
aaa
xchg
adc
adc
pushl
xchg
pop
adc
adc
and
das
mov
xchg
push
add
mov
mov
dec
cmp
pop
in
loope
sub
seta
and
pusha
xrelease
jp
pop
hlt
in
xor
das
lock
divb
jmp
es
jo
faddp
adcb
adc
push
fistpll
and
mov
out
or
xor
pop
add
and
imul
add
mov
jns
shll
pop
rclb
out
stc
lods
gs
add
lret
incl
inc
sub
rolb
push
xorb
test
inc
loop
adcb
pusha
add
mov
pop
sbb
sbb
aaa
pop
mov
add
add
cmpsb
xchg
mov
push
lock
out
jo
add
in
scas
sahf
int3
push
pop
cmp
xchg
sbb
jge
cmc
or
clc
fwait
sub
add
mov
mov
pop
mov
js
cmpsb
into
inc
movsb
pop
adc
pop
add
push
add
cmp
and
add
iret
and
mov
jl
repnz
push
add
imul
inc
aam
sub
mov
out
inc
jne
push
aaa
cmp
xor
pop
pop
loop
jae
cmp
xchg
jg
arpl
jnp
mov
dec
iret
push
xor
jbe
lods
add
stos
sbb
ja
push
orl
sbb
jl
add
cwtl
in
adc
leave
add
dec
dec
movsb
je
mov
cmp
test
adc
popf
push
addr16
jge
inc
mov
iret
adc
pop
pop
jbe
xchg
add
leave
test
ds
jle
add
lahf
mov
and
add
jge
xor
push
xchg
mov
iret
mov
sub
mov
jle
out
in
arpl
add
mov
shrl
dec
add
push
push
jecxz
call
cmp
push
sbb
loopne
cmp
call
lahf
jo
scas
in
roll
push
cmpsb
sbb
test
add
pusha
test
in
aas
mov
inc
mov
sub
sbb
out
std
adc
sar
mov
xchg
add
adc
out
frstor
nopl
repz
add
jnp
sub
std
das
idivb
pop
push
pop
ret
inc
out
lods
add
add
repz
jp
dec
outsb
ret
fcompl
pusha
push
inc
or
mov
and
repz
xlat
add
xor
mov
popa
pop
push
sub
jecxz
or
inc
daa
sub
or
xchg
lcall
cmp
add
sub
dec
and
inc
mov
jae
std
add
cmp
dec
dec
sahf
cmp
imul
pop
movsb
loop
add
mov
fists
or
add
or
pusha
arpl
pop
lds
and
mov
adcb
lcall
mov
adc
lds
pop
pop
xlat
jle
add
mov
jmp
nop
and
or
sbb
cmp
das
pop
andb
mov
or
call
push
push
mov
inc
xor
mov
inc
or
push
sbbl
mov
inc
pop
rorl
inc
loope
or
xchg
aam
ret
icebp
ja
add
ss
mov
adc
push
push
mov
cmpsb
add
inc
mov
js
data16
sbb
xlat
jo
mov
stos
add
imull
clc
dec
ljmp
jbe
add
outsb
sub
ds
cmp
fsubrl
jmp
xchg
inc
add
pushf
divl
out
scas
add
mov
inc
popf
fsubs
pop
loop
adc
add
enter
pop
push
aas
jno
xor
cmp
pop
xchg
and
dec
dec
cmp
sbb
cltd
inc
cmp
pushf
or
add
stc
lods
add
adcb
lods
add
mov
adc
push
out
add
mov
clc
imul
popf
xor
inc
call
fmull
push
inc
movsl
mov
dec
sbb
sub
xchg
test
out
call
xor
mov
int
ficoml
sbb
or
mov
mov
fistpll
outsb
pop
or
push
rolb
add
stos
or
fcoml
add
daa
movsb
iret
jno
inc
js
hlt
mov
cmp
cmp
inc
sub
xor
cmp
lea
mov
adc
xor
and
pop
cld
xorb
push
add
jle
xchg
push
xchg
out
ljmp
adc
inc
daa
add
imull
add
cwtl
sbb
and
cmc
pusha
add
mov
lahf
jnp
daa
add
and
pop
mov
jle
repz
adc
mov
inc
gs
mov
sub
push
sti
xchg
out
and
test
out
addb
jbe
jo
in
xchg
rol
dec
and
adc
aas
push
cs
mov
cmpsb
add
or
add
adc
out
mov
jo
into
add
mov
xor
sbb
ljmp
xchg
aad
sub
mov
mov
push
fsubrs
iret
add
xchg
je
adc
loop
and
jg
jmp
adc
in
sub
add
jno
add
call
in
add
cs
aas
xchg
dec
xor
add
stos
lea
fucomi
loope
add
aas
jl
adc
call
or
xorb
mov
or
xor
inc
testb
test
rorb
pop
adc
in
lock
outsl
dec
add
sbb
mov
fldt
nop
push
add
jg
divb
jp,pn
or
inc
call
adc
hlt
stos
add
cmp
sbb
loop
push
jecxz
dec
aas
add
jmp
andl
test
mov
faddl
xchg
fiadds
mov
call
inc
add
add
push
jmp
aad
add
sub
jg
pop
flds
shlb
fsub
dec
call
jne,pn
lahf
sbb
loop
wrmsr
mov
std
pusha
aam
push
jns
mov
pop
xchg
pushf
adc
je
mov
cmp
rcrb
in
jnp
mov
clc
add
xor
int
fsubl
or
nop
or
sub
in
pop
mov
out
int3
add
jno
test
ja
or
xchg
adc
add
out
push
sbb
dec
in
adc
xchg
xor
xchg
mov
stc
test
leave
pop
pop
int3
clc
aas
pop
pop
xor
sub
add
inc
ds
sub
cld
bound
inc
ret
pop
mov
hlt
fistpll
rolb
mov
jnp
je
jne
mov
add
sbb
aad
ja
add
inc
jecxz
sub
mov
pop
sbb
test
lahf
add
fimuls
insl
jmp
pop
inc
loopne
or
nop
sbb
pop
jbe
test
movsb
shr
add
loopne
mul
mov
jecxz
xor
sbb
sbb
or
nop
shrb
xchg
out
loopne
and
jl
mov
scas
cmc
in
pop
orb
mov
and
jno
and
imul
scas
test
inc
jo
sarl
xor
lret
cmp
adc
jo
ret
movsb
push
cld
enter
add
xchg
mov
add
lods
push
xor
into
test
mov
sarb
push
popa
add
sbb
mov
arpl
sysexit
mov
jno
rcrb
and
add
sub
push
xor
fwait
gs
add
clc
dec
push
mov
add
popf
jl
lock
mov
out
mov
xchg
sahf
pop
cmp
inc
rorl
add
in
out
sub
mov
rclb
add
test
add
jge
add
pop
outsl
pop
aam
shll
pop
lret
inc
pop
add
stos
sti
movsb
movb
lret
push
cmp
adc
xor
das
nop
insb
add
sub
xor
pop
cwtl
sarl
sbb
sbb
ja
pusha
jno
lock
ds
and
popa
dec
in
dec
lds
add
out
xchg
add
roll
add
pop
pop
jp
mov
andb
push
fadds
or
int3
testl
fs
or
jo
add
jbe
or
out
sub
xchg
jne
std
and
sub
add
push
xchg
xor
sbb
fidivrl
mov
adc
test
fdivs
adc
movsl
in
add
dec
inc
mov
sub
sub
orl
add
test
loopne
xor
add
cmp
mov
sbb
add
jb
stos
adc
xlat
jle
nop
sarb
inc
xor
mov
push
inc
push
iret
test
lahf
pop
out
push
add
add
pop
fcmove
loop
cwtl
repnz
icebp
push
fwait
and
add
popf
sbb
fbld
movsb
pop
add
xor
pop
loopne
add
xchg
mov
lret
stos
cmp
add
pop
hlt
test
shlb
push
add
call
sbb
scas
add
shrb
fsubr
adc
xchg
add
mov
in
cld
pop
cltd
jno
mov
rsm
pusha
mov
jmp
sbb
xchg
in
sarb
shrl
mov
movb
adc
sarb
mov
test
daa
cmp
and
out
add
ret
xor
add
inc
lock
fiaddl
xchg
xor
dec
xlat
aaa
jmp
xchg
and
ds
test
es
dec
and
add
mov
pushf
jp
imul
sbb
js
repz
add
faddp
and
add
push
sbb
mov
sbb
push
pop
mov
jg
aad
into
and
mov
push
in
test
add
push
les
in
sub
inc
enter
adcb
addr16
add
pusha
add
cld
push
jecxz
inc
xchg
add
and
or
xor
sbb
lcall
sbb
sub
push
xchg
push
daa
scas
pop
das
push
push
pop
and
push
push
and
sbb
push
or
xorb
fistl
aaa
sbbb
rolb
sbb
mov
packuswb
mov
pushf
sbb
loope
jae
imul
jl
mov
push
fistl
fsubrs
sti
cmp
add
mov
ds
aam
pop
xor
cmp
xchg
sbb
fdiv
cmp
mov
inc
jns
mov
xchg
lahf
add
int
out
testl
sub
fstps
jae
dec
mov
aam
pusha
push
adc
push
push
mov
mov
jb
cltd
mov
jbe
adc
jno
outsb
roll
pop
mov
inc
enter
add
dec
nop
loop
adc
add
cmpsl
lock
and
push
pushf
add
test
lock
cmp
pop
adc
out
pop
das
pop
cmp
add
lcall
cmp
insl
in
enter
lret
jbe
leave
fucomi
and
aad
add
mov
loope
add
or
inc
jo
aam
in
fwait
mov
popa
call
mov
jo
int
add
inc
xchg
xor
mov
mov
aaa
fldt
das
add
adc
cmp
bsf
adc
ljmp
loop,pt
in
out
lahf
sbb
mov
xchg
and
pop
dec
add
andl
sub
push
daa
aaa
inc
ds
mov
and
push
add
nop
inc
add
clc
stos
shll
popa
sbb
bound
mov
inc
pushl
iret
aaa
insl
and
adc
std
testl
add
xchg
dec
push
mov
mov
aas
movsl
popf
in
pop
jnp
xchg
adc
dec
push
xchg
push
or
popf
sbb
push
jecxz
jp
add
inc
sub
adc
and
or
movsl
cmp
add
xor
and
sub
mov
dec
test
ror
punpckhdq
xchg
sub
sub
ja
mov
je
jne
adc
lret
push
adc
imul
scas
pop
xchg
mov
dec
inc
lret
cmp
dec
test
int3
ret
and
pop
fildll
enter
loopne
inc
insb
or
mov
rolb
push
sahf
scas
mov
jp
mov
pop
add
fistps
adc
sub
enter
inc
jo
add
jmp
in
idivl
addl
fadds
add
loope
test
add
aas
push
and
jo
ret
cmp
pop
data16
call
jmp
xchg
dec
xchg
mov
fwait
inc
dec
sbb
push
xchg
jge
inc
sbb
aam
bound
xor
dec
cmp
lea
aam
add
nopl
jns
mov
ror
addl
jbe
stc
mov
push
adc
fwait
pop
in
add
xor
xchg
and
insb
sbb
dec
pushf
ja
and
ss
push
aad
loopne
add
in
shrb
movsb
mov
inc
add
xorb
lcall
add
popf
mov
pop
mov
dec
rcll
movsl
cs
cmp
stos
das
lods
ljmp
loopne
or
loopne
rolb
je
jae
sti
es
fdivs
lock
lds
add
lea
in
loope
pop
int3
lret
mov
mov
fiadds
cmp
mov
mull
adc
add
out
addb
add
ljmp
fdivrs
jg
add
and
mov
mov
lods
icebp
adc
fs
hlt
cmp
mov
and
movl
sahf
adc
adc
iret
imul
pop
stc
adc
mov
adc
adc
xchg
add
stos
cld
scas
je
inc
lock
into
jle
sar
mov
push
out
adc
in
aas
pop
jno
paddq
mov
shlb
inc
add
and
scas
add
lahf
iret
je
jl
mov
add
xor
mulb
rolb
push
jbe
nop
pop
int3
getsec
xchg
add
xor
shll
flds
out
movsl
mov
nop
shr
and
loope
ret
ljmp
xorl
sub
add
sub
in
mov
mov
aam
add
or
jo
mov
andl
dec
add
or
fwait
add
in
add
jp
push
xor
jge
adc
push
jl
add
xchg
pop
xlat
add
mov
jmp
mov
push
adc
pushf
and
dec
out
shlb
test
mov
jl
and
inc
mov
add
pop
sub
insb
add
xchg
out
shlb
xor
rolb
cmp
incl
and
pop
xchg
inc
add
dec
mov
push
push
iret
mov
jo
test
rcll
mov
sbb
lret
sbb
jae
es
pop
xor
ja
or
jecxz
ror
leave
fucom
in
xchg
add
mov
pop
mov
inc
cmp
leave
add
pop
jnp
add
test
jns
fs
rclb
mov
add
std
xchg
or
test
ljmp
stos
mov
sti
loop
add
lock
std
loopne
xor
fisttps
mov
cltd
repnz
pop
aas
fstp
int
adc
ss
mov
addl
enter
out
sbb
outsl
loop
push
add
lret
ds
sbb
pop
imul
ja
pushf
push
add
push
repz
cwtl
mov
push
dec
lods
insl
add
es
outsb
nop
dec
add
push
dec
add
add
sahf
int3
mov
push
jns
add
or
testl
push
dec
sub
xor
orl
clc
and
add
mov
jne
add
repz
test
lcall
add
mov
cltd
inc
add
pop
mov
sbb
pop
xor
rcrb
jae
sub
loopne
add
out
loope
clc
pop
int
cmp
sti
hlt
xchg
pop
xor
xchg
jecxz
and
mov
lock
inc
xor
mov
pop
pop
sbb
testb
cmp
fisttps
sarb
push
cmp
mov
cmp
test
scas
cwtl
jp
sbb
push
xchg
fldenv
pop
jnp
jmp
pusha
aaa
xchg
shrb
or
into
add
and
jno
xchg
imul
lds
mov
ss
mov
pop
xor
jne
sahf
xlat
add
sub
add
lds
pop
xchg
cmpsl
repnz
and
push
mov
push
rcrl
int
ds
scas
fwait
sahf
jle
enter
add
loop
and
add
fwait
jle
sub
dec
cmp
outsl
xorb
mov
sbb
in
insl
mov
je
pop
cli
int
shlb
int3
mov
adc
dec
add
xchg
mov
mov
or
lods
inc
cmp
mov
scas
xchg
sbbl
movsb
sbb
and
mov
int
arpl
lret
add
pop
pusha
popf
xor
inc
push
das
lods
cmpsl
jl
sub
jmp
mov
jno
add
repnz
adc
add
fistps
or
add
sub
adc
inc
sub
test
add
sbb
fcomi
lds
add
xchg
fcoml
xchg
push
loopne
mov
push
push
push
adc
sub
clc
std
add
ss
leave
inc
incb
mov
mov
xchg
out
pop
sbb
icebp
subb
mov
pop
push
mov
scas
or
adc
popf
pop
cmpsl
into
daa
or
inc
sub
add
or
mov
add
xchg
pop
sti
call
movsl
xchg
dec
cmp
mov
inc
imul
rorb
stc
sbb
jg
insl
or
aas
roll
daa
ret
xchg
inc
push
sbb
enter
add
lods
add
into
pop
and
sub
cmp
ret
mov
push
mov
aaa
fcmovnu
mov
mov
sbb
add
inc
bound
rcrl
dec
xchg
push
enter
test
push
xor
or
lahf
insb
and
roll
xor
and
es
pop
add
mov
xor
and
sahf
push
or
lmsw
adc
sub
and
xor
es
cmpsl
stos
test
cmpsb
loopne
ret
cltd
mov
daa
out
cwtl
fstpl
cli
push
hlt
add
hlt
call
or
loopne
mov
addr16
pop
dec
aaa
cmp
in
pop
jle
sahf
mov
flds
in
in
mov
lods
ja
andb
loopne
adc
add
lock
adc
imulb
lods
sbb
push
into
add
pop
inc
mov
jno
adcb
adcb
bound
mov
adc
paddusb
rolb
add
mov
adc
add
xor
rcrl
and
andb
jmp
inc
call
shl
fdivr
adc
push
in
fsubs
mov
leave
iret
rcll
add
and
push
pop
pushf
jo
add
lret
push
add
pusha
sarb
inc
fnstsw
add
lret
push
jp
xchg
add
out
xchg
fdivrp
out
jo
roll
les
mov
sub
cmp
inc
add
pushf
and
jle
repnz
xchg
add
sbb
cmp
call
in
nop
add
xchg
xchg
xchg
and
pop
sbb
out
add
decl
mov
pop
cmpsl
inc
aas
mulb
and
lods
out
addr16
push
aaa
mov
idivl
mov
adc
ror
add
mov
stos
add
arpl
punpckhdq
pop
loopne
cmp
jle
test
cmp
repz
adcl
mov
mov
hlt
rolb
jl
call
cs
loope
or
jo
cmp
pop
add
xchg
lret
xchg
push
cmp
cmpsb
jecxz
add
and
sub
add
int3
push
mov
add
dec
rcll
mov
repz
jne
into
add
mov
icebp
aaa
jno
iret
add
mov
inc
ret
loope
cmpsl
sub
add
rcr
jb
sti
fwait
mov
and
and
and
loop
add
lahf
test
stc
push
cmp
push
mov
or
loope
xchg
add
aam
mov
xchg
or
mull
jge
fldl
sbb
add
fsubl
pop
add
add
das
pushf
popa
subb
loopne
jge
mov
add
cwtl
dec
pushf
and
cmp
jb
push
fildll
pop
loopne
into
sarl
sub
std
shr
add
mov
clc
add
mov
out
jl
in
enter
je
sub
inc
pushf
out
mov
fwait
add
mov
cmp
mov
inc
cmp
jg
add
xor
add
ret
adc
add
mov
aam
add
inc
xor
xor
add
in
mov
add
ds
dec
mov
push
sbbb
jl
and
sub
test
sbb
add
sub
lret
std
push
cmc
sahf
mov
inc
mov
add
xchg
xor
inc
movsl
add
sar
add
push
adcb
push
pop
cmp
cmp
inc
pop
mov
imul
les
mov
push
arpl
test
lock
xor
je
pop
mov
loope
xchg
fsubrs
add
mov
sti
mov
cs
in
pop
jns
push
push
add
inc
dec
mov
xchg
add
hlt
sub
xchg
xor
adc
jbe
xor
adc
xchg
and
and
call
xor
jecxz
repz
or
in
dec
pop
push
scas
clc
call
int
sbb
repnz
rorb
lock
pop
ja
cli
jnp
sub
out
psllq
mov
rcl
mov
ret
pop
gs
js
add
repz
dec
mov
cli
iret
add
xor
mov
aas
repz
mov
andl
add
je
mov
dec
das
dec
arpl
pop
pop
aaa
add
adc
or
test
jl
enter
dec
push
mov
lock
loopne
outsb
mov
aad
jo
and
insb
inc
popf
js
inc
rcrb
movswl
int3
testb
loope
ds
das
mov
pop
hlt
in
pop
dec
and
push
stos
pop
sarb
mov
xchg
shl
or
adc
ret
mov
fst
bound
dec
mov
imul
imull
cmp
aas
push
add
into
ficoml
ds
add
jb
mov
cmc
push
pusha
lret
jne
ret
cwtl
lods
push
test
mov
mov
pop
pusha
les
in
add
mov
pminsw
add
lahf
shr
xor
add
ja
inc
add
leave
pop
mov
add
add
pop
mov
push
mov
and
add
fcoml
cmp
clc
push
imul
xor
repnz
adcl
js
test
pop
pop
push
cs
mov
mov
add
push
and
xchg
cli
add
sti
leave
js
mov
xor
sub
add
sub
imul
sub
enter
pop
movsl
add
pop
add
pop
sub
test
leave
cmp
mov
outsb
inc
lods
enter
jae
loopne
cmpsl
sbb
fdivrs
adc
insl
rcl
add
icebp
sarb
aam
adc
lock
mov
nop
xchg
cwtl
add
or
sarb
xchg
jbe
outsb
fcmovnbe
enter
insb
mov
add
out
ljmp
adc
cmpsb
xor
push
jae
push
faddl
inc
movsb
mov
inc
mov
rolb
xlat
int
ret
inc
in
nop
mov
cmpb
adc
add
push
mov
daa
cld
test
add
inc
push
int3
xchg
leave
push
sub
add
and
add
cmp
mov
add
inc
sahf
loope
jp
in
add
movb
loope
aam
adc
hlt
fs
sub
sbb
pop
and
loop
add
leave
lea
loop
jl
mov
adc
out
and
mov
sub
cld
xorb
add
ret
or
xor
add
imull
and
xor
loop
xlat
cwtl
hlt
or
shr
movsl
adc
movsb
scas
add
mov
cmpsl
sub
pop
mov
mov
add
fistps
cli
ret
ljmp
pop
lret
xor
push
ret
cmpb
add
mov
and
mov
pop
or
xor
fs
add
sub
or
arpl
xor
pop
xchg
fistl
pop
xchg
sub
test
push
pusha
mov
push
inc
add
addr16
idiv
jl
sub
or
repnz
add
push
or
or
out
lcall
shll
jo
inc
add
sbb
call
add
cld
shr
cmpsb
xchg
mov
ds
cmp
xchg
inc
xchg
aas
adc
add
cmpsb
xchg
add
clc
mov
add
test
out
ret
or
ret
pop
popf
lret
cmp
gs
jg
mov
add
pop
sub
rcr
add
insl
mov
fisttpll
mov
adc
mov
and
pop
stos
fwait
xor
mov
lds
shlb
xor
cmpsl
add
ja
out
clc
nop
ljmp
xorb
add
inc
adc
cmp
movsb
das
movsb
add
fcoms
mov
add
loop
jb
dec
scas
mov
inc
pop
popl
fidivrl
or
test
cmp
int3
loopne
push
inc
xchg
or
add
adc
loopne
cltd
xor
sar
imul
adc
lods
shlb
sub
and
jo
hlt
and
sub
pop
xor
loop
scas
push
lea
add
iret
cwtl
mov
mov
or
sbb
mov
jne
sub
shlb
adc
jge
daa
adc
add
inc
hlt
call
dec
lea
cwtl
jg
add
jecxz
cmpb
mov
mov
test
xor
pushf
add
movsb
xchg
call
subb
add
pop
cmp
rorl
pusha
xlat
inc
bound
adc
fs
mov
or
xor
jo
leave
lahf
test
aad
push
or
shrl
or
or
add
pop
or
enter
mov
xchg
cld
sub
add
repz
out
jb
add
clc
int3
aaa
out
mov
mov
sub
call
sub
and
int
cwtl
xchg
jl
add
into
ror
and
es
cwtl
pop
jle
lock
mov
xchg
movsl
xchg
shrb
adc
sbb
out
adc
lock
mov
out
int3
cmp
loopne
add
and
imul
pop
add
outsb
adc
inc
shlb
mov
jo
mov
xchg
les
sub
add
js
notb
pop
rolb
add
xchg
mov
mov
popf
xchg
shl
add
insb
pop
add
ss
aam
or
xchg
add
add
jmp
push
or
shll
mov
loop
sbb
add
lcall
jno
jnp
pusha
cmp
and
out
cld
dec
cmpsb
imul
jns
add
subb
or
sbb
add
insb
insl
in
jns
in
add
xchg
lret
scas
es
inc
add
dec
dec
mov
xchg
inc
inc
and
fcmovnu
dec
jg
aas
test
add
imulb
pop
lahf
cld
dec
push
adc
insl
jle
xor
sub
mov
xchg
shrl
testb
aad
leave
lcall
mov
imul
daa
lds
push
lods
mov
add
xor
mov
mov
pop
jb
insb
mov
popf
les
inc
inc
cltd
jp
jae
inc
inc
cmp
imul
cmp
fidivrl
out
inc
rcll
xchg
sub
sub
hlt
push
xlat
mov
scas
movsl
mov
je
stos
jp
add
sbb
add
loopne
out
pop
lret
ja
rorl
mull
aaa
sbb
pop
mov
sub
add
dec
xlat
mov
lahf
nop
dec
push
out
adc
daa
negl
shlb
mov
mov
jo
add
or
push
jno
add
adc
xchg
sub
test
mov
cli
mov
mov
jne
cmp
jbe
mov
dec
lds
add
test
ficoml
mov
xor
shl
pop
mov
pusha
test
call
js
ljmp
mov
mov
ret
mull
jbe
xorb
add
push
mov
dec
mov
add
out
push
insl
or
xor
clc
and
pop
pop
div
push
inc
cltd
pop
mov
sar
mov
mov
inc
ficoml
test
shl
iret
inc
lret
jns
cmp
sbb
jmp
add
or
scas
jg
cmp
rol
sbb
out
enter
fnop
daa
add
gs
lods
shrl
add
lods
test
fsub
mov
lcall
inc
and
and
add
mov
dec
jo
add
cld
lret
fistl
xchg
add
pusha
jne
popa
icebp
mov
push
pop
mov
outsl
xor
pop
jae
add
sub
sbb
inc
add
jno
pop
push
fpatan
icebp
inc
and
adc
mov
mov
shll
xor
jmp
jae
lcall
dec
sub
cmpb
rcrb
dec
stos
pop
push
roll
ja
bound
add
loop
scas
pop
cmp
dec
pop
js
sub
jecxz
addl
outsb
cltd
loopne
mov
cmc
xchg
mov
dec
mov
and
cli
fisubs
movl
xor
lock
lcall
str
jle
push
sub
pop
js
push
xchg
mov
mov
add
out
call
add
test
in
fs
xchg
inc
or
lahf
js
hlt
dec
add
test
iret
cs
dec
add
and
add
ja
xor
pop
outsb
nop
add
in
roll
push
lods
xchg
sbb
pop
call
dec
push
cmc
jecxz
add
sub
shrl
or
push
xchg
adc
lret
js
pop
call
mov
aad
xor
and
xchg
ja
sub
sbb
pop
pop
psrad
xor
int3
insl
pusha
mov
test
inc
cmp
sti
fimuls
lds
mov
cmp
fcomps
sbbb
arpl
shlb
jg
add
cmp
mov
sbb
inc
icebp
mov
ds
nop
mov
mov
cwtl
call
pop
mov
adc
ret
lods
push
xchg
stos
cmpsb
add
stc
or
jg
mov
mulb
lds
jno
cltd
jbe
in
sbb
pop
pop
xchg
dec
jg
jae
or
rcr
push
shll
outsl
in
insl
push
xchg
inc
mov
pusha
push
adc
jmp
mov
pop
pusha
aad
rorl
add
mov
pop
xor
shlb
push
mov
stos
repnz
test
adc
cwtl
hlt
add
lds
push
fdivrs
cmp
xlat
rcrb
push
jbe
inc
repz
add
ret
add
pop
or
mov
ror
mov
sbb
std
add
incl
dec
xor
add
cmp
sbb
push
outsl
dec
ljmp
out
push
adcl
arpl
in
sar
mov
sbb
add
inc
add
shll
int
mov
add
rclb
inc
cs
xlat
lahf
cmp
iret
adc
push
or
lcall
daa
dec
pop
ret
push
and
outsb
and
cmpsl
mov
and
push
inc
and
push
sti
add
adc
pop
dec
cmp
add
pop
subl
movsb
bound
mov
pop
loopne
add
add
xor
scas
lret
mov
and
dec
fadds
cmp
push
xlat
jo
daa
xor
shlb
cmp
dec
es
test
andb
mov
loope
mov
test
pop
or
push
cmpb
jo
mov
in
push
sbb
sbb
push
or
pop
cwtl
mov
add
rol
insb
or
jo
jmp
das
sub
add
push
aad
test
pop
sbb
loopne
loopne
imul
add
aas
pop
insb
test
or
sahf
rep
cmp
add
and
mov
pop
cmp
xor
mov
cwtl
add
ss
xlat
cmp
pop
jns
add
loop
add
pop
add
lea
add
out
inc
lds
movsb
and
xor
add
mov
add
cmc
pop
les
inc
fcoml
mov
adc
insl
dec
add
mov
aad
inc
inc
icebp
or
pusha
mov
add
sbb
imul
je
push
xor
or
call
and
add
add
hlt
les
shrb
push
test
ret
push
mull
sarl
or
add
fucomip
mov
add
into
test
addr16
dec
clc
jecxz
pop
jl
push
sbb
xchg
and
js
mov
int3
ja
mov
mov
repz
inc
inc
ljmp
shll
inc
and
stos
xor
cmp
inc
hlt
mov
push
xchg
mov
pushf
shll
rclb
flds
test
rolb
lock
xchg
or
in
cmp
push
and
icebp
cmc
frstor
pusha
inc
add
repnz
add
leave
mov
cltd
pop
pop
lret
sub
repnz
test
adcl
call
ja
add
cmp
daa
inc
add
call
test
push
cltd
and
and
subb
sahf
hlt
push
add
es
mov
xchg
cwtl
out
or
add
xor
adc
and
inc
sub
pop
mov
mov
push
cmp
lahf
or
addb
movsb
jns
mov
jnp
arpl
pusha
lret
mov
add
xchg
sub
dec
and
sub
mov
aad
jb
mov
cmp
mov
ja
xlat
mov
lock
mov
jle
adc
enter
lock
clc
xor
lahf
mov
orb
cmp
add
inc
out
int
les
push
pushl
cmp
adc
rol
sub
movsl
fcomip
psraw
jmp
add
add
ds
mov
int
xor
mov
js
or
push
rcr
loopne
push
and
jg
pop
gs
jle
rcl
dec
sub
pushf
adc
mov
ror
sbbb
mov
lock
fldcw
jge
add
ja
push
cltd
xor
add
cmpsb
sbb
sti
fcomp
cmc
adc
mov
ds
add
push
cmpsl
cmp
mov
mov
hlt
out
xlat
ficomps
sub
aaa
add
lahf
or
xchg
xor
xchg
fcmovb
xor
jle
je
movsb
es
das
cmp
loopne
lods
outsl
jae
push
add
mov
xchg
dec
pop
add
stos
jno
setge
sub
fs
mov
and
loopne
add
hlt
add
sub
incl
js
aas
cmp
or
movsb
lods
rcrb
jle
outsl
das
inc
pop
add
fisubrs
add
xchg
in
cmp
jge
sbbb
inc
xchg
inc
popa
add
xor
mov
js
inc
sub
arpl
pop
rol
pop
xor
loop
adc
mov
jecxz
sub
daa
mov
mov
dec
es
or
xchg
sub
test
nop
in
add
icebp
rol
push
xchg
movsl
int3
add
inc
and
and
mov
outsl
pushf
add
pop
xchg
mov
bound
adc
test
aaa
daa
and
sub
mov
add
negl
cmp
je
add
push
add
sbb
or
xor
repz
sub
hlt
add
push
pop
xor
and
jo
add
out
fists
cmp
repz
sub
jl
js
repz
add
inc
gs
add
pop
sub
xor
pop
pop
not
out
pusha
push
and
push
xlat
add
ret
cwtl
mov
dec
int
mov
in
loope
dec
cmp
cmp
cli
cmp
xchg
add
les
daa
out
and
int
mov
push
incb
pop
push
notb
dec
out
sub
mov
aam
fwait
pop
jo
mov
xchg
mov
rcll
add
fimull
repnz
add
test
mov
inc
loopne
add
cli
add
pop
das
mov
bound
subl
fisttpll
jae
cmp
cld
xchg
loopne
movl
sti
shlb
mov
cld
add
dec
add
mov
mov
mov
daa
or
imul
mov
push
rolb
ret
mov
add
pusha
add
aas
mov
pop
mov
mov
push
mov
mov
shlb
add
sbb
fists
scas
or
clc
filds
repz
or
inc
mov
rolb
loopne,pt
dec
lahf
in
sar
or
add
pop
xchg
add
sub
movsb
pop
pop
dec
shlb
cmp
mov
into
pop
mov
push
sbb
adc
repnz
mov
mov
rcrl
add
sbb
out
ret
mov
or
jno
nop
adc
dec
popa
xor
rep
fs
dec
dec
xchg
add
incl
sbbl
sub
push
xor
pop
inc
aam
jl
fcom
stos
or
mov
or
jbe
add
jg
push
in
lcall
push
loope
adc
add
idivb
add
cmpsb
movsl
mov
notl
pushf
and
xchg
sbb
xlat
in
ficompl
add
ljmp
pop
add
or
cmp
add
pop
xor
fsubs
loope
pushf
or
jo
addb
daa
pop
outsl
add
cmp
xor
gs
movsl
aas
mov
jmp
pushaw
add
addl
cwtl
loopne
mov
xor
hlt
js
add
sbb
and
dec
hlt
xchg
xchg
dec
xchg
and
mov
inc
shrb
sbb
mov
enter
cmp
and
dec
push
mov
add
dec
or
push
ds
cltd
out
mov
iret
mov
xchg
xor
and
pop
add
dec
adcb
imul
push
loopne
mov
or
lea
sub
fnstsw
mov
ret
xchg
addl
or
and
and
insl
adc
gs
and
mov
xor
jle
pop
mov
sbb
pop
dec
jmp
aad
sub
mov
cmp
dec
inc
xor
gs
test
call
lea
jecxz
lds
add
fdivl
cltd
push
push
sahf
jns
pusha
outsl
jns
fildll
push
dec
add
nop
mov
jno
pop
add
outsl
add
add
into
nop
push
pop
test
sub
jne
mov
faddl
sbb
insl
lret
fcom
or
add
push
add
negb
mov
loope
xor
lock
cmp
fs
dec
jno
or
mov
in
sub
dec
sub
andb
dec
cmp
mov
rorb
dec
insl
cmp
and
dec
add
inc
add
sbb
push
ret
icebp
adc
inc
add
xor
pop
sbb
mov
test
add
fcoml
shl
idivb
inc
sub
rolb
pop
ss
fcomps
rolb
xchg
cmpb
jae
jo
gs
add
inc
das
pop
jo
mov
add
mov
dec
es
mov
push
clc
mov
dec
lahf
add
jge
ret
push
rorl
sub
pusha
or
and
enter
pop
add
pop
sbb
dec
icebp
sarb
dec
insl
sub
les
fsubs
pop
add
jge
out
stos
int
mov
pop
push
pop
jl
pop
stos
inc
lock
test
pop
pushf
adc
mov
jo
lds
inc
sbb
push
add
je
adc
adc
xchg
rcr
mov
and
lock
add
xor
add
pop
int3
xchg
or
mov
pop
add
push
movsb
jmp
add
enter
faddl
xchg
xchg
push
mov
or
sbb
mov
inc
fbld
add
loope
add
sub
adc
jns
or
movsb
inc
in
or
cmc
or
mov
inc
inc
add
sbb
sarl
loopne
out
push
lret
filds
imul
in
dec
shll
add
push
add
push
or
stos
jo
dec
roll
pop
idivb
push
roll
add
sbb
cmp
mov
add
dec
mov
pusha
daa
add
mulb
dec
sub
int3
cmp
lahf
test
dec
xchg
cmpsb
add
shrl
pop
shlb
push
xor
movsb
lock
add
adc
pop
or
and
mov
dec
push
inc
movsb
mov
xchg
or
cmp
jo
sar
mov
dec
andb
les
add
pop
je
add
nop
sub
sbb
pusha
into
mov
and
cmc
aas
repz
push
mov
call
add
inc
adc
outsb
shl
cs
add
dec
fmuls
and
les
cmp
pop
xor
add
dec
loopne
jo
jl
push
add
jg
push
in
adcb
or
add
jb
int
adc
repnz
inc
movsl
and
int
call
es
repz
inc
add
rorl
add
mov
inc
and
imul
outsl
push
mov
icebp
stc
sub
es
daa
fcoml
in
les
out
fxch
cmpsb
loopne
rclb
sub
cmp
dec
fidivs
pop
rclb
xchg
pop
cld
add
sub
addl
std
imul
daa
sti
aaa
lds
push
xchg
add
pusha
xorl
stos
xor
and
dec
adc
cmp
add
call
lods
aas
and
int
jnp
cmpb
and
ss
fs
inc
xor
in
fdivrl
call
popa
push
push
push
mov
test
xor
cmpsl
outsl
fiadds
lret
clc
push
inc
xor
add
or
jg
pop
adc
pop
fs
add
enter
sbb
jp
add
fwait
sub
jle
xchg
jne
adc
lret
sub
add
and
pop
add
mov
enter
out
or
mov
pop
fimull
xchg
jns
out
inc
test
xor
ret
clc
inc
pushf
pop
ds
mov
push
mov
mov
add
push
aas
mov
stc
add
gs
mov
cmp
es
push
lock
test
xchg
jge
call
dec
mov
jecxz
mov
and
xor
movsb
add
pop
jp
add
movsl
insb
inc
push
out
pop
divb
adc
imul
xchg
push
call
into
sbb
cmp
leave
lea
add
icebp
movb
lret
adc
shll
jae
dec
outsl
rolb
and
or
negl
lods
jecxz
cmp
sub
or
imul
mov
lcall
inc
push
out
pop
add
loop
mov
out
loopne
nop
mov
push
incb
cmp
pop
sbbb
or
cmp
mov
jbe
add
pop
mov
mov
aas
cwtl
dec
pop
xchg
push
add
or
add
push
xchg
cmp
pop
jns
add
mov
jo
addb
adc
xchg
ret
sarb
push
and
adc
pop
inc
daa
jnp
fildll
cs
dec
mov
adc
xchg
in
jle
dec
mov
addb
cmp
pop
or
adc
add
insb
popf
inc
pop
xor
loop
imul
adc
cmp
xchg
sub
popa
ret
cmp
and
enter
push
add
mov
xchg
pop
cltd
add
add
xorb
sbb
cltd
movsb
les
xor
pop
mov
clc
add
and
test
add
rolb
call
mov
cmp
outsb
fwait
out
adc
sub
adc
sbb
add
and
sub
addr16
mov
fisttpll
incb
jp
push
stc
push
fs
scas
cld
and
mov
push
cmp
nop
add
jnp
gs
fiadds
xchg
lds
sub
loop
decb
scas
xchg
sbb
jecxz
push
cmp
dec
in
call
and
or
inc
dec
fdivl
xchg
pop
and
test
push
repnz
push
adc
aam
mov
cmp
pop
and
adc
add
push
cs
in
mov
in
push
and
cmp
push
int3
addb
add
jns
dec
cmp
lock
fld
add
loope
fs
pusha
nop
loopne
inc
dec
in
cli
sbb
dec
mul
mov
xchg
dec
loopne
fisubrs
add
mov
cmpsl
xchg
xchg
add
test
incl
clc
rolb
mov
sti
mov
push
pusha
lret
add
add
mov
inc
pop
out
outsl
pop
loopne
loope
xchg
sub
sub
testb
jbe
pushf
out
add
sbb
jg
pop
aas
roll
arpl
lods
pushf
dec
lock
scas
pop
and
mov
add
push
xchg
xor
jnp
sar
mov
dec
js
and
sbb
add
sahf
out
fwait
mov
lock
xlat
xchg
repnz
or
insl
fldl
add
sarb
add
outsb
hlt
aas
pop
pop
push
add
test
cmp
mov
cmc
das
jbe
xchg
xor
popf
inc
or
repnz
mov
jl
inc
out
rorl
rorb
or
add
cld
add
and
and
add
xchg
xchg
push
xchg
dec
adc
pop
add
imul
pop
add
pushf
jns
sbb
cmp
rclb
inc
push
insl
push
xchg
ja
add
cmpsb
pushf
lcall
dec
repz
jo
das
sti
sbb
nop
pop
enter
add
push
xchg
repz
cmp
sub
xorb
add
cli
int3
mov
jae
ss
call
jge
cmpb
imul
pop
sbb
repnz
pop
pop
cld
inc
add
fisttpl
xchg
inc
add
xor
add
jp
sub
and
or
div
mov
jecxz
mov
and
jmp
inc
test
add
pop
leave
pop
lret
mov
add
movl
dec
loopne
enter
pusha
jo
cs
andl
out
add
cmp
test
xchg
ficomps
jb
push
ds
test
repnz
daa
pushf
and
mov
jecxz
leave
int3
aaa
mov
or
dec
mov
xchg
cmp
add
adc
xor
mov
or
inc
loopne
add
add
sahf
rcrb
mov
iret
test
call
push
mov
sub
dec
addb
xchg
std
add
xchg
add
loop
push
mov
adc
xchg
bound
aad
inc
daa
and
cwtl
or
pop
jno
imul
imul
popa
sub
push
xor
int3
push
add
dec
inc
mov
add
mov
mov
or
outsl
add
mov
mov
icebp
sub
fidivrs
pushf
cmp
loopne
dec
outsl
jo
mov
pushf
popa
and
and
scas
push
and
shrl
cli
push
sbb
fdivrl
mov
pusha
adc
add
xlat
stos
mov
sub
inc
lea
mov
sub
add
xor
xchg
jns
gs
sbb
fmull
pop
cmpsb
or
xchg
push
dec
mov
ret
sub
call
dec
cmp
fs
sub
cmc
pop
ds
nop
out
sbb
cmovno
rcl
dec
es
das
sub
lock
lea
pop
dec
lods
adcl
je
push
fsubr
sti
dec
subb
xor
mov
pop
ljmp
mov
add
xor
push
add
dec
test
jb
loop
mov
ficompl
xchg
jp
cmp
mov
dec
inc
mov
inc
ret
les
add
mov
outsl
sbb
cmp
fs
mov
push
jl
xchg
clc
mov
mov
push
ret
ja
mov
lods
enter
xor
cmp
call
mov
jecxz
lea
or
mov
movsb
add
mov
push
clc
dec
add
pop
jg
or
aam
push
mov
lods
add
sarb
pushf
add
pop
jae
rcll
lret
add
mov
cmc
loop
jnp
push
jae
in
inc
inc
adc
and
jo
adc
add
pop
jp
outsb
sub
fldl
test
or
stos
add
mov
dec
in
xor
mov
mov
adc
adc
ret
and
mov
sub
cld
mov
or
rcrl
movsl
movb
or
nop
mov
dec
fisubs
sbb
fists
cmpb
dec
mov
pop
add
mov
cmp
fstl
push
xor
add
rolb
lret
mov
gs
mov
lock
bound
adc
dec
pop
lret
loopne
cmp
fwait
dec
inc
inc
xlat
mov
inc
and
add
scas
xor
add
dec
mov
jle
jns
jl
add
fisttpl
lods
sarb
lea
add
pop
add
and
jbe
add
jg
mov
lds
jno
pop
sbbb
cmc
les
xor
insl
push
mov
in
addl
adc
aas
mov
repz
cltd
sahf
jg
cmp
jbe
clc
shll
mull
imul
add
add
adc
cwtl
sar
dec
stc
add
mov
push
add
mov
scas
arpl
aad
add
pushf
xor
ficompl
add
jecxz
mov
adc
sub
sub
add
add
mov
xor
add
add
subb
das
clc
aam
out
sbb
sub
xor
adc
pop
repnz
push
xor
xor
nop
rcr
add
imul
mov
add
xchg
xor
mov
inc
in
cmp
mov
sbb
add
mov
nop
push
loop
fsubs
enter
shl
add
add
or
jns
jmp
roll
rol
or
shlb
mov
cltd
add
and
jo
negb
pusha
cmp
mov
out
cltd
xorb
fiaddl
enter
adcl
push
dec
lahf
sbbb
add
out
inc
mov
jmp
dec
xor
inc
dec
push
data16
cld
mov
clc
cli
leave
push
mov
push
inc
data16
and
pop
out
jge
mov
or
rorb
sub
push
jl
pop
je
mov
add
mov
pusha
fsubl
jmp
mov
into
add
adc
loope
ss
add
mov
int
jecxz
sbb
stos
or
je
or
push
mov
daa
cmp
jae,pt
fidivrl
arpl
add
jno
jge
pop
adc
sbb
push
in
arpl
popa
out
add
mov
fistps
xlat
mov
sbb
and
int
add
es
test
add
dec
push
pop
add
enter
cmp
pop
aas
dec
orb
cmp
add
jo
mov
jg
add
outsl
inc
mov
leave
xor
aad
js
test
mov
fcoml
cld
ljmp
sbb
jo
les
xchg
jp
ss
sub
pop
xchg
shrb
pop
push
add
jp
mov
rol
sub
add
pop
mov
jg
inc
cld
pop
mov
dec
es
pop
rorb
orb
syscall
adc
jecxz
hlt
hlt
pushf
mov
setle
jp
pop
leave
fnstenv
int3
daa
scas
mov
dec
push
sub
or
inc
fimuls
shlb
cmp
adc
out
paddsb
ret
push
jo
adc
inc
out
and
push
pop
into
jne
jae
sbb
mov
hlt
into
aaa
or
push
lcall
dec
and
movsl
sub
fisttpll
push
out
mov
clc
adcl
iret
or
insl
inc
pusha
push
sub
scas
je
inc
data16
mov
cwtl
cmp
push
cmc
mov
push
cwtl
jecxz
xchg
clc
add
fnstenv
xchg
add
dec
orb
sbb
add
gs
roll
push
lods
test
mov
xchg
imul
lods
int
jp
mov
sbb
and
lea
mov
jo
fcoms
sbb
push
lcall
and
sbb
outsl
scas
in
fs
insb
add
sub
dec
or
adc
out
add
addl
lret
push
jno
add
jge
nop
xorb
add
jmp
pusha
or
cld
mov
adc
dec
pop
lock
mov
add
add
adc
fstpl
mov
test
and
or
fistpl
jne
hlt
dec
lods
imul
cwtl
pop
cmp
in
add
mov
sti
sub
aam
add
scas
inc
mov
je
lahf
stc
faddl
xchg
cmc
divl
mov
ret
jp
lock
sbb
add
xchg
enter
add
ljmp
jno
add
push
xchg
or
cmp
adc
orl
add
mov
cmp
mov
dec
jbe
add
and
lock
add
push
pop
js
mov
aad
cmp
jl
test
xchg
sti
pop
daa
push
push
or
add
xor
xlat
xchg
cwtl
add
push
cwtl
test
mov
add
adc
lds
inc
fisubl
or
inc
movsb
xchg
lret
movsb
adc
sub
jmp
or
lds
mov
push
cmpsb
ret
mov
inc
cmp
pop
dec
rcl
stos
jb
dec
xchg
sub
mov
add
cmpsl
in
or
inc
ss
cwtl
mov
jo
lret
ljmp
stc
repz
pop
sub
in
cmpsl
cmp
jno
add
out
stc
lods
inc
xchg
mov
add
push
aad
popa
cmp
sbb
push
addr16
xor
mull
das
mov
sbb
push
add
stos
xchg
jno
xor
popa
and
jp
mov
cs
add
pop
nop
mov
daa
cmp
add
sbb
bound
in
jb
sarb
insb
sub
or
xlat
movq
leave
repz
cmpsl
aas
add
cmp
or
inc
subb
dec
add
sahf
push
xchg
out
pop
push
out
sub
push
scas
pop
add
inc
mov
loop
add
jp
add
cmp
add
mov
adc
push
nop
pusha
test
dec
ja
add
filds
pop
adc
cmp
add
fists
sbb
lods
dec
sbb
mov
test
inc
mov
cmp
test
pushf
fisttpl
hlt
and
inc
sub
or
roll
add
test
mov
mov
rolb
arpl
mov
ja
push
int3
out
nop
pop
mov
bound
xchg
pop
mov
aas
repnz
cmp
or
sbb
push
cmp
fcmovnb
add
push
std
mov
mov
test
shl
cli
pop
cmp
mov
fistpl
fadds
cmc
ljmp
lret
loopne
push
andb
hlt
rclb
aas
add
into
jmp
sub
sub
add
iret
call
adc
arpl
sarb
add
aas
xchg
je
or
and
ret
push
sub
orb
mov
outsl
inc
add
loopne
fisttps
dec
sub
test
push
inc
enter
daa
mov
sarb
pop
mov
sqrtps
icebp
data16
or
mov
test
dec
enter
adc
mov
push
cmpsb
cmp
sbb
outsb
shl
cmp
add
lods
ret
nop
and
xchg
push
mov
adc
push
inc
add
dec
call
ljmp
inc
xchg
fnstcw
dec
xchg
mov
cwtl
mov
fcmovnu
std
fldl
jle
call
in
push
outsb
add
mov
dec
xchg
dec
mov
test
fidivrl
and
mov
mov
add
icebp
xor
push
pushfw
mov
lea
fdivrl
fstpl
or
leave
inc
jno
jmp
pop
orb
into
mov
das
je
lods
jbe
push
add
xchg
add
dec
fidivrl
add
cld
scas
inc
pusha
jb
push
cmp
pop
add
dec
lods
rorl
test
stos
add
and
cli
movsb
sti
outsb
add
ror
jmp
cld
add
jb
mov
pop
lds
add
xor
sbb
and
jns
mov
jo
inc
cmp
cmp
add
and
test
fs
lcall
push
xlat
push
sbb
stos
xchg
pusha
outsb
inc
out
enter
into
lods
dec
movsl
and
cld
inc
or
movsb
mov
flds
add
add
fs
cld
in
pop
stc
jl
dec
insb
clc
add
cli
add
xchg
cmp
add
dec
xor
stc
pop
or
xchg
in
and
aad
pop
divb
xchg
push
sub
mov
test
insb
adcb
dec
mov
rclb
mov
add
rol
cmp
sti
cmp
jnp
imulb
adc
mov
add
clc
dec
call
push
pop
add
das
dec
arpl
mov
icebp
dec
lods
push
popa
cwtl
adc
xorb
loopne
add
push
nop
cmp
lods
or
shlb
dec
xchg
add
hlt
repnz
xchg
not
add
jle
shlb
add
add
clc
sbb
aam
addb
push
hlt
sub
add
in
xorb
add
sbb
xchg
add
iret
clc
push
rcrl
hlt
pop
pusha
xchg
subl
mov
add
pop
push
das
stos
xor
repz
or
add
imul
rolb
push
pop
dec
mov
or
adc
mov
mov
hlt
add
or
aas
add
mov
inc
call
jmp
add
aaa
movsb
inc
loopne
aam
add
daa
dec
mov
in
nop
pop
add
ljmp
jecxz
cmpsl
mov
nop
jmp
xchg
call
xchg
mov
sbbb
mov
and
add
lds
pop
jne
xchg
stos
jl
fnsave
rcrl
je
jo
iret
jmp
test
jl
mov
stc
jmp
pop
or
add
hlt
add
and
iret
push
push
orb
fwait
add
pop
out
test
repnz
adc
movsb
daa
add
cs
jo
mov
add
es
loopne
sub
fisttpll
gs
mov
scas
or
or
scas
ljmp
pop
out
into
cmp
mov
pop
lock
xor
jb
adc
mov
into
xor
shl
lret
test
or
sub
pop
cmpl
mov
ret
out
sub
pop
inc
lea
dec
hlt
clc
daa
jo
or
add
sbb
jb
add
test
sbb
enter
jle
jge
int3
dec
push
xchg
dec
inc
loop
pop
test
and
and
fiadds
jne
movsl
cwtl
js
sbb
sub
add
int3
js
lret
cmc
xchg
nop
es
sbb
pop
mov
pop
leave
add
movsl
pop
push
sti
adc
lods
add
data16
out
stos
mov
add
adc
stos
push
adc
inc
xor
enter
popa
add
insb
adc
in
and
add
push
lret
jl
in
mov
and
mov
adc
sbb
mov
fldcw
add
in
pop
sbb
imul
cmp
daa
xor
movsl
clc
mov
pop
add
xor
mov
add
stos
pop
and
lods
clc
mov
into
sbb
sbb
mov
dec
fsubs
stc
fmul
enter
add
clc
cli
cltd
sbb
popa
add
ret
pop
add
add
jnp
add
dec
mov
mov
adc
loopne
repz
dec
mov
fidivs
lcall
inc
jge
ja
faddl
movsb
xchg
cmp
add
xor
push
scas
xchg
sub
add
jne
jb
add
jbe
incl
push
add
mov
loope
add
loop
ja
push
dec
les
add
xchg
cmp
push
jo
mov
loope
test
movl
out
mov
jmp
push
je
and
pop
out
aas
out
sbb
mov
idivl
add
mov
mov
sbb
mov
cld
cltd
into
and
xchg
or
xor
das
jns
jge
adc
pop
imul
add
jo
rorb
adc
ljmp
arpl
add
imul
push
rcrb
fwait
add
sbb
cltd
push
cwtl
dec
or
add
test
add
mov
cltd
mov
sti
insl
sub
and
push
ja
mov
repnz
addr16
les
jl
jo
add
pop
add
dec
rcrb
ret
add
push
push
inc
adcl
mov
add
mov
subl
sbb
dec
xchg
pop
in
cmp
mov
or
mov
sub
adc
push
add
mov
xchg
pop
add
call
inc
fwait
enter
push
add
int
mov
xchg
in
add
pop
ret
sub
lret
cmp
lcall
adc
hlt
dec
xlat
pop
out
in
out
dec
sub
fnstenv
jmp
jle
jbe
fiaddl
int
ret
xchg
sbb
push
fsubrl
out
sbb
jmp
popf
add
mov
xchg
loopne
fwait
sub
add
jae
mov
push
inc
pop
sbb
hlt
dec
or
sbbb
sub
js
fsubrs
mov
pop
cmpsb
es
lret
enter
add
arpl
sar
mov
pop
jl
or
xor
sub
add
push
mov
call
testb
lea
xchg
std
xchg
push
lret
xor
sub
aaa
test
add
int
pusha
fbstp
roll
enter
loopne
adc
pop
test
dec
jbe
ljmp
inc
and
sub
out
arpl
add
mov
in
outsl
mov
add
shrb
inc
stos
enter
adcb
adc
sbb
xchg
add
ss
xchg
add
cmpsl
mov
xlat
rcr
xor
xor
std
dec
sub
push
adc
push
mov
in
aad
push
xchg
or
mov
pop
jo
add
pop
lock
std
dec
cmp
popa
repnz
daa
decb
ja
and
mov
mov
mov
rcrl
ret
adc
pop
les
repnz
imul
loope
inc
push
mov
into
lea
es
push
lods
cmc
rclb
jne
lcall
push
xor
pusha
add
incl
loope
icebp
mov
test
mov
fistpl
ja
cltd
xchg
jns
sbb
xor
jbe
push
add
or
cpuid
daa
push
fs
nop
dec
insl
mov
js
xchg
pop
pop
jo
add
mov
ljmp
adcb
cld
add
std
jb
cmp
popa
pop
jge
subb
cmp
adc
sbb
addl
nop
loop
shrb
dec
lods
in
jae
adc
pop
nop
loopne
add
inc
nop
xchg
pop
mov
jmp
lcall
iret
mov
ljmp
lret
mov
add
add
inc
mov
sbb
add
in
sbb
ds
orb
xlat
call
inc
push
outsl
add
or
xorb
pop
sahf
push
mov
cwtl
or
fiaddl
mov
negl
cltd
sub
test
sub
mov
pop
jl
je
lods
cwtl
stos
pop
pop
xor
cmc
cmc
pop
lcall
lahf
nop
add
jo
icebp
xor
cmp
pop
rcrl
ljmp
hlt
sub
mov
sbb
sub
fs
cmpsl
ja
dec
mov
mov
rcl
lock
adcb
outsl
jae
push
call
stc
mov
push
sub
cltd
cmp
mov
push
jmp
push
xchg
lcall
and
movsl
mov
cmp
push
mov
repnz
iret
rclb
pop
movb
imul
into
leave
loopne
add
out
fidivrl
sbbb
xchg
mov
arpl
cmp
inc
cmp
imul
sbb
fsin
mov
out
test
sub
mov
js
and
pop
adc
sub
add
or
jb
push
or
push
adc
andb
and
pop
jl
les
pop
add
cmp
mov
out
lret
loopne
jnp
adc
or
addb
sbb
lcall
in
movb
aad
sti
mov
stos
inc
negb
sub
adc
cwtl
sub
cs
mov
mov
inc
shlb
imul
sbb
mov
jp
psubw
inc
out
xor
cmp
pop
cs
add
dec
inc
fcoml
ja
push
or
in
xor
and
fidivs
jae
imul
lods
pusha
scas
and
dec
sahf
push
ffree
xchg
xchg
arpl
enter
and
jmp
jo
add
call
hlt
movsl
pusha
cvtpi2ps
dec
loope
aad
or
mov
rorb
outsl
call
push
mov
add
add
jecxz
mov
mov
jb
xchg
push
lcall
cmp
test
ljmp
cmp
add
inc
out
lahf
mov
or
je
or
push
sti
jp
xor
push
mov
push
fimuls
lcall
add
ret
sub
cwtl
pop
inc
les
jp
lods
push
sbb
adc
sub
es
cmp
mov
out
inc
add
pop
cmp
pop
repz
push
dec
sti
inc
add
and
cmp
in
xor
mov
xchg
cwtl
xor
imul
push
leave
push
and
add
rcrl
nop
xor
mov
add
sub
leave
jb
imul
mov
sub
mov
jge
movsb
adc
in
call
mov
iret
out
sub
push
and
xchg
rcrb
pshufw
std
stos
pop
and
adc
lret
mov
or
mov
pushf
cmp
add
xchg
pop
test
sti
xor
cmc
add
inc
cmpsb
mov
shrb
dec
rclb
mov
add
jle
xchg
negb
divl
test
sub
loopne
xor
ja
jge
aas
pop
xchg
bnd
insl
inc
dec
xor
or
mov
add
cmp
mov
scas
and
shr
rcrl
rolb
push
test
sbb
cmpsb
sub
fdivs
inc
adc
pop
adc
jne
cmpsb
mov
je
cmp
push
inc
out
xchg
add
or
adc
pop
shrl
adc
cmovl
mov
xchg
mov
jmp
inc
frstor
in
cmp
in
push
stos
or
mov
in
insl
add
mov
jmp
popa
sub
cli
lods
cwtl
test
cltd
add
sti
mov
inc
pop
xchg
sbb
sbb
call
push
call
or
sbb
and
cmp
arpl
push
cmpb
mov
dec
mov
add
dec
fcoml
jl
push
or
xchg
sub
or
inc
les
cwtl
push
mov
call
shl
push
jl
fidivrl
cltd
or
in
xor
movsb
in
scas
jmp
lock
xlat
adc
loope
int
sub
sti
sub
ret
je
cmp
test
lea
rcll
dec
fwait
inc
add
jo
add
and
fistpll
js
sbb
movsb
pop
cmpsb
xor
loopne
push
cli
inc
stos
mov
frstor
jno
cmp
pop
lret
scas
mov
ret
int
aaa
mov
fisttpll
mov
shl
cmp
cmp
xor
sbb
jmp
adcl
add
cwtl
and
adc
jbe
pop
rcl
pop
clc
inc
dec
add
jb
or
add
pop
xchg
out
clc
pop
mov
dec
fpatan
mov
inc
lock
jp
fsubp
sub
pop
jnp
outsl
das
leave
into
rolb
adc
lea
js
mov
inc
out
ja
jecxz
clc
add
mov
lock
push
pop
int3
nop
add
addr16
test
xor
dec
cmp
sbb
add
fisubl
adc
les
sub
call
mov
daa
push
xchg
ficomps
xor
add
ss
jne
pop
insl
decl
inc
push
aam
nop
or
mov
out
sub
lods
jno
test
inc
leave
out
repnz
add
dec
dec
loope
xchg
add
push
push
inc
or
cs
xorb
lcall
or
and
xor
div
cltd
and
subb
sbb
mov
ror
addr16
pop
lret
mov
insb
cmp
ret
rol
xor
add
ret
imul
incb
arpl
js
add
xchg
mov
add
icebp
arpl
inc
mov
mov
dec
mov
dec
xor
adc
and
jno
xor
repnz
testb
or
fidivl
mov
dec
pusha
adc
rolb
pop
call
movsb
xchg
test
arpl
push
loope
mov
add
and
mov
jno
enter
xchg
add
xor
pop
sub
in
push
ret
rcrb
and
add
sub
subb
sub
out
rclb
sub
sbb
notb
nop
sbb
ret
ja
mov
add
push
flds
cmpb
stc
adcl
pop
dec
add
dec
int
or
mov
mov
imul
test
mov
into
pop
jecxz
outsl
mov
push
sbb
or
jns
dec
sahf
sub
pushl
fidivs
loope
jno
rclb
sub
ret
inc
mov
lret
sub
mov
mov
mov
pop
loop
pusha
xchg
push
call
out
jp
test
add
cld
popf
nop
cli
js
push
fisubs
xchg
inc
cmpsl
pop
push
and
ret
jp
sbb
hlt
aas
pop
sbb
pop
mov
lds
xchg
xorb
test
ror
bound
ret
cmp
addr16
gs
stc
sar
mov
popa
pop
ret
cmp
mov
add
inc
imul
shrb
shld
and
pusha
in
xor
in
xor
dec
enter
jmpw
xchg
mov
xchg
xchg
repnz
movsl
add
lock
jle
jecxz
jnp
or
mov
int
addl
cmp
mov
into
adc
sub
or
mov
fidivs
cmc
inc
push
decb
ljmp
add
icebp
dec
out
mull
sbb
mov
addl
jne
movl
dec
cmpsl
mov
jl
push
push
dec
add
inc
lcall
mov
test
inc
lahf
push
aad
pusha
lret
add
out
xchg
jb
mov
or
mov
js
rclb
sti
pop
enter
jno
jl
mov
pop
test
test
ja
bound
xor
jl
sub
mov
cmp
add
test
push
pop
in
mov
push
inc
rol
bound
lock
dec
jnp
adc
fildl
xor
xchg
or
mov
inc
ror
adc
repnz
push
push
xchg
imul
cmp
rol
push
inc
loope
jmp
mov
ret
cld
seto
dec
xchg
pop
xor
dec
loopne
je
data16
add
popa
ja
pop
sub
add
out
pop
in
cmp
adcl
mov
inc
or
fstpt
loope
dec
out
add
add
in
jns
xor
sbb
addb
push
enter
fcmovnu
pop
inc
stc
adc
push
ljmp
pop
mov
sub
mov
lcall
sbb
mov
mov
loopne
lds
xor
mov
cmc
xchg
fs
int3
mov
in
test
xchg
xor
push
cmp
xchg
sbbb
jbe
add
inc
in
push
inc
xlat
pop
sbb
rorl
cltd
cmp
push
insl
cmp
or
sbb
and
push
add
push
bound
test
sbb
test
lods
daa
add
hlt
push
shll
lods
inc
mov
jmp
sbb
or
xor
mov
nop
roll
mov
push
push
in
das
and
popa
adcb
push
xchg
addb
hlt
out
or
dec
and
imul
fdivl
pusha
pusha
out
or
add
xorb
rcrb
mov
xchg
xchg
ret
xchg
repnz
add
lock
stos
jo
add
inc
sbb
lds
aaa
mov
mov
clc
ljmp
mov
cmp
sub
and
sahf
inc
shlb
dec
adc
cmp
push
add
pop
in
sub
stos
add
and
clc
mov
sarb
int
jg
das
dec
mov
ja
imulb
int3
cmp
xor
pushf
add
sub
lahf
sub
iret
add
pusha
ljmp
or
mov
cltd
add
cwtl
and
mov
sbb
xor
inc
out
add
mov
aam
fisubl
cmc
sub
or
mov
test
lret
cmc
dec
mov
or
out
adc
sahf
and
adc
dec
setl
sub
lret
add
mov
cli
sub
add
push
lret
lods
aas
and
sbb
lds
insl
inc
scas
sbbb
push
ficoml
fs
dec
dec
js
mov
push
shlb
mov
loopne
add
xchg
or
movsl
xor
imul
mov
std
jo
xor
jo
push
fsubs
int3
stc
xlat
sub
lods
cmp
lods
dec
daa
les
mov
jecxz
ficoms
fadd
add
jo
pop
les
loope
sub
jmp
leave
cmp
and
movsb
and
adc
lock
and
jmp
inc
lods
jne
cwtl
dec
add
adc
cmp
movb
mov
pushf
dec
inc
shrb
sbb
nop
add
aas
push
jg
das
shlb
movsb
dec
fadds
add
xor
inc
hlt
jo
in
adc
adc
test
flds
lret
push
mov
aaa
mov
and
lods
cltd
daa
push
lcall
mov
adc
mov
cmp
movsb
mov
cmpsl
xchg
or
lahf
stc
sub
push
rolb
add
mov
fstpt
add
lret
fnstenvs
test
popl
xchg
xchg
in
jb
xchg
scas
xor
xchg
divl
scas
shrb
cmp
mov
cmc
xchg
add
andl
mov
shll
pop
push
inc
mov
dec
inc
sbb
xchg
push
iret
outsb
sub
inc
xchg
or
pop
push
dec
pop
test
jno
sbb
pusha
inc
lret
lds
dec
jg
out
test
call
fstps
fisubrs
xchg
inc
mov
mov
aam
pop
sahf
ss
fidivl
int3
enter
dec
jmp
in
orl
mov
mov
cmpsb
cmp
or
into
inc
mov
pop
mov
sub
xchg
jmp
andb
mov
push
push
jb
sub
lret
dec
in
pusha
out
pusha
je
stos
lds
mov
xchg
loopne
or
add
lds
cmp
in
mov
xchg
pushf
xor
mov
xchg
ds
push
and
test
push
xorb
push
out
push
loop
fbstp
sbb
jnp
adc
xlat
cmp
add
call
dec
aaa
in
fwait
mov
xor
aaa
dec
dec
jb
xlat
in
cwtl
pop
or
mov
jne
jb
rorl
arpl
testl
outsl
std
call
sub
inc
xlat
or
arpl
ja
pop
add
enter
inc
fbld
sub
cmp
pop
stos
jnp
data16
mov
jle
mov
repz
add
add
mulb
push
or
jbe
popa
adc
adc
mov
sub
sbb
or
add
fisubl
pop
lods
stos
rcrb
add
jns
push
lcall
nop
outsb
add
outsb
lds
or
scas
add
sub
push
imul
jae
push
cwtl
adc
movl
push
dec
dec
sub
lock
fwait
adc
xchg
movsl
or
push
xchg
and
xchg
mov
dec
je
scas
xchg
xchg
es
push
lock
jp
or
rdpmc
mov
add
dec
rclb
dec
jne
add
loop
mov
insb
push
pop
adc
sbb
jecxz
aam
bound
adc
notl
pop
outsl
in
adc
xor
pop
mov
imul
xchg
fimull
or
or
js
pop
adc
lds
jbe
insb
jns
add
adc
repnz
call
inc
mov
pushf
shlb
or
mov
out
jle
sbb
popl
insb
or
adc
dec
adc
dec
rolb
inc
push
aad
fcompl
sbbl
movsb
push
add
sbb
mov
cmpsl
sbb
cld
clc
cmc
jg
sub
mov
and
dec
mov
pop
adc
mov
js
push
test
cld
add
movsl
add
int
xlat
sub
mov
dec
aas
add
push
gs
iret
jle
xchg
inc
push
leave
cmp
inc
push
fsubs
inc
fistpll
out
cld
outsl
and
stos
sub
add
push
jge
pop
inc
add
test
pushf
xchg
fmuls
shrb
mov
aam
fisttpl
inc
xor
sbb
arpl
lcall
xchg
out
jl
adc
cs
add
fisubs
sahf
or
adcb
loope
inc
adc
daa
add
es
add
cmp
cmpb
add
fwait
add
mov
sbb
daa
jnp
stos
ss
dec
das
jg
sbb
add
outsl
aad
in
mov
xorb
cwtl
movsb
inc
or
aam
pop
shlb
nop
jbe
mov
roll
fldcw
insl
jmp
mov
mov
sbb
cld
cmp
pusha
push
aaa
in
test
or
repnz
ljmp
mov
aas
xchg
add
lea
test
fs
sbb
jnp
imul
xchg
and
sbb
lret
imul
add
loopne
outsb
and
jbe
dec
xchg
aaa
addl
adc
shrl
adc
xor
clc
push
jns
and
mov
lret
sub
fisttpl
inc
adc
or
cli
inc
in
pusha
dec
mov
and
jmp
enter
jge
stos
fistpl
lods
pop
or
ret
cmpsb
movsb
nop
scas
adc
add
inc
scas
je
add
insb
and
mov
into
aad
push
int3
leave
sbb
jbe
push
xchg
and
sub
das
xor
fs
push
frstor
pop
jae
mov
xor
xchg
test
cwtl
std
push
mov
sbb
cmp
xchg
mov
les
adc
adcl
leave
insl
es
dec
notl
mov
rol
arpl
imul
add
loope
xor
jbe
add
out
subl
pop
pusha
repnz
cli
add
mov
mov
add
inc
inc
xchg
clc
imul
iret
stc
xchg
mov
push
jg
rol
adc
int3
int
scas
adc
shrl
fimuls
lahf
xlat
addl
push
aam
jb
sub
dec
pop
pop
xor
add
push
mov
and
cmp
pop
shl
jl
adc
add
cmp
dec
mov
iret
adc
loop
inc
add
fistps
in
fdivp
jmp
popf
add
insl
pop
inc
leave
add
adc
daa
sbb
xchg
mov
mov
test
lds
cmp
dec
sbb
dec
iret
fdivrl
mov
mov
stos
pusha
out
movsb
adc
push
aaa
call
bound
cs
add
jnp
or
cmc
xor
add
push
inc
loop
add
pop
cmp
pop
mov
jno
xor
jl
shlb
pop
mov
sahf
hlt
push
lock
sbb
jge
sub
test
add
mov
sub
pop
in
push
js
jne
or
xchg
sub
rorb
out
and
fildll
add
xchg
test
hlt
cmp
sbb
push
and
xor
mov
pop
ret
in
test
inc
push
xchg
loopne
nop
loopne
inc
pop
adc
push
add
ret
pop
aaa
aad
add
inc
lahf
and
jge
mov
inc
and
movl
sbb
das
adc
sbb
and
inc
cmpsl
jg
les
add
pop
sar
adc
xor
push
mov
push
sub
jg
mov
mov
inc
mov
sbb
pop
out
mov
push
cli
mov
out
push
std
ficomps
addb
dec
gs
rcl
xchg
fwait
add
pusha
jle
cmp
sub
je
pop
pop
aam
mov
cmpsl
push
jb
outsl
idivb
ss
sbb
fistpl
jno
insl
push
icebp
in
add
add
jg
sbb
int3
mov
adc
cltd
pop
or
shl
pushf
mov
imul
sbb
sub
sbb
jmp
and
jbe
jmp
and
or
test
js
or
pop
and
xchg
insl
add
push
add
in
dec
pop
mov
shl
fildl
xor
imull
cmp
xchg
mov
out
pop
insb
cmp
add
movsb
and
jle
add
and
mov
mov
jp
add
inc
outsl
imul
jb
jnp
xor
add
test
repnz
add
and
and
dec
push
jb
rclb
mov
stos
add
dec
loopne
push
push
scas
popf
lret
movsb
add
push
pop
test
push
add
rcl
es
loopne
cmp
push
popa
push
push
push
pop
cmpsl
sub
cld
and
pop
push
mov
inc
mov
lret
shl
mov
fldenv
call
mov
sbb
jno
shrl
iret
aaa
cmp
inc
push
mov
ss
push
jmp
add
sbb
xchg
pop
adc
dec
daa
scas
orb
popa
mov
cld
push
xchg
pop
sbb
pop
aas
and
sbb
lds
in
xlat
andb
sbb
pop
push
sub
mov
add
xchg
icebp
cmp
and
lock
or
cwtl
push
add
or
add
subl
mov
jge
sbb
jecxz
push
xlat
xor
push
fiadds
cli
adc
das
push
adc
insb
ds
addr16
sub
and
adc
clc
push
push
inc
std
in
icebp
and
sbb
mov
jmp
xor
dec
add
mulb
mov
int
add
and
ret
sub
mov
subb
pop
xchg
add
push
sti
daa
mov
xlat
sbb
mov
add
je
addb
outsl
test
test
sbb
nop
fisttps
and
pop
test
push
add
sub
and
cmc
push
sub
push
push
call
dec
repnz
insb
dec
add
add
aas
or
adc
inc
mov
add
pop
mov
xchg
ljmp
ret
sbb
test
dec
pushf
nop
dec
sub
xor
mov
bound
and
in
pop
mov
add
sbb
mov
add
jg
out
mov
sahf
push
stos
jae
leave
out
and
mov
xor
dec
pop
movsb
cmp
dec
iret
addb
arpl
sbb
sahf
call
fs
pop
sbbb
mov
add
out
and
xor
jb
cmp
mov
inc
mov
arpl
insl
sahf
add
scas
inc
or
int3
std
out
add
popa
popf
mov
out
test
push
cmpsl
cwtl
cld
add
push
ret
jg
lods
lahf
enter
mov
mov
in
adc
jp
add
out
roll
sbb
jecxz
push
cltd
insl
loopne
pop
push
stos
sbb
dec
adc
mov
add
sbb
sub
adc
imul
sarb
out
stos
dec
test
out
shlb
aas
loopne
xor
in
or
dec
cs
jae
mov
jne
in
add
data16
shr
push
inc
xlat
xor
jbe
dec
add
lret
push
mov
inc
les
cmp
add
nop
sbb
or
movsl
repz
or
adc
subb
dec
repz
aas
push
inc
inc
insl
push
xor
push
pop
inc
repz
pop
aaa
sub
pusha
cmp
cmpb
movsb
repz
daa
or
cmp
subb
pop
and
mov
xor
and
adc
cmp
faddl
inc
and
out
xchg
or
sub
sahf
xchg
xchg
xor
lea
psrlw
aam
and
int
js
mov
out
pusha
pop
fiadds
test
and
xor
xchg
sub
mov
mov
inc
mov
in
notb
arpl
aad
and
out
cmp
dec
xchg
pop
xor
and
imul
pop
pop
daa
test
push
and
push
adc
lea
mov
sub
jo
cld
inc
rcrl
mov
xor
jmp
push
in
pop
jg
fnsave
inc
adc
outsl
pushf
mov
dec
test
out
inc
mov
jmp
sbb
orb
dec
dec
add
push
leave
cmp
add
lcall
ss
ja
add
fstpl
inc
loopne
insl
cmp
rcrl
pop
xor
stc
inc
fs
sbb
push
mov
dec
lods
out
push
dec
push
in
loop
pop
xor
xchg
add
jmp
and
arpl
int3
pop
dec
add
or
jmp
add
ret
pop
stos
loopne
das
test
fidivrs
out
mov
and
push
and
jno
cmp
insb
test
jg
sbb
incb
cmp
jbe
popl
in
insl
sbb
or
out
push
repnz
add
and
sbb
inc
fsub
lock
gs
mov
js
test
push
les
out
icebp
rcrb
inc
shl
loope
xor
add
add
out
mov
adc
xor
xor
in
pusha
cmp
add
loop
int
and
dec
dec
sbb
fs
shlb
loope
jg
add
repz
movb
fldl
mov
add
xchg
fadds
jbe,pn
xchg
out
ret
add
cmpl
pop
fcom
roll
fwait
xor
testb
insb
loopne
lret
cmc
mov
adc
aam
out
add
dec
adc
sub
dec
gs
mov
ret
mov
cwtl
adc
inc
bound
or
inc
andl
xchg
push
add
pop
mov
in
xor
push
imul
or
lea
cmp
push
push
cmc
cmpsl
mov
gs
cmp
enter
sti
out
out
sbb
orb
jnp
clc
add
mov
pusha
xor
sbb
in
inc
push
lret
mov
add
adc
add
clc
cld
jbe
enter
rcrb
add
push
mov
rclb
outsl
push
and
add
or
jmp
push
leave
paddd
or
mov
pop
subb
mov
outsb
add
cmp
mov
push
test
cmpsb
pop
add
add
das
mov
fiadds
xlat
adcb
cltd
add
jb
out
sarb
in
mov
outsb
pop
mov
sbb
add
add
call
gs
pshufw
and
mov
lahf
or
pushf
pop
mov
cmp
popf
insl
lret
xchg
into
add
cmp
mov
movsbl
pop
into
xchg
shl
add
cmc
outsb
adc
or
stc
mov
cli
and
xchg
test
push
mov
or
mov
add
imul
pusha
jmp
inc
mov
mov
push
aas
push
add
outsb
in
mov
add
jp
add
das
inc
xchg
into
nop
push
xor
in
enter
mov
or
dec
add
and
sub
and
push
popf
loop
or
push
or
or
popa
rorb
push
dec
xlat
dec
jae
cmpsb
out
jbe
stc
mov
lock
sbb
sub
or
pusha
js
cmp
pop
mov
push
sub
dec
out
mov
sbb
push
fdivrp
cmp
test
les
je
flds
xchg
pop
xor
adc
loop
adc
jo
mov
ja
or
stos
and
mov
mov
lods
xor
push
sub
out
lods
jmp
popf
int3
push
loop
fldenv
cmpsl
add
dec
mov
stos
mov
sahf
popw
mov
sub
add
ret
jno
mov
xchg
sbb
das
add
lret
jmp
pop
jns
femms
iret
or
imul
rclb
add
nop
popf
in
xlat
sbb
lds
pusha
mov
jle
mov
push
pcmpgtw
in
dec
dec
add
ret
in
push
fildll
lods
mov
test
std
xor
inc
xor
dec
and
pop
and
inc
xchg
push
mov
call
mov
setae
nop
and
and
aas
rcr
aad
add
and
pop
push
add
inc
jb
lock
daa
xor
cmpsb
arpl
pop
xchg
pop
jmp
lods
add
xchg
sahf
adc
sub
iret
pop
jl
lcall
outsl
gs
pop
push
add
shlb
mov
scas
add
fsubp
and
dec
dec
mov
faddl
stos
mov
pop
push
jb
push
and
adc
adc
jle
sbb
adc
cmp
add
fildl
pop
add
jecxz
cmc
pusha
pop
xor
into
js
ror
or
shr
fdivrp
sub
adc
cmp
pusha
pop
inc
add
call
or
and
ret
jno
dec
iret
dec
add
add
inc
repz
push
movsl
lret
cmp
sbb
fldl
pusha
loop
dec
lods
movsb
inc
add
sbb
push
adc
std
mov
mov
les
gs
jno
mov
xchg
mov
hlt
aad
adc
pop
jnp
roll
cmc
push
mov
roll
fsubp
mov
stc
push
out
xlat
orb
xchg
add
add
and
aam
sub
add
dec
fcmovnb
lret
sbb
int3
push
add
adc
inc
dec
or
inc
mov
pusha
sti
dec
pop
lret
loop
loope
fsubrl
sbb
cmp
add
jle
pop
pop
push
stos
fstpl
or
insl
jo
fwait
or
add
out
jno
cmp
dec
push
roll
cmp
fwait
push
lock
addb
push
push
out
fstpt
inc
rclb
dec
aaa
cs
out
xor
stc
mov
xorl
or
jne
lret
mov
add
jae
pusha
mov
or
xor
sub
js
adc
cli
add
or
sbb
js
push
dec
add
cmp
ror
add
add
aas
jmp
out
mov
js
push
mov
inc
add
xor
in
pop
inc
imul
sub
push
sbb
into
and
add
dec
dec
iret
jg
movsb
push
pop
mov
push
jae
icebp
add
pop
stos
sbb
xchg
pop
mov
mov
xchg
or
stos
adc
add
add
test
xchg
and
pop
cmp
and
loop
sbb
pop
pop
adc
test
and
cltd
sbb
adc
and
xchg
mov
mov
mov
or
repz
shr
adc
push
sbb
mov
push
in
test
addr16
cmp
xor
call
jae
xor
jne
icebp
jns
lret
pop
mov
mov
rorl
fnsave
xchg
cli
mov
ja
loope
idiv
sti
mov
add
or
les
rclb
enter
mov
mov
fiadds
rcrb
int3
fistps
in
xor
push
lcall
add
rcrl
xchg
pop
add
cmc
aas
xor
mov
sub
add
push
push
mov
pop
push
add
mov
loopne
mov
mov
xchg
and
add
add
mov
push
fistl
out
sub
sub
mov
adc
inc
call
cld
add
add
hlt
pop
pop
repnz
or
sahf
loopne
mov
data16
xor
shlb
sbb
pop
xor
pop
mov
jo
jg
out
add
lods
cmp
push
add
fbld
push
mov
lret
pop
mov
popa
orb
decl
mov
stc
pop
mov
add
jb
jmp
push
push
mov
or
lock
clc
je
mov
pop
fadds
lret
orb
dec
cmp
data16
aaa
jmp
add
add
and
outsb
iret
adc
sahf
std
or
mov
clc
shll
sub
inc
xchg
xor
shll
and
xor
push
movsb
hlt
test
out
cmp
add
cld
push
in
loop
pop
xor
cmp
push
aas
mov
cs
xchg
pusha
out
add
pop
imul
and
jne,pt
push
popa
xor
test
xor
and
imul
add
repz
mov
cmp
xor
pop
mov
mov
xorl
add
mov
call
sbb
out
adc
test
xorb
aad
pop
add
pusha
and
add
xchg
je
loop
pop
sbb
jge
imul
mov
and
mov
out
fisubrl
add
mov
fdivs
xchg
insl
sbb
pop
pop
fldt
pop
insb
adc
cmp
or
push
loop
cld
inc
lds
xor
and
imul
push
or
fisubs
jl
popf
mov
adc
add
sub
and
xchg
xor
data16
arpl
sti
adc
or
cmpsb
cmp
sub
ss
cmp
rcl
and
jbe
or
push
daa
sbb
inc
jo
cmp
cmp
inc
pop
jge
or
cmp
nop
sbb
push
mov
add
xor
adc
xor
loopne
loopne
pop
and
pop
loopne
pop
lock
dec
js
and
inc
sarb
movl
insb
bt
cmp
or
xchg
mov
cmp
test
xchg
dec
ds
dec
mov
cmpsb
repz
out
leave
loope
mov
xchg
aam
push
dec
popa
pusha
adc
xor
rorl
mov
mul
mov
rolb
push
xor
ret
into
and
rcl
add
mov
mov
cmp
and
adc
xchg
cmp
or
mov
sbb
les
cwtl
jo
or
dec
inc
js
xchg
adcl
inc
dec
repnz
mov
xchg
test
ljmp
dec
cld
add
dec
int3
nop
fists
shlb
fiaddl
dec
shlb
push
sub
cltd
add
add
fdivrs
cmp
repz
add
and
fisubrs
sub
fdivl
pop
int3
test
add
xchg
or
mov
cmp
mov
xchg
push
mov
pop
add
pop
icebp
pop
sbb
adc
add
mov
popa
pop
arpl
repz
adc
mov
scas
jnp
jl
xchg
fildll
add
cli
setge
lea
nop
aam
scas
adc
mov
and
sbb
xchg
and
mov
sbb
or
pop
mov
rclb
das
sbb
cwtl
jge
sbb
or
inc
hlt
call
and
and
les
mov
cmp
push
in
adc
inc
mov
adc
test
or
lcall
cli
adc
pop
jns
jecxz
adc
add
loope
cwtl
test
enter
flds
xchg
pop
adc
insb
sub
repnz
test
mov
adc
pop
sti
clc
pop
sbb
rcrl
movsb
insb
add
push
cmp
dec
add
sar
cmp
dec
xchg
add
scas
out
into
cmp
shll
and
mov
sub
xor
add
pop
imul
adcb
dec
in
dec
movsl
xor
push
pop
mov
xchg
jge
mov
rorb
mov
cmp
incb
inc
int
and
sbb
xchg
inc
jge
mov
mov
add
daa
call
mov
scas
pop
call
mov
ret
jp
and
les
cmpb
and
push
inc
aam
mov
addr16
inc
push
pusha
pop
std
cli
adc
out
movsl
cwtl
movsl
orb
mov
inc
test
rcrb
mov
mov
jno
inc
ljmp
fstl
dec
cmp
mov
and
pop
pop
jge
sub
adc
and
add
mov
jae
add
fisttpl
add
add
mull
push
cwtl
scas
cwtl
mov
and
int
loop
and
mov
push
add
aam
push
add
imul
jnp
or
imul
xchg
adc
add
shrl
inc
lahf
das
or
push
xchg
test
sub
inc
jne
sub
nop
negl
xor
add
fadds
fisubl
out
aam
mov
pop
outsl
sub
adc
dec
add
mov
cli
lret
and
rclb
jmp
mov
andb
pop
ficoms
pop
adc
int
js
mov
sbb
add
xor
xor
mov
pop
test
dec
hlt
push
cmc
add
jno
test
jnp
cs
and
add
ret
test
rcrb
dec
fadds
out
stc
rcll
sub
mov
xor
mov
es
loop
xor
ret
das
add
ss
mov
mov
jg,pn
leave
js
pop
mov
into
lods
push
inc
cmp
pusha
dec
add
xor
sbb
outsl
gs
rclb
in
or
mov
cld
addr16
or
int
or
psrlq
xlat
adc
rclb
bound
and
mov
xchg
daa
mov
add
out
nop
add
iret
adc
xchg
shl
sbb
cs
sbbb
dec
rclb
je
xchg
notl
js,pn
xchg
inc
rcrb
cmc
enter
addr16
fs
jne
xlat
repnz
jae
adc
loop
test
xchg
movb
inc
out
xlat
cmp
and
jg
int3
aam
into
mov
xor
out
inc
or
jl
adc
and
enter
rol
lods
lahf
jns
xchg
cwtl
sbb
inc
ret
loopne
mov
or
inc
push
add
std
dec
sub
add
sub
cmp
add
inc
xor
shrb
iret
shl
bound
push
pop
mov
fs
das
or
sub
ror
or
mov
inc
pusha
mov
push
cli
push
es
in
lahf
iret
aas
push
jmp
add
shlb
rep
xchg
adc
pop
insb
inc
inc
bound
test
xchg
cmp
fildll
xor
or
call
or
push
jmp
mov
dec
sbbl
add
cs
mov
inc
push
sahf
push
mov
xchg
jmp
mov
push
xchg
lds
push
inc
imul
dec
inc
xchg
xor
mov
push
sbb
orl
loope
push
stc
ret
dec
push
and
leave
or
push
inc
jp
xchg
xchg
add
repnz
fcmove
pop
scas
les
rcll
fimuls
xor
push
lret
adc
dec
sbbb
leave
sarb
jns
sbbl
xchg
and
mov
je
push
add
xchg
fisttpll
jmp
jmpw
mov
xchg
xor
push
nop
mov
push
push
shlb
cmp
mov
inc
clc
xor
jne
loope
xchg
test
mov
fimuls
pop
lahf
pop
stc
xchg
xchg
pop
imul
cmp
jl
enter
adc
cmp
mov
mov
outsl
fmuls
xor
testb
sar
test
loop
dec
mov
popf
add
shll
mov
hlt
daa
repz
xor
test
mov
and
add
cs
pushf
shll
sub
dec
xor
cmpsb
or
dec
rorb
add
push
jle
stos
outsb
pusha
movsl
mov
add
sbb
cld
sarl
pushf
mov
sar
add
mov
xchg
int3
add
sbbl
rolb
inc
repz
push
cmp
cwtl
lock
cmp
jge
and
mov
sub
xchg
dec
xchg
jle
cmp
dec
loop
repnz
cmp
push
xchg
in
in
or
inc
fnsave
jmp
jbe
lcall
mov
add
mov
dec
nop
and
je
sarb
mov
fists
push
inc
cld
mov
test
int3
push
and
push
cmp
pop
fstl
cwtl
lret
and
shll
outsl
mov
sub
in
mov
cmp
xchg
mov
cld
mov
loope
dec
xchg
pop
pop
adc
inc
cwtl
cwtl
sbb
xorl
cld
loope
cmpsb
in
dec
and
push
idiv
add
sbb
fdivrs
popa
jns
fwait
dec
insl
inc
subl
push
test
xchg
fmuls
scas
scas
and
repnz
cltd
cmp
test
pop
add
in
jecxz
mov
and
sbb
pop
adc
add
sarl
je
add
popf
aas
mov
inc
cs
mov
ret
insb
sahf
add
or
inc
test
xchg
pop
in
aam
out
test
int3
push
jmp
insl
push
jbe
nop
pusha
cmp
mov
xchg
push
into
test
cwtl
xorb
mov
mov
int3
sti
jmp
insb
inc
faddl
mov
mov
fcmovb
and
sub
gs
dec
jo
pop
sub
into
mov
xchg
add
push
pop
inc
or
add
xor
rclb
je
push
push
jne
pop
bound
outsl
test
cmp
imul
int
loopne
into
and
pop
popa
add
sbb
push
dec
imul
push
add
and
jg
leave
pop
sbbl
add
and
roll
inc
and
test
test
outsb
push
or
xchg
jbe
mulps
cmpsl
xchg
fisubs
add
neg
jle
inc
pop
jge
out
adc
xor
enter
mov
sub
out
stos
add
add
mov
call
pushf
repnz
or
fisubrs
jge
jl
pusha
int
and
lock
inc
aaa
cmp
hlt
pop
mov
mov
cld
xchg
pop
inc
sub
add
mov
xchg
adc
push
sbb
adc
xor
pop
push
push
xor
mov
xchg
stos
int3
cmpsl
dec
xor
andl
js
call
jae
pop
mov
push
pop
inc
mov
cmp
pop
mov
dec
add
call
dec
inc
sub
cmpb
pop
test
xor
add
and
sbb
mov
mov
shlb
add
inc
sub
mov
pop
or
mov
xor
je
fndisi(8087
cld
cmc
pop
sbb
jp
pop
ret
daa
jns
or
addr16
cltd
out
addb
sub
mov
add
fwait
or
add
cs
stc
jbe
mov
ret
add
sub
imul
xchg
xchg
jns
ficoml
lods
aam
sti
inc
xchg
jge
cs
test
pop
mov
rorb
jno
add
mov
push
repz
es
sbb
mov
push
sbb
iret
cld
adc
ljmp
inc
add
inc
adc
xor
jl
jge
int3
fdiv
adc
push
in
int
stos
xor
shr
dec
sahf
jo
das
add
cmp
leave
jle
mov
jo
cltd
test
test
daa
cwtl
sbb
in
pusha
insl
frstor
sub
push
test
repz
sub
sbb
loope
pusha
dec
pop
test
inc
jge
push
jmp
add
imul
pop
ja
adcb
lret
add
les
add
sub
in
negl
cmpb
push
int3
push
sbb
rorb
enter
adc
jmp
or
mov
cli
ja
mov
sub
jle
cmp
dec
add
add
aaa
push
mov
inc
movsl
aam
cmp
int3
mov
adc
lahf
pop
fildl
pop
pop
rcrb
orl
inc
pop
mov
add
das
pop
mov
outsb
xchg
or
out
jmp
sbb
or
xchg
pop
and
cmp
fcomps
pop
stos
jae
lock
stc
popa
add
mov
push
icebp
dec
ja
pushf
lods
add
adc
mov
loopne
pop
cld
jno,pt
mov
jge
scas
adc
cmp
dec
mov
sti
addb
das
jb
xor
and
xchg
xor
scas
stos
sbb
push
xor
sub
mov
pop
pop
mov
mov
push
jb
or
xchg
out
cmc
add
mov
xor
cmp
in
enter
add
cltd
or
int
sarb
or
and
out
xchg
add
test
arpl
nop
dec
call
loop
rolb
clc
xchg
adc
call
inc
cld
movsb
cmp
pop
mov
xchg
bound
xor
cltd
mov
les
or
sub
fsubrs
pushf
and
and
es
inc
mov
mov
test
pop
inc
in
iret
mov
and
enter
add
loop
shl
add
add
cmp
ror
xor
adc
les
shlb
xor
out
mov
mov
and
sbb
hlt
and
ja
sub
xor
sub
mov
call
add
jmp
or
and
pop
pop
push
fwait
repz
sbb
jb
jp
ljmp
test
add
jb
je
popf
lea
loope
hlt
pop
loopne
outsb
jae
ja
sub
inc
stc
push
imulb
xor
push
into
mov
xchg
insl
test
dec
push
add
or
mov
add
add
jp
push
pushf
inc
test
mov
out
loopne
das
ret
orl
orl
inc
sub
add
inc
xor
lret
fisubl
out
mov
in
add
pop
sub
cld
int3
xchg
ja
test
push
addb
test
cmp
and
add
movsb
and
mov
add
enter
and
sbb
fsts
insb
adc
dec
arpl
into
pop
out
imul
add
inc
data16
pop
fcmovb
dec
pushf
sub
nop
iret
xchg
add
shll
mov
ret
cmp
pop
pop
adc
cltd
cmp
mov
sub
lock
cmp
dec
ret
and
hlt
int3
out
in
sbb
fcomi
push
adc
fdivrl
xor
mov
cli
cmpsb
add
repnz
fadd
fmull
sbb
xchg
stos
lods
push
or
nop
mov
jno
fcoml
cmp
mov
roll
clc
mov
and
and
add
test
je
pop
sbb
mov
mov
cmc
inc
add
push
xor
js
enter
or
mov
push
mov
es
fistps
xor
inc
subl
pop
inc
cmp
inc
jp
xor
pop
lods
sbb
pop
add
int3
lods
movsl
mov
adc
repnz
xor
sarb
stos
and
fs
pusha
in
mov
les
adcl
xor
or
xchg
int3
xor
cmp
ja
imul
int3
xchg
xchg
mov
into
pushf
adc
sbb
sbb
stos
sbb
and
jns
sub
call
mov
xor
push
and
lea
hlt
jmp
mov
shl
push
or
fbld
fldl
enter
adc
jl
xchg
cmp
dec
push
nop
pusha
adc
inc
add
in
decl
xchg
push
addr16
sbb
clc
das
es
push
xor
push
push
sub
pusha
jecxz
sbb
push
out
cmp
sub
rcll
std
add
mov
pop
add
pop
xchg
sbb
sub
mov
divl
insl
xchg
lock
arpl
ret
push
xor
jns
xchg
sti
dec
inc
xor
add
imul
add
and
outsl
stc
mov
push
inc
sub
sub
inc
and
daa
sbb
movsb
clc
pop
xor
aaa
dec
add
inc
pushf
add
shrb
call
push
xchg
xchg
sahf
addb
out
rorl
shlb
mov
pop
mov
cmp
xor
int3
mov
xchg
mov
lock
push
and
dec
cmpsl
add
add
repz
pop
mov
mov
mov
into
push
cwtl
je
push
add
fnstcw
add
jp
pop
ret
fst
dec
dec
xor
fs
and
inc
sbb
pop
jl
dec
sbb
je
faddl
dec
dec
lret
rcrb
push
mov
jno
push
repz
jno
fsubrs
pop
and
fstl
add
jnp
ja
mov
clc
add
int3
pop
and
push
dec
sbbl
outsl
mov
inc
jb
push
stc
icebp
dec
mov
les
add
and
mov
loopne
ud0
orb
jg
das
sub
mov
xor
rclb
test
xchg
sbb
call
and
les
or
lahf
mov
xor
cmpsb
test
add
lods
mov
insb
sbb
xchg
mov
repz
sub
sub
xor
pop
ret
shl
sub
divl
fs
push
ds
sbb
das
mov
popa
mov
jne
push
push
movsb
call
mov
jle
repz
jnp
pop
or
enter
add
lods
jno
pusha
or
cmp
dec
int3
shrb
mov
or
mov
movsl
icebp
xor
jmp
xchg
dec
stos
lcall
xorb
jo
test
jg
and
hlt
and
inc
add
stc
lret
js
sbb
jno
hlt
cmp
into
push
mov
sbb
in
mov
and
loopne
jo
ret
pop
cwtl
dec
cmc
lds
mov
jg
aam
es
ss
pop
pop
push
aam
mov
push
mov
scas
and
cli
setp
enter
sbb
cmc
push
push
add
pop
sbb
cmp
insb
fnsave
or
mov
scas
or
in
movsb
add
pushf
push
sbb
add
lds
dec
adc
jp
sub
loope
mov
add
enter
ss
ret
js
pusha
and
add
adc
dec
stos
mov
add
adc
in
test
out
cli
add
cmc
fs
inc
js
xchg
in
mov
jne
adc
lock
pop
scas
cmp
cmp
paddb
mov
aas
lods
inc
loopne
scas
and
pop
push
jmp
jae
nop
or
sub
add
jo
or
xchg
fildl
add
pop
nop
sub
js
add
cwtl
jb
add
mov
pop
and
dec
add
fcmovnu
pop
leave
jne
lcall
sbb
addr16
test
or
insl
sahf
sbb
mov
and
mov
es
cli
popl
ja
adc
xlat
incb
ds
fsubl
outsl
add
aas
test
lock
add
cmovae
adc
cmpsl
xchg
psrad
mov
cmp
in
repz
pop
addb
sbb
rolb
gs
mov
add
ljmp
shl
pop
mov
mov
loop
jmp
push
ret
rcrl
fs
sub
bswap
cmpsb
inc
adc
notb
ret
sub
push
push
icebp
aas
xor
mov
cmp
pop
jb
cs
rorb
cmpsl
add
cli
push
hlt
add
fcoml
bound
sub
inc
sub
push
xor
cmp
lahf
sbb
dec
xchg
test
out
cli
mov
cmp
pop
js
push
add
jae
add
loopnew
xor
add
cli
sbbb
daa
loop
add
adc
mov
or
dec
add
rorb
stc
add
fcoms
pusha
jae
repz
fidivl
xchg
xlat
mov
pop
dec
fmul
mov
jne
add
xor
mov
pop
hlt
loope,pn
add
iret
icebp
add
cmp
test
xor
scas
cmp
loopne
loopne
jle
push
jae
xlat
in
sbb
int3
xchg
pop
jb
and
and
add
lock
add
bound
add
add
add
popa
mov
add
lods
cli
dec
add
adc
pushl
cmpsb
xor
in
jns
or
add
shrb
pop
clc
cmp
add
mov
sti
jnp
add
stos
cmp
and
rolb
sub
push
cld
add
sub
add
adc
or
push
xchg
mov
mov
pop
fcoms
pusha
mov
cmpsb
int3
lods
stos
gs
clc
xor
mov
pop
pushf
sub
sub
js
test
aad
repnz
lock
inc
nop
shll
add
out
dec
ret
push
test
test
ljmp
in
pop
mov
orb
cmp
push
adc
adc
dec
add
clc
push
mov
cld
cli
lock
arpl
inc
mov
dec
and
inc
add
loope
les
js
or
sbb
push
mov
test
sbb
inc
mov
xchg
add
xchg
sub
mov
lock
xlat
clc
jnp
fldenv
in
adc
push
sar
clc
fwait
xchg
mov
movb
hlt
cmp
adc
and
mov
out
arpl
addr16
xchg
mov
pusha
sbb
lods
xchg
mov
and
add
popf
add
cmp
xor
push
jmp
mov
add
or
inc
out
scas
pop
sbb
jbe
and
fcoms
insl
add
cmpl
mov
fistpl
mov
cmp
pop
in
add
and
xchg
add
xor
add
cld
cmpsl
adc
mov
stos
pop
push
nop
add
sbb
sahf
add
mov
rcll
pop
lock
mov
popa
or
stc
push
xor
mov
xorl
cmpsb
sbb
mov
sti
outsb
add
inc
jmp
add
mov
inc
inc
std
add
int
sbb
and
push
pop
sbb
mov
pop
mov
mov
dec
js
adc
lods
add
call
insb
xor
push
shl
mov
sbb
dec
js
das
mov
xchg
jmp
fiaddl
fs
lret
cmp
xchg
shll
xchg
lea
xor
ljmp
lret
ja
mov
shlb
jne
add
repnz
out
je
cmp
push
sbb
add
into
xlat
adcb
lahf
add
adc
ja
adc
ljmp
xchg
and
addb
cwtl
add
cs
push
shlb
adc
xchg
push
add
or
xor
cmpsl
jne
xchg
and
sbb
jb
stos
mov
cwtl
push
scas
negl
aaa
and
iret
xor
insl
mov
call
sbb
xchg
xor
orb
add
pop
shlb
add
xchg
in
dec
cld
hlt
loop
imul
xchg
fwait
xor
or
scas
mov
dec
push
insb
mov
cmc
cmpb
jg
add
lock
sbb
rclb
adc
add
int3
bound
cwtl
pop
add
sub
sub
cli
loopne
lock
and
xchg
inc
add
into
mov
jge
add
mov
das
stos
lea
xchg
inc
and
xor
mov
adc
xchg
jne
cmp
mov
jno
cs
pop
fs
das
inc
fcomp
mov
add
add
dec
xchg
sbb
push
mov
je
mov
sbb
inc
out
push
stos
shll
add
cmp
inc
incl
fs
inc
inc
test
sbb
js
mov
adc
sarb
orl
push
mov
pop
lock
fld
push
inc
lods
pop
fcmovnbe
add
fadd
orl
into
test
lods
pop
arpl
sub
rorb
or
iret
je
add
ret
add
stos
addr16
cmp
imull
sub
and
imul
mov
push
je
sbb
lret
or
imul
push
add
cmp
enter
addl
pop
jns
inc
and
sbb
scas
cmp
xlat
add
or
loop
sahf
pop
add
mov
jl
inc
shrb
ret
push
dec
subl
dec
lods
add
gs
jno
mov
cmp
lds
cmp
pop
scas
push
js
jne
sub
les
fucom
inc
xchg
push
pop
imul
addl
cmp
mov
repz
fildl
xchg
pop
xor
mov
pop
in
sub
or
jmp
shlb
or
add
loopne
out
cwtl
sbb
lock
test
cmovae
fmull
pop
mov
mov
push
mov
mov
mov
sbb
int
pop
mov
add
and
dec
sub
sub
add
cld
repz
push
adc
push
into
lahf
enter
add
fcmovnb
inc
jle
gs
pop
fnstsw
jge
push
or
lcall
push
mov
aad
pop
and
or
out
add
testb
xlat
imul
mov
hlt
aad
outsb
or
add
and
test
mov
js
jge
mov
or
xor
sub
add
scas
push
aaa
add
movsl
call
cmp
push
mov
lahf
jo
pusha
in
adc
mov
add
bound
jb
pusha
and
jp
es
lods
add
test
xchg
add
sub
or
icebp
and
jne
jo
push
out
orb
push
add
rolb
mov
imul
add
fs
fldl
leave
insl
and
stos
add
inc
pop
adc
pushf
inc
push
pop
das
pop
mov
shlb
arpl
mov
loop
mov
add
imul
ficoms
cld
cli
cmp
add
mov
cmc
add
and
scas
jb
add
mov
mov
adc
mov
into
aas
pop
les
scas
add
mov
pop
push
push
loope
dec
lock
aas
je
out
test
mov
orb
push
lcall
pop
xorl
ds
pusha
or
add
out
orl
jno
dec
out
add
cmp
dec
jecxz
fsts
out
cmp
movsb
cmp
cld
add
inc
pusha
and
add
inc
nop
push
xchg
rcl
cmp
pop
and
stos
lret
js
mov
sub
adc
jmp
push
sbb
and
repnz
add
mov
cmp
ljmp
jbe
in
xchg
push
inc
mov
ljmp
dec
mov
aam
sub
fstl
mov
sub
pop
push
mov
xlat
xchg
jp
sbb
mov
add
ljmp
add
pushf
xor
dec
or
mov
and
sub
dec
out
out
je
loope
dec
cmp
mov
pop
shll
lods
aaa
xchg
sbb
add
xchg
add
inc
pusha
jp
mov
and
add
mov
in
push
fstpt
and
mov
sub
in
xchg
push
add
mov
dec
jns
inc
icebp
mov
cmc
not
movsb
push
in
pop
rcrb
jo
pop
push
jecxz
and
push
add
pushf
lahf
mov
insl
cltd
xchg
push
cmpsl
fildl
out
push
imul
add
jo
push
loopne
inc
les
add
and
push
push
daa
sub
xorb
jp,pn
pop
jmp
ss
xor
rcrb
testb
add
xor
lret
pop
jle
mov
pop
sar
pop
add
xor
dec
dec
loopne
jo
add
mov
inc
adc
imull
fs
sbb
mov
cltd
sbb
add
adc
mov
cmpsb
xchg
mov
xchg
fwait
mov
jnp
stos
pop
add
xchg
pminub
mov
sub
das
mov
les
lcall
jg
je
add
inc
or
or
scas
push
cmp
pop
pop
xchg
nop
pop
mov
add
pusha
add
nop
imul
out
shrb
out
insb
add
ja
mov
leave
fadds
mov
mov
add
cmpsb
lea
std
mov
jg
popa
hlt
mov
add
push
orl
mov
fildll
add
or
cwtl
je
inc
push
scas
popa
nop
jge
call
pusha
ret
jg
call
xchg
add
mov
ret
pop
lret
dec
add
mov
shrb
pop
pop
test
xchg
and
push
lods
push
fs
pusha
addr16
jb
mov
or
mov
add
test
add
stos
repz
push
mov
jne
dec
push
push
out
inc
cld
mov
push
xchg
sub
imul
sub
xchg
push
rcll
adc
lds
insl
rolb
adc
aaa
frstor
cmp
mov
and
xor
adc
ss
add
jb
popa
pop
mov
das
aam
push
xorb
enter
jns
jl
add
jg
cmp
add
xor
and
pop
sbb
imul
add
inc
fwait
test
out
jp
ja
mov
xchg
jecxz
mov
xor
cwtl
dec
stos
bound
cmp
mov
xchg
xor
mov
mov
push
aaa
movsl
in
sti
mov
cmc
push
dec
pop
add
outsb
jge
sbb
xchg
sbb
test
sbb
mov
cli
inc
stc
cmp
or
xor
jge
icebp
pop
push
xchg
adc
or
scas
add
shlb
popf
pop
mov
loop
cmpsb
fcoml
and
and
add
repnz
cwtl
jne
lock
push
inc
arpl
and
add
clc
sbbl
sub
dec
and
lds
or
xchg
inc
std
cli
cwtl
lahf
inc
xor
xor
nop
in
aas
jge
sub
mov
and
dec
dec
push
cmc
mov
sub
mov
test
mov
sub
add
push
test
or
shrl
rolb
add
rcl
jp
add
int
jo
push
jecxz
dec
inc
push
lock
inc
xor
popa
inc
sbb
jno
data16
and
movsb
and
add
adc
jl
pop
mov
in
pop
loopne
or
hlt
into
pop
add
popf
sub
jle
push
sbb
mov
repz
repz
bound
xchg
cld
mov
lods
mov
cmp
ret
mov
xor
xchg
sbb
nop
inc
and
dec
mov
mov
fisubs
dec
les
enter
add
push
hlt
and
add
test
popf
stc
roll
xchg
iret
push
and
mov
testl
cltd
icebp
mov
mov
xchg
add
pushf
out
aad
push
movsl
movsb
les
out
stos
cwtl
jmp
xor
fmul
inc
add
mov
and
jle
lcall
aas
mov
dec
xor
jb
aam
dec
xchg
fildll
push
xor
sbb
pop
loop
xchg
jno
clc
mov
mov
das
sub
jle
pop
rolb
mov
xchg
push
jecxz
push
popf
adc
add
mov
ss
mov
shlb
les
push
and
clc
add
xor
cli
rcrb
orb
mov
xchg
fs
add
push
push
jbe
mov
dec
sahf
sub
sbbl
les
inc
lea
pop
aam
ret
cmp
mov
pusha
push
xor
sarb
cmp
inc
nop
cltd
xor
dec
test
push
add
mov
xor
xchg
leave
mov
dec
and
or
test
jl
inc
shlb
popa
mov
add
loopne
lret
insl
out
inc
jae
push
loopne
rclb
jo
insb
mov
add
enter
cmc
mov
nop
sub
ficoms
out
scas
cmp
nop
addr16
out
jge
cmp
or
add
cmp
fs
jo
add
and
xor
out
add
xor
add
out
rolb
iret
pushf
sub
and
mov
or
mov
sarb
pop
aas
loopne
adcb
sbbb
dec
lea
dec
jge
add
mov
push
mov
add
cmpsl
out
daa
addr16
inc
add
in
mov
add
adcb
shlb
popa
test
cmpsl
aas
enter
ds
or
scas
and
push
pop
int
rcl
and
jge
add
cmpsl
es
mov
ret
inc
xchg
dec
and
fldcw
fisubl
fcomps
js
push
pop
and
add
sbb
lods
mov
mov
ret
add
pop
mov
dec
push
push
outsb
enter
pop
mov
add
ds
stos
jnp
add
fisttpl
or
jle
adc
dec
add
xchg
add
enter
pop
pushf
xchg
add
adc
clts
into
push
outsl
pusha
mulb
out
add
orb
imul
scas
outsb
lret
clc
xchg
sti
adc
loope
mov
mov
mov
adc
adc
push
aas
fwait
test
or
stc
adc
mov
and
das
in
push
jl
in
sbb
stos
leave
enter
clc
add
or
aad
push
mov
sbb
push
cmp
inc
lods
ds
inc
cld
movsb
pop
enter
dec
mov
into
adc
mov
or
loopne
testl
jp
out
pop
lock
dec
adc
inc
add
sahf
pop
ret
sub
add
or
out
adc
outsl
pop
xor
loope
and
and
in
pusha
popa
movsl
dec
loop
add
mov
lods
sbb
hlt
fdivrl
adc
xor
mov
dec
imul
adc
or
add
aas
mov
loop
push
mov
add
test
repz
and
sar
popf
add
or
jge
sahf
jns
scas
xchg
out
sbbb
je
lahf
rclb
stc
inc
inc
cmp
repz
call
repnz
cmp
sub
out
mov
js
pop
mov
push
orb
adc
add
jb
scas
cmp
shrb
nop
adcl
outsb
add
and
add
cli
cltd
scas
and
ficomps
repnz
push
sti
sbb
fsub
push
cmpsb
sbb
sub
xor
sub
jle
push
es
push
push
pushf
int3
sbb
push
shlb
mov
xor
pop
sub
test
out
out
and
push
sbb
fmulp
imul
push
dec
adc
inc
mov
out
sbbb
mov
jb
daa
xor
mov
and
fildl
flds
xor
movsl
std
push
inc
andl
packssdw
jle
dec
inc
aaa
xor
mov
dec
or
dec
mulb
push
push
test
adcl
mov
loop
loopne
jp
add
sbb
push
pop
inc
push
mov
out
adcb
jae
sbb
mov
cmpsl
in
scas
mov
sbb
and
add
push
mov
cmp
shl
inc
dec
outsb
pop
push
jo
adc
add
out
dec
bound
sub
clc
cmc
pop
pop
sbb
xor
adc
sub
push
ret
jp
idiv
int3
cld
cmp
loopne
shrb
out
add
and
jle
leave
pusha
out
lahf
js
sbb
inc
jbe
sbb
clc
and
inc
test
out
outsb
pusha
jne
xor
add
mov
jmp
repz
pop
dec
into
jae
rclb
cwtl
jecxz
ja
les
es
ljmp
and
subl
cmp
jne
and
pushf
aam
mov
xor
icebp
sub
push
add
cmp
cmpl
add
data16
fcoms
pop
mov
jmp
lret
rorl
dec
push
imul
push
pusha
jmp
ds
xchg
sbb
add
loopne
fadd
xor
pop
js
ds
test
sub
or
fildl
ret
mov
jg
pushf
xlat
outsb
call
and
add
fmulp
ret
xor
push
int
les
sbbb
loop
orb
pushf
imulb
cmp
inc
xchg
xlat
popa
dec
dec
fwait
jnp
hlt
mov
xchg
jae
scas
push
call
jmp
adc
cmp
nop
mov
mov
dec
out
arpl
or
dec
sub
mov
pop
xchg
outsl
and
inc
call
xchg
ret
adc
sbb
mov
cmp
lea
inc
xchg
popf
adc
jae
sbb
cmpsl
filds
ljmp
jmp
cmpsb
inc
push
and
repz
jns
mov
insb
test
adc
push
or
push
dec
xchg
or
xchg
add
daa
push
mov
nop
jle
or
in
inc
outsl
push
jge
jae
cwtl
jb
dec
icebp
test
das
sbb
dec
daa
pop
mov
aam
jae
add
mov
cmp
call
iret
fs
popa
adc
dec
aas
or
push
in
add
mov
leave
icebp
add
fsts
rcrl
push
jmp
imul
test
in
loop
cs
mov
inc
icebp
enter
add
leave
sub
popa
movsl
call
outsb
jp
inc
inc
aam
mov
repnz
jns
enter
xchg
xchg
add
rolb
sub
add
cwtl
test
mov
or
xor
jae
xchg
sub
xorl
pop
pop
lock
test
mov
dec
add
popf
xchg
push
out
ret
xor
fcmovnb
add
lahf
enter
jmp
shl
mov
shll
dec
repz
outsl
mov
insb
xchg
sub
jmp
push
and
stc
push
cmpl
shll
dec
cmp
inc
aam
fwait
lds
lods
repz
pop
out
inc
sub
insl
pusha
in
push
enter
add
inc
dec
outsl
sub
stos
sbbl
test
inc
cmpb
stos
into
popa
shlb
cli
add
push
jno
add
xor
into
cmpl
pop
inc
int3
jecxz
add
outsb
out
mov
push
mov
sbb
lock
pop
mov
mov
and
pop
mov
push
mov
stc
shl
iret
add
sbb
or
inc
out
lock
and
pop
movsl
jbe
pop
jne
mov
int3
dec
add
test
enter
insl
mov
pop
cmp
outsb
adc
mov
sub
lret
jmp
push
test
and
or
lahf
jae
and
bound
scas
flds
xlat
pusha
loopne
mov
mov
xor
loopne
sbb
cmovbe
dec
and
mov
add
nop
sarl
jno
sub
push
inc
iret
and
lock
xchg
test
outsb
movsl
xor
pop
and
test
xor
loopne
lret
mov
or
mov
add
inc
mov
stos
sbbb
loopne
arpl
or
repz
xchg
lcall
push
out
fiadds
movsl
dec
push
inc
loop
nop
orb
je
jmp
adc
push
stos
sub
add
sbb
xchg
xchg
std
into
mov
jl
sbb
ljmp
mov
les
or
andb
sbb
and
in
adc
adc
or
lods
mov
in
add
jns
and
xor
or
jp
sub
dec
fsts
sbb
dec
add
sub
call
aam
lret
add
cmp
addr16
test
mov
jnp
xchg
inc
adc
cmp
and
xchg
out
mov
nop
lock
cmp
adc
inc
pop
sbb
ds
adc
mov
mov
mov
adc
xchg
mov
push
hlt
int
jl
out
fnstcw
outsl
scas
dec
adc
rorb
adc
ret
and
inc
mov
out
inc
pop
cwtl
cwtl
xchg
or
pop
inc
pop
jle
fldt
es
pusha
sbb
xchg
call
loopne
loopne
add
push
sub
or
cvtpi2ps
stos
jne
add
add
add
in
adc
int3
roll
rclb
aam
lcall
mov
inc
movsb
and
or
sarl
clc
addr16
cs
lea
push
inc
sbb
pop
cwtl
aam
add
pusha
sarb
out
sbb
fmull
pop
out
add
lock
xor
nop
add
sub
inc
mov
popa
std
add
fildl
fsubrs
mov
ljmp
loop
addb
xchg
iret
clc
inc
sub
inc
add
loop
mov
dec
or
hlt
cmp
enter
rclb
add
scas
lods
sub
mov
adc
insl
stos
int
add
ficoms
nop
aam
and
clc
pop
sahf
inc
jl
sub
or
xor
jno
push
xchg
push
sbb
adc
xor
push
test
int3
subl
faddl
addr16
sub
pop
adc
es
cmp
je
enter
xchg
test
push
inc
mov
js
test
pop
xchg
mov
sub
cmpsl
lret
mov
inc
xor
mov
add
icebp
cmp
popf
xchg
mov
clc
mov
rclb
sbb
mov
cmp
pop
inc
enter
aam
pop
stc
clc
pop
push
jp
jbe
outsb
in
pusha
sub
mov
fbld
jmp
xchg
xlat
push
fsub
inc
icebp
or
in
iret
sub
mov
nop
rolb
inc
xchg
lret
pop
sbb
nop
clc
pop
mov
cli
mov
jbe
jecxz
and
inc
xchg
inc
sbb
jmp
scas
push
jl
xor
mov
rolb
mov
and
cmp
subb
sbb
cmpb
cmp
jle
and
xor
adc
xchg
ljmp
cmp
shrl
mov
adc
shrl
mov
sbb
add
test
push
js
incb
adc
jb
xor
dec
jns
sahf
and
xchg
int3
xchg
xor
ja
push
jmp
mov
push
sub
cli
bound
neg
xor
cmp
movsl
and
xor
sub
xchg
sub
add
xor
cmp
jne
rorb
inc
sbb
movsb
add
mov
sar
jns
or
and
or
sub
inc
inc
cld
or
sbb
js
dec
mov
jae
lods
and
inc
clc
xchg
dec
pop
sub
inc
in
into
and
addr16
cmp
lods
jno
sub
push
mov
xchg
dec
jmp
repz
cmc
in
mov
mov
push
pop
add
mov
imul
dec
and
cmp
and
mov
movsb
int3
xor
cmpsl
push
arpl
sbb
sub
xchg
jno
test
nop
adc
je
mov
add
into
mov
pusha
iret
fstps
push
in
add
jno
push
clc
adc
sub
and
mov
pop
adcb
inc
inc
push
add
outsl
mov
add
aaa
cmp
sub
pushf
je
jmp
movsb
adc
sbb
mov
xchg
test
sbb
or
add
mov
pop
adc
inc
adc
fs
fidivrs
sub
mov
idivw
sbb
mov
mov
xchg
clc
mov
pop
dec
inc
das
nop
and
fldlg2
test
xlat
or
sbb
mov
fidivrl
dec
xchg
mov
or
notb
pushf
cmpb
sbb
pusha
outsl
add
sbb
dec
mov
mov
sub
push
in
gs
pop
jne
cmp
incl
cwtl
or
mov
mov
cs
ret
js
mov
adc
rolb
lret
faddp
mov
mov
push
bound
or
push
adc
push
lock
push
aad
jg
outsb
add
mov
movb
orl
jle
xor
jle
shl
cmp
lock
xor
pop
call
roll
xorl
inc
fs
inc
test
lahf
test
add
cmp
aas
push
push
leave
test
push
and
insb
rol
xchg
cmp
xchg
loopne
sub
in
das
pop
and
add
push
in
je
and
sbb
loopne
push
sbb
add
dec
roll
jns
ret
mov
out
cmp
enter
hlt
or
cmp
les
and
mov
enter
xor
shlb
jbe
pop
int
xchg
jle,pn
lret
jb
adc
int3
iret
xor
ffree
xchg
repnz
mov
in
ret
clc
push
loop
rolb
les
ror
call
into
add
pop
fidivl
pop
popf
and
sbb
xchg
xchg
repnz
or
mov
aaa
or
jo
adc
xor
sbb
call
or
lock
push
dec
movb
fadds
bound
adc
pop
les
inc
popf
xchg
sbb
clc
xchg
add
push
mov
lock
push
imul
xor
jb
xor
out
pop
and
dec
jns
lds
dec
or
in
inc
jecxz
cmp
jl
inc
pusha
xchg
xchg
aaa
in
shl
jo
cltd
and
mov
inc
add
pusha
adc
or
outsb
mov
add
loopne
sub
in
add
pop
repz
repnz
xor
hlt
jns
sbb
dec
jmp
pop
pop
jnp
add
mov
dec
sbb
add
mov
addr16
or
fistpl
enter
in
cmp
mov
loope
xchg
repnz
cld
xor
cmp
sbb
sbb
leave
dec
adcl
rclb
adc
inc
pop
add
seto
jl
inc
and
pop
add
lds
mov
or
add
xor
xchg
adc
test
xor
lock
mov
pop
push
gs
inc
jmp
inc
sbb
dec
or
fsub
cwtl
inc
inc
pop
add
mov
sbb
jmp
add
xchg
mov
ret
push
dec
adcb
add
mov
jae
mov
lods
add
adc
xor
xchg
test
pop
inc
xchg
movsb
dec
sub
fidivs
out
popa
cmp
sub
out
mov
fmull
sub
ror
addl
adc
mov
orb
xchg
mov
add
jl
adc
in
pop
addb
das
mov
mov
popf
mov
xor
orl
in
inc
popa
shrb
stos
push
add
inc
pop
rcl
or
fistl
cld
xchg
daa
dec
pushf
xor
imul
lds
mov
pop
add
and
test
sub
add
sbb
or
rep
sbbb
mov
xor
xchg
sar
push
lds
add
push
inc
sbb
cwtl
add
or
icebp
stc
mov
movsl
loope
cmp
cld
sub
add
pop
jbe
sub
cmc
mov
mov
sub
pop
stos
and
push
add
fidivl
push
lret
and
add
call
pusha
addr16
mov
fcmovu
pop
test
imul
or
and
outsb
leave
fcoml
jns
outsl
out
sub
pop
scas
sbb
out
imul
inc
pop
int3
cmp
mov
addr16
es
hlt
push
adc
andl
sbb
nop
and
mov
test
clc
push
xor
lret
rolb
jge
adc
iret
mov
sbb
out
mov
inc
sbb
fs
and
into
add
movsb
sub
jg
clc
or
lret
outsl
out
add
jo
popa
test
add
xchg
add
add
hlt
dec
addl
mov
mov
add
xorb
jo
xchg
mov
data16
adcl
or
inc
bound
jo
add
sbb
ljmp
dec
xor
sbb
add
xchg
fcoms
popa
mov
cmc
jae
dec
and
popa
dec
popa
repnz
lock
add
jno
inc
aas
jo
dec
add
in
push
adc
nop
iret
mov
scas
mov
int
cs
push
and
sub
inc
add
xchg
in
push
dec
fwait
mov
add
mov
jl
pop
rorb
pop
add
or
popf
pusha
mov
je
pop
jno
sbb
mov
shll
add
mov
imull
fistl
sub
nop
add
sbb
js
add
andb
cmp
fs
hlt
cltd
sub
pushf
or
mov
pop
sub
mov
rcrb
fs
inc
loopne
mov
out
xchg
sbb
dec
mov
js
mov
es
push
push
add
loopne
inc
movsb
jns
dec
pop
test
inc
mov
cltd
dec
jbe
sub
ss
faddl
push
sbb
es
mov
xchg
mov
add
in
shlb
sbb
mov
or
adc
inc
loopne
sbb
xor
add
ss
add
push
sbb
aad
sub
push
mov
pop
lods
or
add
or
xchg
popa
dec
inc
mov
sbb
cmpsl
ret
sbb
xor
xchg
mov
pop
test
add
outsb
inc
ds
xchg
out
leave
jecxz
mov
mov
movsb
cmp
add
mov
pop
or
cmpsb
add
divl
mov
dec
push
add
mov
adc
dec
jge
dec
sbbb
cwtl
jl
mov
fs
pusha
push
popf
cmp
out
mov
pop
add
cmp
sub
in
lret
jle
dec
out
jo
inc
adc
daa
cmp
pusha
mov
mov
adc
movsl
mov
mov
mov
dec
addr16
loopne
in
in
pop
jnp
stos
call
in
jl
in
cmp
rolb
xor
sbb
sub
aad
sbb
sub
xor
pop
cwtl
inc
in
or
or
insl
dec
inc
setae
pop
and
aas
pop
in
mov
clc
lret
enter
mov
pop
jo
pop
and
adc
add
cli
add
add
lods
rclb
jecxz
sbb
ljmp
cmp
xor
push
jge
inc
lea
sub
and
adc
loopne
pusha
add
sahf
or
add
sbb
pushf
outsb
lahf
and
add
add
xlat
or
add
dec
pop
pop
loopne
inc
jge
pop
fsubrs
lods
or
and
or
daa
cmp
movsb
shrl
or
jns
or
sbb
inc
xor
test
mov
fdivl
iret
imul
out
or
cltd
sub
and
inc
mov
xor
scas
ds
fcompl
pushf
dec
cmp
dec
jg
and
and
loopne
mov
bound
rcrb
push
outsb
lahf
mov
fcompl
cld
cmp
add
jp
add
lea
add
sbb
mov
or
cld
test
xor
mov
cmp
mov
xchg
idivb
loop
xor
or
lcall
call
xchg
xor
mov
dec
rcrb
jp
and
out
xchg
mov
xor
cmp
loop
mov
arpl
test
jmp
dec
test
jo
js
test
test
inc
add
shll
out
dec
loope
push
dec
sub
add
imul
inc
push
sbb
or
enter
adc
cwtl
adc
xorl
mov
gs
mov
rolb
sub
lods
aas
pop
pop
pop
sub
inc
push
lcall
push
andb
mov
or
dec
mov
pop
push
mov
ret
and
std
hlt
pusha
push
ljmp
nop
das
rorl
add
cmp
inc
add
pop
xchg
sbb
mov
mov
roll
sarl
mov
push
hlt
fidivrs
int3
lods
stc
or
in
add
loopne
call
jno
mul
push
and
cmp
insb
inc
mov
sbb
lods
xchg
ret
fisttpll
cmp
bnd
or
add
inc
add
call
mov
negb
popa
in
inc
loopne
inc
mov
mov
inc
add
inc
lock
cwtl
enter
or
cmp
jns
mov
mov
les
loope
add
pusha
mov
cli
nop
add
mov
pop
adc
bound
fdivl
xchg
inc
mov
inc
mov
inc
frstor
push
enter
mov
sub
jo
rorl
outsb
xor
mov
repnz
xor
or
cld
rcl
test
movsl
adc
shlb
xchg
in
pusha
scas
sub
sub
inc
repnz
call
rcrl
in
add
sub
mov
dec
xor
dec
mov
xor
in
inc
and
and
das
mov
add
lods
add
lcall
enter
adc
popl
idivb
lods
and
xlat
mov
xchg
loop
int3
je
shrb
mov
jl
out
enter
jae
push
cli
mov
imul
lock
icebp
cmp
add
sub
mov
sub
sbb
inc
scas
or
out
cwtl
add
test
jge
ret
jo
cwtl
cmpb
out
fs
loopne
std
adc
mov
pop
fcoml
adc
mov
xchg
test
shlb
mov
jbe
sar
fldt
pop
mov
std
push
dec
inc
dec
test
xchg
stc
imul
cs
aaa
add
test
subb
out
xchg
pusha
xchg
inc
nop
dec
sbb
xor
dec
fs
lock
inc
xchg
sub
js
sbb
lds
xchg
shl
push
add
mov
sbb
mov
rol
dec
inc
push
lock
jl
cmp
or
fwait
jmp
orb
sub
std
xchg
jae
dec
xlat
pop
sub
js
push
push
mov
xor
inc
shl
mov
cmp
flds
and
daa
push
rcl
mov
into
xchg
push
mov
jl
add
aaa
jno
adc
orb
add
iret
fs
out
loopne
and
fsubr
fcoml
mov
ficoml
inc
test
movsl
ret
in
call
lods
dec
outsb
fdivrs
add
leave
mov
std
shll
add
inc
fs
sub
push
insb
sub
sbbl
loopne
and
fisttpll
pop
and
or
test
int
inc
mov
jl
sbbl
add
scas
add
add
cmp
jno
int3
mov
addl
push
ljmp
das
dec
xchg
leave
add
dec
loopne
fisttpl
xor
in
cmp
cmp
xchg
mov
hlt
adc
out
add
mov
cwtl
inc
mov
jmp
dec
xor
lea
test
push
push
sub
dec
cs
into
les
mov
int
fsubs
insl
lea
mov
or
inc
inc
add
int3
fnstenv
adc
fdivs
pop
dec
imul
or
or
inc
rcrl
adc
pusha
inc
xchg
sar
mov
out
jae
adc
pop
dec
push
xor
out
repz
mov
imul
imul
or
nop
fadds
in
sub
mov
inc
sbb
pop
jbe
adc
cmp
jb
jle
iret
pusha
sub
adc
and
test
add
push
xchg
imul
cmp
lods
hlt
and
loopne
mov
lods
cli
loop
xchg
sub
les
jo
hlt
imul
inc
in
lret
in
pop
add
and
mov
les
and
xchg
inc
or
add
inc
sbb
mov
loope
sbb
in
xchg
mov
mov
inc
pop
jle
jno
imul
adc
xor
or
or
test
xor
pop
roll
pusha
addr16
push
mov
push
ret
je
aam
pop
inc
or
sbb
jmp
and
inc
dec
cmpb
add
dec
clc
and
adc
fsubl
rol
inc
pop
icebp
in
je
cmp
cli
inc
fs
jg
lcall
fdivrl
lods
add
rorb
inc
xor
or
add
cmpsl
sbb
bound
push
inc
dec
xor
adc
xchg
les
mov
pop
rcll
jns
sbb
add
sub
mov
inc
sbb
add
push
xchg
mov
das
jmp
icebp
fwait
cmp
xchg
mov
sarl
push
sub
call
cmpb
nop
cwtl
popf
inc
mov
adc
and
adc
lahf
pop
sub
outsl
in
sahf
sub
mov
xor
add
popf
push
lods
test
cwtl
add
or
pusha
jns
add
cli
repz
stos
sub
add
outsl
ret
dec
xchg
xorb
inc
call
shll
adc
movsl
out
jo
add
push
jle
push
hlt
jae
scas
xchg
jne
mov
sbb
mov
outsb
or
add
lods
sub
gs
sub
push
ja
cmp
cmp
add
lahf
sbb
hlt
daa
in
in
push
jns
pop
shr
xchg
sti
stos
jns
aas
inc
int3
int
mov
sub
adc
jno
cmp
jge
and
dec
adc
sub
or
dec
jle
and
xlat
jns
inc
add
mov
iret
mov
xchg
mov
add
and
cmpsl
cmpb
add
out
lea
scas
or
and
cmc
test
dec
add
or
js
adc
and
cmp
pop
out
mov
add
testb
test
xchg
repz
add
inc
and
cmp
fistpl
sbb
arpl
out
mov
jp
add
shrl
pop
xchg
add
fidivs
lock
out
out
das
add
cmp
sti
xor
adc
fwait
and
cmp
pop
or
and
xor
sarb
sub
dec
or
test
test
les
add
push
add
xor
mov
cmp
pop
rcll
push
clc
lret
adcb
fdivrl
fs
add
add
call
jae
shlb
loopne
iret
dec
add
inc
outsl
aaa
mov
inc
push
call
aam
adc
xor
clc
mov
inc
mov
fdiv
adc
xchg
mov
jg
inc
adc
pushf
add
sbb
dec
sub
mov
adc
fs
popa
call
mov
lea
mov
mov
dec
add
or
out
cmc
add
xchg
mov
mov
sbb
aas
fcmovu
call
add
repnz
hlt
mov
sbb
jge
in
mov
xchg
push
add
xor
out
add
pop
add
dec
ja
pusha
cmp
test
mov
adc
sti
notb
out
mov
add
idiv
es
inc
xchg
cmc
add
add
fwait
out
adc
and
add
fs
adc
add
xlat
cmpb
out
jle
inc
dec
dec
add
ss
xchg
mov
jae
idivb
pop
popf
mov
out
xor
sub
jle
add
push
aad
sub
push
or
fimull
adc
adc
xor
fidivl
cmp
call
outsl
add
xchg
mov
aam
das
jle
dec
mov
or
enter
orl
ds
cmp
clc
mov
lods
mov
add
lahf
sbb
ret
add
jl
aaa
lods
pop
out
sbb
dec
mov
fildl
push
add
test
fs
pop
aas
arpl
dec
adc
loopw
ret
add
insl
bound
aaa
scas
or
ficompl
adc
and
ret
rolb
sbb
add
test
mov
inc
pop
mov
fidivrl
fbld
push
pop
dec
pop
pop
pusha
stc
mov
lds
inc
jo
add
jle
nop
cwtl
sbb
mov
and
dec
aaa
dec
ss
fidivl
adc
jo
nop
aam
jl
add
jno
add
rcrb
cmp
add
jmp
shlb
lcall
jae
cmp
dec
adc
dec
push
or
mov
mov
mov
dec
lahf
clc
dec
lret
sbb
adc
inc
adc
add
pop
popa
cltd
push
xor
and
cmp
sub
push
or
or
cld
mov
in
or
mov
or
adc
pop
scas
and
and
pop
sbb
xchg
mov
xchg
push
cmpsl
icebp
jns
pop
jb
call
mov
sbb
xor
dec
dec
mov
xchg
and
roll
aad
lret
pop
adc
repz
roll
lock
iret
add
int
dec
mov
pop
and
lods
jp
pop
jg
bnd
clc
pop
sbb
and
sbb
add
loop
out
aad
cmp
cmp
or
and
sbb
sti
cltd
call
inc
andl
or
or
add
jg
push
nop
lock
lods
or
hlt
xchg
in
jns
sbb
cmpsl
call
and
dec
outsl
test
lods
mov
xchg
addl
inc
arpl
mov
add
in
ret
and
or
popf
mov
dec
sbb
adc
fisttps
negb
out
jo
testl
inc
sbbb
add
scas
es
xchg
push
stos
sub
testb
mov
daa
andl
inc
int3
adc
cmp
out
push
rcrb
ljmp
imul
adc
add
enter
add
jnp
inc
in
out
mov
cwtl
test
inc
mov
dec
cmp
xchg
sub
mov
adc
push
cld
add
mov
or
hlt
push
xchg
add
inc
cmpb
or
mov
add
and
inc
push
jbe
sbb
dec
inc
xor
jle
sub
jl
and
clc
pop
adc
and
jmp
and
stos
test
mov
adc
add
movsl
adc
int3
add
jb
pop
push
cmp
sub
mov
cltd
jnp
mov
mov
movsb
add
out
xor
add
nop
push
push
dec
subb
or
out
roll
fbstp
inc
pop
popa
mov
test
pop
cmp
stos
push
xchg
and
in
cmp
clc
sarl
inc
pop
push
fs
hlt
mov
adc
jmp
push
out
and
adc
xchg
sbb
nop
push
xor
cwtl
pushf
rclb
call
push
cwtl
xchg
dec
arpl
les
xor
ret
inc
pop
xchg
add
mov
rclb
andb
pop
push
loopne
mov
sub
repnz
and
adc
adc
cmp
sbb
loopne
roll
pop
cwtl
clc
je
xorl
push
cmp
int3
loopne
adc
dec
mov
cli
shll
ret
dec
add
addr16
adc
mov
daa
das
jle
xchg
lods
pusha
push
push
stc
adc
mov
add
dec
xor
mov
xor
or
test
or
mov
adc
hlt
stos
push
popa
cmpsl
fcompl
and
dec
hlt
and
daa
aaa
xor
push
sbbb
xor
lods
adc
iret
loope
and
or
shll
push
sbb
dec
xor
adc
cmp
andl
lahf
sti
or
in
enter
add
xchg
out
xchg
mov
mov
fcmovbe
mov
jb
adc
mov
inc
pop
negl
inc
xchg
shlb
inc
jl
pop
sbb
or
rolb
push
add
pusha
xor
add
jo
xor
or
rolb
popa
and
add
sub
call
xchg
xor
xorl
jecxz
mov
add
jge
and
mov
xchg
jns
dec
add
jae
sbb
xorb
call
cmp
cmp
lret
inc
mov
pop
cmp
stos
fimull
cmp
xor
and
cs
or
lods
mov
test
xchg
or
sub
fmul
add
subl
lea
fcompl
add
sub
psrlw
sub
xchg
inc
mov
mov
pop
mov
jae
adc
popa
lret
pushf
fs
fs
adc
add
cmp
and
sub
mov
xchg
lock
fldl
and
enter
insb
lret
push
push
cmp
dec
pushf
in
movsb
mov
lods
mov
addr16
sub
imul
stc
addb
mov
dec
pusha
sbb
add
xchg
jle
je
push
call
stc
push
or
jle
inc
dec
and
movsb
inc
mov
dec
cmc
aas
dec
pop
xchg
movsb
mov
call
xchg
adc
lods
fs
jbe
int3
mov
outsb
clc
mov
lock
xchg
add
pop
lret
pop
orl
xor
jbe
add
popf
imul
add
push
fisubs
and
rorb
xchg
cmp
fisttps
adc
and
and
pop
inc
js
dec
pop
pop
add
test
decl
pop
cwtl
mov
sbb
icebp
cld
pop
inc
pushf
adc
cmpsb
dec
fsubs
add
fs
popa
sub
and
sbbl
fcoml
mov
add
mov
lods
lcall
fsub
inc
xchg
mov
cmpsl
dec
repz
add
mov
dec
jne
arpl
adc
pop
dec
pusha
mov
test
cmp
rcrb
xor
test
sbb
pop
lahf
in
xchg
div
cltd
out
into
pusha
pusha
and
adc
or
out
jb
jg
xor
lahf
mov
adc
add
cwtl
or
daa
mov
mov
jp
call
lds
lods
or
int3
addr16
mov
rol
add
out
fimuls
shrb
xchg
pop
pop
and
sbb
movsb
and
pop
ret
in
xor
mov
in
repnz
sbb
push
sbb
inc
addl
and
test
xor
test
xor
jle
dec
mov
rorb
lods
sub
sar
mov
or
mov
add
push
inc
shl
cmp
cmpb
and
leave
dec
push
imul
jl
xor
dec
mov
add
lea
jmp
or
cmp
pusha
inc
jge
mov
ds
sub
sbb
sbbl
pop
xchg
add
adc
daa
add
and
jp
aas
dec
repz
cmpsl
arpl
fcoml
or
leave
sti
imul
adc
sbb
push
mov
sub
xor
xor
cmp
sbb
pop
stos
cmp
and
xor
adc
inc
xchg
and
pusha
stc
notb
es
sub
lock
pcmpeqw
add
mov
dec
std
rolb
pop
inc
add
bnd
mull
add
or
cwtl
mov
out
jg
or
add
arpl
add
imul
pushf
repz
sbb
outsb
or
dec
mov
cmp
fsts
iret
scas
pop
inc
push
stos
pop
pop
lret
sub
push
mov
aad
dec
add
push
mov
mov
mov
lcall
in
xchg
or
into
sbb
push
decl
adc
push
sub
sbb
sahf
js
popf
mov
and
sbb
ret
clc
jae
adcb
mov
sbb
ss
hlt
sub
adc
and
or
jbe
pusha
push
xorb
add
xchg
pop
fwait
sbb
push
or
nop
ljmp
adc
mov
movsb
cmc
repz
fdivrs
inc
jmp
or
aaa
adc
inc
push
inc
and
pop
sti
popa
sarb
and
and
call
test
sbb
insb
jo
out
add
or
inc
js
jnp
ret
pop
mov
push
xor
movsl
int
xor
mov
add
sub
into
jns
jno
sbb
add
fld
les
filds
aam
lds
or
push
mov
add
sbb
sbb
insb
ret
cmp
sub
loope
inc
add
add
cmpb
rcrb
add
ss
xchg
ret
or
js
or
add
cs
adc
cld
and
dec
fsubl
adc
movsb
add
mov
lcall
push
call
and
add
cmpsl
and
inc
push
cs
scas
fadd
js
jge
addr16
bound
pop
adc
pop
lds
rclb
les
sti
pop
dec
mov
aaa
sub
adc
test
loopne
icebp
cmc
add
es
arpl
jecxz
ss
and
sbb
add
or
push
pusha
sbb
adc
mov
or
add
jbe
xchg
push
jne
sbb
push
shrl
ljmp
je
push
mov
mov
pushf
mov
cmpsb
jno
lods
nop
push
rcll
aad
inc
adc
xor
aad
repnz
imul
sub
xor
xor
call
jbe
and
adc
xor
scas
mov
movsl
movsb
leave
sub
and
sbb
popa
call
popa
cmp
mov
xor
mov
mov
push
xchg
jmp
pop
lock
hlt
adc
sahf
test
adc
cmc
and
cmp
pop
inc
pusha
es
mov
ja
pop
sahf
je
adc
add
jae
mov
push
test
mov
push
mov
dec
mov
in
dec
xchg
pop
push
rclb
jo
js
jb
push
inc
jne
push
repnz
mov
loop
xor
stc
adc
inc
and
or
cmp
outsl
cmp
add
fisubrl
or
add
cs
jge
stc
sti
pop
jno
push
inc
jmp
mov
adc
adc
mov
sar
mov
add
pusha
sbb
dec
fwait
xchg
sub
mov
or
xor
les
add
dec
xor
hlt
or
in
or
mov
pop
jp
inc
lcall
xor
lea
rcl
pop
pop
pusha
mov
ja
inc
xor
sbb
je
add
aaa
adc
nop
stc
sbb
jp
js
sbb
mov
loopne
pop
jmp
inc
aas
in
lret
lahf
mov
sbb
aaa
jecxz
imul
cmp
pop
mov
and
adc
or
push
test
jbe
nop
add
popf
jmp
nop
cwtl
sub
xchg
in
dec
add
pop
xor
add
ror
mov
or
mov
mov
test
mov
pop
jo
add
mov
sarl
cmp
cmpsl
pop
mov
in
leave
dec
cmp
xchg
je
jmp
add
pop
out
adc
sub
mov
and
popf
jbe
or
or
daa
add
sbb
test
shlb
daa
add
or
pushf
mov
push
push
stc
stos
xlat
jmp
or
or
cmp
or
cltd
int3
or
pop
clc
add
jb
insl
adc
iret
add
ret
daa
inc
rorb
sbb
add
scas
dec
loope
xor
and
sub
add
inc
jae
int
xchg
les
add
or
push
mov
dec
adc
out
jo
aad
ja
mov
and
add
mov
sbb
mov
jge
and
or
outsb
xchg
pop
das
in
jbe
fwait
stc
int
and
xchg
cwtl
or
in
popa
and
pushf
movsb
add
sub
in
popf
insb
fildl
gs
and
setp
or
push
cli
sub
and
sub
rolb
rcr
pop
test
push
aam
pop
into
outsl
sbb
push
jo
dec
and
inc
test
pusha
js
das
addr16
fnstcw
and
mov
and
add
xchg
movl
out
add
movsl
xor
jmp
nop
arpl
les
sbb
add
bound
or
adc
xchg
mov
sbb
jp
in
lds
pop
outsb
mov
cmp
sbb
stos
adc
push
xchg
lock
cld
test
add
sub
push
shlb
sub
xchg
adc
pop
fiaddl
and
dec
mov
pop
sbb
popa
les
rcrb
jns
xorl
cmp
pop
adc
subb
popf
ror
stos
sub
mov
pushf
jnp
in
push
pop
call
xchg
lahf
mov
jl
stc
loopne
out
icebp
test
fs
and
sbb
fists
dec
sub
push
adc
mov
dec
and
lcall
in
pop
pop
xor
sub
sub
dec
xchg
lahf
xor
fistl
push
adc
push
push
mov
fbstp
pushaw
jl
sbb
das
pop
pop
inc
or
inc
pop
dec
push
pushf
lods
add
dec
imul
ja
and
adc
fadds
daa
dec
dec
push
mov
mov
pusha
or
adc
add
in
add
shll
add
mov
push
and
enter
push
pop
lds
push
add
pushf
mov
mov
add
or
ds
jle
push
mov
adc
repnz
push
or
dec
xchg
data16
add
pop
push
pop
jo
popa
repz
or
jae
and
sbb
push
jae
and
jo
addb
call
popf
add
cmpsl
or
sub
pop
mov
pop
dec
pop
push
mov
jno
push
xchg
and
xchg
add
ror
bound
and
mov
lods
or
or
stc
adc
mov
ds
push
cmp
ljmp
jnp
xor
shlb
push
lret
mov
je
hlt
mov
mov
adc
lods
fxch
loopne
lock
movsb
pushf
cmp
cmp
fdiv
fmull
sarb
mov
andl
mov
adc
imul
cltd
jge
into
lret
sub
scas
inc
inc
mov
mov
test
fwait
iret
jbe
jg
mov
mov
inc
nop
fidivrs
int
lods
nop
cmp
gs
or
adc
fcoms
sbb
xchg
shrl
and
es
adc
mulb
movsb
lods
cmp
loope
in
dec
test
scas
and
das
pop
fildl
mov
fwait
adc
xor
cmp
testb
mov
pop
movsl
jbe
cmpsb
adc
xchg
jg
sahf
cwtl
inc
fcmovu
xchg
xorb
pop
idivb
fimuls
inc
test
je
xchg
add
xlat
leave
sub
aam
orb
xchg
sbb
and
lret
call
and
repnz
rorl
pop
sub
push
xor
bound
mov
jp
es
das
sarb
or
jnp
and
repnz
mov
add
push
stc
mov
inc
push
jno
sub
ja
or
and
pop
cwtl
xchg
je
into
pop
jbe
dec
mov
lods
cwtl
dec
mov
dec
cli
clc
or
inc
mov
pop
jmp
mov
xchg
rol
test
pop
and
and
aas
inc
mov
enter
stc
jo
jmp
adc
sbb
mov
mov
pop
inc
mov
subl
mov
sub
inc
xor
cmp
or
jb
add
mov
mov
dec
sbb
jecxz
mov
jmp
daa
cmp
rcpps
dec
adc
push
jp
or
sub
push
add
ja
push
call
mov
cmp
pusha
push
mov
dec
lods
xchg
xchg
xor
aad
in
sub
push
jp
out
xor
push
or
gs
xchg
mov
arpl
mov
add
outsb
xchg
sub
cld
enter
hlt
loopne
test
and
clc
andb
adc
push
push
jmp
or
push
iret
xor
pushf
and
push
jge
lock
add
xor
dec
mov
mov
xor
dec
or
call
add
jno
xor
push
mov
loopne
add
or
push
pop
insb
jnp
lahf
shr
mov
mov
sarl
add
dec
mov
adc
adc
adc
sbb
arpl
js
jb
daa
imul
push
outsb
js
mov
and
lahf
dec
sub
push
add
push
paddd
add
xor
sub
jp
add
out
divl
dec
pop
xchg
mov
adc
jg
jmp
in
add
pop
sbb
fcom
in
pop
inc
roll
sbb
in
addb
shrb
ljmp
and
aas
push
jp
add
push
xor
and
inc
iret
mov
stc
pop
arpl
adc
out
aam
cmpb
aaa
sub
jo
pushf
je
ja
pop
cmp
adc
pop
sbb
addb
arpl
mov
test
sub
addr16
in
add
lahf
testb
lcall
or
fnstenv
pop
and
push
add
daa
mov
cmp
pop
ret
insb
or
std
insb
das
cmp
inc
inc
fimuls
xchg
out
mov
push
fs
adc
lahf
jge
add
push
mov
subb
or
inc
lods
in
pop
xchg
dec
dec
fwait
pusha
andb
in
inc
adc
into
adc
push
cmp
lods
jne
popa
push
arpl
add
dec
out
test
and
dec
mov
jle
dec
mov
inc
and
push
sbb
mov
ret
mov
inc
shl
sub
fmul
loope
and
add
xchg
std
cmp
jmp
pushf
inc
jge
sub
push
ficoml
push
jnp
cmc
inc
hlt
mov
insb
and
lods
sub
push
rcl
aas
jecxz
inc
mov
cli
stos
hlt
fsubs
dec
jno
add
adc
aaa
mov
clc
xchg
aam
nop
out
pop
aaa
xchg
adc
mov
mov
inc
mov
loopne
push
nop
and
xchg
cmp
cld
aas
loopne
and
and
mov
cmpl
and
add
jo
les
sar
cmp
add
jge
call
les
jns
and
add
fimull
or
add
jno
dec
mov
sbb
inc
sub
jns
sbb
add
in
add
dec
test
or
bound
add
mov
enter
mull
pop
loopne
fcomps
fdiv
and
dec
inc
or
popf
push
fisubl
or
dec
mov
jle
add
mov
cmp
mov
cld
addb
stos
call
loope
cmc
mov
xor
xchg
les
jno
sahf
inc
test
add
bound
enter
test
sbb
idivb
push
add
pop
stc
aaa
add
test
dec
sub
out
mov
call
pop
xchg
xchg
jb
bound
and
jb
sub
cmp
or
outsb
jno
cmpsb
in
push
js
pop
lods
je
mov
in
cmp
and
add
shlb
xor
shr
jno
cmp
fimull
inc
jo
push
xor
adc
adc
cs
sti
dec
sub
mov
fdivrs
mov
add
je
mov
inc
sub
sbb
pop
xlat
xor
sbb
leave
pop
les
lods
cmp
dec
pop
fwait
and
inc
shl
add
xor
js
test
cmp
test
cs
add
addr16
cmpb
xchg
je
jbe
sbb
ficomps
popa
bound
lret
inc
inc
fisttpl
push
arpl
and
mov
sbb
add
mov
adc
dec
cltd
and
xchg
fnclex
dec
imul
repnz
xor
inc
pmulhw
push
and
xchg
adc
sub
and
or
pop
or
lock
sub
jge
inc
mov
mov
adc
dec
mov
dec
sbbl
jecxz
mov
or
lcall
in
mov
clc
cli
inc
and
imul
sahf
jge
add
insb
inc
lret
imul
mov
sub
push
rcrb
adc
mov
rcr
nop
push
or
add
aam
sub
push
jb
push
out
jno
xchg
push
and
push
add
lahf
and
outsb
adc
rol
rcll
pop
mov
dec
xchg
add
inc
ds
jbe
mov
sub
xorb
cmp
inc
test
add
inc
fcmovnb
xor
or
call
dec
out
popa
lahf
or
lahf
xchg
pop
jmp
mov
ds
daa
xchg
dec
mov
pop
push
insl
cmp
xor
test
mov
nop
add
dec
mov
es
inc
xchg
les
dec
js
jo
add
add
loopne
popa
adc
or
shll
pusha
test
add
cmp
pop
xchg
js
or
push
ds
cmp
sbb
cli
sbbb
cli
jp
lret
popa
xchg
add
inc
sub
jge
cli
fsubrp
arpl
mov
mov
adc
and
add
sub
pop
inc
xchg
fs
add
lcall
cmp
movsb
push
push
jmp
xor
dec
or
std
loopne
nop
lods
mov
adc
faddl
add
loop
movsl
mov
add
xchg
rorb
fstps
lods
nop
xor
add
out
xchg
xchg
adc
repnz
subb
add
sbb
inc
ds
sti
dec
int3
and
cmp
or
pop
xor
mov
adc
sub
iret
es
and
out
and
jecxz
sbb
leave
xchg
mov
cmp
push
adc
mov
enter
bound
pop
aaa
jbe
addl
mov
xchg
insb
mov
dec
dec
cmpsb
push
xor
jns
jnp
pusha
push
cmp
push
cmp
nop
in
pusha
xorb
fwait
cmp
movsl
mov
mov
inc
push
es
dec
inc
add
sbb
lods
adcb
cli
stc
adc
xchg
sbb
jmp
mov
pop
cmc
sbb
bound
pusha
je
test
add
mov
jge
lret
push
sbb
in
mov
pop
or
jo
test
subb
dec
add
inc
jl
lods
in
mov
imul
or
jns
mov
shld
inc
ds
mov
pop
mov
sub
mov
inc
loope
sub
out
and
cmpsb
cmpsb
loopne
inc
fimull
jne
cwtl
shlb
std
nop
sub
cltd
adc
mov
add
dec
call
fstpl
clc
push
xor
mov
pusha
cltd
scas
or
fisttps
aas
ficomps
inc
jbe
push
mov
lahf
call
cmp
dec
and
xor
mov
cmp
mov
pop
mov
pop
mov
push
imul
jns
pop
xor
pusha
mov
mov
sahf
add
jbe
push
loopne
dec
push
and
popa
and
jle
or
xor
enter
insb
lods
mov
daa
mov
sub
add
or
in
in
test
lods
and
add
cmpsl
into
add
jl
lods
jbe
add
jnp
adc
outsb
xchg
cltd
adcb
mov
jp
test
pop
cmp
icebp
xor
pop
shl
add
dec
add
std
repz
insl
icebp
fstps
add
rclb
add
fsubrl
das
je
xchg
or
sub
fidivrl
js
cld
jo
shrb
loopne
out
movsl
adc
jge
jle
cmc
in
in
pusha
out
rorl
cli
mov
rolb
nop
shr
popf
pushf
cmp
addr16
xor
mov
daa
add
shl
outsb
mov
out
xchg
cwtl
jae
jae
rclb
dec
stos
cmc
std
sub
mov
sbb
add
mov
push
add
ds
test
sahf
cmc
es
mov
push
imul
test
loopne
or
mov
repnz
movsb
xlat
add
jmp
loop
jnp
rol
mov
in
add
pop
loopne
stos
daa
mov
cli
cmp
add
fs
xchg
mov
movsb
xor
scas
test
ret
or
aaa
fsubrl
mov
adc
push
je
mov
ljmp
bound
scas
dec
bound
movsb
repnz
and
js
xor
sbb
movsl
lret
xor
test
in
pop
stos
mov
shrb
mov
and
sub
add
push
fcoml
fcomps
pop
cmp
fistps
shrl
imul
sub
sbb
xchg
loopne
push
dec
scas
xchg
sub
dec
dec
fdivrs
cltd
movb
add
dec
and
adc
mov
ds
xchg
mov
xchg
add
pusha
dec
divl
sbb
add
dec
fs
sub
jle
daa
pop
addl
add
mov
add
dec
inc
xlat
cmpsb
lret
and
fwait
adc
and
mov
cld
aaa
adc
mov
popa
jp
outsl
jecxz
sarb
fisubs
push
aas
sub
sub
or
or
cmp
rorl
inc
mov
ds
test
xorl
mov
add
lcall
leave
cltd
xor
xor
iret
call
cmp
jp
add
sub
xor
sub
daa
cmpsl
xor
push
mov
in
shlb
lcall
mov
insb
pop
in
into
sub
or
xor
js
inc
fdivrs
sbb
adc
js
orb
or
xchg
add
push
pusha
mov
or
or
sbb
iret
pop
hlt
imul
je
fdiv
and
or
shr
and
rcll
test
lods
in
pop
mov
cmp
fdivrs
addb
into
push
dec
das
pusha
movsb
ds
sub
loop
sbb
inc
mov
xchg
adc
lods
and
mov
iret
mov
fnstcw
adc
orb
and
rcrl
add
in
loopne
movsl
lds
movl
rcrb
inc
call
sbb
pushf
adc
add
les
mov
xchg
add
repz
shlb
jecxz
out
dec
mov
rcrb
sbb
push
in
clc
mov
adc
punpcklbw
fsubs
addb
imul
lea
dec
mov
faddl
mov
loopne
call
loopne
scas
inc
mov
add
test
lahf
pop
adc
insl
ds
jge
add
jno
loopne
xchg
das
fstpt
cmp
movsb
dec
add
fldcw
mov
sbb
jno
aas
int
push
in
jns
js
mov
xchg
cwtl
or
stc
or
gs
insb
dec
push
iret
push
clc
or
push
call
jae
pop
rol
cmp
subb
mov
xchg
adc
cmp
inc
shrb
das
movsl
popa
pusha
jl
les
fistpl
movsb
xor
jle
add
cmp
cmpb
jmp
daa
jg
rolb
jbe
cmp
les
fucomi
xorb
in
test
outsl
test
mov
mov
cmp
or
je
daa
call
xchg
or
fdivrp
clc
adc
sub
enter
bound
adc
test
imulb
lods
movsb
loop
dec
lret
xor
cmp
jo
stos
outsl
cs
cmp
add
shlb
mov
imul
sbb
nop
jno
sbb
mov
ret
dec
push
jo
jo
mov
dec
jns
es
pop
ds
addb
loope
pop
jecxz
pop
push
sub
aaa
insl
mov
sub
jecxz
out
mov
insl
add
aad
sbb
icebp
xor
and
mov
mov
add
pushf
frstor
bound
mov
pop
jae
mov
mov
inc
xlat
idivl
or
js
inc
jbe
xchg
jle
clc
cmp
mov
lock
adc
adc
or
dec
add
ret
mov
enter
inc
mov
stos
out
dec
sbb
adc
or
push
das
cmp
and
sbb
imul
push
and
push
addb
inc
cwtl
pop
adc
xchg
ss
loop
xchg
loope
dec
popf
and
mov
pop
or
sbb
cmp
mov
push
rorb
fs
lahf
dec
add
push
add
loopne
lcall
pushf
adc
xchg
inc
nop
or
mov
mov
cwtl
jle
dec
mov
stos
and
xchg
add
lds
push
xor
ds
and
push
xchg
cs
aas
das
inc
and
adc
lods
adc
or
mov
test
loop
aas
sti
bound
sub
pop
xor
or
mov
ss
push
aas
jno
test
mov
xor
adc
outsb
mov
mov
vzeroall
mov
adc
int3
js
mov
les
xor
and
push
or
mov
lds
lods
leave
pop
in
push
jl
repz
cwtl
ja
aas
subb
in
pop
stos
inc
mov
or
add
cmp
jno
roll
call
xchg
mov
sbb
cmp
ds
andb
shlb
and
mov
test
gs
sbb
add
fs
loope
push
xorl
insl
pusha
insl
add
cmp
call
add
cmp
xchg
lods
enter
sbb
loopne
je
xchg
add
enter
inc
jmp
cmp
push
and
stos
xchg
cmpsb
sub
xchg
xchg
dec
jae
mov
arpl
inc
push
subb
rolb
sbb
inc
jbe
call
nop
inc
ret
cmp
dec
addb
push
push
popf
inc
pop
push
subl
fadd
mov
xlat
mov
imul
mov
sbb
xor
cmp
push
ret
pop
loopne
stc
lds
aam
fiaddl
jns
push
in
std
dec
pop
add
or
xchg
cmp
addr16
fsub
movl
add
mov
adc
xchg
sub
enter
leave
mov
jb
aas
xchg
inc
add
add
aas
repnz
add
sub
fcomps
aaa
xchg
sbb
pop
bound
int3
adcl
lods
dec
lea
xchg
xor
dec
xor
shll
sub
cmpl
popf
pushf
adc
and
movsb
push
sbb
iret
sbb
rcrb
jns
hlt
add
sti
sbb
ficompl
out
sbbb
inc
pmaxub
adc
or
fsubrl
jecxz
int3
push
subb
xchg
add
mov
add
push
cmp
inc
mov
dec
inc
adc
sbb
inc
test
inc
inc
shrb
rorl
dec
or
mov
add
in
ds
dec
out
add
in
aad
cmp
push
jmp
or
sbb
mov
inc
in
pusha
cmpsl
xchg
bound
cmp
mov
in
or
mov
les
stos
push
add
cltd
ret
fstps
fstpt
jno
cmpsb
adc
inc
movsb
mov
inc
enter
push
xchg
adcb
fnstsw
sbb
jbe
inc
aad
add
push
pop
inc
out
insb
addl
popa
and
js
fwait
aaa
sti
mov
std
rcrb
inc
cmc
xlat
and
cmpsl
mov
cli
xor
or
cmc
xchg
jns
adc
repz
dec
and
loop
mov
inc
mov
adc
ds
push
sub
push
inc
xchg
xor
imul
outsl
and
rol
jbe
rcr
shrb
pop
int3
fdivl
bnd
push
fcompl
push
push
mov
jo
mov
inc
out
sbb
test
les
popf
inc
mov
cwtl
andl
jbe
sub
enter
andb
sahf
mov
mov
or
push
mov
and
sub
imul
loopne
cmc
cli
add
popa
xchg
adcb
add
inc
mov
outsl
dec
jg
add
mov
xchg
shl
movsl
xor
push
adc
lcall
mov
adc
dec
pushf
dec
shr
imul
or
ret
add
push
outsl
jp
aam
arpl
lock
jg
in
pop
lods
or
or
lods
cmpsb
and
jg
sbb
xchg
push
cmovg
add
enter
mov
outsb
pop
ret
push
dec
sub
arpl
scas
inc
cld
test
dec
ja
cmp
sbb
repz
pop
insl
or
inc
push
mov
orl
addl
das
popa
mov
int3
mov
fs
pusha
movsl
xchg
lods
repz
xor
inc
jae
xchg
int
pop
das
xchg
jns
std
nop
out
cmc
xor
sbb
popl
pop
xchg
adc
jo
hlt
adc
es
jmp
add
inc
mov
add
jb
adc
testb
int
xor
and
in
add
sub
add
and
cmpsl
inc
arpl
inc
lcall
xchg
adc
sahf
sub
dec
addl
fists
sbb
dec
push
out
dec
adc
rolb
mov
popa
inc
lock
std
shl
fcom
aas
bound
mov
lcall
popa
stos
mov
mov
dec
pop
dec
xor
adc
adc
jo
lret
xchg
inc
adc
lods
loop
aas
push
xor
mov
scas
mov
push
sub
outsl
add
sub
add
sub
repz
in
sbb
dec
loop
push
aas
roll
adc
and
stos
jbe
push
cli
shll
lahf
mov
insb
sbb
dec
dec
adc
fildl
or
pop
lret
in
add
sarl
aas
arpl
or
andb
stos
mov
inc
pop
into
mov
into
and
push
pop
rol
push
imul
faddl
loope
fimull
inc
or
add
mov
xor
pop
loopne
cmp
mov
pushf
cmp
call
push
xorb
adc
repnz
mov
and
mov
pusha
lea
sbb
push
adc
lahf
mov
add
das
mov
sbb
pop
mov
shlb
jno
fs
loopne
and
cmp
fsubrl
sbb
loopne
inc
mov
adcl
sbb
int
or
stos
pop
sbb
jne
xorb
ja
bound
cld
nop
and
test
pop
pop
popa
stos
push
clc
or
mov
sub
rolb
movsb
xor
inc
das
lods
fistl
cmp
inc
and
inc
jo
push
or
cmp
insb
add
push
jnp
lcall
push
imul
pusha
jo
add
bnd
loop
mov
addr16
pop
mov
into
or
aam
pop
xchg
and
ficompl
bound
dec
lock
sbb
mov
sbb
movsl
shll
jg
push
pusha
inc
and
movsl
test
add
mov
dec
sub
lods
and
shrb
les
fbld
and
aaa
mov
loope
enter
add
jmp
in
jno
movsb
xor
filds
mov
and
cld
pop
outsl
mov
mov
lcall
mov
add
imul
jne
add
out
ja
addb
xor
push
clc
fs
inc
jg
pop
pop
sti
add
mov
es
ret
jmp
add
pop
cmp
mov
pop
ret
nop
inc
nop
sub
daa
lock
popa
xchg
call
push
add
je
inc
iret
sbbl
mov
outsb
enter
adc
nop
sbb
mov
add
sbb
push
in
dec
add
fidivrl
stos
mov
adc
movsl
mov
cmp
pop
add
xchg
and
test
insb
xchg
sub
addb
imul
enter
sbb
add
add
cmpsl
mov
scas
mov
ljmp
cmc
xchg
cmp
xchg
adc
leave
cs
adc
testb
stos
rcrb
push
stos
nop
sbb
aam
adcb
mov
decl
inc
insl
test
xchg
mov
movsl
ret
les
xchg
mov
fcmovb
or
pop
imul
fiadds
and
aad
push
lea
adc
and
fstps
mov
enter
mov
testb
outsl
mov
add
jecxz
and
scas
add
inc
xor
hlt
jp
pop
mull
add
pop
stc
add
mov
popa
add
and
mov
cmp
dec
add
push
rcrb
push
js
inc
test
cltd
jae
out
roll
in
push
je
addl
aas
aaa
mov
cmp
push
shl
mov
add
hlt
or
lods
add
push
stos
push
and
and
add
cmpsl
pop
and
jo
ret
mov
outsl
cwtl
popa
fldl
sbb
add
mov
pop
and
movb
cmp
pop
add
loopne
les
stos
insb
lret
aaa
push
inc
add
retw
jne,pn
dec
add
ret
sbb
pop
lods
shll
lock
add
and
jl
rcrb
mov
add
push
xchg
add
fildl
sub
inc
inc
or
xor
stos
xchg
adcl
and
add
out
pusha
add
hlt
in
jmp
add
adc
push
mov
ss
cmpsb
pop
pop
pop
mov
cwtl
fdivp
mov
jo
enter
dec
stc
pop
ss
test
jle
repnz
das
add
mov
sub
roll
cli
bsf
testl
movsl
ret
mov
add
jae
ljmp
add
lods
mov
movsb
std
lods
xor
int
into
aam
jecxz
inc
lret
rorb
add
or
loop
jnp
sub
mov
add
mov
sub
pop
std
sarl
pmullw
cwtl
xchg
sbb
cltd
pusha
mov
mov
and
outsl
lahf
out
aam
and
movsb
jno
sbb
ja
rcrb
xchg
push
mov
rol
and
ljmp
andb
hlt
dec
orb
cmp
or
mov
push
test
fsubr
inc
sbb
mov
in
pusha
mov
sahf
or
rorb
cmpsl
inc
sbb
pusha
cmp
add
xor
mov
pop
jmp
push
bnd
sbb
push
sub
xchg
rcr
or
pop
or
add
or
and
aam
xor
sti
mov
jo
jae
test
faddl
mov
daa
pop
fs
jno
add
testb
pushf
ficompl
pop
dec
xchg
jecxz
outsb
in
mov
and
fs
idivl
das
hlt
leave
mov
fbstp
or
andl
jg
xchg
pop
movsl
insl
add
pop
shrb
inc
mov
mov
jl
sub
jo
popf
jg
cmc
mov
das
pop
mov
add
adcl
cmovae
les
enter
hlt
and
inc
pop
push
pusha
cwtl
push
rdtsc
sub
push
sbb
mov
mov
nop
jmp
cmp
sbb
ljmp
jo
sarb
mov
imul
mov
cs
mov
cmp
adc
add
test
xor
and
jnp
pop
mov
iret
dec
add
sub
rcrl
sbb
or
xor
mov
mov
mov
bound
shrl
stos
imul
shl
push
out
mov
rorl
add
not
mov
inc
xlat
xchg
out
jno
mov
add
movsl
push
orl
jae
rorb
jns
mov
add
fadds
mov
push
pop
in
je
pushf
cmp
add
sbb
test
je
pushl
adc
add
stc
sub
dec
cmc
shlb
fbstp
sbb
dec
push
mov
out
fadds
cmp
aam
subb
cmp
inc
mov
and
popf
and
test
popf
pop
nop
in
or
mov
sbb
loope,pt
xlat
testl
cmp
clc
sub
pop
jne
test
arpl
popa
in
roll
fld
movb
xchg
mov
daa
repnz
push
loopne
sbbl
push
dec
mov
cmp
lods
sbb
sbb
inc
call
cli
fs
inc
icebp
test
dec
xlat
push
xor
enter
cmp
mov
sbb
out
adcl
xor
and
incl
inc
sbb
xchg
imul
add
xchg
subb
sbb
mov
mov
mov
hlt
rol
clc
es
ret
es
popa
xor
pushf
xchg
les
or
rcr
pushf
pop
pusha
mov
test
imul
mov
aam
lret
aad
orl
xchg
pop
jae
push
cmp
lea
adc
mov
sub
cmc
dec
lahf
jge
push
pop
aaa
orb
mov
or
jb
xchg
std
add
jg
out
mov
lods
rcrb
gs
pop
sbb
jl
mov
mov
xchg
es
subl
in
mov
push
imul
push
cmc
adc
incl
mov
clc
cld
add
sub
int
sbb
pop
sbb
pop
ja
lock
pop
daa
ja
loopnew
adc
addb
add
mov
sub
out
mov
push
sbb
mov
pop
add
or
or
jmp
andb
jl
push
and
out
mov
jo
or
pop
out
add
mov
mov
jg
push
pop
inc
cmp
subl
hlt
cmpsb
add
ss
adc
das
orb
lahf
pop
cltd
lods
adc
push
call
mov
lods
push
scas
fidivrl
mov
inc
and
fs
in
mov
push
mull
gs
or
dec
pop
loope
jmp
jo
mov
daa
gs
addr16
inc
sbb
shlb
jle
add
xor
cs
push
or
jmp
popf
xchg
and
add
and
mov
imul
dec
decb
sti
mov
sub
xor
dec
adc
push
aam
add
push
fldt
outsl
push
dec
jmp
cwtl
daa
popf
add
sarl
insl
or
add
int3
sbb
and
and
jae
mov
adc
test
add
xor
pop
nop
lea
movsl
adc
out
lock
imulb
pop
mov
add
or
pop
leave
sub
jb
stos
cmp
test
mov
sbbl
popa
nop
cwtl
in
inc
add
aad
or
jmp
scas
cmp
and
popa
sub
ds
pop
push
xor
mov
fs
and
sub
pop
bound
mov
pusha
orl
loopne
popa
pop
lea
xlat
pop
das
pop
imul
jmp
push
cltd
jge
mov
inc
incb
movb
rcrl
cltd
aam
fnstenv
jge
adc
jnp
lods
push
xor
sub
jmp
mov
mov
sub
add
adc
push
jno
idivb
inc
dec
fs
pop
pop
pop
ja
xchg
adc
and
jbe
xor
mov
mov
and
or
cmpl
or
jmp
rolb
test
mov
cmpsl
jne
test
cmp
daa
dec
mov
lock
dec
cmp
cs
rcrb
pop
mov
sub
and
add
sahf
cmpsl
pusha
xchg
lock
insl
mov
add
dec
mov
lock
push
sti
sahf
popa
cmpb
daa
jo
sbb
je
scas
mov
sub
shrb
jmp
or
nopl
xchg
push
xlat
fneni(8087
or
pop
mov
cwtl
ret
push
push
mov
out
in
jno
call
adc
inc
shrl
sub
popf
cmc
pop
stos
addb
outsb
push
cmp
mov
ljmp
shl
mov
sahf
in
aaa
test
lret
les
or
call
add
and
xor
mov
fdivrs
sbb
lock
andl
cmp
push
lods
push
cmp
or
test
loop
mov
test
shl
imul
xchg
in
fwait
out
mov
pop
mov
in
sbb
mov
out
and
call
jne
cmc
outsb
xor
js
out
mov
fwait
hlt
int
or
pushf
or
push
lea
mov
cltd
pop
cmc
and
cmp
mov
ds
push
push
std
bound
sbb
add
sub
cli
push
notl
xchg
or
mov
rorb
xchg
sti
push
fildl
add
mov
adc
mov
les
int
mov
jmp
pop
mov
lods
cwtl
stos
js
add
jo
xor
aam
xchg
lock
pop
dec
out
sbb
and
lods
xor
push
mov
subl
loopne
mov
or
mov
hlt
push
mov
aad
mov
insb
rclb
xchg
inc
sbb
movsb
nop
test
and
push
out
push
iret
lds
lea
test
cmpsb
out
popa
xchg
js
jnp
enter
and
ret
test
mov
test
push
je
aaa
adc
jo
shlb
adc
lahf
jae
push
mov
cmp
pop
pop
insb
out
sbb
sub
jmp
aas
add
sahf
out
sarl
cli
push
gs
and
mulb
in
xchg
xchg
inc
adc
es
push
or
nop
mov
xorb
push
scas
cmpsl
jmp
add
push
inc
sbb
insb
inc
add
mov
movb
test
ds
pop
cmp
bound
mov
enter
stc
sub
push
aad
inc
add
adc
ss
mov
or
mov
jmp
sarl
int
jns
test
fiadds
dec
or
mov
pop
pop
pusha
adc
mov
outsl
dec
add
jp
jns
lock
cld
pop
popa
repz
jo
pop
add
pop
dec
jmp
imul
in
push
add
scas
rcll
sbb
and
loope
add
xchg
out
lock
sub
and
mov
sbb
or
rcrl
inc
push
sub
and
mov
mov
push
fcomp
movb
add
xlat
jae
or
pusha
loopne
push
pop
in
movsb
push
sahf
mov
fidivs
cmp
cmp
or
jmp
dec
cli
enter
out
sub
mov
push
lds
add
addl
or
adc
js
add
mov
test
enter
dec
inc
stos
das
sarl
fwait
dec
out
fidivl
push
cmp
lea
xor
ljmp
add
icebp
neg
sbb
add
sbb
imul
adc
shlb
mov
and
mov
adc
imul
push
and
imul
mov
cmp
fs
call
cmpsl
mov
stc
fiaddl
int
dec
fwait
shrl
mov
pop
call
jmp
cmp
sbb
fldt
rcr
pop
cmpl
inc
sbb
cwtl
mov
push
sub
sub
or
cmp
popf
xchg
sbb
pop
mov
push
cwtl
inc
je
xor
icebp
xor
jge
out
insl
sub
loope
push
push
jne
add
jmp
pop
or
and
xor
jge
or
sti
dec
pop
mov
sbb
mov
add
test
cmpsb
inc
stos
popf
mov
into
dec
sub
int
daa
jbe
adc
add
add
insl
xor
sub
inc
sbb
leave
dec
clc
or
add
jg
ss
mov
add
xchg
roll
cmp
push
add
insl
mov
sub
xor
imul
mov
outsl
jnp
sbb
cmp
mov
sub
repz
add
or
and
push
inc
or
adc
sub
fstp
insb
js
mov
xchg
xlat
mov
stc
mov
rorl
test
xor
mov
jno
fiadds
pop
in
xor
xor
rcrb
cmp
cwtl
add
dec
rolb
add
ret
cmpsb
out
in
xor
adc
mov
mov
insb
push
push
ja
sub
test
and
test
add
lret
push
les
dec
lds
xchg
or
inc
out
and
lea
mov
nop
push
xchg
adc
repz
jecxz
cltd
adc
imul
dec
add
push
and
push
lahf
mov
fisubl
arpl
test
and
cs
sub
jmp
adc
pop
test
ljmp
lock
jl
and
mov
cld
push
fmuls
push
dec
mov
lds
mov
jge
mov
dec
outsb
loopne
xor
clc
and
mov
xchg
repz
movsl
into
ss
add
subb
repz
and
in
iret
stc
pop
or
inc
roll
pop
cwtl
leave
cwtl
or
push
ror
jno
push
imul
mov
int3
sub
addr16
out
jb
sbb
leave
movsl
inc
ret
add
ds
int3
add
push
xlat
rcrl
in
aas
bound
jecxz
imul
sti
sbb
jnp
sub
fwait
ja
adc
cvtdq2ps
outsb
jbe
or
lods
cmp
add
jg
sbb
sahf
movsb
test
pop
mov
and
push
add
cmp
jp
ja
push
gs
add
xor
and
call
out
imul
cwtl
push
xchg
mov
sub
sbb
mov
lahf
xchg
leave
pusha
lcall
cltd
setae
stos
arpl
push
pusha
dec
in
lret
leave
out
add
in
dec
adc
iret
aas
xor
inc
out
loopne
push
mov
sub
repz
or
push
dec
push
fsubrl
mov
sub
adc
pusha
daa
or
dec
fwait
rorb
call
les
outsl
imul
push
lret
push
mov
and
sbb
in
push
aas
push
adc
mov
add
lret
jle
nop
dec
and
es
inc
popa
mov
loop
rcrb
aas
mov
insl
push
or
mov
mov
push
sub
cli
stc
pusha
mov
pop
xlat
lds
sub
mov
add
or
repz
ss
es
cmpb
push
cld
fdiv
inc
xor
data16
jne
or
outsb
test
pop
mov
mov
jno
pop
pusha
ss
lock
xor
lret
lods
adc
xor
lea
daa
or
int
push
or
sub
xor
test
push
mov
mov
or
pop
inc
loop
or
roll
repz
cmp
push
add
adc
sub
ja
and
add
mov
mov
jne
mov
inc
les
add
repz
pop
sub
shll
ss
sahf
push
and
sub
xor
pusha
cli
test
xchg
pusha
jle
test
mov
add
mov
xor
add
pop
roll
loop
xor
mov
not
push
iret
mov
cltd
sub
xor
test
mov
cmp
mov
mov
push
pop
les
pop
lods
inc
mov
mov
test
jno
rcrl
adcb
mov
add
clc
dec
or
mov
add
jle
mov
lcall
and
lds
popa
add
xchg
mov
cmc
adc
jecxz
fisttpll
mov
les
dec
faddl
mov
lret
inc
mov
sbb
fcoms
and
push
sub
sbb
push
xor
test
fiadds
or
adc
test
fldcw
cld
iret
popf
std
aaa
icebp
adcb
lahf
push
and
inc
add
icebp
jge
loopne
xchg
xor
mov
scas
dec
dec
xor
inc
insb
adc
inc
lds
dec
add
lret
add
xchg
push
mov
es
mov
int3
scas
jge
sbb
in
push
je
add
mov
adc
mov
jns
movsl
icebp
movl
popa
je
add
mov
or
lock
add
popf
jmp
aas
add
jbe
lock
jns
in
int
jo
or
sub
popf
ljmp
mov
popa
icebp
pop
imul
sti
mov
ret
dec
lds
jno
jmp
add
fmull
jno
packssdw
cmp
test
movsl
adc
lock
filds
sub
inc
bound
fwait
add
jge
mov
add
and
mov
inc
lods
sbb
inc
xor
shlb
xchg
lret
jge
out
repz
jle
adc
sub
jnp
or
cltd
add
dec
pop
jge
out
inc
inc
scas
adc
addl
sbb
popl
pop
fwait
iret
sbb
arpl
jmp
or
sbb
push
mov
sbb
push
popf
ja
ficomps
cld
add
lret
add
fs
push
mov
or
cmp
ds
pop
sbb
sub
or
add
cmp
cli
cmpsb
xor
dec
xor
in
sarl
outsb
addl
nop
and
jmp
in
adc
sbb
dec
int3
dec
test
xchg
add
loopne
add
add
inc
mov
outsl
push
out
aas
mov
sub
jne
push
pop
int3
es
cmp
xor
push
sub
pop
mov
icebp
test
jne
pop
jbe
pop
fdivrl
cld
lret
jo
add
push
add
adc
add
add
cmp
call
sub
pop
xchg
xchg
pop
add
xchg
lods
xlat
adc
add
fdivs
pushf
sub
int
sbb
jmp
push
les
add
adc
mov
pusha
outsb
push
pop
cmc
clc
cli
add
cs
jnp
pop
pop
add
call
mov
or
push
shlb
mov
mov
mov
cld
sbb
out
arpl
add
sbbl
outsl
mov
repz
in
bound
addr16
rorb
outsb
add
sub
and
jae
xchg
stc
sarb
lret
sbb
sub
inc
stos
adc
or
sbb
lret
jl
add
pop
shrb
daa
test
lea
or
xor
fists
mov
sbb
dec
and
popa
dec
bound
xchg
xor
outsl
pop
test
ror
std
pusha
cmpsl
xchg
in
mov
pop
lock
scas
push
sbb
int
adcb
mov
add
stos
sti
sbb
mov
lds
mov
test
bound
movsl
dec
or
sub
jae
int3
ret
sub
mov
sub
insb
inc
push
lods
push
add
mov
add
insl
shlb
adc
jge
pop
sbb
negl
adc
mov
sbb
mov
call
aaa
mov
add
jp
push
lret
stc
xor
ja
cmpsl
push
and
outsb
or
rcll
in
hlt
stos
push
in
data16
xorl
jp
fcmovnb
orl
ss
pop
add
pop
push
jo
cmpsb
sbb
sarb
cmpsl
add
xchg
cmc
cld
movsl
inc
pop
mov
cmp
push
inc
mov
popa
fucomp
cltd
add
int3
paddusb
and
push
adcl
in
cltd
test
faddp
rorl
add
mov
into
mov
loopne
xchg
ds
mov
mov
ret
scas
repz
lahf
mov
adc
sub
pop
fldl
inc
lods
imul
call
mov
out
aad
add
inc
mov
jnp
inc
orb
adc
inc
add
nop
sahf
rcll
mov
or
adcl
mov
inc
das
testl
or
mov
imul
mov
mov
enter
test
mov
xchg
test
add
loope
cmpsb
repz
dec
cmpps
faddp
inc
lcall
mov
xor
jg
xchg
push
sbb
out
fdivrl
dec
es
lahf
jns
pop
xchg
pop
cltd
or
movsb
xor
test
lret
adc
xlat
pusha
es
stos
sbb
cmpsl
int3
lods
loop
xor
movsl
insb
lret
or
and
jbe
add
aas
pop
pusha
stc
and
xlat
add
fidivrs
cmpsb
cli
outsb
inc
add
inc
jge
xchg
push
sub
lcall
hlt
or
inc
or
or
sbb
in
sub
sub
inc
and
inc
aas
pop
dec
mov
sub
ror
cld
movsl
add
xchg
pushf
inc
adc
cmp
pop
inc
add
int
rcl
ret
inc
rorb
add
sbb
jmp
leave
lods
mov
and
lock
js
outsb
ljmp
fwait
sti
call
jns
enter
es
ret
sbb
mov
out
push
fisttps
cwtl
shl
dec
dec
lcall
rcrb
ret
add
popa
push
fdivl
jne
xlat
ljmp
dec
je
jns
cmp
into
das
mov
fldenv
cmp
mov
fwait
pop
pop
adc
sub
add
sub
xchg
add
sbbb
dec
daa
pop
push
test
mov
mov
pop
fiaddl
daa
and
in
add
mov
push
mov
sbb
pusha
push
and
jne
int
add
scas
push
mov
add
enter
mov
cmpsl
aad
js
mov
adc
enter
or
leave
dec
jg
dec
lret
inc
add
outsl
sbb
inc
rcr
pusha
mov
fimull
push
jmp
sub
test
or
cmpsl
mov
jbe
mov
scas
add
xchg
xor
shll
pop
roll
cmp
push
call
add
sub
shll
add
add
scas
push
dec
add
sbb
add
fistl
fldl
xor
lds
loope
in
or
cld
push
int
ret
add
push
pop
or
pusha
test
jb
push
lods
cwtl
mov
incb
js
ja
pop
es
dec
addb
adcb
pop
add
stos
call
adc
jno
test
xchg
add
mov
insl
cwtl
and
lea
adc
addb
sbb
rorl
sbbb
mov
in
inc
cmpsb
adc
adc
rcrl
adc
movsl
and
adc
packuswb
cli
add
dec
mov
mov
movsl
mov
add
dec
jo
pop
mov
pop
es
test
pusha
xchg
cmp
std
je
daa
mov
ret
xchg
out
in
les
cld
sbb
xchg
push
aad
add
mov
xchg
push
mov
aas
sahf
sbb
shlb
xorl
repnz
jp
and
mov
xchg
or
sbb
insl
jp
add
add
inc
nop
pop
push
and
jbe
adc
dec
jne
xlat
and
out
ret
lahf
fchs
pop
shrl
imul
push
mov
add
mov
adc
push
xchg
sub
fwait
jnp
pushf
push
test
clc
cmpsb
subl
jb
cwtl
push
das
jmp
add
xor
pop
xchg
daa
pusha
mov
gs
sub
in
sub
pushf
sti
and
sbb
inc
xor
add
xchg
movsl
mov
fcoml
cmp
adc
push
or
imul
lods
add
push
mov
push
lds
xchg
pop
outsl
jp
repz
inc
cmp
mov
adc
sbb
push
jae
les
dec
rcll
sbb
adc
xor
pop
mov
cld
jp
add
dec
sub
inc
pop
add
lahf
insb
sar
addr16
rol
out
dec
stos
xchg
sbb
mov
add
movsb
pop
outsl
add
fcoms
adc
inc
sub
call
xor
xchg
add
lods
or
test
and
add
sbb
cmpsb
call
add
lret
repnz
inc
lock
aad
and
addr16
jo
jp
dec
paddusb
nop
and
adc
cmp
call
mov
in
mov
lret
movsb
cmc
rclb
pop
and
shl
out
inc
jo
sub
sbb
lahf
comiss
sbbl
push
ret
loope
inc
popa
out
aad
adc
xchg
gs
rclb
fdivl
inc
sarl
fs
iret
fdivrs
lds
gs
aaa
and
push
movsl
outsl
fildll
nop
jae
ljmp
leave
push
mov
xor
dec
or
add
mull
stos
js
mov
nop
rcrb
or
inc
xchg
push
fs
pop
mov
push
pushf
and
sub
or
ret
push
adc
roll
pop
scas
sar
popf
adc
mov
or
jbe
icebp
andl
mov
cmp
push
je
in
or
inc
or
movsl
or
or
and
xchg
mov
sbb
push
pop
faddl
inc
pop
sbb
pushf
fisttpl
dec
add
sti
cmp
sbb
repz
aad
sbb
add
aas
sub
jne
pop
dec
jg
inc
push
jbe
repnz
add
jecxz
lock
add
push
sbb
int3
sub
andb
fsubp
adc
xor
test
sarl
and
out
test
push
mov
gs
adc
mov
lods
lahf
loop
mov
fimull
and
push
add
imulb
pop
mov
add
sub
inc
stc
or
xchg
mov
mov
ja
ret
or
mov
ss
jo
add
adc
add
bound
add
das
jp
add
jle
insb
loopne
xlat
adc
and
jnp
imul
in
repz
add
ret
ss
mov
fidivrs
mov
push
cld
add
and
push
pop
aam
ret
inc
or
push
cmp
push
push
call
arpl
fwait
pop
push
and
es
addl
add
mov
sub
shlb
adc
add
mov
add
mov
loope
adc
out
gs
sbb
mov
pusha
lea
adc
fwait
push
mov
add
dec
add
dec
dec
jbe
nop
cmp
adcl
addr16
test
sub
pcmpeqw
inc
push
adc
lret
cmp
faddl
sub
loope
test
add
pop
add
daa
push
sahf
jbe
ds
fs
add
inc
cmp
inc
fadds
adcl
inc
ja
jp
jg
pop
cmp
sub
jmp
xchg
pop
add
fisubs
cmpb
mov
add
pop
pop
push
mov
dec
cmp
pop
pushl
pop
orl
jle
shrl
add
cmp
push
shrl
lods
push
xor
std
std
orb
add
jbe
xor
movb
stos
add
inc
out
mov
jne
mov
inc
pop
inc
gs
push
lret
rol
inc
add
xlat
sbbl
jge
sub
jp
mov
add
jae
and
aaa
pushf
inc
add
jmp
add
mov
repnz
lea
arpl
jle
mov
and
add
cwtl
popf
data16
cmp
std
add
test
add
mov
adc
lret
jp
fstpt
pop
pusha
mov
and
mov
lret
mov
lock
pop
popa
adc
jp
shll
call
or
fwait
dec
test
push
leave
pop
mov
pushw
sbb
cltd
pop
sarb
mov
repnz
sbb
dec
sub
jge
popa
mov
jnp,pn
aam
xchg
add
int
sub
push
mov
pusha
xor
dec
pop
mov
jl
fstp
lods
dec
sub
xchg
jle
inc
rorb
dec
push
icebp
insb
add
shr
sub
pop
jmp
mov
pop
popa
push
mov
fwait
sub
nop
push
sbb
fdivrl
jne
in
sti
outsl
pop
mov
ds
pop
add
sbbb
add
icebp
jg
lock
sub
popa
fmuls
int
andb
jmp
add
iret
sbb
push
add
jne
icebp
andl
loopne
sbb
mov
sbb
cmp
fildll
outsl
jl
pop
push
jns
and
jbe
jnp
mov
mov
and
les
repz
imul
out
ror
test
loopne
insl
out
add
jo
fcompl
xor
mov
fbstp
aas
aas
inc
andb
ja
mov
hlt
test
dec
loopne
pop
ret
nop
ret
xchg
add
push
or
sbb
sub
xchg
mov
jecxz
daa
adc
in
test
ljmp
jg
loopne
mov
or
mov
mov
mov
in
and
mov
mov
or
scas
add
push
jb
xchg
and
std
leave
popa
ret
add
xchg
sub
mov
orb
repz
sbb
fidivs
iret
xor
rorb
shll
leave
cmp
push
inc
xchg
arpl
movsl
insb
add
sbb
pop
mov
movsl
test
and
xor
xorl
rcrb
or
sbb
into
in
or
add
or
adcb
jns
add
out
daa
sbb
and
jo
add
popa
jno
loope
adc
sbb
and
mov
push
xlat
pushf
shll
stos
jns
rorb
out
repz
pop
out
rolb
lods
cmp
sub
loop
pop
add
imul
int3
add
orl
xor
daa
inc
js
mov
je
out
mov
in
sub
push
sti
int3
jg
add
rolb
add
add
movsl
jbe
pushf
cld
loope
shll
fnstcw
mov
cwtl
sbb
lea
inc
sbb
aas
dec
les
cld
push
mov
inc
jp
adc
loopne
iret
xor
lahf
test
popa
repnz
in
imul
push
cmpsb
ljmp
lret
dec
out
pushf
or
pop
mov
inc
icebp
out
js
add
cwtl
ret
mov
and
or
cmp
mov
out
test
and
jo
mov
pop
sbb
dec
cli
arpl
xor
jno
jecxz
in
rorb
jmp
jle
push
inc
insb
and
add
inc
sub
xor
mov
pusha
mov
cmpsb
cmp
mov
pop
push
and
aam
xchg
scas
adc
mov
inc
and
pop
mov
or
in
lock
inc
dec
xlat
pusha
test
test
cmp
sbb
sub
xchg
push
ret
add
imulb
sub
mov
test
inc
movsb
sbb
add
sub
cmpb
or
mov
lock
inc
lcall
mov
adc
dec
in
inc
nop
out
xor
xchg
mov
sbbb
lret
or
leave
dec
lods
mov
arpl
pop
pop
sub
clc
cld
nop
arpl
addb
xor
sub
arpl
dec
inc
je
rcrl
add
xchg
xchg
inc
add
fs
and
adcl
sbb
mov
xchg
cld
add
stos
adc
inc
add
sarl
outsl
sbb
xchg
sbb
out
daa
inc
les
pop
mov
adc
pop
inc
mov
fs
mulb
js
sbb
add
ljmp
rclb
push
iret
dec
daa
addb
sarb
or
pop
sbb
jo
add
popa
mov
push
pusha
mov
aam
and
bound
push
imul
and
push
inc
adc
mov
enter
mov
lret
and
sbb
pop
sbb
rcrl
jnp
jne
add
fildll
lods
mov
fs
icebp
nop
fiadds
iret
push
xchg
xchg
ret
or
xor
sub
dec
dec
js
sub
jb
std
movb
cmpsl
push
cmc
movb
lock
add
in
data16
xchg
outsb
roll
fs
fmull
add
pusha
mov
daa
xchg
dec
rcr
out
xchg
subb
xor
xor
test
add
or
add
push
pop
xchg
int3
xchg
inc
out
stos
daa
inc
sub
pop
int3
dec
mov
andl
pop
xor
mov
sub
mul
iret
test
nop
adc
xor
lcall
in
lods
mov
stos
in
lock
imul
cmp
popf
sub
xlat
cmp
mov
add
std
push
out
inc
pop
add
loop
jno
and
shll
sbbb
inc
xchg
add
xchg
daa
push
jbe
outsb
cmp
adc
add
inc
iret
je
mov
mov
shrl
mov
loopne
xor
fdivrl
add
jl
fcomps
in
jb
sbb
push
rcrb
cltd
xor
sbb
inc
xchg
test
cltd
sbb
dec
add
and
cmp
das
cmp
flds
pop
add
fmull
mov
es
cmp
lcall
xor
hlt
and
xlat
xor
inc
add
pop
xchg
mov
sub
jae
mov
cld
dec
cwtl
shl
xchg
sbb
xchg
add
sub
cld
push
adc
movsl
add
pop
mov
dec
mov
std
cs
mov
or
add
and
imul
stos
mov
jno
out
enter
cmc
rolb
mov
mov
mov
sbb
xor
imul
cmp
leave
aas
add
add
add
int
add
ret
mov
enter
add
fistpll
bound
out
dec
orb
comiss
loopne
or
insl
dec
js
adc
fs
std
sbb
or
and
inc
add
mov
aam
jp
xor
mov
in
sbb
jb
jl
scas
mov
js
cs
adc
cmc
xor
out
stos
adc
sbb
or
int3
mov
xor
mov
jo
rol
or
pop
outsl
lods
add
or
jle
rorl
das
mov
or
add
xchg
pop
in
in
mov
pop
fstpt
add
mov
cmp
and
sbb
add
jb
ljmp
aad
xchg
xchg
pushf
cmpsb
add
in
rorl
dec
mov
test
dec
test
sti
and
std
push
aas
mov
pop
cmc
add
mov
xor
xchg
mov
in
out
mov
mov
and
fs
jbe
push
adc
lods
test
mov
call
mov
xor
inc
mov
aas
mov
push
subb
test
cli
lret
xchg
sub
stos
and
mov
mov
aad
sbb
daa
xchg
jge
addb
cld
jae
cwtl
aas
rolb
pop
push
jns
add
xor
push
dec
scas
push
xchg
mov
pusha
imul
fs
mov
xchg
lcall
xchg
hlt
fs
mov
je
add
fstl
iret
sbb
out
push
adc
lret
or
sub
lods
mov
add
lods
add
mov
dec
mov
std
dec
stos
dec
or
rclb
sub
mov
lea
jno
stos
inc
pusha
jl
inc
push
pop
push
mov
mov
icebp
js
aam
lods
xor
sub
jmp
push
loope
js
test
test
test
add
inc
push
pop
mov
or
and
inc
test
mov
popa
jo
push
and
xchg
sbb
push
or
jl
mov
mov
cli
add
sbb
outsb
fdivp
jb
adc
gs
add
add
jmp
int
mov
xchg
push
pop
xchg
adc
pop
add
sahf
or
outsl
fisttpll
mov
xor
add
pop
stos
pop
popa
dec
xor
movsl
jmp
mov
les
xchg
mov
inc
enter
pop
in
adc
sub
dec
mov
xor
daa
lods
testb
scas
sub
mov
sub
push
jmp
fisubrs
jp
xchg
stos
and
int
mov
push
add
popa
xchg
pusha
jo
mov
xrelease
inc
popf
jmp
inc
or
and
sub
leave
inc
fsts
test
pop
xor
daa
rcr
mov
div
das
or
cmp
imul
subb
data16
cs
sub
adc
fnsave
adc
rorl
xchg
add
pop
repnz
mov
fcmove
sbb
add
sub
and
xor
cltd
xor
cmp
icebp
adc
pop
cmc
mov
insl
pop
sub
and
adc
test
int3
mov
js
test
jno
xchg
and
bound
jg
arpl
popa
push
xor
outsb
fadds
jecxz
sub
iret
push
mov
sahf
call
pop
adc
add
shr
movl
mov
in
icebp
rorb
test
jae
xchg
in
xor
movsb
lret
and
gs
pop
testl
mov
or
adc
adcb
push
dec
popf
push
and
push
adc
xor
insl
inc
dec
fsubr
sbbl
mov
test
mov
pop
and
and
add
ret
pop
insl
xchg
lods
and
and
scas
push
xorl
insl
pushf
push
adc
fmuls
pop
push
cmp
loopne
outsl
add
subl
loopne
cmp
pushf
dec
pop
sarl
iret
sbb
dec
mov
add
movsl
sbb
daa
iret
sbb
mov
sub
jge
mov
xor
rclb
in
in
addr16
pop
mov
cmp
add
jp
jg
mov
cmp
aam
adc
lret
mov
jns
add
or
cmpsl
mov
out
insb
inc
les
lret
dec
add
and
dec
pop
js
add
dec
loope
orps
test
int3
fstl
repz
mov
mov
nop
pusha
xchg
push
iret
pop
in
dec
push
cmc
arpl
inc
popf
test
mov
rcll
and
push
xor
mov
int
sbb
ss
add
add
cmp
mov
push
mov
ret
das
cmp
cmp
push
or
xor
test
push
clc
test
add
fidivrs
jnp
ljmp
push
mov
je
fldt
test
and
not
sub
fbstp
xchg
cmpsb
dec
enter
insb
jg
push
ret
fadds
aas
and
or
lds
sub
dec
or
adc
js
or
hlt
fcoml
ljmp
inc
es
ljmp
xchg
mov
mov
xchg
in
jne
add
hlt
fs
mov
les
pop
jg
mov
sbb
mov
add
add
xchg
xchg
idivb
cmp
in
incb
adc
lahf
movsb
adc
push
mov
in
rclb
push
mov
add
imul
push
jnp
cmp
mov
push
in
cmp
add
popa
dec
add
pop
in
sub
dec
inc
add
fcompl
push
mov
or
addb
mov
cmpsl
push
mov
adc
sahf
movsl
xchg
xchg
loop
xor
inc
sarl
add
cld
sbb
fnstenv
sub
add
test
popf
in
xchg
xchg
cwtl
xchg
lods
xchg
and
sarb
cmp
stos
fisttpl
pop
into
arpl
lret
shlb
jl
sbb
imul
jo
and
sbb
or
cld
dec
fmuls
add
insb
les
cwtl
loop
add
inc
sbb
cmp
mov
jecxz
add
and
divb
data16
add
adc
inc
cli
add
mov
loopne
loopne
mov
add
mov
fucom
nop
dec
adc
frndint
xchg
cmp
mov
scas
call
cltd
mov
std
fsubl
or
add
mov
add
cmc
jno
pushf
push
push
sbb
jne
xchg
and
std
sbb
and
sub
adc
add
imul
hlt
xchg
and
cwtl
sub
mov
cwtl
push
dec
jae
add
mov
jl
push
sub
sbb
arpl
out
add
mov
jecxz
add
cld
mov
sbb
je
roll
dec
or
fwait
leave
mov
std
push
and
mov
mov
inc
ret
adcb
addr16
into
mov
adcl
enter
inc
ret
popa
dec
lods
xchg
jl
add
stos
out
pop
mov
loop
xor
push
mov
clc
decl
rorb
loop
adc
jne
xchg
lea
sbb
mov
in
pusha
inc
jns
mov
mov
imul
mov
iret
sub
mov
pop
xchg
lcall
sti
andl
loope
pushf
call
mov
xor
jne
inc
add
daa
add
mov
mov
pushf
add
pop
push
nop
sbb
sub
lret
add
mov
sub
int3
aas
push
ficompl
dec
push
add
das
aam
mov
int
xor
fwait
dec
pop
sub
sbb
and
test
and
pop
pop
dec
int3
enter
cltd
pop
mov
add
xchg
iret
shll
cmp
shrl
add
dec
rcrl
push
loope
dec
rcrb
sbb
sbb
cwtl
mov
mov
addb
add
mov
add
mov
dec
hlt
mov
inc
movsl
loope
dec
lahf
xchg
pushf
test
or
cmp
or
cwtl
xor
and
add
mov
jne
sub
add
dec
lods
sub
dec
push
and
pop
jno
dec
add
shlb
int3
enter
mov
or
adc
sub
iret
xor
jno
jns
sbb
add
jecxz
dec
jne
cs
and
add
xor
loope
dec
aad
dec
xor
lret
mov
jbe
rolb
insb
and
mov
sbb
add
test
cmp
rclb
add
out
sti
jo
popa
xor
mov
pop
pop
insb
stos
inc
sub
fs
pop
or
shll
sub
mov
dec
pop
sarb
or
lret
andb
dec
lock
jne
add
call
out
push
adc
xor
loopne
nop
insl
add
lahf
aam
adcb
les
fmull
and
xchg
mov
pop
push
sbb
movsb
mov
movsb
and
inc
sbb
popf
xor
or
lahf
xor
stos
in
mov
mov
stos
out
outsb
jl
in
sbb
cltd
add
push
or
iret
ficoms
add
pop
fwait
mov
dec
icebp
pop
movlps
jp
loope
aam
xchg
pusha
int3
mov
inc
je
test
lock
es
cmpsl
sbb
inc
push
xor
pop
cmp
push
mov
popf
movsl
jns
scas
add
mov
and
dec
neg
mov
lods
xor
xchg
subb
test
aam
cld
mov
xchg
mull
push
and
shr
adc
dec
movsb
lods
js
stos
mov
sahf
jmp
add
xlat
jle
dec
dec
sbb
sub
mov
add
and
push
add
mov
push
incl
pop
adc
jecxz
push
sub
es
les
xlat
push
faddl
testb
in
xlat
mov
ret
nop
inc
inc
pop
das
outsb
hlt
add
mov
push
cmp
shll
add
sbb
push
shlb
and
dec
add
mov
aam
clc
leave
jns
pop
cs
push
push
cmp
mov
sub
dec
add
clc
es
inc
mov
rorb
adc
add
add
and
add
mov
leave
sub
xchg
int3
cmpb
mov
or
arpl
add
fsubs
pop
add
stos
jno
clc
shr
ljmp
fiadds
mov
mov
and
sbb
push
push
pop
lods
outsb
mov
loopne
outsl
xchg
cmp
sbb
data16
jg
or
xor
daa
add
adcb
xchg
and
mov
aad
je
mov
sbb
add
lcall
sub
adc
xchg
mov
add
bound
cmpsl
loopne
pusha
dec
and
xchg
or
xor
insb
push
cmp
in
cwtl
orb
les
nop
cld
or
jge
repnz
push
imul
call
sbb
cmp
sub
out
push
sarb
adc
and
hlt
jae
addr16
or
rcrl
das
pusha
and
jns
push
or
dec
and
loope
mov
mov
add
lret
add
sbb
fildl
push
ds
mov
xor
in
xor
test
fcomip
jge
push
lea
mov
test
mov
cwtl
mov
adc
repz
cli
in
dec
pop
fsubrl
jle
add
mov
rorl
shrb
push
xor
das
outsb
add
adc
sahf
push
ljmp
ret
sub
cmc
pop
jmp
jmp
fists
jnp
xchg
in
dec
jl
je
mov
out
aam
jl
mov
sub
ds
testb
sub
pop
sbb
dec
cltd
jb
add
roll
or
mov
mov
adc
sub
out
mov
aad
or
jg
pop
xorb
lfs
fidivrl
sbb
cmp
addb
mov
mov
outsl
stos
incl
inc
flds
pusha
lret
pop
push
adc
adc
je
movsb
mov
jg
das
in
and
add
cmp
rorb
mov
mov
push
mov
out
cmpsb
pop
mov
lds
pop
add
jns
sbb
jbe
cmp
and
push
test
sub
rclb
loop
or
jns
jns
sbb
and
add
fbstp
fs
add
insb
lahf
add
cld
shll
les
hlt
loopne
adc
pop
jg
adc
les
fs
pop
fwait
nop
test
rcrb
xchg
clc
ss
or
stc
nopl
cmp
mov
and
add
inc
push
pusha
mov
pop
fsubrl
arpl
lcall
sub
sub
fisttps
arpl
rorl
lock
add
stc
ror
jnp
sbb
adc
push
cmpsl
and
dec
mov
dec
mov
fadd
orl
pop
push
cmp
test
test
lds
inc
loopne
mov
jecxz
hlt
cld
mov
aaa
ret
inc
adc
test
or
test
lahf
push
add
xor
fs
fs
pop
repz
sub
and
les
loope
test
and
scas
jns
cld
add
xchg
call
add
leave
popf
jmp
lods
rcr
daa
xchg
xchg
adc
xchg
rorb
or
xchg
adc
and
push
add
xor
or
mov
imul
mov
enter
cltd
adc
sub
add
mov
xchg
mov
sti
rorb
in
mov
je
sahf
push
stos
sub
ja
jo
faddl
mov
adc
mov
int3
sbbb
or
jnp
daa
cmp
ds
sub
add
dec
pop
push
test
cmp
mov
mov
jb
lock
jbe
add
sub
jg
stos
scas
or
js
pop
sbb
cmp
dec
into
and
stos
rclb
sbb
jns
cld
rcrb
add
stos
arpl
je
adc
out
sub
dec
pop
inc
ljmp
cmc
pop
xor
pushf
adc
jnp
add
sarl
pop
xchg
std
int
xlat
and
ds
sbb
sub
testb
mov
add
aam
in
mov
rcl
in
mov
xchg
clc
mov
inc
mov
lods
mov
and
dec
in
pushf
ds
mov
sub
insb
add
mov
inc
and
stos
pusha
pop
mov
xor
add
mov
mov
mov
push
cmp
or
and
es
dec
add
inc
orl
js
sub
add
es
pop
xchg
andl
sbb
das
xor
aam
mov
inc
add
lret
aaa
xchg
pop
lcall
loope
daa
jle
mov
xchg
jecxz
cmp
sub
add
sbb
mov
pop
out
incl
sbb
loope
ljmp
test
mov
xchg
bnd
in
add
ret
insl
xchg
cs
lock
sahf
in
add
xchg
hlt
xor
inc
shrb
and
xor
add
lods
xchg
mov
daa
scas
inc
dec
adc
lea
or
pop
in
jl
pop
and
jg
pop
mov
ret
f2xm1
insl
or
xchg
mull
adc
push
dec
mov
dec
adc
cld
jl
mov
and
xor
cmc
mov
fs
or
mov
rol
mov
adc
ror
push
sub
xchg
sbb
lahf
sti
enter
jmp
inc
mov
js
add
sbb
jl
or
pop
mov
xor
ret
mov
push
pop
add
pop
jp
and
ja
inc
cmp
mov
das
popa
or
ret
and
sbb
cmpsb
loopne
inc
insl
pop
sti
add
jle
and
xorl
lds
mov
test
movsb
jo
dec
push
pop
arpl
cmc
lcall
in
mov
lds
add
jne
jo
push
dec
xchg
adc
lahf
mov
aas
add
sti
push
pop
jge
xchg
pushf
adcb
xchg
xlat
into
add
ss
nop
dec
outsb
call
add
jae
pop
and
xlat
add
vmovddup
in
add
lret
imul
and
fcompl
cmc
arpl
jo
in
mov
mov
insl
ret
add
push
add
popa
push
inc
int
adc
clc
inc
or
sbb
push
add
dec
xchg
leave
out
add
pop
rorb
cmpsb
inc
inc
adc
cmpl
fadds
test
mov
push
faddp
mov
mov
pop
clc
mov
adcl
xchg
and
xchg
test
cmp
jg
jno
add
jmp
cltd
icebp
adc
into
ds
inc
add
inc
in
es
or
xor
pop
fdivl
rcll
fmuls
mov
rol
pop
fists
inc
mov
pusha
jb
stc
ljmp
inc
mov
xchg
outsl
mov
fwait
addl
and
sub
in
fiadds
push
aad
xor
and
cmp
and
push
inc
add
out
mov
add
jne
repnz
sbb
adc
jo
lret
add
mov
mov
das
scas
push
and
sub
enter
clc
xchg
ror
mov
imul
lods
adc
jo
and
in
push
sub
rcrl
shlb
stc
adc
cwtl
mov
or
nop
pop
sub
push
cwtl
mov
loope
int
add
sbbb
and
jns
sbb
add
pop
jmp
insl
mov
and
mov
clc
pushf
iret
icebp
mov
ret
pop
lret
cmp
stc
std
shrl
insl
scas
xchg
addl
adc
cltd
adc
shlb
mov
int
xchg
xchg
jge
nop
mov
in
lods
shlb
loopne
and
mov
add
and
les
pusha
lock
rcrl
aas
insl
fisttpl
lcall
mov
xchg
push
inc
push
sub
in
fnstenv
aam
ret
lock
sub
inc
shll
sub
idivb
es
dec
and
sub
and
movsb
dec
nop
jo
dec
pop
push
mov
jno
xor
ljmp
fistl
mov
xchg
flds
pusha
add
nop
cmp
push
movsb
inc
xchg
imul
mov
daa
fisttpl
pushf
add
adc
or
pop
ja
xchg
daa
int
inc
cmp
pop
rcll
lahf
cmp
pop
mov
les
push
fidivs
out
test
mov
je
sbb
adc
shll
mov
mov
sub
faddl
int
pop
fdivrs
push
cmp
cld
mov
nop
add
and
mov
add
add
iret
cmp
lock
pop
cld
add
sub
lds
adcb
mov
fistps
arpl
xor
fwait
inc
shlb
sub
jns
mov
lcall
xorb
add
and
out
mov
insl
addr16
ficomps
in
fcoml
and
sbb
in
addb
int
ficompl
das
cld
adc
shll
mov
add
popa
mov
lahf
xor
or
add
cmp
iret
adc
add
mov
je
leave
add
cmpsl
adc
jo
cmp
xchg
cmp
xchg
cmpsl
add
pop
sbb
shll
mov
nop
and
push
xor
jb
outsl
jne
add
js
pop
mov
icebp
popf
push
cmpsb
jl
or
mov
or
sub
pushf
ja
add
scas
mov
in
jno
jbe
xlat
es
sbb
mov
adc
test
adc
into
sarb
or
sbb
pop
test
hlt
add
lds
xchg
enter
shll
ret
jg
insl
or
loopne
jmp
adc
push
sbb
mov
leave
mov
rcrb
mov
dec
mov
test
inc
or
sti
xor
xor
pop
add
sti
test
mov
repnz
jl
jle
mov
test
push
jno
mov
pushf
push
adcb
mov
cmp
push
repnz
add
xor
out
jl
js
push
xor
lods
in
pushf
rcrl
dec
int3
dec
and
adc
push
test
add
sbb
add
push
in
cs
hlt
sub
add
scas
lock
sahf
sub
add
test
movsb
pop
xchg
mov
mov
pop
add
testl
loopne
adc
outsl
aam
pushf
mov
dec
xchg
xor
cltd
out
mov
push
add
ffree
push
cmp
and
jecxz
add
aad
int
test
xor
inc
pusha
test
bound
and
pop
and
cmp
lret
aaa
and
into
divps
out
daa
and
call
and
jle
pushf
push
loope
fwait
pop
push
mov
inc
les
pusha
lahf
rcrl
loope
test
sbbb
lds
test
sub
jo
push
je
add
scas
ror
cli
loop
or
pop
jl
xor
fcomps
loop
cmpl
cmp
add
mov
pusha
xor
and
xor
es
cmp
add
shlb
add
xor
jo
mov
mov
push
inc
add
gs
cmpl
add
cld
dec
jnp
ljmp
mov
xchg
add
add
sub
cld
enter
push
add
pop
sub
mov
mov
and
and
add
dec
mov
fsubrl
pop
test
add
jo
cmp
jl
push
mov
cmp
sub
leave
and
enter
and
lret
mov
rclb
sbb
cld
cmp
imul
add
inc
inc
sbb
adc
jmp
jno
pop
cmp
push
add
mov
sub
mov
fisttps
daa
leave
cmc
mov
movsb
sub
fs
jmp
or
and
or
xor
les
sub
add
or
and
push
mov
pop
mov
sub
push
push
mov
fsubs
mov
or
mov
xor
inc
sti
jecxz
cmp
repz
iret
dec
mov
sbbb
mov
or
rclb
cli
xchg
or
fs
pop
jbe
or
or
cltd
inc
inc
push
adc
cmp
inc
rcl
inc
enter
iret
gs
pop
add
sub
mov
loope
mov
inc
adc
sahf
call
push
jae
jmp
test
lods
xor
dec
sti
jbe
add
cmp
mov
cmpsb
pop
sub
push
add
loope
xchg
loopne
clc
sbb
add
mov
mov
and
int
xchg
sti
xchg
cwtl
and
dec
cwtl
fmuls
in
dec
xor
test
pop
add
xor
adc
popf
sbb
test
add
sgdtl
mov
add
test
mov
test
jns
fstpl
mov
enter
xchg
pop
fbld
movsb
mov
sub
sbb
add
and
pop
into
das
jo
dec
push
jecxz
stos
pop
cmp
jmp
add
inc
lret
or
cmp
je
shll
icebp
mov
and
push
pusha
mov
cltd
ret
and
sbb
add
test
mov
pushf
pusha
mov
or
movsl
dec
and
test
stc
sahf
add
shl
cmpsb
hlt
loope
imul
lds
pusha
add
aam
dec
push
sar
inc
arpl
and
insl
std
xor
mov
xchg
ds
dec
je
sbb
lods
aaa
daa
and
test
in
mov
sbb
call
daa
dec
pop
sub
test
movsl
std
and
push
and
or
adcl
add
mov
mov
in
ds
addb
out
cld
and
adcl
stos
pop
fwait
lods
jmp
enter
push
xor
es
xor
lret
sub
sarb
jl
push
sub
add
in
fldl
pop
rcrl
jge
and
loop
xor
jne
loopne
fcomps
mulb
xchg
in
out
inc
cmp
shrb
movsb
stc
cwtl
in
add
sub
push
pop
mov
cmp
or
push
cmp
andb
andl
inc
insb
adc
movsl
dec
mov
mov
add
sub
add
adc
add
push
pop
xchg
incl
xchg
sub
jl
fs
bound
push
rcr
mov
mov
outsb
into
dec
mov
shlb
sbb
addr16
jne
in
int
das
enter
jg
and
pop
cwtl
not
add
imul
sub
rorl
jno
sbb
loopne
imul
scas
scas
test
leave
stos
xchg
xchg
js
insb
push
inc
lods
add
scas
mov
pusha
shl
fstl
ja
pop
pusha
addb
or
or
js
int
push
movsb
mov
rcrb
sub
cli
lret
xchg
xchg
dec
daa
in
push
in
jle
shl
test
in
popa
movsl
or
xchg
filds
adcb
lret
cmpb
mov
imul
movsb
clc
push
std
js
dec
fnstsw
sbb
fidivs
test
add
push
mov
test
jge
jmp
pop
lret
mov
js
add
mov
adc
hlt
xchg
mov
repnz
xor
ja
dec
push
hlt
add
fsubl
sub
dec
sbb
sbb
push
pop
dec
pushf
enter
or
sbb
inc
pusha
dec
sbb
add
je
pusha
les
cltd
add
lods
repz
test
pop
inc
cld
loop
xlat
adc
fbstp
loopne
rol
push
int3
sub
je
pop
mov
mov
scas
loopne
nop
mov
sub
sti
add
and
mov
in
call
xor
push
sub
nop
or
shlb
aam
or
push
arpl
inc
xchg
je
pop
sub
sbbb
shrl
and
loope
and
adc
jns
icebp
aas
sbb
ret
pop
add
dec
pop
int3
mov
repz
jns
les
and
push
mov
dec
cltd
clc
aam
xchg
stc
mov
mov
mov
cwtl
lret
ja
inc
test
mov
inc
mov
jle
faddl
fwait
lods
mov
xchg
xchg
insb
in
cmp
pop
dec
mov
and
add
mov
in
imul
shll
push
mov
icebp
add
ds
xchg
pusha
push
jns
add
movsl
push
and
cld
mov
add
pop
imul
imul
cmp
and
in
popa
or
sub
mov
clc
cs
andb
and
daa
xchg
xor
bound
push
or
aaa
addb
pop
add
cmp
enter
sbb
mov
decl
dec
and
mov
push
cmp
pop
pop
push
addb
or
xor
and
or
sbb
add
mov
aad
or
sub
fadds
mov
int
enter
rcrb
cmp
xchg
xchg
xchg
inc
mov
adc
ficoml
insb
add
aaa
sub
loopne
sti
xchg
dec
outsb
adc
int
test
push
pushf
les
push
lock
shl
movsb
and
add
mov
je
or
add
or
mov
negb
movsb
pop
mov
add
int3
pop
imul
add
mov
enter
inc
mov
repz
or
bound
fnstenv
inc
stos
or
jb
pop
test
mov
fistps
cs
pop
cmp
loope
and
mov
inc
lods
iret
pop
gs
pop
into
cmp
stos
rclb
into
mov
les
lock
rolb
dec
pusha
in
pop
xor
sub
push
lods
popa
sub
xchg
fdivrl
and
push
inc
cmp
xchg
mov
shll
fwait
jns
fnstenv
cld
and
xchg
mov
fwait
xchg
icebp
orb
mov
ret
in
mov
fsubrl
daa
add
lret
nop
sti
or
cli
xorl
sti
in
ja
out
mov
daa
push
inc
pop
hlt
and
repnz
push
adc
xchg
mov
and
add
jp
pop
cs
in
pop
xchg
add
mov
enter
xchg
les
pusha
repnz
xor
or
add
xlat
or
rclb
cmpb
leave
dec
out
mov
movsl
shrl
mov
push
and
dec
jmp
inc
add
adc
xchg
xchg
push
dec
js
sbb
push
sbb
mov
je
mov
rcrb
inc
test
cmp
leave
adc
fs
je
faddl
test
nop
mov
cld
pusha
call
add
xchg
xchg
mov
es
cmc
and
inc
inc
add
mov
lock
arpl
adc
pop
mov
or
out
jno
inc
jecxz
sub
xchg
xchg
jmp
jnp
add
icebp
lock
movsl
leave
inc
outsl
enter
add
xchg
nop
in
pusha
jae
or
pusha
or
pop
pop
call
jo
pushf
cmp
add
pusha
hlt
iret
and
xchg
das
mov
mov
push
call
enter
or
or
jle
sub
mov
or
lods
mov
push
mov
jmp
fnsave
xchg
nop
sub
add
pop
cltd
gs
ds
ret
adc
push
pop
dec
mov
pushf
fdecstp
test
dec
jg
fsub
push
test
jne
arpl
add
jnp
insb
sbb
add
hlt
xchg
notl
pop
rclb
pusha
pop
sbb
jmp
mov
dec
fmul
hlt
pop
out
mov
pop
pop
mov
enter
add
lods
ficoms
into
pop
pop
mov
inc
scas
xchg
xchg
or
enter
sbb
mov
fs
dec
test
add
mov
pop
mov
cmp
stc
or
mov
add
mov
rolb
cmpsb
cltd
jecxz
ljmp
mov
lods
xchg
lock
std
jno
sub
jl
mov
pusha
push
js
leave
iret
in
cltd
popa
rcrb
nopl
push
push
add
mov
das
ret
pop
adc
mov
test
lods
test
ds
mov
cmp
inc
xchg
shlb
popf
cld
rcr
movb
pop
adcb
mov
dec
into
push
push
pop
shrl
andl
ja
jl
add
out
mov
cmp
mov
adc
cmpsb
adc
loope
jo
ds
xchg
jge
adc
add
mov
shll
xor
test
adc
and
pop
pop
and
or
sub
jge
push
roll
ret
or
jo
cmp
les
push
mov
jle
shlb
inc
add
or
push
xor
andb
cmc
add
rcr
iret
and
add
xor
cmpl
or
or
push
aam
data16
sub
adc
add
outsl
and
lds
add
pop
xchg
gs
jns
les
in
in
pusha
inc
pushf
jle
inc
xchg
xchg
call
xor
jo
aaa
jns
add
fstp
pop
add
lea
pushl
mov
cmp
aad
xchg
in
incb
insl
or
subl
jb
add
mov
or
imul
sbb
mov
fsub
add
jae
add
ja
shrl
add
mov
add
pop
mov
push
adc
outsb
call
cmp
pop
or
mov
aam
adc
cmp
sbb
pop
scas
add
cltd
stos
or
inc
pop
int
faddl
leave
dec
shll
rolb
adcb
mov
and
mov
and
xchg
les
call
xorb
jecxz
add
imul
stos
fisubl
sbb
push
dec
adc
jo
xor
jle
jbe
mov
add
ss
and
fdivl
dec
xchg
xchg
xchg
lock
daa
push
or
mov
test
cmp
aam
jno
mov
pop
in
mov
xlat
clc
test
jbe
out
inc
mov
sti
test
rorb
sub
and
jge
testl
pop
sbb
cmpsb
mov
xor
or
sub
enter
add
pop
push
add
popa
xor
sbb
stos
sbb
pop
pop
mov
cmp
sbb
fdivrs
test
je
mov
cmp
sbb
negb
addb
add
faddp
adc
pop
cmp
pushw
push
dec
movsl
jns
adc
adc
pusha
jecxz
loopne
std
cmp
movsb
push
adc
or
add
mov
shrl
std
adc
sub
sti
add
lds
leave
push
js
mov
pop
pop
or
xor
in
and
int3
arpl
ds
mov
das
clc
xor
fsubl
fnstcw
sbb
loope
std
mov
lods
fistpl
movsl
add
and
dec
je
push
mov
add
repnz
add
or
push
orl
sbb
push
adc
pop
jl
imul
inc
push
in
mov
fs
xchg
test
int
mov
mov
loopne
adc
mov
rorb
sbbb
add
imul
mov
popl
xchg
pusha
xchg
mov
insb
push
sub
push
lret
xlat
cmp
pop
arpl
or
lods
dec
cmp
addl
lods
jl
mov
push
stos
mov
addb
push
pop
push
xchg
mov
add
and
push
cmp
subb
shl
push
xchg
hlt
pop
rcrb
pusha
xor
inc
add
mov
aas
mov
mov
mov
sbb
and
pushf
scas
mov
je
and
add
mov
mov
in
mov
mov
and
sbb
dec
fisttpll
xchg
pop
rolb
push
jmp
push
shlb
pop
popf
call
cwtl
fdivrl
xchg
pop
sub
shr
or
stos
arpl
orb
mov
cmp
sahf
fsubp
ret
shlb
rol
and
cmpsl
lds
pop
add
mov
js
mov
shlb
inc
adc
add
scas
xchg
rorb
imul
in
divb
inc
push
test
js
add
out
rorb
cs
dec
test
negl
lds
jns
adc
cld
sbb
popf
cmp
cld
pop
inc
roll
sbb
cltd
push
je
aam
scas
fbld
jl
mov
fisubl
movsb
or
cwtl
movsb
stos
pop
jp
mov
and
inc
xchg
rolb
into
test
daa
add
jp
in
outsb
push
sub
loopne
in
sbb
xchg
dec
push
test
in
jo
inc
add
inc
repnz
repnz
xor
in
rolb
movsl
pop
mov
sub
cmp
pop
bound
int3
and
inc
adc
icebp
pop
lea
imul
adc
add
cs
popl
mov
fdiv
int
pop
movsb
mov
pusha
sbb
add
inc
dec
ds
pop
jl
and
mov
stc
adc
pop
adcb
movsb
cmp
add
imull
insl
jl
rcl
mov
jb
out
mov
jmp
add
stos
les
cmpsl
xor
in
addl
mov
pop
jg
jo
jb
add
xchg
pusha
mov
add
push
mov
gs
jmp
rolb
dec
je
or
jp
push
popa
cmp
sub
cmp
cmp
push
aaa
xchg
jg
imul
add
orl
jno
pop
mov
filds
dec
sti
inc
shrb
cwtl
int
lock
cmp
sbb
sbb
popa
sti
lret
jl
adc
or
iret
sbb
cld
test
jmp
mov
push
sbb
lret
jne
jbe
rorl
jl
test
imul
adc
lcall
sub
lea
das
fs
gs
in
pusha
add
cld
ror
mov
sarb
and
xchg
inc
mov
aas
popa
lahf
jmp
mov
push
pop
pop
inc
add
pusha
add
sahf
adc
sub
xchg
cld
sub
sub
jno
popf
outsb
and
sbb
sbb
mov
and
mov
das
iret
repz
pushf
push
out
cmpb
js
ret
mov
int
test
insb
sahf
mov
add
adcb
stos
push
test
inc
in
add
mov
popa
and
loope
add
ljmp
incb
fidivl
xor
sub
fptan
mov
push
in
dec
add
inc
sbb
das
nop
aam
movsb
into
pusha
enter
push
ljmp
mov
add
pusha
pop
or
and
jns
testl
pop
sub
mov
xchg
js
mov
rcr
cli
pop
fsubs
aad
cmpb
test
cmp
xor
movb
daa
in
add
pop
xchg
es
enter
leave
add
sahf
xlat
mov
in
add
data16
or
add
and
mov
mov
ljmp
add
inc
int3
add
stos
add
je
xchg
lahf
aam
jl
xchg
in
inc
mov
add
in
stos
and
adc
add
sbb
add
push
add
or
add
popa
bound
cmp
out
add
pop
mov
sub
cmp
pop
cld
pop
add
popa
es
xor
data16
and
das
xchg
push
jo
dec
outsb
mov
mov
or
loopne
pusha
popf
outsb
icebp
xorl
test
sub
mov
xchg
mov
mov
or
enter
pop
movsl
mov
adc
push
loop
add
xor
jne
arpl
cmp
cmp
dec
pusha
mov
rorb
in
cmp
je
jp
cmc
push
xor
imul
stos
in
add
xlat
push
test
or
dec
jmp
stos
inc
jg
xor
leave
shll
arpl
and
pop
sbb
xchg
sbbb
shr
mov
or
fcoms
and
and
test
movsb
and
stos
dec
mov
and
sarb
fadds
dec
test
jno
push
or
mov
roll
xchg
or
lock
mov
sub
inc
clc
add
jno
btc
mov
mov
push
dec
hlt
in
outsb
nop
hlt
fistl
push
test
xorb
out
daa
and
pop
fadds
jecxz
jg
pop
add
and
ds
cld
rolb
lret
scas
add
enter
icebp
outsb
les
adc
outsl
sub
iret
test
cmc
push
dec
pop
enter
add
imul
dec
sbb
mov
nop
loopne
mov
pusha
dec
cli
dec
xor
mov
test
movsl
xchg
add
or
mov
jl
in
inc
mov
and
ss
mov
dec
mov
xchg
jmp
inc
in
fwait
adc
mov
iret
sbb
and
aad
cmpsl
inc
and
enter
push
and
shll
add
jl
dec
dec
inc
test
leave
dec
movsl
mov
dec
das
test
mov
cmc
mov
dec
arpl
xor
cmp
push
and
scas
int
popa
and
cmp
add
jbe
jle
xorb
add
mov
sbb
enter
add
cmp
mov
out
loopne
push
and
sbb
sahf
nop
addl
cmp
daa
and
enter
mov
and
mov
sub
imul
dec
dec
xor
sbb
adc
pop
mov
mov
mov
in
xchg
sub
mov
inc
or
xchg
mov
ds
leave
adc
loop
movsl
jmp
test
es
call
sbb
adc
dec
mov
cmp
add
call
adc
cmp
xchg
imul
jo
movb
in
out
addl
cmp
mov
test
ror
pslld
and
pop
das
add
stos
pop
test
dec
test
scas
rcrb
inc
aas
or
dec
mov
dec
clc
outsl
loopne
xor
xchg
in
in
sub
fdivl
push
xchg
pop
mov
fdivr
imul
rcrb
xor
rolb
je
adcb
repnz
das
addb
xor
push
lods
cmp
popa
movsl
or
sub
js
pop
orb
inc
cmp
sbb
push
leave
and
cmp
dec
jge
hlt
aam
mov
push
rcrl
adc
and
out
ud2
cld
sbb
xchg
cs
mov
imul
sbb
pop
mov
xor
mov
mov
ret
jl
test
imul
mov
rolb
out
xchg
icebp
push
jmp
cmpsl
fsubrl
nop
inc
std
nop
mov
jae
mov
shrl
and
fsub
xor
ss
add
popl
sbb
bound
pop
pop
xor
push
pop
xorl
std
inc
mov
enter
jl
mov
cmp
loope
push
nop
add
je
mov
dec
insb
rolb
push
nop
add
in
mov
pop
adc
dec
lahf
test
or
pop
lods
out
mov
inc
xor
xchg
adc
mov
add
cwtl
frstor
rol
push
cld
in
cmpsb
cld
loopne
mov
push
arpl
pop
call
mov
rclb
dec
or
cmp
pop
mov
cmp
and
mov
mov
mov
data16
lcall
xchg
lock
xorl
mov
lods
int
ret
cld
mov
in
cli
xor
pop
mov
pushw
push
inc
inc
add
andb
out
cs
ljmp
inc
icebp
cmp
jo
shrl
cli
das
out
sar
jmp
test
mov
add
movb
js
dec
or
shll
mov
adc
lock
lahf
in
add
lahf
add
adc
pop
add
xchg
cmp
sub
stos
imul
bnd
shll
pop
push
sbb
add
and
les
mov
inc
movsb
test
cld
outsb
enter
pop
add
push
xchg
loope
push
cmp
ljmp
pop
test
xor
lret
sahf
mov
xor
sbb
push
lods
mov
lea
inc
jnp
cmpsl
adc
mov
xor
nop
fimuls
lock
adc
icebp
cmp
pop
add
enter
mov
xchg
stos
addb
push
pop
scas
cmp
sub
daa
pusha
ret
and
cs
sub
je
sub
addr16
mov
std
lret
jo
int
fs
pusha
js
jg
jmp
adc
cltd
clc
adc
add
and
outsl
jb
int3
inc
mov
inc
and
lahf
nop
mov
add
dec
cmp
cmpsl
in
xchg
loop
or
out
pushf
add
sub
cmpsb
push
mov
jp
ja
std
mov
js
stos
xchg
in
sbb
cwtl
mov
xchg
mov
enter
xor
sub
clc
stos
fiadds
dec
imul
sub
add
test
lds
adc
pmullw
cmpsl
cs
repnz
or
fsts
push
mov
dec
mov
add
push
xchg
sub
cld
cmp
xchg
loop
add
cli
push
and
sub
adc
repnz
repnz
dec
pop
sbb
int
mov
mov
lret
xchg
enter
sbb
mov
test
jmp
cmp
adc
xor
aas
imul
ret
add
sub
add
jl
loopne
cmp
sub
cmpb
mov
add
scas
ja
clc
mov
and
xor
push
dec
mov
std
sbb
rol
cmp
je
mov
jg
test
mov
dec
enter
and
sbb
jmp
loopne
mov
pop
sahf
pop
out
ds
and
adc
and
sbb
mov
mov
xor
dec
inc
addb
shlb
pop
add
dec
les
repnz
push
imul
pop
in
in
adc
cli
in
lods
and
adc
add
sarl
andb
adc
push
push
ret
fildl
movsb
icebp
fiadds
pop
inc
mov
add
push
loope
add
leave
lods
mov
jp
add
adc
push
popa
movsl
idiv
lds
lods
mov
fldl
add
push
add
add
adc
adc
sbb
xchg
and
pop
push
test
adc
bound
lahf
add
mov
xchg
popf
js
sbb
and
stos
mov
int3
cwtl
pop
add
lods
ja
add
ds
push
jp
cmp
add
repnz
insl
adc
cltd
lock
pop
addr16
dec
fisubs
stos
adcb
or
cld
mov
mov
mov
shrb
sbbb
bnd
jl
xor
or
sub
push
std
cmp
lods
xchg
shr
outsb
push
movsl
sti
or
push
mov
mov
popa
adc
and
fstpl
in
and
dec
cmpsl
add
cmp
es
lahf
xorb
add
add
or
mov
add
aad
xchg
lcall
lods
movsb
xor
dec
inc
mov
pushf
loope
test
xor
dec
gs
divl
mov
xchg
iret
push
ds
mov
nop
out
jmp
mov
sub
sbb
or
idiv
call
sub
lods
pusha
mov
data16
cwtl
sbb
nop
and
xorl
dec
xchg
mov
jno
addl
sbbb
mov
iret
es
xchg
jnp
je
or
js
jle
popa
mov
sub
imul
bound
loopne
rcll
and
add
outsb
pushf
sbb
and
nop
in
daa
jae
in
lds
mov
adc
in
xlat
mov
and
mov
sar
out
pop
sbb
fcompl
je
mov
adc
shlb
sar
jne
mov
in
inc
sbbb
xchg
rcl
sbb
dec
enter
fs
int
int3
pop
sub
test
dec
lcall
mov
and
rcrb
or
and
pop
xlat
in
push
popf
ljmp
in
push
and
push
add
mov
shlb
add
sub
int
xor
pop
jns
cmpsl
les
inc
or
cmpb
jecxz
add
sbb
cmp
xchg
clc
imul
aad
push
adc
push
and
test
sbb
jl
faddl
sub
sbbl
out
fcompl
bnd
cmp
out
stc
sbb
push
test
xor
and
inc
xlat
fists
mov
add
bound
push
repz
dec
mov
cld
xchg
mov
cmc
xor
push
and
fadds
and
daa
xor
les
cwtl
xchg
fnstsw
jp
ja
xchg
push
daa
pusha
sub
pop
add
add
lods
out
outsb
sbb
or
daa
xor
push
in
cmpl
and
mov
jg
sti
pusha
push
cwtl
js
or
out
pop
pop
mov
xorb
data16
or
enter
add
fwait
cmp
movsl
pop
insl
fsubl
ret
ds
jmp
hlt
push
sbb
in
clc
daa
in
xlat
addr16
push
aad
dec
add
sub
sbb
xchg
ljmp
and
dec
mov
enter
add
xor
nop
je
js
rep
rcrb
xchg
pop
xor
stos
push
call
push
jae
add
mov
xchg
leave
sub
jno
jns
sbb
sti
loopne
cld
sbb
cmpsb
lods
int3
sub
orl
jnp
push
loope
mov
adc
xor
cmp
enter
push
cmp
shr
mov
xchg
inc
inc
jl
imul
pop
add
clc
add
sarl
push
jo
and
add
adc
sub
or
cmp
and
mov
orb
mov
mov
loope
and
out
imul
mov
nop
push
jae
shlb
push
fcmovnb
pop
fdivrp
add
mov
sub
add
and
leave
je
xchg
je
add
in
sbb
pop
push
mov
inc
mov
lock
cmp
add
nop
getsec
mov
add
push
incl
adc
nop
scas
ficompl
lahf
insb
jb
int3
dec
lock
popf
stc
adc
pop
sub
add
outsb
cmp
test
cld
popf
adc
xchg
aam
fcompl
mov
leave
add
mov
pushl
add
bound
add
popa
rdtsc
mov
jp
sbb
pop
pop
push
sbb
test
inc
adc
pop
add
lahf
cmpsl
sub
xor
cltd
xchg
pusha
movsl
fistpl
ror
out
fnstcw
sub
rorl
inc
pop
add
and
lea
mov
add
pop
cmp
out
test
in
test
and
insb
cmp
loopne
push
sbbl
movsl
sub
call
pop
mov
aam
out
mov
mov
sub
dec
lods
add
mov
jle
fcmovnu
add
jmp
std
and
add
mov
adc
xchg
inc
not
or
mov
xor
jo
xchg
adc
hlt
faddl
in
movzwl
mov
nop
ret
test
xor
ficomps
mov
sarl
xor
repnz
loop
fistpl
ljmp
or
out
inc
mov
mov
cs
mov
ret
push
push
cmp
clc
pop
mov
sti
outsb
insl
add
arpl
push
scas
cmp
mov
push
xor
pop
cmp
subb
sbb
scas
sti
cwtl
int
nop
mov
popa
faddl
lea
roll
pushl
faddl
clc
pop
or
push
pusha
dec
jp
mov
fsubrs
pop
addl
mov
push
fs
pusha
mov
push
cmovs
fstl
mov
inc
ds
pop
add
push
shrb
push
and
adc
jmp
mov
popa
pusha
pusha
fbstp
fucom
or
test
push
into
hlt
and
jecxz
adc
repz
fcmovnb
sti
jno
sbb
jl
sbb
pop
pop
mov
fnsave
jb
pop
adcl
fldenv
xchg
push
jecxz
out
mov
loopne
stos
xor
jge
pop
and
push
xor
roll
cmp
add
jmp
outsb
ss
mov
push
lcall
adc
push
sbb
pop
mov
fcos
sbb
adc
in
pop
adc
add
rorb
adcb
imul
adc
push
lods
or
lahf
jne
adc
fisttpll
xchg
inc
xchg
aaa
fcompl
push
cs
inc
push
jne
pop
lcall
mov
outsl
xchg
loopne
arpl
xchg
and
popa
jge
insl
cmp
outsl
arpl
or
push
in
loopne
mov
pop
adc
sti
cmp
and
dec
push
mov
std
inc
lods
dec
jge
adc
aad
add
jne
adc
mov
mov
scas
adc
add
faddl
test
add
mov
movswl
add
clc
fimull
lea
sub
imul
fidivrs
es
out
or
sahf
mov
subb
sub
in
dec
mov
add
ret
jae
mov
leave
dec
ja
lock
dec
push
outsb
test
cmpsb
jbe
std
xor
sbb
lds
or
stos
and
ja
mov
add
sti
movsb
aam
inc
aas
add
inc
insb
mov
cmp
xlat
and
sbb
adc
fdivl
xor
inc
jecxz
push
insb
ljmp
cmpl
mov
add
pop
iret
mov
call
outsb
movsl
and
jbe
nop
cltd
cs
cmpb
shlb
andb
popa
pusha
loop
and
and
and
jmp
mov
xchg
cmp
push
add
sbb
cmc
jmp
leave
mov
out
stc
scas
push
pop
xor
pop
jle
iret
jmp
pop
dec
stos
aas
jbe
aas
cmp
dec
push
shlb
pop
jg
test
insl
mov
lods
inc
add
mov
and
mov
mov
pop
lahf
cmp
xchg
mov
mov
xor
or
je
sarl
adc
and
sub
push
xchg
pop
out
sub
push
sub
jecxz
jp
in
daa
stc
sbb
push
adc
movaps
and
cmp
dec
mov
lahf
mov
lret
out
pop
js
jg
rclb
pop
xor
les
and
nop
mov
sub
int
loope
pusha
test
les
pop
dec
rcll
out
xor
lret
pop
cmp
xchg
sti
insb
push
add
dec
dec
iret
fnstcw
xor
test
dec
inc
add
fsubp
sbbb
xor
popa
nop
arpl
cmp
add
pusha
lock
add
push
add
mov
sub
test
je
lock
xor
lds
jne
push
pop
sub
test
mov
cmpsl
mov
mov
inc
and
xchg
sub
mov
mov
lods
sti
aas
jno
popf
arpl
push
push
fildl
lret
sbb
xor
or
inc
sbb
xchg
add
sbb
cmp
push
test
cs
icebp
imul
and
add
push
rcl
xor
cwtl
arpl
xor
pop
hlt
jp
jecxz
pop
xor
add
shll
repz
adc
adc
or
mov
pusha
xor
mov
mov
stos
out
sbb
test
jae
pop
push
pushf
mov
shl
mov
repz
or
inc
nop
pusha
mov
out
add
mov
sub
add
jmp
xlat
mov
in
push
push
mov
mov
nop
test
mov
add
mov
add
xor
jmp
movsl
inc
mov
xchg
and
inc
lods
mov
add
mov
inc
rcrb
mov
les
mov
or
push
std
pop
lock
fbstp
inc
rclb
sbb
mov
pushl
clc
iret
cmpsl
cmp
icebp
dec
repz
gs
lcall
dec
ret
xor
push
sti
cmpsl
jo
cmc
jl
add
mov
dec
xor
and
add
stc
jns
or
adc
or
daa
add
jo
lea
std
inc
sbb
or
leave
add
adc
add
enter
pop
mov
mov
mov
cltd
cwtl
inc
mov
call
pusha
adc
or
roll
jg
repz
sub
and
xlat
bound
les
xchg
mov
pop
adc
and
incb
ret
lods
add
shlb
cld
pop
adc
jmp
test
es
push
push
in
sub
loope
xchg
push
jns
movsl
adc
jmp
mov
outsb
or
ficomps
mov
loope
idivl
mov
push
ljmp
int3
jmp
stc
dec
test
scas
mov
mov
and
push
frstor
call
aad
mov
cmp
aas
test
inc
sub
push
mov
push
xor
out
aaa
add
or
dec
shlb
and
pop
mov
or
call
loopne
outsl
inc
loope
mov
dec
das
pop
pop
xor
scas
testb
pop
mov
fnstenv
gs
xchg
sub
pop
push
mov
or
shrb
sbb
gs
psrld
enter
aam
jbe
push
or
add
or
ret
xchg
jecxz
and
sub
addb
xor
lods
icebp
mov
push
jp
repnz
pop
mov
lea
loope
xchg
xor
fwait
andb
enter
sbb
inc
adc
daa
mov
xchg
fnstenv
shlb
fcomps
sahf
ret
test
xchg
jge
inc
loopne
push
repz
or
mov
mov
andl
mov
mov
cwtl
nop
mov
push
stc
pop
popa
je
and
rcrl
addl
jecxz
in
icebp
int
adc
pop
movsb
cmp
mov
aam
cmp
and
mov
cmc
lea
adc
push
adc
inc
jecxz
mov
clc
in
and
sub
add
fs
sarb
insl
push
loopne
sub
dec
mov
add
jp
xchg
subb
int
shlb
movl
orb
ds
movb
jp
inc
mov
jnp
push
xor
push
sbb
orl
rcrb
mov
mov
out
lcall
and
fmull
push
pop
bound
xlat
add
mov
jmp
popf
add
and
xchg
std
out
xor
or
xor
jle
add
imul
jae
xchg
and
and
sbb
or
mov
adcl
stc
lds
loope
sub
jnp
add
mov
cs
and
push
lcall
jb
add
cli
cltd
pop
dec
aad
movsb
loopne
ljmp
dec
ljmp
std
pop
fs
or
std
repnz
mov
dec
mov
lods
lcall
xchg
movsl
or
cltd
stos
mov
push
push
mov
push
or
pop
lea
ljmp
hlt
cmp
xor
inc
lods
mov
dec
nop
movsl
rclb
frstor
mov
nop
loopne
cwtl
fbstp
adc
ss
inc
cltd
dec
adc
cli
imul
jl
enter
jl
add
push
call
cmp
sbb
mov
add
xchg
and
cmc
rolb
or
imul
cmpsl
test
scas
negb
add
test
sub
xor
sub
xchg
sbb
das
jns
inc
incb
shlb
sahf
ret
adcb
sub
jnp
mov
inc
mov
ret
sbb
je
pop
xor
nop
mov
xchg
mov
adc
mov
or
jle
add
push
pop
pop
pop
mov
mov
cld
cmp
movsb
test
popa
enter
xor
sub
xchg
add
adc
add
frstor
xor
popa
bound
fisubs
mov
adc
or
dec
das
jb
pusha
pusha
sbb
xchg
push
xchg
nop
add
jne
cmpsb
push
mov
xlat
or
pusha
gs
rcr
icebp
or
test
push
imul
fidivrl
sub
push
adc
sub
jle
ljmp
sub
fisubrl
movsb
dec
daa
repnz
jne
pop
rolb
push
adc
out
gs
es
add
neg
pop
add
in
pusha
mov
addb
mov
xchg
cmpsl
add
scas
adc
inc
sbb
insl
xchg
xchg
movsb
xchg
fcompl
sub
loopne
cmp
add
ds
negb
dec
mov
test
and
cmp
or
movsb
cmp
out
inc
xchg
xor
cmpsb
mov
push
ja
pusha
add
pop
and
add
movsb
test
insb
mov
test
or
mov
pop
imul
pusha
mov
arpl
mov
mov
pop
sub
mov
dec
fdivrp
mov
imul
and
mov
fildl
loope
fucom
cmpsb
or
push
mov
sub
test
jo
xchg
jp
icebp
or
xor
in
sub
sbbb
dec
bound
mov
jbe
pop
pop
je
jmp
push
inc
mov
inc
iret
or
inc
adc
or
add
add
add
imul
push
popf
sbb
pop
popf
adc
dec
popa
mov
mov
sbb
lcall
inc
je
mov
or
repz
cmp
inc
outsl
mov
clc
sbbb
insl
sbb
bound
xor
lock
push
sarb
mov
mov
fs
addr16
loopne
pop
add
clc
popf
fdivl
inc
es
sub
out
dec
cltd
push
inc
pop
pop
xchg
cwtl
push
and
inc
xchg
mov
imul
adc
mov
shll
lock
or
dec
mov
cmp
cmpsb
shl
lock
or
dec
cmpsb
add
jns
je
lret
dec
mov
and
xchg
push
out
test
pop
pusha
sub
mov
mov
int
ss
imulb
add
mov
adc
lcall
mov
cli
add
mov
jp
cmpsb
push
cmovnp
pop
addb
insl
std
mov
sahf
jl
insb
push
nop
shr
lret
pop
popf
adc
inc
mov
pop
inc
inc
xchg
inc
mov
call
cmpsl
clc
sub
sbb
sbbb
lahf
mov
orb
aad
pusha
pusha
jne
addr16
push
in
pusha
cli
shll
repnz
add
insl
fs
or
add
mov
mov
outsb
inc
jmp
hlt
mov
pusha
hlt
mov
mov
and
sti
add
popf
pop
pop
dec
dec
fstl
sub
add
adc
pusha
inc
xlat
pop
pop
push
push
daa
inc
add
mov
push
jg
int3
sub
lahf
in
popa
test
mov
stos
ljmp
pop
sbb
cld
add
mov
adc
sbb
das
and
mov
pushf
inc
and
in
inc
mov
push
adc
push
mov
cmc
add
mov
inc
sahf
push
dec
and
add
cmp
add
sub
daa
xchg
inc
jae
xor
xlat
add
add
add
push
test
in
jo
add
in
jno
mov
push
add
popa
aas
mov
adc
into
dec
adc
mov
and
or
adc
dec
aam
andl
push
pop
icebp
sub
sbb
mov
mov
shl
sbb
inc
ret
test
das
es
mov
pop
sub
movsl
and
or
and
popa
adc
sub
clc
rclb
add
inc
dec
sbb
inc
mov
mov
es
lea
sbb
stos
cmp
or
incb
xor
bound
in
add
jmp
notb
cmp
pusha
mov
inc
rclb
mov
lret
arpl
mov
xchg
mov
ss
mov
pop
sbbb
adc
mov
inc
int3
jae
call
addb
sti
fs
add
push
and
jnp
sbb
rorb
out
mov
pusha
loope
mov
adc
xor
or
adc
aas
xor
arpl
mov
inc
outsl
cmpsl
jne
leave
xchg
test
shlb
dec
mov
mov
mov
enter
shr
sub
js
mov
ljmp
pop
enter
pop
daa
mov
stc
popf
adc
stos
in
mov
movsl
in
adc
sub
clc
sub
add
and
mov
dec
iret
sarl
mov
repz
xor
aaa
pop
lret
sub
xchg
or
jmp
loopne
push
push
popf
sbb
dec
sub
xchg
movsl
das
mov
jecxz
push
adc
sahf
aas
mov
fdivrs
inc
lds
lods
movb
dec
clc
sbb
call
pushf
insl
push
push
repnz
or
push
into
cltd
push
lea
std
xor
mov
fstps
and
jg
fiaddl
push
not
adc
pop
repnz
cmp
mov
loope
lahf
jbe
das
or
inc
outsl
pop
subb
adc
dec
jns
or
push
and
into
add
push
cmp
add
push
je
xchg
adc
jmp
dec
push
or
out
push
subl
xor
mov
mov
pop
push
fsts
daa
nop
push
and
add
das
mov
dec
pusha
sbb
int3
mov
jo
ds
add
mul
xchg
jnp
sub
movsb
outsb
pushf
cmp
nop
inc
out
call
push
xor
imul
mov
or
loopne
stos
out
mov
mov
add
inc
lods
sbb
pushf
mov
jae
mov
sub
dec
lea
ljmp
xor
push
jo
add
xor
xchg
cli
mov
call
in
fldl
add
jp
mov
mov
lds
in
rolb
mov
cltd
mov
push
enter
or
mov
lea
inc
in
jae
mov
xor
push
insb
fildl
push
and
sahf
popa
and
pop
inc
sub
adc
pusha
sbb
add
push
pop
les
out
add
xchg
cmp
adc
xor
out
fmuls
mov
loopne
xor
xor
aaa
cmc
popa
sub
pop
das
xor
test
clc
ret
xchg
popa
pop
xchg
adc
jb
std
leave
fistl
mov
sub
pop
outsl
mov
push
pop
or
mov
mov
pop
mov
aam
sarl
sub
pop
push
pop
outsb
and
lcall
or
out
and
js
dec
loop,pn
lahf
pop
xchg
xchg
jb
aaa
push
test
cmp
pusha
mov
and
sbb
nop
or
dec
out
dec
ret
daa
cld
add
je
push
cwtl
lea
xchg
shr
adc
push
lret
arpl
js
mov
jne
mov
xchg
cli
imulb
mov
or
jge
fstps
jl
aam
aam
xor
mov
sub
pop
cmpb
mov
shll
and
popf
clc
hlt
or
enter
xchg
inc
sti
add
mov
fldt
aad
out
dec
sbb
iret
mov
mov
nop
mov
xchg
dec
dec
adc
xchg
lea
rcll
repnz
int3
aas
andb
sbb
mov
add
sarb
lds
and
pop
and
jne
adc
mov
mov
xchg
add
shrl
dec
das
les
dec
pop
scas
push
rcrb
addr16
add
jl
fmull
add
mov
sub
jnp
popl
lods
sbb
std
pusha
dec
incb
lods
sarl
or
lods
mov
add
ret
mov
shlb
nop
mov
and
adc
dec
les
out
mov
jl
cmp
idivl
jle
pop
out
mov
push
sub
pop
mov
pop
push
cmp
bound
add
and
jno
negl
mov
push
or
adc
pop
in
sti
dec
and
xor
inc
adc
sbb
es
jge
mov
xlat
ficompl
mov
adc
fiadds
je
sub
test
pushf
xchg
add
mov
inc
sbb
loop
dec
pop
sbb
jmp
test
shlb
cmp
mov
mov
jno
adc
shll
xor
cli
pop
outsb
push
pop
gs
sbb
jb
adc
jecxz
jmp
add
pop
leave
in
pusha
push
sbb
push
adc
pop
popa
icebp
test
jmp
insb
mov
or
sub
adc
push
add
pushl
outsl
cmc
or
pop
lods
adc
push
loopne
sub
fs
mov
pop
mov
in
pop
loopne
les
daa
mov
cltd
pusha
ljmp
push
adc
ret
dec
mov
mov
xchg
sbb
pusha
cmpsl
adc
jo
arpl
lret
mov
mov
pop
and
lock
cmp
add
inc
add
int3
sbb
push
loop
lret
and
pop
push
test
add
or
test
lcall
imul
sbb
fisttps
test
xor
xchg
pop
and
rcl
sti
cmp
cmp
mov
mov
add
lock
jns
push
nop
mov
mov
cltd
jns
lahf
or
popa
fcomi
fdivp
test
dec
mov
pop
dec
inc
mov
cmp
add
outsb
sub
cmp
ja
mov
fwait
pop
inc
xor
cmp
or
fs
and
hlt
popl
adc
repnz
enter
stos
xor
fisttps
add
mov
pop
fs
pop
dec
loope
push
pop
nop
and
sub
mov
sub
xchg
cmp
pop
je
mov
mov
ror
and
in
add
dec
jmp
mov
lcall
arpl
add
mov
sub
pop
add
pop
pop
aad
or
inc
add
sbb
push
cwtl
jbe
pop
xchg
lahf
xchg
repnz
outsb
rolb
icebp
loope
mov
pop
pop
xchg
xor
popf
sbb
inc
sub
push
pop
push
fwait
add
leave
pop
mov
call
loope
xchg
inc
cmp
das
add
pop
xchg
inc
pop
roll
adc
push
pop
mov
or
out
jo
fst
lea
inc
stc
jp
imul
punpcklwd
es
mov
repz
sbb
inc
sub
dec
mov
or
sub
arpl
das
inc
sub
pop
enter
pop
or
push
and
or
je
loope
dec
jg
push
mov
sbb
mov
pause
add
mov
adc
add
out
sbb
cmp
test
negb
pop
inc
xchg
dec
adc
sub
dec
adc
orb
lcall
les
mov
push
hlt
aas
test
sbb
cmp
xchg
pop
add
cmp
mov
xchg
xchg
addb
frstor
add
xor
xchg
mov
and
outsb
pop
add
xchg
xor
repnz
mov
inc
add
xchg
js
or
cmp
std
mov
sbb
iret
mov
pop
pop
cmp
inc
fnsave
add
cmp
push
ret
add
cmc
xor
cld
dec
or
lock
nop
jo
or
jb
adc
hlt
mov
mov
add
popf
in
pop
pop
xchg
push
pop
mov
or
call
push
popa
adc
jge
loop
mov
subl
or
popf
aad
inc
push
xchg
test
gs
iret
fdivl
adc
test
dec
mov
ja
lea
mov
sbb
jnp
or
or
inc
or
pop
ja
loop
push
lods
insl
adc
and
mov
sub
sbb
loope
xchg
fidivrl
notl
xor
or
push
mov
jmp
mov
mov
cmp
push
loop
fdiv
push
jbe
mov
loop
mov
dec
std
outsl
insb
and
repnz
xor
add
jmp
out
jl
mov
rorl
pusha
cltd
stc
rcrl
sbb
lar
adc
mov
dec
es
outsb
add
jnp
pop
aam
sub
outsb
lahf
int
rolb
add
pusha
pusha
push
dec
push
sbb
nop
xor
add
cmpsl
test
push
and
orl
in
mov
sub
pop
lea
test
and
sub
cmpsl
sbb
pushf
inc
mov
mov
add
insb
add
cmp
nop
lret
test
sar
imul
mov
cltd
cli
mov
outsl
xor
mov
adc
inc
bnd
xchg
lret
jbe
jo
xchg
clc
add
enter
movsb
add
push
push
dec
or
pusha
popa
mov
push
fstpt
mov
daa
mov
or
push
icebp
or
add
jg
shr
pop
jecxz
push
stc
pop
lock
mov
adc
out
sub
sub
pop
or
mov
push
jb
dec
cmp
push
test
jae
call
pop
add
fcmovnu
and
push
add
push
pop
cvtdq2ps
xlat
mov
movsl
and
jge
movsb
cmpsb
xchg
pop
adc
pop
in
mov
inc
aaa
cmp
ret
sub
gs
shl
out
inc
xchg
sahf
fcom
mov
add
aas
pusha
imul
insb
ljmp
mov
and
add
xchg
mov
cmc
jb
add
inc
add
popf
andb
outsb
psrld
loop
les
adc
fsubr
orb
mov
and
adc
xor
dec
cmp
popf
ss
lcall
gs
lahf
repz
push
ljmp
mov
roll
hlt
cmpsb
push
out
xchg
sub
pop
mov
cmp
leave
mov
jbe
inc
pop
add
adcl
sbb
scas
xor
adc
shlb
scas
push
pusha
mov
inc
stos
cmp
nop
repz
cmovg
pusha
aas
pop
push
bound
das
and
cmpb
mov
cmp
in
or
cmp
jb
fnstsw
or
jmp
imul
inc
loop
shrl
add
jmp
add
scas
add
rcr
mov
mov
xchg
je
ja
dec
mov
shrl
adc
adc
mov
sti
cmpsb
xchg
lock
inc
push
add
in
and
mov
jl
lcall
testb
sub
adc
nop
lcall
xchg
insb
pop
push
out
pusha
push
pop
xor
inc
mov
cmp
inc
enter
cmovae
cmp
out
popa
pop
je
push
xchg
xor
lods
ret
xor
adc
add
mov
test
enter
mov
xchg
mov
fwait
std
lock
mov
rolb
push
in
gs
dec
mov
mov
sbb
nop
dec
push
add
gs
jns
mov
clc
sbb
add
mov
xchg
add
movsl
ja
and
jns
push
daa
arpl
mov
sub
xchg
sub
sbb
movsb
ficompl
push
outsb
nop
mov
cwtl
or
push
ret
aam
arpl
mov
sbb
mov
cs
mov
xchg
sub
cmpsb
adc
loope
dec
jnp
faddl
fwait
dec
cmpsl
and
mov
add
jnp
mov
cmp
in
add
push
pop
add
pop
add
aaa
cmp
shll
mov
clc
outsl
jno
not
movsl
or
pop
pop
movsb
push
or
sbb
or
sub
add
es
mov
push
dec
movsl
dec
fiadds
scas
sub
jle
push
popa
jmp
fs
subl
pop
pop
pop
dec
stc
test
jb
adc
push
pop
xor
sbb
add
adc
inc
bnd
insl
or
sub
xor
jnp
jo
sti
or
pusha
sbb
pop
adc
xchg
int
inc
push
mov
shrl
mov
dec
imul
mov
mov
mov
das
inc
or
xor
pusha
std
aas
push
sbb
add
jmp
test
pop
xor
addr16
cli
leave
jno
clc
pop
push
mov
cmpsb
fidivrs
pop
pop
sahf
fcoml
push
xor
xchg
push
inc
into
dec
pop
adc
es
sti
test
les
mov
lahf
mov
insl
push
mov
test
dec
add
daa
icebp
call
push
push
dec
fiadds
and
stos
mov
pop
mov
test
xchg
sub
sarl
add
jno
jne
push
sbb
add
sbb
das
xor
add
dec
les
mov
add
sbb
mov
sti
leave
nop
mov
das
dec
push
cld
xlat
sub
in
pop
sub
in
jmp
jbe
pop
push
mov
sbb
std
inc
movsl
out
arpl
lahf
das
ss
into
and
xor
xor
mov
or
inc
imul
fiadds
fsubp
or
aas
shrb
and
jo
sti
adc
test
or
pushf
adc
sbb
lods
sub
xor
nop
cmp
pop
mov
rorl
sub
dec
shrb
cvtdq2ps
inc
mov
shrl
pop
mov
aaa
popa
mov
add
ja
adc
or
push
mov
jg
jae
cmp
movsb
adc
jae
jmp
out
adc
in
mov
rcrl
and
adc
push
popa
and
pop
xchg
daa
int3
mov
jecxz
or
push
dec
adc
sbb
mov
adc
subb
movsb
and
xor
insl
in
jne
pop
lock
xchg
add
lcall
mov
pop
popa
jmp
sbb
lods
cmp
dec
add
addr16
daa
xchg
add
filds
mov
neg
loopne
pusha
cmc
nop
jg
lods
sub
hlt
add
xor
hlt
faddl
cld
jmp
or
inc
lahf
jecxz
shll
in
sbb
jge
pop
cmp
cld
out
xor
pop
sub
add
adc
jns
mov
test
jge
dec
dec
jp
jbe
push
jmp
push
cmp
push
xchg
pop
mov
ficompl
hlt
cmc
ret
sub
cltd
add
push
pop
pop
cmp
testl
test
incl
mov
add
mov
sbb
jmp
mov
adc
mov
sbb
pop
dec
out
jno
xchg
adc
es
lea
jl
fs
or
inc
dec
mov
addl
call
ljmp
aam
mov
jne
cmpb
ss
and
push
and
fwait
sahf
rcll
clc
lods
ds
or
sbbb
mov
dec
mov
adc
add
jl
call
add
cwtl
push
cli
and
push
bound
or
mov
fildll
and
je
fcompl
aad
iret
and
jecxz
test
shr
sbb
hlt
inc
aad
divl
mov
mov
mov
adcl
push
push
data16
cmpsb
cwtl
pop
loopne
mov
popa
lahf
in
fld
push
mov
jb
icebp
adcb
movsb
ret
jmp
sbb
or
lret
push
inc
mov
int
fs
pusha
inc
xor
sbb
mov
pop
popf
mov
xchg
adc
sbb
in
sbb
jne
loopne
add
cld
cmpsb
mov
dec
cmp
das
fnstcw
popf
sbb
cld
std
inc
and
test
cli
mov
dec
and
dec
jnp
add
mov
dec
mov
in
lock
sahf
pop
incl
outsl
mov
mov
jno
sbb
hlt
and
pop
loope
aas
loopne
push
or
rolb
test
mov
push
faddl
ljmp
call
out
mov
lea
xor
cmp
insb
inc
dec
add
or
clc
gs
popf
xchg
mov
xor
cmp
add
inc
popa
or
cmc
fldt
pusha
pushf
xchg
ficomps
xor
and
mov
adc
cmp
cmp
mov
jbe
sub
test
cmp
mov
dec
ss
aas
fstl
in
mov
push
mov
shrl
das
and
and
add
nop
ja,pn
je
movsb
mov
pop
dec
pop
lock
xor
pop
and
jae
mov
imul
or
ret
add
push
lea
fwait
jp
in
aam
mov
sti
mov
iret
ret
mulb
sbbb
lahf
jecxz
push
inc
push
cmpsb
sub
pop
add
xor
lret
mov
cmp
fistl
and
mov
xorb
int3
rcr
jecxz
mov
add
arpl
cmpsb
test
repnz
inc
and
pop
sbb
popf
and
or
add
movsb
lret
mov
faddl
adc
jo
dec
adc
adc
cli
mov
leave
mov
subb
jno
outsb
je
add
pop
stos
pop
pusha
bound
aad
das
fdivs
insl
iret
rcr
mov
or
shrb
popf
xchg
fiaddl
jl
xchg
push
add
testl
lret
ss
dec
lds
or
xchg
jne
mov
bound
mov
push
mov
sub
or
sti
pop
jle
pusha
add
xor
add
scas
sub
nop
add
gs
mov
shrb
movl
and
rorl
fcoml
addr16
movsl
inc
xchg
cmc
insl
dec
dec
call
xor
xchg
imul
sub
xor
push
xor
add
adc
sahf
es
test
dec
dec
maxps
jmp
add
push
call
adc
mov
fldl
push
scas
call
and
mov
xchg
icebp
imul
lods
adc
xorb
pop
in
dec
lcall
outsb
jmp
adc
icebp
or
test
pusha
loop
add
mov
add
call
add
pop
cmp
jmp
jl
add
imul
test
lea
mov
xor
mov
push
push
push
mov
int3
faddl
and
test
and
mov
fisubl
clc
je
imul
pop
lea
and
les
pop
mov
xchg
aam
js
xchg
or
or
pop
sub
mul
push
add
inc
nop
popf
xorb
adc
dec
gs
adc
sub
adc
adc
jb
shll
xchg
pop
sbb
data16
mov
pop
lret
and
push
jnp
ja
sar
loop
pop
imul
xorb
and
pop
test
sbb
imul
pop
mul
cmp
dec
fidivs
jno
stc
xchg
lret
rdtsc
lret
fisttpl
cmp
fwait
mov
fldl
fs
aam
cmp
fldt
dec
sub
and
fcoms
sub
out
or
mov
jae
dec
repnz
mov
inc
pop
or
mov
jle
jmp
xor
jecxz
push
je
jno
movsb
xor
pop
xor
push
adc
jnp
add
test
movsl
cmc
pop
repz
aas
mov
popa
cwtl
leave
xchg
pushf
stc
add
xor
sti
icebp
mov
add
push
pop
inc
fstl
fisubrs
cmp
pop
xchg
aam
xor
adcb
inc
adc
fldl
repz
out
shll
gs
inc
sbb
dec
pop
and
add
lods
jnp
jo
outsl
pop
dec
out
lret
leave
sub
pop
jecxz
dec
xor
fs
add
jae
faddl
daa
stos
and
adc
add
ljmp
pop
add
xchg
push
cwtl
or
lcall
insl
rorb
enter
stos
xchg
inc
inc
fbstp
repnz
andl
xor
add
cld
inc
out
ss
pop
mov
jnp
add
cmp
scas
or
mov
mov
pusha
jmp
lahf
pop
imul
and
mov
sub
movsb
inc
and
mov
pop
lods
add
mov
or
or
xlat
sub
clc
fwait
daa
sbb
cmpb
or
xchg
adc
rolb
sbb
xchg
in
ds
sti
inc
mov
pop
and
cli
loopne
add
lods
in
adc
or
dec
pop
inc
xchg
js
icebp
bound
loope
and
mov
das
shlb
jmp
inc
and
add
scas
mov
lds
sub
or
imul
add
jbe
push
mov
pop
inc
cmp
scas
outsb
lods
mov
les
dec
jo
mov
movsb
cltd
sar
nop
jno
cmp
dec
addr16
xchg
mul
into
lret
push
dec
out
push
pushf
pop
ds
pusha
imul
stc
xor
rolb
adc
imul
popa
pop
nop
outsb
dec
pop
scas
ret
xor
sub
sub
std
shl
xchg
rcrb
sub
push
xor
adc
inc
into
or
mov
pop
pop
test
cmpsl
jae
jo
xor
inc
out
or
mov
pop
push
int
inc
push
pop
in
aaa
mov
fs
xor
repnz
pop
jg
mov
mov
xor
cmp
or
insl
es
fiadds
daa
scas
xchg
adc
mov
pop
mov
lea
lods
pop
mov
test
lret
idiv
inc
add
je
inc
xchg
outsl
sbb
pop
andb
mov
testb
sbb
dec
cmc
fmuls
mov
scas
mov
out
mov
in
pop
sub
lods
sti
push
jl
jmp
push
add
ja
loopne
lret
add
popa
push
pop
mov
cmp
add
clc
movsl
lret
inc
fstpl
dec
push
push
adc
inc
pusha
test
push
rorl
add
enter
add
adc
sub
mov
loope
jno
sub
xchg
nop
ja
sbb
cmpsl
mov
xchg
add
aaa
jmp
addb
je
dec
xchg
imul
aad
add
push
xchg
xor
push
mov
xchg
popf
cmp
pop
cs
lret
daa
dec
dec
movsl
xor
mov
pop
in
popf
mov
movsb
or
mov
inc
call
mov
std
mov
out
js
out
notl
mov
pop
mov
pusha
popf
icebp
push
orb
pop
or
dec
add
push
pop
aaa
adc
das
jl
jle
sub
add
leave
outsb
scas
outsl
push
add
xor
jo
xchg
rol
fmuls
mov
xchg
add
inc
mov
lods
ljmp
testl
adc
aaa
ds
mov
push
mov
sbb
sub
jmp
mov
ret
cmp
xchg
xchg
jle
add
rorl
movsl
int
inc
aas
jp
lahf
loop
popf
lock
mov
ficomps
cltd
or
lret
jmp
nop
xor
mov
and
xlat
inc
fs
scas
mov
mov
shlb
xor
dec
mov
dec
into
jl
or
outsb
bound
mov
lahf
mov
cli
fwait
es
movsl
les
nop
sbb
pop
xor
loop
adc
arpl
cli
and
push
dec
pusha
outsl
test
test
inc
mov
sti
and
mov
movsb
mov
adc
andb
mov
push
jns
sub
test
mov
nop
js
ds
pusha
push
push
pop
pop
mov
aad
nop
add
pop
into
decb
je
push
pusha
cs
ljmp
fldt
dec
and
out
ljmp
imul
mov
or
clc
cmpsl
ljmp
leave
jns
fsubs
loopne
push
ja
sbb
sub
mov
fcmovne
ljmp
add
ljmp
inc
das
adc
pop
jg
scas
cltd
inc
test
mov
push
inc
jecxz
cwtl
push
xor
cwtl
popf
fstpl
xchg
cmp
in
data16
or
sti
push
pop
push
repz
or
outsb
add
dec
or
popf
or
filds
add
loopne
jb
pop
mov
or
xor
cli
and
pop
pop
xor
jmp
cmpsb
fs
push
xchg
fstpt
test
cwtl
adc
dec
add
sahf
add
jnp
push
outsl
aaa
in
jmp
rorb
outsb
test
sbb
dec
fists
dec
add
xlat
xor
add
push
ja
pop
mov
lret
arpl
xchg
aaa
or
popa
inc
sbb
push
dec
ret
inc
pop
pop
ss
xchg
jecxz
mov
dec
fwait
js
mov
ret
mov
or
dec
mov
xchg
add
mov
jecxz
or
shl
pop
cli
push
lods
sbbb
fstpl
add
mov
xchg
xchg
mov
add
test
fsubrl
or
insb
pusha
pusha
and
mov
repz
imul
pushf
stc
cs
add
mov
cmp
insb
pop
fmul
dec
mov
and
and
fnsave
or
jno
jle
notl
pop
shlb
out
jbe
mov
clc
pop
or
sbb
xchg
ja
aad
mov
clc
icebp
cmc
outsl
lcall
xchg
mov
or
mov
push
out
aam
inc
mov
push
sbb
cwtl
stc
rcl
adc
mov
cmpsl
adc
mov
xor
push
mov
adc
ffreep
and
fdivrs
xchg
adc
std
jo
and
adc
loop
mov
dec
jnp
dec
or
in
add
bound
adc
loopne
sbb
shl
mov
push
add
bound
imul
mov
shlb
and
cli
cmp
js
add
fs
xor
ret
add
lods
mov
dec
add
inc
aad
call
cmpb
stc
pop
xchg
cmpsl
dec
addb
or
or
addb
inc
stc
pop
iret
add
xor
push
stos
add
ja
bnd
mov
xlat
or
les
rclb
lret
cwtl
data16
push
pop
push
lock
adc
scas
dec
outsb
and
into
or
pop
jmp
icebp
lcall
sarb
imul
sbb
scas
jg
in
and
xchg
sbb
inc
shll
repnz
inc
scas
cmp
popa
movsl
add
jl
add
ret
cmp
ret
push
in
jge
add
push
out
add
dec
inc
inc
adc
mov
add
out
add
sbb
imul
mov
out
cmpb
fildl
mov
in
add
mov
jno
xor
fidivrl
cmpl
pushf
add
jnp
in
sbb
nop
xchg
xchg
cmp
jnp
xor
cltd
xor
sub
cmp
mov
loopne
sub
scas
jmp
or
add
mov
scas
roll
sub
popf
pop
and
fwait
adc
fcomps
adc
stc
nop
in
stos
dec
mov
inc
add
test
and
lods
testb
sbb
or
sub
pop
sub
xchg
clc
ss
or
sub
inc
pop
movsb
lock
in
mov
das
push
mov
adcb
cmpsb
pop
in
das
jo
hlt
pusha
clc
mov
jecxz
cmc
popa
push
jp
mov
stos
sub
ja
mov
and
sub
roll
push
pop
jb
aaa
int
add
test
inc
lret
push
and
dec
lock
dec
add
add
mov
and
shrb
xorps
add
ja
mov
das
and
add
stc
push
shlb
dec
mov
xor
mov
add
subb
mov
and
push
scas
adc
out
xor
adc
sbb
inc
loopne
jnp
pop
mov
js
and
jnp
test
test
add
adc
mov
adc
shlb
add
or
scas
shrb
dec
jg
mov
out
add
push
add
and
jo
loop
std
add
nop
fwait
movsb
roll
test
and
scas
lock
sub
jb
cmp
fnsetpm(287
mov
mov
das
cmp
roll
sub
adc
clc
jp
add
rcrl
scas
enter
sti
mov
jno
xchg
inc
add
xchg
push
pop
mov
push
push
dec
mov
repnz
testb
fistpll
add
test
leave
jmp
mov
push
inc
dec
jl
xchg
mov
pop
adc
sub
mov
js
or
add
rcll
sbb
into
and
and
add
sbb
jno
mov
sub
mov
ds
loop
push
loop
push
enter
aad
adc
fmuls
pop
add
enter
test
rorl
mov
inc
jg
cld
jl
les
enter
pop
fnstcw
xor
out
jmp
popf
or
dec
loop
xchg
in
add
mov
lods
movsl
mul
lahf
int
push
push
fwait
or
sub
cld
push
test
mov
and
mov
popa
test
push
outsb
dec
leave
pop
icebp
adc
add
stos
add
or
out
add
and
dec
push
mov
mov
stc
cmc
pusha
mov
sqrtps
ss
popa
xor
cmp
out
divl
add
xor
loopne
add
adc
mov
stc
add
xor
push
test
adc
arpl
inc
xchg
or
aaa
xor
mov
adc
mov
cmp
out
sbb
insb
lods
cwtl
loop
jo
push
adc
lds
add
mov
and
pushf
incb
add
pop
enter
popf
add
jle,pt
push
test
xor
adc
add
decb
cmc
addb
add
mov
pop
mov
jno
cmp
cmp
xchg
push
ror
lods
pusha
dec
stc
jmp
inc
fsub
adc
je
adc
aaa
and
pop
sbb
jb
dec
loopne
fimuls
add
scas
xchg
xchg
xchg
movsb
push
aas
lds
inc
popf
fldl2t
jbe
jno
scas
sub
addl
lods
mov
push
xchg
xchg
out
fldt
out
ret
sub
rolb
popa
inc
and
dec
pop
je
pop
cs
or
stc
sbb
leave
add
pop
js
subb
hlt
outsl
or
sbb
mov
popa
xchg
xchg
stos
daa
test
repz
inc
lret
xchg
adc
imul
andb
addb
add
cs
push
jo
addl
movsb
icebp
sbb
inc
pop
cmpl
test
subb
int3
shl
fs
out
pop
jbe
jl
fistps
mov
movsb
mov
cmpsl
hlt
dec
cmpsb
or
mull
cs
pushf
inc
xchg
adc
inc
adc
add
popa
pop
push
iret
and
dec
inc
jge
aaa
jl
dec
xor
fisubs
dec
xor
sub
aaa
dec
mov
test
fisubrl
movsb
pop
push
ss
mov
pop
addr16
dec
pop
adc
repnz
dec
incl
mov
mov
int
add
icebp
pop
lods
sub
mov
in
fstl
das
sub
mov
std
pop
jb
les
mov
sahf
xchg
and
cmpb
xor
pop
mov
movsl
cmp
cmp
es
cmp
push
xchg
cld
and
ret
mov
and
dec
add
push
adc
add
das
dec
pusha
adc
cmpsl
out
mov
rolb
mov
rcl
sub
pop
data16
and
js
xor
dec
push
enter
addr16
repz
pushf
test
mov
arpl
sti
fsubp
sbb
or
push
inc
icebp
add
push
bound
pop
daa
or
mov
outsb
arpl
loop
popa
sbb
cmpsl
subb
je
and
test
jl
popf
sbb
faddl
stos
aam
mov
jge
repnz
imul
inc
and
mov
mov
dec
sub
ja
pop
rorb
popl
das
stos
push
add
dec
loope
test
int
das
cmp
idivl
fidivrl
dec
lock
xchg
adc
ja
fwait
clc
cmp
scas
xor
popf
xor
rorb
mov
sub
add
mov
mov
mov
ja
xor
rorl
insl
lods
push
inc
clc
push
fs
add
outsl
xchg
out
add
jb
ret
sub
cld
xor
push
dec
lds
imul
mov
adc
sub
pop
xchg
add
or
jge
ror
jl
pop
insl
lock
push
push
movsb
xchg
xchg
push
dec
test
jb
popa
mov
add
enter
in
ja
cmp
insb
shr
mov
cmpsb
xor
je
movsl
pop
push
xor
in
js
xchg
dec
push
and
mov
pop
inc
popf
sub
testb
dec
dec
leave
shrb
into
adc
cs
xor
ficoml
daa
adc
jo
dec
xor
jge
dec
orb
adc
xchg
mov
xchg
sbb
jo
lods
gs
add
dec
add
adc
pop
sub
sbb
mov
pop
push
or
jae
mov
add
mov
ljmp
lea
pop
xchg
lret
cmp
xor
add
jo
add
or
popa
sarl
neg
pop
int
sub
mov
not
adc
lahf
movsl
jle
int3
int3
leave
dec
pop
mov
dec
loopne
inc
out
pop
mov
inc
aad
push
jmp
out
xchg
jmp
sti
popa
sub
fisttpll
arpl
or
das
popf
fnstcw
mov
push
inc
das
fdivs
testl
mov
sbb
popf
loope
dec
dec
in
pusha
ljmp
mov
movsb
push
out
movsb
xorb
daa
aas
fistl
mov
sahf
xchg
fdivl
pop
dec
pusha
add
dec
sbb
daa
paddsw
or
test
lods
loopne
fstpl
pop
xchg
js
into
pop
cld
sti
pop
inc
repnz
aas
ret
and
cli
jo
cmpsb
loope
cld
jmp
mov
ror
sub
movsl
std
into
notb
enter
jmp
repz
nop
lods
enter
mov
mov
push
gs
and
add
pop
nop
mov
cmp
test
das
pop
push
push
fbld
imul
or
add
scas
add
mov
add
mov
sub
sahf
push
loop
jns
leave
push
ljmp
pop
mov
mov
gs
cld
add
iret
lods
xchg
mov
repnz
test
test
movsb
lcall
in
jbe
sub
xchg
shrl
xchg
mov
pop
iret
push
xchg
ret
hlt
add
pop
mov
js
int
and
mov
mov
sbb
jnp
add
into
sub
mov
xchg
movsl
jbe
pop
cmpsl
addb
iret
adc
xchg
sti
fidivs
or
xchg
jo
cmp
lods
fdivrs
into
dec
mov
pop
movsb
and
std
push
jle
xor
pop
nop
cmp
jo
divb
or
fs
out
rolb
cmp
jmpw
mov
in
and
pop
add
sbb
add
jno
les
ljmp
shrl
iret
mov
pop
pop
push
or
adc
clc
pop
add
adc
add
pop
jecxz
ja
sti
adc
pop
mov
flds
ret
mov
mov
xor
add
pop
dec
and
jle
add
bnd
sahf
clc
outsl
and
dec
lret
icebp
cmp
test
stos
lods
and
lcall
sub
test
call
dec
test
stc
push
mov
fcos
jge
mov
jno
or
push
mov
test
mov
das
scas
ficomps
fwait
aad
shrl
shl
cmpsl
and
pop
push
push
nop
icebp
inc
shlb
data16
mov
js
adc
int3
inc
add
test
mov
xor
scas
jo
ficompl
les
xchg
or
adc
add
in
add
cmp
divl
cltd
das
add
cmp
mov
cld
xchg
cs
sub
or
dec
and
or
xchg
lahf
mov
enter
sahf
stos
jg
add
jns
aaa
aas
or
imul
sbb
xchg
clc
in
inc
sti
rcll
divl
push
jmp
pop
in
pop
adcb
inc
push
add
jb
pop
xchg
cltd
xor
adc
or
lds
mov
hlt
mov
mov
cmp
mov
daa
xor
inc
mov
mov
push
das
lds
mov
addb
fldpi
mov
mov
jb
and
mov
mov
popa
int3
sahf
push
push
rcrb
jb
pop
std
jns
cmpsl
pop
movsb
push
js
pop
stos
rcrb
push
adc
jecxz
shlb
insl
dec
sarl
in
inc
rolb
lods
pop
cld
xchg
aaa
aaa
add
decl
mov
popf
xor
sbbl
xchg
fdivs
sarb
faddl
xchg
iret
dec
sbb
lcall
pop
ja
imul
subl
inc
outsb
shrl
outsl
mov
fisubrl
inc
jge
mov
xchg
roll
stos
aas
inc
add
xlat
lret
das
sub
js
iret
adc
cmp
xor
mov
ss
cld
stos
aam
cs
mov
xchg
push
xorb
jne
and
enter
test
aas
sbb
dec
adc
sub
mov
mov
xchg
fimuls
dec
lea
pusha
sub
and
in
xchg
sti
js
xchg
mov
add
mov
push
test
mov
push
add
out
jg
sti
mov
xor
or
cmp
negb
test
sar
bound
int
push
lods
stos
pop
out
mov
jmp
jp
push
jnp
and
std
mov
or
nop
mov
inc
int3
cmp
test
cmc
aaa
aas
movsl
hlt
lahf
sbbl
mov
dec
xor
add
daa
imul
test
or
sbb
fwait
jg
cwtl
inc
or
sbb
popf
ja
sahf
into
sbb
xchg
xchg
or
aaa
lcall
test
pop
mov
push
pop
mov
cwtl
out
inc
fiaddl
loope
sub
pop
popf
stc
fldl
fisttpl
xchg
dec
and
es
add
nop
sub
in
pop
jecxz
repz
rcrl
sub
pusha
movsl
scas
fbld
add
nop
ljmp
adc
sbb
jl
and
inc
pop
add
test
mov
xor
or
rcrb
sbbb
pop
push
inc
jmp
out
dec
mov
push
mov
ljmp
and
ficompl
dec
xor
rorl
sbb
out
ss
jmp
and
scas
outsl
bound
xchg
or
push
jns
or
sbb
dec
mov
xchg
mov
cmpsb
test
push
dec
mov
lea
or
and
cs
mov
xor
or
out
and
in
int3
in
add
shrl
aas
inc
inc
mov
xchg
add
data16
xor
test
xchg
cli
std
add
mov
outsb
inc
rolb
adc
bts
and
lahf
pop
fs
jns
cmpsb
add
push
ljmp
mov
mov
cmc
sbb
cmpsl
dec
cmp
jg
push
pop
fstpl
mov
push
pop
insb
rcll
aam
jno
insb
icebp
divb
push
push
lods
dec
aas
mov
int3
mov
adc
cmc
add
push
out
out
data16
dec
add
or
add
daa
pause
repz
sub
and
mov
pusha
mov
sub
adcl
inc
jmp
push
out
pop
dec
out
mov
xchg
addb
jmp
movsl
mov
mov
jge
mov
repz
add
xor
mov
call
shrb
bound
sbb
stc
lock
and
out
xchg
pop
mov
repnz
mov
push
lahf
mov
outsb
and
daa
mov
dec
mov
dec
adc
mov
fnstsw
xchg
call
stc
pop
call
popa
sub
jmp
imul
pop
and
int3
add
fdivrl
mov
push
push
add
dec
inc
xor
mov
adc
loopne
cmp
xchg
lock
fwait
jmp
mov
cmp
mov
scas
stos
faddl
xchg
mov
jo
data16
aad
sbb
inc
add
ljmp
popf
jno
sbb
repz
daa
outsb
loop
mov
test
inc
mov
or
popa
jmp
dec
or
cmpsb
lock
jbe
test
mov
std
cmp
cltd
mov
pushf
add
cltd
mov
sub
outsl
ja
out
push
shld
movsb
mov
push
out
add
icebp
das
sbb
xchg
jl
mov
sub
fcomps
xchg
js
jge
mov
dec
push
and
movsl
pop
test
ret
test
dec
xchg
cld
clc
mov
fsubrs
repnz
add
or
test
adc
pop
or
pop
aam
push
add
add
or
out
das
fcoml
hlt
mov
repnz
mov
pop
mov
mov
mov
inc
adc
lret
lds
mov
adc
cmpsb
mov
mov
cmpb
xor
adc
add
insb
std
mov
daa
mov
inc
or
mov
push
jbe
push
pop
enter
jl
imul
and
sbb
adc
mov
xchg
outsl
sti
pusha
jp
lea
add
mov
int
sti
aam
out
cmpsl
test
lods
lahf
or
inc
and
jmp
sbb
or
pop
shrl
mov
outsb
testl
adc
in
ds
scas
jnp
cmp
add
ss
in
mov
pusha
mov
push
lret
cli
lods
mov
insb
aam
pop
mov
mov
cwtl
stc
dec
inc
cmp
into
add
testb
mov
les
mov
sub
popf
adc
fcmovbe
test
sbb
add
out
adc
or
popf
sbb
rcll
xchg
jge
ret
mov
xchg
test
sbb
cmp
inc
mov
push
dec
jbe
fs
add
jae
and
mov
outsl
lods
sbb
add
sbb
adc
jecxz
and
mov
xor
movsb
pop
lahf
pop
jmp
jg
repz
fildl
in
int3
pop
mov
loopne
sub
mov
sub
ret
or
test
push
dec
daa
icebp
mov
pop
and
mov
popa
xchg
jg
push
fcmovne
fistpl
add
mov
lcall
out
sub
dec
andb
mov
jns
imul
inc
dec
xorb
dec
add
or
sub
push
push
add
sbb
scas
adc
lretw
ret
jge
xchg
gs
adc
add
sti
mov
test
adc
stos
cmpsb
sbb
lods
inc
xor
jg
imul
or
bnd
xlat
incb
and
out
add
dec
xchg
mov
xor
add
imul
test
adc
lds
icebp
lods
jp
xchg
xchg
jle
add
lock
movsl
pop
cli
rcll
lea
enter
dec
jmp
sti
cmp
sub
imulb
enter
out
fsubrl
lods
outsb
cmc
and
mov
in
dec
loope
mov
pop
icebp
xchg
sub
repnz
adc
aas
mov
enter
jo
xchg
adc
insl
jo
ss
bound
mov
push
add
xor
push
xchg
pop
lahf
andnps
or
or
gs
mov
gs
jecxz
xchg
adc
cmp
mov
minps
popa
sbb
cmpsl
mov
shll
mov
cmpb
add
mov
inc
xorb
mov
push
int3
dec
push
lahf
jo
das
loope
push
dec
jo
cld
jecxz
int
fsubs
push
jae
add
xor
popf
cmc
sbb
inc
les
or
or
push
iret
jo
sbb
add
dec
test
or
sub
mov
adc
aam
sub
mov
pushf
mov
ljmp
subb
and
add
pop
int
sub
cli
iret
pop
xchg
lcall
aad
xor
adc
push
repnz
mov
mov
lds
fsubs
sti
loop
jbe
mov
mov
loope
insl
push
shll
in
cmp
dec
push
lret
lds
cmpsb
add
adc
mov
ficoms
roll
inc
fbstp
repnz
pop
xchg
jmp
enter
cmpsb
mov
dec
add
and
cs
cmpsb
mov
mov
mov
push
inc
pop
push
int
sub
xchg
xor
cs
xchg
lret
pusha
mov
popa
shrl
or
roll
adc
pop
cmp
orl
js
mov
andl
push
dec
dec
in
mov
xor
jle
arpl
mov
cmp
inc
fstpl
subb
add
jl
das
sti
nop
hlt
pusha
ret
jno
add
push
xchg
repz
or
jno
stc
in
xchg
or
les
hlt
scas
cwtl
pusha
push
ret
sub
mull
popf
je
mov
sahf
shlb
sbb
out
cmp
and
sub
cmpsl
jl
dec
sbb
test
cmpsl
rorl
rcr
lea
mov
aam
stc
push
add
add
stc
sub
and
outsl
mov
fdiv
xchg
mov
cmp
leave
mov
les
xor
cmc
pop
xor
or
mov
arpl
adc
pop
movsl
shl
lea
mov
pop
mov
add
in
dec
push
mov
mov
cmp
or
gs
jbe
mov
aaa
jmp
jmp
cmp
push
scas
je
mov
loope
jle
xor
push
jb
in
imul
add
test
sbb
popa
cmp
es
cmp
sbb
adc
jmp
int3
mov
mov
jl
daa
pop
add
adc
pop
add
push
inc
out
arpl
xchg
inc
inc
or
xor
enter
sbb
and
lods
popa
or
or
inc
jo
ficoms
les
mov
stc
lret
sub
cmp
imul
or
lods
sub
sbb
xchg
mov
inc
iretw
mov
dec
divb
insl
and
sub
pop
mov
pop
pop
mov
xchg
or
pushf
cli
jbe
ret
dec
fucomi
and
loop
mov
dec
add
pop
int3
rclb
mov
xor
xor
mov
jl
faddl
add
and
int
fimull
pop
xchg
sbb
mov
pop
add
lea
or
sbb
in
jecxz
ja
pop
fisubrs
add
mov
cld
mov
rclb
dec
mov
loope
sub
rcrl
jae
in
sub
mov
add
xor
test
ret
or
out
hlt
loopne
int
movntps
mov
enter
mov
enter
in
call
je
push
inc
mov
movsl
push
add
aam
mov
dec
cld
testl
mov
xor
stos
inc
adc
mov
dec
xor
xchg
jo
sbbl
jge
loope
stos
fcoml
pop
pusha
into
and
and
xchg
dec
pop
or
iret
fimull
out
and
addr16
pop
mov
sub
mov
push
pop
sub
cmpsl
pop
push
mov
or
sub
test
ja
sub
leave
push
repnz
xor
lock
or
sub
add
adc
pop
dec
mov
add
xor
or
pusha
xor
cmp
and
jne
imul
sbb
fldt
cmc
je
dec
xchg
xor
test
jns
xchg
dec
add
sbb
cmp
jne
mov
and
push
push
add
in
sub
shlb
mov
imul
aas
jb
push
pop
mov
lods
adc
mov
mov
xor
outsb
rclb
loopne
mov
imul
nop
cli
sub
clc
mov
fcoml
daa
pop
nop
add
xor
push
pop
std
jle
lock
into
and
push
mov
jmp
xchg
mov
adc
lock
rol
pop
push
dec
push
into
andb
xchg
ja
and
xor
outsb
out
loopne
sti
inc
jnp
fiadds
inc
xor
sbb
inc
and
or
push
push
cmp
pop
add
lods
cmp
xchg
jmp
shll
cltd
or
lds
aas
das
push
int
shlb
xor
cltd
nop
hlt
pop
pusha
lock
jb
insl
pop
cld
test
pop
out
sbb
jb
test
push
in
test
sahf
adc
add
sub
inc
jp
data16
lods
mov
xor
add
adc
fisttps
and
sarl
test
mov
pop
and
or
jg
les
or
movsl
mov
jmp
xlat
xchg
sbb
jmp
mov
sub
cmc
xchg
xor
je
lcall
jns
mov
cwtl
adc
les
push
jmp
push
xchg
xor
jb
imul
aaa
test
add
or
into
push
ret
mov
fldt
fildl
scas
mov
jno
add
push
test
jne
scas
jo
xchg
push
sub
test
ljmp
or
jo
mov
sbb
jno
mov
jge
sub
mov
mov
test
call
int3
add
lock
push
stc
addb
push
fildll
mov
ds
add
add
sarl
mov
lea
scas
or
mov
mov
ljmp
push
push
data16
xlat
mov
push
and
fbld
jle
xchg
dec
insb
dec
stos
popf
cmp
lea
in
sub
push
and
lds
mov
xor
jb
and
lcall
mov
ficomps
mov
jg
mov
pop
xchg
fildll
sbb
push
push
mov
adc
fucomip
cmp
add
fildl
mov
pop
mov
mov
or
out
movsl
pop
xchg
xchg
cld
inc
out
push
pop
jns
nopl
and
ret
adc
mov
daa
mov
call
xor
mov
pop
roll
addl
inc
popa
push
dec
inc
adc
repnz
mov
add
jns
cmp
cmp
push
mov
insb
shr
and
add
test
push
jne
dec
scas
add
mov
adc
test
inc
les
and
les
or
sub
cmpsl
fimuls
dec
sub
fdivl
clc
xchg
xchg
int3
dec
jne
sub
fcom
add
repz
xchg
jne
xchg
or
ret
mov
fiadds
push
movsl
jae
scas
xor
loope
sarl
push
jmp
cmp
sub
sub
iret
jnp
mov
loopne
add
dec
sahf
faddl
push
decl
mov
mov
xor
mov
pop
xor
loope
pusha
jg
das
mov
sbb
insl
mov
xor
in
jne
ret
push
sub
test
adc
jns
repz
fadds
cmpsl
pop
mov
in
inc
sub
mov
shll
push
dec
adc
jmp
sbb
xor
push
insl
das
subb
jns
repz
lds
push
sub
pop
dec
out
mov
jecxz
inc
push
lahf
push
cwtl
rcll
lock
in
xchg
inc
hlt
add
aad
aas
aam
ja
add
add
dec
sti
lea
mov
pop
hlt
and
pop
cmp
cld
nop
aaa
jo
dec
inc
pop
jp
xor
jbe
mov
fists
test
or
rclb
popf
imul
push
popa
xor
adc
shlb
add
or
sub
inc
jne
repz
jno
imul
sti
fidivl
xor
popf
and
and
cwtl
test
cmp
lret
push
adc
pop
ljmp
cld
dec
enter
sub
enter
jo
scas
and
pop
ret
insl
push
arpl
add
dec
push
sarb
mov
loope
ret
xlat
cmc
loopne
ss
add
mov
movl
addl
pop
push
addb
mov
cmp
push
je
popa
pop
addb
dec
push
repz
sbb
mov
add
imul
xor
es
mov
add
mov
ja
dec
movsl
dec
jl
inc
ss
subb
cmp
dec
pop
leave
dec
stc
pop
rclb
icebp
aas
fdiv
scas
pop
cmp
ret
inc
mov
jnp
pop
cli
xor
aaa
jle
lods
loop
inc
add
mov
push
xchg
sbb
lret
pusha
mov
cmp
subb
out
xchg
mov
enter
add
arpl
mov
and
cmp
nop
inc
popf
dec
shr
loope
jge
shl
sbb
lcall
faddl
lds
push
sbb
sub
push
xor
pop
ss
push
ss
ja
lods
fisubs
xor
sti
ja
mov
xchg
mov
pop
fwait
lods
cmp
fidivrs
add
mov
rorl
cld
jmp
sub
add
dec
add
bt
pop
dec
inc
jno
das
mov
jmp
dec
jmp
test
adc
fstl
push
inc
nop
inc
adc
push
ljmp
pop
cli
je
mov
bound
cld
xorb
sbb
stos
out
loopne
test
add
adc
mov
cmp
add
mov
popf
fldcw
sub
leave
data16
shlb
jge
cmp
nop
out
test
pop
push
push
add
xor
in
add
test
push
adc
add
mov
aaa
xchg
ficomps
popa
call
es
mov
add
inc
mov
mov
scas
xor
insl
mov
and
push
test
addb
and
xchg
fdivrp
pop
mov
sub
or
popf
dec
sub
jns
test
sbb
jae
adc
call
push
stc
rcl
pop
xor
arpl
pop
mov
ret
mov
jl
dec
push
mov
xor
lahf
cmp
or
mov
insb
lock
push
dec
cmpsl
hlt
das
movsl
ja
shrb
insb
push
pop
test
faddl
outsl
sub
sahf
shlb
xor
xchg
das
jle
cmpsb
cmp
or
mov
cmpsb
and
cmc
push
mov
inc
push
jp
push
fwait
loope
push
scas
xchg
jnp
sbbb
leave
push
popa
mov
adc
icebp
mov
call
cld
in
push
sbb
jb
and
cmp
mov
jo
fsubrs
dec
sub
lahf
lret
adc
ss
loop
adc
dec
imul
clc
adc
jp
add
jg
bound
mov
int3
adc
mov
or
lcall
mov
xor
add
xchg
sahf
ret
mov
and
xchg
in
add
cmp
add
and
mov
dec
adc
add
and
adc
lock
pop
pop
clc
mov
adcb
adc
out
sub
mov
testl
sub
push
cld
sbb
mov
add
push
sub
fcoms
mov
pop
pop
imul
and
mov
or
or
shll
push
add
or
mov
sub
addr16
fcoml
or
sub
sahf
add
adc
pop
fildl
sub
roll
scas
daa
mov
and
out
adc
sub
and
in
dec
and
xchg
sar
xchg
xlat
add
push
cmpsb
fs
aam
push
mov
icebp
push
pop
leave
js
test
mov
or
add
sahf
or
sbb
mov
mov
call
outsl
cmc
imul
rorl
adc
scas
jnp
add
popf
sub
mov
jo
out
add
xchg
dec
mov
cmpb
inc
add
sbb
mov
in
fsubrl
mov
xor
pop
pop
aaa
jmp
lock
xlat
mov
jno
and
das
outsl
add
pop
jmp
pop
repnz
sbb
inc
jbe
fisubs
adc
stos
add
rcrl
adc
cli
outsb
aad
mov
ljmp
push
jnp
jle
imul
sub
sahf
mov
outsl
add
rorb
popa
and
add
sub
leave
outsb
sub
test
jp
xchg
das
push
or
divl
mov
mov
loop
sbb
mov
xor
aaa
out
loop
leave
mov
sbb
dec
filds
pop
les
push
add
adc
cmp
jo
popf
mov
or
jno
jmp
mov
mov
ljmp
adc
add
jl
xchg
dec
xchg
leave
cmc
das
add
enter
jb
and
mov
push
inc
xchg
cs
repz
cs
adc
cmpsb
or
enter
add
js
popf
ljmp
xchg
sahf
sarb
es
push
xchg
stos
xchg
pop
mov
pop
cs
out
add
fs
xor
jb
mov
sub
mov
mov
jns
out
int
jne
stos
cli
dec
push
pushf
in
or
mov
pop
fimuls
xor
icebp
cwtl
or
mov
in
adc
add
faddl
subl
imul
jo
lret
aaa
dec
sbb
imul
sbb
jl
cmp
lods
repnz
mov
xlat
daa
xchg
add
and
inc
cmpb
and
add
cld
or
sub
inc
and
push
sbb
outsl
sahf
rolb
es
lret
or
sub
mov
roll
adc
xchg
arpl
xor
add
and
sti
add
mov
repnz
icebp
xchg
in
fadd
rolb
popf
loop
pop
push
dec
add
cmp
sarl
mov
das
push
jmp
jns
or
iret
sbb
sub
jbe
adc
and
vmovsd
adc
cld
or
pop
or
add
xchg
mov
add
pusha
add
push
cwtl
jnp
and
dec
mov
mov
or
bound
cmp
cwtl
ss
jns
jl
jo
add
jnp
shlb
or
cmpsb
jecxz
mov
add
pop
pushf
test
gs
mov
mov
in
cmp
push
push
lock
dec
mov
xor
mov
pusha
in
fimuls
mov
cs
mov
or
sub
fcompl
mov
dec
dec
adc
add
dec
out
cwtl
xchg
dec
pop
add
jo
add
test
sub
iret
pop
imul
das
mov
push
pop
pop
loopne
mulb
or
mov
adc
mov
addb
cmp
popa
loop
fadds
mov
jnp
and
mov
loop
aas
cmp
clc
add
das
sub
inc
leave
stos
mov
jae
sub
adc
mov
cmp
push
cmp
push
adc
cmc
es
fisubrs
mov
enter
ds
sbb
orl
andb
bound
add
xchg
jmp
or
add
and
sub
or
mov
mov
hlt
repnz
inc
fucomip
fwait
test
loopew
jle
pop
aas
dec
adc
cmp
scas
cltd
xchg
sub
nop
xchg
mov
cli
mov
cwtl
loopne
sub
pushf
and
mov
or
pop
mov
call
jmp
addr16
out
scas
fiaddl
shlb
sarl
sub
je
sub
mov
xor
or
cvtpi2ps
sbb
iret
add
sbbl
adc
mov
push
cmp
jns
sbb
push
cmp
jle
loopne
inc
pop
fwait
lods
subl
cld
call
and
pop
pop
out
mov
xor
popf
inc
mov
or
jmp
into
jg
sti
push
jl
mov
pop
sbb
aam
pop
mov
dec
mov
jle
repz
and
sub
xchg
pusha
scas
add
popa
call
enter
fwait
add
xchg
popf
fistpl
sbb
mov
mov
sahf
cs
sbb
pop
clc
fiadds
cmc
mov
fsubrs
push
jge
push
cld
scas
out
mov
sub
mov
fisubs
xchg
xchg
mov
mov
add
dec
jge
ss
cld
add
add
scas
cmpsl
mov
or
dec
push
add
pop
sbb
lret
stc
js
cs
sarb
pop
add
mov
out
pop
addr16
mov
lock
push
fwait
dec
lea
fldcw
pop
adc
shll
inc
pop
jbe
pusha
fcomps
in
inc
les
and
sbb
pop
imul
pusha
push
mov
aas
in
push
mov
sub
je
add
mov
adc
or
cltd
sarb
loope
sub
imul
add
mov
stos
fwait
mov
jecxz
add
and
mov
fdivl
repnz
aam
add
xor
and
pop
lcall
popf
repz
push
into
testl
jge
cmp
lds
inc
popf
sbb
cmp
scas
add
mov
cs
mov
mov
call
push
daa
xchg
shll
js
jae
push
stos
or
lea
sub
cli
sbb
aam
addl
fnstenv
decb
cmpsl
ret
jo
pop
xor
dec
xchg
sti
jne
and
test
pop
add
les
jle
lret
int
mov
lret
mov
adc
inc
in
inc
mov
data16
mov
jl
inc
pusha
pop
xchg
adc
stos
and
mov
cmp
mov
movsb
adc
dec
imul
int
loopne
sub
xor
stos
mov
daa
call
jne
sbb
in
lods
xchg
jno
ret
lds
aam
popa
test
fs
fwait
stos
adc
call
sbb
inc
add
add
pop
rorb
adc
shlb
jecxz
jmp
movsl
mov
jnp
mov
cmc
cmp
fmull
xchg
dec
mov
mov
cmp
dec
dec
add
adc
das
inc
mov
sub
imul
push
cmpb
and
mov
adc
adc
pusha
test
pop
gs
not
dec
mov
sbb
int3
loop
dec
inc
faddl
push
cmp
add
cmpl
mov
repz
fsts
enter
add
cmp
pusha
mov
lods
adc
inc
and
insb
clc
pop
sbb
xor
shll
insl
adc
in
xor
insl
or
push
mov
add
subl
ret
add
lds
int3
imul
and
addb
shlb
add
les
cmp
clc
rclb
and
jmp
mov
add
or
cmpsb
add
leave
cltd
mov
sbb
push
jno
addl
jl
add
call
push
sub
sbb
mov
test
cmp
adc
inc
add
cltd
sbb
inc
inc
xor
jno
sbbb
and
stc
fisubrl
inc
or
ss
repz
jo
pop
out
push
inc
xor
or
add
daa
push
dec
push
cli
and
ja
xchg
mov
mov
sbb
clc
or
pop
es
and
sub
pop
mov
mov
cmp
addr16
add
shlb
push
or
cmpl
jns
and
add
or
sbb
add
mov
rcrb
add
push
push
push
mov
cwtl
jne
lsl
add
mov
sbb
mov
or
orb
jmp
inc
fldenv
or
inc
cmpb
orb
inc
or
test
sub
mov
int
or
or
mov
cmpl
xor
imul
inc
test
std
inc
lods
arpl
mov
cltd
leave
push
cltd
mov
and
adc
shr
test
add
adc
sub
ret
and
and
loope
add
add
jmp
dec
ret
rcll
add
or
jns
movsb
pop
jns
sbb
sarl
and
es
gs
xchg
add
jb
pop
mov
dec
push
inc
or
push
test
fwait
testl
or
sub
adc
or
jo
in
sub
mov
jmp
mov
cwtl
fisttps
push
mov
mov
leave
adc
add
jne
or
insb
sub
push
sub
adc
or
sbb
push
and
mov
push
jne
sahf
data16
adc
mov
mov
xor
pusha
in
jbe
and
cmp
sti
mov
jg
xchg
adc
sbb
push
ret
nop
pop
add
mov
mov
test
in
jo
loopne
pop
popf
sbbb
daa
dec
sbb
pop
stc
lcall
push
dec
add
jae
sbbl
sbb
xchg
adc
and
pop
mov
test
pop
pop
cld
ret
leave
ret
add
dec
and
or
jge
adc
es
das
out
lock
aas
movq
pop
xor
and
loope
popf
pop
insl
rclb
in
sub
and
and
lea
imul
sahf
sbb
into
and
das
int3
adcl
xchg
ret
out
das
int
push
daa
dec
in
pop
mov
iret
inc
popa
fiadds
sub
outsl
adc
mov
mov
xor
rorb
hlt
daa
test
inc
push
test
in
outsb
cmp
loope
dec
int
lods
jns
shlb
add
sbb
test
out
dec
std
add
cli
inc
cmp
mov
icebp
and
or
das
cmc
ja
sbb
inc
roll
mov
pop
mov
add
lret
and
mov
jns
add
mov
fstl
add
scas
mov
add
sub
lret
add
jae
inc
loopne
cld
add
jg
icebp
push
mov
lcall
out
or
dec
push
mov
clc
or
and
push
out
add
int3
sbbl
mov
frstor
sbb
or
adc
adc
mov
mov
add
push
inc
sbb
xor
cli
arpl
mov
pushf
daa
and
lods
push
mov
or
and
add
xchg
xchg
aam
mov
ret
test
or
pusha
mov
and
lds
jp
out
fsubs
xor
cwtl
or
and
int
ja
cld
xchg
in
xor
mov
push
push
cmp
aas
in
outsl
cld
ljmp
lds
data16
inc
aas
and
pop
xor
xor
add
jne
test
add
jmp
test
adc
cmp
mov
add
fisubrs
sbb
out
mov
inc
dec
das
mov
add
pop
fiadds
stos
fisttpll
adc
mov
inc
pop
nop
adc
test
in
fsubr
push
in
push
out
stos
pop
sbb
cmp
inc
add
pop
sar
rcrb
mov
cltd
add
test
std
scas
sbb
add
adc
sbb
jg
sbbl
pop
jg
pop
jge
sar
out
xchg
mov
out
shlb
jge
lds
push
sbb
mov
cmc
add
pop
test
push
push
pusha
xor
lret
int
or
in
movsb
stos
scas
shl
les
mov
insl
loop
jp
add
fwait
mov
sbb
test
inc
adc
dec
lock
pop
or
jne
test
jle
and
imul
or
adc
push
add
add
fwait
bound
inc
cmc
out
add
pop
loopne
mov
in
outsl
ret
and
nop
mov
frstor
sub
lcall
sbb
imul
jno
orb
inc
jge
cmp
xchg
xor
lock
iret
push
xchg
rsqrtps
rorb
mov
pushf
mov
leave
add
cmpsl
xor
andl
cmp
sbb
aam
jle
mov
pop
movsb
cwtl
clc
xchg
ret
jns
and
sbb
add
inc
cmp
arpl
addr16
popa
clc
add
and
pop
add
sbb
test
cs
add
xorl
call
push
lcall
fxch
xor
dec
cmp
xchg
mov
cmpsb
jmp
jne
repz
or
and
lret
sub
mov
lods
add
or
xor
bound
push
iret
jb
cmp
sbbl
clc
fnstenv
or
sub
xor
xchg
mov
cmc
mov
lock
push
fiaddl
lods
push
mov
dec
aam
cmp
xlat
lock
orps
push
in
scas
or
shlb
fcomip
cwtl
push
lar
fsub
add
or
mov
and
popa
stc
jo
xchg
cmp
inc
ja
mov
rcll
pop
sarb
fbstp
adc
mov
adc
movsl
cmpb
xor
dec
sbb
mov
pmaxsw
xchg
pop
dec
movl
and
shlb
xor
sbb
add
mov
flds
jg
cld
cmp
mov
insb
cmp
movsl
add
mov
pushf
nop
sbb
sub
addr16
movsb
les
nop
hlt
add
sub
xchg
mov
xor
cmp
adc
add
cltd
xor
add
scas
dec
pop
lret
cmp
test
addb
into
pushf
mov
push
dec
push
jnp
sub
test
adc
xlat
jl
call
push
inc
jp
mov
je
mov
or
dec
fsubp
mov
jl
add
aas
sbb
add
lods
roll
add
lret
dec
or
ljmp
sub
add
aad
push
cmp
push
sub
jb
bound
add
and
dec
push
add
repnz
cwtl
xchg
xchg
and
push
add
xor
push
add
or
xchg
fimuls
jecxz
add
test
leave
or
adc
pop
fisubrs
jnp
mov
repnz
js
push
sbb
adc
mov
xor
jne
push
cmp
test
idivb
dec
aad
jle
sbb
enter
adcb
or
mov
ss
add
push
inc
cld
mov
mov
aad
lret
jns
mov
repz
ret
jbe
push
jae
cmp
add
cmp
scas
xorl
loopne
mov
add
stos
add
and
mov
inc
adc
dec
or
cld
or
mov
cmp
sub
add
mov
cld
mov
add
leave
lock
add
dec
movsl
in
add
mov
push
sub
add
inc
add
outsb
loope
sbb
fs
pusha
add
mov
dec
ss
inc
adc
lcall
mov
adc
jo
add
leave
jmp
add
xor
sbb
test
lock
xchg
mov
insl
or
push
stc
les
fisttpll
pusha
rcrb
test
inc
mov
mov
stc
decb
dec
je
fdivl
mov
pop
xor
mov
jns
mov
sarl
add
test
push
scas
cli
mov
cmp
adc
addb
mul
mov
int3
jae
fsubr
call
scas
xchg
sbb
insl
sbb
push
call
sbb
mov
dec
in
pop
xor
insb
outsl
lcall
aam
scas
es
pop
cmp
sbb
adcb
xor
imul
loope
sbb
add
add
out
cli
jns
pop
mov
imul
pop
jle
mov
sbb
int
outsl
add
cltd
iret
add
add
sub
sarb
lea
sti
jb
cmp
inc
sbb
rorb
loopne
shlb
scas
jecxz
movsl
mov
dec
out
add
push
repnz
cmp
scas
add
aam
movsl
sbb
xchg
add
xor
jne
lock
loopne
mov
sbb
shrl
xchg
sbb
rol
je
add
mov
or
xchg
adc
jb
int
pop
addl
rclb
add
inc
sbb
mov
call
andb
adc
cwtl
fcoml
pushf
imul
push
cmp
inc
add
ret
add
rcll
cld
cmpsb
dec
fdivs
dec
jnp
add
mov
inc
xor
int3
adc
sub
add
loope
mov
and
es
xchg
int
cmpsl
popf
test
pop
mov
orb
add
pop
mov
aaa
xor
bnd
dec
dec
faddl
negl
mov
insb
fucom
push
mov
pop
adc
test
and
mov
mov
cmp
in
lock
add
cmpsl
hlt
and
add
jb
mul
scas
add
pop
adc
stc
jnp
ret
xchg
push
push
add
pop
xor
xorl
push
clc
mov
cmp
rcll
testl
lcall
mov
or
fldl
adc
dec
stos
hlt
les
mov
inc
loopne
xchg
lods
mov
sub
dec
mov
insl
adc
fcomps
push
add
dec
sub
cmc
add
repz
or
insl
test
sub
push
fidivs
insb
push
outsl
mov
pop
push
or
addr16
leave
mov
stos
movsl
and
xor
mov
mov
xchg
movb
dec
aad
pop
jmp
pop
add
mul
in
xchg
add
sbb
xor
xchg
pushf
add
and
adc
mov
stos
data16
push
inc
mov
jp
stos
into
int
cwtl
in
sbb
add
cmp
movaps
mov
adc
sub
fcomi
cmp
int3
lods
dec
inc
rolb
stc
mov
outsb
dec
adc
sahf
mov
iret
add
add
mov
mov
adc
xchg
inc
sbb
ja
sbbb
in
scas
cs
es
sbb
lcall
or
scas
shr
pop
push
pop
xlat
aaa
cmp
cltd
xchg
or
leave
clc
adc
cmp
ret
ljmp
add
sbb
pusha
add
shrb
enter
jno
movups
call
sub
adc
xchg
sahf
sbb
std
push
inc
popf
add
push
iret
imul
sbb
jns
add
mov
xchg
push
popl
cwtl
adc
push
in
mov
lret
dec
out
sbb
es
in
sub
xor
stos
cmp
outsl
cwtl
push
in
pop
js
adc
ficoms
add
or
add
pop
imul
push
add
out
bound
or
mov
dec
pop
add
and
jmp
add
aad
xor
xor
adc
fisubl
stc
stos
cwtl
mov
add
mov
push
xlat
add
pop
pushf
rolb
fnsave
add
bound
jne
sbb
mov
dec
test
add
repnz
or
dec
add
fstpl
hlt
cli
sbb
add
lock
xchg
sub
inc
cmp
shlb
mov
jl
xchg
or
int
pop
push
in
or
cmp
xlat
inc
loopne
fisubrl
subb
sbb
and
cmp
mov
aas
sbb
sahf
jns
enter
and
dec
pop
dec
aas
mov
cmp
add
ret
push
loopne
inc
sub
test
dec
mov
pop
jge
mov
shll
add
dec
dec
or
stc
sbb
dec
sub
lods
xchg
jp
push
push
enter
ror
push
scas
cmp
fisubl
sahf
fs
or
lods
insb
cmpsl
add
addb
ljmp
aas
add
mov
stos
popa
or
push
int3
or
shlb
cld
inc
add
dec
fists
pop
fiadds
pushf
fisttpl
xchg
dec
enter
xorb
cmp
adc
sti
or
or
add
xor
popa
mov
imul
sub
add
cltd
inc
js
xor
push
add
ret
stc
loopne,pt
pop
out
lds
bound
jle
add
aaa
sbb
mov
ja
push
js
shrb
dec
sbb
and
dec
add
loope
cmc
sbb
mov
aam
test
xchg
insb
cmpsb
fcomp
push
adc
mov
xchg
daa
or
dec
add
js
lahf
pop
pop
sbb
loop
mov
mov
add
dec
aad
mov
jle
push
dec
shlb
test
ss
sbb
addr16
adc
mov
xor
movb
jmp
popa
sub
or
icebp
inc
dec
rol
addb
or
adc
rcrb
ljmp
sub
push
aas
stc
popa
clc
orl
pop
dec
push
jle
jno
sbb
jb
sbb
xchg
nop
outsl
es
inc
leave
add
adc
dec
in
adc
add
jae
push
jle
mov
cmp
int3
pop
mov
add
push
xor
flds
fwait
cmc
pop
adc
cmpsb
shlb
fbld
jno
dec
jg
add
jo
cmp
xchg
inc
aad
addr16
cmpb
loope
xor
adc
insl
testl
lret
xor
and
add
stos
ljmp
jb
sbb
in
int3
mov
xor
add
test
sub
movups
fistps
dec
adc
outsl
push
cmpsb
jae
shrl
scas
add
addl
daa
shll
adc
pop
int
push
cs
and
test
push
push
xor
js
iret
adc
imul
aaa
and
or
xchg
js
mov
cld
cmp
es
lahf
pop
dec
xchg
je
push
push
sub
jmp
mov
cld
and
cmpsl
inc
cltd
sbb
fadds
jle
push
pop
shlb
roll
sub
loopne
int
aam
sub
iret
sbb
or
mov
dec
cmp
mov
popa
fs
clc
xchg
push
arpl
dec
sub
jns
mov
add
mov
push
mov
add
push
jp
ss
sahf
mov
mov
dec
addl
out
cmc
lret
ja
add
push
sahf
int
push
stos
scas
jecxz
add
and
or
inc
add
out
dec
and
adcb
push
fbld
mov
push
push
stos
test
in
push
add
aad
enter
movsl
sti
cmp
sub
and
loop
jns
sbbl
mov
into
outsl
cld
ja
mov
es
test
fdivr
adc
xor
jo
orb
ds
push
jne
mov
push
test
add
xor
xchg
add
or
push
out
outsl
dec
add
inc
adc
add
cmpsl
fisttpl
sub
lahf
test
icebp
mov
dec
adc
imul
bound
out
sub
inc
sahf
addl
fnstcw
adc
sbb
mov
jp
inc
mov
jmp
enter
dec
jg
add
iret
and
pop
xchg
mov
test
lcall
cmpsb
mov
push
pop
cli
mov
out
sub
and
mov
add
mov
mov
incl
pop
cmpl
iret
rolb
mov
push
int3
mov
adc
cmpsl
mov
add
add
push
and
scas
negl
jmp
test
and
cmp
jge
out
add
dec
push
sub
scas
lods
sbb
push
rorb
and
fisubs
add
cld
addr16
test
icebp
pop
into
jge
mov
inc
fisttpll
push
cld
add
sahf
sti
or
and
pop
and
sbb
je
adc
jmp
push
sub
sub
adc
hlt
sbb
xchg
fcmovne
ljmp
xchg
and
jecxz
push
xchg
roll
mov
cmpb
addr16
lds
sub
test
add
inc
cmpsb
adc
xchg
dec
movsl
push
cltd
lock
xchg
sub
or
out
add
bound
adcb
stc
add
test
jo
add
lds
dec
ljmp
pop
call
nop
or
jl
jmp
das
in
push
dec
mov
cmpsl
ds
pop
add
adc
sbb
sub
xchg
rorb
sub
and
sub
lret
push
push
add
bound
test
xchg
je
mov
sub
add
int
dec
nop
push
inc
push
int3
add
test
movsb
lcall
jmp
popa
adc
lret
shll
in
test
add
jnp
inc
sub
mov
cmpsb
jecxz
icebp
dec
add
push
pushf
rclb
leave
mov
imul
movsl
and
mov
jg
add
fistpll
jge
jns
movsb
inc
push
dec
inc
and
inc
xor
or
in
push
cmp
repnz
cmp
js
clc
pop
or
push
inc
jns
inc
push
js
mov
mov
xchg
xchg
pushf
test
sbb
cld
add
jle
add
inc
decb
movb
or
popf
frstor
outsl
insl
fistpll
cli
fldenv
inc
imul
mov
int3
cwtl
jge
sahf
add
mov
push
cli
sub
pop
xchg
testb
jns
rcr
push
inc
inc
je
cmp
mov
inc
arpl
jle
scas
adc
add
sbb
push
add
sub
inc
push
hlt
pop
adc
xor
jae
dec
jo
push
dec
sbb
mov
dec
jecxz
rcl
loopne
add
push
xor
add
jp
adc
bswap
testl
cmp
add
xchg
dec
push
ret
sbb
add
into
stos
popa
addb
lds
pop
add
addr16
push
jp
and
repnz
xchg
sub
or
cmc
add
jb
sub
movsb
dec
test
xor
inc
int3
out
call
out
mov
loope
ss
les
mov
ja
or
in
dec
and
je
add
rolb
hlt
dec
push
test
pop
insb
rcr
je
jge
fst
add
shl
sbb
mov
mov
add
sahf
cmp
movsl
mov
pminsw
call
and
push
mov
imul
or
lods
pop
int
mov
pop
jnp
lea
hlt
add
jl
pop
ret
shll
leave
add
jne
lcall
call
mov
sub
xor
push
mov
std
inc
adc
clc
dec
xor
adc
lret
bound
addb
mov
in
mov
jl
nop
int3
dec
lock
xor
and
pop
loope
add
mov
pushf
fs
adc
xchg
popl
add
mov
cmp
jmp
lds
fwait
pop
js
dec
clc
sbb
inc
push
adc
je
into
fbld
add
add
push
and
dec
push
jge
sbb
lods
or
enter
cmp
push
test
inc
int
adcb
mov
push
mov
add
out
push
add
aas
bound
pusha
test
das
pushf
add
jl
mov
xor
in
xlat
push
dec
lock
pop
and
dec
add
aaa
clc
mov
lods
shrb
es
cmpsl
inc
pop
enter
add
cmc
xor
mov
xor
cmp
mov
mov
scas
pop
sbb
and
add
cwtl
jo
mov
mov
cmp
fmulp
cs
loope
add
mov
add
movsb
sbb
add
mov
in
add
fadds
push
push
icebp
cmp
xchg
and
adc
pop
ss
add
movsl
jmp
add
hlt
gs
cwtl
pop
subb
adc
add
jmp
add
add
lods
fisttpl
notl
add
inc
mov
xchg
lock
pusha
addl
xchg
add
inc
insb
cmp
in
jecxz
mov
xor
jl
and
cli
or
xchg
lock
cwtl
add
pop
cmc
jg
imulb
add
out
lods
scas
andb
fisubrs
out
lock
icebp
mov
rol
insl
xchg
jae
cmovo
decb
dec
add
aad
pop
push
push
xor
inc
mov
add
sbb
arpl
cmp
mov
adc
add
jae
cmp
xor
fmulp
fmuls
add
notl
xchg
jl
push
add
mov
mov
lods
push
call
addr16
scas
int3
xchg
and
cltd
pop
enter
push
pop
sub
lea
pop
pusha
lret
inc
or
inc
ljmp
stos
mov
mov
pop
push
sti
and
xor
sbb
push
pusha
jbe
add
or
sbb
icebp
or
ret
sbb
mov
out
aaa
add
in
mov
sbb
or
in
adc
andl
push
fdivrs
cmp
rorb
sub
add
mov
adc
push
mov
std
jmp
sub
negb
xchg
fmul
mov
cmpsb
cmpsl
pop
cwtl
mov
pop
test
call
fwait
add
sub
hlt
mov
imul
mov
jmp
popw
cwtl
dec
inc
mov
xchg
jge
sbb
repz
jp
cli
ret
xchg
push
mov
cld
nop
sti
dec
add
cltd
sbb
in
aam
rcpps
lock
cmp
in
addl
loopne
dec
orb
inc
or
pusha
iret
shlb
xorb
ljmp
mov
aam
mov
shlb
add
fdivs
pop
jae
cmpsl
lock
out
pop
inc
inc
add
mov
xor
push
mov
or
adc
clc
or
xor
je
aad
cmc
mov
jg
adc
cli
and
imul
pop
add
arpl
add
push
stc
cmp
btc
sbbb
mov
cmpsl
scas
add
pop
testb
repz
repnz
test
jg
call
sbb
pop
fadds
dec
cmp
loope
mov
inc
push
add
cld
adcl
dec
xchg
out
testl
je
adc
shrb
lock
out
mulb
pop
inc
xchg
mov
test
add
pop
pop
jmp
add
add
fbstp
push
inc
add
jg
push
xchg
mov
nop
sahf
dec
add
dec
sub
add
pop
sub
cli
adc
aam
sub
xorb
lcall
pop
out
aad
xor
add
loopne
dec
es
push
scas
add
mov
gs
mov
dec
mov
mov
sbb
xchg
fs
addl
cmp
enter
xor
es
push
mov
iret
in
adc
xor
or
sbb
sbb
les
add
inc
mov
push
adc
jns
mov
nop
mov
jnp
scas
cwtl
xlat
add
inc
insb
mov
dec
mov
faddl
test
arpl
rolb
in
hlt
sub
shrb
add
jo
cmp
mov
jecxz
jae
xor
sbb
mov
mov
scas
add
pop
lahf
push
iret
add
mov
ret
lods
jmp
cmp
push
idivl
jle
jl
or
push
outsl
andb
add
les
push
push
pop
cmp
add
out
cmp
movsl
push
rorb
gs
xchg
aad
pop
add
cmpsl
jns
jae
push
sbb
fstps
push
out
xchg
pop
addr16
pop
xor
jmp
mov
js
jg
or
fsubrs
mov
mov
fwait
es
add
add
pop
sub
pop
sarb
xchg
pushf
repz
dec
add
ds
and
add
orl
outsb
dec
out
jge
aad
hlt
lods
cmp
add
sahf
inc
push
push
pop
add
dec
ret
mov
int3
lea
nop
xor
out
sbb
push
add
leave
insb
lock
faddl
out
in
inc
push
rcrb
adc
xchg
push
pop
mov
repz
push
add
enter
inc
out
stc
sbb
mov
addr16
idivl
or
mov
iret
jl
cmp
stos
dec
rcrb
rolb
cmp
outsl
roll
sub
test
dec
add
push
lods
xchg
add
or
dec
jo
pop
mov
adc
mov
sub
pop
pop
mov
mov
shrl
cmp
adcb
and
cs
adc
xor
sbb
cmp
add
mov
pop
push
dec
add
cmp
and
or
mov
mov
or
jnp
loopne
adc
add
mov
add
rol
int3
mov
xchg
jne
in
data16
or
pop
inc
push
or
mov
ja
push
test
inc
push
loopne
push
jecxz
push
or
mov
cmp
movsl
pop
jns
in
andb
out
sbb
ljmp
or
iret
sahf
inc
sbb
xchg
test
inc
ljmp
sbb
dec
outsb
or
sbb
add
adc
pop
add
das
push
dec
es
cwtl
jecxz
test
shrb
lahf
outsl
test
stos
ss
filds
js
mov
dec
ds
pop
cmpl
mov
ret
push
add
ja
js
lods
xor
pusha
mov
icebp
add
push
jnp
jmp
out
add
lock
sbbb
adc
pop
shl
lods
outsl
cmpsl
add
out
bound
aam
pop
data16
test
mov
dec
push
test
inc
add
sub
loope
aaa
out
xor
or
or
cmovb
push
ljmp
nop
pusha
adc
faddl
adc
inc
out
add
xchg
sbb
mov
aas
clc
adc
push
sub
test
out
cli
out
shrb
fists
lret
add
ret
add
mov
ja
pop
push
popf
shrb
lock
rclb
add
jns
mov
or
scas
sbb
and
jp
inc
in
mov
lcall
xor
xor
cmpsb
add
inc
jnp
mov
xchg
inc
fs
sub
test
mov
popf
cmp
cld
xlat
ret
add
mov
inc
insb
add
leave
push
xchg
hlt
jmp
arpl
shl
gs
jne
jbe
frstor
shlb
xchg
sub
loope
add
dec
mov
sbb
stos
movnti
pop
imul
xchg
pop
aam
adc
inc
xchg
jle
icebp
mov
mov
mov
xchg
cwtl
lret
ds
add
popf
add
adc
or
std
adc
pop
cmp
fsubs
xorb
mov
cwtl
dec
addl
sbbb
xor
loopne
push
mov
sarl
cltd
add
nop
stc
sbb
mov
add
movsl
lods
mov
add
mov
mov
out
sub
and
popa
dec
stc
fisttpl
icebp
cmpsl
inc
jl
mov
in
sub
enter
mov
sbb
sub
ja
push
mov
pop
sbb
lea
add
addb
jbe
aaa
fstpl
and
sub
mov
push
mov
cmc
add
fisubrl
inc
addb
fsubrp
jge
aam
fwait
sbb
mov
pop
test
str
movsb
mov
mov
lods
inc
add
adc
add
or
movsl
add
stc
lds
add
add
mov
movl
jecxz
xchg
jle
push
adc
int3
mov
sarb
add
and
pop
add
cmp
adc
add
icebp
or
dec
test
add
addr16
nop
pusha
les
jge
movsb
add
es
rolb
mov
push
xor
nop
or
mov
mov
inc
xchg
add
and
xchg
jbe
jp
add
push
loop
aaa
push
add
pusha
sub
mov
mov
in
fistpll
jmp
lahf
test
mov
xor
push
pusha
pop
push
in
xor
inc
or
add
dec
jb
mov
add
mov
jge
into
mov
or
xor
mov
js
roll
pop
rcr
je
movsl
in
add
sbb
jno
mov
imul
mov
out
lea
les
pop
or
sbb
pop
push
push
and
enter
push
add
cmp
jp
pop
sbb
xchg
push
inc
in
jge
or
movb
add
xchg
fcom
sub
imul
out
add
test
loope
lcall
adc
popf
add
and
jns
jnp
andl
orl
sbb
jne
in
xor
shl
xor
mov
arpl
jno
cmp
xlat
gs
xchg
sbb
decb
orb
leave
mov
add
push
add
pop
sbbb
rclb
mov
sub
or
mov
pushf
dec
mov
fldl
mov
xor
pop
into
dec
add
scas
dec
imul
loope
in
or
mov
icebp
sbb
or
mov
dec
hlt
push
ljmp
push
into
add
mov
inc
fcoml
add
add
pop
movsb
xchg
mov
dec
cmpsl
adc
pusha
cmp
mov
pop
add
aas
or
adc
add
dec
into
and
iret
jno
int
aaa
or
and
sub
aas
ljmp
add
adc
xor
push
push
inc
in
pop
out
adc
and
add
clc
push
or
mov
xor
pop
scas
jbe
not
jecxz
ljmp
pop
push
add
jmp
scas
bound
sub
or
ja
fnstsw
sbb
outsl
loopne
mov
fsts
lock
sbb
aad
inc
dec
lcall
ret
mov
outsl
xor
or
test
add
js
xchg
or
out
ss
addl
punpckldq
add
insb
adc
cmp
jns
push
mov
mov
mov
add
cs
and
sti
or
add
add
fld
add
xor
sbb
hlt
add
dec
cld
adc
frstor
das
pop
jg
or
rorb
pop
xor
xor
inc
jge
xor
stos
mov
subl
xchg
pop
call
mov
inc
jo
push
or
and
jns
ret
add
lret
add
mov
xchg
jbe
push
sbb
aam
loop
leave
mov
sbb
pop
lock
js
pusha
pop
fildll
pop
mov
or
or
sbb
js
lret
jp
xor
cmp
add
mov
lret
jle
stos
lods
add
mov
push
adc
popa
push
dec
dec
ja
ljmp
fwait
mov
inc
mov
lahf
movlps
dec
push
pop
mov
mov
sbb
dec
or
add
and
movl
movsl
rcr
pop
loope
fadds
nop
mov
mov
jae
add
cs
ljmp
push
outsl
add
inc
jl
or
push
andb
adc
les
inc
xchg
add
mov
out
mov
cmp
scas
inc
cmp
mov
in
jo
xchg
fnstenv
popa
xchg
movsl
aaa
sbb
sahf
cmp
mov
mov
pop
test
cmp
imul
add
jno
mov
mov
cmc
jns
add
dec
mov
adc
loope
ret
cmpsl
or
xchg
scas
dec
ja
rcrb
adc
pop
sbb
clc
les
dec
jle
xor
inc
shl
jo
lret
mov
sbb
call
push
addl
add
in
dec
cwtl
mov
ds
mov
sbb
sbb
inc
jae
test
add
jbe
sbb
bound
push
addr16
xchg
shl
and
lret
adc
pop
and
lcall
out
dec
addb
add
cmp
hlt
mov
push
aas
push
sbb
push
add
mov
add
mov
jp
push
sbb
pop
hlt
add
into
push
adc
shlb
andb
in
and
mov
cltd
pop
sub
mov
and
dec
andb
lret
stc
ret
stos
pop
add
cmp
lcall
mov
or
inc
faddl
int3
stc
sub
push
aas
stc
mov
fldt
jge
sbb
or
scas
aaa
mov
sub
leave
popf
int3
jo
hlt
jmp
clc
push
sbb
xorb
mov
mov
imul
imul
ror
js
sbb
and
mov
inc
cmp
test
xchg
mov
insb
sbb
jge
push
insl
mov
in
ds
faddl
mov
ret
add
xlat
pusha
shll
sbb
faddp
jle
inc
lds
idivb
nop
or
or
xchg
movsl
mov
or
out
sub
scas
dec
inc
cs
ficompl
leave
les
adc
pop
push
add
mov
fcmovne
or
xor
adc
aad
mov
int
shl
cmp
push
cs
inc
xchg
cmp
rorl
and
sub
adc
dec
pop
fstpl
shll
xor
out
jne
repnz
dec
mov
jo
faddp
pop
in
sbb
push
inc
dec
movsl
out
pop
addl
mov
or
in
mov
fstpl
jecxz
jns
pop
daa
add
dec
xchg
loope
nop
lods
fs
jno
cmpb
outsl
lcall
xor
mov
fiadds
add
sbb
es
js
fucomi
out
repnz
mov
inc
mov
xchg
add
fs
rclb
dec
insb
mov
mov
jle
pop
cmpsl
xchg
mov
and
jmp
xor
add
iret
jg
aad
mov
pop
mov
add
sbb
add
ret
addl
bound
clc
pusha
mov
xor
pop
or
inc
jne
sbb
xchg
popf
adcb
adc
mov
jg
jmp
mov
jl
mov
out
pop
dec
shl
call
cmp
push
inc
out
sbb
sbb
inc
mov
dec
cmovp
fiadds
or
inc
or
jg
pop
lcall
mov
push
add
add
fisubs
and
sub
xor
cli
out
jb
test
loop
loope
js
mov
and
push
cmp
fisttpl
mov
leave
gs
test
call
fdivrl
loop
std
seta
cli
orb
cmpsl
push
inc
cmpb
push
or
sbb
push
push
jo
jb
jne
xchg
cmc
in
push
inc
pop
xchg
into
add
dec
in
add
sbb
pop
sbb
mov
test
add
into
cmpb
lcall
sbb
jno
xchg
js
push
fucom
cmp
and
xor
jae
imul
in
push
cmp
mov
push
test
icebp
sbb
dec
call
sbb
cli
pusha
mov
std
out
push
mov
mov
test
pop
aas
fwait
mov
adc
sbb
mov
sbb
xor
pop
es
rolb
paddusb
mov
jo
pop
dec
int
xor
dec
cmp
cmpsl
mov
popa
dec
ret
adc
lret
mov
iret
test
loope
push
pop
mov
adc
dec
rclb
cltd
jl
jo
in
mov
add
outsl
ja
shll
sahf
repnz
xchg
mov
mov
add
ret
pop
adc
shrl
add
sti
imul
xor
pop
ljmp
add
mov
push
xchg
adc
xchg
add
ja
les
fiadds
jmp
mov
shll
gs
adc
outsl
out
ds
das
push
cmp
or
add
mov
ds
lock
cwtl
fisubs
mov
sbb
xchg
add
ds
std
add
push
insb
xor
out
mov
xor
push
out
add
lret
sbb
roll
push
mov
jp
lods
sahf
rclb
das
xchg
sbb
inc
jne
push
test
jns
ret
jo
add
jmp
xor
imul
adc
cld
loope
ret
inc
xchg
add
dec
loop
outsb
jae
add
icebp
repz
and
mov
bound
loopne
outsb
mov
test
adcl
cmp
mov
cltd
lret
fdivrs
mov
bound
cmp
push
stos
pop
pushf
sbb
fmuls
icebp
push
cmpb
mov
add
add
mov
jb
pop
stos
ficomps
mov
cwtl
push
xchg
mov
xchg
pop
addb
cli
dec
add
and
arpl
cmp
push
dec
xlat
ror
sub
stos
inc
lea
repnz
rorb
add
mov
mov
add
inc
mov
shr
iret
sub
adc
xor
inc
je
rol
in
cwtl
sub
es
in
add
outsl
pop
scas
iret
adcb
and
or
xchg
popf
packsswb
jecxz
xchg
add
cld
add
outsl
add
sub
mov
cmp
aas
cmp
push
lock
add
hlt
push
xor
dec
adc
jmp
cs
sub
iret
negb
in
pop
pop
sub
aam
lods
lret
fdivs
add
mov
clc
int
mov
std
add
pop
jmp
add
mov
fstpl
pop
out
mov
xchg
gs
push
fsubs
nop
jbe
test
and
les
rclb
add
pusha
sbb
call
adc
cli
mulb
int3
add
es
or
add
scas
push
push
mov
cmp
and
imul
mov
rol
push
add
inc
in
sbb
and
push
aaa
mov
mov
pop
testb
pop
lock
stos
pop
mov
or
out
add
in
mov
or
repz
enter
pop
push
sub
push
jne
jge
jo
out
lock
mov
push
hlt
inc
mov
aam
pusha
add
mov
jge
inc
test
xchg
icebp
add
xor
imul
lds
xchg
push
fdivs
dec
or
mov
movsl
fisttpl
scas
data16
ds
cmp
testb
mov
int
jge
pusha
push
mov
add
jg
rol
mov
jmp
inc
in
sti
addb
cld
fildl
add
nop
or
pop
bt
insb
movsb
xchg
pop
xchg
sub
ret
shlb
add
rclb
iret
repz
mov
fs
fucomip
or
sbbl
call
mov
adc
andb
add
fs
dec
pop
mov
insb
or
stc
ljmp
and
fwait
or
lods
dec
cltd
mov
das
and
adc
cld
stos
add
ja
dec
mov
dec
inc
jg
jnp
push
sahf
loopne
jo
out
xor
add
or
mov
sbb
and
leave
lahf
mov
jnp
pushf
and
mov
idivl
scas
xor
adc
jp
lret
arpl
xchg
add
ja,pt
cmp
push
and
bound
mov
add
mov
fcmovnbe
add
cltd
cs
sbb
ds
xchg
pop
rorb
jmp
cli
out
jo
add
sub
pop
in
or
into
mov
xor
add
adc
and
xor
pop
movsb
dec
jne
divb
xor
pop
loope
test
xor
xchg
mov
out
jmp
mov
push
xlat
fstpt
int3
sbb
jae
cs
imull
add
dec
adc
push
mov
and
pop
dec
fbstp
ja
lock
add
ljmp
add
cwtl
outsl
add
cmc
fwait
out
dec
aad
add
repz
ja
data16
das
push
sbbb
movsl
sbbl
mov
int3
stos
adc
inc
rcr
and
inc
fwait
push
push
and
imulb
rcrb
or
xchg
pop
and
outsb
js
and
lahf
dec
lods
jp
inc
xor
cmp
cwtl
inc
aas
fcomi
cmp
mov
ljmp
mov
and
pop
enter
addl
mov
sub
mov
xor
cmp
clc
lds
scas
pop
xor
and
add
daa
dec
or
mov
popf
cmp
lods
clc
pop
cmp
ljmp
add
add
test
lds
into
lock
push
xor
sbb
push
push
sub
lods
sbb
push
clc
ss
aam
xchg
outsb
mov
test
mov
rcrb
pop
pop
lcall
push
mov
xchg
cmp
push
cmp
pop
rorb
and
loopne
seta
fs
lods
xor
or
js
in
add
xor
pop
push
sbb
adcb
aaa
mov
out
rclb
and
add
or
adc
mov
or
iret
xor
mov
out
push
in
call
or
and
push
mov
std
arpl
push
or
test
out
jns
add
ret
xor
pop
das
xchg
sub
and
test
imul
adc
sti
sbb
pop
and
push
sahf
adc
add
inc
ret
sub
leave
xchg
pusha
inc
shrb
fcom
pop
ljmp
inc
and
lock
add
sbb
mov
mov
xor
jg
lods
sub
push
add
clc
inc
jo,pn
jle
mov
push
pop
xchg
idivb
subl
cli
pop
movsl
mov
xor
jns
add
jne
in
cmp
add
mov
outsl
mov
sbb
call
and
add
and
dec
frstor
inc
pushf
and
movsl
dec
fdivrl
pop
push
push
mov
in
popa
sarl
int3
sub
call
aaa
inc
mov
sahf
pushf
inc
jae
push
xor
out
mov
xchg
pop
xor
xchg
icebp
xchg
fs
mov
inc
cmp
pop
mov
out
push
cmp
stos
faddl
mov
filds
cmp
xchg
mov
mov
xchg
xchg
pop
mov
xchg
inc
and
ljmp
mov
scas
add
add
adc
cli
mov
jp
cmp
cld
adc
add
fldcw
pushf
pop
int
imul
icebp
mull
dec
sbb
test
add
xchg
jnp
outsb
sbb
andb
mov
loop
lahf
mov
loopne
mov
mov
mov
divl
ljmp
sbbl
push
mov
stos
mov
in
cmp
add
ljmp
add
repz
cmp
sbb
push
sahf
stos
inc
test
adc
lahf
dec
andl
ljmp
mov
sbb
insb
or
pushf
mov
xchg
sub
push
lods
sbb
jp
cmp
add
pop
mov
add
mov
rcrl
push
pop
lret
lock
push
cmp
mov
jecxz
incb
cmp
fidivl
jae
add
mov
sub
inc
lcall
repz
push
add
clc
out
test
jnp
pop
jecxz
mov
or
cmp
and
adc
addr16
lods
mov
or
je
and
xor
lret
sarl
cmpsb
inc
add
push
mov
add
add
xchg
andb
mov
add
xor
jo
je
jecxz
inc
pop
das
mov
adc
out
or
es
loop
sub
inc
in
mov
les
push
jo
incl
push
shrl
mov
je
or
or
mov
stc
addb
sbb
jae
inc
mov
mov
push
push
cmp
adcb
jmp
test
inc
mov
cld
jo
aad
ret
daa
mov
lds
add
pop
dec
jp
mov
mov
ja
add
test
add
gs
xchg
xchg
aaa
jo
pop
jmp
enter
sbb
dec
shlb
in
shrl
es
shl
repz
test
in
add
and
int3
sub
push
adc
dec
in
and
enter
subb
inc
sub
cmp
pop
mov
and
dec
pop
mov
adc
aam
push
push
mov
push
and
pop
mov
add
mov
sbb
in
push
popf
pusha
ja
sarl
and
push
sbb
leave
and
inc
or
cltd
dec
cmp
inc
push
je
sub
mov
xchg
push
jns
ja
add
inc
jne
lcall
and
rolb
xchg
ror
test
inc
mov
xchg
dec
push
icebp
add
sbb
jo
lcall
jns
int3
pop
adc
add
popa
add
jg
jno
jmp
push
popf
sahf
and
test
pop
inc
xlat
adc
inc
fwait
adc
loope
and
jo
sbb
jmp
xchg
int
jo
call
or
hlt
dec
iret
add
jmp
add
or
sbb
addl
cmc
push
ret
add
or
shlb
or
std
cmc
pop
pop
sub
bound
add
ret
adc
add
jno
inc
out
jo
cmp
data16
or
push
add
mov
lahf
and
ljmp
das
imul
fnstcw
shrl
lret
sbb
jbe
out
cmp
rorl
xchg
ja
inc
movsb
movsb
mov
ljmp
inc
mov
dec
fcomps
push
repz
cmp
add
cld
icebp
mov
inc
subl
cmp
repnz
cmp
fimull
mov
jne
pop
rcrl
cltd
jnp
aaa
push
jge
push
add
xchg
mov
push
xchg
add
pop
mov
std
or
push
jmp
xchg
pop
pop
in
sub
ja
mov
fdivrl
mov
fwait
jl
cmp
xchg
lods
add
push
not
sbb
jecxz
add
jmp
fxtract
sub
sub
outsl
mov
and
push
mov
es
pop
add
add
add
mov
sub
add
add
mov
add
outsl
sbb
dec
add
adc
xor
add
rclb
lds
sub
push
icebp
push
mov
mov
shrl
ds
pop
and
sahf
push
mov
xor
adc
test
nop
adc
add
add
popa
mov
notw
adc
hlt
inc
dec
insb
fcompl
cmp
outsb
fisubrl
add
mov
movsl
xor
mov
xor
push
pop
mov
mov
out
and
pop
add
aas
cld
add
adc
mov
mov
add
or
push
sub
sbb
mov
divl
push
or
pop
mov
pushf
pop
add
rorb
mov
xor
sahf
cmp
add
jp
iret
ss
push
lcall
movsb
xchg
sub
sbb
add
jae
sar
pushf
lcall
sub
idivb
leave
mov
inc
sub
or
add
sbb
aaa
repnz
movsb
pop
sahf
add
jne
pop
adc
mull
and
pushf
xchg
cmp
add
cmpsb
push
sbb
pop
mov
leave
push
inc
dec
add
pop
subl
test
mov
adc
es
add
lcall
jecxz
add
adc
out
mov
repnz
imul
test
dec
fmul
cmp
mov
add
inc
mov
add
arpl
inc
mov
xor
xchg
icebp
insl
cmpsl
jne
cld
aad
add
inc
cmp
rorl
out
add
mov
ja
add
inc
fwait
and
imul
mov
push
cld
push
outsl
add
jnp
lret
or
jle
xor
xchg
in
pop
clc
xchg
cmp
sbbb
rol
sti
add
lea
cmp
mov
stos
pop
cltd
rolb
mov
add
xchg
jmp
dec
nop
call
mov
in
and
stos
test
cwtl
in
and
out
sub
mov
fdivl
cmpsl
sub
cmp
mov
lods
out
fdivl
ss
mov
pusha
je
aad
fwait
or
cmp
les
enter
mov
into
pusha
jl
sbb
nop
mov
or
sbb
lahf
pusha
in
cmp
add
aam
je
adc
jne
jae
fnstcw
or
nop
nop
mov
es
inc
fidivrs
and
mov
dec
subb
mov
movb
lret
ret
xchg
add
push
add
inc
cmp
push
jmp
mov
mov
sub
mov
fwait
out
adc
add
adc
mov
add
rcrb
pop
dec
sbb
out
xchg
add
add
cmp
nop
add
popf
inc
cmp
pushf
or
add
cmp
bnd
push
sarb
scas
dec
mov
add
inc
lret
or
mov
and
addr16
rcll
dec
mov
jg
lock
add
loope
pop
out
mov
xchg
add
sbb
std
bound
aad
rolb
add
call
sub
add
pop
mov
add
repz
add
aas
pop
call
add
in
rcrb
push
and
les
mov
fs
jo
inc
hlt
cmp
icebp
xchg
enter
call
jbe
mov
dec
cmpsl
add
jmp
mov
add
rolb
mov
xchg
mov
push
inc
adc
add
lcall
es
sub
sbb
aad
ss
ja
in
addl
pop
rolb
dec
outsb
fstp
inc
hlt
mov
mov
loop
add
clc
add
mov
popa
in
dec
jno
aas
mov
mov
ljmp
fwait
xorl
xchg
push
mov
xchg
pusha
movsl
rsqrtps
push
adc
aas
mov
addb
sbb
cmc
fdivrp
sar
dec
or
xor
nop
cs
add
mov
jmp
imul
push
sub
push
mov
sub
inc
mov
fwait
cs
jecxz
cltd
jo
adc
mov
aam
icebp
loopne
ret
shll
fadds
or
xor
xor
aam
leave
rcrb
imul
xor
pop
loop
and
fistpll
add
cs
stos
mov
int
scas
push
btr
sti
add
and
cwtl
sbb
add
dec
or
fadds
inc
mov
das
loopne
sbb
cld
mov
hlt
sub
imul
rcrl
enter
je
stc
add
push
shlb
add
or
mov
les
add
rorl
aaa
lock
and
rorb
fwait
stos
pop
push
xor
jns
sub
or
add
dec
add
mov
iret
repnz
add
or
rcrl
mov
xchg
dec
sbb
add
fsubrs
jl
orb
cld
sti
mov
leave
add
sub
xor
inc
ret
and
xchg
mov
or
les
daa
ja
push
push
sti
ds
and
or
nop
mov
stos
cmpsl
pop
sbb
loope
cwtl
jl
scas
sbb
jmp
and
iret
inc
mov
cmp
and
fsts
mov
dec
add
cmp
adc
or
mov
lock
fs
or
add
mov
jne
add
cmpsb
test
dec
xchg
add
cmc
inc
mov
test
ret
xor
add
out
adc
inc
mov
fcomi
les
dec
mov
or
sbb
insb
jl
add
jne
inc
addb
add
aaa
das
xchg
adc
push
out
jo
sub
rcr
fidivrl
mov
xor
xor
mov
add
push
mov
pop
xor
rcl
shll
ljmp
sbb
icebp
ja
and
leave
fsubs
ljmp
fldenv
jnp
ret
data16
lret
cld
adcl
pop
orb
sbb
lods
dec
cmp
cld
push
out
add
hlt
flds
iret
ja
test
xchg
add
xchg
cmp
mov
pop
dec
cld
stc
inc
in
mov
cmp
add
adc
add
xchg
sti
push
stc
mov
mov
adc
xor
nop
adc
stos
lds
jmp
dec
rolb
lods
pushf
hlt
fisubl
add
popf
orl
clc
jae
int
xchg
and
inc
gs
les
jg
push
jp
aam
sub
pop
pshufw
adc
cmp
push
and
loopne
arpl
add
inc
orb
leave
mov
add
lods
or
push
sarb
push
push
dec
jnp
push
cmp
add
sub
push
cmp
push
and
adc
fnstcw
data16
loop
pop
ds
sub
pop
xlat
mov
pop
pop
pop
cltd
xor
call
into
mov
std
or
or
add
jae
pop
icebp
imul
dec
jo
jecxz
les
push
xchg
shr
pop
add
cmp
lcall
int3
jo
xor
add
mov
inc
mov
movsl
mov
nop
cs
clc
stc
in
xor
push
fistpl
rclb
adc
xchg
xchg
cmpb
xor
iret
pop
mov
in
or
or
lods
ds
imul
pop
push
mov
mov
ror
dec
cmp
inc
add
pop
or
imul
fdivl
jb
inc
add
scas
xor
or
es
int
pop
xchg
mov
push
add
jle
sbb
xchg
and
jge
daa
loope
nop
orb
push
int3
mov
push
add
popa
lods
sbb
rolb
clc
outsb
xchg
adc
rclb
and
pop
add
imul
pop
xchg
mov
sub
shll
mov
sub
cmp
mov
add
mov
or
jne,pn
mov
ljmp
jp
inc
inc
out
add
inc
adc
pusha
sub
add
mov
gs
jne
mov
and
add
cmp
jae
cli
loopne
sbb
add
push
popf
int3
js
je
add
cmc
ror
inc
and
ret
mov
push
loope
aam
push
jae
lock
dec
add
mov
xchg
jg
or
dec
sahf
notb
cld
add
sbb
pop
nop
xorb
push
sub
or
mov
xor
popf
lods
subl
dec
icebp
jns
add
fsubl
shlb
sysexit
xchg
sbb
jo
in
mov
aaa
daa
test
repz
sbb
xchg
inc
inc
cmp
add
bound
jecxz
xor
clc
push
lret
gs
ljmp
movsl
adc
or
adc
jne
sbb
cmpsl
add
jb
mov
xlat
jp
push
lcall
mov
add
mov
xor
push
jge
push
bnd
pop
pop
jnp
ret
rorb
mov
and
pop
loope
sbb
xchg
mov
add
pop
cmpsl
arpl
mov
push
adc
or
pusha
mov
into
lret
arpl
pop
add
mov
pushf
add
int3
lods
dec
add
lret
jge
pop
hlt
pop
outsl
cmp
pop
or
stos
add
mov
dec
fiadds
fwait
aas
add
mov
jns
sbb
add
dec
push
in
cmp
add
jl
pop
bound
inc
lcall
jecxz
sbb
jo
mov
cwtl
jle
inc
xchg
or
and
imul
add
aad
daa
aam
sub
mov
and
push
xchg
add
jl
adc
or
add
inc
lds
cs
add
jb
fwait
mov
ds
xor
add
jmp
pushf
ljmp
add
rcrb
rcrb
mov
mov
rcl
xlat
jnp
cld
mov
int
pop
std
hlt
popa
popf
clc
out
add
call
in
pop
add
or
cwtl
jns
or
sub
xchg
popf
sub
add
pusha
mov
mov
test
add
mov
hlt
pop
push
pushf
lods
test
add
in
mov
pop
or
addl
xor
xor
dec
dec
fisubl
add
sub
loop
jnp
xor
or
jb
popf
jge
outsb
sub
and
xor
ljmp
pop
ds
inc
jp
mov
loop
in
xchg
or
popf
cmp
adc
push
mov
loopne
inc
loopne
sub
hlt
pop
pop
mov
add
sub
mov
mov
mov
movsb
mov
add
in
bnd
lock
testb
inc
fistpll
xorb
push
and
insl
pusha
in
mov
mov
jo
pop
adc
push
sub
add
ljmp
and
fcmovne
rolb
outsl
idiv
pop
fstps
pop
pop
filds
repz
push
cmp
or
jmp
mov
out
xchg
xchg
aaa
pop
xor
out
xchg
sub
or
push
mov
jl
pop
inc
jo
sub
or
test
or
cli
sub
in
lcall
std
clc
sti
dec
add
xor
sub
shrb
movsb
mov
sarb
in
add
fmul
stos
notl
or
loopne
add
jo,pt
xchg
aad
jno
xor
adc
dec
das
clc
repnz
add
fs
shlb
sbb
add
nop
add
or
jge
mov
inc
xchg
add
test
push
inc
mov
sbb
add
icebp
lret
out
add
movsb
fcmovne
add
mov
es
add
inc
mov
stc
hlt
push
rclb
ret
cmp
movsb
xchg
sbb
mov
lods
or
mov
sbb
lahf
lock
clc
and
je
rcrb
sub
or
jle
invd
mov
and
add
inc
divl
jmp
daa
jae
in
xchg
std
fsubrp
cmpsl
psadbw
xor
les
inc
push
mov
stc
std
mov
mov
xor
ds
lods
push
lea
mov
repnz
cmc
pop
jl
js
loope
andb
add
jnp
cmpsl
and
fisttpll
ja
pusha
mov
lret
or
jl
inc
xchg
outsl
add
shll
xchg
add
test
add
inc
or
in
shrl
add
cmp
mov
pop
or
arpl
mov
or
and
mov
sbb
or
add
gs
enter
cltd
add
lcall
push
bound
aam
out
dec
sbbl
and
outsb
bound
insl
or
cmpsl
call
mov
dec
leave
jno
mov
inc
jae
cltd
xor
jmp
adc
or
xchg
pusha
push
ja
and
mov
fs
rorb
cmp
push
loope
shll
rolb
out
fyl2xp1
aaa
inc
or
mov
push
jno
add
jno
movsl
cmp
mov
sbb
jns
pop
dec
jmp
add
je
pop
outsl
mov
adc
movsl
add
pushf
jns
dec
lahf
roll
lcall
add
fnsave
add
inc
bound
mov
mov
dec
sub
sbb
out
inc
push
jp
aaa
int3
xchg
add
inc
jl
mov
lret
pop
adc
test
xchg
jecxz
mov
dec
lahf
push
repnz
mov
loopne
mov
sub
jp
movd
cmp
lods
inc
cmp
xor
pop
add
call
mov
popf
add
and
in
pop
jnp
fcomip
scas
and
std
gs
cmp
push
push
cwtl
out
orb
mov
jno
add
das
dec
into
adcl
pop
fiadds
add
xor
loopne
pop
mov
imul
push
push
jmp
add
and
shlb
in
push
out
mov
mov
pop
lahf
aaa
sub
test
jl
sbb
lcall
push
and
cs
add
xlat
lcall
insl
lret
xchg
mov
loopne
pop
pop
adc
loope
sbb
incl
movsl
push
in
sarb
sbb
mov
dec
lcall
xchg
hlt
ljmp
jo
mov
data16
jle
ficomps
sti
out
sbb
inc
mov
dec
pop
add
movsl
xor
aam
add
xchg
pop
loope
fiadds
clc
mov
mov
and
fistpll
lcall
add
pop
lods
xor
and
mov
mov
loop
icebp
in
sbb
outsl
cmp
xchg
sbb
arpl
xorb
pusha
subb
int3
in
jge
xchg
sbb
sbb
jo
loopne
add
inc
divb
adc
and
mov
pop
mov
aad
jl
xor
test
mov
xchg
mov
outsl
fdiv
sbb
push
pop
add
dec
incb
adc
add
sti
fdivrl
inc
or
push
ficompl
push
xchg
dec
pusha
in
add
ret
outsb
pop
mov
test
shrb
cmp
mov
stos
mov
dec
mov
mov
dec
jl
push
or
jbe
and
hlt
rcll
jo
stos
sahf
test
push
repnz
adc
pop
mov
and
test
lds
ret
lods
stos
xor
fdivrs
repz
addl
add
ljmp
xor
mov
mov
mov
rcrb
push
fcmove
xchg
inc
mov
rolb
loopne
test
jge
in
cmp
dec
and
xchg
or
cmp
call
or
mov
rorb
or
fcoml
xchg
pop
aas
mov
pop
or
sbb
cmp
pop
or
mov
add
mov
sub
mov
push
out
fimuls
loopne
pop
push
data16
xor
pusha
cmp
xchg
xorl
scas
ljmp
inc
inc
mov
enter
shlb
xchg
enter
sbb
adc
push
fstpt
or
cmovo
orps
fiadds
or
int
mov
xor
adc
in
mov
and
adc
shl
jmp
adc
mov
pop
dec
popf
inc
data16
mov
shlb
repnz
or
cwtl
dec
pusha
xchg
mov
out
push
icebp
mov
add
push
out
and
add
cmp
push
jle
pop
adc
mov
inc
enter
mov
push
icebp
test
jmp
hlt
xor
pop
movsl
xor
inc
xchg
inc
fwait
dec
and
les
insl
lcall
add
fwait
push
mov
or
mov
sbb
add
hlt
add
cmp
icebp
or
sti
mov
or
cmp
add
adc
mov
push
inc
ljmp
fld
test
and
inc
cmp
cmp
pop
inc
in
inc
mov
int3
js
movswl
out
pop
mov
loope
push
add
outsl
imul
sub
sti
mov
orl
xor
ss
popf
and
cmp
andb
fiaddl
push
popa
and
add
fbld
andb
pop
insb
inc
sub
in
add
stos
sbb
pop
mov
push
xchg
xchg
adc
xor
push
bound
mov
mov
test
cmp
popf
insl
inc
add
loop
in
add
lods
int3
cmp
lcall
push
hlt
arpl
lds
cli
add
in
and
data16
push
mov
aas
xchg
jle
adc
or
nop
inc
push
push
aaa
pop
mov
add
lret
fidivl
in
lock
mov
or
dec
lea
popa
sub
out
roll
flds
out
push
fs
add
push
lret
pop
out
into
xchg
jno
add
stc
inc
and
bound
add
mov
andl
mov
out
pusha
lret
cmp
jg
scas
leave
popa
call
add
inc
stc
sbb
or
lods
cmp
jle
test
adc
jo
jmp
mov
pop
jnp
adc
or
and
psllw
sbb
add
inc
out
testl
addb
stos
inc
dec
or
add
mov
shlb
cli
orl
add
push
xlat
sbb
jecxz
add
leave
jp
punpckhwd
and
add
sbb
and
dec
hlt
sub
fdecstp
icebp
push
rol
nop
rol
nop
jne
das
mov
add
movsl
xlat
fiaddl
sub
and
add
lock
es
sub
mov
leave
call
xor
cmp
and
mov
push
adc
xchg
call
pop
out
dec
pop
loopne
dec
cmp
mov
dec
inc
dec
pop
and
lds
les
dec
sbb
int3
mov
sub
movsb
push
cmpsl
out
jmp
add
sbbl
inc
mov
dec
pop
add
mov
in
lods
test
repnz
and
scas
add
jecxz
xchg
and
cmpsl
and
test
in
out
scas
gs
lret
sub
inc
iret
xor
je
dec
mov
pop
jp
pop
push
jo
sti
iret
idivl
add
lret
or
add
mov
xchg
loopne
hlt
in
add
addr16
add
cmp
xor
add
lds
pop
sub
ret
rorl
ss
mov
mov
rcr
xor
mov
rcrb
cltd
add
in
push
lods
add
mov
pop
sub
xlat
sbb
es
inc
fcmovne
cmp
pop
add
fstps
lock
add
in
aad
jge
push
movb
sarb
sbb
and
dec
adc
pop
inc
xchg
and
inc
fildl
jp
in
comiss
loopne
mov
fdivl
add
sub
jae
pop
mov
shlb
out
push
mov
and
add
push
adc
sti
jno
inc
pop
or
cmpb
add
fdivrs
cltd
xor
ljmp
imul
add
mov
mov
out
pop
xchg
rolb
push
leave
les
lret
cmc
xor
nop
mov
mov
insb
bound
hlt
lock
insl
out
sbb
mov
jmp
out
rcrb
insb
cmp
mov
add
lods
cmpsl
dec
mov
iret
add
leave
sarl
popa
mov
pop
push
or
call
das
pop
cmp
rcl
sbb
test
adc
cwtl
rclb
scas
jecxz
in
push
and
push
shrb
sbb
mov
sbb
mov
mov
push
rolb
add
pop
fldl
call
sub
les
pusha
add
lea
cmpsl
add
imul
cmp
lahf
pop
or
xlat
das
cwtl
subl
push
fldcw
sub
stos
rorl
insb
ljmp
enter
add
cmp
jo
lret
pop
pop
sub
mov
xlat
xchg
adc
or
sbbl
jp
dec
pop
out
jo
movsl
adc
sub
call
jmp
and
orl
mov
inc
xchg
add
sbb
pop
and
sub
je
or
and
fcoml
pop
jle
lahf
xorl
mov
add
fsts
ret
sbb
lds
and
or
leave
loope
cld
xchg
sti
pusha
imul
pop
xchg
jne
jae
push
push
push
loopne
imul
jns
test
jg
add
adc
xchg
clc
cmp
sarb
mov
dec
inc
repnz
sbb
push
loopne
add
jb
sbb
jne
sub
mov
jb
jp
lret
ret
mov
dec
mov
xor
dec
iret
cmp
andl
push
sbbb
sarb
mov
dec
add
sbbw
hlt
dec
test
xlat
divb
xchg
cmp
or
xchg
add
jle
cmpsl
add
jo
jmp
pop
xchg
add
jno
mov
out
stos
leave
add
xorl
xchg
adc
daa
push
add
imul
sbb
add
xor
lds
push
adc
jnp
pop
push
cmpsl
stc
cmpsb
outsl
cmp
mov
lcall
das
cmp
lods
add
in
mov
ss
in
mov
mov
daa
mov
add
adc
dec
lret
add
hlt
mov
lret
sbb
mov
add
mov
add
out
cltd
jb
or
fs
sub
mov
inc
orl
loopne
pusha
push
mov
cmp
add
xchg
pop
jbe
in
jle
adc
push
inc
jg
ljmp
jns
add
xorl
jecxz
arpl
repz
nop
xchg
mov
add
push
add
and
shr
add
jl
or
jecxz
jo
daa
arpl
dec
inc
and
pop
stos
clc
andl
shr
lods
jp
mov
lret
add
lds
mov
clc
dec
gs
inc
les
and
and
cmpsl
hlt
loop
sub
lahf
insb
add
pop
scas
and
add
rcll
imul
xchg
pop
stos
jo
add
mov
insb
add
fs
loop
sbb
popa
add
push
and
add
xor
add
shr
adc
cld
insl
lahf
jge
loope
add
test
out
xchg
adc
jl
xor
add
jle
cltd
adc
add
xor
pop
add
mov
dec
sbb
movsb
adc
sbbl
add
stc
movsl
cmp
aad
adc
add
sub
mov
clc
dec
jmp
jb
add
pusha
bnd
adc
push
loop
mov
fadds
and
out
ds
add
mov
jl
add
pusha
pcmpeqd
hlt
cmp
add
imul
add
outsb
out
sub
inc
lahf
push
mov
mov
or
ret
jle
lock
adc
push
xlat
imul
pop
movsb
scas
lret
sahf
push
outsl
add
lret
dec
add
sub
cmp
sbb
fldpi
jbe
mov
outsl
add
xchg
jns
ss
add
sub
push
stos
add
xchg
jle
jg
and
iret
popf
negl
jnp
int3
inc
add
pop
stos
das
insb
xchg
or
jg
in
xor
sti
loopne
lcall
mov
repnz
pop
dec
push
sbb
mov
je
dec
mov
dec
cmp
or
or
inc
pop
flds
ja
das
dec
mov
aad
sub
test
mov
decl
dec
adc
xor
and
les
cmp
sarb
mov
in
adc
cmp
mov
and
sbb
testl
sbb
ss
fcmovnb
add
dec
push
push
in
iret
lahf
add
mov
addb
or
push
push
orb
cmp
addr16
fcom
je
cmc
xchg
fsubr
cmp
ret
dec
out
lods
pop
mov
xor
xor
add
jmp
push
or
cmp
clc
test
icebp
xor
lock
psllq
lea
add
or
dec
dec
and
test
or
pop
inc
icebp
cltd
mov
loopne
out
fnstsw
add
nop
js
iret
xor
xor
movsl
ljmp
mov
xlat
sti
arpl
ja
xorb
cmp
xchg
and
movsl
mov
sahf
mov
ja
xchg
push
enter
std
aas
mov
pop
jp
inc
add
test
jae
inc
xchg
loopne
add
mov
loopne
push
es
in
shll
push
jge
xchg
test
addr16
fistpll
call
repz
mov
mov
mov
xchg
mov
sbb
cmp
sbb
out
add
enter
pop
sbb
add
mov
cmp
cmp
adc
push
xchg
pop
cli
insb
jo
and
cmp
arpl
fldt
test
out
nop
jp
add
adcb
pop
push
mov
addb
adcb
insl
mov
fcmovu
inc
xor
movsb
std
inc
incl
pop
popf
cmp
inc
add
aaa
mov
jne
or
fisubl
add
cltd
es
pop
or
add
popa
out
out
jbe
mov
adc
je
jge
bound
lods
faddl
dec
mov
js
jmp
add
sub
movsb
hlt
mov
scas
sub
add
or
add
cwtl
pop
cmp
sub
add
aas
push
jbe
add
xchg
lock
rolb
testl
loopne
ljmp
cmp
ja
andb
int
add
shl
pop
or
stos
in
enter
add
push
sbb
cli
add
hlt
pop
leave
pusha
insb
outsb
add
mov
lock
adc
clc
js
sub
or
add
call
hlt
dec
icebp
or
loopne
jge
add
pop
clc
jl
xchg
cmp
push
ds
mov
js
add
push
jge
andl
and
sub
popf
xor
stc
adc
sub
hlt
lahf
add
incb
add
je
pusha
add
in
je
or
cmpl
add
lods
imul
add
add
inc
and
inc
std
xchg
add
mov
add
sbb
sbb
cmp
int
mov
or
ss
add
cs
adc
mov
mov
cli
add
movsb
add
ret
push
sbb
mov
dec
orb
nop
add
and
leave
cmp
add
mov
pop
add
movsl
iret
and
inc
mov
insl
stc
cld
cmp
sbb
fimuls
and
pop
aaa
add
scas
cmpsl
xor
data16
subl
aaa
mov
lods
add
pop
lret
xchg
sbb
xchg
add
clc
movsb
push
cmp
jns
lea
adc
clc
cwtl
loope
movb
mov
add
movsb
pop
ss
in
sbb
mov
rorb
lret
push
mov
ret
loop
xchg
rclb
dec
sub
add
addr16
lds
mov
xor
add
mov
push
out
iret
mov
inc
cli
cmp
jp
add
sar
test
pop
test
ret
mov
jmp
movsl
je
or
std
in
mov
cltd
jnp
arpl
add
fwait
push
leave
scas
pop
inc
sbb
fs
sbb
lock
addb
cmp
enter
fcompl
jg,pt
add
subb
in
adc
dec
rcrl
mov
xorl
add
push
push
cmp
js
scas
cld
outsb
xor
push
xor
cmp
aas
rcl
mov
adc
dec
xchg
inc
rcl
popa
insl
mov
enter
mov
mov
xor
pop
popw
or
mov
cli
lret
scas
hlt
fadd
jns
adc
push
sbb
dec
adc
addl
xor
test
xorl
lcall
xchg
enter
and
add
bswap
sbb
lahf
les
add
and
js
jo
incl
movsl
sbb
or
int
and
dec
sub
mov
arpl
adc
jo
iret
jo
jae
add
inc
out
js
lea
xchg
cmpsl
cli
mov
ds
sub
dec
add
in
mov
mov
popf
rorl
push
push
dec
lea
jns
lahf
jo
cmp
subl
add
sti
push
mov
add
mov
add
add
xor
xchg
in
pop
test
add
pop
lret
enter
pusha
add
push
lods
test
ljmp
and
sub
cmp
jecxz
cmc
shlb
fistpll
push
es
xchg
mov
push
adcb
and
add
popa
dec
jnp
xor
add
push
fwait
push
add
in
mov
hlt
pop
mov
loop
push
pushw
rcll
shrb
add
loopne
rorl
hlt
jns
sahf
sub
ret
push
adcw
add
or
add
mov
adc
out
or
sub
loope
or
ret
insb
stos
pop
rorl
and
mov
outsl
fistl
or
jp
loop
ret
paddw
lret
outsb
add
jo
mov
push
xchg
push
nop
sbb
mov
stos
jge
lea
movd
cs
pop
mov
adc
shl
fisubs
pop
in
loop
das
inc
add
sbb
inc
pusha
scas
add
xor
xchg
inc
add
xor
mov
sub
orl
and
insb
out
fiadds
icebp
cmpsl
mov
mov
mov
or
lea
and
add
out
cmc
mov
add
bound
mov
repnz
or
inc
icebp
js
test
pop
aad
jo
rcrb
lods
or
shlb
xchg
sub
lods
mov
add
push
ret
rcrb
movsl
add
gs
rolb
push
ret
pop
xchg
fldl
xchg
mov
mov
add
pop
jo
add
and
aam
pop
rcrb
daa
out
dec
mov
add
mov
idivb
push
adc
add
add
push
push
ss
loope
sbb
cwtl
add
imul
inc
inc
into
addb
mov
dec
mov
and
or
push
xchg
mov
lldt
jbe
adc
je
xchg
rcrb
fwait
int3
or
push
jae
scas
popf
popa
sub
sub
inc
iretw
sar
bound
and
inc
pop
mov
incb
mov
push
sahf
mov
test
xchg
add
push
add
out
push
call
mov
popa
fists
cmp
insb
jmp
sahf
jae
aas
test
fs
movsl
or
xchg
cmp
cld
or
xchg
call
mov
add
jmp
fistpl
aam
pop
ret
and
mov
inc
cmp
inc
nop
pop
jle
mov
ffree
fcomi
test
leave
popf
enter
add
cmp
pop
jle
add
mov
movsl
fildll
repnz
fwait
mov
and
push
mov
imul
xchg
loopne
mov
add
insb
fistl
cltd
or
dec
sub
push
ljmp
jb
push
xchg
nop
cmp
call
add
add
lahf
aas
pop
cmp
cmpsb
movsb
jecxz
mov
push
cmp
out
scas
idivl
sbb
imul
cmp
cmp
int3
fadds
into
mov
rorl
add
in
jmp
add
lea
lods
adc
mov
add
imul
subl
sahf
in
mov
and
mov
testb
sbb
sub
sub
inc
lock
rorl
add
xor
add
mov
adc
lret
rcrl
add
outsl
cwtl
lcall
inc
mov
jbe
sbb
cmp
inc
out
xchg
xlat
dec
lods
add
setnp
xor
leave
dec
mov
dec
int3
mov
lods
add
test
inc
fnstsw
add
lock
mov
stos
add
rorl
sub
fsubs
fcompl
sbb
int3
fists
shl
mov
add
rcll
nop
lock
insb
sub
int
add
mov
mov
loopne
mov
mov
test
push
cmp
movsl
cmp
sub
push
add
add
in
out
lahf
xchg
mov
test
popa
fs
int
mov
pop
outsb
jns
add
pop
or
int
push
sub
jbe
add
push
ljmp
iret
addb
cmp
loope
lcall
movsl
in
xchg
add
fstl
or
add
inc
mov
pop
fidivrs
fisubl
push
inc
push
sbb
jnp
push
jecxz
mov
scas
std
imul
test
pusha
clc
sti
push
or
hlt
cld
sbb
adc
add
notb
out
adc
rorb
outsb
sbbb
and
ud1
push
aas
test
push
sbb
jae
pop
push
idivl
add
sub
add
jle
add
sbb
add
pop
xchg
inc
repz
mov
cmp
or
ss
xchg
lock
movq
xorb
lea
adc
nop
adc
sbb
lds
ljmp
and
pusha
aam
jge
daa
or
repz
fsubrs
xor
ja
add
jns
out
jmp
enter
and
xor
pushf
dec
cmpsb
xchg
and
adc
jl
add
sbb
xor
mov
in
popl
pop
mov
mov
or
add
sub
data16
add
out
mov
mov
bound
rcll
loopne
push
push
add
sbb
sub
and
mov
and
dec
enter
js
adc
cmp
les
xor
pusha
dec
mov
jno
rolb
xor
dec
push
inc
mov
test
roll
cli
adc
xlat
movb
enter
lods
add
push
ffree
fiaddl
lods
dec
cltd
aad
ja
or
mov
into
mov
jle
jmp
mov
nop
pop
push
incb
imul
add
xchg
push
fiadds
clc
mov
push
roll
adc
shll
mov
cmpb
bound
negl
into
ds
fcomps
xor
sbb
loopne
and
bound
std
insl
add
xor
jmp
inc
lea
loop,pt
jae
cmpsl
mov
add
xor
nop
mul
sbb
cli
add
jl
in
jg
jno
test
adc
push
add
insl
popf
out
xor
or
ljmp
mov
pusha
mov
fcmovne
or
and
cltd
cmp
mov
add
mov
bound
fstps
lea
jbe
rcl
sub
sti
rolb
xchg
out
imul
ret
xchg
mov
push
xor
and
aaa
push
sbb
sub
adc
add
xorb
daa
add
mov
fildl
xor
adc
push
incb
movsl
lcall
add
fildll
js
mull
add
out
fisubrs
hlt
mov
push
cmc
ja
fs
cmp
push
mov
testb
outsb
addb
add
sbb
ss
push
lahf
js
or
shrb
in
inc
int3
push
mov
mov
xor
pop
jge
loopne
mov
add
adc
cmpsl
jp
std
xor
mov
add
push
and
xchg
pop
dec
mov
es
loopne
add
out
shl
hlt
adc
insl
push
xchg
stos
cltd
jmp
out
loopne
mov
mov
push
pop
cmp
repnz
pop
in
es
test
pop
sub
inc
popa
jecxz
mov
stos
jge
add
mov
ret
andl
andb
add
sbb
out
rcrb
cld
js
dec
cmc
xor
inc
jo
xor
test
jb
adcb
and
mov
fwait
pusha
add
scas
cmp
lds
bound
orl
push
sub
ljmp
pop
and
mov
in
mov
or
stc
mov
in
mov
add
in
pop
inc
scas
in
ret
stc
inc
mov
mov
test
xchg
push
push
push
sbb
ret
arpl
ljmp
push
xor
test
in
mov
and
sahf
jo
mov
sub
add
shl
push
repnz
or
lea
fisubrs
add
jmp
jns
loope
push
add
imul
fnstenv
cs
inc
jns
movsb
jmp
mov
enter
inc
hlt
aas
mov
push
call
add
sub
add
pop
sarb
cmc
movsb
adc
std
mov
outsl
fnsave
dec
fwait
push
fisubrl
sbbb
and
jne
jns
mov
inc
push
jp
popa
mov
inc
test
jne
and
jmp
inc
mov
shlb
stos
xor
add
push
jae
jnp
or
iret
mov
adc
pusha
dec
rorb
push
loop
pop
sub
unpckhps
inc
insb
test
sbb
add
stos
push
repz
cmpsb
mov
pusha
inc
dec
mov
daa
add
sbb
or
sub
mov
movsb
xorb
icebp
xchg
stc
mov
jae
notl
mov
and
mov
xchg
dec
push
mov
pushf
cmp
insb
sahf
xchg
cmc
inc
into
dec
lods
push
sub
mov
enter
pop
in
push
pusha
popf
xor
out
test
icebp
and
mov
mov
leave
imul
jbe
push
in
aam
push
add
jns
xchg
pop
adc
add
pop
enter
std
mov
lahf
fs
jne
ja
mov
fmul
es
stc
mov
push
lret
loope
adc
testb
jg
mov
dec
sub
les
cmpsl
xor
imul
mov
xchg
popf
test
mov
push
cmp
bound
aas
add
pop
mov
cmp
sbb
ljmp
sbb
push
leave
inc
mov
xchg
add
mov
sarl
add
xchg
push
jae
ss
push
push
aam
dec
add
push
lock
mov
stc
nop
bound
lcall
sub
jl
inc
pop
addl
xchg
pop
xchg
out
hlt
fadds
mov
dec
add
xchg
cs
jge
movsl
popf
stc
add
push
loope
add
mov
sti
iret
add
fildll
mov
xor
fsts
ret
or
push
out
xchg
pop
xchg
jnp
insb
mov
xor
ljmp
push
jge
iret
sub
adc
add
test
andb
add
mov
add
add
sbb
in
sub
mov
test
iret
mov
lock
add
add
icebp
and
movsl
mov
mov
and
and
xchg
push
imul
add
test
mov
jo
adc
xchg
inc
dec
pop
sub
ret
inc
test
xchg
pop
clc
mov
cli
rcrl
add
or
add
lea
xchg
into
arpl
xchg
aas
dec
adc
jg
add
mov
xchg
stc
pop
pushf
xor
cmp
xchg
pop
adc
inc
lcall
and
mov
addl
add
mov
sub
in
mov
add
push
add
in
mov
add
rcll
mov
xchg
add
insb
ret
ljmp
or
mov
or
js
jb
mov
pop
lret
mov
mov
jns
repz
mov
add
shll
add
aas
jp
daa
movsl
mov
loope
mov
leave
mov
fs
jl
add
xor
dec
lock
stc
add
and
sbb
add
adc
inc
lods
xchg
dec
ja
add
sub
jge
and
loope
sbb
call
pop
andl
jae
jbe
pop
cwtl
adc
add
pop
or
arpl
out
mov
pop
ret
xchg
jo
sub
pop
mov
out
add
enter
jle
shl
imul
insl
neg
add
dec
sbb
pop
push
outsl
jno
push
xchg
stc
rol
xorb
int3
sahf
dec
aas
pusha
xor
mov
imul
push
mov
in
orl
xchg
pushf
jg
outsb
sub
push
sub
mov
mov
sbb
sub
cltd
mov
roll
or
outsl
icebp
xchg
js
adc
push
pushf
add
push
stos
mov
sub
xlat
in
ds
mov
cmp
out
hlt
add
shlb
add
xor
fwait
cld
jle
rcrb
stc
adc
cmpb
add
sub
fistps
andb
ja
push
jmp
cmp
lcall
int3
jge
or
js
and
les
stc
aam
lahf
ja
xor
mov
push
xor
mov
test
stos
push
or
xchg
and
mov
stc
leave
sar
sbb
push
adc
add
out
jp
and
pop
sub
fwait
nop
js
into
sub
and
rcrb
cmp
mov
arpl
repz
stc
pushf
sarl
loop
add
pusha
or
pop
adc
pop
mov
ret
add
cwtl
xchg
push
inc
scas
in
add
movsb
push
inc
jne
add
push
fisttpl
pop
gs
jnp
pop
push
incl
jae
add
mov
fisubrs
jl
lcall
daa
jmp
dec
cmp
in
xlat
movb
test
in
fwait
pop
call
or
ja
aam
loope
cmp
call
in
fnstenv
enter
rorl
push
std
and
movsl
call
imul
mov
ds
fcoms
movaps
mov
and
add
rclb
int
mov
sub
dec
sbb
add
aaa
popa
rcll
jo
push
mov
push
loopne
insl
mov
push
push
cmp
xchg
ljmp
ja
scas
fcomps
clc
add
jns
ror
mov
push
lahf
dec
pop
or
popa
add
sahf
mov
jecxz
xor
inc
add
inc
or
sub
cmp
mov
xchg
push
sti
enter
lcall
rolb
push
js
shrl
add
push
test
or
call
mov
pop
rcll
verr
mov
add
test
hlt
add
jmp
cmp
fldl
or
aam
or
add
pop
arpl
ja
insl
enter
decb
mov
leave
and
push
adc
or
push
cmp
cmpl
ss
pop
add
add
out
sbb
dec
or
xor
jbe
xchg
cwtl
mov
subl
dec
fmul
cs
inc
orl
rolb
fs
enter
mov
lret
int
js
pop
adc
cltd
test
add
push
or
sub
add
pusha
add
pop
mov
rcll
lcall
cmpsb
add
dec
or
lock
cli
mov
fwait
movsb
sbbb
mov
add
nop
enter
fs
ja
fstps
push
clc
pop
aam
push
shll
sbb
movsl
mov
shrb
sbb
icebp
mov
push
add
mov
sbb
mov
cmp
xor
mov
add
ja
iret
rorb
xor
mov
lret
incb
add
cmpl
jmp
roll
and
mov
call
fadds
mov
mov
or
pop
mov
subb
out
jmp
ljmp
repz
ss
das
or
pop
xchg
mov
jge
push
sbb
jne
cld
hlt
add
pushf
pop
lret
imul
add
or
dec
nop
out
mov
mov
mov
jp
int
test
and
pop
mov
dec
add
mov
mov
push
sbb
dec
clts
mov
cmp
stos
add
movsb
push
clc
cmp
ja
sub
imul
push
or
xor
dec
adc
insb
sub
xchg
popf
add
jle
mov
pop
or
mov
xchg
push
inc
push
flds
adc
push
pop
add
ret
sbb
ljmp
std
mov
icebp
jmp
js
popa
das
call
pushf
call
test
stos
and
add
pop
loopne
add
repz
push
scas
push
push
inc
data16
sbb
pusha
out
sti
mov
ljmp
sbb
outsl
popa
or
add
mov
cli
lods
popf
and
pop
cmp
les
push
daa
das
or
stc
inc
jle
push
dec
push
jne
inc
mov
aas
in
orb
popf
leave
loop,pt
pop
add
cpuid
lock
cmp
xor
in
popa
dec
ret
loope
cmc
or
hlt
add
lcall
popl
mov
shll
add
stos
insl
mov
lret
and
push
inc
addr16
pusha
or
stc
mov
arpl
fiadds
inc
adc
dec
and
lds
out
cld
jno
dec
pop
cmp
cmp
cwtl
js
push
jo
add
scas
inc
push
add
push
xor
sub
jg
sub
and
outsl
dec
test
xlat
mov
add
mov
cmpsl
add
data16
cmp
repnz
push
pushf
in
sti
roll
dec
iret
adcb
nop
jl
dec
loopne
mov
add
xchg
orb
xor
andb
push
iret
lods
xor
mov
pushf
pop
rolb
xchg
sub
mov
mov
stos
add
enter
inc
push
mov
push
scas
inc
pop
mov
and
int
add
mov
test
sbb
xchg
sub
cmc
inc
stos
rorb
aas
adc
pusha
add
push
sub
jle
imul
xorl
add
mov
push
sub
clc
sbb
rol
and
push
testb
mov
sub
xor
subl
data16
and
aaa
push
andb
add
lahf
rolb
fimuls
or
push
and
mov
sub
mov
imul
rol
jb
inc
add
cmp
fwait
adc
stos
add
rcrb
cmp
push
xchg
and
dec
jmp
rolb
fsubrl
ja
mov
rolb
push
sub
rcll
fildll
xchg
ja
pusha
mov
dec
repnz
lret
in
aam
add
xchg
sub
xchg
aas
inc
incb
cmp
jns
das
add
add
aam
movsl
imul
xchg
mov
add
clc
shlb
and
add
xlat
mov
push
out
mov
push
jle
shr
mov
xor
addb
sub
mov
add
addr16
sti
add
in
call
mov
clc
dec
pop
rolb
jno
sub
sbb
jo
clc
in
inc
or
roll
lods
sahf
inc
repnz
adc
int
cmp
negb
mov
push
mov
nop
int
cltd
pop
add
orb
cli
dec
pavgw
out
fsubl
test
add
sub
stc
jp
cmp
scas
loope
or
and
test
add
inc
cmp
and
dec
xchg
mov
add
cwtl
fldenv
subl
les
mov
pop
pop
jl
push
scas
xchg
sar
inc
pop
jecxz
push
add
cmc
ds
push
xchg
sbb
daa
call
out
jb
push
inc
pop
sarl
jo
xchg
add
fwait
ja
adc
pop
in
testb
mov
jns
loopne
add
mov
mov
imul
lds
add
mov
push
add
lret
pop
es
add
sbb
iret
dec
jb
pop
popf
and
dec
mov
fwait
xchg
xchg
mov
adc
add
sub
add
inc
roll
inc
sub
or
sbb
jecxz
fildl
add
aad
or
push
xchg
pop
mov
sub
mov
inc
add
cmpl
cmp
and
sbb
push
cmpsl
push
lock
xor
push
or
cli
testb
xorb
mov
outsb
mov
mov
rolb
inc
repz
testl
cmp
pop
cwtl
stos
sbb
xchg
jae
shll
adcl
mov
scas
pop
fwait
mov
int
push
rcll
addb
lea
xchg
fs
daa
insb
es
pop
jno
dec
add
repnz
outsl
nop
pop
lcall
push
pop
popa
aas
pop
test
dec
mov
pop
inc
adc
jb
nop
push
add
in
inc
imul
mov
and
push
add
pushf
push
xor
hlt
sbb
add
jp,pt
or
xchg
push
leave
mov
ja
sbbb
inc
xlat
jmp
add
dec
ds
lret
push
add
rclb
sub
jecxz
add
inc
add
or
jns
or
insb
orl
iret
add
scas
mov
lcall
add
arpl
and
push
cmpsl
xor
fsubrl
aaa
add
loop
pop
out
lahf
mov
add
inc
sbb
sub
jp
add
enter
pop
add
dec
popa
fidivrs
fldl
adc
xlat
and
or
test
test
mov
mov
imul
xchg
ljmp
inc
sbb
daa
mov
sub
pop
movsl
xor
sarb
jnp
ljmp
pop
jge
test
or
lea
insl
rclb
xor
xchg
jno
enter
mov
dec
push
int
mov
js
notb
and
xlat
je
adcb
popf
push
sbb
jge
cltd
xchg
andb
mov
add
xchg
scas
add
sbb
fldl
pushf
xchg
call
add
mov
mov
sbb
inc
pop
nop
call
inc
add
pop
sub
push
jno
mov
pop
and
out
mov
push
cmp
sti
cld
adcb
in
inc
add
adc
jo
add
or
in
sahf
adc
jecxz
add
dec
lahf
stos
add
imul
mov
sahf
xor
add
cs
pop
in
int
push
cmp
cmp
add
dec
adc
dec
pop
cmp
add
xchg
fwait
add
sbb
and
orb
popf
xor
add
push
adc
mov
adc
add
cwtl
and
xor
mov
stos
pop
movsb
pop
mov
iret
ud0
orb
stos
push
call
fcompl
add
dec
ret
add
sbbb
lods
push
jne
pop
shll
movsl
jecxz
mov
call
add
das
mov
fildll
lret
into
dec
outsb
pop
xchg
and
mull
add
ficompl
out
cs
into
and
dec
jae
pop
add
add
clc
add
jg
push
add
xchg
or
pop
data16
dec
jae
add
mov
lea
sbb
pop
fcmovne
outsl
jae
cld
pop
add
jbe
vxorps
add
adc
add
faddl
mov
mov
cld
lods
add
pop
and
jmp
lcall
jl
popa
add
popf
rcrl
xchg
cmpsl
leave
cmp
jnp
jg
pusha
enter
movhps
lds
je
push
xchg
stc
cltd
pop
push
ret
jecxz
test
in
add
adc
lcall
out
fisubl
jg
inc
push
pop
xlat
adc
pushf
sbb
mov
mov
jmp
sbb
cwtl
lock
mov
xor
mov
pop
call
sub
sub
cmp
push
mov
add
dec
shl
and
inc
jg
push
mov
add
fiaddl
mov
pusha
cmp
xchg
scas
in
inc
add
xor
sbb
icebp
mov
in
out
outsl
adc
push
pop
repnz
insl
pop
int3
dec
lahf
jbe
adcb
adc
sub
xor
addr16
bound
xor
add
imul
inc
sub
loope
add
out
add
aam
loopne
mov
push
mov
jle
mov
aaa
hlt
filds
inc
sub
fwait
in
negl
adc
ss
sahf
mov
cmp
push
add
xchg
arpl
adcl
in
pop
rcll
add
scas
lret
jmp
push
movsb
adc
rol
sbb
lret
or
lcall
add
mov
pop
sbb
js
sub
pop
push
pop
adc
xchg
and
adc
sbb
lods
sahf
and
xchg
mov
or
pop
lds
rcrb
ret
jo
sub
test
and
cmp
mov
ret
or
xchg
mov
fstl
dec
jo
add
mov
in
cmp
add
xchg
adc
cmp
gs
mov
insb
cmc
push
and
cltd
dec
push
push
xchg
movsl
out
xor
in
add
sub
pop
add
cmpsl
xchg
add
dec
loopne
cmc
add
mov
add
jg
sub
add
addl
xor
add
ret
into
leave
xorl
pop
je
sub
xchg
iret
add
push
inc
js
sub
fiaddl
ja
adc
cmp
fwait
push
mov
stos
add
sbb
cmpsb
add
cmp
jl
xchg
mov
inc
mov
and
mov
clc
inc
add
push
adc
repz
push
movq
repnz
lock
adc
xchg
lahf
out
dec
in
mov
mov
dec
data16
pop
jb
repnz
cmp
scas
jns
add
xor
filds
dec
mov
and
inc
cld
aam
cmpsl
or
pop
mov
add
stc
add
aam
pop
testl
xor
icebp
inc
fiaddl
pop
fdivr
popa
add
mov
aaa
lods
les
adc
sub
add
cltd
cmpsb
jno
add
ljmp
lock
mov
lock
add
xlat
add
rcrb
add
test
cltd
shrl
nop
jge
push
movsl
pusha
mov
loope
dec
cmp
mov
or
pop
ja
add
cmpsb
adc
clc
icebp
cmp
jl
add
addb
fnsave
or
loope
pusha
and
add
dec
stos
mov
and
inc
add
sub
lahf
jo
mov
or
or
pushf
arpl
xchg
rclb
xor
add
and
add
fcompl
adcb
cmp
dec
add
sbb
inc
jmp
cltd
dec
and
hlt
lods
xor
movsl
xor
lds
inc
jno
aad
insl
das
ds
pop
and
adc
mov
jb
add
data16
mov
add
add
mov
add
das
inc
xchg
add
adc
data16
xor
loopne
or
lods
aaa
add
push
cwtl
push
xchg
sub
mov
push
ret
jecxz
add
fmul
cmp
mov
xor
jae
and
add
jno
add
sub
inc
cmovbe
dec
add
mov
pop
cmp
loopne
pop
ljmp
subl
insb
jae
jmp
mov
xchg
and
add
aaa
add
mov
movsl
in
insl
or
pusha
adc
add
into
fisttpl
sub
add
popa
add
jns
push
jae
leave
js
sbbb
and
cmp
movsb
xor
add
fldl
cltd
add
outsb
xchg
hlt
adc
mov
outsl
imul
inc
setb
js
push
add
shr
push
jae
pop
mov
aad
cltd
add
leave
mov
dec
lret
sub
mov
ja
cmp
loopne
push
out
sbb
loopne
jne
add
push
sarl
add
ja
sub
sti
push
pop
leave
lret
add
push
add
push
into
test
aaa
lods
mov
mov
addr16
popa
mov
xchg
sarl
verw
xor
sbbl
jo
and
data16
push
add
cmp
sbbb
test
popl
subl
cmp
add
mov
and
jb
xchg
add
xchg
add
pop
sbb
fldcw
jb
push
xor
fmull
adc
cmc
and
scas
jo
add
mov
add
into
mov
fsubs
sbb
outsb
out
movsb
nop
enter
add
push
test
dec
add
mov
add
imul
sbb
xchg
add
inc
sbb
mov
mov
add
shrb
adc
adc
sbb
call
imul
flds
or
int3
push
add
mov
pop
or
pop
in
lcall
ja
les
or
cli
jge
add
arpl
add
mov
inc
add
cmc
inc
push
inc
insl
add
stc
jb
add
mov
xchg
xor
int3
add
adc
lahf
or
xor
out
jg
and
push
mov
jo
or
pushf
fsubrp
outsb
filds
lahf
cmp
sub
jl
decb
insl
cmc
rolb
cltd
push
fidivl
in
stos
iret
add
jns
pop
insb
es
add
in
add
jg
or
mov
dec
xchg
xchg
sbb
cmpl
test
inc
clc
xchg
nop
call
addl
push
add
mov
inc
sbb
add
and
cmc
cmp
jp
xchg
sub
add
std
imul
inc
test
sbb
inc
jl
xor
add
cmp
push
loop
add
or
add
sub
adc
xor
orb
sub
mov
pop
xchg
lods
adc
cmovp
test
xor
fsts
xlat
add
mov
jnp
pop
add
add
xchg
movsl
aad
sbb
lcall
xor
dec
in
add
cmpsb
fs
lret
dec
fstps
nop
add
mov
or
imul
arpl
inc
mov
inc
out
push
mov
cmp
push
and
lcall
lods
add
sbb
loop
sbb
add
test
cmp
inc
out
xchg
rorb
mov
shl
fucomp
add
or
jb
adc
or
into
and
mov
dec
xchg
lret
sti
call
cld
loope
push
mov
mov
add
test
add
push
push
fcoms
js
pushf
xchg
bound
adc
dec
ljmp
mov
es
add
xchg
and
jb
aam
dec
cmpsb
data16
add
ret
mov
jge
or
or
loopne
int
aas
xchg
cwtl
add
sub
sub
mov
pusha
and
mov
cmpsb
mov
push
push
jo
sbb
incl
popf
sti
adc
bound
add
out
pop
popa
fdivrl
add
xchg
xor
and
push
data16
dec
addr16
xor
or
mov
dec
xor
cmp
test
sahf
fsubl
popa
add
daa
sbb
cmp
es
pusha
add
bound
adc
dec
mov
fldenv
push
add
adc
mov
stos
cld
sub
ret
shll
dec
data16
cmc
rcrb
dec
add
cmpsb
sahf
movsb
lea
xor
sbb
ret
repnz
xor
push
add
aad
add
in
jb
cltd
inc
inc
sbb
jl
add
outsb
jae
push
insb
test
add
xor
xor
es
or
sub
inc
lods
stos
adc
fisubs
cli
pushf
dec
out
xor
cmp
lods
adc
inc
es
sti
mov
fidivl
xor
mov
lahf
stos
mov
xor
add
loope
outsb
ss
pop
add
sub
and
xchg
ds
inc
gs
mov
test
add
xor
jg
lahf
and
adc
hlt
mov
bound
and
mov
aad
and
loopne
fisubrs
add
push
clc
das
jg
add
nop
mov
add
lock
and
fisubs
sahf
out
adc
add
ja
sarl
stos
lods
sbb
movsl
dec
jae
xchg
xchg
xchg
jns
std
pop
inc
dec
dec
sti
add
loope
fwait
sti
cld
adc
scas
cltd
loop
popf
les
ljmpw
add
mov
add
xchg
aam
pop
add
mov
and
and
add
push
add
adc
sar
cmp
mov
hlt
jns
dec
sbb
mov
cmp
flds
lcall
sahf
mov
or
add
mov
xlat
rclb
ret
add
ret
sbb
or
sbb
add
xor
loope
mov
mov
test
addl
push
sahf
push
add
arpl
pop
in
sub
fs
loop
inc
pop
cmp
mov
add
shrl
in
sbb
mov
js
ss
add
sub
loop
and
int
gs
rorl
bound
jns
jle
dec
adc
mov
add
je
or
cmpsb
sub
sub
js
xchg
cmp
dec
lock
sahf
mov
or
inc
mov
add
pop
and
dec
inc
push
dec
mov
movsb
inc
bound
pop
pop
mov
push
test
jge
dec
test
adc
inc
push
push
lcall
add
jmp
mov
fsubrp
push
add
push
in
push
cmpsl
cltd
add
popf
mov
aad
rorl
sub
add
push
jge
add
lods
cmp
pop
jmp
push
call
mov
loope
add
test
push
rcrb
mov
sahf
add
loope
stos
loopne
push
js
ret
pop
jo
fdivrl
pop
cmpsb
and
ficompl
push
jae
jmp
add
sub
pop
lea
adc
in
fildll
dec
push
out
outsb
stos
jg
sub
cmp
je
jns
fsub
cmpb
mov
movsl
and
jne
clc
and
add
adc
rcrb
mov
outsb
sub
push
mov
mov
cmc
loop
cltd
jno
jge
dec
inc
add
enter
cmc
add
push
add
add
cltd
jge
add
out
out
roll
lret
js
outsb
xor
cld
add
sbb
xor
inc
sbb
test
mov
std
push
pop
cli
imul
push
pop
add
fchs
pop
mov
and
cmpsb
sbb
scas
add
movsb
xchg
popa
sub
imul
inc
loopne
idiv
xchg
add
mov
jge
push
roll
cmp
popl
fldcw
mov
push
cld
addb
cmp
push
bound
add
jle
or
pop
add
adc
and
dec
push
adc
movsl
jb
jnp
add
insb
jno
push
loopne
pop
sahf
xlat
ds
test
ja
mov
mov
cmpsb
add
pop
cmp
push
fcmovu
out
inc
mov
xchg
add
mov
sub
inc
ljmp
fstpl
push
outsl
add
jmp
xor
das
or
sub
outsl
andl
popf
mov
or
adc
add
in
sub
inc
hlt
add
popf
ret
jae
incb
mov
imul
add
incb
mov
ljmp
mov
add
arpl
add
idivb
imul
inc
rorb
jmp
cmp
mov
mov
sbb
andb
sahf
pop
sub
xor
lock
clc
sbb
cmp
jo
jle
cmp
jnp
sub
lret
mov
pop
pusha
lods
mull
out
repz
xchg
xchg
cmp
xchg
jne
addb
xchg
xchg
add
add
mov
push
pusha
clc
roll
push
pop
pop
push
cmpsl
dec
aad
cmp
insl
rorb
or
and
sbb
stos
enter
xor
lret
add
sub
push
insb
addr16
pop
pop
cltd
cs
movhps
subb
mov
loop
out
into
pushf
les
adc
cmp
je
cltd
pop
xchg
cmp
pop
mov
es
or
popf
jne
ret
or
arpl
xchg
mov
rorb
cmpb
leave
add
enter
push
shlb
nop
push
bound
rcrb
cltd
add
adc
mov
jae
jecxz
push
add
in
push
enter
mov
into
pop
add
add
inc
mov
push
push
ss
out
adc
mov
add
adc
jp
xor
dec
das
js
int
xchg
pop
mov
xchg
and
sbb
add
fdivp
int
lods
add
inc
sub
add
sbb
call
shrb
mov
pop
lods
dec
xchg
movsl
jecxz
int3
add
sub
inc
cld
xor
mov
sbb
inc
fwait
dec
dec
pusha
negl
fldl
sub
test
xorl
add
add
add
rclb
xor
add
cmc
cli
push
test
add
cmp
mov
in
ja
jle
or
xchg
and
mov
pushf
mov
mov
xchg
jl
mov
push
inc
pop
push
add
pop
sub
lret
mov
lock
leave
ror
inc
repz
or
mov
cltd
aaa
in
pop
fiadds
daa
pop
xchg
mov
inc
fwait
add
xor
sti
ja
pop
adc
mov
xlat
xor
iret
mov
add
test
pop
cmp
mov
jbe
es
rolb
test
sarl
pop
cmp
enter
pop
iret
movsl
sub
mov
rolb
jp
ret
jns,pn
std
stc
jae
cmp
ss
add
inc
or
fnstsw
add
inc
pmullw
rorl
xor
leave
or
hlt
add
movsl
test
add
ret
mov
outsb
repz
inc
mov
mov
pushf
dec
mov
addb
push
cmp
repnz
add
es
add
jle
mov
jge
mov
lock
js
in
out
sub
test
loopne
lahf
mov
mov
das
xor
call
sbb
inc
dec
add
jno
pop
push
pop
adc
hlt
mov
jmp
lock
cmc
movsb
cwtl
and
test
or
mov
lock
rclb
dec
dec
cmc
mov
add
jmp
outsl
xchg
in
or
add
mov
and
cmp
cmc
lds
add
add
dec
mov
imul
mov
loope
and
scas
mov
iret
add
adc
imul
mov
xor
xchg
popa
clc
repnz
jo
je
pop
cmpsb
or
add
adc
fs
mov
out
add
movsb
pop
outsl
imul
jmp
ljmp
sub
lahf
mov
xchg
xchg
test
and
add
pop
or
mov
popa
inc
add
bound
cmp
movsl
inc
adc
rorl
dec
shl
adc
cmp
cmpsb
fs
fildl
icebp
mov
lock
xor
adc
les
jecxz
add
lods
add
mov
push
in
insl
adc
je
popa
rorb
pop
dec
add
dec
sbb
insl
data16
xor
popa
pop
dec
fidivl
sbb
sarb
ret
sti
into
sarl
cmpsl
add
rcrb
in
mov
out
dec
pop
rcrb
fadds
pop
outsb
pusha
mov
repnz
sbb
sbb
into
adc
jp
loop
nop
aam
pusha
sbb
jbe
orb
cmc
int
add
inc
xchg
mov
out
daa
and
or
call
or
add
leave
pop
mov
push
jae
add
test
popf
out
je
jb
mov
xor
rolb
cwtl
push
dec
xchg
jle
add
jo
lret
mov
and
add
adc
pop
and
fwait
mov
pushf
push
sub
or
mov
add
bound
inc
testl
sub
ss
orl
jo
loope
push
mov
add
jl
dec
cmp
je
add
imul
xor
add
jae
sbb
mov
outsl
jnp
out
jmp
test
sete
xor
test
in
stc
pop
mov
sub
cmpsb
pusha
aam
pusha
in
call
iret
lret
add
js
mov
jbe
add
sub
and
out
cli
xchg
mov
or
push
jge
cmp
inc
add
ds
orb
pop
mov
add
xlat
in
fstl
cmpsb
adc
add
imul
outsl
add
icebp
dec
enter
stc
in
loopne
fwait
jecxz
mov
cmpsl
mov
add
imul
mov
xor
add
jmp
rcrb
dec
pavgb
inc
sub
xorb
xor
repnz
lsl
sub
sub
mov
data16
enter
in
xchg
ljmp
movsl
jg
cmp
shll
stc
mov
push
aaa
push
pop
add
ret
sahf
test
pop
jno
push
inc
pop
test
shrb
dec
xorb
inc
adc
pop
add
jo
mov
iret
or
movb
popa
stc
dec
and
add
pop
scas
rcr
push
out
minps
in
mov
sbb
dec
inc
jg
iret
sub
and
xchg
pop
push
or
std
adc
pusha
xchg
int3
xchg
enter
sahf
xor
cli
pop
dec
popf
roll
gs
pop
stc
insl
and
add
int3
jae
push
dec
adc
shlb
jns
ljmp
and
clc
sahf
stc
hlt
inc
mov
rol
rorb
lret
pop
fisubs
fmuls
inc
mov
aas
sti
std
mov
sbb
pop
incb
insb
imul
jbe
and
fs
pop
test
icebp
xorb
mov
push
jns
mov
adc
popl
repz
and
cli
pop
add
sub
sub
add
xor
sub
cmp
pop
add
pop
sbb
jne
cli
subl
add
lds
out
add
sub
adc
test
out
pop
pushf
aad
and
inc
cli
and
mov
dec
xchg
xlat
xlat
mov
call
sbb
mov
test
les
lret
sbb
push
cmp
fcompl
imul
andb
popa
adc
pop
jo
add
adc
xchg
add
lahf
mov
pop
add
stos
jmp
int
jge
add
sbb
out
add
fcmovnb
ret
lahf
sub
mov
lret
cmp
xchg
xlat
imul
lods
jmp
ret
adc
and
mov
push
add
xor
mov
aad
or
lds
jo
mov
out
and
add
je
sub
inc
and
adc
movsb
inc
dec
or
xchg
ljmp
arpl
pusha
push
or
insb
and
mov
add
xor
mov
push
lock
push
add
xlat
xor
mov
fistl
cmp
js
sub
lcall
andb
sbb
pop
jge
cmp
dec
and
call
push
aaa
push
ret
adc
sub
fdivrs
pop
sbb
adc
inc
add
jle
sub
xchg
sub
addr16
sub
xchg
addl
ja
add
push
lock
movsl
and
fmuls
ret
xchg
adc
bound
xor
insb
and
cmp
adc
mov
ds
or
sbb
inc
sbb
push
jge
cld
lods
sbb
adc
sbb
and
icebp
xchg
cld
data16
jno
repnz
incb
adcl
and
mov
sub
xlat
and
sarb
add
ficoml
push
ret
popf
push
xor
jnp
add
push
in
push
xlat
testb
fpatan
xchg
jo
rcll
call
in
out
popl
push
outsb
pop
inc
xchg
movb
scas
xchg
mov
add
jae
and
jmp
jmp
inc
dec
pop
adc
in
jns
mov
pop
in
jmp
adc
push
je
push
clc
mov
add
andl
inc
add
inc
xchg
sahf
idivl
and
mov
das
mov
scas
pop
dec
adc
or
push
add
xchg
loop
imul
sbb
outsl
shll
or
fstpl
in
lds
sub
pop
out
add
sbb
add
aaa
sahf
test
jmp
fildl
and
add
pop
add
enter
add
push
push
add
imulb
mov
sbbl
mov
dec
iret
repnz
mov
xor
inc
fsubs
insl
stc
pop
mov
inc
mov
cmp
cmpsl
loop
in
cs
ret
sbb
add
add
hlt
push
cmp
xchg
add
dec
pushf
jl
add
mov
mov
or
or
andb
add
sbb
push
dec
aas
push
out
sysenter
call
adcl
mov
add
sub
dec
nop
call
inc
cmp
cwtl
les
and
add
imul
enter
mov
or
cmp
dec
cltd
pop
pop
mov
std
aam
pop
pushf
push
pop
adc
sub
jle
adc
cltd
xlat
add
mov
push
mov
add
sbb
jne
cmpsb
push
mov
addl
imul
fistpl
pop
jo
call
pop
mov
test
mov
sub
sahf
fimull
push
adc
faddl
adc
pop
int3
add
insl
ss
and
daa
sbb
adc
lea
clc
idivb
xor
push
inc
inc
int
jne
mov
mov
adc
shr
mov
mov
out
pop
and
push
mov
ret
push
jae
insl
fs
les
mov
std
gs
add
lret
loopne
pop
test
mov
imul
mov
mov
adc
pusha
mov
dec
jge
out
add
mov
and
daa
loopne
stos
fwait
add
aam
mov
push
inc
or
test
fsqrt
dec
push
add
nop
fdivp
pushf
push
adc
sahf
js
sbb
dec
inc
popa
add
int
adc
iret
fadds
dec
adcb
ss
jo
sub
mov
push
jb
add
lods
mov
rcrb
and
mov
xor
add
pushf
das
fiadds
xor
mov
ja
push
aas
jb
sahf
cmp
imul
add
xchg
jecxz
out
jp
push
test
push
cmc
mov
add
mov
aaa
pop
or
add
inc
dec
lea
ja
xor
movsb
sbb
mov
stos
dec
and
adc
add
stc
mov
add
jbe
xchg
push
andl
test
mov
subps
adc
scas
lahf
sbb
add
mov
and
adc
xor
dec
lods
movsl
loop
inc
xchg
mov
or
popa
jmp
mov
add
cmp
cld
addb
and
out
lcall
cmp
mov
add
sbb
out
scas
and
pushf
lahf
mov
cmpsb
popa
pop
enter
stos
add
int
loopne
mov
push
mov
mov
sahf
add
aam
leave
data16
mov
xchg
stos
add
mov
adc
push
cmp
xlat
in
mov
insl
stos
sbb
call
test
jg
adc
leave
testb
mov
aad
ljmp
cwtl
popa
cmpsb
and
test
faddl
add
xor
pop
ja,pt
add
popa
loop
adc
daa
test
pop
andb
bound
mov
mov
push
sub
xlat
push
add
xor
cmc
adc
aas
sbb
dec
pop
or
pop
add
jcxz
aaa
or
and
adc
jns
pop
mov
ljmp
pop
aas
incb
out
shlb
sbb
cmpsb
add
ja
or
lcall
mov
jns
pop
xchg
cmpsb
dec
add
jnp
mov
repz
mov
push
mov
addb
shlb
pop
and
stc
stos
rolb
sbb
dec
in
shlb
fidivl
add
inc
sbb
mov
cmc
imul
mov
push
mov
aad
jecxz
inc
orb
inc
sbb
js
ret
shlb
int3
add
xlat
jno
icebp
cli
inc
mov
add
pshufw
add
dec
mov
add
inc
jo
stos
aad
loope
inc
addb
das
rolb
movups
adc
sahf
or
push
add
in
xchg
cmpsb
in
pop
fcomps
int
mov
sub
es
mov
xchg
aam
sbb
cmpsl
cmc
mov
push
push
cmp
lods
xor
pushf
ljmp
pop
add
cs
sarb
outsb
shrb
add
test
sub
scas
arpl
mov
movb
add
pop
sbb
xchg
ds
mov
and
add
rol
and
stc
add
lcall
add
test
jae
push
ljmp
dec
pop
push
pusha
push
adc
dec
adc
jmp
mul
xor
loop
add
dec
int3
bound
jle
mov
mov
cs
mov
into
sub
or
pop
jne
mov
sbb
or
sbb
adcb
sahf
mov
xchg
out
push
cmp
jecxz
inc
jns
sbb
push
cmp
das
jl
decb
jecxz
push
cmpsl
dec
add
mov
push
xlat
jge
out
dec
addr16
test
cmp
sbb
adc
sahf
andl
fwait
das
pop
enter
mov
jb
rolb
add
sbb
mov
add
pop
iret
mov
mov
repz
ror
lahf
leave
pop
ljmp
repnz
ud2
aad
push
int3
add
inc
js
cmpsb
inc
push
xchg
add
sbb
aas
repz
adc
data16
add
add
cmp
mov
jnp
ljmp
pusha
xor
pop
pop
movl
jbe
gs
add
imul
add
cmpsb
je
imul
xorl
movsb
adc
jg
mov
test
cli
push
daa
add
scas
push
or
subb
pusha
fwait
xor
add
add
mov
loope
add
mov
mov
push
mov
pusha
nop
pop
ds
test
test
dec
push
mov
add
ret
mov
out
add
dec
and
push
out
inc
shrb
sbb
lret
xlat
xchg
xchg
mov
daa
shrb
adc
bound
xchg
addr16
and
cwtl
gs
pop
add
push
repnz
cli
in
dec
xor
and
add
leave
enter
and
cmp
add
js
icebp
je
push
je
add
xchg
mov
add
xor
ljmp
jnp
xor
pop
cmp
in
or
negb
clc
add
add
and
test
out
pop
pop
shrl
xchg
mov
add
sbbb
sub
pop
insl
sbb
dec
xchg
push
add
push
jl
add
sub
ds
mov
stos
push
cmp
inc
mov
sub
imul
cmp
dec
add
push
leave
pop
in
mov
xchg
outsl
fimuls
add
xchg
add
sub
jo
pop
imul
clc
faddl
clc
lret
add
enter
adc
lods
add
and
add
jns
adc
inc
clc
or
mov
jae
rorb
test
rcrb
shr
add
cmp
push
add
out
mov
sbb
ret
dec
mov
hlt
fucomip
add
jae
sub
cmp
add
daa
jp
mov
push
add
inc
fldlg2
cmp
gs
add
faddl
add
xor
mul
and
add
cmp
xor
mov
rcrb
add
sub
add
ret
in
in
mov
xchg
fnstcw
add
bndstx
in
pusha
pop
sbb
int3
push
test
rorb
in
pop
add
jg,pt
addb
aad
sbb
cmpsb
inc
lods
add
fwait
dec
lock
icebp
push
bound
jecxz
dec
les
popf
pop
sbb
and
pop
add
mov
adc
fcoms
lcall
dec
dec
inc
lods
or
inc
int
cmc
loopne
rorl
pop
add
out
scas
lret
cli
or
add
test
sub
jecxz
add
int3
jbe
mov
call
push
clc
mov
fwait
sbb
push
sar
and
xchg
jae
add
inc
mov
shll
fldl
push
inc
cmpl
je
mov
add
and
in
ja
inc
mov
pop
inc
add
jg
cmpsb
add
or
gs
fnstsw
shrb
pop
add
outsb
inc
pop
add
fimull
mov
push
ret
in
sub
mov
js
push
or
test
roll
rolb
mov
imul
push
fsubs
xor
enter
lock
jnp
cld
push
xchg
jo,pn
loopne
clc
popw
add
add
add
adc
sub
and
rolb
out
add
pop
or
dec
das
push
mov
add
ljmpw
push
push
shr
add
cmp
and
mov
out
rcrb
jbe
pop
in
inc
ret
jns
pusha
xchg
add
ret
add
enter
std
sub
sbb
out
es
sub
jns
add
lret
outsb
ss
iret
jmp
cwtl
mov
out
adc
xor
sbb
jecxz
clc
adc
in
sbb
xor
jl
adc
fmuls
incl
testb
rcr
add
cld
xchg
pop
test
rorb
in
icebp
add
arpl
jbe
loopne
add
push
cmp
insb
daa
xchg
int
inc
add
insl
xchg
notl
or
jg
jecxz
fisttps
insl
jl
das
push
sbb
mov
inc
cmpsb
dec
dec
jmp
jecxz
or
mov
pop
and
xor
xchg
fsts
xchg
sbb
cmp
inc
xchg
push
mov
jecxz
subl
inc
add
push
mov
cmpsb
enter
push
int
notl
iret
mov
push
fadds
pop
cmp
popa
jnp
je
pop
mov
outsl
mov
cmp
xor
int
mov
loopne
cmc
mov
call
mov
xchg
lds
mov
mov
and
jns
in
inc
ds
inc
filds
jno
inc
ss
push
test
test
dec
inc
stos
imul
xchg
or
frstor
cmp
in
add
cld
mov
jb
mov
fidivl
stc
mov
adc
jmp
push
lods
outsl
sarl
xchg
call
dec
dec
push
stc
cmp
and
add
or
lret
dec
dec
xor
popf
xchg
les
add
jns
in
jb
je
inc
mov
xchg
sti
push
pusha
scas
push
insl
mov
push
pop
xchg
movsl
dec
xor
out
mov
pop
mov
jl
faddl
and
mov
popf
or
fsubs
pop
add
stos
pop
roll
add
or
jl
jmp
rorl
xor
xor
sub
lock
ret
inc
lret
mov
subl
lds
add
roll
mov
mov
and
add
jl
xchg
inc
jo
add
clc
lea
sbb
sbb
mov
repnz
je
icebp
call
push
dec
or
jle
dec
xor
rcll
das
out
push
out
pop
jge
lock
pusha
lret
sub
add
push
dec
inc
mov
pop
xor
and
scas
pop
repz
or
jl
repz
or
and
in
enter
cmp
mov
inc
and
xor
or
and
hlt
aaa
pop
push
mov
divl
sbb
repz
dec
sbbb
lcall
aaa
adc
test
decl
daa
add
push
std
imul
mov
das
sbb
sbb
mov
sub
in
jecxz
lock
ljmp
dec
loop
add
hlt
add
inc
mov
xchg
add
imul
out
xor
and
shrb
add
insb
gs
add
dec
add
popl
xchg
das
pop
mov
imul
imul
repz
xor
push
fstpl
add
jae
push
data16
mov
add
cld
loopne
sub
outsb
repz
imul
add
jl
ret
notl
add
and
jns
or
add
and
add
cmp
rolb
mov
or
into
pop
sbb
inc
leave
add
pop
add
cs
jmp
or
in
xor
dec
in
aam
pop
mov
inc
add
push
aad
fucom
jge
add
mulb
jmp
in
add
jno
mov
inc
mov
lods
aas
add
pop
lret
add
cmp
and
pop
or
test
daa
xchg
pop
add
bound
outsl
and
scas
cmp
nop
mov
jmp
popf
lahf
xchg
mov
aam
jmp
andl
mov
cli
cmp
outsb
adc
mov
fstl
jno
adc
pop
sub
loope
mov
add
imul
add
cmp
daa
loop
outsl
movsl
pop
mov
adc
pop
orb
push
push
fsubl
adc
jbe
lahf
pusha
mov
loop
insl
fistpl
out
add
add
push
pop
repnz
pop
pusha
inc
cmp
bound
fmull
xor
add
push
push
aam
adc
fwait
and
pop
popf
mov
in
call
into
add
movsl
and
pop
lcall
lods
imul
inc
lcall
mov
aam
mov
mov
or
enter
sar
into
sbb
nop
inc
stc
xchg
pop
push
jne
mov
xchg
sahf
negb
add
movsl
cmp
add
or
ret
mov
fsubrs
rcrl
in
aas
jp
add
jl
insb
iret
out
push
fidivs
inc
sbb
mov
aad
in
cwtl
repz
out
pop
movsl
cmp
lock
shll
add
xlat
cmpsb
xorl
inc
sbb
jmp
dec
push
jno
in
mov
enter
sub
stos
pop
jp
pop
or
fcmovb
fucomip
xor
add
xchg
jg
or
add
xchg
fdivl
dec
mov
jne
test
leave
cmc
aas
sarb
mov
fcomi
lea
repz
adc
out
add
dec
add
push
in
pop
lea
push
mov
push
leave
std
sbb
roll
cmpl
cmpsl
outsl
ret
nop
add
popf
mov
sub
enter
sbb
push
dec
sub
pusha
icebp
mov
scas
inc
pop
adc
dec
adc
sbb
dec
inc
imul
adc
xchg
mov
mov
mov
or
adc
ds
push
daa
inc
push
pop
inc
out
or
and
and
adc
es
cmp
subb
xor
sub
sub
mov
insb
jno
add
popa
fsubl
sub
add
test
jecxz
inc
mov
add
mov
ds
fisubs
hlt
stos
stc
loopne
es
sbb
lds
lods
add
mov
sbb
test
jae
ret
sbb
push
shrl
push
xchg
cld
xchg
jmp
cmp
rcll
add
xchg
pop
es
nop
das
add
inc
imul
or
mov
or
add
xor
or
icebp
bound
in
call
add
cmp
push
pop
loopne
add
or
jecxz
add
mov
xchg
adc
add
lock
push
sarb
orb
push
jb
jns
or
mov
paddsb
push
cmp
add
repnz
inc
sbb
into
push
iret
sub
xchg
in
cmp
inc
add
push
and
sahf
xorb
inc
add
pop
mov
mov
ret
fmull
and
cmpsl
aam
xchg
les
call
adc
cmpsl
shl
rcrb
jp
mov
jae
sub
mov
add
pop
sbb
pop
jne
clc
add
cmp
jmp
xchg
push
loop
repnz
out
cmpsb
fcoml
and
movb
std
pop
add
sub
or
jbe
sahf
lock
les
mov
cltd
adc
mov
add
mov
xchg
add
rcr
adc
iret
inc
inc
xchg
push
cmp
sbb
icebp
and
rol
mov
aam
add
cmp
xchg
js
or
dec
lret
stc
or
add
inc
es
loope
push
cmpb
or
add
mov
popa
pop
jnp
jle
adc
mov
jae
push
cli
movsl
fldl
adcb
or
pop
es
xor
inc
rcll
pop
push
outsl
into
lcall
pop
add
leave
add
mov
fdivr
xlat
add
lock
outsl
xchg
mov
ljmp
add
xchg
mov
sub
and
sahf
popf
xchg
add
repnz
adc
sub
add
ret
cld
dec
adc
aas
fstps
dec
mov
or
daa
sbb
idivb
repnz
out
sub
add
rol
fstps
mov
pop
dec
xor
scas
sub
mov
cmpb
add
pop
cmp
hlt
loopne
mov
cltd
push
pop
or
fs
pop
imul
mov
adc
rcrb
add
mov
stos
or
add
push
sbb
sahf
lret
add
cmp
ror
mov
sbbl
xlat
test
push
pop
pop
pop
std
jno
addr16
add
inc
aas
push
mov
push
lds
jmp
inc
js
call
inc
mov
cmpl
cmp
aaa
sub
push
jle
pop
xor
add
cltd
sub
aad
inc
sarb
ljmp
add
add
enter
daa
push
mov
aad
sub
and
mov
les
out
sbb
add
inc
movsl
mov
hlt
lds
in
int
jb
cmp
add
xchg
and
stos
jp
aas
stc
jo
cmp
adc
mov
aas
inc
pop
add
add
jp
nop
or
xchg
cmp
aaa
inc
dec
add
mov
fistpl
jns
push
fmuls
add
lret
sbb
add
inc
loope
adcb
or
nop
lea
cwtl
js
add
inc
push
sub
fsubp
xor
xchg
sub
or
arpl
movsl
pop
or
flds
or
add
dec
inc
adc
icebp
addb
jns
add
addl
inc
xor
push
add
pop
ljmp
in
fldl
pusha
inc
jb
cmp
es
out
xchg
sub
adc
orb
jle
inc
leave
and
add
xor
popf
add
int
ja
ret
fwait
es
sbb
mov
pop
add
mov
pop
add
out
imul
add
mov
iret
jo
into
or
gs
scas
sarb
jns
cmp
ja
mov
jp
outsb
or
repz
adc
int3
push
pop
xchg
in
fadds
lods
push
dec
popf
ss
push
inc
push
scas
pop
pop
xchg
jl
push
hlt
cld
cmpsb
mov
add
dec
push
mov
jb
jecxz
cmc
push
xor
test
jnp
add
jmp
aas
push
xor
or
add
popa
idiv
add
rolb
clc
cmp
or
sbb
jp
mov
jo
add
fs
or
pop
add
adc
jecxz
daa
ret
xor
mov
js
or
imul
mov
orb
inc
jmp
push
out
adc
add
cmpsl
test
push
es
inc
out
jle
cmp
les
fadds
fistps
add
stos
imul
hlt
add
stc
sbb
xor
test
cld
scas
mov
mov
sbb
cmp
cmpb
pop
fmuls
add
mov
vpmulhw
and
int
inc
add
push
push
shlb
and
out
mov
arpl
push
mulb
push
cs
pushaw
mov
shlb
out
add
lcall
fdivs
ds
sar
mov
fldenv
lds
pusha
test
loopne
xchg
fisubl
pop
lods
pop
aas
outsb
cld
sbbb
cmp
jo
cmpsl
adc
xchg
mov
xlat
addb
jmp
jle
and
dec
add
or
loop
dec
aas
popa
jo
mov
mov
rcrb
xor
xchg
ret
jmp
push
adc
xchg
aam
add
or
and
sub
push
dec
js
push
and
insb
xor
cmp
add
mov
dec
mov
or
add
gs
cmp
xchg
imul
jb
out
idivb
add
arpl
aad
sbb
insb
and
addr16
or
lea
jge
inc
cmp
ds
clc
pop
sub
push
lock
adc
xchg
cmp
nop
dec
out
xor
imul
ljmp
mov
cmp
xchg
push
jae
jecxz
xchg
add
jmp
cmp
mov
gs
push
mov
push
test
cs
xchg
rorb
loopne
pop
sub
cmp
scas
mov
outsb
out
sbb
inc
lahf
adc
add
int3
inc
mov
ljmp
xchg
xorb
sbb
fcmovu
lahf
mov
add
add
mov
mov
add
jg
add
clc
jo
bound
pop
push
ljmp
pop
xchg
js
cmp
popa
pop
rcrb
fprem
in
mov
push
cwtl
mov
loope
int3
mov
in
fwait
cli
and
adc
add
mov
jle
adc
les
sub
mov
cli
push
dec
jmp
stos
add
sbb
push
xlat
out
sbb
pop
addb
add
popf
push
inc
mov
inc
pop
sub
stos
jmp
sub
mov
and
clc
sbb
fisttpll
add
lahf
add
pop
pop
add
dec
mov
lea
loope
cmp
mov
add
mov
sub
fsubrs
dec
arpl
pusha
dec
mov
add
xchg
pop
icebp
add
sbb
sbb
mov
rolb
mov
and
mov
xorl
aad
mov
jp
ds
pop
or
fldl
nop
insb
jge
loopne
sub
add
lea
cmp
push
or
inc
add
adc
adc
push
add
jecxz
lret
aam
cmc
ja
loop
mov
sbb
add
mul
jl
out
add
je
adc
and
push
mov
push
aas
addr16
call
mov
js
pop
test
nop
jb
adc
sbb
mov
ret
mov
add
dec
sub
push
sub
adc
loopne
inc
arpl
fwait
xor
xor
xor
test
pop
sub
adc
dec
out
ja
or
jae
rorb
dec
or
cmp
mov
sti
lock
mov
insl
pop
not
add
mov
es
add
insb
and
or
pushf
xchg
add
pop
jge
lret
cld
in
gs
adc
jnp
add
pop
jo
shr
add
xchg
in
cwtl
jmp
jnp
neg
test
test
adc
je
sbb
sub
sub
scas
or
shr
les
or
mov
and
mov
testb
mov
aas
add
mov
mov
jmp
mov
pop
cmc
dec
add
xor
cmp
fmuls
add
push
decb
ljmp
pusha
adc
lods
push
cmpsl
cmpsb
in
lds
jo
popf
outsl
orb
out
mov
add
jo
or
gs
add
outsb
rolb
test
std
push
aad
negl
or
pop
mov
jne
pop
ret
cmp
in
movsb
enter
sub
jno
mov
and
cmp
pop
pop
add
ret
cld
out
add
adc
nop
test
xchg
mov
inc
inc
adc
outsb
rcrl
negl
add
lock
adc
jmp
mov
mov
loope
cmp
fcmovb
mov
add
lea
dec
dec
pop
rorb
icebp
pop
fcoms
inc
in
push
push
mov
lods
incl
jmp
add
popf
mov
fcoml
lea
cmpsb
push
push
int3
jns
mov
or
stos
out
cltd
add
jb
and
mov
test
mov
imul
stos
adcb
pop
cli
rorb
jno
testl
xor
mov
or
sbb
push
xchg
and
daa
push
mov
cmpsb
add
adc
add
mov
adc
jmp
call
call
lock
pop
roll
add
sbb
sbb
add
outsl
movsb
jno
xor
cmp
sbb
iret
fstl
aam
decl
orb
sbb
fldl
cmpl
mov
add
je
mov
pop
cmp
repnz
popa
inc
sub
ds
sub
cmp
push
xorb
fucomp
les
pop
addr16
out
mov
xchg
mov
cmp
ja
add
pop
ss
adc
adc
cwtl
push
shlb
cmp
mov
adc
movsl
rorl
test
aam
mov
sub
or
jno
cmpb
sbb
lods
add
inc
cmp
int
pop
loopne
rcll
aas
add
jmp
lods
test
add
cmp
cmp
lea
sbb
pop
notl
add
in
sahf
arpl
pop
fadds
popf
pop
sbb
js
pop
movsb
js
add
mov
sbb
pop
imul
pop
mov
test
fs
push
cmp
jmp
dec
mov
push
inc
mov
js
rcll
test
jge
int
in
out
add
push
movb
inc
scas
cmp
mov
jns
add
pop
adc
cltd
in
sbb
inc
fadds
inc
cmp
xor
jge
or
filds
xor
loopne
adc
movsb
sub
lahf
push
cmp
inc
sub
sub
inc
jge
jnp
mov
add
outsl
dec
xchg
pop
xor
mov
push
enter
mov
js
in
fs
or
jae
popa
repnz
adc
mov
add
xchg
add
mov
mov
js
addb
sbb
mov
sub
xor
scas
add
dec
jge,pt
lock
cmp
and
cmp
sub
pushf
pop
or
nop
test
ret
repnz
setae
push
and
stos
daa
inc
in
dec
idivl
call
leave
fldl
ja
test
jmp
pop
add
cmc
jp
lret
in
fwait
add
push
mov
sbb
adc
push
insl
inc
fstpl
pop
add
cld
adc
mov
jno
lods
add
mov
aam
mov
mov
push
loope
add
pusha
out
stos
cmp
lahf
cmp
outsb
insb
push
push
push
xchg
stos
inc
push
inc
enter
jecxz
xor
jbe
test
pop
rcrb
aaa
push
push
sbb
xchg
jp
mov
cmp
mov
or
xlat
out
push
imul
inc
and
pushf
inc
sub
cwtl
out
or
pop
xor
mov
test
xchg
add
repz
cmp
mov
insl
cmp
ret
inc
fbstp
pop
iret
adc
out
dec
add
test
add
cmpsl
hlt
mov
ja
or
push
roll
js
shlb
in
cmp
mov
aam
push
pop
xor
sbb
in
and
or
push
test
mov
sysexit
xchg
ret
push
pop
pop
pushl
add
fwait
sti
and
fdivrl
js
loop
insb
jecxz
nop
mov
jg
rcrl
inc
sti
add
arpl
adc
mov
movsb
dec
js
add
cmp
cmpsl
fcoml
add
fs
add
inc
into
shlb
mov
sub
fcomi
mov
aam
rolb
inc
pop
cmp
fiaddl
xchg
dec
cwtl
sbb
push
pop
loopne
nop
lods
in
mov
js
ds
stos
stos
dec
inc
pop
xlat
fucomp
add
or
in
sahf
add
ror
mov
and
push
add
cmpsb
sub
xchg
xor
add
fsubs
aad
js
push
movsl
icebp
jp
push
pop
mov
fldt
or
cmp
lods
incb
add
ds
divb
lock
stc
call
cmpb
in
adc
sub
lea
cltd
cmp
andb
cwtl
fisubrl
mov
sub
jb
dec
sub
inc
daa
gs
pop
xchg
add
and
popf
clc
loop
dec
or
fwait
cmpsb
add
xchg
pop
mov
add
mov
adc
icebp
xchg
popa
push
out
push
insl
mov
mov
or
lods
mov
movb
cmp
adc
arpl
add
jb
add
or
adc
cmp
push
bound
add
pop
rorb
out
jg
aaa
xchg
addr16
pop
add
arpl
into
pop
xor
aam
mov
sti
aam
out
rcl
and
sbb
add
and
in
add
ret
and
lods
xchg
mov
adc
jbe
orb
out
jle
int
push
xchg
in
add
add
ja
stc
andl
ljmp
xchg
scas
adc
enter
insb
dec
jecxz
adc
add
das
sbbb
fidivs
fwait
jo
push
xchg
add
mov
mov
out
xor
push
mov
out
add
mov
mov
sub
aam
and
mov
push
shl
mov
popa
in
icebp
push
mov
xchg
loop
dec
push
xor
adc
add
inc
mov
mov
jns
and
shlb
std
xchg
inc
and
mov
sbb
inc
cld
push
test
sub
orl
push
lcall
loop
add
jb
add
dec
mov
into
ret
call
scas
add
sbb
mov
mov
cmp
movsl
ret
jbe
push
in
or
mov
in
cwtl
out
xchg
les
pop
pushf
or
mov
add
dec
inc
stc
mov
addb
add
xor
in
popl
mov
shlb
push
mov
sbb
inc
imul
sub
adc
sbbb
hlt
add
pop
arpl
or
or
mov
mov
pusha
sub
push
jne
and
int
fsubr
sub
cmp
fnstsw
nop
mov
sar
and
inc
mov
pop
test
pop
dec
add
or
cwtl
add
test
iret
loop
dec
xchg
add
rcr
and
outsb
aam
pop
mov
dec
test
fadd
mov
ljmp
add
mov
add
cmp
jecxz
push
mov
adc
push
pop
add
add
pop
data16
xlat
movsb
add
aas
jge
fnstcw
cmp
mov
test
test
dec
push
dec
and
jb
add
lods
sarl
aam
je
pop
shrl
or
stos
loopne
mov
and
das
add
sar
scas
dec
clc
dec
iret
add
inc
out
push
pusha
xor
push
dec
adc
sub
loop
sbb
or
or
push
ret
mov
loopne
jmp
mov
inc
scas
js
jae
mov
call
repz
push
addb
adc
add
movsl
add
push
mov
test
push
fildll
enter
stos
mov
lods
pop
push
scas
jle
daa
loope
pop
push
inc
js
iret
lret
cwtl
xor
push
testl
js
ja
in
fsub
jno
lahf
jb
add
xor
pop
loope
sub
cmp
sub
inc
sbb
das
mov
ja
aad
xchg
mov
add
sub
pusha
aas
fiaddl
test
shr
nop
insb
sub
lods
pop
jl
stos
mov
add
and
jno
inc
add
fwait
mov
int
sahf
add
push
js
add
xor
popa
hlt
enter
loop
adc
mov
out
repz
push
fbld
mov
and
popa
xlat
push
mov
outsl
imul
mov
or
jg
sub
sbb
lret
add
addr16
or
aaa
and
test
add
sarl
pop
sub
cwtl
int3
mov
call
scas
xchg
aam
dec
sarb
dec
push
cmp
push
test
lea
and
xchg
adc
xchg
ret
add
jnp
icebp
out
jp
cmp
jl
subb
cmp
or
mov
inc
imul
lcall
mov
mov
cmp
inc
test
pop
sub
add
movsb
inc
push
jmp
add
xchg
fisubl
adc
push
xor
aas
pop
adc
xor
xchg
fdivrl
adc
sar
mov
in
js
mov
in
sahf
push
xchg
or
dec
test
fstpl
xorl
pop
pop
popf
sub
je
bswap
clc
jle
fldl
imul
pop
faddl
pop
test
ret
inc
outsb
cmpsb
mov
test
fstl
add
xchg
repnz
mov
cwtl
gs
in
jo
in
xor
std
rcl
push
or
dec
data16
adc
fcompl
add
cmp
mov
ds
fstpt
cmpsb
lea
cmp
pop
negl
test
mov
xchg
test
pushf
push
clc
add
insl
jno
mov
jecxz
outsb
xor
andl
das
cltd
sbb
pop
adcl
mov
es
ja
add
cli
mov
ja
cli
lock
pushf
dec
xor
xor
lcall
mov
out
popf
add
imul
inc
and
ltr
jp
ja
fsubr
test
out
add
push
jae
add
aam
mov
call
sahf
add
addr16
cmp
add
cmc
push
push
in
daa
mov
xchg
in
lods
add
pop
arpl
jecxz
sub
pop
testb
adc
je
xchg
xorl
jo
push
inc
les
xchg
add
mov
roll
cmovb
push
fwait
add
sub
add
or
inc
cmp
lock
ficoms
mov
or
lea
or
inc
lods
jne
add
cmp
jno
dec
in
mov
dec
push
inc
fsubrs
in
add
adc
add
mov
xchg
xor
psraw
cmp
and
add
cld
fsts
in
fsubs
add
lds
sbb
roll
jns
add
dec
jg
sub
nop
adc
insb
sub
add
ss
cld
pushf
xchg
dec
jb
add
in
icebp
add
adc
sub
scas
add
and
lods
push
in
das
add
jle
pushf
imul
insb
add
dec
clc
pusha
sysretw
bound
jne
jno
xor
jbe
lds
fldl
vcmpps
pop
test
sub
or
xchg
or
test
sbb
jmp
cltd
add
pop
mov
outsb
cwtl
orb
test
rorb
lods
dec
lret
lret
scas
add
icebp
mov
test
or
sbb
hlt
in
fisubrs
mov
roll
les
sarb
and
dec
cmpsb
push
xchg
scas
adc
or
add
loope
or
fldl
dec
cli
push
ficoms
addl
push
dec
xchg
cmpsb
xchg
iret
mov
test
mov
shlb
loop
cld
add
bound
xor
popf
cmp
lcall
std
mov
outsb
sub
faddl
shrb
pmaxub
or
xchg
fisttps
pop
push
jnp
aaa
js
add
push
inc
pop
or
int3
sub
in
orl
pop
loopne
nop
add
adc
add
xchg
sbb
out
nop
in
gs
jae
or
cmc
test
movhps
sbb
fadds
dec
jecxz
fdivrl
ljmp
inc
loope
lret
aaa
jp
mov
les
fbstp
pop
das
lods
in
sub
test
add
inc
mov
clc
sldt
fwait
xchg
jae
lock
jb
outsl
js
xor
lret
bound
add
pop
cmp
inc
and
jge
mov
or
cld
int3
xchg
insb
or
icebp
fdivr
sub
loope
scas
and
sub
sti
repnz
and
and
outsl
cmp
jae
es
stos
fistpll
xor
add
call
fists
add
cmpsb
push
enter
adc
xor
sub
out
or
mov
add
cmp
or
push
in
pandn
xchg
mov
push
arpl
call
pop
ja
mov
and
mov
ja
shufps
push
les
and
popa
or
mov
sub
rcl
push
aas
add
fdivl
dec
nop
and
and
sbb
popa
mov
pop
ficoms
mov
hlt
fwait
scas
or
inc
movl
lcall
and
mov
or
orl
loope
arpl
or
sub
and
xlat
pop
jno
shl
fstl
roll
rorb
pop
pop
loopne
lds
sub
fbstp
push
push
or
and
or
call
imul
je
dec
dec
add
xchg
mov
shl
in
or
mov
rolb
xlat
add
int3
mov
or
lods
mov
dec
jg
add
mov
sub
mov
push
in
mulb
mov
add
ss
inc
add
push
pop
stos
gs
filds
repz
add
add
lods
les
lcall
sti
cmp
add
push
cmp
inc
repnz
fildl
cmpsb
push
inc
jbe
into
inc
out
add
mov
mov
stc
and
jp
mov
inc
daa
add
jnp
fdivs
sbb
add
pop
dec
loopne
test
cmp
adc
lds
jne
stos
std
rcrb
ffree
mov
movsb
insb
fmuls
xchg
cmc
out
mov
mov
lds
cwtl
test
pop
ds
cltd
xorl
push
inc
stos
pop
out
outsb
scas
stc
shrb
aam
nop
loopne
inc
or
add
xchg
xchg
inc
mov
movsl
or
cmpsl
sti
xor
adc
fnstcw
ret
orb
add
test
pop
add
or
into
push
lds
dec
insb
push
add
cmp
add
lea
push
add
xchg
out
insb
jg
scas
mov
leave
cmpxchg
xchg
in
cltd
sarl
in
add
and
or
ja
add
pop
sbb
pop
jecxz
fists
jbe
aas
add
test
xor
or
xor
push
push
lods
add
out
ret
add
mov
inc
je
popf
into
add
inc
mov
dec
jne
add
mov
push
js
icebp
add
enter
push
mov
pop
hlt
daa
rcrl
and
in
insb
add
test
inc
popa
sub
mov
xor
pop
add
outsb
inc
mov
test
adc
sbb
jl
andb
sti
pop
mov
pop
push
mov
lock
mov
scas
sbb
sub
push
add
and
mov
test
sti
adc
inc
add
push
dec
inc
add
cmc
fstpt
test
push
add
xchg
popa
mov
jmp
add
les
add
cwtl
add
loopne
and
or
test
into
add
add
add
cmp
inc
insl
add
out
cmp
or
int3
and
sbb
xor
push
lea
and
add
add
mov
loope
rorl
leave
sub
sub
xor
scas
add
cmpsl
jae
sahf
add
cltd
lret
repnz
imul
push
mov
mov
and
jl
int3
js
add
sbb
jle
mov
mov
rclb
aad
adc
add
or
mov
and
xchg
orl
xor
adc
mov
sbb
fisttps
sahf
mov
aam
pop
add
out
mov
popf
je
add
lret
pop
ret
sub
xchg
push
mov
cmp
in
or
pop
shr
movd
loop
add
loope
mov
jecxz
xor
ret
add
mov
enter
cs
popf
int3
pop
dec
clc
pop
divl
dec
daa
fwait
nop
inc
out
fadds
push
inc
sbb
or
addr16
fcoms
add
adc
scas
repnz
mov
push
xor
shll
jno
movsb
xor
pop
and
push
xchg
hlt
cmp
psubb
in
loope
jp
push
mov
dec
hlt
jecxz
ss
out
push
jbe
adc
sbb
pop
fbld
mov
in
fisubrs
mov
or
lds
mov
loop
add
cmp
out
in
stc
or
mov
push
out
fiadds
je
push
mov
add
xchg
add
jnp
push
push
clc
popa
add
jbe
jmp
pop
sub
lock
scas
add
cmp
dec
or
xchg
add
jp
aaa
dec
xchg
push
cltd
insl
bound
sub
push
xor
aaa
push
jns
and
stc
xor
pop
adc
in
jo
test
sbb
in
jl
sub
inc
cmpsl
xor
hlt
gs
cs
pop
pop
push
movl
ficoml
cli
inc
inc
lds
rol
mov
push
roll
shll
add
or
add
rcrl
scas
xor
repnz
or
mov
stos
adc
mov
add
aas
data16
scas
cmp
adcb
js
add
pop
push
imul
push
lods
add
movsb
xchg
mov
xor
xchg
fldt
cmpsb
push
jae
jno
pop
rclb
cmp
add
jp
incb
je
add
xor
push
aad
mov
sbb
jmp
mov
lock
pop
sti
js
dec
pop
add
jmp
xlat
push
add
push
xchg
adc
ret
add
pop
aad
cwtl
sti
loopne
add
ds
adc
loopne
add
xor
or
add
xchg
std
dec
mov
mov
mov
add
sti
cmp
fadds
inc
and
xchg
dec
push
add
push
mov
repz
pop
sti
sbb
enter
popa
sbb
cmp
rorb
add
sub
mov
or
pusha
adc
add
clc
jmp
add
jnp
adc
cltd
lods
xlat
andb
or
iret
jae
incb
ljmp
fistpl
insb
sahf
lahf
popa
add
push
rcll
rcll
jne
jecxz
es
dec
add
cwtl
popa
lock
or
add
clc
movsb
or
insb
icebp
dec
add
popa
xchg
imul
fldl
push
test
adc
shl
xor
mov
pusha
pop
das
subb
mov
add
jo
lea
mov
sbb
xchg
inc
jmp
mov
cmp
push
lcall
add
dec
mov
repnz
mov
sbb
lret
add
dec
std
decl
movups
xor
stos
jl
adc
leave
jmp
mov
mov
cmp
cld
dec
push
jb
or
add
fyl2xp1
loop
sbb
in
inc
add
xor
dec
xor
add
sub
push
sbb
sub
add
cld
call
cmpsb
pop
test
push
mov
lret
pop
fs
icebp
mov
pop
push
cmpl
sub
push
sbb
push
pop
into
cmpsb
dec
add
or
das
add
stos
aad
loopne
sub
add
add
xor
hlt
repnz
adc
add
movsl
test
jae
add
loopne
adc
xchg
add
cld
imul
sub
and
push
pusha
lock
add
lahf
and
add
inc
pop
fldl
adc
add
or
lods
ja
loopne
pop
loop
psubusb
push
in
xchg
rol
push
pusha
xchg
fs
in
in
cwtl
push
cwtl
or
divb
leave
xchg
cmp
aaa
cmc
mov
xor
addl
add
xchg
mov
jmp
mov
inc
and
icebp
sti
adc
addl
jno
sub
add
add
mov
push
xor
add
cmpsl
cmp
cmp
stc
cmp
movsl
or
out
sarl
or
adc
sub
add
jne
cmp
out
into
add
pusha
mov
sbb
dec
pop
repz
repnz
imul
insb
inc
jne
fldl
sbb
or
sub
stos
xor
out
add
push
mov
mov
loop
mov
es
in
sbb
js
addl
insb
pop
fsubrl
mov
mov
dec
je
add
jecxz
cmp
add
sbb
adc
ds
test
pop
aad
dec
adc
mov
pop
les
pusha
out
adc
call
or
mov
repz
pop
inc
pusha
pop
xchg
int
adc
in
scas
ja
das
push
cwtl
in
adc
xor
jo
add
add
orb
add
aam
add
jg
inc
jge
add
lods
xchg
inc
out
add
pop
xchg
sbb
fists
xor
mov
adc
andl
test
xor
stos
enter
out
pop
jbe
mov
sub
add
jne
add
mov
cmpsb
add
xor
or
pop
add
mov
pusha
sub
popf
mov
in
fwait
call
xchg
add
xchg
inc
jle
push
and
cmp
pop
aad
push
shrb
add
imul
adc
mov
xchg
rcl
push
je
popf
cld
enter
sbb
rcrb
and
scas
repz
dec
add
jecxz
data16
js
mov
pop
jns
dec
sbb
inc
subb
and
jns
rclb
add
repz
fisubrs
insb
mov
outsl
xchg
xlat
pop
mov
jo
inc
add
pop
loopne
sub
arpl
ljmp
insb
rcrl
jecxz
dec
and
inc
push
cmp
pop
push
lock
add
icebp
xor
cmp
inc
push
sub
in
repz
cmp
dec
pop
ret
push
clc
add
dec
dec
cmpb
inc
xchg
or
mulb
jne
mov
clc
rolb
aam
fstl
jne
inc
xor
cmp
das
or
popf
sub
test
adc
leave
adc
adc
cmp
adc
and
cmpsb
inc
add
aaa
pop
loope
es
mov
and
mov
mov
mov
or
ljmp
and
cmp
arpl
gs
sbb
inc
fadds
mov
inc
adc
sbb
andl
sbb
dec
scas
mov
lahf
add
outsl
loope
pop
jle
pusha
and
add
stc
in
dec
jne
mov
testb
je
sbb
fwait
pop
sbb
cmp
sbbl
jmp
mov
ret
add
mov
cs
clc
inc
jnp
in
add
sub
add
sub
jbe
test
ja
mov
shlb
push
add
mov
les
gs
repnz
fists
add
movb
push
add
jne
ja
inc
nopl
lret
sbb
push
imul
push
fidivrl
mov
out
lret
data16
inc
mov
insl
ret
sbb
rorb
test
xchg
cli
cmpsb
add
out
mov
and
int3
addr16
rcrb
jno
mov
js
insl
jmp
jbe
sub
xchg
add
mov
daa
mov
mov
lock
adcb
ljmp
mov
xor
cmp
js
xchg
hlt
sub
in
add
inc
dec
cmovne
xchg
inc
fcoms
mov
lahf
xchg
ja
push
and
or
sub
sbb
les
lret
cld
aad
add
xlat
xchg
jge
hlt
mov
add
divb
dec
pop
cmpsb
or
mov
sub
aad
imul
adcl
popa
test
or
pop
sub
test
out
mov
or
incb
pop
dec
or
int3
inc
in
add
pop
fnstsw
push
dec
add
mov
movsb
in
xchg
dec
add
movhps
scas
push
push
out
pop
xchg
adc
add
movsb
adc
mov
xor
push
mov
shll
push
pop
in
jne
xchg
mov
psubusw
je
fwait
mov
adc
jp
sbb
inc
add
cld
sub
ret
pop
mov
enter
in
xor
or
add
or
sbb
out
push
cmp
mov
cmp
into
fcomip
push
dec
shlb
movsl
ss
test
jl
adc
hlt
in
nop
pop
or
add
lock
int
inc
mov
jg
dec
rcrl
adc
xor
je
add
outsl
and
or
mov
add
cli
push
int3
mov
sub
ja
sbb
mov
push
mov
mov
in
ret
repnz
jp
jae
push
ret
push
sbb
pop
xor
add
inc
loope
ljmp
dec
cmp
in
xchg
cld
jae
mov
mov
into
jl
lret
add
mov
pop
add
add
lret
rolb
int3
mov
dec
test
not
inc
scas
test
inc
pop
pop
inc
lods
ja
jb
rclb
mov
push
jg
sub
mov
mov
dec
mov
jecxz
jo
stc
aas
je
rcll
addl
mov
cmpsl
pop
loope
pushf
jg
jo
add
fildll
jle
sub
ret
cmp
and
dec
and
in
fistps
and
leave
mov
add
mov
js
rcr
push
andb
dec
add
call
fcompl
and
add
push
cli
inc
push
ljmp
icebp
out
add
jmp
add
sub
xor
sbbb
mov
add
push
push
jge
fldl
imul
in
fiadds
jl
in
sub
jb
scas
add
jnp
adc
jno
fs
adc
sbb
jne
sarl
xchg
xchg
mov
add
mov
mov
sahf
les
mov
adc
adc
aad
add
test
mov
jnp
in
test
mulb
push
add
call
icebp
andl
fisubrs
push
inc
hlt
add
mov
add
into
idivb
xor
lds
jp
sub
add
aad
adc
mov
in
dec
pop
movsb
js
add
jp
xchg
add
mov
xchg
add
fdivrs
dec
gs
cltd
jg
lret
sbb
inc
roll
pop
idivb
push
mov
lahf
sbb
aaa
mov
cmpsb
sbb
dec
add
fsub
push
lock
mov
dec
lods
aam
push
inc
ret
lcall
push
or
pop
add
xchg
xor
pop
cmp
inc
or
pop
dec
ds
cmp
xchg
cmpsb
xor
inc
das
movb
dec
adc
xor
and
addb
push
add
addr16
loop
loopne
inc
mov
ds
xchg
push
add
and
sub
add
inc
xor
mov
xchg
add
or
shlb
gs
add
pop
push
inc
add
or
inc
aas
add
sub
adc
dec
aam
push
pop
jo
jno
dec
int
and
clc
add
movsl
aas
add
into
mov
xchg
cltd
jbe
mov
sbb
mov
adc
add
icebp
mov
sbb
outsb
sahf
xchg
imul
mov
push
and
and
stc
imul
add
or
mov
faddl
cld
push
sbb
stc
or
shlb
xchg
cmp
int3
add
push
push
dec
shrb
adc
movsb
add
dec
xchg
dec
add
lds
and
aas
mov
loope
out
hlt
ret
andb
cmpsb
and
data16
jae
push
xchg
add
mov
xlat
test
mov
daa
pop
dec
sti
jle
loope
jmp
push
add
cmp
es
mov
add
xor
mov
mov
pop
jmp
push
pop
mov
repnz
filds
outsb
xor
idiv
negl
sub
xor
xchg
in
add
and
add
xor
loopne
enter
mov
sbb
dec
pop
add
or
leave
fnstenv
xor
lds
cmp
dec
mov
mov
cmp
sub
jno
add
mov
in
and
pop
push
or
and
jge
add
pop
imul
into
add
pop
or
adcb
push
push
jne
in
cmp
pop
in
or
sbb
movhps
negl
xchg
jmp
adc
mov
xor
out
and
sub
dec
mov
mov
cli
aaa
add
lock
mov
pop
add
shll
fs
stos
aad
lds
pusha
push
push
mov
jl
push
or
mov
movsl
cmpsb
xchg
mov
inc
mov
shlb
addb
xchg
bound
dec
xchg
stc
adc
je
ds
mov
xchg
and
jns
sbb
std
push
mov
and
loop
dec
xchg
std
in
push
push
inc
lea
add
cmp
mov
lcall
call
movsl
mov
jnp
nop
mov
lods
adcb
hlt
notb
pop
adc
push
popa
or
lock
add
insb
daa
sbb
jle
ffreep
gs
loop
pop
dec
popf
pushf
ljmp
add
cmp
sti
movsb
shr
in
cmc
mov
xlat
add
ret
jo
add
xchg
sti
add
inc
mov
inc
nop
nop
jl
or
pop
xchg
dec
and
daa
adc
rol
lock
add
mov
push
insl
jno
lock
mov
xor
sub
add
xlat
mov
iret
sub
cwtl
push
sar
loop
push
lret
add
xor
lahf
and
fiadds
add
orl
adc
call
push
pop
pop
jl
xchg
mov
inc
aas
sub
push
movsb
test
adc
pop
fldt
cli
add
addr16
sbb
cmp
push
dec
mov
add
mov
or
add
icebp
add
stos
add
shll
add
arpl
add
lcall
add
stc
jne
pop
loop
clc
xlat
add
sti
sub
imul
mov
pusha
out
jbe
add
shl
sub
call
sbb
fbstp
sti
pop
dec
cmp
rcrb
out
aam
sub
call
and
add
or
add
push
insb
roll
std
jmp
mov
decb
sbb
xchg
adc
mov
dec
cmp
js
hlt
mov
add
jnp
testl
sbb
or
aaa
mov
out
add
xor
push
jl
pushf
xorl
jmp
pop
jmp
mov
jnp
and
nop
mov
loop
jp
add
jl
in
and
jp
int
pop
imul
mov
js
add
movsl
pop
jns
fstpl
repz
cmpsl
fwait
xchg
jno
add
aaa
flds
sbbb
cmp
add
je
nop
nop
es
pusha
xor
shll
aaa
add
sbb
dec
add
xchg
mov
std
lahf
fstpt
loope
xchg
icebp
mov
sbb
enter
hlt
sub
leave
nop
jmp
push
cwtl
cmp
movsb
or
daa
add
jl
repz
call
jp
xchg
xchg
add
popf
test
jbe
mov
out
add
pop
ret
dec
or
jl
clc
out
shr
add
stc
mov
cld
add
sbb
rclb
pop
adc
add
loopne
stc
lcall
pop
roll
jo,pt
inc
xchg
ret
test
nop
popa
sarb
xchg
push
add
jae
jecxz
shlb
or
icebp
jnp
leave
mov
sub
lods
push
push
data16
cmp
add
insl
push
push
adc
adc
leave
inc
pushf
add
mov
and
adc
rcll
add
inc
ljmp
mov
ficoml
imul
into
sti
ja
js
xchg
add
jp
xchg
sub
roll
xor
fnstenv
lods
dec
add
outsl
jne
hlt
rcrb
and
repz
pop
dec
xlat
or
pop
push
daa
test
outsb
mov
repnz
xor
cmpsb
add
or
int3
mov
add
addr16
sub
shr
movd
mov
jp
or
gs
inc
sub
cmp
cmp
or
jno
mov
add
xor
inc
add
jbe
lods
clc
pause
jg
mov
pop
lahf
into
lcall
xor
dec
mov
add
xchg
pop
inc
das
mov
add
les
push
add
int3
jnp
movsl
fwait
hlt
mov
add
xchg
xchg
push
cmpsl
lahf
add
test
pop
adc
add
xchg
pop
jge
leave
clc
pmulhw
jns
mov
adc
jmp
roll
ds
push
je
xor
lods
jns
adc
jle
mov
dec
xor
iret
shlb
inc
out
or
mov
je
and
test
inc
decb
jg
sbbl
add
sbb
mov
clc
fs
add
loope
sub
pushf
clc
cs
add
mov
add
fstpt
xor
mov
push
add
add
in
pusha
pop
mov
jo
mov
push
out
popa
add
sub
adc
or
jbe
pop
dec
and
add
mov
push
mov
pusha
sbbl
fstl
pop
mov
push
arpl
aam
aas
add
rcr
adc
jg
push
xor
or
lahf
sbb
dec
fiaddl
jecxz
enter
and
notb
add
sbb
fdivrs
enter
sbb
mov
mov
lds
vprotq
pusha
shl
sti
dec
punpcklwd
mov
push
add
mov
jmp
xor
mov
je
inc
adcb
add
or
pop
push
out
add
inc
out
push
out
nop
aam
test
das
add
lods
or
insb
es
xchg
add
inc
pusha
lcall
pop
add
push
mov
mov
loop
pop
in
leave
pop
mov
mov
dec
out
xor
pop
lods
adc
ficompl
lret
out
pop
sbb
ror
cmc
icebp
xchg
mov
dec
add
sti
aas
and
cwtl
rcll
int
sbb
cmp
push
stos
or
insb
call
andb
mov
andb
sbb
push
sti
push
pusha
jp
loope
jns
testb
js
mov
fs
inc
mov
icebp
aam
movlps
pop
inc
dec
les
jne
cmpsl
js
xor
or
add
cmc
push
inc
pop
inc
divb
push
sbbl
jo
out
add
mov
int3
loope
int
aam
adc
adc
loop
mov
in
shll
xor
out
jg
push
shlb
sbb
popl
adc
out
in
in
and
roll
inc
movsb
push
addl
sub
enter
sub
sbb
fs
pop
jns
add
arpl
mov
and
pusha
addb
idivl
mov
inc
cld
push
xchg
add
dec
addr16
mov
push
and
jl
les
loope
mov
inc
psignw
jb
mov
and
lods
cmp
leave
shll
sbb
fisubs
add
loop
cwtl
cmp
and
flds
sub
pop
loope
data16
jge
adc
sbb
cmpsb
push
xchg
mov
lds
sbb
mov
sub
sar
add
loopne
adc
in
in
or
add
sub
add
into
pop
mov
mov
icebp
sbb
sbb
add
lods
adc
loopne
call
outsl
cmp
add
movsb
xlat
int
or
cltd
sub
lds
inc
sti
cmp
insb
mov
ficoms
mov
jb
nop
fsubrl
clc
mov
dec
sub
and
arpl
js
cmp
pop
add
and
xor
cmpb
xor
mov
add
add
pop
scas
out
stos
push
inc
pop
imul
outsb
push
add
ret
push
add
jge
add
pop
pop
lds
cmp
add
pop
pushf
cmp
sahf
add
mov
add
incl
sbb
sbb
ret
dec
pop
iret
fadds
insl
ja
jno
bound
push
jecxz
xchg
add
push
pop
sub
inc
popf
add
sbb
mov
dec
cmp
add
push
adc
sbbl
and
push
out
push
xchg
mov
loopne
add
sbb
push
push
out
add
inc
fsubp
fldl2e
or
aad
dec
in
xor
enter
pop
out
add
es
dec
orl
xchg
pop
xlat
sti
imul
repz
add
or
add
or
test
add
and
pop
push
inc
xor
sbb
sub
pop
dec
dec
int
movsb
cmpsl
dec
out
add
roll
stos
je
add
xchg
and
or
xchg
push
dec
xchg
add
adc
jnp
or
mov
push
icebp
add
int3
mov
mov
rolb
adc
cmp
jle
pop
or
sbb
sbb
add
lods
and
mov
and
jb
rep
addl
jno
and
mov
loopne
sahf
icebp
mov
xor
std
fldl
xor
sbb
test
pop
movaps
mov
les
add
mov
jb
or
shrb
jne
addb
cmpsl
pusha
dec
and
add
stos
lock
push
xchg
test
inc
dec
xor
add
jge
adc
pop
cmpsb
sbb
xchg
sbb
out
push
test
mov
mov
add
pop
mov
add
jbe
insl
add
push
std
cmp
mov
xchg
cmpsb
dec
adc
fcmovu
jae
cmp
or
daa
or
and
cli
push
inc
cld
pop
pop
and
jecxz
xor
icebp
xlat
mov
bswap
pop
mov
mov
pop
add
roll
add
roll
add
test
mov
adcb
push
lea
xchg
pushf
add
pushf
dec
sbb
push
js
xor
fwait
add
dec
jb
in
cmpl
or
je
sbb
repnz
adc
add
push
xchg
push
xchg
push
jae
loopne
sbb
aad
or
loopne
hlt
add
enter
add
shl
cmp
aas
setae
out
mov
add
xchg
adc
pop
push
imul
cld
iret
dec
add
data16
xchg
add
dec
add
insl
js
mov
shrb
cmp
add
fidivl
add
mov
stos
mov
fcomi
pusha
mov
cwtl
into
inc
je
pop
xor
call
mov
lret
mov
add
mov
lock
std
into
ret
hlt
mul
mov
add
mov
aas
mov
add
or
add
jae
jmp
pmaddwd
add
pop
popa
jo
movhps
popa
push
lds
jne
mov
fstl
test
fists
orl
adc
xchg
xchg
add
mov
add
outsl
pushf
lods
cmpb
sbb
mov
inc
adc
sbb
dec
inc
and
jbe
xorl
add
mov
scas
popa
add
cwtl
xchg
icebp
cmc
imul
add
dec
in
mov
add
mov
ficoml
pushf
push
add
push
ljmp
add
imul
iret
pop
mov
jbe
mov
ret
pop
push
test
cmc
sbb
dec
popa
pop
cmpb
aad
loop
test
mov
or
or
mov
insl
add
ljmp
cmp
jns
sti
xchg
cltd
adc
jecxz
push
aaa
rcrb
dec
repz
mov
jl
sub
addr16
les
clc
jge
add
lahf
aaa
mov
pop
mov
pop
add
sahf
add
push
scas
cli
mov
mov
das
inc
cmp
pop
add
fstps
into
sub
cld
inc
lods
dec
add
add
push
fists
enter
push
sub
faddp
lds
mov
jb
popa
outsl
pop
sbb
pop
xor
pop
push
xorb
xchg
and
xchg
fadd
inc
fistpl
jecxz
sub
mov
aam
das
lgs
lock
add
clc
dec
cmpsb
add
gs
stos
sbb
addl
dec
pop
mov
add
push
fdivrs
inc
jne
movl
mov
inc
mov
xor
push
pop
je
add
les
dec
pop
dec
jbe
arpl
and
stos
xchg
mov
xchg
testb
cwtl
int3
ja
add
jo
mov
jl
add
enter
jmp
add
stos
add
cmp
loope
add
push
jbe
fisubrl
or
adc
rolb
lcall
push
mov
lods
xchg
nop
cmp
pop
fldenv
add
fidivrs
flds
ss
daa
push
mov
fadd
and
add
les
adcb
jnp
fldcw
dec
call
pcmpeqd
lcall
fsubs
inc
cmp
mov
jbe
adc
cld
sub
jge
stos
or
std
mov
jecxz
cli
outsl
add
sub
addl
je
xchg
add
xor
loopne
pop
add
sti
inc
lea
nop
int
mov
dec
ret
scas
fiaddl
mov
or
in
jbe
cmp
jo
movb
xchg
sub
push
mov
and
dec
add
in
add
das
in
movsb
loope
popl
jp
or
mov
and
push
mov
or
loopne
loope
and
add
mov
jl
adc
dec
in
call
in
cmc
mov
cs
add
sub
mov
cmp
cld
out
xchg
push
movsb
inc
jg
or
lods
add
addr16
xlat
mov
sbb
ja
test
jp
jo
lcall
ljmp
mov
add
lods
pop
xchg
jae
sub
xor
call
popf
enter
arpl
or
sbb
into
push
push
dec
add
mov
jl
add
sbb
jnp
lahf
insb
ja
loop
xlat
loope
pop
repnz
add
pushf
inc
sub
scas
ret
xor
popl
into
les
push
lock
add
repnz
cli
aad
add
andl
rclb
xor
or
pop
adc
mov
push
in
cltd
add
sbb
cmp
add
adc
xchg
cs
test
xor
add
insl
iret
and
outsb
jo
add
stos
mov
xchg
cmp
xor
pop
mov
jp
lds
cmc
mov
jbe
imul
push
scas
rcpps
inc
cltd
add
arpl
cmp
nop
push
sbb
addr16
or
add
add
test
pop
incl
jg
cltd
jnp
data16
loope
cmp
aas
dec
adc
add
clc
cmpsb
xor
and
popf
pop
dec
or
sub
push
inc
mov
ljmp
sbb
ss
inc
cli
dec
xchg
add
mov
mov
loopne
or
xor
cmc
js
call
sub
and
cmp
lret
nop
orb
push
repnz
mov
cmp
and
xor
xor
and
or
jns
mov
cmp
mov
xor
test
cmpsl
add
fistl
push
cmp
mov
fucomp
daa
out
aaa
jnp
popf
lods
push
add
mov
divl
ja
adc
and
sbb
push
test
dec
or
add
or
lock
data16
inc
xchg
std
add
sbb
xchg
mov
and
jbe
cmp
lea
loope
push
sti
aam
fcoms
jns
jo
sub
bound
cmpsl
add
cmp
out
out
mov
mov
push
xor
dec
push
out
inc
xor
lods
add
fcoml
pop
jp
pop
push
push
adc
jmp
mov
pop
add
out
adc
pop
insb
add
mov
or
filds
shlb
shlb
scas
mov
add
and
shll
adc
addb
push
cmc
add
mov
outsb
call
inc
repnz
jmp
in
loopne
dec
sar
sub
imul
add
xchg
xor
das
add
iret
in
shll
xor
mov
and
xlat
jp
pop
outsb
lret
mov
dec
and
mov
add
cwtl
ds
std
shl
sti
add
jbe
pop
mov
mov
add
push
jns
xor
out
add
mov
lcall
rorb
mov
add
sbb
inc
cmp
les
push
dec
inc
mulb
inc
sarl
movsb
jle
sti
add
enter
sbb
fidivrs
sbb
cltd
xchg
clc
mov
add
or
sub
xor
je
fisttpll
inc
jle
je
or
mov
xor
bswap
movsl
xchg
sbb
js
ret
fmuls
enter
push
ficoml
mov
cmp
pushf
lods
add
jl
xorl
mov
pop
mov
incb
sbb
mov
stc
mov
inc
stos
inc
enter
add
stos
fsts
test
pop
lock
xor
add
cmp
cmp
sub
ret
fildl
jp
inc
add
sub
rorb
dec
iret
sbb
loope
outsb
cli
inc
sbbb
mov
andl
jmp
jae
daa
rorb
aas
cmpsb
jmp
sbbl
push
rolb
mov
stos
imul
push
sub
sbb
pushf
mov
lea
and
inc
int
repnz
cwtl
hlt
std
sub
sub
jg
cmp
or
xor
pop
packssdw
shll
xor
rcr
add
enter
mov
add
jp
jo
cli
test
mov
pop
pop
xchg
sti
push
sub
xor
or
mov
push
xchg
sub
in
push
add
nop
orb
add
mov
in
push
add
stos
cmpsb
and
dec
jne
stos
mov
adc
mov
subb
sbb
push
add
out
push
es
jge
push
jbe
test
aam
push
adc
call
testb
inc
jmp
lret
mov
dec
adc
mov
lds
ss
fucomp
pop
push
adc
pop
out
fcompl
dec
adc
aam
cmp
or
es
add
cmpb
cs
cmp
mov
cmpsb
test
lock
add
pavgw
add
cs
pop
jl
add
cmpsl
pop
out
pusha
subb
insl
cwtl
addb
mov
xor
add
jg
cli
loopne
sbb
fnsave
adc
mov
dec
mov
add
push
les
icebp
into
out
xor
cmp
cwtl
jle
adc
pop
in
mov
mov
jmp
xadd
inc
mov
roll
add
inc
dec
or
pushl
push
clc
push
push
lods
cmp
mov
pop
push
punpckhbw
adc
in
add
shrl
sti
mov
mov
fistpl
nop
hlt
sahf
imul
add
jg
dec
mov
rcrb
xchg
inc
add
flds
adc
or
dec
loopne
push
mov
sbb
or
mov
insl
enter
sub
jbe
js
add
das
jg
add
xor
sub
and
add
sbbb
mov
mov
adc
push
lret
cltd
mov
into
shll
ja
or
xchg
add
pop
sbb
out
loopne
xor
sub
mov
divl
dec
push
inc
push
add
call
neg
popa
call
and
jo
push
xchg
imul
add
inc
aam
sbb
push
xor
sub
ljmp
inc
fadds
mov
lds
cmp
lods
add
inc
push
call
xor
mov
enter
aad
jb
ficompl
adc
mov
add
ljmp
add
sbb
or
or
cmp
jl
test
and
add
pop
aas
inc
add
jae
imul
cmpsb
sub
cmovo
lcall
mov
into
mov
add
jo
jp
and
data16
mov
lahf
pop
add
mov
jecxz
add
lods
mov
dec
pop
mov
add
inc
das
test
add
xchg
lcall
in
movsl
ror
mov
add
dec
dec
decl
jecxz
pushf
add
fisubrl
cmp
shrb
imul
imul
add
rolb
testl
mov
jle
popf
push
mov
loop
popa
sbb
repz
xor
sub
pop
fisttpl
push
shll
in
pop
pop
das
mov
xor
mov
cmp
cld
les
mov
insl
cmp
lret
lahf
push
xor
and
cltd
or
fwait
pusha
mov
xchg
test
inc
add
lret
sub
or
push
push
rclb
jp
push
loopne
pop
je
shrb
and
fwait
pusha
sub
push
jg
ret
scas
mov
sub
mov
dec
add
sar
mov
adc
push
stos
xorb
add
ret
adc
rolb
and
adc
pmuludq
sti
lcall
add
test
sbb
xor
mov
add
inc
fwait
pop
popf
add
jne
push
mov
in
mov
pusha
adc
incl
and
mov
popa
dec
and
pusha
mov
nop
push
add
push
mov
in
xor
pop
mov
add
dec
xor
out
in
and
sbb
sub
int
pusha
fcmovnbe
sub
push
dec
nop
xchg
lret
or
sbb
div
lahf
insb
faddp
and
pop
jne
pop
xchg
test
pop
outsl
jo
pop
enter
mov
pop
inc
jle
xchg
jb
out
rorl
or
or
enter
and
mov
cmp
jne
nop
mov
in
push
add
lret
out
lods
add
std
push
fisttps
xchg
dec
mov
mov
pusha
or
xchg
pop
push
mov
sub
jno
popl
lcall
imul
leave
pop
pop
lods
add
adc
cwtl
xor
filds
jb
jne
push
xchg
shlb
scas
sub
add
push
mov
inc
test
push
rclb
ret
lods
add
sbb
pop
jne
dec
scas
add
mov
inc
daa
hlt
dec
fisubl
dec
add
gs
insb
cmp
push
add
stos
push
mov
cmp
sub
outsb
dec
loopne
push
scas
stos
inc
inc
sub
bound
inc
rclb
in
cwtl
xchg
sub
mov
mov
push
hlt
add
imul
add
fstpt
mov
mov
inc
and
shrb
pop
sarb
add
aad
sub
sbb
add
nop
mov
jecxz
sahf
sbb
mov
sbb
insl
add
mov
pop
jb
add
xchg
push
test
mov
pop
and
add
in
scas
adc
arpl
test
adc
add
mov
pop
shlb
stos
fcmovnb
xor
lahf
lcall
sub
cmp
pop
rorb
sbbb
loopne
adc
dec
ret
fs
inc
or
decb
jae
jo
jg
xchg
push
addb
fwait
jo
aas
jl
xor
push
call
add
push
shll
andb
inc
out
std
mov
sub
rcll
add
dec
fcmovnb
sub
pop
jmp
add
sub
push
out
add
adc
popa
aas
lock
sarb
fstps
add
cmc
xchg
loope
inc
xchg
scas
pusha
lret
add
imul
push
leave
xor
push
lret
inc
pop
mov
sub
pop
ret
jo
xchg
add
fadds
lods
add
mov
rcl
mov
xor
or
and
add
fidivs
xor
add
in
stos
cmp
jnp
add
inc
pop
mov
outsl
jae
addb
sbbb
mov
lock
mov
pop
dec
adc
andb
xlat
pop
icebp
mov
sbb
lods
or
in
and
add
loope
mov
clc
sub
pop
lods
xchg
and
repz
push
jle
mov
and
fdivl
ficoms
dec
rclb
or
test
lret
or
cs
jno
fmull
ja
add
loopne
sbbl
sarb
lret
push
adc
add
out
pop
mov
and
imul
and
xor
int3
gs
mov
add
std
rcr
add
add
push
xor
jmp
add
scas
mov
cmp
and
pop
lds
dec
fcoml
lcall
mov
mov
shlb
enter
push
pop
pop
and
icebp
movsl
negb
testb
addr16
mov
insl
adcl
and
add
rolb
faddl
xchg
pop
add
cltd
rorb
int
mov
orb
push
sbb
add
cmpsb
insl
ds
push
add
sub
test
jmp
and
jb
add
movsb
push
push
sbb
subl
and
pop
adc
jl
sbb
mov
pop
add
lret
xchg
inc
roll
ds
das
xor
outsb
xchg
arpl
or
mov
subl
adc
test
lods
add
loop
xchg
xbegin
popa
mov
cltd
out
add
mov
leave
add
or
xorb
add
jb
ja
or
orl
cli
fldenv
lods
sub
aad
jbe
jmp
xlat
das
xchg
aam
jo
sub
mov
inc
inc
push
aaa
cltd
out
add
or
ret
xchg
stc
popf
in
loopne
jo
add
aam
scas
sub
decl
test
mov
mov
nop
sbb
mov
mov
dec
inc
jno
push
add
sub
lea
ja
push
push
cmc
mov
push
mov
inc
push
out
enter
mov
pop
and
xchg
cmpsb
cmp
popf
iret
fwait
in
push
inc
mov
test
mov
mov
jns
lock
sti
add
cmp
push
jne
pop
dec
add
leave
cmpsl
inc
pop
push
roll
mov
aas
add
add
je
mov
mov
cmp
sub
lock
pop
repz
cld
push
xchg
adc
and
pop
in
xchg
jmp
shr
xlat
xor
xchg
test
pop
and
enter
or
sti
xor
cmp
repnz
mov
or
dec
push
stos
mov
dec
inc
loop
add
movsb
mov
or
addr16
add
xchg
add
test
push
test
ja
insl
push
mov
jb
lret
adc
push
dec
inc
pop
rolb
es
add
cwtl
push
inc
add
cmp
inc
enter
insb
xchg
lea
add
sub
mov
jnp
shrl
xor
mov
sbb
lea
cmp
loop
cwtl
push
mov
pop
adc
jecxz
add
mov
xor
sbb
orb
scas
xor
lea
in
jmp
add
nop
xchg
jbe
jl
push
dec
jnp
dec
lahf
add
sbb
repnz
jl
mov
pusha
xor
addl
lds
rorb
insb
add
adc
cli
negb
add
push
in
add
add
fwait
sbb
jae
add
mov
cmp
add
push
stos
sub
test
mov
jno,pt
xchg
xchg
out
add
stos
jle
mov
or
jg
pushf
adc
sub
addb
jb
jl
pop
testl
insl
pop
hlt
push
sbb
push
movsb
xchg
test
and
lret
sub
je
mov
enter
leave
mov
add
outsl
imull
sbb
or
add
mov
pop
mov
push
mov
xlat
add
mov
stos
push
fiadds
xchg
lods
inc
mov
test
xor
add
cmp
pusha
arpl
jnp
mov
lcall
xchg
mov
lods
pusha
cld
hlt
pop
add
dec
cmp
es
cld
and
push
les
add
arpl
mov
fadd
sti
adc
cs
mov
cli
shl
or
push
mov
std
shlb
fdivrl
gs
dec
icebp
jbe
push
mov
ds
sub
repz
cmp
mov
data16
in
push
sti
add
and
rcl
pop
add
ret
mov
repz
int3
sbb
movsl
loop
lret
pop
orb
push
xchg
jno
les
add
arpl
out
mov
xchg
pop
add
mov
jne
xchg
aas
pushf
ds
cltd
aaa
aad
mov
sub
outsb
mov
xor
test
loopne,pt
repnz
adcb
mov
test
orl
imul
pop
adc
or
and
adc
aaa
mov
xchg
add
dec
lret
std
add
int
or
lock
filds
loop
cmp
sub
push
ljmp
test
mov
xcrypt-ctr
cmpsl
fistl
cmp
pusha
mov
mov
xlat
testl
sti
pop
clts
movsb
pop
add
fnop
adcb
ja
fnsave
and
mov
sahf
xor
push
mov
push
rcl
inc
add
and
add
loopne
lret
sahf
or
mov
sti
mov
rcrl
sub
add
jle
xchg
jb
fstpl
icebp
in
icebp
xchg
xor
inc
pop
testb
push
xor
cmp
xor
rcl
push
xchg
sbb
cmp
add
insb
insl
lock
outsb
mov
setl
sub
or
xchg
push
add
jl
or
pusha
aam
push
add
xchg
loopne
faddl
fsts
or
ret
sub
int3
hlt
adc
faddl
lret
fstps
fsub
push
shlb
cwtl
xor
cmpsl
or
in
movsb
cmpl
fisubrs
and
cmp
push
adc
arpl
nop
pop
pop
insl
add
dec
sarl
lods
push
loope
lcall
inc
scas
xor
or
nop
repz
pushf
push
loopne
or
std
or
add
jb
ljmp
lods
push
cmp
pop
cmpsb
mov
les
mov
cltd
sub
jle
sub
loop
pop
clc
stos
sbb
cmc
pop
sarb
sbb
sti
cmpb
rcll
dec
jnp
inc
outsb
or
pop
mov
pop
xlat
repnz
sbb
rol
loopne
jp
sub
push
jbe
or
cmp
add
fwait
ds
sahf
ret
inc
mov
adc
cmp
fadd
mov
xchg
icebp
mov
add
jmp
pop
int3
jae
pop
mov
add
imul
xor
pop
sldt
xchg
in
repnz
jb
add
fldenv
push
inc
in
mov
and
pop
sub
fwait
xchg
inc
pop
push
jno
xor
test
pop
rolb
leave
push
mov
std
add
adc
pop
add
or
pavgw
sbb
iret
inc
addr16
out
pusha
scas
dec
sbb
aaa
xchg
sbb
sbb
imull
addb
stos
xlat
mov
add
not
enter
test
insl
in
pop
mov
adc
adc
jno
jbe
rol
adc
push
xchg
push
cmpb
jmp
cltd
ljmp
insb
add
rolb
imul
addr16
jmp
gs
lcall
or
and
pusha
sbb
pop
sbb
out
jo
fnstenv
mov
pop
mov
jnp
add
sbb
imul
rcrb
add
push
or
jge
and
pop
add
dec
cmovp
lock
pop
sarl
pop
aaa
add
loope
shrl
xchg
cmpsb
pop
dec
nop
xlat
std
fistps
mov
jo
lret
mov
add
jmp
pop
push
sub
movb
mov
ret
mov
jbe
add
bound
xchg
stos
or
jg
push
test
push
jmp
les
rolb
pop
testb
push
pop
enter
mov
mov
pop
push
mov
add
clc
or
push
pushf
push
add
push
cmp
dec
pop
jne
cs
add
aam
jbe
add
pushf
fdivrp
int3
movsl
fwait
lock
nop
xor
and
test
outsb
or
shlb
and
fnstcw
mul
push
aas
shrb
test
lods
inc
sbb
push
popa
cmpxchg
mov
fwait
stos
and
fnstenv
sub
lret
add
pop
sbb
pop
rcrl
inc
jne
adc
dec
imul
enter
out
testb
or
mov
cmp
int3
sbb
lds
inc
jmp
dec
lahf
dec
pusha
add
mov
sbb
dec
stc
in
push
add
xor
mov
add
js
arpl
jmp
inc
pop
cmp
testl
xor
std
popa
cld
out
pop
pop
add
and
and
movsl
jp
cltd
dec
clc
pop
pusha
arpl
mov
addb
scas
sub
push
jge
xchg
add
jae
push
mov
insb
adc
movsl
add
jae
push
nop
insb
add
pop
mov
je
add
bswap
out
bound
push
add
mov
push
push
ficompl
daa
fildll
data16
add
mov
je
jmp
loopne,pn
stc
rcr
xor
push
sub
mov
mov
loope
xor
or
inc
xchg
jo
into
pushl
mov
mov
jo
imul
stos
adc
test
loop
pop
sub
mov
add
inc
xchg
cltd
push
mov
add
test
repz
in
fs
mov
in
std
push
fwait
jle
fiadds
subl
test
sub
sbb
cmpsl
adc
aas
pop
add
sarl
call
pop
lods
mov
mov
lahf
repnz
mov
addr16
mov
sbb
adc
push
test
jge
cmp
add
decb
sub
enter
lahf
xor
xor
cmp
aad
push
fadds
shrd
mov
sub
rolb
and
add
inc
nop
dec
cmpl
sbb
mov
dec
movsl
add
or
mov
dec
mov
jle
mov
aam
stc
pop
popf
fnsave
add
push
push
jecxz
loope
inc
adc
and
push
mov
or
jmp
sbbb
aas
adc
cmp
and
xchg
ret
mov
pushl
dec
inc
cmc
pop
into
aad
push
inc
pusha
shll
and
adc
loope
or
pop
lods
sahf
sub
rorb
add
mov
add
fisttps
add
mov
es
cmp
int3
cli
call
push
xchg
push
cmpb
inc
bnd
ljmp
enter
fistl
xor
pusha
out
mov
pop
clc
movsl
movb
stos
or
mov
lea
or
lods
pop
fimuls
mov
or
mov
adc
xchg
arpl
and
jns
test
sarb
sbb
jbe
push
pusha
repnz
inc
aad
in
out
xor
aaa
dec
fcompl
rolb
xchg
cld
adc
add
addb
and
or
les
adc
push
jo
mov
sbb
mov
test
and
or
xchg
xor
push
add
xor
leave
and
add
std
cmp
inc
xchg
and
lods
push
ds
add
sbb
lahf
lret
mov
loopne
aaa
add
in
cli
mov
mov
sbb
nop
adc
sahf
add
pusha
out
xchg
rolb
and
cld
sub
xorb
mov
push
fcmovb
ret
sub
call
roll
cmp
je
xchg
add
lds
or
xor
inc
clc
mov
fnstenv
cmpsb
data16
xor
add
pop
les
leave
dec
push
rcll
fisttpll
pop
mov
clc
repnz
aam
add
sub
ret
or
imul
into
in
inc
push
dec
test
bnd
cli
inc
add
cmc
push
fmuls
xchg
xchg
inc
sbb
jle
cmp
mov
insb
or
cmp
adc
sbbb
aad
nop
loop
popa
fwait
sbb
dec
push
sub
add
xchg
sbb
lret
sbb
mov
mov
dec
mov
jne
sbbb
cmp
hlt
je
mov
addl
fistpl
cmpsl
pusha
fwait
pop
pushl
add
and
and
jae
add
mov
xchg
sar
ret
ds
push
fldcw
jmp
cmp
or
mov
movsl
jns
and
add
sub
orl
in
push
movsl
outsl
pop
insb
add
cmp
das
or
add
add
orb
flds
xor
adc
dec
mov
in
shrb
lock
out
lds
rclb
sub
xor
out
in
jnp
sub
push
lock
das
inc
add
loope
cld
lods
dec
out
orb
xchg
inc
adc
mov
cmp
jg
dec
mov
incb
into
sbb
movsb
aad
out
xlat
pop
add
sub
mov
lahf
and
mov
ss
lcall
and
pusha
loope
mov
cmp
sub
sahf
jb
lahf
leave
repnz
add
push
gs
add
jle
lret
add
aaa
dec
and
jp
setbe
xor
aad
add
ds
xor
jno
inc
lods
int
orb
sub
jns
cmp
adc
jg
pop
adc
mov
inc
loop
add
std
jle
adc
pusha
push
gs
hlt
sti
cwtl
test
dec
enter
adc
push
cltd
jo
and
xchg
sti
sub
arpl
or
loopne
inc
xchg
dec
loopne
mov
mov
vmovdqu
mov
fdecstp
pop
loop
cwtl
push
cmp
imul
subb
mov
mov
pop
inc
ja
clflush
add
add
call
mov
mov
cmp
xchg
jge
mov
or
lcall
jbe
jp
cmp
data16
dec
cmpsl
mov
mov
aaa
mov
decl
xchg
sti
and
push
mov
push
popf
xlat
add
rclb
adc
pop
add
jg
push
stos
add
push
lea
mov
dec
or
push
dec
cmp
adc
sub
jl
movsl
mul
add
adc
pop
stos
add
adcl
lds
jl
add
icebp
add
sbb
movsb
pop
sub
sbb
mov
add
push
adc
outsb
jl
cmp
iret
mov
je
xorb
in
push
lret
and
jle,pt
aam
hlt
pop
mov
sbb
fildll
in
adcb
mov
dec
cmpsb
cmp
imul
dec
mov
je
gs
xor
or
jle
repz
add
lahf
push
jp
cltd
out
xchg
in
test
subb
sti
jecxz
sub
cmp
cmp
shrb
leave
pop
arpl
fcomps
mov
add
fs
inc
mov
sahf
cmp
in
loop
popa
add
addb
es
rolb
mov
jae
mov
xor
lods
jmp
sbb
push
ja
cmp
adc
xchg
daa
push
shlb
fcmovne
mov
seto
jp
add
ret
lea
imul
lahf
pop
adc
out
sti
mov
loopne
sbb
mov
jl
cs
int
aad
jle
jnp
addl
jp
or
jecxz
outsl
stc
add
push
sub
cpuid
testl
cli
sbb
rcl
sub
stos
add
xlat
test
add
jmp
or
mov
sbb
shlb
jb
add
stos
mov
and
xchg
imul
dec
fsubs
jl
sahf
dec
inc
stc
add
adc
inc
rorl
rorb
sbb
add
lods
xchg
movsl
add
rorl
or
rolb
sbb
mov
call
dec
xchg
mov
stc
shll
cmp
push
lods
and
jle
mov
jns
and
add
pusha
jp
mov
std
mov
sbb
inc
es
call
mov
rol
mov
mov
rolb
cltd
push
inc
popl
shrb
nop
adc
out
pop
mov
add
add
cmp
insb
add
or
aam
out
popa
insb
arpl
add
add
cs
insb
add
ret
fildl
add
std
sbb
cli
mov
rcrb
rep
out
add
pusha
adc
out
pop
shrl
xchg
adc
push
mov
cmpsb
xchg
pushf
sbb
add
pop
cld
push
pop
push
jge
loopne
push
fs
jo
mov
iret
subps
lcall
inc
jns
inc
adcl
cmp
jae
add
mov
jo
repnz
add
mov
cmp
in
dec
push
mov
sub
repz
jg
shlb
pop
pop
call
dec
mov
cli
popa
add
lea
cmpsb
fsubs
mov
push
in
lsl
add
mov
dec
pop
sbbl
lods
mov
arpl
into
jno
add
addr16
stos
add
xchg
lods
jle
lea
das
mov
push
pushf
lcall
xor
sbb
or
negb
in
fs
adc
enter
or
test
addb
push
je
sbb
cmp
stos
scas
int3
fidivl
add
sub
and
xchg
add
in
cli
jg
cmp
sub
mov
icebp
add
push
sub
ficompl
ret
xor
xor
std
mov
idivb
add
shlb
jp
mov
sbb
mov
or
pop
jno
add
fwait
dec
push
aas
add
push
mov
lds
xchg
enter
dec
xchg
push
add
stos
jno
xor
cmp
add
pop
in
lcall
or
mov
sub
jno
call
mov
or
cmp
push
or
ficoml
fwait
sti
daa
mov
outsl
inc
mov
enter
add
and
sub
stos
mov
lret
pop
mov
mov
shl
les
add
ljmp
or
cmp
add
xchg
outsb
jge
loopne
mov
xchg
cltd
imul
dec
cld
add
loope
movsl
ss
insb
add
and
imul
fidivrl
add
movsb
ja
pusha
or
mov
dec
pushl
pop
sub
inc
sahf
or
mov
out
mov
jae
sti
push
imul
push
inc
popa
test
scas
gs
je
add
scas
lret
lods
js
sbb
into
movsb
popa
mov
inc
mulps
mov
jge
jl
cmpb
pop
in
sub
push
mov
adc
aas
mov
movsl
jp
add
or
sub
and
sub
or
xchg
or
in
insl
fmull
fadds
lock
repnz
out
sarl
or
cli
loopne
int3
and
test
nop
add
icebp
popf
scas
inc
sbb
dec
mov
sbb
enter
dec
pop
lock
sbb
push
dec
inc
sbb
or
adc
add
dec
stos
adc
icebp
out
add
in
test
push
pop
adc
in
push
orb
stc
mov
cwtl
cmp
js
adc
scas
in
dec
sub
mov
fisttps
pop
iret
repnz
mov
fwait
adc
dec
das
add
mov
add
sbb
pop
mov
cmpsl
clc
xor
xorb
jo
xchg
dec
or
push
or
dec
add
js
ds
mov
adc
add
mov
rolb
jo
dec
or
lds
xchg
pop
fmull
inc
cmpb
sbb
scas
fs
sti
or
adc
xchg
and
std
insl
pop
arpl
push
jnp
add
push
cmp
sub
pop
add
int
dec
fimull
out
in
add
movb
add
sbb
loopne
add
in
scas
jge
daa
rolb
add
pop
and
adc
into
add
pop
add
movsl
fwait
in
or
cmp
or
int
dec
loop
fstpl
add
cmp
jo
sbb
shrb
xor
repz
add
test
imul
aaa
es
pop
jg
js
add
jge
adc
mov
ret
add
data16
pop
push
or
iret
cmp
adc
xlat
loopne
imul
daa
xchg
mov
int
inc
test
xchg
pop
jns
pop
adc
jne
sub
ds
popa
add
adc
shll
daa
mov
das
in
ror
jo
pop
test
and
mov
stos
js
aas
mov
icebp
mov
add
push
decb
dec
push
test
add
test
sar
test
pop
jae
pusha
in
cmp
sub
sbb
subl
or
ret
movsl
sar
inc
xchg
loope
fisubl
mov
pop
sbb
bound
push
test
or
mov
fwait
pop
xchg
or
mov
sbb
dec
and
icebp
mov
lahf
out
loop
mov
dec
mov
sbb
dec
addr16
add
pop
push
sbb
fdivs
sub
js
out
add
hlt
xchg
and
adc
and
mov
rcrb
mov
or
fldl
pop
push
mov
xchg
loopne
pop
ret
hlt
aam
lret
test
out
in
fs
sub
jne
pop
out
push
mov
add
add
daa
pusha
js
lods
add
dec
jmp
je
rclb
push
mov
mull
push
sub
mov
repnz
cmp
in
test
sbb
adc
popa
out
cli
push
adcb
mov
gs
jae
inc
ja
lahf
pusha
outsb
cwtl
data16
and
mov
pop
dec
pop
js
sub
mov
fimuls
xchg
pop
enter
add
int
cmpsl
xsaveopt
mov
push
add
push
insl
loope
ds
add
dec
loop
inc
adc
mov
pop
les
insl
lcall
cmpl
popf
add
mov
jge
add
sbb
je
movl
insb
into
pusha
sub
add
and
jb
add
xor
mov
or
ss
data16
or
cmpsb
cmpb
push
sub
add
jae
bnd
jno
adc
or
or
lret
and
sbb
add
mov
jbe
add
shll
dec
add
cwtl
fstpl
addr16
inc
adc
shll
add
movsl
inc
cs
jae
push
lret
lods
inc
push
jg
insl
add
push
iret
sub
mov
mov
push
lods
jb
nop
add
cmpsl
xorl
loop
mov
mov
mov
xchg
add
inc
add
aaa
pop
or
or
push
test
aad
pop
lahf
call
inc
xor
mov
add
rcll
repnz
push
add
rcl
xor
mov
pop
repz
and
sbb
rclb
in
pop
aas
or
fwait
lods
inc
jle
out
and
mov
xchg
ror
cmpsl
bound
add
jno
in
dec
stos
add
pop
ljmp
outsb
xor
mov
lea
push
xor
rolb
imul
addr16
ds
jno
outsb
add
stos
jb,pn
mov
add
test
cltd
fidivrs
enter
sbb
fistl
shrb
lock
bound
push
inc
xlat
fdiv
sbb
lock
sub
pop
loopne
push
fisttps
add
pop
movsl
inc
add
add
add
sub
xor
jae
cmp
sahf
xchg
pop
fidivrl
mov
lret
cmp
cmpb
xor
jge
test
cwtl
add
outsl
loopne
cmp
out
and
push
in
test
ror
hlt
loopne
push
mov
add
out
data16
push
faddl
push
xbegin
pop
add
jns
fisubl
lahf
ss
add
pop
add
daa
fdivrl
fisttps
or
jo
subl
or
jns
sbb
loope
inc
pop
mov
loop
mov
out
mov
in
call
adc
and
jo
mov
xchg
hlt
xchg
sub
add
pushl
cmp
xor
es
add
loop
inc
xor
xchg
add
mov
adc
sti
mov
test
add
test
nop
and
lret
jnp
scas
pop
jmp
add
int3
and
push
lock
xor
add
adc
lahf
or
sbb
add
and
je
js
lods
add
mov
mov
sub
pop
adcl
xchg
cmp
out
mov
xor
pop
dec
scas
xchg
fnstenv
add
rcrl
pop
inc
sarl
stos
popa
xchg
sbb
sbb
add
and
mov
dec
jecxz
add
mov
lret
xchg
add
mov
or
pop
mov
jnp
xor
jb
cmc
cli
jge
jbe
clc
into
cmp
xor
sbb
push
add
pop
and
and
adc
pop
clc
cmc
add
xor
jmp
cwtl
add
das
jecxz
addr16
std
andb
repnz
fadds
cwtl
mov
xchg
push
fildl
sub
stos
lret
push
lods
add
cmpsl
dec
and
int3
or
pop
xlat
out
xchg
enter
xchg
mov
mov
sbb
loopne
jl
out
adc
jb
sbb
jge
lcall
add
adcb
mov
in
and
pop
adc
je
enter
adc
push
sub
sbb
addr16
jge
add
add
aaa
mov
lcall
lret
xchg
dec
aas
mov
sbb
fsubl
add
jmp
add
add
test
cli
repz
add
out
cmp
scas
jb
add
scas
outsb
cmpsb
outsl
jp
xor
popa
cs
or
cmp
pop
add
in
adc
add
test
andb
in
add
ljmp
or
lock
dec
mov
push
test
fisttpll
mov
mov
mov
push
and
ret
cmpl
rorb
pop
sbb
test
insb
and
add
int
xchg
pop
xchg
pusha
lods
addl
popf
jae
pop
add
add
and
sub
lahf
ret
inc
cmc
push
push
neg
subb
inc
imul
push
pop
sbb
gs
add
xchg
mov
in
addr16
or
call
jmp
add
fstl
repnz
add
mov
add
push
push
mov
add
fs
add
dec
jae
imul
pop
push
outsb
cmovo
in
sub
fistpll
push
ret
push
mov
loope
and
hlt
adc
lds
fiadds
aad
insl
pop
cmpsl
and
stos
add
xchg
rcrb
enter
or
inc
inc
shlb
and
lret
dec
cmp
add
mov
pop
add
fidivl
jmp
subb
jbe
nop
iret
ret
mov
sbb
cmpsb
xor
or
in
lcall
adc
lcall
ja
jecxz
loop
add
daa
andl
add
mov
lock
faddl
pop
lcall
xchg
add
leave
rorb
cwtl
mov
dec
sbb
repnz
inc
xchg
adc
xchg
pushf
sbb
adc
daa
loopne
and
stos
dec
push
dec
sbb
sbb
nop
pop
loop
pop
push
xor
test
jae
push
out
pop
dec
fcoms
add
inc
lods
enter
adcl
inc
add
jne
nop
xor
sub
pop
and
jo
lock
add
push
fcmove
sbb
add
xchg
and
xchg
stos
or
mov
popa
ja
icebp
mov
nop
fucom
xchg
or
cmpb
in
adc
rcl
add
mov
pop
out
fs
add
jo
mov
xor
or
cmpb
rorl
aas
lret
mov
xor
mov
jmp
lock
in
movsb
or
sub
pushf
fwait
popl
or
mov
xor
mov
rcll
ja
in
movsl
or
xor
and
push
pop
add
dec
dec
iret
pop
hlt
jo
add
sub
cmpsl
stc
xchg
hlt
add
push
movsb
dec
orl
stos
call
sbb
in
dec
xchg
or
and
and
mov
xchg
or
cmp
roll
test
push
test
mov
jge
pop
adc
stos
incb
adc
cwtl
cli
outsb
pop
add
mov
mov
adc
pop
push
mov
nop
xchg
pop
insl
xchg
sub
add
loop
xor
mov
cmp
orb
pusha
sbb
xlat
add
add
aaa
cld
loopne
mov
stos
int3
sahf
lea
add
pop
xchg
cld
test
inc
xorb
pusha
xor
push
ja
add
cmp
add
shl
enter
fiaddl
mov
daa
push
int3
add
push
roll
popa
or
or
and
hlt
mov
test
push
cmp
loopne
insl
filds
mov
pop
repz
sti
in
xor
fsubs
inc
sub
pop
jne
dec
push
int
add
lods
mov
cs
and
rolb
dec
add
repnz
addr16
add
dec
cmp
es
dec
cmp
lock
jle,pn
cmp
fcomps
add
movsl
mov
cld
das
inc
xor
orl
hlt
in
addr16
push
xchg
imul
test
test
cwtl
fmulp
pop
aad
sbb
xchg
jbe
inc
jae
cmp
xor
fwait
lods
add
pop
dec
mov
out
mov
loopne
add
popa
andb
cmp
call
clc
cld
nop
jg
fistl
mov
adc
mov
lds
hlt
popa
inc
add
push
add
add
xchg
mov
es
rolb
pop
int
fiaddl
leave
adc
push
pusha
dec
faddl
xor
jecxz
sub
pop
cmpsb
add
dec
cmc
jae
sbb
push
loopne
nop
add
in
and
pop
push
sbb
push
mov
push
jecxz
jns
cli
mov
jo
andb
pop
add
lods
loopne
movsb
mov
add
loope
or
sarb
push
in
and
add
xor
lahf
insb
test
add
xchg
cmp
mov
dec
or
mov
mov
and
cli
in
dec
or
cmp
dec
aad
cmp
or
inc
popa
jo
mov
mov
movsb
adc
and
mov
or
or
jmp
pop
lcall
jo
cmp
fisttpl
xor
mov
add
rorl
pusha
inc
add
push
lock
pushf
and
jnp
inc
sbb
inc
out
sbb
imul
cli
inc
or
inc
add
clc
adc
or
push
cmp
mov
andl
cli
sub
mov
dec
xor
pushf
test
dec
sar
mov
add
sub
dec
push
and
add
les
mov
mov
dec
jle
ljmp
faddp
loopne
add
mov
fsubs
sub
shrl
mov
inc
dec
fsubrp
jle
loope
add
cmc
sti
int
add
decl
pop
dec
sub
xchg
add
cld
test
xlat
cli
fmul
mov
add
outsb
fistpl
or
mov
aad
add
nop
add
cmp
adc
movsl
lock
mov
add
pop
or
out
add
adc
sbb
add
and
movsb
jp
sbb
add
pop
lods
out
or
xlat
jg
mov
repnz
dec
and
inc
and
cmp
xchg
jae
xchg
jb
leave
out
dec
xor
add
ss
adc
jle
stos
add
jae
ds
sahf
cmp
pop
push
xchg
xchg
ror
sar
jp
and
sub
in
jg
add
scas
push
popa
mov
dec
pusha
addr16
stc
negb
mov
add
sub
mov
xchg
cs
out
ljmp
rcrb
xchg
hlt
cmp
sbb
loopne
int
cmp
mov
sbb
xorb
movsl
push
out
add
in
pushf
jle
push
fidivs
add
testl
push
lock
mov
inc
lods
data16
loop
int3
pusha
adc
lahf
sahf
shll
pop
pop
in
sbb
inc
xorl
xor
push
dec
leave
jmp
shll
test
fwait
aas
nop
sbb
sti
mov
xchg
loop
fists
xchg
aas
mov
pop
enter
ja
ljmp
add
jo
movsb
jg
mov
divl
add
test
adc
xor
push
and
cwtl
cwtl
add
inc
fwait
push
fildl
idivl
or
add
cmp
addr16
inc
mov
xorb
xor
das
subb
into
mov
ret
repz
or
and
pushf
andb
mov
sub
or
les
call
push
push
or
dec
inc
mov
push
push
stc
mov
add
lock
dec
mov
imul
add
pop
in
cwtl
fs
enter
gs
push
mov
xchg
add
shlb
pop
xor
pop
scas
enter
lret
inc
add
xchg
push
mov
movl
cmp
rcrb
out
xor
add
test
repz
xchg
loopne
cmpsb
xchg
add
cmp
orb
adc
fs
add
and
and
add
add
lods
lods
push
test
popf
jmp
add
dec
and
icebp
mov
paddsb
adc
mov
hlt
iret
dec
rorb
je
push
cld
xor
push
pusha
das
test
mov
pop
mov
inc
dec
leave
lcall
xchg
test
inc
and
mov
int3
ror
mov
sub
add
xor
dec
movsl
iret
add
mov
cwtl
add
cld
jmp
dec
push
and
xchg
inc
and
inc
js
dec
addr16
leave
movb
mov
iret
int3
std
add
cmp
add
ret
adc
js
dec
adc
inc
cmp
xor
push
jno
dec
orl
jb
jno
add
inc
iret
in
loopne
fcoml
add
shrl
add
enter
xchg
sbb
daa
xchg
insl
sbb
mov
cmp
push
mov
pop
xor
mov
lods
seto
add
enter
cwtl
pushf
andb
jmp
add
sbb
stos
in
adc
bound
jp
xchg
icebp
add
xor
jns
add
loop
jecxz
das
mov
push
and
shrb
arpl
jno
pop
fwait
pop
jne
jns
mov
call
add
xchg
xchg
cmpsl
fsubrs
mov
pop
sbb
jae
pop
push
and
into
add
inc
je
imul
jne,pt
insl
mov
nop
add
and
inc
out
subb
jmp
add
cmpsl
icebp
push
xchg
sbb
lock
shll
adc
cld
or
sub
inc
add
xor
aad
shlb
cmpb
cli
push
loopnew
sahf
xchg
xor
sub
std
mov
mov
les
inc
leave
bound
loop
notb
add
aas
or
popa
jp
rcrl
sahf
mov
jo
inc
add
mov
mov
add
fcmovne
add
shlb
fnsave
add
lds
mov
std
or
adc
pop
daa
xor
jecxz
xor
ret
lods
adc
pusha
ret
rolb
push
outsb
mov
add
aas
lods
and
xor
cs
add
cmp
cmp
push
leave
add
push
js
adc
cld
or
dec
jp,pt
sbb
sub
push
pop
push
push
psubsw
orb
testb
js
hlt
shlb
shll
push
jmp
pop
jo
mov
cmp
hlt
and
or
add
sbbb
mov
mov
add
inc
inc
dec
adc
stos
add
inc
add
std
ret
test
test
add
pop
fcoml
cmc
xchg
cwtl
leave
xor
sbb
nop
faddl
ljmp
pop
or
cli
insb
test
dec
add
ret
adc
shll
in
daa
add
clts
call
repnz
sarl
add
sub
dec
add
mov
sarb
nop
clc
cmp
xor
pusha
cld
mov
pop
into
aam
mov
loope
dec
inc
je
roll
pop
out
or
sub
mov
and
mov
pop
inc
loope
in
mov
cmc
cmpsl
repnz
std
loopne
add
xor
iret
ja
out
xor
adc
sub
int
add
xor
lds
add
pop
loope
rolb
jp
push
fs
aad
mov
sbb
mov
xor
sub
inc
sbb
adc
inc
jp
adc
push
add
loope
inc
cmp
mov
pusha
and
lahf
out
add
adc
jnp
mov
and
stc
add
xchg
test
jae
sbb
in
jae
jl
add
outsl
push
and
enter
test
xor
les
pop
add
inc
adc
inc
jle
ja
pop
test
or
shrb
jp
cmp
shr
out
mov
mov
movb
mov
jbe
adcb
test
jge
rcll
or
mov
popa
inc
scas
add
jmp
outsl
dec
mov
jne
inc
push
pop
test
js
cwtl
dec
cmp
inc
pusha
pusha
out
pop
lcall
adc
push
pop
lock
dec
add
scas
daa
or
test
call
aaa
jle
nop
jnp
inc
addb
out
push
dec
sbb
adc
cmp
into
push
mov
jmp
xor
ret
mov
sbb
and
or
lcall
testb
or
sbb
inc
or
aaa
mov
mov
sbb
xor
or
and
sub
sbb
and
movsb
subl
xor
xorb
cld
dec
jbe
movsl
add
lret
jns
iret
inc
jg
push
or
movb
dec
inc
push
icebp
fisttpll
cmp
je
fcoml
scas
adc
pop
lods
adc
sub
pop
pop
dec
fmuls
add
mov
jb
pop
jg
fcmovu
clc
lea
pop
xor
sbbb
or
mov
fcompl
mov
jmp
push
sbb
jae
sbb
xchg
ret
addr16
sti
add
sahf
subb
gs
rcrb
mov
xchg
pop
or
adc
dec
lret
pop
add
jae
stos
dec
rclb
xchg
arpl
into
pop
sbb
mov
imul
in
xchg
mov
ja
mov
mov
or
adc
testl
lret
mov
rcrl
psubusw
push
sub
or
shlb
shrw
push
mov
repnz
pop
and
pusha
mov
inc
js
sbb
hlt
inc
loopne
pop
enter
xlat
or
lret
subb
sub
adc
pop
std
sbb
adc
scas
inc
mov
bound
hlt
cmpsl
jecxz
rorb
roll
inc
scas
sub
mov
cmp
dec
cmp
mov
bound
add
add
inc
cmp
push
scas
xor
push
xlat
pop
add
addr16
data16
add
add
push
add
rorb
xor
insl
out
and
sbb
rorb
pop
inc
push
cltd
add
jle
bound
sub
mov
mov
flds
sub
inc
mov
shlb
inc
sub
cltd
push
divb
pusha
and
add
aas
lcall
add
daa
imul
push
inc
and
or
out
loop
jp
cvttps2pi
out
pusha
mov
dec
mov
xchg
enter
cli
addl
pusha
aaa
xlat
add
sub
inc
jb
movsb
push
cmp
pop
jmp
stc
pop
scas
mov
fs
aaa
push
sbb
pop
sti
outsl
insl
rcrb
add
ljmp
or
aam
sub
mov
cld
jp
add
push
xor
mov
int
xchg
shr
pushf
add
xor
loop
or
pushf
je
mov
jge
xchg
cli
add
bnd
pop
xorl
andb
in
xchg
push
or
mov
movb
out
fdivl
arpl
sbb
or
leave
adc
movb
cld
es
arpl
inc
push
cmp
add
sbb
inc
fwait
push
daa
iret
testl
aam
std
inc
in
or
xchg
cwtl
sbbb
cltd
mulb
sbb
mov
inc
mov
add
iret
jo
mov
sahf
push
nop
popa
insb
ja
cmovl
bound
add
testb
cwtl
jg
xor
std
push
mov
xchg
in
shlb
add
xchg
cmpsb
out
mov
testl
and
jg
mov
add
stc
push
out
add
sub
add
push
sub
or
mov
mov
imul
rclb
jmp
fcompl
cwtl
repz
pusha
stos
int3
pop
mov
rcrl
adc
aas
cmp
out
cwtl
nop
cwtl
push
pop
or
ljmp
js
cmp
ds
jle
jl
shll
outsl
cwtl
loopne
cmp
call
and
xchg
xor
mov
jns
lret
pop
and
mov
inc
shrl
push
das
setp
lods
fistl
test
or
pusha
popf
inc
pop
inc
and
xchg
sbb
int
push
outsl
or
sbb
pushf
add
mov
js
jl
fisttps
xchg
add
andnps
es
in
add
mov
into
mov
addr16
sub
and
daa
jb
mov
pop
imul
rclb
mov
or
lret
add
pop
xchg
adc
sbb
jbe
and
add
fxam
push
imul
setb
in
stc
loopne
pop
mov
cmp
loope
sbb
mov
adc
and
cli
add
out
jg
mov
jmp
mov
add
in
scas
shll
mov
jl
aaa
popa
mov
push
mov
mov
add
pop
hlt
cwtl
fnstenv
push
inc
in
cmp
jbe
cmp
sub
pop
imul
nop
shrb
xchg
punpcklbw
lret
add
loopne
inc
es
jb
add
jmp
cld
cmpsb
fsubs
pop
mov
xchg
outsl
imul
jno
jl
pusha
sahf
lds
jle
xchg
jbe
ljmp
das
imul
and
cld
push
imul
xchg
mov
mov
rorb
sub
mov
pop
leave
adc
xor
popl
push
xchg
mov
lgs
sar
ret
jle
push
fsubs
push
loop
cmp
adc
xchg
jb
ljmp
test
imul
sbb
adc
and
loope
fcoms
inc
pop
pop
mov
enter
add
xchg
call
push
pop
xor
mov
adc
in
enter
out
shl
dec
icebp
mov
inc
les
das
push
inc
and
push
int
lea
xor
sahf
aad
mov
mov
out
faddl
arpl
scas
mov
xchg
jge
dec
jle
add
popf
flds
leave
dec
stos
lea
loopne
test
inc
pusha
sub
pop
mov
imul
sub
push
cs
mov
dec
sub
add
fbld
xor
clc
cmp
inc
push
cwtl
sub
inc
pop
sarb
xchg
or
cmp
pusha
addb
pop
add
xchg
aaa
add
jo
outsb
add
push
jne
sbb
push
add
pop
ror
sar
hlt
in
sbb
xchg
xor
sbb
pop
adc
inc
int
push
push
repz
add
aam
or
dec
ljmp
subl
das
inc
push
addr16
push
add
dec
test
inc
enter
jno
sub
add
add
pop
loope
es
mov
scas
mov
xchg
aas
jne
lahf
jno
xchg
faddl
add
and
mov
js
fimull
adc
xor
leave
xchg
das
sbb
mov
adc
bound
imul
cmpsl
and
add
or
sarb
push
in
sbb
add
and
loop
add
mov
add
inc
sarb
mov
test
test
test
outsb
fwait
not
sub
or
bound
iret
scas
jge
adcb
mov
add
gs
add
enter
out
test
add
xchg
imul
push
push
sub
or
add
test
adc
add
out
movsl
mov
bound
into
push
sbb
xorl
jae
push
xchg
fwait
adc
dec
pushl
cmp
lret
adcb
lods
fs
add
fldcw
mov
cmp
js
repz
cwtl
xlat
add
int3
cmp
mov
add
fs
or
jp
sbb
jo
clc
jb
and
movsb
cli
mov
ss
inc
int3
push
push
add
call
lods
jp
mov
lret
jnp
or
xor
and
and
sub
addl
dec
out
cmp
add
in
inc
psrlw
in
add
int3
xor
mov
add
cmp
icebp
fmul
xor
add
fcompl
pusha
pop
out
or
sbb
mov
aaa
jno
neg
aas
add
add
outsl
icebp
add
fmul
mov
xchg
mov
mov
stos
mov
nop
xlat
xchg
call
std
cmp
dec
movsb
in
enter
and
push
dec
std
das
add
cmp
mov
mov
stc
mov
add
in
out
xchg
add
out
mov
in
pop
push
adc
xchg
mov
ja
mov
inc
dec
sub
mov
xchg
lea
cmpsb
dec
adc
add
pop
fstpt
cmp
cmp
sub
pop
out
inc
add
addl
xor
and
pop
xchg
jl
add
sub
adc
inc
or
ret
out
add
imul
add
test
inc
mov
xor
leave
inc
push
loopne
std
sbb
mov
popa
jb
les
dec
add
sbb
mov
xchg
push
mov
cmpsl
add
negl
pop
sarl
dec
insl
nop
add
pop
cs
insb
cld
es
ss
or
add
xor
lods
daa
pusha
jecxz
pop
rorl
mov
in
cwtl
out
cwtl
mov
sub
js
jge
imul
xor
stos
cmp
rcl
addb
sub
faddl
popf
subb
arpl
add
push
aam
cmp
jo
cmp
or
stos
xlat
and
ds
dec
pop
mov
sbb
mov
dec
out
adc
push
add
cmp
cs
jecxz
mov
outsl
inc
lcall
xchg
pop
mov
aad
in
sub
mov
jmp
aaa
push
fsub
xchg
cmp
mov
lods
jecxz
pushf
fcoms
fdivl
add
lds
hlt
scas
popl
in
inc
push
sarb
cmp
add
je
rclb
jns
add
jl
fdivrs
lods
jmp
xor
adc
xlat
push
adc
inc
add
mov
or
mov
mov
fisttpll
shlb
or
xchg
mov
jb
data16
aas
mov
nop
dec
dec
cmp
dec
add
enter
leave
mov
mov
subl
xor
lods
cmp
int3
repnz
sub
mov
mov
in
lea
add
imul
add
fwait
popw
push
sub
bound
adc
arpl
ja
dec
xorb
mov
add
insl
shll
imul
add
mov
orb
sub
push
or
and
inc
cwtl
cmpb
jb
jg
inc
push
xor
ficomps
lds
adc
xor
push
cmpsb
vshufps
mov
adc
push
xor
lahf
jg
incb
add
jp
inc
movsl
ljmp
dec
cmp
setae
ljmp
inc
push
push
or
add
mov
outsl
adc
pop
xchg
jns
pop
faddl
fistps
cmp
sahf
xchg
movsl
shl
pop
dec
sbb
test
and
adc
pop
and
inc
movsb
sbb
rorb
lods
sahf
nop
mov
ret
loopne
popf
out
mov
mov
mov
sbb
xor
leave
sti
dec
adc
dec
roll
inc
inc
testb
fcmovnb
nop
mov
sbbb
cmp
lods
dec
iret
push
xchg
cwtl
clc
add
pop
loope
dec
sub
int3
ret
jp
and
cli
xor
testb
sbb
xchg
mov
add
mov
bound
mov
lea
add
add
out
mov
lods
dec
push
push
adcb
push
shlb
sti
sar
mov
add
js
mov
aad
pop
or
add
and
or
cld
or
cmp
or
adc
movsb
icebp
add
ss
adc
add
adc
jnp
mov
ret
fistl
dec
sub
add
mov
mov
xchg
or
arpl
cld
cmp
dec
stos
add
inc
xchg
mov
push
xchg
and
movb
ret
in
and
shll
outsb
mov
mov
and
into
subb
xchg
xchg
and
je
repz
subl
out
inc
xlat
out
jbe
jno
add
jb
into
jl
dec
sti
add
fdiv
inc
sbb
add
add
xor
leave
stos
add
pop
push
rcrl
add
lods
les
jecxz
add
mov
ret
int3
sub
xor
cmp
fwait
outsb
sbb
rol
pop
insb
jo
loope
mov
mov
mov
subb
lea
cli
lods
rclb
int
or
cwtl
xor
xchg
jecxz
pop
and
adc
xchg
mov
sub
hlt
or
cli
sbb
lcall
push
adc
mov
pop
fs
iret
jo
data16
xchg
push
xchg
sub
mov
jecxz
mov
cwtl
adc
ljmp
addb
sub
add
add
lds
xchg
test
inc
sbbb
xchg
jbe
mov
sub
inc
out
add
test
frstor
pop
inc
lds
push
pop
or
add
sub
add
sbb
popw
xlat
jne
pop
jbe
out
pusha
mov
xchg
push
add
push
fcomps
pop
xchg
pop
aad
ja
sub
cmpsl
insl
fisttps
add
icebp
sbb
push
arpl
ja
add
fnstsw
movsl
test
addb
popf
mov
test
das
insb
std
add
scas
xor
mov
push
ficoml
mov
add
test
dec
cmp
add
inc
imul
push
rclb
dec
push
mov
loopne
xchg
add
aas
orb
hlt
jg
pusha
jne
push
sti
loope
add
pop
mov
adc
addr16
out
pusha
xchg
push
add
jl
filds
pusha
add
arpl
xchg
sbb
mov
jb
push
int3
js
mov
les
add
fldl
add
or
xor
mov
dec
mov
ret
add
and
pop
sbb
pop
push
nop
loop
sub
xor
js
sub
mov
sbb
xor
cmp
jo
add
adc
fdivl
aad
enter
rorl
mov
pop
lock
xchg
push
mov
pop
fsts
cmc
adc
xor
out
mov
inc
out
xchg
add
add
int3
shl
jno
mov
jne
add
mov
add
sub
js
mov
add
addr16
fadds
cmp
orl
lcall
cld
add
dec
push
adc
pop
icebp
jo
repnz
jg
divl
add
sbb
jl
mov
iret
mov
loop
add
jg
pop
fisubrs
mov
xchg
sar
add
xchg
mov
mov
sysret
fistl
clc
sahf
cmp
enter
mov
jg
cmp
inc
enter
je,pn
stos
pop
pushf
adc
add
shrl
in
dec
xor
dec
test
mov
pop
adc
mov
hlt
negl
in
mov
daa
inc
mov
add
add
xor
pusha
fld
jae
adc
and
push
sti
sbb
pop
mov
in
dec
adc
push
add
and
sub
ljmp
filds
test
fadds
add
ficoml
sub
add
add
cwtl
cs
or
pop
incb
dec
dec
fsubl
cld
aaa
add
stc
test
push
test
xchg
xlat
sub
add
aam
jb
cmp
loopne
idivl
xchg
adc
and
add
mov
push
out
add
int3
iret
jns
sub
filds
mov
mov
mov
cmp
add
sahf
xlat
mov
aad
pop
add
sub
jno
arpl
cmp
or
fisttpll
das
push
cmp
pop
and
test
outsb
add
fcomi
sbb
lret
imul
mov
into
xchg
or
scas
jg
mov
pop
movl
cmp
cwtl
in
andb
sbb
test
test
push
push
push
aaa
dec
aam
fnsave
call
pushf
mov
mov
dec
testb
mov
add
cwtl
out
in
mov
add
xchg
mov
pop
or
adc
or
inc
pushf
and
jl
sbb
and
add
pusha
mov
pop
lret
pusha
pop
testl
and
lret
jge
add
mov
mov
sarl
xor
orl
push
fbstp
and
jns
inc
enter
add
add
adc
mov
adc
xchg
xchg
and
add
jb
ja
jle
add
sub
push
jbe
xor
inc
rorl
aad
sbb
mov
mov
jb
push
imulb
enter
mov
bound
mov
ds
js
cmpsl
pop
add
movsl
dec
ljmp
sbb
in
lcall
add
xchg
lret
add
adc
aaa
inc
roll
movsl
cmpsl
inc
lods
and
xorl
cmp
xchg
or
shrb
add
icebp
cld
and
add
out
cmp
nop
push
add
pop
inc
xor
inc
push
shlb
mov
clc
add
mov
shl
sbb
imul
and
cmpb
add
ret
jmp
inc
adc
cmp
add
xchg
or
or
pop
adc
movsl
add
test
popa
adc
rcl
lods
fcompl
pop
stos
test
mov
push
dec
js
call
addr16
add
mov
jno
idivl
int
xlat
insl
dec
mov
add
cmpb
xchg
subl
jb
pusha
aas
sbb
leave
add
inc
mov
in
cmp
cmp
lds
add
add
loopne
xlat
sbb
incb
sbb
push
push
push
push
test
xor
sbb
dec
je
aas
xor
lds
insb
cmp
fistpll
sbb
add
rclb
add
aad
push
shll
pop
loop
xchg
add
xchg
mov
pop
in
mov
add
daa
mov
in
push
jg,pn
add
std
mov
lahf
or
jle
leave
adc
imul
xchg
add
push
insl
stc
sbb
cmp
outsl
xorb
in
pop
adc
dec
sbbl
aam
in
or
mov
xchg
jne
je
sti
add
and
aas
and
nop
or
cmpsb
and
iret
xor
sbb
jo
add
push
int
add
cmp
pusha
stos
test
pop
hlt
pop
inc
sbb
xor
mov
adc
mulb
test
das
cmp
movsl
scas
or
loopne,pn
sub
and
dec
cmp
jecxz
adc
movsw
sbb
in
movsb
xchg
sbb
add
mul
ret
xor
or
xchg
adc
push
mulb
add
push
add
cli
and
aaa
push
jo
sub
add
and
pushf
into
popl
fwait
cmp
xor
xchg
mov
jecxz
sbb
add
jle
fidivrl
repnz
add
adc
enter
pusha
jle
inc
push
push
movsb
aas
hlt
xlat
add
repnz
add
xor
add
pusha
add
or
pusha
aam
mov
add
sub
cmp
orb
sbb
dec
mov
sbb
in
testl
out
xor
movups
rcll
add
xlat
and
jmp
pop
add
mov
adc
mov
das
jae
loopne
pop
xorb
cs
mov
or
sahf
xor
lcall
shll
pushf
xchg
push
add
jb
sbb
ret
jle
jp
movzbl
or
pop
notrack
xchg
cwtl
sbbb
cmpsb
mov
sarl
int3
test
mov
push
mov
add
js
loopne
sarl
out
and
enter
sbb
rolb
push
adc
add
sbb
or
push
mov
add
mov
xchg
scas
inc
js
clc
fildl
sbb
psubd
mov
aaa
fwait
pop
jbe
or
repnz
adc
pop
dec
jle
sbb
inc
mov
add
ja
ret
sub
test
inc
xchg
pop
add
push
nop
and
stos
sbb
into
mov
fnstcw
iret
jnp
push
push
icebp
pop
add
xor
fisubrs
cltd
cmp
cs
jno
mov
sar
mov
mov
js
add
mov
xchg
add
pusha
call
imulb
loope
push
lcall
gs
xchg
add
inc
xchg
jge
add
adc
add
xor
pop
rcr
sbb
adc
and
or
mov
arpl
xchg
int3
jb
lock
push
test
clc
out
push
fsubs
xor
mov
fistpll
sub
lcall
push
jae
push
in
sbb
mov
hlt
addr16
dec
pop
faddp
ljmp
jmp
lock
add
jns
cld
aas
popf
imul
add
xchg
bound
adc
out
mov
cli
inc
add
jnp
lods
sub
xor
cwtl
call
or
add
add
les
fnstcw
add
cltd
mov
mov
stos
mov
fcos
in
push
mov
mov
insl
add
outsl
inc
pop
pop
in
jge
or
mov
jns
sbb
adc
add
js
add
rorb
and
xor
add
cmp
mov
sti
enter
jmp
sub
scas
fiadds
enter
xor
popa
dec
data16
pop
in
jle,pt
jl
mov
or
je
addr16
lods
add
out
push
pop
and
gs
out
xor
xor
and
imul
sbb
add
xchg
aaa
std
jb
adc
es
into
add
dec
push
xchg
dec
sbbl
nop
dec
and
cld
push
into
pop
add
scas
pop
and
leave
mov
fs
pusha
imul
into
cmp
push
lock
sbb
inc
shl
fucom
mov
push
out
xchg
into
push
add
aaa
mov
ja
pop
mov
add
aas
hlt
or
mov
enter
push
lods
xchg
pop
aad
lcall
call
aam
sbb
pop
jb
or
fdivp
mov
incl
lahf
sbb
xchg
sar
aas
add
adc
xor
add
xchg
pop
mov
insl
xchg
mov
mov
scas
xchg
push
pop
cwtl
gs
push
add
add
clc
sub
dec
into
push
pop
enter
rclb
aad
es
sbb
into
mov
jb
dec
add
add
out
rol
add
dec
sub
ja
lcall
shrb
cmpsb
les
shrb
sti
in
sub
push
push
repnz
xor
add
stos
jle
xchg
sar
cmp
bound
stos
fabs
xor
push
in
push
ds
ljmp
xchg
loopne
pop
mov
sbb
adc
add
xor
sbb
ss
filds
sbbb
add
cmc
or
and
sbb
cs
pop
push
test
aaa
test
rol
cld
inc
add
ja
shr
dec
jp
add
adcl
xorb
imul
jo
or
ficoms
inc
jae
push
or
xor
push
add
loope
pop
mov
add
or
fisubrs
xchg
inc
and
call
repnz
or
pop
jle
sub
fdivl
jecxz
inc
fisubrl
pop
scas
mov
push
mov
sti
xchg
mov
pop
push
lea
cmpsl
or
sub
mov
sbb
jp
adc
dec
mov
push
mov
test
dec
adcl
pop
jmp
jmp
bnd
scas
pop
cmp
lahf
inc
rclb
jns
mov
push
sbb
xor
shrb
lods
rolb
jne
inc
mov
add
sarl
lcall
push
gs
in
mov
jp
aaa
repnz
add
stos
fucomp
repnz
fcompl
xchg
sub
push
pop
sahf
jge
pop
sub
gs
fwait
add
add
ds
ja
and
jae
pusha
adc
in
push
adc
inc
mov
jl
movsb
xor
and
xchg
push
adc
inc
addb
outsb
popf
mov
ficompl
mov
movsl
lret
add
mov
push
sti
ret
jle
int
out
lcall
hlt
push
adc
mov
arpl
mov
push
cmpsl
incl
movsb
mov
fimull
push
filds
adc
subl
mov
mov
insl
push
lcall
je
call
xor
add
inc
aas
xorl
push
pop
clc
pushf
roll
xlat
in
adc
roll
or
push
push
pusha
ds
in
daa
fldcw
or
insl
and
and
cld
xor
test
lret
mov
enter
dec
add
push
lcall
inc
push
mov
jg
jle
sbb
jmp
mov
jns
femms
in
cmp
add
enter
leave
and
icebp
sbb
cltd
mov
or
pop
sub
ror
outsb
mov
insb
mov
sahf
aaa
cli
add
sbb
mov
cltd
call
ret
js
scas
jb
jge
add
mov
inc
or
fcomp
jo
mov
sub
insb
push
andl
jo
add
test
xor
inc
jle
cltd
sbb
sbb
cwtl
test
pop
rolb
imul
add
sbb
mov
push
add
or
ret
inc
dec
mov
pop
rcrl
mov
leave
out
pushf
aam
sub
add
enter
shr
push
arpl
sub
xchg
sahf
out
into
xor
mov
cli
in
out
xor
inc
push
pop
div
std
xchg
roll
adc
repz
daa
mov
add
call
or
data16
out
insl
mov
add
mov
push
xlat
xchg
fildl
imul
aad
cmp
mov
push
mov
mov
dec
nop
cmc
ret
mov
sbbl
jle
mov
fcoml
or
dec
mov
pop
push
add
add
mov
cli
jnp
add
bound
test
xor
adc
in
xlat
xor
or
lods
or
lret
cmp
sub
jns
add
ret
fisubrs
pop
inc
pop
scas
add
in
aam
lods
inc
xor
mov
rcll
mov
out
fisubrs
add
fistl
add
int3
ret
flds
loopne
mov
and
fcompl
cmp
pusha
enter
jmp
mov
addb
jbe
cmp
out
xchg
cltd
sbb
mov
add
int
enter
movsb
sbb
add
dec
jge
cmp
lcall
adc
add
jae
or
dec
aad
dec
adc
test
or
or
mov
fstl
movsb
and
pop
dec
pop
sbbb
stc
cmc
add
fisubl
divl
sub
push
add
inc
add
push
mov
loope
xorl
add
dec
aam
cwtl
outsl
mov
push
inc
inc
lods
pusha
add
lret
stos
mov
cltd
mov
sub
je
cwtl
lcall
mov
sub
hlt
lahf
pop
pop
xlat
pop
notl
push
and
idiv
xchg
icebp
add
js
or
add
out
xor
add
fcoml
push
and
roll
fistpl
lock
test
cmc
add
lcall
xchg
je
xor
lock
jmp
not
add
xchg
repnz
mov
add
add
push
mov
mov
clts
fwait
add
adc
outsb
fwait
add
insl
out
mov
add
test
sbb
jb
push
add
push
mov
mov
incb
mov
call
sub
xor
inc
add
mov
jp
cmp
sbbb
fldenv
lahf
into
add
call
dec
push
mov
mov
mov
sbb
or
ficompl
das
clc
outsl
inc
flds
xor
stos
rcrl
es
lcall
pop
adc
fisttps
stc
xor
xor
add
and
adc
mov
dec
push
pusha
or
add
sahf
xchg
xchg
jg
add
or
rcl
push
add
je
ss
dec
adcb
sbb
int3
or
add
add
mov
lea
push
mov
adc
xchg
push
mov
int3
outsb
xor
xor
data16
add
fistpll
out
add
push
mov
mov
ss
xor
mov
xor
in
cmp
jg
push
jne
sbb
add
cwtl
ffreep
dec
adc
sahf
add
lds
incl
imul
fldl
insb
xlat
out
cmp
and
dec
sub
ficomps
push
push
push
loopne
cmpsl
ss
sbb
and
add
lahf
adc
dec
mov
mov
adc
movsb
int3
xor
test
xlat
fildl
stc
pushf
and
add
inc
xchg
dec
pop
sub
fbstp
xchg
cld
sahf
dec
cmp
sbb
stc
lock
shll
mov
mov
add
and
xchg
nop
mov
push
jle
or
and
adc
xchg
and
sbbb
cs
imul
adc
aam
lea
outsl
xor
xchg
sub
roll
aas
add
cli
sub
cmp
pusha
or
inc
xchg
pop
add
je
test
sub
xchg
adc
outsl
and
orl
adc
jle
pusha
cs
push
cmpl
add
cmp
sbb
inc
xor
orl
or
adc
add
lret
mov
and
cli
cld
js
icebp
sbb
or
pop
xchg
cli
adc
fsts
inc
subb
jo
repz
push
ret
std
add
sub
clc
and
cwtl
loope
cmp
or
cwtl
inc
js
lea
repz
loopne
or
bound
mov
and
jns
xor
adc
out
or
add
es
jne
xorl
inc
push
inc
cld
into
cwtl
fs
or
mov
xorb
and
ret
insl
and
add
cmc
jge
cmpsl
jnp
mov
fnstsw
xchg
inc
sbbl
outsb
sub
int3
adc
shl
mov
arpl
mov
xor
adc
or
insb
inc
push
or
cmp
cld
mov
xor
popf
negl
fiadds
and
sbb
dec
and
jne
jecxz
pop
test
push
sbb
int3
add
mov
jns
loope
pop
adcl
lock
xor
and
mov
test
mov
push
and
inc
pop
or
rclb
push
js
or
insb
xor
fisttps
mov
inc
mov
pop
shlb
pop
clc
inc
mov
sbb
dec
or
cmpb
xchg
gs
call
rcr
cld
mov
sub
cmpb
and
and
push
push
pushf
push
roll
movsb
icebp
mov
test
xchg
imul
sub
sbb
outsl
sub
sahf
sbb
fidivs
repz
lods
xchg
sub
rolb
cmpsb
enter
jg
push
push
mov
sub
inc
rcrl
lcall
icebp
sub
rolb
jmp
add
cmp
mov
cwtl
test
cmp
popl
xchg
xor
aam
mov
cmp
or
xchg
mov
add
xchg
add
lods
dec
mov
dec
out
into
mov
ljmp
mulb
mov
fstp
jmp
mov
xchg
ja,pt
add
fcomi
or
insl
xchg
sbb
subl
imul
xchg
sbb
jp
fs
orb
and
mov
push
inc
jl
fiaddl
inc
out
fsubrp
or
gs
xchg
orl
les
mov
dec
sub
push
cld
pop
mov
cld
add
cmc
sub
addb
jb
adc
sub
lock
dec
cmp
xor
jecxz
test
les
push
out
mov
add
lcall
push
sbb
fadds
int3
add
push
ljmp
sbb
movsb
fsubs
andb
add
pop
push
cmp
ljmp
push
cmpsb
inc
mov
fwait
xchg
cmp
mov
cmpsl
and
or
lock
clc
sub
or
sbb
and
sbb
enter
popf
dec
mov
sbb
cld
test
jecxz
into
lock
sub
mov
xlat
add
xchg
mov
es
lcall
or
push
bound
add
divb
jns
push
cmp
jg
mov
dec
ret
cmpsb
mov
and
movsb
mov
add
pop
or
xchg
outsb
jne
xchg
xchg
or
int3
xlat
jle
sbb
adc
xor
pop
js,pt
inc
mov
pop
sahf
mov
or
ja
push
scas
and
dec
lcall
sbb
ja
movb
dec
cmp
int3
xchg
push
mov
xlat
addb
dec
mov
int
pop
and
out
xchg
xor
jge
inc
pop
adc
adc
xchg
clc
scas
pusha
out
out
int
repnz
xor
sti
and
dec
lock
fidivs
sub
imul
outsb
lods
dec
dec
insl
and
push
xchg
daa
mov
xor
pop
test
js
or
pusha
loope
adc
inc
int
cmp
jne
adc
sub
cmpsl
mov
add
or
and
or
cmp
adc
and
or
or
or
addb
out
add
ljmp
and
sbb
int3
stc
or
lret
xor
in
out
add
pop
sbb
inc
pop
test
add
xchg
or
into
jb
nop
out
xorl
push
xor
jo
ret
add
jmp
cld
sub
dec
loopne
dec
pop
xchg
add
jno
loop
pop
xor
shl
adc
jno
xor
inc
adc
or
movsb
mull
adc
sahf
and
add
cmpsb
popl
mov
nop
es
jo
incl
mov
jns
shlb
int3
pop
add
mov
cld
imul
dec
test
aam
cs
or
or
orb
adc
scas
inc
push
lods
cs
xor
pop
lods
add
lea
and
inc
mov
sbb
roll
test
adc
dec
mov
out
mov
jmp
mov
ret
fs
imul
aam
ret
cmp
xchg
outsb
mov
xor
movsb
jnp
mov
imul
repnz
popa
mov
lock
cmp
fwait
or
mov
or
inc
add
arpl
push
mov
or
inc
or
mov
inc
subb
mov
dec
mov
add
es
push
test
subl
out
or
mov
add
jge
cmp
arpl
nop
mov
subl
adc
or
xorl
mov
add
inc
int3
das
data16
aam
xchg
mov
jmp
xchg
xor
sysexit
orb
fcoml
push
adc
adcl
dec
and
xchg
sbb
iret
xchg
cmpsl
fwait
enter
sbb
add
mov
jg
repz
jge
xchg
inc
push
pusha
dec
in
ss
add
jns
adc
pop
fcomp
rep
aam
add
fdiv
fnstsw
test
ror
pusha
les
mov
fs
inc
mov
jns
lea
test
mov
lret
jecxz
xchg
and
in
lret
mov
insl
and
lcall
and
push
popa
leave
cmp
push
enter
xchg
mov
add
mov
pushf
sub
ficoms
adc
sub
push
pop
pop
movsb
adcl
and
shrl
mov
mov
jnp
sbb
adc
les
mov
mov
jg
add
mulb
movsb
sbb
push
bnd
imul
push
mov
inc
data16
cmpsl
call
sub
pop
or
add
and
adc
xor
dec
push
inc
xor
dec
lcall
or
in
hlt
fcmovnb
mov
dec
xlat
or
pop
nop
cmp
push
loop
jbe
mov
sub
cld
mov
aam
mov
and
cmp
jo
fs
lret
stos
ljmp
push
mov
jmp
lret
xor
mov
xor
hlt
test
inc
jge
addb
add
cwtl
aad
xorl
push
out
pop
clc
sbb
fld
mov
jb
sbb
sbb
mov
call
clc
std
pop
pop
insb
fdivl
sbb
pusha
or
scas
mov
cmp
adc
pop
shlb
cmp
or
inc
jno
out
add
int
xchg
mov
lcall
and
mov
and
incl
mov
inc
aam
lods
cmpsb
loopne
push
lods
mov
fadds
add
pop
in
xchg
nop
inc
cmpsl
subb
test
loopne
rcrb
adc
fdivrl
sub
push
add
lret
in
addr16
mov
movsb
mov
mov
mov
add
popa
aam
cmp
fsubs
sbb
mov
add
add
pop
fcoml
xchg
inc
imul
cmpsb
fnstsw
testl
lock
and
loopne
sbb
movsb
mov
or
sbb
rcr
or
add
inc
enter
add
imul
movsb
lods
inc
outsb
or
and
loope
out
dec
popa
in
cwtl
cmpsl
fdivrl
vmread
stos
mov
fisttpl
push
test
add
push
mov
sub
dec
mov
lds
add
adcb
add
scas
push
mov
mov
movb
inc
or
scas
mov
test
sub
inc
enter
leave
push
sti
push
or
imul
cmpsb
insl
es
inc
adc
xor
fmull
xchg
add
mov
ljmp
int
dec
pop
mov
pop
stos
cmp
pop
fldt
arpl
adc
dec
xor
sbb
adc
movsb
jge
nop
in
daa
pop
mov
add
subl
lahf
cmp
inc
cmp
and
into
adcb
dec
lret
cmp
das
jns
add
mov
js
inc
push
das
adc
movsb
cmp
inc
xchg
outsb
sbb
mov
jns
mov
sub
movsb
es
cmp
sbbb
addr16
ret
xor
or
adc
push
add
je
ja
js
addr16
gs
leave
enter
in
mov
xchg
js
lock
and
cmp
cltd
cmp
sbb
dec
push
shll
sub
or
or
hlt
data16
sub
push
ret
or
xchg
insb
add
dec
addb
jl
and
shrb
lret
arpl
lcall
push
mov
inc
test
add
jl
mov
xchg
or
movsb
pushf
cmpb
sbb
push
cmp
fldenv
insl
mov
push
jno
or
icebp
and
mulb
sbbl
in
cmp
and
adc
std
jne
lret
add
fwait
cmpsw
aam
repnz
adc
repz
cwtl
add
push
xorl
mov
xchg
in
int3
mov
add
jg
mov
mov
inc
mov
push
insl
js
mov
in
out
mov
fwait
xor
xchg
stos
inc
lea
rolb
push
inc
sbb
sub
add
sbb
pusha
mov
mov
mov
scas
repz
popf
adc
arpl
and
lods
xchg
fcomps
dec
jnp
gs
add
pop
cmc
movsb
aas
leave
pop
fs
mov
adc
push
adc
adc
pop
fs
or
dec
repz
aad
fimuls
in
out
sbb
pop
jae
cmpsb
xchg
in
mov
lahf
sbb
adc
push
push
int
and
and
dec
dec
add
clc
test
xor
xor
and
fiadds
jecxz
dec
mov
xor
in
mov
add
cld
out
out
sub
addl
leave
fbld
in
mov
cmpsl
lds
mov
mov
pop
and
or
add
add
je
mov
aaa
or
push
idivl
addb
xor
outsl
add
in
icebp
mov
and
add
push
adc
mov
add
mov
test
lret
cmp
mov
pop
push
jmp
cld
push
dec
add
pop
lods
inc
dec
adc
pop
jp
mov
push
sub
aam
es
cmp
mov
jns
add
lret
sub
leave
xchg
sbb
xchg
sbbb
add
rcll
cmp
imul
repnz
das
scas
fisubs
movsl
out
add
and
or
jmp
sbb
ret
aaa
push
add
out
lret
add
repnz
inc
clc
in
push
popa
shl
lods
sbb
lret
repz
test
sub
stos
rorb
mov
enter
mov
scas
roll
js
adc
cli
cmpsl
in
pop
shlb
pushf
rcl
mov
xor
fmuls
lcall
add
cmp
mov
adc
cmp
sbb
xor
daa
mov
sub
add
dec
jo
adc
mov
scas
imul
inc
leave
jne
inc
nop
sub
xchg
mov
pusha
add
sbb
mov
cwtl
jns
add
je
ficompl
data16
jmp
pop
aam
cwtl
inc
aam
jg
jo
adc
pop
sbb
das
cmpsb
aam
pop
mov
xor
xor
push
popf
add
ljmp
jmp
add
stos
dec
sub
call
hlt
aam
xchg
push
aas
cmp
enter
fwait
pop
shlb
jmp
icebp
test
roll
adc
in
out
xchg
add
jp
push
add
xchg
shlb
test
push
or
aaa
jl
and
nop
in
add
mov
bound
daa
pushf
aam
lcall
adc
push
ror
xor
xchg
mov
repz
add
xchg
jmp
xlat
adc
mov
clc
sbbb
fcompl
jo
pop
add
sbb
scas
or
ja
xor
and
add
add
inc
xchg
pop
js
sbb
sub
push
aad
mov
ja
neg
aas
pop
cmp
stos
mov
rcrb
lds
rep
nop
mov
mov
dec
cmp
aam
lret
xchg
add
je
les
and
add
lds
shrb
cmp
jmp
les
rorl
fdiv
arpl
add
push
movsl
rorb
mov
add
inc
add
dec
sbb
test
lcall
xor
add
cmp
test
cmp
ret
insl
out
add
iret
pop
sbb
leave
or
mov
pop
inc
jmp
int3
cli
loopne
out
push
cmp
and
lea
insb
daa
xchg
and
cmp
xlat
test
pop
cwtl
std
adcb
gs
ja
inc
push
cmp
pushf
pop
sbbb
adc
repz
cld
call
mov
mov
gs
and
jmp
adc
cwtl
push
daa
adc
aam
xchg
cltd
nop
inc
stos
inc
mov
in
mov
xchg
sbb
repnz
add
xlat
jb
add
xchg
xchg
dec
andl
je
cmpsl
mov
fst
lea
cmp
call
sti
pop
xchg
repz
push
and
xchg
adcb
add
cld
loop
cmp
mov
xchg
or
scas
int
jns
cmp
add
bound
loopne
adc
xchg
fs
or
add
daa
add
jp
lods
jl
cs
jl
mov
sub
outsl
pusha
fisubrl
inc
dec
loop
xchg
mov
popf
add
hlt
int3
mov
ret
out
sar
add
repnz
pop
xchg
adc
and
inc
or
adc
xchg
jo
cwtl
pop
jo
cmpsl
add
lods
sbb
ficoml
aam
test
repz
and
scas
jle
sbb
mov
jb
or
jns
repnz
sbb
and
push
xchg
ss
hlt
mov
mov
fs
xlat
cmp
mulb
jnp
fiaddl
add
push
paddd
pusha
ret
jno
pusha
dec
lds
aam
push
or
aaa
add
mov
push
mov
xor
int3
cs
imul
push
outsl
and
nop
hlt
and
popf
sbb
pushf
andl
xchg
adc
or
fldl
push
inc
int
and
loop
jle
inc
xlat
aad
push
lret
aam
jns
popl
xor
add
sbb
fwait
mov
mov
loopne
xor
mov
and
jne
cmp
fsubl
or
es
fucomp
adc
dec
push
cmp
insb
add
sti
xor
pop
pop
sub
adc
out
rol
jns
leave
stos
andb
daa
or
enter
add
lea
xchg
or
sbb
sarb
xchg
push
xor
bound
lcall
push
xchg
mov
pop
mov
inc
je
jno
int
cmp
scas
movsb
les
push
pusha
into
or
mov
ret
dec
lods
add
push
rcrb
pop
nop
sbb
and
add
rorb
repnz
add
xchg
add
mov
mov
mov
mov
mov
test
push
loopne
xor
sub
or
sbb
sub
gs
nop
add
ljmp
arpl
mov
sub
pop
mov
cmp
or
sarl
jbe
push
or
xor
add
adc
xchg
enter
popa
ffreep
pop
xchg
les
outsl
shlb
js
add
jp
ljmp
push
jno
mov
jmp
add
rclb
into
sub
push
andl
xor
jb
add
mov
dec
or
or
add
mov
pop
sbb
dec
mov
or
insl
or
adc
push
in
add
ficoml
aam
mov
mov
or
mov
inc
cmp
mov
pushf
add
icebp
xor
adc
pushl
lods
insl
add
jmp
test
cwtl
loop
and
ljmp
ds
jnp
mov
add
pop
hlt
adc
rolb
or
movsb
nop
inc
cmpsb
cmp
and
sbb
inc
jae
add
cmpb
push
mov
cmp
fsubr
imul
aam
fs
cwtl
je
lahf
xor
pop
add
jmp
xor
jno
mov
mov
or
lock
rolb
clc
add
xor
mov
mov
add
add
mov
in
mov
dec
sbb
and
imul
jne
repnz
or
into
outsl
push
and
cltd
push
insb
inc
shrb
add
hlt
cmp
ret
sar
cmp
add
jmp
push
lock
bnd
fiadds
loope
dec
dec
pop
push
or
in
mov
mov
add
loopne
bound
enter
jb
lock
add
xchg
loope
test
push
popf
ljmp
popf
sahf
add
xchg
xchg
add
fsts
fimull
push
sbb
movsb
int3
sbb
call
shl
iret
mov
add
and
fadds
adc
addb
xchg
and
and
pop
incl
mov
jne
test
ds
dec
subb
sbb
inc
mov
std
movl
adc
add
jns
xchg
xchg
mov
sub
sub
pusha
or
mov
into
and
fiaddl
test
adc
inc
adc
inc
aam
aam
inc
pop
or
frstor
mov
push
sub
insb
sbb
das
cmp
nop
outsl
lret
or
dec
xchg
or
xor
inc
test
and
add
in
pop
in
mov
dec
pushf
pop
inc
lcall
mov
and
es
add
pop
stc
adc
pop
jbe
mov
xor
mov
adc
add
stos
std
test
push
loop
adcb
daa
out
cwtl
popa
adc
sbb
andl
xchg
repz
scas
cmp
push
addl
jl
and
or
rol
jnp
inc
xor
aas
int
pusha
rcr
sahf
insb
roll
mov
and
mov
stc
pusha
clc
lret
lock
or
or
adc
mov
pop
rcl
add
adc
cmpsl
lcall
and
add
mov
dec
adc
dec
out
mov
leave
shrb
int
sub
or
add
fisttpl
lock
je
lret
outsb
jbe
pop
hlt
and
mov
xor
pop
push
out
and
das
fs
loopne
loope
add
lea
push
test
pop
adc
jb
add
lds
lcall
data16
loope
aas
outsb
les
adc
jns
push
out
inc
mov
jns
add
jge
iret
pop
rsqrtps
jg
addb
xchg
cmp
add
sbb
or
xchg
mov
add
pop
xor
jnp,pn
push
hlt
outsb
sahf
mov
xchg
mov
jecxz
clc
jbe
ja
pop
pop
lcall
dec
jne
mov
es
leave
push
insl
mov
call
adc
or
stos
aaa
lds
xchg
in
add
push
or
xor
movsl
sbb
sbb
aam
jns
xchg
or
punpckldq
and
cmpsl
add
sbb
adc
movsb
sub
frstor
dec
inc
sub
add
jno
jp
push
jg
mov
daa
sbb
xchg
pop
lods
stc
push
nop
xchg
adc
push
lret
xchg
pop
mov
or
add
in
jge
adc
lock
mov
add
lods
push
aam
test
push
sbb
jg
inc
ja
into
mov
fsubp
in
or
xchg
mov
ret
ljmp
insb
add
adc
or
mov
jo
insb
nop
mov
subb
adc
jp
mov
add
lea
inc
loope
or
imul
lahf
push
outsl
xor
adcb
fdivp
and
sbb
xorb
sub
shll
out
fiaddl
sub
adc
dec
xchg
and
or
out
inc
btc
int
popa
xchg
enter
sti
mov
xor
adc
and
jno
add
xchg
sahf
fidivl
sahf
sbb
ss
sbb
jl
sarb
dec
lea
enter
inc
cmc
sbb
adc
or
enter
cmp
and
or
sbb
shll
mov
cmp
cld
cmp
mov
je
jg
add
bound
cmpsl
test
push
push
add
lods
inc
cmc
hlt
push
xor
lock
pop
dec
js
inc
cltd
add
pop
sub
stos
popa
push
cmp
adc
cli
hlt
mov
adc
pop
test
clc
subb
inc
adc
leave
sbb
mov
cmp
mov
jmp
lods
sbb
ljmp
jo
or
mov
xchg
lock
pop
fwait
pop
push
dec
mov
sbb
push
into
pop
mov
jmp
idivl
icebp
loope
scas
add
in
and
adc
mov
addr16
pop
cli
cli
lcall
or
add
mov
leave
xor
jl
movsl
mov
fdivl
jmp
lock
push
dec
cwtl
xor
push
dec
rcl
stc
dec
jbe
into
ret
fs
add
xchg
je
or
aam
push
add
subl
add
dec
add
push
mov
sub
mov
inc
js
xor
sub
mov
add
hlt
scas
add
ret
mov
mov
jnp
xchg
ret
cmpsb
jno
in
add
mov
add
imul
add
add
sarl
xor
add
mov
data16
nop
or
push
add
jb
xchg
push
subl
mov
jno
daa
sbb
xchg
repz
popa
and
fs
add
mov
in
inc
and
pop
jno
push
add
setno
sub
add
jl
orb
orb
cmp
add
shlb
nop
push
xor
push
jbe
pop
nop
loopne
inc
add
jnp
cs
sbbb
pushf
jne
cmp
add
sbb
add
popf
jmp
push
lods
mov
add
bound
sbb
add
fs
test
add
cmp
fimuls
inc
jb
movsl
hlt
add
inc
aas
sbb
clc
mov
add
push
fwait
nop
fs
add
pop
stos
fsubrl
xchg
cmp
add
adc
xor
fists
and
cmp
repnz
out
inc
mov
ud2
cld
adc
add
dec
lock
push
add
cmp
cld
mov
in
cmp
or
mov
add
addl
pop
mov
add
mov
pop
hlt
popf
insl
adc
add
mov
fsubs
gs
add
out
adc
sbb
test
xor
shll
adc
inc
inc
aam
rorb
jo
loop
in
nop
mov
push
cwtl
popa
call
jno
add
and
mov
push
arpl
leave
add
lcall
inc
ljmp
fadd
nop
hlt
daa
shlb
mov
stos
pop
daa
mov
add
lahf
or
add
imul
jmp
adc
push
cwtl
add
outsb
jle
pusha
dec
in
repz
es
in
add
daa
and
or
inc
in
xchg
mov
loope
inc
xchg
es
mov
sbb
daa
mov
mov
inc
rol
sub
clc
mov
pop
out
and
sbbl
adc
or
ljmp
enter
xchg
les
repz
pop
sarb
fsubl
rolb
mov
push
pop
leave
lock
cmp
push
jp
adc
inc
int
push
test
sbb
add
shlb
leave
add
or
inc
xchg
pop
or
movsb
or
xor
fbstp
mov
arpl
lock
jo,pt
addr16
leave
add
or
or
bound
jecxz
sbb
inc
add
iret
test
cltd
rclb
inc
int
mov
pop
pop
add
je
pop
xchg
sub
hlt
pcmpgtw
push
cmp
mov
xor
dec
mov
cmp
les
fmull
sbb
stc
sbb
rcrb
out
loope
adc
add
in
adc
int3
adc
rorb
add
xlat
inc
fwait
shrb
dec
or
stos
and
sbb
cmp
fwait
and
pop
fcmove
mov
das
and
out
repz
adc
xor
mov
pop
mov
fadds
fnsave
mov
add
mov
insl
adc
repnz
jecxz
pop
add
stos
nop
call
push
xor
pushf
fwait
add
outsl
lods
xor
adc
lret
or
enter
add
jbe
fisubrl
mov
add
shl
mov
out
or
add
out
push
clc
or
inc
or
sbb
leave
fidivrs
lods
sbb
shrl
mov
inc
xlat
sbb
imul
or
aas
sbb
cltd
loopne
test
inc
add
dec
test
clc
and
sbb
cld
adc
hlt
loop
decl
xor
test
mov
fcoml
pop
addb
add
gs
sub
insl
lock
cmp
xlat
pop
xor
xchg
jl
stc
pop
add
add
adc
mov
ja
rorb
cmp
or
and
imul
xor
and
es
push
ret
inc
and
dec
add
push
filds
sub
xor
dec
add
cmp
shll
nop
dec
divb
xchg
dec
adc
mov
insb
and
add
push
sbb
or
and
push
jae
push
mov
mov
call
inc
xor
or
ljmp
mov
cmc
sbb
xchg
cmp
cmp
loopne
nop
add
sarl
pop
fsub
mov
or
movsl
nop
hlt
xor
add
pushf
cwtl
jmp
jmp
orl
cli
adc
jl
xlat
repnz
xchg
push
test
std
sub
adc
add
dec
mov
popf
push
mov
inc
divl
add
stos
adc
adc
xchg
adc
xchg
and
sub
pop
mov
pop
dec
stos
add
pop
or
aam
fnstenv
mov
dec
inc
add
mov
clc
and
and
stc
cmp
pushf
xchg
cltd
arpl
in
das
inc
aas
xor
in
lret
sti
je
popf
xchg
pop
das
shl
dec
je
add
xchg
popa
sub
scas
cld
sbb
and
push
popa
jl
sti
or
data16
jge
sbb
imul
or
cmp
or
xchg
addb
sbb
iret
xchg
cmp
adc
imul
nop
sarb
imul
jmp
pop
dec
push
inc
add
add
in
cltd
adc
mov
mov
sub
mov
addr16
add
adc
out
dec
mov
dec
xchg
and
insl
add
pop
repz
dec
je
adc
repnz
fs
leave
test
cli
push
sbb
cld
cmpsb
inc
pop
sti
outsl
mov
pop
dec
int
add
push
inc
or
sbbl
lea
and
insb
inc
xor
repnz
mov
xor
test
inc
xor
add
dec
popa
pop
andb
sub
aad
jae
jmp
add
cltd
jecxz
cwtl
loopne
mov
push
mov
dec
add
repnz
clc
mov
xchg
push
ret
mov
xchg
push
dec
insb
andb
mov
mov
mov
adc
fisubrs
and
add
mov
adc
xor
cwtl
add
scas
mov
add
outsb
fwait
sbb
xor
xor
xchg
mov
mov
mov
cld
out
add
xor
popa
or
or
pusha
jae
adc
xchg
mov
ret
adc
sbb
mov
sbb
in
stc
enter
add
ja
push
sbb
ret
std
cs
xchg
xlat
fbstp
scas
clc
roll
inc
push
fst
fs
mov
xor
and
ss
sbb
iret
lea
mov
movsb
mov
inc
cmp
mov
insb
rcrl
cltd
or
out
ja
add
add
mov
add
icebp
cmc
jmp
pop
sub
add
push
cmp
dec
outsl
sbb
add
inc
arpl
lock
cs
stos
icebp
aad
pop
adc
inc
call
add
lea
inc
std
add
lret
and
fmull
and
or
inc
and
mov
pop
add
stos
pop
lahf
ss
push
in
ljmp
sbb
in
push
mov
inc
add
out
add
mov
and
add
push
sti
push
xor
push
lahf
inc
and
sub
cmpsl
mov
adc
and
cs
mov
mov
outsl
les
add
and
insb
ds
inc
add
lock
dec
clc
out
mov
in
insb
rcrb
cmp
ret
rolb
sub
or
lods
pusha
in
or
lea
push
push
pushf
daa
test
cmp
jne
sbb
jl
into
cmp
ret
add
mov
and
mov
add
and
mov
subl
jno
movsl
repnz
cmp
inc
add
pop
or
test
or
iret
adc
hlt
add
hlt
xchg
add
cmp
stos
dec
add
mov
mov
stos
femms
add
lock
add
test
adc
mov
mov
add
push
xor
sbb
mov
aam
insl
bound
cmp
aaa
cmp
push
loop
inc
stos
testb
imul
xor
out
pop
and
mov
shrd
mov
add
add
stos
outsl
aas
xchg
mov
out
icebp
pop
lea
dec
cmp
jmp
or
mov
mov
add
sub
adcl
out
push
sbb
sbb
push
or
dec
push
jns
add
sbb
mov
and
dec
fdivrl
adcl
pusha
mov
movsb
pop
pop
enter
sub
and
nop
in
add
pop
add
inc
mov
push
and
cmp
adc
push
es
fisttpll
lods
test
inc
mov
add
out
rcrb
inc
js
test
ret
and
daa
and
and
daa
jp
sbb
mov
repnz
fdivl
add
xchg
mov
add
imul
mov
cmp
fisubs
cmpsl
dec
adc
mov
clc
dec
xlat
leave
xor
pop
cmpl
add
pushf
stos
ret
mov
cmpl
adc
mov
xchg
inc
adc
push
ja
cld
xchg
and
add
mov
inc
sti
xor
rorl
mov
pushf
add
out
pop
mov
xor
push
cmp
movsl
adc
nop
push
lods
jbe
jge
dec
jae
adc
pop
dec
loope
xor
and
jns
into
push
adc
or
xor
and
xchg
out
cld
mov
rcrb
inc
popf
nop
in
xor
sub
movsl
xlat
mov
push
push
xchg
inc
mov
aas
inc
fadd
or
mov
movsl
punpckhwd
cltd
xchg
lods
lods
orb
cs
sbb
in
pop
in
call
testl
cltd
push
add
or
inc
pusha
mov
rcll
add
ret
daa
dec
lcall
lahf
push
jl
sbb
mov
xor
test
add
cmp
sbb
daa
dec
or
loopne
xchg
andl
and
cmc
rclb
sbb
and
xor
and
sbb
cmp
xorb
cs
xor
xchg
inc
mov
aam
inc
xor
clc
or
inc
aas
mov
jge
shrl
bnd
push
les
push
push
int3
imul
mov
adc
adcb
mov
in
sbb
sahf
daa
jmp
adc
and
xor
sbb
ret
mov
rorb
and
add
scas
cld
lock
lea
add
fs
adc
mov
mov
sub
negb
sar
cltd
repnz
jl
call
jl
int3
frstor
out
pop
mov
pop
mov
push
int
or
push
mov
add
sahf
jno
rclb
push
fidivl
add
imul
xchg
fldenv
sbb
stc
aam
pushf
dec
pop
fcoms
in
aaa
add
sub
mov
and
icebp
ret
or
cmpsl
mov
push
mov
add
jnp
orl
adc
in
mov
arpl
mov
leave
mov
xor
and
ret
push
cwtl
xchg
jg
add
rorb
out
jbe,pn
add
or
mov
inc
jo
adc
mov
mov
enter
adc
push
mov
addb
inc
xlat
je
sbb
std
jns
inc
mov
inc
notrack
int3
mov
mov
stos
xorl
and
push
xchg
rcrb
imul
dec
test
or
popf
int3
add
cmp
insb
rclb
mov
int3
insb
daa
add
sub
les
mov
sub
pushf
shlb
lcall
mov
mov
pop
cwtl
in
lods
or
mov
jb
add
enter
shlb
inc
popa
fsts
rclb
push
push
sbb
clc
cld
test
aam
push
or
fwait
cmpsb
aas
jae
xchg
fdivs
push
pop
push
inc
sub
jns
insl
add
cltd
dec
push
xchg
xchg
pop
andl
clc
pop
std
inc
mov
mov
add
or
add
adc
mov
xchg
mov
test
sarb
push
add
push
or
js
mov
dec
or
out
sahf
das
mov
cmp
mov
pop
pop
popf
pop
out
imul
rcr
pushf
or
inc
lods
fmul
or
mov
cmp
add
fwait
out
enter
add
inc
jecxz
ficoml
jo
push
add
outsl
sti
repnz
add
jbe
xor
stos
and
xchg
mov
add
aad
pushf
jo
inc
inc
xor
add
cli
jg
popa
in
push
fcoms
pusha
add
ljmp
mov
rolb
mov
jae
add
jno
add
or
adc
cs
dec
cmp
nop
aam
add
adc
aad
or
sub
xchg
jns
add
cmc
add
mov
adc
xor
rclb
inc
stos
outsb
add
loopne
mov
dec
jp
std
mov
add
dec
xchg
es
sahf
mov
cwtl
test
and
rclb
movsl
add
sti
or
je
pop
incl
lock
outsl
push
ljmp
or
nop
mov
cmp
enter
and
add
lods
lcall
int3
add
add
jb
push
cld
jno
je
jo
int3
mov
lcall
icebp
fs
inc
in
mov
roll
jecxz
das
pop
out
pop
lods
xchg
cwtl
sahf
jg
pop
sub
sbb
add
das
adc
andb
inc
dec
rolb
movsb
aam
or
and
inc
mov
cltd
insl
push
dec
movsb
in
aaa
lea
shlb
xor
mov
add
movsl
cmp
adc
xorb
add
push
rcrl
rcrb
stos
pop
rol
call
outsl
jbe
daa
cmp
add
inc
imul
mov
inc
mov
stos
outsb
arpl
icebp
mov
mov
add
ret
and
lea
sti
frstor
add
add
dec
inc
pop
fs
in
sub
xchg
nop
insb
stos
nop
add
push
popa
sub
and
lcall
mov
add
out
pusha
pop
jmp
cmp
add
lret
dec
pop
sub
fs
out
iret
in
popf
pause
sbb
inc
pop
add
xor
dec
jp
add
xor
lcall
push
ja
xor
dec
dec
imul
mov
push
dec
js
jl
xchg
outsl
cmp
add
iret
dec
loopne
sbb
shr
sbbb
pop
mov
aaa
cld
fstl
lea
add
in
fs
add
shl
push
xchg
es
add
add
pop
or
fs
out
sub
call
mov
fs
mov
mov
cmp
cmp
in
xor
cltd
daa
lret
mov
push
sub
pusha
lods
pop
xchg
lret
add
sbbl
dec
inc
lret
sbb
aaa
add
andl
int
ret
or
fldenv
test
push
mov
shr
lods
insb
and
std
jo
mov
xchg
adc
xlat
mov
popa
leave
movsb
add
and
add
xchg
adc
mov
imul
movsl
fwait
mov
cmp
sub
mov
leave
leave
fmuls
add
out
test
push
xchg
sub
call
push
sub
mov
movsl
cmp
test
add
pop
mov
adc
shl
mov
ja
and
lods
test
xchg
mov
rorb
push
add
stos
cld
out
or
leave
dec
pop
xchg
pop
sbb
inc
mov
test
sbb
loopne
sbb
xor
into
push
push
xchg
cli
sbb
dec
and
les
mov
jmp
mov
xor
add
shlb
decl
mov
iret
cmp
mov
push
push
cs
add
subb
adc
cmp
repz
sti
mov
or
add
into
xchg
cld
sub
sbb
sub
inc
add
stos
xor
cmp
je
cmp
stos
and
and
add
add
add
adcl
lock
or
inc
fiadds
mov
or
in
push
and
mov
or
inc
fisttpl
int3
pusha
sbb
je
inc
repnz
add
sub
xchg
sbb
cld
incl
cld
test
mov
cltd
dec
ficomps
imul
lcall
add
sub
repz
jl
dec
lret
andl
lock
jmp
adc
dec
movsb
push
xchg
cmp
push
cmp
cltd
add
pop
or
orb
mov
fmul
bswap
icebp
mov
imul
push
gs
rcll
icebp
aam
nop
mov
pop
test
test
inc
enter
pop
pusha
dec
inc
push
dec
push
popf
dec
jo
std
icebp
sahf
xchg
add
mov
ds
in
std
clc
mov
stc
test
sbbb
adc
in
jne
lret
lock
sub
leave
cld
subb
cmc
mov
add
cld
adc
mov
add
inc
or
insb
dec
add
insl
pusha
scas
mov
imul
inc
arpl
mov
aas
add
jae
mov
adc
dec
stc
into
push
daa
adc
xor
dec
dec
or
add
jp
fstps
dec
pop
test
fdivs
xlat
dec
jns
add
and
pusha
add
xchg
sbb
mov
roll
pop
mov
cmpl
aam
out
imulb
in
or
cmp
addb
push
mov
pop
dec
add
add
push
mov
push
enter
xchg
insl
jbe
dec
cmp
or
addl
or
xchg
fs
clc
sub
in
call
mov
xorb
cli
fwait
adc
subb
stos
sarb
xchg
pusha
das
pop
test
sbb
in
xchg
std
mov
fiadds
mov
and
dec
shlb
movsb
sub
in
insb
loop
add
mov
incb
jmp
jne
xor
out
add
push
jg
aam
icebp
call
in
dec
sbb
pop
and
adc
int
or
or
clc
hlt
push
xor
inc
andb
lods
xor
xchg
stos
imul
add
jnp
shl
stos
sub
aas
pop
xor
push
je
shl
and
and
outsl
cmp
pop
jmp
xor
adc
aad
cwtl
pushf
pop
xchg
rcrl
loopne
or
and
imul
fs
shlb
loop
jae
shlb
or
and
pop
xchg
add
loop
fists
pop
add
push
or
stos
mov
pop
aad
leave
cwtl
les
in
inc
push
jge
loopne
call
rcl
xor
push
rol
enter
xor
in
pop
dec
jae
jl
imul
mov
add
movsb
cmp
in
and
inc
sub
pop
add
jns
ret
push
push
daa
repnz
call
push
rorb
sub
cld
lret
mov
rcrb
dec
ret
cmc
xor
inc
jg
movb
les
arpl
rolb
jno
mov
xor
inc
ss
adc
dec
vmovups
test
and
popf
sub
rcrl
dec
pop
sarb
dec
in
adc
mov
add
pop
sti
cmp
leave
and
push
cmp
jmp
or
rclb
add
pop
ja
jnp
js
add
out
popa
and
push
or
repnz
add
lcall
push
lds
xchg
sahf
dec
or
test
loopne
scas
push
shll
inc
lds
xchg
stos
mov
insl
xchg
mov
mov
and
aam
and
inc
in
mov
jp
int
mov
imul
sbbb
rcll
dec
outsb
sub
or
mov
inc
xchg
dec
inc
test
dec
btc
push
pop
and
lock
test
adc
add
clc
adc
shlb
adc
dec
outsl
jno
sub
enter
xchg
stos
sbb
adc
or
stos
jmp
pop
xlat
insb
pop
mov
in
mov
testb
mov
pusha
jp,pn
inc
repz
xor
push
jecxz
dec
add
adc
add
xlat
aad
repz
cltd
push
bound
sub
xlat
and
jne
push
mov
add
fisttpll
negl
les
cmp
pop
rcrb
or
cltd
pop
push
adc
push
daa
mov
leave
mov
popf
adc
or
or
cmpsl
xchg
imulb
das
pop
jne
sbb
sub
xorb
add
insb
mov
adc
stos
add
jno
jmp
push
arpl
out
into
pusha
add
sbb
cmp
xor
and
and
adc
aas
jo
loopne
pushf
add
in
fcompl
jmp
dec
ds
or
add
xor
dec
xor
loope
outsb
xorb
add
mov
das
inc
push
outsb
jmp
fbstp
fs
fsubl
xchg
adc
repz
rcrb
leave
dec
and
push
push
daa
pop
xchg
mov
roll
xlat
movsl
test
add
lods
mov
enter
pop
mov
add
std
push
xchg
sbb
pusha
mov
mov
mov
repnz
cs
mov
icebp
js
adc
andb
cld
lcall
push
inc
test
lahf
in
dec
imul
hlt
aas
je
and
dec
test
cmp
daa
cmp
or
je
or
mov
test
sub
and
xchg
sub
ds
mov
rcll
imulb
sub
inc
clc
flds
mov
repnz
add
lea
add
add
or
in
push
fimuls
icebp
pop
mov
mov
daa
lcall
dec
adc
insl
xor
pusha
aam
fwait
push
idivb
test
in
dec
mov
inc
stc
inc
or
cs
lods
pop
enter
adc
pop
adc
cmp
push
in
call
and
xchg
out
arpl
add
push
pop
rcrb
push
hlt
push
cs
and
add
test
gs
leave
movsb
push
repnz
xchg
mov
xchg
inc
pop
mov
movsw
dec
cmp
lea
xchg
sub
cmp
pop
setno
inc
and
and
fcom
inc
or
js
add
push
cmp
xchg
les
iret
sub
popf
gs
mov
andl
sub
xorb
add
pushf
scas
add
loopne
fcmovb
push
adc
ja
and
add
jae
sbb
and
ret
inc
cmpsb
movl
push
fdivrs
stos
lcall
adc
inc
xor
fcomps
pop
add
std
inc
or
fistpll
or
xchg
sahf
pop
push
pusha
mov
add
insl
inc
cs
mov
add
jne
push
xchg
sub
test
jo
adc
push
or
arpl
pushf
push
sbb
pusha
pop
mov
xchg
mulb
mov
les
cmp
lea
pop
adc
xchg
nop
clc
adc
pushf
testb
stos
add
rolb
cwtl
nop
sbb
jns
pusha
ret
cmp
enter
mov
push
outsl
jecxz
add
and
adc
xlat
popf
mov
cmpsb
out
cmp
std
add
in
fidivrs
xor
shrb
jl
inc
pop
fdivrp
and
arpl
mov
outsb
mov
ret
leave
cmpb
adc
cmp
ds
adc
xor
xor
add
int
mov
mov
shl
adc
cmp
jmp
out
mov
add
loope
filds
sub
stc
xor
xchg
ret
sbb
mov
fnstcw
xchg
push
cmp
lret
add
std
arpl
dec
jge
ret
mov
xchg
and
mov
cwtl
or
push
or
xor
mov
jmp
inc
lahf
call
xchg
stos
ja
sbb
jno
dec
xor
and
jge
mov
or
ds
add
test
es
rolb
jmp
lret
sbb
pop
call
gs
xchg
mov
adc
je
sbb
les
mov
adc
icebp
sbb
fs
dec
in
adc
mov
call
mov
pop
nop
addl
int3
push
inc
add
adc
push
push
or
or
test
addr16
cmpsl
and
lock
xor
add
xor
mov
add
or
pop
or
xorb
sbb
mov
xchg
rclb
push
add
adc
jp
testl
adc
insl
mov
sbb
adc
mov
adc
test
cltd
int3
test
fmull
je
dec
das
mov
jle
or
push
and
aam
out
fs
pop
xchg
jno
outsb
movsb
push
dec
test
mov
enter
xchg
sbb
test
xchg
and
jno
add
test
cmpsl
enter
add
mov
fadd
cmp
cmp
sbb
jbe
push
fs
inc
call
pusha
inc
pushf
jp
cmp
mov
flds
xchg
movsb
mov
rcrb
daa
jb
mov
sarb
mov
pop
mov
pusha
dec
sub
push
aad
jg
sbbb
addb
lds
rolb
xchg
xchg
inc
adc
mov
aam
cmc
or
sub
add
mov
cli
sbb
cmp
cmp
xchg
rolb
and
xor
ret
jb
rorb
das
in
orb
push
push
dec
enter
inc
inc
sub
dec
popf
dec
mov
clc
in
test
das
out
jmp
sub
cmpsb
movsb
inc
jo
int
je
lahf
add
sbb
and
cld
sbb
mov
cmp
xorb
mov
stos
test
or
and
daa
imul
std
dec
mov
andps
es
int
or
cwtl
inc
ja
sti
sub
or
jnp
jbe
into
xor
add
shll
das
xchg
ret
es
or
push
jae
xchg
xrelease
subb
adc
enter
cmp
adc
mov
or
rolb
pushf
jl
push
or
or
not
xchg
push
negl
jp
adc
mov
sbb
xchg
int
mov
adc
ja
loopne
add
shlb
sbb
add
roll
call
clc
and
sub
aas
insl
mov
stos
into
cmp
add
dec
mov
repz
lds
fwait
lds
stc
adc
addb
mov
aas
jnp
cli
dec
enter
add
mov
push
jb,pt
sub
daa
loope
das
xor
sahf
sarb
imul
sbb
dec
mov
scas
mov
int
shlb
jo
mov
andb
or
add
sub
push
es
xlat
push
dec
and
mov
movsb
stos
sub
loopne
inc
ds
or
lods
or
adc
and
or
dec
adc
mov
inc
push
adc
jmp
add
jbe
push
ljmp
sub
ja
mov
or
push
pop
push
das
jnp
ljmp
dec
add
and
add
xor
stos
pop
xlat
fwait
out
and
pop
jno
sub
insl
or
inc
fdivrs
add
xlat
popa
mov
lcall
aam
hlt
xor
jecxz
jo
xchg
rolb
mov
mov
mov
lock
shl
mov
into
iret
je
jae
pop
in
jb
stc
or
sub
pop
and
and
out
rorl
dec
sub
mov
or
lock
fisubrs
orb
and
dec
fsts
dec
xchg
in
add
xlat
ficompl
daa
push
add
sbb
dec
call
int3
sbb
fadd
xlat
pop
fs
push
add
lds
clc
lahf
or
add
adc
xor
std
dec
stos
daa
mov
aam
jno
sub
adc
add
nop
in
mov
nop
jno
pop
pop
dec
out
in
sbb
fists
imul
xor
inc
pop
mov
jge
test
mov
dec
adc
cmp
lea
adc
jg
pop
add
push
popf
adc
jg
pop
das
mov
mov
es
cmpsb
sbb
push
enter
push
pop
add
dec
test
add
repnz
or
mov
xchg
jo
xor
push
jns
test
pop
ljmp
dec
jg
xor
add
mov
adc
cmp
pop
inc
dec
or
inc
adc
dec
add
push
xchg
inc
cltd
sub
or
les
fcoml
adc
xchg
add
ja
insb
call
paddq
add
mov
add
dec
push
jecxz
pop
xor
adc
cmp
add
xchg
dec
cmp
test
add
xchg
fidivl
push
or
fnstenv
xchg
fidivrs
sbb
adc
jno
lock
cmpl
and
addb
popa
or
mov
dec
inc
pop
les
dec
mov
inc
insb
in
push
jg
mov
mov
dec
mulb
test
enter
mov
mov
hlt
mov
push
imul
sbb
push
lods
or
test
out
aas
jp
cmp
and
sahf
es
xchg
insb
fidivs
lods
adc
push
xchg
enter
fnstsw
sbb
add
add
jecxz
cltd
insl
xchg
or
test
adc
sub
inc
pop
pop
push
pushf
sub
adc
loopne
cmp
stos
popf
movsb
or
sar
pusha
dec
xchg
lcall
shlb
daa
xchg
xchg
and
lock
pushf
movsb
imul
hlt
jmp
add
jmp
or
and
aaa
fbld
lret
pop
pop
push
push
fs
sbbb
cmp
cs
and
iret
jns
add
aas
notl
or
push
gs
out
sbb
stos
adc
xchg
arpl
nop
pop
out
out
shrl
add
lahf
insb
pop
add
cmc
imul
insb
and
out
lretw
adc
dec
add
ss
sbb
mov
add
addb
push
and
jl
movsb
addl
clc
and
ljmp
cmp
jns
test
jns
mov
cltd
pushf
add
rorb
push
and
ja
pop
sub
add
les
xor
xor
subb
lock
rol
sbb
sbb
test
inc
xchg
adcb
imul
sbb
je
mov
push
clc
outsl
les
add
lret
cmp
add
and
ret
dec
jno
int3
mov
dec
ror
fsubp
push
sub
cli
lods
add
icebp
or
push
enter
push
sub
add
cmp
sti
add
jo
cwtl
inc
mov
or
pop
lret
fsubl
ljmp
jle
sbb
cmpsl
inc
dec
fiaddl
mov
out
adc
pop
adc
add
or
imul
loope
fmuls
testb
subb
sub
in
into
ljmp
jmp
cmpsl
mov
push
popf
fadds
bound
lods
daa
mov
imul
lret
inc
aam
mov
iret
or
add
pop
enter
add
leave
popf
js
dec
pop
stos
sarb
push
add
sub
mov
sbb
test
xchg
mov
addl
les
sar
push
xchg
sub
or
sbb
scas
mov
or
add
mov
mov
pop
lea
xchg
fdivl
rolb
dec
xchg
rclb
and
jb
roll
jp
sbb
lahf
test
roll
xor
test
jg
xchg
adc
hlt
sbb
push
cmpsb
mov
sbb
imul
dec
push
loope
xchg
pop
iret
aam
fld
je
enter
xchg
cmpsl
dec
adcb
scas
push
incb
insb
sub
ss
stc
mov
dec
mov
pop
pop
fstl
xor
scas
mul
gs
int3
jno
orb
mov
mov
movsl
inc
and
inc
or
test
adc
scas
ljmp
pop
xchg
pop
out
jo
hlt
pop
fwait
pop
sar
and
mov
inc
inc
cwtl
out
clc
subl
xor
push
or
nop
or
sub
aaa
sahf
mov
add
jae
inc
mov
xor
js
addb
jnp
push
int3
nop
add
cmp
lods
jbe
in
popf
mov
int3
clc
mov
popa
shlb
sti
cmpsl
pop
push
xchg
into
cltd
jo
test
push
adc
pop
add
subl
mov
mov
inc
shr
inc
add
aaa
lea
jae
or
mov
fwait
movsb
and
push
add
inc
mov
or
mov
imulb
and
mov
mov
aas
mov
ja
shrl
sbb
adc
daa
inc
and
mov
sub
jnp
cmp
test
cltd
or
inc
push
dec
fsubs
inc
add
and
cmp
mov
ja
pop
loop
sub
bound
adc
lods
sbb
inc
lock
mov
add
or
pop
iret
mov
into
or
mov
pusha
loop
add
aas
out
incl
add
and
pop
jg
lahf
add
outsl
ds
add
cld
ja
and
jge
das
out
inc
push
pop
mov
sub
sahf
or
js
pop
aam
aas
jecxz
adc
add
adcb
dec
scas
or
add
loopne
ds
pop
add
insb
pushl
adc
mov
lock
roll
lcall
aas
sbb
enter
cld
sub
jg
insb
call
in
adc
test
mov
cmp
jecxz
add
jo
fs
mov
add
cmp
int3
mov
bound
mov
mov
repz
dec
cltd
or
icebp
jl
xorl
adc
push
aas
mov
rolb
mov
rorb
call
xchg
lock
pop
mov
loope
and
sub
add
out
xor
outsb
sub
imul
mov
mov
pop
test
xor
ret
push
dec
nop
js
inc
add
popf
hlt
arpl
enter
nop
and
mov
iret
push
mov
lret
pusha
ret
and
pop
add
imul
addr16
cmp
xchg
sub
mov
stc
inc
xchg
push
mov
dec
addl
mov
and
add
xor
sahf
add
jge
dec
inc
push
cs
dec
mov
add
mov
bound
pusha
dec
sub
xorl
pop
data16
cs
sub
loopne
aas
xor
add
inc
mov
faddl
mov
dec
pop
pop
cmpsb
cs
jbe
and
rorb
sbbl
cmp
mov
mov
add
mov
mov
dec
lret
mov
mov
push
jnp
jno
cmp
inc
cwtl
leave
mov
popa
or
pop
xchg
or
push
cmpsl
scas
push
out
stos
push
push
xor
inc
pop
cmp
cs
mov
movsb
add
lods
mov
xchg
add
and
arpl
leave
shrb
aas
cs
mov
inc
and
addb
jnp
mov
add
lock
aas
push
int3
add
inc
jo
inc
sub
outsb
cmp
aas
mov
dec
add
into
fdivs
pusha
dec
test
pop
pop
push
xlat
rolb
rol
ds
jbe
imul
jno
fadd
sub
xchg
lock
dec
jge
add
jae,pt
inc
or
mov
iret
rolb
fdivrs
jnp
mov
shrb
jbe
leave
jp
clc
inc
sub
add
sbb
adc
or
xchg
jle
add
xor
dec
mov
jne
das
dec
roll
pop
in
pop
test
pop
js
es
idiv
or
and
pop
incb
push
outsb
test
lcall
or
imul
jo
int3
xchg
and
cwtl
adc
xor
inc
insb
adc
inc
or
xchg
inc
xchg
or
mov
sar
mov
cltd
mov
mov
loop
ret
xchg
clc
je
pop
or
cmp
xchg
pop
nop
or
push
shrb
loopne
pop
cwtl
fdivl
lock
cltd
or
add
add
mov
test
insl
pop
cld
pop
dec
std
push
mov
rorb
pop
int3
push
sub
add
js
cmp
shlb
pop
xchg
pusha
cmp
rorl
mov
lds
shlb
insl
dec
mov
add
push
sbb
cli
scas
test
dec
ljmp
cmp
adcl
and
pop
xor
stc
dec
sbb
sub
cmp
jle
xor
mov
mov
add
ja
out
fwait
es
jae
sub
pop
cs
add
jle
aaa
mov
add
inc
and
pop
movsb
in
add
testl
pusha
pop
roll
repz
pop
pop
leave
addr16
hlt
loope
mov
sub
sub
test
lods
sub
dec
lds
fldl
push
xor
sub
mov
cmp
rcr
xchg
mov
adc
mov
xor
in
sub
cli
mov
cltd
lret
test
dec
mov
sbb
orl
ret
push
add
xorb
dec
aam
subb
adcb
xchg
add
lock
cwtl
add
lret
xchg
sbb
shrl
sahf
lods
xor
inc
or
push
inc
in
or
push
rolb
push
lcall
mov
loopne
cmp
and
mov
push
popf
push
leave
loop
cld
mov
or
rolb
xchg
in
sbb
std
into
jns
cmpl
adcb
in
fstp
add
out
in
xchg
add
adc
sub
jg
add
popf
pop
mov
and
push
cmp
std
push
mov
stc
dec
lods
dec
pop
add
pop
add
into
xor
or
cltd
lock
icebp
jl
dec
ds
add
jg
or
xor
aaa
or
add
add
es
mov
push
sbb
das
inc
pop
cld
cld
mov
mov
shl
sub
cmpsl
sahf
inc
jo
add
jg
loop
sti
adc
popa
inc
pop
push
mov
movsl
shll
adc
xor
enter
loope
add
jns
mov
pusha
dec
enter
mov
pop
add
stc
xchg
add
sub
or
cltd
adc
mov
jnp
sub
adc
xor
sbbb
testb
cmp
ljmp
xor
jno
or
cld
jne
mov
pop
stc
loope
movsl
cli
out
xchg
add
rclb
cmpsl
add
inc
pop
lods
sub
cwtl
negb
call
dec
add
ja
ficoms
mov
stos
orb
rolb
in
or
repnz
jb
insl
mov
repz
aad
addr16
pop
dec
jo
xor
hlt
cli
inc
add
adc
xor
push
lock
xchg
sbb
push
stos
pop
pop
pop
test
pop
mov
dec
lds
fstps
sub
cmpsb
add
add
push
lock
out
pop
xchg
dec
pop
sbb
jle
add
lcall
add
in
pop
xor
mov
xchg
add
call
aad
xchg
add
push
fwait
repz
mov
mov
cmp
add
icebp
dec
js
enter
pop
fisttpl
lret
int3
nop
pop
xor
xchg
push
xor
pop
rolb
add
insb
loopne
mov
loope
loopne
das
add
in
fstps
movsl
test
add
lods
test
mov
sbb
mov
js
stos
push
mov
ljmp
add
and
movsb
sub
in
loopne
add
and
inc
push
cmc
add
sbbb
lret
cmp
jnp
xor
add
mov
movsb
jp
add
add
je
enter
inc
or
xor
sub
add
fld
xor
sti
ljmp
or
in
jg
push
shlb
push
mov
adc
stos
fldt
hlt
test
sarl
push
add
out
push
and
xchg
jae
test
std
add
cmp
xor
jnp
adc
lahf
jg
cmp
xor
rorl
push
imul
movsb
add
clc
fsubrp
or
or
xchg
int3
lcall
add
js
fsubrs
cmpsb
add
mov
mov
out
addr16
sbb
add
mov
push
add
inc
cmp
adc
dec
out
loopne
or
loopne
icebp
mov
in
movsb
push
add
pop
add
pop
cmpl
js
mov
scas
push
add
jecxz
sbb
test
adc
orl
loopne
mov
int3
add
into
popa
testb
jo
add
out
dec
and
aas
add
pop
push
pop
add
add
imul
fmull
jl
daa
sti
mov
loopne
ja
xor
ss
push
out
mov
sbb
add
jae
inc
rcrl
lahf
dec
push
cld
sub
shrb
fsubl
test
push
jb
push
add
lea
and
sar
push
rolb
adc
sbb
jo
jno
pminub
mov
mov
inc
add
adc
clc
push
in
and
jbe
push
into
xchg
sub
out
dec
nop
xor
enter
rolb
fisubrl
add
iret
rcll
inc
adc
jb
sarb
test
jl
push
aad
mov
pop
insb
jae
out
pusha
add
rolb
and
jecxz
jne
arpl
cmp
add
fadds
dec
push
adc
sbb
mov
add
inc
out
xchg
add
ret
addl
jo
int
sarb
xchg
add
mov
adc
add
push
mov
js
addr16
cmp
jne
add
jmp
aad
rorb
enter
add
or
in
cld
call
sbb
mov
cmp
push
cmp
test
fs
sub
imul
push
or
xchg
mov
imul
xchg
push
push
and
jno
into
shll
add
xchg
pop
or
fldl
jo
inc
xchg
mov
je
jmp
pusha
test
iret
jb
add
sub
add
in
mov
clc
fsubrl
mov
add
enter
fists
ss
add
fcmovnb
mov
addb
add
push
loope
ja
add
inc
call
add
hlt
mov
rolb
push
fidivrs
nop
aam
xlat
add
xor
dec
jne
jge
add
shrb
fisttpll
das
call
mov
in
xchg
pop
inc
sbb
mov
imull
add
addl
jecxz
mov
sub
ss
pop
add
dec
jne
cmp
add
fimuls
and
sbb
test
mov
jo
nop
dec
xchg
add
in
outsl
out
inc
fistps
dec
ds
mov
or
inc
push
mov
mov
cmp
push
push
xor
cmpsb
jno
push
add
insl
lea
mov
adc
int3
ljmp
sbb
xor
add
fs
inc
mov
negl
iret
in
mov
imul
add
add
inc
cld
xor
mov
enter
mov
cmp
jbe
add
std
xor
jno
in
pop
scas
jle
mov
imul
add
mov
adc
cmp
arpl
sahf
in
dec
jmp
fldl
mov
push
or
add
jnp
orb
add
ret
aas
and
stc
mov
into
repnz
loop
sub
pusha
push
mov
xlat
add
or
sahf
add
nop
jns
jb
sbb
fisubrl
jnp
xchg
loopne
jae
inc
mov
mov
add
movsl
mov
out
adc
imul
inc
lea
fwait
es
dec
mov
cmpsb
fildll
jmp
jge
inc
test
cmc
dec
add
push
sarl
std
xchg
add
jge
call
add
lock
add
dec
pushf
jne
roll
mov
cmc
add
mov
cli
es
sbb
sub
xchg
or
add
push
es
in
add
leave
je
xor
mov
add
lea
lahf
mov
out
mov
aad
icebp
stos
push
and
outsl
lods
jecxz
mov
add
stos
xor
add
mov
pop
pop
add
int3
mov
imul
loop
dec
shl
and
orl
call
mov
push
xor
add
cld
jo
arpl
xor
xchg
add
lcall
pop
adcb
xchg
fnstcw
neg
or
rol
add
mov
pop
xor
leave
add
ds
test
in
lds
lods
pusha
int
scas
ret
std
add
xor
mov
insb
add
add
mull
dec
adc
jnp,pn
add
iret
cmpsb
pusha
pminsw
mov
jae
add
mov
pop
jmp
jle
int3
lock
dec
jge
add
pop
mov
roll
test
loopne
outsl
or
sbb
shr
add
ja
out
loopne
pop
push
sbb
in
sarb
adc
add
dec
cmp
and
mov
add
add
sbb
lcall
fistl
mov
insb
xchg
out
pop
repz
xor
sbb
add
add
inc
sub
insb
lods
sahf
adc
mov
lret
xchg
lods
mov
sbb
loop
mov
jne
push
add
and
ds
lret
dec
inc
adc
rcrb
nop
pop
add
insb
dec
out
ret
cs
push
repnz
adc
sub
cltd
lret
mov
cmp
aam
out
adc
and
mov
jne
arpl
mov
or
dec
fidivl
divb
mov
sub
movsb
add
repz
xor
mov
mov
sub
out
mov
mov
jg
into
outsl
stos
add
out
rolb
sti
push
lds
inc
cmp
sub
mov
test
ds
nop
popa
lcall
into
std
in
faddp
push
add
and
add
in
jb
jmp
xor
rolb
sbbb
adc
fs
mov
pop
decl
sbb
pop
rolb
and
aad
pop
loope
sub
cmp
repz
sbb
mov
xchg
int3
and
adc
add
mov
repnz
stos
jmp
sbb
sti
xor
xchg
pop
mov
cli
add
int3
lds
inc
sub
mov
push
aad
add
pop
xor
ja
push
iret
lods
pop
loopne
les
rolb
aaa
and
mov
mov
adc
call
or
add
popa
add
lahf
shll
in
ret
add
cmp
ljmp
shll
fdivs
fwait
pop
or
jne
inc
push
das
push
aas
adc
aaa
movsb
and
adc
loopne
fwait
rcrl
push
inc
mov
dec
cmp
jmp
inc
push
mov
sti
push
push
mov
idiv
call
in
ret
add
int3
adc
xchg
mov
push
daa
dec
add
jmp
add
lock
roll
inc
cld
stc
xor
mov
add
imul
lock
dec
cmc
add
lds
push
jb
add
into
fisubs
ljmp
push
sbb
mov
lret
cmc
add
fs
dec
std
dec
sub
out
pop
add
inc
ds
jo
out
or
xor
ja
add
shr
mov
pop
jg
notl
in
lock
sub
lea
lret
sahf
inc
addl
das
stc
and
dec
or
add
mov
cmpsl
sti
lods
bound
mov
lret
lds
add
cs
mov
sarb
and
adc
adc
adc
nop
daa
sub
scas
lret
add
mov
and
rolb
xchg
fstpl
incb
or
test
lret
cmp
xor
rcll
fcompl
add
shld
out
add
sbb
xor
xchg
je
pop
aas
add
ret
mov
pop
mov
mov
or
jg
test
fisttps
shlb
or
lods
bnd
icebp
mov
and
pop
mov
mov
adc
pop
mov
sahf
lock
scas
insl
push
add
inc
sti
aas
xor
sub
xchg
aam
add
jb
or
jmp
add
mov
jbe
mov
push
or
pop
arpl
mov
sbb
add
jae
adc
add
cwtl
cmpsb
adc
mov
push
sub
add
add
out
mov
cmc
push
cmp
pandn
loop
xchg
scas
test
push
fsubrp
stc
rolb
sbb
cld
jne
jo
push
add
mov
xor
movsb
inc
add
std
repz
addr16
fsubp
lret
mov
mov
mov
add
push
mov
mov
int
js
add
mov
cmp
xor
inc
inc
push
cmp
scas
mov
jl
repnz
add
push
mov
sbb
cmp
push
lock
add
popa
jne
dec
mov
lcall
add
fisubrl
ljmp
mov
mov
xor
pop
movl
add
add
dec
fimull
cmpxchg
jne
fwait
sbb
andb
daa
pop
test
dec
mov
inc
imul
shlb
test
cmp
stc
add
sahf
dec
jo
cmpsb
add
loopne
mov
loop
test
cwtl
add
mov
add
and
lds
add
or
pop
out
mov
cli
mov
in
jae
push
lock
xchg
pop
test
out
dec
movsl
loopne
push
gs
shll
ret
hlt
out
sarb
xchg
pop
aam
add
mov
lahf
push
sbb
and
js
cmp
push
and
std
mov
add
push
add
add
xor
mov
sarl
xchg
cmp
sub
add
xchg
pushl
add
orb
inc
pop
mov
enter
dec
inc
add
or
in
pop
mov
push
pop
rol
and
mov
nop
dec
and
loopne
xor
xchg
mov
inc
sbb
sub
mov
orb
fistpll
icebp
lahf
inc
pop
adcl
pop
push
jbe
inc
jmp
mov
inc
xor
sti
out
shlb
in
or
icebp
or
aad
pop
sbb
pop
outsl
inc
dec
add
pusha
add
in
sahf
mov
flds
or
ret
fwait
inc
xchg
lods
hlt
add
pop
orl
enter
and
xchg
add
sbb
loopne
dec
and
cmp
add
pop
add
icebp
inc
filds
jae
dec
std
cwtl
adc
jbe
sbb
adc
dec
mov
lds
add
loope
xor
aas
inc
or
rcrb
adcb
jmp
push
push
sti
roll
lahf
aas
inc
or
cmp
lock
lcall
inc
cmp
mov
enter
in
push
stc
roll
and
mov
jne
add
popf
adc
push
ljmp
add
fiadds
cmp
push
repz
or
jbe
pop
or
pusha
aas
and
out
jo
pop
xlat
sub
je
pusha
inc
push
cmp
ret
loop
xor
sub
aam
mov
outsb
dec
mov
test
imul
dec
loope
add
popf
pop
xor
cmc
push
ret
es
repnz
mov
add
dec
mov
push
jo
inc
add
rorb
sub
and
dec
xor
add
xchg
cmp
das
dec
mov
push
shrb
jns
mov
pop
pop
adc
std
divl
pop
mov
and
rcl
add
xor
mov
inc
cs
or
and
mov
sub
or
popa
ret
sbb
in
adc
pop
test
mov
es
or
leave
mov
cmpsb
sub
add
fwait
jbe
jno
mov
pop
pop
mov
adc
sbb
sub
stos
sbb
imul
mov
ds
lcall
jae
pop
and
daa
jbe
mov
dec
insb
pop
scas
js
pusha
pop
pop
adc
push
ljmp
jne
sub
add
mov
outsb
lods
mov
add
cmp
jp
into
adc
jle
jb
add
aad
sbb
sbb
out
push
pop
pusha
fimuls
jb
addb
popl
mov
iret
jecxz
lds
popa
out
mov
mov
add
jo
mov
add
cld
je
shlb
xchg
add
das
sub
in
lods
lods
mov
outsb
add
sub
fidivs
dec
out
aas
add
test
mov
mov
xlat
es
scas
addr16
sbb
mov
pop
dec
mov
adc
movsb
lcall
mov
ljmp
jl
adc
add
cmp
pop
aas
daa
pop
xorb
pop
xchg
push
stos
mov
clc
fcomps
fidivs
jge
icebp
jae
nop
sahf
xchg
mov
jg
out
mov
add
xor
push
add
jge
sbb
pop
loopne
dec
mov
push
add
push
ficompl
and
sbb
add
mov
cwtl
add
in
lahf
pop
push
ss
add
mov
inc
cmp
stos
inc
sbb
ljmp
rcrl
adc
mov
jp
iret
pusha
fiadds
jmp
movl
aam
add
sub
adc
and
mov
in
enter
stc
test
popa
pop
push
pop
dec
jnp
lock
inc
mov
in
adc
fmull
hlt
add
fisubs
paddw
imul
cmpsl
incb
or
adc
ja,pt
xor
jmp
xchg
repnz
inc
adc
fsubs
iret
xor
push
mov
jns
mov
fmul
jo
sbb
cmc
les
orb
mov
jl
add
jo
add
inc
mov
pop
cwtl
add
jecxz
ljmp
pop
dec
mov
xor
hlt
aam
out
movl
push
and
int3
dec
imul
inc
sbb
into
pop
call
data16
mov
and
add
jmp
xor
push
inc
add
outsl
rcrb
mov
add
mov
je
sar
jb
ds
dec
jns
insl
xchg
pushf
add
nop
and
loop,pn
dec
jg
jle
mov
shll
shrl
mov
mov
lldt
mov
cs
xchg
xchg
sbb
lahf
xor
loop
adc
xor
xchg
addr16
in
pop
mov
sub
mov
mov
dec
ja
or
es
test
add
sub
xchg
push
insl
add
call
test
lret
pusha
dec
rcr
stc
and
nop
clc
es
add
ds
scas
cltd
arpl
clc
lock
jecxz
mov
xchg
dec
test
and
or
mov
push
inc
dec
movsl
loopne
mov
lret
ss
scas
pop
ds
xchg
imul
cmpsb
add
hlt
cmp
mov
pop
add
sbb
mov
push
dec
xchg
aaa
lods
add
rorb
stc
jae
lock
push
shlb
add
sub
or
imulb
clc
dec
aam
cmp
pop
add
insl
imul
nop
sbb
push
xchg
xchg
add
ds
cmpb
jp
fwait
adc
aam
xor
cmp
ret
imul
add
push
jmp
add
sub
jne
testb
cmp
add
shrl
sbb
jl
jp
sub
jecxz
mov
or
mov
insb
or
popa
add
xor
mov
aam
aas
lcall
fiadds
xchg
in
out
mov
mov
daa
add
or
add
mov
mov
aas
hlt
add
arpl
cmp
mov
add
in
sahf
lds
sbbb
ds
js
out
adc
add
pop
test
add
and
mov
xor
clc
clc
xchg
and
iret
out
sub
bound
push
gs
add
idivl
ror
adc
sarl
or
cmp
insl
add
pop
imul
xchg
jmp
lds
jb
stos
adc
xor
jne
add
fdivrs
pop
popa
out
mov
mov
add
dec
pop
lods
inc
sub
mov
out
add
or
jle
add
mov
cmp
inc
add
imul
push
fsubrl
pop
push
cwtl
mov
add
or
arpl
fistl
add
mov
pop
jge
add
jns
xchg
arpl
test
xor
sbb
add
ljmp
pop
sub
stos
inc
cmp
fisubs
mov
imul
rclb
in
std
or
pop
cmp
nop
cmc
xorb
ret
test
add
aad
mov
add
sbb
addb
jae
ja
or
pop
push
push
pop
das
lret
idivl
cmp
mov
sarb
movsb
or
jle
scas
adc
inc
adcb
jg
add
shrl
test
repz
mov
je
add
add
sub
jne
mov
jmp
mov
hlt
loope
pop
ret
jnp
jo
shll
aam
aad
dec
cmpsb
faddl
dec
jne
test
jmp
cmp
cmpsl
test
and
pop
dec
popa
sahf
xor
mov
sbb
xlat
hlt
xchg
or
loope
pusha
and
add
jg
sbbb
ljmp
aaa
jns
mov
cwtl
ss
add
push
add
and
xor
scas
or
fwait
jecxz
imul
xchg
jg
out
add
movsb
pop
push
jae
and
cmp
scas
cmp
cmp
ds
popl
fsubs
xor
push
pop
push
cld
adc
sub
repz
add
jne
lret
inc
lds
ljmp
mov
clc
into
pop
xor
sbb
or
pusha
adc
lds
jne
pop
and
mov
xor
add
or
mov
roll
imull
adc
inc
pop
mov
xchg
xor
inc
add
aaa
xchg
add
ss
adc
imulb
dec
dec
adc
test
pop
add
add
inc
inc
mov
dec
mov
adc
jnp
xchg
rorl
push
add
cmc
mov
add
mov
sub
hlt
pop
aas
aaa
out
mov
int3
mov
aam
sub
lret
cpuid
push
add
dec
outsl
adc
add
imul
push
pushf
arpl
or
add
hlt
movsl
push
sub
mov
sbb
idivb
mov
repz
xor
fs
jbe
movsb
xchg
out
nop
mov
loope
aam
insb
mov
je
sub
cmp
pop
inc
add
mov
mov
pushl
hlt
pop
iret
mov
out
daa
fcoms
push
fnstcw
rcrl
das
mov
or
and
jno
in
push
js
idiv
and
out
cmp
daa
sbb
push
ret
push
sub
out
ds
mov
jmp
sub
dec
and
sbb
in
lcall
or
jae
imul
push
out
cmp
loopne
sti
mov
or
ljmp
subb
out
xor
jp,pn
in
jo
pop
imul
cmp
add
test
test
mov
and
cltd
or
xchg
inc
adc
aam
in
or
and
testl
mov
inc
enter
add
js
test
hlt
test
cmpb
add
aad
jmp
cld
inc
aam
push
test
dec
lea
mov
ret
jmp
pop
add
cmp
adcb
add
icebp
sub
jge
lahf
add
addb
add
insb
add
sub
leave
adc
cltd
or
out
push
test
or
pop
or
stc
xor
out
sahf
cwtl
scas
mov
call
les
sbb
jo
test
mov
test
sub
faddl
adc
or
push
enter
fbstp
cld
sbb
push
mov
xor
push
leave
sub
stos
xchg
shlb
mov
add
inc
sbb
xchg
jmp
sbb
push
mov
mov
dec
fwait
adc
add
nop
push
jl
add
xlat
aaa
outsb
xor
pop
sbb
cmp
jnp
pop
fadd
jmp
stc
in
push
es
shll
add
pop
add
pusha
out
and
movsb
pop
dec
in
icebp
push
mov
xor
into
mov
movsl
add
mov
mov
mov
scas
sub
lea
xor
in
add
fs
loopne
xor
pop
bound
push
fiadds
dec
mov
pushf
jb
pop
sub
inc
add
add
pop
adc
mov
inc
add
xchg
into
out
push
lcall
jp
cmp
add
bound
add
std
xor
sbb
sub
and
pop
sub
or
lock
push
adcl
dec
pusha
cmpsb
js
mov
add
icebp
add
pop
incl
popa
in
jp
orl
jns
lods
and
mov
add
mov
rclb
cmpb
iret
add
xchg
mov
nop
sahf
mov
adc
jle
jmp
xor
mov
outsb
adc
add
push
into
les
mov
add
fldcw
incl
cmp
mov
push
mov
loopne
fildl
icebp
roll
adc
sub
add
insb
shl
xchg
jo
mov
dec
or
mov
add
rolb
add
cmp
in
stc
add
inc
stos
imul
pusha
aas
xchg
mov
mov
dec
jl
push
add
lcall
add
push
add
pop
dec
mov
loope
aam
aad
cmp
aas
add
xchg
cwtl
mov
repnz
call
cmp
cmp
adc
sbb
sub
sub
daa
push
imul
das
int3
adc
or
andb
jl
add
and
data16
dec
adc
mov
add
bound
and
fs
add
in
call
pusha
movsb
xchg
xchg
rcr
stos
add
scas
jns
idivb
sbb
and
jl
pop
fidivl
cmc
loope
rol
xchg
shlb
add
xlat
push
dec
add
movsl
sub
in
xor
add
adc
inc
xor
insl
mov
shl
sbb
call
add
mov
sub
arpl
test
push
add
ffreep
sub
and
cli
dec
pusha
mov
repnz
lahf
in
fwait
out
add
mov
and
lods
cmpsb
ret
inc
jp
ljmp
das
lds
aaa
cmc
sbb
mov
jb
xor
movb
push
inc
call
push
and
fiadds
mov
in
push
add
dec
fistps
jne
dec
push
xchg
add
shr
fistl
ds
incb
push
mov
lods
sub
mov
fiadds
adc
or
mov
cmpsl
add
inc
push
in
sub
add
sub
pushf
and
movb
xor
or
call
das
cwtl
add
loope
add
pop
xchg
filds
sbb
loopne
jb
ffree
mov
or
out
push
nop
add
pop
aas
inc
rolb
add
xchg
pushf
mov
notb
xor
sbb
inc
adc
aam
mov
add
xchg
xchg
cld
out
cmp
add
mov
outsl
add
daa
mov
add
not
dec
dec
shlb
test
fisttpl
in
sub
ret
push
xchg
xchg
rolb
inc
js
fisubrl
in
add
cmp
fidivs
or
test
jae
pop
mov
pusha
pop
leave
lock
bnd
ficoml
loop
and
mov
loopne
mov
sbb
sub
sbb
xor
sub
cmp
stc
aad
xchg
push
test
mov
ret
inc
movzbl
cmp
lods
popa
jo
mov
add
xlat
jns
push
loopne
sub
das
mov
pop
push
pop
lds
cmp
add
fists
dec
fisubl
add
push
mov
add
scas
adc
sub
lds
add
jp
jmp
cltd
int3
jl
aaa
inc
bnd
imul
fidivrs
mov
jo
push
add
push
inc
rol
test
addr16
out
sbb
in
shlb
fs
sarl
add
cmovle
repz
push
orb
pop
loopne
add
mov
shr
cmp
mov
jl
pop
sbb
sarb
dec
jns
cmp
add
or
inc
les
mov
fbstp
push
dec
or
test
stos
xchg
or
cmp
mov
inc
add
loop
int
in
xrelease
or
pop
pop
xor
xchg
mov
pop
pop
lds
dec
cmc
sti
add
dec
xchg
push
jl
mov
lea
sbb
out
aas
fidivrl
xchg
inc
add
test
dec
fstpl
xchg
js
adc
jbe
lods
push
add
fld
pop
mov
cli
pop
fiaddl
fnstsw
xorl
adc
inc
sbb
aam
cmp
popa
imul
sub
std
add
pop
fcmovb
sub
in
jecxz
call
lods
add
enter
mov
pushf
daa
loopne
cmpsl
sbb
sbb
and
int
jns
push
xor
rclb
jb
dec
push
bound
add
mov
fidivl
cmp
fldl
inc
sbbl
add
cmc
add
and
adc
xchg
insl
test
jbe
sbb
mov
mov
sbbb
xchg
jb
add
add
sbb
mov
cmp
cmp
sbbl
adcl
in
push
add
mov
pop
sub
int3
out
jg
cwtl
adc
dec
pop
xchg
sti
sahf
push
imul
in
pop
movzwl
jbe
and
add
xor
add
jb
add
jle
add
jg
and
out
shll
cmc
xor
cmp
int3
or
add
lret
pusha
rclb
add
adc
in
dec
add
push
inc
cmc
push
sarl
dec
jp
or
fs
add
gs
mov
xor
pop
sbb
mov
xlat
push
adc
push
loope
pop
stc
mov
mov
mov
lock
xor
jg
add
pop
inc
in
psllq
fnstcw
iret
mov
mulb
pop
pop
popf
push
add
jecxz
xchg
add
add
push
mov
lock
popa
dec
pop
fstpl
adc
mov
scas
push
lcall
sbbb
fnsave
and
cmp
hlt
adcb
popf
xorl
out
outsb
adc
divb
sbb
dec
mov
js
mov
dec
lret
or
movsl
sub
add
pop
add
xchg
bound
pop
rorb
add
jb
aam
roll
pop
xor
xchg
or
add
push
negl
shl
push
and
push
aas
xchg
sub
push
stc
in
pop
je
out
jbe
add
cmpsb
enter
jae
mov
fmuls
insl
dec
sub
add
and
lods
jmp
iret
lahf
add
or
sub
and
push
ret
add
inc
stos
cli
fsubs
and
movsb
mov
cmpsb
mov
xor
int
cli
in
add
js
arpl
sub
xor
jbe
push
add
pusha
mov
das
pop
and
add
shl
stc
fbld
inc
cmp
xchg
outsl
mov
add
or
push
add
sahf
outsl
jbe
popl
mov
popf
or
mov
cmp
clc
call
stos
mov
lock
push
mov
jns
cmpl
push
cmp
test
mov
lock
rolb
dec
inc
roll
int3
pop
mov
cwtl
enter
mov
jno
test
add
int
and
call
add
lahf
mov
ja
mov
cmp
add
inc
push
imul
loop
pop
inc
aam
sub
inc
outsl
shll
test
sti
das
pusha
add
out
popf
inc
pop
mov
dec
loop
jg
push
dec
aad
jl
imul
cmc
adc
icebp
mov
clc
add
inc
fildl
add
or
push
mov
loopne
push
mov
dec
jl
add
mov
aas
pop
or
and
sbb
inc
push
lods
aad
mov
test
add
jge
lcall
sbbb
fildl
lret
push
ss
and
sub
xchg
mov
jl
fs
and
add
paddq
add
stos
add
add
adc
xor
mov
roll
add
hlt
xchg
xor
add
outsb
adc
cli
jp
add
cmpsl
pop
jae
add
mov
push
inc
sbb
or
pop
xchg
and
pop
xchg
mov
sub
cmpsl
xorb
insl
push
xchg
sarb
shl
dec
add
mov
mov
shlb
adc
mov
fadds
fisubrs
push
xchg
mov
add
rorb
add
dec
jnp
fiadds
push
loopne
lret
and
std
shlb
pop
jp
jno
rcr
and
outsl
mov
inc
iret
in
les
loopne
cmp
rclb
add
icebp
sub
mov
into
jns
mov
add
mov
and
push
and
fbld
scas
jno
popa
push
fldl
and
jo
xchg
or
ret
lods
mov
sub
pop
adc
testl
add
cmp
mov
lea
adc
jg
aam
jbe
or
add
dec
scas
cld
pop
xor
sub
mov
pusha
int3
lret
xor
dec
cmp
jge
pop
dec
cli
repz
jmp
shlb
push
cmpsl
aaa
sbb
mov
mov
fidivs
inc
loope
jl
push
sub
pop
mov
mov
push
cmp
std
popa
aam
inc
cli
sub
and
jge
cmp
cld
or
lods
out
add
sbb
add
inc
iret
mov
lods
arpl
or
or
push
mov
insb
cmp
sbbl
rorl
dec
jle
xchg
inc
mov
adc
add
je
rcll
mov
or
mov
faddl
mov
mov
cmc
fucom
js
add
add
push
push
inc
mov
sbb
clc
mulb
sub
inc
nop
push
add
gs
mov
add
or
add
loopw
aas
push
jg
cs
push
and
bnd
adc
int3
push
adc
pop
sbb
mov
fucomip
out
fwait
js
dec
lcall
inc
sti
int3
inc
pop
or
out
cmp
loop
pop
test
mov
aad
xor
and
pop
and
add
fs
cltd
cmp
bound
ss
and
dec
add
imul
outsl
daa
pop
mov
adc
lahf
test
or
std
in
add
add
stos
mov
out
add
js
cmpb
test
pop
xor
in
pop
jae
or
lods
stos
sub
sldt
aam
add
mov
xchg
in
sbb
jbe
popf
sbb
aam
cmp
cmp
jge
in
add
imul
push
push
fdivr
fadds
inc
test
inc
cmp
xchg
or
out
and
mov
xor
jmp
add
gs
loopne
or
add
aam
stos
mov
sbb
insl
jg
daa
ret
test
dec
adc
stos
scas
imul
add
incb
cli
jnp
add
dec
or
and
add
movsl
and
sbb
mov
pop
les
sub
icebp
jo
sbb
sub
add
pop
out
cmp
int3
xchg
add
jmp
jno
xchg
sarl
add
clc
add
dec
or
jbe
xchg
cmp
mov
stos
push
dec
sub
push
je
jo
outsl
add
inc
add
jecxz
nop
jns
mov
add
and
add
mov
daa
mov
ret
xor
cwtl
push
cmp
push
dec
aas
lods
xchg
push
mov
xlat
xor
cmpsb
jecxz
mulb
or
sub
adc
push
add
mov
pop
ret
pushl
mov
pop
cmp
cmp
dec
in
jbe
mull
test
call
movsb
mov
cmp
imul
das
inc
lock
push
jge
loop
out
push
mov
push
sahf
daa
adc
or
mov
mov
sub
lahf
arpl
lods
adc
das
les
aam
dec
add
pushf
xchg
xchg
pop
push
mov
sbb
pop
stos
ret
clc
and
mov
add
enter
subl
test
push
lock
add
jno
repz
sbb
add
ret
add
xchg
push
cli
stos
add
sub
les
xor
xchg
sub
ljmp
bound
or
cmp
pusha
adc
pop
es
pop
loope
xchg
fildl
ja
and
sahf
cmpsb
add
cmp
test
push
stos
jnp
add
int3
mov
jl
mov
adcl
loop
xchg
pop
mov
lods
nop
clc
decb
sub
add
test
repnz
sar
daa
add
pop
into
fbld
inc
mov
push
xchg
jns
mov
mov
jne
cmp
xor
pusha
popa
add
and
and
xor
shlb
cmp
cs
fldcw
inc
test
adc
sbb
push
mov
xor
pusha
pop
rclb
inc
mov
aam
jb
add
or
dec
cs
roll
pop
dec
gs
test
aam
add
mov
xchg
sbb
repnz
rcrb
out
sbb
and
add
rorl
sbb
out
mov
mov
xor
sahf
or
ja
add
mov
sbb
mov
push
xchg
sbb
repz
inc
test
mov
js
test
insb
push
dec
jecxz
inc
mov
xor
cltd
pushf
add
adc
jns
add
subb
push
ss
sbb
loope
js
cmp
mov
sbb
jg
xor
adc
jno
cmp
mov
test
arpl
cmp
inc
fildll
and
push
add
xchg
iret
sub
add
call
pop
cmp
mov
and
sub
add
lcall
mov
or
and
ror
or
and
add
or
ss
sub
inc
leave
push
sub
adc
jge
pop
xchg
adc
pop
in
push
ja
pusha
sub
movsl
sub
leave
dec
inc
bnd
fstpt
shl
lret
xor
xor
push
test
pop
in
dec
or
xor
add
mov
stos
punpckldq
pop
adc
roll
sub
xchg
cltd
repnz
mov
pop
pusha
jmp
call
sbbl
das
add
cmpsl
xlat
popf
fs
adc
or
test
lods
adc
add
push
cmp
push
push
loopne
rcll
clc
mov
arpl
insb
rolb
cmp
js
mov
push
sub
xor
shll
in
inc
jg
cmp
pop
mov
adc
adc
jmp
lock
incl
sbb
sbb
fcmovnb
add
dec
and
xchg
pusha
fnstenv
mul
sub
pushf
adc
adc
adc
fadds
mov
xor
sub
js
adc
test
add
add
inc
inc
jge
cmpsl
inc
arpl
xor
icebp
sub
dec
pop
adc
and
sub
pop
cmp
in
add
sbb
add
pop
jno
cltd
cmp
mov
xchg
cmp
rcr
loope
out
aad
add
xor
addb
bound
add
out
mov
push
incl
aam
iret
scas
std
pop
lock
daa
ds
add
or
gs
sbbb
and
mov
shll
jns
popa
std
mov
data16
add
sbb
pop
nop
fld
xor
xchg
dec
test
rclb
sbb
je
add
inc
ja
add
shll
dec
in
jns
push
pop
mov
testl
push
test
sbb
add
movl
testb
and
movb
cmp
mov
cmp
add
cwtl
stos
fcmovnu
cmpsb
shrb
or
movsb
push
dec
jne
add
movl
inc
scas
sbb
jecxz
cmp
cmpsl
cmp
xchg
or
ljmp
push
mov
adc
add
fsts
mov
mov
stos
lods
push
inc
mov
mov
test
divb
add
and
pop
out
push
push
cwtl
out
test
xor
mov
mov
sbb
push
adc
xor
add
xor
push
adc
pop
and
pop
xor
and
neg
or
sub
add
dec
enter
pop
cmp
sbb
ja
icebp
arpl
lret
in
leave
jg
add
sub
fiadds
shrb
add
ljmp
repz
add
xchg
jns
mov
add
aas
je
and
xor
add
iret
sub
mov
lods
ds
stos
mov
cltd
aad
cwtl
push
add
inc
add
outsb
fcmovnu
in
rcll
xor
add
cmp
addr16
testl
adc
sbbb
mov
add
ja
pop
insb
dec
push
xchg
and
lcall
testl
jge
pusha
add
mov
jne
inc
and
add
pop
dec
hlt
scas
sbb
fiadds
jno
loopne
push
inc
cmp
or
insl
stos
movsb
cli
mov
sbb
inc
mov
in
mov
in
sbb
jle
push
push
add
loopne
jl
push
testl
aam
jno
cmp
subl
add
arpl
add
imul
loope
roll
iret
jecxz
cwtl
loop
in
sbb
aaa
fdivrl
add
or
jp
adc
clc
pop
mov
dec
add
mov
inc
hlt
xor
movsb
add
xor
inc
xor
movb
cmp
cmpsl
fsubr
lea
out
and
aad
dec
sbbb
adc
sub
loopne,pn
movsb
xor
jmp
add
stos
xchg
add
mov
popf
sub
mov
xor
xor
jge
dec
fs
add
sbb
outsl
stos
and
jl
add
pushf
or
ja
sbb
cmp
icebp
sbb
in
dec
xchg
add
mov
cltd
add
sub
iret
jae
sbb
enter
add
mov
add
aaa
dec
aad
and
push
pop
out
mov
pushf
mov
hlt
rorb
push
xchg
adc
daa
repz
nop
add
stos
or
fsubs
mov
ret
lret
inc
jmp
cmp
cmp
imul
sarb
test
cmovbe
inc
mov
jae
je
aam
cmp
lods
inc
sbb
adc
mov
pop
mov
xlat
jns
cmp
bts
aam
sbb
fidivrl
ja
add
sbb
jle
dec
xor
int
or
add
int3
das
jmp
insl
je
sub
xor
and
cmp
roll
movsb
mov
dec
jns
mov
stc
rclb
pop
cmpl
enter
jne
adcb
mov
dec
xchg
add
insb
cld
and
in
ret
sti
and
clc
jmp
pop
mov
ds
sbbb
xlat
cmpsl
movsb
in
mov
mov
adc
imul
cwtl
sub
andb
pusha
pop
outsl
in
cs
stos
test
iret
popa
inc
mov
xchg
nop
cmp
aad
int3
test
adc
cmp
xchg
add
mov
mov
add
ficoms
cmp
dec
xchg
hlt
adc
repz
mov
sbb
outsl
or
pop
movsl
stos
add
xor
adc
loopne
faddl
popa
cmp
sbb
js
incb
mov
inc
loopne
add
sbb
mov
je
fadd
xor
dec
imul
loope
mov
jne
push
mov
frndint
popa
rcrb
aam
push
or
enter
lock
add
pusha
outsl
repz
inc
jae
add
loop
out
test
mov
mov
sarl
fmull
and
ljmp
clc
int3
jle
sub
ja
mov
lock
fxch
push
xorb
inc
psubw
ret
adc
test
adc
out
leave
scas
rorb
mov
pop
ss
movl
ret
mov
jns
or
cmpsb
lret
push
xor
outsl
sub
stos
add
push
ret
cwtl
add
outsb
ja
add
mov
add
popf
in
pusha
mov
les
repz
sahf
lret
add
int3
and
xor
push
cmc
jl
sbb
or
dec
and
inc
nop
sub
pop
out
dec
fsubrs
jnp
add
pop
push
jle
and
loopne
push
rorl
adc
daa
or
mov
mov
fstpl
sbb
xchg
sbb
mov
stos
int
fwait
mov
ja
adc
inc
and
mov
das
sbb
ljmp
adc
nop
jae
ss
adc
sub
fcoml
lds
inc
test
add
push
or
mov
mov
movsl
mov
inc
dec
aaa
add
cmp
lock
scas
add
addr16
mov
insb
xchg
nop
sbb
orb
jecxz
add
ror
mov
add
cltd
lock
or
stos
cli
sbb
add
movlps
dec
add
insb
arpl
fsubrl
rcrb
inc
pop
dec
jmp
cmp
pop
sub
adc
sar
add
pop
andb
adc
mov
mov
xchg
adc
loopne
cmp
nop
or
xchg
mov
sub
shld
loop
sub
cmpl
jbe
adc
and
flds
mov
or
add
dec
adc
outsl
mov
pop
and
cmp
subl
ljmp
addb
mov
sbb
adc
adc
add
jg
push
out
mov
sub
int3
pop
mov
adc
push
test
mov
mov
pop
repz
inc
xchg
dec
iret
loopne
adc
fistpl
add
sub
jnp
inc
mov
sbb
inc
cmp
push
lahf
jo
xchg
es
adc
inc
push
pop
push
popa
xchg
mov
pop
call
cltd
js
cmp
mov
subb
int3
lods
add
jmp
add
push
cmp
push
scas
pop
dec
add
test
in
cld
movsl
mov
dec
cs
bound
or
push
movb
dec
repnz
mov
add
cmp
daa
xchg
sahf
mov
add
into
orl
movsl
insl
sub
or
xor
mov
sub
push
mov
sti
iret
push
jecxz
lahf
push
add
fsts
scas
pop
push
mov
sub
mov
jge
adc
popa
div
push
shr
add
sti
rolb
jae
dec
cmp
je
movsb
fildl
sbb
jecxz
test
popa
adc
addb
or
sbb
or
nop
xlat
xor
je
fstps
aam
sub
sti
dec
outsb
inc
aad
push
lret
test
orb
out
or
inc
fstl
mov
dec
mov
in
and
daa
repz
xchg
enter
add
push
pop
les
inc
mov
cmpsl
arpl
jb
cwtl
cltd
loopne
int
cld
push
add
daa
or
inc
fst
into
sbb
push
addl
xor
pop
insb
cmp
jmp
in
xchg
les
mov
mov
and
in
jg
add
mov
popw
scas
inc
movsb
and
mov
add
inc
aas
mov
ja
fs
bound
mov
mov
mov
sbb
imul
push
adc
inc
in
loop
sub
adc
lret
or
mov
faddl
shrb
sbb
lcall
jmp
add
dec
scas
aaa
jno
sbbb
adc
xor
mov
mov
dec
pop
out
xchg
cli
sahf
mov
mov
jle
xchg
fdivr
mov
arpl
add
pop
mov
mov
sbb
mov
mov
add
jecxz
push
roll
xor
cwtl
sub
stc
mov
fwait
xchg
stos
or
repnz
loop
jno
dec
ds
add
jmp
jge
std
mov
fdivrl
push
sub
loopne
adc
and
aaa
jns
orl
jecxz
test
mov
or
mov
and
or
xchg
fimull
mov
jns
ret
test
shrl
sbb
in
or
insl
pop
ret
pop
xchg
push
clc
adc
adc
lock
inc
cltd
mov
stc
lods
mov
pop
inc
ret
add
cwtl
movsl
add
test
push
sbb
mov
lcall
adc
jns
add
mov
add
arpl
movl
cmp
loop
je
xor
mov
and
test
fs
sbb
add
stos
jbe
cmp
fidivs
ss
jle
add
or
jo
add
cli
mov
pop
inc
in
xchg
js
sub
sbb
jne
push
in
mov
cmp
jle
mov
inc
repnz
add
fs
sub
f2xm1
push
xor
pop
mov
push
loope
lods
add
mov
or
mov
inc
inc
dec
sbb
xchg
insb
incb
sub
pop
pop
push
add
call
into
sub
add
mov
push
xor
pop
dec
cmpb
mov
dec
nop
adcb
rol
fiaddl
push
jp
sti
ss
sbb
add
lods
xlat
add
mov
fwait
add
mov
mov
dec
add
pop
int3
adc
jb
adcb
push
dec
stc
xchg
sbb
cwtl
mov
mov
jg
jbe,pt
add
out
fadds
hlt
mov
jl
xchg
and
cli
test
dec
cwtl
lock
mov
stos
scas
cwtl
add
pop
push
mov
dec
popf
es
xor
sbbb
lods
fisubl
mov
add
rcl
inc
scas
gs
pop
cmp
add
cmpsl
les
imul
mov
dec
iret
mov
adc
pop
lds
sbb
mov
xor
cmp
inc
test
push
comiss
and
xor
in
fildll
mov
shll
adc
adc
xor
leave
jae
dec
shrd
push
xlat
filds
mov
fsts
sbb
add
mov
add
dec
sbb
mov
add
fldcw
stos
adc
xchg
add
jp
sbb
adc
in
xchg
add
or
xchg
cmp
adc
mov
mov
cmp
lar
inc
js
add
and
inc
xchg
jb
add
daa
push
cmpsb
in
je
add
loope
rcrb
int3
xchg
add
push
in
cmp
push
add
insl
jl
xor
shl
add
mov
and
vpsubq
out
fsubrl
in
push
jo
fstp
loop
cmpl
xchg
aad
loop
jl
xor
and
inc
cmp
push
out
push
mov
cwtl
movsb
push
test
mov
lret
sbb
mov
and
mov
pushf
push
mov
mov
repnz
les
lea
out
cltd
aam
mov
ror
int3
add
xor
add
xchg
jle
stc
mov
fsubrl
adc
add
and
push
sbb
imul
push
sub
sbb
add
imul
js
xorb
jle
cmp
ljmp
lea
cld
add
fcomip
data16
adc
bound
pop
add
fbld
popf
jp
add
add
or
cmp
movsb
and
adc
sbb
and
cld
add
je
inc
jo
push
xor
jmp
in
test
xor
add
bnd
sbb
add
sar
add
xor
mov
inc
push
incl
into
sub
mul
fsts
push
adc
sarb
add
mov
ret
xchg
movsb
push
mov
xor
jecxz
lods
add
add
lds
leave
sbb
loopne
push
sub
pop
add
cmp
lahf
push
pusha
aad
sbb
mov
test
xor
inc
and
inc
or
pop
add
aam
xchg
pop
mov
mov
and
cld
add
jmp
cmp
adc
ds
and
clc
aaa
ljmp
inc
ds
and
outsl
add
push
add
out
mov
mov
and
frstor
adc
sbb
mov
cmp
jno
and
test
xchg
mov
mov
dec
pop
fs
and
loopne,pn
pop
cmp
cmc
jno
loopne
clc
lret
jbe
add
inc
jae
int
and
lcall
jg
fnsave
loope
xor
push
add
ds
int
call
or
cmp
inc
dec
lea
dec
loope
push
pusha
fdivrs
std
add
jl
out
repnz
cwtl
shll
pop
add
gs
neg
and
bound
lcall
movsb
xchg
mov
mov
scas
std
jnp
add
jle
fdivl
or
andl
enter
jp
and
sub
jnp
xchg
dec
pop
sub
push
and
popl
adc
mov
mov
mov
mov
mov
add
decl
aad
fwait
jnp
push
jbe
enter
fwait
ds
in
mov
jns
cmp
and
lock
fsubrs
add
pushf
pop
adc
popa
push
lock
testb
add
cs
push
or
jge
clc
push
roll
cltd
faddp
test
movsb
insl
push
xorb
movb
inc
fdivrs
clc
pop
push
add
cmp
ja
clc
sub
add
lea
sbb
insl
mov
xchg
pop
outsl
cld
cltd
fistl
test
sub
enter
adc
dec
pop
adc
popf
add
fwait
call
push
jecxz
mov
pusha
gs
fucomip
add
jmp
jo
iret
call
popa
and
cmp
mov
push
push
roll
jl
cmp
stc
xchg
jmp
adc
cmpsl
negl
jle
xchg
cmp
test
pop
cli
add
mov
loopne
add
mov
dec
int3
sub
pop
add
iret
out
cmp
out
add
push
shrl
add
add
je
xchg
fsubrs
push
mov
test
mov
js
mov
cmp
fisttpll
and
dec
js
jnp
movsl
push
fcmovnbe
mov
mov
sbb
addb
mov
das
testb
xchg
cmpsl
inc
lcall
mov
ror
ret
sub
add
repz
in
add
cmp
sub
push
imul
mov
push
gs
dec
or
jb
fwait
repz
loopne
xor
icebp
push
jp
sbb
dec
subb
jbe
push
incl
lock
mov
nop
xor
add
movb
into
mov
sbb
push
adc
mov
ficoml
shrb
sbb
addb
sbb
jle
clc
push
sub
ss
add
std
dec
push
add
jle
sub
push
cmp
mov
outsl
inc
xchg
hlt
mov
mov
xchg
int
das
sbb
push
cmpb
loopne
add
mov
and
mov
in
jne
add
imul
xor
loope
aaa
loopne
inc
jne
mov
adc
cld
enter
rolb
sub
and
add
fcom
out
rcrb
pop
add
jp
cmp
mov
stos
add
sub
pop
add
or
je
es
push
add
cmp
mov
sbb
rcrl
cmp
scas
test
js
add
inc
shlb
cmpsb
or
or
add
daa
pusha
pop
cmp
jmp
cmp
and
ss
mov
shl
mov
mov
and
pop
mov
inc
add
inc
mov
inc
mov
imul
push
dec
sbb
push
and
mov
or
add
int
out
leave
insb
lea
popl
jl
add
add
insl
andl
dec
add
xor
loopne
cmp
pop
jle
mov
imul
add
int3
and
loope
adc
bound
and
cmp
mov
dec
jl
scas
cmp
add
popa
call
inc
mov
je
adc
outsl
movsl
pop
in
fadds
lcall
in
lods
mov
add
frstpm(287
rcll
aas
jle
add
or
add
and
popa
inc
cmp
xchg
roll
js
arpl
test
xchg
add
jle
mov
cmp
out
sub
out
push
in
xor
fadds
push
jmp
or
js
test
adc
pop
mov
cwtl
enter
push
out
je
mov
movsl
cmpsl
mov
iret
fsubs
mov
les
inc
and
inc
leave
fistl
sarb
fsubl
push
mov
inc
test
dec
add
mov
inc
mov
add
push
xchg
test
aas
add
cs
cmp
es
ud1
sbb
cli
in
hlt
or
push
jmp
or
adc
inc
cmpsb
inc
ljmp
lahf
int
mov
nop
and
push
shlb
dec
lret
cmp
push
andl
mov
dec
or
imul
in
test
pop
mov
popf
add
sahf
or
sbb
inc
in
mov
cmp
pop
loopne
arpl
mov
cmp
sub
test
imul
pusha
add
xor
jbe
push
mov
push
cld
jmp
sahf
or
and
inc
pop
addr16
ret
jno
cmp
add
jmp
add
fmuls
add
mov
push
js
add
sub
or
pusha
pop
push
add
sbb
xor
dec
push
mov
push
in
mov
repnz
shlb
add
or
push
add
pop
xorb
mov
in
dec
add
or
punpckldq
jbe
sbb
push
ret
add
jns
call
lret
lods
sub
jne
sahf
add
sbb
push
ljmp
mov
sbb
scas
jno
test
lcall
adc
dec
cld
xchg
in
and
pop
test
add
add
popf
xchg
inc
mov
mov
ja
xchg
js
sub
push
sbb
xor
daa
cld
cli
add
mov
test
mov
insl
into
nop
jmp
aad
das
push
pop
cmp
add
out
test
incl
and
mov
add
fdivp
cmp
test
push
mov
int
cld
sub
mov
pop
addb
es
sub
xor
dec
pop
cwtl
pop
flds
xchg
sub
cmp
push
mov
ret
mov
xor
lds
arpl
sub
and
out
xchg
or
dec
jle
popa
cmp
dec
out
push
xchg
fcmove
iret
out
das
pop
inc
push
popf
dec
mov
shlb
add
and
xchg
lgdtl
mov
loopne
stc
es
pop
int3
jmp
dec
daa
jne
jmp
pop
add
sub
push
mov
adc
pop
dec
shl
je
test
pusha
pop
std
shlb
add
std
mov
mov
cmp
sbb
mov
add
jg
xchg
sahf
out
add
sub
inc
dec
push
or
aam
and
out
sbb
sub
lcall
ljmp
pop
lret
test
xchg
add
inc
adc
mov
adc
sub
or
dec
cmpsl
cmp
mov
in
cld
aam
out
fdivs
sbb
mov
pause
mov
add
ja
push
loop
mov
ret
cltd
jnp
add
push
bnd
jbe
rorl
jg
mov
or
xor
cwtl
mov
lea
mov
dec
ret
cmp
insl
add
mov
orl
add
jge
aaa
add
mov
pop
xor
or
push
mov
push
loope
in
int3
and
lret
test
mov
pusha
lods
push
aam
mov
std
mov
sbb
cmp
int
jecxz
outsb
sub
jne
adc
add
jno
rcrl
and
push
or
or
push
sti
mov
dec
or
add
orl
adc
jae
jg
sbb
mov
es
in
xchg
outsb
add
jns
ja
nop
xorl
in
pop
jb
add
mov
push
xchg
das
cltd
mov
jae
xchg
adc
add
les
mov
add
mov
scas
aad
out
add
insb
shrl
or
pop
rol
fldcw
pushf
mov
add
lock
adc
mov
js
pop
cmp
pop
mov
and
in
das
in
lods
jo
mov
adc
test
je
or
cmp
orl
push
mov
sub
lods
call
jp
adc
out
pusha
mov
sub
out
jl
shlb
mov
lea
and
test
adc
xchg
fnstcw
fadds
jle
push
jbe
fs
jle
int3
addr16
sbb
mov
pop
loop
sbb
mov
pop
cmp
sub
mov
fs
setge
out
mov
mov
fdivl
adc
add
ljmp
enter
stos
ffree
and
in
xor
sub
sbb
insb
xchg
imull
stos
mov
mov
nop
cmpsl
add
retw
sub
inc
add
pusha
pop
sbb
mov
fsts
aam
movb
jae
pop
push
mov
add
adcb
divb
add
fdivr
xor
dec
test
or
xor
push
mov
fimuls
pop
push
mov
pop
cmc
test
aaa
cwtl
jl
sbb
inc
xor
sub
repnz
inc
addl
test
adc
pop
into
dec
sbb
push
addb
ret
testb
push
inc
add
popa
and
hlt
flds
ss
clc
ret
sbb
inc
add
cmp
bound
iret
add
shll
or
sti
in
and
mov
cmp
xchg
das
jecxz
cmp
and
xlat
in
jl
push
flds
dec
sub
push
dec
popf
add
cmp
aaa
add
clc
mov
roll
xor
push
adc
mov
mov
rorl
sub
jae
add
lods
ss
push
int3
add
aas
adc
pop
lock
fistpll
xorb
mov
enter
dec
xchg
fsubrs
aam
ffree
ds
add
fisubs
xlat
sbb
mov
xor
add
push
out
dec
sbb
arpl
add
imul
nop
fsubrl
xor
mov
dec
mov
add
and
push
dec
cwtl
add
dec
int3
loopne
bound
lret
xchg
adc
and
rclb
aad
pop
add
ret
jmp
sbb
mov
out
jae
add
iret
loope
jl
cwtl
inc
add
pop
rcrb
ja
xchg
jg
and
sahf
ds
lock
out
in
pop
popa
mov
mov
pop
and
push
cmp
jl
jnp
add
les
jo
call
movsb
mov
int3
rorb
add
mulb
fdivs
xor
add
push
pop
jno
sub
push
and
push
or
inc
lea
jae
movsb
or
mov
je
cmpb
inc
pusha
add
clc
in
xor
mov
fsubrs
jl
add
pusha
mov
add
lea
add
jecxz
repnz
pop
nop
push
jmp
nop
add
add
cmc
or
ljmp
adc
push
scas
imul
mov
scas
shl
into
push
mov
push
add
cmpsl
sub
or
iret
mov
rol
pop
scas
add
lock
dec
js
les
dec
mov
fcomps
or
lock
and
jl
mov
pop
xchg
push
jae
in
add
pop
dec
jle
dec
mov
mov
add
fisubrs
dec
inc
add
out
jno
xchg
sub
sbb
mov
add
lds
cmp
je
push
pop
pusha
lret
inc
dec
jg
push
mov
into
push
add
sti
jmp
pop
ret
lds
fldl
push
xchg
mov
pop
push
pop
jl
sub
es
pop
loop
cmp
add
stos
pop
aam
cwtl
rclb
push
adc
test
add
imul
adc
scas
repz
scas
ret
sbb
mov
lcall
and
pop
mov
dec
dec
sub
int3
rorl
add
mov
mov
xor
fdivp
add
jp
dec
inc
ds
icebp
shl
push
add
mov
mov
push
dec
pop
inc
rcll
xor
fs
imulb
or
pop
pop
shlb
inc
add
mov
outsl
sar
js
pop
dec
xchg
add
push
je
cmc
fsts
sti
outsb
fs
add
mov
aad
insl
je
add
hlt
clc
add
inc
mul
adc
mov
add
mov
cmc
add
std
clc
mov
ret
jg
cmp
je
xor
sahf
scas
stos
mov
sbbl
pop
inc
add
jg
stos
outsl
mov
add
sbb
sbbb
add
pop
loopne
addl
inc
mov
pop
icebp
bound
push
push
lock
mov
add
cmp
std
sar
mov
inc
jle
or
clc
std
and
mov
xor
subb
jecxz
sbb
fcoms
sbb
lods
cmpsl
call
sub
mov
xchg
adc
popl
movsb
outsl
inc
pusha
jge
adc
dec
and
xorb
loopne
xor
mov
pop
xchg
mov
mov
fnstenv
pop
cwtl
push
or
add
add
inc
cmp
mov
mov
sar
call
mov
mov
outsl
xchg
or
gs
inc
inc
add
aam
test
icebp
aas
rolb
shl
add
xchg
add
sbb
or
leave
or
xor
rolb
scas
adc
fwait
or
call
pop
loop
jmp
out
add
repz
add
adc
fisttps
enter
leave
xor
xor
cmpsb
push
adc
mov
sbb
and
add
lret
iret
fwait
or
push
stc
push
test
std
movsb
cmp
sbb
loop
add
cmpsl
lock
jne
adc
dec
je
loopne
mov
pop
dec
clc
lock
out
test
adc
jge
add
jne
fs
cmp
sub
adc
jno
sarb
add
sarb
jne
and
dec
xchg
mov
in
sbb
rcrl
cmp
add
inc
and
add
addl
mov
addb
jp
push
xor
xor
add
imul
push
and
lds
lock
les
mov
lcall
xchg
lahf
mov
cwtl
fwait
in
nop
sub
cmp
loopne
ja
inc
xor
scas
mov
es
push
mov
jb
decl
int
and
add
sarl
shrb
pop
xchg
nop
call
add
popa
out
dec
jb
adc
push
or
pushf
aas
arpl
jo
addl
lock
loop
xor
inc
clc
lret
xchg
mov
roll
pop
xlat
add
popa
push
leave
add
pop
inc
and
xor
loope
lea
orb
bound
sbb
pusha
cli
xlat
and
pushf
and
add
sub
jne
pop
movd
jo
mov
pop
filds
push
int
fadd
sub
jne
test
lods
fnstsw
loope
ljmp
lea
sbb
push
xor
jo
rolb
xchg
pop
mov
cmp
out
mov
jne
push
sub
or
les
movsb
sbb
sub
incb
cmp
shrb
fdivs
xchg
scas
cwtl
adc
daa
mov
mull
mov
clc
inc
insl
sbb
sahf
xor
icebp
cmp
das
add
push
dec
inc
xor
jo
dec
add
xchg
jecxz
fwait
jmp
or
or
and
lods
movl
test
add
cmp
nop
push
jp
cwtl
shlb
adc
add
dec
pop
add
mov
add
jecxz
popf
add
lcall
call
xor
xor
add
xor
das
movsl
cwtl
push
add
mov
sbb
xor
xchg
lret
cmp
adc
adc
xchg
shlb
inc
xor
add
mov
add
cli
inc
into
lahf
les
hlt
add
adc
sbb
iret
test
inc
dec
add
addb
sub
cmp
mov
add
push
sbb
fsubr
or
inc
sbb
adc
xchg
int3
jo
cmp
xor
cmpb
sub
sbb
jno
das
add
test
cwtl
lds
je
jl
add
push
xchg
fs
rcll
and
cmp
orb
ffreep
sub
enter
add
cmp
push
sbb
sahf
pop
and
enter
dec
sub
adc
sbb
mov
ljmp
pop
add
ret
add
data16
shlb
adc
pusha
ljmp
stos
scas
andb
mov
loopne
movsl
xor
or
sub
and
test
rcr
mov
pop
mov
and
xchg
dec
push
lock
je
xor
mov
addr16
add
xor
pop
stc
xchg
aad
cmp
popf
add
scas
add
fcoms
mov
push
or
push
daa
push
add
fdivl
adc
fildl
push
aaa
inc
stos
mov
negb
pusha
mov
jle
sahf
js,pn
add
ljmp
mov
sub
rcr
stc
in
sbb
in
jle
sbb
mov
call
or
sbb
xor
xor
addr16
pop
rorb
sbb
add
scas
add
xor
int3
pop
or
or
hlt
xchg
popa
add
mov
sahf
popa
repnz
mov
mov
dec
mov
xor
sbb
cmpsb
mov
push
pushf
adc
mov
mov
pop
mull
xor
adcb
pop
shr
or
xor
and
mov
jb
pop
add
hlt
xor
jnp
adc
movsl
mov
mov
and
jecxz
inc
xor
das
cmp
cmp
mov
and
or
sbbb
insb
gs
testb
out
push
nop
add
jecxz
fwait
pop
jp
xchg
mov
inc
adc
xchg
xor
and
cmp
sbb
call
add
call
pop
and
sbb
adc
testl
inc
sbb
icebp
push
mov
or
mov
add
stos
test
out
push
xchg
cmp
xchg
daa
nop
push
icebp
enter
xor
rorb
adc
insb
bound
imul
jns
shrb
popf
nop
xor
cmp
lahf
sbbl
in
jne
add
lcall
pop
enter
xchg
std
cmp
inc
jecxz
lods
test
iret
ss
repnz
jge
arpl
add
lods
sldt
adc
push
mov
dec
sbb
mov
faddl
lret
sbb
pop
imul
mov
outsb
add
mov
out
adc
sub
pusha
hlt
sub
fstpl
mov
sub
push
stos
adc
sarb
mov
js
lods
ret
add
loopne
mov
daa
xchg
jl
mov
data16
adc
add
and
scas
clc
jbe
stos
push
rorl
popa
and
add
rorl
scas
cli
scas
aaa
push
sti
rol
popa
xor
rclb
loopne
in
add
psraw
imull
mov
mov
loopne
leave
repnz
pop
cmp
mov
lds
loop
cli
es
xor
jle
add
hlt
or
adc
push
mov
xor
jle
outsb
dec
pavgb
lret
in
jecxz
fisubs
cmp
jmp
out
xchg
push
push
push
repnz
xor
in
lods
cmp
test
jmp
call
ss
mov
incl
stos
add
cmp
add
add
xchg
adc
add
pusha
xchg
rcll
add
add
das
cli
into
push
mov
mov
enter
nop
int3
dec
jo
mov
fwait
lret
pop
scas
and
lea
stos
and
cmp
rolb
lods
add
cmpb
xor
push
xchg
int3
mov
pop
sub
cltd
gs
addb
rol
push
mov
xchg
or
sub
dec
test
hlt
pop
pop
xchg
or
lret
pop
addr16
push
inc
pop
pop
mov
in
push
pop
inc
or
test
fisubrs
add
inc
mov
cmp
dec
cmpsl
pop
ljmp
add
xchg
jnp
insb
js
shll
leave
push
aaa
fbld
test
mov
mov
call
dec
add
punpckhbw
xchg
inc
jnp
stos
lret
add
mov
dec
movq
sar
push
les
jno
fiaddl
ficomps
xor
adc
add
vmread
sbb
sbb
or
loope
add
sar
lods
dec
fmuls
lea
mov
loopne
or
mov
loope
cmp
adc
jno
shll
push
test
rorb
jno
rcll
inc
lahf
push
stos
aas
jmp
xor
pop
add
xor
add
scas
ret
add
push
add
popa
or
hlt
rorl
loope
mov
pusha
outsb
shlb
dec
cwtl
aas
out
sub
add
dec
xchg
pusha
sub
mov
orl
fbld
add
jp
ret
arpl
add
data16
add
fdivrs
cmc
and
pop
pop
mov
xor
jle
test
ss
push
inc
repz
lahf
jmp
lods
imul
jmp
fdivl
stos
add
add
pop
mov
pop
add
sub
shl
xchg
imul
mov
into
inc
lods
xchg
cmp
std
add
mov
add
mov
mov
sub
dec
scas
nop
lcall
adc
add
in
lock
jge
jb
pop
jecxz
fxch
out
add
es
aam
cld
push
add
mov
cmp
jge
in
push
dec
add
push
test
nop
fistps
imul
add
add
nop
sahf
scas
inc
stc
inc
rcrb
sbb
or
xadd
fists
ljmp
mov
push
xchg
je
mov
adc
jmp
sbb
sub
lock
add
lcall
sbb
mov
arpl
faddl
shlb
adc
in
xchg
sahf
js
push
pop
sbb
jo
mov
call
mov
sbb
cmc
fcompl
shlb
sub
jg
dec
sub
inc
fdivs
pop
lret
mov
out
call
add
sbb
test
aam
and
mov
outsl
xchg
jl
or
ret
inc
mov
pmaxub
daa
pushf
xchg
add
lock
in
add
mov
sbb
in
clc
pop
add
sub
incl
add
push
or
repnz
and
mov
mov
mov
fmuls
in
roll
fstps
and
outsb
add
inc
push
scas
push
fistpl
js
movsb
je
mov
fwait
addb
out
fisttpl
fsubl
mov
jmp
and
test
add
pop
mov
lock
add
pop
es
xchg
shr
xor
mov
pop
in
sbb
int3
add
orl
call
mov
loope
sub
push
adc
pop
add
mov
sub
mov
cwtl
add
cwtl
adc
add
push
sbb
push
fs
pusha
fldcw
popa
mov
mov
rolb
add
or
fwait
sub
cmc
xorb
scas
in
fld
xor
add
cmp
cmp
mov
jle
sbb
or
mov
lds
lcall
cli
mov
add
lods
fsubrp
outsl
loope
push
mov
rcll
out
xor
add
mov
les
insb
jne
jno
imul
lret
pop
sbb
cmp
sub
cmp
add
jp
add
mov
into
mov
cmp
add
int
int3
add
jp
adc
cmp
add
fmuls
pop
ja
popf
incl
aad
dec
mov
push
mov
std
dec
or
mov
add
cmp
ljmp
loopne
je
pop
mov
sti
or
push
sbb
jbe
pop
mov
rcrb
test
sbb
mov
shlb
push
adc
loope
nop
adc
jns
add
movsl
aam
push
icebp
add
xchg
adc
fcmovu
add
inc
ror
nop
das
cld
mov
push
adc
mov
cmc
xor
into
pop
jle
sbb
loope
pop
fnstsw
mov
or
adc
pop
daa
add
int
jecxz
ja
add
test
divl
push
mov
das
cmp
repz
fnstenv
clc
mov
dec
add
inc
scas
cmpb
std
shll
shlb
or
pop
xchg
push
xor
addl
sarb
dec
push
pusha
dec
sbbb
lret
pop
scas
add
loopne
inc
push
movb
add
cmpsb
jp
add
xor
les
leave
mov
mov
mov
call
arpl
emms
loopne
pushf
aam
mov
fldl
rclb
or
loopne
add
add
loop,pn
add
mov
nop
sub
mov
and
sar
xchg
mov
lahf
adc
hlt
add
testb
cmp
pop
std
dec
aad
inc
cmpsl
hlt
icebp
jge
outsb
pusha
cmc
adc
and
xchg
push
sbb
bound
gs
inc
clc
jae
add
test
movsb
leave
jg
sbb
sar
nop
icebp
mov
fiaddl
cltd
dec
ret
arpl
mov
add
add
add
int3
inc
sub
outsb
lods
or
es
jp
add
mov
add
das
dec
push
mov
mov
stc
les
add
mov
add
clc
es
lcall
nop
push
cmp
cwtl
sbb
cs
inc
sub
loopne
pushf
xchg
fs
mov
pop
push
and
enter
inc
dec
sub
das
hlt
out
mov
add
loop
sbb
mov
or
add
jno
or
shl
mov
lds
inc
xchg
clc
xor
xchg
js
cmpsb
jle
fs
je
and
and
outsb
jb
xor
rolb
push
mov
loope
adc
enter
cmp
xor
scas
enter
cwtl
cltd
shl
data16
xchg
mov
jns
jle
pop
lea
popa
divb
mov
inc
leave
mov
add
jno
or
or
jns
sbb
ss
loopne
imul
mov
lret
js
testl
cmp
add
dec
nop
out
and
mov
add
mov
and
dec
mov
clc
jne
mov
or
stc
xchg
push
pop
sbb
loope
cmpsl
lods
add
sti
sub
js
pop
pop
cmp
adc
mov
stos
sub
pushf
or
xor
mov
push
mov
jne
cltd
inc
in
sahf
popf
add
mov
mov
fistpll
enter
xchg
inc
pusha
notl
movsl
sub
ja
sub
sahf
out
adc
jae
pusha
add
notl
in
stos
mov
jecxz
cwtl
fdivr
sbb
xor
sub
jp
aam
or
mov
xchg
xrelease
mov
xor
inc
mov
add
lahf
push
xchg
cmp
cmp
add
mov
in
jae
pop
inc
loop
adc
in
insl
add
pop
jecxz
cvtps2pi
adc
push
mov
test
fsubs
sarl
shlb
mov
pop
push
arpl
popa
out
popf
inc
call
sbb
imul
rorl
xchg
cmp
mov
or
push
fnsave
adc
cwtl
std
or
out
jno
cmp
jp
jg
movsb
pop
add
jbe
ret
cmp
test
mov
add
push
shrl
add
lds
scas
cmp
mov
cmpsl
inc
jp
lret
outsl
call
inc
mov
add
xor
add
sub
cmp
inc
out
test
lahf
or
sub
adc
adc
inc
test
jne
mov
sbb
mov
inc
add
inc
mov
push
xor
jge
xor
push
call
xchg
call
mov
mov
sub
add
mov
cs
add
inc
mov
lock
dec
mov
add
mov
xchg
add
leave
stos
jb
bound
xchg
xor
aam
or
int3
mov
ljmp
mov
cmp
sub
add
inc
nop
leave
add
shll
add
pop
pop
push
test
mov
imul
mov
xor
push
pop
mov
push
and
cmp
repz
and
pop
cmp
jns
mov
and
sub
fadds
stos
mov
aaa
daa
cmp
and
ret
push
in
xchg
dec
js
popf
xchg
test
inc
mov
push
data16
sub
shr
leave
jle
mov
inc
rcr
ljmp
add
inc
repnz
shl
cmc
and
and
stos
cmp
mov
inc
insl
xchg
and
xor
shr
psllw
mul
jno
sbbb
lcall
jg
and
clc
clc
add
jg
imul
add
inc
mov
xor
fstl
mov
addl
jmp
popl
xor
inc
fnstcw
and
ret
or
xchg
ljmp
jmp
test
inc
lock
xchg
sub
pop
add
mul
ljmp
xchg
and
imul
pop
cwtl
out
push
scas
nop
lock
jl
inc
inc
mov
mov
rorl
jne
add
jnp
out
iret
and
testl
ffree
adc
sbb
test
enter
add
gs
out
add
push
cmp
mov
dec
mov
add
sub
js
in
sbb
inc
sub
jle
push
or
or
ljmp
cld
call
stos
scas
xor
mov
jb
add
xor
imul
add
inc
repz
dec
or
mov
mov
imul
gs
aas
add
lahf
inc
xor
lcall
sti
repnz
adc
int3
insl
in
adc
stc
xor
js
pushl
aas
fstps
shr
mov
push
cmp
or
and
add
std
jo
data16
test
or
test
cmpsb
jl
pushf
shrb
push
push
cmp
mov
or
cmc
mov
pop
inc
mov
add
fdivr
aam
fnsave
mov
dec
out
mov
add
sub
jg
add
ja
pop
lret
jae
add
mov
sti
shlb
je
sbb
inc
or
and
popf
add
lods
enter
call
push
cmp
imul
movsb
pop
pop
or
dec
lods
add
sbb
cmpsb
add
inc
cld
iret
push
stos
xchg
aam
push
sbb
sub
out
add
adc
add
std
inc
fistpll
shlb
dec
hlt
fldenv
pop
loop
dec
inc
jle
or
cmp
imul
mov
ret
xor
add
pop
movhps
daa
mov
add
testl
lahf
addb
push
jnp
xchg
xchg
sarb
add
out
inc
arpl
loop
sbb
xchg
xchg
or
mov
pop
or
out
dec
add
lret
dec
jae
shlb
rolb
add
mov
lds
jl
dec
iret
test
push
jns,pt
ds
aaa
push
imul
dec
cmp
jge
js
adc
lock
gs
dec
fildl
cmp
push
daa
sbb
add
and
and
clc
cmp
fisttpll
xlat
push
pop
dec
adcl
mov
icebp
loop
jae
jle
cmp
or
shr
push
sub
lcall
mov
in
loop
mov
scas
and
sub
add
add
lock
pop
int
je
push
mov
add
mov
mulb
dec
ja
cli
pusha
mov
fcoml
add
lea
lods
fldcw
xchg
test
mov
cmp
add
inc
mov
sbb
mov
addr16
and
pop
cld
test
add
call
mov
cmpl
mov
leave
add
das
add
mov
xlat
cltd
jo
mov
fisubl
or
hlt
outsl
pop
xor
adc
rolb
stc
cmpsb
inc
xor
jecxz
test
pop
add
ret
push
fimull
mov
add
dec
or
pop
mov
hlt
in
pusha
xchg
sarl
pop
data16
sbb
fwait
inc
push
push
xorb
hlt
jno
rcl
in
sarb
outsb
pusha
or
pop
sahf
add
addb
lret
adc
sbb
ja
jns
pop
cmp
js
addl
push
sbb
sbb
int3
repnz
mov
call
sbb
repz
ds
ss
cld
dec
dec
push
jge
sbb
xor
call
dec
add
jb
shr
or
add
cmpsb
das
daa
add
xchg
mov
pop
push
xchg
add
jecxz
add
or
jne
test
xchg
dec
xchg
out
pop
rcr
fildl
ljmp
push
add
jmp
aas
push
ret
mov
cli
add
push
jbe
xchg
gs
mov
add
jo
mov
in
jp
ss
nop
add
cmpsb
pusha
cmp
push
dec
inc
inc
popf
popa
push
add
cmp
addr16
jp
jbe
lea
dec
stc
loopne
inc
pop
mov
ljmp
rorb
inc
push
xchg
pop
mov
xorps
stos
les
add
mov
cmp
in
insl
push
mov
xchg
clc
or
xor
lea
sub
movsb
filds
stos
dec
and
jbe
out
add
jne
ret
leave
movb
inc
test
and
pop
stc
sub
fcoml
jnp
inc
insl
test
mov
popf
imul
rcll
add
sbb
repnz
add
sbb
lret
jbe
jno
jg
add
xorl
arpl
cli
fistpl
lret
add
sub
xor
int3
mov
aas
add
xlat
sahf
movsb
test
dec
sub
stos
aaa
pusha
dec
in
sahf
daa
add
xchg
test
xchg
loopne
nop
xor
scas
xor
sub
cmc
test
and
clc
rol
in
repnz
lret
call
dec
cmp
or
repz
popf
cli
xchg
repnz
add
jno
and
das
fxch
aaa
shl
push
ret
out
outsl
push
out
cmp
fistpl
movb
ret
inc
ficoms
cwtl
xor
add
lcall
in
and
sub
icebp
in
je
sbb
ficoml
ds
in
loop
clc
sub
sti
inc
pusha
shl
cmpsb
ljmp
cmp
xchg
or
xlat
jae
inc
push
js
sbb
dec
or
mov
sbb
sub
les
add
sbb
xchg
test
xchg
or
scas
push
add
stos
inc
mov
orl
int3
ljmp
or
fmull
test
sub
lahf
xor
mov
loop
adc
inc
xor
out
cwtl
jle
jmp
mov
add
cmp
notb
add
ja
xchg
shlb
and
orb
add
add
pop
pop
xchg
push
and
mov
jmp
add
dec
mov
insb
outsl
je
adc
adc
cwtl
out
call
sub
dec
push
dec
add
cwtl
test
push
add
sbb
xor
jo
add
enter
aas
lret
push
add
sub
pop
aad
inc
xchg
cltd
add
test
adc
add
dec
mov
add
xchg
push
xchg
and
mov
pop
jl
and
pop
leave
add
push
inc
nop
mov
pop
repnz
mov
lss
xchg
jno
sbb
out
cmp
push
push
aad
fcomps
xor
lds
inc
mov
imul
jecxz
jg
add
jmp
xchg
nop
push
test
cmpsb
fadds
inc
dec
into
jo
add
or
xchg
xor
add
testb
movsl
jp
add
pop
nop
xchg
imul
push
scas
dec
inc
jl
call
push
test
es
sub
push
push
add
add
pop
cmp
adc
gs
xor
push
or
sub
icebp
sbb
or
pop
add
push
into
add
fldl
mov
xor
jae
add
push
flds
imul
fwait
push
cmc
jbe
sbb
or
xor
lret
shr
testl
inc
adc
push
add
inc
fbld
je
add
cltd
imul
and
sub
jbe
push
add
inc
loope
add
mov
add
mov
or
cmp
mov
hlt
adc
add
movl
inc
repnz
mov
js
sub
addb
mov
insb
dec
add
das
mov
lods
pop
pop
xor
out
sbb
jmp
cmp
loopne
inc
inc
pop
js
add
and
inc
push
rclb
dec
xor
mov
dec
sbb
cli
fdivp
xor
pop
sbbb
cmp
add
lods
test
int
fsubl
out
jne
add
xorb
sbb
popa
xchg
insb
xchg
sbb
push
outsl
push
lret
pop
cmova
mov
add
rcr
iret
push
fdivrl
or
add
imul
or
lea
add
enter
les
add
inc
dec
sbb
jecxz
jae
fiaddl
xchg
filds
lret
push
push
lock
dec
and
cld
js
pusha
add
push
jp
pop
fldt
movsl
shlb
lds
jl
cltd
jne
xor
fisubl
lods
add
jecxz
int3
pop
xor
dec
sar
scas
push
rclb
shll
ds
loop
jge
dec
je
sbb
jnp
push
repz
std
test
dec
in
movsb
push
xor
arpl
loopne
add
js
call
cmp
or
notl
lods
es
mov
xor
das
inc
jo
test
inc
cmp
in
sub
shrd
dec
add
adc
or
add
es
cmp
cmpsl
rcll
xchg
loopne
add
lods
add
mov
es
outsb
cmp
xchg
mov
nop
inc
sub
dec
fwait
mov
out
sub
in
add
adc
add
dec
ficompl
dec
sbb
js
lods
adc
inc
ret
cmp
sub
add
cmp
jne
clc
jnp
add
adc
push
xchg
int3
add
fnstsw
or
add
scas
cmpsb
enter
pop
pop
xchg
mov
adc
mov
add
push
jl
pop
sub
jne
movsl
xlat
dec
add
mov
mov
jae
add
fldenv
add
stc
add
push
dec
push
xchg
fmul
pop
aad
insb
push
in
outsl
jo
addps
sbb
outsb
mov
cli
cwtl
pop
dec
leave
jle
mov
and
add
push
imul
add
sbb
lods
out
aaa
rcll
cld
xchg
xor
xor
popf
xor
add
and
cld
ss
pop
add
or
jle
mov
es
repz
sbb
pusha
xchg
mov
cs
cmc
add
es
add
add
into
imul
fnstsw
fdivr
rorl
or
out
and
sub
lret
jnp
jb
inc
sub
inc
dec
out
sbb
add
cmp
mov
pop
cmp
push
lahf
test
cld
jmp
lods
push
xchg
jecxz
pop
fisubs
mov
mov
mov
iret
add
mov
scas
lcall
test
dec
mov
jno
pop
xchg
xchg
add
add
jge
add
shll
add
or
jne
ret
sarb
inc
dec
aad
imul
rcrb
add
jns
js
mov
rorl
jecxz
flds
mov
je
repnz
insb
push
mov
add
push
add
loopne
pusha
dec
add
je
lret
icebp
mov
cltd
das
loopne
mov
in
add
shlb
out
or
and
loop
add
mov
push
stos
add
or
arpl
jge
sti
xor
sbb
or
lret
hlt
mov
push
aas
addb
cli
push
push
add
add
inc
out
aam
stc
rcr
movsl
and
pop
aaa
aas
jl
dec
or
fwait
add
sti
dec
lahf
and
xchg
adcb
ja
sub
add
iret
in
sbb
cmp
sbb
sub
hlt
aam
movb
dec
lret
or
outsb
add
mov
push
mov
fucomp
dec
or
sbb
add
or
pop
loopne
cmc
jg
add
mov
add
add
shlb
arpl
int3
mov
mov
stos
push
xchg
add
test
lret
rolb
loope
pop
sbb
aam
sbbb
add
test
loope
lcall
inc
in
mov
stos
call
add
insl
xchg
scas
cmp
jne
fcomps
pop
add
mov
scas
add
jl
xor
repz
shl
cld
xor
pop
jle
or
add
aad
rol
adc
add
push
movsl
xor
inc
pop
push
jl
lcall
adcl
clc
js
mov
add
jo
ret
add
flds
pusha
cwtl
cld
lcall
movsb
aaa
add
push
daa
ret
push
test
push
lea
mov
pop
xor
jge
aas
jle
icebp
add
mov
les
inc
fs
inc
cmp
insl
push
xchg
pop
cmp
daa
fwait
jge
and
mov
ret
js
jb
sub
adc
leave
add
adc
sbb
dec
rcl
mov
adc
jne
fldt
roll
enter
jno
sbb
add
sub
sbb
or
push
es
mov
add
lahf
aaa
cmpsl
dec
fs
fildll
inc
dec
cmp
idivl
lock
div
aas
das
subl
out
pop
nop
jo
xchg
test
xchg
add
jbe
add
push
ret
push
mov
add
mov
and
add
add
jl,pn
popf
data16
insb
imul
add
les
sub
mov
xor
adc
sbb
cmp
lods
mov
pop
adc
adc
repnz
lock
les
imul
mov
add
jge
jb
add
out
fdivl
cmp
mov
mov
jbe
mov
cltd
push
push
cld
sbb
lret
xchg
add
add
loopne
push
or
push
xorl
add
mov
sub
push
clc
int
outsl
and
aas
nop
jmp
and
pop
data16
jle
push
mov
mov
lret
cmc
jecxz
pusha
push
cmp
push
add
test
out
pop
add
dec
lock
sub
repnz
sub
hlt
je
jb
xor
jp
cmp
dec
dec
sub
and
sub
adc
jecxz
add
add
pop
adc
or
add
mov
addr16
or
aad
ffree
adc
fs
inc
adc
or
int
sti
shr
pop
bound
push
in
add
adc
aas
push
iret
cmp
arpl
adc
fisttpl
xor
aad
push
stos
push
inc
lods
mov
add
int3
add
adcl
aaa
sub
fs
insl
push
fmuls
fistpl
adc
jge
jbe
movsl
cmp
outsl
push
add
repz
mov
add
and
and
rcl
pushf
aam
cmp
out
push
int3
in
pop
add
rclb
mov
leave
mov
nop
repnz
push
shll
ret
and
rorb
pop
cmpsb
or
aam
out
cmp
fsubrp
dec
mov
rorb
push
pop
outsl
aad
mov
add
or
and
pop
add
xor
dec
adc
mov
xchg
pop
xchg
mov
ret
mov
add
push
scas
sub
or
pop
and
insb
add
rol
push
emms
fistps
enter
pop
add
add
inc
adc
push
fsub
fldl
xchg
dec
hlt
ja
pop
mov
add
pop
push
xor
aam
adc
inc
insb
std
xor
dec
lret
mov
add
lds
icebp
int3
rorb
pop
fmulp
pushf
xchg
inc
pusha
jb
push
xor
pop
icebp
and
mov
or
push
pushl
mov
push
xchg
xchg
mov
stos
and
je
dec
test
lock
shlb
mov
add
add
push
sarb
xchg
pop
sbb
out
or
xchg
cmp
push
pop
sbb
jae
mov
adc
xchg
sti
add
rcrl
add
add
dec
call
fimull
stos
mov
xchg
and
jns
add
jbe
lea
pop
in
fisubl
scas
add
xchg
add
xor
sub
lret
sar
fucomi
jg,pn
add
push
xchg
in
iret
jne
add
lahf
fldl
aad
inc
in
mov
cmp
mov
adc
add
leave
xor
in
and
pop
fwait
pop
push
sub
xchg
mov
mov
and
add
xchg
call
cmp
outsl
aaa
or
les
scas
ret
gs
mov
jp
xchg
and
sub
xchg
add
addl
stc
xchg
mov
enter
mov
mov
fdivrs
adc
call
imul
test
rcll
subb
mov
pop
aas
sub
outsb
sbb
fadd
cmp
jo
loop
sbb
add
ljmp
add
rol
test
jmp
add
enter
sbb
in
nopl
mov
icebp
push
mov
pop
mov
scas
repz
mov
mov
test
sbb
add
xchg
inc
inc
fdivrs
popf
xor
push
add
pusha
dec
and
aas
mov
test
jnp
lea
jmp
add
aad
or
ss
sbb
or
leave
mov
and
enter
pusha
cmp
stc
ds
and
sub
movsl
int
pop
sarb
push
call
mov
lret
push
sbb
mov
jnp
add
pop
push
mov
and
and
mov
or
xchg
idivl
inc
paddsw
pop
sbb
pop
aas
out
xchg
arpl
scas
or
xchg
out
aam
mov
in
mov
push
add
add
add
xor
hlt
nop
add
dec
mov
in
or
mov
roll
mov
lret
mov
pop
jae
add
inc
jp
je
ja
sub
dec
mov
add
lcall
lret
inc
fiadds
stos
jmp
jns
add
dec
and
adc
add
into
or
mov
ds
cmp
pop
in
add
mov
push
add
add
ret
orb
call
add
add
jne
xchg
add
pop
inc
pop
inc
aam
xchg
int
and
aaa
mov
incb
pop
fadd
pop
les
push
loop
mov
ret
xchg
data16
lods
sbb
lret
dec
add
aas
ljmp
mov
jl
add
add
push
jae
loopne
cmp
inc
jmp
jbe
cli
and
fistpl
aad
int
jae
add
and
cmpsl
nop
jecxz
push
xor
rorb
popa
inc
dec
loopne
adc
ljmp
jbe
add
dec
clc
test
mov
dec
add
adc
cmp
mov
lea
addb
scas
leave
jae
mov
add
bound
jp
and
cmp
add
jmp
mov
call
out
push
rcrb
cs
xchg
mov
dec
call
in
mov
pop
xorb
and
out
add
adc
test
addl
sbb
xchg
sub
aaa
fwait
mov
sub
aad
xor
mov
xchg
cmp
push
sub
out
mov
dec
fdivl
mov
into
ret
test
sbb
loope
scas
jno
jo
add
push
neg
or
sti
jno
shlb
mov
addr16
shlb
test
sub
addb
adc
roll
mov
lods
add
leave
outsb
in
std
shlb
jae
outsl
sbb
xor
decb
add
add
cmp
push
lea
into
push
xorb
ljmp
sahf
lods
es
cmp
popf
es
push
mov
addl
add
rorb
fisubl
xchg
jg
mov
push
cmpsb
xchg
and
hlt
mov
aam
add
cld
call
add
adc
inc
xchg
jo
add
sti
dec
pop
aam
jns
add
fmuls
clc
and
and
pusha
pop
imul
adc
jb
add
pop
add
mov
mov
xchg
pop
das
xor
mov
or
int3
dec
lahf
cmp
xchg
sti
insl
jne
add
inc
add
xchg
call
les
mov
jnp
inc
add
rorl
jns
mov
imul
out
mov
add
aam
push
add
or
lds
jne
pop
and
cmp
sbb
shrl
jo
aas
nop
cmp
sub
nop
add
clc
cmpsl
push
repnz
lret
sub
push
enter
xor
cmp
inc
add
lcall
cltd
insl
incb
push
pop
mov
jg
mov
push
mov
xchg
in
or
pop
adc
mov
leave
es
stos
adc
add
ljmp
xchg
adc
cld
add
es
push
inc
push
stc
movsl
mov
loopne
test
cmc
add
xor
roll
xchg
outsb
jb
mov
adc
and
call
insl
add
out
mov
xlat
insb
incb
push
xorl
push
bound
xchg
pop
lds
mov
mov
nop
pop
inc
push
pop
hlt
addr16
je
sub
push
lret
sbb
xchg
out
mov
mov
jmp
faddp
dec
pushl
pusha
sbb
jb
add
xchg
mov
mov
fiaddl
out
in
aas
shlb
fidivrl
ret
cmp
add
out
loop
dec
or
add
sti
bound
es
psubsw
dec
mov
pop
add
or
or
adc
add
dec
xchg
push
or
sbb
mov
je
into
fdivl
loopne
insl
rorb
sbb
or
addb
iret
push
ljmp
mov
cltd
jo
mov
sub
and
iret
jmp
cwtl
outsb
add
ja
jge
jne
add
push
repnz
mov
inc
addb
add
cwtl
adc
mov
xorb
fsubr
xor
jecxz
mov
out
bnd
pop
cwtl
push
fcmovne
jne
or
jg
leave
sbb
pop
fbld
out
cmp
add
sub
adc
xor
xchg
test
xlat
pop
push
rolb
fisttpl
cld
arpl
push
add
jnp
ds
mov
inc
mov
adc
lods
stos
bound
xchg
out
nop
xchg
movsb
jne
lahf
dec
scas
in
clc
shlb
mov
xor
add
aaa
movsb
push
outsb
and
add
cmp
shrb
push
sub
mov
add
stc
aam
pop
and
jge
adc
xor
jne
mov
mov
mov
std
sbb
mov
rclb
add
lock
fstps
add
lds
add
push
dec
or
daa
mov
loope
jle
fsubr
or
xchg
mov
cmp
popa
jge
pop
subl
cwtl
or
dec
sbb
push
dec
dec
mov
mov
call
add
pop
push
ljmp
mov
add
ds
enter
leave
testl
adc
sbb
inc
fwait
add
addr16
jmp
cs
sbb
scas
sub
add
dec
notl
xor
js
sbbb
cltd
ds
jnp
jp
jg
add
lret
addl
jne
add
mov
repz
push
add
dec
pushf
add
mov
mov
push
pop
test
add
dec
scas
pushf
adc
add
das
mov
outsl
int
out
mov
inc
xchg
adc
fistps
xor
adc
jnp
push
jg
xchg
pop
add
out
xlat
mov
jge
insl
out
mov
add
jecxz
xchg
test
sbb
fidivrs
jbe
add
and
add
sbb
clc
outsl
aas
push
fists
xor
rorl
xor
sbb
ret
add
adc
push
cmp
add
mov
inc
adc
lret
bound
push
sti
or
cmc
mov
fldt
pop
dec
pop
sbb
lock
mov
repnz
add
aad
sti
fs
das
or
out
inc
sarb
arpl
jns
add
les
jnp
mov
xchg
sbb
adc
pop
add
and
test
movzwl
mov
push
cmpsb
std
cltd
add
stc
pop
jo
repz
es
mov
sbb
add
sub
fisubrl
iret
xlat
das
xchg
mov
add
mov
xor
add
imul
fimull
jp
xor
inc
pop
dec
ljmp
rcrb
add
fadd
xchg
xchg
and
inc
push
cmp
leave
cltd
imul
sbb
sub
in
cmp
pop
xchg
add
cmp
add
cmpsl
push
imul
decb
enter
cmc
or
rorl
pushl
ds
cmp
push
mov
dec
sub
cmp
or
add
adc
sbb
int
pop
dec
mov
jne
add
ljmp
mov
adc
jl
add
xchg
push
imul
add
clc
loop
mov
pop
dec
outsb
movsl
cmpl
mov
adc
cmp
mov
dec
mov
outsl
pop
cmp
and
add
lea
rorb
inc
add
inc
pop
sbb
add
mov
incb
add
pop
jmp
loop
add
mov
cmp
pop
sub
hlt
cmp
out
pop
cmpsl
dec
push
sbb
pusha
mov
test
pusha
outsl
adcb
push
add
inc
or
add
xchg
push
dec
iret
mov
movsl
mov
je
pop
shrb
cmpsb
push
sub
add
pop
xor
push
insb
mov
xchg
xor
outsb
adc
pop
cld
lods
mov
inc
std
add
insl
mov
add
fs
fidivl
add
cmp
cmpsl
add
jb,pt
adc
add
rcll
into
inc
leave
cmc
ss
adc
addb
mov
mov
xchg
rcrb
sbb
pusha
das
sbb
mov
aad
jecxz
xlat
dec
xor
cmc
sub
sub
jo
pusha
leave
push
xbegin
sahf
mov
cwtl
mov
or
ss
inc
pop
gs
xchg
adc
dec
pusha
pusha
js
rol
arpl
sub
and
push
ret
dec
pushf
inc
adc
mov
test
adc
out
push
cs
mov
add
dec
iret
pop
jae
mov
into
lcall
add
imul
add
ja
xchg
mov
push
pop
xchg
aad
xor
mov
jo
pop
sub
call
sub
mov
jge
ret
adc
add
imul
ret
mov
not
aas
jecxz
and
jge
dec
sti
add
imul
cmc
add
test
xchg
dec
movsl
sbb
pop
adcb
add
daa
jbe
cmp
test
imul
mov
sub
jmp
insb
sbb
mov
fmuls
sbb
rclb
dec
addb
pop
aam
fisttpll
sbb
ds
fmuls
xor
in
add
pop
scas
or
or
lock
or
std
mov
xchg
pop
js
push
scas
add
inc
nop
cltd
inc
std
fimuls
add
mov
pushf
out
aaa
add
aas
mov
loop
mov
xlat
push
fimuls
sbb
or
dec
cltd
cld
cmp
mov
icebp
push
sub
nop
jl
or
outsb
fs
aam
fists
xlat
cltd
je
cmp
out
daa
call
or
loopne
cmp
mov
jno
mov
pusha
xchg
or
int
arpl
lret
xorb
add
add
add
nop
lret
add
push
jp
jle
cmp
pushf
pop
xor
loopne
jb
in
popf
cld
int3
fmuls
or
fxch
or
out
cmp
test
rcrb
xor
movsl
dec
xlat
push
jecxz
mov
iret
mov
fistps
jnp
adc
pop
cli
xor
pop
ds
test
adc
aaa
push
sbb
mov
xchg
push
fsubrl
add
add
out
sbb
cmp
lahf
dec
add
scas
cmp
pop
pusha
leave
dec
sti
adc
mov
aas
jl
add
fiadds
add
lcall
imul
pop
loope
and
cmp
add
sub
fwait
in
loopne
sub
popa
lcall
inc
push
xorl
sahf
adcl
shrl
sbb
inc
inc
cwtl
mov
and
jno
push
test
push
scas
inc
and
and
sub
cmp
ljmp
out
add
mov
xor
loope
pop
cmp
push
push
mov
inc
and
xchg
mov
stos
and
xlat
cld
lock
fnstsw
push
cli
xor
push
fnstenv
pusha
pop
subb
movsl
out
or
sub
sub
push
fldl
sbb
sarl
in
push
jne
rcpps
pusha
cmp
or
sahf
movsl
cmpsb
test
mov
push
xchg
add
mov
mov
pop
adc
lcall
add
int3
pop
inc
or
sbb
push
enter
mov
lods
sbb
hlt
push
roll
pop
rcrb
xor
testb
int3
push
mov
push
mov
or
ret
cmpsl
fdivp
add
insl
pop
cmp
lcall
mov
mov
out
shlb
sarb
cmp
aad
loopne
pop
xchg
movsl
jae
cmpsb
fwait
loopne
sub
sti
cmc
in
stc
in
movb
xor
fbstp
add
mov
into
xor
adc
adc
xchg
xorl
lcall
mov
add
int
stos
pop
mov
or
xchg
addb
sbb
es
ret
lods
mov
decb
loop
push
into
aas
mov
outsb
xchg
add
rol
add
mov
sub
sbb
iret
jo
mov
jge
sbb
xor
mov
sub
lret
or
jg
mov
cli
add
mov
int3
mov
out
xchg
rcl
fildl
jae
mov
push
xchg
add
jle
shl
dec
dec
stos
ss
daa
mov
mov
cli
add
or
in
jl
es
sub
add
add
push
test
sub
stc
sub
push
xchg
loopne
pop
add
lret
mov
mov
cmpsl
das
nop
add
adc
out
js
add
cmp
pusha
out
sub
sbb
das
xchg
inc
mov
test
push
add
xorb
test
adc
lods
add
or
inc
cli
lahf
cmpsb
xor
sbb
add
jnp
dec
adc
hlt
fldl
in
jecxz
insl
imul
mov
xchg
push
cmovae
testl
dec
push
aam
push
xchg
pop
jp
and
jmp
lods
arpl
std
test
popl
jle
push
arpl
add
fldenv
mov
add
dec
dec
xchg
jne
jbe
jmp
add
lcall
cmp
cltd
jmp
sbb
jne
add
xor
cmp
adc
push
mov
or
imul
add
lea
xchg
jge
sub
sbb
std
repnz
les
test
pop
pop
test
mov
iret
mov
sbb
fidivrs
mov
push
or
jno
nop
inc
xlat
add
xor
notb
or
out
lods
jbe
pop
adc
and
cltd
jge
add
adc
xchg
std
insb
cld
pop
out
xor
fs
popf
and
mov
rorb
dec
pop
add
outsl
dec
sbbb
xor
lahf
add
push
stos
movsl
mov
faddp
sbb
hlt
shrb
sub
add
outsl
imul
pop
add
mov
mov
gs
jecxz
add
es
sbb
mov
sub
andb
push
sbb
js
add
in
dec
xchg
jecxz
add
add
mov
jp
cmp
inc
test
addb
andb
js
pushf
out
in
dec
shrb
inc
mov
fwait
add
pop
mov
add
add
jo
ja
add
cmp
je
add
sub
xor
in
xchg
push
pop
jecxz
andb
mov
sbb
mov
dec
mov
push
out
or
dec
and
scas
dec
sub
lahf
mov
pop
mov
and
cmpsb
add
pusha
add
mov
cmp
pop
insl
fidivl
sbb
xor
add
inc
test
mov
daa
add
and
scas
sub
loope
pusha
inc
cmp
jg
sbb
adc
clc
jmp
and
lock
jl
and
cli
nop
xor
or
sub
outsl
lahf
ret
sub
iret
or
daa
jmp
push
mov
adc
add
notb
es
aad
jb
xchg
in
insl
add
stos
lret
ss
hlt
aas
pop
dec
fstl
add
pop
nop
cs
add
jl
push
push
loope
out
arpl
ljmp
clc
add
xor
jb
add
push
loopne
add
sbb
ds
adc
add
xchg
out
xchg
push
cmp
mull
mov
xchg
add
int3
adc
loopne
mov
adc
add
cmp
jnp
std
loope
rolb
jo
push
fidivs
lea
inc
or
xchg
dec
mov
adc
push
ja
pushf
xor
repz
mov
es
adc
andl
push
add
sub
ljmp
enter
add
mov
negb
clc
mov
stos
add
incb
add
cmovno
in
add
fprem
aaa
xor
nop
add
dec
mov
jl
pop
test
cmp
ds
repnz
es
gs
add
cmpl
stc
sbb
aas
add
fs
push
push
incl
add
cmp
xchg
add
gs
add
negl
sub
adc
cmc
testb
and
push
and
pusha
adc
outsl
adc
in
notb
adc
adc
and
adc
sub
adc
test
adc
jp
push
popa
sub
pop
push
add
insl
adc
arpl
and
jge
or
dec
xchg
push
ret
out
and
in
loopne
add
out
adc
add
lds
add
xchg
shl
mov
pop
mov
es
push
and
imul
push
jns
sub
push
scas
or
add
cmp
hlt
in
add
fstpl
add
cs
pop
or
or
pusha
dec
add
cwtl
out
and
ss
pop
pop
ja
add
and
movsb
pop
xchg
mov
imul
dec
add
sub
add
loopne
fcmovbe
clc
xor
mov
pop
shl
out
adc
jns
aam
pcmpeqw
mov
push
hlt
pop
je
inc
mov
test
scas
call
popf
clc
mov
mov
or
loop
pop
add
pusha
das
push
clc
push
nop
lock
add
sbb
adc
mov
loopne
rolb
cli
lock
mov
inc
add
cmpsb
dec
das
jmp
in
rol
and
push
or
jecxz
pop
sub
pop
hlt
push
cltd
xor
imul
inc
inc
pop
vpperm
pushf
lcall
cmp
fmul
aam
inc
add
les
sarl
xchg
mov
mov
test
icebp
sbb
mov
outsb
rolb
mov
xchg
cld
mov
add
stc
into
sbb
test
pop
faddl
or
add
addr16
sbb
fsubs
subb
cmp
or
fsubrl
out
add
imul
fwait
adc
int
jecxz
rorl
add
xchg
pusha
pop
push
icebp
and
add
or
add
xchg
mov
ja
lods
les
and
cmc
std
add
imul
rcrl
mov
or
out
add
mov
lret
jb
pop
mov
insb
icebp
pop
pushf
jmp
shll
les
sti
jg
mov
jne
mov
inc
js
sub
xchg
add
out
stc
adc
fwait
addr16
pushf
das
mov
add
push
add
sub
xor
add
jecxz
add
js
xor
and
popf
notb
jno
insl
stos
scas
jb
push
call
lea
ljmp
dec
or
jne
out
stc
cmp
lods
push
out
mov
loopne
inc
cld
xchg
out
lds
inc
jb
movsb
into
add
roll
xchg
repz
mov
add
sbb
sbb
jp
sbbl
add
xchg
add
add
inc
jg
sub
adc
mov
paddusw
getsec
inc
insb
in
add
std
xor
jl
adc
or
push
sbb
jg
loop
in
cld
add
sub
les
filds
adc
sbbb
and
adc
js
into
add
or
add
ss
mov
xlat
pop
and
pop
out
lock
jno
pop
test
int3
jp
mov
add
dec
push
pop
cmp
add
cli
lea
sti
xlat
xor
mov
pop
jecxz
shl
dec
pop
lret
jbe
adc
xor
rolb
loopne
add
jmp
pop
xchg
shl
jmp
push
add
stos
add
add
rcr
jae
add
shrl
mov
out
add
pop
mov
pop
fmul
xor
lds
add
jne
and
jo
sbb
jbe
fadds
xorb
inc
sbb
les
sub
je
jl
xor
cmc
fidivs
mov
cmp
pop
test
bound
cmc
rolb
cli
adc
dec
add
add
pop
xchg
lret
sbbl
xor
and
inc
or
mov
rcll
adc
cmp
add
int
pop
push
test
cwtl
popf
sarl
test
xchg
dec
jge
mov
push
stos
ret
pop
adc
cli
xchg
fsubrl
stos
sti
mov
fidivrl
lahf
xor
arpl
rcrl
stc
push
add
ficompl
insl
adc
sbb
sub
jl
aad
outsl
je
in
adc
add
sbb
lea
lds
sub
dec
adc
mov
nop
into
jo
rolb
int3
fidivl
add
ret
out
cwtl
int3
add
lcall
sbb
ret
cmpb
js
add
addb
add
mov
gs
ljmp
pusha
add
pusha
xor
add
enter
dec
mov
add
mov
add
and
fisttps
pop
jnp
jo
push
call
mov
repnz
and
pop
nop
aas
add
adc
pop
mov
add
pop
enter
dec
sarb
xchg
mov
mov
push
lcall
lods
stc
mov
in
sbb
add
jle
std
jg
data16
addb
cli
movsl
test
stc
pushf
cmpsl
and
jo
mov
adc
lahf
dec
xchg
add
movsl
inc
sbb
popa
add
xchg
add
test
mov
cs
out
pop
add
dec
lahf
fimuls
and
cmp
cmp
add
in
lea
jno,pn
mov
xor
mov
aas
inc
add
dec
fsubrl
dec
mov
dec
push
add
sub
pop
mov
dec
test
dec
cmp
lods
mov
or
add
fdivs
nop
add
xchg
push
rclb
mov
jnp,pn
cmp
ffree
rcl
addr16
insl
dec
or
cmpsl
add
xchg
sub
push
sub
in
aaa
or
clc
cmc
push
jmp
add
in
popa
push
loope
shrl
add
xchg
add
insb
cmpsl
sti
out
xchg
lods
pop
shrl
push
aad
sub
sbb
cs
mov
fsub
cld
adc
cld
iret
pop
add
out
add
adc
fs
cmp
lock
jns
setg
cli
loopne
mov
movsl
pop
js
int
cwtl
xchg
and
pop
sbb
iret
call
test
add
xchg
pushf
adc
bound
add
fcomps
cmp
push
push
add
push
repz
call
cmp
dec
pop
cs
pop
push
jno
sub
cmp
cwtl
faddl
add
mov
adc
call
jno
inc
cmp
sbb
push
negb
add
shlb
inc
aaa
rcrl
shll
add
popa
lock
test
add
and
filds
mov
add
popf
sarb
mov
dec
pop
sahf
aad
push
adc
nop
mov
pop
mov
add
loopne
enter
adc
jbe
dec
and
mov
jg
add
ret
sub
add
mov
aam
xchg
xor
jb
inc
movsl
subb
xchg
test
jmp
jg
std
scas
cmpsb
add
fidivrl
and
xor
add
mov
cmc
add
lret
mov
aaa
jb
cmpsl
pop
rolb
cwtl
xor
das
xchg
ret
jbe
lods
fs
add
xchg
xor
sub
repnz
add
and
popa
fs
es
add
cmpsb
insb
xor
or
add
shll
jo
mov
jo
adc
jmp
call
cmp
lds
addl
inc
mov
or
sbb
xor
sub
mov
test
ror
xor
imul
add
pop
ljmp
add
sbb
mov
add
inc
adc
add
jae
push
mov
cmp
pop
cmp
pop
xor
fistpl
lods
mov
push
ds
sbb
push
call
push
adc
shl
outsb
inc
add
xor
cli
cmp
add
cmpsb
xor
pop
mov
rol
push
sahf
repz
jns
cwtl
xor
lds
loopne
adc
shl
je
add
pop
sbb
or
inc
or
and
mov
ds
loopne
jecxz
pop
add
ja
rolb
sti
loope
test
cmc
in
pop
add
stos
push
in
push
aaa
xchg
add
mov
pop
hlt
cmpsl
xor
out
iret
add
sub
jbe
test
add
fs
dec
mov
enter
cwtl
cmp
ja
inc
in
fisubs
fimull
add
jecxz
xchg
dec
popf
addl
fsqrt
dec
push
insl
repz
shrl
add
test
mov
cmp
les
cmp
popa
jo
verr
add
out
xchg
divl
and
adc
pop
test
cld
sbb
scas
data16
and
push
push
jmp
je
cmp
out
ja
testl
xor
cli
pmulhw
sub
mov
cmpsb
adc
push
fbstp
outsl
loopne
addr16
adc
add
subb
and
mov
or
daa
clc
aas
out
popa
add
push
jb
inc
fildl
dec
dec
pusha
pop
and
mov
nop
cli
mov
xchg
pushf
sbb
mov
mov
fadds
out
xchg
stos
movsl
or
daa
add
add
arpl
pop
movsb
pusha
movsb
aad
pop
stos
mov
inc
mov
jne
fstl
add
fiadds
cmp
sub
movsb
jecxz
adc
push
cmpsl
cmp
push
leave
bound
cmp
cli
loop
sbb
add
pop
fiaddl
add
cmp
adc
adcb
cmp
push
inc
into
or
pop
stos
jbe
and
in
addr16
sbb
mov
or
mov
adc
outsb
lret
je
fldl
add
das
in
mov
add
adc
jns
dec
push
pusha
pop
fadds
sahf
into
push
pop
stc
das
xor
xor
inc
not
js
xchg
jb
add
push
bswap
mov
sti
movsl
out
add
sarl
add
adc
ret
in
push
test
adc
jl
push
aam
sub
rolb
in
es
dec
add
ret
push
mov
cmp
xchg
outsb
rcl
dec
outsl
add
mov
add
pusha
xchg
cmp
mov
add
mov
aaa
loope
pop
cmpb
fisubrs
cmp
add
lret
or
and
enter
mov
lea
or
in
mov
mov
fdivr
pusha
push
fisubs
add
mov
loopne
scas
jno
add
enter
call
cld
filds
mov
xchg
xchg
push
clc
mov
cmp
push
out
shl
mov
arpl
or
lcall
test
push
dec
pop
jae
xchg
cmp
sti
jecxz
dec
pusha
add
add
subb
push
je
add
and
inc
add
push
or
dec
scas
xchg
jno
or
mov
add
pushf
aas
adc
jmp
sub
add
or
pop
scas
adc
dec
pop
lods
add
mov
cwtl
dec
add
mov
xor
push
in
push
add
mov
and
movsb
add
mov
mov
add
cmpsb
dec
sub
xchg
clc
pop
loope
jo
out
popf
xchg
inc
daa
add
notb
mov
mov
jnp
les
fsubl
add
sarl
xchg
pop
xor
movl
test
pop
call
dec
mov
jo
cmp
fnsave
sub
or
dec
divb
dec
xor
sar
movsl
ret
sbb
imul
push
shl
add
rcrb
out
loopne
jg
cmp
xor
mov
subb
repnz
mov
addb
inc
mov
or
xor
xchg
push
sub
lods
inc
movsb
jo
add
data16
daa
push
add
movb
test
cld
add
push
or
shl
cmpsl
ljmp
imul
aaa
jmp
idiv
add
pusha
pop
insl
dec
andl
adc
shr
sar
fnstsw
test
in
add
xor
pop
inc
add
adc
movsb
dec
add
mov
push
pop
cmc
cmp
addb
jo
lret
addr16
addl
jns
add
std
clc
pop
sub
aas
cmc
xchg
cmp
mulb
popa
aaa
add
in
cmp
and
loopne
leave
pushf
xor
stc
cmpsl
ja
rcrl
xorb
sbb
jg
mov
ret
xchg
out
ud1
cltd
imul
pop
cmp
mov
daa
lods
push
fildl
punpckhwd
data16
pusha
mov
and
rcrb
xor
cmpsl
add
std
jmp
cld
add
pop
stc
pop
inc
sbb
test
adc
leave
add
add
xor
add
movsb
mov
add
and
cmp
mov
jecxz
in
push
mov
xor
leave
push
out
add
and
aas
cltd
loop
inc
cmp
sub
hlt
jl
xor
pop
stos
sub
pop
addb
mov
cmp
ret
mov
dec
and
add
iret
adc
sub
dec
rolb
xor
in
js
aam
fiadds
fdivrs
pop
cmp
imul
outsb
mov
out
xchg
jge
push
pop
mov
cltd
in
jae
push
mov
cmpl
jp
mov
push
cmpb
aad
aaa
enter
and
inc
rolb
lods
repz
cmpsb
jge
mov
mov
cmpsl
adcb
or
mov
insb
je
add
xchg
push
adc
mov
add
push
jno
and
sub
imul
pop
add
jno
nop
mov
shl
lods
push
push
mov
fsubrp
push
and
clc
push
pop
or
and
int
and
js
add
cmc
push
cmpsb
or
or
out
out
data16
aas
jne
add
leave
iret
push
or
pop
add
sti
in
xor
pop
add
inc
rorw
sbb
dec
xor
or
fwait
push
jg
das
cld
add
pop
sub
cmp
adc
fcoms
call
in
aad
push
shr
jnp
loopne
pop
push
pop
push
mov
add
mov
ror
mov
lods
add
data16
and
add
and
lods
imul
sub
pop
loope
pop
inc
sahf
clc
cmpsl
jp
sbb
lock
jmp
lods
scas
mov
insl
mov
or
lods
jno
add
fildl
addl
mov
pop
ja
lret
leave
add
mov
push
mov
xchg
and
fdivrl
sub
lahf
cmp
iret
xchg
pop
sbb
pop
adc
inc
ljmp
popl
sub
cmp
mov
fmuls
mov
dec
jb
int3
jne
dec
pop
add
cli
lahf
push
ds
jge
adc
sbb
mov
or
push
movaps
xlat
sbbb
mov
push
and
shll
and
or
xchg
mov
ja
add
outsb
gs
cmp
pop
shlb
jmp
sbb
sti
add
sbb
ret
lahf
ret
jb
or
insb
popf
jno
sbb
adc
add
popa
dec
push
movsl
inc
jecxz
add
or
les
cwtl
insb
jle
add
inc
mov
lret
iret
sbbb
loopne
fisttpl
jbe
push
jecxz
sti
out
push
mov
aad
pushf
hlt
xor
and
dec
cmp
test
push
push
push
cmpsl
jmp
and
sub
push
ret
sub
mov
rolb
mov
lahf
xor
jmp
mov
adc
mov
cmp
pop
aaa
mov
aas
jge
or
rcrl
cld
fnstenv
shrb
out
add
lods
inc
adc
mov
mov
dec
xchg
add
fdivl
cmp
xchg
mov
aas
pusha
call
out
loopne
xchg
xor
and
xor
push
in
jecxz
ljmp
insl
pop
fisubl
add
push
ficomps
adc
enter
jp
cmpsl
jo
ficoml
push
in
mov
in
shl
les
int3
xchg
mov
adc
in
mov
cmp
leave
lahf
fsubrl
push
add
sahf
sbb
scas
lcall
test
aas
add
xchg
cmp
inc
cmp
jne
xor
sbb
sub
sbb
or
mov
jnp
movsb
bound
xchg
jns
add
sbb
out
xchg
pop
push
mov
pop
js
add
mov
add
add
lock
loop
and
mov
addr16
aad
add
push
into
dec
dec
inc
test
xchg
in
xchg
test
add
out
and
add
outsb
int3
inc
shll
les
fmul
stos
fdivs
test
scas
xor
push
xchg
pop
hlt
inc
pop
pop
jns
popf
cmp
ret
add
enter
add
add
ds
jecxz
aam
dec
loopne
and
incb
pop
popa
mov
int3
jp
adc
jg
jne
xlat
mov
inc
ja
mov
aad
xor
into
add
popa
ror
or
enter
xlat
mov
inc
add
inc
daa
fdivs
popa
fdivs
testb
or
xor
repnz
jmp
and
loop
jmp
rolb
xchg
shl
orl
loope
dec
adc
iret
or
jnp
in
add
in
sbb
cmc
dec
add
icebp
cwtl
andb
pushf
dec
in
sub
aad
lds
cld
lret
mov
add
push
ficoml
mov
fmuls
stos
ret
add
or
or
mov
fldcw
inc
pop
ret
dec
out
add
test
mov
xchg
push
data16
aam
lcall
test
mov
and
bound
shrb
inc
insl
add
test
pop
loopne
add
ja
adc
cmpsl
in
fucomp
pop
je
add
jl
out
sub
or
add
and
adc
push
sbb
inc
xor
gs
mov
inc
scas
mov
and
aaa
push
in
or
push
xor
loopne
stc
sbb
add
rolb
xor
mov
fstps
mov
clc
dec
lahf
arpl
add
cmpsb
nop
pushf
int3
shlb
pop
inc
jge
add
push
dec
mov
inc
adc
mov
add
jmp
enter
adc
xor
mull
mov
les
pop
rol
jecxz
and
dec
rolb
jne
mov
add
jge
add
add
add
scas
popf
dec
outsl
jo
mov
xchg
xchg
pop
imul
mov
fsts
stos
bound
aaa
mov
inc
dec
dec
je
jmp
pushf
testl
shrl
pop
adc
std
xchg
jnp
jno,pt
add
xchg
push
lret
dec
cli
and
and
cltd
sbb
aam
add
mov
enter
mov
in
fstps
add
cmp
sldt
lods
call
sub
rcl
push
pop
jmp
push
es
or
jmp
cmp
mov
dec
arpl
call
mov
in
popf
call
add
or
testl
stc
sbbl
decb
mov
dec
call
das
cwtl
cmpsb
ret
mov
adc
add
mov
dec
add
jp
lock
cld
jmp
and
add
sar
cmpsb
sbb
out
jecxz
mov
out
pop
add
nop
xchg
lea
pop
jae
add
test
mov
shlb
or
dec
dec
add
cmc
or
inc
shrd
sbb
loop
add
aas
jg
add
cli
movsl
xchg
faddl
idivl
mov
movl
setne
test
and
add
leave
fucom
idivl
add
out
icebp
dec
push
inc
loopne
hlt
and
cmp
pusha
fs
icebp
js
add
outsb
mov
mov
clc
rcll
insb
imul
movl
mov
xor
in
int
stc
sbbb
xchg
jge
rcrb
mov
loop
icebp
sbb
pop
adc
aad
insb
jmp
cmpsb
xchg
jle
push
ja
cld
pop
inc
xor
ror
push
xor
cli
orb
fs
popf
and
or
js
sbb
xchg
sbb
add
cmp
lret
gs
cli
or
add
push
cmp
pop
mov
lahf
sbb
pop
mov
mov
add
jl
lret
sbb
inc
add
lret
add
popa
inc
rol
mov
stos
mov
and
sbb
adc
rclb
ret
lds
je
lret
mov
push
xchg
inc
jl
adc
sub
lock
push
mov
add
push
loopne
add
roll
test
cmp
cli
xchg
loopne
sarb
cmpl
add
push
lea
add
mov
mov
hlt
clc
stos
adc
sbb
ds
stos
mov
add
jl
jp
mov
int
push
aaa
mov
pop
mov
roll
mov
add
aam
js
out
repnz
rolb
inc
mov
cmp
and
outsb
nop
fdiv
dec
adc
or
ret
inc
mov
push
test
lock
xchg
sbb
ret
addr16
das
or
inc
add
inc
outsb
and
push
add
out
push
xor
jae
test
mov
fiadds
and
out
repz
jbe
cmp
lods
es
icebp
aad
add
push
sub
enter
mov
push
in
hlt
add
mov
fdivl
call
xorb
push
jg
emms
call
mov
xchg
jns
fsubrp
js
scas
loope
flds
or
fstpt
in
add
push
ljmp
dec
cld
imul
sub
mov
psubsb
lret
xor
add
scas
jns
iret
adc
int3
and
push
sub
dec
and
and
out
cmpsl
iret
pop
cmp
inc
fsubrs
mov
add
xchg
lcall
mov
nop
add
pop
adc
pop
mov
add
mov
sti
xchg
jo
mov
shl
test
inc
add
mov
adc
in
inc
add
adc
lods
adc
xchg
add
ljmp
cmp
pop
pop
fimull
cs
pop
mov
int
inc
adc
add
dec
orb
push
xorb
xor
push
pop
iret
cmp
sub
add
pop
xchg
push
imul
sub
ret
sti
incb
push
cmpsl
pusha
or
sub
jb
jns
or
and
insl
pop
and
add
sbb
cmpsl
bts
stos
lcall
in
jae
andl
xorb
scas
pop
sarl
cltd
pop
xchg
push
add
hlt
repnz
cmp
aam
push
add
jge
adc
inc
mov
pop
or
rclb
lret
fwait
scas
cmp
pusha
faddp
je
cmpsl
jo
sarb
push
lods
cmpsb
add
cmp
lret
aam
mov
movsb
leave
sarb
shrb
add
rcl
add
outsb
cwtl
mov
push
sub
mov
daa
inc
dec
add
dec
cmp
ljmp
and
sbb
pusha
or
jge
xchg
add
xor
filds
rcrb
movsl
add
and
add
xchg
xor
inc
jno
add
mov
loopne
cmp
xchg
add
lock
dec
rorb
add
test
fistl
js
incb
push
in
adc
add
jp
cmp
adc
sub
and
xchg
test
add
lock
jae
jo
mov
sti
inc
xor
stos
mov
cmpsl
cltd
cwtl
xor
movsb
stc
xchg
clc
scas
inc
add
dec
fisttps
sbb
sub
mov
add
pop
mov
dec
lods
xchg
mov
adc
scas
xchg
jbe
add
push
and
mov
pop
sbb
push
ss
into
sbb
push
in
and
add
jo
mov
add
test
cld
cmp
sub
sub
in
and
clc
fbstp
fs
dec
add
mov
hlt
add
inc
lds
iret
jno
add
add
mov
cld
pop
adc
lret
hlt
sub
roll
add
out
add
push
add
repz
xlat
shlb
nop
inc
bts
push
aad
push
test
leave
add
and
add
decl
add
pop
jae
mov
aam
add
mov
xor
adc
lock
in
xor
lret
sbb
push
lret
addr16
lock
leave
insl
inc
sarb
xchg
pusha
icebp
or
push
lea
inc
adc
cmp
jl
fdivs
xor
mov
sbb
pop
sub
orb
out
imul
jae
je
insb
dec
pop
rcrb
pop
xlat
xor
pusha
pop
clc
cld
andl
cli
push
push
cmpsb
shlb
test
xchg
xor
add
test
addl
pop
add
jl
imul
shlb
mov
icebp
out
rcr
inc
rorb
push
sub
add
gs
cmpsb
mov
lock
outsl
cli
adcl
or
arpl
add
shl
adc
popa
cltd
xchg
lahf
add
clc
mov
loope
jnp
lock
add
xchg
mov
int3
fidivs
jo
out
mov
xchg
sub
adc
sub
xchg
adc
jle
fs
fnsave
add
jno
aad
xchg
mov
jb
add
or
int
add
or
sub
in
cmp
enter
jnp
dec
out
mov
sbb
std
xor
nop
insb
add
cs
rcll
xchg
dec
mov
adc
and
push
mov
sub
and
mov
pushf
lds
or
shl
xchg
fcoml
add
pop
xchg
sbb
cmp
add
scas
mov
lret
out
pusha
sub
adc
add
hlt
sub
add
jmp
push
mov
fwait
add
imul
mov
jae
iret
lahf
pop
outsb
add
mov
inc
dec
loopne
pop
add
icebp
fisubl
inc
add
notb
js
mov
andb
imul
jb
test
sahf
pop
xchg
cmp
dec
aad
push
jne
dec
push
and
fwait
lods
sbb
fildl
xlat
aam
mov
out
insb
dec
sahf
add
push
sbb
xchg
sub
xchg
divb
push
push
sub
jmp
xchg
dec
mov
sbb
add
xchg
mov
pusha
mov
stc
jge
add
sahf
cmp
loop
jmp
mov
insl
xchg
dec
mov
mov
add
jecxz
sbb
les
movsbl
out
mov
add
and
js
pop
loop
rcr
call
sbb
outsb
inc
and
dec
mov
sarl
call
loope
xchg
jmp
cmpsb
jle
and
push
movsl
test
add
outsb
adc
jno
push
cmp
fiadds
sbb
sti
test
mov
pop
sbb
data16
mov
sub
divb
testl
push
in
mov
notb
pop
mov
aad
ror
inc
enter
in
loop
mov
fs
int3
mov
rorb
enter
aad
jo
jns,pn
adc
mov
sub
repz
xor
cmp
dec
and
das
mov
leave
out
add
or
xchg
mov
loopne
aad
push
sbb
loope
xor
ljmp
mov
dec
mov
adc
sub
mov
sbb
xchg
jae
xor
pop
mov
addb
fwait
ds
pusha
cmp
mov
stos
cwtl
mov
call
add
cmpsb
test
sbb
std
in
adc
jbe
mov
sub
jno
insb
xchg
mov
sbb
addr16
adc
mov
dec
lods
add
push
push
mov
outsb
fldenv
neg
sahf
lock
sub
xor
add
das
mov
mov
call
gs
je
add
inc
mov
clc
pop
fmuls
dec
psubd
insl
adc
xchg
call
push
cli
sahf
add
fmuls
inc
add
in
jo
fwait
mov
cmp
jnp
repz
add
dec
xor
shlb
xor
mov
pop
pop
and
adc
jne
aas
add
cmpsl
roll
mov
xor
mov
cmpsb
mov
pop
cmp
fcomip
loopne
inc
or
add
data16
add
jo
nop
pop
orb
int
push
add
dec
mov
sub
enter
addb
std
out
jp
repnz
aam
xchg
imulb
out
mov
ror
push
inc
aam
and
outsb
enter
sub
jmp
mov
sub
pop
and
pop
add
xchg
aad
movsb
les
add
je
mov
cmp
pop
insl
jecxz
or
xchg
loopne
pop
xchg
loopne
dec
pop
pop
xor
sbb
scas
push
dec
xor
add
inc
std
jp
inc
pusha
sti
sub
push
stc
repnz
mov
push
addr16
pop
ret
pushf
mov
push
mov
inc
xchg
adc
ja
xchg
lods
bswap
inc
sbb
roll
jl
aad
stc
pinsrw
xlat
ret
and
or
pop
mov
rcll
testb
add
dec
in
xor
adc
sub
ds
sbb
xor
jo
add
push
jp
rcll
cmp
dec
movsl
leave
add
xor
add
adc
or
mov
mov
cwtl
clc
mov
pop
pop
imul
cmp
xchg
xor
inc
add
fcmovbe
gs
mov
sub
sub
mov
sub
pop
add
mov
out
dec
in
dec
add
in
add
add
and
push
or
jae
push
dec
push
out
ror
int
loopne
add
mov
lcall
out
mulb
push
movsb
stos
lea
xor
ja
mov
das
call
push
subl
mov
mov
add
pop
mov
dec
in
push
movsb
stc
mov
das
or
outsl
mov
push
std
add
xorl
sbb
nop
sbbb
roll
mov
adcb
out
inc
call
mov
imul
je,pn
jbe
or
xchg
jnp
loopne
jns
add
int
mov
scas
add
push
inc
push
shlb
inc
dec
test
hlt
adc
pop
sti
cmp
sub
sbbb
testl
pop
hlt
inc
cmp
test
mov
inc
pop
xor
insb
mov
lahf
push
rcll
outsb
cmpsb
or
inc
jl
test
fildl
mov
outsb
push
sub
cs
add
ret
xchg
cmp
or
pop
mov
add
add
cs
addr16
adc
mov
add
and
fbstp
popf
jg
and
lret
in
ja
cld
and
pusha
cld
mov
inc
rclb
pop
fwait
cmp
ljmp
pop
stos
cmp
jp
cmpsl
testb
mov
mov
push
add
jo
jg
out
loope
add
mov
pop
rorl
fsub
sub
xor
in
jecxz
jge
add
sub
pop
loop
repz
sbb
dec
in
jo
sahf
cmp
mov
in
inc
add
inc
jb
add
test
inc
mov
subb
xchg
js
cwtl
and
xor
add
push
add
lock
or
jl
shll
add
xlat
cmpsl
mov
add
push
aam
mov
add
pop
add
pop
adc
add
dec
cmpsb
lods
add
mov
int3
push
arpl
loopne
mov
pop
cmc
inc
nop
cmp
mov
cmpb
push
adc
or
inc
pop
xor
lods
mov
scas
lret
or
fisubrs
dec
sahf
jnp
test
jg
and
ret
movb
pushl
add
pop
xor
cmpsb
add
cmp
xchg
rol
cmp
ja
cld
add
popa
fisttpl
jge
ds
mov
jnp
cmp
pop
jno
mov
shl
ja
push
lahf
jbe
stos
jmp
mov
push
sti
mov
inc
clc
add
inc
repz
inc
sub
nop
in
nop
pop
add
pop
insl
mov
cltd
jmp
xchg
sub
scas
sarb
add
lret
into
jbe
pop
adc
ret
rcr
sub
dec
jno
je
add
lret
or
push
add
or
pop
ds
push
add
shlb
add
fldl
pmulhw
psrld
or
mov
repnz
push
sub
xor
xor
sub
test
xor
mov
mov
and
adc
jle
push
hlt
add
roll
fnstenv
add
add
stos
cmp
incb
fdivrs
add
jne
call
push
pop
lock
mov
mov
popf
jecxz
js
loope
ja
push
shrb
ss
lods
lahf
mov
add
nop
push
push
xor
pop
add
sar
mov
adc
add
mov
pop
sub
pop
test
shl
pusha
xlat
pop
sbb
mov
push
add
or
in
addr16
inc
in
mov
xchg
add
jb
je
ja
jp
dec
popa
insl
fmuls
sub
cld
data16
lcall
add
lds
aad
adc
cld
inc
fcoms
mov
insl
mov
stc
je
add
push
or
test
sahf
mov
cmc
jmp
ret
adc
adc
pop
mov
push
xchg
dec
sbb
jo
nop
mov
add
int
push
mov
lcall
mov
mov
add
mov
push
mov
adc
aam
adc
rolb
idiv
je
lahf
lock
sub
pop
shlb
jecxz
add
xchg
cmp
push
mov
aam
dec
in
ljmp
ret
clc
push
imull
add
xor
mov
fadds
pop
orl
lret
fisubl
nop
push
mov
xor
dec
iret
xor
mov
das
sahf
adc
rorl
add
cmp
jg
or
mov
sbb
inc
sahf
sub
cs
mov
leave
shrb
or
mov
pop
or
and
repnz
add
xchg
int
cmp
jmp
mov
daa
sub
inc
stc
js
add
loopne
shr
cs
jno
insl
add
ds
pop
clc
test
out
xchg
inc
or
ljmp
lds
lods
fisttpl
pop
add
mov
dec
ret
mov
add
stos
les
add
cmp
and
xor
xchg
or
cmp
and
xlat
stos
add
mov
es
jb
add
add
and
cwtl
icebp
jb
or
imulb
add
popa
jnp
sahf
rorb
add
pop
out
push
out
mov
pusha
xchg
jo
adc
cmc
mov
test
mov
sarb
dec
gs
scas
inc
dec
add
enter
jne
mov
nop
es
cmp
stc
add
mov
xor
loopne
pop
mov
add
xlat
mov
cmpsl
and
dec
add
loope
mov
aam
pop
xor
into
std
in
and
add
nop
pop
dec
rcr
add
test
jo
inc
fisubrl
jbe
push
push
movb
inc
mov
testb
lods
stos
test
test
inc
xor
jo
js
sub
aam
jns
pop
in
test
add
js
movb
pushl
out
mov
insb
adc
cmpsl
fxch
and
add
out
mov
jecxz
rolb
adc
xor
sbb
add
xor
pop
addr16
cwtl
inc
push
inc
and
pop
add
iret
shl
dec
adc
lock
and
cli
cwtl
ret
les
sub
add
jns
cmp
xchg
pop
lock
dec
add
mov
and
negb
sub
mov
adc
add
jne
add
cmp
aas
fdivr
mov
dec
clc
mov
ret
xor
or
lea
lret
fucomi
jmp
jnp
inc
push
push
pop
mov
mov
and
and
daa
lock
test
int3
add
shrb
adc
testl
mov
cld
cmp
stos
add
ljmp
jns
js
push
xlat
cmpsl
les
shll
sahf
pop
imul
mov
mov
inc
xlat
dec
inc
or
add
aaa
sub
add
inc
ret
insl
cld
test
rcrb
inc
push
jge
cwtl
mov
cmp
sbb
push
jns
dec
add
daa
sbb
testl
push
sti
mov
into
lret
mov
and
jno
inc
cmp
out
shlb
ret
push
push
adc
popa
pop
add
pop
xchg
leave
jo
scas
lret
insb
mov
fsts
and
test
mov
stos
scas
pusha
fdivl
out
inc
add
pop
mov
test
add
mov
inc
and
lods
in
pop
mov
xchg
imul
lea
fistpl
shr
stos
dec
add
cmp
sahf
pushf
ljmp
add
lea
add
or
lar
adc
xor
test
je
or
pop
add
cmp
repz
add
negl
add
ret
mov
push
sti
dec
lea
add
mov
jge
pop
jnp
xlat
sub
cltd
dec
push
loope
popa
repnz
or
test
add
push
cmp
scas
shrb
add
fldcw
insb
add
and
ja
scas
jge
rorl
out
pop
jge
shrb
xchg
xlat
imul
clc
dec
sbb
insl
add
loopne
test
add
pop
mov
movsb
je
add
pop
mov
jg
inc
cld
xor
aam
pop
xor
mov
lods
cmp
pop
int3
mov
fildl
xor
ss
dec
and
lcall
std
cmp
mov
addb
push
lea
add
jno
jecxz
push
xlat
pop
sub
outsl
adc
inc
cwtl
loopne
sbb
adc
stos
mov
iret
in
mov
sub
repnz
dec
add
and
fxch
cmp
push
mov
das
imul
push
je
mov
repnz
mov
mov
jmp
insl
stc
loope
adc
cmpsl
push
jge
jle
addb
add
xchg
xchg
sub
sahf
mov
sbb
out
inc
insb
push
mov
shl
or
mov
aaa
add
pop
test
mov
push
mov
or
and
cmp
jecxz
bound
add
push
jmp
fstl
inc
fdivr
dec
mov
pop
mov
enter
mov
addb
mov
pop
mov
cmpsl
add
pop
inc
hlt
sbb
mov
add
outsb
nop
fidivrl
push
mov
mov
add
mov
push
ljmp
jae
imul
shlb
out
add
aad
loop
cmp
add
sbb
mov
xchg
repnz
add
lds
xchg
dec
xchg
push
in
loopne
rcll
addr16
push
adc
jecxz
add
xlat
cld
mov
mov
inc
in
xchg
cmp
dec
add
arpl
push
out
hlt
push
push
jno
xchg
inc
shl
fidivs
push
sbb
data16
aad
add
inc
lods
mov
add
xorb
flds
mov
in
mov
pop
xchg
pop
push
in
rolb
add
shrb
sar
mov
add
push
ret
rcll
je
and
std
jbe
testb
fldl
rcrl
insl
push
fwait
lds
bound
add
mov
hlt
mov
pop
add
es
out
lock
add
ds
add
stos
test
call
subb
add
stos
adc
fxch
daa
adc
test
ljmp
xchg
push
or
out
pop
mov
adc
dec
jle
mulps
mov
lea
push
xchg
mov
xor
int3
sbb
xchg
xlat
shl
clc
popl
cmc
lahf
push
cmpl
in
inc
mov
arpl
xlat
sbb
cmpb
clc
cmpsl
add
fdivr
jns
hlt
arpl
mov
sbb
xchg
push
cmp
mov
out
sub
or
adc
lods
testb
push
cltd
inc
lods
xor
push
cwtl
pusha
cmp
data16
mov
jmp
leave
or
les
test
lock
out
lahf
in
iret
pop
mov
push
popa
add
mov
js
add
cmp
jo
mov
mov
call
lret
sbb
scas
add
inc
mov
jecxz
add
mov
push
fsts
push
insb
in
cmpsb
sub
pop
jge
fwait
push
addl
add
bound
shll
in
mov
std
aad
push
outsb
mov
xorb
sub
fmul
mov
movsb
xor
adc
sti
ret
inc
ret
sub
rorb
cmp
outsl
fwait
pop
jnp
and
outsb
dec
xor
es
add
int
inc
and
mov
push
dec
cmp
push
add
jnp
add
jl
pop
inc
js
add
arpl
testb
hlt
ficomps
add
fmull
dec
push
hlt
adc
inc
loope
lods
and
xchg
jo
sub
jg
xchg
or
decb
scas
cmpsb
daa
addr16
add
push
in
into
ffreep
mov
add
adc
lcall
push
inc
jae
xchg
ss
or
rcrb
rcr
iret
sbb
ss
adc
pusha
stos
add
fisubrs
les
fs
mov
clc
dec
push
out
adc
pop
fsubrs
pavgw
fidivs
add
scas
mov
fmuls
mov
pusha
sbb
call
jo
jno
out
mov
and
sbb
outsb
rclb
stc
pusha
data16
jne
push
inc
cmp
fdivs
int
leave
or
add
pop
andl
sbb
call
jb
push
push
mov
cmpsl
pop
in
and
lds
pop
shl
imul
rorb
add
sub
lret
lahf
iret
push
cmc
stos
inc
push
cmp
xor
add
out
shlb
rorl
rcrb
add
cmp
sbb
push
sti
ficompl
mov
insb
ja
ds
mov
pushf
adc
adc
rcr
mov
sbb
lcall
mov
mov
pop
sbb
and
adc
cmp
pushf
gs
in
pop
stc
lea
push
repnz
xor
je
rcrb
xor
hlt
and
call
mov
adc
stos
mov
push
fs
ja
testl
xor
ljmp
inc
fidivrs
mov
xor
add
push
test
mull
jo
add
cmp
pop
jl
add
js
or
dec
sub
mov
lahf
shrb
add
add
clc
mov
bound
xchg
xor
add
ds
ret
pop
cs
out
mul
shlb
mov
xchg
fisubs
in
or
pop
imul
shl
or
pop
ja
mov
es
and
mov
aas
inc
inc
sbb
pop
inc
lea
sub
mov
clc
xchg
jecxz
loopne
mov
ret
iret
inc
add
fsubrl
jg
or
mov
out
add
jo
fcoml
aad
popa
jb
add
fldl
inc
inc
mov
pop
sbb
cmp
xchg
mov
in
add
icebp
add
cmp
filds
insb
jnp
arpl
adc
ja
jb
adcb
mov
dec
flds
int
out
fs
pop
xchg
andb
sub
dec
mov
sbb
lahf
cs
and
mov
leave
sarl
ret
inc
mov
nop
movsl
test
jnp
add
jae
mov
lcall
sbb
movsl
add
dec
clc
cmpsl
add
sarb
jno
mov
fs
mov
inc
lods
fdivrl
add
out
dec
ljmp
inc
jo
and
jae
dec
sbb
add
mov
xchg
add
testl
pop
cli
add
xor
add
popf
lock
xor
pusha
call
aad
sbb
push
add
movsb
shlb
cmp
and
cmp
sub
xor
test
in
add
popa
mov
push
mov
sub
lret
add
cmp
xchg
cwtl
inc
jmp
sub
gs
adc
cmp
mov
add
mov
push
rclb
inc
sub
add
ret
gs
inc
aas
sub
xor
imul
xchg
or
loop
adc
xor
hlt
cmp
ds
mov
insl
bound
cmp
dec
rclb
push
orl
cld
cmp
andb
jo
cmp
add
or
pop
push
out
stos
incl
fsubl
pop
push
sub
shll
test
imul
jo
sub
outsb
jo
pop
inc
inc
jno
loope
insl
loopne
dec
push
push
cmp
nop
add
xchg
and
outsb
xchg
cmp
sti
icebp
lods
push
cwtl
xlat
push
pop
lahf
xor
inc
fdivs
add
push
leave
xchg
mov
cli
addb
cmp
dec
mov
jmp
dec
shlb
mov
mov
loop
inc
jg
mov
push
inc
and
adc
loopne
inc
push
cmp
fimuls
je
loope
mov
shl
sub
movsl
adc
pop
mov
testl
enter
mov
xchg
add
pop
mov
push
push
fwait
pop
adc
xchg
aad
cmp
out
bnd
les
es
add
sub
les
push
push
leave
nop
int3
sbb
dec
mov
sub
mov
or
sub
add
xchg
and
loope
inc
mov
fcomps
add
jp
andb
xchg
movlps
add
mov
mov
stc
arpl
xor
enter
adc
lcall
sar
cwtl
cmpb
inc
pop
sbb
add
fisttpl
ret
pop
loop
push
pop
pop
test
aas
inc
dec
fiadds
mov
shll
aas
adc
pop
aaa
cmp
in
mov
pusha
movsl
repz
add
pop
fildll
rolb
dec
into
lock
lds
addb
push
leave
mov
push
sahf
and
sahf
and
inc
fwait
aad
out
dec
pusha
es
add
jg
jne
mov
ds
cmp
mov
push
xchg
shll
sbb
xor
add
rolb
push
pusha
sub
call
sar
aam
test
sbb
mov
mov
pop
je
pusha
fisubs
aam
fnstenv
or
and
dec
nop
test
mov
sbb
jb
add
inc
gs
adc
push
jae
and
out
into
lret
outsl
je
clc
movsl
int3
daa
add
push
pop
das
testl
sbb
cmp
sbb
lods
dec
hlt
out
add
and
rolb
nop
sub
ljmp
stos
jecxz
push
add
inc
andl
lods
lods
push
cltd
add
jge
pop
dec
ret
add
xor
cli
cwtl
cmpsb
mov
jmp
mov
xor
fldl
pop
mov
ficomps
jnp
add
jg
inc
lock
cmp
fmull
jecxz
mov
jge
jno
inc
jp
in
push
scas
rcl
jmp
dec
insb
mov
jne
mov
repnz
push
aas
pushf
sub
add
es
insb
ret
add
mov
pop
and
mov
shl
lcall
lcall
enter
mov
je
mov
leave
mov
fadds
fs
push
jle
pop
icebp
sbb
xchg
insb
add
push
mov
inc
sub
adc
addr16
add
pop
push
adc
sbb
in
jo
andl
rorl
loopne
repnz
repnz
pop
andb
sbb
add
pushf
push
add
out
jb
mov
ja
les
outsl
add
xor
adc
mov
fs
or
mov
inc
adc
int3
add
add
lds
pop
ljmp
loope
imul
test
insb
mov
jnp
xchg
jl
in
mov
mov
adc
cmpsl
dec
cs
ss
lds
popa
add
inc
xor
lcall
mov
and
popf
add
cmp
rcrb
and
shll
insl
push
fsub
call
jl
add
out
or
movsb
cmpsb
hlt
add
fdivrs
out
nopl
insl
dec
imul
roll
inc
xchg
cmp
mov
jg
sub
lods
ret
add
pop
sbb
mov
add
scas
mov
cltd
cs
pavgb
xor
gs
loope
in
xchg
enter
lret
or
sbb
jecxz
mov
insl
push
jl
add
pop
mov
mov
inc
adc
jmp
mov
xchg
int
shlb
and
fcomps
push
xlat
sbb
xchg
inc
push
inc
inc
ds
jmp
push
push
jb
pop
mov
mov
cld
xor
scas
add
cmpl
or
jo
shrl
mov
pop
sub
lock
testb
sbb
xor
lods
cmp
mov
xor
jecxz
test
jmp
popa
cli
add
bound
add
dec
sub
loopne
sbb
pop
lret
out
add
jge
add
or
cwtl
ljmp
add
mov
push
les
mov
outsl
pop
daa
add
aam
lcall
push
clc
add
fimuls
sbb
xor
sbbb
ret
jl
xchg
cmp
adc
lods
adc
push
call
sahf
add
frstor
mov
repz
jecxz
pop
mov
add
test
mov
push
fdivl
adc
mov
push
dec
int
xchg
push
or
mov
in
shrb
add
mov
dec
add
out
in
add
lcall
adc
pop
inc
mov
add
cmpsb
lea
ret
dec
xor
fists
pop
loope
andb
sarb
mov
push
imul
in
mov
sbb
dec
and
add
cmp
repnz
ret
lret
das
es
push
add
imul
popa
dec
stos
add
adc
push
mov
int3
lods
scas
fmulp
aad
js
pop
or
push
ffreep
xlat
fdivrl
and
inc
data16
adc
lods
jg
dec
sahf
or
xchg
lds
dec
pop
mov
and
fdivrl
outsl
call
mov
xchg
or
add
gs
rclb
call
add
sub
xchg
jbe
add
gs
push
arpl
push
pop
loope
pusha
xor
rclb
cmp
js
stc
add
ret
roll
add
sahf
jle
inc
movsb
rorl
add
push
inc
push
mov
mov
iret
jns
enter
add
xchg
sub
daa
xchg
inc
in
xchg
bound
sub
cmp
sbb
lods
lds
sub
mov
popf
clc
sub
rcll
mov
mov
test
adc
aam
jne
add
outsb
push
les
int3
add
cmpsl
jmp
add
iret
xchg
jecxz
test
cmp
loop
sti
pop
mov
add
ficoms
fxch
push
inc
add
sub
bnd
fmul
rolb
mov
iret
andl
or
fiadds
jae
sbb
add
enter
or
jo
pop
pop
add
sbb
cmpl
jne
lret
loope
ljmp
stos
bound
xchg
insb
sbb
stc
ja
mov
mov
add
adc
push
add
or
popa
add
jl
push
int
arpl
add
dec
mov
xor
inc
mov
inc
add
orl
and
jae
add
add
je
xlat
or
mov
xor
mov
rclb
nop
out
mov
ljmp
pop
fdiv
xor
jb
mov
into
add
or
pushf
pop
cmp
addr16
dec
mov
inc
clc
jae
aaa
fiadds
adc
divl
push
ret
sar
dec
jo
std
pop
mov
fs
lcall
add
xlat
or
add
mov
int
inc
add
adc
add
data16
push
ret
add
sti
movsl
push
sbb
xchg
mov
adc
sbb
sub
rcl
cmp
mov
cli
cwtl
add
mov
subb
jbe
add
xor
inc
add
in
sti
fistps
les
cs
rorb
xchg
test
xchg
add
popa
out
jbe
dec
nop
mov
loop
movsb
daa
pop
mov
int
mov
inc
andb
imul
cmp
rolb
rorb
and
inc
lock
sbb
pop
mov
hlt
jle
sbbb
mov
sbb
fsubl
add
mov
and
add
sbb
pop
out
psubq
inc
insb
test
lods
add
popf
cmpl
inc
mov
push
out
shlb
push
dec
out
enter
mov
sldt
push
add
rcl
sub
pop
punpckhwd
mov
add
mov
cld
mov
repz
push
shlb
push
inc
inc
pop
mov
add
insb
ret
and
dec
cmp
cld
lret
lds
iret
inc
int
call
sbb
and
xchg
insb
add
or
ret
sub
loope
mov
testl
popa
push
sub
jecxz
mov
test
mov
fists
or
loope
mov
sbb
jo
lret
xchg
add
scas
fmulp
pop
xor
push
dec
xor
pop
adc
push
and
addr16
jae
test
fbstp
mov
sub
add
js
aam
popl
and
neg
sbb
out
pushf
addr16
mov
add
mul
add
add
pop
mov
je
xor
add
cmp
mov
shlb
jg
add
stc
data16
xor
or
sub
pause
insl
mov
xchg
fnstenv
inc
fcmovnbe
dec
inc
inc
add
ret
pop
add
aam
or
bound
clc
jge
inc
jmp
sub
add
cli
fldt
stos
pop
xchg
or
ja
and
xor
add
cmp
dec
aad
or
pop
and
add
das
test
mov
sub
adc
out
cwtl
scas
mov
repnz
mov
push
jp
inc
imul
fabs
hlt
rolb
sub
ss
gs
shlb
xor
add
jp
or
addr16
add
popf
inc
xlat
in
dec
add
lds
xchg
and
out
aaa
mov
ja
jbe
add
subl
add
adc
jg
jb
add
loope
icebp
cmpsb
pusha
nop
mov
cli
push
push
testb
rolb
mov
es
jb
hlt
or
clc
dec
data16
imul
mov
push
mov
jno
sbb
mov
pop
dec
imul
icebp
sbbb
lret
jae
dec
jg
pop
and
outsb
dec
loopne
iret
pop
inc
pop
lods
xor
call
notl
aam
test
mov
jl
jb
adcb
fwait
es
sub
inc
mov
or
int3
add
xchg
adc
add
mov
cmpsb
sub
jb
aam
push
imul
add
shll
test
cli
mov
pop
pop
add
pushf
scas
xor
xor
jp
add
cmp
push
xor
bound
out
jo
sbb
lods
adc
leave
in
sti
xchg
pusha
mov
insb
add
jecxz
mov
enter
cmp
dec
lret
push
push
das
cmpb
add
popa
aas
addr16
xchg
inc
pop
fs
ja,pt
add
sbb
lods
fists
push
dec
adc
pop
adc
cld
nop
add
ljmp
and
sbb
sti
add
das
mov
scas
jmp
mov
es
ja
ja
add
je
push
xor
popf
add
and
in
in
add
int
ret
sub
add
imul
pop
add
xor
pop
loopne
push
cmp
fwait
add
js
lcall
sbb
int3
add
rcr
add
push
inc
inc
leave
push
fbstp
push
cmp
fdivp
dec
cs
add
jle
jnp
xor
ret
stc
cmpsb
ds
add
add
mov
fsubp
std
add
pusha
or
add
sub
rorb
imul
mov
add
add
xchg
fnstenv
sbbb
inc
movsb
xor
hlt
add
and
add
mov
or
xor
mov
push
lea
ljmp
or
xlat
lds
and
ja
sub
add
icebp
mov
sti
shlb
lahf
lock
test
enter
xor
sub
data16
jbe
inc
stc
sub
aad
mov
jg
pop
dec
add
push
xchg
add
movsl
push
push
mov
test
add
xor
enter
pushf
push
outsb
movsb
push
lock
lcall
add
je
mov
cmpsb
lea
pop
pop
inc
sbb
and
insb
fbld
add
xorb
add
mov
dec
jno
push
inc
cmp
adc
add
cs
jmp
in
inc
call
xor
jb
rolb
pop
add
sub
ljmp
jb
dec
mov
sbb
jecxz
jl
push
inc
imul
adc
jecxz
or
pop
popf
and
into
jo
or
rcll
xor
popa
pop
pop
xchg
in
inc
sbbb
roll
sub
dec
adc
aad
add
aaa
xor
or
ss
add
fildll
pop
mov
add
inc
idivb
int3
fdivp
add
aad
clc
mov
mov
ljmp
sub
lds
and
into
mov
cmovns
iret
sarb
scas
mov
add
lods
sub
insl
out
xchg
xchg
and
xlat
push
mov
inc
stos
mov
xor
fld
jno
xchg
cmpsl
es
jo
loope
adc
add
in
xchg
dec
loopne
paddb
adc
push
and
and
sbb
imul
pop
and
and
mov
xchg
pop
mov
jle
adc
arpl
xor
dec
mov
xchg
into
add
inc
lods
sarl
rolb
sub
inc
in
jg
jne
add
sbb
add
dec
iret
inc
or
loope
add
jne
pusha
xchg
pop
pop
movsl
inc
mov
lret
add
xchg
push
mov
jns
sbb
or
lea
xchg
or
loop
inc
add
ret
add
cmp
jno
dec
dec
xchg
cmp
loopne
aaa
stc
rclb
cltd
dec
cmpb
test
add
fbstp
scas
jb
sub
movsb
das
xor
adc
xchg
xor
out
lock
shrb
ljmp
and
loope
jg
subb
add
in
cmp
lods
sub
enter
xor
sbb
scas
sub
aam
pop
add
and
jmp
adc
int3
adc
sbb
and
cmp
mov
pop
sub
lock
jae
and
xchg
mov
add
pop
pushl
mov
sbb
imul
mov
das
sbb
sbb
push
jns
add
mov
stc
pop
frstor
inc
hlt
lea
outsb
lret
cli
add
inc
roll
int
call
and
cwtl
hlt
mov
mov
addb
scas
xor
sbb
loope
test
ret
pop
jo
pusha
test
sbb
inc
mov
sub
jecxz
sbb
xor
icebp
push
and
insl
mov
push
xchg
or
cmp
bound
mov
loope
movntps
mov
push
int
push
jne
push
dec
repnz
inc
lock
mov
jmp
out
pusha
push
sbbb
stc
xchg
je
mov
xchg
inc
xchg
jns
add
in
incb
push
dec
push
loop
in
outsl
and
xor
add
push
fnstsw
push
cltd
add
add
push
scas
add
inc
incl
test
test
add
xchg
cmp
inc
add
push
mov
inc
ja
add
xchg
test
aam
repnz
imul
sub
mov
pop
cltd
subl
push
mov
push
leave
xor
pusha
push
subl
push
jecxz
test
mov
vmwrite
fcomp
push
cltd
xor
or
push
ja
add
dec
les
in
fcoml
xor
jmp
fs
xchg
in
test
fisubs
cmp
xor
or
push
out
add
jmp
cltd
jl
icebp
xor
movsb
add
pminsw
mov
push
cmp
hlt
add
push
insb
add
mov
dec
test
add
or
fisttps
in
int3
sbb
add
push
mov
mov
out
add
adc
bound
clc
aas
shlb
jb
inc
pop
inc
movsb
insb
hlt
xchg
add
rcrl
outsl
sbb
pushf
add
ss
cwtl
in
cmp
push
add
dec
icebp
rcrb
cld
sbb
ja
add
sub
ror
add
push
cltd
lcall
cmp
loopne
fs
cmp
cmpsl
repnz
sub
sbb
inc
sahf
pop
sub
inc
add
dec
cmp
xchg
pop
pop
outsl
lods
test
push
iret
aas
dec
add
sub
lret
leave
add
push
repnz
xchg
add
pop
cmpb
jle
inc
cmp
sub
lea
cwtl
add
bound
out
stos
arpl
or
add
jmp
add
sub
lods
out
pop
pop
popa
xchg
sbb
and
jmp
ret
subl
add
pusha
sbbb
cmp
and
jno
add
cmp
adc
insl
add
and
add
push
mov
xor
add
out
jmp
and
addl
dec
dec
and
add
xchg
inc
addr16
xchg
icebp
data16
jle
sbb
daa
notb
hlt
stos
add
mov
add
jg
pop
rolb
movsl
push
add
push
or
cltd
cli
inc
add
adc
mov
jno
scas
sbb
dec
clc
daa
push
mov
mov
adc
adc
add
xchg
das
subb
cmpsb
add
int3
movsl
orb
mov
cs
mov
imul
mov
add
in
add
ret
xchg
pop
push
mull
push
add
mov
fisttpl
pusha
rcll
pop
pop
pop
gs
mov
mov
add
loope
or
push
arpl
repz
enter
add
in
loopne
mov
mov
pop
jle
cmp
mov
xor
mov
pop
push
jmp
xor
arpl
popa
mov
add
out
xlat
add
lock
mul
dec
dec
pop
cmpsl
dec
imulb
popf
adcb
out
mov
cmpsb
rclb
add
pop
test
ja
mov
scas
cmpsl
std
jp
pusha
lock
nop
je
in
add
iret
xor
pop
rcl
pop
mov
sub
push
fs
movsb
lock
and
fldcw
sbb
pop
add
ret
lds
push
sbb
adc
jl
cli
xchg
fldt
xchg
jge
xor
push
pusha
or
cs
iret
outsb
cltd
add
fdivr
xor
inc
add
cli
add
aam
sub
add
dec
adc
mov
repnz
pop
fwait
xor
add
in
push
aas
add
ret
sub
lret
adc
hlt
out
or
aad
inc
data16
daa
aaa
es
clc
loope
and
das
cmp
jo
add
mov
std
subb
mov
fcmovnu
sub
fidivrs
ret
xchg
pop
mov
jae
mov
inc
inc
pop
push
and
xchg
ret
mov
loopne
add
hlt
fistpll
xor
add
xchg
sub
pop
movhlps
jge
rolb
fiaddl
mov
xchg
in
cmp
out
rorb
pop
outsl
add
jo
lea
xchg
mov
push
popa
ss
fnstcw
mov
hlt
mov
xchg
xchg
std
add
jbe
xor
and
sar
int
loop
add
push
call
mov
outsl
testb
mov
adc
push
push
sti
cs
testl
dec
jmp
pop
push
rcll
add
add
and
shlb
mul
test
adc
xchg
add
xchg
jmp
adc
adc
enter
mov
daa
xchg
cmp
adc
add
cmp
mov
repz
stos
test
pop
dec
and
add
push
jg
inc
pop
stos
clc
add
lods
dec
push
and
loopne
dec
incl
into
mov
xchg
xor
pop
clc
xchg
rolb
shlb
ret
cmp
jb
or
fwait
jmp
cmpsb
fcoms
cmpb
xchg
lods
jmp
add
dec
dec
bound
imul
add
push
leave
bound
fld
incl
sub
inc
je
push
add
insb
xor
add
cmc
sub
ljmp
xchg
add
sub
jno
xchg
add
xor
jle
add
mov
out
popa
sahf
lock
leave
pop
adc
mov
pop
mov
sbbl
test
divb
popf
add
inc
xchg
testl
insb
mov
loopne
push
push
add
jns
icebp
add
xor
dec
cmp
pop
or
xchg
movsb
adc
push
add
sti
dec
rolb
mov
dec
ret
dec
sbb
inc
xchg
fs
fsubl
movsb
nop
dec
adcl
mov
jo
cmpsl
push
add
lea
and
or
push
dec
rclb
mov
ss
and
cmp
subl
mov
mov
dec
cmp
int
aas
outsl
push
nop
movsl
imul
test
cmp
fiaddl
fcompl
pop
xor
clc
das
addl
addb
mov
fnstsw
aas
jge
mov
push
add
ret
and
pop
cwtl
dec
test
insl
hlt
add
jb
mov
add
xorl
pop
adc
inc
sti
inc
pop
lock
test
lcall
shlb
add
arpl
add
inc
adc
dec
xor
and
cltd
sbb
mov
fimull
das
mov
std
add
adc
rol
push
add
sahf
hlt
push
mov
loopne
add
sbb
sub
sbb
add
push
push
les
je
cmp
xor
sahf
mov
incl
call
and
addr16
cltd
ljmp
sbb
cli
add
insb
shlb
enter
or
sbb
sbb
dec
inc
add
test
lods
cmp
pop
cmp
in
fs
jae
std
bound
sub
aam
hlt
inc
ret
mov
icebp
cmpsl
scas
add
jg
insb
jle
mov
mov
fcompl
add
sbb
jb
mov
cmp
adc
or
adc
jg
jno
lcall
jnp
jmp
test
imul
or
mov
jno
add
cmp
add
sti
stc
add
push
lods
and
negb
sbb
mov
pop
into
mov
add
in
sub
sahf
inc
cmp
es
lsl
jge
cltd
xchg
call
xorl
sarb
jge
pusha
fimull
inc
arpl
add
add
shrl
jo
add
in
outsl
fwait
jbe
add
repz
jmp
ret
mov
add
adc
bound
xor
add
sbb
dec
add
mov
pop
orb
mov
hlt
add
add
ja
loope
shr
lds
jo
call
add
mov
pop
fistl
jno
push
outsl
stos
rolb
pop
inc
cmp
outsb
cmp
out
add
push
sub
out
testb
testl
test
jnp
setae
enter
mov
je
dec
add
aaa
pop
insb
inc
add
mov
enter
sbb
pop
sub
jmp
addr16
mov
mov
xor
add
test
mov
idivl
sbb
pop
leave
and
push
rclb
add
jl
inc
pushf
movsl
dec
pop
jo
add
jge
push
lods
cmp
jle
and
test
jmp
jno
push
sub
mov
das
mov
xchg
aaa
jo
pop
jl
add
idivl
aas
add
and
in
pushf
add
push
xor
add
mov
xor
or
push
jle
add
leave
loopne
mov
xchg
lret
pop
adc
lods
cmp
stc
arpl
adc
xor
pop
sbb
mov
add
mov
jmp
ret
xchg
inc
push
sub
pop
std
mulb
jl
leave
inc
arpl
outsl
std
pusha
rorb
roll
les
sub
inc
xchg
dec
rolb
jp
add
sbb
add
dec
pop
push
and
jo
pusha
ret
or
jns
out
pop
add
movsb
ffreep
push
stc
jns
sbb
imul
and
and
mov
and
pop
pusha
dec
or
push
loop
jo
add
jle
adc
inc
rolb
stc
add
pop
movl
sbb
sub
movsb
mov
jg
repnz
xlat
inc
arpl
xor
xchg
push
sbb
mov
inc
iret
int3
inc
pushf
call
push
sbb
lds
jg
popa
int
xor
xchg
enter
add
in
or
hlt
mov
and
inc
cwtl
add
xchg
push
adc
lahf
lds
add
jecxz
sbb
mov
or
into
xor
add
out
shrb
imul
and
xor
or
dec
jnp
pop
fidivs
xor
mov
cmpsb
xor
add
mov
mov
push
test
push
jae
scas
adc
jb
inc
add
test
pop
enter
mov
and
pop
dec
ror
xor
out
lret
enter
mov
push
add
jecxz
lret
aam
sub
fdivr
add
push
scas
sti
data16
test
lret
xchg
or
stc
cmc
push
dec
leave
jg,pt
add
jno
fadd
mov
into
add
rolb
mov
add
scas
sbb
push
sahf
es
push
ss
nop
lods
pop
add
sub
ja
mov
and
js
add
scas
xor
cmpl
test
jbe
std
iret
out
jmp
dec
sbbl
dec
mov
decb
mov
and
data16
loop
mov
inc
and
in
add
mov
fnstcw
scas
ret
push
mov
jae
fsubrs
add
test
pop
dec
push
pushf
mov
lea
pop
add
mov
mov
xchg
inc
mov
cmp
xchg
mov
jmp
lea
imul
loop
shlb
adcl
pop
jne
in
fwait
je
pushf
add
cmc
stos
stos
mov
pop
sti
mov
jae
cmp
xchg
xchg
add
inc
xlat
mov
insb
add
xchg
add
sub
cmp
add
scas
shrl
call
xchg
inc
ljmp
lret
pushw
adc
fwait
add
jp
je
lahf
cmp
cli
leave
sahf
or
scas
pop
mov
test
xor
mov
int
push
cmp
add
mov
stos
je
es
mov
xchg
add
pop
xlat
adcb
add
loopne
add
push
inc
pop
fimuls
sbb
lock
dec
int
test
add
jle
sbb
mov
std
jno
xchg
mov
dec
mov
imul
dec
jne
insl
in
andl
add
leave
lock
inc
cs
add
subl
out
push
pop
mov
sbb
xor
xor
cld
nop
mov
lea
jge
out
add
aas
add
test
or
xor
push
adc
mov
sbb
ret
push
mov
out
mov
std
or
or
add
clc
xor
mov
cmpsb
fisubrs
inc
add
hlt
sub
outsb
cli
rolb
in
data16
mov
adc
aam
aaa
mov
popa
mov
add
inc
cli
adcb
lds
mov
out
cmp
add
mov
jmp
add
adc
pop
lret
sar
xchg
hlt
xchg
dec
filds
mov
nop
nop
cmc
add
sub
repnz
dec
push
call
add
mov
cmp
inc
add
out
or
nop
add
cld
xchg
ret
test
pop
out
xor
sbb
and
lods
outsl
dec
push
adcl
adc
cmp
dec
nop
xchg
lock
lea
pop
mov
and
add
or
out
push
sti
and
lods
mov
push
test
pop
push
fcomi
flds
pop
lds
clc
adc
hlt
insl
pop
mov
stos
add
lahf
pop
in
rolb
lcall
add
xchg
pushf
fstpl
add
das
mov
add
push
cmp
out
insl
inc
push
xchg
pop
push
add
inc
sbbl
cmp
call
dec
fdivp
jns
icebp
push
add
faddl
in
insl
ljmp
pop
lds
add
mov
js
add
mov
fucomip
xchg
cmp
add
inc
mov
cmc
adc
add
mov
sbb
dec
mov
add
rorb
add
push
mov
sub
or
adc
mov
dec
in
jp
fldt
add
jmp
enter
cmp
xor
fsubrp
jge
add
fwait
jb
pop
addb
sbb
imul
stos
fs
es
inc
movsb
mov
clc
mov
cli
roll
mov
rdrand
in
xchg
sbb
ret
push
cld
add
subps
in
add
sbb
fdivl
mull
cmp
scas
add
pmullw
push
into
and
nop
mov
add
jno
mov
add
dec
xchg
push
mov
add
cmc
cmp
add
xchg
cwtl
mov
add
fstl
shlb
dec
mov
pop
inc
in
imul
mov
push
add
cmpsl
jg
inc
rclb
jno
adc
adc
add
add
mov
out
bound
hlt
push
repnz
scas
loopne
arpl
push
or
mov
or
sbb
cmp
jb
sarl
add
inc
mov
cmpsb
add
call
mov
add
pop
aad
push
xor
pop
add
adcl
and
inc
cwtl
mov
add
and
mov
out
in
fnstenv
mov
inc
pop
inc
add
or
mov
sets
fcmovbe
orb
arpl
rorb
and
add
out
popf
iret
add
icebp
adcb
shrb
clc
js
push
in
addl
lock
add
sarb
fidivs
out
stos
xor
mov
dec
gs
ja
pop
cld
add
mov
xchg
lods
cmp
repnz
and
cmp
mov
cmp
es
add
push
cltd
into
loopne
rolb
and
outsl
mov
or
mov
xchg
cmpsb
enter
mov
mov
xor
in
cmp
push
cmc
add
imul
fldt
out
pop
enter
aad
movl
orb
dec
mov
add
xor
aam
jne
add
inc
xchg
ret
unpcklps
cltd
test
xchg
push
mov
rcrl
cs
cwtl
int
or
pop
psubsw
mov
in
cmc
in
clc
das
dec
jmp
and
and
add
rcr
jae
loope
sbb
push
jo
adc
xor
or
mov
add
add
clc
pop
pop
cs
fcom
add
lods
mov
loopne
mov
addr16
inc
push
shrb
movsb
cltd
mov
iret
jne
in
pop
sahf
push
add
sub
jmp
add
ljmp
add
mov
sbb
das
and
cltd
ffreep
xchg
rolb
and
lock
out
lds
stos
inc
dec
cwtl
int3
add
pop
inc
iret
inc
andl
sub
xchg
cwtl
jne
add
adc
or
fistpl
pop
inc
mov
jne
jno
add
data16
hlt
inc
add
sysexit
add
pop
je
mov
into
inc
scas
mov
cmp
addb
das
add
and
lock
and
add
rorb
cmp
dec
cmp
lods
cmp
fstpt
icebp
jnp
add
add
lahf
dec
cltd
or
xor
inc
jo
fwait
iret
dec
add
pop
mov
in
andb
push
fists
shl
pushl
push
into
sub
pop
scas
hlt
add
stc
jg
jge
xor
or
mov
sahf
out
jno,pn
es
mov
dec
dec
add
fisubl
xchg
sbb
inc
and
inc
mov
loopne
xlat
mov
xchg
dec
adc
and
daa
testb
sub
jge
mov
or
xor
test
cmp
fcompl
ljmp
ftst
in
bound
or
clc
cmp
dec
pop
cli
adc
call
mov
inc
shlb
popl
or
shrb
xchg
xchg
mov
add
adc
int
mov
in
inc
testl
push
or
mov
pusha
adc
cs
jno
ja
js
sti
mov
push
pop
fsub
lods
in
push
adc
adc
shl
repnz
and
ja
cmc
pop
out
adc
add
mov
shlb
iret
repnz
in
sbb
add
out
mov
popa
jnp
pop
inc
sti
addb
cmp
add
iret
leave
add
sarb
add
or
push
nop
xor
jecxz
or
jmp
inc
cltd
push
and
cmp
std
imul
or
dec
jne
add
mov
add
rolb
out
add
xchg
cmp
mov
pcmpeqb
jge
setne
add
iret
std
mov
ss
bound
sub
stos
aaa
outsl
cmp
dec
incb
leave
push
lods
pop
mov
jl
inc
xchg
pop
pop
ss
adc
mov
test
mov
and
imul
mov
scas
jecxz
lods
xchg
dec
add
mov
cld
adc
adc
mov
call
cmpsb
ds
add
leave
add
mov
mov
sub
jmp
push
enter
mov
add
mov
xor
test
jnp
int
dec
aas
andl
or
sub
adc
jae
add
jbe
testl
xchg
call
clc
movsb
and
movsl
in
repz
jmp
ljmp
cmpsb
mov
xor
inc
loop
popf
lret
lods
add
push
es
mov
xchg
test
pop
rolb
mov
fidivrl
jns
and
cwtl
add
clc
adc
das
in
add
mov
dec
lds
scas
test
lock
aas
add
mov
or
aam
lahf
sbb
cwtl
rcrb
js
dec
pop
lods
add
xor
jge
clc
mov
enter
push
add
ret
xchg
push
sbb
clc
mov
add
outsl
sbb
cmp
dec
jg
or
scas
fdivs
enter
cmp
mov
out
mov
xchg
add
mov
inc
shl
sti
inc
push
fidivs
pop
xor
addl
scas
sbb
add
jmp
push
bound
sbb
dec
addl
rorl
aas
mov
clc
mov
mov
cmp
jle
pop
inc
xorb
mov
push
push
adc
loopne
stos
sub
rorl
cmpb
fildl
dec
test
imul
push
out
jne
popa
add
gs
adc
icebp
rorb
xor
cmp
jns
mov
or
imul
jbe
mov
aaa
add
pop
aad
xchg
dec
dec
ljmp
psraw
pop
add
inc
ljmp
add
aad
cmpsb
mov
enter
xor
call
cmp
jno
out
cs
xchg
out
sbb
hlt
fiadds
push
sbb
pop
add
push
xchg
lods
in
into
and
movsb
cmp
cld
xchg
pop
out
add
xchg
xchg
push
inc
arpl
or
add
movsl
cs
mov
imull
orl
adc
data16
xchg
fidivl
mov
sub
or
add
jl
cli
es
call
sub
mov
into
fidivl
cmpsb
jle
pop
dec
popa
add
ss
push
test
sbb
xchg
orb
push
hlt
js
addr16
nop
or
cmp
orps
pusha
jo
mov
stc
idivl
aas
xchg
add
cmpsb
sbb
addb
cli
mov
pushf
or
lods
fildl
add
sub
call
push
jns
fadds
xorb
fcomps
mov
icebp
clc
sti
loope
jbe
outsl
movsl
icebp
inc
rorl
inc
mov
test
shrb
lahf
mov
dec
in
sbb
std
cltd
andb
je
mov
dec
mov
lock
out
lods
adc
cmpsl
xchg
mov
pop
add
ret
les
adc
inc
mov
cmp
push
cmp
enter
call
and
mov
cmp
cmp
or
sub
pop
jp
mov
inc
shlb
in
xchg
xlat
in
lret
adc
es
hlt
add
stc
or
pop
cltd
dec
and
dec
mov
bound
lds
sbb
adc
or
or
and
jno
mov
inc
es
jle
or
or
xor
xchg
fmull
pusha
jb
cltd
add
jle
movsb
lret
mov
lcall
adc
jl
add
int3
je
inc
add
insb
mov
or
nop
repnz
xchg
ret
dec
mov
shl
in
pop
add
outsb
rcr
mov
add
aas
sbb
sbb
jp
sbb
adc
mov
jnp
push
cli
mov
add
shll
add
cmp
dec
cwtl
mov
add
adc
jl
sbb
add
les
stos
push
rclb
pop
ljmp
sbb
mov
lahf
mov
in
sbb
nop
add
pop
ss
sbb
adc
testb
inc
les
cmpsl
mov
in
cmp
mov
pushf
or
loopne
popa
pop
in
dec
xchg
lods
shlb
dec
xchg
add
lcall
add
push
sti
and
sbb
cltd
xor
bound
fcomip
sub
pop
and
sbb
push
mov
and
shrl
xor
push
sbb
dec
arpl
xor
cmp
push
adc
jns
mov
mov
push
test
shrb
test
xchg
mov
pop
push
es
outsl
add
lret
neg
jns
js
cmp
pop
insl
mov
jnp
push
arpl
cmp
cld
mov
or
xor
pop
mov
mov
shl
bound
mov
sbb
mov
and
sub
fstl
jmp
loopne
inc
inc
test
int
cli
setns
flds
daa
or
jo
add
in
cmpsb
ljmp
popa
mov
inc
iret
scas
pusha
mov
sbb
mov
pop
movsb
or
push
jns
and
in
sub
add
add
jns
push
dec
lds
xchg
adc
jae
xchg
ret
add
cmp
push
fcmovnbe
xchg
js
popa
add
dec
adcb
xor
add
imul
add
inc
divb
add
inc
mov
pop
push
add
fstl
lret
mov
lahf
jb
int
ret
and
popa
or
adc
nop
jmp
cltd
add
clc
xor
mov
in
pusha
sbb
out
mov
add
add
dec
pop
dec
push
and
or
sub
add
in
jo
and
jnp
prefetch
or
clc
fildl
mov
sbb
mov
sahf
xor
shlb
loope
imul
and
psubusb
cs
shrb
adc
gs
dec
nop
les
push
dec
testb
ljmp
add
adcb
push
mov
clc
imul
ret
dec
aam
add
fcoms
or
push
cmp
mov
or
xchg
iret
cmp
mov
shlb
fsubrs
add
mov
pop
mov
cmp
test
sar
das
rcrb
xor
nop
add
int
sbb
xor
pop
lds
mov
out
fisttps
pop
xchg
dec
cmp
and
pop
out
clc
enter
lea
mov
mov
and
sbb
add
inc
rep
mov
mov
push
push
sarb
stos
add
fisubrs
mov
cmp
or
fsubl
outsl
inc
adc
pusha
mov
sub
add
xchg
mov
push
cmp
fs
adc
cltd
xor
hlt
sbb
rorl
pop
dec
jns
out
imul
test
fadds
adc
sub
rolb
xor
fcoml
xor
or
clc
stos
cmp
cld
dec
mov
adc
push
je
mov
ljmp
pop
sub
adc
hlt
pop
pusha
fsts
sub
test
xchg
jmp
addb
fisubrl
test
push
bound
push
mov
cmp
pop
and
call
mov
mov
adc
out
cwtl
sub
sub
shll
negb
adc
rorb
jge
xor
mov
gs
jp
pop
mov
lcall
jle
or
repnz
mov
or
sub
cmp
ret
add
add
xchg
mov
dec
lret
nop
enter
jp
int3
cmp
pop
imul
add
mov
adc
dec
es
add
jle
pop
stos
pop
in
xor
mov
mov
nop
add
fstps
jns
pop
xchg
pushf
add
sub
shlb
push
pop
pusha
mov
push
add
out
ja
or
cmpl
mov
mov
xor
frstor
sbb
add
repnz
xor
lods
add
fs
out
test
pushf
xor
or
cmp
jecxz
clc
push
add
js
mov
dec
shrl
adcb
pop
or
mov
outsb
loop
mov
sbb
js
and
cmp
inc
jns
or
push
bound
adc
and
mov
jns
mov
or
push
or
sbb
and
jp
inc
sbb
mov
dec
int
test
push
sbb
or
xor
or
or
cmpsb
test
in
hlt
add
in
rolb
dec
inc
sub
das
outsl
add
test
pop
push
sbb
and
adcb
add
outsl
loopne
lds
dec
stos
or
add
pop
dec
and
clc
sub
loopne
jmp
pusha
les
add
xchg
dec
aad
xlat
clc
push
cmp
xchg
sub
aas
cs
mov
test
lea
inc
lock
sub
lcall
adc
loope
dec
add
fildl
sbb
jo
push
cwtl
loopne
stos
ds
inc
sub
add
xor
mov
mov
dec
rol
push
lahf
adc
bound
scas
movsb
sbb
fsubl
mov
movsl
mov
push
or
xor
xor
fs
aad
adc
gs
add
arpl
push
add
sti
fiadds
jl
pop
jge
rclb
or
imul
mov
enter
es
lods
xchg
push
jmp
add
adc
rol
add
mov
gs
cwtl
cmp
sarb
cmc
inc
xchg
scas
imul
sub
sbb
add
outsb
bound
icebp
roll
ret
push
sarb
arpl
push
test
and
ret
xchg
xor
and
mov
add
or
adc
push
jl
outsb
cmp
iret
sahf
push
ljmp
push
cmp
rolb
ret
notb
push
lret
or
or
xor
inc
mov
mov
dec
add
or
sub
cli
add
daa
xchg
pop
or
xchg
xor
lret
add
loope
dec
fidivrs
push
cmpsb
sbb
or
addb
xor
int3
shl
pop
out
jl
add
lcall
sub
xchg
pop
jbe
or
jmp
daa
sub
mov
fsubrl
addl
cwtl
push
adc
dec
push
orb
icebp
stos
movsb
xchg
in
into
mov
sbb
lahf
pop
jbe
dec
cwtl
dec
enter
popf
lret
pop
dec
jmp
jl
sbb
push
or
mov
stos
or
sti
mov
js
inc
les
push
add
push
mov
rcll
sbb
mov
mov
lret
inc
ds
xchg
cwtl
jge
cwtl
push
pop
adc
stos
cmp
pop
cmc
xchg
sbb
test
pop
add
in
clc
arpl
xchg
es
nop
dec
sub
cmpsl
test
add
xchg
dec
add
dec
mov
jecxz
add
in
cmp
fucomip
dec
test
cmp
push
jle
xchg
arpl
adc
icebp
jge
pusha
js
lods
push
pop
clc
movsl
adc
aaa
cmp
outsl
push
rorl
adcb
nop
mov
call
pusha
in
mov
clc
cmp
add
je
mov
mov
and
rcrl
maskmovq
mull
sub
push
fstpl
incl
shll
push
jecxz
xchg
xor
gs
cli
cmp
insb
inc
rcl
sub
rcll
outsb
inc
imul
test
out
loop
orb
loope
shlb
push
sbb
and
add
dec
mov
sti
dec
fmuls
mov
push
rolb
add
bnd
fmuls
movsb
add
lcall
cmp
aaa
or
adc
cs
sbb
jbe
imul
jl
ds
insl
out
adc
add
push
int3
loopne
test
add
push
sub
xor
adc
and
cwtl
enter
add
pop
cmpsb
enter
jmp
xchg
mov
mov
fnstenv
mov
ldmxcsr
inc
push
pop
add
push
mov
push
adc
inc
dec
loopne
adc
hlt
push
push
mov
cmpsb
mov
push
loop
pop
dec
jmp
mov
add
xorb
rep
mov
xor
cmpsb
test
fisttps
add
cwtl
std
add
stos
inc
movsl
call
cmpsl
add
insb
cmpsb
or
xchg
fimull
adc
mov
pop
mov
push
es
or
and
stos
cmpsl
int3
cmc
fiaddl
xchg
mov
imul
adc
cmp
fcmovne
shrb
test
imulb
pusha
call
cmp
std
push
fimull
lods
cmpsl
mov
incl
sbb
xchg
and
rol
scas
and
cmp
mov
inc
enter
nop
xor
jae
mov
push
sbb
cmpsb
lahf
mov
add
add
shll
add
fwait
imul
es
or
ds
push
xor
clc
add
notb
mov
cmpl
and
add
mov
or
adc
add
lahf
push
sbb
orb
add
jo
insb
test
fabs
sbb
ss
push
pop
stos
sub
cmp
int3
popf
out
fiadds
mov
test
or
add
gs
pop
sbb
xchg
cmpsl
mov
adc
add
in
shl
or
add
xchg
daa
pop
add
cmp
repnz
cli
adc
rorl
jp
jmp
dec
cmp
lahf
add
arpl
jecxz
cmp
and
and
pop
adc
mov
ja
in
cmp
andb
je
push
sub
mov
sbb
pop
xor
pop
loopne
inc
jae
add
jb
cmpb
mov
rclb
push
or
ret
nop
mov
cmc
out
jmp
lahf
push
rcrb
aad
pop
andb
insb
cmp
and
mov
lock
and
addr16
sbb
sbb
or
mov
xor
add
add
cmp
fists
add
add
add
pop
ret
mov
add
cmc
insl
jle
out
and
cmp
je
aam
mov
sub
add
mov
hlt
fsubl
pop
add
mov
or
mov
das
add
jge
adc
shll
out
push
inc
adc
adc
mov
ret
xor
pushf
outsl
add
gs
out
jns
sarb
insb
sahf
push
cwtl
add
add
push
shrl
mov
or
jl
leave
xchg
sysret
add
xor
stos
in
out
aam
rcr
add
xchg
cs
faddl
lods
test
imul
scas
lcall
add
xor
push
xor
nop
adc
cmp
into
je
mov
mov
or
dec
add
inc
inc
mov
filds
cmp
and
pop
cld
cmc
aad
loop
dec
inc
mov
jmp
clc
adc
punpckhdq
mov
data16
stos
in
stc
jbe
inc
sub
in
add
lds
add
sbb
adc
loopne
sbb
shl
pop
les
paddb
clc
hlt
testb
mov
sbb
roll
nop
dec
sub
dec
pop
inc
ror
sub
test
jg
adcb
rclb
daa
add
or
fisttps
xchg
call
addr16
mov
ror
cmp
in
adc
dec
cli
negl
sbb
push
in
push
shrb
dec
fmuls
add
int
mov
inc
mov
xchg
out
xlat
out
add
xor
into
aaa
cmp
add
jle
pop
daa
roll
jl
inc
lret
divl
dec
dec
mov
xor
jp
mov
lret
or
jge
add
mov
add
push
pop
sub
push
test
lds
divl
add
out
inc
icebp
add
adc
dec
sub
sbbb
shll
pop
mov
xor
daa
add
xchg
nop
loope
ljmp
hlt
fxch
add
pop
xchg
ret
add
orl
mov
sub
call
das
mov
mov
lds
push
dec
sub
adc
std
gs
movb
push
dec
push
movsl
insl
jbe
xor
add
sbb
add
outsl
add
pop
pop
jnp
icebp
imul
idiv
and
dec
push
jb
add
cli
test
add
iret
into
daa
and
mulb
in
and
or
roll
push
movsb
add
add
or
mov
clc
inc
mov
insb
sbb
xchg
push
fbld
in
sub
ds
jno,pt
pop
shl
push
push
cmp
andb
add
insb
aaa
stc
or
mov
imul
ljmp
out
lea
or
scas
and
dec
jle
pop
jno
sub
andps
xor
jbe
out
add
negb
pop
mov
sahf
add
pop
movsl
dec
xchg
scas
sub
std
sbb
subb
xchg
push
pop
fimuls
andb
cmpsl
rorb
loop
push
fdivrl
fadds
xchg
movsl
dec
sub
or
mov
arpl
sub
sahf
aas
cmp
insl
popa
ss
sbb
push
push
push
mov
shl
imul
or
xchg
add
cs
inc
add
clc
dec
pop
addb
outsl
dec
mov
xor
sahf
xchg
jmp
ja
cmp
mov
aad
jmp
lds
add
pop
push
mov
out
inc
add
insb
cmp
add
and
out
shrl
adc
popf
ds
xchg
sbb
fsub
push
in
mov
ss
xchg
test
inc
call
insb
add
push
clc
pusha
sbb
jne
orb
jp
into
sbb
mov
lcall
test
xchg
fsubrs
jl
mov
shrl
adc
ljmp
jl
add
ficompl
popa
lock
lahf
std
rolb
packuswb
mov
mov
mov
scas
cwtl
add
cmp
data16
xor
pop
add
mov
adc
add
maskmovq
testl
or
cmp
addb
test
jbe
xor
hlt
jae
add
xor
xchg
xchg
daa
pop
ja
xor
mov
aam
adc
int3
into
and
cld
lret
dec
xor
rcrl
pop
xor
pop
inc
inc
mov
outsb
mov
jmp
push
xlat
push
pop
or
shl
push
jno
fidivs
sbb
cmp
pop
add
rcl
push
testl
mov
sub
imul
mov
mov
mov
cmp
sub
push
pop
mov
and
xchg
adcb
cmp
ss
mov
notb
cmpsb
xor
js
setnp
xor
push
fimull
ljmp
mov
mov
sub
fwait
lock
xchg
pop
add
in
fadd
in
xchg
and
imul
adc
add
mov
push
sbb
out
loopne
cmp
out
lahf
adc
push
push
push
add
push
icebp
jae
xchg
xchg
fucomip
cmpsb
das
jge
sbb
or
push
add
incl
mov
shl
lahf
aam
clc
repnz
js
ret
cmpsb
push
sbb
in
push
add
mov
ja
xor
sbb
jns
ror
mov
clc
mov
jl
shrd
andb
repz
add
inc
mov
dec
gs
dec
push
add
push
jmp
int
sub
cmpsl
xor
repz
add
dec
pop
fstp
add
test
into
loopne
jo
subb
cmpsb
jmp
inc
sbb
mov
add
leave
pushf
and
cmpsl
xchg
xlat
test
add
xor
pop
enter
add
dec
cmpb
sub
cmp
dec
add
sub
sarl
pop
push
push
lahf
pop
mov
ret
call
pop
addr16
cmp
jg
call
ret
add
xchg
flds
sub
mov
loop
addl
sbb
dec
add
rorl
inc
cmp
add
cmp
call
test
add
pop
xchg
xor
sbb
cmpsb
push
push
ljmp
jb
icebp
pop
xchg
lret
add
scas
mov
cmp
test
cwtl
pop
mov
std
jl
pop
add
loopne
cmp
xor
and
rolb
xor
inc
stos
add
mov
add
sbb
xchg
pop
mov
xchg
cmp
pop
mov
add
ficoms
jl
add
pop
adc
jbe
and
or
push
or
call
iret
sarb
fs
insb
jb
and
dec
ds
mov
gs
xor
out
popf
jb
stos
insl
ja
int3
add
and
xchg
cmp
add
in
adc
adc
jnp
shlb
ret
testl
jg
rolb
cmp
aaa
inc
mov
inc
enter
add
and
cwtl
and
popl
ja
adc
cmp
and
add
inc
pop
xchg
out
dec
ss
cld
xor
add
jno
aas
lock
pop
sti
add
push
adc
add
fwait
pop
js
dec
fiadds
out
jge
fsubs
pushf
dec
incb
mov
outsl
mov
shlb
cmp
xchg
jbe
ljmp
or
test
test
xchg
enter
xchg
and
inc
call
jae
ret
inc
mov
add
movsl
iret
pop
mov
mov
adc
nop
mov
testl
loop
cwtl
pop
ds
add
dec
mov
mov
add
cmp
loopne
or
addb
dec
std
stos
add
mov
ret
lret
lret
shrb
and
ficompl
inc
inc
nop
dec
add
xchg
push
call
movl
cmc
mov
test
js
mov
pop
insl
mov
add
shrl
enter
mov
mov
je
and
add
mov
and
outsb
dec
mov
add
lret
out
jnp
dec
mov
sub
mov
jmp
or
and
pop
dec
movsb
loopne
add
movl
dec
rcrb
sbb
adc
sbb
adc
outsl
fiaddl
xor
jns
mov
int3
adc
repz
push
sbbb
cli
add
jmp
sbb
mov
pusha
inc
dec
jge
inc
andb
insb
out
cmp
push
sub
pop
subl
jae
jg
rcl
pop
mov
and
gs
mov
jo
daa
subb
jnp
xchg
in
add
mov
lds
jp
add
imul
int
pop
or
push
and
lods
lahf
add
cwtl
into
cmpsl
pop
icebp
xchg
add
dec
fldl
pushf
sub
sbb
push
xlat
add
jle
call
jnp
or
lods
push
mov
jg
lods
pop
pop
shr
add
fildl
push
ret
cmp
stc
add
push
cmp
sar
pop
add
sbbl
outsb
decl
jno
xor
gs
mov
push
shlb
add
push
movsb
xchg
xchg
xor
add
clc
inc
inc
in
scas
pop
sbb
mov
xor
cmpsl
repnz
cld
mov
pop
add
filds
shrb
jl
or
mov
add
sub
inc
add
sbb
add
mov
sub
jge
pop
leave
fwait
sti
gs
push
dec
lret
subb
dec
cmp
inc
cmp
mov
test
mov
imul
add
ret
pop
repnz
adc
bound
lret
insb
shrb
cwtl
xchg
insl
add
sbb
mov
push
shrb
movsl
bound
mov
inc
add
add
mov
dec
rolb
sbbl
add
pushf
xchg
add
add
or
pop
gs
aad
pop
pop
fisubrl
lret
add
inc
inc
imul
push
pusha
les
aas
add
or
repnz
movb
jae
aaa
mov
fldl
jns
aam
and
adcb
add
setae
mov
and
mov
push
jmp
rcrl
cmc
jp
mov
sbb
aad
or
add
sub
mov
mov
add
in
inc
loop
in
push
add
aas
data16
add
lods
or
push
jns
pusha
jl
and
mov
add
test
add
xchg
icebp
add
cmc
push
mov
int
cwtl
mov
loopne
int3
add
inc
adc
push
add
repz
inc
iret
add
pop
adc
mov
or
pop
xchg
or
addr16
add
bound
add
fidivl
push
or
movsb
add
test
sbb
add
adc
adcl
jns
mov
and
movsb
bound
push
sub
xchg
cmp
pushl
hlt
clc
mov
cmp
mov
scas
testb
jb
add
pusha
cld
dec
pop
add
std
or
int
jnp
ror
add
cld
mov
pop
add
sarb
add
sar
jg
stc
enter
sub
jnp
cli
mov
push
repz
ja
int
out
cmc
add
nop
push
stos
out
loop
insb
pop
jp
add
cmp
std
gs
push
pushf
dec
test
testl
in
lock
lcall
or
push
subl
fisttps
push
setg
jnp
add
fprem1
xchg
clc
int3
fisubrl
push
dec
xor
add
push
push
pusha
push
movb
mov
fwait
xchg
clc
in
notl
pop
mov
mov
jns
add
cmp
and
inc
add
pop
pop
pop
add
xchg
test
cmp
add
pushf
xor
add
iret
mov
xor
ldmxcsr
and
cmpsl
push
std
rcrb
movsb
add
sbb
add
ds
xchg
dec
test
rol
jmp
jge
addr16
and
jnp
nop
in
push
dec
mov
jl
das
cmp
fiadds
mov
pop
inc
jo
or
add
dec
clc
jb
hlt
loopne
push
dec
es
daa
ret
adc
and
fadd
add
negb
movsb
and
filds
push
mov
andb
xor
xchg
inc
stos
add
push
and
outsl
push
xor
inc
aam
mov
rorb
sub
notl
dec
push
lods
mov
and
in
cmp
push
cmp
xchg
lret
inc
rcl
xchg
add
adc
jbe
mov
jo
jb
xlat
add
int3
fcomps
icebp
fildl
xchg
pop
inc
dec
mov
jl
fcompl
dec
or
mov
inc
into
and
mov
add
mov
fiadds
or
jl
fs
sbbl
push
xchg
bound
mov
test
pop
jnp
sbb
cmp
aas
push
cmpsb
add
mov
cmp
sub
and
cld
add
ds
rcrb
add
xchg
aas
add
push
sbb
add
rclb
fisttps
inc
fimull
mov
add
es
add
adc
ret
add
jge
mov
add
inc
add
ret
or
jmp
add
jecxz
pop
pop
mov
sbb
mov
mov
mov
in
or
jbe
adc
ss
push
in
mov
lcall
and
insb
das
cwtl
shl
ss
std
push
mov
icebp
adc
adc
sti
sarb
fldl
xor
lods
in
and
jno
add
push
push
lock
cmp
push
ja
fs
int3
aad
dec
cmp
mov
pop
divl
push
leave
or
or
stc
mov
and
out
mov
test
add
in
add
xchg
mov
pop
aas
pop
cmp
ret
sahf
lods
xchg
shll
jp
add
enter
mov
jns
loop
sarb
and
mov
idivl
add
loope
sub
sub
add
popa
jno
ljmp
jmp
adc
ds
in
mov
mov
ja
cs
and
loope
fcomi
jnp
adc
cwtl
mov
cli
adc
push
arpl
push
push
ds
pop
xor
loop
push
fs
jle
outsb
add
dec
sbb
sbb
jge
cmp
push
addb
mov
les
adc
lock
aam
das
pop
scas
inc
add
lds
int3
push
or
stc
lcall
add
mov
xchg
fld
mov
add
leave
mov
add
into
scas
sub
popa
jmp
push
and
ds
mov
in
sarb
sbb
add
inc
sub
xor
xchg
out
inc
cmpsl
mov
lea
mov
xor
add
andl
repz
add
mov
inc
shll
sbb
add
mov
add
lods
sbb
add
fildl
jbe
add
sbb
cmp
data16
add
mov
push
scas
jne
pusha
dec
sub
lods
jb
repz
and
out
pop
push
f2xm1
add
push
stos
lcall
xor
push
inc
cmp
add
loopne
loope
xchg
add
pop
and
push
outsb
pop
dec
sbb
rorl
jb
add
pop
popf
out
clc
into
add
or
fsubrl
loop
ds
add
fwait
add
ljmp
and
mov
mov
lods
notl
sbbb
repnz
jecxz
std
pop
ss
add
scas
add
inc
cli
cwtl
iret
add
xor
addr16
in
pop
std
push
add
adcl
loop
mov
dec
shrb
pusha
jne
mov
rclb
lret
push
test
mov
outsl
fldenv
add
sub
sub
scas
xchg
int
jecxz
leave
je
jl
nop
mov
ss
shrb
jle
or
enter
add
in
pop
add
jle
mov
daa
or
pop
out
cwtl
cmp
decb
inc
shll
add
imul
xchg
rorb
sbb
dec
jbe
rolb
out
inc
mov
stc
push
mov
loope
adc
or
mov
loopne
inc
dec
xor
xchg
mov
ud0
ret
mov
pop
sbb
jp
jmp
movsb
aas
add
push
pop
push
loopne
sbb
test
stc
mov
fmulp
rsqrtps
insb
add
push
adc
push
gs
lock
mov
xchg
add
jg
xchg
lahf
stc
into
inc
dec
or
add
xchg
dec
loope
fwait
push
pop
divl
popf
lods
mov
mov
scas
subl
add
shl
cmp
lock
push
ljmp
add
sahf
adcl
mov
jb
cmp
or
rol
and
add
ljmp
add
subb
leave
cltd
pop
shrb
xchg
inc
popf
movsl
sbb
dec
adc
rol
inc
loop
pop
adc
jg
push
add
dec
in
push
wbinvd
add
andb
add
stos
stc
mov
push
add
push
xchg
lock
rcrb
ds
cmp
out
cmp
add
insb
add
pop
lahf
sti
mov
loope
fdivrp
pop
popf
add
and
push
jmp
mov
in
jmp
push
fcmovb
xor
xchg
pop
xor
stos
push
jnp
inc
lret
rol
cli
in
jg
or
xlat
dec
sub
rorl
pop
add
jecxz
dec
add
repnz
or
sar
iret
in
cmp
cltd
jecxz
add
sub
push
dec
or
sub
shl
and
cmp
add
dec
es
iret
stos
or
sbb
in
mov
push
sbb
mov
pusha
ljmp
int
adc
cmpsl
call
xchg
inc
lds
jae
sbb
adc
str
jns
aas
add
mov
arpl
fldt
or
popf
test
loopne
add
add
add
jecxz
and
push
sbb
inc
ja
dec
add
xor
mov
mov
fwait
xor
pop
add
dec
rolb
or
orl
dec
add
in
fstl
rclb
int3
cmpb
mov
dec
mov
xor
sbb
orb
add
stos
roll
je
pop
jmp
xor
add
enter
in
fists
cmp
or
clc
mov
scas
cmp
into
sahf
lea
cwtl
inc
add
scas
les
test
jmp
xlat
subb
aad
cmp
sbb
cmp
jns
fcoml
mov
add
add
ja
add
cmp
fmuls
adc
and
loop
jmp
aaa
sbbb
std
jns
xchg
repz
add
mov
adc
push
icebp
scas
test
in
cmc
rcll
and
imul
les
cmpsb
inc
aam
mov
jne
shrl
ret
fdivs
adc
jmp
push
jnp
lret
xor
std
mov
in
add
mov
adc
jo
fsubrp
jne
insb
add
add
lock
add
fmulp
cmp
ss
sbb
icebp
pop
test
ljmp
push
jae
stos
sub
pusha
das
cmp
out
add
sub
add
jb
push
icebp
js
xchg
adc
mov
pop
call
dec
rol
icebp
xor
jge
popl
scas
sarl
mov
pop
xchg
lret
cmp
or
mov
test
sahf
adc
shlb
shlb
lahf
loopne,pt
dec
stos
add
add
je
push
add
sub
mov
add
faddl
fisubrl
shll
xor
popf
jle
das
push
jno
roll
dec
pop
push
loopne
mov
js
enter
mov
mov
and
pusha
push
add
imul
mov
rorb
adcb
pop
scas
ret
out
cmp
aas
adc
sbb
inc
xchg
flds
add
push
cmpsb
pop
mov
in
sbb
or
xchg
pop
inc
cmp
mov
adcb
faddl
shl
jmp
cmp
mov
pop
add
stos
add
mov
int3
cs
or
int
rol
dec
iret
mov
lock
mov
adc
push
es
inc
mov
ss
rorb
dec
pop
repz
dec
xor
cli
imull
popf
push
push
mov
dec
sbb
pop
in
pop
jbe
push
dec
add
iret
lods
orl
add
and
add
add
mov
jbe
jmp
add
cld
imul
add
lods
jecxz
and
sbb
adc
ret
and
shr
push
repnz
add
mov
cmp
in
add
sarl
test
roll
dec
xchg
out
mov
push
add
fsincos
daa
mov
test
addr16
loopne
dec
gs
adc
xor
loopne
roll
mov
aad
adc
lds
dec
mov
inc
out
pusha
and
xor
inc
mov
mov
rcrb
inc
jae
int3
pop
popf
imul
push
iret
and
xchg
jae
mov
inc
in
das
and
insl
jno
ret
dec
outsl
pop
push
lock
data16
js
ret
int3
fidivl
sub
out
cmpsb
add
add
xchg
sub
inc
push
mov
or
push
mov
repz
sbb
cmp
scas
addl
inc
test
xor
arpl
out
rcl
add
jle
cmp
inc
aas
aam
sbb
and
dec
and
cltd
fisttpl
nop
lea
xor
filds
sub
jge
ljmp
in
pop
xchg
push
sub
push
xlat
insb
cmp
sbb
cmp
sbb
jl
mov
and
cli
xor
mov
aaa
cmp
and
stc
enter
and
je
and
sbb
cmpsb
xchg
jmp
les
mov
xchg
add
cli
sub
cmp
add
outsb
xchg
inc
mov
stos
cli
fwait
add
je
cmp
iret
mov
enter
dec
push
in
dec
or
adc
pop
xor
ja
sarb
arpl
cwtl
cmc
jg
dec
nop
out
pop
cltd
cmpb
jecxz
sbb
jge
daa
xchg
cmp
mov
repz
imul
std
imul
mov
repnz
addr16
nop
imul
mov
cmp
in
sti
sbb
xor
sbb
outsl
add
lahf
mull
cld
add
repz
push
and
loopne
ret
add
push
add
and
in
pop
ffreep
add
lock
mov
xor
addr16
dec
divl
add
fistpll
fwait
loopne
ja
sub
inc
test
or
jmp
add
cld
out
adc
sbb
add
add
out
dec
xor
add
cmp
idivb
mov
loope
add
imul
arpl
cmpb
nop
jbe
push
add
cmpsl
mov
and
and
dec
fnstcw
add
nop
fwait
inc
in
add
sbb
mov
rolb
fs
mov
scas
add
aas
leave
fsub
mov
inc
jae
out
stos
xor
jbe
add
add
add
leave
adc
add
push
mov
divl
push
movsb
test
rol
cmp
dec
cmp
scas
int
push
add
sbb
xor
push
sarb
add
movsb
pop
aam
cltd
fsubrs
jns
add
jle
ds
add
pop
add
inc
cmc
xchg
cmp
xor
adc
add
out
mov
xor
movl
xchg
or
add
add
into
or
add
addr16
scas
mov
add
push
arpl
rcr
and
mov
test
mov
add
fiadds
adc
loop
pop
add
fisttps
add
push
and
sahf
sub
mov
icebp
jmp
add
dec
pop
inc
jecxz
cmpb
es
inc
and
inc
mov
into
mov
cmp
fcoms
hlt
cld
mov
movsb
nop
or
addb
lea
ja
je
mov
adc
xchg
out
jbe
scas
add
les
push
mov
test
leavew
js
add
loop
pop
add
cmp
lcall
aad
loop
sbb
daa
sarb
int
add
incl
repz
imul
jle
aad
idiv
pusha
xchg
cmc
push
mov
add
push
jl
add
movsl
ret
inc
cmpsl
testb
loop
add
or
push
cwtl
mov
push
pop
pop
xor
add
pop
add
imul
aaa
add
mov
cld
ljmp
cwtl
or
jmp
stc
pop
aam
or
push
push
out
ss
outsl
cltd
enter
arpl
jnp
add
push
loopne
add
imul
and
insb
in
add
test
xor
std
rolb
mov
xchg
push
dec
jl
sti
dec
xor
add
popa
int
jge
les
cld
xchg
add
mov
mov
add
pop
loope
pop
inc
mov
es
inc
popf
push
add
outsl
cmpsb
hlt
inc
push
fwait
cmp
ret
nop
shll
add
or
xchg
dec
pusha
pop
or
enter
add
adc
movsl
mov
outsl
mov
inc
in
add
lds
cmp
fs
add
push
mulb
add
sbb
sbb
mov
testl
cmp
dec
cmpsl
inc
pop
cmp
imul
test
cld
sbb
mov
mov
sub
insb
sub
adc
and
mov
cmc
ds
movsb
sahf
mov
fmull
nop
daa
push
or
pusha
insl
je
add
adc
lahf
loope
pop
add
setge
popa
push
jne
fadd
sarb
adc
mov
iret
add
add
jmp
inc
lods
sub
pop
mov
jo
ret
in
hlt
aas
add
mov
adc
xor
les
push
and
mov
add
adc
jnp
adc
pop
mov
dec
cmp
stos
pop
dec
scas
add
pusha
mov
nop
and
push
sbb
in
cltd
add
rcll
lahf
add
push
mov
add
xlat
push
pop
xchg
jbe
dec
add
pop
pop
daa
adc
pop
lock
fld
addl
push
scas
clc
add
rol
add
cmp
or
popa
or
and
in
mov
sar
out
add
in
fnstsw
jno
add
scas
hlt
mov
xor
push
inc
jo
adc
fldl
movsb
lea
push
jo
add
add
add
dec
lock
sahf
fstp
repnz
or
and
inc
outsb
mov
jnp
clc
enter
jne
pop
int3
orl
rorl
jnp
mov
and
jmp
je
dec
dec
add
addr16
fwait
shlb
nop
arpl
push
mov
popa
push
fsubrs
push
xchg
adc
imul
push
push
rclb
cmpsb
std
and
pop
flds
push
ficoms
popf
out
dec
xchg
adcb
cmpsl
dec
mov
add
pop
popa
lods
repz
call
rorl
inc
add
sbb
dec
cmp
nop
add
ret
loopne
lahf
or
out
mov
sub
testb
icebp
sbb
jg
add
sbb
mov
xchg
add
cmp
nop
mov
add
add
gs
push
out
cmpsb
sbb
sarb
jno
add
enter
mov
cmp
add
dec
call
cwtl
mov
pop
gs
arpl
adc
fistpl
movsl
adc
jecxz
ucomiss
test
lods
scas
add
sbb
cmp
mov
push
mov
add
test
outsl
popa
shlb
sbb
popf
imul
mov
aas
hlt
mov
jbe
imul
jo
lods
sub
xor
hlt
xchg
lret
stos
iret
jmp
call
add
cmp
out
fcomp
dec
enter
push
adc
sub
sbb
jns
mov
iret
aam
push
ror
repz
loope
out
sarb
sbb
add
add
dec
jnp
pop
and
andl
cwtl
addb
and
cmpsb
shll
in
dec
dec
pop
ljmp
add
push
add
fcmove
jl
xchg
add
mov
stos
jl
in
sbbl
or
xlat
lock
lcall
scas
inc
cmpsb
adc
mov
sub
push
fnstcw
sahf
mov
mov
imul
fsubrl
rorb
andl
push
insb
add
hlt
flds
cmp
ja
cmpl
and
xchg
stos
inc
test
movsb
pop
jnp
fidivs
je
add
lods
mov
xor
jmp
xchg
pop
outsl
mov
adcb
mov
push
fdivl
push
xchg
push
je
add
adc
pushf
ret
cld
or
cmpsl
fdivrl
and
adc
lret
or
cmp
aad
loopne
push
fs
pop
rclb
repnz
es
mov
adc
mov
add
inc
adc
or
add
push
cmp
add
sub
dec
pusha
daa
inc
call
push
xchg
aaa
bound
sub
mov
ror
add
add
or
cli
fistpll
dec
add
xchg
popa
pop
cwtl
lret
cwtl
xor
ss
icebp
outsl
add
cmpb
sar
or
icebp
push
and
adc
xchg
push
dec
jno
adc
mov
jae
loope
mov
mov
mov
das
add
mov
jb
lock
mov
popf
or
inc
clc
in
and
sti
add
adc
jnp
or
xchg
movsl
jle
cmp
add
lock
popf
stos
in
mov
loope
pusha
loopne
jmp
fldl
stos
stc
pop
add
mov
mov
push
mov
ret
add
or
sar
repnz
cld
add
lods
xor
add
outsl
fldt
push
js
dec
pop
jns
mov
pop
movsl
test
movups
add
pushf
sarb
sub
mov
xor
test
jmp
into
inc
add
dec
fwait
jo
lods
pop
push
shrb
sub
shrb
add
sub
and
mov
sbb
jns
aam
aad
cmp
inc
xchg
mov
mov
testb
mov
jl
push
in
repnz
cli
mov
jg
scas
cmp
fadds
ret
xchg
xchg
push
xor
xor
cmp
ja
mov
sbbb
add
outsb
add
and
sarb
fmuls
popa
in
sbbb
test
pushf
or
test
add
dec
cli
in
or
and
dec
and
scas
lds
xlat
rorb
cmp
cmp
mov
int
lcall
mov
ja
leave
mov
movsl
and
clc
xchg
cmp
pop
add
movl
movsb
rcrl
xlat
lcall
pushf
sbb
sbb
sbb
push
out
adc
mov
mov
mov
mov
push
mov
cmp
add
xor
add
mov
sbb
dec
rolb
mov
stos
repz
and
sub
daa
sbb
imul
cltd
mov
add
daa
aad
andb
xchg
dec
jns
pop
cltd
jg
pop
int3
or
fstpt
adc
imul
pop
inc
mov
xor
out
add
add
jg
rcrl
orb
add
je
adc
and
int3
xor
mov
in
std
jmp
daa
in
xor
or
cli
inc
sbb
sub
push
and
adc
je
add
nop
into
xchg
add
icebp
int
add
mov
fmul
mov
add
fisttpll
cltd
sbb
int
cwtl
push
popa
push
add
xor
pop
lea
push
rcrb
sbb
add
pop
pop
xchg
push
rolb
adc
leave
xchg
xlat
iret
or
add
and
push
divl
jp
rep
dec
jb
cmc
or
arpl
add
xor
mov
rclb
bound
cmp
push
add
in
adc
sbb
adc
push
mov
mov
add
xchg
je
pop
add
add
cltd
mov
pop
mov
pop
jle
mov
js
jo,pn
add
push
clc
gs
pop
cmp
subb
sub
pop
lea
fdivrs
sub
movsl
cmp
fsubs
xchg
fnstenv
les
jnp
test
add
insb
xchg
test
cmp
pop
popa
orb
and
jns
mov
rolb
stos
lock
sub
aad
out
mov
pop
enter
jp
leave
add
cmpsb
pop
push
add
cltd
pop
add
xchg
jb
add
cltd
jae
lret
add
sbb
dec
push
je
jno
jg
js
dec
sti
or
aam
cmpb
push
or
pop
paddusb
sub
rcrb
mov
faddl
sbb
mov
lock
push
mov
or
add
fsubl
roll
aaa
mov
mov
cwtl
xchg
xchg
or
test
sti
fnsave
fimuls
sbb
lods
jl
movsb
cwtl
mov
popf
mov
mov
lds
pop
hlt
ret
add
outsl
push
sbb
xchg
mov
jg
enter
mov
insl
in
inc
insb
mov
add
push
mov
add
mov
mov
add
pusha
or
shll
xchg
in
bound
ja
cmp
clc
test
es
mov
and
lods
dec
mov
add
in
sub
or
mov
cmp
add
xor
outsb
shrl
inc
mov
mov
xlat
loope
mov
outsl
push
pop
mov
add
in
int
add
and
jne
sub
sbb
std
add
cli
popl
pop
jnp
jno
gs
jb
repnz
xorb
dec
add
cs
icebp
add
out
xor
adc
pop
push
cmp
or
sub
lods
mov
mov
testb
xchg
sub
add
pop
cmpsl
pusha
add
std
push
cmc
insl
pop
stc
xchg
add
jg
cld
sub
lret
push
movsl
testb
lea
pop
pop
mov
ljmp
add
imul
and
push
add
sbb
add
or
mov
pop
add
cmc
sub
dec
mov
push
jae
stc
xor
pop
sub
shlb
add
mov
sub
sub
add
mov
xchg
sahf
sbb
movsl
mov
or
mov
jae
add
push
mov
jne
xor
daa
movb
jg
adc
sub
mov
pop
fstpl
stos
mov
arpl
sub
inc
add
enter
pop
shl
mov
and
mov
push
add
mov
mov
xchg
mov
lret
in
daa
add
pop
dec
adc
loopne
inc
add
in
jno
sub
repz
leave
and
lcall
add
inc
fdivs
jo
mov
bound
xor
xchg
sbb
dec
in
add
pushl
sub
push
setbe
lret
aaa
enter
add
stos
dec
add
push
cs
jp
lods
orb
cltd
imul
insl
jne,pn
add
pop
and
push
xchg
jmp
sarb
dec
or
in
repnz
cs
mov
push
or
add
lret
inc
into
lods
dec
faddl
insb
dec
mov
xchg
xor
add
xchg
cmp
pop
mov
scas
jno
xchg
lock
mov
ljmp
setne
pusha
adc
cmp
mov
js
fidivs
js
push
xor
add
sbb
cmp
ret
jae
cld
cmp
and
jns
add
dec
sub
add
and
insl
xchg
loopne
sbb
mov
popf
inc
sbb
cli
pop
cmp
test
pop
push
dec
dec
cld
add
imul
std
add
sub
mov
leave
inc
add
addr16
mov
xor
push
add
bswap
loopne
dec
mov
sbb
add
inc
adc
mov
stos
mov
and
lods
lret
ret
stos
sbb
adc
lock
mov
rcr
insl
mov
outsb
cmp
jbe
stos
icebp
cmp
leave
jo
xchg
hlt
movsb
add
and
bound
pop
jle
sbb
lcall
inc
or
inc
mov
outsl
adcb
sbb
mov
add
jo
fwait
stc
mov
push
sbb
clc
scas
dec
cli
pop
rclb
leave
repnz
out
daa
jno
or
test
int3
pop
jecxz
dec
je
xchg
xor
cmp
fadds
mov
push
push
jne
sbb
push
inc
add
mov
adc
dec
test
mov
push
add
jo
mov
add
xlat
adc
fstpl
mov
fistpl
add
lar
or
xchg
cs
mov
mov
test
test
lea
rclb
int3
repz
out
jl
rol
jb
or
jge
add
arpl
inc
movsb
rolb
lods
into
push
shlb
ficompl
push
lret
dec
pusha
jmp
sahf
frstor
add
jb
push
leave
clc
ja
add
lahf
xchg
imulb
popa
adcb
dec
add
jmp
fdivrl
repz
int3
mov
adc
inc
aaa
and
dec
pop
cmp
call
repz
mov
bound
mov
or
and
mov
add
inc
lods
xlat
sbb
jmp
sub
inc
cwtl
adc
push
jnp
imulb
js
ljmp
xchg
inc
mov
cmp
dec
and
iret
les
inc
push
lods
add
adc
mov
andl
in
stos
mov
test
pop
sbb
out
loopne
add
xor
push
mov
es
cltd
xor
adc
pop
xlat
inc
jno
and
jb
add
mov
cld
cmp
mov
iret
cld
add
xchg
ja
mov
repz
mov
push
add
loopne
sbb
mov
or
gs
imul
jecxz
sti
lret
mov
je
daa
inc
and
loopne
int
mov
inc
mov
xor
xchg
loopne
add
repz
scas
andl
xchg
das
pop
cli
push
ret
mov
lcall
daa
sbb
cld
std
dec
mov
daa
js
xor
sub
pop
add
fs
test
movsb
in
iret
mov
and
fnstcw
pop
out
lock
cltd
lock
mov
aam
mov
popa
and
mov
in
jp
add
rorb
out
mov
jg
add
sub
pushf
push
lea
sbb
scas
add
into
fstpl
insb
mov
and
dec
add
mov
or
ss
add
in
jle
int3
bound
fldl
inc
je
inc
sbb
and
add
push
pop
jns
cs
sub
sbb
sahf
or
add
mov
push
pop
sbb
pop
mov
inc
ljmp
jecxz
jae
add
clc
bnd
pop
stos
cmp
and
xchg
jne
lea
mov
aad
add
jecxz
xchg
add
mov
add
mov
lock
mov
pop
push
movsl
mov
stos
repnz
adc
leave
and
cld
or
push
adc
aam
mov
lods
and
xchg
add
mov
add
mov
shl
ret
mov
fidivrl
jecxz
cld
inc
xor
push
cmp
lahf
in
popa
sub
sub
xor
jmp
pop
mov
lods
out
and
add
stc
sub
dec
aaa
dec
pop
adc
add
sarb
add
jb
or
arpl
add
jo
sbb
pusha
pop
ss
in
sbb
push
add
gs
ret
sahf
lea
inc
mov
icebp
adc
push
into
pop
and
insb
pop
out
orb
cmpsb
xchg
cmc
pop
test
addl
scas
xlat
add
and
mov
dec
xor
add
aad
xchg
add
add
ds
in
ret
sub
mov
add
das
lods
shll
fs
sub
incl
add
inc
jb
add
xchg
scas
aas
pop
sub
pshufw
pop
xchg
insl
std
mov
add
js
add
fidivl
pop
xor
stos
push
lret
xor
loopne
cwtl
jg
add
mov
inc
mov
js
adc
adc
scas
or
pop
push
adc
jmp
popf
and
mov
movsl
add
pop
dec
mov
push
xor
test
add
jno
mov
enter
add
arpl
movd
push
and
lds
add
add
cmpsl
add
pop
push
shl
push
or
mov
inc
pop
incb
das
xorb
movsb
jae
push
test
push
hlt
or
add
pusha
out
xchg
xsaveopt
xchg
in
movb
inc
mov
pop
outsl
pop
imul
add
add
pop
mov
add
xchg
add
add
adc
cmp
push
mov
cmp
or
add
or
cs
push
sahf
test
fstl
cld
enter
pop
mov
test
push
pop
pushf
add
leave
stos
cltd
out
add
xor
clc
in
insl
add
test
scas
fdiv
stos
leave
rcrb
sbbl
cmpsb
negl
inc
mov
mov
out
fs
jmp
pop
cs
and
add
cmp
fs
sub
shrb
inc
out
mov
psrad
mov
mov
add
call
add
pushf
cld
xchg
push
sbb
push
sbbb
aaa
ret
movntq
mov
adc
jg
shlb
mov
push
cmp
mov
testl
inc
mov
jo
cwtl
outsb
cmp
leave
dec
sarb
outsb
mov
lock
adc
hlt
xchg
lods
add
scas
dec
std
jl
mov
fmuls
outsl
jmp
push
out
xchg
xorl
je
xlat
pop
and
add
js
and
mov
call
out
or
xor
test
popa
cs
pop
sub
sbb
adc
loopne
pop
add
mov
pop
mov
adc
rorb
push
add
lods
fs
pop
xchg
jle
xchg
add
add
pop
mov
lock
rorl
call
in
insb
add
inc
testb
rcrl
repnz
add
inc
mov
ret
and
inc
shl
xor
adc
imul
bound
outsb
inc
pop
call
xor
push
fsubrs
scas
addb
jl
pop
dec
add
pop
es
jmp
lret
shlb
inc
insb
pop
xchg
dec
push
inc
push
addr16
mov
jp
stos
sbb
imul
xor
jo
add
popa
push
jno
cmpb
in
add
sub
mov
faddl
jno
push
movsl
add
add
pop
mov
fiadds
fsts
add
push
loop
mov
xchg
ss
cmpsl
mov
mov
dec
out
sbb
or
and
shlb
jbe
test
mov
les
xchg
insl
repz
pop
movsb
add
jge,pt
lcall
or
outsb
insb
push
push
jbe
adc
fdivl
dec
add
push
repnz
add
mov
inc
jmp
add
lahf
insb
jne
shlb
xor
mov
or
pop
cmp
inc
stos
pop
out
jns
add
into
aam
pop
inc
mov
adcl
jmp
add
xchg
mov
loop
push
fstps
shlb
push
jno
add
popa
add
repnz
jnp
jbe
xchg
lds
mov
or
fildl
sbb
pop
js
aam
rcr
dec
loopne
push
notb
cld
cli
or
add
cmp
dec
add
xchg
lahf
add
sbb
subb
add
push
mov
scas
sbb
testl
jno
adc
ja
imul
jns
addl
orb
repnz
movsb
pop
sub
dec
add
insb
xchg
jl
xor
add
in
mov
clc
jg
mov
cwtl
push
enter
sub
fnstcw
fs
sahf
sub
mov
pop
push
pop
inc
push
xchg
cmpb
inc
adc
add
fists
movsl
adc
push
cmp
xor
mov
add
dec
popf
mov
sub
syscall
enter
pop
dec
xor
cmp
inc
add
les
insl
aas
sbb
mov
jnp
or
xchg
inc
or
add
fisubl
leave
call
jmp
and
sbb
adc
fidivs
jae
add
cltd
sarl
jmp
cmp
lods
and
test
xchg
push
mov
call
fcomp
mov
iret
inc
daa
outsb
inc
ud1
lods
int3
in
loopne
cwtl
mov
dec
in
push
xchg
repz
mov
outsb
add
jbe
jo
fcomps
jle
inc
mov
pop
inc
add
in
fstl
push
mov
test
lret
cld
add
push
mov
xor
sub
shlb
inc
popf
int3
call
rorl
pop
dec
xchg
xorl
add
adc
fsubs
movsl
sbb
test
or
adc
shrb
sub
add
pop
lds
dec
aad
push
fcompl
arpl
loopne
loopne
push
sub
je
cmp
and
or
stos
das
and
push
jge
add
int
jne
jle
rcll
in
dec
or
mov
add
xor
cltd
das
sahf
push
hlt
push
or
adc
xor
cmp
testl
pop
aad
movb
loope
add
rolb
incl
add
xor
xlat
add
xor
clc
shlb
push
imul
pushf
enter
mov
ret
dec
mov
stc
lret
push
cwtl
mov
fistpl
pop
sub
testb
add
or
dec
sub
leave
sbb
xchg
add
je
lds
rcrb
iret
add
mov
xchg
jp
pusha
push
push
aaa
add
cmc
in
add
and
jg
or
loopne,pt
add
mov
add
add
fucomi
out
pop
roll
cmp
xor
into
popf
xchg
shlb
aam
sub
cmp
aas
add
sti
fdivrl
jns
cmp
andb
cmp
in
inc
lahf
dec
imull
mov
add
rolb
cli
mov
stos
add
call
mov
xchg
pop
cmp
pop
fiadds
fsubr
test
inc
test
xchg
mov
clc
push
and
loop
sbbl
or
jb
out
rol
loope
add
push
adc
imul
jle
xor
mov
aad
pop
push
jmp
add
insb
dec
les
mov
andb
js
add
dec
jp
inc
sbb
add
sub
jle
mov
movsl
xlat
leave
add
adc
add
sub
push
mov
cli
add
xlat
push
addb
mov
and
stos
dec
pop
adc
pop
rcl
sub
mov
outsl
jmp
stc
sbb
add
dec
add
test
xchg
fwait
test
push
mov
gs
pop
fnstcw
rcr
dec
and
add
pop
mov
lahf
test
add
adc
pop
cwtl
mov
push
add
decl
out
add
sbb
movl
popa
mov
jb
testl
inc
pop
push
mov
and
in
out
add
push
pop
push
call
mov
test
add
xlat
stos
push
cli
leave
and
add
flds
fst
adc
cwtl
inc
xchg
xchg
aam
add
pop
jne
ja
iret
mov
mov
outsl
les
imul
lahf
ret
sbb
daa
add
jbe
in
adc
add
icebp
add
outsb
add
imul
cmp
push
push
lret
rolb
popf
cmp
cltd
xchg
aas
inc
xchg
cld
and
jge
push
dec
pop
dec
cli
add
adc
push
pop
in
sbbb
jp
les
push
xchg
cmp
test
sbb
pop
cli
add
gs
cmp
push
mov
or
pusha
lret
sbb
push
movsl
inc
leave
and
xlat
bound
cwtl
dec
push
sbb
cld
mov
push
mov
add
xor
ds
in
je
fstpl
add
pop
cmpsl
aam
inc
ret
insl
ds
sbb
dec
in
dec
jnp
add
mov
stos
pop
mov
cs
xor
arpl
sti
add
fldcw
ljmp
out
jl
ss
cmp
pop
mov
add
or
sub
ljmp
dec
js
cmp
mov
add
pop
xchg
sub
ret
mov
add
fisttpll
in
pop
outsb
push
pushf
jecxz
ss
jl
nop
inc
add
notb
and
mov
lods
insw
add
jnp
mov
inc
sbb
adc
int
mov
popf
cmp
push
add
shl
push
pop
repz
incb
inc
push
gs
add
jl
decl
pop
mov
es
xchg
rcr
jnp
add
movsl
inc
andl
dec
push
mov
call
jecxz
rorl
pop
add
iret
loop
jnp
push
adc
sbb
cmp
dec
mov
scas
add
cld
fcmovu
inc
data16
popa
int
adc
pop
push
add
pop
movb
push
mov
sbb
mov
ret
pop
add
fs
jle
pop
aad
jb
jle
or
inc
and
test
mov
into
xor
add
daa
or
fnstcw
loopne
inc
adc
push
out
add
fbstp
sbbb
xor
push
pop
popf
and
inc
aam
orb
mov
dec
mov
repz
aam
cmp
sahf
hlt
lcall
add
fidivrs
mov
add
or
scas
sbb
les
sbb
push
adc
jnp
divb
add
ljmp
in
mov
pop
shrb
and
inc
mov
push
std
adc
cmpsb
pusha
mov
fadd
and
or
cld
xchg
push
addl
jg
out
add
lods
jmp
loopne
xchg
cmp
movsl
pop
rcrl
push
rcrl
jecxz
lret
ja,pt
fistl
jg
and
push
xchg
cmp
cmp
adc
xchg
pop
xchg
add
dec
mov
add
jb
sbb
lcall
in
test
test
and
push
sub
sub
or
pop
fwait
jbe
shlb
addr16
mov
insb
rolb
xchg
cwtl
and
pop
or
cmpsl
adc
fdivr
jno
add
cmp
in
dec
testl
sub
mov
mov
add
repz
adc
add
movsl
popa
jmp
stos
dec
add
push
inc
xchg
mov
rcl
enter
lods
dec
mov
ds
jo
mov
mov
add
push
xchg
test
das
pop
outsb
add
pushf
imul
fldenv
pop
sbb
or
pushf
ret
dec
add
pop
mov
cwtl
or
lret
lods
sarl
xchg
xor
je
xor
add
movsl
lock
cmc
adc
jg,pt
cmp
cwtl
int3
bound
or
xor
sbb
jno
das
adc
sub
jne
cmp
es
pop
in
pop
and
addr16
sub
add
call
mov
add
in
and
call
shlb
adc
subl
dec
push
insl
push
jnp,pn
jae
sub
gs
sbb
xchg
inc
pop
sbb
roll
loop
pop
or
sbb
mov
adc
sub
fbstp
push
dec
adc
mov
xchg
mov
mov
add
and
sarl
mov
test
jno
insl
mov
frstor
fwait
cmc
inc
gs
into
dec
rorl
pop
repnz
loop
adc
add
add
push
enter
mov
mov
xchg
aad
les
cltd
add
lret
bound
pop
sarl
mov
add
dec
jp
xor
nop
add
ret
add
or
test
add
cmc
mov
push
lds
xlat
or
test
rorb
mov
loope
fwait
xsaveopt
imul
out
in
push
popa
insb
lret
clc
and
pop
pop
add
int
or
push
lods
adc
imul
fisttps
add
bnd
push
stos
addl
sbb
add
cmp
mov
out
js
pop
mov
fmull
stos
out
ds
cmp
popa
std
jle
popl
jno
cmc
push
jecxz
mov
sahf
mov
adc
jnp
add
arpl
sbb
cmp
push
and
in
jl
adc
jne
sbb
pop
int3
fcomi
sahf
add
inc
mov
lret
addb
sub
sbb
pop
mov
add
stc
dec
popa
movsb
stos
sub
rclb
jmp
sbb
cwtl
add
pushf
rorb
add
xchg
test
repnz
mov
out
pop
xor
sub
test
adc
add
arpl
sub
jb
ja
add
xor
cli
add
scas
or
inc
cwtl
pushf
adc
sbb
int3
xchg
test
push
ret
add
mov
dec
add
lods
and
pop
xorl
push
lock
pop
enter
adc
lcall
cmp
leave
jmp
push
in
cwtl
fcomps
lock
dec
rorb
lret
dec
add
lods
iret
out
subb
testb
mov
clc
rcrb
lds
xchg
outsl
push
loope
sbb
push
inc
fiadds
and
add
ljmp
mov
int
mov
rcrl
add
mov
jle
or
add
stc
xchg
out
push
lcall
clc
mov
push
lret
andnps
jge
cs
idiv
add
in
movsl
loopne
dec
imul
outsl
stos
jno
sub
push
mov
xchg
add
dec
and
fcoms
xor
int
cltd
cwtl
or
push
sbb
lock
shll
lahf
push
and
cmp
mov
sbb
ret
or
scas
insl
jl,pt
dec
jo
gs
loop
add
add
push
iret
ret
loopne
rorb
outsl
sub
mov
adc
ja
lcall
add
or
jmp
cmc
scas
scas
pop
sub
in
add
cmp
ret
stc
jbe
shl
mov
add
std
xchg
scas
mov
add
stos
lcall
lods
bswap
ds
and
test
push
add
add
cmpb
in
stos
push
in
fildl
arpl
pusha
lret
mov
adc
je
xor
sbb
stos
mov
jp
loopne
pop
cmp
mov
daa
hlt
and
add
or
and
push
jmp
push
inc
rolb
daa
pop
mov
pusha
xchg
popl
test
cmp
loopne
call
test
inc
arpl
mov
ds
or
push
dec
cs
scas
add
mov
inc
adc
insb
lods
ds
jae
jg
add
test
js
shrl
faddl
cld
add
mov
add
outsl
mov
mov
cmp
add
mov
pop
add
sarl
mov
add
pop
adc
mov
into
xor
or
cmp
lods
add
mov
popa
cmpsl
sub
dec
in
lds
bound
jne
adc
xchg
add
add
shll
mov
lahf
lret
jnp
pop
imul
popf
scas
xorb
inc
scas
jmp
cs
inc
push
or
inc
push
adc
cmp
xchg
outsl
fstl
rolb
aas
sub
adc
hlt
sbb
add
cld
fisttpll
add
jle
mov
cmp
mov
pop
lahf
add
add
dec
cmp
lock
lret
pop
mov
pop
popl
or
cvtpi2ps
lods
and
scas
xlat
mov
mov
out
xchg
sbb
outsb
xchg
daa
repz
add
mov
enter
lods
mov
ja
add
int
orl
cmp
add
sbb
or
sub
and
mov
test
je
pop
shlb
ret
add
push
cltd
sub
sbb
pop
lods
dec
shll
pop
or
add
adc
cmpsb
adc
and
mov
int
xchg
popf
push
mov
xchg
dec
std
insb
in
add
pop
push
arpl
push
pop
pop
out
and
adc
add
movsb
addl
dec
or
pop
mov
xchg
ss
das
push
sahf
and
mov
sbb
xor
mov
jae
fstpl
lds
add
sahf
fsubr
lock
nop
add
xchg
add
cmp
mov
sti
fsubs
mov
push
add
imulb
mov
cmpsb
lret
push
cmp
scas
or
jg
sbb
insl
subb
xor
scas
loopne
add
mov
or
iret
cmp
add
rorb
in
sahf
add
rcrb
mov
push
or
mov
add
jmp
xchg
dec
std
mov
orb
adc
aam
add
bound
subl
jmp
lahf
adc
push
adc
and
add
js
insl
and
mov
lds
push
xor
fldenv
negb
adc
push
pop
mov
popa
cs
or
jl
nop
xchg
shrb
cmp
mov
add
jne
fs
aad
pop
adc
aas
mov
repz
add
xor
nop
ds
and
mov
add
mov
daa
sub
push
dec
mov
sub
mov
add
int
call
cmpsl
dec
cmpl
push
loopne
xchg
sbb
mov
addr16
in
popf
lcall
aad
push
mov
mov
movsb
push
enter
rorl
xchg
arpl
sarl
cmpsl
mov
xchg
pop
ret
negl
cld
jb
loopne
add
cmp
add
ja
roll
mov
faddp
outsb
add
scas
fwait
stos
xchg
jg
lock
add
repz
fucom
shll
or
adc
aas
jnp
mov
fistpl
sysexit
popf
xor
jle
dec
cld
sub
shl
ds
int3
ljmp
in
rcrl
testb
orb
sbb
verw
clc
add
push
idivl
cld
jmp
cmp
int
fdivr
lock
pop
cmc
clc
jae
push
int3
movsb
xor
jg
add
cmp
cmpsb
sbb
add
shlb
add
mov
or
loope
mov
and
add
dec
cmp
pusha
cmp
dec
std
mov
sbb
mov
sti
add
lret
push
lcall
jne
aas
and
adc
add
mov
push
mov
clc
aaa
add
mov
notb
add
jno
ltr
test
lret
add
or
adc
mov
or
lcall
je
sub
jecxz
jle
add
stos
fbstp
dec
mov
shlb
cmp
add
inc
xchg
dec
sbb
mov
pop
out
andl
push
daa
jle
add
lds
sub
xchg
aad
stos
sub
push
and
dec
add
jmp
or
inc
shr
je
clc
push
pop
jl
push
fadds
dec
pop
mov
andl
add
and
pop
fisttpll
jae
jb
cmp
aam
and
add
jmp
xchg
and
and
adc
add
pop
sarb
push
sahf
xor
sub
std
add
inc
rcl
inc
add
mov
adc
jle
add
xor
xorl
call
push
icebp
add
cmp
mov
mov
arpl
add
cltd
dec
scas
insl
push
clc
sti
add
add
mov
jo
add
mov
pop
jnp
add
push
sub
inc
inc
xor
out
add
aaa
imul
ret
add
stos
lret
jl
sbb
jnp
xchg
enter
mov
cwtl
add
mov
scas
cltd
add
jbe,pn
push
mov
add
xor
insl
pop
jge
add
or
add
pop
mov
adc
mulb
jecxz
and
jmp
mov
fwait
inc
mov
xor
mov
add
and
jno
int
add
push
jge
jno
add
mov
adc
es
push
fdivrl
rcll
cmc
aas
stos
cmp
cli
dec
pushf
mov
mov
nop
add
mov
pop
pushf
jle
scas
or
shrb
loop
enter
loopne
daa
leave
add
out
add
pop
pop
add
lcall
sub
es
add
scas
xor
add
enter
ret
outsb
inc
jg
stos
cmc
add
insb
test
jno
add
sbb
shll
mov
daa
verw
lret
dec
popf
push
sbb
sbb
in
xchg
add
mov
or
icebp
mov
add
push
repz
sbb
mov
mov
stc
sbb
add
ja
add
dec
sti
inc
add
push
fisubrl
jecxz
incl
pop
xlat
scas
dec
sub
cmp
or
push
add
mov
jle
pop
and
mov
add
sbb
add
push
test
push
dec
add
sub
movsb
inc
shlb
mov
and
jg
bound
add
xchg
movsb
cltd
mov
add
push
add
sub
or
int3
lds
jnp
call
jns
xchg
inc
imul
ror
or
xchg
sbb
out
lcall
out
mov
test
pusha
filds
sbb
push
sti
repz
fldl
push
out
jne
aaa
int3
inc
add
jo
pop
jb
add
ja
pushf
add
or
loope
daa
iret
mov
pop
pop
mov
int
es
imulb
sahf
lds
mov
repz
dec
adc
cli
and
add
push
cs
bnd
test
rorl
cmpb
into
and
pop
and
or
jmp
movsb
dec
repz
rorb
pop
hlt
cmp
or
in
adc
es
jb
inc
add
mov
clc
jns
rolb
xor
add
dec
outsb
lret
add
mov
ja
or
pop
or
fs
jmp
pop
xor
sahf
adcb
lcall
or
mov
add
mov
mov
ficoml
imul
sbb
std
daa
add
add
adc
cmpsl
sub
adc
lahf
pop
ljmp
dec
xor
jg
add
mov
cld
lcall
loop
inc
cmp
add
mov
pop
adcl
test
add
jbe
ss
jne
sbb
loopne
push
mov
cmp
pushf
pop
insb
shrb
inc
test
jae
xchg
pop
rolb
lret
xchg
add
push
loopne
jecxz
jo
add
push
pop
addl
inc
xor
inc
aam
xor
jne
insl
and
xlat
lahf
add
mov
lds
push
jae
and
imul
loop
xchg
rolb
les
add
mov
dec
add
ret
sbb
mov
imul
jle
fcoml
stos
subb
fsubrp
push
adc
mov
incl
adc
pop
adc
fs
addl
inc
outsl
and
in
scas
add
dec
icebp
push
push
out
sbb
mov
inc
repz
test
add
subl
hlt
add
cmp
sub
stc
movsl
sub
daa
sbb
icebp
inc
add
bound
or
lret
sub
leave
pusha
test
push
lahf
cmp
int3
adc
xlat
addb
cmpsb
loope
lret
mov
add
inc
push
in
sbb
fs
dec
add
neg
xchg
mov
and
cs
sbb
xchg
push
pusha
test
add
jnp
cmp
xor
ljmp
jne
jmp
xchg
sub
adc
mov
cwtl
incl
leave
mov
adc
ret
in
stos
push
jmp
mov
test
adc
jns
add
push
sahf
mov
movsl
mov
cwtl
cmpsl
inc
push
outsl
mov
add
lcall
jp
popa
loope
cltd
cld
jae
add
fistpl
xchg
rcll
add
dec
sub
mov
nop
add
popf
sahf
pop
fsubl
popa
push
mov
push
fwait
push
add
add
cld
divb
mov
jnp
repnz
add
pop
sti
clc
xlat
adc
leave
dec
xchg
cmp
dec
aam
cmp
or
xchg
inc
add
mov
cmp
jns
lldt
adcb
cli
ss
hlt
jl
cmp
push
test
jle
add
fildll
dec
cmp
arpl
stos
mov
and
pop
pop
xchg
mov
es
xchg
lahf
mov
adc
mov
mov
sub
mov
mov
fiaddl
les
push
mov
pushfw
int
jo
xor
sub
dec
adc
enter
add
jae
in
std
or
add
shlb
push
and
add
arpl
aad
mov
insl
ja
sbb
mov
cmp
add
outsl
dec
fwait
cmp
adc
add
mov
cmp
add
mov
jge
adc
add
out
lods
xor
hlt
cmovne
insb
movsb
mov
insl
mov
push
iret
mov
fiadds
mov
or
out
mov
xchg
push
scas
divb
cmp
add
xchg
shl
mov
lcall
ret
imul
icebp
sbb
inc
movsl
cmp
add
fwait
lock
add
cltd
jo
adc
fwait
sbb
fsts
call
stos
mov
sub
dec
std
pop
add
into
cmp
adc
mov
fadds
test
cmp
cmp
xchg
outsl
sbb
jne
fstpl
outsb
iret
push
inc
cwtl
push
sbb
and
sbb
test
xchg
pop
jns
cld
out
rcrl
incb
inc
out
adc
mov
lods
push
sbb
xlat
scas
out
add
adc
push
add
mov
add
cmp
decb
call
add
add
xchg
dec
adc
sub
mov
add
cmpsb
and
xchg
add
clc
sbb
push
add
sbb
hlt
jo
add
loope
xchg
lock
add
icebp
clc
cmpsb
add
pop
test
mov
out
mov
push
sbb
enter
ret
into
cmpsb
add
rorw
loop
add
push
test
mov
fldcw
cwtl
data16
adc
push
cld
xchg
sbb
addl
out
pushf
jno
jmp
add
dec
loop
paddusb
int
adc
add
out
add
in
xor
add
jb
movl
flds
or
and
or
out
add
rcrb
mov
bound
repnz
xchg
push
lret
dec
sbb
add
js
enter
stos
jns
mov
add
fwait
addr16
add
add
sbb
punpckldq
jb
mov
inc
clc
xchg
and
add
xchg
push
addr16
sahf
push
sarl
ljmp
cld
inc
fildl
mov
pop
add
mulb
xchg
inc
sub
jp
adc
insl
imul
add
int
sarb
pop
test
lahf
hlt
add
dec
sti
mov
lcall
dec
xchg
cwtl
add
pop
mov
pop
mov
add
jnp
pop
push
adc
lret
movsl
sahf
xchg
subb
outsl
daa
in
adc
dec
add
or
das
cmp
jae
rclb
cmp
rolb
negb
push
and
sti
cmpl
xchg
sub
fadds
jne
adc
mov
cmpsb
imul
popf
test
adc
add
subb
add
dec
hlt
mov
orl
add
jg
std
addb
fwait
add
sub
ja
add
mov
popa
mov
movsb
xor
dec
dec
lahf
cmp
addb
jnp
or
mov
and
mov
ret
filds
mov
push
and
in
sub
pop
imul
and
lcall
inc
sbbl
sbbb
sbb
dec
test
fsubl
and
add
and
pushf
jl
or
or
in
or
cmp
pop
scas
jns
or
jl
add
loopne
mov
out
inc
sub
xorb
inc
rcr
cmpl
loopne
xor
loopne
xchg
out
cltd
mov
pop
enter
dec
loop
add
loope
push
and
add
loopne
pop
fidivrl
add
dec
mov
cli
aas
add
subl
xchg
inc
mov
rcrb
mov
add
pop
push
add
adc
jecxz
and
and
insl
xchg
cmp
fsubl
aas
jbe
mov
cmpsb
les
lea
sbb
mov
fwait
mulb
mov
cmp
and
int
push
pop
popa
adc
jbe
stos
add
or
jl
shrb
push
sub
or
js
dec
cwtl
ucomiss
movsb
out
mov
jg
xlat
adc
pop
mov
push
mov
ret
call
movsl
jnp
movsb
lock
add
aas
lock
sahf
push
dec
cmp
pusha
idivb
fnstenv
movsl
jb
aas
sbb
and
stc
add
and
mov
mov
rorb
and
jno
jle
sub
push
xor
jp
add
sti
test
ret
sub
lods
inc
test
mov
cmp
xor
stos
jp
ret
addb
inc
push
inc
add
jno
add
stos
mov
mov
cmp
cmp
dec
xorb
push
xor
jne
jle
in
sbb
and
add
inc
aas
cld
xor
cltd
pusha
or
xor
imul
cmpsb
nop
add
dec
addl
pusha
mov
pop
mov
test
sbb
cmpsl
jle
cmp
dec
repnz
and
stc
in
shll
push
sahf
adcl
jno
nop
mov
dec
xchg
in
data16
or
push
jmp
adc
subb
mov
rcl
sarb
outsb
sub
add
jmp
popf
sbb
jp
lock
dec
inc
lock
fimull
popa
mov
mov
int3
cmp
dec
xor
xchg
add
imul
outsl
dec
cmp
and
mov
add
cmp
jle
add
repnz
ret
movsb
add
adc
inc
add
mov
or
mov
loope
pop
push
mov
jmp
outsb
push
je
mov
add
out
fnsave
inc
fcoms
jge
lcall
cmpsb
xchg
dec
or
jg
or
jnp
xor
int
cltd
testb
pop
mov
pop
mov
jmp
push
dec
xlat
ss
loopne
sub
popf
out
shlb
cwtl
enter
mov
dec
testl
push
inc
add
imul
push
add
xor
pop
gs
je
cmpl
add
pop
les
loop
xchg
or
icebp
add
andl
cmpsl
lcall
ds
add
cmp
nop
mov
jle
sub
push
fadds
sbb
test
lock
xor
popa
sbb
mov
clc
add
mov
sbb
cmp
jnp
push
dec
push
cwtl
lods
add
adc
ljmp
xor
add
jecxz
xchg
pop
add
sub
xor
push
dec
inc
test
add
pop
mov
cmp
cwtl
fcom
out
xlat
sahf
or
mov
add
mov
mov
sarb
pop
mov
pop
push
mov
jne
imul
add
das
pop
inc
jo
rorb
xchg
aas
bound
addl
int3
jnp
jle
add
fcoml
in
push
outsl
dec
xor
inc
xchg
aas
pop
movsb
shl
mov
int3
or
xor
pusha
and
push
push
subb
rcl
push
xchg
xor
sub
insb
add
stos
in
aad
clc
dec
cli
xor
and
in
or
sub
adcb
dec
adc
subb
add
pop
xchg
dec
outsb
in
add
insb
sbb
mov
mov
cmp
mov
add
fwait
pop
outsb
mov
mov
iret
mov
pop
xchg
movsl
dec
add
call
ja
mov
testl
mov
mov
lds
outsb
loopne
mov
shl
adc
push
adc
leave
fdivrs
sahf
fmull
add
rclb
fwait
test
inc
int3
mov
jnp
or
int
loope
xor
inc
fwait
ss
lret
mov
jbe
addr16
dec
mov
adc
and
sti
add
and
push
mov
xor
roll
jl
dec
add
shr
sbb
int3
test
inc
mov
pop
mov
add
cmc
aaa
mov
or
and
repz
add
jo
lds
add
adc
add
dec
sub
add
pop
in
dec
pop
adc
cmp
loop
pusha
mov
aaa
add
scas
inc
out
add
fwait
nop
enter
add
shl
and
mov
scas
in
or
enter
add
add
cld
loopne
es
sub
loope
adc
lahf
push
sarl
rcrb
inc
cwtl
inc
gs
sbb
cmp
xchg
das
sbb
inc
clc
jae
pop
addl
and
add
cltd
movsb
pop
or
xor
pop
shrb
imul
loop
push
sub
sub
push
loope
push
stos
rcrb
fdivrl
push
push
dec
add
mov
push
lods
inc
xchg
in
pusha
pop
or
leave
mov
push
movsb
dec
gs
shrb
decb
push
jo
mov
adc
push
sbb
adc
cli
pop
add
repnz
repz
movl
push
int
mov
out
pop
ror
and
jg
ljmp
imul
ds
dec
sub
mov
cltd
leave
sub
sbbl
in
and
mov
mov
cmp
daa
jne
add
inc
or
cmp
dec
insb
fsubs
aam
fldl
inc
jmp
pusha
push
roll
push
xchg
mov
adc
mov
add
ret
xor
push
nop
or
out
cmp
faddl
pop
es
xor
roll
mov
push
or
add
sub
rcll
mov
mov
inc
add
add
jae
and
ret
adc
mov
iret
sub
in
add
inc
inc
test
pop
add
mov
addb
inc
imul
inc
add
mov
pop
enter
mov
testb
adc
fwait
cmc
lret
mov
or
hlt
jmp
add
cmp
dec
adc
jo
hlt
cmc
push
rcll
fisubs
jnp
add
pop
mov
push
orb
or
jl
cmp
push
rol
sub
jmp
add
push
lret
movsl
xchg
add
inc
fcmovnb
pop
inc
cmpsl
sbb
adc
add
into
ds
aam
adc
jae
dec
mov
in
repnz
lret
sbbb
movw
in
add
jg
and
inc
add
xchg
sbb
add
push
jns
add
xchg
shlb
or
arpl
mov
push
fs
fldt
add
repnz
pop
mov
lret
and
sar
jns
rolb
dec
daa
jno
adc
aaa
or
call
clc
jge
rol
add
in
pop
test
ret
add
movsl
add
mov
xor
add
add
js
and
add
inc
cmovle
nop
sti
add
sub
xor
daa
push
pop
in
pop
add
fstpt
das
lahf
ljmp
icebp
mov
add
push
jl
push
sti
push
mov
pop
xchg
or
pop
adc
inc
imul
loope
dec
mov
bound
insl
add
repnz
add
mov
ljmp
push
aad
pop
add
scas
mov
add
pop
or
sbb
jns
clc
sub
pop
int3
cmpsl
sbb
jno
push
stos
or
sbb
shrb
pop
mov
and
pusha
dec
inc
shlb
adc
push
mov
pusha
push
cltd
dec
aad
bound
xor
je
jmp
add
mov
add
cmc
mov
popa
xchg
mov
addb
inc
adc
and
ds
inc
jmp
push
shlb
or
rcrb
push
push
pop
mov
dec
test
add
fwait
cmp
add
stc
xchg
add
mov
add
jg
subb
mov
sbb
pusha
push
jns
inc
dec
rolb
push
inc
add
nop
out
dec
aam
je
in
fdivs
mov
loope
es
or
adc
xchg
xlat
pop
xchg
ret
push
add
repz
sub
jecxz
pop
jmp
add
mov
sbb
lea
push
sub
movsb
add
pop
test
sahf
push
xchg
jle
xchg
mov
aad
pop
loopne
mov
push
or
sub
sbb
inc
retw
push
add
notb
and
hlt
call
lods
in
mov
loop
add
cld
cmpps
add
fs
inc
adc
enter
jo
jmp
pop
test
xchg
insb
int3
rol
xorb
adc
jmp
lds
or
call
xchg
mov
pop
test
xor
rolb
jnp
sbb
cmpsb
add
push
adc
mov
adc
inc
push
push
mov
das
std
dec
iret
pop
sub
mov
sar
xorl
mov
insl
repz
pusha
xor
ss
rolb
ljmp
fldenv
sbb
xor
in
push
es
xchg
sub
inc
sarl
fs
pop
imul
jb
aaa
add
mov
mov
ret
jae
call
add
jb
cmp
dec
data16
adc
cmpsb
push
mov
pushf
dec
popf
shrb
lret
cmp
aam
iret
lods
push
mov
or
scas
xlat
lret
dec
popf
add
orb
jmp
xorb
xchg
andb
iret
cmpsb
pushf
add
pop
icebp
xor
stc
push
outsb
add
std
aad
push
push
shl
shrb
cs
jmp
test
scas
or
aaa
add
xchg
or
inc
js
add
and
jmp
pusha
dec
out
sbb
lahf
and
sbb
add
test
mov
jmp
mov
adc
xchg
lcall
add
aaa
add
ja
gs
hlt
fsubr
inc
add
outsl
shl
call
inc
mov
mov
pop
mov
add
mov
and
adc
imul
inc
jle
testb
out
jno
add
mov
inc
fisubl
jg
pop
xor
lock
sbb
xor
lret
mov
aad
int
or
nop
into
push
mov
sbb
lret
push
loope
pop
sub
inc
pop
test
jmp
or
dec
int
sub
dec
popa
out
enter
inc
je
mov
add
lret
mov
js
mov
jnp
push
cmpsl
addl
sahf
icebp
lret
add
fs
shll
and
cmp
mov
cwtl
jns
fsubrl
fcoml
mov
rol
sarb
xchg
icebp
add
inc
sub
or
push
orb
clc
push
jp
in
push
loop
and
push
nop
test
dec
hlt
push
fcoms
pop
sarb
jmp
xor
push
mov
pusha
add
stos
ret
aaa
or
xor
add
fdivs
inc
push
out
lret
add
lock
out
add
fsts
mov
leave
inc
scas
or
mov
mov
jp
add
ds
push
nop
loope
sub
fiaddl
cmp
cmp
negb
orb
rclb
fisttpll
in
push
xchg
cmp
add
mov
mov
xor
rcrl
nop
dec
imulb
outsb
sbb
push
subl
sbb
xor
out
cli
inc
add
or
mov
jb
jo
int3
incb
data16
in
inc
push
enter
mov
mov
push
or
andl
add
ds
movsl
stc
inc
sahf
insb
add
insl
xchg
into
or
push
test
dec
ret
mov
mov
loopne
jb
cmp
mov
inc
lds
inc
mov
orl
adc
dec
ud2
or
in
mov
mov
movsb
out
enter
mov
insb
inc
mov
cwtl
or
and
mov
pop
addr16
jp
mov
fidivs
push
and
movsb
xchg
dec
loopne
add
sbb
jno
roll
leave
xchg
mov
sbbb
stc
adc
icebp
call
inc
loopne
dec
and
xorb
mov
fstps
or
xor
or
outsb
int3
and
inc
xor
add
fisubl
sub
out
data16
adc
gs
loope
or
ljmp
dec
insl
or
lahf
scas
jb
push
inc
lock
jle
add
ficomps
pusha
push
jae
cmp
or
inc
add
mov
test
xchg
arpl
pop
add
out
fists
insl
push
ret
add
pop
ficoml
cmp
pop
inc
mov
pop
incb
adc
jbe
push
xor
sarl
pop
fldenv
in
dec
pushf
jl
add
lret
adc
adc
imul
int3
xchg
dec
add
pushw
pushf
add
xlat
loope
outsb
orb
aaa
mov
jb
sbb
add
roll
add
roll
pop
ficoml
push
mov
inc
sahf
mov
adc
popa
mov
inc
mov
insl
outsb
add
and
imul
cmp
out
pop
fisttpll
add
adc
dec
popa
lock
clc
cs
sbb
jae
adc
into
mov
sbbb
aad
cltd
ds
subl
mov
push
xor
add
fld
mov
xor
xchg
pop
or
inc
ss
aas
hlt
cs
and
inc
fisubl
mov
lahf
test
enter
clc
pusha
push
fstpt
out
aas
sarb
iret
orl
pop
xchg
sti
sub
inc
push
xchg
into
jbe
add
jae
jmp
cmp
das
and
pop
adc
push
shlb
sub
icebp
rol
popa
imul
fxch
lds
bound
outsl
movsb
or
dec
rol
xchg
mov
outsb
roll
movsb
jecxz
add
adc
adcb
pop
push
fmuls
or
dec
add
cmp
fcompl
aaa
sahf
add
sbb
imul
insb
lock
ret
inc
shll
jns
les
pop
orl
fdivrs
outsl
addr16
shlb
loopne
inc
mov
xchg
aas
mov
pusha
int3
stos
sub
dec
testl
xor
xchg
imul
fnstenv
jle
rol
or
pop
push
scas
shrd
mov
add
imul
sbb
loop
icebp
fisubs
dec
xchg
data16
out
sbb
aad
sub
fidivrl
mov
or
mov
push
jmp
xchg
or
cwtl
push
faddl
and
hlt
xor
addb
push
test
dec
cmp
and
lahf
fmul
jb
add
ret
dec
xchg
add
pop
jbe
add
test
fs
and
in
div
add
aas
sbb
xor
mov
out
test
jmp
add
cmp
cld
repnz
addr16
mov
test
fs
adc
jne
jns
inc
out
int
sbb
dec
pusha
fsubs
js
and
xor
add
push
cmpsl
sub
xchg
mov
addr16
add
add
xchg
rolb
data16
sbb
in
xchg
flds
fstpl
pop
iret
hlt
add
lods
fsubp
push
and
das
mov
push
ret
movd
ljmp
arpl
pop
mov
cmp
sbb
pusha
jp
nop
bound
lcall
or
pusha
shlb
lret
push
jae
sbb
push
cwtl
shrb
pop
outsl
dec
add
cld
add
mov
orl
cmp
or
sub
or
in
outsb
adc
add
and
ret
lret
add
xor
cld
and
mov
into
adc
and
iret
rolb
ret
and
adc
push
cwtl
dec
mov
xchg
lcall
mov
daa
push
lahf
sbb
push
and
sub
add
rcll
cmp
movsl
jo
and
xchg
or
sbb
jl
jae
add
negb
add
es
mov
add
lock
dec
fs
in
mov
pop
or
xor
test
xor
addl
jbe
in
cmpsl
iret
inc
fbld
lock
dec
mov
inc
inc
adc
inc
out
sub
cmp
cmp
jp
sbb
movsl
call
leave
sub
dec
push
fwait
inc
and
push
enter
mov
sbb
add
aaa
icebp
jae
nop
sub
add
lock
and
lahf
das
add
movsb
jb
xor
insb
loopne
sbb
pushf
xor
adc
cmp
and
fidivrl
xor
pop
ret
leave
and
test
mov
inc
cld
xor
rolb
mov
ret
subb
bound
imul
jl
and
xchg
loopne
int3
pushf
push
cmpsl
je
jmp
push
cmp
mov
mov
sub
arpl
mov
mov
icebp
subl
jecxz
add
sbb
adc
jae
mov
test
arpl
xor
cmpsl
xchg
cmpb
sub
orl
push
xorb
push
lods
outsb
mov
mov
inc
or
lret
sbb
shlb
or
push
xor
jge
fbld
push
pop
les
pop
mov
vsqrtpd
and
orl
cmp
push
push
push
sbb
push
mov
mov
cltd
pop
cmp
cmc
stc
fmul
sbb
data16
js
dec
and
sub
jecxz
sub
and
and
cld
cwtl
pop
es
jb
mov
xor
mov
outsl
add
pop
lret
test
stos
subb
inc
cld
or
subl
add
insl
or
push
cmp
or
lret
inc
mov
sbb
leave
mov
jmp
iret
xchg
and
xor
enter
repnz
mov
mov
or
inc
leave
iret
orb
mov
adc
or
stc
sub
mov
lret
inc
and
jl
xchg
lods
arpl
iret
inc
outsl
inc
inc
and
cmp
icebp
or
outsb
lods
js
adc
mov
mov
fsubrl
adc
jbe
cmp
or
cmp
in
in
sbb
or
pop
sub
inc
dec
cld
sub
je
dec
sar
add
pusha
inc
adc
or
daa
rcll
pop
ret
or
pop
add
push
xor
add
sbb
push
and
loope
inc
xchg
leave
or
inc
mov
clc
test
fmull
jmp
or
or
jo
push
sub
loop
and
lea
and
mov
xorb
mov
jno
call
pop
xor
adc
cld
es
dec
lock
insl
idivb
call
mov
mov
popa
inc
lods
in
fsubrl
push
test
rol
xchg
ret
leave
rorl
xchg
hlt
pushf
sbb
xchg
push
adc
test
sub
addr16
or
mov
aad
int3
push
mov
dec
arpl
mov
hlt
or
test
or
jp
je
addl
je
mov
clc
jo
lods
adc
fsubrl
cmp
fdiv
divb
jge
bound
pop
add
cld
das
mov
stc
pop
xor
mov
xor
adc
or
xchg
sbb
add
and
inc
imul
into
test
aam
cmp
dec
rorl
xchg
dec
insl
or
sub
and
inc
cmp
imul
cwtl
or
loopne
mov
and
mov
adc
test
jo
adc
adc
mov
mov
add
or
loop
mov
loope
cmpsb
fcoml
test
shlb
fcoms
mov
ror
push
shr
mov
mov
repnz
ror
mov
xchg
sbb
loopne
sbb
and
or
call
xchg
adc
aam
sbb
int
sbb
lods
inc
lods
or
sub
push
xchg
mov
cwtl
imul
lret
repz
lret
push
clc
inc
sub
addb
aam
push
sub
out
in
leave
ret
fadds
sub
and
xchg
and
push
aaa
test
or
pushf
cwtl
xor
sub
inc
sbb
test
xor
inc
dec
addr16
push
data16
push
daa
or
repz
test
enter
dec
xor
loopne
popa
and
jg
gs
sub
adc
cmp
cmp
xor
sub
pop
xor
nop
stos
pop
dec
add
das
add
test
or
movaps
ja
rcr
adc
jo
and
jl
ds
adcb
pushf
sbb
inc
sbb
jle
or
sbb
js
or
ljmp
xchg
int3
and
mov
xor
add
call
xchg
clc
mov
ret
cmp
xchg
sbbb
js
xor
and
and
in
out
inc
pusha
cmp
or
or
nop
shrb
js
int3
and
stc
cwtl
arpl
clc
outsb
sbb
fsubrs
out
jnp
ss
in
push
rolb
stc
add
xor
dec
sbbb
push
jbe
jns
enter
nop
push
pop
or
movsl
je
out
jo,pn
cwtl
pop
and
or
and
inc
dec
test
cmp
jae
mov
orb
mov
push
dec
xchg
cmp
loopne
adc
sbb
enter
enter
pop
sbb
push
jo
push
insl
lcall
xchg
in
repz
ss
jmp
sub
sub
out
loop
ffreep
or
adc
cmp
cmp
aam
hlt
repz
push
lahf
xor
loopne
lahf
pop
adc
aad
ror
and
popl
adc
cmp
push
popf
jl
adc
add
mov
sbb
adc
daa
push
and
mov
push
out
int3
insl
sub
movsl
in
pop
sub
or
movsb
adc
mov
int3
inc
out
xlat
inc
mov
in
and
xchg
and
addr16
add
or
jns
mov
xchg
or
pusha
inc
mov
xchg
lret
push
xor
pop
xchg
add
mov
js
jl
movsb
movsb
arpl
or
and
sbb
or
xor
and
cmc
sbb
push
int3
jno
dec
aas
hlt
loope
add
mov
xor
bound
mov
xor
mov
jmp
cld
add
pop
mov
inc
cmpsb
sub
inc
iret
orl
sub
jae
pop
repz
data16
daa
mov
and
ret
inc
adc
out
sub
push
es
cmp
sti
loope
and
orb
js
xchg
push
popf
lahf
mov
inc
and
add
adc
pop
cwtl
adcb
lret
loopne
aaa
and
push
ret
dec
pop
sub
test
daa
xchg
aad
decl
nop
xor
data16
push
imul
sub
pop
jne
ret
inc
sub
ja
sarb
inc
pop
es
jl
lock
insl
int
push
sub
mov
cmpb
out
out
add
data16
sub
jg
xchg
je
xchg
push
or
inc
adc
repnz
adc
cmp
sbb
insl
fcmovnb
mov
dec
lock
inc
cwtl
inc
imul
pop
repnz
jg
js
fstps
sarb
and
in
sub
imul
and
mov
lahf
fwait
jle
bound
inc
xlat
into
and
lahf
enter
add
or
mov
pop
sbb
fsubs
jno
ret
ror
aas
add
add
jl
jle
imul
jg
adc
je
jge
lret
xchg
out
or
mov
insl
adc
inc
xchg
aaa
and
lahf
cmpsb
mov
mov
sub
loope
xor
push
andl
mov
push
in
adc
and
rclb
xor
es
push
mov
es
loopne
frstor
hlt
call
xor
xor
fnsave
dec
cmp
mov
cwtl
and
and
or
sahf
mov
sarb
or
lahf
das
shll
inc
mov
cmpsb
and
shl
and
sub
test
int
cmc
out
push
data16
sub
push
or
xchg
pop
mov
js
bnd
enter
jmp
or
lcall
dec
push
push
inc
testl
xorb
popa
pop
mov
sub
pop
mov
mov
mov
je
punpckldq
jns
or
cmp
push
push
aam
loopne
dec
pop
adc
inc
iret
js
xchg
and
das
bound
je
je
fsubl
push
add
push
push
pop
icebp
dec
sub
test
or
adc
leave
les
test
fistpll
or
inc
dec
orb
inc
xlat
mov
adcb
dec
loop
loopne
inc
jmp
push
and
fdivl
dec
cld
xor
dec
pushf
mov
xchg
cmp
push
ja
add
mov
into
aas
push
mov
xchg
jle
dec
rcr
push
pop
test
mov
or
or
mov
cmp
or
lret
movsb
sub
insb
adc
push
sbb
or
loop
xchg
fisubrs
scas
jns
mov
and
inc
into
std
out
add
mov
adc
jbe
adc
inc
and
or
ret
push
scas
jle
data16
or
add
mov
xchg
or
add
mov
es
pop
pop
inc
mov
push
mov
fisubrs
arpl
and
xor
sbb
pop
xor
push
or
or
inc
aam
mov
into
ds
mov
das
adc
mov
sub
xlat
movsb
sub
add
ds
sbb
xchg
lock
and
dec
sub
xor
sbb
popa
and
je
xchg
dec
add
faddl
sbb
sbb
enter
insb
test
cwtl
xor
daa
or
das
add
aaa
nop
mov
adc
mov
clc
or
test
into
fwait
and
andl
push
add
add
jg
sub
sub
in
in
jecxz
or
lahf
or
mov
pop
lds
lret
add
add
add
add
pop
xor
adc
lea
aam
sbb
sbb
ret
and
pusha
or
test
mov
inc
fcoml
adc
fdivrs
dec
xor
enter
or
sahf
test
mov
mov
mov
test
sbb
shlb
dec
inc
leave
insb
mov
ss
inc
xor
addb
and
xorb
pop
out
or
and
call
out
test
xchg
cli
cmpsb
xchg
inc
push
in
test
inc
or
lret
shl
push
lret
mov
mov
lea
in
iret
sub
leave
loope
xchg
cmp
xor
ljmp
cmpsl
inc
cmp
add
test
fwait
mov
ret
add
mov
movb
loopne
sbb
les
sbb
xchg
inc
inc
dec
fisubs
addb
fcoms
movsb
sbb
jmp
sahf
pop
jecxz
sbb
xor
or
mov
test
mov
fildll
dec
ja
xor
pop
notl
leave
aas
jecxz
xchg
sbb
rol
aas
scas
add
stos
lahf
cmp
xchg
add
dec
push
mov
sub
mov
in
jns
leave
sub
rolb
adc
and
imul
xor
lahf
and
sbb
cmc
test
fsub
cli
mov
inc
jp
adc
pop
adc
add
adc
mov
push
lcall
jnp
jo
sub
call
divl
fistpl
into
addr16
inc
sbbl
dec
cld
in
push
add
ja
jge
fnstsw
mov
mov
adc
xchg
sahf
imul
in
jno
enter
clc
in
bnd
mov
mov
jne
test
adc
popf
lret
sub
push
imul
testb
pop
dec
in
std
in
jle
mov
aad
sbb
addl
jb
pusha
jg
sbbl
mul
popl
fisubrs
rorb
inc
inc
call
dec
aam
dec
mov
mov
pop
push
pop
shrl
push
testb
jne
jo
xchg
add
jnp
pop
add
repnz
mov
adc
rol
xlat
ja
jns
in
fnsave
add
mov
mov
xor
mov
dec
dec
push
hlt
inc
cld
add
sbb
pop
cwtl
inc
add
test
add
xlat
pop
fs
lahf
pusha
inc
es
mov
mov
mov
test
add
int
add
clc
fcomps
loopne
icebp
cmp
negl
mov
test
lea
add
add
cmp
cmp
and
xlat
outsl
daa
push
push
cmp
das
xchg
lods
sbb
insl
sti
iret
dec
cwtl
aaa
sbb
add
push
push
repnz
push
gs
int
jle
sbb
and
mov
jnp
leave
mov
imul
aad
mov
fcmovb
lods
add
xorl
sbb
pop
mov
mov
xor
add
ljmp
add
mov
nop
jp
jno
adc
xchg
in
jmp
push
sub
add
movsb
fldenv
cmc
mov
cmpb
shr
data16
sub
enter
bound
testl
inc
jne
cmc
int3
jnp
add
or
add
fs
insb
xlat
add
btr
mov
jnp
jl
or
inc
mov
sbb
mov
add
scas
dec
imul
rolb
stos
sub
sahf
movsb
cmp
pop
ret
and
enter
flds
in
sub
std
add
cmpb
sbb
gs
cmp
jne
mov
out
out
je
jns
cli
scas
sbb
test
cld
into
mov
cmc
shrb
rorl
mov
mov
add
and
into
cmp
xor
sbb
sbb
enter
pushf
sub
enter
jbe
push
fiadds
bound
jb
aam
xchg
add
int3
out
clc
or
mov
inc
sub
aam
mov
in
add
pusha
mov
add
mov
mov
cmp
xlat
adc
inc
icebp
scas
sbb
rep
rcrl
mov
cmpsl
push
orb
jb
and
arpl
add
sbb
lock
int
cmp
in
dec
jp
adc
add
ret
xor
ljmp
xchg
mov
mov
mov
sub
mov
jp
xor
jae
ljmp
int3
mov
sbb
sub
mov
pop
insb
xor
iret
add
and
test
sbb
fst
test
shrb
cmp
cmp
xbegin
mov
testl
xchg
xchg
imul
adc
add
mov
cmpsb
add
jb
scas
mov
loopne
mov
mov
xor
test
cwtl
pop
pop
mov
sbb
add
dec
dec
into
mov
loop
popf
mov
hlt
add
adc
setge
sbbb
push
out
cwtl
fistpll
outsl
dec
add
inc
loopne
mov
cltd
in
push
jp
repz
push
pop
decw
pop
xor
pushf
and
popl
add
repnz
dec
adc
and
lods
pop
push
push
sbb
enter
push
inc
nop
push
add
pushf
cs
out
mov
fs
addb
pop
add
imul
and
jnp
lock
data16
push
fdivp
aas
clc
jmp
mov
pop
xor
cmp
fsubs
mov
pop
lcall
add
cmpsb
add
mov
jp
hlt
jmp
dec
outsb
pop
movsl
aaa
movsb
dec
aas
add
mov
push
out
xchg
and
add
inc
or
push
std
js
inc
pop
loopne
shll
add
jae
add
mov
adc
je
cwtl
add
leave
movsl
lods
lcall
cmp
ror
add
jb
pushf
and
lea
roll
ss
sub
adc
daa
sub
push
in
sti
pop
js
inc
dec
imul
jp
in
add
sub
xchg
into
sbb
rorl
clc
mov
ficoms
aam
andb
lea
dec
jo
and
or
addr16
xor
sbbb
dec
add
dec
sub
add
mov
lret
imull
cmp
sbb
add
mov
jl
jp
cmp
cmp
loop
add
xchg
xchg
sbb
dec
pusha
jecxz
aam
add
pop
add
mov
push
lods
xchg
xor
dec
add
cmp
mov
mov
addb
out
mov
rolb
pop
lea
out
arpl
popf
lds
test
add
cmpsl
cwtl
xchg
aaa
add
fcomps
movsb
vfrczpd
push
pop
cltd
in
jae
add
repnz
jle
or
mov
sbb
or
xchg
xchg
jae
orb
add
push
pop
imul
lds
push
pop
cld
pop
mov
fcomps
gs
push
fdivr
push
repnz
push
pop
clc
jne
adc
sbb
cwtl
and
cmpb
inc
mov
inc
add
les
lcall
les
cmp
pop
mov
mov
into
fists
xchg
cli
add
mov
call
jae
testb
cmc
cmp
xchg
inc
pop
out
test
cmp
lret
out
fcmovnb
outsl
addr16
add
mov
outsb
push
call
aam
jo
ret
mov
loopne
mov
or
fwait
cmpsl
jne
push
add
adc
or
sbb
leave
xlat
cmpsb
lcall
add
pop
mov
pop
mov
mov
loope
add
add
add
jp
jg
dec
jecxz
push
in
add
sbbl
vcmpps
pop
fcoms
jb
shl
mov
inc
fldt
dec
jge
add
movsb
sbb
cltd
sbb
xchg
rorb
ret
add
inc
call
add
mov
cmp
pop
std
xor
sahf
xchg
push
fcompl
cmp
lock
in
test
outsb
inc
sbb
data16
pushf
clc
pop
inc
mov
lea
mov
ret
les
in
mov
out
sar
pop
mov
sbb
adc
neg
add
jb
stc
jp
mov
stos
or
lock
mov
cld
mov
inc
dec
roll
das
or
sbb
mov
loopne
add
pop
rcl
mov
pop
or
pop
adc
dec
mov
std
fsubs
dec
mov
sub
mov
sub
test
push
cmpl
dec
mov
and
mov
or
ret
out
fdivl
inc
aad
int
lea
or
xor
mov
dec
and
loopne
adc
push
or
rcll
add
es
out
jo
adc
aad
mov
incl
jne
lock
int3
pause
call
xchg
and
jb
outsb
inc
addl
leave
mov
pushf
jo
js
rcrb
and
add
ret
jo
aas
cmp
add
fdivrs
adc
addl
daa
mov
test
aad
fdivrs
psubusb
mov
stos
popf
stos
add
mov
mov
xor
sub
js
cmp
repnz
push
add
cmpsb
or
mov
pop
les
cmp
push
add
mov
pop
xchg
and
repz
addl
sub
push
sub
and
sub
out
clc
ja
iret
add
jecxz
pop
lea
add
push
insb
cmp
inc
mov
adc
and
jmp
dec
sbb
xchg
xchg
push
ret
or
add
stos
sub
sbb
add
sub
pop
in
add
loopne
call
inc
icebp
sub
inc
mov
cmp
mov
mov
data16
mov
sbb
add
mov
lea
adc
enter
add
jae
aas
sub
cmp
movsb
push
add
jnp
pusha
call
xor
aad
sub
scas
movsb
sahf
test
inc
sbb
test
add
jns
leave
pop
pop
jmp
jge
std
popa
fsubr
adc
out
testl
cwtl
xor
int3
mov
or
adc
adc
sub
out
or
push
subb
mov
enter
pop
pop
nop
xchg
test
mov
fadds
mov
push
shll
mov
je
jno
les
popl
sub
cmp
scas
dec
cmp
add
js
xchg
push
out
mov
stos
cltd
stos
or
sub
leave
mov
xchg
je
rcrb
in
add
insl
iret
or
xchg
xchg
lods
sbb
test
sub
xor
jp
add
mov
jb
mov
int
sahf
stos
bound
cmp
insb
idivl
add
fnsave
xchg
leave
dec
shlb
loopne
mov
les
push
adc
adc
add
adcb
and
cmp
pop
sarb
cmp
dec
loop
mov
mov
cwtl
rolb
add
ja
sbb
cmp
sbb
adcb
mov
mov
add
test
add
sarw
jge
and
call
add
testb
inc
add
scas
es
add
or
into
dec
ja
cwtl
cli
adc
pusha
mov
repnz
mov
and
push
jge
jb
cmpsl
aad
adc
and
adc
pop
lock
mov
mov
pop
inc
pop
pop
shlb
adc
lret
xchg
inc
out
fstl
pop
add
out
pushf
jo
or
insb
inc
imul
mov
jne
mov
lret
cld
mov
sbb
test
lcall
data16
dec
dec
std
mov
add
mov
jg
add
lahf
ja
xor
ds
or
add
out
jp
push
sub
add
mov
xchg
loope
push
add
popf
sub
lock
aam
pop
add
sbb
inc
rcr
mov
push
hlt
mov
xchg
add
outsb
hlt
test
xor
mov
add
and
into
push
xor
add
insl
push
das
sub
ret
out
repz
cli
gs
loop
out
jle
mull
push
call
sti
add
cmpsl
push
mov
sbb
ret
mov
fsubrs
or
and
and
imul
arpl
iret
push
cld
jbe
es
sub
aas
ss
pop
in
and
dec
mov
mov
repz
xlat
add
mov
mov
aam
cmpsb
sbb
rcl
xlat
cmpxchg
aas
lahf
fwait
aad
addps
dec
sbb
int3
xchg
test
fcomi
hlt
popa
xchg
gs
dec
add
pusha
and
inc
call
cmp
push
cmp
push
mov
ret
shlb
loop
orb
xorb
hlt
cmp
mov
dec
xlat
add
or
pop
fisttpl
int
leave
popa
cwtl
cmpb
scas
adc
cmp
add
pop
xchg
pop
sub
mov
mull
fistpll
and
xor
push
daa
xor
add
jge
fidivl
and
and
sbb
push
outsl
jmp
jge
repz
and
pop
mov
mov
cs
test
pop
mov
hlt
lahf
add
roll
mov
repnz
bswap
rolb
shlb
xor
add
daa
out
decl
rolb
data16
in
pop
add
stos
jo
add
in
add
out
pop
xchg
pushf
inc
inc
nop
or
out
loope
or
inc
xchg
push
add
clc
sub
push
orb
mov
lcall
mov
int3
cmp
in
jo
push
gs
or
sbb
mov
dec
sub
leave
dec
jg
adc
sub
xor
fxch
insl
out
adc
sbb
pop
stos
imul
add
in
cmp
aad
add
jl
mov
xchg
mov
pop
test
sbb
enter
pop
push
loopne
int
dec
mov
mov
xor
and
cli
push
out
add
cs
add
pop
jbe
ja
dec
mov
add
mov
xor
mov
inc
jae
sbb
test
mov
icebp
mov
jg
mov
or
hlt
push
dec
call
pop
xchg
fnstsw
push
xor
add
fwait
pop
cmpxchg
mov
fmuls
mov
cmp
push
push
pop
cld
icebp
pop
mov
sbb
cmp
xor
movsb
loope
and
or
lahf
popf
pop
push
jg
outsl
inc
adc
aam
mov
int3
rcl
and
inc
mov
sbb
jnp
adc
in
mov
pop
pop
xor
lock
dec
jno
inc
mov
add
stc
xor
fldl
jmp
jb
push
add
ds
stos
mov
mov
push
jp
add
in
ret
int3
cmp
xor
and
inc
loopne
pop
mov
xor
in
mov
inc
adc
sub
inc
pop
sbbl
cli
gs
add
adc
pop
popf
jnp,pt
push
icebp
testl
andb
outsb
test
push
push
orb
ja
or
loope
push
in
pop
int3
in
nop
popa
jecxz
jp
cmp
and
inc
mov
addb
test
shrb
add
sbb
int3
mov
lods
add
jg
and
imul
mov
xchg
mov
orb
inc
jle
pop
nop
fstl
movsb
add
cmp
push
aad
or
cmp
mov
rcrb
ds
mov
movsb
mov
add
scas
sbb
mov
sub
and
aas
add
fsubr
pusha
mov
jne
loop
cmp
or
pop
jmp
sbb
push
insl
aad
pop
inc
push
retw
xor
jmp
lods
xchg
push
aaa
add
mov
add
pop
cmp
and
lcall
add
xchg
xor
jg
add
add
loope
inc
add
flds
jne
push
cmpl
or
pushf
inc
sbb
sub
inc
or
leave
fs
adc
imul
jo
rcl
add
lret
pop
fs
add
in
arpl
add
and
mov
add
ret
clc
inc
mov
add
xchg
pushf
sub
jne
inc
or
jge
mov
jecxz
or
or
cmpb
rolb
push
insb
popa
jge
add
hlt
out
cwtl
aas
sub
add
ret
test
in
add
xchg
scas
push
pop
add
mov
adc
gs
mov
add
and
fstpl
cs
rclb
rorb
das
loope
jp
ret
dec
jmp
push
cmc
ret
push
inc
and
lret
xchg
jb
out
ret
mov
push
or
popf
xorb
outsb
ljmp
inc
xor
int
push
or
rolb
add
movsb
and
sbb
or
cmpb
pop
jmp
stc
scas
add
jmp
pop
xor
mov
xchg
scas
test
xor
pop
es
add
mov
add
hlt
xchg
movsb
pop
fists
dec
flds
sarb
push
or
or
jnp
jl
push
cmc
nop
jp
das
aas
or
or
scas
pop
sbb
or
xchg
jne
or
add
loopne
lret
in
shl
add
adc
fnsave
add
cli
vmwrite
roll
adc
cld
jo
js
add
outsl
push
xor
jg
shrb
push
pusha
call
int3
out
nop
mov
dec
or
daa
or
dec
push
adc
loope
inc
push
call
je
pop
pop
add
xor
xor
or
jns
jbe
cmp
push
das
add
cmpsb
pop
adc
mov
cmp
sub
mov
clc
add
sub
rolb
mov
add
bound
data16
xor
or
movsb
add
scas
inc
push
ljmp
insl
jp
xor
test
add
rcrl
sub
ret
aad
pop
jecxz
and
cmp
xchg
or
push
add
push
mov
push
add
lret
mov
sub
in
repnz
jg
inc
and
lret
add
push
or
adc
pop
loope
add
adc
in
mov
mov
dec
push
pop
mov
aam
shlb
cmpsl
mov
push
shl
cs
cmovne
push
jmp
in
sbb
mov
pop
pusha
adc
lock
outsl
and
sub
lahf
jg
push
addb
aad
jle
pop
rorl
in
push
xchg
fcoms
cld
xor
jb
add
jecxz
stc
mov
pusha
clc
lds
inc
pushl
cmpsb
dec
leave
loopne
xchg
arpl
mull
cld
lds
add
frstor
and
inc
ja
adc
fadd
adc
dec
je
dec
mov
loope
pop
mov
mov
mov
add
pushf
adc
inc
add
xchg
popf
jo
push
daa
dec
jge
hlt
repz
add
mov
add
sbb
roll
push
add
push
addb
movsb
inc
pop
mov
js
sbb
movsb
aaa
pop
lcall
lahf
mov
mov
bswap
add
pop
mov
lds
in
add
outsl
sub
add
lea
jbe
xor
fcompl
inc
add
cs
add
rorl
push
xchg
xor
scas
adc
call
fcomps
shlb
xor
inc
xchg
mov
jae
insl
add
jb
mov
aaa
enter
cmp
icebp
jge
daa
or
pusha
pusha
pop
out
lahf
ret
stc
xor
add
loopne
mov
pop
pusha
sbb
push
shlb
adc
rcrb
lcall
jnp
mov
cmovg
test
enter
test
add
out
pop
into
cmpsl
push
sub
stos
inc
sahf
add
add
fildl
add
rcrb
mov
add
jne
xchg
pop
xchg
in
rol
es
stos
sub
aaa
loopne
adc
pop
adc
cs
es
cli
sbb
inc
lcall
les
je
add
test
sbb
bswap
sub
mov
fs
dec
jp
jecxz
dec
pop
adc
xlat
adc
inc
aam
add
div
dec
iret
jl
adc
xor
add
addr16
call
popa
iret
stc
dec
clc
pop
setg
cmpsb
sub
pop
add
sbb
xor
cmp
bound
rclb
stc
pop
cmp
dec
lods
add
movsb
movsl
mov
add
cmpsb
mov
cmp
add
add
pushf
js
or
dec
cmp
cmp
xchg
pop
push
test
add
xor
add
shrb
comiss
sbbl
enter
shlb
repnz
addb
add
fsubl
notb
or
cli
cmp
ret
enter
jmp
push
inc
push
cld
add
clc
insl
jge
jg
movsl
leave
pop
int
push
sbb
imul
aas
add
add
mov
movsb
daa
mov
xchg
shl
add
mov
sbb
fucomp
pusha
dec
cld
add
mov
sbb
daa
or
mov
std
jb
adc
mov
add
mov
and
or
push
adcl
pop
mov
xor
test
or
orl
or
jle
add
jb
in
leave
stos
adc
jae
repnz
pop
loope
gs
mov
cs
and
cltd
adc
lret
dec
shlb
mov
xor
xor
scas
rolb
out
dec
mov
hlt
pop
divl
fildl
xchg
mov
aam
ljmp
or
filds
mov
cwtl
dec
mov
xor
xchg
pop
movsl
xor
adc
flds
shrb
add
and
fdivs
dec
in
inc
adc
add
dec
fcmovnb
inc
pop
or
and
cmp
shl
and
cmpxchg
iret
pop
ja
push
subb
xor
ss
add
sbb
loope
into
icebp
orb
add
sbb
test
fs
or
popf
push
jg
pop
add
jl
mov
or
adc
ljmp
stos
cwtl
mov
sbb
int3
lcall
das
xchg
pushf
adc
jnp
add
push
jo
dec
add
xchg
inc
cwtl
add
xor
in
inc
incb
mov
bound
add
rolb
fldenv
cld
lea
nop
out
mov
add
nop
pop
call
loope
loopne
push
xor
sbb
pop
inc
pop
add
cmp
mov
mov
std
jb
jo
gs
jecxz
xor
add
jns
jbe
test
add
ja
or
pop
jnp
push
mov
mov
fiaddl
add
aam
call
clc
mov
inc
iret
mov
cmp
add
ja
cld
xsaves
dec
add
cmp
cmp
inc
add
jmp
lds
cli
adc
push
jg
xchg
enter
enter
pop
test
in
adc
add
xlat
call
cmc
repnz
sub
pop
and
enter
out
add
jmp
jns
mov
xorb
mov
jmp
movsl
lret
xor
jg
pop
aaa
fsts
fwait
mov
mov
add
mov
and
add
push
movsl
dec
add
clc
pop
push
stc
dec
add
or
es
rol
adcl
xor
add
cwtl
rclb
dec
jno
jno
add
and
adc
mov
in
loopne
or
jnp
cmp
lods
int
xchg
sub
stos
sbb
js
stos
out
outsb
faddl
xchg
dec
je
cltd
aas
add
and
enter
add
les
adc
popa
jle
xchg
or
adc
lock
add
mov
sub
popl
les
mov
arpl
sub
mov
sbb
xchg
push
out
add
cmp
or
je
mov
or
lods
xchg
dec
sbb
loop
pop
add
std
pop
jmp
aam
cmp
movsl
nop
sbb
add
aaa
inc
add
sbb
ret
mov
and
inc
gs
pop
fdivrl
add
or
cmp
add
lods
dec
sbb
lds
ror
add
inc
mov
dec
xor
xor
xchg
add
inc
dec
xor
mov
push
es
test
sub
inc
js
cmp
adc
fistpll
sti
int3
push
add
fs
dec
shlb
fildl
dec
fnstenv
pop
add
sbb
pmaxsw
adc
shrb
mov
add
cmp
cmp
mov
cmp
lret
sub
add
xchg
es
add
subl
nop
cmp
or
and
lea
sbb
pushf
in
xchg
jecxz
dec
sub
sbb
fimull
imul
fiadds
xchg
ds
xlat
jns
xchg
xchg
addl
inc
add
push
faddl
imul
int3
fsts
or
dec
or
hlt
int3
icebp
faddl
mov
push
xor
scas
addr16
mov
incb
add
mov
sbb
push
push
out
ret
jbe
jnp
in
pop
xchg
pop
lahf
add
sbb
add
push
and
sub
addr16
icebp
add
jns
std
inc
out
cltd
mov
add
add
ljmp
cli
jmp
push
mov
fldl
imul
dec
add
and
sahf
cmp
jmp
mov
jge
add
repz
lds
scas
cwtl
fdivrl
lock
xchg
cld
mov
add
dec
mov
sub
in
pop
iret
cmpsb
nop
xor
mov
rcrb
jno
add
data16
add
mov
jb
add
leave
imul
pop
adc
pushf
mov
scas
rcrb
pop
and
outsb
shr
push
add
add
pushf
adc
popf
mov
into
add
lds
push
mov
xchg
cmp
push
test
add
sbb
and
pusha
and
add
pop
jl
mov
std
sub
or
clc
notb
add
fcmovbe
ljmp
loopne
mov
mov
fwait
xor
nop
mov
aam
push
or
test
cmp
cmpsb
imul
sub
notb
push
pop
jno
sbb
sbb
mov
dec
add
in
pusha
int3
pushf
xor
adc
push
sub
decl
push
rolb
push
sbb
mov
jne
es
icebp
add
movsb
movb
pop
into
lods
test
loopne
jge
push
mov
inc
pop
xchg
incl
adc
push
loop
or
add
shll
sub
xchg
cmpsl
testl
orl
je
leave
mov
addr16
aas
adc
mov
jmp
in
sbb
pop
lock
push
cmp
movsl
mov
jle
in
pop
shrb
out
push
ljmp
out
and
inc
js
dec
and
jo
in
sub
mov
ret
sbb
push
pop
bound
mov
add
movsl
dec
mov
orb
stos
xchg
and
outsl
loope
mov
xlat
push
jl
jno
pop
imul
call
add
push
std
shrb
jne
pop
xor
add
lret
subb
cmp
xchg
dec
inc
mov
shrb
inc
rorl
jg
xor
pop
mov
pop
mov
sbbl
fwait
lock
mov
pop
mov
pop
pop
dec
cmp
js
add
adc
std
mov
dec
sub
xor
inc
inc
incb
mov
sti
or
ss
lret
mov
leave
pop
or
lea
mov
lock
aaa
out
xor
push
push
mov
add
iret
lea
xchg
or
add
mov
les
mov
mov
xchg
add
sbb
addb
xchg
xchg
sbb
and
aad
pushf
mov
mov
mov
ss
and
pusha
or
lods
push
mov
shlb
pop
ret
jo
and
cmpsl
rclb
sub
push
jecxz
sbb
test
dec
add
push
cmpsl
and
mov
stc
in
movsl
or
enter
insl
fidivl
cmp
push
mov
icebp
nop
dec
jle
add
lods
mov
mov
dec
enter
lret
lock
dec
adc
cmpsl
enter
or
movsl
and
add
lods
sbb
cmp
pop
orb
and
dec
pop
inc
sub
icebp
xlat
rorl
call
xchg
pop
xor
pop
mov
std
xchg
addl
aam
cmp
pop
stc
jne
add
mov
dec
test
push
jmp
adc
xchg
cmp
ret
cmp
cld
jmp
addr16
inc
dec
sub
and
cmp
pop
out
xor
cmpb
rolb
mov
test
addr16
pop
push
mov
add
xor
stos
rcll
insb
and
fwait
add
mov
xor
sbb
pop
cltd
inc
in
sbb
mov
or
inc
fcompl
in
icebp
mov
or
mov
orb
dec
add
arpl
int
push
sbb
out
subb
xchg
add
dec
sbb
and
xlat
add
fidivl
fs
or
addl
mov
push
aam
jmp
xor
imul
inc
and
push
sbb
pusha
out
andb
inc
xchg
and
add
ss
cwtl
and
lds
mov
add
or
das
mov
mov
push
push
filds
gs
out
insl
mov
repz
and
mov
int3
add
or
add
adc
push
add
repnz
xchg
pusha
cwtl
xchg
lret
pop
int3
xor
inc
lock
cmp
add
cmc
push
fdivr
in
ret
push
cmp
or
mov
int3
movsl
stos
xor
cmp
jae
xchg
push
add
scas
and
sub
fwait
je
add
inc
pop
negb
subl
pusha
sub
mov
cmp
sbb
jg
mov
pop
ret
and
cmc
dec
test
loope
push
inc
xchg
enter
sbbb
call
dec
jecxz
mov
push
jb
sbb
out
pop
inc
add
pop
jg
js
mov
inc
int3
imul
add
test
loopne
ja
push
add
icebp
stc
fmuls
add
mov
call
inc
xchg
shlb
mov
cmp
ds
add
or
add
rcl
lret
sbb
ffreep
cld
adc
pop
and
ljmp
jecxz
inc
in
add
push
out
push
clc
jge
ret
aam
mov
gs
add
movsl
lahf
xor
cld
and
xchg
xor
pop
sbb
or
sbb
iret
mov
adc
cmp
lahf
lods
sbb
cmp
fildl
push
fs
push
das
int3
sbbl
or
mov
sbb
sub
fisttps
mov
or
jns
loope
add
bound
js
add
lret
jmp
popa
push
pop
pop
cmp
lcall
push
arpl
mov
add
sarb
int3
cmpb
dec
add
or
or
sub
in
push
add
into
shlb
jg
aaa
hlt
les
rol
sbb
and
add
pop
mov
dec
mov
inc
insl
sbbb
rorl
mov
hlt
out
call
outsl
and
scas
incb
dec
jle
jae
pop
push
popf
in
icebp
mov
adc
mov
mov
add
popf
cld
dec
adc
loopne
mov
jnp
and
or
hlt
add
iret
scas
mov
ss
or
mov
add
fildl
xor
pop
adc
mov
aaa
jb
add
or
mov
pop
fisubl
cld
clc
addr16
fneni(8087
dec
test
pop
adc
stc
xchg
mov
inc
int3
sar
popa
les
test
pop
call
sbb
xchg
mov
jle
push
jnp
cmp
in
add
ret
add
or
lods
pusha
or
add
ljmp
fs
lock
pop
cmpb
leave
or
cwtl
ret
aad
or
mov
xchg
nop
mov
movsb
push
inc
pop
testb
add
es
addr16
mov
jne
add
xor
lods
push
xorb
ds
fistl
add
add
enter
push
sti
add
cwtl
mov
movsl
or
jp
test
adc
ljmp
jne
hlt
call
insl
out
pop
xchg
and
add
xchg
pushf
cmp
loope
add
clc
and
jp
jbe
pop
pop
cmp
add
adc
in
xchg
xlat
add
jnp
and
fcoms
insl
pop
rolb
or
lret
hlt
dec
fs
cmp
mov
or
mov
add
sahf
je
push
shlb
mov
adc
push
xor
sbb
jb
push
out
je
add
mov
adc
cld
or
cmp
adc
pop
jne
xchg
and
cli
hlt
add
push
hlt
mov
mov
lock
rclb
sub
add
mov
fwait
cmpsl
sbb
lds
mov
ficoms
icebp
push
mov
dec
cld
daa
sbb
lcall
pop
mov
jns
and
pop
cmp
xlat
mov
pop
sbb
arpl
jno
or
pushf
dec
and
adc
sub
fsts
jmp
add
lea
jl
push
mov
mov
je
test
push
adcb
cmp
aam
push
jae
add
sarl
or
fdivs
sub
mov
lods
enter
pop
sub
dec
movsl
lret
push
sub
add
mov
and
pop
cltd
pop
add
push
outsl
iret
aas
fnstsw
scas
and
dec
mov
dec
lds
add
pop
addl
loope
sarl
adc
pop
push
add
mov
mov
inc
mul
cmp
cmp
iret
adc
fsubr
push
xor
mov
fcompl
adc
dec
bnd
mov
or
faddl
add
add
rorb
int3
xor
push
cmp
and
mov
cmc
shll
repnz
into
sbb
pop
mov
arpl
sbb
add
sbb
dec
aam
scas
sub
mov
xchg
ret
cmpl
jb
xor
sbb
cli
pop
jp
lea
jge
lret
aas
bsf
push
sub
sub
mov
sti
xchg
pop
lock
in
add
push
sbb
es
sahf
cs
xor
adc
adc
mov
call
or
pop
fsubr
add
add
dec
sub
pop
or
bound
les
leave
ret
xor
nop
mov
test
sbb
movsb
and
xorb
and
cmovno
arpl
rorb
div
mov
jg
jo
xchg
pop
xor
dec
daa
loopne
and
mov
gs
jne
ret
add
jbe
test
push
add
pop
and
or
filds
pop
ljmp
adc
js
ljmp
inc
mov
cmpb
add
std
mov
in
mov
lods
enter
mov
ret
add
shl
int3
jp
roll
add
fidivl
mov
lods
add
mov
mov
add
xor
roll
or
mov
popa
mov
addb
outsb
out
ret
or
inc
ljmp
jae
repnz
pusha
pusha
test
add
ret
icebp
test
movb
sub
add
and
adc
lret
pop
loopne
jo
xchg
rcrl
imul
sub
add
push
shlb
add
icebp
mov
add
jg
out
andl
pop
add
shll
pop
sbbl
stc
lods
mov
movsl
mov
roll
hlt
dec
fldt
pop
mov
test
jae
pusha
pop
pop
jo
or
or
xchg
sub
mov
fsub
add
sub
adc
cli
hlt
mov
loopne
and
dec
xchg
inc
cld
loopne
mov
das
mov
pop
xchg
ljmp
in
xchg
pop
movsb
out
addb
mov
outsl
adc
in
pop
cmp
shll
xchg
mov
leave
pop
pop
inc
rcl
std
mov
ror
imul
js
insl
adc
xor
xor
sub
xor
add
xchg
mov
roll
push
ljmp
leave
lods
cmp
add
addl
lret
cmp
lds
lahf
stos
sbb
inc
jb
fildll
shlb
fnsave
or
in
sbb
pop
lds
xchg
push
mov
lock
ja
or
cli
jmp
rolb
data16
movsl
outsb
loopne
add
repz
fwait
lahf
and
jnp
add
pop
mov
cmp
or
shrb
push
jns
inc
addr16
pusha
clc
imul
pusha
mov
gs
inc
daa
adc
push
cwtl
inc
xchg
loopne
incb
push
jp
or
cmpsl
add
mov
jecxz
pop
or
stos
iret
test
xor
cmp
mov
das
sbb
into
sub
jl
in
ret
lret
jbe
loopne
xchg
aas
je
pusha
cli
filds
aam
sti
hlt
push
xchg
push
ret
inc
fldt
or
les
mov
in
jo
inc
cwtl
mov
or
adc
add
mov
pushf
add
inc
adc
imul
les
fldt
rcrl
gs
pop
mul
add
and
shr
fists
bound
negb
add
movsb
arpl
fwait
pop
dec
dec
in
in
adc
int3
xchg
nop
inc
pop
cmc
and
adc
mov
rolb
pop
xchg
inc
sub
int3
popa
jo
mov
xor
sbb
rcrl
sbb
jb
aam
addl
lods
sub
add
iret
sbb
shlb
inc
add
and
clc
or
jmp
dec
jl
xor
cwtl
push
dec
ljmp
mov
in
mov
andl
rcrb
push
fcom
xchg
fdivrs
add
inc
mov
lods
cmp
push
mov
mov
pusha
mov
rorb
inc
and
xchg
add
xchg
push
jae
andb
jne
in
outsl
pop
sbbb
push
out
call
mov
in
in
jo
andl
pop
aaa
shl
cmpsb
pop
mov
aam
hlt
xchg
push
lods
xor
sub
add
sbb
and
adc
pop
push
push
or
inc
mov
push
sbb
mov
dec
and
jle
push
out
hlt
popa
push
mov
dec
sub
aas
xchg
imul
cmp
xchg
shlb
add
ds
mov
sbb
push
into
dec
push
cwtl
lock
mov
sbb
dec
xchg
test
leave
cmp
sbb
and
cwtl
mov
push
pop
mov
dec
add
or
clc
or
out
ficompl
add
mov
pop
jnp
stos
inc
mov
ret
fnstenv
mov
inc
pusha
inc
insb
test
scas
add
cltd
es
shl
add
mov
xchg
push
add
fwait
lret
pop
sbb
scas
dec
rolb
cmp
add
iret
and
loop
add
in
push
mov
popa
cmp
push
mov
rolb
cwtl
popa
xor
lahf
push
xor
push
into
addb
sub
xor
inc
add
int3
mov
add
jle
js
xor
and
rcrl
pop
lock
mov
imul
push
and
xchg
and
mov
pop
inc
inc
xor
movsb
pusha
lea
push
movsb
sbb
rol
sbb
xchg
and
xor
pushf
adc
add
mov
test
cld
jbe
sbb
pusha
lret
out
mov
cmp
xchg
cmp
in
roll
cmpb
lret
jg
test
rorl
je
or
loopne
pop
cmpl
in
faddl
stos
inc
add
xchg
std
sarb
or
push
ret
or
dec
popa
or
sbb
cmp
inc
dec
cmc
shrl
outsl
pop
inc
mov
lret
mov
push
add
aaa
dec
pusha
int
dec
cmpsb
in
popf
mov
push
inc
sbb
push
inc
dec
push
mov
ret
add
pop
ret
lahf
sub
aad
push
xlat
roll
dec
add
and
cmp
and
push
or
mov
rcrb
ds
cld
inc
cmp
ret
cs
and
lret
pop
pop
outsl
sbbb
inc
int3
js
push
fimuls
push
je
shlb
loopne
in
xor
xor
dec
movsl
inc
inc
adc
add
fcom
mov
mov
js
subb
jo
mov
cmp
ljmp
enter
cmp
push
arpl
aam
fiaddl
cmpsl
cmp
aad
popa
or
roll
fldz
es
fstp
xor
cmpsl
jmp
mov
adc
mov
in
aas
push
int3
inc
iret
das
in
addb
inc
cwtl
cmp
dec
add
dec
xchg
inc
cmpsl
mov
lods
mov
xchg
das
lock
aam
push
cld
aas
inc
push
ds
loop
inc
mov
adc
push
gs
frstor
loop
or
dec
ret
call
mov
dec
daa
shll
mov
add
push
data16
fs
push
pop
lcall
pop
out
loopne
imul
ja
inc
fwait
xor
sahf
ss
loop
rcll
xchg
jl
xchg
shlb
jo
pop
cmp
shlb
arpl
add
add
mov
fcomp
cmp
fs
shll
add
dec
cld
icebp
add
aad
mov
push
xor
push
inc
sub
cmp
sub
xchg
nop
push
cmp
out
adc
mov
hlt
add
and
shrl
and
sub
jns
dec
adc
nop
inc
adc
movsl
pop
or
jne
rol
sbb
add
xchg
bound
insb
les
in
pushf
sub
es
inc
ja
sub
shrb
and
stos
ljmp
jg
xor
mov
adc
and
push
nop
mov
jecxz
xchg
nop
inc
inc
xorl
mov
xor
cmp
and
adc
loop
or
sbb
xchg
andl
fcmovb
pushf
or
faddl
in
dec
push
dec
lds
adc
enter
and
or
inc
clc
and
test
cld
cmp
rcr
js
or
add
pusha
mov
xor
add
cld
adc
and
push
adc
jnp
aad
mov
inc
test
mov
daa
sub
push
scas
cs
mov
pop
fisubrs
sbb
mov
sbb
xor
dec
pop
iret
in
rorl
inc
inc
sbb
aaa
jnp
add
dec
sub
cmp
add
icebp
leave
mov
add
jg
in
push
jno
sub
mov
jp
popa
jmp
add
inc
lods
jne
mov
inc
push
cmp
add
loopne
jle
xor
push
sbb
outsb
push
cmpsb
add
lahf
add
call
and
movsl
jnp
pop
push
repnz
pop
sbb
mov
pop
sbb
xor
adc
movl
dec
adc
cmp
sbb
cs
cmpsl
xor
adc
daa
xchg
and
or
xchg
cmpsl
filds
adc
xchg
adc
or
sbb
dec
xlat
inc
popa
icebp
test
pop
adc
out
and
inc
push
repnz
add
lcall
dec
add
mov
aam
jmp
mov
fstps
aad
sbb
push
mov
repz
jecxz
pop
pusha
push
movsl
ret
dec
stos
pop
dec
rcrb
add
or
xchg
add
push
ror
jmp
add
dec
rcrl
add
mov
bound
push
push
add
adc
xor
jne
mov
nop
leave
xor
add
jp
and
lea
out
pop
aad
sub
push
inc
in
or
pop
leave
adc
adc
stos
sub
add
xor
add
xchg
lret
inc
repnz
adc
popa
add
or
pop
iret
sahf
ret
cmpb
aas
cwtl
ja
add
add
jmp
push
add
pop
ljmp
push
testl
cmp
dec
and
push
jmp
psrld
stc
popa
inc
aad
jno
clc
sub
or
lods
mov
mov
add
aad
ret
pop
xchg
add
adc
out
cwtl
add
or
mov
popa
jns
push
push
adc
int3
rol
pop
xchg
in
pop
xchg
fidivs
adc
cld
inc
dec
addb
push
int3
out
sub
jae
and
das
add
int3
into
pop
mov
iret
xchg
mov
push
cmpsb
pop
cmp
xlat
fsubr
imul
das
fnstsw
cs
and
dec
lock
mov
dec
ds
sub
stos
mov
mov
addb
pushw
push
loope
add
out
call
aaa
add
mov
imul
andl
dec
movsb
mov
pop
jnp
rcrb
xor
sti
add
imul
add
scas
mov
cmpsb
and
sub
sbbl
fisubrl
leave
faddl
sub
pop
and
iret
xor
out
outsb
add
into
jb
add
add
iret
push
push
mov
sbb
sub
inc
xchg
in
xor
jge
mov
ror
sbbb
xor
xchg
add
cmc
cltd
pop
ljmp
dec
jmp
add
test
clc
aam
add
adc
idivl
mov
mov
es
pop
fwait
lret
or
and
dec
adc
xchg
pop
outsb
sbb
notb
add
pop
push
push
sub
sub
imul
cs
inc
popa
ja
xchg
aas
and
sbb
cltd
mov
mov
iret
out
iret
movsl
mov
cmpsl
lds
sub
mov
push
loopne
cmpsb
dec
or
jbe
scas
les
addl
or
jne
int
out
and
popf
inc
add
push
cs
mov
daa
inc
into
cmpsb
jge
movsb
js
sbb
stos
es
sbb
inc
lret
iret
adc
adc
movsb
hlt
sti
add
jne
in
mov
imul
mov
push
push
add
mov
clc
ret
adc
sub
dec
dec
adc
stos
leave
add
aaa
and
addr16
mov
pop
movsb
test
add
push
cmp
imul
or
jb
mov
rclb
push
add
cmp
das
es
inc
cmpl
xor
repnz
popa
adc
stos
dec
aas
or
push
cmp
mov
aaa
das
mov
add
add
pusha
clc
add
dec
mov
pop
ret
pop
pop
ror
rcrl
push
add
mov
jge
push
xchg
mov
adc
mov
xchg
dec
sub
jecxz
jae
lret
dec
add
mov
das
xchg
fmull
outsl
mov
rcrl
add
fmull
call
xchg
js
inc
popa
subl
mov
dec
push
xchg
shrb
inc
mov
fsub
sbb
add
pop
mov
add
mov
fcomps
stos
imul
lock
jecxz
fs
out
dec
mov
orl
push
imul
inc
xlat
mov
outsl
aaa
sbb
decl
add
push
mov
jo
jne
imul
mov
ljmp
cmp
addr16
ficomps
lret
inc
add
mov
mov
movsb
clc
scas
sub
sbb
cli
shll
add
or
in
jmp
ret
pop
popf
add
mov
pop
sub
out
and
mov
mov
loop
push
cmc
fistpll
mov
pushf
push
cmp
sbb
fnstcw
cwtl
add
idivl
mov
shll
rclb
scas
dec
xchg
lds
js
std
in
sub
dec
jecxz
hlt
adc
mov
sbb
sbb
sub
cmp
jge
in
out
data16
jae
add
lret
loope
sahf
xchg
push
add
xchg
pusha
xor
adcb
nop
or
int3
fadds
xor
loope
inc
xor
ljmp
xchg
adc
jb
in
negb
mov
or
xor
lock
stos
pop
cltd
jg
jbe
inc
cmc
and
dec
loopne
pop
repz
dec
jno
sub
fmull
push
jmp
out
loopne
pop
xor
adcb
jge
pusha
sub
mov
daa
loope
enter
mov
in
out
xchg
pusha
js
pop
adc
add
lret
out
pop
arpl
mov
add
jl
incb
pop
xor
cmpsb
js
lds
cmp
out
subb
push
addr16
xchg
inc
inc
movsl
scas
sbb
lods
add
mov
stc
cmp
enter
dec
movsl
mov
ja
lock
inc
or
push
aaa
and
cmpsb
cs
pop
sub
adc
xor
dec
and
loopne
mov
sbb
inc
std
fsubr
push
pop
scas
push
or
sub
fiadds
add
test
xor
xor
ds
adc
jl
push
or
and
jmp
decb
scas
dec
push
xor
add
daa
mov
jb
adc
add
insb
shll
pop
cmp
out
test
jge
add
mov
cld
clc
ss
add
enter
in
jmp
push
mov
dec
testl
cmpsl
popa
fildll
ljmp
push
sbbb
je
mov
bound
xchg
add
pop
push
add
std
xor
sub
int
and
fadds
ret
push
adc
dec
dec
pop
add
scas
xchg
jl
fsubrs
insl
mov
testb
and
dec
ret
clc
pop
cmc
mov
hlt
dec
mov
lea
adc
mov
xchg
enter
loopne
mov
cltd
ret
cmp
cmpb
shlb
stos
mov
or
movsl
mov
pop
lret
sbb
fwait
addb
dec
xor
mov
add
mov
ljmp
cmp
jle
cmp
add
inc
rcrl
xchg
push
xlat
mov
pop
mov
pop
mov
je
mov
mov
or
cmc
data16
ja
xlat
jnp
outsb
xor
divb
test
sbb
in
test
cmp
push
and
inc
mov
jbe
add
dec
push
repnz
shrb
push
add
aaa
je
inc
lahf
push
push
jmp
dec
push
mov
cs
mov
add
pop
inc
or
jbe
pop
inc
push
daa
adc
dec
adc
cltd
sbb
stos
or
mov
push
or
lock
add
mov
pop
adc
roll
jae
out
loopw
add
insb
jmp
int3
movb
inc
pusha
push
mov
iret
in
xor
add
lahf
and
add
int3
sbb
loope
push
mov
mov
rcrl
clc
push
add
mov
and
and
mov
test
popa
sbb
enter
out
add
fstpt
push
mov
aad
xchg
mulb
xchg
lret
mov
sbbb
gs
pop
dec
hlt
jnp
addb
inc
out
cmp
add
push
cmp
sub
sbb
jno
cmp
mov
mov
in
sub
les
scas
mov
cli
jo
loope
repnz
and
add
or
mov
push
cwtl
cmp
and
call
arpl
sbb
sub
mov
pop
add
pop
or
loopne
add
icebp
in
xor
dec
adc
pop
mov
popa
shlb
andb
lods
add
mov
addb
orb
cmp
add
mov
jge
imul
pop
int3
cwtl
pop
push
mov
dec
xor
sub
cmp
dec
pop
lcall
out
ret
push
add
add
push
pusha
mov
mull
aaa
daa
nop
mov
xchg
shlb
pushf
test
and
fidivrl
cmp
ret
or
loopne
mov
mov
dec
arpl
hlt
dec
xchg
pop
nop
sub
jmp
das
inc
out
imul
cmpsl
ljmp
sarb
wrmsr
xor
inc
test
cltd
sbb
out
in
ret
cwtl
call
add
adc
sbb
testb
setle
mov
repnz
add
sbb
dec
push
adc
sbbb
or
xchg
mov
inc
sahf
hlt
mov
pop
add
in
rorb
stos
pop
imul
push
xchg
lds
mov
out
add
mov
and
mov
iret
mov
repnz
mov
add
shl
add
loopne
inc
aas
sub
add
sti
pop
mov
or
cwtl
out
andl
jne
mov
xchg
jnp
sub
stos
aaa
cmp
mov
or
add
xor
int3
mov
cmp
pop
int3
pminsw
out
daa
out
adc
xchg
ficomps
adc
jge
jbe
int3
xor
and
add
inc
pop
cltd
lcall
sub
cli
fistpll
mov
int3
adc
icebp
mov
jb
cmpsl
add
scas
mov
mov
out
add
cwtl
insl
lods
leave
push
cmp
push
orb
lahf
ret
outsb
jmp
faddl
mov
js
psrlq
outsl
movl
dec
pusha
lcall
inc
cltd
js
lds
fdivrs
cmpsb
sub
cltd
insb
in
push
add
inc
repz
adc
shlb
push
mov
int3
mov
into
lea
popa
add
push
pop
call
or
xor
add
fmuls
push
rorb
imul
or
lock
outsb
nop
fdivrs
jl
adc
aaa
mov
aam
xor
pop
lods
cmpsl
addb
add
cmp
xchg
pusha
sbb
fisttpl
inc
or
mov
pop
ficompl
adcb
lds
mov
test
cltd
ljmp
xchg
sbb
add
xor
or
loop
fimull
and
add
loopne
inc
adc
outsb
jmp
popa
cltd
fucomip
mov
mov
stos
pop
dec
add
mov
repz
xchg
jg
mov
adc
roll
sar
push
and
mov
fistpl
sbbb
jmp
dec
sub
xchg
jno
jo
outsl
mov
arpl
aas
xor
jnp
cs
add
cwtl
xor
pop
fdivrl
sarb
inc
sub
fbld
mov
out
xchg
add
add
aam
testl
jl
sbb
loope
sbbl
orb
cld
inc
shll
add
sbb
mov
xchg
adc
sahf
xchg
ret
cmp
aam
dec
inc
je
dec
inc
mov
icebp
push
mov
lods
mov
mov
ljmp
cmp
les
add
push
xor
cs
sub
loop
and
inc
jge
insb
adc
dec
fadd
sub
pop
int
jo
add
test
movsl
pop
cmpsl
mov
jne
pop
pop
inc
add
cmp
mov
and
cwtl
repz
adc
pop
push
out
cltd
loopne
xlat
add
mov
xor
addr16
add
rorl
inc
addl
addb
cwtl
cmp
add
in
sbb
mov
push
add
adc
das
neg
daa
mov
gs
adc
adcl
loope
xor
lock
sbb
test
lods
subb
andb
iret
adcb
popf
addr16
jmp
sti
jno
fs
jl
lcall
movsb
dec
in
adc
mov
push
mov
mov
mov
dec
sahf
test
and
in
mov
adc
idiv
cmpxchg
push
ljmp
mov
push
popf
push
and
adc
mov
or
pop
les
icebp
or
lcall
cmp
push
push
xchg
mov
nop
add
add
pushf
jmp
add
shll
or
cmovo
and
pop
iret
add
xor
xchg
roll
sbb
or
mov
sarl
or
fiaddl
pop
rorb
je
add
dec
test
pusha
jl
push
inc
outsb
ds
rcrb
inc
fidivrl
fmull
and
inc
inc
leave
into
mov
pop
or
push
inc
add
push
mov
out
lock
add
and
cmp
sub
cmpsl
add
xchg
push
pop
sbb
clc
pop
sti
xchg
sub
xor
and
sub
jb
adc
fucomp
dec
cmc
pop
add
inc
pusha
or
dec
jecxz
add
cmc
push
leave
cmc
sbb
aas
pop
iret
sub
loope
dec
and
mov
inc
das
popf
mov
in
adc
cmc
ljmp
and
add
push
lods
iret
bswap
sub
ljmp
insb
cmp
dec
dec
shlb
jo
pop
mov
inc
jmp
or
add
jnp
pushf
mov
sti
int
les
in
loopne
mov
ss
add
mov
sub
lret
adc
ss
add
out
jge
in
cmp
push
and
pop
out
add
cmp
outsb
xor
cmp
push
inc
test
andb
jl
pop
push
dec
fcomip
dec
aas
add
daa
xor
lds
add
hlt
shlb
cmp
dec
aam
fisttpll
jle
cmp
mov
test
nop
sub
repnz
pop
mov
iret
or
mov
dec
cmc
push
or
and
add
inc
mov
inc
fdivrl
and
aam
inc
add
pop
xor
jno
xor
xor
aad
aas
ret
mov
adc
iret
push
mov
add
xchg
inc
xlat
in
pushf
or
lret
adc
out
jle
shr
xor
adc
xchg
mov
insb
movsb
add
arpl
sbb
add
cmp
adc
cmp
add
hlt
pop
iret
rcrl
lret
imul
push
imul
jns
testb
mov
mov
add
adc
imul
pop
addr16
adc
sub
xor
and
xor
andl
fs
lahf
mov
xchg
push
mov
lock
movsl
pusha
xchg
mov
int
das
add
out
mov
fwait
inc
push
fs
popa
jne
pop
lods
xor
add
sbb
mov
sahf
adc
mov
push
fs
aas
and
xor
xor
or
mov
les
je
add
jb
push
push
out
pop
add
shrb
add
dec
dec
hlt
add
add
push
mov
idivb
adcb
sbb
jnp
or
sub
push
test
adc
xor
jns
add
pop
fdivrs
adc
stos
sub
fildll
test
call
mov
not
out
je
js
adc
sub
cmp
repz
shll
and
jp
adc
cmc
pop
shl
mov
in
cmpsl
add
ret
inc
aam
js
hlt
aad
xchg
cmc
push
mov
cmp
mov
xchg
ja
add
int
rol
xchg
jne
mov
ucomiss
into
mov
jge
pop
or
or
sbb
mov
andb
xchg
out
insl
cmpb
xchg
pop
imull
mov
in
lahf
add
mov
inc
cmp
dec
or
push
dec
movaps
add
mov
mov
xchg
add
sti
cwtl
mov
adc
xor
rclb
sub
leave
mov
dec
mov
push
lahf
mov
add
rcpps
cmp
adc
sbb
dec
and
adc
ja
jg
ljmp
les
mov
xor
testl
ljmp
int
ret
pop
shlb
push
iret
test
add
inc
outsb
pop
mov
lret
sub
popa
dec
mov
add
negb
lods
inc
ja
insb
adcb
and
icebp
int3
or
movsl
popf
add
outsb
in
add
ljmp
xor
ds
out
pop
add
pusha
xchg
imul
sbb
mov
add
sahf
sub
add
mov
out
std
jle
add
mov
pop
sbb
push
shl
jno
sbb
xchg
mov
movsb
mov
sbbb
add
push
sub
cmp
dec
stos
scas
js
jg
dec
mov
xor
dec
stc
pushf
jl
mov
mov
jg
addr16
jae
add
loopne
popa
je
aas
inc
pushf
xor
or
adc
out
and
scas
add
js
pop
push
leave
stc
ljmp
outsl
add
cmp
adc
xchg
addb
sbb
shlb
std
mov
mov
aam
loope
dec
mov
pop
enter
out
mov
fs
lret
cmp
clc
sti
loopne
cwtl
jne
into
add
push
or
pop
pop
repnz
scas
in
xchg
imul
sbb
inc
and
cmpsl
cmp
mov
stos
add
stos
insb
cwtl
clc
sub
add
cmpl
les
ret
loopne
bound
push
call
jno,pt
sbb
mov
dec
mov
lock
jle
mov
enter
adc
push
in
scas
xchg
fdivs
out
cmp
xchg
into
ja
push
jnp
and
scas
mov
sti
std
push
das
push
add
aas
or
imul
mov
push
sti
adc
fistl
inc
xchg
out
add
out
mull
or
sub
call
add
inc
mov
shl
pop
or
cwtl
nop
dec
push
subb
in
jmp
or
mov
add
jnp
jle
shlb
and
fsubrs
and
adcb
scas
or
xchg
and
cmp
inc
jne
xlat
cwtl
sub
mov
inc
xor
in
sub
or
movsl
and
jl
add
dec
not
adc
add
mov
out
ds
jmp
and
movsl
add
inc
mov
xchg
sub
cmp
pop
imul
push
fisttpl
or
add
pusha
dec
lea
cmp
int3
dec
dec
cs
sahf
xorl
dec
and
xor
sbb
lcall
lahf
fcomp
jg
add
jae
jp
std
orb
int3
jge
and
add
sub
sbb
out
scas
rcrb
sahf
and
andb
xor
add
test
fnstenv
mov
stos
mov
in
add
sbb
add
icebp
and
pop
xchg
push
aam
cmpsb
mov
inc
enter
jl
int
mov
xor
aad
mov
pop
cmc
mov
push
ds
add
adc
fisttpl
cltd
andb
jmp
sbb
jno
scas
xor
dec
mov
push
in
es
mov
imul
fstpt
fwait
addb
cmp
push
aad
sbb
negb
test
lret
add
sbb
enter
mov
add
xor
push
add
lds
mov
imul
add
pop
call
popf
add
adc
mov
sub
jb
push
pusha
stos
pop
adc
inc
mov
jns
in
pop
sub
dec
pop
xor
jmp
arpl
out
les
or
mov
call
cmpsl
xchg
fsubs
or
sbb
lds
movsb
imul
cmpsl
test
add
mov
std
jge
fsts
xchg
aam
sbb
scas
add
cmp
int3
cmp
mov
outsl
rclb
jg
pop
xchg
call
imul
jl
les
pop
jge
push
pop
jle
mov
add
ja
hlt
mov
dec
insl
enter
imul
or
pop
xor
rolb
add
jne
xorl
push
repz
rcll
test
hlt
clc
sbb
clc
mov
and
scas
xlat
sti
ds
lock
shlb
mov
iret
sbb
rdpmc
cmp
pop
inc
out
sbb
fstpl
cmp
dec
or
sti
clc
nop
add
add
pop
jge
add
push
push
inc
sarb
nop
out
je
mov
fdivrs
push
add
jl
or
mov
cmp
ja
pop
jp
push
cmp
add
dec
mov
push
xor
and
xor
and
aaa
ja
cwtl
push
je
lods
add
mov
cld
add
fwait
nop
sbb
rcrl
lds
mov
cmp
outsl
cwtl
lcall
cmp
and
mov
adc
push
xor
and
test
nop
incb
movsb
mov
lcall
xor
das
scas
jb
in
andb
mov
out
icebp
into
cs
cmp
shll
insb
js
xchg
push
loopne
stos
xchg
or
cmpsl
leave
lock
rorb
lahf
jae
adc
adc
xchg
lods
mull
xchg
inc
mov
mov
popf
sbb
and
aaa
add
lods
or
xor
push
mov
sar
mov
cmpsb
and
or
mov
dec
call
mov
cmp
pop
jp
lret
les
inc
arpl
jne
sbb
mov
dec
cmp
pop
cmp
or
ja
inc
test
inc
add
xchg
add
pop
in
or
cld
addl
jo
ja
adc
adc
mov
aaa
sub
sarl
fucomi
movsl
movl
aas
mov
flds
push
stos
pop
inc
mov
jb
pop
jo
xlat
push
or
loope
inc
hlt
lret
add
mov
rol
jecxz
mov
aam
sbbb
xchg
roll
sbbl
dec
ljmp
cmc
add
ror
push
jno
and
aam
add
mov
iret
mov
push
add
cmp
aad
cmp
xchg
and
adc
add
das
mov
int
add
stos
xchg
mov
int3
shl
movb
jle
stc
pusha
dec
aam
add
mov
add
insb
sbb
push
sbb
ljmp
gs
mov
or
pop
cmp
pop
xlat
andb
lret
bound
out
xor
xchg
jg
lea
dec
pop
add
mov
add
arpl
push
add
adc
xor
decl
nop
ficoms
and
add
nop
xchg
pop
cwtl
mov
cwtl
cmp
lahf
in
adc
stc
mov
shrb
or
inc
mov
add
aas
sahf
sub
or
push
inc
jmp
pop
das
cmpsb
enter
je
or
dec
pop
cwtl
and
loop
jbe
nop
stc
pushf
rolb
cmova
add
push
add
addr16
rcrb
xchg
cmp
std
add
lods
dec
push
test
cwtl
mov
sub
push
inc
dec
imul
and
int3
jns
push
inc
pusha
xor
arpl
outsl
shlb
je
xor
dec
sub
inc
mov
xchg
ja
cltd
jnp
lods
rcll
push
pop
push
and
add
add
jle
mov
mov
pop
fldl
std
idivl
inc
add
xchg
sub
xlat
ret
mov
xchg
push
lods
adc
or
add
sub
cld
mov
daa
add
xor
lock
add
inc
mov
jg
call
add
hlt
pop
fwait
add
sub
mov
repz
fdivl
aam
enter
sub
hlt
add
cli
mov
sbb
mov
sub
daa
hlt
test
push
push
mov
out
add
xorb
add
dec
insb
jg
cmp
jmp
aad
aas
cld
push
cmc
mov
insb
in
sbb
in
add
mov
cmpsl
movsb
repnz
addl
sbb
dec
outsl
scas
aas
aas
popa
jge
or
jge
and
adc
mov
xor
add
sbb
into
jno
inc
add
cltd
jne
mov
pop
insl
imul
sar
add
fildl
pusha
add
jmp
enter
add
aas
clc
pop
cmc
setae
filds
mov
movsl
or
mov
jl
add
popf
add
inc
xchg
add
sub
je
cmp
add
fists
fwait
inc
daa
adc
cwtl
in
xchg
add
stos
fisttpl
pop
adc
aaa
mov
sbb
loop
sbb
imul
loopne
xor
mov
add
adc
or
mulb
push
add
push
stos
lods
xchg
stc
xor
mov
test
ss
or
dec
imul
push
popa
inc
hlt
mov
jae
xchg
dec
ljmp
push
andl
hlt
sbb
cli
std
lret
jb
divb
add
push
mov
push
icebp
cmpxchg
mov
mov
mov
add
js
insl
dec
stos
lock
sub
ja
repnz
jge
mov
add
daa
sti
mov
pop
js
and
roll
lods
movl
add
mov
push
insb
mov
push
add
push
out
push
pop
movsb
jl
add
test
pop
loopne
in
fiaddl
mov
ss
fadds
add
aaa
cmp
pop
add
pop
ret
imul
fiaddl
sbb
sbb
push
push
mov
sbb
stc
pop
inc
aam
repnz
xor
push
js
or
and
add
dec
mov
hlt
cmp
loopne
aad
jns
pop
pushf
popa
add
jle
scas
add
out
add
cmpsb
cmc
shr
cs
ficomps
mulb
sbb
adc
add
outsb
sbb
add
fstpt
test
pop
sub
loopne
pop
jae
add
pop
stos
lea
add
dec
sbb
xchg
pop
pop
movsb
ret
rcrb
data16
xor
cmp
push
cmpsl
push
push
adc
add
and
gs
mov
shr
imul
outsl
cwtl
jns
push
sbb
mov
xchg
dec
jmp
lcall
loope
mov
pop
addl
call
sub
or
mov
inc
add
pop
and
out
add
sbb
popf
dec
and
add
pop
in
out
sbb
add
dec
mov
aam
and
adc
je
mov
add
pop
pop
mov
js
shlb
add
adc
aad
add
mov
loope
pushf
arpl
pop
movsl
push
mov
xor
shlb
jl
popa
inc
gs
add
dec
jae
movsl
insb
fsubr
or
sar
je
les
add
into
add
pop
inc
jbe
or
addr16
sbb
lds
inc
mov
adc
lds
pop
or
and
xchg
dec
sub
cmp
leave
sub
add
loope
loop
scas
pop
push
les
jg
add
dec
icebp
leave
add
or
dec
xchg
inc
roll
pop
pop
pop
data16
in
nop
ja
inc
stos
add
sbb
cwtl
xor
push
xorb
or
in
lret
and
push
sahf
nop
dec
pop
lock
aas
add
mov
stos
mov
rorl
dec
mov
add
push
and
rclb
jg
out
xchg
imul
ret
jl
sub
test
xor
add
xlat
and
lods
data16
push
es
je
popf
mov
or
dec
sbb
mov
sub
daa
decl
mov
push
bound
fadds
mov
sti
imul
adc
or
clc
xor
and
ljmp
loop
mov
xchg
lds
adc
ret
push
sbbb
xchg
flds
dec
add
xchg
out
cmpl
cmp
je
mov
or
pusha
in
imul
inc
add
push
pop
filds
cmp
sahf
mov
mov
xor
pop
xlat
pop
add
push
sbb
add
rclb
push
xchg
idivb
std
inc
loop
icebp
shl
pusha
mov
jb
ds
jno
mov
push
and
xor
rolb
gs
scas
add
and
add
in
cmp
dec
std
xorb
fistpll
sub
movsl
inc
popf
addr16
cmc
xor
stc
aad
and
mov
add
mov
jg
je
fimuls
xchg
test
mov
fcomip
push
fnstcw
ja
push
dec
mov
or
pusha
iret
inc
pop
mov
sub
sbb
shll
rorl
aam
jg
push
arpl
js
or
sub
loope
fcmovb
jge
loopne
add
fnsave
add
vmaxps
fld
mov
add
in
cmpb
xor
jns
aad
addr16
sub
or
cmp
sub
push
add
cli
aad
jno
cltd
push
cmp
and
popa
and
into
fiaddl
and
jnp
cwtl
cmp
push
dec
add
shll
lock
add
dec
inc
pop
mov
pop
cmp
mov
pop
add
frstor
aaa
dec
mov
add
mov
lock
sti
cmp
addl
sbb
aam
sbb
call
mov
call
xor
pop
rcrl
movsl
pop
mov
popf
das
adc
xchg
add
cld
lods
fistl
popf
sarl
icebp
add
xchg
and
add
shll
add
cli
subl
mov
repnz
inc
xchg
or
mov
rorb
push
pop
sbb
sbb
mov
lahf
and
mov
xchg
enter
sbb
xchg
jb
cmc
add
adc
test
sbb
push
jae
dec
and
pop
and
add
daa
push
clc
cmp
mov
add
insb
fcomps
fsubrs
subl
mov
sbb
hlt
inc
pop
dec
scas
mov
and
pop
popa
adc
mov
jmp
not
fsubrs
xor
mov
cmp
xchg
ja
add
mov
xchg
cmp
mov
cwtl
mov
cmp
scas
test
aam
stc
sahf
sarb
popl
xchg
xor
mov
dec
jmp
mulps
in
add
inc
lock
push
xor
cmp
nop
in
lret
and
repnz
nop
xor
push
mov
add
scas
popf
cld
clc
jg
cmp
push
mov
pop
xor
dec
adc
jge
cmp
xor
clc
or
push
mov
les
add
mov
cld
mov
rol
mov
cs
dec
add
pop
lahf
mov
nop
pop
mov
nop
xchg
scas
push
popf
xchg
add
xor
mov
pop
inc
nop
push
scas
lret
adc
lock
js
adc
scas
or
inc
aam
in
xchg
pusha
push
inc
or
sbb
sbb
mov
shlb
mov
call
adc
sub
stc
movsl
push
mov
nop
fdivl
xchg
or
xchg
pop
add
inc
int3
or
sbb
push
in
loopne
mulb
xchg
dec
mov
ret
inc
push
rolb
je
loope
bound
jnp
mov
mov
mov
mov
cli
sub
rolb
test
and
inc
ret
jnp
fwait
inc
out
cmp
roll
pop
daa
bound
mov
movsb
sub
ror
nop
movsb
mov
fidivs
adc
sbb
mov
hlt
insb
jno
call
lock
sbb
iret
adc
mov
mov
jno
add
aad
lock
shrb
push
pop
ds
add
push
pop
pusha
sub
incb
xchg
enter
xchg
jno
test
sbb
into
sbb
es
inc
inc
fsubp
push
fs
sbb
jle
scas
dec
fildl
lods
cld
add
movl
mov
sarb
add
mov
dec
jne
sub
sbb
xor
add
cmpsb
out
pop
cmp
repnz
js
hlt
add
pop
xor
addb
inc
repz
adc
cltd
add
dec
xchg
psubsw
scas
jne
adcl
jge
inc
adc
xchg
mov
jmp
test
push
stc
xorb
and
dec
pusha
push
mov
add
cmp
push
sbb
and
outsl
aaa
mov
pop
loop
add
dec
shll
daa
call
inc
ja
sbb
stc
shlb
test
lret
inc
pop
mov
icebp
dec
fcomps
xor
leave
jno
inc
xor
xor
push
or
mov
xor
add
ja
mov
jl
inc
fldl
and
pop
clc
add
mov
in
add
jae
outsb
cwtl
pushf
and
cmp
dec
loop
mov
pop
je
or
jo
push
xchg
sbb
lret
adc
dec
jp
int
loop
inc
int3
sbb
cmp
iret
inc
adc
pop
push
mov
pop
dec
repz
xchg
cmp
fsubrp
adc
mov
add
add
cld
dec
mov
inc
or
pusha
xor
push
jb
aam
and
push
dec
cmpsb
iret
testb
pop
push
mov
mov
xchg
and
out
jl
cmp
dec
mov
mov
cmp
js
mov
add
push
and
aad
stc
sub
mov
cmpsl
push
shl
add
inc
pusha
cld
jp
add
add
aam
xor
inc
mov
inc
into
rclb
lret
xor
xor
sub
scas
jge
out
orb
pop
mov
or
gs
add
decl
mov
xor
xor
add
fadds
cmp
andb
xchg
add
cmp
and
add
sbb
mov
sbb
pushl
out
mov
dec
adc
outsl
subl
dec
jne
add
pop
outsb
fsts
add
push
orb
cli
aad
jb
add
xor
sbb
aaa
lock
mov
jne
jns,pt
movsb
popf
pusha
mov
and
sbb
icebp
or
and
popa
inc
sbb
pop
ret
sub
in
or
cmp
je
fprem1
xchg
aaa
or
fcmovb
and
arpl
rclb
add
minps
inc
lcall
cmp
adc
xor
loope
xchg
sbb
lahf
int
pop
lods
cmp
mov
cmpsl
inc
jle
bound
xchg
inc
shll
fldt
xor
loopne
inc
sub
mov
les
js
add
outsb
jge
inc
into
insb
mov
mov
push
test
mov
cld
shl
jae
add
xor
loope
aam
mov
add
andl
stos
filds
jbe
dec
fs
or
addb
cli
mov
add
jae
or
cwtl
push
fisttpll
adc
and
sbb
dec
or
inc
addr16
call
mov
enter
push
sbb
loop
scas
repnz
mov
mov
xor
xchg
sub
push
add
loope
dec
mov
push
mulb
out
leave
scas
and
sub
adc
jo
call
aaa
loopne
xchg
jl
rclb
dec
push
jo
cmpsb
nop
adc
ds
add
jge
popf
lods
sub
mul
jp
mov
loope
pop
jns
outsl
lea
push
and
jb
scas
sahf
adc
add
dec
jae
test
mov
inc
cli
cltd
faddl
loopne
add
out
xchg
testl
mov
pop
roll
and
pop
xor
movsb
pop
dec
daa
cs
or
fwait
add
mov
cld
cmpb
test
dec
loopne
in
xchg
mov
jno
adc
jnp
xchg
mov
add
lods
aam
inc
cs
mov
incl
add
popa
nop
imul
aam
dec
and
mov
fisubrl
sbb
fsts
scas
sub
pop
xor
and
pop
daa
add
cltd
mov
lret
jnp
inc
test
sub
jno
dec
sbb
cmp
rolb
xor
xchg
add
lds
je
dec
aam
test
rcr
test
imul
lock
push
cmp
pop
lock
sbb
test
dec
cli
enter
sahf
in
ret
std
xchg
repz
and
push
push
jp
orl
xor
rorb
xor
sub
pop
adc
cmp
pop
enter
lahf
call
aad
or
es
mov
and
mov
hlt
xchg
rolb
iret
nop
sbb
insb
mov
lret
arpl
xlat
ss
daa
loopne
xor
xchg
sub
hlt
cmp
in
rcl
or
pop
push
roll
jge
pushf
loope
aam
les
mov
cmp
les
ret
mov
movsb
and
or
dec
out
movsb
rclb
nop
mov
frndint
and
xorb
insb
sbbl
and
addr16
add
lods
pop
lock
mov
nop
lret
dec
ret
cmp
fs
dec
adc
jo
roll
cmp
push
dec
popa
and
dec
cmp
enter
cli
mov
mulb
jle
imul
scas
cmp
notl
mov
and
adc
jo
adc
add
je
cmpsl
add
or
adc
scas
pop
fsubs
or
sbb
and
xor
cmp
fcoml
mov
int
mov
add
mov
and
repz
lock
push
mov
add
adc
leave
push
mov
cmc
xchg
sbb
aas
sub
cmpsb
js
push
iret
outsl
or
push
or
add
dec
mov
add
inc
stos
lahf
mov
cmp
pop
cmp
hlt
dec
mov
fcomps
je
add
cmp
mov
inc
sub
inc
pusha
push
jecxz
lret
lcall
mov
adc
mov
add
lods
lret
and
shl
es
add
lock
pop
call
and
xor
sbb
sbb
cmp
adc
mov
sub
lret
add
or
mov
inc
cmpsl
adc
jne
sarb
dec
pop
sub
and
pop
add
mov
enter
add
ficoms
dec
insl
jmp
lock
and
push
xchg
cld
add
das
mov
and
mov
push
or
mov
pop
pusha
je
jmp
jb
test
and
mov
rorb
xor
sar
adc
cwtl
mov
adc
adc
dec
xor
rcrb
aas
inc
xchg
add
pop
inc
jnp
outsb
stc
daa
add
mov
mov
mov
dec
dec
xchg
or
push
jl
addr16
mov
push
mov
ds
cmp
addb
frstor
add
xchg
push
pop
adc
inc
and
mov
orb
lods
pushf
push
ret
ja
and
pop
xor
les
inc
leave
push
aam
lret
cmc
cmp
push
bound
addl
cmp
xor
das
adc
add
repnz
mov
popf
pushf
jmp
mov
jae
mov
lds
dec
sahf
insb
enter
xchg
jp
mov
xor
dec
scas
aam
jp
and
jg
mov
inc
pusha
aam
sbb
jp
or
xchg
dec
shrb
subl
pop
add
aad
test
mov
inc
data16
pop
mov
enter
cmpsb
mov
nop
mov
jo
add
cmp
inc
sub
cld
ret
clc
mov
mov
call
adc
gs
cmp
jae
dec
insl
repnz
jns
mov
xor
dec
mov
cmp
sbb
pusha
orb
repnz
push
ds
or
push
mov
or
sbb
cltd
dec
jnp
js
mov
or
jecxz
sub
cld
and
inc
dec
push
add
and
mov
fs
jl
in
xor
or
pop
adc
adc
jp
xchg
fdiv
sub
lcall
subb
loopne
add
js
cli
mov
dec
popf
add
jge
pop
xchg
mov
filds
push
jb
cmpsl
arpl
pop
add
dec
sub
out
aaa
or
mov
jl
add
adc
sbbb
mov
xor
cmp
adc
dec
cmpb
iret
jne
adc
and
cli
scas
pop
push
dec
cmp
add
lds
test
shrb
or
clc
jg
imul
adc
and
sub
or
jge
fwait
enter
clc
xor
mov
pop
push
adc
stc
movsl
cltd
adc
ret
and
in
lahf
pop
dec
cmp
pop
mov
or
inc
in
dec
cwtl
pop
rolb
rcll
sar
cmp
enter
push
push
fcoml
and
adc
xor
imul
out
stc
add
sub
add
hlt
popf
pop
sub
loopne
out
mov
lods
mov
call
add
insl
fldenv
out
xchg
fwait
pop
mov
movl
add
scas
aad
inc
mov
lods
shlb
sub
add
adc
push
ds
bound
aas
xlat
mov
imul
push
bound
movsb
add
repz
and
dec
addb
aaa
add
mov
add
pop
ja
ds
or
jno
cld
dec
jbe
mov
inc
call
adc
cli
dec
repnz
cmp
lock
cltd
adc
adc
sub
mov
movsl
push
sti
test
cmp
inc
sbb
inc
or
add
bound
loope
ds
push
mov
add
xchg
mov
fldt
pusha
add
les
cld
setge
movsl
adcl
add
mov
popa
pop
push
arpl
add
sub
in
xor
and
andl
fadds
mov
out
mov
xor
dec
clc
out
sbb
pop
les
int3
ljmp
mov
mov
and
add
push
mov
aam
cmpl
out
mov
add
ret
pushf
cwtl
mov
cmpsb
addb
shrl
scas
outsl
xchg
add
and
or
push
test
inc
cmc
mov
mov
out
sbb
in
pop
inc
sar
add
movsb
xor
mov
int3
roll
cmpsl
ret
xchg
mov
inc
and
adc
leave
sub
adc
lock
sub
push
dec
adc
sbb
xchg
sbb
in
cmp
jg
das
dec
pop
dec
filds
out
mov
int3
jnp
je
repnz
popf
les
or
fiadds
sbb
mov
adc
addr16
jle
mov
fdivs
fcomps
inc
nop
sbb
fmul
rorb
or
pop
xor
popf
stos
sarb
lahf
xor
push
call
pop
outsl
inc
pusha
aad
inc
rclb
mov
dec
aam
pop
inc
ret
ds
add
xchg
sbbb
cwtl
add
rcrl
es
fs
mov
test
mov
andb
mov
inc
mov
push
int
add
pop
addb
aam
out
add
cmp
mov
mov
cmp
and
jo
fs
cmp
push
unpcklps
xor
add
xor
xor
push
pop
adc
nop
pop
les
xor
fbld
js
std
stc
aad
clc
inc
jge
popf
shrl
imul
push
hlt
in
aas
rorb
mov
xchg
and
loopne
sub
les
push
ja
nop
insl
add
sahf
enter
xor
aad
fnstsw
cmp
mov
push
push
in
in
cmc
cld
push
mov
pop
add
adc
xor
mov
lea
aas
add
mov
aam
lods
inc
jp
call
cmpsl
inc
loope
insl
push
lret
and
dec
pusha
movsl
loope
icebp
mov
add
add
mov
inc
jnp
cmp
sbb
push
test
sub
pop
cmp
push
xor
add
je
push
dec
push
fdivl
or
jp
dec
fs
aam
add
inc
sbb
and
jnp
xorb
sub
adc
repnz
add
fisubl
add
add
pop
sti
addb
mov
daa
int3
shrl
xor
and
add
stc
mov
popf
repnz
das
sahf
push
mov
stos
add
jmp
incl
stos
jge
repnz
std
and
jns
lds
jl
popf
jl
xor
ficomps
sbb
jmp
jmp
inc
out
cs
or
adcb
cmp
in
fstps
push
bnd
rolb
repnz
pop
add
daa
lea
or
je
or
shll
gs
mov
xchg
jecxz
orl
jo
pop
dec
ljmp
jb
jecxz
jg
mov
mov
or
jo
cmp
fcoml
popa
xor
jg
add
imul
add
pop
mov
out
add
and
xor
das
push
or
movsl
sub
jmp
inc
shll
imul
ficompl
mov
outsb
or
inc
out
jno
and
inc
mov
cmpsb
add
and
cmp
arpl
jp
pusha
push
lds
mov
mov
push
out
and
add
dec
push
push
mov
sbb
lock
xor
imul
add
jg
mov
mov
sidtl
dec
jle
dec
and
jb
and
es
adc
jmp
inc
lock
mov
sti
or
cmc
adc
scas
popa
pop
sbbl
bound
mov
je
popa
sbb
cmp
fldenv
xchg
add
daa
imul
out
add
les
sub
and
push
cmpsb
aam
mov
cmp
divb
movsl
loope
call
add
xchg
daa
add
cltd
stc
pusha
add
dec
adc
icebp
cld
push
add
mov
sub
inc
sbb
std
fs
pop
jmp
xchg
dec
rorl
cmpsb
inc
add
cmp
ret
pop
imul
xchg
out
pusha
adc
mov
jg
xchg
pop
sbb
add
jne
nop
push
xchg
add
lods
fadd
mov
and
decb
fwait
icebp
lds
ds
pop
shl
sbb
insb
scas
fwait
jl
pushf
enter
jbe
sub
rorb
fldenv
adc
pusha
dec
mov
lahf
arpl
fstps
mov
push
rorl
mov
ret
into
cmp
and
xchg
lds
rcll
mov
loopne
sub
shll
mov
add
repnz
nop
lret
pop
adc
add
sbb
into
jmp
ret
les
test
lock
pop
adc
xor
paddusw
test
pushf
test
add
or
scas
push
fmull
dec
lcall
loope
iret
xor
pop
sbb
sub
xor
and
out
jle
sub
cmpl
mov
cwtl
movsb
jne
aas
sbb
inc
sti
fadds
mov
repnz
jnp
xchg
clc
mov
add
clc
call
fmull
xor
push
ss
fs
xor
pop
xchg
lock
shl
daa
call
or
imul
push
add
or
add
jmp
lock
pusha
dec
pop
pop
call
mov
insb
ss
lret
add
pop
rcll
out
daa
into
dec
or
xchg
pop
jecxz
in
xchg
adc
cld
movsl
call
int3
pop
mov
subb
pop
cs
pop
xchg
mov
pop
test
insl
inc
imul
pop
pop
cmpsl
add
or
cli
dec
cmpsl
dec
xchg
xor
movsb
add
dec
pop
test
iret
pop
psrlq
int3
push
sbb
push
mov
xor
xchg
cwtl
add
enter
test
in
xor
sub
add
or
pusha
nop
mov
jp
and
fadds
ret
jne
xlat
add
imul
pop
pop
mov
dec
or
xchg
imul
adc
push
push
lods
push
out
add
jmp
movsl
add
js
out
cmp
outsl
add
jbe
mov
lcall
imul
pop
add
rcrb
andl
or
and
inc
testl
xor
icebp
popa
sarb
daa
xchg
pop
ret
lcall
mov
movsl
div
dec
add
xchg
out
xor
out
inc
mov
es
xchg
addr16
add
sbb
cmp
loopne
loop
push
call
add
or
mov
lds
ja
jo
sbb
in
and
sbb
adc
pop
cmpsb
cmp
and
clc
xor
push
xchg
stc
jl
aam
adc
lds
fsubrl
add
and
or
dec
inc
dec
sti
shlb
pop
aam
jp
or
mov
pop
mov
sbb
arpl
stos
popf
in
dec
cmpsb
js
fsubs
in
jae
inc
shlb
inc
call
dec
cmpsb
shlb
dec
sub
jbe
add
inc
xor
add
in
add
pop
and
fsub
and
sahf
xchg
in
imul
ds
mov
pushf
sub
dec
mov
add
cmc
jmp
inc
jo
loop
hlt
xchg
shll
hlt
scas
inc
add
or
pusha
add
lcall
dec
xchg
mov
pop
push
xor
movsl
cmp
mov
mov
push
xor
and
dec
sarl
out
inc
mov
pop
loop
xor
dec
ljmp
inc
jnp
in
fiaddl
jae
loopne
xchg
mov
dec
mov
inc
ljmp
add
repz
cmpsl
dec
mov
cld
adc
shll
adc
movsb
adc
adc
pop
inc
mov
fld
stc
jns
cwtl
inc
xchg
add
xchg
jbe
xor
and
shr
mov
or
sbb
out
pop
sti
fdiv
in
mov
adc
inc
out
inc
xchg
sahf
fdivrs
cltd
mov
stos
add
push
test
push
inc
add
leave
popa
add
mov
out
bnd
or
jnp
add
mov
das
stos
or
add
leave
jge
cmp
pop
mov
mov
and
imul
inc
mov
daa
mov
push
in
add
and
and
subl
test
add
inc
pop
fs
mov
add
cli
jmp
xchg
jo
inc
mov
clc
addr16
pop
pop
sub
popf
push
je
imul
sbb
sbbl
add
push
cli
movsb
add
pop
divb
mov
xor
or
add
enter
dec
fsubl
lods
in
insb
adc
cli
jb
xchg
add
mov
popa
int
jecxz
arpl
push
pop
dec
out
adc
xor
inc
adc
xor
and
iret
sub
shlb
push
mov
mov
sub
and
xor
or
popa
jo
cli
je
add
jno
or
and
cmp
xchg
rolb
sahf
add
iret
or
insb
adc
lret
rcrb
mov
imul
and
or
cmp
and
add
out
pop
negb
iret
fcompl
and
push
add
and
fcos
cmp
add
dec
push
filds
pushf
pop
inc
icebp
popa
pop
outsb
and
add
mov
cli
mov
andb
aas
sbb
push
cltd
arpl
leave
mov
xchg
pop
sub
dec
push
jge
add
cld
inc
test
shrb
dec
mov
scas
or
imul
jo
mov
pop
icebp
mov
jnp
arpl
lds
mov
mov
call
ret
jmp
arpl
or
adc
xchg
in
xchg
dec
xchg
leave
daa
test
dec
cmpb
andb
pop
mov
and
jb
mov
add
imul
out
nop
stc
add
add
mov
xchg
iret
xchg
push
sbb
jmp
adc
mov
ret
movsl
xadd
les
dec
lcall
pusha
or
inc
cmp
lahf
imul
enter
dec
add
repnz
lret
and
dec
adc
push
jns
in
outsl
popa
jl
add
add
push
add
add
mov
cmp
addl
add
cmp
nop
mov
or
mov
inc
mov
and
add
dec
mov
xchg
mov
roll
nop
or
or
or
xorb
hlt
je
sbb
pushf
adcl
mov
stc
rolb
orb
and
ja
fsts
mov
rcrb
or
adc
adc
loopne
inc
or
cwtl
cmc
outsb
mov
xchg
jmp
into
add
arpl
popa
pushf
inc
fidivl
sbb
int3
add
push
and
or
pusha
fs
xchg
imul
scas
sti
inc
outsl
fstps
mov
popf
aaa
add
cmp
mov
add
and
loopne
gs
add
inc
repz
add
out
or
pop
andb
pop
js
jne
add
push
sti
stos
mov
pop
mov
dec
adc
xchg
or
mov
ja
mov
mov
cmp
into
or
jmp
loopne
sbb
mov
imul
divb
daa
stc
or
ds
push
stos
jnp
into
stos
and
popa
xchg
xchg
pop
add
push
jo
enter
arpl
loop
or
notb
clc
pop
ret
in
and
les
adc
pop
jns
jo
jle
mov
xchg
and
cs
jl
imul
add
stc
dec
scas
shll
adc
pop
out
push
jl
xchg
rcrb
in
cltd
ja
pop
jne
push
sbb
incl
inc
nop
mov
and
dec
and
adc
mov
lcall
sbb
dec
push
pushf
adc
icebp
out
in
arpl
add
xchg
inc
pop
sub
bound
push
and
pusha
loop
add
xorb
sub
add
iret
int
and
push
in
xchg
or
adcb
sbb
insb
and
movb
int
lret
push
push
call
jecxz
stc
sub
lds
adc
scas
into
les
dec
add
add
xchg
sub
cwtl
js
and
fsubr
sbbb
lret
jb
es
sbb
repnz
mov
and
jbe
in
xor
push
adcb
sbb
pushw
dec
les
xchg
xchg
dec
mov
mov
inc
and
test
xchg
inc
xchg
pcmpgtd
add
out
lock
fs
and
ljmp
jge
and
outsb
movsb
mov
or
mov
sbb
mov
push
cmp
jns
lds
add
push
pop
in
insl
lret
and
into
int
mov
add
imul
push
addb
and
or
shlb
fstl
outsl
add
push
sbb
lret
mov
out
loopne
xchg
fldl
sahf
lods
enter
adc
pop
sub
mull
inc
cli
dec
mov
or
mov
rolb
fs
xorb
outsl
and
imul
sbb
xor
adc
and
mov
xorb
lock
add
sub
ficoml
pop
add
icebp
loopne
data16
inc
inc
pusha
add
sti
int3
add
sbb
mov
cmp
enter
in
push
add
adc
adc
nop
int3
lods
or
in
repnz
sbb
push
and
in
and
push
adc
imul
lret
cmp
mul
push
adc
inc
test
add
push
cli
popl
leave
rcll
push
inc
dec
xchg
dec
lahf
mov
fldenv
add
int3
and
jno
mov
lods
add
xchg
shl
and
nop
add
out
jb
je
js
and
mov
cmp
xlat
mov
cmp
dec
pusha
je
outsb
inc
hlt
jne
sahf
testl
add
xchg
sarb
mov
inc
bnd
imul
cmp
std
xchg
and
outsl
add
pusha
push
add
jmp
ljmp
test
hlt
push
mov
inc
into
jo
loop
add
xor
icebp
and
sub
jl
cmp
add
repnz
sarb
and
mov
and
mov
pop
add
call
push
push
lods
or
test
add
pop
scas
in
in
movsl
and
sbb
add
insb
fisubrs
loopne
popa
jb
mov
dec
call
stc
sub
push
test
push
add
pop
cmpsb
cmp
add
into
push
addr16
insl
js
es
add
aam
leave
pop
mull
cld
rcrl
fldcw
cld
int
shld
push
push
loopne
jecxz
pop
nop
sub
jb
cmc
mov
and
lahf
sbb
movsl
adc
jbe
xor
cld
and
out
rcrb
sbb
sbb
mov
add
inc
and
push
dec
or
and
add
mov
mov
icebp
push
sahf
mov
inc
jp
push
add
and
xor
xchg
mov
out
push
fucomi
inc
cwtl
add
mov
cmp
gs
sub
pop
and
outsb
fptan
inc
dec
pusha
pop
sbb
in
shl
add
xor
call
fsubrs
mov
pop
fwait
out
dec
xchg
add
adc
hlt
aaa
loope
nop
pop
into
jp
in
pop
nop
inc
mov
cwtl
out
sub
hlt
ret
test
inc
jmp
add
enter
repz
mov
mov
out
mov
mov
psrlq
data16
push
clc
push
jns
jno
bound
sti
inc
outsl
pop
and
xchg
es
hlt
mov
cs
mov
mov
in
jnp
shrl
out
xor
popl
shlb
enter
add
call
addb
addb
fdivrl
push
int3
pop
add
dec
ljmp
sbb
cmp
xor
mov
cmpsb
push
or
pop
inc
rcrb
cmp
out
iret
dec
add
loop
mov
lock
shrb
pushf
mov
lcall
cwtl
nop
daa
lock
xchg
xor
push
add
shll
dec
cmp
adc
xchg
sbb
loopne
add
mov
imul
add
and
xor
clc
add
fistpl
sahf
cmp
add
ljmp
sbb
sbb
flds
js
add
cmpl
dec
lea
in
leave
dec
fldl
or
mov
add
adc
add
mov
xlat
cmp
movsb
and
mov
insl
sbb
adc
loopne
mov
xor
adc
inc
xchg
in
dec
sbb
adc
dec
sub
pop
jno
push
inc
inc
mov
dec
pop
verw
cmp
dec
mov
lock
mov
add
adc
movl
shlb
cs
rcl
fdivrl
pop
sbb
add
int3
pcmpeqb
pop
push
lock
fstpl
cmp
jmp
dec
data16
dec
inc
push
test
fwait
xor
dec
xor
and
dec
jns
add
scas
cmp
mov
mov
or
and
sbb
mov
add
adc
and
or
movsb
movsl
inc
inc
jne
add
push
mov
aad
or
add
pop
outsl
xor
pusha
in
lds
ljmp
mov
pop
xchg
xor
and
or
cmp
cs
in
mov
mov
jmp
inc
pop
pop
lods
mov
pop
cmp
mull
mov
pop
and
loop
mov
subb
add
test
js
push
mov
adc
psubusw
push
sahf
xor
or
push
push
mov
xchg
roll
sbb
adc
mov
add
sub
mov
mov
sbb
stos
jmp
and
mov
jl
loopne
jecxz
sub
or
imul
rorb
adc
scas
sub
add
add
sbb
call
inc
stc
cmp
add
ret
repnz
dec
sub
dec
sub
adc
mov
lcall
out
cld
xchg
pop
sub
pop
xchg
xor
adc
insl
mov
lods
mov
cli
add
clc
js
or
pop
pop
xor
or
or
sti
enter
adcb
lock
loopne
dec
int
xor
ja
pop
cltd
lret
test
jg
pop
mov
adc
fs
test
sub
bound
add
popa
push
dec
or
mov
test
lret
repnz
loopne
and
rcrb
inc
xchg
sub
enter
stc
add
in
cld
mov
xchg
out
mov
pushf
jl
lods
sbb
jno
dec
add
pop
fadds
imulb
push
add
push
xor
or
mov
das
call
into
stc
pop
fbld
aas
dec
add
in
jae
cs
add
or
jns
ljmp
icebp
mov
mov
bound
push
dec
mov
mov
ljmp
dec
iret
rorb
dec
mov
loopne
and
mov
repz
icebp
mov
and
sbb
push
push
mov
fs
inc
inc
shll
nop
shlb
repnz
add
pop
push
out
jns
add
add
test
ret
mov
sbb
andl
mov
sbb
xor
push
int3
dec
insb
push
pop
rolb
insl
mov
loopne
aaa
sbb
inc
pusha
push
ret
pusha
insb
mov
mov
jns
xchg
and
pop
in
add
fdivrl
push
sbbl
mov
and
push
mov
stc
mov
sub
inc
mov
xor
mov
xor
imul
or
ljmp
add
imul
mov
adc
cmpsl
test
pop
sbb
movsb
lea
push
mov
in
fsts
push
fnstenv
sbb
dec
jae
jb
dec
addl
mov
xor
xor
in
inc
lods
jo
enter
stos
dec
mov
imul
or
mov
cld
fisttpl
popf
jo
dec
outsl
push
push
or
dec
lret
mov
mov
sub
sarl
std
ss
in
pusha
sbb
fldlg2
leave
jbe
mov
and
outsb
pop
inc
xchg
adc
fidivs
push
xor
or
les
sbb
incl
xchg
mov
lahf
pop
and
or
jl
or
int3
cmpsb
sbb
neg
movsl
xorl
mov
xchg
add
push
imul
add
mov
nop
arpl
xor
stos
loopne
flds
add
or
inc
loope
and
cmp
test
jmp
leave
sub
sbb
push
push
inc
push
jp
pop
sbb
mov
clc
aam
add
daa
push
or
and
and
pop
in
sarl
push
sti
aam
and
xor
enter
pop
repnz
or
aas
pushf
out
xor
and
cmc
add
mov
or
or
test
xor
sbb
fildl
sarb
pop
and
push
sub
movsl
fadds
add
inc
mov
xor
das
add
mov
in
dec
and
or
ds
fistl
sbb
pop
faddl
rcrb
movsl
aad
sub
pop
call
and
rcl
push
mov
mov
push
adc
addb
je
pop
out
cmpl
inc
es
jo
inc
ja
jge
sub
adc
lret
sbb
dec
sub
cmp
pop
mov
cmp
outsb
fisttpl
pop
int
repnz
andb
sub
jecxz
push
dec
lret
les
pop
cs
pusha
enter
dec
xor
adc
mov
add
jle
pop
mov
daa
in
sub
leave
popf
fnstsw
xor
out
mov
outsl
mov
inc
js
dec
jns
ret
lock
or
jbe
sbb
mov
inc
loopne
loope
sbb
add
mov
sahf
popa
stc
notl
enter
jo
push
loop
clc
cmpsl
mov
xchg
fmuls
mov
jmp
mov
pop
imull
sub
push
mov
add
sub
cmpsb
dec
push
inc
mov
sub
dec
or
pop
xor
fs
mov
popa
imul
sbb
cmp
fistpl
sub
sar
mov
imul
adc
jo
pop
add
jno
and
or
add
sbb
mov
dec
sbbl
dec
int3
in
jp
sub
dec
jo
mov
mov
adc
mov
add
pop
adc
scas
xchg
xchg
add
mov
ret
and
in
mov
insb
scas
add
loopne
or
inc
sbb
inc
add
push
or
sub
imul
sbb
pushf
daa
xorb
pop
mov
addb
fcmovu
pop
mov
int3
add
dec
mov
push
or
and
movsl
shlb
cwtl
es
xor
push
push
les
ret
orb
mov
add
rcrb
xchg
add
sbb
xor
add
adc
add
addr16
pop
inc
stos
cmp
add
jmp
adc
hlt
xchg
cmc
pop
mov
jmp
inc
mov
pop
add
pop
aaa
hlt
lock
pop
or
mov
outsb
or
subb
jae
dec
shll
cmc
pushf
jle
push
or
cmp
push
mov
or
test
aam
rolb
dec
bsf
cltd
xchg
add
xchg
hlt
int
and
fiadds
add
cltd
out
dec
xor
jno,pn
push
js
lock
mov
mov
jnp
stc
cs
mov
pop
ret
loopne
or
fcom
dec
sahf
daa
bound
jns
pop
adc
add
iret
mov
add
loop
cmc
loopne
mov
inc
add
jno
pop
dec
cld
js
or
in
les
fsub
mov
mov
sahf
cmp
cwtl
jl
pusha
lock
mov
stc
xor
mov
filds
mov
sbb
and
hlt
test
xorb
adcl
pusha
das
mov
jecxz
cwtl
adc
dec
pop
add
mov
xor
add
negb
call
xchg
shll
mov
and
enter
inc
add
stos
leave
stc
pop
imul
je
ret
pushf
mov
and
jmp
out
nop
jecxz
mov
in
pusha
pop
int
push
and
add
sub
xor
call
shll
jl
sub
ret
call
inc
or
adc
cwtl
loopne
mov
adc
je
popa
cmp
mov
jbe
pop
xchg
pop
sti
add
dec
cmc
pop
sub
pop
mov
inc
add
cli
orb
test
loop
pop
fs
inc
adc
shlb
outsl
push
sub
daa
data16
les
cmp
add
popf
jge
fs
stc
test
in
mov
push
aam
andl
popf
cmp
dec
pushf
or
xchg
add
and
mov
mov
sub
lahf
jne
xchg
hlt
sub
and
cmpsb
pop
ret
scas
fnsave
dec
mov
mov
mov
out
sti
mov
scas
imul
loopne
xchg
and
or
xchg
jo
push
sub
cmpsb
add
or
xor
fmuls
dec
add
jecxz
or
nop
xchg
fs
add
arpl
or
int3
inc
xor
cli
sub
push
mov
inc
clc
mov
je
xor
adc
push
sub
mov
adc
add
dec
add
jo
testb
and
scas
push
lods
cwtl
and
int
xchg
add
dec
fistps
pop
enter
dec
in
or
sub
imul
outsb
push
add
sbb
mov
lods
stos
or
inc
js
in
cmpsl
xchg
add
dec
push
das
or
add
test
pop
or
outsb
fwait
loopne
add
mov
std
dec
leave
sbb
cld
ljmp
xor
dec
inc
dec
jp
mov
add
or
mov
add
lret
adc
mov
lret
sub
popf
cmc
cmp
push
cmp
loop
jle
repz
sahf
add
dec
inc
pop
push
sbb
adc
adc
xor
inc
imul
inc
mov
add
out
cwtl
nop
imul
adc
adc
jo
dec
xor
icebp
in
rorb
mov
inc
push
out
push
add
push
mov
cwtl
push
add
scas
rcl
int3
pop
xchg
aad
inc
pop
mov
mov
filds
xchg
mov
divl
inc
add
mov
jg
pusha
push
jecxz
cmp
addb
es
dec
stc
std
test
daa
jp
test
lret
sti
mov
insb
sbb
pushf
push
rolb
jg
es
mov
outsl
mov
popa
mov
add
mov
and
and
jne
fdivrl
sub
push
bound
add
leave
and
adc
add
in
xor
dec
cmp
ret
lock
sub
add
int
mov
loope
cli
jno
popa
add
pushf
and
imul
sbb
mov
enter
add
inc
pop
adcb
add
dec
je
adc
lock
icebp
add
adc
jbe
scas
cwtl
jo
ljmp
fdiv
mov
mov
xor
ret
nop
cmp
push
ficoml
mov
movsb
scas
inc
cmp
lods
push
or
jo
xor
push
incb
popf
in
stos
fstl
rolb
insb
add
mov
add
mov
or
lods
push
jbe
and
jecxz
xchg
jns
nop
cld
and
mov
in
addb
cmc
and
pop
mov
xchg
jmp
jae
sub
xchg
mov
sub
stc
in
dec
add
xchg
or
repz
and
loop
or
addl
pop
jae
xchg
mov
or
and
or
adc
xorl
mov
add
pushf
add
pushf
es
xchg
imulb
mov
jmp
rolb
aad
sbb
jg
in
mov
int3
and
xchg
adc
dec
push
repz
xor
cwtl
loop
movsl
int3
sbb
lds
subb
movsb
or
stc
inc
add
in
rorb
cwtl
clc
bound
adc
mov
sub
jbe
jbe
cmp
or
lret
mov
loop
gs
sbbb
mov
ret
mov
or
rorl
mov
addr16
nopl
lea
enter
or
jbe
sub
enter
mov
fbstp
nop
mov
add
pop
femms
jnp
out
fsubs
push
xorl
lods
add
lods
dec
push
mov
add
mov
and
out
add
loopne
dec
pop
repnz
pop
inc
jmp
loope
pop
xor
cmp
es
xor
and
sbb
movsl
xchg
pop
fs
cmp
sub
xor
dec
pop
shll
adc
sub
test
mov
pop
icebp
adc
cmp
dec
or
jbe
push
js
fadds
mov
push
imul
cltd
dec
inc
sbb
adc
adc
stos
jno
negb
push
repz
test
add
push
mov
orb
add
inc
and
inc
int
cltd
xor
fmull
xchg
inc
mov
sub
out
xor
sub
test
and
in
aaa
shrl
lcall
or
push
sarl
ret
notb
or
orb
dec
mov
scas
aas
outsb
xchg
enter
int
cmp
xchg
cwtl
imul
xchg
pusha
or
and
test
test
xor
cltd
roll
in
mov
cmp
add
out
jge
or
ret
xor
and
cmp
mov
jl
adc
cs
dec
mov
inc
or
jmp
rorb
loope
push
mov
or
jecxz
lcall
call
sbbl
pop
xor
je
push
pop
int3
pop
xchg
push
enter
test
mov
jo
dec
sbb
sbb
js
adc
cltd
and
and
jmp
adc
sbb
mov
mov
sbb
lods
mov
out
in
enter
add
lret
dec
cwtl
or
push
lock
xor
push
repnz
dec
adc
into
dec
stc
clc
pushfw
push
in
shrb
push
cwtl
mov
nop
add
aam
lock
add
loopne
imul
cwtl
adc
sub
addr16
adc
xlat
call
cmp
and
inc
jne
add
xor
mov
xorb
adc
ss
or
dec
fwait
sbb
cmp
mov
sub
add
push
pop
subb
adc
xor
enter
fimuls
pop
cmpb
mov
xchg
je
cmpsl
mov
push
fsubrl
mov
dec
popa
mov
aad
cwtl
sub
mov
cmpl
inc
test
sbb
ret
mov
pop
jnp
mov
adc
xor
cmp
jo
pusha
inc
dec
fisttpll
cld
in
fs
cmp
jl
sub
jg
jnp
inc
mov
add
insb
xor
pop
subl
and
push
pop
test
shlb
sub
fstpl
xchg
add
mov
xchg
add
std
add
xchg
popf
lsl
adc
sub
les
add
sub
cmp
add
shr
cwtl
sbb
sbb
push
mov
xchg
pushf
sub
add
or
mov
xorb
int3
jmp
xchg
rolb
cmp
mov
adc
fwait
pushf
in
fstpl
in
fiadds
push
aad
cmp
push
lret
enter
shrl
int
lock
add
mov
xor
and
shlb
or
xor
mov
clc
xor
test
add
push
int3
movsb
mov
iret
add
jne
pusha
ret
shll
gs
clc
adc
hlt
adc
or
jbe
stc
imul
cmpsb
inc
inc
xchg
int3
sarb
xchg
jmp
push
enter
adc
sbbl
js
sbb
decl
andl
inc
sbb
sbb
aas
stos
movsl
call
push
fmull
lcall
cmp
jg
sbb
sub
fiadds
sbb
pop
mov
fisttpl
and
leave
dec
and
adc
stos
sbb
pop
leave
sub
jp
lret
add
pusha
bound
or
jmp
movsb
adc
enter
cmp
imul
pushf
pushl
push
aaa
adc
jne
add
or
adc
inc
adc
lret
or
outsl
into
lds
and
xchg
mov
mov
and
xlat
xchg
jmp
xor
loop
test
test
sbb
mov
add
cltd
addb
fstpt
xchg
adc
mov
rolb
push
mov
in
push
aas
shll
xor
adc
ret
xor
mov
fs
sbb
cmp
adc
fisubrl
jle
jl
or
xchg
jecxz
cmp
sarb
mov
lock
xor
jno
shll
cwtl
dec
sbb
and
jl
add
mov
sub
mov
sbb
pusha
inc
jns
fldt
add
leave
in
jg
xor
or
rorb
and
mov
mov
in
or
aam
add
pusha
jae
xchg
cmp
or
mov
cwtl
and
xor
test
mov
fsubrs
sbbb
shll
loopne
mov
pop
sub
xor
inc
ficomps
js
roll
pushf
dec
repz
movsb
int3
and
adc
xchg
xor
push
inc
inc
mov
mov
xchg
cmpsb
lock
imul
test
cs
cltd
pop
subb
xchg
fldcw
fldt
xchg
add
sub
popa
push
xchg
ljmp
inc
sub
or
add
xor
sub
cld
adc
sbb
call
loop
jnp
xchg
aaa
cmp
rcr
ss
pop
push
pop
scas
mov
aam
inc
adc
aad
dec
popf
test
enter
sti
inc
adc
fiadds
add
jle
jne
or
pop
adc
dec
adc
jb
adc
mov
mov
sbbb
adc
xchg
fnsave
cmpb
nop
sbb
pop
jmp
cmp
sahf
hlt
in
jne
jmp
clc
fsubs
xor
orb
push
adc
dec
inc
xchg
in
jmp
and
xchg
cmp
push
push
sub
and
lahf
mov
inc
adc
push
jecxz
or
pusha
adc
cwtl
add
sub
adc
mov
rclb
xchg
cwtl
les
dec
int
andl
or
xor
rcrb
add
js
xchg
insl
sbbb
repnz
sbb
and
mov
or
or
sub
lret
shrb
cltd
sub
or
mov
lcall
xchg
sub
jmp
xor
push
cmp
add
adc
xorl
cmp
mov
int3
jo
push
add
mov
out
stc
inc
adc
js
jecxz,pt
jle
enter
mov
cpuid
sbb
ret
fwait
pushf
clc
enter
loope
adc
add
cmp
es
int3
xchg
lock
xor
in
sub
ret
adc
cmpsb
add
fcoms
sub
sub
rolb
mov
fs
lret
sub
sub
rorb
mov
xor
or
pop
es
test
mov
xor
cmp
dec
hlt
push
inc
test
pop
xor
shlb
push
mov
mov
push
adc
inc
rolb
and
lock
popf
sub
dec
shl
and
dec
xchg
inc
movsb
popf
or
push
add
addr16
sarb
mov
xchg
push
addl
fwait
xor
cwtl
imul
fiaddl
push
mov
and
push
fstpl
xor
cmp
cltd
adcb
mov
push
bound
pop
insl
dec
mov
sbb
lret
mov
dec
dec
lahf
xchg
inc
xor
data16
cs
lods
or
daa
or
popa
adc
xor
inc
inc
nop
mov
xor
nop
pusha
inc
int3
xchg
jns
and
xchg
or
add
mov
push
pop
out
sbb
adc
jne
mov
loop
mov
andb
cmp
je
pop
sub
or
cmp
rolb
mov
in
test
ljmp
in
rorb
dec
xor
outsb
xchg
add
push
pusha
adc
scas
rorb
xchg
jp
and
das
ja
ret
mov
add
mov
shr
add
lods
dec
and
adc
xor
pop
jb
pop
and
fstl
xchg
push
fsubrs
cld
inc
rcrb
lahf
push
mov
nop
addr16
movsl
call
or
push
xor
addl
incl
push
jecxz
loop
push
xor
xor
pushf
jb
sub
push
add
shlb
ret
push
xchg
add
mov
ds
scas
or
test
and
cwtl
imul
rclb
mov
adc
pop
push
lcall
inc
sbb
xchg
dec
in
jge
lock
or
cmp
pusha
push
jp
fbstp
sbb
xchg
scas
jecxz
inc
pop
and
xchg
and
sub
cltd
out
test
hlt
dec
mov
icebp
add
mov
or
xor
in
add
xchg
pop
xorl
data16
or
push
adc
test
mov
out
unpckhps
ficoms
sub
mov
pop
cld
sbb
mov
push
loope
mov
push
insb
pushf
jno
or
push
and
jo
xor
repz
ljmp
outsl
cmpsb
cld
and
lock
es
loopne
inc
std
xor
pop
add
movb
dec
es
mov
lock
fisttpll
rorb
inc
pop
or
xchg
and
push
dec
nop
and
repnz
dec
xchg
daa
pushf
pop
in
cmp
mov
fwait
nop
out
mov
adc
adc
xchg
in
push
or
push
push
pop
add
ljmp
and
das
cmc
add
stc
sub
inc
gs
jle
leave
movsb
and
xchg
jmp
add
sbb
push
mov
mov
and
mov
jbe
cltd
jecxz
cld
cmp
mov
adc
lret
lcall
les
adc
cmpl
inc
inc
push
mov
xor
adc
cmc
and
mov
movsb
add
pushf
pop
dec
dec
jecxz
pusha
sbb
push
or
and
add
mov
bound
sub
add
nop
inc
mov
xchg
rorb
mov
cmp
andl
not
dec
test
jbe
fs
add
movsb
cwtl
add
insl
ds
pop
xlat
pop
jl
insb
inc
data16
sub
push
outsb
das
or
sub
mov
sarb
and
xchg
ds
mov
mov
rcrl
jp
sbb
adc
inc
push
mov
mov
test
jp
add
repnz
jo
movsb
xchg
mov
mov
pusha
cld
ror
xor
ds
cmp
push
mov
je
ljmp
call
fcmove
loope
dec
clc
push
ljmp
xor
sti
dec
loopne
inc
cs
add
mov
sub
push
andl
popl
es
stos
loopne
xchg
enter
fisubs
test
xor
scas
das
rcr
cli
rolb
cwtl
lock
add
sahf
push
mov
rorb
inc
push
subb
cld
ds
leave
mov
mov
fcomps
inc
das
or
sub
rolb
mov
sub
xchg
daa
push
mov
adc
lods
xor
fistps
sbb
in
adc
sbb
cmp
push
mov
push
and
push
push
insl
dec
ret
faddl
and
das
mov
xor
icebp
test
inc
fs
add
mov
sub
jmp
lahf
loop
add
cltd
pop
push
xchg
xchg
dec
pop
cmp
sbb
mov
test
push
cmp
adc
dec
inc
sub
sbb
aas
adc
sbb
xor
mov
inc
test
sahf
sub
mov
xchg
push
add
pop
js
in
xor
jns
jl
mov
or
mov
addb
inc
cmpsl
mov
popa
jns
dec
dec
rcrb
xchg
pop
ljmp
clc
xor
dec
out
or
adc
cmp
dec
dec
push
xchg
jg
test
and
std
jo
cwtl
inc
in
in
insl
out
mov
xor
xorb
out
jge
iret
pop
lods
test
jl
js
pusha
dec
aas
cmp
sbb
add
sbb
push
mov
and
mov
push
xor
fyl2xp1
add
cmpsl
lds
movsb
adc
cmpsb
lock
scas
cmp
xlat
cmpsb
mov
ret
aas
loop
sub
movsl
push
push
xor
cmp
and
push
insb
adc
mov
js
jecxz
jo
push
or
pop
add
ljmp
and
xorb
jl
or
cli
or
xor
ljmp
rcrl
dec
pusha
cltd
bound
test
dec
cld
and
push
test
and
inc
inc
sbb
add
or
and
addb
je
in
adc
push
adc
cmpsl
adc
mov
xlat
and
dec
aam
add
jo
movl
cmpl
cmpsl
aad
fisubrl
jmp
es
add
jg
inc
add
add
jmp
pop
mov
add
lahf
dec
std
xchg
pop
xchg
cmpsl
fadds
sbb
mov
clc
std
loop
js
movsb
dec
inc
push
clc
jnp
jnp
cwtl
adc
ds
loop
xor
rcr
pusha
nop
mov
mov
sbb
cltd
cmpsl
xor
cs
jno
push
sbb
mov
outsb
mov
lock
cmp
sub
sbb
xor
cmp
lahf
or
or
inc
or
xchg
cltd
dec
xchg
xor
push
push
lock
aad
scas
decl
pop
add
push
mov
sub
xchg
push
jmp
xorl
icebp
push
mov
cmovb
mov
adcb
pminub
aam
push
add
stos
pusha
inc
daa
std
out
xchg
xchg
pushf
mov
add
ss
dec
sub
popa
push
and
sti
lret
imul
push
enter
sbbb
jno
or
xor
jge
mov
test
mov
mov
orl
cwtl
dec
xor
sub
mov
jp
lds
je
pop
sub
insb
pop
xchg
sub
add
inc
les
shlb
cmpsb
push
insl
scas
inc
popf
adc
pop
push
mov
sbb
fcomps
nop
mov
add
out
add
fadds
cmp
adc
and
add
xlat
mov
ficoml
arpl
inc
cltd
push
sbb
fnstenv
dec
or
add
in
push
popa
addb
dec
jle
dec
pop
push
cmpb
fstps
add
add
data16
and
mov
les
lcall
inc
adc
mov
xchg
scas
xchg
inc
xchg
out
sub
lock
mov
jno
jecxz
push
add
sbbl
out
xchg
out
stos
jl
inc
inc
f2xm1
mov
pushf
orb
cld
jge
sub
sub
sarb
push
mov
cld
sbb
in
clc
sub
mov
out
add
lcall
mov
xor
adc
movsl
sub
xchg
pop
shlb
push
jae
xor
xorl
cmpl
cwtl
gs
lar
xchg
pop
lds
adc
pop
imull
mov
adc
outsb
sbb
cmp
lock
ret
dec
mov
faddl
or
push
mov
movsb
aad
rcrl
push
ret
pop
fstpl
call
orb
mulb
stos
movl
loopne
sub
popf
adc
mov
and
add
fbld
jns
sbb
and
loope
push
or
sahf
mov
aam
push
mov
push
rclb
or
pushf
xor
rclb
mov
pushf
pop
push
icebp
js
cwtl
push
sahf
cmp
cs
test
and
outsb
push
add
aas
dec
iret
add
test
or
or
sbb
add
or
shrl
and
sub
push
xor
cmp
cwtl
add
popf
and
out
dec
jnp
sarb
xchg
mov
cmp
inc
and
adc
ret
stos
mov
adc
lcall
cmc
sbb
shl
mov
iret
xchg
daa
push
cld
loope
add
enter
sbbb
outsl
mov
adc
xor
out
loopne
fidivs
add
push
push
cmp
aaa
pop
pop
pusha
cwtl
js
dec
add
lret
jge
movsb
les
sbb
test
lods
inc
jle
jno
fwait
dec
aas
jae
and
sub
mov
pop
add
movsb
xor
lock
dec
pop
fs
sub
ss
cmp
insl
sti
aad
movsb
push
call
idiv
inc
or
inc
mov
and
inc
inc
ds
adc
xchg
fadds
dec
in
popa
jl
adc
mov
jl
add
cmp
add
frstor
push
pusha
fmul
xchg
sbb
add
inc
push
testl
ja
add
add
arpl
cwtl
sbb
jmp
lods
dec
pop
inc
fs
push
xchg
mov
sub
ss
sbb
mov
push
add
add
movsl
cmp
push
pop
add
popl
and
daa
push
add
icebp
dec
test
scas
loope
and
cmp
mov
int3
jecxz
mulb
aas
sub
les
imul
inc
js
pop
inc
sbb
incl
jnp
sub
insl
and
test
mov
jbe
aad
inc
pusha
dec
cmpl
sub
imul
and
pusha
cwtl
or
test
arpl
xor
adc
xor
or
lahf
pop
xor
sbb
cmp
sbb
dec
mov
shl
mov
cwtl
cmp
call
lock
inc
mov
psadbw
mov
xor
mov
add
mov
dec
cltd
cld
mov
mov
adc
in
fsub
or
and
mov
add
loopne
ret
jbe
incb
fcompl
push
jp
das
or
jg
dec
add
adc
sbb
mov
daa
adc
xor
jae
rclb
mov
dec
add
xlat
sahf
mov
jecxz
popa
nop
dec
pusha
es
add
or
jle
mov
insb
ja
mov
mov
and
neg
adc
je
mov
ja
add
jbe
or
daa
sbb
push
add
adc
lock
dec
pop
clc
in
push
pop
cmp
or
dec
xor
lods
scas
xchg
and
xor
jg
jo
jae
inc
cmp
adc
bound
icebp
xor
sbbl
push
xchg
js
mov
add
pop
aaa
inc
push
dec
out
or
call
and
push
test
sub
fstl
les
mov
mov
push
xchg
cmp
cmp
cmpsl
push
jp
rorb
fisubrs
xor
jns
ljmp
fiadds
xor
sbb
mov
mov
add
xor
adcb
adc
arpl
pop
xor
sub
and
lock
mov
and
cmp
addb
push
shrl
cmp
in
pop
add
incb
fcomp
and
mov
inc
fidivrs
inc
adc
lret
pop
mov
lahf
xchg
rorl
pushf
mov
mov
and
xchg
pop
add
or
push
popa
std
jns,pt
sub
or
fiaddl
dec
test
and
stc
rolb
call
adc
mov
shrl
mull
mov
insb
sbb
rclb
add
lods
cld
inc
xchg
adc
or
mov
orb
fxch
xchg
add
and
fldl
hlt
xchg
sub
xchg
jecxz
add
jae
add
sbb
clc
movsb
push
roll
mov
lods
and
lock
pop
pushf
mov
push
pusha
or
leave
aaa
add
sti
test
add
stc
std
push
sahf
xchg
mov
add
pop
sbb
outsl
push
and
and
mov
mov
nop
dec
jle
add
cmp
movsl
das
or
in
push
ljmp
dec
xor
mov
mov
cmpb
jmp
add
push
add
jecxz
add
mov
js
add
adc
les
inc
mov
dec
adc
add
fidivrl
pushf
js
mov
fists
cmp
mov
in
inc
inc
cltd
test
sbb
dec
test
jns
test
add
push
mov
jge
pop
and
add
sti
shlb
repz
mov
lret
jo
adc
or
insl
mov
fsubs
repnz
into
adc
pusha
adc
pop
mov
movsl
cmpb
or
sbbb
pusha
adc
fsub
or
mov
int3
inc
mov
daa
cmp
add
repz
sub
or
pop
and
cmpl
test
jnp
ret
inc
mov
sub
dec
xlat
cli
mov
or
mov
icebp
push
sub
pop
mov
jne
mov
movsb
add
mov
mov
cmpsb
cmp
add
cmp
add
pop
cmc
xchg
pop
push
dec
inc
mov
mov
cmp
cwtl
sti
enter
or
adc
push
sarb
popf
dec
add
jge
fmuls
in
cmp
jg
fidivrs
nop
jo
pop
mov
dec
cmp
pop
call
sub
data16
jbe
aad
lcall
mov
and
out
into
popa
mov
inc
aaa
pop
call
mov
push
cmp
pop
add
add
popa
icebp
mov
in
jp
fisttpll
mov
xor
xor
repnz
aad
adcl
aam
mov
cmpl
inc
popa
sub
and
cmp
pop
rcrl
lods
cs
lahf
and
mov
dec
in
add
cwtl
js
scas
xchg
sub
dec
pop
cmpsb
jno
fstp
xor
pop
popf
shlb
sbb
mov
gs
enter
and
movsb
lea
xchg
add
dec
pusha
add
or
push
pop
xchg
mov
inc
mov
dec
pusha
push
push
sub
mov
sbb
dec
clc
mov
adc
in
push
ja
ds
add
popa
test
nop
and
pop
cwtl
sbb
outsl
inc
mov
jno
sbb
mov
jmp
push
push
rorl
jl
mov
filds
jo
decb
dec
add
sbb
jo
lret
sbb
imul
out
fdivl
pop
jb
push
test
popl
sub
daa
xchg
inc
or
and
xchg
jl
in
add
adc
sbb
lret
push
insl
jns
jge
lods
call
int
sbb
mov
cld
mov
sbb
out
and
popa
in
shlb
xchg
in
or
and
out
or
sbb
cmpb
cmpl
fimull
rclb
xchg
mov
mov
repnz
mov
dec
popa
xchg
inc
mov
sub
jae
or
testl
adc
and
jl
push
loopne
test
mov
mov
push
push
dec
fldl
repnz
dec
pop
fcmovb
repz
lret
mov
mov
in
xor
enter
pop
cmpsb
int3
add
icebp
push
pusha
jge
out
cwtl
add
mov
iret
mov
js
add
jl
dec
pop
mov
cmp
test
rcrl
add
jne
popf
jbe
pop
fcomps
mov
out
adc
loope
mov
inc
inc
mov
jecxz
je
bound
test
arpl
sbb
movl
cwtl
adc
or
jns
orb
push
or
mov
pop
sbb
inc
xor
or
and
and
repnz
adc
ret
iret
add
int
xor
and
dec
push
stos
add
add
jp
mov
loop
arpl
adc
inc
push
sbb
lods
jmp
xor
mov
jnp
inc
push
dec
sbb
add
push
add
fstl
and
lock
test
in
loopne
out
dec
push
add
push
adc
xor
mov
test
pop
dec
pop
and
cmpsb
nop
mov
loopne
push
push
cmpb
shll
les
aas
fldcw
fadd
enter
and
jmp
or
lods
lock
adc
and
xchg
fcmovbe
add
xlat
pushf
push
sbb
mov
cwtl
dec
loope
shrb
xor
add
fs
adc
stos
mov
mov
pusha
add
cmpsl
repz
outsb
adcb
mov
das
lods
in
inc
loope
xor
sub
cmp
repnz
cmpsb
call
jecxz
loopne
push
gs
xchg
loopne
loop
inc
test
flds
cmp
adc
sarl
cld
and
ja
repz
and
push
or
mov
xchg
out
scas
mov
adcb
pusha
cmp
into
jl
hlt
outsl
jle
inc
push
push
mov
fwait
sahf
loope
pop
or
sbb
jno
aas
orl
inc
adc
or
xchg
cld
mov
shlb
loopne
in
inc
jp
cmp
mov
pusha
dec
jns
mov
or
add
add
jo
adc
sbb
out
int
inc
inc
dec
xor
inc
mov
push
push
mov
push
pushf
and
ljmp
test
cld
test
int
inc
cmpsb
ret
fisttps
cmpb
mov
sbb
out
test
add
sbb
lahf
mov
push
rorl
lods
xchg
test
adc
subb
shll
scas
push
cmp
cltd
mov
mov
add
inc
sbb
cld
xor
arpl
add
negl
and
jno
inc
dec
aad
pmaddwd
inc
mov
js
dec
jo
sbb
cmc
add
mov
les
jg
mov
test
adc
add
add
mov
sbb
inc
shll
pop
add
in
sbb
test
inc
dec
add
cld
adc
mov
jbe
rorb
in
mov
jp
lahf
mov
pop
or
pop
and
das
aam
inc
mov
ss
movsl
xor
popl
xor
out
fdivs
test
loop
push
test
cmp
dec
enter
les
add
sbb
clc
das
cmp
fiaddl
fwait
bound
ss
lods
add
inc
cwtl
cltd
dec
cld
xchg
je
shl
mov
daa
sbb
jge
popa
pop
xor
pop
shl
mul
sbb
add
push
shll
jo
pop
adc
lock
xor
sti
pusha
loope
dec
push
out
lods
jb
loopne
pop
rcr
cmp
repnz
jmp
add
in
pushf
int3
mov
cmpb
and
add
call
idivb
jb
and
adc
add
mov
out
inc
aam
fmuls
test
add
push
or
nop
jns
icebp
in
xorl
test
dec
add
mov
out
popf
test
and
daa
lods
loopne
fxch
loopne
and
daa
push
in
idivb
mov
jmp
cmp
out
test
das
test
nop
push
iret
jb
daa
int3
add
notb
in
lods
xchg
adc
and
and
adc
aam
or
dec
sbb
inc
cmp
outsb
add
sbb
add
mov
cmp
js
fisubrs
in
jmp
cmpsb
inc
or
adc
adc
adc
lods
test
loop
push
aam
jmp
push
repnz
imul
scas
cmp
punpckldq
cmp
fucomip
out
mov
ljmp
add
add
in
add
sub
pusha
mov
mov
inc
jns
mov
loopne
mov
pop
or
jo
imul
repz
or
les
cmc
mov
addb
loopne
hlt
loop
dec
xchg
leave
lds
mov
adc
fs
stos
popl
scas
add
in
dec
xchg
pop
or
and
and
push
mov
add
pop
pop
fwait
xchg
dec
test
xchg
shr
sbb
mov
or
les
sti
lcall
xchg
add
cmp
mov
sahf
pop
sub
add
bound
ret
push
add
call
fnsave
stos
adc
push
nop
test
lods
jl
add
mov
mov
sbb
pushf
movsb
or
movsl
les
push
push
leave
add
pop
jecxz
push
or
inc
shr
lcall
aaa
adc
loopne
xchg
inc
movsb
jle
push
xor
or
push
je
dec
test
sbb
add
push
pusha
push
jb
add
fcoml
mov
mov
jmp
cmp
out
cmpsl
loop
adc
popf
mov
nop
mov
sub
pusha
mov
comiss
js
dec
in
mov
call
inc
xor
and
add
add
cmpl
sub
inc
jns
adc
xor
push
std
sbb
add
mov
addl
sbbb
sub
xor
sub
sub
cld
xor
sbb
movsb
inc
push
push
add
mov
popa
add
fs
inc
mov
xor
subb
mov
push
pop
push
dec
jl
rolb
js
mov
and
xor
push
stc
inc
cltd
lea
xor
push
push
lock
adc
cmp
lods
adcb
cmp
mov
mov
xor
in
inc
mov
pop
jmp
adc
cwtl
les
sbb
pushf
sbbb
adc
add
movsb
dec
mov
push
cwtl
push
jno
stos
cmpsl
pop
popf
lahf
add
lret
add
inc
gs
xchg
fcoml
inc
mov
inc
nop
adc
or
lahf
nop
shrb
adc
fneni(8087
inc
fcmovbe
ja
cli
and
cmp
fs
int3
jge
push
sbb
pop
movb
loope
int3
add
or
shrl
adc
mov
popf
test
pop
pop
mov
pop
test
mov
jg
cmp
xor
mov
imul
jecxz
aam
and
jbe
inc
add
or
pusha
fstpl
add
sbb
push
mov
push
aam
pop
add
int3
mov
jbe
addl
ret
cmpsl
jmp
mov
lods
xor
xchg
sbb
pop
rorb
inc
insl
call
das
ret
outsl
nop
aam
pusha
add
stc
inc
pusha
int3
and
pusha
popa
mov
add
mov
pop
push
loop
mov
add
and
mov
add
and
lret
movl
popf
cmp
sbb
jmp
mov
icebp
xor
lcall
add
fdivl
xor
and
add
in
xor
stos
dec
sbb
int3
cmp
repz
xchg
cmp
or
fmull
adc
sbb
inc
lret
dec
into
and
fnstsw
cmpsb
jecxz
test
or
jp
push
mov
add
test
and
xchg
xchg
scas
jl
fadds
mov
push
sbb
subl
ljmp
cltd
and
dec
mov
loopne
mov
add
call
ret
xor
push
add
or
add
sub
mov
in
adc
or
or
lcall
sbb
adc
jg
and
sbb
shll
fists
out
test
test
sbb
sub
xor
adc
inc
mov
mov
cmc
push
lods
orb
fld1
push
sbb
jmp
and
jl
subb
mov
fs
test
and
sbb
test
ljmp
outsb
and
call
push
inc
cs
stc
or
inc
mov
imul
pop
shrl
mov
mov
mov
cmp
int
sbb
cmp
add
or
dec
ljmp
out
sahf
adc
add
mov
dec
aam
adc
adc
inc
jg
push
ja
mov
lock
pop
inc
add
test
es
shlb
xchg
and
cld
rolb
sub
nop
ret
xor
or
mov
test
test
inc
roll
adc
dec
jns
mov
add
ljmp
or
add
cwtl
and
dec
mov
stos
push
and
push
add
in
inc
lods
cmpl
cld
xchg
sub
bound
enter
mov
mov
adc
pop
add
aaa
es
add
daa
and
loopne
push
sub
or
jg
jb
sbb
mov
add
mov
dec
jb
mov
rorl
dec
adc
gs
daa
fadds
adc
dec
or
dec
push
jecxz
sbb
lock
or
clc
and
ret
les
xor
inc
es
sub
add
pop
popa
mov
cmp
enter
ljmp
test
lret
sbb
dec
shlb
mov
fsubrl
inc
xor
enter
dec
jns
pop
insl
mov
cld
add
push
popf
pushf
cmp
jo
mov
inc
jp
mov
mov
shrl
fld
inc
fs
lods
sbb
mov
add
int3
add
inc
pop
into
sbb
sbb
and
stc
rorb
pushf
add
shrl
adc
dec
mov
mov
ja
out
lock
xchg
in
mov
and
xchg
mov
aas
pusha
xor
lock
jae
add
fcom
lods
pop
sbb
mov
pop
dec
rolb
sbb
cmp
das
add
imul
xor
jnp
and
adc
faddl
fldl
xor
sub
add
jne
loopne
adc
and
aaa
test
add
fistpll
push
add
faddl
nop
ljmp
loop
add
ljmp
cwtl
mov
push
xchg
leave
fsubs
or
js
xor
xor
js
outsb
add
lret
fldl
push
repz
rcrl
adc
aam
and
add
xchg
dec
adc
call
adc
inc
addb
stos
pushf
mov
pop
adcl
sub
dec
jmp
cmpsb
push
xor
inc
inc
iret
add
dec
pop
in
or
sub
push
sub
subb
es
std
add
push
xchg
je
inc
scas
adc
cmp
cli
jecxz
xor
and
push
test
pushf
outsb
pusha
inc
arpl
insl
or
aas
rolb
xchg
js
or
int3
and
mov
lods
cmp
pop
xchg
mov
xchg
mov
mov
mov
cmp
add
xor
call
arpl
pop
add
mov
pushf
pop
testl
push
roll
aam
cmpb
push
je
aam
mov
in
cmp
sahf
dec
xchg
mov
push
adc
popa
pushf
xchg
adc
mov
loop
adc
add
bsf
adc
add
xor
dec
scas
mov
adc
and
jl
ja
data16
fcmovb
sbb
adc
adc
scas
xchg
mov
push
js
les
and
pop
mov
xchg
mov
cwtl
xchg
or
adc
sub
icebp
mov
or
pop
adc
mov
jno
cmp
push
idivb
iret
mov
add
dec
nop
xchg
js
cmpsl
pusha
inc
imul
leave
jg
inc
out
pop
cmp
loope
clc
add
into
jp
push
out
inc
add
sahf
ret
cmp
add
es
test
pop
lahf
add
xchg
test
push
or
loopne
mov
pushf
ja
and
add
mov
es
enter
call
stc
fs
fs
inc
fsts
fsubrl
mov
xchg
ja
mov
push
jg
enter
mov
pop
mov
xchg
je
call
mov
sbb
mov
addr16
shrb
sbb
add
ljmp
add
mov
int3
jb
mov
adc
pusha
sbb
in
xlat
inc
xor
cmpsb
out
or
test
dec
je
and
add
bound
sub
mov
js
mov
xor
fs
xor
sbb
add
out
cwtl
mov
jns
add
xchg
in
adc
bound
mov
ds
cmp
mov
or
cmp
icebp
pop
inc
or
mov
adc
ljmp
test
lods
mov
dec
sti
cmp
out
cmp
lcall
test
leave
add
mov
jle
inc
jecxz
fwait
dec
adc
roll
pop
sub
addb
movsb
add
cmpsl
push
sub
adc
je
pop
pushf
lret
add
push
imul
hlt
or
scas
rclb
pop
and
iret
popf
cwtl
adc
repz
xor
add
sub
xor
push
insb
mov
les
xor
inc
add
lds
pop
mov
cmc
mov
mov
jmp
out
inc
sbb
popa
xor
shll
bound
inc
adc
call
je
sub
call
adc
add
add
dec
stc
insb
add
pop
ret
stos
call
stos
pop
push
sbb
and
xor
push
jecxz
popl
and
push
jb
orb
in
add
fbstp
add
aaa
cli
dec
in
mov
ds
dec
xor
xchg
or
add
test
rorl
xchg
add
scas
nop
mov
lods
add
push
mov
sbb
fmull
cli
ljmp
dec
nop
push
aad
dec
dec
jle
mov
ret
frndint
sub
sub
in
cmp
cmpsl
test
xchg
pusha
je
cmpsb
push
fwait
or
dec
loop
adc
clc
mov
lock
sbb
jmp
sarl
call
sti
sahf
inc
mov
arpl
lea
loope
out
mov
adc
pusha
notl
inc
int
jo
add
and
add
mov
insb
aad
adc
sbb
and
sub
jne
sbb
add
and
lds
mov
popa
sbb
repnz
icebp
add
and
ja
add
jge
jle
push
or
shlb
add
repz
pop
loop
sub
dec
adc
jl
lahf
sub
pop
sbb
add
sbb
pop
cmpsb
jne
loopne
pop
aaa
jnp
add
mov
mov
cmp
bound
out
cmp
mov
test
hlt
dec
adc
push
xor
int
cmp
outsb
sbbb
adc
pop
and
mov
jmp
sbb
jg
repnz
int3
lock
sbb
div
jnp
imul
xorl
test
cmp
ss
inc
fs
push
jbe
xor
inc
jmp
xorb
imul
xor
push
add
test
xorb
add
or
ss
or
dec
roll
sub
xor
or
pusha
into
and
sub
and
xchg
pop
push
in
outsl
pop
add
add
pop
push
aam
pop
add
aad
mov
add
cltd
int
movb
and
pop
adc
int
push
popa
pop
add
and
fs
into
sub
shr
hlt
add
rep
pop
and
lds
popa
add
mov
daa
mov
jae
add
add
lret
add
mov
add
pushf
test
and
filds
push
out
or
add
xor
faddl
fisubl
xor
xchg
mov
push
fs
cmp
hlt
and
sahf
jge
xchg
faddl
inc
inc
lods
push
dec
mov
ficoms
loope
adc
mov
push
mov
push
es
mov
pop
cmpsl
inc
sub
cmp
mov
push
shrb
pop
push
das
lods
mov
loopne
icebp
xchg
inc
rcrl
mov
sub
jmp
out
loop
mov
inc
outsl
inc
or
push
add
add
les
addb
cwtl
mov
xchg
fdivs
push
push
and
dec
jae
jle
or
push
int3
xchg
mov
add
stos
push
sub
xchg
add
shrb
sub
stos
adc
cld
jge
and
add
testb
xor
or
arpl
add
jmp
add
fwait
sub
cmc
test
and
scas
mov
in
dec
jno
add
and
push
pushl
in
inc
inc
fimuls
sub
push
insb
add
sbbb
pop
clc
fists
xchg
insl
push
inc
pop
enter
clc
jle
and
notb
xchg
mov
xor
mov
sti
cli
jb
or
push
xchg
sbb
add
adc
mov
sub
mov
mov
je
mov
pop
or
in
pavgb
adc
lds
shrl
xchg
push
add
insl
jae
aas
test
mov
cltd
sub
gs
dec
sbb
add
xorb
sbb
inc
lock
in
add
add
xor
xlat
cmpsl
add
cld
imul
repnz
adc
cmp
push
push
cmp
xchg
cmp
add
nop
add
decb
sub
inc
frstor
add
push
push
inc
jg
and
shrl
test
push
add
adc
or
add
push
mov
adc
xor
adc
pusha
andb
and
ds
fwait
or
and
or
aam
lret
mov
adc
mov
fs
xchg
imul
fwait
or
sbbl
iret
and
mov
mov
mov
arpl
mov
add
test
ror
repz
adc
push
mov
insl
mov
inc
pop
inc
push
mov
cmc
mov
pop
xorb
orb
sbb
data16
movsl
mov
jl
jno
aas
jl
faddl
pushf
fs
push
push
add
test
cmp
mov
es
adc
cltd
mov
cmp
cmpb
rcr
lds
pop
mov
add
addb
xlat
cwtl
int3
ja
pusha
mov
dec
out
push
xchg
adc
cmp
sbb
lock
js
xor
sbbb
hlt
cmc
jle
and
pusha
jbe
daa
sub
xorb
sbb
push
mov
xchg
mov
sub
mov
es
inc
or
adc
cmp
insl
fs
test
xchg
xchg
test
les
outsl
sarl
popf
aad
sbb
mov
or
sbb
or
mov
add
jecxz
sti
jmp
push
cmpsb
dec
push
test
pop
vmresume
jbe
inc
and
rol
mov
mov
sub
xor
aam
mov
int
jno
into
cmp
add
push
test
out
jae
les
fcom
xor
roll
or
add
mov
loopne
xor
jmp
inc
add
scas
rcll
pop
pop
cmp
or
sub
in
je
loop
stos
addr16
jge
cmp
clc
push
jle
add
push
pop
imul
or
mov
js
mov
sar
add
and
cmpsb
in
add
out
std
adc
add
xchg
inc
repnz
cltd
and
mov
pop
mov
fcompl
repz
xchg
inc
cmpsl
adc
mov
imul
scas
popf
dec
lock
xchg
add
test
push
test
or
and
sub
jo
dec
sbb
ret
mov
enter
xlat
cmp
add
fistl
or
testl
cmpsl
movsb
ret
orl
and
fs
pop
ljmp
pop
xlat
inc
xor
enter
xchg
cmp
enter
hlt
xchg
add
mov
inc
xor
outsb
adc
jnp
sbbb
add
mov
aad
arpl
ret
test
add
sti
xchg
wbinvd
ljmp
jge
cmp
cmp
adc
mov
shlb
add
test
mov
clc
jg
inc
jmp
loop
sub
add
and
adc
js
adc
push
push
jl
notb
sub
les
pop
popa
push
ja
sub
bound
mov
adc
in
daa
jb
add
jge
xchg
add
dec
sbb
aaa
out
ds
pop
insb
jae
in
mov
into
mov
add
cmc
pop
lods
out
pavgb
adc
adc
nop
adc
mov
inc
add
mov
adc
out
mov
cmp
ljmp
adc
add
cs
cmc
faddl
ljmp
lea
or
dec
pop
stos
sbb
jo
in
dec
mov
and
xchg
cltd
filds
pop
or
mov
inc
fisubs
or
dec
leave
es
in
dec
dec
jl
adc
or
inc
push
dec
cmp
dec
pop
out
imul
sub
je
sbb
jg
add
aad
sbb
jl
add
adc
aad
nop
dec
and
cmpsb
sub
jae
or
in
push
xchg
xor
jne
xor
inc
mov
pop
pop
test
xor
mov
movsb
pop
ljmp
les
hlt
add
scas
mov
add
cmp
cwtl
jg
dec
push
daa
int3
inc
fadd
lret
icebp
jg
xor
cmpl
sbb
add
and
adc
dec
push
mov
scas
movsb
pop
fstl
in
movsb
and
mov
je
mov
test
or
addb
je
or
add
out
fwait
pop
push
mov
test
mov
adc
pusha
fwait
jbe
and
sub
push
adc
add
popf
sub
popa
mov
or
mov
add
sbb
enter
addb
push
and
adc
test
and
cmp
and
test
mov
jp
stos
andl
lds
daa
fld
mov
pop
enter
add
sub
inc
out
mov
imul
loop
mov
sub
xchg
fwait
push
mov
dec
ffree
loopne
daa
sub
nop
pop
or
and
sbb
jno
cmp
dec
mov
sbb
sbb
mov
mov
jmp
sub
push
jae
sub
pop
adc
daa
movsl
jne
push
add
in
sub
pushf
repnz
inc
xor
jno
add
rol
lock
shlb
bound
ret
push
pushf
sbb
out
cs
adc
adc
rol
or
mov
add
jbe
sti
les
dec
call
push
shlb
popl
jno
in
sbb
sub
inc
jb
jl
add
jecxz
jbe
cwtl
xor
inc
pop
mov
xlat
es
mov
mov
in
or
fs
adc
xchg
or
xor
dec
xchg
adc
mov
gs
add
or
xchg
jl
lar
push
mov
pop
lock
jmp
sarl
jl
add
cmpsl
icebp
xchg
mov
int3
or
mov
xlat
ljmp
or
mov
in
roll
adc
and
push
dec
mov
push
hlt
xchg
add
xor
mov
stos
roll
outsl
fiadds
movsb
cwtl
fcompl
ja
rcll
or
repz
pop
inc
mov
sti
add
sar
movsl
jo
add
addl
loop
test
add
clc
sub
jo
add
popf
out
jne
cld
inc
jg
mov
sub
mov
rcrb
addb
mov
inc
jo
cmp
cs
arpl
aas
add
xchg
aad
sti
pop
in
int3
add
add
jae
in
sub
or
cwtl
negb
movsl
inc
pop
mov
jge
xchg
dec
push
or
mov
lret
add
pop
movsl
cmp
or
in
outsl
rolb
push
mov
add
adcl
pop
cmpsb
shlb
xchg
js
fistpll
or
add
es
loop
xchg
pop
add
aaa
andb
clc
xchg
ja
adc
in
or
pop
pushf
ret
inc
pushf
jmp
mov
leave
jo
jge
add
jge
cmpsb
loopne
mov
inc
out
adc
sbbb
imul
inc
aad
mov
hlt
loope
clc
add
adc
into
outsb
nop
faddl
sarl
or
inc
or
popa
mov
add
pop
inc
mov
scas
pushf
jns
xor
add
stos
and
mov
mov
jae
and
add
dec
xor
pop
mov
neg
std
mov
nop
mov
popl
adc
lds
loop
inc
test
sub
imul
mov
outsb
push
repz
mov
test
mov
cltd
aad
ss
daa
outsl
fsubrl
sahf
add
adc
std
dec
scas
and
add
pop
xor
jecxz
xchg
in
out
xor
jo
out
mov
mov
cwtl
ds
lock
daa
test
aam
add
or
pop
sbb
cmpsl
add
movsl
sub
mov
xor
inc
addb
mov
fs
int3
clc
xchg
pop
xchg
dec
repnz
in
xor
mov
and
fcoms
xor
add
and
cmp
adcl
fdivrs
fcomip
mov
adc
out
pop
popf
pop
movsb
jg
pusha
dec
lcall
xchg
rcl
in
nop
or
add
mov
xor
fdivrs
adc
or
sarb
push
add
rorb
int
push
xor
lds
lret
pop
std
xor
add
ficompl
ficoms
pop
and
sar
mov
push
push
adc
adcb
add
xchg
rcrl
iret
pop
adc
mov
jne
xorl
dec
into
and
xor
sbb
and
imul
scas
fs
sub
in
bound
jge
data16
or
mov
sbb
xchg
sub
cltd
popa
sbbb
pushl
rolb
add
fsubrs
xlat
push
dec
dec
sbbb
repnz
test
mov
add
and
mov
inc
pop
mov
fs
int3
xchg
adc
stos
es
or
pop
and
push
loopne
push
add
loope
and
in
es
ret
xor
xchg
sbb
inc
inc
dec
mov
jl
add
add
adc
mov
adc
popa
push
popf
sub
mov
add
adc
out
and
xor
call
stos
xchg
pusha
lcall
push
mov
mov
dec
push
rclb
cmp
dec
test
repz
andb
imul
push
mov
push
sbb
imulb
or
cwtl
mov
icebp
sbb
fnstcw
jecxz
cmp
sub
add
and
cmp
mov
nop
out
inc
cmp
int3
adc
ljmp
inc
popf
sub
add
xchg
cmp
sbb
pop
adc
sub
lret
ss
push
pusha
and
push
mov
push
add
sti
add
test
popa
or
add
adc
adc
movsl
les
inc
jno
jae
sti
add
mov
pop
mov
pop
orl
nop
repnz
pop
push
sbb
fstl
aam
dec
or
into
std
xchg
mov
jl
orb
outsb
cmp
adc
adc
aas
adc
cmp
pop
sub
xlat
sub
jg
sub
push
imul
aas
andb
sub
xor
xor
stc
push
fidivl
jae
lcall
xchg
inc
jg
mov
negl
lea
add
call
call
mov
int
dec
dec
aaa
sub
mov
sbb
les
dec
sub
daa
dec
test
mov
jle
inc
cmp
jo
insl
and
add
dec
lahf
jns
cltd
shrb
pop
pushf
fs
xchg
mov
add
or
inc
sbb
lods
daa
int
push
jbe
dec
movsb
push
dec
ret
ljmp
mov
pop
hlt
cld
out
cmp
in
fs
es
cwtl
cwtl
push
add
and
pop
add
adc
mov
xor
fildll
inc
xor
push
sub
dec
mov
cmp
fisttpll
push
clc
rolb
adc
dec
enter
dec
clc
mov
add
dec
inc
add
pop
cmp
hlt
daa
pop
movsb
pop
mov
outsl
xlat
mov
mov
or
fxch
lcall
push
add
nop
adc
fucomp
in
shll
push
inc
pop
sbb
fldcw
sub
xor
test
push
data16
adc
ds
cmc
xor
xchg
popa
xlat
loop
and
jb
clc
xor
pop
ja
push
cmp
inc
jo
mov
popf
adc
add
daa
dec
adcl
movsb
add
cs
call
xchg
mov
daa
cmc
add
adc
add
and
cmpsl
jo
mov
repnz
outsb
jge
in
mov
xor
cld
jecxz
push
data16
lods
xchg
adc
fsubr
mov
shl
aad
inc
mov
clc
jns
ljmp
sbb
mov
popf
test
pushf
in
xchg
and
pop
add
cmp
mov
xchg
ficoms
inc
fistl
or
mov
sub
pop
in
fisubrs
out
dec
into
add
lds
dec
push
add
sbb
add
mov
mov
cmp
sub
lock
and
jle,pn
jb
xchg
test
adc
pop
in
jb
cmp
xorl
dec
out
add
cmp
nop
push
inc
or
adc
add
mov
sub
pop
aad
push
xchg
enter
cld
adc
push
dec
mov
int
xchg
movsl
movsb
dec
add
sarl
in
jo
xchg
int
daa
push
fisubl
inc
adc
stc
xchg
aaa
dec
adcb
or
cmp
outsl
test
scas
test
std
daa
push
cli
adcb
or
loopne
dec
jle
daa
push
popl
inc
je
std
xchg
pusha
inc
testl
das
jo
xor
push
das
test
nop
dec
pop
push
call
lock
je
push
add
jp
std
dec
adc
insl
mov
sub
lock
jbe
adc
cltd
std
sub
xchg
je
in
mov
sbb
and
mov
sbb
add
dec
xor
cmp
shrb
jmp
sub
fwait
add
adc
rol
orb
or
xchg
std
cmpl
and
push
jl
jge,pn
and
andb
mov
add
aaa
adc
addb
or
pop
push
xchg
fs
mov
lods
add
add
mov
test
hlt
cmp
pop
imul
insl
dec
scas
or
mov
cmc
add
cwtl
inc
mov
cwtl
add
or
xor
das
mov
cmp
outsb
insb
sub
rolb
imul
sbb
xor
push
jge
cmp
xor
pop
mov
or
and
int3
aam
mov
add
or
jo
mov
rclb
sub
lds
add
push
and
shld
or
cwtl
push
roll
fcmovnb
adcb
aam
in
or
cmp
hlt
setno
js
mov
add
xorl
add
mov
nop
sub
mov
sub
lock
pop
jg
lods
int
lea
or
sub
pop
movl
fidivrl
jle
mov
mov
mov
cmp
mov
addr16
loopne
xor
push
push
xchg
shlb
cld
mov
or
aaa
loope
iret
sub
mov
xlat
and
mov
jecxz
and
inc
jo
adc
pushf
push
mov
shll
xchg
hlt
sbbb
dec
out
xor
dec
and
inc
daa
pop
out
push
int
xchg
or
pop
sub
in
or
daa
xchg
mov
push
es
xchg
fwait
add
mov
jo
sub
aas
rolb
sar
inc
fs
imul
dec
dec
loopne
mov
cltd
xor
clc
mov
dec
pushf
in
jo
rolb
sbb
mov
cs
pusha
das
mov
std
hlt
mov
push
add
add
js
test
clc
sub
mov
decb
cmp
add
fnstcw
and
lds
mov
cmp
sub
test
push
mov
sbb
es
test
pop
jmp
gs
jns
sub
and
and
push
cmp
push
mov
addr16
aam
jl
or
push
add
cmp
enterw
std
mov
mov
and
bswap
add
lods
dec
push
xor
clc
jno
sbb
mov
jg
push
out
jo
add
pushf
sbb
xchg
or
cwtl
add
sbb
adc
mov
cmp
pop
jl
int3
or
fucomip
imul
add
add
jecxz
pusha
jg
pop
add
daa
rcr
mov
or
xor
cmp
popa
int3
cmp
lcall
lret
or
fdivr
jb
int3
dec
jbe
cmpb
cwtl
out
pop
add
sub
pop
cmp
int
jl
inc
movsl
cmp
add
pop
pop
iret
fldcw
popf
orb
sbb
addr16
add
lods
mov
in
add
push
arpl
pop
ffree
int
jle
and
loop
xchg
add
push
sbb
sub
cwtl
shl
inc
jecxz
lods
jo
adc
ficompl
ficoms
add
popf
lods
cmpsb
add
push
call
pop
repnz
xor
pop
jmp
xor
shll
jb
jle
scas
sub
dec
in
pushl
push
jno
add
mov
add
jno
rcr
test
add
loop
mov
and
jmp
mov
xchg
push
and
sbb
pop
add
imul
mov
sbb
mov
cmp
into
xchg
add
pop
add
dec
push
mov
inc
rcrl
fs
outsl
cltd
add
mov
cmp
hlt
inc
jnp
fs
or
jmp
jge
lock
std
pinsrw
fcompl
jbe
push
xchg
push
add
cs
or
push
mov
test
ret
sub
mov
mov
into
nop
lods
xchg
cmp
mov
mov
mov
add
xchg
add
cmc
inc
push
cli
popf
lds
cmpsb
aad
bnd
mov
out
loopne
or
jle
push
sub
push
xchg
or
push
jno
sbb
dec
aam
pop
clc
pop
push
ja
mov
shrl
popf
nop
cwtl
ffreep
add
enter
push
loopne
adc
push
mov
add
and
call
aaa
out
pop
mov
les
fidivrs
dec
hlt
notl
orl
loop
add
daa
dec
xorl
outsl
fcompl
or
fadds
or
ret
xchg
push
hlt
adc
bnd
outsb
fdiv
aam
in
fdivp
mov
arpl
int
scas
addb
jle
adc
into
fstpt
pop
jo
les
push
mov
ficompl
xor
add
mov
mov
sar
add
les
xchg
add
or
xor
adc
aas
mov
cli
mov
sub
das
add
pop
stos
ds
stos
xchg
pop
dec
jo
inc
sub
add
or
sub
daa
shrb
sbb
mov
xorb
js
xchg
mov
cmp
in
lcall
cld
pop
sub
sbb
decb
subl
ret
inc
xlat
add
std
shlb
sbb
mov
shl
dec
add
mov
subb
out
add
movsl
sub
add
fs
pushf
cwtl
popf
add
sbb
or
inc
or
js
mov
mov
dec
pusha
sahf
push
xchg
jne
aad
add
or
or
add
clc
pop
int
and
hlt
jg
cwtl
add
mov
call
lods
push
cld
cmp
gs
aas
push
cwtl
jecxz
ds
je
add
mov
jne
leave
jno
cs
into
push
inc
dec
sti
add
dec
inc
cli
inc
aam
pop
mov
sbb
jbe
sbbb
pop
sbb
mov
xchg
hlt
sub
adc
inc
mulb
lods
or
push
and
adc
mov
add
add
or
sbb
nop
int
mov
xchg
cmp
lea
mov
imul
jmp
mov
push
or
xchg
sbb
add
and
adc
adc
push
jp
lret
and
stos
cmp
pop
inc
orb
repz
pop
loope
jnp
sbb
clc
cli
cmpl
enter
inc
pusha
mov
inc
or
ret
lds
mov
and
xchg
add
push
mov
mov
pop
pop
sbb
mov
xrelease
insb
enter
int
push
pop
fidivs
gs
ds
into
lock
xor
and
dec
xor
cmpl
out
sub
fnstcw
roll
arpl
jge
imul
testl
scas
dec
fsubrp
daa
outsl
ftst
pop
ja
cltd
rolb
outsb
add
cmp
and
lods
cmp
jne
push
aas
push
sbb
aad
xchg
jb
mov
les
or
cmpsb
in
test
or
jo
add
shl
or
sub
add
rorb
jmp
add
jg
mov
jne
and
xchg
idivb
hlt
jo
add
es
push
mov
jno
je
jae
pop
add
insb
inc
adc
add
add
pushf
xlat
ja
aam
dec
stc
add
add
add
dec
jo
lds
or
push
pop
imul
std
mov
push
push
mov
inc
mov
xchg
mov
mov
add
stc
add
pop
stos
add
arpl
mov
cmp
jp
cmp
les
add
lods
ds
leave
stos
movups
add
mov
mov
adc
icebp
dec
in
fdivs
add
xor
add
add
enter
mov
push
dec
lret
mov
inc
jle
repnz
add
stc
mov
xchg
ja
cmp
aad
mov
pop
add
cmp
cmc
jmp
cmp
push
adc
mov
repnz
hlt
add
push
stc
movsb
mov
inc
std
add
add
cltd
push
mov
pop
mov
addr16
pop
dec
adc
icebp
in
xor
and
inc
push
sub
and
lea
jmp
lcall
lahf
xchg
je
inc
pushf
add
hlt
addr16
dec
mov
push
cmp
cld
sub
mov
mov
xchg
pop
sub
pop
and
add
mov
push
mov
enter
les
jbe
pushf
fs
cmpl
nop
loopne
imul
jno
add
dec
push
push
push
out
loop
pop
sub
in
add
and
cmc
loop
mov
push
inc
jg
scas
nop
hlt
xchg
popf
repnz
pop
add
cli
fsub
fwait
add
jo
xchg
sbb
or
xchg
sub
xchg
stos
add
subb
dec
aam
mov
jnp
fs
out
scas
mov
jnp
pushf
mov
sbb
push
in
int3
xchg
mov
test
in
add
sub
cs
vmaxss
adc
fdiv
imul
or
das
adc
xchg
add
movsl
mov
inc
jmp
or
and
call
ja
jo
dec
push
movsl
testb
popf
xor
add
scas
dec
imul
in
xor
add
jg
cmp
popa
push
dec
mov
xor
sbb
arpl
lock
mov
loopne
jbe
lock
popa
push
mov
add
int
scas
hlt
js
add
test
sar
push
xchg
les
and
out
cmpsl
mov
test
loope
stc
divb
and
int
add
xchg
hlt
inc
outsl
push
fldl
or
sbb
scas
mov
push
adc
pop
mov
inc
push
mov
out
and
scas
sub
add
or
mov
ffree
adc
hlt
sti
fidivrl
das
ljmp
rorl
rolb
sbb
call
adc
je
mov
flds
dec
andb
or
call
inc
dec
jle
das
fistl
mov
and
repz
loopne
stos
add
add
std
xor
gs
pop
jl
jp
je
pop
inc
sbb
dec
sarl
inc
jecxz
xor
dec
sbb
in
or
push
or
cmp
cmc
test
in
add
jge
pusha
or
jne,pn
xchg
or
int
mov
cmp
test
fldl
outsl
add
rorb
sbb
and
insb
add
push
stc
js
cmp
cwtl
pop
ret
sub
adc
aad
sbb
xchg
push
add
mov
push
add
lds
clc
testb
jp
loope
sbb
sahf
jge
mov
stos
out
mov
pop
cli
call
and
loope
adc
and
xor
and
mov
ret
mov
adc
and
pop
mov
popa
push
adcb
stos
pop
push
bound
dec
daa
andl
lock
stc
xor
ds
mov
push
bound
sbb
cmpsb
add
adc
pusha
xorb
sbb
data16
xchg
pop
rorl
xor
push
lahf
shrb
xor
pusha
add
push
cmp
add
lds
in
or
and
repnz
jmp
shrl
dec
pop
mov
push
mov
add
das
and
lds
call
add
je
std
pop
push
cli
movsl
mov
add
aad
dec
lods
add
or
and
jb
xor
dec
pushf
adc
scas
call
pop
sbb
sbb
jmp
fwait
dec
lods
lds
cmp
adc
or
inc
sub
aas
jmp
lea
fs
mov
jp
lock
je
add
testl
popa
push
orl
push
and
add
jbe
in
insl
jp
cmp
sbb
mov
xor
mov
and
movsb
or
sub
dec
pop
int
rolb
and
pop
add
mov
fistpl
loop
jns
cld
jl
pusha
and
and
imul
jns
sub
cmp
out
insb
jno
cli
and
lcall
sub
add
sbb
cmp
ss
int3
and
dec
sub
or
push
scas
shl
xor
ffreep
stc
jae
cmp
sub
xor
test
and
in
mov
and
ljmp
stos
inc
arpl
repnz
and
shlb
push
dec
mov
mov
movhps
xor
sbb
imul
fbld
cmpsb
mov
aam
enterw
and
pop
std
and
add
pop
ljmp
lldt
addr16
dec
xchg
xchg
int
xor
jge
push
xchg
xchg
leave
add
xchg
mov
into
sub
ret
adc
daa
sbb
iret
pop
bound
inc
add
dec
repz
jp
push
movsl
push
lods
add
sarb
jns
push
test
subb
dec
or
jge
add
cmpsb
xchg
cmp
das
and
in
jl
add
push
pushf
in
movb
test
mov
cs
add
data16
pop
stc
add
mov
sbb
repz
cmpsl
xchg
xor
or
loop
fldcw
dec
cmp
ljmp
cmp
dec
shlb
in
mov
setnp
aam
repnz
jmp
lahf
mov
and
adc
adc
outsl
mov
mov
cmp
loopne
xor
cwtl
sub
insb
in
add
repnz
add
rcll
enter
add
loopne
sti
mov
add
mov
mov
into
add
xchg
adc
push
sbb
add
and
lret
add
orb
inc
pop
jns
add
fsts
inc
inc
adc
adc
xchg
mov
imul
out
mov
xor
clc
add
push
idivb
orl
sub
add
pop
pop
lahf
loopne
loope
add
cwtl
push
fimull
pushf
test
mov
add
shl
lock
mov
imul
jbe
cmpsl
xchg
push
call
or
or
add
aam
mov
pop
lret
scas
enter
add
shrb
pop
movsl
inc
in
mov
mov
add
aas
pop
inc
add
cwtl
call
add
stos
test
or
fucom
cmp
ss
add
stc
jns
fisubl
pushf
movsl
in
sti
insl
pop
aam
mov
lds
clc
add
xchg
mov
xchg
popf
test
outsb
roll
es
mov
scas
mov
adc
and
and
lea
dec
int
mov
adc
xor
add
loop
push
stc
rorb
jp,pn
iret
mov
popa
xchg
sbb
repz
adc
add
adc
dec
and
rcrb
test
dec
xchg
jns
push
push
add
inc
imul
aam
add
addr16
jbe
add
insb
sti
sub
pop
or
call
dec
adcl
std
adcb
pusha
mov
mov
xor
repz
or
push
aas
sbb
xor
sti
xchg
dec
mov
cmovl
cltd
cmp
and
add
in
sub
imull
incl
arpl
sub
popf
gs
pop
add
movsl
xlat
aas
or
shrl
or
cmp
insb
jmp
fnstenv
sbb
lret
divl
nop
pop
pusha
rcl
add
out
mov
adc
adc
add
dec
mov
adc
pop
pop
dec
add
jns
rclb
cli
or
push
jnp
arpl
and
punpckhdq
or
call
aaa
xor
cmpsb
cmp
addb
or
xchg
aaa
inc
inc
mov
sbb
xor
lcall
test
fcmovnu
cmpsl
xchg
fsub
mov
push
add
cmp
aam
add
jno
and
insl
lock
testb
lods
mov
xchg
inc
xchg
int
add
test
jmp
jl
scas
mov
add
xchg
subb
rorl
popa
test
int3
mov
xchg
cwtl
pop
jge
add
pop
pop
fwait
movsb
sub
mov
pop
pop
xchg
add
adc
jmp
std
xor
add
jns
adc
mov
rorb
fsts
stc
fsubl
cmpsb
push
lods
cli
push
and
mov
lahf
add
test
xor
hlt
sub
imul
sarb
adc
cmp
xchg
jae
push
mov
mov
add
mov
add
inc
mov
cld
push
frstor
in
add
xchg
pusha
sub
mov
xchg
add
or
push
ror
xor
and
add
fwait
push
mov
sbb
inc
sub
add
and
addl
pop
je
nopl
loopne
sahf
adc
mov
mov
test
mov
loope
pop
imulb
pusha
pop
sti
out
outsl
lods
adc
add
mov
mov
movsb
push
jo
cmp
pusha
push
xchg
mov
add
pop
adc
imul
xor
cmpsb
mov
enter
cld
push
add
clc
sub
add
inc
pop
in
xchg
stos
pop
push
ljmp
mov
mov
loopne
ja
pop
sbb
outsl
inc
movsb
pop
imul
mov
inc
fdivl
add
jne
outsl
adc
sbb
push
out
aam
js
xor
in
hlt
insl
pop
add
push
loope
inc
clc
js
add
dec
orb
lret
jae
pop
xlat
xchg
mov
ret
jle
and
inc
or
icebp
push
hlt
add
pop
jecxz
loopne
xor
int3
rolb
jl
xchg
mov
scas
sub
addr16
cmp
mov
fwait
loopne
jbe
add
ret
xor
xchg
flds
enter
nop
inc
jecxz
aam
or
jne
lea
jns
stc
pop
pusha
icebp
sahf
xchg
fs
jmp
scas
push
adcb
andb
jle
mov
scas
test
add
sbb
fdivl
cltd
xor
pop
mov
add
stos
lcall
lret
add
dec
push
scas
orb
test
add
clc
sbb
inc
xchg
add
sbb
pop
add
leave
imul
sub
in
jnp
push
je
rolb
xchg
jns
outsl
adc
fistps
out
test
stos
lret
jg
cwtl
mov
pushf
test
mov
fnstenv
add
and
loopne
and
js
pop
sbb
add
fsubrl
test
hlt
sub
scas
cmp
push
xchg
lds
mov
jo
jae
jecxz
cmp
add
rorb
or
jno
add
adc
bound
add
dec
and
jp
jae
add
cmpsl
clc
or
add
push
xor
dec
inc
fsubrs
loop,pn
add
mov
scas
pop
es
pop
mov
and
addb
cmc
mov
add
imul
xor
xchg
incb
fwait
jae
loop
orb
cld
in
sbb
pusha
jno
pop
dec
xchg
pusha
in
sbb
cs
add
cmp
inc
pop
out
jns
jp
and
add
aam
sub
repnz
push
ret
cmp
jge
and
mov
outsb
inc
add
out
jnp
or
daa
subb
or
mov
rcrl
adc
lods
cli
sbb
mov
into
cmp
inc
adc
ds
inc
ret
cmp
add
mov
cmpsl
add
push
daa
jb
les
and
mov
loopne
inc
es
inc
pop
test
xor
les
rorb
push
fs
cmp
add
sub
orb
and
and
xchg
cmp
push
in
add
daa
dec
mov
mov
roll
aam
shl
inc
stc
in
fistps
or
push
scas
mov
movsb
jns
imul
cmc
je
mov
fisubl
mov
pushf
sbb
mov
out
cwtl
add
in
aaa
sti
pop
mul
add
daa
aad
insb
movsl
scas
sbb
mov
arpl
insl
adc
loopne
push
sahf
fdivl
test
sti
fwait
call
add
add
out
enter
mov
pop
sbb
cmp
jno
gs
mov
not
enter
inc
add
add
mov
mov
lock
gs
dec
cmovno
shr
lret
push
es
jnp
jae
inc
or
pop
or
mov
dec
add
dec
pusha
mov
mov
xor
fsubrl
add
lret
pop
xor
rcr
fisubrl
inc
lcall
mov
sahf
mov
add
repnz
lock
pop
lods
out
sbb
dec
outsb
mov
push
mov
lcall
and
in
mov
cltd
adc
and
pop
clc
test
out
lock
inc
add
push
add
push
fisubs
cwtl
push
es
add
xadd
mov
rclb
in
dec
sub
add
pop
imul
cwtl
mov
pop
add
xchg
mov
ss
pop
pop
ret
lods
pushf
cmp
aaa
cmp
adc
mov
sub
insl
fidivrs
enter
push
xor
add
sub
cmp
jns
mov
jl
or
add
mov
adcb
ds
xor
and
xchg
pop
sbb
jb
xor
mov
int3
pop
mov
add
sub
or
mov
jo
sbb
inc
pop
push
push
add
jmp
lcall
sti
add
sub
xor
mov
mov
adcb
jg
insl
cmp
push
jge
gs
arpl
jae
lahf
pop
fs
addr16
incl
gs
int3
je
add
sub
mov
ret
jns
add
mov
push
jne
loop
outsl
inc
mov
dec
add
shlb
pop
test
rol
or
inc
mov
add
pop
fldenv
sar
sub
mov
add
dec
dec
xchg
add
add
mov
iret
lahf
add
es
aad
xchg
lods
adc
pop
push
xor
in
nop
jle
rolb
leave
sarb
push
or
push
dec
imul
aad
add
mov
cs
add
cmp
cmp
xor
add
push
fs
lret
dec
scas
test
pinsrw
sbb
stos
imul
push
mov
int3
inc
xorl
insl
adcb
dec
adc
call
cli
jl
push
mov
gs
fdivp
xor
inc
fcomi
dec
cmpsl
cmp
sbb
cs
jo
cmp
jmp
push
inc
and
pop
jb
aas
sbb
repnz
dec
jnp
pop
push
cwtl
push
fcomps
ret
inc
rdtsc
cli
fmulp
xchg
mov
negb
xchg
into
jb
aas
mov
add
mov
inc
add
xlat
out
jle
add
jg
cld
aas
xchg
sub
stos
rorl
or
insb
xor
mov
add
mov
ror
fildl
dec
pop
dec
jno
cld
jnp
pusha
movsl
mov
xor
loopne
cmp
mov
je
insb
adc
sarb
ja
js
push
inc
daa
data16
sahf
mov
subb
cmpsl
movsb
add
xor
dec
fsubp
push
adc
pop
mov
je
cmp
lret
mov
jp
cmp
push
rorb
lret
dec
xlat
lahf
push
sbb
sahf
test
pusha
jns
mov
add
add
mov
xchg
xchg
jecxz
and
imul
lds
loopne
pop
sub
int
outsl
addb
cs
cs
or
jo
add
sbb
add
sarl
pusha
std
xor
mov
aad
cmp
sbb
add
mov
lods
or
add
mov
adc
cmp
push
cld
stc
std
call
shlb
cmp
ds
and
adc
imul
jecxz
in
pop
shlb
lock
jg
sbb
inc
jo
mov
lret
cmpsb
popa
add
add
jne
mov
sbb
cmp
sbb
imul
mov
xchg
imul
pop
sbb
jecxz
mov
add
ret
inc
out
jne
add
shrl
lods
jae
mov
sbb
and
mov
gs
nop
mov
test
mov
add
sub
sub
xor
ret
test
hlt
inc
jle
mov
mov
ds
mov
jbe
add
outsb
push
add
push
cmp
jp
sub
loopne
xor
arpl
int
lods
imul
and
lahf
cltd
sub
add
jns
jo
add
add
push
pop
out
leave
push
in
cmp
mov
xchg
sub
lods
fadds
pushf
bound
adc
outsl
add
jo
idiv
jae
loop
scas
vandps
mov
jl
call
adc
xchg
and
jo
fildll
add
stc
into
pop
in
add
lea
inc
sbb
stos
loop
rol
dec
insl
jb
pop
cli
mov
shl
out
das
mov
dec
pusha
add
aam
aas
add
loop
mov
pop
cli
xchg
nop
jp
mul
add
jp
inc
push
add
mov
lods
in
add
addl
xchg
ret
and
ss
imul
xchg
sub
and
dec
hlt
insb
mov
dec
push
and
out
sbb
push
pop
rolb
inc
jmp
js
mov
mov
add
mov
fcompl
clc
cs
sbb
cltd
int3
bound
xlat
add
aas
push
add
ss
mov
xchg
jo
jae
add
cwtl
es
ja
insl
les
shrb
mov
fstps
dec
xor
inc
nop
pop
sub
jmp
add
mov
mov
jl
add
dec
ja
pop
sub
out
dec
bound
cld
add
or
jb
hlt
xchg
scas
and
push
dec
xadd
rcrb
stos
popl
incl
push
shl
add
add
in
mov
xchg
pop
loope
mov
add
add
movsb
out
out
xor
mov
pop
xchg
sub
mov
jns
lret
cmp
jmp
test
bound
mov
push
das
jg
or
push
push
mov
xchg
xchg
into
in
loopne
cld
jmp
add
xchg
adc
cmp
push
cwtl
push
mov
pop
in
sub
ljmp
jp
or
scas
push
add
lds
adc
adc
push
adc
ljmp
add
xor
adc
dec
pop
popl
push
or
aaa
popf
call
pop
repnz
push
loop
iret
dec
clc
mov
mulb
and
add
std
stc
gs
stos
add
mov
mov
es
hlt
sahf
add
dec
add
int3
push
cmp
pop
notl
pop
mov
xor
inc
out
or
push
sti
xchg
fmul
add
pop
cmc
fldl
push
aam
sarb
sub
mov
loopne
pop
cmp
outsb
loop
in
xchg
and
out
andb
mov
imul
dec
addr16
es
sbb
mov
jo
out
pop
insl
mov
push
sub
add
data16
xchg
adc
mov
cwtl
push
xor
movd
jg
mov
inc
pop
add
outsl
nop
ret
xor
pusha
inc
insb
pop
xor
daa
loope
cld
mov
add
scas
fsubs
sub
mov
repnz
popf
cmpsl
nop
outsb
or
add
cmp
jno
mov
rol
arpl
rorb
lods
sub
push
push
adc
fbld
movl
and
and
add
mov
enter
cwtl
call
mov
cli
mov
fstpl
xor
push
imul
test
cmp
mov
push
add
push
add
je
fiaddl
sbb
push
mov
or
iret
mov
adc
enter
add
daa
adc
es
cmp
ja
xor
add
fstpl
inc
or
ds
pop
pusha
mov
cmc
rolb
add
lcall
out
cmp
lods
mov
loopne
add
orl
imul
pop
push
adc
jbe
add
ljmp
pop
add
push
sti
inc
jnp
les
or
inc
push
cmp
enter
xchg
aaa
idivl
mov
push
sub
fisttps
js
add
push
xor
lahf
test
and
xor
jl
jp
add
dec
pop
cmc
mov
mov
pushf
xor
push
add
mov
mov
pop
mov
or
or
nop
clc
fldenv
adc
jne
cwtl
mov
jl
add
adc
adc
mov
add
cmovp
and
scas
je
lret
fwait
clc
shlb
sarb
jge
add
sti
sbb
jle
movsb
pop
fldenv
add
into
pushf
fistps
sbb
pop
jmp
inc
xchg
out
test
or
push
add
dec
call
and
fistps
xchg
cmp
mov
add
hlt
mov
enter
mov
inc
aad
push
cld
shrl
ret
dec
mov
sub
dec
push
pop
push
and
jge
mov
adc
jl
mov
jne
xor
sub
test
add
sub
mov
sahf
pop
xlat
fsubrs
add
push
aad
filds
xchg
xlat
add
sbbl
mov
verr
aad
loop
push
jge
add
stos
mov
xor
add
mov
or
pop
and
in
push
mov
lahf
and
push
icebp
or
out
mov
gs
ret
rolb
add
pushf
fstpl
sbb
into
mov
hlt
dec
movsl
lods
add
mov
add
cmp
cmpsb
int3
arpl
xchg
popa
lods
imul
jp
xchg
in
pop
add
std
sti
mov
dec
adc
mov
loopne
loope
imul
sub
cs
shrl
std
add
pop
and
rclb
cmpsb
add
ret
mov
or
mov
cwtl
scas
icebp
xor
ja
pop
fildl
add
adc
pop
and
and
movsb
and
cmc
or
add
fcomps
add
scas
inc
add
add
std
movsb
repnz
and
sub
out
jp
add
mov
mov
push
nop
pop
mov
add
push
shll
popf
sub
andl
push
ret
loopne
or
pop
sbb
or
loope
adc
notb
add
scas
dec
xorl
pop
dec
ljmp
xor
add
jl
ss
cmp
mov
mov
nop
ja
pop
aaa
add
sti
outsb
mov
rorb
push
nop
js
adc
pop
ret
add
gs
push
adc
sbb
iret
andl
or
mov
inc
xor
loopne
test
cld
in
jmp
jecxz
adc
mov
dec
dec
sbb
std
js
imul
cmp
aam
push
add
xchg
call
cmp
push
add
pop
jecxz
jp
pushf
or
pop
je
mov
hlt
push
jns
and
call
mov
out
addr16
stos
add
sub
ret
xchg
add
stc
add
ljmp
mov
and
into
jle
and
stos
hlt
mov
cmp
or
pop
add
sbb
push
xchg
adc
add
in
push
jo
pushf
cmp
inc
add
insl
xchg
mov
sub
js
push
aad
inc
fwait
inc
add
or
mov
shl
xor
insb
add
xor
popf
sub
pusha
or
jno
push
push
cmpsl
ds
add
ss
insb
cmp
call
cld
xor
inc
lds
stc
cmp
mov
push
xchg
fildl
fwait
and
pop
fnstsw
cmp
stos
adc
cmp
test
shl
and
aam
insl
dec
testl
fstpl
sub
jns
push
jne
add
push
push
fwait
outsl
fidivl
mov
or
in
sub
bound
pop
xor
sbb
mov
in
xchg
ja
add
in
out
inc
jae
xlat
add
or
fbstp
imul
aam
xor
jo
xchg
add
cmp
add
js
adc
loop
mov
and
sbb
fistl
arpl
stc
add
cmpsb
jg
add
pop
ja
shl
cwtl
dec
pop
test
call
add
clc
rorb
and
test
js
inc
or
cmpsl
sbb
int
add
ret
mov
in
frstor
add
mov
ret
xor
dec
pop
aas
pop
arpl
add
mov
sub
push
jo
cmpsb
sbb
jmp
add
in
clc
imul
jmp
std
and
xchg
add
xlat
hlt
mov
pop
enter
jo
add
cmp
aam
add
jb
popf
mov
add
sbb
jmp
jns
repz
aas
lods
sbb
pop
cld
push
or
add
add
cmp
mov
shrl
lods
sbb
repnz
mov
jge
or
roll
setns
cmp
imul
jle
mov
and
shlb
jae
cwtl
rolb
push
pusha
in
add
enter
clc
pop
jle
add
cmp
push
fisttpll
pop
add
jbe
and
incb
push
sbb
imul
ret
inc
push
icebp
dec
mov
fiadds
inc
movsb
jno
aas
cmp
mov
cmp
jne
xor
pop
sahf
inc
add
fs
lea
call
sbb
sbb
mov
aaa
gs
add
dec
imul
mov
mov
jg
fdivrl
adc
leave
mov
shr
add
lds
jbe
insb
add
aad
push
sti
loop
shlb
jge
or
push
mov
xor
pop
fsts
ljmp
in
mov
add
adc
lds
mov
xchg
fbld
adc
lret
xchg
lock
scas
shr
jg
call
and
xor
movsb
outsl
add
xchg
or
or
lcall
add
jo
fstl
add
cld
lret
test
mov
ljmp
xchg
pusha
or
sbb
add
cmp
shrb
add
xchg
and
add
xor
add
movsb
in
xor
adcl
fisubrl
pop
lret
mov
pop
fdivs
aaa
and
mov
xchg
xor
add
dec
fs
rcll
sub
into
add
mov
mov
stos
dec
add
and
mov
dec
jno
xor
adc
sahf
add
cli
dec
push
add
mov
pusha
sub
pop
pusha
clc
sub
dec
jg
pop
mov
std
mov
add
lods
mov
jge
arpl
pop
cmp
aam
mov
mov
das
mov
sub
pusha
insb
daa
aaa
adc
fldl
fistpll
mov
mov
add
xor
pop
in
hlt
jp
add
jnp
push
push
imul
mov
and
faddl
mov
pop
push
mov
add
mov
mov
cli
inc
lds
add
mov
ds
lcall
lret
call
push
add
mov
dec
fmuls
imul
cmp
add
scas
pushl
push
and
icebp
sub
cmp
mov
andb
sub
es
adc
fs
enter
add
cs
pop
data16
jp
ds
mov
jno
sub
dec
les
add
lahf
stc
sbb
and
mov
adc
xor
pop
jmp
shl
lret
push
into
scas
mov
lock
add
sub
fidivl
dec
xor
loope
test
clc
and
xchg
bound
xor
sub
adc
and
insb
add
stos
sarb
stc
repz
int3
aad
into
jl
cmp
sub
lahf
or
mov
and
add
daa
dec
cmp
call
jno
jae
movsb
dec
mov
jmp
adc
add
daa
mov
and
movb
or
sbb
mov
pop
mov
sub
add
ja
dec
add
aam
sahf
mov
and
inc
sbb
pop
in
shlb
push
inc
push
xor
test
jecxz
inc
add
iret
mov
jnp
ds
xor
jge
mov
sub
adc
cli
fs
push
xchg
and
adc
adc
dec
and
shlb
sbb
and
and
lea
push
adc
out
inc
icebp
sbb
sub
jns
add
mov
nop
inc
mov
out
roll
jmp
in
xor
into
add
shrl
push
mov
pop
imul
insb
add
ret
dec
out
enter
push
jge
pop
mov
fucomip
sbb
sbb
es
cmp
addl
adc
shll
shr
sbb
mov
repnz
pop
add
pop
and
add
outsl
in
jmp
sbb
aaa
data16
mov
mov
cmp
sbb
add
fidivrs
dec
add
add
sub
bound
push
lods
mov
pop
test
add
repnz
mov
js
add
lds
mov
arpl
pop
ret
jecxz
lods
or
loop
and
xor
xor
pop
dec
mov
push
je
push
ror
or
ret
ja
pop
daa
push
or
sbb
xor
out
or
cmp
mov
cwtl
insb
jae
sub
sbb
mov
out
add
lcall
inc
ss
fld
cmp
mov
sub
test
pop
add
test
push
add
ja
je
out
and
in
xchg
shlb
push
js
add
lods
test
pushf
pop
loopne
cmp
add
gs
orl
cmpsl
inc
mov
sbb
mov
jle
mov
psubusw
sti
inc
loope
stc
mov
inc
add
addr16
add
jno
in
dec
cmp
lcall
xchg
leave
into
cmpsl
add
jnp
add
ds
rorb
xor
mov
negl
mov
pop
inc
mov
orb
cs
fisubrs
inc
pop
clc
cmp
dec
rolb
or
push
loope
add
xchg
lods
adc
push
je
and
xchg
sbbl
add
loop
inc
bound
add
inc
mov
inc
movsb
lret
add
add
push
mov
pop
scas
mov
mov
stos
or
sti
je
inc
sbbl
loope
add
icebp
jo
and
cmp
inc
pusha
les
ds
pop
je
add
mov
sarb
sbb
shll
mov
lods
and
outsl
jge
dec
in
xor
fsubl
xchg
mov
jle
push
loopne
stos
lock
and
jmp
jmp
insl
add
lods
daa
aad
adc
adc
sbb
shlb
sbb
add
dec
push
icebp
and
test
sti
inc
dec
xchg
and
push
inc
iret
out
add
xchg
enter
cmp
add
sub
ret
dec
add
mov
or
xchg
out
pusha
lea
sbb
dec
jl
cmp
push
rolb
add
jle
cmp
rolb
adc
mov
or
cmp
rolb
xchg
das
stos
push
and
sbb
jp
pop
mov
xor
or
and
sbb
or
jne
jb
mov
xlat
cmpsl
push
push
or
mov
push
add
add
xchg
imul
lods
les
aas
adc
or
push
inc
pop
aam
mov
rcrb
inc
unpcklps
mov
inc
push
and
pop
mov
out
mov
push
jmp
adc
jnp
add
cmc
fcompl
xchg
pusha
insb
add
into
scas
movsl
and
or
xchg
push
sub
cltd
add
mov
add
ljmp
add
jnp
addb
pop
rcrl
add
test
sti
cmpsl
xchg
mov
xorl
add
adc
call
mov
jg
push
add
pop
inc
jle
add
sub
lods
sbbb
sbb
mulb
fcoms
pop
push
sub
call
cmp
aaa
lods
and
jecxz
cmp
mov
je
mov
inc
sub
pushf
cmp
lret
sbb
push
fcoml
xchg
ret
inc
lds
add
cli
cmp
push
out
stos
ljmp
xrelease
inc
xchg
fs
hlt
imul
dec
and
ja
and
out
lods
lret
lret
clc
and
arpl
inc
mov
push
push
int
inc
add
mov
sub
fdivrl
repnz
xchg
insb
xchg
shrb
or
or
add
adc
fwait
push
and
lds
cmp
sbb
loopne
rorb
add
or
mov
dec
jl
int
or
fstps
fsubrs
and
push
jge
pushf
stc
subb
rcl
cmp
subb
outsl
mov
jp
cmpsb
andb
pop
mov
add
test
test
jb
add
loopne
imul
rclb
cli
add
mov
cmp
ds
orl
pop
ss
inc
add
xor
dec
push
mov
sub
pop
fdivr
callw
rorb
sbb
jo
dec
out
adc
xchg
mov
mov
lret
insl
add
test
cmp
in
add
aaa
pop
pop
sti
ret
pop
pop
rcll
and
nop
stos
add
dec
xchg
jmp
arpl
mov
push
sbb
sub
xor
aaa
inc
sarb
sub
in
jbe
scas
push
nop
add
icebp
jns
scas
addb
xorl
push
loopne
fisubl
and
xchg
add
fnstcw
and
add
and
es
add
movsl
or
jmp
jb
jo
xor
sub
sbb
lds
jne
into
mov
sbbb
push
push
lock
mov
repz
out
in
pop
fisubs
jl
clc
and
mov
jg
pop
jmp
jge
sub
loop
add
dec
and
enter
mov
sarb
mov
lock
inc
inc
test
cmp
addr16
xor
icebp
mov
push
aas
hlt
stos
pop
add
add
in
fldenv
mov
xchg
shl
xchg
xchg
inc
push
jae
push
and
cmpsl
mov
add
mov
push
add
out
dec
mov
pusha
sbb
cmc
add
lods
inc
xlat
push
loop
jmp
test
into
movups
dec
lcall
add
imulb
mov
rol
add
jp
sbb
clc
mov
inc
cmp
outsl
mov
adc
divb
mov
in
sub
stos
add
fwait
mov
stc
loop
add
pop
pop
add
lock
je
fidivrs
imul
jecxz
push
mov
outsl
pop
fistl
adc
xchg
cld
add
sbb
add
pop
cltd
outsb
or
lea
arpl
loopne
inc
inc
mov
cs
add
cmpsl
stos
out
dec
enter
mov
push
mov
bnd
push
add
sbb
xor
add
out
jb
sub
sbb
and
std
aaa
cmp
cmp
ljmp
mov
js
cmp
call
stos
cmpsb
add
push
and
adc
adc
cmp
xchg
iret
jo
repz
jne
inc
aaa
sbb
shll
push
test
or
inc
cs
mov
add
inc
pop
inc
jns
leave
mov
fmul
cmp
in
mov
add
add
dec
aad
mov
test
mov
cmp
xchg
jmp
sbb
rorb
push
nop
ja
and
cli
in
add
jecxz
mov
mov
ficomps
in
inc
dec
pop
js
lahf
push
sbb
xchg
sarb
jle
mov
imul
cmpsb
xchg
jecxz
or
pop
add
out
mov
adc
mov
and
movsl
dec
mov
ljmp
and
xor
inc
push
roll
aam
pushf
stos
orb
cmp
mov
out
adc
in
add
mov
hlt
loopne
fbld
fs
mov
or
push
mov
cwtl
lods
add
imul
cmp
mov
adc
pop
scas
add
movsl
jge
pop
repnz
out
pop
dec
subl
pusha
hlt
sub
sbb
scas
adc
add
dec
sarb
xchg
cli
mov
test
mov
imul
push
pop
jns
mov
cmc
rcl
stos
jp
movsbl
loopne
push
add
sbb
inc
test
mov
fimuls
or
notl
add
add
mov
pop
pop
push
hlt
adc
adc
or
or
jns
mov
add
jle
mov
cwtl
fadds
push
jno
ffreep
repnz
xchg
add
inc
xchg
popa
je
add
in
sbb
add
addr16
mov
and
clc
push
dec
pusha
jmp
shrl
push
test
add
sbbb
add
push
jae
jns
lcall
cmp
cmp
repz
inc
call
add
out
jnp
cmp
sub
inc
jae
or
outsl
sbb
sbb
add
mov
mov
test
add
sub
ja
scas
mov
mov
aas
add
mov
loop
add
outsb
sti
into
loope
ds
aam
xlat
lods
sub
int3
fimull
push
xor
dec
add
repz
out
stc
les
add
rorl
add
shrb
pop
or
fadd
scas
or
mov
sbb
mov
add
fs
pusha
jae
ret
aas
int3
in
sbb
scas
or
subl
gs
pop
mov
fwait
dec
popa
mov
fdivs
popf
add
pop
aam
push
sar
and
add
lret
adc
mov
push
stc
ficoms
aaa
es
loop
std
xor
sub
lds
jnp
adc
add
cmpsb
bound
rorb
iret
add
fstpt
pop
pop
xchg
icebp
sub
xchg
iret
lcall
jo
test
addr16
mov
mov
cs
test
imul
and
jle
out
lcall
sbbl
xchg
or
fists
nop
mov
pop
mov
std
mov
or
test
sbb
or
cwtl
pusha
mov
mov
pop
ja
enter
cmc
test
in
or
leave
pop
jne
and
add
push
sbb
inc
aas
sub
sbbl
sub
add
inc
je
jle
shl
cmp
jecxz
sti
sbb
inc
xchg
push
nop
addr16
leave
add
mov
stos
pop
xchg
mov
xor
or
dec
mov
adc
inc
jmp
out
movsl
add
pcmpeqb
mov
jo
sahf
add
jl
adc
dec
cli
ret
jmp
cmp
sub
outsl
cmp
push
shlb
cmp
push
lock
adc
rcrl
fidivrs
std
push
jl
add
addr16
mov
icebp
leave
and
fwait
xchg
enter
ret
sbb
sbb
dec
imul
add
scas
movsl
inc
sbb
nop
bound
dec
leave
add
push
pop
xchg
rcrb
jmp
cmp
popf
xor
pusha
sub
jle
loopne
incb
add
cmp
loopne
sarb
rolb
gs
lods
mov
pop
pop
sbb
and
bound
mov
mov
xchg
add
xchg
std
sbb
pop
stc
jge
pop
test
mov
mov
js
bound
fcomps
and
add
bound
shrb
dec
fwait
movsb
add
lea
cwtl
lock
shr
jp
sub
daa
mov
add
call
and
mov
in
xchg
stos
add
cmp
das
add
cmpsl
add
je
popf
lds
imul
data16
lret
pop
test
cmp
xchg
filds
fstpl
popl
sub
and
aam
in
dec
pop
dec
clc
pop
fistps
xlat
adc
fildl
mov
out
and
cmp
add
mov
xchg
in
call
fmuls
inc
std
add
das
xor
pop
arpl
add
ret
adc
add
or
sahf
lsl
xor
lret
cltd
add
in
add
mov
pop
cmpsb
jb
xchg
mov
mov
sbb
jmp
xchg
xor
orb
jmp
cmp
cmp
int
add
jne
push
mov
iret
mov
in
cld
pusha
rcrl
testl
loope
scas
lock
push
pop
mov
jb
int3
mov
jo
sahf
fwait
add
adcb
cld
sti
adc
mov
fadd
pop
add
mov
add
sub
insl
and
lods
filds
push
xchg
push
sbbl
mov
inc
add
out
leave
jp
mov
jmp
jle
push
or
loop
loopne
mov
inc
dec
jl
verr
int
cli
addr16
add
pop
sbb
lea
mov
inc
and
mov
sbb
dec
sub
mov
cmpsb
add
dec
repz
xor
pushf
pusha
js
das
add
mov
mov
sbb
mov
xor
out
inc
call
les
lret
call
call
and
stos
push
and
movsl
sbbl
jnp
inc
mov
out
pop
jle
jmp
iret
adc
bound
dec
and
lahf
xchg
or
adc
mov
gs
xor
pop
xor
add
push
adc
cld
cmp
rclb
inc
and
andb
in
das
add
fdivr
dec
mov
mov
jle
call
xlat
test
movb
mov
add
mov
adc
rcrb
xorb
jge
test
xchg
fs
mov
lahf
iret
inc
je
pop
add
xchg
out
sub
cwtl
cmp
testb
shrd
pop
adc
cmp
inc
push
ja
add
mov
in
stos
incl
pop
mov
outsb
daa
rcr
add
ficomps
mov
in
add
jmp
int3
jl
add
bound
or
lcall
ds
jmp
insb
pop
mov
lock
dec
rolb
cli
subb
push
adc
scas
or
lea
adc
or
enter
out
add
inc
jne
gs
add
cmp
add
pop
mov
pop
xchg
xchg
das
add
add
fld
adc
repz
test
jecxz
out
add
nop
call
ret
jbe
mov
loope
enter
mov
or
push
cmp
inc
dec
lods
xor
iret
cld
cmp
subb
adc
or
mov
add
mov
int
lahf
imul
mov
jns
jno
cmp
inc
test
xor
pop
sbb
adcb
loope
arpl
mov
and
sbbb
jmp
gs
repz
into
hlt
add
lahf
andl
jmp
pushl
inc
mov
push
pop
lahf
icebp
negb
jl
xor
dec
jne
cmp
jge
repz
jno
pop
ret
mov
or
test
or
mov
mov
cmp
add
adc
xchg
cwtl
pop
loope
popa
fbstp
mov
bound
dec
lret
sub
incl
inc
mov
sbb
adc
out
jl
add
insb
sub
or
adc
mov
dec
out
push
imulb
lods
add
mov
aaa
push
aas
mov
cs
push
add
xchg
jo
popa
ss
inc
push
leave
push
push
inc
hlt
into
std
sahf
daa
or
sbb
add
js
cmp
add
dec
sub
mov
repz
cmpeqps
cmp
mov
jg
fdivp
lea
jns
add
loopne
ret
push
jb
fs
pop
imul
sub
jno
jo
sbb
sbb
mov
in
int
lock
clc
rcrl
hlt
sbb
iret
push
out
add
push
adc
in
xor
clc
pusha
mov
push
mov
movsb
aas
movsl
out
pusha
and
aam
push
sbb
jbe
pop
pushf
jae
subl
cmpsb
inc
or
mov
push
lea
mov
add
enter
add
andl
lock
rorb
push
inc
in
call
jmp
lea
sbb
imul
add
mov
dec
fbld
aad
mov
ljmp
pop
imul
lods
pop
xchg
mov
xchg
cwtl
mov
popa
add
push
xchg
test
adc
fs
dec
add
ret
push
sahf
push
cmp
aam
jg
add
xor
call
or
cld
aaa
jbe
call
jo
stc
enter
add
in
incb
and
loopne
jecxz
outsl
cltd
js
mov
cwtl
push
xchg
dec
or
mov
gs
rorl
pop
pop
mov
adc
add
into
mov
loop
pop
add
rcrl
sub
cld
daa
roll
cli
cmp
cmpsl
jo
ja
add
dec
lret
subl
pop
orb
and
inc
stos
sub
mov
inc
sbb
add
ja
xlat
adc
xchg
dec
movsb
insb
add
insl
lret
pop
cmp
add
scas
cmp
out
sbb
mov
add
adc
xchg
loopne
dec
jno
sbb
leave
mov
xor
icebp
add
inc
adc
or
pop
mov
jns
or
bswap
cld
mov
xchg
or
push
int
scas
or
leave
inc
dec
sbb
inc
jp
pop
fadds
call
test
sub
scas
popl
sbb
cli
push
mov
outsl
lods
jg
rol
int
add
mov
pop
loope
adc
adc
cld
popf
add
add
dec
jno
mov
add
scas
cmc
rcll
and
push
or
push
mov
fstpl
ret
xchg
jae
rcl
and
mov
test
push
add
nop
jne
test
loop
mov
mov
js
adc
test
jnp
mov
mov
adc
decl
jns
jb
nop
fsubrs
adc
cld
add
pushf
je
dec
cmp
push
lcall
add
jno
and
ficompl
dec
add
jecxz
dec
pop
js
add
les
sbb
xor
and
aam
sub
insl
push
adc
pop
sbb
mov
inc
add
in
xor
xlat
ret
xchg
lock
fiadds
ss
pop
cmp
mov
ja
add
imul
lods
mov
inc
adcb
xchg
int3
ret
pop
fidivrs
pop
add
xor
insb
add
sbb
stos
pop
js
pop
sbb
bound
dec
add
stos
lea
outsl
test
inc
in
aaa
hlt
and
xchg
sti
stos
add
inc
xor
lea
iret
xor
imul
mov
adc
inc
clc
scas
add
push
dec
xchg
jae
add
call
dec
pusha
jo
xorb
and
inc
int3
sub
std
sbb
add
leave
test
and
push
add
gs
js
mov
out
add
jge
jecxz
dec
fdivrs
or
sarb
fsubrs
mov
mov
add
andb
fistpl
les
stos
mov
xor
sbb
ljmp
arpl
les
xchg
pusha
ljmp
in
add
and
loope
test
inc
shll
mov
shrl
jle
push
leave
fsubrs
pop
jecxz
dec
popf
dec
call
add
or
adc
loopne
add
dec
jl
add
inc
insl
push
in
adc
vmptrld
sahf
popa
sbb
pop
jnp
add
unpckhps
arpl
fptan
pop
push
inc
sahf
fsubrs
jb
cwtl
pop
pop
into
add
movsb
in
insb
bound
pop
dec
repnz
jnp
je
or
add
cs
add
mov
mov
xlat
pusha
sub
add
mov
lret
and
ja
in
imul
in
jne
sub
addl
jbe
xchg
into
int
mov
lret
lahf
addb
ret
add
ljmp
add
pop
mov
dec
lcall
add
push
ja
jne
sarb
hlt
sbb
subl
out
adc
xchg
add
hlt
shlb
jns
out
adc
or
xchg
add
and
xor
mov
or
popa
pop
sub
push
int3
or
repnz
sbb
in
fisubl
adc
rcll
mov
add
aas
mov
mov
into
add
pop
add
sti
push
movl
jmp
int3
jl
pop
mov
mov
adc
mov
adc
pusha
pop
sbb
jae
outsl
add
push
popf
push
fs
ljmp
jno
inc
add
sbb
shl
call
pop
add
pop
mov
add
sub
xchg
or
iret
js
sbb
aam
pop
leave
data16
pusha
xor
outsl
xchg
mov
fidivs
dec
add
ja
outsl
out
push
arpl
add
in
cmp
add
pop
add
sub
fdivs
les
cmp
test
mov
jmp
rcr
pusha
or
add
addps
push
jo
add
inc
jno
fs
add
test
movsl
in
js
mov
js
and
sti
lock
lds
cmp
fidivrs
nop
xor
test
dec
add
out
cmp
fwait
adcb
lcall
movsl
aam
clc
sbb
mov
out
wrmsr
fstpt
in
fcoms
adc
divl
scas
arpl
lock
dec
pop
or
cmp
mov
xor
in
add
data16
cmp
das
cmp
add
xor
dec
jno
jecxz
loope
out
push
cmc
stos
in
fcomps
add
leave
mov
or
repz
add
push
mov
pop
aam
jae
es
popf
pushf
and
mov
sbb
sti
xchg
sbb
cmp
movsl
cmp
mov
add
xor
xor
mov
test
popf
lcall
insb
int3
int
scas
push
pop
data16
sbb
je
xchg
or
xorb
jg
lods
pop
and
add
es
cli
repnz
movb
adc
iret
dec
mov
inc
add
push
mov
jp
and
cmp
sbb
cmp
fbstp
int3
lods
dec
mov
outsl
xor
scas
dec
xor
jmp
pop
push
sub
cmc
shr
add
in
ljmp
insb
sbb
hlt
loope
add
negb
jbe
xchg
cld
ljmp
xor
nop
mov
in
sbb
sub
hlt
mov
lods
insl
clc
jno
add
cmpsl
dec
jmp
gs
incb
jne
add
push
ds
pusha
mov
add
pop
js
mov
ljmp
lcall
pusha
jbe
cwtl
push
subl
fdivr
aas
jns
add
cwtl
leave
mov
sbb
mov
jg
inc
outsl
inc
add
inc
jmp
sbb
cli
test
mov
into
sbbb
add
je
mov
or
cmc
add
sbb
shrb
fcomps
mov
cld
cwtl
xor
fiadds
add
or
and
xchg
or
repnz
addb
sub
imul
and
out
int
and
add
mov
push
imulb
mov
lock
inc
jle
rolb
mov
lods
enter
cmpsl
cwtl
cmp
xchg
inc
and
mov
lds
push
dec
iret
je
clc
mov
std
cmpb
es
in
cmp
lcall
push
movsb
jno
inc
roll
mov
in
xchg
add
xchg
push
and
aad
jnp
mov
mov
rol
cli
xchg
cmp
enter
fs
push
addr16
add
or
clc
aad
add
xchg
rorl
push
in
ror
add
sub
push
lods
pop
lret
cli
imul
mov
jne
andl
xchg
sub
nop
add
imul
pop
add
gs
pop
xchg
int3
mov
shl
in
and
stos
ja
xchg
rcrb
test
repz
movsb
adc
jae
xchg
pushl
fwait
nop
mov
movq
sahf
xor
and
jecxz
ret
pop
mov
lea
pop
mov
mov
add
movsb
add
jnp
mov
cmpsl
add
inc
jae
movsb
shll
add
fimuls
xor
pop
cmpsl
verw
cmp
movsb
ds
popa
and
mov
arpl
lret
fwait
push
movsl
adcb
xchg
pop
stos
inc
fidivrs
sub
cmp
add
mov
cmp
data16
pop
notl
mov
cmpb
pushf
fcompl
inc
daa
dec
and
lret
and
call
lcall
loope
add
cmp
dec
cmpps
mov
mov
sub
push
add
and
dec
add
daa
mov
add
sub
sbb
dec
enter
cmp
imul
fisubrl
mov
add
lcall
add
mov
sbb
int
repnz
les
fdivr
cmp
cmovl
enter
jge
add
lcall
and
xchg
ret
add
cmp
xor
mov
add
scas
add
sbb
adc
aas
dec
cs
sub
pop
add
adc
ret
fwait
add
pushf
gs
in
jg
sbb
inc
add
movsb
mov
cmovae
xor
dec
adc
cwtl
mov
mov
sub
js
add
stos
jg
test
jmp
iret
mov
xchg
mov
add
in
movl
cmp
pop
arpl
pushf
pusha
mov
cli
mull
call
fcoms
dec
add
repnz
cltd
addb
xor
dec
xchg
mov
add
std
pop
add
mov
dec
dec
add
fdivr
or
mov
jo
jmp
add
pop
mov
shll
add
mov
lcall
out
pop
mov
cmp
int
loop
scas
mov
adc
mov
push
add
push
push
sarl
push
mov
jmp
sbb
jmp
add
aaa
fiadds
cmp
mov
cmp
loope
cmp
mov
push
add
out
hlt
ja
pop
mov
jmp
sti
xor
arpl
xchg
pop
sub
mov
add
dec
cmc
xlat
sbb
sub
pusha
incb
inc
adc
pop
mov
ret
pop
nop
fcomps
add
push
aaa
push
cld
negl
add
xchg
add
xchg
mov
adc
xorb
xorl
dec
mov
repz
add
or
xchg
dec
pop
cmp
loopne
mov
dec
or
mov
loop
enter
test
mov
aam
clc
cld
add
fsubl
add
gs
subb
jmp
xchg
mov
dec
out
incl
jns
into
enter
xor
lods
andl
or
or
sub
int
add
dec
push
fcoms
xchg
add
mov
inc
stos
shl
xor
fwait
mov
dec
out
mov
ret
je
push
sub
add
mov
mov
jle
into
xchg
pop
nopl
clc
sbb
movsl
or
adc
add
lods
mov
nop
pop
jns
inc
add
adc
loop
push
or
lods
js
fsubs
inc
or
push
add
mov
cld
cmp
xchg
mov
cmpsl
jecxz
enter
add
rcrl
lret
in
sbb
stos
add
arpl
sbb
and
jns
sub
cmp
jo
xchg
bswap
inc
sbb
sbb
xchg
in
xor
add
xchg
xchg
or
hlt
test
mov
sbbb
add
test
mov
imul
cmpl
mov
vsqrtpd
pusha
bound
and
add
pop
call
add
adc
push
sub
push
fcoms
mov
dec
ljmp
or
add
ljmp
jl
pop
out
loopne
cmp
lret
mov
jns
and
repnz
movhps
pop
jne
mov
or
call
xchg
rcl
add
fldt
push
repz
xchg
cmp
and
mov
lods
xor
inc
jo
and
xor
and
xor
out
shrb
or
imulb
scas
mov
add
les
pop
pop
push
add
xchg
shlb
xchg
add
lcall
test
popa
ljmp
mov
xor
hlt
xchg
movb
mov
pusha
lcall
pushf
ja
jb
sbb
adc
ret
jnp
adcb
jle
add
add
adc
jecxz
stc
lret
jle
fidivl
add
test
repnz
mov
je
add
push
lock
pop
adc
arpl
pushf
sbb
jns
outsl
add
dec
jp
mov
mov
mov
aam
sub
int3
jno
and
testl
sub
stos
pop
dec
sarb
frstor
icebp
adc
jo
pop
repnz
lods
and
sub
add
push
ret
test
cltd
sub
mov
adc
enter
loop
push
inc
mov
add
and
mov
in
int3
push
dec
aas
ret
xchg
inc
outsl
mov
test
adcb
inc
sub
jl
add
mov
cmp
sub
rolb
roll
or
jg
iret
sub
inc
xchg
add
mov
jno
sbb
and
lret
cmpsl
nop
leave
jns
aas
dec
mov
das
add
xchg
inc
rolb
and
add
jns
pop
ds
cmp
cld
fisttpll
add
add
xchg
call
push
jae
pop
bound
aam
mov
div
push
add
lret
gs
inc
add
aam
xor
fcmovu
or
add
jp
add
mov
or
std
add
mov
scas
push
test
jne
mov
lock
add
sbb
jle
cmp
lea
jbe
inc
int3
sbb
add
xor
mov
or
cmp
iret
add
jns
hlt
insl
das
call
inc
mov
xchg
jae
add
ficomps
mov
pop
adc
push
loope
repnz
decl
test
sbb
push
repz
xor
enter
pushf
imul
inc
adc
lods
cmp
stc
sahf
sbb
ds
xor
lock
push
add
jnp
imul
mov
mov
cld
xchg
add
loop
aam
add
lea
stos
jbe
add
push
in
and
ja
push
mov
leave
jbe
lret
paddq
ds
sbb
stos
pop
xchg
add
in
pusha
hlt
inc
outsl
out
xor
pop
push
adc
cmpsl
add
call
adc
pop
lods
mov
mov
ds
inc
add
mov
les
sub
cmpsb
sub
pop
push
inc
pop
mov
push
cmp
cmp
mov
mov
pop
sbb
xlat
cmp
leave
cli
cmp
mul
mov
or
repz
xor
pusha
insb
xorb
xchg
fsubs
sub
dec
clc
cmpsb
adc
inc
pop
test
add
nop
ja
sbb
call
enter
xchg
add
fisubs
push
add
scas
and
pop
mov
xlat
loop
addr16
rorb
pushf
jnp
test
add
cmpsl
les
pop
cmpsl
bound
jmp
inc
cld
mov
push
hlt
clc
add
ja
jmp
cmp
es
cs
out
cltd
push
mov
lods
inc
fstpl
jmp
or
fisubs
add
sahf
mov
mov
xchg
das
fiadds
in
aas
sarb
mov
mov
add
mov
xchg
add
sub
stc
mov
cwtl
sbb
jb
sbb
and
xor
mul
sub
into
les
add
add
es
xor
jle
scas
cmc
dec
xor
add
push
push
in
jmp
xor
sub
xchg
inc
mov
xchg
jmp
jnp
ficomps
or
cmp
pusha
jl
pusha
mov
mov
xor
out
inc
push
adc
sbb
xor
in
repz
mov
and
dec
mov
jmp
cmp
push
adc
cmp
mov
fbld
in
movsl
popf
and
scas
push
push
add
push
push
cmp
in
out
adc
jae
rcr
fdivl
nop/reserved
int
pop
ret
in
dec
or
adcb
repz
jne
scas
sqrtps
add
test
loopne
inc
sub
jecxz
and
clc
add
popf
cmp
fs
mul
sahf
cmp
cld
scas
or
mov
push
add
push
orb
js
add
imul
shll
pop
inc
and
add
in
add
sbb
leave
shl
lock
mov
and
ds
sbbb
inc
xor
or
adc
stc
pop
enter
xor
movsb
fisubs
cmp
add
xchg
enter
sbb
inc
jne
loopne
stos
mulb
ret
je
jno
cmp
sub
test
cwtl
cmp
add
xchg
bound
mov
ss
adc
enter
xor
jno
cwtl
inc
add
ljmp
popl
cwtl
xchg
mov
pusha
fimuls
push
arpl
stc
outsb
add
rcrl
add
scas
shrl
int3
jo
add
xor
jle
cmp
mov
nop
jbe
adcl
rolb
xlat
pop
push
xchg
loope
mov
add
out
inc
or
imul
pop
sbb
adc
das
add
int3
daa
repnz
inc
xchg
add
insb
mov
adc
add
enter
dec
out
fbld
bound
lock
out
xchg
and
es
fistps
ss
jmp
add
add
sti
je
dec
rcrl
out
xor
cmp
cli
xorb
test
push
inc
mov
xchg
or
add
das
dec
cmc
add
sub
jmp
xor
dec
xor
cli
sti
xor
int3
hlt
cwtl
or
adc
dec
cld
add
cli
add
ljmp
jns
add
aas
int
fs
addl
bswap
popa
jb
jle
push
std
mov
sbb
dec
xor
inc
nop
add
test
mov
pop
cmp
lahf
push
push
outsb
aam
push
and
fdiv
adcl
jne
mov
shrl
jae
or
rcll
fidivs
sbb
cwtl
pop
mov
popf
and
loopne
lock
cmp
inc
and
or
fsts
mov
divb
xchg
sub
pusha
push
add
insb
push
gs
lods
sahf
cmpb
and
jbe
inc
push
iret
pop
and
dec
das
stos
loopne
fs
mov
add
je
adc
lcall
push
std
out
add
xchg
and
and
inc
add
lods
out
and
or
add
push
push
pop
cmp
cmp
aaa
sar
incb
xchg
and
cli
inc
jo
and
popf
mov
daa
dec
add
mov
mov
out
sub
pop
push
add
inc
lock
nop
je
fimuls
push
mov
add
aas
sbb
jb
fisubrs
add
xchg
scas
add
add
outsl
sbb
bound
out
call
jno
inc
adc
mov
nop
ss
xlat
lahf
sbbb
pop
lcall
add
insb
dec
jl
sbb
mov
and
push
add
xor
mov
imul
xchg
sbb
pop
and
add
adc
lds
verw
lahf
pop
cld
ja
add
mov
loopne
in
push
pop
hlt
mov
push
push
sbb
add
stos
add
pushf
ficoms
ljmp
jb
icebp
inc
dec
in
das
add
cs
les
mov
jle
scas
jo
jae
add
cmpsb
adc
xchg
cld
adc
push
sbb
add
xchg
sbb
jecxz
mov
and
into
aad
pop
cmpsb
lcall
hlt
ficoml
loopne
mov
enter
pop
push
or
stos
ds
in
dec
mov
dec
dec
dec
and
addr16
cmp
inc
jecxz
cmp
mov
arpl
xchg
es
jnp
push
push
inc
insl
and
add
pop
aad
pop
adc
push
jo
mov
lahf
leave
cli
faddl
mov
or
or
mov
xor
adc
pop
dec
test
dec
add
into
pop
or
repz
pop
jle
push
lock
lods
pop
fcmovne
cvtdq2ps
push
je
movsl
or
or
cmp
dec
or
repz
addl
pusha
in
mov
lods
insb
mov
cmpsb
and
mov
push
xor
pushf
sbb
push
dec
out
xchg
and
lods
sbb
dec
add
fiaddl
xchg
outsb
sbb
xchg
mov
add
pushf
lcall
mov
jb
xlat
cmpsb
roll
cmp
cmp
ret
loop
sar
outsb
fcmovnb
aas
add
pop
mov
push
fcoml
lds
and
pop
adc
cmp
addr16
and
mov
add
movsl
push
jmp
xor
and
roll
add
or
add
lret
mov
es
pop
xor
dec
shlb
or
push
xchg
repnz
hlt
lret
inc
jge
in
sbb
adc
push
stos
add
sub
jns
sub
nop
jle
add
loope
pop
test
loop
push
scas
in
jecxz
ret
add
test
sbb
shll
aad
loopne
mov
xor
mov
xlat
mov
sub
bound
loopne
pop
inc
xchg
movb
and
cmpsb
or
loope
lods
cld
fwait
sbb
outsb
adc
sti
aas
xchg
ret
adc
add
clc
push
jge
fmuls
cmp
movsl
ret
aam
imul
repnz
loopne
cs
daa
cmovl
lret
xchg
rcr
mov
dec
push
aas
repnz
js
faddl
out
pop
cmp
push
out
adc
out
movsb
mov
xchg
jp
mov
lret
mov
cli
adc
aad
ret
sub
sub
add
loopne
int3
mov
ror
push
bound
jmp
push
jp
add
sbb
fadds
sub
add
sar
push
push
xor
fsubl
inc
jnp
lods
dec
mov
aaa
mov
dec
rcl
dec
xchg
add
popa
add
sub
mov
aas
inc
mov
loop
add
in
mov
inc
aaa
ret
push
lods
push
js
jmp
test
insb
int
mov
cmp
lret
out
sbb
cmp
mov
pop
and
sbb
dec
mov
gs
test
inc
outsb
cwtl
or
and
fimuls
jecxz
mov
jo
dec
test
call
adc
mov
dec
push
shlb
and
out
push
subb
cmpsb
sub
sbb
jo
push
daa
add
mov
dec
xchg
inc
hlt
mov
sbbb
cmpb
xlat
or
jg
add
negb
pop
adc
jnp
push
add
add
mov
pusha
mov
lea
mov
cmp
mov
mov
icebp
sbb
sbb
xchg
test
lcall
xor
mov
add
pop
ror
fsubrs
add
push
dec
mov
add
outsl
xchg
push
imul
stos
add
clc
mov
jo
test
mov
outsb
loopne
add
mov
imul
or
sub
add
adc
push
add
mov
sahf
mov
lcall
into
inc
lods
mov
insl
add
and
or
sub
ja
sub
ds
mov
cmp
xchg
shrb
enter
addr16
sbb
fnsave
in
nop
orb
push
add
sub
mov
cmp
xlat
int3
es
rcrb
test
and
insb
sub
xchg
hlt
add
dec
fs
mov
add
jns
add
ja
scas
mov
cmp
and
arpl
or
push
adc
rcrl
push
ss
mov
inc
roll
cmp
xor
adc
addb
test
inc
stos
sti
loop
pop
or
pop
sub
sbb
scas
adc
out
addr16
sbb
sub
pop
test
xchg
dec
add
pop
scas
mov
add
xor
dec
mov
add
orb
mov
mov
fwait
gs
add
jg
scas
xchg
adc
pop
rcrb
push
lods
pop
push
push
pop
test
mov
adc
and
add
ss
imull
pusha
es
loope
cmpsb
add
jp
mov
ja
xor
cwtl
rcrl
in
xor
repz
int3
xchg
adc
or
andl
inc
jecxz
push
lock
fbstp
mov
push
fiaddl
js
xor
jo
push
inc
in
jg
inc
pop
adc
std
push
mov
jecxz
sub
add
dec
shlw
push
stos
cmc
or
andb
out
shll
popf
jmp
mov
jo
rcll
or
cmp
sbb
pop
pop
inc
xchg
repz
movsb
add
sti
pop
add
arpl
loope
push
int3
pop
push
in
push
daa
mov
mov
cmp
ss
sub
or
ljmp
add
pop
clc
mov
adc
adc
subb
cmpb
flds
aaa
imul
xchg
mov
arpl
mov
pop
add
mov
lods
fstps
push
out
inc
push
out
lods
jns
in
imul
adc
push
clc
push
add
out
cli
movsb
addl
sub
pop
fsts
push
aaa
mov
fldt
add
aas
jb
adc
mov
sbb
je
and
inc
outsl
add
outsb
or
das
roll
out
jb
insl
adc
lods
and
jg
jae
in
cs
addr16
add
jge
push
subl
stos
cbtw
aaa
sti
pop
cmp
xor
sbb
jb
ljmp
xchg
jae
pop
jle
xor
sti
std
popw
mov
dec
pushf
insl
adc
sub
and
xor
int
xlat
data16
ljmp
fmuls
jge
inc
add
fs
outsl
dec
cmp
out
rcrb
xlat
movaps
pop
fdivrl
call
mov
sbb
xlat
mov
or
pusha
and
bound
call
add
int
push
fwait
dec
insb
add
mov
iret
xor
mov
cltd
out
adc
sbbb
pop
jb
stos
dec
add
dec
sub
mov
dec
or
loop
sbb
jae
sub
mov
lock
cltd
enter
sbb
sub
fcmovb
and
out
add
std
test
imul
and
mov
popf
or
dec
mov
xchg
jmp
jle
xchg
stos
add
loopne
addr16
flds
jp
fs
int3
fildl
xchg
inc
repnz
cmp
hlt
mull
pop
jne
cmp
xchg
pop
add
fcoml
gs
shll
push
push
insb
or
add
into
adc
add
dec
aas
movb
cld
popa
out
into
dec
dec
mov
inc
sub
add
mov
stos
je
imul
mov
and
add
jno
xchg
mov
sar
js
ds
mov
push
add
out
sub
lock
imul
enter
push
lahf
pop
add
and
pop
daa
jle
push
mov
add
das
ror
inc
or
sub
into
cltd
or
mov
sarb
push
add
cld
mov
add
push
aam
push
add
adc
pop
adc
jns
popf
push
in
pop
rolb
ret
das
orl
ljmp
mov
sbb
addb
aad
sbbb
push
dec
push
mov
clc
aam
xor
je
or
cmpsl
inc
push
jo
add
lahf
popa
std
test
addb
xor
push
sahf
mov
fildl
shlb
xchg
adc
add
out
pop
inc
sub
insl
add
xchg
enter
fdivrl
out
and
fldt
pop
out
mov
adcl
xchg
mov
xchg
add
jae
jbe
mov
mov
dec
jmp
shl
and
sbb
loopne
clc
das
cmovle
jp
add
lcall
lret
cwtl
add
roll
cmp
mov
add
xor
sbb
fadds
sub
sbb
stos
fdivrs
jg
inc
sub
aam
jp
pop
lcall
gs
pop
div
addb
out
push
rclb
lcall
add
jae
in
adc
popa
add
cmp
dec
shlb
insb
mov
jns
xchg
and
jp
in
loop
and
push
cmp
daa
sub
pop
repz
lcall
shlb
jbe
nop
ljmp
movsl
pmulhuw
aam
cmp
or
push
enter
inc
cli
int
nop
hlt
xor
mov
insb
pop
add
jns
jge
mov
inc
loopne
add
mov
xchg
cmc
sbb
xor
in
jle
lock
add
pop
pushl
in
push
add
int3
je
movsl
out
push
in
cmp
xchg
hlt
pop
rclb
mov
loope
lock
or
cwtl
add
or
inc
ret
sub
dec
adc
cld
lock
add
xorb
sbb
inc
call
or
mov
push
add
push
stos
lea
push
cwtl
lds
repz
mov
push
loope
mov
leave
xlat
add
sbb
js
and
out
jecxz
bound
roll
xchg
rolb
scas
pmuludq
or
adc
fcmovnb
dec
cltd
pop
test
jp
sbb
jb
insl
lcall
aas
cmp
ss
ret
xchg
mov
add
add
fcomps
inc
lds
pop
jnp
mov
notl
inc
int
jle
cmpl
dec
jnp
loope
js
lock
inc
les
sub
pushf
testl
xlat
or
add
add
sahf
cld
or
loope
xchg
popf
mov
movsb
imul
and
bound
cmp
test
sbb
push
sbb
jb
sti
testl
and
push
adc
lahf
call
xor
loopne
jno
push
pop
ret
movsb
sbb
xor
jecxz
call
add
push
add
lret
pop
mov
or
lret
popa
mov
dec
mov
popf
pop
sahf
ljmp
in
bound
hlt
pop
push
cmp
add
xor
mov
dec
repz
lret
push
jp
pop
inc
out
insl
mov
jg
nop
add
dec
das
loope
cli
or
cmp
lods
push
jne
dec
inc
outsb
jns
fs
adc
in
push
add
xchg
add
and
inc
cmp
fmuls
mov
sub
sub
mov
add
add
add
ds
sbb
mull
fists
sarl
pop
jbe
add
enter
cmpsb
loopne
fidivrs
push
mov
adc
pushf
lock
and
ljmp
fcomps
inc
inc
cmp
in
xchg
out
add
enter
push
adc
or
adc
dec
cmp
pushf
push
add
cs
jo
rcll
xchg
cwtl
add
imull
in
and
sbb
add
lret
test
add
or
mov
jle
xor
sbb
loope
add
in
cmp
pop
or
xchg
pop
xor
pop
push
fwait
add
aas
dec
fistl
das
jb
lahf
cmp
loop
data16
stos
xchg
add
test
adc
pop
imul
sub
in
add
fwait
addl
fldcw
call
adcb
xchg
mov
add
xchg
int3
divl
dec
cmp
add
and
cmc
mov
ss
push
or
das
insl
add
xchg
and
jg
cwtl
imul
mov
fisttps
pop
js
mov
add
mov
mov
popa
in
insl
dec
lock
xor
add
pop
int
addl
adc
adc
push
adc
lret
add
stos
arpl
or
adc
dec
mov
inc
add
pop
mov
add
push
and
add
icebp
or
mov
sbb
and
fs
es
mov
push
stc
sub
add
xchg
outsl
push
xchg
push
xor
cld
sarb
pushf
mov
mov
sbb
insb
push
mov
mov
js
lret
fwait
test
add
rcrl
das
nop
lea
scas
add
pop
sub
inc
add
push
ret
mov
dec
fs
push
sbb
xor
or
mov
sbb
shll
sbb
mov
inc
cltd
loopne
add
out
out
xchg
xor
int3
stos
arpl
dec
notb
jle
and
xchg
mov
xchg
push
pop
lret
push
mov
rcrb
dec
movsb
cmp
cs
sbb
icebp
out
aam
xchg
jns
adc
add
cmp
add
xor
add
mov
jg
dec
pop
cwtl
add
inc
mov
popa
inc
jno
add
xor
pop
aad
push
popf
ret
das
jg
sbb
fcoml
jbe
mov
unpckhps
adc
fidivl
dec
adc
movsl
lods
imul
test
ja
loope
mov
mov
cmpb
in
mov
jmp
ds
push
mov
push
or
mov
mov
jp
ret
sub
ficompl
add
popf
xor
xchg
lods
jno
inc
rcr
subb
pop
mov
stos
mov
mov
lock
movq
pop
fst
rclb
es
add
out
adc
outsb
inc
jmp
andb
cmp
xchg
aam
adc
mov
jns
push
jbe
push
nop
jl
ds
add
ret
and
pop
inc
add
pop
jp
and
add
mov
push
sub
shll
test
dec
fwait
sub
ss
push
lcall
and
mov
repnz
pop
test
ret
aam
pop
jbe
mov
add
sub
add
mov
push
lret
push
or
lock
fbstp
sub
ror
outsl
fiadds
push
pop
xchg
adc
xor
xchg
ret
jne
dec
cli
sub
adcb
add
cltd
out
jns
sbb
je
hlt
rolb
pushf
jb
int3
and
negb
mov
cmp
fsubs
jp
sbb
aam
arpl
je
cmpsl
inc
fsts
stos
sbb
js
out
addr16
enter
sbb
in
lods
rcrb
pop
pmaxsw
outsl
add
repnz
and
mov
adc
call
iret
adc
add
push
add
adc
ret
sub
xor
in
sahf
add
das
test
adc
cmp
sbb
jecxz
add
ds
xor
pusha
rolb
mov
xor
lea
mov
sub
clc
jns
dec
cmp
outsl
jae
sahf
xchg
add
xor
js
add
xor
dec
addb
xchg
sbb
repnz
iret
lds
in
test
scas
add
and
ret
cld
repz
ficompl
push
fimull
adc
jp
or
cmp
scas
sahf
mov
xchg
mov
sbb
and
stc
mov
mov
sbb
cmp
cmpsl
stos
dec
mov
divb
enter
add
mov
add
roll
mov
add
mov
out
xchg
add
movb
dec
in
xchg
xchg
add
stos
add
sub
sbb
jp
imull
jae
test
jl
push
xor
je
fists
add
jbe
add
sahf
mov
add
jge
frstor
pop
or
fnstenv
je
rcrb
mov
lods
add
nop
js
lret
cmp
adc
cmp
inc
test
test
xor
cltd
add
and
adc
outsl
rolb
rolb
sub
test
inc
in
xchg
imul
cmp
cli
and
out
xchg
sbb
inc
movsb
mov
cmpsb
dec
jle
rclb
mov
pop
add
xchg
repz
and
jb,pn
lret
outsl
push
lcall
dec
add
aad
lods
pop
in
jo
loopne
pop
mov
or
add
lahf
add
jmp
or
jl
mov
faddl
std
rclb
xorl
and
jg
int3
cmp
push
mov
mov
dec
jo
pop
sahf
add
rorl
and
scas
push
mov
mov
push
mov
xor
hlt
jo
lock
sbb
pop
test
in
loope
xchg
rclb
mov
in
push
pop
jg
mov
pop
es
and
pop
sub
and
nop
adc
adc
push
cmp
add
mov
inc
jae
sbb
dec
rolb
jp
lds
xchg
xchg
cmp
jle
in
sbb
adc
mov
push
jmp
stos
dec
adc
addl
inc
adc
pop
xchg
inc
sbb
sbb
sbb
mov
add
jl
add
lds
int
dec
test
addr16
xchg
adc
ret
cmp
aam
cmp
mov
fists
mov
ljmp
repnz
arpl
inc
add
inc
gs
mov
enter
mov
adc
jb
jg
add
mov
dec
add
cmp
ljmp
pop
adc
jnp
add
push
pop
daa
out
iret
in
rclb
insl
lret
sub
jo
push
nop
in
or
sbb
push
add
push
cli
xor
pop
mov
cld
pop
and
in
push
arpl
sarl
xchg
sub
mov
push
lds
or
aaa
mov
jo
push
sub
in
imul
add
and
xchg
fwait
jecxz
add
dec
or
pushf
and
inc
jmp
loopne
cmpsb
pop
adc
enter
enter
push
inc
mov
sbb
cmpb
arpl
pop
adc
push
les
jp
cmp
push
iret
dec
and
xor
cld
mov
or
lret
lahf
enter
addb
sub
pushf
loope
stos
out
cltd
fs
daa
push
cmp
andl
dec
jp
adc
inc
and
cmp
cmpsl
lea
jmp
add
dec
xchg
dec
aas
insl
xchg
cwtl
cld
adc
outsl
and
add
insl
call
pop
sbb
pmulhuw
mov
push
fiadds
adc
mov
and
add
push
ret
add
jmp
adc
xchg
sub
mov
aad
imul
ds
dec
test
cmp
lahf
mov
inc
push
jp
sub
xor
xor
dec
addl
cwtl
or
outsl
add
mov
xchg
add
xor
cmp
clc
into
dec
out
gs
adc
push
push
xchg
sub
jg
pusha
loope
mov
jmp
ror
imul
adc
mov
movsb
pushf
loopne
xorl
pusha
sub
pop
inc
mov
adc
push
sbb
rclb
adc
rorl
out
push
mov
xchg
ja
imul
sbb
xchg
and
movsl
lock
mov
mov
xchg
rolb
or
cmp
jbe
mov
mov
add
sub
and
test
inc
jbe
dec
adc
fs
pusha
enter
lahf
inc
in
jo
fildl
push
xor
jecxz
inc
clc
jle
adcb
mov
aam
fmull
std
andb
or
call
and
add
pop
jg
imul
pushf
testl
cltd
test
add
out
cli
mov
pop
adc
xchg
and
add
loope
add
sub
push
sbb
insl
shlb
shll
scas
inc
pushf
cwtl
js
jp
sbb
adc
test
adcb
shll
movsl
add
xor
or
lea
nop
inc
mov
push
pop
call
loop
cmp
cltd
and
sub
add
mov
inc
adc
inc
adcb
mov
movsb
movsl
sbb
or
push
adc
lret
inc
inc
or
cmp
nop
xor
adcl
push
mov
cwtl
pop
and
pusha
inc
test
ja
mov
gs
jmp
loopne
add
popf
adc
add
mov
cmpsb
mov
jmp
inc
xchg
sahf
jecxz
sub
and
and
hlt
gs
xor
std
jmp
sbbb
push
rorl
sbb
mov
shlb
out
or
sub
jg
mov
addb
push
outsb
mov
xor
test
pusha
mov
lahf
stos
mov
pop
pop
enter
mov
or
and
mov
xor
inc
add
fcompl
pop
int
pop
out
and
dec
inc
mov
add
mov
imul
roll
sbb
lcall
addl
push
aad
pop
rorl
int3
lea
shll
in
xchg
test
and
xlat
add
out
sub
sbb
add
or
xchg
bound
sub
xor
jo
int3
addr16
nop
rclb
jns
push
arpl
adc
loope
cld
ret
xchg
lods
jle
jecxz
mov
lods
push
jle
mov
inc
scas
push
cmpsl
hlt
outsl
add
pop
stos
std
lds
cmpl
pop
lahf
sbb
xchg
mov
test
stos
in
push
mov
cmc
movsl
aaa
or
shlb
adc
add
movsb
lahf
ja
cmp
popf
push
adc
icebp
sbb
pushf
notl
addb
js
adc
jne
fwait
mov
sar
mov
aaa
sub
inc
ja
sahf
ror
sarb
scas
sub
push
ror
data16
or
andb
mov
jbe
dec
add
mov
and
push
ss
subps
add
add
int
xlat
movb
fiadds
add
jno
add
pushf
aam
xchg
das
cmp
push
daa
push
dec
mov
sbb
sbb
sbb
push
mov
rol
addr16
jmp
sub
cmp
xchg
sbb
adc
adcb
pop
js
loopne
cmp
inc
scas
xchg
adc
xchg
push
call
aam
leave
dec
fimull
mov
stc
gs
or
in
stos
ret
inc
imul
lahf
sub
add
pop
xor
test
fstl
in
and
dec
test
mov
xor
stos
inc
fwait
testl
addl
iret
repz
xchg
outsb
imul
and
stc
xor
ss
pop
add
and
pushf
mov
scas
in
cmc
loope
pop
jge
push
add
fisubl
dec
mov
mov
mov
cmp
adc
out
dec
icebp
or
jmp
inc
mov
pop
add
pop
lods
movsb
sub
mov
mov
popf
mov
outsb
sbb
xchg
add
sahf
sbb
push
test
fucom
jl
add
pop
pop
and
cld
dec
xlat
in
rcrb
movsb
jg
mov
stos
mov
shlb
pop
arpl
orb
add
pop
orb
xlat
sbb
sbb
xchg
call
jmp
push
shl
and
adc
cmc
inc
jecxz
cwtl
or
fiadds
push
les
add
sub
mulb
ret
or
sub
clc
repnz
add
int
mov
ds
add
jb
pop
add
shrl
adc
pop
dec
add
clc
fwait
push
xchg
jg
test
lods
sbb
lcall
sbb
pop
popa
cmp
aam
orb
movsl
andb
cmpsl
xchg
test
push
mov
arpl
fistpl
adcb
jo
mov
xorl
pop
rclb
add
sahf
sub
popa
sbb
loopne
cwtl
insb
adc
aaa
or
jbe
call
scas
mov
mov
cmp
push
repnz
test
xorb
xor
fs
xchg
add
out
or
in
movsl
jecxz
rcrb
pop
in
es
pop
cmpsl
xor
fstl
hlt
call
add
sub
stos
imul
bnd
xor
dec
enter
sub
subb
cmc
add
testl
lods
cltd
js
dec
xchg
or
enter
mov
mov
addb
sbb
adc
mov
push
sub
bound
dec
loopne
add
test
push
shlb
clc
sbb
test
shrb
inc
mov
jbe
sbb
stos
movsb
inc
jle
add
lret
dec
jge
fildll
mov
dec
add
jb
add
push
cltd
add
out
dec
mov
subb
jmp
test
mov
fs
sub
pop
and
iret
mov
mov
push
and
cmp
or
aas
insb
adc
jmp
dec
cmp
push
ss
mov
mov
pop
jmp
or
mov
inc
aam
sti
jecxz
dec
push
loopne
ds
push
pop
dec
pop
xor
and
inc
out
xor
in
aad
push
xor
ror
arpl
orb
scas
in
sub
push
jb
loopne
push
adc
add
and
cmpsl
xor
fwait
add
jmp
jnp
int
arpl
pop
xor
jge
pop
add
cmp
jmp
in
xor
lds
cwtl
loope
mov
cltd
ja
sub
sbb
jo
jae
mov
sub
pop
or
add
xchg
sub
lahf
ss
pushf
aas
add
mov
push
std
mov
jge
cmp
and
dec
ja
addr16
inc
ss
push
cmp
fiaddl
fadds
repnz
jne
pop
push
sub
inc
add
sbb
sarl
sub
cmp
cld
hlt
or
cmp
push
enter
jb
fistps
mov
inc
addb
dec
inc
xchg
mov
xlat
sar
push
pop
dec
sbb
add
notl
lar
clc
hlt
cmp
xor
icebp
cmp
fsub
mov
stos
xor
mov
cld
inc
shl
xchg
sbb
mov
mov
xor
pmaxsw
mov
jo
cmp
fs
dec
jnp
es
out
dec
adc
or
cmp
mov
add
add
loope
mov
jp
ljmp
adc
dec
daa
sub
cwtl
std
dec
mov
test
js
xor
mov
imulb
jo
test
rolb
mov
aad
ret
mov
add
cmp
cmp
or
jmp
mov
push
pop
aas
pop
mov
push
ret
and
mov
push
sahf
pusha
mov
add
lds
add
pop
popf
dec
mov
sbb
xlat
rclb
repnz
enter
inc
mov
aas
test
jns
popf
sahf
adcl
cmc
push
jno
add
cwtl
inc
je
push
stc
add
cmpb
mov
add
xchg
add
push
push
lcall
sub
cmp
or
xchg
sbb
inc
inc
scas
inc
add
inc
mov
pop
push
loope
mov
push
pop
lahf
imul
xor
das
jecxz
xor
dec
lret
mov
xchg
add
and
push
mov
clc
in
outsb
rorb
ja
mov
jl
mov
out
push
mov
in
fildl
push
fcompl
adcl
adc
or
add
mov
xor
ss
inc
jns
add
cmp
sbb
pop
push
jbe
xor
add
int3
js
xchg
or
enter
add
cmp
out
cmp
enter
mov
fwait
scas
add
nop
jg
cmpsb
push
lret
pop
sub
mov
mov
add
fistpl
adc
int
outsb
stc
sti
loop
mov
inc
xor
add
es
adc
dec
fdivl
lods
jno
push
or
add
mov
mov
in
inc
into
sub
fisttpll
outsl
ds
out
xorb
ret
pop
add
push
xchg
push
add
inc
ljmp
add
pop
mov
add
pop
cs
xchg
rclb
xor
mov
and
ret
lock
adc
ja
mov
add
add
pushf
movl
ds
mov
push
jge
xchg
cmp
mov
cwtl
dec
imul
add
dec
rol
out
rcrb
xchg
aam
xchg
jbe
mov
add
aaa
je
insb
inc
testl
mov
movsb
filds
mulb
sub
scas
inc
xor
cld
xor
add
adc
shl
popf
dec
mov
test
or
jno
xchg
cmp
adc
sub
inc
add
pushf
insl
cwtl
add
dec
cmp
add
lock
fucomi
lret
sub
adc
mov
movaps
call
ss
movsb
lret
push
popf
enter
add
std
shrb
push
jecxz
fcompl
xor
inc
out
jo
xor
cmp
aad
shll
in
xor
iret
pop
mov
aas
or
jecxz
add
cli
add
and
int
push
add
cmp
int3
cmpsl
jbe
pop
jl
in
push
leave
mov
mov
shrl
lods
jno
jmp
jo
lahf
fsts
stos
inc
rol
mov
add
pusha
sub
sbb
sbb
jle
dec
std
add
fisttpl
stos
idivb
dec
dec
enter
sub
mov
inc
rcrl
inc
add
xor
xor
ds
mov
call
xor
dec
fisubl
pop
cmp
mov
int
and
arpl
pop
mov
xlat
insb
repz
ror
pop
loop
add
cld
leave
and
rcrb
xchg
add
cs
inc
jno
pop
pop
test
stc
add
scas
test
cmp
push
add
mov
push
inc
fimuls
jmp
sub
xlat
xor
and
sub
sbb
outsb
std
scas
add
sbb
cmp
sahf
xor
cmp
inc
cmpsl
sub
rorb
add
xchg
mov
inc
sub
pushf
lock
out
mov
pop
shrb
jne
add
adc
cld
mov
ljmp
cltd
popf
pusha
shrb
push
sahf
adc
cmpsl
jg
push
cmp
scas
adc
lret
add
sbb
add
repz
adc
clc
les
jns
lds
pusha
rcr
loope
push
cmp
push
pusha
add
jmp
out
mov
and
add
sbb
ret
mov
dec
push
mov
stc
pop
mov
cmp
aad
pop
add
mov
add
fcomps
addl
mov
loopne
cmp
cmp
fsubrl
push
jo
mov
xor
mov
pop
mov
addb
ja
ret
fadds
inc
xchg
sub
add
xor
ret
jmp
fs
mov
xchg
adc
mov
add
sbb
inc
or
sti
mov
dec
push
clc
jg
pop
cmp
neg
movsl
int
add
inc
sub
mov
push
dec
fnsetpm(287
pop
add
lods
adc
int3
lods
adc
in
add
std
pop
push
mov
pop
repnz
xlat
paddb
pushf
mov
add
fimull
xor
mov
add
adc
add
jle
add
repz
mov
pop
adc
shr
pusha
inc
add
sahf
roll
xchg
sbb
jecxz
test
data16
add
outsb
fbstp
aas
imul
dec
push
cmp
loopne
and
mov
add
in
and
ret
push
arpl
push
stos
test
cmpsb
cmp
fwait
adc
pop
ss
es
addr16
add
xor
xchg
pop
mov
push
add
adc
stos
dec
add
add
ret
sub
dec
aas
or
sbb
fcmovbe
mov
add
add
stc
xchg
aaa
mov
xor
sbb
adc
dec
faddl
push
xorb
adc
xchg
xor
xlat
jae
aam
xor
mov
mov
mov
add
stos
inc
push
sub
xor
lret
cs
sbb
or
mov
popf
bound
shlb
mov
or
jmp
add
fs
cmove
dec
das
push
rcll
insl
dec
or
push
sahf
vpmadd52luq
inc
jnp
and
or
cmpsb
adc
pushf
mov
test
cmp
insl
push
testb
rolb
aad
fisttps
clc
push
cmp
out
ds
lds
insb
fimuls
pushf
xchg
xchg
adc
out
add
xchg
pop
iret
mov
imul
push
ja
lds
test
pop
mov
mov
into
test
and
add
loopne
inc
add
js
imul
and
add
sbb
scas
enter
leave
xchg
cmpsl
pop
movsl
inc
ret
scas
test
arpl
push
sub
inc
hlt
shrb
ljmp
mov
sub
inc
sub
push
int3
sub
movsl
xchg
nop
xor
fucomip
add
arpl
dec
sub
or
mov
cmp
inc
fiadds
nop
adc
xor
lcall
fsub
pop
nop
dec
or
xor
mov
sub
jae
mov
mov
rcrl
xor
std
or
sbb
lcall
mov
xor
fwait
jae
fsubs
pop
xor
cli
adc
dec
add
arpl
mov
lret
jns
pop
imul
mov
or
mov
out
orb
xchg
jo
sub
in
hlt
add
je
lea
ljmp
lds
mov
add
xchg
rorl
imul
cmp
push
ljmp
nop
add
add
pop
sti
mov
xor
inc
js
sarb
add
movsb
ss
inc
test
jecxz
add
iret
popf
arpl
add
scas
rclb
push
jno
add
cltd
add
leave
add
cwtl
rorb
add
dec
mov
mov
jl
call
push
or
daa
fcmovnbe
add
sti
push
sarb
aas
pusha
sub
cmp
out
cmp
add
push
inc
xchg
out
pop
jbe
add
test
mov
xor
or
or
lock
outsl
mov
or
subb
ret
test
lds
outsb
sbb
out
xchg
push
mov
add
cmc
jne
ljmp
insb
sbb
push
jg
nop
cwtl
jno
jo
lahf
out
stos
push
dec
shrb
or
out
std
add
icebp
sub
leave
xchg
inc
es
sub
add
js
cmp
xchg
cli
and
cmp
mov
add
sub
cmp
out
enter
shlb
jmp
add
ret
out
adc
add
faddp
stos
add
in
add
mov
mov
xchg
mov
pop
test
je
pop
adc
movsl
pushf
rorb
repz
lahf
movsb
imul
sbb
das
pop
mulb
pshufw
mov
out
or
out
pop
cmp
jnp
mov
daa
lret
mov
inc
lock
out
add
and
fsub
gs
sub
push
ret
faddl
and
and
push
sbbl
xorb
pop
repz
pop
and
add
pop
ret
ret
ja
add
ljmp
rcr
fwait
mov
or
push
scas
lock
mov
fs
add
push
test
add
and
and
add
les
cmpsb
add
notl
or
push
fld
imul
test
add
mov
icebp
arpl
add
adc
sbb
subb
fs
add
cmpsb
mov
aad
cli
push
push
add
mov
inc
adc
mov
xor
pop
inc
inc
add
in
mov
adc
in
xchg
xor
push
out
sti
or
add
mov
stos
or
pop
or
or
sbb
push
pop
jmp
xchg
hlt
mov
xchg
push
jbe
sbb
mov
cmp
jb
call
out
cmp
mov
mov
out
ljmp
mov
inc
movsl
jo
cmp
cvtsd2ss
shlb
mov
xchg
popf
cltd
loopne
in
pusha
sub
jbe
sbb
pop
mov
push
mov
xchg
adc
fisttpl
cmpl
rep
xor
inc
cmp
je
popa
test
push
rorl
cli
stos
ret
pop
mov
dec
add
xchg
mov
mov
jnp
mov
dec
xor
cmp
and
jmp
jns
add
adc
mov
push
sbb
xlat
psrad
cwtl
adc
add
cmp
cwtl
pop
lods
or
dec
rcrb
cmp
add
adc
mov
les
mov
adc
sbb
or
xchg
out
add
negl
sub
or
jmp
push
sub
push
or
mov
incb
outsl
mov
iret
mov
xchg
add
jbe
and
shlb
ja
cmpsl
ficompl
mov
add
inc
lods
cmc
enter
icebp
add
inc
jp
es
ss
jno
aad
ret
xchg
add
rorl
push
in
and
lret
xor
mov
add
mov
sub
inc
add
adc
fbstp
jl
les
hlt
or
sbb
dec
inc
dec
add
jge
pop
push
cli
pop
add
stos
and
jecxz
dec
hlt
ret
cmp
out
add
arpl
icebp
into
inc
add
push
ret
gs
add
jmp
das
add
lcall
repnz
jne
cltd
xchg
test
cs
enter
xlat
adc
repz
pusha
sub
pusha
aas
pop
call
pop
mov
cmp
add
repnz
hlt
loop
add
aad
adc
and
out
lds
clc
in
ja
mov
cmp
cwtl
jmp
cmp
inc
call
andl
pop
adc
rcrb
subb
jp
addr16
in
add
push
out
repz
pop
mov
adc
js
jo
xchg
mov
and
mov
daa
jecxz
add
addr16
std
fst
adc
sbb
insb
popf
repz
and
push
ret
fldl
dec
mov
orb
push
les
xchg
lock
fiaddl
sub
cmp
or
or
lret
pop
add
cli
es
add
nop
dec
pop
les
cmc
xor
pop
sbb
std
dec
cmp
repz
xchg
inc
sarb
arpl
enter
add
sub
mov
movsb
cmp
data16
jmp
mov
lea
mov
push
add
jo
cmp
js
std
fdivs
mov
add
sub
add
xchg
add
inc
jno
fs
add
cmp
push
xor
lea
cmpsb
add
test
es
add
rorb
addr16
stc
mov
call
add
fwait
sti
das
add
cmp
pop
dec
test
add
int
mov
push
imul
mov
jae
mov
pop
in
fwait
add
sbb
add
mov
nop
add
push
cltd
and
dec
in
xor
add
sub
and
push
inc
xchg
mov
aad
push
fists
mov
push
adc
dec
movlps
lret
sbbb
std
int
sbb
inc
aad
inc
xchg
cmpsl
sub
adc
pop
adc
cmp
and
xor
xchg
pop
in
addb
inc
sbb
sub
arpl
mov
dec
mov
cmp
mov
shll
jnp
adcb
call
mov
add
add
out
addb
enter
push
hlt
dec
add
dec
cli
cmp
movups
sbbl
mov
push
add
sub
aam
call
popf
inc
cld
or
fwait
inc
lods
loopne
vmread
add
mov
mov
mov
rcl
pop
stos
jmp
je
loopne
lods
xchg
ret
enter
mov
sub
mov
add
daa
in
mov
lds
sub
cmp
pusha
add
gs
add
or
jge
jg
sub
add
in
sbb
add
lods
dec
push
adc
fnstenv
mov
js,pt
add
adc
jmp
pusha
jno
out
cli
mov
in
sbb
inc
fadd
mov
sub
jp
push
inc
and
jb
out
and
mov
cmpl
hlt
sbb
iret
imul
gs
lock
pop
mov
rorb
icebp
jmp
imul
mov
sbb
xor
mov
arpl
cmp
fistps
jo
sti
cmp
and
dec
in
mov
or
xchg
mov
push
adc
or
lock
cmp
adc
sbb
mov
pop
xchg
cmp
add
adc
jo
mov
jle
bound
pop
cld
jecxz
add
movsl
inc
inc
mov
mov
xor
out
xor
test
lock
call
xor
push
cwtl
loopne
sub
xlat
cmp
add
sbb
int
mov
rcl
xchg
sbb
cmp
fnstcw
add
pop
test
ja
dec
cmp
adcb
mov
and
and
push
nop
aad
imul
mov
xor
dec
int
fcoms
sbb
mov
or
aam
lock
ret
push
dec
mov
mov
or
adc
sub
cmp
stos
loopne
arpl
shlb
dec
fwait
mov
pop
jnp
test
or
and
mov
mov
pop
xor
mov
and
addl
mov
fisttps
cmp
subl
call
push
je
dec
imul
add
mov
filds
jle
add
pop
scas
rorb
cmpsb
js
pop
dec
cmp
repnz
and
xchg
stos
add
mov
push
insl
stc
lock
xchg
pop
cmp
sbb
xchg
mov
add
push
ret
test
add
dec
dec
lock
add
mov
inc
add
in
fimull
out
add
jg
testl
and
call
xchg
out
inc
idiv
push
cmp
xor
add
or
inc
sbb
cmp
fstp
push
xchg
pop
leave
and
rcrb
ja
shlb
adc
pop
lods
mov
cmp
das
or
in
jmp
push
loopne
sub
call
bound
dec
add
pop
pop
dec
decb
jbe
add
mov
mov
sbb
cmp
push
cmp
or
out
and
psubd
push
pop
mov
jp
shlb
sarl
cmp
push
mov
mov
rcrb
dec
lret
cmpb
addl
pop
push
shlb
mov
xchg
adcl
popa
popl
nop
jg
out
and
rdmsr
cmpsb
subb
xchg
or
push
or
popa
aam
lods
enter
pop
test
outsb
sbb
xor
enter
xor
lcall
das
ret
add
cmp
mov
add
sbb
gs
adc
or
and
pop
xor
test
loopne
aad
loopne
jmp
test
add
inc
mov
pop
add
mov
jns
sbb
adc
insb
jb
popa
fsubrl
inc
or
jno
movsb
dec
push
xor
add
add
or
pop
stc
or
cmp
jne
int3
pop
loopne
inc
adc
push
jns
adc
divb
or
rorl
jbe
inc
test
xor
sub
cmp
fld
xchg
mov
dec
orb
cmp
sbb
cmp
mov
js
push
mov
out
ss
aas
test
jmp
inc
lds
out
push
dec
imul
jp
mov
dec
dec
push
mov
sub
push
movsb
xor
push
pop
in
jbe
jecxz
add
cmp
or
add
clc
lret
mov
mov
mov
inc
hlt
mov
sbbb
stos
jecxz
out
xchg
cmpsl
jp
scas
mov
add
into
mov
add
push
mov
or
pop
mov
mov
lods
sbb
mov
and
stos
xor
cmp
add
pop
or
sub
xor
inc
mov
jne
rcrl
or
sbb
hlt
jo
and
mov
inc
cmp
adc
addb
add
lcall
js
xchg
and
mov
pop
adc
push
movsb
ljmp
testb
mov
mov
xorb
cmp
push
movsl
cld
xor
add
ds
cmp
rcl
add
mov
add
cmp
jo
jg
enter
xor
or
leave
imul
add
popf
adc
cmp
subb
fld
outsb
bound
fidivrs
imul
add
adc
stc
jecxz
add
test
push
mov
sbb
repz
dec
xchg
cmp
arpl
push
cli
mov
test
add
or
pusha
lods
cwtl
out
loope
mov
or
xchg
push
rorb
aam
lahf
fsub
in
mov
xor
lods
in
xor
dec
in
jl
push
sbb
inc
cmc
add
and
mov
test
adc
cmpsb
out
mov
inc
stos
ret
cmp
fnstenv
out
cmp
mov
add
xchg
cmpsb
xchg
subl
add
test
sarb
sbb
test
pop
cmp
mov
cltd
push
popf
pop
insl
idivl
sbb
xor
dec
dec
loop
add
leave
pop
sub
aas
inc
lea
add
pop
int3
addl
add
jnp
lret
ja
inc
mov
inc
sbb
mov
add
pcmpgtd
out
pop
lret
add
add
cmpsb
pop
je
pop
aas
ss
mov
loopne
rclb
imul
add
or
ret
les
push
mov
mov
jo
jne
or
inc
ficoms
test
add
mov
sbb
push
stos
jmp
pop
divl
add
mov
and
js
cmp
jns
or
push
or
sahf
pushf
mov
cltd
shll
in
mov
jmp
shl
mov
pusha
or
adc
xor
inc
jle
sar
push
sub
push
popa
or
dec
add
mov
and
enter
jl
cmp
leave
add
xor
add
into
inc
xchg
cltd
lods
aam
add
xor
hlt
ret
push
test
xor
stos
mov
cmp
mov
test
jne
mov
out
clc
xchg
jb
cmpsl
add
cmp
pop
out
bnd
mov
cwtl
xor
daa
mov
sbb
movsl
test
addr16
ss
pop
arpl
cmp
mov
mov
pushf
sbb
add
ret
cmpb
inc
mov
jno
shll
ficoms
call
test
imul
mov
cwtl
jo
mov
push
dec
mov
ds
call
std
es
xchg
add
xchg
out
xorl
fs
and
inc
inc
pop
or
push
nop
sub
or
loopne
adc
mov
or
js
lret
add
xor
rcrb
pop
adc
jbe
push
add
mov
inc
aad
pop
xchg
or
mov
mov
add
jbe
rolb
test
insl
sbb
aaa
out
and
ja
add
data16
push
out
fsubl
shlb
aaa
add
mov
mov
xor
add
mov
ja
into
jnp
mov
test
cmp
xor
call
pop
mov
add
cwtl
andl
cmp
cmpsl
in
scas
add
pop
mov
dec
cwtl
xor
fldt
mov
and
and
mov
cmp
mov
dec
or
jl
rcrb
sub
fadds
sbb
jg
push
cli
or
mov
jnp
mov
sbb
inc
lods
loope
adc
fs
dec
cmp
cmp
in
xor
push
push
insb
into
sbbb
xor
sub
les
adc
fiadds
push
loop
mov
loopne
mov
adc
shll
mov
add
mov
jbe
add
rolb
adc
add
fiadds
test
xor
loope
out
add
pop
mov
dec
ss
add
int
lahf
xor
mov
loopne
mov
gs
aas
sbb
xor
pop
mov
add
lds
sbb
xor
add
push
xor
pop
or
loopne
les
inc
std
pop
lea
xchg
add
cwtl
jle
dec
addl
or
loopne
or
add
cs
adc
pop
test
subl
out
loop
movsl
rcrb
gs
fstps
mov
inc
and
cwtl
je
and
jnp
mov
push
or
cmp
jno
fwait
cmp
adc
sar
lahf
stos
fadds
hlt
js
mov
inc
dec
insl
je
sbb
sbb
cmp
add
mov
movsl
add
inc
hlt
sub
rcll
scas
cmp
add
or
lds
xlat
sub
lahf
dec
add
test
jo
sub
xlat
test
add
mov
adcl
and
mov
pusha
dec
clc
pop
xor
pop
stos
push
inc
dec
dec
dec
rolb
xchg
shl
enter
add
test
pusha
cld
mov
stos
out
xchg
xor
arpl
mov
ret
test
push
xchg
and
sbb
sbb
and
push
stos
imul
adc
int3
sub
lea
out
xor
data16
xor
and
out
jns
push
aam
mov
add
rcrb
and
sub
outsl
xor
xor
mov
mov
jne
xchg
xor
stc
or
clc
xor
mov
sub
cmp
add
idiv
sbb
dec
cmp
lret
subl
adc
movsbl
xchg
inc
or
idiv
add
dec
push
mov
movsb
xor
and
push
stc
gs
inc
and
add
inc
lahf
lcall
or
enter
push
es
xor
pushf
add
enter
add
jae
dec
xorps
pop
pop
xor
lds
shlb
jp
out
xor
add
fdivrp
or
add
sbb
pop
adcb
outsb
je
adc
jno
decl
cmpsb
sub
cmp
fldl
sub
inc
xchg
or
pop
push
sbb
add
pop
in
outsl
mov
add
int3
inc
xchg
das
cmpsb
cmc
pop
add
and
out
jecxz
mov
add
insb
icebp
xor
sbb
pop
daa
imul
add
sbb
cmp
rolb
into
jp
inc
fxch
xor
clc
xor
movsl
inc
das
loope
or
sub
mov
enter
pusha
pop
rcll
rolb
push
movsl
xchg
jecxz
and
subl
add
incl
ds
and
and
pop
xchg
in
and
mov
nop
scas
mov
dec
cmpl
jnp
xchg
lea
mov
fldt
add
lock
sbb
push
add
push
pop
in
add
into
test
faddl
pop
inc
mov
or
jns
clc
mov
jnp
and
xchg
adc
push
pop
lea
add
xchg
ret
cmpsl
add
mov
dec
aad
wrmsr
cwtl
xor
pop
mov
pop
sub
jae
add
xchg
fnsave
add
push
pop
call
add
sbb
xor
lock
aas
mov
push
xchg
sbbl
sbb
sub
add
loop
xlat
rorl
xor
clc
push
add
mov
daa
into
repz
mov
inc
inc
test
sbb
and
sub
push
sbb
nop
lods
pop
arpl
sub
shlb
push
dec
int3
dec
add
test
and
cmpsb
pop
rcrl
loope
filds
mov
xchg
dec
and
and
jns
push
fisttpll
cli
jns
push
and
xorl
out
add
shlb
pop
push
add
loopne
jo
adc
inc
lahf
nop
or
jae
mov
pusha
out
loope
js
add
pop
insl
mov
stos
ljmp
fsubs
cmp
cli
adc
inc
dec
push
xchg
das
notb
outsl
and
add
adc
push
stos
pusha
jae
and
pop
fcompl
sbb
sub
loopne
adc
jb
xchg
inc
push
add
xchg
pop
rcr
add
mov
push
cs
xor
or
iret
ja
popa
mul
xor
pop
mov
add
mov
xchg
add
jne
pop
add
mov
sbb
pop
cmpsl
stc
je
rcl
push
push
pop
add
dec
add
mov
add
or
fdivl
in
pusha
jno
outsb
dec
xchg
add
push
or
sbb
jmp
or
mov
out
add
or
adc
bound
ss
jp
and
push
mov
cmpb
addl
xor
jge
test
or
pop
mov
cltd
add
jmp
loope
or
pusha
dec
or
arpl
sbb
add
out
sub
je
mov
jmp
mov
aaa
fstpt
adc
movsb
xor
jecxz
jl
les
and
cltd
pop
and
daa
sub
mov
push
jl
jns
imul
push
or
inc
cmp
push
inc
push
popf
scas
mov
mov
inc
test
push
jno
and
lock
fst
inc
jge
sbb
mov
mov
xor
mov
fisttps
outsl
inc
jns
dec
jg
sub
sbb
mov
sbb
jecxz
cwtl
jg
cltd
pop
cmp
adc
push
insb
add
pop
cmp
jae
add
popf
rorl
int3
lock
adc
jnp
mov
popa
xchg
shll
outsl
shrb
or
inc
add
cmp
pop
movsl
sbb
add
cmp
xchg
mov
jge
xchg
jno
jo
jae
sub
iret
pop
repnz
and
sti
sahf
add
addr16
push
push
add
sarb
int3
insl
insb
add
clc
mov
ljmp
pop
xchg
in
mov
test
fs
sti
mov
jno
jo
das
pop
or
inc
sbb
or
jl
sbb
test
je
inc
adc
pop
xorb
sub
sahf
outsb
xchg
and
xor
mov
jb
mov
add
mov
push
nop
push
jae
mov
push
adc
add
inc
adc
push
rorb
add
fisttpl
insl
add
xor
cmp
adc
xor
std
cmpsb
push
xlat
add
rcrl
call
insb
or
arpl
mov
leave
sti
mov
adc
and
mov
mov
or
cmp
cwtl
mov
or
ds
xor
xor
add
jae
inc
cmp
popf
fxch
mov
pop
xor
mov
shlb
jecxz
ss
iret
inc
test
add
jl
xor
cltd
inc
lret
dec
add
sarl
movsl
xor
pop
rcrb
in
stos
roll
pusha
dec
adc
shrb
pop
lahf
loop
push
dec
and
dec
cwtl
add
jle
fwait
dec
push
mov
aas
cmp
xchg
pop
pusha
jne
adcb
andb
sbb
int
mov
add
scas
adc
shlb
testb
pusha
or
xchg
and
jmp
push
xor
cmp
arpl
or
push
push
fcoml
dec
popf
enter
inc
js
mov
add
in
scas
out
ret
dec
dec
mov
xor
and
xor
push
dec
xchg
ss
sahf
int3
xorb
insb
subb
add
sarl
out
pop
insb
xor
add
cmpsb
mov
xchg
add
pusha
imul
push
sahf
push
dec
pop
push
loope
js
add
mov
mov
mov
loopne
fmull
sbb
or
adc
rcrl
in
pop
add
lock
add
lahf
jecxz
movsl
stos
movsb
ljmp
cli
cwtl
loopne
ret
repnz
jb
gs
push
and
mov
mov
jo
pand
cmc
mov
xorb
mov
aad
inc
loopne
outsl
stc
repz
mov
cmpsb
mov
push
mov
mov
or
cwtl
shl
inc
lret
cmp
insb
xchg
mov
add
xor
xchg
out
dec
test
sarl
pop
or
out
jae
repnz
scas
clc
inc
das
aam
add
xorb
dec
cmp
add
fucomip
fdivl
enter
pop
jo
push
jb
sbb
imull
fiaddl
rclb
test
adcl
jge
es
or
test
add
and
sbb
rolb
hlt
jne
add
iret
fpatan
mov
mov
lock
cs
cmpb
jg
cmp
das
jmp
mov
int
pop
cli
shll
movb
add
mov
and
orl
inc
ljmp
je
mov
nop
mov
xor
xlat
mov
test
stc
push
mov
pop
fnstcw
in
je
pop
out
lods
xor
cmp
xchg
add
sti
push
xchg
mov
push
push
or
stc
leave
dec
push
cli
sti
cmp
jno
inc
aam
ja
mov
cwtl
inc
loopne
mov
pushf
add
icebp
mov
andl
lret
aas
sub
mov
pop
pushf
or
add
bound
lcall
aaa
jmp
pop
xchg
sub
incl
lods
fcomps
mov
mov
cltd
fldcw
or
mov
pop
sbb
inc
pop
gs
sub
cmpsb
dec
nop
int3
xchg
add
dec
add
jecxz
sub
jo
into
cmp
out
sub
imul
aad
push
dec
test
fsubrs
cs
inc
aas
and
sub
mov
das
xlat
ror
pop
cli
adcb
or
xor
mov
add
mov
inc
adc
add
add
and
nop
push
add
cwtl
mov
push
push
or
ljmp
xchg
xor
adc
scas
popa
add
xor
imul
and
cmc
add
lret
mov
aam
fsubr
mov
popa
adc
popf
jo
sarb
pop
ja
rcrl
aaa
add
pop
icebp
in
mov
dec
setne
add
ret
lock
icebp
adc
mov
in
push
dec
or
test
mov
jmp
loop
test
cmp
pop
add
bound
addb
cmpsl
cltd
cld
or
sub
pusha
cmpb
loope
cli
ret
stos
movl
ds
mov
rclb
add
inc
cld
out
cmpb
cmc
xor
add
cwtl
xchg
into
clc
mov
xor
xor
pushf
pop
je
push
lahf
add
jge
loope
mov
std
pushl
dec
arpl
pop
mov
je
int
sub
out
jo
je
rorb
jp
add
nop
mov
inc
adc
mov
xor
test
stc
out
xchg
lods
xchg
inc
push
clc
das
mov
nop
insb
repnz
jbe
ss
cmpsb
sbb
faddp
or
outsl
stos
inc
mov
adc
jbe
enter
cmp
hlt
add
push
cmp
inc
cmp
cmpsb
mov
andl
cld
fistl
lret
pop
in
jmp
add
pop
push
addl
idiv
stc
pusha
cmc
adc
iret
pop
mov
mov
movsb
movsl
int
sub
loope
popa
cmp
test
push
and
add
xor
lea
add
pop
adc
push
nop
call
hlt
xchg
mov
adc
cmp
mov
dec
cmp
gs
movzbl
mov
repnz
xchg
movsb
add
insb
popa
mov
jmp
sarb
call
lods
movsl
mov
mov
add
dec
imul
outsb
mov
lock
imul
jb
mov
jbe
ljmp
mov
icebp
sub
jae
mov
leave
movb
or
mov
shrl
or
nop
js
adc
or
into
out
add
mull
fstpt
xchg
fsts
inc
mov
aam
mov
pusha
nop
ficoml
sbb
cli
test
pusha
jbe
mov
push
push
loopne
or
add
leave
scas
cli
and
sahf
pop
sbb
jo
lods
or
xchg
rclb
add
xchg
jbe
dec
test
jo
add
xor
insb
sub
imul
nop
cwtl
out
cmp
stc
add
mov
adc
lahf
xchg
movsl
nop
fadds
pop
loope
sbb
scas
imul
cmpb
add
fstsw
add
jmp
test
sti
test
dec
add
icebp
push
sarb
leave
mov
xorl
pop
leave
imul
data16
imul
sub
xor
cmp
mov
int3
mov
jmp
sub
or
or
insb
and
push
sbb
aam
add
in
pop
and
loopne
adc
xor
xor
fisubs
ss
add
lret
xor
ror
icebp
dec
inc
adc
xchg
xor
mov
cmpsb
fwait
cmp
cmp
mov
cs
rcrb
adc
sbb
sbb
aad
add
cmovs
fs
add
cltd
mov
xchg
sbb
loope
xor
or
addr16
or
lsl
sbb
shlb
cli
and
cmp
sbb
push
add
mov
out
sbb
dec
and
add
mov
pop
sahf
ja
and
xchg
popa
sub
cmpsb
lock
add
cli
or
sbb
js
mov
xchg
cmpb
xor
or
pop
repz
xchg
loope
sub
mov
and
mov
or
jnp
insl
pusha
outsb
add
push
iret
jbe
add
test
ficomps
and
or
lret
std
repz
lds
mov
fcmovb
popa
xor
push
setns
outsl
pusha
mov
mov
out
pop
adc
inc
outsl
mov
sub
call
mov
mov
clc
mov
pusha
in
nop
cld
fcomi
add
jnp
mov
pop
movsb
orl
jb
push
lret
mov
mov
sbb
mov
call
inc
mov
fdecstp
test
into
add
fnstsw
pop
fcmovbe
repnz
pop
lea
divb
movsb
icebp
jmp
pop
cmp
mov
or
pusha
movsb
sahf
lods
out
rolb
inc
shl
mov
xor
xchg
mov
add
pop
mov
fwait
mov
adc
dec
loopne
dec
xchg
out
scas
cld
add
sbb
clc
jbe
add
loopne
xor
jg
jae
jo
xor
sarb
inc
int3
movsb
add
cwtl
nop
test
add
fistpll
cmp
inc
cwtl
adc
mov
out
xchg
pop
sbb
jp
sub
pop
rorb
enter
lock
cmp
lods
enter
cld
and
je
stos
mov
add
mov
bound
fnsave
push
std
pusha
fiaddl
mov
insb
add
adc
outsl
and
or
loopne
rolb
nop
adc
mov
push
adc
and
lods
mov
inc
mov
dec
call
inc
je
sarb
lds
in
xchg
aaa
sbb
cli
and
sahf
jo
jns
add
add
add
fs
push
add
movb
add
cmp
repnz
fstps
fnop
mov
ret
int3
ficoml
nop
mov
ljmp
outsb
lahf
xor
pop
pop
sbb
hlt
add
xchg
mov
and
inc
incl
or
cmp
insb
mov
je
addr16
pop
out
test
xor
add
cmp
in
jge
shr
add
pushf
inc
setg
dec
bound
fsubs
andl
ret
jge
jb
push
sbb
repz
loope
cmpsb
add
inc
jecxz
xor
test
fistpl
dec
mov
dec
inc
or
adc
orl
std
ficompl
lea
mov
adc
stos
mov
jbe
jmp
sbb
shll
leave
cs
in
jp
sbb
fbld
cld
enter
call
cld
xchg
jmp
mov
inc
or
jae
jo
add
sub
lahf
mov
or
push
add
mov
hlt
add
pop
mov
mov
and
scas
or
rclb
es
push
adc
xor
sarl
add
js
cli
aad
mov
cld
loope
stc
and
repz
mov
test
mov
xor
mov
loope
xor
fimull
mov
outsl
sbb
mov
push
js
lock
add
and
add
sub
push
cmp
pop
ljmp
std
inc
sbb
into
in
and
daa
mov
lods
pop
movaps
push
jge
cli
cwtl
add
push
std
stc
cmc
sbb
sbb
xor
in
sub
add
dec
bswap
roll
or
mov
add
aas
andb
mov
push
push
dec
sbb
mov
movsb
test
mov
and
xor
jbe
call
imul
xor
mov
pop
xchg
icebp
int3
pop
mov
xor
imul
jecxz
pusha
dec
cmpl
fs
push
add
lea
or
fwait
xor
out
add
dec
jbe
icebp
push
testl
loopne
or
mov
mov
add
or
add
add
pop
ret
jnp
es
lcall
push
rcrb
fnstsw
add
int
push
aam
fimull
movsb
xorb
xchg
pop
pop
pop
mov
mov
inc
dec
aaa
ja
cmp
lods
cmpl
add
mov
dec
in
pop
sbb
cmp
pop
test
cmp
cwtl
fsubs
scas
jae
mov
loope
cmpsb
dec
nop
inc
xchg
fbstp
enter
jno
add
in
push
insb
sarl
dec
incb
mov
out
pop
add
pushf
daa
movsl
mov
es
cwtl
push
jne
xor
or
dec
imul
rolb
enter
adc
xor
inc
gs
popf
pop
stc
jo
faddl
or
add
and
out
add
mov
mov
lods
xchg
mov
adc
dec
push
mov
add
into
mov
repnz
add
fsub
orl
ja
fsubrl
adc
les
adc
push
test
faddl
js
add
xchg
xchg
mov
fisubl
in
cmpsl
sbb
or
icebp
les
sarb
cmp
fs
mov
xchg
bswap
and
stc
negb
and
sub
outsb
xchg
pop
std
mov
rcll
pop
pop
std
adc
scas
mov
nop
and
add
enter
adc
fstpl
repnz
pop
js
add
or
ds
hlt
movsb
push
sub
adc
out
lcall
repnz
add
mov
clc
and
xor
inc
fimull
lods
mov
add
mov
into
push
mov
pop
sbb
ja
add
out
mov
lea
inc
xorb
das
and
shlb
cmpsl
adc
dec
add
cmpsl
into
icebp
ss
push
adc
mov
mov
pop
dec
xchg
aad
push
adc
mov
jae
add
popa
inc
movsb
push
mov
or
xchg
mov
cmpb
movsb
lods
jo
add
ficoml
daa
fists
addr16
sbb
jmp
repnz
dec
icebp
and
add
sbb
movsl
cli
or
adc
das
mov
adc
push
and
sbb
bndstx
sbb
aaa
xchg
lea
mov
push
add
mov
add
lret
mov
lcall
or
sub
ljmp
out
pop
mov
xor
hlt
mov
pop
adc
xchg
adc
push
mov
sbb
or
and
lea
inc
jbe
push
push
int
fs
xor
lds
push
idivl
adc
push
in
orl
les
dec
roll
pop
add
mov
aam
rclb
cwtl
adc
add
pop
add
mov
popa
add
push
hlt
pusha
and
leave
rolb
mov
jne
sbb
sahf
adc
sub
xor
xchg
lcall
xchg
dec
add
jbe
mov
pop
cmp
jo
aam
paddusb
or
fwait
imul
or
jmp
pusha
push
cmp
and
daa
sbb
adc
xchg
pop
fdivs
inc
je
add
and
int
pop
popl
pop
str
rolb
cs
fs
push
mov
pop
add
cmp
lock
ds
mov
and
adc
cli
mov
aaa
add
inc
lcall
in
xor
addl
cmp
add
pop
mov
push
ret
ja
invd
push
xchg
clc
int
sbb
aad
call
pop
jle
mov
jne
loope
mov
adc
addr16
faddl
stc
sub
mov
cwtl
add
cmpsb
xchg
data16
push
stos
mov
das
mov
pusha
leave
pusha
xor
mov
sbb
out
mov
cmp
push
inc
and
insb
mov
dec
or
adc
imul
mov
inc
inc
sbb
imul
push
pop
clc
jo
loopne
inc
mov
dec
sbb
pop
test
mov
xchg
adc
leave
adc
addl
inc
mov
shrl
and
mull
add
ljmp
add
jecxz
nop
jbe
cmpsb
mov
or
push
add
pushf
jge
adc
and
or
xor
jecxz
aad
ja
xchg
lods
mov
sub
andb
lock
xchg
jo
out
imul
adc
inc
fldcw
pop
pop
add
insl
nop
sbb
repz
lsl
enter
mov
add
xchg
lret
jo
and
mov
xchg
push
jle
pop
push
in
cltd
movzwl
jne
add
add
clc
dec
pop
ret
mov
mov
inc
adc
daa
pop
in
dec
adc
hlt
inc
add
test
add
mov
jmp
lret
push
mov
mov
mov
fnstcw
add
lods
xchg
outsb
push
ret
adc
and
jge
add
jo
inc
test
je
sub
xor
sub
int3
xor
notl
and
orl
mov
lret
arpl
sbb
movsb
ficompl
sub
outsb
clc
js
add
cmpsb
or
cltd
test
push
loopne
sbbb
adc
jmp
mov
cld
pinsrw
nop
mov
in
adc
int
xor
shll
sti
fsubs
jge
mov
iret
mov
dec
and
pop
andb
hlt
pop
mov
mov
dec
sbb
out
cmp
insb
popa
push
lods
test
cmpsb
push
repnz
pop
fidivrl
xor
icebp
les
mov
addl
daa
jne
mov
add
lock
lods
je
test
add
gs
into
pop
loopne
pop
xchg
inc
js
mov
mov
jns
and
incl
dec
push
and
mov
mov
adc
add
int3
jge
mov
push
in
inc
arpl
dec
stc
push
add
nop
fisubrl
push
cmp
push
or
popa
mov
dec
repnz
test
lods
or
cld
and
adc
pop
and
xor
add
roll
pop
rolb
in
mov
add
test
push
or
xorl
int3
cmp
fnstenv
xchg
cmp
inc
or
sbbb
mov
daa
movsl
lods
loop
pusha
push
outsl
jg
pop
push
lret
stc
hlt
mov
push
les
fdivr
leave
mov
adc
out
lods
movl
or
sbb
jecxz
mov
dec
jg
mov
pop
and
or
mov
dec
call
add
fldl2t
das
xchg
daa
push
orl
xor
fdivl
pop
dec
clc
push
pusha
and
push
js
adc
lods
mov
jmp
sbb
aaa
stc
jmp
js
mov
bswap
xchg
xchg
or
push
imul
push
push
subb
mov
dec
fstp
xor
add
pop
das
in
mov
jmp
cmp
loop
repnz
int3
movsb
inc
mov
pop
adc
loop
pop
mov
dec
in
dec
test
jg
setl
gs
std
sahf
adc
nop
xchg
mov
movsb
add
loope
push
iret
fldcw
xor
inc
xchg
outsl
pop
jbe
xor
repz
add
test
outsb
sbb
add
dec
mov
rorl
loop
and
jmp
shlb
enter
daa
xchg
decb
sub
add
fisubrs
add
mov
push
jbe
jnp
jns
pop
test
cwtl
add
cld
fs
push
pop
jno
aas
mov
cmpb
and
jnp
sub
sti
scas
jle
test
test
jl
daa
sbb
inc
pop
in
stos
adc
adc
xor
adc
dec
add
loopne
push
cmpsl
mov
mov
push
clc
add
jo
mov
xchg
add
mov
add
clc
in
popa
aam
sub
loopne
sbb
add
sub
addb
dec
jne
ds
movsl
pop
inc
or
cmp
mov
imul
dec
lea
mov
mov
xchg
movsb
mov
xchg
pop
add
dec
add
fdivl
dec
call
xchg
imul
sub
aas
add
mov
sub
pop
data16
cwtl
push
aaa
pop
daa
shlb
xchg
enter
cmp
inc
int3
aam
js
adc
mov
enter
lds
xchg
cltd
jecxz
pop
jl
and
push
int
adc
add
xor
in
push
cld
add
sub
push
lahf
add
rorb
clts
push
and
pusha
hlt
add
push
lcall
nop
add
pop
sbb
fildl
push
xchg
ljmp
rolb
imul
out
jno
add
in
aas
test
add
movsb
hlt
add
das
add
dec
lods
fs
cwtl
xchg
sub
out
aam
fidivrl
cmpsl
repnz
lock
sub
fadd
push
xchg
push
inc
inc
scas
frstor
add
mov
movb
ret
cmc
in
pop
int3
loopne
sub
cmp
subl
jecxz
cmpb
and
in
add
jo
dec
leave
and
test
dec
adc
adc
loop
add
lcall
and
aaa
movsb
rcrb
lea
rcrl
push
js
aad
loop
negl
cmp
insl
sbb
jl
pop
hlt
pop
movsb
in
sub
sub
jne
rcrl
add
mov
inc
cwtl
in
add
out
and
out
aam
call
lods
or
rcrl
xlat
mov
in
add
push
popf
dec
cmp
add
push
xor
nop
pop
fldenv
pop
mov
pop
xchg
icebp
dec
or
repz
xchg
pop
je
or
scas
inc
mov
inc
outsl
add
push
jnp
sub
sbb
xor
cs
and
mov
stos
inc
pop
lcall
inc
push
mov
stc
push
add
sub
adc
test
sti
dec
lods
shlb
and
or
adc
cmp
lcall
add
sub
daa
or
mov
add
dec
xor
mov
sbb
push
js
in
inc
jl
sbb
jb
add
fistl
xchg
push
test
mov
or
or
bnd
push
jge
add
lret
push
xchg
or
or
dec
cmp
loope
mov
jecxz
mov
mov
and
sub
cwtl
adc
push
xor
xor
adc
aaa
orb
jg
jb
sub
movl
fadds
push
dec
add
xchg
add
pop
mov
sub
jo
cmp
clc
mov
scas
sbb
js
mov
push
flds
jbe
aam
aaa
jecxz
int
mov
add
movsb
popa
lcall
lret
xchg
add
bound
mov
push
mov
push
dec
ret
addr16
sub
adc
sahf
add
sti
bound
pop
lods
loopne
xchg
adc
lds
cwtl
pop
rorb
bound
jge
imul
cmp
xchg
cmpsl
in
lods
ret
adc
xchg
ret
frstor
pushf
scas
pop
jbe
jno
xor
cld
or
pop
stc
pop
lods
lds
mov
xchg
push
roll
inc
pop
mov
adc
add
ja
xchg
lahf
add
sar
or
and
sbb
movsb
add
cmp
and
jl
add
pop
sub
sbb
ss
test
enter
mov
sbb
and
inc
popa
cmp
sbb
jae
pop
sub
jmp
dec
clc
lds
adc
pop
ret
leave
mov
inc
xchg
andb
pop
xchg
loopne
nop
sub
adc
dec
mov
dec
xchg
and
fs
sbb
jmp
pop
out
pushf
aas
loop
add
int3
lea
xchg
ret
mov
pop
xor
cli
add
adc
push
push
lods
add
inc
in
mov
mov
pop
mov
cwtl
jo
addr16
lret
push
in
and
dec
cld
test
pop
dec
or
shll
mov
mov
adc
dec
sub
sub
out
adc
cmp
scas
jo
mov
call
imulb
rcr
inc
popa
test
jecxz
xor
xchg
scas
mov
mov
scas
push
sarb
je
push
les
iret
cwtl
adcb
xor
repz
fcompp
xor
leave
pusha
rorb
repnz
lret
or
mov
inc
add
adc
test
test
or
sbb
stos
js
add
inc
inc
lods
cmpsb
in
sbb
out
add
neg
push
inc
jno
sbb
lcall
pop
adc
fs
cltd
cmp
scas
sbb
shlb
xchg
rol
sub
std
lods
adc
add
setge
mov
orb
sub
adc
shl
sbb
pop
fdivl
pop
cmp
add
ljmp
cwtl
mov
into
ret
add
shlb
mov
cmpsl
push
imul
lcall
adc
adc
stc
aad
inc
push
jo
mov
sahf
inc
xchg
cs
or
mov
es
rorl
pop
hlt
and
fldcw
mov
ds
jbe
adc
mov
sti
push
jg
sub
sub
jbe
popf
mov
mov
lcall
mov
in
xchg
std
add
loope
iret
cmp
loopne
ret
int3
mov
fcomps
daa
out
test
inc
inc
add
push
shlb
cmpsl
jae
add
fnstcw
movsb
pop
push
loope
cmp
aam
testb
sbb
fldl
jno
shrb
test
fcomps
jge
push
pop
jbe
mov
rcrb
sahf
xorl
xchg
mov
cltd
mov
pop
or
mov
shlb
push
sbb
xor
mov
add
push
rclb
pop
aaa
dec
push
imul
pop
sbb
sahf
fucom
ror
shr
add
push
pop
mov
mov
inc
call
rclb
lds
sbb
dec
mov
inc
adcb
mov
out
mov
int
xchg
add
mov
mov
lahf
push
cli
cmp
pop
sbb
jb
and
in
xor
mov
cmp
sbb
movsb
cwtl
add
xchg
dec
movsl
pushf
jnp
ljmp
cltd
aaa
bound
pop
popa
xchg
jp
iret
test
js
rcl
leave
sub
or
jmp
xchg
call
push
jg
cmpsb
jnp
mov
jge
sbb
movsl
loop
mov
xor
jg
xlat
push
stos
dec
fadds
cmp
mov
fidivs
jle
pop
pop
or
mov
or
stc
add
add
fwait
sbb
mov
lret
lods
fisttpll
pusha
mov
ljmp
push
dec
inc
fsubrs
mov
aas
jl
xor
mov
jge
add
imul
lcall
mov
pop
jl
les
mov
call
xor
and
lock
cmove
xor
add
sbb
add
rorl
add
scas
arpl
mov
pop
jbe
iret
add
fmuls
clc
add
loope
mov
movsl
mov
push
and
je
aam
es
mov
mov
enter
jmp
fisubl
stos
and
mov
xchg
dec
add
ds
xor
ret
push
xor
pop
xchg
cmp
data16
lret
push
xor
inc
adc
add
dec
sub
add
inc
jb
movl
xchg
shr
push
ret
jge
cmpsl
or
cwtl
cmp
sarb
les
loop
or
scas
clc
jge
jne
aam
inc
cmp
push
push
pop
sbb
dec
dec
nop
cwtl
call
push
sbb
sbb
scas
xorl
sub
or
fdivrl
fstpl
popa
rol
pop
jns
into
lahf
push
add
push
mov
in
jl
fcoml
mov
adc
jg
jns
test
xor
inc
sub
fs
ret
movsb
mov
call
push
sbbl
add
out
outsl
and
add
sub
ret
inc
addl
jmp
pusha
jp
jge
testl
jns
iret
stos
and
ret
mov
fbstp
pop
inc
rcll
push
cmp
shrl
lods
rclb
add
sbb
mov
push
je
push
cmpb
and
pop
or
mov
lahf
test
nop
push
xor
cmpsb
cmp
jge
and
jbe
push
decb
iret
lods
mov
add
nop
imulb
adc
jo
jae
add
inc
xchg
lock
adc
mov
push
mov
shl
popa
mov
jge
jo
or
addr16
clc
mov
lds
dec
fs
mov
stos
pushf
adc
icebp
enter
insl
push
into
and
add
je
add
aam
or
sbb
add
mov
stc
dec
add
add
sarb
mov
fs
xchg
add
insb
pop
mov
adc
inc
cmc
xchg
jae
ja
xor
add
inc
mov
mov
shrl
imul
dec
jo
mov
sti
and
dec
push
mov
adc
jne
add
xor
mov
out
add
pop
aad
js
xchg
cmpsl
cwtl
add
pop
les
add
flds
inc
jb
xor
add
orb
movsl
andl
cwtl
push
cs
sbb
jg
xlat
push
lds
mov
and
mov
inc
jbe
pop
push
dec
dec
in
enter
lcall
fcoml
test
mov
pop
lods
and
mov
out
sub
xorb
pop
int3
dec
lret
call
dec
inc
inc
sbb
sarl
or
in
and
or
test
fadds
hlt
add
or
mov
popf
fs
fs
or
cld
inc
sbb
sub
nop
mov
lods
dec
jg
les
push
add
ja
push
adc
mov
fs
pusha
push
jns
sbb
mov
test
mov
push
mov
in
sbbb
xchg
dec
and
dec
sub
and
mov
or
push
sbb
sbb
inc
andl
add
inc
mov
cmp
inc
test
xchg
bound
dec
dec
sbb
dec
sbb
pusha
xor
and
xor
aas
mov
decb
int
in
sbb
xchg
pop
xchg
jp
je
jae
cmp
push
adc
daa
imul
pop
or
add
rcr
je
dec
cs
lock
add
cmpsl
sub
sbb
pop
inc
mov
sub
addr16
add
test
xchg
fistpll
out
or
mov
jae
add
lret
adc
nopl
les
dec
nop
mov
into
add
movsb
insw
mov
int
add
xor
insb
mov
aam
push
imul
and
lcall
inc
add
iret
jg
dec
cmp
xchg
hlt
mov
popa
or
inc
mov
frstor
repnz
sbb
mov
and
je
xchg
es
mov
add
out
pop
adc
sub
roll
mov
or
enter
sub
rorl
mov
rolb
inc
or
mov
mov
in
xlat
mov
add
iret
pusha
inc
mov
xor
xor
aam
push
cmp
dec
or
cmp
ror
xchg
inc
push
or
xchg
cmp
icebp
sbb
xor
jg
mov
sahf
mov
sub
arpl
pop
cmp
pop
lea
mov
sti
in
mov
jg
or
add
mov
adc
insb
mov
sti
rcll
and
sahf
and
pop
movsl
rcll
stc
fs
lret
sti
push
es
jo
push
jno
mov
add
into
inc
loopne
js
push
sahf
cwtl
mov
adc
aam
jne
inc
inc
pop
mov
inc
pusha
dec
test
cmp
jecxz
inc
outsl
mov
dec
into
add
rcrl
push
in
push
in
and
loopne
outsl
add
adc
cmc
sbb
or
or
xor
cld
mov
cmp
mov
scas
sub
jne
jne
add
push
inc
adc
mov
jnp
mov
mov
pop
cmp
int
and
dec
andb
or
inc
ljmp
add
lret
loopne
leave
jl
xchg
pop
pop
lods
and
rorl
jae
add
cmpsl
mov
scas
pop
push
mov
clc
sbb
sahf
int
add
popf
andl
xorb
mov
popa
add
and
mov
ja
and
push
sahf
adc
and
add
fnsave
insl
leave
shl
orl
xlat
sub
adc
add
js
sub
push
fldt
cmc
out
add
andl
repnz
je
xchg
push
cmp
outsb
dec
or
xor
nop
xor
imul
dec
mov
popf
mov
lahf
wrmsr
js
pop
inc
jge
sub
push
dec
adc
push
sbb
and
pusha
xchg
adc
xchg
enter
loope
and
xchg
push
dec
or
sub
dec
pusha
sahf
fs
jl
fmuls
push
lidtl
rorl
imul
in
mov
add
sub
push
push
call
int3
pop
mov
inc
sub
sub
add
cmpb
jne
movb
mov
push
push
push
push
call
add
mov
pop
pop
ret
push
mov
pusha
mov
mov
shr
mov
mov
jmp
xor
add
add
dec
or
jne
popa
leave
ret
