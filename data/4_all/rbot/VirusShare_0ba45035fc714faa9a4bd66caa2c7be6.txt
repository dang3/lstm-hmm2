mov
dec
xchg
ljmp
and
xchg
mov
aaa
ret
fisubl
jae
push
or
int3
xor
push
xchg
clc
arpl
xor
mov
sahf
xlat
jecxz
push
jo,pt
cld
test
ljmp
push
in
fisubs
ja
ret
shlb
fwait
dec
xlat
cmp
add
fnstenv
mov
mov
dec
mov
fucompp
sbb
push
jg
out
mov
lock
jmp
arpl
push
ss
sarl
aaa
arpl
jns
jg
popf
lock
repz
outsl
add
mov
test
mov
fadd
icebp
and
push
lock
mov
in
rcrb
cmp
xor
sub
inc
inc
int3
loope
enter
sbb
pusha
xchg
loope
mov
add
or
push
xor
fidivrs
and
dec
cmp
mov
or
sub
ret
lret
clc
or
mov
fidivl
test
pusha
daa
fcompp
scas
incb
ds
mov
and
mov
test
pusha
pop
inc
fidivl
test
pusha
sbb
and
negb
sahf
test
mov
xor
mov
mov
loopne
jo
xchg
mov
dec
or
jmp
dec
push
fiaddl
imulb
ficoml
divb
fimull
repnz
mov
cmp
xchg
dec
idiv
jg
push
push
ja
stos
mov
push
lahf
cmp
enter
mov
outsl
in
idivl
xor
pusha
adc
cwtl
pop
xor
adc
push
and
xor
and
jne
push
in
pop
outsb
mov
inc
pusha
mov
mov
push
xchg
ret
in
pandn
jbe
push
sub
push
and
add
jmp
daa
lods
fidivl
jbe
pop
mov
dec
iret
sbb
mov
das
fimuls
pop
mov
mov
cmpsl
pop
imul
adc
push
adc
das
cwtl
sbb
ja
test
adc
mov
mov
jae
add
pop
leave
push
xchg
insl
xor
imul
je
sub
enter
into
xchg
repnz
fldcw
lods
cmp
aaa
fs
adc
dec
cld
push
dec
lret
inc
dec
hlt
mov
enter
cld
repnz
jecxz
in
mov
add
or
call
out
daa
ja
es
lods
xchg
adc
lock
push
push
fcompl
sub
or
repnz
xor
sbb
pop
xor
dec
orl
std
mov
cld
repnz
stos
les
popa
stos
dec
outsl
fnsave
or
mov
fs
rclb
xor
call
in
roll
inc
imul
pop
in
test
daa
daa
in
lret
pop
mov
pop
or
lock
and
jae
repnz
or
outsl
jo
addr16
addr16
lds
into
mov
int3
ret
movsb
cmp
mov
fimull
jle
xor
mov
pop
jb
arpl
xor
add
lea
test
aad
out
xchg
dec
int
rclb
sub
dec
pop
inc
push
jno
subb
stc
into
ljmp
loop
orl
or
aam
stos
pop
adc
lahf
xor
xchg
or
fucom
push
jmp
or
mov
pop
shll
adc
lcall
dec
xor
out
jo
cmpsb
inc
xor
mov
clc
movsb
das
add
add
lahf
inc
mov
lock
inc
pop
movsb
pop
fstps
mov
adc
push
mov
pop
cmp
enter
mov
inc
fisttpll
jae
inc
mov
cwtl
sub
in
mov
push
adc
add
daa
hlt
add
mov
icebp
nop
scas
ljmp
daa
inc
xchg
std
cltd
cmp
cmp
icebp
sub
fadds
int3
xlat
stos
cmp
mov
loopne
mov
in
cli
add
lock
orb
cmp
push
xor
sti
mov
pusha
test
add
adc
lock
inc
or
and
mov
mov
sbb
inc
icebp
xor
adc
fld
and
sub
xchg
cld
mov
dec
insb
sbb
cltd
in
adc
push
inc
or
in
nop
jecxz
shll
ds
rcr
jg
mov
xor
sbb
push
push
push
jb
loopne
mov
pop
add
adc
push
push
and
push
mov
push
ljmp
rolb
enter
pusha
or
adc
rorl
jl
mov
pop
adc
cmp
cmp
repnz
mov
das
clc
call
das
push
cld
pop
jnp
orb
adc
dec
repz
aaa
jb
push
cmp
test
fldt
test
lcall
adc
mov
loope
or
ss
cltd
push
sbb
fdivl
mov
mov
sbb
addr16
imul
inc
xor
test
mov
bnd
sbb
lods
add
xchg
lods
aas
les
sub
popf
jnp
jae
push
push
dec
arpl
dec
rorl
xchg
out
cmp
jne
inc
cmpsb
stos
sarb
divb
add
les
push
out
pop
rcll
xchg
and
jmp
cmp
shlb
aam
inc
in
adc
stos
inc
lock
les
mov
insl
cld
ja
fdivrp
cltd
dec
adc
add
outsb
or
repz
mov
jnp
dec
cmp
mov
mov
jb
mov
dec
dec
cmc
cmp
stc
inc
push
addr16
xor
mov
mov
jp
je
adc
insb
xchg
addr16
fists
mov
cwtl
adc
push
dec
inc
dec
test
dec
out
insb
lods
dec
push
dec
adc
popa
sbb
cmc
in
mov
pop
fsubl
inc
je
enter
je
push
fnstsw
push
sub
imul
in
addr16
cltd
mov
sub
je
push
shll
jne
roll
daa
jb
mov
adc
popf
in
and
pop
push
and
mov
sbb
and
jp
into
clc
sub
cmp
sub
je
rclb
mov
ret
in
mov
adc
pop
int3
dec
in
out
fsubl
cmp
cmp
mov
mov
gs
xchg
ljmp
mov
adc
lret
dec
xchg
dec
rcrb
dec
sbb
push
in
mov
in
adc
mov
mov
sahf
jl
adcl
mov
xchg
and
in
xorb
sbb
or
jo
add
mov
shr
mov
lock
pop
ds
aaa
dec
js
inc
cmp
adc
xor
aam
cld
mov
je
adc
add
adc
out
scas
mov
fmull
in
fdivl
and
incb
add
cltd
je
push
pop
inc
and
std
cmp
mov
loop
mov
js
hlt
int
fsubrp
pop
in
ja
pusha
xchg
adc
daa
in
ds
dec
adc
adc
enter
mov
inc
in
insb
js
adc
std
adc
sub
imul
mov
movsl
outsb
xchg
lcall
ret
ret
outsb
inc
push
loopne
repz
enter
sahf
inc
xor
cmpsl
and
push
call
cltd
out
mov
xchg
fucom
dec
enter
js
mov
sti
cmp
mov
shrb
data16
jbe
arpl
out
imull
fs
jmp
movsl
sbb
mov
ss
mov
mov
mov
and
inc
pop
in
push
test
in
adc
xchg
std
out
mov
xor
cwtl
ret
pop
push
mov
fmull
mov
test
pop
xchg
out
inc
mov
lods
adc
lcall
divl
push
test
and
in
lods
xchg
cmp
outsl
fisubrs
mov
nop
divps
shrb
loop
add
mov
cmp
idivl
fcmovu
adc
cmp
into
inc
and
shrb
push
jmp
pop
in
insb
push
pop
fcomip
cwtl
out
js
xor
ljmp
inc
sub
or
cld
pop
pop
push
pop
rorl
push
push
mov
xor
or
adc
ds
jmp
movsl
hlt
pop
insb
xorl
mov
popa
je
pavgb
adc
pop
mov
pop
cmp
in
sti
inc
popf
sarb
mov
dec
loope
xchg
icebp
push
adc
jo
popf
cmp
adc
mov
data16
xchg
scas
xchg
push
shrl
cs
sbbl
shrb
test
sbb
cmp
xchg
nop
pop
push
rclb
sarb
sarl
mov
or
andl
stos
shl
push
cmpsl
mov
int
mov
leave
mov
xor
int3
push
mov
aam
cmc
mov
adc
pop
lock
inc
mov
stc
dec
cmp
mov
int3
jge
aad
jb
jae
loop
orl
imulb
push
inc
icebp
in
add
cmp
mul
push
mov
or
into
or
dec
movsb
mov
out
cmp
repz
cmp
sbb
movsb
outsl
outsb
xor
sbb
test
dec
cmp
lret
or
lock
xor
cmc
sub
outsb
loope
pop
inc
xor
xchg
mov
adc
mov
dec
ljmp
and
loope
aaa
gs
insb
fs
mov
aad
jo
mov
or
gs
dec
aam
push
arpl
ljmp
aam
xchg
in
jg
rcrb
cli
mov
adc
sbb
das
sub
subb
xor
scas
push
push
stc
out
pop
lea
dec
cmp
push
adc
mov
in
in
or
dec
and
push
pop
mov
int3
adc
push
scas
jmp
into
push
not
xchg
inc
lods
xor
xor
in
lea
jmp
popa
and
adc
push
jnp
ja
mov
jle
cmp
out
jb
mov
pop
imul
pusha
sub
or
insl
xor
xchg
mov
in
mov
jne
mov
call
outsb
ljmp
shr
sub
popa
fidivs
mov
arpl
add
mov
mov
jmp
cld
jg
jo
iret
mov
mov
div
or
je
sahf
in
fs
insl
in
pop
outsl
cmp
inc
add
fisttpl
jne
mov
testl
test
icebp
sub
iret
xor
jl
int3
lock
cmpsl
out
or
movsb
fs
stc
incb
pop
jb
in
jae
fidivrl
lcall
jno
call
jns
inc
mov
jg
push
sub
add
cmp
xchg
jno
scas
call
cltd
cli
fcomip
jb
xchg
int
adc
sub
or
bound
lock
dec
aam
movsb
adc
nop
xchg
cmp
test
stos
jge
lret
xchg
loopne
inc
sbb
sbb
inc
mov
xchg
adc
mov
or
xchg
mov
and
in
jecxz
push
loopne
pop
cmp
sti
mov
cmp
jo
xchg
lock
push
or
xor
pop
loopne
adc
xchg
jecxz
movsl
arpl
loopne
xor
pop
icebp
outsl
cli
decb
ficoml
xadd
and
xlat
xchg
and
jmp
adc
mov
scas
xlat
fbstp
inc
sbb
adc
ds
mov
push
sahf
jno
mov
inc
test
jbe
pop
push
xor
ja
or
enter
or
movsl
pop
call
pop
int3
lods
cmpsl
lea
outsb
sbb
bound
dec
jno
loop
mov
or
adc
movsl
sub
xchg
mov
bnd
stos
and
aad
mov
add
adc
cwtl
mov
sbb
lret
into
fists
push
cld
aam
adc
jg
or
mov
mov
addr16
xchg
xchg
jmp
hlt
mov
jns
jo
mov
add
out
lahf
mov
shl
jbe
das
loope
or
dec
sar
cwtl
lahf
cs
or
or
mov
dec
cld
jo
push
mov
inc
mov
and
movsb
sar
mov
xchg
pop
push
mov
icebp
test
dec
cmpb
or
test
adc
xor
adc
and
xchg
lcall
into
jge
popa
sub
cmp
sub
aaa
aam
push
mov
lods
ficoml
insb
ss
enter
shl
lcall
subb
nop
fistps
push
fstpl
add
cwtl
ret
add
ficompl
sub
or
insl
or
inc
lds
push
std
xchg
sub
cmpsl
push
aad
adc
xor
xchg
cmp
push
sti
pop
sbb
add
xor
push
movsl
out
gs
orb
dec
lea
shlb
mov
sbb
fisubrl
xchg
add
aam
repnz
test
aam
cmp
inc
in
outsl
cwtl
ja
ja
xchg
jmp
lcall
push
or
repnz
xchg
pop
in
push
test
popf
shlb
call
repnz
xor
cli
mov
sub
jbe
dec
incl
inc
nop
inc
scas
test
pop
sub
enter
add
mov
jecxz
inc
pop
and
ret
rcrb
hlt
mov
inc
or
loop
sub
sbb
pop
rcrl
call
nop
mov
mov
repnz
test
fldcw
or
mov
mov
mov
sbb
test
xor
pop
adc
js
fwait
mov
dec
ds
pusha
mov
stos
dec
or
jbe
adc
jae
movsl
fdivs
lcall
dec
ja
xlat
psllq
sub
jmp
inc
xchg
xor
jns
cmpsb
adc
test
jno
iret
add
and
jbe
jl
ret
dec
lods
cltd
cmc
mov
jno
call
stos
jg
insb
or
repnz
lcall
repz
loope
into
mov
dec
lahf
push
mov
sub
or
icebp
add
test
fisttps
xchg
adc
outsb
adc
pop
add
inc
jp
out
or
pop
push
mov
inc
dec
imul
push
jno
inc
pop
inc
mov
jo
in
sbb
ret
or
adc
insl
add
jns
movsl
bound
mov
push
cs
lcall
cwtl
jb
pusha
test
cmp
loop
out
adc
sti
adc
cmp
ja
jge
es
lret
mov
cltd
adc
sub
xorb
mov
mov
dec
jne,pn
pop
stos
sbb
adc
ret
imul
fsubr
into
and
mov
sub
mov
ret
inc
pusha
push
stc
aam
pop
dec
rorl
lret
cs
cmp
sub
pusha
lcall
in
ret
pop
lret
outsb
stos
fdivs
mov
lcall
fldenv
nop
jbe
dec
and
sbb
push
loopne
xchg
cmp
add
xor
or
dec
clc
push
mov
jp
cmp
sub
cmp
inc
mov
jne
inc
dec
out
push
dec
fs
push
fs
jmp
orb
add
jmp
ret
add
loop
mov
cltd
fcomps
pop
test
mov
shlb
out
lds
mov
loop
divb
imul
xchg
sbb
jno
ljmp
mov
jno
lods
dec
push
lds
xchg
add
mov
clc
shll
sbb
cmp
add
mov
push
mov
std
dec
rolb
mov
push
or
std
dec
mov
fildll
push
mov
mov
sarb
stos
ss
mov
add
cltd
std
daa
inc
mov
cwtl
or
mov
jl
and
mov
int
in
fmull
mov
xor
in
sbb
fildl
out
popa
psubusb
jmp
mov
data16
dec
movsb
push
insl
incb
movsb
jnp
montmul
cmpsb
out
notl
jmp
xchg
inc
movsl
add
je
xor
pminub
push
adc
dec
imul
xchg
pop
lret
inc
nop
jo
dec
mov
out
dec
outsl
mov
adc
and
repnz
pop
mov
jp
ret
movsl
and
mov
xor
int3
sub
jnp
dec
push
mov
fbstp
es
mov
in
sub
stc
jb
iret
daa
or
stos
inc
stos
mov
pop
out
jb
icebp
nop
push
cwtl
cs
lret
ds
loop
sub
pushf
repnz
xchg
sbb
xchg
mov
das
xor
dec
sub
js
stos
addl
mov
outsl
into
stc
pop
lock
pushf
in
out
scas
mov
mov
leave
repnz
jno
mov
mov
adc
bound
inc
aaa
test
sarb
stos
repnz
dec
adc
xchg
aad
add
ret
std
daa
mov
sub
or
stc
push
jge
in
popa
testl
fistl
xchg
loopne
and
ss
mov
lret
adc
in
push
jl
inc
push
lods
movl
paddusw
inc
inc
pop
pop
jno
adcl
aaa
push
orb
insl
dec
pop
pop
nop
dec
mov
mov
ficomps
shlb
add
xchg
xor
stc
adc
push
ja
xor
test
lcall
test
push
or
xchg
add
sbb
dec
mov
jns
in
push
ljmp
push
sub
je
jecxz
rclb
out
arpl
pop
movl
mov
mov
dec
mov
mov
cmp
je
dec
jo
inc
stc
hlt
fbld
stos
icebp
mov
outsb
popl
in
stos
in
mov
dec
clc
js
xchg
adc
in
inc
out
pop
jmp
jmp
repz
inc
and
push
jp
push
ja
std
fmull
sbb
ljmp
and
cmpsl
mov
ss
repz
loop
mov
scas
add
mov
push
jno
movsb
les
jo
and
loopne
sbb
pop
in
lret
xor
test
mov
pop
push
out
cwtl
dec
jns
lret
push
mov
int3
mov
rcr
arpl
in
dec
int3
add
mov
jmp
sub
add
jle
add
aas
push
js
xchg
xor
xchg
push
popa
lods
sti
cmpsb
imul
and
fcoml
mov
cmp
out
cmp
in
mov
or
mov
aaa
arpl
fldenv
fnstcw
cmp
pop
aam
add
lcall
xor
xchg
sub
outsb
mov
mov
dec
fbstp
notl
frstor
fcomps
or
lahf
shr
stc
pop
mov
add
fldenv
cmpsb
mov
sub
fdivp
xor
mov
xchg
push
inc
mov
cmpsl
mov
push
sbb
xchg
loopne
mov
push
mov
jge
sbb
adc
mov
sbb
out
cmp
cmp
adc
dec
jnp
jns
push
sub
cli
xchg
inc
test
xchg
push
cmp
adc
adc
rol
xor
jo
lods
in
pop
xchg
mov
test
pop
and
pusha
pop
or
xorl
adc
insb
cmc
iret
mov
dec
inc
mov
sahf
inc
dec
adc
pop
inc
dec
stos
fcoms
sub
stc
add
dec
movsb
fisubrs
jno
in
adc
push
push
in
mov
ficoms
pop
imul
rorb
loope
sub
adc
mov
fistpl
insl
sub
arpl
jl
lret
push
test
jp
call
and
fwait
andl
rorb
push
mov
mov
outsb
dec
dec
ja
inc
lock
xchg
arpl
dec
test
xor
pop
sub
mov
jp
cwtl
outsl
cmp
push
jge
add
mov
push
push
jne
dec
sub
aaa
int
out
dec
out
cmp
xor
adc
faddp
ss
or
pop
add
cwtl
imul
fdivrs
lahf
cmpsl
xor
std
or
imul
lock
and
sub
inc
xor
push
int
dec
dec
xchg
rorl
test
aas
pop
jp
xchg
addr16
add
cltd
push
mov
imul
pop
mov
fsub
cwtl
add
or
sub
in
pop
in
jmp
movsl
out
inc
sub
adc
mov
test
dec
fstp
push
pop
icebp
adc
pop
fwait
std
push
and
rcrb
test
loopne
sub
pusha
mov
jmp
ror
sbb
xor
jno
jo
pop
nop
popa
adc
fidivrs
fmull
ljmp
shl
xor
lds
out
clc
aaa
pop
mov
inc
repnz
cmp
outsl
rolb
scas
or
mov
xchg
mov
sbb
repz
pop
fsub
mulb
pop
mov
fdivs
cmp
fisttps
pop
outsb
sub
jae
hlt
jl
insb
out
cmp
mov
jne
je
js
xchg
mov
adc
xchg
loop
scas
and
enter
es
in
fdivs
popf
pop
lcall
add
daa
imul
mov
rclb
mov
xchg
xchg
add
sub
jge
lret
adc
sti
ret
pop
push
dec
push
fnsave
mov
mov
xchg
inc
push
pop
lods
xor
in
jo
sbb
cmpb
jnp
out
stc
mov
das
movsl
rolb
divl
fwait
xor
inc
mov
movsb
mov
mov
mov
loope
ret
sahf
cmp
mov
jb
loopne
iret
mov
lods
aaa
jb
and
xor
aam
add
cmp
xchg
rol
pop
or
add
inc
or
push
and
loopne
decb
divl
movsl
push
imul
xchg
xchg
lahf
and
out
sub
js
test
and
cmp
cmp
push
push
fisttps
pusha
out
jae
cmc
sbb
mov
shrb
jnp
stc
mov
adc
dec
int3
lock
cld
cmc
sbb
xor
rcr
inc
mov
scas
inc
xor
mov
jnp
dec
aas
ret
mul
and
psllq
push
ret
or
or
inc
into
inc
insb
mov
xchg
mov
push
push
and
jle
or
je
push
test
and
sub
lcall
sbb
jb
sbb
ljmp
lds
stos
ja
fucomip
xchg
call
push
iret
addr16
dec
mov
adc
sti
cmc
inc
or
xchg
inc
jmp
push
xorb
scas
shlb
arpl
adc
in
sub
es
in
inc
ret
inc
lret
ljmp
jnp
lcall
inc
mov
sub
data16
sbb
imul
lock
xchg
mov
xchg
lods
lds
dec
and
adc
xlat
lods
jmp
enter
sub
jne
pop
and
jmp
mov
push
xor
adc
fcomip
xor
push
popf
jno
aam
and
mov
and
test
xor
loopne
outsb
add
aas
cmp
cwtl
mov
dec
add
cmpb
leave
in
cmc
out
mov
or
xorl
fdivl
xorl
xlat
ss
mov
xchg
sub
mov
push
loopne
cmp
das
dec
popa
or
loope
jo
out
movsl
inc
adc
adc
insb
mov
mov
in
sub
fldl
mov
push
not
cmp
lods
adc
es
insl
push
mov
rorl
mov
mov
or
clc
scas
fidivs
adc
out
sbb
je
stc
cmpsb
fdivl
pop
out
in
rcrb
adc
jae
data16
ja
imul
fcoms
inc
lret
xchg
add
icebp
mov
fbld
cmp
std
xchg
fidivs
fimuls
mov
popf
pop
int3
ss
arpl
pushf
inc
scas
data16
push
insb
repz
out
lcall
xor
jb
mov
push
push
and
aas
jae
mov
test
data16
xor
mov
rcrl
sahf
cmpsb
pop
jb
or
daa
hlt
sub
cmpsb
pop
into
scas
mov
sub
in
aam
mov
repnz
mov
sub
mov
mov
rolb
shlb
adc
mov
stos
jecxz
aas
mov
stos
or
or
sbb
mov
lods
mov
jp
inc
push
mov
das
push
sbbb
push
cmp
mov
mov
cld
push
and
out
ja
mov
mov
fs
int3
adc
sahf
push
std
mov
inc
and
pop
fimuls
mov
jb
push
inc
and
sbb
inc
dec
sti
insb
pop
jg
call
push
gs
loope
repnz
mov
adc
sub
ret
push
in
dec
mov
fs
clc
inc
mov
test
sub
xchg
sbb
fsubp
sti
adc
inc
cmpl
call
mov
pop
sahf
fcoms
pushf
fsubrs
mov
out
daa
and
pop
jae
mov
jecxz
test
fnsave
in
movsb
das
sub
bound
push
repnz
mov
mov
pop
lods
xchg
inc
sbb
pop
enter
and
pop
mov
daa
ret
jge
adc
dec
js
cmc
mov
into
lret
inc
push
leave
pop
int3
adc
scas
xlat
fstl
pusha
jo
rolb
jno
lods
stos
jl
fidivrs
in
push
mov
aas
add
and
jnp
cltd
pop
adc
fstpt
repz
das
and
xor
sub
xchg
sub
clc
cltd
pop
adc
mov
push
test
inc
or
lds
mov
insb
push
nop
popa
pop
push
loope
sub
add
xor
inc
test
pop
xor
fsubrl
fs
out
xchg
jae
insb
sbb
pushl
fs
mov
sbb
loope
dec
pop
leave
popa
je
pop
enter
ret
jle
out
push
je
or
sub
mov
bound
out
or
push
mov
in
push
psraw
cltd
pop
repnz
loope
sub
inc
dec
and
shlb
xor
dec
loopne
into
test
xchg
sub
movsl
lea
divb
out
or
pop
mov
cwtl
or
out
mov
mov
movsb
push
lahf
dec
mov
shrl
inc
cwtl
xchg
jnp
mov
enter
push
mov
inc
shl
xor
xor
push
push
aam
pop
xchg
insl
out
cwtl
or
xchg
or
sub
jl
je
in
in
std
push
push
stc
mov
adc
push
cmpsl
in
test
out
or
adc
adc
and
stos
in
xor
test
fbld
pop
loopne
dec
pusha
call
jle
mov
or
mov
xor
dec
push
xchg
mov
or
inc
or
mov
jl
sti
lahf
sbb
popa
mov
fucom
call
negb
fimuls
cmp
sub
call
outsl
mov
cld
and
ljmp
dec
pop
loope
push
jnp
fidivs
mov
sbb
hlt
aam
add
inc
into
mov
push
fwait
test
sbbl
pop
aas
add
mov
pushf
loopne
mov
cmpsb
xchg
jb
push
cmp
mov
movsl
xchg
adc
dec
popf
out
fstps
mov
insb
scas
cmpsb
jo
sub
lahf
push
aam
pop
or
xchg
xchg
lret
add
mov
lahf
or
ljmp
rcr
pusha
push
ljmp
andl
xchg
jnp
outsl
int3
fcmovu
je
xor
cmp
lret
inc
movsl
jae
shll
and
in
shl
xchg
mov
jae
mov
xchg
xor
shrb
pushf
push
dec
loope
cmpb
dec
lds
fucomi
sarl
ja
mov
cli
in
iret
mov
and
dec
pop
jo
cld
ret
out
rolb
call
sub
jno
shlb
daa
xchg
test
andb
es
ret
int
out
add
pop
inc
cmp
inc
or
add
adc
pop
call
imul
idivl
int
mov
jl
push
je
test
rorl
lods
test
bound
mov
sub
jae
aad
and
xor
or
test
enter
push
push
pushw
sbb
and
dec
sub
mov
pop
fnstsw
adc
leave
jmp
mov
insl
in
mov
push
adc
pop
stos
push
mov
insl
adc
adc
pop
xchg
sub
pop
aas
xor
mov
shll
ljmp
les
loop
insb
rcll
dec
jg
cwtl
adc
cmp
xchg
hlt
jmp
xor
dec
mov
adc
mov
jne
sub
hlt
xchg
jnp
sbb
cmovs
ficomps
dec
adc
mov
rclb
mov
lret
xor
jo
or
test
in
ret
mov
call
js
fcoml
lods
fisubs
push
mov
xor
xor
jb
jmp
push
cmp
mov
push
dec
mov
sub
das
stos
or
shlb
dec
aaa
adc
jns
stc
cltd
push
jne
sahf
xchg
cld
movsb
jb
int
repnz
fsubp
test
jge
or
fists
inc
mov
lock
add
ss
xor
push
ret
addb
jo
cmc
inc
dec
shll
cs
jb
mov
aam
iret
call
scas
mull
sub
mov
push
inc
push
scas
xor
xchg
lods
rorb
enter
int3
popa
andb
add
out
cli
stos
jl
dec
xor
insb
inc
repnz
mov
jmp
out
xorb
inc
lcall
dec
fildl
lret
test
xchg
movsl
or
in
mov
decl
or
cwtl
mov
push
leave
les
loop
mov
mov
push
ret
stos
lcall
mov
imul
jnp
fucomp
xchg
and
stos
fldcw
jmp
into
inc
in
jge
xchg
mov
fiadds
xchg
jnp
ss
shll
ja
stos
cltd
and
aas
or
pop
xor
iret
loope
je
fstpl
dec
fs
outsl
cmp
dec
movsl
and
mov
push
out
rcr
dec
inc
add
mov
inc
cwtl
arpl
cmpb
popf
push
mov
cmp
insl
fnstcw
pop
aam
cmp
jnp
jl
ret
mov
mov
fdivrl
ljmp
popa
and
and
aaa
inc
cld
test
rorb
xor
jnp
insl
dec
xchg
xchg
sub
repnz
jge
lds
cmc
xchg
cmp
loopne
orl
scas
add
decl
je
add
mov
xor
out
inc
or
shlb
or
xor
jecxz
push
inc
pop
cmp
dec
cmp
out
mov
mov
pop
ss
mov
clc
push
and
jp
xchg
stos
hlt
bsr
ds
jl
out
pop
aas
lods
mov
paddusb
cld
fsubs
sub
pushf
repnz
jmp
rcr
cmc
mov
clc
enter
add
imull
push
loop
pop
dec
or
dec
lcall
mov
push
aas
in
mov
fbstp
std
fildl
call
popl
jmp
adcl
xchg
mov
dec
aas
lock
push
dec
call
test
jle
out
lret
mov
adcb
mov
sub
lret
lods
push
cmc
pop
cld
outsl
mov
xchg
cli
dec
pop
mov
and
xor
mov
dec
sub
movb
jge
mov
pushf
test
mov
aad
add
enter
aam
mov
pop
sahf
cld
fcoms
cltd
test
pop
fsubl
sbb
add
icebp
sahf
faddp
movsb
imul
into
adc
xlat
arpl
mov
jl
mov
or
dec
or
mov
mov
mov
jmp
lea
push
lret
cmpsb
std
jp
aad
aaa
xchg
push
int
adc
mov
mov
adc
sbb
mov
aas
stos
clc
inc
lret
dec
fists
je
xorb
mov
fs
xchg
xor
arpl
test
sub
in
dec
repz
es
scas
aam
je
bound
jmp
mov
test
jno
int3
clc
jbe
add
and
rol
sbb
ds
push
outsl
push
xchg
js
jecxz
enter
orl
xchg
xorb
scas
loop
cld
jb
in
stos
xlat
clc
out
jbe
lret
int3
imul
jge
mov
in
sbb
int
mov
jb
xchg
xchg
xchg
test
adc
mov
sahf
adc
cmp
pop
sahf
int
stc
mov
insb
dec
pushl
inc
fsubrl
pop
int
jbe
push
and
pushf
pop
pushaw
shlb
movsl
and
mov
mov
mov
xchg
aaa
js
pop
and
jmp
cli
and
or
setae
shlb
loop
dec
scas
jno
dec
icebp
add
popf
test
idiv
cmp
push
fistpll
and
mov
xchg
sub
aad
repz
jb
lds
lods
mov
or
xor
inc
mov
sbb
insb
adc
jbe
cmp
dec
mov
push
sbb
push
in
test
sbb
orps
push
or
xchg
bound
jb
mov
dec
std
fidivrs
or
xor
ss
pushf
sub
dec
push
lahf
ss
pop
pop
lea
enter
pop
push
les
mov
mov
je
loopne
mov
loopne
stos
xor
adc
filds
out
mov
enter
dec
jne
dec
lret
dec
jns
xor
in
jae
and
es
jl
test
push
cwtl
sbb
inc
outsb
or
cltd
pop
dec
adc
mov
or
test
jo
mov
pusha
jp
adc
mov
inc
imul
or
mov
and
sbb
subl
jbe
and
cltd
outsb
mov
outsl
call
test
ja
or
outsl
rcl
add
jns
sub
push
enter
scas
sub
cmpsb
mov
imulb
cmp
jne
aas
fadds
js
or
scas
fistps
xor
sub
xchg
ret
or
sub
inc
mov
lcall
xor
jbe
pushf
sub
adc
inc
addr16
jbe
xchg
test
dec
and
mov
ret
jae
xor
mov
test
fidivrs
xchg
cmp
add
repnz
add
push
xor
arpl
rclb
or
fldt
out
jb
push
xchg
fcompl
mov
sbb
inc
mov
push
imul
xchg
imul
adc
cmp
push
and
daa
jb
faddl
fninit
fisubrs
outsl
in
test
push
inc
sub
adc
loop
mov
enter
out
dec
xor
adc
addr16
mov
outsb
mov
ljmp
jbe
mov
pop
adc
inc
sahf
sbb
adc
jg
movsb
mov
test
faddl
loope
xor
test
cmp
cmp
jle
daa
pop
push
pop
out
in
cltd
data16
adc
cmp
addr16
lods
mov
stos
mov
repz
sarw
inc
or
out
xchg
sbb
adc
xchg
lret
and
int
xchg
jge
cmp
inc
pop
outsb
jge
xchg
dec
sub
mov
and
sbb
and
loopne
cmp
and
leave
jge
push
cltd
es
pop
add
push
xchg
inc
dec
push
aaa
unpckhps
xchg
call
inc
out
mov
insl
fidivrl
mov
mov
lahf
push
ljmp
and
adc
call
loopne
and
out
shrb
clc
sbb
adc
sti
jge
popf
and
cld
in
insb
cmp
mov
fucomi
pop
stos
push
lds
jp
pop
ud0
mov
mov
mov
inc
mov
sbb
or
push
mov
test
lds
adc
out
cmp
xor
inc
pop
mov
jg
add
xchg
orl
xor
push
imul
jbe
add
icebp
in
js
shrb
push
and
mov
xchg
mov
sarl
push
arpl
or
adc
sub
decb
ffreep
mov
fistpll
inc
std
and
addb
jbe
cmp
cmc
mov
fdivrl
aas
push
stc
push
add
inc
loope
aad
push
les
lods
stos
mov
stc
sub
rolb
out
cwtl
je
mov
cmp
lods
inc
cmpsb
mov
push
jb
sbb
xor
cmp
and
cmpsl
sysret
inc
loopne
in
xchg
or
call
and
push
jecxz
enter
and
mov
add
adc
jg
mov
adc
mov
or
pop
cwtl
imul
in
jae
pop
ret
roll
sub
andl
loopne
jg
and
loopne
in
pop
dec
jns
push
shlb
stos
xchg
and
inc
or
ds
movsl
jo
mov
lods
push
aad
rol
stos
cmc
in
xchg
push
mov
mov
in
frstor
xor
pop
mov
popf
enter
ss
lods
xchg
js
push
in
push
push
sarl
adc
jl
xchg
jo
and
outsb
push
cld
iret
add
aas
lret
data16
sbb
or
sbb
scas
mov
outsl
cli
mov
push
int
int
movsl
cld
cmc
je
idiv
or
inc
mov
push
cmp
loopne
nop
mov
cwtl
in
mov
test
pop
push
out
movsl
int3
push
cmp
insb
inc
nop
movsl
xchg
adc
rol
mov
jl
inc
mov
lds
daa
outsl
mov
test
inc
sub
orl
arpl
or
adc
pop
jnp
je
cli
add
cmc
xor
lds
dec
xor
jne
enter
out
ds
jbe
push
sbb
push
idiv
into
int
fistpll
mov
loope
and
inc
xorl
adc
stc
fstl
sbb
ss
dec
stos
mov
rcl
inc
cli
nop
loopne
ss
call
inc
mov
nop
cli
popf
add
data16
pop
lahf
inc
in
mov
inc
or
mov
inc
lea
pushf
inc
or
lods
shlb
test
fiadds
xchg
pop
or
mov
mov
iret
insb
sti
jae
push
mov
cmp
ret
jg
call
mov
cmp
fnsave
fisttpll
adc
mulps
cmp
nop
stos
mov
push
dec
adc
lahf
push
test
loop
mov
imul
adc
sarb
push
imul
dec
xchg
iret
or
push
and
aaa
add
jne
repz
add
add
xor
outsb
push
jl
stc
mov
fs
adc
mov
stos
sbb
stos
rolb
jns
push
stos
push
push
push
jo
jle
sahf
xchg
sbb
adc
int
adc
or
push
mov
mov
ret
cmp
outsl
fmull
in
out
ret
outsb
inc
or
or
and
cltd
int3
jmp
repnz
jle
inc
out
or
or
mov
jb
adc
mov
and
imul
inc
adc
mov
dec
cld
pop
jno
sub
or
in
adc
out
fnsave
out
out
addb
fsubrs
jle
push
insb
sub
outsb
sbb
mov
push
loope
enter
enter
rcrb
or
lcall
setl
adc
jne
jl
shlb
sub
fdivl
daa
or
insl
and
inc
cli
cli
inc
adc
cmp
mov
dec
in
call
pop
mov
out
aaa
or
xor
push
push
ret
hlt
rcll
mov
das
rcrb
ret
mov
fdivp
sbb
jle
xor
movsb
and
pop
push
bound
into
dec
lock
xchg
lcall
ds
test
jge
push
mov
and
dec
and
jle
inc
add
push
js
jo
xchg
push
inc
and
cwtl
add
cld
xchg
outsl
fsubr
push
and
xlat
aas
pop
not
pop
and
imul
jg
jb
push
sbb
lock
mov
jp
push
lods
fdivp
jae
divb
fcoms
mov
jae
mov
inc
push
sub
xor
loop
xor
push
aam
nop
scas
or
add
fsub
bound
repnz
jp
popf
xor
jecxz
sbb
add
scas
sahf
xorb
out
and
out
les
or
push
inc
je
xchg
in
pop
jmp
and
daa
jnp
cli
jmp
test
int3
hlt
dec
or
xchg
push
lds
xlat
stc
mov
rorb
jb
fldcw
int3
fimuls
adc
stos
or
divl
dec
rorb
dec
mov
xor
push
xor
push
pop
xor
push
nop
or
dec
sarl
sbb
leave
ret
cmpsb
mov
and
inc
push
scas
jo
movsb
jbe
das
ds
xchg
adcb
outsb
movq
cwtl
sbb
out
movsl
dec
dec
xchg
mov
mov
loopne
mov
xchg
ss
push
imul
js
inc
pop
jo
pop
xor
enter
mov
mov
sbb
fsubrs
and
aas
repnz
mov
js
cltd
cmpsb
inc
push
pop
dec
adc
mov
loope
ljmp
rorb
fsubrs
subb
data16
in
inc
not
jne
movl
mov
dec
add
inc
inc
jae
push
push
imul
mov
shrl
outsl
in
cmp
add
jle
dec
aaa
xor
in
daa
shr
mov
adc
inc
dec
pusha
repz
lods
dec
repnz
leave
insb
test
pop
lea
and
dec
xor
bound
jl
ljmp
and
or
cltd
test
mull
test
sub
inc
push
and
popf
push
xor
shrb
aas
xor
add
mov
push
adc
ljmp
fadd
insl
sub
lahf
adc
in
mov
dec
in
daa
orb
push
stos
sub
test
dec
push
inc
movb
push
insb
fstpt
fadds
and
mov
iret
cmp
or
xor
jle
cmpsb
cs
into
push
hlt
xchg
mov
in
dec
mov
shl
imul
and
add
xor
clc
std
sbb
xor
rolb
inc
mov
mov
out
imul
inc
xor
and
popa
test
loop
jno
add
sahf
out
imul
and
xchg
inc
adc
or
lret
push
jmp
fists
rcll
pop
sbb
scas
outsl
lcall
mov
mov
and
aad
aam
or
dec
pop
push
imul
adc
push
leave
sbb
xor
stc
xor
insb
lcall
pop
mov
pop
cmp
and
sub
mov
jle
fisubs
mov
mov
ljmp
jmp
cli
je
mov
in
xchg
test
jnp
adc
jge
loope
lods
pushf
imul
rcl
pop
push
in
roll
xchg
xchg
cmc
xchg
cmp
in
sbb
adc
sub
and
xchg
scas
adc
movsb
cs
into
push
jo
xor
cmp
jne
fcomps
mov
add
cmpxchg
or
enter
push
ficoml
rorb
sub
push
je
cmpsl
mov
pop
outsl
push
mov
push
push
dec
sub
pusha
and
cmc
lret
dec
sub
or
arpl
inc
test
mul
fists
pop
das
cmp
arpl
push
adc
sub
int3
cltd
stos
or
mov
jae
cmp
test
adc
inc
adc
lahf
outsb
mov
mov
ret
or
dec
xor
adc
push
mov
cmpsb
outsb
mov
cld
fmull
inc
pushf
mov
inc
test
lcall
rol
in
adc
xor
lds
cmp
push
or
hlt
dec
push
inc
movb
enter
jle
fdiv
push
and
into
jo
in
pusha
out
pmulhw
inc
lcall
adc
ja
test
ljmp
lcall
out
imul
and
je
xor
dec
rclb
ds
loop
lret
mov
jmp
adc
imul
inc
lret
inc
in
lcall
add
cli
jo
std
stos
xor
xchg
adc
daa
sarl
test
push
jle
inc
adc
sub
out
pavgb
loopne
push
test
jp
test
mov
sub
ret
dec
imul
call
xor
mov
aam
inc
lods
sti
adc
mov
or
cmp
shrl
or
sbb
adc
mov
stos
sbb
or
test
out
outsl
test
sbb
push
lods
lcall
push
cmp
mov
push
je
pop
adc
adc
insl
mov
push
call
mov
xchg
inc
xor
or
int
cmpsl
push
sub
dec
lods
add
ds
adc
sbb
jg
adc
out
test
jne
aas
inc
test
out
xor
push
popf
dec
aad
icebp
mov
xchg
rclb
jne,pn
lea
mov
push
ficoml
dec
shlb
js
cmp
sbb
test
js
mov
in
cmp
xor
popf
cmpsl
sub
pop
inc
pop
adc
iret
mov
xchg
imul
jae
adc
vmovshdup
jp
dec
loop
lods
loopne
pop
outsl
out
xchg
and
pop
push
nop
or
mov
int3
es
shlb
push
xchg
xchg
lret
inc
out
fistpl
sub
xor
repz
push
lods
xor
add
push
js
mov
repnz
jl
inc
clc
mov
xor
jmp
xor
pop
or
mov
push
outsl
out
in
scas
mov
scas
xchg
pop
and
pop
sahf
and
testl
cmc
xchg
leave
or
sub
lcall
stc
mov
xor
cwtl
int
xor
loopne
xchg
iret
or
mov
cmovnp
ds
loopne
adc
inc
adc
ljmp
push
jo
fsubr
shrl
dec
pop
pushf
jmp
add
xchg
dec
dec
test
push
test
in
insb
sub
insb
inc
aas
test
lods
xchg
stos
fsubr
add
mov
cli
mov
inc
lcall
stos
out
cmc
dec
ds
cmp
out
pop
sub
xchg
outsl
in
sbb
ja
cmp
add
ds
sbbb
rep
mov
push
pushf
jmp
sub
push
jae
xchg
sahf
in
adc
loope
in
mul
dec
pop
in
add
mov
xchg
mov
or
xor
je
out
in
cmp
or
add
dec
mov
fdiv
and
and
sub
pushf
xor
dec
add
mov
ss
aam
insb
add
mov
lcall
mov
scas
or
xchg
jo
inc
inc
lods
xchg
fdivrs
or
push
mov
mov
push
int
fiadds
lods
or
fisubrs
mov
adcb
scas
jle
xchg
add
push
inc
es
sub
cmpsb
lret
lahf
sbb
insl
fisubl
inc
subb
xchg
call
xchg
jmp
cmp
cmp
xchg
jb
std
outsl
out
or
pop
add
into
sbb
repnz
cli
xchg
push
das
test
nop
sbb
or
push
cmpsb
pop
mov
sbb
or
inc
adc
mov
push
dec
mov
into
aad
sbb
dec
ret
mov
xchg
mov
imul
lds
sbb
pop
jle
lds
jb
sub
repnz
mov
loop
adc
inc
mov
inc
mov
ss
jo
scas
in
lahf
mov
pop
fwait
push
adc
jno
pop
mov
inc
push
adc
and
jmp
cwtl
test
push
xor
mov
arpl
ret
pop
imul
call
mov
dec
pop
fwait
andb
or
adc
mov
in
adc
lods
jecxz,pt
cmp
sub
loope
lcall
into
pop
add
push
cmp
divl
pushf
rcll
xor
bswap
icebp
cmp
mov
mov
in
pop
test
adc
push
imul
js
jmp
ret
fstl
push
fldenv
cmp
push
loope
ds
jae
cmc
out
mov
and
lock
clc
arpl
gs
xchg
cld
pop
xchg
cli
mov
clc
sbb
in
fcomps
insl
mov
push
mov
cmp
jge
js
push
and
push
push
pop
pop
lods
outsb
dec
testl
push
xchg
out
lahf
int3
xchg
in
lds
mov
xchg
movsb
sub
push
pop
sub
fstps
fwait
cs
sub
mov
fs
out
push
fcoml
jle
push
ret
call
jl
hlt
sbbb
fcmovnbe
push
dec
lcall
adc
mov
cmp
xchg
sete
insb
xor
bound
cmpsb
std
adc
adcl
stos
insb
mov
jnp
insl
enter
ds
je
icebp
sbb
push
jnp
mov
pusha
mov
lcall
jns
dec
push
fsubrl
sub
inc
arpl
adc
ficoml
arpl
sahf
inc
stos
dec
stos
inc
push
inc
xchg
mov
out
fadd
fs
mov
mov
mov
subb
dec
cltd
fiadds
and
jmp
add
jbe
xchg
or
ja
mov
or
xorl
push
and
mov
xchg
mov
in
jno
dec
icebp
call
push
ja
test
out
pop
xor
les
ljmp
jp
xor
cltd
aas
dec
pop
stc
out
inc
mov
cmp
pop
hlt
fs
leave
jecxz
xorb
sar
ret
jb
fisubrs
fcmovnbe
test
or
inc
sbb
aas
cmpl
jnp
or
push
jno
inc
aad
xchg
int
ljmp
pop
xor
inc
dec
cmp
ss
pop
jb
rclb
dec
es
pop
std
sahf
insl
andl
es
jae
mov
inc
sarl
sub
jg
cmp
and
sbb
je
mov
xor
jp
lea
je
fimull
cmpsb
pop
call
in
nop
stc
mov
repz
add
xor
push
jmp
nop
xchg
mov
jge
call
push
jo
popf
int3
mov
xor
cmp
pushf
insb
jmp
add
int
nop
lcall
jo
in
ficoms
pop
push
pushf
in
sub
push
pop
int3
adc
xchg
sbb
mov
pop
mov
test
pop
fwait
jno
jmp
aad
or
jmp
sahf
dec
dec
nop
pop
jae
mov
jl
faddl
in
outsb
add
xchg
outsb
lds
xlat
test
clc
inc
mov
jg
xor
lcall
pop
testl
jo
into
fmull
sbb
mov
notb
les
cmp
adc
jbe
or
add
int3
adc
push
stos
dec
icebp
rcll
adcl
mov
cwtl
out
jnp
mov
ljmp
dec
inc
loopne
add
sahf
mov
out
dec
repnz
inc
mov
clc
arpl
adc
out
cmp
mov
fistpll
mov
loope
push
xchg
inc
js
clc
gs
out
push
or
enter
shrb
nop
mov
push
test
es
push
adcl
les
fldl2e
sbb
jns
cmc
and
jmp
mov
xor
ljmp
cmp
in
adc
jg
int3
xchg
mov
scas
ljmp
neg
mov
sub
push
out
test
sbb
imul
cltd
pushl
xchg
mov
mov
cmc
sub
push
jecxz
xlat
js
sub
mov
pop
mov
repnz
push
gs
mov
jae
jmp
jp
mull
cmove
insb
enter
loopne
cli
mov
push
out
sub
repnz
cmovo
jl
mov
ss
push
inc
pop
mov
mov
cld
fcmovb
mov
insl
mov
adc
lahf
insb
adc
leave
mov
push
mov
mov
clc
fcoml
js
push
loope
jp
adc
popa
pushl
hlt
ss
rol
xorl
mov
imul
mov
adc
int
je
js
lret
mov
push
jnp
imul
xor
pop
xor
lret
out
outsb
dec
xchg
mov
or
inc
stos
in
xchg
outsl
lds
scas
scas
subb
jp
fucomip
test
add
cwtl
loopne
push
sub
rcll
leave
leave
aad
mov
cmp
mov
lea
sub
nop
push
jb
or
subl
iret
test
push
mov
jo
jbe
pushf
xcrypt-cfb
cmpsl
mov
adc
out
push
fld
and
sbb
subl
ret
lahf
push
cli
dec
mov
jp
ljmp
icebp
ja
mov
mov
cmp
add
fs
inc
hlt
mov
push
ficoms
call
dec
xor
sub
cmp
call
stos
fimuls
mov
mov
push
fcmovb
ja
mov
icebp
int3
jmp
hlt
test
pop
jmp
repz
fstpt
mov
stos
ss
out
jo
lods
mov
push
cmovns
js
dec
mov
rorb
add
sbb
pop
xchg
gs
pop
cmp
loopne
loop
fistl
popa
mov
dec
je
sub
or
cmp
sbb
shrd
dec
sti
jnp
push
xchg
repz
lret
and
imul
sarl
and
push
cltd
int
mov
test
cwtl
xchg
sub
mov
std
pop
jle
fsubs
push
out
sub
in
push
ja
jo
imul
lock
fwait
nop
jmp
cli
and
adc
jge
mov
xlat
sbbb
lret
jne
jle
pop
cmp
cmp
enter
int3
faddl
push
inc
andl
or
movsb
add
aas
xchg
imull
scas
jae
or
out
je
mov
jno
pushf
ja
fistpll
dec
lcall
sbb
insb
pop
jbe
pop
cmp
inc
dec
cmpsl
call
adc
or
push
sbb
push
sbb
push
jmp
cmp
cmp
push
testb
fucom
and
push
add
xchg
mov
pop
jne
pop
daa
ret
pop
cmp
fmuls
shlb
ficoml
pop
push
adc
cmp
mov
xor
cld
addl
xor
stc
push
in
int
sti
shlb
and
dec
fs
jge
jle
cmp
mov
xchg
pop
scas
test
lcall
inc
cmp
int3
fs
and
jae
push
test
arpl
xor
std
nop
xchg
mov
cmp
or
pop
shr
xlat
gs
mov
fisubrs
das
imull
lea
mov
ret
in
ret
dec
int3
and
or
sbb
sahf
xor
gs
popf
inc
int
add
mov
ffreep
push
es
rclb
push
loopne
orl
insl
fucomp
xchg
push
mov
push
mov
lock
adc
pop
sahf
dec
stc
clc
fsubl
add
in
std
stos
xor
or
jnp
cmp
cmp
shl
mov
negl
mov
pop
jp
mov
inc
shlb
aaa
das
sbb
push
sbb
pavgb
repnz
or
aam
dec
inc
bnd
jns
and
and
jl
dec
adc
pop
sbb
in
lcall
popf
cmp
sti
outsl
jbe
push
mov
add
fimull
aas
inc
xchg
sub
mov
test
jbe
orl
addr16
sub
cld
fmulp
and
push
pop
xchg
outsb
pop
fsubrp
loop
inc
cltd
dec
sbb
push
and
lahf
out
aas
test
cmp
push
mov
xchg
and
addr16
aaa
adc
dec
mov
sti
stos
inc
je
jae
pop
inc
je
repz
out
test
push
cld
mov
push
insb
pusha
cltd
insb
sbb
push
jmp
cs
sub
cmp
dec
adc
cmp
divl
mov
cmpsl
push
push
loopne
xchg
jb
sub
inc
or
ret
repnz
mov
dec
and
and
std
xchg
fnsave
lods
gs
int3
sub
jne
add
sbb
or
sub
xchg
xor
ret
dec
in
loope
pop
adc
js
sub
cld
arpl
jg
adcb
fistpl
pop
sbb
xor
sbb
jns
inc
icebp
stos
jb
mov
cmp
mov
jbe
call
sub
mov
enter
sub
movsb
js
mov
sahf
add
ljmp
inc
pop
adc
ret
mov
lcall
adc
sarl
fiadds
lock
adc
inc
dec
dec
ss
add
sti
fstps
add
cmpsb
xchg
push
push
cmp
ja
iret
aaa
cmp
xorb
add
xchg
out
test
cmp
rcr
sub
inc
xchg
sbb
sbb
push
sub
push
mov
push
xchg
daa
jg
pushf
out
push
loopne
mov
xchg
push
hlt
pusha
movsb
xchg
mov
sahf
inc
push
cmp
adc
jbe
dec
adc
mov
imul
xor
push
ljmp
sbb
dec
js
cmp
mov
idivb
cmp
dec
jo
icebp
ljmp
arpl
sub
out
pop
add
lret
imul
sbb
push
jo
outsb
andl
dec
fldt
jb
outsl
aas
scas
sti
add
outsl
lock
and
rorb
mov
insb
push
in
jp
test
sbb
jmp
imul
push
pop
scas
inc
out
cmpsl
out
je
movsb
mov
push
jne
ficomps
lret
scas
jae
lock
jne
dec
sub
push
inc
mov
jge
mov
push
ljmp
movsl
fdivr
pavgw
sbb
fisttpl
jmp
push
push
push
adc
aaa
push
sub
sub
push
test
pop
es
femms
sysret
pop
pusha
mov
sbb
ja
icebp
in
cmp
push
lock
mov
mov
jnp
testl
add
push
outsl
and
push
mov
jbe
and
loop
inc
out
testb
pushf
xchg
mov
jg
xchg
or
movsl
shl
sbb
inc
dec
mov
leave
mov
stos
mov
push
fdivrl
repz
mov
fdivrs
cmp
popf
xor
shl
mov
test
in
outsb
hlt
leave
sbb
pop
push
jg
dec
jecxz
inc
pop
jne
loopne
or
hlt
outsl
adc
add
jbe
or
cmpsl
push
je
int3
out
xor
out
jmp
sub
mov
into
outsb
and
loopne
rol
ret
dec
ss
dec
jnp
leave
test
icebp
cs
jo
sub
mov
xchg
pop
xor
stos
xlat
repnz
lods
cwtl
jmp
dec
mov
mov
add
jmp
in
mov
sarb
and
mov
pop
sbb
aam
rdmsr
cmp
push
sbb
aad
jge
mov
push
les
neg
mov
pop
push
inc
insl
jo
inc
call
xchg
jno
adc
fwait
insb
jle
sbb
cs
movsb
push
mov
outsl
or
cli
adc
cwtl
int3
push
lds
and
xor
jle
mov
mov
fldt
arpl
jle
lods
jo
out
xchg
xor
xor
outsb
mov
push
out
mov
cmpl
cli
jp
xchg
cli
sbb
jae
jp
test
mov
add
out
cmp
rcrb
cli
out
aas
ret
aad
and
mov
sbb
xor
in
mov
mov
xor
mov
push
add
push
sbb
xchg
jb
fadds
jnp
adc
sbb
cli
mov
ror
test
mov
out
ficomps
or
out
fs
dec
push
aas
jg
rolb
dec
imul
mov
push
or
icebp
sbb
mov
rorl
fists
mov
loop
sub
cmpsb
sbb
aam
mov
lock
out
cmp
or
test
repz
inc
fcoml
rorl
mov
xor
mov
loopne
test
call
cwtl
fdivl
push
dec
pop
and
push
out
int3
sub
jo
mov
pop
pop
xchg
add
cmp
push
xor
xor
adc
push
pushf
cmp
js
sbb
mov
xor
inc
add
jl
xor
adc
jecxz
ss
dec
rcrl
pop
pop
inc
sahf
movhps
mov
sub
loopne
or
enter
sub
jnp
loop
inc
mov
and
leave
shr
pop
or
mov
xor
inc
xchg
push
out
fstpl
pop
insb
dec
sbb
mov
outsl
pop
shlb
sub
xlat
xchg
lds
dec
test
jo
stos
sbbb
push
push
inc
insl
gs
jns
sahf
jp
outsb
test
mov
shr
or
fwait
les
mov
nop
mov
jae
ret
inc
and
fidivrl
imul
add
faddl
mov
push
fdivl
out
movsl
and
lea
inc
dec
fistps
cmp
cmp
fnstcw
cltd
sub
aas
dec
je
mov
push
dec
pop
inc
iret
lret
dec
sub
jge
les
inc
mulb
pop
dec
loopne
ret
addr16
or
stos
mov
sub
mov
adc
popf
mov
jl
jecxz
xlat
pop
pop
fcoms
dec
xlat
mov
icebp
rol
sbb
rclb
out
sub
cmc
pusha
lea
cs
loope
rcrl
psrld
movsl
adc
cmpsl
imul
mov
cmc
dec
jno
insl
pop
cli
mov
inc
mov
filds
or
in
xchg
dec
rclb
cmp
xor
fdivrs
xchg
add
popa
cli
fs
pop
inc
test
jmp
mull
mov
jge
dec
cmpsl
aaa
addr16
or
mov
adc
inc
add
out
inc
loopne
sbb
sub
pop
call
xchg
outsb
test
faddl
in
ljmp
pop
xlat
sarl
clc
imul
fadds
andl
repz
adc
or
fwait
inc
inc
jg
and
jno
mov
inc
jmp
push
fstps
xchg
push
xchg
or
jne
cmp
xchg
mov
xlat
and
xchg
jp
lods
jno
lcall
ja
cmp
pop
arpl
lea
test
dec
pop
inc
in
ljmp
test
repz
mov
pop
imul
xchg
aam
pop
movsb
mov
pop
mov
add
std
rep
loopne
sub
or
mov
and
scas
lods
loope
ljmp
pop
mov
mov
shll
jle
movsl
lods
aas
mov
add
jae
adc
icebp
add
inc
stc
iret
mov
fimuls
pop
divl
push
adc
pop
push
inc
aad
fcomip
mov
insb
dec
out
sub
je
les
in
xchg
mov
idivl
aam
mov
loopne
stc
ljmp
push
xor
call
sbb
fisttpll
andl
jb
mov
pop
xchg
testl
jb
aad
adc
fiaddl
push
dec
stos
sbb
mov
adc
shr
in
imul
scas
and
das
test
nop
pop
push
sbb
dec
icebp
ljmp
rcrl
test
lods
jb
sbb
cmp
push
or
dec
fs
mov
aas
push
ss
repz
adc
insl
jmp
mov
ds
add
cmp
aam
adc
es
arpl
push
xor
dec
rcrb
fiaddl
sbb
lods
bswap
jp
lods
mov
es
mov
adc
push
xor
mov
dec
mov
out
in
cmp
jae
add
inc
sbb
adc
cmpb
fcmovne
add
cltd
dec
scas
jb
and
mov
mov
mov
jns
daa
mov
mov
inc
out
mov
xor
xor
pop
adc
pop
fisubs
out
fstpt
clc
enter
je
out
pop
outsb
testl
push
je
cmpsb
lock
pusha
xor
lea
loope
mov
or
pop
jg
daa
call
rcl
loope
ret
shl
stos
pusha
adc
and
mov
lods
test
and
pop
mov
or
jnp
xchg
shrb
stos
popf
xchg
push
arpl
test
xor
push
inc
lock
ss
and
inc
int3
imul
add
xchg
dec
sahf
shrb
mov
out
inc
movsl
jo
or
xlat
xchg
stc
push
shrb
hlt
cmp
xor
dec
xor
and
cmp
jo
out
arpl
xor
das
push
adc
xor
jb
in
movsb
inc
lock
jns
cmpsl
or
enter
jge
dec
pop
mov
push
adc
jb
mov
jno,pn
aas
cld
shr
or
aas
lea
mov
in
aas
loope
data16
xor
or
dec
push
mov
nop
jnp
ja
in
inc
mov
scas
cmp
repz
sub
out
mov
xchg
sbb
pop
cmc
movsb
xor
xchg
sbb
and
mov
insl
jns
push
mulb
or
mov
imul
mov
test
fidivrl
adc
testb
push
sub
loop
or
push
ljmp
lods
sahf
out
adc
ds
inc
mov
xor
je
mov
cmp
call
ficoms
mov
dec
push
aas
mov
ret
sub
xor
in
leave
cmp
orl
ret
pop
std
out
sbb
popa
divl
xchg
aaa
rcrl
cs
push
inc
je
mov
cld
inc
loope
sbb
jb
jo
push
sbb
lock
jns
xor
insb
fistpll
adc
adc
popf
out
outsb
ret
das
pop
pop
fmuls
jbe
pop
push
mov
mov
push
cwtl
lret
imul
mov
lods
loop
add
gs
sbb
sbb
imulb
mov
sahf
js
insl
je
fisubrl
jg
pop
hlt
jne
fcoms
pop
mov
dec
popa
aaa
pop
insl
push
and
xchg
je
mov
loopne
xor
lcall
push
gs
mov
test
xchg
xchg
sub
jno
addl
push
jecxz
mov
loope
mov
dec
mov
ret
sub
and
gs
iret
mov
add
xlat
pop
pop
out
mov
std
jb
mov
bnd
jl
pop
roll
pushl
pop
add
mulb
jecxz
scas
mov
shrb
mov
ret
movsl
jbe
stos
dec
js
push
rolb
jp
mov
mov
push
pop
jecxz
push
mov
test
mov
mov
aaa
sbb
mov
mov
lods
int3
adc
rcll
lret
lods
rcrb
sub
xor
enter
jl
xor
cmp
pop
cwtl
pop
pushw
cltd
ja
pop
and
mov
out
cld
les
call
imul
ja
jl
xor
test
mov
fs
and
sub
std
dec
jmp
ss
and
mov
sub
pop
lcall
mov
jae
push
iret
std
jne
cwtl
jecxz
inc
mov
cmp
ljmp
add
adc
mov
mov
lret
in
mov
add
cmp
les
pop
xlat
push
ss
gs
ja
inc
aaa
insl
fmuls
mov
rolb
mov
inc
call
pop
jb
bswap
mov
idivb
add
lock
dec
in
insb
push
adc
dec
imull
je
push
pop
lods
adc
fs
mov
mov
or
std
lods
call
popf
sbb
and
dec
imul
add
lahf
jmp
rcrb
push
rorb
jecxz
jb
adc
out
lea
ljmp
xor
loope
roll
xchg
ljmp
fucomp
in
adc
inc
dec
out
aas
in
popa
jmp
xor
mov
cmp
cwtl
loop
pop
cs
add
push
jmp
lods
call
pop
sbb
dec
sbb
or
arpl
jl
add
aaa
rorb
pop
xor
enter
test
outsb
xchg
mov
pop
sbb
enter
dec
xchg
pop
cli
xor
into
hlt
pusha
fdivrs
xchg
or
je
pop
test
push
stos
lar
out
movsl
test
push
jmp
ret
xchg
repnz
loop
push
jae
cmpsl
sarb
xor
dec
dec
rcll
ret
jne
add
aaa
or
gs
xchg
in
and
sbb
jecxz
test
mov
jp
fsubrl
push
mov
imul
xchg
dec
or
jbe
insl
sub
iret
popa
jne
repnz
bswap
pop
add
repz
bound
dec
into
xor
arpl
or
xchg
pop
xchg
cmpsb
cmp
mull
mov
xor
aaa
lret
sbb
mov
mov
lods
rolb
jp
mov
jo
lcall
inc
add
ret
das
xor
hlt
add
xchg
and
jne
and
fcmovnbe
mov
and
loopne
and
mov
daa
and
mov
mov
bnd
xchg
movhps
mov
jnp
jmp
pop
pop
xchg
movsl
in
ds
jb
jmp
cmc
jns
int
mov
fbld
push
mov
js
enter
jg
rorb
dec
jno
and
pop
dec
movsl
push
dec
shr
cmp
loop
sbb
push
adc
push
fnsave
das
jl
sub
and
xlat
outsl
mov
inc
mov
lods
jmp
out
imul
loopne
mov
scas
popf
mov
push
clc
xchg
mov
mov
mov
int3
outsb
test
mov
test
push
adc
inc
push
imul
lahf
mov
pusha
push
inc
jl
inc
adc
jl
mov
scas
inc
xor
jns
or
push
stos
mov
leave
xor
into
pop
pop
pop
lret
pop
add
xor
and
pushf
hlt
lock
pop
jns
or
xor
mov
mov
roll
mov
xchg
jo
das
in
out
std
int3
push
or
xlat
icebp
cmpsl
outsl
sbb
out
xlat
or
rcr
test
push
je
jmp
int3
inc
out
fisttps
push
outsl
push
jmp
sbb
leave
xchg
ret
xchg
loop
imul
lret
jle
jbe
or
or
shlb
push
cmpsb
ret
inc
aas
test
scas
xor
xlat
mov
std
ljmp
cmp
xchg
je
iret
adc
push
cmpsb
or
mov
jo
test
inc
scas
xchg
shrb
out
loopne
or
mov
adc
mov
push
push
cmpsb
xor
mov
mov
inc
cmp
jb
push
aam
in
ficomps
in
sahf
inc
dec
mov
jp
lahf
aam
push
test
lea
lret
adcl
inc
ds
cmp
rorl
and
ljmp
mov
lock
xchg
pop
in
fdivl
ja
std
cmp
xor
int3
std
nop
pop
cmp
enter
push
add
aam
sub
add
xor
shlb
xchg
inc
into
sub
sbb
ret
jnp
xchg
jb
loopne
add
test
xor
mov
lock
inc
pop
jae
or
dec
or
ja
fisubl
push
test
gs
dec
or
fnsave
jecxz
pop
add
fwait
dec
jo
mov
sti
mov
loopne
fldt
dec
int3
pusha
js
loop
popa
jmp
fists
dec
loop
mov
push
aad
ljmp
and
scas
mov
ljmp
add
fmull
arpl
push
cmp
adc
inc
or
flds
imul
cli
aaa
jecxz
and
lret
mov
jbe
add
sbb
adc
jns
jae
jecxz
jb
scas
and
sahf
push
test
dec
inc
adc
sub
ds
shlb
mov
mov
out
push
mov
sub
shlb
stc
mov
dec
xchg
enter
pop
or
imul
cltd
in
js
and
mov
push
mov
add
inc
cli
mov
inc
fsubs
sahf
gs
cmp
inc
inc
rol
lcall
push
sbb
inc
cmc
testb
sarl
iret
adc
out
mov
mov
out
cmpsl
inc
or
sbb
xor
and
adc
lcall
lea
pop
sbb
loop
mov
dec
jg
jne
pop
js
icebp
mov
mov
iret
sub
loope
ja
cld
or
out
xchg
xor
or
dec
mov
and
popf
push
push
lock
inc
xchg
jg
dec
jbe
push
outsl
clc
arpl
or
mov
or
cld
lock
jns
ljmp
add
mov
stos
cmpsb
aad
mov
mov
sbb
xchg
dec
add
ja
xor
mov
add
mov
push
rcrb
add
pop
xchg
mov
push
xchg
pop
push
dec
mov
cmp
call
sti
lods
stc
jle
lds
fsubrl
loop
hlt
sub
xchg
sub
jp
xor
jns
pop
insl
mov
push
loopne
jmp
imul
daa
inc
mov
fdivrs
test
inc
fdivr
ret
jmp
mov
mov
bound
lea
mov
inc
scas
mulps
insl
cmp
adc
adc
hlt
lock
loope
dec
mov
pop
insl
lock
les
shlb
ret
jmp
test
and
ja
pop
mov
jg
pushf
sbb
in
mov
arpl
xor
out
mov
std
pop
mov
push
and
push
cmp
mov
aaa
out
cmp
push
rcrl
cltd
xlat
enter
pushf
xchg
mov
inc
mov
iret
cs
je
add
loope
lcall
mov
nop
mov
pushw
jp
rorl
or
das
mov
test
dec
aam
addr16
mov
add
lods
pop
and
lock
sahf
into
enter
sub
mov
and
pushl
pop
add
and
iret
sub
lahf
xchg
in
fiaddl
and
outsl
sub
mov
mov
adc
cmp
or
cmp
inc
loopne
mov
or
xchg
lcall
pop
loope
cmp
adc
lds
or
call
stc
or
xlat
sahf
cli
jo
lock
sbb
fidivs
loopne
ficomps
loopne
lahf
xlat
inc
inc
dec
scas
arpl
adc
mov
dec
pop
lods
mov
int3
dec
lcall
pop
mov
adc
sbb
ss
outsl
jge
lcall
pop
pop
imul
and
and
mov
test
xor
fs
mov
pop
add
lods
jge
xchg
xchg
pop
fs
jnp
out
mov
aas
enter
mov
aaa
shrb
scas
cmp
in
xchg
mov
out
test
testl
jno
loope
loope
push
insb
loopne
dec
adc
push
sahf
mulb
mov
ss
int3
fsubr
movsb
outsb
test
jge,pn
push
xchg
fistl
scas
jge
xor
push
lock
ret
inc
cwtl
add
pushl
scas
and
ret
adc
mov
ret
iret
inc
out
mov
test
xor
push
popa
std
pop
js
daa
push
insb
stos
rcl
outsb
fsts
int3
sbb
dec
ljmp
int
stc
jecxz
xchg
mov
rolb
push
call
mov
pop
push
dec
subb
jecxz
adc
lret
loop
mov
jle
fimuls
inc
mov
dec
loope
test
jecxz
fs
jp
ret
into
mov
mov
nop
ror
aad
and
dec
rorb
js
shlb
jecxz
out
sub
dec
xor
cmp
pop
int
push
and
int3
mov
mov
sub
movsb
fmulp
inc
repz
jg
xor
xchg
psubusw
jns
mov
lahf
sub
sub
cld
xor
in
ror
xor
or
arpl
jg
js
jbe
sbb
clc
xchg
loopne
inc
adc
sub
dec
scas
insl
sub
dec
iret
push
ss
mov
mov
sub
sahf
repnz
mov
neg
add
mov
stc
cmp
xchg
sub
andl
push
sarl
lcall
xor
lods
mov
push
shr
jl
insb
or
loopne
mov
mov
les
lods
lea
mov
leave
and
mov
adc
cmp
push
addb
inc
mov
add
gs
jp
xor
leave
cmp
testl
addr16
cmp
out
cmpsl
addl
out
mov
cmpsl
push
pop
into
fsubr
dec
jb
xchg
xchg
lock
ret
sbb
ja
lret
sti
inc
imul
les
or
push
mov
pushf
rorb
push
das
push
clc
mov
jo
out
rorb
leave
mov
mov
mov
sub
adc
lds
xchg
fdivs
in
dec
push
inc
gs
or
movsb
arpl
mov
jmp
cmpsb
adc
pop
sahf
ja
jno
jns
mov
fildll
test
mov
push
orb
pushl
and
sub
adc
leave
or
mov
pop
xor
jle
out
xchg
leave
pop
into
out
xchg
jo
mov
mov
loop
jnp
jge
jmp
nop
test
leave
or
jmp
call
inc
push
je
dec
sbb
dec
pop
push
jg
mulb
ljmp
dec
jmp
push
in
mov
adcl
in
fs
leave
lcall
mov
mov
enter
mov
jne
in
mov
stos
pushf
cs
sbb
cwtl
dec
pop
add
dec
push
xor
aas
pop
cmc
inc
xchg
adc
fisubl
mov
data16
xchg
cmp
mov
arpl
dec
enter
fbstp
ret
and
mov
xor
mov
fidivrs
inc
jb
pop
icebp
daa
hlt
fcoml
mov
jbe
arpl
and
pop
js
jmp
adc
push
int3
fsubr
sub
iret
xchg
and
sahf
jb
sbb
pop
sbb
jb
sbb
enter
sbb
shlb
cmp
pusha
and
xor
xor
adc
test
mov
loopne
mov
adc
and
ss
or
xchg
jno
xor
repnz
fnsetpm(287
push
shll
dec
ret
orb
shrl
mov
dec
lcall
xchg
test
mov
xor
nop
adc
or
mov
push
cld
jp
push
pop
call
push
scas
aas
pop
pop
fadds
add
jo
push
loopne
xor
test
push
jb
dec
mov
notb
inc
inc
lds
arpl
and
mov
lock
sub
push
mov
pop
pop
xor
addr16
xchg
fcmovbe
mov
xlat
ret
fstps
cmpsb
shlb
sahf
xchg
das
lret
test
shlb
dec
aaa
jns
mov
movsl
lret
and
sar
cmp
mov
and
xchg
gs
pop
jecxz
in
leave
in
jnp
out
popf
imul
adc
jbe
dec
fs
stc
rcr
aaa
add
push
mov
divl
aas
push
jno
inc
push
insl
movsb
faddl
repz
sbb
sub
jno
mov
xchg
xchg
icebp
push
mov
inc
mov
adc
ja
mov
pop
aaa
jmp
scas
data16
jp
xor
inc
fwait
inc
iret
test
loopne
fcoms
stos
test
int3
dec
jmp
loop
sbb
insl
mov
ss
mov
push
ret
fcomp
mov
adc
inc
cmp
out
clc
xchg
mov
jge
loope
xchg
ret
jecxz
lcall
fdivrp
lock
daa
dec
int3
out
jb
inc
outsl
ret
ja
psrlw
loope
std
mov
cmpsl
add
movups
aam
repz
paddsw
jno
test
dec
mov
and
mov
addr16
repz
dec
or
dec
and
add
aam
les
popf
leave
inc
movsl
mov
mov
in
ret
push
jp
addr16
ret
outsb
jo
sub
fimuls
xor
mov
xlat
scas
xchg
and
xor
stos
push
pop
sbb
test
outsl
cmp
mov
jecxz
divl
stos
je
add
jo
jecxz
addb
sub
subl
and
ficoms
jo
notl
mov
push
xchg
nop
sti
enter
jge
or
les
insl
jmp
inc
xchg
in
fcmovb
cmpsl
push
fcoms
icebp
inc
add
int3
fildll
mov
mov
pusha
dec
inc
fisubrl
cld
pushf
cmp
ret
dec
inc
jle
out
push
add
movb
push
adc
fnstenv
leave
mov
lds
cmpsb
mov
cmc
out
fwait
das
cmpsb
xchg
mov
movsb
mov
dec
rcrb
insl
leave
or
ret
mov
loopne
imul
scas
inc
adc
xchg
jb
popa
mov
mov
int3
cmp
jecxz
sub
nop
xchg
test
xlat
lods
sbb
movsl
push
test
mov
jb
mov
or
js,pn
pop
out
and
pop
mov
lock
ljmp
scas
push
ret
sbb
add
mov
mov
out
sub
adc
jb
cmp
sbb
jnp
push
add
fidivs
test
inc
xchg
repnz
das
aaa
pusha
out
out
cld
orl
adc
and
in
iret
sti
sti
mov
andb
sub
or
out
mov
pop
icebp
sbb
sbb
adc
std
test
mov
xor
sbb
pop
mov
aam
rol
or
jg
popa
xchg
rorb
push
js
cwtl
mov
or
dec
orl
mov
rol
pop
mov
add
sub
pop
pop
xor
mov
pop
ja
sub
mov
sub
pop
js
xchg
idiv
sub
and
cwtl
ja,pt
dec
lock
add
popa
mov
fidivl
enter
loope
cmp
jae
icebp
out
loopne
sub
stc
pmulhw
adc
or
cmp
and
arpl
pop
imul
lock
clc
jbe
std
adcb
mov
sbb
adc
push
fwait
pop
sahf
test
inc
lock
xchg
adc
xchg
add
sbb
push
outsb
movsl
push
out
add
leave
out
sbb
orl
mov
rclb
push
or
outsl
rcrl
add
push
scas
sbb
inc
shrb
adc
sub
enter
xchg
popf
mov
dec
sbb
negb
lea
push
lea
fldenv
scas
mov
test
adcl
cmp
pop
clc
cltd
xchg
push
sbb
jmp
jp
imul
mov
ss
rol
outsb
aas
cwtl
shrl
clc
hlt
imul
push
mov
sub
lret
mov
adc
push
fldt
cld
lock
hlt
jecxz
cltd
push
lea
inc
filds
rclb
fidivrs
call
mov
jecxz
push
leave
xchg
into
dec
xor
out
std
and
aas
inc
loopne
mov
xor
cwtl
fldt
or
mov
xor
cli
vpmacswd
mov
cld
add
fmull
ss
xchg
test
cs
or
jns
scas
push
fcmovnb
shlb
add
test
inc
dec
lock
scas
jae
jae
add
or
pop
les
adc
mov
mov
test
inc
in
mov
mov
sub
pop
push
fmull
pusha
lret
push
insb
mov
loop
pop
xor
mov
jnp
stc
inc
test
loopne
xchg
je
or
dec
je
jns
ljmp
stos
mov
inc
dec
inc
test
mov
xchg
and
dec
iret
pop
push
and
outsb
mov
clc
loop
out
sarb
rol
mov
pop
jl
sti
adc
push
pop
fnsave
rcl
add
adc
cmp
sbb
lcall
sbb
loopne
jb
fstpl
cwtl
adc
adc
and
jae
mov
and
mov
hlt
ds
nop
jg
pop
xchg
adc
mov
imul
icebp
sub
mov
dec
fdivrp
ud0
adc
xchg
pushf
inc
sahf
shll
cmpsb
jp
push
sbb
in
xor
adc
cmp
into
and
lods
sahf
in
test
loopne
mov
inc
inc
rorl
sbb
adc
jne
decl
mov
inc
cmp
nop
in
movsb
pop
pop
push
mov
lahf
lea
pop
mov
dec
movsl
cmp
xchg
or
popf
mov
popa
xor
out
add
add
lds
push
je
addr16
mov
in
into
clc
cmp
imul
mov
cmp
mov
scas
ja
cltd
xchg
std
mov
fnstenv
fldl
mov
enter
call
fimuls
loopne
sbbb
mov
xor
xlat
mov
bt
mov
pushf
xlat
testl
jbe
outsl
dec
shrl
sbb
out
lahf
test
pusha
adc
mov
rclb
or
insl
insb
adc
ja
aam
sub
dec
pop
mov
into
icebp
pop
lret
lock
fildl
ss
into
xor
fcompl
jae
jp
push
out
filds
or
jg
sub
xchg
pushf
cltd
xchg
repnz
lods
mov
push
hlt
out
loopne
xor
es
je
inc
dec
inc
xlat
ret
xchg
stos
dec
aad
xorl
cmp
xor
xor
mov
mov
outsb
in
mov
jns
and
xchg
mov
push
inc
push
dec
mov
mov
fists
loop
je,pn
lret
cmc
fcoms
popa
mov
jmp
pop
xor
dec
cmp
imul
in
rol
cmp
jg
xchg
loopne
pop
mov
jnp
lock
jb
test
xchg
add
and
out
add
inc
aam
lock
mov
shl
aaa
lret
cmp
cmp
and
ret
loop
jne
loop
mov
mov
mov
iret
add
add
sbb
inc
clc
popf
mov
loopne
das
xchg
pop
in
arpl
rcrb
adc
add
inc
out
lea
adc
jmp
icebp
lock
pop
add
adc
into
push
push
aad
out
les
xchg
stos
and
sbb
mov
adc
or
daa
int
lahf
inc
test
sub
aam
or
leave
test
pop
add
out
xchg
pop
push
outsb
mov
mov
ja
xor
mov
arpl
movsl
mov
lcall
test
jmp
inc
or
sbb
inc
std
jp
jbe
jmp
dec
lds
ds
push
xchg
iret
jae
ja
inc
inc
or
dec
or
lret
sahf
movsl
loop
push
rcrb
mov
dec
adc
pop
cmpsl
jb
sub
prefetcht0
add
js
inc
loopne
into
sbb
push
cmpsb
xchg
pop
and
mov
shll
mov
dec
imul
mov
pop
mov
rorb
mov
cmp
into
sbb
push
push
push
push
inc
fs
inc
out
mov
xchg
or
mov
inc
cmp
je
cmpsb
pushf
mov
sbb
mov
xlat
xor
mov
imulb
rcll
sti
xchg
cmpsb
shlb
cmpsb
js
push
insb
aad
and
add
gs
cmc
popf
stos
mov
jmp
xchg
sub
push
xlat
cmp
push
pushf
mov
sbb
fwait
cld
dec
xchg
mov
or
sub
xchg
jmp
or
adc
jmp
sbb
call
push
aas
pop
xlat
jnp
sub
loope
jle
mov
push
dec
dec
inc
push
js
fnstenv
das
jecxz
xor
and
rclb
cmp
dec
xor
test
sbb
loope
mov
shlb
cmp
stos
jno
xlat
inc
ja
test
push
mov
mov
loop
sarl
jnp
xor
dec
in
fists
inc
pop
dec
iret
mov
mov
outsb
jle
push
cmp
fmull
loopne
push
and
mov
js
sbb
sbb
mov
cmp
nop
fs
xchg
ljmp
jp
nop
in
rclb
push
gs
dec
cwtl
fisubrs
pushl
ret
icebp
sub
fistpll
js
cltd
mov
xorb
inc
gs
dec
pop
mov
xchg
cmp
lock
mov
lret
test
sub
dec
shrb
add
cs
mov
mov
jae
mov
mov
pop
lds
jo
or
es
push
xor
clc
loop
push
sbb
lret
mov
mov
inc
loopne
lods
inc
cmp
movsl
adc
jb
mov
mov
hlt
test
imul
cwtl
aaa
andl
std
cltd
sbb
js
adc
lahf
dec
xchg
or
sub
imul
cmp
fmuls
ljmp
cmp
adc
inc
loopne
test
mov
out
add
fimull
jnp
xor
les
mov
inc
and
lcall
aas
sub
fildll
test
lcall
out
pop
mov
jecxz
fs
rcll
add
xchg
shlb
pop
loopne
push
clc
cwtl
pop
movsb
icebp
inc
push
outsl
dec
cld
insl
out
pusha
xchg
testb
sub
push
or
rcrb
into
sahf
cli
sub
ret
sub
mov
inc
dec
jne
adc
mov
dec
sbb
or
insl
in
or
mov
mov
fimull
jbe
out
cmp
inc
cmp
mov
mov
jmp
faddl
fidivrs
scas
push
pop
cmp
popa
testl
insl
int3
jae
aam
dec
mov
or
push
push
cmp
dec
xchg
or
mov
stos
mov
mov
scas
jp
pop
adc
and
arpl
mov
rcl
mov
sub
test
pop
push
gs
mov
adc
aam
int3
mov
sub
jp
enter
aas
fildll
or
and
add
lret
aam
or
lods
xor
into
dec
jo
jnp
fstpt
dec
ds
sbb
loopne
hlt
sbb
dec
mov
xchg
inc
je
lcall
jnp
adc
cwtl
add
push
lods
in
and
and
inc
jb
fistpll
rclb
jecxz
fs
lcall
out
ret
xor
pop
cmp
push
pop
xchg
mov
out
and
xor
sbb
stos
in
stc
stos
pop
jno
jecxz
push
jp
cmpsb
mov
push
jmp
cmpsl
xchg
dec
scas
mov
jl
or
jmp
sub
push
loop
lret
sub
inc
dec
mov
adc
test
pop
cmpps
test
rorb
jno
lods
dec
add
push
add
cli
int
mov
neg
dec
imul
loopne
movsb
cmp
lock
popa
aas
movsb
ljmp
ret
movsl
out
jno
sub
rcrb
adc
jne
mov
incl
cmp
ret
jmp
cs
gs
inc
aam
les
mov
lcall
xchg
dec
mov
jo
push
xchg
js
xchg
lods
sbb
mov
lds
mov
insl
adc
jmp
xor
add
popf
sbb
rcrb
and
in
imul
stos
mov
inc
inc
or
push
or
cmp
pop
dec
enter
dec
outsl
sar
xchg
pushf
mov
push
mov
push
xor
adc
enter
xlat
call
stc
cmpsl
push
add
std
repz
mov
add
call
mull
xorb
dec
and
or
adc
sbb
aam
roll
outsb
fisttpll
mov
pop
mov
ret
sub
jns
loope
insl
fisubl
or
pushf
or
and
in
mov
aas
jne
lods
mov
jbe
lcall
arpl
dec
or
adc
inc
out
fisttps
test
mov
mov
fs
xor
jns
dec
ja
loop
shrl
es
loopne
sub
dec
and
cltd
sub
scas
call
repnz
sbb
push
loopne
repnz
rol
cmp
or
inc
xor
fwait
sbb
lock
mov
mov
icebp
sub
fldenv
push
aad
xchg
ss
mov
push
and
rcrb
or
push
int3
add
push
das
lret
iret
inc
sub
fimull
adc
mov
dec
push
mov
mul
pop
jb
jns
adc
jnp
imul
dec
fsubp
or
inc
or
clc
rolb
or
xchg
adc
push
stc
aad
sbb
ficoms
sub
ss
mov
push
jmp
xchg
cmc
sub
pushf
jge
test
aam
stos
mov
inc
mov
sub
and
xchg
xchg
sbb
imul
mov
idivl
adc
arpl
call
xor
push
test
icebp
adc
loope
fmulp
insb
mov
jb
pushf
loope
ds
ret
or
pop
scas
dec
mov
enter
jae
data16
xchg
mov
cltd
push
mov
fdivl
faddl
pop
cmc
int
cmpsl
inc
enter
insl
or
pop
andl
adc
xchg
mov
sbbb
jno
das
je
pop
mov
repz
sub
jmp
scas
ljmp
jp
xor
cmp
adc
fcompl
imul
cmp
add
or
push
int
fnstsw
outsl
xor
mov
mov
add
inc
push
mov
pop
mov
and
push
push
scas
mov
loop
mov
mov
or
fs
imul
xchg
outsb
jo
adc
movups
dec
sahf
push
sub
aas
cmp
mov
jno
scas
adc
addr16
xchg
mov
orl
icebp
lods
xor
js
nop
pop
cmpb
mov
jl
push
popa
ucomiss
pop
jg
sbb
xor
adc
cmp
call
jno
icebp
adc
jns
xchg
xorl
pop
int3
and
mov
outsl
dec
sbb
xchg
or
dec
xor
movsb
aaa
shll
and
sub
sub
inc
xchg
in
lock
inc
sbb
cmpl
mov
cld
fldcw
negb
idiv
inc
rcrl
loopne
cld
insl
sub
pop
xlat
dec
imul
xor
repnz
cld
add
das
xor
fcmovb
out
mov
scas
clc
xchg
lret
jmp
rorb
lods
test
mov
lods
mov
add
pop
push
xchg
in
push
sub
addr16
mov
sysexit
or
xor
arpl
bound
aam
sub
fs
mov
or
inc
mov
dec
cmc
cmp
pop
cmp
dec
aad
inc
push
outsl
aad
call
xchg
pop
xchg
sbb
mov
rclb
fcoml
inc
and
sub
push
ja
cltd
pop
xchg
pop
test
pop
pop
into
dec
mov
nop
cmp
xchg
mov
inc
pop
scas
pushf
mov
aas
jmp
pop
push
lds
out
jns
mov
xchg
push
mov
xchg
jne
test
mov
sbb
push
int
repz
and
fldcw
rorl
repnz
icebp
jae
cmp
sub
int
mov
std
repnz
jnp
ja
enter
xorl
push
fimuls
lds
jmp
cmc
iret
dec
sbb
out
pusha
cli
rcr
ja
gs
aad
fucomp
test
rcr
testb
ljmp
aam
jmp
jp
inc
lahf
ljmp
inc
out
test
push
sbb
outsl
adc
cld
jae
dec
inc
pop
and
clc
lds
jge
sbb
cmpsl
outsb
and
aas
push
popf
scas
sbb
into
rclb
push
push
jle
mov
lret
xchg
push
or
or
inc
notl
in
pusha
push
mov
mov
jmp
fdivp
pop
dec
sub
lahf
addr16
icebp
mov
popa
scas
push
inc
or
data16
push
mov
adc
cmpsl
push
hlt
fs
jb
jns
popf
mov
loope
int
rorb
xchg
nop
jo
divl
cwtl
jo
js
call
and
outsl
xchg
clc
outsl
out
sbb
aam
lea
mov
xor
dec
testb
push
mov
sub
push
lahf
fstp
mov
jbe
fwait
jbe
clc
mov
or
shll
fs
fdivrs
pop
js
mov
mov
xlat
adc
mov
lock
push
inc
dec
repnz
mov
aad
imul
adc
add
inc
iret
fbstp
js
jo
xchg
xor
mov
xor
add
push
mov
sub
sahf
lahf
jno
sti
sub
movsl
or
mov
in
add
xor
fiadds
lahf
xor
mov
adc
ss
aaa
bound
clc
fldenv
test
std
testl
in
sarl
cld
shl
fcomi
fwait
sub
lcall
icebp
dec
jne
lods
jmp
fld
cmc
push
sub
arpl
push
movb
and
lock
in
push
xchg
mov
pusha
dec
jnp
mov
mov
cld
mov
adc
add
cli
test
lock
xchg
call
pushf
push
enter
mov
insb
int3
xor
add
or
mov
push
adc
cmp
fwait
nop
sbb
es
adc
jb
mov
cmp
cmpb
adc
push
mov
in
push
insl
ret
add
sbb
dec
jge
jbe
push
outsl
sub
hlt
sub
jecxz
ja
ss
mov
inc
sbb
sbb
bound
sbb
je
dec
cltd
jg
mov
sbbl
test
and
push
mov
dec
dec
cmp
std
std
jge
adc
sarl
jae
inc
jo
adc
inc
sti
imul
loopne
inc
js
outsb
adc
int3
inc
lret
loope
gs
xchg
movsb
scas
lahf
dec
xchg
ss
mov
xor
clc
dec
je
mov
movsb
ljmp
decl
out
loope
insl
adcb
sar
loope
xchg
mov
sub
xor
in
aad
xchg
cwtl
pop
cltd
jnp
dec
push
and
push
ficoms
mov
pop
push
pop
or
in
and
mov
adc
or
in
jo
out
or
xchg
mov
mov
dec
dec
jbe
fs
loopne
mov
add
addb
pop
in
mov
mov
imul
jbe
in
frstor
ljmp
sbbb
push
adc
lods
dec
jmp
stos
sbb
lods
mov
stos
mov
cmp
xor
aaa
adc
and
and
push
jbe
movsl
repz
mov
pop
jmp
fmull
mov
sub
cmp
mov
mov
mov
fimull
mov
lret
out
and
dec
inc
iret
mov
jp
inc
js
mov
mov
out
jo
out
push
sub
arpl
xor
lret
inc
pop
jl
scas
arpl
mov
gs
cmp
jo
jmp
dec
sub
push
sub
repnz
mov
push
lret
aaa
sbb
aas
xorb
in
nop
fistpl
mov
xchg
inc
aas
lods
or
lahf
or
mov
or
scas
mov
xchg
jg
cmp
out
sub
push
xor
aam
nop
decb
sub
mov
outsl
sbb
jo
push
sbb
lret
add
adc
add
lret
pop
aas
scas
pusha
in
rclb
aaa
cltd
lret
aas
jl
xor
mov
jbe
loope
js
xchg
pop
xor
loope
or
shlb
dec
push
notb
mov
xchg
adc
inc
insb
add
cmpsl
loop
cmp
xor
inc
arpl
das
lock
push
mov
jecxz
xchg
test
cmpsb
adc
icebp
mov
inc
mov
adc
mov
push
add
pop
sbb
loope
dec
lock
mov
in
jns
addl
sbb
int3
pop
mov
std
iret
mov
adc
dec
mov
pop
clc
cmpl
adc
cmp
xor
insl
xor
call
aaa
imul
pop
lcall
and
pop
cmp
push
mov
loope
mov
cmp
sub
test
fnstcw
dec
adc
jo
mov
push
inc
into
add
repz
push
mov
cld
decl
scas
pushf
lcall
arpl
mov
pop
out
jbe
dec
mov
adc
shl
ret
xor
in
loop
imul
add
or
js
sub
aam
gs
xlat
test
xor
ret
xchg
insl
sub
sbb
pop
push
jo
test
xchg
lret
push
cmpsb
adc
out
xchg
test
pushf
add
pop
addr16
out
dec
xor
push
loop
fs
pop
mov
test
fidivrs
loope
ljmp
out
out
ret
mov
add
out
pop
int3
adc
sbb
fdivs
jb
jae
inc
arpl
add
push
inc
shl
imull
nop
mov
jnp
push
repz
jp
and
sbb
mov
jo
and
and
je
test
enter
in
lret
lret
pop
xor
clc
cli
fcmovnu
mov
mov
xchg
aam
mov
fcoms
out
and
mov
adc
cmc
popa
xchg
dec
sbb
int
sbb
test
mov
jns
call
pop
aas
add
lret
push
and
sbb
lcall
cld
iret
inc
and
mov
mulb
inc
pop
pushf
lcall
into
xor
sbb
add
stos
cmpsl
sbb
lahf
cwtl
add
cld
xor
or
repz
pusha
call
cmc
gs
mov
test
push
fwait
outsl
out
push
cwtl
hlt
imul
xor
add
insb
or
bound
mov
jg
mov
stos
dec
inc
rorb
pop
icebp
mov
xor
enter
negl
push
sahf
call
adc
pop
ret
sbb
sbb
add
insl
aas
cmpsb
dec
sub
mov
cmp
add
dec
sbb
test
mov
mov
fisttpll
lods
aaa
push
outsl
f2xm1
dec
je
add
and
mov
lock
mov
out
lock
rcrl
jo
mov
jecxz
dec
loop
jle
loop
out
adc
mov
mov
pop
iret
cmp
jmp
push
enter
divb
or
dec
test
or
push
mov
jp
or
push
ljmp
mov
xor
pop
inc
hlt
xchg
loope
lock
orl
int3
mov
lods
stc
mov
mov
jo
insl
hlt
fimull
mov
cld
not
test
push
sub
jnp
ds
adc
xor
sub
inc
and
and
mov
add
jae
jle
mov
and
mov
jl
and
mov
mov
nop
push
jo
flds
adc
and
add
add
or
icebp
iret
addr16
mov
mov
and
sbb
rcrb
mov
scas
out
inc
mov
pop
lcall
movl
repnz
add
jo
xor
pop
mov
rcrb
shlb
mov
add
mov
ljmp
lahf
inc
inc
sub
jp
fwait
and
xor
mov
add
mov
test
xchg
ret
ficomps
lcall
jg
aaa
and
cmpsl
lock
and
cmpb
cli
push
sbb
jp
dec
jbe
jne
ret
in
int3
idivl
pop
cmp
jo
mov
jbe
scas
jne
cld
test
mov
cmc
push
das
mov
sub
test
add
das
shr
sti
jno
data16
negb
mov
push
aad
rcl
push
pop
jle
dec
sub
sbb
push
xchg
pusha
pop
in
or
int
loop
xor
cltd
dec
mov
movsl
inc
enter
out
and
rcr
push
jno
jl
pop
adc
int3
mov
jg
imull
xchg
push
outsb
mov
leave
icebp
mov
push
add
xor
loopne
aaa
mov
in
sub
rcrb
fiaddl
jmp
add
xor
add
out
mov
fildl
adc
xlat
mov
mov
mov
lcall
cmp
mov
popf
repz
mov
loop
push
mov
fsubl
stc
cltd
das
cwtl
xchg
inc
pusha
out
jb
lock
dec
mov
pop
push
inc
xor
mov
pusha
loopne
sbb
mov
fsubrl
xor
out
je
dec
in
lea
call
jl
nop
inc
sar
jmp
cmpsb
ljmp
mov
or
in
rcrb
in
loope
scas
inc
mov
call
mov
cmp
mov
ja
adc
mov
test
jl
or
or
and
or
sbb
stc
push
adc
dec
cmpsb
imul
scas
and
inc
dec
mov
jecxz
xchg
push
xor
and
bound
sub
lods
inc
push
in
push
mov
cmpsb
inc
and
iret
or
or
aad
mov
lock
xchg
fwait
push
adc
xor
jb
sub
dec
xchg
cmpsb
xchg
xor
test
and
mov
mov
scas
divl
or
dec
sub
xor
push
pusha
adc
push
outsb
shl
sub
sub
jae
sbb
xchg
shrb
dec
cmp
push
clc
scas
in
mov
cmp
cmc
insl
sbb
mov
adc
rcl
mov
test
cmp
push
cwtl
mov
insl
fistpl
or
mov
sbb
lods
scas
popa
fistpl
pop
add
insl
enter
cmp
lret
rorb
int
pop
add
test
adc
dec
aad
adcl
xor
stos
fisubl
out
fcomps
mov
mov
outsb
shl
pop
cwtl
dec
xchg
int
shrb
dec
movsl
pop
inc
lods
jbe
fs
jmp
add
pop
fdivl
or
std
cmp
aam
add
insl
movl
pop
pop
jno
data16
xor
ja
or
aad
push
orb
call
jl
cmp
insb
lds
in
pop
sub
push
pop
fistpll
pop
mov
jle
stos
xor
movsb
call
insb
xor
jge
inc
clc
xchg
sub
mov
jno
repnz
out
dec
and
add
inc
loopne
inc
inc
cltd
dec
rcrl
or
xor
mov
imul
sub
inc
push
xchg
aam
imul
loop
jno
push
lea
cmpsb
enter
dec
movsl
int
jb
insl
jle
jmp
or
pop
in
shlb
cmpsl
shl
mov
test
cld
mov
inc
add
inc
push
out
sahf
ds
push
jae
mov
mov
pop
or
inc
pushf
in
divl
add
loopne
or
mov
fsub
jg
ret
in
shl
cmp
call
sbb
adc
inc
push
mov
xchg
and
adc
aas
insb
adc
xchg
push
jo
jmp
sbb
pop
into
jg
jl
jl
adc
inc
mov
and
mov
pop
ss
stos
std
or
sub
fsubl
or
stc
adc
cmpsl
cld
or
loope
inc
jp
mov
sahf
xchg
xchg
pop
cld
pop
shlb
dec
scas
mov
or
mov
jns
pop
mov
jb
addr16
fsubrp
xor
mull
aaa
mov
xchg
fbstp
mov
sbb
jo
cmpsl
mov
sbb
arpl
stc
imul
test
loopne
or
roll
pushf
jecxz
sub
cmp
aas
mov
or
jno
movl
loope
popf
mov
fimull
cmp
cmp
dec
jge
push
fstpt
jns
mov
push
pop
dec
leave
xor
push
scas
std
sbb
pop
movsl
ljmp
gs
cld
jge
fcomps
std
test
loope
xor
inc
dec
arpl
mov
mov
adc
or
mov
or
sarb
mov
std
xor
lret
push
jnp
push
xchg
lret
mov
out
cmp
mov
pop
cmp
ud1
jae
repnz
pop
mov
std
lcall
cmpsl
out
cs
sub
mov
out
js
out
jne
int3
in
sbbl
loop
das
pop
mov
aaa
push
mov
adc
imul
das
jns
cwtl
in
jno
adc
idivb
test
out
or
gs
mov
out
int3
dec
push
jnp
cmc
aam
int3
int
mov
repz
or
lock
fisubs
jo
movsb
add
shl
ds
repz
jbe
mov
add
xor
icebp
test
repz
ret
xor
cltd
dec
lods
sbb
lcall
jae
jno
lock
stc
adc
movsl
push
inc
or
inc
in
xchg
popa
mov
roll
pop
sbb
dec
mov
aad
adc
ljmp
push
sti
jb
lods
xchg
in
xchg
fidivrs
pop
test
or
stc
lret
outsb
push
mov
push
or
pop
or
aad
les
mov
mov
test
pop
adc
xor
stos
sub
sbb
in
fistpl
mov
in
in
sub
xchg
sbb
imul
inc
outsl
or
das
fcoml
mov
fstps
pop
insl
jecxz
adc
loope
in
nop
xchg
mov
mov
pminsw
pop
inc
dec
in
test
call
scas
mov
clc
arpl
es
iret
pop
or
xchg
lret
sbb
scas
jae
cmp
in
or
in
mov
push
scas
xchg
xchg
push
jecxz
not
xchg
loop
push
adc
filds
repnz
push
xchg
test
test
mov
cmp
data16
xor
test
mov
ljmp
sbb
xchg
fdivrl
mov
mov
push
lods
fwait
mov
in
test
rclb
arpl
fwait
dec
loope
inc
xor
sub
and
out
arpl
or
lea
lret
pusha
insb
inc
sbb
pop
rcl
test
call
hlt
add
lahf
push
loopne
imul
add
mov
ret
popf
fisubs
ret
into
add
sbb
pop
mov
lret
adc
add
mov
bound
pop
ljmp
inc
sbb
adc
bound
shr
cld
in
push
cmp
xchg
and
not
loop
fs
cld
stc
fldt
or
call
mov
rcll
aam
adc
mov
mov
insl
outsb
inc
les
les
imul
or
popf
jecxz
ret
fistpl
dec
sub
mov
test
outsb
jnp
xchg
pop
data16
sahf
xchg
inc
pusha
adc
lcall
mov
adc
out
pop
pop
dec
cmpsl
inc
mov
mov
bswap
dec
mov
popf
ret
fsts
xchg
insb
add
loope
cltd
lods
fs
pop
mov
and
or
repz
jg
call
insl
jp
mov
js
in
stos
add
movsb
mov
dec
xlat
out
outsb
jge
loopne
xchg
and
insl
push
xchg
je
adcl
xchg
push
loopne
sahf
hlt
loop
jne
aas
subb
aaa
cltd
or
mov
ret
mov
jae
insl
outsb
std
fldenv
xor
aam
push
inc
or
insb
std
test
xlat
dec
mov
rol
insb
xlat
push
xorl
gs
xchg
mov
dec
stos
leave
jmp
or
incl
adc
loopne
fdecstp
push
out
pushf
aad
ja
cmp
pop
xchg
outsb
dec
setns
sub
cmp
test
in
lods
lock
sbb
jmp
int
and
pop
das
ds
push
sbb
ljmp
mov
or
loopne
into
xchg
mov
add
push
dec
int
xor
fs
dec
icebp
fadds
je
inc
pop
xchg
shl
cmp
lret
or
cmpsl
jnp
xchg
push
cmp
inc
xor
inc
ljmp
jp
ret
ljmp
repz
popa
mov
pop
test
aam
inc
clc
lods
shll
loopne
mov
fcoml
test
shll
adc
mov
fs
jmp
adc
mov
jge
lahf
divb
iret
push
lret
vmwrite
in
xchg
dec
jae
fdivs
in
mov
orl
or
mov
inc
fs
xor
pop
pop
adc
stos
scas
icebp
ds
scas
out
cwtl
loop
ljmp
ret
jmp
cmp
std
fbstp
jnp
test
int3
nop
daa
cmp
ss
dec
xlat
mov
xor
test
pop
cmpsb
sti
mov
push
mov
dec
xor
or
sbb
fcmovbe
adc
push
test
pop
adc
negb
aas
out
fstl
js
mov
or
inc
out
nop
out
pop
out
fs
imul
leave
pusha
fs
or
dec
bound
xor
sbb
fimull
sarb
dec
sti
dec
inc
les
mov
inc
in
push
push
push
add
idivb
ret
fcmove
js
sti
push
xchg
sahf
in
test
ret
xchg
sub
rcrb
int3
xor
fistps
jae
push
pop
inc
adc
rolb
jne
rorl
stos
dec
add
sbb
test
xor
lods
inc
xor
push
sub
or
ss
movsb
push
fildl
ss
icebp
bound
mul
loop
pop
das
insl
and
inc
in
das
out
addb
push
pop
mov
aad
mov
sbbb
add
pop
add
cwtl
or
push
rcrl
out
xchg
and
outsb
sub
fiadds
cs
fsts
mov
xchg
jbe
shlb
xchg
adc
in
movsb
pop
xchg
loopne
push
leave
sahf
les
jnp
lret
rorb
push
cmp
mov
ffree
mov
mov
adc
pop
in
push
sahf
pop
ss
ljmp
mov
adc
mov
testl
iret
pop
icebp
jns
sahf
pop
pop
mov
and
lods
sub
xchg
xchg
jle
into
scas
mov
jmp
or
pop
adc
aam
iret
pop
push
nop
mov
imull
lcall
cwtl
push
jmp
add
mov
loop
mov
stc
inc
movsb
js
scas
xorb
mov
push
mov
popf
mov
mov
aaa
jge
lahf
mov
push
add
cmpsl
movsb
mov
lods
inc
pop
iret
in
sbb
add
sub
xchg
enter
xchg
dec
and
jle
push
movsb
mov
leave
lock
adc
out
loopne
mov
mov
fists
fwait
movsb
mov
in
lcall
sbb
lahf
dec
fcoms
adc
fwait
mov
xor
out
subb
sub
loope
stos
lods
push
dec
pop
sub
push
or
pop
outsl
and
xchg
push
sub
or
popf
xorb
repz
sti
sbb
pushf
push
or
leave
stos
mov
adc
in
sbb
xor
lret
mov
hlt
xchg
test
mov
insb
mov
push
test
push
cmp
or
aam
sub
adc
mov
shll
push
inc
mov
cmp
shll
addr16
data16
cmp
mov
adc
pop
jo
or
cwtl
lods
testb
call
jle
test
fs
adc
inc
ja
fidivs
mov
mov
lea
test
sbb
leave
sub
mov
xchg
dec
negb
sub
sub
pop
inc
inc
or
jg
popf
mov
xor
gs
cmpsb
enter
mov
imul
sub
data16
pop
adc
push
or
xor
mov
add
cld
ret
icebp
enter
ss
xor
out
or
mov
xchg
popf
imul
xchg
mov
dec
mov
adc
push
icebp
cmpsl
push
icebp
test
notb
adc
stos
arpl
mov
lfs
cwtl
xchg
inc
lahf
aaa
and
mov
mov
pop
and
xchg
jnp
push
mov
ss
int
or
in
sbb
and
nop
push
and
dec
and
xor
ds
inc
sbb
dec
xor
in
adc
mov
inc
sub
shlb
mov
xor
dec
loope
cmc
pop
stos
or
idivb
jo
sbb
icebp
dec
mov
jne
out
cmp
test
push
outsl
inc
pop
pusha
or
fdivrp
mov
test
addr16
lahf
sbb
xchg
mov
cmpsl
pop
push
xor
xor
test
stos
loopne
icebp
das
push
cld
testb
mov
stc
arpl
lods
pop
clc
or
xchg
mov
push
pusha
and
arpl
mov
in
mov
jmp
into
mov
sub
xchg
into
or
in
push
repz
cmpsb
mov
mov
iret
and
lret
push
sub
mov
icebp
inc
or
lea
arpl
inc
inc
cwtl
les
loope
divb
adc
out
dec
pop
out
out
testb
push
pushl
fcoms
pop
push
mov
aaa
popa
in
nop
jecxz
or
jp
es
sbb
add
mov
cld
loopne
cld
jle
xor
push
pusha
add
hlt
or
add
aad
movsl
pop
mov
xor
jno
xchg
test
mov
aam
stos
add
jl
inc
or
adc
fisttpll
jmp
aad
and
jae
xor
outsb
insl
mov
in
xor
pop
xchg
loopne
xchg
out
into
jnp
and
push
lahf
cli
push
rolb
xchg
repnz
pop
or
outsb
push
push
adc
cs
ljmp
or
sti
fcmovnb
les
addr16
lds
push
leave
lcall
inc
push
mov
mov
aas
test
fs
xlat
push
call
and
xchg
in
add
ja
cwtl
adc
ja
outsb
push
test
dec
sub
mov
hlt
inc
pop
cmp
out
dec
gs
xchg
sub
loop
mov
cltd
or
repnz
jge
cmpsl
pop
loopne
mov
test
jl
push
int3
sbb
cmp
push
cltd
jb
jo
movsb
inc
mov
xchg
inc
fdiv
outsl
pop
in
daa
xchg
fists
lds
inc
ret
adcl
outsb
push
leave
jecxz
aaa
les
aam
jl
mov
cmpsb
pop
fbstp
inc
fwait
dec
xor
iret
loopne,pt
sub
adc
push
jne
jo
xchg
div
mov
insb
lods
loope
adc
icebp
or
dec
lds
mov
iret
ljmp
fdivl
mov
fsubrl
adc
imul
sub
in
hlt
mov
mov
lods
and
in
jae
or
pop
lea
call
mov
es
jnp
xchg
sub
jae
cmpsl
dec
pushw
les
out
fimull
lcall
cmp
adc
shl
lods
push
mov
rorl
in
cmp
loop
cli
stos
fxch
jmp
jno
push
loope
dec
fmuls
pop
jae
push
in
push
paddsw
sub
shl
xchg
sbb
sbb
in
add
sbb
arpl
shrb
jo
mov
sub
lret
adc
lcall
sbb
push
and
loope
and
or
sbb
pop
push
mov
hlt
fimuls
lcall
in
movsl
and
jp
pop
jecxz
xchg
dec
add
jnp
mov
mov
mov
push
sub
xchg
or
xchg
lods
mov
or
mov
xor
test
addr16
mov
sub
xor
push
push
decl
les
andb
xchg
sub
inc
mov
mov
dec
mov
push
or
xchg
jne
and
loopne
iret
sbb
or
and
jne
in
test
wrmsr
test
sbb
arpl
mov
mov
adc
dec
xlat
mov
lahf
test
adc
mov
pusha
pop
icebp
movsl
cmpsb
ljmp
fcmove
jb
push
sub
xchg
push
or
je
arpl
or
xor
pop
xor
call
movsb
pop
loop
xchg
out
add
mov
in
sbb
ja
aaa
mov
fistps
cmpsl
fsts
dec
mov
sbb
lret
lcall
lods
jge
jno
sub
xchg
xchg
sub
add
loop
sub
test
incb
sbb
popf
stos
cmp
aas
push
push
or
leave
jmp
cmp
mov
insl
xor
or
mov
repnz
lahf
fistpl
or
sbb
xchg
repnz
out
and
loope
sub
or
pavgb
mov
mov
jnp
cmpsb
mov
daa
xchg
ds
pusha
stos
gs
in
div
out
ds
add
xchg
out
test
jge
loopne
ds
fdivrl
adc
ja
enter
xchg
jb
jns
jbe
in
fs
les
jbe,pt
notl
jnp
jge
loope
or
out
pop
movsl
inc
out
xchg
xchg
or
scas
xchg
lods
push
test
lahf
fwait
inc
or
jo
fdivrs
testb
das
movsb
or
rclb
push
mov
jecxz
mov
xchg
inc
loopne
repnz
push
int3
cli
xchg
mov
iret
rclb
adc
enter
incl
mov
sbb
xchg
push
ds
stos
add
sub
xor
xchg
int3
jae
les
movsb
inc
ja
xor
mov
loopne
mov
mov
in
jmp
adc
sbbb
icebp
inc
outsb
repz
stos
pusha
adc
mov
adc
and
std
daa
stos
adc
imul
in
mov
test
mov
jnp
and
ljmp
cmpsl
movsl
dec
clc
mov
shlb
mov
lcall
in
adc
cltd
xor
cmp
ss
inc
cmpsl
lea
jp
cmp
inc
dec
cltd
and
pusha
mov
add
scas
outsl
and
rclb
fcoms
push
fwait
fwait
mov
inc
and
arpl
pop
adc
es
adc
cmp
stos
push
inc
mov
stos
jb
lcall
rolb
lods
shl
icebp
dec
test
test
aas
into
inc
xchg
js
out
pop
sbbb
and
test
loope
cmp
adc
arpl
inc
out
mov
shr
fwait
ds
push
fistps
pop
mov
and
scas
outsb
or
and
xchg
aaa
inc
mov
jo
ss
fadds
rorl
xchg
mov
outsb
pusha
pop
nop
mov
mov
sbb
cmp
dec
fisubs
loope
and
lea
mov
lds
sub
ja
mov
mov
ds
sbb
xor
jl
rclb
sbb
and
mov
and
fidivrl
adc
or
pop
out
inc
or
ljmp
jb
xor
repz
fwait
push
push
pop
xchg
mov
push
js
inc
mov
mov
or
psllw
jl
dec
add
gs
push
aas
push
fiadds
xor
jo
dec
nop
push
dec
stos
dec
in
nop
movsl
or
or
xor
out
loopne
jo
nop
adc
mov
inc
xchg
aaa
aam
push
enter
mov
in
add
loop
or
movsl
xchg
dec
jmp
fists
adc
std
cmp
clc
fs
xlat
xlat
cwtl
gs
shl
mov
repnz
rcrl
pop
in
lods
mov
dec
ja
add
sbb
insb
pop
jb
into
adc
les
cmp
jp
stc
lock
movsb
sub
dec
mov
push
popa
in
adc
push
lret
insl
inc
dec
xchg
dec
aaa
loop
insb
adc
js
inc
jmp
clc
mov
sub
xor
into
mov
enter
jle
fiadds
scas
lods
sub
fst
stos
mov
push
pop
subb
inc
outsb
shrb
add
mov
fwait
lea
push
inc
sbb
es
jno
aad
aas
jb
lods
lock
icebp
add
mov
sub
mov
cmpsl
cwtl
pop
movsb
cmp
nop
jge
movsl
add
lret
mov
in
imul
push
jae
xor
push
loopne
loope
fidivrl
cmc
negl
xchg
xchg
gs
dec
fiadds
or
jmp
jmp
out
pop
das
xor
jl
cld
lret
ret
push
icebp
pop
mov
xor
sarb
fs
inc
int
push
jo
cld
repz
fmull
mov
inc
cld
pop
push
into
lahf
insl
dec
cmp
push
pop
cld
inc
jge
nop
mov
sub
out
dec
mov
lods
data16
or
cld
or
or
or
inc
xor
fbstp
xchg
sbb
push
loopne
and
fs
cmp
and
sbbb
xor
and
xchg
fs
jbe
pop
pop
movsb
mov
pop
mov
mov
dec
iret
push
movsl
push
loope
mov
mov
imul
jne
fbstp
les
and
repz
push
pushf
loope
out
test
pop
int3
insl
jno
addr16
fwait
rolb
std
cld
pop
jmp
enter
aas
pop
js
inc
pop
call
test
rclb
dec
shlb
inc
jl
addr16
pop
shll
dec
sahf
lods
push
and
cmp
out
add
cld
js
bound
and
mov
movsb
mov
mov
enter
insb
pop
sti
push
add
mov
or
mov
xor
push
popa
push
cmp
std
cli
xchg
add
adc
cmp
ret
and
mov
hlt
jb
xor
outsl
int3
or
mov
and
popa
push
mov
mov
or
pop
testl
js
cltd
pop
push
push
aad
fcompl
pop
dec
jle
push
clc
loope
sahf
xchg
movsb
insb
or
mov
xchg
adc
fdivl
dec
sbb
mov
popa
fsubrs
sbb
dec
movsb
fstl
imul
jle
xchg
movsl
call
aas
jle
mov
push
lods
popl
dec
push
inc
insb
xor
and
sub
icebp
cmp
loopne
jns
push
inc
xor
dec
sbb
adc
push
insb
fdivrs
int3
in
sbb
dec
imul
or
pusha
add
mov
push
mov
mov
movsl
fwait
add
adc
subl
dec
adc
jmp
sbb
cmp
xchg
iret
inc
lret
cmp
adc
andb
sahf
ss
dec
dec
cmp
sbb
cmp
xor
outsl
loop
inc
ja
insl
mov
and
push
push
loope
shll
inc
clc
fsubr
xor
push
insl
sub
dec
in
push
stc
lret
pop
ljmp
dec
or
sbb
pusha
inc
leave
inc
mov
sbb
repz
dec
inc
mov
mov
andl
mov
dec
jg
sub
fsubs
cltd
cli
cmp
in
aam
cwtl
xor
pushf
or
lods
sub
xor
mov
sbb
rorb
xor
cltd
hlt
push
sub
push
dec
fdivs
pop
jbe
xchg
lret
fimuls
stos
iret
scas
inc
push
mov
xor
cwtl
je
adc
out
ja
xchg
jno
jo
adc
mov
repnz
ljmp
je
fldl
jg
push
inc
ss
push
mov
clc
adc
sahf
cmp
hlt
stc
and
xchg
mov
jae
and
bound
mov
xchg
push
loopne
lods
lret
mov
das
mov
scas
jb
jecxz
popa
sbb
jle
inc
out
ds
aad
push
add
adc
stos
sub
xchg
mov
mov
aad
test
sub
movsb
push
push
mov
lahf
fmuls
icebp
dec
inc
imull
leave
adc
aad
into
and
orl
xor
push
xor
dec
ljmp
sarb
mov
jne
jmp
push
pop
jmp
adc
cmp
or
cmp
push
int3
aad
lahf
mov
inc
addl
fnstenv
dec
or
jmp
pop
jbe
stc
mov
xchg
mov
loope
and
sbb
add
ljmp
test
shll
mov
inc
or
xchg
and
pop
xchg
bound
adc
mov
xor
lret
pop
inc
scas
cld
daa
sbb
push
add
lds
cwtl
xor
js
insl
xchg
mov
add
fcoms
push
sub
xchg
out
sbb
push
cmpsb
sbb
gs
hlt
inc
or
test
inc
sarl
or
pop
fdivrl
rolb
fiadds
or
test
add
dec
dec
lret
pop
xchg
push
push
and
cld
pop
sbb
pusha
popf
outsl
xchg
push
sub
pop
jle
insl
cltd
inc
adc
ret
and
adc
inc
mov
mov
inc
and
aas
in
sbb
mov
xor
pop
sbb
inc
leave
adc
scas
adc
lahf
shl
dec
shrb
sub
jne
lock
mov
cs
jb
cmp
sub
dec
xchg
data16
ficomps
lock
or
inc
pop
push
movsl
xchg
fisttps
cltd
add
pop
mov
addr16
icebp
aaa
mov
outsl
popf
sub
cmp
aas
jl
mov
das
nop
inc
ret
gs
and
sti
or
dec
mov
inc
adc
dec
pop
aas
adc
add
or
mov
mov
dec
jecxz
cmpsl
in
push
clc
sub
in
lcall
imul
aad
enter
inc
dec
popa
sub
mov
in
push
gs
dec
xor
xor
stos
out
pop
and
pop
jge
test
cmp
cld
inc
push
push
scas
aaa
jp
out
jge
xchg
aaa
dec
cmp
icebp
lds
lahf
mov
outsl
sub
rcl
dec
or
xchg
sbb
pop
pusha
into
cltd
repnz
in
cli
push
lds
imul
cmp
loop
mov
mov
ja
pop
sub
cmpsb
cmp
lfs
xchg
sub
push
shrl
sbb
push
mov
testb
or
lcall
imul
mov
aam
mov
adc
or
in
fstp
pop
sbb
push
xchg
mov
out
enter
cmp
inc
or
jne
mov
int3
in
pop
inc
das
and
aam
add
add
dec
jge
sbb
inc
pusha
inc
lret
mov
stos
dec
fs
mov
scas
adc
insl
add
into
inc
shlb
popa
jg
out
pop
scas
repnz
scas
add
xor
pusha
jmp
mov
mov
push
xchg
sbb
fucomip
mov
jne
stc
dec
and
xor
fidivs
sub
inc
icebp
sub
in
inc
dec
out
mov
sahf
bnd
stc
rorb
aaa
pop
inc
sub
mov
fmull
sub
lock
push
fs
mov
gs
cmp
inc
inc
push
mov
inc
xchg
orl
mov
push
jge
jb
dec
mov
sbb
xor
cmc
insb
pop
mov
and
pop
mov
mov
pop
lret
icebp
loopne
mov
push
push
repnz
mov
mov
out
iret
jb
lret
push
pop
xor
out
mov
sbb
dec
arpl
xor
jge
mov
mov
xchg
ljmp
dec
loop
jle
and
or
aas
lods
cmp
cmpsl
std
das
iret
xor
mov
or
cmp
dec
fimuls
jle
out
ret
push
sub
jecxz
inc
mov
xchg
rol
xchg
in
jo
push
push
sub
int3
jb
fsubl
cmp
sbb
mov
dec
xor
mov
out
sbb
inc
adc
adc
xor
in
test
arpl
dec
out
lods
xchg
int3
xchg
out
add
xor
maskmovq
imull
enter
mov
call
fmull
lret
jne
xor
or
adc
pop
xchg
adc
outsl
jne
aas
addb
gs
insb
pop
cltd
fadds
xchg
stos
lods
pop
push
sbb
fistl
xor
shl
sbb
inc
push
or
call
lea
dec
dec
or
pavgb
inc
and
andl
adc
sub
cmp
lahf
fdivs
int
sbb
cmp
mov
filds
rorl
sub
mov
int
ss
ljmp
cmp
ds
pcmpgtd
and
jb
clc
adc
rclb
outsb
in
dec
push
xor
add
addr16
mov
in
push
sbb
movsl
and
xor
ret
push
popf
dec
cmp
adc
adc
lcall
sbb
add
insb
inc
repnz
mov
mov
or
mov
and
dec
push
in
xor
xchg
loop
mov
inc
movsb
adc
imul
pop
xor
mov
insb
cmp
imul
scas
or
xor
dec
insb
mov
cmp
mov
je
cmp
mov
loop
push
cmp
imul
sub
aad
jo
xchg
daa
sub
sub
xchg
xor
arpl
xor
mov
ds
ljmp
out
or
lock
xchg
ljmp
pusha
pop
lods
jmp
jo
mov
cmpsl
or
add
lea
mov
in
fnstenv
push
push
clc
js
add
pop
mov
push
scas
jmp
mov
xchg
lret
xor
cmp
xorb
test
mov
inc
push
movsb
push
dec
mov
aas
add
jo
sahf
in
ror
push
mov
mov
mov
pushl
adc
test
das
jle
or
in
sbb
lods
xchg
sub
add
pop
mulb
inc
ljmp
insb
popa
arpl
bound
insb
loopne
cltd
stos
in
xchg
or
xor
test
inc
mov
jbe
stos
mov
cltd
lahf
bound
xor
or
sbb
jb
ret
push
ds
push
int
mov
push
out
clc
sbb
shlb
lods
adc
xchg
adc
out
pop
cmp
add
xor
jl
sahf
dec
add
inc
ljmp
push
mov
xor
ret
clc
sbb
push
les
mov
mov
dec
out
stos
aam
adc
arpl
adc
sub
aam
call
jp
fisubrs
mov
clc
pop
shlb
inc
xor
mov
jge
adc
jl
jl
pushf
pop
lock
cmp
cmpsb
xchg
xchg
jmp
add
jo
out
push
lret
xchg
xlat
mov
jmp
xchg
push
jmp
dec
push
jae
divl
mov
adc
ret
jmp
ja
outsb
out
lahf
fldcw
in
xor
cmpsb
or
push
push
adc
popf
out
hlt
inc
cltd
sub
ds
jg
movsb
jmp
push
shrb
cltd
or
out
out
adc
jecxz
out
ds
jo
test
aad
cld
pop
add
mov
inc
inc
sti
mov
mov
dec
lahf
push
xlat
xchg
xor
orl
aaa
sub
xchg
dec
sub
cmp
mov
scas
dec
pop
out
xlat
jecxz
adcb
sbb
push
iret
jne
lock
test
sarb
or
aas
in
xchg
addb
push
aam
push
mov
dec
push
xor
out
insl
sahf
lret
repz
in
push
adc
sbb
das
sub
hlt
std
mov
jns
xor
xorb
jecxz
or
xchg
cmp
mov
stos
and
adc
and
mov
jo
mov
fimuls
mov
jno
cwtl
pop
jg
adc
movsb
lahf
stos
mov
and
adc
insl
rcrb
iret
into
stos
fstpt
or
aam
or
pop
cltd
cmpsb
and
scas
pop
xchg
xor
xor
lods
sbb
sub
in
nop
and
inc
in
ja
clc
insl
fstpt
add
push
lea
xchg
or
add
iret
mov
imul
mov
rcrl
fisttps
jae
push
fadds
aam
add
fisubl
es
and
fimull
xor
lods
insb
int3
fidivrl
xor
mov
dec
dec
pop
adc
lret
movsb
cmc
jp
or
mov
mov
outsl
in
inc
pop
ja
adc
in
test
push
sbb
js
hlt
movsl
inc
scas
mov
lock
loopne
push
xor
pop
jae
jl
mov
pushf
add
fs
adc
mov
inc
in
fwait
addr16
iret
sbb
je
or
cltd
adc
sti
cmp
cmp
enter
lret
out
pop
mov
cmp
icebp
stc
cwtl
jp
pushf
jne
inc
adc
icebp
push
loop
clc
call
mov
sub
inc
jl
sub
sbb
out
lea
mov
ret
mov
out
int
xchg
mov
aas
test
shll
jae
adc
movsl
and
add
mov
movl
dec
inc
mov
xor
int3
out
fisttpll
popa
enter
arpl
fistpll
int3
mov
and
cwtl
xchg
cmpsl
cmp
push
test
pusha
out
sbb
adc
repnz
loopne
pusha
inc
xchg
shlb
scas
nop
in
jnp
jb
jae
test
pop
test
mov
inc
insb
test
xor
jl
inc
sbb
mov
cmp
shrl
nop
adc
push
dec
lods
int3
aam
cmpl
cmp
sub
mov
ret
stos
push
popf
dec
scas
mov
mov
adc
xchg
cmp
jge
dec
xchg
or
jae
in
xor
pop
mov
out
cmp
mov
in
inc
nop
and
mov
fmull
lods
and
mov
in
outsl
lods
push
lods
decb
adc
push
scas
add
xor
outsl
test
dec
cmpsl
pop
cld
test
cmp
lods
jg
xchg
push
daa
mov
and
adc
sub
push
cmpsb
xlat
jae
and
inc
mov
push
mov
push
xchg
je
pop
adcl
push
add
mov
or
leave
xchg
repz
cmp
mov
adc
jbe
xchg
fwait
xor
fimuls
inc
clc
mov
jne
jno
sahf
lds
scas
jmp
add
pop
fsubl
xchg
imul
orb
inc
sbb
jg
jle
in
and
push
test
lods
data16
stc
sub
push
ljmp
push
mov
mov
sub
ss
xor
ret
cmp
call
pop
push
add
jp
and
add
mov
mov
sbb
test
push
adc
fcmovb
add
xchg
xor
push
cmp
in
es
xor
negl
push
stc
and
test
mov
jno
mov
clc
mov
inc
movsb
test
cmp
inc
mov
or
jmp
inc
aam
mov
sbb
stos
inc
pop
repnz
fstps
mov
add
adc
add
adcb
insb
aas
mov
xor
negl
mov
clc
imul
rorl
test
repz
das
enter
clc
jle
out
pop
add
dec
fsubrs
mov
test
ret
je
cld
int
test
adc
bnd
lahf
test
jo
push
mov
jecxz
sarl
sub
imul
scas
fwait
mov
xor
adc
pop
in
push
xchg
mov
mov
loope
push
lock
std
lret
fildll
loopne
sti
xor
bound
xchg
or
int
mov
into
call
in
out
pop
or
mov
xchg
cmp
in
mov
in
xor
call
pushf
popa
xchg
fnstcw
orl
out
jnp
xor
daa
mov
ret
fbld
call
test
mov
dec
pop
insb
sahf
adc
outsb
movsl
mov
fildll
push
mov
shrl
lock
je
mov
inc
stos
mov
push
xchg
loope
daa
repnz
cmp
adc
mov
cmpb
pusha
cwtl
ficoms
popa
or
add
jne
push
pop
pmaxub
sarb
mov
add
fs
inc
push
fisubrl
jne
push
loopne
fdivs
ds
mov
imul
mov
adc
cwtl
mov
push
cmp
xchg
fcoml
push
or
movsb
push
mov
add
dec
mov
xchg
dec
das
adc
inc
imul
add
mov
mov
xlat
cmc
xor
in
dec
imull
shll
cli
popa
pusha
mov
aam
roll
call
xor
xchg
loope
cwtl
pop
mov
dec
pop
ljmp
add
jg
jae
sbb
cmp
mov
jecxz
sbb
pop
iret
push
xor
stos
mov
mov
mov
push
js
inc
and
mov
jo
mov
lods
jbe
in
mov
mov
icebp
sbb
daa
cltd
out
cmp
lods
dec
cmp
int3
addr16
xchg
dec
aam
test
or
popf
pop
lock
cmp
daa
xchg
sbb
mov
lcall
add
push
sbb
aad
mov
mov
ret
fst
jno
jmp
repz
and
adc
movw
mov
ffreep
jae
sub
std
push
ja
push
sti
outsb
push
pop
xchg
cltd
adc
mov
pop
and
mov
cwtl
mov
inc
pop
inc
outsb
xchg
inc
mov
sbb
pop
push
xchg
or
mov
mov
sbbb
xor
aad
xor
pop
pushf
or
das
pop
inc
xor
adc
jno
popf
sub
adc
jno
mov
jno
pusha
aaa
js
push
loop
dec
mov
push
jno
into
xor
mov
int
popf
push
decl
cld
cmc
add
incb
or
xor
push
pop
mov
adc
movsl
into
fisttpll
dec
int
clc
mov
shrl
jae
and
or
push
testl
sub
lahf
lods
inc
fs
push
jge
in
or
rolb
pop
loope
cmp
xchg
mov
jl
shll
int3
nop
in
adc
sarb
sbb
inc
mov
mov
push
cmp
test
sbb
je
in
aaa
lods
int3
je
cs
shl
sbb
adc
pop
sub
add
push
jno
fcmove
cmp
xor
loopne
xchg
jo
push
jno
mov
cmp
int
insb
add
lret
loope
rcll
in
adc
push
adc
lds
mov
cs
movsl
fists
xlat
mov
mov
test
pop
mov
fstpl
mov
push
repz
add
mov
push
mov
add
pusha
stos
insl
xor
mov
out
jl
in
cli
out
fucom
orl
fbld
hlt
not
ljmp
cmpb
enter
test
inc
and
hlt
push
pop
xchg
mov
cmp
dec
add
ficoms
aas
call
fistpl
test
mov
xchg
hlt
js
sub
sub
lds
jmp
sub
int3
inc
push
mov
enter
pop
test
sbb
out
pop
leave
cmpsl
jnp
lea
insl
jbe
sub
cmpsl
push
sub
mov
leave
paddsw
incl
sub
clc
jp
pop
andw
out
daa
adc
psrlw
adc
gs
and
mov
rclb
adc
pop
andl
inc
lret
xchg
fiadds
imul
sub
mov
stos
in
mov
lods
add
movsl
jecxz
pop
sarb
add
scas
jno
sahf
or
leave
cltd
mov
fldl
mov
lret
loope
pop
outsb
shrb
fistpll
lcall
jle
cmp
jb
sbb
mov
cmp
in
fs
adc
xchg
arpl
lods
mov
lea
jl
pop
je
pop
pop
jmp
out
mov
out
push
movl
mov
aam
push
cli
push
cltd
sti
mov
lcall
test
mov
adc
push
insb
inc
mov
cwtl
ja
leave
cwtl
lods
cltd
stos
fnstenv
mov
xor
scas
or
fsubrl
lcall
ss
in
cli
and
out
jne
push
fsubr
loopne
cmp
jo
inc
dec
xor
push
pop
inc
gs
out
pushf
cmp
shl
push
je
lret
in
pop
fs
pop
cmp
jmp
fidivrs
dec
test
fs
out
out
mov
xchg
mov
mov
fs
lcall
pop
fsubl
push
cmp
mov
fucomi
imul
push
stos
fbld
jns
popa
adc
rorl
ljmp
faddp
cmp
pop
rcrb
repz
mov
pop
mov
mov
xor
sub
aas
into
push
fcmovb
test
pop
cmpsb
sbb
jae
pop
mov
aaa
adc
mov
or
xor
sub
sbb
in
sub
jnp
into
stos
scas
je
shrb
movsb
int3
loopne
xchg
fwait
lock
imul
fdivl
in
cmpsb
add
movsb
jmp
aas
in
mov
fildl
adc
mov
movl
leave
pop
clc
aas
hlt
pop
fbld
push
jo
fwait
pop
push
cld
mov
and
mov
mov
xchg
cwtl
cmpsb
out
mov
add
pop
cmc
mov
je
into
xchg
and
sbb
push
bound
cwtl
pusha
cmp
jl
repz
lods
es
mov
push
xor
std
fmuls
jle
mov
mov
push
mov
icebp
rorl
ss
mov
cmpsb
dec
inc
xchg
cmc
ret
mov
jo,pt
lea
fwait
jle
int3
fwait
sub
lea
incl
push
pop
gs
pop
inc
pop
loop
dec
push
sbb
xchg
pop
mov
xchg
mov
mov
incb
data16
imul
je
fdivrs
in
out
xor
sbb
mov
adc
aam
sti
mov
das
jle
in
test
pop
cmp
add
and
aas
mov
cwtl
or
xchg
sbb
cmp
sub
sbb
out
stos
out
shr
sbb
or
push
addr16
xor
pop
enter
popf
testb
xchg
dec
lcall
and
in
shlb
inc
test
ret
mov
push
cmp
andl
mov
adc
jno
dec
mov
mov
fmull
cwtl
out
xlat
fbld
in
fidivs
cwtl
fcoms
pusha
jl
mov
fistl
fisubrs
mov
in
arpl
ss
or
lret
cltd
iret
mov
movsb
mov
inc
js
outsb
cmp
test
test
es
inc
fidivs
pop
gs
mov
fidivrs
rorb
xchg
das
mov
add
test
adc
sbb
int3
outsl
outsb
ljmp
fmul
xchg
and
and
bound
int3
cwtd
jb
outsl
imul
scas
inc
ja
jnp
sub
ljmp
push
outsb
roll
push
mov
or
cmpsl
in
test
out
adc
dec
daa
push
pusha
fwait
enter
imul
adc
inc
aad
sbb
and
push
js
lahf
les
frstor
aam
and
mov
push
sub
shrb
lcall
ja
outsl
mov
test
punpckhdq
inc
test
ret
loopne
lret
jmp
addr16
loop
cs
insb
adc
jno
imul
xchg
push
sub
add
inc
test
enter
lock
fldl
mov
jo
mov
pop
ss
jae
pusha
push
fnsave
loopne
inc
lock
loope
xchg
adc
inc
dec
lods
fwait
pop
push
es
add
gs
lea
jae
jo
clc
adcl
testl
mov
lds
sbb
jnp
adc
js
test
pop
lods
and
js
popa
adc
fistpl
popa
es
push
lods
outsl
pop
cltd
or
rcll
inc
insb
in
es
arpl
arpl
inc
std
add
xor
cld
mov
mov
sbb
jae
adc
ret
inc
inc
aaa
pop
dec
mov
jno
hlt
movsb
jo
inc
scas
push
fimull
cmp
testl
jge
fdivl
and
inc
xor
cmpsb
dec
popa
imul
insb
mov
push
pushl
cmp
aam
add
push
inc
into
or
pop
or
rcr
mov
jmp
push
xchg
out
inc
xor
das
adc
ss
sbb
aad
cs
mov
rsm
faddl
jbe
sbb
xor
cmpl
mov
loopne,pn
pop
mov
sbb
jge
jb
addr16
hlt
sub
mov
cld
decb
fiaddl
mov
sbb
push
dec
pop
sahf
popf
cmpsb
pop
rcll
or
xchg
data16
or
or
mov
addr16
mov
pop
fcoml
clc
cmp
pop
mov
inc
xchg
cmp
jae
frstor
int
cmp
xchg
mov
mov
clc
je
jle
xchg
jnp
es
jg
out
mov
in
shlb
ljmp
mov
out
js
cmpsb
pushf
movsb
lret
cmc
int3
pop
or
fsubl
jns
out
add
icebp
sub
cmp
add
inc
cltd
fwait
mov
inc
inc
cmc
and
andb
dec
sub
stc
je
push
push
inc
pop
lock
lea
sub
into
lcall
cs
cmp
xlat
cmp
xchg
sbb
push
inc
dec
nop
enter
cmp
data16
clc
dec
xor
ret
xchg
lock
mov
jnp
popf
sbb
mov
mov
mov
adc
mov
imul
ja
imul
mov
pop
xor
rclb
call
mov
xor
and
orl
lods
xchg
sub
lret
lea
mov
cltd
js
cltd
jb
mov
mov
pusha
std
in
outsl
jae
es
mov
lcall
mov
cmp
dec
mov
fisubrs
stos
xor
adc
aam
std
int
push
fisttpll
cmp
push
add
inc
outsb
mov
mov
jns
mov
std
push
fbstp
loop
pop
push
push
stos
test
adc
in
mov
rclb
nop
andb
jl
cwtl
out
fidivrs
fcmove
popf
add
dec
cmp
incl
movsb
clc
pusha
rcrl
aas
mov
adc
lds
out
mov
jmp
add
lods
dec
xchg
sub
xlat
rorb
bound
inc
or
into
mov
aas
mov
pop
repz
pop
xchg
jp
or
test
jns
das
daa
stos
sbb
imull
adc
call
adc
inc
repnz
and
add
jns
add
xor
repz
loopne
mov
sbb
inc
xlat
adc
aad
pop
mov
xor
sub
mov
cmp
push
roll
add
xchg
insb
or
pop
jmp
push
insb
xchg
sar
fs
pop
cmpb
cmp
mov
fiaddl
dec
add
loop
add
lods
cli
push
cmp
mov
ljmp
dec
inc
jb
addr16
fadds
push
lock
cmove
aas
sbb
enter
pushf
pop
pop
xchg
in
mov
inc
hlt
jo
addl
pop
dec
imul
inc
and
adc
mov
push
pop
fmul
ret
mov
nop
mov
dec
scas
ljmp
adcl
jo
jnp
sti
ss
popf
jns
mov
dec
xchg
push
in
add
push
xchg
xchg
mov
mov
xchg
xor
aam
mov
or
sbb
add
xchg
add
out
out
or
mov
mov
pop
cmp
push
lret
repnz
outsl
clc
pushl
fs
xchg
cli
arpl
lahf
movsl
jb
fistl
and
lock
push
pop
in
adc
xlat
mov
arpl
rolb
ret
aas
outsl
imul
sbb
mov
das
icebp
add
pop
or
push
scas
nop
xchg
std
mov
mov
shl
sub
xchg
pop
rclb
mov
add
ja
sub
pop
jmp
mov
push
mov
outsl
shrb
jl
mov
cmpsb
jecxz
andl
pop
iret
cmpsb
sets
js
lods
lcall
stc
pop
insb
std
iret
jne
cmp
jg
cmc
dec
pop
mov
mov
inc
or
addr16
loop
sub
in
xlat
sahf
aad
mov
adc
cltd
lret
sti
pop
xchg
fldt
mov
lods
mov
aad
std
sarl
loope
mov
mov
ljmp
sbb
imul
xor
mov
int3
sub
inc
test
jp
inc
adc
leave
fnstenv
movsl
nopl
xor
in
cmp
lret
adc
test
and
ljmp
xchg
adc
je
jp
es
pop
subb
lods
mov
fstps
adc
and
push
addr16
rcrl
out
clc
jp
into
lds
mov
fucomi
jg
mov
mov
adc
enter
std
div
insb
xor
orb
jne
xchg
sub
lods
jp
mov
adc
cmp
pop
into
nop
gs
push
repnz
aas
pop
mov
inc
lock
mov
lcall
lahf
adc
rorb
sarb
nop
mov
shlb
in
repz
iret
les
adc
push
mulb
pop
xchg
mov
sbb
mov
mov
bnd
cmp
adc
add
mov
xlat
bound
lods
push
mov
int
pop
popa
inc
sbb
pop
mov
push
mov
and
dec
push
mov
inc
shrb
and
insb
xchg
cmp
aam
inc
mov
mov
inc
out
js
leave
inc
clc
aam
test
pop
lahf
lods
not
mov
xor
jle
and
inc
or
or
in
shl
pop
pop
lcall
aas
inc
call
pop
out
shlb
jp
cmp
out
add
pop
lcall
jp
popa
repz
and
subl
xchg
rcrb
pusha
push
cmpsb
daa
mov
int3
push
cmp
lock
mov
enter
push
lahf
mov
mov
lret
out
test
lret
cmp
adc
mov
xor
mov
sahf
clc
sahf
or
add
mov
insl
pushf
mov
in
jge
mov
mov
jp
ret
cmpsl
fldl
sbb
mov
xor
xchg
mov
mov
jno
lret
pop
jnp
mov
xchg
pop
rcrb
inc
cmp
pop
insb
sbb
fsubs
mov
adc
fwait
lock
and
test
sub
adc
test
mov
shl
jge
roll
sub
adc
jmp
adc
push
mov
icebp
jecxz
addr16
jmp
insb
push
dec
xor
iret
jnp
unpcklps
push
push
lods
inc
fs
jb
mov
push
mov
push
repnz
inc
int3
jg
rcl
cs
or
stc
push
dec
call
or
scas
mov
ljmp
fs
in
sub
push
rorb
shlb
stos
ret
mov
pop
dec
out
fdivr
ret
push
add
pop
xor
lods
mov
xchg
pop
cmpsl
mov
lea
mov
mov
lcall
inc
jmp
mov
mov
mov
mov
pop
test
mov
jmp
mov
pusha
popf
adc
stos
mov
inc
rorb
das
xor
fstps
shll
ret
jle
lods
add
mov
dec
sub
mov
loope
pusha
push
push
sti
mov
pop
sub
mov
jnp
and
imul
ss
jecxz
fiadds
sub
test
xor
dec
mov
dec
mov
sub
mov
push
sub
push
adc
ror
cmp
dec
cld
and
cmp
push
cmp
jno
push
xor
cwtl
stc
pushf
popf
roll
out
push
jb
out
inc
ret
jae
xchg
loopne
loopne
xchg
fdivrp
imul
adc
ja
cli
adc
out
mov
inc
movsl
pop
mov
stos
push
orb
addr16
pop
lea
jns
scas
push
lcall
dec
push
rorl
sbbb
dec
push
inc
jne
cmp
outsb
mov
out
or
test
scas
pop
jo
test
and
add
sub
cmp
mov
rcrb
jns
cmp
pop
xor
insl
lahf
decl
sub
in
add
jae
aad
mov
sbb
mull
fstpl
aad
lahf
enter
pop
in
push
sti
cmpsb
dec
dec
repnz
popf
xchg
pop
outsb
ljmp
push
cmp
outsl
call
add
shl
mov
adc
loope
or
les
inc
jne
lret
mov
mov
jno
test
shrb
out
sysexit
cli
mov
aas
inc
out
jmp
cli
scas
outsb
mov
lret
mov
push
xor
icebp
test
imul
stos
jl
cmp
xorb
clc
sbb
cmp
rcll
inc
adc
enter
icebp
mov
pop
fimuls
sarb
cmp
adc
sbb
xchg
sbb
out
ret
pop
pop
jnp
pop
bnd
jno
enter
sub
xchg
sbb
xor
sub
mov
cmp
out
bswap
cmp
les
adc
add
roll
addr16
push
inc
nop
clc
cmp
mov
fs
test
mov
rcr
imul
pop
cmc
inc
lock
idivb
in
sub
int3
jp
shlb
out
add
mov
inc
call
mov
lea
pop
lahf
cmp
ss
push
lods
and
lock
fcomp
data16
pop
cltd
mov
stos
int
insl
mov
jno
push
xchg
lahf
shll
or
pop
insb
jo
xchg
loop
add
ljmp
xchg
xorb
adc
push
call
pop
dec
lahf
mov
shrb
and
rcr
jns
sbb
lock
cld
icebp
test
fcomi
loopne
mov
test
mov
sti
pop
scas
insb
push
enter
ret
inc
mov
xchg
sub
mov
addr16
xor
and
fistpl
mov
ret
sbb
inc
jp
repz
fucom
push
fcoml
ljmp
pop
test
jno
push
enter
push
clc
push
push
jb
test
jecxz
jne
loopne
add
jmp
jae
aad
jae
push
insl
imul
jecxz
mov
pop
xchg
repz
cld
mov
mov
pop
inc
jae
icebp
dec
aad
xchg
les
stc
mov
adc
add
xor
cltd
mov
pusha
ret
shlb
fcompl
xor
fstl
in
cwtl
fwait
cwtl
jbe
popa
jb
or
mov
or
push
push
inc
add
jae
push
pop
xchg
xchg
mov
repnz
xchg
ja
fldl2t
xor
scas
sub
cld
xchg
loope
and
adc
nop
aam
and
fimull
loope
in
int3
prefetcht1
dec
lods
mov
add
jae
push
mov
and
shrb
fwait
xor
or
jmp
dec
lock
fidivrl
push
sahf
in
jecxz
mov
adc
ret
rcll
in
in
jecxz
pop
shlb
mov
push
gs
lods
dec
nop
cld
cwtl
pusha
add
cltd
sub
mov
xchg
cmp
pusha
cltd
cmp
fisttps
xchg
inc
int3
out
out
xor
sub
aaa
test
xchg
mov
mov
fs
scas
pop
sahf
dec
pop
int
in
sub
ja
ret
ljmp
jle
xchg
insb
cmp
push
adc
aam
or
ficoml
pop
mov
cmc
pop
lock
push
jmp
scas
mov
or
push
lcall
sbb
lea
jmp
jnp
lea
inc
rcll
or
push
pop
xchg
addr16
sbb
roll
sub
and
xor
mov
sbb
popa
mov
adc
jl
das
pop
cli
cmp
or
outsl
jl
pop
mov
mov
cli
test
pop
mov
ss
fdivr
mov
repnz
loop
xchg
in
int3
pop
cmp
mov
jmp
pop
ds
lcall
das
hlt
dec
mov
push
and
xor
adcb
add
movsb
in
or
inc
mov
test
test
adc
lcall
inc
sbb
scas
in
out
hlt
or
pop
xor
int
push
out
xlat
mov
icebp
mov
aad
pop
sbb
sbb
sub
nop
pop
test
mov
inc
and
aaa
int3
cmp
loop
test
lahf
mov
mov
les
push
movsl
aam
aad
mov
lock
mov
adc
cld
pushf
pop
push
fnsave
cmp
push
out
mov
xor
push
maskmovq
mull
out
loopne
push
xchg
loop
pop
ja
mov
inc
xchg
inc
data16
cmp
lock
loopne
cmovne
lods
xor
cli
jge
int
bsr
stc
mov
dec
sub
push
inc
call
ret
loope
or
and
pop
dec
add
sub
mov
dec
cmpsb
test
es
inc
sahf
jb
inc
xchg
or
jbe
out
outsb
inc
sbb
or
clc
fs
and
movsb
jle
mov
out
xchg
insl
mov
enter
mov
jecxz
popf
jo
sub
mov
push
jge
cwtl
loope
jae
stos
mov
lock
push
addr16
les
xor
sar
outsl
cmpsb
jnp
push
aaa
mov
rolb
adc
push
daa
adc
pop
loope
lretw
cltd
dec
mov
int3
add
mov
add
pop
mov
pop
adc
lcall
enter
xchg
filds
fsubl
mov
mov
or
mov
clc
dec
rdpmc
loop
in
leave
insl
xchg
mov
fsubrp
das
mov
pop
adc
sbb
cld
lret
jo
icebp
pop
fwait
mov
out
ret
adc
or
xchg
mov
pop
mov
inc
jmp
or
rol
loop
ds
mov
adc
or
lret
sbb
adc
adc
insb
mov
mov
sti
pop
pop
jbe
repnz
cs
fsub
repz
adc
cmc
adc
lret
leave
or
or
call
jo
mov
jp
les
fistps
loopne
cs
mov
jmp
lcall
push
stos
test
xor
xchg
push
fwait
xlat
mov
out
call
fs
popa
push
xor
lea
rcrb
push
or
into
aaa
aam
loop
inc
cmpsb
pop
or
adcb
push
jae
ficompl
add
and
mov
in
xor
or
or
or
xchg
jg
into
aad
in
into
fcomps
dec
fmull
mov
xchg
mov
dec
xchg
dec
sub
shll
xchg
push
hlt
pop
add
or
mov
xchg
lret
xor
loope
cmc
inc
sti
adc
pusha
das
sahf
in
xor
sbb
ds
movsl
rcrl
xor
dec
jae
daa
adc
arpl
xlat
xchg
lret
std
outsl
push
inc
add
inc
imul
xor
into
fsubrl
pusha
frstor
mul
mov
sbb
mov
popf
scas
xchg
adc
rcl
and
push
mov
xor
push
mov
mov
add
sub
jae
dec
pop
push
addr16
push
xchg
fs
mov
mov
dec
pushl
fcmovb
fucomi
mov
mov
and
add
jbe
les
adc
sub
dec
repnz
push
dec
not
inc
fidivl
das
and
push
test
aaa
mov
dec
int3
pop
mov
fwait
dec
mov
sbb
ret
mov
sub
lods
or
dec
jmp
sub
invd
push
push
mov
cmp
faddp
aam
int
lods
mov
xchg
ffreep
test
ficomps
in
mov
mov
and
in
rcrb
aas
mov
cmp
mov
or
je
mulb
jo
fcom
adc
inc
add
aas
inc
mov
mov
and
pop
pop
pop
aam
adc
jmp
jb
fcmovnb
in
fisttps
into
sub
adc
loope
and
or
lahf
les
mov
dec
mov
xor
test
std
jmp
or
out
imul
stc
push
hlt
xchg
sbb
mov
jge
pop
jno
mov
outsl
mov
mov
out
aam
xchg
dec
push
push
xchg
bnd
jge
mov
mov
lods
adc
sbbb
sbb
sbb
mov
addr16
pop
insl
xchg
xchg
cmpsb
stos
nop
out
sub
dec
mov
cmp
xor
and
orl
sub
pop
fnstenv
shl
sub
xchg
push
jecxz
cmp
bound
jae
loopne
ljmp
je
push
sbb
jb
ror
dec
stc
push
jbe
ret
inc
scas
sbb
pushf
cli
adc
fisttps
test
pop
stos
push
pusha
xor
mov
fldenvs
mov
out
lahf
pop
dec
js
and
pop
bound
test
fs
mov
mov
cmp
test
sub
shrb
push
jmp
lds
push
rol
sbb
mov
xor
sub
lock
gs
xchg
jo
sub
mov
test
cmp
cltd
mov
xlat
loope
adc
mov
out
frstor
iret
mov
mov
push
dec
jp
or
ret
pusha
orb
outsb
xor
loope
xchg
and
lret
cmp
xor
dec
and
jle
or
jnp
arpl
jns
in
dec
out
cmpsl
or
inc
fst
insb
push
xchg
push
jg
and
jnp
je
imul
sbb
ret
outsb
mov
push
cld
jl
xchg
jmp
pop
inc
ss
fwait
stos
es
jmp
scas
out
xchg
pop
imul
jns
aam
pop
pop
xlat
mov
lock
insl
mov
call
data16
jnp
xchg
xor
out
sbb
fisttpl
xorl
sub
jmp
mov
es
inc
xor
jns
adc
inc
mov
xchg
repz
dec
fisubrl
cmpsl
cmp
cmp
sub
pop
js
inc
addr16
or
fwait
cmp
ja
push
ret
add
xor
cmp
dec
mov
xchg
lahf
add
cmpsw
cmpsl
push
scas
push
jl
sbb
outsb
aam
cmpsb
dec
stos
cmp
cmovs
push
insb
xor
jno
mov
lock
int
test
sar
shrl
adc
shr
push
cmp
adc
mov
inc
cmp
jno
mov
pop
push
movsb
xor
aas
sub
inc
arpl
pop
pop
sub
inc
mov
pop
jo
aaa
or
mov
popf
inc
fisttpl
push
add
fimuls
cmp
pop
dec
fwait
push
pop
cmp
sbb
inc
lock
arpl
jecxz
in
cwtl
call
cmp
leave
lods
insl
mov
outsl
ljmp
jbe
outsb
popf
jae
ljmp
aas
imul
mov
mov
and
in
pushw
and
roll
sbb
cmp
ja
xor
jp
negl
ljmp
cmp
push
mov
pop
mov
test
mov
dec
cmp
pop
movsl
jo
sbb
int3
pop
cmp
and
jecxz
mov
popa
sub
mov
outsb
mov
or
fcmovnu
insb
xchg
and
inc
cmp
cld
jl
repz
loope
jne
dec
xor
push
push
cmp
aaa
jb
push
aaa
popf
test
inc
repz
cmp
inc
push
jo
enter
mulb
test
sbb
xchg
xchg
xor
lds
sbb
fwait
movsb
mov
in
cmc
out
xor
jbe
in
and
push
popa
lret
jb
movsl
push
inc
inc
cltd
cltd
aas
adc
dec
cmpsl
mov
pop
sub
and
xchg
lcall
inc
jmp
pop
inc
push
aas
arpl
jl
or
test
int
aaa
xchg
mov
decb
xchg
inc
jecxz
sbb
push
jnp
pop
pusha
cmpsl
lret
mov
stos
jae
cmp
xlat
sub
sbb
sbbl
lock
fidivs
add
jae
repnz
jbe
aam
cmp
rorb
mov
dec
daa
mov
stc
mov
push
jp
popf
dec
ljmp
sbb
insb
out
cmp
sqrtps
nop
jb
into
and
push
fidivrl
sbb
in
fiadds
test
loope
incl
aaa
aam
adc
das
inc
pop
gs
sbb
jnp,pn
scas
into
arpl
ds
mov
gs
mov
push
add
sbb
stos
int3
dec
dec
adc
adc
mov
cwtl
loopne
in
aas
clc
push
add
push
add
jne
aad
adc
in
inc
cmp
jo
push
je
push
shlb
xor
xchg
js
xchg
inc
lock
out
fs
fldt
js
dec
iret
pop
pop
cld
sbb
mov
cltd
mov
mov
popf
fimuls
adc
sub
add
daa
mov
pop
in
pop
out
push
clc
add
jmp
cmpsl
loopne
xor
jle
cmc
mov
inc
mov
mov
pop
jmp
xlat
jb
jae
fisubrl
addr16
jns
aaa
aaa
int3
mov
aaa
inc
rcr
cmp
repz
cs
repnz
mov
xor
addl
out
cmp
lret
push
mov
pop
lods
dec
and
mov
push
jecxz
sbb
xchg
add
mov
inc
add
repz
dec
in
sub
push
lods
pusha
cmpsb
cld
scas
xor
in
ds
stos
ljmp
adc
std
dec
cld
pop
pusha
in
int3
lret
mov
iret
int3
push
adc
pushf
cmp
push
sbb
dec
out
mov
jp
dec
std
xchg
aaa
sub
cwtl
fsubs
or
pop
pop
pop
inc
and
popa
cwtl
fsubrl
push
repz
mov
mov
lahf
mov
mov
pop
outsl
fwait
mov
xor
xor
idivb
push
xchg
xchg
mov
fimuls
xor
test
mov
mov
mov
ret
or
fdivrs
mov
xor
sub
data16
jl
jo
xchg
insl
icebp
data16
fisubrl
mov
pop
jg
sub
imul
add
xchg
xchg
outsb
mov
es
sub
sub
call
cmc
lock
arpl
mov
lahf
inc
divb
mov
fs
movsb
outsl
movsb
mov
stc
call
jb
push
push
rorb
shrl
xor
jmp
pop
fwait
push
inc
jnp
pop
iret
clc
cmp
adc
push
int3
xchg
adc
push
add
cmc
sbb
push
int3
push
loop
jge
into
or
in
xchg
fwait
jno
pop
adc
add
pop
movsb
ljmp
fdivr
scas
imul
loope
ret
xor
pop
or
inc
adc
shlb
add
popa
pop
inc
test
inc
xor
adc
fcoml
xchg
dec
pop
cmpb
adc
adc
imul
adc
frstor
icebp
cmp
iret
mov
je
mov
or
lds
mov
cmc
and
ret
push
fmuls
add
sbb
inc
xchg
sahf
pop
mov
mov
ret
stos
call
pop
popf
and
push
lahf
xor
fdiv
frstor
push
pop
or
popa
jp
cwtl
leave
sti
popa
xchg
add
mov
push
xor
cltd
or
mov
mov
jmp
and
mov
mov
mov
push
nop
adc
dec
lahf
dec
jne
xchg
ljmp
push
pop
adc
jns
adc
adc
adc
jno
jae
rorl
cmp
shll
call
rolb
jg
jg
sahf
sub
mov
cs
inc
subb
cmp
xchg
movsb
inc
cltd
sbbb
aad
movsw
imul
or
into
pushl
and
notl
lcall
mov
aaa
push
cmp
sti
cwtl
lret
test
nop
orb
cwtl
dec
in
sub
les
or
shr
pushf
ja
test
scas
inc
sub
mov
xchg
pusha
imul
lahf
je
mov
xchg
cmp
inc
pop
cmp
dec
pop
bound
shl
adc
pop
xor
xor
mov
outsb
loop
add
jne
mov
inc
in
lods
insl
inc
jns
leave
fcompl
push
je
fnstsw
pop
adc
pop
xor
decb
aaa
or
std
jae
adc
inc
clc
dec
test
loop
cmp
mov
xor
mov
lcall
in
out
clc
xchg
xor
pop
jg
inc
push
jnp
cltd
or
jp
aam
sbb
sbb
adc
inc
mov
jbe
insl
and
inc
dec
loope
jno
and
out
jecxz
adc
je
xor
fstp
bound
fwait
ret
loopne
inc
inc
insb
or
fiaddl
mov
imul
jae
sub
jbe
or
dec
adc
jge
or
mov
add
or
sarl
das
std
inc
dec
rclb
ljmp
sub
in
push
inc
insb
dec
mov
push
mov
jl
cmpsb
inc
rclb
lods
mov
push
sbb
outsl
pop
xchg
call
outsl
into
inc
sbbl
adcl
xchg
loopne
push
adc
imul
stos
scas
push
ja
jle
push
out
push
dec
mov
out
or
out
add
js
test
add
and
sub
in
pop
hlt
add
std
shrl
data16
insb
add
ret
cli
out
inc
push
data16
xor
repnz
hlt
jecxz
jl
xchg
sbb
or
mov
dec
adc
aas
dec
pop
jne
hlt
int
jmp
xlat
or
mov
push
add
mov
mov
pop
bound
mov
push
icebp
and
sub
push
pop
xor
shlb
xchg
clc
xchg
nop
mov
lahf
loopne
push
ljmp
pushf
hlt
gs
inc
dec
pop
popf
das
lahf
scas
into
ja
jae
fbstp
or
xor
cmp
jo
jo
stos
jb
aad
xor
in
adc
pop
sbb
shrb
dec
in
mov
pop
mov
es
out
adc
stos
xor
jg
mov
mov
inc
cwtl
cmp
nop
aaa
ja
dec
pop
mov
push
sbb
pop
rdtsc
inc
sbb
testb
jg
inc
or
mov
jmp
rolb
daa
aam
movsl
jbe
cltd
aam
add
adc
mov
mov
adc
and
mov
pop
bswap
loope
testl
push
inc
fwait
aas
outsl
inc
js
lods
dec
rolb
in
fimuls
std
jle
pop
aaa
pop
jl
out
mov
fistl
cmpsl
ja
and
fidivl
cmp
dec
jne
stos
mov
xor
and
lea
xor
push
insb
mov
test
clc
push
or
sbb
test
jmp
fcom
dec
outsl
negb
cmpsb
rolb
shrl
das
sub
daa
xor
xlat
mov
inc
fs
fs
rcrb
stos
sbb
insl
xchg
movsl
cli
cwtl
pop
ljmp
xchg
jmp
pop
lods
mulb
aaa
loopne
popa
outsl
and
mov
xchg
push
faddl
ret
mov
mov
test
lea
cwtl
shll
cltd
and
fcoml
mov
mov
ds
inc
sub
inc
data16
pop
inc
inc
inc
add
pop
lcall
outsl
loop
mov
mov
xorl
mov
loopne
mov
mov
ja
imul
stos
or
daa
les
in
js
push
mov
popa
xor
das
adc
and
mov
push
sub
push
lret
jbe
shlb
sbbl
push
dec
ret
push
repz
add
and
insl
jae
xchg
and
jb
push
movsb
pop
jne
pop
pop
xchg
mov
pop
insl
in
jecxz
inc
cmp
push
adc
push
cmp
lods
das
test
mov
pushf
and
lcall
loop
std
xchg
and
mov
sbb
or
mov
leave
and
notl
xor
sbb
mov
in
jle
and
cmp
pop
pop
push
xor
or
or
arpl
xchg
rcl
jp
inc
inc
jno
ja
xchg
mov
push
and
mov
roll
adc
jbe
test
insl
rcr
sub
jnp
aas
dec
add
cmp
hlt
and
clc
push
cs
dec
daa
ret
jne
pop
cwtl
ss
push
pop
add
dec
sub
hlt
dec
ret
lahf
and
xor
and
inc
pop
loop
hlt
push
pop
lock
xchg
sbb
js
aaa
lock
int3
fdivl
cmpsl
nop
push
cmp
loopne
mov
or
stos
fisubrs
push
xor
hlt
jp
push
mov
cmp
dec
cmovo
xor
jnp
or
std
mov
sub
sbb
push
cs
loopne
pop
fimuls
add
fmull
adc
imul
xchg
jbe
mov
push
mov
sahf
leave
and
inc
or
sar
mov
jg
lret
movsb
cs
mov
jbe
mov
or
xorl
bound
jns
das
push
std
ret
out
bound
inc
dec
fdivr
push
jno
fstl
cmp
and
bound
movsb
out
mov
clc
push
adc
enter
dec
or
mov
fistps
dec
pop
aad
int
mov
jg
fcoms
mov
iret
xor
and
pop
pop
test
lods
dec
inc
mov
cmp
aam
sarb
int3
loope
lods
sub
or
adc
leave
or
popl
popf
in
inc
repnz
popf
and
das
gs
ret
inc
daa
xchg
cltd
in
add
movsl
andb
in
xorb
lea
test
vmread
cmp
push
pop
dec
fwait
push
in
ss
loopne
out
xor
add
clc
or
mov
jo
idivl
dec
add
loope
inc
popa
dec
inc
jo
jo
stos
ds
pop
mov
jp
setl
xor
jg
insb
or
sahf
pop
jl
call
adc
or
sti
dec
popf
enter
jo
orb
imul
pop
nop
jae
inc
mov
jge
xor
push
je
sub
popf
fs
nop
rcll
fistpll
sbb
jne
ljmp
jmp
lds
jbe
out
pcmpgtd
inc
inc
das
mov
fadd
stc
or
mov
inc
sbb
sub
rolb
je
shrl
dec
lret
movl
sbb
jo
mov
clc
sti
arpl
notl
cmc
add
ret
in
test
add
xchg
psllw
pop
xchg
dec
pop
cmp
test
rorl
lods
jg
test
cmp
in
fisubs
or
ds
sbb
xchg
mov
lds
fcoml
and
fidivl
jp
sti
pop
mov
push
adc
sbb
jle
push
shlb
mov
sub
mov
cltd
push
daa
ljmp
add
xor
inc
sahf
inc
mov
ljmp
xor
jno
push
pop
jo
mov
lret
lods
jae
jae
cld
or
test
add
clc
lret
inc
pop
jo
addb
add
lds
and
sbb
jp
fadd
out
xchg
add
int3
shl
outsl
mov
ss
inc
dec
in
xchg
fldcw
in
dec
ljmp
orb
rolb
in
imul
mov
or
das
test
or
xchg
imulb
mov
sub
in
loopne
sbb
lock
xlat
push
in
pop
in
jge
lock
jo
push
jae
stc
push
shrl
sbb
sub
data16
inc
clc
cld
sbb
and
sub
adc
xor
int3
cmp
rcll
dec
out
jb
lds
and
mov
lock
test
imul
outsb
fistps
pop
call
scas
std
punpckhbw
es
pop
sbb
or
jp
loope
negl
and
scas
pushf
outsl
mov
xlat
pop
jp
or
push
mov
insl
pushf
xchg
inc
fnstcw
jne
or
pop
jno
mov
pop
lcall
jns
lahf
jb
in
xchg
loop
inc
test
jne
fadds
xor
out
inc
push
scas
icebp
xchg
mov
aas
jmp
loope
and
mov
xor
dec
into
inc
inc
mov
mov
imul
ljmp
xor
adc
lahf
lds
pop
insl
fbstp
adc
repnz
lods
sbb
rorl
fld
jecxz
pop
shrb
in
push
ss
hlt
sub
addr16
test
xchg
ja
in
xchg
xchg
mov
test
dec
pop
inc
mov
sub
dec
loop
test
push
push
cli
mov
subl
cld
into
pop
inc
jge
je
test
dec
jecxz
pop
inc
dec
pop
and
sbb
lcall
ja
dec
or
daa
and
jbe
push
xchg
mov
inc
shlb
sub
fs
stos
cmp
icebp
lcall
arpl
pop
insl
mov
test
jb
imull
clc
push
lret
cmp
and
jle
add
mov
cs
scas
inc
hlt
and
rol
insb
or
sub
lds
jae
mov
sbb
push
fwait
fs
cmpsl
push
sarl
pop
cmp
arpl
adcl
in
fs
lahf
adc
push
jmp
insb
ja
pop
std
bound
ja
rorb
mov
pop
rcrb
jbe,pn
aad
shlb
and
mov
mov
aaa
icebp
jo
cwtl
data16
lods
xchg
mov
cmp
stos
hlt
push
push
fdivl
mov
dec
mov
ljmp
ret
add
std
stc
cmp
lds
cwtl
rcrl
sbb
mov
pop
insl
loope
or
lcall
or
rcr
inc
inc
in
insl
loop
cmp
cmpb
xchg
pop
mov
aas
cmp
cs
in
fdiv
push
mov
xchg
xchg
out
test
cmp
inc
mov
add
or
lret
shlb
cmp
lock
fwait
pop
in
adc
xchg
sbb
pop
bnd
sub
fcomps
loope
les
xor
icebp
xor
and
mov
or
mov
jmp
repnz
xlat
inc
fnsave
jecxz
xchg
or
icebp
sub
jmp
insb
fcomps
mov
pop
cltd
imulb
lret
addr16
cmpsl
or
stc
pop
out
adc
and
in
rcll
xor
pop
jne
lock
mov
adc
movsb
add
jno
add
lret
jp
or
adc
inc
pop
sub
add
out
fwait
pop
add
mov
mov
mov
mov
lret
jb
add
push
pop
decl
out
fsubl
mov
push
dec
jo
mov
add
imul
stos
icebp
sub
mov
aas
movsb
dec
leave
adc
adc
aad
outsb
sub
fs
cmp
push
mov
xor
push
leave
test
mov
mull
mov
jl
xchg
nop
cmp
es
adc
pop
lcall
mov
stos
add
adc
ficoms
push
pusha
cmc
pushf
jnp
test
in
and
loop
or
in
out
sahf
add
jnp
sub
push
inc
insb
jnp
jnp
aam
xchg
or
push
mov
mov
mov
add
push
lahf
lods
mov
cmpb
pop
xor
int
mov
xlat
ss
lds
mov
loopne
mov
dec
and
fdivrs
in
push
fs
xchg
test
mov
lock
dec
loop
or
je
iret
adc
stc
mov
dec
aaa
fildl
cmp
mov
dec
jl
movsb
ljmp
lea
gs
out
shl
subl
outsl
sub
lds
jle
ss
dec
popf
insb
ss
out
mov
adc
pop
flds
cmp
loopne
das
dec
jg
push
xor
stos
test
lods
aad
xchg
lea
adc
lds
jle
add
ret
cmp
adc
lea
sbb
sbb
mov
std
jnp
or
dec
xchg
popf
adc
fsubr
enter
sbb
mov
sbb
in
aas
aaa
ss
sbb
leave
iret
sub
push
cmp
xchg
les
xchg
jb
scas
mov
lock
outsb
int3
mov
or
mov
push
adc
call
sub
xchg
repnz
lods
shrl
mov
or
shrb
stos
out
into
ret
jo
xchg
shlb
inc
adc
adc
sub
cmp
or
std
push
inc
cmpsb
push
xchg
outsl
int3
pop
fwait
jae
inc
dec
xchg
mov
lret
adc
pop
idivb
les
lock
pop
push
jo
test
int3
loopne
xchg
scas
push
cmp
sub
fisubs
push
mov
fsubrl
jo
push
insl
stos
out
push
mov
jg
in
decb
fwait
enter
loop
in
or
jns
dec
adc
ficoml
into
xchg
test
sbb
mov
pop
and
mov
sbb
mov
jle
xchg
sbb
jae
sbb
leave
push
addr16
mov
adc
mov
in
lock
jne
sub
andl
test
fs
sbb
dec
sbb
dec
xchg
orl
jnp
xchg
push
mull
jge
aad
mov
inc
push
outsl
mov
jmp
sub
dec
jl
leave
and
jg
fincstp
sbb
mov
nop
mov
jmp
mov
scas
adc
inc
sub
mov
mov
test
jae
inc
xor
add
addr16
mov
lcall
movsl
dec
repnz
sarl
pop
and
mov
gs
sahf
mov
aaa
fldcw
icebp
or
test
sbb
sub
or
pop
stos
add
mov
push
fptan
sahf
lret
cmp
lds
ds
rclb
pop
test
sahf
fcompl
insl
cmp
int3
cltd
and
mov
loope
pushf
mov
mov
fs
xor
imul
or
ja
mov
leave
xorb
arpl
cld
jge
mov
and
lock
rclb
mov
sub
xchg
xor
jae
es
xchg
push
mov
cmc
out
or
stos
jbe
xlat
jecxz
jp
mov
into
cmpsl
enter
or
decb
outsb
lret
mov
ljmp
mov
jp
jge
xchg
loope
jo
fcmovnu
mov
call
lcall
sti
ja
das
mov
adc
in
enter
movsb
bound
lock
fbld
aad
imul
sti
leave
pop
mov
fwait
xchg
jle
or
inc
dec
adc
cmpsl
fldt
test
ss
pusha
movsl
enter
call
cmp
dec
pop
scas
and
xor
out
in
stos
jge
lcall
adc
dec
xchg
fwait
adc
fidivrs
imul
test
aam
rcl
inc
adc
lcall
and
mov
xchg
mov
in
or
push
adc
jmp
xchg
lea
cmp
adc
mov
pusha
push
mov
cmpsl
pop
xor
xor
out
lret
sbb
jae
and
int3
insl
push
adc
in
or
lret
pop
add
int3
sti
out
jmp
cmp
push
fmul
jo
leave
and
jae
xchg
pop
pusha
lods
aam
jbe
repz
aas
imulb
adc
mov
jmp
lret
in
push
in
in
push
clc
pop
jl
xchg
mov
add
pop
in
fldenv
pop
aam
icebp
and
push
add
bound
lods
shrl
mov
mov
xchg
jo,pt
xchg
dec
push
jmp
and
sbb
test
jo
add
pop
sub
lods
push
je
in
icebp
fucomp
leave
xchg
cmp
in
xor
jnp
stos
jecxz
int3
push
jne
sbb
cmp
in
fsts
fmul
je
adc
rclb
mulb
xchg
push
pavgb
dec
add
loopne
adc
lahf
cmp
gs
cmpsb
jno
push
sub
mov
xor
cmp
sti
ficomps
cmp
scas
fildll
or
int
xlat
jmp
or
pop
mov
out
add
test
cmp
dec
push
leave
add
js
sub
ss
nop
in
cwtl
lahf
rorl
bound
mov
mov
sub
cmp
xchg
imul
aam
aad
xchg
int
mov
and
dec
xor
icebp
xor
negb
push
ret
inc
test
pop
loop
xchg
fildl
sbb
fistps
repz
cmpsl
je
mov
inc
adc
push
loope
sbb
mov
cmp
xor
inc
fstps
dec
shl
adc
and
inc
cmc
jne
psraw
pop
push
jbe
rclb
cmp
sub
jns
mov
cmpsl
dec
xchg
inc
int
cltd
inc
and
arpl
setnp
cwtl
mov
loope
nop
jmp
push
mov
mov
pandn
pushl
stos
cmp
add
mov
fsubs
xchg
cmp
fimull
sub
imul
decl
mov
push
jge
ss
nop
push
add
out
jmp
pop
ss
lea
sbbl
dec
movsl
or
ret
leave
cmpsb
push
or
xchg
loop
xor
sub
push
jmp
dec
mov
nop
inc
call
dec
test
nop
imul
outsb
mov
mov
test
nop
lds
add
jecxz
js
xorb
jnp
cld
pop
movsb
jno
rorb
adc
pop
inc
mov
fwait
xchg
loopne
xchg
imul
or
outsl
imul
jl
jb
jne
lods
mov
sub
push
xor
cmpsb
and
add
add
or
dec
cmpb
lds
cmp
adc
in
or
sub
dec
leave
cmpsl
mov
adc
leave
fisttpl
out
push
cmpsb
adc
add
inc
dec
fst
enter
push
cs
fldenv
fs
cwtl
icebp
inc
sub
cmc
insb
add
les
sbb
icebp
cmp
cltd
in
dec
push
imul
dec
divl
jp
loopne
emms
repz
xchg
insb
mov
or
push
iret
dec
jmp
mov
and
cmp
daa
adc
dec
push
jnp
fstpt
adc
mov
add
jp
imul
mov
dec
daa
in
mov
push
mov
sub
jecxz
hlt
adc
int
mov
gs
notb
jnp
xor
repnz
cmp
push
shll
push
fstpl
aam
std
ret
pop
cmpsb
dec
jbe
and
test
mov
movsb
and
adcl
xchg
inc
pop
xchg
xchg
inc
push
outsb
cld
cmpsb
stos
cwtl
and
xor
pop
push
repnz
cwtl
sub
clc
mov
insb
leave
mov
push
pop
dec
test
adc
dec
outsb
sub
aaa
cwtl
jns
fld
mov
fstps
icebp
jno
xchg
aad
call
or
xchg
push
cltd
into
adc
bound
loopne
psllq
pop
and
mov
push
ja
leave
stos
data16
dec
xor
xchg
and
jp
cwtl
jae
mov
inc
lods
jb
mov
mov
movsb
mov
mov
dec
push
ds
adc
fnstenv
cld
enter
mov
push
js
dec
cmp
pushf
inc
rclb
xor
or
fnsave
inc
mov
xchg
imul
inc
lcall
push
sbb
jae
xchg
mov
xchg
ret
jbe
xor
orl
scas
lcall
sbb
lock
lock
mov
cmp
sub
mov
and
ja
and
scas
iret
push
push
in
add
push
neg
adc
dec
mov
out
les
ss
push
lcall
push
stc
xchg
arpl
call
cmp
clc
xor
xchg
and
xor
insb
cmp
in
dec
jns
sbb
inc
sub
lds
gs
sub
fiadds
in
mov
and
in
outsb
mov
lret
fldcw
mov
scas
jbe
test
lcall
lds
add
cmp
adc
xor
pop
les
mov
call
mov
mov
fs
pop
fwait
mov
cmp
pop
mov
inc
cmpsl
push
cmp
push
push
cmp
fsubrs
lods
sbb
outsb
sbb
mov
mov
stc
aaa
sub
adc
push
push
sub
or
push
outsb
mov
jp
ficoms
jns
adc
mov
lock
xlat
push
mov
shl
mov
test
push
repnz
int
push
sbb
fadd
jns
xor
insb
cwtl
aad
add
adc
in
dec
or
imul
lcall
sahf
or
aam
sub
xchg
push
dec
mov
gs
pusha
fidivrl
imul
pop
out
sbb
hlt
and
out
mov
mov
jle
xor
xor
jb
pop
aad
cmp
pop
aad
iret
addr16
ds
cmc
jno
cmp
mov
nop
daa
rcl
pop
lahf
or
pop
hlt
jmp
cmp
popf
jae
xchg
or
push
cmp
je
in
xlat
jbe
jl
push
sub
mov
dec
or
icebp
repz
dec
popa
cli
ljmp
add
aas
push
lahf
cld
hlt
jl
add
cmp
lock
gs
xor
out
inc
stos
push
shlb
repnz
call
dec
fsubs
out
dec
push
ror
xchg
insb
jecxz
xchg
mov
jo
repnz
sub
add
fadd
rorb
add
mov
sti
dec
data16
mov
cs
clc
in
add
test
aad
jno
cltd
pminsw
stos
mov
adc
sub
jl
fistl
stc
inc
fnstcw
test
mov
rorb
add
mov
into
xor
cli
bound
test
js
sbb
or
mov
add
mov
cmp
or
loope
mov
out
add
les
mov
inc
test
mov
xchg
nop
or
fnstcw
mov
ljmp
push
mov
xchg
test
fld
jmp
and
icebp
inc
cltd
push
fistps
adc
ret
pop
xchg
adc
cmpsl
sub
stos
inc
decl
clc
hlt
and
clc
test
push
cmpsl
jmp
mov
cmp
jle
and
inc
leave
lods
fmull
jb
cltd
push
iret
imul
rolb
mov
nop
sbb
out
cmp
dec
and
sub
add
in
fstpl
xchg
es
jle
ror
iret
dec
sub
fwait
sub
mov
into
mov
xchg
loop
clc
pop
and
stos
xchg
lods
or
push
mov
fcmovne
pop
xchg
sahf
in
dec
ffreep
adc
cli
adc
loop
jge
aam
push
inc
popa
cmp
rclb
or
pop
push
mov
jno
pop
fcmove
jmp
jmp
mov
adc
jae
js
clc
jecxz
dec
and
addr16
push
pop
idiv
out
idivb
xchg
lret
add
cmp
mov
mov
dec
ljmp
mov
add
inc
pop
pop
fs
int
mul
sbb
push
push
stos
ret
mov
imul
test
aaa
push
adc
jo
xlat
mov
push
arpl
push
outsb
adc
ja
or
jl
std
lret
mov
in
push
test
ret
jae
pop
pop
dec
push
dec
mov
int3
xchg
add
sbb
nop
mov
xor
sub
add
sbb
jbe
xor
sti
mov
xor
inc
std
jg
adc
jle
clc
int3
imul
sub
aas
push
stos
mov
adc
adc
ret
jae
push
fldcw
push
cwtl
pop
adc
pop
push
inc
cmc
mov
rolb
pop
rol
sbb
mov
sbb
fnstcw
out
pop
nop
movsl
cwtl
repnz
sub
sbb
in
and
sbb
push
mov
cmpsb
out
fdivs
sbb
mov
mov
inc
xor
sub
pop
add
jno
pop
push
jae
cltd
mov
pop
add
jmp
fists
or
scas
int3
jns
mov
and
mov
inc
in
push
jmp
dec
in
outsb
insb
xorb
inc
out
add
dec
pop
mov
jle
es
and
fisubs
and
mov
js
jne
repnz
minps
sub
sub
cmp
out
cmc
outsl
xor
inc
fstpt
lds
in
aad
sub
es
call
mov
lods
sbb
xchg
shrb
adc
push
scas
ja
cmp
push
icebp
push
stc
stos
or
and
pop
mov
cmpl
fcmovbe
adc
fldt
dec
js
mov
movsb
cmp
lods
leave
dec
ret
lcall
cmp
jnp
arpl
cwtl
shlb
adc
shl
into
push
push
xchg
in
ss
insl
or
lcall
or
cli
ss
out
out
mov
dec
sbb
inc
aaa
out
pop
div
cmp
sbb
pushf
ljmp
sbb
stos
add
pop
pop
push
aad
ficoml
or
push
clc
mov
loope
cmp
xor
mov
inc
and
shll
je
jp
dec
mov
cmp
outsb
inc
mov
jo
cmp
insl
and
push
test
outsl
push
fidivrl
out
jbe
arpl
jg
xchg
mov
out
aas
cs
jge
lea
sbbb
jle
ljmp
mov
cmpsl
aad
jae
pop
push
jmp
test
push
mov
or
push
sti
mov
mov
xor
sub
repnz
and
push
xchg
into
add
aad
loopne
adc
das
mov
mov
sbb
adcb
mov
dec
xchg
sub
jge
call
adc
lret
shrl
push
cwtl
push
test
lret
movsb
jns
or
pushf
stos
clc
idivl
dec
cmc
pop
fmulp
push
jno
ret
loopne
sub
cmp
push
int
pop
popa
mov
mov
shll
mov
sbb
dec
fs
leave
fldl
insb
adc
inc
dec
loopne
push
sub
push
mov
cmc
sbb
or
out
in
lahf
jo
in
stos
or
js
fidivrs
jo
fwait
inc
lahf
and
dec
lea
sarb
xor
testb
dec
jl
push
mov
fsub
push
xor
push
ljmp
dec
push
inc
mov
mov
jne
sti
nop
lods
pop
mov
mull
inc
xor
push
mov
mov
loopne
out
lret
mov
shrl
and
pop
dec
push
xor
push
mov
lods
xor
xor
pop
xor
mov
int3
loop
out
js
mov
std
xchg
mov
adc
add
lods
iret
jb
jnp
push
lock
sub
movsb
dec
aad
ret
cmc
sbb
ret
add
shl
inc
adc
push
aad
push
jo
test
testb
mov
and
jbe
adc
fisttps
sbb
lcall
je
adc
shll
jb
test
ljmp
dec
das
arpl
cltd
daa
and
push
addr16
mov
out
xchg
sub
es
dec
aam
pop
clc
mov
lea
imul
shr
ss
aas
sti
or
aas
xchg
in
sub
mov
adcl
cwtl
xor
sbb
les
xchg
push
pop
int3
sarl
or
sub
push
arpl
cmp
cmp
fidivs
dec
sub
jp
mov
fldt
adc
leave
mov
rcrl
add
flds
stos
adc
xor
push
mov
cltd
xor
sub
mov
aam
cld
andb
icebp
inc
add
push
insl
pop
ss
loop
outsl
nop
lods
icebp
test
xor
or
vunpckhps
cmp
xchg
xor
push
aas
mov
fsubr
clc
gs
push
dec
in
enter
jp
lods
xchg
inc
pusha
stos
in
ret
mov
xor
mov
shlb
aaa
in
xlat
jb
mov
mov
pusha
out
lret
es
int
mov
or
adc
mov
cmp
or
loopne
dec
lcall
data16
push
lret
jmp
mov
lret
and
dec
ja
shll
push
xor
enter
mov
xchg
leave
pop
enter
into
dec
mov
cmp
or
fiaddl
ljmp
inc
and
push
scas
cwtl
push
add
fmul
pop
fcoml
lea
mov
repnz
fsubl
fstl
cltd
jp
cmp
sub
stc
and
fcoms
and
insl
pushf
push
xor
int3
jle
and
mov
in
out
mov
addr16
ds
cmp
mov
scas
dec
jne
lds
mov
in
jo
call
loop
jns
loopne
imul
ficoml
cmp
out
leave
rcrl
jecxz
xchg
in
fnsave
add
push
test
xchg
or
hlt
pop
and
ja
out
data16
or
or
mov
xchg
aaa
insb
pop
jbe
dec
xor
lock
lods
push
push
pop
shlb
stc
xor
in
fisubrs
repz
rcll
sub
mov
push
fwait
int3
in
sbb
addb
ljmp
ds
movsb
sti
mov
push
int3
xor
lock
dec
test
pop
stos
mov
sbb
fsts
push
stos
xchg
dec
std
repz
pop
es
jmp
rolb
fidivrl
mov
imul
dec
aas
cmp
test
hlt
lret
pop
lods
or
aas
xchg
pop
and
sbb
call
dec
add
adc
das
jmp
inc
lcall
sbb
in
roll
das
mov
adc
lock
cli
int3
mov
fs
iret
push
dec
ljmp
xor
rorb
sub
adc
add
mov
mov
or
or
xchg
ds
out
or
mov
mov
out
aad
cmp
fbstp
jnp
cmc
push
imul
adc
mov
cmp
and
inc
xor
imul
xor
test
repz
jle
pop
pop
in
cmp
inc
mov
xor
das
xor
sub
jns
or
in
jne
in
jecxz
push
pop
push
mov
cmp
subl
and
mov
in
push
fs
mov
jecxz
fiaddl
push
fs
mov
fstps
cmp
ljmp
add
adc
lods
inc
mov
or
test
psrld
adcl
aaa
iret
dec
jl
pop
fldl
lret
jmp
iret
mov
pop
sarl
outsl
movsl
mov
mov
add
and
push
pop
enter
popa
adc
push
je
jno
or
lods
or
xor
adc
pop
mov
iret
jp
push
xchg
inc
mov
pop
scas
out
and
xchg
rclb
rcr
pop
mov
jb
addr16
lcall
lret
nop
sahf
sti
mov
mov
pop
sti
dec
es
in
cwtl
repnz
and
fisubs
jge
cmc
inc
in
aaa
mov
adc
and
aas
in
pop
inc
ds
dec
aas
mov
inc
pop
test
fidivs
jns
pusha
js
int3
pusha
xor
out
insl
cli
stos
push
push
inc
sbb
negl
lds
repnz
movsb
pop
push
add
stos
stc
push
xchg
dec
jo
inc
jno
fs
sti
cmp
adc
loopne
or
aas
je
inc
cmpsl
or
and
ss
loope
outsl
mov
je
and
in
dec
inc
jno
jl
adc
ret
lock
inc
or
xchg
lahf
jo
das
stc
pop
sarl
lahf
push
jmp
or
cwtl
sub
and
mov
sub
inc
xlat
sub
inc
add
pop
jnp
insl
es
cli
jmp
fcmovu
fists
out
or
inc
aas
fistpl
sbb
mov
jp
lcall
lock
pop
aaa
cmp
push
cltd
repnz
int
push
xor
in
mov
mov
rorl
int
rcl
jne
and
rcl
pushf
in
mov
xor
rclb
mov
jle
cmc
and
hlt
lods
loopne
std
xchg
movsl
insb
push
mov
adc
jl
loop
add
xchg
loopne
inc
jmp
mov
fidivs
pusha
pop
test
inc
fisubs
into
nop
pop
xchg
test
add
addr16
fdivs
nop
aaa
lods
mov
mov
pop
inc
test
nop
into
adc
shlb
test
enter
test
xor
pop
ds
ljmp
xor
mov
mov
jp
mov
iret
fs
sahf
cs
jb
mov
fnsave
subb
cmp
xchg
mov
popa
pop
rclb
insb
mov
out
les
call
push
mov
movsl
sub
mov
std
lods
dec
xor
in
icebp
stos
jb
jnp
addb
lods
icebp
jae
or
xor
pop
jg
rcrb
aad
sbb
out
in
cs
xchg
loopne
pop
aas
and
inc
movsb
adc
mov
rcrl
out
xchg
int3
adc
push
jo
push
les
sub
mov
clc
pop
negl
xor
loope
adc
jns
shlb
mov
mov
hlt
enter
xchg
mov
jecxz
inc
xor
leave
ret
sahf
cmpsb
adc
jae
dec
rorl
mov
stc
or
cwtl
pop
cmp
cltd
or
leave
push
pusha
xor
xchg
fidivs
inc
xlat
pop
sub
add
fistps
insb
mov
or
shrl
ucomiss
inc
in
stos
mov
xchg
leave
mov
pop
nop
mov
in
into
loopne
sub
fs
cmpb
cltd
mov
pusha
scas
pop
fsubl
xor
pop
xchg
cmp
add
les
cvtps2pd
sub
or
outsb
jle
adc
fs
aas
push
ficoml
sbb
mov
adc
xor
rorb
rcrb
loope
pop
sbb
subb
cmpb
xor
ljmp
sahf
jo
inc
push
jo
cmpsl
ds
lods
pop
lods
add
fdivrl
add
xchg
jns
lods
stc
xorl
and
test
adc
lret
cmc
adc
fs
pop
loopne
cmc
push
xor
enter
jo
xlat
dec
loopne
mov
push
jo
shr
push
shrb
cmc
repnz
fucomip
mov
out
adc
out
add
inc
and
shll
subb
pop
xor
xor
into
cmp
pusha
sarl
test
mov
and
jmp
add
xor
arpl
es
cltd
stc
cmp
addb
jge
add
std
push
sbb
mov
push
aam
mov
leavew
lret
lea
push
or
repz
push
mov
pop
fisttps
and
loope
cmpsb
lret
lods
cmpsl
out
jmp
sbb
and
aaa
pop
mov
xor
call
icebp
dec
cwtl
gs
add
fs
addr16
repz
mov
mov
push
ss
pop
pop
lea
mov
fdivrl
shr
jle
in
xchg
sub
fldenv
mov
xchg
or
out
cmp
sets
inc
rcll
pusha
mov
nop
hlt
into
arpl
inc
push
pop
lcall
push
cwtl
imul
adc
or
push
and
data16
cwtl
mov
or
pushf
sbb
push
lock
mov
cmpsl
pop
inc
push
out
inc
xlat
sbb
call
adcl
aaa
aaa
in
out
pop
inc
rcrb
bound
cmp
inc
sbb
or
orl
jge
subl
jg
push
gs
push
jbe
test
in
pushf
call
mov
in
loope
daa
mov
ds
pop
rorb
aas
iret
scas
pop
sbb
xor
pop
movsb
mov
shrl
pop
movsb
cmp
mov
test
loopne
xchg
outsb
imul
fs
and
xor
mov
jns
mov
pop
or
sbb
sub
adc
mov
je
lods
pop
mov
mov
mov
hlt
jecxz
inc
rorl
xor
in
inc
mov
inc
cmp
jo
cltd
fidivrl
push
xchg
rorl
sub
sbb
movsl
push
pop
fs
lret
dec
icebp
sbb
mov
mov
lea
push
lcall
ror
into
cld
or
jecxz
add
mov
jo
xor
dec
loopne
or
add
in
scas
jbe
adc
jbe
outsl
lock
cmpsl
pop
icebp
clc
and
out
lcall
mov
dec
cld
mov
ja
dec
mov
test
xor
out
sbb
jle
rorb
fsubs
add
push
push
aam
lds
cmc
mov
mov
mov
sub
push
add
lock
push
sbb
ret
cmc
inc
or
in
loope
xor
jl
xlat
mov
sbb
jns
pop
jle
lock
mov
clc
lods
movsb
or
pop
jl
loopne
movsl
jg
lret
adc
mov
xor
sub
aad
push
push
xchg
or
jge
mov
adc
fs
lods
jae
popf
test
or
out
test
push
pop
and
insl
test
fstps
stos
test
js
xor
or
jp
xchg
push
cmp
cmp
sub
nop
jae
pop
sub
ljmp
push
test
data16
cli
pop
pop
mov
lret
ljmp
dec
sub
xchg
subl
sahf
ret
pusha
pop
fidivs
mov
jno
stos
outsb
sub
mov
jnp
mov
or
or
loope
xor
inc
fsubr
pop
ret
push
xor
push
add
jne
jnp
jb
loopne
dec
lods
or
ret
popf
xor
je
add
arpl
mov
push
cmc
xchg
mov
mov
or
push
dec
outsl
cmpsb
push
enter
lock
mov
aas
cmp
scas
pop
or
mull
pusha
xorb
cmp
jae
adc
js
fcmovbe
cli
cmc
fcmovu
mov
shlb
bound
jmp
sub
pushf
lret
rclb
out
mov
add
jbe
xchg
adc
adc
loopne
or
adc
out
lods
lock
and
or
adc
ret
mov
jae
je
push
subb
addr16
ficompl
inc
ja
inc
sti
addr16
or
call
and
push
rolb
jl
fs
add
push
jns
in
adc
mov
fsubrl
popa
nop
test
popw
jbe
sbb
sbb
imul
loop
xchg
cmp
in
pop
and
pop
xchg
pop
data16
inc
das
push
lahf
xchg
fs
fwait
push
fsubp
pop
in
arpl
lock
mov
jae
mov
pop
xchg
pop
lahf
cwtl
test
shlb
cli
cmp
fs
mov
push
sbb
test
in
mov
mov
sub
add
ret
xchg
cmp
shrb
jno
rorl
add
mov
call
or
sub
add
test
daa
xor
jg
fbld
shrb
pop
je
jbe
adc
dec
fiadds
ja
mov
and
cmp
fidivl
fistpl
pop
jae
clc
inc
pusha
in
xchg
pusha
dec
cs
enter
sub
xchg
pusha
mov
into
movsl
or
inc
loope
mov
push
cs
mov
fcomps
pop
mov
fs
sbb
jecxz
popa
in
cwtl
movsb
ja
out
cli
pop
xchg
pop
fsubl
sub
in
out
cltd
or
iret
out
cli
in
lods
mov
and
rcr
inc
in
push
lcall
push
jmp
dec
test
xor
test
mov
push
cmpsl
shl
mov
out
push
ficompl
testl
push
xchg
xchg
nop
ret
push
shll
lds
sub
xchg
and
pop
cmp
adc
pop
jg
cli
mov
hlt
push
jmp
xchg
mov
repz
jns
sbb
stc
pop
popa
xchg
pop
jg
xor
sub
xchg
jbe
mov
mov
je
ret
cmp
xchg
lods
fisubrl
cmp
fstpl
out
sub
stos
stc
xor
pop
and
aaa
and
pop
jns
shll
out
adc
mov
loope
push
fmulp
cwtl
sbb
jp
movaps
call
fucomp
faddl
pop
dec
xchg
flds
xchg
mov
std
dec
dec
outsb
testl
xlat
xchg
mov
popa
loopne
in
fcomps
loopne
dec
in
xchg
inc
cmpl
mov
push
pop
sarb
jb
or
pusha
rcl
sub
cmp
roll
lods
add
jnp
iret
mov
dec
dec
sti
stc
xor
call
fdivrs
or
stos
lahf
push
mov
test
into
sub
pusha
mov
mov
imulb
or
in
jmp
fnsetpm(287
jge
call
sub
repz
push
rcrl
int
or
xchg
jmp
push
nop
ds
mov
out
iret
cmp
popa
out
fnsave
lock
lds
jae
xchg
push
fadds
psllw
bound
cmc
scas
mov
add
rcll
pop
subb
xchg
sbb
cmp
mov
cmc
pusha
out
cmp
push
rol
aam
dec
and
push
sahf
lods
cmpsb
in
jnp
shrb
addl
add
aas
mov
dec
xlat
pusha
insl
add
push
or
xchg
sub
push
enter
test
mov
inc
cli
or
or
jne
dec
push
imul
stc
hlt
mov
adc
mov
add
xor
push
adc
out
or
lret
popa
inc
mov
adc
inc
jns
js
mov
xchg
add
stos
lea
and
push
movsl
clc
dec
push
jmp
subb
xor
aas
sub
loopne
clc
push
push
mov
mov
out
arpl
push
adc
and
popa
xchg
ljmp
sub
and
ja
cmpsl
test
fs
iret
fimuls
stos
push
dec
or
push
jp
xchg
inc
clc
subb
jg
xchg
lods
addb
adc
arpl
dec
int3
cli
push
mov
cli
inc
aad
out
nop
imul
add
push
popa
mov
das
cmpsb
lods
call
push
xchg
mov
inc
rcl
movsb
sbb
or
pop
mov
mov
and
popa
ret
in
or
adc
mov
bound
cmp
mov
push
cwtl
add
fdivl
sbb
pop
push
cmp
sub
adc
test
test
mov
mov
int3
pop
idiv
int3
fisttpll
std
mov
inc
std
jecxz
adc
addr16
mov
jle
sbb
cmc
mov
sbb
rcll
push
dec
dec
mov
fcoms
nop
cmpsb
sub
out
sti
jg
cmp
fsts
js
push
insb
testb
arpl
pop
es
cmpsl
jo
popf
mov
imul
xchg
mov
dec
jae
adc
in
repz
aad
pop
or
fsubp
or
push
pop
or
popf
xchg
fmull
mov
add
dec
aam
pop
in
sbb
sbb
arpl
cmp
sub
aad
mov
pop
fbld
sti
clc
jmp
cmpsl
ds
dec
mov
xchg
fs
push
and
and
adcl
imul
js
movsl
jbe
and
mov
cmp
and
shll
int3
in
cmp
fdivr
cmp
push
inc
in
mov
mov
cmp
shr
lock
push
or
ja
xor
dec
add
cmp
rcrb
xor
test
insb
scas
shll
push
loope
dec
mov
das
not
gs
notl
imul
push
and
and
orb
pop
call
mov
xchg
test
ss
test
push
ficoml
shrb
fmuls
sbb
popf
add
push
mov
cld
dec
mov
jl
mov
das
aad
pop
stos
cmp
aam
xor
xor
sub
test
push
cmpsb
mov
iret
pop
icebp
xchg
mov
cmpsl
mov
inc
arpl
fstp
adc
insl
test
dec
pop
insb
shll
pop
repnz
test
inc
add
rorb
out
dec
and
adc
out
int3
flds
test
push
or
sti
test
mov
addr16
mov
sbb
sbb
call
adc
movsb
dec
jl
adc
mov
fcmovb
add
inc
insl
pop
mov
aaa
imul
pop
mov
jl
cld
out
loope
insb
xor
xchg
stc
lahf
fbld
ret
int3
mov
jg,pn
adc
lahf
mov
sahf
lds
inc
mov
pop
imul
or
xchg
repz
xor
cli
lds
mov
jmp
and
test
pop
lcall
dec
outsb
insl
idivl
dec
adc
and
pusha
dec
stos
pop
xchg
mov
lea
popa
sahf
je
mov
test
and
push
mov
sbb
les
add
daa
popf
pop
mov
xor
shrb
sub
outsb
xchg
iret
mov
shll
fidivrl
push
pusha
xor
jnp
fnstsw
add
or
pop
xchg
fmull
push
cli
push
add
mov
mov
jnp
ja
pop
inc
pop
pop
scas
and
push
mov
mov
pop
inc
call
xchg
repz
fiadds
mov
mov
jge
dec
jb
fwait
jg
cmpsb
sbb
scas
dec
add
test
xor
xchg
test
sub
cltd
dec
popa
fwait
mov
imul
test
mov
in
xor
jmp
aaa
xchg
repz
aam
call
std
mov
insl
xorb
ss
sahf
dec
xlat
sar
fsts
jge
nop
add
lds
lahf
mov
mov
addr16
sbb
in
call
xchg
hlt
mov
mov
adc
sub
sub
rcrb
cltd
neg
push
lret
mov
cwtl
and
fs
jno
insb
test
adc
clc
lret
mov
and
sub
or
inc
sub
sub
cmp
fcomip
pop
ss
mov
jne
shlb
cmpsb
pop
and
lcall
xor
jl
or
nop
insl
xlat
sbb
adc
shll
bound
daa
sub
rcrl
xlat
sub
cmpsb
test
pusha
xlat
lods
jb
lcall
inc
cmp
add
xor
cmpsb
fdivrs
sub
fists
test
enter
mov
mov
xchg
cmp
outsl
daa
jp
push
test
push
fst
xchg
or
adc
mov
dec
not
shl
and
movsl
adc
stc
sub
cmp
mov
aam
push
pop
sub
mov
adc
push
int
sub
dec
jae
dec
faddl
dec
mov
mov
cwtl
mov
loopne
aas
inc
add
and
cmpsb
add
cli
pop
mov
cmc
ss
inc
sub
lret
cmp
jne
jge
mov
push
and
xchg
shlb
clc
int
adc
rolb
jnp
sbb
xchg
dec
lea
gs
sub
movsb
outsb
sbb
jne
aaa
movsb
jle
mov
pushf
popf
dec
inc
pop
loopne
mov
cmc
lea
cmp
dec
icebp
push
adc
pop
push
sbb
orb
fst
and
xchg
cmpsb
adc
inc
popf
out
ret
fimull
cmp
mov
adc
cwtl
push
fmull
add
dec
xchg
jl
filds
or
pop
sbb
jmp
lret
jg
movsb
or
xchg
mov
or
cmp
sub
xorb
mov
dec
mov
jb
xchg
out
mov
or
and
cmc
mov
in
int
daa
movsb
in
ss
ja
xchg
push
aam
cmc
cld
fnop
dec
test
push
cld
fwait
jecxz
mov
pusha
fimuls
aam
arpl
insl
inc
push
jnp
pop
lods
pop
xor
daa
mov
fs
jge
iret
js
inc
xor
xchg
lret
xor
cmp
sub
jno
mov
imul
fisubrs
jo
jbe
sub
xchg
push
andl
mov
pop
dec
sar
dec
push
adc
sbb
div
mov
int3
out
cmp
fisubrl
xor
fwait
decb
imul
in
cmp
dec
addr16
scas
aaa
in
pop
cli
mov
adc
test
push
jbe
out
xor
jl
push
cmpsl
movsb
gs
jle
xchg
jno
lea
mov
stos
int3
movsb
mov
aaa
mov
fsubl
dec
and
or
pop
inc
scas
or
scas
push
mov
jmp
cmp
mov
loope
or
adc
fisttpl
clc
and
pop
fwait
jo
std
lock
fbld
call
jmp
test
push
je
lret
movsl
testl
jecxz
andl
daa
ja
and
ljmp
inc
mov
lods
stc
jecxz
sbb
push
adc
adc
mov
mov
movsl
aam
mov
inc
int3
push
test
mov
pop
mov
pop
inc
es
lock
fisttpl
dec
loope
outsb
xor
icebp
das
mov
movb
icebp
xor
in
push
mov
ds
pop
addr16
ds
mov
sub
test
push
mov
das
stos
lea
xor
dec
and
xor
cwtl
outsl
mov
int
mov
pop
xor
add
leave
jg
je
scas
dec
pop
xor
sbbl
sub
adcl
xor
lret
aad
cwtl
inc
or
rclb
lahf
adc
push
and
out
js
pop
jge
call
popf
outsb
testb
sarl
xchg
adc
into
mov
adc
lock
or
insl
arpl
push
mov
pop
cmp
ja
fwait
push
add
enter
lea
or
mov
inc
arpl
cmp
es
aad
cltd
fcoms
mov
nop
dec
das
pop
push
dec
jp
ret
int
add
icebp
dec
lea
in
mov
mov
test
aad
pop
pop
cli
mov
clc
and
xor
outsb
les
jmp
jae
and
cs
mov
js
jbe
inc
xchg
push
push
cltd
inc
push
cltd
aas
mov
imul
fs
or
or
sub
div
pop
sahf
stos
xchg
loope
xchg
jb
scas
mov
lds
in
push
inc
mov
jecxz
jmp
inc
xchg
mov
sbb
aas
js
add
int
fs
imul
add
cmp
aam
stos
out
or
dec
rorl
jle
fwait
mov
mov
dec
jb
add
hlt
insb
dec
xchg
pushf
icebp
aad
enter
add
lcall
pop
iret
push
aas
xor
test
test
nop
push
in
roll
enter
dec
pop
shlb
mov
cmp
aam
adc
jno
daa
out
outsb
xor
fists
xchg
jno
in
stos
fcoms
push
jb
xor
mov
push
pop
dec
xor
mov
shlb
nop
and
mov
int
addr16
sbb
adc
in
in
pop
sahf
and
mov
push
adc
or
icebp
pop
rorb
shll
push
push
data16
pop
dec
ljmp
dec
mov
cmpsl
cmpsl
cmp
adc
rorb
and
mov
movsb
ds
add
pop
jae
int
subl
adc
fwait
idivl
scas
mov
dec
movsl
and
in
fimull
enter
or
iret
jne
std
jb
enter
std
stc
aas
pop
mov
iret
pop
mov
repz
xor
call
stos
clc
xchg
sbbl
or
lcall
mov
xorl
cmp
imulb
sub
xor
pop
cmp
ret
lea
sub
jle
cmpsb
or
arpl
xchg
mov
repnz
push
pop
add
and
mov
rcll
loope
mov
addr16
xor
jecxz
lcall
push
movsl
push
mov
jo
xor
pop
imul
dec
outsb
sbb
lret
je
or
adc
ret
imul
mov
xchg
mov
in
iret
js
addr16
stc
mov
mov
xchg
inc
jne
adc
leave
dec
adc
test
out
dec
aad
adc
subl
pop
stc
inc
jns
subb
incl
adc
adc
and
mov
push
rcr
aad
jae
sub
push
pop
add
sbb
and
fisttpl
mov
jne
cld
mov
clc
dec
aas
stc
das
or
outsb
jo
cwtl
into
mov
push
mov
xor
adc
pop
js
pop
int3
xor
inc
in
adc
add
out
jp
cmc
out
push
mov
jp
jb
mov
mov
mov
lock
pop
mov
enter
clc
adc
xlat
stos
lret
out
xor
loopne
xor
jp
and
mov
es
xor
adc
aad
xor
sbb
aaa
fld1
test
roll
enter
cwtl
fwait
or
push
jo
push
push
mov
roll
push
mov
ficomps
stos
enter
outsl
pop
jmp
adc
pop
and
pushf
fidivs
sarb
jo
not
xlat
ljmp
mov
lret
mov
scas
test
push
add
lock
loopne
jecxz
and
sub
cmp
cwtl
xchg
cld
movsb
mov
adc
dec
popa
sub
call
call
mov
out
cmp
xchg
clc
inc
je
lock
imul
aad
test
ss
js
or
sets
rcrb
adc
jp
inc
ss
ljmp
inc
cmpsl
push
mov
and
pop
arpl
inc
lea
testl
ret
stos
jle
ljmp
mov
cmp
mov
mov
jnp
xchg
outsl
and
push
or
mov
xlat
jl
pop
push
xor
sahf
pop
inc
fcos
fsubl
and
sbb
leave
icebp
rcl
jle
call
cmc
cmp
cmp
jb
rcl
cmp
or
cltd
cmp
mov
inc
jmp
adc
adc
mov
loop
or
push
scas
adc
or
jecxz
nop
aad
mov
jbe
aas
fidivrl
cld
sbb
icebp
inc
xor
sub
pop
ret
cltd
notb
cld
insb
or
rclb
or
repz
int3
or
push
scas
jmp
mov
inc
fisttps
fcmovb
mov
scas
xor
jae
add
pslld
rcrl
push
movsb
mov
xchg
in
jecxz
mov
cmc
mov
sbb
lret
sti
add
xchg
add
dec
mov
popa
daa
mov
or
sbb
push
jmp
in
sbb
cmp
lock
fwait
or
add
lcall
lcall
inc
cltd
gs
lock
iret
xchg
or
push
aaa
dec
dec
ss
cmp
repnz
or
cltd
lods
shl
and
cmp
iret
dec
mov
jp
adc
push
pop
icebp
cs
xchg
xor
cmp
out
push
clc
add
loop
bound
dec
pop
and
jno
xor
cmpsb
dec
inc
adc
push
loopne
out
data16
rorb
add
popa
pushf
mov
outsl
lds
lahf
subb
shll
aaa
push
cmp
cwtl
int
in
mov
jecxz
in
mov
loopne
scas
sbbl
mov
ja
icebp
push
jnp
push
addr16
lret
in
inc
or
pop
jae
mov
test
jns
out
mov
lret
cmp
or
push
fdivl
in
push
mov
fs
cmp
ja
rorl
jle
mov
push
movsl
mov
jecxz
push
push
insb
pop
inc
jae
jge
and
loopne
imul
xchg
mov
cmp
into
rcl
movsl
in
hlt
xchg
ds
xchg
pop
data16
and
pop
mov
scas
fisttps
mov
and
adc
ret
stos
mov
xorl
insl
iret
loope
xor
ljmp
xor
fsubl
lods
in
add
mov
mov
in
cwtl
sub
push
into
adc
pop
outsl
stos
pop
adcb
or
mov
loopne
shlb
iret
xchg
xlat
shl
cmp
adc
bnd
cmp
or
xchg
adc
sub
paddw
jbe
icebp
pop
sub
fistpl
pusha
testb
mov
in
adc
movsb
or
lret
aad
aaa
sbb
inc
mov
adc
cmpb
adc
and
add
sbb
xor
out
push
inc
jge
mov
fnstenv
sub
mov
or
or
out
lods
cli
pop
xor
push
stc
mov
xchg
loopne
icebp
loope
fs
xchg
push
adc
fdivp
loope
xchg
dec
rorb
adc
jbe
mov
mov
dec
pop
dec
xchg
shr
call
cwtl
out
mov
sbb
sbb
mov
or
ljmp
jle
mov
aam
loopne
add
sub
lock
inc
cmc
push
jle
out
ss
jg
and
andl
es
inc
ret
mov
cmpsb
popf
push
pop
mov
cwtl
adc
cmc
push
mov
xchg
and
in
test
aas
mov
or
aaa
or
mov
inc
enter
cmp
aam
xor
movsl
imul
out
xor
sub
or
rorl
fs
js
inc
pusha
push
xchg
bndstx
in
sub
std
daa
mov
inc
ret
and
mov
dec
xor
rclb
pop
bound
out
sub
mov
mov
xchg
pop
cli
dec
inc
pop
cmpl
cmpsl
jb
icebp
push
cmpb
or
adc
fisubl
mov
pop
lods
cmp
ljmp
inc
int3
xchg
xor
xor
ljmp
test
xchg
cli
imul
xchg
add
stos
andl
ss
sub
add
sub
mov
mov
rolb
mov
jnp
mov
scas
inc
test
push
jl
pop
outsl
mov
jbe
daa
repnz
neg
adc
ficoml
std
ja
cmpsl
mov
insb
adc
pop
mov
lret
in
movups
and
mov
ret
pop
and
inc
in
ret
push
dec
lret
out
out
shlb
inc
data16
adc
ds
mov
mov
or
mov
test
scas
dec
inc
or
sarb
push
adc
aad
lret
jae
fsts
cmp
adc
into
test
inc
mov
aas
pop
outsb
or
repz
dec
jecxz
lds
aam
repnz
cld
enter
jmp
or
jae
adc
mov
add
aaa
xchg
and
xor
repnz
cmp
adc
inc
push
call
popf
pushf
sub
jg
in
or
fdiv
push
jno
mov
in
pusha
call
add
arpl
icebp
enter
lret
inc
icebp
pop
in
sub
ljmp
pop
cmpl
push
icebp
aaa
arpl
xchg
xor
and
xor
adc
movups
les
mov
cmp
lds
mov
and
ret
fwait
jmp
pop
sbb
sahf
in
loopne
sub
push
mov
push
add
out
sub
and
std
pop
mov
cs
leave
push
lret
add
push
and
jge
out
ljmp
or
test
pop
add
xlat
negl
enter
call
cltd
mov
lods
repz
pop
iret
ficompl
enter
inc
aas
mov
xchg
sbb
xor
decb
nop
inc
inc
push
add
push
js
out
ffreep
mov
in
inc
gs
mov
mov
repz
test
push
call
lods
cwtl
loopne
out
mov
xchg
add
sub
std
cld
mov
mov
aam
dec
syscall
ret
std
aaa
lahf
loop
sti
ret
cmp
inc
and
cld
in
mov
out
aad
or
lds
test
mov
rcrl
cwtl
pop
shll
sub
adc
xor
dec
add
repz
xchg
inc
dec
and
sub
dec
mov
jo
aas
xchg
das
pushf
lret
fstl
inc
or
push
insl
inc
lret
sbb
sarb
jmp
mov
push
mov
lock
cmc
pop
push
mov
inc
in
js
imulb
jb
ljmp
xchg
daa
push
mov
inc
js
ljmp
orb
sub
cld
bswap
sarl
cmc
popa
adc
adcl
mov
cmp
movsl
push
xor
pop
pop
or
popl
shl
add
iret
xor
lret
pop
push
into
mov
mov
sbb
cmp
js
adc
pop
out
into
les
mov
lcall
sbb
mov
shlb
sub
jecxz
roll
push
mov
imul
loope
stos
sub
cmp
stc
mov
cli
lahf
test
xor
stos
fsubl
fsts
jae
mov
push
pop
call
movsb
cmpsl
lods
imul
push
shlb
jg
adc
ljmp
cmp
or
ficoms
addr16
sub
dec
das
push
pop
add
xorb
popa
shll
and
xchg
dec
inc
aam
xchg
ucomiss
inc
sub
mov
push
adc
add
mov
adc
ret
stos
in
sti
int
xor
scas
push
imul
clc
mov
jb
test
mov
jecxz
call
adc
mov
dec
str
sbb
arpl
dec
call
jo
jl
or
shlb
xchg
xor
jmp
lcall
push
inc
dec
enter
fisubrl
xchg
xchg
inc
mov
xor
jp
inc
data16
xchg
out
sbb
lock
pop
xchg
in
jno
sub
mov
pop
push
stos
xchg
inc
in
ret
in
stos
xchg
push
out
xchg
outsb
mov
add
loope
add
jns
nop
aam
mov
pop
cmp
shrb
pop
add
in
popf
sub
ficoms
loope
cli
dec
push
push
test
jno
out
into
inc
jl
out
in
aad
inc
mov
sbb
push
xor
push
add
xchg
stos
cltd
adc
pop
insl
add
sub
adc
inc
cli
jne
jmp
dec
jecxz
movsb
mov
in
les
stos
aad
decb
xor
push
and
dec
adc
cwtl
xor
cli
stos
aam
decl
pop
shl
adc
xchg
in
push
imul
cltd
adc
adc
repnz
fiaddl
aaa
jb
test
push
pop
or
rorl
adc
gs
mov
dec
dec
and
or
add
std
popf
ffreep
cmpsl
movsl
fs
imulb
push
dec
cmp
lret
mov
mov
int3
xchg
mov
stos
mov
cmp
or
cmpsl
mov
pop
std
mov
flds
fists
jnp
mov
out
fcoms
sahf
jb
out
cwtl
inc
rcr
add
mov
shlb
and
rorb
out
push
movsb
fmull
xor
cwtl
shr
lret
jnp
les
or
xor
mov
cmp
cwtl
mov
divb
stos
push
out
pop
cs
loope
inc
add
icebp
call
xchg
sahf
dec
lret
inc
dec
hlt
push
icebp
movsb
in
rcrl
cmp
xchg
iret
pushf
and
nop
mov
cli
mov
mov
les
lock
jns
popa
jo
in
loop
mov
mov
pusha
mov
mov
add
in
sbb
and
aam
stos
imul
mov
stos
mov
aaa
aam
dec
inc
in
adc
xor
ficoml
xor
gs
xor
aad
js
shlb
rcl
js
mov
aas
insl
xchg
rolb
inc
sbb
rorb
and
ja
sbb
nop
xchg
jb
cmp
mov
cmp
jb
clc
sbb
inc
cmp
popf
andl
cmp
and
adc
fsub
mov
lcall
jb
shll
pop
test
jle
xor
xchg
dec
push
cmp
cmp
mov
lcall
sbb
mov
lcall
xchg
inc
mulb
fs
sub
loope
movsb
mov
xchg
fmull
das
mov
fdivl
shlb
sti
out
mov
add
imul
push
outsl
push
xchg
rclb
fsubrl
push
xchg
inc
mov
cmpsl
popa
test
sar
out
or
scas
adc
mov
lcall
lcall
lock
cli
loopne
xchg
aas
inc
rcr
std
idivl
xchg
pop
popf
cmp
flds
mov
or
andl
cmp
cld
and
test
adc
bnd
pop
add
mov
adc
cmc
and
push
sbbl
loop
loopne
test
mov
gs
dec
sub
cmp
mov
movsb
mov
fstps
enter
sub
mov
enter
lds
js,pn
js
ja
mov
xor
mov
loop
jmp
xchg
out
movsb
imul
ror
mov
push
push
sub
xorb
xchg
mov
dec
lret
pop
pop
adc
pusha
icebp
cwtl
xor
xor
jb
pop
fs
mov
push
out
pop
mov
or
add
pusha
in
mov
add
inc
dec
push
je
mov
mov
data16
lcall
push
out
jg
insb
cmpsl
nop
xlat
scas
adc
sub
mov
lock
mov
aad
dec
fs
dec
mov
inc
dec
mov
int
cmp
adc
clc
sahf
push
mov
notl
fimuls
inc
mulps
cmp
mov
or
fidivrl
mov
fisubl
dec
imul
dec
scas
xorb
push
divl
lret
jnp
inc
pop
lods
cwtl
jp
test
mov
sub
mov
inc
jmp
or
inc
mov
into
lahf
outsb
mov
cwtl
divb
xchg
hlt
push
in
xchg
in
cmp
jle
xlat
mov
outsb
fwait
dec
xchg
mov
imul
scas
adc
inc
push
inc
cld
inc
mov
imul
inc
scas
fimuls
jb
mov
mov
pop
shrb
jle
int
aam
adc
mov
mov
es
lods
or
outsl
sbb
out
jmp
pushf
addl
xor
leave
mov
adc
out
add
sbb
std
jnp
sub
pop
imul
jno
in
sub
and
cmp
or
sbb
out
jmp
adc
sub
push
jns
cli
int3
popa
mov
arpl
std
mov
push
stc
arpl
adc
xchg
jle
push
adc
fdivrs
in
daa
lods
sub
enter
sbb
xor
inc
aaa
and
daa
fldt
dec
inc
divb
pop
das
push
sbb
push
pop
cmp
push
in
xchg
rcrb
mov
jns
xchg
into
adc
adc
dec
jb
add
cmp
lock
jp
dec
lock
stos
add
mov
sti
push
daa
fistps
mov
pop
xchg
push
shll
xor
push
ret
dec
mov
jmp
repnz
out
pusha
xchg
mov
out
mov
popf
test
call
in
or
add
jo
or
and
push
sub
in
cmp
xor
mov
and
dec
fnsave
xlat
pop
in
sbb
loop
in
imul
mov
jno
xchg
mov
dec
push
push
fwait
adc
sub
loop
sub
pop
shll
xchg
imul
and
iret
xchg
repz
ds
mov
mov
hlt
jmp
fdivrp
pusha
movsb
push
xor
add
cmp
jge
enter
mov
sub
jbe
cmpb
stos
test
in
movsb
adc
push
cs
call
jmp
inc
sbb
mov
lahf
inc
xchg
xor
pusha
add
fwait
push
adc
mov
mov
dec
inc
fisttpll
filds
sbb
jg
std
jb
shl
push
xchg
pop
pop
and
out
popa
jne
imul
dec
mov
popa
int3
pop
ds
test
dec
push
xchg
dec
dec
sub
sbbl
dec
and
xchg
and
sub
mov
add
xchg
shrl
in
cmp
stos
ficomps
jl
jbe
or
fmuls
sbb
pop
adc
mov
mov
adc
sbb
xchg
mov
dec
in
push
xlat
xchg
adc
repz
fistps
sbb
adc
mov
outsl
xchg
mov
xchg
loopne
xor
loopne
pop
icebp
dec
xor
scas
test
jmp
scas
jb
inc
lret
cld
pop
loopne
fbstp
loop
test
fisubrl
adc
loopne
pop
pushl
xlat
sub
or
jp
cli
push
push
daa
dec
jno
add
jne
xchg
mov
cld
fld
sar
push
pop
loop
sub
cmp
mov
pop
fcmovne
pandn
les
mov
sahf
lock
int
shlb
jecxz
stos
rcr
sub
mov
pop
inc
lea
lods
push
jmp
xchg
aas
dec
cmc
jb
push
pop
mov
pop
cwtl
clc
push
mov
sar
jle
jo
jbe
das
xor
pop
fsub
arpl
lahf
and
dec
mov
call
dec
xchg
and
mov
shlb
aaa
cld
lret
paddsw
mov
inc
mov
int3
xchg
sbb
mov
popa
gs
andb
adc
aad
xor
pop
push
ret
out
dec
fcmovnu
push
mov
dec
jg
out
fdivrs
dec
xchg
add
loop
fistl
push
mov
int
subb
mov
insb
or
sbb
cmc
add
adc
mov
das
jnp
xchg
lret
addl
mov
int3
pop
scas
jo
lcall
scas
inc
cmp
sahf
lcall
jecxz
push
cmp
and
orl
xchg
sub
mov
arpl
pop
scas
hlt
pusha
push
cwtl
lahf
pop
out
fs
mov
sarl
or
aad
out
inc
push
call
jae
sbbb
pop
adc
add
sub
jbe
xchg
jp
fs
add
les
incb
adc
in
xor
clc
mov
arpl
cmp
mov
lret
fadds
data16
rorb
std
mov
outsb
testb
jecxz
data16
cmp
std
jae
sbbb
aam
pop
mov
mov
mov
cmp
push
cli
test
and
sbb
popa
movsb
push
ja
rcrb
inc
ds
pinsrw
lret
ficoms
fmul
icebp
out
sbb
mov
cmp
pop
adc
shr
xchg
xor
aam
repz
adc
add
xchg
cltd
cmp
filds
pop
pop
call
mov
mov
cld
xchg
call
js
mov
mov
mov
mov
sbb
add
add
pop
dec
insb
aad
xor
cmp
faddl
out
xchg
mov
mov
jb
push
mov
imulb
outsl
push
mov
subb
dec
dec
adc
cmpsb
outsl
fnop
scas
jo
insb
inc
ret
aas
jne
in
push
and
arpl
rcr
dec
dec
jb
int3
call
int3
cmp
mov
mov
aaa
test
xor
xor
push
js
dec
into
push
sub
int3
jmp
mov
mov
push
push
test
mov
or
mov
shlb
inc
movsl
fistl
xor
bound
out
adc
lea
movsb
mov
pop
daa
mov
pop
inc
test
pusha
add
mov
pop
add
out
mov
movsl
dec
in
pop
in
je
adc
in
out
outsl
xlat
fs
fidivrl
mov
add
push
jl
pop
cmc
adc
ret
out
js
push
adc
negb
adc
jecxz
loope
lcall
adc
xchg
fsts
xchg
les
rolb
push
mov
es
jae
jmp
int3
push
xor
dec
push
js
xor
test
pop
sarl
cltd
and
cmp
push
inc
push
icebp
lods
inc
push
pop
gs
mov
xchg
outsb
sahf
sub
cmp
pop
xchg
rcll
xchg
jo
outsb
pop
or
mov
movsl
aad
cmp
xchg
jae
adc
lcall
mov
popf
jge
outsb
cltd
das
jmp
in
andl
loopne
out
xchg
mov
xlat
bound
fstpt
xor
sub
adc
cmp
push
lods
pop
clc
cmp
lcall
cmp
mov
test
clc
loop
scas
fcomip
jnp
data16
icebp
cld
push
stos
and
test
movsb
enter
fucom
les
sahf
les
loop
inc
mov
pop
rorb
mov
inc
lods
xor
lcall
pop
int
insl
xchg
gs
rcrl
dec
notb
stc
xchg
xchg
lds
jns
fmuls
mov
idivl
int
insl
xchg
sbb
cmpsb
push
push
xchg
outsb
ss
xor
nop
test
daa
rclb
cmc
cli
testb
shlb
adc
mov
pop
xchg
jl
push
pop
add
jb
lock
sbb
adc
scas
push
pop
insb
stos
xor
or
xchg
out
xor
mov
cmp
into
in
pop
cmpsl
leave
dec
cmp
add
ljmp
rolb
ljmp
test
lods
xchg
int
xchg
fdivrl
je
lods
pushf
sub
scas
sti
xchg
cli
loope
jnp
insl
adc
movsl
jae
sbb
sub
xchg
or
lock
orb
xchg
loop
loop
inc
aas
ret
xchg
into
jnp
jo
in
cmpsl
inc
sbb
dec
cmp
xchg
and
mov
jmp
lret
popa
daa
push
dec
adc
inc
movb
fcompl
pushw
negl
fnstcw
cmpsb
fld
mov
jl
adc
inc
shll
or
aad
push
inc
mov
push
xchg
inc
xchg
fsubr
aad
xchg
call
inc
jecxz
sbb
dec
pop
jb
lock
xchg
das
or
mov
lret
shrb
push
sbb
xorb
scas
lret
push
or
test
adc
test
pushf
flds
push
dec
fdivrs
test
fistl
mov
arpl
pop
fdivs
push
dec
cmpsb
fistl
xlat
sbb
adc
ja
mov
push
xchg
sbb
dec
xchg
jnp
out
shrb
or
xchg
dec
fcoms
sbb
scas
mov
jmp
aaa
inc
cmp
out
or
jae
jbe
sbb
movsl
sets
enter
scas
xor
faddl
adc
xchg
or
js
dec
cmpsl
jne
cmp
iret
or
mov
mov
arpl
and
je
add
into
shl
xor
and
lods
mov
xchg
ss
mov
cld
out
bnd
jbe
outsb
dec
jnp
repnz
fdivl
loop
scas
mov
pop
sub
mov
aaa
jge
nop
insb
rolb
insb
dec
sbb
jo
scas
das
inc
rorb
fistpl
jo
cmpsl
xchg
mov
imul
mov
adc
insb
mov
or
dec
shl
sub
push
mov
adc
lret
push
clc
sub
testb
inc
mov
loope
lds
pop
jle
mov
lea
into
dec
push
xchg
sub
subl
add
call
cmpsb
fcmovnu
rorb
out
or
inc
cmpb
xchg
or
movsl
xchg
addr16
popa
repnz
jl
rclb
std
das
inc
rorl
pop
or
pop
xchg
sub
out
outsl
int3
idiv
gs
icebp
jno
pop
test
fwait
mov
cmpsl
icebp
cwtl
stc
stos
out
xlat
pop
shl
push
in
enter
push
xchg
pop
dec
push
inc
inc
cli
scas
cltd
jnp
adc
scas
mov
pop
xchg
adc
push
cs
lock
or
scas
daa
sub
data16
mov
outsb
jo
out
aad
inc
dec
sbb
dec
adc
fistl
out
ja
test
dec
cmpsl
xchg
mov
push
js
xchg
std
dec
sbb
movsb
repz
xchg
clc
scas
push
add
lea
inc
inc
out
into
fisttps
outsb
or
dec
cmp
outsb
dec
dec
jbe
mov
call
cli
sbb
imul
push
mov
jg
in
repnz
inc
mov
mov
std
inc
xchg
xor
cld
dec
aad
rcll
sbb
push
jl
push
repz
fwait
mov
mov
jo
repnz
das
xchg
fs
aaa
sub
and
in
nop
xor
pop
pop
pusha
and
inc
pusha
pop
push
push
jg
dec
mov
ljmp
or
cmpl
lret
imul
fcmovnu
push
in
in
and
mov
adc
call
add
nop
sbb
push
fwait
lcall
xchg
sbb
pmulhw
mov
jo
sub
pop
pop
aas
roll
mov
xchg
push
mov
pop
push
cs
mov
push
mov
xor
insb
dec
push
imul
notl
mov
insb
push
das
lods
dec
pop
pop
jno
cmp
out
movsl
jecxz
cs
outsl
sbb
pop
clc
notb
mov
bound
push
aaa
jg
in
pop
mov
dec
arpl
shr
inc
fildl
call
adc
aaa
xor
leave
imul
mov
mov
cmp
and
cli
stos
cmc
adc
imul
xchg
push
adc
mov
jno
fisttpl
jle
adc
jmp
dec
xor
or
sub
mov
jbe
jno
fistpl
mov
jge
xor
insl
push
cmpsb
movsb
mov
leave
or
fsubl
inc
adc
fwait
repz
outsl
pop
and
aam
int3
push
add
xchg
clc
or
push
sub
in
mov
cmp
scas
push
push
outsl
mov
pop
inc
push
test
pop
icebp
inc
addr16
fmull
inc
faddl
sbb
jmp
rcrl
lods
clc
mov
lea
mov
dec
lock
jne
push
and
mov
cmp
in
lcall
xor
adc
inc
frstor
ljmp
push
lds
or
push
aas
lcall
lahf
lods
mulb
mov
xchg
pop
push
sub
je
gs
and
sub
in
inc
jae
test
stc
mov
shr
adc
push
dec
jo
add
ds
mov
aam
je
pop
lret
jp
jg
mul
aas
jne
mov
jecxz
cmpsl
in
and
cli
or
scas
xchg
sahf
dec
in
or
fs
mov
add
xchg
fcmovnb
mov
arpl
mov
shrl
cwtl
aam
lods
stc
aad
imul
dec
insl
xor
xchg
scas
dec
idivl
add
ret
stos
call
jae
cs
mov
mov
cmpsb
es
into
sbb
outsl
lods
mov
lds
add
aaa
jl
sbb
das
fimuls
xchg
sbb
pop
aaa
aas
pusha
jecxz
adc
mov
sub
push
jl
loope
mov
in
popf
imul
daa
mov
loop
jl
xchg
mov
idivl
jmp
inc
arpl
xchg
mov
movsb
pop
imulb
lds
testl
outsl
push
imulb
lock
mov
dec
mov
adc
add
scas
xor
sub
lods
mov
mov
mov
loop
stos
scas
inc
daa
idivl
sub
mov
movsl
mov
inc
iret
ljmp
rolb
cmp
mov
add
nop
push
cltd
cld
jl
mov
je
sbb
mov
cltd
push
movl
add
bound
mov
inc
xchg
xor
enter
shlb
addl
clc
cmp
dec
imul
jae
ficomps
adc
jg
aas
mov
outsl
xchg
mov
mov
clc
lock
jl
enter
adc
cld
jno
je
dec
xor
ror
adc
scas
mov
or
dec
mov
xor
lcall
pop
ret
add
add
jno
fs
xchg
cltd
xor
fmull
jp
pushf
test
stos
push
ljmp
jae
ljmp
sub
lods
or
cmpsl
or
or
xchg
icebp
xor
or
pushf
clc
adc
or
cwtl
push
dec
mov
clc
int3
fbstp
fdivrs
mov
mov
lret
jns
sbb
bound
sub
loope
fmull
sbb
ljmp
xchg
push
mov
aaa
jmp
add
fisttps
cmp
mov
imul
lods
and
scas
mov
xchg
mov
aad
dec
mov
fnstenv
pop
push
lahf
fsubrs
sbb
into
cs
shl
pop
xchg
sti
mov
call
out
mov
pop
xchg
js
dec
fsubrl
mov
rolb
fs
pop
lods
stc
mov
hlt
adc
and
push
jb
in
inc
mov
mov
pop
fidivl
movsl
and
movl
aaa
sub
push
aam
push
shl
lock
add
outsl
xor
test
push
enter
or
jg
pop
arpl
dec
roll
inc
in
int
pop
lock
dec
xor
mov
push
pop
icebp
push
adc
jb
loop
jno
aad
mov
or
mov
dec
jmp
fs
dec
dec
leave
xor
adc
dec
loopne
outsb
cmp
mov
xchg
cwtl
cmp
xorl
inc
pop
pop
addr16
mov
push
addl
movl
inc
in
cmp
into
push
mov
jae
mov
sbb
nop
rclb
cmp
and
inc
mov
in
xor
dec
pop
push
mov
jmp
adc
cmp
dec
lods
bound
mov
xor
lea
sub
ret
and
imul
out
into
adc
frstor
jge
int
sub
test
enter
xchg
dec
std
xor
fisubs
les
cmc
insl
xor
pop
jge
pop
aaa
loopne
fwait
decb
icebp
cwtl
les
lods
flds
std
xor
ret
xor
repz
xchg
sub
pop
leave
jl
cmpsb
inc
sub
push
mov
loope
cmp
mov
push
sarl
sub
sti
push
push
dec
add
call
sbb
pop
pop
ljmp
jns
fs
cmp
or
int3
xchg
adc
rorl
sub
or
xchg
sub
jmp
sahf
popa
inc
arpl
dec
jae
sti
sbb
cmp
adc
sub
scas
dec
xchg
fcomps
cmp
xor
aas
cmpl
fwait
aam
ret
js
mov
and
addb
mov
adc
mov
ret
cld
repz
rorb
jne
mov
sbb
xchg
xor
dec
lods
ret
inc
push
cmp
mov
sub
push
mov
mov
mov
lea
lock
or
aam
mov
pop
and
pop
or
add
adc
pop
imul
inc
lahf
xor
loopne
addr16
dec
inc
inc
lret
inc
mov
in
stos
mov
xchg
inc
lods
cmovg
out
jp
das
ja
ja
jle
and
mov
repnz
and
aad
sbb
and
push
pop
pop
mov
push
jnp
leave
stos
pop
repz
fmull
push
mov
and
dec
mov
adc
and
sub
ds
cmp
sub
pusha
push
cwtl
xor
stos
dec
popa
cs
out
test
push
cs
lcall
dec
daa
outsl
ret
aad
xchg
inc
gs
xlat
adc
adc
adc
out
nop
mov
push
dec
ret
and
add
test
test
sbb
loopne
xchg
xchg
mov
bound
pushf
dec
inc
jno
sub
daa
orl
push
mov
pop
adc
push
push
jne
push
add
push
ds
fcomps
popf
icebp
jae
push
xor
stos
cld
cmp
cltd
loop
or
or
mov
decb
test
addr16
in
xlat
pop
mov
or
repnz
jns
mov
dec
mull
cmp
fnclex
out
and
pop
xchg
sbb
inc
sahf
out
fisubs
out
sti
pop
movsb
stos
arpl
xor
dec
mov
test
push
orb
movsb
lret
jge
cs
or
sbb
sbb
imul
cmp
adc
cli
lcall
pop
nop
or
inc
cmpsl
mov
nop
jp
hlt
ret
push
aam
or
aaa
inc
test
fs
leave
imul
scas
jo
imul
pop
jle
pop
pop
out
or
adc
and
pop
outsl
outsb
es
dec
out
inc
cltd
icebp
insb
add
leave
stos
push
stc
in
stos
jecxz
xor
inc
rorl
push
imul
jbe
notl
fildll
or
fstps
xor
lea
push
ret
addr16
call
and
in
push
push
or
int3
mov
lcall
cs
cmpsb
lcall
pop
jne
mov
xchg
insl
mov
cltd
mov
mov
cmp
cmp
scas
dec
ret
js
push
adc
adc
pop
nop
adc
je
out
xchg
jno
psrlw
outsb
inc
roll
cld
adc
test
cmp
mov
test
call
mov
push
pop
movsb
fs
stos
and
mov
mov
loope
cmc
out
insl
sub
call
stc
in
and
sarl
mov
push
rcr
mov
and
fistps
mov
lods
push
mov
subl
and
shlb
fs
insl
je
fdivs
imul
xchg
cli
cmp
mov
filds
xchg
pushf
and
dec
scas
mov
dec
or
dec
in
cmpsb
sbb
xchg
sbb
jecxz
jl
or
mov
andl
xor
jae
cmpsl
clc
lret
dec
dec
aam
jp
jl
ds
repz
and
jmp
adc
cmp
mov
pop
xor
scas
inc
stos
loop
cmpsl
adc
fsubrl
insl
lods
cwtl
mov
test
pop
imul
lock
lahf
push
jb
jne
inc
fldenv
ss
call
shlb
adc
or
test
cmp
cmp
mov
jo
add
fcoms
and
stos
fnstsw
dec
jo
push
jl
mov
loope
jge
shl
addl
jmp
pop
scas
sub
clc
scas
outsl
out
jge
mov
push
ficoms
jo
aas
fcomip
jl
repnz
js
jno
rcrb
outsl
mov
ret
pop
adc
sub
xor
cmp
sbb
or
movsb
sub
call
adc
loopne
aaa
inc
fidivrl
lahf
outsb
addps
xor
push
sub
pop
jmp
lods
gs
mov
lock
out
imul
test
ret
in
lds
pop
mov
aam
das
jecxz
inc
cmp
or
push
jb
push
push
add
out
mov
stc
lock
and
data16
in
repnz
jo
add
iret
jbe
imul
pop
stc
or
mov
adc
mov
jne
lock
push
lock
das
scas
or
add
xchg
xchg
scas
pop
mov
sub
adcb
sbb
mov
mov
mov
fimull
jmp
mov
jbe
pusha
subb
test
push
sbb
inc
call
rcll
fwait
negl
add
lret
add
sbb
fwait
pop
popa
xchg
je
pop
pop
cmp
into
fucomp
jle
fisttps
mov
cmpsb
test
stos
xor
jl
mov
scas
cmove
ss
ret
pop
mov
jg
push
cmp
jne
lret
loope
popf
stos
lods
das
lds
mov
xchg
cld
and
cmp
cmp
pusha
add
add
or
adc
in
inc
sbb
loopne
aam
in
cmp
push
pop
add
mov
mov
mov
jne
mov
sbb
movsb
mov
sub
xchg
adc
out
lock
lahf
sbb
aaa
daa
xchg
js
movsb
add
xor
mov
mov
xchg
xor
out
mov
pop
dec
clc
fwait
in
or
ljmp
enter
inc
mov
test
mov
loope
or
pop
mov
xchg
loop
dec
inc
mov
jbe
mov
lods
mov
add
leave
xor
push
xchg
loope
mov
dec
lock
gs
adc
insl
cmp
dec
addr16
sahf
jge
sbb
call
aas
iret
push
push
gs
push
inc
mov
fs
scas
cmp
daa
insl
call
sbb
iret
out
gs
fadd
repz
jbe
insl
xor
mov
in
nop
hlt
dec
and
out
outsl
insb
lock
jle
xchg
popf
inc
add
mov
out
xchg
rcr
adc
mov
js
push
imull
repz
pop
mov
into
mov
es
sar
adc
lret
push
sti
cmp
ficomps
ja
xchg
in
adc
inc
pop
insl
enter
rclb
ds
jae
orb
loope
lds
add
xor
inc
test
push
in
jl
adc
mov
push
add
or
ss
adc
cld
mov
hlt
or
ss
mov
xchg
int3
out
adc
push
rolb
dec
adc
lret
xlat
fnstenv
jb
int3
push
mov
ret
cmp
jae
add
lds
push
dec
into
pop
mov
shrd
out
cmpsb
jmp
cmp
popa
inc
sahf
pop
aam
dec
lods
push
and
dec
or
lods
mov
ja
enter
test
xchg
aad
sbb
pop
sbb
or
mov
daa
dec
xchg
bswap
aad
push
pop
imul
les
out
fmuls
inc
int
call
sub
adc
ficoml
push
push
jmp
mov
sub
mov
scas
out
lds
push
cwtl
arpl
jp
sahf
cmc
mov
dec
pusha
test
mov
subl
pop
sbbb
outsb
mov
mov
scas
int3
dec
loopne
adc
shr
mov
repnz
mov
xor
popa
insb
and
add
mov
adc
cltd
dec
aaa
imul
dec
sub
out
mov
loope
add
orb
jbe
nop
sti
ja
pop
mov
add
in
adc
push
pop
cltd
mov
push
or
push
xlat
scas
mov
and
out
imul
cmc
imul
notl
jae
xchg
jmp
mov
sub
imul
jg
ja
icebp
adc
pop
imul
jge
jmp
sub
mov
fs
stos
sub
pushf
mov
inc
pop
je
rdpmc
dec
push
ss
xor
jg
rcrb
jae
mov
sub
add
mov
mov
mov
movsb
out
xchg
enter
in
aam
jo
lret
cld
inc
loop
ja
pop
vcvtdq2pd
sbb
push
dec
rolb
xchg
push
cmp
sbb
or
ret
push
sbb
movsl
inc
mov
dec
dec
jmp
subb
mov
cmp
xor
push
rcrl
loop
lods
sub
dec
mov
jb
mov
xlat
xor
lods
outsb
dec
fs
xchg
out
loopne
mov
ret
popa
icebp
jbe
xchg
xchg
add
inc
xchg
sbb
xor
xor
and
dec
fildll
mov
xchg
mov
lcall
cmp
std
mov
mov
adc
and
xor
xor
insb
dec
sbb
push
repnz
stc
inc
xchg
imul
clc
je
popf
int3
iret
sub
rolb
addr16
es
pop
popaw
xor
cmp
xor
mov
pop
add
sbb
shr
and
out
pushf
mov
dec
in
xor
xchg
addr16
cmc
sub
cwtl
mov
aas
mov
movsl
push
movsb
cld
push
xor
in
dec
lock
mov
mov
or
sbb
inc
or
pop
test
xchg
adc
jns
mov
cmp
std
cmp
xchg
add
xor
add
and
push
outsl
shl
rcr
fcmovnbe
mov
or
mov
scas
andl
ficoml
xchg
jno
sbb
rclb
dec
lret
lods
mov
pop
out
loop
push
push
jno
pop
and
into
stos
aam
out
mov
sbb
in
push
sbb
adc
outsl
in
xchg
sbb
lods
loopne
jl
pop
rcll
out
enter
pop
lcall
aam
pop
lea
sahf
sub
xchg
sbb
jae
out
mov
dec
pop
insb
rcll
xchg
jmp
adc
ja
mov
adc
sbb
push
cmpsb
enter
test
sub
mov
mov
iret
fstl
push
cmc
or
push
fsub
adcb
mov
inc
inc
inc
out
adc
xor
jg
cmp
mov
sti
sbb
sub
adc
inc
sarb
mov
jmp
aam
jb
adc
andb
inc
std
adc
jo
push
and
mov
pop
shll
or
scas
ss
addr16
out
leave
pop
add
int
inc
nop
cltd
push
mov
jns
or
les
jo
fs
aam
mov
jl
cmpsl
pand
gs
or
ljmp
sub
outsb
jl
in
lret
inc
pushf
lds
push
jmp
jo
mov
mov
push
cli
sar
shll
lcall
inc
out
or
pop
stc
inc
mov
mov
je
sub
push
and
ljmp
stos
or
test
movntps
push
clc
negb
leave
xchg
push
test
rcl
push
aas
xlat
out
push
dec
faddl
mov
mov
xor
pushf
or
fwait
ds
fbld
sbb
dec
insl
xor
sbb
push
lret
jo
sahf
out
add
shll
faddl
and
xchg
xchg
dec
pop
lds
push
add
xchg
into
xchg
pop
add
cmp
leave
lea
adc
in
mov
dec
mov
mov
loopne
roll
or
mov
add
mov
cmp
aam
bound
adc
rcl
cmp
add
or
sub
add
jmp
dec
xchg
lock
mov
jecxz
jp
scas
xchg
fisttpll
outsl
mov
cmp
in
xor
fst
xor
xor
iret
mov
sub
pop
ret
call
in
testl
adc
jmp
sub
iret
lcall
lock
mov
outsl
inc
imul
inc
adc
shrb
inc
jbe
and
sub
clc
out
xchg
mul
adc
shr
data16
iret
imul
mov
loopne
mov
adc
sub
js
xchg
xchg
dec
loope
int3
jae
idiv
lock
adc
jecxz
mov
ja
push
les
adc
inc
scas
xchg
push
mov
push
js
mov
scas
xor
pop
sub
ljmp
mov
xchg
mov
pop
xchg
or
int
jno
pop
jnp
nopl
outsl
jno
test
scas
aaa
jne
cmp
jno
jae
enter
sahf
loopne
cs
ss
cmp
xchg
mov
sbb
test
out
xor
and
mov
je
cmp
cmpsb
ss
jno
sti
sub
xor
mov
test
pop
mov
jecxz
addr16
xchg
and
mov
fucomip
cmovg
mov
inc
sbb
sbb
push
icebp
mov
inc
shrl
aaa
jns
shl
push
out
enter
imul
and
in
pushf
dec
daa
in
dec
ljmp
sub
cmp
loope
out
and
jne
mov
dec
in
cwtl
mov
stos
fldcw
or
pusha
cmp
xchg
adc
call
push
stos
repz
shlw
inc
inc
mov
mov
rorb
dec
lret
sub
mov
xchg
xchg
je
dec
xor
xor
ja
arpl
adcl
popa
fs
xor
mov
cmpsb
stos
xlat
icebp
mov
jl
cmp
inc
sbb
mov
fs
and
mov
fstl
add
push
leave
adc
int
jg
cmpsl
fwait
movsb
mov
jo
dec
sbb
fstl
xlat
or
mov
les
mov
jb
jo
inc
adc
push
pop
mov
ljmp
mov
hlt
sbb
pop
in
jecxz
xchg
dec
jb
and
sub
fldl
xchg
push
mov
pop
ds
adc
ja
in
scas
and
sbb
pushf
outsb
sbb
jnp
xor
ret
push
loope
ljmp
out
jne
mov
xor
ja
testb
das
shr
mov
cmp
adc
cmp
pop
mov
mull
int3
addl
inc
jo
call
fisttps
pushf
pop
sbbl
scas
inc
or
mov
xchg
pop
xchg
les
or
sbb
call
mov
and
jns
mov
sbb
in
icebp
mov
das
pop
jno
stc
aad
lcall
cmp
leave
xorl
push
jmp
in
lock
outsb
ss
call
push
outsb
inc
sub
jae
pcmpeqb
adc
jmp
add
xchg
pop
jns
xor
mov
mov
ljmp
stos
push
rorl
movsb
in
in
sbb
ror
add
and
mov
adc
sub
jecxz
add
popf
xchg
insl
mov
movsl
mov
ficoms
cmpsl
movsb
imul
add
cmc
xchg
scas
jle
insb
pop
fnsetpm(287
nop
rcrb
hlt
xchg
lds
push
xlat
xor
adc
cs
enter
add
dec
arpl
in
out
adc
fs
nop
cmp
push
sbb
or
or
mov
push
xchg
pop
pop
scas
loopne
into
inc
adc
clc
sub
sahf
fwait
call
jmp
push
testl
std
cmp
imul
jo
push
pop
mov
ficoml
push
ficoms
cwtl
in
sbb
dec
fs
es
mov
divl
jge
icebp
inc
std
sub
repnz
mov
push
jnp
rcll
loope
mov
pop
xchg
pop
mov
push
cmp
cs
repz
outsb
insb
and
xchg
or
sbb
inc
adc
psubq
test
mov
jmp
arpl
cmp
or
push
ret
sbb
mov
pop
fwait
data16
popa
ja
rclb
nop
jle
daa
push
stos
jnp
push
ljmp
icebp
mov
rcrl
and
mov
mov
clc
fwait
lahf
out
xchg
fdivr
inc
in
sbb
cmp
leave
iret
push
sub
fdivrl
push
adc
mov
and
aaa
popl
pop
lcall
and
inc
xchg
scas
and
adc
pop
sbb
xor
in
fistps
out
mov
lahf
sub
repnz
cmpsb
out
lock
ss
mov
push
sbbb
push
repz
pop
push
xchg
lods
insb
outsb
in
xlat
inc
lock
sbb
xchg
sbbl
mov
xchg
cmp
dec
int
xlat
stos
xor
loopnew
stos
aas
outsb
lods
imul
mov
repnz
dec
and
xchg
lods
push
adc
cwtl
out
and
mov
push
test
push
xchg
je
icebp
in
data16
addb
xor
inc
in
les
lods
push
jecxz
cs
scas
fwait
and
fwait
sahf
ret
sub
cld
pop
outsb
clc
or
xor
and
push
lret
in
and
call
cmp
lock
leave
aas
sbbb
addb
lret
xor
stos
sub
mov
adc
inc
bound
dec
or
xchg
xchg
ljmp
in
rorl
pop
and
mov
xor
rcl
sub
ret
movsb
int
push
xchg
inc
rclb
in
adc
cmc
sbb
jae
jle
imul
inc
ret
in
push
push
mov
pop
or
inc
test
xchg
lds
sub
out
adc
ret
fcmovnu
sub
xchg
xor
pop
mov
sub
mov
repz
aas
xlat
testl
jbe
xor
xlat
pop
cmpb
xor
jb
inc
loopne
mov
ficomps
ficoml
mov
push
mov
fdivrs
dec
jmp
cld
fistpl
pop
xor
cmpsb
lret
shll
push
sbb
pop
jae
imul
ret
mov
fmull
inc
xchg
lret
es
mov
push
xor
add
pop
dec
push
cmp
pop
pop
insb
cli
mov
inc
mov
in
or
xchg
cmp
shll
imul
inc
adc
psrad
sarl
icebp
add
mov
inc
rcll
clc
and
jb
push
mov
mov
lock
push
push
jae
cmc
sarb
lds
jno
clc
pop
mov
pop
dec
or
mov
adcb
insb
pusha
inc
divb
je
out
xchg
pop
push
sbb
lret
or
add
sete
dec
lods
sub
loopne
dec
lock
xor
rolb
inc
sti
pusha
in
stc
jno
loop
mov
ljmp
jmp
aaa
xchg
xchg
adc
push
loopne
push
sbb
jo
pop
inc
add
dec
adcb
sarb
sbb
adcb
stc
hlt
dec
imul
cltd
xor
mov
pop
enter
icebp
imul
add
outsl
cmc
push
jbe
dec
lock
push
outsl
in
jb
or
and
pop
jg
fiaddl
leave
pushf
cltd
movl
arpl
jns
mov
arpl
arpl
neg
nop
in
jl
arpl
push
mov
enter
cmp
addl
cmp
les
push
imul
pusha
xchg
push
pop
movsl
or
cmp
loop
sbb
xchg
in
lcall
pop
jmp
ficompl
dec
cmp
push
insb
ficomps
xor
nop
ror
or
mov
cmpsl
jae
push
scas
test
dec
out
dec
xchg
push
gs
mov
lahf
pop
outsl
gs
call
call
adc
fwait
pop
lds
rclb
icebp
push
scas
shll
pop
sub
push
loopne
je
inc
adc
sbb
cmp
lret
mov
sarb
pop
stos
jmp
mov
rcrl
dec
js
subl
push
cmpsl
cmpsb
inc
popf
push
bound
call
inc
ret
xchg
mov
xchg
mov
jecxz
inc
pavgb
mov
mov
cmpsb
out
sbb
test
popf
lods
pop
test
dec
adc
outsb
jnp
mov
xor
decb
push
cmp
fcoml
popf
and
pop
dec
cmp
outsb
pop
xor
mov
xchg
jp
testb
fwait
and
mov
inc
cs
xchg
das
cmp
loope
hlt
pop
and
mov
pop
movsl
popa
push
cmc
or
shlb
imul
addr16
popf
nop
pusha
cmp
mov
pop
mov
inc
jae
mov
pop
clc
push
xchg
nop
lcall
inc
jbe
cli
pop
push
nop
sbb
sub
jmp
daa
hlt
fists
scas
mulb
adc
ret
sbb
mov
test
add
por
ret
cmp
jecxz
mov
ss
xor
js
flds
pop
inc
xor
ja
xchg
popf
fmuls
enter
xchg
daa
push
lcall
and
out
notb
jb
dec
xchg
and
mov
pop
sbb
push
push
lock
fsts
stc
sub
xchg
mov
add
fimuls
sub
xchg
aad
pop
mov
xchg
popf
clc
in
lods
push
xchg
frstor
dec
mov
in
rcl
popa
mov
nop
sub
jb
jno
not
ja
mull
iret
xor
inc
dec
ja
jb
loope
je
jl
out
sub
enter
jnp
pop
inc
rcl
jmp
cmp
psubusb
out
xchg
lods
mov
les
lock
adc
pop
or
cld
add
outsb
cmpsl
pop
lahf
sbb
cmp
inc
scas
jecxz
popa
sub
cli
or
lea
push
pop
push
iret
divb
xchg
ret
xor
xchg
insl
shl
dec
outsb
cs
lods
sub
mov
das
dec
stos
fwait
dec
jmp
aas
sub
pop
in
repz
push
dec
loopne
daa
stos
iret
mov
mov
mov
cmc
rorl
test
mov
pop
adc
call
divb
inc
jmp
pop
push
das
in
movsb
out
mov
push
cld
and
mov
lock
insb
adc
scas
out
pop
mov
sub
sbb
inc
stos
xchg
lret
cmpsl
mov
push
pop
scas
pop
imul
ljmp
mov
idivb
lret
xor
in
dec
in
xchg
insb
addsd
stos
shll
clc
dec
inc
sarb
xchg
loop
das
popf
push
add
jmp
mov
aaa
clc
sub
fs
test
dec
cmp
pop
lods
int3
movsb
popa
call
in
xchg
jno
cltd
lods
scas
dec
loop
cmp
in
push
and
aas
xchg
arpl
xchg
mov
xor
jnp
stc
push
inc
xor
lcall
sahf
scas
ja
mov
jecxz
dec
aas
xor
aaa
jae
mov
push
pop
shr
inc
dec
and
fwait
aaa
iret
jo
inc
ljmp
xor
lods
push
mov
sbb
nop
sub
lds
orb
xor
cld
mov
loop
ret
add
clc
fs
into
jle
fidivl
fists
mov
cmc
sub
or
imul
andb
shll
ffreep
test
sbb
mov
lds
inc
int
pop
insl
mov
test
mov
rcl
mov
gs
test
jmp
nop
jno
lcall
outsl
pop
pusha
pop
ja
jbe
int3
pusha
mov
fimull
movsl
xchg
popf
subl
and
adc
aas
dec
test
mov
inc
push
cmp
sub
jg
dec
mov
push
in
mov
loopne
push
sub
mov
movsb
push
out
or
jl
mov
xor
and
dec
fnsave
add
sub
xor
xor
test
jne
pop
xchg
pop
in
insb
adc
repz
shlb
adc
test
cmp
pop
ret
jecxz
cwtl
cmp
xchg
cs
test
lret
dec
ss
divl
loopne
ret
inc
fsubl
mov
insb
sbb
mov
xchg
je
ja
notb
cmpl
shlb
aam
stc
jb
mov
push
std
sbb
mov
mov
cmc
scas
cmp
add
js
add
adc
xchg
pop
in
mov
mov
imul
xchg
dec
lds
in
or
movsl
lcall
lods
jmp
xor
data16
movsl
add
sbb
dec
xchg
lock
cmp
inc
add
in
iret
push
aaa
addr16
jno
lds
call
jge
das
icebp
sub
sub
mov
sub
adc
pop
add
nop
scas
stos
or
repz
xlat
push
push
je
mov
and
sbbb
fadd
enter
sbb
stos
jb
ja
cmpsb
jmp
setns
adcl
shlb
dec
sbb
popa
inc
out
cmc
pop
jg
addr16
inc
out
jp
pusha
in
cld
shrl
dec
sub
adc
stos
push
imul
outsb
xchg
lds
mov
jnp
push
aaa
jno
adc
jnp
icebp
in
jmp
pop
adc
cmp
movsl
lcall
filds
adc
and
mov
mov
jg
dec
pop
sub
pop
fsubrs
arpl
nop
pop
fsubrs
iret
gs
stos
add
adc
dec
ret
sbb
in
ret
add
test
mov
cmp
cmp
or
or
leave
fsubrl
inc
aam
sub
adc
je
sbb
or
xchg
nop
sub
jne
mov
xor
in
pusha
sti
and
cli
xbegin
popa
aad
aas
aam
dec
adc
xchg
mov
out
mov
lret
cmp
mov
das
mov
cmp
mov
pop
pop
adc
iret
sahf
inc
pusha
or
call
int
das
nop
outsl
adc
lret
push
push
sbb
jge
mov
ja
mov
inc
sub
pop
setae
insb
pop
dec
sbb
inc
in
imul
into
outsb
xlat
ret
push
lock
push
out
xor
mov
std
lock
pop
repz
push
add
cld
in
ds
movsl
sbb
jo
adc
and
sbb
cmpsb
retw
dec
push
and
sub
cwtl
data16
push
fs
mov
out
push
fs
in
mov
jbe
test
jl
cmp
add
lret
mov
lds
sbb
dec
out
or
insb
int3
fisttps
mov
add
fs
mov
or
xor
cld
stos
sub
jecxz
stos
nop
imul
jb
shr
mov
jo
loop
mov
sahf
iret
adc
cmp
bound
insl
out
mov
fimuls
out
pop
out
sbb
push
xor
out
das
subl
fists
xor
pop
insb
xchg
lock
lea
push
lods
iret
into
shl
in
decb
not
dec
jl
pop
mov
xchg
push
cmpsb
xchg
mov
cmp
imul
je
sub
outsl
out
jp
std
cmpl
cmp
ja
xchg
test
fbstp
dec
std
mov
cmp
fcomps
insb
adc
mov
stos
xor
clc
mov
sbb
insb
add
dec
out
cs
adc
test
loope
mov
mov
out
or
leave
inc
out
loopne
mov
in
inc
out
mov
out
movsb
jg
add
mov
mov
dec
xor
push
mov
sub
mov
inc
add
mov
out
push
xchg
jecxz
enter
fs
in
add
in
test
ds
ss
sub
xchg
shl
in
xchg
jae
adc
shlb
cmp
mov
push
jno
test
ljmp
cltd
sub
xor
add
sbb
ljmp
mov
adc
jbe
and
pop
cld
test
lea
test
test
mov
in
fidivs
movsb
stos
mov
enter
cmpsb
mov
cmp
adc
call
push
mov
pop
sub
sbbb
xchg
or
mov
flds
out
hlt
pop
cli
xor
push
in
dec
das
ret
rcrb
shrb
jo
pop
cwtl
xchg
xchg
sub
es
test
out
out
in
cmp
fidivrs
lret
sete
loopne
adc
mov
cmpsb
out
mov
pop
lahf
sub
mov
cmp
mov
adc
dec
mov
xorb
mov
jl
inc
in
aam
push
sub
das
mov
mov
sub
sbbb
das
aas
out
shll
js
inc
scas
or
in
xchg
in
pop
mov
push
mov
cmp
movsl
push
jnp
scas
adc
aad
lahf
xchg
mov
cmpsb
dec
sub
es
aas
xchg
in
dec
cmp
std
leave
mov
addr16
xor
pop
inc
xor
xchg
inc
fildll
push
mov
xor
adc
mov
imul
mov
loop
push
movb
cld
scas
stos
mov
jae
daa
mov
sbb
push
push
inc
adc
stos
outsl
imul
fwait
ss
mov
aam
call
mov
in
push
divl
sbb
xchg
data16
stc
insb
and
aad
out
cld
xchg
cmp
xchg
mov
push
outsl
push
mov
jmp
push
dec
xor
js
inc
and
xchg
rolb
cmp
mov
mov
mov
push
xor
cmp
or
mov
lods
out
mov
cld
pop
hlt
mov
fidivl
xor
gs
push
jge
shll
rcrl
ja
pop
pusha
iret
shr
mov
stos
imul
sahf
pop
xor
adc
jne
lahf
push
addr16
invd
or
fbld
fwait
cli
sar
xlat
arpl
rorb
mov
ljmp
nop
mov
cwtl
jnp
imul
pushf
cmc
fidivl
jp
mov
cmp
nop
cltd
sarl
sub
xchg
mov
or
adc
inc
add
adc
pop
aas
xor
dec
js
iret
inc
jl
icebp
popa
repnz
mov
repnz
jg
xchg
fs
stc
xchg
and
or
pop
cli
xor
movsl
popa
pop
jmp
and
pushf
xor
cltd
xchg
cs
and
or
nop
fisubl
aam
gs
fs
jp
insl
mov
out
sarl
dec
adc
fcoms
fs
adc
adc
mov
cwtl
sahf
mov
jnp
inc
fisubrl
ljmp
and
xor
cs
mov
sti
xor
push
xchg
cmp
push
leave
inc
dec
lret
sub
outsb
adc
mov
or
adc
pop
sti
clc
cmpsl
mov
jle
dec
xor
sbbl
inc
jg
sbb
sbb
xor
jno
dec
pop
cmp
fs
jbe
scas
cs
inc
shlb
jno
pop
imul
stos
mov
or
lret
push
mov
stc
pushf
out
fs
push
push
shrb
xchg
mov
push
dec
dec
fdivs
popf
pop
rorl
cwtl
mov
aad
lods
cltd
xchg
pop
in
test
cld
out
cmp
mov
jmp
repz
in
dec
xchg
test
insl
sub
jae
das
push
or
mov
adc
sub
fiaddl
div
shll
and
into
push
cmc
neg
dec
jmp
js
shll
and
push
mov
dec
insb
test
imul
int3
push
in
orb
inc
roll
mov
out
cmc
test
pop
je
out
cmc
adc
sti
cmpb
int3
mov
aad
rclb
pop
adc
test
gs
fcmovbe
cmp
xchg
daa
dec
repnz
ljmp
call
nop
jge
and
fistl
data16
and
jbe
repz
int
xchg
mov
sub
cli
xchg
push
dec
fldl
xor
clc
lock
pusha
xchg
incb
in
pusha
int
cs
adc
dec
mov
or
cmp
das
inc
daa
lock
mov
sahf
mov
scas
movsl
push
aaa
xchg
ljmp
rorb
rorl
and
mov
sahf
aaa
into
pop
mov
pushf
inc
aaa
xchg
rclb
pushf
stos
sahf
outsl
pop
mov
lds
mov
sub
pop
test
insb
stc
nop
test
lahf
xor
out
cwtl
nop
in
test
loop
enter
cwtl
popf
icebp
inc
mov
loop
clc
loop
inc
mov
push
xchg
fs
push
xchg
outsb
mov
in
add
lea
xor
add
mov
hlt
push
shr
sbb
imul
imul
aad
mov
cmp
in
aaa
and
data16
cld
ret
dec
xor
sub
shr
jno
mov
adc
outsl
int
sbb
xlat
inc
dec
or
and
scas
test
inc
call
xorl
shlb
inc
into
sbb
fucomip
jg
js
out
mov
lds
inc
pop
ljmp
or
cmp
in
in
push
mov
xchg
mov
dec
mov
fdivrp
sti
push
lock
arpl
cmp
jo
std
addr16
cwtl
repnz
push
jae
mov
movsl
lcall
stc
in
pop
test
xor
ljmp
push
or
int
xchg
and
jne
jmp
data16
push
jecxz
out
cli
and
xchg
add
adc
pop
pushf
imul
sub
out
dec
popa
mov
lcall
dec
mov
stos
xor
in
sbb
inc
ret
inc
mov
les
testl
mov
lock
push
mov
lock
cmc
scas
mov
push
add
outsl
in
and
push
ret
cmp
and
add
dec
ja
stos
jle
xchg
sub
cmp
out
in
adc
fs
mov
add
ret
or
fidivrs
fdivrs
clc
xchg
or
lods
inc
pushf
dec
lods
aas
mov
push
cmp
add
pop
jp
nop
stos
stos
mov
cwtl
adc
jb
sub
mov
jg
mov
mov
out
mov
mov
shl
fldcw
out
fnstsw
mov
stos
mov
push
inc
cld
sbb
idivl
filds
repz
add
lea
mov
fists
shll
out
jno
mov
mov
ds
out
lods
incl
mov
xor
push
fcompl
push
inc
insb
inc
jg
gs
icebp
push
pop
sahf
inc
xchg
push
mov
rorl
jae
sub
xor
andps
dec
xchg
js
jno
jecxz
lret
mov
mov
inc
add
push
mov
dec
shll
fidivl
aas
sub
int
in
inc
pop
dec
adc
std
in
stc
jge
cwtl
inc
insb
fsubrs
jbe
test
iret
push
cmp
or
out
negl
sbb
jmp
hlt
adc
lcall
lahf
xchg
clc
rcr
loopne
xor
popf
fldenv
dec
jmp
sub
or
and
add
xchg
shrb
pusha
jno
jne
jg
xlat
cmp
sbb
xchg
and
jg
xlat
fbld
xchg
insb
jge
add
pop
icebp
mov
test
imul
out
dec
mov
cld
jg
shl
mov
cmp
js
in
pop
mov
jne
xor
loopne
test
rcrl
push
and
sbb
fistl
mov
adc
cmp
or
mov
sbb
sbb
xorb
push
mov
mov
add
push
jb
sbb
adc
loope
mov
pop
pusha
add
lret
xor
into
je
adc
mov
mov
xchg
int
cmp
inc
pop
pop
push
fisttps
fs
loope
fmul
inc
testb
nop
inc
mov
xchg
and
and
daa
jmp
sti
notb
sub
cmp
mov
xchg
adc
cmp
xor
jb
inc
aas
lock
add
test
jb
xchg
lcall
sub
mov
cmpl
fs
ret
rclb
inc
stc
dec
ja
repz
mov
cli
scas
mov
test
push
sbb
in
lcall
loope
and
add
lods
fdivrs
xor
out
mov
or
in
xchg
iret
dec
jbe
daa
and
aaa
sbb
xchg
arpl
pop
icebp
mov
punpckhwd
iret
int
pop
pop
and
cmp
inc
push
call
loope
stc
mov
in
int
call
scas
mov
cmc
lods
mov
xchg
lods
imul
mov
addb
notb
cmp
mov
sub
inc
jbe
std
scas
cs
fsubl
leave
stos
adc
cld
adc
sub
inc
out
jbe
add
int3
scas
enter
dec
xchg
push
jg
cmp
jo
ds
sti
sti
adcb
sub
adc
inc
adc
mov
or
das
lods
insb
fldcw
mov
dec
push
mov
or
aam
ja
mov
cs
xchg
push
sti
out
arpl
cmp
js
fsubl
or
xchg
lods
fcmovu
in
jo
das
sub
aas
mov
out
jl
inc
jb
xor
sub
cltd
xchg
pop
sub
push
seta
fldenv
jl
in
xor
xchg
xchg
sbb
ds
out
fists
cmc
sbb
mov
lcall
mov
test
mov
sub
push
lahf
or
sub
add
push
push
cmpsb
les
clc
es
sub
sbb
ljmp
sub
inc
out
orb
in
xchg
and
xchg
arpl
rcll
adc
arpl
jl
test
and
jae
xchg
cmpsl
jle
les
fstp
jb,pt
loope
mov
xchg
and
push
push
leave
loop
fdivl
mov
fs
cmp
mov
ud1
inc
pop
push
fildl
pop
loope
mov
inc
or
adc
xor
stos
inc
or
cmp
imulb
popa
aad
ljmp
test
into
mov
adc
out
jb
pop
cmpsb
ljmp
fnstsw
mov
imul
repnz
pop
xchg
lret
cmp
addl
pop
mov
out
mov
fstpt
test
push
jecxz
adc
push
div
jno
loop
jp
xchg
add
mov
cmp
inc
cld
lahf
lret
fmull
out
and
dec
call
mov
fs
jecxz
push
mov
arpl
test
fistps
cmpsb
ret
imul
jbe
add
xchg
jmp
cmp
lock
andl
jge
cmp
dec
xor
jl
xor
jge
shlb
movsb
shlb
in
dec
ret
leave
sbb
gs
jecxz
outsb
insb
pop
test
nop
mov
mov
or
dec
xchg
fldenv
mov
sub
sub
cvtpi2ps
leave
dec
aad
xchg
dec
movsb
cwtl
or
inc
lds
arpl
xlat
xor
and
inc
dec
out
push
dec
adc
rdpmc
je
push
lods
call
divb
bnd
cwtl
mov
dec
pop
repz
dec
ss
adc
lcall
cmp
adc
cmpsb
push
push
inc
dec
in
dec
dec
dec
mov
inc
repnz
push
call
push
fmull
ljmp
loope
inc
aad
fs
pop
cld
js
pusha
inc
fsub
xlat
out
mov
or
jb
push
or
icebp
jns
out
aas
jo
jle
sbb
mov
aam
rclb
sti
out
sar
mov
xchg
orl
iret
mov
repnz
xlat
jo
shl
xchg
lret
outsb
cmpsb
ficomps
pop
in
out
cmpsl
jb
lret
daa
rcrl
or
mov
sub
cmp
sbb
int3
xchg
sub
mov
scas
dec
sbb
sub
in
mov
push
cltd
xchg
dec
pop
repnz
imul
push
add
and
xchg
or
mov
jbe
arpl
sti
cltd
stos
ja
adc
and
mov
cmp
cli
clc
jg
xchg
or
mov
into
imull
roll
pop
sub
or
cmp
jge
inc
xor
jns
xchg
sub
mov
push
mov
in
loopne
inc
or
push
inc
cld
xchg
adc
imul
out
xchg
mov
inc
sbb
cli
cmpsb
gs
jl
fwait
sti
aam
mov
mov
imul
inc
jmp
ja
pop
sub
fwait
xor
cltd
fdiv
sahf
push
pop
icebp
negb
ja
mov
lret
insl
xchg
xchg
inc
inc
inc
cwtl
inc
cmp
icebp
xchg
sub
out
cmp
in
and
pusha
add
lods
popa
cmc
xchg
mov
into
add
cmp
shl
dec
int
cmp
outsb
pop
fld
shr
mov
fisubrs
je
push
in
arpl
stos
inc
out
pop
sub
cmp
rorl
cmp
ljmp
add
callw
mov
test
fildll
test
sbb
ss
mov
jb
adc
jbe
sbb
or
and
insb
cmp
mov
inc
or
call
loop
into
dec
lock
xchg
rorb
fwait
push
and
inc
leave
jbe
loop
in
pop
lock
add
daa
xor
int3
movlps
aam
data16
cs
repnz
sub
daa
and
pop
cmp
jns
jbe
rorb
ljmp
pushf
dec
stos
fadds
mov
out
daa
mov
cmp
dec
or
fstp
repnz
push
stos
or
out
adc
icebp
add
jae
aas
fmull
inc
sbb
adc
pop
ret
out
or
loop
dec
test
cpuid
in
ljmp
icebp
push
mov
inc
or
in
out
insb
jae
ficoms
popf
cli
cmpsl
and
push
xchg
jmp
inc
dec
divl
mov
sahf
out
ss
cs
loopne
leave
test
je
cld
ret
adc
dec
mov
mov
mov
jl
dec
sbb
pusha
rcr
pop
mov
cmp
jmp
jmp
pop
loopne
clc
lcall
test
jnp
add
les
mov
into
push
sbb
int3
cmp
sahf
in
jle
fcomi
mov
jb
xchg
mov
jo
fcomi
ss
jno
push
mov
fsubrl
inc
and
inc
call
adcl
stos
aad
dec
ss
adc
das
ljmp
rcll
in
mov
pop
dec
fmuls
loopne
insb
ds
out
push
add
cmp
lret
add
outsl
daa
insl
dec
gs
mov
jnp
push
repnz
orps
call
pushf
stos
sbb
sub
xlat
inc
and
add
add
xor
mov
int
stc
inc
jmp
out
jmp
sub
dec
int3
aaa
repz
mov
jmp
subl
inc
cmpsb
add
fwait
dec
push
mov
mov
pop
int3
shl
xor
xchg
testb
dec
jb
xor
aad
jo
aad
enter
xor
inc
sub
xchg
psllq
arpl
leave
ljmp
iret
out
cmp
mov
and
mov
cmp
daa
xor
mov
sbb
push
push
lock
add
jmp
add
or
dec
imul
jnp
xchg
jg
js
and
imulb
cli
ds
xor
or
gs
arpl
jne
or
out
gs
mov
ror
push
cmpl
mov
out
mov
scas
out
cmp
add
leavew
andl
loopne
pusha
push
cwtl
jae
push
adc
push
out
in
add
inc
aas
push
jecxz
mov
pop
pop
mov
outsb
adc
imul
pop
add
mov
push
bnd
cltd
mov
popa
sub
add
push
jmp
add
sbb
pop
sbb
adc
daa
jle
lods
sbb
out
call
mov
add
je
mov
lods
and
pop
repnz
call
lock
inc
jae
fyl2xp1
pop
xor
sub
sti
push
leave
cmp
or
dec
mov
js
int
loope
int
push
inc
sahf
xchg
mov
jae
test
xchg
mov
adc
mov
jae
xchg
stos
aad
scas
addr16
ljmp
push
and
loopne
mov
test
test
pop
pusha
sti
in
lods
insb
inc
push
enter
scas
mov
pop
out
sbb
mov
jmp
lret
test
pop
adc
and
adc
xchg
mov
rorl
fdivs
dec
shrl
cmp
adc
mov
nop
int3
mov
movsl
mov
imul
lock
fbstp
rcrl
out
or
push
sub
mov
add
xor
ljmp
mov
lgs
mov
jle
into
add
pop
fcoms
and
lock
sub
jl
dec
lods
xchg
inc
notb
je
pop
mov
xchg
arpl
inc
fisubl
adc
pop
jmp
xor
sbb
sar
push
adc
mov
dec
xchg
in
mov
in
hlt
jp
add
pusha
in
std
bnd
out
add
mov
shr
daa
xor
push
sub
aad
jns
rorb
enter
jns
push
lret
repz
or
mov
adc
or
or
sub
into
sbb
jg
mov
mov
sbb
fucomi
data16
add
stos
or
in
jmp
sub
pop
dec
jecxz
lahf
sbb
neg
dec
dec
and
fsubs
adc
outsl
or
scas
sub
or
sti
cmp
or
adc
cmpsb
sahf
fidivl
adc
das
push
mov
mov
pop
andb
out
loop
std
fsts
test
mov
xchg
xchg
or
into
imul
loopne
fucomip
fsubrs
es
cmp
jp
sbb
sub
pop
fmuls
mov
or
or
aam
dec
dec
cmpsb
leave
arpl
jmp
orb
out
mov
mov
mov
lods
dec
lods
fnstsw
cli
mulb
test
pusha
mov
jp
jb
sbb
roll
lods
adcb
and
testl
xor
ret
lock
maxps
inc
adc
movsl
jb
loope
xchg
mov
fcoml
pop
mov
pushf
fisttps
and
loopne
pop
out
pop
lods
adc
cmp
push
cmp
js
push
mov
dec
sti
rcl
aas
and
jge
cwtl
aaa
aam
pusha
fstps
loopne
mov
pop
stos
sar
dec
out
addl
cmpsb
stos
mov
jns
xor
adc
stc
dec
xor
scas
int3
aas
dec
jp
add
cmpsl
sti
add
or
cmc
fidivs
fdivrl
inc
insl
clc
xchg
add
mov
ficomps
cmp
jo
add
inc
pop
sbb
ds
ret
mov
shll
movsb
inc
jle
cmp
add
les
xor
xorb
jle
negb
sahf
or
int3
lock
and
shrb
jge
shll
lock
push
addr16
sti
filds
mov
and
mov
bound
ret
mov
icebp
stc
push
shll
cmp
fucomip
out
inc
mov
jp
pop
jecxz
add
mov
inc
call
insb
xor
dec
push
movsl
outsl
leave
repz
cmpsb
jne
and
das
in
jecxz
sbb
jno
aas
std
jae
and
into
repz
dec
jno
cmpsl
sahf
pushf
pushf
mov
in
cmp
mov
movb
inc
jp
sbb
gs
cmp
xchg
or
mov
lds
cmpsb
or
popa
pop
lret
mov
inc
pop
movsb
mov
sarl
add
push
sub
rorb
jmp
outsl
cli
mov
pop
inc
jo
scas
inc
jl
int3
jo
clc
pop
sbb
arpl
sbb
mov
es
daa
mov
mov
dec
hlt
sbb
adc
cmp
call
sub
xor
jmp
cmpsb
cmp
xor
push
xor
clc
xor
jae
inc
ret
and
xorb
fwait
push
jmp
xorb
xchg
mov
pop
cmp
pop
push
fcomps
and
sub
fcmove
jecxz
aas
mov
fistpl
clc
inc
outsb
sub
push
fs
leave
data16
mull
loop
add
cmp
imul
mov
rolb
outsl
fstpt
test
cmc
in
push
mov
pop
mov
pop
jl
push
or
insb
dec
cmp
sub
jmp
not
jbe
sbb
mov
or
out
sub
int
lock
scas
push
sbb
xor
dec
sub
sub
subb
fcoms
adc
mov
cmpsw
daa
adc
adc
gs
and
ds
popl
js
outsb
mov
mull
lcall
pop
or
mov
add
adc
xor
adc
out
lods
pop
or
mov
mov
jmp
sti
mov
sbb
mov
int3
mov
loope
push
scas
or
dec
cmpsl
adc
lret
outsl
outsb
mov
outsb
jae
loop
dec
out
jno
sbb
test
ret
and
les
imulb
push
cmc
movsb
and
pop
cmpsl
sub
ret
dec
nop
adc
lds
sarb
sbbb
cmc
fwait
dec
push
mov
pop
and
mov
lcall
in
xchg
pop
scas
fs
testb
inc
nop
inc
sbb
jns
mov
or
sbb
jge
xlat
nop
enter
jp
cmp
cltd
inc
and
movsb
cwtl
mov
setns
push
dec
pop
add
push
xchg
xchg
insl
pop
divb
test
into
sbb
mov
mov
mov
xchg
je
loopne
cmpsb
loope
inc
jmp
push
icebp
cmp
hlt
lcall
dec
ja
testl
xchg
imul
inc
inc
subb
dec
xor
cs
ds
mov
xchg
push
xlat
lret
out
test
pusha
pusha
push
imul
outsl
cmp
cld
fiaddl
stc
mov
jg
xor
outsl
adc
xor
stos
shll
mov
inc
jns
rolb
pop
mov
and
popa
pop
xchg
mov
daa
mov
loopne
je
in
ljmp
int
mov
jnp
and
aaa
sar
lods
inc
lock
dec
xor
call
inc
inc
xor
push
mov
pop
into
leave
push
xchg
fsts
aam
icebp
loop
lock
pop
mov
out
push
mov
aad
mov
dec
mov
enter
and
mov
mov
push
cs
ljmp
push
je
js
xor
dec
push
fwait
add
dec
data16
cmc
filds
jmp
or
jecxz
mov
push
pusha
add
sarl
and
cmp
test
stos
pop
in
fdivs
add
pop
clc
mov
xchg
in
jb
das
xorl
sarl
push
adc
cli
jnp
lahf
neg
pmullw
imul
test
fsubrs
aad
adc
pop
adc
add
fsubl
sbb
or
int3
and
in
inc
pop
cwtl
leave
ret
lcall
inc
or
xor
aad
inc
int
arpl
jne
ret
xor
pusha
xor
fwait
mov
push
int3
shll
xbegin
test
mov
into
mov
cltd
fisubl
lcall
pusha
scas
loopne
pop
and
jae
pusha
and
sub
stos
jmp
xchg
sahf
cmp
pop
mov
outsb
mov
bound
cmpsb
mov
mov
xchg
fstl
cmp
lcall
mov
mov
hlt
xchg
in
lods
push
les
jmp
cmp
test
pop
xchg
dec
bound
rcrb
xor
xchg
dec
jge
pop
ja
out
xchg
movsl
inc
pop
in
jp
lret
xchg
xchg
sbb
shll
or
push
loopne
jge
pop
sbb
ljmp
fsubrl
inc
dec
mov
mov
mov
into
cmp
cmpsl
wbinvd
bound
adc
mov
jmp
out
dec
js
dec
mov
je
pop
andl
js
xchg
sub
push
inc
lock
aaa
jbe
call
mov
push
dec
cmp
or
decl
sub
pusha
ss
scas
push
ljmp
mov
mov
pop
roll
imul
sub
in
outsb
sub
adc
xchg
mov
cmp
ja
nop
rolb
ret
cmpsb
bound
pop
xchg
mov
imul
jge
test
aam
movsb
adc
pop
mov
jns
adc
imul
mov
pop
mov
cli
rorb
xorl
push
test
jnp
hlt
iret
shll
mov
mov
adc
fs
inc
sete
clc
inc
arpl
fdivl
jne
in
mov
pop
dec
mov
mov
daa
inc
inc
dec
std
fst
repnz
divb
icebp
mov
mov
in
lret
or
dec
pop
mov
cmp
mov
into
adc
ds
mov
icebp
mov
adc
adc
mov
cmp
cmpsb
mov
jmp
pop
mov
clc
mov
pusha
cmp
cmc
mov
sbb
mov
das
les
cmp
int3
cld
xor
nop
out
rclb
mov
fcmovbe
aas
mov
xor
and
mov
adc
xor
fwait
and
xor
or
les
sbb
fildll
lds
mov
jno
lods
adc
mov
mov
rol
jbe
pop
jmp
push
fnstsw
xchg
jecxz
out
stos
mov
add
leave
call
rol
push
ret
adc
dec
push
mov
dec
negl
dec
jmp
shlb
lock
fisttpl
scas
cli
ret
fwait
orb
popf
lods
cmpsl
push
fwait
dec
js
loopne
mov
push
icebp
add
dec
push
aad
cltd
fstpl
xorb
arpl
inc
mov
push
xor
imul
sub
jle
xchg
imul
pop
dec
jge
sub
mov
mov
sbb
repz
loopne
lahf
sti
adc
test
jae
fs
push
iret
mov
push
mov
mov
dec
pop
push
ret
test
adc
aad
pushw
sub
cmova
pop
cmpsb
in
enter
daa
pop
inc
cmp
sub
and
cltd
imul
scas
mov
inc
movl
fisubl
xchg
lea
or
fstpt
ss
add
int3
pusha
je
cmpsb
xchg
stos
test
loopne
inc
xchg
push
sahf
inc
sbb
fdivr
sti
cmovl
dec
movsl
inc
mov
dec
mov
hlt
repz
repz
mov
sbb
leave
or
ja
mov
pop
dec
xlat
icebp
add
push
sub
jo
rorb
xchg
js
xor
pusha
movsl
cwtl
scas
sub
rolb
and
in
adc
mov
mov
dec
mulb
sbb
inc
push
xchg
jle
jae
sub
clc
ret
dec
mov
jns
outsb
addr16
outsl
push
in
lods
adc
iret
mov
daa
sub
mov
sti
mov
push
mov
and
imul
or
movsl
jmp
inc
sub
xchg
insb
adc
cltd
mov
pop
ljmp
rcrl
loop
mov
mov
adc
jge
test
imul
jle
mov
cmp
xchg
int3
arpl
inc
outsl
leave
test
jecxz
xchg
adc
lcall
cmp
push
icebp
cmp
xchg
je
std
int3
call
xorl
mov
popf
adc
mov
in
xchg
sbb
dec
popf
arpl
and
repnz
pop
jo
mov
xor
push
lret
stos
inc
cld
sub
mov
jmp
decb
ljmp
add
scas
cld
dec
in
sbb
mov
shr
xor
adc
mov
clc
mov
cmp
or
xchg
call
xor
lods
sbb
pop
ds
shlb
in
scas
xor
lahf
xor
add
ds
push
add
lock
iret
addr16
int3
cmpb
pop
push
in
jp
ficoml
adc
std
mov
fistl
xchg
or
inc
daa
jecxz
jnp
in
leave
xchg
or
sti
pop
cmp
xchg
sub
xchg
or
faddl
mov
push
idivb
les
out
stc
xchg
mull
outsl
nop
es
cmp
jecxz
inc
adc
std
inc
gs
popa
js
das
frstor
mov
xor
jle
jb
fwait
lods
test
xchg
lock
adc
divl
fbld
out
out
shrd
mov
push
dec
mov
xchg
lcall
xchg
adc
xchg
arpl
stos
jno
inc
or
adc
imul
pusha
fists
icebp
mov
and
cmp
ds
and
data16
mov
dec
cmp
in
and
jnp
push
cld
jb
adc
int3
mov
lea
xchg
ret
jp
mov
divb
push
fsts
mov
pusha
int3
xor
cmp
mov
or
aam
mov
xor
into
sub
push
dec
shlb
sti
das
repz
jle
cmp
push
mov
mov
sbb
insl
subl
movsb
insb
cmp
pavgb
pop
lds
mov
ja
inc
lret
scas
mov
adc
les
and
cmp
or
ss
in
insb
jno
mov
push
jmp
cmc
stc
xchg
mov
mov
sbb
and
mov
ret
push
lahf
xorl
movsb
mov
pop
or
dec
mov
pop
ljmp
stos
fdivrp
nop
adc
pop
dec
xor
icebp
xchg
adc
fcmovnu
insb
loopne
dec
clc
sub
mov
jne
mov
or
add
rorb
int
scas
call
or
adc
adc
inc
push
insb
dec
or
js
rclb
mov
jnp
cmp
sub
jecxz
sbb
arpl
pop
insb
inc
sbb
sbb
or
dec
mov
adc
stos
ds
daa
dec
shll
sub
mov
cmp
inc
jo
popa
or
in
sbb
xchg
fiadds
jns
call
cmp
in
add
fstl
loopne
in
jp
sub
adc
jg
pop
jp
int3
filds
daa
dec
pop
fisubs
or
cmp
scas
cwtl
mov
js
dec
sbb
sub
inc
flds
xchg
aas
shll
les
lods
pop
xchg
call
pop
loope
aad
cmpl
dec
and
pop
sbb
or
mov
xchg
xor
out
cwtl
test
add
sub
mov
dec
rcll
sub
jp
out
cmp
xor
mov
lock
cld
xchg
loope
or
inc
mov
outsl
out
pushf
aas
mov
dec
fmuls
jl
push
neg
adc
sbb
adc
popf
dec
xor
fwait
test
lret
sub
xor
es
mov
aad
test
gs
js
rol
mov
mov
sub
sar
and
fimull
fs
jmp
mov
shrb
mov
data16
notb
jl
dec
jmp
and
push
and
adc
stos
sub
adc
rorb
rcll
add
fxch
out
or
scas
hlt
inc
xchg
fsubrs
cwtl
jecxz
gs
lahf
shr
inc
push
add
add
aaa
call
add
cltd
dec
in
cwtl
das
dec
std
imul
xchg
push
push
rolb
sbb
mov
adc
push
mov
mov
mov
inc
into
dec
jb
mov
loopne
popf
inc
sub
mov
mov
pushf
xchg
pusha
sarl
movsl
pusha
xchg
mov
orl
dec
sbb
add
push
dec
cmp
in
addr16
out
ljmp
inc
shl
mov
fst
and
mov
push
mov
mov
xchg
int3
sbb
inc
sbb
mov
testl
adc
xorl
xchg
mov
mov
cmc
fwait
mov
push
icebp
ret
jne
popf
pop
daa
shll
push
pop
adc
cmp
sub
test
xor
mov
ret
outsb
mov
cmp
inc
gs
iret
daa
in
push
adc
mov
and
xchg
sahf
fs
lret
cmp
mov
cmpsb
xchg
loope
or
adc
xchg
cwtl
jno
loopne
xchg
loop
cwtl
arpl
sbb
pop
jle
push
and
inc
mov
les
mov
out
or
lea
addr16
insb
outsl
dec
pop
inc
and
add
jle
in
lods
jp
mov
ficompl
inc
mov
xchg
lds
or
xchg
lret
inc
inc
mov
pop
icebp
les
push
lods
call
fbld
cmc
cltd
dec
fwait
sbb
inc
mov
arpl
fdivs
enter
dec
cmp
xchg
lret
push
jle
xlat
xchg
bound
cmp
dec
sti
loopne
imul
mov
jp
ss
movb
in
add
mov
ds
push
test
imul
mov
push
test
or
int3
out
inc
pop
into
les
jp
jno,pn
adc
imul
pop
add
fsubp
inc
lea
xchg
push
stos
push
repnz
aam
pop
or
in
mov
mov
sbb
fcoml
push
jns
push
dec
push
aam
out
xchg
dec
clc
or
sbb
jb
mov
xor
mov
mov
out
pusha
stos
hlt
inc
and
fisttps
cmp
cmp
jge
dec
cmp
xchg
xor
imul
inc
test
push
inc
push
idivb
imul
add
adc
mov
pop
mov
popa
xchg
fucomi
popf
or
pushf
ret
jo
jno
mov
testb
dec
gs
lret
push
pop
shlb
pop
popa
nop
adc
add
adc
fmul
in
mov
out
mov
pop
mov
mov
popa
mov
sarb
cmp
or
divl
adc
cmp
push
jmp
insb
shrl
lock
or
imul
push
push
loopne
mov
stc
inc
rcr
notl
add
std
jns
lcall
daa
test
xlat
stos
into
fdivrs
add
push
jne
push
mov
fimull
scas
add
les
cmp
outsb
jl
jmp
std
lret
jp
cwtl
adc
adc
dec
out
dec
dec
or
adcl
xchg
push
addr16
mov
test
enter
in
lret
mov
mov
inc
xchg
or
adcl
scas
enter
cwtl
pop
test
mov
adc
inc
pop
push
inc
push
xchg
add
mov
das
jo
mov
shrb
in
std
or
inc
sub
pop
adc
jge
int3
and
xor
sub
xor
in
jle
ds
pop
jnp
mov
not
xor
les
or
push
fnstenv
jmp
int3
jnp
or
xchg
pop
mov
or
js
mov
jg
sub
lock
mov
push
mov
icebp
mov
aam
xchg
or
mov
push
or
xlat
fldcw
mov
mov
mov
xor
mov
inc
jbe
jne
pushfw
jecxz
sbb
mov
addb
mov
xchg
mov
outsb
stos
ret
jb
pop
add
push
adc
dec
xlat
stc
shlb
push
xchg
cmp
cmp
mul
mov
ficoms
test
sbb
inc
cwtl
test
xor
in
and
call
in
dec
ffree
jmp
outsl
or
cmpsl
sbb
loopne
pop
test
outsb
xchg
aas
push
into
out
pop
and
xor
mov
dec
fdivrp
add
cmp
out
cmp
scas
das
xchg
inc
jbe
lods
inc
push
and
ret
test
jnp
ds
negb
xor
imul
fdivrs
in
divl
jo
add
push
dec
insb
sub
repnz
dec
ljmp
into
enter
scas
adc
and
dec
lret
xor
loopne
loope
or
mov
pop
pop
in
test
mov
push
or
push
jg
push
jnp
xchg
mov
jno
mov
or
push
jmp
movsb
adc
and
out
add
mov
mov
popa
ret
xorb
lods
xchg
mov
cmpsb
rorb
dec
out
and
xor
adc
ja
std
or
inc
fs
xchg
and
push
idivl
xchg
push
js
cmp
and
cmp
and
shll
cmp
cwtl
cld
sub
add
cmpsl
movsl
dec
in
dec
in
imul
jmp
icebp
popa
rorb
sub
mov
loop
rclb
loope
mov
mov
aaa
sbb
pop
stos
lret
out
cmpsb
mov
xchg
enter
mov
out
out
xchg
push
arpl
add
xchg
rorb
jge
test
xor
adc
dec
adc
ljmp
xchg
dec
mov
pcmpgtb
fmulp
xor
sbb
cwtl
fucomp
out
bound
dec
jp
imul
rcr
jg
testb
mov
lods
repz
pusha
cmpl
xchg
cmp
fldcw
push
cwtl
dec
fcmovne
jae
dec
cmp
mov
pushf
cwtl
fmul
add
movsl
clc
mov
in
mov
mov
dec
cmp
sub
fildl
mov
mov
jne
mov
xchg
lods
enter
sub
lret
push
mov
or
push
jmp
xchg
or
cmc
xor
push
call
roll
les
or
orl
movsb
fidivs
out
add
cmp
mov
adc
jo
mov
push
adc
arpl
in
or
mov
or
imul
mov
out
add
mov
push
ret
mov
loopne
jo
jne
movsl
pop
gs
enter
xor
xchg
sub
mov
mov
test
mov
mov
ja
dec
push
aad
loop
cmp
pop
mov
mov
lock
or
movsl
jge
pusha
lods
jne
mov
arpl
cmp
lods
into
mov
aad
cmp
mov
call
xchg
jnp
push
lods
dec
mov
pop
dec
jo
in
out
orb
nop
jge
ret
ss
sbb
dec
adc
xchg
ss
jo
lods
lock
fisubrl
push
sbb
jnp
daa
cli
in
xor
dec
sbb
push
jp
and
cmp
stc
mov
sub
lock
pop
push
mov
loope
rcrb
sub
xor
in
xchg
dec
mov
lds
mulb
xor
mov
pushf
jo
xchg
bound
adc
insb
cmpsl
pop
mov
loope
in
xor
pop
aam
int3
push
xlat
out
fldl
or
rol
jae
stc
pop
pop
int
xor
mov
fstpt
mov
rcr
dec
ret
mov
mov
cwtl
sbb
and
inc
rcll
ljmp
xchg
fsubrp
stos
cmovb
lds
inc
rcl
xchg
or
dec
inc
sbb
mov
outsl
stc
or
mov
pop
sub
sbb
jbe
and
lods
mov
stos
xchg
pop
adc
cld
jp
or
mov
inc
inc
jbe
lahf
jne
or
rorl
add
test
mov
xor
cmpsb
cli
xchg
in
dec
fs
sti
mov
inc
loopne
repz
dec
push
adc
adc
mov
int
aas
loop
aas
mov
cmc
dec
fdivs
cmp
push
fimull
fsubr
mov
ss
sub
cld
subb
xor
sti
arpl
adc
jl
cmpsb
dec
jmp
and
ja
sahf
daa
sub
xor
fisttpl
scas
ret
mov
or
push
fwait
sub
and
test
add
add
mov
cmp
dec
dec
dec
push
sbb
xchg
int
fstl
mov
fucom
lcall
xchg
push
jo
gs
in
test
jp
rclb
test
ljmp
mov
int3
and
fldl
rol
xchg
add
cs
ljmp
sub
out
scas
out
shrl
xchg
pop
loopne
sbb
movsl
xor
mov
xchg
cld
popa
arpl
cwtl
lods
stos
cmovns
xor
orb
cmp
inc
fidivs
cmpsl
cmp
push
sti
lds
loope
dec
shl
xlat
or
pop
sbb
sub
push
imul
jecxz
mov
mov
push
and
jg
gs
jmp
push
in
mov
jmp
popf
jl
lods
inc
shll
lds
cmp
leave
movsl
dec
sbb
add
sub
loope
pop
cmp
addr16
lods
int3
pop
je
jg
insb
push
test
cltd
push
and
popf
mov
sbb
mov
in
xchg
jns
aam
jmp
out
push
inc
xor
sar
xor
jo
or
adc
mov
mov
or
pop
inc
lahf
cmp
shl
loop
lcall
add
jg
lret
out
aas
aas
adc
dec
lret
dec
or
into
pop
sbb
sbbl
push
adc
cli
push
in
cmp
outsl
loope
jg
loope
xchg
adc
and
inc
imul
add
jecxz
cltd
push
sub
adc
pop
movsl
insl
xor
mov
push
jecxz
std
ffreep
mov
dec
or
dec
rolb
mov
out
call
test
ret
jge
cmpsb
sbbl
jg
inc
adc
into
dec
outsb
in
lcall
aaa
nop
dec
in
test
call
inc
insb
jnp
dec
loop
or
ljmp
push
jae
aas
mov
add
popa
xchg
testl
test
aad
pop
mov
fcoms
pop
push
jbe
or
cs
mov
pop
jb
out
xor
sahf
dec
xor
or
pusha
aam
notl
cwtl
add
cld
rorb
in
adc
jnp
xchg
xchg
ficoml
adc
xchg
mov
data16
dec
and
push
inc
in
push
into
shl
fimuls
adc
cltd
lock
xchg
dec
mov
enter
dec
rclb
pop
add
mov
loope
cld
push
xlat
lock
xlat
or
sbb
ss
fwait
hlt
xor
shll
or
fiaddl
mov
stos
dec
mov
popf
adc
sbb
arpl
inc
sub
ja
mov
push
inc
mov
dec
mov
movsl
xchg
ljmp
in
inc
cmp
mov
lea
sbb
test
and
pop
sbb
sarb
popa
adc
mov
add
pop
add
movsl
or
push
lret
es
subb
mov
inc
mov
and
loopne
fwait
test
lcall
xchg
mov
out
push
addr16
shll
mov
aas
mov
xor
loope
lret
loopne
add
and
in
push
stos
fisubs
sub
andb
mov
mov
nop
nop
es
mov
mov
dec
iret
push
aas
or
insb
push
adc
sub
mov
out
push
push
fimull
fwait
lods
out
pusha
jb
out
das
pop
or
xchg
lea
fisttps
cmp
shll
cmpsl
mov
mov
loope
shlb
sub
ja
in
xor
inc
rorb
add
lds
in
orb
push
mov
ficoms
jge
std
push
les
mov
xchg
jo
mov
push
cmpsb
ss
adc
jp
mov
fs
sub
cmp
jp
and
arpl
xchg
add
imul
cmpsb
addr16
push
fimuls
addl
loope
xchg
pusha
mov
mov
push
xchg
call
pop
xchg
stc
push
dec
pop
dec
dec
jns
jb
jg
repnz
lret
mov
inc
orb
xchg
mov
pop
mov
push
inc
sahf
arpl
sub
icebp
and
adc
insb
adc
lock
mull
adc
fwait
dec
xchg
enter
and
fwait
dec
outsb
hlt
pop
mov
jo
fisubs
jg
jmp
push
xchg
and
call
inc
scas
push
fimull
lret
fstl
jge
subb
pop
aaa
xor
rcl
repz
scas
rol
push
cltd
xor
xchg
aam
xchg
adc
jae
mov
mov
push
xor
adc
xor
cmp
mov
pop
mov
shrb
decb
mov
push
ffreep
add
shll
sub
jecxz
insl
inc
mov
ss
imul
mov
cmp
xchg
cwtl
cld
dec
lods
fnstsw
jmp
cmp
fcompl
lahf
cmp
aaa
cmpsl
jl
mov
pop
imul
nop
add
clc
dec
addr16
jg
in
lcall
sbb
xchg
lods
jg
data16
divb
dec
mov
pop
or
pop
imul
and
arpl
mov
and
jb
xchg
in
pusha
subl
sub
cmp
testl
sahf
ret
nop
mov
jae
ret
mov
pop
shrb
cli
fdivrl
outsl
mov
scas
repz
and
movsb
arpl
clc
data16
je
xchg
clc
ret
fsub
jo
fldt
dec
in
dec
insb
movsl
add
or
out
and
gs
outsb
ss
mov
loopne
jmp
xlat
lcall
ljmp
shlb
push
cmp
xchg
rcrl
aam
addl
dec
stos
and
jmp
mov
cmp
fsubrl
test
into
xor
cmpsb
inc
aaa
mov
pop
lret
push
sub
inc
jl
cmp
or
push
mov
gs
jg
inc
jmp
or
inc
adc
push
xchg
adc
mov
inc
cld
add
sahf
xor
mov
mov
lods
mov
insl
dec
mov
in
dec
sahf
fmulp
cmc
shrb
sub
lods
jecxz
nop
jb
mov
popa
xor
cmpsb
adcl
and
cmp
aaa
add
aad
and
jbe
xchg
push
fucomp
and
jg
xchg
and
xchg
mov
pushf
int
mov
and
adc
jp
out
into
pinsrw
or
lock
xchg
mov
fnsave
inc
cmp
xchg
cmp
dec
stos
or
das
loopne
cmpsb
in
aas
mov
lcall
aaa
rcll
xorl
push
nop
bound
or
pop
inc
mov
lahf
std
mov
push
adc
xor
bound
mov
add
ror
xor
sbb
addr16
xchg
in
jle
or
ss
dec
rol
mov
mov
ffreep
stos
fsubrs
loopne
fsubrp
push
shrb
and
loopne
lods
sub
jno
jecxz
les
out
add
fdivs
loopne
lods
js,pn
daa
pusha
inc
repz
mov
nop
mov
filds
out
mov
stc
mov
loop
mov
pushw
xchg
scas
imul
pop
ja
repz
push
in
dec
sub
pop
add
push
sub
push
idivb
shlb
mov
into
inc
inc
adc
loopne
mov
cmc
mov
loop
inc
or
lods
and
xor
ret
notl
dec
aad
dec
push
popf
mov
cmp
loop
pusha
jmp
mov
add
mov
lret
mov
xor
idivb
xor
jae
xchg
jl
push
cwtl
roll
cltd
xchg
jb
outsb
loope
mov
stc
mov
cmp
sub
pop
stc
mov
sbb
icebp
std
push
aam
push
mov
js
or
xlat
jae
pmuludq
mov
cmp
jbe
int3
jns
push
sbb
nop
dec
push
push
lahf
dec
dec
cmpsb
jno
stos
push
inc
enter
push
push
pop
dec
cmp
pusha
mov
clc
adc
cmpsl
jecxz
popa
inc
jmp
int
mov
push
testl
icebp
or
cmp
add
into
or
mov
sub
mov
jnp
sarb
lret
adc
call
les
push
push
decb
vsqrtss
push
mov
int
pop
push
in
insl
pop
inc
cmp
pop
lock
aas
pop
push
in
and
inc
inc
mov
mov
popf
sarb
std
shll
mov
sub
jmp
adc
xchg
xchg
ss
cmovo
mov
cmp
push
jnp
fnstsw
out
ficoml
push
sub
pop
stos
cmp
jo
xor
mov
dec
pop
adc
adc
test
xchg
data16
and
fsts
xchg
mov
inc
in
xchg
adc
in
mov
mov
cld
dec
scas
ss
cmp
add
jb
or
das
clc
inc
mov
adc
mov
in
dec
notb
cwtl
cmp
fistps
mov
repnz
xlat
cld
mov
je
mov
or
fs
mov
loop
imul
adc
mov
in
outsb
loop
adc
int
nop
xchg
push
leave
mov
xlat
shl
sub
imul
imul
xor
push
js
pop
scas
js
adc
insb
add
enter
push
sahf
dec
cmpxchg
inc
fsubrs
fisubrl
lods
xchg
scas
pop
pop
dec
mov
jle
sub
xchg
les
mov
jae
in
aaa
repnz
ja
inc
dec
jmp
add
jg
inc
sti
push
pop
jae
push
cmp
sbb
push
sbb
pop
and
movsl
mov
cwtl
jp
adcb
in
mov
outsl
pop
mov
push
push
loop
es
mov
movsl
xor
lret
cmpsb
add
pop
ss
adc
pop
push
ja
adc
push
lds
test
lret
fwait
jle
mov
add
popa
pop
jp
mov
inc
shlb
adc
push
mov
xchg
push
push
or
pop
jecxz
push
dec
xchg
sahf
adc
sahf
or
xor
or
adc
jne
add
inc
repnz
lock
sti
push
addr16
mov
xchg
outsb
ret
dec
push
stos
outsb
hlt
inc
push
xchg
sbb
sti
int3
jmp
adc
int3
mov
pop
call
daa
repz
nopl
jb
mov
adc
push
cmpsb
shlb
out
push
jle
pop
sub
les
jnp
xchg
imul
pop
lock
lods
jecxz
aam
and
aaa
jo
popa
fildll
jecxz
inc
icebp
addr16
in
xchg
ficompl
sbb
dec
inc
or
sbb
sub
movsb
lock
xor
push
rcrb
sbb
in
dec
ds
adc
adc
insl
pop
jmp
jmp
lret
xchg
sub
mov
xor
movsb
std
adc
std
fsubrs
inc
mov
out
icebp
ffreep
dec
lods
cmp
xchg
cmp
nop
aam
mov
adc
lods
mov
cmc
jp
pusha
loope
dec
pop
ds
lods
arpl
loopne
hlt
mov
jae
adc
sbb
add
lret
pminsw
rorb
xlat
jmp
scas
cmpsb
data16
inc
push
lcall
push
cmp
cld
not
pmulhuw
in
lret
xchg
scas
cmp
jae
mov
add
and
push
jp
aaa
mov
cwtl
and
fsincos
lock
add
fistpll
jb
sub
bound
xchg
xchg
inc
cmp
jl
adc
xor
fmuls
xor
insl
loop
xchg
dec
lds
out
popa
mov
dec
divl
mov
cld
rcl
jl
aam
scas
out
cmpsl
mov
aas
or
jno
or
loope
mov
push
aas
cmp
cmp
lods
dec
jmp
pop
call
fsubs
mov
adc
xchg
data16
loopne
xchg
test
clc
testl
cs
pusha
push
mov
stc
repz
mov
out
mov
into
and
test
incl
fs
std
rcll
add
fs
ret
icebp
in
cmp
lods
add
imul
jp
je
call
mov
dec
push
sahf
mov
lcall
dec
outsl
sarb
pop
cmp
add
sbb
pop
adc
dec
int3
jl
test
cmp
xchg
loope
lret
pop
stos
insb
add
mov
pop
test
leave
push
push
adc
int3
sub
mov
lock
inc
cwtl
and
jnp
ret
mov
ret
int
stos
scas
sub
test
ja
daa
out
and
jb
adc
mov
pop
into
jmp
jmp
mov
ret
mov
xchg
mov
rcrl
dec
jg
lods
pop
cli
push
out
sarl
lods
sub
fs
mov
popa
xor
pop
imul
and
mov
push
dec
jg
pop
aam
mov
fmull
daa
xchg
lret
pushf
rcl
sarb
cmp
pop
mov
push
pop
inc
lods
iret
lods
pop
movsl
scas
jl
insl
stos
jnp
sub
popa
xor
inc
sbb
cmp
jne
int
js
jo
push
push
cmp
dec
dec
cli
push
adc
out
and
aaa
jmp
pop
in
jle
mov
jno
or
jnp
fwait
mov
adc
shlb
inc
hlt
int
push
repz
or
mov
loopne
xlat
xchg
lock
lock
push
mov
in
lock
pop
inc
mov
insb
adc
out
mov
xor
out
push
cmpsb
popf
push
push
outsb
jb
rorl
mov
sarl
mov
adc
fstl
xchg
push
mov
test
fincstp
mov
sub
fs
push
loopne
cmc
mov
ret
jno
xor
out
lds
xor
jnp
xchg
insb
push
fs
outsb
pop
push
cmp
loop
sbb
icebp
jg
pop
jnp
push
xchg
cmp
fs
out
into
std
push
call
out
arpl
mov
icebp
gs
decb
aas
dec
sbb
arpl
push
sbb
rcrb
nop
xor
shlb
mov
loopne
lods
dec
add
aas
sbbb
sbb
icebp
insb
imul
data16
movl
fcomps
adcl
jnp
roll
fs
stos
mov
mov
popf
or
or
adc
jns
cwtl
jmp
jl
sub
ja
dec
jnp
call
xchg
pop
mov
push
scas
xor
mov
sbb
movsb
jno
sbb
inc
adc
and
scas
hlt
outsb
adc
jl
cmp
enter
stc
mov
test
dec
shrl
sub
cmc
xchg
jno
fisubrl
cld
popf
nop
lds
xor
xor
pop
scas
push
incl
test
rcl
mov
xchg
inc
inc
cmpsl
push
jnp
int3
out
xor
clc
ret
fsubrp
and
add
ja
andb
bound
std
jp
ljmp
aas
mov
insb
sub
sahf
idivb
push
mov
outsl
fdivrl
nop
push
stos
popf
sub
xor
add
mov
lcall
pop
les
out
add
add
gs
cltd
es
rorb
dec
xorb
inc
xor
lods
insb
ret
aad
mov
dec
mov
and
jbe,pt
cmp
shr
cmc
mov
cmpsb
test
test
pop
leave
push
push
adc
and
sub
push
sbb
leave
sub
std
lods
call
jmp
lods
gs
rcll
and
xchg
inc
clc
pop
shl
sub
add
clc
xchg
xor
jle
xchg
stos
dec
sti
push
dec
ja
push
sub
adc
push
mov
outsb
dec
aaa
rcl
dec
pop
xchg
add
iret
sbb
lret
andl
insl
xor
and
cwtl
jnp
ja
lret
sub
push
ret
repnz
mov
cmp
cmp
pop
inc
push
cmpsb
jmp
in
aas
filds
inc
fldenv
add
sub
sbb
adc
scas
notl
mov
push
pop
outsb
shr
iret
gs
insb
inc
mov
cmp
mov
push
roll
cltd
mov
mov
leave
pop
sbbb
out
negb
repz
jmp
pushf
insb
jecxz
and
jge
xlat
data16
mov
imul
push
jbe
loop
add
je
popa
pop
mov
js
mov
std
sbb
fucomi
pop
and
fmul
cmpsb
jecxz
in
xchg
idivl
xchg
fcmovnu
sti
xchg
movsl
notl
je
xlat
das
adc
movsb
insl
int3
push
mov
test
lret
pop
mov
in
leave
cs
jg
lahf
xchg
stos
clc
negb
or
pusha
mov
in
and
jnp
mov
inc
adcb
leave
and
add
fcompl
xor
push
sbb
outsl
call
cmp
testb
and
jg
or
pusha
sbbb
push
mov
pop
jmp
call
inc
mov
dec
insb
mov
repnz
lret
cmpsb
inc
sub
sti
popf
mov
nop
lea
sub
int3
lods
mov
mov
das
cmp
cmp
insl
pop
fs
cltd
or
jle
mov
mov
psrld
ljmp
xlat
lar
imul
cmp
push
cltd
xchg
xor
cmp
pop
mov
lds
cld
jns
sub
push
outsb
daa
cltd
clc
push
shll
insb
rcll
outsl
mov
sbb
icebp
cmp
xor
int3
add
movsl
mov
dec
scas
dec
iret
adc
jmp
fildll
inc
xchg
fstp
jmp
lods
daa
adc
movsl
imul
scas
popa
getsec
fs
fists
inc
cmp
cmp
jmp
or
adc
scas
jecxz
fstp
push
and
xchg
out
push
xchg
or
xor
nop
adc
add
ja
sub
lods
daa
dec
stc
push
lock
or
push
and
mov
cmpsl
mov
adc
mov
decl
dec
xor
sbb
sbb
popa
mov
push
iret
loop
xchg
fstps
pop
js
test
lea
adc
cmpsb
pusha
cmp
lea
mov
adc
xchg
repz
outsb
testl
mov
dec
fsubrs
movsl
or
push
or
divb
adcb
jo
stos
jp
xor
std
sahf
xchg
jl
cwtl
push
imul
sub
outsl
call
out
shr
or
ljmp
cmp
and
sub
lods
adc
in
and
mov
cmp
in
dec
fstpl
dec
out
push
sub
test
packuswb
and
adc
inc
dec
add
gs
mov
or
mov
icebp
add
and
lret
mov
in
shlb
hlt
data16
notb
fnstcw
js
mov
iret
dec
mov
call
repz
fwait
sub
mov
pop
mov
push
lods
pslld
push
stos
cli
test
popa
popf
push
xor
mov
fimull
pop
push
insb
xchg
femms
sbb
inc
aam
add
ljmp
repnz
and
test
cwtl
xchg
sub
push
mov
in
xchg
mov
or
cmp
andl
xor
add
jno
lock
pushf
cmp
inc
shrb
mov
xchg
ficoml
inc
push
sysexit
mov
add
inc
ret
out
xor
jb
dec
insl
nop
dec
xor
sarl
imul
dec
lahf
scas
mov
ja
insb
call
aaa
je
out
cwtl
cmpsl
and
shrl
movsb
cmp
aaa
aam
add
xlat
and
xchg
xor
out
xchg
loope
test
mov
notb
cli
fs
mov
mov
fcoms
aaa
mov
adc
push
outsl
fldcw
lods
fcom
inc
sub
and
nop
iret
negl
fstpl
jo
lods
cmpsl
push
xchg
sub
dec
adc
pusha
push
out
jnp
decb
popf
cmpsb
pop
lods
mov
popa
cmpl
int
mov
fwait
and
fwait
inc
test
cmp
push
push
sti
lods
int3
and
sub
dec
adc
inc
cli
xor
shlb
test
rol
mov
adc
dec
or
mov
adc
mov
inc
test
out
adc
mov
pop
jecxz
pop
in
dec
mov
test
adc
aaa
pop
in
push
mov
sbb
ret
mov
push
mov
pop
test
pop
ss
pop
dec
test
stc
mov
adc
push
loopne
shlb
jg
pop
dec
je
jb
cltd
sub
aaa
fnstenv
pmuludq
inc
mov
dec
gs
fldcw
sub
lods
xchg
mov
sub
jb
outsl
mov
out
jnp
inc
jle
sub
lods
outsl
pop
sbb
sti
push
dec
jno
pop
mov
movb
cmp
adc
cmp
aad
ret
mov
clc
push
dec
push
and
mov
cmp
dec
pop
adc
xchg
outsb
xchg
lcall
cmp
sbb
dec
rclb
shrl
lea
fbld
cmpsl
int
inc
loopne
imul
addr16
and
test
sub
orl
sbb
stc
cli
out
mov
mov
testb
insb
rolb
fdivr
das
add
les
sti
adc
mov
add
mov
aas
jle
popf
int
inc
cwtl
push
pop
fs
in
lret
ficoml
xorl
inc
mov
loopne
mov
xor
jno
fldt
jp
and
cmpl
xor
add
push
scas
mov
xlat
push
mov
push
and
fldt
adc
fildll
enter
fs
and
rolb
nop
mov
adc
jmp
mov
in
lods
mov
int
add
dec
xchg
push
cmpsb
aad
and
mov
or
daa
out
push
fdivr
pop
sub
adc
sub
mov
jae
mov
xchg
inc
popf
pop
subb
xchg
cltd
push
sub
adc
mov
pop
cmpsl
loopne
xor
icebp
mov
iret
pop
sbb
mov
outsb
test
pusha
inc
sub
dec
jg
rorb
stos
insb
adc
mov
movl
pushw
jae
pop
fdivs
cld
mulb
std
insl
in
jecxz
hlt
out
call
push
mov
in
fidivrs
adc
xchg
cli
or
pop
cmp
inc
sub
pop
arpl
decl
in
aas
fsubrl
lods
cmp
or
mov
rcl
cmp
repz
mov
fdivr
aad
xlat
push
adc
repnz
inc
roll
icebp
pop
or
push
enter
cmp
imul
mov
mov
jge
repz
into
cltd
xlat
adc
seto
jmp
fwait
test
mov
sub
pop
dec
xor
mov
jno
leave
dec
test
inc
mov
cwtl
ja
add
sahf
jb
clc
add
mov
jmp
pavgb
or
pusha
test
pop
aad
aad
aad
test
push
lret
adc
mov
pop
loope
in
movsl
stos
mov
jecxz
mov
inc
mov
sbbl
or
sub
xlat
daa
cmp
stos
cld
gs
pop
pop
pop
sub
push
push
dec
xor
dec
loope
mov
jns
ds
jge
pop
clc
sub
dec
adc
testb
notb
outsb
ret
call
adc
jge
out
pop
stc
sbb
addr16
out
notb
sbbl
sahf
ret
ss
andb
lods
sub
in
add
les
or
mov
mov
add
sbb
jnp,pn
dec
xchg
and
ljmp
movsl
dec
mov
mov
pop
jge
pop
aam
cmpsb
dec
sub
lods
icebp
rcll
mov
lock
jb
outsb
ficoml
loopne
fs
jmp
push
cmp
xchg
lcall
push
adc
cmp
test
lock
in
cmc
lret
cld
adc
sub
fcoms
fs
rorl
xchg
scas
jmp
mov
jmp
idivl
inc
jne
js
jg
xorl
mov
mov
mov
cmp
and
jbe
fnstenv
pop
xchg
testb
call
push
mov
cmpsl
enter
int3
push
xlat
cmpsb
popf
ljmp
das
or
incb
aam
jae
push
mov
js
clc
arpl
in
pop
in
enter
dec
adc
jmp
aas
stos
dec
push
out
sub
repz
daa
aad
xchg
cmpsl
call
std
movq
neg
pop
fadds
outsl
fdivr
cs
not
shlb
mov
sub
stos
mov
mov
jo
mov
cmp
push
pop
sbb
cmp
sub
cwtl
fcmovnu
mov
sbb
subl
add
stos
repnz
in
add
in
stos
popa
push
mulps
stc
add
mov
ljmp
inc
test
adc
bound
dec
sbb
jmp
ret
xchg
dec
pushf
dec
mov
inc
xor
movsl
js
push
sahf
xlat
stc
stos
or
incl
cmp
test
mov
icebp
popf
and
mov
or
ljmp
mov
push
cmp
fisubrl
sbb
pushl
in
call
adc
shlb
fimuls
dec
scas
sbb
and
outsb
insl
orl
lock
sbb
iret
ret
in
jmp
lock
test
sbb
pop
hlt
scas
jge
mov
dec
fnstcw
or
inc
fs
mov
sbb
stos
in
adc
jecxz
stc
andb
sub
fs
sahf
popa
enter
lret
dec
push
jp
rcll
lret
dec
pushf
xor
push
mov
xor
popa
xorl
out
roll
inc
mov
daa
adc
cmpsb
sub
insl
sub
inc
rcll
jns
addr16
cmp
imul
dec
cwtl
repz
xchg
insl
aas
mov
or
bound
xor
movl
or
xchg
sub
cmp
adc
sti
lret
add
pop
and
xchg
fsub
xchg
push
leave
inc
push
or
popf
mov
inc
sbb
jnp
shr
jne
fs
or
stos
push
ss
adc
xchg
xorl
notb
out
es
imul
mov
aam
lods
scas
mov
push
xchg
sub
dec
sub
jnp
push
jne
or
cmp
mov
add
mov
sub
push
xchg
out
push
mov
bound
adc
add
ja
pop
leave
push
lods
push
mov
dec
insl
aaa
cmp
push
xchg
enter
inc
mov
or
incl
daa
es
fs
dec
movsl
cld
pop
jb
bound
xor
jecxz
add
stos
stos
push
mov
insl
lock
push
fldcw
call
xchg
movsl
push
or
jl
and
add
setae
mov
mov
imul
outsb
pop
push
sbb
cwtl
dec
lcall
mov
notb
out
adc
xchg
jno
jle
push
int3
nop
es
les
push
lods
add
cmpb
and
mov
push
data16
loopne
inc
dec
jae
pop
in
out
test
and
jae
ja
inc
pop
lcall
lret
jbe
inc
sbb
and
push
setnp
cld
mov
adc
iret
push
out
sbb
sub
push
inc
mov
xchg
dec
add
in
mov
ficoms
cmp
mov
xchg
test
cmp
and
add
shll
stc
adc
xchg
int3
test
jmp
pop
adc
inc
test
jge
pop
and
ss
sub
pmulhuw
mov
ja
mov
loopne
or
andl
sub
out
jo
push
sub
outsl
std
xor
mov
movsb
jno
lret
inc
pop
notb
test
cmp
xchg
mov
sbb
fs
ss
mov
xor
fadd
cmp
popa
jae
aas
or
mov
leave
sbb
mov
ffreep
jmp
cmpsb
outsb
push
fiadds
jl
adc
pop
cmp
incb
push
out
or
jae
clc
stos
int3
sub
mov
cmp
mov
fcoms
gs
call
mov
add
jb
add
insb
push
std
into
pop
gs
int
mov
std
xchg
xchg
adcb
movsl
inc
add
xchg
out
dec
jg
out
add
rcr
fdivr
leave
ss
sbb
mov
out
fcomp
add
in
add
add
jbe
mov
std
jmp
test
fdivrs
dec
mov
loopne
push
jle
xchg
sbb
pop
adc
push
and
and
sbb
lods
mov
mov
stos
jecxz
jmp
fidivrl
xor
or
mov
mov
xchg
and
int3
enter
rclb
push
fdivrs
pop
or
pushf
test
je
pop
test
or
in
cltd
xchg
cltd
sub
nop
mov
cmp
jns
je
pop
rolb
push
dec
cmp
and
sbb
invd
iret
subl
hlt
adc
cmp
in
repnz
push
mov
sbb
jae
icebp
add
icebp
jnp
mov
push
xchg
pop
mov
jmp
push
pop
and
mov
rolb
lret
test
loop
call
fidivl
dec
js
in
ret
or
clc
test
mov
popf
leave
xor
adc
lret
sbb
mov
add
cmp
mov
cltd
in
pop
mov
xchg
jle
fsts
dec
xor
outsb
mov
sub
loope
sar
mov
xor
xchg
sub
xchg
lret
into
ljmp
adc
ret
sbb
inc
popf
add
add
cmp
sub
insb
sahf
jge
out
sahf
sub
mov
lods
xor
jmp
outsl
in
adc
mov
mov
lahf
fstpl
adc
mov
pusha
fs
jle
fnstenv
sub
inc
std
icebp
shrb
fmull
dec
or
fwait
test
call
push
sub
jle
clc
inc
dec
and
cwtl
pop
mov
pop
insl
fs
mov
sub
push
jecxz
mov
nop
mov
ja
adc
pop
ss
subl
dec
int
sub
jle
aam
dec
and
je
stos
jbe,pn
sbb
pop
jne
mov
push
movsb
iret
inc
adc
xchg
pop
in
xchg
fidivrl
hlt
push
in
jmp
fistps
push
ja
bnd
popf
jle
fnstenv
sbb
mov
mov
adcl
call
aaa
addr16
call
scas
cmp
or
popa
adc
test
sbb
xchg
adc
test
jl
out
mov
sub
xchg
mov
out
push
xchg
dec
jl
dec
mov
or
adc
sub
sub
mov
imul
mov
push
jns
push
js
aas
imulb
push
lods
fdivs
add
stc
imul
mov
pop
mov
inc
je
in
repz
push
mul
movsl
xor
mov
xchg
ljmp
andb
ret
inc
push
stos
aam
sub
rolb
pop
int3
jge
pop
enter
adc
xchg
or
aam
enter
inc
ror
clc
xlat
dec
mov
into
shlb
lahf
mov
cmpl
es
pusha
nop
push
rcrl
jp
lea
xchg
enter
lret
lcall
outsl
cwtl
mov
popa
lahf
jns
pusha
jns
arpl
sbb
push
pop
pop
add
mov
lcall
imul
inc
dec
and
stos
xchg
cmpsb
in
push
inc
adc
jne
bound
rcll
inc
outsb
pop
and
push
dec
jmp
pusha
fs
jmp
push
mov
adc
or
dec
lods
xor
mov
stos
shl
xor
adc
les
je
mov
xchg
jb
loopne
enter
cltd
pop
or
imul
imul
or
mov
add
pusha
xchg
cmpsl
inc
pop
ljmp
lret
mov
scas
ss
enter
fcomip
out
adcl
daa
test
loopne
cwtl
cli
or
push
push
in
jbe
dec
into
pop
or
gs
fsubrl
xlat
mul
jge
mov
cwtl
adc
ss
push
addb
in
xchg
cwtl
std
adc
and
out
dec
pusha
or
jg
push
aam
mov
outsl
lock
mov
jne
xchg
push
mov
mov
les
ficoms
nopl
dec
clc
push
push
mov
and
das
adc
les
rcrl
pop
mov
xchg
rcrb
adc
pop
dec
into
jnp
hlt
cmp
xchg
iret
idivl
adc
fsubrs
jg
xchg
inc
int3
sbbb
pop
mov
stos
inc
push
out
imul
jecxz
aad
cmp
outsb
js
cmpsb
stos
out
xchg
cli
inc
imul
cmp
fucomp
inc
rcll
cmp
movsb
or
xlat
stos
pop
mov
lds
rcll
mov
xchg
loope
xchg
pop
ljmp
and
idivb
and
test
cmpl
add
loope
stc
or
in
sbb
xor
dec
outsl
pop
adc
js
push
outsb
fadds
push
jg
clc
mov
aas
fs
cltd
arpl
loopne
in
mov
xchg
aaa
mov
mov
cwtl
dec
xor
mov
ljmp
aas
mov
std
out
shrb
out
cwtl
inc
mov
das
scas
pop
or
add
adc
xchg
xor
je
pop
outsl
or
push
hlt
imul
cltd
cld
mov
adc
outsl
xchg
pop
je
mov
fisttpl
loop
add
push
mov
in
mov
sub
mov
mov
adc
xor
sbb
test
scas
adc
in
out
pop
in
test
sub
push
sti
adc
imul
cmp
mov
aaa
adc
in
pusha
and
jle
fnstsw
xor
push
pop
js
ljmp
pop
adc
dec
sub
and
fs
cmp
movsl
add
lock
sub
or
mov
je
sub
inc
push
shr
sub
sub
ror
sbb
icebp
xor
movsb
inc
push
xchg
xchg
arpl
in
pusha
ret
adc
popa
cmpb
js
mov
cmpsl
imul
sbb
pop
pop
xchg
fsub
dec
sbb
inc
jne
cmpsl
in
scas
outsb
mov
nop
xchg
js
adc
adc
add
lret
push
lock
imul
aam
inc
cli
add
xor
repz
fadds
in
daa
push
inc
sbb
pop
aas
fucomp
cmpsl
jg
jbe
dec
inc
dec
scas
out
xor
rcrl
jae
push
inc
ret
jp
call
hlt
pop
jl
daa
cmp
cmp
xor
pop
jl
adc
out
inc
xlat
pop
push
addr16
ret
cmp
or
jnp
inc
xchg
ret
xor
orb
xor
and
or
popf
fdivl
sbb
fcoml
or
push
inc
imulb
xor
fists
jo
aas
jg
adc
enter
mov
ret
imul
rcll
add
push
and
mov
sahf
inc
add
popf
icebp
fstpl
jne
test
ret
dec
adc
cltd
out
ret
adc
inc
lret
inc
xchg
or
push
push
ss
and
push
aam
adc
punpcklbw
xchg
xchg
call
jmp
fcoms
inc
jbe
movsb
loope,pn
stos
aaa
ss
mov
inc
jl
xchg
clc
mov
popf
mov
lahf
mov
adc
xchg
xchg
sahf
ret
subl
xchg
ficoml
es
arpl
pop
or
cmpsl
push
shrb
or
push
repnz
sarb
ret
or
in
and
out
jbe
rorb
pop
push
mov
addr16
out
push
inc
adc
mov
mov
push
pop
or
or
xchg
adc
dec
outsl
in
jne
sub
gs
cmp
or
nop
jmp
es
out
imul
pop
mov
inc
rorl
rorl
adc
in
push
sub
fnstsw
lods
mov
push
jp
mov
shr
sbb
jp
jbe
adc
add
lds
ss
stos
xchg
xchg
xor
inc
fidivs
fisttpll
jbe
loopne
push
mov
cli
fstpt
ljmp
mov
xchg
fisubrs
fdivrl
adc
mov
mov
scas
aas
in
xchg
and
lea
push
cmp
dec
mov
mov
imul
cmp
rclb
je
pop
mov
imul
inc
dec
pop
dec
outsb
int
cld
mov
or
mov
out
push
inc
cwtl
cli
cltd
mov
fidivs
imul
enter
rclb
mov
add
mov
cmp
cld
mov
clc
mov
rorl
adc
out
xchg
stos
adc
or
cltd
mov
data16
mov
mov
stc
fnstcw
jmp
pop
xor
js
rorl
pop
add
iret
es
test
or
mov
cmc
ja
fucom
xor
dec
nop
fisubs
lahf
out
mov
mov
pop
push
rolb
cmp
arpl
out
rcrb
pusha
sahf
mov
sbb
push
addb
lcall
inc
mov
lfs
dec
mov
xor
xchg
cmc
iret
outsb
jmp
sbb
in
cwtl
mov
inc
call
push
sub
mov
mov
pop
std
adc
inc
bound
pop
jl
test
fmul
cmp
out
sti
pop
icebp
inc
lcall
xchg
stos
pop
pop
dec
insb
adc
jo
mov
in
cmp
adc
ds
aad
out
jp
xchg
fld1
cmp
pop
stos
jae
ret
insb
std
jbe
dec
adc
popa
or
faddl
sub
fs
cmpsb
push
push
iret
repz
mov
ss
and
in
cmp
pop
mov
xchg
mov
ret
sysenter
adcb
sahf
cltd
pop
adc
mov
sbb
add
adc
mov
ljmp
push
jno
enter
xorl
xor
jno
icebp
push
lcall
jnp
jae
and
xchg
cld
push
xchg
cli
adc
sub
mov
movsb
mul
mov
mov
lock
sub
sti
into
dec
xor
aas
lret
fsubrs
dec
outsl
push
xor
cltd
pop
je
push
adc
xor
cmpsb
push
mov
sub
push
out
cs
lods
aaa
mov
push
imul
call
ja
adc
loope
jae
xchg
xchg
das
clc
or
add
xor
push
int
mov
repz
loopne
lea
movsl
aas
cmpsb
outsb
add
push
sti
xchg
jl
lret
fidivs
push
lret
notb
jo
adc
jnp
xchg
ficompl
out
lahf
mov
pop
and
dec
imul
cmp
sbb
out
call
test
inc
mov
and
out
sub
arpl
aam
jns
sub
rorb
les
imull
xor
jnp
ljmp
out
and
shll
mov
sar
and
stc
add
out
sti
sbb
pop
enter
push
dec
rcr
inc
or
pusha
call
inc
adc
mov
inc
sbb
lea
int3
cmpsl
adc
or
imulb
xor
imul
iret
fcomps
out
ret
jb
les
xlat
lret
call
loope
jl
in
inc
inc
test
sub
aas
test
out
xor
push
add
xchg
sub
cli
sti
aam
rorb
sbb
fimull
cmp
pslld
sahf
sub
cmp
jl
xor
clc
mov
sub
or
sub
add
rcrl
repz
add
test
sbb
jle
movsl
shrb
shrl
cld
test
jmp
xlat
dec
mulb
pushf
cmp
mov
sub
or
dec
mov
pop
and
movsb
mov
adc
test
mov
mov
rorl
mov
jmp
or
dec
xor
cwtl
fwait
sub
insl
fisubl
ret
add
add
adc
lock
push
sbb
aas
pop
jae
or
xchg
fwait
or
in
cmp
push
test
pop
flds
mov
pusha
sbb
and
mov
bound
adc
adc
rcrl
mov
ss
jmp
sub
addl
fldl
mov
cli
punpcklwd
pushf
aas
cmc
test
mov
outsb
les
lds
mov
sub
xchg
push
push
xchg
in
bound
int3
aaa
xchg
movsl
jg
push
dec
adc
ja
fcompl
les
adc
enter
inc
mov
cs
loope
mov
xchg
xor
mov
nop
fwait
lods
stc
adc
fbstp
dec
sub
mov
in
xor
xchg
xchg
inc
adc
aad
sbb
xchg
mov
or
in
imul
std
arpl
addr16
pop
aad
ss
inc
adc
bound
jg
hlt
dec
std
shlb
std
adc
mov
sub
xchg
mov
jg
jbe
mov
call
int3
xor
sbb
jl
outsl
insl
and
xor
mov
push
loope
ss
sub
popa
gs
in
pop
jecxz
xor
lods
add
repnz
mov
std
sbb
int3
out
dec
jbe
in
lcall
jo
subb
pop
movsl
sub
outsb
xor
push
test
out
adc
icebp
popa
sarl
cmp
hlt
outsl
addl
aad
push
jbe
out
fsubrl
dec
lock
pop
aad
icebp
xor
or
mov
ds
pop
or
cwtl
in
js
or
adc
pop
mov
xchg
cs
scas
std
roll
add
push
jl
and
js
into
fbld
jb
ds
out
push
rcll
test
xor
mov
push
jns
mov
jg
jnp
jmp
jle
mov
push
push
push
pop
std
out
cmpsl
cmp
inc
sub
push
cld
fiaddl
call
xor
ljmp
lcall
or
je
call
and
test
mov
lock
ret
mov
xor
movsb
sbb
mov
sahf
jbe
imul
in
int3
rdmsr
test
test
mov
mov
pop
mov
push
data16
jmp
push
mov
cltd
mov
cmpsl
shl
xchg
pop
push
dec
shll
sbb
mov
lea
jns
mov
cltd
pop
fisubrs
push
stos
adc
sub
scas
rcrb
add
xor
pop
sbbl
ret
add
cld
sbb
ja
in
pop
mov
divl
jg
adc
mov
jmp
sub
ja
lret
jae
or
sar
mov
repnz
call
cld
negl
and
mov
sbb
icebp
jo
cmp
mov
xor
lods
pop
and
xchg
dec
jge
ficompl
and
pushf
dec
stc
pop
jnp
dec
stos
icebp
test
jmp
imul
popf
insl
rcrb
push
pop
clc
pop
push
leave
mov
mov
stos
xor
or
push
sub
shll
in
rclb
push
pop
pop
xor
mov
push
mov
icebp
loope
mov
fwait
sub
sbb
out
sub
mov
sub
mov
push
fs
sbb
mov
dec
lock
jnp
jge
into
imul
cmp
dec
aas
mov
and
loop
xor
add
loopne
inc
dec
inc
mov
subb
jno
push
aad
sbb
and
mov
pushf
orb
gs
iret
daa
ds
aad
imul
addl
andl
dec
out
cltd
popa
or
mov
scas
add
sub
movsl
and
icebp
aaa
outsb
lds
loop
sbb
dec
rorb
sbb
add
int3
in
adc
fmulp
fcmove
xchg
mov
stc
dec
jecxz
adc
mov
sbb
xchg
pop
pop
pop
push
xchg
push
fisttpll
push
adc
mov
int
outsb
fidivl
lcall
push
inc
xchg
xchg
pop
ja
mov
push
clc
sbb
repnz
pop
outsl
push
mov
enter
stc
jmp
push
inc
cmove
jg
sbb
shl
sarb
or
inc
shr
pusha
lods
push
and
mov
rolb
push
jmp
scas
iret
or
adc
sub
call
jp
xor
add
jae
shr
lods
stos
adc
xor
inc
scas
or
jmp
or
ret
jno
dec
std
jnp
icebp
sub
lret
cmp
imul
sti
addr16
test
repnz
out
pop
rolb
pushf
rclb
ja
push
add
je
insb
or
mov
add
test
lret
insl
push
and
xlat
adc
push
xchg
xchg
out
in
mov
adc
cmpb
gs
aas
adc
add
imul
cmpsl
sbb
or
cmp
jg
mov
ficoms
push
stos
inc
push
lcall
out
adc
and
mov
out
mov
repnz
scas
call
in
cmp
mov
sub
jp
gs
dec
js
cli
jo
mov
jecxz
shrl
fwait
xor
jae
and
movsb
mov
outsb
inc
push
lock
dec
mov
inc
pop
ljmp
mov
iret
fidivs
sti
dec
dec
out
jb
jb
addl
lock
add
movsb
cmp
pushf
ret
dec
cs
pop
bound
inc
fwait
mov
push
and
mov
push
testl
adc
or
mov
hlt
movsl
mov
add
jb
mov
nop
or
cmp
add
push
fmulp
rcl
js
dec
das
in
insb
push
adc
movsb
adc
adc
pop
adc
mov
clc
sti
push
out
std
push
mov
xor
pop
inc
add
dec
and
mov
mov
add
cmp
ljmp
loopne
fsubp
cmc
cmp
neg
push
pop
or
mov
inc
outsl
xor
push
push
sub
dec
dec
xor
in
mov
add
xor
jns
scas
cmpsb
neg
into
xchg
icebp
mov
in
mov
es
addb
push
and
xchg
cmp
pop
adc
jmp
xchg
mov
add
push
lock
scas
mov
push
mov
inc
in
aaa
xchg
call
push
mov
daa
test
daa
or
mov
mov
outsb
jbe
and
sbb
mov
mov
arpl
push
sub
sbb
xchg
adc
shlb
xchg
or
or
jl
stc
push
lods
cmp
or
inc
loopne
mov
mov
jo
jg
mov
lret
addr16
push
inc
pop
out
xor
dec
out
test
mov
jo
add
mov
push
lods
jb
xor
scas
repz
inc
inc
cmp
test
in
add
call
push
insb
or
mull
inc
pop
ds
test
sbbb
je
ss
adc
imul
mov
mov
xor
dec
pop
int3
cmp
jno
add
and
int
in
sti
cmc
mov
mov
call
test
cli
xor
icebp
divl
jmp
jmp
xor
dec
rcrb
jbe
imul
mov
sbb
lods
cmpsb
test
stos
lds
hlt
push
fs
lret
sahf
js
stos
ret
pop
addl
jno
test
sub
mov
daa
shrl
lret
je
int3
aas
add
and
jno
fstps
inc
push
mov
sbb
pushf
mov
ror
icebp
pop
cmp
repnz
fcoml
xchg
lods
sub
xor
aad
out
repz
roll
mov
pop
jl
je
scas
or
dec
fcomi
scas
lods
ds
sti
add
push
loope
sbb
inc
mov
popw
ds
int3
add
ds
sub
sub
cmp
xor
sbb
push
mov
cmp
mov
cwtl
push
ficomps
aad
push
push
dec
ljmp
imul
push
push
sub
int3
cmp
and
cmp
xchg
cmpl
js
jo
mov
push
subl
mov
jne
scas
imul
nop
clc
hlt
fstl
cltd
xlat
push
out
push
mov
test
rcr
push
icebp
mov
mov
decb
adc
push
sbb
aad
cmpb
xor
in
ret
shlb
iret
fnstenv
jl
adc
dec
mov
pop
nop
mov
ret
pop
aas
cmp
adc
es
cmp
or
sub
dec
sub
adc
loopne
lods
push
mov
inc
stc
lds
out
mov
insl
push
das
jl
fidivl
and
or
pushf
repnz
sub
loop
je
adc
aas
xchg
push
fcmovb
das
sbb
aaa
aaa
seto
mov
mov
mov
or
pop
sbb
sbb
clc
nop
fs
shl
fistps
stc
xlat
outsb
cs
mov
push
out
jb,pt
outsl
sub
roll
mov
sub
pop
mov
push
inc
or
dec
push
lahf
xchg
fwait
test
fdivs
hlt
es
fiaddl
mov
sbb
mov
mov
mov
es
fwait
cmpl
mull
out
pop
mov
jnp
out
jno
xor
add
test
mov
movl
and
add
adc
mov
pop
mov
test
aaa
int
cltd
fwait
add
sti
jnp
push
icebp
xchg
mov
dec
mov
sbb
xor
repz
ud1
dec
scas
std
scas
dec
mov
pop
loopne
jl
lods
sub
scas
push
out
pop
inc
mov
mov
and
enter
inc
mov
popf
lret
inc
adc
mov
jp
fsub
imul
aam
lds
jmp
jne
imul
mov
add
cmovs
aam
pop
lods
repz
sahf
pop
adc
and
sub
ja
cmp
jo
mov
cmp
or
cmp
out
subl
icebp
loopne
sbb
push
jle
and
ror
add
jbe
add
cld
loope
or
jnp
sarl
and
int3
push
rolb
jo
in
or
sbb
clc
negb
clc
out
cltd
jecxz
sbb
testb
nop
imul
and
lcall
cmp
lret
fimuls
aaa
sub
in
xor
pop
jo
repz
adc
and
push
mov
int
fsubs
sahf
fst
and
mov
jns
aad
inc
xor
push
enter
cmp
fnstsw
outsb
add
loop
aas
das
xlat
cmc
ffree
pusha
mov
mov
jae,pn
cmp
dec
gs
pop
and
cmp
fstpl
push
in
test
xchg
int3
cmp
mov
inc
sub
xchg
adc
mov
mov
push
icebp
push
push
ja
repz
aas
sub
push
pop
mov
fists
call
xlat
aaa
leave
mov
dec
mov
pop
push
xchg
dec
sub
into
pop
jg
daa
movsl
inc
mov
cmp
movsl
xchg
jo
adc
mov
cwtl
sbb
arpl
pop
jmp
sbb
cld
or
mov
xchg
jne
or
cltd
cli
mov
dec
mov
mov
pop
ret
flds
adc
mov
fs
insb
cmp
test
mov
scas
jl
lret
adc
loop
push
push
bnd
dec
shlb
xchg
jle
btr
mov
or
in
sti
mov
repz
fs
insl
adc
sahf
icebp
cmp
pop
jl
cmc
adc
movntq
push
fs
or
push
pop
fs
imul
in
dec
leave
cs
in
bound
mov
ret
jno
test
adc
fistl
cli
fmul
inc
inc
orb
sbb
pop
ret
xor
out
cmp
loop
std
test
lods
jbe
xor
aas
dec
jge
xor
stc
push
push
icebp
xchg
fdivs
cli
fstpt
movsl
sarb
shr
xchg
adc
sarl
push
jo
push
cmp
jno
inc
inc
add
lahf
sbb
int3
jno
mov
pop
cmp
mov
mov
jecxz
mov
cltd
clc
pop
adc
std
jno
aad
add
fstps
iret
jmp
leave
les
stc
jae
push
idivb
mov
pop
stos
in
xchg
imul
inc
fstpl
dec
fsubs
sti
inc
mov
jo
jmp
sbb
mov
adc
dec
xchg
aad
sub
jnp
or
push
fnstcw
outsl
adc
xor
xchg
and
in
fsubrl
pop
movsl
xor
test
negl
jno
test
into
std
sbb
jl
pushf
imul
sbb
sub
jne
or
push
xor
inc
hlt
iret
in
icebp
cmc
pop
jbe
jbe
jp
inc
scas
xor
adc
mov
les
testb
adc
repnz
push
out
inc
cmc
pop
mov
or
popf
xlat
lods
inc
lcall
sbb
dec
aas
call
movsl
jge
idivb
jbe
in
mov
lods
lods
fsubrs
jns
in
adcl
xor
pop
jp
xor
mov
or
mov
xchg
mov
ja
ds
dec
adc
mov
xchg
fs
ror
pop
out
xchg
outsb
pop
sub
pop
sahf
mov
jns
jo
push
mov
leave
sub
stos
inc
inc
mov
xchg
jp
xchg
and
out
sahf
push
push
mov
je
cmp
rorl
stc
pop
push
xor
jo
xchg
inc
xchg
inc
inc
jge
mov
lahf
add
imul
inc
push
iret
insl
mov
lods
jl
popf
push
movsl
jne
roll
cmp
ret
iret
nop
test
xchg
in
ja
outsb
icebp
adc
loope
fstps
std
rorl
cmc
pop
pop
mov
not
inc
mov
lret
push
iret
jb
add
dec
out
fidivl
adc
xor
nop
outsl
mov
sahf
out
mov
cmp
jmp
fsts
sub
mov
loope
mov
outsl
pop
sbb
lea
test
push
fdivr
clc
push
test
cmp
xchg
inc
push
adc
rorb
pop
scas
rcr
test
or
jg
mov
mov
divl
pop
lret
sahf
in
xchg
add
inc
in
movsb
xchg
loope
adc
fistpl
jmp
rorb
sbb
fisttpl
je
jae
pop
ret
mov
cmp
cld
bound
mov
jae
mov
insb
cmp
jae
fildll
push
insb
jmp
adc
mov
mov
lock
push
hlt
ret
addb
sbb
mov
push
xor
mov
xchg
mov
adc
ss
sarl
mov
sbb
adc
and
xchg
mov
xchg
popa
mov
sbb
daa
lods
mov
int
jl
mov
push
mov
or
cli
jnp
mov
or
push
or
lret
inc
aam
fcoms
stos
pusha
cmpsb
std
push
adc
inc
je
aad
xchg
mov
mov
lret
pop
mov
pop
fsub
inc
out
sti
pop
mov
xlat
jno
dec
dec
pop
cmpsl
cli
test
cmp
lea
or
nop
mov
mov
mov
in
jb
cs
xchg
out
ja
adc
or
xchg
adc
and
xchg
adc
movsb
jb
dec
int3
sub
test
ret
push
cmp
out
int3
cmc
call
mov
pop
call
jecxz
sar
jp
imull
xchg
adc
inc
jae
scas
popf
icebp
cmpsl
cmp
cmp
cmp
inc
pop
sub
fwait
cmpsb
stos
add
push
scas
xor
sbb
mov
insb
mov
push
hlt
nop
test
rol
movsb
mov
ret
rolb
mov
pop
sub
adc
push
mov
mov
les
lds
pusha
xchg
mov
cld
push
mov
stos
cli
jmp
xchg
sbb
pop
addl
pop
dec
sahf
and
ss
xor
cmp
les
imul
or
icebp
or
subl
popa
lds
ds
sbb
push
adc
dec
in
loopne
inc
aas
and
popa
lds
jno
into
comiss
sbbb
mov
mov
inc
or
push
out
push
push
imul
mov
in
iret
lahf
adc
push
jae
jle
imul
fiaddl
lock
inc
repnz
push
out
into
lea
lods
xchg
push
cld
xchg
dec
sti
mov
mov
int3
out
add
jnp
add
loope
jns
or
adc
insl
jmp
loop
cltd
cmp
out
aas
push
test
outsb
pusha
add
daa
ret
sbb
inc
dec
dec
sbb
mov
loope
cwtl
dec
pushf
sbb
sub
push
lock
pop
push
pop
sarl
gs
sti
clc
xchg
arpl
sub
cwtl
int
push
mov
jns
fwait
xchg
xor
mov
fidivs
mov
and
in
outsl
js
scas
xor
inc
mov
mov
jg,pn
dec
jae
or
sbb
shll
or
ret
popf
pop
mov
in
lock
fadds
sti
mov
and
jne
pop
mov
cmp
inc
ret
add
fisubl
loope,pn
adc
lock
out
data16
and
jbe
daa
xchg
and
pop
dec
popl
xor
lock
xor
push
jns
mov
int3
dec
andb
mov
cmpsb
and
cmp
in
push
mov
aaa
xor
lock
ret
and
mov
lock
nop
add
popf
ret
add
pop
push
push
daa
pop
es
dec
mov
bound
mov
out
int
in
and
pop
out
outsb
xchg
sub
into
cltd
xor
push
sbb
add
jnp
pop
in
leave
sub
push
shll
pusha
and
loop
ret
and
xchg
scas
cli
fstl
sahf
enter
pop
or
data16
subb
out
addr16
mov
jns
sub
outsb
adc
ss
out
daa
sbb
adc
jo
mov
push
movsb
stos
or
ffreep
mov
in
pop
pop
jbe
icebp
xchg
adcb
dec
or
jne
enter
xor
push
xchg
outsb
mov
push
andl
adc
push
ds
push
cmp
imul
and
jo
pop
scas
insb
inc
pop
or
sbb
loop
pop
xor
pushf
js
mov
pop
and
cmp
jmp
lahf
cmc
ror
mov
ljmp
clc
test
pop
add
or
outsl
fs
icebp
xchg
fs
xchg
aas
sarl
mov
sbb
jge
mov
in
mov
mov
insb
bound
cmp
jae
add
nopl
sbb
sbb
mov
out
js
and
xchg
aaa
cmp
jne
cmp
rcll
inc
dec
fidivl
mov
cmp
sub
push
gs
repz
push
out
pop
ljmp
lcall
arpl
mov
lret
test
hlt
push
in
aas
loope
adc
mov
dec
sub
cmc
out
popa
call
fisttpll
pop
rorb
mov
xor
mov
xor
xchg
movsl
scas
push
std
gs
jl
faddl
xor
mov
lret
xor
mulb
pop
scas
clc
fsubrl
bound
jb
jl
xchg
adc
insl
push
add
in
sub
lret
lea
fistpll
shlb
mov
mov
sub
mov
cmp
adc
sbb
add
and
jnp
or
mov
pushf
cmp
pop
xchg
xorb
in
fimuls
inc
inc
sbb
dec
add
aam
ror
ret
sbb
pop
cmpsb
pushl
jmp
jnp
pop
add
inc
push
dec
fcmovb
clc
xchg
loop
sub
sbb
das
jno
mov
dec
mov
shrd
sub
fldcw
jg
nop
fcom
push
mov
sub
push
adc
jae
mov
dec
inc
call
adc
aad
lret
and
sub
jecxz
xor
mov
lcall
int
jle
lock
sub
cmpsl
rorb
daa
pushf
inc
sarb
adc
movsl
das
in
xchg
mov
fs
fdivr
pop
movsl
or
sbb
pop
mov
jne
pop
gs
or
stos
sbb
outsl
and
inc
fildl
rolb
cmpb
sub
test
push
je
mov
or
inc
outsl
imul
mov
adc
mov
push
mov
cli
mov
add
repnz
je
adc
ja
repnz
int3
out
jnp
popa
loopne
loope
inc
ret
arpl
outsl
kmovb
mov
adc
push
mov
in
push
stos
inc
adc
inc
mov
arpl
push
das
dec
pop
hlt
in
out
inc
jecxz
pushf
addr16
je
pop
lods
iret
cli
aaa
es
mov
out
aad
adc
and
jmp
out
cmp
adc
cwtl
stos
call
imul
insb
sub
leave
adc
insl
xchg
scas
fdivl
xor
mov
jnp
push
mov
pop
in
push
or
test
and
push
loope
outsb
add
xchg
adc
xor
mov
xor
xchg
dec
lods
ret
out
punpckldq
mov
call
repnz
sti
mov
mov
adc
or
sahf
xchg
add
test
fistl
and
sub
and
popf
in
dec
jbe
xor
es
shrb
jne
addl
mov
lea
in
loopne
adc
cmp
cmpsb
inc
call
lcall
pop
pop
ljmp
mov
mov
sarb
mov
imul
sbb
jle
outsb
mov
sbbb
mov
out
pop
and
aad
lock
shll
jno
mov
push
mov
xchg
cmpsb
test
xor
outsb
mov
push
rcl
push
loope
je
lock
push
dec
shlb
out
jg
roll
jb
xor
repz
loope
mov
outsb
pushf
repnz
fs
mov
repz
mov
mov
fimull
and
xor
pop
js
mov
in
lods
pop
xchg
in
add
mov
out
mull
sub
inc
fwait
inc
add
jbe
fistps
ret
xor
fs
je
shll
xor
frstor
in
jne
xchg
xor
jmp
xchg
cmp
dec
stos
ds
push
cltd
adc
shrb
enter
shl
adc
mov
xchg
scas
jae
aad
enter
or
mov
je
in
adc
jns
stos
mov
dec
or
xor
or
mov
jae
lods
cwtl
add
sti
sbb
mov
ret
je
lret
mov
xchg
push
sub
shlb
mov
mov
leave
sub
pop
xor
xor
fidivrs
push
scas
push
pop
aas
mov
pop
in
and
jno
fcomip
jl
jae
rcrb
mov
in
in
cmp
pushf
data16
decl
inc
xor
popa
call
sbb
aam
push
dec
arpl
jo
cmp
mov
mov
insb
sbb
pop
in
rclb
stos
repz
mov
ljmp
sbb
aaa
or
test
adc
inc
pop
outsl
xchg
mov
in
dec
shll
jle
loope
lcall
xor
mulb
add
lret
mov
push
ljmp
mov
repz
pop
jnp
sub
mov
cmpl
inc
jbe
mov
in
pop
jnp
mov
pop
push
add
or
xchg
pop
rcrl
mov
and
lret
add
and
daa
int3
lea
lret
out
scas
cmc
push
jge
js
ja
mov
icebp
xchg
push
repz
ljmp
je
lods
sbb
test
xor
in
xchg
std
pop
test
jo
adcl
notb
jno
and
fimull
dec
out
pop
enter
test
push
imul
sbb
lret
xor
cmpb
sbb
test
orb
xchg
jno
sub
pop
sub
xchg
out
jmp
xor
xchg
into
jmp
movsl
mov
shll
mov
pop
sub
and
lods
xor
inc
xchg
push
push
push
lcall
loop
ror
inc
ljmp
pop
xchg
int3
repz
jo
push
rolb
mov
cwtl
in
insb
dec
pop
ljmp
aaa
sbb
inc
roll
mov
or
add
push
jo
pop
lock
xchg
fsts
jno
sbb
inc
in
movsb
mov
sbb
dec
and
hlt
mov
sbb
cmc
jle
lods
in
std
mov
aad
jle
aaa
lock
scas
mov
sbb
dec
repnz
and
sub
fisubrl
pushw
arpl
xor
rcl
sbb
xor
loope
scas
sub
fcoml
push
dec
int3
sub
data16
popf
int3
int
sub
sub
aad
data16
adc
and
and
es
mov
or
push
and
jbe
les
shll
out
cmp
adc
in
xor
mov
aam
adc
push
mov
lret
test
push
dec
push
sub
push
outsl
inc
ret
push
int
jo
mov
pop
push
inc
mov
sub
in
push
pop
xchg
mov
inc
dec
cmp
dec
test
lods
sahf
pop
push
mov
fld
sbb
fsubrs
mov
stos
mov
dec
movsl
adcb
sarl
lock
pop
inc
dec
xchg
test
xor
jae
mov
inc
test
push
sub
xchg
pop
and
stos
iret
shl
jbe
rcr
outsl
in
mov
fs
add
cmp
adc
mov
enter
or
cltd
mov
repnz
add
or
or
std
dec
pop
popa
mov
sti
mov
ret
xchg
push
rolb
or
je
adc
xor
jl
sarb
int3
cmp
jmp
or
aas
test
lods
lcall
in
jnp
stos
pop
je
xchg
pop
and
xor
xor
cld
push
rcll
jb
roll
dec
inc
stos
or
lods
sub
sbb
stc
and
shrb
pop
ror
in
test
jge,pn
fisubs
into
shll
and
out
iret
lahf
das
call
icebp
jb
inc
daa
mov
inc
and
xor
push
lods
xor
cmpl
orl
repnz
mov
into
outsl
test
dec
or
add
notb
fisttpll
adc
mov
xchg
cmc
sahf
jb
icebp
jmp
aam
jle
and
out
mov
orb
rclb
xchg
test
adc
popa
aam
xchg
call
mov
push
push
std
or
dec
dec
sub
xchg
xchg
insl
pop
lcall
enter
je
out
divl
lods
cmp
sbb
jmp
es
or
outsb
mov
fsub
fnstcw
xrelease
fstp
push
std
aaa
inc
imul
or
imul
icebp
mov
call
outsl
ja
stos
adc
scas
stos
movntps
test
cmpl
mov
mov
jbe
cmp
pop
xor
loop
insb
mov
sub
andb
shrb
xchg
push
leave
dec
mov
pop
mov
cmc
inc
inc
xchg
pusha
lds
sbb
jbe
stos
fldl
lcall
push
insb
or
xor
dec
sarb
xchg
aaa
or
or
jg
fsubrs
lcall
mul
inc
push
fists
xchg
sub
push
leave
ljmp
decl
dec
inc
jo
and
xchg
inc
xchg
xor
dec
xor
add
xchg
lcall
int
jmp
aam
xor
lock
frstor
mull
xchg
push
ret
xchg
jle
dec
mov
dec
and
jmp
xor
xchg
and
adc
and
jb
mov
icebp
sub
mov
out
mov
dec
sbb
sub
jo
mov
push
lds
mov
lods
adc
lret
sbb
and
dec
jbe
cmp
jg
mov
out
in
sub
cwtl
fmulp
in
pop
mov
push
xchg
ljmp
fwait
in
cld
out
xor
dec
mov
adc
lock
mov
mov
xchg
mov
sub
sbb
mov
into
pop
sbb
xor
sbb
cmp
mov
lds
insl
sub
xor
icebp
cmpsb
je
sbb
pushf
lret
into
xlat
shll
rcr
push
jbe
lock
jbe
shlb
inc
fcomps
cmp
out
dec
xor
fdivr
lahf
sbb
stos
in
fcmovnb
inc
jp
jp
push
add
xor
test
sub
dec
push
lods
pop
rcrb
cmpsb
lahf
xchg
loop
or
cwtl
in
and
pushf
or
xchg
movsb
xchg
imul
dec
xor
call
sub
lahf
sti
imul
test
cld
aam
add
xchg
dec
or
push
cmpsb
add
int3
pop
adc
mov
push
and
loope
leave
in
push
loopne
mov
aad
mov
into
mov
push
add
cltd
xor
les
shlb
lret
pop
adcb
adc
dec
pop
pop
xchg
and
mov
sub
pop
adc
daa
cmc
inc
push
mov
fdivs
fmull
sub
in
mov
pop
iret
movsl
hlt
imul
fdivs
loope
inc
dec
addr16
mov
outsl
dec
imul
lock
repz
or
fwait
iret
insl
int3
lock
add
or
imul
mulb
fldcw
xor
into
jge
mov
insb
in
mov
outsl
das
sarb
jmp
in
and
dec
fs
decl
cmpsl
fsubrs
xor
punpcklbw
int
sub
lds
arpl
outsl
or
xor
decb
push
sub
outsb
push
xchg
and
push
pop
or
test
loope
inc
out
ds
adcl
pop
data16
and
rorb
xor
icebp
in
bound
enter
int3
ljmp
pop
sarl
cmp
js
xor
push
mov
mov
arpl
xorb
ss
cli
mov
lds
pop
mov
mov
push
pushf
cmc
lahf
jb
inc
push
imulb
insb
adc
cmp
mov
mov
nop
push
repz
cmp
insl
dec
adc
out
xchg
fs
rorl
cmp
and
jae
stos
and
sbb
fdivr
and
jge
add
out
mov
test
inc
shl
and
ret
into
insb
mov
in
aas
sbbl
add
stos
dec
add
ja
fucom
pop
cmp
add
dec
mov
or
test
subl
pushf
jmp
xchg
push
dec
add
sbb
mov
and
outsb
js
adc
push
pop
sbb
out
mov
sbb
aas
mov
dec
ret
in
push
dec
daa
mov
or
das
pusha
pop
popa
jno
add
jl
mov
pop
dec
nop
push
inc
jmp
cmp
imul
push
out
xchg
call
andb
lret
mov
xor
xchg
jo
data16
cwtl
mov
sti
adc
sub
cmpsb
adc
imul
push
fwait
cmp
adc
mov
mov
addr16
decl
xchg
sub
add
cmp
lds
jb
cltd
and
mov
mov
divl
insb
xlat
lea
xor
pop
push
inc
xchg
pop
scas
cmp
aad
adc
test
repz
repz
jl
sbb
out
pop
push
mov
out
dec
mov
mov
mov
mov
cmp
xlat
mov
imul
repz
and
ror
cmp
inc
lret
xchg
bound
pop
scas
push
pop
icebp
jle
lret
imul
loope
popf
jno
pop
arpl
pop
jno
hlt
filds
cmp
lea
cmc
adc
push
repnz
loope
jmp
add
lcall
add
das
addr16
xchg
shl
popa
clc
add
fucomip
into
xor
mov
and
mov
mov
mov
mov
or
push
and
enter
lret
sub
adc
pop
or
xorl
inc
fldcw
add
mov
neg
iret
ljmp
adc
shll
insl
inc
in
fmuls
pushf
push
mov
jb
and
xor
adc
adc
inc
dec
in
add
pop
hlt
arpl
aad
out
add
dec
cmp
and
lret
in
add
pop
sti
neg
jmp
in
push
arpl
jl
push
mov
or
pop
add
or
push
roll
jmp
repnz
popa
bound
stc
pop
cs
int
xor
sub
movsb
add
int
xchg
and
outsl
sub
std
ja
pop
gs
ret
xchg
xchg
into
dec
add
pop
sub
sub
pop
shlb
fldenv
inc
xor
sbb
adc
and
into
jb
hlt
pop
cltd
xchg
sbb
add
and
js
fcmovnbe
pop
mov
mov
out
push
jmp
add
jb
cmc
sbb
stos
adc
xchg
std
jge
hlt
add
add
fwait
sbb
lods
sbb
shrb
iret
mov
adc
cmp
cld
xchg
inc
decl
hlt
pop
insb
fdivs
pop
fisttpl
and
addb
fstps
shl
cmp
add
pop
ja
cld
adc
cmc
xlat
add
mov
fs
sti
das
cmp
movsb
cmp
mov
rcl
pop
add
mov
int
es
rcr
int3
scas
fsubs
stos
sbb
dec
test
mov
roll
mov
or
aam
bound
in
sahf
add
mov
std
fstpt
jnp
popf
adcl
add
fcoms
shlb
lahf
ss
mov
and
pop
push
sbb
hlt
lret
iret
sti
xor
add
enter
pop
mov
add
popf
std
adc
jnp
push
mov
jl
add
pop
pop
std
js
cmp
int3
dec
fsubr
ret
cld
or
cmc
and
adc
inc
or
shrb
repz
fdivs
xlat
xchg
rorl
xchg
xchg
hlt
rcrl
push
sub
and
pop
add
inc
fstps
cmp
jmp
or
call
icebp
leave
cs
in
pushf
popf
dec
hlt
cli
lock
add
mov
aaa
sbb
xor
call
inc
in
lret
aam
movsb
fmul
dec
int
inc
sbb
rcll
mov
sbb
sbb
fstpt
cmpl
jno
jl
sbbb
stc
fsubl
out
cld
cwtl
cmc
jae
mov
ljmp
add
hlt
or
mov
arpl
adc
out
pusha
out
mov
sti
add
ja
mov
aad
je
inc
adc
add
xchg
or
ljmp
hlt
sar
cld
out
leave
cwtl
xchg
decl
add
sbbb
mov
mov
sub
iret
add
mov
mov
xchg
mov
add
in
repnz
arpl
and
inc
hlt
fisubl
xchg
add
add
jns
dec
inc
dec
lret
xlat
dec
jp
and
push
sbb
imul
test
in
dec
rcl
in
inc
jbe
push
cmpl
inc
xchg
cs
loopne
pop
lods
mov
xor
notb
xor
inc
adc
lods
or
leave
xor
and
fsubs
ja
dec
je
fadd
addr16
loope
popf
das
cmc
xlat
adc
mov
dec
dec
dec
mov
in
jmp
lcall
pop
mov
shlb
rolb
fadd
and
or
ja
jbe
enter
or
enter
push
aad
mov
xor
sbbb
xor
mov
into
fwait
add
cmp
push
outsl
leave
pop
insb
jp
inc
mov
sub
inc
ret
xchg
adc
inc
xchg
xchg
leave
jae,pn
ljmp
jae
pop
add
rcll
sbb
iret
cmpsb
fs
les
imul
dec
outsl
decb
jb
adc
jae
mov
or
dec
fs
mov
inc
push
and
add
scas
and
in
loopne,pn
jo
mov
xor
dec
pop
mov
int3
test
and
sub
scas
daa
mov
dec
dec
test
push
push
stc
or
stos
xchg
je
mov
in
aad
roll
mov
pop
xchg
mov
inc
mov
data16
cmp
push
ret
hlt
and
dec
out
cmp
xchg
xchg
fdivrs
xor
push
xchg
test
pusha
jp
sub
mov
mov
cmp
mov
push
jo
jno
sbb
xlat
arpl
add
sub
push
lret
scas
xor
sbb
loopne
dec
add
mov
xor
pop
dec
popf
sbb
das
jne
sbb
xchg
gs
and
lea
xchg
lahf
int
roll
inc
xchg
cmpsb
shlb
and
and
in
cmp
or
imul
outsb
add
inc
xchg
daa
mov
pop
jbe
mov
fnstcw
jg
sub
cmpsb
cld
dec
cmp
shll
xchg
or
xor
push
xchg
pop
inc
mov
sub
scas
out
and
add
pop
xchg
nop
aad
lods
test
out
or
int3
sahf
lods
in
adc
imul
stos
data16
arpl
shlb
jns
push
adc
xchg
mov
ds
insl
std
mov
arpl
cmp
inc
outsl
gs
bnd
pop
rol
fildll
nop
fs
or
push
push
xor
fistpl
mov
xchg
cltd
int3
fildll
lcall
and
aaa
das
cmpsb
pop
sub
daa
outsb
mov
push
iret
mov
push
sbb
negl
sub
mov
adc
xchg
sub
jae
xchg
mov
or
push
lcall
xchg
xlat
pop
sbb
xor
jbe
int
adc
add
cmc
daa
es
push
add
push
and
pusha
or
negb
push
sub
dec
mov
packsswb
and
mov
sub
push
dec
dec
out
je
decl
sbb
lds
cmp
mov
push
data16
test
clc
sti
std
insb
sbb
or
adc
outsl
movsb
in
sarb
ljmp
inc
movl
mov
sub
aad
imul
lcall
call
or
sbb
add
and
jb
mov
fbstp
hlt
or
fbstp
jg
and
dec
fsub
jnp
push
fldenv
jb
and
mov
dec
cmpb
test
jns
icebp
stos
stos
rorb
push
fxrstor
aam
xor
inc
and
and
dec
sarb
xor
dec
push
jg
insb
loopne
imul
jb
or
pop
mov
notb
jl
js
dec
pusha
jb
or
pop
inc
push
push
ja
sbb
jo
arpl
cmp
and
js
xlat
cs
dec
push
adc
xlat
push
in
bound
xchg
sbb
loop
cwtl
cld
or
push
mov
mov
mov
or
dec
mov
scas
loope
daa
out
mov
lods
cmp
adc
ret
js
loopne
pop
inc
and
hlt
pop
jo
clc
sub
ror
push
out
xor
pusha
xlat
in
test
sti
fnstsw
outsl
add
xchg
mov
adc
mov
lret
pop
out
mov
sbb
cli
xor
inc
sub
mov
insl
imul
cltd
dec
lods
inc
mov
cltd
add
imul
xchg
pusha
dec
imul
jmp
cmp
rcll
lcall
adc
clc
cltd
shll
inc
sarb
scas
clc
mov
lods
nop
ljmp
sub
popa
icebp
addr16
pop
and
into
in
dec
hlt
int
mov
ja
divb
and
call
add
pop
loope
mov
cmpsl
in
test
in
sbbb
sahf
mov
jl
imul
xchg
ja
int3
mov
neg
pop
fpatan
mov
aas
fwait
subl
aad
fcomp
mov
ss
insl
jbe
dec
addr16
loopne
and
xor
cmp
sahf
xchg
pop
test
and
loope
lods
cmpsl
dec
sbb
out
mov
mov
and
movsl
and
sbb
dec
outsl
pushf
clc
scas
sub
popa
hlt
movsl
addr16
test
popl
mov
iret
mov
ds
jge
out
bound
push
add
mov
dec
add
arpl
enter
imul
push
in
ficoml
inc
ficompl
repz
andb
cmp
add
jbe
icebp
jge
mov
adc
add
sbb
out
push
jnp
in
pop
fucomip
sbb
jmp
xchg
pop
jmp
xor
adc
fdivl
scas
xor
scas
pop
aad
or
dec
insb
fisubl
inc
enter
sub
sub
in
cmp
fnstenv
push
out
or
jp
jae
pop
in
out
push
insb
xor
shrb
scas
das
push
or
jbe
in
or
fbld
cld
or
insl
arpl
fisttpl
and
enter
fs
add
or
mov
out
jbe
push
xchg
inc
in
lds
xchg
jnp
sbb
mov
stc
jbe
shr
cmpsl
sub
inc
popf
fstl
pop
sub
mov
data16
fcompl
outsl
add
sub
call
pop
ss
xlat
dec
rcl
cmpsl
popf
pusha
arpl
addr16
sahf
add
pop
or
jp
adc
jae
xlat
scas
sbb
or
jmp
sub
sarb
daa
push
cwtl
xchg
add
cmp
and
clc
mov
pop
adc
out
stos
pop
mov
mov
into
int3
dec
shl
and
int3
xchg
push
iret
test
imul
cmp
out
xlat
jl
or
imul
jbe
repnz
scas
pop
push
pop
xchg
fisttpll
mov
mov
ret
mov
roll
insb
and
or
rcll
insl
dec
aad
leave
mov
data16
and
cmpsl
fs
addl
adc
inc
lea
mov
shll
dec
cmpsb
push
push
jmp
xor
scas
push
popa
jno
fs
add
mov
pusha
or
leave
mov
out
xor
push
cs
aad
nop
cld
cmp
arpl
xor
xchg
lods
fsubrp
mov
das
pop
out
outsl
insl
pop
aaa
arpl
xchg
vmwrite
enter
cmpsb
cld
scas
dec
xchg
and
xor
xchg
aad
jb
js
add
push
popf
mov
mov
inc
fbld
lock
fstpl
cs
push
xchg
cmp
add
and
pop
adc
dec
pop
cmpb
test
lret
dec
outsb
push
mov
test
inc
xor
xor
pop
test
call
outsb
fadd
mov
lcall
sub
aam
pop
aam
jbe
or
jne
enter
xchg
loop
pushl
shlb
xchg
ret
mov
push
or
pop
ret
pop
sub
sti
inc
mov
cmp
rorb
xor
adc
and
jmp
adc
xchg
xchg
cmp
jbe
push
daa
outsb
xor
jl
jge
xchg
pop
pop
aaa
adc
shlb
xorb
jecxz
cmp
xor
loopne
push
sub
ja
cltd
sbb
mov
aas
xchg
cs
inc
loopne
sbb
adc
aad
pop
sub
cmp
mov
filds
call
sub
repnz
testb
stos
sbb
sub
movsl
mov
push
orb
fldl
sbb
stos
xchg
arpl
jnp
test
movsb
pusha
sbb
shll
and
fsubrl
fmull
pop
xlat
mov
mov
xchg
sbb
fsubs
and
lods
cmp
mov
xor
cmp
push
push
movsb
es
pop
xchg
cld
xchg
into
or
xchg
int3
icebp
mov
cmp
rep
cmpsl
outsl
pop
inc
repnz
xchg
sbb
sub
mov
loope
arpl
push
pop
and
mov
push
dec
sub
add
or
xchg
ja
sti
rcll
repz
xor
push
cltd
imul
or
mov
cwtl
ljmp
js
and
sti
adc
scas
or
sub
loopne
clc
sbb
insl
es
icebp
sbb
mov
arpl
sub
stc
push
cmpsb
pop
negb
rclb
sbb
or
insb
test
inc
mov
pop
xchg
cs
movsw
enter
fidivs
faddl
xlat
pop
shlb
push
inc
pop
in
cmp
sbb
in
rcll
clc
adc
cmpsb
sbb
mov
fucomp
scas
mov
inc
fcomps
dec
nop
jmp
data16
addr16
repnz
inc
jmp
sbb
cmpsb
lcall
inc
lahf
insl
bound
gs
ds
mov
pop
push
imull
pop
fcompl
icebp
add
cmp
repz
adc
shll
sub
push
sbbl
mov
push
lret
nop
inc
shl
xchg
mov
cmc
stos
es
std
loopne
and
push
adc
outsb
adc
jb
mov
push
sbb
adc
mov
leave
xchg
dec
loop
enter
dec
push
mov
jmp
jl
add
fnstsw
in
or
iret
les
das
adc
dec
or
fadd
push
mov
je
jb
dec
nop
cmpsl
int3
inc
enter
adc
sub
adc
mov
movsb
sbb
out
xchg
jnp
lret
jp
xor
sbb
xchg
push
cli
imul
ret
mov
das
sbbl
pusha
pop
enter
loopne
loopne
repnz
sar
sub
push
and
pop
out
cmp
outsl
sbb
jp
enter
loopne
mov
fmul
mov
or
mov
mov
arpl
jno
inc
jp
loopne
loopne
inc
testb
pop
lods
stos
push
loopne
fs
cmpsl
outsl
adc
or
std
movsl
cmpsl
jo
jecxz
xor
inc
mov
sub
sbb
shrl
and
adcb
cmc
mov
loopne
mov
sbb
into
cltd
icebp
xlat
jle
divl
popf
sub
xor
inc
pop
aaa
fstpl
std
adc
imul
sbb
loopne
pop
mov
movsl
cmp
adc
dec
shlb
push
sub
test
neg
mov
outsl
pop
lret
imul
stos
gs
aas
inc
inc
adc
and
sar
sub
js
add
mov
clc
sbb
push
out
push
rcrb
loop
movsb
xchg
orb
inc
shll
mov
inc
stos
adc
in
pop
dec
lcall
cmp
ja
adc
mov
loopne
lds
lock
aaa
rcrb
inc
xor
in
mov
jbe
iret
dec
adc
mov
fldenv
ror
jge
lods
jo
js
fbstp
loope
and
fsubr
jp
mov
jnp
xlat
dec
enter
sub
in
lea
fwait
sbb
cltd
jo
pop
dec
gs
dec
add
cmpsl
out
aas
stos
push
icebp
nop
mov
push
test
xor
mov
inc
jae
or
or
push
cmp
icebp
leave
jb
lret
sbb
iret
loop
pop
mov
sbb
push
je
pop
aas
imul
call
mov
xor
outsb
les
xchg
mov
cmp
sub
out
std
pusha
add
movsl
sub
int
into
aas
movsb
stos
adc
jmp
popa
jge
dec
dec
and
mov
cmc
clc
in
scas
ss
ret
jp
loope
dec
in
negl
divb
rcrl
lods
in
ret
dec
or
xor
inc
mov
adc
out
lods
push
in
mov
testb
nop
xlat
jae
in
inc
or
inc
outsl
int3
lcall
lods
movsb
adcb
in
ja
or
iret
sub
jae
je
ljmp
or
pop
into
jmp
cmp
fdivr
add
aas
cmp
lock
call
jo
btr
movsb
mov
push
pop
inc
call
push
sbb
scas
fists
std
push
testl
clc
mov
or
arpl
roll
enter
or
lcall
insb
mov
adc
mov
movsl
inc
ljmp
flds
lods
xor
dec
hlt
adc
addl
inc
adc
dec
cmp
in
sahf
inc
cmc
xor
mov
lock
sbb
ficoms
push
test
mov
push
inc
or
loopne
out
out
stc
inc
push
push
mov
fs
adc
and
mull
mov
stos
inc
cmp
sar
mov
stos
out
stos
xor
iret
insb
xlat
lret
xor
insl
aas
pop
pop
mov
in
cmp
mov
sbb
mov
bound
xchg
lret
pop
sub
cmp
and
and
sub
aam
out
cmpsl
fs
or
xchg
outsb
out
insl
std
xchg
ljmp
mov
cli
adc
or
push
cmpsl
mov
out
or
pop
sbb
push
lret
sub
jp
into
and
xsave
jno
repnz
addr16
mov
mov
inc
out
add
jecxz
cmp
or
bound
push
pop
jae
cmp
sarl
aam
dec
rcrb
movsl
mov
loop
pop
xchg
push
xor
dec
fidivrl
inc
sbb
in
nop
movsbl
adc
les
pop
rolb
xchg
ss
xor
leave
jge
mulb
and
or
mov
sbb
pop
aam
or
push
jb
dec
bound
pop
mov
fistps
and
add
das
sbb
roll
clc
cmpsb
mov
xor
in
mov
push
iret
cmpsl
xchg
xor
ret
les
fdivrl
gs
jne
mov
push
add
outsb
loop
ja
loope
imul
mov
sahf
add
je
into
mov
cld
fisttpl
sbb
sbb
jmp
push
push
jmp
popf
shlb
cltd
jno
cs
inc
sbb
lcall
aam
mov
xor
add
nop
cmp
dec
aad
push
insb
shll
js
aas
int3
icebp
fidivrs
les
xchg
std
push
ljmp
jp
jp
in
cmpsl
dec
dec
into
imul
add
lea
jbe
jne
lcall
dec
rcrb
mov
stos
xor
cmpsl
aas
dec
dec
mov
mov
cmp
mov
mov
mov
inc
fwait
or
sbb
stos
imul
add
fiadds
test
jmp
movsl
adc
or
lret
scas
fsubrs
mov
dec
aad
mov
jae
mov
cmp
aad
xchg
scas
xbegin
dec
test
mov
imul
or
fisttpl
mov
scas
pop
int
inc
jnp
mov
inc
jne
orl
xchg
call
push
add
xor
or
mov
or
loopne
add
loop
xor
loop
inc
cmp
scas
addr16
lock
outsb
adc
outsb
fldl
jmp
cwtl
and
push
insb
pop
xchg
dec
jo
aad
dec
add
lret
cltd
dec
and
cmp
mov
sub
inc
div
lods
push
adc
js
xchg
jns
loopne
outsl
sub
out
pushl
fadd
sub
inc
nop
sub
mov
mov
adc
jo
jbe
aam
cltd
cld
mov
frndint
test
faddl
subl
push
or
loopne
addr16
mov
sahf
scas
mov
sahf
or
xchg
and
or
xchg
add
sbb
mov
imul
out
dec
cwtl
rclb
jae
scas
ja
sub
cmpsl
fdivl
dec
cmpsb
imul
data16
mov
ror
xchg
iret
loopne
push
xor
pushf
cmp
dec
arpl
dec
insb
mov
adc
mov
bswap
mov
popf
and
fnstsw
mov
fdivl
sub
std
adc
pop
adc
jnp
cmp
and
dec
cmp
int
add
cmp
fildll
fwait
push
or
adc
nop
mov
pop
outsl
inc
add
sub
leave
adc
push
ss
loope
xchg
les
cwtl
dec
fimuls
inc
lea
inc
out
dec
xor
int
sub
test
cmp
sub
testl
in
mov
push
mov
jne
idiv
jns
cmp
sbb
loop
inc
stos
ljmp
cmp
cmp
notl
call
es
pushf
cmp
xchg
lock
inc
inc
add
mulb
rcll
in
test
negb
outsl
mov
lret
adc
jp
test
sbb
in
mov
dec
mov
arpl
jg
sarl
sbb
cmp
add
mov
mov
int
jae
bound
das
int3
ja
lahf
test
fcmovbe
ret
imull
jnp
add
jmp
jbe
inc
sti
and
ret
pusha
add
aam
in
int
add
mov
jb,pt
push
push
push
insb
pusha
aad
or
adcb
mov
in
scas
ds
sbb
es
dec
ficoml
cmp
push
xor
sbb
cmp
jle
stos
mov
jge
xlat
mov
mov
je
mov
in
pop
jae
imul
inc
std
jns
cltd
insl
mov
dec
cmp
adc
addr16
inc
sbb
leave
lods
pushf
push
jmp
xor
xor
out
and
out
orl
lock
fstpt
dec
imul
or
xor
add
out
add
push
fs
loop
xchg
cmp
push
xor
daa
and
pop
and
mov
mov
jle
mov
pop
adc
clc
add
pop
es
dec
je
adc
xor
int3
nop
cltd
jb
push
out
addr16
int
mov
pusha
mov
daa
and
and
scas
push
xchg
fwait
xrstor
xor
mov
imul
sti
imul
mov
mov
pushf
adc
mov
clc
into
xor
mov
out
push
mov
xlat
adc
fsubr
fldenv
cli
lret
in
and
push
jge
out
pop
js
jno
in
sub
or
and
mov
lret
stc
bound
in
inc
ja
inc
gs
and
mov
mov
out
mov
push
add
movsl
mov
lock
leave
dec
adc
dec
xchg
repz
and
ja
ds
or
cmc
xor
imul
ret
and
adc
mov
aaa
pop
es
shlb
sbb
cmc
into
inc
ja
sub
mov
dec
push
outsb
shlb
mov
das
xor
mov
scas
pusha
movsb
mov
mov
adc
xchg
jns
jge
scas
adc
adc
aaa
unpcklps
mov
and
imul
loop
lock
jae
mov
es
test
adcl
mov
pop
mov
out
jbe
dec
cs
repnz
jns
add
add
jmp
add
scas
or
jmp
push
paddusb
lock
xlat
in
xchg
les
jne
je
adc
lret
push
mov
jns
out
leave
mov
in
mov
sub
loope
leave
dec
stos
ds
stc
mov
dec
dec
xor
add
sub
ss
jae
pop
jae
dec
shlb
cmp
in
xchg
insl
mov
sbb
aaa
lock
repz
jo
push
mov
adc
test
mov
lods
sahf
dec
or
idivb
sub
or
fcomi
in
enter
movsb
push
out
adc
fs
or
enter
adc
fildll
fdivs
cli
inc
dec
add
nop
add
nop
adc
adc
addr16
outsl
xor
fsubp
or
scas
jae
sbb
sbb
dec
setbe
add
sub
out
inc
push
jl
or
dec
dec
out
inc
pusha
icebp
cwtl
movsb
stos
jg
push
testl
ficoms
jge
out
mov
in
xor
or
and
add
sbb
sti
push
push
cltd
dec
xchg
out
scas
push
bswap
inc
faddl
insl
cmc
leave
push
or
mov
jmp
push
insb
sarb
rep
filds
pop
popa
dec
lret
out
mov
lods
rolb
mov
lock
in
push
in
aas
shlb
adc
cmpsl
jmp
push
cwtl
lods
cmp
push
aam
dec
or
sbb
adc
xchg
out
js
jno
in
sub
inc
adc
insl
ror
scas
adc
nop
jle
popf
mov
and
clc
mov
lods
or
dec
push
icebp
xchg
push
ds
sub
inc
je
insl
xor
nop
mulb
mov
in
and
hlt
ds
cmp
repz
push
cmp
insb
and
push
ds
cmp
push
mov
sbb
push
test
mov
js
idiv
push
cwtl
movsl
push
iret
out
inc
ljmp
inc
add
into
mov
cmp
daa
fwait
or
int
outsb
jo
frstor
fwait
mov
add
dec
dec
out
fisubrs
mov
push
mov
and
sbb
add
xchg
jo
call
xchg
sub
inc
test
ds
scas
dec
pusha
ss
stos
lcall
pop
sti
xchg
inc
stos
stos
add
mov
lods
add
test
nop
ret
adc
rcll
adc
mov
dec
inc
sbb
fcmove
xor
and
jmp
jb
in
repz
push
dec
jg
inc
aaa
out
lods
leave
leave
jnp
mov
dec
dec
jnp
or
xchg
aaa
mov
test
sub
adc
and
dec
xor
ja
push
shrb
mov
imul
aam
cltd
cli
lret
call
mov
rcl
dec
int
push
xor
mov
xchg
repnz
mov
cmpsb
or
pop
out
pop
repz
imul
mov
movsb
jno
ss
lret
and
cmp
stc
into
mov
jmp
push
ds
pop
dec
inc
aaa
js
adc
lds
cltd
pop
cwtl
iret
mov
mov
scas
add
lret
arpl
lahf
jne
and
adc
out
fs
test
cs
xchg
lods
pop
rclb
movsb
mov
and
xor
insb
pop
gs
nop
stos
and
stos
idivl
and
sbb
mov
xor
add
stos
xchg
or
jo
inc
mov
inc
jae
cs
jb
cwtl
pop
daa
mov
cld
sbb
int3
mov
xor
adc
add
mov
fisttpl
jne
das
stos
jecxz
roll
mov
out
mov
pop
pop
xchg
rcll
xchg
fwait
sbb
push
std
shrl
jle
imul
add
cmp
mov
lods
cmp
lods
aas
dec
out
xchg
cmp
fs
cli
aas
xlat
js
mov
std
cs
pop
mov
jge
adc
ucomiss
andl
pop
pop
pop
icebp
or
xchg
jle
inc
testl
push
stos
jae
pop
mov
imul
fcos
into
cmpb
sbb
and
mov
dec
insl
lahf
pop
or
ss
lods
dec
pop
sub
dec
sub
imul
in
out
iret
or
jo
add
in
cmp
mov
les
cmpl
in
dec
repnz
nop
leave
addr16
sbb
daa
lock
cmpsl
outsb
inc
xor
mov
jbe
scas
aam
int3
stos
add
movsb
adc
or
push
sub
adc
or
in
sbb
sarl
jmp
icebp
adc
xorb
je
int3
sarl
push
ss
xchg
int3
aas
jecxz
dec
pop
iret
dec
xchg
lahf
hlt
or
add
test
sqrtps
out
jge
lods
sbbb
popw
fcoml
xor
fs
orb
or
sbb
sub
mov
jle
fsts
inc
shll
test
fcompl
or
xchg
push
xchg
jnp
xchg
mov
addr16
fs
rclb
xchg
or
adc
mov
push
out
jo
or
subb
sbb
mov
sbb
and
int3
inc
ret
push
les
xchg
test
dec
sub
outsb
sub
sub
das
mov
xchg
aad
scas
ret
fdiv
addl
jp
mov
push
jge
jmp
pop
xchg
jge
in
sub
push
jo
shlb
dec
push
mov
fbld
jae
loopne
shr
cmpsb
movsb
and
jg
out
cmp
cli
sub
jns
inc
add
ret
xchg
add
jmp
bndstx
jp
aas
rcrb
push
or
jl
xchg
cmp
cs
stc
inc
cmp
xor
xchg
mov
or
mov
sub
or
lods
sub
testb
mov
in
roll
lret
inc
lret
inc
push
or
rcll
neg
adc
xor
jae
cmp
xor
icebp
bound
loope
xlat
dec
xchg
mov
and
add
rclb
or
push
pop
or
or
fcoms
lods
jmp
xchg
lock
in
jno
mov
movsb
stc
in
mov
pusha
jmp
les
inc
ljmp
sub
jp
xor
push
leave
lock
mov
lods
or
push
fsubrl
push
mov
rcrl
stos
xchg
pop
xlat
test
jae
ljmp
and
push
sub
cmp
imul
stos
cmp
imul
enter
and
sbb
mov
mulb
fadds
in
iret
sbb
adc
push
mov
xchg
mov
push
fadd
mov
mov
cmpsl
sbb
out
xor
pop
mov
fmull
imul
adc
outsb
out
mov
sub
jo
mov
fidivs
sub
inc
stos
in
mov
push
std
push
imul
mov
call
add
jns
inc
mov
outsb
mov
mov
fsubl
xchg
mov
xchg
in
xor
mul
js
or
cmp
mov
das
fstpt
outsb
fbld
shll
mov
adc
cmp
data16
jecxz
adc
sub
lret
xor
pop
daa
xor
ret
jns
adc
xchg
repnz
push
rcl
jbe
shll
cmp
lock
push
test
loopne
mov
addr16
xor
jmp
mov
insb
jno
pop
test
loop
dec
stos
cmp
or
scas
push
out
cld
sub
test
mov
inc
js
cwtl
push
repz
rcrb
scas
jbe
xchg
adcb
add
jge
in
or
fnstsw
ljmp
aad
ja
ss
xor
repz
and
dec
out
jae
cmp
push
xor
inc
outsb
or
xchg
loopnew
outsl
nop
mov
jl
dec
sbb
mov
lds
mov
mov
sahf
icebp
sub
fs
pop
pop
in
mov
stc
pusha
sbb
int
xchg
movsb
iret
cmp
nop
inc
sbb
inc
dec
jne
cmp
and
clc
xor
lods
into
in
scas
insl
or
sbb
cmp
out
cmpsl
insb
dec
pop
mulb
loopne
dec
scas
into
clc
xchg
in
cmp
or
or
or
mov
lds
mov
mov
stos
dec
mov
hlt
adc
bnd
outsl
add
icebp
stos
mov
xchg
pop
inc
mov
mov
jecxz
jnp
insl
dec
jae
jp
xchg
out
xlat
cwtl
push
xor
stc
repnz
xor
pop
loopne
repz
mov
sbb
bswap
cwtl
mov
dec
frstor
mov
sbb
aam
das
cmp
in
je
cltd
push
test
mov
stc
es
dec
mov
xchg
pop
dec
cmp
xor
push
mov
test
pop
add
cs
xchg
ret
lea
ljmp
movsb
jae
add
or
jl
jns
int3
out
and
xlat
add
xor
ss
data16
jno
mov
mov
psubb
xor
jae
adc
into
nop
fisttpl
in
nop
pop
mov
dec
js
inc
pop
and
mov
jg
aas
mov
jecxz
add
sub
orb
scas
into
insb
hlt
test
jns
stos
es
mov
cs
mov
mov
nop
js
push
sub
xchg
cld
cmpsl
jg
mov
inc
mov
nop
sub
jo
rcr
sbb
std
imul
push
cmp
pop
inc
mov
imul
test
shrb
sbbb
mov
or
loopne
and
xchg
hlt
pop
mov
mov
push
rcr
sbb
sahf
test
mov
or
fldt
cmc
cli
push
dec
dec
faddl
jge
pop
xchg
xchg
xor
imul
mov
mov
cmpsb
cli
lahf
mov
lcall
cs
xchg
mov
lret
fstpt
pop
and
movl
mov
inc
out
cmpsl
mov
push
or
inc
fstl
push
jmp
xor
lcall
aas
int
mov
mov
mov
pop
mov
jl
or
jge
popa
xchg
fildll
pop
inc
push
sti
xlat
nop
fmulp
les
test
adc
push
lods
pop
movsb
xor
daa
and
popa
les
sahf
cmpsl
and
push
push
out
pmulhuw
sub
and
add
xor
cmpsb
nop
mov
mov
mov
fs
cs
jns
filds
imul
sbb
mov
or
sbbl
fcmovu
push
sub
outsl
pop
in
mov
outsb
fldt
and
sub
subb
mov
loope
push
cmp
je
inc
xor
lock
lret
sbb
lock
jl
testl
scas
outsb
push
imul
mov
xor
push
sbb
mov
xchg
idivb
jne
pusha
add
adc
les
sbb
jno
sti
fnstenv
call
les
int3
mov
scas
mov
test
xchg
loope
dec
arpl
cmp
je
pop
sbb
or
or
and
and
test
xor
inc
sbb
push
in
jecxz
loope
pop
or
adc
lahf
cmpsb
push
les
xchg
imulb
or
sbb
xlat
lods
pop
xchg
push
adc
adc
mov
shr
orb
fiaddl
mull
sbb
xchg
out
outsb
push
adc
dec
mov
adcl
test
and
cmc
arpl
xchg
add
adc
lahf
push
xor
iret
pop
popf
jno
in
sbb
loopne
test
mov
mov
mov
or
inc
sub
or
fstl
cmc
mov
sbb
call
adc
movsb
mov
mov
stos
mov
mov
rcrl
es
lcall
iret
insb
shlb
add
jge
fildll
jae
cmpsl
xor
call
scas
sbb
lahf
jno
xchg
cld
cmp
pop
pop
gs
dec
jno
in
hlt
pop
xchg
lods
adc
imul
mov
shrb
or
jbe
stc
gs
jge
add
sub
hlt
aam
dec
fs
cld
movsb
sbb
push
and
fbld
into
mul
fsts
lcall
lods
cltd
xchg
sti
movsb
adc
or
popa
cld
in
inc
in
dec
leave
fwait
mov
xchg
in
xchg
or
call
data16
aas
movsb
lock
les
stos
sbb
add
fucomp
push
xchg
dec
stc
mov
jmp
sbb
push
mov
sbb
daa
scas
jp
in
mov
adc
iret
sub
inc
xor
mov
push
adcb
std
nop
xchg
mov
pop
xor
sub
in
push
pop
fwait
push
jnp
mov
xor
sub
or
mov
imull
sub
pop
sub
ficoms
pop
ret
and
not
mov
lods
xor
aas
or
adc
mov
bound
xchg
ljmp
int3
imul
dec
add
sub
cli
orl
xchg
sub
xor
nop
jbe
repnz
outsb
jle
cltd
pop
sar
fmuls
xchg
pop
arpl
jmp
popa
stc
jns
lcall
cmp
jae
cltd
mov
cmpsl
jae
ret
jmp
adc
jmp
lods
cmpsl
push
lods
fwait
mov
imul
mov
addr16
cmc
pop
fcoms
lock
mov
idiv
jno
lock
mov
test
push
jns
dec
dec
ret
fstl
in
cmpsb
adc
inc
imul
in
add
push
push
lds
cld
iret
daa
mov
add
in
clc
sbbb
enter
jge
mov
iret
xor
xchg
lods
lods
stos
addl
sbb
clc
cli
jp
mov
and
or
imul
ss
in
jbe
fsubrl
and
lea
popl
mov
in
and
jns
adc
scas
sahf
adc
and
add
xor
out
cld
lret
aaa
xchg
sahf
sbb
jbe
data16
jno
adc
jg
xchg
and
or
dec
fsubr
bound
mov
cmp
push
rol
jmp
call
arpl
dec
mov
dec
dec
cwtl
lcall
mov
cmpsl
push
lret
enter
in
divb
mov
adc
xor
mov
dec
dec
adc
test
xchg
jne
jns
std
call
inc
outsb
std
pop
sahf
push
jge
fwait
mov
push
shr
xor
fmul
inc
cmp
arpl
xchg
cld
rorl
xlat
hlt
mov
fstpl
repnz
sahf
test
cmp
arpl
mov
sti
ljmp
jne
mov
mov
aad
es
subl
dec
push
sub
jge
xchg
jg
push
int3
xchg
shl
lcall
xor
pop
loop
pop
mov
xor
pop
arpl
lds
adc
shlb
out
xchg
push
or
dec
shr
aam
ljmp
jle
sbb
lods
sarl
in
sbb
push
push
xorps
test
shll
in
mov
scas
xchg
xchg
sub
xchg
mov
sti
scas
add
xlat
jge
mov
lock
cmp
pop
mov
pop
mov
pop
or
out
sub
ret
pop
pop
push
or
inc
test
cmp
je
in
dec
aam
jne
fildl
or
xchg
ror
lock
mov
mov
sahf
dec
and
add
fidivs
hlt
mov
adc
movsb
movsb
imul
xchg
sbb
mov
push
push
jmp
fs
cs
cmp
cmp
inc
dec
ret
jb
es
inc
and
imul
sti
mov
dec
xchg
int
rorl
push
mov
cmp
mov
pop
lods
push
jge
fdivp
push
dec
jmp
cmc
fistl
and
xrelease
jno
mov
repz
lods
cmpsl
pop
adc
push
pop
sbb
stc
pop
jmp
fildl
dec
aas
dec
ljmp
nop
popf
add
scas
mov
nop
out
xor
lods
xor
dec
jecxz
xchg
into
jg
loope
push
das
mov
sub
fcmovnbe
push
cmp
leave
mov
inc
dec
call
mov
call
jle
lds
dec
mov
repnz
insb
mov
cmp
inc
add
sbb
and
dec
int
jb
dec
mov
frstpm(287
inc
stos
and
xor
dec
pop
subb
jb
in
or
jle
test
mov
xchg
pop
xchg
mov
std
rorb
imul
dec
jl
jmp
fisttpll
fstps
cltd
mov
cmp
mov
pop
std
je
dec
jg
inc
inc
mov
pop
das
pop
add
cs
and
or
jmp
sbb
and
scas
fisttps
mov
loope
addr16
jecxz
imul
jnp
aas
pop
lock
cld
inc
jmp
stos
jmp
or
ds
and
addb
xorb
dec
xor
or
xor
and
cwtl
mov
inc
pop
shll
xlat
mov
adc
and
test
jecxz
mov
pop
push
sti
lret
push
pop
xchg
mov
fisttps
pop
push
call
jecxz
xor
adc
pop
out
push
subps
aas
push
dec
stos
sub
ljmp
mov
dec
jmp
add
lcall
aas
movsl
test
xor
ds
dec
out
out
stc
push
insl
dec
fidivl
push
cs
or
or
xchg
stos
or
addl
inc
push
cmovbe
es
xorb
mov
into
dec
hlt
mov
fldenv
in
sar
xchg
inc
shlb
xlat
lahf
pop
sbb
out
hlt
jl
mov
sarl
ret
int
xlat
jb
xor
lahf
mov
stos
adc
in
and
xchg
or
dec
mov
popa
hlt
inc
or
loope
int
loopne
cmp
jns
test
cwtl
mov
fcompl
mov
in
mov
sbb
repz
jl
cmp
cltd
inc
inc
cmpsl
inc
mov
ss
ja
fimuls
pop
and
push
jge
sbb
dec
mov
rclb
xlat
mov
mov
arpl
cmpsl
lea
mov
ret
add
pop
sub
jb
cld
cmp
jne
lods
dec
loope
ret
inc
orl
xchg
subb
dec
mov
jbe
ljmp
mov
fwait
sub
lret
adc
jo
push
ljmp
insl
lods
sub
cmpsl
xor
add
aas
xchg
stos
cwtl
shlb
pop
mov
pop
dec
dec
mov
in
add
inc
inc
test
frstor
lock
in
jae
sbb
push
out
jne
mov
ficoms
push
sub
prefetch
inc
mov
xor
movsb
repz
je
out
mov
std
lahf
or
mov
or
sahf
cmc
jno
jmp
les
cmp
rcrb
jp
pop
mov
ljmp
jae
jp
xor
daa
imul
in
lds
mov
pop
rcrb
out
lock
cmpsb
pop
jb
push
sbb
jmp
dec
mov
je
mov
push
pop
xor
push
dec
mov
cmp
popa
pop
adc
mov
ljmp
in
pop
and
xchg
in
and
repnz
xchg
xchg
mov
lea
das
sub
push
rcrl
xchg
inc
jne
fs
shlb
mov
and
mov
inc
xor
push
inc
mov
mov
mov
icebp
lea
lahf
sbb
add
xchg
add
arpl
aaa
push
adc
fcmovnu
add
jb
push
pusha
int
insl
adc
adc
out
in
dec
nop
js
pop
fldcw
inc
and
je
xor
push
xchg
dec
fdivs
sbb
aam
sbbl
cmpsb
test
pop
insl
xor
fistpll
rcrb
lret
subb
das
pop
out
insb
pop
repnz
dec
ss
sub
sbb
push
es
pop
jae
cli
ja
or
das
cmp
cmp
sahf
ss
mov
mov
arpl
jo
fstpt
mov
es
xor
pop
lcall
les
mov
jg
cld
sub
jmp
cmpsl
pop
ljmp
nop
les
shr
out
mov
aaa
dec
push
scas
push
dec
jl
adc
inc
outsb
nop
mov
jl
out
mov
mov
and
aaa
sub
aad
rolb
insl
shufps
jnp
icebp
mov
lods
sti
fstpt
iret
jne
orb
add
lcall
shll
rcrb
mov
inc
cmp
xor
adc
rorb
cmpsb
in
and
cmp
xchg
jl
mov
lods
notb
inc
repnz
sub
jae
adc
adc
sub
jmp
xor
mov
xor
cmc
test
pop
xor
and
cmp
xchg
fldcw
push
or
les
and
lret
std
test
xchg
sub
shll
sahf
push
sbb
fwait
insb
xlat
xchg
test
je
dec
test
adc
ljmp
dec
gs
jp
in
cli
insb
adc
das
mov
bound
xor
or
add
cmp
sbb
push
pop
enter
mov
mov
bnd
xchg
int3
jo
insb
push
and
add
imul
popf
fadd
ljmp
rclb
sub
enter
push
imul
dec
add
fisubs
test
insb
or
xor
movsb
sub
orl
ficomps
adc
mov
movsl
cmp
jae
xchg
mov
setle
mov
push
iret
daa
das
ja
sahf
pop
push
pushf
imul
mov
inc
into
mov
stos
int
pop
and
adc
insb
aaa
addr16
sbb
jle
inc
fbstp
rcr
push
scas
adc
adc
sahf
xor
in
mov
mov
iret
pop
xchg
or
in
ss
pusha
mov
inc
call
xor
cs
filds
pusha
push
xchg
or
addr16
sbb
fcomi
ret
xor
das
or
in
inc
add
jbe
lret
into
and
lock
ret
loopne
pop
sub
push
outsb
cs
call
mov
sub
inc
sub
xchg
loopne
push
xlat
pusha
ret
cmp
loopne
or
imul
mov
das
lahf
into
jmp
sbb
jb
xchg
loopne
lods
leave
aas
jae
aaa
mov
jge
mov
cs
xchg
push
cmp
movsb
sub
and
shlb
not
xlat
arpl
adc
shlb
loop
ljmp
insb
add
add
mov
add
cwtl
xor
adc
inc
adc
fcoml
jb
orb
or
into
cmp
arpl
nop
xchg
mov
daa
xor
adc
je
jg
imul
fadd
add
iret
push
in
dec
or
mov
scas
add
jp
lcall
test
sar
insb
sbb
jae
cld
inc
lret
mov
out
pop
cwtl
sub
jo
stos
cwtl
sbb
xor
adc
fdivrl
or
rclb
xchg
and
loopne
subb
pop
adc
mov
out
xchg
mov
sbb
or
pop
pop
cwtl
mov
xchg
ja
or
sti
jp
push
or
rorb
mov
adc
repnz
dec
mov
sbb
or
icebp
fists
jb
sub
je
in
sbb
in
in
aad
mov
pushl
dec
cmp
test
push
jmp
dec
sbb
sarb
fucomp
xchg
push
mov
call
push
je
leave
push
sub
in
pusha
leave
push
scas
scas
push
pop
je
dec
push
das
call
push
inc
push
mov
ja
pop
push
jno
mov
adc
push
dec
cmp
enter
mov
cmpsb
jae
and
adc
or
push
xor
gs
pusha
loope
sbb
xchg
sti
popf
fsubrs
pop
mov
in
mov
cmp
sbb
cwtl
mov
insl
xor
adc
icebp
cmp
sub
cli
lock
inc
int3
inc
mov
fldlg2
jp
lods
stos
lds
movsl
in
dec
mov
jecxz
out
jl
push
stc
fcoml
jle
out
dec
xor
aas
dec
in
jg
imul
and
adc
je
or
adc
rep
icebp
jecxz
pop
movsb
dec
and
je
xchg
xchg
xchg
xor
adc
cmp
and
in
mov
cmpb
orl
mov
lock
fmull
test
in
into
push
icebp
icebp
jbe
xor
and
xchg
and
add
pop
std
inc
push
adcb
jnp
out
imul
fs
push
nop
or
pushf
or
ja
and
xchg
push
add
cld
dec
pcmpgtw
mov
xchg
push
test
in
lahf
jp
cmpsl
sub
jb
das
ret
dec
pop
cmp
cli
xchg
into
mov
ja
and
add
jbe
sar
sub
mov
stc
stc
adc
clc
or
test
adc
and
daa
in
in
sub
movsl
mov
pusha
sbb
mov
sub
sbb
inc
sub
push
rolb
mov
inc
in
or
lret
jecxz
xor
imul
ds
psraw
jno
je
or
inc
xor
inc
adc
jp
cld
sub
mov
push
push
fcoms
xchg
jmp
lcall
xchg
or
imul
in
xor
sbb
je
dec
xchg
jb
xchg
lcall
fldcw
cmp
test
repz
arpl
mov
lods
jle
orb
mov
xor
loopne
call
incl
enter
shlb
xchg
adc
pop
rcrb
push
jne
les
cs
clc
insl
lods
mov
add
into
in
cmp
aad
push
jp
or
faddl
mov
pop
push
sbb
decl
adc
jp
or
xchg
mov
sub
mov
movsb
mov
call
loope
pop
mov
pop
or
mov
std
mov
xor
pop
push
in
or
int3
adc
in
dec
inc
pop
rorb
mov
xor
enter
jl
pop
fiaddl
es
lds
xchg
test
mov
shl
adc
xchg
pusha
or
pop
sbb
cmp
jbe
fwait
leave
mov
sahf
cmp
in
cmp
sbb
inc
es
jno
xchg
jns
ja
aam
shrb
pop
std
pop
std
or
or
ds
mov
jnp
xor
adc
dec
je
mov
insb
enter
sbb
xor
pshufw
imul
pop
in
out
sbb
adc
std
pop
mov
mov
js
into
inc
mov
and
or
jg
pop
enter
movl
cmp
shlb
sarl
inc
loopne
rcrl
sub
fwait
pushl
cmp
andl
mov
xor
dec
fnstenv
hlt
lret
call
int
adcb
xor
js
jmp
inc
movsb
jbe
fnstsw
lahf
scas
mov
adc
sbb
sub
push
mov
pushf
sbb
jb
adc
mov
push
mov
jb
xor
add
or
iret
into
subl
in
xor
dec
jp
inc
mov
jbe
adc
lods
clc
mov
stos
scas
or
or
mov
mov
xor
in
das
cmp
dec
jo
arpl
int
cltd
ret
lret
push
lods
enter
enter
xchg
mov
sub
jne
pushf
fcmovnb
push
int3
or
int3
cld
ret
or
cs
dec
add
insl
sbb
sub
cmp
outsl
shr
loop
movsl
out
icebp
add
jecxz
jmp
adc
outsl
and
pusha
shl
push
ljmp
or
or
aad
aaa
je
test
sarl
xchg
jo
jle
add
cmp
dec
cld
sbb
dec
popa
sbb
cmp
movsb
pop
dec
adc
enter
and
mov
std
push
std
dec
mov
aaa
push
cmp
std
and
std
cwtl
mov
fsubr
cli
or
mov
mov
xchg
xchg
test
push
lret
sar
lods
sbb
sbb
js
outsb
rcr
iret
inc
add
sbb
sbb
lahf
mov
shrl
push
mov
scas
stos
dec
adc
mov
fwait
in
cmpsl
fstpl
imul
es
inc
jl
or
push
inc
xchg
int3
repnz
enter
mov
adc
cli
addr16
sbb
adc
outsb
jge
cmpsb
pop
and
adc
nop
cmp
sbb
xchg
cwtl
iret
push
cwtl
movsb
ds
inc
and
sbb
or
and
sbb
inc
or
jp
mov
stos
sbb
shl
jb
mov
insl
sbb
jnp
loope
push
xor
enter
cmc
lret
or
outsl
stc
xchg
jne
sub
stc
movsb
lret
push
fimull
pop
fiadds
imul
in
inc
push
add
xor
call
pop
shr
les
mov
and
lret
es
pusha
out
pushl
jecxz
push
add
cltd
lods
cmp
adc
adc
mov
daa
test
scas
xchg
jnp
push
sbb
fdivl
stc
sub
inc
xlat
jo
pop
mov
and
jge
push
sub
das
cmp
outsl
jp
mov
call
inc
mov
in
adc
inc
pop
sub
nop
cmp
push
imul
sbb
jg
jb
outsl
jo
adc
ss
in
sbb
sub
faddp
sahf
and
push
sbb
push
test
push
js
ss
add
sub
inc
std
in
rclb
in
mov
lahf
cs
xchg
mov
imul
iret
in
iret
sar
lret
addr16
sar
adc
mov
or
fldl
or
jnp
in
cmp
movsb
loopne
adc
fsubl
dec
das
sub
and
xlat
scas
adc
inc
mov
stos
mov
loop
mov
push
scas
int
xor
fcomps
adc
mov
repz
adc
push
stc
xor
lret
lock
outsb
push
mov
pop
shlb
dec
adc
cmp
je
ret
xchg
add
rcl
pop
jns
sub
aaa
rorb
jae
insb
and
in
je
int3
sbb
jnp
xor
jno
add
je
enter
in
lea
xorb
inc
push
loope
add
test
dec
xchg
inc
movsl
or
pop
in
jbe
add
inc
fmull
jno
lret
bswap
dec
rclb
jnp
pop
xchg
lret
inc
jp
jecxz
pop
cmc
adcl
enter
and
lea
fdivs
aam
test
clc
ja
or
dec
rcrb
mov
xor
mov
inc
push
mov
pop
fisubl
mov
push
add
sbb
enter
mov
jne
adc
mov
cld
pushf
mov
add
mov
mov
jae
inc
jae
mov
xchg
xchg
jno
sbb
sub
stc
fs
arpl
adc
or
ret
lret
inc
loopne
addr16
cltd
push
in
mov
adc
add
adc
aas
fcoms
push
add
je
lret
push
fnstenv
mov
lret
dec
imul
insb
lea
push
or
cmpsb
jge
stc
inc
or
and
cmp
shll
imul
mov
xchg
push
sub
mov
repnz
bound
mov
push
or
cmp
sbb
mov
enter
jbe
fdivl
movsl
out
mov
in
outsb
push
adc
jne
xor
bound
aam
xor
jb,pt
pop
mov
or
aam
hlt
mov
cmp
sbb
lret
mov
sub
js
jge
andw
ret
data16
push
add
mov
xchg
in
out
loope
cltd
jmp
mov
stos
and
mov
in
add
in
and
in
popa
inc
out
add
inc
sub
xchg
sub
cmpsb
fmull
cmc
pop
in
inc
inc
and
outsl
adc
and
jmp
scas
jae
stc
dec
add
inc
arpl
and
pop
imul
mov
pop
daa
outsl
and
fisttpl
std
ret
dec
pop
adc
aas
sub
imul
dec
cmp
or
jmp
andl
cmp
in
push
push
jmp
stc
cltd
mov
fdivrs
or
add
orb
xchg
jnp
adc
jne
xor
andb
mov
inc
lods
pushf
bound
mov
cmp
mov
ror
mov
cmp
into
fcoms
cmpsb
daa
in
jb
int3
xchg
addb
mov
cwtl
in
mov
lret
pushf
jp
sub
shrl
insl
ss
or
adc
insl
js
repz
jb
mov
jp
movsb
dec
xchg
fldt
rclb
jl
in
jo
fdivs
outsb
mov
in
cmp
rol
jge
lods
pop
into
fst
ja
lods
inc
pop
dec
mov
insl
cmc
cld
sbb
shl
mov
or
call
jae
adc
icebp
fdivl
sub
sbb
ja
jo,pt
jecxz
sbb
pop
shlb
mov
adc
cld
loop
mov
dec
mov
sub
movl
dec
jno
jnp
test
out
xor
ds
mov
js
adcb
push
imul
movl
psubb
mov
je
inc
inc
sarb
je
mov
in
mov
shlb
movsl
shrb
into
imul
insb
jmp
fmull
cmp
jb
mov
inc
dec
and
adc
cld
lds
jo
repnz
fstl
clc
xor
aad
adc
repz
leave
mov
and
mov
loopne
enter
fnsave
pop
push
daa
enter
cmp
adc
xor
pop
mov
shrb
jne
in
inc
xor
xor
enter
xchg
pop
fs
std
mov
loop
dec
xchg
stc
add
push
push
flds
sub
jb
lock
or
fsub
inc
lock
arpl
dec
pop
shr
int3
movsb
and
insl
sub
int3
inc
rcrb
sub
or
int
mov
loopne
and
sub
jo
cmpsb
inc
cs
mov
mov
mov
mov
mov
out
or
addr16
fidivrs
push
mov
mov
decb
imul
lods
sbbl
xor
enter
enter
shrb
addr16
shr
inc
pop
cmovnp
sbb
push
push
mov
sub
aam
fidivrs
jns
stos
sub
lods
mov
add
movb
adc
push
sbb
xchg
adc
mov
lret
loope
call
into
faddl
mov
lahf
scas
std
addr16
xchg
ret
fxch
mov
inc
sbb
jae
ret
iret
shrb
xchg
and
enter
adc
in
cmp
nop
int3
dec
mov
jae
mov
xchg
or
inc
cmp
dec
enter
adc
jae
push
scas
movsl
xor
gs
jb
mov
push
cmpsb
push
lds
std
std
outsb
iret
adc
mov
mov
pop
mov
in
xchg
push
fsubl
sbb
jbe
jb
shlb
or
sbb
inc
aad
scas
push
cmpl
mov
jno
inc
enter
xchg
mov
sbb
scas
ja
clc
in
mov
jmp
pop
dec
je
or
adc
testb
push
xchg
loope
out
sbb
and
adc
or
cmp
adc
pop
lret
adc
or
imul
xchg
pop
sbb
pop
adc
fdivl
ljmp
aaa
push
ja
cmpsb
sub
and
lods
in
imul
in
outsb
sbb
or
ror
in
mov
push
xchg
add
fwait
mov
jae
mov
push
into
movsl
lock
into
cmp
in
rorb
push
rolb
cmp
or
adc
push
cld
in
sahf
cmp
mov
insl
push
adc
xchg
xchg
sub
sarb
adc
ret
pop
outsl
rcrl
ds
rcrb
mov
arpl
inc
lds
mov
inc
insb
aam
mov
stc
imul
cwtl
lock
mov
sbb
mov
mov
sub
sub
inc
jo
repnz
jae
adc
jle
in
dec
pop
mov
shlb
inc
pop
cld
repnz
mov
cmp
adc
fstpl
notb
mov
cld
xchg
adc
enter
lods
lahf
insl
movsb
jp
sub
lret
sbb
push
sbb
test
jg
int3
xor
push
inc
jae
in
std
je
dec
addb
lock
cmp
in
clc
mov
int
stos
bound
cmp
sbb
shrb
or
push
insb
les
aad
ds
sarb
enter
dec
aam
adc
sbb
enter
mov
lahf
movsl
or
pop
or
add
jb
sub
sub
sbb
xor
les
lret
movsb
rcll
shrb
insb
fbstp
rorl
gs
cmp
adc
clc
and
loop
je
out
fsubrs
push
mov
jb
pop
jne
cmp
push
jne
vpermi2q
pusha
dec
jl
push
addr16
push
adc
fs
dec
or
shlb
leave
adc
or
pop
seto
xor
clc
rcl
push
popa
jp
and
adcb
imul
mov
push
or
push
dec
sub
push
push
les
dec
jge
sub
push
jns
iret
jo
out
lret
outsb
adc
iret
pop
pop
cmpb
rclb
jge
cmp
in
cltd
adc
shrb
loopne
push
movsb
push
sub
outsl
jp
sub
xchg
and
pop
outsb
inc
sbb
lret
testl
push
cmp
std
push
adc
sbb
push
add
xor
fwait
xchg
adc
daa
enter
int
add
sbb
je
sbb
push
mov
iret
mov
ret
hlt
jp
cmpsb
aad
ja
je
rclb
out
iret
dec
mov
sub
test
push
sbb
mov
lcall
add
lods
mov
xchg
fsubl
push
rorb
faddl
jle
jae
sbb
cmp
inc
aas
dec
adcb
jns
sub
and
clc
jbe
shl
call
repz
mov
jb
outsb
xor
mov
divl
jnp
mov
clc
mov
lock
or
int3
insb
mov
adc
shl
sub
inc
mov
fs
xor
add
mov
sbbl
and
adc
insl
xor
dec
movsb
and
call
cmp
cli
in
sub
add
xchg
in
adc
in
dec
push
push
xor
stc
sbb
insb
arpl
movsl
push
insb
push
mov
clc
mov
sahf
cmp
rclb
jb
push
mov
or
adcb
mov
and
adc
scas
push
or
push
sbb
push
mov
mov
cltd
inc
adc
inc
xor
mov
jnp
push
fmuls
jl
adc
jecxz
adc
sbb
rorb
daa
fcompl
scas
lods
xor
fmul
mov
sbb
push
int3
mov
xchg
jo
cltd
out
dec
sar
xor
and
push
test
or
mov
fs
test
stos
loopne
sahf
std
adc
add
and
daa
sub
popa
mov
xchg
mov
in
push
pop
mov
cmp
add
mov
fisubrs
insb
shll
andb
jae
sub
pop
push
and
or
xchg
ret
outsb
fists
or
sub
and
cmpsl
mov
or
inc
fdivrp
data16
out
mov
mov
nop
push
adc
sub
aam
cmp
lret
rcrb
xchg
and
push
enter
and
push
add
cmp
cmpsb
clc
out
shll
add
jl
pop
js
andb
jg
mov
pop
rclb
cmpsl
cmpsb
xchg
push
cmp
pop
or
mov
cmp
lcall
enter
lea
mov
adc
xor
sbb
add
xor
mov
arpl
nop
shlb
mov
in
sbb
hlt
ds
cmp
repz
aam
push
std
xchg
jp
js
jo
flds
inc
test
test
insl
and
nop
loop
jge
out
mov
xor
mov
and
xor
or
and
sti
push
push
mov
xchg
in
aas
popa
in
mov
inc
add
pushf
cwtl
adc
mov
jmp
cmovl
pusha
cmp
mov
daa
pop
js
dec
mov
int3
mov
lods
mov
xchg
filds
mov
adc
dec
push
out
mov
lods
dec
inc
call
sbb
push
jno
in
sub
xor
inc
sbb
insl
leave
lret
popf
nop
mov
je
fidivrs
and
push
mov
lods
and
push
xor
push
jno
in
sub
adc
insl
aad
mov
cltd
nop
mov
rcrl
mov
dec
insl
icebp
leave
pop
or
mov
jmp
push
pusha
je,pt
push
hlt
fistpll
pop
xchg
pop
dec
shl
insb
mov
lods
mov
xchg
mov
jae
mov
test
in
inc
add
insl
dec
nop
mov
inc
js
insl
xor
sbb
adcl
in
test
and
xor
or
and
sti
push
push
popf
dec
jecxz
ds
dec
adc
in
fdivs
daa
push
push
xchg
add
ja
jo
in
sub
cmp
nop
inc
sub
insl
ror
adc
nop
andb
mov
rolb
outsl
movsl
jge
sub
fwait
rep
fiadds
adc
sub
ljmp
xchg
sarb
jno
in
sub
inc
inc
inc
loopne
sahf
clc
iret
ds
shl
fildll
and
cmp
push
xor
pusha
in
sub
sbb
adc
nop
jle
popf
mov
xchg
push
mov
stos
jp
inc
insb
add
lahf
xchg
out
mov
lods
dec
inc
or
xor
inc
jno
in
sub
inc
add
adc
lret
repz
mov
or
dec
push
jecxz
inc
xor
dec
xchg
or
ja
jo
in
sub
inc
xchg
inc
xor
insl
imul
scas
gs
jle
pushf
loopne
jbe
aam
lods
adc
push
loope
dec
add
pushf
jo
in
sub
jo
les
insl
jns
repnz
mov
in
and
add
push
cmp
repz
jmp
push
inc
cli
inc
gs
xchg
push
ds
sub
pusha
loop
jns
repnz
mov
in
and
cld
ds
cmp
repz
insb
mov
adc
lods
ds
dec
cmp
movsb
dec
dec
jmp
sbb
push
lods
addb
xchg
xchg
notb
in
sub
add
inc
in
mov
pop
xchg
inc
fdivrl
mov
push
cld
inc
dec
sub
push
mov
lods
and
pop
push
xor
inc
jno
in
sub
or
insl
movsl
lret
lods
xchg
pop
xchg
stc
lret
repz
mov
adc
dec
push
out
lods
mov
cmp
jo
mov
nop
inc
inc
pop
inc
xor
insl
imul
mov
mov
shl
popf
inc
iret
jb
or
dec
lods
lock
pop
push
inc
xchg
mov
in
sub
inc
fs
inc
ret
insl
pop
lret
insl
nop
stos
sarl
jmp
paddusb
push
aam
lods
adc
ja
in
inc
add
insl
dec
nop
mov
inc
jl
insl
sbb
push
adc
mov
in
xor
or
sbb
clc
repz
push
cmp
shlb
scas
sub
mov
xor
lret
xor
fidivs
cvttps2pi
jl
sbb
sub
add
sbb
scas
push
adc
inc
loopne
mov
push
or
mov
jmp
push
fs
filds
pop
popa
dec
lret
out
mov
lods
rolb
rcll
inc
in
push
in
pop
shlb
or
fwait
jmp
push
mov
cwtl
cmp
fisubs
mov
mov
xor
adc
in
sub
inc
inc
inc
loopne
mov
pop
gs
mov
push
insl
jmp
nop
cs
mov
jmp
aas
cmp
nop
fildll
pop
add
stos
out
mov
lods
mov
xchg
xchg
xor
sahf
lods
imul
jo
in
sub
je
insl
xor
nop
out
lea
in
xor
adc
and
add
push
fucomip
push
inc
test
int3
jo
in
sub
movsb
inc
mov
mov
insl
and
or
xor
repnz
xor
mov
and
js
adc
and
sti
push
push
mov
fwait
in
sub
sub
cmp
daa
out
mov
lods
sbb
movhps
inc
jno
in
ss
inc
sbb
insl
ror
mov
movsl
nop
xchg
gs
lret
push
loopne
dec
aas
out
mov
fwait
pop
xchg
es
ja
jo
in
sub
inc
inc
mov
adc
sahf
gs
call
rcrb
clc
scas
ds
pushf
rep
fiadds
pop
out
mov
lods
js
out
push
lea
js
adc
sub
in
mov
pop
xchg
pop
push
ds
dec
adc
and
mov
cwtl
push
jo
sarb
repz
dec
pop
pusha
mov
out
mov
lods
push
xchg
mov
inc
in
xor
inc
in
adc
inc
fnstcw
jmp
push
jl
sarb
insb
repz
lea
jecxz
inc
xlat
push
mov
lock
in
push
lock
jb
or
jmp
push
nop
movsb
cmp
push
les
dec
jl
cli
lods
fs
push
jne
xor
jno
in
sub
lock
inc
mov
enter
mov
push
cld
inc
dec
sub
push
mov
lods
and
pop
push
sub
xchg
in
sub
adc
adc
shll
mov
dec
insl
in
les
mov
jo
les
pusha
je,pt
push
hlt
pusha
fistpll
pop
nop
pop
dec
iret
out
mov
lods
les
push
leave
xchg
jle
js
jo
fcmovbe
scas
iret
outsb
lods
or
aas
push
cmc
xchg
push
ds
sub
inc
insb
push
insl
test
out
mov
into
mov
adc
and
clc
ds
cmp
ficoml
xchg
push
ja
jo
in
sub
cwtl
inc
lods
inc
mov
insl
and
adc
mov
in
nop
cvttps2pi
cmpb
hlt
sub
pop
pop
sbb
dec
xchg
out
mov
sub
mov
dec
insl
in
leave
sub
push
nop
add
mov
in
insb
cmovs
pop
cmp
hlt
mov
and
js
dec
cmpsl
out
mov
lods
pushf
inc
push
lods
mov
jp
loope
inc
adc
push
jnp
mov
cwtl
push
jo
les
pop
repz
dec
pop
pusha
gs
out
mov
lods
mov
xchg
xchg
cmp
sbb
fdivs
pop
test
test
in
sub
pop
inc
jo
push
rep
lret
jno
fidivrl
adc
and
add
push
cmp
repz
dec
in
imul
mov
mov
ds
cmp
int3
xor
out
mov
lods
nop
inc
notl
pop
xchg
sarb
jno
in
sub
clc
inc
dec
inc
call
in
push
sarb
cmp
xchg
out
mov
lods
and
push
xor
pusha
in
sub
adc
adc
enter
push
fsub
dec
inc
out
mov
lods
push
inc
add
sbb
pusha
in
sub
inc
adc
adc
enter
lret
push
loopne
dec
dec
out
mov
fwait
pop
xchg
mov
in
sub
pop
inc
push
pop
lret
imul
sbb
clc
ds
cmp
ficoml
xchg
push
ja
jo
in
sub
mov
xor
lret
and
mov
in
pop
mov
sub
mov
dec
mov
pop
lods
loopne
push
out
adc
jae
decl
arpl
or
jecxz
ss
mov
in
lods
rcrb
jnp
shll
loopne
lret
mov
andl
sbbb
cmp
fmul
mov
sar
xchg
push
mov
xor
mov
rcl
imul
adc
lods
sub
and
add
cmp
sub
out
pop
push
sar
push
loop
arpl
pop
pop
ja
pop
pop
jge
push
loopne
xor
add
sub
sub
fsubrl
arpl
jb
add
test
mov
repz
dec
arpl
pushf
inc
jnp
ja
jmp
pop
add
imul
xor
repz
xor
cmpsb
dec
leave
or
xlat
call
jle
das
fiadds
mov
and
xchg
dec
sbb
dec
jns
or
popa
jae
pop
stos
mov
test
xor
out
inc
mov
and
cmp
into
jnp
aas
rcrb
mov
mov
inc
sbbb
stos
inc
dec
jmp
hlt
push
mov
movsb
daa
adc
mov
and
inc
inc
adc
cmp
mov
sbbb
mov
cmpsl
push
push
hlt
mov
jb
add
push
cmpsb
sub
xchg
inc
test
mov
pop
pop
add
mov
jp
or
cltd
and
in
je
subl
mov
mov
mov
mov
cmc
mov
mov
aad
and
notb
xor
mov
sbb
push
mov
fiaddl
inc
jo
mov
stos
ret
ret
ljmp
push
push
adc
inc
sbb
jo
push
pop
jae
pushf
pop
fdivl
push
inc
out
test
cmpsl
popl
arpl
repnz
push
mov
mov
pop
sti
adc
pop
inc
sbb
mov
cmpsl
mulb
test
in
call
movsl
repnz
and
or
xchg
mov
xchg
hlt
dec
mov
in
xchg
loop
imul
outsb
adc
inc
maxps
scas
mov
popa
insb
sub
jecxz
push
rorl
and
jb
dec
pop
orl
add
inc
inc
and
aas
sbb
shrb
andl
push
adc
xor
xchg
testl
ss
sbb
sub
push
mov
clc
mov
sahf
xchg
test
mov
outsl
enter
int3
insl
cmc
sub
inc
insl
out
inc
mov
rolb
and
lret
jl
rcl
sub
cwtl
push
inc
mov
and
iret
lcall
add
jge
icebp
decl
pop
ret
cmc
andb
xchg
mov
push
hlt
mov
divb
mov
fwait
mov
dec
fs
or
divl
pop
not
rolb
mov
adc
jno
dec
nop
cmp
add
push
jle
add
stc
sahf
cmp
pushf
push
mov
jno
sbb
lret
out
jns
lret
in
inc
cmp
shlb
xchg
ret
mov
std
sub
out
scas
cmp
imul
aas
push
pop
push
dec
ja,pt
shll
lods
dec
movsl
fldcw
add
jbe
mov
jb
roll
jo
push
lcall
and
dec
pop
xchg
or
xor
jae
cmpsl
je
jmp
mov
sub
lret
mov
fcomps
dec
xor
xchg
mov
nop
mov
hlt
inc
addr16
movsl
loopne
cmp
jmp
dec
mov
mov
dec
push
aas
mov
int3
push
or
addl
xor
imul
push
fwait
bnd
ret
xor
clc
sbb
ljmp
jecxz
dec
sub
and
decb
cld
pop
sahf
push
decb
outsl
sbb
out
andl
aas
adc
sbb
mov
sub
pop
mov
xor
xor
std
dec
mov
scas
sbb
ss
std
mov
xor
jl
popf
iret
insl
pusha
sbb
arpl
dec
or
sbb
mov
aas
jnp
jne
jp
clc
pop
jno
mov
cs
mov
inc
inc
dec
xor
mov
ret
imul
xlat
dec
aas
add
or
xlat
xor
loopne
das
ss
or
cmp
testl
shr
les
ja
pop
push
aaa
xor
xor
mov
adc
arpl
jae
mov
bound
push
cmpsb
xlat
fistps
popa
fwait
dec
sbb
lods
pop
outsb
cmpsl
push
gs
lret
loop
dec
lcall
xchg
test
fwait
fisttps
or
inc
push
and
rolb
in
data16
es
jmp
fldz
pop
xchg
lahf
pop
mov
xchg
pop
pop
xchg
loope
adc
sbb
add
adc
dec
mov
jmp
mov
dec
xchg
dec
stc
lods
pushf
add
mov
xor
int3
inc
insl
dec
enter
mov
xor
int3
xor
ss
outsl
nop
ja
sub
daa
int3
adc
adcl
push
adc
push
mov
inc
sub
jbe
mov
mov
dec
or
enter
pop
fwait
mov
nop
xor
push
je
mov
loop
dec
jnp
lea
and
mov
or
aas
inc
jp
mov
stos
outsb
rolb
push
mov
shlb
push
cld
dec
fsubs
push
xchg
je
push
mov
fwait
mov
or
inc
scas
or
testl
enter
cmp
nop
movsb
out
ret
ret
xchg
rorb
xor
jno
push
mov
les
popf
data16
push
add
xchg
stos
pusha
or
and
rcll
or
jno
or
ret
movsl
nop
or
les
jp
inc
add
and
pop
gs
leave
mov
mov
sbb
cmp
and
xchg
pop
and
les
pop
cmpsl
xchg
inc
mov
xchg
mov
repnz
inc
xor
mov
push
ljmp
cmp
dec
das
adc
mov
dec
mov
dec
cmp
das
and
and
imul
jecxz
xor
imul
test
and
dec
mov
inc
push
lds
imul
aas
dec
push
int3
mov
cltd
push
aam
or
xchg
xchg
ja
inc
inc
jl
adc
push
bound
or
xchg
data16
test
pop
lea
xchg
sbb
arpl
adc
pop
shll
seto
in
sub
mov
add
data16
rol
inc
fdivrs
lock
push
jmp
in
lock
aad
sub
sbb
ffree
cwtl
push
sub
push
sub
out
jl
or
stos
bound
dec
hlt
xor
rcr
mov
aad
fadds
repz
pop
in
rorb
push
cmp
je
xor
adc
outsb
adc
pop
dec
loope
mov
add
cwtl
push
mov
adc
fldenv
cmp
dec
xchg
imul
cld
std
pop
adc
xchg
scas
dec
fadd
xlat
jb
imul
fsub
decl
cmpsl
jecxz
pop
mov
pop
lahf
or
sbb
or
xchg
pop
jbe
arpl
mov
mov
js
in
dec
xchg
repnz
mov
call
movsb
testl
dec
and
push
into
pusha
nop
and
pop
or
iret
sbb
or
aas
repnz
cmp
je
in
sbb
push
icebp
out
imul
cmc
mov
movl
pop
shl
aaa
hlt
mov
je
int
scas
xchg
sbb
test
jle
or
sub
adc
jmp
std
push
divl
sar
push
dec
inc
dec
ret
bound
or
sub
insl
sti
sbb
nop
rclb
mov
ss
lahf
mov
jge
ds
or
cmpsb
jp
jmp
fwait
jno
pop
dec
xlat
jb
xor
mov
outsb
jns
cmpsb
loope
fistps
add
scas
push
shlb
in
pop
int3
stos
lock
or
mov
push
dec
fs
fadd
fcoms
jb
out
push
loop
xchg
sub
inc
push
pop
or
pop
mov
lahf
loop
hlt
mov
push
xchg
sub
ja
stc
arpl
dec
mov
out
fidivrl
pop
pop
inc
cmp
je
adc
orl
in
add
test
mov
jle
mov
and
and
add
jne
aas
arpl
lcallw
hlt
inc
das
or
cwtl
sbb
ret
jmp
movsl
stc
mov
jecxz
push
movsl
inc
xchg
dec
mov
add
cltd
scas
lahf
std
and
cmpsl
aam
rol
ljmp
sti
mov
rcll
mov
popf
loope
mov
mov
xchg
xchg
sbb
push
jo
aam
je
scas
push
bound
clc
subb
out
std
mov
push
mov
cmpsb
pop
push
sub
out
adc
pop
mov
sbb
icebp
ja
add
clc
pop
jo
mov
xor
pop
mov
xcrypt-cbc
cmpsl
push
xchg
fsubs
jmp
cmpsb
lahf
xorb
cmp
out
or
jge
in
xor
jge
adc
in
sbb
out
mov
scas
cltd
or
aam
jns
and
jbe
addr16
bound
test
mov
loopne
sbb
rcll
movsb
xchg
sub
ret
cmp
mov
adc
pop
pop
call
testl
cmpb
imul
dec
loope
mov
loop
daa
fs
add
add
ja
lret
dec
mov
nop
rcrl
dec
xchg
sub
mov
and
ja
xlat
inc
into
lock
outsl
add
shrb
shl
sti
dec
pushf
in
jmp
movsl
lahf
sub
sub
mov
xchg
cmpsl
sub
adc
into
pop
ljmp
jne
stos
sub
ss
fimuls
gs
imul
push
out
cwtl
push
xchg
cmpsl
mov
push
mov
test
gs
jno
sub
push
fs
xchg
daa
in
ja
out
leave
fisubs
push
imul
mov
or
ret
pushf
js
fidivs
dec
jg
jmp
decb
shll
shlb
stc
add
inc
push
movsl
add
push
xchg
add
cmpl
icebp
jno
in
test
jge
out
fwait
inc
xchg
pushaw
dec
jo
and
sbb
iret
sahf
or
sbb
int
cmc
scas
mov
fisubrl
mov
push
jo
mov
enter
inc
test
aas
out
movsb
cwtl
sbb
clc
lods
cmp
outsb
fs
add
mov
cmp
xchg
test
mov
movq
inc
jl
push
and
push
or
fldt
test
adc
push
stos
pop
pop
mov
inc
lahf
mov
push
xlat
sbb
lea
mov
je
push
scas
bound
cmp
hlt
mov
inc
xor
stos
in
out
cmp
sahf
fsubrp
jo
je
sbb
dec
hlt
xchg
jecxz
cli
std
mov
jnp
inc
lods
lea
and
or
inc
fnstsw
movb
aad
mov
pop
push
pop
aaa
sahf
enter
js
mov
adc
jae
ja
icebp
imul
fldcw
cmp
ljmp
lock
adc
pop
or
in
cmp
repnz
push
sub
pop
fdivrp
push
adc
rcr
push
repz
pop
les
pusha
repz
dec
sub
push
jne
add
pop
sbb
fmul
and
subl
repz
into
push
pop
arpl
fistl
sub
and
jmp
outsb
movsb
cmc
sbb
gs
testl
push
insb
add
mov
sub
iret
pusha
cmc
call
mov
das
stc
mov
jns
sbb
out
stc
jno
and
fcoml
ljmpw
or
and
dec
imul
loopne
lahf
ds
sbb
jb
cmp
mov
xchg
add
scas
pusha
dec
adc
pop
insl
aam
js
xor
pushf
cmp
notw
push
ret
sbb
push
add
scas
push
add
dec
mov
out
call
jbe
jnp
dec
mov
mov
push
std
out
mov
and
cmpsb
mov
dec
xchg
fstps
insl
push
or
push
movsb
add
push
mov
sarl
pop
movsl
inc
mov
outsb
shll
cmp
es
xchg
lods
pop
subb
push
jo
or
xlat
int3
sub
push
dec
lods
push
inc
mov
mov
inc
xchg
and
mov
fistpl
cli
lds
xchg
cli
loopne
mov
add
or
inc
mov
daa
icebp
or
addr16
fldl
iret
add
mov
jne
insl
push
pop
imul
cli
pop
pop
sahf
imull
mov
js
daa
mov
inc
jmp
fdivrp
bound
push
dec
sti
test
out
fs
iret
scas
insb
mov
or
imulb
in
lret
cmc
mov
cwtl
lret
cmp
repnz
bound
xor
daa
test
adc
enter
sbb
lock
inc
divb
es
nop
addb
ljmp
jb
pop
mov
mov
in
out
ror
lret
jb
xor
out
adc
sahf
das
rcr
adc
std
push
jp
and
mov
xor
and
lea
jne
and
dec
mov
xchg
push
mov
or
sub
and
xchg
cmp
dec
and
stc
mov
pop
and
fidivs
add
cmp
adc
lds
and
sbb
jb
jmp
lret
in
inc
ret
dec
das
fcomp
sbb
dec
jmp
inc
stos
xchg
out
scas
imul
stc
dec
push
mov
xchg
push
pop
clc
aad
cmp
test
dec
bound
sarb
jb
inc
dec
popa
test
mov
repnz
xchg
cmp
xchg
adc
dec
xchg
repnz
ja
test
lock
sub
mov
movsl
cs
movsb
push
jnp
das
adc
fs
imul
cmp
in
sbb
and
sbb
sar
mov
movsb
adc
in
jbe
iret
and
mov
xchg
sahf
or
jns
xor
imul
sbb
cmpsl
adc
rorl
cltd
inc
adc
mov
test
mov
repnz
xchg
adc
push
cmp
and
fstl
bound
or
test
rclb
cmpsl
mov
xchg
bswap
and
out
cmpsl
mov
push
js
dec
push
jmp
test
cli
aaa
pop
enter
sbb
jo,pt
flds
mov
adc
push
out
xor
cmpsl
es
std
dec
and
nop
xchg
push
cmpsb
lret
ljmp
divb
pop
mov
xor
mov
or
mov
out
sbb
add
jg
xor
mov
test
jmp
mov
pop
arpl
mov
std
cld
aam
and
inc
lret
hlt
rorb
test
fisubl
pop
xor
out
xchg
loopne
adc
call
cli
into
pop
dec
jae
in
xchg
les
gs
dec
pop
les
xor
mov
pusha
mov
out
adcl
inc
lods
mov
ljmp
push
fists
in
outsl
test
inc
fwait
sarl
int3
push
int3
inc
aad
sub
pop
enter
jmp
insb
mov
mov
jmp
inc
dec
pusha
jns
out
clc
js
and
andps
sbb
inc
lret
push
sub
std
ret
cmp
mov
rorl
ficomps
jbe
cmp
fnstcw
shl
cmp
popa
movsl
hlt
leave
aaa
addr16
add
push
mov
jo
xchg
sahf
cmp
cwtl
movsb
ret
ret
dec
sar
jmp
xlat
jae
sbb
inc
xor
sbb
sbb
sub
lea
xchg
add
sub
hlt
or
xor
mov
sbb
testl
insb
xor
je
cmpsb
cmp
add
cwtl
arpl
jae
mov
sbb
xor
pop
cmc
mov
negl
ret
aam
enter
and
in
fstpl
ret
lret
les
mov
movsl
jnp
add
loope
decl
sar
dec
sbb
mov
mov
and
xor
and
sub
ds
push
sbb
jecxz
sbb
cltd
arpl
loopne
aam
int3
jb
mov
aad
orb
imul
push
rolb
aam
sbb
mov
cltd
lret
mov
sub
shrl
xchg
insb
push
insl
inc
mov
ds
cmp
ror
or
jg
add
dec
test
add
jg
adc
decl
and
mov
test
adc
mov
lret
add
stos
and
push
xchg
push
inc
flds
push
cmp
inc
aas
add
jle
rcll
shl
inc
popf
scas
fisubl
loopne
pusha
in
loop
aaa
pop
out
sbb
or
sbb
dec
jbe
jbe
cmp
or
lret
inc
push
mov
mov
xor
aas
cmc
outsb
mov
cmp
sbb
lods
outsl
sub
in
shll
dec
jno
sub
mov
dec
add
roll
mov
fnstcw
in
cld
jle
repz
adc
int3
push
lods
push
sahf
stos
je
iret
and
imul
aam
mov
sub
dec
mov
cli
jno
mov
jb
or
inc
push
push
insl
xchg
shlb
sub
test
lock
out
and
sub
xlat
lcall
adc
enter
mov
daa
mov
mov
mov
sarl
loope
fneni(8087
push
rol
sbb
xor
data16
test
adc
pop
xor
cmp
push
movsl
mov
adcb
xor
jmp
scas
rcr
push
jecxz
loopne
and
xor
addr16
inc
xor
mov
ja
cmp
imul
sub
dec
mov
mov
dec
jg
aad
jns
hlt
and
int3
pop
jb
enter
jno
mov
add
ret
sub
sahf
lock
cmp
xor
xchg
sahf
lods
xlat
lock
insl
inc
rclb
lock
and
adc
push
adc
popw
ljmp
nop
adc
mov
popa
and
call
mov
pop
decl
outsw
mov
xor
xor
out
aad
dec
fisubs
outsl
inc
mov
imul
pop
jne
movsl
push
sbb
xlat
pop
adc
outsl
movsb
mov
iret
je
push
and
xor
xchg
push
testb
and
hlt
adc
jmp
ja
aam
je
add
add
stos
cmp
adc
pop
cmp
scas
iret
mov
loop
sahf
mov
in
inc
ret
scas
rclb
cmp
adc
mov
cmpsb
cmp
sub
dec
mov
inc
xchg
enter
mov
roll
dec
mov
aaa
rolb
loop
sub
push
movsb
test
flds
jmp
or
arpl
xlat
cld
nop
inc
out
pop
loopne
lock
es
cmp
add
mov
cltd
pop
ret
mov
pop
jmp
movsb
lea
xsaveopt
or
jo
and
lock
arpl
aad
xchg
lcall
je
xchg
push
xchg
les
idivb
hlt
rclb
in
add
fwait
out
in
mov
lcall
outsb
sti
test
push
mov
daa
adc
pop
lock
pusha
or
add
dec
pop
add
and
pusha
iret
add
mov
pop
shl
lods
mov
xor
sbb
push
ret
data16
push
or
iret
inc
mov
push
sbb
clc
mov
jbe
and
fidivs
sub
cmp
push
mov
mov
or
ss
scas
nop
movsb
lock
mov
lret
mov
loopne
mov
adc
mov
xor
insb
shlb
sbb
cmp
push
mov
subb
mov
call
daa
out
aas
mov
adcl
sub
push
aad
icebp
mov
mov
xchg
sub
ja
mov
push
mov
mov
movsb
movsb
hlt
out
dec
dec
mov
mov
bound
insb
xchg
mov
int3
ret
jns
adc
add
xor
movsb
popf
cmpsl
into
in
add
pop
jge
test
and
adc
jbe
or
imul
out
test
push
sub
fsubs
cmp
cmp
jmp
cmp
and
sub
inc
pusha
cmp
jo
mov
sub
fsubrl
std
mov
outsb
sarb
scas
fwait
imul
popa
loope
push
insl
pop
adc
movsl
decl
enter
mov
lea
ja
jne
adc
aam
mov
mov
inc
or
xchg
xchg
js
mov
dec
push
pop
cli
sub
out
adc
push
and
push
shl
enter
inc
mov
repnz
sbb
xchg
test
mov
scas
xor
and
or
lahf
hlt
cwtl
leave
mov
push
xlat
and
cld
sahf
sub
icebp
or
mov
iret
cmpsb
shlb
sub
pop
and
movsl
push
out
popf
dec
add
xchg
std
mov
jb
add
add
cmp
in
test
adc
lret
adc
and
sar
mov
in
fsubrs
inc
sbb
sub
rcll
add
lods
lret
ss
adc
daa
mov
or
xchg
dec
xor
ffreep
movsl
jecxz
addl
idivl
jmp
pop
aam
xchg
adc
add
xchg
shll
incb
jl
loopne
rolb
enter
mov
out
pop
add
fidivrs
outsl
mull
mov
imul
pop
je
jl
sbb
jp
imul
es
cmp
adc
jge
push
xorb
jg
repz
push
bound
pop
lcall
test
inc
repz
addr16
ds
cmc
xchg
test
mov
dec
notb
shrb
cmc
lahf
jecxz
dec
js
into
loope
mov
pop
lea
mov
push
pusha
xchg
lea
adc
mov
push
daa
add
arpl
mov
inc
mov
or
xchg
out
fstps
ljmp
in
fldt
lcall
sub
mov
inc
push
cmp
inc
add
mov
outsb
fmul
and
adc
mov
out
jne
mov
cwtl
sbb
push
push
add
and
inc
push
fucomi
adc
jp
lahf
pop
bound
aaa
faddl
daa
enter
pop
das
cli
ret
lea
sbb
push
in
xchg
loope
in
pop
lds
repnz
pop
dec
fdiv
mov
sbb
inc
pop
pushf
sbb
adc
cmp
lcall
sub
pop
mov
hlt
add
test
les
push
or
jg
nop
xor
fcoms
push
pop
test
lock
mov
xchg
add
jnp
std
insb
or
push
mov
hlt
pusha
inc
addr16
jae
lahf
jns
push
push
fidivs
mov
xor
or
bound
pusha
xchg
out
xchg
hlt
std
dec
sbb
jbe
dec
loope
jns
xchg
pushf
mov
ja
jb
mov
loopne
imulb
lock
dec
hlt
mov
outsb
cli
jmp
stc
les
cmpsl
sbb
popa
nop
inc
pop
roll
aaa
ret
idiv
fimuls
jl
out
inc
hlt
out
jp
xchg
leave
sbb
lods
icebp
aaa
sti
fists
aad
jbe
addl
dec
fwait
call
sub
jbe
ds
cmc
in
hlt
pop
shlb
dec
popa
push
sahf
add
lcall
aas
pop
hlt
ss
xor
into
inc
add
test
pop
fdiv
stc
or
jbe
imul
in
and
inc
add
imul
fldenv
pushf
aas
inc
lahf
sbb
xchg
xor
or
cltd
test
xor
pop
cmp
xchg
lret
mov
adc
adc
inc
repz
jg
pop
fsubrs
clc
jmp
adc
loope
or
les
popf
into
add
lds
lcall
cltd
insb
ja
mov
fld
and
add
stos
xchg
loopne
imul
push
call
les
cmpsl
inc
cmp
imul
inc
jmp
jne
push
push
sub
repnz
mov
inc
dec
fildll
mov
jne
rclb
adc
stos
dec
repz
out
imul
mov
mov
pop
cwtl
inc
scas
addr16
xor
testb
push
mov
pop
je
insl
int3
sbb
push
shll
cmpsl
jnp
icebp
sub
fs
stos
jg
out
lahf
lods
bound
out
push
data16
sbb
fcomps
jae
mov
or
mov
and
scas
mov
mov
stc
push
fs
outsl
sbb
fisubrl
mov
mov
call
ljmp
mov
sub
xor
cmpb
xlat
adc
push
movaps
or
mov
hlt
aam
cmc
out
cmpb
add
jmp
in
aas
imul
cmpsb
jne
data16
sahf
push
arpl
pop
mov
hlt
pop
sahf
in
sbb
cmp
mov
lea
cmp
mov
xchg
jle
lret
movsl
lea
hlt
jmp
or
mov
dec
aam
pushf
hlt
je
push
cmp
ss
add
shll
daa
daa
mov
je
cmp
sbb
into
insb
pop
dec
xchg
es
mov
xor
or
dec
in
mov
jne
sub
ljmp
add
stc
push
sbb
mov
repnz
sbb
dec
fmuls
sarb
bound
pop
fcompl
cmp
iret
rclb
inc
push
mov
xchg
push
or
hlt
es
insl
clc
dec
xor
add
sbb
inc
nop
fadd
mov
test
arpl
or
hlt
mov
stc
and
xor
test
ss
fsubs
or
bound
lea
hlt
inc
clc
ret
sub
push
in
fwait
loope
cmpsl
pop
aaa
hlt
xchg
sar
mov
ljmp
fadds
ret
mov
bound
ret
dec
leave
hlt
inc
cmpsl
pop
test
mov
add
lahf
add
cwtl
hlt
xor
movsl
inc
fisttpl
add
add
cltd
xchg
mov
pop
scas
pop
or
ja
add
xchg
mov
push
jns
fsubr
sbb
or
movsb
aam
dec
ljmp
cmp
push
fdivs
or
inc
mov
lea
pop
or
dec
add
sarb
inc
inc
mov
jnp
out
in
neg
xchg
add
jae
in
sub
lret
pushf
or
xchg
stos
mov
push
out
pop
push
ja
push
or
xchg
mull
ficompl
aam
inc
jbe
xchg
and
sbb
add
mov
jno
sub
packsswb
jne
mov
aam
mov
jmp
or
repz
jnp
xor
mov
or
dec
subl
dec
and
sbb
leave
insb
in
loop
lcall
inc
mov
mov
lods
iret
mov
jb
int3
sbb
iret
or
and
mov
imul
or
push
cmp
cld
dec
xor
sbb
rolb
stos
sahf
pop
out
scas
movsl
pop
push
rclb
sbb
xor
out
jns
addr16
mov
rcrl
mov
js
stos
mov
stc
pusha
push
je
sbb
pop
das
sbb
test
sbb
or
xor
or
dec
sub
dec
cmp
cmpsl
push
dec
out
setge
in
or
dec
inc
dec
insl
cmp
inc
pop
daa
pusha
or
pusha
sbb
inc
aas
pop
mov
xor
pop
cmc
repz
in
push
adc
sahf
push
xchg
push
insb
ljmp
lock
pop
incl
sub
lock
mov
pusha
idivl
mov
inc
movnti
repnz
in
pop
imul
mov
xchg
mov
hlt
cltd
out
xlat
jmp
es
lcall
push
and
popf
lret
jne
inc
push
mov
ret
cmp
jge
in
outsl
add
xchg
aaa
sub
outsl
mov
imul
adc
jbe
push
mov
int3
pusha
je
push
and
adc
inc
sbb
nop
mov
out
lcall
ret
clc
dec
loopne
bnd
mov
clc
sbb
testl
sub
je
imul
jg
rcr
clc
mov
or
pop
outsl
ljmp
movsl
pop
pop
push
iret
into
jge
jno
imul
pop
adc
sub
add
xchg
cmpsl
out
adc
mov
rcrb
aam
sarl
div
xchg
fisttpll
pop
cld
fwait
push
lock
push
mov
lock
lret
fists
and
fsubs
aam
xchg
lahf
je
pop
mov
jo
jns
dec
xchg
add
mov
jp
pop
adc
or
sbb
mov
adc
lret
lret
mov
add
ss
icebp
sahf
fst
add
testl
idiv
add
cmpsl
xor
add
std
xchg
push
add
movsb
pop
cmp
sub
add
inc
mov
fisttpl
movsb
jnp
jl
lds
and
iret
jbe
jmp
mov
pop
mov
std
fs
sub
arpl
push
dec
push
aas
mov
and
mov
pushf
jae
mov
aam
icebp
repz
xor
mov
sbb
and
test
cltd
sbb
and
jmp
push
lods
xchg
fdivs
and
lret
cli
inc
repnz
movsb
sbb
jno
jle
fsubrp
dec
xchg
or
push
add
push
std
mov
lcall
sbb
pushl
adc
cmp
es
cmp
out
aas
imul
mov
stos
push
mov
mov
push
lock
ffree
imul
xchg
push
cli
sti
shll
and
cs
lcall
shrb
jno
cwtl
cmpsb
call
dec
or
aad
dec
pop
push
dec
out
out
sub
scas
dec
aad
sub
jnp
or
cmc
mov
lods
loopne
inc
jns
xchg
jg
cmpsl
lahf
jmp
push
stos
cltd
mov
sub
inc
mov
sar
bound
movsb
cmpl
inc
add
sahf
sub
or
mov
pusha
pop
nop
stc
xchg
push
enter
insb
push
insl
lods
hlt
push
and
xor
mov
push
add
inc
cmc
push
xchg
jmp
movsl
push
inc
icebp
mov
int3
js
outsb
mov
shl
repz
aaa
inc
add
ss
repnz
push
mov
imul
pop
iret
arpl
xchg
xchg
push
add
ljmp
stos
aam
pop
ficomps
or
dec
and
notb
jb
sbb
ss
cmpsb
push
lahf
mov
fldl
push
cld
lds
cltd
gs
mov
cmp
imul
dec
dec
mov
std
sub
aam
dec
add
lret
sbb
int3
push
xor
ljmp
daa
stos
lcall
or
fisubrl
push
or
pop
pushf
data16
enter
jle
or
add
ljmp
add
push
or
pop
out
jge
push
divb
sti
and
pop
pop
mov
std
je
inc
inc
or
hlt
sub
rolb
adc
pop
jmp
ja
in
repnz
mov
ficoml
lcall
clc
rclb
push
jl
push
sub
imul
xchg
lahf
or
push
test
into
rclb
testl
bound
enter
iret
mov
push
cmp
mov
popf
sbb
repnz
imull
cltd
cmp
mov
add
lock
test
push
mov
xchg
mov
push
mov
ret
inc
push
sub
and
scas
cmpsb
insl
repnz
movsl
lahf
inc
ds
cld
dec
lcall
insl
mov
inc
add
mov
inc
push
icebp
pusha
testb
push
jg
data16
adc
shll
pop
out
xor
xor
pop
xor
loope
in
mov
cwtl
stos
fstl
pushf
inc
add
pop
and
scas
mov
inc
out
in
decb
sbb
gs
sbb
movsl
cmpsb
add
fistpll
cmpsl
sbb
addr16
out
insb
inc
add
mov
push
push
and
pop
add
cmpsb
jp
int
sbb
movsb
push
adc
mov
jmp
mov
dec
or
sub
xchg
hlt
insb
inc
add
movsl
jns
jmp
push
adc
lock
xchg
repnz
fs
sbb
pop
sub
jae
mov
ljmp
xor
fwait
roll
jae
shl
inc
add
dec
jg
sbb
stos
ror
xchg
incl
movsl
repz
push
and
push
or
mov
inc
mov
mov
test
sbb
fmuls
aad
push
sbb
jne
test
mov
mov
mov
js
add
add
shll
ret
lods
aad
push
movsl
mov
xor
jg
insl
or
inc
in
scas
lret
pop
sub
sub
mov
inc
js
clc
stos
and
int3
inc
lds
mov
jae
inc
adc
inc
xor
dec
jle
fimuls
ljmp
stos
fs
test
mov
sbb
xchg
mov
and
push
lds
xbegin
pop
loopne
jle
inc
fisubl
add
xorl
fisubs
xchg
out
adc
mov
push
mov
mov
nop
and
adc
sbbb
jno
xor
mov
ljmp
mov
stc
xchg
mov
adc
insl
pop
lcall
mov
fs
add
dec
outsl
in
mov
fs
or
int
jo
js
xchg
pop
cmp
in
sbb
push
movsl
add
cmp
push
insl
mov
mov
cmp
ss
inc
in
mov
dec
sub
dec
cs
sbb
jmp
aas
inc
lods
in
shll
jns
dec
jae
lock
push
lahf
aam
lock
pushf
inc
insl
stos
int
clc
fistps
xor
aam
xor
test
mov
sahf
mov
push
cld
mov
repz
enter
hlt
jbe
jmp
pop
cld
ja
pushw
push
sub
in
sbb
xchg
jo
dec
imul
into
or
shlb
imul
dec
ss
scas
mov
rcl
sbb
or
mov
add
scas
push
pop
std
mov
or
fwait
inc
mov
sbb
push
in
mov
dec
clc
frstor
dec
xor
mov
mov
inc
ret
ss
es
push
adc
rcr
jle
in
dec
mov
ds
push
adc
jb
sbb
xchg
fidivs
mov
xor
push
sbb
fdivl
getsec
push
in
xlat
push
mov
loopne
add
mov
sub
ret
shrb
mov
xor
adc
popa
les
dec
scas
adc
lret
push
cmp
repnz
leave
icebp
lds
lods
push
sahf
lcall
subb
in
addr16
push
scas
and
sub
inc
add
inc
mov
xchg
push
fcmovbe
mov
sbb
cmpl
into
ret
mov
dec
ljmp
cmp
jmp
ret
dec
cltd
pop
sahf
pop
aaa
xlat
out
mov
push
or
cmpsl
sub
pushf
adc
sbb
adc
cmpsl
dec
int3
sarb
faddl
hlt
addr16
out
jl
std
xchg
add
mov
add
jl
lods
shrb
and
mov
or
xor
test
mov
xchg
pop
call
aaa
xchg
adc
pop
or
test
fucom
jns
in
gs
mov
xor
dec
xchg
cmpsl
cmp
imul
mov
lea
cmpsb
loopne
sub
hlt
aam
lcall
push
pushf
and
testl
inc
xchg
lods
fisubl
push
outsl
cmp
push
stc
fsubs
lods
cmp
shrb
xor
fs
int3
addr16
lret
cmp
stos
push
rcr
mov
leave
dec
ljmp
incl
xchg
hlt
fistps
lea
insb
cmp
add
xchg
fcoms
not
jnp
cmp
test
xor
insb
lds
dec
inc
jle
enter
int
inc
cmp
jnp
adc
adc
out
gs
movsl
clc
popl
add
pop
lret
stos
or
shlb
dec
dec
push
notb
in
rcll
adc
mov
dec
xchg
faddl
jnp
test
xor
imul
adc
lock
push
inc
int
add
jb
lods
rcrb
leave
daa
lcall
xchg
stos
xchg
imul
jb
int3
or
aad
pop
mov
jb
add
adcb
movsbl
adc
adc
and
lea
adc
mov
xchg
xchg
sbb
popa
repnz
mov
push
out
mov
js
or
mov
jecxz
jmp
adc
repz
lea
nop
and
mov
in
out
jns
subl
adc
in
adc
fdivl
push
xlat
into
aam
push
scas
push
and
jns
icebp
sub
insl
and
cmpsl
add
mov
sar
mov
lea
xor
dec
mov
jmp
inc
rcrb
stc
sbb
and
in
lods
sub
imul
sbb
mov
xor
push
mov
lcall
mov
mov
hlt
dec
mov
cmpsb
loopne
push
adc
cmc
fidivrs
mov
and
lds
out
jno
or
sub
inc
push
jge
mov
insb
in
std
fstpl
call
push
repnz
test
dec
cmpsl
test
pop
xchg
xor
lods
dec
and
js
xor
and
nop
out
ds
test
xor
iret
loopne
mov
mov
rcr
ds
add
iret
pushf
xchg
mulb
push
in
sub
adc
and
mov
push
je
ljmp
sti
test
pop
xor
in
fsubrl
mov
mov
inc
mov
cwtl
xor
adcl
sbbb
mov
cmp
cld
or
test
lock
fdivr
sbb
lock
out
hlt
nop
int
mov
scas
xchg
or
lret
addr16
lret
pop
jb
in
fldenv
or
pop
or
iret
push
mov
movsl
test
into
pushf
xchg
xchg
movsb
testb
popf
pop
xchg
mov
arpl
mov
mov
into
inc
mov
inc
incl
ss
daa
sub
cmp
xchg
popa
out
add
cmpl
cwtl
pop
test
aas
insb
dec
and
push
and
in
mov
sbb
in
jb
push
sub
inc
push
arpl
repz
cmpl
dec
test
pop
dec
movsb
fcomps
sbb
sbb
mov
pusha
rcl
jmp
adc
and
mov
test
sub
pop
xchg
sbb
jo
loopne
adc
push
dec
and
push
pop
push
xchg
imul
and
fiadds
push
mov
fcompl
loope
add
sub
adc
add
dec
sbb
adc
sbb
cwtl
aas
int3
xor
cmp
ss
repz
lahf
lahf
cmp
enter
mov
negl
daa
sbb
scas
fcompl
jae
push
and
mov
dec
pop
mov
aam
out
or
aad
out
push
xor
sub
cli
cmp
cmp
shll
imul
test
pop
je
push
mov
ds
jle
inc
add
jo
and
push
aas
cmp
xor
mov
pusha
dec
cmp
cmp
xor
daa
cwtl
push
insb
movsl
movsb
dec
sbb
pop
arpl
add
out
xor
cmp
enter
ds
icebp
aaa
sbb
rcll
enter
adc
or
mov
scas
rclb
mov
dec
cmpl
cmpsb
and
cmc
mov
scas
mov
outsb
stos
or
sub
cmc
jle
xorl
dec
jg
ficompl
and
push
add
jp
aam
fstpt
popa
insl
addb
and
or
inc
movb
jae
xchg
mov
int
clc
or
inc
rcrb
dec
outsb
mul
repnz
mov
add
fists
iret
es
cltd
subb
jae
sbb
xchg
xor
xor
outsl
mov
fisubrs
repz
adc
arpl
mov
xchg
adc
add
sar
dec
add
popa
rorl
dec
fcom
out
divb
lret
push
add
aad
divb
mov
fwait
scas
pop
popa
lcall
cli
out
pop
pop
lcall
mov
fidivl
repz
ficompl
loopne
cmp
frstor
push
mov
repz
ja
xor
push
jnp
lock
neg
push
adc
xchg
mov
test
push
bound
adc
dec
lock
ds
or
fnstcw
in
cmpsb
pop
enter
fdiv
xor
jae
jmp
divb
aam
neg
test
add
mov
fiadds
dec
push
adc
into
push
out
adc
cmp
fidivl
test
imul
pop
mov
testl
jno
xor
dec
out
clc
xchg
cs
lret
jle
js
shr
cmc
push
movsl
inc
mov
xchg
arpl
dec
mov
stos
testl
imul
xchg
out
cmp
mov
adc
push
xchg
imul
fidivl
jle
ret
add
cmc
out
xchg
imul
rcl
mov
std
mov
and
lods
ss
cmpsb
loop
sub
dec
jb
add
push
add
test
and
shrl
adc
mov
loope
inc
mov
cmp
cmc
leave
arpl
xlat
and
add
dec
out
push
xlat
sub
lea
insl
add
outsb
in
scas
add
cmp
sti
test
inc
xlat
sub
faddp
jae
fisubrs
aas
or
scas
push
fmul
dec
aaa
fsubrl
sbb
cmp
inc
aad
inc
mov
sub
jns
pop
int3
add
inc
or
xor
incl
xlat
adc
pushf
mov
or
sub
popl
ljmp
mov
cmc
mov
inc
xchg
push
mov
and
aad
xor
xchg
aad
pop
inc
lock
pop
mov
sub
cwtl
and
cwtl
cmpsb
hlt
xchg
sub
cli
cs
ljmp
loopne
mov
cmpsl
sub
fwait
mov
jno
mov
out
leave
out
mov
dec
jno
push
jbe
inc
aam
imul
lahf
insb
mov
jae
sbb
xlat
sub
mov
or
push
pop
ss
adc
outsl
mov
mov
pop
pop
push
xchg
int3
inc
ja
jge
pop
aaa
or
inc
lock
aaa
and
cmp
out
nop
scas
push
ret
pop
xlat
cwtl
rclb
push
xor
xor
push
adc
enter
or
push
in
stos
adc
mov
pop
add
pop
mov
jno
mov
mov
hlt
mov
mov
into
or
jbe
xlat
push
mov
jmp
xchg
adc
mov
push
cli
cmovs
or
cmp
push
jg
jmp
int
mov
fildl
xor
lahf
mov
inc
adc
in
and
scas
jle
fs
dec
jae
stos
push
adc
mov
jmp
xchg
aam
hlt
adc
fbstp
push
testb
mov
or
cmp
push
jg
jmp
int3
stos
or
cltd
dec
inc
fidivrl
push
ljmp
sub
pop
and
scas
or
sub
push
rcr
xor
lock
pop
and
fmull
push
adc
fstp
and
push
adc
adcl
adc
add
xor
lods
jp
loopne
ds
mov
jecxz
cwtl
push
jg
inc
sbb
push
sbb
cmc
mull
pop
hlt
push
mov
mov
xor
test
jp
sbb
and
sbb
fdiv
xorb
push
xchg
pusha
cvtps2pd
dec
aad
push
pop
cs
popf
xchg
fcoml
push
or
add
rolb
mov
mov
adc
int
mov
nop
cmp
push
stos
dec
cmp
xchg
push
cltd
sub
mov
aaa
arpl
lahf
push
nop
xor
jmp
pop
mov
out
outsl
add
movsl
test
mov
repz
lret
test
mov
int3
je
lahf
xlat
xor
fidivrs
insl
pushf
cmp
or
xor
jp
dec
int3
cld
test
mov
pop
fiadds
or
movsl
mov
data16
inc
mov
ss
jle
shrl
adc
int
pop
jo
adc
test
xor
mov
jle
adc
lcall
popf
mov
fisubs
lods
cmp
push
mov
dec
cmpsb
sbb
cmp
iret
imul
andl
outsb
cwtl
inc
insl
jmp
test
std
xchg
cmpsb
push
add
inc
lods
push
or
dec
test
in
sub
sarb
fildll
and
mov
mov
test
cmp
out
test
mov
sbb
outsb
movsb
es
fs
stos
xchg
pop
gs
mov
mov
inc
and
mov
cltd
arpl
jp
insl
dec
sub
stos
mov
int3
inc
scas
push
pop
out
lock
mov
mov
fisttpll
in
insb
push
mov
test
push
fs
test
push
xchg
shrl
mov
out
cmp
fisubrl
xchg
sub
push
or
cmp
dec
arpl
xchg
mov
in
or
mov
pcmpgtb
int3
insb
mov
mov
nop
push
repz
ja
dec
mov
mov
cmp
adc
adc
jne
std
fs
or
aam
in
ret
cmp
mov
lods
sub
cmp
test
repnz
jo
dec
adc
test
push
dec
mov
insb
inc
das
or
dec
inc
push
push
enter
pop
inc
inc
mov
cmpsl
push
jne
popa
push
cmpb
call
movsb
sub
rcll
inc
mov
outsl
ss
dec
das
cltd
out
inc
sbb
iret
adc
pop
enter
push
dec
cmp
in
sti
outsb
pusha
ret
sub
jg
push
arpl
cmp
jecxz
push
fstpt
aaa
fxch
jnp
add
lock
dec
scas
fldln2
pop
cld
inc
mov
sbb
dec
lea
scas
inc
test
fwait
das
mov
push
in
jae
add
jp
scas
jmp
xchg
sbb
and
outsl
mov
pop
nop
adc
stos
outsl
xlat
cwtl
pushf
insl
xor
lods
and
loopne
push
jnp
jmp
mov
stc
cltd
nop
or
push
pop
sbbb
cmp
decb
add
dec
nop
dec
pop
jge
jnp
dec
dec
out
push
cmova
and
fucomp
cmp
cmpsl
mov
mov
aam
mov
cld
xor
mov
and
xor
dec
pop
mov
daa
sbbb
cld
icebp
dec
pop
lcall
jge
pop
adc
adc
inc
cmpsb
fstpt
and
mov
aam
lret
cltd
xchg
dec
pop
push
mov
pop
inc
loope
xor
sub
and
shll
ds
or
push
push
ss
dec
jg
outsl
mov
cwtl
adc
add
xor
nop
data16
mov
mov
inc
mov
inc
mov
cmp
clc
and
sbb
dec
cmc
iret
adc
or
mov
cld
sbb
mov
cld
enter
lock
movsl
repz
pop
lahf
cmp
sbb
and
test
arpl
lods
and
and
andb
sbb
les
inc
cwtl
dec
xchg
sbb
ja
mov
outsb
cs
pop
mov
faddl
or
in
ror
push
inc
in
xlat
adc
push
sub
inc
adc
mov
mov
cmp
addl
cmpsb
inc
mov
aam
push
mov
xor
jmp
push
test
lods
in
push
insb
mov
mov
inc
mov
cmc
push
lret
movsb
pop
cmp
adcb
ja
or
movsb
add
mov
leave
mov
sarb
xchg
aam
adc
ljmp
adc
js
pop
ja
fisubl
inc
jmp
and
pop
aam
mov
dec
push
in
sbb
mov
mov
cmpsb
sbb
lods
inc
adc
add
push
mov
adc
dec
jno
push
add
pop
dec
or
dec
rorl
fs
xchg
dec
sti
sub
sub
loope
aaa
jns
push
jl
cwtl
mov
adc
push
cmp
loop
lahf
and
pop
daa
or
loope
das
fs
aas
gs
mov
ljmp
mov
or
add
shl
fistl
mov
cli
rorl
cmp
rcl
push
and
mov
mov
cmp
push
pop
xor
dec
cmp
ret
fmuls
jle
push
or
loop
sub
pushf
push
and
es
or
xor
and
int3
test
jno
in
or
aam
bound
iret
mov
xchg
mov
pop
push
psubw
xchg
test
stos
and
sbb
cltd
movsl
pop
loope
dec
andl
mov
push
jl
pop
add
rcr
das
aaa
js
push
ja
inc
adc
mov
insl
std
scas
push
sub
sub
fdivrl
pop
sbb
pop
popw
sbb
mov
and
mov
lock
xchg
sub
add
dec
xorb
cmp
push
out
mov
pop
sub
pop
cmc
cmp
movb
xchg
push
jns
stos
xlat
in
xor
mov
decb
icebp
xchg
pop
pop
mov
push
dec
add
or
sub
xor
dec
nop
sub
mov
sbb
cmpsl
gs
shrl
dec
je
xor
mov
int
adc
shr
sbb
xor
sub
ljmp
in
push
cmpsl
loopne
bound
mov
inc
pop
jge
pop
and
mov
fsts
hlt
xor
movsl
xor
dec
sbb
lea
lret
pushf
ja
pextrw
jo
aas
scas
frstor
test
and
jg
jge
lock
adc
dec
lret
push
inc
mov
lods
dec
out
lods
or
mov
xchg
push
cmp
dec
jno
sub
sarl
inc
mov
pop
dec
dec
push
loopne
sbb
mov
pop
out
mov
dec
xor
imul
cmp
add
test
in
cmp
lock
mov
addr16
es
xor
add
stos
jns
popa
or
cmp
gs
xlat
and
mov
lods
jp
push
push
aaa
jl
clc
jbe
xor
in
sub
fsubrs
or
pop
nop
out
or
add
into
subl
mov
lods
sbb
in
lcall
sbb
push
or
cmp
sub
add
mov
aam
int3
clc
out
je
or
xchg
jp
push
nop
push
gs
nop
into
cmp
std
mov
push
pop
loopne
imul
rolb
sbb
imul
jp
jl
inc
lods
mov
xor
jo
jo
push
jmp
or
into
out
mov
mov
andl
jae
sbb
popf
xchg
ljmp
dec
stos
add
jbe
mov
outsl
js
cmp
je
insl
xchg
mov
xchg
imul
in
pushf
xor
ficoms
jg
cmp
enter
rcr
into
in
insb
insb
jp
js
jmp
in
xchg
mov
mov
add
inc
dec
jg
nop
call
adc
icebp
mov
popa
lock
les
jno
jmp
shlb
in
jne
inc
push
insl
in
stc
push
mov
add
nop
cmp
sub
aad
lods
scas
movsb
sti
adc
or
pop
mov
sbb
and
mov
push
in
mov
insb
fidivrs
and
nop
xchg
adc
and
imul
out
jno
mov
fsubr
lods
xor
push
stc
stc
add
push
fnsave
and
lret
adcb
or
call
jl
mov
gs
adc
loope
or
loope
cmc
add
jns
adc
mov
movsb
mov
push
mov
into
andb
inc
add
xchg
inc
test
aad
jg
or
out
mov
inc
les
divl
pop
mov
cmp
nop
push
hlt
arpl
push
loopne
adcb
pand
sbb
shlb
fnstsw
or
mov
lahf
sti
push
mov
inc
lods
sbb
jbe
pop
inc
rclb
jl
fists
sbb
push
lahf
int3
stos
test
cmp
fistpll
xchg
pop
mov
pop
jae
repnz
mov
popf
xor
inc
repz
mov
hlt
push
inc
mov
je
cmp
push
fs
iret
rcl
fldcw
add
adc
inc
add
cmp
cmc
xlat
xchg
outsb
lods
push
pop
sub
sub
inc
and
fnsave
enter
adc
lods
xor
into
ss
lcall
nop
dec
stos
mov
mov
inc
div
pop
ljmp
push
nop
scas
and
fstpl
dec
add
add
sub
lock
outsl
test
cs
sbb
or
lret
mull
mov
imul
sub
mov
sub
sub
iret
mov
push
and
movsb
sub
aad
sub
pop
push
mov
and
fs
rorl
mov
enter
rcll
iret
out
ret
adc
mov
jnp
adcl
adc
js
jbe
xchg
cld
xchg
ds
cmp
jno
mov
push
push
mov
mov
bound
inc
shll
cmpsl
and
dec
mov
push
test
scas
and
cld
arpl
and
in
dec
pop
add
xor
imul
mov
bound
pop
adc
lds
jbe
jbe
adc
rclb
mov
mov
aad
pop
cmpsl
sub
mov
mov
pop
aad
jo
cmp
or
sub
lcall
out
imul
dec
decb
pop
xor
pop
imul
sahf
dec
mov
imul
xor
data16
inc
jns
cmpsb
outsl
lcall
xchg
pop
loop
out
or
mov
jo
jne
jnp
push
aas
popf
dec
ret
and
xor
cmp
cmc
stos
lcall
mov
jbe
adc
scas
push
add
and
inc
mov
inc
loopnew
mov
repnz
xor
or
les
jbe
mov
jo
into
es
xlat
enter
mov
cmc
jns
dec
fucomp
jbe
or
pop
cmp
es
dec
rclb
add
xchg
xlat
push
rclb
lea
addb
or
cmp
mov
mov
arpl
xchg
rolb
in
inc
lret
inc
ja
cmp
cmove
push
aaa
in
mov
popf
cmp
add
adc
sub
sbb
pusha
xor
enterw
and
jno
lock
mov
inc
jo
adc
or
add
pop
jno
pop
cmp
or
inc
jne
je
jno
add
movsb
mov
int
dec
iret
cmp
pop
std
inc
jo
outsb
xchg
pop
je
dec
rclb
les
es
ret
and
xor
jmp
leave
inc
dec
mov
xchg
xchg
test
mov
mov
sbb
outsb
add
dec
movsb
dec
and
lea
rcll
lock
in
cmp
roll
ja
bound
dec
mov
lahf
mov
testb
arpl
adc
addr16
fsubrs
test
pop
dec
push
adc
test
jne
cltd
sub
or
test
test
clc
add
and
xchg
jle
cwtl
xchg
lods
pop
xchg
ret
cli
push
jl
popa
fucomi
and
jns
fcoms
push
xchg
pop
mov
movsl
xor
lret
add
and
mov
or
pop
dec
mov
addb
sbb
aad
pop
inc
sbb
test
lods
lret
roll
cmc
mov
adc
lea
call
cld
in
cmp
bswap
aaa
ja
jno
push
xchg
out
xchg
pop
sahf
cmp
xor
call
jp
mov
xchg
cmp
xor
xchg
jbe
add
roll
dec
pop
scas
rcrb
cmp
mov
mov
xor
mov
jbe
add
lcall
and
jl
mov
pusha
pop
pop
icebp
dec
or
mov
pop
or
xchg
clc
cmp
and
mov
or
sbb
mov
scas
jmp
jle
in
fbld
lret
nop
negl
cmpsl
and
sbb
cmpl
sar
mov
adc
mov
mov
enter
mov
nop
sub
jge
add
xorb
inc
pop
add
pop
scas
mov
outsl
sub
aaa
iret
ds
hlt
sbb
popf
cmp
cmpsb
or
clc
flds
repz
loope
xchg
divl
out
stos
and
lret
and
jecxz
scas
dec
nop
xor
dec
cld
lcall
arpl
in
mov
in
mov
xor
mov
andl
sub
movsb
and
mov
scas
pop
mov
mov
mov
scas
lock
lods
hlt
push
repz
xor
popf
shr
aam
push
push
cs
add
cmp
jno
push
cld
mov
push
movsb
test
xchg
aad
or
mov
cli
shlb
push
xor
jle
or
je
add
sbb
cmp
or
jne
cmp
cltd
sbb
dec
stc
sbb
test
or
out
pop
pop
jne
xor
loopne
and
mov
hlt
test
xchg
xor
push
test
aad
mov
mov
lock
inc
data16
bound
insb
out
inc
add
push
mov
les
arpl
ret
repz
orb
test
push
jge
in
js
jno
in
sub
inc
pop
inc
ds
insl
pop
lret
arpl
mov
sub
xchg
and
cmpb
hlt
jle
sbb
jp
dec
mov
lods
mov
xchg
movsb
and
or
in
sub
in
inc
inc
jle
inc
in
clc
xchg
jb
ja
jo
in
sub
cwtl
inc
lods
inc
mov
insl
dec
lret
sbb
mov
in
xchg
wrmsr
aas
cmpb
hlt
sub
pop
pop
sbb
dec
mov
mov
push
adc
inc
loopne
mov
push
adc
nop
xor
mov
jmp
push
push
aas
push
fildll
pop
subb
out
mov
lods
mov
pop
les
movsl
inc
sbb
jg
or
movsb
ds
cmp
push
cwtl
sbb
out
lods
xchg
push
xchg
xchg
cli
nop
js
jno
in
sub
nop
add
push
inc
in
mov
pop
insl
dec
fdivrs
mov
add
fwait
push
lods
push
dec
cmp
and
push
test
mov
pop
sub
adc
inc
add
insl
cltd
lret
test
fs
out
mov
lods
in
inc
pop
push
cmp
js
enter
jo
dec
inc
pusha
inc
cmp
insl
jne
mov
mov
jo
xchg
or
jae
ja
je
or
jne
add
jo
or
add
push
ljmp
sbb
sbb
jp
js
jo
in
pop
jnp
mov
stos
cld
mov
dec
fcmovne
adc
jbe
xor
xchg
xor
jl
into
cld
lds
mov
outsl
jno
enter
fwait
movb
ss
mov
data16
fcompl
or
cmp
xor
and
pop
out
jbe
fldl
arpl
aaa
dec
jecxz
bound
rol
lret
mov
sub
popa
mov
test
cld
push
cld
sbb
dec
lahf
lcall
xchg
pop
dec
xchg
dec
xor
adc
xor
mov
xchg
sti
add
inc
jmp
in
sbb
jecxz
or
test
call
int
outsb
lret
and
sub
jno
dec
lock
jae
xor
lret
mov
xor
scas
test
daa
insl
out
mov
repz
repnz
xchg
imul
xchg
xchg
lock
dec
imul
outsb
adc
mov
jmp
push
cmpb
cmp
enter
shlb
sbb
es
lods
sub
push
jg
fidivs
push
jno
in
ss
inc
dec
icebp
insl
xchg
lret
xchg
ret
xor
mov
sub
cmpb
hlt
js
pop
pop
xor
mov
lods
mov
xchg
xchg
jb
mov
adcb
mov
aas
cwtl
pop
dec
dec
testb
jb
ja
repz
or
push
fstp
or
mov
in
out
mov
je
notl
sub
inc
insb
push
insl
sub
push
adc
mov
in
out
jmp
add
test
imul
out
scas
push
and
cmp
xchg
lcall
movsb
mov
rcll
out
push
je
js
cwtl
and
stos
mov
push
sbbb
mov
push
sbb
mov
or
mov
or
sub
inc
test
mov
in
pusha
sub
adc
fmuls
les
imul
lock
leave
shl
mov
shlb
push
arpl
mov
mov
pop
dec
pop
aaa
cmpsb
xor
outsb
rol
stos
sbb
lret
mov
mov
dec
rcrb
bound
in
lret
jnp
push
fsub
lds
shlb
cmp
adc
std
lret
xchg
xchg
cmp
jnp
sbb
add
out
out
cmp
bound
jmp
push
push
cmp
xor
cmp
or
inc
mov
aam
ret
cmp
lret
adc
in
aas
scas
adc
jnp
xor
ret
push
inc
or
xor
iret
push
dec
sbbl
lds
mov
enter
lret
dec
inc
cmp
sbb
int3
lret
jb
xchg
push
mov
es
mov
dec
xor
cld
pop
in
insb
mov
or
cmp
mov
dec
add
xchg
sub
and
sub
ss
roll
hlt
pop
mov
and
js
push
xor
mov
mov
lret
pusha
mov
inc
test
cmp
xchg
test
rorl
imul
jl
pusha
xlat
outsb
sbb
mov
test
adc
push
add
ljmp
jbe
push
jmp
pop
adc
xor
fildl
xor
lods
cmp
mov
data16
sub
push
dec
pop
dec
outsl
les
sti
icebp
dec
aaa
mov
ret
push
inc
inc
ret
sub
sahf
loope
add
push
cmc
mov
icebp
push
cmp
daa
fidivrs
outsb
xlat
out
mov
mov
or
push
jg
sub
mov
outsl
mov
jp
mov
sbbb
iret
cmp
and
sbb
rcll
stos
jp
xor
dec
push
inc
mov
sbb
mov
xor
add
mov
cmp
pushf
cmp
cmp
cmp
jecxz
mov
sbb
js
lret
sub
imul
dec
lret
cld
out
into
inc
inc
outsb
cmc
movsl
dec
and
mov
pop
add
fwait
pop
push
adc
dec
sbb
lods
lret
imul
add
push
iret
mov
pop
lret
and
add
icebp
test
sbbb
scas
mov
dec
mov
mov
scas
out
mov
addr16
add
push
or
dec
aas
adc
pop
add
jle
nop
out
sbb
xlat
pop
icebp
imul
fsubrl
jp
mov
lret
dec
repz
lods
ljmp
xor
fnstenv
mov
xor
dec
mov
scas
or
dec
dec
inc
dec
insl
addl
sbb
outsb
inc
jg
cwtl
sbb
push
push
js
xor
jp
icebp
mov
dec
popa
push
in
or
jg
or
fnsave
cmp
adc
cmp
cld
loop
pusha
out
xor
push
xchg
dec
or
ja
cmpsl
mov
pop
mov
les
lods
out
inc
cld
inc
lret
in
inc
aas
adc
cmc
jae
mov
cld
sbb
xchg
fldcw
and
push
and
idivb
insl
bound
fsubl
test
add
shl
adc
cmp
and
push
sbb
out
nop
xlat
sub
insb
ret
jne
cmp
cwtl
cmp
xchg
inc
cmpsl
stos
adc
flds
jl
jg
mov
idiv
imul
cmpb
cmc
mov
ds
sbb
data16
inc
inc
data16
xor
cmp
sti
xchg
mov
das
into
stos
js
xchg
lret
pop
lock
or
mov
shlb
mov
and
cmovle
and
je
push
cmpsb
mov
mov
fcmovnb
test
pop
lret
in
mov
mov
push
xchg
xchg
mov
cmp
jne
push
stos
push
xor
or
xlat
prefetch
inc
mov
dec
jg
lret
push
mov
push
aad
or
and
movsl
lcall
xchg
cmpsl
add
lea
sbb
push
sub
mov
mov
inc
add
dec
popf
jbe
mov
push
sub
clc
push
add
out
mov
sbb
bound
adc
and
mov
test
fdivrs
popa
mov
and
jbe
cltd
push
mov
aad
mov
xchg
shll
lcall
dec
mov
jne
imul
dec
int
jo
adc
loopne
cmp
mov
mov
dec
mov
mov
add
ljmp
xchg
movsb
mov
aaa
outsb
jb
or
fnstcw
fs
andl
ret
flds
dec
pop
movsb
xchg
cmp
push
jnp
jne
jae
jmp
insb
adc
or
js
mov
sub
test
pop
jge
les
mov
fs
aas
push
push
xchg
xor
data16
xor
jmp
or
mov
sbb
push
dec
cmp
sub
popa
js
rcr
mov
out
or
int
or
mov
dec
sbb
rcl
aam
xlat
sub
xchg
mov
repz
xorl
pop
out
lret
hlt
dec
gs
popa
testb
pop
sbb
or
jns
cmpsb
and
pop
xchg
inc
ret
adcl
inc
xchg
xor
out
mov
or
push
ja
cmpsl
bound
push
int3
lock
sub
pop
mov
sub
dec
dec
sub
fdivrs
pusha
cmp
adc
lcall
sub
into
incb
inc
ja
in
outsl
push
add
cli
sti
imul
call
repz
sub
out
mov
lods
les
push
int
mov
pop
mov
fnstcw
jmp
push
jo
cwtl
mov
je
cmp
pop
cmp
enter
cmp
sub
lock
cmp
mov
pop
dec
in
pop
pop
xor
push
iret
cwtl
mov
ret
cld
sti
xchg
xchg
dec
shrl
jno
gs
scas
sahf
add
test
frstor
out
xor
push
xchg
adc
xor
enter
add
jg
shrl
fwait
int3
call
cltd
or
jno
adc
pop
jl
mov
xchg
add
cld
jecxz
lock
mov
cli
dec
lret
aam
sti
jae
loop
mov
in
fidivrs
sub
xchg
fs
mov
mov
sub
cltd
sub
pop
mov
ss
in
ds
xchg
xchg
xor
iret
movl
xchg
mov
pop
jns
jae
mov
je
and
sbb
lea
inc
adc
jl
gs
outsl
mov
stos
and
jle
shlb
loopne
out
dec
cli
and
jmp
xlat
add
jp
mov
xor
fstps
sbbl
mov
mov
push
sbb
fsts
jns
mov
out
inc
outsb
jno
pop
sbbb
push
sbb
sub
sub
lods
stos
dec
xor
add
addr16
mov
dec
sub
push
inc
in
lods
popa
lahf
aas
cwtl
jns
outsb
clc
mov
outsb
fs
or
sub
push
fisubrl
jecxz
pop
push
add
mov
aad
mov
xchg
rcll
lods
adc
sbb
dec
into
aad
icebp
sbb
sub
out
cld
adc
inc
imul
je
dec
adc
pop
in
inc
pop
dec
xor
sub
pop
jo
fnsave
je
cmpb
pop
adc
movsb
xor
inc
xchg
jo
lock
jecxz
jle
loop
popf
repz
in
inc
lret
in
fisubrl
or
int3
dec
rcll
or
sub
int3
js,pn
stos
or
cmp
mov
pop
jp
adc
push
add
test
sub
jo
xchg
dec
clc
add
daa
jbe
iret
adc
ret
hlt
sbb
push
je
rcrl
jo
arpl
jp
jbe
into
xor
adc
arpl
mov
dec
dec
or
sub
push
je
and
inc
ficompl
out
lret
stos
jp
push
pusha
loope
mov
in
fisttpl
aad
jne
es
movsl
sahf
dec
fisubrs
in
sbb
sub
aaa
adc
ljmp
adc
js
push
enter
arpl
outsl
cmp
in
sbb
das
insl
sbb
push
int
rcrl
arpl
cmp
or
std
insl
adc
and
es
or
jmp
pop
jle
ljmp
out
sub
arpl
xchg
and
jo
fidivrs
sbb
jmp
inc
sub
dec
fs
stc
jnp
jp
in
mov
or
cld
push
das
int
shrl
xor
shll
push
cs
cmp
enter
push
cmp
lods
iret
lock
rol
int
add
sub
mov
push
in
cltd
pop
push
push
aaa
xlat
lods
out
mov
adc
dec
and
sub
xlat
jno
popa
xor
lods
mov
sub
scas
push
inc
sub
add
or
sbb
inc
lret
sub
pop
or
aad
jg
dec
test
sbb
xchg
ret
jmp
clc
mov
cld
xchg
int
vmwrite
inc
sbb
fwait
out
lods
push
negb
sub
stos
imul
cli
imul
mov
xchg
cs
push
jno
mov
xor
test
xchg
sbb
out
clc
dec
pop
je
push
ja
adc
mov
clc
or
lcall
mov
mov
and
mov
adc
rcrb
pop
add
shlb
or
and
and
fwait
ljmp
call
pop
cmp
adc
testl
sub
loopne
jmp
movl
imul
lock
test
dec
cmc
push
xor
jge
mov
popf
jmp
out
lock
inc
mov
aas
sbb
push
adc
jo
xchg
inc
outsb
sbb
cmc
cmc
jecxz
mov
xor
lcall
mov
inc
ret
leave
popa
mov
add
pop
in
jge
mov
jbe
xchg
inc
or
ss
stc
shrb
notb
and
and
ret
inc
das
jo
fiadds
mov
ror
scas
lock
movsl
hlt
js
movsb
in
mov
or
imul
dec
repz
ds
out
pop
mov
enter
mull
imul
iret
inc
lock
rcrb
leave
pop
adc
pop
gs
mov
imul
bound
in
les
in
ss
jne
mov
add
sbb
movsb
hlt
adc
fsubl
mov
push
aas
add
or
adc
mov
pop
add
pop
iret
push
subb
fadds
jmp
cmp
mov
andl
adc
add
data16
into
inc
jmp
js
sbb
xchg
aaa
rcll
es
xorb
in
nop
js
mov
jns
in
mov
jmp
movzwl
adc
into
repz
lret
stc
mov
lods
adc
push
add
xchg
out
mov
mov
loope
xchg
gs
mov
jmp
push
add
fdivrs
or
fstp
nop
rorb
push
inc
outsb
push
pop
xchg
inc
nop
js
jo
in
sub
xlat
fs
sub
sahf
cmp
jp
pop
adc
rcll
push
adc
test
cltd
mov
cmc
add
sti
and
fisubrs
rcrb
inc
jp
fiaddl
shll
adc
mul
jne
mov
in
push
bound
icebp
mov
push
and
in
push
jl
push
jnp
in
xchg
dec
xchg
or
popa
ret
and
loopne
xchg
jl
out
out
insl
in
mov
movsb
or
cli
test
sbb
clc
jp
and
rolb
mov
cmp
push
xchg
push
fdivrs
lock
enter
sbb
aad
sbb
mov
jmp
adc
add
xchg
inc
call
sbb
xchg
lds
jno
in
or
fcomip
pop
enter
mov
ss
inc
rolb
aad
xchg
adc
mov
leave
adc
dec
decb
jo
and
jnp
testl
xor
fxch
daa
lods
sbb
out
adc
xchg
or
xorl
das
sub
push
mov
push
les
push
ficoms
mov
stc
sbb
icebp
aas
mov
push
ja
inc
mov
mov
loopne
int
imul
xchg
adc
scas
jae
xchg
pop
sub
iret
sbb
cli
dec
and
ficoms
outsb
lods
dec
mov
stc
push
inc
push
or
nop
rorb
sub
sub
sti
mov
shrb
jmp
inc
xorl
int
push
in
mov
test
push
xorb
jmp
xchg
mov
adc
mov
push
subl
sub
xor
mov
pop
shr
mov
testl
iret
int3
scas
data16
daa
mov
and
je
inc
mov
pushf
jl
jnp
mov
sbb
cmp
jae
push
mov
mov
pusha
xor
or
and
sbb
cmc
fmull
stos
pushf
inc
push
cmp
paddsb
gs
push
xchg
loop
push
lods
mov
idivl
jae
or
cmp
icebp
outsb
cmp
cmp
clc
out
cmp
mov
jo
mov
sub
mov
in
or
lret
mov
fnstcw
mov
dec
fisubrl
pushf
imulb
imul
push
and
inc
mov
rorl
test
into
mov
das
movsb
insl
lods
into
ror
mov
daa
sub
test
fcoms
js
pop
clc
add
mov
paddusw
pop
in
rcr
mov
cld
in
fstps
in
push
inc
adc
mov
xchg
mov
push
pusha
sarb
add
cld
mov
push
lds
jno
cmp
outsb
sahf
les
and
xchg
sar
jo
mov
ss
pop
push
sbb
or
xchg
push
ss
or
or
or
pop
jb
pop
shlb
stc
mov
adc
lea
out
test
push
movsb
push
fcomip
xchg
mov
adc
imul
stc
inc
sub
pop
xchg
idiv
ret
dec
push
in
aas
inc
sar
jbe
mov
in
in
pusha
inc
or
add
push
shlb
adc
cltd
xor
scas
test
sahf
popf
fcoms
in
outsb
sub
mov
xchg
je
fdivrs
jo
jp
and
and
rcrb
data16
clc
jb
in
dec
shlb
cmp
cmp
inc
lock
repnz
push
mov
cmp
mov
in
test
and
mov
xor
jg
adc
lret
aad
sub
das
lods
xor
cli
push
dec
jbe
hlt
mov
dec
int
stos
in
cmp
mov
cmp
dec
mov
adc
mov
xor
push
insb
cmp
pushf
jno
cwtl
mov
pop
test
mov
sbb
lea
pop
in
les
sbb
xor
jmp
push
cmpb
cmp
push
or
dec
jnp
adc
jb
cld
inc
imul
divl
loope
lcall
mov
in
sub
int3
push
xor
and
push
lea
mov
popl
dec
mov
lea
sub
inc
popa
fisubl
mov
mov
icebp
mov
cmp
call
adc
ds
bound
sbb
fisttpll
aam
jnp
shl
loope
mov
es
jbe
into
mov
mov
rol
aad
lret
cmp
sarl
adc
repz
cmp
in
hlt
roll
ljmp
arpl
or
push
jg
fildl
scas
xchg
mov
push
sbb
sbb
subl
lods
hlt
inc
and
mov
loopne
add
adc
and
lret
dec
mov
mov
mov
pop
testb
fcoms
adc
pop
in
xor
xor
add
inc
popa
imull
mov
and
gs
xor
adcl
sbbl
cmp
mov
jl
jmp
jbe
repz
jmp
xchg
ja
ds
sahf
test
fadds
push
xor
add
pop
ja
jbe
loop
in
jmp
fdivr
mov
sbb
sti
loop
cmp
cli
arpl
fld1
testb
adc
or
and
outsb
and
pop
cli
test
cmp
in
and
out
jecxz
aaa
into
lods
stc
cmp
jno
xchg
push
ror
inc
fadds
mov
addb
push
mov
dec
jb
loopne
hlt
jmp
and
jmp
jle
mov
push
je
mov
lods
es
lahf
mov
push
mov
mov
outsb
cli
xchg
out
std
inc
sub
outsl
or
pushf
push
insl
loopne
add
xor
das
popf
mov
lret
dec
fsubrs
jp
lret
movsl
xchg
sub
out
adc
add
mov
hlt
insb
je
mov
sti
das
cli
add
repnz
into
xchg
sbbb
xlat
add
and
js
pop
ljmp
lods
dec
push
arpl
push
mov
jo
lcall
scas
pop
pop
xor
dec
cmp
std
bound
jp
test
sub
mov
popf
jno
inc
adc
hlt
inc
cmc
repnz
or
jg
lock
hlt
ret
push
jns
sub
movsb
jge
jp
xor
fsub
mov
inc
sbb
sarb
or
sbb
xchg
imul
aas
leave
sub
sub
sub
mov
shlb
inc
repnz
imul
sbb
or
dec
lock
decb
cld
das
fwait
add
or
or
jmp
pop
mov
dec
movsb
js
cwtl
aas
stos
fbld
pop
sbb
cltd
cmp
cmc
cmpsb
loope
cmp
stos
dec
fs
fstpl
push
cmp
shl
or
push
out
mov
dec
nop
js
mov
rolb
