push
inc
add
dec
add
add
inc
ja
outsb
and
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
movsb
adc
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
out
adc
add
add
cs
jo
arpl
add
jo
add
adc
add
add
add
add
add
inc
add
outsl
inc
add
inc
add
add
inc
add
inc
add
xor
add
addb
loopne
add
add
add
loopne
inc
add
cmp
repnz
pusha
add
loopne
testl
enter
sub
stos
loop
pop
pop
pushl
mov
push
pop
inc
lods
test
je
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
ret
add
inc
add
lods
push
lods
push
mov
push
mov
pop
rep
or
mov
stos
inc
stos
inc
mov
rep
shl
mov
rep
mov
jmp
inc
gs
jb
arpl
fs
jae
add
adc
add
adc
add
add
adc
add
.byte
sub
stos
push
or
cmc
cmp
movsb
jns
jp
jecxz
pop
or
ficompl
mov
shrb
rolb
cmp
dec
or
inc
sub
cld
es
jmp
cli
stos
add
push
mov
ds
shlb
rorb
cwtl
adc
xor
dec
movsb
pop
rcll
xor
out
sar
xchg
aaa
dec
xlat
cli
xchg
add
negb
incl
outsl
nop
cli
test
xchg
add
out
icebp
loop
cli
insl
je
or
mov
mov
leave
and
pop
mov
imul
mov
shrb
fstps
arpl
mov
pop
cmpl
leave
pop
mov
mov
cmp
loop
sbb
jbe
lea
lock
stos
data16
cmp
sti
imul
stos
pop
cmpsl
insl
adc
lods
pop
sub
inc
int3
cmp
lock
dec
push
xchg
xlat
sub
mov
jmp
mov
lcall
shl
fidivrs
push
in
adc
xchg
jno
jnp
fistpl
jecxz
xchg
inc
inc
inc
cmc
xor
in
mov
leave
mov
js
jle
filds
cmp
mov
mov
add
pop
jbe
sub
iret
mov
mov
stos
xor
mov
dec
hlt
or
pop
sub
out
ret
leave
adc
leave
fcom
jge
mov
lock
int
and
enter
add
sbb
stos
test
dec
mov
xchg
ret
les
push
negb
inc
cs
repnz
push
sub
jae
fucomi
loope
jecxz
mov
ja
jge
jno
add
iret
aam
dec
fbld
inc
roll
negl
das
dec
xor
adc
fbstp
scas
repnz
jmp
cmpsb
in
jmp
aam
cmp
pop
lret
cmp
jo
out
stos
cmp
mov
xchg
mov
push
dec
ret
xlat
push
sub
rep
pusha
movsl
mov
leave
pushf
pop
inc
jbe
cmc
cwtl
pop
dec
adc
inc
loop
xchg
test
mov
fwait
xor
pop
sbb
in
insl
fstps
insl
imul
cltd
add
dec
mov
xchg
mov
inc
hlt
rcrl
mov
xor
in
push
notl
push
popaw
jbe
daa
repz
push
jecxz
jecxz
add
lahf
std
push
cmpsb
xchg
cmp
lcall
pop
shlb
xor
cwtl
mov
loopne
jp
jl
inc
roll
test
pop
aaa
stos
das
cmp
xchg
xchg
mov
rclb
stos
lds
lret
mov
cmp
test
ss
sub
xchg
xor
testb
cmp
xchg
pop
ret
inc
movsl
movsb
test
daa
je
pop
inc
cmp
ret
xor
rorb
mov
dec
push
fcmovne
mov
xor
jbe
jp
popf
daa
stos
lock
insl
and
cmpsb
and
call
aad
out
stos
lods
shlb
in
inc
cmp
lods
shrb
push
mov
inc
mov
pop
pop
stc
mov
mov
adc
mov
mov
loope
jecxz
out
sahf
aad
mov
lret
pop
mov
mov
mov
cld
in
adc
iret
daa
xor
aam
mov
inc
jmp
lds
js
dec
loope
lods
lock
mov
push
test
loope
ret
ljmp
rorl
add
mov
dec
and
xor
dec
leave
sub
sbb
push
clc
mov
scas
and
and
out
ljmp
cmpsl
dec
inc
and
icebp
xchg
cmpsl
push
jge
push
push
es
fisttpll
hlt
mov
rol
fsubp
aad
push
jne
mov
arpl
and
aaa
mov
or
test
ret
push
push
jae
clc
call
xor
pop
cmp
icebp
ret
add
ret
out
mov
cmp
jns
xor
inc
pop
mov
mov
dec
sub
cld
mov
adc
dec
dec
or
cmp
lods
jmp
in
and
inc
adc
hlt
xchg
xor
jnp
sub
pop
mov
inc
cmp
mov
leave
push
jne
out
adc
insb
jecxz
cwtl
or
sbb
jg
and
lahf
push
mov
sahf
mov
push
add
adc
pop
adc
dec
cmpsb
pop
je
lret
ss
mov
xor
xor
sub
adc
fists
xchg
in
pushaw
call
lods
stos
and
movsl
ret
push
data16
fs
cwtl
push
push
mov
and
and
dec
or
pop
mov
mov
loope
aas
in
out
stos
in
and
popf
cmp
scas
add
xchg
and
ja
outsb
jne
pop
adc
mov
mov
ljmp
fnstsw
repnz
mov
fs
push
mov
xchg
fsubs
cs
jecxz
imul
push
mov
sbb
inc
mov
imul
cmp
pop
sbb
inc
je
cltd
das
in
sub
push
scas
push
xchg
jge
bound
inc
adc
add
movsl
iret
dec
loop
add
dec
push
lds
lea
leave
lahf
js
cmpsb
in
adc
out
ret
insl
inc
loopne
mov
fisubrs
rorl
icebp
or
lret
add
test
cmpsl
push
hlt
es
aas
mov
dec
movsb
adc
lcall
popf
out
add
push
jbe
into
lods
nop
push
jnp
loope
xchg
int3
add
push
mov
test
pushf
push
pop
lods
pop
mov
xor
inc
lret
mov
fs
sub
fildl
jg
xchg
ds
pushf
push
loopne
aad
pop
cmc
adc
mov
mov
cmp
push
lods
das
mov
popf
jb
jecxz
sbb
push
cwtl
imulb
call
mov
jne
outsb
out
jae
cmp
cmpsl
out
into
or
fmulp
aad
cmp
and
std
sarl
mov
push
jne
daa
inc
ljmp
push
xchg
xor
inc
jle
daa
aas
and
mov
cmpsb
jecxz
out
and
idiv
xchg
ficompl
testl
repz
or
pushf
push
pop
dec
inc
mov
lar
adc
add
imul
lds
lods
push
pop
sar
adc
xor
push
xchg
lret
gs
sub
xchg
sub
adc
add
roll
jnp
insb
cmpsb
ret
and
pop
push
xchg
adc
mov
insb
sub
add
xor
test
popa
cmp
and
xchg
or
daa
popa
xchg
jmp
in
cmc
imull
into
addr16
pop
in
arpl
fidivrl
subb
dec
xor
call
push
push
cld
mov
scas
daa
sbb
lcall
out
lahf
inc
cmp
addl
sub
test
in
sub
repnz
or
inc
mov
insl
cld
push
dec
test
or
out
out
sbb
mov
js
stos
mov
lods
js
cmpps
movsl
inc
ror
popf
aaa
adc
iret
fs
jecxz
call
movsb
dec
sub
in
xchg
mov
sbb
add
mov
ljmp
imul
cmpsl
cltd
xor
fs
cli
and
cmp
mov
dec
test
inc
dec
cmp
push
sbb
mov
std
popa
and
pop
pop
lahf
cmpsb
and
test
add
adc
cmp
jp
and
xchg
mov
pop
loop
repnz
and
push
adc
enter
cmp
mov
cwtl
sbb
inc
mov
ds
in
xor
daa
or
popa
es
mov
and
in
xchg
add
outsb
rcr
sbb
and
imul
out
movsb
xor
jmp
pop
dec
push
loopne
mov
int3
ss
vpunpcklqdq
jl
js
insb
jge
mov
jno
pop
aas
jp
loope
icebp
and
repnz
adc
inc
cmp
imul
xor
rcl
pop
cld
push
lods
sbb
sub
fs
sub
mov
xchg
pushf
push
sbb
pop
add
rorb
aas
inc
int3
sub
inc
push
outsl
cltd
jo
mov
std
sahf
pop
stos
add
pushf
and
push
loopne
mov
fsub
adc
sbb
fcompl
mov
pushf
dec
sarb
ja
and
jecxz
xor
loop
iret
push
xchg
mov
lret
dec
pop
lret
push
cmpsl
enter
or
mov
or
lods
popf
decb
pop
jmp
cmp
mov
xor
xor
fs
dec
lea
xor
cmpsb
and
das
mov
test
mov
xor
and
jo
in
fcmovne
adc
cli
cmp
sbb
jmp
fildll
push
cs
adc
outsb
push
push
test
in
jge
icebp
repnz
hlt
push
lret
lret
mov
roll
es
push
cmp
mov
or
testb
sbb
fwait
cmp
repz
jg
mov
jae
movsl
inc
jmp
push
aas
mov
in
int3
addb
out
push
push
sti
sub
into
adc
gs
cmp
out
mov
pop
dec
in
sbb
lds
add
imul
std
lods
jp
leave
push
jmp
pop
jecxz
push
inc
cmpsl
pop
xchg
ror
addr16
fwait
mov
ss
cmp
out
inc
pop
mov
sub
or
xor
cmpsb
jb
add
inc
out
notl
or
push
inc
int3
pop
int3
jle
pop
mov
xchg
xchg
cmpsl
fisubrl
test
dec
xor
arpl
pop
out
es
dec
ja
aaa
ljmp
dec
adc
cmpsl
cs
sarb
jle
stos
into
call
adc
pop
and
fimuls
sub
daa
insb
test
stos
movsl
pushl
jge
inc
repz
in
xchg
test
pop
ret
jno
push
mov
cli
ljmp
popa
lock
sub
adc
rcrl
daa
sbb
jnp
int
aaa
fistl
bound
popa
aas
jl
pop
push
sbb
sub
mov
dec
shl
cmp
decl
mov
adc
js
cmp
xor
shll
les
stos
cmp
mov
sbb
mov
inc
negb
sub
leave
pop
sti
mov
arpl
subl
mov
xor
mov
pusha
xor
lock
mov
mov
inc
pop
adc
add
inc
lods
lret
pop
sub
push
cmpsl
int
inc
frstor
neg
fsts
int
movsb
pop
push
xchg
cli
cmpsl
and
mov
loop
fwait
lods
enter
sbb
loopne
es
sub
cltd
jecxz
arpl
sbb
add
int3
int3
ss
fmull
xchg
aam
mov
addb
push
lcall
sbb
mov
xchg
push
es
rorl
movsb
mov
aas
cld
icebp
dec
cli
add
mov
xchg
push
and
push
mov
push
fcom
ljmp
pushf
sbb
addr16
jno
push
mov
push
ja
sbb
aad
mov
jae
push
xchg
or
cli
scas
aam
xchg
inc
add
sbb
cs
xchg
inc
mov
inc
shr
lods
pop
out
imul
pop
loopne
fstpt
subl
fdivl
push
imul
ds
test
mov
outsb
daa
lock
fnstcw
adc
addr16
leave
jmp
xor
pop
mov
ss
fiadds
les
lret
jae
outsl
jae
hlt
or
jns,pn
lcall
sub
mov
fidivs
xchg
cmpsl
lcall
add
dec
fstl
mov
jbe
xchg
and
jo
int3
cwtl
jae
jecxz
mov
imul
and
out
or
pop
push
and
or
and
rcll
lret
fcomp
stc
fs
add
bound
mov
xor
jg
fnstcw
lods
or
inc
loope
not
loop
mov
pop
and
cmp
add
push
loop
andl
cld
aad
mov
dec
dec
lock
inc
xchg
add
or
adc
ret
fidivrl
popa
and
ja
mov
inc
inc
ror
push
sarb
push
dec
sub
ret
sub
cmpsb
mov
in
inc
and
xor
out
lret
dec
out
outsl
repnz
xchg
les
xchg
pop
jle
es
dec
movsl
out
ror
push
xchg
dec
outsb
mov
xor
xchg
inc
and
ss
jae
cmp
addr16
push
or
jns
inc
out
jmp
jne
mov
and
fwait
sub
fs
faddl
jb
aas
clc
imul
mov
sub
dec
ss
or
mov
pop
pop
popf
or
aam
mov
rclb
jge
out
rcll
lock
test
fisttps
mov
mov
dec
es
lea
pop
cmp
call
inc
jne
inc
pop
sbb
enter
negl
cmp
ss
adc
adc
add
in
or
add
mov
jp
insb
scas
insl
cmp
sbb
xchg
call
mov
mov
xchg
mov
jg
xchg
das
leave
xchg
mov
cld
inc
lods
cmp
inc
lea
lahf
sub
out
ja
fwait
inc
mov
and
leave
ss
jp
jmp
sub
pushf
icebp
push
cld
loop
fs
dec
xchg
fcoml
outsb
xchg
mov
scas
xlat
lret
cmp
adc
lods
outsl
xor
cmp
or
aam
arpl
jp
imul
nop
fsubl
loope
ret
jae
out
inc
jl
dec
lea
cltd
addr16
sub
inc
xchg
popa
jns
scas
loop
or
push
out
push
mov
ret
sbb
stos
fs
lods
paddb
xchg
inc
sub
scas
push
sti
out
lods
aam
data16
jmp
mov
cmpsb
lcall
pop
push
mov
push
je
jne
shrb
and
arpl
cmp
xchg
push
popa
fdivl
fsubs
jnp
imul
xchg
insl
mov
movsb
sbb
jns
dec
cld
adc
in
int
ret
cmc
aaa
pop
sbb
inc
sbb
out
call
add
scas
mov
out
ret
xchg
lcall
add
fnsave
inc
mov
fcompl
inc
cmp
push
or
movsl
ljmp
mov
enter
ja
sbb
mov
jecxz
xchg
or
outsb
or
test
mov
jne
dec
mov
in
dec
push
jnp
clc
mov
sahf
cwtl
clc
mov
and
neg
ds
sub
arpl
testl
lahf
rcrb
adc
cmc
mov
mov
dec
int3
or
cltd
data16
mov
stc
xor
inc
add
inc
lret
cmc
sub
dec
scas
lock
jecxz
ret
push
mov
cmpsl
insl
hlt
pop
dec
dec
cmp
out
cltd
rorl
adc
dec
and
xchg
xor
les
insl
ret
and
jo
cmp
in
pop
shrl
xchg
dec
sti
popf
dec
xchg
mov
in
fldl
ret
popa
dec
mov
mov
pop
mov
std
pop
sub
pushf
nop
test
xchg
or
fstpt
push
jne
fdivrs
jmp
je
or
adc
ds
test
inc
lret
inc
xlat
ja
popf
aas
ss
lea
mov
mov
push
push
fnsave
add
cmp
xor
in
lahf
push
dec
and
pop
sbb
dec
jne
daa
repz
push
pushf
test
mov
scas
mov
xor
das
shrb
push
or
pop
dec
xchg
pop
mov
pop
stos
ret
pop
cmpsb
add
jnp
inc
inc
push
out
pusha
scas
push
icebp
pop
push
jbe
cmp
scas
daa
push
xlat
leave
jb
xchg
adc
sbb
jg
sbb
push
cmp
inc
push
adcb
inc
xor
cmpsb
lahf
addr16
mov
mov
lock
mov
sub
inc
mov
pop
pop
dec
movsl
mov
pop
add
movsl
mov
cmp
imul
stc
insb
sahf
xchg
mov
mov
sub
into
pusha
js
popf
fadd
das
dec
ret
mov
sub
dec
xchg
mov
jnp
sub
adc
xchg
imul
mov
lret
pop
sbb
inc
or
sub
mov
xor
push
add
vsubss
push
loopne
mov
mov
cmpb
adc
jns
xchg
mov
mov
imul
mov
imul
imul
jp
nop
jge
lcall
mov
push
inc
xchg
lret
pop
xchg
sahf
cmpsl
mov
out
lahf
or
inc
mov
push
push
popf
pusha
ljmp
or
mov
mov
jnp
jp
loope
jmp
les
jns
movsl
push
adc
testb
or
sbb
xchg
jnp
adc
ljmp
jle
jae
enter
pop
add
cli
cltd
loopne
sbb
nop
add
cmpsl
cmp
dec
push
clc
jmp
sub
add
push
jne
cmp
mov
jbe
lea
xchg
mov
jecxz
or
mov
jno
negb
xchg
in
repnz
test
dec
mov
xor
jbe
push
repz
dec
inc
push
jp
mov
xor
push
cwtl
jb
pop
sbb
and
cltd
add
and
xor
and
in
jno
test
mov
loope
mov
stc
dec
mov
jo
inc
cld
sub
mov
negl
int
cmp
adc
aam
xchg
push
dec
mov
adc
push
rclb
call
lret
lds
pop
arpl
push
sti
ss
mov
adc
test
xorb
dec
xor
mov
leave
push
push
cs
add
xchg
dec
int
pop
fdivrl
pop
cmc
lods
adc
sbb
js
shr
cwtl
imul
aaa
sarb
push
jmp
dec
sbb
hlt
jae
inc
ret
push
shr
cmc
cmp
andl
fimull
rcl
cmp
cmpsb
jp
and
mov
push
sti
xor
cltd
nop
cmpl
sarb
mov
ljmp
bnd
pusha
sahf
sahf
loope
sbb
xor
shl
push
sarb
addr16
lods
les
fistps
mov
lret
mov
mov
fcompl
test
cmp
jp
repz
adcl
cmp
pop
pop
push
pop
scas
ljmp
pusha
sub
cs
mov
scas
sahf
add
ret
or
adc
mov
lock
dec
and
int3
or
sbb
xchg
js
sbb
addr16
mov
stos
jp
sub
popf
lea
inc
mov
loop
mov
and
popa
inc
ret
ljmp
pushf
fcoml
sub
in
in
inc
jnp
gs
mov
test
xorl
dec
jno
lock
push
push
mov
fisubrs
mov
add
pop
and
int
mov
stos
sbb
xlat
sub
repz
dec
push
jo
jle
lds
jecxz
adc
fsubs
imul
es
fnstcw
mov
fists
cwtl
sub
or
xor
cmpsl
adc
shlb
dec
testb
dec
jo
faddl
pop
bound
push
lds
repnz
jne
pushf
sbb
mov
sub
pusha
es
xor
cmpb
rcr
jae
jno
fistl
push
mov
cmp
addr16
xchg
cmpsl
xchg
fadds
movsb
lahf
xorl
scas
mov
subl
xchg
mov
xchg
fucom
in
sub
rcrb
pusha
or
inc
mov
into
xchg
jno
xor
mov
mov
cs
repz
mov
push
shrw
aaa
sbb
fwait
lcall
cld
dec
shlb
xor
xor
testl
ffreep
into
dec
stc
in
inc
mov
enter
shrl
pusha
add
out
lock
cwtl
jbe
mov
out
pop
stos
or
cmp
pop
fstpl
mov
mov
cmp
push
test
js
inc
loop
lods
mul
out
outsl
outsb
fmul
mov
mov
sbb
or
test
mov
rorl
sub
rol
stc
out
lods
and
jnp
mov
mov
or
sbb
xor
loope
adc
xchg
inc
sbb
xchg
adc
cmp
or
sbb
or
ret
inc
sahf
inc
dec
test
add
out
inc
aaa
mov
sbb
movsb
push
and
cli
pushf
test
pop
in
inc
adc
mov
sbb
adc
cmp
fiadds
dec
in
sbb
cmp
gs
cmpsb
push
je
incb
mov
pop
das
ja
xor
and
jmp
hlt
adc
fsubr
or
pop
xor
jbe
inc
jle
mov
movsb
call
bound
sbb
into
nop
in
sahf
sub
xchg
scas
dec
out
jns
dec
mov
aam
lock
inc
dec
pop
mov
ja
and
jne
push
lds
leave
xor
out
lahf
lret
dec
popa
insb
into
out
dec
xchg
je
add
push
dec
push
mov
cmp
leave
sbb
and
push
lock
mov
bound
dec
mov
sub
fsubs
xchg
imul
lret
lods
push
pop
sbb
sbb
call
add
fmuls
mov
and
fildll
icebp
mov
or
mov
xor
stc
and
cld
ret
pushf
pcmpgtb
das
lock
and
les
xor
add
popf
test
sbb
xchg
mov
mov
sub
mov
adc
hlt
inc
push
in
outsl
and
push
mov
fcmove
mov
sti
mov
jb
out
les
sbb
addb
xor
pop
mov
xchg
adc
mov
movsl
enter
sub
in
pop
idiv
adc
call
push
shll
add
push
cmpsl
testb
push
fldt
sub
popf
lea
enter
aad
aam
adc
test
frstpm(287
cmp
lret
bound
rol
stos
or
push
adc
cs
jns
call
test
std
ficomps
inc
mov
cmp
adc
or
sub
test
and
cli
shll
inc
scas
push
insb
push
mov
cltd
push
ds
mov
repz
sbb
jne
sbb
mov
xchg
mov
rcr
xor
add
cli
je
adc
lods
rcrb
lea
lea
mov
lds
fisubl
adc
xchg
incb
and
inc
js
cli
jo
stc
mov
hlt
les
ljmp
sub
sahf
sub
out
mov
cwtl
push
cmpsb
pop
mov
sahf
adcl
xchg
cmpsb
subb
aaa
out
xchg
jno
mov
lret
cmc
hlt
mov
popf
or
fildll
cmpsb
fistps
aad
lods
push
and
out
mov
and
jmp
jg
bound
inc
std
sbb
xlat
dec
dec
sub
leave
cmp
pop
movsb
scas
hlt
cli
or
push
aam
ss
into
aaa
cs
or
or
xchg
sbb
xchg
push
inc
insb
testl
aam
les
adc
push
push
and
shrl
popf
dec
dec
and
cmp
notb
out
xchg
fwait
stos
add
cmpsl
fucomi
push
push
mov
lods
ljmp
push
mov
insl
mov
add
in
icebp
jmp
xchg
rcrl
jp
scas
xor
mov
add
das
jb
adc
mov
gs
push
fisubrs
stc
pop
jp
inc
test
test
inc
shrl
sub
pop
or
movb
dec
fnstenv
and
scas
sahf
jmp
and
adc
jno
add
or
pop
mov
insb
inc
stos
sbb
and
add
pop
inc
xchg
orl
lcall
mov
xor
mov
mov
adc
out
xchg
cmp
xlat
iret
mov
cmp
dec
iret
inc
fwait
mov
sub
hlt
fwait
add
iret
mov
xchg
push
adc
fwait
jge
and
xor
jecxz
das
sub
stc
cmpsl
or
mov
and
push
mov
rcrb
inc
adc
mov
dec
pop
push
sbb
mov
add
lcall
pop
adc
xchg
enter
rorb
inc
fbstp
xlat
mov
inc
andb
sub
or
mov
jns
imul
cmp
fisubrs
cmp
and
lods
popf
test
mov
mull
movsb
jo
cwtl
sub
cmp
aaa
int3
and
jns
icebp
rclb
arpl
call
clc
dec
enter
addr16
ljmp
pop
pop
out
scas
ljmp
lea
es
mov
xchg
xlat
fbld
pop
xor
fistpll
adc
xor
loope
lcall
xor
fimull
fistps
enter
scas
push
outsl
rcrl
lods
jno
push
xchg
or
cmc
jp
mov
faddl
inc
jg
push
xlat
movsb
sbb
bound
xchg
fistpll
sbb
cmp
cmp
out
cmp
in
mov
mov
fst
or
pushw
mov
add
and
mov
xor
jnp
repz
mov
push
xor
sub
aas
outsl
push
in
fdiv
xchg
sub
cmpsb
in
shll
push
cmp
mov
xchg
pop
lods
add
sahf
int3
js
lea
pop
fcomps
adc
adc
int3
mov
das
cmp
insb
lods
jns
cmp
xchg
daa
xor
xor
cmc
ret
repnz
xchg
stc
pop
repnz
test
divb
mov
sub
sbb
mov
mov
and
jne
fnstsw
out
mov
inc
or
jl
sahf
in
nop
push
in
mov
rorl
push
cmp
jl
les
mov
in
adc
adc
mov
ud1
or
sbb
cmp
pusha
cmpsl
push
dec
dec
dec
jl
scas
daa
sbb
fsubrl
mov
cmp
and
nop
or
inc
and
cmp
js
sbb
mov
jae
push
xchg
repz
pop
mov
popf
lea
pop
in
mov
and
adc
stc
jl
xchg
stos
adc
lods
inc
dec
xchg
mov
lcall
sarb
and
outsl
and
enter
mov
iret
orl
scas
sbb
repnz
lahf
mov
in
ror
aaa
lods
int3
dec
lods
mov
stos
xchg
mov
dec
cmp
loop
xchg
sub
inc
lahf
cmp
xchg
dec
lret
pop
loop
push
mov
jns
repz
xchg
xchg
ss
lea
dec
movsb
lret
lds
shll
inc
stc
mov
sarb
dec
call
leave
jmp
mov
fdivrs
leave
push
les
xor
or
sub
test
in
sbb
dec
dec
int3
cmpl
push
aad
das
xchg
mov
ljmp
dec
xchg
leave
dec
ret
ret
push
cmp
mov
pop
sbb
add
or
call
stos
sbb
mov
aam
nop
xlat
gs
popf
aam
scas
sub
fdivrs
mov
inc
jae
push
pop
mov
dec
mov
mov
lock
loope
sbb
pop
test
aas
push
mov
adc
hlt
inc
mov
ljmp
inc
fcompl
ljmp
inc
lcall
lcall
mov
jae
dec
cmc
adc
push
aam
rcll
lret
xor
js
pop
add
cmpsb
mov
mov
jle
xor
dec
cmc
and
addr16
stos
pushf
xchg
jo
lods
jg
push
dec
pop
movsl
ja
fisttps
addr16
mov
aaa
cmp
dec
xor
ret
rclb
lahf
lods
cld
sarl
add
mov
fidivl
sahf
fwait
out
jbe
bound
and
adcl
jecxz
insb
xor
jle
adcb
xchg
xchg
xor
cmp
loope
cmpsl
outsl
fstl
jae
cmp
fwait
arpl
ja
pop
mov
mov
lret
push
cmp
adc
sub
push
jmp
push
mov
ss
cs
lods
fsubr
mov
aad
or
sbb
sbb
in
jle
mov
xchg
lahf
mov
movsl
nop
or
in
xor
cs
popf
push
inc
rcll
cmc
fucom
or
jg,pt
movsb
fnstcw
test
fs
sysenter
jg
jp
frstor
xchg
jo
dec
lea
ret
test
xchg
shll
cmpsl
inc
punpckhwd
lds
cmp
fcoml
xor
test
je
stos
xorb
inc
out
sbb
jge
sarb
mov
sahf
mov
push
aas
pop
push
jnp
jmp
pusha
out
and
test
and
imull
pop
jbe
ja
push
stos
sub
push
fwait
mov
mov
ja
cmpsl
add
mov
cltd
xchg
stos
cmp
push
add
jecxz
mov
icebp
sub
xchg
dec
pop
xor
data16
out
sbb
xchg
xorb
pop
scas
push
movaps
adc
adc
jno
add
cmp
in
stc
loop
dec
sub
jp
xchg
lret
inc
pop
and
lret
stc
outsl
test
push
mov
sbb
inc
aas
hlt
push
ja
cmp
pop
sub
mov
js
adc
stc
imul
push
cmpsb
lret
push
mov
enter
ljmp
adc
imul
add
into
sarb
adc
bound
and
fucom
push
sti
add
or
mov
push
add
xchg
sub
mov
mov
shll
mov
mov
lods
xchg
outsl
das
lret
test
push
inc
fidivs
sti
jo
imul
adc
mov
loope
rorl
nop
xchg
iret
pop
push
repz
aaa
jle
push
and
xchg
push
sub
test
xor
and
inc
lds
pop
xchg
andb
fsubrs
xchg
js
lods
mov
fwait
lcall
pop
in
cmp
jae
cli
jl
pop
xchg
xchg
mov
out
sub
imull
or
jp
gs
aas
in
stc
das
gs
jne
dec
cmp
sub
mov
cwtl
pop
mov
pop
xchg
shrl
jb
or
xor
push
and
testb
and
adc
nop
fstps
add
mov
rorl
xchg
push
movsl
test
dec
push
call
adc
fcmovu
aas
xchg
jge
clc
jnp
inc
push
or
jecxz
std
ljmp
loopne
movsb
push
hlt
mov
jg
jle
mov
sti
xchg
repnz
push
mov
push
cmp
xor
ja
sahf
icebp
mov
sbb
pusha
hlt
adc
popf
xchg
sbbb
jle
push
sub
xlat
loope
xchg
cli
and
dec
jl
or
adc
stos
stos
aaa
jae
icebp
in
add
aaa
fwait
out
add
fsubl
lcall
mov
sbb
adc
adc
cwtl
std
sbb
shlb
add
dec
mov
xor
fisttps
mov
fninit
push
cwtl
bound
loopne,pn
lret
ds
fld
adc
mov
cmpsl
xchg
imul
movsb
push
cmovae
pop
mov
ss
insb
add
js
mov
scas
lret
test
in
orl
mov
in
in
lea
icebp
jae
xchg
ficomps
pop
nop
jb
jecxz
jae
mov
mov
jl
shrl
arpl
aaa
sti
out
mov
aam
lods
popa
jge
sbb
sub
fists
repz
aaa
lret
xlat
pop
fwait
pop
popa
xchg
cmp
mov
repz
or
and
and
push
movsb
or
xor
imul
fwait
xlat
pop
not
loopne
dec
stos
and
sub
subl
shlb
in
dec
aaa
icebp
sub
jno
pop
adc
cwtl
xchg
outsb
aam
xlat
int3
inc
dec
mov
insl
dec
enter
test
lea
aaa
leave
fs
xor
or
jmp
subb
gs
jle
mov
pop
bound
sub
jecxz
push
mov
mov
int
shlb
aad
pusha
adc
cltd
xchg
mov
daa
and
movsb
pop
rolb
mov
mov
mov
mov
data16
stos
stos
inc
adc
ljmp
mov
rorl
mov
frstor
insl
push
mov
push
xor
xlat
push
sahf
loop
mov
imul
out
xchg
es
movsl
fildl
jne
adc
loop
movsb
sahf
ret
dec
push
mov
sub
stc
and
push
dec
jnp
pop
movsl
add
cmp
mov
mov
mov
mov
pop
lock
test
jno
mov
pop
mov
in
fisubrs
or
and
sbb
inc
sbb
mov
adc
jne
xchg
xorb
xor
out
xchg
repz
jae
and
lret
aam
mov
stc
cmpsb
jl
dec
sub
pop
mov
push
mov
out
mov
imul
daa
rcll
fnstcw
das
insb
adc
dec
xor
repz
cmp
cmc
or
pop
pop
cltd
mov
cmp
sbb
add
sub
bnd
test
out
pop
test
sub
push
fwait
loop
mov
push
shlb
adc
test
push
rol
cmovbe
loopne
inc
aam
or
mov
insb
fisubl
pop
push
jmp
ljmp
ret
movsb
jnp
imul
dec
data16
je
sbb
lds
lret
sub
pop
icebp
inc
or
adc
cmp
adc
adc
adcl
or
in
outsb
mov
jecxz
movsl
adc
test
pushf
push
stos
mov
fwait
ud1
xchg
sahf
int3
imul
dec
or
les
mov
ljmp
add
xchg
xchg
xchg
mov
shlb
jnp
pusha
test
pop
jp
das
push
or
aam
ret
dec
sub
in
lahf
imull
add
loope
mov
adc
push
insb
into
fbld
xchg
pop
xchg
call
or
insl
ljmp
stc
jecxz
leave
and
inc
out
imulb
test
xchg
xchg
jmp
pop
cmp
xor
cmpsl
mov
mov
fsubrp
leave
push
insb
stc
sbb
mov
dec
out
movsb
int
and
push
lock
sub
sbb
pop
mov
jnp
lea
push
jmp
and
scas
jl
cmp
inc
sti
lret
and
and
mov
cmp
nop
popa
lock
bound
iret
push
shlb
fildll
sbb
icebp
lods
push
sbb
xchg
seta
pop
jbe
push
nop
pop
mov
sbb
movsl
or
lret
sbb
dec
setp
cmp
movsb
inc
mov
out
and
ja
aam
inc
mov
mov
sbb
push
and
mov
push
stos
es
mov
movsl
sbb
xchg
mov
mov
xchg
fisubs
cltd
fsts
push
sbb
daa
and
pop
mov
cmp
ret
insb
sti
mov
jae
push
xchg
out
xchg
push
mov
fstpt
mov
jns
add
mov
std
jnp
rclb
mov
mov
xchg
stos
cli
jnp
xor
loopne
mov
popa
hlt
xor
mov
pop
mov
push
fisttpl
testl
test
pop
movsb
lds
adc
and
and
movsl
push
push
daa
mov
adc
adc
dec
cmp
jge
cs
push
fstpt
or
push
mov
faddl
or
jne
popa
mov
or
dec
xor
pop
dec
iret
cmp
lods
dec
or
sub
ja
rcr
int3
push
mov
aad
in
mov
add
sbb
jne
jo
imul
test
cmpsl
out
dec
imul
pop
stos
adc
add
cmp
lea
sbb
xchg
movsl
outsb
cmp
movsb
pop
sub
test
js
xlat
repz
and
gs
sub
or
loopne
adc
out
fldenv
cmpsl
xchg
adc
repz
ss
pop
paddb
pop
xchg
orl
sahf
or
mov
xchg
and
int
rcll
cwtl
mov
adc
ds
fxch
pushf
in
and
sub
test
les
xchg
jecxz
or
mov
and
inc
push
push
sahf
adc
ret
lcall
lods
push
clc
pop
mov
sti
pop
inc
mov
inc
inc
fucomp
push
mov
fidivrs
jb
jle
in
fsubl
icebp
mov
push
nop
fdivrs
dec
popf
cmp
sub
add
pop
dec
fbstp
jmp
jle
or
xlat
push
dec
std
sub
fcomp
mov
repz
scas
arpl
insb
aaa
les
test
sbb
mov
pop
cmc
pop
call
shll
mov
xlat
test
cmpsl
xor
mov
cmp
imul
cmp
push
sbb
xchg
adc
out
adc
mov
divb
xchg
push
and
sbb
stos
cld
scas
out
or
mov
push
and
dec
mov
jg
sahf
mov
sbb
in
dec
repnz
and
mov
test
inc
test
lahf
dec
jno
movsl
pop
mov
aam
in
adc
inc
addr16
lret
sar
aad
pop
aas
mov
daa
outsb
sub
stc
mov
push
inc
mov
cmp
rcr
push
insb
imul
pop
orl
cmp
shlb
xchg
inc
jmp
mov
jmp
cmp
and
rcll
rorl
clc
mov
add
push
inc
dec
lds
push
sub
sbb
scas
aad
add
fists
cld
dec
mov
cmp
cmp
sbb
fsubrl
out
jns
jno
rolb
add
push
jmp
pop
cli
pop
lock
fisubs
hlt
sbb
cmp
lds
lret
enter
sub
pop
jne
adc
test
sahf
cwtl
cwtl
jmp
movsl
or
adc
add
sarb
push
push
punpckldq
mov
xor
cmp
add
xchg
jb
shll
mov
stc
rcr
add
out
push
and
push
pop
and
dec
pop
mov
pop
and
int
and
mov
jl
popa
hlt
xchg
fs
mov
adc
out
xchg
or
pop
adc
adc
mov
call
push
sahf
movl
jg
push
sbb
je
es
push
fwait
push
or
adc
sbb
push
xchg
jb
cli
test
mov
lock
cmp
cmp
mov
xor
mov
rcl
xor
es
mov
jp
test
out
into
movsl
imul
sbb
arpl
xchg
jp
mov
adc
loope
jle
inc
jnp
std
mov
pop
jecxz
cld
icebp
cmp
sub
mov
add
rcrb
rolb
orl
addr16
add
shlb
fdivl
pusha
cmp
int
mov
in
lcall
jge
pop
cmovae
mov
ret
mov
jns
pop
sbb
cld
or
shrl
jl
je
and
and
cltd
adc
outsl
push
jae
in
lea
pop
ljmp
adc
cmpl
push
or
mov
jne
xchg
pushf
outsb
movsb
xchg
lret
shl
stos
push
add
push
jle
cmp
lock
lods
in
xchg
rorl
fs
rcll
and
das
xchg
data16
jl
shll
cmpsb
mov
cs
add
ret
mov
dec
sbb
cmp
cltd
les
lods
in
outsl
pop
clc
aas
lcall
movsl
mov
jns
cmpb
or
cmp
cli
jno
arpl
mov
jmp
sbb
and
mov
enter
fdivl
popa
sahf
repz
movsb
dec
in
into
mov
fcomps
add
data16
or
push
mov
jae
lds
sbb
push
or
jbe
mov
loopne
in
add
sub
dec
icebp
adc
mov
push
std
in
jmp
dec
imul
in
or
clc
inc
pop
test
cs
xchg
pop
test
into
lret
xchg
jp
xchg
adc
stos
jl
or
adcl
movsb
insb
mov
loopne
dec
xor
inc
cmpsb
push
cmpsl
push
int
icebp
insl
xor
dec
outsl
cmpsl
stos
jle
adc
xor
out
popa
insb
jbe
sbb
dec
push
push
addr16
push
mov
outsl
arpl
js
out
sarl
jae
adc
mov
dec
aam
lock
shrl
inc
adc
mov
or
rcrb
cmp
and
loop
fcomp
loop
nop
adc
cld
inc
into
lds
push
or
in
lock
rcll
sbb
imul
js
lock
lds
rorl
mov
cmpsb
std
jle
jp
out
fistl
or
scas
sbbb
notl
imul
mov
xor
lret
inc
push
sarl
mov
es
mul
arpl
inc
pop
push
add
in
xor
jge
sbb
hlt
mov
sbb
and
in
jg
es
xor
jne
out
add
fistpll
dec
mov
nop
xchg
fildl
lock
test
inc
dec
pop
jmp
or
jo
rclb
adcl
stos
add
sbb
sti
mov
mov
lods
js
mov
cwtl
pop
jp
add
cmp
jae
popf
pusha
test
xor
call
or
lret
in
and
sbb
mov
shll
int
pop
pusha
ja
xchg
dec
add
loope
jb
inc
fstpl
mov
lods
fidivs
sub
insb
addr16
push
mov
dec
mov
ret
sahf
pushf
lret
loopne
sub
cli
in
mov
ja
adc
repz
sbb
jl
cmpl
jno
je
int
or
jae
fldenv
aas
out
or
pop
insb
sbb
jo
in
sbb
mov
popa
add
sub
clc
lcall
cmp
pop
inc
xor
mov
and
pop
pushf
imul
pop
subb
add
pop
shlb
push
cmp
sbb
lret
in
pop
andl
int3
add
or
scas
inc
sub
xor
push
jno
adc
xlat
shll
in
dec
adc
push
jnp
pop
pushf
pop
imul
jl
addl
sbb
xor
js
divb
mov
dec
sbb
add
stos
std
mov
stc
mov
mov
dec
and
negl
cmp
ljmp
imul
out
mov
xor
xchg
or
int
call
into
push
adc
enter
mov
sub
lods
or
sti
ja
daa
fwait
jae
dec
sub
clc
pop
sar
sub
cmpsl
sbb
adc
lods
xchg
pop
stc
sbb
dec
and
mov
insb
sub
inc
sub
ljmp
push
jle
daa
sbb
idiv
push
mov
stos
and
push
lea
in
lret
rol
adc
std
mov
pushf
pop
je
leave
movsb
fiadds
adc
push
ja
pop
dec
sub
xchg
lea
mov
or
mov
in
call
push
add
xor
shl
sub
aas
lods
mov
fisttpl
sahf
loope
ret
int
jno
lds
aaa
neg
cli
cmp
arpl
outsl
cmp
fsubl
pop
stc
jp
sub
std
sar
adc
ret
jns
xor
pop
addr16
fistps
jbe
cld
cli
movsb
pop
in
xchg
in
data16
inc
cmp
xor
sbb
hlt
lock
shl
loop
movsb
add
pop
aaa
subl
movb
or
adc
jecxz
call
mov
mov
test
idiv
mov
jecxz
sbb
arpl
cmp
jne
mov
rclb
pusha
pushf
dec
gs
inc
pop
fists
push
dec
push
cmp
clc
dec
nop
inc
popa
dec
push
mov
mov
imul
cmp
lods
and
insb
mov
shrb
mov
lcall
adc
test
inc
cmpsl
cwtl
lcall
jb,pn
cmp
and
xlat
fisttps
ret
add
cmpsb
xchg
and
mov
inc
mov
push
cmpsl
scas
and
adc
es
out
pop
add
cltd
and
cmp
insl
js
add
aad
outsl
and
mov
dec
inc
inc
negl
das
fstl
mov
xor
and
sbb
stos
and
mov
lea
cmpsb
cmp
and
lea
mov
orl
jne
or
mov
adc
mov
push
iret
and
sbb
inc
dec
push
cli
mov
sarb
jmp
rorl
out
mov
pop
into
push
lcall
popa
iret
mov
mov
adc
cmp
repnz
pop
pusha
and
sbb
ret
dec
mov
inc
jb
pop
add
or
fstpt
mov
pop
and
enter
push
out
aam
lock
stc
pop
lcall
fildl
push
outsl
scas
ss
jge
add
cmpsl
movsl
pop
ja
and
add
test
and
dec
xchg
push
pop
out
and
inc
push
lods
aam
pop
mulps
cwtl
mov
mov
rclb
push
int3
mov
pop
lret
jle
repnz
clc
cmp
inc
es
sub
stc
or
and
xor
lea
push
xor
push
mov
fistpl
dec
lds
into
sub
sbb
inc
fsubs
pcmpgtb
jge
cmp
jmp
scas
mov
or
std
hlt
push
push
sbb
push
inc
sbb
test
sti
rcl
std
push
fmul
inc
mov
push
enter
sbb
clc
movsb
jo
lret
add
hlt
adc
jl
ss
dec
fmuls
and
pop
inc
cmp
pop
hlt
rorl
cmp
dec
add
pop
mov
aas
sub
nop
cmpb
jl
or
pop
xor
jl
imull
je
xchg
mov
fisubrl
out
inc
xorb
and
pop
ss
jp
in
aad
ss
ds
mov
popa
mov
out
sbb
or
lahf
sub
cmp
mov
lcall
and
dec
mov
ss
insl
btr
pusha
add
dec
stos
sub
scas
and
sbb
add
test
outsb
out
aad
jne
jg
add
insb
popa
cld
fdivp
pop
xlat
mov
dec
dec
jg
mov
add
int
test
xor
in
adc
sbb
jne
cmp
mov
dec
xor
pop
cmp
loope
mov
push
mov
fstps
loopne
mov
xchg
adcb
jg
cmp
pop
add
lods
insl
xor
pop
lret
out
xchg
jecxz
push
xor
push
mov
outsl
push
cmp
pop
adc
lret
pop
test
pop
mov
fstpl
cmpsb
mov
inc
jns
inc
push
add
mov
lods
aas
pop
repnz
mov
imul
mov
cmp
insl
movsl
inc
frstor
xor
std
xlat
add
lret
gs
jl
and
in
push
loope
mov
push
pop
or
jae
or
jbe
jl
ja
fcmove
add
jge
adc
scas
cltd
das
jp
and
dec
inc
dec
in
cmpsl
or
and
dec
jne
mov
shrl
out
test
xor
loope
xor
inc
fistpll
sarb
rol
andb
daa
and
or
popa
cmp
jmp
mov
mov
and
into
data16
arpl
fidivrs
aam
jg
pop
rcrl
test
out
inc
out
ss
outsb
std
fsub
imul
ljmp
mov
xchg
or
push
or
sbbl
push
xchg
adc
xchg
xchg
roll
or
les
cmp
cli
dec
mov
das
xor
sbb
test
iret
mov
lea
dec
xchg
or
rol
inc
pop
dec
movl
inc
hlt
out
adc
std
mov
xchg
les
and
xor
repnz
insb
sbb
push
xchg
and
test
add
dec
jecxz
cmp
pop
mov
daa
test
ss
lcall
int
iret
push
mov
cli
lcall
call
loope
sbb
cmp
xchg
adc
dec
arpl
mov
push
jl
pop
jbe
adc
push
mov
in
cmp
mov
push
loope
pop
pop
or
jge
adc
lea
mov
mov
test
push
andb
mov
cmpsb
stos
or
push
out
or
and
pop
push
cmp
pop
aam
dec
lods
jbe
mov
pop
cmpsl
sub
ja
mov
out
mov
xorl
sbb
xor
adc
and
in
out
cwtl
imul
outsb
cs
add
cli
leave
notb
shlb
or
xlat
pop
cmp
pop
leave
lcall
adc
fisubrl
mov
daa
enter
xor
or
mov
pop
xor
sbb
mov
out
dec
stc
cmp
cmpsl
push
pop
pop
xor
out
les
daa
or
sbbl
sbb
jle
mov
pusha
addl
pop
cmp
cmpsl
sbb
lcall
arpl
jl
push
cmc
insl
jecxz
popf
jl
sub
mov
daa
lret
push
ret
sbb
std
adc
jle
jecxz
sbb
lahf
lock
rclb
adc
xor
repnz
push
movsl
jl
fidivs
jge
xchg
gs
adc
jnp
xor
pop
repnz
adc
add
mov
test
sbb
add
ret
sub
ret
pop
cmc
inc
ret
movb
push
sbb
sahf
push
lret
dec
in
jno
xor
gs
sarl
inc
sub
mov
sbb
xlat
dec
aaa
cmp
stos
pop
and
push
test
jge
add
pop
loopne
out
lea
or
dec
stos
std
das
dec
dec
xlat
lock
or
jg
in
mov
adc
pusha
sarl
sub
ss
dec
imul
in
mov
scas
pop
out
dec
mov
icebp
or
sub
sti
mov
sbb
test
push
cwtl
leave
arpl
mov
and
push
lods
shll
stc
push
out
or
add
mov
mov
pop
cmp
dec
add
sbb
jns
sbb
xchg
fwait
xor
cmc
pop
or
inc
mov
int
dec
push
dec
and
fs
push
xchg
mov
in
mov
fadds
dec
jge
xchg
cs
pop
or
iret
pop
fists
scas
mov
push
imul
mov
out
rclb
jge
or
or
mov
cmp
scas
sub
loope
add
mov
adc
into
test
jo
imul
jo
dec
xor
out
iret
in
jo
dec
adc
jbe
loop
dec
popf
test
enter
icebp
lds
scas
sbb
xchg
sbb
cwtl
xchg
jns
mov
aam
push
jae
pop
int
mov
fimull
cmc
inc
pop
xchg
pop
bound
and
and
mov
mov
js
bound
test
jecxz
xor
mov
dec
mov
popf
mov
cs
xor
fisubl
lock
sbb
addr16
fistps
sub
in
jnp
lea
sbb
loop
sbb
lods
push
xchg
lds
or
sbbb
cli
and
sbb
mov
adc
and
test
or
xor
xor
adc
sub
pop
lcall
stos
or
or
loope
xor
inc
pop
or
inc
sub
test
pop
pushf
fwait
mov
push
test
pop
sbb
rcll
loop
inc
insb
pop
mov
jne
lcall
or
add
in
mov
inc
fwait
push
in
sbb
cmc
ljmp
jle
rorb
cltd
testb
lods
lret
cmp
push
lods
or
clc
jns
mov
push
dec
mov
imul
dec
mov
imul
popf
adc
add
cs
mov
lea
xor
out
mov
fs
inc
pop
cmp
push
xchg
and
lods
mov
rorb
sub
add
adc
out
or
jecxz
int
jb
fimull
xchg
inc
inc
popa
dec
repnz
ret
je
rorl
dec
jecxz
jns
jge,pn
xchg
js
push
insb
or
jo
gs
cmpsb
pop
or
xor
and
jge
out
hlt
scas
test
std
pop
das
in
lods
jb
xchg
pushf
jge
xchg
push
dec
dec
rcrb
jo
jp
lods
push
fidivrs
adc
cmp
mov
blsfill
xchg
subl
mov
xor
out
pop
pop
push
lahf
mov
aaa
lock
in
subl
inc
lock
push
pop
push
xlat
insb
inc
cmp
dec
int3
pop
into
stc
dec
fadds
xor
popf
xor
aaa
sbb
mov
pop
sub
adc
jge
pop
ret
stc
ljmp
dec
or
mov
mov
and
cmpsb
push
mov
imul
xchg
dec
fnstenv
xchg
fs
pop
sbb
mov
mov
sbb
xchg
xchg
jp
scas
je
cltd
xchg
add
ljmp
add
mov
pop
push
out
stos
cmpsl
xchg
test
data16
xor
repz
shrb
insl
loope
adc
test
adc
ljmp
xchg
push
leave
in
jp
push
pop
mov
push
shrl
gs
pushf
jge
mov
inc
lea
ficompl
cmp
arpl
or
and
into
fbld
dec
pop
mov
sbb
ljmp
adc
mov
je
mov
adc
mov
push
ja
mov
sbb
and
cmp
or
inc
rcr
fwait
jns
cs
sub
sub
xchg
out
pusha
cltd
adc
mov
hlt
daa
dec
jb
aas
xchg
inc
sbb
push
mov
scas
iret
cmp
jmp
ss
or
push
insl
rol
fadds
push
add
mov
inc
xor
lahf
and
push
gs
xor
dec
inc
pop
out
push
repz
lods
mov
lods
inc
iret
imul
sub
fcmove
xchg
js
adc
stos
jnp,pn
cs
adcb
push
jne
push
push
inc
push
jl
ja
fidivl
cmp
out
jp
call
sahf
aam
gs
jmp
sbbl
push
in
scas
icebp
repz
loopne
aas
insb
push
aad
in
and
clc
sub
jle
in
scas
popf
lret
xchg
inc
xchg
stos
loop
gs
xchg
mov
push
dec
cmp
xor
js
cmp
int
mov
adc
add
test
xor
mov
inc
out
push
mov
mov
xor
inc
xor
shrb
jno,pn
clc
inc
inc
xchg
mov
sub
fwait
loope
or
dec
arpl
faddl
push
push
in
loopne
in
clc
adc
stos
xor
faddl
mov
mov
sub
adc
imul
fildl
aas
bound
call
lret
and
imul
imul
xchg
pop
es
call
adc
ljmp
mov
addl
inc
sbb
rcrl
cld
divl
insb
in
adc
aas
push
mov
pop
repz
xor
nop
sub
inc
and
bound
in
pop
fstpl
pop
in
enter
mov
inc
ja
jmp
fdivl
adcb
xor
dec
fisubrl
mov
sub
sub
cmc
std
divl
jo
pop
jns
jb
js
je
xor
xchg
jnp
ror
push
jmp
aaa
mov
shlb
mov
push
pop
xchg
mov
inc
xor
fstl
xor
push
repz
mov
mov
mov
xor
mov
inc
sbb
mov
iret
sub
jno
nop
stos
orb
push
dec
pop
pop
flds
ja
add
stc
fwait
pop
js
xor
es
cli
cmp
loop
cmp
pop
mov
negl
cmc
cmp
mov
and
clc
cld
call
or
push
mov
aas
aam
sarb
rorl
or
or
sub
mov
rolb
cli
das
loope
cmp
in
cmp
lret
push
stos
push
popa
aad
sahf
xchg
out
ljmp
mov
stos
inc
lret
adc
and
xor
outsb
push
std
xchg
mov
fs
out
sub
dec
aad
xlat
lea
and
clc
mov
addb
loop
push
sti
xlat
mov
in
testl
bound
mov
push
addl
mov
ret
or
mov
lods
gs
jb
in
movl
cmpsl
and
dec
call
jle
aam
in
cmp
int3
jns
pop
push
cs
ds
mulb
std
jmp
shl
xchg
js
push
mov
push
mov
mov
mov
scas
xchg
jns
fistpll
inc
nop
xlat
xor
push
movsb
mov
ss
dec
stos
or
dec
xor
sub
mov
mov
stc
in
in
addr16
jb
dec
or
xchg
and
sub
mov
inc
fstpl
jb
jle
push
movsl
and
mov
push
popa
lock
sub
cmp
sub
aas
add
push
mov
jbe
mov
mov
imul
les
pushf
mov
jl
orb
pop
loopne
daa
xchg
imul
jno
repz
pusha
lahf
ljmp
mov
bound
sahf
add
rcl
arpl
fstl
insl
cmc
mov
call
sbb
push
inc
pop
stos
mov
inc
loopne
push
scas
mov
loope
push
xor
pop
jbe
sbb
sbb
sti
pop
loop
pop
les
cmp
push
mov
adc
mov
push
push
psrad
outsb
jbe
push
mov
outsb
aaa
push
adc
push
cmp
daa
or
jle
mov
xchg
mov
aaa
and
xorb
mov
xchg
or
push
lcall
rep
mov
cmp
out
and
nop
jae
daa
mov
and
int
loopne
mov
sub
pushf
xchg
pop
repnz
std
leave
out
or
lret
and
adc
inc
xor
sbb
nop
inc
lods
mov
mov
repnz
cli
dec
add
fs
xor
aas
popa
dec
addr16
imull
shll
push
inc
mov
sti
mov
stc
dec
push
je
loopne
mov
inc
jmp
insb
scas
jl
xor
jge
mov
pop
xor
mov
push
sbb
push
add
lock
jmp
mov
fistpl
xchg
mov
xchg
push
leave
mov
cld
mov
dec
das
lret
out
jno
add
pop
std
ror
jne
sub
jle
mov
shlb
leave
mov
mov
icebp
mov
sbbb
xlat
push
insb
sbb
push
rolb
dec
fists
negl
cld
cmpsl
es
xor
push
fwait
lcall
pop
adc
jnp
sti
jp
aad
test
jmp
mov
mov
pop
ljmp
loop
shl
pop
mov
push
sub
in
inc
fwait
div
je
test
sbb
push
rcr
pusha
mov
cmp
rcrl
mov
push
jae
xor
mov
xchg
cmp
push
out
in
movsb
sub
cld
loope
xchg
cwtl
dec
outsl
stc
mov
clc
or
fisubl
mov
out
popf
rcr
or
out
fst
mov
out
sarl
sub
gs
xorb
in
mov
leave
call
mov
mov
lock
mov
pop
mov
cli
into
fwait
sbb
inc
push
push
push
in
mov
and
ss
jne
pop
mov
fldl
addb
xor
mov
aam
xor
bnd
add
mov
inc
out
jnp
call
imul
dec
inc
mov
int3
cs
mov
sti
ds
xor
mov
cli
mov
inc
pop
ror
jne
mov
enter
pop
sub
push
sbb
rdmsr
push
pusha
sub
adc
vminpd
loopne
ljmp
push
repz
cmpsl
fstp
mov
in
mov
ja
int3
xchg
push
rcl
sahf
clc
mov
imul
mov
lret
inc
mov
push
pop
push
cmp
cmpsl
int3
jle
andb
ljmp
add
add
rcll
pop
xchg
push
rorl
pop
mov
aad
sub
pop
jge
jno
dec
popf
dec
mov
xchg
nop
movsb
fwait
jmp
outsl
rcl
mov
inc
dec
sub
add
loope
cmp
pop
jne
mov
mov
popf
popa
jge
aam
cli
inc
xorl
sub
jecxz
xchg
subb
int3
sbb
mov
shrl
js
lods
inc
jge
loop
mov
add
loope
adc
jmp
jle
pop
mov
stos
mov
xor
add
inc
negl
push
outsb
mov
sbb
rcll
xchg
add
mov
outsl
pop
push
stos
push
xchg
gs
out
sub
stos
jmp
inc
mov
mov
or
mov
mov
testb
arpl
lret
cmp
movsb
imul
cltd
fsts
lds
cmpsb
fwait
addb
mov
sub
mov
jge
and
mov
mov
push
repnz
xchg
cwtl
mov
js
jmp
leave
je
icebp
enter
roll
cwtl
sub
testb
sbb
mov
mov
ja
lahf
xor
mov
push
mov
push
cmpsl
xchg
std
pop
sub
decl
lret
std
dec
push
or
cmp
cld
insb
in
inc
pop
jmp
xchg
popf
icebp
vprotq
mov
push
lcall
icebp
jge
mov
stos
jl
push
rol
pop
jmp
jmp
jae
push
int3
popf
cs
xchg
into
mov
cwtl
jge
repz
cmp
test
sub
xchg
movsl
data16
push
add
dec
test
fsubs
scas
emms
test
push
jo
into
push
mov
mov
jle
in
dec
ljmp
mov
push
cmp
mov
push
cmc
out
and
cmp
lahf
clc
lods
scas
ret
jecxz
mov
arpl
cmp
into
add
cmp
fildl
or
mov
aam
mov
add
stc
mov
out
mov
aad
cwtl
xchg
dec
mov
lahf
adc
js
push
xor
sbb
dec
int
das
mov
mov
cwtl
sub
mov
push
adc
je
popf
lods
mov
jno
sbb
push
xlat
ret
movsl
lret
add
out
and
aam
or
and
push
scas
push
xchg
loope
call
divl
push
ret
fists
mov
adc
imul
adc
inc
mov
das
xchg
dec
rorl
shr
sub
pop
scas
sbb
cmp
jmp
dec
inc
sbb
sbb
mov
inc
lds
lcall
cmp
scas
xor
mov
imul
inc
dec
mov
push
cs
inc
ret
push
shl
add
cs
lahf
sub
pop
and
push
fcmovnu
ret
xchg
sub
ror
fdivrs
push
inc
stc
lods
adc
mull
and
push
add
outsb
add
push
ficomps
call
mov
out
das
std
xchg
shlb
push
repnz
cld
dec
movsb
sahf
pop
aam
jns
dec
int3
movsl
rorb
push
jnp
push
and
cmp
xor
rcrl
ret
xchg
inc
and
dec
jns
mov
inc
push
or
cmp
out
xor
ret
push
ja
stos
xchg
add
cmp
mov
sbb
hlt
out
mov
dec
add
pop
incb
enter
pop
aaa
mov
lret
jae
xor
inc
jmp
dec
test
ds
ljmp
xchg
mov
incl
test
push
push
mov
xchg
dec
daa
je
mov
inc
xchg
jecxz
scas
or
es
loop
xor
popa
scas
xchg
jecxz
xor
loope
mov
cmp
jle
in
pop
icebp
pop
sahf
fisubs
ret
dec
shlb
pop
xchg
cmp
sbb
sbb
gs
mov
popf
pop
iret
test
adc
adc
icebp
shlb
cmpsl
inc
sub
sbb
inc
cmp
inc
sahf
loope
lcall
push
add
inc
fstl
inc
sbb
xor
test
cmp
cmp
mov
dec
mov
stc
fadds
xchg
and
call
sub
ja
les
ljmp
sub
mov
mov
subl
push
fdivr
xchg
xlat
sbb
push
ret
xor
scas
mov
sbb
rcrl
mov
shrl
jbe
aas
and
aad
sbb
and
stos
and
imul
inc
jmp
iret
aas
aaa
cmpsl
xor
push
jne
xlat
inc
roll
nop
adc
js
pusha
lahf
or
inc
fcomps
pusha
jmp
cmp
in
xchg
sub
js
pop
push
das
push
fisubrl
daa
insl
imul
stos
insl
mov
inc
fwait
test
jo
xchg
inc
adc
sbb
bound
sti
add
mov
mov
inc
jnp
ja
inc
gs
popf
inc
inc
sbb
jbe
mov
mov
xchg
repnz
dec
fimull
inc
mov
lods
out
shlb
dec
mov
addb
sahf
dec
and
or
dec
pop
iret
pop
xchg
mov
sub
adc
popf
dec
pushf
cmp
push
nop
adc
xor
int3
inc
mov
push
scas
push
mov
cltd
test
and
jb
das
ficoms
mov
mov
cwtl
jge
push
sbb
aas
in
cmp
jns
mov
out
fldenv
add
call
or
pop
scas
pushf
sub
ss
scas
je
ret
pop
pushf
lahf
xor
push
mov
fs
push
and
das
mov
inc
sbb
ljmp
lret
xor
add
idivl
sbb
test
mov
push
xchg
mov
daa
ljmp
cwtl
adc
or
pushf
nop
add
sarb
mov
stos
scas
ror
inc
mov
int
mov
mov
push
jnp
cmp
dec
lret
mov
out
fldenv
inc
cmp
int
fistps
mov
push
xor
add
xchg
add
mov
dec
imulb
dec
fwait
sbb
out
dec
imul
mov
dec
pop
push
sbb
inc
hlt
int
mov
cwtl
push
dec
xlat
bound
mov
fidivl
imul
mov
movsb
jmp
cltd
mov
clc
fmull
movsb
mov
out
popf
ljmp
sahf
push
mov
fidivs
cltd
int
inc
mov
dec
cmp
popf
fs
out
pusha
pop
sbb
mov
sub
inc
out
dec
pusha
icebp
imul
jecxz
mov
dec
in
scas
jl
xchg
in
pop
fstpl
dec
or
add
push
test
fiadds
cmp
xchg
js
pop
inc
mov
xor
cmp
fisubrl
xchg
sahf
dec
cmc
push
mov
and
sbb
mov
arpl
xchg
test
das
imul
ret
push
xor
mov
push
cmc
fmuls
or
loope
test
sbb
in
mov
inc
nop
inc
addr16
jge
enter
jecxz
mov
mov
pop
lea
mov
frstor
lret
daa
leave
jb
sbb
mov
jnp
and
mov
dec
or
mov
jnp
mov
add
or
mov
mov
sbb
push
push
dec
fwait
test
pusha
stc
addr16
lret
out
jp
lret
dec
jnp
push
ret
add
lret
push
stos
fwait
or
push
fsubrp
repnz
out
lods
call
inc
addr16
jl
jno
xchg
sbb
mov
cmp
hlt
sbb
rorb
pop
test
scas
jl
test
push
mov
test
mov
sahf
push
adc
outsb
and
push
xchg
fisubl
xchg
fsubrl
cmc
mov
dec
dec
test
stc
test
les
and
and
fisubs
stos
rol
scas
shrb
lds
pop
bound
rorl
adcl
lea
xlat
nop
fstl
mov
outsl
fidivs
jmp
add
je
cmpsl
or
inc
mov
sbb
addr16
xor
andl
aas
rcr
xor
inc
dec
sub
lret
dec
xchg
test
inc
rorl
mov
inc
adc
xchg
jne
int3
dec
sub
inc
mov
mov
or
adc
and
movsb
data16
mov
stos
push
mov
xchg
cmpsl
movsb
scas
cwtl
repnz
loope
xor
push
cmp
mov
scas
test
push
test
push
popf
sub
test
mov
adc
xor
xchg
mov
loopne
sub
outsb
iret
cltd
inc
dec
xchg
and
push
push
int3
cmc
lds
sub
lock
aad
mov
adc
cltd
out
jae
enter
or
mov
lcall
cmp
push
dec
and
and
mov
push
call
mov
stc
outsb
or
in
dec
and
or
sbb
test
mov
push
xchg
imul
mov
mov
dec
sub
inc
test
scas
mull
pop
sbb
pop
push
push
inc
or
popf
jle
xchg
ljmp
dec
test
push
sub
push
int
jbe
outsl
sti
jge
inc
cmc
scas
lcall
or
and
cwtl
lea
mov
jle
sub
mov
push
dec
shll
jge
in
pushf
fldz
push
or
mov
cmp
add
rolb
cmc
inc
test
lret
sbb
mov
jo
pop
icebp
fnstenvs
and
sbb
push
xchg
imul
and
sbb
mov
fs
dec
lret
leave
sub
fs
stos
dec
jge
add
fsub
dec
adc
ja
mov
mov
nop
cwtl
mov
lock
lret
jcxz
dec
aam
lret
sti
mov
fwait
out
lock
mov
flds
mov
push
pusha
aas
push
xchg
cmp
fcompl
jae
outsl
cwtl
imul
iret
pop
inc
xor
call
cli
stos
std
cmpsl
stos
push
cmp
fcoms
xchg
rolb
push
mov
xor
jo
lahf
push
mov
dec
jmp
jg
pushf
cmp
stos
mov
dec
pop
add
inc
in
push
or
jp
xor
adc
jmp
mov
into
mov
int
push
add
das
je
cmp
mov
and
lret
and
xor
loop
imul
dec
test
jne
xor
mov
in
add
jmp
mov
lret
sbb
jns
xchg
adc
mov
mov
push
ljmp
sbb
jno
in
rcl
lds
stc
ljmp
push
and
loope
mov
sti
scas
cs
lcall
ljmp
outsb
jno
rolb
ret
jle
adc
ljmp
aaa
xchg
inc
mov
movsl
cmp
jnp
and
push
pop
sub
mov
xchg
xchg
sub
jl
data16
push
cmp
imul
out
fs
int3
fcmovnbe
xor
add
mov
sbb
fstpt
xchg
jb
cmp
xchg
test
jbe
mov
pop
mov
jnp
mov
add
mov
mov
scas
stos
scas
fcomp
mov
dec
push
cmp
inc
fcmovnbe
jns
or
imul
daa
call
xchg
clc
aaa
inc
jmp
fcomip
add
mov
lret
or
das
rcrl
and
sub
sahf
pop
stc
and
orb
sub
cmc
adc
in
or
cs
rcrb
mov
bound
xchg
rol
sti
push
fidivs
cmp
jp
leave
lcall
nop
xchg
imul
push
ljmp
clc
lret
push
int
clc
and
dec
jp
cmpsb
push
fwait
ljmp
cmp
addr16
jmp
ds
aas
fildll
clc
sub
xor
jo
repnz
adc
mov
fsubr
cmpsl
mov
leave
or
popf
clc
jae
adc
or
lret
imul
push
cltd
push
lcall
sti
repz
mov
pop
jb
or
push
mov
dec
pop
sbb
and
bound
lods
pop
adc
mov
cmp
sbb
or
inc
lret
jecxz
ror
mov
jg
inc
mov
dec
iret
jnp
ds
out
pop
cli
cmp
xchg
mov
cmpsb
jo
shll
fxch
fidivl
cmp
sbbl
sbb
in
mov
lods
sbb
mov
mov
inc
nop
call
shrb
push
and
sbb
xchg
mov
jne
ret
push
cmpsb
xchg
mov
popa
and
xchg
outsl
jle
imul
push
stc
imul
xor
sub
outsb
call
and
xor
or
cmp
ja
push
jle
icebp
sarb
xchg
jp
jo
sbb
mov
movsb
shl
shld
pop
xor
sahf
xchg
mov
fdivl
xchg
push
xchg
fistpll
movsb
inc
xor
sti
ljmp
leave
dec
push
adc
lahf
popa
push
adc
push
xor
fists
sbb
rclb
mov
fildll
pop
xor
pop
rolb
rorb
add
nop
mov
add
xchg
into
scas
scas
inc
fwait
dec
mov
cmp
pop
mov
cmp
dec
outsl
pop
inc
loop
cmp
fldt
out
cmpsl
jne
ret
and
in
mov
mov
stc
and
xchg
adc
out
sahf
addr16
sti
xchg
aad
xchg
scas
repnz
outsl
adcl
adcl
clc
adc
mov
sti
test
add
stos
mov
ds
xor
sub
nop
sub
jb
and
sbb
addr16
cmpsb
jae
ret
and
xchg
in
dec
out
sub
mov
pop
ljmp
push
mov
mov
neg
inc
sub
mov
out
sbb
mov
out
mov
mov
pop
in
cmpsl
jno
dec
and
sub
pop
aam
aad
fidivrl
xchg
pcmpeqd
je
pop
push
jecxz
je
cmpl
in
add
xchg
in
add
sub
jns
repz
dec
push
lret
xchg
insb
inc
ja
icebp
xor
xor
in
inc
rcrb
sub
into
stc
xchg
bound
fadds
arpl
pop
or
aas
mov
and
pusha
sbb
add
cmp
fcoml
jnp
mov
pop
cmpsl
insb
sbb
les
clc
shl
adc
movsl
add
pusha
sahf
mov
jg
xor
inc
xchg
stos
lock
xor
sub
push
shlb
cli
ja
dec
shlb
cmp
xchg
repz
push
xor
pop
or
mov
dec
sbb
jecxz
mov
gs
add
adc
or
push
jbe
sahf
lods
jno
test
adc
pop
add
jno
outsb
dec
js
mov
dec
mov
aaa
bound
adc
pop
mov
out
mov
clc
adc
inc
jo
into
add
add
mov
in
das
sbb
push
pushf
stos
xchg
inc
pop
mov
inc
and
jns
pop
dec
fwait
pop
mov
fiaddl
fsubrl
xchg
iret
mov
hlt
xor
ds
push
adc
adc
sbb
arpl
into
out
xchg
aaa
jbe
or
xor
fstpl
mov
mov
pop
pop
rcr
dec
and
and
and
in
loopne
and
xlat
call
jb
push
mov
in
sbbb
les
leave
inc
daa
xor
rorb
cmp
fwait
out
jmp
lock
or
out
inc
dec
addl
and
popf
add
in
lods
into
addr16
or
addb
mov
dec
pop
enter
push
inc
xchg
fs
rclb
nop
cltd
test
shl
js
sti
repz
sbb
sub
jmp
xchg
lods
mov
sbb
in
and
xchg
xchg
popa
xchg
sub
lret
xchg
adc
mov
dec
ffree
xchg
insb
cmpsb
jne
ds
mov
nop
pushf
push
dec
ret
pop
mov
fdivrp
add
lods
mov
dec
or
test
mov
sarb
lds
insl
or
lds
lcall
pop
std
mov
pop
notl
mov
xor
pusha
mov
lahf
daa
lahf
lods
iret
xchg
scas
jle
das
lahf
fidivs
and
push
add
sbb
out
paddq
xchg
xor
xlat
xchg
dec
call
or
sub
xchg
aaa
shl
xor
pusha
xlat
jns
fstpl
ja
js
sbb
clc
mov
cmp
or
fidivrl
dec
fiaddl
test
div
popa
nop
popf
cmc
cmp
mov
push
xorl
int3
dec
mov
mov
jmp
insl
ds
js
stos
je
ljmp
subl
mov
mov
pop
imul
out
jecxz
aad
dec
daa
pusha
pop
pop
cmp
shlb
cmp
addl
mov
push
popf
imul
xlat
cmp
or
loopne
mov
scas
fcmovnbe
icebp
cmp
icebp
or
mov
or
cmp
xlat
mov
adc
and
xchg
mov
adc
fmull
adcb
ret
jno
jg
lret
dec
sub
jae
sbb
or
out
pop
or
aad
push
je
xchg
int
pop
jp
mov
mov
sbb
push
lods
repnz
and
inc
jne
stos
and
gs
arpl
pop
hlt
inc
or
scas
shll
ljmp
xor
loopne
cwtl
fldt
and
ret
lahf
aaa
mov
shlb
mov
pop
pushf
xor
mov
inc
std
cli
cmp
shr
outsl
das
std
xor
mov
mov
pop
mov
sub
imul
imul
cld
fildl
jge
jle
daa
xchg
test
push
push
lret
jno
jp
lret
or
push
sti
into
mov
je
inc
mov
ja
jmp
dec
imul
ljmp
and
cmc
jmp
mov
pop
ret
sti
sbb
orb
nop
xor
sbb
test
leave
rcrl
push
adc
dec
and
testb
mov
cmovl
add
xchg
inc
xor
sahf
aas
nopl
pop
aad
fists
addb
or
in
xor
xor
test
xor
mov
xchg
shll
mov
in
dec
gs
xchg
ja
jl
adc
pop
shrb
mov
xchg
push
xchg
adc
loopne
push
nop
cmpsb
fdivs
xor
test
dec
lea
mov
js
and
push
leave
addl
cmp
pop
rcr
inc
and
and
ret
scas
pop
mov
cmpsb
insl
cmpsl
mov
xor
xor
jle
stos
inc
ja
enter
mov
enter
jne
jmp
lcall
cmc
clc
pusha
lret
adc
out
mov
xlat
mov
cli
cmp
xchg
lahf
mov
hlt
cmc
jns
xchg
push
sbb
lods
sbb
aad
mov
cltd
or
sub
cmpsb
mov
dec
adc
dec
jp
sbb
icebp
push
mov
test
cmp
in
jle
daa
cmp
loopne
mov
cwtl
ds
add
leave
lcall
adc
push
cli
cmp
test
cltd
iret
sbb
or
adcb
or
adc
rcrb
ljmp
lods
inc
gs
jns
dec
loop
mov
popf
loopne
mov
add
dec
shll
js
dec
pop
push
das
mov
in
jmp
add
mov
mov
add
xor
mov
push
xchg
push
sub
ja
mov
lods
xchg
loopne
nop
test
loope
stos
and
imull
xchg
mov
mov
ret
cltd
out
pushf
mov
movsb
aad
pop
mov
push
fs
jb
adc
push
call
jge
gs
cmpsb
mov
cmp
jno
test
out
cmp
dec
cmp
inc
push
int
or
ljmp
in
inc
adc
aad
inc
mov
frstor
add
das
and
push
push
lret
add
out
mov
dec
inc
adc
and
dec
sub
shl
and
inc
inc
mov
or
in
mov
ret
loop
mov
mov
jno
inc
adc
movsb
add
jg
cmp
xchg
fstps
in
sub
or
sub
in
inc
cmp
inc
jno
pop
aad
sbb
loope
idiv
dec
js
je
ja
es
rcl
xor
add
lcall
popa
iret
or
pop
dec
sub
arpl
arpl
inc
xor
jl
sub
gs
push
stc
jo
test
in
jae
pop
xchg
jno
repnz
iret
pop
inc
jo
mov
out
scas
int3
pusha
adcb
xor
jmp
sarb
cmp
push
mov
std
ss
fistpl
push
es
shll
mov
call
lock
jecxz
out
addr16
and
xchg
cmpsb
or
mov
ret
and
adc
mov
sbb
test
push
lret
dec
outsb
jmp
lods
mov
dec
fnstenv
js
mov
outsb
aaa
add
pop
arpl
mov
push
inc
pop
push
inc
adc
pop
dec
cmp
xchg
not
xchg
mov
dec
hlt
movsb
cs
sti
adc
mov
adc
outsb
jnp
pop
aam
cmpsl
ret
jg
in
push
pop
push
addr16
je
aad
loope
push
sahf
sub
nop
or
sbb
mov
cmp
or
xchg
out
pop
in
jb
adc
and
xlat
aas
movsb
or
and
in
jp
jge
gs
je
sarb
js
dec
int3
sbb
cmp
pop
xor
cmp
daa
aaa
dec
test
ret
push
xor
andb
dec
or
or
in
fisttpll
fwait
xor
in
sub
pop
jnp
cmp
sarb
daa
inc
fdivl
push
pop
mov
xor
and
mov
sub
js
cmp
scas
adc
push
movsl
xchg
and
rcr
mov
inc
arpl
cmp
or
inc
inc
fs
outsl
out
lret
enter
push
xor
stos
mov
sarl
iret
dec
and
push
lock
inc
sub
jbe
int3
cmp
data16
sbb
insl
adc
js
xchg
mov
fisttpl
adcl
rorb
pushf
sbb
mov
dec
xchg
fisttpl
pop
xchg
inc
cwtl
or
dec
inc
inc
ljmp
idivb
push
shr
test
and
sbb
leave
stos
sahf
jno
inc
int
inc
ss
mov
mov
lods
adc
push
xchg
and
jecxz
push
cmp
xchg
push
sub
je
cwtl
push
or
push
mov
ret
sub
repz
xchg
fidivrl
lret
add
jp
pop
jmp
or
dec
jo
dec
xchg
adc
jmp
jecxz
adc
leave
sbb
fldl
inc
out
xor
push
inc
sahf
xor
stos
pop
pop
popf
addb
lret
iret
sti
fisttpl
sbb
ljmp
jmp
cmp
pop
cmpsb
popa
mov
xchg
cmp
mov
mov
add
rcll
pop
jmp
cmp
dec
test
cwtl
mov
lods
out
icebp
pop
divl
inc
jbe
repnz
in
lock
cmc
or
pushf
bound
inc
in
sar
std
add
loope
xchg
pop
unpckhps
test
sbb
mov
js
fwait
repnz
sub
pop
push
popa
mov
orb
pop
mov
enter
mov
std
pop
data16
mov
enter
fwait
repz
and
loope
jns
out
or
sarl
addr16
pop
loop
push
xor
dec
xor
pop
sbb
sbb
mov
or
pushw
lret
mov
stos
mov
out
repnz
ljmp
popf
stos
adc
loope
ljmp
push
cltd
insb
xor
sub
pop
or
jbe
hlt
jge
mov
push
ja
outsb
cltd
fdivs
fisubrl
sti
dec
and
out
or
add
scas
std
adc
shl
jp
sub
and
add
mov
xchg
repz
xor
cli
movsb
add
pop
mov
lret
mov
fwait
je
in
fiadds
mov
sub
jns
lods
imul
add
outsb
call
mov
in
stos
loopne
jne
stos
push
lcall
cmpsl
push
popf
test
ret
mov
jbe
xor
pop
jl
jae
adc
scas
sub
out
or
sub
jmp
repz
lock
ljmp
xchg
push
inc
leave
punpckhdq
cmp
mov
js
pop
mov
aad
clc
pop
push
pop
inc
cli
scas
jl
lcall
rcrb
in
incl
push
adc
sub
xchg
add
xchg
mov
shll
push
cli
or
ja
movsb
sbb
pop
jg
add
sub
pushf
gs
inc
sub
lcall
test
mov
pop
or
aad
adcb
mov
adcb
in
pop
les
push
shll
cmpsb
mov
testl
jae
arpl
xchg
push
bound
inc
sub
mov
cmp
xchg
mov
push
incb
cmp
lods
sbb
and
ja
inc
insl
mov
pop
pop
mov
xchg
add
lock
xchg
sbb
xchg
and
imul
ret
stos
test
cmp
pop
mov
mov
lea
lcall
ret
xor
decl
inc
xchg
aad
cmpsl
xor
mov
pop
arpl
pop
in
cmp
leave
fwait
add
cmp
into
shrd
mov
rcrb
je
mov
ret
in
pop
push
xor
ja
fidivl
inc
stc
xchg
out
out
mov
gs
shrb
xchg
xchg
mov
pop
cmpsb
add
shlb
cmpl
decl
inc
pop
jne
add
imul
jmp
mov
add
jp
mov
mov
push
dec
stos
insl
fmull
lods
popa
xchg
adc
sbb
sub
or
es
sti
jp
ljmp
adc
std
movsl
shll
jb
and
testb
sahf
add
push
xor
xchg
aas
and
cmp
inc
lret
test
xor
popf
inc
ret
sbbl
xchg
jnp
int
xchg
add
cld
loopne
sub
pop
sbb
push
add
sbb
jae
arpl
adc
push
addr16
adc
into
movsl
push
addr16
pop
int
cmp
and
out
fldenv
push
in
std
sub
pop
mov
int3
and
dec
mov
aas
mov
fnsave
imul
xchg
or
mov
les
js
loope
insb
jle
mov
mov
push
das
cmp
data16
ds
cmc
xchg
or
push
pop
dec
lea
bound
popa
xchg
call
dec
cmc
inc
sbb
inc
add
mov
mov
arpl
pop
adc
fwait
popa
lods
cmpsl
adc
scas
push
scas
or
aas
lret
in
rcll
jge
sub
scas
push
inc
pop
jecxz
stos
sbb
mov
out
sub
mov
fsincos
adc
lahf
cld
subb
pop
add
ljmp
push
je
cmp
mov
add
xor
push
pop
stos
cmpsb
int3
xor
ret
ds
shll
js
sub
jp
mov
push
adc
mov
adc
mov
test
mov
addb
dec
fsubl
insb
aam
sbb
mov
out
dec
sbb
push
in
movsl
shll
inc
inc
fmul
roll
shlb
xchg
cmp
daa
jne
fld
scas
sub
scas
mov
les
pop
int3
notb
jns
ret
loope
mov
and
jl
pop
jo
jns
sub
in
daa
test
fsubrl
pop
mov
vaddsubps
lods
push
fsubs
fwait
pop
jle
mov
ret
scas
mov
add
sub
mov
add
jmp
repz
inc
cmp
mov
std
cmp
pushf
test
add
mov
jecxz
and
orl
cs
aam
dec
inc
jl
imul
push
or
stc
repz
push
data16
testl
cmc
outsl
cmp
pop
mov
mov
in
adc
pusha
mov
gs
in
insb
mov
lret
push
mov
mov
dec
mov
insb
cmp
gs
sub
ljmp
aam
jb
stos
ret
les
stos
pop
in
mov
mov
imul
push
cmp
fdivp
outsl
pusha
vmptrld
popf
lahf
mov
mov
or
lahf
pop
xorl
cmp
dec
xchg
cmpsb
sbb
shll
jne
sbb
test
out
cmp
and
rcrb
loop
les
int
faddp
pop
ret
inc
lret
mov
outsb
data16
lret
mov
dec
sub
mov
repnz
loope
adc
leave
mov
or
jle
test
sub
js,pt
sub
loopne
cmpsl
fsubrs
jmp
dec
mov
xchg
jns
shrb
das
mov
pusha
jns
sub
bound
jge
dec
inc
test
mov
in
repz
cmp
sbb
sub
push
fs
push
sub
add
test
inc
cmp
pop
cld
push
and
xorl
stc
outsl
scas
cmp
out
sbb
lods
dec
mov
sbb
shll
subl
stc
mov
imul
adc
cmpb
leave
xchg
cmp
aaa
dec
fwait
aam
pop
dec
ljmp
add
clc
push
insl
ret
lahf
xchg
sub
les
nop
cmp
insb
mov
mov
fdiv
xor
xchg
sbb
sbb
stos
test
shrb
push
inc
rorl
mov
out
aaa
xor
push
mov
xchg
in
fisubrl
sub
cmpsl
sbb
inc
gs
mov
fnstenv
push
cmp
inc
xchg
lcall
outsl
loopne
imul
push
imul
sub
jb
test
enter
mov
repz
add
imul
sarb
and
jmp
xchg
into
xchg
daa
call
cmp
xchg
hlt
sub
lret
xlat
add
jno
mov
or
arpl
sbb
jae
mov
dec
dec
fdivrl
push
addb
inc
push
sub
jb
nop
dec
int
inc
and
js
aad
popa
or
mov
dec
cwtl
clc
insl
and
mov
mov
ss
cmp
push
xlat
pop
adc
rcll
in
or
mov
outsb
and
imulb
scas
out
xacquire
or
sub
sbb
test
cmpsl
xor
push
arpl
xchg
sub
aam
fidivrl
int
lret
cs
ss
rol
cmp
push
bound
add
lods
xor
mov
sbb
rol
es
add
dec
cmpb
xor
xchg
xchg
out
fmul
aas
sbb
dec
or
sbb
into
jno
dec
sbb
scas
sub
mov
mov
aad
mov
aam
or
iret
push
or
sub
dec
dec
jge
enter
pop
nop
aam
mov
shlb
stos
rcll
or
cmp
sub
lret
iret
xchg
mov
lret
outsb
daa
in
mov
inc
fdiv
inc
xchg
cmp
cmp
ror
pop
daa
hlt
add
test
and
jg
rorb
jb
imul
xor
sbb
fistps
mov
sarb
repnz
sub
pusha
lods
cmpsl
clc
pop
xor
insb
jb
push
jle
les
mov
xor
mov
pusha
lahf
add
sub
cmpsb
enter
in
add
sbb
iret
sub
mov
mov
dec
in
inc
and
mov
enter
add
outsb
ljmp
add
cmpsl
push
add
or
insl
les
imul
jmp
inc
sahf
pushf
jns
leave
inc
test
stos
dec
lods
cmp
stos
cmpsb
cmp
push
mov
nop
cltd
jmp
test
in
mov
lret
pop
stc
mov
mov
popf
inc
aad
stc
lea
ffree
sbb
mov
je
jns
xchg
add
or
xchg
out
xchg
icebp
notb
xchg
push
pusha
sbb
mov
fistpl
cmp
into
cli
dec
popf
mov
mov
popa
cmp
xchg
mov
mov
int3
sbb
rol
or
jecxz
mov
or
pop
or
fnstsw
loope
es
jno
pusha
xor
dec
fs
repz
test
adc
je
and
imul
imul
pop
sub
mov
ss
in
arpl
mov
xor
jae
bound
mov
fidivl
lahf
sbb
outsl
push
sub
sub
push
rcrb
pop
push
xlat
sub
inc
sahf
push
and
clc
fisubrl
push
call
out
dec
sub
push
shrb
scas
adc
scas
push
adc
add
call
or
push
lds
fnstenv
ret
das
mov
scas
pushf
scas
sarb
dec
dec
scas
sbb
les
xchg
imul
mov
lret
pop
xor
out
sbb
xor
stc
jmp
and
push
enter
push
sub
add
pop
add
push
sub
adc
sahf
xchg
cmpsl
push
jbe
or
adc
into
xchg
push
jae
mov
pusha
mov
sbb
mov
rol
sub
das
lea
jp
sarl
or
gs
daa
cltd
stc
push
jnp
or
sub
sub
popf
push
mov
pushf
ja
int
hlt
or
inc
shrb
imul
sahf
out
adc
xor
inc
sbb
jp
sbb
movsb
out
out
xor
jp
dec
jmp
ret
cltd
mov
dec
nop
sub
sub
movsl
shrl
cli
jmp
test
rorl
lahf
fisttpll
adc
scas
fisubrs
aas
adc
into
and
enter
insb
inc
lods
sub
dec
jge
repnz
sub
jl
popf
je
jns
test
mov
push
mov
push
mov
cmc
adc
enter
int3
fcoms
sti
mov
addr16
lret
xor
mov
test
ret
sbb
cs
test
nop
decb
cmp
push
dec
and
inc
mov
jae
or
inc
and
mov
add
rcl
bound
push
stos
in
mov
inc
ss
sub
or
push
sub
jnp
rolb
sbb
test
jl
inc
mov
or
sub
sti
pop
inc
fcoml
pop
add
jecxz
stos
jle
fisubs
movsl
sub
icebp
inc
gs
ja
ret
jmp
add
mov
or
fcmovnbe
movsl
pop
dec
ss
sub
sub
mov
or
dec
leave
mov
xlat
jp
daa
ljmp
rcrb
lea
lcall
sub
imul
mov
repz
dec
push
push
or
lret
jl
shlb
fsubl
iret
insb
lea
fcoml
lods
aaa
or
mov
jmp
loop
cmc
dec
lcall
movsl
dec
jl
and
add
push
inc
pop
push
inc
cmp
repnz
mov
and
or
nop
xchg
cld
loopne
lcall
mov
shll
mov
fstpt
sub
add
aam
sub
movzbl
ja
sarl
dec
xchg
scas
lock
fldenv
jmp
cmpsl
call
pop
je
test
sarb
loopne
mov
adcb
or
mov
aad
jbe
push
xchg
or
xlat
mov
dec
add
int3
inc
enter
or
mov
push
xchg
mov
jp
loope
jbe
loope
jmp
mov
int
je
shll
xlat
add
push
pop
or
ljmp
lret
pop
es
sbb
add
and
cltd
cmpsl
rcrb
outsl
pushf
mov
outsl
xchg
xor
outsb
jge
roll
mov
aas
xchg
mov
jg
mov
push
out
shrb
lret
in
pop
sbb
dec
adc
xchg
dec
out
int
mov
sbbb
fsub
xchg
mov
sti
inc
pop
push
mov
mov
insb
mov
ss
add
mov
sahf
jecxz
stc
ret
mov
testb
add
pop
push
push
and
jge
inc
xchg
or
into
jno
jmp
mov
fiadds
push
fsubs
or
cmp
std
popa
mov
mov
jecxz
ret
push
fwait
jbe
test
fldt
nop
and
and
xor
dec
fstps
adc
incb
or
ja
out
jmp
jl
test
jbe
push
repz
push
mov
adc
sbb
push
imul
inc
enter
jmp
inc
in
outsl
push
jmp
inc
add
test
cwtl
lods
xor
push
mov
movsb
fwait
jl
jl
sub
dec
fidivrs
jge
shrb
inc
cmp
adc
jnp
adcb
cmc
pop
imul
sub
push
in
push
push
cmp
fimuls
cmp
sub
popf
inc
mulb
inc
push
sarl
jp
adcb
xchg
rclb
jmp
pop
jecxz
rcll
xlat
sbb
push
push
sub
mov
push
mov
rorb
xchg
cmpsl
ret
das
insl
cmpb
push
push
add
sub
pop
cmp
arpl
mov
lahf
lock
xor
push
and
sbb
mov
or
xor
rorl
faddl
sub
adc
out
mov
incl
mov
push
sub
in
mov
mov
and
pop
lods
inc
and
js
inc
cmp
xchg
aaa
xorb
ds
les
pop
stc
cmp
add
mov
loop
adc
adc
arpl
mov
push
movsb
adc
mov
fstpt
and
cmp
rorl
rcrb
insb
fs
inc
clc
jb
js
cld
dec
ja
jle
lods
push
jo
adc
lock
movsb
or
lock
push
dec
imul
push
mov
pop
sahf
pop
or
push
inc
test
mov
pop
jne
rcrl
mov
push
and
inc
sub
movsb
movsb
shl
arpl
daa
pusha
push
test
cmp
pusha
mov
stc
in
jg
push
cltd
lret
adc
inc
out
pop
out
pop
dec
sbb
lret
lret
int3
ret
mov
sub
pop
add
jg
jp
nop
cli
testb
outsl
xor
mov
cs
bound
daa
idivb
adc
arpl
cmp
mov
sar
sbbb
push
clc
cld
test
rcr
fs
cwtl
dec
icebp
loop
add
xor
mov
sub
push
bound
and
hlt
sbb
pop
andl
test
mov
mov
rcll
mov
fldenv
push
movb
ljmp
in
test
mov
rorl
in
xchg
jbe
adc
mov
js
inc
mov
add
stos
test
lret
mov
frstor
fistps
int
cmpsb
fcmovnu
cltd
pusha
and
jb
push
or
or
xlat
fnstcw
mulb
sub
sti
cmp
pop
test
xlat
dec
pop
jmp
mov
scas
sub
mov
xchg
xor
pop
pop
xchg
xor
fidivrl
cmp
xor
mov
sarl
cld
cmp
mov
out
mov
stc
fwait
out
mov
sub
in
lcall
sbb
jp
mov
fiaddl
and
fstl
add
xchg
fs
or
xor
sbb
enter
xchg
nop
cmc
mov
notb
pop
int
jg
aas
data16
mov
or
sub
mov
aaa
mov
mov
int
or
mov
push
outsl
or
push
cwtl
lret
push
dec
cld
xchg
repz
inc
and
sti
pop
shll
add
cwtl
sahf
adc
add
cmp
pusha
jle
push
inc
shrb
les
push
add
pop
sarl
fldpi
je
scas
sbb
or
test
les
or
mov
in
leave
cmpsl
jmp
cmpsl
xor
push
movsl
cmp
lods
xor
daa
xchg
adc
xchg
iret
std
shll
jno
sbb
mov
xchg
lcall
dec
push
aas
das
pop
adc
mov
scas
pushf
dec
cmc
sbb
mov
add
loopne
subb
push
mov
enter
lret
mov
xor
insl
xchg
daa
dec
push
sub
les
mov
insl
inc
es
cmpsl
repnz
xor
mov
mov
je
faddl
pop
and
stos
jns
subb
imul
add
add
rep
mov
lds
sub
jbe
dec
lret
add
cmpsl
or
jp
dec
into
adc
xchg
xor
xchg
adc
jge
in
lods
adc
cmp
push
sub
aaa
leave
mov
es
lret
cmpsb
or
pusha
mov
jl
in
push
out
out
mov
adc
and
sar
fidivs
mov
mov
push
iret
out
bound
lret
cmc
xor
sbb
mov
add
jo
call
shl
mov
xchg
ds
pop
pop
out
xchg
push
jl
mov
lcall
insl
and
mov
outsl
fnstsw
lahf
cli
scas
inc
ss
mov
int3
mov
dec
sbb
or
dec
jne
cmp
stos
adc
xchg
mov
in
mov
dec
data16
adc
mov
jmp
fstl
lret
sbb
adc
sbb
cmp
jp
xchg
push
cmpb
or
pop
sahf
call
les
dec
adc
lock
pop
pusha
out
movsb
push
push
pop
cmpb
imul
mov
rorl
mov
mov
xchg
popw
add
mov
les
gs
rorb
sbb
clc
insl
mov
or
mov
mov
faddl
dec
sahf
sahf
hlt
inc
orb
inc
cwtl
inc
push
aam
int3
fildl
fmul
sub
xor
xor
cmpsb
cmpsb
mov
mov
pusha
idivl
mov
sub
mov
mov
mov
movaps
aam
sub
ret
jae
push
fisubs
fdivrl
loop
ljmp
push
push
sub
sub
das
push
rorb
adc
xor
inc
xor
test
lods
arpl
cmp
fistl
mov
testl
adc
dec
xor
xchg
sub
cmpsl
inc
cmp
xchg
mov
shlb
cmp
je
mov
loop
dec
add
pop
cwtd
cmp
cld
mov
addr16
fsubr
adc
pop
sub
stos
insb
int3
jp
pop
lods
and
xor
iret
mov
aad
mov
push
adc
xor
jecxz
inc
mov
popa
push
and
test
push
aas
insl
inc
fstl
mov
push
mov
sti
mov
loop
add
sbb
outsl
cmp
pop
and
jne
int
push
mov
push
shl
and
stc
cmpsb
and
wbinvd
push
test
sti
or
pop
sbb
mov
adc
sbb
outsb
jnp
xchg
pushf
test
into
fcoml
lahf
mov
or
inc
mov
xchg
cmp
xlat
lcall
xchg
adc
cmp
dec
push
stc
mov
pop
mov
sbb
adc
adc
out
and
inc
pop
push
ror
and
test
and
pop
xchg
mov
into
fisubs
arpl
adc
clc
mov
sbbb
das
js
xchg
test
mov
lea
cld
push
sub
push
je
xor
xor
inc
mov
sbb
iret
jle
test
cwtl
adc
mov
dec
dec
cwtl
mov
and
icebp
cmp
mov
mov
mov
xchg
push
sub
mov
add
les
mov
scas
loop,pn
test
repz
aam
pop
jae
aaa
js
mov
xor
mov
mov
repz
pop
dec
pop
movsl
test
jne
xor
jae
pushf
dec
cmpsb
call
repz
pop
add
leave
mov
push
dec
sub
jo
outsb
aas
jno
scas
cld
hlt
pop
or
orb
mov
es
inc
xchg
mov
pop
jecxz
pusha
jo
mov
sbb
or
jmp
push
dec
mov
jo
add
or
pop
xchg
orb
or
inc
and
or
enter
outsl
test
xchg
loop
enter
xchg
repz
lods
scas
cmc
lahf
int
es
imul
jp
fwait
add
scas
mov
dec
stos
sbb
adc
idivl
notl
dec
gs
push
pop
pop
int3
sahf
data16
mov
fdivs
cmpsl
pusha
xor
push
mov
dec
mov
dec
or
arpl
insb
mov
rorb
cmp
jns
fs
iret
and
xchg
enter
int3
ljmp
or
mov
pushl
pop
push
mov
xorl
lcall
imul
out
jbe
jns
or
cmp
inc
push
aad
push
cwtl
adc
mov
shr
imul
pop
jg
ror
jge
sub
cltd
fldt
xchg
push
fsts
xchg
das
sub
aaa
mov
out
test
sarl
pop
and
adc
mov
pop
aad
ret
jns
mov
push
sub
push
rclb
scas
adc
fisubrl
test
dec
repnz
sbb
fcmovb
dec
mov
fldlg2
lret
and
loope
lret
fmull
test
push
inc
cs
insl
jmp
mov
clc
aad
sub
cmpsb
mov
cld
js
inc
mov
icebp
imul
jbe
in
push
movsl
int
test
orb
dec
scas
cmp
movb
xor
add
iret
lcall
pop
test
fstl
xchg
xor
pop
sub
imul
jnp
pop
cmc
out
movsb
mov
aad
jmp
dec
push
mov
pop
jo
mov
das
push
enter
push
jle
or
pop
mov
insb
ja
cmp
xor
data16
and
pop
mov
mov
popf
mov
inc
loopne
mov
insl
cmp
mov
stc
repz
enter
lods
shll
in
pushf
or
mov
call
cmpsl
mov
ss
popa
cmp
call
cmp
mov
cmp
sbb
mov
mov
shll
out
aad
ja
movsl
lcall
loope
jp
and
mov
pushf
dec
sahf
jb
xor
and
fistpl
pop
test
fcoml
pop
lahf
cmc
xchg
or
int3
mov
mov
cmc
pusha
js
sbb
test
in
inc
inc
lret
add
jns
cld
mov
lock
sbb
mov
xchg
mov
pop
adc
xchg
scas
test
imul
xchg
jg
lahf
xchg
xchg
repz
imul
fs
and
push
fwait
js
push
adc
pop
gs
inc
sbb
aas
mov
sti
add
dec
mov
subl
push
scas
or
jns
jne
orb
xchg
insl
pop
pop
orb
and
mov
mov
or
lods
movsl
lret
inc
or
jns
xlat
dec
sbb
sbb
addb
mov
jecxz
jmp
stos
cmp
pop
push
pop
outsb
add
shll
ja
fdivl
add
mov
mov
jns
mov
iret
clc
sti
adc
iret
lcall
mov
jmp
mov
xchg
adc
jge
push
scas
inc
add
call
fsubl
sbb
push
sub
push
sahf
mov
outsb
jne
push
rcl
ret
roll
pop
pushf
xor
xor
mov
repz
adc
lret
mov
cmpsl
sub
jl
mov
jne
in
pop
ds
cmc
mov
sti
test
sub
rcrl
ljmp
push
das
out
imul
stos
push
sub
out
jmp
lea
mov
xchg
cmc
pop
add
mov
adc
push
ret
hlt
rorl
int3
leave
and
jl
idivb
dec
sub
cmp
shl
mov
orb
mov
cmp
push
and
imul
dec
push
and
jp
mov
andl
push
jg
movl
ss
sahf
mov
enter
repnz
ljmp
jp
cmp
or
outsl
inc
fcmovnu
or
sbbl
popa
cmp
cmp
cli
mov
push
xorb
icebp
cmp
pop
xor
fcomip
cwtl
cmp
add
or
data16
mov
mov
sbb
icebp
push
es
sbb
insb
loopne
lcall
ret
aaa
cwtl
jp,pt
fdivs
imul
push
mov
in
dec
lahf
repnz
mov
addr16
and
cs
inc
xchg
imul
stos
movsl
push
jne
imul
cmp
scas
or
push
xchg
pushf
push
jecxz
ret
or
inc
xchg
shl
mov
pop
test
sub
push
cmc
xorl
addr16
mov
imul
sbb
mov
or
lahf
xchg
fmul
add
shlb
or
pop
xor
fs
mov
in
sbb
mov
out
int
push
testb
jns
push
inc
pop
ficoms
inc
lods
add
inc
pop
xchg
add
icebp
sbb
roll
insb
stos
push
popa
vmwrite
sarb
jns
das
out
cmp
fs
or
cwtl
std
inc
mov
mov
xchg
mov
out
ss
or
push
cmc
js
push
adc
cmp
stos
js
xor
mov
repnz
fldenv
int
lahf
bound
jge
xchg
rolb
repz
scas
push
jl
movsb
mov
jno
pusha
push
ljmp
mov
lock
and
jne
mov
mov
fcom
stos
jne
fucomp
mov
ljmp
sub
add
inc
xlat
ret
imul
xor
dec
clc
iret
aaa
push
ljmp
mov
rorb
out
and
cli
lcall
in
or
ficoml
dec
cmp
gs
insb
cltd
mov
fistpl
and
gs
int3
and
mov
add
fisttpll
rorl
clc
ficoms
std
mov
in
pop
push
outsb
stos
aas
add
inc
jns
std
clc
add
jbe
sbb
dec
repnz
dec
jmp
in
sti
in
pop
push
push
pop
es
adc
sar
adcl
in
xlat
scas
mov
push
movsl
test
mov
jp
rcll
data16
sbb
xor
mov
cmpsl
pop
stos
xchg
pop
insb
pusha
idivl
xor
and
xor
adc
mov
mov
and
pop
divb
test
mov
mov
popf
mov
xchg
xor
inc
stos
sub
mov
cmp
cmpsb
bound
shll
sub
dec
push
xor
lods
mov
adc
inc
inc
fistpl
sti
outsb
mov
and
mov
pop
fmulp
mov
cli
pop
inc
mov
js
mov
mov
jnp
jmp
aas
adc
push
dec
andl
std
popl
pop
sbb
add
lcall
popa
ror
pushf
sbb
aam
outsb
ds
xchg
jns
jp
mov
push
pop
add
jb
mov
cwtl
inc
mov
pop
inc
inc
in
xchg
pcmpeqd
mov
mov
or
iret
pop
mov
lcall
iret
mov
hlt
daa
outsl
xor
je
in
ja
cmp
or
or
inc
pop
and
nop
mov
or
push
mov
icebp
mov
adc
mov
fisubrl
std
dec
add
lds
pop
ljmp
xor
repnz
mov
fldenv
shlb
and
loopne
dec
sahf
popa
fldt
mov
mov
xchg
mov
insl
test
sbbl
jl
cmp
aam
jne
or
popa
out
out
inc
lcall
inc
push
push
fcompl
pop
jne
ljmp
push
lock
cltd
shlb
and
stos
in
sbbl
push
leave
inc
jmp
sti
pop
mov
xor
aas
fstp
into
jmp
decb
add
popf
dec
mov
into
lods
out
sbb
jecxz
lahf
push
or
std
jg
jl
and
jns
jle
movsb
adc
xchg
sub
mov
inc
pop
lods
and
or
pop
outsb
xor
and
cld
fstpt
movsl
js
and
mov
orl
cwtl
pop
mov
rcl
xor
stc
inc
sub
sti
adc
jne
push
inc
sub
rcl
inc
cmp
fisubrl
das
mov
data16
jne
xor
xchg
shlb
cli
pop
jno
bound
xchg
bts
test
mov
rcll
mov
dec
push
cmp
push
fcompp
inc
jns
mov
out
sub
pop
or
test
jl
mov
inc
mov
jae
sub
in
pop
ja
imul
push
cmp
and
mov
push
and
imul
or
std
pop
push
push
xchg
int
das
jno
fstpt
ja
mov
loope
add
mov
ucomiss
std
mov
inc
scas
iret
jge
sarb
add
push
push
jne
int
pop
mov
test
sti
inc
jb
cmpl
out
jae
and
pop
sar
or
arpl
add
ret
push
test
popa
test
pop
dec
lcall
gs
lcall
mov
cmp
inc
dec
and
jmp
pop
test
sbb
stc
sbb
xchg
mov
dec
es
pop
fsubrs
add
addr16
les
jno
loop
insl
in
xchg
mov
cmp
and
cwtl
xchg
xchg
dec
xchg
adc
xchg
or
addl
vcvtps2dq
test
sub
aas
mov
shlb
jbe
mov
test
adc
movsb
mov
es
flds
mov
bnd
adc
or
ss
je
js
pop
xchg
mov
jnp
push
mov
outsb
dec
pop
and
bound
iret
mov
testb
sbb
lods
mov
cwtl
loope
aaa
jecxz
lock
out
jmp
pop
push
in
or
and
push
mov
jmp
pop
xor
jns
sub
jmp
leave
or
sub
insb
outsb
sbb
loop
cmpsl
sub
iret
shrl
movsb
lret
das
insb
mov
xor
arpl
and
push
pop
xchg
inc
shlb
cmp
outsb
jne
sbb
inc
and
xor
cld
cltd
popa
dec
arpl
out
gs
stc
out
loope
sub
sub
pop
mov
sbb
push
test
pushf
pop
addr16
rclb
push
xor
push
mov
mov
fsubl
mov
adc
jo
inc
pop
roll
pop
adc
mov
push
and
int
push
out
ds
lods
push
mov
dec
sti
pop
in
add
out
and
sub
inc
jle
out
ret
cmc
jecxz
add
in
imul
cmp
andb
dec
je
jbe
dec
inc
dec
inc
sahf
jae
xchg
inc
outsb
inc
in
dec
fsts
test
jb
jle
cmp
push
cmc
and
add
inc
jecxz
fnstcw
mov
adc
and
jns
pop
xor
xchg
addr16
mov
cld
xlat
mov
std
out
jg
cmpl
and
popf
js
cmpsb
js
cmp
call
and
xlat
fisubl
pusha
mov
daa
scas
mov
push
cmp
mov
xor
aam
xor
inc
jg
mov
sub
jb
aaa
std
mov
sarl
xlat
cmpsl
pop
add
cmpsb
lock
insl
jmp
popf
in
aam
aaa
pop
xchg
or
cwtl
sub
jg
jno
mov
and
jle
cmc
cwtl
jae
mov
jb
inc
adc
mov
jo
sub
add
ret
jb
pop
jmp
scas
cmp
inc
mov
jbe
nop
test
sbb
ja
div
mov
push
movsl
sub
or
in
and
in
cs
add
mov
sub
stos
cltd
cltd
mov
push
or
in
lods
mov
je
js
cmp
mov
pop
outsl
jge
aam
mov
aad
push
push
sbb
out
pop
cmpsb
sbb
lahf
jecxz
sbb
fisubs
stos
sbb
mov
xor
in
push
out
rolb
and
popa
sahf
mov
and
xchg
pop
or
lds
mov
ds
leave
push
loop
call
nop
test
aaa
int
sub
push
out
push
jp
roll
pop
test
fistl
daa
in
push
gs
ja
mov
xchg
stos
cmp
out
push
inc
cltd
loopne
int3
test
jmp
fists
and
int3
adc
cmp
testb
add
nop
and
int
hlt
mov
gs
jmp
clc
jo
or
cltd
lea
inc
jno
pop
adc
inc
cmp
xor
pcmpeqb
or
pop
mov
sti
jns
adc
arpl
jae
outsb
inc
sti
icebp
and
aam
or
outsl
xor
xor
mov
sbb
shll
push
fcomps
xchg
pop
lds
repz
aaa
mov
aaa
dec
mov
or
mov
add
test
int
xchg
push
cmp
ljmp
jmp
dec
aad
aam
fistpl
adc
inc
jnp
cmp
mov
jae
fisubl
mov
fs
jns
inc
inc
pushf
fxch
cmpsb
in
inc
sahf
add
xlat
jns
mov
dec
jecxz
or
jmp
sbb
popw
pop
add
mov
sbb
cmp
ds
faddl
ss
pop
push
in
dec
movsl
gs
insb
ja
inc
cwtl
jo
and
mov
dec
xor
cmp
fwait
jb
push
push
out
sbbb
sarl
mov
imul
and
push
mov
cs
mov
movsb
sbb
repz
push
shl
jns
add
cmpsb
xor
cli
xlat
dec
sub
loop
inc
aaa
sbb
loop
sbbb
pop
movsl
enter
cmpb
rcrb
inc
dec
and
in
and
popf
outsb
aas
adc
les
dec
lock
gs
fisttps
aas
cmp
les
add
leave
into
cmp
xlat
mov
xchg
test
xor
push
stc
cwtl
iret
mov
pop
push
mov
or
inc
sub
xchg
xchg
jne
into
aas
push
pop
fs
push
mov
mov
adcb
push
shlb
inc
and
lock
push
les
add
inc
xor
std
inc
mov
push
xchg
fiaddl
mov
push
popa
push
fimuls
mov
fprem1
mov
pop
int3
mov
popa
add
pop
iret
push
push
les
cmp
pop
xor
insb
jmp
mov
mov
or
or
cmp
data16
ret
enter
mov
xchg
and
mov
dec
mov
dec
sbb
testb
movsl
mov
add
sti
je
inc
push
mov
pop
jbe
lods
inc
xor
cmp
dec
cmp
mov
notl
mov
add
xchg
and
int3
xchg
pop
pushw
pop
cmc
cmpsb
and
sub
cltd
xchg
inc
xor
or
bound
mov
dec
into
cmp
or
and
pop
pop
clc
add
mov
sub
cmp
mov
cmpsb
push
lods
test
xchg
test
out
aad
andl
and
ja
clc
mov
xchg
cmp
sub
sti
xor
addr16
cwtl
cwtl
ss
xchg
mov
pushf
mov
push
jne
aad
adc
pop
mov
insb
lret
popf
push
xor
lods
sbb
push
test
sahf
das
mov
push
mov
pop
mov
je
and
mov
aam
inc
mov
movsb
cmpsb
and
dec
int
xor
lock
dec
push
fistpll
ret
ret
xchg
pop
mov
insb
jo
pop
inc
or
mov
andl
outsb
icebp
sti
xchg
mov
int3
fbstp
sub
daa
fistps
ds
cmc
mov
stos
lcall
ret
push
fisubrs
loopne
ficoms
fstps
jo
inc
xchg
xor
aas
sbb
inc
loop
mov
sbb
loopne
sub
jno
xchg
jge
out
in
sub
imul
das
inc
mov
push
scas
jo
aaa
or
pushf
mov
cmc
pop
push
sbb
cmp
lret
stc
mov
stos
push
push
push
fimuls
and
add
sahf
scas
mov
testb
adc
xchg
dec
lock
pop
adc
inc
lcall
add
fdivrl
dec
add
push
popf
adc
iret
xchg
in
push
adc
xchg
lock
adc
sub
and
jae
inc
or
leave
jle
lahf
sbb
cmp
pop
outsl
inc
ret
stos
inc
jmp
nop
loop
aaa
push
clc
jmp
push
out
neg
sub
sub
or
push
leave
inc
inc
xchg
inc
add
mov
fsub
in
fisttps
mov
ret
test
popa
sub
mov
jno
scas
or
int
fnsave
cltd
fmull
mov
xlat
and
jno
lcall
das
pop
shrb
ret
xor
xor
mov
loopne
mul
jmp
mov
mov
pop
arpl
sub
fsubrs
sbb
stc
movsb
push
cli
push
stos
cmp
fsubl
inc
xchg
stos
pop
xlat
add
sub
pusha
mov
mov
and
xorl
jp
mov
mov
or
mov
in
mov
mov
jp
data16
sub
call
je
cmp
mov
sti
or
pop
daa
lret
imul
dec
sub
aam
bound
pop
add
xor
cmp
mov
rcl
mov
adc
test
pop
iret
mov
pop
cmpsb
sbb
movsl
push
mov
lods
dec
add
or
iret
add
pop
push
inc
and
pop
icebp
outsl
enter
mov
repz
scas
mov
or
xchg
leave
push
adc
inc
testl
sub
adc
cmp
sub
mov
mov
dec
les
cmp
push
ret
loop
jp
sbbl
xlat
lods
loop
incb
call
pop
mov
fisubl
lahf
std
and
adc
pop
std
out
mov
mov
stos
jecxz
lods
icebp
out
orl
fildll
jecxz
insb
arpl
fs
push
popf
insl
leave
pushf
inc
mov
cltd
mov
lds
sbb
movsb
movsl
push
pushl
xor
cltd
int3
imul
bound
push
outsl
add
lock
rorl
inc
jle
push
xor
sub
shr
mov
loopne
mov
jmp
repnz
mov
test
rclb
das
rolb
cmpsb
andl
xchg
repz
and
out
xchg
mov
pusha
cmp
push
repz
pop
cli
fwait
test
cmp
sbb
mov
hlt
inc
xchg
push
sbb
dec
jecxz
xchg
and
mov
scas
inc
mov
mov
rcll
inc
add
scas
push
stc
inc
out
test
insb
pushaw
and
mov
mov
nop
jle
and
inc
outsb
xchg
push
imul
mov
fld1
push
dec
aaa
imul
push
fists
leave
int3
sub
shrl
sbb
jecxz
clc
clc
mov
xchg
mov
std
pop
sub
fiadds
mov
mov
and
popa
or
std
and
jmp
pop
and
addb
loope
push
mov
adc
mov
idivb
sti
jns
cmp
mov
inc
hlt
or
dec
lods
push
loop
fwait
push
aas
pop
repz
sbb
lcall
xchg
ja
scas
popf
popf
test
lcall
movsl
jg
lcall
and
push
inc
mov
mov
or
sub
rolb
enter
mov
sti
repz
sbb
clc
enter
and
shrb
mov
fildll
arpl
out
push
or
push
stc
js
popf
insl
sbb
mov
aad
jo
xlat
pop
dec
lods
cmp
test
in
aad
and
lcall
and
addr16
lea
clc
cmp
outsb
mov
sti
sbb
scas
adc
cs
jne
pop
pop
test
negl
sub
cmpsl
gs
pop
adc
sub
push
pop
ja
sub
sbb
int
testb
std
pushf
jb
jb
cmpsb
xor
insl
lahf
cmpsl
testl
push
mov
adc
stos
adc
push
or
shlb
sub
and
push
push
xor
cld
jae
mov
fisubl
repnz
sbb
xor
mov
cmp
ja
pop
sbb
lcall
mov
mov
xor
or
pop
fs
xchg
sbb
xchg
outsl
adc
loop
pusha
jg
hlt
xor
adc
insb
pop
pop
mov
std
push
jns
xor
inc
addr16
xor
loope
cmp
cld
or
push
adc
pusha
pop
or
pop
mov
icebp
pop
fadds
cmp
or
pop
and
push
lea
sub
push
iret
pushf
push
and
imul
rclb
scas
xchg
mov
push
sbb
sbb
popf
int3
sub
lahf
adc
aas
leave
mov
ss
pop
jecxz
jb
mov
inc
jns
dec
inc
dec
sub
sahf
data16
out
xor
hlt
lds
sbb
dec
inc
mov
mov
cmp
or
push
or
sbb
mov
sub
in
or
pushf
out
cmp
and
jae
stos
dec
fcompl
inc
lret
addr16
neg
mov
mov
dec
adcl
rclb
jne
cmc
cmc
lea
xchg
scas
ljmp
pop
pop
hlt
sbb
shrb
jne
xor
cmp
mov
int
push
leave
hlt
jnp
cmp
out
gs
xchg
mov
pop
mov
xchg
mov
cmpsb
jmp
inc
nop
and
clc
pop
ljmp
xorb
mov
sbb
or
xchg
pop
mov
lret
sub
andb
and
fadd
ret
add
insl
outsb
mov
pop
xlat
and
pop
add
adc
mov
push
jge
movsl
ffree
lods
mov
addl
arpl
sbb
xchg
loop
loope
sbb
jnp
dec
xchg
xor
mov
xor
imul
addl
bound
popa
in
js
xchg
int3
and
outsl
shrl
dec
das
fdivrs
jmp
fs
sbb
test
lret
es
and
nop
and
or
sarb
sbb
mov
in
sbb
jle
movsb
int3
adcl
mov
jge
mov
push
sub
jns
push
xchg
divb
inc
sub
sbb
and
xchg
pop
cmp
mov
jp
jge
scas
imul
xchg
out
xchg
test
std
jle
cld
push
adc
cwtl
in
push
xchg
push
pop
or
pop
jecxz
jmp
mov
insb
pushf
jnp
add
mov
adc
xchg
andl
dec
jnp
mov
jge
shlb
jo
push
cli
mov
add
ds
repz
lea
shrb
rcrb
push
or
sarl
fbld
imul
sbb
rorl
jle
inc
movsb
mov
aas
mov
pusha
dec
or
js
int
dec
in
mov
in
adc
push
cli
inc
or
stos
mov
into
cmp
jmp
pop
mov
sbb
jmp
pop
cmp
ljmp
loope
jmp
lods
xor
inc
xchg
orb
sahf
mov
lock
or
lcall
cmc
mov
orl
fs
jl
adc
stos
mov
adc
mov
sbb
add
lods
adc
repz
jl
cmp
push
adc
mov
lahf
in
mov
leave
jae
mov
inc
insl
lock
dec
pop
push
aaa
xchg
lds
icebp
cmp
pop
sbb
dec
sub
andl
sbb
jg
add
sub
inc
pusha
jns
pop
cmp
pop
add
ret
jae
shrb
push
cmp
test
inc
inc
out
iret
gs
xor
mov
jle
mov
adc
or
cld
daa
sbb
jb
movsb
pushf
out
jo
xchg
sub
mov
xor
jnp
adc
cli
hlt
dec
cmp
cmp
push
fistpl
lcall
jecxz
mov
pop
inc
cmp
out
cmp
cmp
gs
stos
xchg
imul
adc
in
jecxz
lock
xor
mov
insl
out
jae
or
inc
adc
mov
rcrl
inc
mov
push
sbb
mov
repnz
std
sub
and
shl
aad
xchg
into
ja
and
test
mov
es
cmp
dec
sahf
pop
or
mov
sbb
andb
rcrb
sar
scas
mov
pop
mov
mov
push
outsb
cmp
xor
add
add
or
es
cwtl
sbb
cmp
push
rclb
sbb
ds
sub
and
jns
push
mov
shll
cmpsb
sub
popf
mov
jmp
mov
daa
dec
xor
push
in
les
stc
adc
and
clc
shlb
add
jns
push
idiv
movsb
mov
sbb
xchg
nop
inc
les
push
andl
mov
cmp
or
mov
dec
add
push
fwait
xchg
xchg
push
dec
stos
pop
jno
add
add
mov
es
sub
push
outsl
lea
lea
sti
cmpsb
sbb
outsb
clc
imul
and
sbb
enter
out
fwait
dec
jne
cmpsb
and
cmpsl
rclb
data16
or
incb
or
sub
xor
cmpsb
push
mov
dec
fisttpll
xchg
ret
movsb
inc
idivb
add
add
dec
jo
scas
ljmp
lds
fistps
ljmp
icebp
outsb
xlat
mov
int3
in
aaa
rolb
push
push
inc
xchg
push
mov
rclb
aaa
cmpsl
scas
add
aam
pop
popa
in
cltd
sbb
add
ljmp
arpl
xor
aaa
add
int3
test
push
pop
js
push
subl
icebp
adc
sub
pop
shrb
jno
ljmp
jns
jle
dec
add
pop
or
mov
popa
mov
rorl
aaa
icebp
rclb
mov
cli
sub
je
cld
sarl
jne
sub
flds
mov
or
push
adc
loop
pop
loop
adc
aaa
mov
mov
movsb
fcmovnb
lret
sub
mov
xchg
mov
or
mov
sub
xchg
lods
inc
test
add
or
mov
add
testl
movsb
mov
pop
icebp
cwtl
sub
das
stc
push
and
sahf
pop
xchg
outsl
sti
popf
mov
push
shl
sahf
in
sbb
mov
sbb
inc
or
dec
in
xchg
xor
inc
push
fwait
mov
int3
sbb
popa
and
or
dec
pop
icebp
mov
ljmp
std
sbb
int
mov
mov
add
adc
aaa
not
cmp
add
insl
arpl
xor
ds
dec
fcmovb
adc
aaa
neg
sub
repnz
push
xlat
jmp
push
inc
shll
mov
mov
dec
mov
mov
js
and
add
nop
dec
xor
lahf
fwait
pop
xchg
enter
sqrtps
pop
pop
mov
or
test
stos
xchg
cmpsl
pop
ficompl
sub
aam
jno
cmp
inc
add
adcb
loopne
cmp
icebp
inc
mov
adc
enter
repnz
icebp
dec
adc
cwtl
shrl
inc
test
mov
sbb
jg
pop
add
mov
aad
cmp
imul
sti
dec
into
movsb
mov
fcoml
jne
ret
jecxz
inc
imul
daa
sub
xlat
push
test
push
addb
jmp
ja
sub
dec
repz
clc
imul
in
fistl
js
add
es
xor
jno
es
adc
or
aas
andb
js
mov
mov
lret
mov
jbe
insl
rcll
cmpsb
fldenv
add
jmp
stos
gs
iret
sarl
jmp
cmp
jp
sbb
into
and
push
sbb
ja
loopne
outsl
inc
jbe
inc
sbb
jmp
push
fisubl
pop
push
pop
cmp
mov
jb
push
pop
mov
dec
add
xlat
je
and
in
inc
sub
js
dec
jno
mov
addr16
cmpsl
in
and
push
sub
es
call
sbb
and
mov
xchg
mov
inc
lods
into
cmc
das
data16
enter
fmulp
xchg
add
adc
aad
lods
dec
xchg
push
icebp
repz
add
cwtl
repnz
test
popf
mov
jg
dec
repz
pop
hlt
cmp
add
pushf
mov
clc
xor
push
push
push
imul
insb
in
nop
dec
arpl
xchg
inc
adc
jl
pop
popa
adc
or
test
iret
test
test
lock
imul
inc
ret
xchg
push
push
jmp
add
adcb
sbb
cmp
cmp
fwait
bt
imul
xchg
add
or
lret
or
mov
iret
inc
les
mov
inc
mov
inc
in
loope
pop
addr16
mov
pop
adc
dec
adc
or
add
push
sar
fstl
addr16
sahf
jae
sub
cmp
jb
loope
push
out
mov
xchg
sub
fcoms
jge
movsl
insb
xchg
loop
aas
sbb
mov
imul
movsl
pop
push
mov
xchg
jl
shrb
mov
fmulp
inc
xor
sbb
xchg
xor
and
bts
pop
negl
lret
dec
testl
outsl
ljmp
jecxz
adcl
divl
pop
in
sbb
decb
leave
and
jae
popa
iret
ret
mov
test
loopne
push
rorb
push
or
cs
out
lock
lret
pop
jnp
mov
jbe
std
or
addl
enter
mov
mov
jl
aas
mov
out
repnz
adcl
push
dec
inc
movsl
xor
repz
loop
js
ss
sbb
out
subl
push
xor
pusha
fcoml
stos
leave
stc
movsb
and
es
dec
push
sbb
movsb
fcoml
xchg
in
inc
int
pop
sub
mulb
add
in
jge
cs
add
lea
pop
cmc
adc
mov
mov
xchg
outsb
mov
lcall
imul
xlat
pop
enter
dec
cmp
sbb
jp,pn
cmp
add
stos
rolb
push
and
pop
cld
add
jmp
push
cli
pop
outsb
fs
rolb
ljmp
sub
lret
mov
cmpsl
cmp
push
jge
inc
dec
call
sahf
sbb
lahf
rcl
pop
mov
int
popf
pop
sbb
dec
stos
outsb
fcmovu
pop
sbb
pop
inc
jbe
aas
mov
testb
pop
mov
or
push
inc
mov
jo
add
xlat
pop
icebp
pusha
pop
jle
mov
mov
inc
pop
cwtl
ja
aaa
loop
cltd
popa
pop
jmp
lret
repnz
shlb
outsb
cmpb
xchg
leave
jle
in
sbb
jl
or
push
sub
sbb
popf
out
and
dec
jbe
stc
mov
push
leave
cmp
xchg
push
notl
es
daa
sub
outsb
xchg
roll
pop
adc
test
pop
pop
adc
jae
sbb
rcll
and
and
pop
repz
in
mov
xor
add
push
and
mov
sub
addr16
cld
mov
out
dec
aas
push
or
add
and
xchg
jno
inc
dec
lds
mov
push
mov
ds
icebp
movsb
add
and
and
pop
cmp
push
dec
cltd
cmp
mov
dec
xor
xchg
jmp
xchg
push
push
addb
cld
ja
ja
imul
lods
in
mov
sub
aaa
jecxz
addr16
cwtl
adc
mov
ljmp
jp
imul
push
add
xor
outsb
push
je
scas
xor
adc
test
call
orb
btr
jge
pop
mov
stc
add
push
es
inc
cmpl
cli
jle
dec
mov
imul
xor
add
pop
jl
jbe
add
je
pop
sbb
xlat
jmp
inc
add
inc
enter
adc
out
scas
push
or
push
inc
push
inc
subl
aad
push
lock
mov
mov
xchg
xchg
cli
imul
jmp
xor
bound
jge
xchg
pop
mov
mov
pop
add
pusha
jae
cmp
add
push
cmp
pop
push
mov
out
or
jge
pop
aas
outsb
scas
xchg
xchg
push
insl
cmp
jg
sub
mov
lret
mulb
sbbb
lret
cwtl
aad
cmp
rcrb
out
popa
and
pop
icebp
adc
sub
ljmp
movsl
inc
insl
fsubrp
insb
outsb
sub
lds
jl
filds
jg
stos
enter
add
ja
pop
pop
rcr
cmpsl
and
ret
fucomi
sub
pusha
in
xor
mov
lahf
mov
and
adc
add
pop
cmpsl
lret
loopne
cmp
push
cltd
out
imul
in
fsts
fdivrl
xchg
xchg
pusha
mov
mov
pop
les
xor
push
push
inc
xor
or
pusha
fildll
dec
sti
clc
loope
shlb
jnp
mov
stos
add
mov
out
fsubp
pop
cli
mov
push
push
pusha
test
hlt
cld
mov
aas
jnp
and
mov
aaa
cmp
adc
adc
cld
add
add
repnz
test
push
fisubl
daa
xor
in
test
js
lret
adc
je
push
sar
lock
jne
std
aas
sub
mov
xchg
insl
sbb
push
rolb
sub
cmp
and
mov
mov
pop
jb
test
push
shl
sbb
iret
push
lret
mov
les
subl
dec
inc
fucomi
jnp
xor
dec
mov
jle
out
movsl
sub
call
dec
cmp
outsb
xor
dec
loop
xor
test
mov
add
cmc
mov
push
lahf
rolb
add
rorb
cwtl
sub
mov
xchg
inc
adcb
cmp
out
dec
imul
sbb
fadds
push
insb
cli
fcomp
movsl
sub
lret
adc
lret
mov
mov
xor
xchg
in
pop
out
lcall
inc
dec
or
sub
adc
inc
cwtl
cmp
scas
adc
push
in
enter
inc
mov
jns
pop
dec
inc
sub
or
mov
leave
aam
push
cmp
fxtract
jle
enter
mov
or
adc
loope
stc
aad
mov
mov
push
scas
rcll
push
xor
sbb
js
filds
loopne
cs
sti
push
rolb
sti
sbbb
jbe
outsl
add
test
sbb
test
hlt
cli
mov
cltd
inc
ss
imul
sbb
into
sbbl
sahf
xchg
mov
and
fs
jecxz
xlat
js
std
add
sahf
lods
mov
xchg
aam
and
push
add
xor
push
sbb
imul
mov
ss
pop
dec
js
clc
in
pusha
test
jg
sub
out
pop
imul
xchg
clc
not
ds
pop
rcll
cmp
xchg
and
rcrl
or
das
enter
popf
test
outsb
out
push
gs
es
and
push
into
cmpsb
jne
inc
in
iret
or
xor
fdivl
out
cli
lea
jl
div
fwait
or
push
push
add
lcall
ret
lods
mov
xor
repz
jnp
sub
sub
mov
dec
xor
mov
daa
mov
lea
mov
sub
rcl
cmp
in
xor
cmp
ficomps
xor
lret
pop
gs
bound
push
mov
addr16
ror
mov
dec
sti
and
mov
sbb
pop
std
or
rorb
add
rcr
int
or
adc
fcmovbe
jmp
lret
int
sub
sub
lret
or
adc
sahf
std
rcrl
or
xor
mov
shr
cmp
xor
push
fcoms
and
out
sub
fwait
or
sbb
daa
jecxz
es
in
lock
pop
adc
stos
mov
fidivrs
mov
addr16
mov
cmp
mov
push
mov
cmp
mov
xchg
sub
insl
subb
xor
stos
out
icebp
push
push
ficompl
arpl
icebp
mov
xor
pop
push
pop
shll
xchg
pop
xchg
lock
cmc
lock
cmp
xlat
popa
jmp
add
std
adc
in
neg
test
sarb
jbe
pop
inc
lahf
out
and
roll
cltd
adc
inc
adc
ljmp
jmp
jp
push
data16
dec
or
mov
adc
mov
or
pop
jecxz
adc
jg
dec
sahf
jp
ja
lahf
sahf
je
inc
pop
loope
inc
dec
jno
mov
mov
mov
inc
loope
push
loop
or
mov
inc
roll
loope
mov
out
cmpsl
cld
repz
sub
push
and
push
lods
test
cmpsl
inc
push
lret
push
fdivrl
aam
mov
xor
in
and
lods
jbe
and
adc
jne
insl
scas
scas
push
cmp
add
dec
scas
cmp
les
insb
and
pop
push
push
fdivrl
lods
orb
aas
push
mov
stos
mov
xchg
mov
mov
inc
push
dec
or
es
daa
rcrl
les
mov
aas
mov
pop
orl
lahf
stc
xchg
jge
les
fldt
push
mov
jbe
or
jp
ja
test
add
sbb
lret
sub
push
add
sub
mov
loopne
out
inc
pop
mov
sti
jp
in
push
cltd
shrl
call
cmp
icebp
icebp
push
fists
inc
shrl
lds
or
lock
adc
hlt
insb
inc
fdivl
jno
imul
mov
jns
xor
mov
imul
leave
popf
xchg
ljmp
testl
push
das
pop
adc
cmp
and
push
ss
add
out
mov
lcall
or
ret
jne
cmp
jae
or
cwtl
fcompl
pop
mov
mov
or
test
xor
mov
lea
inc
jmp
inc
jmp
out
imul
mov
mov
int
fdivrs
nop
sub
leave
or
aad
pusha
subl
jns
mov
mov
dec
gs
pop
es
hlt
xchg
sub
ror
mov
js
cld
cmp
das
adc
outsb
std
cmpsb
cmp
mov
ret
mov
dec
pop
out
or
inc
pushf
lods
cmp
pusha
out
xor
movsb
mov
inc
mov
xor
and
xchg
ret
xchg
aam
inc
push
out
cmpsl
push
inc
shlb
and
cwtl
mov
cmp
inc
and
test
into
fidivrl
cmp
xchg
lds
shrl
in
or
dec
ret
cmpb
xor
adc
lret
xor
dec
pushf
inc
sub
imul
mov
insl
pusha
cli
hlt
xchg
jnp
je
push
fstpl
or
sbb
push
inc
jge
mov
fadd
sub
subb
loope
loopne
sub
sbb
das
gs
into
jae
inc
xchg
cmpl
jo
pop
mov
sub
xchg
jge
stos
xchg
and
push
movntq
out
jae
and
mul
mov
outsl
ss
push
push
and
mov
sarb
pop
div
mov
ja
cld
test
cmpsl
sbb
test
mov
push
pop
jbe
jge
test
mov
int
dec
xchg
mov
and
sti
fucom
push
aaa
sbb
jno
fwait
cwtl
push
push
stos
loope
in
bound
in
cmpsb
sti
stc
mov
xchg
sbb
fiadds
inc
jge
fwait
stc
mov
daa
dec
fisubrs
xchg
pop
rcl
mov
jno
xchg
pop
fstl
ja
lahf
movsb
sub
mov
jae
je
pop
sub
sbb
jmp
mov
mov
cmp
mull
in
pusha
mov
call
xchg
outsl
mov
mov
sbb
mov
cld
xchg
rcl
mov
sbb
push
fwait
subb
mov
pop
ret
or
jg
cmpsl
and
cmp
cli
arpl
or
sub
and
sahf
out
fs
ret
sbb
lods
enter
test
inc
push
in
pop
jnp
xchg
push
push
cmp
leave
push
lock
xchg
xchg
cmp
in
insl
sub
gs
push
mov
cmp
pop
loope
imul
negb
div
lret
loope
pop
mov
cld
inc
cmp
sbb
sbb
scas
imull
out
jno
pop
cld
pop
out
add
inc
mov
pop
mov
dec
xor
scas
test
sbb
push
push
push
xlat
cli
mov
push
xor
nop
lcall
dec
subl
clc
mov
cwtl
mov
push
mov
lahf
xor
push
adc
outsl
int
cs
stos
mov
mov
mov
pop
daa
outsb
addr16
jecxz
std
mov
mov
out
in
mov
jo
rclb
pop
call
or
pop
lea
addr16
addr16
add
push
in
sbb
test
push
xchg
loope
in
cld
dec
into
test
sub
aad
adc
test
imul
sub
mov
ja
lea
iret
cli
jnp
inc
push
pop
dec
out
lcall
and
xor
test
inc
jp
icebp
inc
jle
sbb
or
loopne
pusha
test
rorl
rol
fcomi
adc
mov
xchg
jne
jnp
pop
inc
scas
jge
or
mov
jae
movsb
scas
or
pusha
popa
sbb
sbb
fistpl
push
pusha
in
repnz
cmp
cld
daa
adc
in
mov
popa
cmpsl
mov
imul
pop
jge
xor
mov
push
dec
cmc
dec
aad
adc
out
cmpsl
jo
cmp
popf
pop
inc
and
adc
cmp
rorl
fisubs
adc
and
xor
pop
cltd
push
in
pushf
mov
loop
addb
lret
mov
lods
aas
loop
mov
cmp
push
lret
cmpl
inc
pop
cmp
jae
mov
dec
or
pushf
cs
inc
pushf
inc
cli
loopne
pop
fldl
addb
stc
clc
mov
pop
push
dec
push
push
xchg
cmpl
adc
vmread
inc
adc
cwtl
ja
sbb
and
mov
pop
jle
mov
es
mov
xchg
push
ret
fs
jmp
adc
mov
enter
add
and
or
cmp
sbbb
mov
test
xchg
idiv
jge
mov
mov
dec
sub
and
xchg
pop
arpl
pop
adc
insl
ljmp
in
mov
mov
imul
xor
pop
inc
jb
jp
ds
test
sbb
mov
xchg
xchg
xor
fs
fwait
pop
adc
cmpsb
jmp
aad
bnd
stos
xchg
sub
add
sub
mov
imul
cmp
dec
sti
adc
inc
fadd
dec
subl
jecxz
xor
xchg
cwtl
fldenv
mov
and
jl
adc
adc
jns
movsb
jle
movsb
ret
jecxz
pusha
xchg
popf
fs
pop
and
fistpll
xor
mov
pop
mov
mov
inc
test
push
lods
pop
in
addr16
xchg
pop
pushl
js
fwait
es
hlt
icebp
cld
pop
mov
ja
xor
loop
rol
repnz
js
stc
stos
sub
mov
je
inc
stc
jno
stos
xchg
push
int3
loopne
stc
loope
or
dec
outsl
and
insl
mov
cmp
sub
lahf
js
mov
add
insb
or
dec
jbe
xchg
mov
and
imul
mov
and
and
push
push
cmp
sbb
and
pop
ja
negb
rolb
mov
aaa
out
push
lahf
sbb
push
sti
test
cwtl
icebp
push
pop
mov
repnz
dec
jecxz
mov
inc
fsts
mov
pop
push
test
push
imul
xchg
mov
mov
loope
pop
out
sub
rclb
xchg
iret
test
adc
mov
mov
pop
sub
xchg
add
sub
pusha
sub
popf
mov
mov
push
push
ret
xchg
aaa
mov
mov
push
out
sub
rcrb
fadds
jae
hlt
fisttps
mov
subl
pop
dec
nop
int
rorb
cld
into
xorl
daa
std
jb
jp
dec
or
mov
pop
jp
out
in
cwtl
fidivs
xchg
mov
dec
out
aaa
mov
or
inc
mov
jb
jne
add
xchg
movsl
fldcw
out
mov
jecxz
and
icebp
pop
out
push
imul
xchg
das
enter
jmp
stc
jns
jp
inc
inc
jno
pop
push
add
adc
jns
push
jnp
add
xchg
jnp
les
inc
xchg
loopne
rorl
rcrb
gs
mov
pop
jle
dec
push
je
std
pop
and
pushf
mov
sbb
mov
sbb
rorb
mov
cld
shlb
mov
jmp
mov
or
mov
js
orb
test
cmpsb
aas
mov
sbb
repz
daa
rcrb
jae
movsl
and
fmull
sbb
lfs
xor
and
imul
loopne
cwtl
fs
testb
push
shrb
cmp
ret
cwtl
stos
xor
or
or
scas
lea
outsb
aam
into
pop
xlat
inc
jmp
pop
mov
adc
mov
jno
negb
scas
mov
test
jg
cmc
cmp
or
mov
cmp
insb
dec
ljmp
adc
jns
dec
aam
add
bnd
gs
jp
in
cmp
mov
sub
mov
inc
push
xor
cs
lcall
loope
mov
push
sahf
iret
pop
mov
pusha
sub
add
mov
sbb
ret
or
mov
push
aas
int
xchg
arpl
adc
or
loop
lods
imull
leave
dec
mov
or
mov
stc
add
jo
subl
mov
leave
scas
cwtl
cmpsb
cmp
jg
cmpsb
cmp
mov
adcl
inc
fisttpll
pop
jp
shll
repnz
xor
sub
lods
xor
dec
mov
fsubrs
and
ja
adc
jbe
adc
sub
mov
pushf
cltd
mov
movsb
mov
outsb
inc
sbb
xchg
test
sahf
or
ror
fiadds
cld
cmp
insb
mov
xchg
in
pushf
inc
fs
xchg
adc
out
cli
outsb
inc
hlt
test
pop
lahf
fdivrp
call
or
aam
dec
jle
add
in
imul
ss
outsl
imul
jbe
mov
jne
vmovhpd
hlt
pop
outsl
pop
cmp
and
push
ret
cmp
lea
xor
inc
enter
aas
inc
and
cmp
jne
fidivl
rcrl
xchg
adc
cmpsb
mov
lds
addr16
add
test
ss
xor
add
add
dec
in
jle
clc
imul
std
and
mov
pusha
fmuls
sub
dec
pusha
or
inc
jno
mov
xchg
mov
cmc
mov
inc
push
dec
dec
pop
mov
retw
cmp
fstpl
cmp
mov
xchg
push
pop
loopne
mov
jae
aam
pop
cmp
jge
lea
lock
sub
lods
pusha
xlat
xchg
jae
imul
pop
jle
into
scas
cmp
xor
mov
xchg
or
or
in
xchg
das
negl
jmp
xor
pop
adc
pextrw
shrb
or
pusha
aas
js
adc
jbe
push
and
js
in
lret
pop
push
ds
sub
into
mov
and
cmc
jg
or
stos
adcl
rcl
jp
ds
xorb
and
pop
rolb
adc
dec
dec
mov
mov
mov
test
push
push
push
leave
test
push
arpl
outsb
push
dec
mov
out
movl
push
push
bound
stos
mov
jae
fnsave
dec
aaa
sbb
pushf
repnz
jae
push
or
inc
mov
imull
sbb
inc
aas
enter
pop
incb
in
fwait
js
jne
fcomi
shl
pop
sbb
add
ja
push
mov
inc
pop
fnstenv
arpl
mov
orl
ljmp
mov
xchg
repnz
les
scas
test
pop
loopne
mov
or
dec
nop
sub
mov
rcrl
or
pusha
mov
push
shlb
subl
out
lods
add
sahf
outsl
scas
or
icebp
mov
lods
mov
repnz
fwait
sti
ret
mov
nop
inc
mov
sub
popa
add
or
mov
sbb
int3
or
add
pushf
out
xchg
xor
cmp
lahf
adc
daa
cmc
mov
call
or
inc
iret
mov
cmp
pop
cmp
les
mov
sbb
pop
stos
push
outsl
and
inc
pop
jl
cmp
lods
mov
fsubr
adc
mov
mov
addr16
fmull
ds
stc
and
xchg
fwait
sbb
cmp
cmpsl
xchg
pop
mov
in
sbb
in
or
xor
xor
ret
lock
bound
cwtl
fbld
or
sub
imul
mov
push
in
lods
dec
cltd
cmc
lds
pop
and
cmp
dec
inc
cmp
or
push
add
insb
and
mov
cmp
pop
in
jl
cs
mov
shld
inc
mov
dec
inc
add
stos
xor
inc
xor
dec
fidivs
inc
dec
in
push
addb
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
push
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shr
shl
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
lea
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
lea
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jb
pop
mov
pop
jecxz
mov
inc
add
cmp
