sbb
push
fwait
push
scas
push
sbb
sbb
aad
cmc
pushf
std
and
sbb
sbb
stos
sbb
cmc
sbb
sbb
das
push
fisttpl
mov
cmpsl
pop
lahf
mov
aaa
aam
and
popa
push
pop
andb
and
mov
clc
inc
popf
fisubrs
push
sub
cli
push
push
dec
add
adc
cltd
es
adc
or
push
push
cwtl
fs
sbb
push
mov
dec
xchg
fadd
xchg
mov
mov
cmc
xchg
jae
jae
lahf
addr16
js
xor
jno
sub
pop
jae
fcmove
aad
imul
lds
add
pop
fsts
push
sub
sub
lahf
fimull
or
jns
insl
adc
jge
xchg
sbb
push
loope
sbb
cli
sub
sahf
in
stc
mov
shrl
insl
push
mov
das
xchg
xchg
cmp
cmpb
or
sbb
and
adc
test
push
sbb
mov
out
pop
das
rorb
shr
sbb
in
divl
out
lcall
lock
iret
idivb
cmp
or
inc
mov
rcl
dec
and
pop
adc
insb
xor
xor
sbb
sub
jne
sub
lahf
imul
sub
aam
xor
and
gs
insl
sbb
sbb
outsb
cmp
stc
pop
sbb
add
in
jp
pushf
cltd
aas
add
imul
adc
outsl
push
add
mov
hlt
xor
sbb
mov
adc
adc
xor
lds
pop
shrb
ficompl
rcrb
or
pop
cmp
mov
mov
and
insb
inc
rol
lock
sub
fidivrs
loop
or
add
test
data16
add
faddl
inc
mov
xor
cmpsb
xchg
jbe
testl
adc
add
aad
and
lret
or
sbb
sbb
mov
cmp
sub
divb
adc
pop
stos
and
or
lods
xor
cmc
pop
mov
cmp
jbe
daa
test
arpl
sub
jo
lods
sub
lret
ss
test
inc
stc
mov
push
push
xchg
push
dec
das
aad
sub
push
xchg
ds
out
mov
add
pop
popf
pop
inc
mov
sti
scas
loopne
lock
xchg
aas
pusha
ljmp
insl
inc
bound
cli
push
push
mov
inc
sbb
pop
sub
jp
cmp
jns
pop
loop
push
add
cmpsb
in
mov
decb
lea
add
es
cmp
sub
jne
clc
and
mov
cmpsl
imul
and
ja
jnp
cmpsb
adc
pusha
push
sub
jo
jns
jecxz
rorb
lods
ss
and
jns
add
outsb
sbb
out
lret
xor
mov
clc
ja
sbb
mov
cmpsl
sahf
dec
jns
push
jo
sahf
push
adc
cmp
mov
sbb
mov
test
mov
sbb
scas
add
sbb
mov
xchg
inc
mov
out
inc
adc
popa
hlt
cmp
xchg
mov
mov
in
pop
dec
lea
daa
stos
adc
adc
pop
push
shll
iretw
lret
push
xchg
test
xor
aas
bound
xor
jne
fcmovbe
jb
dec
cmp
sub
pop
data16
push
pop
mov
in
addr16
out
data16
jno
xorb
adc
pop
insl
xchg
pop
ja
push
cmpl
outsb
xchg
push
dec
nop
inc
jle
dec
xor
fisubs
or
testl
xchg
adc
inc
sarl
dec
sbbb
mov
inc
pop
and
push
pop
aad
add
rorl
mov
aad
xchg
shrb
jne
imul
pop
pop
lods
mov
xchg
and
lock
lock
dec
in
rcl
in
in
push
mov
sub
mov
sarb
pop
enter
insl
jmp
les
out
cmpb
sahf
jge
push
mov
sarl
mov
movsb
and
mov
imul
std
and
pop
add
sbb
pop
test
arpl
add
lods
rcll
andb
mov
aad
and
sbb
jmp
sahf
push
mov
push
cltd
je
cmpl
jg
dec
xor
cmp
int3
xchg
mov
jne
and
fdivs
mov
adc
sub
frstor
push
xor
jno
inc
hlt
test
inc
jp
fcoms
stos
and
push
repz
jmp
aaa
loope
or
jle
push
jge
jp
stc
mov
add
push
xor
jge
jae
xor
or
rcrb
or
arpl
cmp
mov
mov
dec
lret
test
push
sbb
adc
imul
jl
cmc
fnstsw
add
ss
mov
or
mov
add
jnp
cmc
sti
add
dec
dec
push
sub
mov
push
or
adc
or
sub
cmpsb
lea
dec
push
mov
adc
pop
pop
cmp
mov
insb
loopne
jo
push
pop
outsb
and
stos
das
testl
imul
es
inc
inc
std
xchg
bound
lock
shlb
push
push
iret
cwtl
cwtl
es
cmpsb
or
iret
adc
ret
adc
adc
lret
mov
imul
cwtl
sbbb
pop
push
mul
push
gs
icebp
dec
mov
push
xor
xchg
jle
daa
push
cltd
aas
lods
outsb
sbb
mov
insb
imul
stos
dec
pop
into
mov
test
and
mov
and
mov
jo
adc
sub
xor
adc
push
scas
and
fwait
cmpsl
cli
sbb
and
and
sbb
es
pusha
cmp
sub
push
pusha
cmp
inc
ret
fiaddl
out
cmp
imul
mov
cmp
insb
jnp
andl
mov
loop
loop
push
mov
push
loope
pop
lret
ljmp
out
outsb
ljmp
rcr
iret
jbe
notl
inc
cmpsb
dec
or
sub
incb
add
inc
iret
or
dec
and
gs
jb
shrb
out
ss
divl
hlt
ljmp
pop
loop
pop
jbe
shlb
pop
faddp
ljmp
pushw
adc
push
aam
dec
negb
hlt
nop
ret
mov
hlt
inc
add
push
pop
aam
xchg
sbb
add
popa
pop
push
cmp
popa
pop
ja
pop
ljmp
xor
push
pop
push
adc
mov
xchg
xor
push
lods
push
adc
cmpsb
sbb
cli
orl
push
loope
pop
mov
pop
mov
push
lods
aas
dec
loop,pn
bound
neg
in
push
and
cwtl
pusha
jg
xor
mov
jp
hlt
out
xor
aad
int3
push
lods
daa
xchg
jae
pusha
pop
ljmp
mov
mov
je
cmp
fsubrs
lcall
lods
shll
daa
stos
add
push
pop
push
and
daa
pop
xchg
les
sub
xchg
mov
imul
insl
jo
push
in
fcmovb
inc
inc
gs
es
adc
mov
inc
inc
aas
jp
movsl
mov
icebp
faddl
out
pop
jnp
adcb
cmp
push
xor
cmc
andb
stc
adc
fidivl
jg
pop
xor
xchg
mov
xchg
loopne
insl
mov
jb
outsb
push
out
jp
sub
int3
stos
in
jle
mov
mov
xchg
inc
add
pop
imul
sbb
cmp
cltd
push
inc
push
ja
mov
fnstenv
out
dec
repz
pop
sbb
stc
lret
sahf
inc
mov
jno
push
add
adc
js
sub
in
and
rorl
loop
rorl
add
push
lcall
pop
loope
out
movsl
jecxz
pop
iret
push
fsubrs
mov
lahf
and
test
inc
pop
rcl
aad
ljmp
mov
xchg
mov
and
enter
fwait
jo
shrl
js
jmp
inc
rolb
mov
idiv
clc
mov
lods
pop
pop
and
add
jmp
sbb
jmp
jns
xlat
and
xor
jbe
test
xor
out
lcall
jne
add
pop
add
inc
mov
stc
add
pop
cmpsb
dec
mov
push
add
xchg
out
subl
arpl
fistpl
sbb
adc
sbb
jbe
sub
stos
mov
xchg
adc
push
mov
sbb
lret
xchg
or
jb
aad
sti
cwtl
push
fmuls
adc
cld
cli
pop
mov
push
adc
sbb
adc
adc
pop
mov
inc
lahf
shl
mov
cmp
inc
xor
test
hlt
add
pop
lcall
or
mov
push
out
test
dec
mov
pop
lods
cmp
movsb
xor
or
pop
cmp
jp
iret
pop
mov
xor
addr16
push
push
push
xchg
cmp
inc
dec
cltd
or
pop
sub
add
xor
mov
fisubrs
inc
cli
cltd
shlb
sbb
adc
sti
xor
cmp
test
enter
pop
mov
add
jmp
mov
ds
iret
add
in
push
xor
adc
icebp
pop
dec
movsl
jp
sbb
leave
mov
je
push
call
mov
xor
mov
test
pushf
cs
sub
mov
sahf
push
lea
sub
mull
aas
into
repz
inc
sub
jl
pop
daa
roll
pop
push
out
aam
adc
push
adc
or
jno
sbb
fwait
or
mov
pop
inc
popf
xlat
mov
cmc
sbb
push
dec
lret
pop
fmuls
add
xor
xor
repz
inc
mov
xchg
add
adc
js
xor
mulb
pop
popf
mov
push
xchg
aas
popf
jg
inc
pop
cmp
sbb
mov
sbb
repz
xlat
fadd
mov
inc
and
lret
dec
mov
mov
comiss
scas
mov
outsb
mov
insb
xchg
xlat
dec
nop
sbb
xor
xchg
dec
outsl
rorb
ds
add
pop
loop
les
sub
push
loope
iret
lcall
push
push
mov
sbb
add
push
movsl
js
dec
fidivrs
insl
or
loope
fsubrl
in
push
sub
not
testb
mov
test
sbb
ficomps
mull
gs
gs
popa
and
sbb
cwtl
das
stc
push
jne
sub
fstpl
add
mov
ja
xchg
dec
scas
inc
jmp
adc
sub
sub
push
or
xchg
lds
adc
sbb
xchg
xor
call
cmp
add
push
cmp
sub
pop
ret
adc
jmp
aas
bnd
xchg
andb
pop
push
pop
jne
adcb
fiadds
add
sub
test
and
mov
and
pop
fmul
loope
pop
jne
cmp
fmull
loope
test
les
add
cmc
mov
push
sbb
in
pop
push
loope
xor
jnp
and
aad
fisubl
pushf
sub
xor
pop
mov
popf
cs
or
in
jb
inc
push
and
test
adc
enter
pop
lret
sub
adc
test
push
hlt
push
movsl
outsl
ror
dec
mov
jno
loope
movsl
push
int3
mov
lahf
pop
add
add
or
mov
and
pushf
or
add
fwait
es
sub
bound
mov
xchg
adc
cli
repnz
addb
push
int
sub
lds
xor
rolb
out
add
push
add
jb
dec
cmp
iret
dec
lods
cltd
add
add
stos
push
xchg
push
pushf
jle
ljmp
andb
mov
jmp
mov
repz
push
pusha
stos
xchg
rcll
ss
sahf
or
add
lea
pop
fs
xor
add
adc
cmpb
into
mov
aad
lods
daa
pushf
sub
jecxz
pusha
xchg
jb
pop
mov
dec
cs
xchg
jge
pushf
aam
imul
aam
push
stc
mov
sbb
es
insb
mov
sub
or
add
sar
add
and
jb
push
sub
std
jmp
into
lea
enter
es
ja
dec
sbb
scas
daa
xchg
cmp
aaa
push
sub
popa
aaa
lods
xor
popl
std
add
call
jmp
dec
cmpl
cltd
push
cltd
movsl
push
filds
dec
lahf
bound
push
ds
mov
mov
inc
mov
rcrl
or
mov
outsl
jne
sub
mov
sub
ffreep
sub
inc
pop
cmp
cld
sahf
enter
test
pop
sti
push
sahf
lret
out
xor
mov
adc
mov
sub
mov
sbb
out
sub
lahf
ror
inc
pop
sti
or
inc
fmull
push
iret
jbe
xchg
ljmp
aam
pusha
bound
fld
call
and
fcompl
pop
adc
push
or
jmp
clc
push
add
bound
jbe
xor
push
inc
fcomps
ds
push
das
mov
sub
adc
sub
or
pop
inc
add
mov
adc
cwtl
adcb
cmp
je
fisttpll
pop
push
pop
dec
fiaddl
into
pop
std
movsl
data16
mov
mov
sbb
mov
pop
aad
add
cmp
mov
mov
es
adc
sub
mov
push
popa
jl
jecxz
jne
push
iret
movsb
outsb
daa
cmc
loop
jne
jne
pop
sbb
popf
adc
or
test
in
mov
push
push
sub
test
imul
cli
ret
sbb
adc
mov
test
or
movsl
aas
jae
scas
jmp
cltd
cmpsl
pop
ja
push
mov
shr
cli
lds
ror
insl
cmp
aaa
push
and
cmp
sbb
fistl
push
test
inc
sbb
lods
xor
imul
pop
fmuls
subb
repnz
xchg
loop
js
lods
pushf
shl
pop
std
bound
insl
mov
fidivrl
xchg
cmpsl
mov
jae
inc
mov
aaa
aad
andb
lret
call
xor
aad
jb
sbb
lcall
jge
pop
xchg
mov
loopne
sub
mov
cmpsl
arpl
lcall
and
aam
test
nop
push
pop
test
lcall
mov
sbb
out
test
iret
add
addr16
or
push
test
push
popf
loop
or
lock
push
adc
and
adc
jbe
nop
xor
mov
cmpb
mov
fmul
pop
jae
ficompl
movsl
dec
pop
incb
or
cld
add
pop
mov
clc
cmp
cmpsb
arpl
inc
adc
test
jno
sbb
push
nop
mov
inc
sbb
addb
imul
jnp
inc
leave
cmp
subb
inc
hlt
sub
dec
mov
adcb
fcoms
test
xlat
push
mov
scas
loop
lcall
or
cmp
popa
xchg
inc
jbe
das
xor
out
clc
mov
cwtl
sbb
daa
push
cmpsl
in
or
inc
icebp
sbb
xchg
add
sbbl
outsl
dec
dec
sbb
jmp
shll
popf
div
ss
testl
aaa
paddq
sbb
popf
ds
push
insl
cli
dec
pop
int3
mov
adc
jle
dec
jge
pop
popa
pop
xor
mov
mov
jno
pop
xchg
cmp
leave
subl
scas
fcmovu
outsb
mov
and
mov
test
adc
sbb
sbb
cmp
ret
jl
fisubl
popf
mov
test
rcrb
mov
mulb
add
jb
mov
test
cmc
testb
fidivs
pop
pop
in
or
imul
adc
jo
sahf
adc
aad
cltd
lret
xchg
or
test
jle
xlat
sub
jns
orb
jg
adc
inc
dec
insl
jmp
sti
icebp
or
mov
bound
mov
pop
aas
dec
dec
movsl
dec
ficoms
cmp
mov
cmpb
cmp
inc
lds
and
mov
xor
pop
sbb
push
and
jl
push
andb
pop
xchg
fbstp
sti
rcrb
sub
jp
sub
inc
jle
mov
adc
sbb
gs
push
imul
cmpsl
jo
int
jo
or
xchg
cmp
into
ds
mov
repnz
daa
andb
lahf
cmc
and
jae
inc
xchg
outsb
sbb
mov
cmpsl
xchg
adc
fadds
sbb
pop
pop
mov
div
mov
jbe
and
inc
xlat
mov
mov
lahf
notb
pop
xor
sbb
xor
push
push
lret
data16
push
cwtl
jno
lret
cmp
xor
or
adc
call
sub
nop
movsl
sub
lea
mov
dec
xchg
mov
sub
arpl
pop
rorl
fiadds
mov
shlb
jno
cmpsb
roll
xor
mov
sub
mov
and
stos
mov
not
push
adc
xor
jae
xchg
pop
sbb
lahf
jnp
add
adc
xchg
jo
push
push
push
push
xor
sub
push
sub
dec
ja
or
shll
daa
adcb
jne
stc
mov
insb
lret
movsl
mov
cmp
mov
nop
push
cmc
aad
inc
jnp
in
xchg
inc
jecxz
and
mov
stos
mov
jmp
push
push
push
jl
mov
and
out
jg
inc
ret
dec
ljmp
dec
test
inc
cli
lock
pop
jno
arpl
cli
adc
orl
out
fwait
idivl
xor
mov
xchg
fs
pusha
insl
push
popf
push
push
and
jle
xor
lret
cwtl
mov
add
out
sub
adc
xchg
sub
rcrb
pop
push
int3
jae
or
repz
add
call
push
or
mov
xor
ja
push
gs
mov
cli
std
inc
pop
or
aas
lock
mov
ret
or
std
fmuls
xorb
push
movsl
stc
mov
testb
lea
sbb
lock
push
lret
jns
pop
jle
leave
jp
mov
cmpsl
pop
dec
push
lret
mov
lods
es
jecxz
dec
lcall
lods
into
cmp
mov
sbb
daa
cmp
pop
inc
cli
into
orb
push
jl
cli
rorb
sbb
out
dec
cld
faddl
xchg
xor
xchg
lret
push
or
sub
subl
leave
outsl
std
add
popa
xchg
sub
and
xchg
mov
lahf
int
das
xorb
insl
xor
aad
das
out
in
test
repnz
nop
push
repnz
jle
es
lret
fsubs
xchg
jae
dec
lret
in
sbb
xor
mov
xchg
sub
xchg
inc
mov
mov
lret
cmp
sti
jp
xchg
jp
sub
hlt
pop
in
mov
xor
add
xchg
js
mov
sbb
xor
imul
adc
lea
pop
xor
cmc
das
add
les
push
icebp
leave
or
add
jmp
or
movsl
inc
xor
das
dec
xchg
jne
mov
fcompl
dec
or
sub
inc
cmc
and
in
mov
xchg
or
sbb
mov
push
insl
sbb
and
inc
xor
stc
push
out
out
jecxz
imul
pop
mov
inc
pop
hlt
cs
mov
rcrb
ja
shlb
fiaddl
or
aad
movl
jns
cmp
int
sbb
lahf
push
adc
dec
sbb
push
sbb
adc
xlat
cmp
cmpsl
outsl
mov
nop
xor
sbb
daa
inc
repnz
pop
aad
adc
rol
aaa
inc
sbb
add
xor
insl
lock
mov
cmp
dec
dec
je
out
lea
inc
push
adc
out
fmull
cs
sub
in
daa
jno
xchg
mov
sbb
data16
mov
vhsubpd
inc
sbb
aaa
insl
mov
lods
movsl
ss
and
xchg
test
jae
cmpsb
dec
add
leave
xorb
clc
push
in
xchg
imul
ljmp
repnz
xchg
mov
pop
add
mov
or
stc
cmpb
cmp
xor
or
sub
and
popf
loope
xor
inc
loope
xor
pop
mov
jp
jp
loopne
push
subb
aam
loope
push
leave
sub
negl
rcr
push
lock
test
popa
jp
sbb
fiaddl
cmp
dec
into
xchg
mov
xchg
test
dec
sbb
jle
dec
sbb
mov
mov
inc
inc
cwtl
pop
cmpb
xor
push
jo
xorb
pop
jbe
cmpsb
sub
jecxz
sbb
dec
and
test
sbb
jne
push
jge
test
scas
jp
lods
dec
pop
aad
lahf
test
fstpt
cmp
fidivrs
popa
imul
dec
fisubs
bound
mov
sbb
or
out
sub
test
pop
scas
xchg
sub
mov
inc
jmp
sbb
out
inc
ds
fdivrp
int3
mov
and
cmp
dec
push
stos
dec
repnz
sbb
dec
push
xchg
cmp
pushf
popa
dec
jae
lods
sub
jle
pop
dec
int
xor
mov
xchg
clc
lock
aam
movsb
subb
inc
dec
xchg
inc
bound
lcall
mov
add
test
fistl
xchg
or
inc
stos
cmp
inc
ds
lahf
int
pop
add
sub
repz
xchg
xor
shll
pop
push
adc
pop
mov
pop
mov
xchg
outsl
in
jl
loopne
and
nop
inc
popf
add
pushf
imul
xor
jne
xchg
fldenv
ljmp
mov
rorl
ret
xor
dec
mov
mov
and
and
movsl
xlat
ds
fisttpl
insl
pop
pushf
bound
shr
and
ds
xor
xor
xchg
cli
adc
adc
sbb
pop
dec
inc
pusha
cmp
imul
jbe
aas
lret
push
pop
cmc
mov
push
pop
xchg
push
fwait
xor
addr16
sbb
cmp
fcmovnb
inc
cmp
jl
sub
mov
mov
arpl
sbb
inc
cmp
mov
div
ds
stos
cmp
xchg
fldcw
mov
xchg
lock
pushf
xchg
fwait
mov
jmp
cmp
and
sbb
xchg
test
jp
xchg
mov
xor
call
xchg
sub
mov
inc
sbb
cwtl
or
aas
xchg
xor
cmp
das
popa
dec
daa
sub
shll
movsb
lret
sub
sahf
xchg
push
iret
sub
xor
loop
cmc
xorb
jp
fs
leave
sbb
inc
push
jle
repnz
fwait
jo,pn
sbb
mov
or
jne
xchg
push
lods
inc
or
pop
lret
movsb
mov
cmc
js
push
mov
enter
push
pop
sbb
sub
rcrb
or
xor
or
xchg
test
inc
fcmovnbe
dec
cli
divl
or
inc
or
jne
or
or
push
dec
cmp
lock
xor
cmp
mov
mov
lret
les
sub
push
or
mov
or
out
add
mov
push
dec
stos
sbb
xor
pop
xchg
lods
cmp
dec
repz
inc
loope
pusha
divl
mov
cmp
xchg
stc
mov
pop
inc
push
pushf
cmp
dec
push
dec
sub
pop
xchg
sub
out
in
pop
fsubrs
fadds
lock
sbb
ljmp
mov
inc
xor
je
sub
out
xchg
popl
test
cmp
and
and
mov
push
test
sbb
lahf
adc
pusha
add
movsl
push
jbe
or
addr16
addr16
incb
loop
fadds
mov
sbb
dec
daa
xchg
insl
xor
mov
mov
pop
outsb
ljmp
test
orb
xchg
aas
sbb
mov
les
repnz
sbb
cmp
mov
sbbb
xchg
std
sbb
sbb
pop
je
sbb
jnp
dec
xchg
movsb
add
loope
adc
dec
pushl
cmp
pop
into
aas
ja
add
lods
shll
pop
movsl
mov
or
adc
pop
adc
sub
test
fs
push
sub
xchg
xchg
pop
imul
repnz
jo
push
mov
hlt
hlt
cmp
jb
mov
inc
xor
cmp
gs
inc
add
pop
shll
inc
test
movsl
push
popf
fistpl
jno
xor
addr16
mov
lds
imul
dec
mov
pop
jo
outsb
rorb
test
sbb
cmc
int
out
ss
xlat
xchg
jbe
inc
cmp
popa
cmpsl
push
std
jp
aad
jbe
cmp
loope
dec
fwait
cmpsb
push
cmp
lods
movsl
frstor
insl
mov
pop
or
pop
das
clc
adc
inc
xor
push
pop
pop
sbb
scas
out
stc
cmp
xor
lods
ja
fidivrl
sub
cmpsl
lds
ficoml
out
and
fcmovb
push
mov
xor
sub
rolb
pop
xlat
aad
inc
sbb
xor
xlat
aam
std
cwtl
outsb
out
cmpsb
mov
pop
ds
sub
inc
cmpsb
mov
add
lea
push
xor
negb
inc
mov
cmp
sub
sbb
push
loope
lret
fwait
outsb
and
scas
inc
pusha
int
xor
sbb
dec
mov
das
mov
sub
and
and
or
add
nop
lahf
sub
hlt
mov
mov
movsl
adc
pusha
and
test
xchg
repz
stos
mov
cmp
dec
sbb
mov
xor
and
pop
inc
movsb
orb
shrl
xchg
inc
addb
loope
push
enter
dec
xchg
call
push
shlb
mov
pop
pop
lret
bound
notb
fadd
push
add
xchg
inc
adc
imul
fwait
push
cltd
adc
ds
push
inc
movsl
outsb
sub
sbb
movsb
fistpl
sbb
lcall
sbb
pop
push
or
mov
js
jmp
imul
and
add
sbb
in
inc
test
inc
cmpsl
xor
xchg
aam
xor
pop
xor
sub
add
outsl
add
ss
dec
sbb
jo
push
add
mov
shlb
sub
mov
xchg
adc
movsl
xchg
movsl
cmc
jno,pt
xor
cld
jbe
aaa
adc
xchg
lcall
inc
xor
and
dec
out
mov
jne
inc
sar
cmp
aam
outsb
insl
mull
mov
xor
dec
lcall
xor
aad
stos
xlat
sbb
sub
clc
mov
dec
outsb
bnd
inc
imul
mov
sbb
jnp
push
xchg
sbb
sarl
or
pop
jge
sub
push
loope
cmp
jbe
std
lods
in
insl
mov
xchg
test
dec
mov
cli
push
mov
dec
cmp
sub
sub
mov
aam
push
xor
pop
sbb
add
adcb
clc
mov
imull
cmpsb
pop
inc
test
test
pop
test
daa
xorb
sub
scas
bound
xchg
sbb
jae
sbb
fldt
add
xor
sbb
or
sbb
cmp
clc
xor
pop
subb
scas
daa
sti
cltd
incl
cmc
daa
push
mov
xor
adc
rol
mov
sub
test
clc
dec
adc
orl
call
cmp
sbb
xchg
dec
push
out
sub
cld
cmp
clc
xor
pushf
cmp
mov
sahf
fxtract
test
frstor
js
arpl
inc
inc
test
arpl
adc
mov
fstpt
jno
push
sbb
pop
or
and
push
and
divb
mov
xchg
pop
scas
mov
push
call
jb
nop
scas
pop
cmp
mov
pop
into
or
pop
test
nop
mov
sbb
into
mov
hlt
adc
es
shrb
pop
mov
rol
xor
inc
int3
rcrl
and
add
xchg
push
adcb
bnd
add
xorb
lret
stos
mov
scas
ljmp
jl
lds
ss
push
shlb
cmc
push
sub
fstpl
adc
lcall
sti
popf
fstpl
mov
adc
cmp
jne
and
pop
sbb
and
add
xor
and
stc
sub
mov
sbb
xor
jno
add
cmpb
sbb
mov
mov
pop
mov
xchg
and
xor
and
nop
add
dec
mov
pop
movsb
rorl
pop
and
test
sbb
xor
adc
xor
out
jmp
fwait
ret
pop
loop
testb
aaa
stc
mov
mov
and
xor
lahf
adc
xchg
and
pop
pop
sbb
cwtl
push
test
hlt
imull
cmp
mov
push
mov
test
div
inc
or
mov
movsb
test
push
testl
push
icebp
add
push
or
xchg
xchg
lcallw
sbb
xor
sbb
pushf
jne
xor
loopne
and
addr16
mov
sbb
or
cmp
mov
lods
adc
enter
cmp
mov
inc
jecxz
ret
es
sub
shl
sahf
sbb
cmp
fcmovbe
out
jo
cmp
lret
aas
bound
sub
ljmp
or
mov
jge
ss
call
cmp
lds
fildl
and
sbb
sbb
and
or
and
inc
cmp
sub
xor
fbld
fdivrl
sub
daa
sbb
dec
jno
push
fdivs
push
fsubl
cmp
stos
mov
or
movsb
xchg
push
ds
jne
cwtl
xchg
mov
sbb
add
jp
inc
js
es
push
mov
pop
movsb
loop
loope
mov
cmp
sbb
insl
push
cli
cmp
outsl
in
sub
cmpsl
pop
mov
jns
stos
clc
add
jge
loop
ret
mov
shl
lea
mov
lcall
subl
cmp
rsqrtps
ss
out
push
sub
rcrb
push
sub
pop
sti
push
rcrl
xchg
and
add
mulb
mov
mov
mov
iret
xor
jae
aam
cld
sub
sbb
xor
push
js
hlt
shrb
sub
mov
push
pop
mov
fildll
jle
push
fcoml
mov
sub
pusha
xchg
jnp
sbb
fs
and
lret
rcrb
mov
push
pop
xchg
xor
loope
xchg
loopne
loop
inc
inc
cltd
or
scas
and
push
loope
nop
xor
cmpsl
scas
enter
mov
ficoml
adc
pop
xor
daa
or
sbb
cwtl
dec
iret
push
xor
insb
pop
fcomp
sbb
add
add
mov
sbb
cltd
or
dec
mov
push
cmpsl
lahf
xchg
in
in
mov
add
lea
push
or
flds
nop
mov
sbb
sbb
std
mov
push
cmp
inc
out
cli
idiv
mov
jl
or
xchg
sub
inc
sub
cmpsl
daa
sti
xor
add
sbb
es
cwtl
xlat
stos
lret
pop
xor
fisttps
inc
lahf
fdivp
add
cmp
popf
mov
xor
jbe
repz
sbb
inc
mov
and
pop
stos
xor
cmp
out
cmp
test
icebp
iret
in
add
sahf
xor
fcmovne
test
jp
push
sub
add
ret
adc
stos
push
rcl
and
xor
daa
cmpsb
push
data16
sbb
js
fnstsw
shlb
negb
fisubrl
loop
cmp
xchg
xor
adc
in
dec
lds
push
sbb
mov
dec
xchg
rcr
dec
adc
sbb
subb
push
add
inc
push
leave
pop
jp
pusha
sub
pop
pop
or
aad
jne
dec
pop
push
dec
and
push
cli
sbb
pop
cmpsb
sbb
push
pop
push
cmp
sbb
add
dec
dec
loopne
push
add
inc
daa
addr16
int
cmp
inc
test
sub
mov
sbb
fildl
icebp
jp
sub
shl
les
pop
stc
pop
test
andb
push
add
addb
das
out
xor
jb
sub
cmp
repz
mov
sbb
push
xchg
add
and
stos
mov
xor
mov
and
fcmovbe
jl
inc
aaa
xchg
sbb
daa
mov
inc
lock
cmp
insl
adc
and
sbb
xchg
arpl
movl
add
cmc
int
aam
es
push
jno
cs
push
and
jbe
ja
jp
push
clc
xchg
push
es
out
sahf
pop
fisubrs
test
repnz
push
sub
test
and
mov
and
push
pushf
dec
add
sbb
xchg
cmp
lret
jp
xlat
aad
loop
rcrl
cli
push
roll
sbb
inc
leave
sbb
dec
lock
cltd
sbb
push
rcl
pop
cld
jbe
pop
jnp
inc
sub
pop
shrb
push
ret
or
jno
mov
popf
sub
pop
mov
mov
sbb
pusha
sub
push
and
mov
sti
in
nop
xchg
add
cmpsb
int
sub
pop
jno
movsl
div
and
inc
je
push
mov
jns
subb
cmp
adc
aaa
xchg
pop
adc
mov
mov
ja
pop
adc
mov
sbb
cmp
cs
inc
dec
cltd
js
cmc
mov
sub
fcmovne
jp
xchg
sub
fwait
xor
mov
sub
push
pop
xchg
jge
sub
shlb
inc
fldt
inc
ficoml
aaa
rcrb
push
push
iret
xchg
push
push
inc
orb
sbb
mov
sub
pop
push
inc
push
or
aaa
fwait
sub
mov
xlat
out
orb
sbbl
jno
loope
into
in
movsl
pop
jns
and
jno
lods
nop
fisubl
xchg
clc
mov
dec
inc
pop
divb
cli
ds
add
sbb
popl
dec
repz
mov
sbbl
nop
popf
sub
mov
sbb
in
jg
xchg
xor
dec
xor
pop
ret
jmp
scas
sub
mov
add
lret
or
jle
adc
sub
jno
mov
adc
pushf
lcall
fwait
lods
lahf
sub
shll
shr
andl
jb
mov
pop
movsl
add
adc
pop
nop
movsl
cmpsl
nop
aaa
cmpsl
test
dec
adc
aas
cmpsl
insl
mov
gs
dec
fdivs
cmp
dec
mov
mov
sbb
lahf
dec
mov
dec
movsl
daa
inc
mov
jge
sahf
pop
cltd
aaa
push
and
clc
sahf
dec
shlb
dec
pop
push
xchg
sarl
jecxz
iret
xchg
sub
sbb
sub
mov
adc
sbb
push
aam
iret
sbbb
push
inc
dec
imul
sub
xor
pushf
push
dec
sub
orl
outsb
add
dec
push
sbb
dec
lea
mov
pusha
add
sbb
std
pushf
pop
mov
add
sbb
sahf
pop
pop
push
movsl
dec
dec
push
dec
pop
or
or
sbb
xchg
stc
mov
movsl
adc
fcmovbe
mov
jae
sbb
fxch
lea
jg
aaa
add
pusha
cmp
mov
iret
mov
pop
mov
cmpsl
repnz
xor
popa
add
lock
pop
mov
dec
cmp
mov
or
inc
push
fs
cmp
cmp
and
sti
iret
dec
sub
rolb
pop
push
int3
clc
ss
push
xor
lret
adc
dec
xchg
dec
sub
and
xor
mov
lcall
in
je
xlat
lock
das
fdivs
push
or
scas
xchg
loope
sbb
push
mov
lret
add
dec
imul
and
pop
adc
sub
xlat
jbe
xor
and
add
arpl
sub
push
outsl
push
pop
pop
mov
fdiv
and
enter
xchg
xchg
adc
adc
jle
jmp
andl
hlt
mov
and
mov
out
daa
pop
pushf
and
movsl
push
repz
sbb
out
sti
sub
movsb
repnz
jp
pop
push
and
and
js
sub
jp
repz
sahf
cmp
pusha
push
sub
pusha
add
pop
mov
and
cmp
cmp
fisubrs
xchg
andb
dec
insb
je
sarl
lcall
xor
subb
ret
adc
mov
mov
and
sub
jnp
jp
cmc
xchg
loope
sbb
sbb
inc
push
out
xor
push
dec
lcall
sub
mov
dec
mov
adc
or
sahf
aaa
mov
pop
lock
out
push
dec
lods
jbe
jb
adc
fcomp
mov
pusha
int
xlat
mov
jmp
push
dec
aaa
mov
jp
jb
xorb
test
cmpsb
lahf
lahf
aad
sub
xor
and
xchg
subb
sbb
mov
or
popf
sub
mov
or
outsb
jbe
sbb
and
addr16
push
cwtl
fwait
shll
push
xchg
mov
sub
mov
mov
sub
xchg
jmp
ja
and
dec
fisubs
popf
cmpsl
ljmp
and
add
mov
enter
mov
dec
mov
xchg
ljmp
call
push
push
mov
icebp
push
fs
sbb
xchg
das
xor
out
sbb
sahf
andb
lock
jno
xchg
fcom
dec
out
jnp
mov
push
ret
lret
mov
adc
rcr
aam
xor
cli
mov
aad
mov
inc
and
cmpsb
inc
rorb
push
insb
xchg
mov
xor
mov
xchg
ljmp
xorb
xchg
popf
ret
int
sub
ljmp
mov
cmc
orb
test
pop
push
and
mov
enter
adc
push
lret
cmp
or
jp
cmp
lret
pop
inc
orb
jp
and
andb
jno,pn
into
cmc
sarb
jns
jae
jbe
fdivr
fcomps
movl
sbb
dec
stos
pushf
jp
mov
inc
fcompl
lcall
dec
sbb
rorb
addr16
inc
or
lds
loopne
lds
cwtl
push
sbb
pop
clc
xchg
jp
cmp
push
dec
xchg
sub
fs
sbb
xor
shll
xor
push
mov
call
xor
xchg
xor
dec
jae
nop
inc
imul
xchg
pop
jmp
and
std
adcl
adc
xor
cs
and
mov
cmp
cmp
lret
sub
shlb
stos
inc
es
dec
xchg
push
icebp
xchg
jge
fldt
xchg
cmpsl
cld
scas
mov
imull
movsl
cli
and
stos
fninit
lock
rol
sub
pushf
xchg
dec
mov
data16
mov
fildl
repz
lahf
xor
jbe
xorb
mov
outsl
jo
xor
mov
pushf
xor
jae
add
mov
inc
stc
and
sbb
cpuid
and
and
nop
sbb
and
addr16
imulb
rorl
push
or
add
scas
int
cwtl
mov
push
adc
xchg
mov
pop
mov
cmp
icebp
jns
mov
popa
popf
sub
sub
or
xorb
sub
xchg
sbb
aam
stos
pop
jo
in
loope
adc
jl
jnp
in
and
arpl
and
inc
xor
stc
rolb
mov
cmpsb
lods
and
ds
in
cltd
mov
jae
xor
insb
push
cmpsl
fiadds
cmp
shll
call
xchg
je
ljmp
sahf
sbb
push
xor
dec
stos
nop
mov
cmc
push
and
pop
andb
xor
add
mov
push
cli
push
aas
fwait
shlb
imul
push
bnd
ja
inc
in
dec
sbb
and
cmpsl
jge
ss
xor
xchg
push
adc
jg
pop
or
and
fdiv
pop
xchg
jmp
and
mov
inc
xchg
mov
xchg
cltd
and
push
nop
adc
sbb
mov
lahf
mov
push
lret
pushf
xchg
cmc
repz
hlt
xchg
into
movsl
sub
jmp
inc
sahf
cmp
xor
fbld
js
and
lods
xlat
and
sbb
fldt
and
icebp
dec
imul
loop
adc
shrb
mov
push
jge
dec
sbb
mov
addl
cmp
movl
add
push
add
add
stos
ljmp
cmc
push
sbb
nop
xor
sbb
cmp
inc
xlat
inc
fdivr
mov
call
sub
rolb
lcall
xor
sbb
test
data16
fs
xor
or
mov
inc
clc
mov
mov
push
pop
repnz
adc
push
xchg
es
pop
movsl
push
andb
jns
mov
nop
push
jo
inc
xchg
jno
pop
in
fistps
sbb
sub
inc
cli
add
xchg
mulb
dec
gs
aas
adcb
enter
scas
dec
mov
jb
sbb
cmc
adc
es
add
ret
fwait
xor
jl
repnz
push
push
mov
fbstp
movsb
sbb
bound
inc
jo
add
aaa
jb
lahf
sbb
inc
push
scas
xor
addr16
and
pop
cmpsb
mov
xchg
mov
sbb
inc
cmc
cmp
pop
and
sub
cmp
shll
push
dec
fcmovnbe
nop
mov
dec
jne
inc
pop
push
adc
dec
xor
shlb
ds
cmp
into
sbb
xor
lret
mov
or
mov
repz
push
push
test
outsb
and
js
pop
jbe
jnp
sbb
pushf
dec
mov
jae
sbb
lahf
out
push
xor
sub
sbb
or
and
fisubl
fcomip
sarb
sub
cmpb
iret
xor
jle
fs
cmc
cli
sbb
sbb
jmp
pushf
mov
jbe
aaa
outsl
pop
sub
mov
sbb
inc
cs
jnp
das
pop
mov
mov
push
sbb
imul
mov
push
cmp
gs
mov
movb
mov
add
cmp
insl
insl
mov
adc
ret
adc
stos
sbb
xchg
fisubrs
xchg
ljmp
or
sbb
les
pushf
push
or
rcrl
jge
xchg
aaa
xor
rcr
xchg
pop
clc
cmpsl
add
pop
mov
lcall
inc
sbb
jae
frstor
std
ja
dec
imul
jp
lret
mov
xchg
inc
mov
sbb
sbb
sub
xor
sbb
xchg
fwait
insb
inc
inc
adc
aam
stc
cld
outsb
shll
xlat
cli
in
add
adcl
in
test
xlat
lcall
mov
adc
add
mov
ds
ljmp
sub
out
pop
sti
shll
nop
ret
lock
fxch
test
mov
movsl
jmp
lret
cmpsl
rcrb
sub
sahf
aam
test
out
pop
sbb
cs
dec
aad
sbb
push
repnz
adc
adc
sbb
pop
ret
mov
lds
lcall
es
and
clc
cmpsl
sahf
pop
inc
and
mov
dec
inc
inc
inc
dec
call
cli
cs
jle
inc
idiv
movsl
or
into
and
inc
fnstcw
dec
sub
int3
sbb
shlb
and
ljmp
xchg
notb
pushf
mov
mov
out
in
ljmp
ljmp
insl
arpl
xchg
cld
adc
sahf
adc
lret
pusha
int3
sub
sbb
mov
jae
jmp
jne
jne
imul
mov
cltd
push
and
mov
xchg
cmp
pop
adc
mov
push
mov
in
cmp
shll
mov
arpl
sbb
jecxz
or
sbb
pop
sbb
add
and
gs
fistl
insl
pop
xchg
and
push
insb
fbld
pop
pop
or
dec
and
fsubs
popa
push
push
ds
adc
push
adc
and
jno
sbb
adc
and
pop
in
addr16
push
aaa
nop
sub
test
or
xchg
sbb
movsl
and
jae
sarl
sub
adc
addr16
je
xchg
mov
fcomps
dec
dec
sbb
mov
lock
or
add
lcall
aam
mov
jo
add
and
hlt
push
dec
push
aam
movl
andb
cmp
popf
cwtl
mov
loopne
adc
dec
inc
subb
jo
lock
pop
sub
push
imul
pop
sbb
daa
push
iret
and
cmp
jno
xchg
pop
dec
sub
jp
mov
cpuid
push
loop
inc
pop
dec
mov
dec
fistpll
xor
sbb
daa
mov
and
lock
cmp
lret
push
outsb
xchg
sbb
and
addr16
cld
pop
fstpl
xchg
dec
lahf
push
sbb
popa
and
jo
ficoml
popa
mov
cmpsb
fwait
pop
dec
pusha
or
mov
stos
mov
cld
mov
fdiv
mov
jo
test
insl
mov
mov
sub
push
mov
fisttpll
mov
jmp
dec
lock
pop
daa
pop
mov
sub
cltd
pop
mov
lret
in
pop
dec
mov
xchg
loope
outsb
mov
aaa
sbb
lahf
push
push
test
add
mov
mov
jo
jne
xchg
pushf
shrl
subb
sti
adc
cli
sub
add
add
mov
xchg
insl
orb
mov
adcb
das
push
and
mov
ss
mov
frstor
aas
test
jo
mov
pop
test
push
sub
mov
clc
adc
and
mov
fstps
xchg
push
ds
fcomps
sub
cmc
push
ss
jne
sub
sbb
dec
test
adc
cmp
scas
sub
and
sub
adc
pop
and
and
sub
xchg
loopne
sub
lret
popf
cmp
lods
sub
sub
cmp
mov
pop
mov
jns
sub
xchg
mov
sbb
mov
cmp
adc
cmp
lret
xor
or
repnz
add
divb
out
sub
fwait
std
lods
scas
std
mov
imul
push
or
imul
or
jmp
test
jl
dec
mov
cmp
cmp
lods
rclb
sbb
xor
jnp
sub
mov
mov
add
adc
sbb
daa
ret
movsl
mov
or
inc
mov
sub
sbb
mov
pop
add
addr16
mov
cmp
sbb
mov
cmp
mov
dec
push
inc
push
adc
dec
inc
sub
sub
shr
insl
dec
inc
and
dec
fdivr
outsb
cltd
and
sahf
inc
or
sub
popf
test
fs
lods
adc
in
pop
add
imul
shll
and
mov
jb
out
xchg
and
inc
sarl
popa
adc
push
sub
push
mov
das
add
fiadds
call
sub
push
sarl
add
dec
sub
adc
mov
movsb
dec
cli
sub
dec
adc
push
push
test
or
xor
adc
es
popa
push
movsl
test
outsb
gs
add
out
cmp
cmpsb
and
xor
push
out
ljmp
imul
and
pop
jbe
aas
loopne
adc
cs
test
popa
xor
movsb
sub
js
pop
push
jb
jnp
outsl
or
loopne
xchg
pop
sub
mov
sbb
lods
cs
in
test
data16
cmpsl
jl
and
push
lock
pop
aam
sub
sbb
cmp
fcmove
push
out
loope
inc
xchg
adc
push
scas
xchg
add
or
movsl
clc
jae
test
popf
xchg
mov
fimuls
icebp
scas
and
inc
mov
cmpsl
lahf
or
push
sub
lahf
add
and
and
lcall
pop
jns
jp
clc
lcall
cltd
pop
das
sbb
inc
das
dec
adc
add
lcall
divb
xchg
addb
mov
and
fisubrs
test
sbb
push
sub
lahf
mov
dec
cmp
add
and
out
sbb
fisubrl
fistpll
sbb
flds
mov
rorb
xchg
add
scas
adc
repnz
imulb
cmp
cmp
pop
jae
jb
cmpsb
mov
lea
xchg
pop
inc
fisttpll
cmp
insb
test
inc
jle
cmpb
cmp
cli
loop
xchg
movl
iret
cld
push
lret
adc
scas
subb
mov
pushf
test
cmp
pop
mov
imul
push
mov
sbb
xor
into
sbb
jg
adc
pop
push
and
and
fwait
rorb
adc
insl
pop
sbb
dec
cltd
rcll
sub
pop
dec
pop
sbb
mov
aas
pop
fdivrs
pop
mov
loopne
hlt
ljmp
sub
add
dec
addr16
xor
inc
add
and
les
fstpl
sahf
imul
xor
pop
mov
add
xor
xor
lret
push
pop
push
push
fsubrp
movsl
mov
adc
inc
addr16
push
push
pushf
leave
sub
call
inc
scas
testb
jmp
insb
daa
mov
mov
outsb
inc
les
sbb
sbb
dec
or
mov
scas
xchg
das
dec
sbb
inc
push
dec
xchg
lcall
dec
xchg
pop
test
sbb
add
popa
test
fisttpll
mov
out
push
cmp
ret
sub
push
sub
in
ljmp
mov
sbb
and
movsl
call
push
mov
stos
xchg
jecxz
and
and
cmp
popa
out
stos
jne
mov
clc
add
and
mov
lock
add
and
lret
jns
xlat
out
add
push
xor
adc
ret
mov
sub
pop
leave
pop
or
add
sbb
imul
dec
jne
lret
cmp
pop
fisttpl
jp
jp
sbb
pusha
ds
test
jno
pusha
cmp
packuswb
cmp
ret
or
test
shll
ljmp
imul
ja
sub
push
fcmovbe
push
int3
and
inc
notb
lret
dec
ljmp
dec
xor
and
out
pusha
mov
pop
cmp
insl
inc
cld
add
push
mov
cmpl
dec
add
loop
mov
es
push
mov
rol
das
addr16
testl
pop
dec
loopne
sub
or
imul
hlt
pop
and
fmull
or
cmp
push
jnp
vpmaxub
int
pop
or
push
test
add
repnz
sbb
xchg
dec
faddl
movsl
pop
and
jbe
xor
into
mov
push
cmp
cmc
or
pushf
sub
lahf
and
push
pop
ret
ficomps
das
xor
loop
pop
cmp
aas
js
sub
mov
aad
add
pop
cmp
iret
or
xor
ljmp
es
andb
push
sbb
cmp
sub
xchg
pop
and
enter
addb
in
out
mov
fst
jns
jmp
dec
loope
enter
cmp
dec
sar
mov
out
test
mov
and
sub
rclb
adc
cmp
jno
xchg
or
ljmp
sti
and
adc
cwtl
or
or
pop
les
ljmp
insl
lcall
xchg
cwtl
inc
jno
xor
jbe
adc
fnsave
lcall
cwtl
inc
pop
and
add
test
sub
sbb
jns
pop
popf
xchg
push
add
leave
dec
leave
push
popf
sbb
in
fisttps
cmp
in
repnz
push
jle
aaa
adcl
jae
bound
pop
shl
or
cmp
int
shll
shlb
lds
test
shll
mov
jge
sarl
adc
add
mov
push
xor
add
andb
out
jg
lahf
add
inc
cli
loope
xchg
jo
sub
sub
outsb
push
xchg
add
sbb
inc
sub
aam
dec
inc
or
shlb
inc
andb
sub
aam
and
xchg
xor
push
xchg
lcall
daa
fadds
sbb
cmp
pop
mov
js
or
ficoml
push
inc
push
mov
cmp
dec
test
stc
notb
sbb
ret
cld
popa
pop
faddp
repnz
xchg
add
sbb
mov
add
or
pop
cs
and
sbb
adcb
pop
rcrb
dec
lret
rorb
and
lahf
pop
jb
jne
xchg
iret
ljmp
repnz
scas
add
add
sbb
loope
fstl
lret
ljmp
pop
popf
outsl
inc
push
sub
mov
or
mov
dec
inc
test
push
sbb
pusha
and
jns
out
mov
shlb
mov
hlt
nop
adc
inc
fstl
push
lcall
mov
and
jno
jno
xor
pusha
push
xchg
or
das
sub
xor
in
and
mov
pop
je
cmp
dec
push
pop
aad
cmpsb
bound
cld
dec
push
int3
pop
push
dec
int
dec
gs
push
push
ja
ljmp
mov
cmp
adc
push
push
mov
mov
jae
ror
mov
lahf
sbb
add
cs
xor
lahf
xchg
and
xchg
mov
incb
dec
and
andb
cmp
push
cwtl
es
dec
adc
push
mov
jno
or
inc
xor
shrb
cmc
cmc
pop
mov
pop
enter
imul
xor
sub
mov
pop
add
mov
mov
and
fsubl
cmc
xchg
inc
mov
jle
sbb
and
lret
test
xchg
ficoms
je
push
dec
es
scas
ja
scas
shrb
push
mov
cmc
xor
mov
mov
xchg
jbe
push
test
cmp
add
daa
gs
ja
es
lock
cltd
loope
xchg
jb
jns
jmp
aad
sub
popf
adc
mov
or
popl
repz
push
inc
dec
sbb
adc
orb
jmp
cmp
mov
lea
mov
fnstcw
aad
inc
jno
dec
jo
sub
sbb
das
popf
js
mul
xor
xor
push
jge
or
jmp
imul
pop
jge
adc
mov
dec
repz
aad
push
sbb
xor
out
sahf
ds
mov
daa
add
call
sbb
outsb
mov
push
dec
and
mov
pop
aaa
xchg
xor
data16
push
xchg
xor
mov
rcl
fadds
rol
sbb
aad
dec
mov
jne
in
pop
iret
cmp
jo
lcall
rolb
push
movsb
mov
fwait
add
dec
inc
mov
cmpsb
sbb
inc
scas
iret
mov
cmp
ja
out
cmpsb
jo
jno
sbb
mov
testb
cs
iret
or
cld
popf
push
mov
xchg
ret
xor
sub
jo
loope
popf
rcrl
push
cmc
clc
mov
insl
mov
pop
and
popf
xor
stos
adc
leave
outsb
fstps
jo
fisttpl
sbb
sbb
sbb
push
push
es
push
test
jbe
out
pop
pop
ficoml
jl
mov
mov
iret
sbb
int
leave
cmp
or
into
mov
shl
sbb
jg
rcr
lock
pop
inc
dec
shrl
inc
and
jp
addr16
imul
lret
pop
jecxz
mov
push
mov
sahf
inc
push
fsubl
stc
sbb
push
mov
fistps
mov
dec
dec
aam
add
sub
je
xchg
into
sbb
jne
js
jg
adc
mov
out
cmc
xor
into
rol
mov
sub
aad
ljmp
sbb
push
cmp
js
mov
jp
test
cs
hlt
mov
adcb
das
aaa
je
mov
rcrb
push
pop
xchg
mov
jb
es
jge
dec
cli
fimull
inc
clc
add
cmp
jae
fadds
pop
das
into
add
jmp
icebp
jno
mov
push
mov
jno
xor
dec
in
leave
ja
fdivs
sbb
scas
push
push
mov
hlt
int
or
jne
sbb
cmp
js
mov
sub
addb
gs
mov
notb
sub
push
push
in
pop
rcr
jg
push
jmp
lock
adc
pop
pop
mov
fsub
loope
sub
negl
sub
cmp
sub
xlat
jg
js
int3
sbb
in
inc
sub
clc
adc
fst
or
xlat
adc
adc
cmpsb
cmp
imul
aad
std
inc
sub
inc
lods
cltd
fcoml
xor
jmp
ss
das
adc
sub
xchg
and
mov
clc
or
pop
mov
sub
sbb
jb
inc
or
dec
sbbl
icebp
mov
lock
stos
sbb
sahf
sbb
lods
adc
adc
cmp
or
cmc
mov
adc
jecxz
inc
scas
mov
push
das
imul
pop
xor
ffree
cmp
and
imull
and
push
pop
adc
push
or
add
fcoml
gs
push
pop
mov
pop
sub
das
fwait
sahf
bound
cld
push
sbb
cli
adc
cs
adc
xor
sbb
push
pop
or
stos
xchg
mov
jnp
xchg
orl
ds
and
cmp
push
and
sub
jns
aad
mov
ja
les
out
pop
test
mov
mov
cld
dec
push
sbb
or
bound
das
sub
xchg
inc
sbb
and
mov
sub
subl
cld
leave
addb
pop
sahf
mov
daa
shll
das
shlb
into
mov
add
pop
out
stos
pushf
xchg
sbb
inc
inc
adc
mov
jmp
sahf
pop
add
sbb
mulb
lcall
xchg
jno
pop
shrl
fldln2
inc
sarb
pusha
dec
dec
xor
mov
movsb
subl
cmpsl
sub
nop
adc
mov
cmp
xor
cs
movsl
mov
out
sub
jo
mov
test
sbb
jp
add
dec
out
jo
data16
pop
iret
cmp
mov
test
mov
jns
and
fwait
aaa
inc
nop
rcrl
xor
leave
cld
jp
mov
test
push
add
cs
xchg
mov
ret
pushf
fwait
dec
ja
outsl
data16
or
jb
subb
mov
pop
mov
xchg
or
neg
xor
js
arpl
shrl
mov
dec
fistpll
add
arpl
in
stos
lret
xor
inc
js
push
popf
loopne
push
or
cmpsl
pusha
mov
lahf
stos
sbb
xor
mov
and
sub
mov
aaa
push
sbb
insl
fistl
xchg
lcall
jae
fnsave
mov
mov
cmp
inc
dec
aam
inc
and
xor
fbstp
sbb
pop
insl
xor
cmpsb
pop
subb
jb
lar
bound
pushf
pop
mov
cmp
fdivl
ds
push
and
sbb
sbb
cmc
jp
loop
mov
sbb
sbb
test
and
and
pop
inc
inc
pop
jae
dec
data16
ja
xlat
fcomp
loope
cwtl
cmp
and
xchg
mov
fsubrl
pop
in
xchg
sbb
icebp
push
test
fwait
loopne
nop
mov
ss
hlt
imul
add
and
sub
add
dec
testb
push
cwtl
iret
xor
jnp
fwait
je
out
dec
std
cs
dec
shrb
sbb
mov
mov
test
sbb
arpl
sub
cmp
push
popf
imul
stc
push
jb
je
dec
xor
pop
ss
sbbb
sbb
xor
mov
push
test
mov
push
popa
movsl
subb
push
adc
dec
nop
lahf
test
push
jne
xchg
aas
pop
jle
mov
and
fldt
insb
outsl
pop
mov
mov
fmuls
xor
idivl
jae
inc
xchg
movsb
out
in
daa
roll
sub
mov
dec
out
pusha
pop
lret
add
jne
sbb
inc
and
mov
es
cs
mov
es
aas
jne
jg
es
mov
jne
jg
mov
xorl
loope
popa
shl
test
xchg
mov
jno
in
add
call
and
mov
stc
xchg
add
inc
ja
pop
push
jp
adc
mov
mov
rorl
dec
jnp
mov
jb
push
clc
test
add
xchg
sbb
xor
add
mov
in
adc
jl
cwtl
jp
test
xchg
add
lods
add
dec
mov
jl
pop
add
jae
inc
jb
sbb
in
orb
orl
repz
dec
dec
dec
push
mov
and
inc
mov
sbb
jle
rcrl
push
mov
aas
idiv
aad
int
sbb
and
sub
repnz
jp
nop
cmc
pop
inc
push
cmp
cmpsl
andb
dec
nop
add
sub
mov
inc
inc
andb
mov
and
xchg
lock
xchg
fildl
aam
xor
scas
insl
mov
div
popa
jle
popf
adc
sbb
push
das
pop
test
pop
dec
int3
add
lea
xchg
push
push
aas
movsl
popa
gs
jmp
push
insl
mov
xor
mov
mull
push
sbb
xchg
iret
fstl
sbb
sbb
push
int
popl
jne
mov
cmp
nop
ja
jb
jl
fwait
out
sbb
xchg
nop
add
xchg
ret
mulb
pop
addb
mov
xor
xor
test
inc
xor
ds
jns
mov
mov
jp
lahf
es
movsl
mov
ret
repz
and
hlt
and
inc
and
hlt
adc
data16
repnz
add
xchg
fbld
and
adc
rcrb
imull
aaa
out
and
aas
dec
jmp
cltd
leave
in
es
cmp
dec
fiaddl
mov
sbb
and
sahf
pop
push
test
push
dec
shl
fdivr
mov
fistl
rorl
pop
out
sbb
jl
js
pop
pop
or
cmp
movsl
xchg
jle
inc
repnz
jno
push
in
pop
faddp
and
sti
xchg
push
popa
mov
sbb
push
add
sub
pop
add
popa
sbb
lea
imul
pop
testb
fisttps
into
cmp
jmp
mov
cmp
es
or
nop
sub
push
and
pop
shl
sbb
or
inc
sbb
adc
fwait
loope
je
or
mov
and
cmp
mov
lret
sahf
jns
fidivl
inc
fs
insl
jo
inc
xchg
xorb
cltd
das
je
pop
fldl
inc
mov
pusha
xorb
ja
movsl
ja
test
dec
pop
fisubrl
jne
mov
ficompl
pop
xchg
lcall
loopne
xchg
movsl
outsl
xlat
push
addr16
ror
mov
xor
ljmp
pop
sbb
ja
push
fisubl
mov
popf
jg
leave
repz
jo
or
inc
into
push
cld
ret
add
mov
test
mov
mov
test
jo
mov
mov
loope
jge
sbb
mov
mov
sbb
sbb
inc
leave
mov
mov
cmovl
cld
pop
push
bound
ret
pop
pop
lcall
insl
or
pushf
mov
imul
push
es
push
mov
cmpsb
data16
rcl
daa
inc
pop
stos
jecxz
je
adc
cld
pop
out
inc
int3
cmc
adc
dec
insl
pop
fdivrl
cmc
les
jne
dec
sub
addb
stc
or
add
fildl
and
mov
daa
xor
lods
addb
outsl
ret
repnz
jns
fs
lcall
icebp
rcrl
repnz
jns
rcr
sub
bound
pop
lock
sbb
inc
pushf
repnz
les
insb
pop
cmp
aas
rcrb
push
mov
and
inc
cmc
sbb
sub
pop
das
lcall
lcall
lcall
pop
pop
aas
in
cmc
or
mov
call
sbbb
add
push
sub
pop
fstpt
or
dec
add
pop
xorl
mov
lcall
mov
push
xchg
mov
dec
sti
adc
mov
negl
inc
or
ret
jo
xchg
pop
imul
out
pop
mov
push
add
adc
in
ss
xchg
xchg
sub
push
pop
movsb
xor
es
xchg
cmp
data16
xchg
fbld
rorl
aas
xchg
mov
xor
mov
es
lods
testb
mov
call
cwtl
xchg
mov
pop
leave
xchg
cmc
mov
ds
dec
jmp
and
xchg
subl
push
aaa
imul
and
pop
sar
sub
out
popa
aad
mov
cmp
add
add
lcall
addr16
and
das
or
pop
movsl
inc
in
mov
cmc
in
mov
inc
mov
in
int
xchg
xor
jge
es
xor
jbe
add
adc
xor
fldcw
or
or
inc
inc
loop
push
ljmp
popf
mov
xchg
fisubrs
lret
push
mov
mov
mov
mov
cmp
xchg
jae
leave
es
mov
and
push
sub
jae
add
inc
ja
sahf
push
inc
jae
push
cmp
pusha
aas
movsb
nop
cmc
bnd
or
adc
out
xchg
or
xor
stos
ja
pop
mov
cmpsb
pushf
stos
pop
push
mov
lods
inc
jecxz
inc
incb
or
inc
ja
mov
popf
cmp
push
sbbl
pop
push
popf
jbe
push
cmpsb
cmp
negb
mov
aam
add
add
push
add
aam
jbe
int
test
aad
mov
hlt
cltd
cli
lcall
adc
ds
icebp
fistpll
lock
lahf
es
popf
or
lods
inc
lret
jle
mov
ds
cli
jp
cmp
push
cmp
leave
cmc
rolb
ja
cmp
jecxz
sti
aam
outsb
leave
inc
aad
sub
repnz
add
fsubrs
add
xor
push
fsubs
add
mov
lea
es
xchg
mov
xor
push
aas
xor
or
inc
xchg
cmc
add
or
arpl
adc
addl
iret
inc
and
push
xchg
add
sbb
cmp
xor
pop
xchg
ljmp
cwtl
add
pop
loope
mov
mov
int3
insb
jmp
dec
es
mov
push
xorl
int
es
inc
adc
stos
out
xchg
das
pop
mov
into
xchg
push
lock
mov
sub
lds
jmp
inc
adc
mov
es
xor
push
in
arpl
adc
cmp
rolb
es
andb
jbe
cmc
sbbb
outsb
mov
jge
nop
repz
rolb
pop
mov
dec
adcl
adc
inc
addb
fwait
xchg
push
jmp
orb
ss
xchg
add
fiaddl
sbb
hlt
cmpb
fsubrp
fwait
popf
lret
dec
xorl
repz
push
inc
jae
inc
or
adc
dec
fistl
sub
inc
mov
aaa
fisubs
inc
adc
sbb
out
pop
jle
jle
jle
jle
lea
loop
add
inc
stos
lret
jmp
jp
mov
cmp
fwait
cmp
test
xchg
mov
and
jnp
sbb
jae
aaa
cmp
imul
and
ljmp
fidivs
dec
inc
mov
popf
repnz
inc
push
and
inc
pop
ljmp
jge
in
push
sbb
xchg
sub
and
sub
cmp
jp
xchg
imul
push
lds
mov
es
mov
push
imul
push
addr16
dec
jl
push
outsb
sti
jno
dec
cmpsl
pushf
cltd
fstpl
aaa
cltd
mov
xlat
aaa
mov
repz
cmp
in
stos
dec
jle
xor
lret
ja
dec
aam
sbb
jmp
in
or
push
mov
sahf
xor
xor
cmp
add
je
cmp
mov
clc
sahf
xchg
out
fiaddl
sub
and
fdiv
inc
cwtl
and
jle
sub
mov
push
test
push
hlt
aad
adc
cmp
push
xchg
hlt
mov
add
jae
lret
ret
jae
xor
jg
sub
andb
jnp
push
push
mov
mov
je
es
popf
in
push
dec
std
fsubl
xchg
mov
jb
inc
stos
push
mov
aas
mov
inc
inc
je
sub
xor
nop
int
pop
xorl
jecxz
sub
add
loopne
and
arpl
lock
loopne,pt
cmp
stc
pop
mov
mov
iret
cmp
hlt
xchg
fwait
mov
cmc
or
inc
shll
lods
adc
inc
arpl
lods
xchg
push
insb
adc
je
inc
lods
ss
pop
mov
cmp
pushf
and
fisubl
hlt
xchg
pop
and
fstpt
loop
inc
or
lret
mov
mov
lea
je
ljmp
xchg
xor
xchg
int
pop
and
mov
js
dec
push
cmp
pop
xchg
cmp
xchg
add
push
arpl
pop
aad
nop
push
lret
sbb
or
incb
mov
es
into
add
icebp
jmp
push
ret
incb
and
mov
hlt
jl
pop
daa
shlb
xlat
xchg
jl
repnz
adc
push
sub
lret
xchg
jle
sub
in
ja
cmp
adc
dec
rorl
mov
sbb
popf
pop
adc
sbb
push
fildll
adc
jno
ja
add
pusha
cmp
push
adc
icebp
in
in
and
cmp
or
add
fisubs
adc
adc
or
push
mov
jecxz
inc
push
inc
mov
adc
out
scas
dec
loop
mov
es
movsb
push
mov
push
in
jle
push
sub
cs
sbb
loop
mov
es
enter
fisttpll
loop
dec
dec
cmp
ds
out
mov
dec
mov
sub
lods
inc
fdivrl
aas
dec
movsb
ss
popf
dec
aas
lahf
mov
fs
push
push
and
fimull
fmull
cmp
stos
pop
jle
lret
cmp
dec
cmp
bound
jne
lea
mov
aam
popf
aas
cwtl
mov
mov
push
outsl
dec
int
lahf
inc
loop
out
and
cmpsl
jmp
mov
gs
cld
sbb
loopne
mov
cmp
dec
mov
ja
push
push
pop
xchg
sbb
addb
loope
cmp
lahf
xchg
pop
inc
loope
push
adc
sub
ds
cli
add
sub
lret
in
pop
es
xchg
sub
or
mov
loop
dec
cmc
movsl
adc
mov
in
insb
inc
ret
xorl
ljmp
jecxz
repnz
movsl
or
imulb
add
sbb
and
loop
add
xchg
inc
movsl
adc
lcall
pop
daa
push
stos
xor
pop
movsl
pop
loop
add
in
jno
ss
cmpsl
xlat
dec
push
inc
lcall
pop
xchg
dec
sbb
pushw
mov
ficomps
xchg
and
loope
push
pop
push
ljmp
sbb
xor
sub
cmc
in
mov
mov
sbb
push
enter
or
sahf
sbb
stc
sub
negl
cld
pusha
sbb
ss
gs
push
adc
fadd
cmp
cs
jnp
xchg
and
and
jp
inc
and
xchg
mov
sarb
push
jo
push
add
aam
mov
lahf
out
push
or
cs
les
cs
sti
cwtl
xchg
in
push
fwait
xor
sub
ja
out
loop
enter
aas
loope
mov
leave
pop
push
push
movsl
sahf
push
inc
call
movsl
fistpl
push
xchg
inc
arpl
cmpsl
cmp
ljmp
adc
or
imul
addr16
sbb
add
pop
imul
aaa
mov
push
adc
or
int3
inc
xlat
ss
xchg
add
or
xchg
sbb
pop
sbb
add
fsubs
dec
cmp
movsb
and
lcall
and
push
loope
cmpsl
cmpsl
xchg
xor
adc
add
add
jo
rcll
lods
movsb
mov
insb
lock
xor
fnsave
inc
ror
or
jns
outsb
ja
inc
sub
dec
iret
jae
sbb
mov
inc
movsb
popa
test
xor
sti
or
ja
aam
jae
loop
mov
xor
add
mov
loope
cmc
inc
pop
fadd
push
sbb
sbb
daa
shlb
mov
mov
mov
add
add
xchg
cmpsl
out
icebp
fcoms
and
ret
or
push
mov
sub
sbb
add
mov
mov
cmc
push
pop
insb
push
cmc
arpl
dec
sbb
inc
loop
or
sbb
je
lock
xor
shlb
sbb
fcomps
rol
ret
stos
movsl
dec
xchg
pop
lock
sbb
mov
cmpsl
or
fwait
mov
or
push
mov
inc
jo
lcall
pop
scas
inc
jo
das
pushf
or
dec
jns
xor
mov
jo
and
in
mov
mov
cmpsl
repnz
test
mov
repnz
fistpll
rep
stos
les
fisttpl
and
and
notb
cmp
movsl
ds
fistpll
lret
ficomps
les
sub
lcall
fwait
mov
fsubrp
inc
cmp
sub
mov
cmp
pop
adc
cs
bound
cmp
add
outsl
movsl
jne
sub
lahf
out
and
mov
pop
sbb
lret
stos
push
fiadds
jno
popf
fistps
out
xchg
ret
mov
and
xchg
sub
xor
sbb
xlat
js
cmp
xor
das
aad
and
mov
insb
pop
jp
imull
lahf
mov
jmp
fmull
xchg
xchg
inc
gs
xchg
pop
mov
pop
mov
mov
mov
leave
sub
aam
xor
mov
cltd
daa
adc
sub
cmpsl
mov
push
dec
push
jbe
add
imul
xor
pop
push
loopne
mov
ret
sahf
cmpb
mov
push
int
xor
test
push
cmp
xor
or
sub
or
and
cmpsl
pop
mov
ret
rorb
add
shrb
pop
inc
adc
jo
jns
sbb
imul
daa
sbb
data16
mov
or
hlt
cli
and
mov
test
and
lahf
jecxz
sbb
cmpsb
jmp
cli
mov
add
dec
and
dec
dec
outsl
ret
adc
inc
jmp
pop
mov
dec
int3
and
lret
test
call
mov
pop
aad
sub
or
push
shlb
enter
daa
pushf
or
pop
cmpb
sub
inc
enter
fcompl
mov
fmul
andb
cltd
sbb
and
in
aam
int
sub
sbb
sub
cmp
ljmp
and
mov
add
nop
or
js
repnz
jg
jns
popa
popf
fnsave
ficoms
pop
xchg
jmp
xchg
mov
imul
push
xor
xchg
std
aam
imul
mov
or
sbb
and
push
or
sbb
fwait
xchg
cli
inc
aam
push
andb
cmpsl
xor
cwtl
aaa
movsl
call
adc
dec
xor
cli
sub
push
jns
pop
pop
arpl
push
sub
lret
addr16
nop
arpl
aas
jne
sbb
fildl
sub
add
sub
sahf
add
lcall
out
and
movsb
fidivrs
inc
xchg
mov
outsb
and
lcall
cld
js
movsb
cmc
loop
xor
ss
les
mov
fs
xor
mov
shll
cmp
repnz
sbb
loopne
iret
sbb
cmp
push
lods
ficoml
test
add
and
adc
andb
jbe
jle
dec
cltd
pusha
cmp
notl
sbb
push
ss
movsl
xchg
movsb
ficoms
loop
test
push
jno
pop
ja
xchg
inc
and
mov
push
cli
out
sbb
pop
lret
or
xlat
mov
xchg
hlt
test
lret
fdivrs
rcrb
mov
ret
in
ret
rcr
pop
movsl
or
jmp
xlat
fisubl
mov
movsl
roll
jbe
dec
ljmp
jbe
mov
xorb
cmpl
push
push
addl
out
das
xor
aaa
js
xchg
mov
nop
jge
shr
notl
xlat
xor
aam
ljmp
sub
lret
imul
test
cli
cli
add
inc
rclb
mov
cmp
das
mov
sub
divb
push
cs
adc
orb
scas
aaa
clc
ret
sbb
sub
es
clc
and
or
inc
notb
negb
ja
and
jbe
ljmp
cmp
out
cwtl
xor
rcr
aad
out
inc
xor
scas
dec
or
lahf
enter
sbb
or
pop
xor
lds
inc
out
pop
rcrb
jg
sbb
cmc
mov
sbb
lcall
leave
xchg
add
adc
lds
gs
mov
inc
sbb
dec
push
call
cmp
jo
mov
cltd
sbb
inc
sbb
mov
sub
mov
cmpb
popf
adc
and
mov
cmp
jmp
test
inc
inc
mov
int
sbb
mov
nopl
repz
lret
cmp
lock
pop
inc
cmp
das
notb
shlb
lds
gs
adcb
ljmp
repz
insb
add
mov
sbb
lcall
inc
and
cmp
movsl
and
xor
or
jne
xchg
dec
sbb
outsl
fisubl
orl
jge
mov
jno
int
das
pop
dec
sahf
dec
xchg
cmc
inc
aas
lcall
lahf
jne
inc
pop
jns
dec
lret
xorb
scas
sub
ret
dec
cli
fwait
hlt
jns
xchg
lahf
and
daa
sbb
xchg
mov
mov
repnz
nop
sub
enter
push
jge
mov
outsb
dec
xchg
cmp
push
sbb
pop
xor
xchg
jp
pushf
xor
dec
mov
push
sbb
lahf
add
std
pop
sbb
leave
subb
jnp
fistpl
int3
sbb
jp
clc
cmc
sub
sbb
arpl
dec
jae
dec
pop
mov
imul
dec
orb
cmp
push
fldt
outsb
xchg
stos
sbb
jg
adc
inc
or
mov
out
nop
scas
fsubl
dec
fildll
aam
jns
jne
push
dec
pop
and
lcall
es
ret
mov
mov
icebp
or
pop
movsl
sarb
hlt
xor
inc
push
mov
jbe
bnd
and
xor
shl
sub
inc
jns
enter
ljmp
mov
sbbb
int3
push
shl
push
jo
pushf
sub
sbb
clc
jl
jo
jecxz
push
inc
rcrb
xor
ja
pop
dec
lods
ds
pop
std
and
fildl
enter
test
iret
inc
dec
idivb
lret
and
out
mov
and
xchg
es
lahf
fldenv
insl
xorb
jne
add
ret
dec
and
sub
mov
testb
mov
xor
imul
sbb
lods
lea
adc
inc
inc
sub
add
jo
xor
int3
and
mov
into
pop
and
add
outsl
pop
mulb
xlat
xchg
aam
push
inc
pop
dec
ret
not
push
daa
movsl
or
int
or
fidivrs
adc
movsl
or
xor
adc
pop
ja
fsubl
test
sbb
adc
fcoms
pop
mov
or
lret
dec
jo
jl
fldt
lods
mov
fcomps
mov
aaa
repnz
sub
inc
cmp
xchg
push
push
std
push
iret
mov
xor
pop
mov
ja
js
and
add
cmp
push
push
mov
dec
andl
add
cmp
sbb
inc
sbb
sbb
push
lcall
sub
orb
mov
sub
int
xor
mov
loope
sbb
push
push
clc
ficoml
pop
sbb
shl
xor
in
dec
das
or
jne
inc
stc
inc
push
pop
test
sub
sub
arpl
push
dec
dec
mov
or
xor
and
inc
sub
sbb
sbb
add
lcall
xor
xchg
mov
data16
scas
jp
sti
fsubrs
push
mov
adc
fcompl
push
and
in
sbb
push
sbb
pop
push
mov
mov
or
jns
sub
outsl
inc
xor
add
pushw
pop
je
test
dec
je
inc
fsubs
inc
call
pop
xchg
xor
sub
push
fmuls
bound
shrl
cmpl
rcl
aas
daa
sbb
repz
sub
push
xor
inc
xor
mov
rclb
mov
lcall
cmp
jo,pn
clc
cmpsl
inc
daa
into
popf
ljmp
mov
das
rol
ss
fldl
shl
push
in
bnd
mov
xchg
cwtl
jae
cltd
adc
leave
mov
push
sub
cmp
xchg
nop
pusha
xchg
and
inc
insl
fsubs
push
aaa
lods
lea
jp
dec
xor
sahf
mov
cmp
push
fwait
leave
jmp
loop
gs
sub
dec
dec
cmpb
inc
cmp
xchg
cmc
sub
push
mov
add
cmp
and
sub
inc
pop
cmpsb
shrb
popa
aaa
push
mov
adc
in
pop
mov
out
jb
cmp
out
sub
push
cmp
fldt
add
mov
xorl
into
imull
mov
sub
imul
inc
lret
sub
mov
outsl
cmp
push
jg
ret
fcomps
movsb
imul
in
push
push
rorb
xor
repnz
sub
xor
or
cmp
inc
rclb
mov
mov
xor
mov
and
outsb
adc
xchg
jae
jb
push
movsb
fsub
sub
ficomps
clc
ret
jbe
lcall
js
fdivs
and
jg
mov
dec
flds
in
cmp
xchg
pop
inc
xchg
outsb
sub
mul
outsl
gs
lcall
and
pusha
dec
addb
sub
sbb
lret
or
mov
push
jl
sub
mov
add
xor
inc
inc
mov
imull
stc
out
inc
push
test
dec
divl
push
jb
xchg
sub
iret
adc
repnz
pop
jno
cmp
cli
mov
mov
sub
lret
add
add
popa
cli
add
insl
inc
pushf
inc
call
mov
popf
pusha
pop
daa
std
or
push
or
adc
pop
out
movsb
pop
xchg
inc
add
sbb
cmp
sbb
or
in
inc
cmpb
ds
adc
xor
push
jg
aaa
inc
push
sub
andb
xor
cmp
xor
pushf
addr16
or
inc
push
pop
out
lar
push
int
fidivrl
sbb
sub
aaa
iret
inc
imul
add
pop
inc
addr16
imul
hlt
fnstcw
mov
sbb
jp
fildll
sub
adc
mov
stc
add
insl
sbb
inc
jno
sbb
xor
imul
gs
mov
es
sbb
int3
xor
movsl
out
jns
cmp
mov
push
jle
sub
xchg
xchg
xor
test
mov
scas
adc
pusha
xor
add
xchg
jmp
pop
jp
sahf
stos
xchg
add
sbb
fwait
repnz
pop
adc
loopne
repnz
fmuls
pop
cmp
insl
jo
sti
xor
cmpb
fldl
test
inc
xor
mov
cltd
cmpsl
popf
sub
mov
cli
xchg
std
mov
mov
jge
inc
jae
mov
imul
sbb
push
data16
std
lcall
rcrb
pop
adc
xchg
or
sbb
cmp
jae
xor
rolb
inc
iret
or
xor
iret
mov
jo
push
pop
mov
cmp
in
lcall
inc
daa
insb
fsubl
lret
insl
mov
loop
sub
pop
sbbl
xchg
jns
outsl
or
push
mov
cmp
rorl
dec
lcall
pushf
adc
ljmp
xor
inc
fs
sbb
inc
mov
aam
push
imull
xchg
insb
adc
push
dec
aaa
xor
pop
sub
cmpsl
add
bnd
mov
sbb
clc
mov
daa
jb
and
fnstenv
and
imul
stos
push
jp
dec
popf
jge
pop
inc
out
sbb
lcall
mov
je
mov
aad
std
push
ffree
ja
ret
test
add
jl
je
push
aas
pop
jbe
clc
mov
mov
pop
test
faddl
rorb
insl
stos
mov
pop
add
mov
and
popf
loope
or
shlb
mov
push
cmp
pop
add
mov
xor
add
pusha
icebp
fistpl
jno
dec
mov
aas
insl
ss
push
rol
sbb
cmp
fisttpl
cmp
push
xor
sub
or
imul
pop
into
ret
cmc
xor
fisubrl
xchg
outsb
cmp
and
add
mov
sbb
popa
xor
or
insl
aam
adc
mov
dec
xchg
cmp
es
add
xor
mov
push
icebp
push
lret
pop
lret
cmp
movsl
fstpl
movsb
sub
mov
rcll
sbb
push
or
xor
imul
and
mov
fldt
push
dec
mov
sub
mov
xor
addl
cmp
into
sub
mov
xor
jo
fsubrl
je
lret
mov
cmpsl
out
pop
nop
cltd
bnd
mov
push
test
lcall
or
loop
inc
repnz
xor
idivb
mov
cmp
sub
adc
mov
sbb
sub
sbb
xor
jge
popf
push
mov
imul
adc
test
push
mov
test
push
and
sbb
movsl
hlt
dec
fisttpl
jb
and
and
aaa
cwtl
push
popf
cmpsb
dec
mov
sbb
adcb
test
daa
jne
add
fwait
mov
popf
push
sarb
sbb
fcmovnu
fdivl
test
sahf
jne
dec
sbb
dec
and
dec
push
imul
ret
mov
xchg
hlt
cli
jecxz
pop
jecxz
mov
call
sub
sbb
mov
mov
in
aaa
das
sub
mov
cmpsb
jmp
cmp
xorl
loopne
in
daa
push
and
jge
cmp
sbb
add
inc
ficoml
push
push
cmp
dec
jns
daa
push
dec
addl
add
cmp
cmc
cli
nop
out
push
adc
jno
jae
dec
mov
mov
push
inc
jbe
mov
xor
int3
pop
lret
pop
inc
add
and
and
inc
xchg
and
cmp
pop
mov
xor
ds
icebp
sub
jl
lock
sbb
push
sbb
sbb
and
mov
cmp
push
cltd
cmp
pop
js
movb
movsl
repnz
pop
outsb
pop
lret
popf
outsb
rclb
jmp
add
stos
jge
mov
pop
sub
cmp
icebp
gs
and
test
cmpsb
pop
imul
pop
inc
cmp
hlt
cmpsl
bndldx
dec
push
es
pusha
dec
lcall
adc
dec
xchg
jo
xor
and
iret
cld
mov
fwait
adc
aaa
push
jno
cmp
outsl
push
lods
pop
outsl
mov
cmpsb
movsb
xchg
pop
push
and
mov
lahf
leave
subb
fidivs
mov
push
inc
and
mov
pusha
lahf
sbb
aam
mov
test
mov
xchg
inc
pop
sahf
sbb
cmp
es
aaa
push
sub
push
aas
cld
and
sub
andb
cmp
jp
ret
mov
mov
adc
jo
sub
ficoml
mov
jmp
push
rclb
stos
mov
js
cli
pushf
cmp
test
sbb
xchg
push
pop
and
fs
lret
cwtl
out
dec
mov
insl
sub
insb
xchg
les
bound
dec
jmp
push
xchg
jmp
js
and
lds
push
xor
add
lahf
movsl
mov
pop
pop
cwtl
add
mov
ficompl
xchg
sbb
xor
inc
push
sbb
dec
mov
cli
cmp
push
pop
or
add
subb
es
and
lcall
push
out
cwtl
jnp
mov
cltd
xorb
sbb
aam
insl
out
jbe
cmp
push
je
dec
sbb
cli
add
repz
incb
lret
mov
inc
sbb
std
pop
xchg
push
cmp
xchg
or
mov
cmp
pushf
mov
and
pushf
stos
jmp
pop
mov
movsl
or
mov
nop
and
dec
cmp
push
aam
jb
pop
fstl
rol
push
mov
jns
ret
lcall
sbb
inc
dec
ds
pop
sbb
lahf
mov
pop
push
cmpsl
cmp
mov
cmp
sbb
ja
pop
fiaddl
xor
clc
dec
mov
fwait
mov
dec
push
and
lret
js
mov
rolb
jbe
sub
sbb
jno
nop
and
ds
mov
xchg
and
into
xor
mov
insb
test
in
cmp
ret
push
out
les
mov
mov
cltd
movsl
pop
divb
jnp
fisubs
xor
mov
or
jne
push
insl
cmp
pop
sbb
addl
pop
push
xchg
ficoms
sbb
xor
push
das
cli
outsl
sbb
rolb
test
bound
jae
mov
shr
mov
subb
pop
cmc
imul
sbb
jae
ret
mov
lcall
mov
stos
leave
or
sahf
inc
pop
sti
inc
pop
pop
sub
sub
adc
das
rcr
loop
cmc
pop
and
xchg
lea
pushf
jge
sbbl
scas
dec
push
sbb
add
mov
jnp
bound
sbb
call
push
jo
push
push
testl
pop
fstp
out
cltd
stc
xchg
imul
xchg
and
pop
cmp
xor
adc
push
andb
fldt
cli
jb
out
cmp
mov
stos
and
ficompl
cmp
jns
pop
jp
mov
rolb
xor
cmp
cli
and
or
mov
and
pop
repnz
add
mov
insl
test
xchg
lcall
test
stos
stc
push
es
jne
ret
sub
shlb
cs
test
jb
cmp
stos
cwtl
add
sub
inc
mov
dec
add
idiv
aaa
sub
mov
icebp
movsb
aad
add
jmp
enter
sbb
mov
popf
iret
lods
in
cmp
scas
jne
dec
mov
fsubrp
push
insb
jb
data16
cld
stc
sub
sbb
push
sub
and
push
addb
outsb
scas
push
pop
fsubs
jns
dec
daa
or
inc
xor
ja
repz
dec
nopl
aas
sbb
dec
es
push
dec
mov
inc
pop
adc
and
mov
pop
sti
icebp
test
rcrl
stc
push
loopne
inc
pusha
add
push
xlat
int
or
and
and
cli
movsl
loope
lods
fstpl
mov
and
mov
mov
cmc
sbb
mov
and
pop
clc
push
fst
in
adc
mov
xor
lret
ret
push
sbb
xor
fistpll
xchg
adc
sub
and
imul
adc
mov
cmpl
fbstp
xchg
jno
inc
and
mov
cmp
cmp
sub
adc
pusha
test
cmpps
pop
test
sbb
inc
into
pop
cmc
inc
lahf
sbb
shrl
xchg
aaa
push
insl
xorb
cli
add
pusha
js
fisttps
repz
xchg
inc
add
fsubs
add
int
inc
inc
arpl
sbbb
pop
jne
dec
fmul
out
xorl
jae
arpl
sbbb
and
test
popa
dec
cmp
mov
outsl
les
outsb
ret
cmp
stos
pop
lea
pop
add
sbbb
mov
or
ucomiss
add
loop
nop
sbb
inc
mov
pop
mov
dec
fnstcw
out
cmp
out
repnz
sub
cmpsb
pushf
pop
cmp
inc
jecxz
ja
mov
das
fwait
mov
sub
in
sarb
cmpsl
mov
daa
add
push
rcrl
mov
cmp
xorb
xor
xchg
sub
bound
sbb
aaa
rorb
jmp
mov
out
subb
sahf
and
sbb
movsl
add
add
stos
sbb
cmpb
movsl
aaa
push
push
jle,pt
in
sub
sub
js
daa
mov
sbb
add
fcomps
sub
cmp
sti
sbb
xchg
idivb
inc
mov
jns
fisttpll
jl
cmp
cmp
inc
test
jno
lea
adc
mov
in
mov
lock
enter
xor
lcall
ret
jle
mov
jno
dec
xor
xor
xchg
or
mov
mov
fildll
es
jns
pusha
and
cmp
cld
out
add
cmp
jo
bound
inc
pop
dec
pop
bound
cmp
mov
loop
mov
pop
cld
jae
mov
popf
cli
sbb
cmp
hlt
jmp
xchg
fimull
pop
pusha
nop
fdivl
andb
sbb
jg
sbb
movsb
dec
in
jl
dec
cmp
cs
sbb
mov
popa
add
and
out
idivl
mov
xchg
xor
xchg
test
inc
ret
cmp
adc
arpl
repz
or
popa
sbb
fidivrs
jmp
sbb
pop
adc
fwait
sbb
stos
fdivs
add
sbb
xor
dec
rclb
ss
cmp
inc
pop
fwait
xor
les
jp
sahf
ss
mov
xlat
fidivrl
fwait
sbb
insb
fstps
out
and
movsb
daa
adc
les
mov
xchg
pop
and
loopw
sbb
mov
test
mov
pusha
cs
ljmp
insb
aas
mov
xor
sbb
push
ficomps
mov
dec
pop
fcomps
add
idivl
shrb
jecxz
arpl
add
ss
shlb
imull
sbbb
push
fmuls
mov
add
rolb
ljmp
aaa
add
pop
cmp
sbb
les
dec
imul
push
repz
shlb
es
ss
mov
dec
js
cs
push
cmpsb
mov
jo
test
inc
cld
aas
inc
jg
xor
cmp
addr16
xchg
ficoms
sbb
mov
cwtl
push
mov
and
lahf
pop
cmp
in
xor
and
push
and
sub
jno,pt
and
sbb
cmp
dec
repnz
mov
sub
fcmovnbe
adc
mov
xchg
loop
add
mov
sbb
and
push
cmpb
dec
or
lret
add
xor
or
push
mov
pop
or
jle
dec
jno
fwait
add
nop
cmc
mov
jo
mov
arpl
insb
mov
add
fcomps
xchg
andb
nop
adcb
icebp
mov
shll
lret
xchg
adc
sbb
in
pop
and
ret
push
jbe
icebp
mov
adc
push
jno
and
dec
lret
lock
inc
xor
sbb
cmp
push
cwtl
sub
xchg
rclb
and
xorb
lret
sbb
test
icebp
shlb
or
dec
mov
push
sbb
xor
inc
push
sbbl
mov
sbb
pop
sbb
sbb
and
and
les
cmp
inc
insl
pop
mov
xchg
xchg
hlt
pusha
add
stos
push
or
cmp
and
pop
jmp
stos
xor
cli
and
add
ficompl
in
dec
addr16
mov
iret
xchg
pop
or
pop
js
pop
sbb
jae
jg
mov
sub
mov
jle
mov
push
data16
ss
hlt
test
hlt
popa
inc
hlt
cmp
jp
test
xor
jae
and
push
mov
cmp
sbb
lcall
popa
popf
jmp
ds
add
push
jo
int
mov
jmp
int
sbb
jbe
dec
pushf
inc
or
xor
cmp
sub
popa
add
outsb
ja
push
xchg
add
sbb
shrb
test
cmpsb
xor
jb
push
jnp
lret
pop
pop
push
nop
jno
push
xchg
loope
cs
fisttps
cmpsl
mov
insb
jmp
sbb
dec
push
es
movl
sarl
mov
mov
lret
xor
push
and
jg
rolb
outsl
mov
pop
sub
push
ljmp
adc
push
mov
movsl
add
and
jbe
sub
mov
outsl
je
pop
and
sub
jne
popf
push
cmp
jg
fwait
jmp
movsb
insb
andb
inc
cmc
push
dec
pop
popa
sbb
movsl
aas
in
pusha
or
cltd
xor
arpl
pusha
test
fwait
or
aas
or
jne
add
test
lahf
pop
icebp
test
pop
cmp
xchg
cmp
xor
ret
mov
push
pop
adc
mov
outsl
test
xor
adc
mov
jae
bnd
xor
popf
mov
jns
popf
es
fnstcw
or
push
jnp
mov
rcl
outsb
ljmp
in
cld
add
lds
sub
or
add
ficomps
shrl
test
adc
xchg
mov
fwait
adc
popa
xchg
jp
and
jnp
dec
in
jno
imul
stos
sub
pop
inc
push
adc
adc
add
pusha
jg
mov
aaa
xor
mull
popa
mov
mov
rolb
dec
xor
subb
pushf
cmc
test
je
stos
mov
xor
xor
nop
pushf
mov
pop
lods
shll
mov
out
adc
xchg
xor
clc
push
insb
sub
cmpsb
cmp
cmp
fiaddl
lea
xor
push
xlat
das
sbb
push
cmp
add
fstpl
sub
add
lret
and
ljmp
adc
jb
icebp
or
movsb
mov
aam
inc
and
jle
jmp
cmp
or
in
xchg
movsb
cmp
xor
dec
fstps
fsubrl
add
in
inc
push
cmp
jge
inc
adc
dec
xorb
test
xor
add
xchg
pusha
push
les
push
gs
lods
pop
lcall
js
sbb
cmpsl
xor
pop
xchg
cmp
inc
movsl
jns
test
enter
lahf
xchg
dec
sbb
icebp
shr
dec
insb
xor
dec
clc
loopne
mov
shlb
ja
sub
mov
sbb
cmp
mov
fisttpl
cmp
movsl
and
mov
push
cmp
sbb
sub
dec
lods
movsl
ficompl
cli
popa
push
cli
xchg
js
rorb
negl
sar
negl
int
out
adc
fldenv
setne
cs
xor
xor
ss
pusha
andl
and
pop
stos
mov
pop
push
jge
stos
xor
jle
test
pop
jle
xor
mov
xor
xlat
cmp
ds
cmpsb
lods
stos
loop
es
popf
dec
cmp
sbb
inc
jle
test
pop
jge
inc
daa
cmpsb
inc
sub
popf
adc
mov
ret
jp
inc
and
cmpsb
aad
outsl
sbb
cli
or
ljmp
pop
jnp
lret
inc
lods
jg
movsb
mov
cmpsl
add
cmpsb
inc
push
adc
sub
movsl
mov
je
sub
pop
rcrb
xor
js
ret
xchg
dec
adc
push
mov
jp
mov
mov
and
sbb
arpl
inc
inc
int
or
mov
subb
cli
add
sbb
outsb
add
int
clc
adc
add
and
outsb
xchg
movsl
lds
cmp
fistl
push
pop
jle
sbbb
sbb
jl
adc
ljmp
and
push
outsb
cmpsl
and
xchg
push
inc
push
push
ss
push
mov
jno
dec
daa
imul
pop
dec
nop
pop
jbe
add
and
pop
xchg
sbb
push
ss
sahf
lcall
dec
mov
fwait
mov
nop
mov
adc
imul
mov
push
dec
mov
dec
mov
loopne
xchg
sti
icebp
inc
mull
jmp
or
push
pop
or
cltd
jns
xchg
mov
inc
inc
loop
std
mov
daa
xor
test
in
and
cwtl
fdivrs
xchg
jmp
rcr
sbb
or
insb
cmc
pop
das
sbb
and
jnp
cmp
and
mov
add
and
inc
in
inc
mov
aas
hlt
jecxz
inc
mov
adc
xor
fsubs
sub
jbe
xor
cmpsb
adc
subb
sbb
jae
and
xor
inc
test
cs
mov
mov
and
ret
sbb
cmp
adc
jo
fwait
sub
dec
push
aaa
xor
fsts
jmp
push
and
lret
fcompl
cltd
fsubs
es
aas
pushf
test
cltd
dec
imul
cmp
pop
jae
cs
jle
cmpsb
inc
mov
loopne
mov
cmpsb
fcoml
pop
repnz
ja
mov
lret
out
pop
cmpsl
add
in
sbb
jle
aas
and
sbb
mov
add
loopne
pop
popa
pop
mov
adc
or
lock
add
les
les
fmul
push
sbb
jb
scas
inc
in
outsb
repnz
popf
stos
aam
test
loopne,pt
xchg
adc
fbstp
jp
pop
lcall
mov
mov
movsb
lahf
xchg
sub
inc
es
cmp
mov
mov
ret
and
mov
in
push
cmp
sbb
xlat
and
add
push
pop
into
ljmp
rcrb
sub
mov
sbbl
les
insb
sbb
push
mov
jae
cmp
les
ret
lcall
popa
movb
cmp
mov
jnp
shlb
cs
aad
lcall
cs
and
sub
inc
push
in
je
xor
stos
pop
pop
adc
insl
mov
lock
add
push
xchg
cmp
cmp
aas
mov
push
xchg
push
loope
lea
ljmp
test
pushf
test
xor
add
nop
je
jo
sub
leave
xor
stc
iret
sub
sbb
mov
push
sbb
lea
push
pop
pop
icebp
sbb
cltd
imul
pushf
sbb
mov
or
ljmp
scas
inc
jo
call
pop
mov
sbb
movsb
iret
je
push
addr16
loop
cmp
insl
dec
xchg
or
rcrl
pop
mov
mov
or
test
jo
ret
cmpsb
cmp
cmp
jp
shr
bound
inc
insb
cwtl
ds
push
aaa
sbb
daa
dec
pop
das
sub
fdiv
pop
cmp
xchg
addb
sub
push
xchg
sbb
es
stos
insl
enter
mov
lret
jle
mov
cwtl
bound
mov
adc
ljmp
cmp
push
fldcw
push
mov
cs
push
frstor
lret
negb
cmpsb
and
out
sbb
out
pop
lea
cmp
and
xchg
jne
push
outsb
fs
cmp
cmp
pop
xchg
sahf
xchg
mov
push
inc
insl
insl
gs
mov
or
push
push
xchg
mov
pop
daa
test
xchg
sub
push
lret
pop
cli
enter
aaa
ret
add
test
into
mov
dec
cmpsl
dec
lcall
xor
push
or
sbb
push
inc
push
mulb
sbb
inc
sahf
pop
xor
test
das
jle
sbb
and
push
pop
cmp
mov
jne
pop
insl
test
fsubs
sbb
les
mov
rorl
scas
and
shlb
add
jmp
sub
cmpsb
push
ret
jmp
sub
loopne
fldl
outsl
sbb
xor
arpl
jl
gs
sub
dec
xchg
pusha
jns
imul
add
fsts
stos
cli
sub
jo
es
mov
movl
xor
movsb
xchg
sbb
add
imul
movsl
sahf
jae
mov
sbb
imul
bound
out
pop
mov
cs
and
test
inc
xor
movsl
sub
pop
sahf
mov
andl
fisubl
adc
das
hlt
mov
pop
adc
sbb
jp
push
add
sbb
push
mov
push
pop
inc
lods
stc
xor
cmp
pop
sub
and
pop
sbb
ja
loop
and
les
mov
shlb
insl
movsb
fwait
cmpsl
add
mov
aam
mov
sub
xchg
cld
popa
popf
int
cs
arpl
push
jae
xor
stos
lcall
jnp
xlat
andb
inc
inc
cwtl
and
add
shr
sub
cs
sahf
bnd
dec
xchg
pop
cmpb
inc
pusha
loop
mov
xor
cltd
pushf
arpl
jp
stos
adc
ljmp
inc
pop
xor
ret
sub
lahf
jp
decl
mov
lods
jge
subb
pop
mov
mov
cvtpi2ps
addr16
ljmp
cwtl
iret
push
sbb
inc
stos
pop
cmpsl
dec
lret
pop
dec
bnd
lods
out
cmp
inc
jbe
add
and
bound
cwtl
daa
sub
cmp
pop
mov
push
insb
arpl
ss
push
and
jg
mov
mov
test
add
dec
sbb
ror
mov
fwait
jmp
fistl
lahf
es
inc
jno
loope
test
sbb
sbb
pusha
jge
jmp
pop
xor
mov
cmp
sbb
bound
das
xchg
cltd
sbbb
adcl
jae
daa
mov
mov
mov
cli
mov
outsb
sbb
cmp
or
into
inc
adc
sbb
dec
jecxz
fisubrl
sbb
mov
test
mov
push
imul
and
jae
or
add
iret
inc
fmull
scas
outsb
mov
dec
shll
outsb
push
repnz
pop
rcrl
xchg
push
inc
cmp
test
inc
lcall
sbb
mov
sbb
xchg
dec
sbb
jb
stc
sbb
fs
add
push
push
in
xchg
out
mov
sub
and
frstor
dec
fwait
sbb
mov
js
lahf
jb
loopne
hlt
pop
shll
xor
sub
mov
xor
mov
cmpsb
sub
jecxz
xchg
out
inc
scas
iret
adc
loopne
fisubrs
xorb
imul
inc
popa
aas
push
jmp
iret
sub
test
pop
inc
jo
xchg
xchg
and
shll
inc
cmpb
iret
xchg
pop
pop
cld
xchg
pop
and
pop
rcrl
mov
push
jmp
dec
insl
cli
sbb
sbb
mov
push
aaa
lret
std
cmp
add
xchg
mov
loop
roll
enter
xchg
jo
and
test
sbb
repz
test
inc
xor
icebp
sbb
push
cmp
mov
pop
mov
jno
push
fnstenv
or
lds
push
xchg
push
popa
sub
cmp
push
faddl
fldt
mov
push
andb
cmp
cld
sbb
pop
sub
sub
in
mov
inc
mov
cmpl
lock
jp
fidivl
ljmp
cld
cs
and
test
sub
pop
and
aad
pop
loope
or
jge
ds
repnz
js
push
sub
test
cmp
fldenv
mov
inc
cwtl
cld
sbb
and
jp
div
jno
pop
xor
sub
mov
enter
nop
mov
push
sahf
jle
fmull
and
xchg
testb
pop
cmp
sub
dec
dec
sti
cmp
pop
sub
pusha
fwait
loope
mov
testl
enter
test
fwait
loopne
inc
fwait
testb
popf
cltd
jnp
daa
mov
fildl
and
sub
mov
mov
mov
cmp
add
lcall
inc
add
aas
lret
sub
sub
add
sub
shl
sub
sub
lret
push
je
and
lods
into
stc
addb
sbb
sub
jnp
inc
cmp
add
fisttpll
sbb
ss
inc
in
dec
mov
and
jecxz
mov
dec
xchg
lea
inc
jecxz
adc
and
sahf
pop
pop
jg
loopne
pop
lahf
movsw
and
pop
mov
mov
xchg
jne
push
adc
add
push
xchg
xor
xchg
cmp
inc
stc
jb
xor
bound
and
sbb
sbb
cmc
add
loopne
rolb
das
sub
loopne
mov
fisubl
fbld
rcl
lcall
jnp
ficompl
into
dec
mov
xchg
movsb
jle
fcmovnbe
cmpsb
push
outsb
test
sbb
inc
adc
pop
inc
dec
mov
push
mov
fimull
adc
xor
xor
scas
cltd
out
mov
stos
adc
cmc
and
adc
dec
mov
cmp
pusha
adc
inc
sub
repnz
cmp
ss
test
mov
pop
insl
cmpsl
fisubrs
xchg
lahf
jmp
cmpsl
test
jle
fdivrl
xor
cmp
sub
mov
or
movsl
mov
lahf
xlat
pop
andb
dec
jnp
pop
and
dec
cmp
inc
push
sub
adc
pop
cli
mov
pop
adc
mov
add
dec
mov
push
clc
xor
fmull
sub
inc
and
imulb
fs
mov
cltd
sub
clc
xor
push
hlt
ljmp
mov
adc
nop
jns
inc
cmp
loope
cmp
adc
cmp
push
mov
mov
xchg
jle
imul
add
in
jl
cmp
stos
inc
push
lea
jno
lods
inc
adc
inc
cmp
outsb
data16
pushf
jnp
sbbb
data16
jne
add
lea
sahf
jo
sbb
mov
pop
cmpsl
xchg
xorb
pop
sub
leave
lret
sub
jne
imul
push
lea
mov
mov
xorl
push
cltd
int
mov
rcrb
pop
out
sub
pop
mov
push
xor
test
sbb
mov
call
aas
stos
cltd
mov
push
adc
outsl
lds
sbb
mov
xor
mov
es
fstp
pop
sub
mov
mov
lcall
popa
push
orb
pop
stc
sub
fists
pop
mov
repnz
movsl
pop
jne
dec
dec
stos
vpcmpgtw
cmp
xor
pop
jle
out
sub
sbb
cmp
cmp
push
dec
rorl
les
shlb
dec
outsl
sbb
mov
inc
add
or
test
lds
push
push
inc
or
inc
cmp
xchg
add
push
add
and
mov
dec
mov
shll
sbb
sbb
mov
mov
mov
inc
sub
mov
cs
and
xchg
bound
and
lea
jecxz
pop
iret
movsl
inc
xor
cmpsl
mov
ret
jne
jmp
mov
adc
add
or
push
sbb
aaa
add
inc
out
sbb
mov
mov
bnd
dec
ss
cmpsb
xor
in
xchg
push
push
jne
test
fcom
scas
daa
mov
sub
mov
movsl
and
cmp
js
int3
inc
add
sub
sub
sub
xor
je
sbb
hlt
sbb
adc
andb
sbb
stc
ret
lods
pop
dec
add
adcb
mov
xchg
lods
or
std
xor
mov
mov
ja
addb
sub
ficompl
repnz
cmp
sub
xor
pop
test
fucom
push
add
test
jl
mov
sub
and
sbb
jl
and
and
push
pop
ja
sub
sub
lret
jae
mov
add
adc
outsl
push
cmp
iret
lret
pop
insb
sahf
stc
lea
push
call
push
fisubl
mov
mov
pushf
pop
mov
icebp
ret
pop
rorb
add
mov
pushf
sub
xor
sub
sub
xchg
fsubs
and
and
insl
out
repnz
xor
cmpsb
mov
int
ficoms
xchg
push
push
test
and
out
cmp
in
mov
fildll
sbb
mov
inc
lret
xchg
dec
inc
xchg
pusha
into
xchg
xor
jle
ret
inc
push
xchg
mov
mov
cmc
inc
mov
xchg
loopne
jns
mov
addr16
lcall
or
and
or
push
ja
fldenv
data16
dec
les
loop
push
mov
cmpb
cmp
dec
mov
andb
or
arpl
add
xchg
xor
jecxz
negl
push
add
mov
scas
in
aaa
imul
push
add
inc
push
xor
sub
mov
jnp
mov
xor
shlb
or
jmp
and
jle
pusha
outsb
xchg
inc
inc
add
andb
insl
inc
and
aas
dec
sub
inc
inc
mov
xchg
hlt
test
adc
and
sbb
inc
and
repnz
mov
add
xchg
mov
xchg
mov
pusha
lret
xchg
inc
das
test
xchg
aas
pusha
mov
cmpsl
xor
xchg
inc
mov
push
pop
add
and
or
jmp
test
jg
out
add
inc
shlb
mov
test
xorl
insb
ss
mov
jle
punpcklwd
cli
xor
push
mov
xor
aas
mov
xor
sub
adc
fimuls
sub
rcll
mov
xor
idivb
movsb
jb,pt
mov
xor
js
in
sbb
xchg
shld
scas
xorb
jecxz
dec
out
dec
push
jecxz
dec
mov
dec
movsb
dec
inc
jecxz
push
pushf
pop
add
lods
inc
jle
subl
andl
push
xchg
dec
fiadds
pop
xchg
jns
icebp
loop,pt
jmp
lahf
inc
push
inc
dec
data16
fisubrl
pushf
mov
sahf
loop
mov
jnp
adc
xorl
sbb
cmp
insl
add
sub
cs
ficomps
and
xlat
inc
cmp
dec
ds
mov
pushf
mov
and
imul
push
mov
mov
js
mov
in
lods
stos
jecxz
xor
inc
mov
pop
jmp
xchg
ds
das
dec
adc
fisubrl
add
xor
ljmp
data16
sbbl
pop
push
xchg
jb
add
pop
loop,pt
jmp
into
pop
mov
mov
stos
xchg
adc
jno
push
lods
hlt
mov
pop
movsl
push
cs
fbstp
lret
xor
mov
jnp
mov
decb
jbe
in
or
iret
dec
mov
dec
inc
repnz
and
or
xor
ja
add
adc
sub
ss
dec
xchg
xchg
and
xchg
push
call
cmpsl
popa
sbb
adc
imul
scas
lods
add
sbb
mov
aad
pop
sub
fcoms
lock
push
adc
jecxz
mov
incb
insl
mov
xor
pop
mov
xor
incb
sbb
shl
cs
add
ret
jle
or
mov
add
popf
cmp
out
mov
inc
fldenv
xchg
lds
push
push
jbe
mov
outsb
cmpsb
data16
push
xchg
xchg
jno
xchg
dec
add
pop
ds
lret
nop
ret
mov
aas
ss
cmp
pop
loop,pt
dec
push
add
jge
inc
dec
out
and
xlat
sbb
neg
loop,pt
dec
ret
dec
mov
rorb
data16
and
jmp
dec
dec
add
xor
dec
mov
or
pop
popf
mov
lods
hlt
lods
dec
mov
loop
dec
jb
hlt
dec
mov
push
frstor
popf
pop
push
lods
pop
cmp
push
scas
loop,pt
dec
inc
jecxz
push
adc
incb
xchg
push
push
pop
mov
cmp
clc
dec
xchg
adc
loope
jmp
outsl
xor
divl
loopne
push
dec
inc
loop
leave
lods
out
cmp
fidivl
sub
or
fwait
data16
popf
ret
lods
mov
loop,pt
dec
scas
jecxz
push
xchg
inc
push
cmpsb
aas
mov
and
pop
or
jp
adc
xchg
xchg
cli
inc
mov
mov
lcall
inc
pushf
adc
xor
dec
sahf
pop
add
jecxz,pn
dec
push
addr16
xor
add
stos
cs
and
nop
cmp
xchg
les
movsb
movsl
pop
mov
in
sub
loopne
adc
in
adc
mov
inc
push
jp
or
and
fldt
adc
jae
cmpsb
cmp
lret
pop
repnz
inc
pop
shlb
sbb
popa
sub
mov
push
sub
jl
stos
dec
sub
jb,pt
push
mov
mov
lds
jno
jmp
cwtl
and
popf
nop
mov
jnp
data16
and
add
dec
mov
cs
mov
sbb
sub
and
jecxz
lret
push
xchg
xor
orl
pop
or
je
adc
es
cld
mov
sti
hlt
mov
jno
aas
mov
sbb
popf
sti
es
sub
lods
and
dec
inc
and
sti
push
or
jns
scas
jecxz
xchg
mov
sbb
lods
je
xor
shll
cs
cs
jecxz
mov
xorb
dec
incb
out
sbb
fwait
sub
sub
mov
ret
jb
ja
xchg
ret
and
stos
popa
mov
or
jp
add
sub
icebp
push
rep
sbb
data16
aam
xchg
ljmp
add
jae
out
mov
jo
iret
push
push
mov
and
adc
cli
outsb
jecxz
jno
sub
int3
sub
push
aam
and
dec
pop
aad
and
stc
mov
pusha
push
add
xor
and
pop
add
sbb
xor
inc
xchg
dec
mov
xor
sub
into
into
dec
sub
idivb
decb
inc
push
mov
push
out
lret
sub
dec
std
xchg
add
push
mov
xchg
insl
add
lcall
or
jno
or
jg
inc
add
loop
mov
mov
pop
xchg
cmp
jb
xor
addb
jae
push
mov
mov
out
cmp
add
xchg
jmp
mov
pop
jg
les
add
movsb
add
ret
fisubl
pop
lret
dec
addr16
mov
orb
rcrb
sub
jle
lahf
mov
push
shll
call
inc
fisubs
dec
cmp
sbb
cmp
add
fs
lods
xchg
lret
xchg
je
lds
cmp
stos
dec
xor
dec
xor
cmp
repz
xchg
sahf
inc
lods
fwait
xchg
xor
mov
and
cmp
push
push
lods
into
cmp
jbe
loop,pt
dec
outsb
jecxz
dec
cmp
bound
adc
mov
cli
lods
mov
loop,pt
dec
inc
jecxz
dec
cmp
cmp
into
xor
jecxz
dec
lahf
and
push
xor
jecxz
dec
in
sub
jge
pop
inc
imul
jp
jmp
adc
adc
mov
es
std
data16
insl
cmp
into
iret
decb
mov
mov
mov
mov
popf
cmpsb
push
jae
adc
xor
popf
xchg
lods
dec
cmp
jle
loop,pt
dec
jb
pop
jno
and
jp
fdivs
add
or
inc
and
mov
inc
mov
dec
mov
inc
and
pop
iret
movsl
sahf
mov
jp
pop
push
add
idivl
push
cmp
jnp
inc
jp,pn
fdivs
arpl
lock
dec
xor
sub
mov
pop
mov
in
push
jne
or
xchg
shrb
stos
dec
test
xor
popf
push
push
fisubrl
bnd
arpl
lods
mov
sub
pop
es
or
push
xchg
xor
cmp
scas
push
ds
adc
sub
lods
sti
cmp
xchg
and
std
int3
and
or
mov
in
mov
daa
xor
jp
inc
loop
sub
xor
lret
push
push
and
dec
xchg
xor
pop
or
popf
lds
scas
cmp
inc
outsl
ds
popa
pop
sub
lods
dec
cmp
xor
loop
dec
and
sub
sbb
adc
pop
pop
mov
lahf
jle
sub
das
pop
jmp
aad
cltd
cmp
pop
and
push
sub
xor
xchg
push
out
jno
pop
dec
inc
fsubrl
jns
lcall
pop
cmp
mov
ljmp
sbb
pop
enter
push
pop
cld
outsb
test
movsl
adc
ljmp
pop
ljmp
movsb
adc
pop
sahf
outsb
mov
nop
addr16
mov
daa
push
cli
push
inc
test
sahf
imul
int3
cmp
fld
adc
inc
adc
mov
or
popa
xchg
ss
ret
cmpsl
dec
jo
inc
lcall
bnd
movsl
hlt
jp
fildl
subl
jnp
xor
push
sub
cs
fs
repz
mov
push
cmp
pop
fistpl
js
add
iret
inc
sub
pop
aad
add
add
sbb
dec
out
xchg
jae
push
pop
out
test
mov
test
jge
xor
shlb
insb
push
mov
shlb
jp
push
mov
sub
outsl
aaa
xchg
popf
xchg
mov
xor
mov
fimuls
lahf
fwait
adc
dec
pusha
mov
call
repnz
add
push
pushf
xor
fdivrp
xor
add
jmp
jne
xor
and
outsb
and
out
and
sahf
sbbl
mov
sub
pop
test
push
jb
xor
ds
loopne
add
jl
push
arpl
push
cmp
aas
xchg
mov
insb
repz
es
stos
dec
pop
sbb
imul
push
xor
cmpsb
or
cmp
sub
lock
add
dec
sbb
and
test
fwait
cmp
push
test
sbb
pop
sbbb
test
push
jno
push
dec
cmpsb
adc
jg
dec
ficoml
adc
lea
cmp
adc
aaa
inc
insb
sub
jp
lods
xchg
cmp
cs
inc
mov
and
or
jns
xor
jmp
lods
mov
and
mov
sti
nop
push
lret
and
test
xor
add
xor
xor
stos
sub
mulb
sbb
movsl
pop
pushf
push
sbb
mov
jns
push
fcoms
pop
or
jecxz
jne
xor
add
daa
daa
mov
push
nop
ja
sbb
pop
fmull
push
push
rcl
nop
jne
xchg
addr16
xchg
push
push
mov
push
cmp
adc
pushf
sub
les
adc
inc
sub
adc
push
adc
and
sbb
push
pop
sbb
dec
dec
jecxz
mov
lret
mov
sbbb
adc
lcall
repnz
inc
inc
mov
push
imul
repnz
or
sub
cld
movsl
cmp
fcomps
push
insl
and
cltd
sub
dec
subb
sbb
inc
jecxz
adc
dec
sub
push
and
scas
dec
xor
jp
sbb
mull
and
sti
xchg
pusha
and
pop
and
sbb
push
movsl
std
into
cwtl
dec
outsl
sti
xor
or
jb
fmul
jg
add
cwtl
mov
imul
pop
pop
lods
push
out
pop
ret
loope
lea
push
test
jb
or
inc
push
add
inc
xchg
mulb
shrb
inc
xor
and
jae
and
inc
fistps
mov
mov
mov
imul
in
repnz
popfw
cmpsl
sub
popf
sub
lcall
adc
add
loop
cltd
test
push
movsl
mov
enter
movsb
cmpsl
mov
push
loope
push
push
pop
xchg
fcmovbe
ret
cmp
cmp
cmp
xchg
push
mov
addr16
xchg
testb
jne
aas
les
mov
pop
dec
ret
push
rorb
sub
jbe
xchg
cs
pop
jge
and
jns
mov
sbb
dec
and
inc
outsl
push
mov
jno
repnz
cmpb
imull
mov
cmp
iret
int
das
and
fsubs
int
adc
xchg
test
inc
pop
pop
repnz
adc
mov
jno
call
fistpl
loopne
lret
orb
ja
sbb
pop
dec
jae
scas
fsubs
ret
repnz
loope
movsb
mov
fucomi
adc
mov
push
lods
and
cmp
add
adc
cmp
sub
jecxz
cltd
push
mov
inc
xor
pop
and
sbb
stos
insb
outsl
push
pop
loop
mov
push
push
fwait
rcrb
dec
push
xor
pop
sbb
cmpsl
cmpsl
and
out
cmp
cld
imul
mov
pusha
aas
js
rorl
pop
sbb
daa
idivb
js
dec
mov
negb
sbb
lret
xchg
pop
mov
xor
mov
fwait
jle
jae
mov
das
pop
jnp
inc
inc
inc
push
or
sbbl
push
out
mov
push
sbb
xchg
lret
xor
or
xlat
and
loop
test
jb
rorb
inc
inc
pop
insl
push
test
sub
pop
xchg
shrb
push
inc
jecxz
pop
iret
cmp
aaa
adc
mov
pop
and
int3
repz
xor
lret
lcall
negl
jo
fbstp
adc
cmovle
cmp
xor
add
flds
and
push
hlt
inc
incb
or
data16
pop
or
cs
sbb
test
ds
scas
sub
pushf
sub
push
cwtl
push
pop
arpl
lret
lret
jmp
loop
inc
loop
sbb
xlat
pop
jno
xor
xor
sub
arpl
daa
lcall
ret
inc
pop
andb
test
mov
aaa
push
movb
xchg
push
mov
out
xlat
inc
and
pop
mov
stc
mov
jne
sub
pop
fdivr
mov
xor
mov
aaa
stc
lret
pop
fwait
leave
mov
or
cmp
notl
cmp
iret
call
jl
frstor
dec
insl
mov
push
and
fiadds
lods
cwtl
sub
mov
cli
arpl
xchg
inc
cld
pop
adc
insb
cmc
and
je
push
push
imul
mov
xor
pop
mov
mov
fsubl
idivb
or
and
sub
cmp
push
push
divb
aaa
xlat
mov
jge
push
int3
insb
sub
mov
sbb
dec
and
push
das
sub
popa
xchg
call
jp
loope
adc
mov
sbb
inc
cmp
test
stos
inc
sbb
push
and
lahf
push
sub
fisubrl
adc
adc
adc
shrb
test
adc
jecxz
sarl
dec
sub
pop
fidivl
pop
stos
ljmp
pop
or
pop
pop
ficomps
mov
push
pop
or
and
pop
scas
sti
lds
adc
xor
pop
push
int
sub
jp
pushf
lods
mov
in
popf
dec
dec
out
adc
inc
inc
sub
insb
xchg
add
lahf
jno
jge
lods
cmpsb
pop
inc
aam
sbb
lds
nop
and
and
jae
mov
fnstsw
push
daa
xor
xor
sub
imul
xchg
sub
xor
push
stc
cmp
adc
pop
lcall
xchg
and
push
fldt
and
sub
lret
cmpsb
mov
sahf
pop
sub
das
jne
push
and
push
adc
sbb
mov
adc
mov
and
jae
dec
sub
mov
bound
sub
push
push
dec
dec
jmp
jge
je
jns
inc
fcoms
dec
testl
push
mov
pop
addr16
and
mov
repz
lahf
dec
ret
adc
adc
mov
adc
dec
repnz
cmp
pop
mov
sub
std
jb
lret
mov
and
sbb
cmp
jecxz
fwait
add
stc
mov
mov
mov
sub
cmp
daa
pop
xor
xor
in
mov
sahf
repz
sbb
or
or
and
cmp
inc
cmp
xor
fstpt
jno
mov
jb
or
xchg
pop
add
ds
add
dec
cmp
cmpsb
adc
push
inc
adc
xchg
and
push
outsl
pop
pushf
call
pop
paddsw
es
ss
fwait
dec
adc
sbb
adc
enter
lret
lret
pop
orb
dec
into
pop
aas
jbe
ss
in
inc
mov
cmp
cmp
ss
insb
mov
xor
pop
cmp
sbb
movsl
push
sti
repz
xchg
cmpsb
sub
mov
sub
sub
test
das
leave
scas
xor
sub
sbb
inc
dec
bndldx
xchg
ss
in
add
sbb
fldt
insl
leave
xchg
cli
insl
jno
inc
mov
ja
cli
aam
mov
rcr
and
add
adc
mov
jge
add
fwait
cld
fadd
inc
inc
pop
mov
pop
ds
push
sbb
jae
fiaddl
cmpsb
and
adc
jnp
sbb
push
jnp
fsubr
out
adc
push
jmp
cld
mov
bound
int
sub
xchg
push
pop
cmp
outsb
fs
cmpsb
inc
std
jno
and
cmp
xor
dec
jae
mov
es
ss
xchg
jno
cmp
cmp
sbb
jo
sbb
push
sbb
popa
or
sbb
add
js
lds
outsl
xor
in
jp
sub
addr16
ret
jge
lods
xchg
add
es
cmp
push
jae
jmp
pop
bnd
cwtl
aas
inc
jae
daa
adc
fstpl
sbb
sbb
idivl
jecxz
rcl
imul
or
mov
sub
jo
xchg
pop
fcomi
ds
int3
sub
mov
cs
xchg
inc
sahf
arpl
stos
test
sbb
push
bound
test
cmp
jmp
ja
flds
fsubp
fmull
cltd
jg
add
sbb
push
cmpb
aaa
push
push
adc
pop
int3
push
sub
lods
push
int3
fwait
adc
cmp
pop
aaa
pop
mov
jge
out
ret
lcall
sub
adc
add
jge
lret
cmp
mov
mov
incb
push
test
addr16
push
pushf
bound
std
mov
lods
mov
xlat
inc
pop
shlb
xchg
inc
mov
repz
lcall
push
gs
ss
in
mov
fstpl
cmp
into
ss
push
mov
adc
test
sub
fimull
jo
mov
push
popa
jg
jmp
pusha
popa
adc
rorb
inc
push
push
andb
sub
lahf
mov
sub
push
push
push
or
pop
popl
adc
arpl
dec
pop
fisubrl
aaa
fildll
shll
mov
sub
xor
and
stos
pop
stos
sbb
pop
or
lds
inc
mov
push
test
pop
dec
addr16
nop
xor
cli
xchg
dec
int3
cmp
jno
mov
push
mov
subb
data16
push
pusha
imul
shrb
inc
sub
lret
stos
imul
add
cs
mov
fnstenv
push
ficoms
and
cs
pop
mov
test
push
aam
dec
jmp
or
add
xor
sbb
xor
lods
cmp
bound
jae
scas
sti
push
cwtl
dec
in
or
pop
and
outsb
popa
loop
sbb
add
enter
cmp
lret
mov
pop
sbb
and
inc
ds
mov
sub
mov
subb
test
aaa
add
arpl
xor
lret
and
add
out
insb
mov
popa
outsl
aaa
into
aaa
jp
lret
into
insb
cli
mov
xchg
sub
mov
lcall
mov
dec
adcl
insl
push
pop
adc
xor
adc
sbb
mov
mov
repz
ds
cmpb
push
push
imul
fisubrs
jle
dec
pop
sub
push
inc
and
sbb
cld
and
scas
inc
lock
or
shrb
sbb
xchg
and
xchg
pop
js
fisttpll
push
es
outsl
jae
repnz
lea
ss
pop
mov
bound
xchg
mov
push
push
stos
imul
push
aad
mov
ja
sub
push
pop
jnp
push
mov
mov
je
js
mov
and
jl
adc
inc
and
push
pusha
lods
repnz
and
lret
imul
aad
add
aad
cmpb
xor
and
sub
leave
mov
sub
aad
sbb
scas
dec
dec
xchg
jo
cmp
ret
inc
and
lods
mov
test
jmp
stos
fsubrl
imul
dec
inc
stc
push
hlt
sub
repz
push
sbb
sub
notl
add
cs
shl
push
popl
xchg
jae
mov
fisubl
adc
sub
and
frstor
push
dec
aaa
mov
fisttpl
ds
dec
sub
and
pop
sbb
lret
pop
jle
mov
lcall
add
pop
in
ljmp
xor
dec
and
outsl
dec
mov
mov
add
lcall
pop
and
jb
sub
push
sub
and
cli
or
xor
insl
into
stos
jne
inc
xor
enter
xchg
nop
test
out
insl
cltd
pop
dec
inc
dec
sub
sbb
stc
jp
jmp
sbb
out
and
enter
fidivl
dec
pusha
mov
mov
sub
xchg
sub
insl
mov
pop
jl
ret
pop
xchg
sbb
xor
sbb
xchg
add
mov
stc
stc
clc
dec
ds
sbb
js
loopne
and
mov
addr16
sahf
addr16
pusha
dec
pop
cmc
push
outsb
jno
arpl
clc
inc
cmp
xchg
fldcw
push
xor
and
mov
fcmovbe
lock
push
inc
std
push
inc
sbb
jo
pop
xchg
dec
sbb
xchg
data16
rolb
and
movsl
lods
cmp
push
sbb
dec
add
fmuls
inc
cs
cmpsl
not
sti
sub
pop
push
mov
xlat
or
cmp
xlat
ss
push
sahf
hlt
in
mov
add
pop
repnz
adc
and
pop
cmp
cmp
clc
adc
and
mulb
sub
and
inc
inc
or
and
lret
sub
cltd
js
dec
lret
cli
sub
lcall
imul
push
mov
cmp
adc
ficomps
rorl
xor
sahf
pop
test
popf
aam
sbb
ds
int3
ds
pusha
ret
cmc
xor
push
jbe
dec
push
mov
mov
add
mov
nop
shrb
lret
add
dec
sub
sub
add
mov
xchg
push
aaa
pop
outsl
daa
ficomps
and
sub
movsl
pop
pop
jns
xchg
sbb
popf
sbb
sub
dec
outsl
js
and
fbld
sbb
xor
jne
nop
inc
xchg
mov
dec
lahf
and
pop
push
fsubr
cmp
dec
inc
pusha
movsb
pop
mov
sub
xchg
push
popa
cltd
cwtl
jae
cmpsl
add
iret
push
lock
sub
movsl
push
and
lock
cmp
addr16
xchg
lcall
stos
sbb
or
xor
jnp
jno
adc
jns
cmp
jge
push
xor
cs
pushf
cld
cmp
push
clc
fst
and
in
xchg
and
adc
les
into
xchg
cmp
lret
sbb
loop
stos
xor
test
sbb
sub
cmpsl
jl
push
sbb
xor
dec
invd
adc
sbb
mov
pop
and
sbb
cmc
fstps
inc
cmpsl
mov
cmpsl
repnz
xor
int3
push
les
loope
push
cmp
mov
mov
js
xor
and
pop
sub
outsl
push
popf
je,pn
sbb
pop
mov
push
lahf
lcall
dec
xor
sbb
lcall
lcall
and
or
andb
aas
setl
mov
xor
pop
inc
pushf
add
movsl
fnsave
inc
stos
pop
push
sub
sbb
pusha
inc
lret
pop
sbb
pushf
xor
xchg
loopne
jae
xor
add
cmp
shrb
push
mov
inc
int3
insb
fildll
sbb
shlb
jb
lcall
ret
jle
sub
pop
adc
inc
adc
cmp
jl
jmp
stos
sbb
xchg
or
sub
cld
jmp
push
xor
cmc
push
or
or
bound
out
fs
sub
pusha
and
cmpsb
idivl
xor
cs
xor
insl
pusha
stc
inc
mov
adc
jo
bound
call
stc
movsb
arpl
mov
dec
mov
pop
sbbl
in
cmpsb
outsl
inc
cmp
pushf
adc
mov
inc
push
jb
mov
push
fbld
lods
repnz
cmpsb
jg
sub
inc
repnz
jmp
out
imul
push
inc
dec
add
pop
xor
inc
fs
mov
and
inc
fwait
jae
imul
jp
xchg
dec
es
mov
aad
push
or
sbb
cmp
bound
xlat
outsb
jg
mov
insl
cmp
push
push
jp
sbb
cltd
adc
and
and
outsl
mov
adc
pushf
dec
cmc
adc
add
inc
mov
subb
cwtl
pop
mov
pop
loop
sar
xchg
test
sbb
outsb
mov
aas
fistpl
jecxz
push
push
adc
inc
outsb
fisubl
jbe
lods
inc
push
ja
aas
add
push
and
adc
add
fisubrl
jp
mov
and
mov
cld
fildl
cmp
sbb
sbb
cltd
ds
jecxz
inc
jl
add
mov
jmp
ljmp
ss
popa
add
das
iret
inc
push
and
iret
sbb
adcb
push
mov
lahf
mov
icebp
jno
and
inc
popa
pop
in
movsl
push
adc
dec
jle
pop
adc
leave
stos
addr16
add
add
mov
xor
cmp
xchg
loop
inc
add
sbb
pushf
sub
cmp
jp
or
jnp
xchg
shll
xchg
sbb
sahf
sbb
ss
lret
popf
jmp
mov
jne,pt
and
push
adcb
add
lcall
loope
out
and
mov
push
daa
push
in
cmp
ss
test
sahf
xchg
sahf
repz
out
mov
sbbl
xchg
andb
std
mov
xchg
cmp
aaa
xor
rol
sbb
mov
out
pop
pop
add
lret
push
mov
sub
outsb
jp
xlat
in
mov
cmp
mov
imulb
push
out
jo
adc
sub
dec
xor
sbb
jnp
or
cmp
jb
push
scas
imul
xorl
xchg
les
cmp
pusha
sub
cli
and
andb
or
cmpsb
sbb
jp
outsb
pop
adc
jmp
inc
lcall
ljmp
out
cmp
pop
push
pop
adc
insb
insb
insl
adc
es
push
dec
push
pop
jg
xchg
fs
xchg
mov
dec
gs
inc
pop
dec
pop
inc
jo
xor
out
sub
in
aas
cs
das
sub
sarb
aas
xchg
push
out
push
pop
popf
xor
sub
xchg
add
stos
sbb
fdivrl
mov
lds
mov
push
mov
add
push
inc
les
sub
and
sub
cmp
dec
jecxz
sub
add
xchg
adc
ds
inc
mov
push
mov
add
pop
jae
lahf
mov
xor
push
sub
inc
pop
rolb
xor
mov
inc
cmpsb
push
inc
fcmovu
pop
mov
mov
and
cmp
icebp
addr16
addb
sbb
or
jp
es
dec
sbb
pushf
movsl
inc
or
fwait
loope
sbb
dec
dec
cmp
out
adc
sub
fldcw
shld
sbb
fildl
stc
das
subb
xor
daa
sub
cwtl
cmp
pop
push
rolb
out
cmp
mov
push
mov
jmp
test
xchg
sbb
dec
xchg
negl
add
fadd
xor
jl
in
cmp
loope
mov
fwait
push
mov
adcb
cmp
int
xor
pusha
add
cmp
cmp
loopne
cmp
or
mov
push
jbe
hlt
dec
or
sub
aaa
mov
ss
pop
sub
mov
dec
imul
adc
cli
repnz
sbb
ret
bound
leave
mov
das
leave
das
sub
mov
popf
cmp
dec
push
push
dec
insb
jl
lods
ja
rclb
enter
and
lret
pop
pop
ds
push
cmp
xor
and
mov
xchg
outsb
pop
gs
push
and
loope
mov
xlat
pop
insb
pop
and
ret
fnsave
sbb
mov
xor
into
xchg
pop
sub
sbb
push
pop
fcoms
sti
and
cmpsl
mov
cmp
lock
daa
and
pop
xor
pop
mov
jno
jns
outsb
dec
jge
xchg
ficompl
sub
cmp
frndint
add
fldt
jae
gs
add
ficompl
fsubl
js
pushl
mov
pushf
cmp
pop
mov
xor
mov
sub
je
lods
sub
mov
notb
scas
test
stc
mov
mov
xchg
test
and
and
fcmovnb
lods
xchg
movsl
or
scas
pusha
sahf
add
iret
jge
and
cld
gs
push
push
push
mov
aaa
mov
dec
add
jno
or
mov
xor
pop
pop
jno
jle
sub
rol
sub
das
inc
ljmp
dec
add
jb
dec
imul
inc
mov
andb
jbe
lods
mov
fcmovnu
cs
or
sbbl
sub
and
out
add
popf
call
outsb
mov
ja
and
xor
lahf
jnp
push
sub
sub
sbb
sar
cmpsb
repz
xor
pop
inc
insl
cmp
ja
mov
daa
scas
add
fwait
mov
imul
sbb
inc
pop
and
jmp
pusha
rcll
jecxz
sbb
inc
lcall
sbb
fildl
mov
add
popf
xor
ret
pop
cmp
mov
push
add
in
mov
mov
sbb
jns
test
push
pop
les
cwtl
add
xlat
out
mov
leave
or
ss
or
sbb
sarb
cs
push
repnz
add
movsb
shll
push
nop
mov
cmp
insl
pop
and
lds
popl
xchg
ja
cmpsb
pop
inc
and
mov
add
sub
xor
dec
sbb
jmp
inc
sbb
scas
mov
jp
xor
xor
dec
pop
outsb
pushf
in
movl
xchg
cltd
pop
js
add
push
pop
test
ret
sahf
cli
insl
dec
pop
push
inc
ret
test
pop
jl
sbb
imul
pop
shrb
sub
loopne
es
dec
divb
popf
popf
xchg
push
jbe
ljmp
mov
imul
repnz
mov
cmp
sub
hlt
cmpsl
push
and
sbb
and
sbb
pusha
pop
jge
lret
ja
pusha
in
inc
xor
cld
jl
sbb
jge
adc
lahf
repz
aam
cmc
push
sub
insl
inc
mov
mov
pop
subb
sub
cmp
and
pop
mov
inc
inc
aas
pop
ljmp
push
jl
lcall
scas
adcb
mov
scas
sbb
fcmovnb
fwait
sub
mov
sub
lahf
loop
cli
adcb
pop
and
xchg
sbb
cltd
pushf
mov
int
xor
lret
jb
imul
and
subb
jle
out
adc
pop
jecxz
lret
push
and
mov
cmp
decl
xchg
xchg
mov
sbb
js
popa
lods
adc
test
jo
sub
cmp
ljmp
jns
add
test
xorl
sbb
lar
cs
add
sbb
xor
inc
das
push
hlt
addr16
daa
and
out
test
mov
jno
les
sahf
or
inc
or
cmc
mov
outsb
jnp
and
xor
enter
outsb
stc
xchg
cwtl
inc
add
pop
xor
dec
insb
outsl
aad
mov
lods
es
push
aas
push
xchg
hlt
movl
fistpl
push
sbb
cs
mov
or
mov
xor
xlat
es
push
xchg
lcall
adc
xchg
add
outsl
xor
sub
sub
cmp
jne
jecxz
outsl
pop
pop
adc
mov
pop
imull
fcomps
adc
test
and
sbb
popf
adc
xchg
or
dec
xchg
imul
jo
push
lds
add
es
sub
inc
pop
and
nop
or
mov
push
outsl
lret
mov
aad
sbb
or
push
add
xchg
addr16
push
xor
push
pop
mov
bound
jo
jp
in
fcomps
push
lods
cmp
cmp
pushf
scas
jmp
popf
test
popf
jbe
mov
sbb
sbb
pop
jnp
and
push
mov
pop
fcomp
sub
xorl
bound
fidivrs
sub
sub
sahf
in
mov
test
pop
sub
xlat
lret
inc
xor
sbb
pop
xor
sub
pop
adc
addr16
ror
sub
or
inc
mov
dec
icebp
not
stos
fs
sub
cltd
mov
frstor
add
xor
ret
or
and
sbb
subl
sub
cmp
sub
clc
sbb
sbb
xchg
dec
pop
xchg
jle
pop
xchg
mov
add
notb
adc
jae
cwtl
xchg
add
out
mov
iret
sqrtps
sub
ja
dec
mov
in
sub
jb
push
fstps
cs
xor
sub
aam
insl
imul
ja
das
cli
rcrb
pop
push
stos
inc
mov
mov
sub
clc
jge
and
and
sbb
xor
mov
lea
lret
outsl
cmc
orb
and
scas
leave
and
test
loope
cli
jno
dec
imul
fnstsw
cli
je
jmp
jns
fisubl
sbb
lret
out
movsl
or
movsb
xor
sbb
loope
mov
inc
out
and
leave
imul
js
lahf
sub
mov
push
sbb
and
sti
movsl
loopne
adc
je
jmp
pop
outsl
or
pop
xor
lcall
pop
jbe
inc
notb
int
lret
mov
xor
nop
and
push
mov
push
xor
sbb
mov
inc
add
adc
jo
dec
jg
outsl
test
or
xor
mov
fimull
mov
add
cmp
lods
cmp
dec
pop
jnp
fldt
outsl
add
and
mov
pop
insb
lahf
xor
cmp
push
fcomps
jge
adc
and
cmp
cmc
mov
and
sahf
mov
xor
sbb
xor
shlb
fs
iret
out
xor
pop
pop
and
xor
mov
daa
pop
jnp
pushf
mov
and
push
int3
aaa
adcl
mov
push
and
xchg
sub
and
stos
das
push
sub
fadd
jl
and
mov
mov
pop
mov
decb
rorl
pop
xor
ret
push
and
rorb
aas
or
mov
jge
push
fisubrs
inc
cmp
push
mov
out
pop
push
pop
pushf
sbb
jbe,pt
fiaddl
xchg
mov
or
sub
sub
mov
push
bound
sbb
sub
popa
lcall
jmp
jae
dec
mov
xchg
sub
adc
mov
popf
xchg
popa
sbb
xor
mov
add
lods
mov
xchg
loop
cmp
lods
mov
xchg
sahf
add
jnp
mov
inc
cmc
pop
push
fwait
nop
rcrl
les
dec
in
jnp
mov
cmp
push
jle
pop
and
xor
rclb
lcall
loop
cmp
inc
fldcw
aas
cmp
stos
shll
sub
insl
cmp
push
shrl
jmp
lahf
mov
gs
test
fcoml
repz
cli
lahf
ljmp
lea
cmp
pop
stos
insl
ficompl
pop
mov
fcmovb
test
shlb
sarl
dec
rcrb
ds
sbb
xor
or
cmpsl
add
outsb
push
mov
insl
insb
in
loopne
jp
sbb
fisubl
cmp
stos
nop
inc
ja
mov
cmp
fwait
test
sbb
cmp
push
sbb
xor
add
mov
fmuls
xchg
pop
push
popf
xchg
xchg
fistpl
in
adc
mov
push
mov
arpl
pop
pushf
mov
sub
sub
cmp
jmp
fmuls
add
lahf
pop
insl
lds
fimull
mov
jns
arpl
pop
and
repz
data16
call
das
sbb
sbb
add
adc
jns
dec
and
cmp
sbbl
and
inc
xchg
fisubl
faddl
fisttpl
and
rclb
repnz
nop
push
lcall
popa
mov
mov
mov
test
cmpsl
pop
push
sub
fstpl
ret
popa
sbb
mov
mov
loope
mov
dec
sub
add
inc
daa
pop
mov
jne
pop
and
loopne
test
push
xor
repnz
sub
testl
and
xor
sub
sub
jno
sub
sub
adc
and
sub
adc
jo
add
and
push
and
adc
sbb
sub
xorb
movsl
push
sbb
icebp
mov
add
pop
jo
fists
adc
pop
aam
or
xor
pop
pop
movsl
int
mov
sbb
add
mov
and
dec
ds
sbb
jne
adc
ds
sahf
jecxz
sbb
pop
shlb
cli
sbb
cwtl
sbb
fisubrl
sbb
lcall
daa
mov
and
cli
jo,pn
sbb
aaa
iret
movsl
daa
sub
push
mov
push
lock
and
aas
ret
insb
nop
fwait
das
sbb
mov
dec
iret
loopne
sub
mov
cs
movsb
aaa
into
test
cltd
cmp
xchg
lahf
jecxz
movsb
push
or
data16
daa
jo
std
push
ret
jne
pop
sbb
mov
push
call
cmp
test
mov
daa
scas
lea
xor
fwait
and
cmp
or
push
daa
cwtl
cmp
popf
stos
js
xor
push
push
lret
mov
inc
jno
or
sbb
in
and
les
mov
loop
and
and
xor
sbb
das
jno
subb
xchg
adc
xchg
xchg
or
pushf
dec
ljmp
mov
das
hlt
sub
ret
cmp
in
rcl
pop
adc
out
xor
xchg
es
stos
fstpl
pushf
out
xchg
cmp
ja
loop
lcall
mov
sub
popa
jle
ret
sub
mov
lds
clc
mov
push
and
ret
les
rcrb
cmp
fwait
out
sbb
jg
xchg
ds
loopne
xor
mov
fildl
sub
pop
pop
shrb
mov
mov
dec
ret
shlb
xor
push
cmp
cmp
pop
cmp
mov
xchg
cmp
lds
and
outsb
xchg
sti
cmp
mov
pop
pop
sbb
sbb
cmpsl
shlb
push
sub
cmp
movsb
fistps
lret
jo
out
jne
scas
adc
xlat
and
sub
sti
movsl
xchg
fistps
outsb
fsubs
dec
and
cmp
test
push
mov
push
bnd
sub
pop
dec
xor
mov
imul
jmp
pop
test
sub
ret
mov
inc
adc
or
cmp
dec
push
aad
mov
cmpl
and
ds
jle
add
cmp
bound
gs
sbb
mov
ss
cmpsb
ret
mov
xor
xlat
inc
mov
xor
sbb
push
mov
scas
cli
lcall
xchg
addr16
sbb
sbb
mov
int3
push
mov
jle
pop
scas
into
push
cmp
repz
popf
idivl
sub
cmc
xor
movsb
sub
in
sbb
mov
push
pop
mov
jae
jne
push
lcall
and
push
fisubl
inc
mov
cmp
and
push
sub
cmp
pop
ljmp
add
inc
and
and
movsl
test
push
bound
and
and
jo
js
and
imul
mov
sbb
xchg
adc
push
cmp
and
xchg
insl
into
and
xor
ja
dec
push
jmp
data16
push
daa
cwtl
inc
popl
pop
mov
mov
sbb
cmp
ja
xor
and
cmp
xor
repz
xor
cltd
sub
outsl
fisubl
aaa
sbbl
push
xor
sbb
mov
jge
inc
pop
pop
jo
mov
push
adc
fsub
pushf
movsl
sti
out
add
and
subl
pusha
mov
dec
frstor
inc
into
out
push
jno
and
and
mov
cli
movsl
and
add
cmc
push
sub
ficoms
fsubs
imul
add
push
xor
push
add
es
push
sbb
dec
jne
movsb
into
sub
cwtl
mov
aaa
mov
pop
cmc
jne
add
ja
sub
mov
push
adc
fidivrs
pop
daa
xchg
out
push
xor
pop
and
fistpl
jnp
pop
inc
xor
mov
cli
add
ret
lods
pushf
cmp
addr16
sbb
ficoml
pop
rorb
add
sub
cltd
movsb
jae
stos
adc
fnstsw
pop
pop
sbb
mov
fistl
sub
push
sbb
lahf
lret
push
mov
xor
push
mov
repz
sti
popf
sbb
mov
adc
sarb
nop
in
cld
pop
cld
add
and
cmp
jns
xor
out
cli
jno
and
divb
xchg
test
push
xchg
jmp
loopne
rorb
and
in
sub
loope
xchg
jnp
gs
popf
or
and
xchg
fnstsw
or
ss
rolb
cmpsl
es
push
lahf
cli
stos
jle
mov
enter
es
rorb
cmp
movsb
pusha
sbb
sbb
test
jae
loopne
loope
lods
out
cmpsl
arpl
aas
xor
jg
mov
stos
cmp
adc
aam
and
sbb
pop
push
orl
fstps
pop
test
mov
and
rolb
push
push
orl
or
adc
jno
and
jbe
sbb
sbb
aam
mov
lret
pop
ret
fs
stos
mov
and
dec
mov
and
cmp
xchg
push
push
and
pop
cmc
std
push
xchg
int
andl
test
xor
inc
and
mov
sbb
sbb
jo
shrb
cmpsl
arpl
cmp
mov
or
stos
jp
dec
ds
nop
or
clc
or
push
pop
je
cmp
out
sbb
incb
dec
push
icebp
and
lahf
xorl
subl
sub
and
mov
cmp
pop
inc
sbb
xorl
sbb
xchg
stos
mov
out
sbb
movsl
jecxz
mov
popa
rcll
sbb
fxch
dec
and
mov
push
jnp
aas
push
and
mov
sbb
je
add
sub
addb
cmpsl
mov
in
idivl
test
jmp
pop
fisttpll
fdivl
adc
pop
roll
pop
dec
jne
sub
lock
fdivs
add
jecxz
repnz
out
xor
and
pop
and
ficoml
sti
sub
push
insl
pop
or
sbb
in
jne
mov
popf
push
push
les
push
pop
cwtl
sub
shlb
sbb
adcb
popf
stc
sub
cmp
jp
mov
shr
das
push
mov
sbb
movsl
or
mov
into
pop
sub
mov
jne
roll
push
scas
mov
sub
push
mov
jbe
ljmp
pop
pop
and
movsb
mov
adc
sub
stos
mov
xchg
push
inc
sbb
jbe
cli
cmp
push
xor
aam
stos
mov
add
push
mov
and
and
jno
xor
xchg
jne
push
cli
ljmp
jno
and
and
cmp
xchg
jns
shrb
or
or
inc
sub
stos
fistl
mov
dec
xor
xchg
mov
add
dec
movsb
faddl
sbb
rcrb
es
stc
loope
pop
adc
sub
sti
ret
stos
pop
fsqrt
push
ret
dec
pop
xor
mov
fimull
clc
inc
add
cmp
pop
nop
dec
add
lahf
fidivl
xor
dec
shl
loope
and
sbb
jb
mov
popf
or
or
jmp
jns
xor
mov
add
inc
push
rcrl
inc
push
adc
ds
test
or
pushf
pop
cmp
test
and
mov
adc
or
sub
aam
sbb
sbb
xor
ret
xor
mov
sbbl
shll
mov
sbb
leave
and
daa
in
out
xchg
add
add
add
jp
fdivl
iret
into
jns
int3
jle
xor
popa
jl
or
addl
jae
push
sti
dec
pop
dec
stc
insb
inc
popa
lret
addl
adc
test
sub
scas
subb
push
stc
cwtl
xor
sub
sub
jle
dec
in
mov
inc
cmc
fcmovnu
and
jecxz,pt
dec
push
and
pop
lret
out
sub
pop
iret
xlat
mov
fwait
add
and
sbb
mov
fdivp
movsl
push
cld
pop
push
push
cmc
movsl
sbb
sbbb
pop
and
jno
cmp
xchg
dec
sub
pop
pop
sbbb
daa
push
ds
xor
cmp
negl
cs
dec
xor
sub
xor
add
fs
sbb
jo
jmp
fstpl
cli
xchg
cmp
shll
push
xor
xchg
aas
mov
stc
dec
mov
xor
mov
dec
cmp
out
aas
sub
nop
dec
jnp
idivb
inc
push
test
hlt
or
jo
pop
sub
decl
pop
mov
cmp
jo
cmp
mov
les
sub
jo
push
mov
sbb
pushf
cs
xchg
sbb
jns
xor
cwtl
in
jo
push
and
pop
add
pop
and
dec
push
jne
mov
sub
gs
sbb
orl
jns
leave
fstpl
repnz
adc
jmp
bound
sbb
cmp
ljmp
ret
xchg
sub
addr16
pop
repnz
dec
jb
jno
inc
push
addr16
pop
adc
sbb
dec
dec
xchg
dec
lcall
cli
mov
lcall
out
cli
mov
popa
push
insb
test
popa
pop
and
sub
mov
sub
ljmp
test
xor
xlat
and
xor
jns
addr16
fisubrl
cli
movsb
sbb
int3
adc
sbb
xchg
add
lahf
lahf
jecxz
fdivl
or
js
insl
test
in
adc
and
mov
addr16
imul
mov
pop
dec
jbe
bound
mov
sub
jge
insl
pop
sbb
or
and
es
and
xchg
pushf
cmp
dec
xchg
xchg
pop
movsb
cmp
mov
rcr
in
clc
xchg
popf
addr16
pop
cmc
daa
inc
and
xor
aad
pop
sub
sub
adc
sub
push
sbb
mov
xchg
inc
ret
pusha
dec
xor
push
xchg
and
andl
sub
aad
inc
sub
cmp
inc
jns
movsb
js
pusha
xchg
jge
outsb
sbb
lcall
cmc
mov
fbstp
sbb
outsl
iret
mov
mov
inc
mov
dec
pop
rolb
loope
sub
addb
out
stos
push
cmp
aam
lea
lret
mov
mov
push
jne
adc
nop
cltd
push
push
add
lahf
mov
mov
movsb
fidivl
add
lock
movsl
xor
cwtl
outsl
es
and
cmp
mov
addr16
adc
jp
pushf
into
mov
jmp
and
mov
inc
mov
insb
push
cmp
sub
subb
push
pusha
and
idivb
mov
sbb
dec
sbb
or
negl
adc
icebp
sbb
push
cs
cmp
sub
jb
add
jnp
mov
sti
xor
sub
dec
imul
out
jo
cmp
cmpsl
and
xchg
push
pop
in
aad
push
es
push
dec
in
add
cmp
in
in
cs
dec
loop
and
pop
and
dec
mov
xor
adc
pop
xchg
fsubrp
sbb
test
mov
jo
aad
mov
cmpsl
xchg
cli
fstps
sbb
jns
pop
js
pop
pop
cmp
pop
adc
pop
mov
ret
add
leave
pop
and
insl
mov
mov
dec
pop
mov
ja
outsb
jmp
jp
and
aam
adc
frstor
sbb
mov
pop
xor
sbb
inc
popa
sahf
cli
cmp
mov
inc
es
xchg
xchg
in
mov
cwtl
push
sbb
adc
movsl
je
add
mov
jbe
movsl
popa
jle
and
or
pop
cmp
fstl
fists
ret
bound
pop
sbb
xor
inc
mov
sbb
xorb
test
adc
add
jmp
sbb
sbb
fdivr
adc
dec
es
sbb
sbb
fsts
and
xor
jno
in
fstpt
in
std
cmpsl
pop
pop
pop
fidivs
pusha
shr
pushl
ja
xchg
and
xor
dec
test
shll
in
std
pop
imul
mov
repnz
sbb
hlt
cmp
and
cmp
jb
cli
jnp
or
cmp
and
pop
dec
aas
mov
dec
xchg
dec
scas
pop
stos
xchg
xchg
jo
movsl
repz
in
ficoms
loopne
and
push
les
add
xchg
inc
cmp
aaa
imul
cmp
mov
jne
pop
fstpl
repz
leave
stos
push
sub
leave
cmp
roll
inc
movsl
mov
jge
int
stos
and
xor
clc
add
mov
loopne
push
mov
in
and
mov
jb
lahf
mov
mov
push
lret
jnp
mov
push
mov
lahf
adc
lock
mov
and
inc
cld
mov
mov
cmp
adc
xor
cmp
xor
push
jl
ds
cmp
sub
shll
scas
adc
mov
ds
adc
jae
sub
jnp
or
lds
mov
dec
loope
jns
leave
fsubl
fisubrl
aam
enter
movsl
sbb
pop
or
sbb
push
xlat
mov
arpl
jmp
fs
int3
and
cs
jae
fbld
sub
pushf
mov
cmpsl
xlat
mov
loope
popa
mov
xor
popa
int
cmp
push
and
push
jg
sti
and
pop
push
nop
cmp
movsl
in
icebp
jmp
cmp
cmp
aas
pop
fldcw
js
stos
sbb
scas
xor
ljmp
xor
mov
dec
in
mov
inc
xor
out
sbb
pop
or
popf
jecxz
lret
rolb
pop
clc
and
and
add
jp
stos
sub
cmpsl
pop
sbb
fnsave
and
int
lret
mov
pop
gs
movsb
add
push
mov
imul
adc
cwtl
fstp
std
sub
and
in
jmp
sbb
jmp
or
repnz
push
clc
in
and
fsqrt
and
fisubs
mov
push
push
repnz
rcll
push
imulb
pushf
add
sub
das
testb
out
add
adc
push
and
push
xchg
es
mov
mov
fcomps
fwait
jo
mov
push
xchg
and
out
insl
imulb
mov
add
cmp
dec
sbb
mov
pusha
sub
pop
sbb
mov
ficoml
pop
fsubrs
cmc
add
mov
push
and
sbb
jp
sbb
mov
adc
jnp
push
xchg
pop
jo
or
cmp
add
subl
aaa
and
clc
test
mov
mov
mov
adc
push
sbb
mov
inc
jno
fwait
xor
dec
pop
test
pop
pop
sbb
scas
push
add
add
sub
cmc
into
push
dec
fbstp
outsb
les
pop
xor
sbb
gs
add
das
pop
std
mov
dec
inc
js
inc
cmc
popf
jo
mov
jge,pn
and
and
jb
loopne
xor
pop
and
add
add
and
loop
mov
dec
test
test
cmc
and
and
sbb
pop
je
rclb
imul
mov
enter
and
clc
push
shll
add
inc
push
andb
inc
add
sub
cs
or
push
rcrb
fsubl
inc
sub
cmp
jmp
jmp
jmp
add
repnz
or
shrl
or
and
or
and
dec
xor
shlb
mov
hlt
iret
push
popf
inc
mulb
push
lock
je
fistpl
lcall
add
movsl
outsb
out
stos
lcall
adc
popf
es
and
aam
js
mov
cmp
cltd
inc
mov
mov
cmp
xor
sub
push
or
lcall
add
pop
dec
into
pop
mov
lcall
mov
mov
mov
push
repnz
xor
mov
xchg
adc
fldt
lret
ljmp
jnp
cmp
jmp
and
inc
data16
inc
out
inc
adc
sbb
add
pop
popf
xchg
loope,pt
sbb
fwait
pop
call
cmp
cmp
data16
mov
pop
fcompl
cs
xor
sbb
xchg
xor
cs
std
cmpsl
and
lea
pushf
jnp
sbb
out
cli
mov
fadds
inc
movsl
xchg
sub
lds
divb
push
insl
cmp
jge
mov
or
adc
jb
lcall
xchg
and
leave
pusha
and
sahf
mov
xchg
and
loop
mov
jae
mov
stos
fildll
leave
or
out
sbb
and
scas
sbb
clc
push
cli
sub
and
xor
das
xor
mov
imul
or
xor
cld
hlt
xor
mov
push
pop
push
loopne
pop
and
dec
jle
sub
or
pop
and
je
ljmp
les
repz
push
add
jae
pusha
push
das
cmp
cmp
inc
push
pop
lret
xchg
sub
pop
mov
das
sbb
stc
add
sarb
push
data16
sub
and
and
xchg
and
fs
out
xor
sbb
xor
push
push
inc
frstor
inc
stos
mov
repnz
pop
fldt
cwtl
push
inc
cmp
mov
cmc
add
aas
dec
stos
iret
push
sbb
and
push
add
sbb
cmp
sub
cmp
inc
and
pop
stos
and
ss
sub
and
cmp
ljmp
cs
push
addl
sahf
cmp
xor
addb
fcompl
sbb
fs
outsl
xchg
or
jle
jb
jb
loop
sub
mov
jle
test
int
lock
repnz
adc
add
add
cmp
sbb
andb
lea
pop
jne
cmpsb
inc
lods
sub
movsl
mov
adc
adc
pop
xor
fisubs
adc
mov
and
in
inc
rcr
mov
push
addr16
jne
dec
stc
sbb
mov
rcrl
push
mov
xor
jb
mov
popf
ljmp
ljmp
xchg
add
fstp
rcrb
mov
movsl
pop
out
pop
mov
aad
mov
enter
push
fidivl
data16
push
cmpsb
push
cmp
outsb
and
std
ficomps
mov
movsb
stos
xchg
jge
pusha
mov
pop
sub
ret
sub
aaa
adc
cmpsb
add
test
shrl
add
jg
mov
fnsave
popa
push
aas
xor
daa
adcl
repnz
dec
mov
ss
push
xor
lods
nop
sub
repnz
outsb
mov
popf
pause
xor
mov
xor
cmpsl
imul
stc
xor
cmp
fucomp
and
xchg
jae
jno
and
and
dec
ret
pop
sbb
and
adc
bound
jne
movsb
sbb
push
jmp
pop
movsb
push
sbb
les
cli
loopne
test
je
std
mov
xor
out
cli
cltd
filds
rcrl
adc
movsl
jno
aas
cmp
jnp
lret
imul
fildl
in
daa
sbb
xchg
xor
sbb
xchg
fisubs
movsl
adc
push
in
add
fimuls
decl
and
push
adc
push
dec
or
bound
add
add
loop
mov
or
sbb
xorb
jne
add
dec
add
sub
sub
dec
push
mov
mov
test
fisubs
out
sub
mov
inc
addr16
sub
push
pop
popf
xchg
pop
sub
adc
pop
cmp
adc
mov
mov
push
mov
adc
daa
push
and
cmpsl
mov
icebp
or
popf
or
dec
cltd
cmp
pop
js
cmpb
ss
inc
sbb
sub
pcmpeqw
mov
sbb
lea
jno
jne
add
cld
bound
pop
pushf
in
sbb
pop
pushf
rorl
sub
mov
xchg
sbb
lcall
xrelease
stc
xchg
push
xchg
sbb
xor
adc
add
inc
sub
push
sbb
out
test
sbb
in
int3
xrelease
push
mov
or
pop
es
inc
ficoms
in
movsb
out
mov
movsl
loop
enter
daa
adc
fstpt
in
push
push
mov
mov
adc
jmp
or
fisubl
sbb
add
inc
aam
pusha
test
dec
pop
dec
jo
xchg
and
sub
ljmp
inc
test
xor
sbb
mov
xor
test
aaa
js
fwait
jb
shlb
sar
add
push
lahf
mov
and
mov
push
mov
sbb
add
jg
add
add
push
loop
cmpsl
mov
add
and
sub
mov
loop
xchg
add
aas
cmp
fisubrs
sbb
mov
sbb
js
ret
and
nop
ss
scas
mov
cmc
loopne
mov
ret
dec
dec
cmp
out
ds
cmpsb
mov
mov
es
ret
es
or
into
dec
jmp
and
and
mov
es
test
fcmovbe
ficoml
jno
jle
movsl
pusha
cli
pop
ljmp
cli
xor
das
mov
cwtl
sub
and
fiaddl
je
dec
lcall
in
call
popf
movsl
pop
xchg
cli
cwtl
imul
sub
fdivrs
pop
push
cmp
hlt
pop
pop
jno
sbb
sub
aam
movsb
inc
pop
popf
mov
xchg
and
insb
jne
push
xor
and
mov
aas
adc
jbe
push
xchg
outsb
bound
sub
mov
or
and
repnz
ret
inc
sub
ret
fcmovb
push
mov
mov
imul
and
lcall
stc
cmp
adc
push
xchg
cltd
sub
mov
je
push
or
ss
sub
ficompl
into
fldenv
push
push
roll
ds
lahf
jnp
or
xchg
and
pop
cmp
addr16
xchg
testb
fistpll
lds
in
add
xchg
insb
pop
add
sub
das
inc
mov
and
mov
and
add
movsl
lcall
sbb
add
cmp
mov
lcall
jns
push
adc
pop
push
enter
in
nop
lcall
add
add
pop
stos
cmp
cmp
push
adc
pop
lock
aad
push
xor
push
fiaddl
xchg
pop
add
mov
dec
xchg
add
pop
jge
sub
add
and
cmp
jmp
push
aas
aad
lcall
pusha
mul
pop
lcall
jg
sbb
out
dec
out
mov
mov
pop
loope
inc
fsubl
jbe
dec
fidivl
or
pop
rcr
bound
adc
adc
xchg
lods
jb
sub
sub
xor
pop
push
pusha
enter
mov
rcl
cmp
scas
xor
xor
aad
popf
xchg
xchg
and
inc
adc
jno
aaa
pop
cmpl
mov
sbb
dec
jecxz
shll
roll
aam
sub
out
xor
in
les
cmp
xchg
add
and
je
repz
adc
pop
ret
push
pusha
jg
pop
pop
cmp
fsub
ja
jne
mov
lret
mov
mov
xchg
mov
lret
xlat
mov
sbb
into
xchg
adc
inc
out
fidivs
push
or
mov
bound
fld
fiadds
push
dec
pop
add
cmp
mov
sub
popa
pop
fnstcw
sbb
adc
push
popa
xchg
dec
movsl
mov
pop
inc
lahf
cltd
add
jmp
std
push
sbbb
aam
out
adc
aaa
les
and
add
das
orl
or
adcb
xor
jb
movsb
ja
bswap
std
sub
ljmp
cmp
aas
daa
stos
sbb
and
fdivs
addr16
movsl
pop
mov
shlb
sbb
dec
jno
mov
ret
into
fwait
add
jnp
sub
hlt
insl
sbb
cmp
adc
pop
aaa
pop
inc
mov
popa
outsl
push
cltd
add
sbb
jns
test
stc
ljmp
xor
sahf
pop
and
cli
xor
bound
repnz
cld
sbb
std
push
idivw
push
add
sub
xor
sbb
cmp
add
push
sti
adc
sysenter
out
xchg
sbb
inc
testb
adc
cltd
loopne
add
push
imul
cli
popa
movsb
jns
pop
add
jmp
outsl
push
insl
pop
lret
push
bound
imul
xorl
and
std
repnz
mov
mov
jge
xor
data16
add
pop
fidivrs
cmp
cli
or
lock
add
or
xor
cli
add
xchg
and
enter
xor
mov
inc
xor
js
incb
push
xchg
pop
xor
sbb
sub
and
pop
fwait
push
pop
push
inc
popa
xor
inc
std
divb
sbb
inc
shlb
mov
xchg
mov
je
mov
lock
or
sbb
stc
fisttpll
or
push
out
jb
ja
jbe
stc
pusha
push
mov
jo
add
sbb
scas
sbb
pop
mov
movsl
fdivs
lcall
daa
icebp
ds
sub
push
loop
lds
in
push
adc
fldl
inc
adc
pop
inc
mov
in
and
cmp
sarl
adc
inc
negb
or
aas
js
sub
sub
out
lods
mov
dec
sbb
sbb
push
das
push
inc
popf
xchg
push
lret
cmp
adc
lea
cwtl
push
add
test
push
push
mov
xchg
sbb
pop
dec
and
dec
mov
cwtl
dec
cmpsl
sbb
xor
cmc
ljmp
and
sub
push
add
mov
xchg
push
mov
subl
xor
jne
cli
daa
push
data16
insl
out
jno
imul
xchg
fiaddl
pop
push
mov
daa
sbb
sbbb
icebp
and
ja
sbb
sub
sbb
xchg
jne
sub
aas
add
ret
iret
ja
sbb
inc
adc
test
ret
sub
lahf
rclb
popf
mov
cli
ja
jb
int
jmp
cmp
mov
or
add
pusha
xchg
pop
popf
pop
sbb
jno
ret
push
out
imul
gs
aam
inc
add
ss
mov
adc
jno
dec
inc
push
add
fistl
pop
enter
cld
and
popf
out
sbb
pop
adc
jge
cmpsl
xchg
mov
push
ss
cli
aaa
mov
jbe
mov
nop
std
xchg
es
test
add
test
sub
fistl
imul
jl
cmpsl
xchg
in
jg
in
movsb
gs
loopne
dec
repz
jo
lahf
lds
or
push
xchg
ss
mov
cmp
movsb
cwtl
push
push
cli
cltd
imul
popf
mov
adc
adc
cmp
xor
jmp
iret
mov
aam
jp
mov
mov
xor
inc
out
xor
jo
push
fistpll
shll
inc
dec
pusha
pop
jb
lcall
dec
push
jne
pop
xchg
mov
je
pop
rclb
jae
aaa
pop
roll
push
lahf
test
adc
cs
aas
push
mov
sbb
scas
aaa
ja
jae
ret
aaa
mov
nop
js
nop
clc
sbb
fwait
addb
adc
xor
push
js
inc
xor
pop
xchg
movsb
dec
push
popf
sbb
sub
pusha
mov
test
loopne
lahf
les
xor
insl
sub
cmpsb
push
xor
sbb
push
pusha
repnz
and
pusha
les
push
dec
sub
or
pop
imul
and
mov
cmp
mov
push
pop
cmpsl
js
test
xchg
xchg
adc
xchg
rclb
fimull
into
pushf
mov
test
fwait
mov
std
dec
sbb
out
sub
iret
sub
inc
popa
pop
xchg
adc
das
jmp
lea
je
ret
sub
and
xchg
xchg
int
inc
mov
and
mov
xchg
arpl
and
push
fstps
pop
mov
imul
test
add
push
mov
and
sub
mov
imul
movsb
hlt
adc
mov
sbb
and
pop
xor
sbb
sarb
cwtl
cmc
sub
and
mov
and
sub
fdivl
js
shl
sbb
cmp
jle
mov
mov
add
lcall
aad
inc
sbb
jnp
lret
fisttpl
out
loop
inc
cld
mov
pusha
cmp
sarl
std
cld
cmc
cmp
jns
and
push
jnp
xor
mov
push
aaa
pop
cmp
pop
rcrl
mov
call
shll
xchg
sub
sbb
xchg
je
popa
scas
lds
pop
std
insl
leave
outsl
in
mov
mov
rcrb
pop
inc
mov
pushl
mov
sub
sub
cld
lahf
movb
push
and
pop
push
into
setge
xchg
cmpsb
cs
or
add
xchg
mov
xchg
sbb
push
sub
call
pushf
shrb
insl
loop
jae
loop
mov
add
push
jne
and
pop
adc
dec
dec
push
lcall
loope
and
stos
je,pn
mov
jle
push
call
aas
add
push
and
xor
sbb
std
mov
cmpsl
cs
das
mov
in
shlb
pop
lret
mov
adc
sarl
or
mov
movsl
das
push
inc
aas
into
pop
cltd
jp
jno
std
ja
aaa
les
adc
out
das
adc
adc
push
push
push
fcoml
dec
ljmp
or
add
xor
into
sbb
mov
sbb
push
pop
mov
roll
push
mov
nop
xchg
ret
notl
bound
inc
test
pop
pop
out
test
inc
bound
jp
push
addr16
in
dec
mov
sbb
mov
xor
dec
rolb
sub
add
cmp
mov
lcall
sbb
call
and
sub
mov
pop
fdivl
cmp
pop
les
fcmovbe
mov
cli
jecxz
movsb
subl
cs
xor
pop
outsl
lret
xchg
aam
xchg
and
push
cmp
repz
pop
ret
sbbb
dec
mov
repz
cli
add
sbb
xchg
pop
and
xchg
sub
nop
jle
outsl
fdivs
out
imul
out
xchg
or
or
and
test
dec
lahf
pop
or
pop
testl
xor
test
adc
pop
pop
idivl
sub
dec
add
popf
and
sbb
sub
adcb
lds
xor
and
gs
add
or
hlt
andb
lea
in
scas
mov
out
jno
aam
sub
mov
pushf
cmpb
xor
xor
mov
sub
mov
ja
aas
xor
and
sub
mov
les
add
popa
mov
lcall
push
fisttpl
adc
sbb
rorb
add
xor
lret
or
dec
shl
inc
sbb
movsl
jmp
pop
cmpsl
cmpsb
ficomps
pop
daa
xchg
addr16
xor
sub
shr
mov
push
imul
dec
and
sbb
shll
outsb
ret
mov
sbb
test
in
movsl
gs
and
lea
aad
cltd
movsl
in
add
push
adc
cmp
pop
sbb
and
scas
adc
cmpsl
fs
cmp
mov
sub
imul
push
mov
popf
insl
pushf
xchg
jne
sbb
xor
scas
movsl
out
and
xor
jmp
scas
aad
popf
std
mov
push
into
cmp
sub
adc
mov
nop
push
xchg
popa
xchg
jmp
pop
push
notl
sub
jmp
hlt
sbb
fsubl
cmc
mov
mov
adc
pop
in
or
lock
mov
mov
mov
fisttps
aad
gs
cmp
ss
into
rorl
push
jl
out
mov
mov
push
jae
jne
xchg
call
push
sbb
js
imul
jnp
shlb
push
jo
lods
idivb
icebp
inc
dec
je
and
pop
pop
cmc
push
sub
and
adc
sub
aaa
and
shrl
cmp
ja
and
movl
xchg
aas
jno
sub
adc
sahf
rorb
je
cs
pop
inc
or
pop
repnz
and
adc
mov
stc
idivb
xor
sti
sub
repz
xor
out
movsl
dec
jne
and
and
jp
movsb
mov
jno
sub
bound
and
mov
and
sub
subl
aad
sbb
sub
and
sub
cmp
mov
dec
or
cli
rcr
loop
push
inc
loop
sub
fwait
outsb
mov
mov
and
sbb
dec
adc
cmp
nop
fs
xchg
movsb
dec
pop
insb
pop
scas
jns
mov
mov
imulb
jg
sub
pushf
pop
fcmovne
js
xchg
or
mov
arpl
inc
scas
inc
andb
jo
ljmp
pop
adc
add
cld
sbb
xchg
repnz
stc
mov
mov
movsl
push
sarl
and
pusha
cmpsb
or
xor
mov
and
push
repnz
das
inc
pop
xchg
pop
ds
ror
xchg
and
pop
sub
xchg
push
inc
mov
dec
or
aad
lahf
xor
jl
repnz
sub
lahf
inc
rcrl
push
sbb
mov
aaa
mov
xor
cmc
cmp
inc
xchg
movsl
cmpsb
stos
int
dec
stos
pop
frstor
cmc
mov
outsl
inc
imull
push
mov
pop
and
xchg
xor
icebp
push
mov
push
and
lret
pusha
jae
in
cmp
xchg
jno
daa
jp
mov
and
sbb
add
outsb
xor
and
inc
cmp
or
push
push
mov
inc
loope
mov
fs
cmpb
mov
xchg
add
test
scas
push
adc
mov
lcall
cmp
cs
movsl
inc
scas
pusha
mov
inc
nop
push
and
stos
lret
test
mov
push
jmp
shlb
xchg
and
stos
push
cwtl
ret
xchg
or
shll
cmp
xchg
mov
jle
fldenv
push
sbbl
aam
xchg
inc
outsb
fstpt
sub
call
push
and
test
push
add
cmpsl
repnz
xchg
push
xchg
lret
test
cmpsl
push
mov
inc
hlt
mov
mov
dec
fdivr
cmc
cmp
sub
dec
push
fidivrl
cmpsl
xchg
sub
pop
xor
aaa
pop
push
sub
gs
mov
mov
sub
push
and
push
daa
push
xchg
cmp
fcomi
mov
ret
icebp
xor
jno
and
mov
xor
and
subb
pop
mov
and
pusha
repnz
sbb
js
sub
push
imul
sub
jp
jbe
fsubrs
and
cs
mov
xchg
jl
pop
sbb
sbb
cli
cmp
hlt
mov
loop
and
fcoml
dec
nop
pop
sbb
fwait
je
adc
pushf
enter
lahf
pop
mov
fisubl
fs
adc
imulb
mov
lcall
mov
adc
push
cmc
cmpsl
popa
xchg
bound
popf
std
mov
cmpsl
mov
pop
push
or
pop
mov
or
sbb
lcall
adc
loope
or
imul
popa
rclb
mov
mov
test
pop
mov
pusha
pop
movsb
loop
and
mov
xchg
xchg
push
aam
mov
add
in
cmp
into
shlb
and
and
xor
inc
imul
daa
aad
fildl
std
in
pushf
adc
push
arpl
jbe
inc
jbe
mov
sub
scas
xor
sbb
test
push
or
pop
cmpsl
lret
shrl
and
jns
jg
fwait
bound
into
lea
lods
insl
adc
ficomps
cmpsb
or
popf
in
mov
imul
xchg
push
jle
iret
mov
test
xchg
pop
imul
js,pn
sbb
inc
sub
adc
pop
xchg
mov
mov
mov
pop
iret
and
pop
pop
sbb
pop
and
sub
and
sbb
and
gs
jmp
sarb
jge
sub
cmpsl
imul
push
cltd
pop
pusha
in
pop
dec
pop
aas
rcrl
subb
ja
mov
dec
adc
popa
and
lea
pop
sub
pop
cmpsl
mov
testb
mov
dec
dec
mov
add
sub
cmpsl
outsl
daa
movsb
lahf
or
push
cmp
lret
xor
cmp
inc
cmp
mov
call
and
jecxz
mov
fwait
nop
push
ja
cltd
xchg
xchg
push
mov
and
and
jg
fstl
gs
sahf
adc
jbe
pop
xor
dec
and
sbb
call
jns
xchg
and
push
sbb
push
cmp
and
pop
xchg
pop
dec
icebp
lcall
aaa
cmpb
mov
xor
push
mov
ljmp
and
cs
push
inc
sbb
inc
lds
sbb
leave
xor
shlb
or
cmp
mov
cs
ss
popa
mov
mov
sbb
stc
mov
mov
or
fs
sbb
test
xchg
pop
rorl
and
in
popf
pop
sub
mov
fs
mov
push
fwait
pop
cs
scas
xchg
std
mov
insl
fstpl
or
add
enter
jno
inc
lahf
popa
lcall
inc
sub
idivb
xlat
pop
insl
xor
arpl
jnp
pushf
dec
pushf
mov
inc
add
dec
out
and
pop
push
cmp
sbb
xchg
and
mov
and
stos
daa
pop
and
jno
push
pop
jns
cmp
ret
pop
xor
cwtl
rorl
data16
sbb
push
das
outsl
adc
sub
or
data16
jge
loope
pop
push
fbld
loop
aas
and
cmp
add
and
sti
xchg
int3
or
imul
and
cmp
pop
or
adc
or
jge
subb
pop
and
mov
imul
push
cmp
add
fwait
push
pop
nop
nop
pop
push
cli
mov
mov
flds
mov
jbe
shrb
dec
jo
mov
insl
je
and
sti
push
or
aaa
pop
inc
stc
sbb
pop
and
jp
sbbb
sub
adc
add
and
mov
inc
mov
xor
test
adc
sub
sub
mov
cmp
gs
mov
xchg
xchg
xor
imul
adc
jg
lcall
mov
fisubrs
jo
int
cs
movsl
cwtl
daa
xchg
sub
fwait
inc
cwtl
es
or
lea
pop
imul
push
jg
nop
das
insl
mov
rcrl
sub
out
popl
and
repnz
loope
cmp
lret
mov
sahf
pop
filds
cwtl
das
lret
mov
pop
lea
addr16
xlat
xor
jbe
mov
add
fwait
adcb
into
insb
push
dec
push
mov
jmp
rorb
push
mov
mov
sbb
das
inc
xchg
cltd
sub
jbe
pop
fsubl
pop
cmpsl
setp
dec
ficomps
xor
movsl
ret
xchg
adc
mov
xchg
das
sbb
subl
push
mov
pop
adc
mov
in
inc
lock
mov
cmp
sub
pop
push
dec
rorl
pusha
jle
sarb
cwtl
int3
rcl
sub
cmc
push
push
push
aam
shlb
sub
andl
lock
add
loope
rclb
pop
pop
ss
fidivrl
inc
fisubrl
mov
sbb
mov
push
jo
push
dec
add
cld
push
pop
add
xor
mov
loope
inc
in
popa
insl
daa
cmp
in
inc
push
cmpsl
fwait
cld
dec
mov
or
pop
fimull
xor
xor
jno
push
push
sti
xor
and
sub
pusha
add
push
scas
jo
mov
add
sbb
sub
mov
xchg
lea
xor
sahf
cmc
ret
add
jb
js
leave
xchg
push
pop
pusha
and
stc
imul
pop
aaa
cmp
push
clc
cmc
sub
add
lret
sbb
fcmovnbe
cmpsl
les
mov
xor
xchg
lea
add
pop
js
shrl
aas
pop
pop
sub
iret
inc
ja
and
inc
lds
mov
mov
dec
mov
inc
cwtl
fmull
orb
add
int3
push
xor
cmp
test
jecxz
je
scas
xchg
cmp
in
out
jp
mov
pop
pusha
pop
mov
es
inc
adc
loope
nop
inc
and
sbb
xchg
loope
cli
pop
add
sub
popf
test
xchg
sub
add
push
pop
dec
cmp
cmp
sbb
inc
idivl
nop
inc
mov
xor
dec
push
and
pop
lcall
pop
les
rorb
daa
push
xor
jnp
cmpsb
push
xchg
pop
lds
dec
pushf
cmp
fwait
adc
sbb
add
add
sbb
cmp
and
lcall
stos
xor
add
push
push
sbb
setp
aaa
jo
cmp
ret
sbb
pop
push
insl
push
ficomps
mov
jg
push
andl
jns
and
sub
and
push
sbb
sbb
std
pop
clc
mov
pop
jle
pop
inc
add
dec
mov
es
inc
into
cs
xchg
imul
mov
xor
jnp
repnz
dec
adc
push
imul
sti
aas
imul
and
dec
add
or
or
test
pop
pop
imul
daa
cmc
or
pop
js
sahf
pop
daa
outsb
rolb
mov
fnstsw
jnp
ficompl
sub
push
add
push
lret
xor
adc
xchg
arpl
push
sbb
jge
pop
cmp
xchg
push
popl
lahf
loop
dec
aad
sbb
cmp
mov
sti
into
inc
loope
xchg
or
cmp
xchg
orb
pop
xchg
mov
sub
push
mov
addr16
ficomps
jmp
xor
sub
cltd
pop
xchg
mov
lret
out
add
xchg
std
outsb
inc
nop
insl
shlb
pop
mov
add
sbb
stc
jecxz
popf
call
mov
xchg
jge
cmp
add
and
cmp
iret
and
dec
sbb
daa
pop
insb
int3
pushf
dec
lcall
inc
out
negb
inc
sbb
and
inc
and
or
jge
inc
cmp
and
inc
sbb
cmc
xor
cwtl
push
clc
push
orl
jno
mov
shlb
and
pop
pusha
add
negl
test
shlb
cmp
mov
mov
and
mov
lret
sub
aaa
ss
xchg
call
sub
add
test
mov
push
pushf
cwtl
das
inc
mov
pop
sbb
in
std
pop
pusha
cmp
cmp
fists
pop
dec
movsl
jno
mov
mov
popf
aam
popl
cmp
cmpsl
mov
inc
push
pusha
xchg
cld
cmp
cmp
out
sbb
movsl
sub
xchg
mov
pop
sub
push
pop
nop
loopne
jg
push
in
cmp
inc
xor
outsb
pop
pop
mov
inc
daa
lret
sub
inc
dec
mov
dec
pushw
repz
push
and
xchg
mov
xor
cmc
cmc
mov
cmp
lcall
push
fsub
pop
sub
ljmp
movsl
inc
cs
ja
imul
ret
loop
cli
rorl
cwtl
aaa
mov
pop
xchg
add
mov
sub
jae
jno
mov
movsb
ret
rcrb
addb
cmc
xchg
pop
jb
inc
repz
inc
add
ss
rcrb
jnp
push
mov
es
pop
addl
sub
nop
push
es
pop
shll
inc
or
in
add
pop
sub
jl
mov
pusha
xor
jecxz
mov
mov
xorb
fistps
xchg
cs
nop
xor
mov
js
xor
ret
outsl
xor
pop
push
test
push
add
sbb
and
hlt
pop
or
xchg
add
push
jecxz
addb
imul
mov
mov
sti
or
sbb
and
ja
mov
push
pop
movsb
outsl
in
dec
ja
jns
mov
add
mov
sub
push
jmp
ficomps
movsb
dec
sbb
push
xchg
cmp
and
cltd
mov
or
cmpsl
adc
movsl
fcompl
ret
sbb
popl
dec
pop
in
into
clc
pop
movsb
ljmp
mov
test
loope
push
sbb
sahf
sbb
arpl
dec
fidivrl
and
popa
jge
pop
daa
pop
mov
orps
push
add
mov
test
mov
mov
add
pushf
cld
lahf
fwait
cmc
adc
mov
in
jmp
jp
call
and
stos
dec
xchg
loop
dec
cmp
and
dec
sbb
dec
shll
jecxz
sbb
mov
fcompl
outsl
mov
dec
cli
cs
outsb
aas
sub
xor
notb
add
and
sbb
cmc
cmp
dec
out
cltd
sbb
pushl
mov
mov
inc
bound
jp
aam
jb
shl
or
in
push
add
pop
addr16
sti
xor
or
sub
push
jbe
sub
or
push
jp
imul
cmp
push
clc
stos
mov
xor
outsb
cmp
and
lahf
sbb
add
insl
xlat
sub
xchg
sbb
addr16
insl
add
sub
repz
das
rcll
xchg
insl
imul
sub
mov
add
rcrb
int
jns
sub
pop
ljmp
pop
jecxz
test
xchg
push
sbb
sbb
nop
addl
add
int
nop
test
cmp
jmp
divl
repz
sbb
sub
int3
pop
mov
push
mov
idivl
ss
or
add
push
fldpi
add
js
sbb
pop
test
xchg
push
add
mov
mov
divl
jb
sbb
and
cmp
mov
pusha
and
cmp
jmp
inc
mov
mov
out
movsl
addr16
and
or
push
jmp
lret
into
push
xchg
test
cmpsb
pop
add
sbb
ret
dec
test
and
inc
shrl
shll
push
sub
or
das
inc
shlb
dec
push
inc
addr16
jg
adc
rcl
xorb
jne
dec
loopne
fnstsw
pop
push
fsubr
aas
mov
adc
imul
sub
lds
pusha
data16
sahf
xchg
jo
sub
add
cmc
pop
je
sub
pop
cld
fisubl
faddl
dec
add
and
adc
fisttpll
stc
sbb
add
movsl
and
cmp
and
insb
push
popa
jnp
xor
sub
push
inc
sbb
push
sbb
and
mov
cmpsl
jl
inc
ds
add
sub
imul
inc
stc
cld
fwait
add
lds
sbbl
pop
data16
in
xchg
fstpl
lahf
fmull
pusha
add
notb
sbb
fldl
mov
sbb
sbb
cmpsl
out
es
in
sub
out
es
ljmp
daa
mov
fs
mov
cmpsl
push
cmpsb
sub
mov
sbb
cmp
ja
add
mov
rcll
xor
pop
in
sbb
jae
xchg
sub
cli
and
sbb
and
and
inc
aaa
movsb
hlt
sub
sbb
sbb
dec
cmpsb
pop
cmp
lea
movsl
jo
adc
fcompl
add
adc
push
xor
pop
stos
push
xlat
pop
push
jmp
stos
fldenv
popf
pushf
jno
inc
cmpsl
ja
call
cwtl
sbb
push
push
lcall
shrl
bound
sahf
mov
pop
sub
pushf
imul
pop
test
push
dec
cmp
filds
or
cmp
mov
aam
cmp
loopne
push
push
dec
mov
cmc
pop
inc
jg
pop
dec
xchg
mov
jl
push
insl
cmp
xor
loopne
mov
sbb
xorl
and
cmc
xchg
sbb
pop
cmp
les
subl
mov
test
and
pop
das
fwait
leave
inc
mov
add
push
outsl
xchg
fisttps
mov
pop
dec
bound
stos
mov
sbb
adc
dec
rolb
lcall
and
and
and
cs
ds
in
movsl
adc
jne
rclb
or
lcall
sahf
sub
inc
mov
and
dec
fldcw
dec
add
lea
cmp
into
bound
adc
popa
pop
rolb
das
push
rolb
mov
cli
adc
mov
pop
sahf
cmp
xor
sub
cmp
pusha
fldenv
dec
or
add
and
jge
xor
cmp
add
add
lods
xchg
pushf
mov
ja
mov
mov
mov
xlat
fidivs
adc
inc
cwtl
pop
insl
push
pop
aaa
or
lea
mov
cmp
sub
dec
sub
sbb
sarl
jae
push
es
add
leave
arpl
ss
mov
pop
cmp
mov
and
cmp
pop
cmpsl
sbb
xor
cmc
movsl
xchg
sub
lcall
and
xor
add
arpl
sbb
xchg
xchg
jne
jno
js
adc
and
nop
cwtl
inc
popa
push
add
and
inc
repz
sub
adc
movsl
clc
fistl
idiv
dec
imul
cli
hlt
push
jns
inc
movsl
jmp
adc
lea
push
imul
add
sub
sub
push
add
outsl
sbb
and
add
inc
push
mov
mov
test
xor
popa
fildl
inc
or
aam
mov
xchg
or
movsl
popa
and
lea
mov
popa
daa
pusha
insl
stc
dec
dec
push
xchg
dec
addr16
fwait
sbb
fsubl
xchg
hlt
dec
imul
xchg
popa
xor
inc
fnstenv
jp
push
dec
sbb
shlb
loop
dec
outsl
pop
xlat
push
fcmovnbe
imul
mov
jg
add
call
fsubl
dec
fsubrs
xchg
sbb
sbb
push
inc
jmp
add
subl
mov
sbb
out
or
xor
cwtl
movb
add
jno
mov
mov
aaa
pop
sbbb
pop
pop
repnz
sbb
jb
rcrb
divl
mov
notl
testb
lcall
out
push
stc
cmpsb
push
fidivl
push
pushf
xor
dec
ljmp
movsl
fidivs
jp
sub
or
xchg
xlat
and
fnstcw
sbb
aad
addr16
jno
cmpb
and
mov
adc
rclb
sub
out
cltd
cmp
push
dec
pusha
and
or
fisubl
or
daa
sti
mov
int
imul
bnd
int
sub
dec
cmc
int3
xor
jo
incb
test
sbb
testb
sbb
fcompp
push
jmp
mov
loopne
xchg
jno
lock
mov
shrb
arpl
xchg
or
mov
pop
in
out
rcrb
xlat
sbb
sbb
nop
or
add
imul
pusha
cmp
and
in
shrb
fs
scas
cmc
mov
dec
jmp
push
daa
sub
jmp
pop
add
ds
movsb
pop
mov
flds
aaa
cmp
push
or
idivl
or
fidivrs
inc
or
pop
xchg
int
pop
dec
jae
fsubrl
clc
mov
push
jecxz
xchg
insb
lret
sbb
imul
jp
notb
shl
mov
fisubrl
inc
lret
inc
stc
sbb
push
loope
das
jne
push
or
stos
pusha
pop
push
xor
pop
pop
das
xor
sbbl
push
cli
push
mov
mov
mov
mov
mov
outsb
nop
push
or
mov
aad
add
sbb
jo
bound
repz
lahf
js
push
ja
daa
fbstp
xor
outsb
je
mov
aaa
and
lds
outsb
mov
push
and
sub
pop
jmp
add
mov
fwait
jne
cmp
sub
xchg
sti
aas
bound
test
pop
cs
sub
andb
xor
arpl
inc
mov
ret
add
sbb
mov
xlat
pop
rcrb
push
cmc
cmp
sub
ss
and
sub
jae
ficompl
sahf
xor
fstpl
mov
cs
ret
sahf
sbb
pusha
and
xor
sbb
jge
mov
pop
pushf
pushf
or
mov
dec
dec
or
lahf
cwtl
daa
cmp
cmpsl
outsl
jp
rolb
fiaddl
aaa
and
mov
sarb
cli
sbb
mov
push
cmp
pop
movsb
inc
fnstsw
inc
cld
ljmp
daa
cltd
dec
xchg
cmpsl
xchg
dec
push
arpl
push
jo
gs
xor
jmp
pop
cld
fstpl
sub
fwait
adc
add
leave
cmpsl
mov
je
mov
adc
aad
scas
pop
jle
mov
xor
lods
call
mov
std
lcall
push
negb
flds
lock
cs
loop
fstpt
repnz
mov
mov
sub
aaa
jp
cmc
imul
fdivrs
cmp
mov
push
or
inc
sub
dec
pushf
inc
stc
sti
push
int
sbb
sub
mov
iret
imul
pop
into
adc
js
pop
dec
movsb
sbb
add
mov
sar
popa
pop
xor
loop
andb
lock
dec
sub
in
add
sysret
add
cltd
lock
js
inc
rcrl
cmc
movsl
jmp
into
loop
sarb
ja
jg
pushf
push
xchg
push
daa
xor
xorb
lret
fwait
or
xchg
jno
cmp
sbb
fisttps
sub
sub
imul
lcall
outsl
and
test
sub
dec
ret
movb
outsb
bound
mov
inc
add
push
ljmp
lds
lcall
mov
scas
sbb
in
adc
pop
and
movsl
adc
ds
daa
mov
cmp
pop
pop
mov
loope
cmp
lret
jle
xchg
xor
mov
gs
jb
jns
into
lock
dec
mov
cmp
jbe
movsb
hlt
addr16
cmc
imul
push
jmp
aad
add
movsb
mov
push
jmp
es
insl
and
insl
scas
dec
test
xchg
add
jno
lcall
js
add
sbb
negl
or
aaa
cmp
or
mull
popl
adc
addr16
xchg
add
aaa
aad
xor
cli
fidivrs
sarl
imul
mov
enter
adc
test
int
sub
fldl
mov
insl
xchg
lcall
lods
addr16
ret
jne
xor
bound
shrb
imul
mov
out
movsb
daa
popf
pop
lahf
pusha
jmp
sub
imul
pusha
and
int3
or
das
mov
sbb
and
push
icebp
sub
xchg
inc
adc
pusha
lea
pop
pusha
pop
fsubl
popf
or
sbb
mov
das
and
adc
negl
add
stos
xor
pop
pop
cmp
cmp
xor
lret
aas
cmpsl
sub
fbld
es
sub
xor
sub
cltd
push
lcall
inc
xchg
ja
mov
jecxz
mov
cmc
sub
xchg
push
inc
sub
xchg
add
add
out
movsl
imul
loop
popf
das
pop
pusha
pushf
mov
pop
fildll
ds
testl
sbb
push
xchg
sbb
xlat
xor
push
xchg
pop
mov
aaa
fstpl
mov
dec
fs
and
or
daa
scas
sbb
pop
xchg
ret
cs
aas
cmpsl
loopne
push
lret
sbb
movsl
js
adc
faddl
adc
imul
cmp
shlb
mov
or
stos
and
gs
daa
pop
rcrw
fwait
xchg
mov
jbe
js
aaa
daa
sbb
popa
dec
jecxz
lock
out
push
dec
outsb
repnz
add
mov
lret
or
sub
mov
lods
sbb
pop
mov
cmpsl
into
xchg
cltd
sub
mov
scas
fdivrl
cld
loopne
and
popa
mov
sbb
adc
nop
stos
xchg
mov
nop
push
popa
push
xor
enter
adc
and
clc
sbb
jne
insl
inc
jl
ret
dec
and
mov
data16
push
addr16
movsb
in
shll
jle
mov
jl
and
add
insl
add
mov
inc
mov
add
inc
jb
inc
sbb
mov
mov
lret
adc
push
mov
cmp
mov
inc
xchg
adc
pusha
sbb
or
pop
outsb
mov
mov
mov
and
dec
jns
xchg
xor
out
pop
xor
lcall
sub
jnp
lret
push
mov
imul
pop
dec
pop
aas
pusha
aad
pop
orb
or
xor
push
add
fstp
dec
jge
cld
imul
sub
inc
xor
out
inc
cs
cli
push
jmp
xor
fwait
and
pushf
lds
jo
adc
pop
sub
test
dec
in
and
aaa
mov
sub
cmp
and
pop
popf
adc
ficoml
dec
xchg
push
out
jbe
leave
mov
pop
nop
and
sub
and
sbb
das
jnp
or
fldt
sbb
sbb
bound
sahf
cmp
jne
sub
pop
pop
ror
jp
mov
sub
ficoms
pop
xchg
cmp
sbb
es
push
mov
push
shr
imull
push
pop
sbb
in
das
xor
jmp
iret
shl
fldcw
stc
pop
loopne
fs
adc
push
dec
pop
add
push
push
push
inc
idivb
jecxz
es
cmp
repnz
stos
sub
fwait
push
ja
stos
lcall
es
push
push
push
cmpsl
lcall
daa
mov
lods
sub
and
movsb
adc
mov
in
jae
and
jae
add
in
mov
mov
and
scas
fwait
pop
lret
jne
js
cmc
push
pop
dec
lret
adc
or
adc
es
dec
orb
es
arpl
cmpsl
cwtl
das
push
fistl
sub
inc
test
sahf
sbb
and
dec
inc
sub
dec
lret
aas
pop
gs
andb
xchg
jl
push
imul
lcall
lahf
pop
xchg
daa
fsubs
and
cmp
cmp
mov
sub
or
jne
sub
test
sbb
push
fisttpll
sbb
popa
jo
out
mov
popa
cltd
add
push
pop
sub
dec
mov
daa
clc
and
xchg
and
icebp
call
mov
outsl
aad
dec
mov
pop
lcall
cmp
and
arpl
sbb
lar
push
jae
pop
rcll
jecxz
lret
sbb
inc
aaa
xchg
and
cmp
loop
jmp
rcrb
add
aad
fsubs
jo
mov
ss
sbb
test
out
pop
pop
sbb
movsb
addr16
cmp
outsb
cs
or
xor
aad
push
or
push
mov
ret
jmp
mov
bound
mov
mov
call
jo
fidivl
mov
sub
and
xchg
push
pop
les
push
xor
stos
mov
and
fsubrp
sbb
and
push
sbb
sub
and
call
aaa
mov
mov
add
fistpll
rcrb
pop
pop
or
adc
sbb
and
clc
and
out
xor
sbb
sbbb
into
daa
xor
fsubl
movsb
pop
ja
sub
mov
lret
xor
loope
ljmp
mov
imul
cmpsl
mov
ficompl
jns
cmp
std
pushf
push
xchg
add
xor
pusha
in
xor
xor
add
mov
movsl
in
rorb
pop
and
lret
cs
icebp
lcall
and
add
mov
dec
lock
xor
sbb
xor
rcrl
add
xor
cmp
sub
xor
inc
mov
sbb
and
imul
stos
xchg
fwait
inc
pushf
dec
mov
push
dec
aaa
ret
push
out
push
popa
push
sub
sbb
in
fistl
mov
pop
push
add
cmp
pop
xchg
cmpsb
add
push
and
push
adcb
lea
xor
mov
inc
loopne
loope
jmp
xor
push
mov
arpl
dec
sbb
push
dec
pop
lods
mov
sarb
push
ds
aas
sbb
mov
imul
mov
dec
les
lock
es
xor
lcall
xchg
fsts
loope
test
andb
mov
and
mov
push
mov
push
cli
jne
popa
lret
push
pop
insl
ja
subb
add
fisubl
cmp
lds
add
rcrl
sbb
out
cmp
sbb
fnop
adc
mov
ficomps
cmp
cld
shlb
mov
aaa
fildll
repnz
mov
cmpsl
gs
and
dec
xchg
aad
push
dec
jge
xchg
insb
fsin
out
test
test
push
popf
jmp
cmpsl
mov
xor
cwtl
and
movsl
sub
push
fistl
arpl
cmpsb
and
push
cwtl
pusha
ja
hlt
add
movsb
out
inc
and
cmpsl
cwtl
das
addr16
and
data16
ljmp
sub
dec
mov
pop
and
sub
push
adc
sbb
or
mov
add
fwait
mov
add
jns
fcmovbe
inc
sub
sbb
xchg
xor
inc
and
ljmp
sub
dec
jl
ljmp
lcall
mov
shrb
les
sbb
ficomps
nop
jb
fldl
imul
sbb
pop
icebp
call
hlt
sbb
adc
push
and
rcr
cwtl
sub
sbb
sbb
fnstsw
ficompl
outsl
sahf
aaa
aam
cmp
fbld
sar
dec
push
mov
push
nop
movsl
es
imul
jo
xor
xchg
int
mov
inc
xchg
xchg
mov
and
add
sbb
mov
jp
movsl
daa
pop
sub
das
dec
pop
fadd
insb
es
imul
sti
jb
shll
rolb
ja
scas
test
jne
faddl
dec
dec
jb
pop
dec
dec
cmp
and
adc
dec
sbb
cmp
out
pop
dec
sub
sbb
cmp
mov
lret
shrl
jo
cmpsl
test
ret
ja
js
and
aad
aas
insl
add
aaa
lahf
sbb
repnz
mulb
push
sbb
clc
jnp
lods
xchg
push
test
push
and
xor
dec
cld
test
adc
das
jbe
test
insl
add
xor
scas
rcl
xor
movsl
pop
pop
ss
sub
xchg
ds
sti
ljmp
daa
add
shlb
jl
adcb
jno
xor
scas
ja
jae
and
push
sbb
mov
sahf
outsl
ja
shlb
sub
push
or
cs
sbb
mov
sbb
es
fisttpl
fsts
sub
jbe
sub
sub
xor
popa
fsubr
mov
push
shrb
jno
jno
and
and
push
stc
jae
jg
nop
inc
sbb
cmc
inc
movsl
adc
push
popf
xor
mov
push
stc
mov
pop
notl
repz
sbb
sub
rorb
cli
loopne
in
sub
sarb
in
push
inc
push
shrl
xchg
subb
sbb
pop
inc
xor
inc
sbb
mov
mov
cmpsl
dec
outsb
fdivrl
and
lret
mov
sbb
add
pop
fbstp
fcoms
movsb
jb
mov
arpl
and
les
jmp
sub
es
xchg
pop
xor
push
test
mov
mov
in
jl
sarb
pusha
out
mov
movsb
pop
fistpl
stc
sub
mov
inc
shrb
aam
and
dec
lcall
jbe
lcall
jbe
push
fdivrl
sbb
push
mov
jb
bound
shlb
out
mov
adc
sbb
lock
xchg
push
ss
and
stc
lcall
movsl
or
xor
fimull
cli
sub
xchg
and
cmpsl
add
lahf
jp
inc
xchg
out
push
push
sbb
lcall
add
xor
pop
adc
mov
movsb
dec
jecxz
fs
sub
mov
push
test
rcrb
mov
dec
test
out
sbb
xor
pop
adc
orb
sbb
daa
mov
inc
push
cmp
mov
push
mov
repnz
pop
sbb
jo
inc
mov
xchg
sub
aaa
xor
mov
push
and
pushf
xor
xchg
pop
cmpsb
cs
mov
cmc
arpl
mov
push
push
xchg
add
add
sub
cmpsl
insl
inc
dec
cs
lods
cmpsb
sub
xor
movsb
push
out
jge
or
mov
jno
jg
mov
test
and
stos
jo
dec
and
iret
es
inc
ficompl
shlb
test
sbb
sbb
push
popf
xchg
les
mov
pop
cwtl
in
cmpsl
jg
mov
hlt
ss
lahf
fcoml
rorl
dec
sbb
jl
stos
popa
pop
fmull
das
loop
pop
cmpsb
mov
sbb
data16
sbb
outsb
pop
mov
imul
fbld
les
add
mov
push
dec
push
and
sbb
cmp
cs
mov
mov
testl
mov
jno
lea
sub
jns
dec
popf
push
lret
pop
add
mov
add
xchg
bound
insl
fsubs
xor
out
push
mov
xor
mov
ss
das
or
xor
sub
push
jo
daa
mov
outsl
sbb
jbe
mov
sub
push
dec
jne
dec
test
cmp
outsl
inc
loop
xchg
arpl
arpl
push
push
popf
es
sbb
inc
jae
cmp
sbb
fcmovne
mov
repnz
ss
dec
inc
ljmp
or
aas
push
inc
lcall
sub
jno
jo
and
sub
aam
rorl
and
outsb
sbb
mov
loopne
sbb
jg
lcall
cs
sub
fistps
jns
pop
mov
addr16
test
loopne
inc
lods
fiaddl
xchg
mov
mov
aas
adc
sahf
repz
xchg
and
lcall
inc
mov
push
dec
mov
jnp
aad
sarb
add
xchg
jp
es
inc
stos
cmp
rep
gs
and
cmp
loop
dec
dec
sbb
mov
mov
fwait
fwait
adc
enter
sbb
xchg
sub
popa
xor
pushf
dec
mov
add
int
xor
and
loop
adc
sub
pop
dec
fbld
pusha
mov
mov
lahf
mov
sub
in
adc
cmp
inc
fstps
pop
xchg
fwait
xchg
imul
jmp
enter
ret
and
mov
sub
jl
mov
pop
lods
jl
cmp
stc
ljmp
pop
sbb
mov
push
stos
sti
ficoml
inc
jle
jp
add
xor
cmp
int
and
xchg
pusha
js
mov
jg
and
js
cld
and
clc
pushf
push
cmc
cmp
pop
inc
fmuls
lods
nop
add
and
push
es
pushf
xchg
aas
adc
mov
adc
mov
fs
sbb
jbe
xchg
or
fwait
push
aad
fcoms
push
nop
sub
in
push
inc
inc
negb
jp
out
xor
or
lret
sub
fldcw
push
adc
imul
sar
push
and
xor
mov
cmp
pop
cmp
lcall
inc
ss
fwait
push
sub
inc
lahf
or
and
insb
cltd
push
cmpsb
sub
sbb
cs
adc
cmp
and
sbb
fiadds
repnz
cltd
sbb
pusha
and
adc
ss
pop
cmp
push
pop
hlt
sahf
xchg
mov
pop
test
and
or
cltd
cmp
hlt
cmp
aam
and
sbb
jle
orl
cltd
pop
sub
ret
ror
out
cs
es
les
inc
ja
movsb
sub
cmp
fwait
imul
xor
loop
ja
push
aaa
das
xchg
aam
or
xor
and
xor
sti
inc
shlb
imul
pop
cmp
call
outsb
jnp
push
mov
jo
sahf
add
xor
aad
inc
mov
ficoms
iret
jp
sbb
ficoml
ficompl
lret
int3
pop
dec
inc
in
xchg
pop
out
in
jne
sub
outsb
xchg
mov
mov
sbb
stc
push
cmp
fsubr
cli
inc
cmc
ljmp
cld
xor
mov
and
pop
jo
pop
pop
movsb
xor
and
imul
outsb
cmp
out
fmul
pusha
and
sub
adc
and
inc
popf
push
xchg
sub
sub
xchg
mov
fsubrl
mov
cmpsl
mov
xchg
pusha
push
or
mov
pop
sub
push
sti
jp
pop
movsl
popa
mov
and
pop
cwtl
daa
cmpsl
into
dec
pop
dec
iret
or
ficompl
fildl
popa
in
aaa
xor
pop
pop
shlb
add
cmpsb
push
xchg
movaps
lret
stos
js
pop
mov
jno
push
sub
push
push
fsubrl
push
addl
mov
das
imul
jg
test
push
sbb
lret
sub
ljmp
fistps
insb
xor
and
mov
daa
mov
push
pop
flds
push
xchg
xor
into
lcall
inc
mov
push
jo
clc
mov
pop
inc
test
and
jl
or
popf
in
cwtl
push
and
fisubs
add
int3
js
aas
pop
pop
add
ljmp
xor
lret
sub
mov
mov
xlat
sbb
test
cmpsl
pop
xchg
mov
subb
xor
lcall
and
add
daa
jb
fwait
hlt
add
add
inc
sbb
pop
pusha
jns
mull
dec
cmpsb
xchg
and
sub
xor
inc
faddl
or
push
push
cltd
sbb
or
pusha
outsl
xor
sti
lods
pop
ja
movsl
jge
sbb
inc
lea
xlat
inc
cmp
adc
xor
xor
cli
fstl
sub
add
cs
iret
lret
mov
cmp
mov
push
push
push
fidivrl
pop
popa
jecxz
jp
inc
xor
cs
adcb
inc
scas
xor
inc
inc
into
pop
imul
mov
bound
push
sub
es
aaa
and
push
movsl
imul
ds
mov
sub
cwtl
jns
sbb
sub
jnp
nop
enter
sbb
and
xchg
adc
sbb
adc
xor
cmp
fistpl
sub
xchg
inc
add
fstpt
fnstenv
jno
fdivp
jno
ja
sub
aas
xchg
insl
xchg
stos
lcall
pop
test
movsl
das
es
daa
mov
push
xchg
cmp
sub
mov
cwtl
and
cwtl
clc
sub
inc
xchg
sbb
cltd
outsl
lds
dec
jns
scas
sbb
das
cli
sbb
fbld
movsl
sub
xchg
vphsubdq
sub
fistpl
add
mov
or
pop
jbe
pop
mov
mov
clc
es
jg
pop
adc
and
inc
mov
outsb
mov
cmpl
mov
jno
cli
xor
adc
push
aas
and
scas
jle
dec
int3
jns
outsl
pop
ss
sub
je,pn
push
push
adc
xchg
pop
pop
push
sbb
popf
mov
sarb
jp
and
jb
push
call
xchg
and
xor
lahf
lcall
addr16
lcall
push
pop
or
adc
and
and
adc
add
gs
add
gs
xchg
daa
mov
arpl
cmp
sarb
sub
pop
sbb
jl
add
jo
inc
jl
sbb
ds
cwtl
es
cmp
cmp
mov
pop
cmp
sbb
loopne
xchg
sbb
jns
sbb
dec
sbb
inc
push
insb
shrb
dec
test
sub
cmpsl
rcr
sub
xchg
ret
cld
imul
inc
sub
sbb
cmp
pop
push
lret
pushf
and
jmp
fcomps
sbb
jno
cltd
movsl
cmp
dec
cmp
test
mov
add
and
shr
and
fbstp
lcall
roll
push
out
jbe
sbb
les
ja
ja
loope
jne
xor
stos
or
mov
inc
mov
sbb
stos
jne
sbb
xchg
cmpsb
mov
mov
es
pushf
aam
sub
bnd
mov
dec
cmc
push
and
es
testl
jo
jmp
mov
fdivrl
imul
test
pop
push
mov
daa
in
mov
and
or
inc
dec
mov
sbb
in
lahf
cs
mov
xchg
sub
dec
inc
mov
ficompl
push
sub
lcall
cmp
bound
push
adc
data16
mov
int
cmp
jae
mov
mov
add
push
scas
cmp
divb
daa
push
sbb
in
xor
pop
lcall
lcall
sbb
js
int
loop
loope
xor
rolb
mov
je
shr
aad
xor
pop
sbb
sbb
into
aam
jns
ficoml
xor
inc
out
and
xchg
adc
fcmovnb
outsl
xchg
loop
test
mov
int
hlt
push
jo
lock
dec
test
movlhps
push
xor
xchg
aas
ljmp
aas
and
mov
xor
aas
test
ret
sarl
cmp
es
sbb
aad
jns
add
adc
cmp
subb
pop
aas
loope
in
push
and
pop
dec
dec
addr16
cli
pop
sbb
push
and
jae
push
stc
xchg
sub
fldt
xlat
aad
movsl
push
xor
sbb
out
outsb
lret
and
inc
stos
mov
cmp
pusha
add
bound
ds
aas
bound
sub
xor
rcrl
fwait
add
inc
fwait
nop
jne
adc
push
mov
lahf
fiaddl
and
jae
add
cmp
test
mov
mov
test
sbb
sbb
xchg
sbb
popa
outsb
dec
roll
scas
fs
or
movsb
ss
icebp
cs
flds
cltd
pop
inc
and
movsl
insl
xor
push
sbb
call
pop
and
cmp
ret
fidivrs
sbb
cmp
fimuls
jb
repnz
repz
outsb
repnz
clc
sub
cmp
pop
mov
mov
divb
mov
fbstp
dec
and
andb
addr16
pop
adc
mov
push
pop
mov
dec
dec
out
enter
jnp
fistpl
pop
incb
mov
sbb
test
out
mov
push
xor
dec
imul
mov
and
andb
sub
sbb
lahf
cmc
or
les
cmp
push
fsubr
pop
cmovp
push
cmp
add
out
inc
sbb
xchg
daa
cmp
mov
cmp
add
mov
pop
push
imul
push
add
popf
push
mov
sahf
hlt
pop
pop
jle
iret
mov
repz
fisubrl
iret
cmpsl
push
fiaddl
xchg
pop
das
push
mov
add
stos
lret
pop
pushf
xor
idivl
sub
pop
inc
idivb
aam
pop
xchg
jo
xchg
movsl
outsl
cltd
jno
movsl
pop
and
fstps
sbb
call
ret
test
jp
push
jmp
sub
sub
sub
mov
inc
shrl
xchg
pop
add
add
inc
outsl
in
outsb
dec
pop
pop
and
pushf
addb
add
loop
and
das
and
push
loop
pop
and
and
jmp
and
aas
clc
cld
jecxz
hlt
stc
sbb
and
sub
pop
adc
mov
add
jmp
pop
test
pop
mov
filds
sub
pop
lock
sub
sahf
push
inc
mov
mov
pop
adc
iret
xor
fsubl
sbb
pushf
cmp
cmpb
sbb
mov
pop
iret
inc
mov
mov
mov
mov
idivb
add
and
ljmp
mov
or
push
pop
dec
sbb
outsl
test
add
out
pop
lods
clc
sahf
cli
jno
hlt
and
fmul
imul
xchg
jb
mov
les
sbb
add
push
xchg
mov
lahf
sbb
xor
push
and
sarb
ss
and
xchg
sub
jge
sahf
mov
add
xor
mov
and
add
push
es
lods
js
call
dec
adc
bound
shrb
sbb
aad
xchg
xor
sbb
dec
lret
pushf
push
es
sbb
daa
pop
pushf
lret
inc
cmp
push
cs
mov
dec
jno
aaa
cmp
mov
pop
loop
mov
and
mov
mov
arpl
dec
and
and
pop
lods
xor
jbe,pn
and
icebp
outsb
nopl
adc
sbb
and
sbb
xchg
and
jo
nop
lods
pop
push
adc
inc
push
push
nop
cmc
in
imul
and
arpl
add
cmp
and
jle
movsb
les
add
sub
push
sub
or
pop
push
insl
out
add
mov
es
sbb
das
mov
inc
or
and
scas
push
loopne
add
mov
sbb
mov
fdivrs
xor
cs
add
jae
lock
sbb
xor
xchg
add
pop
iret
sahf
outsb
ljmp
sbb
xchg
push
loope
nop
xor
and
push
mov
scas
and
jb
cmp
in
xor
sbb
mov
in
push
jo
ljmp
and
mov
xor
push
lds
mov
xor
pushf
push
rcl
sub
pusha
xor
pop
out
xor
lods
mov
xlat
ja
movsl
xchg
mov
call
ret
dec
pop
xchg
jne
or
movsl
pop
sbb
fildl
adc
sti
and
inc
pushw
xlat
hlt
dec
or
sbb
and
and
add
je
idivl
mov
sub
enter
push
or
push
mov
and
mov
cli
cmpsl
xchg
or
inc
daa
in
sbb
sub
pop
and
jo
sbb
sub
ja
jae
jg
mov
popf
je
cmp
sti
cmpsl
call
lahf
fcmovu
rcrb
and
and
hlt
gs
inc
dec
iret
mov
stc
push
or
into
sub
js
jmp
enter
lea
movsl
enter
jo
fs
add
sbb
xchg
and
fstp
jbe
lock
mov
ficompl
add
mov
sbb
push
and
int
inc
or
sub
pop
push
mov
mov
pop
dec
in
enter
daa
mov
dec
movsl
js
cmp
adc
and
xor
push
lahf
stos
or
pop
xlat
sub
xchg
xlat
push
push
cltd
and
sub
mov
push
pop
jl
stc
sub
add
pop
jae
push
inc
mov
sbb
push
sub
push
out
sbb
lahf
dec
ror
loope
jb
pushf
shrl
pop
sub
add
aad
xchg
pop
imul
enter
stos
imul
sbb
cli
mov
test
insb
push
sbbb
inc
sbb
adc
xchg
stos
xchg
adc
sbb
into
and
pop
stc
pop
imul
insl
push
aas
jo
mov
jno
push
ss
sbb
adc
fcoms
nop
xchg
push
das
ret
pop
mov
lret
adc
cs
push
sbb
sub
push
pop
push
shr
imul
test
dec
push
daa
int3
lcall
les
or
shll
mov
add
push
mov
js
xor
lret
sbb
lods
inc
xchg
cmp
cmpsb
sub
pusha
mov
aad
in
inc
movsb
cmp
mov
jp
push
lahf
jl
dec
mov
sbb
sub
pop
and
dec
mov
lcall
jg
fdivr
out
adc
sub
test
and
std
sub
sbb
test
jb
add
rclb
mov
pop
add
xchg
inc
fidivl
icebp
cmpsl
jbe
xchg
outsl
jl
cmp
dec
mov
fwait
pop
jno
std
imul
sub
leave
mov
mov
mov
dec
adc
or
mov
shlb
sbb
cs
cltd
loope
fcomp
shrb
gs
jle
mov
ljmp
dec
xchg
or
pop
push
pushf
into
scas
xchg
cld
xor
fnstenv
nop
das
lcall
sbb
cmp
cmp
jns
mov
add
sbb
mov
ss
mov
pop
jbe
into
je
cmp
sbb
push
cmpsl
mov
ljmp
cmp
jne
xor
fadds
ss
pop
fistpl
mov
imul
mov
je
shlb
fsubl
inc
mov
pop
sti
int3
mov
js
lret
ja
and
push
xchg
or
xchg
add
outsl
rcr
fdivl
jp
inc
iret
push
and
mov
and
das
sub
adc
xor
mov
cld
pop
je
mov
mov
pop
and
out
xor
mov
or
push
ret
sbb
inc
lahf
dec
push
repz
or
and
mov
inc
lock
insl
mov
loop
and
cwtl
sbbb
out
sbb
add
test
inc
subl
pop
repz
popf
fucomp
sbb
pop
adc
add
xchg
and
cmp
xor
orb
cmp
sbb
add
pop
mov
mov
sbb
or
je
and
sub
lcall
data16
mov
and
mov
or
xchg
xor
lock
cmp
add
cmpsl
jae
inc
or
pop
mov
pop
push
jb
mov
sti
xor
xor
add
sbb
lds
pop
imul
pop
outsb
xchg
call
ja
adc
test
addr16
adc
pop
test
sbb
loopne
push
mov
lahf
push
cmp
cltd
fwait
xchg
adc
pop
mov
lock
xor
adc
sbb
mov
mov
and
or
cs
sub
das
das
xor
sbb
adc
or
sbb
addr16
add
daa
xor
ss
or
xor
add
fwait
add
dec
mov
aas
pop
imulb
repz
mov
inc
adc
je
aas
cmp
aas
insb
xchg
ds
xor
sub
xchg
add
and
adc
movsb
pop
adc
jbe
mov
test
test
jmp
inc
imul
popa
pop
rcl
dec
cmpsl
mov
xchg
dec
sub
lret
daa
mov
dec
bound
pop
sbbb
cmpsl
push
xchg
fldl
sbb
imul
sbb
stos
fs
inc
add
repz
lcall
and
fimull
cmpsl
outsb
dec
sbb
movsb
pushf
and
xlat
inc
lcall
popw
dec
jae
sub
lret
mov
ficompl
subb
sahf
adc
mov
cmp
sub
push
testl
outsb
inc
cmp
mov
and
ss
sbb
mov
aas
dec
push
add
aaa
pop
out
or
inc
and
repz
jmp
xchg
nop
push
loope
pusha
repnz
repnz
push
push
push
fidivrs
cmp
add
cmp
push
xor
inc
shrb
lcall
jnp
pushf
mov
mov
dec
pop
push
jb
xchg
incb
adc
out
dec
adc
fwait
add
push
sub
cmpsl
cs
outsb
aam
popf
rorb
cltd
and
cmp
rcrb
pop
dec
dec
ja
push
iret
subb
xor
aaa
inc
jo
scas
adc
sbb
inc
test
repz
insl
mov
push
mov
sbb
xor
mov
pusha
push
call
movsl
mov
sbb
ficomps
and
sub
cmp
aas
cmpl
mov
push
xor
mov
loop
sub
push
dec
mov
xor
fdivrs
inc
je
out
and
aad
addr16
cltd
mov
fisubl
sbb
push
aas
gs
add
lcall
orps
and
mov
push
pushf
das
loopne
xchg
aas
or
repnz
sbb
testb
pop
sbb
cmp
repnz
jmp
rorb
mulb
cmp
es
sbb
into
bound
loopne
sbb
test
ret
pushf
lret
hlt
jbe
add
out
and
daa
add
inc
test
jne
add
dec
sti
idiv
movsl
xor
adcb
loope
xor
lods
mov
cmc
pop
and
pop
repnz
add
xor
dec
lock
inc
add
cld
mov
dec
insl
aad
fisubrl
nop
cli
add
mov
pop
cltd
aad
out
test
xor
inc
inc
and
jno
cmp
pop
call
jle
pop
sbb
mov
out
nop
fwait
push
popf
jp
and
sub
jge
pop
pushf
push
sbb
scas
mov
fstpl
and
mov
sub
sub
dec
pop
iret
jp
push
ret
fstps
jns
pop
jno
sub
cmp
mov
and
pop
cmp
movsb
jp
fisubs
arpl
fidivrl
cs
imul
add
pop
or
sbbl
add
xor
cs
xor
aas
loope
ja
inc
sub
pop
js
sbb
loopne
xor
xor
cmp
fsubrl
rolb
subb
or
xchg
cltd
pop
sbb
sbb
enter
mov
sbb
mov
in
push
ja
mov
dec
aas
inc
pop
sub
push
push
in
mov
test
stc
mov
mov
mov
jg
dec
and
adc
mov
cld
fiaddl
xchg
dec
cmp
adc
test
and
and
sbb
add
sahf
jns
cs
frstor
mov
pop
outsl
pop
insb
dec
es
sbb
and
call
sbb
xchg
insl
insl
and
lea
inc
lcall
jecxz
mov
push
repnz
xor
pop
xchg
inc
jo
gs
push
jp
xchg
xor
push
jnp
dec
and
fnstenv
into
lahf
movsb
sahf
and
mov
lds
bound
add
sbb
sbb
mov
cmc
push
xor
and
cmp
js
sub
sbb
shrl
xchg
mov
icebp
daa
mov
in
outsb
push
and
adc
sub
xor
shrd
push
and
into
lahf
mov
aad
stc
push
loope
push
mov
or
subl
and
stos
pop
ret
sbbl
enter
popf
adc
fldenv
sbb
cmpsl
cli
push
roll
cmp
mov
cs
movsl
dec
or
xor
cltd
sbb
cmp
add
rcr
add
xchg
mov
sbb
xchg
jl
push
push
das
dec
pop
lcall
imul
addr16
pop
es
lret
lret
dec
mov
movsb
cwtl
mov
mov
sti
cmp
lret
cs
cmp
cltd
pop
adc
xor
cmp
push
movsb
xchg
or
es
stc
cmp
sbb
sbb
pushf
push
cmp
inc
aad
jno
and
push
mov
fwait
add
daa
out
xor
iret
jg
and
xor
pop
andnps
enter
sub
adc
loopne
jecxz
pusha
and
mov
hlt
add
dec
adc
xor
and
sbb
fisttps
movsb
cmp
shll
mov
sbb
filds
sbb
jns
int3
arpl
mov
ja
fwait
addr16
pop
insb
mov
sbbb
and
das
pushf
lea
jp
and
jmp
je
inc
push
paddusb
xchg
pop
icebp
mov
ljmp
add
sub
test
mov
push
inc
adc
cmp
lds
xor
xchg
cwtl
xchg
or
in
push
test
sbb
push
sbb
out
repnz
cs
leave
mov
xor
mov
sub
push
lret
sbb
test
inc
sbb
or
push
pop
push
xor
dec
cmp
cmp
adc
cli
sub
pop
outsb
add
xor
mov
dec
pushf
pop
sbb
jge
inc
push
cmp
repnz
pop
or
js
xor
fisttpll
repnz
popa
sbb
push
inc
lods
outsl
xor
pop
xor
jne
je
and
pop
pop
mov
aas
andl
sub
ficompl
sbb
test
xchg
call
imul
lock
xchg
mov
popa
jne
and
popa
push
dec
or
jae
pop
test
dec
adc
jns
jne
loop
xchg
fldl
mov
sbb
lods
stos
inc
mov
xchg
lea
icebp
sbb
sbb
ficomps
pop
adc
xchg
les
and
lret
aaa
sbb
mov
pusha
and
sbb
jnp
loop
popa
cmp
push
mov
jo
int
fsts
jne
jo
fcmove
jns
add
movsl
int
jno
lods
mov
arpl
sub
push
jb
sbb
bound
fistpl
lahf
pop
mov
cmp
lcall
daa
sbb
leave
push
push
testl
or
add
adc
xor
lret
pop
cmp
adc
sub
jg
mov
lret
stos
push
jae
aad
out
push
pushf
sbb
mov
jp
lret
xchg
stos
push
and
adc
cmp
push
clc
mov
int3
insl
outsl
lret
bound
push
push
push
and
out
call
add
cmp
sub
hlt
push
scas
and
test
jno
jp
cmp
push
les
dec
loope
sbb
cmp
cmp
mov
sub
repnz
cmp
mov
sub
and
jmp
and
mov
imul
and
test
rcrl
push
push
pusha
enter
cmp
sbb
sub
xor
sbb
scas
dec
push
sub
shll
mov
or
sub
sub
ds
sbb
andl
dec
jge
pop
std
add
sub
sahf
inc
imul
jp
xor
inc
pushf
xor
mov
xchg
jg
jnp
arpl
out
and
jb
pushf
mov
dec
or
ret
insl
shrl
or
mov
pop
push
sbb
or
xorl
fabs
outsl
dec
jmp
and
mov
and
cmp
sub
mov
xchg
lret
repnz
sub
push
mov
cwtl
sbb
xor
and
dec
cli
sub
popa
jl
in
pop
movsl
movsl
cmp
pop
ficompl
sbb
sbb
sbb
sbb
lahf
aas
shlb
addr16
inc
leave
sub
sbb
push
repz
aad
ret
mov
xchg
pop
jp
call
out
sub
in
cld
inc
push
mov
aas
push
mov
push
test
nop
movsl
xchg
mov
lds
sub
mov
and
dec
push
nop
mov
cmc
mov
sub
xor
addr16
xchg
cli
movsb
jb
rcll
lock
or
pop
mov
daa
cmp
call
inc
jnp
lea
test
mov
out
ss
and
xchg
sub
popa
dec
pushf
push
mov
pop
adcb
mov
insb
out
popf
repnz
dec
push
andl
cs
insl
arpl
roll
dec
aas
into
fs
xor
imul
pop
ret
rcll
ret
and
pop
leave
dec
lret
mov
pop
lods
lods
sub
scas
push
rolb
mov
test
mov
lcall
leave
cmp
icebp
sub
sub
jg
pop
add
les
jle
out
and
ja
insl
and
clc
lret
jbe
sbb
cmpsb
into
adc
adc
insb
cmp
xor
mov
cmovbe
sbb
cltd
fisubrl
cmpsl
lahf
mov
lcall
orb
mov
and
sub
jns
sub
call
mov
lock
inc
push
pop
fisttpl
push
add
mov
mov
arpl
lea
lret
in
xchg
int3
push
mov
shll
in
mov
xor
addl
cli
or
dec
push
mov
xchg
in
jb
push
push
jne
mov
pop
jae
push
imul
pop
xorl
push
sub
call
clc
xchg
push
rol
clc
inc
and
push
add
cmpsb
push
sbbl
xchg
push
outsb
pop
add
sub
jno
mov
xor
push
jae
or
cmc
jbe
push
adc
adcb
dec
fimuls
lods
das
cmp
mov
scas
movsl
mov
mov
lcall
lods
aad
dec
out
and
sub
ljmp
aam
add
xchg
popf
int
icebp
cs
push
jo
cmp
pop
cld
test
add
cld
pop
pusha
mov
dec
leave
es
xchg
aad
lods
les
jmp
lret
xor
inc
test
fbstp
sbb
or
pop
cmp
xchg
sub
or
jecxz
mulb
or
mov
mov
mov
sarb
mov
int3
pop
or
movswl
jge
clc
mov
pop
mov
scas
and
cmp
test
mov
jl
test
and
jae
xor
pop
push
add
push
aam
movsl
xor
rcrl
hlt
imul
aad
dec
sub
pop
push
scas
sub
flds
cltd
cmp
inc
sbb
xor
fbstp
cmp
lret
sub
cmpsl
insl
mov
and
test
adc
cmp
fstpl
pop
xorl
jne
jg
js
icebp
sysret
jb
jnp
xlat
add
sub
roll
les
rcrb
shrl
stos
jns
cmpsl
lahf
mov
leave
xorl
jp
cltd
scas
or
pop
shlb
test
lret
jns
or
xchg
out
xchg
add
stos
std
mov
adc
lods
mov
outsb
cltd
or
dec
xchg
das
push
rclb
pop
fwait
add
and
pop
xchg
clc
dec
xor
mov
insl
mov
ficompl
orb
test
xor
outsb
sub
inc
push
xchg
insb
shll
rorb
cmp
nop
sub
divl
xorl
xor
jae
dec
lods
xor
dec
inc
scas
inc
call
jo
inc
and
mov
das
xor
mov
dec
rcrl
mov
jmp
and
adc
clc
leave
add
mov
in
or
adc
inc
out
repnz
mov
gs
push
jb
testb
dec
sbb
pushf
pop
popa
xor
pusha
loope
dec
out
frstor
xor
xlat
out
jno
pusha
iret
cmp
sahf
leave
xor
loop
xor
fnstcw
mov
leave
mov
add
addr16
ljmp
or
in
jle
setg
call
rep
xchg
outsl
sti
lahf
jb
or
cmp
dec
and
push
xor
push
xchg
imul
cmp
add
rcll
pop
imul
sub
sbb
xor
test
mov
dec
adc
mov
fnsave
inc
outsl
jnp
dec
cmc
loope
dec
cmp
push
sbb
xchg
les
subb
jmp
sub
mov
and
insb
negb
pop
xchg
sbb
and
push
ljmp
leave
sub
add
or
ss
sub
dec
add
pushw
std
or
cli
push
pop
dec
out
and
pop
pop
mov
add
out
cmp
fmul
out
push
in
push
aam
aam
mov
notl
xor
iret
ret
and
or
add
or
push
adc
clc
scas
std
cmc
repnz
lock
shl
std
jmp
mov
or
dec
or
dec
cwtl
mov
ds
test
inc
add
aam
pop
add
out
lret
fcmovu
je
out
jecxz
aam
loope
loopne
push
pop
imul
subl
mov
mov
push
add
mov
lods
stos
mov
xorl
das
inc
inc
push
scas
xchg
ja
das
and
jns
xchg
add
jne
push
push
push
mov
jns
subb
mov
pop
dec
jae
adc
jae
jge
ss
imul
ss
cmc
imul
popa
push
int3
lahf
or
sahf
inc
dec
sbb
mov
out
int3
dec
dec
cmp
movsb
or
fcomi
mov
ss
sahf
cli
imul
sub
pop
lret
xchg
adc
sbb
or
test
mov
inc
cltd
cwtl
lsl
ror
lds
cmpsl
dec
cli
cli
pop
imul
pushf
sub
out
data16
jmp
sahf
xchg
fidivrl
ljmp
xor
xchg
rcr
rcrb
popf
lret
les
jle
enter
xchg
mov
jo
cwtl
mov
and
xchg
xchg
adc
subl
fs
pop
sub
movsl
cltd
cmpsb
pop
icebp
mov
push
add
mov
mov
push
shrb
inc
cmp
cmp
call
jno
mov
inc
cs
repz
fs
lods
out
outsl
sbb
std
gs
push
mov
sti
or
cmp
and
mov
fistps
rcll
inc
inc
inc
dec
sbb
mov
dec
int3
sbb
adc
push
popf
inc
adc
das
ljmp
loope
sbb
sbb
sbb
jp
fiadds
out
adc
add
aad
flds
iret
in
cli
shl
out
or
cmc
aad
movsl
out
pop
jl
call
lret
aam
fmuls
add
mov
xchg
test
lods
sahf
stos
pop
popa
jmp
inc
pushf
push
pop
aaa
xchg
mov
push
add
inc
cmp
jl
dec
sbb
cmp
jnp
dec
aaa
ja
ret
cmpsl
cmp
mov
mov
xor
cltd
sub
add
pop
push
sub
sbb
push
pop
pop
pop
in
insl
fstl
aaa
push
xor
cltd
fldt
imull
in
fisttpl
sbb
cmc
mov
stos
adc
mov
lahf
push
iret
jecxz
dec
mov
jg
or
mov
push
mov
jnp
push
test
lds
push
sbb
xchg
mov
ret
mov
std
inc
outsl
sub
pushl
les
pop
sbb
pop
jg
inc
out
cld
dec
pop
pusha
lahf
lds
xor
popa
mov
and
xchg
shl
and
test
adc
jl
pop
pop
in
mov
cmpb
loop
imul
lcall
inc
push
ds
push
inc
dec
xchg
xchg
test
jbe
xor
jp
and
mov
rcrl
xchg
push
xchg
xchg
jns
ljmp
stos
repnz
pusha
daa
aas
daa
jo
ja
call
sub
fs
adc
xor
les
cltd
out
movb
repnz
pop
stc
arpl
vmread
loope
int
jns
jecxz
add
jne
lcall
dec
cmpsl
out
fstpl
int
jg
pop
xchg
pusha
aam
and
les
inc
js
mov
andl
call
push
mov
cltd
xchg
mov
or
or
lods
sti
jp
sub
pop
sbb
insb
xor
and
jae
xchg
ds
and
push
pushf
aam
les
ss
cmp
sbb
jg
sub
jae
aam
cmp
loopne
and
add
scas
mov
or
and
icebp
icebp
cmp
inc
mov
sahf
pop
jbe
push
mov
mov
adc
fs
insb
cmp
ficomps
sub
pop
mov
out
cmp
cld
daa
push
push
cmp
mov
sub
sbb
cmp
pop
pop
push
or
ret
mov
inc
push
add
push
movsl
jmp
lock
insb
aam
and
scas
in
add
leave
adc
pop
or
xor
clc
mov
into
cmp
cltd
addr16
shrb
cmpsl
cmp
mov
xchg
dec
push
ficomps
adc
jae
jg
rclb
js
inc
pop
lods
dec
sbb
ficompl
aas
sahf
dec
in
or
lahf
scas
fwait
mov
add
js,pt
movhps
pop
les
dec
or
int
push
jbe
or
sti
sub
lret
lcall
add
mov
es
push
cltd
and
mov
dec
cwtl
jbe
xlat
popa
fwait
push
pop
rolb
jns
jle
mov
lods
push
frstor
mov
inc
ljmp
xchg
inc
adc
popa
lret
mov
pop
xor
or
mov
push
dec
lds
std
ret
scas
testl
das
push
leave
push
xor
xor
daa
call
pop
frstor
loopne
and
push
int3
xlat
add
cmp
std
into
mov
xchg
movsb
stos
mov
js
push
push
popf
xchg
jl
and
bound
jg
push
divl
lahf
push
insl
insb
pop
pop
sbb
sub
xchg
cmp
inc
cmc
ret
push
mov
xor
mov
adc
push
xlat
push
dec
jns
mov
and
cmp
in
cmp
xor
inc
dec
add
sub
es
or
rorb
push
repz
push
in
aad
inc
dec
add
bnd
inc
stos
lock
cmp
scas
cmp
lcall
das
lcall
cmp
je
je
imul
sbb
arpl
mov
sbb
orb
or
mov
divb
filds
sub
clc
xchg
sbb
sub
adc
shl
cmp
out
sub
loop
xor
das
cmp
rcrl
mov
ja
repz
ljmp
test
mov
je
rcrl
out
loope
xchg
in
or
mov
fldenv
mov
jns
xor
sub
xchg
inc
adc
pop
clc
dec
call
and
add
std
icebp
add
clc
mov
ljmp
sbb
push
inc
push
test
cmpsb
cld
out
mov
push
mov
push
lods
dec
loop
pop
cs
adc
push
cmp
add
or
xor
mov
mov
xchg
shrb
mov
or
push
imul
imul
or
mov
sub
lea
jno
into
int3
cwtl
pop
into
lea
pop
lods
mov
lods
lods
mov
icebp
cld
add
hlt
mov
mov
lods
sar
mov
repnz
add
add
lods
mov
stc
cld
cld
icebp
scas
or
neg
iret
mov
mov
roll
mov
cld
inc
lods
mov
mov
lret
mov
out
cmpsb
data16
cli
cwtl
sub
clc
movsb
faddl
push
sti
out
sbb
div
cli
std
iret
lret
adc
add
pushf
cmp
incb
xchg
inc
mov
add
fwait
repz
fcmove
mov
mov
cmp
sti
hlt
adc
add
out
add
lahf
lcall
fwait
add
jmp
data16
jno
in
push
mov
sti
add
stc
imulb
out
push
cmp
loop
mov
add
cli
cld
add
insb
cmpsb
repz
idiv
cld
sti
mov
stc
aam
out
cld
movsb
mov
loopne
fst
fnstsw
jge
fucomi
sbb
mov
sbb
icebp
mov
xchg
lcall
lea
push
addr16
fsubrs
aam
shll
nop
cmp
mov
xchg
mov
repnz
xchg
repnz
mov
sarb
shr
xchg
and
jns
mov
gs
cltd
jns
ljmp
shr
call
add
ljmp
add
ljmp
add
ljmp
add
ljmp
add
ljmp
add
ljmp
cmpl
pop
mov
data16
inc
dec
nop
in
mov
enter
arpl
seto
mov
rclb
jns
nop
movsb
in
mov
lea
mov
enter
arpl
seto
mov
fwait
lds
add
in
nop
inc
lea
nop
ljmp
nop
mov
mov
hlt
xchg
mov
movsb
and
iret
inc
xchg
stc
fisubrs
lea
and
shl
frstor
mov
dec
xchg
lock
loope
cwtl
mov
out
dec
dec
xchg
lock
loop
lods
mov
nop
out
xchg
stc
sti
fcoml
lea
dec
cwtl
xchg
xchg
sbb
jns
mov
jns
xchg
mov
xchg
out
adc
loopne
pusha
mov
rorl
mov
arpl
test
nop
cmp
xchg
inc
aad
out
xchg
stc
sti
xlat
nop
aas
notl
nop
clc
repnz
lea
nop
stc
pop
xchg
lock
nop
enter
adc
imul
mov
xchg
scas
adc
out
pushf
mov
in
fmuls
lock
rolb
nop
lock
sub
xchg
mov
mov
fistl
fiaddl
nop
cli
and
nop
mov
fwait
dec
js
mov
fwait
dec
js
mov
adc
sub
pushf
insb
rolb
xchg
movsl
fdivrl
jns
fucomi
xchg
and
xchg
inc
fdivr
mov
mov
call
dec
xchg
cli
lea
jp
xchg
jns
fsubr
xchg
shrl
call
xchg
mov
jge
mov
shr
xchg
lcall
xor
js
adc
fldl2e
xchg
xlat
pop
int
adc
shr
xchg
scas
dec
fucomi
xchg
cmpsl
pop
int
flds
xchg
cmpsl
pop
mov
xchg
rclb
loope
adc
fsub
fstpt
sbb
push
push
lods
or
mov
adc
cli
in
ljmp
clc
in
mov
aas
sub
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
jns
mov
ss
push
push
ds
pop
or
loope
and
sti
ljmp
out
daa
adc
push
mov
dec
mov
repz
and
add
aas
stc
movsl
in
movsb
rcrb
cmc
cmp
cmp
ficoms
imulb
add
lods
dec
rcrb
sbb
nop
inc
sarl
idiv
lea
movsb
shrb
mov
shr
scas
cltd
mov
mov
sarb
mov
ror
scas
cltd
mov
mov
shrb
add
cmc
lea
movsb
shrb
mov
shr
scas
cltd
mov
mov
sarb
mov
ror
scas
cltd
mov
mov
shrb
icebp
cmp
push
movsb
xchg
icebp
scas
scas
sbb
cmpsb
mov
icebp
jmp
sbb
cmpsb
mov
sbb
cmpsb
lret
int3
scas
sbb
cmpsb
or
mov
and
cltd
mov
mov
cmc
mov
lcall
mov
fwait
pop
dec
movsb
inc
mov
icebp
mov
gs
scas
cltd
add
jg
push
sti
xchg
cmp
cmpsb
mov
mov
sub
fsubl
add
fsubs
lea
movsb
pushf
cld
std
push
bnd
mov
lods
lods
fdivrl
add
push
movsb
loop
loopne
inc
dec
inc
into
loopne
loopne
pushf
std
out
inc
push
mov
ret
nop
mov
fldenv
cld
cli
lods
lods
mov
movsb
inc
loopne
or
clc
div
adc
loope
test
rcll
fcoml
sti
imulb
sti
inc
lock
fdivrs
mov
std
div
idiv
das
xchg
jb
xlat
stc
in
jmp
adc
push
lods
mov
loopne
dec
rcl
aas
ljmp
loopne
cld
lock
scas
and
out
pop
pop
shlb
js
call
repz
mov
or
outsl
xchg
jne
js
std
pop
out
es
jnp
lds
xchg
mov
adc
lahf
mov
lahf
sti
subb
decb
mov
aaa
cmp
cmp
repz
lahf
movsl
test
movsl
jp
xchg
and
and
push
push
jmp
sbb
mov
es
lahf
loop
push
push
mov
xchg
mov
cmpsl
add
mov
dec
sbbb
mov
push
push
push
dec
xchg
xor
nop
bound
mov
push
lea
andb
jnp
sub
cli
mov
call
push
pop
lahf
imul
outsb
daa
fstps
js
daa
mov
aaa
fstpl
shll
mov
iret
and
push
in
and
shlb
mov
das
adc
push
lahf
push
mov
rorl
adc
lahf
mov
push
dec
addr16
inc
insb
lea
hlt
mov
ror
in
add
push
xchg
add
das
mov
sbb
rolb
lea
int3
je
xlat
daa
or
adc
mov
ja
daa
jp
dec
negl
lahf
sbb
mov
pop
pop
push
lahf
xor
andb
push
mov
std
dec
xchg
push
lahf
loope
insb
cld
sub
aad
addr16
in
arpl
int3
push
in
sub
lahf
adc
sbb
cmpsl
in
and
andb
or
and
repz
repnz
sub
jp
or
mov
add
mov
aaa
out
popf
imul
out
pop
mov
inc
xchg
cli
fs
xchg
out
aam
or
inc
cli
stos
dec
test
popf
sub
cs
pop
xor
mov
insb
inc
inc
pop
mov
adc
or
mov
jnp
pop
add
shl
mov
into
ret
in
push
cmp
sahf
push
fcoms
out
sahf
movsb
fldl
hlt
mov
push
js
xchg
mov
mov
es
or
lcall
jp
ret
mov
cld
xchg
bound
cmpl
insl
movsb
sbb
test
push
inc
mov
iret
inc
sahf
mov
test
leave
test
push
cld
ja
addb
es
fisttps
iret
decl
cmp
xchg
test
aam
sarb
in
fistpll
aam
into
fisubrl
movsb
fxch
fildl
adc
iret
sub
add
hlt
dec
out
std
fwait
or
mov
fidivl
mov
clc
mov
lods
movsl
add
add
sbb
rcll
mov
mov
xchg
sahf
dec
xchg
in
fadd
popa
popl
inc
fcomps
lret
and
xchg
insl
xchg
enter
out
cmp
add
lea
push
xchg
inc
sbb
lea
ret
dec
stos
mov
data16
lods
addr16
in
sub
pushf
ja
push
lea
lea
xchg
lea
lods
mov
aad
push
shrl
cmpsb
testl
test
addl
hlt
loopne
xchg
fucompp
jg
add
insb
jmp
mov
out
inc
mov
lds
mov
test
lea
shrb
in
cld
lock
inc
xchg
nop
inc
andl
fwait
lea
mov
mov
mov
stc
cmpsw
add
pusha
std
lea
lock
sub
sbb
popf
out
gs
test
loope
mov
lock
scas
jmp
rcr
lcall
vunpcklps
popf
inc
popf
out
adc
mov
cmpsb
cltd
ds
sahf
sub
mov
in
ljmp
sahf
sub
mov
aas
in
pop
sbbl
sub
cmp
lea
dec
lds
push
jns
sub
xchg
pushf
and
or
int
mov
fcoms
lea
sahf
mov
call
push
popf
test
sub
mov
adc
maskmovq
notl
inc
jnp
mov
dec
lock
lods
hlt
mov
inc
lcall
gs
or
movsl
sti
xchg
std
lods
or
pushf
mov
mov
stos
adc
dec
or
pushf
mov
das
pushf
into
xchg
lea
adc
xchg
dec
mov
cmp
in
xchg
jae
dec
xchg
repnz
mov
dec
lods
call
add
add
xchg
inc
cmpsb
mov
and
sar
fisttpl
aad
mov
std
cmpl
leave
lahf
mov
lret
add
inc
lock
inc
shrb
lods
pop
lea
lea
lea
lods
cmc
cld
lods
in
fdivrp
jne
jl
lret
lret
lods
repnz
mov
xor
add
lods
mov
lahf
or
add
add
cmp
lcall
sahf
in
jmp
std
lock
xchg
pop
mov
xor
add
or
testb
test
stc
cld
in
lea
repz
lea
sbb
mov
dec
jge
sub
and
fs
in
jb
nop
or
xchg
pop
movsb
xchg
and
mov
pop
shl
cmp
add
jmp
test
std
cwtl
int3
fmuls
jmp
jmp
mov
mov
pop
sahf
xor
xchg
stc
xchg
incl
push
rolb
xor
pop
cld
nop
sbb
clc
das
dec
rol
aas
nop
pop
dec
mov
mov
pop
lea
repz
inc
xchg
dec
cwtl
stos
push
mov
lcall
lods
inc
push
add
cmp
adc
aad
cmp
aaa
aad
add
fisubrs
mov
lods
cmpsb
mov
fs
xchg
xchg
pop
faddl
lods
mov
lea
xchg
nop
dec
repz
xchg
xor
cmp
cmpsb
cltd
inc
sahf
adc
std
mov
and
or
fnstsw
je
dec
lea
cmp
in
lea
ror
xchg
test
push
movsb
nop
or
mov
jns
adc
mov
lret
xchg
xchg
aad
add
cltd
lahf
sbb
mov
sub
aam
cmc
cwtl
sub
sbb
lods
xchg
nop
jmp
xchg
mov
fmuls
popa
sarb
icebp
mov
mov
add
loopne
mov
mov
or
test
mov
lea
iret
xchg
icebp
cwtl
stc
nop
mov
mov
nop
shlb
int
les
mov
and
xchg
add
xchg
icebp
dec
push
insl
jmp
cld
fwait
jb
dec
test
push
sub
mov
dec
mov
lcall
adc
jns
bnd
inc
std
or
and
loop
aad
into
repnz
lods
aas
int3
ret
cltd
addps
inc
mov
out
test
cld
xchg
or
repnz
test
dec
in
cmp
scas
imul
pop
lcall
lods
add
cli
add
stc
iret
add
add
dec
mov
pop
mov
push
jge
mov
sar
sbb
icebp
pushf
cwtl
psrlq
shl
rcrb
inc
mov
add
icebp
add
jne
jbe
test
lods
out
fwait
push
lods
and
mov
ret
mov
out
in
pushf
pop
rorl
lret
push
fcompp
fstps
mov
test
dec
rcll
xchg
popf
mov
out
icebp
cli
xchg
outsb
jmp
out
sti
nop
sbb
ret
repz
dec
lds
pop
lods
mov
aam
test
fsubr
mov
mov
ss
mov
shrb
push
cld
pop
mov
repz
notl
push
push
shrl
pop
push
cld
cmc
inc
mov
rorl
dec
shlb
lret
xchg
dec
mov
sti
ficoml
pop
dec
repz
rcl
jp
hlt
sahf
and
xchg
mov
dec
mov
es
test
fs
adc
mov
loopne
mov
int
loopne
mov
xor
jmp
hlt
stos
or
or
mov
scas
add
inc
jp
xchg
add
sbb
mov
jb
dec
jg
mov
inc
std
iret
int3
insb
sahf
into
inc
jmp
jnp
imul
xchg
jnp
lea
add
mov
das
in
cli
loopne
xchg
mov
mov
out
push
in
outsb
or
xchg
xchg
or
dec
repnz
xchg
pop
in
in
inc
xchg
push
mov
test
mov
fucomp
mul
in
cs
addr16
lea
add
push
dec
repnz
fimull
pop
mov
in
sub
inc
in
cld
in
bound
mov
imul
data16
test
test
xchg
rorl
pop
lret
bound
popf
into
mov
outsl
xchg
repz
ja
fwait
mov
nop
repz
push
cwtl
jle
cwtl
inc
leave
push
add
cs
pushf
pop
add
xchg
pop
insb
mov
pushf
dec
sub
adc
stc
pushf
xor
lods
shlb
scas
inc
dec
xor
cmp
insl
mov
and
adc
lods
sar
pop
cltd
jmp
aad
cmp
or
rcrb
add
mov
mov
pop
dec
mov
lods
shlb
and
mov
in
xchg
stc
stc
daa
shll
jge
call
imul
xor
add
jmp
pushf
add
inc
cltd
cmp
nop
and
or
nop
icebp
rcrl
aad
or
pushf
mov
mov
std
cmp
gs
aas
pushf
jae
sbb
sbb
pushf
jae
sbb
sbb
pushf
jae
sbb
sbb
pushf
jae
push
mov
dec
insb
jnp
pushf
sbb
sub
pushf
jae
sbb
mov
test
xlat
or
mov
mov
xor
xchg
mov
mov
inc
lods
rcrb
mov
cmp
and
mov
mov
jmp
sbb
add
dec
nop
jns
sti
jl
mov
pop
lcall
rolb
aad
cltd
or
nop
in
roll
ror
pop
les
sbb
or
test
adc
cli
mov
and
cli
jmp
cli
iret
jg
cli
movsb
rcrl
jno
stc
mov
push
stc
cwtl
push
xor
iret
jg
stc
movsb
loope
stc
dec
vmovlpd
stc
mov
jno
cwtl
push
push
clc
jmp
clc
iret
jnp
pushf
inc
into
lea
adc
repnz
pushf
fstps
jo
inc
pushf
incb
mov
pushf
jecxz
and
mov
pushf
push
cmp
xchg
insb
sti
pushf
push
mov
add
push
mov
inc
jne
mov
fisttpll
cmc
out
loope
push
sbb
icebp
movsb
push
mov
out
mov
mov
lcall
cld
movsb
sar
loopne
lods
rorl
pop
sahf
lods
popf
add
aad
addr16
std
cld
fs
test
rcl
mov
sbb
mov
lds
ret
nop
ret
rcrl
nop
mov
add
movsb
popf
push
scas
cltd
ret
adc
rol
xchg
push
movsb
aam
cmpsb
or
sbb
add
sbb
add
sbb
add
sbb
add
add
add
scas
cltd
add
mov
std
lods
std
mov
scas
adc
push
test
rcll
mov
in
pop
xchg
les
ret
aad
shrb
xchg
mov
xchg
icebp
lds
iret
cmpsb
ret
shrl
push
mov
xchg
dec
call
mov
stc
add
nop
mov
jno
mov
cmpsb
ret
icebp
ret
rcll
icebp
mov
lea
jno
mov
cmpsb
ret
rorl
cmpsb
mov
aad
mov
aam
xchg
lcall
sub
mov
call
mov
loopne
sbb
mov
clc
lahf
mov
push
test
jge
out
lea
clc
add
add
xor
adc
add
xchg
mov
std
sbb
sbb
mov
loop
xor
lods
shr
outsl
sti
mov
sarb
add
call
repnz
xchg
mov
les
mov
rcl
lods
dec
dec
lods
inc
lods
xor
sub
push
les
lock
dec
mov
jnp
fucomp
stos
cli
push
jp
lock
mov
adc
lods
loope
or
out
in
sti
faddl
or
iret
fstpt
ret
repnz
adc
adc
pusha
mov
dec
fstp
jp
out
popf
les
lock
repnz
cmp
cmp
iret
mov
clc
mov
sub
jmp
ljmp
lea
in
adc
aad
loopne
mov
push
sub
mov
clc
mov
ucomiss
popf
test
icebp
mov
orb
or
cmpsl
and
jns
cld
sbb
movsb
mov
loope
fnstsw
rol
mov
les
jb
out
adc
inc
sti
mov
notb
jmp
jge
in
rcrb
dec
out
ljmp
sarb
mov
pop
cli
add
movsl
loopne
in
movsb
push
add
addr16
inc
iret
idivb
mov
and
popa
sarb
jo
add
cmp
add
inc
xchg
movsl
icebp
adc
lods
mov
idivl
lahf
fsubr
cmc
add
xchg
mov
in
cmc
dec
or
adc
lcall
loope
mov
xchg
mov
in
leave
fsubrs
mov
pop
inc
fwait
rol
add
pop
pop
ret
in
inc
stc
mov
mov
shlb
inc
out
jle
mov
cmp
lret
out
cs
sahf
jp
xchg
adc
add
into
arpl
std
lahf
fucomip
jp
popa
jb
jmp
add
movsb
popl
jp
out
push
mov
repz
icebp
adc
add
mov
mov
sbb
xchg
jl
call
fcoms
cmp
cmp
icebp
lea
fiaddl
lods
push
or
addr16
divb
mov
mov
add
out
fisttpll
lret
add
cli
stc
lea
out
out
lods
sbb
xchg
push
jns
icebp
mov
aam
stc
in
lcall
popf
xchg
fisttpl
dec
or
dec
jmp
jl
sar
add
or
add
into
push
popa
div
hlt
dec
leave
call
xchg
in
shr
push
test
into
mov
lret
scas
lret
leave
aad
mov
cmpsl
mov
xchg
into
iret
gs
xchg
mov
out
sahf
dec
mov
fxch
sub
and
loopne
orl
or
xchg
jp
mov
mov
mov
mov
testb
sti
and
aad
out
jae
sub
aad
ds
in
mov
mov
dec
gs
hlt
jecxz
mov
shl
gs
loopne
into
faddp
or
mov
bswap
out
stos
stc
js
sbb
mov
cmp
mov
enter
xchg
bnd
in
in
sarb
into
sbb
cltd
dec
mov
mov
mov
icebp
add
mov
je
xchg
gs
xchg
push
push
test
fcmovbe
enter
movsl
adc
push
std
clc
mov
cltd
sbb
rol
dec
lahf
xchg
ret
mov
jmp
js
dec
lea
fistpl
in
mov
cmp
lret
loopne
pop
repnz
insb
sbb
mov
bound
jo
lds
and
clc
ffree
cli
gs
xor
pop
cmc
ljmp
lahf
aad
cmp
push
js
loopne
push
mov
xchg
pop
lahf
add
test
add
add
xchg
test
clc
call
lea
sub
addr16
or
jge
lods
mov
mov
pushf
rcl
dec
repz
and
shll
fiadds
xor
sbb
mov
lcall
xchg
lea
js
mov
shr
shl
xchg
cmp
sarb
mov
rol
rcrl
in
mov
add
mov
mov
add
xchg
adc
add
out
enter
mov
and
lret
or
scas
mov
enter
mov
lea
lock
dec
inc
lret
push
add
mov
stc
enter
int
cli
cmp
mov
dec
es
mov
lods
gs
mov
and
rclb
add
in
enter
xchg
cmp
fstpl
stc
push
frstor
lea
outsl
movsb
ror
xchg
fcoms
into
mov
repz
es
scas
and
icebp
jae
sub
xchg
scas
mov
cli
lahf
jge
push
scas
push
divb
mov
cli
je
sub
iret
adc
insb
cs
xor
fwait
lods
popa
nop
scas
addr16
lea
push
mov
nop
cmc
xchg
movsb
xchg
sbb
sub
shr
xchg
mov
mov
scas
mov
adc
xchg
out
add
xchg
jl
loopne
lcall
mov
sti
loopne
xchg
clc
mov
dec
mov
mov
push
scas
es
xchg
ret
cmp
adc
cmp
scas
fistpl
stc
outsb
pop
xchg
mov
movsl
icebp
mov
jmp
push
mov
call
mov
jle
sub
aas
or
xchg
fistpll
mov
add
add
roll
in
icebp
sbb
sbb
movsl
xlat
js
sub
mov
add
dec
sub
mov
mov
fiadds
mov
push
pop
mov
xchg
lahf
ds
cli
cmpsl
add
adc
mov
mov
je
out
mov
cmpsl
jl
jmp
leave
imul
lods
add
call
aam
imul
pmullw
fcomps
push
add
sbb
lods
ret
in
call
cld
repnz
das
filds
and
adc
in
adc
mov
loopne
cmp
xor
fdivrs
sub
mov
fstl
ljmp
push
call
scas
jge
add
lea
clc
sahf
ficoms
sub
add
test
mov
loopne
fxch
out
daa
sbb
sbb
sbb
nop
and
or
nop
out
movsb
lcall
test
fdivrl
scas
add
pushf
ljmp
and
stc
icebp
movsb
enter
enter
sub
imul
adc
sbb
mov
cltd
lods
jno
sub
data16
std
xchg
jmp
jge
adc
sub
adc
into
pop
mov
jns
sub
iret
jno
cmpsb
in
scas
sbb
popa
es
sbb
icebp
aad
test
jno
and
into
push
mov
dec
fs
inc
nop
out
movsb
frstor
mov
jne
push
push
and
adc
into
pop
shll
add
in
cltd
and
mov
movsb
cmpsb
add
adc
and
adc
nop
aas
sbb
icebp
mov
andl
scas
add
rclb
nop
stc
movsb
sarb
nop
mov
hlt
or
inc
xchg
cmp
clc
or
adc
iret
popf
rcrb
stc
cmp
loop
xor
repnz
jecxz
add
movsb
sub
mov
aad
mov
in
mov
loopw
cltd
pop
pushf
mov
les
or
vpavgb
push
sarb
lock
clc
cltd
sbb
xchg
loope
and
mov
mov
out
aam
jmp
xchg
fstpt
fucomi
rcll
add
push
repz
std
shr
imul
out
add
std
jmp
pop
sti
aam
stc
or
jp
and
rcll
outsl
mov
sar
cli
jp
inc
cwtl
aad
ret
cmp
mov
sti
stos
jmp
push
repnz
mov
testb
cmp
aam
jp
xor
mov
cltd
push
xor
add
cmc
cld
add
lods
sahf
rclb
xchg
in
aam
push
cmc
lret
xor
popf
insb
sub
add
out
dec
repnz
stc
mov
out
call
ljmp
lods
jmp
insl
fmull
rorb
fxtract
fwait
pop
adc
pop
cmp
push
cmp
lods
mov
out
lods
stc
rcrb
icebp
int3
fmul
out
imul
add
lea
aam
gs
sar
out
ret
inc
loopne
pop
mov
sbb
xor
pop
loopne
cli
mov
imul
xchg
movsb
mov
jecxz
fneni(8087
aad
rorb
rol
mov
rorl
push
iret
lock
and
rorb
rolb
xchg
mov
aaa
push
repz
pushf
addr16
fbstp
mov
jmp
or
mov
and
aam
aad
fstps
ret
int3
fnstcw
sarl
ror
or
mov
fwait
mov
rcrb
orb
push
sti
lods
inc
sahf
movl
ret
adc
loopne
sub
sarl
cld
ret
les
jbe
sbb
xchg
lea
hlt
dec
lret
test
arpl
packuswb
leave
add
xor
adc
xor
jb
pop
inc
movsb
xor
dec
pop
adc
negb
mov
add
add
add
shrl
clc
lea
fisubl
stc
jno
or
iret
push
mov
les
lea
push
adc
loop
lods
mov
ret
shr
outsb
mov
adc
pop
lea
ret
fmull
inc
inc
mov
dec
call
ss
into
dec
cld
fistpl
loop
fildl
pause
es
xchg
cmp
call
cmpsl
in
out
pop
push
leave
and
mov
in
pop
fyl2x
fcoms
mov
iret
les
in
test
repnz
out
cwtl
aad
iret
xor
repz
lods
jecxz
or
sti
out
cli
or
in
fcompl
scas
daa
rclb
xor
movsl
jne
fucom
in
inc
xchg
mov
fsts
cld
inc
out
xchg
cli
subb
cld
or
sarl
push
mov
lea
fildl
mov
dec
pop
lock
jmp
add
fdivrs
aam
pushf
mov
mov
clc
repnz
sub
fiadds
frstor
sti
jmp
dec
sbb
sti
add
push
lods
sar
mov
push
jmp
cltd
std
std
and
loop
mov
shlb
rcr
addb
sbb
xchg
mov
push
mov
scas
dec
mov
jmp
repnz
fucomip
cmc
dec
pop
stc
fcmovnu
cli
into
inc
xor
push
xor
adc
lahf
popf
dec
std
ret
stc
repnz
ret
mov
mov
adc
fptan
cmp
movsl
push
inc
adc
mov
cmc
inc
hlt
push
jmp
popa
add
enter
ret
cld
fadd
icebp
mov
imull
incl
cld
mov
out
sti
lahf
cwtl
pushf
std
incl
loopne
aas
mov
stc
lcall
adc
mov
mov
int3
fninit
out
js
jmp
jp
add
mov
push
jmp
stc
repnz
enter
lds
xlat
popf
popa
xor
call
hlt
pop
sub
psrlq
cli
xchg
cli
cmp
sbb
mov
mov
rorl
rorl
dec
fdivrs
nop
lea
push
mov
movsl
mov
imul
sahf
mov
or
icebp
mov
inc
mov
lods
lods
into
mov
sbb
mov
xor
out
pop
add
scas
in
movsl
in
out
xchg
ficomps
repnz
cld
lcall
loop
je
lods
xor
fld1
push
mov
push
mov
mov
add
not
test
cli
mov
push
jns
ds
adc
mov
mul
cmpsb
cli
mov
call
push
filds
ljmp
jmp
fwait
pop
lods
inc
loopne
jns
sti
cld
or
pop
ret
mov
pop
ret
mov
sahf
cld
or
fwait
cmp
jno
shr
lock
sbb
aad
fistps
inc
idivb
outsb
leave
inc
out
inc
movsl
cmc
cld
push
fisubs
mov
pushf
mov
les
mov
dec
sbb
call
roll
test
rcr
fnstcw
out
les
out
fcompl
xor
mov
out
inc
out
paddsw
mov
in
jp
xchg
mov
lea
mov
lods
xchg
or
mov
mov
add
pop
fldt
xchg
std
mov
into
lea
xor
pop
add
cmpsl
out
cmp
cmpsl
dec
sarb
mov
pushf
push
out
aad
dec
stc
repnz
pushf
lds
push
loop
pop
pop
lods
std
and
mov
in
fdivrl
sbb
lea
and
mov
std
insb
mov
add
test
pushf
cmp
out
shrl
mov
in
movsb
movsb
into
mov
gs
icebp
mov
mov
cmpsl
jmp
mov
fisttpl
push
or
pusha
cmp
out
mov
jmp
mov
rcrl
cld
imul
jae
repz
enter
xchg
into
flds
arpl
lock
xchg
divl
add
cwtl
pushf
and
adc
in
or
repnz
rolb
arpl
loope
rcl
lcall
cmp
lahf
icebp
inc
pop
fcom
out
out
ret
push
mov
push
jmp
adc
sub
fdivrl
mov
lock
cld
out
pushf
push
shrb
pushf
sbb
dec
lock
std
enter
inc
pop
mov
shll
dec
jns
adc
hlt
jle
pop
jae
out
fdivrs
data16
fidivrl
pop
loop
gs
into
mov
lahf
mov
sbb
add
adc
mov
test
fwait
aam
lret
xchg
fdivrs
test
mov
adc
test
fs
stos
hlt
sub
mov
cwtl
mov
push
outsl
pusha
icebp
int3
aas
pushf
in
aas
pushf
in
cld
into
out
cwtl
das
pop
xchg
in
cld
lock
mov
or
push
out
div
in
es
push
mov
push
add
xchg
or
xchg
xchg
fcoml
sti
xchg
sti
stc
into
or
cwtl
mov
aad
mov
fst
jle
insb
in
mov
std
loopne
cs
dec
shr
gs
cwtl
adc
fimuls
pushf
jl
or
in
lcall
inc
lea
ljmp
pushf
loopne
test
cwtl
ret
jge
mov
es
pop
or
out
imul
add
xor
iret
testb
fildl
leave
dec
iret
inc
addr16
sbb
jnp
mov
add
scas
cmp
rcll
fcmovnbe
rclb
add
loopne
fisttps
or
jbe
cmp
fucomi
inc
sub
add
mov
scas
inc
push
cld
in
sbb
pop
test
add
in
lods
rclb
repz
mov
into
icebp
popf
adc
stos
pop
dec
fwait
out
jp
fcmovu
ljmp
mull
or
inc
mov
and
jp
cld
lahf
xchg
hlt
push
lahf
add
pop
fdivrl
push
add
lods
aaa
fidivrs
cwtl
repz
dec
mov
out
fwait
and
into
dec
mov
add
int
add
add
add
cltd
in
xchg
repnz
in
lea
or
repnz
int3
and
std
cwtl
push
loopne
popf
lods
cld
add
add
clc
in
lcall
push
int3
out
mov
rclb
out
enter
iret
fstl
insb
mov
mov
imul
daa
inc
sbb
mov
jno
jge
decl
xor
mov
pop
nop
out
movsb
fwait
jnp
pop
mov
lea
bound
mov
fidivrl
pop
out
into
lea
roll
scas
into
mov
mov
add
mov
mov
or
loopne
out
lock
xchg
mov
jmp
popf
add
mov
rcrl
in
loopne
sti
int3
pop
cmc
cld
hlt
loopne
fiaddl
clc
stos
mov
jecxz
cmp
adc
out
sub
into
in
xchg
xchg
rcrb
mov
sbb
in
push
mov
in
cmpsb
aad
cwtl
shll
xchg
push
fstpt
lods
cwtl
aas
movsb
mov
sub
in
jo
cmpsl
dec
aam
push
icebp
or
icebp
add
or
loop
repnz
jne
fmuls
mov
popf
adc
clc
loope
jo
scas
in
stos
inc
mov
xor
repnz
push
jnp
shr
int3
out
mov
xor
or
lock
subb
fwait
int
js,pt
xor
push
std
leave
rcll
mov
scas
xchg
fiadds
lods
loope
mov
mov
mov
add
push
out
out
icebp
popa
lock
cmp
stos
rorb
rclb
lret
mov
imul
lds
test
lret
dec
mov
aad
shl
in
jecxz
push
pop
add
push
aad
frstor
jmp
fcmove
loop
add
add
xchg
aas
vpsubq
fucomp
mov
ljmp
cmp
test
mov
lret
out
sub
cs
stos
icebp
into
xchg
jns
and
sbb
mov
and
out
sbbl
mov
fistpll
loop
sbb
sbb
loope
into
cmpsl
xor
enter
shr
cmp
ret
scas
mov
jecxz
cmc
dec
and
mov
in
xchg
insl
jmp
popf
push
jp
imul
and
iret
sarb
std
cltd
test
sub
sahf
push
inc
jmp
cmp
loope
cmp
or
push
stos
mov
arpl
pop
jmp
xchg
out
pop
cld
jbe
in
aad
jns
mov
rcrl
lock
pop
loop
mov
cs
scas
adc
icebp
inc
iret
out
out
adc
mov
fst
mov
lea
sub
pop
cmc
fistl
fstps
sbb
shrl
dec
add
cmpsb
cltd
out
adc
inc
push
fstp
xor
ret
inc
xchg
lods
and
aam
cli
xchg
add
xchg
aaa
repz
std
mov
rorl
inc
popf
adc
aam
jns
clc
cmp
push
aas
rcll
xchg
pop
sarb
or
loop
movsb
lea
enter
mov
pop
cld
in
int
addr16
lock
and
add
out
mov
ret
sarb
cs
xor
repnz
lds
sub
in
sar
add
mov
int
ret
out
xor
sbbl
lea
mov
loopne
mov
push
mov
outsl
cli
mov
sahf
xchg
ds
sub
pop
dec
shr
ds
add
xor
xchg
and
jno
xchg
xchg
fisttps
dec
pop
add
mov
loop
aad
pop
repnz
xchg
mov
bound
add
cmc
fwait
jno
movsl
cmp
int3
ret
shll
cltd
cmp
cmp
loope
lds
lea
xor
enter
lds
pop
add
pop
inc
repnz
push
icebp
lea
in
ret
mov
cwtl
cmp
push
divb
cs
call
push
xchg
add
cmpsb
xor
inc
mov
xor
imul
push
mov
dec
adc
push
mov
fucomip
ss
ret
lcall
test
sahf
jmp
iret
test
lods
add
mov
add
inc
inc
mov
push
into
lods
cmpsb
cmp
push
adc
add
clc
or
cmp
out
pop
add
test
dec
add
pop
push
aas
lea
int3
mov
inc
lret
shll
rcr
test
lcall
mov
cmp
mov
xchg
cmp
orb
dec
mov
aaa
in
xchg
jge
fneni(8087
in
lock
lods
mov
mov
mov
jp
mov
sbb
or
and
repnz
xchg
sbb
lock
loope
loope
dec
rol
lea
and
lcall
repz
jbe
lock
xchg
sahf
in
in
aam
push
cltd
in
popf
mov
std
icebp
out
add
and
stc
lods
push
xchg
or
cld
idiv
aad
pop
add
std
mov
inc
test
add
cmc
in
mov
imull
fdivp
jns
jae
or
popf
cmc
int
push
adc
out
pushf
mov
push
neg
and
popf
adc
icebp
mov
ret
adc
mov
mov
cltd
scas
sub
mull
rcrl
call
cld
or
jecxz
out
sbb
fimull
hlt
es
ret
les
mov
push
ret
mov
pop
dec
adc
aad
mov
mov
in
sbb
push
repnz
add
and
stos
insb
out
lahf
stos
xchg
mov
nop
cmpsb
xor
fwait
inc
dec
icebp
xchg
mov
frstor
hlt
xchg
jae
inc
rol
cltd
jmp
mov
popf
sbb
lds
cmp
icebp
repz
aad
inc
in
ljmp
mov
sahf
dec
mov
xchg
popf
out
xchg
rorb
fndisi(8087
in
xchg
inc
pop
jmp
jmp
lods
popf
iret
out
ljmp
add
mov
movsl
enter
mov
xor
loope
into
mov
xchg
dec
mov
mov
xchg
xlat
js
sahf
lret
mov
sbb
ljmp
inc
fisttpl
push
in
xor
popf
out
int3
stc
int3
xchg
popf
mov
sbb
push
push
lods
lock
mov
push
mov
lods
add
shr
shll
into
or
std
idiv
hlt
lea
xor
pop
shlb
xor
enter
popf
mov
or
icebp
std
pushl
push
enter
nop
mov
lcall
es
notl
cmp
sahf
fwait
sub
aaa
jge
inc
mov
loopne
in
mov
sbb
std
or
frstor
icebp
ret
add
or
out
fwait
fmull
shlb
jmp
push
stos
repz
mov
aas
test
nop
sub
out
fstpt
fsubr
jecxz
call
or
ret
roll
aad
pop
mov
mov
sbb
or
cwtl
cmc
pop
mov
enter
test
loopne
push
jg
mov
pop
scas
push
lahf
out
mov
mov
adc
ret
mov
in
inc
lcall
cs
imul
shr
add
out
cwtl
jg
idiv
xlat
ret
pop
add
popf
fsubrl
movl
and
lods
push
sti
mov
sbb
pop
stc
int
lcall
in
cli
cwtl
fcomp
std
inc
lods
ret
cmp
xchg
mov
xor
mov
cmp
xchg
add
lea
iret
mov
fisttpl
jge,pn
nop
faddp
adc
out
mov
xchg
fld
rorb
and
mov
lods
das
into
xor
lea
std
std
in
gs
inc
int
rcrb
repnz
push
add
mov
fwait
add
addr16
xchg
aaa
out
ljmp
mov
shl
xchg
data16
xchg
mov
cld
sbb
xor
fiaddl
gs
jo
lods
aas
adc
adc
aas
mov
xchg
adc
xor
jo
push
inc
popa
xchg
lea
cltd
jno
xchg
jecxz
out
mov
pushf
repnz
cwtl
and
fimull
out
sahf
mov
int3
aad
jne
mov
loopne
mov
lods
cmc
loope
out
into
mov
rcrb
movsl
adc
out
fsubrs
out
cmp
fdivl
shrb
mov
dec
mov
jns
es
fisttpl
sbb
dec
out
mulb
xor
rorb
dec
call
mov
lods
push
and
sub
mov
mov
repz
popf
add
sub
mov
add
lds
xchg
adc
icebp
xchg
adc
xor
out
popf
scas
arpl
out
btcl
sbb
xchg
mov
cmp
mov
lods
enter
loope
into
adc
aam
shll
sbb
pushf
add
mov
cmp
fsubrl
mov
repnz
push
xchg
int3
in
lea
lods
icebp
adc
lods
adc
push
sbb
inc
dec
icebp
mov
lea
pop
sbb
xor
rcrb
xchg
sbb
inc
test
dec
push
jb
push
dec
adc
lods
push
cmpsl
icebp
rcll
jecxz
adc
mov
sti
mov
mov
repz
lea
lea
and
jmp
loop
adcl
mov
nop
adc
popf
add
sbb
xorl
add
xchg
mov
icebp
stos
xchg
sbb
add
into
jmp
mov
or
or
sahf
dec
adcl
cmp
cmp
push
out
sahf
xor
push
lcall
loop
les
mov
cmp
lock
cmc
jne
divb
pop
ret
xchg
jecxz
movsl
popa
pushf
mov
vmwrite
sub
xchg
inc
adc
adc
adc
push
nop
ss
push
add
nop
cmp
xchg
inc
jmp
cld
mov
dec
cwtl
loop
and
sahf
xchg
pushf
xchg
aam
std
std
popf
mov
pop
xchg
push
test
icebp
xchg
mov
sete
mov
add
dec
mov
fnstcw
push
ljmp
sahf
ficompl
xchg
mov
mov
dec
adc
mov
mov
scas
data16
jg
fidivrl
popf
lock
movl
xchg
out
mov
add
mov
cltd
std
int3
pop
out
repnz
mov
push
lock
dec
jne
icebp
dec
push
out
sti
repz
jmp
dec
fucomp
mov
mov
cld
rep
stos
mov
iret
stos
jnp
clc
notb
mov
lock
in
or
lods
mov
out
lock
sti
sbb
movsl
mov
add
in
mov
push
inc
outsb
add
out
scas
push
call
mov
iret
addr16
std
sbb
rolb
inc
cltd
out
mov
add
xchg
and
rclb
mov
xchg
icebp
jo
in
lods
mov
std
in
mov
out
sti
lock
xchg
daa
mov
out
lods
int
mul
push
sbb
mov
mov
rcl
adc
mov
fadd
push
cmp
add
imul
frstor
arpl
add
adc
std
mov
push
int
iret
add
cli
rorl
xchg
mov
inc
cs
add
icebp
mov
inc
and
adcl
cmc
iret
call
gs
cld
cltd
sti
mov
mov
push
adc
aaa
stos
int3
sub
adc
aad
xchg
xchg
and
dec
ss
sti
jmp
sti
repnz
pop
mov
stos
pop
dec
loopne
mov
aad
or
sub
xchg
out
or
out
cwtl
dec
fbstp
in
in
add
cltd
mov
jl
and
repnz
mov
xchg
push
lcall
jge
mov
cmp
xchg
dec
enter
mov
mov
mov
add
daa
pop
adc
data16
movsb
loopne
dec
stc
dec
testb
xchg
or
pop
cmpsl
out
adc
popf
sub
cltd
ret
lea
lods
roll
mov
cmc
rolb
call
nop
popf
stc
int3
mov
mov
rcrb
xor
aad
mov
scas
clc
cmp
adc
adc
add
out
data16
repnz
sub
bound
mov
xor
mov
dec
loope
jnp
pop
jno
int
mov
rorb
cltd
out
shrb
mov
mov
setge
sti
add
cltd
nop
loope
xchg
cld
ret
or
ret
into
inc
in
jne
sub
aad
cli
pop
repnz
stos
lcall
lret
aam
into
fimull
stos
adc
nop
push
aam
loope
and
test
cld
popf
mov
ret
loopne
ret
lods
popf
xchg
adc
sub
nop
andb
cwtl
lcall
xchg
stos
xchg
lahf
pop
mov
cli
cmp
mov
cltd
sahf
lea
lods
or
xchg
jo
loop
fwait
out
pop
cmp
stc
popf
loopne
push
call
lea
pusha
stos
add
aad
or
and
les
jl
add
repnz
xchg
push
adc
lea
cld
call
movsb
ret
into
sti
and
mov
cld
jmp
imul
adc
call
lret
push
mov
xchg
int
xchg
mov
ret
js
popf
or
movsl
cld
lods
dec
pop
mov
mov
stc
sti
mov
sti
pop
adc
or
mov
jbe
cwtl
les
insl
lods
hlt
push
inc
mov
mov
jns
neg
outsb
sti
cs
ret
loopne
rol
adc
scas
out
mov
pop
lods
cld
pushl
fisttps
and
add
add
call
roll
into
sbb
movsl
scas
dec
dec
mov
int
mov
dec
popf
pop
cli
fildl
repnz
out
mov
pop
scas
into
cmp
in
mov
cmp
repz
lcall
in
mov
leave
aas
mov
fdivrp
lcall
movsb
cmc
scas
mov
pop
mov
nop
enter
add
xchg
addr16
jge
push
in
pushfw
or
rol
enter
std
repnz
in
sahf
jo
out
rorl
cmpsb
pusha
rorl
xchg
dec
iret
arpl
or
pop
fisubrl
test
lods
iret
cwtl
sbb
mov
or
out
fcomip
fmull
xchg
mov
jl
add
add
inc
or
lock
mov
gs
pop
fimuls
inc
dec
idiv
dec
imul
mov
push
and
pop
xchg
mov
mov
rcll
mov
fcomp
rcl
ljmp
add
mov
rcrb
dec
xor
add
lea
in
mov
fnstenv
popf
pop
mov
dec
jge
scas
ret
inc
cmp
adc
sti
or
clc
stc
nop
xor
daa
jmp
int
sarl
aam
dec
xchg
or
cltd
add
test
in
jge
jno
nop
imul
dec
pusha
inc
fidivrl
xor
sub
ficompl
adc
mov
xchg
dec
cmc
fsubl
in
fst
ror
rcr
lods
shrl
cltd
notb
xorl
pop
push
rorl
fidivl
and
js
adc
or
nop
daa
icebp
in
fnstenv
shll
int
sti
leave
push
iret
mov
nop
fidivl
xchg
fimull
pusha
nop
jns
jne
shrl
ficompl
rorl
fidivl
sbb
or
fiaddl
stc
shl
icebp
fucompp
loope
fldenv
fcmove
rol
pusha
mov
lods
movsl
rcrl
sbb
nop
jne
jno
insl
rcrl
fimull
sarl
rcrl
adc
or
sar
icebp
fucompp
loope
shll
fcmovb
mov
mov
xchg
rorl
nop
fidivl
shll
ficoml
roll
fidivrl
xor
sub
ficoml
cmp
nop
jmp
fcmove
rol
pusha
lods
fisubl
mov
subb
jne
insl
pusha
ficompl
rorl
fidivrl
and
sbb
rorl
add
cmc
in
shl
ror
rol
mov
popf
pusha
xchg
sti
mov
add
nop
jns
jno
imul
dec
cmp
fisubl
sbb
or
icebp
shr
loope
ror
rcr
mov
test
lea
add
pusha
ret
ret
pop
nop
daa
dec
inc
idivb
and
daa
or
cmc
daa
in
loope
fnstenv
shll
lds
daa
movsl
popf
notb
fcmovb
rol
pusha
rcr
rol
pusha
rcr
rol
pusha
rol
adc
or
std
daa
cmc
in
mul
xor
daa
aad
test
mov
mov
mov
add
pusha
rcr
rol
pop
nop
daa
push
inc
idivb
and
daa
or
cmc
daa
in
loope
fnstenv
shll
leave
shl
xor
cltd
xor
mov
daa
pop
push
testb
daa
xor
sbb
std
xor
daa
jmp
shll
leave
shl
xor
xchg
xor
jbe
insl
xor
pop
push
testb
daa
xor
sbb
adc
testb
stc
daa
icebp
in
fnsave
aad
int
idivb
mov
pusha
test
imulb
popa
daa
pop
dec
testb
daa
xor
sbb
or
icebp
daa
jmp
leave
daa
shll
cltd
xchg
stc
mov
daa
jno
mulb
pop
daa
dec
inc
idivb
xor
daa
and
cmc
xor
add
in
fldenv
ror
test
mov
popf
xor
jbe
jne
insl
daa
gs
notb
dec
daa
cmp
sbb
add
cmc
daa
in
in
fnsave
shll
leave
mov
daa
mov
mov
sarl
testb
daa
cmp
mulb
or
mov
jmp
fldenv
mov
movsl
negb
mov
xor
imul
dec
inc
idivb
xor
adc
or
add
imul
xor
daa
aad
test
mov
mov
mov
jno
imul
xor
cmp
and
or
cmc
imul
xor
daa
fst
test
lds
mov
movsl
daa
cltd
xchg
cli
mov
mov
shll
nop
cmp
sub
adc
add
jmp
int
lds
mov
mov
test
jne
insl
negb
push
daa
dec
inc
idivb
xor
adc
stc
imul
xor
daa
test
shll
mov
test
xchg
stc
mov
nop
daa
jno
negb
push
daa
dec
inc
idivb
and
sbb
adc
or
idiv
xor
daa
jmp
leave
daa
shll
popf
xchg
cli
test
mov
nop
xor
push
dec
testb
daa
xor
sbb
adc
testb
stc
daa
icebp
jmp
daa
int
idivb
popf
notb
fidivl
nop
daa
pop
push
testb
daa
cmp
imulb
xor
daa
sbb
testb
add
stc
in
mul
xor
daa
aad
test
mov
mov
mov
jne
insl
negb
push
daa
dec
inc
idivb
xor
daa
sub
daa
add
jmp
leave
xor
daa
mov
mov
test
jne
insl
popa
negb
dec
daa
inc
cmp
daa
and
or
jmp
int
lds
mov
mov
xorl
popa
push
testb
daa
cmp
and
or
in
mul
xor
daa
leave
shl
xor
lea
push
nop
xor
pop
push
testb
daa
cmp
imulb
xor
daa
adc
std
daa
cmc
in
mul
xor
daa
aad
test
mov
movsl
xor
add
jne
insl
negb
push
daa
dec
inc
idivb
and
daa
or
cmc
daa
in
in
fnsave
aad
int
idivb
movsl
negb
or
daa
lods
lods
imulb
lods
imulb
lods
imulb
lods
imulb
fldenv
fcmovb
mov
ficompl
test
imul
push
dec
roll
fisubrl
adc
stc
pusha
icebp
fucompp
loope
fldenv
fcmove
rol
pusha
mov
test
mov
shll
fisubl
rcll
fidivrl
and
or
in
shl
fstp
aad
rol
mov
mov
test
js
nop
jno
imul
dec
inc
sarl
sub
adc
std
shl
in
ffree
aad
int
lds
fisubl
mov
nop
jno
imul
pusha
dec
fiaddl
shrl
rorl
add
cmc
in
shl
fstp
aad
rol
mov
mov
test
jl
nop
jne
insl
rcrl
fimull
sarl
rcll
shl
in
fst
ror
mov
popf
pusha
xchg
fimull
cmpsl
mulb
cmpsl
mulb
pusha
nop
xor
sbb
add
fld
shll
fcmovb
mov
fisubl
mov
nop
insl
shll
ficoml
roll
fisubrl
adc
or
sar
icebp
fucompp
ffree
aad
leave
fidivrl
movsl
ficompl
test
nop
insl
pusha
popa
ficompl
rorl
fidivrl
xor
sub
ficoml
cmc
in
frstor
fcmove
rol
push
pop
iret
cmp
inc
movsl
nop
cltd
clc
lea
movsb
movsb
hlt
nop
fisubl
rcll
fiaddl
shll
sub
and
icebp
shr
loope
fxch
rol
mov
mov
mov
add
mov
inc
cmp
xor
ficompl
add
stc
icebp
shr
loope
ror
rcr
mov
test
xchg
ret
mov
nop
fidivl
shll
ficoml
sarl
rcrl
or
cmc
pusha
in
ffree
aad
int
lds
fisubl
test
mov
pop
dec
roll
fidivl
sbb
or
cmc
in
fldenv
fcmove
rol
pusha
mov
test
sti
andl
push
les
ror
add
pusha
mov
nop
xor
or
cmc
imul
xor
daa
fxch
test
mov
movsl
xor
add
pusha
lahf
ficompl
push
daa
inc
cmp
daa
and
or
icebp
xor
daa
test
mov
movsl
xor
test
jno
mulb
pop
daa
push
dec
testb
daa
xor
mulb
xor
daa
adc
testb
cmc
daa
in
in
fnsave
aad
int
idivb
mov
push
test
imulb
popa
daa
pop
dec
testb
daa
xor
adc
std
xor
daa
in
in
fnsave
aad
int
idivb
mov
push
mov
jno
imul
xor
cmp
and
adc
std
daa
cmc
in
mul
xor
daa
aad
test
mov
movsl
xor
test
jne
insl
negb
push
daa
dec
inc
idivb
xor
adc
or
add
div
xor
daa
fst
test
shll
mov
movsl
xor
sbbl
pop
nop
daa
push
dec
testb
daa
sub
or
cmc
xor
daa
loope
not
xor
daa
mov
mov
add
cltd
pop
nop
into
fs
xchg
ljmp
dec
fidivrl
and
add
fucompp
loope
aad
int
lds
fisubl
out
test
nop
imul
inc
pusha
cmp
and
or
add
in
fstl
mov
nop
xor
daa
mov
mov
test
jno
negb
push
daa
dec
inc
idivb
xor
daa
and
or
cmc
xor
daa
in
not
xor
daa
mov
mov
mov
jne
mulb
pop
daa
push
dec
testb
daa
sub
adc
std
xor
daa
in
in
fnsave
aad
int
idivb
cltd
notb
pop
xchg
nop
jno
imul
testb
daa
xor
mulb
xor
daa
adc
idiv
xor
daa
in
in
fnsave
shll
leave
shl
xor
xchg
inc
mov
xchg
pusha
xchg
nop
push
testb
daa
cmp
imulb
xor
daa
adc
std
daa
cmc
in
mul
xor
daa
rol
idivb
movsl
negb
xchg
add
daa
gs
notb
dec
daa
inc
cmp
daa
and
notb
xor
daa
std
cmc
imul
xor
daa
fst
test
mov
movsl
xor
add
xchg
pop
nop
daa
jno
mulb
pop
daa
push
dec
testb
daa
xor
daa
or
div
xor
daa
loope
not
xor
daa
mov
movsl
daa
popf
xchg
cli
test
xchg
xchg
rcll
idivb
and
daa
adc
icebp
daa
in
test
shll
test
sub
nop
xor
jne
negb
pop
daa
dec
dec
testb
daa
xor
adc
add
cmc
daa
jmp
frstor
ror
test
mov
test
jnp
jo
nop
jne
imul
pusha
dec
fidivrl
sbb
or
stc
jmp
fcmove
leave
rol
nop
enter
inc
mov
mov
lods
xor
xchg
xor
jbe
jno
insl
daa
popa
push
testb
daa
xor
daa
or
icebp
daa
in
test
shll
mov
movsl
xor
cltd
call
gs
popa
push
testb
daa
xor
sbb
dec
push
pop
mulb
mov
repnz
sti
repnz
rolb
pop
lea
dec
or
cwtl
ficomps
add
add
hlt
or
add
cld
das
repnz
mov
add
nop
cld
cmp
hlt
call
sub
xchg
pusha
pop
xchg
idiv
cwtl
clc
scas
mov
lea
xchg
xor
scas
sbb
cmp
shr
xchg
push
hlt
bnd
sar
xchg
add
out
hlt
jecxz
lods
xor
mov
ffree
test
out
loopne
lock
xor
push
cwtl
cmc
pop
repnz
adc
sahf
add
add
enter
add
out
pushf
inc
addb
mov
sbb
jle
out
std
xchg
mov
cld
or
repnz
xchg
cwtl
test
sti
icebp
inc
dec
cmp
idiv
mov
mov
in
lock
or
std
out
cli
std
nop
adc
out
sti
sahf
mov
cmpsl
lds
sti
dec
cli
divb
scas
inc
nop
mov
inc
cmc
xor
fldl
mov
pop
gs
addr16
shll
cltd
jp
sti
loop
lock
add
mov
hlt
mov
pop
mov
add
sti
pop
cmp
insl
xor
add
mov
add
cwtl
inc
ss
test
lcall
repnz
cld
out
stc
imul
adc
xchg
inc
add
jae
movsl
jns
add
sahf
ja
sbb
icebp
inc
ljmp
or
repnz
cwtl
mov
sti
fsubs
cmp
pop
hlt
add
mov
cmc
rorl
ret
sub
xchg
gs
cmc
push
les
cwtl
nop
cmp
stc
pushf
out
clc
add
add
inc
mulb
rclb
sbb
cmc
mov
iret
push
out
add
pop
nop
icebp
inc
jo
ljmp
jge
cmp
nop
into
incl
aad
nop
les
cmc
xchg
clc
inc
cwtl
sub
nop
out
stc
das
xchg
rolb
dec
mov
mov
mov
jns
notb
sub
cld
lock
shlb
pop
repnz
nop
lds
mov
std
pop
cmp
enter
call
add
test
cwtl
ret
lods
adc
add
stc
stc
cmp
repnz
test
xchg
add
cmp
popf
push
cmpsl
outsl
js
into
mov
loopne
cwtl
xor
cmpsb
icebp
rclb
mov
loope
cli
fucomip
sti
rcr
shlb
aam
stc
repnz
mov
jle
bnd
xchg
insb
jmp
sub
add
add
pop
xchg
xchg
data16
push
call
hlt
pop
inc
dec
mov
call
cwtl
xor
sub
jmp
test
cwtl
popf
bound
mov
cmpsb
clc
gs
adc
xchg
push
aaa
pushf
test
or
add
add
repnz
pushf
enter
mov
repnz
popf
cmp
stc
sbb
cltd
adc
negb
xlat
cwtl
lcall
lret
repnz
sub
cwtl
stc
xchg
or
fmulp
cli
add
pop
adc
stc
add
enter
aam
pop
sub
mov
fldenv
out
add
xchg
jl
mov
call
and
hlt
test
jle
repnz
in
lods
cli
out
xchg
lods
test
repnz
xchg
rcrb
sub
out
xchg
sahf
test
cmc
and
clc
push
pop
pop
dec
repnz
incb
test
sbb
cli
repnz
push
xchg
icebp
mul
or
repnz
sbb
sbb
cmp
add
icebp
and
lods
in
std
mov
add
add
out
cltd
mov
add
repz
call
sti
cmp
cli
bnd
cwtl
test
out
call
inc
xchg
pop
pop
pushf
and
add
dec
clc
std
add
add
sbb
call
dec
xchg
sbb
divb
stc
stc
outsl
xor
mov
cld
add
test
cwtl
xchg
lret
lock
call
enter
shll
mov
inc
inc
call
xchg
push
aam
idivb
add
push
xchg
inc
repz
mov
cmp
cli
add
cwtl
dec
add
push
xchg
int
test
cli
lock
push
cwtl
cli
out
sbb
xchg
inc
jmp
adc
ds
add
out
cmpsb
sahf
mov
cwtl
stos
sub
icebp
sbb
out
lods
pusha
repz
inc
xchg
stos
xlat
insl
xchg
ror
or
lock
add
hlt
lock
add
data16
sti
pushf
adc
dec
push
xchg
out
out
fwait
cwtl
inc
sbb
add
xchg
lock
data16
cld
mov
xchg
dec
out
cld
sti
mov
fimull
mov
cmc
dec
out
pushf
repnz
hlt
lods
repnz
mov
pop
dec
sbb
lcall
jns
repz
xchg
leave
lock
lea
div
into
add
in
add
gs
neg
cwtl
xchg
in
stc
cwtl
pop
xchg
sbb
clc
xchg
std
sbb
xchg
gs
hlt
jl
imul
xchg
notb
add
out
jg
repnz
and
push
sti
pushf
shl
inc
xchg
movsl
or
mov
jns
fwait
mov
mov
xchg
dec
adc
rorl
into
repz
sub
mov
mov
mov
mov
repnz
xchg
sub
jmp
add
out
inc
aas
stc
stos
incb
es
rcrb
mov
cmpb
cwtl
mov
pop
xchg
div
lods
push
lea
lret
out
stc
push
push
les
stos
sbb
mov
pop
std
cwtl
adc
repz
cwtl
out
rol
add
adc
repnz
xchg
push
decl
mov
xor
dec
ret
xchg
sbb
cmp
xchg
cmp
leave
out
sti
pop
pop
call
inc
ss
icebp
cwtl
ss
int3
add
add
lods
mov
and
sbb
mov
in
test
clc
aad
xchg
mov
mov
clc
in
xchg
push
lock
repz
into
fdivrs
cmp
adc
add
testb
sti
hlt
stc
repnz
test
adc
inc
lea
mov
repnz
repz
addr16
aas
xchg
gs
std
cmc
xchg
leave
repnz
sub
adc
scas
sub
xlat
pop
cwtl
xchg
jae
xchg
mov
xchg
sbb
gs
mov
push
adc
sbb
repnz
add
les
lcall
insb
std
mov
decw
and
pop
movsb
div
mov
xchg
ret
lock
std
repz
jae
adc
cld
add
add
or
add
mov
nop
jmp
xchg
add
fildl
in
icebp
div
cmpsb
out
lret
icebp
out
std
cmp
lock
inc
mov
ret
xchg
or
cld
cli
push
std
dec
jb
add
sub
int
xchg
xchg
jecxz
incb
in
int3
mov
out
cmpsb
je
xchg
clc
push
dec
inc
xchg
repz
lock
mov
add
lret
sub
cli
int
mov
stc
repnz
cli
fcoml
cs
xchg
pop
cmp
add
xchg
fsts
leave
add
mov
div
out
add
add
in
mov
cmp
or
jne
nop
les
hlt
mov
ror
sub
lea
cmc
xchg
stc
cmc
mov
dec
in
data16
pushf
inc
cmp
mov
push
xchg
inc
repz
add
jnp
icebp
cld
sti
nop
pop
lcall
xchg
clc
add
jl
sti
rorb
dec
cli
pop
das
cltd
adc
ss
les
mov
mov
idiv
adc
repnz
add
cmc
into
les
cwtl
outsb
out
incl
lock
scas
and
add
push
into
repz
adc
lock
test
sub
popf
cltd
gs
cwtl
out
add
cmp
sub
inc
cmc
xchg
cwtl
pushf
shll
out
lods
dec
push
dec
or
stc
add
xchg
push
repnz
shlb
xchg
repz
scas
dec
popl
xchg
add
das
shr
ds
stc
sbb
stc
icebp
mov
out
push
adc
mov
ret
mov
repz
in
inc
pushf
lea
lods
or
pop
xchg
sahf
dec
mov
sti
cld
xchg
dec
mov
hlt
sbb
mov
cwtl
xchg
xchg
fldenv
stc
pushf
out
push
sti
repz
sub
cmp
jno
sti
xchg
incl
pop
and
clc
pop
lock
jg,pn
lods
push
cld
add
pushf
xor
idiv
cwtl
mov
add
repz
fdivrl
cmc
dec
negb
ret
repnz
add
out
repz
xchg
das
addl
stc
idiv
std
repnz
inc
js
sti
cld
enter
xchg
jno
repnz
cld
outsb
inc
xchg
ror
in
xchg
inc
hlt
idiv
cmp
stos
push
dec
aam
icebp
xor
std
xchg
gs
out
in
jl
movsb
sbb
pop
jmp
lcall
pushf
out
std
xchg
dec
sbb
xchg
jp
stc
push
and
jmp
cmp
pop
rorb
dec
xchg
add
push
sahf
in
fcoms
xchg
xchg
std
xchg
xchg
xchg
jns
cld
std
mov
xchg
in
ret
icebp
xchg
out
mov
xor
cwtl
mov
sahf
incb
pop
push
in
xchg
pop
lea
add
push
adc
cli
xchg
std
inc
or
xchg
adc
movsb
xchg
fs
cwtl
stc
repnz
mov
or
clc
repnz
inc
std
ret
scas
movsb
pop
cwtl
aam
lods
adc
clc
jae
mov
test
std
fcompl
jle
cli
fldt
dec
mov
dec
scas
jne
add
repnz
mov
call
xor
xchg
add
sahf
xchg
ss
imull
lock
cwtl
out
scas
mov
mov
push
jne
xchg
movsb
or
lret
xchg
cmp
pushf
add
movsb
cwtl
test
lods
sbb
std
cld
xor
call
hlt
xchg
div
and
iret
push
negb
jecxz
cwtl
add
ljmp
nop
mov
push
mov
js
pop
out
lock
add
dec
testb
cli
or
mov
shrb
xor
lcall
sub
movsl
mov
int3
movsb
xchg
mov
add
std
pushf
or
adc
test
repnz
roll
out
mov
sbb
clc
xchg
dec
loopne
sahf
out
inc
test
std
mov
mov
xchg
stos
pushf
add
cli
xchg
adc
sbb
cwtl
push
out
hlt
out
mov
js
add
pushf
hlt
add
adc
push
stc
cld
std
in
and
jnp
ds
inc
add
movsb
jmp
mov
dec
xchg
out
or
div
clc
out
out
xor
cmp
sar
push
add
cmp
in
xchg
clc
icebp
or
sti
cmp
repnz
in
sbb
xchg
mov
cmp
cld
add
dec
xor
xchg
add
lea
add
xchg
mov
rcrb
sbb
pop
out
or
cld
lcall
pushf
std
jge
call
adc
push
cld
popf
xchg
sub
cwtl
std
stc
lods
ud1
push
lock
dec
add
out
xchg
leave
repnz
inc
pop
cmp
clc
and
pushf
lock
sti
add
test
sub
sub
and
cwtl
ret
sar
dec
xchg
clc
repnz
icebp
xchg
lods
and
pop
jb
xor
and
stc
pop
xchg
out
pop
pushf
mov
jns
repnz
call
fsubs
xchg
sahf
mov
add
sti
testb
int3
dec
ret
lahf
jo
cwtl
xchg
add
cli
out
lcall
cld
xchg
lret
stc
cwtl
in
sar
ffreep
add
pop
mov
xchg
pop
fdivrl
sub
test
in
xchg
inc
adc
les
sbb
mov
xchg
aaa
xchg
aas
add
xchg
and
pushw
xchg
jno
out
jnp
adc
mov
mov
gs
test
xchg
add
cld
out
add
dec
cld
in
jmp
ss
pop
sbb
repnz
mov
sti
add
into
xchg
dec
lock
cmp
dec
cwtl
out
stc
push
lock
stc
xchg
shll
xchg
aam
dec
xchg
adc
sub
cli
mov
lret
scas
push
mov
stc
add
xchg
rorb
icebp
nop
enter
repz
dec
mov
xor
lea
cli
popf
inc
or
idiv
xchg
xchg
icebp
gs
and
and
cld
fdiv
cmc
divb
push
push
mul
mov
xchg
out
aas
sti
mov
repnz
inc
mov
xchg
out
pop
stc
fidivl
out
xchg
mov
and
ljmp
imul
xor
rclb
add
cmpsl
sahf
out
js
hlt
sbb
repnz
cwtl
xchg
push
add
mov
add
or
cli
out
dec
mov
out
test
xchg
cltd
jmp
xchg
add
arpl
outsb
out
je
xchg
test
add
notb
movsb
xchg
ret
sbb
cwtl
bnd
add
sub
lods
enter
lock
lock
fsubr
mov
sbb
out
xchg
pop
pushf
add
cli
adc
inc
xchg
mov
pop
mov
div
sub
jns
lock
aad
cmp
push
push
lds
add
jno
bnd
test
and
out
loopne
inc
mov
ljmp
cld
add
sub
idiv
in
xchg
push
lea
xor
daa
lock
xor
movsb
std
hlt
fwait
xchg
sub
les
rorl
dec
test
stc
mov
lret
mov
sbb
cwtl
jns
std
xchg
cmpsb
out
leave
std
add
cld
sti
fdivr
clc
lods
jno
out
fiadds
data16
jne
pop
jne
mov
jae
enter
push
out
out
pop
cwtl
push
xchg
repz
add
add
xchg
sub
ljmp
cwtl
dec
add
out
push
sarl
adc
mov
cmp
push
lea
push
ret
insb
stc
push
pushf
repz
paddq
sbb
in
out
cmp
fldl
sub
xchg
out
test
stc
out
inc
add
push
jo
popf
cmp
out
inc
push
xchg
jno
idiv
in
mov
stc
nopl
push
out
mov
xchg
fs
xchg
aaa
xor
int
dec
cwtl
pop
clc
clc
cmp
cmp
cwtl
cwtl
xchg
adc
repnz
imul
adc
adc
cmpsb
xor
add
jle
add
add
push
adc
pusha
jmp
pop
xchg
xor
cwtl
pop
xchg
sti
hlt
mov
in
stc
push
hlt
cwtl
stc
cmp
daa
cmp
cwtl
ret
xchg
add
fsubr
fisubrs
idiv
pushf
out
add
or
add
div
comiss
les
bound
adc
call
adc
cwtl
mov
jae
mov
push
push
xchg
push
repnz
mov
xchg
clc
scas
int3
inc
and
sub
xchg
testl
push
out
jno
lock
fucomp
mov
icebp
push
sub
mov
dec
xchg
stc
outsb
xchg
cwtl
cmp
or
cmc
inc
fldl
pop
xchg
icebp
cld
push
repnz
cld
in
aam
cld
enter
xor
jge
notl
hlt
notl
push
xchg
xchg
sub
xchg
add
cwtl
cld
xchg
negl
sti
sti
adc
not
sub
push
aam
xchg
hlt
xchg
repnz
repz
nop
pop
pop
xchg
add
mov
into
jp
xchg
ds
lods
or
xchg
lock
add
hlt
mov
loopne
mov
add
aam
jns
cli
lock
push
mov
push
cmp
aas
mov
imul
out
xchg
cmc
ljmp
mov
xchg
pushf
outsb
icebp
mov
add
lea
das
cmpsl
rcrb
lea
push
push
incl
cli
imul
add
jns
xchg
dec
xchg
clc
std
rorb
add
xchg
icebp
push
int3
add
cmc
dec
into
or
cwtl
std
sti
sbb
gs
push
add
adc
testl
mov
hlt
in
cmc
aaa
cld
rcrb
xchg
add
lret
cld
fdiv
out
xchg
insb
inc
cwtl
mov
cmc
dec
cld
sar
add
xchg
clc
adc
movsb
xchg
mov
lods
fs
cwtl
decl
push
std
sub
cmc
nop
or
cld
cld
cwtl
mov
xchg
test
xchg
dec
inc
xchg
stc
push
loopne
fistl
or
jp
xchg
jmp
cwtl
cmp
out
out
rorb
lock
xchg
xor
imul
xchg
pop
pushf
stc
std
in
xchg
jno
cld
mov
idiv
in
cwtl
imul
pop
xchg
dec
cmp
icebp
repnz
popf
jns
xchg
cmpsb
sti
mov
xchg
out
jnp
cmc
das
aam
jge
out
add
xor
gs
add
stc
ds
xchg
aam
in
push
xchg
icebp
psllw
mov
shl
xchg
xchg
push
mov
inc
out
xchg
leave
idiv
push
adc
cli
xor
xchg
std
mov
pop
stos
idiv
daa
xchg
mov
inc
push
sub
lret
cli
std
loop
in
lods
ret
jno
mov
inc
xchg
lock
notb
jle
cwtl
xlat
mov
imul
ds
cltd
add
lahf
xchg
push
push
cmc
cli
xchg
out
cli
scas
sahf
ljmp
sbb
adc
mov
push
incl
mov
xchg
mov
insl
hlt
mov
in
dec
xchg
setl
cmpsl
stc
mov
lcall
mov
sbb
sub
cwtl
jl
add
mov
add
pop
xchg
jnp
xchg
dec
out
add
test
mov
xor
getsec
mov
mov
imul
mov
lcall
cwtl
icebp
rclb
cld
add
xchg
cli
inc
repnz
fwait
mov
xchg
adc
and
xchg
jns
hlt
pushf
push
outsb
sub
les
xchg
pop
lea
jl
repz
in
cmc
push
xchg
xchg
test
mov
push
out
clc
jno
sti
enter
cld
sbb
mov
fdivp
adc
bswap
insl
cwtl
lcall
xchg
repz
enter
add
mov
sahf
xchg
jnp
xchg
lock
hlt
out
loop
and
pop
xchg
adc
int3
incw
in
xchg
pop
lea
xchg
out
clc
stos
cmc
repz
xchg
cmp
call
into
jge
testb
lods
dec
aam
inc
mov
pushf
mov
push
xchg
inc
pusha
pslld
lods
inc
repz
rclb
xchg
out
popa
repz
lea
out
sub
repz
out
xchg
push
out
add
xchg
lock
cli
fildl
xchg
stc
add
test
sti
jle
scas
pop
test
xchg
xor
testb
xchg
mov
cwtl
mov
repnz
loopne
mov
ret
subps
rcrl
test
sbb
pop
xchg
mov
pop
lcall
lcall
or
push
cli
repnz
call
leave
pop
fidivs
or
inc
mov
repnz
and
ret
iret
xor
and
les
push
sti
dec
mov
mov
cwtl
dec
lock
mov
das
cld
lcall
xchg
hlt
mov
pusha
scas
orl
in
nop
mov
popf
inc
arpl
mov
cmpsb
lea
outsb
out
add
sets
xchg
outsl
lea
hlt
pop
xorb
lock
sub
out
add
lock
out
push
add
pusha
add
inc
xchg
ljmp
inc
stc
lods
lea
sbb
pop
xchg
lock
lea
ret
icebp
cmp
sbb
xchg
icebp
cmp
pop
pop
movsb
call
nop
pop
sub
iret
negl
pop
dec
xchg
xchg
lods
mov
lahf
jecxz
out
add
xchg
mov
mov
mov
insb
xchg
stc
stc
out
inc
mov
sahf
iret
fsubrl
aad
loop
fdiv
add
sub
testb
cmp
sub
cwtl
pushf
stc
cld
push
add
or
std
stc
not
repz
cwtl
mov
loope
ds
icebp
cwtl
dec
xchg
std
cmp
push
pop
xchg
push
testl
push
xor
repnz
icebp
nop
mov
dec
cmpl
out
and
push
cmp
scas
inc
push
xchg
xchg
mov
test
pop
add
daa
loopne
mov
div
sahf
sub
icebp
bnd
enter
lock
stc
lahf
xchg
mov
insb
cld
or
mov
ror
loop
loope
pushf
sub
repnz
test
xchg
aaa
cld
je
xchg
stc
out
not
into
dec
sub
mov
icebp
repnz
add
xchg
jno
repnz
lods
sar
aas
mov
ror
aaa
xchg
fidivl
xchg
mulb
xchg
gs
aam
testb
mov
dec
mov
xchg
dec
cmp
std
out
mov
cwtl
std
add
sti
jmp
xchg
mov
mov
mov
test
push
add
lock
fcomps
cwtl
ds
pop
repnz
hlt
imul
push
nop
jb
add
mov
push
cmp
movsl
inc
std
cld
or
ds
mov
lahf
lods
cmp
add
mov
xchg
repnz
sbb
add
mov
cltd
add
sahf
loopne
xchg
cld
adc
shrb
jae
mov
pop
test
xchg
mov
incl
out
adc
cmp
and
insb
xchg
std
adc
mov
mov
cmp
push
xchg
mov
xacquire
add
hlt
xchg
adc
hlt
xchg
clc
and
out
call
and
sbbl
dec
jo
lock
cld
cwtl
test
mov
out
hlt
repz
outsb
xchg
fcmovbe
sti
std
xchg
out
add
jmp
sub
xchg
dec
sub
negb
xor
repnz
lea
push
int
dec
lea
std
pushf
add
adc
cmc
repnz
or
data16
xchg
jno
add
cli
mov
jle
xchg
jno
add
testb
jmp
pop
xchg
fdivr
stc
xchg
daa
rclb
lea
adcl
sarl
hlt
ret
fs
lock
test
mov
jecxz
push
xchg
cmp
mov
fimull
dec
dec
pop
xchg
iret
cmp
push
out
mov
cli
repnz
test
xchg
xor
cmp
in
fs
lock
mov
test
pop
push
dec
pop
aam
lock
xchg
and
cli
std
add
mov
loope
cs
test
rcrl
dec
cwtl
adc
cmp
jnp
xchg
xchg
or
xchg
sti
push
cmc
fidivs
xchg
dec
cwtl
shl
popf
mov
push
cwtl
sub
pop
fs
xchg
inc
add
std
ret
sub
in
inc
xchg
out
push
mov
cld
xchg
gs
out
ljmp
icebp
rcrb
std
push
movsl
bswap
out
jo
in
pushf
dec
xchg
out
add
lds
scas
icebp
ret
imul
push
test
xchg
ljmp
hlt
sar
adc
sub
xchg
das
pop
stos
adc
cli
out
std
adc
cld
out
pushf
mov
add
sti
push
pop
outsl
out
shl
xchg
hlt
fldt
push
pop
repz
dec
stos
add
repnz
sarb
shll
ret
fisubs
xchg
jns
idivb
cwtl
mov
stc
repnz
repnz
insb
call
sti
pop
pushf
cmc
daa
cmpsb
icebp
adcl
sahf
repz
into
in
test
inc
clc
adc
add
jnp
add
push
roll
dec
pushf
data16
lods
cmp
repnz
cwtl
scas
mov
and
mov
jno
ror
test
pushf
lret
sub
ds
or
mov
js
repz
xchg
adc
out
out
sbb
test
clc
je
xchg
cmp
movsl
addb
mov
xchg
fwait
lea
mov
xchg
icebp
out
push
arpl
cwtl
inc
dec
add
out
mov
add
pop
fcmove
dec
xchg
add
lock
add
mov
mov
push
mov
add
mov
sbb
mov
or
scas
mov
aaa
insl
xchg
jne
cmpl
movsb
cmp
repnz
fs
xchg
mov
cmp
xchg
loop
pop
bound
mov
push
add
lods
push
inc
cwtl
add
cwtl
mov
add
rclb
xchg
pop
out
sti
fldenv
ss
mov
out
stc
sbb
adc
pushf
loope
mov
gs
repz
icebp
pop
cmc
xor
cbtw
enter
test
mov
push
and
lea
and
dec
stc
cld
hlt
xchg
ret
pushf
mov
dec
cbtw
or
xchg
sahf
xchg
cmpsl
jmp
fsubl
cs
dec
sub
mov
out
stc
jge
xchg
clc
in
cmp
xchg
gs
ds
test
pushf
mov
stc
pushf
out
adc
lods
ret
loopne
repnz
mov
out
xchg
pop
dec
fdiv
test
push
push
adcl
mov
repz
add
out
xchg
pop
push
fsubrs
push
or
pop
cwtl
mov
mov
inc
xchg
pop
jl
rep
dec
cwtl
out
les
into
out
shrb
jmp
pop
rcrl
xor
test
lea
add
in
lods
lea
outsl
inc
push
sub
inc
out
fwait
lea
incl
clc
mulb
mov
int
lock
pop
rol
les
adcb
mov
jmp
xor
ror
mov
xor
fneni(8087
or
xor
lock
xchg
clc
fchs
rclb
inc
rcr
pop
mov
xchg
std
test
imul
mov
inc
lea
xchg
dec
test
test
xchg
or
add
cmp
mov
push
add
push
xchg
test
loopne
lret
icebp
repz
enter
push
enter
push
lea
push
sahf
fldt
sub
add
lea
mov
cwtl
push
xchg
cmp
repnz
insl
gs
out
xchg
xchg
mov
in
std
out
xor
fldlg2
out
enter
sbb
or
sbb
xchg
lea
ret
sbb
bsf
and
dec
xchg
mov
fidivl
into
jge
cld
sbb
lock
pop
pop
mov
clc
inc
add
add
or
andl
pushf
cmp
lea
mov
ret
mov
movsb
pusha
mov
ret
pop
cwtl
pop
lea
mov
lea
lea
dec
pushf
mov
xchg
or
add
xchg
sti
not
fcoml
dec
mov
mov
in
shrb
rcr
loop
hlt
inc
xchg
rcl
int
adc
loope
and
faddl
movsl
shrl
sarl
rcl
fnstenv
into
sub
adc
sbb
icebp
repnz
les
loop
mov
in
fildl
test
into
fists
jl
xchg
mov
test
fcmovnu
jns
faddl
aam
or
adc
mov
fcoml
bound
cltd
xchg
cmp
inc
rorl
divl
mov
enter
add
shrl
loopne
int3
fistpll
dec
insb
int
lods
mov
push
xor
in
xchg
sub
lods
repnz
in
test
icebp
cld
decl
jle
int
into
repnz
cmp
mov
sub
push
shl
mov
mov
loope
incb
lea
sahf
stc
mov
aas
popf
aas
fdivrs
iret
adc
xor
lock
repnz
add
mov
shl
lods
mov
xor
loopne
shlb
dec
lahf
in
xchg
add
bswap
cmp
iret
cld
add
pop
lods
jae
sbb
lcall
pop
loopne
mov
insl
push
mov
ja
aad
xor
fsubp
into
popf
pop
ljmp
fsubrl
lods
mov
scas
hlt
stc
add
mov
add
xlat
xchg
push
vmovq
icebp
xchg
mov
mov
xchg
rclb
lods
test
lods
out
or
cwtl
xor
out
enter
push
enter
mov
mov
rclb
mov
fistl
test
inc
loop
popa
mov
or
fistps
xor
clc
lods
gs
sbb
gs
sub
xlat
lods
and
sbb
sub
dec
enter
lock
loop
ja
loop
scas
cli
mov
xchg
mov
ficoms
sbb
aam
repz
popf
shr
lret
lods
repnz
mov
mov
iret
orl
mov
lock
sahf
xchg
lods
dec
das
std
leave
push
and
repnz
mov
decl
add
nop
mov
rorb
scas
hlt
movsb
mov
add
iret
inc
and
mov
adc
shl
and
cmp
xchg
popa
rcr
sbb
mov
adc
dec
lahf
dec
aam
fld
mov
out
sbb
cmpsl
stc
sub
jl
dec
sub
xchg
lds
mov
lock
mov
cld
hlt
mov
fsts
int
les
in
mov
loopne
mov
stos
sbb
out
mov
movsl
into
cmc
xor
stc
stc
les
xchg
xor
ficoml
add
push
mov
push
dec
lea
add
xchg
push
data16
xor
in
add
lret
hlt
xchg
out
push
xchg
in
inc
repnz
stos
mov
xchg
nop
pop
in
ljmp
jg
lods
in
movsl
lea
bnd
mov
add
enter
xchg
and
pop
test
xchg
mov
xchg
int
fcoms
xchg
or
ret
aam
into
movsl
movsb
fildll
add
mov
scas
mov
lea
add
dec
int
xor
in
xor
sbb
pop
out
push
fiadds
lcall
stc
stos
add
xchg
jmp
sbb
scas
push
and
mov
xor
xor
add
icebp
ret
out
scas
jl
les
popf
in
xchg
lds
xlat
mov
xor
cwtl
iret
xor
int
hlt
xlat
mov
ss
test
rclb
scas
in
lcall
shll
mov
push
sub
xchg
cmpsl
insl
pushl
inc
cs
scas
push
repnz
ds
int3
nop
mov
sar
les
mov
fwait
mov
scas
mov
lret
movsl
inc
dec
xchg
loope
inc
lcall
sar
aaa
rorb
dec
push
repnz
sbb
sub
add
ds
mov
xchg
xchg
movsl
xchg
cmp
mov
scas
xlat
push
sbb
lods
mov
rorl
xchg
repnz
mov
mov
ret
mov
push
iret
aaa
mov
lea
xor
cltd
mov
mov
inc
rcrb
mov
xchg
cmp
xlat
inc
insl
cli
pop
jmp
repnz
add
int
adc
jecxz
add
and
add
and
sbb
in
out
sahf
mov
lahf
or
mov
cmp
cmp
mov
in
cli
sahf
jge
lods
rolb
fdivs
cmc
adc
xlat
dec
popf
insl
adc
mov
mov
rolb
add
rcrl
sbb
adc
ret
pop
jmp
lea
mov
push
aas
rcrb
in
add
push
stos
repz
shlb
mov
stc
xchg
popf
mov
mov
or
push
mov
out
fidivl
iret
adc
mov
sar
enter
negb
lea
add
dec
add
les
fnsave
push
mov
mov
test
mov
out
xor
repnz
sub
push
fnstsw
add
add
sahf
enter
jne
pop
pop
mov
xlat
push
jg
push
lock
fcoml
push
les
leave
cld
fists
mov
cld
sti
cmpsb
inc
cmpsl
movsl
arpl
xor
repz
mov
mov
pop
mov
scas
sub
jo
rcl
adc
pop
add
mov
adc
mov
call
loopne
dec
mov
adc
lock
roll
fisttps
lcall
cmp
sti
or
adcl
sbb
sbb
fcoms
or
xchg
iret
rep
mov
xor
vmovq
push
mov
in
rorl
inc
mov
lea
xchg
xor
int
adc
enter
push
fcomip
fucomip
aad
xor
loop
lods
fnstenv
aam
aaa
mov
mov
lods
rorl
fstpl
fdivr
aam
add
shrl
xchg
inc
mov
mov
push
inc
pop
cld
sti
repnz
std
rorb
xchg
mov
sub
cld
add
popf
cwtl
fwait
cmp
dec
adc
mov
mov
sbb
xchg
xchg
sub
sub
aad
scas
fdivrs
lahf
inc
mov
jmp
out
xchg
arpl
sub
mov
mov
mov
add
out
and
cmp
out
int
pop
mov
sahf
insl
mov
stc
mov
xchg
push
rep
je
out
add
dec
sbb
pushf
mov
and
mov
shrb
faddl
push
icebp
dec
mov
into
sub
jnp
outsl
out
testb
push
sahf
push
jae
loopne
pushf
scas
add
pop
xchg
xor
stc
lea
push
add
out
rcr
stos
cmp
out
loope
rorb
mov
shl
scas
push
pusha
push
xchg
xchg
push
popf
push
push
movups
xchg
jecxz
into
stc
aam
loopne
ss
mov
mov
mov
testb
mov
sarl
xchg
sbb
rclb
xchg
aad
lods
das
aad
sbb
aam
inc
movsl
mov
ret
std
inc
rcll
aad
xor
ss
rorl
sub
aas
aam
hlt
stos
repz
int
scas
icebp
mov
imul
repnz
dec
jo
push
std
sbb
add
loop
sarb
mov
fisubs
jl
mov
mov
inc
cmp
in
mov
mov
addl
jmp
sub
mov
stos
add
mov
cwtl
ret
add
mov
mov
int
mov
xchg
push
nop
xchg
lods
fs
mov
add
insl
dec
ficoml
and
xchg
add
lea
mov
rcll
xchg
mov
divl
cli
push
sub
mov
cwtl
test
enter
add
gs
repz
test
xchg
lock
add
xchg
adc
jmp
loope
fcomps
push
pushf
std
cli
in
cwtl
lods
mov
std
add
xor
mov
lahf
pop
xchg
push
movsb
lcall
clc
repz
mov
add
fisubs
cwtl
mov
dec
inc
or
inc
pop
cwtl
mov
mov
div
xchg
std
cli
insl
mov
je
stos
add
repz
jnp
lea
cmp
clc
out
push
divb
sub
nop
lock
xchg
or
out
push
adc
int
mov
mov
mov
bound
notb
lea
lock
fwait
cli
push
xchg
jns
icebp
repnz
mov
xchg
cli
push
xchg
shl
nop
mov
lock
lock
movsl
fldcw
dec
gs
xchg
scas
xchg
sbb
icebp
cmp
hlt
cmc
xchg
sahf
xchg
mov
enter
std
xchg
lcall
repnz
loope
pop
mov
test
cli
aad
clc
push
out
aad
mov
push
mov
cmovo
icebp
les
icebp
stc
mov
add
mov
insl
std
adc
adc
data16
push
call
xchg
push
rcrb
inc
xchg
lods
fwait
daa
int
fisttpll
and
adcb
lahf
xchg
iret
in
inc
fcom
seta
inc
nop
fbld
xchg
and
cmp
loope
mov
and
xchg
cltd
imul
sbb
sub
mov
cmp
xchg
push
cwtl
and
into
shl
daa
or
cld
push
push
mov
les
cmc
adc
fcoms
scas
mov
xlat
popf
pop
fldcw
int3
xchg
mov
shlb
insl
push
rorb
arpl
ror
aam
ret
push
rcrb
push
or
cs
icebp
mov
movsb
fdivrs
xchg
in
ret
add
jns
stc
xchg
movsb
in
xchg
mov
hlt
add
push
repnz
mov
mov
std
clc
div
adc
mov
and
mov
sti
xchg
les
insb
cltd
add
sti
xchg
movb
add
into
stos
lock
cld
out
xchg
ucomiss
mov
std
or
sbb
pushf
out
xchg
imul
cmp
clc
lea
xchg
mov
out
xchg
stos
add
hlt
jns
mov
jle
iret
and
call
std
cmp
sub
rol
adc
adc
cmpsb
mov
sti
xchg
movsl
das
dec
shlb
aas
cwtl
in
repnz
repz
shlb
xchg
mov
lea
jecxz
sti
dec
pushf
add
std
sahf
mov
mov
xchg
mov
cld
inc
sti
clc
jns
idiv
adc
xchg
cs
sahf
xchg
push
push
repz
aas
pushf
fucom
popf
mov
xor
lock
scas
pop
or
stc
idiv
xchg
hlt
mov
icebp
lret
scas
pop
loopne
call
sbb
lret
xchg
movsb
pop
mov
in
mov
xchg
mov
in
fisubrl
leave
fxch
or
jmp
movsl
int3
sti
lahf
xlat
mov
ret
or
dec
aam
xchg
cltd
dec
in
movsl
pop
jo
sarb
loopne
cmp
mov
mov
sub
sti
sbb
sub
add
adc
cwtl
xchg
popf
shrl
dec
lock
std
add
push
iret
pop
cmp
jb
fisttps
in
lea
data16
dec
shl
add
les
cmc
cwtl
insl
push
scas
aad
pop
sbb
in
fcom
xchg
data16
insb
stc
enter
sti
in
cmp
loopne
cmp
mov
lcall
mov
hlt
xchg
cmpsl
cld
popf
inc
icebp
stc
mov
fwait
stc
sbb
loope
xchg
loope,pt
xchg
cld
cld
add
out
mov
mov
pushf
ud1
add
pop
cmp
icebp
cmovo
das
add
mov
js
xchg
pop
fisubs
jne
hlt
in
out
cmp
add
add
xchg
dec
xor
fidivs
pop
xor
mov
add
popl
mov
mov
adc
fnstsw
mov
lock
pushf
sahf
lods
cmp
lcall
mov
out
sbb
test
fildl
mov
or
lods
icebp
jmp
and
mov
addr16
mov
in
mov
lea
shrb
std
sub
push
mov
adc
push
data16
sti
mov
loopne
cmp
mov
icebp
mov
cld
jle
rorl
stc
mov
decl
add
faddl
pop
ret
cld
dec
pop
cmp
jns
cld
push
jge
cmc
cs
repnz
sti
push
lods
rcrl
mov
shrl
mov
lods
lcall
je
shr
sti
sbb
in
in
das
mov
lret
mov
or
jecxz
or
jmp
repnz
pushl
insl
ret
shlb
sbb
lock
mov
mov
pop
imul
xchg
mov
movsl
jl
mov
nop
adc
sti
arpl
lea
or
out
add
mov
mov
dec
roll
loop
add
add
xchg
ss
shll
dec
push
aad
mov
cmc
out
nop
test
repz
add
loope
mov
pop
ss
adc
xchg
ret
shrl
mov
fcmovnbe
push
xor
popf
xchg
shrb
and
scas
mov
inc
loopne
and
popf
add
cwtl
in
mov
adc
mov
or
rcl
das
dec
fadds
in
outsl
add
mov
inc
or
ret
jl
cld
aaa
cs
mov
test
xchg
cmp
mov
sbb
out
aam
popf
adc
sahf
pop
mov
int
xor
ljmp
call
aam
cltd
lods
sub
mov
push
xor
aad
je
nop
mov
sub
lock
nop
xor
inc
cmp
sub
sbb
or
div
xor
daa
fxch
into
daa
mov
cltd
into
push
mov
push
jns
imul
pusha
cmp
sub
add
frstor
fidivrl
popf
ficoml
add
nop
imul
fidivl
and
cltd
stc
pusha
in
rol
lods
pop
mov
mov
sub
jno
rcll
fidivl
or
loope
int
shll
ret
subl
jno
rcll
cltd
cmp
ficompl
or
fld
int
rcr
movsl
rorl
nop
rcrl
fiaddl
shrl
fadds
xchg
or
in
daa
fst
test
mov
test
test
sub
nop
imul
cmp
adc
cmc
xor
daa
fxch
idivb
mov
xor
dec
cmp
daa
adc
daa
loope
test
mov
mov
pop
insb
nop
daa
imul
cmp
or
std
icebp
mul
xor
daa
int
divb
xchg
cli
andl
xor
push
inc
divb
adc
add
loope
shll
lds
mov
lea
and
popa
rcll
fidivl
or
jmp
pusha
lods
fisubl
je
nop
fidivl
rcll
fidivl
and
pusha
popf
in
les
rclb
idivb
xor
daa
sbb
daa
loope
into
daa
leave
mov
sub
jbe
xor
dec
repz
sbb
or
fnsave
shll
lds
sub
jbe
imul
idivb
xor
or
stc
daa
in
loope
shll
shll
test
sbb
rcrl
mulb
xor
loope
lds
mov
xchg
push
sbb
sbb
nop
xor
push
inc
divb
adc
add
jmp
shll
daa
test
insl
sbb
nop
inc
imulb
add
icebp
xor
daa
aad
idivb
xchg
stc
mov
shlb
push
daa
inc
xor
daa
or
loope
aad
shll
popf
notb
fstps
jbe
pop
xor
cmp
or
stc
jmp
daa
mov
xchg
imul
push
inc
divb
or
daa
idivb
xchg
stc
mov
shl
xor
pop
inc
imulb
add
daa
loope
test
mov
lea
sbb
nop
insl
mulb
push
daa
dec
cmp
sub
add
daa
fxch
idivb
xchg
stc
adcl
testb
daa
xor
daa
add
imul
xor
daa
aad
divb
jge
add
nop
xor
pop
dec
testb
daa
sub
or
add
imul
xor
daa
int
divb
xchg
cli
adcl
nop
pop
notb
inc
daa
xor
or
shll
shll
test
imul
push
inc
idivb
and
adc
icebp
mul
xor
daa
int
divb
test
add
adc
fsts
jbe
inc
xor
daa
adc
div
xor
daa
test
mov
test
adcl
push
inc
idivb
xor
or
cmc
daa
jmp
mov
cltd
cmp
nop
daa
imul
xor
or
std
jmp
daa
mov
xchg
imul
dec
inc
divb
add
daa
aad
divb
xchg
stc
mov
jno
popa
push
idivb
or
daa
loope
test
mov
mov
rorb
nop
negb
dec
daa
cmp
sbb
or
imul
dec
idivb
push
sti
shl
lods
mov
icebp
shl
sub
mov
cltd
bound
imul
dec
inc
in
rcrb
lock
cli
int
mov
sub
mov
mov
pop
xchg
pop
in
rorl
fcoml
in
xchg
mov
aad
xlat
mov
data16
push
fisubrl
repnz
jns
mov
pusha
ror
fnstenv
cmc
out
mov
pushf
cmp
mov
loop
xlat
out
cltd
inc
cwtl
xchg
fwait
call
dec
lods
sahf
lahf
lahf
cmp
popf
in
pop
in
inc
adc
xchg
push
les
in
int
movsl
cmpsl
cli
in
cmp
push
rcr
and
loopne
iret
aam
pop
mov
lods
push
ss
inc
cwtl
xchg
enter
fcmovne
ret
xchg
inc
mov
loop
fistpl
in
xchg
loop
lock
pushf
and
fdivrs
pushf
sahf
loop
adc
lcall
movsl
lods
call
sti
pop
rcr
dec
pushf
outsb
fstl
rorb
add
fstl
mov
in
iret
push
mov
dec
test
rcr
in
adc
in
aad
outsb
cmp
js
inc
adc
mov
cwtl
mov
adc
fcmovu
loop
or
cwtl
sub
stc
aam
fldcw
mov
scas
ljmp
adc
pop
inc
fstp
cld
cwtl
loopne
into
gs
test
call
jp
cmp
aam
stc
or
xlat
mov
loopne
vunpcklps
cmp
mov
fwait
lcall
cmp
test
jecxz
sti
mov
cwtl
sbb
mov
pushf
xchg
push
sbb
pop
addr16
push
rcl
adc
shrb
mov
aas
in
outsb
shl
and
arpl
adcb
loopne
stos
rol
adc
jbe
shlb
adc
js
stc
rcrb
shll
or
lahf
js
mov
dec
rcrl
mov
insl
cwtl
adc
sbbl
dec
iret
loopne
in
fcomps
nopl
loopne
insb
stc
cwtl
fimull
mov
lcall
sti
jecxz
fistps
push
cwtl
adc
das
repnz
push
popa
clc
cwtl
xchg
mov
cwtl
loopne
cmp
popa
arpl
push
push
fucomi
rcrb
ror
cmp
push
fptan
int3
inc
ret
into
push
xor
fdivr
mov
stc
in
ret
pushf
cwtl
test
aam
stc
iret
movsb
int3
ror
fadd
in
cwtl
mov
fcom
adc
xchg
pop
push
mov
mov
cwtl
sbb
enter
pop
mov
movsl
or
iret
cmp
fcmovu
out
push
cltd
repz
dec
movsb
fistpll
loop
rcll
xchg
xchg
mov
dec
pushfw
aas
test
rcl
bswap
gs
ficoml
std
cwtl
cmpsl
sub
sbb
cmp
popa
cmp
sub
xchg
loopne
gs
cltd
lahf
loopne
out
cmpsl
sbb
mov
jge
rorb
cwtl
loopne
or
pushf
ror
out
inc
aad
mov
loope
pushf
mov
popa
sti
pushf
adc
adc
pop
jae
jae
in
sarl
shl
pushf
push
fcomip
test
stc
rolb
mov
cmp
mov
loopne
out
aas
in
rcll
mov
outsb
cwtl
pop
shrb
frstpm(287
scas
shrl
push
imul
into
icebp
and
push
gs
jmp
mov
xchg
shr
mov
in
rcl
movsl
das
sti
pushf
cmp
imul
sbbb
fsubrl
in
mov
outsb
in
ror
out
in
sets
pop
sub
lods
jg
test
jecxz
inc
dec
rclb
dec
sub
inc
stc
pushf
fdivrs
adc
loopne
xor
lods
xchg
mov
sarb
rcrb
fbld
xchg
sbb
lcall
mov
xchg
cmpsl
iret
pop
out
mov
popl
adc
loopne
xchg
pop
fcomps
rcr
loope
pushf
xchg
and
rolb
mov
mov
mov
add
add
lahf
rcl
pushf
mov
xchg
outsb
icebp
inc
cmp
fistps
xor
xchg
sbb
xor
scas
gs
or
pushf
mov
imul
cmp
fists
or
nop
out
imul
fistpl
enter
out
fbld
mov
shrb
mov
es
fimuls
fimuls
addr16
mov
sbb
adcl
jns
out
mov
mov
aad
cmc
xchg
jle
sbb
in
pushf
xor
ficoms
rcl
adc
fimuls
inc
cmp
adc
mov
lods
loope
xchg
aas
fnsave
sbbl
arpl
sub
je
cmp
ret
cli
cwtl
cli
gs
or
xor
pushf
addr16
dec
or
loope
iret
fcoml
mov
cwtl
add
cwtl
lods
shl
mov
fnstsw
fndisi(8087
out
add
jae
repz
repnz
pushf
mov
popa
mov
ja
jge
in
testb
sti
fstl
xchg
mov
outsl
ret
cwtl
push
shll
cmpsl
mov
cwtl
fisttpll
in
mov
push
cmc
push
inc
clc
pushf
lds
in
cltd
mov
loope
mov
cwtl
mov
in
mov
les
loopne
mov
in
fcmove
xchg
test
popf
and
pop
pushf
rcrb
push
rcl
mov
jo
rorb
rorb
cmp
push
sahf
aaa
pop
rcrb
push
xor
xchg
cltd
push
arpl
in
pop
out
xlat
cmc
fists
fmul
fstps
out
fists
negl
inc
into
fmull
loop
pushf
insb
or
repz
cmpsb
push
mov
jno
adc
jns
pushf
dec
rol
pop
lcall
call
cwtl
rorl
cltd
xchg
ret
lea
fwait
dec
pushf
loope
jecxz
xchg
cmp
out
and
and
aad
cld
cwtl
add
out
aas
pushf
adc
inc
rcr
mov
in
add
in
out
in
mov
outsl
lods
jns
mov
int
addr16
pop
cwtl
cmp
nop
ret
iret
adc
addr16
in
mov
cmp
pop
dec
xchg
cmp
mov
fs
jge
cwtl
in
icebp
jmp
fnstcw
loopne
add
loope
rorl
fcoms
aad
loop
mov
mov
leave
imul
xchg
pop
int
mov
insl
cwtl
fcomp
fcoml
xchg
xchg
and
lcall
push
xchg
sarb
out
lret
fcmovne
jecxz
lahf
pop
or
jecxz
clc
mov
aam
loop
repz
dec
cwtl
xchg
pusha
out
or
aam
jle
mov
sbb
pop
in
mov
pushf
xchg
mov
jns
sbb
lds
inc
or
sarb
xor
pop
dec
mov
push
mov
push
fcmove
and
cwtl
fisubl
shrb
cli
pushf
xor
xchg
cmp
popf
and
in
mov
cwtl
mov
inc
cwtl
enter
xchg
jl
in
pop
cmc
out
cmp
lock
fidivl
aam
mov
les
jl
into
rcl
shrb
cmp
enter
inc
cwtl
cmpsl
inc
mov
fcmovu
shll
sarl
mov
jecxz
adc
cltd
in
aad
lods
out
mov
cld
movsb
cmpsb
loop
icebp
movsb
dec
aam
add
sub
ds
fcomps
rcrb
push
cwtl
mov
sbb
into
mov
arpl
call
rclb
adc
fwait
rclb
lea
dec
test
fcmovu
cs
stc
fistps
xlat
ljmp
inc
add
loope
aad
lret
les
in
test
fmull
loop
lods
fstps
push
shl
lcall
pop
mov
xchg
mov
dec
lea
loope
enter
insb
test
xor
cwtl
loopne
mov
fcomps
pushf
out
ds
call
fstps
popa
ds
popa
or
cmp
mov
cld
clc
mov
test
fsts
cmpsb
shr
cli
movsb
negl
pop
mov
into
out
into
push
cwtl
jno
fst
xchg
jmp
cmp
outsb
mov
mov
cmpsb
sub
xlat
mov
add
cli
fcomp
adc
and
mov
cwtl
add
loopne
dec
fbld
mov
sbb
jmp
imul
cmp
xchg
fcomps
pop
sbb
or
in
lahf
xlat
cmp
jge
pushf
lods
das
push
and
les
and
rcrl
mov
gs
pushf
jmp
ret
cltd
std
fcmovnb
dec
mov
test
fisttps
sbb
cwtl
loopne
pop
adc
jmp
lahf
mov
into
lahf
imul
aas
xor
loop
xor
rcll
jns
in
cmp
xor
cwtl
push
cli
add
loope
adc
fneni(8087
dec
push
sub
dec
pop
and
cli
cmp
cmp
inc
fcmovb
jmp
push
pusha
jge
iret
fstp
adc
popa
cwtl
and
aam
into
pushl
fcmovbe
out
add
and
inc
into
push
add
cwtl
ret
adc
jo
mov
xchg
dec
movsb
stc
into
cwtl
and
rcr
fistps
notl
dec
stc
mov
fistps
xchg
or
in
int
pushf
fnstsw
pushf
data16
add
cwtl
cltd
dec
ret
cwtl
scas
in
clc
int
jmp
xchg
aad
sbb
dec
sarl
cmp
test
lods
xchg
ds
std
cwtl
xor
movsl
lea
sub
mov
into
ret
sub
rclb
lret
cwtl
loope
stos
gs
push
or
pushf
cmpsl
xchg
rcrb
fucom
dec
add
or
jecxz
mov
aad
loope
stc
lods
pushf
into
shll
xor
cmpsl
repnz
or
stos
mov
fistpl
xchg
iret
jmp
hlt
shl
pop
cmp
scas
push
mov
loop
in
pushf
scas
lock
push
cwtl
and
iret
lock
cwtl
dec
shrl
out
xor
fs
mov
dec
cwtl
pop
and
cwtl
mov
fstl
mov
pushf
adc
rcrl
push
aad
pop
cs
aaa
into
shlb
shlb
rolb
shl
fcmovbe
jl
pushf
or
lds
iret
data16
mov
jno
in
mov
adc
xchg
add
fsubs
mov
sub
pushf
rcl
rcr
rcr
xor
cmp
push
mov
data16
int3
dec
cwtl
inc
pusha
ror
pushf
ret
test
shlb
push
mov
icebp
push
add
cld
cwtl
into
loop
gs
loope
xchg
mov
lcall
mov
mov
push
or
fbld
pushf
sbb
dec
iret
jecxz
out
lock
mov
xchg
call
test
jl
iret
mov
rcrl
in
jmp
mov
pushf
add
loopne
cwtl
push
cmp
cmp
loopne
cmp
cmc
xor
pop
jecxz
push
hlt
mov
ror
xor
pushf
gs
dec
mov
shl
arpl
pusha
fcmovnbe
in
inc
add
mov
int
imul
sub
dec
sbb
fsubp
into
fistps
and
mov
insl
in
fstpl
repz
xchg
movsb
mov
ja
stos
in
in
in
dec
shll
cmp
jmp
nop
fnsave
loope
cltd
lea
inc
mov
add
xchg
push
decl
mov
mov
inc
pushf
xchg
lahf
fmul
stc
cmp
add
fcomp
fdivrl
in
in
push
imul
aam
jmp
cwtl
pop
je
rorb
and
in
mov
lock
pushf
sbb
mov
jbe
pushf
jecxz
jmp
loope
dec
cmc
out
into
ret
ror
jns
fs
loope
imul
xchg
and
in
nop
fucomp
int
xchg
and
inc
and
and
into
fistpl
push
loopne
pushf
mov
test
push
push
test
fcoml
and
js
cwtl
mov
sbb
jns
cmp
inc
mov
into
sbb
popf
xchg
mov
push
lea
sbb
les
les
stos
popa
iret
sub
add
sub
mov
cwtl
sti
cli
mov
lea
mov
scas
and
cld
lods
xchg
daa
dec
xchg
nop
cmp
mov
les
in
scas
ja
mov
cmp
ljmp
mov
sbb
mov
adc
dec
mov
sub
popa
mov
das
rclb
lds
rol
jmp
xchg
fnop
cltd
add
xchg
jne
shlb
mov
repnz
repnz
mov
dec
in
gs
fbstp
lea
cmp
or
sub
add
mov
add
push
add
aaa
push
pop
nop
xchg
in
das
adc
cwtl
pushf
pop
lods
aaa
fildll
adc
cltd
movsb
repz
sbb
mov
loopne
nop
xchg
fucomp
mov
lahf
xor
jl
lret
jo
mov
aas
mov
ret
xor
in
sbb
popa
mov
daa
adc
pop
cltd
sbb
add
popf
jle
sti
decl
test
lahf
cmpb
scas
jbe
xchg
xor
sti
xchg
jg
mov
cmc
jge
into
test
xchg
es
fwait
mov
outsl
xchg
movsb
push
mov
enter
int
mov
cmp
xchg
or
sbb
or
leave
sbb
jl
push
nop
aad
mov
into
lods
sbb
out
mov
mov
and
insb
lahf
cltd
popf
push
push
xchg
add
into
add
nop
xor
xchg
enter
xchg
adc
adc
mov
fs
jg
nop
xchg
jne
cs
push
lahf
shr
xchg
es
jmp
mov
add
jne
movsb
aad
mov
out
cmpsl
jne
xchg
sub
adc
xor
call
jns
sub
mov
aad
sbb
cmp
fisttps
testl
and
jge
loope
pop
fnstcw
lods
shll
mov
or
xchg
popf
nop
add
and
or
in
fisttpll
in
lea
add
adcl
xchg
pop
decb
lods
mov
lea
adc
mov
cwtl
int3
nop
cmp
mov
push
lea
push
aam
mov
pushf
popf
cmp
lock
mov
mov
jle
lea
aaa
mov
aaa
sbb
loop
push
lods
insl
insb
mov
inc
ljmp
xchg
xchg
xchg
push
xor
les
scas
movsb
add
insb
xchg
push
cs
push
sub
mov
int
or
dec
xor
xor
mov
xchg
stc
into
xchg
test
mov
das
cmpsl
lea
call
cs
enter
dec
addr16
in
or
mull
push
mov
insl
mov
lret
cmp
into
dec
nop
sub
sbb
test
nop
xor
xchg
xor
xchg
xchg
xchg
xchg
into
cmp
xchg
mov
pushf
adc
popf
in
mov
lods
dec
movsb
scas
into
cmp
cmpsb
rclb
fbld
in
xchg
out
or
nop
daa
lods
std
imulb
xchg
mov
cmp
lods
cmpsb
adc
push
nop
mov
sub
xor
stc
xor
test
sub
pop
dec
lods
sbb
and
cwtl
lods
sub
cwtl
xchg
lods
push
and
sbb
or
or
lods
and
jo
outsb
nop
loop
adc
lcall
xchg
mov
cmpsb
iret
sahf
dec
inc
icebp
xchg
xchg
test
les
jne
in
jo
add
cmc
shll
jbe
cmpsl
aas
pop
movsb
pop
test
mov
xor
pusha
pop
xchg
pop
jnp
xchg
fdiv
adc
iret
sub
aam
add
fisubs
xchg
pop
mov
dec
into
rcll
sbb
lea
pop
loopne
jle
mov
fcom
jns
ror
das
jle
pop
sahf
cmp
lea
dec
pushf
insb
cwtl
stos
add
add
nop
popa
testl
cli
pop
rol
popf
sar
add
lret
pusha
nop
pusha
loopne
incl
mov
stc
cmc
lcall
ret
dec
int
nop
xchg
in
push
loopne
movsl
xchg
xchg
pushf
adc
int
cwtl
push
pop
xchg
jg
xchg
fmul
sub
pushf
fdivl
or
lods
dec
push
dec
cmpsb
mov
rorl
pop
pop
mov
lods
jge
mov
mov
testb
cmpsl
sbb
and
rcrb
sub
jp
lahf
mov
cmovbe
dec
leave
bound
lods
add
push
insl
sbb
and
clc
loop
sbb
dec
push
imul
mov
jae
jo
jg
mov
shll
test
popf
jo
push
xchg
mov
popa
addb
pop
shl
pop
push
push
mov
jo
rorl
push
adc
mov
push
aad
in
jno
mov
enter
jp
mov
xor
ljmp
sub
out
ljmp
loope
sbb
out
mov
sbb
sbb
ljmp
and
das
push
ljmp
sub
in
push
mov
xchg
pop
mov
lea
xchg
fs
mov
mov
insb
fcompl
and
lahf
adc
repnz
outsl
mov
movsb
inc
pop
jle
pop
pushf
mov
cmp
mov
int
inc
idiv
cmp
xchg
dec
les
js
ror
dec
iret
pop
jb
and
je
dec
mov
sahf
add
cmp
mov
ficoml
and
jae
push
int3
pop
push
loopne
add
mov
dec
daa
cmp
imul
inc
and
sarb
stos
ds
mov
int3
mov
push
outsl
dec
inc
mov
mov
out
loop
out
or
loopne
lahf
dec
mov
int3
fs
sbb
mov
int3
xor
xor
int3
or
mov
icebp
or
pop
push
mov
lock
mov
mov
push
lret
jle
pop
lock
cwtl
imul
leave
scas
push
pop
lds
aam
mov
mov
adc
jne,pt
adc
nop
mov
push
adc
iret
xchg
inc
mov
les
mov
mov
mov
mov
xor
dec
in
xor
outsl
cmc
aas
mov
out
popf
mov
ret
rcr
loopne
pop
clc
mov
out
mov
dec
imul
jne
mov
in
leave
mov
scas
movsl
fcmovnu
repnz
mov
sbb
xchg
and
inc
sahf
mov
pop
push
xchg
push
gs
lea
or
sub
add
add
add
dec
nop
adc
sub
add
xor
adc
add
add
dec
outsl
popa
fs
imul
add
push
imul
insb
insb
outsl
arpl
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xchg
repnz
sub
mov
xor
stc
jb
and
shl
clc
jae
mov
aam
or
mov
jmp
arpl
jmp
int
imul
adc
jmp
std
lea
jmp
int
jmp
sbb
jmp
jecxz
call
pop
pop
stc
jb
mov
jmp
int
jmp
int
repz
repz
mov
neg
or
call
repz
pop
repz
stc
jb
xchg
jmp
cmp
repnz
stc
jb
cmp
not
sub
clc
jae
cmp
add
jmp
int
jmp
mov
scas
rorb
mov
sub
movsbl
ror
repnz
repz
repz
add
stc
jb
outsb
jmp
int
repz
repnz
clc
jae
sbb
test
testb
imul
jmp
imul
add
xor
repnz
xor
or
repz
jmp
xchg
clc
jae
sbb
fsubrp
add
movzbl
call
inc
and
xor
repz
stc
jb
repz
shl
add
jmp
rclb
clc
jae
stos
jmp
jne
ret
and
sub
repnz
shl
jmp
int
repz
stc
jb
adc
sub
repz
jmp
int
jmp
jle
jmp
int
jmp
int
xchg
mov
stc
jb
test
mov
call
cmp
jae
xchg
dec
repz
repnz
clc
jae
inc
shl
jmp
clc
sbb
dec
dec
jmp
int
movzbl
call
out
pop
jmp
aaa
test
add
movsbl
repnz
repnz
call
add
jmp
int
jmp
int
movsbl
repz
jmp
cli
jne
jmp
pop
stc
jb
add
jae
add
sub
add
or
sbb
aas
cmpsl
sbb
cmp
xor
cmp
inc
dec
and
pop
and
bound
loope
adc
jnp
push
mov
nop
test
enter
pop
in
int3
mov
pop
es
dec
addr16
out
repz
lock
adc
mov
pop
int
stos
lods
fisttpl
je
xor
test
sbb
int
xchg
lock
xchg
imul
mov
stos
mov
aam
jb
shr
push
int3
out
or
pop
xor
xor
adc
fwait
mov
popf
addr16
cmp
push
push
xchg
int
jge
or
xchg
ror
cmpsl
fdivrl
pusha
jb
clc
call
loope
nop
inc
lea
sub
mov
mov
mov
add
fldl
adc
testb
or
cs
push
aam
stc
cs
sbb
and
pop
sub
inc
sbb
dec
es
ja
push
insl
dec
add
mov
and
jnp
outsb
bound
jl
rcl
push
shll
xlat
mov
shll
push
push
pop
push
pop
mov
inc
inc
repz
addr16
add
push
imul
pop
clc
repnz
jns
dec
aad
lcall
push
pop
sbb
imul
mov
je
jp
mov
adc
lock
cmp
scas
mov
sarb
mov
popf
shr
mov
or
aaa
add
dec
inc
sbb
dec
inc
ficomps
lock
fdivrs
and
inc
addb
cltd
cmp
sarb
xor
jbe
push
std
mov
lea
shl
cmp
cltd
in
hlt
in
jp
arpl
pop
mov
fldl
pushf
fs
add
shl
add
daa
cld
pop
add
or
daa
loopne
xor
daa
inc
aaa
jb
push
aas
and
inc
es
jb
outsb
mov
mov
xchg
mov
mov
inc
stos
lds
ror
mov
lcall
sub
lahf
push
cwtl
pop
pop
xchg
or
inc
fs
lcall
cs
outsl
mov
xchg
aas
pop
pop
addb
sbb
lea
pop
lcall
fwait
mov
inc
test
dec
mov
movsb
js
fistl
dec
jno
sbb
pop
cmp
sbb
icebp
sbb
xor
int3
inc
and
inc
dec
inc
push
mov
shl
mov
jb
ljmp
jecxz
lea
sub
cmp
jle
shr
pop
shl
or
mov
psraw
dec
insb
fildll
mov
pop
sahf
or
add
xor
sub
sbb
dec
out
push
je
push
pusha
fsubrl
mov
and
cli
shlb
test
les
lds
mov
dec
fldenv
inc
cld
icebp
cld
neg
push
push
movlps
push
sbb
addr16
jnp
ja
pop
jl
jg
adc
jae
jne
pop
jo
in
jp
mov
jnp
repnz
xchg
movsb
jb
xchg
sub
mov
movsb
iret
xor
push
fcmovnbe
pop
out
sub
cmp
inc
add
pop
sbb
lahf
and
push
dec
dec
dec
jnp
lods
pop
add
mov
lcall
les
call
in
xor
movsl
sub
sub
repnz
clc
add
out
fisubrl
setns
or
mov
idivl
and
aam
jecxz
push
aas
jbe
dec
dec
and
ds
dec
push
push
dec
ds
push
pusha
jbe
imul
push
repnz
es
xor
mov
mov
adc
fnstsw
xchg
mov
push
push
adc
repnz
pushf
mov
push
inc
push
sbbl
lock
leave
pop
jecxz
cmp
insl
bound
fs
inc
stos
mov
pusha
adc
pop
out
imul
adc
scas
fs
mov
loop
mov
sbb
xor
sbb
sbb
pop
loopne
das
out
xchg
pop
inc
divl
gs
je
mov
or
nop
push
ret
cld
in
ja
xor
fimull
or
mov
shlb
jnp
daa
pop
jae
test
dec
dec
aas
and
mov
inc
fst
out
lea
loope
push
ret
std
push
inc
adc
cwtl
std
ss
push
push
subb
enter
dec
xchg
nop
nop
jmp
xor
mov
lret
xchg
pop
sub
hlt
out
push
pop
sbb
nop
push
pop
xchg
sub
scas
test
and
push
xlat
push
jmp
test
fwait
mov
push
mov
mov
pop
mov
dec
aas
call
jae
jae
cld
mov
cmp
adcl
inc
push
xchg
movsb
aas
jg
lea
jecxz
pop
repz
xchg
das
in
fdivr
cwtl
lods
jae
movsb
xor
dec
lahf
ss
cmpsl
or
or
clc
xlat
sub
xchg
aam
jmp
pop
cwtl
push
xchg
test
sub
jae
push
pop
push
mov
movsb
mov
xchg
cwtl
sbb
cmpsl
sub
mov
xchg
push
arpl
out
imulb
sub
clc
stc
pop
fnstsw
xor
mov
adc
mov
repz
and
clc
nop
enter
jg
stc
das
mov
fdivrs
outsl
push
or
mov
adc
sbb
cs
cltd
dec
scas
jnp
inc
or
fisttps
movl
fstpl
rcrb
sarl
hlt
sbb
scas
jno
xor
mov
insb
jb
int3
pop
fstps
loope
cvtps2pi
arpl
adc
pop
sahf
shrl
cwtl
cwtl
imul
repz
ja
fcompl
sub
sub
pop
in
or
lds
cmp
dec
xchg
xchg
mov
mov
xchg
cmp
inc
ret
clc
popf
scas
lods
pop
and
xchg
pop
xchg
jns
outsl
push
lret
or
xchg
bnd
add
pop
sbb
pop
push
cltd
dec
addr16
pop
imul
and
mov
jl
lret
fnstsw
push
push
rorb
sti
jb
loopne
inc
add
adc
push
inc
dec
in
hlt
cmp
sbb
or
inc
roll
mov
push
std
ja
xchg
pop
pop
mov
sub
add
jmp
cli
mov
push
outsb
push
aaa
dec
test
sbb
push
pop
lahf
outsl
pop
ret
lret
mov
xchg
sbb
cs
fbstp
sbb
lds
gs
adc
jmp
push
add
stos
in
mov
cmp
mov
or
arpl
test
cmp
mov
fdivp
jns
xor
xchg
popa
jae
fldenv
jecxz
mov
and
aaa
je
sbb
sbb
mov
sbb
xchg
dec
dec
and
and
inc
inc
in
call
dec
add
orl
lret
jg
pusha
lcall
outsl
les
inc
in
pop
fsin
pop
sti
test
dec
mov
sub
stos
sbb
sub
shlb
movb
cmp
sbb
mov
push
cld
mov
outsb
lret
cmp
stc
or
aad
sbb
repnz
cld
jle
cmp
and
scas
jne
and
push
aam
loopne
pop
das
out
jno
test
adc
jle
in
hlt
sbb
loop
sub
adc
jecxz
shrb
pop
cmpsb
test
cmp
dec
pop
shll
ja
jae
lods
cmpsb
pop
dec
stos
add
mov
icebp
in
pop
rol
adc
roll
scas
sbbb
scas
jmp
add
subl
pop
or
adc
icebp
js
andl
stc
inc
inc
jl
mov
clc
test
mov
jns
lret
shll
popf
aad
shr
hlt
aad
xchg
ss
outsb
pop
jmp
aas
sti
sub
pop
nop
test
scas
and
jle
into
and
or
fldenv
shll
insb
insl
arpl
add
pop
call
dec
add
add
es
push
ret
mov
imul
sbb
xor
lcall
fists
adc
or
aam
sbb
sbb
mov
cmpsl
inc
fldt
jno
in
push
jmp
jne
push
ja
test
icebp
adc
sbb
mov
mov
push
int3
push
ds
in
std
dec
and
cld
aas
jne
lret
scas
inc
xchg
roll
outsl
test
ljmp
pop
inc
mov
ljmp
jnp
aaa
xor
jnp
and
in
pop
xchg
repnz
jo
adc
cmc
inc
cmp
mov
mov
cmp
jl
cs
cltd
sbb
fsubrs
cmc
in
fprem
or
in
fimuls
xor
outsb
adc
lret
pop
inc
mov
push
adc
std
or
inc
fbstp
movb
add
mov
mov
lea
and
stos
aam
push
inc
fstps
repnz
mov
mov
out
mov
lock
mov
cmc
jbe
push
into
lods
mov
adc
lods
roll
mov
cmc
cwtl
sbb
xchg
pop
aam
sub
push
out
jg
pop
dec
pop
and
lock
cld
dec
outsl
xorb
push
xchg
or
inc
xchg
aam
cmpsb
stos
test
in
xchg
pop
stos
ljmp
inc
mov
dec
xor
cli
arpl
mov
stc
inc
sub
lcall
mov
es
in
mov
mov
ret
adc
mov
mov
sbb
xor
pop
adc
sar
sti
or
loopne
xchg
xor
data16
inc
lret
jbe
mov
xchg
cmp
mov
cmp
lret
jb
addl
cmpsl
pop
cbtw
mov
jno
pop
rolb
imul
inc
loopne
add
imul
inc
nop
sub
fidivl
addr16
fildll
fdiv
cld
rcl
loop
notl
pop
sysret
mov
push
outsl
adc
daa
inc
aaa
push
push
aas
out
orl
jnp
iret
add
xchg
insb
fwait
lahf
nop
lods
lods
xchg
shrl
mov
dec
test
iret
cs
cmp
bound
stos
pop
rol
cmc
lcall
ret
xor
int3
leave
pop
imul
or
fists
cmp
pavgb
mov
mov
decl
pop
add
cmp
clc
xor
xor
in
mov
pop
cmp
adc
shll
scas
fiaddl
mov
sub
xchg
mov
dec
adc
inc
xor
jns
jo
jp
dec
mov
loope
rcrl
mov
aaa
aam
mov
or
pop
sbb
insb
arpl
cmp
pop
xor
pop
pop
push
stos
jge
data16
shll
rol
movsb
adc
inc
repnz
lock
lahf
das
xor
sub
add
jge
aas
jg
sbb
jecxz
mov
jns
jg
in
xor
ss
ss
push
jp
test
mov
insb
mov
mov
mov
mov
cli
adc
pop
out
push
mov
out
je
test
cmp
lcall
fsubrl
into
or
test
testl
lahf
push
and
pop
popl
mov
inc
jne
push
jl
jae
sahf
sbb
fbstp
popa
xor
xchg
push
iret
mov
mov
mov
ret
mov
mov
and
cwtl
cmc
mov
sub
inc
inc
fsub
out
in
cld
xor
mov
ja
fbstp
rol
dec
jbe
fnstenv
or
aad
rcl
mov
xor
testl
cmp
add
dec
fistpll
fisubrl
out
and
ja
push
out
mov
pop
rcl
daa
mov
push
cmp
mov
lea
jnp
mov
rolb
or
popf
into
loopne
adc
popf
fnstenv
lahf
dec
pop
xchg
ja
js
mov
in
jb
mov
daa
sbb
xchg
ret
lret
and
sbb
sbb
test
inc
pop
scas
int3
mulb
int3
andps
repz
pop
add
lods
scas
ja
test
xchg
shll
pop
sti
jg
out
xchg
nop
lcall
mov
sahf
scas
add
and
jne
ja
push
xlat
pop
mov
add
inc
and
cmp
push
cmp
fldt
fimull
jne
adc
jg
unpckhps
or
or
sub
sbb
lods
daa
pop
je
sbb
mov
mov
testb
loope
or
fwait
mov
mov
std
adc
add
adc
xchg
notl
mov
aas
js
xor
outsl
pop
mov
ret
dec
mov
lcall
loope
cmc
mov
lcall
add
fisubrs
fmull
addl
lcall
push
push
daa
mov
xchg
sub
repnz
xlat
iret
icebp
nop
jle
aad
dec
call
or
mov
shll
inc
mov
xor
iret
pop
neg
mov
pop
mov
roll
ret
adc
aas
xchg
or
inc
sub
mov
mov
pop
xchg
stos
insb
loopne
dec
cmp
icebp
cmp
pop
push
jl
xchg
xchg
insl
popl
dec
daa
pop
bound
dec
pop
scas
insl
loopne
xor
mov
adc
and
icebp
divl
dec
in
or
jo
fists
sbbl
adc
lea
adc
fwait
mov
int3
dec
test
mov
inc
out
popa
mov
push
fs
test
aam
push
arpl
inc
jge
add
sbb
ret
mov
push
jbe
pop
fiaddl
and
into
mov
stos
ljmp
lods
sub
add
cmpsl
shrb
pop
sbb
mov
mov
dec
loop
shll
jmp
mov
ja
imul
scas
fsts
pop
icebp
xlat
in
mul
and
pop
push
push
add
mov
xor
aam
lret
or
ret
push
out
jge
fs
aas
push
add
jg
cmc
pop
cmpsl
inc
xor
int
mov
leave
mov
frndint
imul
jle
dec
xor
imul
pop
push
outsl
insl
aas
and
fildll
ja
fwait
pop
sahf
xchg
sbb
mov
cmpsb
test
testl
xlat
push
mov
add
shr
sar
into
push
lods
adc
daa
jnp
hlt
adc
inc
jg
cli
mov
pop
ljmp
pop
out
inc
sub
pop
enter
jp
leave
aaa
push
stos
das
loope
push
in
std
jle
out
out
bound
repz
movsb
das
test
dec
or
stos
roll
icebp
mov
lahf
rorl
iret
add
in
xchg
insb
test
pop
sub
lods
mov
dec
mov
inc
bound
aaa
stc
out
jne
cltd
cmc
addr16
fbstp
push
stos
mov
xor
push
movl
testl
jb
and
or
sub
sbb
xor
jne
subb
xorl
dec
xchg
test
inc
bnd
or
out
dec
test
popf
mov
add
pop
cs
adc
push
int
push
rcll
sti
aam
clc
test
mov
jns
xorb
hlt
mov
fldt
xor
inc
fists
sub
ja
jle
sahf
ja
mov
cmp
add
mov
pop
xlat
ljmp
push
cmpsl
lods
in
jb
daa
pop
push
jo
mov
jg
pushf
jmp
leave
push
and
test
pusha
pop
and
pop
jne
outsl
mov
xchg
mov
xchg
imul
add
aas
repz
leave
and
pusha
sub
lret
aam
pop
xchg
sub
pop
jne
fwait
pushf
adc
pop
pop
mov
shr
inc
mov
adc
pop
xchg
pop
ja
sbb
pop
int
mov
imul
imul
jg
mull
gs
sti
jg
mov
jge
aas
cmp
xor
shl
jecxz
fwait
imul
cmp
dec
std
icebp
test
in
inc
jno
inc
sub
mov
lahf
adc
std
mov
xor
mov
mov
syscall
push
jb
push
xchg
xchg
cli
cmpsl
cltd
punpcklbw
jns
lods
mov
loopne
je
mov
mov
xlat
clc
jge
jbe
call
xchg
sub
fidivs
adc
inc
les
pop
pop
fildll
sbb
push
aam
call
hlt
jle
xor
xchg
les
lahf
pop
jbe
sub
ret
pop
jnp
sti
push
mov
scas
daa
lahf
cli
and
mov
je
xorl
jge
stos
fstl
xor
daa
clc
push
loope
in
xlat
addr16
pop
mov
mov
ljmp
call
jg
mov
ljmp
cmpsl
add
aaa
iret
push
gs
fs
cmc
cmpsb
fwait
outsb
add
aaa
mov
ret
mov
inc
push
push
mov
dec
stos
loope
fcomps
es
and
mov
dec
jmp
daa
arpl
loope
or
push
lds
jg
ja
js
jo
int3
pop
mov
inc
sti
pand
lahf
sub
bound
bound
out
dec
test
pop
pop
popa
push
sub
ds
pop
int
icebp
repnz
mov
mov
push
das
pop
pop
xchg
movsl
xchg
push
ret
xchg
xor
fdivrs
fidivl
imul
mov
jl
rorl
ja
pop
dec
daa
jbe
jmp
aas
bound
movzbl
dec
jp
push
scas
fisttpl
test
mov
mov
pop
out
insb
test
mov
popa
iret
jne
stc
repnz
pushf
or
ja
fwait
in
stos
dec
adc
push
push
aas
ja
jp
inc
jecxz
xchg
push
pop
ja
pop
pop
notb
mov
or
filds
inc
popa
mov
mov
lret
jae
divl
das
pushf
or
enter
into
xor
pop
ja
jbe
idiv
adc
sub
shll
mov
bnd
test
sub
clc
hlt
sbb
in
sbb
dec
and
jp
jp
pop
lcall
and
int
imul
jg
aaa
adc
filds
iret
clc
pushf
mov
xor
cmp
sbb
ficoms
pop
push
fbld
test
sarb
ds
pop
popa
pop
cmpsl
rclb
fisttps
movsl
leave
imul
in
jmp
xlat
lods
xchg
in
hlt
std
add
fwait
test
enter
mov
je
add
fildll
addr16
loope
sbb
cmp
cmp
pop
nop
push
scas
movsl
jb
pop
jg
mov
iret
lret
addl
inc
in
in
int3
es
cmc
lods
xchg
daa
repz
inc
ss
pop
mov
mov
imul
inc
dec
cmp
cmp
gs
fdiv
cmp
pop
bound
fwait
pop
mov
shrl
mov
sbb
popa
arpl
rcr
test
mov
fistl
add
fisubrl
mov
lock
lret
sub
cltd
mov
dec
lret
pop
aas
fisubl
or
sub
and
rcrb
sub
push
mov
lods
pop
fnstsw
lret
ret
aad
insb
in
loope
jecxz
cltd
test
mov
scas
movl
dec
mov
test
stc
add
sub
adc
or
pop
xor
sub
jp
jle
repz
push
sbb
idiv
xor
neg
sub
psraw
adc
inc
inc
das
popa
dec
add
fcoml
xlat
cmp
push
imul
test
daa
cld
inc
push
lods
add
or
mov
and
loop
cmpsl
or
movsl
push
add
hlt
in
lret
adc
and
enter
xchg
xchg
inc
out
mov
in
jbe
nop
xchg
mov
xchg
xlat
js
push
and
xchg
push
sub
add
out
push
add
cltd
sahf
cmpsl
lret
xor
pop
movsb
push
mov
imul
lods
or
fwait
push
imull
dec
hlt
xchg
cwtl
xor
sub
aaa
jno
jns
xchg
sub
test
cmp
leave
jae
loop
lret
cmpsl
test
xor
clc
dec
test
mov
lods
adc
sbb
call
ja
dec
dec
dec
add
push
std
mov
inc
pop
repnz
mov
fs
mov
enter
inc
ret
add
test
push
push
das
and
lods
mov
push
fildl
stos
inc
add
movsl
cmpsl
in
xlat
fs
sub
mov
cmpsb
ja
mov
fyl2x
out
and
or
mov
das
and
aas
xchg
fistps
inc
aaa
dec
cmc
sub
popf
mov
daa
jmp
in
cmpl
in
cmp
in
addr16
push
xchg
xor
mov
iret
in
repz
imul
inc
out
jo
aas
hlt
mov
not
pop
and
aaa
and
jns
jbe
pop
xchg
cs
lds
xchg
lahf
mov
or
or
push
fst
adc
xlat
loop
aad
adc
push
lcall
pop
sarl
aaa
cwtl
mov
mov
adc
jns
xchg
sahf
subl
pop
sahf
push
lret
push
push
sbb
cmpb
jecxz
scas
scas
lahf
ljmp
dec
sub
pop
or
icebp
pop
inc
lahf
aaa
xlat
stc
add
push
mov
and
ret
xor
pushf
jecxz
cmc
mov
pop
cmp
mov
iret
mov
data16
mov
push
testl
mov
pop
dec
jbe
jle
jnp
jp
std
sbb
or
inc
add
nop
add
and
xchg
test
xor
out
stos
pop
pop
dec
lret
jmp
cmc
jecxz
repnz
enter
sti
add
jle
inc
cwtl
scas
lret
push
inc
cmpsb
push
js
xor
push
inc
cmp
rorw
add
jb
outsl
mov
test
imul
std
out
add
cli
pop
fisttpl
adc
jb
call
out
pop
push
mov
mov
test
and
dec
out
outsl
les
ror
mov
xchg
dec
out
xor
lock
add
jge
out
mov
xchg
jne
pop
imul
push
mov
test
fsts
iret
fcomp
pop
jb
int
mulb
sbb
sub
lahf
and
xor
sarl
ror
pop
and
inc
je
jae
mov
sbb
mov
pushf
jns
mov
mov
in
je
aad
mov
pop
inc
adc
mov
xchg
inc
dec
push
pop
ljmp
fstpl
orb
gs
and
out
rol
int3
in
dec
mov
cmc
add
xchg
jbe
and
xor
dec
xchg
mov
pop
jge
jbe
xorb
scas
lods
mov
ds
out
jp
pop
lock
cmc
cmc
je
or
das
ret
sub
add
cmp
cltd
inc
pop
out
sbb
jg
and
gs
cmpsl
cmp
jns
xchg
in
sti
stc
stos
or
adc
out
push
xor
std
paddusw
mov
lds
sbb
xchg
sahf
mov
gs
pop
or
aaa
jg
adc
xlat
xchg
xor
sub
mov
and
mov
enter
push
sbb
jl
xchg
pop
push
mov
daa
ret
sbb
iret
aad
shl
add
in
add
inc
sbb
cmc
adc
pop
push
sub
adc
sub
daa
push
pop
mov
ror
cmp
dec
add
or
add
or
inc
xchg
add
sub
cmp
ret
insl
jbe
cmc
pop
cmpsb
mov
scas
lret
test
fcmovnbe
jno
std
repnz
push
and
or
sbb
lods
mov
xor
inc
fwait
les
pop
push
pop
shll
lahf
mov
mov
cmpsl
add
jmp
loope
mov
out
adc
mov
test
imul
roll
inc
push
ljmp
inc
jecxz
in
icebp
xchg
js
les
pop
xchg
imul
pop
adc
dec
jo
pop
imull
clc
in
cmp
and
daa
mov
lcall
push
jecxz
arpl
hlt
cli
incl
jg
mov
add
jb
out
add
das
loope
xchg
pushf
xlat
inc
push
jbe
ret
adc
addr16
fildll
mov
and
sarl
and
mov
mov
push
push
aaa
int3
push
bound
mov
stos
dec
push
cmp
and
sbb
inc
mov
sbb
mov
push
push
insl
pop
call
dec
jns
mov
scas
imul
sub
jo
xchg
mov
cmpb
dec
loop
ljmp
jbe
pop
imull
mov
insb
es
loope
dec
pushl
mov
sti
push
movb
dec
jbe
insb
idivb
jp
repz
xchg
xor
popf
cld
int3
mov
imul
dec
xlat
pop
mov
testb
pop
mov
test
frstor
pusha
roll
pusha
lods
xlat
dec
scas
xor
loope
jle
xchg
in
mov
adcl
aas
add
rol
into
rcl
inc
outsl
mov
jmp
ja
pop
jo
mov
jp
sti
xor
cmp
push
jnp
sbb
sub
sub
cltd
popf
add
and
mov
mov
jmp
mov
das
call
add
inc
mov
xchg
cmp
aas
sbb
jp
test
jle
push
mov
push
inc
std
xchg
cmpsb
shll
fsubp
outsl
push
xor
insl
mov
sbb
aaa
les
mov
nop
out
inc
ja
jne
pop
cmp
fstenv
addb
out
jg
xchg
loopne
pop
mov
add
xchg
cli
inc
xchg
mov
sbb
inc
jnp
sub
push
test
je
movsl
inc
jle
insl
xchg
xchg
jge
ret
out
lcall
pop
bound
pop
aaa
pop
cld
mov
cmp
xor
cmp
cmpsl
ss
or
push
pop
jg
dec
sub
cmp
out
mov
mov
inc
add
push
in
push
cli
cld
pop
add
or
sub
pop
mov
pop
jo
jg
xchg
jae
jl
inc
mov
pop
adcl
into
rcrl
jne
idivb
sub
out
xor
aaa
aaa
inc
inc
add
inc
cmp
insl
popa
xor
loopne
fwait
loopne
jno
mov
add
in
dec
sti
push
js
jmp
scas
and
test
push
xchg
popa
out
mov
xor
insb
faddl
xor
add
into
fmuls
jp
sub
push
jo
inc
jmp
push
mov
movsl
int
cmp
dec
fists
xchg
in
push
orl
outsl
lods
sahf
sbbb
add
inc
xor
stos
aam
out
aas
inc
sbb
sbb
xor
sbb
imul
dec
jle
notl
mov
cli
psubq
pop
hlt
dec
add
or
dec
fsts
xchg
jae
cmp
dec
add
xor
dec
lahf
orb
cmpsl
mov
mov
imul
add
or
and
inc
mov
xor
out
lock
mov
les
mov
mov
adc
push
nop
stc
int3
xchg
cmc
lea
sbb
and
push
and
inc
jo
sub
and
and
mov
mov
mov
ss
xchg
adc
leave
cmp
or
mov
or
inc
out
push
pop
xor
sub
into
xchg
jl
std
nop
movl
faddp
int3
rcr
mov
out
out
scas
mov
adc
ds
mov
xchg
xor
push
pop
jge
int3
xchg
jb
clc
xor
inc
test
ds
ficompl
scas
mov
pop
push
inc
pop
lock
ja
in
out
repz
xlat
xchg
pushf
daa
sbb
test
inc
bound
dec
pop
jl
test
sahf
or
shr
rcl
sbb
int3
sub
sbb
xor
sbb
fidivrs
inc
push
fildll
xchg
repnz
in
sub
jnp
mov
lahf
adc
dec
dec
popa
xor
jmp
outsb
fildll
adc
pop
daa
fs
pop
ss
xor
aaa
or
test
pushf
cwtl
or
outsl
mov
leave
mov
rcl
and
mov
fldpi
mov
inc
xor
jns
or
daa
dec
movsl
xor
cmp
cmp
sahf
mov
mov
fxch
fbstp
fcomps
in
jp
std
std
push
or
mov
sub
xor
cmpsl
lods
pop
xchg
xchg
clc
dec
scas
repz
jp
adc
jle
mov
dec
jnp
or
jne
fmull
jb
xchg
out
xchg
add
pop
lock
scas
xchg
in
add
mov
mov
mov
adc
jmp
fstl
add
movups
movl
inc
inc
inc
xlat
lret
adc
push
out
jbe
jg
arpl
dec
xor
mov
cld
cmpsb
add
negl
push
arpl
ds
idivl
das
jo
les
mov
fwait
dec
pop
subl
dec
push
movsb
or
insb
push
lea
das
xlat
lods
push
xchg
push
sbbl
xorps
mov
inc
sahf
sahf
push
xor
jbe
jns
and
mov
adc
jg
xchg
push
test
ja
push
adc
stc
aas
jo
push
cmp
add
mov
out
jae
cli
outsl
xorl
cmp
sarl
jecxz
lods
pushf
shlb
xor
popf
mov
add
insl
dec
fstps
clc
mov
sbb
aad
je
fcomp
pop
push
fisttpll
testb
jg
dec
lods
pop
cmp
sub
fbld
leave
aam
fwait
xor
pushf
les
fcomi
lret
inc
ficoml
fsubs
jo
mov
sbb
jbe
fnstsw
lcall
inc
rcrb
je
sbb
movsb
sbb
lret
test
or
jecxz
test
adc
mov
push
cmpsl
pop
xchg
pop
pop
addl
and
mov
push
inc
push
or
enter
jp
ljmp
pop
adc
lock
movsb
fs
or
push
test
mov
shr
add
mov
pusha
xorl
pop
insb
lahf
pop
pop
cmp
loopne
bound
mov
out
cld
jp
ja
or
mov
je
xor
mov
mov
jae
sti
push
pop
add
testl
xor
mov
js
cltd
out
xor
push
mov
adc
pop
addr16
xchg
jecxz
andl
add
es
mov
adc
sub
test
mov
lea
push
pop
lea
mov
out
fwait
sti
mov
scas
sub
adc
pusha
sbb
rcr
fdivs
pop
sbb
shlb
cmpsl
cmp
pushf
mov
mov
dec
xchg
or
daa
lods
aad
push
mov
pusha
inc
jmp
dec
xchg
xor
dec
pop
movsb
repnz
movsb
adc
inc
call
mov
out
ret
into
push
stos
inc
jbe
cmp
push
cmp
jg
and
jne
loope
mov
rorb
sti
out
jge
jmp
pop
notb
add
push
adc
rcrb
loop
gs
pushf
call
mov
imul
mov
sete
scas
inc
xchg
mov
sbb
pop
iret
das
mov
out
xchg
xchg
enter
ror
int
pop
pop
daa
daa
sbb
jnp
cmp
xor
cmp
push
inc
mov
jg
jp
pop
mov
sub
dec
enter
mov
mov
cmp
sti
lods
jae
test
mov
add
fcoms
pusha
gs
jl
inc
sti
int3
jl
pop
sub
lahf
mov
and
ret
mov
movsb
jnp
das
repz
call
imul
lahf
add
push
or
adc
mov
pop
ret
mov
in
mov
adc
cmc
or
mov
nop
iret
fwait
xchg
pop
fisubs
call
mov
mov
les
repnz
mov
stos
dec
in
sbb
sbb
and
mov
lods
cmp
decl
sahf
movsl
roll
ret
lods
ja
ret
ss
stos
leave
mov
shl
ret
xor
add
sbb
fnstenv
and
pop
cli
iret
fwait
scas
push
and
in
stc
pop
push
mov
xchg
imul
ljmp
cmp
inc
clc
or
mov
repnz
pop
jmp
pop
xchg
sub
dec
jae
cmp
inc
push
mov
std
push
jl
cld
xor
not
and
mov
aad
leave
pop
sbb
into
inc
mov
lret
shr
sbb
pushl
cli
xchg
jp
adc
test
and
inc
dec
mov
andb
incb
push
outsb
mov
imul
test
sahf
lret
fcmovb
stos
outsl
mov
inc
lods
sub
mov
inc
xchg
ret
repz
notl
jne
sbb
outsb
cmp
rcrl
inc
idivl
arpl
inc
aas
iret
push
les
mov
xchg
sub
lret
shll
dec
or
mov
jns
cmp
loop
lods
fildll
jmp
add
mov
xchg
or
es
lds
dec
push
inc
cmp
lods
lahf
mov
imul
mov
leave
shrl
adc
das
sbb
rorb
mov
out
clc
inc
and
dec
notl
jno
dec
lock
fnstcw
sbb
mov
stos
inc
jbe
fwait
mov
xchg
push
shl
push
push
test
cld
mov
popf
jmp
cltd
dec
fistpll
mov
xchg
adc
and
lahf
pop
dec
xlat
cld
addr16
xchg
push
jo
jmp
cmp
push
sbb
fists
and
arpl
lret
pop
sarl
inc
adc
mov
pop
xor
push
es
dec
shr
les
daa
jp
and
jno
imul
mov
or
xor
mov
imul
jecxz
xlat
out
jo
mov
sti
or
mov
add
daa
imul
aad
pop
inc
sbb
addr16
xor
push
decl
add
repz
or
ljmp
jbe
mov
and
jecxz
and
les
push
aaa
cmp
mov
sub
and
pop
stos
push
mov
lahf
hlt
outsb
outsl
dec
jne
dec
lret
cmpsl
nop
xchg
sbb
pop
or
cmp
pusha
sti
fnstenv
dec
pop
les
das
notb
sbb
xor
mov
dec
push
fsubl
rcrb
pusha
stos
fnstenv
or
mov
mov
popa
fidivl
xlat
inc
int
add
xchg
idivl
sub
ds
jge
fidivrs
pop
inc
pusha
aad
pop
subl
pop
sbb
xchg
pop
mov
jb
mov
mov
mov
repnz
xchg
sub
cld
cmpsl
dec
das
fwait
mov
mov
cmc
push
cmp
int3
ret
push
push
xchg
push
jg
xor
mov
mov
or
out
and
jl
cld
xchg
push
inc
sub
xor
icebp
pop
popf
inc
nop
lods
ds
iret
aaa
cmc
jl
dec
mov
movsb
inc
jnp
mov
test
std
push
enter
mov
cmp
push
mov
mov
arpl
cli
sub
xchg
mov
aaa
daa
mov
adc
and
lret
sbb
pop
icebp
mov
cmpsl
out
mov
subl
lcall
pop
addb
dec
test
jno
out
cltd
shll
addb
push
dec
int3
fnsave
dec
cmp
sbb
ds
in
xchg
xchg
push
lods
pop
sbb
pop
mov
dec
sbb
jnp
xchg
mov
fs
icebp
cmpsb
mov
cmpsb
add
push
subl
insb
xchg
push
jg
nop
mov
mov
int3
jae
test
cmpsl
ss
loopne
scas
adc
iret
or
or
push
pop
sub
add
pop
lcall
pop
repz
pop
out
mov
das
je
push
in
adcl
or
bound
jp
call
addr16
sbb
jle
shlb
stos
mov
iret
adc
pop
or
sbb
test
repnz
pop
push
sub
and
je
dec
imul
and
xchg
or
adc
pop
sbb
roll
mov
fisubrl
or
pop
rol
push
xchg
and
and
lret
and
xchg
pop
mov
jp
popa
or
sub
iret
pop
pop
jecxz
mov
int3
shll
daa
hlt
fs
xor
scas
cmp
pop
dec
dec
mov
cltd
dec
rcr
ds
aas
or
out
pusha
jecxz
pusha
repnz
pusha
or
scas
mov
dec
and
push
movsl
xorl
xchg
mov
adc
clc
out
jmp
or
cmp
in
mov
mov
imul
pop
push
fistpll
xchg
popf
iret
repz
sbb
notb
hlt
bound
sbbb
push
xor
xchg
test
hlt
push
inc
or
test
xchg
cli
cmpsb
outsl
lods
mov
mov
dec
roll
mov
lods
mov
jnp
or
je
push
out
and
and
push
cmc
movsb
pop
push
rcrl
roll
fwait
jae
lret
pop
outsb
test
and
or
adcb
outsl
imul
ret
fistps
js
divb
loopne
pop
push
add
push
mov
adc
out
jne
sub
sub
cld
xchg
andl
jo
sbb
cmpsb
dec
lods
add
loop
fdivrs
in
xor
je
jp
xlat
stos
pop
aas
mov
adc
sbb
jo
movsl
loopne
jo
fsubrl
js
dec
out
js
lret
sti
push
testl
add
xchg
mov
pop
lock
mov
dec
add
or
out
pop
jb,pn
inc
pop
fadd
das
out
lahf
out
xor
inc
aas
and
ret
or
enter
and
jmp
aas
lods
movsb
xchg
lret
pop
in
setg
mov
jle
outsl
push
mov
xchg
dec
daa
cmp
mov
mov
lahf
shlb
int3
pusha
rcrl
iret
mov
es
xchg
xchg
sub
movsl
xchg
jbe
xchg
lcall
aaa
icebp
aas
jae
inc
xchg
in
pop
jnp
jno
scas
mov
repnz
sbb
push
inc
and
mov
data16
je
jmp
mov
pop
xor
cmp
leave
leave
add
fs
xchg
mov
into
iret
stc
movsb
sbb
fisttps
mov
and
jne
inc
lret
pop
cli
rorl
pop
adc
jnp
pop
and
ret
mov
decl
or
inc
scas
xchg
sbb
cli
jmp
popf
aad
dec
testl
jb
xor
xlat
cmpsl
fcoms
cmp
enter
push
mov
inc
test
adc
iret
out
cmp
xchg
cld
out
pop
lds
jne
hlt
push
mov
fldcw
sub
jle
sub
xor
cli
ja
sbb
inc
sub
dec
cmp
cmpsl
mov
nop
jmp
iret
mov
mov
test
test
jb
rcll
push
das
pop
sbb
mov
sub
pop
mov
xchg
ja
and
daa
add
or
xor
cmpsl
mov
mov
outsl
pop
jmp
jecxz
or
xchg
into
xlat
in
push
push
jg
lret
and
mov
loop
and
xchg
out
ja
mov
and
in
cmp
jg
jle
test
fcompl
and
sbb
pop
push
jl
outsl
mov
jmp
or
out
cmpsl
sub
stc
jmp
jg
ret
mov
outsl
jo
das
aaa
mov
repz
mov
dec
cld
fsubrl
mov
xchg
adc
xchg
jbe
jg
mov
mov
mov
ja
aas
in
dec
popf
stos
aad
sub
sub
outsl
jle
test
shrb
in
push
faddl
push
push
adc
je
xchg
iret
push
scas
xchg
loopne
dec
sub
sub
mov
dec
hlt
pusha
ds
imul
loopne
aaa
jbe
sbb
add
das
xor
cmp
out
jbe
adc
mov
inc
xlat
xchg
pop
dec
nop
out
rcl
in
mov
inc
xlat
sti
js
int
cmpsl
push
sbb
mov
sub
mov
cmp
ds
push
stos
roll
mov
push
or
pop
dec
pusha
and
jno
mov
adc
xlat
pop
stos
mov
ljmp
lods
sbb
sub
out
in
shlb
inc
jge
out
jge
fnsave
cld
dec
arpl
inc
pop
pop
sbb
mov
aaa
mov
xchg
add
push
inc
shll
lods
push
ja
cmpsb
test
inc
cmp
mov
or
lods
dec
out
es
sub
jl
mov
ja
sub
add
inc
jo
js
comiss
nop
jge
leave
mov
dec
stos
ljmp
pop
xchg
push
mov
cmc
aam
in
fistps
mov
jg
out
pmullw
sbbl
jge
call
mov
pop
outsb
inc
sub
int
adc
add
lahf
or
ds
iret
insl
mov
mov
ret
cmp
pop
das
lret
jno
scas
sahf
mov
mov
lret
add
push
fwait
daa
not
stos
cmc
sti
push
mov
jecxz
icebp
gs
les
lods
pavgb
jne
dec
jge
pop
sub
test
jl
repz
push
pop
je
shlb
pop
mov
push
ja
movsl
pop
test
outsl
cmp
pushl
dec
decb
int
outsb
imul
mov
bound
inc
ja
mov
pop
dec
push
xchg
or
das
mov
fistl
pcmpeqd
xlat
test
inc
or
jg
jl
push
adc
aaa
xchg
in
int3
rorl
xor
jae
gs
xor
out
test
js
int
loop
pop
xchg
pop
push
in
sub
pop
pop
sub
shrl
xchg
or
imul
iret
adc
fsubr
pop
mov
push
outsl
pop
fimull
xor
lcall
pusha
or
idivl
add
ljmp
jmp
or
lret
xlat
and
lds
and
ja
and
gs
arpl
push
jne
div
cld
xlat
lods
fistps
stos
adc
arpl
jns
in
fldenv
xor
repz
add
sub
mov
or
inc
or
add
das
mov
lods
out
cltd
fwait
stos
push
int3
shlb
and
xchg
incb
or
mov
add
pop
es
push
adcb
and
or
mov
or
push
push
or
xor
xor
add
inc
mov
mov
leave
js
adc
cltd
out
popf
add
jmp
inc
popf
hlt
in
sub
enter
lods
or
mov
mov
and
sbb
xor
rcrl
xor
mov
lods
stos
insb
mov
loope
xchg
int
inc
mov
add
inc
lcall
or
aad
dec
movsl
push
jbe
sub
roll
pop
outsl
or
ja
outsl
je
inc
sub
sbbl
push
sahf
push
sarb
scas
stos
out
or
insb
dec
sbb
pusha
cwtl
mov
xor
xor
rclb
xchg
out
xchg
jle
and
add
jmp
ret
fwait
jb
std
fwait
ret
add
arpl
ficomps
cmp
jge
dec
jno
icebp
outsl
jmp
and
and
adc
call
popa
push
jae
out
jl
dec
rorb
xchg
and
mov
fld
enter
in
aas
mov
push
push
aad
iret
xchg
int
cmpsl
jl
dec
adc
dec
push
movsb
pop
js
push
add
xchg
daa
dec
pop
pushf
je
movsb
pop
xchg
sub
jg
sub
cmpsl
mov
jmp
push
mov
fistps
aad
and
and
data16
cld
addr16
push
out
pusha
hlt
fcoml
stos
mov
outsl
insl
bound
push
clc
loopne
inc
incb
or
in
sets
mov
xchg
add
decl
js
mov
mov
push
sub
decb
iret
repz
jg
aam
pop
adc
xchg
lcall
cmp
jne
adc
pop
lret
jo
mov
mov
aad
int3
lea
daa
inc
sub
out
in
fiaddl
icebp
jecxz
imul
pop
cmp
inc
es
inc
add
pop
fimuls
inc
add
pusha
ja
jl
into
jbe
mov
sbb
mov
pop
mov
pop
popa
cmp
iret
ret
inc
cli
addr16
cmp
clc
rcrl
sbb
push
sub
jno
mov
mov
jo
ljmp
and
sub
bound
pop
arpl
sarb
lret
ret
stos
dec
add
jecxz
adc
xchg
fprem1
sbb
ja
ds
icebp
push
jmp
jae
inc
and
cmp
jg
testl
sub
mov
pop
lahf
mov
outsl
xor
or
sub
insb
daa
push
or
es
mov
xchg
ljmp
jns
stos
mov
lods
addr16
fwait
movsl
and
popf
xchg
jle
jecxz
cmp
xor
or
fbld
mov
and
stos
es
xchg
arpl
ret
jae
test
cmp
xchg
mov
loopne
xchg
call
std
mov
lret
fldl
add
ja
push
xor
xor
sbb
mov
int3
sub
outsb
adc
push
jecxz
add
add
lcall
rolb
or
or
out
shl
cmpsl
das
ficomps
and
daa
adc
fidivs
inc
xor
insl
nop
insl
rorb
mov
stos
xchg
jae
xchg
mov
jo
pop
or
push
fsubs
sub
inc
div
int
in
fistpll
mov
and
pop
outsb
in
pop
mov
push
pop
cmp
data16
push
ss
jae
cwtl
adc
addr16
andb
push
mov
sti
push
add
push
push
imul
imul
ss
pop
fwait
imul
pop
loopne
dec
notl
or
or
pop
mov
adc
outsl
loopne
dec
add
stos
jae
and
push
and
sbb
sti
and
rcr
push
sub
lods
push
stos
pop
jl
jae
andb
pop
and
mov
mov
ret
sbb
xchg
loopne
popf
popa
xchg
push
shrl
div
mov
xor
mov
cmp
mov
in
stos
fistpll
pop
jmp
imull
icebp
pop
jb
or
lret
in
jb
lret
cmp
mov
cmc
loope
push
jbe
icebp
movsl
je
in
iret
push
test
push
mov
or
inc
pop
jg
cmp
and
mov
dec
adc
test
lahf
sub
mov
cmpsl
mov
adc
mov
fdiv
xor
sarl
xor
rclb
aaa
loope
testb
mov
jp
cmp
in
out
jns
jge
cmp
xor
fnsave
cmp
mov
movsb
sbb
cmp
cmp
pushf
mov
imul
cmp
push
adcl
mov
jno
repz
mov
xor
jecxz
out
add
shr
popf
test
inc
in
pop
lock
pusha
mov
ds
pop
pop
je
sub
mov
mov
push
adc
mov
mov
lret
mov
rcrl
mov
aaa
push
inc
int
test
jne
cli
jns
pusha
nopl
mov
mov
ja
loop
jmp
push
out
addr16
lds
xchg
in
fwait
std
daa
cmp
xchg
dec
outsl
mov
js
fwait
fs
cld
sub
mov
xchg
gs
adc
sub
push
dec
sub
outsl
imul
and
lods
xor
nop
sub
leave
stos
sti
or
iret
or
in
loop
daa
push
call
fldenv
pop
mov
in
jmp
dec
push
int
xchg
cltd
lods
mov
inc
lcall
mov
imul
mov
stc
pop
das
outsb
repnz
jo
in
xor
dec
inc
out
gs
enter
insl
ljmp
outsl
jmp
jo
dec
call
add
xlat
inc
enter
xchg
stos
cltd
dec
mov
adc
jo
mov
push
push
fistpll
aaa
orb
or
jl
dec
sbb
es
out
dec
mov
pushf
xchg
mov
push
shlb
fs
js
cmp
addl
or
xor
shlb
jno
pop
out
out
xorl
repnz
lods
or
xchg
hlt
das
inc
sbb
sub
ja
popf
dec
or
imul
sti
mov
pushf
xor
out
sub
sub
mov
ljmp
and
enter
mov
in
pop
adcb
dec
lods
mov
cmp
and
fs
adc
test
push
add
fs
stc
sub
mov
and
lahf
or
test
lret
mov
test
cmp
inc
push
cli
inc
xchg
cmp
sbb
inc
sbb
sbb
into
sti
push
out
shlb
sub
repnz
dec
lods
jecxz
push
sbbb
jno
push
adc
fimuls
xor
cmp
cmp
cmp
rcll
pop
xchg
jmp
out
pop
test
sub
idiv
out
cmpsb
mov
pop
mov
aaa
aaa
inc
inc
test
outsb
xchg
push
mov
lea
jge
mov
stos
jp
cmp
add
jb
jnp
mov
scas
in
outsb
rcl
out
jmp
cmp
sbb
xchg
inc
js
cmc
adc
popf
add
lods
xchg
mov
or
sub
out
push
or
push
ret
fcomps
into
mov
faddl
mov
clc
std
or
or
adc
mov
scas
push
ret
es
push
sahf
push
cmp
test
pop
stos
mov
mov
dec
inc
cmp
pop
aam
ds
loop
inc
cmp
mov
mov
scas
aad
cmpsl
lods
mov
jl
mov
pop
jp
imul
mov
xchg
mov
mov
movsl
ljmp
cmpsl
daa
jb
fsubl
dec
shll
dec
test
cs
mov
shrl
push
pop
xchg
pop
mov
xchg
aad
adc
notb
cmpsb
fisttps
nop
loopne
dec
sub
inc
or
push
loopne
clc
sbb
shr
mov
adc
mov
sub
pop
nop
add
pop
in
mov
jae
gs
inc
movsb
xchg
mul
xchg
movsb
nop
push
test
pop
rolb
mov
decl
push
xchg
mov
mov
int
pop
and
mov
sti
push
orl
popa
xlat
scas
imul
rorb
daa
scas
cmpsb
cmp
xor
das
sbb
inc
in
dec
jns
mov
push
ret
xor
dec
divl
in
ss
pop
test
pop
add
jp
mov
inc
insb
iret
loopne
arpl
xchg
add
dec
mov
leave
out
into
popa
fwait
test
jbe
lock
ret
xlat
inc
mov
push
jb
dec
cmp
cmp
jns
je
adcw
jne
sub
push
fcmovne
mov
repnz
enter
ja
fcmove
loopne
inc
jl
push
int
push
or
add
jge
and
inc
sahf
std
mov
push
xchg
sahf
stc
add
addr16
outsl
test
xorl
mov
cs
outsb
stos
nop
jge
enter
push
fs
lock
add
mov
inc
es
icebp
int3
push
rorl
mov
scas
cwtl
xchg
repz
sbb
cld
mov
imul
xchg
fstp
or
jbe
pop
fmul
jecxz
adc
enter
dec
pop
xor
mov
sbb
popf
ds
jmp
bound
jecxz
lret
popf
test
fwait
sub
arpl
xchg
xor
sub
mov
hlt
loop
loopne
sarb
sti
push
hlt
jmp
daa
adc
and
push
mov
stc
xchg
sub
xchg
cwtl
aaa
ret
or
xor
icebp
ds
roll
test
mov
in
xor
inc
je
pop
fisubl
shlb
inc
sub
push
or
sub
push
push
xchg
lock
idiv
cmp
jne
movsl
push
add
cmp
stos
fcom
test
ss
out
and
icebp
mov
dec
loope
clc
inc
inc
aam
call
sbb
mov
adc
push
mov
cmp
out
pusha
lods
call
enter
xchg
fcom
lahf
cmpsl
shlb
in
inc
cmp
mov
xor
mov
movsb
jb
mov
and
outsb
jns
outsl
fs
int
and
xor
pop
lock
jmp
lods
int
popa
xchg
pop
sahf
test
xchg
lret
or
clts
mov
mov
push
mov
push
nop
add
push
and
mov
dec
push
cwtl
and
cmp
xor
jne
xor
scas
jo
xorb
cmp
or
inc
mov
hlt
jp
cmp
or
movsl
jnp
movl
jb
jge
loope
dec
jne
mov
inc
pop
sbb
xchg
jnp
cli
lods
add
cmp
shr
jbe
dec
xor
and
or
in
jg
jns
mov
pop
push
push
xchg
gs
xor
insl
or
sbb
push
xor
sahf
enter
mov
iret
std
daa
rcl
pop
jo
adc
scas
mov
int3
push
dec
std
push
push
cpuid
or
cld
inc
das
mov
add
jo
aam
cmpsb
clc
mov
mov
scas
loop
ret
test
dec
loopne
gs
popf
add
jnp
test
aaa
add
mov
sub
jo
sarl
outsl
adc
rcrl
ds
and
xchg
cmpsb
sti
iret
jo
mov
cmp
pop
adc
adc
addr16
frstor
shlb
das
dec
cmp
cmpsl
inc
aad
and
xchg
sbb
outsl
mov
mov
cmp
aas
jmp
out
das
rorb
pop
sub
pop
push
add
sub
out
dec
call
cmp
rorl
push
outsl
in
scas
mov
popa
xchg
or
fdivl
test
mov
rorl
popa
inc
std
addr16
pop
mov
xchg
cmp
das
das
bswap
idivb
add
sbbb
fnstcw
ja
clc
arpl
jno
adc
mov
lea
push
dec
inc
sarb
push
into
xlat
fistps
jae
fcmovnb
js
cli
sub
xor
adc
mov
cmpsl
xchg
push
mov
inc
add
jne
sarl
sub
xchg
xchg
and
clc
push
js
cltd
scas
inc
sub
stc
or
dec
loope
cli
or
lret
insb
pop
fisttps
test
jp
mov
xchg
pop
add
push
dec
xor
sub
mov
test
mov
jno
mov
sti
mov
dec
ret
insl
cwtl
jne
or
test
gs
js
mov
cli
xchg
mov
div
xor
mov
inc
aad
loope
repnz
inc
inc
add
hlt
cmpsb
fimull
sub
dec
fnstenv
leave
inc
sbb
or
inc
or
aas
fmull
out
cld
sbb
aas
fwait
lea
sbb
jno
jle
mov
loope
clc
add
or
stos
sarb
int
or
sub
sub
lock
xchg
es
stc
int3
out
stc
pusha
aas
push
push
jbe
add
mull
xchg
aas
dec
jl
mov
pop
jp
and
or
push
sub
inc
ss
mov
neg
testb
fcmovne
nop
adc
gs
adc
pusha
fcmove
in
fisubrl
xchg
push
popa
dec
dec
shrb
push
call
mov
cmpsb
fstpl
in
pop
mov
or
test
jecxz
nop
daa
out
loope
loop
js
cmp
jns
in
sbb
mov
fdivrs
cli
push
sbb
dec
xlat
mov
push
imulb
sub
pusha
enter
std
repnz
fwait
outsb
jg
mov
inc
pop
mov
cli
mov
testb
dec
pop
lcall
mov
imul
into
lods
jb
jnp
sbb
pop
fxch
sahf
into
inc
mov
mov
jmp
and
filds
loopne
mov
and
dec
dec
dec
mov
mov
add
mov
adc
stos
js
lods
nop
gs
aas
rorl
ljmp
lahf
mov
pop
mov
fwait
jmp
sahf
cld
jae
movsl
data16
pop
fldln2
mov
cld
mov
dec
xchg
push
test
inc
jge
push
xor
mov
lock
js
sahf
xlat
out
daa
jmp
sbb
inc
xor
or
mov
jl
sbb
inc
inc
sub
adcl
mov
dec
xlat
mov
xor
sbb
iret
inc
ljmp
test
icebp
xor
sbb
add
sahf
mov
cld
inc
jnp,pt
jmp
imul
addl
jae
jg
fs
adc
jnp
push
aad
call
mov
ficoms
lds
iret
rorb
mov
fsub
daa
popa
cmp
push
enter
cmp
stos
adc
mov
dec
mov
jns
aaa
cmp
cmp
sbb
movntq
push
mov
div
aam
sub
and
add
and
js
or
mov
push
imul
mov
insl
sti
lahf
mov
and
jmp
enter
or
pusha
shl
lods
add
sbb
fbld
movsl
pop
lret
push
xor
push
pop
or
scas
sti
cli
mov
pop
sahf
fiaddl
shrb
imul
xchg
jle
inc
push
mov
not
imull
mov
cmp
mov
push
lds
ja
scas
leave
adc
push
mov
push
stc
fstpl
sarl
pop
push
sbb
ret
sub
mov
jo
std
das
jnp
inc
push
inc
jne
cwtl
fwait
int3
pop
cmp
inc
xchg
adc
mov
pop
sahf
loope
dec
push
push
test
aaa
ficoms
cmp
ja
push
xor
pusha
push
das
jnp
call
xchg
nop
or
pop
cltd
movsl
into
mov
fdivp
divb
sbb
int
scas
jecxz
pop
ret
test
stc
sbb
movsb
push
push
out
mov
data16
dec
mov
dec
aaa
mov
std
xchg
or
inc
into
xchg
orl
int
aam
fmulp
sub
pop
out
rorl
cmc
pop
insl
cmp
addr16
stos
xor
cmpsl
pop
xchg
movsl
scas
push
rep
push
push
dec
popf
adc
cltd
icebp
mov
jge
cmpsb
inc
repz
inc
test
dec
stos
xchg
mov
mov
sub
fs
sub
inc
add
xchg
out
je
test
push
outsb
addr16
push
push
inc
sub
push
gs
mov
test
mov
mov
test
push
adc
xchg
push
repz
lret
shrl
inc
hlt
add
xchg
add
and
pop
or
lods
pushf
inc
cmp
and
xor
mulb
inc
adc
stos
mull
sbb
dec
adc
cmp
pop
jecxz
pop
mov
inc
add
and
roll
lcall
xor
lcall
ja
adc
and
mov
cmp
mov
mov
inc
jns
sub
lcall
call
icebp
xchg
test
out
pusha
push
xorb
enter
push
push
int3
nop
push
fwait
out
and
xchg
in
xchg
push
test
sub
pop
push
stos
pop
movsb
and
jmp
jmp
stc
shlb
xchg
mov
mov
cltd
out
push
sub
xor
ret
push
pop
pushf
cs
push
cmp
out
add
lock
enter
push
push
aad
clc
je
int
mov
mov
out
sbb
jnp
cmp
mov
pop
pop
inc
repnz
xor
xchg
push
test
iret
mov
repz
mov
pushf
mov
fs
jbe
scas
sub
orb
xchg
es
push
insb
xchg
inc
mull
xchg
fwait
or
mov
fs
jmp
mov
xor
divb
daa
cmp
xor
jl
nop
je
push
shll
repnz
loop
cmpsb
mov
mov
dec
arpl
js
mov
mov
dec
xor
enter
repnz
and
insb
ja
lahf
aam
sbb
adc
sub
jo
and
dec
mov
jl
outsb
xor
sub
xor
pop
adc
cmp
pop
xor
leave
dec
stos
pop
insl
dec
pushf
cmpl
ds
lcall
not
add
jmp
mov
and
rcrl
cwtl
add
test
mov
lods
push
outsl
cmp
nop
leave
cmp
pop
ds
les
arpl
or
stos
mov
lods
and
mov
mov
aam
fists
hlt
out
or
sbb
out
or
mov
sbb
push
scas
popf
xchg
jmp
loop
push
inc
xor
ficomps
mov
sbb
xor
fnstcw
shrl
test
arpl
pusha
cs
mov
fs
sub
mov
dec
mov
cwtl
outsl
sub
sar
xor
cli
push
push
pusha
imul
js
fists
lods
dec
inc
inc
push
xchg
rolb
dec
stc
je
fcoms
daa
inc
pop
outsl
les
je
dec
mov
mov
xor
mov
mov
cmp
into
push
roll
pushf
cli
pop
dec
mov
dec
fwait
mov
push
sbb
adc
scas
mov
and
xor
daa
xor
ds
mov
aaa
cmp
int3
push
stos
test
popa
in
imul
loopne
fldcw
cmpsl
nop
aaa
das
mov
sarl
in
ljmp
or
data16
and
jnp
dec
pop
incl
jl
aas
sub
xor
addr16
scas
cmp
sub
jae
pop
jmp
scas
hlt
into
iret
bound
push
or
std
jl
push
jne
mov
jo
fsubs
mov
cld
pushf
aas
xor
ret
lock
loopne
push
sbb
push
fstpt
loop
mov
pop
or
and
sub
jle
sub
xor
int
inc
imul
xchg
adc
imul
shll
mov
pop
mov
jns
mov
xor
cmpb
mov
xchg
push
xchg
lahf
iret
mov
fincstp
das
dec
in
or
aaa
add
push
negl
mov
mov
adc
aas
xchg
movsl
bound
sbb
jno
in
sbb
std
xchg
mov
popa
cmp
xchg
fsubl
out
in
xor
dec
pop
push
clc
mov
add
or
test
dec
decl
fwait
pop
pop
push
cltd
sti
fmuls
xrelease
inc
mov
in
stos
scas
pop
ds
xchg
xchg
popf
xchg
xor
xchg
lods
iret
jnp
leave
sub
cs
call
mov
pushf
xor
xchg
add
lods
dec
adc
outsl
das
pop
lds
int3
loope
sbb
lahf
pop
xchg
ficoms
fcompl
jnp
scas
pop
xchg
subl
out
jo
nop
dec
mov
mov
mov
sub
push
sbb
pop
pop
lcall
add
xchg
jg
sub
adc
dec
or
push
adc
jne
popf
jg
add
adc
mov
insb
dec
cmp
push
arpl
jbe
daa
dec
subb
sbb
xchg
push
in
push
iret
cltd
in
cmpsb
inc
inc
xchg
pop
hlt
add
aam
mov
sub
xor
out
push
xchg
xor
out
sbb
jecxz
cmp
in
inc
dec
daa
cmp
cmp
cmpsb
ret
sti
cli
add
or
movsl
jg
out
xchg
mov
scas
mov
mov
aad
sti
int
dec
loopew
push
repz
sti
popa
dec
mov
push
mov
pop
icebp
psubsw
std
sbb
iret
inc
aaa
add
cmc
rorb
xchg
daa
cmp
push
cwtl
dec
call
or
mov
lea
out
push
out
jl
jp
mov
scas
mov
ds
jmp
loop
testb
outsl
cmp
add
clc
adc
mov
ja
xor
push
mov
cltd
sub
mov
aas
testb
jg
pusha
or
mov
cli
xchg
pop
cmp
das
cmpsl
mov
mov
sbbb
jg
fistl
out
rol
daa
mov
into
call
scas
inc
and
dec
pop
sub
rcl
cld
adc
dec
daa
add
lock
jge
repnz
adc
aaa
inc
pop
or
xor
pop
and
xorb
push
adc
xchg
lahf
mov
cmpl
jb
es
push
sub
xor
push
sti
mov
sbb
in
lea
xchg
iret
cs
mov
dec
negl
loopne
pop
inc
push
ret
push
push
pop
scas
mov
inc
test
mov
test
jmp
lcall
out
adc
lock
pop
cld
sub
popa
push
pop
ja
testb
xor
dec
xchg
out
mov
scas
in
ret
popf
in
out
neg
mov
push
or
sbb
scas
clc
aam
xlat
int
rcrl
test
or
jnp
jle
inc
mov
and
repnz
jecxz
xchg
in
adc
xor
cwtl
cmp
add
push
sbb
inc
movsl
inc
fstpl
gs
sbb
xchg
push
sub
outsl
and
aaa
jbe
add
ret
aaa
inc
lods
dec
in
jno
adc
lds
and
bound
sub
std
inc
stc
inc
lret
in
pop
mov
add
adc
leave
sbb
stos
mov
lret
lret
mov
hlt
daa
clc
push
faddl
xchg
lods
fsubrl
jns
cmp
mov
push
cmp
cld
or
jmp
dec
jl
sub
or
fsubl
sub
mov
mov
loope
sbb
sub
ljmp
cli
cmpsb
sbb
sbb
fcoms
xchg
add
add
imul
sub
fidivrl
loopne
jl
lahf
jge
aam
rolb
rcrl
cs
adc
push
and
gs
shl
or
leave
push
rorl
mov
or
insl
and
stos
mov
pop
adc
jne
imul
mov
and
bound
push
and
cmp
jnp
push
lea
mov
ja
mov
fs
scas
cmp
icebp
scas
aad
push
xor
rorl
daa
scas
lea
cmp
or
or
int
cmp
arpl
mov
daa
lock
in
stc
rcll
mov
sbb
and
and
pusha
sub
cmp
movsb
xlat
xchg
jg
fdiv
cmpsl
std
int
dec
xorb
push
mov
lcall
or
xor
mov
cmpb
xlat
or
fnstenv
xchg
add
daa
aad
or
int
jbe
addl
or
aam
aad
mov
xchg
stc
mov
mov
sub
js
js
cmp
cld
add
jno
xor
jbe
add
divps
jo
mov
test
jno
pop
cmp
std
das
jne
or
icebp
jne
xor
jae
loopne
scas
jle,pn
mov
mov
into
std
sub
add
pop
leave
into
stos
mov
dec
jecxz
lea
push
in
and
adc
stos
and
sbb
out
incb
inc
and
xor
sbbb
mov
and
fidivrl
pop
mov
inc
lock
aaa
push
jmp
xchg
cmpl
push
jae
popa
sbb
inc
mov
insl
pop
enter
or
cmp
mov
mov
repnz
out
cmpsl
lods
dec
lret
jp
int
sahf
shrl
fidivs
add
lret
sub
jns
int3
adc
pusha
mov
andb
std
hlt
xchg
mov
mov
dec
jp
mov
fnstenv
test
adc
mov
cs
cmpsl
and
push
loope
div
ss
cmc
test
gs
pop
lods
in
or
cmp
cmpsb
mov
inc
lea
cmpsl
xchg
and
and
fistl
ja
cld
aas
fnstenv
aaa
pop
push
jno
mov
iret
popl
negl
jb
and
add
mov
mov
lret
call
lahf
mov
shll
addl
sbb
push
ss
or
sbb
aaa
jbe
mov
imul
je
or
fstpt
pop
rclb
paddusb
xor
psubq
insb
push
movsb
rclb
pop
mov
dec
push
cmp
mov
push
pushf
dec
jl,pt
mov
ds
and
push
sbb
loopne
je
sbb
fsubr
xor
lahf
inc
fdivrs
push
aas
popa
or
inc
mov
and
push
in
jbe
ficompl
and
fistpll
mov
xchg
in
jmp
or
out
push
mov
data16
inc
push
mov
lods
addr16
popa
cmp
sti
xor
mov
sub
mov
daa
outsb
cli
mov
popl
inc
mov
cmp
cmc
fdiv
test
repz
test
es
in
sbb
pop
and
sbb
mov
inc
stos
push
lock
pop
cwtl
xchg
or
sbb
dec
mov
jmp
mov
hlt
pop
out
es
in
aad
pop
lods
movsl
pop
push
xchg
lods
loop
pop
sub
dec
arpl
aam
out
mov
inc
mov
mov
pop
sub
add
adc
rcrb
shrl
and
or
aam
sbb
push
inc
xchg
jge
push
dec
mov
clc
jmp
dec
xchg
aaa
sub
stc
pop
xlat
push
lcall
pop
mov
sbb
shl
int
scas
jge
push
inc
sbb
xchg
sub
mov
icebp
push
sub
inc
stos
iret
pop
jnp
iret
pop
push
ret
dec
fistpll
ljmp
adc
shll
not
lcall
sbb
inc
mov
pop
pop
loop
push
or
sub
push
insl
jmp
aas
push
lret
add
cltd
push
or
ret
fwait
jg
pop
jp
inc
pop
jp
mov
mov
in
loopne
push
ret
mov
fldl
lods
sahf
or
lret
aad
adc
jle
std
jno
add
outsl
and
pop
or
dec
sub
push
mov
jnp
cmpsb
xor
cmpsb
insl
lods
pop
inc
mov
mov
adc
lods
xchg
ja
mov
push
imul
jo
xchg
mov
dec
or
insb
push
dec
ljmp
and
xor
ret
inc
dec
pop
xchg
dec
jo
jo
cmpsl
gs
stos
imul
cmp
mov
stos
jmp
mov
ja
fdiv
lcall
xchg
iret
cld
jge
out
in
mov
out
ror
icebp
mov
xchg
iret
fs
loopne
push
cltd
xchg
sub
jg
jecxz
inc
cli
push
xchg
sbb
pusha
mov
andb
jp
lcall
and
leave
arpl
cmp
xchg
xchg
out
lahf
test
sub
test
sub
inc
out
bound
faddl
mov
je
jno
or
rcll
out
dec
mov
adc
out
pop
test
sbb
arpl
mov
cmp
cmp
sbb
mov
or
lea
pop
rorb
jnp
pop
test
aad
mov
inc
jae
ljmp
scas
lahf
adc
xchg
popf
loop
lock
test
inc
sub
push
add
jecxz
ljmp
repz
clc
pop
push
adc
outsl
fildll
ss
je
dec
mov
pop
rcll
xchg
xchg
xchg
adcb
daa
out
movsb
mov
inc
in
jg
fisubrl
add
sub
adc
sbb
dec
mov
lock
xchg
push
neg
cld
jb
in
xorl
out
push
imul
dec
and
mov
iret
loopne
add
leave
in
add
movsl
push
mov
xchg
jmp
cwtl
lods
insl
loope
pop
mov
xor
fucomp
adc
in
das
fbld
ja
and
lret
or
popf
in
adc
pop
mov
cmp
sub
adc
dec
xchg
fdivs
and
ljmp
dec
mov
scas
pop
pop
insb
idivl
push
add
daa
jmp
or
cli
test
add
hlt
push
je
sub
stos
in
mov
pop
fsubs
int3
clc
ret
mov
xchg
stc
adc
xchg
ret
mov
loop
ss
testl
mov
mov
test
mov
mov
repz
and
pop
loope
adc
pop
inc
xor
xor
rcll
mov
xchg
mov
subb
data16
ja
xor
push
scas
das
xchg
in
subl
or
inc
shlb
xchg
icebp
lret
bound
out
and
inc
add
pop
inc
aaa
sbb
out
arpl
or
push
cltd
dec
lock
mov
inc
add
jg
push
insb
ds
cmp
adc
scas
push
roll
xor
and
lahf
mov
iret
jmp
add
xchg
jg
aam
stos
ret
test
xorl
dec
fdivrs
add
inc
inc
cltd
add
xor
leave
inc
jbe
or
out
or
movsl
out
out
roll
les
push
mov
sti
xor
xchg
int3
mov
sbb
or
inc
pushf
xor
into
iret
test
jne
movsl
jb
mov
mov
jnp
out
cmp
popa
stos
push
xor
clc
mov
fdivrl
andb
test
mov
iret
stos
outsb
mov
add
xchg
jns
cwtl
adc
pop
in
mov
or
adc
gs
out
add
or
idivb
arpl
sub
movsb
rcr
mov
jae
inc
and
jnp
loope
lcall
add
ss
pop
or
xor
lcall
inc
push
testl
movsw
cmc
sbb
lret
cs
frstor
sar
leave
out
stos
mul
cmp
shl
and
je
pop
aaa
jbe,pn
sub
and
in
add
mov
pop
imul
sub
cmp
pop
and
sub
push
arpl
or
mov
jg
add
mov
pop
sub
jmp
pop
push
add
daa
loope
xchg
popf
inc
inc
pop
sbb
sbb
stos
arpl
fwait
movsl
push
and
cmp
and
cmp
jb
in
test
push
add
dec
xchg
mov
mov
sbb
push
jne
insl
enter
mov
jecxz
aad
flds
imul
jmp
xor
pop
ljmp
jg
sbb
dec
inc
aaa
push
inc
loope
mull
jns
cmp
push
cwtl
xor
lret
push
popf
jg
xor
arpl
push
jns
lods
lret
nop
pop
sti
mov
ljmp
jg
xchg
vphaddbq
sarb
lds
fdivrs
scas
in
xchg
pop
sbb
scas
mov
or
popa
cmp
and
inc
add
inc
xor
jl
pcmpgtd
je
dec
inc
push
call
add
inc
jbe
fisubrl
mov
sbb
test
notb
insl
enter
mov
in
and
imul
fstpt
push
out
push
inc
mov
mov
cmpsl
pop
leave
mov
push
scas
pop
out
loop
push
xor
test
inc
ret
dec
inc
xchg
lds
xor
adc
xor
push
jge
decb
push
or
xchg
scas
mov
cs
or
es
sbb
scas
adc
and
jl
dec
ds
fwait
mov
cmp
push
jno
das
fwait
mov
rorw
ror
add
in
mov
push
das
rorb
cmovne
or
push
dec
inc
call
jp
int3
leave
inc
pop
mov
mul
loopne
xor
imul
xchg
lcall
add
stc
sahf
ja
and
jno
js
dec
jbe
int3
xchg
jp
sub
adc
mov
adc
jmp
push
or
dec
and
shr
mov
pusha
in
add
outsb
mov
sub
jmp
xchg
repnz
adc
shr
call
rcl
jp
mov
andb
ja
mov
cmp
or
sti
lahf
sarl
mov
cltd
mov
mov
jl
mov
leave
sbb
fdiv
mov
loope
xchg
movsl
jae
fidivrs
fsubrs
lahf
daa
and
push
inc
cmp
and
leave
ja
push
popf
das
arpl
test
push
adc
inc
in
cld
lods
xor
repnz
outsb
popf
lea
sbb
sub
scas
mov
mov
cmp
nop
fsubrs
stos
jmp
into
loop
xor
fisubrs
stc
adc
repnz
add
pop
sti
bound
or
mov
jb
ret
mov
jne
test
aas
mov
sub
andl
fcoms
cli
push
mov
int3
mov
notl
shl
hlt
negb
jmp
divl
xchg
les
adc
inc
pop
inc
es
push
dec
sahf
inc
int3
inc
lds
pop
pop
fiadds
subb
orl
cmp
mov
movsb
mov
in
fnstenv
sbb
xchg
push
xchg
push
mov
inc
scas
stc
ds
into
adc
outsl
nop
adc
das
jb
hlt
pop
mov
mov
repz
shl
fidivrs
es
xchg
cmpsb
fcmovnb
xchg
xor
or
inc
adc
sub
jbe
push
adc
jl
dec
mov
pop
mov
and
out
roll
shll
out
push
cmp
orb
test
mov
negl
pop
sub
inc
dec
insl
jbe
dec
add
push
push
loopne
leave
popa
jbe
cmc
push
xor
js
mov
test
testl
mov
mov
xchg
mov
or
inc
and
mov
push
inc
fdivp
add
fst
dec
in
shr
pop
les
mov
lahf
jnp
jnp
stos
xrstors
fistpll
cmp
cmp
fwait
lea
movsl
lret
and
mov
insl
aam
stos
jmp
fs
mov
mov
dec
jb
fadd
ficoms
dec
repnz
std
es
outsb
lahf
pop
add
addr16
nop
dec
inc
je
cmp
pushf
insb
mov
lods
mov
fs
jo
in
push
cmp
hlt
outsl
loopne
adcl
test
sbb
sbb
lea
mov
push
pop
mov
or
jb
dec
sbb
sub
pop
inc
nop
mov
ret
mov
lcall
ss
sbb
sub
push
or
lods
std
sbb
ret
out
out
push
fnsave
pop
ss
mov
add
adc
push
add
test
mov
movsl
test
add
xor
xor
add
dec
sbb
imul
pushf
add
and
stos
es
ljmp
xlat
in
scas
add
fiaddl
add
sbb
inc
adc
pop
mov
sub
fiaddl
mov
cmp
push
cld
inc
jo
dec
cmp
test
jns
movq
ja
inc
lcall
out
clc
mov
mov
and
add
aaa
lods
lea
out
adcl
addl
mov
inc
mov
push
mov
loope
sbb
xchg
movsl
lret
outsb
das
popa
fistps
jo
mov
mov
jae
push
in
or
stos
test
rorl
fs
aas
adc
sub
sub
pop
add
xchg
ljmp
nop
and
shlb
test
je,pn
add
mov
repnz
xor
pop
ss
leave
int
adc
in
ret
test
jle
jmp
sub
add
cmp
gs
fs
mov
sahf
mov
and
pop
call
pop
adc
xor
jbe
cmp
jge
sub
imul
adc
stos
xlat
adc
dec
rorb
rol
mov
mull
xor
xlat
sbb
call
fstl
out
mov
pop
imul
push
inc
movsb
add
ret
mov
push
fisubrs
lcall
sub
jo
sub
movsl
sub
mov
inc
dec
sub
cmp
pusha
xchg
dec
push
insb
int
pop
stos
fimull
mov
fnsave
jecxz
jmp
cmp
add
cmp
inc
xchg
inc
repz
mov
inc
insb
sbbb
daa
shlb
sbb
pop
scas
xor
jge
dec
cmpb
fs
mov
mov
mov
pop
and
enter
repnz
sahf
int3
sbb
push
daa
mov
stos
dec
inc
xchg
fldl
sbb
sbb
pop
std
inc
push
dec
ficoms
ret
mov
adc
sub
lods
push
imul
add
rcll
cmpsl
push
dec
movsb
adc
insb
jle
shlb
xchg
xor
sub
sub
dec
pop
sti
or
daa
push
push
cmp
adc
fidivl
daa
mov
stc
mov
iret
sub
orl
icebp
movsb
push
jl
jecxz
mov
jmp
pop
adc
pushf
jnp
add
push
jns
into
jecxz
mov
inc
setge
jge
mov
jge
cltd
popf
dec
and
cmp
add
mov
je
adc
jbe
rclb
or
shlb
lock
xor
xor
mov
jo
addb
in
xor
fcomps
xor
mov
push
dec
test
cmp
xchg
mov
loop
mov
leave
scas
sbb
cmp
lahf
mov
shrl
mov
xor
insb
xor
mul
jne
movsb
ret
pusha
fidivs
and
inc
movsb
sti
sbb
hlt
inc
insl
mov
add
jl
lret
aam
mov
push
addl
jmp
sub
fs
popa
fbld
sti
or
and
xchg
mov
decl
pusha
pop
sti
adc
add
sahf
xchg
mov
push
pop
cli
loope
out
sbb
dec
sbb
imul
mov
mov
mov
imul
in
mov
sti
inc
mov
gs
xor
loopne
aas
xor
xchg
and
push
inc
mov
mov
test
push
insl
lret
ljmp
out
loope
xor
jns
sahf
stc
lahf
outsb
leave
sbb
int3
or
sbb
cmpl
adc
or
mov
xor
ja
scas
pop
jle
fnstsw
ret
cmpsl
mov
cmpsl
cld
push
xchg
jge
jno
imul
cmp
mov
jae
sub
mov
addb
jno
popa
and
mov
jno
sub
mov
jecxz
mov
adc
movsb
jo
inc
jecxz
sbb
sbb
inc
enter
mov
loop
and
pop
stos
aam
sub
mov
sbb
lahf
mov
addl
inc
cwtl
lea
adc
cmp
bswap
mov
clc
add
cmp
rolb
jl
push
popf
fldt
push
xchg
mov
in
out
pusha
cmp
into
push
mov
dec
jne
adc
mov
pop
adc
sahf
xor
ss
sub
mov
dec
dec
mov
adc
xchg
inc
cmp
aam
and
mov
pop
xchg
iret
lods
sub
loope
sti
add
testl
mov
pop
mov
mov
mov
xchg
aas
imul
fidivs
pop
in
add
jae
lahf
mov
push
add
aad
call
mov
sub
mov
xor
aaa
insl
pop
cmp
jge
inc
and
inc
aad
imul
and
adc
adc
mov
jno
sbb
mov
sbb
les
ja
inc
push
cmpb
addb
xor
adc
adc
xor
iret
lret
shl
in
in
cmp
lret
push
fnsave
jle
jnp
loopne
sub
imul
int3
adc
jno
dec
xchg
frstor
lahf
rol
sbb
add
push
dec
dec
add
push
ja
xchg
dec
mov
mov
add
cwtl
sbb
fadds
cltd
sub
inc
scas
fwait
popf
pop
sti
ret
sub
lahf
xor
sahf
ret
test
mov
pop
aad
lahf
mov
or
repnz
daa
rclb
ret
lods
cs
cmpsb
int3
xchg
in
pop
fcomp
sbb
push
adc
lret
ljmp
pop
pop
in
ljmp
mov
dec
jno
adc
dec
outsb
and
cmp
inc
sahf
ss
out
ficoml
ss
mov
or
lahf
mov
pop
adc
cmpsl
fdivrs
xchg
adc
push
xchg
cmpsw
mov
movsb
jno
mov
int3
fisubrl
call
in
stos
push
adc
inc
lret
push
jns
subl
jl
jge
loop
inc
dec
mov
cs
mov
fmul
push
sarb
xor
lahf
stos
hlt
jno
jb
lahf
push
add
mov
mov
jge
shrl
aas
and
das
cmpb
push
dec
das
cmp
fisubrs
and
xchg
push
imul
mov
sub
mov
mov
jae
aaa
sbb
js
imulb
dec
jmp
mov
loope
cld
lret
xor
mov
mov
shrw
mov
push
clc
pop
jae
scas
int3
cmp
in
xor
pop
cmp
mov
in
mov
sti
stos
lods
push
shlb
push
iret
imul
adc
pusha
mov
pop
cli
lret
mov
sub
aas
in
std
sbb
sub
fimuls
add
addl
pop
pusha
jp
repnz
jg
jns
fimull
or
loopne
fmuls
xchg
ret
cmpsl
mov
inc
rcll
dec
roll
xchg
data16
scas
push
fistpl
int
popf
push
loopne
xor
xor
xchg
iret
inc
js
lds
add
addl
mov
insl
xchg
cmp
cmp
inc
inc
cmpsl
mov
inc
adc
inc
and
push
jmp
sarl
call
std
int3
imul
xchg
dec
pop
adc
pop
jno
jl
pusha
sbb
cmp
mov
arpl
mov
aam
insb
xchg
aad
lock
mov
dec
fnsave
stos
das
jmp
push
sub
sub
hlt
cmp
sbb
in
rcr
sub
jb
pop
stos
jb
sahf
cmp
popa
cmc
out
enter
xorb
jle
pop
aad
sub
sarb
mov
outsb
in
insl
lods
lahf
imul
les
xchg
sahf
popf
int
push
insb
mov
std
pop
mov
cwtl
mov
mov
inc
mov
xor
or
xor
shrb
adc
lods
mov
or
mov
das
fidivl
mov
into
add
push
mov
popf
lret
cmp
shll
pop
mov
movsb
xor
dec
cmp
sub
inc
out
cmp
int
ja
inc
pop
jmp
outsb
xor
lret
lret
movsb
and
ljmp
and
add
ret
xchg
push
cli
jle
mov
int3
sahf
aad
add
dec
sti
pop
lret
cmp
nop
fmul
xchg
inc
mov
mov
mov
stos
icebp
fcmovne
add
ds
and
dec
cmp
jae
pushf
jg
xor
dec
adc
insb
and
fcompl
or
int
cmp
std
sub
xchg
adc
fisttps
ret
cmpsb
mulb
imul
mov
jp
sahf
cmpsl
lret
jecxz
mov
add
divl
fldenv
repz
cmp
adc
stos
fwait
loopne
xchg
std
lahf
xchg
sahf
adc
mov
dec
push
mov
push
scas
cmc
xor
inc
imul
add
add
sbb
pop
pop
mov
out
mov
ret
dec
outsl
mov
dec
xlat
das
mov
and
pushf
test
cltd
push
les
hlt
cmpsb
pop
push
sahf
xor
xchg
sti
xchg
popa
inc
lea
xor
sbb
mov
mov
jge
xlat
mov
aas
jmp
fdiv
hlt
les
scas
add
stos
test
sbb
fiadds
add
push
imul
out
cwtl
mov
xchg
jne
lods
in
jmp
lods
fistps
cmc
in
pop
push
pushf
repnz
dec
hlt
sbbb
lock
xchg
mov
push
or
inc
cmc
jge
aad
sete
scas
pop
hlt
into
adc
add
arpl
test
int3
cmp
fs
mov
adc
xor
pop
mov
push
mov
shlb
xchg
pop
out
xor
test
popf
lret
scas
mov
jae
or
xchg
pop
nop
pop
push
mov
xor
mov
ja
or
dec
mov
mov
add
mov
add
jecxz
cld
inc
in
adc
out
adc
loop
xchg
and
push
cld
mov
add
xchg
lahf
xchg
aas
cld
adc
cli
and
orl
push
test
jmp
rcrl
lock
out
xchg
push
rolb
daa
mov
xchg
fwait
and
push
push
push
movsb
jp
sub
mov
xchg
mov
mov
dec
in
loop
pop
xchg
or
cmp
cmp
repz
inc
pop
enter
loope
ja
jmp
ss
mov
scas
xchg
jo
outsl
mov
outsb
imul
adcl
enter
aaa
cld
fiaddl
xchg
jmp
jb
incb
lret
icebp
outsl
xor
rolb
adc
sbb
add
push
and
std
insb
mov
idivl
dec
loope
sbb
mov
or
push
pushf
xor
sub
or
mov
cmp
xor
bound
aad
adc
push
loop
mov
or
outsb
mov
inc
push
push
mov
inc
mov
xor
lock
fwait
sub
jg
xchg
jle
testb
rolb
and
cld
or
sbb
pop
vpmacssww
call
lods
cmp
cmp
cmp
cmpsl
pop
cmp
sbb
sbb
stos
push
xor
mov
adc
bound
and
jo
dec
or
dec
lret
dec
out
and
mov
jge
mov
inc
fistps
lock
pop
or
sbb
mov
rcr
add
add
push
jl
mov
std
ss
jmp
dec
mov
ja
loope
clc
leave
cmpsl
or
push
add
xchg
fisubrs
je
aaa
fstpl
ljmp
xor
hlt
scas
ret
call
xchg
test
std
and
xchg
push
inc
aam
lea
cmp
inc
sahf
loopne
insl
and
andb
mov
out
xor
movsl
mov
test
mov
dec
jae
jmp
in
mov
icebp
subb
xor
insl
inc
outsl
aad
mov
outsl
pop
sahf
arpl
fs
push
sub
addl
mov
fcomp
int
push
jmp
out
fstl
out
fistl
pushf
mov
xor
ss
lods
test
call
or
or
jmp
decb
xor
test
xor
mulb
popf
push
aaa
jnp
jmp
mov
dec
mov
add
idivl
fucomip
stc
mov
fwait
leave
push
dec
pop
es
xchg
fisubrs
dec
aam
push
pop
stos
push
clc
hlt
orb
imul
xor
scas
sbb
or
jmp
xor
jmp
fistpl
rorl
mov
je
sub
push
xor
cmpsl
dec
mov
out
scas
inc
cli
adc
ret
xorb
and
inc
mov
jp
add
pop
pop
xlat
fwait
inc
jb
mov
add
test
test
xlat
cltd
sahf
ss
insb
out
fidivrl
stos
push
push
rorl
sub
shrb
mov
xor
popf
data16
int
sbbl
fsubr
fists
js
sti
sub
sub
insb
out
popf
mov
sub
inc
les
cmc
xchg
cwtl
stos
or
andl
sub
adc
inc
pop
fistpll
mov
add
xor
or
pop
or
aas
mov
cs
xchg
xchg
or
jp
pop
sbbl
push
icebp
mov
imulb
xchg
insl
push
mov
in
lret
dec
jl
cwtl
xor
xchg
xor
test
inc
ret
or
hlt
ljmp
ficomps
xor
and
inc
push
adc
idivb
inc
movsl
insl
cld
xor
pushw
in
cltd
jp
and
aas
inc
and
sbb
out
fstl
xchg
push
orl
out
adc
push
test
out
iret
jno
mov
clc
sbb
xor
pop
or
mov
data16
leave
or
popa
mov
aad
pop
jp
sub
imul
xor
cmp
pop
aad
and
xchg
scas
adc
push
cmpl
mov
in
js
bound
mov
rcr
ljmp
cmp
daa
xchg
or
in
pushf
repnz
ja
cmpb
fildll
sti
ja
int
push
or
xchg
mul
aam
call
cs
mov
add
xor
lds
jbe
xchg
mov
push
mov
push
stc
adc
movsb
push
push
bound
arpl
lock
sbb
pop
mov
or
divb
pop
stc
pop
or
cmp
mov
aad
push
jbe
pop
dec
push
flds
gs
test
pop
mov
push
fs
icebp
pop
xchg
push
cwtl
addr16
les
aam
cld
xlat
xchg
in
aaa
pop
dec
jmp
pop
adc
dec
cmp
scas
push
push
imul
lcall
cs
subb
jbe
int
nop
ja
or
pop
andb
inc
test
pop
dec
push
stc
out
jno
cmc
rcrb
xor
mov
push
pop
and
cmp
hlt
dec
mov
cmp
scas
sbb
sti
daa
or
add
enter
and
pop
adcb
in
popf
lods
scas
add
pushf
push
mov
arpl
dec
xlat
jmp
jo
movsb
hlt
inc
add
pop
es
sbb
ret
jno
sarl
xchg
std
lods
mov
cmp
sahf
or
add
lahf
inc
xor
mov
sub
ja
xchg
mov
sbb
clc
dec
xor
sti
orb
sbb
aam
add
ficoms
or
rcrl
pop
pop
or
leave
cmp
sub
pushf
sbb
push
cld
movl
outsl
pop
loope
fildl
mov
xchg
cli
data16
cmp
jne
enter
in
jg
add
and
or
xchg
loope
ror
and
stos
push
int3
es
out
mov
or
adc
mov
repz
jo
ljmp
nop
sub
jo
xlat
xor
mov
mov
xor
addr16
push
lret
cltd
test
insl
cmp
jmp
int3
mov
rcrb
aaa
pop
xchg
mov
and
inc
adc
das
jo
inc
test
adc
mov
xorl
mov
jne
push
scas
or
mov
call
test
push
xlat
fmull
adc
sar
andb
jo
cld
adc
mov
adc
pop
iret
mov
bound
stos
rcrb
and
popf
lock
lods
sub
jmp
cmpsl
sub
imul
es
mov
xchg
das
int
xchg
in
imul
loopne
cli
repnz
sarb
rorb
push
fnsave
cltd
fistps
loop
aam
add
pop
push
adc
fs
or
sub
and
js
jg
ficoms
rorl
loopne
adc
inc
and
xchg
outsl
loope
loope
dec
mov
pop
jmp
lea
test
lret
ret
out
mov
or
repz
push
int3
and
cmp
fildl
ja
xor
push
ja
aad
sahf
popa
adcl
repz
sahf
ficompl
jb
mov
cmp
mov
jl
sti
fwait
sbb
stos
dec
js
hlt
and
insl
pusha
pop
fcomp
test
inc
mov
cmp
pop
shrb
jne
clc
cmp
test
jnp
pusha
int3
fsubl
push
in
sbb
cld
loope
inc
cmp
sbb
scas
fmul
jae
jmp
or
fcompl
ret
dec
fwait
in
stos
ret
or
sub
add
stc
lds
gs
stc
sbb
xchg
push
mov
sarl
xor
in
push
mov
push
sbb
mull
daa
jecxz
arpl
and
rorb
js
xchg
arpl
sbb
mov
adc
pop
xor
adc
mov
sub
std
cmp
xchg
xchg
test
sub
loopne
mov
sub
das
adc
jne
les
subl
mov
in
sbb
xor
jecxz
push
jb
jne
outsb
inc
add
xchg
repnz
ret
pushf
pop
push
int3
mov
mov
and
push
push
pop
aaa
jb
outsl
fstl
sub
push
sahf
negb
push
int3
jns
mov
ss
jne
add
sbb
movsb
cwtl
sub
lds
scas
jg
push
push
cld
pushf
addr16
arpl
lds
xchg
int
rcrb
or
sahf
idivl
lock
addr16
and
aad
push
inc
imul
xchg
bound
shl
jbe
cmp
idivb
or
dec
ds
mov
adc
mov
divb
enter
out
fisttpll
lods
subb
imulb
stos
cmp
push
mov
sbb
outsb
sbb
cmp
lods
cmp
add
insb
xchg
mov
mov
cwtl
icebp
sbb
inc
and
outsb
xchg
add
xlat
in
lahf
les
and
fidivl
jmp
cs
pop
adc
mov
push
xor
lods
hlt
aaa
add
push
lods
ss
add
push
bound
xor
sbb
test
cltd
cmp
js
je
mov
lods
dec
sub
or
aam
mov
or
prefetcht2
into
les
pop
sbbl
sbb
shrb
inc
xor
in
mov
aaa
mov
pop
test
clc
dec
out
bound
into
mov
pop
cmp
xchg
fwait
imul
fidivrs
push
loopne
into
loop
xchg
xchg
or
gs
dec
in
jle
mov
mov
xchg
mov
or
cs
daa
arpl
js
jg
inc
inc
dec
out
sbb
mov
enter
pop
sbb
popf
in
sbb
hlt
pop
pop
mov
lret
test
xor
sub
push
adc
pop
cli
xchg
and
insl
fsubrl
mov
int3
or
and
mov
int3
out
mov
bound
flds
loop,pn
ljmp
dec
les
js
inc
cmp
inc
mov
sbb
inc
fcmove
add
out
jo
push
pop
xor
loop
in
inc
push
ss
jns
pop
fs
jle
mov
sbb
addl
push
or
pop
pop
sub
popf
pop
mov
iret
daa
std
repz
scas
js
fs
cs
cmp
jns
and
xor
es
out
call
mov
adc
test
iret
sti
adc
add
fistl
or
push
jp
js
push
int
repz
sahf
xor
adc
jmp
call
push
adc
mov
js
aam
or
imull
popa
lea
popa
mov
adc
and
jmp
pmulhw
fdivrs
out
jbe
pop
sub
or
cwtl
adc
mov
std
xchg
or
xchg
sbb
push
adc
push
lcall
insl
push
sub
and
jbe
xorb
xor
cmpl
int3
mov
cwtl
push
mov
ret
aaa
pop
loope
in
jl
in
sbb
adc
imul
cmp
mov
fnstenv
mov
ljmp
cmp
mov
push
gs
sub
add
mov
cld
