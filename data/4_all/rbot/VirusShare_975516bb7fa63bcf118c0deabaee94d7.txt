shlb
pop
fsubl
andb
fwait
movsb
shll
fstpt
jg
dec
push
testl
mov
pop
mov
and
or
jns
leave
inc
ljmp
jge
pusha
push
jecxz
add
mov
or
cltd
sub
stos
mov
aas
das
jnp
xchg
out
lret
testb
lret
sub
mov
out
mov
imul
stos
gs
sub
outsl
scas
push
mov
jns
ret
jmp
fbld
jge
adc
xor
repz
frstor
sbb
push
cmc
mov
fldcw
pop
pop
jmp
into
dec
adc
mov
xchg
shl
push
jne
js
and
ds
add
xchg
aam
mov
enter
sarw
push
ja
inc
aaa
add
popa
hlt
jp
xor
mulb
adc
addr16
adc
hlt
mov
clc
xorb
mov
push
ja
pop
dec
mov
sub
pop
das
es
loopne
pop
pop
or
or
in
pop
inc
or
or
fdivrs
pop
inc
pop
add
fsubrl
pop
dec
and
add
shrb
sbb
push
popa
stc
jno
inc
sbb
xor
xlat
push
jns
cs
adc
lret
sub
add
adc
iret
push
pop
jge
es
ret
es
popa
js
insb
mov
dec
mov
gs
push
jnp
pop
fiadds
test
std
sub
shr
imul
arpl
inc
mov
lock
leave
mov
pop
inc
sbb
fs
nop
mov
mov
popa
jp
dec
loope
leave
stos
out
and
xchg
and
shlb
xor
ss
mov
jp
add
jno
mov
adc
es
jne
leave
pop
mov
and
das
inc
sbb
movd
cltd
pop
push
push
rcr
lods
fstpt
adc
out
mov
lock
pop
dec
out
sbb
mov
or
mull
fucomip
sub
sbb
jno
add
lret
adc
cmpsb
enter
jecxz
test
xor
xlat
xchg
je
mov
sbb
ror
xchg
das
jne
mov
jl
ss
mov
push
mov
les
popf
add
cmp
pusha
dec
mov
push
sub
push
cs
push
jmp
jg
jae
fisttps
jbe
and
or
popf
sub
addl
fstpl
cmp
mov
dec
out
push
les
out
or
pop
lret
xor
mov
out
outsl
dec
sub
mov
add
pop
rolb
aaa
sub
push
leave
imul
push
and
int
fmull
jns
cwtl
sub
daa
clc
cmp
data16
dec
add
inc
fists
xor
fsts
xor
std
mov
add
das
out
cmp
cli
shrb
cmp
mov
and
push
mov
sbb
leave
cmp
pop
imulb
sahf
sub
dec
mov
cmp
cld
insl
jecxz
jbe
loopne
or
xlat
mov
stos
pop
mov
adc
divl
add
inc
fyl2xp1
inc
cmpsb
push
ret
and
xor
fnstenv
and
dec
sbb
pop
inc
mov
jle
icebp
cmp
dec
mov
sbb
std
xlat
cld
and
lods
sub
out
sub
mov
leave
sbb
mov
test
xor
out
test
mov
xchg
sbb
jo
sub
aam
std
das
sbb
jnp
in
fwait
mov
push
cwtl
cmc
inc
adc
sbb
adc
int3
sub
mov
xchg
fimuls
sbb
pop
push
pop
insb
adc
xor
push
xlat
je
sub
xchg
push
xchg
push
sbb
cmp
je
xor
dec
xor
data16
mov
repnz
xchg
aaa
std
and
fidivs
xor
and
dec
es
mov
mov
orb
je
popf
leave
pop
or
outsl
jo
mov
mov
mov
pop
sub
lret
pop
mov
negb
mov
xchg
imulb
not
test
jae
and
test
cltd
clc
in
test
add
mov
dec
mov
pop
aas
lea
pop
mov
add
and
jb
repz
inc
imul
frstor
sbb
or
inc
test
lds
mov
bound
mov
je
pop
or
hlt
mov
mov
jl
je
add
dec
movsl
out
stos
dec
push
xchg
push
lret
movsb
adc
loop
inc
mov
xor
fsubrp
jno
mov
or
and
jbe
fnstsw
add
adc
mull
xabort
push
mov
or
fiadds
lods
mov
sub
jno
fucomi
mov
mov
test
andb
add
adc
stos
xor
sub
xlat
ffreep
add
cld
xor
adc
sbb
pop
push
gs
push
push
push
pushl
xlat
mov
mov
lahf
lahf
jne
xchg
inc
cmp
push
xlat
in
adc
rcll
dec
push
or
rcrb
adc
xor
add
cwtl
fs
inc
cltd
pusha
fidivrl
orb
pop
jmp
aaa
xor
pop
je
mov
add
sti
inc
and
lahf
push
mov
xor
cltd
add
mov
jne
mov
mov
cmpsb
iret
inc
fisubrs
icebp
sub
daa
test
stos
ljmp
and
mov
aad
popf
pushf
cmp
int
adc
addr16
mov
cltd
in
pop
push
sub
pop
addr16
mov
dec
mov
fmull
pop
lret
sbb
pop
lahf
in
add
fisttps
aaa
call
mov
mov
orb
mov
mov
xor
xchg
adc
cltd
adc
scas
cltd
add
lret
cld
insb
xor
jae
ret
dec
inc
popf
sahf
imul
jl
sub
pop
pop
test
fisttps
and
xor
sti
test
cltd
pusha
fidivrl
jne
pop
negb
std
sbb
movsl
jno
call
push
lcall
push
and
xor
xlat
out
cld
js
test
push
mov
xor
filds
mov
lock
or
or
or
dec
sbb
shlb
repz
sub
sub
sub
xchg
jo
aaa
in
mov
xchg
pop
imull
and
repnz
sub
push
daa
rep
push
scas
cltd
fstps
lcall
mov
xor
test
repz
ja
pop
add
mov
lahf
lret
into
sub
in
lea
adc
add
in
and
and
jecxz
add
cmp
dec
das
pop
popf
test
xchg
push
or
stos
mov
shrl
aaa
cmpsb
or
inc
jge
adc
mov
daa
arpl
call
mov
inc
mov
fisttps
mov
leave
add
dec
shlb
xchg
mov
dec
inc
jnp
mov
inc
sub
adc
cltd
loope
or
fildl
icebp
push
fistpll
call
push
icebp
cmc
xor
call
pop
pop
pop
call
jbe
sbb
fcmovb
std
shll
inc
sbb
pop
ss
stos
lock
lock
mov
jo
mov
loop
and
jp
inc
ret
pop
jns
jle
fstp
xchg
lods
sti
or
cld
mov
in
sub
rep
dec
or
in
scas
addr16
pop
or
dec
in
inc
add
outsb
pop
in
cs
xor
sahf
adc
pop
adc
cmp
loope
and
hlt
icebp
push
jo
adc
fsubl
test
mov
mov
adc
and
mov
dec
imul
pusha
or
insb
pop
xor
ss
mov
sbb
mov
test
and
xor
call
mov
icebp
or
mov
je
rep
push
lret
cmp
jb
adc
and
hlt
add
stc
adc
sbb
push
pusha
lock
dec
std
rcrl
pop
je
repz
or
jmp
push
fcompl
mov
subb
add
sbb
dec
les
shrl
popf
dec
cmp
loop
aaa
in
cld
push
call
aad
sbb
inc
pop
cld
sub
dec
cwtl
mov
iret
ds
inc
int
or
pushl
pop
out
fistps
mov
test
mov
jo
test
outsl
push
pop
inc
mov
int3
gs
cmp
test
es
call
or
shll
inc
cmp
jns
xchg
testl
jg
sbb
das
outsb
push
cmp
push
roll
inc
sbb
mov
ljmp
push
test
in
mov
push
cmp
jecxz
aaa
or
call
je
pop
sbb
cmp
or
movsb
dec
adc
xor
xor
push
mov
inc
and
mov
mov
into
jp
ljmp
fmuls
push
dec
jns
mull
jge
pop
cwtl
fcomi
jbe
in
lea
imul
or
sbb
inc
addr16
cltd
stos
sbb
dec
jp
imul
pop
dec
jmp
cmpsl
jo
xor
addr16
adc
popf
repz
sbb
mov
das
xchg
fstl
xor
jns
in
ja
in
ret
sbb
sarl
jnp
jmp
daa
push
push
sti
and
adcl
add
stos
shlb
push
daa
dec
in
dec
xchg
cmp
xchg
sub
sbb
lahf
sub
pop
or
sub
das
notb
int3
mov
adc
scas
out
loop
mov
les
jb
sbbl
jo
dec
sbb
sub
dec
es
add
hlt
pop
in
cltd
out
xchg
adc
loop
inc
int
xor
sbb
cmp
adc
jne
dec
arpl
loopne
lret
adc
xor
xor
inc
or
cmpsl
adc
push
loope
es
xor
sub
mov
lods
xchg
clc
ja
adc
inc
fisubs
xchg
sub
mov
xchg
or
jle
pop
fiadds
ds
call
jno
push
popf
addr16
lret
mov
test
aaa
f2xm1
lcall
adc
xchg
sub
lea
int
fs
xchg
int3
arpl
ret
pop
pop
outsb
loopne
addr16
mov
push
push
pop
xchg
jge
and
pop
shrb
and
xchg
out
xchg
push
adc
ds
mov
gs
rol
and
sbb
mov
xlat
aad
stos
std
clc
mov
dec
jg
sbb
sbb
xor
cmp
cltd
and
ret
sub
push
and
xchg
ja
in
scas
or
call
push
dec
mov
test
dec
test
outsl
inc
xor
daa
mov
and
mov
add
outsb
leave
in
lods
jecxz
jo
adc
dec
dec
or
mov
popa
mov
cwtl
adc
mov
or
fisttpll
mov
pusha
popf
hlt
outsl
sbb
push
mov
lret
loope
scas
pop
in
adc
fidivl
mov
inc
cmpsb
push
cmp
lea
and
mov
ja
jg
jg
mov
push
adc
loop
push
je
aaa
mov
pop
ret
imul
test
adc
dec
adc
add
lahf
sbb
cwtl
mov
mov
mov
das
adc
std
and
sub
push
dec
jmp
movl
daa
or
jp
mov
repz
call
mov
lods
jne
mov
test
push
adc
rclb
idivl
or
add
push
mov
pop
pop
sub
pop
movsb
pop
sub
loope
mov
jae
imul
sbb
jecxz
mov
pop
mov
add
mov
loop
pop
into
das
or
ret
rorb
lods
mov
cwtl
fwait
jmp
jbe
arpl
push
cmc
pop
or
in
xchg
lods
movsl
dec
fnstcw
test
adc
push
push
in
mov
es
add
dec
lods
and
fwait
test
roll
mov
or
clc
shrl
pusha
push
jecxz
int3
xchg
mov
sub
push
sbb
xchg
lcall
sbb
jl
into
inc
pop
push
daa
pop
jnp
ret
mov
jg
push
adc
lods
add
lods
and
or
add
sbb
ljmp
push
or
cwtl
in
inc
in
adc
or
mov
mov
pop
adc
cwtl
pop
sub
jns
dec
loope
aaa
jp
push
insb
jae
mov
stos
xchg
mov
aas
out
stos
mov
mov
popf
mov
fsubrl
int
jns
movsl
sbb
leave
enter
add
push
pop
xlat
sbb
fxtract
mov
adc
aad
adc
push
rcll
stos
leave
call
bound
push
jo
fcom
mov
pop
dec
out
or
sub
call
add
vmread
fucomp
testl
sahf
push
cmp
adc
cld
frstpm(287
sub
pusha
push
and
test
mov
popf
sbb
rcr
enter
push
je
aaa
bound
fwait
nop
sub
sbb
fcmovnb
jae
fwait
mov
xchg
xchg
or
jge
and
insb
sub
add
fwait
or
adc
imul
jae
pop
lds
dec
sub
dec
shrb
push
insl
cld
push
cld
xchg
decl
mov
pop
mov
dec
push
xor
fs
xchg
cmp
pop
mov
fprem1
dec
mov
add
je
push
decb
repz
nop
cwtl
pop
jns
mov
sbb
jne
shll
or
push
xor
loopne
pop
pop
pop
push
addr16
and
pop
dec
jns
lods
shrl
hlt
cmpl
xor
rep
xchg
iret
ret
xor
and
test
mov
push
aas
dec
push
sub
push
xchg
jp
sarl
cmp
stos
mov
sbb
dec
or
mov
repz
xchg
mov
push
pop
mov
mov
stc
popf
aam
xchg
std
shll
adc
pop
and
je
les
lds
xchg
pop
aam
and
cmp
push
mov
xor
mov
arpl
mov
inc
data16
pop
dec
subl
lret
js
or
sub
test
outsl
ds
sub
repz
add
call
test
in
push
jg
mov
mov
jg
cmp
dec
jmp
rorb
das
addr16
in
ret
call
ds
add
jle
das
mov
negl
sbb
mov
and
pushf
xchg
or
loopne
loopne
push
shlb
sub
in
and
mov
outsb
push
inc
test
and
ret
cmc
jl
fistpl
sub
mov
jne
jno
fstps
decb
jl
shrb
push
lock
mull
add
mov
test
sbb
lea
es
or
xchg
xor
pop
or
sbb
stos
cmp
negl
addr16
jecxz
shl
xchg
mov
testl
mov
pop
xorl
adcl
inc
jl
sbb
adc
mov
xchg
push
xor
data16
push
cli
sub
push
fidivl
jge
scas
sub
cld
sahf
vphaddbd
add
ret
int
cs
inc
jne
cmp
cltd
dec
add
dec
or
imul
lea
and
testl
cmp
add
shll
pusha
jbe
es
out
les
push
xor
mov
pop
adc
or
xchg
sarl
je
addr16
push
les
out
adc
jl
add
jecxz
data16
sbb
sbb
lcall
lahf
cmp
call
pop
adc
jno
out
adc
push
dec
mov
push
xchg
or
sti
cmp
sbb
jg
add
in
js
fs
jmp
in
in
push
adc
je
ret
inc
jl
lods
pop
push
loopne
aas
adc
mov
imul
add
popl
add
adc
out
ljmpw
dec
cmc
add
test
xchg
xor
inc
mov
jno
adc
loop
sbb
sub
xchg
jne
inc
inc
adc
out
mov
fists
mov
add
ljmp
dec
movsb
lcall
adc
and
mov
push
shrl
sbb
rcl
stos
and
mov
pop
cmpsl
inc
and
push
aaa
push
mov
mov
addr16
xor
pop
or
xlat
repz
jae
mov
mov
cli
sbb
shlb
dec
push
mov
test
jg
push
data16
sarb
mov
repnz
sbb
add
dec
xorl
jle
mov
jmp
push
icebp
outsl
fiaddl
cmpsb
push
sbb
push
sbb
test
xorb
aas
jne
lds
push
sub
or
xor
xchg
xchg
push
sbb
xchg
or
in
sbb
mov
gs
adc
movsb
shlb
inc
adc
mov
pop
dec
outsb
sbb
and
mov
movsb
gs
loop
cmpsb
movsl
jb
rol
xlat
scas
add
jne
dec
adc
out
sub
aam
push
inc
mov
es
nop
out
sbb
xor
push
test
rcll
jnp
sub
inc
mov
jne
pop
adc
adc
test
fsts
sahf
jge
test
fisttps
xor
hlt
and
adc
rcrb
int
pop
cmc
or
clc
mov
shl
pop
addr16
int
dec
dec
push
mov
inc
add
out
push
add
and
jg
xchg
lahf
dec
sub
jbe
xchg
xor
daa
mov
xchg
negb
int
jbe
into
sub
mov
mov
xor
push
mov
add
lods
mov
icebp
aam
imul
mov
push
dec
add
xchg
push
out
mov
lret
xchg
aas
push
mov
jno
jae
mov
ret
dec
jns
jne
test
sub
aad
cmpsl
ljmp
aas
and
and
mov
and
ljmp
ret
int3
cmp
or
dec
xor
fxtract
mov
pushl
mov
fldenv
xchg
leave
cmp
into
jl
mov
ja
dec
loopne
ja
or
ljmp
imul
add
fsubrl
in
pusha
xor
jle
xor
div
scas
fildl
mov
add
jge
xlat
mov
js
nop
int
sahf
cmp
data16
cmp
inc
mov
adc
addr16
addl
mov
mov
stos
shr
in
mov
or
hlt
or
test
je
repz
xchg
addr16
push
scas
jmp
push
mov
xor
loope
xorb
pop
sub
mov
sbb
clc
test
xorl
xor
icebp
mov
iret
fwait
mov
jmp
jle
dec
add
xchg
cmp
inc
andb
add
stos
inc
xor
jle
sbb
add
jecxz
mov
lods
jb
dec
stos
aam
test
adc
mov
or
inc
insb
pop
cmp
sub
push
jno
xorb
mov
or
inc
push
jae
pop
mov
dec
xchg
ljmp
add
test
jae
insb
fimuls
xchg
out
adc
sbb
fld
pop
pop
mov
insl
filds
jno
hlt
aad
fdivrs
stos
xor
fisttps
and
mov
push
sbb
push
je
jmp
loop
and
or
cwtl
into
inc
sub
inc
inc
cmpsl
pop
push
sub
mov
adcl
adc
xchg
shl
pop
xor
cltd
or
or
rclb
mov
loope
xor
jnp
mov
int3
dec
jmp
cmpsb
push
sbb
aaa
xlat
mov
push
and
test
jns
das
push
je
lods
sub
jns
into
aam
adc
xor
fucomp
mov
jecxz
sahf
sar
jle
lods
lret
lods
cmp
mov
mov
xor
ljmp
push
mov
pop
repz
jne
outsl
sahf
mov
cmp
std
sarb
add
mov
in
sub
jp
cwtl
scas
test
jns
jae
jo
inc
mov
call
push
pop
inc
outsl
outsb
int3
push
mov
inc
mov
movb
mov
popf
stos
fisubl
inc
into
ja
ja
cmp
lret
aas
inc
mov
and
lcall
mov
adc
mov
and
fdivrs
xor
or
mov
jecxz
ftst
mov
out
icebp
mov
mov
mov
dec
arpl
in
fidivs
hlt
loopne
pop
inc
mov
mov
fwait
inc
sub
cmp
cmp
cmpsb
test
mov
or
popa
jle
ret
dec
cld
cmc
sbb
pop
cli
cs
mov
lret
sub
in
es
jle
call
in
jns
imul
in
and
jb
sbb
std
adc
mov
dec
lea
push
es
mov
adc
xchg
xor
fstpt
aaa
jecxz
mov
jbe
push
sbb
cmp
mov
xchg
mov
push
mov
sti
xchg
cmp
or
mov
mov
sbb
pop
jne
sub
adc
push
mov
cmp
or
xchg
aam
mov
mov
jle
cmp
jmp
enter
jo
push
mov
and
cmpb
sahf
dec
push
sub
jmp
sbb
and
repz
dec
inc
sub
cld
sbb
imul
pop
jae
pop
cmpsl
push
ljmp
jge
outsl
adc
cmp
pop
data16
popa
and
adc
pop
pop
jo
pop
repz
pop
xchg
inc
adc
pop
and
and
pop
adc
or
mov
mov
push
lahf
lcall
sbb
psubsw
xchg
dec
pop
xchg
aad
xor
es
sub
fisubl
loopne
rolb
mov
jno
pop
sahf
clc
in
push
mov
sti
cmpb
dec
adc
popa
in
addb
xchg
add
sub
cs
subl
pusha
mov
xchg
pop
je
or
imul
inc
mov
imul
xchg
cmp
daa
xchg
test
push
repnz
jne
jno
sub
aas
iret
rol
inc
dec
sub
sub
lock
xchg
dec
push
jmp
sub
lahf
dec
pop
mov
bndldx
adc
popf
xchg
rclb
repz
roll
lds
mov
fld1
mov
out
ds
sub
fdivrl
popf
daa
pop
iret
add
cmp
call
cmp
test
popa
push
lock
cmpsb
pop
dec
enter
data16
scas
in
insb
divb
pop
mov
icebp
or
shrl
adc
mov
sub
add
xchg
and
fwait
stos
int
or
cmp
mov
sub
adc
rolb
loope
cmpsb
push
dec
or
and
fwait
stos
sub
mov
cmpsb
mov
pop
mov
push
pusha
pop
or
mov
repnz
mov
test
pop
adc
cmp
aas
or
or
ljmp
cwtl
adcl
push
fisttpll
mov
pop
push
pop
adc
je
cwtl
jl
and
mov
fnsave
push
stos
push
xchg
outsb
xchg
mov
insb
call
jp
fwait
adc
adc
popa
and
lret
popf
mov
cld
sar
cmp
mov
and
rcrb
outsl
popf
mov
jbe
dec
add
cmp
pop
mov
or
loop
mov
adc
or
ljmp
inc
daa
outsb
dec
sub
cwtl
sbb
push
pop
add
mov
jnp
adc
pop
push
push
outsb
scas
add
xchg
xlat
fists
mov
mov
aas
adc
dec
rcrb
daa
sub
sub
sub
cld
and
jae
loope
adc
shll
aas
pushf
shrb
in
ljmp
and
ss
add
data16
insl
popa
push
push
xchg
fldl
dec
jge
dec
jo
pop
jne
lea
and
adcb
lahf
jbe
push
dec
imull
daa
sub
lcall
pop
and
fwait
pushf
pop
pop
pop
in
mov
adc
mov
fs
jne
test
jle
pop
out
jae
xor
pop
das
daa
add
mov
loop
mov
sub
dec
out
andb
or
clc
cld
adc
adc
dec
shl
and
popf
jo
int
test
adc
sub
jo
pop
loope
jae
xor
sbbb
pop
pop
pop
xchg
repz
pop
fbstp
mov
cmp
loop
mov
sub
dec
add
int3
ret
mov
popa
adc
mov
cmc
cmp
pop
popf
and
and
adc
sub
in
mov
js
movsl
addr16
pop
adc
pop
ss
fstpl
test
jns
xor
subl
push
push
in
jbe
pop
ds
stc
jo
adc
in
or
popf
icebp
cltd
scas
in
mov
and
sub
les
xchg
mov
in
pop
mov
test
inc
xchg
pop
and
lcall
daa
sub
sahf
cld
mov
sbb
dec
scas
inc
jnp
cld
test
lock
push
leave
dec
fs
loop
stos
dec
push
push
pop
mov
adc
pop
jmp
pop
push
push
andl
pop
popf
and
gs
ret
popa
xchg
adc
dec
je
daa
sbb
jge
pinsrw
xor
push
push
pop
cmp
add
pop
push
int3
and
das
fwait
xchg
mov
repz
dec
sub
add
into
dec
movl
jb
adc
mov
jg
cwtl
push
inc
and
aam
loopne
enter
es
loop
rcr
out
stos
mov
imulb
and
push
loop
and
cmp
inc
pop
adc
mov
ss
mov
pop
negl
cmp
pop
lahf
jge
lock
fstpt
and
xor
adc
mov
sbb
dec
mov
pop
mov
in
sub
adc
mov
adc
mov
cmp
filds
push
inc
repz
adc
mov
adc
inc
push
jl
mov
rcll
or
call
mov
jns
cmp
jne
pop
test
sub
dec
repz
testb
jae
repnz
mov
mov
test
fstpt
inc
dec
and
out
sbb
jno
test
mov
sub
jb
xchg
and
scas
xchg
push
adc
cmp
dec
push
pusha
aaa
outsl
sbb
sbb
pop
stos
mov
xlat
daa
popf
adc
aaa
inc
ds
xorl
add
mov
add
pop
pop
and
pop
mov
mov
xchg
gs
mov
ds
mov
test
push
jmp
push
in
add
icebp
out
std
mov
mov
cmp
xchg
xchg
cld
std
pop
sahf
test
and
mov
xchg
or
lret
addr16
jnp
xor
cmp
add
addr16
test
shlb
lock
or
into
mov
pop
jae
mov
das
inc
sbb
roll
mov
xchg
divb
xor
fsub
dec
inc
out
fbstp
cmpsb
add
movsb
push
out
insb
dec
xlat
xchg
xchg
adc
out
cli
pop
and
mov
rcll
repz
fisttpl
jp
cmpsl
lret
sahf
jecxz
sub
adc
or
daa
les
ja
stos
adc
mov
in
mulb
cmp
cmp
pop
pop
jno
cmp
xlat
pushf
inc
or
or
xor
out
inc
lds
dec
hlt
sbbl
out
push
adc
cld
push
scas
dec
fildll
jg
stos
test
cmp
cmp
mov
movsb
xor
iret
jecxz
pusha
mov
stos
adc
mov
aad
add
or
and
and
sbb
icebp
pop
mov
xchg
push
push
cmpsl
pop
arpl
cli
inc
xchg
xchg
xchg
sub
mov
test
das
xchg
ljmp
cwtl
add
inc
daa
xchg
imull
adc
fistpll
cld
xchg
mov
fisttpll
mov
lds
mov
sbb
adc
mov
enter
test
xchg
xchg
es
push
int3
pop
fadd
clc
jns
cwtl
xor
mov
xchg
test
iret
bound
and
mov
sub
pushf
imul
mov
inc
scas
jmp
adc
in
dec
inc
fs
ljmp
stos
lods
sbb
pop
mov
push
lea
int
and
xor
aam
lcall
cmp
mov
js
cmpsb
fadds
pop
arpl
sbb
gs
xor
mov
cmp
test
and
mov
pop
rol
mov
jmp
or
sub
lods
xor
mov
lods
jmp
stc
push
sbb
push
xor
test
jmp
filds
push
adc
mov
pop
jo
add
loopne,pt
sbb
adc
or
and
dec
aas
outsb
test
xor
rorb
test
cmc
sub
mov
adc
pop
jge
daa
xchg
pusha
out
lods
test
cli
in
xchg
add
pop
test
jne
enter
mov
mov
jbe
das
sbb
popf
sarb
lods
mov
cmp
xor
into
xchg
cmp
sbb
fs
inc
xlat
out
inc
lea
ror
jb
adc
xchg
adc
push
in
sub
xchg
mov
jno
test
xchg
repnz
pusha
dec
sbb
je
or
xchg
mull
mov
inc
outsb
loope
lret
xchg
dec
ja
ljmp
in
aaa
pop
pusha
or
push
mov
dec
pop
js
fdivrs
fimull
push
mov
sbb
cli
dec
rol
lahf
dec
shlb
dec
mov
xchg
fwait
enter
fcomp
xor
push
add
pop
arpl
in
lret
scas
sbb
pop
lcall
adc
aaa
lahf
sbb
dec
sub
mov
xchg
shrl
cmp
add
push
pop
cwtl
pop
rorb
or
push
sti
call
and
jo
popa
mov
int
loop
jne
rcrb
test
mov
jmp
adc
pop
cmpsb
and
adc
jb
les
push
mov
mov
add
pusha
xor
loope
mov
in
ret
mov
scas
mov
sub
mov
scas
js
scas
add
aas
inc
lds
not
call
inc
out
xlat
mov
lds
fwait
stos
mov
je
inc
sub
jne
xchg
arpl
mov
cwtl
adc
test
pushf
push
add
fs
pop
je
dec
arpl
mov
push
pop
push
rcr
into
and
push
mov
vmovupd
loope
mov
mov
sbb
les
jne
mov
out
repz
das
test
push
jp
cmp
aaa
and
leave
lods
rol
cmc
psubsw
mov
aas
cld
movsl
add
out
lea
add
dec
lods
faddl
popa
test
lahf
andl
add
out
icebp
inc
lods
push
mov
fcompl
xchg
xchg
int3
js
aaa
neg
addr16
imul
xor
ror
cmp
xchg
pop
lcall
std
xchg
enter
scas
xor
scas
lcall
dec
or
gs
jno
lea
and
orb
and
jg
sarb
push
sub
cmpsl
push
not
xor
xchg
mov
push
sbb
call
lods
jp
scas
cmovbe
fdivs
xchg
inc
loope
adc
xor
test
xchg
bts
add
xchg
dec
mov
ror
filds
dec
outsb
dec
mov
lea
rol
sub
enter
lahf
mov
sub
shr
jmp
push
lods
lods
js
pop
adc
scas
stos
inc
js
rcrb
jne
stos
mov
mov
push
xor
cmp
xor
adc
icebp
or
test
cli
psubw
lret
push
xchg
add
enter
xchg
outsl
and
adc
bound
loope
clc
mov
jae
shll
dec
je
ret
inc
out
dec
xchg
push
fistps
adc
push
stos
mov
xchg
mov
mov
cs
adc
jbe
pop
jbe
push
dec
sbb
daa
pop
xchg
mov
into
inc
popf
mov
sbb
add
incb
mov
jge
lds
and
loop
add
push
xchg
out
jp
loopne
xchg
adc
aam
aam
stc
jmp
frstor
cmc
in
fs
sbb
and
jmp
icebp
dec
xor
pusha
cwtl
mov
popf
repnz
xor
out
imul
pop
fs
mov
jg
and
sar
ret
jae
cmp
outsl
mov
mov
std
lods
mov
add
or
rcrl
aam
out
push
aam
adc
jg
add
push
jg
dec
sub
xlat
lds
das
lea
sbb
ljmp
shl
lcall
xchg
nop
jo
vmulsd
stos
mov
fistpll
sbb
fistps
mov
in
popf
rcll
sbb
push
repnz
sbb
insb
inc
test
aad
mov
aam
popa
cli
insb
adc
fidivl
cmc
sti
xchg
fisubl
xor
xor
jne
mov
inc
add
std
lds
adc
and
xchg
out
pop
xchg
int3
add
push
aas
mov
call
xlat
lds
mulb
xor
out
ret
addr16
add
lcall
push
xchg
sbb
and
out
and
mov
repnz
into
iret
mov
pop
in
stos
in
pop
mov
and
scas
pushf
cmp
fdivrl
fcoms
pop
jg
xchg
nop
push
jae
cmpsb
xor
nop
mov
adc
daa
movsb
test
push
andl
inc
sbb
popa
mov
jae
call
mov
clc
mov
gs
push
jge
jg
scas
jmp
jb
dec
arpl
jle
mov
lret
lcall
sbb
mov
in
popa
xor
stos
mov
pop
push
cmpsb
push
sbb
add
arpl
nop
das
mov
sbb
mov
fbstp
dec
push
xchg
mov
insl
and
mov
es
mov
fld
cld
test
xchg
mov
lds
adc
repz
and
adc
xor
cli
sarl
jg
mov
dec
aas
imul
ret
cwtl
lods
enter
lea
out
sbb
mov
lods
adc
mov
es
and
imul
addr16
pop
scas
arpl
and
aad
mov
movsl
pop
sti
sub
mov
fxam
xor
cmpsb
imul
test
aam
adc
add
pop
jns
aam
loope
add
fwait
insb
pop
dec
or
js
popf
lds
repz
or
mov
loop
stos
adc
mov
cmp
pusha
and
or
xchg
fistps
imul
xchg
push
in
jecxz
ljmp
dec
cwtl
and
sbb
cltd
daa
lahf
hlt
iret
pop
cmpsl
fs
jge
jp
xchg
lods
mov
sbb
xor
rolb
pop
popa
sub
dec
dec
stos
ret
sbb
iret
int3
mov
ficomps
stc
cltd
pop
pop
jge
pop
ja
mov
lock
or
je
aas
cmpl
dec
push
ret
adc
adc
mov
cmp
test
push
pop
and
sub
lods
and
and
sbb
jnp
dec
dec
pusha
mov
popf
incl
jne
and
fimull
repz
bound
mov
push
xor
out
mov
add
push
add
dec
mov
push
inc
sarl
hlt
inc
xchg
rcr
xchg
mov
cmovb
popf
mov
dec
pushf
sbb
iret
adc
repnz
sbb
out
lcall
test
cmp
mov
xor
mov
popf
orl
mov
inc
push
cmpsb
push
adc
or
and
push
loopne
mov
insl
inc
popf
clc
adc
and
hlt
ja
popf
shrl
imul
mov
adc
dec
daa
inc
mov
dec
shl
and
push
push
dec
cmpsb
mov
cld
loop
ljmp
dec
out
test
fbld
sub
in
jmp
fs
insb
fnstenv
lret
jmp
adc
xor
push
loope
push
xor
xor
mov
aam
imul
call
sbb
ret
cmp
or
mov
mov
dec
sbb
and
mov
ja
dec
cmp
add
push
add
icebp
jae
push
aam
sbb
jmp
dec
nop
sbb
jecxz
cmpsb
sub
fistpl
mov
adc
and
shl
test
lods
jbe
inc
loopne
add
mov
int3
sbb
sbb
call
sub
adc
mov
mov
in
sbb
push
cmp
mov
mov
and
les
xor
daa
xchg
xor
or
test
stos
or
sbb
decl
push
pop
inc
data16
aam
push
inc
rolb
mov
test
test
out
int
jb
jae
push
push
jge
mov
popf
adc
imul
out
outsl
aad
out
stc
bound
stos
jne
lds
pop
xchg
pop
push
hlt
cmpsb
and
aas
orl
pop
orl
test
push
pop
repz
daa
dec
je
pop
sbb
cmp
stc
faddl
push
je
cmp
frstor
imul
or
inc
movsl
sub
std
cmp
push
lahf
adc
shlb
daa
mov
sub
orb
or
jae
pop
into
loopne
sbb
pop
push
inc
push
pop
es
adc
sbb
ds
sub
push
ja
cmpsl
xchg
xchg
aad
int3
pop
jnp
mov
fidivrs
insb
inc
call
adc
test
shr
mul
dec
mov
test
xor
add
outsl
cmp
pop
lods
dec
adc
mov
jae
inc
popf
lods
or
ret
outsl
xchg
icebp
jecxz
repz
es
pop
or
mov
and
and
xor
mov
mov
loope
scas
and
push
push
xchg
add
mov
adc
cltd
jl
push
das
xchg
dec
ret
lret
mov
subl
inc
or
xorl
lahf
add
xchg
dec
mov
daa
popf
sbb
popa
pop
sbb
adc
shrl
xor
fs
adc
idivb
es
jae
pop
cmp
mov
jbe
adc
arpl
cmp
mov
mov
testb
add
mov
mov
jno
dec
xchg
add
lret
mov
or
mov
xchg
sbbb
and
push
sbb
test
adcb
xor
roll
lds
daa
div
push
xor
dec
pop
fidivs
pop
jae
pop
fsts
shll
jbe
jbe
adcl
add
cmpsb
sbb
arpl
jl
mov
mov
rol
lea
out
std
adc
and
or
xorl
xorl
xchg
push
add
cmc
mov
sbb
mov
cwtl
mov
pop
push
mov
jmp
std
mov
jns
jbe
cmp
jo
jmp
fcompl
pop
add
jl
pop
dec
cld
stos
xchg
jle
mov
push
outsb
mov
mov
lret
leave
insl
adc
and
jae
stos
mov
push
add
jmp
fildll
mov
sub
jecxz
jle
dec
and
pop
movsb
or
jge
dec
adc
mov
repz
sbb
add
shll
mov
scas
imul
inc
pushl
shll
sbbl
mov
adc
push
pop
xchg
xor
mov
and
test
jl
inc
ljmp
sub
inc
sarb
out
mov
push
pop
dec
popf
inc
or
adc
xchg
dec
jbe
into
shll
inc
jns
jae
cmp
jp
enter
xchg
pop
stos
jns
pushf
loope
mov
push
popf
xchg
adc
test
fwait
add
mov
xchg
fisubrl
pushf
insb
mov
std
icebp
lods
xor
iret
xorb
or
inc
cmp
movsl
cwtl
lock
mov
inc
pop
xor
js
lret
xchg
insl
mov
mov
push
jmp
arpl
arpl
dec
shll
hlt
adc
in
mov
dec
fsubl
loop
pop
xorb
mov
adc
pop
sub
dec
add
pop
addr16
mov
nop
inc
pop
adc
push
clc
mov
popf
mov
mov
jmp
shll
jns
jb
shll
and
addl
add
sbb
fldenv
xor
loop
xor
ret
fucomi
andl
pushl
push
dec
jecxz
xchg
enter
mov
in
stos
stos
enter
lahf
test
popf
mov
leave
pusha
or
cmp
sbb
xchg
enter
xor
sbb
mov
adc
leave
jecxz
xchg
push
mov
push
subl
mov
clc
shlb
andl
and
test
idivb
cmp
imul
fstpt
fwait
hlt
out
push
jae
ret
adc
fdivp
mov
push
repz
pop
repz
fsubl
sub
call
sbb
mov
adc
ficoms
add
lret
push
fs
mov
mov
es
dec
mov
xchg
push
inc
je
mov
xchg
aad
fs
dec
jae
into
pop
cltd
xor
jmp
sub
xor
dec
pop
xchg
cmp
leave
pop
fs
mov
dec
cmp
clc
gs
popf
data16
push
lret
das
mov
imul
pop
sub
adc
adc
pop
xchg
cld
push
push
iret
fnsave
xchg
addr16
mov
lods
cmp
movsb
xchg
adc
cmpsl
js
andl
loopne
fwait
pop
fadd
sbb
adc
popf
sbb
jl
leave
sbb
aad
inc
or
pop
inc
push
push
mov
inc
dec
popa
mov
scas
pop
jae
pop
dec
push
or
cld
pop
xor
mov
mov
pop
cmp
xchg
lock
push
mov
fidivs
shrl
pop
out
adc
ljmp
jne
pop
mov
bound
mov
or
leave
add
insb
aam
jge
ret
enter
mov
sub
push
addr16
icebp
leave
dec
sub
sbb
fbld
js
jae
lods
fdiv
and
xchg
mov
and
mov
mov
push
dec
mov
cmp
lea
notrack
sbb
jle
adc
popf
add
mov
insb
mov
pop
daa
mov
movsb
je
rclb
test
and
xchg
pop
frstor
iret
sub
jae
xor
and
mov
and
jbe
inc
es
je
push
int
add
popf
iret
mov
out
jae
xor
shlb
sub
pop
inc
sbb
and
sbb
in
sub
or
push
and
loop
jecxz
push
mov
adc
cmp
fidivrl
lahf
bound
lock
cs
shrl
mov
inc
mov
pushf
dec
dec
sub
adc
ljmp
not
in
sub
mov
sbb
jnp
or
aam
popf
imul
mov
mov
xchg
imul
pop
push
mov
addr16
inc
pop
or
data16
jo
in
shrl
sub
outsb
fisubs
mov
mov
push
repnz
mov
pop
jle
aas
in
in
xor
in
sbb
movsl
fadd
loope
jmp
push
or
pop
mov
ja
sbb
jno
subb
and
push
adc
push
repz
jmp
push
pop
arpl
jne
pop
cwtl
jmp
pop
adc
hlt
mov
mov
stos
int
sarl
icebp
mov
orl
das
aam
add
jmp
sub
aad
cmp
out
pop
push
cwtl
mov
jbe
dec
jmp
dec
and
jl
xchg
shr
sub
xchg
ret
ja
pop
push
fcoml
movsb
dec
sbb
jae,pn
mov
std
push
adc
mov
add
push
stos
and
rcpps
and
pop
data16
adc
mov
pop
lods
and
jae
mov
push
jb
push
repz
pop
lcall
pushf
push
cltd
icebp
and
jbe
test
mov
rcll
inc
test
bound
jns
jnp
mov
adc
dec
mov
aas
jae
mov
mov
mov
fistpl
sbb
cmc
or
xchg
call
scas
mov
nop
adc
mov
adc
adc
dec
jo
mov
shll
arpl
sub
xchg
test
mov
shr
into
cld
stos
push
cmp
mov
cs
sub
sub
lahf
loop
fdivrl
add
mov
movsl
cltd
cmpsb
dec
xchg
int3
loopne
movd
lahf
mov
sub
push
mov
rorl
adc
push
rep
dec
jecxz
inc
sar
mov
mov
sahf
out
xchg
pop
stos
xlat
lret
in
sub
fdivr
push
dec
lea
and
mov
sahf
jb
or
cmp
hlt
arpl
gs
in
dec
mov
arpl
xchg
ds
aad
fsubrs
inc
xor
cmp
aas
add
mov
lock
into
enter
push
lds
ja
xchg
rcr
je
adc
pop
repz
aaa
out
xchg
adc
jl
mov
xor
sub
daa
mov
push
cs
mov
push
sbb
lods
and
jns
in
adc
jno
jo
xor
fstpt
push
mov
cmp
jae
push
mov
jno
pop
daa
adc
and
fisttps
je
sahf
push
aam
cli
bound
loop
fwait
rolb
mov
lahf
cmp
and
pop
cmp
adc
out
test
and
cmp
fxch
or
stc
insl
or
xlat
adc
sub
dec
stc
sub
cmpsb
mov
dec
mov
sbb
dec
push
push
orl
add
stos
mov
or
xlat
mov
mov
adc
rcrb
jp
addr16
add
cld
dec
cltd
dec
push
dec
je
mov
xchg
imul
add
jno
sub
inc
shlb
loopne
ja
or
xorl
mov
outsl
mov
adc
arpl
fldlg2
and
jge
les
inc
jbe
les
push
gs
pusha
addr16
lds
dec
add
add
mov
punpcklwd
dec
jg
shlb
daa
adc
jbe
dec
jge
js
outsl
insb
ja
or
in
fldz
and
mov
lret
int3
addr16
mov
sub
and
push
nop
jle
push
lret
aam
sarb
clc
ss
push
cmp
subb
xor
push
adc
and
dec
pop
mov
push
jge
lods
add
cli
out
ret
movsb
in
pop
out
xchg
sbb
cwtl
sub
mov
cltd
inc
lahf
push
andl
dec
sbb
les
jp
lods
pop
insb
in
lret
pop
adc
dec
jbe
out
scas
dec
dec
fisubrl
and
lods
packsswb
mov
pop
nop
or
js
fcmove
hlt
lret
sbb
cmpsl
shrl
jo
aas
pop
adc
add
ret
outsb
fidivrs
xor
stos
enter
xchg
leave
or
aaa
jnp
add
sbb
sub
into
push
mov
js
xchg
xor
pop
in
lea
das
mov
xchg
cmp
pushw
adc
daa
addb
dec
cltd
outsl
movsl
jb
popf
mov
cmp
dec
dec
xlat
ret
pusha
mov
mov
xchg
jb
dec
xor
jne
aaa
cmp
sub
pop
lea
nop
xchg
and
sbb
fisubrl
decl
lods
xchg
push
add
fmull
cmp
dec
jne
stos
push
adc
pop
jbe
movsl
test
add
shr
cmp
push
xor
adc
mov
aad
daa
scas
and
or
fisttpll
adc
lods
aas
div
fnsave
sub
pop
mov
js
sbb
jg
sti
pushf
call
ror
lea
pop
mov
or
sub
insb
adc
ret
mov
in
mov
std
mov
sarb
ret
jecxz
mov
in
ds
sub
sub
fdivrp
stos
xor
cmpsl
into
fisubrs
pusha
pop
sbb
lds
call
xor
mov
mov
sbb
cs
push
int
imul
mov
cs
or
xchg
dec
rolb
les
in
mov
bound
lcall
pop
lret
jns
jbe
xchg
add
mov
xlat
fs
xchg
and
push
out
test
pop
xchg
outsb
aas
sbb
lcall
bound
and
mov
dec
xor
sbb
sbb
out
mov
jno
out
mov
ret
xorw
mov
jns
jae
jne
adc
ficompl
in
mov
inc
jae
pushf
fists
aad
fcmovnb
mov
sbb
in
fdivrl
rcrl
xchg
dec
in
cmpsl
xor
mov
or
fists
mov
inc
xchg
xchg
rcrl
or
jle
mov
and
push
fisubl
enter
aad
repz
pusha
pop
addr16
test
movsl
icebp
jae
inc
inc
sti
movsl
adc
jle
cmp
sbb
mov
pop
xor
std
push
and
movsl
cmc
fidivrs
aam
mov
daa
pop
mov
jo
pop
jae
jae
lret
cmpsl
adc
mov
cmp
adc
inc
inc
sub
jns
push
faddp
jg
push
ret
jle
daa
and
jecxz
push
lcall
and
pop
mov
pop
fstpt
sbb
dec
or
test
outsl
cmc
jge
cmpl
adc
pop
ret
jno
xor
scas
push
push
adc
aas
not
cmp
pop
xchg
sub
mov
cld
shrl
xchg
mov
cmc
fdivrs
sbb
scas
add
inc
cmc
pop
lahf
dec
sbb
sub
pushf
insb
xchg
mov
xchg
mov
dec
dec
adc
test
xchg
dec
lret
xchg
add
andl
pop
outsl
aas
cmc
xlat
jbe
inc
mov
hlt
out
out
sbb
cs
pop
push
inc
or
loopne
lods
dec
outsb
mov
jmp
or
mov
jle
adc
cmc
aas
push
mov
lods
cmpb
sahf
aam
cld
mov
xchg
mov
push
movsb
xchg
xorl
cmpb
push
or
sbb
outsb
xchg
push
add
ret
in
cltd
shll
push
inc
mov
lret
jecxz
scas
dec
sub
jae,pt
jbe
cmp
adc
xor
push
icebp
sbb
and
lret
cmp
inc
lods
mov
ds
pusha
pushf
jle
inc
std
xchg
push
stos
sbbl
jnp
adc
daa
repz
into
fadds
ss
aam
mov
pop
sub
push
or
sub
movsl
je
lock
mov
fistps
lret
xorb
sbb
icebp
jno
adc
or
sbb
fsub
or
ficoms
fsub
jle
sti
jno
iret
leave
sbb
rorl
mov
aam
adc
adc
movsl
dec
gs
fstpl
lods
pop
push
sti
lock
mov
popa
lock
iret
pop
xor
push
jno
jno
add
ret
jne
cmp
enter
push
cmp
adc
repz
mov
imul
mov
aam
inc
dec
inc
inc
xchg
mov
sub
repz
sti
and
js
push
loopne
inc
fiaddl
sahf
dec
xchg
cmc
sbb
pop
rolb
hlt
cmp
insb
loopne
inc
and
adc
pushl
nop
das
das
xor
lods
aad
xchg
test
jge
fnsave
pop
fsubrs
jns
stc
inc
inc
inc
and
rcr
ret
jg
add
and
add
cmpsb
je
xchg
mov
sub
xchg
repz
cltd
dec
mov
repz
cld
aam
divb
sti
push
test
out
sbb
out
shr
xchg
jecxz
sar
ss
mov
sub
adc
pop
adc
jmp
loopne
scas
pop
jmp
frstor
adc
mov
mov
cltd
inc
scas
sub
pop
sbb
jbe
sbb
mov
xor
cmpsb
fcmovne
repnz
mov
fidivrs
lahf
mov
pop
popf
cwtl
nop
fadds
loopne
sbb
inc
ret
dec
into
mov
popf
xchg
nop
xor
push
or
add
mov
push
jno
hlt
jle
pop
add
or
loop
mov
es
aam
push
dec
mov
aam
pushf
cmc
mov
lock
sub
fmull
and
add
ret
or
lods
rorl
fadds
push
aad
inc
xchg
mov
and
sbb
fists
jns
mov
sub
add
movsl
call
aam
je
xchg
test
dec
adc
mov
addb
aad
xchg
mov
adc
in
push
inc
push
push
push
push
scas
lret
test
leave
xor
xchg
std
mov
mov
mov
lret
adc
ret
pop
mov
cmp
cmp
test
pop
pop
je
mov
sahf
adc
out
or
pop
push
dec
jo
pop
xorl
pushf
sbb
cmpsl
sbb
and
push
pushf
mov
or
mov
and
sbbl
sub
push
pop
ret
movsb
add
adc
addr16
dec
pop
repnz
push
fstps
fldl
xlat
jae
test
pop
mov
sbb
sbbb
push
push
dec
pop
not
je
pop
xlat
sbb
sub
cmp
xlat
sub
mov
roll
test
cld
stos
test
clc
shll
sti
push
jne
aad
cmp
push
and
push
subb
ret
cmp
aas
jmp
in
dec
shll
les
push
inc
sbb
and
mov
sbb
sub
js
pop
in
dec
sub
adcl
mov
outsb
lret
jne
push
ret
nop
dec
ret
xor
sub
shlb
leave
sbb
push
aaa
aaa
pop
insb
and
insl
jmp
xor
sbb
push
test
inc
cmpsb
push
inc
pop
add
nop
add
cmp
mov
lea
cmp
daa
rorl
sbb
ds
pop
lods
mov
dec
xchg
fiadds
jne
daa
sbb
xchg
push
into
jae
sub
cmpsb
mov
xor
push
add
lock
pop
mov
test
cli
push
dec
mov
testl
inc
and
imul
test
sub
mov
sbb
fisubrl
loop
pushf
test
sbb
repz
add
inc
and
std
add
fbstp
iret
outsl
call
lds
sbb
cltd
adc
push
ss
cs
xchg
add
sbb
xor
push
jo
pop
out
push
in
mov
scas
repnz
test
clc
jg
jbe
in
orl
mov
pushf
xchg
push
mov
and
mov
cmp
jns
sbb
mov
xor
pinsrw
push
hlt
jmp
stc
adc
push
mov
adc
scas
or
mov
cmp
and
push
and
fwait
and
lds
mov
pop
and
adc
repnz
inc
adc
and
pop
lret
add
jb
aam
mov
in
cltd
test
jbe
imul
dec
dec
mov
mov
adc
lret
push
dec
mov
popf
cltd
jns
cmc
das
lea
fdivr
pushf
dec
les
sub
daa
dec
pop
push
call
push
out
mov
and
xor
fadds
test
xchg
rcr
ret
adc
pusha
cli
mov
mov
add
imul
push
shr
pop
sub
xchg
and
imul
push
add
nop
lret
pusha
add
sub
sbb
hlt
adc
shrl
pop
lock
sbb
adc
pop
sbb
add
mov
mov
pop
cli
arpl
lcall
jg
jnp
test
or
scas
xlat
xchg
lret
jnp
fwait
push
xchg
lods
sub
push
mov
add
je
pop
adc
repz
je
test
pop
aas
add
leave
xor
xchg
fs
mov
and
jo
je
push
ret
mov
pop
mov
or
popa
cmpsl
mov
jbe
push
in
sub
shl
and
add
push
mov
lcall
jne
pusha
es
bound
mov
push
fsub
xlat
mov
ss
ror
sti
mov
jns
xchg
adc
and
pushf
test
mov
push
cmp
inc
adc
push
pop
or
and
xchg
or
std
mov
aas
mov
dec
daa
sbb
popa
sub
jb
cmp
hlt
stos
fldt
imul
inc
jecxz
jno
ljmp
adc
mov
pop
push
arpl
push
push
add
fsubl
cld
rorl
xor
call
push
add
mov
lret
shlb
pop
je
pop
lret
xor
call
sbb
cld
fadds
pop
mov
repz
jb
ja
lea
out
add
mov
pop
lret
push
pop
pop
xlat
leave
cmc
mov
ljmp
jo
daa
push
or
inc
inc
push
fcoml
fildl
pop
repnz
cld
aam
pop
jp
pop
pop
mov
scas
mov
repz
outsl
push
adc
ja
fscale
sub
addr16
fiaddl
clc
mov
inc
mov
ds
jns
and
pop
bound
mov
jecxz
cmp
ret
lods
mov
mov
jmp
push
jmp
aas
sbb
scas
aam
jl
mov
outsl
dec
hlt
loop
in
rcr
aad
and
lock
mov
and
adc
jb
fmul
mov
mov
stos
and
loope
pop
push
and
inc
loopne
in
repz
add
mov
push
mov
pop
add
sub
rclb
pop
adc
mov
xor
repz
loope
cwtl
arpl
add
test
push
xor
xchg
cmp
xchg
push
fisubl
cmpsl
fidivrs
jmp
movsl
mov
xchg
push
xchg
sbb
call
decb
jecxz
sbb
sbb
jnp
test
fnstenv
out
test
cmpsl
jbe
jp
fidivl
dec
int
or
or
in
xchg
mov
xlat
sbb
add
add
push
int
sub
jecxz
push
lods
test
imul
jo
fs
js
mov
and
and
mov
nop
adc
subb
cmp
fwait
adc
inc
aaa
sub
sbb
jge
daa
xchg
xchg
xor
jae
mov
fsts
mov
fcoml
mov
push
test
pop
mov
pop
cmp
and
aas
jp
inc
or
test
icebp
mov
pop
imul
les
push
and
mov
and
xchg
or
xor
mov
aaa
pop
out
sbbl
inc
popw
inc
mov
xor
daa
insb
dec
jb
fadds
test
mov
icebp
push
in
sahf
mull
das
js
stos
lcall
inc
lret
subb
dec
fcomi
or
mov
jge
outsb
sbb
mov
push
pop
std
push
lret
xchg
xor
xor
or
repnz
sbb
xorb
push
xor
or
jmp
lahf
int3
sti
sbb
out
push
test
mov
shrl
pop
cltd
rcl
das
dec
cwtl
cli
cmc
mov
or
lods
mov
jne
nop
mov
dec
rolb
enter
xor
aaa
jae
into
rorb
sbb
cmpl
or
adc
jno
dec
test
and
imul
mov
lret
ss
jle
daa
push
push
jno
mov
cltd
ss
or
mov
jle
inc
dec
int
xchg
jae
das
ljmp
pop
test
dec
inc
push
adc
and
cld
in
xchg
outsl
cltd
jne
int
rcrb
stos
cltd
add
jbe
push
stos
idiv
jmp
rcrb
loope
push
das
jmp
sbb
call
test
push
scas
ds
jb
or
rcll
fdivrs
shrl
pop
sbb
lods
loopne
dec
jbe
sub
xor
fwait
repz
inc
pop
es
mov
mov
fwait
inc
sbb
inc
adc
dec
pop
pop
xchg
mov
jp
shrb
sbb
xor
cmpsl
test
sbb
mov
xchg
sbb
adc
ficoml
jl
jmp
lret
in
dec
sbb
gs
inc
sahf
inc
aaa
lds
mov
cs
xchg
test
dec
out
das
test
add
les
dec
movsb
int
adc
mov
andl
lahf
xor
jmp
mov
add
inc
or
dec
dec
mov
rcrl
popa
add
adc
jmp
mov
sbb
pushf
adc
xor
mov
dec
and
les
aaa
imul
xor
loopne
loopne
shlb
mov
stos
scas
fildl
imull
je
sbb
sbb
lret
xlat
stos
out
mov
pusha
cwtl
repz
popf
shrl
xorb
cld
call
dec
es
dec
dec
and
test
enter
pop
mov
lcall
mov
push
jmp
jmp
xchg
xchg
inc
outsl
data16
push
ja
js
inc
aad
push
insb
imul
movsb
leave
push
fldt
xchg
xchg
iret
mov
pusha
ret
pop
mov
push
setge
add
ficoml
fidivl
lahf
stos
imul
hlt
jge
negb
sbb
adc
mov
mov
hlt
mov
mov
fisubl
icebp
add
out
mov
lock
adc
ljmp
adc
jl
cmc
xlat
es
ror
mov
daa
mov
leave
stos
and
mov
pop
cs
inc
rorb
pop
addr16
and
xchg
enter
mov
or
and
daa
insb
mov
xchg
adc
popa
adc
imul
cmpsb
sbb
xchg
add
pusha
cmp
pop
lds
mov
adc
xor
fnstsw
out
daa
inc
in
addr16
push
out
fisubrl
mov
lock
lcall
push
sarl
roll
jg
sbb
sbb
subl
push
jns
jbe
mov
repz
hlt
pop
test
push
scas
dec
xchg
push
jns
outsl
cltd
lahf
in
shlb
inc
push
in
jp
mov
pop
gs
movsb
jmp
call
inc
out
xor
adc
sbb
or
les
in
add
int
repnz
pop
sbb
mov
cmp
lcall
add
rclb
fidivs
iret
inc
fisttps
test
aam
sub
jg
inc
out
mov
in
jo
xchg
lds
insl
frstor
or
out
push
jle
mov
stc
jno
mov
cmp
mov
dec
xchg
cmc
dec
stc
dec
mov
filds
jae
push
icebp
pop
dec
and
or
ret
pop
fadds
jp
jnp
test
and
add
adc
or
mov
insl
out
es
out
icebp
aaa
mov
sbbl
lret
adc
push
jo
stos
orb
loop
or
std
push
xorl
sub
or
imul
pop
das
rol
das
outsb
jb
outsb
pop
sub
cmp
push
fs
lret
out
push
mov
mov
lea
ret
add
xchg
int3
cmpsl
cmp
inc
in
push
jae
mov
popa
inc
out
movsl
aaa
pop
xchg
sti
push
nop
dec
push
adc
outsb
dec
xchg
sbb
pop
push
filds
cmp
mov
iret
jne
adcb
pusha
popf
rcrl
xor
dec
sbb
loop
fcmovbe
push
dec
sbb
lret
das
add
xchg
cs
addr16
repz
mov
jb
loope
dec
f2xm1
jmp
lfs
nop
inc
xor
frstor
add
fcompl
sbb
out
add
enter
bound
dec
fdivs
adc
cmpsl
jge
and
cli
mov
xchg
xchg
sub
loope
xor
pushf
out
arpl
dec
inc
and
test
jno
xor
test
jmp
xor
cmc
sub
mov
adc
setl
dec
iret
cmc
je
les
pop
int3
xchg
mov
mov
mov
mov
sbb
mov
pop
call
lods
fst
jp
lret
mov
enter
outsl
subl
aad
and
xor
stos
insl
pop
xchg
cmp
and
xorl
popf
sub
int
lods
adc
sbb
mov
clc
jo
aas
addr16
repz
in
mov
and
mov
or
icebp
mov
lcall
adc
mov
in
push
jg
int
pop
sub
das
shrl
sbb
arpl
xor
mov
roll
fwait
jae
daa
add
idiv
mov
and
jle
insb
mov
nop
ret
vxorps
dec
sbb
std
add
dec
and
jl
and
inc
bound
mov
cmp
test
cmp
mov
addr16
xlat
faddl
pop
outsb
cmc
loope
sbb
in
enter
jbe
bound
cmp
mov
fisttps
jle
adc
scas
add
and
jo
out
or
xchg
dec
jb
jbe
lods
repz
hlt
jl
ds
je
scas
cmp
mov
in
aaa
ljmp
enter
and
lret
mov
xor
add
and
in
mov
xorb
loop
cmp
dec
in
cmp
lahf
popf
pop
je
sub
xchg
pop
nop
in
or
fcomip
mov
out
inc
sbb
addb
or
popf
adc
jl
sub
cmp
mov
enter
popa
mov
ss
adc
push
cmpsb
lcall
ret
or
sbb
jg
jns
add
push
je
pushf
fildl
outsl
hlt
add
jmp
mov
and
pop
or
pop
add
je
pop
or
stos
or
mov
test
and
mov
push
inc
mov
cmpsb
clc
les
mov
shlb
jne
add
jns
and
fadds
mov
gs
inc
add
movsl
lock
dec
nop
xchg
jge
cmp
insb
sbb
pushl
fwait
jne
rcrl
cmc
and
clc
cmpsl
pop
stc
xor
mov
or
xor
dec
mov
jb
test
outsb
jnp
xchg
adc
loopne
icebp
pop
mov
lods
add
daa
testb
sarl
pop
jnp,pt
pop
pop
jb
dec
xor
adc
mov
adc
mov
rorb
iret
xor
nop
lock
shrl
jno
sbb
sub
arpl
inc
push
push
push
xor
rorb
cld
fimull
shll
push
mov
mov
and
push
xlat
sbb
gs
pop
xor
into
push
cmpsb
bound
push
in
push
xor
xor
inc
mov
loope
add
aas
or
pop
dec
lahf
das
rclb
push
jle
and
and
mov
push
fldt
arpl
rorl
pop
in
lcall
jae
leave
enter
loopne
push
mov
mov
dec
roll
clc
add
test
and
scas
inc
xchg
sub
inc
adc
lds
movsb
jle
ret
jo
int
cs
mov
sbb
pop
fwait
add
jae
std
dec
and
dec
dec
stos
fs
add
icebp
ds
mov
das
pop
dec
push
mov
adc
jo
mov
xorb
cmpb
xchg
cmpsb
lcall
test
sbb
hlt
pop
and
mov
cli
pop
lahf
mov
sbb
push
icebp
and
mov
enter
subl
xchg
cmp
mov
xor
fbstp
test
std
rclb
daa
pop
sbb
leave
pusha
mov
lret
call
in
sarl
mov
stos
sub
js
sub
dec
std
fs
mov
push
cmp
lahf
jno
add
mov
lret
push
rep
pop
mov
adc
shll
jp
cmp
enter
outsb
imulb
cmc
add
lahf
loopne
fistpll
cmpsl
test
xorl
and
inc
mov
mov
mov
ljmp
insl
sub
in
jno
mov
cmpsb
ss
ja
or
sahf
or
ja
mov
test
jns
push
aad
aad
mov
lock
push
test
jp
in
sbb
test
sbb
and
and
stos
inc
sbb
add
and
lock
mov
daa
jns
push
dec
sbb
mov
cmp
pop
lods
lahf
push
add
dec
mov
push
inc
fmull
and
jp
xor
aad
cmp
push
in
in
clc
daa
push
rcll
stos
icebp
adc
sub
out
lret
mov
arpl
and
xchg
and
push
loopne
popf
inc
push
dec
xor
gs
mov
js
jecxz
pop
pop
xchg
mov
int
repnz
adc
push
jmp
test
in
add
mov
les
jl
test
and
or
popa
jnp
inc
dec
push
lahf
xor
adc
xor
push
in
mov
clc
loope
in
and
insl
scas
int
xchg
fcom
or
jg
mov
call
push
push
movsl
in
aad
mov
mov
pushf
mov
pop
add
mov
mov
pop
in
int3
stc
rol
pop
mov
xchg
test
jns
mov
or
push
mov
in
call
jne
cmp
ret
pop
cmc
cwtl
sbb
push
cmp
xchg
push
jl
es
mov
scas
iret
dec
decb
jae
cmp
repnz
inc
mov
jns
das
ret
js
std
rorl
push
addr16
jne
sti
popa
mov
inc
arpl
or
test
aam
push
sub
std
addr16
xchg
pop
rolb
mov
nop
rolb
ds
arpl
lds
test
xor
ljmp
icebp
ss
lret
mov
dec
lahf
push
cmpl
out
sub
into
shlb
cld
adc
add
int3
fwait
jp
scas
push
mov
div
out
imulb
bound
int
sub
add
cmp
repz
aam
scas
stos
mov
adc
repnz
cld
dec
test
push
cmpsb
imul
jne
test
in
shrl
push
shl
or
movb
jne
adc
jnp
lods
notb
push
mov
test
inc
dec
jge
mov
out
stos
adc
xorb
cmp
add
imulb
imul
and
dec
sub
hlt
fdivrs
and
roll
test
sbb
dec
pop
push
and
or
pop
sub
hlt
pop
hlt
loop
mov
rclb
push
cmp
jne
ror
and
mov
fwait
sub
iret
sbb
rcll
lahf
dec
pop
out
jl
stos
push
sarl
cmpsl
scas
push
mov
xor
orb
decb
scas
test
pop
adc
adc
enter
mov
std
dec
mov
mov
hlt
push
mov
inc
stos
adc
scas
icebp
mov
sub
popf
jg
icebp
out
sbb
sub
ret
sub
out
rcrb
rcl
add
clc
jecxz
icebp
dec
inc
cmp
adc
loope
addl
push
jmp
out
jnp
adc
aaa
fstl
mov
aaa
inc
sbb
sbb
xor
cmp
mov
push
xchg
call
inc
sub
sar
pusha
cs
cs
push
popf
scas
nop
cmp
idivl
adc
xor
cmp
mov
push
cld
cmc
loopne
ja
inc
dec
jbe
arpl
mov
adc
andb
jge
xchg
sti
mov
cmc
stos
lret
add
or
push
mov
push
and
stos
js
and
mov
rorl
adc
ljmp
inc
pop
xchg
lock
popf
sub
int3
sub
jae
xchg
out
or
push
mov
lods
push
aad
cld
jmp
or
inc
inc
clc
aas
push
push
xor
dec
or
or
fwait
or
xor
jmp
stos
xlat
les
fwait
xchg
pop
not
jl
xchg
xorl
adc
xchg
pop
outsl
jmp
cmpb
mov
aaa
jle
insb
or
xor
je
test
arpl
outsl
xor
ds
xor
mov
dec
mov
pop
add
into
adc
nop
das
push
push
pop
jne
mov
lret
rcrb
xchg
ret
push
inc
xor
inc
cld
xor
push
push
jae
sbb
push
fbstp
les
cmp
rcrb
mov
cmp
enter
sbb
cmp
xchg
call
adc
lds
test
push
enter
lods
xor
test
test
ret
pop
xor
movsbl
fidivrs
sub
popa
lea
sub
cwtl
insb
mov
pop
mov
adc
sbbb
add
mov
mov
adc
aad
pop
mov
pop
sub
mov
jns
aaa
inc
out
jl
add
cmp
inc
dec
jp
movsb
mov
adc
and
cmp
dec
scas
adc
stos
gs
push
mov
xor
add
aaa
or
aam
pop
fcom
and
mov
aaa
pop
xchg
push
data16
popa
jmp
pop
imul
shrb
adcb
and
xchg
jne
mov
cmp
jle
jmp
lret
inc
movsb
or
or
sub
sub
ret
mov
xchg
adc
lahf
clc
insl
sub
mov
jb
add
pop
loope
sbb
sbb
test
lahf
pop
fcomi
repz
push
in
sti
mov
xor
fucom
aas
adc
negb
push
bound
leave
ss
jmp
rorb
or
shrb
es
mov
enter
mov
pop
cwtl
dec
cmc
test
pop
stos
mov
popf
add
cmpsl
fimull
lods
xor
fwait
and
clc
clc
pusha
and
pop
loope
sbb
push
addr16
add
lock
imul
arpl
les
jne
daa
adc
jno
and
arpl
aad
fmul
stc
pop
add
dec
jno
mov
mov
xor
ljmp
imul
fcmove
dec
ds
into
in
cltd
movsb
gs
xor
mov
sub
ret
inc
leave
and
xchg
inc
push
jg
repz
cwtl
aaa
and
or
jns
xchg
pop
cmp
xchg
dec
adc
cs
cmpsb
add
and
repz
dec
loope
push
inc
jne
fiadds
mov
ss
sahf
aaa
icebp
cld
jp
repnz
push
inc
mov
sbbl
das
jns
cmc
js
dec
mov
inc
xchg
mov
bts
dec
xor
mov
push
pop
notb
cmp
mov
lret
jns
dec
pusha
movsb
cmp
inc
cmc
xchg
mov
int3
faddl
jmp
scas
je
and
rcrb
fildl
xchg
pop
mov
sbb
mov
mov
orps
pop
add
xor
aad
cmpl
mov
imul
repnz
sbb
mov
outsl
aam
pop
movsb
cs
or
in
push
xchg
inc
add
jbe
add
shr
push
rclb
sahf
test
jl
rorl
mov
pushf
dec
add
stc
sbb
pop
pop
ret
cltd
jge
popl
mov
out
adc
xchg
loopne
mov
mov
leave
scas
mov
addl
xlat
sub
xchg
lret
cli
outsb
jg
popf
gs
fldenv
cmp
mov
sub
jge
push
int
sarl
and
mov
loope
dec
cwtl
jne
adc
xchg
dec
lds
out
sub
sarl
xor
and
mov
iret
mov
daa
es
stos
cmp
sti
lods
xlat
das
add
dec
fwait
pop
xchg
loope
adc
adc
xchg
pop
cmp
inc
pop
lea
jne
lcall
movl
jae
lock
xor
jmp
mov
btr
adc
sub
imul
std
xchg
imul
jbe
enter
scas
xor
hlt
cmp
and
fists
pop
adc
mov
add
test
bound
mov
or
sbb
leave
icebp
hlt
call
and
adc
jo
in
movsb
shll
ja
lea
pop
ret
dec
push
adc
dec
sub
movsl
or
xlat
mov
pop
push
ja
fwait
sbb
fsub
dec
fwait
cli
mov
mov
inc
fsub
xchg
aaa
mov
jns
aaa
sub
in
adc
rorl
xchg
or
xorl
mov
les
add
adc
inc
popa
out
mov
pop
ja
nop
loopne
pop
mov
lock
inc
jns
out
pop
sbb
xor
test
dec
faddl
hlt
inc
adc
or
inc
jp
push
loope
pop
pop
int
mov
push
cmp
dec
rol
and
test
enter
jne
mov
or
shll
xchg
popa
ja
fs
rcl
mov
push
add
mov
arpl
je
das
popf
icebp
cmp
addr16
mov
scas
dec
icebp
adc
cmc
lahf
repnz
fisttpll
lds
out
hlt
pop
cmc
mov
or
clc
cmp
add
loope
lcall
dec
enter
jno
lret
mov
pop
jp
pop
and
add
mov
cmp
cmc
aas
iret
shr
ds
std
pop
adc
js
sub
adcl
xchg
mov
sbb
or
fsubrl
pop
and
inc
pushf
sahf
call
ror
sarb
adc
lcall
out
cmovns
add
jnp
bnd
xor
es
ljmp
push
cmp
es
mov
adc
stc
jg
cltd
or
test
imul
cmp
test
ja
mov
pop
mov
adcl
outsl
push
or
or
addr16
mov
jae
cmp
mov
stos
push
cmp
xlat
fsts
ljmp
pop
mov
aas
or
or
mov
jnp
ja
or
inc
mov
clc
or
xor
gs
lods
add
aam
lcall
inc
push
aaa
cmp
xchg
sarl
sbb
cwtl
test
pop
das
pop
and
ljmp
clc
mov
test
das
ret
mov
xchg
xchg
out
inc
mov
mov
mov
adc
xor
dec
add
cmc
fsubr
push
mov
xchg
scas
and
xchg
dec
ja
push
jle
imul
and
daa
add
inc
decb
cmp
mov
pop
rcrb
pop
movsb
pushf
push
incl
jg
stc
adc
test
sbb
daa
sub
push
mov
clc
cmp
sbb
sub
mov
ror
xor
lds
jmp
cmp
cld
popf
arpl
mov
clc
dec
lock
lahf
pop
leave
xor
mov
push
sbb
fisubl
or
je
repz
mov
shrb
test
out
add
jp
adc
push
cmpsl
dec
mov
jmp
cmp
cli
xchg
sbbl
loope
imul
mov
call
shl
sub
mov
xor
decb
push
rorb
xor
jo
dec
xchg
outsb
push
loopne
and
xlat
pop
jae
xchg
popf
pop
mov
shrb
sub
pop
js
mov
cli
and
push
push
jl
outsl
cmp
dec
mov
in
sbb
sahf
inc
cmp
push
xor
clc
xor
dec
pop
lea
loop
adcl
clc
gs
xchg
mov
pusha
push
js
pop
movl
in
xlat
lcall
mov
sbb
and
jge
sbbl
adc
mov
hlt
aad
mov
and
mov
xor
daa
fidivrl
int3
sbb
pop
push
jo
and
movsb
sub
cmp
inc
outsb
int3
dec
adc
test
add
jns
aam
js
jns
imull
or
fs
lcall
jle
iret
xchg
add
aaa
jae
jno
jle
mov
sbb
loope
mov
pop
cmpsb
pusha
adc
pop
in
loopne
pop
push
inc
out
adcl
xor
xor
jle
sub
dec
xchg
dec
xor
stc
adc
stos
sbb
insb
pop
push
les
inc
frstor
lds
repnz
test
shlb
add
push
add
popa
or
cmp
call
fisubs
inc
fiaddl
dec
adc
or
je
mov
ja
incl
cmp
xlat
int
pop
xchg
fildll
outsl
adc
pop
pop
shll
fstps
mov
adc
mov
xor
xchg
into
js
out
jne
shlb
lret
xorb
inc
addr16
pop
jne
mov
jo
mov
fcompl
xchg
test
rorb
xor
sub
jp
iret
jg
dec
adc
dec
loop
lcall
fiaddl
sub
in
call
filds
push
add
pop
xchg
lret
stos
dec
inc
iret
cld
jge
dec
sub
inc
imull
cmp
in
dec
push
adc
lods
inc
cmpsb
stc
push
popa
push
setp
jo
stc
mov
jno
arpl
push
test
fdivs
and
sub
jecxz
pop
mov
cmp
popa
movb
insl
mov
mov
dec
adc
mov
dec
in
mov
cmp
mov
push
decb
popa
test
jg
pop
daa
sub
sbb
sub
popf
pop
push
xchg
mov
cmp
xchg
adc
cmp
adc
test
roll
jge
shll
ret
je
fimuls
cmpsl
lods
jecxz
or
sbb
stos
enter
mov
shll
mov
inc
dec
fs
test
add
jne
in
stos
je
push
in
popf
sub
xchg
or
xor
jp
adc
ret
hlt
repz
icebp
stc
cmp
add
jb
fwait
or
inc
mov
pop
push
mov
push
adc
pop
push
jbe
outsl
jno
psubusb
stc
das
call
or
mov
rcr
jmp
add
mov
add
push
jle
mov
adc
push
jg
dec
ret
fbld
testl
fs
inc
push
mov
lcall
imul
cld
sbbb
xchg
dec
xlat
adc
dec
les
clc
push
int3
rolb
add
dec
dec
fiaddl
gs
push
pop
pop
xor
and
xchg
loop
movsb
leave
repz
jno
fcmovnu
notl
jne
sub
or
xor
xor
out
mov
xorl
loop
sub
xchg
mov
ret
int
adc
lret
in
lahf
mov
bound
push
cmpsl
lock
adc
sub
fsts
fisttps
xchg
repz
add
mov
pop
pop
adc
pop
mov
fsubrp
pusha
push
inc
sub
cmp
sub
xor
jg
inc
sti
loopne
xchg
xchg
sbb
lds
jno
ljmp
xchg
cmp
imul
adc
fisttpl
push
and
mov
stos
xlat
aam
adc
or
mov
sub
ds
jns
sub
mov
mov
pop
push
enter
jle
shrb
test
sti
sub
mov
sbb
call
pop
sbb
out
or
or
pop
outsb
adc
popl
imul
dec
lahf
and
mov
xchg
mov
push
sub
inc
jnp
inc
or
and
add
cwtl
std
jnp
stos
fimull
dec
adc
sbb
test
decb
test
pop
repz
out
and
mov
sub
adc
sbb
mov
push
pop
fdivp
mov
dec
into
rcrb
in
test
in
sub
repnz
test
call
sub
cmpsb
inc
je
nop
mov
xorb
scas
fstpt
add
nop
pop
jge
push
push
cltd
cmp
mov
pop
popf
clc
fldenv
mov
inc
daa
insl
shlb
test
adc
lock
pop
adc
dec
push
sub
loopne
pushf
aaa
pop
or
adc
inc
loope
popf
fiaddl
sub
std
repz
pop
rep
outsb
ds
icebp
rorb
or
pop
sti
adc
adc
das
fstps
add
mov
lret
in
xchg
aad
sub
xlat
push
daa
jae
or
shlb
adc
or
pop
and
cmpsl
add
sarb
xchg
fcomps
popf
rcll
pop
dec
in
aas
sub
jo
pop
arpl
dec
add
jle
cli
sub
int
inc
jb
sbb
fsubl
repz
divb
clc
cmpl
or
inc
xor
fcomps
push
sahf
popa
and
in
daa
push
out
jge
dec
bound
in
jb
pop
mov
loopne
jne
fxtract
ret
ret
sub
test
call
dec
lods
sbb
les
jae
and
mov
cltd
lods
ja
push
ds
arpl
dec
pop
ja
push
popf
rclb
aas
test
sbb
fs
push
dec
sub
movb
dec
lds
xchg
mov
pop
test
pop
inc
mov
cmpsl
lret
mov
xchg
push
or
dec
add
shld
lock
mov
mov
in
adcb
call
es
push
or
xor
andb
mov
cmp
push
jb
or
sbbb
push
or
push
cmp
dec
repz
and
and
push
adc
mov
mov
or
movsb
ret
sub
mov
bound
adc
push
test
or
ja
lcall
xchg
iret
cmpsb
add
pop
sbb
imul
fimull
lods
mov
push
jmp
add
xchg
add
dec
jmp
les
cmp
mov
xchg
pop
mov
jo
iret
adc
sbb
out
out
pushf
jge
lods
mov
clc
ds
lock
lock
mov
mov
cmp
popf
ds
mov
fistl
aam
mov
test
out
mov
push
xlat
out
add
pop
push
stos
dec
movsb
mov
rclb
in
shlb
cld
lret
pop
ljmp
adc
popf
jp
repz
sbb
sub
push
adc
fmull
pop
dec
sbb
adc
fs
dec
xchg
mov
push
pop
out
pop
lahf
jg
gs
and
loop
ss
sbb
mov
or
adc
ret
sbb
inc
flds
xchg
mov
gs
mov
jne
push
out
jb
ret
dec
mov
rcrl
subb
jp
bound
mov
jl
adc
mov
loop
and
lods
or
sbb
mov
mov
push
pop
adc
and
subl
dec
and
cmp
enter
out
xor
add
out
ss
inc
xchg
cld
dec
or
dec
popa
aas
push
jbe
mov
loope
pop
mov
cmp
sbb
add
jae
outsb
xor
incb
and
or
mov
xor
jmp
rol
xchg
add
sub
or
sub
clc
jno
cli
fstp
dec
insb
xchg
lods
inc
push
cltd
out
jmp
dec
and
fnstsw
push
adc
xor
ret
outsb
inc
push
sub
mov
and
lret
test
fidivrl
adc
daa
gs
ljmp
push
xor
movsl
mov
mov
sahf
movsl
jnp
arpl
in
sub
js
sbb
sbb
ja
add
js
into
mov
inc
mov
sbb
dec
adc
arpl
pop
push
stos
adc
aaa
repz
in
mov
jnp
icebp
aaa
stos
addr16
xlat
fs
mov
pop
mov
in
xor
add
mov
pop
adc
aaa
out
mov
insb
fistpl
arpl
dec
fistl
push
fldcw
mov
mov
adc
dec
and
mov
lea
adc
cli
pop
in
mov
repnz
jo
adc
pop
in
loope
enter
cltd
mov
and
inc
xchg
lock
repz
or
je
dec
test
push
outsb
sbb
xor
mov
push
icebp
out
lcall
dec
adc
push
ficompl
jns
aaa
adc
cltd
out
fucomip
repz
mov
jecxz
sbb
dec
and
movsb
shr
xchg
mov
sub
xchg
test
repz
dec
in
das
pop
xchg
pop
popl
push
scas
sbb
push
popf
add
lock
mov
mov
test
fs
push
add
inc
push
fldcw
mov
dec
or
aam
inc
cltd
shl
pusha
test
lret
aad
setg
adc
test
outsl
jge
adc
push
xor
lret
add
test
cmp
imul
sbb
rcrb
xchg
shrl
sbb
jg
mov
inc
push
clc
pop
aas
and
bound
call
inc
xchg
sub
xchg
aad
sbb
sub
es
imul
lret
push
nopl
mov
pop
aad
add
in
mov
push
fildl
pop
pop
xchg
inc
sbb
negl
dec
sub
mov
es
push
add
sbb
jg
add
xchg
add
js
out
dec
mov
push
rclb
inc
jo
adc
movsb
test
pop
test
js
inc
call
push
xor
addl
sahf
cmp
mov
inc
loop
or
mov
lcall
jne
repnz
js
pop
mov
in
nop
aaa
inc
std
jg
lret
mov
icebp
imul
adc
hlt
cld
push
nop
rorl
mov
sub
nop
sbb
mov
push
cmp
adc
les
daa
ficoml
xchg
mov
cmp
data16
fisubs
ds
pushf
inc
in
ret
xlat
xchg
or
push
stos
ret
outsl
idivb
ss
out
adc
pop
add
int
imul
insb
cmpsb
adc
or
xor
push
fistpll
daa
mulb
jne
testb
mov
icebp
das
mov
int3
pop
add
lret
cmp
xor
sub
mov
inc
ja
add
jnp
les
inc
sti
xchg
mov
adc
or
jg
stos
dec
pop
insl
pop
adcl
ficomps
gs
fwait
pop
inc
or
repz
pop
inc
ficomps
jbe
dec
or
jbe
or
outsb
repnz
jae
test
xlat
sbb
mov
iret
add
ja
adc
mov
sub
jb
ret
mov
insb
mov
in
iret
pusha
aad
and
sbb
pop
cs
mov
mov
jae
jb
push
fs
sub
push
push
ss
into
sbb
adc
push
clc
sbb
jo
test
and
stc
fistpl
mov
rcrl
das
adc
jg
cld
cmpl
mov
in
loope
ret
xor
lahf
jo
mov
fdivrp
push
sbb
inc
and
jle
pop
jo
data16
sbb
hlt
icebp
adcb
lcall
xchg
dec
mov
mov
faddp
xchg
fwait
insl
dec
jne
and
out
fbstp
jo
jmp
xchg
popf
and
jae
in
sahf
sub
push
push
les
test
ljmp
pop
xchg
filds
jb
xorb
xchg
pushf
mov
and
stc
sbb
mov
jae
imul
sub
daa
or
loopne
subl
aas
divb
pushf
rcll
jno
scas
pop
add
push
and
cmp
mov
aad
pop
rcrb
stos
pop
mov
jmp
mov
int
stc
call
or
xor
addl
pop
repz
aas
std
mov
bound
mov
pop
xchg
lods
xchg
adc
fidivs
jge
push
xor
icebp
scas
push
cmc
test
dec
stos
add
push
push
test
cmpsl
push
lods
mov
sub
movsl
jb
sarl
js
and
pushf
ret
cmp
ds
out
scas
inc
cltd
cmp
icebp
add
popf
xchg
cmp
imul
adc
add
pop
xor
enter
shll
in
sbb
xor
gs
pop
xchg
call
sub
dec
mov
insl
inc
fistpll
ja
test
mov
xlat
pop
out
lods
dec
scas
std
push
or
stos
pushf
jne
jne
dec
ljmp
push
xlat
fcomip
mov
cli
dec
lret
adcl
cmp
clc
jg
sti
das
cmp
mov
iret
adc
hlt
shrb
or
jl
sub
mov
or
xor
popf
rclb
xchg
jl
pop
decl
xchg
xchg
adc
sahf
sbb
jb
cmpsl
lcall
xor
aas
inc
gs
xchg
push
mov
nop
push
jp
dec
xor
arpl
clc
mov
mov
push
arpl
popa
sub
enter
and
sbb
fprem
pop
jmp
aas
mov
pop
movsb
mov
popa
dec
cmc
add
fsin
xor
xor
data16
push
sti
je
xorl
sbb
dec
push
fcoms
leave
addr16
cs
enter
loop
push
add
sub
mov
cmc
gs
xchg
outsb
stos
das
push
lret
aaa
adc
xchg
mov
mov
sub
je
adc
mov
lock
sbb
mov
arpl
orb
push
push
push
pop
aam
xor
in
jne
or
out
push
popf
movsl
rolb
neg
push
imul
jmp
mov
inc
fcos
sbb
mov
jns
push
ja
or
cs
cltd
divb
test
sub
jecxz
or
jl
mov
sub
stos
jns
mov
push
aaa
cmc
pushf
dec
sbb
les
insl
mov
ret
push
add
sbb
inc
or
jns
jbe
sub
or
data16
pusha
in
xor
inc
mov
pop
mov
lds
push
pop
lret
or
mov
and
xor
and
fidivrs
add
adcl
xchg
push
mov
pop
int
fiadds
sbb
push
push
cmpsl
divl
movsb
mov
add
jmp
and
dec
out
mov
enter
jae
xchg
add
dec
lret
test
cmp
mov
sub
mov
jg
lods
out
adc
bound
inc
cld
and
xor
orl
stos
cmc
push
push
movsb
fcompl
stos
cmpsb
mov
dec
mov
dec
cmp
mov
inc
or
fldt
mov
adc
xor
jge
fucomip
mov
dec
and
ljmp
fdivl
and
push
into
pop
adc
xor
int3
add
xchg
mov
popf
cmp
mov
xor
int3
lcallw
js
sbb
push
mov
push
and
scas
in
mov
icebp
lret
push
inc
xchg
in
jmp
cmpsb
fsubrl
push
jg
mov
outsl
push
jp
mov
sbb
movsb
or
push
jle
ds
add
dec
int3
mov
xor
pop
fstl
add
mov
adc
dec
xor
mov
mov
xchg
enter
xchg
outsb
jbe
pushf
dec
shlb
rol
push
andb
flds
mov
es
xor
call
xchg
add
jno
fdivl
add
pop
jle
xor
push
leave
xchg
and
imul
iret
sbb
xlat
pop
inc
adc
pcmpeqd
push
clc
lods
stos
loopne
push
push
cld
dec
sbbb
flds
ficomps
pop
sub
push
jns
cmp
inc
add
xor
mov
int3
repnz
roll
ret
jae
fisubs
push
in
and
xor
dec
insb
jl
ja
shrl
enter
adc
mov
shll
xchg
sbb
adc
daa
jns
xor
add
enter
mov
pop
movsb
loopnew
mov
sbb
sbb
lock
adc
jmp
jge
in
arpl
repnz
test
ret
outsl
adc
arpl
jo
mov
pop
or
xchg
fdivl
into
call
aaa
aas
outsb
mov
or
dec
icebp
test
int
adc
sub
cmc
lcall
rcl
sub
adc
jg
mov
lods
mov
adc
ret
cmc
js
data16
out
sub
xorb
ljmp
idivl
adc
js
out
imul
inc
pop
lods
xchg
lods
mov
mov
sbbl
scas
or
movl
xor
popf
adc
jbe
xchg
imul
mov
xor
push
fisttpll
dec
arpl
adc
out
out
imul
aas
sub
aaa
fwait
pushf
sub
icebp
jns
xor
mov
inc
push
xlat
push
les
cmp
mov
cmp
jg
hlt
aaa
and
push
pause
dec
sub
mov
das
negb
push
outsl
out
pop
add
ret
mov
sbb
cmpsb
sub
sub
sub
scas
xchg
mov
les
mov
mulb
mov
sub
fcomps
clc
jge
push
aaa
dec
lcall
or
aaa
add
jo
inc
push
inc
adc
dec
jp
mov
orl
push
sub
xchg
addr16
inc
pop
shll
lahf
loope
inc
dec
sbb
xchg
add
jnp
jne,pt
clc
mov
lea
push
sahf
aam
mov
int3
mov
loope
mov
pushf
js
jge
aaa
jle
cmp
pop
sub
push
out
je
push
pop
ret
rcrb
mov
mov
add
xchg
sbb
fadd
pushf
js
hlt
nopl
je
dec
sbb
sbb
mov
jmp
sbb
jnp
sub
nop
repz
lods
mov
xor
out
xchg
je
aaa
mov
out
lods
aas
hlt
push
sbb
movsb
lcall
in
mov
das
leave
xchg
in
in
and
or
je
stos
in
js
jb
mov
enter
sbb
movsb
mov
or
lods
shrl
mov
add
cmc
xorl
jl
mov
in
call
jo
hlt
pop
cmpsb
push
inc
xchg
shll
sub
dec
mov
pushf
add
cmpsb
jl
leave
inc
aad
fmuls
adc
xlat
dec
mov
lock
in
lock
jb
adc
adc
mov
inc
sbb
mov
mov
or
testl
daa
cli
pushf
adc
fldcw
aad
dec
push
inc
stos
sbb
outsl
icebp
jp
pop
inc
shl
loope
int3
repnz
aad
xor
or
dec
call
mov
pushf
xor
out
jo
push
pop
subl
and
adc
inc
adc
jle
xchg
lods
loopne
cmp
adc
les
out
loop
roll
test
pop
push
insb
mov
push
adc
pop
adc
inc
jbe
js
mov
fwait
dec
cmp
in
sbb
js
mov
inc
loopne
mov
gs
arpl
push
pop
cmp
inc
movsl
jp
shl
popa
inc
adc
or
iret
ret
mov
out
inc
shrb
scas
xchg
mov
jg
lret
xlat
sbb
pmulhw
jg
ffreep
push
shrb
je
aaa
inc
and
mov
out
ss
loope
cmpsl
pop
bndstx
xor
xlat
or
lahf
pop
sarb
add
add
popf
sbb
call
jge
icebp
or
xchg
mov
repz
ret
aaa
sbb
adc
sbb
push
test
or
inc
mov
sbb
incl
out
adc
push
add
mov
xor
into
xchg
out
ja
test
daa
cmc
mov
fisubrl
stc
lea
outsb
ss
mov
orb
mov
je
movsb
xchg
mov
xor
xchg
push
inc
push
lods
mov
adc
aas
cltd
xchg
int
incl
cmp
pop
mov
mulb
ficoms
adc
jbe
loopne
ret
enter
inc
or
or
sbb
jns
jb
scas
xchg
fstpt
and
int3
xor
xchg
and
inc
xchg
clc
and
out
mov
jecxz
into
jo
push
fwait
ja
sub
adc
in
dec
fcomi
shl
imul
test
negb
jnp
push
mov
addr16
loopne
xor
cmp
adc
fadd
popa
and
adc
call
loope
cmpsb
stos
xchg
mov
or
cwtl
xchg
ficoml
xor
cmc
ds
xor
gs
bound
dec
fldenv
lahf
ja
aam
cli
clc
push
andl
insb
mov
in
test
mov
jb
mov
jo
repz
lea
push
ficomps
inc
and
cmc
les
mov
lods
cmp
dec
dec
mov
stos
test
imul
sti
adc
adc
movb
jns
dec
cmpb
push
or
insl
push
fcmovne
es
pop
ja
fs
idiv
popf
mov
adc
ss
sub
mov
lods
adc
stc
lahf
adc
xor
enter
loopew
cmp
mov
sub
aaa
stos
cld
mov
dec
subb
jb
jmp
pop
mov
inc
jle
fdivs
mov
mov
ret
int3
pop
mov
sub
sub
cmp
jne
sub
jo
ret
aam
mov
sub
sarb
sub
sbb
inc
cmp
pop
daa
ret
cmp
pop
lret
movsb
lock
imul
aaa
jg
movsl
popa
mov
sbb
out
jge
sub
int3
stos
pop
nopl
sbb
push
xchg
cmp
mov
cmp
out
test
mov
jne
mov
xor
icebp
dec
sbb
and
cmp
mov
fadd
repz
push
adc
nop
outsb
lock
das
jmp
lods
sub
sub
jno
mov
stos
lods
and
pop
sbb
and
jg
and
bswap
insb
jno
or
in
jns
leave
sbb
dec
pop
cs
repz
jno
adc
pop
hlt
cltd
outsl
inc
enter
test
sbb
dec
jno
stc
lods
ss
xor
jbe
ja
jbe
ret
pop
jae
das
cwtl
mov
xor
movsb
hlt
push
mov
jle
cmp
leave
mov
mov
xchg
inc
test
cmp
divl
jge
or
pop
jl
push
inc
jp
xchg
pop
xchg
sbb
mov
ja
mull
popf
pop
xlat
scas
push
lock
vcvtsi2ss
push
insb
repz
cmpsb
addr16
out
repnz
hlt
pop
mov
popa
mov
in
adc
aam
push
inc
mov
xchg
jo
sbb
loope
add
daa
bndldx
sbb
jmp
popa
test
push
dec
mov
sub
pop
fisubl
mov
loop
jp
in
jae
sbb
cmpsb
cmp
dec
arpl
adc
stc
jae
push
inc
cmp
movsb
adc
je
test
mov
aam
cmp
addr16
pop
in
push
popf
cld
jbe
cmc
add
pop
jle
stos
dec
out
cs
push
pop
cmp
stos
mov
mov
pop
push
rolb
dec
jle
test
repz
mov
xor
div
nop
lods
in
xchg
mov
and
sub
adcl
adc
es
clc
loop
push
stos
cmp
add
out
push
push
adc
jae
add
pop
iret
mov
mov
mov
mov
popf
lods
movsl
sub
cmc
pop
push
mov
in
int
add
and
cwtl
add
mov
push
adc
ret
nop
push
mov
jp
xor
jb
das
sbb
rol
pop
adc
sub
sub
out
push
pusha
jp
inc
in
fcomps
fmull
ja
enter
mov
shrl
arpl
mov
in
mov
aam
adc
ljmp
pushf
mov
jl
dec
pop
aas
sub
jne
push
scas
cwtl
adc
xor
and
cmp
xchg
in
lods
push
cmp
pop
xchg
fwait
push
rclb
xor
inc
push
push
gs
fsub
jno
mov
xchg
popf
int3
lret
aas
jge
xor
daa
mov
loopne
pusha
pop
cltd
cs
dec
xchg
lock
ret
add
or
push
je
cltd
jae,pt
push
loope
arpl
leave
mov
dec
push
cli
into
in
sti
movsb
add
add
jg
addr16
hlt
subb
out
lahf
pop
or
adc
adc
jae
sub
jle
fimuls
pop
inc
mov
fcmovnb
ds
or
inc
mov
cmp
sub
outsb
ss
stc
fists
xor
lret
mov
pushf
adc
dec
or
xchg
pop
dec
outsl
xorl
push
lods
sbb
xor
fisubrl
adc
and
nop
dec
cmpsb
pop
int
sbb
fs
inc
pop
dec
and
push
insb
ljmp
outsb
in
test
in
or
push
sub
dec
iret
outsl
cmp
or
sub
leave
lea
bnd
fcomps
iret
imul
inc
pop
jb
out
pushf
xor
dec
shlb
mov
adc
por
inc
imul
sbb
or
jo
push
imul
mov
into
loope
sti
xor
and
mov
daa
push
sub
test
lock
push
jbe
pop
outsb
cmc
and
and
inc
bound
test
pop
add
mov
adc
push
xor
and
jmp
xor
jl
inc
es
push
imul
in
and
fisttpl
xchg
xchg
and
daa
jge
jno
adc
call
mov
ja
xchg
xchg
pop
out
adc
fldl
mov
jne
mov
fwait
sbb
mov
sub
pop
xchg
mov
adc
inc
sub
cmp
cmp
pop
push
loopne
call
lret
adc
and
popa
mov
pop
mov
push
jne
int3
dec
lock
dec
jge
push
mov
lret
fwait
outsl
mov
or
xchg
faddl
sti
adc
adc
rcll
dec
out
cmpl
push
inc
push
aam
and
inc
mov
stos
xchg
pop
jmp
cld
aad
mov
cwtl
add
ss
jle
stos
cmp
popf
push
or
xchg
push
pop
pop
lret
cmpb
shl
sbb
or
rcrb
sbb
sti
push
xchg
push
insb
cld
lcall
cmp
push
sti
dec
or
fldenv
icebp
adcb
mov
icebp
adc
in
mov
cmp
adc
inc
ret
es
fs
mov
aam
xlat
add
cmp
xchg
mov
push
fimuls
pop
das
imul
lahf
inc
push
xor
sub
jp
push
ficomps
vmread
das
jle
and
shll
sbb
outsb
pop
popa
leave
rolb
add
or
cmp
sbb
and
fwait
sub
mov
sti
sbb
jmp
cmovs
mov
aas
inc
sbb
rol
hlt
clc
insb
mov
xlat
sbb
jl
jae
test
inc
in
push
imul
inc
xchg
les
xor
push
pop
dec
lahf
cwtl
mov
in
push
inc
roll
movsl
push
dec
sbb
jl
and
shlb
mov
mov
adc
adc
mov
jno
jg
repz
fwait
push
lock
sub
add
cmc
and
popf
mov
push
sub
lock
pop
and
pop
add
and
lret
pop
or
or
fisubrl
adc
mov
aam
or
incl
repz
je
and
jp
push
mov
arpl
sub
adc
stos
cmp
add
push
pop
push
add
cltd
fidivs
adc
fadds
jne
lcall
outsb
enter
fs
fs
fiadds
lcall
movsb
sub
repnz
jno
adcl
addr16
and
adc
xchg
fcoms
pop
das
adcb
push
dec
je
mov
sub
pop
rclb
loop
dec
ds
mov
xor
mov
fwait
inc
mov
ret
and
jmp
add
in
push
add
xor
or
daa
cmp
xchg
dec
mov
int
ret
jl
push
sbbl
push
call
push
repnz
rcll
sub
pop
xchg
outsl
repz
push
setp
adc
pop
adc
dec
fldt
or
movq
inc
and
scas
jno
push
daa
test
aam
jns
ja
call
sub
popa
sbb
inc
jns
inc
das
andb
orb
inc
fiadds
xchg
sub
and
or
xchg
sahf
lret
add
dec
adc
pop
mov
ljmp
movsl
adc
enter
adc
mov
jmp
sub
addr16
inc
mov
jmp
push
dec
scas
inc
movsl
sub
mov
jl
pop
loop
fidivs
jle
xor
lcall
test
inc
in
cld
test
mov
jl
test
out
pop
mov
cmp
jae
cli
ss
fstl
les
xor
pop
cmc
cwtl
and
push
pushf
mov
and
pop
fists
inc
mov
lea
ljmp
mov
adc
jns
test
sub
and
in
mov
dec
mov
sti
aaa
add
scas
mov
add
lea
iret
inc
or
cmp
gs
mov
or
push
or
xchg
jg
fcmovb
adc
addr16
out
fidivl
inc
aas
xor
out
fcompl
ret
sub
jns
adc
sbb
dec
cld
pop
xchg
mulb
mov
jecxz,pn
jae
jl
arpl
dec
push
cmpsb
adc
dec
add
pushl
imul
mov
sub
or
add
adc
pop
loop
push
test
mov
arpl
mov
rcll
mov
fwait
das
js
dec
outsl
push
flds
aad
dec
lods
ficomps
out
xchg
xor
cmpsb
push
lds
xchg
mov
cmp
rorl
cmpsl
aam
cli
pop
mov
ds
test
sbb
push
mov
ret
mov
xor
mov
imul
loope
pop
lods
pop
stos
pop
xor
xchg
cmp
orl
xchg
mov
sar
call
add
xchg
push
test
xor
mov
dec
push
dec
lods
sub
inc
dec
das
xchg
cmp
add
call
mov
or
mov
and
into
bswap
sub
mov
rcrl
in
fldcw
pop
mov
mov
jnp
jbe
pop
in
inc
pop
jbe
lret
mov
stc
add
xchg
cmp
cltd
test
adc
sbb
repz
inc
jns
sbb
ss
inc
jno
adc
lcall
fstp
mov
popf
sbbl
mov
push
mov
ds
sub
gs
aaa
rcll
jmp
xchg
call
lret
pop
jo
sub
inc
or
mov
push
add
rorb
je
imul
std
pop
aam
es
in
add
cmpb
stos
jmp
pop
dec
mov
mov
jo
or
pop
add
sbb
scas
imul
test
sbb
bound
mov
pop
pushf
and
mov
mov
repz
xchg
lods
add
fmull
lea
xor
pop
cmpsb
mov
push
lahf
sub
adc
sub
sbb
and
aam
jbe
mov
das
push
insb
movsb
ds
loop
mov
int3
mov
imul
daa
sub
cltd
xor
cmp
fs
lods
jns
repz
data16
mov
jmp
cmp
dec
xchg
pop
in
mov
pop
lret
fsubrs
inc
push
pop
arpl
cmp
in
mov
insb
cmpsb
push
mov
cmp
adc
sub
shll
push
xorl
cmp
sbbl
or
jne
call
les
js
xor
xor
into
inc
outsl
adc
xchg
mov
sbb
jl
cmp
aad
shl
xorl
mov
enter
lret
mov
inc
fisttpll
pop
cmp
outsl
cltd
mov
or
xchg
ror
or
push
adc
and
and
in
int
jne
outsl
cmp
mov
sbb
test
or
add
ret
test
andl
and
mov
and
ret
orl
ret
cmpb
sbb
js
insl
push
or
jnp
sub
jl
jne
and
cwtl
scas
add
adc
push
mov
ljmp
sub
mov
pop
or
das
sarb
fsubl
push
sbb
add
jb
inc
xchg
mov
je
adc
dec
and
fists
adc
imull
mov
add
push
mov
jbe
push
xor
or
jle
outsl
push
mov
movd
bnd
rcll
inc
sbb
mov
sub
mov
xor
adc
in
push
adc
inc
subl
and
mov
pushl
push
push
and
inc
jb
test
cmc
sub
js
xchg
sub
mov
cltd
lahf
push
adcl
jl
pop
stos
jns
clc
fildl
repz
pop
or
xchg
movsb
push
jo
imul
add
xchg
sub
and
push
and
cltd
xorb
inc
outsl
jns
xchg
jg
xchg
adc
ljmp
sbb
add
adc
je
xchg
call
jnp
loopne
aad
push
fsubs
pop
dec
jp
add
repz
in
imul
dec
cmp
push
sbb
je
jne
jo
ss
pop
push
xchg
push
cmp
push
mov
lahf
lret
adc
sbbb
pop
xchg
je
inc
xor
std
push
inc
adc
outsb
cmpsb
cld
adc
mov
xchg
jo
out
cltd
add
aaa
inc
dec
dec
aas
mov
mov
adc
stc
adc
addl
inc
dec
sub
rcrb
dec
cld
add
push
dec
popf
push
je
adc
test
mov
mov
test
lret
mov
scas
in
adc
arpl
mov
pop
jle
cmp
mov
mov
jb
pop
lea
out
xor
ds
mov
or
lret
pop
sub
add
sbb
push
cmp
rcrl
mov
std
cwtl
lods
push
lahf
mov
cmp
ret
lret
rcll
and
add
cli
cmp
jp
cmp
adc
fdivrl
pop
push
jae
les
pop
pop
into
iret
popf
jo
icebp
push
fwait
mov
xchg
jecxz
mov
pop
cmpsb
cmp
nop
pop
arpl
and
fsubrl
lret
int
add
daa
add
orb
fbstp
ret
pop
mov
imul
mov
dec
je
jns
jb
sbb
adc
mov
cwtl
fs
scas
leave
pop
mov
push
pop
mov
jns
cmp
cmp
add
fstpl
push
test
outsl
aam
mov
push
das
arpl
inc
call
into
and
enter
push
lods
scas
cld
xchg
dec
sahf
faddp
jmp
std
daa
cmp
jmp
mov
push
lea
loop
rclb
imul
or
sti
jmp
test
inc
lret
sbb
jb
sub
ret
stc
push
jb
cmc
pop
jnp
lea
or
dec
add
add
and
mov
mov
add
mov
pop
adc
jne
jle
cld
fs
mov
xchg
push
hlt
dec
dec
sbb
inc
popf
push
fs
inc
mov
cld
sti
ljmp
inc
adc
lods
jnp
push
jmp
dec
lods
adc
mov
pop
popa
jl
mov
dec
inc
mov
or
add
sub
jle
pop
or
loope
pop
les
add
movsb
sbb
in
fstp
pop
add
leave
push
fsubrl
and
cltd
enter
jnp
lcall
xchg
int
push
adc
jle
mov
jns
ret
mov
jp
cmc
cld
push
ret
and
pop
jb
gs
add
lock
cmp
mov
pop
xchg
in
call
shll
pop
sub
mov
cltd
jl
lds
std
hlt
gs
cmp
mov
cmpsl
inc
sub
pop
push
sbb
mov
and
mov
pushf
es
sbb
jbe
inc
sbb
mov
cld
sub
sub
in
in
ja
aam
cmp
xlat
adc
xor
clc
mov
mov
sub
stc
mov
aas
sti
sbb
daa
in
or
gs
cmp
and
mov
and
imul
outsl
fstpt
in
imul
or
mov
orl
add
xchg
sbb
movsl
in
in
mov
lds
sbb
sbbb
test
add
repz
or
daa
push
fbstp
push
mov
out
dec
stos
push
jg
imul
popf
imul
lods
mov
dec
arpl
es
pusha
ss
addr16
subb
pop
icebp
iret
lea
fwait
mov
jp
stc
mov
and
cmp
sub
adc
mov
inc
mov
pop
addr16
sub
in
mov
xchg
fprem
mov
loopne
xchg
xchg
popa
cmp
subb
xchg
gs
mov
add
cmp
leave
dec
clc
and
test
mov
and
aad
in
and
mov
fidivrs
clc
inc
insb
inc
iret
sub
adc
and
sbb
cmp
or
addr16
jno
hlt
xor
cmp
dec
scas
sub
sub
or
pop
js
cmpsb
fs
jecxz
int3
cmp
jae
testl
int
lahf
mov
cwtl
add
notl
fmuls
jbe
iret
xor
mov
fstps
lds
lock
and
in
pop
push
mov
pop
out
or
int3
add
xor
movsb
mov
fistpll
test
jns
cmp
out
cwtl
test
fcoml
sub
cmp
and
sbb
sbb
mov
jns
push
push
cmpsb
pop
inc
mov
mov
cmp
daa
negb
mov
xor
rorl
das
mov
xor
fiaddl
xor
clc
xchg
cmp
or
test
mov
sbb
fldenv
sub
cmp
mov
sub
orl
jmp
gs
jbe
sarl
jno
mov
xchg
and
dec
mov
dec
add
lds
movsb
adc
push
cmc
fs
inc
jo
aaa
loop
dec
out
call
test
xchg
icebp
icebp
cmp
mov
enter
xlat
std
xor
mov
mov
inc
cld
cmp
jo
ds
adc
popf
push
bound
inc
or
mov
cmp
inc
pop
imull
mov
ja
lret
adc
lods
adc
cmp
xchg
outsl
in
andb
add
jno
lods
movsl
or
pop
push
jge
dec
sbb
cld
dec
leave
scas
mov
aas
xchg
mov
mov
add
and
cltd
jb
jnp
ret
cmp
add
pop
inc
pop
js
pop
sbb
jmp
int3
cld
pop
and
and
int
pop
shll
mov
add
xchg
sub
push
push
mov
push
sub
dec
xchg
push
lods
add
ds
test
dec
mov
mov
pop
mov
loopne
in
mov
iret
dec
and
sub
mov
jle
je
jb
rolb
shl
daa
mov
dec
push
jg
mov
mov
repnz
push
push
jbe
sub
inc
lret
cmp
sahf
push
data16
outsb
mov
lcall
lods
adc
lds
jnp
adc
lret
jne
cmpsb
mov
jno
xlat
fs
xor
addr16
xorl
xor
idivb
push
or
fs
pop
xor
pop
mov
ret
out
imul
push
lock
inc
cmp
gs
repz
daa
imul
xchg
xchg
loope
push
mov
scas
test
outsl
mov
xchg
pop
int
pop
ja
rorl
out
div
gs
lea
out
push
push
in
adc
popf
ds
rcl
ja
mov
inc
out
mov
add
dec
sub
push
shlb
fildll
cmp
outsb
jne
jbe
stos
ret
mov
mov
and
outsb
dec
dec
mov
fs
lret
mov
mov
adc
mov
push
add
mov
int3
fwait
andb
pushf
testl
movsb
in
inc
popf
and
dec
or
cld
inc
sarb
stos
inc
nop
pop
and
jo
into
es
nop
not
or
aas
mov
sbb
lods
push
jb
or
add
dec
jmp
and
jne
push
inc
adc
dec
in
daa
fnstenv
add
pop
dec
pop
or
jg
push
mov
das
subl
adc
adc
pop
fs
mov
ror
cli
flds
push
roll
sbb
test
pop
lods
jnp
js
idivb
mov
inc
lods
lods
sbb
xchg
pop
bound
fdivl
or
xchg
aas
int3
pop
mov
scas
cmp
in
into
jbe
xor
ret
icebp
adc
inc
test
mov
push
cwtl
and
scas
inc
and
arpl
or
mov
jne
jge
pop
int3
movsb
cmc
cmpsb
push
adc
popf
jecxz
mov
push
dec
pop
pop
outsl
cwtl
out
mov
aas
mov
sbb
sub
dec
xchg
mov
inc
jnp
adc
dec
pop
test
fnsave
cmp
or
or
scas
adc
sbb
mov
dec
clc
mov
jmp
pop
sbb
dec
sub
nop
lahf
rcrb
mov
mov
mov
mov
inc
mov
shl
movsb
adc
std
inc
jge
ds
cmp
fnstcw
xlat
adc
mov
adc
sub
sub
cmp
std
fidivrl
cmp
mov
and
xor
add
pop
ret
pop
pop
sbbl
jnp
mov
add
ljmp
and
fcomps
mov
pusha
jmp
pop
mov
push
call
mov
out
cmp
int
dec
test
cmp
into
jne
dec
movsb
into
cwtl
jno
jmp
pop
loope
mov
outsl
push
jl
lds
adcb
and
xlat
mov
dec
rcll
hlt
and
and
jp
ds
mov
dec
repz
xor
ss
push
adc
or
mov
push
mov
mov
push
cmp
outsl
orb
cmp
in
es
mov
xchg
pop
adcb
mov
daa
adc
in
imul
inc
dec
sbb
insb
jno
sub
push
cli
mov
orb
leave
mov
dec
in
js
mov
ja
mov
leave
mov
cmp
adc
jecxz
mov
jecxz
sbbl
mov
adc
xor
mov
fwait
test
push
xor
and
loopne
push
insb
adc
jg
add
stos
or
arpl
repz
int3
sub
mov
xor
mov
pop
out
push
xchg
das
test
test
sbb
fbld
adc
sub
lret
notb
mov
xlat
mov
inc
add
jp
rorb
dec
push
mov
call
jno
mov
and
mov
insb
aad
xchg
lret
jmp
mov
cmpsb
fmul
fiaddl
inc
lods
sub
cltd
popf
or
aad
test
push
mov
push
mov
pop
daa
dec
sbb
push
stos
pop
adc
sub
lods
es
lea
ror
or
scas
xchg
cmp
or
add
pop
adc
mov
notb
sti
ffree
sub
mov
lcall
in
cltd
sub
das
nop
daa
ss
sub
loopne
push
cmpsl
popw
in
xchg
hlt
test
dec
inc
mulb
enter
loop
ret
cld
dec
das
arpl
push
pop
sub
mov
stos
aam
sub
add
inc
iret
aas
shrb
inc
dec
aaa
shll
cltd
test
popf
es
jb
fwait
dec
inc
stos
sarl
cltd
jge
jns
ds
sarb
sub
xlat
stc
push
arpl
jge
mov
call
add
out
jae
int3
sbb
xchg
stos
push
aas
loope
and
or
ss
clc
inc
icebp
cmp
mov
mov
pop
dec
adc
push
adc
icebp
adc
pop
push
repz
add
xchg
pop
pop
pop
mov
popf
adc
push
add
mov
outsb
shlb
xchg
mov
lcall
sub
mov
push
aaa
adc
addr16
pop
inc
mov
arpl
mov
imulb
dec
lahf
cmc
incl
movsl
add
std
lds
mov
inc
shl
or
add
outsl
sub
mov
jo
dec
and
push
les
shlb
ja
mov
sti
test
imul
pop
push
add
daa
int
fdivl
xlat
cld
adc
jmp
daa
jecxz
cmp
loop
cmp
adc
push
loopne
lcall
and
ss
idivb
jo
xor
sbb
pop
in
cs
and
arpl
cld
push
or
cmpsb
stc
lret
call
adc
test
pop
imul
imul
xor
pop
icebp
adc
shlb
pop
pop
loopnew
dec
dec
aam
sub
push
mov
sbb
and
movsl
daa
aaa
add
repnz
es
inc
fidivrs
sbb
aad
test
frstor
adc
inc
inc
fists
xchg
fnstenv
aas
aaa
fists
addr16
jg
mov
adc
pop
push
xlat
jbe
inc
cld
shr
arpl
shr
lds
mov
dec
shl
shr
jle
test
cmp
xchg
adc
imul
pop
hlt
popf
imul
leave
shlb
add
push
movsb
jg,pn
insb
and
sbb
inc
dec
scas
mov
mov
and
inc
lods
ret
adc
and
push
dec
stc
cli
loopne
rorl
jp
and
aam
in
test
cmc
shlb
addr16
aam
jno
jno
add
jmp
and
adc
push
inc
fistl
pop
test
lods
pusha
sub
fwait
mov
sbb
jo
add
mov
adc
jno
sbb
cld
call
jmp
dec
mov
pop
inc
sahf
int
inc
pop
and
test
dec
insl
add
mov
mov
mov
pop
test
push
jmp
imul
jp
xor
ret
shl
dec
repz
inc
sbb
push
addl
sbb
in
pusha
inc
mov
shrl
popa
adc
jae
int3
cmpsl
sti
xor
mov
push
f2xm1
push
mov
cmpb
cmpsb
push
inc
mov
inc
cli
mov
aad
lods
sbb
sbb
int
sbb
roll
jbe
stc
dec
and
and
lea
mov
inc
jbe
push
jno
aas
add
fcom
div
jno
push
xor
add
jne
pusha
and
jl
xchg
xor
ret
in
mov
test
test
stos
outsl
adc
jne
mov
or
or
push
shrb
aad
pop
sub
pop
and
test
js
addr16
lock
dec
mov
and
data16
sbb
dec
shr
cmp
out
mov
les
dec
orl
and
push
cmp
and
xchg
xchg
jmp
fcompl
sti
dec
mov
movsb
and
dec
pop
jne
xchg
aam
push
clc
mov
das
adc
lds
out
insl
mov
push
jmp
push
lcall
popf
jecxz
and
dec
or
in
dec
test
jp
jge
jne
xchg
movsl
shll
test
push
cltd
out
frstor
jge
push
xchg
nop
arpl
or
pop
sub
xchg
inc
clc
leave
addr16
insl
pushf
bound
iret
nop
call
nop
sbb
mov
mov
mov
dec
cltd
ljmp
lahf
or
in
dec
pop
add
push
dec
rolb
inc
loopne
xor
sarl
cmpsl
stc
mov
rorl
test
stos
and
bound
mov
ret
adc
mov
xchg
insb
adc
mov
imul
or
jae
lea
cmp
fcomp
xor
and
aas
sbbl
scas
sbb
jns
jg
dec
mov
add
outsl
movb
cmc
daa
and
cmp
out
jo
sbb
mov
jbe
idivb
lea
fadds
jp
xchg
push
sti
sub
iret
imul
mov
inc
xor
fwait
add
add
incl
subl
pop
push
mov
xchg
xchg
and
adc
add
in
sbb
aas
dec
cld
out
xchg
adc
dec
jecxz,pt
in
mov
shll
cwtl
stos
fdiv
xor
push
sbb
jp
jne
xchg
iret
jp
inc
push
mul
pop
jno
sub
ficoms
adc
mov
icebp
dec
andb
adc
inc
mov
cld
addr16
pop
or
popa
xor
mov
push
add
ret
loopne
jne
pop
pop
dec
stos
mov
add
xor
fcmovne
faddl
cmp
push
sahf
and
push
xor
lods
popa
popf
push
jnp
in
fisubl
adc
and
cmc
ss
insl
mov
sub
sbb
and
adc
sbb
add
push
stc
xchg
xchg
enter
hlt
and
test
add
jmp
mov
push
in
sbb
or
mov
add
mov
adc
cmpsl
mov
pop
dec
test
inc
lods
lds
and
lret
cld
jnp
pop
ret
push
aam
test
lods
mov
add
cwtl
push
lret
xor
mov
sbb
int3
xlat
movsl
out
fdivrs
cmpsl
push
lret
loop
repz
lock
push
add
jecxz
mov
in
or
cwtl
cld
jno
sbb
dec
mov
adc
mov
and
das
dec
loop
enter
pop
test
inc
and
jle
mov
cmp
scas
pop
push
imul
pop
cld
push
inc
mov
scas
cmp
loope
xchg
mov
fs
lock
adc
mov
iret
repz
inc
imul
les
divb
fnstenv
push
inc
jne
cld
insb
gs
je
pop
cmc
daa
frstor
mov
icebp
imul
sbb
hlt
out
fistl
loope
cmc
fcompl
shl
movsb
xchg
jno
xchg
enter
jle
xchg
out
inc
ds
jmp
pop
push
cmpsl
push
or
mov
insb
ljmp
sbb
lock
mov
std
xor
shr
addr16
outsb
xchg
sub
pop
movsb
or
gs
sub
scas
lods
lcall
enter
icebp
or
xchg
insb
push
pop
mov
neg
lea
cs
push
ret
cmp
or
inc
adc
jnp
push
sbb
adc
jle
bound
ret
mov
das
jp
popf
fnsave
int
push
pop
int3
in
ljmp
inc
les
jns
push
pop
mov
pop
dec
pop
push
dec
test
lock
add
or
mov
add
fsubp
repz
inc
dec
into
call
je
leave
cmp
adc
stc
subl
mov
shll
roll
cmc
and
mov
mov
and
lea
or
adc
sbb
xor
cmpl
daa
sbb
aam
sub
or
push
aaa
xchg
jg
adc
jecxz
add
push
push
in
cmpsb
pushf
or
fistpll
jne
or
cmp
lret
jae
fdivr
aaa
or
pop
dec
push
inc
decb
inc
pop
cmpsb
fisttpll
cs
mov
fdivrs
mov
stos
xor
xchg
push
pop
int
data16
dec
jle
jb
fdivrs
mov
lret
je
dec
pop
inc
mov
clc
mov
cld
lds
inc
cmpl
adc
out
and
popf
mov
inc
mov
push
xchg
test
or
test
inc
aam
add
sub
jns
sbb
in
test
test
xchg
xchg
stos
loope
hlt
fcomps
adc
outsl
notl
pop
scas
clc
fidivrl
lcall
loop
ret
in
addr16
mov
jp
cmp
xchg
in
fmulp
pop
int3
xrelease
stc
push
or
mov
out
out
dec
push
shrl
and
sti
fldl
stos
repz
ret
push
into
pop
mov
ja
ljmp
sub
rorl
push
mov
les
inc
xor
and
pusha
out
cmpsl
sbb
popf
aam
add
adcl
pusha
call
xchg
adc
push
push
inc
shrd
cmp
adcl
fsubr
verr
addr16
dec
jp
sub
xor
jecxz
xchg
push
xor
icebp
sbb
push
lcall
out
mov
pusha
mov
andb
rcll
mov
mov
or
sbb
stos
lods
fs
xchg
lcall
adc
lock
stc
in
rolb
xor
push
out
insl
sahf
pop
lahf
jb
mov
pop
adc
xlat
xor
jecxz
ficoml
mov
or
mov
ret
adc
out
ret
dec
hlt
mov
xchg
ret
rorl
adc
sbb
cmpsb
mov
nop
pop
daa
inc
gs
data16
imul
xor
xchg
adc
xchg
arpl
pop
andl
xor
popf
shlb
dec
sti
je
jb
mov
arpl
loop
fadds
adc
jo
jae
cmp
stc
shll
mov
imul
aaa
sbbb
mov
notl
add
mov
pavgb
jecxz
adc
xchg
fists
push
mov
lret
in
jno
push
jae
out
dec
leave
shll
les
push
loop
adc
cmpsb
popa
pop
xchg
jae
fisubs
add
and
mov
add
aam
xor
inc
and
fs
stos
jp
pop
jp
loop
adc
cmpl
in
imul
mov
aas
mov
jo
jbe
or
out
rorb
aas
push
loop
std
xchg
test
xor
sarb
pop
add
lods
push
lods
mov
out
sahf
loopne
fimuls
push
lds
push
rclb
insb
outsb
jbe
je
xor
clc
fsubs
sbb
sahf
lahf
mov
mov
jae
sbb
movb
inc
in
fwait
mov
in
push
and
push
hlt
stos
pop
popf
sub
mov
add
jno
fs
sub
jge
pop
xor
mov
mov
std
ret
inc
and
lock
push
cmpsb
bound
mov
stos
pop
enter
jg
jecxz
push
popa
dec
shlb
xor
je
ja
add
cld
cld
scas
nop
test
jae
xchg
out
cs
out
push
imul
shrl
xchg
pop
push
popa
push
xchg
push
and
jb
mov
lock
pop
arpl
popf
and
xchg
or
in
out
rolb
arpl
and
adc
xchg
das
xchg
mov
xchg
jge
dec
mov
imul
dec
jbe
mov
dec
xchg
rorb
in
inc
les
stos
fwait
dec
xchg
popl
lods
outsl
ljmp
dec
mov
out
aam
lret
inc
scas
adc
test
jae
jl
filds
scas
mov
cmp
pop
xchg
push
lods
outsl
insb
xor
mov
pop
stc
sbb
dec
adc
dec
das
aas
addr16
sub
xchg
test
jp
cmp
lahf
push
jne
loop
mov
leave
insb
in
sub
mov
cmpsb
call
movsb
pop
repz
jmp
outsl
mov
sbbl
hlt
push
sub
mov
push
seto
push
adc
add
cpuid
dec
add
stos
push
hlt
jno
cmpsl
xor
punpcklbw
stc
adc
cmp
jg
int
das
xchg
pop
test
inc
int
and
and
sbb
xchg
push
loopne
sub
out
dec
ficoms
mov
lods
and
ret
inc
sbb
clc
out
xor
repz
xchg
ret
push
sub
xchg
cmp
jo
push
aas
dec
bound
dec
sub
xor
pushf
notb
push
pop
mov
xchg
xchg
lcall
push
adc
jge
stos
fsubrl
repnz
and
fwait
and
lahf
push
jns
mov
bnd
in
pop
or
ret
adc
pop
inc
lds
add
call
imul
adc
mov
adc
in
ficoms
adc
enter
rorb
jl
xchg
das
cmp
adc
push
inc
jl
mov
push
and
adc
in
or
lods
mov
mov
mov
inc
add
jne
data16
int3
xchg
and
xor
adc
das
in
stos
mov
xor
sub
pushf
lahf
rorl
mov
pop
cmp
fwait
andl
imul
adcl
adc
jp
mov
sbb
ret
out
movhps
bound
dec
push
ret
pop
push
jge
push
nop
xchg
cmpsb
lret
cmp
nop
repz
and
dec
inc
fdivp
gs
cltd
stos
or
sbb
fsts
mov
inc
test
sub
sbb
mov
addr16
popf
bound
call
lea
nop
iret
and
xlat
imul
outsl
int3
cmp
ret
test
adc
and
ss
pop
mov
subl
loopne
mov
xchg
aam
stos
aaa
nop
lcall
icebp
sbb
std
dec
cmp
in
lret
sti
cmp
mov
and
push
test
imulb
jle
lods
lcall
jb
bound
sub
or
aad
iret
or
outsl
out
not
add
inc
test
mov
push
dec
xor
mov
je
leave
jg
arpl
sub
xor
xor
jecxz
aaa
cmc
mov
xor
negb
ret
repnz
icebp
pop
dec
xor
push
jae
in
fstpt
pushf
mov
inc
ja
mov
mov
sub
js
fnstenv
mov
es
ror
clc
mov
andl
mov
iret
push
push
and
shll
std
fwait
lahf
push
sbb
lcall
daa
cli
jb
in
dec
xchg
fsub
popa
bound
mov
mov
fxch
adc
dec
dec
call
test
mov
pop
xor
jno
adc
fdiv
mov
add
cs
int3
jge
xchg
jp
pop
loope
push
fcoms
push
pop
dec
daa
icebp
pop
mov
sbbb
ret
and
frstor
sbb
add
jae
fiaddl
sbb
rcrl
test
adc
fisttpll
xchg
jl
jae
cmp
mov
ljmp
outsb
and
fs
lods
adc
mov
gs
xlat
add
in
xchg
lcall
inc
push
pop
popf
loope
or
movsl
or
dec
in
das
enter
push
and
xchg
imul
fcomi
test
add
pop
pop
and
dec
int
push
jl
pop
pop
dec
sub
les
test
push
daa
in
cmp
xor
push
out
xchg
lcall
pop
dec
gs
jo
sbb
lock
sub
mov
cltd
pop
jns
inc
or
mov
cmpxchg
xchg
sti
repnz
iret
rcll
jmp
add
jle
sub
call
test
push
pop
push
xlat
mov
fdivl
adc
mov
adc
fcomip
aas
shll
or
notb
out
nop
adc
pop
pop
mov
inc
xor
sti
popf
pop
add
sti
pop
mov
push
push
loope
ds
dec
loopne
push
dec
loop
lea
cwtl
or
fwait
sub
sub
jne
inc
sub
stos
dec
sbb
mov
xchg
and
arpl
cmp
mov
mov
push
clc
dec
mov
aas
dec
sahf
pushl
ss
es
adc
enter
mov
dec
mov
in
lret
nop
mov
lret
xor
adc
and
sbb
mov
lock
mov
imul
mov
fmull
xor
pop
xlat
lods
sub
mov
inc
pop
add
or
es
loopne
int3
fucomp
and
add
cld
jge
dec
out
cmp
inc
popa
mov
inc
jp
les
lods
inc
shr
shlb
incl
into
sbb
fstl
stos
push
pusha
rcll
push
repnz
icebp
sub
pop
push
mov
and
in
xchg
jo
jns
ss
jg
outsb
sub
sbb
test
dec
icebp
imul
inc
movsb
out
xchg
push
clc
nop
in
fwait
andl
push
cwtl
repz
mov
enter
and
xchg
cmpsl
repz
roll
pop
adc
jo
into
jo
dec
jae
push
lret
lods
add
insl
xor
pop
adc
adc
jecxz
push
scas
stos
adc
pop
pop
inc
adc
xchg
mov
xchg
mov
sub
xchg
mov
icebp
fldt
fldcw
and
jnp
mov
push
mov
jne
fs
push
imul
mov
inc
jg
mov
cmc
mov
jg
xlat
xchg
lock
jge
inc
adc
insl
mov
pushl
repz
test
out
enter
stos
and
add
ds
rdpmc
jmp
cld
xor
daa
ret
sbb
sbbb
dec
adc
in
std
in
cmpsb
xchg
inc
pop
cmp
mov
dec
sbb
sti
mov
mov
and
imul
adc
xchg
mov
add
aaa
sbb
inc
mov
mov
mov
pop
loop
pop
or
mov
push
pop
and
flds
pop
lods
out
sahf
mov
ja
adc
rep
jg
sub
stos
cltd
cmp
jecxz
jp
mov
sbbb
mov
inc
dec
adc
je
xor
stos
scas
xchg
leave
enter
add
lret
cmpsb
push
negl
pop
lret
insl
dec
lods
mov
mov
xchg
add
sbb
xorl
push
push
int3
inc
or
pop
xor
sbb
and
daa
cmpsl
lods
jmp
out
push
aad
mov
mov
push
pop
mov
sbb
mov
pushf
and
mov
dec
add
cmc
jl
sub
jnp
xchg
shr
cmpsb
pop
sahf
cli
popa
jge
insb
push
mov
lds
repz
leave
daa
loop
test
xchg
sbb
pop
cmpsl
or
adc
test
lahf
popf
inc
push
insb
adc
inc
add
popf
popf
daa
pop
jae
xor
aam
test
imul
repnz
adc
cmpsb
test
lahf
adc
xchg
std
ret
mov
in
adc
jns
in
popf
int3
lahf
pop
cld
les
push
jns
xchg
pushf
xor
push
jl
fiadds
stos
push
mov
pop
mov
mov
push
push
xor
aad
fcmovbe
lock
fistpll
mov
push
inc
dec
mov
mov
cmp
jne
mov
xor
aad
mov
jecxz
jecxz
pop
lcall
clc
and
mov
sbb
ret
sub
mov
out
jg
call
fld
enter
ret
fsubl
sub
jo
jo
fstpt
pop
aad
out
xchg
roll
mov
insl
aaa
mov
pushf
push
sub
mov
inc
mov
or
push
jl
in
fadds
push
mov
add
mov
xlat
dec
dec
movsb
cmp
dec
jg
mov
and
pop
lods
mov
and
pop
js
fsubrl
sti
sub
outsb
push
and
inc
sahf
xchg
es
or
js
push
jp
mov
mov
and
adc
xchg
push
popf
pop
aaa
andl
add
mov
negb
ja
cli
inc
jno
loopne
and
adc
or
and
rcrl
push
and
aam
add
mov
scas
and
xchg
es
fwait
mov
push
icebp
ja
aaa
cmp
gs
and
mov
pop
pop
add
add
jle
sbb
inc
addl
pop
cmpb
icebp
clc
enter
add
sti
jp
aas
adc
or
out
mov
push
fcoms
push
mov
cltd
das
into
jae
sub
ja
sub
outsb
es
xchg
das
ret
pop
push
inc
sbb
int3
mov
je
movsw
ljmp
inc
push
leave
movswl
mov
inc
bound
mov
lret
xchg
add
outsb
bound
and
push
lock
dec
lds
fisubs
adc
mov
out
dec
rcrl
test
dec
sub
mov
sti
rol
xchg
and
pushf
dec
stc
cmp
aaa
xchg
xor
xor
adc
mov
xchg
jbe
cs
test
jp
inc
sbb
jmp
pop
mov
sbb
sub
pop
mov
dec
sar
adc
lods
mov
in
jns
outsb
xchg
pop
bound
in
testb
xchg
cmp
pop
mov
into
jmp
xor
add
les
xlat
and
xor
test
test
inc
aaa
das
lahf
inc
popa
push
mov
jne
jno
test
lahf
and
bound
mov
mov
scas
xorl
push
addl
loop
push
adc
sub
jle
decb
pop
jo
dec
data16
addr16
jp
and
mov
idivl
mov
or
jne
xor
jle
sbb
or
mov
pop
push
cmp
lods
push
fdivp
test
xchg
and
cli
dec
add
rcrb
jge
xchg
push
pop
xchg
sbbl
aaa
pop
jmp
jmp
xchg
jae
cmp
in
mov
or
sub
fldenv
enter
jle
jbe
addr16
and
or
es
aas
push
ffree
jne
repnz
pop
xor
jg
mov
aaa
add
dec
es
mov
jg
pop
cmp
mov
inc
sti
add
inc
rcr
aam
out
sbb
pop
jg
jecxz
mov
imul
xchg
movsb
add
sub
xchg
xor
push
movsl
xor
jp
outsl
jg
jb
lds
pop
shlb
push
jmp
jne
dec
xchg
fidivl
jp
jne
scas
sbb
dec
adc
pop
mov
and
pop
mov
jne
fwait
jmp
push
test
sub
pop
pushl
dec
push
sbb
pop
xor
push
sub
mov
mov
daa
and
ds
mov
dec
sbb
fcomp
mov
and
mov
xor
mov
movl
out
fstpt
outsb
cmp
fsubrl
sahf
cld
ficompl
cmpb
inc
cmp
test
jne
addr16
into
imul
popa
out
xor
pop
adc
in
pop
mov
push
inc
cmp
lea
pusha
pop
mov
cld
jecxz
in
and
sub
add
or
out
mov
daa
scas
xor
inc
cwtl
loopne
push
pop
dec
sbb
enter
pop
test
sbb
das
pop
or
mov
mov
sub
xlat
pop
std
sub
mov
arpl
push
pop
in
shll
sti
cmp
xor
aas
loope
popf
cmp
push
xor
cs
or
inc
rolb
xchg
lret
adc
inc
rcrl
pop
xlat
mov
xor
and
adc
stos
sub
mov
jno
push
xchg
les
xor
xor
xor
jae
inc
cld
and
push
sbb
dec
int3
dec
mov
mov
lock
xchg
xorb
clc
je
scas
jge
dec
cmpsb
or
and
call
jmp
addb
adc
add
ja
xchg
loope
push
or
sub
int
arpl
jp
xchg
inc
ret
scas
add
or
mov
mov
scas
xchg
dec
pop
jbe
mov
xlat
add
sub
lcall
andl
xchg
cmp
jmp
cmp
push
loopne
ss
and
mov
leave
mov
es
das
repz
loop,pn
js
jmp
inc
incl
rcrb
enter
mov
inc
iret
je
pop
xchg
je
daa
mov
pop
testl
lods
jge
and
nop
movsb
mov
push
xor
and
xor
add
sti
cmpsl
insb
addr16
mov
cltd
idivl
adc
mov
aas
xor
sub
fucom
lret
icebp
push
push
or
sbb
and
pop
in
popa
xor
pop
call
dec
sub
inc
xchg
and
lds
stc
repnz
xor
mov
rolb
sahf
int
negb
addr16
push
cmp
push
jmp
or
jmp
sbb
jl
add
add
jge
mov
ds
cmp
push
ss
ljmp
cmp
lods
add
mov
mov
test
ds
bound
sti
and
jns
and
and
mov
shll
or
loopne
or
xlat
mov
pop
mov
filds
mov
or
add
bt
sub
stos
cld
lock
lcall
stc
sub
repnz
mov
jge
mov
jne
dec
or
adc
mov
enter
loope
jnp
jb
mov
popf
pop
loopne
ret
push
and
aas
mov
dec
xchg
es
and
hlt
loopne
pusha
mov
icebp
arpl
jecxz
push
xchg
pop
arpl
mov
mov
adc
lcall
movsl
ret
cmp
in
cmp
loop
pop
adc
ffreep
xchg
sub
xor
mov
movsb
pop
mov
fsubl
jp
cwtl
cltd
cltd
add
sub
sbb
push
mov
cwtl
repnz
jg
inc
xchg
fsubl
negb
dec
std
aaa
lods
addr16
mov
std
jg
xor
test
das
std
in
dec
push
jnp
sbb
push
sub
roll
shrl
jns
stc
pop
test
cmovo
sbb
enter
push
in
jns
ds
loopne
pop
cltd
call
mov
push
jecxz
ficoms
xchg
outsl
into
inc
subb
cmp
xor
movsb
lea
pop
jmp
call
cmpsl
inc
lods
enter
xlat
sbb
cmp
mov
mov
dec
inc
mov
lds
push
imul
inc
push
mov
mov
lcall
test
cltd
xor
mov
jns
sbb
cwtl
mov
xchg
add
call
test
addb
mov
mov
das
push
bound
xchg
test
and
and
aad
xlat
sbb
scas
lret
jge
fdivs
add
xchg
push
inc
lods
or
outsl
mov
push
mov
mov
fisttps
arpl
mov
xchg
fiaddl
sbb
push
popa
inc
js
jl
fdivrl
and
xchg
sub
inc
sub
out
xchg
jle
mov
pop
add
jge
mov
sub
fimuls
xchg
push
and
dec
xor
lcall
ja
notl
push
aad
js
sbb
test
pop
push
add
stos
notb
jle
xor
out
push
jecxz
and
ss
dec
gs
mov
icebp
int
fsubrl
das
loope
push
pushf
sbb
ss
mov
sub
mov
cltd
push
js
xchg
cli
jo
inc
js
les
mov
xchg
inc
lahf
imul
aaa
cmp
stc
cmp
xchg
sarl
cmp
or
sub
pop
jae
mov
jo
inc
jo
mov
mov
xchg
jno
subl
into
or
in
sub
daa
or
fidivrl
push
rorb
cwtl
sub
repz
xchg
inc
inc
cmp
das
mov
and
adc
dec
icebp
scas
orl
push
inc
fsubrs
or
sub
xlat
rolb
push
inc
sbb
and
jmp
dec
cmp
std
adc
inc
addr16
dec
or
mov
xor
mov
movsb
inc
andb
sub
shrl
int
ss
or
stc
dec
mov
cltd
pop
push
mov
fidivl
jno
jae
mov
inc
cmp
pop
or
xchg
jnp
negl
sub
cmp
jo
xchg
es
inc
push
mov
imul
jl
mov
outsb
movsb
lds
sbb
sub
sub
and
subb
inc
es
cs
fwait
pop
stos
ret
mov
movsb
ret
aad
orl
cmpsb
jae
sbb
mov
rcl
inc
fucom
or
cmpsb
add
pop
aaa
mov
insl
xor
arpl
sub
repnz
lods
test
and
push
jno
add
inc
push
mov
icebp
inc
pushf
xchg
inc
aas
int3
aas
and
mov
lea
pop
ljmp
sarl
cmpsl
mov
fs
sbb
dec
cld
xlat
and
xchg
lock
lock
test
jne
jno
jo
jmp
out
mov
mov
fucomp
jae
or
add
jb
lea
loop
mov
jo
out
popf
shlb
popa
push
cmp
sarb
leave
outsl
std
and
ret
int3
das
mov
cmp
or
or
or
test
popa
negl
out
div
sub
add
fucomi
dec
rcr
inc
add
cmp
dec
sub
pop
mov
and
sahf
cmp
data16
lahf
ror
mov
nop
xchg
cmp
nop
fldl
sub
jns
sti
mov
js
xchg
jno
add
jbe
mov
test
into
test
and
cmp
xchg
lret
jmp
icebp
mov
pop
dec
jp
clc
mov
mov
lds
mov
fucom
rol
or
addr16
cld
push
insl
or
pop
or
adc
dec
aad
es
fsubl
mov
inc
sub
adc
mov
add
inc
jae
scas
shrb
cmpsb
nop
mov
lods
mov
mov
sbb
ja
lock
push
push
test
loopne
int
insb
inc
mov
ds
inc
bound
aas
push
lock
lock
add
in
lods
hlt
adc
jl
fcoml
loope
push
adc
test
add
add
aad
insb
cli
inc
aad
repz
cli
sbb
insl
jge
fmull
inc
ljmp
imul
adc
push
mov
mov
aas
xor
and
inc
test
or
out
lahf
ss
loope
mov
jg
mov
mov
mov
rol
or
setno
mov
fs
inc
inc
lds
ret
cmp
jmp
mov
repnz
shll
out
cmpsb
imul
sbb
adc
dec
or
rcl
sbb
les
xor
cmpsb
ljmp
or
push
addb
jecxz
outsl
fimuls
xchg
mov
int
jnp
xlat
mov
in
ja
ss
popf
pop
rcll
mov
lret
add
icebp
and
lahf
xor
jp
mov
in
xlat
jp
sbb
push
mov
mov
iret
aas
dec
sbb
popf
call
popf
or
lock
and
out
popl
xchg
mov
out
jbe
hlt
arpl
mov
inc
sbb
je
xor
pop
pop
lods
faddl
cli
sbbb
mov
jb
jecxz
pop
pop
mull
dec
aaa
movsl
mov
ds
iret
push
adc
roll
mov
outsb
fdivl
ret
and
cli
call
xor
shll
jg
sahf
aad
and
mov
jbe
lea
out
pop
shll
das
jg
xor
sbb
dec
xchg
in
sahf
stc
js,pt
inc
pop
loop
jp
mov
mov
daa
jns
stos
push
loop
sub
jp
sub
fidivs
in
mov
bnd
loopne
ret
xlat
call
pop
add
push
xor
je
roll
pop
aad
pop
or
cs
lods
repz
jns
pusha
jae
call
mov
cwtl
mov
in
out
xchg
push
clc
out
insb
and
or
inc
es
pushf
dec
stc
rol
aas
add
int
adc
xor
sbb
int3
hlt
push
xlat
adc
or
push
push
lock
lahf
divb
shrd
scas
mov
dec
add
ficompl
xor
xchg
add
aas
adc
cltd
loop
push
in
lock
dec
gs
adc
mov
inc
frstor
cmp
or
bound
in
mov
jo
pop
popf
xor
inc
xor
leave
in
in
and
sti
mov
and
push
adc
xor
iret
push
sbb
cmpsl
mov
and
shlb
popa
out
pop
aam
xcrypt-cbc
cmpsl
adc
sbb
rcrb
sub
scas
push
adc
pop
cmp
orb
loop
xlat
jg
xchg
xlat
push
mov
bound
dec
lods
cs
mov
in
push
dec
mov
fisttps
inc
add
lret
push
fsts
rorb
lods
jae
pop
inc
sarb
popf
in
aas
hlt
jne
mov
jge
sbb
push
mov
test
mov
cwtl
aam
mov
mov
adc
push
xchg
mov
and
cs
fisttps
roll
repnz
sub
imul
lahf
stos
xchg
mov
into
jae
cwtl
in
mov
loope
xchg
add
scas
adc
scas
pop
mov
outsb
push
inc
lock
fists
in
cmc
cmp
pop
mov
cld
xor
outsb
inc
xchg
and
je
addr16
push
push
dec
icebp
lock
or
scas
lea
insl
sub
xor
cmp
repz
filds
mov
jns
dec
mov
dec
xchg
and
cltd
inc
stos
cld
add
mov
sbb
xchg
and
mov
imul
inc
mov
lock
add
sub
aam
aam
into
imul
add
pmaxub
jp
inc
mov
mov
pop
roll
inc
stos
movsb
mov
outsb
incl
cmpsl
sahf
xor
add
loope
add
out
es
mov
adc
sub
mov
push
cltd
cmc
test
inc
pop
fcmovnbe
inc
push
fists
cmc
mov
ja
je
jae
cld
inc
mov
sub
pop
cmp
cld
xor
inc
inc
jb
lret
pop
dec
pop
jle
je
in
dec
lods
fcomps
xchg
fsubl
mov
adc
mov
pop
xchg
push
adc
test
insb
xchg
popa
shrl
mov
pop
push
xchg
imul
movsl
mull
jge
es
xchg
add
and
pop
inc
in
mov
add
popf
xchg
inc
dec
dec
aaa
sbb
fsubr
pop
jb
mov
dec
lds
mov
mov
div
inc
xor
stos
iret
mov
fsubrl
cmpsb
movsl
jae
xorb
fnstenv
test
mov
jb
lret
inc
icebp
sbb
movsb
jge
ror
ffree
iret
lock
data16
lret
or
adc
shlb
nop
and
inc
rcll
mov
pop
repz
cmp
push
mov
cmp
sub
xchg
popf
mov
mov
fstps
ljmp
xchg
aad
jae
adc
jae
fwait
cmpsb
cmpl
fiadds
pop
mov
push
fsubs
sbb
popf
inc
sub
xchg
loop
mov
nop
mov
aad
pop
push
mov
mov
sti
and
jo
push
nop
jmp
xor
sub
inc
push
and
in
in
dec
data16
dec
push
daa
fdivs
push
inc
test
or
nop
sbb
mov
loopne
jle
stos
scas
in
lahf
fildl
sbb
enter
xchg
mov
push
xor
inc
dec
jne
or
dec
jmp
mov
adc
cmp
dec
repz
fstl
sub
das
popf
scas
and
xor
stc
movsl
in
dec
mov
jle
mov
and
add
loopne
or
lods
jl
jnp
fidivs
push
mull
push
or
ret
lds
in
ja
push
mov
xor
hlt
mov
adc
xchg
sub
push
in
mov
cwtl
scas
loope
in
ja
scas
jb
lock
xchg
xchg
mov
sbb
pop
scas
push
repz
push
fistl
xor
stc
outsl
add
dec
aad
popw
fidivl
adc
mov
and
jge
push
stc
daa
icebp
dec
mov
lods
xchg
int3
lahf
push
hlt
pop
cmpl
test
push
mov
cltd
jmp
push
pop
sti
in
push
aaa
push
push
mov
jo
and
inc
shlb
out
iret
jmp
sbb
push
in
idivb
sub
popf
cli
pop
lds
or
adc
mov
xlat
sbb
sbb
addr16
adc
pushf
xor
jge
sti
mov
pop
popa
fidivrs
pop
es
mov
in
xchg
outsb
loop
je
in
das
add
push
push
mov
push
and
jbe
mov
testl
in
mov
adc
aam
rcl
mov
mov
inc
push
and
arpl
aaa
adc
jle
jmp
xor
mov
lret
mov
mov
and
stos
jno
push
jno
in
ffree
jbe
in
inc
add
out
fisttpl
mov
push
stc
fmuls
nop
mov
movsb
rcrl
jo
sub
pop
pop
lret
dec
dec
pop
loopne
jne
dec
lods
xor
jge
push
ljmp
call
pop
scas
dec
push
mov
dec
fldt
jmp
xorl
xor
cltd
nop
cmp
mov
push
mov
loop
xor
in
bound
pop
cld
dec
xchg
data16
ret
test
in
mov
xchg
mov
lock
mov
and
jbe
cltd
cmpsl
sbb
jmp
lods
repnz
inc
arpl
addr16
add
fisttpl
movsl
icebp
push
pop
adc
andb
mov
dec
mov
mov
xchg
rcl
dec
jno
ds
xor
cmpsb
jae
imul
fcomps
xchg
xchg
js
das
ret
test
fnstenv
fwait
in
pop
outsl
cltd
call
ret
xor
popf
dec
adc
or
inc
sahf
or
daa
jbe
push
sub
cmp
shlb
dec
sbb
aam
ljmp
push
into
sub
repz
test
jg
sub
ljmp
in
xor
jnp
xorb
pop
js
mov
cmpsl
orb
leave
in
or
fisubs
push
xchg
and
push
or
sub
rol
iret
ret
jecxz
lods
icebp
add
cmp
out
pop
cli
fs
rorb
rolb
stos
dec
sub
mov
movsl
push
sarl
jnp
push
dec
out
mov
fs
dec
mov
inc
jns
dec
shrl
xchg
inc
popa
mov
add
push
inc
fmuls
shlb
mov
push
xor
xchg
hlt
fldl
push
sub
data16
push
mov
cltd
popw
jno
jl
jne
mov
sub
or
cmc
icebp
roll
mov
sub
test
cs
mov
xchg
dec
dec
leave
adc
sub
in
adc
addr16
cld
push
int3
push
scas
lcall
mov
aas
or
rorl
mov
add
mov
test
outsb
loopne
nop
sbb
adc
inc
xor
lea
mov
cltd
dec
or
xor
dec
cmp
lock
adc
adc
mov
cmp
push
sub
inc
adc
mov
cmp
pop
imul
jge
jne
loop
popa
cmp
out
xor
add
cwtl
xor
psllw
xor
popf
les
arpl
dec
jne
bound
insl
jnp
cli
nop
stc
jns
adc
push
sbb
lock
rolb
push
xchg
push
dec
lods
mov
dec
sub
xchg
adc
pop
push
out
fildll
ss
push
mov
adc
jno
testw
mov
inc
in
lfs
sub
cmp
lahf
xchg
out
insb
fnstcw
cwtl
pop
popa
lcall
call
ficompl
enter
cmp
pusha
xorb
repz
xchg
ret
or
int3
fs
adc
mov
pop
test
jecxz
in
lds
lock
dec
jle
lahf
push
dec
fwait
js
mov
imul
out
popf
jbe
push
xor
adc
popf
inc
fwait
cmc
jno
lods
push
mov
jb
adc
lods
js
enter
aaa
stos
scas
sti
xor
out
jo
xchg
lcall
mov
mov
pop
jne
cli
rcl
lret
and
sbb
lcall
movsb
mov
xchg
fistpll
mov
xorb
mov
mov
enter
sub
stos
cld
mov
cmc
jmp
dec
sbb
in
leave
mov
gs
sahf
fmuls
mov
or
hlt
shlb
popl
dec
jg
pop
hlt
fmuls
ljmp
fst
add
cmp
sbb
push
adc
cld
pop
mov
js
cltd
dec
or
mov
sbb
mov
cmp
jb
shrl
out
jne
jo
ds
cmp
pop
lea
rolb
xchg
jmp
dec
loopne
lcall
xchg
and
insl
pop
or
pop
dec
pop
lods
cmpsb
jp
fnstenv
pop
mov
sbb
aad
sbb
jb
sbb
cwtl
popa
jp
push
and
pop
or
lods
out
clc
mov
in
popa
xchg
popa
adcl
xchg
jmp
push
or
pop
jle
out
ss
pop
loopne
xchg
cmp
mov
mov
cmp
cmp
sahf
jne
mov
test
dec
push
leave
movsl
enter
pop
clc
test
flds
popa
dec
xchg
fstl
gs
mov
in
mov
cmp
xchg
sbb
test
pop
mov
mov
push
xchg
push
int3
loop
pop
pop
in
ljmp
cmc
sahf
adc
inc
adc
ret
popf
fisubrs
dec
xor
mov
push
add
les
cli
call
dec
stos
mov
mov
in
leave
mov
mov
pop
scas
shr
or
sbb
and
sbbl
addb
pushf
out
adcl
pop
inc
jns
xchg
lcall
xchg
repnz
ds
pusha
enter
jo
xor
and
jmp
add
xchg
mov
sub
scas
lods
jp
inc
jle
loopne
decb
inc
data16
xor
cmpl
and
or
repnz
mov
sti
add
mov
outsb
mov
outsl
ss
outsb
push
dec
roll
ret
pop
push
je
sti
mov
rolb
jle
ret
je
and
aam
mov
fwait
andl
sub
sahf
push
sbb
in
out
cmp
xlat
sbb
loopne
or
inc
and
xchg
scas
push
or
cmp
and
mov
inc
mov
inc
dec
xchg
or
ficoml
jecxz
push
mov
mov
dec
in
mov
mov
mov
dec
xchg
mov
pusha
push
popf
cmp
dec
pop
sahf
adc
fdivr
lea
mov
lds
mov
insb
and
mov
loope
push
nop
nopl
cli
add
sbb
repz
pop
movlhps
clc
xor
jg
push
das
sub
jns
lds
fsts
cld
hlt
and
push
cmpsb
push
stos
inc
in
xchg
sub
adc
repnz
add
paddsb
xor
cmp
add
aas
inc
xchg
push
iret
and
mov
mov
aas
orb
pop
cmpsb
xchg
repz
idivl
cmc
pusha
mov
cmpsl
lock
jnp
push
adc
ret
sbb
inc
adc
aas
mov
repz
push
sar
dec
xlat
pop
mov
add
iret
stos
popa
mov
ljmp
mov
fistpll
repz
mov
movsl
enter
call
cmc
xor
pop
je
mov
and
xor
fsubp
lcall
sbb
mov
lock
inc
clc
dec
test
mov
cld
leave
pop
dec
fistpll
scas
add
pop
mov
sub
out
mov
in
test
jb
mov
push
mov
jecxz
mov
mov
cmpsl
stc
dec
clc
fwait
jo
enter
stos
sbb
cltd
mov
das
cli
pop
jbe
jecxz
and
push
jne
ret
xchg
add
movsl
stc
sbb
inc
or
lods
and
test
es
cmp
cld
push
inc
popa
ds
outsl
or
push
cwtl
jno
je
cmp
movsb
lds
push
mov
filds
in
cltd
mov
and
mov
shrb
hlt
cltd
jg
stos
sub
jg
mov
jl
mov
test
adc
pop
loopne
push
sub
jns
sbb
mov
insb
hlt
loope
sti
jl
gs
adc
lods
mull
add
stos
xchg
lret
cmp
repz
inc
fists
xor
mov
pop
inc
and
jg
mov
xor
dec
add
push
sbb
loop
pop
inc
jmp
repz
lods
lock
out
and
jmp
mov
pushf
xchg
repnz
jge
and
je
and
das
mov
es
or
cs
arpl
sub
sub
jl
lock
fisttps
jne
mov
out
pushf
adc
cli
jle
jb
pop
or
cmpsb
mov
dec
xor
mov
adcb
mov
out
mov
sub
push
stos
mov
pop
aad
inc
inc
cmpsb
push
icebp
into
mov
mov
pusha
in
negl
in
cld
inc
xchg
imul
xlat
push
xchg
mov
mov
lret
add
pop
pop
push
xor
or
jae
mov
repz
jae
popa
xchg
adc
push
dec
or
dec
imul
push
jg
stos
push
lahf
cmp
inc
jge
mov
aas
cmp
sbb
mov
sbb
out
inc
adc
lock
jns
sbb
fcoml
loop
mov
cmpsb
push
ficoml
ja
dec
pop
in
sub
dec
push
cltd
adc
pop
mov
and
outsl
out
jb
lcall
jg
imul
js
nop
pop
jns
insb
dec
cmc
das
cmp
dec
xor
cmpl
adc
loope
scas
dec
push
push
std
pusha
je
and
test
inc
sbb
shll
jae
daa
repz
xor
int3
dec
out
jecxz
roll
add
xchg
xor
xor
sub
jp
outsb
lods
dec
or
movsl
mov
sbb
test
cld
xchg
call
ret
or
push
jae
popa
mov
inc
int3
lret
and
cld
jp
or
adc
stos
mov
in
div
add
xchg
push
lock
repz
shl
inc
je
push
aam
xorl
jae
and
dec
scas
loopne
imul
daa
stos
jmp
or
push
movsl
sarb
mov
cltd
int
clc
test
mov
inc
push
test
lahf
hlt
repnz
jmp
and
adc
jg
mov
pop
lea
fmuls
push
clc
push
vprotb
sbb
inc
inc
pushf
jge
or
push
push
sub
sti
jo
push
repz
or
inc
cmpsb
jl
jno
lea
xor
test
lods
out
push
daa
jge
mov
jnp
clc
pop
mov
add
ds
adc
lret
lahf
cmc
adc
xor
push
mov
jb
sub
imul
fst
gs
adc
xchg
inc
or
adc
push
loopne
jae
js
add
int
mov
sti
call
pop
push
jo
daa
xor
pop
jb
add
dec
jle
sbb
xchg
mov
int
sbb
and
repnz
repz
divb
out
jle
mull
dec
into
push
push
imul
adc
mov
mov
cs
jecxz
ror
xor
jbe
lods
push
pop
mov
xchg
sbb
sbb
and
and
add
xchg
xchg
adc
fwait
les
and
jno
and
pop
dec
dec
pop
icebp
push
rcr
mov
incb
sub
pop
in
pop
psubb
add
push
push
mov
adc
jo
push
pop
daa
adc
xor
add
lret
sub
leave
in
test
ja
aas
pop
inc
es
sti
xor
pop
lods
dec
push
pop
push
xchg
rcrl
jg
inc
xchg
mov
push
leave
push
adc
clc
sbb
lods
idivl
leave
stos
mov
mov
xlat
dec
movsl
pop
dec
arpl
test
or
aam
add
jl
mov
lods
xchg
insb
pop
push
dec
popl
jge
shr
xchg
mov
sub
popf
inc
lds
bound
xor
cwtl
jnp
xor
sub
in
jp,pt
or
shrl
arpl
mov
dec
icebp
adc
cmp
xchg
mov
outsb
adc
jns
mov
decl
data16
fcoms
and
in
push
test
inc
push
pop
mov
cltd
mov
es
bound
dec
pop
pusha
popa
cs
cmp
xchg
cmp
push
gs
orb
push
sub
gs
out
loop
mov
sti
sub
push
mov
or
out
xlat
adc
pop
jle
mov
sub
xchg
xchg
cmpsl
out
out
mov
inc
mov
mov
mov
aam
mov
decl
lock
lahf
pushf
sub
push
loope
jecxz
call
or
icebp
scas
enter
cmp
dec
mov
gs
pop
and
dec
sbb
or
icebp
test
inc
lods
inc
lods
scas
arpl
stos
jns
inc
pop
test
push
subl
add
inc
push
xor
je
mov
xchg
das
push
dec
cli
pop
pop
adc
xchg
cmp
push
add
mov
popf
dec
or
lcall
inc
jge
out
inc
popf
jb
loop
mov
sub
repnz
push
adc
xor
push
adc
outsl
leave
clc
adc
sub
scas
lods
addr16
decb
stos
cs
negl
pop
adc
loop
js
dec
adc
andl
push
mov
fcomps
jecxz
fidivrl
aad
loopne
into
scas
shrl
mov
jbe
push
xor
adc
mov
movsb
mov
lods
sbb
fwait
and
and
pusha
adc
push
inc
inc
in
mov
inc
jno
mov
xor
loope
xor
or
pop
pusha
ja
or
shll
mov
push
bound
push
pop
mov
jmp
cwtl
sub
scas
add
push
arpl
xchg
orl
out
loop
rep
xchg
push
ds
lods
repz
sbb
dec
shll
and
js
cmp
inc
lods
test
push
cmp
aas
dec
js
and
lahf
divl
repz
insb
fistps
stos
push
out
adc
push
sbb
push
mov
pop
sub
sbb
imul
mov
hlt
push
shl
loop
mov
outsb
out
rcrl
fwait
push
cmp
pop
in
or
sub
popf
add
enter
push
pop
dec
loopne
inc
lret
or
test
add
test
dec
roll
lahf
lret
and
hlt
mov
popa
fwait
xor
xchg
pop
dec
adc
pop
not
pop
jl
push
mov
pop
jecxz
jmp
roll
dec
ja
inc
lds
mov
lahf
jns
in
fsubp
ja
cmc
aas
add
data16
rorb
iret
jecxz
iret
push
stc
xchg
mov
stos
popa
mov
cmpsl
xor
cmp
and
subl
mov
outsb
xchg
sub
dec
sti
mov
xchg
dec
pop
je
gs
xchg
dec
sub
jne
testl
add
xchg
and
mov
xor
repnz
shl
inc
enter
sbbl
xchg
aam
push
ss
xchg
popa
mov
ss
xchg
imul
add
cltd
in
jle
xchg
repz
adc
sbb
inc
cmp
inc
arpl
ljmp
jno
pop
repnz
outsl
mov
xchg
and
or
mov
addr16
xlat
xor
mov
mov
daa
insb
inc
or
scas
ret
mov
push
mov
fdivrp
sub
lock
xor
pop
add
lcall
adc
icebp
loop
or
cmp
add
fcoml
jl
jnp
push
or
and
rolb
outsb
pop
loope
test
sbb
mov
imulb
or
loopne
clc
xchg
mov
inc
lock
popa
and
rorl
lock
mov
nop
adc
adc
xchg
les
jmp
out
mov
in
sbb
xchg
repnz
xlat
add
adc
cmp
into
andl
stos
daa
stos
pop
inc
mov
js
pusha
nop
xchg
pop
js
cli
add
inc
test
jg
sub
sub
in
push
std
gs
hlt
cltd
out
fnstsw
imul
stos
test
jl
jns
je
or
jp,pt
pop
testb
pop
bound
cmpsb
jecxz
cwtl
or
dec
mov
push
call
icebp
out
adc
popa
test
cmc
adc
bound
mov
insb
mov
adc
outsl
xor
test
out
aas
jb
push
jle
sbb
jecxz
sti
mov
dec
xor
add
int
in
or
pop
mov
and
dec
inc
test
loopne
add
dec
sbb
daa
icebp
jns
push
sbb
aas
vcmpordpd
lret
mov
mov
dec
dec
mov
adc
pop
es
adc
mov
inc
push
mov
stc
push
movsb
sti
bound
adc
xchg
adc
ljmp
cwtl
nop
sahf
cmp
cs
cmp
pop
sarb
in
adc
cs
mov
dec
mov
add
inc
clc
push
and
sarl
in
xor
xchg
or
testb
addr16
cmpsl
arpl
dec
icebp
inc
nop
mov
or
mov
adc
pop
cld
jmp
repz
sbb
into
cmp
inc
xor
jg
cmc
js
test
divb
mov
sbb
pop
movsbl
jmp
push
mov
stc
dec
andl
lock
jno
adc
push
jo
inc
or
xchg
faddl
add
lret
pop
and
out
push
jae
roll
loopne
rsqrtps
in
nop
and
jne
adc
dec
imul
and
mov
xor
stos
testl
mov
sbb
js
push
sub
mov
and
scas
inc
and
adc
dec
pop
test
sub
cmc
push
cltd
vmovupd
sbbl
cltd
sub
pushf
addr16
and
or
cli
icebp
pusha
arpl
insl
jp
nop
sbb
sub
sub
sbb
xchg
nop
push
dec
sub
loopne
loopne
rorb
mov
pop
jp
gs
iret
and
ror
ret
sub
fwait
inc
and
fisubs
dec
mov
loopne
js
lret
les
neg
pop
mov
xchg
in
popa
pop
mov
or
std
stc
imul
bnd
mov
cmpsb
xor
inc
outsb
add
mov
cmp
or
and
add
mov
ljmp
call
xchg
adc
dec
fiadds
jo
pop
fs
popf
mov
push
xchg
and
jae
pushf
mov
es
arpl
fwait
dec
aaa
push
mov
sbb
test
inc
jmp
dec
cld
cmp
mov
ljmp
adc
mov
pusha
sbb
mov
mov
rcrb
subl
rol
or
jns
jle
incb
outsl
jbe
ds
movsl
and
stc
data16
popl
outsb
mov
call
add
orb
data16
inc
pop
lcall
sbb
pop
adc
dec
adc
je
test
and
dec
mov
and
and
je
aad
adc
or
lahf
lock
cwtl
jecxz
dec
int3
shlb
pop
imul
and
push
pushl
xor
and
inc
iret
loopne
ficoml
test
addb
push
inc
rcrb
sarl
popf
add
pop
mov
in
fwait
mov
sbb
insb
mov
mov
nop
subb
icebp
mov
bound
cmp
sbb
test
adc
cmpsb
pushf
int3
lret
push
jo
outsb
sbb
xchg
std
jg
xor
jp
vpmacsww
sarl
dec
sbb
nop
jae
ud1
fildl
adc
lock
aad
sahf
mov
mov
sub
popa
adc
repnz
xor
enter
mov
cmp
xor
mov
decl
nop
and
push
push
int3
repnz
rclb
push
pop
jae
sti
and
push
lret
mov
aad
pusha
mov
pop
add
push
push
xchg
icebp
orb
jne
hlt
pop
pop
and
arpl
add
mov
xchg
pop
adc
imul
in
inc
int3
bound
aaa
dec
jmp
insb
sti
data16
inc
dec
adc
lds
daa
jae
push
out
add
jbe
jne
push
mov
repz
jp
lock
and
ss
aaa
jmp
inc
inc
lds
xor
cmp
sbb
mov
xchg
vmwrite
enter
push
pusha
dec
sti
sub
repz
lds
test
les
push
arpl
push
test
adc
jb
lods
daa
mov
cli
mov
sbb
negb
test
pop
and
and
hlt
xor
mov
jp
add
loope
cmp
loope
daa
lods
xchg
inc
sbb
and
inc
ficoml
enter
imul
add
hlt
add
lea
adc
insl
fstps
outsl
push
push
mov
add
loope
mov
daa
jae
inc
or
incb
cmp
scas
maskmovq
testl
xchg
out
xchg
cmpsl
jmp
sahf
sub
daa
pop
push
dec
insl
and
jno
xchg
inc
mov
std
repz
mov
stos
stc
in
cmpsb
test
dec
pop
add
pop
mov
jae
mov
mov
div
and
shll
push
push
pop
adc
mov
in
out
jge
decl
in
and
and
movsl
inc
jne
ja
inc
pop
mov
lret
cwtl
cmp
xchg
push
out
and
jmp
sbb
push
in
xchg
test
inc
insb
jno
xor
lret
xor
push
jae
pop
movsl
aam
arpl
mov
out
popf
mov
fwait
aad
lret
je
test
sbb
add
mov
icebp
pop
out
xchg
rorb
sub
lods
mov
je
jae
js
dec
and
cmpsb
cmpsl
bound
pop
jmp
repnz
xor
ret
jbe
jnp
sbb
inc
in
imul
test
aas
lahf
test
mov
int3
sbb
enter
cmpsb
lds
cmp
sahf
cltd
and
jg
dec
fstpt
pop
push
jne
add
sub
loop
mov
xchg
jne
iret
and
outsb
fldenv
inc
and
or
repnz
jb
stos
sub
xor
fdivs
mov
jb
adc
stc
sub
xor
in
icebp
inc
arpl
dec
sbb
repnz
hlt
jecxz
shlb
pop
xchg
movb
ficoml
mov
icebp
int3
sub
insb
adc
test
sub
dec
sbb
enter
lcall
mov
sti
sub
mov
pop
insl
stos
pop
sti
fs
pushf
nop
sub
add
ja
out
push
hlt
mov
sub
inc
mov
mov
dec
das
andl
inc
ss
into
ret
ret
pop
adc
popa
fsubl
and
dec
mov
mov
mov
les
cmp
loopne
es
cmp
sub
or
out
push
stos
into
repz
movnti
cli
adc
xchg
ljmp
leave
pop
sub
mov
inc
mov
add
push
popa
inc
xchg
push
xchg
dec
lea
xchg
jmp
or
xchg
test
divl
ds
dec
pop
jno
ss
mov
xor
aaa
gs
xchg
addr16
jle
ds
fildl
inc
push
dec
jge
mov
les
mov
xchg
fs
cmp
pop
dec
sub
out
call
xchg
fs
dec
cmpsl
shr
scas
mov
mov
dec
and
jb
and
rcll
inc
sbb
cmp
add
les
fs
leave
repnz
and
nop
lcall
outsb
inc
in
cli
jp
iret
adc
or
imul
call
dec
add
nop
push
inc
xchg
xchg
pop
das
outsb
xchg
sbb
jae
nop
jecxz
pop
sbb
lods
pop
sar
mov
imul
cmpsl
loope
dec
leave
cmc
pushf
dec
dec
ret
test
push
pop
or
loope
fmuls
cmp
or
or
sub
add
jno
xor
mov
adc
or
insb
and
pusha
push
sarl
sub
mov
call
dec
mov
bound
sub
add
test
stos
aas
lcall
cmp
adc
mov
ret
mov
clc
dec
mov
sbbl
aad
aam
popa
rcrb
fs
sbb
jno
ljmp
shl
cmp
mov
outsb
dec
jne
mov
mov
cmp
mov
jno
das
pop
mov
push
jb
stc
cmp
lahf
push
mov
mov
pusha
mov
push
add
jo
ds
inc
inc
sub
adc
cltd
sbb
lcall
aas
sahf
jge
jg
std
pop
test
lods
inc
idivb
dec
das
and
stos
cmp
pop
ret
fistpll
enter
xlat
mov
cmp
inc
std
ret
cmc
add
stos
inc
push
sub
mov
subl
mov
cwtl
pop
mov
bound
push
sbb
outsb
pop
xor
jg
push
or
xchg
lods
sbb
cmc
ljmp
mov
lods
imul
stc
in
movsb
sub
or
cs
adc
mov
mov
push
addr16
mov
lcall
test
stos
mov
jge
add
pop
sub
mov
and
lods
cli
pop
push
mov
mov
mov
cmp
or
mov
pop
sahf
push
rcll
sub
push
cltd
cmp
sbb
test
jmp
adc
call
fwait
ljmp
push
int3
mov
mov
callw
sub
adc
xor
fadd
imul
mov
mov
xor
and
dec
out
int
scas
lods
sbbb
sarb
xor
pop
cmpl
cmp
adc
fists
imul
test
stos
mov
pop
inc
int
add
insb
and
inc
sbb
mov
ffreep
pop
adc
je
adc
dec
inc
mov
in
scas
pop
lahf
int3
aam
push
cmpsb
add
sub
pop
inc
lods
or
inc
fstps
pop
mov
ret
daa
sub
cmp
gs
push
fwait
xor
mov
mov
mov
jno
push
lock
sub
mov
or
jbe
push
shrl
xchg
outsb
in
jg
aas
push
and
jecxz
sub
push
repnz
or
mov
jge
mov
int
push
fcompl
movsb
aam
sub
xchg
adc
out
push
push
jno
mov
cmp
shl
push
xchg
mov
xor
add
shrl
pushf
mov
sub
jae
pop
xor
mov
cltd
sbb
in
notl
push
xor
popf
add
adc
push
push
call
inc
lock
xchg
dec
push
aas
mov
loop
inc
out
hlt
adc
pop
dec
dec
lods
push
push
sub
lods
cmp
test
jl
xchg
mov
pop
fdivl
mov
jb
cmp
mov
push
mov
adc
push
pop
push
adc
mov
cmpsb
jl
imul
adc
data16
jae
sbb
rcl
stc
cwtl
repz
add
jnp
insb
cltd
jbe
xchg
loopne
inc
dec
sub
imul
jo
jp
jle
push
inc
jge
xor
ss
cmp
stos
cltd
sbb
shrl
mov
icebp
adc
incl
pop
mov
mov
xchg
or
xor
fmuls
sbb
cmp
movsb
jnp
in
mov
add
cmc
xor
out
hlt
mov
sub
out
loope
pop
cmpsl
popf
add
push
lods
push
push
jp
andl
pop
fildll
add
xchg
pop
cmp
inc
movsl
or
dec
je
pop
sarb
mov
popf
das
mov
popl
out
and
imul
movsb
mov
enter
sbb
mov
dec
mov
jle
iret
adc
push
sahf
lods
loop
test
scas
inc
add
inc
dec
jl
pusha
iret
pop
or
fucomi
push
stos
adc
mov
into
nopl
imul
nop
les
loopne
lret
in
movsl
xor
pop
enter
mov
fistpl
sub
ficoml
mov
ss
or
jl
lret
adc
lret
push
push
add
sbbb
fstps
adc
or
pop
flds
mov
xor
dec
sbb
add
inc
xorl
cmp
inc
pop
sti
jne
test
dec
pop
cs
and
jo
and
outsl
or
gs
mov
and
dec
lcall
out
scas
jmp
inc
pop
mov
adc
mov
inc
incl
xchg
out
bound
mov
arpl
adc
leave
and
mov
dec
bound
into
xor
mov
adc
dec
stos
mov
jns
cwtl
imul
aad
mov
add
arpl
jne
jns
sub
in
pop
push
into
mov
rorb
pop
or
scas
push
xchg
dec
mov
adc
push
mov
stc
js
xor
and
cmp
push
sbb
push
mov
cmpsl
jg
mov
dec
mov
dec
dec
or
lods
jmp
sbb
cmpsb
dec
sarl
push
xor
out
insb
pop
xlat
movsl
test
scas
and
test
repnz
int
dec
mov
out
xchg
into
mov
lock
and
sub
popf
test
dec
in
add
and
scas
ret
call
jp
leave
xchg
jmp
xchg
sub
es
stos
cmc
mov
cmp
js
or
rorl
push
or
pop
cltd
lcall
xlat
inc
fisttpll
popf
push
loope
lock
cltd
pop
bound
fcoml
mov
pop
or
jge
mov
test
cmp
jg
add
popa
ret
repz
repz
ja
mov
fists
daa
add
sbb
push
adc
dec
fcoms
sbb
mov
and
repnz
inc
and
hlt
rol
mov
dec
add
xor
das
or
add
std
loope
popa
adc
cmp
and
lods
add
orb
cwtl
cli
mov
mov
fs
push
daa
inc
push
xor
sub
mov
xorl
mov
cmc
sub
cltd
ret
xor
gs
or
adc
repnz
addl
faddp
sub
shrb
lret
and
jbe
mov
pop
bound
int3
push
std
sub
lret
shr
inc
fdivs
ret
pop
lea
fcoms
jg
imulb
sub
or
push
ret
mov
imul
jge
aaa
mov
int3
lret
push
and
mov
ja
lods
and
push
movsl
jae
aad
stos
lahf
into
or
sarl
xor
pop
inc
sub
mov
ja
stos
mov
lea
std
mov
adc
int3
jl
cmc
rcl
cmp
mov
or
arpl
jl
cmc
mov
mov
testl
daa
movsl
fdivr
sub
or
mov
sbb
push
incl
jl
xchg
icebp
cmp
test
adc
fwait
test
loopne
sbb
std
rorl
adc
sbb
cmc
rcrb
add
je
xlat
sbb
xor
pop
into
pop
jns
lock
push
cmp
scas
jb
pop
bound
add
pop
test
fldenv
lods
lods
cli
xchg
add
cs
adc
cmp
mov
lods
add
jle
movsl
cmp
xor
and
xor
push
xchg
in
push
pop
mov
xchg
in
test
pusha
cmpsl
pop
xchg
xor
sub
jl
mov
scas
pop
das
lods
cmc
lock
repz
jle
inc
loope
xchg
hlt
rcll
aas
lods
test
or
rolb
outsl
push
xchg
insl
jae
test
adc
lahf
jno
test
pushf
mov
divl
push
and
sbb
pop
pop
stc
cmp
call
adc
cmp
sub
pop
aas
or
rorb
mov
adc
or
add
dec
cltd
addr16
cld
push
push
cltd
push
fidivrl
adc
outsb
pop
inc
and
push
mov
inc
daa
jae
pop
mov
je
lea
lret
out
mov
sahf
das
jl
inc
push
sbb
decl
add
pop
adc
inc
jp
xchg
das
xchg
jg
pop
pop
mulb
push
js
imul
cs
xorb
jne
inc
xor
fldenv
jb
ret
lret
dec
scas
add
xchg
pop
cmp
or
cmp
addr16
pop
fwait
adc
mov
and
std
push
mov
mov
je
jmp
and
inc
in
push
adc
daa
dec
ror
and
jb
repnz
jns
fnstcw
jne
outsb
movsl
in
jle
mov
fistps
mov
xchg
enter
imul
jae
cmpsl
pop
lds
lods
cmpsb
fistps
xor
jmp
das
pop
add
fnstenv
sbb
and
rcrb
cmc
call
mov
stos
popf
pusha
or
jbe
or
sub
repnz
lock
repz
adc
pop
and
fsubs
dec
jle
cmp
inc
push
shl
mov
cmp
pop
dec
stc
xor
stos
inc
stos
dec
pop
sub
add
inc
adc
xchg
mov
xchg
pop
bound
sub
int
adc
jmp
aas
adc
fs
sub
mov
inc
in
call
sub
test
pop
push
ficoml
mov
xchg
outsl
dec
outsb
sbb
lret
inc
orl
ja
adcl
inc
les
sbb
test
loop
movb
aas
mov
roll
and
dec
inc
sbb
push
loop
shlb
fwait
pop
push
cmpsb
and
push
sbbb
and
cmp
add
ficoml
jno
push
add
inc
repnz
sbb
jno
js
add
and
xor
in
dec
jp
mov
push
adcl
dec
or
in
jo
jbe
adc
add
push
adc
or
adc
add
mov
cli
mov
push
jb
incb
mov
mov
pusha
pusha
es
aam
adc
incb
adc
fs
mov
mov
imul
dec
adc
xchg
mov
fs
mov
mov
gs
cmp
daa
aas
sbb
mov
repnz
lds
and
popf
and
je
mov
xchg
sbb
and
or
xchg
shll
outsl
and
out
xchg
and
dec
sti
sar
mov
adc
nop
ret
mov
inc
adc
cmp
push
and
xchg
push
idivl
pop
sbb
add
fadds
jae
je
test
fcoml
or
mov
add
or
sub
jmp
mov
or
movsl
and
or
dec
fists
mov
adcl
ja
or
testb
test
sub
sub
ja
imul
lea
jl
enter
test
ja
pop
test
push
mov
es
inc
mov
and
mov
inc
adc
test
flds
mov
orl
jnp
imul
and
xchg
push
cmpl
or
push
fmuls
adc
xor
xor
jb
in
mov
in
inc
sti
inc
pop
fs
sbb
adc
and
sub
and
lods
fbstp
enter
dec
cs
popf
scas
jne
aaa
cmp
mov
ret
mov
or
mov
enter
adc
hlt
mov
test
add
divl
pushf
dec
sub
js
push
shlb
and
sbb
test
out
jle
shll
leave
inc
pop
testl
xor
cli
shl
adc
movntq
out
xor
notl
dec
es
roll
pusha
sbbb
jge
lock
call
xchg
push
mov
and
lods
and
sub
cld
cmp
xchg
movsl
xchg
hlt
inc
cli
scas
inc
lahf
rolb
xchg
and
mulb
dec
std
add
jb
sub
and
sbb
nop
add
fs
divl
cmp
xchg
sub
fiaddl
dec
aaa
inc
lea
movsb
and
pop
jle
movsb
mov
pop
std
mov
xchg
insb
int3
push
test
in
ficoml
mov
dec
std
pop
leave
pop
adcb
nop
mov
jno
lods
test
or
movsl
ret
push
sbb
push
js
mov
sbb
push
cli
or
xchg
out
sub
or
or
pop
mov
movsb
jge
mov
imull
cmp
inc
and
ret
adc
mov
or
pop
movsb
out
sbbl
and
pusha
mov
sahf
sbb
add
test
js
and
call
outsl
jns
mov
mov
stos
nop
fmul
inc
jno
jnp
lcall
lret
roll
push
stc
mov
int3
loope
adc
sbb
ret
dec
dec
push
xchg
in
pop
add
xor
mov
sahf
push
enter
mov
aam
mov
mov
mov
pop
icebp
imul
fdivs
leave
fisubs
cwtl
mov
xchg
push
fisubs
pop
mov
inc
enter
ss
xchg
and
enter
mov
jne
mull
in
aam
dec
lock
test
add
mov
mov
pop
jecxz
rclb
call
stos
push
mov
sar
jg
arpl
mov
out
in
icebp
push
xor
imul
or
data16
xor
cwtl
int3
inc
adc
xlat
dec
pushf
rcl
xlat
xchg
xor
cmp
imul
sub
mov
fwait
mov
pushf
pop
imul
push
mov
adc
cmp
addr16
adc
sub
iret
push
jmp
push
lea
dec
dec
lcall
dec
or
sbbb
pop
repz
subb
andb
repz
xchg
in
xor
mov
mov
loop
jne
insb
orb
push
xorb
mov
and
repz
fwait
in
int3
mov
pushf
or
cmp
iret
xchg
jnp
add
imul
ret
mov
mov
stos
adc
outsb
arpl
iret
pop
ds
push
ret
push
jno
jecxz
sbb
lods
les
sub
decb
lds
in
cmp
push
rcrb
in
mov
hlt
pop
sti
jns
loopne
sbb
or
dec
mov
es
daa
inc
jno
scas
xchg
gs
lcall
lods
cltd
mov
push
add
daa
mov
les
push
mov
outsl
hlt
nop
push
addb
add
cmp
xchg
lret
mov
hlt
sbb
fwait
mov
xchg
xor
jp
sub
insl
cltd
dec
in
xor
mov
in
scas
push
or
jmp
pop
push
add
push
frstor
popa
mov
movsl
roll
scas
push
pop
and
push
lret
movsb
std
pop
shlb
dec
sbb
fucomi
gs
loope
hlt
aam
adc
scas
adc
cmpb
mov
xchg
out
inc
add
insl
adc
pop
mov
leave
sub
outsl
call
pop
cmp
mov
imul
lds
cltd
gs
aas
mov
and
repz
dec
xchg
dec
pop
mov
std
arpl
mov
dec
push
sbb
out
pushf
inc
jbe
jne
push
cmp
push
or
int
cld
jp
jns
mov
call
repnz
jb
insb
arpl
sub
repz
pop
or
mov
in
xchg
cmpsl
cmp
xor
add
jae
push
out
sbb
bound
leave
inc
nop
fnstcw
sti
into
mov
imul
cwtl
leave
jge
cld
sub
outsl
fistps
fidivrs
fs
add
and
shll
in
mov
or
mov
testb
xor
in
ja
ret
rcl
push
sbb
sarl
and
pop
adc
jne
rcr
mov
xlat
icebp
test
out
repz
inc
and
xchg
cmpsb
cmp
xor
enter
jge
and
and
arpl
mov
sbb
in
push
mov
push
dec
movsl
pop
mov
and
cmp
add
sbb
xor
jns
jae
ret
or
cltd
dec
sub
loope
data16
test
scas
pop
scas
movsl
loope
leave
bound
jne
mov
or
cmp
addb
loopne
xor
push
aas
sub
test
push
jnp
scas
fsubrp
cwtl
pop
xor
or
std
sbb
mov
ret
roll
pushf
add
sbb
int3
jnp
inc
ss
aaa
dec
in
popa
out
das
add
sbb
in
mov
mov
fimuls
pop
or
pop
xchg
cmp
or
xchg
mov
inc
mov
dec
jnp
lcall
adc
into
rcll
movsb
test
test
jle
push
psrlq
push
out
gs
sbb
xor
pop
call
mov
pop
scas
addr16
adc
lret
pop
adc
inc
xchg
mov
push
cmp
je
aas
xchg
js
ret
mov
testl
addr16
jae
lcall
cmp
add
xor
add
lret
scas
nop
dec
test
pop
daa
fistpll
lret
inc
xor
inc
jmp
sbb
sub
out
cmpsl
dec
and
test
sub
call
push
daa
not
sbb
inc
xlat
sbb
jbe
sub
lea
add
push
push
sbb
or
jmp
dec
cmc
sub
cmp
clc
js
jnp
xchg
int
je
push
jmp
popa
mov
out
fwait
ret
jns
cmpsl
adc
mov
sub
out
xor
icebp
cmp
std
jmp
pop
lret
mov
fisttps
call
ret
jmp
mov
xor
test
mov
lret
mov
movsl
mov
in
push
inc
add
ret
addr16
rcrb
sbb
and
pop
in
cmp
fdivs
xor
xor
sbb
dec
jp
push
mov
cwtl
insb
inc
das
sub
aam
pop
dec
fstpl
fs
std
call
sub
out
add
xchg
mov
aas
push
xlat
sub
loopne
push
inc
push
insl
daa
mov
ret
cmp
mov
adc
cwtl
lea
leave
jg
and
cwtl
xchg
push
das
adc
mov
insl
sti
mov
negl
jnp
sbbl
push
dec
inc
sti
test
sbb
arpl
incb
dec
add
mov
cwtl
int3
mov
data16
js
shlb
dec
inc
add
cli
inc
adc
and
mov
lret
popa
sbb
pop
popa
pop
and
jo
sbb
add
nop
ds
rcll
mov
adc
pusha
push
ret
ret
jns
inc
notb
and
test
cmpsl
jp
inc
sbb
mov
rcrb
call
ja
mov
jmp
lods
lret
add
add
push
in
sahf
dec
and
in
cmp
loop
dec
jne
fildl
das
enter
pop
mov
daa
sub
mov
sbb
adc
sar
sti
pop
jns
repnz
jecxz
dec
js
lcall
add
aas
push
cmpsb
dec
pop
shll
pop
and
stos
cli
std
aaa
pop
outsl
mov
leave
cmp
lds
inc
cmp
add
push
pop
cltd
or
cmpsl
add
mov
xor
dec
adc
xchg
jge
mov
loope
inc
aaa
push
sbb
stos
rorb
pop
sbb
jae
cwtl
sahf
mov
cmpsb
je
pop
aaa
out
inc
xchg
sbb
mov
mov
xchg
mov
jl
or
push
pop
scas
push
mov
insb
das
ss
pop
mov
cmp
scas
lret
inc
mov
imul
ret
push
scas
push
sub
push
out
fcoms
push
gs
dec
in
adc
test
cmp
mov
push
sbb
mov
mov
ss
jae
push
add
jg
pop
adc
mov
pop
cs
in
and
or
pusha
jo
cmp
stos
mov
xchg
dec
cld
movl
cmc
or
cld
pop
xor
in
insl
test
dec
scas
xchg
test
push
leave
xorl
gs
mov
ss
adc
jge
pop
push
pop
xor
dec
jne
outsl
jp
or
mov
cmp
dec
sub
pop
ja
sub
mov
call
sub
dec
mov
es
mov
loopne
dec
outsl
dec
inc
gs
ret
inc
imul
adc
adc
push
loopne
clc
jmp
rclb
sti
testl
int3
or
xchg
jnp
mov
push
test
xor
and
loopne
add
xchg
mov
inc
dec
adc
push
dec
stos
or
sbb
mov
pop
push
scas
push
mov
mov
mov
sbb
mov
push
mov
aad
add
dec
sbb
sbb
addr16
outsb
push
data16
ds
popa
mov
xchg
mov
mov
clc
leave
adc
mov
rclb
es
psadbw
mov
in
in
push
call
popf
add
xchg
pop
xchg
imul
push
inc
cmp
jo
mov
push
fsubl
hlt
cmp
and
pushf
jge
iret
fs
imul
mov
scas
sbb
cs
outsb
aad
xchg
mov
sti
mov
mov
roll
mov
mov
lea
mov
iret
push
mov
out
loope
dec
and
jo
in
add
xor
mov
pop
les
rcrl
lock
lret
jns
dec
les
jmp
mov
push
fs
mov
js
adc
add
out
les
and
dec
cmp
push
sbb
jmp
fstps
popf
bound
jb
clc
imul
cmc
jmp
scas
fwait
gs
pushf
fs
sub
lahf
and
xchg
xlat
es
shlb
xchg
jmp
movsb
sbb
outsb
inc
sbb
mov
arpl
fwait
push
test
mov
or
mov
dec
out
mov
add
pop
adc
es
test
inc
and
fdivr
cmp
pop
mov
cmp
pop
dec
mov
lods
jmp
adc
push
das
jae
sub
mov
in
lahf
inc
and
outsb
and
dec
pxor
cld
pop
push
lods
das
pop
in
jl
pop
sti
xor
aas
ret
loopne
imul
cvttps2pi
inc
clc
loope
fidivrl
test
lods
pop
xor
std
out
das
gs
in
xor
sbb
inc
or
jbe
cmp
mov
ret
int3
cmp
sbb
loopne
mov
mov
sub
push
in
sub
in
pusha
cli
xor
in
adc
movsb
inc
sbb
fsubrl
sbb
sti
scas
pop
push
std
and
jne
pop
mov
arpl
dec
pop
xor
iret
sti
ret
ja
test
stos
pushl
add
xchg
pushf
rorl
hlt
cld
dec
mov
adc
dec
out
lods
movsb
jmp
fwait
mov
jp
sbb
push
xor
test
stc
cmc
jl
jno
inc
rclb
push
cmc
inc
sbbl
fsubl
shl
mov
xchg
pop
or
test
add
xchg
xchg
mov
sub
ret
pusha
aas
xchg
xor
ret
mov
rcll
push
jb
mov
sub
and
add
or
pop
lods
and
jae
pop
fwait
and
push
pop
dec
jmp
mov
push
in
add
icebp
xchg
pop
fcomp
into
fsubr
mov
outsl
hlt
xchg
pop
jo
push
icebp
scas
popa
bound
sbb
lods
dec
xor
xchg
lods
loop
lods
jae
jno
pushf
adc
inc
lcall
ss
ja
pop
inc
xchg
push
int3
sub
into
fsts
fcmove
push
or
in
sahf
lock
lahf
push
xor
insl
hlt
push
test
in
enter
cmc
mov
dec
jno
xor
jb
sub
mov
roll
pop
testl
ret
test
or
adc
es
insl
mov
fists
mov
mov
test
mov
cwtl
mov
pop
xchg
enter
dec
sub
addl
cmc
sub
pop
add
xorl
jne
push
sub
ret
and
shrl
sbb
cmpsb
gs
mov
arpl
cmp
je
jecxz
addr16
lcall
fldl
push
lock
fstps
cmp
jg
mov
jmp
dec
mov
xlat
xchg
jl
rorl
cmp
mov
sbb
mov
dec
fildl
arpl
ljmp
es
inc
pop
shlb
call
fmuls
xor
lret
shlb
jae
add
xchg
outsl
jle
cld
adc
push
mov
mov
pop
pop
dec
mov
push
jle
test
fdivrs
xchg
pop
jae
cs
jge
call
adc
outsb
jne
jle
push
cwtl
test
je
sub
rclb
inc
push
jp
shlb
adc
xchg
cltd
lods
jg
data16
adc
lds
pop
add
test
dec
mov
inc
stos
sub
ret
mov
push
sub
lods
nop
and
sbb
mov
cwtl
or
fsts
pop
xlat
and
inc
add
adc
nop
std
cmc
scas
pusha
test
push
stos
das
push
imul
push
inc
test
mov
mov
loop
inc
sbb
inc
jno
mov
dec
imul
or
lret
arpl
mov
stos
mov
data16
cmp
mov
push
mov
mov
test
cmc
push
clc
mov
inc
test
fdivs
push
shrb
inc
pusha
dec
mov
pop
test
iret
inc
or
mov
cmp
mov
and
roll
clc
aas
sbb
stc
and
das
xchg
decb
mov
int3
pop
jbe
movsl
mov
cmp
jb
std
and
or
jecxz
push
mov
shl
fmul
mov
nop
andb
pusha
xchg
dec
sbb
mov
push
xlat
xor
push
cmp
jb
or
mov
scas
fisubl
xor
dec
jle
mov
sub
push
pushf
sub
mov
sub
xchg
sahf
and
fwait
xor
jle
lods
cmp
cmp
mov
lahf
cwtl
dec
jno
jle
push
in
mov
pop
or
mov
inc
mov
xorl
inc
int3
jecxz
sti
and
sti
xor
in
adc
jns
dec
test
ret
inc
lea
cmp
fdivrp
in
sub
icebp
adc
pop
loopne
and
xor
rcrl
cmpsl
ret
adc
add
cmc
sub
pop
movsb
imulb
xchg
xor
jb
aad
cmp
inc
imul
add
pop
jo
adc
aad
pop
ds
sahf
mov
lock
out
cmp
icebp
loopne
iret
scas
mov
negl
adc
fcompl
or
loop
fistps
ret
sbb
ficompl
mov
mov
cltd
pop
shrb
fistl
jae
pop
pusha
aam
jl
mov
aaa
pop
aaa
das
cmp
ljmp
jno
fwait
lods
pushf
stos
mov
xchg
pop
stc
fdivrl
in
fwait
mov
xchg
jo
mov
lret
or
inc
imul
aas
push
mov
xchg
fldt
es
cld
mov
lea
cmpsl
push
jecxz
shrb
jge
mov
dec
pop
fxtract
scas
rcrl
push
fstl
mov
dec
adc
lods
push
push
cmp
jp
nop
js
mov
dec
data16
sub
dec
ja
lea
sbb
popa
outsb
push
dec
mov
mov
push
stc
and
add
mov
jmp
dec
jns
fimuls
daa
orb
test
inc
lcall
fsubs
xor
push
lret
repz
sub
push
xor
test
cwtl
push
shl
fwait
lahf
inc
dec
dec
pop
mov
mov
xorb
cmpl
xlat
aas
push
cmp
ret
adcl
out
mov
sub
xor
movsl
and
mov
sbb
popf
dec
popa
negb
mov
repz
inc
and
jl
jo
mov
add
fdivs
dec
scas
xlat
cmp
decb
or
sbb
pop
pop
push
movsl
test
push
scas
sub
sahf
andl
sub
cltd
xchg
fucomi
or
arpl
imul
xchg
shll
repz
jnp
daa
imul
mov
jbe
inc
pop
sbb
adc
stos
sbb
sbb
cmp
pop
pop
movsl
xor
xchg
pusha
jle
jnp
push
inc
fs
shrb
add
cmp
mov
push
aaa
mov
adc
xchg
push
push
sbb
mov
push
dec
lds
inc
lock
lret
add
sahf
scas
in
mov
jp
sub
xchg
cltd
das
mov
hlt
fmull
dec
add
and
stos
push
scas
jmp
ficompl
outsb
shlb
cld
and
aas
in
sub
push
sarl
pushf
sub
sbb
pop
adcw
and
lret
push
jnp
aaa
leave
add
xchg
and
in
inc
push
rorl
xor
adc
jmp
in
idivl
mov
xor
daa
mov
cld
push
stos
aam
mov
dec
in
or
aad
leave
mov
pop
test
dec
sbb
insl
push
xor
outsb
adc
repz
shrb
pop
loop
xlat
pop
ss
dec
sbb
adc
xchg
gs
mov
mov
nop
mov
or
adc
out
cmc
inc
lods
dec
cmc
and
scas
leave
jl
pop
dec
push
stos
subl
leave
jo
mov
daa
and
movsl
fimuls
sub
pushf
pop
xorb
or
shl
stos
mov
pusha
push
push
addr16
dec
test
sbb
cmpb
pop
and
jl
ja
jo
fldl
nop
xchg
imul
into
push
pop
cmpb
mov
fwait
rclb
scas
sub
jg
das
fst
sbb
jb
mov
ret
outsl
cltd
ljmp
sub
xchg
std
jb
push
movq
xchg
inc
or
mov
enter
jmp
mov
push
lret
dec
mov
cmp
je
pop
imul
adc
or
pop
jns
sbb
roll
cmc
sub
mov
addr16
mov
and
sub
nop
pop
sbb
inc
aad
cmp
xor
in
test
cmpsb
add
cmp
stc
jg
or
sub
inc
fldlg2
cmp
or
rcl
notl
pop
pop
mov
dec
outsl
jns
adc
xor
rclb
and
int
jno
push
dec
sahf
bound
cmpsl
xchg
out
cli
test
leave
xchg
in
dec
jns
in
push
mov
es
or
cmp
sahf
icebp
fxrstor
lea
xchg
mov
out
sub
fsubr
mov
push
fsub
and
jae
inc
xor
or
jp
sub
aam
dec
mov
aas
nop
scas
andl
push
arpl
jo
out
add
cmp
push
aad
mov
ret
push
cmpsl
xchg
and
mov
std
add
out
int
pop
xor
push
inc
imull
push
dec
dec
xchg
imul
shll
negb
fiaddl
decl
mov
subl
aam
psllq
fsubs
add
inc
and
cmc
cltd
push
pop
cmp
pop
cmp
mov
in
shlb
repnz
pop
push
mov
scas
das
mov
push
sbb
fs
aaa
iret
xchg
aad
stos
dec
xchg
in
adc
sub
daa
daa
imul
mov
xor
jle
iret
jge
insb
dec
repnz
mov
add
cmp
in
mov
imul
xchg
jl
push
mov
clc
jg
leave
divl
mov
jo
dec
xor
push
inc
mov
fwait
xchg
and
rcl
and
repnz
stc
rol
iret
add
or
cmp
scas
cltd
add
mov
fsts
mov
icebp
mov
push
jmp
sub
mov
dec
jp
jmp
mov
cmpsb
fildl
ljmp
movsb
call
xor
sarb
pop
test
pop
call
fcmovnbe
adc
out
out
fldenv
cmp
loopne
or
fnstenv
sbb
inc
sbb
lock
cmp
pushf
fisubrl
jae
sbb
adc
sub
in
push
scas
bound
and
cmp
call
mov
nop
outsb
push
push
jge
sub
or
or
popf
orps
xchg
pop
dec
insl
and
xor
cmpsl
xchg
dec
cmpb
int3
push
shrb
xchg
subb
dec
lods
mov
mov
pop
fdivr
dec
mov
add
test
cmp
and
test
popf
scas
bound
in
int
in
xor
xor
insb
mov
push
jg
test
sub
mov
cmp
and
cmpsb
push
std
pop
adc
jl
sbb
fmull
aad
jecxz
mov
lods
mov
imul
cmpl
data16
dec
aad
div
ja
out
adc
in
mov
lea
nop
test
ja
push
in
int
ret
sbb
pop
add
pop
or
in
cltd
mov
lret
test
jle
add
dec
push
xchg
jbe
xor
xchg
out
jmp
enter
stos
cmp
push
scas
fisttpll
and
add
nop
mov
es
and
jb
push
mov
and
mov
sbb
adc
push
ss
test
leave
dec
adc
je
dec
loopne
adc
dec
xchg
daa
xor
sbb
out
imul
mov
jno
insb
dec
fsubrl
rolb
or
or
out
mov
shll
push
fcmovnu
fmull
inc
sub
ffree
and
dec
call
or
mov
fs
ss
mov
repnz
test
jp
test
test
test
lods
insl
pop
out
nop
push
sbb
push
push
mov
in
ljmp
dec
repnz
insl
fcomp
xor
push
dec
push
mov
ds
es
lret
or
filds
in
pop
and
sub
insb
loope
or
push
pop
lock
mov
and
push
xchg
mov
push
pop
push
cmp
or
xchg
fisttpl
dec
add
sub
mov
or
test
lods
sub
out
or
lahf
adc
sbb
mov
leave
mov
sub
xor
call
bound
and
ja
or
loop
inc
call
xchg
xor
sbb
repz
je
insb
mov
or
jb
mov
mov
xor
rol
inc
or
jbe
xchg
xchg
std
div
pop
pop
mov
mov
pop
mov
int3
adc
outsb
inc
lock
loop
pushf
push
xorl
hlt
pop
cmc
xchg
push
xchg
adc
cmpsl
stc
daa
pop
push
sub
mov
sbb
jg
je
jecxz
addb
xor
enter
pop
pop
mov
inc
das
cmp
dec
lods
dec
test
pop
mov
xor
mov
mov
sbb
push
imul
iret
add
fwait
jae
jo
out
jbe
jmp
dec
xchg
fdivl
mov
xchg
imul
add
or
xchg
xchg
mov
mov
jb
pop
jb
mov
sarl
sub
dec
daa
dec
inc
mov
andb
or
xor
mov
or
cmpsb
hlt
pop
sbb
out
mov
insb
or
out
out
sbb
add
clc
test
sub
mov
mov
mov
mov
repz
sbb
stc
inc
push
orl
nop
fnclex
inc
jo
or
mov
mov
push
lock
test
dec
popa
or
xchg
add
sbb
sahf
and
xchg
shll
leave
jns
cmp
rol
and
out
ljmp
inc
dec
int3
pop
mov
int
out
dec
fsubr
loop
outsl
aam
jg
push
push
cltd
icebp
pop
and
pop
in
ss
cmc
js
fucom
dec
push
mov
cmpsb
inc
lds
loopne
dec
stc
jnp
dec
xchg
ret
and
and
mov
adc
out
gs
in
addr16
popf
dec
lret
or
das
sbb
xor
loope
cmp
or
jle
test
xchg
mov
or
in
push
pushf
fimull
aam
pop
enter
or
add
jecxz
xor
fs
inc
aaa
xchg
icebp
and
das
cvtdq2ps
jne
lods
push
mov
lret
js
mov
pop
mov
mov
lcall
daa
sbb
sti
xor
scas
adc
sbb
push
lods
out
or
in
push
fs
jmp
loopne
inc
out
sub
ja
jo
cmp
xor
sti
test
adc
ja
xor
jge
mov
push
push
out
pop
std
ds
xor
sub
pop
adc
loop
pop
mov
outsb
xor
mov
cli
dec
je
out
aad
mov
mov
ljmp
push
jmp
dec
or
aaa
mov
clc
test
pop
movsl
outsl
test
jnp
aaa
insl
push
sbb
lret
js
sbb
push
mov
fsubs
pushf
jmp
lods
push
in
pop
mov
dec
inc
pop
mov
pusha
xchg
into
xchg
mul
iret
push
push
cmpsb
mov
iret
ss
cmp
int3
inc
aam
xchg
jge
jno
insb
lea
push
dec
mov
xchg
mov
int
rclb
loopne
jmp
cmpsb
icebp
or
sbb
sub
add
inc
popf
add
cmp
xor
sahf
mov
ja
fxam
add
fdivrs
cmp
outsb
xor
jp
jle
xor
mov
xor
xchg
jmp
iret
and
cmp
lea
push
and
inc
push
add
lods
popa
repz
test
repz
sub
mov
fcmovnb
je
mov
divl
cmp
mov
xchg
fs
mov
cmp
or
repz
mov
mov
adc
push
xchg
xchg
sbb
enter
jp
inc
add
adc
lods
jb
xchg
sub
sub
lcall
mov
in
xchg
stos
dec
add
mov
loope
rclb
lds
xchg
lods
pop
cmp
xchg
pop
popf
mov
cmc
nop
cltd
pop
enter
mov
cmp
push
fdiv
pusha
and
adc
pop
test
jb
lea
cmp
sti
xor
xchg
push
bound
sub
aas
jp
lods
adc
pusha
bound
jp
pop
pop
mov
mov
add
or
dec
pop
adc
pop
mov
jecxz
repnz
fildll
in
roll
push
bt
and
pop
repnz
jg
sub
mov
push
jmp
sub
popf
xchg
dec
xchg
iret
inc
pop
sbb
aaa
je
pushf
sbb
lods
iret
sti
mov
inc
aad
inc
aaa
cmc
inc
mov
test
dec
sbb
es
adc
cmp
nop
enter
icebp
lods
cmpsl
mov
mov
pop
adc
adc
pop
mov
mov
mov
mov
jne
pop
cmpsb
inc
pop
lahf
mov
xor
in
into
jmp
in
adc
add
inc
pushl
in
cmp
dec
xchg
notb
mov
inc
ja
mov
push
xor
xor
jp
inc
inc
fdivl
pop
pop
adc
mov
ret
fs
pop
in
into
repz
xor
inc
mov
and
in
jg
or
fisubl
lods
adc
or
cwtl
cmpsb
lahf
sub
mov
sub
daa
repz
adc
jg
jne
ja
mov
and
repz
and
jecxz
lahf
fnstsw
or
ss
aam
sub
xchg
push
and
mov
jns
xor
push
jae
lcall
insb
and
jno
jge
scas
int3
and
ss
and
jne
push
mov
or
push
das
enter
loop
ficoms
jno
sbb
xor
negl
lret
dec
sarb
cwtl
cwtl
mov
sub
jmp
mov
cmp
fimull
or
cmpsl
jmp
incb
cmc
or
arpl
jbe,pn
addb
mov
push
les
scas
aam
inc
addr16
mov
test
insb
cmp
dec
mov
ljmp
jbe
out
jg
inc
in
pushf
dec
cmp
cltd
aaa
popf
push
nop
inc
sub
aam
adc
adc
push
jge
push
mulb
repz
testb
and
dec
jp
test
dec
xchg
lret
fs
movsl
and
mov
ret
mov
test
mov
clc
jp
enter
push
add
inc
jp
dec
sbb
je
inc
ja
sti
outsl
aas
jb
pop
daa
push
and
call
sahf
aad
dec
cwtl
enter
sarl
add
inc
data16
in
mov
mov
leave
and
inc
jnp
movsb
movsb
mov
sbb
mov
cmpb
sti
jb
or
xor
out
in
icebp
push
movhps
adc
sbb
inc
push
shll
and
js
fiadds
adc
ret
lods
add
cmp
call
cmp
lret
cmp
pop
mov
mov
pop
sub
sub
insb
inc
jae
lret
add
scas
vmovd
out
jge
call
scas
fistpl
ror
aas
jno
inc
xor
xchg
add
push
cmp
stc
jbe
repz
loope
pop
hlt
aas
sub
popf
popa
popf
jge
rcrl
xorl
adc
push
and
fsubr
ja
stos
inc
cmp
xor
mov
xor
jae
jns
jns
cmp
fxch
rcl
sub
imul
xor
inc
adc
sbb
jb
jecxz
cwtl
outsb
lcall
mov
int3
es
pusha
leave
inc
rorl
daa
push
push
loopne
in
cmp
pusha
xor
push
pop
or
adc
dec
nop
out
jns
push
or
test
movsl
outsb
icebp
sbb
jno
push
mov
jle
outsb
pushf
outsb
fisttps
add
inc
cmp
add
xchg
loopne
mov
and
dec
shll
fwait
gs
shlb
pop
enter
adc
mov
loopne
add
pop
leave
int
mov
insl
dec
jg
xor
pop
add
or
push
adc
xchg
sbb
fsubs
dec
inc
lea
jle
mov
push
shll
icebp
sarb
sbbl
dec
xchg
pop
mov
into
xchg
jne
or
pop
mov
insl
out
xorl
mov
push
push
lods
addl
push
push
call
fstps
pop
jbe
in
jnp
or
adc
scas
ret
fbstp
insl
iret
add
sti
aad
fdivr
inc
push
push
cmp
data16
movsl
mov
cltd
hlt
lods
lea
roll
ret
inc
xchg
pop
inc
inc
lods
sti
mov
in
addr16
lods
dec
and
in
cmp
ljmp
push
dec
popf
adc
fwait
add
ja
mov
rcrb
daa
fadd
scas
test
xchg
jno
cmp
cmp
gs
aaa
nop
leave
in
loop
sub
push
pop
and
outsl
cmpl
in
sbb
out
inc
dec
data16
pop
dec
std
aaa
cmpsl
mov
hlt
test
add
out
jae
jg
jae,pn
and
cmp
mov
pop
adc
mov
shlb
lahf
popa
cmpl
cmp
mov
ja
and
out
mov
xor
sub
loopne
push
insb
mov
lret
aas
hlt
cmp
pop
es
mov
aaa
xchg
imul
jo
inc
xor
pop
or
cmp
xchg
iret
dec
mov
inc
and
push
xchg
xchg
stc
loopne
push
or
mov
into
and
in
stc
inc
daa
sub
xorl
push
adc
insb
mov
jb
xchg
iret
fistpll
jmp
add
decb
push
inc
shl
inc
jg
jp
cmc
js
and
sub
jle
mov
loop
push
andb
fnstcw
fnsave
and
lahf
repz
aam
inc
repnz
or
test
lods
enter
lock
andl
into
inc
lea
stc
jge
push
out
pusha
inc
in
mov
imul
cmp
jo
sub
mov
jae
out
mov
add
insb
push
lahf
xchg
lcall
xchg
jno
or
fs
insb
test
mov
xchg
pop
loop
sbb
lods
imul
mov
mov
inc
std
mov
fildll
and
mov
jg
sub
xor
and
cmp
or
fdivr
js
push
out
imul
dec
or
gs
xchg
lock
in
in
repz
rcr
aam
cmpsb
lahf
outsb
mov
and
sub
bound
inc
lock
das
cmp
je
fdivs
fwait
movsb
cld
sbb
cmp
xor
jno
jge
push
stos
mov
fucom
jnp
jp
fdivl
sbb
scas
sbb
ja
in
jae
in
in
add
xchg
push
xor
aad
fdivrs
stos
sbb
push
aaa
repnz
lea
imul
xchg
mov
push
mov
scas
cmc
jle
lret
hlt
xor
sbb
es
jnp
mov
inc
inc
sti
aam
dec
or
and
mov
insb
mov
fcmovnu
dec
bound
jl
sub
dec
push
jl
cli
setge
jne
mov
pop
gs
pop
imul
push
fs
fwait
mov
mov
lahf
adc
sub
popa
inc
pop
cmc
out
add
and
cmp
gs
inc
or
sahf
jmp
xchg
mov
mov
mov
je
arpl
jae
lods
add
fidivl
sbb
mov
inc
popa
xor
shll
icebp
fwait
jb
add
loope
xor
cmp
sbb
aam
lea
xchg
vpaddd
jle
mov
jl
rcl
pop
cmp
add
cmpsl
pop
lods
mov
cld
push
mov
inc
movsl
xchg
add
repnz
lods
add
fsubs
out
cmpsl
js
push
fcoml
dec
mov
imul
cmpl
inc
pop
pop
push
and
aaa
data16
jb
or
mov
popf
lahf
adc
inc
loopne
pop
mov
sub
push
add
inc
or
jae
sub
clc
push
cmp
lret
sub
xchg
into
mov
or
stc
out
xor
rclb
xor
push
cltd
out
sahf
ror
xchg
out
mov
loopne
pop
pop
push
insl
jno
sbb
aas
xor
xor
int
in
sub
mov
test
pop
out
cld
outsl
inc
insl
mov
fidivl
fsubrs
and
sub
add
pusha
xchg
inc
aas
outsb
insb
xchg
inc
pop
add
xor
sub
shll
lock
rol
inc
push
add
add
ss
scas
sbb
push
lret
mov
ljmp
jo
pop
pop
pop
fdivr
clc
repnz
inc
xchg
xchg
jecxz
and
pop
xor
mov
sbb
push
push
mov
xlat
jbe
mov
sbb
shrb
mov
add
sbb
push
jb
aad
mov
insl
push
adc
xchg
pop
pop
sub
divl
imul
aad
mov
xor
jle
sbb
into
fistpll
jno
pop
lods
mov
pop
and
and
lds
add
mov
lcall
or
jns
sti
jno
push
je
cmp
out
mov
imul
mov
add
into
inc
add
fldl
stos
shrb
test
orb
fbld
mov
xlat
push
lret
xlat
sbb
aas
pop
ds
mov
leave
push
push
dec
mov
add
test
add
mov
and
leave
push
dec
mov
and
sbb
pop
adc
cwtl
out
pop
std
in
push
jecxz
test
movl
push
pushl
push
xchg
adc
jno
pop
push
add
mov
add
sar
ljmp
cmp
aas
push
decb
bound
dec
mov
jo
mulb
pop
add
dec
repnz
or
inc
push
mov
ja
xchg
mov
jb
movsl
mov
adc
movsb
arpl
test
je
jb
mov
ds
sbb
push
bound
dec
mov
pop
jae
decl
dec
sbb
and
xchg
clc
mov
mov
xchg
pop
ds
jno
mov
push
sbb
rcll
mov
ljmp
aad
xchg
idivl
push
ret
add
leave
mov
je
inc
xor
enter
ja
push
jno
cltd
dec
je
sub
push
mov
jbe
aam
mov
into
inc
movsl
adc
cwtl
lret
fsubrs
add
gs
sbb
pop
xchg
in
sbb
xor
mov
adc
es
js
scas
pop
cmp
inc
fadds
mov
dec
mov
pop
dec
or
push
dec
adc
aas
mov
push
daa
ss
pop
test
ret
jl
out
mov
pop
xchg
mov
adc
push
fistpl
push
pop
js
arpl
adc
and
notl
test
adc
shlb
movsl
xor
popa
addr16
cmp
fsubr
pop
or
pop
pop
dec
lods
jg
loopne
sbb
or
cmp
loopne
test
jmp
idivl
cs
call
dec
rcr
shl
jecxz
inc
fadds
lock
dec
xor
gs
push
imul
inc
add
mov
loop
or
xchg
sub
inc
jne
daa
loop
adc
push
xchg
push
cmp
call
pop
push
cmp
cmp
test
xor
stos
jns
icebp
dec
jge
xor
cli
loop
fnsave
loopne
jo
push
mov
pop
lods
repnz
mov
or
sbb
and
or
or
inc
xchg
movsb
daa
cwtl
enter
mov
into
pushl
add
pop
andb
jns
push
mov
ss
outsb
sub
push
lcall
pop
loope
cwtl
pop
rolb
push
dec
push
pop
pop
cltd
enter
js
dec
lcall
or
xchg
aaa
sub
sbb
mov
outsl
lret
adc
cmp
push
jae
sbb
sub
mov
mov
inc
dec
xchg
inc
sub
add
test
aaa
or
mov
les
in
dec
pop
adc
test
fimull
cmp
xchg
pushf
std
push
mov
mov
cmc
jg
and
ret
xorl
enter
dec
fisttpll
mov
out
pop
arpl
test
adc
adc
push
test
jne
xchg
mov
repz
into
and
jle
dec
mov
mov
xor
push
imul
mov
lahf
lea
add
sbb
loop
mov
jno
mov
mov
and
and
test
or
ret
push
fs
push
fisubrl
icebp
jae
inc
mov
cmp
in
in
pop
and
dec
add
outsl
cltd
ds
and
int
rcrl
push
ret
add
cvtps2pi
dec
jne
mov
out
sub
adc
sub
adc
cmp
add
cmp
cmp
loop
rcll
adc
clc
mov
loopne
push
stc
pop
xor
cmp
cmpsb
add
xor
add
dec
inc
cmp
mov
lea
hlt
lods
pop
add
movsl
xchg
xlat
xchg
fdivl
push
mov
push
mov
stos
mov
pop
shll
sbb
xor
test
rclb
push
shlb
pop
fistps
or
jl
sbb
pop
fnstsw
rorl
push
shr
inc
or
pop
lods
mov
lock
sub
jbe
lods
fisubrl
cltd
mov
jae
sbb
pop
jp
or
mov
pop
in
pop
jmp
cmp
xor
xchg
sbb
mov
ds
clc
out
sbb
sbb
sbb
lcall
cmp
push
pop
cmp
xor
or
push
push
mov
push
mov
add
jmp
ds
jmp
les
xchg
movsl
imul
in
jb
mov
jns
popf
mov
push
and
add
adc
sbb
lcall
mov
add
and
mov
insl
mov
mov
and
stos
push
or
pop
jmp
sbb
mov
call
push
pop
movsl
insb
sub
inc
and
dec
es
push
mov
jb
call
fdivs
jo
jno
pop
jle
das
les
or
mov
pusha
call
sti
jg
lret
cmpsb
es
jns
enter
testl
addl
inc
jno
and
push
lcall
nop
pushf
ss
jl
call
push
mov
test
jp
jecxz
inc
inc
adc
int3
iret
iret
push
xorb
xchg
test
ret
or
popf
mov
mov
fwait
les
mov
ja
xlat
push
roll
outsl
sbbb
sub
lret
adc
pop
dec
cmp
xchg
dec
inc
nop
jge
rcrl
inc
fwait
lods
lods
push
out
jae
leave
add
loope
or
outsl
jle
push
sbb
fadds
and
repnz
inc
push
xchg
insb
lods
es
mov
aas
adc
hlt
sub
cmp
dec
pop
cwtl
xor
cmp
sbb
pop
ret
loop
dec
cmp
jnp
fldenv
nop
pushf
pop
sbb
xchg
jae
cmp
sub
xchg
cwtl
jmp
dec
into
popa
sbb
dec
lcall
push
in
jl
jne
pop
movsl
jbe
daa
jae
push
jbe
sub
fstpt
jbe
pushl
add
jg
cmp
insb
xchg
je
sbb
fstl
int
adcl
and
adc
rclb
xchg
int
xchg
es
test
push
dec
jno
int3
js
and
icebp
sbb
out
pop
and
jo
stos
fisttpl
adc
mov
loopne
je
sub
imul
data16
and
push
in
mov
mov
std
mov
mov
mov
inc
sbb
or
mov
push
out
jae
mov
imul
mov
inc
popf
inc
xor
cwtl
repnz
jecxz
test
test
add
push
cmpsl
jmp
push
daa
inc
sub
push
add
dec
and
cwtl
dec
jl
out
int3
pop
clc
push
xchg
stos
sub
xchg
bound
sub
js
repz
xchg
xchg
lahf
or
or
cmp
mov
or
hlt
andl
rolb
xor
xchg
sub
dec
rcl
out
cmpsl
aaa
fmuls
xor
xor
imul
pop
sbb
sbb
pop
adc
xchg
imul
sub
adc
xor
in
xor
icebp
or
dec
jbe
sub
sub
loope
sbb
dec
push
adc
adc
cmpl
negb
scas
push
pop
arpl
cmp
pop
cmp
adc
xor
js
and
add
jne
jne
cmp
dec
sbbb
movsb
mov
sbb
repz
in
sti
test
ret
add
pop
ror
js
aam
lods
inc
mov
or
jle
sub
dec
daa
xor
dec
and
ret
pop
subb
call
jmp
adc
out
or
cltd
fnstsw
hlt
mov
dec
outsl
push
xchg
enter
mov
inc
in
sahf
leave
out
sbb
xchg
push
xorl
mov
dec
jbe
out
lods
jo
mov
jbe
jns
test
data16
test
movsb
pop
clc
popa
inc
les
insl
push
mov
pusha
js
lahf
popa
cmp
mov
enter
cltd
cld
ss
fsts
ret
jg
jne
call
fstpt
js
clc
xor
sbb
jge
jmp
mov
jg
ljmp
mov
fstpt
dec
mov
nop
sbb
sbb
mov
ret
out
imul
add
mov
push
cs
pop
cmp
in
in
test
lock
push
inc
mov
daa
lea
xor
fsts
inc
fisubrs
push
nop
xor
inc
adc
mov
mov
loop
mov
xlat
jecxz
ret
mov
mov
cwtl
mov
jae
xor
xchg
sub
pop
dec
pop
insb
mov
shlb
push
cmc
add
push
repz
or
in
xorl
ficoml
inc
test
icebp
mov
lods
mov
addr16
shll
bound
mov
addr16
jo
sub
inc
sbbl
adc
lods
outsl
mov
xchg
mov
shrb
out
mov
test
pop
xor
adc
dec
repz
push
inc
pop
dec
pushf
jne
adc
jl
inc
inc
pop
or
xor
popa
mov
pop
push
xor
adc
mov
xchg
push
gs
repz
sahf
fidivrs
rorb
shr
push
xlat
lea
mov
and
add
add
jnp
mov
mov
xchg
dec
mov
sbbl
mov
and
or
xor
inc
cltd
iret
xlat
push
and
popa
sbb
repnz
jae
cmp
adc
or
and
loopne
out
adc
bound
ucomiss
in
sbb
test
fstp
aam
aaa
test
cmp
jl
std
ja
es
push
lods
clc
bound
subl
aad
sub
les
bound
or
loope
jne
jnp
loop
repz
cmp
fistps
xchg
dec
ret
ljmp
scas
ja
sbb
xor
push
dec
cltd
adc
out
test
push
xchg
icebp
sub
pop
jns
jbe
xor
sub
mov
push
outsl
cmp
push
push
shll
cmp
mov
shll
sub
mov
lds
iret
lods
inc
mov
add
pop
int3
roll
add
push
jl
cmp
lahf
addl
jno
es
and
inc
std
fbstp
fdivrs
mov
push
jbe
enter
or
ds
cltd
inc
and
mov
int3
mov
leave
cli
cltd
ss
icebp
xchg
xor
cmpsl
cltd
test
push
push
mov
and
shrb
sbb
subl
push
je
ds
aas
adc
idivl
push
xchg
push
or
mov
mov
jno
icebp
pushf
mov
sbb
jmp
mov
arpl
mov
movsb
inc
out
push
int
jno
push
leave
dec
push
cltd
cmc
js
icebp
mov
ret
aas
and
fadds
mov
mov
jns
fcomps
and
out
loopne
jne
push
loopne
fnstenv
pop
shll
and
sbbl
int
insl
enter
jl
cmc
adc
jbe
dec
pop
adc
jno
adc
gs
test
inc
cmpsl
frstor
test
subb
fwait
or
add
js
dec
xchg
enter
or
sub
dec
popf
mov
aas
and
mov
pop
pop
dec
cmp
push
pop
and
cld
clc
pop
mov
xchg
lods
mov
xchg
and
cltd
movl
fdivrp
daa
cld
cli
fdivrs
das
mov
aaa
add
mov
pop
test
movl
pop
test
lret
cmp
pop
mov
or
scas
sub
push
int3
cmp
imul
xor
sub
mov
icebp
cmp
sbb
repnz
into
xchg
pop
insl
push
cmp
push
and
add
sub
sub
push
xor
sahf
andb
add
scas
dec
and
mov
push
ret
sahf
test
sbb
sub
jae
mov
mov
stos
push
lret
test
sbb
clc
xor
orl
mov
fsubs
notb
pop
std
cmp
dec
xor
aas
jle
lock
ja
je
mov
sub
js
and
mov
sub
pop
adc
inc
and
inc
add
xor
sub
pop
jbe
jbe
sti
push
fistpll
mov
sbbb
sub
ja
xor
cld
mov
inc
out
adc
xchg
xchg
xchg
in
imul
mov
push
dec
adc
pop
dec
andl
and
fistpll
scas
inc
dec
ficompl
gs
cwtl
imul
sub
and
lahf
repz
adc
loope
cmpsb
movsl
ret
les
gs
adc
mov
add
fstps
scas
jecxz
nop
stc
jmp
mov
imul
stos
popa
addb
pop
inc
mov
lods
cmp
rcrl
pushf
push
dec
sub
dec
adc
imul
pop
cmp
sbb
sub
enter
jbe
fidivs
out
sbb
cwtl
lahf
mov
dec
in
testb
stos
xchg
inc
dec
inc
mov
sbb
jg
fadds
mov
push
stos
adc
imul
pop
test
movsb
pushf
jp
sti
test
jmp
enter
add
cs
jmp
adc
sbb
mov
les
dec
dec
ret
xor
push
hlt
fists
mov
stos
xchg
pop
call
cmp
jne
pop
fsubrl
mov
outsb
sub
jae
push
push
or
xchg
sbb
push
push
dec
ret
icebp
mov
adc
into
mov
xchg
cmpsl
repnz
add
ffree
cmp
jge
das
cli
test
add
adcb
loopne
stc
mov
je,pn
hlt
sub
dec
pop
bound
dec
inc
dec
rcl
insb
xchg
test
rcrb
cld
imul
cmp
push
push
mov
nop
decl
xor
xchg
sub
addl
fcomps
int
loopne
and
pop
ja
lea
lods
sbb
inc
jmp
dec
or
cmc
js
jns
mov
lods
sub
shll
mov
pusha
cmpsb
pop
dec
ret
jo
repz
outsl
cmp
pop
pusha
cmp
cmp
push
je
sub
iret
out
and
dec
mov
repnz
clc
in
notb
dec
loopne
add
aas
xchg
fnstenv
sbb
loope
lods
fisubl
ror
aad
movsl
pop
sbb
mov
adc
into
ds
out
mov
or
stos
cmc
mov
push
shrb
dec
sar
xchg
cmpl
xchg
xlat
es
sbb
sub
ja
popl
fldt
push
ljmp
cwtl
mov
mov
jae
dec
pop
rolb
ljmp
mov
fisttpl
movsl
call
jg
int
dec
loopne
rcr
jmp
push
aad
lcall
jne
adc
push
jl
and
xchg
and
in
or
sub
pop
sti
clc
jmp
adc
mov
push
sar
jae
jns
dec
xor
popf
sbb
xchg
les
dec
pop
dec
outsb
enter
addl
jno
xchg
clc
pop
leave
bound
loopne
and
xchg
fiaddl
imul
aas
pushw
lret
loope
out
mov
movsb
rcrl
clc
andb
aaa
xchg
frstor
scas
dec
sbb
fdivrp
jl
lock
mov
cmp
mov
fmuls
and
jp
loope
adc
dec
inc
scas
cmc
insb
ficoml
loop
lods
cmp
cltd
mov
or
fidivl
into
sbb
sub
out
movsb
push
ret
sub
adc
mov
jbe
mov
mov
mov
add
jne
scas
push
and
lret
cmc
xchg
mov
pop
orl
fwait
adc
sub
mov
sbb
and
stos
inc
add
int3
mov
outsb
pop
and
sub
shlb
idivb
fwait
addr16
pop
lahf
push
cwtl
lea
adc
clc
push
stos
mov
jecxz
or
inc
nop
pusha
xlat
icebp
jno
pop
push
dec
add
inc
lods
sbb
aaa
adc
ja
int3
mov
or
outsl
jg
inc
es
jl
dec
popa
iret
ret
or
lea
cltd
mov
les
mov
aas
adc
mov
sub
dec
jne
pushf
fldenv
subb
aaa
lods
push
aaa
mov
cmpsb
nop
sub
roll
rorb
fstpl
fldenv
mov
inc
jne
hlt
xchg
aad
pop
and
sbbb
push
lock
push
nop
ss
jb
cmp
pop
adc
sbb
out
add
ss
xchg
xor
dec
sbb
out
xchg
call
lcall
sub
jge
test
arpl
fs
int3
dec
ficoms
jo
stos
test
popf
inc
data16
popf
loop
loopne
dec
push
and
in
testb
xchg
mov
cs
stc
mov
imul
pop
and
aad
push
lahf
sahf
lret
jp
stc
in
rol
pop
cmpsl
dec
push
or
mov
fs
pushf
mov
push
fwait
icebp
fnstsw
fcomps
adc
mov
cli
or
fiadds
push
ss
adc
adcl
enter
cmpsl
adc
shl
sub
mov
add
movsb
or
mov
mov
dec
mov
xorb
sbb
or
stos
les
outsl
je
sbb
jle
cmp
add
leave
pop
cmp
bsr
and
dec
mov
mov
adc
add
je
out
das
add
mov
xor
mov
arpl
inc
stc
fs
mov
cmpsl
mov
push
fld
pop
and
loope
mov
mov
pop
ljmp
jbe
jg
pop
fisttps
xchg
out
and
neg
xchg
cmpsb
pop
and
or
mov
xchg
jo
jae
icebp
sub
adc
mov
xor
stos
subb
imul
mov
cmpsb
scas
adc
je
and
decb
jg
mov
mov
sbb
jp
or
bound
push
adc
test
xlat
jns
lods
hlt
int3
and
or
sub
pop
jae
je
leave
inc
movsb
ret
das
pop
test
adc
sti
imul
inc
dec
or
jnp
jno
pop
mov
shll
popf
lods
mov
push
mov
int3
ss
fisubrl
nop
jmp
pop
cmpsl
pop
mov
mov
sbb
and
cmpsl
fbstp
pop
xor
inc
add
mov
call
pop
repnz
pop
int3
dec
idivb
je
add
or
push
bound
or
fcmovne
push
push
iret
or
fistpl
push
pop
mov
and
es
fisttpll
add
test
adc
fsub
push
cmp
mov
fucomi
mov
xchg
dec
push
adc
or
test
fiaddl
mov
cmp
or
mov
ja
pop
jmp
lea
push
xor
pop
mov
call
mov
or
nop
es
cli
jle
jmp
sti
in
repz
mov
movsb
les
test
sub
bound
pop
ret
stc
inc
inc
mov
mov
aam
adcl
xor
jae
push
int
jmp
jne
mov
imulb
test
mov
jbe
sub
jecxz
insl
adc
mov
xchg
jge
lea
dec
add
xor
pop
xchg
xlat
push
xlat
cltd
mov
or
and
inc
jb
ds
enter
in
xchg
xor
loope
mov
inc
aas
add
inc
push
call
inc
cmp
ljmp
sbb
shll
out
fnstcw
ljmp
fcmovu
lods
scas
fs
sub
shr
and
loope
dec
popa
xor
mov
int
and
jnp
aaa
out
cli
andl
mov
jno
add
mov
push
and
cld
in
fildl
lahf
enter
mov
imul
sbb
imul
ds
jle
xor
cmp
inc
stc
call
xchg
pop
pop
jp
call
pop
mov
xlat
out
cltd
adc
ret
repz
sbb
mov
in
testl
dec
sub
sub
in
inc
icebp
cwtl
adc
cmp
popf
aad
enter
mov
and
xor
sub
int
mov
dec
mov
das
pop
stc
or
sbb
pop
dec
push
adc
int3
test
jno
js
out
mov
das
and
and
jg
jae
adc
xchg
mov
jle
imul
fimuls
sub
cmp
push
pop
mov
add
cmp
push
bnd
add
idiv
inc
ja
mov
jmp
sbb
and
mov
jge
push
or
add
aam
jb
dec
repz
lods
dec
stos
jp
pop
out
xchg
mov
dec
stc
push
int3
pop
fistps
xchg
repz
mov
mov
xchg
add
popa
addr16
xor
es
pushf
jmp
lods
js
imul
fs
pop
xchg
lock
adc
xor
dec
sbb
jle
xchg
sbb
daa
push
sti
mov
mov
sub
and
fbstp
leave
xchg
cmpsb
aad
icebp
pop
sahf
lods
imul
int3
pop
fimuls
es
cli
cwtl
cmp
int3
or
push
into
or
ret
pop
mov
mov
xchg
dec
mov
setbe
not
push
mov
sbb
xor
aad
packsswb
jns
sbb
mov
push
popf
fsubrs
xor
adc
scas
adc
and
jg
lds
test
push
adc
xor
out
xchg
push
bound
jge
mov
add
push
adc
lcall
mov
pop
mov
mov
and
clc
add
add
rcr
push
add
cli
sbb
jb
into
mov
push
xor
xchg
xchg
hlt
out
xchg
push
adc
out
stos
stos
xchg
and
adcb
pop
jae
push
clc
sbb
mov
inc
add
js
mov
jnp
dec
sbb
arpl
scas
cmp
dec
lock
outsb
hlt
cs
cmp
aaa
push
or
xlat
aaa
xchg
or
or
mov
gs
xchg
data16
push
and
dec
dec
jmp
xchg
pop
cli
push
push
mov
pop
xor
div
mov
adcl
rcrb
clc
leave
adc
mov
out
ret
xchg
pushf
aam
mov
xor
loopne
popa
inc
inc
popf
add
mov
jle
mov
inc
lahf
xchg
pop
push
xchg
xor
hlt
xchg
jle
cli
fwait
pushf
popf
adcl
ret
mov
push
mov
cmp
mov
sbbb
rolb
adc
out
add
push
data16
mov
mov
fadd
dec
test
stc
shr
ret
xchg
fnstsw
dec
cmpsb
push
and
xor
cmpsl
rcll
jb
imul
dec
std
and
outsl
mov
and
dec
dec
les
mov
mov
mov
or
mov
ljmp
sub
fucomp
out
sub
add
xor
cmpb
enter
fsubs
mov
test
cmpsl
movsl
sbb
mov
cmp
xchg
and
fisubrs
fisttps
push
mov
inc
jb
out
pusha
jno
ret
xchg
and
int
push
cld
sbb
mov
dec
call
or
pop
jp
ret
and
mov
pushf
add
add
push
movsl
jp
jg
enter
in
flds
pop
push
mov
and
mov
dec
and
mov
xchg
mov
arpl
adc
mov
add
mov
mov
scas
test
fldcw
pop
fcmovnu
xor
nop
rcl
adc
and
mov
xorl
cmp
jl
mov
iret
lock
xchg
iret
rolb
out
dec
ja
xchg
jne
cmp
push
and
mov
jg
int
xchg
pop
jp
int3
pop
fsubrs
dec
xor
jne
je
adc
inc
xor
aaa
stc
xchg
test
cmc
ret
call
pop
mov
sbb
dec
inc
xor
aam
popf
je
into
adc
xor
dec
movsl
fists
inc
ljmp
or
jmp
in
pop
popf
push
dec
mov
les
cmp
cmp
mov
jmp
mov
mov
add
stos
jmp
pop
mov
mov
adc
mov
ret
xor
cmp
push
cmp
jg
cltd
push
movsb
cmp
repz
inc
sahf
cmp
pop
es
mov
jecxz
fwait
lret
cli
fstpt
in
dec
data16
les
lods
fld
mov
in
leave
imul
icebp
fsubl
fsubp
fstl
leave
sbb
inc
fiaddl
or
sub
outsl
movsb
mov
mov
dec
jl
push
mov
xor
mov
andl
aam
das
pop
scas
mov
sbb
inc
mov
inc
pop
push
mov
roll
cmpsb
mov
push
pushl
pushf
inc
ret
stos
push
repnz
out
adc
pusha
inc
das
fimuls
call
fs
xchg
push
imul
bound
dec
insb
and
sbb
sbb
and
mov
sub
insb
fiaddl
pop
push
je
add
scas
push
pop
xor
pop
mov
inc
xchg
lahf
inc
inc
xor
and
and
sub
nop
push
xchg
ss
adc
mov
xor
xor
jbe
adc
jns
lret
inc
in
adc
and
push
into
push
sub
jns
xchg
adc
mov
xchg
or
cltd
dec
pop
cmp
inc
xchg
or
stos
cmpb
sbb
mov
test
shrl
aam
pop
ljmp
lcall
push
or
dec
cwtl
add
rorl
xor
dec
lcall
mov
adc
sub
mov
add
test
dec
stos
out
pop
pop
incl
jg
xlat
lock
mov
and
andb
addr16
xor
shll
stc
or
repnz
adcl
or
mov
xchg
repz
fistps
fistl
daa
mov
push
xchg
xchg
mov
cmpsb
ret
or
in
popf
ja
dec
adc
fisubrl
add
fidivs
cmp
rcrl
fadds
in
mov
mov
mov
or
rep
out
inc
lock
push
shr
cs
sbbb
sbb
mov
sbb
pop
icebp
pop
add
pop
pop
inc
jo
jo
sub
mov
add
clc
ud1
aas
xor
in
cmpsb
fsts
inc
dec
push
fmull
test
ret
stos
jo
aad
out
fcmovne
mov
in
mov
add
negb
jae
repz
dec
fimuls
scas
fmulp
je
push
loopne
sub
fs
scas
stos
shr
xchg
sbb
imul
xchg
out
jl
pop
pusha
lea
movsb
aas
cmp
xorb
inc
aaa
ret
aas
xchg
push
int3
scas
dec
mov
daa
mov
into
div
cmp
add
jno
cltd
test
in
adc
mov
cmc
jp
jmp
int3
dec
dec
rorb
lock
adc
sub
mov
movsl
ja
or
mov
add
rclb
xor
or
test
cld
jp
xchg
sbb
xor
push
iret
fcoms
movsb
mov
dec
cmpsl
inc
dec
inc
in
enter
fnsave
cmpsb
fsubl
or
sub
or
lahf
or
je
jle
jno
imul
jo
test
and
xchg
stos
push
nop
lret
shl
adc
cmp
pop
mov
mov
sti
or
and
or
push
lret
mov
inc
adcl
cmp
adc
aad
sbb
mov
in
mov
inc
xchg
cmp
ja
pop
add
dec
pop
cltd
movsl
int
pop
mov
pop
jae
jo
cmp
or
ss
and
stos
icebp
imul
cmp
test
stos
inc
outsl
sub
lahf
lcall
dec
fisubrl
xchg
jbe
and
lds
sbb
cli
or
mov
xchg
int
lcall
add
mov
sub
test
xchg
push
fnstenv
or
dec
xorl
mov
fdivrp
inc
fimull
xchg
shll
out
xor
test
inc
jge
inc
test
addr16
and
sub
xchg
rolb
in
int3
push
xchg
push
and
popa
cli
xor
push
push
fsubrs
sbb
aas
movsl
in
ja
dec
cmpb
outsb
loopne
lods
and
jmp
push
inc
clc
xchg
cmc
xor
sub
mov
out
ja
ficompl
push
pop
aam
xlat
lret
aas
push
push
enter
sarl
loopne
xchg
and
and
stos
pop
add
push
adc
vpunpckhwd
pop
or
sub
popa
out
mov
in
enter
mov
sbb
in
jg
pop
lds
hlt
xchg
push
scas
cmp
adc
bound
xchg
cmp
repnz
dec
add
imul
test
push
mov
cmp
idivl
shr
sub
aas
dec
mov
outsb
mov
pop
jne
fistpll
scas
out
xor
or
cmp
stos
aas
in
lods
add
xor
push
add
daa
inc
je
in
push
fisttpl
pop
dec
enter
data16
add
addr16
int
xchg
cltd
push
cs
mov
mov
mov
js
loopne
dec
leave
cld
inc
call
sub
aam
cmc
aam
cmp
push
cmp
lahf
jmp
dec
stc
cmp
pop
xor
cmp
adc
adc
stos
inc
inc
jbe
mov
daa
out
jno
add
xchg
lea
inc
jb
movsl
ljmp
mov
xor
icebp
or
mov
mov
dec
jae
je
jno
and
cmpl
jg
jns
pop
out
push
adc
mov
and
or
leave
movsl
lea
movsl
sbb
loopne
imul
sbb
sbb
clc
mov
sbb
cwtl
ficoml
cwtl
ds
xchg
inc
xchg
insl
or
xor
jp
das
aad
xchg
movsl
and
jnp
es
lahf
out
cwtl
adc
jmp
push
mov
dec
mov
xchg
dec
pusha
xor
addr16
cmp
iret
mov
inc
cmp
xchg
bound
add
orb
sbb
cli
adc
push
mov
push
fidivs
jno
repz
std
mov
ljmp
adc
sbb
roll
or
loop
aad
mov
mov
xchg
mov
add
cmp
mov
fstpl
arpl
pop
sbb
test
mov
push
push
popf
in
add
mov
jecxz
pop
xor
adc
dec
in
pushf
sub
add
pop
test
mov
jno
jnp
aaa
cld
movsl
test
sahf
pop
inc
or
sbb
xchg
cld
das
inc
leave
outsl
fildl
pop
lods
sbb
dec
movsb
lds
pop
inc
mov
mov
sahf
sub
sarl
insl
and
in
icebp
cli
add
rclb
test
inc
dec
sub
cmp
shlb
mov
push
xchg
pop
fstps
mov
aad
shl
push
popf
lret
mov
out
xchg
rol
dec
jg
call
aas
jle
adc
and
lret
sub
push
outsb
sub
cmpsb
adc
out
and
mov
or
insl
pusha
std
imull
xchg
std
mov
push
and
mov
sub
xchg
xorb
jno
cmp
adc
jl
push
bound
mov
popl
mov
in
int3
sbb
and
jge
jo
dec
sbb
addr16
jle
mov
lods
xor
popa
add
inc
ljmp
imul
adc
fucom
xchg
sbb
mov
mov
xor
hlt
out
dec
push
gs
mov
int3
dec
and
xor
and
dec
adc
fcomi
sbbl
dec
cmp
movsb
mov
stc
shlb
cmp
push
xlat
lret
les
popf
or
and
shrb
jo
jne
hlt
shl
sbb
or
jmp
loopne
mov
mov
cmc
call
ljmp
mov
test
pop
cli
scas
rolb
fs
xor
xchg
ds
fisubl
sub
mov
ret
push
rcrl
sbb
adc
add
adcb
add
leave
hlt
mov
loope
popf
into
inc
daa
mov
ret
aaa
fimull
ret
push
iret
std
outsb
sub
mov
add
test
cli
fldcw
scas
mov
dec
mov
push
pop
mov
add
add
and
lock
movlps
add
mov
pushf
or
fpatan
lcall
jns
cld
dec
mov
pop
dec
loope
fst
sub
arpl
push
mov
sub
sbb
inc
or
add
mov
mov
insb
popf
inc
faddl
jnp
rcl
les
xor
mov
and
push
sbb
cld
add
mov
jo
leave
mov
lcall
mov
pop
out
push
push
stos
pop
repnz
mov
xchg
and
ja
insl
dec
insb
sbb
sahf
sarl
cmp
addl
cmp
imul
cmpsb
movsb
dec
cmpsl
fistps
inc
sbb
dec
xchg
mov
dec
dec
adc
push
cmpsb
inc
pop
aas
in
test
fdivp
loope
pop
and
jp
sub
jae
aaa
add
sub
xlat
xchg
xor
xchg
and
leave
inc
ss
cmp
outsl
or
and
jo
loopne
mov
push
xlat
sarl
lahf
enter
idivl
sbb
push
inc
stos
out
addr16
lock
ja
push
pop
push
fcoms
sbb
dec
cmp
inc
jecxz
sub
jne
ljmp
mov
sbb
jl
das
xchg
hlt
push
mov
ret
fcompl
scas
pop
ret
pop
popf
test
subb
enter
pushf
dec
repz
or
add
jo
add
add
iret
cli
fdivl
pop
mov
imul
lods
adcb
dec
sbb
into
stos
and
lods
lahf
pop
inc
arpl
and
cs
out
mov
jns
jo
ret
rcrl
andl
lea
std
test
shll
add
adc
xchg
andl
sub
xchg
xlat
cli
pop
mov
popa
push
cmc
mov
inc
cmp
shll
test
adc
jbe
mov
mov
xor
hlt
jp
push
dec
outsl
push
aaa
xchg
inc
stc
dec
scas
inc
push
adc
js
inc
rcr
xor
adc
sub
mov
bound
ret
cltd
and
test
jnp
addb
push
push
aad
iret
rcrb
and
enter
insb
jl
push
push
shll
pop
jge
std
fs
int3
aam
sbb
and
push
enter
ret
in
inc
out
cltd
in
jns
lods
loopne
imul
rcrl
lock
mov
or
stos
inc
repnz
daa
cmpl
fbstp
dec
lret
inc
inc
outsb
stos
jmp
sbb
inc
sysexit
lock
xchg
inc
cmp
int
imul
test
lods
repz
push
loope
cs
push
pop
mov
es
mov
inc
pop
test
add
jno
fisttps
push
dec
or
cmp
add
pop
pop
push
stos
lcall
push
dec
mov
adc
cmp
and
sbb
push
ffree
js
push
cld
fsubrs
add
pushw
cmp
pop
push
jo
imul
push
and
and
fwait
xchg
shll
adc
arpl
cli
adc
popf
mov
cmp
jp
or
mov
xchg
insb
fimull
mov
popfw
imul
out
idiv
xor
hlt
rorl
and
mov
aas
push
inc
push
es
cmp
fldt
sahf
mov
jmp
sub
xor
cmpsb
sub
fwait
fwait
adc
loope
das
mov
sub
mov
or
gs
pop
movsl
setns
mov
ss
xor
mov
add
jbe
ret
loope
sub
rcrb
dec
xor
push
sahf
fs
mov
inc
cli
dec
cmpsl
xor
gs
lods
or
frstor
or
inc
sbb
in
push
ljmp
ja
xor
aam
fisubrl
movsl
into
pushf
int
icebp
nop
jge
fwait
xchg
push
and
int
add
inc
adc
mov
cld
cmp
lret
sub
mov
out
fcompl
xchg
popf
inc
and
sub
sbb
or
lahf
outsb
pop
inc
rolb
idivl
cmp
and
in
and
loope
mov
gs
mov
or
stos
xor
jno
mov
and
jae
leave
or
call
sub
das
mov
stos
cmp
shl
dec
lods
test
push
or
movsb
cmc
aad
test
loop
pop
add
xor
bnd
arpl
push
sbb
pop
testl
pop
icebp
push
aam
pop
imul
subl
sbb
jmp
pop
mov
lahf
sbb
pop
sbbl
sub
cmp
aad
jg
sub
mov
out
push
loope
enter
out
lcall
mov
add
stc
mov
xchg
ficomps
pop
cmp
mov
rclb
push
shlb
loope
in
xor
repz
pop
dec
jecxz
fucomp
fwait
test
inc
xchg
adc
jns
and
das
fnsave
xor
push
mov
pop
cmp
sub
and
push
cmp
lds
sub
inc
out
add
dec
rorb
mov
cltd
mov
in
jae
xlat
mov
lods
xchg
ret
roll
cmp
cmpsb
pusha
xor
or
xor
les
bound
and
mov
push
push
imulb
loop
add
int3
jbe
dec
jnp
mov
xor
cltd
or
adc
mov
imul
lods
icebp
mov
xor
dec
lods
fisttps
rcrb
je
mov
rcr
and
pop
jecxz
pop
and
pop
dec
mull
pop
push
jp
imul
loopne
inc
jo
sbb
dec
imul
push
pop
inc
cmc
mov
push
push
push
jnp
xor
push
ljmp
pop
imul
imul
push
fisttpl
mov
and
test
adc
mov
jg
bound
movsl
fnstsw
pop
xchg
iret
adc
popf
lret
clc
cltd
inc
test
sahf
mov
aam
push
xor
pop
adc
jo
pop
iret
cmp
enter
push
mov
xor
pop
orb
cmp
popl
iret
in
mov
xor
test
pushf
loopne
xor
mov
out
fsubl
xchg
add
or
xchg
push
push
pop
mov
enter
outsb
adc
loope
loopne
dec
pusha
mov
into
filds
rcrb
lock
test
int
nop
mov
repz
inc
inc
sub
cmp
cmp
push
stc
push
mov
out
xor
mov
xchg
aam
out
aas
int3
push
ds
inc
and
pop
mov
loopne
movsb
jno
movsl
mov
cmp
sbb
pop
sahf
sbb
mov
xor
outsl
jecxz
or
addr16
data16
rcl
mov
mov
mov
arpl
pop
dec
sub
imul
add
pusha
mov
cmpsb
insb
and
arpl
pop
mov
lods
daa
stos
dec
mov
sti
mov
or
ljmp
push
dec
xor
lret
scas
orb
jg
aas
pop
adcb
and
xorb
pop
fwait
rclb
test
out
add
add
rcll
pop
call
loop
int3
pushf
leave
mov
pop
test
clc
imul
pop
stos
mov
add
xchg
lahf
sbb
mov
sbb
in
and
and
dec
in
jno
bound
movsl
out
push
adc
add
cmp
push
mov
mov
xor
mov
jge
xchg
popa
nop
aad
xchg
xchg
sti
sub
popf
sbbl
les
jno
xchg
addr16
or
mov
aad
out
push
out
pushf
fbstp
mov
jecxz
xor
in
andb
pop
nop
inc
in
jmp
xchg
je
mov
sub
dec
add
and
dec
adcl
sbb
push
cmp
jp
xor
push
sti
es
test
jle
sbb
pop
ret
in
xor
cmp
loop
fstps
xor
test
xchg
das
in
mov
cmp
fstpl
inc
call
lea
sbb
repz
sub
in
jg
pop
js
dec
fdivrs
push
or
test
neg
adc
out
jmp
xor
mov
sbb
add
ret
fldt
or
subb
jmp
cwtl
repz
jae
mov
je
ss
out
adcl
insb
scas
sbb
jp
pop
cmp
jae
fsubrs
push
hlt
sahf
pop
mov
dec
gs
inc
xchg
jns
and
mov
pop
inc
movsl
test
jecxz
ds
and
sbb
lods
aam
gs
and
out
cmc
pop
icebp
and
push
das
push
jmp
pop
add
pop
sub
cli
les
test
idivb
xor
jo
imul
mov
test
fcoml
aaa
push
shrl
testl
fwait
fistpll
popa
movsl
out
jns
inc
xchg
push
scas
xchg
sahf
dec
mov
jl
add
les
dec
dec
dec
cs
clc
in
push
inc
dec
jns
std
mov
or
mov
and
cltd
leave
fsubrs
call
inc
mov
push
and
test
dec
and
popf
mov
xchg
adc
loopne
pop
mov
stos
xchg
dec
les
stos
xchg
and
xor
or
mov
push
push
mov
das
jbe
cltd
pop
mov
sar
hlt
ret
andl
sub
add
mov
mov
out
jge
lcall
xor
dec
pop
ljmp
enter
push
push
pop
sarb
dec
loopne
fsubs
mov
scas
stos
arpl
aas
pcmpeqd
inc
fstpl
adc
pop
pop
insb
mov
cmpsb
pop
movsb
and
loopne
in
lods
or
jecxz
push
je
repz
push
push
pop
fs
inc
repnz
mov
inc
in
mov
popa
jl
jae
ss
adc
iret
sbb
or
mov
loopne
scas
dec
in
pop
fwait
pop
imul
int3
push
sbb
jae
sbb
mov
outsb
adc
push
das
pop
dec
stos
adc
jb
cmp
sub
sub
sub
mov
xor
fisubrs
out
imul
xor
cs
or
ds
imul
and
in
shll
stos
cld
inc
xor
or
pushf
jp
repnz
dec
xor
loopne
insb
xor
mov
repz
imul
out
sarb
mov
and
pushf
out
aam
pop
in
ds
jno
jnp
daa
sahf
mov
hlt
aas
inc
ficoml
andl
inc
xor
push
fstpt
mov
jl
fchs
mov
push
faddp
fwait
popf
call
aas
movsb
outsb
dec
icebp
fiaddl
dec
adc
xlat
js
inc
mov
mov
adc
sti
dec
sub
and
mov
aam
roll
stos
repnz
in
jmp
fmull
insl
inc
jno
pop
jnp
aad
sub
lea
repz
fnstsw
jo
imul
jo
mov
ds
pop
decl
call
movsl
dec
subb
int3
or
inc
ds
mov
movsl
mov
sbb
jmp
rcl
and
leave
int
sub
jno
xor
push
add
jp
inc
mov
fsub
dec
daa
add
sbb
inc
repz
sub
movq
aam
fistps
jp
inc
rorl
lock
jo
push
mov
shll
testl
push
ljmp
je
das
imul
popf
mov
jge
sbb
adc
out
arpl
daa
popa
popf
jne
stc
add
and
mov
jp
mov
pop
data16
push
stos
daa
ret
cld
mov
dec
imul
mov
ss
mov
or
ja
out
bound
push
jecxz
mov
and
mov
gs
cltd
xchg
mov
int3
mov
mov
mov
add
addr16
fdivs
mov
bound
sbb
mov
aaa
je
sbbb
icebp
push
push
mov
push
pushf
loopne
sub
mov
inc
rorl
ljmp
xchg
xor
mov
xor
pop
ss
mov
adc
aas
mov
mov
add
inc
sub
jo
das
fldl
lcall
sub
ficoms
and
int3
mov
pop
cltd
xor
test
sti
arpl
rclb
and
int3
cmp
mov
cld
dec
inc
or
lret
cmp
cmp
mov
xchg
mov
in
pop
lock
xchg
subb
xor
jge
shll
cmpb
mov
lret
xor
addr16
xor
adc
mov
ljmp
and
cmp
mov
test
fsubr
ficoms
adc
cmpsl
cwtl
ja
xchg
mov
cs
adc
lcall
xor
jne
call
jmp
shlb
cmp
in
pop
mov
inc
jnp
dec
clc
and
jl
mov
clc
inc
xchg
mov
xchg
push
and
mov
pop
pop
push
sbb
push
and
jo
xor
jle
xor
xchg
lods
jae
popa
nop
data16
dec
pop
and
dec
shrb
mov
clc
xor
jbe
loope
mov
push
loopne
cmp
lret
pushf
cld
fistps
mov
and
cwtl
pop
cmp
mov
mov
xor
inc
lahf
xchg
inc
mov
shll
enter
mov
ss
jg
pop
mov
aam
insb
adc
nop
leave
jno
push
fwait
leave
jne
jecxz
lahf
inc
out
and
and
jae
insl
js
sbb
inc
sti
test
sbb
add
pop
adc
or
test
sub
pop
shrb
mov
inc
imul
movsb
mov
lods
shrl
ret
mov
sub
add
sbb
adc
dec
repnz
push
shll
es
jno
sbb
pop
adc
jg
xchg
and
cmpsb
iret
in
loop,pt
dec
jecxz
inc
mov
js
es
fldcw
in
mov
jmp
rcrl
jbe
loopne
mov
push
out
pusha
ljmp
and
xchg
adc
das
ret
dec
inc
andb
das
out
mov
cwtl
mov
xchg
mov
rolb
fdivrs
insl
rorb
loop
pop
push
aad
movsl
inc
sbb
xchg
mov
lret
sbb
fldl
adc
rorb
jns
push
aad
mov
outsb
sti
and
movsb
jns
stc
xor
xor
push
lods
pop
popa
jecxz
jmp
cwtl
jmp
icebp
and
fwait
insl
movsb
int3
or
out
jp
mov
push
fidivs
out
loopne
xchg
xchg
mov
out
xchg
xchg
xchg
repz
jp
fildl
xor
lods
sarl
inc
movsl
cld
test
push
cmc
or
les
lods
roll
cmc
mov
sub
sub
shrl
adcl
pop
popa
in
sub
repz
movsl
fdiv
std
outsb
jmp
sahf
mov
lods
jno
jo
adc
movsb
adcb
jbe
adc
cmp
inc
jb
mov
dec
pop
lods
aam
out
inc
and
repz
adc
sti
xchg
mov
fnstenv
mov
cmpsl
mov
sub
push
js
lret
pusha
xchg
and
mov
clc
mov
jne
cmpsl
fs
nop
hlt
push
lods
out
pop
shll
xchg
sub
and
xchg
leave
hlt
push
jb
adc
mov
push
sub
sub
lcall
js
loopne
loop
mov
sub
aaa
pop
imul
and
ss
loop
stos
adc
sbb
mov
mov
jecxz
push
mov
mov
sbbl
dec
lods
repnz
jg
sub
jno
pop
push
loopne
pop
and
dec
rcll
nop
mov
mov
xchg
and
sub
mov
xchg
inc
sub
jae
and
rclb
sub
add
out
fistl
mov
lcall
jno
inc
add
sbb
xor
and
adc
sub
pop
rcll
icebp
imul
or
pop
not
or
mov
and
add
dec
add
adc
jl
mov
je
pop
imul
adc
lea
ret
cmpsl
jge
mov
mov
xchg
push
xor
xchg
lock
fnstenv
mov
mov
push
ljmp
ret
or
jl
and
inc
inc
bsr
push
stos
popa
jns
adc
fmull
or
push
jne
ret
cmp
pop
mov
fstl
fdiv
xchg
sbb
dec
mov
sbb
sarl
rcll
or
pop
jge
stos
insb
xorb
cmp
ja
fcmovnb
sub
push
and
fnstcw
test
ss
notl
adc
imul
call
pop
les
jno
lods
pop
mov
push
xchg
sub
cli
sbb
pop
ss
xchg
xchg
js
nop
cmpsl
jge
mov
push
test
mov
movsb
pop
aaa
cli
jmp
divl
aam
outsb
and
pop
negl
scas
mov
xchg
stos
xchg
mov
into
inc
push
pop
int3
aad
xchg
xor
test
daa
cmpsb
sbbl
fimull
je
leave
lods
test
push
push
xchg
daa
cltd
mov
ret
xor
fcom
jns
cmpsb
push
pop
adc
push
push
mov
jnp
push
nop
mov
gs
mov
xchg
and
xor
jno
cltd
xchg
mov
sbb
ss
xor
loope
sbbl
xor
push
pop
lcall
sbbl
jae
pop
sub
xchg
xchg
insb
inc
addr16
js
hlt
idivl
pop
lock
sbb
jmp
dec
loopne
loope
imul
movsb
or
cmp
dec
loope
adc
icebp
and
popl
mov
mov
ljmp
rcrl
push
fists
adc
ljmp
je
mov
mov
ljmp
test
loop
cmp
jmp
lods
or
and
xchg
mov
pop
xchg
daa
lods
fwait
sub
xchg
fwait
lret
jno
mov
cmp
sbb
mov
mov
push
dec
jp
jge
xchg
xlat
or
ds
jno
test
mov
ss
and
fsubrl
ja
pushf
lret
daa
fdivr
data16
out
cmpsl
aas
ss
movsl
mov
sub
dec
lock
rcrb
mov
lahf
lods
push
test
push
sarl
test
mov
ljmp
lea
jmp
nop
mov
pop
sbbb
push
inc
sbb
outsl
mov
hlt
sbb
jg
xor
jb
lods
jmp
inc
push
out
mov
inc
and
mov
mov
inc
ret
iret
aad
scas
xor
inc
dec
jp
cmp
mov
push
cmp
jno
mov
push
mov
divb
sarb
lock
mov
pop
aad
pop
insl
cmp
add
xchg
rcl
mov
cmp
cli
xorl
sub
sbb
add
adc
lret
adc
cmpsb
xor
xlat
mov
fsubrs
daa
iret
nop
enter
shrl
les
xor
addl
popf
scas
mov
sti
add
mov
jns
je
and
movl
push
incb
mov
dec
pop
movsb
testb
xchg
sbb
sbbl
stos
inc
test
inc
lahf
popf
fsubrs
dec
pop
mov
outsl
insb
and
sub
jne
mov
xor
jne
test
adc
sub
pop
imul
in
out
sbb
fst
out
sbb
jno
mov
adc
dec
popf
sbb
sbb
js
jle
cltd
lahf
push
imul
inc
in
add
add
lahf
cmp
sbb
sarl
jo
mov
pop
xchg
lcall
aam
pop
addr16
or
lret
sub
fsts
push
imul
adc
sub
push
negl
ljmp
mov
pop
in
jle
mov
adc
inc
pop
movsl
repz
jo
add
and
jle
repz
repnz
sub
pop
xchg
jge
clc
pop
mov
and
xor
adc
xchg
mov
lahf
and
movsb
mov
mov
pop
sbb
js
movb
xor
sahf
icebp
cmp
fnstenv
icebp
ja
sub
insb
cld
inc
xor
pushf
xchg
dec
std
pop
pop
std
sti
daa
inc
das
push
imul
push
jbe
add
cld
pushf
mov
push
mov
sub
sub
xor
push
jle
xor
pop
mov
xchg
sub
dec
cwtl
mov
sbb
hlt
and
jmp
pop
cwtl
add
pop
outsl
xor
addr16
lds
sbb
scas
dec
push
pop
sbbb
jae
inc
or
call
dec
push
pop
inc
pop
popa
cmp
ja
push
ja
jo
mov
and
adc
jae
aas
sbb
fidivrl
xor
mov
sahf
test
jbe
jns
mov
test
add
push
aas
pop
adc
jae
scas
jg
cmp
pop
filds
insl
mov
jbe
lods
and
mov
push
xchg
scas
test
dec
xchg
push
xchg
ss
mov
sbb
mov
mov
push
scas
pop
cs
and
mov
fistps
mov
xor
sti
fldcw
xor
jp
dec
jne
aad
adc
repnz
or
add
jl
test
dec
mov
inc
xor
leave
loope
jno
data16
sti
cli
inc
sub
filds
cmp
push
xor
jbe
xor
movsl
mov
lds
nopl
cmp
adc
popa
ficompl
xor
jl
testl
inc
push
fidivrs
push
jmp
mov
jae
in
das
xor
in
jno
adc
dec
pushf
cli
mulb
adc
push
pop
inc
daa
fwait
jno
unpckhps
jle
push
push
mov
push
imul
jp
dec
in
mov
jle
dec
fwait
and
std
mov
mov
sbb
xor
fnstenv
pop
lret
mov
cmpsb
cwtl
in
mov
mov
jg
aam
pop
inc
jle
pop
faddl
lret
cs
cld
lret
push
sub
jno
cmpl
sahf
test
push
adc
stc
cmp
xchg
pop
push
mov
in
mov
clc
call
sub
cwtl
insb
test
popa
pusha
lods
movsb
jae
mov
out
dec
nop
sub
imul
mov
jge
mov
jae
mov
fld1
push
pop
xchg
xor
xor
leave
mov
jns
loop
or
andl
fidivs
push
lret
pop
mov
adc
out
nop
and
sbb
xchg
jmp
icebp
popf
loope
dec
xchg
inc
jb
cli
popa
lahf
and
lods
add
dec
in
inc
lock
gs
jns
int3
xchg
adc
lock
mov
enter
ds
inc
dec
mov
and
aam
pop
sub
sub
mov
mov
cmp
xor
scas
cmp
and
or
shr
add
inc
or
fldcw
mov
inc
ljmp
in
sbb
faddl
pop
mov
andl
and
mov
sbb
pushf
hlt
aaa
dec
bound
and
punpckhwd
cli
fstpt
sti
mov
inc
or
gs
js
pop
and
jo
push
jnp
inc
jne
movups
xchg
and
cmpsl
lods
cmpsb
jo
ret
xor
push
xchg
and
in
andl
push
arpl
fstl
mov
sbb
adc
inc
mov
pop
fdivl
enter
in
leave
fists
and
cmpb
and
aad
lods
dec
push
and
inc
dec
test
sahf
and
inc
js
jle
jg
xor
xchg
push
hlt
jno
and
mov
inc
adcl
xor
aas
rclb
jp
pop
sti
out
inc
movsb
ss
xor
cmpsl
xchg
stos
xor
nop
pop
jns
outsl
sahf
push
scas
insl
hlt
push
jns
test
fldenv
jnp
jo
std
mov
pop
sub
dec
sbb
fdiv
sbb
inc
repz
dec
jge
int3
xchg
cmp
sbb
fwait
mov
cmp
es
mov
and
pushf
xchg
push
push
sub
es
lods
sub
adc
jmp
xlat
cmp
pop
mov
mov
imul
lret
mov
xchg
pop
adc
fnstenv
push
add
in
sub
adc
cmp
bound
and
xor
sub
mov
and
inc
xchg
pop
iret
xchg
test
inc
aad
or
and
js
icebp
add
and
sbbl
inc
sub
not
insl
mov
movsl
adc
push
mov
add
jg
lock
mov
sub
in
mov
xor
btr
jno
cmpsb
xchg
jno
loop
pop
mov
add
push
mov
shll
xchg
std
sbb
mov
mov
mov
adc
push
add
iret
sub
jb
or
push
adc
mov
insb
and
fs
dec
jnp
or
repnz
or
and
stos
int3
inc
out
inc
pop
loope
fs
enter
in
pop
hlt
add
les
bound
cs
lret
or
add
ljmp
dec
add
jae
sahf
push
jno
inc
pop
daa
xor
pop
pop
push
jb
jo
dec
xchg
dec
jmp
sub
cwtl
sub
sub
mov
dec
mov
lcall
aad
and
mov
xor
jo
push
sbb
fcmovnb
rolb
lahf
jge
mov
xor
mov
pop
cmpsb
lcall
dec
or
and
mov
or
dec
and
jp
sbb
fcoml
jo
push
pop
out
sbb
or
test
cld
push
jmp
scas
push
fsubl
dec
inc
xor
sub
outsb
lret
push
xchg
cmp
sbb
mov
daa
inc
cwtl
jbe
int
out
jmp
jg
push
inc
lods
jp
inc
fstpl
push
xor
sbb
bound
cmpsl
xchg
jp
sbb
jns
aad
mov
fiadds
jecxz
cltd
pop
sbb
inc
cli
mov
mov
xlat
sbb
ret
int3
cmp
inc
mov
jbe
jg
out
or
adc
loope
push
aam
cmp
adc
sub
push
mov
xchg
iret
inc
test
lea
pop
into
cmp
push
jbe
push
mov
in
cltd
mov
xchg
test
in
sbb
cld
rcrl
in
movaps
jmp
mov
and
outsb
jg
jbe
rcrl
fwait
xor
ja
ljmp
pushf
clc
inc
mov
movsb
cmp
pop
icebp
xor
mov
inc
sub
neg
adc
cs
shll
sub
mov
cmpsl
fwait
dec
add
out
sbb
pop
sti
jno
inc
push
ret
or
inc
push
jecxz
aam
clc
and
add
mov
mov
dec
cmp
mov
xchg
sub
push
xlat
or
jbe
lret
pop
ss
adc
xorl
mov
mov
xchg
jp
imul
xor
sub
mov
pop
int3
aad
mov
xorl
shrb
popa
mov
mov
rcl
mov
cli
ljmp
les
dec
pop
dec
jb
dec
xchg
mov
cmp
popa
subb
iret
add
test
cmp
xchg
add
pop
mov
xchg
roll
das
notb
in
or
jne
and
negl
js
mov
and
leave
je
enter
bound
lods
sbb
roll
les
xchg
loopne
dec
shll
inc
ffreep
inc
push
jb
mov
and
mov
lods
inc
out
incl
shlb
clc
leave
xor
add
je
jns
push
jae
jo
xchg
pop
repnz
dec
jno
std
inc
jge
das
fisttpll
jne
movups
dec
cs
loopne
inc
js
jmp
out
jge
mov
dec
push
sub
mov
lods
mov
fs
scas
fisttps
cmp
mov
mov
add
mov
add
push
sbb
cli
cli
repz
sub
cmp
pop
and
lret
pop
into
je
xchg
enter
xchg
mov
stos
arpl
in
stos
or
insb
ds
cmpsl
jg
add
cmp
jns
repz
mov
fwait
lret
and
lcall
push
sbb
loopne
pop
adc
stos
mov
loope,pn
lahf
lret
mov
ficoml
mov
jp
es
test
dec
stc
jmp
push
int
das
inc
xor
das
fisubrl
sbb
aam
imul
pop
and
ss
mov
ljmp
and
mov
inc
xlat
insb
jecxz
mov
pop
mov
pop
push
rcrb
mov
push
rol
jp
cmc
pop
and
xor
lcall
ja
addb
xor
daa
jo
or
std
xchg
jp
cs
cmp
lods
imul
aam
out
ret
enter
ljmp
xor
lds
js
sbb
cld
and
fmuls
test
mov
dec
shll
pop
ficompl
ja
mov
loope
inc
sbb
cmp
imul
mov
filds
leave
adcl
movsl
popl
icebp
sbb
jmp
shl
push
test
dec
sub
fistpl
lods
ljmp
das
xchg
aaa
aam
sbb
lahf
jae
aas
rclb
cmpsb
pop
mov
mov
mov
rcr
mov
mov
pop
pusha
push
jne
je
int3
test
into
pop
dec
cmpsl
scas
nop
leave
mov
adc
rcll
outsb
inc
pop
cli
ret
pop
add
jle
or
xchg
ja
addl
push
sub
cwtl
ficoml
test
ds
push
je
pop
ja
xchg
xchg
xchg
xor
xchg
filds
loopne
xchg
insb
int3
cltd
push
int3
icebp
shlb
popf
dec
sbb
push
mov
mov
xor
cmpsl
shl
pushf
adc
dec
in
stos
test
adc
mov
pop
pop
pop
test
outsb
dec
push
loopne
sbb
adc
icebp
xor
fidivs
xchg
dec
sub
sub
dec
andl
cmp
lods
jae,pn
xchg
sub
mov
inc
aaa
filds
pop
in
mov
out
aaa
in
fnsave
insl
or
jno
push
popf
mov
push
lds
lahf
mov
and
arpl
sbb
adc
outsb
pop
xchg
xchg
push
cmpl
and
push
mov
adcb
lea
mov
cmpsl
cwtl
int
and
mov
loopne
jae
dec
stos
cmp
push
loopne
jmp
daa
in
jns
mov
test
xchg
add
jae
mov
fmull
mov
xadd
xor
jp
mov
mov
inc
dec
pushf
push
popa
mov
add
sub
lea
dec
gs
insl
daa
loopne
xchg
pop
push
adc
sub
clc
stc
loope
jg
dec
mov
dec
loopne
push
dec
lcall
pop
add
pop
inc
sti
xor
mov
call
sub
out
inc
fmull
loopne
rdmsr
movsl
icebp
das
and
inc
mov
jne
fnstcw
dec
repnz
cmp
ds
enter
es
in
repnz
cmp
lret
mov
cs
xor
pop
in
dec
push
stos
push
jecxz
mov
decb
rcrl
fs
mov
and
mov
andl
in
ret
sub
dec
cs
add
in
scas
pop
pop
mov
je
rclb
test
out
xchg
sub
jbe
cld
lcall
jge
lock
movsl
lods
pop
mov
es
out
aad
stos
bound
sub
push
repz
movsb
int3
sub
jns
xchg
xor
hlt
and
rolb
shrl
lds
das
lods
xchg
mov
cmp
test
sub
pop
addl
int
lret
jno
pop
mov
repz
pop
test
cs
clc
sub
sub
in
xchg
in
insb
add
jg
movsl
xchg
in
stos
sahf
and
cmp
int
mov
nop
dec
xchg
xchg
xor
fs
incb
xchg
movsb
lods
subl
jo
lret
or
sub
daa
ss
sub
movb
popf
cmp
mov
sbb
jge
retw
daa
jg
mov
jnp
dec
cmp
gs
enter
data16
inc
stos
sbb
add
mov
mov
stc
and
xchg
mov
popf
jl
lret
dec
sub
fwait
jnp
sub
push
jge
xchg
fs
inc
mov
and
ds
ja
outsb
jno
mov
push
mov
cmp
jne
cld
out
cwtl
mov
fwait
js
or
in
jecxz
mov
sub
stc
cld
in
mov
div
cltd
xor
push
sbb
sub
cmp
outsl
pushl
push
mov
cmp
call
ja
shlb
adc
in
pop
test
shl
stc
jne
lock
je
daa
outsl
dec
lods
push
ja
into
cmp
testl
insb
adcb
xchg
ss
ret
aad
or
xchg
cltd
sub
push
out
xchg
ret
pop
xchg
je
out
mov
rcr
mov
cld
icebp
fcomp
jmp
iret
aaa
xchg
push
divb
icebp
push
push
mov
jg
mov
jmp
mov
xchg
add
jg
test
sbb
lods
mov
int
movsl
stos
or
push
stos
xorl
in
ret
jecxz
stos
mov
pop
xchg
pop
ret
or
mov
cmp
mov
inc
sub
xchg
lahf
mov
cmp
incl
sbb
dec
mov
and
pop
dec
sub
push
adc
or
pop
leave
imul
push
xchg
cli
cltd
xchg
lahf
mov
cltd
add
adc
push
lods
mov
pop
ficompl
testl
xchg
and
in
xor
jl
das
pop
test
fisubl
xchg
jb
jns
test
imul
xor
jp
hlt
js
inc
jns
inc
inc
lock
int
ret
sbb
inc
bound
jbe
shrl
cmc
iret
aad
popf
pop
arpl
aaa
pushl
aaa
lock
cmpsl
sbb
stos
repz
lods
in
push
arpl
pop
pop
sbbl
push
imul
cmpl
jnp
mov
dec
stc
push
jmp
pop
and
ret
out
sub
push
jne
inc
test
jg
push
dec
dec
sbb
jecxz
xchg
and
mov
mov
aam
add
mov
pop
cmp
movsb
fbstp
inc
dec
xchg
and
pcmpgtw
push
sbb
mov
out
repnz
cmp
sbb
xchg
rorl
jle
jle
xor
gs
cli
loop
inc
mov
push
addb
cmp
sbb
shll
je
negb
fnsave
js
cmc
push
xchg
jp
int
dec
insb
mov
jne
add
adc
pop
mov
je
imul
cmp
sub
xchg
sbb
jmp
push
dec
gs
jb
push
sti
xchg
inc
add
out
xlat
jbe
jle
xchg
sbb
incb
int3
stos
cmp
idivl
adc
int3
mov
stos
insb
or
sarl
mov
frstor
scas
ror
xor
andb
nop
dec
pop
stos
dec
pusha
xchg
push
scas
adc
and
add
lock
gs
jno
aas
push
ret
push
jg
add
out
mov
fcomps
in
in
fmuls
xchg
in
mov
orb
sbb
adc
mov
in
test
lcall
cltd
mov
lea
mov
mov
push
sbb
jno
sbb
sub
push
add
arpl
pinsrw
fidivrs
call
jp
je
cmpsl
xchg
push
xchg
roll
aas
dec
sub
pop
sbb
loopne
xor
lods
add
mov
daa
jb
inc
mov
mov
out
xor
loop
mov
add
cltd
mov
clc
pop
cmpsl
pop
push
xorb
insb
in
push
cld
xor
jle
jb
clc
lret
adc
push
dec
jp
out
in
lret
dec
or
or
jae
push
add
iret
stc
jno
xor
arpl
dec
lods
mov
cli
and
stos
out
shr
push
sub
ja
in
jl
sub
xlat
xchg
mov
jg
out
movsb
cmp
sub
dec
push
jno
sbb
cmpxchg
xchg
xchg
mov
pusha
aas
xor
stos
int3
leave
das
xchg
jmp
inc
mov
jo
add
mov
sub
and
push
inc
inc
stc
jp
mov
sti
sub
mov
jp
loope
popa
mov
push
mov
jbe
xlat
testl
sti
sub
xchg
sar
jns
sbb
cmp
sbbl
xor
jnp
cmp
int3
jno
into
cmp
adc
out
mov
ljmp
cmp
repnz
enter
loopne
dec
lods
out
fldl
in
outsb
fildl
loope
jbe
arpl
fimull
loope
pop
add
test
dec
mov
outsb
dec
mov
or
out
in
sub
inc
mov
es
shll
add
subb
cs
fistl
push
inc
fnstsw
push
and
shll
ja
inc
andb
daa
aaa
leave
lods
daa
and
insb
cs
sub
sbb
inc
sbb
jae
push
outsl
stos
xchg
jno
inc
mov
insl
jp
mov
inc
pushf
or
addr16
bound
mov
enter
sbb
insl
pop
mov
sbb
and
daa
loopew
jg
lahf
xor
fcoms
push
sub
mov
test
fwait
mov
add
lods
and
nop
je
test
cli
adc
fadds
sbb
xchg
js
inc
scas
pop
dec
lret
lods
imul
push
sub
shll
mov
xor
xchg
clc
cltd
mov
js
cwtl
fcompl
sub
leave
jnp
jecxz
daa
call
xor
dec
rolb
and
repz
sub
iret
push
divl
pop
shrb
cmp
iret
aam
sbbl
pop
out
push
mov
cmp
aad
dec
pop
dec
inc
sbb
mov
sub
test
adc
xor
cltd
adc
pop
adc
aad
push
pop
xchg
xchg
mov
or
dec
cmp
les
sub
shll
lahf
mov
mov
jl
scas
cmp
cli
or
jge
or
lea
cs
outsl
mov
adc
out
in
cmp
dec
sub
int3
jg
arpl
jne
mov
push
mov
xor
sahf
xchg
adc
jno
rcr
and
pop
xchg
aam
cmpsl
insb
mov
xor
adc
jae
movsb
pop
push
loop
sub
xor
fbstp
call
or
pop
dec
xchg
fiaddl
add
cltd
jle
add
dec
jae
adc
sbb
add
fistpll
sub
add
push
inc
rcrl
inc
fdiv
add
sbb
push
enter
dec
lahf
pop
jge
xchg
rol
jp
pop
nop
add
int
inc
mov
rorb
and
sbb
and
fmuls
loope
and
sahf
lods
pusha
inc
std
bound
scas
inc
jae
std
fcomps
por
mov
push
stc
pop
sbb
int3
das
scas
sub
mov
imul
test
or
xchg
in
jns
add
cmc
xchg
adc
cmp
jle
pop
pop
mov
out
xor
jnp
in
mov
dec
daa
lahf
les
mov
rcrb
mov
outsl
cmpsb
in
fsts
mov
dec
pushf
sub
pop
cld
xor
je
adc
mov
push
pop
data16
daa
loop
cs
inc
inc
cs
push
sbb
push
bound
xor
xor
jl
jbe
add
shll
adc
stos
adc
shlb
xor
int
add
inc
mov
mov
pushf
cmpsl
leave
adc
sub
sub
mov
fmul
xor
pop
sub
sbb
or
addr16
xchg
js
das
ret
mov
mov
rclb
dec
push
add
dec
movsb
push
data16
push
daa
stos
xchg
inc
sti
sbb
push
and
cmpb
dec
insb
push
fidivrl
mov
es
inc
mov
lds
shrb
inc
jle
sub
jge
and
sbb
outsb
push
mov
cli
cli
fcomi
addr16
je
pusha
xchg
test
pop
inc
adc
mov
inc
and
fidivl
stos
int3
call
mov
popf
call
sub
scas
jo
cmp
addr16
icebp
cmc
or
pop
inc
sub
lret
scas
sbb
adc
mov
pushf
ljmp
jbe
push
and
adc
loope
rorb
adc
xchg
jo
cld
dec
outsb
shl
xchg
xor
jb
xor
loop
movsb
out
pop
popf
gs
rorb
aaa
xor
jns
rcrl
shrb
fstl
je
xchg
add
or
call
push
sub
push
jl
or
cld
repnz
sbb
push
xchg
pushf
mov
loopne
lahf
lret
pop
cli
rcrb
xchg
cmp
movsl
sbb
ud1
adc
pop
lret
fwait
mov
loope
pop
mov
fsubrs
jp
push
cmp
movsl
cmp
mov
push
jb
scas
lret
mov
ljmp
in
hlt
cmp
add
mov
dec
pop
bound
add
inc
fs
mov
push
pop
mov
addr16
and
iret
jae
adc
cmp
xlat
or
xchg
sbb
dec
jbe
loop
les
mov
jg
sub
push
shll
in
dec
mov
add
mov
jne
les
xor
xor
imul
cmp
dec
mov
dec
sahf
inc
inc
mov
and
lcall
and
inc
cmp
pop
jns
aam
pop
scas
out
cmpsb
lock
adc
sub
pop
mov
cli
insb
fistpll
loopne
xchg
mov
vmread
inc
mov
je
dec
mov
jnp
sti
cmp
sub
jge
mov
in
lods
aam
mov
sub
sub
and
repnz
les
stos
fmull
test
add
add
pop
cmp
mov
in
cmp
dec
out
bound
or
je
ret
dec
mov
dec
jnp
fldenv
lret
sbb
rorl
jne
cmpsw
ja
lea
adc
pop
or
sub
mov
lcall
daa
inc
ja
xor
cmp
inc
in
data16
sti
clc
cmc
sub
cmp
xchg
cmp
mov
mov
sub
xchg
out
pop
repnz
outsb
cwtl
not
inc
jmp
sub
and
xchg
sbb
sbb
adc
mov
out
aam
push
ja
mov
addr16
ret
dec
inc
ss
or
pusha
daa
mov
dec
inc
cmp
add
pusha
mov
push
lret
inc
mov
scas
inc
clc
int
jbe
outsb
rcll
push
mov
mov
int
xchg
cmp
hlt
dec
push
ds
adc
xor
pop
test
mov
xor
mov
add
icebp
lods
stc
fwait
fs
int3
popa
popa
ljmp
adc
xchg
fdivl
lds
or
insb
loopne
ljmp
cltd
and
out
sub
aad
mov
mulb
jle
xor
jb
mov
jne
inc
mov
pop
adc
jb
jg
sub
lods
enter
fldenv
push
inc
int3
and
xchg
in
cmc
rolb
jl
ficoms
pop
push
pop
jp
test
sarl
push
push
pop
mov
sub
mov
cs
movsb
inc
jle
fdivs
sti
xor
and
xor
pusha
add
jno
xchg
loope
loope
cmpsl
jb
out
mov
push
cmc
leave
arpl
xor
fdivs
cmp
push
sub
pop
fmuls
dec
sub
adc
push
repnz
sub
xchg
xchg
push
ds
adc
pushf
fmull
inc
adc
insb
jp
cmp
xchg
decl
dec
adc
jle
es
arpl
and
dec
cmp
mov
jg
lahf
add
cwtl
inc
push
outsl
jne
inc
mov
inc
xor
xchg
or
push
ret
fidivrl
inc
add
sbb
mov
daa
pop
andl
sbb
stos
sub
adc
dec
shlb
loopne
dec
jp
rorb
ss
incb
jmp
and
je
mov
adc
adc
add
lock
pusha
cmp
jle
push
xchg
jp
stos
push
shll
jne
push
loope
jle
pop
inc
adc
lcall
enter
add
lret
fcomps
jnp
cmp
imul
in
out
jg
mov
adc
ret
xchg
mov
enter
or
and
cmp
push
xor
add
das
movsl
cmp
ljmp
mov
test
leave
imul
and
leave
dec
cmpsb
andb
and
mov
push
jecxz
ss
ljmp
add
or
mov
xchg
or
inc
popf
push
out
mov
out
mov
mov
cmp
sti
adc
cmp
lds
test
jnp
add
insb
mov
lods
xchg
data16
add
dec
lds
fucomp
into
hlt
jne
data16
out
adc
shl
pushf
call
fwait
xor
inc
and
inc
mov
cmp
cld
add
inc
xlat
out
xor
jmp
rorl
xorb
fidivl
mov
mov
sbb
mov
push
adc
and
movsb
mov
mov
inc
aam
push
cli
mov
adc
sub
dec
cmpsl
jmp
and
add
imul
mov
ror
mov
cmp
clc
insb
xor
gs
xchg
push
and
ja
subl
sbb
cmp
sub
lods
mull
cli
mov
add
ss
jbe
push
out
ljmp
imull
cltd
lret
cmp
inc
inc
jp
cmp
add
ja
cmpsl
fcoms
cmp
fstpl
clc
cltd
popa
clc
stos
mov
cmp
cmpsl
rcr
push
mov
and
lahf
test
or
aaa
dec
cltd
cmp
dec
ja
adc
push
ret
mov
jecxz
xor
mov
xchg
fdivrs
in
push
sub
fidivs
popf
cltd
addr16
ja
sbb
and
sbb
cmp
stc
or
push
inc
out
push
neg
mov
jnp
insb
cmp
jne
adc
jae
jo
fnsave
add
cs
mov
push
mov
mov
push
mov
es
lea
cmp
in
inc
xchg
imul
int
sub
mov
pop
xchg
jp
lods
jg
insb
mov
add
js
sbb
xor
mov
dec
cmpsl
int3
jo
enter
push
sbb
js
xor
inc
rol
cld
xchg
nop
sbb
and
mov
lcall
in
cltd
mov
sti
pusha
mov
sahf
loop
push
loopne
scas
insl
in
push
xchg
out
push
xchg
fwait
push
mov
lea
and
in
push
adc
leave
or
jbe
stos
in
pop
in
nop
lcall
mov
add
cmp
push
cmp
push
jp
dec
dec
ljmp
add
adc
push
clc
movsb
push
mov
sub
shl
add
fists
popa
xchg
das
outsb
and
and
ret
sub
sbb
mov
mov
and
dec
sbb
repnz
test
lcall
js
pop
test
dec
push
ret
mov
movhps
movswl
es
mov
test
or
pop
adc
popa
aaa
or
shrl
int
mov
insb
xchg
mov
push
pop
jl
push
faddl
jns
sub
and
push
cmpb
sbbl
ljmp
cmp
mov
dec
sbb
arpl
pop
add
stos
mov
shl
pop
movsl
arpl
jb
sub
call
in
cmp
test
push
mov
sbb
pop
sti
mov
cmp
sahf
out
pop
and
xor
xchg
ja
lret
addr16
loop
push
adc
aad
aaa
insb
std
or
dec
push
sbb
xor
test
jle
or
mov
ja
jecxz
lods
sbb
scas
mov
pop
xchg
les
in
icebp
sub
insl
push
inc
and
test
out
mov
lods
daa
push
lea
nop
daa
ss
gs
sub
push
pusha
cli
movswl
aas
push
int3
cmp
dec
xor
mov
scas
push
adc
mov
xor
mov
gs
xchg
lret
cmp
jo,pt
movsl
dec
mov
jmp
sahf
cmpsl
dec
xchg
mov
jns
inc
jo
pop
testl
pop
iret
enter
insb
jp
shll
insl
jge
push
sarl
gs
push
mov
mov
js
add
push
ffree
pop
sbb
add
add
inc
pop
es
add
jno
cmp
mov
adc
call
jecxz
aas
mov
xchg
loop
inc
jb
fwait
inc
stos
cmp
mov
dec
add
adc
faddp
xchg
mov
ja
das
aas
int
xor
push
or
loop
and
push
dec
sahf
mov
mov
inc
cli
arpl
addr16
movsl
sbb
and
xchg
and
loopne
shlb
outsb
mov
sbbb
into
pop
mov
ret
scas
js
jge
mov
scas
lds
cmpsb
mov
mov
or
ficomps
dec
push
adc
mov
loopne
push
xchg
pop
jecxz
aad
mov
imul
ds
jbe
inc
mov
adc
inc
pop
jl
mov
icebp
adc
pop
test
lods
xor
ret
cmpsl
aad
cmp
aas
inc
add
cwtl
orl
xor
sbb
mov
in
ja
ljmp
add
int3
pop
shll
aad
xor
popf
lret
flds
mov
mov
xchg
int
fisttpl
inc
jbe
mov
push
test
mov
scas
movswl
inc
ss
fdivr
mov
push
sahf
pop
xchg
cmpsl
mov
push
jmp
ret
je
shrb
cmpsb
pop
fnstsw
xor
loop
adc
mov
cmpsb
or
and
lea
aam
mull
aam
pushf
inc
clc
mov
rorl
scas
jp
xchg
pop
push
in
pop
mov
imul
addr16
xorl
pop
loopne
adc
cltd
enter
enter
jbe
pop
je
or
sbb
mov
add
adcl
mov
and
mov
adc
in
add
sahf
dec
or
xor
ret
pop
mov
cmp
call
xchg
xchg
cs
cmp
jae
enter
fisttpl
add
sbbl
imul
pop
ja
dec
add
mov
les
clc
xor
test
mov
pop
sbb
sti
push
jp
and
sub
sub
arpl
daa
pop
or
mov
cmp
mov
adcb
jb
or
and
pushf
mov
inc
lea
test
sahf
sub
movsl
pop
sbb
mov
test
mov
popa
or
test
pusha
add
add
jns
inc
cmpb
pop
and
leave
stos
push
out
sub
mov
sub
mov
int
dec
mov
push
jg
subl
inc
shrl
mov
outsl
xchg
add
xor
mov
out
cmp
sbbl
adc
sub
xor
lret
cmpsb
sbb
lea
leave
shll
push
or
sub
mov
repz
stos
pop
jle
push
imul
ds
in
cmpsl
pushf
imul
add
dec
and
pop
stos
mov
mov
popf
jo
jg
arpl
insb
stos
adc
cmp
aas
int3
cli
push
insl
sti
and
shll
add
or
mov
cwtl
adc
push
fisubs
test
pop
lahf
cmp
loope
sub
imul
pop
xchg
dec
out
xchg
adc
aad
xlat
dec
inc
pop
pop
dec
pop
cmp
js
fnsave
dec
notl
push
mul
lcall
sub
ret
enter
and
sti
pusha
into
ficoml
mov
jp
and
xlat
inc
insb
addr16
pop
lea
adc
adc
inc
or
cmp
push
mov
adc
mov
pop
jl
mov
xchg
jge
outsb
add
ds
jp
test
ss
xchg
repz
insl
lret
inc
int3
ret
subl
jmp
push
test
fdiv
push
and
pcmpeqb
xorl
testl
pusha
jmp
std
mov
sub
mov
mov
xlat
mov
dec
add
sub
hlt
lcall
pop
int
adc
jo
push
xor
and
es
or
loopne
inc
sbb
movsb
sub
xchg
mov
inc
xchg
mov
push
test
ds
pop
shll
cmc
jmp
xor
jmp
jmp
test
stos
cltd
pop
lret
xorl
bound
loop
stc
xchg
add
sub
in
xor
push
or
repz
cmp
stos
pop
test
clc
rcll
inc
mov
fcompl
mov
ljmp
iret
fisttpll
data16
push
popf
adc
pop
popf
test
inc
dec
test
pop
pop
xor
iret
es
loope
mov
inc
hlt
nop
aas
arpl
xchg
pop
pop
out
nop
int
xor
mov
rcll
pop
adc
out
dec
adc
pop
pop
andl
jno
xor
cld
xorb
cli
jmp
mov
insb
loop
inc
sub
bound
insb
pop
pop
outsl
out
andl
mov
mov
add
sbb
pop
push
sbb
in
cmpb
jp
cmpb
xor
testl
push
jle
jbe
inc
adcl
cmp
arpl
int
fsubl
cmc
jae
xor
pop
xchg
pusha
sub
jne
mov
jge
jmp
repz
fstpt
adc
inc
std
push
faddl
repz
ljmp
adc
and
pop
sti
xchg
shrl
dec
jne
fcmovb
daa
test
jge
fistl
daa
xchg
xchg
out
or
push
mov
out
xor
push
stos
xchg
xchg
adc
mov
aam
and
call
sbb
or
mov
jl
test
inc
jl
sub
negl
nop
and
ret
negb
or
das
xchg
mov
repz
lahf
ret
pop
add
inc
into
sti
cwtl
sahf
js
or
or
xor
icebp
jl
inc
int3
outsl
shrl
jbe
outsb
xchg
lret
adc
pop
pusha
jbe
jne
inc
lods
xchg
sbb
push
mov
movsl
aam
xor
push
data16
mov
mov
cltd
popf
xchg
fcompl
sub
cmp
or
popf
mov
movsb
sub
call
adc
test
add
cmp
int
scas
dec
dec
and
ret
add
nop
enter
daa
iret
fisubl
xor
xchg
jne
pop
pop
xor
arpl
mov
lahf
adc
or
in
push
repz
pop
xlat
dec
xor
fiadds
leave
mov
into
jae
test
xlat
inc
into
push
loope
pop
negl
pop
push
arpl
cmovg
scas
movsb
cmp
mov
push
pop
imul
fcoml
add
repz
push
mov
rcrb
repz
add
jne
cmpsb
or
mov
insl
or
mov
inc
loop
jne
jae
dec
repnz
mov
sub
jno
xor
sub
mov
sbb
push
arpl
fdivr
scas
and
push
sub
dec
adc
and
or
push
mov
popf
xor
mov
insl
push
test
sbb
push
jae
cmp
enter
sarl
mov
in
pop
pushf
subl
mov
dec
xchg
fucomip
and
xchg
push
jp
mov
out
mov
jno
ret
mov
mov
adc
lea
xor
mov
or
pop
xchg
push
or
clc
pop
sbb
sar
and
push
cmc
pop
pop
xchg
mov
ja
adc
jg
jo
and
push
and
and
sub
adc
loopne
add
out
jno
out
xchg
ljmp
sbbb
mov
and
jmp
sbb
lret
mov
mov
mov
mov
notb
pop
lret
in
mov
sub
sub
lahf
push
pusha
pop
movsl
mov
scas
xchg
int
mov
test
out
ja
xchg
dec
dec
dec
test
insb
outsb
orb
mov
mov
jo
inc
cwtl
lret
int
call
out
xchg
ljmp
mov
lcall
mov
xor
jmp
pop
push
cmp
stos
xchg
cmp
pusha
cltd
popa
cmp
rcrb
idivb
out
data16
je
push
aas
fdivr
icebp
fwait
popa
pop
mov
into
aas
mov
inc
das
loop
outsb
add
jae
ds
adc
mov
sbb
xchg
lods
test
or
test
loopne
fistps
cmp
pushf
or
imul
in
cmpb
fwait
mov
mov
mov
xor
out
push
push
inc
sub
inc
push
add
or
push
xchg
push
xchg
push
out
inc
scas
add
mov
lcall
dec
cmc
repz
movb
mov
jl
jns
es
cmpsl
sub
jo
enter
jns
add
jns
pop
mov
xchg
and
stos
cli
je
dec
or
xchg
ljmp
mov
and
mov
mov
add
stc
mov
fnstenv
mov
shll
push
cld
aas
outsb
daa
enter
dec
loopne
mov
and
fisttpl
jp
arpl
sub
jp
sbb
std
jb
push
loope
cmc
roll
in
bound
jmp
xchg
dec
out
je
xchg
xor
inc
fldenv
fistpl
sbb
xchg
mov
xchg
out
dec
push
push
mov
out
cwtl
inc
fisubs
outsl
xchg
loopne
xor
adc
xchg
cmp
imul
and
cltd
push
pop
and
adc
imul
dec
mov
mov
sub
shl
adc
out
cmp
sbb
jecxz
adc
pop
or
mov
xor
rclb
sahf
mov
pop
mov
sub
jae
ja
ljmp
into
mov
push
out
iret
fs
mov
sbb
sbb
and
ret
mov
jne
cli
js
je,pt
ret
aas
icebp
adc
ret
dec
inc
lds
mov
xchg
xchg
pop
out
out
ljmp
inc
push
jmp
push
pop
jp
mov
pop
jno
mov
mov
neg
int
push
addb
pusha
add
mov
and
push
dec
stos
stos
jmp
mov
mov
dec
je
pop
push
cwtl
xor
sub
pop
bound
inc
xchg
jae,pn
lret
pop
pop
sub
in
mov
jle
dec
lods
mov
aam
aas
jmp
pop
rol
sbb
out
pushf
mov
scas
outsl
test
imul
ljmp
adc
and
test
mov
ljmp
or
xchg
and
sahf
cli
sub
stc
adc
pop
inc
cltd
les
loopne
inc
and
pop
jno
jae
test
cmp
ret
inc
and
lcall
mov
jg
outsb
out
pop
stos
adc
mov
bound
xor
mov
or
icebp
push
xchg
aad
insl
inc
pop
imul
lcall
cld
or
insl
xchg
sbb
mov
push
mov
ror
sub
xor
jne
push
ljmp
ror
add
loopne
xchg
cmp
cmc
repz
movsl
pop
outsb
iret
in
push
clc
adcl
pop
sbb
sub
jb
mov
push
in
and
jmp
loope
movl
xlat
gs
sbb
dec
dec
dec
test
rclw
gs
and
lsl
aas
into
pop
enter
pop
xchg
lret
ret
movsb
adc
shll
inc
nop
addr16
mov
add
sbb
das
sbb
ss
dec
pop
mov
subl
or
dec
mov
pop
mov
add
push
in
sbb
loopne
aam
adc
push
mov
adc
dec
push
lret
pop
xor
in
in
fs
insl
fsubp
jbe
cmp
movsb
and
mov
or
ljmp
mov
adc
jp
loopne
bound
jg
xor
pop
pusha
ret
imul
call
xchg
add
mov
add
out
mov
int3
ss
es
mov
inc
mov
push
pop
xchg
sub
bound
cmc
or
adc
jns
jbe
sub
leave
xor
pop
jp
mov
mov
xlat
pop
xchg
mov
xor
shll
mov
add
shrb
cmp
aad
pop
sbbb
jae
lods
adc
adc
dec
pop
stos
adc
inc
popf
jne
hlt
dec
sub
mov
call
adc
int
fdivrs
push
jno
ja
lods
xor
pop
or
test
or
xor
mov
add
cmpsl
dec
sub
jp
jno
ljmp
imul
loopne
jbe
outsb
test
jne
cmc
fadds
add
lock
mov
pop
loopne
in
arpl
or
gs
and
mov
and
es
inc
push
sbb
pop
out
jae
repz
fadds
inc
cmp
out
into
enter
aaa
fistpll
mov
jae
aas
xchg
jmp
cmc
ret
adc
mov
pop
call
cmp
out
test
jns
sti
and
xchg
sbb
scas
pop
cld
xchg
lcallw
pop
pop
jmp
in
mov
subl
sub
pop
or
mov
cmp
imul
fstp
hlt
fs
mov
lods
jno
dec
iret
in
push
cmp
xchg
stos
pop
shld
nop
push
mov
int3
jmp
nop
mov
xchg
jg
fdivs
repnz
sar
int
push
or
movsl
sub
pop
loop
mov
fdivs
mov
popa
dec
fistl
pop
push
push
and
add
popf
pop
dec
mov
in
aam
mov
sahf
inc
cmp
mov
xchg
into
xorl
cs
in
inc
out
push
dec
cmp
jno
or
test
add
aam
jne
fidivrs
add
idivb
mov
cmpsl
push
test
cwtl
inc
icebp
pusha
mov
and
xor
adc
cwtl
insb
push
and
pop
pusha
ja
aas
push
popa
xchg
lcall
pop
js
into
fwait
mov
pop
jns
pop
sub
lds
mull
push
stc
add
mov
shll
push
push
fisubs
mov
test
pop
push
and
adc
subl
rolb
addl
test
or
adc
out
cmp
pop
adcl
cmpsl
mov
push
je
cwtl
cld
mul
push
dec
sbb
fcompl
je
mov
repnz
in
daa
testb
ret
inc
in
cwtl
in
test
loop
mov
push
sub
cmp
mov
aaa
xlat
imul
pop
mov
out
dec
shrb
repz
mov
push
je
add
lea
xor
fcmovnu
sbb
mov
xchg
cli
fildll
xchg
outsl
aad
scas
and
dec
mov
and
rol
mov
mov
xlat
inc
dec
xchg
ds
add
mov
sbb
jecxz
test
mov
dec
mov
fmull
cs
mov
sbb
inc
into
mov
cmpsl
ja
repz
outsl
mulb
loopne
imul
adc
stc
cs
push
push
shlb
cmp
mov
cmpsl
lahf
ss
mov
stos
int3
leave
jg
rcll
pop
jl
movsb
fs
fdivrl
out
ja
jle
daa
shll
add
push
bound
aam
or
sub
mov
cmp
mov
adc
jp
xchg
xchg
push
mov
js
fxch
mov
outsb
adc
pop
loopne
loope
inc
jp
push
adc
nop
pusha
and
add
movb
popa
jb
and
xchg
aaa
imul
mov
cmp
frstor
inc
push
pop
jns
or
xor
rorl
xchg
push
jno
jmp
in
lds
call
jp
xchg
or
adc
mov
push
and
sub
push
iret
sahf
js
jmp
out
inc
mov
cli
test
nop
cmc
scas
movb
decl
aas
inc
pop
add
xchg
xor
int3
inc
and
imul
push
and
in
jno
fs
xchg
and
add
rcll
xchg
adcl
cs
mov
insb
mov
pop
pop
fucomp
jmp
mov
mov
icebp
dec
ret
mov
cmpsb
sub
mov
xor
xchg
push
xchg
xor
push
aad
push
jg
push
xor
add
mov
xchg
mov
lahf
rorl
cmpps
jg
sub
jp
test
jp
pop
andl
mov
push
lret
out
leave
outsb
or
shr
inc
repz
shll
jne
clc
mov
cmpsb
mov
pop
dec
mov
or
or
push
mull
and
lods
add
mov
sahf
mov
jnp
push
xchg
sub
xchg
icebp
sbb
insb
push
cmp
pop
mov
dec
nop
dec
xchg
pop
mov
fsubl
sub
and
ss
cmpsl
adcl
sub
jp
sarb
cs
fs
clc
cmp
cmp
mov
popf
rcrb
sbb
fcompl
dec
jp
cmp
stc
je
and
xor
lea
jecxz
push
jl
cmp
xchg
sub
into
mov
adc
push
pop
lcall
dec
add
cmp
sbb
cmp
ja
lret
sub
iret
push
pop
adc
and
fldcw
pop
lahf
cwtl
push
je
mov
adc
dec
daa
lahf
sahf
add
stos
cmp
mov
sub
mov
orb
movsl
int
push
jo
dec
add
lahf
dec
inc
mov
outsb
rorb
and
xchg
sub
sti
test
mov
lods
imul
and
sti
mov
fsubl
xor
push
xor
ret
popa
ljmp
dec
adc
aaa
test
addr16
mov
push
sbb
inc
dec
mov
ret
xchg
arpl
notl
xor
pop
jae
jge
xor
dec
cwtl
inc
push
mov
mov
adcl
pop
push
cmp
xor
pop
xchg
jb
mov
aaa
lods
or
ror
movsb
mov
mov
out
jge
and
jp
stos
add
loopne
les
test
cmp
adc
jb
lret
out
mov
dec
sbb
call
les
ja
lret
psubusb
sub
popf
insl
add
sarl
or
xor
fwait
mov
lcall
mov
xchg
jns
cmp
cmp
out
pushf
daa
inc
xor
sarb
add
pushf
jge
mov
push
mov
add
pop
jp
out
jmp
and
sub
pop
jl
sbb
cpuid
outsl
sub
jo
movb
and
and
push
cld
fs
call
push
xchg
jnp
push
and
pop
and
add
and
add
aad
push
jle
jp
jmp
sbb
aam
mov
adcl
ja
push
pop
mov
mov
mov
daa
int3
mov
xor
jge
dec
enter
lods
sub
sub
mov
and
inc
mov
inc
push
lock
add
jae
add
add
arpl
mov
jmp
ja
pop
jg
test
mov
int3
ret
bound
outsl
mov
jecxz
mov
jg
dec
sahf
mov
lcall
das
mov
and
adc
repz
push
ficomps
in
push
fimuls
mulb
lahf
icebp
xor
lds
dec
sub
xor
xlat
mov
xchg
add
pusha
ja
aaa
aam
popa
ret
std
cmp
jbe
sub
mov
xor
pushf
or
add
xchg
inc
fistps
push
mov
fistps
lcall
stos
add
flds
pop
popf
mov
loopne
adc
cmp
test
fisttpl
jl
mov
cmp
outsl
fs
mov
addr16
jb
sbb
das
add
push
stos
adc
jecxz
arpl
or
cltd
bound
and
negl
xchg
int3
fmuls
xor
aas
jle
cltd
dec
in
pop
or
add
mov
lahf
jo
dec
cmp
sbb
xchg
std
test
xor
xchg
movl
add
and
pop
inc
test
pop
adc
cmpsl
sub
rclb
ret
and
dec
or
pop
nop
loopew
mov
pop
jns
fwait
cmpsb
js
adc
sub
inc
popf
cmc
lcall
orl
mov
lods
adc
cltd
inc
and
lcall
es
and
mov
pop
cli
mov
inc
xchg
mov
sbbl
sti
and
mov
sub
bnd
das
fcmovnb
push
imul
adc
jns
iret
outsb
jp
jns
repnz
mov
jo
jbe
fnstcw
mov
leave
add
jmp
sti
and
adc
jge
lret
ret
mov
inc
and
pop
dec
shll
insb
int3
das
scas
loopne
loope
sub
je
int3
dec
sarl
add
xor
inc
leave
or
add
test
cmp
gs
push
xor
and
dec
xchg
ret
orb
call
jo
sbb
andl
sub
lcall
mov
dec
ljmp
dec
vmovq
orb
cwtl
jb
into
int3
push
pop
xchg
xchg
mov
ljmp
mov
movsl
cld
fwait
mov
add
into
jmp
or
rcr
outsb
mov
les
stos
repnz
jno
sub
push
jmp
sti
movb
jge
in
lds
das
push
or
and
ret
in
and
jle
fldt
rorl
loopne
fnstenv
dec
pop
fists
sub
xchg
push
jmp
repnz
ja
mov
ja
jl
adcl
mov
pop
push
mov
test
test
xchg
rcrl
sub
dec
pop
adcl
stos
repnz
dec
pop
out
mov
in
notl
and
fdivrl
or
adc
adc
fdiv
int
fmull
and
lock
dec
in
test
sub
data16
cs
fucom
test
repnz
jp
sbb
orl
adc
in
mov
pop
pop
jne
in
lock
mov
in
cli
das
inc
mov
sbb
inc
add
cld
mov
dec
cltd
push
add
push
cmp
in
sbb
cmp
lahf
jne
add
and
mov
xor
gs
cmp
sbbl
mov
sub
mov
mov
insb
fsubs
push
sub
stos
stos
mov
jb
outsl
xorb
inc
pop
stos
mov
leave
cmp
ja
enter
je
outsl
std
jne
fbstp
inc
stos
leave
dec
jmp
mov
stos
push
push
push
mov
xchg
pop
ds
daa
pop
shrl
jo
pop
push
xor
or
push
mov
lods
lods
cmp
mov
loopne
sahf
pop
arpl
push
dec
loopne
cmp
pushf
sub
movsl
fistpl
cmp
mov
pusha
andl
cmp
fdivrs
mov
fdivr
cmp
push
lock
shl
int
rep
or
jmp
jb
lods
mov
or
insb
leave
rcrb
leave
test
jge
ljmp
push
xchg
or
pop
jge
sti
inc
mov
and
and
mov
xchg
stos
add
into
pop
cmp
mov
inc
mov
movl
sahf
repz
pop
ja
lret
adc
xor
lret
add
out
xchg
je
adc
xor
iret
call
ds
pop
neg
mov
mov
cmp
mov
lods
clc
xchg
shlb
add
inc
xor
lock
add
pop
xor
popf
lret
pop
lcall
lds
and
push
push
mov
jno
call
movsb
sub
push
jge
cli
xchg
mov
mov
mov
ss
scas
inc
pushf
sub
sbb
jmp
mov
push
and
and
lret
stos
notl
shrb
lock
inc
jle
push
mov
dec
scas
sub
or
outsl
mov
mov
mov
movsb
mov
mov
or
cmpsb
adc
nop
rclb
movsl
pop
cmc
ficompl
cltd
cmp
test
rcrb
imul
mov
jo
inc
adc
xchg
jae
xor
pop
xchg
mov
inc
mov
aaa
push
jbe
mov
mov
jae
dec
xchg
test
movsl
pop
loop
xor
sbb
sub
adc
cmp
cmp
stc
push
js
jge
test
cmp
xchg
and
repz
nop
xor
xchg
adc
jns
lret
test
mov
sub
mov
dec
outsl
push
pop
mov
in
inc
mov
arpl
pop
clc
jae
ss
dec
inc
roll
incl
imul
test
pop
jo
lods
sbb
leave
add
iret
add
dec
into
test
dec
mov
cmpb
xchg
das
push
mov
rcrl
jne
jp
jp
adc
or
xorl
sarb
cmp
mov
rcll
jb
push
inc
movsl
rcll
adc
jb
cmpsl
call
rclb
and
or
dec
push
rcrb
and
sbb
out
lahf
pushf
sub
xchg
mov
inc
inc
ret
outsb
push
sub
pop
mov
iret
daa
js
or
sub
pcmpgtd
push
add
mov
sbbb
test
or
js
outsb
outsl
mov
psubd
push
mov
sub
or
dec
cmp
fistl
popa
adc
and
in
sbb
sbb
or
xchg
and
movsb
add
jns
add
int3
popa
daa
push
repz
fdiv
cld
adc
cmp
aam
aad
fmuls
mov
and
xchg
inc
stos
sahf
stos
xor
jo
jo
lock
daa
pop
in
lock
js
xor
xor
dec
jecxz
mov
scas
push
xor
xchg
in
push
push
and
add
in
inc
inc
sbb
in
stc
push
in
addr16
xor
pop
inc
stos
adc
dec
push
test
fs
mov
jge
jnp
and
out
cmp
pop
cwtl
xor
fs
test
and
adc
stos
aam
shlb
push
sub
lret
cltd
test
mov
test
xchg
aam
xor
xor
mov
adc
aad
shll
xchg
bound
rclb
mov
mov
fidivrl
int
inc
mov
adc
jo
jne
adc
mov
leave
sub
dec
mov
adc
mov
xchg
adc
dec
daa
and
pop
adc
scas
jge
mov
add
adc
sti
rcll
push
adc
lret
in
sub
adc
adc
mov
pop
movb
mov
aas
js
jmp
aad
pushf
stc
or
scas
mov
cmpsl
pop
jg
mov
cmpsl
in
js
mov
mov
sub
pop
or
nop
into
aad
xchg
mov
mov
lea
xchg
sbb
aas
aas
pusha
out
mov
inc
ficomps
pop
in
sub
sbb
pop
fildll
iret
ja
inc
jl
sbb
and
imul
cmpsl
aam
std
xor
add
repz
inc
cmp
jmp
int3
pop
add
mov
xor
xor
fsubs
repz
xchg
push
mov
sahf
jno
or
push
or
test
adc
mov
pusha
js
fwait
cwtl
adc
aaa
xchg
sub
adc
fsubrs
filds
dec
in
rcrl
out
add
imul
cmp
arpl
mov
pop
aas
xor
stos
sti
sub
addb
or
or
xchg
mov
icebp
aaa
das
jae
cwtl
sub
shrl
fcmovb
sub
popf
inc
arpl
icebp
xchg
xchg
mov
mov
negl
rorb
xchg
dec
daa
xor
mov
pop
cs
ss
popa
xchg
xchg
push
scas
lock
pop
enter
and
jecxz
outsl
imulb
jl
pop
lea
ficoms
xor
xor
cmp
xor
mov
fsubs
sub
test
xchg
and
stos
shl
adc
push
dec
pop
adc
popa
cmp
or
push
push
popa
jge
fisubs
aas
push
sbbl
pop
xor
mov
cmp
jmp
lahf
mov
sub
cmc
shrl
xor
arpl
jne
jns
testb
out
sub
lods
scas
adc
pop
push
insl
mov
loope
pop
mov
xchg
add
jno
mov
mov
and
push
movsl
daa
add
pop
mov
jmp
jnp
xor
dec
or
fbld
xchg
xchg
xchg
add
enter
adc
inc
add
or
sahf
fwait
mov
les
xor
xchg
adc
lds
mov
out
xor
push
mov
arpl
lods
adc
dec
xor
das
push
adcl
int3
mov
outsl
mov
jle
neg
dec
hlt
lock
mov
xchg
push
push
enter
imul
hlt
jne
inc
dec
mov
lds
inc
lea
sub
push
sub
mov
or
stc
lcall
xchg
in
rol
fsts
shll
mov
mov
jl
push
fdivrs
jno
add
adc
mov
mov
arpl
sti
lahf
dec
cltd
pop
sub
xor
scas
sub
das
imul
inc
das
cmc
icebp
cmp
mov
dec
fsubs
add
pusha
lea
sub
xchg
sbb
aaa
mov
hlt
push
test
int
stos
push
mov
lret
pop
xlat
dec
adc
xlat
xchg
add
pusha
es
lods
and
cmp
adc
push
scas
mov
mov
aaa
mov
sbb
pusha
psubsw
mov
add
call
push
cmp
sub
js
add
push
fcompl
add
jbe
into
or
and
js
mov
and
push
gs
inc
cli
xlat
xchg
jno
adc
mov
fidivl
hlt
fisttpll
sbb
inc
fadds
xchg
pop
push
mov
add
fbstp
movsl
pop
mov
in
stos
push
stos
je
imul
cmpl
sbb
cmp
dec
out
sbb
enter
and
xchg
fsts
sarb
mov
repz
test
les
adc
les
lods
lcall
adc
xchg
ljmp
daa
sub
adc
adcb
pop
repz
mov
mov
lods
dec
push
or
pop
adc
shll
lret
ja
out
and
xlat
jle
xchg
cs
or
mov
adc
and
adc
ret
cli
fdivr
mov
inc
add
xlat
cwtl
xor
add
dec
or
lahf
int
xor
sbb
outsb
add
push
jb
xor
or
inc
out
sbb
adc
flds
cli
jmp
sbb
idiv
or
std
imul
movsb
xchg
mov
pushf
mov
rcr
or
ja
xor
outsb
cmp
stos
les
leave
pop
mov
jae
icebp
or
std
and
or
icebp
dec
aad
push
xchg
sbb
pop
cmp
xchg
sbb
jp
ficoms
shll
orl
or
into
es
and
enter
jo
clc
adcb
jp
sub
pause
inc
sub
ficomps
sub
xchg
or
mov
mov
xor
enter
aad
inc
push
mov
or
inc
shll
ja
ja
lock
mov
ret
mov
test
cmp
push
loop
stos
push
jp
in
jb
xchg
pop
adc
nop
jp
xchg
pusha
jbe
je
mov
xchg
icebp
ficoms
jle
pop
rcrb
add
mov
and
clc
sbb
or
std
loop
inc
movsb
cltd
aaa
in
mov
in
jp
lea
xor
push
mov
pop
pop
xlat
cmpsb
mov
push
cmp
push
pop
sbb
out
pop
cmp
scas
cmp
push
jae
sbb
mov
add
xor
push
mov
inc
adc
cmc
cwtl
dec
ret
and
test
in
push
fs
xor
jp
int3
pusha
sbb
hlt
push
push
xchg
scas
push
pop
xor
or
adc
lret
cmp
pushl
and
enter
pop
and
jns
add
jbe
sbb
pop
jp
lret
mov
inc
pushfw
pop
xor
stos
inc
rolb
and
add
mov
cwtl
push
jae
xor
test
add
push
cmp
mov
mov
cmp
push
fsubr
push
mov
add
push
jbe
cltd
fidivs
insb
mov
jp
mov
dec
lret
dec
cmp
adc
scas
ljmp
scas
xchg
push
dec
shll
sahf
pop
jnp
aas
test
mov
xchg
out
mov
lahf
cld
xor
jp
ret
push
dec
stos
xor
xchg
fistl
data16
test
cmp
mov
adc
pop
in
leave
push
push
jle
and
jo,pn
mov
pop
imull
add
pop
ja
push
xchg
push
add
subb
lahf
xor
jns
or
out
shrb
lods
xchg
sub
xor
testb
push
in
mov
lahf
sbb
or
fdivrs
call
inc
jecxz
mov
sbb
sub
inc
lret
mov
jmp
jae
and
sbb
add
or
jbe
orl
les
dec
scas
clc
stos
xchg
adc
stos
sub
lods
sub
pop
andb
push
and
pusha
clc
js
rolb
or
ret
jo
jecxz
imul
into
sub
mov
xor
int3
cmpsb
push
in
mov
sbb
clc
test
xor
stc
jns
call
lea
add
mov
clc
sub
xorl
testl
pop
mov
pop
cmp
pushf
push
mov
mov
push
or
iret
add
pop
sti
out
jnp
push
icebp
jmp
lret
imul
lahf
jg
cmp
cmp
mov
push
shll
jns
jnp
sbb
insl
rcrl
lods
xlat
mov
stos
jae
sub
test
addr16
imul
inc
push
scas
xchg
adc
in
sbb
adc
fldcw
test
pop
mov
cmp
add
das
jp
xlat
ss
cmpb
mov
adc
jae
scas
loopne
lods
dec
push
int3
push
dec
push
int3
push
mov
addr16
jl
imul
je
push
loop
lds
stos
sub
or
mov
dec
mov
ss
pop
mov
stc
cmp
and
push
nop
pop
repz
pop
or
cli
fnstcw
cs
push
orb
adc
and
jns
add
js
or
mov
push
ds
cmpsb
jmp
out
out
mov
sbb
popa
and
movsb
push
lret
pop
pop
jb
cmp
add
add
dec
cmp
cli
lock
iret
pop
mov
aas
cmpsl
out
cmp
mov
aaa
cmp
mov
adc
mov
icebp
cld
jp
or
lods
push
cmp
les
test
sbb
push
sbb
pop
ja
je
push
add
pusha
pop
dec
bound
pop
add
mov
mov
pop
push
cmp
pushf
scas
or
pop
dec
pop
jp
mov
pop
jg
xchg
inc
daa
push
mov
imul
mov
clc
das
fsts
sub
push
and
cmp
add
mov
push
pushf
lea
ret
pop
push
sub
fldl
popf
fisubrs
push
mov
push
adc
inc
mov
jg
push
xor
daa
adc
push
imul
or
hlt
inc
push
imul
push
in
and
push
dec
or
jmp
imul
push
jp
test
ss
loopne
stc
fsubl
fmul
fucompp
jae
mov
lock
cmp
inc
sub
mov
mov
nop
adc
add
js
adc
lea
push
pop
sub
pop
pop
mov
dec
and
mov
xor
les
inc
cmpsb
add
rolb
sub
add
lea
int
mov
mov
ret
shll
or
mov
mov
loopne
push
xlat
push
cmpl
dec
mov
dec
push
mov
mov
in
pusha
mov
xchg
jp
lea
cs
sub
mov
lds
adc
and
xchg
inc
push
xchg
int3
daa
mov
pop
xchg
incb
data16
dec
pop
fiaddl
xor
lret
lock
sbbb
fnstenv
lods
sbb
stos
leave
stc
loopne
push
leave
daa
fs
dec
sbbb
test
sbb
inc
mov
inc
pop
imul
jbe
cmp
push
pop
clc
dec
rcr
fdivs
in
push
mov
cltd
sub
or
shlb
sbb
push
add
xchg
outsl
xchg
add
lock
jno
iret
pop
inc
dec
mov
insb
popf
mov
stos
xchg
test
xor
mov
xchg
out
adc
xor
jo
push
xchg
loopne
push
sub
cltd
int3
mov
lds
cmp
push
mov
imull
jmp
add
ja
cmp
in
push
jo
sbb
xor
imull
xor
seta
popa
setle
ret
xchg
daa
mov
pop
pop
lea
js
jp
inc
rcr
gs
xchg
inc
out
pop
sub
fcoms
xor
jne
fadd
pop
lret
inc
lods
test
sbb
popf
cmp
mov
sbb
dec
fnstenv
leave
fbld
in
pop
sahf
mov
and
cli
xor
subb
ja
movsl
inc
push
in
dec
jno
add
jns
mov
add
stos
and
inc
mov
enter
xor
xchg
lret
dec
sbbb
sub
mov
mov
sbb
dec
into
xchg
cli
mov
lock
pcmpeqb
or
mov
xchg
shlb
dec
popa
fs
clc
mov
jns
repnz
icebp
je
mov
jno
rcrb
das
dec
iret
jle
jg
es
sti
nop
push
popf
jl
add
mov
sahf
sub
arpl
add
imul
mov
jns
in
push
mov
es
jne
outsl
aaa
fisttps
inc
mov
xchg
test
and
xchg
cltd
xor
jmp
mov
and
adc
lods
push
loopne
xor
jnp
pop
or
iret
mov
jns
jns
jbe
or
push
addr16
mov
ret
mov
add
adc
lods
sbb
cmc
rcr
jno
xchg
je
xchg
stos
daa
lods
mov
inc
call
ja
lcall
ret
pop
fldcw
pop
pop
lea
es
push
cld
jno
pop
mov
rcrl
inc
popf
pop
and
adc
out
fbld
push
inc
divl
bound
movsb
adc
loopne
xor
mov
pushf
jnp
adc
push
es
jl
ss
inc
movsb
movsb
mov
das
push
dec
xchg
scas
insb
and
adc
ret
test
push
test
sub
pop
mov
daa
lret
sbb
sahf
jns
jae
pop
shrb
scas
pop
mov
test
or
arpl
mov
mov
daa
pop
lds
daa
rcll
cmp
mov
loop
fnstcw
dec
out
leave
leave
insl
xchg
xor
mov
push
imul
add
dec
lods
insl
lret
enter
sti
jb
mov
xor
sbbl
icebp
test
fwait
dec
dec
stos
xor
lea
xchg
lock
sub
aam
mov
sub
add
sbb
hlt
sbb
jl
mov
cmpsl
jo
pop
sbb
xchg
mov
pop
dec
jl
mov
scas
lods
pop
xchg
mov
das
and
cmp
clc
or
xchg
jl
es
xlat
mov
mov
xchg
pop
cli
jecxz
ja
pop
jmp
sbb
pusha
repz
jecxz
lahf
dec
shrb
add
popa
push
sbb
notl
sub
rcrl
xlat
mov
fistl
shrb
xor
call
pop
lods
mov
sahf
rcrl
leave
or
fstps
jbe
ss
int
sub
rorb
pushf
stos
push
cmp
mov
jge
dec
xor
inc
fnsave
andl
sub
or
repz
aaa
mov
adc
mov
lahf
inc
into
mov
addr16
add
jmp
inc
or
fildl
adcb
je
pop
aas
xchg
andb
mov
push
std
movsl
pusha
push
out
adc
push
scas
rclb
fcomp
jmp
cmp
xchg
xchg
dec
push
xchg
mov
jns
fisttpll
fnstenv
loope
adc
add
fprem1
dec
rcll
or
cmp
loope
or
xchg
enter
fwait
mov
sub
mov
sub
mov
movsb
js
mov
lods
sbb
cwtl
shll
ja
rcl
nop
and
adc
mov
add
daa
mov
mov
hlt
jl
push
loope
jne
jecxz
pop
xchg
fimuls
xchg
in
ss
movsb
pusha
test
adc
jno
mov
jg
scas
pmaxub
xchg
call
push
and
clc
loopne
jp
stos
cmp
jnp
sbb
ds
push
mov
jae
loopne
mov
scas
aam
les
dec
pushl
mov
mov
lcall
cwtl
xchg
dec
pop
dec
push
push
fdivrp
lods
out
xchg
mov
es
popf
sarl
inc
int
jmp
cmpb
je
and
popa
mov
push
dec
in
mov
xchg
pop
and
cli
test
out
adc
aam
cmc
mov
aas
sbb
jb
daa
daa
cmc
push
jmp
adcl
das
clc
xchg
cld
jno
pop
inc
jae
add
sbb
insb
xchg
jo
cmp
mov
adc
mov
push
inc
dec
sub
iret
jo
inc
pop
jae
imul
jp
jbe
or
in
mov
jno
push
xchg
or
mov
adc
mov
mov
pop
pop
mov
movsb
sub
dec
movsl
mov
push
in
pop
push
dec
in
ret
mov
mov
lds
inc
mov
lock
xchg
mov
in
lods
push
test
idivb
mov
adc
or
xchg
and
sub
scas
jne
push
mov
and
imul
xor
or
outsl
imul
test
push
insb
rcll
andl
out
cmp
repz
push
mov
xchg
or
aad
jl
mov
sub
adc
leave
out
into
inc
cmpsl
in
mov
addr16
stos
mov
test
andb
mov
add
les
xchg
cmpb
push
jle
push
and
mov
arpl
cli
and
mov
xchg
inc
orb
push
push
outsl
mov
push
push
movsb
and
cli
lcall
mov
pop
add
or
or
mov
push
pop
xor
mov
int3
push
inc
addr16
fnstsw
std
cmpl
std
mov
stos
fsubrs
andb
int3
push
cmp
jecxz
sbb
cmp
inc
jns
fcom
shr
add
xchg
sbb
outsl
xchg
pop
sub
and
stos
jg
shlb
dec
add
mov
add
push
out
das
push
test
jne
mov
add
addb
cwtl
sub
addr16
dec
add
and
and
push
pop
or
and
mov
lcall
sbb
mov
pop
sbb
fcom
mov
movsb
adcb
or
call
out
mov
movsl
xor
lahf
out
mov
popa
sub
xor
call
cmpsl
cmp
jp
fldt
stos
out
std
xchg
ret
test
mov
sbb
les
jno
xor
sahf
mov
mov
jb
int
cwtl
jp
mov
inc
mov
arpl
xor
pop
mov
stc
popf
inc
bound
inc
lret
mov
insb
inc
and
sub
xor
aaa
andb
push
je
repz
sub
aaa
inc
dec
orb
adc
adc
fcoms
dec
pop
inc
sti
jo
sub
or
mov
mov
mov
push
ja
mov
mov
rclb
mov
jb
dec
xchg
add
jp
das
daa
xlat
mov
push
xchg
inc
ja
xor
lret
push
cmpsl
xor
cmpsl
les
iret
mov
fisubrs
and
rcl
cmp
fcompl
arpl
jp
add
popf
or
daa
lods
sub
xor
arpl
cli
fwait
dec
adc
dec
or
inc
out
cli
push
mov
jb
xor
push
hlt
clc
push
jp
xlat
push
imulb
add
shrb
mov
sbb
add
inc
xor
adc
sub
mov
ss
cld
cltd
mov
jmp
xchg
mov
push
scas
repnz
mov
add
das
xor
inc
scas
mov
fstps
scas
sub
push
int3
sub
xchg
pushf
ja
in
pop
movsb
popa
xchg
lods
out
inc
xlat
mov
cli
adc
sahf
movsb
cmpb
xchg
and
pop
pop
rcll
mov
mov
mov
inc
or
or
mov
out
inc
xor
or
push
dec
bt
dec
pop
sbb
sarl
pop
ja
mov
decb
and
dec
rcrl
mov
aam
adc
cmp
in
jmp
adcl
outsb
push
andl
test
dec
or
jae
cltd
daa
js
test
mov
xor
iret
xchg
pop
push
cmp
mov
arpl
adcl
sub
mov
cld
pop
inc
adc
mov
jae
sub
mov
pop
enter
xor
adc
shrl
push
sub
mov
pop
push
pop
cmp
lods
push
adc
mov
lock
sbb
adc
push
stos
xor
lret
mov
or
add
or
push
ffreep
jb
fsub
jmp
xor
cmp
sahf
scas
cmp
xchg
sbb
dec
add
dec
and
sub
movsb
mov
cmpsb
push
in
in
cmpsl
test
je
ret
and
mov
sbb
xchg
imul
push
add
inc
mov
lds
sbb
xorb
and
cmp
aad
nop
jb
sub
in
mov
movsb
pop
std
and
mov
mov
repz
mov
loope
jmp
fimuls
ret
les
aaa
sub
fistps
mov
cmp
mov
fmuls
adcl
dec
sub
lret
fsts
hlt
or
xor
cltd
jp
mov
lret
adc
jo
xor
add
mov
pop
lahf
mov
sub
iret
xchg
mov
pop
fucompp
fisubrs
add
mov
xlat
scas
enter
inc
cmp
mov
inc
jl
inc
add
scas
inc
push
test
lcall
rcrb
pop
push
js
shll
push
cs
mov
push
mov
outsl
or
ja
jbe
mov
and
adc
push
and
xchg
xor
sar
pushf
imul
mov
divl
or
mov
mov
insb
or
mov
and
cmp
pop
jg
pop
push
add
cli
cmpsb
test
jg
aas
and
out
outsb
arpl
popa
cmpl
xchg
stos
or
ss
pop
stos
cmp
sub
xchg
jp
shll
gs
cmp
pop
rolb
ljmp
stos
lods
adc
adc
in
dec
push
xor
xor
mov
jecxz
scas
ds
pusha
rcr
cmpl
add
loop
fstps
test
xchg
clc
movl
xchg
xorb
mov
cmp
xchg
jmp
or
jae
dec
out
insb
test
lea
sahf
scas
add
ljmp
xor
jno
mov
iret
lret
mov
ss
js
inc
int3
jle
push
jb
push
mov
stos
into
sbb
movsl
adc
pop
xchg
jmp
mov
mov
repnz
or
rol
mov
jns
mov
adc
jecxz
push
mov
adc
dec
jmp
xor
loop
mov
cltd
push
js
xor
in
in
mov
dec
xor
dec
outsb
jnp
mov
mov
stos
mov
jo
sub
push
repz
and
push
out
rol
pop
pop
add
popf
mov
aaa
sbb
int3
lods
adc
movsl
fsubl
jae
pushf
out
aam
fwait
cmp
bswap
dec
out
out
out
sub
fistl
outsl
in
adc
aad
out
xchg
sub
mov
data16
jl
sub
xor
mov
enter
addr16
cld
dec
jmp
push
sbb
sub
and
in
mov
es
jmp
sub
mov
test
lock
and
or
daa
enter
pusha
xchg
sbb
bnd
test
xchg
push
daa
mov
daa
mov
sub
xchg
xchg
mov
aam
pop
inc
mov
or
lret
ss
cmpl
add
sub
iret
scas
sub
clc
test
add
dec
lock
mov
lcall
in
adc
arpl
mov
mov
adc
inc
aaa
das
icebp
and
jno
mov
jge
popf
xchg
jb
idiv
test
xchg
jns
sbb
in
and
mov
orb
fistpl
xor
mov
lcall
and
cmc
enter
cmpsb
add
sub
stos
jnp
pop
cs
repz
in
cs
cwtl
and
fcomps
inc
ja
enter
xchg
inc
jl
je
jns
cltd
ja
arpl
mov
jbe
xchg
shl
mov
and
xchg
mov
or
hlt
subl
aam
call
scas
lods
fldl
setae
add
jp
mov
lahf
into
mov
pop
and
xor
daa
aaa
push
cmc
adc
jge
bound
dec
jne
and
clc
xchg
popa
sbb
pushf
inc
int3
cmc
leave
jmp
bnd
and
mov
inc
movsl
xor
insb
dec
ds
jno
fisttpll
jmp
mov
stos
nop
mov
lock
test
filds
or
arpl
lea
cmc
push
fiaddl
fadd
les
or
scas
sub
pop
adc
inc
push
xor
aad
imul
outsl
test
xor
mov
pop
mov
xor
jge
add
gs
scas
stos
push
mov
sbb
loope
lret
in
cwtl
jl
mov
mov
je
jge
jns
sbb
xchg
and
push
das
lcall
mov
in
jns
jg
mov
orb
lock
lahf
xchg
cmp
out
dec
fistpll
inc
jne
aaa
mov
rorb
sub
mov
fsubrl
pop
les
inc
ret
in
decl
into
das
pop
int3
dec
rolb
jecxz
mov
addr16
mov
sbb
sub
or
nop
jl
sbb
pop
loope
push
inc
fnsave
call
mov
lods
pop
push
push
sbb
cmp
pushf
jg
jecxz
cmp
stos
cwtl
pushf
loope
cmpsb
imul
xor
xchg
push
push
dec
gs
xor
mov
mov
xchg
cli
xchg
push
orb
xlat
ljmp
xor
jecxz
adc
sbb
popf
test
out
cld
jge
outsl
push
mov
in
insl
lahf
jle
mov
loope
outsl
push
jb
inc
adc
jno
xor
mov
fisttpll
les
or
mov
aas
lds
stos
jnp
xor
insb
sarl
daa
clc
int
mull
inc
xchg
leave
repz
inc
imul
mov
adcb
and
das
pusha
cld
fs
adc
mov
dec
or
push
or
mov
lret
jns
testl
lahf
mov
add
out
dec
stos
leave
pop
jno
adc
add
cmpsl
es
jmp
ror
push
lods
mov
lods
movsb
xchg
test
xor
test
loope
pushf
jbe
lds
pop
mov
xchg
fwait
test
mov
mov
push
aaa
push
add
test
aas
jb
fldt
cmpxchg
push
sub
repnz
adc
add
cmpb
add
inc
lea
add
pop
aad
dec
add
xchg
pushf
in
sbb
aam
pop
inc
add
cltd
lret
in
push
test
pop
clc
and
out
mov
aad
mov
popf
stos
or
pop
push
dec
and
aam
ds
imul
mov
je
pop
mov
or
push
pusha
mov
or
ja
xor
cmp
adc
adc
dec
jno
std
inc
jge
inc
psadbw
push
mov
xchg
test
cmp
cltd
pop
dec
and
push
sub
inc
inc
inc
enter
mov
cwtl
ficoml
je
adc
bound
jl
adc
pushf
ret
mov
jecxz
sub
fstl
aas
mov
xchg
sub
outsl
adc
ret
dec
xchg
jns
mov
iret
jno
mov
test
aaa
mov
inc
push
out
shlb
adc
js
dec
ljmp
adc
add
je
and
ss
aad
sahf
jo
stos
cli
sub
lret
gs
cmc
icebp
mov
or
rol
movsb
pop
xlat
cmp
and
pushf
pop
mov
push
mov
sysenter
push
mov
lods
xchg
xlat
push
pop
mov
je
fsts
xor
mov
mov
mov
enter
test
repnz
cmp
icebp
pop
fisttpl
test
nop
aas
out
add
inc
lret
lret
inc
mov
xchg
add
ficoms
mov
adc
mov
pop
inc
pop
mov
ja
pop
int
out
loopne
cmc
push
les
mov
enter
mov
daa
mov
mov
cmpsl
add
icebp
xlat
test
xchg
xor
out
repz
les
pop
adc
pop
pop
adc
sub
cmc
lods
push
sub
push
mov
icebp
out
push
fsubrl
xor
mov
xchg
in
push
inc
addl
xor
push
mov
dec
mov
js
and
insl
sub
mov
inc
sub
or
icebp
sub
aad
idivl
jp
pop
push
dec
loopne
and
jp
xchg
mov
sub
or
jae
out
dec
stc
loop
xor
or
adc
push
addl
movl
jmp
adc
fdivrs
xor
add
adc
fcompl
jge
push
and
jmp
sbb
dec
cli
mov
cmpsb
arpl
ror
inc
inc
and
movsb
sbb
push
cmp
aas
stc
sbb
les
nop
mov
mov
fnstsw
lret
adcb
pop
loop
sbb
mov
scas
ds
lret
sbb
mov
fcoms
cwtl
xor
enter
out
lahf
sbb
jae
jns
mov
sub
inc
xor
lock
test
popf
test
sar
and
mov
stos
mov
adc
sbb
mov
adc
mov
adc
imull
jecxz
mov
imul
pop
cltd
ja
cmp
and
lret
enter
sarl
push
mov
or
loop
push
mov
sub
cli
dec
loope
aas
inc
outsb
mov
cli
pop
lcall
push
into
or
hlt
loope
jmp
js
or
jne
jl
and
xchg
jb
sub
push
jge
cltd
and
ljmp
add
sbb
push
pushf
xor
mov
mov
lock
push
sbb
mov
mov
imul
outsb
mov
movsl
in
sub
adc
insb
xlat
inc
pop
jl
lods
mov
xchg
adc
mov
subb
and
push
das
jp
aas
sub
bound
mov
mov
js
jp
cmp
outsl
imulb
push
popf
jmp
push
mov
cs
nop
call
insb
xorl
jge
fwait
xor
popl
sub
mov
and
lea
xchg
xchg
xor
out
inc
push
cmpsb
jne
sbb
pushf
jp
xchg
insb
fwait
xor
cmp
mov
movb
rorb
sbb
sub
jp
xor
ljmp
stos
test
and
jmp
es
mov
push
mov
xchg
add
xorl
dec
push
jnp
orb
add
clc
aam
dec
dec
loopne
call
cmp
mov
fnstsw
push
pushl
fidivrs
notl
push
xchg
ss
inc
lcall
xor
leave
mov
push
mov
and
je
call
xlat
add
mov
sub
push
mov
sub
ds
movsl
adc
jle
pop
movsl
dec
jge
and
mov
or
pop
dec
lahf
call
pop
push
xor
ret
cmp
lock
adc
sub
ficompl
jle
mov
sub
gs
dec
imul
xchg
daa
fbstp
adc
push
lods
out
xor
cld
out
adc
pop
fbld
sbb
push
shrb
imul
or
push
mov
pop
adc
mov
in
push
push
dec
shll
enter
sub
jp
xlat
fdivrs
lds
enter
pop
andb
int
and
xlat
inc
add
imul
dec
gs
and
rcrl
dec
shll
ja
lods
in
cmp
jle
popa
ds
leave
icebp
jbe
sub
sbb
outsl
test
jecxz
sbb
sbb
pop
jno
call
push
subl
push
leave
imul
jbe
pop
sbb
fcomp
jg
mov
aas
rcl
orb
jle
sbb
xchg
jp
dec
mov
inc
adc
ror
imul
leave
fwait
addl
xor
jae
imul
jp
out
test
or
clc
inc
nop
xlat
pop
scas
subl
adcb
jae
sti
pop
jle
jmp
mov
or
add
cmpsl
hlt
rclb
mov
stc
gs
mov
jle
aas
jp
cmp
push
andl
cmpsl
lret
jns
inc
sub
popf
aaa
icebp
scas
pop
cwtl
jecxz
mov
subl
test
add
xor
test
in
inc
loop
or
xchg
sub
adc
jnp
sbb
push
pop
push
sub
adc
and
ss
jge
pop
sbbl
jns
inc
mov
mov
add
dec
cmpsl
sub
je
inc
and
int3
cmp
dec
jno
push
pop
test
cmp
lock
pop
dec
fisttps
sub
sub
mov
mov
and
jb
mov
sahf
dec
xor
and
test
shll
nop
sbb
mov
mov
dec
xchg
into
int
dec
mov
adcb
shr
mov
iret
movsl
cli
cmp
xchg
imul
and
mov
insb
lds
decb
push
add
xlat
mov
add
lret
and
add
mov
cmp
add
sbb
daa
jns
je
test
nop
mov
or
inc
xchg
push
mov
scas
into
into
aaa
cmp
mov
cld
add
dec
ljmp
gs
adc
sub
rcll
in
mov
dec
mov
jle
xor
mov
lods
clc
and
push
cmp
ret
testl
nop
mov
xlat
fdivl
pop
rclb
into
cmc
or
mov
movsl
rol
push
ja
fiadds
mov
pop
jne
sub
push
mov
jo
test
mov
mov
scas
mov
mov
push
fstpt
into
mov
adc
cmp
lret
andl
sub
pop
xchg
gs
stos
push
or
push
pushf
jge
sbb
loop
push
outsl
adc
imul
int
in
lcall
jp
in
inc
dec
jg
popf
sbbb
inc
pop
sahf
js
or
dec
andb
jbe
xor
iret
dec
sbb
outsl
pop
sub
adc
icebp
dec
sti
scas
out
iret
aas
push
call
pushf
inc
in
mov
push
testl
ja
mov
lods
mov
sahf
aas
in
sbb
xchg
xchg
dec
pop
in
lahf
mov
fsub
shrl
addr16
cld
cltd
push
popa
imul
lock
cmp
test
jl
jne
or
jns
ja
jb
in
mov
aas
out
mov
xor
orb
fidivl
adc
pop
int
lods
js
cmc
shr
jno
xchg
dec
lock
adc
mov
mov
sbb
mov
enter
loope
xchg
xchg
and
clc
inc
mov
jmp
test
and
in
call
xor
inc
sbb
xchg
cld
xchg
stc
inc
jno
xchg
cmp
divl
xor
cwtl
adc
and
sbb
jns
fists
sbb
leave
add
or
cmp
xor
in
xchg
in
in
call
pop
add
sbbb
cmp
inc
jne
vmovdqu8
push
jmp
repz
pop
add
push
jno
push
pop
xchg
xchg
mov
jmp
addr16
cmp
xor
jns
ljmp
lea
fdivs
leave
fnstenv
mov
cs
cltd
lret
sub
movsb
mov
cmp
add
lods
aaa
dec
adc
test
sbb
in
nop
inc
inc
add
nop
adc
xor
dec
jb
insb
sbb
clc
enter
fstpt
cmp
mov
mov
sbb
sub
iret
push
sbb
rolb
or
mov
pop
lret
push
push
xor
xchg
ret
ljmp
xor
sub
xor
xor
popa
adcl
sbb
pop
ror
std
xlat
jo
adc
push
data16
push
movsl
gs
mov
shrl
jo
jmp
into
orb
sbb
push
das
ljmp
shlb
sbb
adc
mov
cmp
pop
test
lret
mov
xor
data16
imul
pop
adc
jmp
in
jle
das
adc
pop
out
in
pop
push
and
stos
mov
pusha
adc
xchg
jle
popf
sbb
mov
push
and
jo
popa
cltd
rclb
jno
xor
pop
xchg
xor
jl
ss
jae
sub
fwait
sub
clc
cltd
sub
push
pop
xchg
and
dec
xchg
dec
subb
negl
jl
hlt
wbinvd
popf
pop
mov
adc
xor
or
pop
push
mov
push
ss
xchg
jns
or
push
sub
icebp
imul
gs
cli
mov
inc
cli
xor
jne
pop
popf
lods
xchg
jno
add
mov
xchg
adc
scas
arpl
pop
mov
and
or
xchg
push
jns
xor
fmuls
sub
fisubrl
into
or
mov
inc
mov
mov
popa
fildll
ret
xchg
push
in
jne
loop
lcall
ret
xor
pop
ret
push
pop
popa
ljmp
repz
repz
inc
adc
stos
xchg
lock
mov
pop
cli
and
cltd
sub
mov
into
xchg
sbb
outsl
pop
frstpm(287
lcall
cmp
lea
inc
stos
or
in
sbb
pop
jge
lahf
jmp
dec
cmp
repnz
lock
or
jl
mov
adc
movsl
sbb
jae
cmc
inc
mov
loopne
xchg
test
adc
pop
jns
push
lret
mov
adc
jno
and
sbb
xchg
push
hlt
repz
sub
pop
orb
jae
xor
jne
addr16
mov
inc
jo
ljmp
add
jg
lds
decb
pop
cmp
xorb
jl
andl
pop
dec
pop
iret
je
pop
add
jo
cs
adc
daa
pop
nop
jmp
call
sarl
inc
inc
arpl
leave
lea
and
mov
inc
jecxz
ja
imul
and
pop
sahf
ffree
pushl
clc
loop
mov
add
test
imul
test
test
arpl
xchg
hlt
fstpt
mov
fstpl
or
jae
add
pop
mov
xchg
divl
mov
pushf
shll
fdivrs
out
pop
inc
push
cmp
mov
mov
repz
sub
es
sub
sbb
push
sbb
fldln2
sbbl
int3
mov
push
fs
pop
xchg
mov
je
fstpl
jp
dec
dec
pop
dec
push
adc
pusha
and
subl
push
dec
jae
pop
push
mov
mov
mov
jecxz
cmp
lret
push
jns
sbb
jle
sti
stos
cs
aad
repz
pop
lds
xor
xchg
es
lahf
out
xorl
and
xchg
xor
inc
ds
xor
jg
xor
pop
jae
push
dec
adc
mov
sbb
add
popf
xchg
or
out
xchg
loopne
lods
aas
cmp
repz
mov
out
out
cltd
sti
pop
in
repnz
sub
lahf
frstor
mov
cwtl
jne
push
cmp
mov
les
xchg
mov
push
cmpsb
add
cvtps2pi
clc
add
fisubs
mov
xor
cld
xor
sbb
imul
cmp
lcall
popa
or
adc
das
xlat
add
sub
aam
cmpsb
mov
mov
imull
and
dec
or
arpl
int
inc
xchg
sbb
mov
add
shrb
mov
bound
lahf
popf
and
inc
es
adc
push
xchg
dec
xchg
jns
sub
jp
daa
insb
std
mov
xor
loopne
inc
pop
ret
adc
xchg
jg
adc
subb
and
data16
fisubrs
cmpsl
into
add
stos
jno
inc
pop
lds
fcoms
pop
adc
lahf
sbb
jmp
cmpsl
and
mov
in
mov
lods
jl
filds
aad
xchg
mov
add
js
in
cwtl
sbb
mov
dec
out
and
push
movsl
inc
sub
bound
sahf
lods
ror
mov
mov
daa
pop
xchg
xchg
out
stc
sarb
pop
dec
cmc
idivb
pop
mov
push
xchg
outsb
scas
lock
inc
int3
cltd
jge
push
or
lret
sub
scas
in
rcl
lds
loop
xchg
lods
push
cmp
mov
xlat
in
sbb
insl
imul
enter
aaa
jmp
inc
or
incl
dec
inc
pop
div
inc
mov
dec
sbb
mov
sub
mov
jns
fwait
jae
sbb
pop
mov
and
lods
es
stc
imul
out
subl
xchg
sub
mov
popa
cmp
mov
mov
ret
mov
subl
xor
push
cmpsb
cmp
cmpsb
push
push
sbb
sbb
mov
push
aas
jne
cmp
jl
mov
shl
sarl
shll
out
inc
daa
xchg
xor
inc
in
xchg
jl
mov
cltd
inc
mov
decl
sub
mov
rep
clc
mov
xchg
add
pop
jae
pop
mov
mov
imul
mov
es
mov
mov
cmp
mov
ficoms
cmp
fistl
ljmp
mov
jbe
cmp
cmp
cltd
outsl
imul
xchg
int3
inc
test
sub
inc
mov
fs
pop
inc
dec
mov
dec
dec
inc
and
pop
fdivs
xchg
push
and
adc
add
lret
xchg
push
adc
inc
mov
negb
aas
add
popf
hlt
je
loope
test
js
ja
jl
cld
enter
stos
les
fidivs
jb
pop
and
lods
out
lock
pop
dec
mov
aas
lcall
fdivl
jmp
mov
add
fmull
shl
sub
shrb
xlat
fsubrl
mov
xor
jb
mov
pop
jae
sti
cmpsb
and
popa
addl
sbb
adc
xor
cmpsl
dec
inc
add
sbb
mov
adcb
movsb
imul
jp
xor
or
xor
pushf
pop
sub
xor
push
xchg
sub
popf
pop
stos
mov
sub
jo
xor
xor
imul
xor
cltd
sub
cmp
ficompl
sti
xchg
in
scas
sti
sbb
fstpl
sub
icebp
ds
cli
fwait
push
push
inc
pop
sub
fdivrp
test
and
adc
adc
adc
mov
xor
mov
push
rcl
test
add
mov
out
mov
cmpsl
gs
xor
ror
and
pop
mov
out
das
jle
out
xor
into
fs
negl
cmpsl
mov
test
cmp
pop
sub
les
push
and
mov
div
pop
or
scas
rorb
je
clc
pop
loope,pt
subb
cli
mov
cmp
mov
stos
icebp
add
cmp
int3
stos
jmp
sub
jg
xor
stos
jb
pop
jle
mov
in
jmp
lcall
pop
hlt
pop
xor
push
jo
loopne
aam
shl
aas
add
xchg
movsl
push
lock
sub
and
or
jg
lret
add
ljmp
mov
sub
cld
nop
das
fldt
jnp
or
nop
mov
cmp
and
xor
fmuls
je
imul
push
out
mov
pop
outsb
out
loop
cmp
fcom
cwtl
push
jp
sub
pop
fwait
push
fadd
mov
cld
pop
int
add
pop
pop
xor
jmp
mull
add
and
dec
jge
pushf
sbb
push
adc
in
mov
dec
je
lods
fsubrl
mov
out
jnp
push
enter
shrl
pop
cmp
pop
pop
inc
scas
int
push
inc
inc
sbb
push
ljmp
push
xchg
test
xor
mov
call
push
jns
mov
sub
into
lods
xchg
cld
jo
push
jp
jns
pushf
pop
pop
cld
or
xor
scas
rcrl
mov
mov
xchg
dec
cmp
push
loopne
outsb
dec
inc
dec
loopne
inc
arpl
or
push
pushf
insl
lock
stc
loopew
cmp
jl
push
imul
xchg
xchg
ljmp
sbb
loop
mov
rol
push
cmpsl
iret
xor
jg
add
jecxz
sub
mulb
inc
and
enter
scas
outsb
decb
dec
and
and
in
lret
iret
add
and
aam
sbb
cld
inc
lds
test
inc
xor
sarl
movsb
sbb
push
cmp
or
xchg
leave
xor
rorl
xor
adc
clc
mov
test
jns
sahf
inc
jge
pop
outsl
jg
rcrb
add
xor
push
mov
adc
fs
push
xchg
cmp
or
mov
mov
test
mov
iret
xor
pop
orb
xor
fdivr
cmp
daa
or
xchg
pop
scas
inc
mov
push
dec
pusha
test
lds
add
loopne
adc
mov
pusha
jno
dec
aas
hlt
fstpl
popf
sbb
inc
test
iret
nop
fdivrl
and
shlb
jl
lcall
ret
nop
xchg
dec
icebp
in
pop
inc
ficoml
dec
cmp
adc
mov
adc
xchg
xorb
and
inc
fs
pop
bts
loop
inc
sbb
pop
adc
or
dec
xchg
sub
ds
jp
imull
subb
lea
mov
pop
cmpsl
or
xor
ljmp
or
or
or
and
jne
or
jle
test
add
fadd
outsb
jmp
adc
add
inc
imul
push
out
fwait
push
jecxz
jmp
jnp
adc
dec
push
pop
aaa
imul
dec
xorl
pop
into
int
int3
adc
stos
movsl
xor
or
push
mov
dec
rolb
jo
inc
test
push
out
cltd
hlt
inc
aam
dec
xor
mov
mov
adc
sub
loop
test
aas
and
jmp
and
inc
mov
xor
mov
jnp
cli
and
mov
mov
repnz
stos
mov
mov
lods
in
imul
inc
rclb
cmpsl
lea
jecxz
and
push
in
shrb
fmull
mov
add
push
jo
out
or
mov
and
sub
dec
repz
das
push
or
dec
iret
lds
pop
outsl
loope
imul
loopne
add
in
orps
mov
adc
out
cwtl
mov
out
fsubr
pop
xor
xlat
and
mov
sub
in
pop
jl
clc
movsb
cld
out
pop
mov
pop
push
cmp
into
outsl
push
pmuludq
cmp
rcl
push
sub
adc
mov
or
lds
push
and
add
movsl
ret
dec
adc
pop
dec
daa
jle
arpl
std
mov
movsl
imul
out
cmp
push
fidivs
dec
jae
inc
jno
sub
jp
jg
shll
and
sahf
pop
xchg
fistpll
xchg
push
xchg
js
mov
jno
sub
or
stc
xchg
out
push
dec
rcrb
mov
jle
aaa
jno
adc
dec
sbb
mov
imul
loopne
popf
adc
ds
inc
sub
add
inc
push
lods
mov
xchg
in
cltd
fs
test
and
in
add
out
mov
inc
leave
lock
scas
xchg
mov
sub
jo
dec
inc
push
jp
push
dec
xchg
jno
out
push
sub
popf
xor
jae
or
mov
sub
hlt
orl
jecxz
inc
pop
xchg
dec
pop
adcl
pop
add
stos
and
jne
mov
mov
sti
mov
arpl
mov
ret
lods
mov
fdivp
jge
bound
data16
xor
std
add
pop
or
add
test
mov
jb
and
sti
icebp
xchg
mov
or
out
xchg
insb
aad
leave
push
es
test
xchg
dec
les
jp
lcall
mov
cmpl
add
push
inc
gs
xchg
push
loopne
adc
pop
xor
cs
jl
pop
xchg
xor
add
test
popf
outsl
test
pop
lret
adc
movsb
mov
loopne
push
mov
jb
sbb
rolb
ja
xor
add
pop
adcl
xchg
dec
inc
mov
push
gs
pushfw
aam
lea
mov
pop
pop
ljmp
call
push
aam
rorl
sub
sbb
int3
pop
outsl
loop
inc
bound
xorl
and
mov
xchg
push
dec
daa
addr16
lret
hlt
jmp
into
into
sbb
jmp
lahf
sbbl
mov
pop
or
pop
mov
mov
or
popf
push
xchg
pop
lret
sahf
mov
mov
inc
push
and
lcall
test
rolb
nop
adc
sbb
pop
dec
jns
popf
daa
outsb
or
dec
push
fsts
jae
leave
pop
call
lods
lahf
jmp
je
test
ret
fwait
sar
mov
shll
fwait
inc
loop
rcrb
mov
jp
cmovg
out
aas
imul
jmp
adc
xor
xchg
sbb
inc
inc
cmpsl
push
or
lret
xchg
popf
push
jl
icebp
leave
push
xor
sbb
push
mov
daa
sbb
pop
jnp
mov
stos
test
sub
mov
outsb
cli
jge
or
dec
xchg
and
ret
fwait
or
sbb
inc
jmp
in
dec
cmp
xchg
ror
jae
lods
jns
mov
add
fimull
mov
pop
lock
bound
inc
xorb
fcmovne
rorb
xchg
adc
mov
mov
mov
or
in
loope
jbe
adc
xchg
outsl
sbb
in
test
inc
psrlq
and
sbb
lret
or
inc
inc
add
cwtl
sub
sarl
pop
jno
adc
xchg
fs
int
ljmp
subb
les
mov
lods
or
pop
cmp
and
fcmovu
fidivrl
pop
in
sahf
stos
push
jb
mov
or
popa
pop
stos
cmp
fwait
dec
je
sahf
mov
ds
iret
xor
or
cmpl
lcall
mov
outsb
fdivl
jns
cltd
xchg
sub
insb
adc
jle
sbb
lahf
push
cltd
jge
sub
f2xm1
pop
xchg
sub
data16
push
mov
call
sbb
or
and
mull
pop
clc
stos
icebp
push
push
xor
outsl
mov
adc
cli
mov
xchg
repnz
jg
push
mov
dec
mov
ja
popa
inc
test
cmc
mov
jne
mov
outsl
out
cmp
les
ret
mov
adc
xchg
xchg
pop
pop
or
xchg
xchg
cmp
sub
je
sahf
out
add
std
lahf
adc
push
add
mov
sbb
faddl
mov
lcall
sub
ja
aad
unpcklps
cli
repz
adc
push
stos
sbbb
cli
pusha
or
or
xchg
cli
in
ljmp
sub
or
pop
rolb
jmp
pop
lcall
stc
mov
sbb
stos
std
mov
in
xor
xor
adc
jmp
mov
push
cltd
jp
mov
rorb
and
pop
daa
mov
cmpsb
fldl
movsl
pop
das
push
jle
das
xor
insb
call
lahf
lock
das
push
xor
fs
cmp
pop
lret
adc
xchg
notl
and
jo
test
xchg
adc
mov
jb
insl
mov
jle
in
outsb
mov
push
xchg
les
fiaddl
jne
clc
jmp
lahf
ja
mov
in
xchg
xchg
js
out
cmpsb
add
jecxz
ss
not
pop
enter
stos
sbb
shrl
lock
dec
push
repz
xchg
mov
notb
daa
stos
push
addr16
and
ss
dec
add
out
pushf
nop
les
fisttpll
out
into
pop
sbb
stc
cmpsl
push
jmp
gs
mov
and
adc
jg
call
cli
cltd
call
mov
ret
jmp
sbb
jge
push
cli
and
or
cld
loopne
sub
les
adcb
jae
mov
movsl
dec
push
lret
add
inc
out
stc
popf
xor
les
bound
stos
addr16
lods
hlt
outsb
or
xchg
pop
popf
jmp
out
adc
push
add
dec
cmp
jge
push
mov
lea
fnsave
dec
fnsave
mov
sbbb
inc
adc
cmp
sti
cmp
mov
nop
sbb
push
xorl
mov
arpl
add
mov
decb
cmp
sti
js
loopne
roll
insl
and
xchg
add
es
push
or
jmp
sbb
mov
ficomps
add
pusha
jle
mov
mov
cmp
inc
sub
sahf
call
pushf
push
data16
sub
push
cli
fiadds
test
shl
xchg
test
or
aam
leave
mov
xor
lcall
pushf
inc
sbb
and
mov
mov
or
pop
ljmp
sbb
pop
xchg
lods
movsb
popf
sub
inc
jecxz
cltd
fsubr
lea
add
xor
sbb
arpl
or
cmp
das
and
jle
xchg
movl
inc
addb
jmp
jecxz
mov
adcb
sub
aas
add
and
jae
fistl
mov
and
in
pop
in
adc
sub
dec
jno
inc
dec
and
pop
lcall
add
ja
andb
fbld
lahf
mov
xchg
push
add
and
and
or
sti
mov
es
rcrb
dec
dec
cmp
pop
mov
outsb
nop
mov
xchg
mov
jnp
add
mov
cli
adc
sbb
js
inc
xor
repnz
mov
test
and
scas
insb
sbb
fsts
sub
out
aaa
cmp
enter
mov
inc
imul
jb
call
lret
arpl
popa
call
in
ret
stc
and
loope
push
dec
adc
xor
icebp
ficomps
inc
je
sahf
adc
lds
jmp
in
hlt
insb
bound
cld
push
mov
mov
xor
push
test
xor
mov
sub
xor
faddl
pusha
sub
xor
leave
fistps
cwtl
xor
jge
cmp
sub
mov
pop
add
push
daa
out
pop
lock
adc
aas
insl
sub
add
xchg
dec
xor
inc
push
xchg
test
lcall
jg
cmp
fucom
decb
push
mov
pop
inc
mov
movsb
mov
jb
loop
inc
imul
or
jle
cmp
es
aaa
mov
scas
inc
stc
jg
push
sub
mov
mov
test
scas
jne
cld
push
xchg
out
or
lods
xchg
icebp
mov
jl
fmull
cltd
int3
les
add
push
shrl
pop
adc
xchg
inc
jnp
icebp
jae
adc
dec
insl
lds
adc
xor
and
cli
inc
addr16
push
imul
ret
push
sbb
punpckhdq
cwtl
and
jle
jp
sti
sub
mov
mov
loop
jnp
lds
sti
leave
clc
mov
mov
xor
push
xchg
je
sbb
xor
lcall
push
add
inc
inc
mov
sub
and
jbe
mov
ja
xor
sub
addr16
dec
pop
push
fidivl
xchg
jne
xor
ljmp
insl
test
les
je
push
or
insl
cli
xchg
stc
je
and
test
cltd
rclb
out
movsb
ja
or
or
or
cmp
xchg
xor
dec
dec
inc
push
jbe
roll
stos
push
shlb
xor
out
push
pop
or
pop
into
movsl
pop
mov
fwait
andl
ficoms
push
inc
gs
aaa
incl
dec
jecxz
cld
push
cli
inc
out
xlat
inc
xchg
incl
movq
cmp
stos
jmp
mov
ljmp
aad
rcrb
mov
jne
insl
cmp
mov
addl
dec
pusha
ja
sub
out
sub
push
mov
sbbb
mov
sbb
addr16
xchg
push
enter
jbe
dec
data16
xchg
xor
add
and
insl
push
cltd
inc
adc
fildl
cmc
pop
cmpsl
sar
mov
mov
sbb
jnp
adc
cmpsb
mov
pushf
push
sub
test
jnp
dec
mov
xor
insl
add
add
pop
mov
icebp
fwait
cmp
les
dec
repz
sub
jns
aaa
pop
sub
mov
jb
and
sti
nop
mov
jnp
cmpsb
push
loope
shll
mov
pop
xor
sbb
jmp
in
movhps
insl
rorl
dec
hlt
insl
fisubl
xor
inc
xchg
mov
lea
jmp
dec
outsb
jmp
jle
push
ljmp
scas
pop
nop
aas
push
dec
lsl
push
dec
sub
in
pop
fstpt
push
add
sarl
mov
movsb
xor
pop
notb
inc
mov
dec
pop
push
out
add
fisttpl
aad
pop
insb
add
pop
sbb
mov
pushf
lds
ffreep
or
push
adc
aaa
inc
arpl
dec
sbb
mov
lea
pop
das
mov
or
dec
push
pop
add
in
jnp
test
insl
push
mov
fistl
jns
xor
test
or
push
cmpsb
incb
and
data16
aaa
fldt
or
out
sub
lcall
xchg
shlb
mov
fs
jno
jns
fstp
xor
sub
icebp
out
stos
adc
aad
jl
in
das
dec
fucomp
hlt
mov
cmc
pop
fists
push
dec
and
dec
pushf
std
sbb
xor
aaa
fidivrl
aaa
sub
insb
add
push
mov
adc
jae
pop
xchg
jno
jo
jae
and
cmp
pop
cs
mov
dec
lods
nop
push
ljmp
cli
sub
popf
mov
jmp
lea
or
mov
xchg
popf
scas
push
jle
dec
lcall
push
mov
mov
sbbl
sbb
mov
mov
outsb
push
ss
cmp
sahf
cmp
insb
ds
pushf
pop
jl
loopne
gs
sahf
add
movsl
cltd
rclb
push
stc
push
loope
idiv
adc
sbb
ret
push
xor
inc
inc
pop
mov
push
in
in
push
adc
jge
xlat
mov
push
testl
jecxz
xlat
pop
js
cmp
iret
cmc
inc
jno
rorl
add
cltd
testb
aad
push
cmp
jae
out
pop
jno
xchg
mov
mov
jle
ret
lcall
aas
mov
outsb
mov
pop
mov
mov
pop
popf
ret
push
lods
sahf
lea
jne
negl
mov
or
scas
ret
aaa
lret
insl
jno
fiaddl
add
mov
movsl
ljmp
mov
adc
inc
fdivrs
ja
sub
mov
outsl
adc
mov
call
xor
mov
fdivl
lea
pusha
cmc
roll
cld
xchg
pop
shll
mov
jno
jmp
inc
out
push
ror
fs
int
push
out
xchg
push
cmp
stos
dec
mov
ret
addb
rol
sbb
pop
out
lahf
sub
inc
dec
pop
movsb
loope
sub
cwtl
or
es
int
add
fstl
out
mull
aaa
fcoms
xchg
push
jno
ss
add
adcl
out
popf
add
sbb
mov
lods
mov
mov
popf
add
imul
sbb
sbb
push
push
repz
pop
dec
enter
sbb
mov
push
cld
push
and
xor
cmp
rcll
int
push
out
mov
sub
push
inc
ret
jae
mov
stc
mov
testb
cmp
push
std
mov
ret
cli
xchg
jnp
das
mov
int3
xchg
popw
jnp
sbb
mov
jle
and
stc
or
lcall
hlt
mov
push
adc
mov
push
ljmp
into
dec
shrl
or
dec
lahf
bound
push
icebp
fwait
cmp
cmp
cmp
cmp
sbb
jp
jae
std
cld
fcoml
scas
outsb
xor
repz
daa
scas
push
jne
popf
mov
mov
push
pusha
loopne
int3
mov
loopne
daa
les
jno
cmp
xchg
in
fdivl
in
scas
jle
mov
leave
popa
adcl
or
sahf
inc
mov
cmp
ss
push
jmp
pop
mov
mov
sti
sub
shll
pop
mov
lcall
test
cmp
js
mov
adcb
mov
hlt
movsl
push
pushf
mov
inc
dec
and
pop
sub
push
and
loop
out
mov
and
fxam
stos
mov
insb
mov
ss
mov
dec
mov
inc
dec
aaa
jne
xchg
mov
mov
and
lock
gs
sahf
or
das
xor
outsl
outsb
pop
adc
rorb
or
or
repz
out
icebp
jmp
insl
jbe
jns
mov
sbb
jae
and
out
push
mov
sub
xchg
rolb
or
xchg
pop
adc
stos
fcompl
jg
int3
and
xlat
sub
sar
cltd
enter
adcl
not
mov
lea
mov
xlat
aas
pop
add
push
xchg
cmp
rcrl
dec
xchg
and
adcb
daa
faddl
or
and
jmp
xchg
pop
mov
cmp
pop
push
push
gs
mov
inc
sbb
mov
sub
mov
enter
pop
aam
insb
test
pushf
lods
into
push
fsubrl
or
push
xor
push
loop
lods
cwtl
adc
lock
mov
ret
push
adc
arpl
push
test
in
call
loopne
dec
or
enter
sti
push
aad
ljmp
je
dec
push
repnz
cs
xor
repnz
int
mov
mov
and
rcl
cmp
inc
cmp
pop
push
cmp
add
std
imul
xor
push
push
mov
push
jecxz
loopne
popf
aaa
std
fwait
pop
pop
jmp
push
pop
mov
push
or
jecxz
mov
bound
jle
fisttps
pop
cmpsl
lret
jae
or
scas
push
inc
pop
jecxz
ljmp
insl
mov
fcoms
fmulp
inc
sub
xchg
jbe
cmp
test
lock
cld
stc
adc
xchg
dec
negb
mov
inc
incb
call
cltd
sub
repnz
shlb
out
in
insb
adc
inc
push
pop
adc
pushw
add
imul
mov
lahf
iret
lds
xchg
xchg
fldt
mov
adc
cli
sbb
int3
lods
jecxz
mov
dec
mov
push
dec
fwait
incb
and
and
arpl
dec
dec
dec
fnsave
inc
js
sub
xchg
and
dec
xor
add
adc
mov
dec
js
stos
in
ja
mov
inc
xor
ss
xor
jecxz
inc
jp
jbe
cmpsl
outsl
js
xor
xor
inc
xor
sbb
jl
cmpsb
push
outsb
mov
push
out
std
int
rorb
aad
cmp
mov
loopne
cli
pop
icebp
cwtl
mov
jne
insb
xor
mov
xor
sub
fisubs
orl
ret
mov
and
xlat
daa
mov
cmc
mov
push
sahf
pop
inc
mov
xor
daa
addr16
mov
adc
movsl
mov
sub
jecxz
push
cwtl
pop
or
jae
and
xchg
fildl
xchg
cmpsl
aam
notb
xchg
test
adc
jge
adc
jbe
inc
cmp
faddl
sub
outsb
and
divl
jne
mov
jp
lea
push
adc
lods
stc
pcmpeqw
add
jae
push
ret
adc
adc
mov
sbb
popf
inc
push
fdivl
jecxz
mov
cmp
sbb
loope
imul
dec
notb
mov
xor
jae
xchg
push
out
loopne
ja
pusha
adc
mov
sub
push
dec
loop
inc
out
inc
adc
cltd
hlt
lahf
or
xor
jecxz
jg
sub
push
into
jmp
repnz
sub
jo
mov
sti
icebp
mov
mov
popf
mov
lret
incl
mov
dec
pop
imul
inc
adc
pop
sti
stos
mov
adc
cmp
subl
pop
shrl
mov
lock
mov
adc
add
mov
sbb
xor
leave
or
movsb
and
sub
mov
jmp
lock
std
push
lods
mov
push
dec
jle
mov
push
pop
movsl
outsb
not
and
push
jmp
mov
in
mov
mov
lcall
movsl
fwait
add
xor
sbb
mov
outsb
inc
ret
adc
ljmp
sbb
in
mov
pop
pushf
pop
jo
jae
push
aam
dec
mov
mov
movsl
das
and
dec
in
xor
xor
ret
and
mov
leave
cmp
push
cmp
push
sbb
mov
lock
out
int3
sub
push
test
cmc
test
add
subl
test
push
mov
sbb
add
sub
or
mov
addr16
xchg
leave
test
dec
mov
push
jmp
jecxz
push
outsb
xchg
movsb
sar
loope
popa
mov
in
cli
test
call
push
push
add
leave
imul
mov
or
push
ljmp
jb
fs
arpl
ja
nop
ret
cmp
imul
adc
add
or
pop
xchg
arpl
mov
or
mov
and
out
xor
pop
jne
lret
xchg
addr16
imul
inc
dec
cltd
pop
cwtl
cmpsb
cltd
or
loopne
push
push
daa
in
xlat
int3
or
bound
mov
mov
pop
mov
lods
rorl
push
pop
mov
jae
xor
jb
pop
and
lea
dec
fdivl
xchg
cmp
shll
add
adc
sub
pop
mov
mov
dec
push
mov
mov
pop
and
cmc
adc
mov
xchg
fyl2x
add
pop
cmp
rolb
lahf
ret
dec
cwtl
sub
xchg
fucom
mov
inc
adc
cmpsb
sbb
int
add
inc
out
in
rcll
push
fisttpll
outsl
cmp
hlt
stos
push
mov
pop
js
imul
jae
out
lret
mov
stos
lock
xchg
ret
pushf
pop
sbb
fucom
aam
mov
out
and
adc
adc
mov
ss
mov
fs
cwtl
shll
xchg
fcmovbe
adc
dec
ja
cltd
sub
add
xchg
sub
out
ret
and
push
xor
fldcw
test
aaa
jmp
jecxz
out
jle
inc
push
sbb
jle
movsb
ljmp
frstor
push
in
rcll
inc
dec
push
mov
test
idiv
stos
daa
jg
xor
push
cli
xor
cld
mov
mov
and
push
xor
daa
scas
loope
stos
fisttpl
and
push
pop
cmp
push
sti
xor
loope
dec
inc
sbb
lahf
sbb
insb
std
xlat
popa
push
push
dec
push
sbb
out
push
mov
insb
out
mov
les
mov
sbb
out
lret
mov
insl
mov
popf
lods
loope
int3
in
mov
aas
pusha
xchg
fcmovnb
ds
repz
loope
pusha
hlt
ret
negb
cmpsl
dec
in
sub
cli
and
push
xor
mov
sub
pop
fs
out
or
cmc
in
xor
in
and
popaw
inc
push
jbe
dec
sbb
xchg
jb
and
daa
popf
mov
and
shlb
and
push
cli
lahf
cmp
repnz
xchg
ja
sub
xchg
lahf
insb
sub
sbb
inc
add
adc
cltd
insl
clc
cltd
cmc
jle
mov
xchg
push
mov
dec
sahf
cmpsb
imulb
test
sub
loope
mov
xor
sbb
lea
into
xchg
inc
jbe
xor
sahf
insb
std
imul
or
inc
push
add
push
mov
movsb
repz
and
jae
int3
push
xorb
push
mov
push
outsb
leave
push
pop
lea
push
ja
js
mov
lods
ss
xchg
jmp
popa
adc
lods
xchg
pop
mov
ja
test
sub
roll
xlat
xor
repnz
push
lea
das
xchg
pop
iret
jle
out
ss
and
or
pop
icebp
lds
rclb
jecxz
pushf
jle
or
js
mov
out
lods
andb
and
or
daa
f2xm1
dec
or
pushf
fcoms
inc
jl
fisubl
mov
cmc
loope
pop
lds
es
lea
cmpsl
cwtl
add
loopne
psrad
push
push
dec
push
fwait
repnz
cltd
in
sbb
xchg
dec
jne
gs
fwait
shll
dec
pushf
arpl
mov
nop
fbld
mov
and
lea
repnz
fwait
pushf
dec
cmp
mov
sub
sub
push
mov
loop
inc
loope
lcall
cs
sbb
mov
push
in
clc
ja
nop
sahf
and
test
aaa
adc
pop
mov
mov
out
sbb
mov
or
lock
aam
push
xchg
xchg
pop
and
andl
hlt
aad
imul
mov
or
xor
mov
in
jbe
movsb
lods
testb
mov
ja
in
gs
fwait
aad
into
sahf
ja
mov
mov
push
ja
cmc
inc
inc
rclb
adc
movsl
xchg
stos
mov
sub
jg
sub
jne
das
repz
xchg
test
pushf
xchg
sub
xchg
test
add
test
push
xlat
std
stos
cs
pushf
xor
repz
xor
inc
sbb
arpl
add
or
fidivs
shl
test
jno
dec
push
xor
cmp
int
aam
pushf
push
scas
das
xchg
and
pop
fisubl
call
or
js
xor
mov
jge
icebp
mov
inc
pop
mov
inc
xor
inc
pop
dec
jge
stos
sub
mov
sbbb
sar
mov
pop
inc
sbb
xor
or
je
cs
cmp
xor
nop
inc
push
cmp
inc
mov
or
stc
push
rcl
sti
xor
pop
or
adc
nop
inc
insb
push
and
mov
push
lods
mov
fs
sub
lods
xor
fwait
stos
jb
pop
aam
jbe
in
shl
faddl
or
jmp
dec
push
xlat
scas
jo
pop
adc
sbb
push
loopne
fildll
mov
jae
cmpsl
frstor
sbb
adc
lea
pop
mov
push
das
push
pop
xchg
arpl
mov
push
mov
out
rol
iret
js
jecxz
popf
mov
dec
inc
sysexit
ds
push
mov
jecxz
adc
stos
mov
mov
sbb
mov
fucompp
adc
xchg
and
jecxz
and
mov
push
xchg
jns
dec
add
jl
cmp
lds
inc
mov
adc
xor
cld
mov
lods
sbb
lahf
ficoms
in
pop
push
adc
clc
dec
out
orb
sbb
inc
mov
dec
push
or
mov
repnz
fisubl
mov
scas
movsl
dec
andl
fcomp
sti
sub
inc
aam
enter
mov
in
lods
mov
or
std
push
loopne
xor
loop
sbb
nop
pusha
cmpsb
arpl
mov
xchg
pop
pop
lods
cmp
in
aad
icebp
or
mov
mov
subl
pop
mov
loopne
in
add
les
lcall
dec
cmpsl
dec
mov
adc
push
xor
mov
mov
nop
jbe
jnp
aas
dec
mov
add
inc
sahf
cmp
xorl
or
jle
out
popa
loope
addl
xchg
push
in
xchg
xchg
mov
xchg
jns
add
sbb
adc
lea
mov
ds
mov
pushf
dec
pop
ja
movsl
jge
sbb
test
adc
jecxz
mov
and
push
add
loope
adc
enter
push
loopne
mov
nop
mov
outsb
out
adc
in
cwtl
stos
je
mov
sbb
loop
mov
inc
push
inc
hlt
push
cli
mov
sbb
out
jmp
xchg
or
xchg
sbb
lock
mov
cmp
mulb
inc
push
dec
rcll
cmp
xchg
jbe
ja
adc
xchg
pop
adc
subl
mov
mov
fwait
mov
push
sbb
loop
jae
sbb
test
imul
daa
mov
dec
cmpsl
loop
pop
dec
fmull
je
lret
mov
out
cmp
sub
rcrb
test
shr
xchg
loopne
ljmp
add
sbb
pop
push
jmp
ret
sub
popf
in
pusha
sti
ja
lcallw
lock
icebp
fldcw
sbbb
xchg
sbb
filds
notb
outsb
shlb
cld
repz
push
sarl
daa
in
inc
out
inc
cmp
pop
mov
out
and
xor
cmp
loopne
sbb
imul
aam
sub
mov
mov
or
out
in
push
stc
js
xlat
adc
stc
mov
xchg
rol
push
or
jle
aaa
sbb
mov
lds
jmp
add
push
repnz
sub
push
fcoms
inc
sub
popf
or
movsl
mov
inc
loopne
rcr
repz
mov
push
out
stc
xchg
inc
mov
add
aad
add
and
mov
nop
shrb
repz
push
mov
dec
mov
stos
hlt
pop
push
dec
dec
sbb
nop
xchg
mov
xor
cs
pop
mov
sub
sub
mov
sbb
les
ljmp
mov
jecxz
sti
in
lock
mov
imul
or
fidivrl
adc
out
pop
jle
mov
inc
in
cmpsl
fcomps
addl
mov
add
sbb
dec
les
mov
mov
addr16
or
inc
ret
mov
loope
mov
push
leave
push
aam
icebp
pop
loopne
xorl
mov
or
gs
inc
push
mov
das
add
inc
and
adc
leave
lahf
mov
lahf
loopne
mov
lcall
pop
ljmp
movsb
adcb
pop
cmp
mov
jle
pop
shlb
scas
xchg
or
sbb
mov
jns
inc
mov
xchg
out
mov
mov
cmp
out
or
mov
mov
mov
pop
push
xchg
mov
outsb
jge
jge
jle
sub
and
fistps
iret
popa
mov
aaa
lods
mov
add
enter
sbb
out
aas
mov
mov
lar
xor
in
inc
push
pusha
or
inc
push
sti
inc
stc
sbb
je
mov
jae
or
cli
bnd
pop
loopne
repnz
jecxz
pushl
mov
mov
mov
jb
mov
sub
push
sub
in
stos
mov
cmp
in
dec
xor
jge
add
add
lock
nop
insb
lock
xchg
dec
mov
scas
clc
xor
int3
mov
lock
dec
xchg
stos
pop
dec
jno
xor
xor
xor
mov
mov
mov
cltd
sub
gs
clc
xchg
stos
fmuls
dec
hlt
cmpb
pop
jecxz
inc
out
pop
mov
mov
inc
xchg
loope
cltd
fwait
sub
into
icebp
ret
in
sub
popa
iret
pop
ja
std
mov
jbe
arpl
push
fisttpll
jl
push
lcall
xor
cltd
push
pop
push
in
mov
es
add
jecxz
in
adc
cwtl
jns
aas
cmpsb
adc
sub
and
int
cmpsl
jae
jecxz
icebp
scas
push
in
decl
cmp
sti
mov
mov
bound
pop
out
sub
add
mov
sub
push
outsb
pushf
stos
scas
jge
mov
lea
add
pop
sbbb
test
imul
mov
in
in
outsb
in
add
jecxz
outsl
in
jne
ror
aaa
jge
jecxz
stos
imul
js
mov
jne
xorb
mov
jge
add
in
sbb
rcll
inc
push
imul
cmp
jno
aad
inc
popf
mov
push
orb
popf
out
test
mov
icebp
data16
sarl
sub
push
loopne
xlat
sbb
cmpps
pushf
cmp
fidivs
out
xchg
xchg
imul
pusha
test
lahf
and
lods
inc
mov
je
inc
xchg
inc
push
pushl
xchg
and
roll
lcall
adc
imul
pop
in
fsubs
xchg
cld
sub
jmp
in
jae
mov
sub
mov
xchg
xor
sbb
or
popf
pop
mov
inc
movsb
je
inc
jbe
mov
xchg
ja
out
push
push
repnz
sti
push
push
into
cmp
xchg
sub
pop
inc
xchg
and
das
stos
mov
icebp
add
call
addl
cmpsl
loop
push
ja
xchg
push
pavgb
popf
mov
outsb
rorl
repnz
jg
loop
pop
xchg
movsb
or
aad
bnd
inc
icebp
add
sbb
pop
cmp
sahf
mov
sbb
push
pop
mov
xor
sub
jecxz
jl
out
mov
fsubr
int3
mov
int
in
mov
adcl
pop
aaa
mov
scas
aad
xchg
aaa
ret
lahf
movsl
dec
lcall
dec
repz
adc
sbb
pop
iret
orl
dec
mov
lea
or
test
ja
imulb
cli
pop
bound
sbb
nop
push
sti
test
jge
jae
sti
and
popa
jnp
movsl
adc
pop
loopne
pop
imul
lock
cld
xchg
loopne
sahf
xor
sub
xor
inc
mov
adc
mov
xchg
cmp
shlb
mov
push
call
sub
pushf
shrl
lahf
jae
nop
ja
aaa
frstor
add
ds
xchg
sub
add
shlb
mov
inc
das
loopne
loope
notl
outsl
jbe
fsubrl
icebp
jne
stos
xor
push
and
sub
cmc
in
sbb
push
test
sub
xor
dec
cltd
sbb
mov
push
cmp
cmp
push
or
iret
popf
aaa
je
pop
pop
push
jne
stos
das
clc
sbb
mov
adc
arpl
std
sub
lock
imul
pop
adc
adc
int3
shrb
les
sub
inc
jae
and
inc
sbb
and
fldcw
enter
mov
xorl
mov
add
and
adc
addr16
jno
jle
sbb
push
enter
mov
subl
aad
xlat
fwait
mov
add
loope
iret
dec
jmp
mov
rol
adc
push
xlat
mov
pop
daa
sbb
and
shr
xchg
lock
and
jne
jp
popa
adc
xchg
jae
ja
test
ds
mov
adc
mov
push
out
sbb
and
shrl
pop
sub
enter
mov
push
push
pop
dec
aad
xlat
scas
mov
add
lds
mov
mov
into
sti
adc
push
lret
mov
pop
sbb
and
sar
xor
xor
sub
fisubrs
ljmp
adc
sbb
push
jmp
movsb
nop
orl
push
imulb
lock
out
jo
dec
mov
and
jno
dec
into
sahf
lret
mov
add
mov
mov
sbb
lret
dec
and
push
mov
fistpl
xor
push
iret
test
lret
or
mov
cld
mov
push
xorl
cmp
add
xor
jge
addr16
jbe
add
mov
add
push
sahf
inc
sub
mov
xor
dec
add
jae
xchg
icebp
inc
idivb
mov
mov
fiaddl
ljmp
jecxz
adc
jae
fnstsw
mov
ljmp
mov
ret
mov
int
sbb
and
lock
mov
and
out
dec
adc
xor
xchg
decb
outsl
out
push
xchg
add
xor
int
iret
pop
pop
sbb
mov
cmp
mov
mov
xlat
jae
push
xor
push
cmc
xchg
mov
mov
fldl
push
sub
add
scas
jecxz
push
stos
xor
fwait
bound
dec
nop
popa
adc
mov
sbb
pop
inc
aas
popf
dec
or
jbe
shrl
arpl
mov
pop
ret
mov
je
mov
push
bound
xchg
not
push
sbb
rep
stc
out
hlt
pop
lret
cs
cmp
adc
shll
js
push
and
cmp
sub
in
dec
xchg
cmp
mov
pop
dec
mov
scas
mov
ja
sbb
mov
out
dec
dec
stc
inc
pop
push
jecxz
dec
jno
ret
or
rcll
push
dec
cltd
aam
lcall
lods
shlb
loope
add
insb
adc
add
mov
cmpsl
inc
sbb
xchg
lods
and
ror
dec
fcmovbe
fwait
xchg
ucomiss
dec
repz
mov
adc
stos
cltd
mov
or
sti
pushf
lcall
das
in
push
xchg
mov
je
movsb
sarl
adc
push
in
push
xor
in
cmp
dec
inc
mov
sar
cmp
jae
sub
cs
jb
rcrl
ja
inc
mov
nop
add
mov
jne
push
xchg
neg
mov
ret
leave
ljmp
cmp
jb
mov
inc
fs
cmpsb
outsb
in
fldt
mov
push
je
push
jne
jmp
movlps
ljmp
loop
pusha
jnp
movb
in
pop
push
loope
inc
jmp
mov
repnz
cmpsl
add
out
xor
sbb
aad
pop
mov
adc
jns
jae
pop
and
repnz
incl
hlt
mov
cmp
dec
loopne
test
xor
dec
stos
cmp
dec
add
movsb
adc
movsb
add
dec
lock
xor
fsubs
mov
push
mov
adc
out
mov
testl
ret
xlat
jge
loop
icebp
cli
enter
inc
sbb
add
in
in
adc
aaa
mov
in
mov
pusha
add
jmp
mov
mov
rcrl
push
or
push
jmp
cld
roll
clc
dec
call
lea
jo
add
and
mov
sbb
push
loop
pop
scas
scas
dec
rcll
push
lods
pop
or
xchg
xchg
xchg
mov
sbb
pop
dec
xchg
es
sar
idiv
sqrtps
popa
ljmp
mov
xchg
int3
lahf
out
sbb
mov
or
mov
add
mov
aam
pop
jno
popa
cld
xor
js
mov
imul
push
mov
mov
icebp
cmc
xlat
mov
aam
test
or
imul
xlat
sub
cmp
je
cmp
pushf
ret
sub
inc
jae
fs
je
mov
push
or
mov
out
ret
xchg
outsb
in
iret
mov
jae
lret
fwait
cmpsl
jge
fbld
mov
or
sti
aas
bound
ja
sub
fs
nop
cmp
cmp
adc
call
inc
inc
leave
or
outsb
sub
adcb
in
mov
or
dec
es
mov
test
xchg
sarl
push
mov
jae
loop
test
xchg
aam
mov
inc
mov
jne
push
roll
push
sub
icebp
shlb
test
scas
mov
add
sbb
mov
gs
mov
es
mov
sbb
jmp
cmp
mov
stc
pop
std
int3
dec
mov
mov
stc
jl
repnz
mov
mov
or
pop
mov
pushf
xor
pop
pop
sarb
mov
xchg
push
leave
push
leave
clc
and
cmc
in
sbb
pop
dec
test
jg
or
es
mov
fs
mov
or
cs
lods
popa
cmc
dec
cld
sbb
dec
xchg
fwait
sub
mov
push
add
lods
jmp
pusha
ljmp
je
lock
or
mov
js
mov
pop
sti
testl
jecxz
icebp
sub
and
sub
and
sbb
pop
movsb
xor
repz
jmp
push
into
mov
push
inc
jno
dec
lods
fbstp
push
push
push
mov
cmp
and
addr16
std
dec
xchg
xchg
xor
scas
xor
scas
push
std
lahf
jle
mov
stos
or
cmp
insl
lret
pcmpgtd
dec
popa
adc
loop
mov
add
push
scas
sbb
xor
inc
add
pop
test
sti
inc
ss
mov
ret
lods
add
mov
lret
pop
ret
sbb
fsubs
popa
or
cmp
out
negl
adc
dec
imul
mov
push
mov
xchg
lret
subl
cli
outsl
lods
je
jne
fidivs
fcoms
xchg
mov
cmc
movsb
cs
lods
cmc
in
push
xor
cmc
test
cld
test
leave
pop
repnz
xchg
push
shlb
aas
cmp
out
mov
pushf
push
mov
aam
push
or
call
nop
add
pop
rclb
or
cmpsl
xor
cli
add
in
out
pop
shlb
cmpsb
es
xor
and
or
mov
or
jne
enter
push
in
mov
shrb
lcall
push
jnp
in
or
push
mov
out
decl
cmpl
lods
shlb
test
pop
cmpl
jne
test
sub
lahf
fchs
fdivrs
psraw
mov
arpl
test
push
int3
shlb
mov
push
inc
jecxz
sub
aaa
in
adc
or
jmp
hlt
sub
cltd
lret
xchg
lds
jbe
mov
pushf
mov
push
xor
xor
and
lds
ss
pop
ret
mov
pop
loopne
pop
dec
mov
mov
repnz
fnsave
or
sarb
mov
loope
sbb
mov
lock
and
bound
fisubrl
lods
inc
imul
enter
adc
mov
pop
xchg
hlt
ss
idiv
rorl
cmp
lods
push
lock
arpl
xlat
sbb
or
scas
and
mov
int3
mov
adc
mov
sbb
mov
inc
mov
test
mov
popa
cld
add
fmuls
aad
stos
leave
in
dec
or
push
mov
imul
push
stos
dec
xor
inc
btr
bound
pop
add
mov
jae
hlt
mov
lahf
std
mov
lret
cltd
out
jecxz
cmpsl
aas
int
xchg
or
repz
out
mov
add
fstpt
jnp
push
cmc
push
cld
sub
xchg
repz
pop
and
jno
shlb
pop
sub
lock
push
sbb
call
xchg
dec
sbb
jl
mov
stc
or
into
inc
jns
jge
mov
pop
std
repz
test
mov
test
mov
jl
mov
mov
xor
jge
shlb
xor
cmp
pushf
je
test
cmc
xor
push
mov
stos
gs
scas
arpl
mov
arpl
paddsb
orb
aam
xchg
aam
sbb
jecxz
pop
lahf
inc
push
addr16
stc
pusha
rorl
push
mov
xor
mov
mov
das
aas
mov
imul
dec
and
cltd
and
jp
inc
mov
cmpxchg
out
rorl
xchg
xor
mov
pop
inc
jb
pop
orl
or
xor
mov
fisttps
and
je
cmp
push
dec
jmp
pop
loope
push
mov
mov
nop
push
mov
adc
mov
push
add
inc
jle
aam
mov
leave
inc
push
xor
xor
in
cmp
mov
add
push
and
sub
mov
nop
push
xchg
dec
std
xor
outsb
cs
sbbl
cmp
lock
pop
pushf
out
imul
mov
outsl
scas
dec
jmp
in
add
repnz
dec
cmp
movsb
cld
int
dec
xor
xor
cmpb
movsl
lret
xor
jecxz
push
xor
mov
je
add
and
je
push
dec
icebp
mov
lea
adc
xchg
jnp
ret
movsb
pop
pop
or
popa
jle
leave
mov
sbb
or
outsb
dec
mov
inc
into
and
cmp
imul
dec
dec
imul
add
mov
std
mov
jg
inc
lret
inc
jb
jg
lret
ret
out
jbe
jae
and
add
pop
fbstp
sub
pop
aad
xor
and
lahf
cld
push
lods
xchg
cmp
mov
incb
lret
pusha
mov
fcmovnu
in
loope
cmc
push
cmp
popf
mov
dec
jmp
ret
xchg
in
test
xor
pop
mov
jns
mov
dec
mov
sbb
dec
fisttpl
push
test
lret
mov
add
adc
addl
xor
or
jecxz
in
pop
andb
push
inc
cltd
jnp
xchg
mov
loope
lahf
data16
int
xor
sbb
ja
jae
out
sar
cli
jnp
fnstenv
cli
inc
mov
lcall
xor
xchg
sub
cmpsl
mov
jecxz
sub
pop
imul
inc
adc
mov
adc
das
xor
hlt
and
ja
sbbb
jne
pop
iret
loope
lods
adc
cmpsl
mov
flds
inc
negl
dec
pop
fwait
jo
jo
aad
shl
inc
cmpsb
xchg
xorl
push
jl
test
sub
pop
add
pop
rclb
and
fdivs
or
mov
fs
and
ret
ror
cli
pop
mov
out
ljmp
nop
lret
scas
ret
es
cmpl
dec
lahf
hlt
jmp
in
push
sbb
bound
mov
add
mov
xchg
mov
mov
repz
fisttps
lods
and
adc
lds
into
jecxz
or
mov
jmp
sbbl
out
xchg
arpl
pop
out
mov
aad
or
inc
int
push
jmp
push
pop
loope
fdiv
out
int3
into
pop
nop
clc
adc
cwtl
ljmp
in
nop
imul
lods
inc
pushf
lods
cmpb
aam
inc
data16
mov
ja
loope
popa
dec
mov
xchg
push
outsl
mull
cmp
xchg
mov
cmpsb
mov
jae
xlat
xorl
clc
aad
mov
jmp
lret
lret
aad
pop
push
and
jp
jno
stc
andb
stos
or
or
mov
pop
adc
mov
jno
ss
sbb
ljmp
fld
inc
push
xchg
and
sub
ds
lods
push
div
mov
or
cs
sbb
cmpsl
jns
imul
scas
imul
mov
cmp
test
dec
sub
std
daa
add
repz
mov
repz
mov
mov
jl
push
out
xchg
add
clc
into
pop
hlt
pop
or
mov
dec
ficoms
orb
pop
jae
jnp
in
popf
test
add
icebp
mov
mov
ret
cmp
mov
mov
fnstenv
add
out
and
jo
insl
push
jl
xchg
in
pushf
sub
fisttpll
call
sbb
shl
pop
and
sbb
dec
ret
je
bound
ja
mull
loope
jne
or
add
loope
mov
loopne
test
adc
imul
push
nop
inc
jge
loopne
pop
sbb
jne
shrl
orb
add
mov
loopne
outsl
jge
filds
rcrl
push
or
test
stos
clc
add
aas
idivb
arpl
addr16
pop
pop
push
xor
or
or
leave
sarl
push
aad
add
je
mull
fdivrs
jae
adc
out
rcrl
add
mov
push
enter
adc
jne
pop
cltd
test
pop
mov
add
cli
test
dec
sub
in
push
daa
insl
lcall
in
ljmp
ja
sub
xor
test
fs
loopne
ret
mov
fcom
pop
dec
mov
mov
lret
push
in
or
mov
mov
pusha
in
mov
cltd
cltd
push
fsubs
movsl
jb
xchg
sti
jmp
sub
cltd
lcall
mulb
mov
test
sbb
push
ret
jo
test
push
mov
or
adc
push
pop
mov
leave
inc
push
shrb
pop
push
mov
pop
mov
xor
test
mov
jg
or
leave
mov
daa
inc
jg
testb
jo
outsl
cmpsb
cmp
dec
jp
je
test
inc
repnz
outsl
push
data16
inc
aad
dec
mov
inc
or
push
int
scas
jmp
sub
mov
add
pop
scas
int3
inc
iret
and
adc
leave
mov
call
or
jnp
jae
cld
incl
jp
fistps
cli
add
mov
popf
mov
mov
ret
mov
hlt
mov
jecxz
sub
rcr
bound
loopne
push
dec
hlt
adc
add
pop
gs
arpl
loopne
cmc
xchg
mov
out
fs
ljmp
mov
sub
fidivl
movsb
es
fwait
popa
shrb
sub
add
pop
jp
mov
shll
cmp
mov
cmp
xchg
pop
icebp
xlat
jmp
and
xchg
popa
or
sub
sti
sub
push
sub
and
xchg
cmp
idivb
and
xchg
or
sub
mov
cli
pusha
push
and
in
cmpl
aaa
xchg
arpl
sahf
mov
push
xchg
fnstsw
cmpsl
je
test
lock
mov
or
lods
dec
inc
cmpsl
sbb
mov
fwait
out
xchg
jecxz
sti
imul
invd
enter
pop
jno
das
adc
adc
adc
jecxz
sahf
xchg
mov
out
pushf
out
sbbl
dec
mov
or
push
fwait
test
les
scas
push
dec
cli
add
or
fbld
and
imul
push
ss
ja
lods
jae
daa
mov
xchg
lret
int3
mov
and
in
sbb
mov
mov
cs
gs
cmp
in
jb
data16
pop
lret
pop
and
jle
inc
popl
aam
sub
icebp
or
adc
hlt
add
push
roll
dec
js
in
mov
daa
mov
test
xor
out
adc
ret
divb
mov
mov
sbb
testb
dec
sbb
repnz
pop
lcall
pop
jbe
adc
inc
xchg
or
icebp
pop
xchg
mov
inc
test
lret
inc
pop
xchg
jns
cmpsl
mov
pusha
fwait
push
dec
adc
daa
es
fs
xchg
rcr
stc
decl
add
mov
and
scas
hlt
test
xchg
inc
comiss
jae
fs
test
jecxz
ja
lods
fisttps
cmp
pop
loope
aam
imul
dec
clc
idivb
enter
push
jno
mov
mov
mov
mov
jne
test
inc
ss
mov
jle
daa
push
inc
jbe
fldl
cwtl
dec
ret
or
insb
and
sub
mov
xchg
inc
mov
pop
jg
mov
and
or
testl
imul
or
push
push
nop
cmp
jnp
mov
ret
jecxz
in
mov
loop
subl
movsl
sbb
mov
mov
push
movsl
loope
cli
mov
arpl
and
shrl
fwait
add
xor
jo
and
out
pushf
repnz
sub
popa
call
ss
push
xor
push
cmc
std
or
fldl
enter
out
je
mov
and
xchg
sub
adc
adc
stos
fisubrl
fiaddl
mov
fisttps
dec
insb
mov
adc
mov
cs
prefetch
or
into
push
mov
outsb
and
sbb
xor
shrb
sub
movsl
dec
movsl
shrl
or
ret
push
int
stos
adc
shlb
icebp
in
sbb
sbb
push
add
lods
call
sub
iret
sahf
mov
lods
lret
push
and
xchg
inc
mov
roll
mov
fwait
rorl
out
xlat
cmp
ljmp
fwait
das
les
les
insb
xorb
adc
in
jp
loope
in
orl
lods
push
rolb
hlt
sarb
subl
mov
push
push
mov
mov
push
pop
fidivs
imul
icebp
dec
pop
outsb
mov
mov
push
push
aad
in
leave
mov
andl
shl
mov
out
leave
pop
push
mov
adc
xor
addr16
pop
or
xchg
bound
mov
or
push
jecxz
pop
js
adc
hlt
lret
push
xor
mov
sbb
pop
or
ret
in
jo
inc
das
in
pop
mov
roll
orl
push
mov
fsubs
jge
xor
gs
sbbb
sub
jns
nop
push
mov
int
and
inc
inc
xchg
dec
and
arpl
in
adc
icebp
call
inc
cld
ljmp
ret
dec
and
add
xor
out
mov
and
shrb
push
pop
pop
and
scas
out
pop
enter
roll
pop
mov
js
sbb
pop
ret
push
ja
mov
xchg
xor
or
xchg
xlat
mov
sbb
aad
lret
mov
and
jle
inc
mov
cwtl
add
test
dec
jmp
jecxz
je
sbb
inc
cmp
add
movsl
xchg
faddp
les
fwait
or
nop
xlat
fmuls
bound
outsb
rorl
nop
add
imulb
mov
mov
push
xchg
mov
and
push
das
ret
push
loop
stos
pop
add
mov
cltd
pop
outsb
add
das
ljmp
mov
lds
push
sub
xor
leave
lcall
shll
inc
insl
int3
or
aam
adc
imul
mov
mov
lret
fs
jbe
les
pop
sbb
outsb
and
loopne
popf
jb
dec
adc
pop
jge
push
popl
stos
adc
pusha
mov
cmpsb
jo
cmovno
aam
andnps
jmp
fistpll
mov
sbb
xchg
insl
sbb
xchg
mov
imul
mov
test
pusha
cld
inc
push
cmp
mov
xlat
les
out
xchg
push
ljmp
cmpsl
or
or
mov
push
adc
loop
cmpsl
add
cmp
and
in
jecxz
repnz
xor
sbb
mov
jg
add
dec
andb
aas
mov
loope
movsl
mov
out
push
jecxz
imul
push
pop
imul
and
mov
jecxz
fdivs
jnp
cmp
mov
enter
sarb
jno
sub
lahf
jmpw
into
jle
sbb
push
add
addr16
mov
lea
or
and
mov
push
sub
mov
add
test
or
jmp
aam
mov
and
test
adc
or
pop
int
inc
jo
fdivrl
mov
jecxz
sbb
jg
mov
aas
jge
lahf
jmp
icebp
jae
hlt
fs
adc
cmp
pop
or
cmc
jmp
push
cmpsl
or
mov
add
jae
or
sbb
add
lret
loope
imul
fwait
and
mov
sbb
jp
outsb
popf
je
mov
loope
add
xor
loope
xor
loop
and
and
dec
cmc
sub
jae
dec
pop
cmp
loop
push
ljmp
dec
leave
addl
jmp
cmp
xchg
adc
js
push
lcall
lret
ficoms
lock
jge
rcl
ret
movsl
or
out
mov
inc
ja
jae
sbb
mov
push
jecxz
mov
into
dec
adc
loop
into
sub
push
cwtl
pop
and
lods
bound
inc
jecxz
mov
add
cmpsl
mov
pop
xchg
xor
dec
icebp
mov
int3
mov
sub
aaa
push
push
rcll
pop
aad
rcrb
mov
jae
sub
jmp
sub
cmp
jmp
shlb
fcoms
mov
add
or
fmull
pop
xor
insb
hlt
adc
incl
push
xor
lahf
cmp
int3
cltd
fidivl
je
insb
pop
les
cmc
shl
sub
call
out
pop
mov
sub
pop
test
xchg
add
fldcw
out
lods
and
xchg
leave
or
repz
sti
or
inc
in
push
out
xchg
or
push
push
into
into
add
push
xchg
popf
xchg
rcrl
rcrb
mov
push
repnz
out
push
cmp
cwtl
pushf
mov
in
or
inc
mov
push
in
ja
inc
mov
in
mov
adc
imul
sub
orl
push
jae
push
adcb
inc
enter
loopne
push
pop
jbe
cmp
push
fstpt
lods
and
popf
mov
inc
ds
sub
in
mov
adc
andb
and
shl
inc
lahf
push
testb
or
lret
sub
popf
dec
pop
jmp
sbb
xchg
xor
cmp
mov
push
dec
scas
ja
push
jnp
adc
test
xchg
cmp
xor
pop
jns
sahf
lods
cmp
jno
sbb
push
jnp
aas
call
inc
in
lock
and
out
mov
cmpsl
loope
fnop
sub
push
pop
and
gs
inc
and
push
fcomp
lods
in
das
push
int3
data16
cmp
jo
cmp
mov
ret
push
cli
jecxz
add
clc
inc
or
and
inc
cmc
push
pop
mov
fucompp
jl
push
test
jne
push
jecxz
in
enter
or
mov
mov
frstor
shrl
push
and
test
mov
pop
xchg
adcb
loope
ja
icebp
data16
subb
inc
hlt
push
std
sbb
mov
loop
pop
iret
das
pop
cmp
in
pusha
xchg
int3
imul
in
popf
pop
xchg
mov
lcall
sbbl
jo
bound
or
sub
mov
loope
mov
in
cmp
xchg
xor
add
stc
push
sahf
dec
cld
dec
pop
pushf
jb
push
out
stc
push
mov
and
les
push
jae
pop
jle
test
mov
in
mov
in
pop
sub
or
jns
push
dec
mov
pop
loopne
xor
orl
jmp
xchg
incl
cmc
mov
mov
sub
fdivs
mov
cmp
dec
imul
sub
jae
mov
xor
icebp
jl
push
fs
pop
jecxz
dec
jno
or
add
test
negl
dec
push
cld
mov
cltd
decb
js
fsubp
or
push
jp
stc
ja
addb
enter
pushf
pop
nop
jno
jo,pt
out
in
jae
loop
fistpl
enterw
aas
fdivr
push
fsubr
cltd
jmp
cmc
jbe
in
inc
xlat
add
test
scas
xor
fsubr
mov
jmp
add
mov
les
jle
inc
push
cmpl
push
inc
sub
aas
out
sti
and
push
fsubs
xchg
loop
pop
sbbl
and
pop
dec
or
ljmp
sti
fcompl
cld
push
icebp
sub
mov
mov
and
pushf
push
outsl
ds
mov
aam
or
adc
and
xor
xor
pop
pop
into
iret
aam
loopne
out
fwait
andl
dec
push
xchg
pop
into
pop
call
cmpsl
sti
sbb
jo
and
pop
out
movsb
fmuls
adc
rorb
adc
ljmp
mov
in
cmp
dec
mov
pop
testb
es
popa
icebp
jg
jae
jae
jge
les
mov
imul
sbb
dec
gs
jo
pop
sbb
cmp
jnp
sbb
aas
inc
lcall
sbb
and
cltd
inc
xor
stc
dec
xor
push
ret
jnp
lahf
xchg
push
and
lods
pop
mov
xchg
push
call
jae
std
jae
movsl
ljmp
sub
and
dec
pop
in
mov
subb
dec
cltd
lret
pop
jbe
dec
repnz
dec
dec
testl
scas
fsubs
push
int3
mov
pop
cmp
sahf
fwait
inc
jmp
push
fpatan
mov
cmp
inc
repz
sti
lock
push
add
sbb
xchg
adc
dec
jge
fmull
or
mov
cld
jae
dec
sub
add
xchg
sbb
int
stc
in
not
test
fldl
aaa
leave
push
adc
loope
stos
dec
loop
dec
fdivrs
push
add
stos
dec
sbb
ds
adc
stos
sub
push
adc
orb
fimull
lods
dec
push
imull
testb
xor
push
into
sub
shrb
std
mov
loop
mov
add
sbb
insb
shlb
fidivs
mov
std
push
std
jge
lret
arpl
xlat
shlb
not
imul
rcrb
jno
and
test
jp
mov
stc
mov
pop
loopne
xlat
push
pop
dec
or
loope
or
push
daa
arpl
dec
add
jbe
ss
dec
mov
xchg
inc
push
or
sbb
shl
pop
mov
inc
mov
jecxz
dec
or
fists
xlat
imul
mov
push
mov
or
out
jmp
fdivrs
sahf
bound
int
fs
lea
aad
dec
rolb
xor
popf
gs
sahf
iret
or
pop
push
ja
xchg
int
idivl
and
mov
rorl
cmpsb
adc
icebp
sub
or
loope
or
jmp
mov
into
add
sub
decl
lea
mov
iret
mov
mov
or
std
push
in
sti
dec
xor
add
ja
imul
mov
push
shr
dec
push
cs
cmp
xchg
dec
sbb
test
fsts
and
mov
mov
pop
push
sbbb
or
test
or
in
jp
int3
and
cmp
mov
popf
dec
incl
lods
and
lds
mull
fs
xlat
mov
lods
or
xchg
test
sbb
popa
xor
mov
repz
pop
jae
add
gs
push
mov
mov
ret
push
outsl
dec
js
or
mov
pop
test
inc
jbe
inc
pop
mov
cmp
pop
inc
push
mov
test
addr16
test
sbb
test
cltd
pop
sub
mov
xor
stc
dec
push
test
jae
test
xor
mov
out
push
sub
ljmp
push
int3
sahf
pop
loope
dec
test
call
jbe
jecxz
dec
push
push
or
jmp
imul
inc
clc
sbb
mov
repz
iret
xchg
call
ret
ja
scas
xchg
dec
mov
sub
loop
movsb
sbb
in
cmc
jno
and
loope
lods
in
clc
jmp
pop
ss
pop
sbb
hlt
in
insl
pop
cmc
xchg
js
fcmovne
and
int
int3
xchg
and
push
fstl
test
loopne
add
xchg
aaa
or
ss
mov
cltd
out
das
popf
xor
sahf
cli
imul
or
adc
dec
call
fsubrs
daa
pop
pop
sbb
in
inc
sub
sar
and
out
incl
jo
fs
movsl
out
xchg
mov
push
and
cwtl
in
enter
loope
addb
das
and
jns
xor
xchg
pslld
fs
push
mov
fs
loope
adc
divl
push
fistl
popf
add
idivb
xchg
adc
bound
icebp
inc
cmp
test
pop
jle
push
out
push
xchg
mov
daa
icebp
cltd
fidivrs
mov
xlat
sahf
jo
jo
bound
jns
in
fdivs
ja
sbb
outsb
or
int3
adc
cmc
inc
xchg
popf
repnz
mov
xchg
mov
fsubrs
xchg
push
xor
test
dec
orl
push
pushf
hlt
fsubs
mov
clc
icebp
ljmp
or
out
test
out
mov
push
sub
adc
inc
add
push
push
adc
lods
sub
lds
flds
dec
ja
lea
movsb
pushf
movsl
pop
sbb
adc
js
sbb
outsb
icebp
jecxz
sbbl
pop
lea
sbb
shrb
xchg
pop
cli
mov
adc
and
mov
mov
das
xlat
sub
xor
adc
fidivrs
rclb
fnsave
rcrl
out
mov
insl
jns
push
cwtl
rcll
daa
jae
push
sti
dec
mov
cmc
dec
sbb
lcall
fs
icebp
dec
cmc
cmp
shrb
push
out
push
imul
popf
push
shl
dec
adc
xchg
or
mov
imul
push
pusha
sub
test
lcall
inc
and
jae
dec
loopne
xchg
lods
push
and
nop
out
xchg
and
in
loopne
adc
mov
push
jl
lods
sub
dec
or
iret
xlat
jns
mov
in
icebp
mov
inc
popa
inc
out
out
vmread
popa
lods
add
push
iret
loop
aas
loopne
test
mov
dec
mov
cwtl
sbb
andb
dec
in
jae
xchg
xchg
dec
xchg
or
xor
rorl
inc
xor
pop
jne
pushf
loope
pop
cmp
je
sti
les
stos
pop
add
jae
xchg
loopne
inc
iret
mov
cmc
ret
xchg
cmpsl
mov
outsb
jg
lret
inc
or
push
xchg
and
mov
scas
mov
lahf
sub
pop
or
push
push
lahf
push
dec
scas
mov
adc
lret
inc
xchg
gs
xchg
repz
sub
xchg
xchg
mov
jl
in
lcall
pop
xchg
out
pop
loope
pop
and
std
cmpsb
jecxz
cltd
or
xor
and
jb
mov
sub
push
icebp
fldl
shr
mov
xchg
xchg
test
adc
ret
in
jne
scas
dec
out
dec
dec
or
imul
cwtl
repz
pop
jns
push
loope
push
pop
dec
sub
jecxz
dec
filds
and
pop
dec
sbbb
xor
dec
loope
int3
out
test
fdivs
js
sahf
dec
outsb
push
mov
fistpl
ljmp
add
mov
jne
repz
dec
jo
or
push
jae
mov
popf
test
lret
and
pushf
jmp
ficoms
dec
pop
outsl
push
outsb
push
cli
call
test
mov
adc
insb
cltd
mov
insb
xor
sbb
or
test
mov
rep
out
sbb
repz
push
cwtl
mul
or
mov
xchg
repnz
mov
adcb
leave
dec
clc
mov
and
pop
xchg
shrb
stc
mov
jl
sub
or
or
scas
lahf
push
pop
mov
jp
cmc
sub
repz
mov
mov
sub
jmp
jg
sarb
rcrb
push
pop
loop
negb
mov
pop
xchg
pusha
mov
movsb
adc
lea
call
iret
test
or
pusha
fistpl
std
insl
push
dec
jecxz
xchg
xchg
addr16
pushf
out
test
int
and
adc
shrb
mov
pushf
nop
jae
arpl
ljmp
mov
outsb
adc
xchg
popf
mov
pop
movsl
test
pop
inc
divl
pop
cmpsb
hlt
inc
xchg
loop
xchg
and
loop
hlt
xlat
sub
dec
fcmovu
daa
popa
push
loope
lock
adc
lahf
or
call
movsb
nop
xchg
mov
fwait
dec
lock
dec
jecxz,pn
fsts
inc
orb
cmp
pop
adcl
mov
mov
dec
push
jae
arpl
popf
jg
scas
std
das
pop
adc
sub
loop
jecxz
stc
inc
pop
ret
neg
mov
test
lahf
inc
xlat
push
std
inc
out
fcomps
sub
lock
adc
test
clc
dec
sbb
popf
data16
xor
fnstenv
insb
mov
sub
and
dec
in
jp
sub
sub
and
jne
sub
xchg
orb
insl
push
movsl
mov
fstl
fsub
je
cltd
dec
pusha
mov
mov
mov
adc
sbb
fstl
pop
mov
adc
ret
mov
test
ret
cmpsl
and
dec
dec
push
movsb
mov
lea
inc
sbb
add
jecxz
cs
in
stc
pop
push
inc
adcl
dec
pop
and
call
add
sbb
sub
jecxz
adc
dec
jns
jnp
dec
pop
push
pop
mov
add
popf
or
add
xchg
and
or
in
xchg
lcall
or
roll
mov
out
or
into
inc
outsl
decl
sbb
sub
in
dec
jb
inc
std
fldl
jecxz
mov
and
push
cmp
ficoms
ljmp
and
mov
rorb
inc
loop
out
dec
mov
adc
xchg
xor
lock
xchg
cmp
int3
and
inc
icebp
xlat
adc
dec
enter
dec
in
lods
jae
aam
dec
mov
pop
dec
and
jae
lea
leave
fdivrl
mov
jae
in
push
mov
fwait
sub
mov
andb
push
out
fwait
push
mov
pop
sahf
test
nop
int
jae
mov
inc
mov
mov
dec
out
sbb
sub
popa
mov
popf
out
scas
mov
or
jae
hlt
xchg
popf
mulb
cmpsl
test
mov
add
mov
int3
ss
and
cld
and
mov
hlt
inc
je
xor
mov
jae
in
dec
pop
sti
dec
cli
pop
mov
cwtl
mov
dec
inc
test
adc
cmpsb
adc
adc
sub
jae
and
push
movsl
pop
jae
rcl
jmp
inc
les
test
xlat
fstpl
stos
repz
movsb
loopne
stos
mov
dec
cmp
sti
add
es
cmp
je
hlt
imul
lock
mov
xor
mov
xorl
and
pop
mov
dec
or
ja
push
lahf
fdivrs
es
adc
mov
ja
bswap
jl
mov
adc
push
mov
pop
and
jo
movsl
add
les
mov
push
mov
stc
mov
fucomp
inc
push
rolb
cmp
testl
sti
icebp
test
or
popf
lret
ffree
jmp
adc
bound
call
aaa
cltd
xchg
dec
and
push
jae
sbb
leave
push
lret
popf
cmp
or
repz
jne
ficoml
mov
mov
mov
loop
lods
movsb
cmc
out
pop
sbb
mov
pop
aam
dec
fildl
incl
add
sub
mov
and
out
ret
xlat
lods
test
pop
lea
mov
out
mov
cmpsb
fnstenv
sub
inc
out
lret
leave
jae
test
dec
add
push
rcll
and
xor
je
jo
sbb
pop
popf
dec
adc
dec
in
popf
dec
add
lods
cmpsb
push
jne
inc
xor
add
jb
sbb
jl
cltd
dec
jno
icebp
jo
ja
fists
or
inc
pop
push
mov
mov
fsubl
jo
scas
orl
pop
stos
shll
dec
hlt
jl
dec
repz
call
push
out
pop
out
mov
cmp
aas
cltd
and
scas
jnp
and
cld
and
add
xchg
das
xor
sbb
enter
rcl
ficomps
int3
mov
iret
les
imul
lock
loop
movsb
fistpll
dec
push
push
testb
jo
fwait
inc
mov
mov
imul
insb
cmp
int3
mov
sbb
imulb
pop
fists
inc
mov
subb
dec
mov
xor
inc
lds
popf
and
add
adc
jmp
sub
push
sub
nop
imul
mov
push
leave
jle
ja
test
jmp
lods
add
cmpsl
xchg
test
cli
or
inc
and
movsb
xchg
sub
bound
cltd
ja
and
pushf
test
cmp
jne
cmp
test
popa
push
bound
stc
adc
jmp
add
mov
lods
jmp
and
mov
daa
pop
fisubrs
enter
das
fdiv
aaa
pop
adc
jmp
fnstenv
jno
in
cmp
adc
out
cs
jg
xchg
or
jno
ljmp
push
sbb
sub
frstor
adc
fmull
rcrl
xlat
test
push
fs
out
dec
int
repnz
sbb
mov
mov
xchg
pop
mov
sub
pop
mov
dec
and
dec
xor
rorb
and
repnz
loopne
mov
pop
cwtl
test
hlt
neg
jo
push
mov
outsb
decb
test
mov
into
and
jmp
add
adcb
popf
jno
sub
sub
adc
lcall
inc
stc
dec
xlat
les
cli
mov
and
clc
dec
inc
dec
je
xor
idivb
sbb
xchg
xor
lea
hlt
jg
lea
movl
int
xchg
mov
das
ljmp
pop
jae
mov
and
cltd
xchg
test
and
popa
xlat
ja
hlt
lret
pop
xchg
shrl
shlb
xchg
push
stc
popf
clc
aaa
add
sub
enter
jmp
pop
pop
and
roll
lea
pushw
dec
outsb
xor
push
mov
data16
inc
mov
negl
sti
mov
mov
mov
sahf
hlt
adc
rcr
xor
hlt
jmp
lahf
cmp
nop
inc
or
sti
arpl
adc
jmp
bnd
add
cmp
lea
movsl
xchg
sbb
dec
lods
push
and
mov
pop
mov
fmuls
in
loop
cmpsl
mov
sub
push
xchg
fnstsw
das
mov
mov
cwtl
int
xchg
sbb
or
fnstsw
mov
push
shr
pop
subb
inc
shl
add
icebp
lret
insb
dec
mov
pop
dec
stc
push
lods
dec
mov
iret
cli
imul
cmc
pop
add
dec
jecxz
loop
and
xlat
and
dec
cmc
loopne
push
adc
push
dec
xchg
dec
hlt
mov
clc
scas
lea
into
icebp
in
dec
in
push
cmp
hlt
sbb
dec
jno
into
clc
and
leave
dec
sbb
xor
ja
icebp
shrl
jl
in
xchg
inc
mov
push
sub
cwtl
push
icebp
push
lock
mulb
out
cli
fwait
jl
xchg
mov
mov
xchg
andnps
insl
out
pop
cltd
aaa
clc
dec
lds
imul
xchg
jae
adc
xor
divps
ret
ljmp
mov
filds
adc
dec
sbb
jmp
or
sbb
push
add
and
sbb
adc
loopne
or
rcl
xor
mov
pop
xchg
js
mov
leave
adc
mov
mov
ret
movsl
push
mov
pop
das
sbb
and
shl
imul
and
popa
imul
mov
add
test
xchg
pop
fnsave
adc
push
out
mov
pop
negl
mov
and
imul
xor
jno
push
cmp
sbbl
aad
xlat
jecxz
mov
testl
adc
fwait
pop
inc
jne
adc
lds
mov
mov
enter
mov
aad
xlat
xchg
test
stos
mov
mov
xchg
sbb
push
imul
lahf
jo
mov
cmp
mov
push
xchg
ret
lock
rcrb
imul
jae
shlb
sub
xor
add
leave
adc
mov
mov
fmulp
adc
push
fbstp
std
and
shr
xchg
lock
and
jge
dec
and
jbe
stos
sbb
ficompl
into
adc
pop
leave
je
xchg
adc
push
out
mov
lret
sbb
and
rorl
pop
dec
imul
inc
mov
and
subl
aad
xlat
lahf
mov
add
adc
stos
mov
mov
xorb
fsts
mov
pop
outsl
and
sbb
pop
addl
scas
aad
xlat
mov
add
in
mov
mov
cmpsb
rcll
push
and
loope
add
aam
icebp
gs
fstps
sbb
pop
mov
adc
mov
mov
loop
adc
push
out
mov
lret
sbb
and
rorl
sbbb
xchg
enter
mov
cmp
js
jl
sahf
and
shrl
mov
mov
rol
adc
push
sub
in
and
rcl
jnp
sbb
xchg
sub
dec
mov
add
test
push
mov
mov
loop
adc
push
out
test
lret
sbb
and
rorl
xchg
imul
gs
je
pusha
stos
sbb
ficompl
les
or
mov
out
adc
push
jecxz
test
lret
sbb
and
rorl
sbbb
xchg
enter
mov
aad
sbb
mov
and
pop
aad
adc
leave
adc
mov
subl
fbstp
stos
xchg
dec
dec
adc
dec
inc
xchg
adcl
mov
mov
out
adc
push
out
mov
negl
mov
and
imul
addr16
xor
jns
adc
mov
mov
push
mov
popa
push
xchg
mov
not
movsb
stos
lock
imul
pop
add
arpl
sub
pop
mov
cmp
mov
push
xchg
and
sarl
pop
or
adc
pop
adc
imul
aam
and
shlb
adc
mov
xchg
shlb
cmc
test
ret
mov
mov
daa
sbb
and
shl
imul
and
jge
dec
cmc
xchg
test
xchg
sbb
pop
roll
or
popa
imul
mov
subl
mov
add
sub
adc
jnp
rorl
dec
adcl
pop
test
pop
push
lahf
mov
push
out
sbb
and
shll
mov
and
adc
outsl
cmpl
es
das
pop
lea
adc
push
mov
sbb
and
in
pop
adc
adc
aaa
sbb
sbb
int3
shrb
cmp
jg
jne
dec
adc
push
push
mov
push
cmpsl
jne,pn
lock
out
cmc
push
mov
adcl
aas
sub
adc
jnp
rorl
pop
test
enter
mov
aad
xlat
fwait
mov
add
in
dec
sbb
cmpsl
pop
xor
icebp
push
aaa
mov
pop
sbb
and
cmp
mov
adcl
aad
xlat
mov
lds
divb
adc
xchg
push
xlat
mov
pop
aas
sbb
and
ror
ja
sbb
xchg
sub
dec
mov
add
test
sbb
je
xchg
adc
push
sti
mov
pop
iret
sbb
and
roll
pop
dec
imul
xchg
cld
add
test
cmp
fnstenv
adc
push
out
mov
pop
repz
and
rcll
leave
push
adc
imul
outsl
jno
push
xor
xlat
xchg
test
stos
mov
mov
xchg
adc
push
sbb
cmp
push
mov
addl
into
xchg
add
cmc
adc
mov
mov
rol
adc
push
xlat
mov
pop
daa
sbb
and
shl
xchg
lock
and
gs
cmp
sbb
pop
mov
aaa
dec
movsl
adc
mov
mov
jmp
mov
pop
lret
sbb
and
roll
sahf
pop
inc
imul
imul
es
adc
mov
cmpl
iret
mov
add
cmp
adc
addr16
jne
jbe
sbb
jo
je
scas
adc
sub
rcrl
stc
and
pop
in
ret
adc
sub
call
add
jne
jae
imul
push
pop
sbb
and
aad
push
pop
lds
enter
mov
sbbl
mov
add
inc
stos
imul
jbe
gs
or
dec
test
xor
adc
push
mov
push
xchg
sbb
and
shll
stos
pop
xor
enter
mov
adc
pop
aad
shlb
sub
pop
xorl
mov
pop
loop
std
and
pop
adc
adc
cmp
fcom
sbb
stos
dec
dec
xchg
cmc
inc
dec
mov
push
pop
sbb
and
fldcw
enter
mov
andl
mov
add
push
stos
fwait
dec
inc
adc
dec
call
in
arpl
sbb
lock
adc
push
lret
lods
fmul
adcl
daa
mov
add
inc
stos
imul
dec
test
and
lock
xor
push
out
mov
subl
mov
add
pop
stos
xchg
dec
dec
adc
jae
int3
cli
cwtl
mov
lea
adc
push
mov
insb
push
sbbl
xchg
roll
adc
ficompl
imul
aaa
sbb
pop
aad
shlb
jo
jae
and
mov
push
push
sbb
and
lds
out
cmc
push
mov
orl
cmp
stos
jg
jge
dec
test
adc
pop
movsl
je
mov
pop
push
fwait
mov
push
jmp
mov
shl
or
imul
arpl
mov
cmpsl
adc
push
mov
dec
and
sarl
pop
or
enter
mov
sbb
pop
aad
shrb
cmp
jg
jne
inc
adc
push
stos
mov
push
mov
rcrl
cmc
and
pop
in
push
scas
mov
cmp
cmp
call
add
jno
ja
popa
adc
jo
xchg
sbb
pop
mov
add
jg
inc
adc
adc
push
xchg
sbb
pop
and
inc
mov
add
shll
js
jne
test
xchg
add
pop
xor
pop
jmp
adc
mov
jp
lahf
jne
push
or
cmp
jae
cmp
and
jne
sbb
sub
pop
xchg
xchg
add
icebp
xor
stos
in
fcmovbe
xchg
sbb
inc
cmp
pop
push
repnz
sbb
mov
xchg
sub
mov
lahf
pop
sub
mov
pop
jo
mov
jno
std
es
xchg
repnz
mov
jg
hlt
cmp
inc
imul
arpl
dec
inc
enter
mov
lea
nop
pop
lock
das
test
xor
insb
outsb
adc
xchg
mov
js
mov
mov
xor
sbb
roll
mov
add
fists
cltd
adc
mov
je
mov
ds
mov
es
and
fnstsw
xlat
sbb
xchg
mov
cld
dec
je
stos
pop
add
cld
xchg
sub
jmp
out
int3
stos
pop
inc
lcall
es
xchg
and
hlt
lret
movsl
scas
inc
aas
and
jo
lahf
mov
add
jge
jae
mov
daa
fnstsw
lods
out
aad
inc
push
mov
xchg
pop
lods
shlb
mov
xor
lcall
jno
inc
jae
aad
pop
mov
mov
arpl
push
loopne
xchg
or
push
pop
pop
and
movsb
shl
mov
mov
data16
hlt
test
arpl
in
lcall
out
sub
adc
push
cmp
pop
rolb
mov
rorl
jae
mov
jecxz
xchg
mov
mov
nop
stc
out
xchg
iret
dec
mov
push
outsb
cltd
aaa
into
mov
pop
lds
clc
jecxz
aas
mov
pop
pop
cmp
jno
lods
jbe
int
movsb
rorb
inc
data16
sahf
cmpsb
out
push
dec
and
mov
or
sub
cs
pop
stos
mov
loop
out
in
xchg
sti
xor
mov
jo
cs
pop
lea
std
hlt
pop
adc
cmp
movsl
sti
jno
es
push
push
hlt
test
xchg
lahf
mov
push
adc
inc
push
mov
jno
cmp
mov
push
addl
shlb
cmp
or
or
sub
clc
jns
xchg
shrl
movsb
fsubs
sbb
xchg
cmp
scas
jnp
pop
ret
push
sub
add
leave
mul
inc
cld
xchg
lcall
pop
insl
mov
cmp
inc
jae
mov
jae
jo
fs
repz
cmpsb
mov
in
shll
mov
mov
sti
insb
pop
cltd
int
pop
inc
ss
stos
dec
pop
ss
and
mov
mov
scas
fwait
cltd
popa
in
jle
std
fldt
int3
hlt
push
loop
cmpl
adc
add
add
jnp
test
sbb
cmp
cmp
repnz
mov
outsb
push
icebp
stc
mov
mov
in
dec
mov
push
in
filds
lds
mov
sbb
or
loop
lcall
sub
adc
lock
faddl
popf
pop
add
ds
les
xchg
imull
nop
mov
cltd
and
les
push
add
pop
pushf
aas
xchg
cmpsl
push
pop
cwtl
xlat
sub
imul
add
mov
mov
mov
lcall
fs
mov
xchg
xor
sub
ds
outsl
sbb
xlat
mov
push
sahf
clc
sub
add
mov
repz
lds
cmp
dec
mov
jnp
test
dec
sub
push
inc
inc
cmp
mov
pusha
loope
inc
addr16
add
idivl
imul
dec
push
dec
lret
pop
cltd
cmp
je
dec
repz
jmp
rep
nop
push
push
repz
int
pop
xchg
pop
and
add
and
mov
jmp
inc
jecxz
xchg
xchg
and
pop
lcall
push
push
pop
popf
and
lock
psllw
ja
cmpl
mov
cli
loope
mov
jo
inc
push
imul
outsl
dec
loopne
insb
ds
fldenv
stos
mov
stos
dec
aam
and
push
clc
lock
loopne
mov
pop
clc
pop
inc
mov
pop
dec
nop
push
jno
or
shr
cmp
mov
mov
xor
shr
jne
inc
push
sub
xchg
test
xchg
dec
stos
ss
mov
xchg
int3
push
xor
leave
imul
xor
test
divb
inc
mov
xchg
xchg
xchg
sub
outsl
jp
mov
mov
inc
jae
and
xor
addr16
mov
bound
jno
int
mov
out
lea
mov
mov
mov
or
cmp
pop
je
pop
xlat
mov
mov
mov
dec
add
mov
sti
xlat
loop
cmc
inc
insl
cld
mov
js
in
add
mov
xor
ljmp
pusha
sarb
jno
jno
lret
daa
test
push
ret
mov
adc
outsl
test
test
mov
lock
cmpsl
fcomps
add
sbb
popa
dec
mov
scas
push
cmp
ret
mov
cmp
ret
cmpsl
inc
loopne
mov
add
in
adc
xorl
jnp
xor
fs
cld
imul
and
mov
dec
in
adc
xchg
repz
cli
jle
push
inc
lcall
pop
xchg
mov
jb
les
and
pop
loope
es
xchg
decb
push
mov
sbb
addr16
xchg
adc
aas
fiaddl
mov
clc
sub
adc
inc
int3
inc
mov
popf
loope
js
inc
adc
pop
jne
cmc
popf
jbe
jno
inc
cld
xchg
xchg
pop
inc
lods
popa
hlt
inc
adc
ret
mov
xor
fsts
pop
and
pop
movl
pushf
lods
inc
add
sbb
loop
icebp
or
pop
mov
adc
call
and
push
je
add
pop
lahf
fistl
xchg
enter
fists
sub
test
xchg
sbb
popa
arpl
insl
cmpsl
inc
outsl
mov
xor
adc
lock
inc
fidivl
inc
pop
ja
outsl
dec
inc
push
lret
lods
add
gs
in
idivl
dec
cli
cmp
jmp
pushf
jns
inc
push
cmp
into
jle
mov
repz
cltd
das
es
push
pop
ret
pop
movsl
mov
push
mov
inc
nop
ss
jle
and
mov
mov
test
jg
pop
fucomi
mov
inc
jl
pop
fdivp
jp
sub
pushf
lahf
jg
in
or
mov
frstor
mov
xchg
cmpsl
xor
fldl
mov
dec
xor
push
inc
mov
inc
imul
or
jno
push
in
mov
testl
add
jo
mov
xchg
stc
arpl
ss
jmp
lods
or
mov
cmp
shlb
pop
cmp
xor
jnp
insl
add
xor
xchg
push
mov
test
lret
or
pop
test
in
aaa
sub
jb
in
aas
mov
rcrb
or
dec
xor
add
popa
xchg
inc
out
rcrl
lock
and
pop
in
ss
pop
scas
outsl
mov
adc
mov
pop
push
fbstp
jg
in
jns
jmp
push
jecxz
pop
jecxz
arpl
aad
cmpsb
jmp
cltd
icebp
into
insl
outsl
nop
dec
xor
test
fwait
add
pop
in
scas
jg
insb
mov
mov
or
lahf
cmpsb
loope
arpl
in
cmc
jle,pn
sub
fistpl
cmc
loope
addr16
pop
xor
test
push
rcll
cwtl
adc
std
inc
sub
pop
xor
or
jle
push
add
xchg
subb
repnz
mov
repnz
je
add
mov
add
inc
xor
arpl
sub
mov
dec
into
pop
aaa
cltd
add
cmp
mov
lods
das
sbb
cmpsl
jns
ja
enter
xchg
pop
roll
xor
scas
sbb
notl
dec
jle
out
xchg
add
add
repz
popa
pop
out
lahf
and
hlt
out
ret
shll
jbe
stos
test
ficoms
inc
into
dec
sti
stos
das
mov
jbe
arpl
call
test
into
dec
or
and
andl
stos
or
xchg
xor
push
fscale
and
adc
dec
sahf
mov
in
jl
out
insl
mov
dec
xor
xlat
out
leave
xor
imul
mov
stos
pushf
adc
mov
add
inc
fndisi(8087
jecxz
sub
jle
imul
loopne
into
loopne
out
mov
les
sub
sbb
rolb
push
jecxz
add
jmp
in
jp
ret
inc
sub
mov
xor
sarl
dec
subl
cmc
jo
lods
jae
add
les
mov
dec
add
test
aaa
inc
out
push
in
mov
mov
scas
jne
mov
lods
insl
jle
or
mov
fiadds
pop
mov
out
loop
jp
push
lods
inc
jmp
push
add
dec
push
std
dec
xchg
adc
bswap
pop
test
test
inc
xchg
fcmovu
lret
jle
pop
fwait
in
push
loop
pop
jecxz
icebp
sbb
and
mov
push
jae
and
shl
jmp
aam
jp
pop
loopne
hlt
mov
in
sub
js
std
das
and
pop
push
inc
push
mov
dec
roll
insl
xchg
ss
adcb
fisttpl
fsts
pop
jle
pop
sbb
ret
dec
sarl
dec
jns
faddl
jns
add
lahf
sbb
dec
or
pop
hlt
into
mov
dec
fcmove
rcrl
leave
dec
pusha
ret
data16
loop
mov
push
jne
jno
cmp
xor
push
loop
cld
pop
inc
dec
dec
daa
das
add
jne
jae
jns
insb
dec
out
bswap
pop
inc
test
pusha
adc
rolb
xor
sbb
sbb
hlt
inc
push
inc
dec
loopne
pop
jno
inc
sub
inc
ret
lock
idiv
jns
test
out
in
xor
ja
mov
negb
xor
pop
xor
dec
imul
das
jns
sbb
inc
dec
jne
xor
xchg
data16
mov
add
dec
jg
dec
adc
sub
iret
pop
mov
pop
jbe
movsb
adc
mov
lahf
cltd
add
add
xor
jl
into
mov
shlb
outsl
xlat
loopne
jb
fwait
push
pop
xchg
push
call
js
add
pop
fnstcw
push
outsb
outsb
push
and
or
dec
and
lock
out
inc
sbb
jmp
xor
jmp
rorb
jg
mov
xchg
cwtl
sub
addb
lock
mov
mov
sbb
jne
inc
adc
lock
fists
add
pop
aas
in
sbb
out
xor
xchg
push
lods
push
cmpsl
movsb
inc
insb
sbb
inc
mov
cmpb
out
stos
xchg
sub
and
jle
out
mov
add
ss
out
push
mov
dec
cli
cmc
cs
jno
dec
mov
shll
push
dec
inc
out
test
mov
push
cmpsl
imul
jo
aas
dec
push
mov
in
sbb
loopne
jno
fstpt
cmp
mov
cmp
mov
inc
jmp
lret
lods
clc
pop
xor
xchg
or
das
insl
out
xchg
dec
loopne
sbb
shll
cmp
fisubrl
icebp
mov
inc
and
xor
or
lcall
lea
hlt
jb
jbe
addr16
mov
call
inc
jo
xor
jbe
sti
inc
jae
jmp
test
insl
cs
pop
decl
cmpsb
pop
enter
shlb
sbb
dec
adc
sub
push
mov
xchg
xchg
fsubl
jecxz
add
sbb
daa
pop
cld
xchg
pop
jle
movsl
out
cmp
sub
and
ret
cltd
aaa
in
pushf
mov
sub
pop
xor
mov
jns
inc
jg
aaa
sbb
movsb
add
scas
pop
stos
pop
mov
mov
sbb
cmc
pop
add
inc
outsl
jl
loop
push
ljmp
xor
adc
and
jne
jno
pusha
mov
lods
outsl
ret
cmp
faddl
in
pop
movsl
mov
rorl
xchg
cmpsl
cltd
outsl
arpl
and
xchg
popf
or
stos
sbb
cmpsb
shl
stos
scas
dec
jge
and
mov
leave
and
xchg
cltd
sbb
mov
sbb
sbb
ja
jmp
out
cmp
enter
xchg
xor
scas
push
call
test
fwait
push
pop
stos
mov
cmpsl
fstps
lods
push
mov
add
insb
inc
mov
lahf
xor
jecxz
and
sbb
pop
and
cmc
jle
push
in
pop
stos
stos
xchg
sahf
sub
jo
test
fwait
aaa
push
xor
add
xor
mov
adc
shl
push
sbb
xchg
sub
ss
int3
int
xchg
dec
mov
push
leave
clc
add
mov
fmulp
rolb
inc
inc
inc
xchg
xor
lahf
and
jne
adc
push
nop
dec
adc
mov
ret
xor
testl
cmpsl
int3
push
testb
scas
lods
sbb
and
enter
jecxz
addr16
mov
scas
xchg
mov
aas
pop
call
jno
pop
mov
scas
cmp
scas
xlat
mov
jecxz
lock
clc
lahf
clc
add
xchg
jae
pop
pop
enter
xor
fidivrl
les
or
mov
pusha
jae
mov
int3
lret
cmpsb
jmp
fs
add
adc
movl
add
jp
xchg
in
mov
lods
xor
jmp
jp
add
sbb
popa
add
outsb
add
jl
mov
and
insb
lods
mov
aaa
push
jbe
dec
xchg
ss
dec
int
adc
sub
cwtl
fsubrl
mov
pop
ss
xchg
es
adc
mov
loopne
mov
jb
out
push
jne
cmp
sti
xchg
and
loope
cmc
xchg
mov
inc
xor
mov
popa
push
jbe
mov
jae
xchg
add
xchg
jl
sub
mov
push
arpl
inc
stc
fwait
aaa
xlat
mov
idivl
push
fs
add
adc
or
cld
push
xor
pop
xlat
xchg
and
jbe
push
mov
sub
lea
push
icebp
adc
xor
jnp
sbb
loope
xor
mov
mov
mov
push
dec
mulb
cmp
mov
jecxz
xchg
sub
test
stc
add
dec
cmpsl
rorb
std
fs
stos
dec
jg
setg
inc
jae
push
add
dec
xor
xchg
add
xchg
insb
arpl
lahf
xchg
mov
lods
mov
mov
in
cs
mov
jae
pop
mov
lods
into
js,pt
sub
mov
xchg
adc
adc
sub
fs
pop
adc
test
sub
push
xor
cmpsb
out
and
cltd
les
fistpl
bound
dec
or
js
jo
int3
inc
enter
dec
lods
jbe
lods
jmp
ja
xchg
inc
xor
and
jecxz
and
lret
adc
arpl
aas
inc
dec
lahf
add
mov
out
dec
xchg
mov
divb
sub
xor
jne
clc
cmp
xchg
dec
pop
mov
xor
aam
push
push
repnz
add
and
call
and
mov
adc
xor
fsubp
xchg
sub
mov
shlb
ret
stos
lret
and
stos
push
in
xor
adc
mov
popf
outsl
ret
jne
pop
test
fs
lcall
in
and
sbb
xor
pop
lods
into
xor
pop
push
stos
test
xor
cmp
push
mov
pop
fisttpl
jbe
rorl
jl
inc
loopne
leave
mov
mov
and
push
bound
inc
loope
sub
pop
ficoms
pop
or
mov
inc
notb
xchg
cmp
js
test
jnp
xor
pop
jmp
repz
fwait
push
stos
inc
jno
out
repz
cltd
addr16
sub
lahf
int
push
fcmovu
insl
mov
popf
in
addr16
es
out
mov
std
mov
pop
fsubrl
roll
stos
sahf
out
cltd
jbe
in
imulb
adc
cwtl
jecxz
xchg
inc
mov
mov
push
popa
dec
call
sahf
mov
mov
dec
fdivrl
int3
push
out
inc
sub
sti
cmp
dec
ret
rcll
sub
lea
dec
inc
pop
pop
xor
outsb
jg
sbbl
sub
adc
shlb
lahf
imul
inc
sti
xor
sti
cmpsl
shrb
push
jo
xlat
adc
mov
mov
sub
mov
mov
repz
cmp
sub
fcompl
mov
pop
fiaddl
jne
xchg
jno
add
jae
ja
es
pop
cmpsl
and
scas
repnz
gs
and
mov
arpl
push
push
sti
inc
jo
notl
fsubl
ret
sbb
fstl
jge
in
push
sbb
xchg
sub
mulb
das
and
sarl
sbb
push
cld
outsb
adc
aam
ds
in
aad
jne
adc
lahf
dec
add
test
arpl
inc
out
movsl
sub
movsl
icebp
dec
leave
ljmp
shlb
mov
and
mov
mov
push
in
cmp
cwtl
dec
movsb
int
and
mov
fs
lock
stc
scas
or
xchg
das
pop
call
inc
mov
rsqrtps
mov
je
ds
sbb
inc
arpl
int3
lds
fstpt
into
pop
push
sub
addr16
lret
push
dec
add
jle
aaa
es
arpl
aam
sub
dec
test
adc
xchg
add
adc
fbstp
inc
add
mov
jae
rolb
fstl
sub
test
mov
adc
mov
ficomps
sub
es
cmp
scas
nop
add
sbb
fcoml
mov
aam
sbb
frstor
mov
gs
pop
out
or
push
cld
xchg
cmc
dec
clc
xchg
mov
sti
pop
js
mull
in
in
out
enter
xchg
mov
aad
adc
adc
jg
lea
or
or
adc
into
jae
xchg
push
in
fnstenv
shll
movsb
ja
jg
popa
push
test
push
inc
sbb
dec
jo
adc
mov
addr16
or
jno
iret
add
jge
sbb
ja
lahf
daa
sqrtps
fwait
jne
inc
call
sbb
jb
je
jl
imul
sub
jge
jg
mov
dec
fucomp
lret
ds
jecxz
mov
testb
xchg
jo
outsl
ds
inc
mov
mov
loop
sub
out
int
xor
adc
jne
gs
xor
push
fs
out
xchg
cmp
lds
lret
ret
je
js
dec
pop
addr16
outsb
fcmovnbe
popf
mov
or
shrl
dec
and
pop
int3
sub
xor
arpl
adc
sarb
shll
imul
jbe
adc
mov
sbb
aas
lods
movsl
imul
sahf
push
lahf
les
out
push
repz
int
popf
cmp
sbb
sbbl
sbb
icebp
dec
jle
cwtl
push
sub
aas
rol
add
mov
or
ret
push
clc
into
sub
adc
daa
mov
repz
jb
jmp
addr16
ljmp
add
cld
mov
push
adc
je
in
sbb
cmpsl
into
add
data16
aam
xchg
dec
jecxz
scas
sbb
in
jbe
enter
xlat
and
mov
inc
pop
xchg
xchg
mov
pop
xor
xchg
nop
inc
fwait
cmp
ficoms
jnp
mov
rolb
jmp
xor
jmp
jle
xor
mov
xchg
sub
int3
mov
and
mov
fnstsw
mov
mov
std
cmp
and
xorl
loope
sbb
push
imul
pop
jecxz
push
sbb
arpl
divb
inc
mov
jle
jo
push
inc
sbb
pop
xchg
icebp
pop
out
xor
test
int
nop
in
les
mov
sbbl
lock
push
xor
jnp
mov
cltd
adc
sti
fsubl
sbb
jnp
mov
in
add
popw
xchg
daa
les
dec
lret
xor
mov
data16
jl
repz
cli
or
call
xchg
dec
adc
aaa
mov
pusha
sbb
mov
insb
movsl
jge
ljmp
ret
ffree
jp
mov
ja
cmp
gs
cmc
test
push
ljmp
imull
into
std
push
cmpl
pop
jg
std
shl
push
sbb
fdivl
out
call
mov
incb
lods
fmull
outsl
inc
movsl
adc
fwait
lret
and
jnp
xlat
mov
movsl
cmpsl
xchg
pushf
mov
stc
jne
adc
lods
add
push
push
inc
xor
jae
sarb
xchg
dec
test
jge
jecxz
sbb
test
mov
sbb
pop
mov
or
pop
sbb
movsl
shll
add
sti
adc
mov
add
test
push
jecxz
fwait
sub
mov
outsl
add
dec
jo
push
dec
or
push
or
adc
xor
out
pushf
loope
movsb
shlb
in
add
adc
or
xchg
pop
test
add
cwtl
xchg
lea
add
sub
adc
ds
push
mov
repz
or
ljmp
data16
outsb
mov
imul
jo
les
stos
sbb
push
arpl
subb
lods
dec
leave
cmp
xchg
movsb
mov
mov
fimull
popa
push
int3
xchg
hlt
xchg
push
arpl
jecxz
jg
cld
inc
and
lea
sub
and
pop
sbb
fs
sub
loope
cmp
in
jmp
pop
xlat
mov
xchg
mov
pop
les
int3
add
mov
rcll
das
mov
jecxz
pushf
mov
or
je
pop
fsubs
and
icebp
sbb
test
xchg
stc
test
sbb
das
in
mov
fsubp
dec
xchg
inc
mov
fidivrs
hlt
out
push
lcall
pop
scas
push
xchg
sbb
pop
popf
mov
sub
xor
sbb
sub
inc
jmp
ds
pop
sti
xor
testb
rcrl
into
jns
mov
cmp
jmp
pop
mov
es
jmp
mov
mov
aad
lcall
push
add
jnp
sub
cs
sub
xlat
es
xchg
adc
shll
pop
sbb
and
stos
and
mov
lahf
insb
pop
push
push
jb
fcomps
add
inc
sub
adc
mov
popa
loope
addb
movb
xchg
jmp
dec
data16
ds
popa
or
test
and
and
xor
into
popa
out
inc
push
fwait
test
and
ja
cmp
andb
pop
jnp
xor
cld
mov
jo
fs
xor
xchg
pop
jne
test
arpl
popa
rcr
or
imul
push
or
mov
insb
cmpsl
xchg
jle
std
sbb
clc
inc
fdivrp
mov
push
fcoms
out
inc
movsl
insl
sbb
add
sbb
jnp
inc
pop
or
bt
fidivrs
cmc
ficoml
sub
insl
enter
sub
dec
add
jl
pushf
outsl
andl
inc
fadds
sub
mov
jle
pushf
aad
popa
sub
rorl
test
and
in
push
fmuls
and
movups
or
dec
or
insl
imul
jns
lds
adc
bound
mov
lds
lea
sahf
and
out
pop
mov
imul
push
jnp
sub
push
es
jnp
insl
xchg
dec
push
xchg
and
xlat
inc
hlt
push
popa
gs
xor
jb
sbb
xchg
mov
ret
insl
lret
xchg
lahf
add
les
sbb
enter
or
mov
push
inc
sbb
aas
sbb
inc
rorb
jmp
mov
and
jnp
rcrb
adc
lods
arpl
stc
jo
aad
lret
and
je
iret
xor
jnp
sub
imul
lods
adc
sub
lcall
shlw
push
negb
addl
outsl
mov
shll
adc
repz
out
xchg
iret
xchg
mov
rcll
les
xor
insl
mov
dec
adc
rcll
cmpsb
je
push
xor
pop
rorl
ss
clc
xor
jnp
and
pop
jg
scas
pop
jg
dec
jmp
inc
pop
jecxz
xor
inc
cmc
scas
inc
test
xchg
aaa
aad
scas
xor
lahf
xchg
inc
subl
inc
insl
mov
ss
xor
xor
daa
popf
adc
or
push
sub
insb
jae
lods
xor
mov
push
mov
orl
in
jl
rorl
cmp
xlat
filds
sub
mov
jo
jle
test
adc
mov
mov
and
or
pop
pop
or
icebp
jnp
sub
sahf
pop
add
insl
test
and
xor
ret
sahf
outsb
pusha
xor
jo
in
mov
add
jmp
cmp
popa
insl
aas
cmc
test
adc
test
cmp
sbb
test
pop
repz
jp
test
jnp
cmp
fstp
in
mov
pop
mov
cmp
mov
mov
enter
pushf
lods
inc
jne
pushf
adc
mov
es
mov
insl
mov
mov
lock
and
je
insb
xchg
nop
jl
mov
xchg
int3
jg
and
cmp
ljmp
insl
inc
mov
je
or
inc
cltd
dec
xchg
jg
rcll
lock
sarb
js
stos
pop
hlt
fisttpll
mov
jnp
mov
rcr
ljmp
or
inc
adc
sub
popa
mov
xor
or
mov
jne
cld
cwtl
je
xor
xchg
adc
jecxz
cwtl
inc
jg
mov
data16
dec
dec
sub
in
lods
mov
and
movsb
adc
test
sub
insb
jge
adc
jo
insl
adc
mov
je
loopne
das
xchg
sub
inc
cld
pop
inc
or
ja
jnp
cmp
fwait
insl
xchg
xchg
push
add
dec
js
call
push
jnp
pop
shr
xorb
xchg
or
stc
es
xchg
ja
test
xor
or
insl
jg
ja
pop
mov
push
mov
mov
adc
scas
xor
ret
insb
cld
out
sub
lret
lods
mov
out
push
jle
push
sarl
mov
add
sub
test
in
and
ficoms
pop
out
repnz
insl
sbb
push
insl
pop
xor
rolb
fdivs
and
mov
and
jge
xchg
xchg
cmp
push
popf
sub
imul
es
xchg
inc
mov
jecxz
push
aam
mov
add
pusha
es
inc
inc
outsl
cmpsl
inc
int
js
sahf
mov
or
fucomi
sbb
loop
add
inc
in
lods
cwtl
jne
pop
xor
cmpsl
xlat
dec
ja
xchg
cmpsb
enter
mov
pusha
stos
cmc
jne
xchg
add
adc
fs
call
addr16
adc
add
and
xchg
cmp
movsl
push
cmp
push
jnp
mov
loop
pop
mov
cmp
mov
mov
les
mov
orl
mov
add
js
mov
jno
sti
lods
outsb
movsl
hlt
test
pop
xor
xchg
jle
jl
push
flds
mov
pushf
jl
fs
xor
mov
mov
jo
jl
test
push
dec
mov
or
inc
outsl
iret
icebp
arpl
in
sbb
fmuls
cwtl
rolb
or
and
in
dec
jmp
and
inc
push
cmp
mov
outsl
jns
jne
mov
pop
mov
jae
mov
aas
jmp
sbb
mov
or
and
and
add
inc
xchg
add
sub
jle
push
and
cwtl
inc
gs
jnp
dec
sbb
and
cld
sub
outsl
je
scas
inc
addr16
fs
add
and
pop
jecxz
in
pop
sarl
lods
cmpsl
lcall
fsts
jmp
mov
leave
lods
xor
cs
out
aad
arpl
shrd
push
insb
enter
iret
and
lea
pop
cmp
pop
bound
data16
mov
xor
pop
or
repz
push
nop
lock
arpl
dec
inc
nop
inc
jbe
mov
lcall
pop
inc
test
pop
js
mov
das
and
test
dec
push
dec
inc
out
cli
inc
push
push
cwtl
push
or
xchg
imul
inc
sahf
stc
jo
adc
fs
lods
loopne
xchg
sub
push
jl
push
mov
sbb
cs
or
sbb
or
jns
jl
jo
sahf
fstpt
jecxz
aaa
lret
inc
or
sbb
pop
in
or
ljmp
jo
std
pop
and
lock
cmp
push
sqrtps
xor
xor
or
lock
pop
ja
cmc
nop
or
lret
icebp
decl
push
fstpt
sarb
loopne
gs
push
sahf
pop
data16
call
lods
cmpsl
sub
leave
and
jns
rol
mov
mov
sub
cld
ljmp
mov
orl
or
loopne
fwait
xor
lahf
xchg
dec
mov
and
jp
add
in
arpl
mov
push
and
jmp
sub
out
mov
jae
or
lods
ret
dec
mov
ret
dec
ljmp
fidivl
sbbl
cli
mov
out
xor
sbb
push
adc
incl
mov
push
rcr
adc
lods
adc
repz
push
adc
enter
pop
pop
inc
xchg
mov
test
dec
es
sbb
movsb
mov
aaa
sti
scas
jle
jno
pop
std
mov
sub
dec
add
dec
push
mul
add
mov
notl
adcb
stos
icebp
les
mov
adc
sahf
or
push
xor
test
or
shlb
dec
shrb
sub
pop
xchg
fsub
ja
notb
push
addr16
into
pusha
mov
insb
xchg
jno
or
call
push
pop
leave
cmp
or
repnz
push
outsl
movsl
adc
and
mov
lock
xor
xlat
or
inc
add
lock
sbb
cld
cmp
xchg
inc
cli
mov
inc
stos
imul
or
push
loope
push
xchg
lods
sbb
jo
xor
inc
jno
rorb
out
inc
xlat
fldcw
inc
and
sub
jnp
push
in
fsubl
pop
loope
inc
stos
mov
mov
jnp
repnz
test
pop
adc
mov
pop
ds
inc
adc
daa
lock
inc
xchg
cmc
rclb
lret
js
fmuls
call
fidivl
dec
aam
push
mov
in
shll
ss
fsubrs
jle
jno
xchg
out
lahf
shlb
push
cmpsl
cltd
fcoms
inc
pop
pop
mov
xchg
sbb
repz
aad
hlt
sub
mov
jg
fmuls
das
jl
jae
fcomps
pop
jge
ret
add
pop
mov
aas
pop
adc
out
xor
lcall
dec
das
add
repz
cmp
aad
lds
sbb
rep
xchg
jns
lcall
fs
jmp
xchg
xor
mov
repz
int3
insl
add
mov
xchg
jns
and
and
or
cmp
icebp
jns
adc
ss
xchg
xor
in
xor
pop
xchg
sarb
int3
mov
aaa
pop
jne
sbb
bound
or
daa
mov
outsb
divb
jbe
mull
mov
daa
scas
sub
daa
lods
in
pop
xor
adc
arpl
mov
jb
imul
add
test
add
jg
ja
mov
fldl
and
inc
negb
dec
jmp
lahf
sbb
test
mov
pop
fstpl
cmpsb
jg
mov
mov
stc
outsl
loop
sub
in
sub
mov
js
enter
hlt
push
add
mov
dec
ja
imul
add
mov
test
andb
add
cmpsl
cmp
bnd
add
xor
mov
sahf
scas
dec
ja
imul
dec
leave
adc
sbb
add
xor
lahf
lret
lret
lock
bnd
add
dec
push
push
les
sbb
mov
push
iret
pushf
mov
cld
add
cmpsb
mov
arpl
lock
stc
rorl
or
jns
mov
or
mov
adc
nop
movsl
push
adc
in
aad
pusha
and
inc
sbb
inc
jns
in
aas
fwait
mov
sbb
push
rcrb
add
mov
cmp
std
stos
fcomps
popa
ret
cmpsl
push
mov
cmp
rcrl
icebp
and
test
adc
cltd
adc
dec
mov
test
push
push
and
dec
cmp
pusha
mov
xlat
or
loope
inc
push
push
test
stos
lock
and
loope
fimuls
adc
inc
jne
stos
movsl
int3
fists
mov
pop
mov
test
scas
cld
or
je
jns
outsl
jmp
inc
lds
fdivr
sbb
aad
mov
mov
push
fldenv
stos
addr16
mov
mov
test
mov
dec
sbb
daa
or
adc
fwait
and
mov
mov
dec
rorl
repz
and
xchg
adc
shll
fisubs
sbb
mov
pop
cs
aaa
enter
mov
aad
push
lret
popf
xchg
jecxz
mov
jae
mov
and
adc
cld
push
jo
inc
rclb
ficomps
imul
sub
inc
shll
repnz
daa
xorb
in
push
and
adc
xor
and
scas
jb
rolb
ret
arpl
pushf
mov
add
mov
add
inc
pop
repnz
shlb
repz
daa
lds
xor
jle
pop
test
sub
stc
data16
call
add
ret
mov
imul
and
xor
roll
addr16
push
push
ret
mov
and
inc
pushf
sub
mov
and
lods
push
test
jecxz
rcl
lods
and
inc
mov
xor
mov
adc
ss
bnd
inc
cmp
les
push
imul
shll
sub
sti
pop
mov
mov
mov
faddp
adc
cltd
repz
lcall
fildll
dec
adc
cmpsl
dec
in
inc
scas
xlat
repz
cli
mov
in
nop
add
xchg
cmpsb
jp
xlat
pop
cs
push
push
cmp
dec
push
mov
mov
or
xor
fcoms
pop
pop
xchg
subl
jns
jmp
jbe
adc
loop
int
pusha
mov
pop
mov
xchg
push
fdiv
adc
repnz
pop
xor
xchg
ja
mov
test
loopne
in
pop
xorl
imul
xlat
ss
sti
fsubrl
jnp
mov
dec
iret
mov
out
fists
outsl
lcall
or
cmp
std
jge
cmp
fs
test
pop
mov
lar
lea
cmc
xor
cs
mov
inc
mov
inc
adc
mov
lea
xor
push
neg
dec
pushf
jp
add
mov
and
and
jno
mov
aam
push
sub
jbe
cmp
loope
cltd
push
les
rorb
mov
enter
es
lods
or
push
das
lcall
rcll
and
push
jmp
aam
push
pop
aaa
fnstsw
xor
mov
fisttpll
fiaddl
jecxz
mov
sub
repz
in
jno
mov
jno
mov
fstpt
adc
cmp
or
in
addr16
gs
add
sbb
sbb
jne
sub
ss
cmpsb
lds
nop
loop
cmp
jb
pusha
cli
lods
mov
gs
nop
or
lds
or
mov
mov
test
sbb
add
or
mov
pop
adc
pop
inc
rclb
jge
mov
rcrl
sub
push
mov
cltd
dec
inc
add
sbb
stos
push
or
lea
inc
rcrb
dec
movsb
push
xchg
repnz
cli
mov
into
lcall
bound
xor
xchg
icebp
rorl
jns
mov
rep
pop
add
ljmp
dec
iret
mov
outsl
push
push
popa
push
and
and
sub
and
in
sbb
in
mov
mov
ds
or
test
mov
mov
cmp
in
movsl
push
sarl
insb
pop
insl
xor
mov
cld
enter
movsl
xchg
sub
das
in
xor
cmpsl
mov
cmp
add
nop
sbb
mov
ljmp
sti
xchg
cwtl
adc
int
mov
repnz
cld
sub
inc
push
js
sbb
xor
fbstp
pop
jns
fsts
xlat
cmp
mov
mov
push
xor
fsubrs
sub
add
jmp
inc
mov
fstpt
fdivrs
sub
shll
lock
aaa
nop
mov
jno
sahf
lea
mov
mov
cltd
xor
movb
loopne
sar
jp
mov
repnz
sbb
lcall
xor
inc
mov
push
adc
jecxz
std
cwtl
push
sbb
imul
into
clc
pushf
ret
arpl
mov
aad
sbb
adc
add
scas
rcr
mov
mov
pop
mov
pop
pop
rol
roll
stos
sub
dec
jg
inc
pop
mov
dec
icebp
subps
mov
or
jge
push
std
cmpsl
xchg
jle
movsl
imul
je
jns
push
jno
test
addr16
mov
mov
mov
stos
unpckhps
rclb
fsubr
test
test
mov
push
xor
xor
mov
add
insb
pop
sbb
aas
psubusw
test
sbb
jno
mov
inc
cli
stos
cli
mov
push
nop
mov
jbe
daa
or
fwait
or
cwtl
push
xor
dec
dec
add
daa
jnp
mulb
addb
movsb
inc
dec
lods
inc
bound
jo
aam
mov
lea
decb
aam
mov
insl
cmc
daa
dec
outsl
outsl
hlt
outsl
sub
scas
in
jle
das
dec
xor
mov
pop
jae
dec
jae
pusha
out
roll
das
inc
out
scas
bound
pushf
push
jns
lcall
in
loopne
xchg
int
mov
jmp
out
aas
fildll
xchg
aad
and
jae
mov
xor
scas
repnz
mov
jae
adcl
test
cmp
inc
xchg
icebp
rcrb
sub
out
outsb
jmp
in
loop
pop
or
test
sub
adc
mov
push
adc
jmp
mov
out
fadds
fldt
mov
mov
push
cmc
xchg
aas
fcmovne
dec
and
outsl
shl
xchg
imul
fldt
sbb
mov
dec
cmp
repz
cmp
lcall
jg
mov
mov
movsl
inc
cmpsb
in
call
mov
push
xor
int3
dec
pop
hlt
into
pop
dec
and
mov
jno
lret
cli
cmp
test
fdivrs
sub
addl
sar
mov
das
sti
repnz
pusha
imul
jp
push
rcl
int
lret
loop
out
data16
addb
mov
sub
ds
out
mov
test
inc
mov
in
cmp
inc
dec
popf
in
out
mov
je
test
push
ja
icebp
xlat
mov
popa
cltd
mov
inc
cmp
mov
fwait
push
in
jge
jbe
inc
fadds
sub
rcrl
repnz
loopne
out
cmp
mov
test
std
call
out
add
jl
and
out
mov
insb
cwtl
lock
cmp
sub
xchg
rclb
add
or
jg
adc
out
inc
rcll
rorl
bound
sub
setae
call
stos
xor
xchg
out
out
orl
sub
jge
fadd
hlt
jnp
push
lods
sahf
test
bound
nop
in
fcomps
aas
jmp
pop
int3
sub
les
sub
mov
adc
pop
out
xor
pop
push
pushf
sahf
and
adc
and
mov
out
iret
xchg
int3
mov
aam
test
in
inc
lock
xor
jp
push
mov
not
mov
sub
xchg
inc
in
into
sbb
push
dec
ret
or
mov
or
loopne
loop
fcoms
lahf
mov
std
xor
push
jecxz
add
jo
adc
pop
xor
aam
pop
fimuls
mov
jmp
test
and
pop
int3
xchg
inc
pop
movsl
mov
je
scas
push
pop
pushf
xchg
inc
adc
fstl
cmp
jb
xor
mov
xor
in
cwtl
pop
dec
mov
push
inc
loop
sub
inc
in
pcmpgtd
aaa
jecxz
in
mov
jns
mov
pop
out
ja
loop
jne
fwait
add
push
in
sbb
fstl
ljmp
adc
jg
xor
mov
add
cs
adc
jmp
xchg
adc
mov
iret
mov
mov
mov
aas
mov
cmp
inc
push
xchg
aad
lods
xchg
xor
push
pop
inc
mov
mov
jp
iret
xchg
jge
icebp
mov
pop
divb
pop
pop
lahf
xchg
popa
stos
arpl
bswap
loopne
int3
inc
mov
subl
hlt
ja
sub
js
pop
mov
or
cmpsl
jbe
xor
mov
dec
aas
jbe
xor
mov
mov
pop
mov
fldt
xchg
mov
movsl
mov
mov
pusha
sub
xchg
arpl
cwtl
sub
rorl
pop
lahf
lcall
mov
pop
jo
sbb
nop
dec
mov
pop
cmc
or
insb
push
jo
sub
js
insb
pop
xchg
fldt
add
ljmp
sub
adc
pushf
fisubs
push
popf
adc
jbe
xor
xchg
fnstenv
mov
repnz
pop
lock
data16
shrb
add
stc
call
mov
dec
pop
xor
jo
xchg
pop
pop
insb
push
mov
int
enter
enter
mov
and
mov
jmp
pop
add
xchg
mov
jle
mov
aaa
in
mov
inc
push
xchg
xchg
test
les
jne
sub
dec
fldcw
cs
dec
out
cs
dec
sub
sti
fimuls
sub
mov
ds
jae
int3
les
jne
cmc
xchg
addl
imul
inc
les
cld
mov
xlat
fs
pop
dec
cmp
sub
xchg
lahf
sbb
notl
mov
jns
xchg
push
or
mov
push
mov
out
lcall
sti
out
rolb
jnp
idiv
pushf
call
xor
int3
stos
jecxz
adc
loopne
in
loope
out
push
lahf
jbe
adc
xlat
iret
mov
cs
popf
dec
jge
fmull
loop
and
mov
adcb
lret
push
aad
es
stos
jmp
adc
cmc
dec
pop
insb
mov
inc
movsl
mov
jae
outsb
inc
outsl
dec
fmul
imul
or
jg
insl
loopne
pop
inc
mov
cltd
sbb
das
in
push
push
dec
push
mov
cmp
fstpl
fists
out
adc
mov
fsqrt
aam
fwait
jp
inc
out
daa
imul
jg
pop
or
mov
add
bnd
add
dec
push
mov
xor
pop
push
lds
inc
mov
dec
mov
rclb
cmp
push
scas
adc
pusha
mov
jae
imul
jg
pop
gs
icebp
rcrl
mov
jno
lret
mov
cmp
jno
add
dec
push
push
les
sbb
aad
mov
sahf
call
jbe
cmc
push
icebp
out
cmp
icebp
repz
ret
add
test
mov
sub
push
push
out
sbb
pop
scas
adc
arpl
jg
pop
fs
push
add
mov
push
test
daa
pusha
mov
sahf
pop
jmp
into
ret
movsb
call
or
dec
xlat
xor
inc
icebp
vprotb
mov
jae
fildll
add
mov
ljmp
mov
xchg
outsl
xor
mov
movsl
pop
dec
xchg
imul
std
push
iret
jge
fwait
cmp
push
out
jge
or
mov
xchg
mov
cmp
and
outsl
sbb
pushl
sbb
pop
insb
ret
cmp
in
sbb
sarb
jae
stos
mov
cwtl
cs
jg
pusha
adc
outsb
ja
test
pop
js
call
dec
loope
gs
aam
out
xor
dec
roll
jp
push
int
idiv
movsl
cmc
loopne
dec
repnz
xchg
adc
dec
cmc
cmp
dec
mov
xor
mov
mov
inc
cmpsl
mov
sub
popf
insb
cs
adc
jae
stos
jae
jae
sbb
or
in
mov
dec
rcll
pop
inc
add
scas
bswap
adc
repz
lea
xorl
aad
xor
aam
pop
mov
adc
sub
mov
jmp
sub
int3
push
rclb
aam
insl
fs
adc
push
into
add
in
fists
inc
aad
sub
jp
sti
jecxz
xchg
jno
lods
arpl
mov
mov
jbe
xor
push
mov
pop
cmp
cs
mov
mov
leave
pop
mov
out
mov
out
mov
jmp
popf
outsb
icebp
cmp
test
mov
or
scas
ljmp
psllw
sbb
movsl
insl
pop
mov
out
insl
adc
mov
sub
pop
cs
ror
sbb
inc
sub
adc
mov
cli
cld
jge
push
mov
pop
xor
pop
das
xor
mov
enter
xor
loope
jecxz
test
das
mov
push
pop
test
jae
std
push
xchg
mov
out
fidivrs
jecxz
arpl
cli
pop
mov
xchg
outsl
outsl
cli
mov
cmc
insb
fisubrl
mov
mov
cmp
jmp
jge
imul
cmpsl
mov
test
inc
popf
xchg
lret
push
rcr
and
lds
sbb
mov
sbb
incb
xor
popf
pushw
fisttpll
cltd
enter
jne
sub
xchg
cli
pop
mov
pop
notb
pop
aas
and
addr16
das
pop
scas
test
xor
leave
mov
xchg
dec
pusha
lock
das
mov
imul
insb
mov
mov
lcall
cmpb
adc
push
sti
lret
adc
lods
mov
cmp
push
ret
push
jae
frstor
or
clc
das
mov
popa
scas
js
jmp
adc
fldt
imul
loopne
mov
sbb
in
dec
cld
inc
xor
mov
jle
pop
loop
mov
sbb
or
lret
adc
add
xor
mov
add
cmpb
mov
test
inc
mov
imul
into
fwait
adc
cmovp
inc
or
or
scas
scas
inc
push
xchg
cltd
and
cld
xorl
ljmp
mov
jecxz
or
stc
push
and
cmp
sub
out
mov
ret
pusha
xor
aad
loopne
jp
pop
add
mov
lahf
mov
call
adc
pop
cmc
loopne
xor
xchg
xor
pop
loopne
push
push
xor
or
jmp
or
push
nop
sbb
fists
pop
jae
or
imul
mov
jmp
adc
jmp
mov
ss
add
sbb
or
loope
lret
lods
dec
lret
jecxz
insl
js
mov
pusha
sbb
inc
sbb
jae
cmp
pop
mov
in
cmp
xchg
dec
hlt
dec
sub
or
cs
or
cmp
lcall
inc
mov
push
movsb
push
push
dec
out
and
out
filds
adc
loop
pop
jmp
stc
loope
adc
ror
mov
mov
sub
lea
aaa
aad
cld
inc
mov
dec
or
xchg
xor
jg
out
pop
fwait
push
or
xchg
clc
mov
jmp
mov
jge
dec
mov
mov
mov
inc
loope
outsb
adc
mov
or
jmp
mov
loop
dec
xchg
or
sahf
mov
stc
sub
mov
imul
adc
and
pop
inc
lea
hlt
pusha
sbb
movsb
jmp
xor
xor
fnsave
sbb
inc
pop
lahf
push
scas
ss
mov
in
mov
fwait
nop
xor
lds
in
add
adc
dec
pop
data16
cmp
rcrl
rorb
mov
int3
fidivl
mov
les
pop
or
stos
mov
and
xor
jnp
jae
lock
mov
dec
adc
mov
inc
mov
mov
xchg
mov
sahf
negb
jmp
outsl
ljmp
loope
jb
cli
lret
dec
mov
pop
mov
es
fnstcw
pop
ljmp
mov
shll
or
jmp
fs
std
sbb
decb
aam
int
loope
xor
addr16
fistps
push
incl
pop
mov
cmpsb
in
stc
xchg
sbb
push
lcall
cs
sub
mov
xchg
pop
sbb
aad
mov
sub
add
inc
lcall
je
xchg
aaa
jno
ret
jmp
cld
mov
in
inc
xor
pop
adc
dec
add
sbb
sub
test
mov
icebp
xor
lret
repz
jecxz
mov
push
mov
repz
and
push
or
mov
jmp
push
lahf
ret
out
out
loopne
repnz
stos
add
cld
mov
inc
das
shl
dec
pop
lahf
enter
xor
push
jmp
xorb
dec
push
shll
scas
xlat
loop
adc
mov
aas
xchg
push
test
mov
movb
ret
add
mov
inc
sub
cld
mov
mov
fidivl
mov
xchg
xchg
or
fdivrl
loope
jae
cmp
xlat
imul
sbbl
push
lods
fiadds
scas
xor
mov
inc
push
mov
insb
mov
rolb
mov
xchg
fisubs
jbe
dec
fmuls
sbbb
mov
jbe
fldenv
mov
movsb
in
bound
shrb
mov
imul
adc
jl
and
push
pop
jns
dec
int3
xchg
movsl
orb
push
xchg
jge
hlt
cmc
pop
fsubs
je
pusha
jl
outsl
sbb
mov
push
adc
aad
pop
push
xlat
je
xor
sub
sub
fildll
mov
dec
sub
mov
push
into
ss
jne
mov
cld
movsw
data16
loopne
andl
and
lret
cli
mov
mov
mov
lea
test
out
xchg
dec
or
add
inc
push
mov
ret
xchg
push
add
inc
loope
out
clc
sbb
sti
add
popa
push
and
sti
adc
mov
fmuls
xchg
std
ficomps
mov
ljmp
cs
loopne
add
add
pop
pop
push
jae
fdivl
add
iret
repz
popf
insb
sbb
outsl
lcall
or
mov
xor
mov
add
jno
gs
push
sbb
jp
mov
icebp
cmp
shrl
push
outsl
mov
out
mov
mov
fdivrs
iret
scas
test
jl
push
mov
push
ss
jne
cmp
sbb
mov
stc
sbb
pop
add
leave
jb
push
or
pop
cs
cmc
je
das
push
mov
jb
jmp
cmp
sbb
out
aad
shrb
arpl
and
aad
dec
call
ja
icebp
test
sbb
adc
out
stos
pop
dec
jno
es
je
cmpl
shrl
xchg
sbb
and
sub
cmp
mov
sub
sbb
or
daa
je
ja
xor
rcrl
xchg
das
adc
pop
popf
push
shlb
test
rcrb
mov
sbb
dec
push
add
pusha
adc
mov
dec
mov
xchg
mov
add
jg
ret
test
sub
inc
xlat
jl
pushf
leave
sub
xchg
test
add
outsl
mov
cs
mov
push
leave
test
daa
sbb
jmp
stos
mov
addr16
dec
fstp
xchg
jo
jge
fs
lahf
in
ret
movsl
mov
btr
daa
ja
inc
sub
notl
mov
je
call
mov
mov
mov
xchg
inc
imul
xchg
fs
lods
jae
out
inc
sbb
and
lds
out
jo
push
shll
sub
inc
fidivrs
pop
mov
test
xchg
movsb
adc
imul
dec
jl
or
add
adc
jl
fsub
inc
clc
dec
rcrb
into
hlt
scas
ret
mov
adc
lcall
xor
mov
lahf
test
dec
daa
stos
leave
popf
fs
in
push
in
icebp
rcr
inc
mov
dec
mov
pop
fwait
pop
sahf
add
add
add
mov
pushf
ret
mov
push
repz
jb
stos
xchg
cmp
inc
rcl
aad
jo
pop
jbe
ret
icebp
in
inc
fwait
sbb
inc
cwtl
into
sar
mov
sbb
push
test
rorb
sbbb
movsb
pop
cmp
lock
mov
mov
jno
fs
repnz
cs
adcb
jbe
movsl
xchg
sub
out
add
into
imul
movnti
pushf
jb
cmp
outsb
sbb
mull
jl
popa
jns
jno
mov
and
xchg
lret
rep
scas
inc
insl
popa
mov
pop
mov
cmp
test
pushf
dec
add
ljmp
jmp
mov
call
mov
int3
les
or
dec
vpcmpeqw
insb
dec
mov
mul
xchg
loop
jl
xor
cltd
scas
out
es
pop
mov
subl
das
inc
jmp
push
popf
cmp
sarb
mov
hlt
cwtl
and
sub
jae
rcrb
lods
mov
pop
hlt
inc
js
xchg
push
jmp
sahf
fcmovnbe
push
add
les
pop
inc
in
adc
and
jg
mov
in
ret
cltd
sub
pop
dec
cmp
or
outsb
or
push
jne
or
icebp
inc
mov
repnz
pop
repz
sbb
in
push
or
mov
cmc
dec
lds
inc
push
out
fcoml
add
or
adc
push
mov
in
xor
mov
je
mov
push
pop
ja
inc
je
mov
cld
add
xchg
pushf
sti
bound
xchg
shlb
mov
push
or
xchg
and
scas
jecxz
adc
aaa
jp
mov
pop
adc
mov
push
cmpsl
fsubl
cmp
nop
add
cs
mov
pop
jp
data16
push
cli
shrb
ss
add
mov
cmp
aad
or
inc
jno
mov
push
sbb
test
les
pop
push
loop
jmp
jmp
push
clc
scas
dec
mov
pusha
jae
jbe
sbb
std
xchg
push
out
or
clc
imul
pop
dec
fnstcw
mov
mov
cmp
mov
mov
imul
outsl
lcall
mov
repnz
psllq
push
roll
jmp
pop
clc
imul
data16
mov
xchg
adc
fcomi
push
testb
add
mov
sbb
inc
aad
sbb
or
inc
lret
sbb
inc
rcrb
dec
shrl
mov
fs
mov
push
add
es
imul
outsl
mov
fnstenv
or
loopne
xchg
imul
lret
push
push
test
in
loop
xlat
mov
out
cli
dec
xchg
jg
push
and
jle
mov
mov
lret
leave
fsubl
cli
or
dec
jecxz
iret
in
bound
jb
aam
cmp
mov
push
loope
dec
testb
rcrl
or
add
and
rcr
lret
incl
mov
daa
not
jno
mov
popl
add
pop
cmp
mov
sbb
cmp
sub
xor
dec
outsb
mov
gs
mov
add
cmc
mov
clc
repnz
or
andb
fidivrs
inc
ljmp
int3
mov
or
xchg
repz
push
and
or
fisttps
sbbl
in
jge
inc
js
fisubrs
dec
lock
adc
or
scas
mov
pusha
xor
aad
mov
add
ds
addl
ficoms
inc
push
out
scas
int
cmp
and
mov
mov
dec
fstpt
jl
xchg
dec
cmc
cmpsl
ret
mov
add
dec
jmp
repnz
gs
push
outsb
dec
mov
psubsw
push
adc
int3
dec
iret
int
dec
je
mov
mov
cltd
cmp
dec
cmc
mov
adc
mov
cmp
daa
xchg
adc
pop
loop
xor
mov
mov
jmp
mov
mov
mov
dec
mov
mov
mov
mov
sti
inc
sub
dec
es
test
sub
cmp
subl
mov
ret
popf
xchg
add
cli
pop
mov
jo
or
push
rep
loope
iret
push
aaa
cmp
pop
cmovns
mov
repz
fs
daa
xorb
lock
sbb
xchg
in
mov
xchg
push
fistps
xchg
lock
clc
or
xor
popa
add
mov
and
int3
je
push
sub
das
cli
adc
pop
shrb
lods
xchg
mov
mov
ret
jb
cwtl
fcomps
adc
enter
ljmp
stc
stos
add
mov
fildll
pop
lret
shrl
mov
pop
das
mov
gs
inc
into
mov
mov
in
pop
mov
jnp
scas
adc
stos
pop
xchg
push
shlb
adc
jns
lea
dec
ss
fisubl
sub
mov
xor
push
xorb
jp
out
lods
push
lock
cmp
int3
jno
xchg
mov
inc
in
stos
dec
outsb
xor
mov
xor
inc
scas
jo
push
dec
scas
movsb
and
mov
sub
adc
stc
lahf
jno
sbb
loopne
jo
push
pop
rcrl
repz
ds
push
data16
xlat
push
loopne
cli
test
imul
fldl
fbstp
adc
jns
or
scas
xor
mov
jmp
daa
lret
leave
mov
icebp
push
mov
inc
aam
in
cmc
push
xor
mov
fwait
adc
movsl
sub
pop
pop
xchg
push
fwait
mov
push
lahf
sbb
and
jmp
negb
push
into
mov
xorl
std
mov
add
sbb
shlb
add
lahf
push
xchg
and
rorl
mov
and
enter
mov
sub
pmullw
rclb
mov
sbb
and
pop
jae
and
inc
sbb
and
add
lock
and
pop
fldcw
enter
mov
subl
sarl
adc
imul
jb
adc
and
pop
mov
ss
mov
adcl
aad
xlat
sti
mov
add
or
mov
sub
push
adc
push
arpl
sub
mov
and
xorl
pop
xlat
xchg
mov
add
in
test
cmpsb
mov
mov
sahf
unpcklps
push
pop
mov
pop
outsl
adc
adc
mov
xorl
aad
xlat
xchg
test
shlb
cmp
jmp
pop
sbb
and
cmp
dec
mov
xor
aad
adc
mov
pop
lcall
and
rorl
sahf
pop
loop
into
fadd
scas
mov
pushf
push
ret
adcb
or
xchg
in
xchg
cli
mov
pusha
or
cmp
push
push
imul
sub
cmp
mov
cltd
call
sub
scas
rolb
push
divl
repz
sub
popf
call
or
call
jnp
fwait
pushf
ljmp
clc
sahf
jne
mov
call
loope
and
cmc
or
jecxz
or
flds
inc
std
push
movsb
and
out
icebp
in
push
in
sbb
jmp
pop
cwtl
ret
in
adc
inc
push
es
out
fdivl
inc
mov
xchg
jb
adc
out
out
gs
push
xchg
insb
adc
xchg
add
jns
xchg
out
mov
push
sar
ret
sti
dec
xlat
imul
adc
imul
dec
hlt
insb
in
inc
inc
ret
ss
loopne
sub
mov
shrl
orl
push
mov
adc
testb
jne
fnstsw
imul
test
mov
xor
aas
push
or
inc
xchg
cli
mov
mov
fsubrs
les
shll
mov
pop
mov
adc
push
mov
sbb
and
int
loopne
icebp
push
clc
mov
addl
aad
xlat
jecxz
mov
rorl
fdivl
sbb
ret
adc
push
fstpt
mov
pop
push
imul
popf
nop
pusha
mov
fcomps
sbb
mov
jo
add
push
jnp
pop
pop
rol
dec
icebp
outsl
and
xchg
movsb
jb
rclb
test
cltd
sbb
xchg
mov
roll
sub
and
test
mov
push
mov
shrl
leave
and
pop
icebp
push
mov
subl
xor
sahf
inc
and
xlat
mov
add
xchg
add
movsl
outsl
mov
xchg
sbbb
jns
movsl
stos
mov
xor
mov
mov
fwait
into
pop
leave
pop
lret
cmp
mov
sub
in
ss
and
mov
and
mov
fistps
mov
test
push
jmp
or
lahf
je
popa
dec
mov
in
inc
insl
pop
xchg
mov
sahf
push
sub
xchg
jne
push
ds
sti
int3
adc
xlat
bsr
sbb
fucomp
dec
lcall
pop
adc
incl
fs
pushf
aad
es
dec
cld
sbb
je
add
add
pop
xchg
and
mov
cmc
push
xlat
pop
cmp
xlat
push
pop
fistl
insb
push
push
pushf
mov
dec
cmpsb
aas
or
xchg
dec
rolb
and
cmp
bound
mov
and
mov
pusha
jb
mov
lea
rorb
jle
hlt
adc
scas
cmp
loop
imul
stc
sti
xchg
mov
add
or
std
ja
loope
xchg
lret
ss
and
sub
orl
mov
popl
stos
lret
shlb
xchg
pop
ret
inc
sbb
into
pop
or
mov
inc
mov
dec
mov
lods
pop
pop
int3
jae
popf
and
sarl
dec
cwtl
dec
loope
loop
aad
arpl
aad
arpl
aad
sarb
mov
das
xchg
test
repnz
mov
jbe
hlt
and
ror
mov
and
mov
out
mov
mov
jg
iret
cmc
call
cmp
sub
adc
sti
dec
jns
sbb
or
sahf
outsb
scas
andb
cmp
jge
adc
pop
mov
jbe
lcall
pusha
sar
inc
pushl
and
dec
sbb
test
enter
in
je
cmp
lock
shll
data16
cmp
pop
movsb
add
dec
dec
adc
inc
repnz
pop
and
xchg
enter
jne
xchg
les
mov
shl
dec
jecxz
mov
lock
pop
inc
out
and
dec
and
lods
pop
sbb
mov
fmul
nop
cld
jmp
pop
xchg
pop
jo
popa
cmp
out
icebp
xchg
mov
sti
ja
les
add
dec
pop
aad
add
dec
cmc
jo
inc
in
jmp
int
mov
cmc
clc
lock
cmp
cld
pop
jmp
out
mov
jge
add
mov
mov
loopne
pop
std
mov
fdivrl
movsl
mov
loop
shr
adcb
inc
ja
mov
pop
and
adc
js
xchg
not
lds
lahf
bound
aam
fucom
pusha
mov
inc
jne
test
pop
sbb
mov
enter
pop
cmp
in
mov
pushf
das
jecxz
mov
popa
notb
mov
popf
mov
sbb
orl
mov
ret
add
cmp
cmc
je
push
movsl
cmp
loop
pushf
jo
mov
sbb
imul
mov
or
clc
inc
out
iret
xor
xchg
sub
xchg
test
inc
mov
insb
jg
repnz
cs
out
std
cltd
lret
sbb
push
std
pop
adc
xchg
data16
mov
lods
cmp
leave
cmp
xchg
cld
sahf
dec
ret
push
ret
mov
push
add
les
xchg
cmp
mov
and
mov
ss
push
sbb
leave
in
outsb
cmc
jnp
or
xor
sub
or
push
mov
mov
lcall
mov
stos
mov
aam
clc
cmp
ret
pop
in
adc
and
inc
mov
push
inc
ret
sub
push
mov
xchg
jns
mov
add
pop
xlat
pop
mov
jae
sub
or
cmp
mov
aam
sbb
push
cmp
outsb
or
inc
insb
aas
ljmp
negl
xchg
lods
lods
mov
sbb
mov
arpl
loop
cltd
cli
adcl
dec
jbe
sub
sbb
out
push
sbb
sub
add
jge
mov
leave
mov
or
adc
in
mov
xor
mov
out
mov
addr16
xor
lods
xor
je
pop
repz
push
xor
sahf
adc
int3
imul
pop
sub
movsb
pusha
iret
fsubrs
clc
jg
mov
inc
stc
addr16
cli
insl
in
fldl2e
or
add
es
pushf
test
fisubs
ret
rorl
stos
shlb
inc
mov
rclb
sbb
sub
sbb
adc
mov
lret
lods
sahf
ljmp
push
notb
push
clc
scas
push
mov
test
das
mov
lahf
cmp
lahf
add
movsl
add
pop
lcall
into
fdivrp
push
jb
xchg
cmp
push
fxtract
lcall
or
mov
pop
inc
insb
in
xchg
xor
push
mov
mov
insl
aas
xchg
int3
mov
cld
sub
imul
scas
or
and
popf
jbe
int
lret
pop
cmc
lods
sbb
pop
dec
adc
cmp
push
xchg
loop
xorb
pop
arpl
mov
leave
xor
mov
push
mov
sub
dec
push
shl
outsl
je
ficomps
mov
mov
ljmp
lret
in
mov
popa
mov
cli
jl
cltd
insb
xchg
repz
repz
inc
push
arpl
inc
mov
pop
dec
add
and
popf
pusha
dec
xor
iret
inc
push
sub
mov
mov
adc
int
mov
add
leave
repz
cli
jmp
jp
loope
notb
scas
sub
dec
xchg
lods
sbb
mov
inc
sbb
movsb
xchg
repnz
cmp
add
pop
sbb
rcll
loop
add
repz
jne
testb
mov
push
iret
ret
or
jl
push
cmp
test
xchg
ja
sbb
lock
xor
scas
pop
push
ret
dec
xchg
pop
mov
les
out
inc
dec
and
iret
test
aad
xlat
mov
add
in
test
mov
dec
jne
insb
adc
and
pop
mov
xor
rcll
push
int3
jo
jg
and
push
cltd
inc
in
ret
pop
and
aaa
mov
jne
insb
daa
icebp
add
sub
sub
aad
or
or
cwtl
sub
movsl
bound
ror
cmp
fwait
enter
xor
xor
outsb
push
mov
xchg
jae
cld
cli
push
and
rcrb
jmp
push
rcll
sub
test
pusha
xor
test
xor
repz
mov
int3
rcrl
lret
adc
pushf
jae
or
out
adc
rcrb
mov
inc
mov
jge
lret
outsb
push
jne
sbb
xchg
inc
mov
sbb
mov
call
aas
popa
into
and
inc
or
cmpsb
jnp
fcoms
loop
push
cmpsb
lods
mov
popf
jl
andl
movsl
ljmp
idivb
mov
lds
pop
cmc
fadds
push
into
cld
cmp
push
push
push
bound
leave
sbb
in
xchg
imul
mov
stc
cmp
xlat
push
loop
cwtl
push
or
ds
repnz
jae
add
push
aad
mov
fdivl
hlt
inc
insl
cmpl
inc
clc
push
pop
mov
repz
or
andb
cmp
sahf
adc
dec
popf
xchg
xorb
hlt
negb
addl
push
stos
mov
test
ljmp
mov
loop
xchg
jp
fcompl
gs
ds
das
pop
loope
lds
stc
inc
add
ds
inc
inc
mov
adc
jp
xchg
jo
xor
icebp
mov
repz
shl
stos
popf
movsb
mov
stc
pop
mov
or
adc
push
clc
add
cmp
lds
in
mov
cmp
popf
aaa
test
out
sbb
sub
int3
js
ljmp
std
inc
jo
cmpsl
xchg
popf
lahf
iret
adc
mov
rcll
xor
cmp
pop
mov
push
mov
xor
adc
jl
stos
or
clc
mov
jecxz
out
std
int
xorl
stc
jo
loopne
cli
jae
mov
repnz
cwtl
or
mov
sbb
sub
loopne
in
lahf
test
cwtl
aad
das
push
fcomps
sti
inc
or
or
or
push
repnz
pop
mov
xchg
ds
push
pop
fs
xchg
pusha
or
jns
mov
es
test
daa
loopne
push
arpl
mov
sbb
mov
mov
xchg
sub
lock
mov
mov
cmpsb
jg
jbe
lock
push
cli
mov
aaa
jnp
and
int3
leave
loop
lds
jp
dec
xchg
jl
lret
out
je
mov
mov
cmpsl
add
mov
mov
mov
pushf
inc
lea
mov
jmp
insb
jge
jl
push
sub
outsb
pushl
mov
mov
cmp
mov
leave
mov
outsl
sbb
cmp
cmp
es
jne
stc
rorl
andb
lahf
jecxz
addr16
rcll
mov
sti
xor
out
addr16
in
sbb
outsb
mov
addr16
push
fdivrs
sbb
pusha
jl
sbb
cmp
mov
sarl
add
sub
insb
das
dec
sub
push
jbe
pop
leave
imul
mov
pop
push
daa
scas
xchg
xchg
cld
cmc
cmp
test
fldl
sub
mov
int3
leave
test
or
push
mov
das
add
and
jg,pt
call
xorb
xorl
cwtl
cs
lea
add
adc
xor
das
inc
fs
out
inc
iret
xchg
je
divl
mov
out
fisubrs
xchg
js
sbb
jns
daa
jle
out
shlb
xor
jae
cwtl
push
out
cltd
loopne
mov
mov
xor
sub
repz
fnsave
xchg
xor
jg
or
jb
cmc
sub
push
insb
aaa
xchg
jge
xorl
push
add
aaa
popa
push
inc
sti
mov
shlb
sti
stos
and
xchg
jge
ja
insb
adc
xor
sbb
movsb
push
xor
jns
xor
lcall
inc
push
mov
hlt
mov
jns
xor
mov
adc
sbb
pop
test
add
xor
pop
jae
xor
inc
int
enter
sbb
adc
xor
dec
push
rorl
lods
mov
loopne
xor
cmp
jno
jae
cwtl
aaa
lahf
lods
inc
mov
xchg
arpl
mov
jl
jne
ljmp
add
jl
ss
lock
sti
adc
jmp
fsts
dec
cmp
out
jp
js
fistpll
xor
nop
and
xchg
push
pop
mov
adc
fwait
sbb
jbe
sbb
lds
sbb
test
cs
movsb
add
push
mov
ret
sbb
test
stc
insb
cs
cmp
mov
std
adc
movb
xchg
add
sti
and
shlb
xor
jp
mov
mov
test
or
fbstp
inc
sbb
iret
pop
adc
mov
xor
jo
sub
js
in
xor
and
sbbl
and
lock
jle
mov
or
orl
aad
xlat
jne
sbb
je
adc
push
pop
xchg
je
lods
and
and
popa
imul
mov
andl
or
test
mov
xchg
adc
push
pop
mov
pop
pop
sbb
add
rol
adc
add
xlat
xchg
push
push
xchg
insb
push
push
stos
insb
inc
cmc
mov
or
and
lods
jg
imul
pop
pop
cmc
mov
shll
cld
push
sbb
sbb
inc
dec
cld
mov
jns
js
loope
mov
or
xor
push
sub
rorb
shl
mov
cmc
arpl
shl
add
daa
into
jo
push
in
mov
xchg
sub
rcrl
push
jo
std
pop
inc
add
dec
sbb
push
jge
sahf
dec
sbb
dec
cmp
call
adc
sbb
mov
lods
inc
bound
pushf
mov
add
imul
outsb
fdivrs
ja
xchg
pusha
adc
sar
pop
mov
test
mov
inc
ja
adc
mov
jns
ret
cmp
dec
xor
aaa
enter
xchg
sbb
int
imul
stos
xchg
insl
fists
push
inc
sbb
mov
push
mov
xchg
movsl
je
cli
adc
aam
mov
and
xchg
push
add
xchg
js
mov
push
xlat
sbb
jne
mov
cmp
mov
sbb
sahf
mov
push
mov
cmp
test
mov
arpl
jl
mov
mov
push
mov
rcll
adc
and
shlb
pop
cmp
add
mov
adc
test
cmpsl
imul
push
shll
test
jbe
and
js
mov
insl
mov
adc
sub
mov
lods
outsb
loop
shll
jno
sbb
pop
lock
push
test
loopne
dec
inc
push
push
lods
outsb
out
mov
sub
fsubrs
lret
mov
mov
adcl
xor
mov
bound
sbbb
push
add
mov
pop
inc
test
push
mov
frstor
mov
out
xchg
orb
pop
pop
mov
cmp
push
mov
jae
fucomip
icebp
fisubrs
xchg
in
inc
cmpsb
pop
cmc
push
fistps
mov
loopne
mov
orl
jbe
cmp
or
lods
cmp
jno
mov
or
mov
insl
dec
mov
xchg
jae
push
mov
jg
lods
mov
outsb
movsl
inc
out
hlt
mov
adc
test
fidivrs
fstp
push
hlt
aaa
xchg
aaa
push
lods
xchg
or
inc
inc
inc
ja
cmp
inc
mov
sub
int
dec
mov
add
int3
push
jno
inc
push
pop
xchg
push
call
xor
loop
xlat
outsb
sbb
clc
push
mov
jno
xlat
shll
call
jae
lcall
fldl
out
and
mov
lods
out
fs
rcr
frstor
fistps
push
fs
mov
fucom
addr16
roll
sub
shlb
pop
pop
pop
je
xchg
lods
loopne
stc
xor
and
adc
mov
das
or
xchg
sbb
xchg
push
mov
adc
lahf
cmp
mov
or
fwait
sbb
cwtl
pop
xchg
nop
ja
test
jg
hlt
pop
arpl
sub
lret
lods
stos
pop
repnz
fisubrl
cmp
jo
cmp
pop
ret
inc
push
push
xchg
push
addl
pusha
ja
and
scas
aaa
inc
repz
xlat
xchg
jo
xchg
and
arpl
stos
cmp
push
adc
and
adc
scas
frstor
push
fldenv
cmp
daa
pop
lds
adc
jl
mov
jge
in
cld
in
sbb
pop
rcl
cmp
fnstsw
xchg
das
incl
fldenv
push
fldcw
arpl
or
lahf
lahf
loopne
mov
pop
dec
repnz
repz
jae
jnp
ret
push
mov
pop
jmp
dec
xlat
xchg
mov
add
aad
or
mov
adc
push
ja
sub
jg
jne
mov
add
pop
aad
rolb
mov
sbb
xchg
add
sub
mov
lret
lock
out
lds
in
ljmp
xor
jg
mov
and
adcb
jl
cmp
jae
imul
outsl
andl
pop
cltd
sub
and
push
sbb
scas
adc
cmpsl
adc
out
loop
inc
outsl
pop
jge
inc
sub
or
arpl
jmp
mov
sub
ficomps
add
adc
test
nop
das
fistl
lahf
pusha
cs
add
mov
lret
mov
sub
xor
mov
mulb
insl
leave
xor
cli
rcl
lods
xor
mov
dec
mov
gs
or
dec
pop
out
mov
mov
jb
jno
mov
je
dec
xchg
es
cmp
ss
arpl
sbb
movsl
xchg
mov
insl
cs
mov
repz
pop
add
xor
insl
inc
adc
mov
dec
and
mov
test
lahf
roll
jge
daa
cmp
xchg
fstpt
push
xchg
sbb
add
fdivr
roll
cmp
mov
mov
xchg
fldl2t
inc
movb
fdivrs
push
sbbb
in
inc
dec
insb
cmp
jns
jge
add
inc
fnstsw
jmp
mov
cwtl
cmc
dec
adc
ja
inc
xor
pushf
test
out
inc
es
push
adc
lret
cmp
mov
frstor
dec
cli
sub
int3
inc
scas
test
add
jo
xchg
iret
cs
aas
push
fbstp
out
mov
xchg
aas
das
movsl
lods
sbb
ret
in
shr
push
xor
addb
movsb
jne
inc
cmp
xchg
mov
pushf
sbb
cld
pop
cmpsb
mov
mov
subb
jb
mov
outsb
push
lods
inc
jge
mov
test
int
js
xor
mov
mov
scas
push
leave
jge
adc
out
inc
leave
in
jge
popa
stos
xor
loope
adc
scas
jp
test
lods
and
adcl
fstp
xchg
mov
call
jb
jnp
lcall
sahf
inc
sub
mov
xor
movsb
xchg
fisubs
in
inc
fldenv
add
and
mov
andb
cmp
bound
add
mov
jle
xchg
in
scas
call
ds
mov
movsb
adc
jge
mov
adc
fildll
cltd
push
sbb
in
pop
fldt
xor
adc
mov
pop
jns
jno
pushf
in
stc
ret
data16
mov
in
and
lods
inc
repnz
pop
jge
sub
cmpb
rcr
mov
ja
mov
jmp
sbb
push
xor
xchg
adc
aas
and
cmp
mov
in
outsb
adc
data16
insb
pop
lds
xor
outsb
ret
es
mov
inc
add
jnp
mul
xor
fnstcw
jae
das
sbb
fcompl
add
mov
jnp
