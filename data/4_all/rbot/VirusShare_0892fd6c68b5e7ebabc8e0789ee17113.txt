nop
cli
mov
popa
jl
mov
lret
bound
stos
ret
jp
jno
cltd
sub
or
jb
dec
xchg
add
add
scas
mov
in
inc
test
ret
add
in
pop
push
les
addr16
sbb
adc
pusha
cmp
fiadds
inc
test
sub
stos
dec
ror
pop
sub
xchg
jne
sbb
icebp
pushf
icebp
pop
mov
out
jae
fs
in
push
loopne
aam
mov
jns
shll
push
xor
mov
dec
sbb
scas
int3
les
push
iret
out
mov
and
cmp
sbb
jns
loop
mov
xchg
mov
bound
and
dec
jecxz
out
push
jmp
dec
dec
adc
cmpsl
jns
out
sbb
adc
dec
mov
popf
xor
out
mov
xorl
or
stos
jle
flds
mov
das
mov
ret
xchg
xchg
into
xchg
cs
jp
mov
loop
xor
rolb
xlat
sbb
es
jl
fisttpl
lret
into
add
inc
or
lahf
jo
sbb
mov
sub
leave
popf
adc
iret
jne
shll
mov
shl
dec
cmp
jo
mov
loopne
add
xchg
add
test
cmp
mov
testl
and
xchg
mov
cmc
xchg
push
inc
cltd
cmp
dec
in
xchg
add
lds
stos
out
cmpsl
fmull
fld
pop
xchg
xchg
mov
movsl
adc
stos
adc
mov
mov
int3
ja
xorl
dec
pop
mov
push
popa
and
sub
and
int3
add
sar
mov
daa
pop
aaa
data16
dec
xor
outsb
iret
sub
mov
int3
lock
mov
aad
enter
lcall
stc
mov
out
cli
pop
push
fsubrs
xchg
or
or
lods
sub
in
mov
jb
outsb
sbb
inc
in
pop
jbe
pop
adc
je
pop
test
mov
jg
gs
in
push
fwait
xor
sub
int
mov
xchg
popf
fwait
mull
push
mov
outsb
mov
xor
adc
pop
adc
outsl
out
sahf
mov
stos
aas
outsl
sub
xor
mov
jg
xor
xchg
stos
das
pop
mov
add
lock
repz
ja
lods
stos
not
cltd
aas
fsts
ret
xlat
xchg
mov
insl
stos
das
ror
pop
out
lahf
jnp
mov
fisubrs
mov
push
inc
fwait
aaa
pop
ret
pusha
mov
ja
xor
pop
nop
mov
insb
cmp
dec
pop
jge
mov
enter
fnstcw
cli
mov
xchg
or
add
cmpsl
or
adc
dec
pop
and
xor
pop
ret
ret
add
outsb
mov
sbb
inc
mov
outsb
mov
cmpsb
mov
sahf
shlb
cmp
pop
xchg
cmpsb
addr16
iret
jmp
adc
mov
cmp
jns
dec
and
das
addr16
xor
ret
stc
pusha
daa
xchg
xchg
xor
jne
fisttps
push
inc
inc
pop
inc
lods
lock
das
test
in
loope,pn
push
or
add
add
inc
lcall
push
ljmp
movsb
outsb
lods
dec
je
jb
bsr
out
jno
rcrb
imul
push
mov
xchg
aad
mov
nop
dec
push
adcb
cmp
out
inc
in
ds
ret
je
inc
call
mov
add
inc
fcomi
mov
rolb
or
and
out
xor
mulb
cmpsb
clc
mov
dec
inc
xor
pop
icebp
xor
jbe
or
test
cwtl
mov
and
mov
shlb
pop
sarb
stc
stos
enter
jl
fadd
in
sbb
mov
cmpsl
and
push
xchg
jno
movsl
iret
mov
xor
and
push
inc
repz
mov
ss
inc
dec
daa
lock
repz
rcrb
int3
inc
or
mov
push
pusha
add
dec
andb
cmp
pop
xchg
xor
inc
mov
mov
popa
add
nop
xchg
mov
js
push
into
cmp
inc
push
fstl
mov
insl
cltd
mov
sahf
mov
adc
aaa
lods
xchg
aaa
jb
pop
ret
pop
rol
dec
arpl
jge
xchg
cwtl
mov
sub
lock
in
mov
dec
dec
xchg
cmpsl
jb
je
daa
cmc
mov
push
fistpll
call
xchg
dec
mov
add
mov
and
imul
fiaddl
fldcw
pop
movsb
xchg
ret
sbb
divb
dec
outsb
sarb
xor
test
xchg
iret
pushf
and
push
jno
cmp
or
push
pop
int3
js
sbb
sbb
fsub
es
scas
in
xchg
addr16
cmp
repz
sbbb
repz
xchg
stc
jl
call
in
outsb
mov
xor
movb
fcomps
or
cli
clc
xlat
stc
cmpsl
aam
cmp
sbb
add
nop
cmp
push
lock
inc
jne
add
push
adc
push
pop
mov
faddl
sub
test
lcall
sahf
scas
nop
out
push
lea
jbe
fwait
ljmp
mov
mul
out
shlb
inc
sub
jb
jno
inc
ljmp
out
sub
or
push
push
fucom
mov
mov
stos
scas
aas
inc
out
xchg
ljmp
xor
lret
js
stos
push
or
jne
jns
or
gs
mov
lret
lret
push
push
fisubl
dec
dec
scas
xorl
aam
mov
push
test
je
je
sub
int3
or
test
cmp
outsb
loopne
enter
sbb
pop
jl
jmp
cli
cmpsb
or
pop
loopne
cmpsb
adc
dec
hlt
cld
xor
mov
fistl
subl
push
cld
pusha
aas
insb
add
fldl
fs
jge
pop
or
inc
ljmp
fldl
cmp
jmp
mov
clc
jecxz
xor
das
inc
cmp
cmpsb
mov
sub
mov
hlt
sub
imul
cltd
mov
sbb
pop
cmp
in
loopne
sbb
lea
loop
cmc
je
adc
add
lret
xor
in
daa
jge
inc
add
test
xor
insl
aad
es
and
jno
cmc
pusha
mov
notl
pop
or
mov
fwait
pop
xor
int3
or
cltd
test
cld
movsl
mov
subl
cmpb
jle
cmp
sbb
icebp
sbb
jbe
shll
or
jmp
jmp
fmulp
mov
fsubrs
stc
testl
mov
adc
jle
pop
ljmp
dec
pop
mov
pop
lret
sbb
pop
jbe
pop
sub
mov
mov
ret
test
mov
cld
xchg
popf
xorl
or
loope
xor
in
icebp
es
xor
mov
arpl
fsubl
add
loope
mov
inc
sbb
mov
pop
inc
orl
and
push
cmp
in
stc
js
cwtl
aas
test
test
or
push
cmpsl
aam
mov
outsb
cmpsl
push
xchg
xor
dec
int3
testl
pop
aaa
pop
stc
adc
lahf
inc
cmpsl
aad
test
cmp
hlt
icebp
push
movsl
add
xchg
mov
shlb
ss
sahf
mov
mul
cmpsb
sbbb
ljmp
cltd
pop
stc
push
push
rorb
jmp
xchg
stos
lret
sub
and
add
dec
xchg
add
mov
xchg
jl
cwtl
lahf
sbb
lock
or
mov
xor
adc
cmp
lea
pushf
add
jp
bound
jns
push
jns
rcll
push
xchg
mov
arpl
push
xor
lahf
mov
dec
fld
sbb
jle
out
fnstsw
imul
and
rcrb
aad
push
push
sub
or
outsb
dec
inc
dec
sbb
mov
dec
dec
jmp
dec
stos
dec
cmpsl
xor
arpl
jle
ror
not
es
push
mov
pop
mov
add
aam
and
ds
incb
movsl
sahf
push
push
dec
pop
pop
inc
pop
out
xchg
xchg
lret
and
jle
dec
jg
push
xchg
inc
adc
movsl
fwait
clc
or
inc
xchg
adc
mov
cld
addr16
test
sub
cmpl
cmpsl
in
mov
and
std
fldcw
fildl
pushf
enter
scas
in
pop
push
jl
lret
inc
push
hlt
push
jg
mov
sbb
stc
pop
mov
inc
adc
sub
and
sbb
jne
lea
bound
imul
outsb
cltd
mov
icebp
jmp
leave
lock
sti
fildl
outsb
jo
jno
jb
dec
mov
outsb
leave
lods
pop
xchg
dec
push
mov
nop
cs
test
sbb
das
xor
call
pusha
lods
lods
adc
mov
in
mov
in
cmp
gs
xchg
mov
xchg
add
mov
enter
sti
sbb
push
jbe
gs
les
insb
push
xchg
jno
xchg
ret
cmpsb
imul
nop
and
xor
pop
stos
xchg
push
sti
mov
in
add
add
rcr
sbb
and
test
jne
sbb
inc
xor
push
cmp
jns
or
loop
enter
inc
dec
call
hlt
pop
lret
sbb
das
xchg
scas
mov
lea
sub
sub
loope
rolb
pop
lret
jle
cmp
icebp
pop
mov
mov
outsb
mov
dec
bound
add
stos
fidivrs
xor
xor
loop
lods
mov
je
xchg
lds
clc
mov
icebp
mov
stos
and
pop
push
xchg
mov
sub
pop
inc
mov
rolb
iret
imull
stos
lret
stos
sub
cmp
xchg
xchg
fidivrl
cmc
and
pop
std
hlt
out
add
xchg
mov
icebp
inc
test
adc
out
mov
jae
sub
insl
mov
lret
stos
xchg
hlt
xchg
add
inc
jae
add
push
push
push
mov
xchg
xchg
shll
inc
test
call
push
jmp
sub
aad
mov
cmp
inc
enter
iret
pavgb
add
mov
mov
jo
in
bound
or
inc
sbb
ss
lcall
shlb
loope
aam
inc
lcall
mov
dec
imul
fisttpll
jp
jg
cltd
rorb
fmuls
jmp
clc
add
sti
sbb
xor
sbb
rclb
lea
idivl
fsubr
movsb
dec
push
nop
cmp
call
imul
mov
add
ss
decb
dec
jmp
in
data16
sahf
dec
jle
mov
ds
call
or
sahf
sub
xor
add
shl
fidivrs
mov
xchg
xor
sti
cmp
cmp
lcall
or
jo
int3
inc
push
push
ds
mov
pop
jg
add
jnp
inc
jg
scas
movsl
mov
fdivrs
in
gs
aad
sahf
add
push
xor
mov
negb
movsb
inc
xor
std
nop
mov
roll
sbb
repnz
mov
insb
inc
out
std
xor
jb
push
adcl
ljmp
fsubr
jae
lods
cld
jb
imul
and
test
vpinsrw
ss
pop
mov
popf
test
pop
incl
in
icebp
jns
out
sub
pop
mov
inc
in
jle
and
jnp
jmp
adc
pop
outsb
pop
jnp
or
das
jns
repz
icebp
sbb
imul
pusha
cmp
xchg
sub
xlat
inc
jge
frstor
inc
mov
mov
xorl
xor
dec
mov
lods
les
xor
add
jbe
adc
js
mov
ret
sbb
sub
mov
lea
imul
cmp
adc
mov
repnz
fs
lods
sbb
lea
leave
iret
iret
mov
jle
cmp
add
inc
out
xchg
cli
loopne
cmp
in
lock
hlt
les
insl
pop
aas
push
mov
push
cltd
loope
sbb
stc
push
adc
fistpl
jp
add
enter
aam
adc
mov
es
dec
ljmp
push
icebp
sub
loopne,pt
mov
fldl
lods
mov
outsb
out
insb
mov
jns
pop
int
pusha
cmp
pop
mov
repz
cmp
bound
insb
iret
int
test
sub
xor
js
insl
mov
xor
popa
lcall
insl
ret
inc
out
xorl
sbb
mov
push
or
add
xor
xor
out
and
adc
popf
daa
pop
arpl
aam
in
imul
pop
sbb
or
sti
flds
loopne
xchg
add
or
bound
shrl
cmp
lret
push
test
dec
fstpl
adc
clc
je
sub
mov
ja
enter
cmp
or
or
xchg
and
add
xchg
loop
leave
testb
inc
inc
js
dec
xor
loope
imul
fdivrl
outsb
xor
push
jbe
jae
icebp
xor
xor
lret
mov
dec
or
daa
out
or
push
push
jle
lods
mov
cmc
xchg
xchg
ss
add
in
imul
lahf
repz
pop
xchg
mov
push
and
xchg
mov
mov
jmp
push
test
das
aad
idivb
in
mov
sub
or
fsubr
cltd
sub
mov
add
xchg
push
mov
or
jle
out
pushf
call
jbe
out
and
out
int3
mov
aaa
in
test
pop
inc
mov
arpl
shll
sub
jecxz
test
stc
pop
mov
outsb
mov
icebp
jmp
xchg
add
and
sub
sub
movsb
mov
fmull
lods
xchg
repnz
mov
cld
hlt
dec
aad
inc
ss
fwait
xor
adc
xlat
jecxz
and
push
negb
sub
mov
mov
push
stos
out
push
or
dec
and
fwait
rcrl
lahf
shl
mov
imul
pop
mov
cmp
mov
dec
call
fs
mov
xchg
mov
adc
imul
cmp
sarb
and
jge
lret
stc
lcall
mov
jb
loope
stos
idivb
inc
sub
mov
rcll
or
mov
push
sbb
adc
adc
mov
gs
sbb
loop
add
dec
inc
sbb
add
jge
jl
dec
fstpt
pop
pusha
popf
jo
and
lods
loop
mov
ja
cmp
pop
frstor
push
and
push
pop
jbe
repz
scas
pop
popf
cmp
imul
push
jge
mov
shrb
inc
ds
cmp
pop
push
add
hlt
mov
jge
pusha
add
fistpl
sbb
pop
or
and
les
or
jmp
pop
imul
out
daa
adc
rcrl
inc
or
ret
add
mov
add
add
fwait
xchg
je
fwait
lock
fwait
cmp
outsb
sbb
sub
xchg
mov
xorl
lret
pop
movsl
inc
insb
sbbl
test
cmc
aam
ljmp
mov
pop
dec
cwtl
mov
test
jb
scas
and
jge
sahf
call
push
ss
les
and
out
popf
dec
loop
sbb
cmp
insl
aam
push
fcoml
movsb
or
sbb
jne
xchg
jge
jmp
xchg
insl
mov
shll
sub
aas
ffree
dec
xor
testb
push
xlat
add
sub
divb
pop
xlat
xchg
sbbb
dec
cs
cltd
pop
fdivrl
je
inc
stos
clc
pop
ss
insb
ret
mov
pop
mov
dec
cltd
lahf
xor
mov
daa
sarl
mov
inc
mov
sub
out
decb
dec
testb
jle
roll
jbe
aas
stc
dec
stos
lcall
ret
daa
sbb
mov
and
xchg
pop
div
push
test
fsubrs
mov
in
sbb
xor
clc
mov
mov
faddl
lret
mov
dec
sbb
loopne
pushw
rcrb
inc
fisubl
addr16
lods
movsl
out
mov
test
adc
clc
cmp
jnp
imul
imul
xchg
mov
fbstp
xchg
xor
std
or
sbb
pop
adc
cs
xchg
pop
std
int
mov
js
xlat
cld
test
lods
repnz
lods
add
mov
aam
adc
ds
sub
lret
cmpsl
sti
pop
xchg
xchg
out
repz
pop
mov
movsb
rorl
jge
aam
dec
mov
cmp
shrb
dec
in
int
jns
mov
jae
mov
scas
pop
and
cmpb
lret
jns
lock
ret
or
in
aad
fcomps
mov
cmp
add
imul
and
cmp
sahf
ds
cld
cmp
mov
out
test
mov
push
jp
mov
xlat
mov
enter
sbbb
push
cld
rcr
inc
mov
push
arpl
dec
xchg
loopne
mov
xor
ljmp
pop
pop
lret
mov
imul
ss
mov
jmp
or
out
cmp
jo
into
jae
and
les
clc
fwait
daa
inc
mov
sbb
in
int3
and
mov
sbb
nop
xor
icebp
vrcpss
in
pop
stos
loop
mov
mov
movsb
cmpl
sbb
pop
cmpsl
sahf
loopne
fxch
int
movsb
cmpsl
adc
mov
repnz
stc
pop
lret
je
lret
mov
sahf
inc
add
pop
shll
lret
mov
inc
mov
adc
movsb
add
popa
lea
sahf
mov
jp
bound
mov
jp
ljmp
cwtl
pushf
in
pop
mov
mov
xchg
xchg
aas
xor
mov
dec
xor
mov
daa
mov
mov
xlat
in
ret
jne
negl
scas
jnp
cmp
loopne
or
sub
leave
push
inc
jbe
xor
mov
inc
jae
outsl
ja
cltd
jne
xor
ret
pop
inc
js
mov
fs
and
pop
and
push
shll
lahf
pushf
jle
adc
into
sub
sbb
mov
cmp
shl
test
sub
mov
or
jnp
mov
aad
outsb
sub
mov
pop
arpl
jmp
pop
and
sub
cwtl
int3
inc
shlb
insl
push
test
rcll
cld
jmp
xchg
xchg
arpl
int3
jnp
xor
dec
das
cmp
add
pop
fs
sbb
rol
cltd
movsb
mov
sub
xchg
pop
adc
test
fists
leave
je
pop
push
pop
jne
add
dec
add
sti
and
xor
sub
mov
lahf
aas
orl
lea
jl
push
mov
inc
or
push
fildll
addb
push
mov
aam
js
jg
mov
pop
xlat
je
subl
insl
mov
mov
enter
sti
add
inc
inc
add
cmp
mov
repz
mov
mov
mov
mov
mov
outsb
lods
inc
and
int3
mov
xor
cld
es
xor
mov
jns
sbb
out
add
sti
mov
mov
inc
sub
aam
push
cmpsl
test
rcrb
cmp
mov
rcrl
sarl
inc
xchg
inc
js
mov
mov
cmpsb
test
mov
xchg
arpl
imul
pushf
and
sbb
icebp
push
push
out
mov
lods
fs
pop
ret
stc
pushl
mov
dec
push
mov
ja
leave
ja
popf
sbb
dec
mov
scas
or
repz
mov
decl
scas
mov
jg
adc
test
add
repnz
faddp
pop
adc
lods
adc
lahf
and
add
in
sbb
sub
fisubl
mov
xor
lds
in
pop
sub
lret
mov
ljmp
shrl
inc
in
jno
xchg
imul
push
sub
leave
call
xchg
int
jne
jns
and
les
sbb
mov
mov
mov
daa
data16
pop
sub
es
fsubl
mov
rol
dec
in
xchg
adc
neg
jno
push
or
mov
sub
inc
xchg
jp
test
fdivrl
pop
inc
pop
out
jl
push
into
ljmp
ljmp
dec
test
dec
mov
mov
mov
dec
push
cmp
inc
pusha
mov
pusha
fs
or
cmp
xor
mov
ss
sub
in
repnz
push
cli
ret
data16
adc
cmp
test
adc
mov
and
mov
mov
inc
movsl
add
and
adc
cwtl
dec
mov
mov
xchg
adc
jmp
rolb
mov
add
nop
data16
mov
shrb
lret
dec
xchg
push
cltd
add
and
mov
lea
loope
cmp
or
fnstsw
add
ret
push
loope
loopne
loopne
aad
push
adc
fs
dec
push
flds
lds
pop
and
movsb
aam
stos
pop
fisttps
aas
jp
stos
js
pop
jge
sahf
andl
rcrb
mov
outsb
push
jmp
idiv
add
sbb
inc
call
sub
mov
xchg
add
cwtl
cmpl
imul
scas
scas
lea
mov
cmpb
cli
jp
xor
jne
sub
or
push
or
sbb
sbb
out
xchg
movsb
jae
fs
sbb
xchg
les
ds
xor
mov
icebp
jl
outsb
sbb
idivb
dec
mov
out
shlb
clc
pop
push
not
jae
clc
add
fadds
sbb
adc
jns
lea
jecxz
cmpsb
push
aam
xlat
xor
push
pop
inc
mov
or
pusha
mov
inc
inc
movsb
jb
push
adc
jp
scas
cmp
lret
aas
push
in
add
sub
fisubrs
enter
mov
nop
inc
pusha
jbe
pop
fcomps
adc
pushf
and
mov
mov
xor
push
mov
and
pop
ja
ret
jmp
stos
jae
inc
xchg
lods
jmp
les
jno
pushl
testb
daa
lret
imul
popf
pop
jecxz
xchg
mov
xor
jp
xor
adc
cmp
sub
sub
xchg
mov
stos
lahf
dec
enter
aam
seta
add
xor
dec
iret
sbb
xchg
or
mov
ja
xor
movsbl
sub
sub
je
orb
mov
adc
lahf
cld
jne
clc
repnz
pop
jo
mov
jmp
cmpsl
jne
push
sarl
xchg
jo
ficoml
orb
add
ds
dec
ret
push
fdivrs
jns
sub
ds
fs
dec
sbb
xor
mov
mov
mov
cmpl
jle
pop
ss
test
sbb
cmp
daa
test
repz
add
fs
scas
or
loope
fcoml
cld
fsubrl
movsl
push
pop
loope
movb
dec
dec
fistl
push
sub
add
pop
scas
jp
cmp
inc
adc
inc
jb
push
cltd
outsb
jle
loopne
pusha
add
xchg
inc
sti
repnz
ja
and
enter
xor
xlat
sub
xor
mov
aas
mov
lock
push
push
jle
adc
leave
loop
xor
and
aad
xor
loopne
hlt
repz
addl
in
jge
cs
mov
jle
pop
sbb
pop
aas
popa
mov
add
and
lret
sub
inc
fiadds
les
std
shrl
xchg
mov
ja
out
int
out
js
les
mov
jbe
das
cmc
add
or
imul
loope
enter
enter
jns
or
sbb
add
orb
lea
pop
mov
xchg
testb
dec
addb
sbb
and
mov
sub
movsb
sbb
push
popa
pop
out
pop
je
mov
jg
push
je
pop
flds
pop
movsb
xlat
test
not
frstor
sbb
push
jb
dec
fs
push
out
daa
sti
sbb
inc
loopne
das
int3
frstor
and
add
inc
adc
daa
out
adc
aad
loope
call
pop
mov
sub
add
icebp
inc
inc
ds
sbb
fcmovne
fdiv
or
xchg
mov
shr
movsl
push
insl
subb
push
mov
add
imul
adc
fiaddl
out
or
adc
adc
popf
popf
push
jbe
into
rorb
xor
repz
mov
adc
xor
gs
xchg
iret
mov
roll
push
cmpsb
sub
xchg
mov
shll
cltd
in
pop
adc
xchg
jbe
lds
fstpl
inc
xchg
sub
mov
and
pusha
xor
and
ds
and
inc
jl
xchg
pop
cs
and
mov
int
rolb
js
inc
xor
inc
mov
mov
jge
insb
mov
insb
pushf
pop
and
add
cli
aam
pop
popf
fsubrs
cli
or
sub
movsl
jne
adc
jnp
xor
cli
adc
push
pop
inc
mov
jmp
mov
pusha
dec
pop
or
sub
js
or
call
arpl
stc
add
sti
orl
and
xlat
stc
cmp
xchg
bound
pop
jmp
jmp
inc
pop
jnp
aas
adc
out
pop
je
shlb
jns
pop
lods
jno
outsb
std
mov
inc
pop
cltd
out
mov
call
imul
xchg
int
in
sbb
ss
jbe
iret
cmp
cmc
fldenv
xor
fsubs
adc
push
repnz
sbb
jnp
lcall
xchg
cmp
iret
pop
in
inc
dec
mov
aad
and
ftst
inc
insb
mov
mov
movl
adc
test
in
andb
jnp
xchg
add
pop
sub
jbe
mov
test
ljmp
push
inc
clc
jecxz
sub
rcl
fxam
lock
push
lahf
push
outsl
stos
bound
icebp
jae
mov
mov
imul
insl
push
shll
mov
int
pop
test
mov
ret
cmp
or
std
shrb
jge
mov
inc
push
cld
dec
or
out
xor
push
repz
gs
mov
xchg
call
push
hlt
mov
imul
insl
sbb
popf
call
out
mov
aas
out
push
pushf
mov
push
pop
insb
scas
daa
cmp
inc
in
xchg
fsts
lahf
lret
xorb
lcall
add
jl
in
sub
aad
lods
mov
test
sbb
scas
add
xor
fwait
test
dec
mov
jns
inc
sub
nop
out
push
rorb
dec
add
pop
sarb
js
cmp
insb
ds
xchg
dec
lea
mov
sbb
sarl
xlat
ret
jns
fidivrs
popa
or
in
mov
and
and
enter
cmp
cld
mov
outsl
lods
and
inc
test
js
xchg
ret
lock
inc
jecxz
gs
cmp
mov
daa
push
pusha
jge
add
fcoml
mov
adc
fldenv
test
inc
xchg
in
adc
out
pop
push
icebp
mov
push
sub
aam
imul
cmpsl
out
xor
adc
sbb
movsb
add
int
cs
push
mov
mov
add
cmp
scas
ror
js
jo
leave
aaa
sbb
mov
loopne
repnz
fstps
adc
cmp
bound
mov
sub
xchg
in
mov
mov
xchg
dec
loope
repz
test
jp
nop
jb
and
mov
add
pop
inc
popa
cmp
xor
push
jl
test
in
mov
push
sti
jecxz
cli
outsb
outsl
mov
adc
jmp
test
sbb
and
mov
jmp
stc
mov
out
jp
mov
jle
lahf
pusha
fdivrs
sub
enter
or
ljmp
mov
test
std
inc
pop
je
xlat
fisubs
push
pop
dec
xchg
pop
into
adc
call
xchg
pop
jns
test
outsb
add
push
mov
mov
dec
fadds
or
mov
negl
inc
sbb
test
xor
jmp
fxch
xchg
movsb
inc
pop
add
ret
pop
xor
mov
scas
add
mov
jb
inc
inc
adc
mov
add
xchg
imul
neg
sets
vmovapd
stc
sub
call
inc
push
sarl
inc
xchg
rcr
fcmovnb
adc
sub
mov
jbe
add
repnz
in
loope
cmpl
aas
xchg
adc
push
xor
mov
cs
andl
mov
add
xchg
loopne
push
adcb
xorl
mov
mov
adc
sbb
inc
scas
pusha
dec
es
mov
dec
sti
inc
in
repz
push
addr16
mov
sbb
cmpsb
pop
popa
sub
dec
dec
movsb
xchg
rorb
dec
mov
std
xor
mov
or
add
and
cmpsl
popf
mov
push
xchg
repz
sti
cld
push
push
roll
push
and
xlat
dec
lock
mov
jecxz
shll
dec
insl
subl
mov
lods
mov
jae
mov
jmp
lret
mov
scas
rcr
and
mov
cld
les
xchg
mov
scas
out
lods
and
ljmp
pop
xor
push
sarl
mov
sarb
mov
cli
rcll
fnstenv
cmp
pop
jbe
stc
mov
inc
dec
mov
push
mov
push
add
in
cli
xor
xor
push
sbb
shr
inc
add
es
mov
jo
adc
lret
jmp
dec
xor
xchg
cmpsl
test
js
push
mov
sti
dec
push
add
ret
cmp
je
push
push
adc
rorb
repz
pop
jl
call
mov
sbb
cmp
adc
les
lret
jp
lods
sbbb
fsubrl
cmp
cmp
xor
pop
xor
fwait
and
aaa
leave
cmp
xor
and
int
lods
pushf
out
mov
mov
in
add
arpl
sbb
xchg
mov
shll
mov
jno
sbb
enter
imulb
pop
dec
push
stos
out
leave
push
jno
push
out
fsubl
or
dec
pop
sbb
cmc
add
sahf
or
js
mov
test
jle
mov
fwait
inc
xchg
and
jg
jns
test
mov
cmp
xchg
mov
or
mov
add
and
sub
or
lret
push
scas
push
push
sbb
daa
xchg
and
das
addr16
repz
scas
test
es
and
cwtl
inc
fucomip
add
stc
imul
in
stos
push
out
dec
das
mov
xchg
cmp
int
and
xor
pop
daa
gs
loope
mov
inc
xchg
adc
nop
cltd
mov
mov
into
mov
cmc
mov
inc
in
call
sarl
fs
cmp
cmp
insl
addr16
push
jmp
mov
mov
xor
popf
lods
mov
data16
loop
lods
js
daa
into
sbb
mov
in
jmp
mov
addr16
les
cs
gs
cmp
add
dec
shlb
inc
and
cmp
lahf
jl
ss
test
pop
xlat
dec
push
jnp
inc
jo
push
jo
repnz
inc
jb
daa
and
push
cwtl
add
dec
dec
in
mov
or
lds
outsl
lret
cltd
xchg
push
jne
ud1
pop
pop
jnp,pn
mov
push
mov
jg
neg
cs
fiadds
xchg
popa
jecxz
imul
xor
push
stos
adcl
das
stos
and
sti
test
pop
cmp
pusha
mov
ja
xor
add
sti
mov
clc
push
jmp
test
fimull
mov
jg
das
jne
mov
in
fwait
andb
sbb
adc
and
push
arpl
mov
dec
fcmovu
dec
lahf
addr16
jg
mov
pop
xor
sbb
and
and
loope
outsb
add
cld
inc
mov
push
xorb
scas
or
mov
cmpsb
push
pushf
dec
cltd
int3
sbb
adcl
decb
push
in
cltd
sbb
aas
fcoml
test
pop
push
inc
pop
sbb
test
lods
sbb
out
lods
mov
jnp
push
loope
or
bound
fidivrs
xor
inc
push
sbb
nop
cmp
xchg
add
sub
pop
push
pop
sarb
mov
sbb
cs
mov
inc
test
rcrb
push
mov
or
std
mov
xlat
movsl
push
jge
mov
xchg
sbb
jl
inc
jns
adc
push
dec
lret
inc
lods
xchg
jmp
xchg
xor
mov
xchg
lea
call
test
cs
icebp
sub
jg
lods
pop
ljmp
lahf
repz
imul
loope
stc
jb
push
jecxz
call
movmskps
jle
call
sahf
repnz
shll
imul
pop
sahf
mov
test
icebp
es
shr
mov
add
inc
cli
lahf
out
mov
imul
mov
cmpsl
add
loope
dec
mov
and
xor
or
xlat
pop
imul
es
pop
shr
push
jge
cmp
ret
adc
lret
adc
cli
add
popf
mov
mov
add
xor
jl
in
mov
outsb
mov
mov
jp
outsl
out
mov
test
mov
pop
dec
lock
xlat
movsb
cmpsb
push
add
fwait
pop
add
adc
test
push
clc
fstps
or
data16
loope
mov
stos
in
ja
icebp
cmp
call
dec
adc
xor
xor
xor
or
pusha
notl
cmp
inc
imul
cmp
jnp
xlat
pusha
in
push
xchg
sar
add
in
or
sti
lret
cmc
jne
aam
and
std
or
jl
es
push
int
dec
das
out
imul
push
mov
lret
aam
pop
das
stos
pop
pop
rcrl
lret
loop
xchg
mov
xchg
mov
cld
ret
imul
cwtl
lret
bound
cli
gs
mov
ficomps
ja
subl
or
xchg
hlt
scas
lahf
ret
iret
loope
call
in
fstps
inc
and
or
pop
loop
std
mov
and
pop
into
jg
jecxz
or
shll
ret
adc
mov
rclb
arpl
inc
push
loop
sub
lods
les
jno
add
cli
inc
loope
jg
dec
cld
lahf
push
mov
stc
je
adc
jbe
mov
pop
dec
stos
push
aam
mov
add
out
mov
cmp
mov
test
sbb
pop
lock
mov
jno
xor
dec
and
daa
jns
mov
sub
lret
dec
aad
sbb
pop
adc
add
rcl
call
xor
sbb
lods
dec
cld
xchg
push
ljmp
push
pop
push
rcll
lods
mov
and
pushf
rorb
inc
sbb
mov
cli
rol
ds
cmc
shl
jp
jns
cmc
push
or
cwtl
cmp
clc
scas
adc
sub
arpl
and
inc
fcompl
inc
push
inc
es
add
lods
push
testb
xchg
out
mov
stos
adc
addl
pop
ljmp
inc
movsb
xchg
test
mov
adc
lahf
pop
inc
cmpsl
jecxz
cmp
inc
xor
mov
mul
push
shrb
jns
and
and
cmc
mov
pusha
mov
or
cmp
hlt
jg
gs
fisubrs
sbb
mov
xor
repz
inc
pusha
and
push
arpl
sbb
mull
inc
loop
faddl
xlat
pop
loopne
push
inc
daa
loope
inc
lret
shrb
inc
flds
xlat
sub
xchg
push
and
cmp
iret
enter
nop
xor
mov
iret
pop
push
and
inc
pusha
adc
cld
push
lea
imul
stos
jmp
sti
xchg
outsb
or
pop
mov
cmp
xlat
rorb
das
cs
push
stos
or
je
and
loopne
aaa
sti
cltd
testl
flds
in
xor
push
lods
mov
push
jecxz
arpl
jne
enter
dec
sbb
std
and
stc
icebp
mov
pop
pop
mov
sub
lret
sbb
adc
mov
push
lahf
and
outsl
adc
inc
out
push
mov
cmp
mov
out
loope
dec
or
pop
enter
imul
lahf
sti
test
aaa
mov
or
xor
inc
dec
pushf
jmp
lods
cmp
pop
adc
add
rclb
insb
fdivrs
sub
xchg
les
test
mov
mov
int3
das
lds
adc
sbb
jl
adc
repnz
fiadds
jbe
cmp
mov
inc
clc
notl
aaa
push
je
inc
test
adc
xchg
xor
rcrl
mov
aaa
pop
cs
enter
insl
inc
add
xor
repz
push
mov
mov
loope
dec
inc
add
mov
loop
fisttpll
add
sbb
popa
out
pop
ret
and
sbb
leave
out
sub
cld
push
sarb
mov
xchg
ficompl
xchg
fs
inc
lods
push
dec
inc
fwait
daa
test
in
movsb
add
add
adc
inc
and
fadd
pop
repnz
mov
lds
test
xchg
push
rcll
mov
mov
ret
test
xlat
ljmp
sbb
shlb
out
das
add
mov
dec
push
xchg
cltd
mul
orb
push
in
xchg
xchg
add
pop
fidivl
lock
lret
daa
sbb
fwait
enter
cmp
add
cmc
scas
cmp
mov
dec
or
test
jne
clc
sub
dec
or
sbb
sub
mov
pop
push
xchg
xchg
xlat
or
xchg
jno
push
out
leave
fs
and
lods
adc
mov
adc
jns
inc
jmp
push
jae
fldl
or
jnp
sub
cmpl
out
inc
jae
f2xm1
rcll
in
sbb
aad
jge
cs
push
iret
and
imul
aas
outsb
aaa
xlat
cmpsl
ds
pop
push
or
mov
loopne
mov
jecxz
imul
mov
mov
xchg
adc
fstpl
shl
cmp
lea
mov
fbld
jmp
mov
inc
stos
push
rcll
inc
mov
mov
cmp
lods
xchg
sub
cs
addb
cld
or
test
ret
mov
jmp
cmp
add
cwtl
subb
adc
gs
jle
jle
push
jg
mov
xlat
mov
repz
int3
stos
fdivrl
out
cmp
inc
mov
lods
rol
dec
cmpsl
sbb
aaa
test
push
push
lods
jne
pusha
sahf
rcrb
sub
test
jae
imul
jge
je
into
pop
push
push
mov
jg
inc
xchg
gs
daa
pop
loopne
mov
cmp
stos
mov
clc
repnz
out
aam
dec
lcallw
stos
in
fldenv
mov
add
js
popf
jns
dec
mov
scas
cmp
inc
xor
outsb
das
sbb
jnp
scas
dec
dec
aas
daa
mov
int
lods
orb
adc
rcl
jb
pop
data16
das
cmpsl
fldenv
pop
arpl
or
mov
push
lock
sub
cmp
lds
sbb
or
adc
push
sub
adc
push
aas
je
cmp
xchg
fstl
test
sar
jae
xchg
sub
sbb
lods
ret
dec
adc
cmp
or
xchg
jge
leave
fsts
rorb
lea
sbb
cwtl
cmp
add
into
andb
push
not
push
lds
mov
adc
pop
add
clc
aad
pop
push
pop
stc
pop
dec
and
aam
pop
ds
push
push
push
or
mov
imul
pop
inc
jmp
pop
mov
andl
iret
sarl
icebp
addb
xsavec
lock
daa
jbe
mov
aad
ret
cmp
nop
push
dec
cmp
rcl
pop
stc
add
cmp
mov
sub
add
xchg
push
in
loopne
rorb
and
popa
fisubrl
dec
loopne
int
mov
fnsave
cmp
pop
sbb
popf
lds
jl
mov
dec
and
ljmp
push
xchg
pop
mov
mov
mov
imul
adc
or
in
out
loop
sbb
push
mov
nop
out
xor
xor
mov
test
lret
out
jmp
sub
mov
mov
andb
push
cld
jae
pop
loop
sbbl
mov
mov
dec
sarl
movsl
iret
lcall
add
and
shlb
in
bound
add
jp
xchg
jge
mov
lahf
sbb
mov
repz
in
inc
test
mov
push
pop
roll
add
test
ss
shl
pop
and
xor
into
mov
sarb
push
jb
nopl
dec
test
add
dec
fldcw
sub
sbb
adc
cmp
pop
aas
jbe
sti
aad
jno
lods
add
mov
mov
cmp
pop
pop
push
add
or
je
xor
test
std
mov
ds
or
out
and
mov
jg
daa
pop
sbb
leave
in
mov
std
fidivs
mov
outsl
fadds
andb
xchg
mov
gs
sbbb
ds
enter
into
add
fistps
dec
cltd
mov
clc
outsb
sbb
leave
push
xor
cmpb
push
add
pop
mov
or
mov
xchg
imul
pop
loopne
xchg
inc
mov
cs
test
mov
sub
lods
dec
cmp
dec
stos
pop
cmpsl
enter
scas
fcmovnb
mov
push
sti
pop
sbb
dec
xor
shlb
mov
pop
cmpb
and
scas
mov
mov
sub
lods
cmc
icebp
mov
aaa
or
and
leave
flds
push
dec
mov
inc
fcompl
addr16
test
dec
out
loop
lods
lock
ja
pop
int3
push
inc
or
popl
mov
je
mov
icebp
adc
icebp
pop
into
jp
xor
mov
sbb
addr16
inc
inc
pop
add
lea
dec
sbb
mov
enter
lods
ljmp
mov
enter
imul
push
mov
xchg
xlat
mov
pop
push
hlt
pop
sbb
sub
cmp
push
mov
mov
pop
pop
dec
int3
stos
andl
gs
xlat
int3
iret
add
ret
int
lods
sbb
pop
add
lods
sub
cmp
mov
push
jp
mov
mov
add
shl
bound
jg
sbb
xor
lods
das
lea
aam
dec
lea
xchg
xchg
movsb
jmp
cmc
push
jecxz
mov
popf
aam
push
cmp
lcall
xlat
fildll
loop
add
dec
push
jne
pop
call
jno
fcomps
push
adc
iret
mov
popf
cli
fwait
pop
xchg
clc
pop
imul
mov
mov
or
cld
pop
jle
test
cmp
xor
ja
gs
mov
lods
js
mov
pop
mov
push
iret
sbb
mov
in
sub
arpl
aas
lret
mov
loop
xchg
fldcw
shr
xorl
inc
fs
std
in
ja
outsl
push
scas
jnp
adc
mov
sbb
xor
push
push
test
push
ret
test
dec
fs
pop
aad
jmp
pushl
mov
sbb
adc
xchg
nop
fisubrs
pop
aam
addl
iret
sarb
insl
lock
xchg
add
pop
lcall
js
sti
dec
aad
sarb
mov
push
aas
dec
push
div
sti
add
mov
stos
inc
fdivs
xchg
jmp
arpl
xor
pop
mov
push
ds
mov
ss
es
gs
mov
test
in
push
aaa
jne
pushf
and
scas
aaa
cmp
cltd
sbb
fimull
fisubrl
lods
stos
sbb
vpunpckhwd
scas
test
jnp
mov
mov
xchg
arpl
ret
push
sbb
popf
lret
inc
test
fwait
mov
pop
cld
lock
fs
pop
adc
jo
lret
add
pop
in
jb
push
sub
out
ret
insb
add
insb
cwtl
cmp
fcompp
sbb
lods
pop
xchg
subl
mov
push
dec
mov
mov
adc
cmp
and
pop
imul
mov
bound
sbb
mov
xor
movsl
xchg
pop
inc
inc
push
pop
mov
jbe,pn
popa
outsb
mov
sub
fs
ss
test
add
pop
outsb
stos
cmpsl
mov
outsl
add
mov
mov
mov
cld
push
jo
outsl
adc
adc
jecxz
imull
cmpsl
xlat
or
dec
gs
test
cld
stos
pop
jmp
sbb
pop
movsl
dec
enter
ja
das
movl
faddl
inc
mov
inc
or
sub
test
or
rcrb
roll
mov
jne
das
popf
jp
mov
fmull
mov
fdiv
and
inc
or
push
into
loope
mov
or
xor
add
push
repnz
cld
dec
sub
add
pop
xchg
ljmp
pop
mov
pop
xor
xchg
pop
pop
cmp
fsubr
in
add
sub
mov
fcmovu
xchg
call
sub
add
xor
gs
xchg
adc
push
cmc
sub
int
add
icebp
fstl
mov
repz
and
pop
push
sbb
pop
outsb
ja
adc
test
fstl
dec
inc
or
cmp
sahf
jmp
mov
pop
btc
mov
or
cmpsl
testl
adc
daa
cmpsl
lcall
out
daa
fcompl
cmc
push
dec
aad
stos
inc
test
push
mov
fdiv
outsb
pop
add
das
mov
push
sbb
xchg
mov
mov
nop
icebp
and
cwtl
rorl
pop
clc
idivl
repz
inc
sbbl
xor
fstps
stc
imul
and
inc
xchg
sbb
adc
sbb
cmp
or
in
mov
dec
sbb
testl
mov
in
mov
ret
fidivrs
cmp
pop
mov
pusha
int3
or
in
or
std
lods
and
mov
cmp
test
adc
dec
call
je
pop
push
and
rol
or
sub
int3
mov
leave
mov
mov
xor
push
add
or
push
stos
call
jecxz
sbb
movsl
imul
pop
in
sub
enter
pop
push
dec
mov
mov
sbb
cwtl
mov
mov
sti
rsqrtps
clc
dec
out
imul
lock
mov
pop
js
test
adc
stc
or
jmp
ffreep
stc
out
lods
mov
lret
cwtl
into
jmp
inc
dec
mov
dec
int
push
fisttpll
xchg
leave
sbb
stos
xor
and
cmp
push
ret
mov
mov
pop
cmp
roll
jb
fsubs
pop
je
push
dec
jo,pn
sbb
jg
add
cmp
cmp
xchg
repnz
pop
jl
jno
ljmp
outsb
movsl
cs
jge
pop
pop
dec
add
mov
pop
addr16
xor
add
ljmp
mov
in
sbb
shrb
arpl
adc
test
stc
xor
fimull
pop
push
lcall
pop
sub
ljmp
sbbl
inc
fildll
or
int
or
lock
mov
inc
pop
inc
dec
mov
add
out
inc
inc
bound
out
imul
dec
jo
or
add
in
hlt
loop
cltd
push
clc
xor
and
or
test
inc
jp
adc
pusha
cs
jle
push
fsts
insb
pop
jmp
insb
int
ds
fsub
arpl
push
mov
and
mov
pop
mov
cmp
test
cltd
inc
ret
dec
adc
fistpl
rclb
pop
cmp
xchg
ja
xor
push
mov
adc
mov
push
dec
fdivrs
outsb
pop
jg
xor
sub
addb
das
dec
or
jne
add
mov
js
sahf
movsb
mov
mov
outsb
mov
sbb
and
inc
jecxz
lret
orl
outsb
mov
stc
lcall
outsl
mov
jne
iret
dec
jmp
sti
adc
and
jecxz
das
sub
lea
mov
mov
sbb
es
xchg
pop
sbbb
and
push
mov
mov
jl
xlat
sub
cltd
test
cmp
and
sbbb
repz
pop
xor
push
add
cli
nop
xchg
jb
jle
and
mov
loopne
scas
insl
fsts
loope
add
lods
fwait
xchg
loopne
jo
gs
fistps
jbe
jnp
cmp
out
int3
inc
arpl
add
fisttps
push
ret
shll
stos
dec
daa
and
popa
js
das
shll
mov
mov
mov
cli
insl
in
xor
lcall
push
sbb
bound
subb
and
sub
lea
cmp
loope
xor
mov
rcrl
cmp
push
mov
rol
call
lods
pop
push
inc
rcrb
sbb
jl
and
test
sub
lret
sub
daa
cmp
xchg
repnz
pop
pop
mov
scas
xor
int
dec
adc
jl
jg
sub
test
inc
sub
or
lods
das
cmp
ret
sub
push
sbb
jmp
sbb
imull
mov
lret
repnz
xor
out
jp
sahf
rclb
mov
xchg
push
jmp
pop
int3
lcall
xchg
dec
mov
rorl
insb
out
dec
and
int3
mov
pop
mov
scas
cli
cmp
addr16
cs
int3
mov
pop
pop
pop
cmp
leave
push
fdivr
pop
jns
inc
mov
dec
push
scas
pop
cmc
push
mov
push
std
xor
inc
and
xor
cwtl
js
test
jmp
mov
rolb
mov
pop
mov
sarb
loope
repz
shrb
rorl
pop
es
loopne
jb
mov
repz
subl
inc
mov
lahf
scas
jne
rcrl
fs
fdiv
aam
add
inc
popa
adc
add
cmp
dec
cmp
dec
movsl
jno
mov
jae
insl
add
loopne
xchg
xchg
jo
test
cmpsl
pop
mov
subb
lods
arpl
ret
sbb
push
lret
push
fs
dec
daa
fistps
adc
mov
rcrb
test
mov
pop
push
fs
addb
xchg
jo
adc
adc
mov
aam
mov
xor
cwtl
push
and
inc
push
inc
cld
and
mov
ss
add
inc
out
or
and
je
mov
scas
int
adcl
les
daa
sbb
pusha
cmpsb
lahf
enter
out
xchg
inc
cwtl
sarl
aas
bound
lret
mov
jbe
sahf
push
pop
push
into
push
leave
mov
xchg
cltd
xchg
mov
jp
fwait
mov
lods
out
dec
shr
cld
and
fadds
jae
pop
mov
jno
bound
jecxz
xor
cltd
call
mov
mov
out
rorl
test
push
and
lret
dec
mov
inc
clc
mov
sbb
inc
mov
jp
std
mov
cmp
xlat
jns
shll
xchg
adc
stc
rol
mov
inc
inc
test
inc
out
mov
jmp
out
and
xor
and
loop
adcl
and
gs
into
push
inc
add
sbb
mov
dec
xchg
lret
xchg
inc
and
pop
iret
dec
sub
bound
daa
jmp
cld
cwtl
push
or
lds
mov
jne
adc
mov
outsl
and
lcall
inc
dec
cmp
cli
mov
mov
insb
xchg
and
and
cld
scas
imul
inc
shlb
jnp
into
mov
sub
and
cwtl
adc
adc
sbb
ss
and
fmuls
cltd
push
icebp
cwtl
mov
inc
call
dec
popf
sbb
outsl
call
lahf
inc
push
lea
or
inc
icebp
xchg
cmp
dec
idivb
adc
mov
and
cmp
xchg
push
lds
cmp
jmp
imul
lret
shrb
leave
dec
xor
mov
mov
clc
xchg
sbb
push
push
inc
dec
mov
enter
jmp
jno
sbb
jns
cmpsl
lods
dec
push
mov
jge
ds
fildll
mov
mov
push
xor
aad
jnp,pt
dec
popw
sbb
fcomp
cmpsl
adc
and
jge
inc
les
xchg
or
cmp
pushf
adc
stos
mov
adc
lahf
jg
insl
lods
outsb
ja
sbbb
sbb
sbb
adc
or
mov
rclb
mov
sub
inc
push
jge
ss
add
pusha
stos
lods
imul
jp
aam
add
or
mov
mov
mov
loope
aaa
xchg
mov
jae
ret
mov
fsubr
movl
lahf
sahf
rolb
inc
jl
loop
jmp
outsb
lock
rcrb
es
sub
lock
inc
jns
jp
xlat
ss
dec
jo
or
xor
jmp
in
lods
pop
fistl
xchg
mov
bound
aaa
jge
mov
hlt
loop
hlt
insl
lods
cmp
sub
adc
in
mov
fistpll
and
mov
mov
in
xchg
jmp
xor
lcall
insb
bound
mov
lret
fwait
mov
add
push
cltd
sti
ret
adc
scas
dec
ds
test
js
int3
add
mov
ljmp
inc
bound
xchg
loope
and
adc
test
push
in
int3
mov
pop
push
jg
xchg
mov
ret
das
frstor
xchg
iret
push
popl
fs
aam
call
mov
aam
xor
popf
lds
lret
movsl
lock
jne
and
mov
cmpsb
lret
cmp
mov
pop
pop
cmp
shll
aam
mov
in
jp
xor
movsb
movsl
cld
or
addb
aaa
daa
push
push
mov
pushf
inc
scas
jnp
jl
mov
dec
std
xchg
cmc
scas
fcoms
lock
mov
mov
xor
out
mov
adc
jne
inc
cmp
jno
cmpsl
int
sahf
cmpsb
fidivrs
mov
pushf
mov
adc
stos
xlat
or
jmp
jno
mov
sbb
inc
push
loop
lea
mov
je
add
cmp
cmp
repnz
and
jns
rorb
jle
mov
test
popa
push
arpl
shl
mov
incb
rcrb
adc
inc
imul
cmp
sbb
and
add
insl
pop
aaa
pushf
mov
in
pop
adc
icebp
xchg
clc
std
test
icebp
inc
mov
enter
mov
fcoms
push
jg
xor
and
sub
test
mov
mov
in
inc
rcll
or
pop
ja
hlt
push
dec
arpl
mov
lock
mov
loope
enter
aas
mov
sbb
cwtl
pop
test
rcll
xor
push
or
insl
lods
fs
xor
lea
xchg
sub
and
ja
xor
out
lcall
or
fnstenv
mov
sti
adc
iret
mov
or
adc
add
in
xor
add
clc
test
push
mov
jge
addl
divb
jp
sbb
mov
pusha
xor
dec
push
xchg
jle
dec
es
dec
scas
pop
leave
jbe
pop
shll
mov
mov
fstl
js
xchg
cmp
addb
mov
inc
xchg
ds
icebp
insl
push
stc
mov
cwtl
mov
clc
fdivrl
movsb
and
loopne
sarl
mov
scas
xor
cmpsb
rorb
loopne
mov
daa
pushf
mov
cli
add
nop
loope
push
xchg
movsb
mov
int
mov
sub
repnz
enter
add
add
sub
mov
aaa
aaa
hlt
cld
mov
aad
inc
push
and
cmp
push
int
mov
in
mov
pusha
popf
out
or
aaa
test
adc
adc
or
pop
jmp
mov
mov
adc
mov
loop
or
mov
iret
mov
std
imul
pop
fdivp
dec
jae
mov
adc
mov
ljmp
leave
pop
ret
sti
cld
jl
adc
rcr
add
sbb
cli
mov
xlat
push
fnsave
jge
outsl
fimull
subl
scas
clc
iret
dec
mov
mov
testl
mov
ds
mov
pop
push
pop
cmpsb
jmp
jp
inc
inc
aam
in
fsts
push
cmc
popf
lcall
nop
mov
fildl
sub
movsb
stos
stos
cmp
cltd
outsl
pushf
inc
inc
fisubrs
popf
jno
mov
push
inc
add
inc
movb
mov
ja
or
shll
cmp
and
jne
mov
jecxz
jle
or
sahf
test
jne
add
xchg
test
mov
mov
inc
movsb
iret
lock
popa
iret
dec
xrelease
or
fwait
lret
cmp
rorb
flds
xor
dec
ljmp
lods
sbb
xor
sub
pop
mov
dec
out
or
test
in
or
cmpsl
pop
cmp
push
aas
mull
insb
fidivrs
int3
add
push
ss
mov
pop
mov
add
je
push
stc
add
out
je
fidivrl
movsl
ss
sbb
adc
addr16
xchg
aaa
mov
insl
mov
sub
mov
pop
jl
pusha
je
mov
mov
xchg
mov
mov
add
xacquire
into
data16
aam
std
jecxz
test
mov
sarb
dec
insb
push
call
xchg
lcall
das
scas
jmp
ss
insl
test
mov
xchg
add
and
adc
scas
push
jbe
jp
xor
out
enter
cli
movsl
std
pop
test
test
mov
cmc
mov
daa
mov
cwtl
adcl
or
lret
ret
jg
xor
push
call
popa
mov
sub
shr
rorb
loop
jnp
aad
add
pop
loopne
adcl
mov
xchg
test
enter
jb
inc
sub
pop
aad
repnz
leave
dec
pop
mov
mov
popa
or
xor
push
out
loope
pop
inc
inc
imul
adcl
pushf
jae
popa
or
movl
cmp
mov
jl
bound
xor
push
rcrl
test
es
pushw
addr16
mov
add
jl
gs
dec
int3
mov
es
push
out
loope
mov
cmpsl
negb
inc
loop
hlt
leave
lods
bound
mov
mov
adc
fst
mov
mov
add
adc
cmp
and
ret
jo
stc
mov
filds
inc
fwait
add
mov
pusha
mov
jmp
into
outsl
loop
lock
jl
xchg
shll
push
xchg
xchg
and
mov
sbb
sub
sub
ret
push
push
mov
pop
int
mov
jbe
add
enter
fs
add
inc
adc
mov
mov
pushf
mov
imul
pop
xchg
xor
insb
mov
repz
js
push
test
das
inc
fiaddl
cmp
mov
add
adc
icebp
mov
adc
int
pop
lock
and
nop
xchg
push
sbb
fucomi
notl
inc
push
jl
mov
fistps
inc
data16
xchg
idivb
add
shrb
imul
xchg
mov
ds
mov
sbb
data16
cmpsb
cli
je
jecxz
fldcw
and
sub
mov
sbb
pop
mov
adc
loop
bound
xorl
fldt
subl
repnz
out
sub
stos
mov
icebp
jns
ja
pop
push
sbb
jnp
icebp
bound
nop
xchg
mov
xchg
cld
mov
mov
xor
cltd
lods
or
lret
mov
lcall
loope
cmpsb
xchg
pushf
adc
sbb
lods
sbbb
push
cmc
jge
or
fwait
jg
ficoms
mov
sub
je
outsb
out
in
mov
cmp
stos
movsl
jae
cmp
clc
in
les
fnsave
cmpsb
shl
icebp
fcomps
xor
fadd
sti
outsl
ja
mov
mov
test
gs
ljmp
adc
inc
sub
cmp
adc
lret
xchg
and
push
fistl
mov
cltd
in
stos
decb
gs
sbb
divl
jae
push
push
adc
or
stos
inc
dec
cmp
pop
fadds
push
xchg
out
push
lahf
jecxz
push
mov
loope
loop
xchg
mov
mov
lcall
arpl
mov
inc
push
xor
mov
aam
xchg
mov
mov
leave
cltd
jmp
out
test
cmp
push
xor
out
xor
es
inc
push
gs
and
xlat
rcrl
iret
jnp
rcll
mov
rol
xchg
pslld
clc
scas
and
inc
mov
mov
cmpsb
fidivs
mov
jge
push
adc
inc
adc
xchg
out
mov
ljmp
adc
ret
test
xchg
and
and
outsb
loope
mov
sbb
fwait
sahf
or
mov
push
dec
or
cmp
fmull
dec
or
pop
scas
lods
loop
xchg
in
sub
push
loopne
sbb
out
out
fbstp
ss
cmp
cmp
cmpsl
jae
dec
sahf
sub
push
sbb
sub
aam
test
fcoms
pushf
push
dec
rcr
adc
orb
xorl
test
andl
mov
out
mov
sti
lahf
clc
icebp
insl
or
notb
dec
pop
xchg
push
scas
sub
int
mov
or
jg
lods
mov
sbb
xor
scas
push
inc
xchg
je
cmp
sahf
add
ljmp
lods
das
test
out
hlt
insb
lods
jnp
pop
inc
ja
adc
fcom
sub
inc
cmpsl
jg
xchg
jnp
push
mov
jo
jae
sub
dec
test
mov
and
lods
push
test
shlb
pop
mov
push
sti
pop
cs
ret
addr16
mov
flds
dec
hlt
jns
push
push
popf
es
mov
int3
outsb
pop
shrl
mov
sbbl
cltd
mov
loope
xchg
xchg
stc
stos
sub
stos
push
decb
fadds
lcall
repnz
std
pop
inc
gs
out
push
lcall
rclb
sti
into
xor
or
push
sar
inc
jo
cmpsl
push
push
je
adc
push
mov
xlat
shrl
rcr
cli
popf
in
je
dec
cwtl
xor
xor
pop
pusha
scas
inc
push
or
xor
scas
cld
push
js
outsl
pop
jo
xorb
lds
mov
andb
dec
or
pop
jbe
pop
lahf
adc
add
xchg
negb
ret
inc
pushl
push
movsb
cmp
xchg
ret
lea
add
sar
mov
jae
xchg
cli
ror
sbb
out
test
movsl
xor
imul
ja
dec
xchg
and
jns
mov
inc
ds
rorb
lcall
and
pop
out
clc
subl
pop
jle
cmc
xchg
pusha
movsl
pop
faddl
mov
push
icebp
aaa
sbb
ret
arpl
repz
push
xor
scas
ret
test
jo
and
rorl
enter
jg
and
jge
lret
lds
dec
ds
add
or
adc
cli
mov
xchg
les
mov
push
mov
xor
out
daa
gs
sub
out
sub
push
fs
xchg
dec
scas
dec
pop
lds
jge
loopne
adcl
xor
sbb
stos
lahf
mov
cwtl
sahf
test
sbb
xor
sbb
test
mov
pop
pop
pop
das
jbe
or
adc
push
jecxz
xor
fisubl
jo
and
mov
cmp
dec
js,pt
cmp
dec
nop
jne
pop
sbb
push
or
pop
fcomps
mov
aaa
nop
sbb
stos
inc
cld
pushf
dec
inc
clc
pop
pop
js
add
or
imul
mov
sub
cmp
insl
xor
lods
mov
sti
shlb
lods
sbbb
lods
arpl
scas
jl
lods
gs
mov
xor
dec
dec
gs
enter
push
fildll
cmp
call
in
fwait
aad
xchg
mov
leave
jb
icebp
add
xor
jnp
mov
sub
je
inc
in
add
movsl
xor
lds
mov
add
mov
insl
pop
les
aad
sbbb
sub
jb
int3
add
sahf
adc
and
xchg
inc
movsl
cmc
xor
std
daa
loope
icebp
clc
hlt
pop
imul
sub
lods
nopl
aas
xchg
adc
pop
xor
das
jae
sbb
imul
movsb
push
fldenv
bound
add
pop
imul
sbb
inc
sbb
cmp
rol
gs
fwait
data16
sbb
inc
cwtl
dec
xchg
cld
rclb
xchg
fstpt
pop
cmp
pop
sub
repz
sbb
mov
stos
in
sbb
mov
dec
mov
fs
out
hlt
fldenv
mov
mov
add
and
lcall
mov
hlt
push
pusha
fidivs
rorl
xchg
sahf
insl
adc
sbb
mov
mov
xchg
in
mov
mov
cmp
cmpsl
mov
jl
fs
dec
add
icebp
enter
arpl
mov
nop
push
loop
aad
jb
rcr
lea
pop
aam
bound
inc
xchg
andl
test
xor
movsb
test
sub
dec
clc
fs
inc
xor
hlt
push
int
xchg
jmp
call
clc
pop
push
mov
imul
outsl
push
mov
mov
add
or
mov
fucom
idivl
push
inc
adc
add
dec
lcall
das
inc
inc
mov
idivb
das
inc
loopne
cwtl
imul
insb
add
adc
lret
shll
cmp
push
lahf
push
pop
je
fwait
pop
mov
pop
dec
mov
popf
popa
cmp
xchg
push
incb
lret
xlat
pop
scas
push
into
xchg
xchg
mov
jmp
aad
lds
dec
inc
jmp
lods
loopne
jae
outsb
negl
and
fisttps
inc
cmpl
mov
xchg
mov
repnz
gs
rcrb
cmpl
repz
lock
inc
push
xor
adc
xor
fimuls
rol
cs
nop
dec
jno
into
mov
add
inc
mov
xchg
or
test
xchg
sar
out
movsl
test
testl
orl
mov
rcll
out
add
movsl
fimull
and
mov
xlat
hlt
xchg
std
push
and
enter
add
cmp
mov
popl
pushf
adc
mov
sbb
sarl
sub
jae
push
cmc
js
xor
out
mov
loopne
and
mov
cmp
xchg
ljmp
sbb
mov
xor
mov
mov
pop
iret
inc
mov
lods
dec
inc
leave
mov
dec
mov
mov
mov
imul
lods
jbe
mov
add
xchg
cmc
scas
int3
jle
cli
and
subb
push
cmc
add
mov
and
inc
sub
lods
pop
jne
mov
lea
add
aam
pop
add
or
or
or
inc
pop
cmp
add
sbb
outsl
and
test
xlat
bound
scas
out
push
mov
or
insb
push
xchg
icebp
popl
stc
mov
adc
xor
mov
sub
dec
loopne
fwait
sbb
je
mov
cld
aas
mov
cli
imul
fbld
and
mov
mov
adc
push
ret
sbb
pop
xor
movsl
xor
jbe
sti
push
inc
scas
rol
stos
sub
adc
xchg
iret
sbb
lcall
rclb
mov
sub
cmp
sti
xchg
stos
cmp
lret
push
nop
xor
dec
jae
inc
xchg
jns
fwait
andl
or
adc
das
es
cs
xor
cmc
shll
cwtl
cmc
push
jns
adc
mov
sub
loopne
or
fcoml
add
xchg
jle
mov
mov
lahf
dec
fiaddl
fdivl
clc
addr16
aas
dec
sub
pop
movsb
les
leave
sbb
xchg
pushf
adc
shlb
jg
pop
repz
inc
into
das
mov
shll
jae
and
loopne
xor
jecxz
popa
mov
ljmp
into
repnz
mov
idivb
or
jge
scas
push
adc
or
cmpsl
int
add
dec
cmpsl
pop
jns
out
push
test
xchg
shl
outsb
pop
stos
pushw
pop
loope
sub
sbb
fucomi
loopne
xor
ljmp
add
sbb
ds
test
sbb
sbb
mov
mov
mov
push
sbb
jno
jne
cwtl
imulb
cmp
mov
out
filds
fidivrs
es
dec
or
dec
xchg
mov
mov
jo
test
lahf
mov
push
imul
and
movsl
ret
scas
lock
arpl
fmuls
cmp
in
xchg
mov
addr16
int3
test
popf
enter
pop
cmc
je
mov
arpl
mov
shr
lret
pop
mov
mov
lock
jmp
jp
mov
mov
fildll
fwait
inc
add
and
js
push
fildll
sbb
fsts
mov
sti
in
mov
insl
pop
dec
loop
loop
sub
scas
aas
cwtl
sahf
mov
insw
and
xor
pop
dec
pop
add
sub
pop
inc
fldt
lcall
cmp
mov
and
add
outsl
adc
xor
outsl
fmul
insb
dec
push
in
adc
xchg
add
ljmp
push
adc
mov
dec
vaddss
fnstenv
in
xchg
and
mov
mov
das
nop
or
sbbl
xchg
mov
fmuls
mov
repz
ss
push
xor
ret
inc
inc
aad
punpcklbw
push
ljmp
ret
jmp
scas
fwait
mov
sub
fisubrs
cmp
jp
dec
add
mov
sahf
cld
iret
cwtl
scas
sbb
cs
jle
push
sub
ja
call
dec
sub
lret
dec
pop
add
or
push
test
xor
mov
or
cmpsl
adc
andl
add
jmp
das
flds
imul
inc
mov
cltd
mov
sub
sub
and
xorps
insl
pop
pandn
int3
push
stc
test
push
and
jp
mov
aam
dec
xor
lret
push
bound
mov
cli
mov
lods
xor
ss
xchg
push
and
outsl
daa
cmpsb
mov
mov
pop
clc
or
cld
pop
mov
ret
test
ret
and
arpl
jb
sahf
sbb
and
inc
aas
inc
mov
ljmp
or
jbe
cmp
xchg
sub
mov
and
mov
sti
mov
add
pusha
fimuls
lcall
sbb
imul
insl
pop
add
ret
insb
mov
or
xchg
ss
dec
mov
dec
int
or
nop
repz
and
sub
push
popa
bound
adc
loope
xchg
dec
bound
add
add
push
jmp
insl
add
lea
ficoml
pushf
inc
icebp
pop
insl
sub
out
loopne
inc
in
je
sbb
insb
dec
inc
ss
data16
cltd
xor
out
push
clc
pop
iret
inc
jge
mov
hlt
scas
xchg
dec
in
xor
jo
sbb
push
cmp
aas
scas
outsb
sbb
or
sub
push
in
jne
add
ja
xlat
push
out
xor
and
xchg
jl
insl
pop
mov
mov
pop
lret
inc
cmpsb
inc
xchg
rclb
and
repz
pop
roll
ja
rorb
sbb
or
enter
fstps
pusha
cmpsl
inc
dec
dec
xlat
pushf
aaa
nop
in
aad
daa
addl
xor
sti
inc
mov
int3
rorl
call
adc
aad
sbb
aad
jbe
push
mov
subb
subb
lret
in
leave
jno
dec
arpl
cltd
mov
lods
fs
into
xor
and
pop
sub
mov
mov
cmc
hlt
fdivrl
aam
or
xorb
dec
movsl
mov
push
push
out
xlat
adc
jo
lock
fs
sbb
inc
into
inc
mov
xor
inc
shr
insl
es
in
push
and
scas
push
push
icebp
mov
ja
dec
cmp
pop
push
std
mov
nop
push
test
dec
sarb
and
scas
sbb
lods
dec
mov
insb
idivl
xor
inc
pushf
aad
xor
mov
adc
shll
mov
sbb
adc
sub
sbb
add
mov
and
in
js
push
jno
sub
fisttpll
aam
adc
stos
pop
inc
push
jle
mov
cwtl
or
cmp
nop
inc
testl
fs
and
in
mov
pop
shrl
insb
jnp
cmp
push
cmp
dec
inc
inc
cmp
gs
xchg
cli
jnp
ja
cs
pusha
mov
mov
pop
mov
sti
add
push
pop
cmp
xchg
xchg
lcall
mov
jae
pop
xchg
popa
push
push
xchg
shr
rcll
sbb
dec
idivl
mov
test
xchg
out
jnp
scas
pushf
jno
fsts
iret
call
jae
and
popa
xlat
pop
in
icebp
pop
pop
outsb
add
pop
push
jle
mov
cli
leave
hlt
mov
cli
mov
push
add
in
dec
test
mov
mov
pop
and
movsb
lahf
repz
data16
mov
in
inc
jp
cwtl
jmp
xor
lret
imul
in
xor
fs
jge
dec
pop
mov
mov
mov
add
push
int3
in
xchg
clc
or
add
sub
bound
addr16
mov
mov
push
cli
and
inc
xchg
pop
hlt
dec
out
fdivl
push
jmp
enter
iret
push
xor
stc
bound
xor
xlat
mov
adc
mov
lahf
or
fwait
mov
xor
add
mov
inc
in
imul
repnz
pop
dec
or
repnz
out
shl
and
add
sbb
loopne
cmp
adc
inc
mov
xchg
in
adc
nop
shlb
fiaddl
lret
je
in
cmc
ffreep
leave
dec
imul
jecxz
popa
jmp
push
cmp
mov
inc
xchg
hlt
add
cmp
sbb
repz
xor
mov
aaa
sbb
imul
adc
ret
push
arpl
scas
jo
inc
xchg
bound
sar
jge
loopne
iret
xchg
jle
jns
or
dec
sub
or
push
cmp
mov
mov
addl
mov
bound
mov
dec
jl
imul
cli
clc
shll
mov
sahf
push
pop
fwait
in
push
inc
rcr
in
outsb
inc
xchg
jmp
sbb
sarl
xchg
jg
shl
mov
mov
in
jns
xor
aad
imul
sarb
push
adc
mov
push
lea
data16
pop
push
bound
push
mov
xchg
sbb
jp
das
adcb
mov
iret
shll
and
sub
into
jge
xchg
dec
sub
jl
pop
xor
push
out
sbb
test
les
xor
lea
mov
jnp
pop
or
lds
push
lret
ret
jne
cmp
dec
push
testb
in
shrb
mov
push
iret
lcall
stos
enter
stc
pop
xor
xchg
mov
and
mov
in
mov
aad
mov
pop
mov
mov
lods
cltd
xor
inc
xchg
out
sub
es
imull
popa
out
push
mov
xchg
std
dec
imul
loop,pn
outsl
mov
mov
mov
add
sarb
subl
iret
shl
fs
sub
fwait
jnp
mov
mov
lahf
sti
adc
ror
lret
mov
in
xchg
fwait
fs
and
call
aam
lea
jb
ret
xchg
xor
int3
aaa
xor
jb
loope
pop
fdivrs
xor
sarb
push
lock
adc
inc
jb
push
fldt
mov
imul
dec
push
dec
mov
rcll
mov
mov
movsl
fcomps
or
push
inc
in
xchg
sbb
mov
pop
or
ret
inc
fisttps
in
jp
sub
ret
sbb
jns
shr
mov
clc
das
outsl
aaa
cld
jecxz
push
repnz
rorb
sbb
xor
ss
loope
pop
push
jnp
mov
and
add
inc
inc
push
mov
mov
cmp
add
fisubrs
mov
and
adc
cmc
cmp
fisubs
xor
xchg
por
adc
add
mov
inc
jno
lret
mov
aas
in
dec
sarl
negl
push
sbbl
mov
jg
and
fsts
mov
addr16
jl
lods
sbb
lods
addr16
lea
mov
cwtl
inc
cld
icebp
jae
sub
mov
jns
test
jecxz
xlat
mov
dec
jnp
jns
jg
stos
cmp
mov
jge
sub
imul
cmpsb
jno
xor
jl
push
sbb
xor
in
or
pop
call
sbb
cmpb
outsl
shl
ss
or
mov
fdivp
jo
lea
std
cmp
fiaddl
or
push
int3
jmp
inc
sbb
das
pop
das
leave
clc
or
push
jecxz
cmp
jge
xorb
ljmp
mov
add
rcll
out
arpl
test
mov
pop
in
inc
inc
xor
pop
outsb
lret
or
out
ret
cmpl
mov
pop
dec
ja
std
sub
or
lock
or
inc
je
or
cmp
sub
fistps
lcall
xor
xor
iret
xchg
add
mov
popf
xlat
js
cmp
mov
adc
or
mov
adc
xchg
ss
sbb
add
jbe
jg
icebp
ljmp
push
cmpsb
repz
and
cmp
scas
xor
xor
inc
mov
cmpl
out
popf
jnp
or
mov
loope
in
sub
sbb
mov
mov
pop
pop
adc
jmp
dec
fs
sub
cmp
xchg
pop
mov
push
nop
add
fdivl
dec
out
push
sbb
or
mov
es
jae
dec
sbb
xchg
pop
ror
rcrl
or
orb
mov
mov
push
mov
add
mov
fldl
pop
in
push
push
cs
xor
jle
rcl
das
xor
jae
cmp
scas
xchg
rolb
sbb
sub
xchg
test
shl
jecxz
out
add
ret
idivl
mov
or
jnp
and
mov
das
lods
jecxz
push
das
mov
pop
adc
test
add
shrl
sbb
out
ja
or
data16
jecxz
push
xchg
mov
adc
repnz
inc
movsl
jle
xor
adc
mov
sub
dec
xchg
pop
sbb
mov
loope
dec
ss
sbb
inc
or
outsl
xchg
lock
pusha
cli
xchg
mov
cmp
inc
fidivl
mov
shrb
push
repz
mov
sbb
aas
les
adc
mov
or
xchg
mov
adc
jne
dec
inc
xchg
mov
inc
push
sar
adc
add
pop
xor
xchg
repnz
das
xchg
outsl
inc
inc
sti
arpl
fs
cmpsl
inc
sub
inc
test
data16
inc
sbb
lret
cmp
jge
jo
xlat
lea
sbb
loopne
jmp
in
test
or
push
push
dec
xchg
sbb
jle
stc
jo
jae
movsl
in
push
add
dec
js
insb
jno
mov
dec
shl
test
xchg
cltd
lret
nop
mov
pusha
loopne
mov
or
mov
and
cwtl
mov
pop
loope
les
jle
stos
pop
xor
and
int
sub
sbb
xor
movsb
popf
sbbb
add
mov
gs
cmpsl
fldcw
ret
jne
adc
shlb
add
scas
enter
test
sub
fcompl
cmp
mov
fs
inc
cwtl
stos
aad
scas
jb
mov
scas
xor
inc
int
mov
sbb
insb
shlb
push
jnp
call
cmp
sbb
negl
aaa
sub
outsb
int
inc
mov
int3
cmp
jmp
fisubrs
out
andb
ret
aas
lahf
test
mov
mov
nop
in
push
cmc
cmp
push
aas
add
mov
mov
adc
into
movsl
or
jae
rclb
js
in
dec
adc
cmc
mov
lret
scas
cmp
push
or
stc
pop
sub
xor
std
in
sbb
je
lods
iret
lods
xchg
sub
mov
ret
mov
xchg
dec
iret
pop
movsl
inc
mov
mov
cmpsb
sub
test
ja
fildll
dec
aam
lret
xchg
or
subl
push
pop
subb
jl
add
fnsave
aas
push
mov
ds
xchg
mov
jmp
add
push
pop
fidivl
xor
cmc
jge
aam
ffree
enter
hlt
sub
shlb
cmp
add
sti
add
insb
add
pop
or
or
movsb
sahf
out
iret
sbb
lahf
pushf
lahf
adc
mov
pop
push
ficomps
ret
enter
bound
inc
xchg
sbb
fildll
outsb
mov
adc
mov
jbe
adcl
fldt
sbb
aad
ss
sbb
aaa
into
scas
dec
fisttps
xchg
or
inc
sub
cli
mov
sahf
push
leave
mov
test
mov
push
bound
lods
sub
loope
movsl
je
pop
fs
pop
dec
xor
cltd
popf
or
jno
loope
cmp
orb
jns
sbbl
jne
inc
or
xchg
les
bound
cmp
mov
dec
inc
sub
sti
pop
roll
repz
dec
xchg
gs
inc
xchg
orb
cmc
mov
jbe
jns
cmp
aas
fs
pop
into
mov
fdivrl
sub
fistpll
inc
jg
jno
add
add
ja
cld
dec
dec
adc
sbb
adc
or
xchg
in
ja
push
sahf
xor
inc
ljmp
gs
sub
pop
fstps
addr16
inc
loope
cmpsb
dec
clc
movsl
repz
jnp
das
adc
lret
xchg
dec
mov
shll
lock
adc
xchg
jo
imul
out
adc
fldl
dec
data16
jns
cmp
adc
test
subl
insl
dec
mov
jae
lods
dec
pop
dec
pop
orl
push
mov
lods
stos
test
jge
stos
dec
fnstcw
cs
or
icebp
lods
daa
sbb
lcall
cmpsb
push
stos
sbb
xor
pop
aas
add
mov
sahf
mov
je
in
cmp
std
adcl
sbb
jno
sbbl
fsts
cmpsb
adc
out
xor
mov
push
add
xchg
push
addb
inc
popf
pusha
cmp
add
jle
pop
cld
fisubl
loope
sbb
lret
xor
fbstp
adcl
cmp
js
loopne
arpl
pop
rorb
fnstenv
jno
mov
pop
xchg
rcl
dec
pushf
or
pop
xchg
sub
cld
pop
and
scas
aad
std
xor
push
pop
mov
jbe
jbe
adcb
in
sarb
xchg
pop
sbb
xor
test
mov
ror
call
fldcw
push
xchg
ret
sbbl
push
pop
sub
ret
mov
adc
in
int3
xor
icebp
hlt
mov
aaa
cmp
test
aam
imull
int
jo
in
xor
xchg
enter
xchg
xchg
ret
insl
and
das
shlb
push
popa
xchg
subl
frstor
add
xlat
mull
lods
xchg
stos
mov
arpl
ret
xor
lock
xor
cmp
mov
jmp
sbb
not
mov
mov
cld
pop
adc
insb
arpl
hlt
std
sbb
lds
pop
xchg
sbb
sbb
or
inc
pop
shll
addr16
lret
xchg
xchg
gs
sub
push
scas
jg
out
movsl
cmp
cld
mov
mov
add
pop
cmp
mov
movsb
repz
xchg
into
call
or
outsl
scas
lods
insl
xchg
outsl
lock
scas
mov
stos
enter
xchg
sub
xchg
mov
out
int
dec
pushf
mov
cmp
out
inc
pop
cli
fwait
data16
dec
add
xchg
mov
imul
loope
xor
insb
mov
xor
cmp
and
jae
ljmp
loope
sbb
cwtl
clc
cld
jp
mov
ret
pop
cmp
mov
rclb
mov
jb
lea
and
mov
in
pop
and
cmp
pop
sbb
add
popf
jnp
cltd
push
fidivrs
push
inc
xchg
adc
inc
adc
pop
cmpsl
xchg
mov
inc
adc
cmc
inc
les
mov
sbb
lods
or
stc
sub
jl
insb
ret
cwtl
psraw
cmc
mov
loop
test
push
rcrl
sub
cmp
cmc
mov
sub
cmp
inc
lods
or
mov
adc
popf
cmpsb
scas
fwait
jp
jge
mov
mov
lods
push
mov
les
mov
pop
jb
into
int
roll
out
mov
sbb
cmpsl
mov
test
int3
jg
push
xor
test
cmp
fnstenv
lods
pop
sub
push
add
lea
jns
out
test
mov
add
ret
mov
stos
cmp
lods
pop
mov
jno
push
cli
iret
and
faddl
in
cmp
mov
add
mov
je
xchg
push
out
mov
lahf
sbb
in
test
xchg
pop
mov
repz
pop
pop
aad
out
loop
in
fdivr
and
mov
dec
subl
mov
cmp
xchg
pusha
pop
sbb
jbe
js
xchg
insl
add
pop
test
sub
cmpsb
mov
pusha
add
cmp
les
xchg
add
int
and
mov
rolb
lds
sub
std
ja
mov
cmpsb
jno
pop
mov
fs
mov
js
mov
xor
dec
xor
adc
mov
cld
or
sti
repnz
jg
lret
sub
dec
imul
movsl
out
sub
in
pop
fsubl
loop
iret
dec
push
mov
std
lahf
fisubrs
xchg
inc
lahf
bound
sub
pop
test
pop
adc
sbbb
xor
mov
jle
fwait
add
into
mov
sub
cmp
jmp
inc
xchg
lahf
jo
lods
ret
ret
je
lret
pop
in
push
jbe
scas
addr16
lea
jl
add
fnstenv
dec
inc
and
jne
jle
add
add
lcall
xorl
cmp
ja
addr16
mov
dec
data16
popa
out
testb
and
add
sub
inc
cmc
adc
aas
cmp
shll
xchg
pop
mov
xchg
mov
clc
inc
inc
xchg
js
inc
adc
and
mov
lds
xchg
out
mov
stc
jo
repnz
jp
loope
pop
nop
test
sub
insl
xchg
in
jae
cmp
stos
xchg
pop
add
pop
and
jne
mov
mov
aas
shrl
inc
in
test
mov
aam
ret
lods
sub
clc
xchg
jb
lret
add
loopne
addr16
inc
aaa
xlat
movb
mov
sub
cs
pop
testl
cld
push
cmp
dec
adc
repnz
mov
xchg
ds
lds
into
sub
push
jl
insb
ljmp
cli
add
cmp
les
aaa
iret
xor
jmp
repz
xchg
popa
jmp
xor
mov
rcrl
lcall
jle
loop
aam
cs
jp
sbb
dec
nop
repz
push
jp
mov
shll
push
push
adc
test
lods
test
movsl
test
xor
add
in
orl
pop
cltd
jns
inc
pop
add
push
add
mov
pop
push
into
xor
out
fmull
xchg
loop
pop
out
mov
xor
and
stc
adc
aas
imul
mov
jne
mov
mov
lock
adc
nop
mov
mov
sbb
push
mov
mov
sub
icebp
add
dec
xor
sbb
lcall
jnp
cmp
rcr
sti
je
sbb
add
lahf
leave
lret
inc
aas
mov
and
int
lock
movsl
insl
sub
push
sbb
mov
mov
loop
xchg
inc
sbb
filds
xchg
adc
cs
pop
lcall
add
call
cltd
pop
mov
bound
mov
loop
xchg
out
fmuls
adc
cwtl
mov
jp
mov
faddl
stos
mov
jp
cmp
imul
imul
cli
shl
lods
inc
imul
cmp
adc
fwait
push
fisttpl
call
push
pushf
mov
add
lret
aas
gs
iret
lods
jmp
pusha
dec
add
arpl
repz
mov
pop
mov
ds
cld
fbstp
in
out
fwait
lods
sahf
pop
sti
sbb
jmp
xor
jl
test
ja
movsl
lds
in
arpl
fimull
mov
adc
loope
cld
movsb
dec
mov
daa
aas
in
test
aad
xor
fistpll
rcr
xchg
cmp
leave
xorb
roll
push
shll
test
dec
pop
jne
std
cli
cmp
xlat
testl
icebp
push
sbbb
pop
dec
pusha
xchg
fstl
lea
ljmp
nop
jecxz
inc
in
sbb
xchg
cmc
mov
enter
push
mov
inc
rcrl
and
adc
pop
ss
adc
movl
or
int
sbb
out
push
cmpsb
inc
fistpl
push
loopne
movsl
jg
fdiv
pop
cld
bound
mov
push
sahf
out
cwtl
or
mov
das
pop
add
loopne
cmp
test
inc
movsb
ljmp
xor
or
cmp
fsubrl
jge
or
stos
pop
out
xchg
push
mov
je
jecxz
xor
stos
jmp
les
and
or
jp
cmp
inc
adc
test
jl
test
or
outsl
jge
imul
push
add
push
popa
fdivrs
out
push
int3
lds
cltd
out
adc
stc
jb
mov
out
aas
popa
mov
xchg
fcomip
imul
ja
cmp
jecxz
ret
and
lret
cmp
loopne
outsb
in
rcrl
loopne
lcall
mov
xor
sbb
out
jg
sub
pop
jl
sub
dec
loope
cmp
mov
xor
sbb
cwtl
xor
nop
jb
filds
loopne
mov
xor
setg
mov
dec
mov
xchg
xchg
outsb
sub
dec
xchg
cld
inc
fnstenv
add
mov
mov
xor
adc
loopne
push
mov
xor
push
fnsave
dec
mov
add
pop
inc
fsts
jo
pop
pop
cmp
aas
and
sub
or
mov
or
cmp
imul
lods
movsl
in
loope
fistpl
aam
fisubrl
dec
insl
popf
dec
jg
aas
sub
ss
or
mov
xchg
add
mov
add
out
add
sahf
loop
cmp
scas
pop
add
add
xlat
add
jbe
mov
ret
and
jp
add
loopne
rclb
xor
sub
xor
mov
andl
xor
test
and
xor
cmc
and
mov
add
mov
or
lret
mov
mov
inc
adc
call
mov
mov
pop
sbb
sub
out
aas
cld
mov
leave
cmc
enter
add
lods
xor
pop
mov
mov
mov
jmp
out
fildll
in
lods
fwait
cwtl
cltd
leave
xchg
cmp
adc
pop
sub
jecxz
and
icebp
rol
mov
sub
jge
sub
push
shrl
mov
cld
mov
les
mov
fisttps
lret
stc
mov
lcall
jbe
mov
add
sti
push
push
xor
pop
cmc
loopne
inc
shlb
sbb
mov
inc
add
cmp
jbe
lods
sub
mov
and
dec
xor
mov
int3
add
dec
jl
dec
scas
mov
mul
dec
in
or
mov
mov
dec
sbb
in
ret
push
mov
clc
and
mov
mov
xchg
sub
pop
mov
adc
out
and
fisubrs
push
mov
jnp
push
jb
shlb
dec
testl
dec
fidivs
scas
jae
iret
test
lods
movsl
ror
out
dec
fs
sub
mov
mov
add
xor
push
cwtl
lods
mov
cli
inc
outsl
xchg
inc
mov
mov
shl
adcb
cmp
add
mov
addl
xchg
adc
fsts
xchg
mov
inc
lods
mov
cli
push
je
xor
addr16
push
inc
clc
sbb
push
dec
jle
in
push
bound
mov
in
xchg
fcompl
or
and
scas
cmp
or
ret
and
leave
mov
clc
in
cmpsl
dec
push
repnz
sbb
lods
lds
outsb
add
pop
test
aaa
inc
jl
rol
shrb
notl
fisttpl
push
jmp
rcrb
mov
jbe
and
leave
push
inc
xlat
mov
sbbb
jl
sbb
ret
push
pop
mov
test
mov
xor
jno
nop
sbb
push
push
cmpsb
xchg
into
add
xchg
andl
lds
jge
cmp
fldcw
push
mov
dec
jp
data16
push
cwtl
and
push
sub
jb
imul
enter
test
mov
inc
pop
xchg
lods
imul
mov
ljmp
sub
and
or
data16
mov
je
pop
rcl
jns
mov
arpl
push
cmp
enter
jmp
scas
dec
lea
rcll
orb
add
mov
test
jge
fdivr
or
enter
jae
mov
cltd
in
test
ja
cmp
xchg
insl
push
in
adc
push
leave
cs
gs
adc
loope
add
flds
xchg
insb
add
push
sub
mov
dec
jo
push
movsb
mov
mov
das
leave
dec
fmull
jo
dec
inc
dec
fidivrl
stc
and
pop
push
cmpsl
xchg
mov
shrl
mov
sub
rorb
cli
fisubrl
ret
call
inc
push
or
fstps
cmovns
sbb
icebp
adc
mov
mov
ret
pop
sbb
push
mov
loope
loop
movsl
cmp
popa
mov
bound
insb
pop
movsl
nop
sti
bound
mov
lahf
xchg
into
neg
or
mov
xchg
cmpsl
and
pop
fidivrl
mov
sti
cmc
int
out
xor
in
fdivrl
push
xor
aam
or
pusha
shlb
xor
pop
dec
lret
lret
jecxz
xorl
mov
lds
loop
js
pop
call
or
mov
cs
shrb
mov
insb
add
mov
adcw
or
push
stos
xchg
fiadds
mov
sub
shll
rolb
out
jns
mov
mov
jne
add
lods
sub
in
mov
add
imul
ret
cmpsl
test
test
push
sub
mov
aad
mov
dec
jl
dec
mov
lcall
cmp
add
filds
repz
aaa
stos
sub
xchg
sub
in
stc
push
jp
pop
mov
mov
jns
outsl
mov
and
ret
stc
out
push
cmp
outsb
orl
dec
mov
pop
pop
mov
test
cwtl
mov
into
call
je
lds
xchg
stos
test
outsb
mov
sbb
aaa
lock
push
sbb
out
mov
insb
fsubp
dec
ss
nopl
or
xor
jmp
mov
mov
push
test
sbb
and
cwtl
mov
icebp
push
arpl
jne
cmp
sbb
or
dec
insb
or
push
xor
faddl
push
mov
dec
fldenv
cli
leave
inc
mov
xchg
push
imul
pop
mov
sarl
sbb
and
pop
testl
add
pminub
push
nop
icebp
mov
cs
add
popf
fmull
stos
test
mov
repz
repz
add
mov
mov
stos
push
push
movsl
mov
repz
fwait
adc
ja
adc
push
lcall
pop
test
and
pop
cmc
std
mov
push
ja
and
or
cmp
int3
add
push
lcall
les
dec
dec
push
enter
xor
push
xchg
call
add
ljmp
cltd
out
push
test
sbb
fsubl
orl
cld
inc
push
stos
push
lcall
cmc
jle
pop
mov
adc
out
mov
mov
imul
jmp
lahf
or
mov
out
adc
scas
sahf
push
ror
lock
sub
decb
push
pop
push
adc
pop
xchg
inc
sub
daa
cmp
cwtl
sarb
fldt
xlat
pop
dec
dec
xchg
iret
lahf
pop
adc
ret
add
ja
cs
or
add
flds
scas
adc
test
and
insl
jle
xor
cmp
sbbb
or
lock
lea
cmc
adc
sbb
sahf
dec
lods
sahf
test
jae
and
fidivrs
or
dec
aad
and
cmpl
mov
inc
bound
push
lret
popa
inc
mov
scas
insb
xor
in
int
subb
stc
cmpxchg
jl,pt
test
das
xor
jne
xlat
lahf
cmp
mov
testb
adc
in
sbb
and
push
xchg
enter
xchg
jge
jp
repnz
data16
xchg
pop
mov
icebp
mov
jl
mov
jg
lods
jl
jnp
iret
jo
ja
cwtl
mov
or
jl
adc
mov
lret
jns
outsl
cmp
lods
add
adc
loope
sbb
imul
sbb
cwtl
xchg
and
outsl
cmp
je
mov
ficoms
scas
into
loope
gs
in
in
fs
lea
enter
es
std
sbb
mov
jmp
repnz
add
faddp
xchg
aam
in
sub
ret
add
testb
out
outsl
mov
lret
test
fwait
data16
and
sbb
push
scas
outsb
je
xchg
js
jge
jecxz
jecxz
mov
jne
aas
or
mov
test
and
jge
xlat
bswap
push
dec
faddp
sahf
xchg
and
es
scas
cwtl
imul
dec
add
sbb
lret
mov
stos
push
cmc
or
ficomps
mov
stos
sbb
mov
aam
mov
addr16
insb
sub
mov
cmpb
jl
xchg
mov
clc
fs
test
inc
incl
ljmp
insb
std
dec
sub
outsl
dec
xor
push
and
aas
and
and
adc
jle
mov
and
mov
enter
outsb
les
nop
inc
dec
addr16
pop
in
mov
es
mov
repz
pop
adc
sahf
stos
mov
ja
ja
dec
pop
bound
aaa
in
sbb
fnstcw
and
fs
jns
cmp
shll
mov
test
cltd
frstor
xchg
jae
and
dec
gs
jmp
xchg
outsb
sbb
and
pop
add
insl
jo
cltd
lods
pop
xlat
mov
mov
repnz
lcall
sub
xchg
out
pushw
push
loope
sbb
and
and
xorl
rorl
xor
inc
jecxz
es
lods
mov
stos
push
pop
je
shrb
xchg
icebp
lods
test
add
test
lods
out
int
cmpsl
lods
mov
ljmp
fs
cmp
das
outsb
inc
adc
xchg
pop
pusha
psraw
mov
fnstsw
or
push
sub
mov
xchg
mov
push
jns
inc
xchg
add
fbld
xchg
stos
cli
sti
jmp
push
das
ja
mov
rol
pop
push
ret
dec
movsb
push
and
rclb
test
flds
inc
adc
mov
adc
loop
ds
mov
mov
dec
pop
cmp
pop
lods
dec
aad
scas
inc
and
xchg
test
test
adc
dec
aas
repnz
lods
insb
ljmp
cmp
inc
fmull
test
push
outsb
push
in
jns
or
cmp
sbb
fldcw
lret
stc
dec
xchg
pusha
popa
jg
mov
cmp
jecxz
jg
inc
cmpsb
mov
jge
jae
test
jmp
cmp
aas
jnp
inc
jg
or
icebp
sbb
aam
dec
add
in
dec
fs
cmpsl
pusha
sbb
and
test
shrb
or
loope
jo
xor
mov
repz
push
fdivrl
xor
inc
xchg
cmp
cmp
jns
sbb
or
hlt
pop
stc
ds
xor
fsubs
test
cmp
movsb
test
mov
out
xchg
ss
lods
outsl
pop
mov
adc
pop
dec
in
pop
jle
push
pop
aad
int3
jge
mov
pop
add
mov
sarl
outsb
sbb
mov
sub
mov
push
jns
imul
popf
testb
inc
fidivl
fimull
mov
adc
outsl
in
loope
push
imul
js
and
popf
dec
out
loope
les
enter
pop
movsb
or
mov
dec
xchg
inc
mov
sarl
adc
scas
push
jno
xchg
stos
dec
push
mov
idivb
shr
mov
cmp
jne
jae
pop
jp
in
pop
je
sub
adc
fsub
cmpb
push
pop
data16
daa
movsb
nop
js
dec
lods
pop
push
fcmovu
andb
leave
rcll
ret
mov
dec
lock
cmpl
out
pop
xchg
xor
dec
push
sbb
mov
cmpsb
inc
mulb
insb
fwait
into
lds
cmc
outsl
dec
insb
cmpsl
xor
jns
cmc
cmp
loope
pop
jnp
inc
push
dec
addr16
cwtl
std
add
add
icebp
pop
int
imul
test
decb
lods
xor
clc
lret
test
and
pusha
popa
rorl
jb
int
mov
cli
jp
jo
adc
sub
mov
cld
repz
xchg
sub
stc
ror
sub
adc
pop
sub
fcompl
movb
dec
enter
enter
insl
aam
repnz
pop
pop
sbb
test
addb
adc
sbb
cmp
adc
jno
fsubl
and
stos
testl
mov
cmp
repnz
xchg
in
call
ss
mov
hlt
add
dec
and
add
jge
gs
mov
or
pop
outsl
jnp
sbb
push
or
les
outsb
test
leave
mov
faddl
mov
mov
mov
or
sbb
pop
scas
leave
fisubrl
mov
xorl
mov
add
mov
push
add
or
and
push
inc
ret
or
xchg
fucomi
stos
sub
add
hlt
push
jmp
jmp
cld
cmpsb
mov
int3
add
add
jnp
jae
cmp
jl
cltd
rcrb
fistps
xchg
fstl
out
gs
adc
jg
sbb
into
ljmp
std
imull
popa
mov
lds
inc
iret
mov
aas
imul
mov
push
xor
jno
negl
jl
mov
mov
repz
mov
push
mov
pop
out
fcomps
lcall
push
div
ja
fs
sti
mov
mov
outsl
data16
repz
lcall
jne
push
lods
sahf
ljmp
iret
arpl
cmp
lds
insb
dec
adc
dec
sbb
push
cmp
sysret
fildll
xchg
push
out
cmp
insl
xlat
call
out
cmp
dec
loope
adc
addb
add
in
and
outsl
sub
mov
ret
fstps
sbb
pushf
cmpsb
xchg
mul
andl
xchg
sbb
sbb
adc
push
ja
lea
adc
dec
add
xchg
arpl
adc
adc
fistl
lods
pop
sub
add
aaa
je
jne
xchg
mov
jne
push
filds
sub
cwtl
adc
test
inc
sbb
add
add
sti
movsb
cmpsl
repz
clc
cwtl
add
not
pop
cmpsl
int3
rorl
mov
mov
std
je
sbb
mov
push
dec
dec
and
dec
or
fwait
mov
rolb
mov
jmp
pop
jae
xor
and
jnp
push
popa
cs
in
leave
sahf
das
mov
push
test
movsb
cli
add
jne
repnz
call
mov
jb
aaa
js
shl
int3
sub
mov
popa
in
popf
and
fbld
jnp
insb
dec
jbe
cld
mov
mov
mulb
sbb
mov
out
pop
push
out
inc
xor
add
fcmovu
push
pusha
sub
bnd
mov
xchg
dec
dec
lcall
cmp
mov
call
ror
mov
or
int3
jo
icebp
pop
ret
lahf
and
stc
pushf
jp
rolb
setge
push
je
sarl
cmp
jnp
scas
xorl
dec
dec
jge
sub
jns
xor
into
lea
movsl
adc
dec
enter
pop
cmp
jmp
push
jp
pusha
dec
lret
adc
cltd
sbb
cld
fcoml
ret
cmpsl
test
mov
cmp
js
push
int
stos
test
sub
fldt
pop
jl
scas
pushf
rolb
mov
mov
jae
pop
inc
sub
fldcw
popf
xchg
fwait
push
cmpsb
xor
xor
leave
in
stos
testl
xor
outsl
dec
aas
loope
lahf
cmp
mov
mov
pop
in
ds
cmpsb
push
dec
mov
or
repnz
popf
dec
fsubrl
mov
jo
sarl
adc
fidivl
dec
mov
in
sub
shll
adc
aam
outsl
test
dec
insl
add
jae
insb
pop
icebp
dec
pop
xorl
in
add
jmp
rol
and
dec
xor
mov
cmp
push
stc
ljmp
out
leave
fwait
arpl
and
jle
push
cs
adc
in
dec
inc
daa
lret
sahf
out
lret
adc
pop
cmp
adc
mov
lcall
jg
mov
sarb
shl
pop
sbb
mov
sub
cmp
adc
sbb
jo
lock
and
insl
inc
add
mov
movsb
test
add
add
dec
pop
ds
push
out
or
cli
add
inc
inc
icebp
sbb
mov
shll
push
repnz
sbb
insb
notb
enter
and
pop
xchg
push
dec
pop
push
xchg
or
mov
cmp
xor
jns
mov
jmp
icebp
decl
sub
sbb
push
push
push
push
jge
cmp
cmp
dec
ljmp
imul
es
repz
xchg
js
cmc
add
pop
lcall
lds
insb
popf
sub
mov
push
adc
in
out
adc
movsl
mov
outsl
mov
rcll
cli
pushf
push
sbb
in
mov
aam
jmp
out
movsl
outsl
into
or
jg
push
jae
pop
xor
arpl
fs
sbb
in
jne
add
rcrl
xchg
jne
nop
dec
pop
fisubs
lods
mov
stos
xor
shlb
cmp
inc
cmpsl
or
fcoms
dec
movsl
aad
fistpl
js
push
xor
push
pop
or
push
scas
sub
jae
loopne
jno
scas
jo
imul
pop
cld
xorl
movsl
ret
fmuls
adc
rorl
int3
mov
mov
add
xor
les
shlb
dec
mov
or
mov
push
icebp
xchg
mov
xchg
leave
push
mov
xor
cli
xchg
xchg
cli
jnp
mov
xorb
push
sar
dec
sub
inc
arpl
jge
out
mov
xchg
jne
mov
pop
jmp
push
and
push
ja
xchg
sbb
aas
sbb
scas
fdivrp
or
fucomp
pop
jg
push
cmp
sub
inc
mov
xchg
fsubrl
sub
lret
popa
mov
inc
fbld
aaa
aam
inc
rol
jne
lret
insb
test
pushf
aad
sar
dec
jmp
test
scas
adc
pop
cmp
inc
xor
sub
sbb
mov
pop
push
cwtl
inc
mov
loop
iret
push
addl
fwait
xlat
dec
les
dec
jle
test
push
mov
xchg
or
adc
jmp
mov
dec
stc
loope
es
jne
lahf
dec
add
adc
fldenv
shlb
cmp
sub
insl
int3
pop
jbe
push
mov
xchg
add
pop
jns
lahf
pop
cmpsl
cmc
push
popl
cmpsb
movsl
jne
fbld
xchg
adc
mov
or
lock
aad
cmp
xor
test
jbe
test
jg
cmp
movsb
aas
mov
outsl
mov
cmp
xlat
test
imul
sbb
jno
jmp
push
sub
inc
jp
mov
cmp
or
add
push
adc
loopne
or
pop
aad
and
loopne
sub
and
cmpsb
fs
cvtps2pi
push
fstl
insb
test
push
inc
pop
jnp
xchg
int3
xor
test
mov
cwtl
into
pop
mov
out
jge
xor
cltd
dec
es
addr16
mov
enter
imul
xor
and
or
inc
mov
roll
sbb
dec
shll
adc
xlat
cmp
push
lcall
rcrb
add
ret
pop
pop
scas
sub
shrl
lock
inc
jg
mov
push
arpl
xchg
xor
sti
push
cmp
stos
cmc
stos
mov
pusha
mov
popf
ja
adc
jo
aam
push
mov
lret
cmpb
lret
int3
insl
les
jbe
sub
jno
cs
icebp
mov
inc
pop
mov
add
ds
test
pop
ret
and
sub
inc
mov
pop
fidivl
sbb
cmp
in
sub
xor
lret
lods
loope
push
pushf
jns
mov
jnp
jmp
pop
mov
push
mov
jle
decl
test
xlat
inc
xchg
pop
push
je
jne
push
cmc
dec
out
add
divb
pop
push
stos
sub
push
cmp
cmc
pusha
int3
pop
push
mov
imul
xchg
fsubs
push
inc
inc
lret
rcll
das
dec
jne
out
lods
lahf
push
js
ret
lea
xchg
adc
inc
jl
pop
rcll
js
insl
or
movsb
push
movsl
lahf
pop
andb
mov
jl
js
mov
mov
pop
mov
cmpsb
and
mov
xchg
lock
xchg
pop
sub
or
inc
inc
lods
ret
ret
pushf
xor
jmp
aas
inc
out
and
cltd
adc
xchg
mov
mov
push
xchg
cmpsb
sbb
push
jmp
mov
les
in
outsb
and
ja
push
jle
jno
xchg
cmp
fwait
stos
pop
or
lret
jbe
scas
add
es
icebp
sbb
loope
inc
jl
xor
push
fsubs
jl
mov
insb
addr16
in
not
dec
in
pop
enter
sarl
xchg
fcoms
lret
prefetch
mov
fwait
ds
mov
aaa
cmp
pushf
inc
loopne
fsubrs
xchg
push
xchg
xor
mov
sub
fisttpl
lea
push
inc
jge
add
xchg
js
cwtl
cmpsb
les
ret
and
inc
in
lock
mov
push
notl
mov
jae
and
or
arpl
adc
mov
xor
out
push
pop
lock
push
adcb
outsb
repnz
pop
dec
lock
or
sbb
int3
push
sub
bound
rorl
mov
aad
cmp
cmp
icebp
into
insl
pop
mov
and
sub
pop
xorb
call
movsb
rcl
aas
aaa
ljmp
test
imul
pop
scas
je
movsb
or
ds
xchg
push
inc
mov
fidivrs
jecxz
pusha
test
iret
mov
scas
sarb
call
or
std
push
jmp
ja
stc
pop
jns
test
mov
add
push
dec
or
int
popa
sub
mov
mov
pop
mov
push
dec
sarl
or
inc
sub
xor
pop
lea
movsb
int3
pop
jne
rcll
test
cs
pop
ss
or
std
mov
stos
add
or
enterw
or
leave
aad
popa
dec
inc
xchg
xchg
mov
mov
lds
fimull
call
add
mov
shlb
out
cmp
push
ss
addr16
aad
lods
jb
xchg
test
in
fildll
addl
xor
paddq
and
sub
xchg
out
mov
push
insb
mov
clc
rcl
pop
mov
in
sub
jno
pushf
pop
push
pop
rcll
into
jbe
jo
nop
ret
or
xor
cmp
cs
movsb
jnp
mov
shr
mov
or
shll
outsl
and
iret
push
hlt
insl
lods
jp
into
cmp
fbstp
lods
adc
mov
pop
popf
and
cmpsb
fwait
clc
pop
repnz
sti
mov
pop
cwtl
mov
fisubl
stos
lahf
ds
pop
mov
int
lea
cmp
mov
out
push
sub
push
inc
push
or
popf
mov
fldl
add
mov
rcrl
xor
hlt
out
push
popf
negl
xchg
mov
push
test
imul
ds
iret
cmp
lods
es
or
dec
and
add
jae
push
jno
outsb
negl
or
jae
xor
lds
js
cmp
das
fsubrl
xor
jecxz
cs
cmc
data16
xchg
mov
ficoms
dec
push
cmpsb
mov
sub
mov
cmp
pop
icebp
cmp
test
fmull
outsb
out
adc
fldl
imul
pop
ljmp
adc
jmp
sub
mov
jg
jo
pop
xchg
rcrl
or
stos
mov
cmp
lret
imul
scas
sahf
push
jae
xor
stos
insb
movsl
jge
xchg
jbe
mov
jl
scas
pop
cli
imul
mov
inc
and
es
iret
xchg
test
mov
imul
inc
push
push
push
lcall
imul
dec
pop
xchg
imul
int3
fsubr
mov
das
inc
jbe
cs
cmc
xchg
fimull
inc
daa
repnz
sub
aad
sub
leave
jb
rcr
lret
lcall
cmp
lret
add
pusha
inc
cmp
test
sbb
std
orb
pop
xor
leave
insl
mov
into
cmp
sti
int
std
mov
cmpsl
inc
xor
fxch
xor
jle
pop
jmp
mov
and
push
push
push
je
mov
mov
add
push
add
dec
mov
inc
add
mov
cmp
pop
jae
xchg
push
xchg
cld
inc
bound
cwtl
out
pop
cmp
fs
lret
dec
xchg
xchg
push
jle
ret
rol
inc
mov
xlat
xor
leave
xchg
callw
mov
loope
adc
cld
jmp
fnstsw
out
pop
outsl
xchg
aas
pusha
test
adc
mov
xor
lds
xchg
xorl
call
loope
call
and
and
fldl
add
and
push
pop
jmp
push
mov
repnz
mov
int3
or
and
add
sbb
mov
stos
sbb
jne
test
xlat
jmp
add
push
dec
sar
mov
mov
in
or
dec
insl
xor
jnp
int
push
popa
std
adc
push
hlt
cwtl
mov
jo
movsb
int3
mov
jae
mov
sub
push
mov
jns
hlt
mov
repnz
mov
aad
jg
test
cmp
addr16
in
jbe
fucom
mov
xlat
ret
cmp
les
pusha
add
pop
out
cwtl
dec
inc
xor
mov
or
or
flds
rolb
pop
ret
sbb
pusha
push
out
sbb
les
je
mov
ret
ds
mov
jge
dec
inc
ret
pop
pop
jmp
push
sbb
cmp
lahf
nop
inc
movsl
cmpl
adc
mov
lcall
jbe
fstps
pop
push
push
jns
int3
clc
xchg
je
adc
pushf
dec
pop
mov
movsl
sub
and
push
frstor
dec
pop
jo
cltd
dec
sub
or
push
dec
mov
cmp
shlb
push
cmpl
dec
pushf
cmpb
sbbl
in
xchg
sbb
mov
lods
inc
xchg
xchg
stos
addr16
jae
xchg
xchg
and
pushf
pop
add
mov
jl
jecxz
fsubs
dec
cli
mov
dec
aam
shrl
je
fnsave
cs
push
mov
sbb
xor
ss
cmpsb
sarl
popa
pop
lcall
add
or
mov
cli
sub
mov
inc
scas
push
xor
sub
test
push
test
xor
add
hlt
mov
dec
into
bound
ret
jg
mov
add
adc
cmpsl
sbb
movb
add
push
sbb
push
xchg
dec
hlt
js
mov
pop
imul
aaa
mov
rol
xchg
jg
sbb
sub
xor
leave
dec
mov
cmp
push
pcmpgtb
pop
leave
les
jl
xor
xor
cmp
js
in
or
cmp
pop
aaa
inc
fwait
adc
adc
daa
xor
rcrb
push
adc
lock
adc
mov
pop
cmp
pop
or
xor
or
sub
cmp
ret
inc
subl
xchg
mov
imul
ljmp
imul
jle
stos
and
pop
test
inc
jl
shlb
pop
mov
sbb
inc
hlt
repz
into
xchg
sbb
sti
cmpsl
mov
loope
das
mov
outsb
jmp
lahf
pop
rcr
inc
out
jno
rorl
push
and
pop
and
push
mov
fs
mov
mov
push
repz
add
xor
mov
repz
lods
push
inc
ds
dec
xchg
inc
xchg
and
mov
ljmp
insl
adc
xor
inc
xchg
or
fisttpll
les
mov
adc
cmp
cmc
adc
sbb
fbld
call
add
jo
and
imul
das
fadds
in
lods
call
add
out
sbb
jno
inc
sbb
cmp
sahf
or
jno
in
icebp
push
rolb
subb
mov
out
jnp
mov
out
mov
data16
fistl
test
mov
sbb
stc
lret
fxch
addr16
pop
xor
cwtl
lds
mov
or
aaa
fmull
sbbl
call
push
call
notl
push
cltd
dec
cmp
mov
fcmove
imul
std
int
mov
mov
mov
jge
dec
rcrb
mov
dec
cmp
movsb
daa
and
xor
mov
outsl
add
out
or
lea
mov
jae
cmp
fisttpl
push
pop
loop
xor
mov
or
fwait
jl
lret
jno
push
and
and
adc
shl
sbb
xor
mov
test
das
sub
jne
pop
andb
inc
ret
sub
jb
jp
sahf
and
push
test
xchg
add
jl
pop
test
inc
gs
adc
in
repz
call
cltd
ret
outsb
scas
push
jecxz
lock
pop
setns
fsub
rcll
repz
leave
adc
inc
dec
and
into
inc
xchg
mov
clc
mov
adc
cmp
rcrb
arpl
and
repnz
jae
push
movzbl
fcoms
adc
jg
movsl
push
add
call
push
into
repnz
pop
push
pop
int
movsb
sti
xchg
mov
inc
leave
outsl
test
imul
inc
aad
int3
in
daa
xor
rcl
push
dec
xchg
call
out
iret
push
into
xchg
mov
das
jo
xchg
pop
dec
jp
xor
mov
lret
jno
sar
pushf
lret
mov
push
and
inc
adc
jb
mov
jo
int3
sub
lds
push
pop
loop
mov
sub
add
and
cmp
test
cmp
push
pop
pop
push
mov
ds
dec
bound
xchg
dec
add
imulb
or
leave
dec
fadds
sub
mov
push
enter
stos
adc
mov
and
cmp
mov
adc
jbe
cmp
jge
or
hlt
inc
scas
lods
das
dec
cs
ds
leave
push
shrb
adc
add
jbe
sahf
andb
mov
xchg
push
push
std
lret
dec
fwait
repnz
ljmp
repz
inc
inc
jnp
sub
clc
pop
outsb
lods
mov
fs
push
jo
nop
stc
mov
lock
mov
ds
insb
stos
cmpsb
sub
out
loope
push
dec
repnz
mov
in
test
pop
or
and
cmpsb
sbb
jbe
lret
sbb
xor
xchg
push
pop
mov
or
and
sti
pop
je
mov
xor
jg
fcoms
mov
mov
sarb
mov
daa
pop
lock
mov
sbb
lea
imul
push
sub
cs
mov
mov
jp
ja
pop
or
push
les
mov
sahf
mov
cmpsl
xor
lods
xor
cmpsl
mov
in
sub
add
iret
xchg
cmpsb
jg
lods
and
lds
aas
cld
pop
cmp
jg
idivl
push
repnz
in
inc
cmp
js
pop
mov
inc
stos
ret
ljmp
inc
sarl
adc
push
add
leave
mov
xor
in
dec
mov
push
push
dec
mov
and
in
push
sahf
jmp
fnstcw
ja
or
adcb
insl
fcmovne
cmp
cmp
push
push
pop
cmc
jne
stos
cltd
push
pop
add
loop
mov
sbb
stc
push
test
add
fdivr
xlat
push
ficomps
adcb
mov
or
push
icebp
aaa
fs
ljmp
jmp
lret
mov
in
sub
test
push
stos
or
pop
xor
out
mov
push
mov
nop
and
stc
jb,pt
clc
xchg
jle
xor
aas
dec
hlt
arpl
loop
imul
pop
int3
scas
enter
add
bnd
lods
test
std
test
jae
xchg
xchg
cmp
pop
mov
lret
in
xor
dec
lcall
sub
dec
out
sbb
fidivrl
add
sub
add
aam
xor
lcall
pusha
sub
mov
push
notl
stos
push
mov
mov
or
push
or
push
lock
adc
pushf
mov
shl
stos
fsubrp
rcrb
addr16
stc
fisubrl
xor
out
inc
sbb
enter
sbb
adc
dec
rorl
mov
addl
jmp
push
int
pop
sahf
decb
scas
pop
push
imul
ljmp
mov
insb
sub
cwtl
ret
sub
aaa
clc
lret
xchg
mov
xchg
adc
adc
jae
sub
stc
cmp
out
jg
dec
mov
ss
mov
sub
loope
ficoms
lock
cld
ljmp
in
test
jbe
ds
add
and
leave
sahf
add
sbb
dec
and
ljmp
xor
out
cmp
pop
cmp
aaa
sbb
cmp
dec
and
jle
jmp
lods
dec
push
inc
cmp
adcl
cmp
imul
cmpsl
pop
add
int
mov
mov
inc
call
adc
jnp
in
stc
adc
andb
add
sub
or
ljmp
cmpsl
push
jnp
sub
or
sahf
bnd
xlat
jnp
stc
sbb
shlb
sbb
or
cmc
dec
inc
rcll
or
decb
fdivrl
roll
mov
push
inc
xor
pop
lret
dec
ja
call
arpl
shrl
aaa
xor
scas
mov
push
push
movsb
in
jnp
cli
cli
sti
aas
inc
sahf
or
sub
mov
lahf
sub
daa
scas
or
mov
cs
lret
aaa
mov
aas
pop
out
mov
outsb
jp
pushf
sub
cmp
adcb
adc
and
dec
sti
insb
mov
addl
ljmp
cmpsl
push
pop
es
push
dec
xchg
out
mov
icebp
pop
aam
scas
jmp
adc
and
stos
mov
jl
push
push
cmp
push
xchg
jo
cmpsb
leave
out
cld
mov
xchg
pushf
inc
inc
mov
push
adc
fstpt
pop
test
and
aam
xchg
addr16
jno
test
scas
out
cmpsb
mov
std
pop
icebp
int
push
cmp
cmp
jecxz
push
ss
push
aam
xlat
popf
arpl
mov
enter
push
xor
xor
push
or
adc
loope
loope
xchg
xchg
push
movsl
mov
hlt
int
cmp
mov
fs
out
movsb
lcall
mov
mov
adc
test
jnp
imul
mov
or
repz
and
push
push
int3
std
add
sub
das
dec
ljmp
int
pushf
xchg
push
fsubrs
lahf
rclb
imul
jp
cmp
or
add
movsb
cmc
sub
subb
sub
shlb
inc
jno
adc
les
mov
push
adc
out
insb
xchg
imul
cs
or
ret
cmp
sub
insl
adc
cmp
stos
sub
mov
pusha
pop
sub
dec
jno
je
bnd
add
add
bnd
mov
sub
dec
inc
add
rorl
mov
movsl
add
pop
std
mov
sahf
sbb
loop
sub
pop
pop
push
repz
xchg
nop
das
in
xchg
cmp
jno
jp
push
jns
cltd
aas
sbb
xchg
hlt
imul
cmp
mov
inc
inc
fcomps
int3
mov
push
mov
int3
cmp
jg
mov
clc
push
in
inc
inc
mov
or
les
cmp
sub
and
insb
sub
mov
test
xor
push
pop
inc
and
pop
jge,pn
hlt
cmpsb
data16
sbb
fistps
scas
imul
xlat
test
xchg
je
aaa
aam
jg
add
mov
or
and
enter
inc
out
stos
repz
lcall
mov
mov
pop
or
leave
sbb
xor
and
pop
mov
inc
pop
pop
sbb
mov
loopne
inc
movsb
lods
push
xchg
loopne
daa
out
pop
iret
lds
arpl
pop
jnp
mov
or
push
lods
cmpsl
xchg
out
ret
pop
in
adcl
roll
adc
shl
dec
or
jb
jne
jge
push
leave
lea
add
mov
or
mov
mov
gs
stc
rclb
pop
add
or
inc
sub
pop
push
pop
out
sar
dec
push
add
fcomp
sub
push
mov
mov
dec
push
fsubl
mov
jbe
adc
mov
adc
cmp
repnz
and
fmuls
jl
mov
dec
lock
pusha
xchg
pop
jg
cmp
sbb
icebp
sti
movsl
adc
dec
sbb
out
mov
faddp
sbbb
add
push
mov
lret
ss
inc
test
cwtl
outsl
outsl
or
aas
jmp
xchg
or
sub
int
int3
adc
cmp
sbb
leave
or
nop
inc
pop
loope
mov
and
cmp
insl
pop
lea
dec
jne
sub
sbb
cmp
jl
movsl
aad
subb
movsb
jl
movsb
nop
data16
lds
sbb
paddw
fs
ret
insl
sar
xor
mov
gs
insb
insb
rorb
mov
cmp
cmpsl
add
mov
int
les
in
rclb
xchg
mov
mov
pushf
int3
iret
sbb
movsl
test
aam
or
xchg
mov
push
and
js
popf
xor
insb
mov
lret
ja
into
sub
and
xor
repz
popa
xor
fwait
adc
xor
out
jbe
test
xlat
cmp
pop
test
dec
out
lret
mov
ja
mov
xchg
in
test
mov
mov
montmul
cmpsb
ret
inc
fldt
or
inc
jmp
shlb
lock
fcoml
sub
dec
cltd
imulb
loopne
lds
cli
adc
sub
mov
pop
or
rep
out
pop
lcall
mov
xlat
lret
sbb
cli
bswap
jno
sub
pop
hlt
xchg
pusha
dec
lods
shll
out
js
cmp
fisubs
adc
push
int3
test
sbb
and
fisubl
ss
stc
cmpsl
and
arpl
bnd
hlt
dec
dec
test
addr16
lahf
mov
dec
pop
adc
js
int3
insb
imul
jae
and
js
or
pop
jb
enter
rcrl
inc
pusha
fwait
roll
xor
fcoms
jle
jne
cwtl
rcrb
hlt
mov
add
ret
loopne
aam
jnp
pop
out
mov
cwtl
out
lcall
nop
in
dec
dec
and
inc
adc
add
jp
mov
cmp
scas
lret
add
pop
dec
out
dec
repnz
sti
mov
mov
dec
aad
sbb
xlat
pop
stos
jg
notl
test
shr
int3
jl
adc
and
sub
sbb
mov
das
xor
gs
inc
xorl
lahf
ret
xchg
xchg
mov
and
and
out
add
dec
cmp
cltd
fadds
cs
dec
popa
and
pop
lret
in
dec
rolb
sub
xchg
mov
roll
and
imul
push
pop
push
andl
sahf
test
xor
pop
nop
adc
stos
cmp
mov
arpl
pop
mov
nop
push
andl
into
ljmp
mov
je
adc
mov
push
mov
mov
clc
xchg
xor
add
aad
jns
xor
jl
mov
stos
cmp
and
call
xchg
jbe
loopne
dec
loop
in
cmp
mov
push
insl
jmp
test
pop
movsl
mov
xchg
enter
pop
add
adcb
test
out
push
orb
sub
pop
push
lock
cwtl
popf
hlt
das
add
mov
cmp
ja
ret
insl
popf
pop
mov
negl
mov
insl
cs
notl
pop
fmuls
sbb
xchg
mov
decb
test
hlt
insl
shll
insb
pop
scas
fistl
aas
icebp
cli
loop
jmp
inc
mov
or
xchg
cwtl
movsb
xor
das
rcr
pop
jmp
scas
and
not
pcmpeqb
repz
mov
aam
mov
or
cmp
sbb
sub
jg
daa
fmuls
arpl
clc
in
shrb
xor
xlat
mov
mov
fdivrl
xor
rolb
add
mov
js
out
nop
stos
mov
ss
push
jns
ret
aas
rcrl
out
je
and
cld
sub
cmp
fidivrl
mov
fwait
pop
insl
loope
fisubs
inc
stos
pop
adc
cmc
xlat
ljmp
or
jno
negb
int
mov
and
lcall
xor
jb
jne
test
push
push
and
test
orb
nop
push
lds
add
daa
xchg
xchg
dec
or
cmp
insb
stos
mov
test
nop
pop
jmp
neg
ja
push
jmp
and
lcall
repz
or
addl
push
in
mov
sub
sbb
lods
lcall
xor
test
inc
and
std
subb
das
cmpsl
or
jo
cmp
repz
aas
cli
xor
push
dec
and
fimull
cs
sbb
mov
test
sti
inc
in
aad
inc
sub
cs
call
inc
sub
sub
jae
aaa
sub
hlt
cmp
pop
mov
scas
outsb
stos
mov
in
jnp
mov
cs
jb
adc
fnstcw
popa
sub
jl
loope
mov
xor
pop
mov
xlat
mov
ds
mov
test
repnz
mov
adc
scas
dec
add
in
hlt
jne
cmp
stc
outsb
loop
cmp
and
hlt
lds
xchg
lods
inc
sar
pop
xchg
test
aaa
add
arpl
loope
imul
jno
repz
mov
es
xchg
mov
inc
sub
and
and
repz
dec
sbb
test
dec
out
and
add
mov
inc
cltd
pop
lock
loope
loop
dec
js
pop
adc
fadd
sub
insl
xlat
jns,pn
inc
mov
xor
lock
inc
push
add
aaa
lea
js
push
daa
sub
repz
orb
sub
mov
mov
cwtl
mov
pop
mov
ret
scas
pop
adc
dec
jne
cs
add
jo
cmc
add
hlt
pusha
leave
insb
lcall
in
fs
sbbl
lods
out
dec
sbb
push
repnz
aam
imul
and
addb
dec
sub
les
movsl
adc
insl
mov
hlt
cmp
pop
out
sub
mov
ljmp
lret
nop
xor
data16
mov
xchg
pusha
sar
cld
adcb
sub
mov
or
imul
jns
push
mov
aad
notl
pop
popf
xchg
add
sbb
shl
xor
mov
lahf
repnz
adc
xor
or
lret
mov
hlt
faddl
dec
inc
dec
add
rclb
pand
pop
cld
mov
subl
pop
mov
inc
test
test
jmp
add
insl
dec
adc
add
mov
adc
cltd
pop
std
dec
sbb
inc
push
inc
dec
insl
fwait
inc
jge
jmp
dec
in
or
mov
mov
movsl
pop
sub
ds
int
cmpsl
mov
rol
and
xchg
dec
push
push
adc
test
inc
xor
loopne
jb
into
sub
inc
and
mov
out
stos
inc
xchg
mov
in
sub
dec
daa
dec
es
cmp
dec
push
push
inc
loop
add
xchg
jne
push
and
jle
aas
inc
das
mov
or
test
dec
fwait
push
xorl
lret
pop
inc
fnstsw
dec
push
and
or
sbb
mov
mov
popa
cmpsl
jne
mov
fidivs
sti
xchg
lods
mov
aaa
mov
je
sub
fldl
lods
sbb
mov
lea
aad
push
sbb
inc
add
pop
adc
neg
or
stc
ja
adc
or
mov
scas
xchg
repnz
dec
outsb
cmp
adc
ds
loopne
inc
add
jns
repz
pushl
je
cmc
jnp
dec
insb
sub
mul
sidtl
xchg
mov
jp
xchg
dec
cmp
pop
aad
cmp
sub
adc
push
dec
jb
cmpsl
push
fisubrl
sbb
aaa
mov
leave
sbb
push
sub
jl
or
adc
push
xchg
mov
cmc
loop
sub
lods
xchg
ret
stc
and
xor
add
shlb
shlb
lock
mov
popf
mov
repnz
sub
push
push
mov
xchg
stos
test
sbb
or
dec
jne
mov
fwait
pop
push
sti
cli
pop
aaa
adc
mov
pushf
inc
lret
xorb
lcall
lods
add
xchg
mov
jae
inc
out
sub
pop
fisubrl
jnp
push
aas
mov
push
xchg
push
pop
adc
movsb
lods
inc
sbb
inc
bound
mov
in
fdivr
movsb
jmp
inc
outsl
mov
sub
xchg
popa
or
mov
addr16
sbb
xor
ja
inc
pminub
cmp
int
loopne
cmp
push
mov
rcrb
sbb
pop
ret
jmp
pusha
pop
ljmp
inc
stos
sub
sub
idiv
and
decl
in
adc
mov
xchg
push
aad
sub
mov
int3
std
mov
sbb
mov
pop
data16
imul
rol
sub
xchg
mov
xchg
test
aad
mov
lcall
mov
aam
stc
ja,pt
hlt
ss
dec
jmp
inc
add
cmp
rolb
mov
push
push
xchg
ss
mov
aas
fwait
mov
sbb
push
xchg
jle
test
sbb
mov
jmp
xchg
mov
adc
mov
jnp
inc
lcall
jno
ret
mov
xchg
outsb
fcoms
cwtl
stos
sahf
inc
cmp
aam
push
mov
in
hlt
mov
pop
xorb
inc
jns
cmp
dec
adc
mov
push
xchg
sbb
cmp
pop
cmp
xor
xchg
popa
xor
mov
push
shr
daa
mov
repnz
sti
pop
xor
push
dec
clc
sbb
and
fimull
push
mov
cli
ss
or
out
mov
imul
sub
mov
lret
dec
pop
std
icebp
jecxz
fs
das
and
cmc
sahf
ds
dec
in
ret
sbb
xchg
inc
add
jo
mov
je
nop
ror
push
or
test
stos
add
fiadds
mov
fnsave
bound
or
and
inc
sbb
das
lods
mov
push
adc
cmp
cli
sti
inc
lret
and
pop
cli
rclb
roll
sbb
mov
mov
lods
inc
adc
add
push
fstpt
xor
xchg
call
fsubrl
out
call
aas
push
mov
push
push
test
adc
dec
pusha
fcom
lret
mov
adc
adc
sbb
cmp
inc
popa
mov
cmp
loop
adc
out
sub
cmp
push
call
xlat
sahf
loop
inc
fidivrs
jle
jns
jp
fcomi
gs
push
mov
cmp
push
xlat
ret
push
rcrl
sahf
xor
mov
imul
loopne
jne
dec
out
lret
cwtl
out
pushf
rorl
das
jbe
daa
mov
enter
adc
add
xor
push
mov
mov
rclb
inc
shll
mov
jp
dec
sbb
pop
pop
test
gs
mov
mov
cmp
xor
add
cmpsl
sub
jb
push
sti
xchg
cltd
aas
in
xchg
jecxz
pusha
pop
jne
cmp
cmp
sbb
std
inc
arpl
mov
or
pop
xchg
or
inc
push
mov
cmpsl
loop
cmp
adc
out
icebp
pop
xchg
adc
push
test
mov
xchg
jne
iret
insl
jg
inc
cmp
xor
ljmp
or
sti
mov
push
ret
mov
push
mov
out
stos
jno
mov
loop
nop
pop
adc
add
add
push
sbb
pusha
xchg
sbbb
xchg
scas
inc
or
inc
int3
out
dec
sbb
fwait
or
js
es
insb
aaa
dec
insl
push
xor
xor
notb
or
stos
aaa
jb
icebp
outsb
and
xor
test
adc
stos
ret
rclb
cli
nop
adc
repz
cmp
into
leave
lods
fsubs
cmpb
adc
in
mov
sbb
fidivrs
mov
xchg
bound
or
adc
mov
and
daa
push
repz
inc
in
sub
xor
imul
loopne
add
pop
xor
cmpb
incl
mov
adc
mov
lods
mov
mov
sahf
movsl
xchg
pusha
mov
push
inc
mov
sbb
add
repz
ds
xchg
lret
fisubrs
aaa
lret
in
out
xchg
xchg
sub
mov
adcl
es
lcall
movsl
xor
enter
loop
push
sbb
jno,pt
or
es
pop
push
inc
inc
cmp
mov
test
cmp
add
rcll
ja
jae
or
xchg
mov
jmp
inc
xor
push
add
cmp
mov
add
mov
icebp
loopne
jecxz
jae
and
insl
fs
pop
jp
popf
das
inc
insb
sub
gs
outsb
das
movsb
enter
mov
hlt
and
dec
dec
cli
pop
ds
xchg
xchg
ss
mov
and
hlt
lods
xchg
sarl
sub
jg
test
mov
xor
sbb
xlat
repz
dec
jmp
inc
shl
cld
inc
lock
or
outsl
addr16
lock
testb
or
and
out
fstl
loopne
out
decb
in
jo
push
ja
mov
sar
in
push
gs
mov
loop
add
cmp
out
adc
aas
xor
mov
xchg
inc
cmp
fbstp
fs
push
jb
jbe
lahf
cmpsl
adcl
pop
pop
ret
push
shll
mov
adc
pop
sub
mov
icebp
sub
stos
and
aaa
cwtl
pop
lcall
test
mov
in
xchg
jns
scas
outsl
pop
out
dec
into
ret
shll
sub
jb
xchg
ja
ljmp
jno
pop
mov
xchg
xchg
pusha
push
adc
push
jne
mov
push
out
iret
jg
cli
into
clc
mov
add
mov
ja
pusha
sub
sbb
stos
mov
and
push
xchg
sahf
mov
jecxz
mov
or
mov
push
rcll
inc
cltd
mov
outsb
xchg
stc
mov
fidivrs
xor
ficoml
pop
jecxz
sahf
outsl
je
sbb
mov
aam
std
mov
xchg
ds
and
inc
dec
push
lret
lea
lret
imul
outsl
or
dec
and
enter
fxch
jnp
and
mov
push
push
mov
pop
xor
cwtl
pop
xchg
arpl
inc
sahf
lret
sub
cli
scas
adc
pop
sarb
fdivs
in
mov
xchg
cld
jg
sbb
inc
xchg
imul
mov
fwait
in
in
cmpl
stos
adc
lcall
pop
arpl
stc
mov
cmp
fnstsw
imul
in
test
imul
sahf
cmp
xor
xchg
xor
or
cmp
push
insl
cmpsb
adc
push
fucomp
inc
bound
mov
xchg
add
adc
cmp
in
push
stc
jg
pusha
stos
jnp
xor
clc
roll
scas
in
sbb
push
addr16
sub
lahf
pop
lcall
adc
mov
in
push
lock
or
jmp
sub
fs
in
push
hlt
add
push
dec
sti
mov
out
or
pop
out
lahf
fldcw
fisttps
jge
mov
lahf
or
das
sahf
loopne
jo
loope
xor
fs
fdivs
adc
pop
out
insl
push
xchg
sbb
pop
push
sub
xchg
mov
mov
arpl
push
cmp
out
repnz
stc
scas
mov
sub
iret
adc
in
lcall
xchg
loopne
xchg
adc
sarb
loope
fwait
cmp
and
and
arpl
push
adc
scas
inc
popa
push
or
adc
pop
enter
adc
sbb
xchg
sbb
lds
cmpsl
jno
jne
jp
in
pop
cmp
xchg
mov
repz
fcomi
inc
pop
mov
out
push
sar
adc
imul
out
clc
xchg
mov
add
push
pushf
mov
add
jmp
add
je
xor
adc
test
pusha
or
out
mov
sahf
pop
push
inc
arpl
in
dec
xchg
or
sub
testl
jecxz
testb
xchg
adc
test
hlt
cli
data16
sti
dec
adc
push
or
xchg
fucomi
cmp
jno
pop
mov
ficoms
fistl
mov
xchg
insl
xchg
jge
fists
mov
outsb
jl
pop
in
pop
jne
lahf
in
mov
js
pop
and
xchg
add
mov
adc
mov
pop
mov
mulb
movsl
inc
decb
nop
mov
push
fimuls
push
fiadds
fwait
sbb
movnti
mov
mov
dec
jmp
lret
and
push
adcl
push
mul
and
sbb
sub
cmp
or
mov
or
ret
jo
sbb
js
cmp
outsb
ljmp
mov
inc
insl
sbbl
out
movsl
mov
push
xor
cmp
dec
sub
in
imul
jns
pop
or
in
out
and
dec
pop
cltd
or
fldl
mov
pop
not
or
or
in
in
aaa
fxtract
add
stos
subl
repnz
dec
test
pushl
cmpsb
push
imul
in
out
aaa
pop
repnz
mov
mov
or
nop
or
cwtl
sahf
xchg
push
sub
scas
repnz
hlt
pop
xchg
mov
nop
dec
in
hlt
inc
cmpsl
pusha
push
outsb
push
cmp
push
pushf
loope
xlat
repnz
int3
rorb
xlat
sbb
jle
cltd
into
ds
sub
mov
inc
cld
int
icebp
jnp
and
lock
inc
stc
mov
xchg
pop
adc
adc
mov
ss
pop
mov
push
aaa
cmp
jo
adc
inc
push
cmp
pop
sub
sub
scas
dec
inc
jecxz
stc
mov
jb
adcb
outsb
in
or
mov
and
or
push
jo
dec
sbbl
mov
fistpll
push
arpl
lcall
push
mov
mov
pop
or
jmp
dec
mov
adc
xor
pop
shlb
push
out
sub
cmp
dec
xor
cmp
lret
popa
pop
stos
and
add
mov
call
sbb
mov
xor
es
cmp
sbb
dec
push
adc
sub
pop
xor
push
es
outsl
add
pop
in
fimull
add
sbb
ja
movsl
testb
out
inc
add
in
dec
addr16
adc
sub
xlat
ss
inc
dec
dec
mov
xchg
xor
rcl
push
rclb
dec
jae
xchg
mov
out
mov
pop
rolb
cmp
fsubrs
push
sub
adc
jo
ja
imul
pop
push
xorb
stc
jo
scas
push
pop
pop
shll
or
xchg
lahf
imul
out
inc
sbb
int3
test
and
adc
lods
fadds
divb
lods
scas
fsubrl
stc
fmull
mov
mov
sub
out
icebp
push
addr16
pop
insl
lods
cmp
hlt
sbb
jae
rclb
in
std
sbb
adc
mov
loop
push
push
mov
rclb
cmpl
rorl
enter
adc
test
js
push
lcall
jbe
push
lahf
leave
into
cld
dec
xchg
lods
push
ss
mov
or
fs
dec
lds
push
or
test
cmp
sub
pushf
mov
call
aam
push
sbb
lcall
es
xorb
add
out
data16
sti
adc
jno
mov
dec
test
add
scas
pop
xchg
jnp
pop
icebp
sbb
jg
cld
out
inc
xor
outsb
adc
jg
pusha
aad
fst
cmp
xchg
fstpt
mov
repz
or
and
int
data16
mov
cmp
jecxz
lock
mov
mov
mov
into
pushf
sbb
sahf
aad
frstor
mov
movsb
push
lods
pop
inc
adc
clc
pop
rcll
jnp
mov
imul
lods
mov
adc
inc
lahf
mov
and
push
cmp
lds
add
mov
inc
ss
push
data16
pusha
xor
pop
popf
enter
mov
pop
push
inc
jo
jle
xchg
inc
popf
inc
xor
imul
and
push
aaa
int
jno
stos
inc
pop
push
push
add
jecxz,pt
jmp
in
js
fdivrs
cmp
adcb
in
and
shrl
xchg
lcall
cwtl
in
dec
insl
push
cli
pop
lods
jne
mov
adc
xchg
mov
sbb
ss
pop
inc
cmpl
lcall
test
inc
sahf
movsb
mov
cmp
fs
testb
ficompl
rorb
and
pop
mov
insl
push
jmp
cld
inc
fdivl
ret
jno
adc
pop
inc
rclb
imul
and
push
inc
dec
loope
scas
jno
adc
sbb
sub
shrb
lret
inc
ja
add
jle
jbe
jge
sbb
jle
lea
mov
int3
mov
jl
push
shlb
rcrb
mov
lods
mov
dec
add
add
shlb
loop
sub
xchg
movsb
and
ja
loop
out
je
ret
adc
jbe
pop
fisubrl
and
stos
push
cli
sahf
or
jmp
xchg
cmp
jo
inc
mov
xchg
adc
aam
insb
mov
pusha
aam
mov
test
mov
in
cwtl
jns
lret
mov
xchg
xchg
sarl
jmp
clc
stos
ss
push
jg
in
imul
add
mov
call
inc
jbe
icebp
sub
cmpsl
insl
out
inc
dec
mov
scas
sbb
mov
push
arpl
and
push
icebp
and
aaa
leave
inc
test
xchg
pop
shll
pop
stc
jecxz
test
imul
or
sarb
fmuls
inc
insb
imul
cltd
stc
stos
adc
test
pop
jle
cvttps2pi
xor
cmp
dec
mov
pop
inc
and
lods
int3
xor
xchg
fisubrl
icebp
in
cmp
cli
data16
into
pushf
sarl
loop
in
movsl
iret
dec
popf
or
mov
in
and
mov
cmp
or
push
daa
data16
xchg
sub
es
mov
cmpsl
push
outsb
movsl
push
cmc
loopne
sub
lea
pop
lea
das
aaa
nop
mov
sub
sub
or
in
mov
sbb
mov
dec
repz
push
cwtl
les
lret
xor
mov
pop
sub
dec
insb
mov
jge
lahf
jmp
xchg
fs
imul
jb
push
sub
lsl
mov
addr16
jns
into
mov
xor
mov
mov
mov
dec
dec
movsl
dec
mov
mov
popa
push
into
loop
xchg
xchg
incl
shll
jae
dec
xchg
pop
and
jge
mov
adc
or
and
jle
adc
les
mov
scas
mov
or
adc
mov
int
xchg
push
aaa
es
push
repnz
mov
ret
lds
pop
push
lock
add
mov
sub
fcomip
in
xchg
ja
cmp
or
pop
push
stc
iret
xor
xchg
adc
sub
cmpsl
call
jp
aam
stos
lds
cwtl
jp
jecxz
leave
fmuls
mov
mov
js
mov
add
ds
xchg
xchg
dec
dec
xchg
bound
pop
imul
xchg
xrelease
repnz
dec
and
rorl
sub
out
xchg
xor
add
lcall
ljmp
rcl
sbb
xor
dec
repz
cmp
movsb
in
mov
fcompl
mov
shrl
mov
fcomi
cmpsl
mov
or
fcmovnbe
sahf
mov
in
pushf
mov
jecxz
xchg
push
iret
mov
faddl
mov
and
sbb
mov
fcomps
mov
ljmp
add
in
pop
mov
sbb
mov
ret
js
cmp
sub
adc
fnstenv
sbb
cld
sbb
inc
add
sbb
push
and
xchg
jae
outsl
sbbl
insl
lea
into
cli
lea
lods
push
jecxz
mov
loop
pop
scas
sbb
scas
leave
push
cmp
ja
fwait
pushf
pop
outsl
xorb
cmp
dec
xor
push
movsl
mov
mov
imul
push
xor
insl
mov
mov
lea
mov
test
pop
xor
sahf
xlat
xchg
pop
fdiv
push
sbb
lds
cs
jp
and
js
mov
dec
bound
cwtl
cltd
inc
js
int
jbe
fidivl
int
insb
xchg
dec
xor
xchg
in
sbb
cld
mov
jae
jl
fdivr
and
clc
mov
dec
add
les
dec
adc
and
orl
lret
add
adc
jle
xor
scas
test
cmp
into
xlat
pushl
pop
and
inc
xchg
rcll
jg
pushl
mov
and
adc
into
mov
pusha
adc
jns
jne
mov
stos
lea
cmp
add
add
sub
and
popf
cltd
imul
repnz
push
aaa
xor
xchg
out
jp
out
push
push
cmc
jge
push
arpl
mov
fs
lods
adc
rorb
pop
cmp
test
push
loop
dec
dec
or
jmp
push
sti
sbb
sbb
stc
push
inc
ret
orl
dec
and
lcall
les
cs
lcall
jno
rolb
arpl
fldenv
mov
outsb
inc
icebp
mov
cmc
inc
xchg
mov
fcmove
iret
mov
les
ljmp
sbb
cmc
sub
fs
jl
sbb
xor
lret
pop
orl
xor
and
imul
ss
shlb
push
gs
nop
imul
adc
jecxz
rcl
inc
xchg
das
nop
jmp
call
aad
pop
mov
lods
mov
sub
jbe
mov
add
jmp
pop
and
pushf
cli
or
fstpl
xchg
popa
pop
or
loope
adcl
sub
js
dec
push
outsl
ret
sbb
lods
jle
xchg
dec
mov
cmc
imul
pop
lcall
xor
imul
inc
adc
test
adc
mov
ljmp
mov
insl
mov
adc
adc
je
sub
sub
in
xor
and
aam
pushf
xor
adc
addl
lods
fucomip
add
inc
ljmp
movsb
dec
sahf
adc
adc
mov
stos
jmp
adc
xor
mov
in
out
stc
cmp
jg
and
movsb
dec
xchg
lahf
inc
rcrl
mov
or
jbe
cltd
mov
mov
pop
mov
pop
cmpsb
int3
mov
jmp
push
push
mov
inc
ljmp
inc
test
test
loop
stos
mov
ret
das
sub
add
daa
inc
mov
sbb
jp
inc
sub
adcb
cmp
sbb
imul
aam
xor
adc
jno
push
and
dec
sbb
test
xchg
push
fwait
sub
xchg
aad
xchg
and
add
sarb
pop
dec
mov
pop
mov
inc
std
insl
idivl
push
enter
jge
inc
and
test
mov
icebp
in
mov
test
dec
add
cmp
ret
sbb
or
pop
push
inc
out
push
mov
in
adc
rorl
xchg
jb
dec
negl
and
je
cwtl
xchg
call
jle
or
fstpt
xor
fiaddl
sbb
jecxz
push
daa
lcall
push
xor
xlat
fadds
sbbl
jo
xor
mov
and
sbb
cmpsl
fistpl
sub
enter
cmp
dec
jns
and
data16
mov
push
pop
lea
push
pop
les
add
jp
sbb
outsb
or
aam
lods
sbb
repz
je
jbe
sbb
clc
mov
pop
imul
je
sub
add
out
rcrb
mov
rorb
stos
adc
in
xlat
fisttpll
mov
sub
mov
sbb
dec
sub
sub
out
out
xor
or
sub
mov
pop
in
mov
mov
xor
inc
aad
sti
clc
pop
mov
bound
adc
mov
repz
sbb
sbb
mov
ja
pop
das
jnp
arpl
jl
les
into
push
into
cmpsb
adc
pop
jno
cld
cmp
or
xchg
jne
pop
adc
dec
inc
add
xchg
inc
xchg
xor
imul
mov
cmp
hlt
lods
pop
cld
fimuls
idivb
out
mov
adc
lock
ss
nop
mov
scas
outsb
test
fwait
inc
ja
test
and
mov
mov
shrb
push
mov
inc
ds
dec
ss
ljmp
out
sub
inc
out
pop
xchg
cmc
mov
rolb
push
scas
mov
sarw
and
mov
out
aam
jae
icebp
mov
add
int3
or
popa
mov
fstl
nop
stc
and
fsubl
xchg
adc
pop
sahf
cmc
cs
cwtl
or
sbb
mov
xlat
nop
pop
mov
mov
xchg
aas
push
xchg
xor
cmpsl
sbb
jns
xor
push
cmp
movsb
call
fnstsw
adc
or
aaa
lcall
pop
inc
negl
pop
xchg
in
fwait
push
rorb
xchg
cld
adc
jl
pop
ficompl
loope
xchg
xor
test
mov
imul
into
jne
and
add
adc
loop
sub
aad
jle
jb
insb
dec
call
fwait
orl
stos
repz
stc
icebp
bound
imul
sbb
sbb
fcmovu
inc
fstpl
mov
cmp
cmc
cmpsb
mov
mov
mov
daa
adc
xor
fbld
aas
inc
call
inc
inc
daa
movsl
imul
cld
pop
push
xchg
outsb
xor
and
cld
aas
rcl
xchg
pop
mov
push
testb
sbb
das
or
pop
sbb
xor
jp
enter
cwtl
dec
jno
xor
sbb
cmpsl
daa
adc
cmp
sbb
cmp
dec
push
outsb
cmp
test
int
lahf
loopne
fisubrs
mov
sbb
push
ja
adc
cmpsl
hlt
sbbb
xchg
mov
add
pop
aam
cmpsb
mov
push
cmp
and
scas
cmp
mov
inc
leave
dec
add
and
dec
gs
clc
decl
and
push
ret
test
xlat
mov
sbb
dec
cmpsb
gs
pop
mov
clc
inc
xchg
dec
sahf
or
mov
rcrl
lock
xor
cltd
add
das
int3
and
ja
xor
sbb
push
fstps
es
push
mov
mov
movsb
fdivs
or
js
add
or
and
popl
es
pushl
rorb
inc
jl
pop
mov
mov
sbb
xchg
std
dec
xchg
pop
xor
int
dec
xor
out
mov
insb
cs
xchg
cwtl
fcmovnbe
mov
pop
stc
jmp
mov
pop
aam
pushf
sub
sbb
pop
lcall
adc
xchg
arpl
lods
aam
icebp
cmp
jnp
into
lret
insl
jae
cmp
mov
and
pushf
int3
cmp
aad
add
and
aad
movsl
xchg
cmpsb
fdivr
adc
adc
pop
hlt
cld
xorl
push
push
scas
fbld
out
shlb
repnz
push
sub
cmpsb
rorl
or
add
out
cld
cmp
push
and
roll
jo
imul
xlat
fwait
xchg
adc
fsts
cltd
cmp
mov
fwait
repnz
jb
cwtl
popa
mov
aam
push
and
mov
ljmp
in
pop
out
adcl
jo
mov
lock
xlat
mov
icebp
or
mov
push
push
mov
pop
dec
dec
jbe
or
fwait
shl
enter
into
xor
mov
add
int3
movsl
test
add
popa
mov
lods
loop
push
in
push
inc
cltd
lcall
push
sahf
aas
rclb
push
or
jbe
stos
inc
jae
mov
xchg
dec
mov
flds
jbe
push
or
mov
xchg
ja
cmova
sub
addr16
test
xchg
jne
out
movsb
lds
test
mov
sbb
sbb
mov
test
insb
mov
test
aaa
mov
jae
cmp
imul
lds
mov
cmp
ret
jb
clc
add
sub
add
pop
in
out
outsb
repnz
xchg
subl
pop
or
xlat
cmp
aas
dec
adc
pop
sti
dec
sub
sub
sahf
lock
cltd
pop
popf
pop
clc
pop
and
push
jne
xor
and
cltd
daa
test
stc
insl
sub
cltd
sbb
push
std
and
jo
int
mov
dec
ret
ds
out
cmc
aam
xchg
cmp
rorl
inc
mov
mov
and
sbb
jb
shlb
mov
adc
cmpsl
js
xchg
fdivrs
fwait
cmp
push
ror
mov
push
pop
cld
lods
adc
fists
sbb
xchg
lods
enter
mov
sbb
cmp
and
stos
call
aam
and
xlat
cmp
cmpsb
aaa
jge
jae
ljmp
cmp
inc
scas
psubb
push
xor
call
ja
pusha
push
dec
ss
mov
in
ret
xor
cmp
scas
cmpsl
cmpsl
pusha
dec
mov
mov
sahf
loope
xchg
mov
aas
lock
fdivrl
sub
push
mov
fmuls
pop
push
pop
out
push
loope
call
cld
mov
pop
leave
test
adc
cwtl
icebp
cli
mov
int
flds
mov
mov
jp
add
movsb
adc
sbb
leave
push
shll
sub
inc
mov
adc
and
push
insl
push
stc
scas
fnstenv
adc
or
les
lcall
add
mov
jbe
les
pop
int3
mov
test
cmpsl
add
pop
and
arpl
inc
stos
xchg
ds
dec
insl
out
or
jb
mov
int3
and
cltd
movsl
inc
xchg
or
fnstcw
flds
js
push
mov
or
sbb
negb
ret
test
jbe
mov
js
icebp
in
out
out
sub
fs
cld
sub
cmc
jle
hlt
shr
int
xchg
lahf
xor
jmp
out
ficompl
aas
pop
stos
lcall
xchg
cmp
pop
lock
push
out
inc
ret
subb
scas
xor
in
aad
mov
and
lcall
cmp
pop
repz
and
cld
xchg
daa
inc
add
cli
cmpsb
jp
lret
dec
or
repnz
add
add
adc
xchg
cwtl
inc
shrb
xchg
dec
cmp
aam
call
mov
arpl
or
ss
stc
lods
jmp
and
arpl
add
mov
bound
fsts
xchg
lds
addl
insl
cmp
pop
and
jo
xchg
out
xchg
sub
jo
sbb
pushw
shrl
fstpl
jmp
sub
ret
mov
sarb
cmc
in
sub
or
in
mov
popa
sbb
bound
xor
xor
dec
push
jne
sub
rol
popf
cmp
sbb
gs
iret
sub
test
xor
and
add
jnp
dec
mov
dec
mov
scas
add
aaa
mov
lods
aas
xchg
xchg
fcmovnbe
xorb
repnz
subb
insb
adc
xchg
jns
jbe
mov
ljmp
fistpl
push
in
or
mov
in
mov
sub
dec
int3
inc
dec
cmc
andb
inc
arpl
popa
jae
rol
jle
pusha
jge
cmp
add
jle
inc
mov
pop
push
xlat
mov
or
gs
inc
and
push
mov
lahf
inc
mov
addr16
push
jle
or
in
std
sbb
lods
mov
leave
push
xchg
lds
mov
jne
xlat
jmp
daa
loope
addr16
xchg
repnz
into
popa
in
repnz
mov
testb
sub
cwtl
mov
dec
xlat
das
jmp
adc
mov
jp
xchg
jp
add
jp
push
pop
mov
lahf
mov
mov
dec
ljmp
cmp
sub
outsb
ror
fwait
mov
loope
jns
nop
add
push
test
xchg
mov
xchg
popa
mov
mov
out
mov
js
arpl
sbb
push
mov
daa
pop
push
out
fs
sbb
jo
lods
xchg
sahf
gs
in
mov
fwait
sub
in
xchg
ret
shll
inc
incb
sub
jnp
cltd
jecxz
mov
mov
jg
aam
jg
loope
xlat
push
and
aas
into
add
adc
cwtl
adc
lods
lds
rclb
addl
das
push
adc
in
sarb
mov
sbbb
mov
jo
jno
cltd
cmp
jae
ficoms
sub
jp
shrb
sub
sub
out
mov
std
xor
test
dec
lret
mov
cmp
inc
insb
rclb
push
outsl
stos
inc
or
lods
and
fcmovnbe
or
jmp
sub
xor
or
loop
xchg
jo
movsl
movsl
pop
mov
in
cmp
and
jb
mov
mov
push
aam
adc
sub
lods
std
fdivp
enter
test
xchg
int
rclb
pop
xchg
aaa
push
fmull
test
and
cmp
in
xor
data16
nop
lahf
sahf
sbbb
lcall
lret
sub
push
cwtl
jle
and
cwtl
lahf
and
inc
out
fidivl
pop
jnp
enter
add
fsts
jns
cwtl
bound
gs
dec
mov
sbbb
jbe
pusha
movsl
fldl
shrb
sbb
les
or
inc
js
dec
int
and
insb
push
xchg
adc
dec
neg
add
and
lret
in
xchg
and
push
pushf
xchg
cli
mov
mov
repz
loope
stc
vmaxps
and
in
adc
outsb
movsl
jmp
pushf
or
mov
std
inc
in
inc
pop
imul
and
inc
cmp
pusha
int
jg
lahf
imul
push
arpl
imull
das
xor
out
pop
adc
int
lret
nop
insb
test
and
cmp
sbb
mov
jle
sub
mov
dec
xchg
push
cmp
jo
xchg
xor
out
mov
sub
mov
call
mov
cli
jno
sahf
dec
mov
sub
orb
aam
cmp
pop
fdivrp
test
ja
dec
popa
daa
xchg
mov
bound
cmp
mov
add
leave
pop
aam
enter
lahf
push
je
adc
cwtl
fidivrl
sub
mov
loop
xchg
inc
in
call
pop
mov
and
xor
sub
pushf
mov
mov
repnz
xchg
aam
push
insl
mov
jns
xchg
inc
pop
sbb
mov
jle
inc
mov
stos
loopne
in
jne
inc
jl
lock
xor
pop
iret
add
dec
jmp
je
and
std
xor
pop
in
dec
stc
inc
push
jle
mov
frstor
iret
and
popf
push
cmpsb
ret
adc
std
mov
loop
bound
xchg
mov
jae
adcl
add
imul
xor
mov
aam
push
mov
fwait
inc
push
sbb
adc
rolb
and
jp
xor
lret
test
popa
rcrb
mov
nop
iret
fadds
out
cwtl
xor
cmpsl
mov
and
and
insb
pop
cltd
xor
xchg
ss
das
push
iret
mov
or
xchg
gs
aaa
das
cmp
and
pop
xlat
fcoms
aam
movsl
dec
mov
jno
xchg
or
inc
ds
mov
loope
loope
std
leave
aad
enter
xchg
dec
mov
xchg
sbb
push
cmp
adc
or
add
ret
mull
sbb
ljmp
add
leave
fwait
aas
dec
mov
je
fisttps
sbb
ljmp
sbb
xchg
fs
lcall
mov
jnp
dec
add
jne
jge
mov
call
ss
adc
push
lods
or
jecxz
aas
mov
inc
test
push
add
sub
push
mov
jl
jg
fidivl
cmp
or
stos
out
mov
test
aas
icebp
pop
rcl
mov
xchg
lret
lds
push
jo
cmp
inc
pop
lret
shl
push
push
leave
mov
jnp
test
inc
jb
pop
out
push
mov
loop
sub
sahf
clc
xchg
call
mov
sti
ret
sub
out
xor
sbb
jecxz
dec
inc
dec
test
addl
dec
cli
addb
push
sub
test
je
out
push
jge
or
cmpsl
inc
cmp
sahf
inc
xchg
mov
and
pop
hlt
pop
mov
negw
sub
push
inc
sub
lock
jmp
push
mov
sub
sub
xor
add
jbe
arpl
mov
int3
jns
in
cmp
xor
adc
idiv
inc
pop
pop
mov
mov
pop
test
pop
clc
and
in
inc
stos
sbb
stos
ljmp
adc
xor
loop
subb
jecxz
aam
adc
pop
inc
lea
mov
pop
jp
push
pop
mov
aam
add
and
jb
lock
push
pusha
xchg
in
or
ror
add
les
pop
or
dec
cmp
xor
sub
cmp
adcb
stos
dec
or
fldcw
mov
sbb
pusha
test
lret
sbb
and
xchg
xchg
test
repnz
ljmp
jp
pop
in
sub
xchg
test
mov
mov
jle
push
icebp
mov
pop
add
insl
mov
push
sub
xchg
mov
sub
mov
push
out
push
xchg
out
jo
jecxz
jecxz
and
mov
sub
stos
push
lret
mov
push
stc
jp
sbb
jl
jbe
lcall
jbe
fbld
daa
lock
dec
fwait
push
stos
aaa
or
sbb
stos
sbb
lock
hlt
pop
and
addr16
jle
sub
shlb
les
pop
cmpsb
outsb
ficoml
gs
loop
push
sbb
popf
mov
mov
mov
and
mov
in
push
xchg
inc
lcall
mov
adc
in
adc
cmp
or
fs
inc
push
sar
or
cmpsl
adc
clc
je
mov
cli
out
lods
aam
rolb
pop
sbb
loope
pushf
jg
addr16
jne
mov
jb
xchg
dec
ja
lret
mov
mov
ret
mov
inc
std
sti
xlat
sarb
je
xchg
jno
mov
loope
xor
pop
mov
lock
mov
pop
popf
out
xor
fildll
pop
add
and
popf
pcmpeqw
push
loope
pop
out
xor
dec
inc
out
out
jl
std
add
inc
jl
cmpsl
mov
xchg
push
bound
pop
in
loope
orl
xchg
push
sub
dec
icebp
sub
adc
jge
dec
and
enter
ss
cmp
xchg
lods
inc
inc
mov
xchg
jl
icebp
mov
sti
or
dec
das
mov
adc
mov
jne
lods
iret
shrl
cs
mov
scas
cmp
movsl
cmp
insb
adc
jmp
cli
enter
push
fs
adc
fcmovb
cmpsl
test
cld
mov
pushf
int
jl
pop
xor
imul
mov
loopne
in
push
xor
lea
pop
jno
mov
xor
pop
aad
adc
cmp
pop
push
or
loope
loopne
hlt
adc
ljmp
je
xchg
aaa
dec
aad
mov
ret
xchg
je
fsubrl
subb
jge
inc
sbb
or
and
xchg
imul
pop
stc
dec
inc
insb
into
mov
push
and
xchg
leave
add
mov
pop
jecxz
outsb
xlat
sbb
enter
mov
mov
and
cltd
shll
lds
dec
xchg
loopne
sahf
cmpsl
pop
scas
push
cmp
jbe
in
pop
inc
sub
mov
mov
push
jb
shl
mov
mov
sbb
adc
fmull
mov
xchg
jbe
xchg
push
test
xchg
daa
push
into
inc
cmpsl
loopne
sub
adc
dec
adc
xchg
loope
pusha
mul
mov
push
in
push
leave
in
call
pusha
fcoml
popa
or
enter
adc
insb
outsl
ret
pop
push
sub
fldt
jae
cmpsb
mov
xor
test
mov
subl
fcmovne
decb
mov
mov
cli
cmp
and
fwait
sbb
mov
shlb
adc
cmp
les
orps
ret
ss
mov
pusha
lahf
inc
push
test
popa
jne
cs
arpl
pop
rol
outsl
repz
mov
lcall
mov
packuswb
nop
cli
jno
xlat
in
push
es
addb
mov
stos
sub
sar
lahf
cmp
movsb
pusha
pop
sub
mov
adc
push
sbb
aam
std
jnp
push
xchg
push
addr16
gs
ljmp
ss
jecxz
bound
xor
or
and
sub
jmp
jne
into
pusha
jb
outsb
aaa
sbb
add
inc
cmp
or
pop
jno
subb
cld
fwait
cltd
loop
std
ss
inc
add
inc
inc
cmp
adc
ret
insl
repnz
in
adc
mov
imulb
fcoml
insb
fmul
sbb
xchg
enter
dec
mov
xchg
sub
sbb
inc
jge
ficoml
mov
lock
ret
adc
in
jle
jbe
mov
or
cmp
mov
outsb
ds
jecxz
push
adc
pop
cmc
outsl
in
xchg
mov
push
add
stc
test
sbbb
or
and
fcmovnu
mov
subl
femms
dec
fld
xor
stc
push
jo
add
subl
fs
shrb
push
or
or
rcrb
add
fwait
sub
mov
int3
int3
mov
xor
lahf
pop
mov
pop
inc
cmp
testb
or
push
add
pusha
divb
push
dec
das
inc
sub
vpor
pop
test
repz
xchg
sbb
xchg
das
rorb
daa
cmp
mov
int3
sub
pop
pop
jecxz
jl
adc
mov
les
cmp
pop
in
pop
out
mov
adc
mov
lret
push
dec
testl
or
sbb
lods
jnp
pop
mov
bound
lock
mov
lret
das
jp
lret
jmp
stc
int3
push
lret
cmp
lods
jnp
mov
aaa
jmp
cmp
sub
movsb
das
sub
test
lds
loopne
stos
push
and
loope
cmp
push
into
cmc
jg
push
mov
imul
outsl
and
xor
insl
rcrl
adc
mov
ja
imul
out
xor
push
dec
lcall
and
in
lds
pop
fadds
jle
push
push
jae
sti
cmp
stc
cmc
imul
mov
fsubrs
inc
lret
in
jmp
sub
insl
sbb
xor
xor
add
orb
loope
jl
out
movsl
aaa
mov
or
cmpl
pop
in
push
sub
mov
mov
xchg
add
and
syscall
dec
je
lods
jecxz
fcoml
jne
lret
in
mov
aad
dec
lret
inc
mov
pop
jnp
cmp
cmp
pop
push
sub
mov
jne
xor
mov
xor
test
adc
jns
ret
scas
bnd
push
sbb
add
sbb
jb
or
jno
fimull
stc
loop
inc
out
daa
std
pusha
mov
scas
inc
movsl
add
cld
cld
and
or
pop
push
addr16
adcl
dec
push
js
mov
pop
sar
jl
sahf
fsts
dec
fs
pop
mov
add
cs
jmp
lods
ret
and
insl
jae
stc
mov
or
iret
jp
or
rorl
cmp
xor
push
lods
xchg
sbb
imul
sub
mov
fnstenv
in
jo
jecxz
test
cmp
imul
aam
push
pop
dec
fwait
mov
pop
lret
mov
mov
stc
sahf
out
xor
rcl
mov
xlat
sub
cmp
push
loop
dec
push
adc
in
mov
fisubl
cmpsb
dec
jbe
bound
fdivrs
xlat
jle
and
dec
sbb
pop
out
ja
shrb
sbb
lahf
outsl
and
xchg
test
movsb
in
stos
cs
clc
sahf
pop
scas
insl
mov
jg
scas
outsb
sub
push
cmc
int3
jns
pop
mov
and
mov
das
inc
mov
fcomip
xorb
xlat
cmp
mov
stc
lods
push
jmp
mov
mov
inc
cmp
hlt
xchg
push
clc
xchg
movsl
adc
mov
fnstsw
sbb
mov
inc
mov
inc
mov
inc
pusha
mov
add
cmp
cmc
cmp
cmp
jbe
cld
mov
xchg
mov
aad
mov
push
enter
imulb
stos
rcrb
xor
out
lcall
aaa
lcall
or
notb
hlt
cli
je
mov
xor
sbb
nop
loopne
lods
loopne
dec
pop
inc
add
xlat
and
sub
mov
icebp
lds
test
mov
sahf
or
add
adc
aam
fldt
jae
pop
scas
xchg
dec
out
dec
fwait
pop
outsl
add
add
aam
mov
cmpsl
push
out
mov
incl
in
and
jb
cmp
outsb
xchg
and
sub
inc
and
inc
mov
scas
imul
cs
cwtl
loope
dec
pop
addr16
aaa
stos
push
mov
mov
mov
leave
inc
fld1
lret
stos
mov
dec
or
daa
mov
sub
inc
call
push
adc
out
mov
and
mov
push
sbb
push
inc
mov
push
xchg
loopne
outsb
repnz
pop
mov
aam
cmc
daa
mov
mov
mov
out
xchg
repnz
mov
mov
jecxz,pt
sar
fidivs
enter
xor
sub
fidivs
sar
pushf
push
sbb
push
sub
iret
inc
dec
lods
sarl
fs
jno
adc
call
shlb
jmp
js
inc
sbb
adc
push
cmp
dec
imul
scas
mov
stos
call
push
and
jno
mov
add
xor
push
dec
and
jecxz
stos
mov
push
lahf
mov
fcompl
jno
pop
outsl
lea
rorb
xchg
or
sbb
decb
push
sub
push
loop
dec
and
mov
cwtl
enter
cmpsl
inc
repz
cmp
sub
mov
xchg
fsub
popa
and
stos
fistpl
repz
lock
lea
cmpsb
xor
mov
stos
pop
cltd
inc
loope
sub
ret
rclb
jbe
adc
std
out
xor
push
filds
xor
sbb
jge
push
jl
dec
out
pushf
cmp
pop
inc
cmpsl
pop
js
pop
mov
inc
jnp
into
sti
or
jecxz
aaa
cmp
push
outsl
xlat
adc
andl
out
mov
jle
adc
xchg
mov
inc
in
jg
push
pop
stc
push
cld
imul
addr16
dec
scas
cwtl
test
mov
repz
repnz
idiv
iret
loopne
aam
enter
pop
mov
push
imul
cmpsl
xor
push
mov
and
inc
push
inc
sahf
test
in
in
insb
decb
mov
cmp
xchg
sub
loopne
cmp
pop
jns
inc
pop
and
inc
les
push
sbb
sub
push
adc
xchg
hlt
xchg
pop
xchg
sahf
inc
inc
pop
mov
or
stos
nop
scas
sbb
or
add
lcall
insb
cmp
xchg
sbb
mov
sbb
inc
and
push
inc
call
dec
jl
or
push
stc
xchg
repz
fcoms
jp
xchg
scas
mov
cmpsl
cmc
cmpsb
xchg
xor
clc
push
jle
dec
sbbb
mov
adcl
pop
pop
inc
mov
pop
int
shl
in
or
jmp
insb
dec
add
in
xlat
sbb
mov
sub
sub
xchg
enter
mov
test
lcall
scas
test
leave
dec
cmpsl
mov
sbb
clc
push
fsubr
jl
mov
ds
inc
repnz
ljmp
xlat
cmp
xchg
adc
and
mov
xchg
in
cs
jo
ret
lods
cmp
out
pop
mov
or
mov
ljmp
xorb
adc
add
in
or
popf
lods
lahf
les
fisubl
dec
cmp
mov
pop
stos
test
add
or
test
shrl
push
in
push
vmovaps
xor
pop
sbb
inc
testb
sub
jbe
sbb
xor
adc
jns
push
arpl
fs
sub
inc
jnp
inc
arpl
jae
sbb
push
mov
jbe
pop
xor
pop
out
lock
out
push
xchg
xor
pop
call
call
pop
arpl
jl
lahf
mov
add
scas
jo
jae
into
addr16
lods
jae
xchg
xor
ljmp
mov
push
movsb
inc
push
into
mov
inc
jl
adc
insl
push
sahf
push
daa
scas
mov
cmc
or
add
xor
mov
dec
stos
lahf
push
jmp
push
inc
inc
pop
mov
sarb
push
iret
ljmp
scas
cmp
lods
outsb
sti
add
ret
jae
fnstenv
xor
in
das
cmp
int
test
and
call
jge
scas
push
fistpll
pop
xor
ja
xchg
push
adc
adc
loop
ljmp
sub
jae
repz
and
sar
outsb
cmp
out
push
adc
lahf
fiadds
idivl
mov
add
jle
jle
push
mov
add
inc
ljmp
imul
xor
push
addr16
xchg
inc
js
adcl
mov
stos
and
and
lcall
jno
dec
sbb
fwait
mov
psubsw
das
shlb
mov
cmp
jb
sti
cmp
mov
push
call
dec
jmp
lret
fs
mov
test
cmp
scas
cmpsb
rorb
mov
out
xchg
ja
movsl
lds
mov
xchg
fsubrs
jno
cmp
push
and
out
mov
loop
fisubl
push
inc
xchg
adc
je
add
shll
push
shrl
insb
data16
nop
pop
or
mov
inc
sub
pop
and
adc
fildl
adc
cwtl
clc
movsl
sbb
loop
pop
lret
movsb
push
in
adc
mov
in
lret
sbb
inc
in
cmpsw
iret
jo
ret
pop
into
stos
pop
add
int
xchg
insb
inc
icebp
mov
cld
xor
mov
push
mov
test
mov
inc
cs
push
sar
push
lods
out
iret
mov
inc
mov
mov
add
and
xchg
cmp
lods
pop
and
push
fnstenv
jmp
stos
and
mov
push
inc
sbb
es
fldt
mov
aam
cmp
push
ja
cmp
sub
popf
into
popf
std
scas
popa
sub
jl
imul
testl
jbe
cmp
mov
iret
outsl
add
dec
xlat
add
cli
mov
in
jbe
xor
fsub
repz
mov
jmp
jns
jl
fcompl
and
mov
cmp
in
mov
loope
lahf
dec
and
into
cmp
cmp
mov
or
mov
in
in
jecxz
and
mov
jo
mov
mov
outsb
mov
cmp
push
pop
or
pop
test
xor
push
cmp
and
dec
inc
mov
lock
jmp
subl
mov
add
in
xchg
call
imull
mov
sub
xor
stos
cmp
pop
aad
int3
push
movsl
sbb
push
loopne
push
dec
lcall
xchg
mov
insl
std
pop
mov
je
push
add
jp
fs
pop
fidivs
pushw
cmp
mov
adc
add
lods
sub
out
out
sbb
mov
mov
rorb
inc
shll
dec
pop
enter
shlb
das
test
insb
cmp
std
or
mov
idiv
xchg
cmp
dec
push
dec
cmp
dec
aas
jno
andl
sub
fwait
jne
sbb
or
adc
cmp
aam
scas
mov
push
inc
and
fists
sbb
jae
jle
push
in
stc
lods
dec
adc
stos
test
mov
test
push
and
mov
or
sbb
jecxz
pop
cmp
jae
jp
xlat
clc
lret
cmp
ljmp
clc
xor
or
pop
add
test
nop
pop
lret
or
incb
xchg
mov
sti
push
or
sbb
mov
jo
int3
adc
add
dec
dec
aam
mov
flds
sarl
mov
xchg
sahf
inc
add
enter
mov
add
and
adc
and
mov
jp
idivl
mov
test
mov
cltd
pop
lret
mov
mov
rclb
rol
mov
xchg
nop
adcb
cmc
out
sbb
in
adc
enter
clc
sub
leave
in
out
rorb
cmp
pop
cwtl
xchg
cmp
in
push
pop
cmp
ss
out
fldenv
xchg
aas
xchg
fsubs
pop
repz
mov
and
and
adc
xor
mov
push
xorl
and
loope
gs
adc
insb
fsts
shrb
test
sarl
outsl
mov
in
push
xor
lahf
dec
inc
jl
mov
rorb
jle
sarb
lret
pop
pop
daa
and
outsl
js
xchg
movsl
leave
pop
arpl
inc
push
lss
cmp
pop
mov
jg
sbb
fdivr
mov
xor
sub
dec
divl
test
sub
and
scas
cmp
sbb
xor
loope
stos
fcoml
ss
sbb
jl
xor
mov
aas
pop
lods
mov
cmc
mov
adc
xchg
pop
pop
out
xor
test
xchg
in
cmp
jnp
mov
sub
call
sti
inc
fwait
dec
dec
dec
ds
xchg
loopne
xchg
popf
and
dec
sahf
xor
arpl
test
push
iret
cmpsl
push
loope
lea
test
lds
ss
cmp
dec
mov
notl
pop
mov
fmull
sbb
aad
mov
adc
dec
inc
sbb
pusha
push
loopne
mov
iret
sub
es
pop
pop
sub
mov
lahf
mov
sub
dec
mov
inc
loope
loope
mov
hlt
sbb
cmp
fs
fnsave
cmp
push
insl
fsub
xchg
add
cltd
mov
pop
mov
test
jge
sub
ja
xor
jge
popa
inc
jnp
shl
jmp
sbb
mov
cmp
inc
sbb
xchg
sti
jecxz
xorl
mov
pop
in
lcall
test
paddusb
xor
das
pop
stc
shr
andb
aad
or
test
call
arpl
push
mov
iret
sahf
popf
cmp
inc
inc
mov
test
icebp
push
adc
inc
inc
sbb
test
mov
pop
push
mov
or
out
lock
mov
stos
push
jbe
mov
dec
cmp
xchg
xchg
mov
aaa
adc
cli
pop
sbb
sub
mulb
sbb
xchg
nop
mov
incb
and
push
mov
in
jle
pop
popa
ret
les
pop
xorl
mov
mov
jbe
push
mov
push
popw
movsl
test
aam
mov
nop
jno
mov
rorl
adc
lea
add
cmpsb
sub
xchg
daa
inc
jle
test
adc
jno
sbb
cmp
adc
and
int
jne
aam
das
jmp
sbb
stc
clc
xlat
cmp
sub
mov
stc
or
add
out
stos
loopne
aam
les
les
insb
nop
pop
adc
jae,pt
jecxz
gs
add
movups
hlt
sbb
push
mov
adc
sub
mov
mov
jo
and
ror
fbstp
ret
outsl
jle
xor
push
ret
push
mov
icebp
out
mov
insl
repnz
call
ret
popf
xor
push
sahf
in
xchg
shll
cwtd
inc
cltd
xlat
pop
or
mov
push
mov
inc
and
cmp
add
add
mov
cmp
inc
stos
xchg
sbb
dec
pushf
xor
aad
lea
shll
jns
mov
aaa
insl
jae
pop
daa
xor
push
sub
jecxz
mov
adc
push
sbb
jmp
mov
sub
lods
fcoml
pop
pop
cmp
xchg
scas
mov
int
push
insl
mov
inc
gs
inc
sbb
push
in
push
mov
cmp
push
mov
loopne
inc
xor
popa
add
push
adc
xor
imul
or
dec
lea
shlb
xchg
ja
push
pop
fmuls
add
mov
decb
repnz
dec
lcall
mov
jmp
ret
add
or
sub
cli
test
dec
mov
lret
push
sub
aas
mov
mov
dec
xchg
pinsrw
inc
adcl
jnp
jl
ja
or
push
xor
cmpsl
sbb
inc
iret
into
in
or
adc
outsb
movsb
pop
push
pop
or
inc
fisubrl
ss
shl
sub
test
pop
pop
mov
jae
mov
pop
repz
jecxz
bound
mov
mov
dec
addr16
mov
mov
leave
stos
adc
xchg
movsb
xor
dec
pop
enter
mov
insb
test
adc
mov
sbb
sbb
popa
lods
ljmp
aaa
xor
mov
adc
push
mov
mov
std
sbb
call
cwtl
jecxz
nop
inc
cli
jno
jbe
mov
imul
sub
jle
lret
xchg
xchg
sub
je
rcll
mov
lret
dec
adc
fadds
sbbb
jl
cs
sbb
xor
ret
mov
cmp
mov
rcrl
xor
hlt
sarl
push
test
adc
scas
xchg
stos
daa
scas
add
in
xor
fnstsw
ljmp
mov
dec
add
or
test
lea
scas
mov
xor
ret
and
dec
adc
call
adc
dec
push
pop
push
xchg
std
sub
adc
sahf
in
in
lcall
out
fmul
stos
push
pop
ret
adc
sbb
lock
push
mov
cmp
in
xchg
mov
fadds
shl
push
adc
add
inc
or
icebp
dec
dec
into
cli
leave
stc
fcomps
fwait
xchg
lcall
into
ss
sub
call
mov
pop
mov
sahf
lret
popf
sub
pop
lds
push
mov
xchg
and
jne
push
add
aaa
xchg
sub
ja
imul
out
fbstp
jecxz
movsl
lret
inc
and
or
xchg
mov
mov
add
mov
loope
not
cmp
sti
mov
mov
clc
addr16
add
add
lahf
sbb
jns
gs
add
adc
out
hlt
xchg
fisubrl
sub
push
test
insl
insl
outsb
cmp
clc
xchg
ss
mov
jae
int3
je
and
xchg
or
adcl
pop
outsl
sti
rcr
jg
shll
sbb
fisubrs
fsubl
ret
cmpsb
filds
push
inc
lods
add
push
mov
push
pop
push
pop
gs
push
pop
sbb
ret
dec
in
mov
ds
sbb
adc
loope
xchg
mov
sarl
sahf
insl
mov
xchg
dec
adc
or
gs
pop
push
pop
cli
mov
dec
imul
inc
es
ss
mov
std
jl
lea
in
std
jmp
cmp
fistps
mov
nop
mov
fwait
xchg
jmp
sub
mov
and
inc
mov
aaa
into
dec
or
cld
jae
test
repnz
jae
mov
xor
cmpsl
out
cmpb
cmpsl
fists
idivl
je
ret
pop
pushf
wbinvd
xchg
stos
mov
jp
jl
adc
cmp
or
imul
lahf
and
xor
lret
popa
in
xor
or
push
jp
mov
add
sbb
in
stos
mov
sbb
cmp
divb
loop
inc
or
xor
mov
push
rclb
or
mov
seta
dec
mov
aam
jo
and
and
call
icebp
lea
loope
dec
jbe
jle
xchg
mov
pop
pop
and
je
shlb
mov
pop
rcrl
xchg
js
not
jecxz
fistps
mov
jnp
rorl
cld
jle
lcall
pop
xchg
ljmp
popf
insl
xor
scas
xor
cmp
test
dec
cmp
hlt
clc
mov
push
clc
inc
xchg
fyl2xp1
lret
test
push
jecxz
pop
inc
lret
jne
movsb
mov
and
push
incb
adc
push
push
cmp
js
push
nop
sub
int
adc
xlat
jae
push
jmp
mov
cmpsl
je
in
lds
outsl
jno
es
mov
add
pop
add
xchg
mov
scas
repnz
lret
cmp
imul
and
mov
xlat
and
mov
pop
push
shlb
scas
push
dec
or
mov
rclb
or
mov
mov
pop
enter
fildl
adc
pop
ljmpw
call
mov
shlb
sbb
mov
cmc
or
sti
dec
fcomip
push
stos
sub
mov
sbb
mov
cld
adc
push
imul
in
je
jo
add
mov
roll
xchg
pop
fdivrp
sbb
mov
pop
fld
lcall
cmp
inc
sbb
lea
xchg
lcall
push
fildll
xor
pop
cld
push
shll
imul
ljmp
adc
pushf
in
cmp
data16
jo
mov
jge
sub
cmp
or
cld
sbb
cmp
dec
jns
add
add
jae
jns
sbb
inc
rcrl
sbb
inc
xchg
mov
mov
ja
shll
and
sbb
jbe
mov
pusha
mov
movsl
xlat
fadd
dec
rorb
xchg
push
add
mov
xchg
jae
sbb
mov
out
mov
mov
or
out
lods
jg
iret
fwait
pop
jp
add
xchg
or
jno
sub
jecxz
sti
xchg
ss
mov
jnp
into
loopne
lret
pop
push
lock
js
sbb
mov
mov
notb
pop
sbb
gs
pop
cli
aam
pop
aam
push
leave
lds
das
xchg
notb
in
mov
mov
lock
iret
out
fisubl
jp
jg
mov
mov
inc
xor
shlb
call
sub
dec
mov
mov
cmp
mov
cli
mov
clc
es
jns
imul
mov
jne
pop
xchg
lods
jae
inc
fs
inc
dec
sbb
pushf
pop
movsl
cmp
mov
cmp
aas
test
mov
mov
lock
stos
stos
jno
jbe
jl
test
add
std
imull
add
lahf
fnstsw
adc
ficoms
cmp
mov
cltd
dec
mov
mov
roll
lds
mov
fsubs
jae
mov
add
pop
out
not
test
xchg
push
std
imul
lea
xchg
or
shlb
xor
xlat
int
lret
iret
imul
mull
cli
int3
pop
jnp
dec
jne
push
mov
add
test
jp
mov
cmc
rcrl
sbb
mov
xchg
push
xchg
mov
stos
inc
lds
loopne
mov
daa
dec
inc
mov
sub
data16
push
or
add
or
iret
jecxz
test
sarl
and
shll
xchg
in
mov
pop
std
inc
cmpsb
std
testl
sub
in
nop
mov
out
movsl
dec
lcall
icebp
js
jo
jg
jns
imul
dec
mov
int3
sbb
pop
cmpsl
fimull
and
inc
jl
repz
lret
jb
add
inc
add
test
shl
mov
xor
pop
lcall
add
repz
test
andb
fs
or
xor
imul
stos
dec
cmpsl
xchg
popf
aaa
addl
mov
jne
or
rorl
ficoms
push
or
pop
aam
add
pop
dec
or
out
aas
xorb
mov
gs
shlb
ret
outsb
jmp
repz
push
pop
std
mov
xchg
dec
into
test
xchg
jno
frstor
int
add
cli
nop
mov
mov
jg
insb
daa
mov
sti
fists
ret
and
cmp
mov
jae
mov
imul
adc
cli
push
and
into
mov
mov
push
cmpsb
pop
xor
fistl
mov
xchg
loopne
mov
pushf
insl
adc
fwait
stc
xchg
push
movsb
sub
fmuls
bndstx
xchg
adc
popf
shlb
mov
mov
jae
jo
pop
daa
xchg
test
push
cmp
dec
popa
push
outsl
fs
sbbb
leave
cmpsl
call
rcl
addr16
add
fs
sarb
adc
aaa
test
push
sub
cli
shlb
comiss
sbb
shlb
out
stos
movsl
pop
sbb
jnp
ljmp
adc
stc
lock
add
rclb
shl
retw
cmp
pop
jno
and
test
fstpt
mov
sub
pop
aas
push
test
dec
and
xchg
mov
fldt
pop
mov
fdivrs
jbe
shl
push
dec
fdivl
pop
scas
es
inc
int
popa
push
xor
test
adc
xchg
incb
popf
loopne
dec
sbb
insl
test
jae
jae
mov
insl
test
sbb
fstl
mov
fistpll
sub
ss
cmp
data16
push
imul
pop
dec
xchg
mov
mov
push
test
dec
das
xor
movsb
lcall
or
xchg
mov
xor
mov
and
push
lock
pop
jo
movsb
sub
in
sub
or
ds
lret
aaa
pop
xchg
shll
jno
jge
test
jns
jb
lods
cmp
movb
lods
or
or
xor
xchg
std
hlt
push
sbbl
aam
sbbb
sub
or
loop
dec
adc
sahf
inc
sbb
dec
inc
inc
cmp
adc
out
std
hlt
sub
aam
dec
mov
or
fcoms
jb
jge
cld
fidivs
or
mov
popf
mov
pop
add
and
jle
mov
gs
push
add
ret
in
mov
xbegin
ret
mov
xchg
ret
cmp
dec
stc
inc
stos
lahf
frndint
xchg
lahf
mov
test
mov
jnp
add
push
or
lahf
or
fsubrl
fdivrs
sahf
pop
jg
dec
jnp
adc
ror
sub
cmp
adc
fsubl
inc
inc
jno
pop
inc
imul
mov
fnstenv
jmp
sahf
dec
pop
es
cmc
test
xor
in
mov
jmp
repnz
add
cmp
loope
add
ficomps
fs
lea
lock
inc
adc
mov
bound
scas
jno
jno
jle
lds
and
test
fistps
sub
add
add
ss
js
xor
leave
cmpsb
divl
and
sub
push
lock
repnz
mov
mov
mov
push
jae
jns
xor
dec
and
clc
mov
mov
sbb
sbb
ret
ret
fdivr
or
orb
out
jmp
cwtl
out
mov
adc
jns
rolb
faddp
or
mov
lods
cld
xchg
cs
or
insl
cs
mov
jecxz
push
aad
sub
or
ret
jae
dec
mov
xchg
aad
filds
sahf
pop
mov
cmpsl
xlat
mov
xchg
and
jmp
or
jb
int
cmp
xchg
cwtl
push
sbb
pop
icebp
ret
loopne
xchg
adc
mov
xor
sti
mov
mov
fsubp
insb
jecxz
lret
lcall
jbe
adc
cmp
push
gs
pop
test
movsb
inc
xchg
dec
aas
icebp
xchg
xchg
rol
lahf
mov
cmpsl
adc
cmpb
jae
dec
scas
mov
shrb
xor
mov
mov
std
push
out
inc
mov
add
pop
fwait
jno
sub
inc
sub
test
xchg
into
add
mov
addl
gs
rcrl
pop
pop
cmc
stos
dec
loope
mov
sbb
cmp
movsl
icebp
into
mov
lods
xchg
movsb
pop
bswap
sbb
xchg
cmp
xchg
jo
fwait
lea
dec
cmp
fcoml
cltd
mov
cmp
sbb
jge
addr16
lahf
push
mov
gs
push
xor
and
hlt
xchg
jns
xchg
mov
dec
popf
sbb
sbb
mov
ficompl
sbb
add
sarb
fdivs
push
cs
mov
push
test
jmp
and
test
mov
push
dec
sbb
icebp
and
shlb
xor
cmp
xchg
cmp
or
fstl
mov
adc
gs
imul
pop
xchg
lds
scas
repnz
bound
sbb
jg
and
mov
and
or
jo
jbe
clc
sub
or
inc
aam
mov
sbb
and
cld
adc
rep
xchg
nop
add
lahf
mov
lahf
pop
xor
mov
movsl
lods
negb
sbb
imul
popa
mov
adc
or
inc
jle
ljmp
or
clc
push
les
cmp
push
sub
mov
dec
aad
lret
dec
push
neg
out
or
or
mov
and
jnp
pop
repz
rol
les
dec
dec
mov
adc
test
mov
rolb
int
mov
mov
sarb
mov
test
aas
inc
addr16
insl
jmp
neg
rclb
outsl
enter
xchg
push
jl
cmp
or
inc
pushf
cld
dec
in
inc
dec
aad
adc
hlt
pop
sahf
pop
int3
adc
movsl
or
push
or
push
mov
jg
fidivrl
addr16
xchg
mov
xor
lods
jne
orb
loope
push
outsb
add
pop
mov
add
mov
xchg
out
fdivrs
pop
lahf
mov
adc
lods
and
push
std
addl
movsl
es
xchg
sbb
data16
mov
filds
lods
inc
popa
mov
or
pop
repnz
fdivl
pop
loop
inc
or
repz
fwait
shlb
mov
and
pushf
ret
mov
adc
in
push
sub
mov
in
ret
jmp
ret
in
loope
pushl
sub
test
jb
xchg
testl
inc
lret
cmp
lds
andb
or
lret
cli
xchg
cmpsl
lcall
cmpsl
xor
aam
daa
push
mov
inc
jbe
mov
add
jl
test
xor
mov
enter
jge
mov
out
push
gs
int
shl
mov
and
ss
xor
mov
cmpsb
lods
arpl
daa
fnstcw
mov
jge
push
or
jl
jno
xchg
out
and
dec
aam
aaa
addr16
test
xchg
jle
testl
insb
add
jecxz
test
mov
push
jmp
scas
out
xor
mov
repnz
in
xor
dec
mov
into
sub
pop
sub
fadd
aas
jl
sbb
pop
jns
movsl
insb
gs
bound
out
pop
in
jg
sub
xorl
adc
push
inc
leave
cmp
mov
inc
pusha
xor
leave
js
stos
out
add
or
pop
loop
mov
rcll
icebp
sub
lret
dec
lcall
sarl
ret
adc
cs
inc
xchg
jne
mov
in
mov
ss
repnz
xchg
xchg
pop
movsb
call
movsl
aaa
push
pop
dec
pop
ret
lret
bound
push
pop
mov
ds
xorb
test
out
pusha
add
sub
hlt
nop
cwtl
cmp
hlt
and
std
fisubrs
aas
push
dec
lahf
in
cld
popa
mov
cmpsb
stos
loope
testb
rcrl
xchg
push
xor
pop
push
addr16
add
adc
cli
push
lret
pop
mov
pop
inc
in
push
imul
or
ja
imul
xor
adc
sub
sbb
bound
sub
jnp
lret
pop
inc
out
iret
add
sbb
jg
xchg
sub
int
adc
xchg
addr16
cmpb
mov
in
pop
pop
mov
xlat
ret
incb
jns
push
sahf
push
aaa
cmpsl
jb
orl
or
push
cs
mov
xchg
xchg
jp
mov
jg
lcall
jl
pop
mov
and
cwtl
xchg
cmp
adc
jns
and
xor
pusha
leave
pop
sub
inc
pushf
pop
ja
scas
lcall
push
push
loopne
and
cmp
mov
nop
arpl
sub
sahf
addb
testb
sarb
lret
imul
stc
push
fwait
scas
pop
pop
cmpsl
leave
mov
fimuls
in
sub
inc
std
mov
test
jle
icebp
add
in
rorb
add
les
cmp
sub
insl
inc
jp
dec
push
add
insb
pusha
xchg
loop
ficompl
aas
call
sahf
mov
std
cld
jns
les
stos
sysret
scas
inc
mov
dec
dec
xor
mov
out
mov
inc
mov
jbe
popa
inc
mov
int
cmp
add
movsb
std
aaa
mov
invd
adc
add
das
inc
rclb
and
test
dec
adc
aam
hlt
lods
lret
pop
push
pusha
arpl
jns
jnp
inc
sbb
out
sahf
scas
push
sub
scas
fwait
mov
jo
out
add
std
mov
sbb
stos
xchg
scas
jns
lods
xor
sub
xchg
xor
jecxz
aam
cwtl
cld
xchg
mov
es
cmp
mov
or
sti
call
mov
clc
sub
and
je
movsb
xor
not
lds
fucomip
call
js
es
push
popa
fcmove
xor
shrl
fucomip
push
call
hlt
inc
sahf
sbb
sbb
fcmovbe
repnz
inc
mov
dec
jns
scas
push
xchg
cmc
cmp
push
aad
jl
sub
mov
shll
inc
imul
sahf
mov
rolb
lret
loopne
mov
in
aas
daa
jecxz
sub
pop
cmp
cmpl
push
dec
lcall
inc
out
push
jecxz
insb
cmp
insb
xor
adcl
jno
lcall
test
clc
dec
mov
adc
repz
sbb
scas
ljmp
push
push
dec
pop
mov
or
int
cltd
test
loop
xchg
mov
mov
mov
sub
daa
sbb
cmp
das
test
mov
dec
pop
enter
mov
add
leave
shll
scas
jl
pop
data16
mov
int3
cmp
mov
inc
rol
stos
lret
imul
mov
jbe
adc
add
les
pop
imul
xchg
fs
int3
adcb
jno
dec
jo
iret
ret
shr
out
xchg
fidivl
jne
and
cs
xchg
movsl
fdivrl
popf
icebp
stos
push
jno
data16
push
jb
pop
enter
cmc
iret
cmpsb
add
sbb
mov
fwait
add
lret
cltd
pop
inc
mov
rol
cs
pusha
popa
ja
adc
movl
jo
add
sub
xchg
and
cmp
jle
leave
scas
inc
xchg
cmpsb
cld
jmp
fcomip
cltd
ljmp
inc
ja
pop
mov
ja
pop
movsb
rorb
mov
mov
insl
lahf
push
jle
mulb
sbb
add
cmp
loope
mov
fsubs
scas
cmp
jmp
cld
jne
out
sti
mov
jl
popf
xor
test
lods
jbe
test
lock
dec
add
in
sbb
fmul
sti
lcall
stos
cmp
dec
mov
lcall
pop
mov
test
jnp
fmuls
jg
fdivrl
xor
in
rclb
adc
je
fadds
pop
lret
cmp
and
scas
mov
inc
dec
lods
xchg
pushf
stos
inc
fs
bound
int3
inc
sbb
adc
aad
adc
movsl
xchg
cmp
in
mov
ss
mov
push
xor
pop
push
aaa
mull
mov
aaa
scas
adc
popa
cmp
mov
in
add
divl
jnp
xchg
or
add
cmp
std
inc
push
out
sahf
lret
and
idivb
cltd
mov
cmp
leave
pusha
xchg
sbb
adc
addr16
scas
lds
test
sahf
fidivl
dec
into
xorb
inc
jp
xchg
inc
pop
sbb
das
sbb
pop
xchg
das
lock
sbb
aad
enter
cwtl
xchg
push
pop
adc
jb
sub
out
xchg
fdivr
or
into
mov
aam
bound
pushf
scas
pop
and
scas
repz
pop
sbb
mov
icebp
inc
mov
ret
mov
jns
mov
scas
out
imul
xchg
mov
push
jbe
dec
xchg
mov
pushf
shrl
loop
pop
jmp
mov
pop
cld
lret
mov
sub
pop
fidivrs
cmpsl
decb
jl
mov
mov
out
stos
mov
mov
push
fisubs
hlt
shlb
mov
hlt
jns
movsb
ds
mov
push
add
clc
xchg
loop
in
push
and
mov
xor
andl
jl
lcall
je
ds
scas
sbb
sub
lods
cltd
mov
ret
pop
push
xchg
movsl
fimuls
cmc
pop
or
cld
xor
xor
mov
idivb
xchg
pop
pop
lret
adc
not
mov
dec
scas
push
sbb
pop
jge
mov
sarb
aas
pop
cld
fcmovb
pop
pushf
cltd
in
popf
out
dec
xor
lock
add
dec
mulb
sahf
insb
adc
es
and
mov
cmp
or
mov
iret
loopne
pop
and
inc
icebp
pop
jmp
sbb
ja
jecxz
pusha
or
add
or
jbe
shll
sub
fsubs
push
push
lods
sub
fwait
push
add
push
xor
inc
lods
adc
movsl
mov
add
adc
inc
nop
pop
out
movsb
mov
stos
out
xchg
js
aas
inc
in
stc
push
bound
mov
lock
mov
xchg
xchg
cmp
dec
fadd
add
adc
xor
stos
jo
push
mov
arpl
test
pop
jne
xlat
mov
dec
inc
iret
lock
cs
inc
sbb
fcmovb
mov
call
inc
mov
cwtl
movsl
and
jg
cmpsl
lods
mov
cld
cmp
jnp
mov
xlat
push
shrb
xlat
xchg
orl
div
xor
icebp
jmp
sahf
dec
xchg
out
xchg
dec
dec
movsb
call
ret
mov
adc
sbb
arpl
mov
xchg
mov
push
mov
dec
cld
adc
cmc
rol
das
popa
mov
das
push
mov
leave
aas
aam
dec
xchg
loopne
xor
add
pop
imul
lods
mov
repz
fsubrl
sahf
dec
mov
push
sbb
pop
dec
xor
icebp
sbb
jle
scas
mov
adc
sub
pop
jne,pn
addr16
mov
jmp
movsb
sub
jne
dec
cmc
das
clc
add
movsb
loope
dec
decb
xor
jmp
push
sbb
scas
pop
int3
push
xor
insb
shlb
lods
xchg
mov
cmp
fiaddl
xor
xchg
dec
sub
fcomps
push
pop
scas
adcb
movl
and
rclb
das
jbe
or
repnz
mov
rcrl
mov
xchg
cmp
pop
mov
insb
fisubs
in
fsubrs
cmp
inc
push
mov
repz
aad
cmp
jb
mov
repz
adc
stos
in
mov
jmp
and
and
xorb
pop
mov
out
cmp
in
jecxz
adc
cmp
movsl
cmc
aas
xor
les
push
or
sub
dec
mov
cmp
sar
jns
sbbl
loope
inc
cmpsb
lea
fldcw
sub
lea
sbb
sub
mov
test
mov
int
lock
ficoml
inc
dec
dec
sar
xor
leave
and
or
jl
ret
push
sbb
mov
mov
cmp
push
popl
mov
out
xchg
lods
cli
jo
xor
sbb
inc
js
pop
je
sub
test
and
je
repz
repnz
rorl
mov
pop
cmp
cmpsl
push
imul
xchg
pop
fs
jl
lods
push
movb
movsb
pop
mov
sub
ja
ja
adc
fisubrl
mov
scas
jecxz
mov
inc
fs
jb
and
xlat
sahf
repnz
jp
adc
sub
fmull
add
sub
cld
ds
repz
in
and
mov
add
push
ja
adc
out
les
iret
jb
fs
divb
inc
cmpsb
fs
sbb
mov
xchg
nop
aaa
loop
dec
mov
popf
imul
int3
sub
mov
std
scas
xor
leave
bound
push
popf
popf
test
std
dec
decb
int3
mov
mov
loopne
arpl
idivb
in
push
xor
call
je
test
jne
or
push
test
neg
mov
mov
stos
mov
mov
push
lret
mov
enter
aad
movsl
daa
ljmp
pop
imul
adc
stos
and
inc
inc
push
and
adc
std
fnstsw
in
lods
jmp
sub
inc
mov
int
or
inc
inc
pop
jae
fbstp
movsl
dec
lds
loop
subl
push
sub
mov
std
jmp
xchg
xchg
cwtl
in
aaa
loope
cli
and
mov
stc
test
sub
mov
mov
push
insb
popa
pop
je
pop
call
jmp
dec
or
gs
pop
add
mov
or
xor
and
push
sti
xchg
xor
in
adc
jno
jp
movsl
lea
xchg
add
fldenv
push
adc
lods
repz
mov
insb
mov
pusha
rcll
fsubl
shlb
rclb
arpl
test
outsb
xchg
mov
adc
ret
fbstp
aad
pusha
fisubrs
or
call
dec
cmp
jge
xor
loop
mov
inc
mov
push
jbe
sub
mov
addl
aas
cmp
cmc
daa
mov
lea
repnz
dec
fistpll
jl
jo
jmp
repnz
aas
inc
lods
xor
inc
add
rol
xchg
out
push
mov
dec
mov
push
push
add
sub
inc
sub
cmp
ret
adc
outsb
into
sub
daa
jb
xchg
shrb
leave
sbbb
xor
aaa
and
pushf
mov
mov
jmp
add
xchg
hlt
mov
movsb
jl
cmp
enter
push
push
fdivs
jmp
mov
insb
in
dec
mov
in
std
mov
repz
popa
mov
xchg
lahf
push
pushf
out
in
sub
inc
inc
sarb
and
stos
rcrb
mov
sbb
mov
or
push
leave
mov
or
sahf
jb
ret
arpl
pushl
test
jecxz
scas
fdivrp
or
and
mov
pop
int
mov
jmp
or
inc
push
cmp
or
insb
push
fadds
js
lock
rorb
mov
dec
xchg
loope
test
ja
pop
push
cmpsb
mov
call
sbb
cmp
push
mov
and
hlt
aas
sarb
xor
xchg
shrb
push
xor
ds
push
rcll
xor
gs
cmp
adc
xorl
call
out
call
stos
je
inc
pop
lret
mov
push
xchg
mov
add
es
inc
mov
mov
push
sti
pusha
adc
icebp
jnp
jbe
repz
pop
rol
in
and
push
mov
or
push
andb
add
xchg
xchg
scas
icebp
and
sarl
cmp
or
outsl
hlt
ds
add
stc
dec
cmpsb
inc
bswap
mov
xchg
pop
add
mov
xchg
in
sbb
out
mov
or
lahf
or
out
lahf
ret
mov
in
sahf
sub
add
push
loopne
xor
and
add
or
and
es
insb
xchg
jmp
inc
mov
movsb
xor
in
je
lods
loop
dec
sarb
sub
jmp
xchg
or
ret
in
pop
dec
push
xchg
and
cmpsl
add
lret
call
xchg
sbb
pop
xor
sub
mov
or
sub
lods
inc
sub
push
out
cmpsb
mov
arpl
xor
sbb
cmpb
inc
jmp
sti
and
push
mov
pop
popa
and
std
add
adc
and
and
mov
icebp
mov
cld
faddp
aad
ret
imul
popa
inc
jmp
scas
or
test
fcompl
pop
outsl
outsb
pop
dec
adc
mul
xlat
out
popf
dec
cmpsl
dec
test
frstor
sub
lds
pop
jg
adc
mov
imul
bound
data16
adc
int
cmp
ja
scas
fldenv
add
sbb
cmp
jno
lret
fadds
sbb
popf
cmc
pop
roll
mov
and
aas
dec
out
jo
add
mov
mov
aas
scas
mov
mov
and
out
icebp
movsb
rolb
popf
or
loop
pop
jb
push
hlt
or
repnz
ljmp
cmp
es
je
and
sti
addr16
out
jg
mov
ss
sub
into
xor
jo
arpl
ret
sbb
xchg
test
fdivr
out
adcb
jle
das
pop
cmpsb
mov
popf
pop
cmp
out
fstpt
repz
add
mov
orb
cmp
inc
adc
lods
ret
inc
data16
and
insb
fwait
hlt
add
je
in
cli
mov
push
xchg
insb
mov
loope
xorb
cmpsb
xlat
cmpsl
orl
inc
xor
dec
test
je
add
mov
popf
les
jp
mov
lret
ja
popl
jb
rclb
outsb
daa
ljmp
leave
mov
das
fs
sub
sub
das
filds
cmp
scas
enter
jmp
mov
fcomp
adc
mov
movb
shll
test
or
xlat
addr16
notl
jnp
ljmp
mov
fldcw
push
in
adc
mov
cld
je
or
jb
sarb
daa
rorb
xchg
rcrl
mov
mov
pop
daa
call
xor
mov
lods
fstpt
sub
bnd
fnstcw
push
mov
imul
push
pop
roll
or
int3
xchg
arpl
std
sub
jo
clc
in
ret
mov
xchg
dec
jge
cmc
mov
mov
daa
xchg
cmpsl
add
ret
jbe
shll
xchg
sbb
fdivrs
cmpsl
xchg
out
dec
jnp
sahf
sbb
imul
inc
mov
jmp
loope
mulb
mov
push
ds
dec
jecxz
in
mov
fcmovu
mov
cmp
add
fists
mov
pop
sbb
sub
pop
rcr
enter
fsubr
popw
shlb
sub
scas
mov
outsb
mov
jle
jno
or
sarl
xchg
mov
cmp
push
lret
test
into
fs
in
fwait
loop
sub
lcall
aaa
sbbb
jae
cmc
ljmp
fs
pop
test
call
aaa
imul
pop
aad
jmp
xchg
gs
xor
mov
xor
jns
out
jp
mov
inc
pop
dec
ss
xchg
push
cmpsl
and
dec
movsb
lock
mov
lock
mov
xchg
repz
mov
ljmp
inc
sahf
stos
xchg
adc
xchg
and
cmc
mov
ficoms
mov
mov
loop
lret
sub
daa
sbb
mov
popa
add
cltd
and
jmp
pop
cltd
add
cmpsb
inc
mov
cmp
lahf
and
and
rcrb
push
cmp
mov
jecxz
cmpsb
test
test
mov
leave
add
xor
mov
jge
cs
div
test
pop
jl
mov
fisubl
fsubrl
imul
fisttps
arpl
shlb
fs
in
mov
inc
scas
sbb
mov
icebp
inc
jmp
dec
mov
sarl
stos
clc
into
push
pusha
mov
imul
mov
push
inc
sub
inc
enter
xchg
addr16
mov
hlt
lahf
jae
sbb
xor
push
pop
mov
sbb
lods
clc
and
ficompl
cli
mov
xor
add
pop
lods
or
iret
adc
scas
inc
mov
shl
dec
adc
jne
jae
jmp
dec
subb
pop
mov
xchg
aam
movsl
nop
xchg
pop
and
fstpt
loope
mov
xchg
scas
mov
or
push
and
popa
xor
cmp
std
mov
cmp
xchg
lods
popf
mov
inc
and
std
pop
es
out
or
mov
outsb
jmp
pop
jae,pt
movl
pusha
adc
push
jnp
shl
out
mov
inc
jne
out
gs
aad
dec
cmp
test
jp
sbb
imul
mov
push
jb
mov
jecxz
mov
push
push
stos
inc
mov
rorl
mov
nop
lods
xor
shl
push
xor
pop
pop
sbb
in
cmp
aaa
mov
mov
add
dec
push
popf
sarl
pop
iret
mov
push
rcl
and
testb
sub
push
xorb
xchg
mov
rep
adc
push
dec
clc
es
dec
loop
mov
jecxz
subl
outsl
add
mov
mov
pop
mov
in
cmpsb
int3
add
xlat
jecxz
scas
ljmp
cltd
mov
int3
xor
nop
cmp
mov
scas
adc
popa
dec
and
aaa
pop
and
es
xlat
movsb
lock
xchg
mov
dec
hlt
cmp
sbb
sbb
roll
push
pop
mov
or
xlat
xchg
mov
sti
gs
insb
add
fadd
arpl
aad
add
adc
xchg
xchg
jge
dec
mov
xor
sbb
push
jns
pop
xchg
inc
mov
jbe
cltd
test
test
jecxz
mov
ljmp
xor
jne
adc
inc
add
stc
dec
mov
gs
fnsave
test
addr16
lock
and
xor
push
mov
push
insl
sahf
mov
inc
lea
cltd
xor
dec
outsb
add
cmp
lods
into
pusha
fldlg2
push
stos
out
fs
data16
cmp
pop
mov
fs
ljmp
icebp
mov
or
dec
sti
mov
pop
or
pushf
aad
push
and
mov
inc
mov
inc
cmp
fnsave
popl
testb
xor
sarb
cwtl
adc
sahf
das
loope
mov
das
mov
ss
dec
xchg
lock
pop
and
push
pop
mov
inc
div
and
das
or
mov
inc
and
cmp
mov
in
pop
cmp
dec
inc
in
xchg
clc
stc
dec
jne
add
icebp
ret
into
lods
pop
cli
pop
adc
or
mov
mov
shll
dec
add
je
aad
mov
push
adc
ss
sub
jmp
lods
enter
mov
in
and
fidivs
lret
jge
and
cmp
fwait
sahf
or
in
push
pminsw
cmpl
or
jbe
sbb
or
in
loopne
push
or
adc
fs
test
add
bound
ret
cmp
scas
push
cmp
dec
in
mov
test
incb
pushl
jne
and
mov
pop
sub
cmp
fs
aas
dec
push
jmp
negl
iret
pop
xor
mov
adc
pop
ja
in
ror
xchg
cmp
aad
addb
jmp
arpl
or
mov
sbb
ss
insb
repz
jae
add
dec
push
inc
mov
adc
fldcw
pop
insb
aam
test
mov
and
jp
jo
push
jne
pop
into
xor
mov
test
xchg
mov
adcb
mov
lods
mov
lret
xor
mov
rol
gs
jnp
outsb
cmp
xchg
fwait
int3
popf
sahf
jge
cwtl
jecxz
test
mov
sahf
imul
xchg
add
gs
in
xchg
push
or
jne
fbstp
sub
push
jl
mov
inc
xchg
rcll
and
xor
in
call
bound
mov
inc
lret
inc
xchg
xchg
icebp
xor
jle
js
cmp
push
subl
pop
and
dec
lcall
cmc
mov
xchg
rep
mov
cmp
xor
add
je
mov
out
xor
outsl
mov
push
inc
out
sub
mov
shrl
std
cmp
push
lret
mov
cmp
ljmp
dec
sub
cmpsb
outsl
jno
or
test
sub
test
or
stos
lret
mov
mov
test
into
push
adc
dec
or
lret
mov
xor
cld
outsb
shlb
outsb
out
or
gs
add
dec
stos
pop
mov
inc
cmpsl
add
pusha
push
mov
push
out
xchg
or
push
mov
add
push
push
mov
loope
fdivrl
xchg
xchg
cmp
push
movsb
or
xor
jnp
out
mov
jl
sbb
push
xor
in
push
or
jno
orl
sub
outsb
repz
popf
lret
mov
mov
add
adc
mov
dec
stos
xchg
mov
jb
dec
xchg
shrl
movsl
inc
andl
or
out
mov
or
in
dec
sub
into
lcall
ret
sbb
xor
mov
fisubrl
data16
cmp
orb
inc
inc
mov
mov
shrb
inc
and
xor
inc
arpl
popa
dec
dec
dec
cwtl
movsb
in
cmp
xchg
iret
mov
jmp
ffreep
xchg
cmc
lock
fwait
xchg
xchg
mov
pop
mov
out
push
pop
jo
cmp
addr16
int
movsl
push
leave
xchg
ljmp
push
fldcw
shll
cltd
push
pop
mov
inc
jne
fidivs
mov
inc
into
adcb
dec
inc
mov
into
rorl
jbe
pop
test
dec
and
fsubrs
pop
adc
add
dec
jno
sbb
and
dec
cwtl
xor
imul
or
push
xor
cmpsl
lods
jns
das
mov
push
sub
mov
mov
adc
mov
clc
test
lcall
mov
adc
lock
sbb
adc
rclb
stc
mov
repnz
fimuls
xchg
mov
adc
imul
and
int
pop
into
xchg
std
stos
and
arpl
int
lahf
cltd
mov
lods
sub
cmp
mov
push
in
shll
loope
into
enter
sub
mov
dec
xor
sbb
test
jns
mov
bsr
push
dec
cmp
sbb
push
push
inc
pop
inc
sbb
or
dec
xchg
jns
cmp
loopne
je
idivl
lock
jl
dec
and
cmp
imul
sbb
outsl
and
lea
cld
ljmp
adc
rorb
stos
cmpl
mov
xchg
scas
jg
jmp
popa
pop
pop
scas
movsb
ja
cltd
movsb
push
ss
mov
mov
mov
test
jl
hlt
cmpsb
test
mov
mov
aaa
cltd
or
pop
aaa
aad
ljmp
gs
adcl
lods
aad
in
cwtl
rclb
iret
add
and
pushf
ds
in
add
repz
out
ss
pop
repnz
pop
sbb
mov
test
adc
xor
sub
jnp
push
mov
mov
sbb
repz
pop
outsl
jl
and
iret
dec
stc
or
popa
scas
push
icebp
dec
xchg
inc
add
or
or
and
call
dec
out
rcrl
into
std
mov
clc
sbb
test
testl
in
xor
int
andl
shlb
jnp
rcll
adc
xor
sub
cmp
pushf
mov
xor
movsb
popf
in
push
mov
jle
adc
int
sti
std
cmp
aaa
lcall
rolb
rcrb
cmp
cs
jmp
jb
sbbb
pop
dec
loopne
mov
push
int
push
pop
mov
mov
xchg
cmp
and
push
jecxz
dec
sbb
addr16
ja
lret
inc
shrl
pop
outsl
cmc
jns
jo
decl
fdivs
mov
cmc
mov
test
add
mov
movsb
or
mov
out
mov
mov
pop
cmp
imul
call
cwtl
jne
fnstcw
popf
imul
daa
sub
int3
shl
and
testb
pop
test
dec
cli
pop
pop
pop
je
popa
aam
insb
add
mov
dec
add
pop
push
lea
inc
xorl
adc
pop
lahf
push
repnz
mov
sbb
mov
mov
mov
lret
jo
cmc
sub
movsb
push
loopne
or
gs
mov
mov
inc
jnp
adc
inc
mov
jae
or
repnz
jae
test
stc
inc
insb
inc
push
pop
shlb
adc
adc
aam
mov
outsb
push
xor
xor
cmpb
xchg
cmpsl
mov
pop
add
mov
mov
out
cwtl
xor
ds
jle
sti
cmc
pushf
popa
nop
mov
jno
testl
test
pop
loopne
test
clc
ja
enter
push
sub
es
loop
jge
xor
mov
mov
mov
dec
pop
notb
xchg
xor
cmp
xchg
rcll
sbb
rclb
adc
imul
adcl
movl
stc
inc
test
dec
jae
out
imul
hlt
jmp
imul
imul
int3
or
roll
jbe
cmpb
idivb
stos
adc
mov
roll
sub
jb
inc
lahf
xchg
mov
outsb
xchg
pop
push
pop
lahf
jns
aaa
xchg
inc
aad
js
test
mov
lods
or
cmc
dec
sarl
pop
ret
cmp
sub
dec
and
ror
cmc
pusha
pop
insl
add
clc
sub
testl
mov
addr16
stc
dec
leave
sub
jp
js
dec
inc
filds
jns
pop
pop
dec
push
scas
insb
outsb
ljmp
imul
imulb
jbe
sbb
cmc
adc
and
xchg
push
pop
dec
jne
aad
adc
ds
stos
decl
in
add
loop
cmpl
cmp
sar
bound
nop
cltd
mov
pop
mov
repz
ljmp
adc
ljmp
int3
and
sar
add
jno
femms
pop
jb
xor
call
dec
sbb
sbb
lock
or
cmc
xor
mov
mov
cmp
fnstenv
push
sbb
lret
popa
xchg
fnstenv
outsb
pop
cwtl
in
imul
push
sub
loope
adc
xorb
aaa
out
movsl
sbb
ret
aam
ret
push
dec
das
dec
int
es
popa
fnstcw
cmp
sub
daa
lods
mov
inc
pop
sub
mov
mov
dec
in
cmpsb
es
out
pushf
mov
xchg
push
clc
jmp
mov
pop
cmp
js
frstor
jg
mov
or
popa
mov
arpl
rcrl
ss
xchg
hlt
xchg
jo
and
nop
rcr
arpl
mov
sbb
adc
stos
pop
pop
shl
jp
ret
mov
sbb
lods
push
out
stos
sbb
cmpb
push
jp
jp
ror
xchg
jmp
mov
scas
iret
push
fmuls
daa
push
push
test
loop
scas
push
leave
fisttpl
jo
int
mov
cs
mov
mov
inc
adc
sub
add
psubusb
and
cmp
xor
je
fmulp
jp
inc
shll
lods
or
cmp
or
pusha
jle
or
test
adc
mov
mov
xlat
jne
xchg
out
aam
test
push
mov
dec
jo
mov
mov
xchg
in
push
cmc
mov
push
jns
push
jle
jp
lret
xorb
insl
or
pop
test
sub
mov
pop
push
jae
test
testb
jno
fwait
mov
pusha
das
aad
aaa
cmp
gs
inc
xor
and
push
arpl
jmp
dec
ss
mov
inc
mov
and
mov
mov
adc
mov
jbe
push
jne
push
xor
or
scas
bound
inc
add
mov
ret
jle
push
shl
jge
mov
push
xor
nop
xchg
notb
and
popa
lds
jp
mov
nop
sti
xchg
lock
test
fnstenv
or
xchg
cmpsb
mov
dec
xchg
dec
add
call
fucompp
cs
mov
in
jle
xchg
and
pusha
scas
mov
scas
push
arpl
inc
push
ds
xchg
fmuls
mov
xchg
in
cmp
pop
mov
sti
aas
and
imul
jl
mov
clc
out
jb
insl
fdivrl
jmp
mov
or
push
sub
daa
xchg
jecxz
scas
cmpsb
cmp
mov
xchg
xchg
mov
fldenv
ret
lods
mov
mov
ret
jmp
test
xor
mov
pusha
movsb
adc
in
add
imul
movl
cmp
jno
push
xor
mov
or
mov
rcll
sub
cmp
xor
and
sbb
push
les
call
test
movsl
jl
sub
imul
int3
sbb
xchg
or
out
ret
adc
imul
rol
jp
dec
xchg
in
mov
cltd
int
push
fs
dec
xor
ret
push
stos
dec
xchg
fbld
test
mov
xor
mov
negw
dec
negl
cmpb
jp
or
dec
xor
scas
sti
cltd
je
faddl
dec
bound
les
cmpsb
popa
cli
outsb
aaa
movsl
push
push
es
mov
pop
outsl
pop
or
jl
stos
clc
jp
mov
into
scas
jp
fstl
cli
daa
mov
jmp
xchg
test
xchg
xchg
add
and
repnz
ja
mov
mov
loop
dec
in
rcll
xor
cld
loopne
push
inc
or
xor
faddl
lret
stos
fsubrs
xor
sti
notb
xchg
in
mov
jmp
insl
fs
inc
or
or
adc
sbb
shlb
jb
and
adc
mov
out
jae
inc
mov
pop
into
push
je
rcl
scas
roll
ds
adc
aas
loopne
add
push
or
out
sahf
pop
clc
rclb
ror
push
inc
dec
je
sbb
dec
sbb
mov
mov
sub
sbb
js
in
or
cmpl
ret
adc
mov
insl
test
jno
popa
call
lods
xchg
xorl
insb
pusha
sbb
std
dec
or
loopne
imul
cltd
in
dec
mov
std
movd
ljmp
mull
clc
inc
mov
xchg
shlb
push
pop
dec
and
test
jo
aas
mov
fstpt
mov
cld
scas
inc
pop
pop
arpl
popf
adcb
rcr
push
pop
xchg
push
gs
mov
mov
dec
mov
inc
xchg
add
mov
and
jmp
aam
into
je
ret
pop
shlb
fdivl
out
repz
loopne
mov
lds
aad
imul
adc
lock
jle
in
repnz
inc
xchg
lahf
ret
ja
mov
rcrl
rcr
cmp
push
inc
push
mov
ja
mov
mov
dec
lods
fildl
rcrb
pop
xor
or
mov
and
aam
pop
out
and
iret
xchg
jge
or
out
mov
subb
inc
xchg
lcall
iret
test
stc
outsb
sub
pop
or
out
call
rcrl
lods
sarb
dec
je
imulb
cmp
sub
jg
push
inc
push
testb
xor
mov
pop
iret
outsb
incl
js
push
inc
xlat
sbb
mov
inc
pop
stos
xor
test
rcl
mov
fxam
jb
jns
dec
stos
pop
outsl
loop
xor
clc
add
es
adc
aad
std
cmp
mov
lcall
mov
addl
call
insb
push
out
pop
mov
dec
cmp
push
loopne
test
jno
shll
flds
ss
or
xor
cmc
sti
sub
loope
adc
in
fimuls
jno
mov
mov
cmp
orb
add
sbb
push
pop
movsb
jo
orl
push
pusha
mov
xor
jp
clc
shr
and
test
or
mov
inc
mov
jbe
cmpb
sbb
inc
mov
mov
cmp
call
adc
cltd
sub
pop
lahf
push
sub
or
cmp
xor
cmpsb
je
lahf
sahf
pop
sahf
dec
jecxz
popf
xor
rorl
or
std
scas
ljmp
push
dec
shl
test
ret
sti
orb
aaa
popa
xchg
inc
jns
inc
push
fcmovne
test
scas
nop
stc
inc
ja
xlat
mov
add
xor
jp
andb
lahf
pushf
mov
xchg
cld
sbb
sbb
imul
fdivr
adc
mov
cli
dec
pop
stc
ret
call
mov
into
fwait
jecxz
pop
leave
adcb
in
sahf
jne
add
aam
outsl
sub
fidivs
insb
iret
push
mov
mov
andb
dec
xchg
pop
dec
mov
pop
push
pop
push
sbb
inc
inc
into
mov
ffreep
aad
ret
lahf
imul
outsb
cwtl
repnz
push
and
jnp
xor
daa
loopne
sub
sub
pop
mov
xor
daa
push
sub
xchg
mov
subl
andl
aad
mov
dec
sbb
sbb
xchg
dec
xchg
xor
lcall
fwait
shrl
mov
pop
or
out
xchg
rep
loop
lock
lods
in
je
adc
ds
add
vmovmskps
sahf
jns
pushf
mov
neg
push
and
dec
mov
and
sbb
sahf
pushf
and
sbb
pop
enter
xor
jle
fnstenv
call
xor
mov
mov
clc
fmull
sbb
repnz
push
jl
or
push
cs
xchg
stos
int
xor
fists
std
cltd
fistpll
rol
arpl
push
cmpsl
rclb
xor
mov
jge
cmp
lock
icebp
sbb
inc
loopne
pop
and
add
fcomps
mov
mov
pop
addr16
bnd
add
repz
mov
push
mov
enter
jle
lahf
ds
test
enter
inc
mulb
sbb
out
ret
add
adc
adc
sbb
mov
inc
mov
jp
ss
daa
rcl
push
or
pop
loopne
repnz
jno
iret
push
dec
ficompl
sti
out
cmpsb
jl
daa
pop
push
push
mov
iret
js
loopne
sub
je
stos
jle
mov
xor
dec
or
insb
mov
fwait
test
fcompl
or
nop
and
xchg
cltd
sbb
sbbl
sbb
adc
andb
mov
jae
popf
push
push
mov
pop
dec
cmpsb
pop
mov
dec
mov
mov
sbb
or
enter
outsl
iretw
or
imulb
mov
adc
inc
cli
mov
push
call
inc
in
pop
inc
lods
mov
add
sub
xchg
mov
fiadds
xlat
leave
paddusw
jp
dec
faddl
push
jnp
rclb
imull
mull
mov
test
sbb
fcompl
mov
push
sub
call
pop
push
das
xchg
sbb
mov
mov
js
and
push
fdiv
inc
daa
lahf
sub
jp
add
push
test
xor
stc
xor
xorb
sbb
fstpt
cmp
arpl
xor
sarb
xor
jo
xor
xor
dec
psadbw
dec
xchg
lds
pushf
push
rcrl
mov
js
inc
mov
out
lret
xchg
lods
sti
push
outsb
test
pop
sbb
rcll
into
sbbl
jbe
stos
xchg
mov
pop
pop
and
add
xchg
adc
push
cmp
ss
sub
inc
jnp
pop
add
mov
adc
adc
or
clc
or
scas
mov
lds
xlat
das
lds
and
fs
xor
sub
rolb
xchg
test
movsl
inc
insl
pop
scas
add
loop
jo
jl
push
push
pop
adc
arpl
pop
mov
sbb
cmc
mov
mov
push
loop
inc
xchg
push
push
movb
arpl
lds
xchg
jl
addr16
mov
int
repz
sti
mov
cmc
mov
dec
pop
inc
ds
sbb
repz
push
mov
adc
mov
xor
xchg
mov
push
in
sbb
iret
cmpsb
or
ja
sbb
inc
js
in
mov
xchg
or
mov
outsb
imul
cmp
inc
adc
mov
out
adc
xchg
cmpsl
pop
mov
xor
mov
stos
push
cmpsl
imul
sub
xor
test
pop
mov
jmp
adc
inc
out
ret
ja
loopne
mov
das
mov
add
fcmovnb
dec
test
stos
mov
das
fadd
es
push
inc
lcall
jnp
pop
add
adc
inc
xor
push
mov
movsl
and
sbb
xor
xchg
jl
mul
xor
fucom
imul
sbbl
ret
flds
mov
push
shll
or
std
int3
push
fldl
mov
mov
cltd
jp
subl
mov
xor
pop
loopne
fstpl
leave
or
mov
mov
lcall
rolw
inc
sahf
cli
out
dec
sub
adc
out
pushf
xor
outsl
dec
jmp
lahf
push
mov
out
arpl
push
pop
dec
mov
inc
pop
lods
out
and
add
xor
std
sbb
jns
pop
push
hlt
in
sbb
push
push
sbb
das
pop
test
sbb
mov
push
out
jmp
mov
push
push
inc
pop
daa
bound
xlat
xchg
push
add
mov
movsb
cmpsb
mov
add
gs
out
fcos
fimull
test
mov
bound
daa
push
add
out
xor
jmp
pop
pop
popa
scas
stos
scas
sub
enter
sbb
cld
inc
lods
iret
pop
mov
mov
orb
out
orb
jecxz
jg
push
inc
stc
test
data16
mov
xchg
xor
xor
fmulp
subl
cmp
xchg
stc
or
mov
mov
test
adc
jecxz
inc
aaa
stc
mov
xor
dec
dec
fucomip
ret
adc
in
mov
lret
cwtl
xorl
push
inc
data16
mov
mov
aas
mov
popf
add
int3
lods
in
or
insb
jbe
mov
push
adc
jae
cld
pop
adc
dec
std
push
mov
stc
lods
js
add
adc
jp
pop
lds
iret
data16
pusha
and
mov
lret
mov
pop
sbb
mov
add
sub
shrb
loope
pusha
cmp
jae
arpl
cmp
mov
dec
pushl
and
nop
gs
dec
pop
sub
into
sbbl
sahf
adc
in
inc
je
rcr
repz
bound
adc
pop
negl
jnp
call
and
dec
jle
lea
and
xchg
mov
pop
and
ds
jno
jmp
jecxz
out
xchg
xlat
iret
or
or
mov
into
je
mov
dec
push
mov
fiaddl
dec
lds
inc
andl
ds
das
into
dec
sbb
gs
pop
mov
add
test
fwait
pop
jl
cmp
push
mov
or
test
mov
mov
jbe
xor
imul
push
popf
movsw
sbb
call
fistpl
outsb
xchg
ja
pop
pop
add
int3
jne
enter
jg
xor
mov
movsb
pop
leave
cmpsl
add
dec
inc
jl
inc
iret
fists
or
sub
repz
test
aaa
cltd
mov
stos
jp,pt
lock
mov
push
cltd
popa
and
int3
iret
xor
lret
jne
add
and
sar
incb
nop
sub
aad
fcmovb
test
jecxz
mov
std
jae
xor
enter
adc
adc
push
popa
fdivl
out
pushl
pusha
push
rclb
pop
daa
adc
and
push
mov
push
in
paddusb
inc
ret
xor
mov
mov
push
jbe
cmp
insl
aaa
inc
mov
call
imul
scas
repz
ffreep
sbb
jo
imul
xor
dec
jmp
mov
lea
jnp
inc
pop
push
cwtl
loop
xchg
repz
sub
lods
loop
jp
sbb
addb
inc
repnz
andb
and
outsb
inc
out
testl
popa
cmp
mov
lret
lret
sub
inc
add
outsl
imul
notb
sbb
cmpsb
cmp
xor
in
xchg
adc
jmp
jae
scas
das
es
jg
stos
int3
adc
cmc
xchg
int3
aad
dec
add
xchg
sarb
int
jl
and
cmp
jns
icebp
adc
pop
cmp
mov
loope
pop
outsb
popf
insb
xchg
adcl
mov
cld
xor
je
fs
pop
enter
cmp
fldenv
push
clc
or
sbb
inc
jge
cmp
ljmp
test
cmpsl
iret
andb
inc
lahf
push
sub
jge
mov
out
push
out
xlat
aaa
or
daa
and
push
aam
adc
jns
adc
stc
mov
leave
es
mov
pop
xor
add
xlat
xor
cwtl
shl
rcll
xchg
inc
mov
movsl
cmp
cmpsl
dec
cmpsb
jo
fldcw
and
imull
cmp
fstps
in
xor
test
ret
xchg
jb
js
repnz
inc
pop
pop
sbb
call
adc
dec
in
test
sbb
mov
arpl
mov
repnz
data16
fsubl
sub
fbld
fneni(8087
mov
test
mov
lahf
xor
loopne
jne
mov
xlat
dec
test
mov
push
into
scas
mov
lcall
jp
inc
int
in
jns
in
jbe
std
add
testl
ss
loop
ret
add
mov
clc
sub
addr16
cmp
dec
xchg
jb
dec
cmc
cmc
pop
push
sbbb
mov
stos
ffree
aam
cmp
leave
mov
out
and
shl
popf
scas
insl
sarl
inc
pop
test
loopne
sti
in
clc
ret
cld
lret
mov
push
push
daa
movsb
jmp
pop
mov
in
imul
sahf
xor
pop
mov
out
mov
test
xchg
enter
or
push
add
pop
icebp
jno
sbb
mov
fcompl
stc
sub
push
scas
pop
outsb
cld
dec
adc
shlb
dec
mov
pop
nop
lods
xlat
add
cmpsl
sub
nop
mov
dec
stos
cmc
xchg
sub
xor
cwtl
lret
pop
stc
inc
pop
fucomip
call
out
add
enter
mov
fs
pop
add
je
push
add
push
jnp
add
stos
sub
jae
aaa
push
sbb
inc
jnp
jmp
out
popa
cmp
push
dec
fisttpl
sbb
ds
mov
mov
inc
jl
cmp
mov
jg
stos
xor
into
adcl
inc
xor
adc
lcall
lret
insl
push
sbb
lock
mov
movsl
sub
popa
mov
xor
push
mov
mov
js
pop
jmp
jae
mov
xchg
pop
popa
mov
int3
pop
xchg
mov
fmull
xor
sub
stos
addb
lock
gs
cmp
push
pop
lods
sub
pop
sbb
mov
lods
mov
mov
std
or
mov
ret
fadds
push
lods
jb
add
pop
lret
push
out
dec
jbe
or
mov
pop
add
sbb
xor
add
inc
lret
push
in
je
cmpsb
sbb
lds
add
sub
repnz
fldt
bound
scas
sti
lcall
mov
pusha
in
aaa
daa
lods
popl
movsl
push
shll
cli
lods
sarl
or
mov
lret
push
lds
iret
cmpsl
lret
sub
cmp
inc
call
pop
xchg
imul
in
test
mov
add
cli
js
test
pop
lahf
shrb
inc
cs
mov
push
or
icebp
lds
lods
stos
fadds
mov
inc
loopne
add
xor
cld
push
sub
sarl
add
fadd
jg
mull
inc
xor
push
mov
inc
cmp
pop
push
mov
or
int3
cmp
hlt
jge
test
sbb
mov
jbe
jo
jl
pop
jbe
mov
into
sub
or
ss
sbb
lcall
xchg
or
push
jecxz
mov
es
cs
and
nop
rcr
mov
mov
jbe
mov
adc
mov
test
shll
stc
shl
inc
pushf
and
add
mov
sbb
shlb
lret
adc
sti
add
test
inc
mov
pushl
out
sbb
lods
leave
sahf
xor
lds
lods
push
cmp
jge
inc
pop
add
fs
leave
dec
insl
sbb
nop
sbb
cmp
out
or
clc
sub
inc
sarl
xchg
in
mov
testl
sbb
mov
xchg
push
fcomp
adc
jb
cltd
xor
adc
stos
and
clc
jno
outsl
or
push
sub
push
or
add
pop
rclb
int3
test
dec
arpl
nop
das
out
mov
arpl
lea
sbbl
or
stc
adc
and
hlt
or
cmpsb
dec
rclb
stos
cmp
in
ja
jo
and
test
cwtl
popf
xchg
cli
pop
insb
int
je
addb
jmp
jne
sbb
lock
sbb
push
mov
push
push
pop
das
mov
shrb
jbe
or
std
cld
insb
inc
pop
iret
insl
loope
pop
xchg
cmp
mov
mov
sar
bound
in
cmp
inc
mov
rcrl
adc
cs
xor
pop
loop
addb
fs
insb
xchg
popf
sbb
mul
mov
jno
mov
or
cmp
cmpsb
js
lds
and
fimuls
les
ret
pop
shlb
les
pop
clc
add
pop
call
xchg
in
repz
xchg
loope
jo
lods
adc
es
sbb
fmull
fs
daa
push
into
and
enter
or
sbb
icebp
leave
imull
xor
jae
aam
test
shll
lods
add
jne
pop
xchg
sahf
negl
or
repz
push
shll
insb
out
sub
insl
lods
add
arpl
dec
push
adc
or
adc
call
sbb
xor
mov
mov
sbbl
push
dec
mov
fwait
in
cmpsl
movsl
test
sbb
daa
fisubs
jb
sbb
sbb
fwait
xor
lcall
jb
sbbl
push
mov
jg
aaa
mov
jno
and
mov
mov
xchg
jnp
rcrb
dec
shrl
in
repz
jb
ret
adc
int3
out
pop
mov
inc
or
aas
into
movsl
ss
pop
jne
aaa
adc
fmull
mov
movl
int
adc
test
out
jl
movsb
in
push
cmpsb
add
mov
pop
adc
mov
test
scas
and
loope
and
cmc
mov
sub
or
lahf
sbb
and
or
pushf
push
adc
sar
ja
push
scas
sbb
xorb
inc
jnp
jmp
in
popa
mov
into
dec
jmp
ret
data16
push
shlb
add
adc
mov
stc
mov
xchg
std
rcrl
xchg
add
xchg
sarl
mull
jle
cmp
imul
push
orl
enter
xchg
cmp
sub
cwtl
divl
aad
push
dec
inc
notl
test
iret
pop
aam
lcall
dec
les
cmp
iret
out
nop
jbe,pn
pop
aaa
cmp
sbb
cltd
test
dec
cmp
sub
sbb
dec
jno
das
aas
ficompl
jp
jno
jae
mov
cwtl
jecxz
pushf
mov
ja
lcall
jae
mov
insl
pusha
cmp
outsb
add
stc
gs
ret
out
out
mov
and
pop
out
add
mov
xchg
call
cmc
shll
push
fwait
movsb
mov
ss
pop
lcall
mov
dec
ljmp
std
pop
popa
mov
xlat
jo
mov
adc
stos
jns
dec
lret
pop
sti
push
jmp
mov
mov
bound
sbb
mov
repz
shll
jmp
in
dec
scas
or
cmp
aaa
xor
xchg
cmp
mov
xchg
and
mov
xor
mov
xor
pop
popa
sbb
lea
sbb
imull
mov
pop
mov
xchg
cmp
inc
and
jne
push
movsl
pop
movsb
ljmp
xchg
outsb
push
loop
mov
and
inc
inc
pop
mov
xor
xor
add
std
adc
inc
mov
jb
sub
cs
je
sti
push
daa
out
mov
jnp
push
fs
fimull
mov
cs
cmc
lret
push
xor
cmp
or
int3
xor
push
mov
push
lods
aaa
sbb
adc
sub
test
mov
xor
jns
hlt
test
mov
or
repnz
mov
jnp
inc
push
pop
jbe
or
imul
int
sahf
in
push
jae
lcall
cwtl
push
imul
adc
xor
dec
nop
inc
int3
aaa
scas
out
inc
cltd
in
jnp
aaa
inc
sbbl
and
test
and
pop
add
fs
cmpsl
rolb
mov
stos
rclb
out
mov
or
aam
repz
or
mov
mov
push
js
cmp
fistl
and
aas
pop
xchg
mov
or
dec
pop
xor
shl
jp
test
inc
jecxz
mov
fwait
aas
out
inc
das
pop
pop
pop
test
test
dec
sti
mov
pop
xor
mov
adcl
mov
ja
sub
cli
sbb
ficompl
lcall
fsubr
inc
ret
in
stos
lret
out
fnstenv
sub
push
jb
loope
and
jae
jecxz
xor
fstpt
sbb
jb,pt
add
lods
ror
out
cmp
mov
or
inc
push
jno
stos
roll
jl
push
lahf
fiaddl
inc
lods
movsl
xor
int
daa
cmp
and
xchg
jg
imul
xor
imul
rorb
or
clc
in
cmpsb
cltd
test
jg
cltd
loop
xor
adc
daa
hlt
jno
test
dec
rorl
cmp
sub
iret
shll
jns
out
add
xchg
xchg
dec
sub
xchg
xchg
sbb
jmp
std
xor
ja
into
loop
cmp
clc
cmp
in
xchg
dec
or
mov
dec
hlt
out
sub
mov
popf
stos
test
daa
dec
lret
cmp
lds
sbb
nop
stc
xchg
dec
call
mov
inc
jg
cmpsb
ret
mov
mov
idiv
mov
cmp
scas
stos
xchg
push
cmp
dec
mov
inc
mov
add
rcr
mov
sahf
lea
xchg
lods
or
pop
sti
jle
pop
add
sub
xchg
out
stc
iret
bound
xchg
jo
inc
inc
in
setl
add
lock
ljmp
jae
dec
xor
or
shlb
lret
dec
int3
out
ds
inc
dec
mov
popf
imul
xor
lods
pop
xchg
cs
dec
xchg
es
inc
pop
movsb
jns
xchg
and
pop
xchg
mov
das
jg
stos
jbe
xchg
xchg
dec
insl
push
sub
pop
cmp
jecxz
repz
cmp
inc
and
and
mov
inc
rorb
rorb
xor
pop
push
movsb
sti
or
sahf
adc
add
add
and
mov
loopne
cld
add
cmpsb
daa
out
inc
mov
dec
loope
lahf
mov
int3
push
test
mov
cmc
and
lods
dec
mov
mov
sub
cmp
mov
jmp
std
sub
out
out
out
xor
xchg
and
jo
dec
mov
sbb
push
push
or
in
mov
daa
sub
mov
test
push
fcoml
or
rorb
stos
cld
sbb
inc
dec
pop
out
ret
fisubrs
mov
or
shll
jmp
rolb
pop
imul
lods
inc
loop
jno
mov
jae
int3
pop
loopne
fstpl
inc
aas
movsl
clc
cmp
jge
mov
inc
iret
popa
or
test
and
ret
xor
xchg
jae
mov
gs
cmp
gs
cmp
in
aam
jbe
into
scas
cmc
pusha
aad
shl
lds
sbb
pop
ljmp
out
arpl
mov
mov
repz
push
xor
jl
mov
pop
mov
clc
das
mov
repz
pushf
push
and
mov
paddq
sbb
insl
mov
and
push
sarl
hlt
cmc
dec
icebp
xchg
repnz
jo
daa
mov
push
push
xchg
push
in
push
mov
leave
leave
mov
ja
xor
jp
outsl
mov
jnp
fptan
ljmp
scas
dec
cld
lods
cmp
mov
aad
shlb
jbe
in
and
out
mov
jbe
dec
cmp
mov
shl
sarl
lahf
into
mov
das
in
push
cwtl
cmp
or
lcall
and
mov
pusha
push
xlat
imul
lods
fsubrs
push
mov
movsb
cmp
jbe
cmp
pop
or
call
jge
xchg
sbb
data16
mov
aad
inc
iret
clc
jnp,pn
cmp
adc
lret
call
loop
ja
dec
in
jle
mov
xchg
mov
ljmp
push
fcompl
rol
pushf
or
fwait
or
mov
push
or
outsl
mov
fidivrl
rol
test
pop
and
jns
adc
xchg
das
dec
or
loop
cmpsb
mov
mov
pop
idivl
cmp
dec
aaa
xchg
or
aad
adc
das
adc
aad
int3
js
imul
outsb
pop
jbe
divl
test
cmp
inc
cmpsb
les
popa
sub
loope
jbe
scas
into
dec
insb
pop
cmp
repz
xchg
push
dec
cli
and
jecxz
ret
add
xchg
push
push
xor
mov
fisubrl
cmp
sbb
fildll
dec
cmp
addr16
outsb
lea
inc
mov
mov
repz
mov
dec
mov
adc
jbe
popa
mov
push
das
sar
mov
and
inc
pop
push
push
dec
rcll
jl
cmpsl
outsl
or
cmp
repnz
cmp
cltd
mov
dec
and
fdivrp
push
cmc
ljmp
mov
pop
pop
aad
sbb
shrb
lods
out
sbb
fstpl
mov
push
cmpl
add
les
dec
add
aad
mov
push
adc
dec
test
into
inc
pusha
sbb
mov
addr16
insb
cs
stc
mov
sub
mov
clc
loopne
popa
dec
mov
cmp
inc
mov
cwtl
rcrb
jns
lock
in
inc
add
add
rcrb
cmp
xchg
sbb
pushf
xchg
ja
xchg
inc
mov
int3
pushf
jnp
dec
movsb
push
lret
dec
mov
add
int
mov
mov
xchg
add
nop
xor
or
lret
lods
sub
jae
dec
jne
lahf
pop
jg
out
and
ret
adc
loope
inc
add
sbb
in
mov
add
xor
popf
jl
jno
jg
mov
sub
jns
arpl
sub
jb
xor
adc
call
lea
jecxz
push
aaa
xor
or
adc
in
rclb
mov
sbb
aaa
mov
insl
cli
xlat
imul
jmp
cmp
rorl
popa
mov
inc
out
jnp
add
out
cli
xor
pop
int
xchg
sub
xor
mov
inc
aad
sbb
das
ss
jnp
shlb
jne
into
cmp
mov
dec
sub
daa
sub
and
sub
mov
fisubrl
mov
jbe
jg
sti
mov
inc
loopne
lock
aam
cmpsl
mov
or
add
movsl
loop
ret
nop
xchg
arpl
pop
ret
in
mov
sub
adc
sahf
cltd
mov
jg
dec
sub
add
stc
sbbb
repz
enter
mov
fildll
jmp
dec
jg
mov
imul
jle
sahf
jle
addr16
test
in
xchg
xchg
pop
rorl
into
scas
pushf
std
enter
jne
xor
and
jne
data16
scas
add
sub
xchg
das
push
out
call
dec
sub
imul
lods
push
das
jne
dec
jge
mov
xchg
mov
dec
add
add
movsb
mov
movl
popf
add
outsb
movsb
sub
imul
bound
nop
push
sahf
mov
mov
popf
mov
pop
shrb
scas
add
pop
mov
jae
std
mov
ret
lcall
stc
sahf
xchg
icebp
jnp
fisubrl
mov
mov
mov
cmpsl
shl
ljmp
jb
adc
ret
mov
fisttps
push
fsubs
js
adc
mov
out
ljmp
lods
in
mov
out
stc
cmp
adc
and
imul
pop
call
sub
jbe
stos
in
jp
dec
xor
aad
jl
add
mov
movsb
dec
test
sub
jmp
addb
lahf
cmpsl
jne
cld
nop
push
jbe
or
or
lcall
cmc
mov
cmp
clc
mov
cltd
mov
loop
push
adc
jecxz
adc
imul
sti
inc
dec
pushf
push
addb
sarl
xchg
in
dec
cmp
add
cmp
daa
add
js
into
rorl
adc
ret
sbb
pop
push
lods
sub
jb
movsl
lds
cli
popf
push
jecxz
mov
ja
and
xchg
add
xor
outsb
cmp
mov
push
jecxz
addb
jnp
addb
shll
xor
ds
lods
push
xor
test
jno
orb
or
jl
jo
sub
adcb
jbe
cld
fdiv
xchg
insb
clc
outsl
daa
fsts
xchg
test
das
fnsave
mov
push
jmp
jbe
jmp
push
out
movsl
shrb
bnd
hlt
and
sbb
jbe
add
mov
cmp
fnsave
fnsave
sub
xchg
stc
popa
cmp
inc
jne
loopne
cld
shlb
mov
xchg
push
stos
jnp
mov
call
xor
ja
les
inc
cmp
lcall
cmp
mov
loope
add
repnz
jns
jge
jbe
lret
adc
mov
cmp
cld
mov
shll
jp
sbb
push
shll
or
push
or
sbb
jnp
add
scas
push
lods
imul
push
xor
pop
inc
movsl
outsl
jecxz
ljmp
shll
xchg
int
sub
sub
dec
je
sub
movsb
xchg
xor
nop
pop
lret
mov
jecxz
xchg
sbb
and
adc
ret
loope
mov
mov
cld
mov
xchg
shr
mov
add
add
xchg
in
lea
dec
mov
lcall
mov
mov
pop
sub
sub
cmpsb
add
mov
and
aad
or
repnz
dec
inc
or
jae
add
jae
or
mov
adc
or
push
xor
pop
fildl
in
les
imull
ja
mov
and
stos
and
push
divl
roll
test
pop
in
js
js
nop
cli
fcompl
inc
jae
cmc
inc
push
adc
jne
call
push
mov
push
xchg
popf
xor
xorl
out
xor
fsubr
lods
jl
mov
int3
scas
jg
inc
inc
in
lcall
fldcw
xlat
adc
jns
fwait
cmc
aam
sub
push
mov
and
push
mov
call
and
cwtl
pop
rorb
push
aad
xchg
rolb
jge
push
int
mov
mov
out
test
inc
xchg
cmc
pusha
jg
or
jo
out
inc
dec
pop
lahf
cmpsb
cmpsb
scas
cs
out
adc
dec
fldcw
pop
jle
sbb
in
inc
adc
pusha
jle
fsubrs
inc
jae
inc
data16
push
pusha
push
xlat
push
adc
push
aas
jb
and
lea
in
xor
in
xor
enter
jno
xchg
arpl
xchg
rdmsr
movsl
xchg
repz
je
push
stos
mov
sbb
jle
jb
int3
test
shrb
enter
dec
inc
adc
ret
stc
mov
stos
add
mov
call
cmp
in
xchg
mov
mov
cmpsl
inc
repnz
jno
cmp
cmp
arpl
sbb
mov
stc
or
xchg
lret
xchg
test
sub
aas
cmp
xorl
mov
jge
sbb
stos
ljmp
fnstsw
in
xchg
sub
dec
inc
xor
mov
mov
mov
jecxz
out
sub
pop
dec
mov
cli
xchg
mov
cmpsl
sub
insb
data16
xchg
mov
aad
inc
jg
mov
pop
inc
test
pop
mov
ret
faddl
mov
jbe
imulb
or
fdivrs
push
repz
jmp
stos
enter
or
cmp
rclb
pusha
ret
addl
stc
loopne
mov
pushf
in
cmpb
pop
sbb
imull
jecxz
testb
imull
out
rcr
orl
adc
lea
jmp
jno
pop
push
mov
hlt
dec
mov
add
lcall
or
fmuls
xchg
pop
adc
fdiv
add
lcall
pop
fnstcw
push
ficoms
mov
in
hlt
xchg
mov
mov
repnz
or
nop
call
in
sti
ljmp
xchg
ljmp
in
adc
int
inc
scas
pop
pop
sbb
test
cmp
enter
call
or
shll
jns
dec
addl
out
or
adc
flds
or
sbb
testb
dec
sbb
je
jmp
xor
cmp
cwtl
add
xor
and
iretw
jmp
or
mov
inc
jecxz
mov
mov
cmp
test
js
ficompl
jb
jbe
fwait
lret
lods
mov
sahf
arpl
push
cmp
fsubs
sbb
scas
sbb
or
mov
enter
push
or
pop
imul
repz
jmp
adc
testl
xchg
add
es
fxch
jo
imul
cmp
push
cmp
lods
loop
xchg
xchg
ret
xchg
ret
fsubrl
int
cwtl
xor
iret
psadbw
scas
xchg
aam
cmp
sbb
push
orl
cmp
lret
sub
enter
push
push
arpl
push
hlt
iret
inc
jle
inc
jl
or
jns
jae
lahf
outsl
aam
in
std
sbb
sbb
inc
repnz
dec
adc
xchg
cmpsb
mov
mov
mov
pop
into
add
jo
and
mov
ljmp
push
icebp
enter
imul
or
lret
cmp
mov
cmpsl
ds
xor
lods
sbb
aam
push
inc
dec
out
roll
adc
ret
rorb
push
add
les
fsubl
push
scas
ret
scas
aam
daa
pop
pop
cs
mov
inc
cwtl
test
sbb
outsl
adc
cld
gs
xor
pop
mov
xor
push
adc
cs
mov
pushf
js
mov
mov
mov
jb
xor
jae
xchg
clc
in
sub
dec
and
insb
loop
sti
outsl
test
test
push
pop
lret
flds
xchg
push
adc
ljmp
mov
push
pop
mov
call
xorb
cwtl
insl
pop
popa
cli
out
icebp
mov
out
pop
outsb
dec
pop
xlat
aam
mov
mov
sbb
fucomp
pop
cmp
in
or
pusha
fcomip
pop
cmpsb
testl
inc
jl
cs
pop
fsubr
repnz
sub
ret
push
xchg
movsl
in
testl
repz
lret
filds
jb
into
bound
mov
mov
sbb
out
dec
mov
sbb
push
pop
ret
mov
ljmp
fwait
movsl
inc
inc
pavgw
aaa
stc
cmc
out
sub
fnstenv
mov
cmpsb
dec
xchg
scas
ljmp
rolb
out
or
sbb
mov
repnz
mov
jmp
and
enter
mov
mov
add
call
mov
out
mov
stos
enter
mov
sbb
icebp
clc
cmpl
mov
mov
sub
mov
and
movsb
inc
lds
and
in
std
shlb
dec
pushf
jno
pushf
rorl
pop
mov
pop
arpl
je
jnp
push
jae
aad
cld
dec
lock
out
sub
mov
imul
sbb
push
xchg
pop
mov
adc
popa
icebp
adcl
cmp
insl
cmp
inc
xchg
fwait
mov
mov
push
jno
and
inc
fbld
loop
in
clc
daa
adc
movsb
cmp
nop
imul
push
xchg
es
imul
leave
add
scas
dec
sbb
lods
jns
imul
cmp
cmpsl
out
ja
cmp
jns
xor
pop
sub
pushf
add
bound
mov
or
cmp
mov
lods
rol
lret
roll
int3
int3
pop
push
popa
jl
mov
mov
shll
dec
mov
xchg
pushf
dec
dec
sub
pusha
fdivrs
jbe
jo
push
adc
mov
push
jb
ljmp
movsl
movsb
rol
xchg
inc
sbb
pusha
xchg
mov
fdiv
pop
mov
or
xor
rclb
aas
jbe
scas
push
icebp
popf
push
lds
xchg
int3
lods
mov
jl
jo
lret
pushf
mov
lret
mov
sbb
mov
mov
jp
and
je
fprem1
out
ljmp
adc
xor
sub
int3
adc
and
jecxz
cmp
ss
add
notl
sbbb
jecxz
mov
inc
pop
bound
cltd
jg
dec
scas
push
mov
lret
inc
inc
icebp
fs
fsubrl
jo
fimuls
es
xchg
mov
out
arpl
enter
push
scas
push
mov
pop
fdivrs
fldcw
cmp
cmove
je
mov
or
add
rcrl
jne
addr16
mov
jl
mov
shll
aaa
pop
and
mull
or
mov
adc
jnp
je
ja
fldl
jne
push
cmpl
mov
cwtl
popa
popa
outsl
push
pop
dec
outsl
ret
or
inc
movsl
push
in
das
fistpl
sub
add
icebp
adc
ss
pop
aad
mov
xor
mov
fcmovu
pop
jno
push
add
xor
or
fdivs
cmpl
mov
rcll
push
jno
stc
fldenv
cmp
rcrl
hlt
or
jns
fistpl
pop
cmc
cmpsb
lock
cld
test
pop
ficoml
push
xchg
xchg
in
pop
stc
add
add
dec
push
aaa
outsl
je
mov
call
adc
jle
add
test
pop
test
sbb
jecxz
sti
int3
mov
push
dec
icebp
fdivr
lret
iret
push
aas
jae
jns
sub
mov
sbbb
inc
mov
add
rcl
jbe
mov
leave
pop
int
sub
fwait
ror
test
add
repnz
xor
push
sub
out
or
mov
inc
fs
int
cmpsl
vmovddup
xchg
fidivrl
adc
pop
lea
mov
daa
and
rcrl
pusha
dec
movsl
cld
dec
sub
sahf
test
int
jp
mov
mov
mov
rcr
imulb
jmp
pop
inc
inc
pop
gs
xchg
maskmovq
divl
out
adcb
mov
js
les
ret
jg
cmp
out
addr16
sbb
mov
inc
jg
pop
inc
ret
es
fcomps
xchg
xor
cmp
sbb
jg
into
mov
lock
push
dec
cwtl
pop
sub
cmpsb
ljmp
decl
push
fs
lods
outsb
xchg
rorl
sbb
fdivrl
mov
jg
fdivs
dec
aas
arpl
inc
sbb
mov
xor
test
int3
add
sub
sub
inc
test
negb
push
lret
inc
mov
dec
cmpb
test
ret
nop
mov
cltd
movsl
pop
cmp
mov
int3
aas
sub
lods
call
or
jp
hlt
pop
stos
aas
xor
mov
aad
popf
sbb
aaa
xchg
inc
cmp
mov
idivl
fwait
cli
mov
pop
push
lret
jle
in
mov
out
sbb
sbb
pop
and
mov
ficompl
lock
add
mov
pop
fxch
lock
inc
adc
loop
out
lret
pop
dec
mov
enter
mov
xor
jl
and
push
icebp
inc
outsl
dec
stos
out
pop
daa
mov
cmp
dec
mov
inc
jne
mov
push
shrb
fldenv
aas
pusha
sbb
out
insl
dec
popa
xlat
xlat
jb
mov
jecxz
dec
outsl
jno
aad
ret
out
lcall
inc
in
add
inc
jl
pushf
cmp
mov
mov
pop
loopne
lcall
add
test
lcall
lcall
movsl
ja
pushf
xchg
adc
lock
jge
fwait
test
aam
mov
mov
push
cwtl
and
test
out
popa
je
dec
push
rcrb
xor
clc
push
dec
rcrl
adc
cmp
stos
cmpsb
mov
xor
jmp
cmp
xor
fsubr
jg
jecxz
adc
xchg
and
imulw
push
sbb
and
dec
stc
pop
repz
loop
notb
jne
enter
jge
push
imul
sub
cli
or
cld
iret
push
int
arpl
out
mov
mov
cmpsl
jae
sbb
hlt
call
lret
mov
into
pop
aas
cmpsl
frstor
out
test
rorl
sahf
sub
pop
add
cmp
aad
xor
cmp
mov
sbb
sub
pop
cmc
testb
pop
lret
push
xor
sub
imul
mov
lea
jge
in
adc
les
vmwrite
mov
aam
sub
loopne
push
inc
add
out
sbb
out
mov
ds
movaps
dec
add
outsb
jnp
insb
cld
xor
lahf
aad
jno
lds
int3
push
adc
push
jo
call
loop
nop
mov
lea
das
sti
cs
sub
adc
clc
push
jge
insl
push
cwtl
and
xchg
jle
loopne
sub
ret
cmpsl
popf
stc
mov
pusha
jns
nop
mov
push
sub
rcrl
jne
test
movsl
aas
cmp
inc
shll
mov
mov
mov
dec
pop
hlt
sbbb
and
jne
fs
das
xor
xor
popf
mov
and
xchg
dec
xor
lahf
data16
pop
mov
xchg
add
mov
repz
loopne
lret
lcall
dec
jns
dec
arpl
loopne
in
and
out
lahf
sbb
adc
sub
lds
lea
inc
mov
and
or
inc
dec
cmp
imul
cli
add
adc
add
pop
mov
mov
pushl
ret
ljmp
ficomps
sbb
inc
xor
add
mov
or
int3
out
mov
pop
xchg
mov
rcrl
bound
loope
adc
add
fildl
adc
pop
sbb
cmp
add
inc
sbb
sbb
addr16
mov
sub
and
inc
jnp
or
jmp
sbb
out
push
test
pop
dec
lcall
shll
scas
pop
sbb
or
push
add
stos
lret
jg
jle
out
fwait
nop
sub
mov
sub
int3
insl
lret
xor
push
mov
int3
dec
sbb
jp
out
or
ret
add
out
mov
or
xlat
dec
leave
xor
cltd
sbb
mov
ss
push
mov
mov
mov
cltd
sqrtps
cmpb
push
cmpsl
pop
and
xor
dec
jmp
mov
fwait
adc
sub
sub
mov
test
pop
jmp
int3
rcr
bound
sbb
xlat
cmp
outsl
xor
push
and
jbe
cmpsb
cmpsb
push
mov
leave
add
fucomi
ud1
fbstp
pop
ret
xchg
sbb
sbb
jb
shlb
pop
aad
push
mov
and
mov
cmpsl
jbe
rcll
cmc
jl
lea
out
mov
call
divl
sub
mov
mov
leave
dec
and
movsb
sbb
add
xor
in
ret
bound
mov
jne
loop
dec
shll
rclb
je
lret
mov
xor
lret
notb
xor
or
mov
dec
mov
out
and
scas
inc
sub
mov
mov
aas
in
iret
std
arpl
push
push
sub
sub
sbb
pop
stos
cmp
clc
push
out
mov
cmp
sub
push
out
jle
xchg
test
sub
in
and
and
mov
shlb
sub
and
xchg
sbb
in
icebp
stos
and
test
inc
loopw
out
out
sub
mov
out
dec
fsubl
dec
mov
sti
mov
stos
test
jns
cs
mov
sbb
rorl
push
addr16
js
adc
imul
pop
test
orb
jmp
insl
sub
jg
shl
pmulhw
test
mov
jo
icebp
mov
cli
jb
add
push
pop
notb
pop
jb
push
inc
xchg
lret
outsb
mov
in
sbb
jns
inc
imulb
loopne
cltd
lock
bound
std
je
loop
xor
xchg
add
in
aas
mov
pop
mov
ja
cmpsb
mov
in
add
or
jecxz
cmp
fwait
jmp
cmp
sbbl
sbb
ljmp
or
popa
cmpsl
ret
push
push
cmpsb
fistpl
mov
testl
xor
push
add
fildl
add
mov
hlt
mov
cmp
outsl
mov
ret
es
and
fsubl
inc
or
push
and
adc
jne
stos
mov
test
mov
icebp
jg
in
adc
mov
push
out
jae
jae
addr16
lods
mov
bound
pop
jbe
inc
outsl
push
xor
inc
lcall
mov
cli
and
loopne
xchg
mov
mov
inc
into
sub
lcall
aam
jp
ds
or
out
imul
jo
mov
das
pop
es
das
iret
leave
rorl
mov
jecxz
jae
mov
pusha
mov
sbb
loop
jo
xor
imul
fldcw
mov
lahf
adc
out
rcrb
call
test
or
sbb
mov
shrl
jo
inc
pop
inc
shlb
and
xchg
sar
scas
out
jb
sbb
pop
je
adcl
call
push
aas
mov
clc
fstpt
fwait
adc
repnz
pop
push
mov
pop
movsl
xor
xor
mov
pop
mov
sar
cld
pop
daa
cs
cmp
arpl
push
jle
iret
dec
imul
mov
sub
divb
fisubl
in
pushf
pop
push
push
loope
xor
fildll
xchg
stc
dec
sub
lcall
aaa
gs
mov
push
fs
mov
push
fisubrl
shl
xchg
jge
ds
jmp
into
sbb
push
jmp
push
jg
xor
mov
push
call
aad
mov
test
fwait
addl
inc
and
pop
mov
cmc
lea
enter
hlt
dec
xchg
shr
lret
mov
mov
jno
in
ljmp
data16
and
lret
in
into
out
cmp
or
cmpl
or
aaa
movsb
mov
jmp
mov
cmp
shl
mov
pop
test
filds
daa
jl
cmp
push
xchg
adcl
andl
imul
arpl
call
pop
push
push
and
data16
or
stos
daa
or
sbb
sub
clc
add
push
sbb
inc
outsb
lret
inc
orb
push
popf
inc
mov
jbe
bound
in
push
pushl
mov
xchg
mov
aam
xor
loopne
inc
insb
jmp
push
into
mov
jg
push
imul
inc
sub
out
popa
lods
rolb
call
or
jnp
aaa
int
xlat
lods
fs
pop
daa
pop
cmc
cmpsb
push
cmc
jne
fidivrs
fs
in
movsl
cmpsb
movsl
test
lahf
movsb
pop
push
or
test
or
xchg
xor
pusha
ret
enter
popf
shll
and
mov
push
push
jmp
aam
jle
imul
mov
and
lahf
rcll
leave
ss
popf
fimull
int3
push
or
mov
add
sarb
scas
sbb
rclb
push
xor
sub
and
out
mov
mov
cmp
xchg
fidivrs
std
dec
xchg
jb
clc
in
jno
test
add
pop
scas
sub
pop
inc
cmpsl
add
pushf
outsl
sub
or
enter
movsl
and
lods
sub
arpl
sub
rol
loopne
ds
pop
mov
jg
sbb
and
in
or
stos
lea
cltd
out
sub
cmpsl
pop
sbb
je
out
sahf
repz
xor
lcall
std
sbb
add
mov
orb
adc
or
test
int
movsl
fs
repnz
cmp
mov
mov
out
outsl
push
leave
sbb
or
push
sub
jg
adc
mov
bound
lock
cld
ja
loope
sbb
into
rclb
pop
arpl
pusha
in
and
stc
or
outsl
test
ret
push
ljmp
stc
lea
lods
push
ljmp
pop
dec
repz
dec
int3
icebp
cmp
or
pop
lret
mov
std
add
sub
sub
cmp
dec
cmp
clc
call
mov
xor
mov
xor
xchg
fsubrp
imul
cmp
mov
cld
rorb
add
popl
lret
mov
pop
dec
add
cld
cwtl
fistl
stc
push
dec
push
push
test
lods
loope
mov
stos
or
xchg
sahf
insl
sbb
clc
push
insl
fidivrs
mov
movsb
xlat
data16
push
es
jg
repnz
dec
dec
ds
pop
jae
bound
xlat
add
xchg
pop
jbe
fstl
popa
int
fstpl
mov
les
mov
mov
mov
ja
mov
xor
mov
rorb
add
add
cmp
loopne
push
inc
subb
or
push
dec
xor
mov
pop
mov
clc
push
cwtl
push
inc
xchg
mov
pushl
mov
sub
int3
ja
test
out
xchg
inc
jo
decl
mov
sbb
clc
daa
dec
test
data16
push
adc
cmp
idivl
int3
rcrb
lahf
popf
das
dec
lahf
jae
sub
pop
test
cmp
add
sub
adc
push
cmpsl
push
sbb
adc
aad
ss
xchg
data16
inc
in
aad
dec
loop
test
ja
sahf
jg
lea
stos
jmp
mov
in
popf
push
mov
pusha
cmc
cltd
mov
lock
cmp
adc
xchg
mov
dec
mov
xchg
jecxz
or
dec
sahf
hlt
adc
iret
out
push
mov
sub
inc
mull
jns
or
andb
mov
xor
sbb
insb
lds
imul
sbb
clc
cmpsl
mov
cmc
faddp
mov
mov
sub
in
cmpsb
outsb
mov
int3
or
outsl
pop
out
adc
lock
cmp
dec
mov
jecxz
pop
mov
arpl
and
cld
jge
ss
xor
mov
sub
subb
adcb
xchg
imul
fistps
push
cmp
xor
outsl
xchg
push
push
cmp
sub
bound
shl
or
cmpsl
arpl
popa
sbb
sahf
sbb
and
fidivs
in
int3
inc
fbstp
imull
rcl
aam
or
out
mov
arpl
int3
ss
xor
insl
loopne
shrb
or
out
stc
sbb
mov
xor
mov
push
push
lret
jae
in
cmp
inc
sub
stc
push
add
adc
sar
lret
pop
sub
mov
lret
inc
enter
out
mov
rcrb
pop
das
cmp
xor
ret
mov
fstp
idivb
or
stc
and
testl
mov
subb
addl
inc
js
popf
repz
xchg
fs
lahf
dec
cmp
and
mov
test
fiaddl
mov
add
cmc
mov
out
sti
pop
xor
add
push
outsl
mov
test
out
std
add
test
pushf
add
ja
js
xor
add
mov
dec
fs
push
cmp
into
mov
jle
cld
sub
pop
int3
xchg
sti
lds
and
mov
mov
mov
daa
std
test
jmp
int
mov
xchg
scas
popf
in
push
nop
cmp
call
mov
lods
sarl
imul
sub
cmpsb
push
testl
fmuls
inc
mov
int3
sar
xor
out
xchg
xchg
mov
pop
cmpl
ficompl
lret
stos
push
insl
nop
in
test
iret
push
or
sub
inc
loop
xchg
fidivrs
clc
jb
cmp
sbb
icebp
jmp
jecxz
pushf
xlat
imul
int3
and
push
mov
sub
jnp
or
in
xchg
or
adc
cltd
vmovdqu
adc
aas
xor
jns
lods
out
xchg
adc
nop
into
daa
fldenv
pop
fidivl
repz
aad
pop
jmp
jbe
sub
rcrb
adc
mov
imull
scas
addr16
ja
out
and
gs
fmuls
ret
iret
outsb
das
add
sub
or
aas
add
int
lea
add
js
push
lcall
fbld
out
testb
jmp
pop
cmp
cli
add
cmp
dec
jne
adc
or
shl
cmpsl
push
repz
jnp
fisubrs
push
or
dec
add
in
mov
movsb
test
xchg
and
push
mov
bound
lock
outsb
lret
mov
pop
movsb
ljmp
jmp
aas
fwait
xor
add
jnp
cmp
call
xor
aam
cmc
add
pop
aaa
inc
mov
jno
sbb
in
shlb
clc
rolb
mov
out
repnz
test
push
sub
aaa
aaa
xor
cmpsb
cwtl
ret
jo,pt
push
int
loop
ficomps
into
inc
and
add
inc
mov
inc
arpl
bound
shrl
dec
push
shlb
imul
inc
dec
lret
mov
test
sub
mov
rcll
in
cmp
fsubrs
dec
xchg
dec
dec
mov
gs
in
sbb
lcall
iret
scas
sbb
xchg
repnz
lods
test
pop
fisubl
iret
cmp
or
cmpsb
lds
lret
iret
cwtl
and
test
das
adc
adc
lret
xor
push
dec
push
xor
push
xchg
mov
cmc
pop
mov
push
rclb
push
test
int
js
xchg
jne
mov
fistl
fcmovne
iret
pop
xor
mov
push
int3
pop
sbb
xchg
test
adc
mov
es
popf
fdivr
mov
std
cmp
sub
xchg
mov
xchg
cltd
or
rcr
daa
jg
bound
jmp
bound
sbb
std
jp
and
insl
mov
mov
test
sarb
inc
rol
mov
jno
jnp
mov
jle
mov
and
popa
and
stos
add
int
mov
ss
aad
out
xchg
cltd
and
mov
lcall
bound
fildl
pop
movsb
test
js
cs
es
loopne
xchg
imul
sbb
cmp
xchg
nop
and
adc
sysret
pop
sbb
cli
das
and
inc
add
push
lahf
sub
lahf
out
jmp
dec
je
mov
dec
pusha
cmp
scas
pop
cld
inc
gs
mov
xchg
lahf
sub
icebp
cltd
jl
setns
insl
pop
shll
lods
or
pusha
jne
ljmp
add
pushl
mov
push
jp
xlat
sbb
lds
sub
xor
mov
call
adc
pop
test
jg
mov
test
xor
jb
jns
mov
mov
mov
add
push
ret
inc
popa
adc
gs
icebp
dec
mov
pushf
mov
sbb
xchg
lret
jl
out
inc
ljmp
and
or
inc
shrb
xor
jne
rcrl
jbe
enter
jo
jb
fildll
fnsave
sub
outsb
arpl
inc
jno
push
jle
dec
call
adc
push
mov
daa
fwait
pop
or
jle
add
sahf
jl
sbb
adc
ret
aas
push
cmp
insb
xor
mov
cmp
pop
sbb
or
sahf
mov
fldl
mov
push
mov
xor
mov
std
jmp
test
adcl
and
jle
inc
and
test
and
jb
xor
fisubrs
cwtl
mov
rcll
inc
cld
int
xor
dec
adc
movsl
test
sbb
dec
jmp
lods
mov
adc
jo
movsb
and
inc
cmpsl
mov
pop
add
icebp
mov
adc
shlb
cmpsl
sbb
mov
adc
arpl
jg
mov
jnp
fcomps
push
daa
sbb
aad
orl
xchg
sar
pop
cmp
gs
fldt
rclb
test
adc
push
stc
jne
sbb
cmp
dec
push
or
jae
mov
mov
mov
mov
mov
imul
adc
notb
and
add
out
enter
fidivrl
ss
ret
out
movups
invd
adc
fiadds
loope
xor
cmp
inc
ja
push
mov
mov
or
lret
repz
mov
add
or
pop
add
pop
xchg
lods
mov
mov
cmp
or
outsl
and
out
outsl
or
fcoms
cmc
sbb
push
lods
in
enter
jae
popa
and
scas
fs
pop
clc
insb
pop
pop
sub
int
mov
addb
aam
cmp
aad
mov
movsl
and
andb
add
mov
sbb
nop
xchg
lods
negl
xlat
pop
or
popf
sarb
jge
sub
dec
out
xchg
filds
les
mov
xor
movsb
fs
push
cmp
xor
je
cmpsl
fisttpll
jge
enter
insb
mov
clc
fdivp
mov
inc
mov
enter
bound
jae
pop
add
les
loope
mov
js
and
jmp
mov
fimull
das
mov
insl
out
not
cmp
call
std
add
mov
pushf
lea
sbb
adc
pop
xor
fidivrl
mov
test
cmp
sub
mov
jo
dec
insb
mov
sarl
xchg
repz
in
notl
flds
clc
fcomps
push
lcall
adc
aad
push
adc
jb
push
sbb
lret
inc
and
addr16
cmc
cmp
add
lret
cwtl
jg
repz
outsb
arpl
js
arpl
jmp
dec
cmp
orl
or
in
jmp
add
hlt
out
adc
adc
jmp
cmp
out
or
imull
cmp
dec
jbe
and
push
loope
lods
adc
push
aad
xchg
sub
lret
sbb
inc
cmp
pop
jnp
push
cmc
dec
in
push
imul
add
mov
aam
push
mov
mov
shlb
jmp
adc
xchg
ret
pop
test
push
push
repnz
xor
fisttpll
int3
xchg
sarb
sbb
pop
add
testb
xchg
xchg
mov
mov
aam
and
inc
dec
es
jle
fs
pop
cmp
xlat
stos
es
fucomip
shll
cmp
sub
ss
xor
stos
push
das
or
out
mov
popa
rcll
cmpsb
std
incl
fists
inc
cmp
add
inc
call
lods
mov
cld
out
mov
arpl
jmp
gs
cmpsb
adc
lock
xchg
dec
scas
ds
scas
jmp
aas
and
and
insl
cmpsl
pop
and
mov
push
xor
popa
jmp
adc
ja
nop
test
mov
in
dec
scas
mov
xlat
leave
scas
pop
arpl
jg
lds
lods
hlt
cmp
jl
push
jae
or
lcall
arpl
das
shrl
incl
psubusw
test
aam
mov
movsb
imul
outsl
jbe
lea
loopne
arpl
fs
mov
xchg
imul
fwait
cmp
leave
jb
lcall
lret
scas
fadds
int3
shlb
addr16
push
mov
adc
int3
les
icebp
mov
clc
adc
in
cmp
mov
mov
lock
jnp
add
pusha
dec
adc
loop
push
mov
cmp
push
inc
icebp
rcrb
jl
and
out
jmp
push
pusha
repz
out
dec
fldcw
mov
push
cmpsl
jns
rolb
xchg
fcompl
insl
imul
ret
inc
cmpsl
jbe
add
sbb
xchg
push
scas
aam
xor
pop
cli
dec
sub
lods
add
test
xor
push
scas
dec
or
test
dec
xchg
int3
push
iret
inc
mov
lcall
cmp
fisubl
sbb
mov
xchg
jecxz
push
or
push
xor
push
push
fwait
test
imul
das
loopne
into
and
les
inc
aaa
jb
pushf
push
ret
movsb
push
arpl
sub
lods
shrl
testb
movsl
fimuls
out
frstor
nop
roll
ret
xchg
lds
cmp
xchg
mov
mov
dec
push
sbb
repnz
or
jns
sub
pop
dec
xor
or
jne
adc
sub
or
cmp
movsb
fsts
mov
jo
push
scas
mov
dec
ret
test
mov
fst
js
stc
cmp
clc
push
dec
sahf
push
cmpsb
rclb
lcall
loopne
repz
loope
out
dec
rolb
xor
ror
mov
ret
cmp
call
mov
push
leave
push
int3
mov
aam
ds
mov
inc
xchg
push
loopne
out
fidivrs
mov
xchg
out
pop
sahf
rorl
jbe
mov
ret
scas
pop
fwait
add
cmc
and
and
movl
sahf
test
into
sub
xchg
mov
jmp
mov
scas
scas
es
adc
or
xchg
shl
jl
sbb
mov
or
xchg
js
ljmp
sahf
stos
ror
insb
fsubs
lds
adc
push
mov
jno
pop
bound
decl
imul
sbb
xchg
or
inc
pop
xor
in
rcll
pop
dec
outsl
add
pop
fldl
cmp
outsl
push
mov
and
fbld
out
mov
testl
push
xchg
push
ret
inc
movsb
int3
xchg
push
or
flds
cmp
fs
mov
fmul
cmp
add
jb
mov
mov
and
test
jle
jbe
push
jno
dec
je
inc
in
mov
adc
pushf
pop
and
push
arpl
sbb
push
dec
push
pushf
push
add
jne
xchg
repz
mov
addr16
aam
mov
sub
daa
std
popf
push
xchg
ljmp
out
je
cmp
sub
inc
stos
test
shll
fldcw
ret
mov
jae
push
and
ret
stos
mov
int3
jge
rorb
pop
rcrl
aas
lods
icebp
test
pop
xchg
jmp
xchg
dec
fcomp
subb
shrl
mov
rcrb
adc
mov
push
call
insl
in
cmpsl
std
test
or
pop
inc
lds
add
mov
cmp
sbb
sbb
shlb
js
pop
mov
ds
aad
mov
fmull
and
in
pop
sbb
ja
test
in
mov
xchg
sbb
lcall
lods
add
and
push
lock
inc
jecxz
shlb
test
add
mov
imull
jp
xor
insb
mov
and
xor
data16
data16
jle
out
xchg
scas
inc
mov
movsl
push
lock
or
popa
add
mov
in
cmp
ret
dec
rcr
je
sub
cltd
lods
fs
pop
push
xlat
inc
jl
sub
es
cltd
sub
push
aaa
out
jle
cltd
mov
push
fwait
sar
xchg
xchg
test
call
cmpsb
mov
push
push
jne
aam
cld
lret
daa
jno
flds
add
adc
jge
xor
mov
cmp
sub
mov
add
and
dec
jp
xchg
push
movsb
sbb
xchg
adc
roll
enter
lahf
rorl
pop
mov
xor
sbb
jmp
and
lret
pop
ret
jle
mov
cmp
jmp
pop
aam
cmc
add
pop
bound
pop
push
mov
jg
mov
cmp
push
fsubrl
xchg
scas
mov
or
mov
adc
jo
ljmp
dec
mov
xlat
fistpll
jnp
fcoms
aad
cmpsb
inc
fs
aad
sub
xor
sbb
cmp
xor
jno
dec
test
pop
dec
stos
sbb
inc
dec
push
pop
loop
lret
cmp
mov
adc
push
or
nop
fcoms
scas
cmp
pop
or
pop
into
mov
std
mov
and
jne
xchg
inc
jbe
ss
xor
clc
inc
inc
mov
inc
pop
fildll
xchg
xor
aad
mov
in
add
pop
popf
sub
jb
in
jns
adc
jmp
popa
lret
int
push
mov
sub
shl
cmpsl
mov
aaa
or
cmp
xor
pop
je
fisubrl
jbe
aam
dec
push
xchg
imul
add
in
push
loopne
push
ds
mov
push
pop
add
fnstsw
js
add
mov
out
add
mov
add
insl
aam
pop
lret
sbb
repz
mov
ret
movsl
dec
pop
inc
fisttpll
push
add
enter
push
lods
shlb
call
and
das
jnp
jbe
push
rcll
jmp
mov
scas
add
dec
mov
test
cld
mov
cmp
sbb
dec
push
or
icebp
pop
aas
cmpsb
fnstcw
ja
icebp
xchg
testb
outsb
out
pop
data16
fidivrl
xlat
mov
mov
cli
rcl
lret
lcall
sti
jb
pop
jno
push
pop
sbb
mov
mov
fiaddl
mov
push
xor
mov
aaa
aas
call
rcrb
dec
xor
jmp
xchg
xor
pop
mov
stc
mov
push
cmp
movsb
fsubrl
dec
repz
sub
xchg
adc
jg
pop
cli
pop
rcrb
push
cwtl
fnstsw
pop
stos
push
ljmp
addr16
pop
adc
sub
cvttps2pi
sti
fdivrl
xchg
mov
fs
inc
xor
lcall
insl
rcr
or
mov
outsl
dec
mov
aas
dec
mov
movsl
sti
mov
repnz
lret
ja
and
mov
or
sbb
add
cmp
inc
or
sbb
add
adc
negl
std
mov
dec
mov
scas
jae
mov
pop
mov
loope
lods
jns
xchg
insb
sub
leave
mov
jae
or
xchg
nop
push
push
cmp
mov
cs
out
pop
mov
mov
sub
mov
xlat
and
mov
jge
shlw
xchg
jbe
aas
add
push
leave
dec
xchg
lcall
jp
inc
int
mov
mov
mov
sbb
shrl
xlat
pop
mov
fldt
adc
push
dec
pusha
imulb
insb
jle
stc
addl
or
cmp
repz
arpl
movw
pop
cld
inc
sbbb
out
adc
jb
sbb
int3
sbb
sub
inc
divl
repnz
mov
xchg
inc
push
mov
pop
int3
mov
lea
in
aas
inc
sti
add
xchg
imul
sahf
inc
adc
xchg
shlb
das
in
pop
inc
push
push
lret
jo
enter
and
out
push
sbb
movsl
cmp
jmp
fstpl
mov
aaa
mov
dec
cmp
fsubrs
cmpsl
mov
mov
dec
mov
dec
sub
push
lret
lods
add
mov
jg
dec
mov
push
cmp
les
push
push
fscale
or
sbbl
mov
lret
out
sub
cmpl
std
and
and
or
or
std
inc
jecxz
pop
rcll
mov
in
mov
sbb
daa
andb
insb
clc
xlat
movsl
sbbb
sbbb
xor
jo
mov
push
dec
daa
cmpsl
xchg
inc
int3
stos
cmc
xchg
adc
fs
sbb
mov
inc
xchg
insl
mov
and
in
pop
icebp
in
mov
xchg
cmp
out
cmp
pop
jb
sbb
sbb
sbb
sbb
test
icebp
fwait
stos
sub
cmp
xchg
cmp
mov
mov
mov
in
cltd
shlb
push
std
lahf
outsb
fnstenv
xlat
push
xchg
addl
or
mov
jle
pop
insl
push
xchg
mov
insb
add
xchg
sub
sbb
cmpsb
lds
sub
pop
sub
push
mov
pop
jge
sbb
mov
inc
push
xor
sub
push
lret
xchg
repz
sarb
iret
leave
pop
pop
fnstenv
jb
enter
or
pop
jmp
subb
mov
mov
mov
inc
call
iret
pop
lea
cltd
test
aas
push
lret
rorb
push
or
shlb
cmp
and
jecxz
in
and
inc
push
and
jb
cld
sub
push
movsb
stc
das
cmpsb
mov
add
mov
les
pop
sahf
jne
orb
xlat
fstps
std
popf
ljmp
inc
sti
mov
xchg
ret
ret
dec
rclb
hlt
shll
sbb
push
vrsqrtps
rcll
test
inc
mov
add
push
xor
shrl
int
cmp
icebp
in
sbb
popf
lahf
sahf
ret
cli
dec
sub
mov
jmp
in
jo
std
mov
js
scas
pop
mov
cmc
sbb
orl
hlt
sti
push
ljmp
add
movsl
cli
push
mov
shll
add
jg
inc
rorl
test
pop
push
stos
pop
fnstenv
or
mov
mov
std
cli
cwtl
flds
pop
xor
lds
mulb
xchg
sub
mov
jbe
mov
add
int3
lret
fdivrs
jmp
dec
jbe
and
mov
adc
sub
js
icebp
mov
out
call
and
out
icebp
lret
push
gs
pop
mov
cmp
sahf
pop
dec
out
dec
mov
lahf
dec
aas
rolb
test
inc
pop
xchg
sbb
lahf
loopne
xor
lret
push
xchg
jmp
ret
fwait
loop
hlt
sbb
mov
test
mov
xlat
ficomps
dec
inc
mov
test
cli
nop
mov
out
add
nop
popf
mov
adc
add
pop
mov
lds
jle
mov
addr16
and
nop
dec
fs
outsb
pop
in
repz
cmp
cmp
mov
cmp
mov
ret
imul
lds
xchg
lds
xor
pop
enter
mov
xchg
xorb
sar
push
pop
jp
cld
sahf
or
iret
pop
es
movsb
push
outsb
mov
xor
dec
lds
sub
in
rcl
std
cvtsi2ss
ret
dec
aas
sbb
xor
movsb
pop
push
add
or
loopne
pop
fsubl
fisubrs
fwait
dec
ja
sub
mov
test
mov
and
fcomps
into
adc
dec
fstpt
shr
cmp
out
insb
xchg
repnz
cltd
add
in
adc
sbb
dec
dec
jbe
cmp
sbb
adcb
fsubl
add
sbb
cmp
pop
inc
out
pushf
xchg
pushf
mov
iret
lahf
aad
in
call
adc
or
xchg
nop
je
pop
cld
jg
push
jle
mov
in
mov
fs
sub
jmp
pop
fcmovnb
jns
insb
dec
pop
mov
jmp
jne
mov
movsl
push
cwtl
xchg
int
xor
sbb
popf
adc
xor
cs
in
push
jns
dec
xlat
xor
push
cmp
test
bound
xor
cmp
addr16
jecxz
sarl
xor
mov
adc
xchg
imull
sbb
cmp
mov
cmp
jae
mov
dec
in
ljmp
add
mov
stos
mov
mov
mov
mov
sahf
stc
add
push
and
adc
add
movsl
dec
sub
stos
sbb
jl
dec
es
mov
nop
xor
inc
ss
mov
icebp
outsb
stos
xchg
sahf
shr
ret
rclb
mov
das
cmp
adc
lods
out
aaa
outsl
dec
pusha
call
jb
push
fs
out
cli
aaa
aad
jle
scas
and
iret
pop
arpl
fiadds
addr16
test
andb
inc
mov
jbe
mov
mov
adc
lods
adc
xchg
mov
ljmp
cmp
pop
add
mov
jle
fwait
leave
mov
pop
lahf
subb
ds
pavgb
mov
jmp
repz
add
mov
cmp
and
ljmp
sbb
sbbb
inc
ffree
stos
pop
scas
int
hlt
jecxz
and
cmp
clc
repz
out
cmp
es
sbb
ret
mov
mov
push
adc
inc
daa
fsubs
adc
jne
jne
pop
mov
mov
sti
jmp
xor
mov
push
sub
fiaddl
mov
aad
arpl
cmc
inc
inc
jbe
xor
ja
jno
adc
lret
icebp
or
and
add
inc
xchg
sub
out
lcall
decl
call
xchg
mov
dec
jle
mov
jo
mov
sbb
mov
outsl
mov
xor
xchg
pop
outsb
jge
xchg
and
jg
xchg
xchg
loope
mov
fs
loopne
push
inc
xchg
pop
in
dec
xchg
in
je
daa
frstor
ss
aad
data16
mov
shrl
mov
icebp
mov
fcmovnbe
pop
mov
and
sub
mov
insb
xchg
call
nop
pop
inc
and
mov
test
add
add
fidivrs
xchg
or
or
fimuls
or
push
mov
movsb
xchg
xchg
dec
sbb
test
lcall
in
xlat
add
adcb
or
push
xchg
xchg
xchg
xlat
cmpsl
dec
cmc
pop
pop
xor
add
mov
es
sub
inc
jnp
add
pop
jbe
and
mov
sbb
mov
add
sahf
popf
lret
pop
hlt
mov
push
fildl
sbb
sub
mov
mov
dec
and
xchg
pop
int
out
cld
sbb
inc
int
ud2
pusha
mov
and
mov
pcmpgtb
inc
mov
movsb
ldmxcsr
loopne
cmp
cmc
pop
lret
add
pop
lods
mov
les
dec
sub
scas
flds
cmpl
dec
jo
clc
aam
cwtl
xor
inc
dec
sub
push
lds
imul
jnp
sub
lcall
dec
out
adc
mov
or
and
push
jge
xchg
xor
xchg
clc
mov
dec
add
sbb
push
out
nop
mov
mov
dec
sbb
push
dec
lret
inc
insb
shl
insl
xchg
inc
out
lods
out
shrb
idiv
cli
andb
dec
push
or
pop
adc
fistl
fs
dec
mov
loopne
cli
cwtl
shlb
mov
dec
pop
insl
mov
mov
cmpsb
repz
in
mov
rol
sahf
xchg
repnz
xor
xlat
leave
push
lcall
icebp
int
add
nop
push
mov
mov
cmp
mov
mov
mov
push
adc
sbb
loopne
into
fistps
inc
push
dec
jmp
jae
sbbl
fistpll
xor
iret
xlat
mov
cmp
cli
adc
mov
jne
jns
xor
pop
sahf
sar
adc
dec
arpl
adc
cmp
and
jge
enter
or
sbb
adc
ja
push
pop
movsb
pop
mov
jns
or
ficoms
add
and
in
xchg
pop
mov
stc
in
dec
fcomp
les
loop
int
cwtl
inc
mov
push
pusha
push
inc
aad
pop
fwait
cli
cltd
adc
negb
jns
cli
sub
arpl
stos
hlt
sub
mov
jno
test
and
mov
and
lods
dec
es
pushf
xchg
dec
add
pop
pushf
stos
icebp
int3
add
sub
xor
jbe
inc
jns
mov
sbb
loope
cmp
lods
lcall
xchg
inc
dec
and
loope
lods
pop
loopne
xor
insl
adc
cli
popl
lret
ficompl
pop
xchg
push
xchg
xchg
mov
inc
popa
xchg
into
xorb
test
xchg
mov
shll
je
pop
pusha
cmp
mov
fstps
imul
lds
push
ljmp
inc
imulb
out
sub
movsl
aad
clc
mov
sbb
fdivrl
jge
daa
cmpsl
mov
pusha
lds
outsl
mov
push
cmp
enter
dec
mov
loop
mov
scas
mov
inc
iret
fisttps
insl
sbb
mov
add
jne
cmp
lret
aad
cs
pop
cmpsl
mov
jg
pop
mov
repz
pop
movsb
lfs
movsl
cmp
mov
pop
notl
mov
loope
cli
mov
gs
loop
pop
lods
inc
inc
repz
xchg
mov
lahf
xlat
dec
mov
push
sbb
or
insl
ret
and
cwtl
sub
fs
or
lock
mov
sarl
clc
mov
cmpl
ret
push
add
pushf
xor
mov
int3
jmp
cmc
mov
sarl
flds
sbb
sti
jae
xchg
inc
in
mov
bts
sub
lahf
jnp
jb
cld
cmp
xchg
mov
mov
sbb
jne
rorl
into
add
in
ret
xchg
and
cli
jno
cmp
cltd
jb
mov
or
dec
repnz
sbb
cmp
jb
xchg
push
loope
cmc
pop
lret
ja
lds
fimuls
loopne
in
loopne
or
loopne
pop
push
int3
mov
push
fstps
mov
mov
inc
or
cmp
rolb
cmp
popa
or
pushf
lods
in
sahf
and
popa
inc
icebp
jmp
imul
scas
xor
lret
jg
xlat
fidivl
pushf
add
in
imul
mov
inc
mov
test
test
cmp
nop
dec
aam
test
addr16
xchg
insb
pop
mov
lcall
mov
cltd
pusha
shlb
aaa
out
push
out
sub
jecxz
enter
in
rclb
in
dec
cmp
call
test
mov
xor
or
pop
mov
stos
dec
icebp
push
iret
stos
inc
leave
js
xchg
push
cmpsb
shll
aad
dec
jecxz
insb
push
jg
cld
add
or
imul
ret
out
jb
push
imul
data16
adc
cmp
push
daa
push
push
dec
adc
mov
int
hlt
xchg
xor
push
xchg
inc
push
jae
cmp
es
in
scas
xchg
pop
notl
fmuls
jle
inc
mov
sub
leave
adc
dec
jbe
ss
aam
adc
ss
mov
mov
in
sub
jb
scas
leave
mov
cmp
or
mov
testb
xlat
aas
and
nop
outsl
cmp
fwait
fwait
cmpb
pop
ss
and
fwait
cmp
js
les
in
adc
lahf
lods
fs
insb
jecxz
mov
in
dec
call
je
jns
fmuls
repz
inc
inc
pop
and
pop
push
outsb
rcrl
pusha
fistl
repnz
ja
sub
mov
jne
hlt
xchg
inc
mov
ljmp
sbb
inc
and
ss
cmpsl
mov
jno
mov
cmp
fisubs
scas
pop
bound
pop
add
mov
adc
cwtl
in
cmp
cld
jbe
inc
or
add
xchg
jbe
push
dec
pop
or
sbb
inc
mov
xor
pop
lahf
jmp
and
cmp
or
xlat
and
ds
inc
sbb
mov
inc
sbb
dec
dec
cmp
jmp
sub
xor
insb
mov
jecxz
ret
xchg
aad
push
loop
ret
aad
jne
xor
aam
inc
mov
xor
nop
das
outsl
cmp
rcrb
and
cmpsb
scas
test
out
iret
inc
out
aad
fnstcw
xor
dec
into
sbb
sarl
or
jno
adc
hlt
mov
xor
popf
cltd
jl
pop
push
pop
fcomp
aad
xchg
enter
aam
mov
popl
leave
std
sub
adc
sysenter
inc
jg
pop
in
push
out
insb
mov
pop
es
stos
pop
lods
mov
test
rcrb
cmp
xchg
mov
enter
adc
push
ds
jbe
mov
pop
push
cmp
js
pushf
lret
fdivs
pop
jg
lret
repz
inc
data16
fsts
imul
dec
loopne
lret
out
cli
push
cwtd
shl
arpl
repz
in
popa
sub
xchg
inc
shlb
pop
mov
bound
xor
sub
jnp
outsb
pusha
dec
fxtract
fldenv
imul
jns
cmp
sti
mov
xchg
xchg
lock
shl
sbb
aad
dec
and
cltd
sbb
jge
int
inc
in
pop
add
and
or
in
sbb
add
pop
xchg
fstp
movsl
xor
pop
in
mov
test
xor
push
xlat
mov
stos
adc
pushf
xor
fisttpll
enter
sub
mov
imul
adc
and
lock
ja
outsl
pop
notl
push
push
std
jg
mov
and
push
mov
lods
mov
sbbb
arpl
inc
mov
sahf
sahf
aam
sbb
mov
inc
and
pushf
aad
fildll
add
adc
insb
mov
push
cmpsb
dec
mov
imul
je
das
into
push
pop
push
cmp
push
sub
cmp
std
ljmp
ficompl
nop
add
into
push
insl
xchg
push
enter
fcmovbe
push
lods
mov
adc
test
or
xor
ds
lods
jg
cltd
or
mov
jo
lock
loope
and
icebp
icebp
test
lret
push
sub
ljmp
inc
pushf
cmpsl
jg
cmp
dec
xor
mov
lea
fimuls
push
jb
push
push
outsb
cmp
lcall
cmp
push
xchg
fisubl
shlb
test
xchg
mov
jb
mov
cs
add
test
loopne
jge
movsb
fs
push
mov
jno
jmp
mov
iret
push
inc
mov
hlt
adc
das
sub
popf
mov
jp
scas
outsb
or
mov
push
mov
test
repz
pusha
inc
insl
out
ret
loop
add
je
xchg
sahf
mov
inc
xchg
test
clc
lahf
loop
mov
ficompl
and
add
int
jae
int3
loope
lret
bound
mov
test
xchg
sbb
cmc
in
ds
sbb
mov
cmp
repz
ret
inc
scas
mov
mov
sbb
hlt
es
fs
ret
iret
inc
push
dec
push
lods
jns
int
or
mov
jl
dec
in
stos
aaa
lret
mov
cmpsb
jae
add
std
dec
bound
dec
xor
aaa
lea
push
adc
rcl
mov
lahf
aaa
stos
lret
call
add
test
jae
push
mov
inc
and
xor
popf
push
cwtl
inc
mov
push
or
fcoml
pushf
jnp
pop
add
mov
loope
pop
push
inc
jle
cs
mov
addr16
jnp
mov
jp
jb
test
sub
inc
jae
cwtl
dec
or
pop
fs
or
andb
xchg
cwtl
cs
jo
xor
dec
and
mov
dec
mov
stc
push
cmc
or
jecxz
aaa
dec
cld
sub
ljmp
pop
mov
ficompl
aad
and
add
addb
add
sub
mov
pop
nop
jg
ret
sar
andb
hlt
je
dec
jns
clc
fsubrl
jnp
mov
into
sub
inc
pop
fldenv
loope
shll
cmpsb
fmuls
data16
inc
mov
add
out
insb
ds
add
rcrb
enter
or
in
mov
aas
push
and
lea
and
js
xorl
jns
mov
mov
dec
dec
lock
sub
adc
jb
cmpb
loop
cmp
stc
stc
sbb
sbb
loopne
das
sub
pusha
xor
shlb
pop
shlb
pop
ja
mov
mov
or
pop
lds
dec
mov
fsubs
cmp
out
push
jns
push
pop
es
sub
test
inc
sbb
cmp
sbb
fisubrs
xchg
fmulp
sbb
fs
data16
repnz
ljmp
packuswb
or
leave
idivb
sbb
out
cs
bound
push
or
mov
cmpsl
push
stc
adc
je
adc
jmpw
cs
push
int3
pop
inc
outsb
xor
cmpb
sbb
inc
xchg
jmp
in
xchg
mov
gs
fidivl
hlt
xor
loopne
enter
jb
mov
lahf
xor
mov
pop
push
shlb
addb
or
xchg
push
int
jmp
push
or
je
xchg
jbe
sar
xlat
sub
mov
movsl
ret
cwtl
loop
pop
add
sbb
js
fidivrs
and
dec
nop
jno
test
pop
pop
push
in
cmpsl
arpl
push
gs
mov
popw
jne
in
push
sbb
add
add
in
cmp
xchg
sub
std
lds
xor
and
pop
pop
mov
int
in
fs
int
ficoms
mov
cmp
pop
popa
hlt
lar
cs
dec
dec
test
mov
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
insl
xchg
sub
xor
cmpsl
jge
adc
insl
sti
pop
add
loop
xor
lods
dec
xchg
call
lcall
lea
aam
pop
les
inc
cmc
das
fldenv
push
movsl
adc
xor
loopne
movsb
loop
xchg
adc
insb
or
dec
ja
mov
out
and
test
inc
dec
decb
push
fwait
cli
or
ror
or
jb
leave
daa
sbb
sbb
mov
mov
pop
and
fldenv
mov
mov
push
into
pop
sub
mov
stos
rolb
sbb
jecxz
imul
fnsave
fstps
out
jnp
repnz
les
mov
jle
xor
push
mov
mov
nop
mov
sbb
scas
nopl
mov
jae
movsl
clc
in
cltd
lret
jae
stc
fwait
jecxz
sub
jnp
mov
jnp
push
mov
inc
fcmovnu
xchg
add
cmpsl
cpuid
outsl
cli
inc
sub
inc
add
notb
loope
faddl
or
sub
inc
out
sbb
cmp
or
and
mov
dec
mov
lods
movsb
inc
push
push
ret
mov
roll
xchg
and
out
arpl
mov
repz
addr16
push
aas
mov
inc
lock
loop
and
js
push
xchg
loope
movsb
les
fs
cmpsl
jae
jmp
jb
pavgb
rol
mov
mov
ret
frstor
and
repz
mov
filds
dec
movsl
add
ss
jmp
sahf
stos
mov
je
xor
sti
or
jg
fcoms
roll
pop
ljmp
stos
dec
cmpsl
dec
xor
inc
lea
xor
mov
mov
mov
adc
jbe
inc
fdiv
mov
dec
ja
jecxz
into
incb
cmpsb
mov
or
push
ret
lea
and
sti
xor
mov
mov
xor
pop
push
shl
lea
cmp
in
imul
sbb
mov
add
cli
xor
inc
daa
jo
push
mov
xor
push
and
and
inc
or
fnstenv
cmp
movsl
mov
inc
scas
rorb
shl
cli
rcll
pop
push
scas
mov
stos
popa
jne
push
call
ljmp
in
lds
lods
add
xor
aaa
mov
stos
pop
xchg
int3
mov
repnz
lahf
jmp
out
sbb
sub
icebp
out
ret
adc
adcb
jp
cmpsb
lds
push
inc
sub
dec
scas
sbb
add
into
jl
jae
and
inc
jp
push
inc
ljmp
lahf
shlb
es
in
ret
int3
std
das
sbb
std
sbb
in
xchg
push
hlt
sahf
hlt
adc
adc
and
dec
das
ret
mov
jmp
fs
out
add
das
sbb
dec
std
in
das
adc
mov
lods
ljmp
inc
jne
jbe
loopne
clc
out
das
xchg
stos
mov
push
xor
jbe
push
mov
mov
cmpsb
shrl
cmpsl
ja
xchg
in
and
cmp
scas
scas
bnd
lds
and
or
or
ljmp
xchg
repnz
fimuls
mov
and
push
xchg
jns
pop
xor
inc
loop
cmp
push
add
add
sub
mov
dec
in
pop
enter
sub
mov
sbb
jge
cmp
daa
int
aam
arpl
div
jo
gs
call
test
xor
jnp
pop
and
fisubl
pop
stos
clc
adc
sahf
cmc
push
nop
out
add
lahf
je
cli
ret
ja
mov
jo
sub
pop
and
push
adc
push
jb
pushf
mov
push
iret
sahf
dec
sub
ljmp
out
not
cmpb
pop
adc
in
ds
adc
rol
and
adc
jg
sbb
jge
push
mov
and
jbe
xorl
add
pop
movsb
adc
xchg
test
pop
mov
insb
test
adc
mov
jmp
xlat
pop
aam
mov
jg
cmp
dec
outsl
push
or
ja
and
les
adc
dec
gs
rcll
cmp
mov
dec
pushf
stos
test
adc
int3
sub
sahf
nop
mov
lds
cmp
insb
dec
clc
cli
mov
inc
call
mov
lret
subb
xchg
or
xchg
jbe
je
shl
inc
push
or
mov
rcl
push
cmp
mov
push
outsl
in
ret
shll
sbb
negb
test
sbb
mov
fidivl
push
push
cmp
inc
cmp
stos
add
add
and
stos
jnp
mov
incb
lret
mov
outsl
push
std
scas
lock
mov
inc
rcr
rol
add
sbb
push
lret
loopne
sbb
test
push
aad
adc
incb
inc
xchg
jl
or
pushf
mov
sub
and
xlat
ret
stc
dec
fwait
jo
cltd
adc
rcl
pop
fwait
dec
lea
cli
xor
js
loop
jg
shlb
aam
iret
mov
or
mov
fsub
sbb
push
mov
or
lret
sub
cmc
or
mov
xchg
sbb
cmp
push
mov
sub
sub
je
adc
push
lock
aas
inc
leave
xchg
xchg
mov
fsubr
mov
stc
out
lret
adc
and
dec
outsb
aas
push
lcall
icebp
jne
in
and
jecxz
in
popf
jl
int3
add
sub
mov
mov
push
rolb
popf
xor
sub
imul
ja
popf
mov
leave
jmp
sti
fsubrp
mov
outsl
cmc
insl
mov
cmc
loopne
lea
ret
sbb
call
in
add
xlat
or
push
mov
lret
mov
movsb
pop
mov
jno
push
mov
inc
in
lahf
sbb
sbb
xor
rcll
jmp
adc
into
imul
pop
pop
cld
das
fwait
fs
das
cli
sbb
inc
jmp
sbb
paddsw
cmp
mov
sti
lahf
mov
or
sbb
out
inc
out
sub
cwtl
sbb
pop
xchg
aas
insb
int
into
stos
jecxz
mov
arpl
add
sub
mov
stc
gs
jno
repz
sbb
sbb
icebp
add
mov
push
sbb
incl
inc
cmp
cmp
xchg
dec
xchg
mov
nop
cmp
mov
mov
dec
mov
aam
and
or
mov
repnz
push
mov
imul
bound
out
or
lea
mov
shl
mov
pop
int
and
jecxz
out
ficoms
ficompl
popa
mov
inc
mov
aaa
push
mov
cmp
lahf
dec
jns
in
test
lods
add
ret
repz
xchg
test
int
sub
vaddss
adc
pop
pop
loop
neg
dec
out
loope
pusha
lods
pusha
lahf
add
xchg
popa
addb
dec
mov
xor
das
dec
jmp
test
inc
into
adc
cmp
and
mov
xchg
jno
movsb
sbb
int
mov
mov
mov
dec
lods
scas
lret
mov
repnz
pop
lods
aam
sub
in
sahf
call
rcl
pop
pusha
dec
jns
inc
js
ret
jae
int3
lcall
decb
lahf
ret
sbb
and
jno,pt
xchg
cmc
add
aas
inc
aas
pop
pop
xchg
xchg
sub
jge
out
movsl
sbb
loop
inc
sti
xchg
mov
cmpsl
push
insb
mov
jecxz
dec
and
inc
movsl
inc
dec
mov
and
fs
ret
mov
or
cs
mov
popf
dec
rcrb
outsl
test
jl
xchg
xor
inc
add
pop
and
adc
sbb
cmc
call
add
cltd
push
outsb
into
mov
cmpsb
sarl
pusha
pop
pop
pop
jp
loope
fdivrs
pushf
daa
jb
sub
in
jp
jno
cmpsb
iret
dec
lods
sub
rcl
lret
decb
push
ljmp
adc
into
nop
mov
mov
or
sub
stc
fwait
jmp
lods
xor
or
cmpsl
pop
push
cs
dec
inc
sbb
das
fcmovu
das
loope
shlb
xchg
mov
xchg
push
sbb
fsubrs
test
cmp
ja
pop
das
jecxz
leave
into
mov
jbe
jno
inc
xor
lahf
lcall
or
ja
and
psrlw
lods
jge
ljmp
or
dec
insb
push
jno
push
inc
push
push
lds
js
inc
sub
push
push
mov
adc
aam
jns
in
mov
mov
xor
pop
inc
inc
lods
jo
mov
insl
dec
cmpsl
mov
cmpsl
sub
add
cmc
jnp
test
test
popa
icebp
sbb
popf
pop
nop
pop
adc
out
push
hlt
scas
movsl
sarb
sbb
push
lahf
ficomps
mov
hlt
mov
push
enter
gs
add
inc
test
push
cmp
sti
mov
hlt
xchg
in
test
lock
xchg
aaa
dec
push
adc
mov
cmp
stc
xchg
cmc
test
mov
push
push
fwait
push
data16
lds
mov
inc
pop
dec
mov
jbe
jno
sub
outsb
inc
xchg
rcl
jg
jge
sarb
gs
mov
xchg
inc
pop
fisttps
out
lock
scas
nop
inc
pop
pop
sbb
cli
daa
repz
cld
inc
sbbb
cmpsb
imul
subl
dec
adc
cli
jmp
inc
fadd
cmovs
es
mov
mov
inc
fnsave
add
xchg
mov
add
sub
fs
mov
add
repnz
push
fs
in
cwtl
inc
icebp
mov
gs
test
stos
inc
jb
outsl
mov
fmull
rorl
jl
mov
daa
mov
into
add
lock
aam
pop
jnp
lea
adc
jne
std
dec
push
addb
mov
icebp
les
add
xchg
test
stc
outsl
mov
in
stos
xchg
jb
mov
sub
push
cmpsb
stos
sbb
sbb
push
xchg
mov
fldenv
ret
jmp
scas
fisubs
xor
arpl
jno
push
out
jle
adc
cmpsl
or
pop
daa
and
fs
insb
sbb
fs
add
adc
int3
dec
mov
or
inc
out
push
xchg
adc
sbb
aaa
shlb
sbb
sbb
and
push
pop
sbb
or
push
mov
ror
insl
pop
and
add
mov
mov
mov
fstpl
int
sbb
mov
adc
adcb
sub
cmp
nop
sbb
subl
outsb
lods
adc
fisubl
cmp
loopnew
outsl
imul
je
pop
enter
mov
cld
or
mov
mov
test
jg
sub
and
test
es
mov
mov
ret
xor
fidivs
push
inc
stos
pop
fmull
lock
dec
ljmp
push
int
sti
sbb
pop
mov
sub
ret
add
sub
add
lahf
pop
jmp
mov
data16
or
in
mov
xor
std
cmp
dec
jle
sti
fs
mov
xchg
xchg
pop
pop
rcrb
test
and
cmp
fcmove
push
outsb
add
mov
daa
fistpll
repnz
lock
jnp
jp
ret
push
push
or
cmc
enter
aas
arpl
fs
lahf
sbb
sub
fistpl
leave
clc
inc
pop
mov
pop
out
arpl
or
in
sub
jp
pop
mov
sub
aaa
mov
fisttps
mov
pushf
push
sahf
jle
mov
lahf
ds
add
je
movsb
push
sbb
mov
xchg
pusha
pop
int
cltd
fdivs
daa
xor
imul
out
mov
daa
xor
stc
data16
sti
fisttps
and
push
fcmovbe
dec
gs
aaa
jmp
stos
ss
lods
test
sub
sti
xor
js
rcr
push
mov
sub
js
adc
mov
xchg
sub
xor
cwtl
pusha
jno
pop
daa
mov
push
mov
or
int
in
sub
jle
sub
js
shll
scas
nop
test
mov
idivl
jae
xchg
mov
divb
in
adc
add
xchg
or
mov
ret
pushf
pop
pop
pop
repz
push
ffreep
sbb
pop
pop
mov
stos
xchg
pop
mov
shr
dec
inc
pusha
stos
sbb
mov
jecxz
lods
mov
call
shll
and
inc
call
mov
mov
push
andl
pop
outsb
mov
and
sbb
fildl
cltd
sub
movsl
imul
gs
in
sub
sub
outsb
push
scas
insl
addb
test
cmp
out
jb
add
sti
push
xchg
mov
adc
dec
push
daa
leave
jae
jns
loop
pusha
test
cld
cmpsl
push
jnp
jmp
push
dec
ja
lahf
in
mov
xor
xchg
in
loopne
push
pushf
pop
sbb
pop
rolb
std
out
stos
cmpsb
sbb
insl
cs
enter
test
cmp
ds
xor
add
fildl
adc
jp
stos
xchg
pop
repz
testl
out
mov
dec
adc
leave
mov
jnp
fldenv
inc
dec
jle
cmp
pushf
inc
adc
aas
repnz
lods
sub
mov
stc
lret
fisubl
imul
mov
sar
and
ret
sbb
mov
das
pusha
pop
ret
fadds
int3
xchg
pop
xor
cli
nop
in
dec
add
dec
mov
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
.byte
in
jl
jns
or
pop
pop
jl
mov
cs
fistl
inc
push
lea
mov
data16
das
ds
push
cmp
jns
mov
popf
hlt
pop
jno
rcr
mulb
jb
popf
mov
jne
cmp
test
orb
sbb
inc
xorb
jns
inc
pop
fnstsw
xor
shlb
leave
es
xlat
lds
loop
xor
in
adc
out
push
insl
ja
dec
jae
fwait
aaa
add
inc
stc
sub
std
xchg
movsl
jo
jmp
mov
ds
stc
mov
inc
xchg
cld
push
mov
adc
mov
mov
dec
das
fs
testl
sbb
or
and
adc
scas
test
daa
mov
pop
pop
mov
pop
pop
jl
add
mov
and
mov
outsl
out
movsb
outsl
lahf
dec
aas
daa
mov
nop
xchg
test
mov
rol
cmp
lock
and
mov
pop
rclb
fcomps
inc
inc
ss
das
js
xor
or
addr16
cltd
out
sub
repnz
add
xchg
dec
ja
dec
shll
and
sbb
add
pushf
mov
or
aas
sbb
xor
cmp
add
lods
jo
bound
lea
lods
and
lds
jle
push
popl
or
dec
js
call
adc
xor
xor
pop
push
mov
jbe
xchg
xchg
ret
pop
add
adc
mov
push
out
sbb
or
iret
bound
in
dec
js
pop
xchg
ret
mov
or
cld
and
fs
xor
mov
cmp
xchg
xorb
test
xor
mov
sbb
std
jecxz
xchg
mov
lock
test
out
jmp
jp
mov
movsl
xchg
arpl
dec
iret
cmp
mov
cmp
mov
cmp
push
scas
mov
xchg
gs
mov
popf
add
pop
sbb
push
push
movb
stos
inc
sub
test
ds
inc
les
fildll
jmp
das
clc
lret
mov
fwait
jg
jnp
into
mov
lods
into
ret
in
mov
lods
jecxz
add
jae
int3
loop
sub
aad
mov
bnd
cwtl
punpcklbw
xchg
int3
and
shrl
mov
xchg
adc
jnp
dec
push
push
pop
push
adc
xchg
ss
mov
add
clc
mov
mov
out
daa
jae
mov
dec
push
inc
js
sub
ss
mov
js
and
jb
cmpsb
in
push
pushf
daa
insl
jae
out
sbb
inc
push
push
mov
adc
cmp
pop
or
xchg
sub
pop
lahf
call
imul
and
push
mov
icebp
iret
inc
sbb
mov
out
xchg
push
scas
sub
repnz
mov
adc
scas
stos
mov
idiv
cmp
dec
mov
js
jg
scas
adc
xor
push
pop
daa
or
out
lea
out
mov
lods
and
in
jno
xchg
movsl
dec
push
pop
ja
xor
push
daa
xchg
stos
push
cld
data16
stos
sbb
jle
aad
imul
fisubl
and
test
movsb
mov
mov
jmp
ret
outsl
dec
bound
push
ret
mov
sbb
jae
loop
and
push
mov
xchg
inc
roll
subb
adc
sti
jo
mov
orb
lret
insb
test
aaa
arpl
js
out
jg
sbb
mull
mov
mov
aas
sahf
dec
arpl
xor
test
push
cmpsl
xchg
outsl
frstor
jo
cmp
mov
xchg
std
call
lods
push
jle
shlb
out
fcmovne
out
mov
mov
push
jno
int
cmp
jnp
jb
jb
xchg
xor
out
leave
loope
adc
xchg
notb
leave
adcl
jmp
mov
fsubs
pushf
andl
jb
cld
inc
sti
push
pop
jo
fisubrl
pusha
pop
xor
mov
xchg
mov
fs
or
mov
push
test
jne
inc
lds
sbb
ja
iret
in
out
mov
popa
call
xchg
das
loope
icebp
sahf
ja
ljmp
cmp
cmpsl
mov
and
lods
negl
ret
push
faddp
xchg
jmp
fs
mov
xchg
stc
es
adc
loopne
int3
jl
xor
adc
jecxz
and
add
add
jecxz
loop
mov
outsb
push
mov
outsb
mull
fsts
adc
mov
sub
rcr
mov
or
cld
xchg
adc
scas
push
mov
hlt
adcb
fs
ss
jle
lods
dec
fs
inc
scas
in
push
rorb
test
jnp
es
in
mov
test
xchg
bound
pop
mov
out
icebp
pop
jp
sbb
addr16
and
mov
cmp
dec
in
mov
test
push
cwtl
mov
inc
test
test
mov
fnsave
pop
data16
push
mov
sub
fdivl
sub
jecxz
adc
or
out
shlb
sar
in
push
pop
mov
pushf
mov
cmp
ds
fdivrl
xor
pop
imul
sub
lock
xor
xchg
imul
push
mov
xchg
loop
aaa
outsl
xor
cld
fisubs
and
xor
out
xor
jmp
or
add
mov
jmp
sub
dec
idivb
ljmp
stos
in
aaa
out
inc
jne
outsb
jnp
xchg
outsb
cltd
pushf
es
jnp
or
adc
inc
gs
add
push
mov
leave
jg
or
dec
das
addr16
cltd
ficomps
clc
pop
mov
stc
lcall
mov
jp
dec
shrb
push
jnp
sub
in
aam
lret
test
aam
mov
xor
shlb
mov
bound
xlat
inc
in
add
call
sbbb
sbb
pushf
mov
add
test
ret
mov
pop
aam
mov
mov
mov
cmpsl
mov
sub
cmpsl
jnp
mulb
mov
push
mov
adc
rolb
lret
or
cmp
xor
idivb
and
mov
or
mov
adc
add
pop
arpl
leave
cmpsb
nop
mov
lcall
pusha
mov
add
pop
inc
cmp
push
mov
ljmp
push
loopne
add
outsb
fbld
jb
jp
mov
adc
iret
xor
aas
inc
xchg
ret
mov
je
insl
les
imul
pop
ds
or
shll
fwait
jmp
xor
or
jbe
cmp
scas
es
lods
aaa
jge
jle
adc
ljmp
sbb
xchg
aas
and
fists
mov
jne
mov
add
inc
mov
int3
in
ja
sub
sub
leave
ljmp
je
ljmp
sbb
xchg
inc
fsts
dec
popa
lock
in
add
add
sub
push
dec
jp
int3
and
imul
pop
and
dec
and
adc
adc
loope
add
pop
push
arpl
sub
mov
lret
mov
enter
pop
mov
mov
clc
jns
xorl
jecxz
enter
pop
in
scas
cmpsl
mov
add
sub
mov
fmuls
add
xchg
stc
pop
xchg
dec
stc
ljmp
push
push
xchg
fwait
sub
pop
into
jb
and
movsb
fdivrl
pushf
mov
in
mov
sub
lds
movsb
les
adcl
mov
sub
pop
scas
inc
xchg
mov
bound
addr16
sbb
xor
jnp
inc
push
int
into
data16
frstor
mov
test
inc
jmp
pop
in
add
fstpl
jg
lcall
out
dec
pop
inc
pusha
lahf
dec
inc
lretw
mov
repnz
jmp
out
out
stos
fisubl
cld
push
inc
add
inc
incl
mov
push
hlt
adc
jb
push
outsl
dec
jl
cmc
popa
jns
fstps
int3
push
push
sti
daa
call
test
notl
sti
movaps
arpl
dec
insb
repnz
imul
sbb
push
or
je
cmp
inc
cltd
ja
jecxz,pt
sar
cli
jge
ret
scas
fwait
sbb
test
or
repz
pop
cmp
mov
inc
bound
rclb
jmp
mov
testb
push
mov
push
ljmp
gs
jno
imul
icebp
icebp
push
andb
lods
pop
mov
cld
inc
insl
mov
int
adc
aas
popf
iret
xchg
mov
outsb
sub
stc
pop
outsb
dec
shl
leave
pop
xor
adc
mov
lahf
fcoms
adc
push
cmp
int
imul
js
mov
fwait
xor
xchg
add
ficoms
inc
add
orl
lds
or
inc
pop
int
lcall
xor
mov
sti
lock
in
fsubs
sbb
jb
inc
jnp
sub
mov
jmp
jge
loop
jg
xor
xorl
sbb
push
cmp
aad
out
sub
cmp
jl
dec
fwait
xor
imul
or
pop
aad
mov
cmp
jb
loope
or
lods
outsl
pop
xchg
adc
test
cmp
cwtl
pop
roll
mov
sarb
ret
or
cmpsb
loope
std
das
aam
les
jns
mov
mov
push
and
inc
xor
orl
movsl
cmc
dec
mov
cmp
and
or
in
mov
pop
in
cmp
mov
cmp
inc
jl
setge
stc
jae
pop
jg
nop
jae
lds
inc
pop
sub
push
ja
sarb
push
adc
lock
aas
pop
xor
jbe
sbb
or
test
sarb
enter
idiv
clc
arpl
adc
add
sub
pushf
xchg
pushf
push
mov
scas
push
pusha
push
dec
sub
pop
inc
scas
jns
orl
sbb
and
aas
dec
ja
scas
lods
xchg
adc
inc
push
popa
add
push
cltd
arpl
cmc
and
push
mov
sbbl
rclb
ss
movsl
mov
lds
xor
test
jle
sub
push
ficomps
aaa
cmpsb
push
into
ficoml
popa
pop
gs
iret
inc
in
adc
jmp
and
mov
int3
add
popa
jo
in
mov
push
sbb
aad
sqrtps
mov
aaa
jo
pop
or
fsubl
dec
std
rcll
scas
push
loope
xor
adc
addl
fadd
ret
xor
movsb
in
dec
mov
push
loopne
fnsave
lea
inc
push
push
jl
mov
shll
pop
rclb
adc
out
add
adc
sbb
push
cs
dec
rcl
imul
mov
sub
jecxz
mov
add
stc
sbb
bound
dec
inc
lock
test
jl
jg
iret
cmp
fbstp
or
ds
mov
dec
scas
xchg
push
cmp
lcall
mov
dec
pop
repnz
jb
mov
push
lods
adc
mov
sbb
pop
xor
cmp
push
lds
ss
pop
inc
shrb
mov
movd
popf
cmp
daa
push
rcll
test
jp
dec
inc
lret
popf
das
sbb
mov
iret
mov
out
mov
aaa
outsl
loop
xchg
mov
pop
push
icebp
pop
js
repz
sahf
mov
adc
mov
fidivrl
or
sbb
cmc
cmp
mov
jp
inc
jecxz
push
fs
xchg
inc
arpl
popa
sahf
mov
cli
movsl
mov
mov
scas
jnp
int3
xchg
sbb
bound
out
adc
xchg
xchg
shlb
rcr
cmp
shl
xor
out
out
dec
cmp
fs
mov
movsl
aad
cmp
fwait
scas
inc
xor
bnd
stc
push
mov
mov
and
mov
jns
imul
std
mov
pop
sbb
scas
ja
lods
pop
lods
sarl
popf
cmc
sbbb
xchg
inc
test
mov
sbb
push
add
sub
dec
ficompl
adcl
adc
push
sbb
push
fidivl
pcmpgtw
test
test
neg
imul
sbb
nop
push
lret
lods
dec
sub
mov
jl
mov
ja
or
movsl
adcl
cmc
jne
inc
add
mov
mov
jg
sarb
mov
mov
mov
jp
loopne
xchg
stos
push
mov
cli
jle
lds
or
mov
push
xchg
aad
lahf
or
insl
jmp
xlat
xor
pop
lea
push
in
out
inc
shll
or
in
cli
popa
lahf
or
mov
xchg
iret
into
bound
fisubs
or
lds
lds
mov
xor
repz
or
add
pop
sub
xchg
int3
fbstp
and
xchg
cmpsl
addr16
cmpsb
push
shlb
bound
xor
mov
jmp
inc
cmp
loope
lahf
in
xchg
outsl
daa
pushf
inc
fs
cmp
jl
or
in
outsb
icebp
lock
outsb
push
and
dec
adc
aad
fsubrl
loop
push
aam
jg
sti
in
xchg
movsb
dec
lcall
xor
mov
fsubrp
icebp
sub
adcl
sub
or
movsb
xchg
popf
jae
mov
aas
add
mov
adcb
adc
jb
xchg
je
fmulp
sarl
imul
pop
leave
mov
fcmovbe
add
inc
mov
xor
or
pop
cltd
popf
loop
and
xor
mov
frstor
jmp
sarl
outsl
jae
dec
jmp
cwtl
fucomi
ljmp
je
shl
ljmp
cmp
mov
cwtl
jl
bswap
cmp
xchg
int
xor
js
mov
fldcw
pop
mov
xor
push
jl
pop
mov
sbb
cmc
push
pop
jl
repnz
fisubrs
xlat
faddl
cmp
lods
imul
divb
push
jg
sti
movsb
jecxz
call
adc
sub
mov
gs
jo
add
fmull
jge
scas
and
cs
push
popf
std
xor
test
mov
sti
inc
lds
pop
dec
scas
jns
push
std
add
push
and
sbb
xlat
sbb
shr
in
insl
inc
add
mov
xor
xchg
jmp
xchg
ljmp
dec
pusha
push
mov
inc
fnstcw
mov
lret
repnz
mov
testb
xor
ja
ret
dec
pop
sub
daa
stos
fs
xlat
mov
sbb
inc
xchg
pusha
mov
xorb
mov
and
mov
lret
repnz
clc
adc
xchg
dec
or
shl
pop
insb
inc
fidivrl
cmp
lock
stos
loop
aas
out
cmpb
mov
sbb
push
mov
loopne
jne
loope
pop
les
add
fidivl
xor
add
test
xchg
int3
mov
sbb
popa
sti
mov
adc
fwait
pusha
add
push
adc
dec
adc
into
fistpl
loope
mov
outsl
ficoml
sahf
jle
test
mov
cmp
inc
or
lods
mov
ds
in
mov
js
mov
mov
ds
call
cs
aaa
test
xor
xchg
insl
push
mov
sub
lcall
pop
lcall
mov
pushf
xchg
mov
pop
xor
adc
jne
loopne
in
imul
pop
adc
lds
mov
xor
mov
subl
xchg
repz
fyl2x
cmpsb
sarl
sub
test
pop
cmpb
pusha
jmp
jns
jns
mov
inc
xor
rorl
sub
jb
push
fldenv
dec
cmp
adc
aam
test
imul
xchg
je
dec
mov
cmpsl
mov
std
mov
aam
cltd
adc
xor
clc
movsb
push
inc
xor
loop
insb
mov
in
cwtl
jb
push
sarb
movsl
sbb
paddw
cmp
aam
push
add
dec
lea
push
inc
push
xchg
lea
mov
and
hlt
inc
ljmp
sub
in
cmp
shll
pcmpgtd
dec
fdivr
insl
sub
and
cmp
sbb
pop
mov
jle
mov
pop
mov
pushf
lock
aaa
xor
add
out
jp
dec
lret
mov
xchg
mov
arpl
ret
pusha
push
push
insl
or
test
int
mov
pusha
pop
mov
pop
loopne
push
js,pt
jnp
adc
dec
lods
push
inc
aad
sbb
cmp
fsubrl
sbb
and
mov
stos
cmp
sbb
int
cmp
dec
jbe
shrl
push
popf
mov
insl
push
sar
mov
js
mov
mov
outsl
loope
leave
add
push
fldt
pop
mov
pop
xchg
xchg
or
mov
cmpsl
mov
in
out
or
xor
cmp
or
push
mov
jo
mov
or
stos
in
adc
pop
andb
and
pop
adc
or
inc
push
xchg
in
push
stos
pop
stos
xor
aam
dec
inc
in
or
int3
test
popf
clc
notl
jle
daa
int3
subl
mov
ja
pop
pop
xchg
inc
cmp
scas
cvtpi2ps
add
fnsave
jae
sub
out
push
mov
into
pop
ret
or
sub
mov
dec
cmovb
bnd
add
in
push
or
push
mov
and
addr16
adc
mov
std
enter
mov
and
stos
lcall
lds
or
dec
dec
and
xor
mov
xor
adc
pop
inc
xor
fldcw
lret
and
call
push
push
push
ficoms
enter
pop
cmp
mov
insl
push
sub
add
icebp
mov
movsl
test
int3
pop
xchg
in
adc
push
aad
roll
xchg
jno
sbb
mov
adc
push
cwtl
push
test
pusha
pop
out
movsb
xor
push
dec
inc
repnz
ds
dec
dec
out
imul
pop
cmp
mov
loopne
lsl
lret
mov
lret
dec
fadd
pop
xlat
xchg
pop
pop
imul
icebp
push
negb
and
sub
rcl
jno
out
add
je
loope
inc
lea
ja
mov
fidivrl
xchg
aam
push
fisttpl
mov
mov
fisttpl
xor
pop
inc
mov
lahf
sub
sbb
pop
dec
cmpsb
add
aas
sub
nop
nop
mov
mov
or
fidivrl
dec
insb
faddl
xor
mov
call
mov
inc
test
and
cli
and
cs
jp
movsl
jne
pop
push
inc
test
jo
sti
sub
xor
xor
add
fmull
js
iret
sub
sbb
adc
mov
shlb
jp,pt
jle
lea
sbb
sti
adc
pop
and
data16
je
sub
fldl
rcr
cmp
call
mov
mov
mov
pop
push
adc
stos
imul
jle
xchg
adc
int3
flds
aas
xchg
xchg
test
jmp
jns
fsub
dec
movsl
xchg
int3
mov
psrad
shrl
in
lret
mov
mov
repz
pop
dec
cmp
cmp
int
dec
imul
and
push
popa
add
push
imul
in
clc
push
and
add
nop
or
aam
inc
aaa
call
mov
lret
mov
xor
in
inc
dec
insb
mov
mov
shll
or
in
push
lods
dec
loope
push
mov
cmp
adc
lret
idivb
scas
jl
and
cmp
cli
push
fsubs
out
dec
jbe
cmc
inc
xor
cmp
rcl
insl
jb
iret
shrl
test
fistps
rorb
stc
fwait
pop
xor
cmpsl
aaa
stc
fimuls
push
jae
leave
aad
adc
ret
js
mov
xchg
clc
mov
loope
xor
dec
or
add
iret
or
cmp
test
cltd
mov
icebp
js
xchg
ret
rorb
pop
add
and
cmp
and
add
inc
cmpsl
add
cmp
mov
sbb
mov
mov
mov
sbb
repz
push
sub
std
push
lret
jl
xor
adc
add
icebp
jl
sub
mov
in
pop
pop
add
xlat
xchg
pop
pop
mov
test
leave
fsubs
xlat
xorb
sahf
aaa
mov
xor
pop
xor
popl
test
xor
insb
mov
dec
hlt
add
and
mov
jl
fcoml
repz
and
jl
add
xchg
outsb
jbe
and
inc
and
rcrb
popf
add
testl
jp
test
dec
fiadds
or
mov
enter
cmp
gs
outsb
cmpsb
adc
sub
or
fldt
into
add
cwtl
das
fstpt
sbb
mov
adc
jmp
lds
rcl
xlat
jns
int3
icebp
sub
dec
insb
mov
sti
data16
mov
xor
mov
das
pop
jg
fcmovu
scas
je
push
mov
xlat
loopne
jg
mov
imul
mov
cmp
ror
lea
push
sub
in
mov
push
lahf
lahf
pushl
add
fidivl
push
jmp
mov
push
movsb
out
push
xchg
inc
inc
ds
sbb
ja
int
jnp
xorl
scas
insl
rolb
sbb
je
daa
lea
insb
xchg
pop
lods
les
fcmovnu
mov
inc
arpl
aam
in
or
ss
insb
arpl
jbe
pop
sahf
test
push
sti
adc
jnp
mov
call
sbb
cli
inc
xchg
mov
pop
mov
or
push
out
mov
insb
das
cmpl
cmc
push
mov
adc
adc
mov
jle
addr16
int3
pop
and
mov
mov
stos
mov
test
jl
add
jbe
imulb
xchg
xchg
popf
movsb
sbb
mov
adc
dec
jmp
iret
aad
cmp
adc
jp
out
cmp
in
insl
mov
aad
and
pop
pop
mov
cmp
lea
jmp
push
mov
sub
push
js
in
lret
mov
pop
faddl
xchg
mov
sub
ret
dec
out
or
bound
push
lods
mov
into
mov
and
or
cmpsl
pop
mov
jmp
mov
dec
aas
shll
jl
push
inc
test
call
push
arpl
mov
imul
es
loope
loop
in
or
xor
sahf
aas
lret
rcrl
divb
jmp
call
xchg
iret
jmp
aas
cwtl
pop
cs
out
pop
fidivrl
jns
sahf
pushf
push
stos
jne
push
lods
push
adc
lret
popa
mov
fimuls
fnsave
jecxz
cltd
scas
pop
push
imul
insb
dec
sbb
pop
sahf
stos
mov
sbb
rcr
sub
int
fbstp
fisttps
adc
sbb
sbb
pop
sbb
iret
flds
or
ror
push
fstpt
cmp
out
shrl
cmp
cs
push
stos
xor
popa
shlb
xor
rorb
jo
jecxz
clc
jmp
push
rcll
scas
jbe
mov
pop
sahf
hlt
pop
into
or
in
adc
mov
loope
add
fmuls
test
in
and
test
aad
pop
push
les
adc
rol
insb
xchg
aam
xchg
dec
pop
mov
out
jg
data16
mov
aas
add
adc
mov
mov
test
inc
icebp
lret
jnp
mov
cmpsb
clc
scas
add
out
add
adc
sub
lods
xchg
fs
xchg
cmpsb
cmpsb
rcrb
or
jo
xchg
repz
pop
sub
mov
leave
push
das
call
out
xor
jne
roll
call
cmp
cld
xor
mov
add
mov
bnd
jge
mov
inc
and
lods
subb
mov
imul
addr16
sub
cmp
pop
orb
loop
sahf
push
adcl
xlat
dec
mov
xchg
cmp
xor
inc
pop
jg
xchg
add
sahf
pop
adc
and
push
jo
das
cmp
mov
fs
cmp
adc
out
enter
jmp
jl
mov
mov
pop
ror
jb
adc
dec
xchg
movsl
inc
jne
mov
je
cld
sahf
pop
add
cmpsl
out
je
mov
lods
js
and
bswap
ss
pop
int3
and
cmp
push
mov
packuswb
inc
loop
mov
cmc
lahf
icebp
enter
xchg
xchg
out
push
xchg
repnz
and
loopne
sbb
xchg
sbb
movsl
add
inc
cmp
adc
cwtl
testb
aas
icebp
mov
insl
cli
sub
cmp
movl
push
ds
or
xor
pop
pop
out
push
xchg
xor
cld
jg
aad
lahf
add
test
out
pusha
mov
xor
shrl
and
mov
ja
add
mov
adc
adc
dec
add
popl
movsb
fs
aas
ret
rorl
dec
andb
pop
mov
stos
pop
cld
jbe
mov
cmp
mov
mov
pop
fs
dec
int3
push
test
dec
pusha
fmull
fidivl
js
cmp
push
mov
mov
dec
repz
icebp
lea
jle
scas
int3
xorb
or
fld
xchg
mov
dec
addr16
mov
jg
fucom
out
push
pop
addr16
sub
mov
repnz
cld
test
fmul
fsubl
sbb
popf
repnz
sbb
add
clc
pop
xchg
cld
stc
scas
test
es
jg
sbbl
lahf
dec
mov
fsubs
and
pusha
inc
sub
int3
push
test
filds
test
xor
outsb
pushf
push
inc
or
or
xchg
and
leave
mov
es
jecxz
hlt
pop
aaa
sti
or
add
test
cld
popf
fisubrs
jmp
sbb
jge
out
xchg
je
dec
adc
out
and
clc
jns
rorb
outsl
inc
aaa
cmpb
mov
inc
add
roll
mov
mov
mov
and
add
push
or
mov
adcb
mov
adc
sbb
sbbb
fwait
inc
lds
xor
xchg
xor
mov
xchg
inc
mov
pop
add
jmp
subb
and
sbb
inc
scas
lret
inc
mov
mov
mov
inc
jo
sub
mov
bound
ja
sahf
xchg
mov
adc
mov
sub
popa
sub
push
in
pop
loopne
into
je
das
pop
movsb
sarl
cmp
loop
mov
jl
dec
test
adc
pop
xor
int3
add
test
in
fcompl
cltd
in
aas
and
pop
cmpl
mov
jg
int3
sahf
push
fistps
decl
sub
jbe
and
xchg
jnp
mov
dec
dec
das
inc
repz
dec
lcall
stc
and
mov
xchg
pop
fstps
in
xor
fs
jnp
mov
jnp
out
repnz
sbb
aas
int
fcmovnbe
test
sbb
lods
dec
mov
scas
sbbb
mov
pop
or
dec
sahf
ds
dec
movsl
add
cmp
sub
pop
adc
into
xchg
mov
xchg
mov
in
pop
push
sub
loop
jge
scas
or
and
or
add
test
mov
mov
ds
add
cmp
popf
cli
sbb
subb
mov
jnp
out
adc
ud1
nop
sahf
sbb
rorl
test
mov
pop
mov
push
sbb
shlb
rorb
aad
inc
lret
psubw
rcll
push
push
jno
mov
lahf
xchg
sbb
cltd
sub
sub
cmp
jle
fisttps
outsl
sbb
pop
pop
in
test
fstpl
stos
int3
pop
mov
push
out
jge
loopne
jns
ret
pop
dec
jno
mov
push
push
and
adcl
sbb
xor
sub
push
jmp
sub
jns
repz
sbb
sti
push
enter
xchg
push
pop
cwtl
repnz
incb
pop
jp
enter
movsb
dec
pusha
fadds
mov
or
nop
sbb
data16
pop
pop
inc
dec
mov
les
push
leave
adc
inc
mov
pop
add
shrl
jmp
lcall
inc
jge
mov
subb
aam
dec
dec
inc
dec
ja
test
cmc
cmpsb
in
sub
adc
fldenv
mov
icebp
test
js
xchg
sub
andl
adc
pop
xlat
insl
test
mov
cmpsb
test
incb
mov
push
popf
sbb
and
mov
sub
push
pop
aad
dec
idivl
addb
add
cmp
sbb
push
fsts
cmpsl
pcmpeqb
call
addr16
out
stos
xor
loop
inc
mov
inc
jp
dec
jmp
iret
rorl
bound
push
inc
pop
mov
jmp
int3
loop
insl
mov
popa
in
lret
push
xchg
dec
vpackuswb
cs
xorl
test
add
mov
pop
or
cld
arpl
daa
push
aam
sahf
rep
outsl
add
inc
inc
loopne
dec
xor
sub
or
xlat
loop
movsl
jmp
xor
mov
xor
push
flds
popa
sahf
and
sub
adc
lret
add
push
and
outsl
cmpsb
leave
rorb
xchg
pop
cli
lock
pop
dec
add
or
addr16
into
xor
push
inc
sub
addr16
outsb
dec
loopne
call
adc
cmpsl
push
xlat
sbb
test
lods
ss
rcrb
int
mov
rcll
adc
bswap
or
pcmpeqb
and
icebp
aam
arpl
pop
iret
test
int3
shl
cmp
fstps
lret
inc
mov
ret
add
lea
sbb
xlat
popa
scas
fwait
out
cmc
adc
imul
loop
ss
xchg
repz
rol
cli
and
les
insb
cmp
js
mov
jb
in
or
lahf
cmp
pop
jmp
pop
or
setne
push
hlt
std
jp
addr16
and
leave
sbb
test
cltd
pusha
dec
dec
pop
jno
aad
ds
ja
push
sbb
lret
repz
stos
cmc
ret
jmp
shll
push
dec
add
mov
imul
mov
stos
jnp
inc
lahf
push
jo
add
xor
int3
mov
jbe
popf
fidivl
int
test
in
ljmp
push
dec
jecxz
jl
std
and
inc
rcl
jmp
or
lds
dec
fucomip
mov
scas
popf
jno
je
outsb
repz
lock
push
and
and
fisubs
inc
sahf
cs
jb,pn
loop
dec
jg
pop
fisttpl
push
lea
dec
ja
aas
popa
push
pop
test
cmc
mov
stc
or
faddl
mov
cmp
sbb
ja
es
dec
dec
xor
mov
add
or
add
and
aam
jge
leave
fidivrs
mov
xchg
icebp
jno
mov
repz
in
sub
push
mov
bound
lds
dec
add
enter
mov
mov
xor
cmp
push
lcall
ficompl
pop
aas
cmp
xor
sbb
mov
sub
push
loop
inc
scas
jbe
ja
push
pop
and
pop
jge
mov
aad
cld
mov
pop
fdivl
sar
mov
int
shl
insb
cmp
scas
mov
aaa
cvttps2pi
add
icebp
adc
out
jo
xor
aam
ret
outsl
cmp
into
xchg
test
ret
push
scas
push
fisubrs
xor
imul
lahf
cld
fnstsw
lods
aad
or
ljmp
test
fistl
adcb
pop
cmpsb
and
push
popa
jno
adc
xor
add
cmpsl
cli
push
shll
cltd
fistpl
or
and
ret
jp
movsl
and
cmpsl
fldcw
insl
push
sub
loopne
push
xor
cmpsb
out
and
inc
lret
mov
fst
cmp
ret
inc
int3
cmp
xchg
out
jmp
dec
dec
iret
mov
out
lret
sbb
shrb
xchg
js
shl
inc
lock
insb
sub
aam
cmpsb
push
adc
pop
stos
and
outsl
or
enter
aas
in
cwtl
inc
andl
cmp
add
adc
movsl
inc
fsubrs
sti
pushf
mov
sub
xchg
mov
sub
js
pop
jb
lock
cld
dec
and
and
gs
out
jp
sbb
and
mov
pop
cli
test
scas
hlt
and
adc
pusha
mov
out
push
mov
in
jno
into
or
sub
push
mov
mov
pop
mov
dec
mov
xor
mov
sbb
insb
push
mov
add
add
sub
sti
xchg
mov
adc
pop
jno
sub
xchg
mov
fstpl
xor
sub
push
dec
push
sbb
cmp
push
jae
mov
sbb
jmp
inc
push
orb
addr16
jo
dec
in
lcall
dec
rclb
rol
mov
arpl
xchg
cmpsb
xchg
rorb
inc
cmc
mov
jae
aas
shrb
jmp
mov
out
pop
jae
cmp
push
push
mov
lods
sbb
push
insb
mov
inc
aad
or
out
and
pusha
scas
aas
stos
mov
cwtl
int3
mov
out
mov
aas
sti
adc
or
xor
fidivrs
outsl
dec
mov
jb
adc
sbb
sahf
mov
jns
xchg
xor
cmc
outsl
and
enter
test
inc
mov
clc
mov
fidivrl
inc
insb
movsb
jo
aas
mov
mov
in
imull
mov
sub
cmp
xchg
aas
or
or
jae
lods
nop
fsts
mov
aaa
leave
or
pop
lds
or
cmp
popa
mov
aad
ja
int
jo
imul
adc
xchg
mov
dec
lcall
xchg
xorb
cmp
pop
cmpsl
push
inc
daa
xchg
call
sub
enter
fiadds
xor
adc
add
rclb
push
push
dec
popf
mulb
imul
lock
jae
addr16
xchg
sbb
jecxz
jecxz
aas
fidivrs
and
sub
add
jnp
test
and
and
mov
mov
popa
cwtl
xchg
nop
mov
std
adc
je
jne
stos
scas
jge
out
pop
loopne
or
push
pop
adc
std
outsl
mov
imul
xor
xchg
test
push
inc
ret
stc
cmp
je
roll
aas
inc
idivb
add
xlat
rcl
push
clc
dec
hlt
cwtl
fcomi
icebp
adc
pop
add
lods
pop
jg
clc
test
xchg
fildll
xor
loopne
jmp
push
ffree
jl
imul
jo
jo
jne
aam
setb
popa
sub
jle
aad
out
stos
mov
jne
mov
cmp
jo
shlb
inc
faddl
loope
push
mov
cwtl
push
mov
and
push
adc
push
add
mov
push
lock
jno
cmpsb
clc
fmul
jl
and
cmc
cmpsl
lahf
cmpsl
movsb
stos
cs
add
out
sbb
repnz
inc
dec
mov
jp
clc
int
sbb
cli
outsl
aaa
xor
cmp
int
lahf
loopne,pn
out
jae
sub
pop
inc
xor
test
mov
pop
push
cmc
repnz
sub
cli
out
iret
sbb
repnz
mov
cmp
movsb
sbb
xchg
push
insb
addr16
ret
push
insl
xor
dec
shrl
pop
mov
pop
jae
testl
adc
jns
xchg
addr16
in
pushl
aam
mov
adc
gs
dec
or
test
aad
shll
push
fwait
pop
ja
jecxz
push
push
gs
ret
jns
jmp
das
outsl
imul
pop
jg
aam
jle
adc
in
mov
pop
inc
add
out
aam
hlt
aad
loopne
mov
cmp
jo
add
test
xor
rcll
dec
cmp
lea
mov
fisubrs
fnstcw
jecxz
pusha
push
cs
ja
mov
out
and
iret
mov
decl
cld
int3
aas
inc
cmp
lds
test
mov
ljmp
inc
xchg
xchg
lods
push
test
adc
test
cwtl
int3
loop
in
lcall
and
and
in
inc
ja
cmp
ljmp
add
push
test
aas
push
jne
cmp
xor
testb
xor
xchg
loopne
lods
inc
xlat
std
je
jo
cmp
push
imul
test
aad
loope
lcall
push
aas
fnstsw
pop
out
rcl
cmp
arpl
mov
ror
xchg
rorb
dec
mov
stos
pop
fdivr
mov
jg
cmp
xchg
jecxz
dec
pop
add
insl
pop
out
xchg
mov
pop
test
ja
add
repnz
mov
pop
xchg
xchg
lahf
imul
cmp
pop
ret
rol
sbb
mov
and
das
pop
scas
push
mov
pop
jne
mov
jmp
jp
shrb
inc
sub
lea
jb
mov
int
in
mov
lcall
shll
xor
sub
xchg
cld
popf
dec
inc
pop
cmp
lods
dec
sbb
xor
shrl
dec
enter
sti
mov
cmp
adc
mov
pop
xchg
push
sbb
pop
add
dec
jle
pushf
scas
fldl
sub
inc
into
das
gs
jg
cmp
or
pop
mov
pop
add
xor
inc
inc
rolb
dec
fdivs
mov
xor
fs
mov
jmp
pop
ss
enter
and
shl
pop
data16
js
aad
movb
push
loop
repz
cld
fadds
test
ret
and
xchg
pop
lret
xchg
jg
out
adc
push
or
sbb
lret
pop
mov
push
or
mov
sub
sbbb
mov
ds
mov
clc
lods
movsl
stos
cmp
dec
add
es
pop
xchg
pop
loope
insb
test
mov
or
mov
inc
or
addr16
push
arpl
adc
and
and
dec
jmp
mov
add
mov
jae
inc
cmp
xor
leave
add
mov
cmp
js
pop
aam
je
pusha
push
stos
sahf
fs
es
ja
xor
test
ss
sarb
mov
aam
lods
aaa
xor
xchg
xchg
and
mulb
pop
psrad
mov
or
xlat
push
mov
into
fcomp
and
jge
pusha
loope
loopne
aad
mov
fdivrl
dec
cmp
aam
or
sub
or
xchg
test
adc
push
jp
mov
out
cmc
mov
mov
inc
add
cmpsb
ss
sub
jecxz
push
insl
out
push
clc
es
fcoms
cs
test
adc
xlat
loopne
sbb
pop
add
shrb
lods
or
cmp
in
jbe
sub
xor
fstps
push
sahf
sub
cmp
dec
push
push
sbbb
test
stc
lret
mov
je
push
call
in
ds
sub
rorb
add
mov
sbb
xchg
popa
cli
popa
movsb
call
cmc
jl
adc
insb
xor
and
and
sbbb
lods
lock
add
cmp
xchg
lock
xor
add
xchg
inc
pop
ret
and
into
cltd
push
inc
ficomps
adcb
sub
shl
and
mov
and
jmp
and
dec
shlb
push
mov
into
adc
lret
mov
dec
in
mov
fisttpll
and
fidivl
xor
leave
ror
test
repz
adc
dec
loopne
adc
and
js
mov
add
aad
outsb
mov
mov
mov
inc
xchg
sbb
xchg
es
add
add
loopne
in
or
mov
sbb
mov
xchg
and
jg
arpl
roll
pop
pop
es
adc
push
ljmp
cmp
arpl
dec
rclb
das
notl
pop
xchg
mov
adc
fs
push
mov
add
pop
mov
mov
nop
pop
shl
mov
mov
adc
mov
cli
out
push
scas
pushf
popa
es
mov
add
pop
xchg
pop
fisubs
mov
shrl
dec
test
mov
jnp
ret
test
test
jmp
fdivr
ret
lds
pop
fwait
push
cmc
push
rol
pop
icebp
call
test
in
outsl
push
cmp
loope
mov
testb
imul
xchg
pushf
and
ja
jb
je
inc
xchg
pop
cmp
cltd
or
movsb
pop
leave
or
add
and
adc
stc
dec
out
dec
dec
leave
mov
out
mov
mov
nop
mov
vpcmpeqb
loop
lods
or
push
fadds
pop
cmp
nop
sub
pusha
jl
push
bound
imul
inc
mov
pushf
addr16
sbb
xor
dec
push
cmp
fimull
mov
fnstcw
jne
stos
cmp
gs
test
out
movsl
xchg
dec
mov
adcl
xchg
sbbl
sbb
mov
movb
aaa
push
int
inc
xchg
enter
dec
mov
aad
adc
jnp
cmpsl
loope
test
sbb
movzbl
fistpll
inc
inc
mov
sub
and
adc
cwtl
or
arpl
pcmpgtb
addr16
mov
loop
push
xchg
je
out
sub
js
cwtl
jp
cwtl
lods
xor
in
imulb
mov
test
stos
mov
xchg
jnp
cli
fistpl
divb
dec
or
nop
test
popf
jo
and
adc
add
dec
lods
mov
jp
hlt
and
dec
xchg
insl
test
mov
inc
jns
push
test
in
pop
lret
fdivrp
adc
dec
push
inc
ss
fisubrs
mov
repnz
cmp
es
movsb
xchg
sub
sub
xchg
xlat
clc
popa
fwait
arpl
in
mov
f2xm1
ret
sbb
inc
fwait
or
addr16
push
lods
jae
pop
icebp
sub
mov
pop
mov
fstl
adc
pop
subl
aas
fs
cmp
sub
xor
dec
mov
mov
xchg
ds
push
sbb
pop
and
lahf
pop
mov
cs
cwtl
in
fmulp
jbe
das
out
add
mov
cld
call
push
test
mov
xchg
xlat
mov
cs
aaa
in
push
xchg
daa
out
mov
and
stos
movb
push
and
adcl
sbb
xchg
jmp
out
leave
movl
jge
lret
and
aam
mov
cmpsb
jle
push
add
adc
inc
push
cmp
sub
scas
sbb
adc
or
cmpsl
xor
pop
jo
inc
cmp
out
mov
push
or
lret
ret
lock
fcoml
add
cmp
cwtl
mov
fidivl
pushf
ret
popa
or
mov
adc
pop
mov
jle
xor
testl
aam
jp
iret
rclb
add
pop
fcoms
push
enter
movsl
in
fsubl
xor
mov
leave
mov
mov
or
push
jo
dec
arpl
data16
xor
test
xlat
mov
popa
cltd
ret
sbb
dec
stos
pop
jge
mov
cli
std
jne
loop
xchg
xor
or
push
dec
mov
cli
dec
cmp
sub
pop
shl
arpl
cmpsb
or
sub
sbb
cmp
rclb
loop
lahf
mov
mov
cli
mov
pop
insl
insb
xchg
push
pop
test
inc
int3
lds
ja
out
clc
loop
jmp
mov
shll
gs
xlat
xor
sbb
xor
or
gs
mov
in
call
xor
xchg
push
les
lods
into
int
push
mov
das
or
dec
loop
gs
mov
or
cmp
sbb
and
jns
aas
loop
mov
or
js
mov
sub
into
fidivs
iret
std
or
pusha
mov
cmpsb
push
and
mov
shll
in
inc
sbb
pop
mov
jg
push
cld
fwait
dec
lods
out
mov
loope
dec
xor
imul
sbbl
ljmp
inc
or
iret
sbb
mov
in
jmp
mov
mul
popa
addr16
inc
stc
push
or
pop
mov
addr16
cltd
add
scas
repnz
pop
mov
shlb
push
sarl
lods
pop
jns
daa
sarb
push
call
pop
mov
jg
scas
xor
les
jl
in
xlat
mov
sub
xchg
mov
dec
cwtl
and
or
push
aaa
shll
mov
sbb
mov
mov
hlt
outsl
and
mov
ss
aas
and
and
stos
or
xor
push
or
xchg
push
loopne
hlt
push
mov
dec
imul
push
jmp
xor
loopne
sbb
clc
mov
imul
scas
add
lahf
rolb
imull
arpl
gs
xor
xor
push
and
ficoms
popa
xlat
add
fnop
mov
cltd
jnp
push
or
and
add
inc
flds
lods
mov
int3
xchg
das
data16
sti
in
mov
clc
push
rcrb
shll
sarl
push
mov
lds
loope
mov
lods
out
push
sub
xchg
out
shlb
lcall
cmp
pop
stos
ljmp
or
mov
hlt
adc
pop
jns
inc
gs
mov
je
mov
aad
clc
hlt
inc
ja
pop
cmp
xor
fsubrl
pusha
xor
jmp
shlb
adc
fwait
inc
cmpsl
cmpsl
mov
testl
mov
stc
sub
sbb
es
sahf
xchg
cmpsl
inc
into
push
fwait
orb
sahf
inc
orl
inc
test
push
or
mov
dec
stc
cltd
out
fisttps
out
ret
imul
adc
inc
xchg
setb
cmpsl
mov
or
iret
mov
push
je
sahf
fstps
pop
pop
insb
adc
mov
push
imul
enter
jno
stos
dec
aaa
fwait
bound
lahf
xchg
add
aam
xchg
adc
test
xchg
inc
imul
pushf
pop
jl
enter
mov
push
or
or
mov
daa
sbb
ret
jbe
jp
sbb
pop
gs
ss
and
xor
sub
pop
outsb
sbb
sbb
ja
in
or
or
and
inc
js
jle
aam
add
icebp
ds
das
test
lret
pop
and
inc
and
sbb
adc
pop
inc
pop
push
mov
mov
lcall
test
sub
add
cmc
inc
pop
sub
jge
mov
fisubs
mov
xchg
repz
icebp
shlb
sub
sub
jns
je,pt
iret
out
mov
ss
fsubs
or
out
repnz
sub
sbb
push
lret
inc
and
mov
push
enter
test
sbb
push
ret
repz
sub
mov
call
das
stos
dec
ret
xor
cmp
rcrl
fsubrs
pop
adc
sbb
cmpl
pop
sbb
add
mov
sahf
int3
int
mov
aaa
js
outsb
or
sub
out
pop
test
or
push
lahf
pushf
jb
cmpb
or
fimuls
jp
xchg
mov
inc
ret
das
xor
lds
mov
movsl
pop
inc
sqrtps
leave
sbb
mov
add
xchg
fbld
or
scas
mov
inc
pushf
movsb
ret
es
jns
jno
mov
cwtl
orb
mov
fwait
adc
js
xchg
rorb
nop
xchg
shll
jne
sub
pusha
jno
movsl
push
into
repnz
movaps
out
fnsave
pop
mov
lods
sbb
xchg
ret
push
arpl
cmp
fmul
aas
add
dec
call
aam
mov
jns
or
cmpsl
pushf
sbb
adc
sbb
je
pop
andl
mov
test
aaa
movsb
in
jnp
xchg
lds
idivl
xor
sbb
jg
dec
jae
mov
and
adc
and
add
popf
jb
cmp
roll
inc
or
andl
dec
shl
call
push
mov
jmp
mov
dec
jb
daa
mov
les
insl
cmp
sti
sbbb
xor
outsl
push
lods
pushf
dec
push
xor
aad
rol
adc
or
cltd
cli
fdivrs
push
je
in
sbb
adc
push
in
fucomip
dec
jae
push
mov
pop
mov
divb
cmp
mov
push
adc
lcall
movsb
imul
stos
push
xor
lods
pop
cs
sbb
ret
mov
push
iret
int
cmp
jne
lret
lret
cmpb
xor
sub
into
adc
cmp
arpl
xchg
inc
inc
adc
jp
xchg
xor
dec
lock
les
cwtl
jns
xchg
arpl
sbb
out
loopne
ds
push
sbb
mov
sub
in
leave
cwtl
rorl
mov
mov
sub
dec
jo
push
xor
xchg
push
mov
lods
inc
mov
xchg
dec
loope
xor
cld
push
mov
xchg
xchg
dec
cmp
inc
adc
lret
jle
mov
sub
jae
and
dec
xchg
clc
rclb
sbb
sbb
jb
jnp
mov
xchg
cld
stos
ss
loopne
xor
fwait
mov
push
ret
push
shll
in
jns
inc
inc
inc
in
std
pop
fldenv
leave
push
or
clc
roll
iret
lret
mov
stc
jne
jg
adc
sub
xchg
xor
loop
dec
mov
push
pop
pushf
mov
jg
enter
out
push
in
push
sbb
or
out
sub
jne
pusha
pop
jp
jo
sub
lahf
gs
mov
and
aas
fpatan
cmp
mov
call
push
out
adc
jno
scas
ret
jo
jle
mov
xchg
test
addb
mov
sub
lret
lahf
xchg
or
aad
fbld
jnp
insl
in
push
push
pushf
clc
jge
bound
jo
lods
sub
push
call
mov
in
out
int
sub
mov
add
insl
insb
cmpl
push
sbb
or
push
dec
pop
jb
ret
mov
mov
sbb
pop
call
aaa
pop
push
inc
mov
xorl
jae
pop
mov
lret
cmp
xchg
lea
lret
dec
stc
testl
fs
and
sahf
xchg
fs
ds
mov
cs
lret
sarl
pop
mov
fcomp
jge
jmp
fidivl
cs
inc
je
xchg
rcll
push
adc
mov
cmp
shlb
repz
xor
mov
aaa
dec
mov
dec
xchg
scas
rcrl
sar
jmp
in
pop
and
or
or
ret
in
push
fldt
imul
lcall
ficoml
imul
add
adc
or
insl
jno
ja
arpl
jp
inc
dec
imul
jbe
mov
mov
lret
roll
fwait
data16
xor
or
mov
fadds
mov
rcrl
inc
jle
push
inc
jle
aas
push
xor
add
mov
push
ljmp
push
fdivrs
cmp
jp
jg
cmpsl
popf
cli
and
das
push
popa
jns
push
jle
mov
in
in
fmuls
xor
dec
movsl
cmp
adc
hlt
cs
mov
pop
xchg
fcmovnbe
xchg
out
mov
lahf
repz
outsb
inc
icebp
sbb
or
ljmp
add
std
andb
pop
pop
data16
push
or
mov
mov
sub
leave
mov
and
frstor
jecxz
add
cwtl
xor
xchg
mov
cmp
push
and
pop
mov
adc
mov
mov
nop
inc
xchg
mov
icebp
pop
adc
scas
fisubs
popa
xchg
cmp
mov
js
mov
shl
ds
inc
call
cmp
bound
pop
inc
pop
mov
mov
cltd
push
inc
push
and
inc
or
pop
push
dec
lcall
into
ss
inc
in
fisubl
cmc
pop
xchg
jl
mov
outsl
mov
jne
ljmp
addr16
pop
cmp
and
lds
arpl
adc
mov
sbb
rol
lcall
test
loopne
std
fidivl
inc
mov
and
pop
jge
or
nop
lret
or
sub
sub
jae
aam
push
aam
adc
nopl
mov
fstp
cltd
test
sbb
adc
lea
int3
jmp
sbb
jp
ljmp
inc
imul
mov
sti
pop
pop
fadds
addl
xchg
mov
mov
push
data16
jmp
dec
push
mov
bound
dec
and
lcall
sahf
fmul
sub
push
push
push
pop
xchg
mov
filds
mov
scas
mov
roll
movsb
and
jg
adc
dec
jmp
dec
arpl
or
xchg
stos
out
fisubrl
or
ret
add
dec
test
fldcw
fsubr
mov
adc
adc
movaps
mov
movsl
mov
aam
xchg
xor
xor
or
loop
stos
lods
and
mov
incb
fs
jno
inc
outsb
nop
lcall
fdivrl
mov
mov
jne
out
mov
jbe
jg
cmp
push
fimuls
mov
arpl
and
testb
icebp
push
leave
decb
pop
mov
arpl
cwtl
fimull
jae
pop
mov
imulw
inc
mov
cmp
sahf
mov
mov
in
sahf
call
clc
cmp
and
sub
push
and
imulb
je
dec
shr
sbb
add
jno
pushl
movsl
in
pop
lahf
adc
sub
arpl
test
mov
jne
pop
lds
jle
loop
fiaddl
repz
inc
xor
leave
xor
sub
int
loopne
pop
push
aam
mov
es
add
pop
pusha
int
test
dec
xchg
jecxz
mov
fcmove
lahf
iret
roll
loop
push
rcl
push
and
outsb
or
mov
pusha
dec
push
pop
mov
pop
cmc
add
lock
or
jecxz
inc
adc
scas
push
xlat
subl
jp
mov
inc
pop
aam
loope,pt
lods
dec
cmp
push
lahf
and
data16
and
pop
inc
in
xchg
xchg
cmp
adc
rcl
int
rolb
pop
cmp
roll
adc
mov
pop
leave
in
sti
xor
cmp
or
dec
fidivs
push
out
dec
add
dec
mov
mov
lock
fstl
popf
xor
es
xchg
cmp
sahf
dec
ficomps
jae
insl
mov
leave
xor
mov
pop
sbb
dec
sub
loope
sub
mov
or
pop
jbe
ljmp
mov
mov
push
shrb
test
dec
insb
xor
cmp
enter
jnp
loopne
pop
pusha
cs
xchg
andl
lret
sub
jge
aad
enter
cs
les
fdivrp
push
rclb
push
jle
insb
movsl
mov
scas
push
andb
mov
sub
les
clc
pop
fld
std
fsub
cmp
add
jge
gs
jl
out
cs
push
mov
ja
divl
pop
sbb
repz
xchg
scas
dec
or
scas
pop
mov
lret
xor
cmp
std
dec
test
sub
and
gs
cmp
mov
es
lahf
cmp
ja
or
mov
mov
inc
repz
mov
add
fidivrl
pusha
add
inc
lret
cmp
outsl
lods
xor
pop
arpl
push
clc
pop
dec
inc
jno
cmc
cmp
dec
sub
repz
and
cltd
gs
in
fidivl
stos
push
and
test
lock
aas
xchg
xchg
cmp
shlb
leave
leave
psubq
add
push
sahf
or
inc
push
stos
in
movsb
incb
test
adc
orl
sub
mov
push
into
lcall
cmp
xor
clc
sbb
inc
pop
or
mov
rol
xchg
mov
mov
push
enter
mov
fst
adc
test
jge
pop
push
das
mov
inc
push
and
lods
clc
inc
xchg
jle
ret
lret
and
scas
jbe
subl
xchg
mov
mov
fnstsw
xchg
xorb
fwait
xchg
push
cmpsl
out
mov
cld
cmpl
das
xlat
ret
xchg
js
inc
cmpsl
sbb
push
inc
push
fdivrl
xor
mov
clc
and
xchg
shrb
in
push
sub
mov
sbb
clc
pop
or
mov
fadds
adc
adc
test
xor
xchg
nop
jns
fidivrs
das
ljmp
add
sub
xor
shl
xor
pushf
mov
xor
stc
mov
push
fcompl
in
in
sub
mov
addb
or
xchg
mov
and
add
adc
dec
ljmp
sarl
mov
fsubs
hlt
push
push
or
pop
pop
mov
pop
fdivrl
push
imul
lods
cmp
or
xor
xchg
dec
inc
fcompl
test
aaa
out
inc
test
push
sbb
pop
mov
sti
test
test
xlat
xor
cmpsl
xchg
divb
shlb
cmc
inc
movsl
idivl
mov
fcomip
sub
shlb
ret
push
aaa
jo
sub
out
stos
or
jae
push
xor
jo
adc
sub
push
inc
add
sub
stos
les
scas
push
mov
push
punpcklwd
fs
fbld
adc
enter
loopne
jbe
call
jge
shr
call
decl
pop
out
push
into
push
movsb
test
fidivl
push
addr16
pusha
xchg
aam
xor
mov
shlb
push
ds
adc
outsl
jnp
sbb
pop
aas
jmp
fistl
mov
scas
adc
in
vmwrite
ljmp
ret
dec
xchg
and
mov
scas
pop
in
sbb
xchg
mov
popf
pop
jns
sub
rorl
and
lret
mov
fdivrs
mov
pop
xchg
addr16
jl
out
cs
movsb
test
addr16
jnp
pop
clc
scas
mov
mov
pop
aam
mov
rorb
adc
rcrb
test
mov
push
jge
loope
lcall
mov
ret
dec
fs
je
and
push
mov
jne
xor
out
mov
sub
cmp
push
ds
gs
add
mov
xchg
pushf
cmp
xchg
xor
push
mov
sbb
mov
cmp
jb
lret
arpl
jg
mov
inc
repnz
popf
sub
lds
inc
add
insl
ss
scas
sub
mov
mov
inc
aas
pop
loope
dec
js
xchg
or
mov
or
cmc
je
mov
mov
jmp
mov
int3
sub
scas
sub
push
fs
mov
imul
mov
lods
jbe
negl
ret
mov
out
shl
popa
movsl
das
imul
mov
je
nop
and
stos
cs
loope
xchg
sbb
jecxz
lods
rolb
and
mov
int3
mov
lret
sbb
mov
imul
lods
loopne
ljmp
gs
mov
jno
add
sbb
gs
push
mov
cmp
dec
ficoms
xchg
jl
shrl
cld
mov
dec
pop
cmpsb
ljmp
and
dec
sub
lret
dec
mov
and
outsl
xchg
fsubrl
and
lods
sarb
or
inc
lret
mov
mov
push
insb
in
in
or
mov
jno
sub
das
jne
mov
jg
jmp
mov
sti
int
mov
outsl
jp
test
repz
ficomps
lock
push
nop
lret
xchg
dec
pop
int3
or
inc
pop
push
adc
ljmp
cmp
fdivl
rclb
mov
setge
xor
mov
pop
fdivrl
sahf
dec
scas
mov
and
mul
lcall
sarb
sub
and
xlat
xchg
or
cmp
inc
fadds
aas
and
xor
or
leave
out
leave
fstpl
mov
shll
jbe
rcrb
inc
and
fidivl
or
adc
es
xchg
movsb
adc
pusha
nop
popa
pop
jne
sub
cli
leave
int
cmp
push
jge
mov
mov
mov
pop
pusha
ret
mov
pop
xlat
sbb
jbe
push
adc
pop
push
dec
ret
rcrl
and
jmp
mov
cmpsl
jb
aas
pushf
cmp
and
sbb
lret
sbb
sbb
cmp
push
lds
test
enter
mov
jae
fs
inc
inc
scas
sbb
test
dec
lods
idivb
subb
movsl
lret
pushf
in
mov
call
into
cmp
shrb
das
pop
add
push
cmp
and
mov
movsl
icebp
mov
pusha
jg
inc
loopne
mov
mov
ret
mov
inc
or
lods
leave
xor
add
jae
mov
or
cltd
fxch
mulb
xchg
aad
lods
loop
xchg
pop
je
pusha
dec
outsl
xor
ja
lret
pop
movsb
jl
or
add
mov
cld
lahf
jecxz
nop
jp
dec
das
sti
mov
xor
mov
sbb
idivl
lea
mov
pop
roll
movsb
add
stos
inc
in
jno
loopne
in
mov
mov
cs
mov
jae
dec
xchg
ror
fnstenv
sbb
push
loop
cwtl
or
dec
add
dec
inc
mov
sbbb
adc
and
loopne
rorl
das
xchg
jmp
xchg
pop
ficoml
xlat
es
scas
mov
xor
ret
pop
push
or
idiv
jne
add
cmp
and
fiaddl
jbe
pop
xor
mov
ds
es
mov
inc
dec
btc
inc
inc
dec
jb
adc
jnp
nop
lds
addr16
loopne
mov
mov
adc
push
adc
mov
ret
pop
je
mov
stos
je
sbb
loopnew
and
dec
and
and
in
ds
jnp
jp
jns
les
jecxz
mov
add
.byte
les
aad
cmp
cld
xchg
or
cmp
lahf
rorb
aaa
jecxz
push
fs
pop
aad
sub
xchg
shl
adc
mov
sub
mov
popf
jmp
xor
inc
add
push
mov
xchg
jns
insl
in
and
jp
inc
pushf
pushf
out
je
mov
jl
inc
std
icebp
mov
add
sbb
pop
cmp
imul
into
ljmp
rol
sar
pushf
inc
or
or
mov
notl
iret
pop
mov
inc
mov
fwait
ds
in
mov
subb
push
aaa
fcmovnb
cmc
dec
push
fldl
clc
sbb
mov
push
cli
mov
sbb
out
xchg
call
sar
loop
shll
mov
mov
inc
inc
aad
inc
shlb
add
lods
add
adc
and
sbb
jl
xchg
jo
push
bound
sub
pop
je
ret
nop
fdivp
jecxz
jbe
dec
cmpb
mov
pusha
lahf
lret
std
xchg
ja
lcall
mov
xchg
xchg
cwtl
dec
outsb
sbb
mov
jo
lds
inc
sbb
or
popf
cwtl
es
mov
pop
icebp
jne
gs
sub
xchg
test
aam
pop
je
sbb
jns
add
out
fdivs
aam
fisttps
inc
xchg
iret
cmp
cmp
rcrl
call
jbe
cmp
lcall
xor
dec
or
push
fsubs
jecxz
loope
xchg
cld
or
adc
push
enter
ret
pop
in
jno
fsubs
xorb
xchg
test
inc
push
and
mov
pop
into
push
je
jbe
cwtl
and
fadd
fwait
xorb
adc
aas
mov
push
dec
xor
hlt
rcrl
vshufpd
or
or
xchg
mov
add
loop
orb
loopnew
xchg
add
lea
movsb
into
sahf
int
cmp
or
sub
je
jo
int
cli
mov
fiaddl
gs
jb
ds
xchg
pop
popa
cmpsl
push
mov
rcll
nop
ss
lcall
cmp
mov
mov
lods
shlb
lods
fsubl
pop
das
jae
jp
mov
fdivrs
pop
jle
jecxz
inc
outsl
pushf
mov
mov
or
cmpl
and
add
dec
cli
in
xor
ret
loope
testl
inc
test
movsl
fcompl
lds
mov
dec
mov
lahf
insb
xchg
pop
xchg
mov
shlb
mov
js
pop
scas
fisttps
xchg
stos
adc
or
into
cmc
mov
fildl
insb
gs
cmp
adc
sarl
sbb
mov
jp
pop
outsb
mov
cmp
xor
shlb
addr16
bound
jno
sti
in
cmpsl
push
xor
movsl
add
fs
mov
into
lahf
and
sub
sbb
jl
jae
loop
aad
call
jle
insl
pop
inc
fistpl
mov
sbb
pop
mov
sbb
sbb
aad
out
je
leave
clc
sbb
add
lcallw
mov
jns
ret
jns
adc
jl
cmpsb
inc
lret
dec
int3
outsl
dec
sub
pop
pop
cmpsl
mov
inc
out
lods
popa
rcl
push
stos
test
ficoms
and
subl
mov
mov
lods
sbb
scas
sub
mov
das
cld
mov
nop
out
push
xor
sub
rclb
scas
bnd
push
inc
push
lcall
repnz
arpl
mov
std
mov
jae
pop
daa
jecxz
dec
and
pminub
testl
in
pushf
cmc
adc
gs
iret
rcll
sub
xchg
mov
cmp
lret
cmc
and
fisubl
pop
fsubl
mov
arpl
jo
cmpsl
movsl
xor
pop
sub
pop
ret
fnstsw
cmp
movsb
sub
movlps
dec
insl
mov
in
cmp
mov
roll
aas
mov
sbb
or
lret
mov
int
and
out
outsl
and
mov
mov
pop
or
in
sbb
dec
scas
pop
in
js
sub
xor
sbb
movsl
idivl
adcb
mov
jmp
addr16
sbb
fistpll
negb
xor
xchg
inc
inc
in
xor
mov
push
icebp
mov
jmp
sarb
int3
pop
adc
mov
push
pusha
out
and
cmp
sub
pop
add
ror
ret
mov
adc
or
sbb
shlb
aas
mov
mov
pushf
bound
outsl
fnstsw
stos
incl
mov
mov
test
mov
ds
divl
stos
mov
fcoml
loop
fimull
popa
pop
fdivl
and
sbb
rolb
lret
xchg
cltd
leave
cmp
arpl
aaa
cmp
outsb
dec
add
xor
inc
int3
push
repz
clc
mov
dec
fcoml
pushf
les
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
mov
insl
push
mov
stos
add
.byte
push
mov
mov
test
je
mov
test
jne
xor
pop
ret
cmpb
jne
xor
cmp
sete
mov
pop
ret
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsbl
movsbl
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmpb
je
inc
cmpb
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmpl
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
add
add
dec
jne
test
je
movzbl
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmpl
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
movl
jmp
mov
add
mov
cmpl
jge
mov
add
movb
jmp
movl
movl
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmpl
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmpl
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmpl
jne
jmp
mov
call
mov
cmpl
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
movl
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
mov
add
mov
mov
cmpl
je
push
push
push
push
call
movl
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmpl
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmpl
jne
push
push
push
push
call
movl
movl
movl
mov
xor
mov
mov
lea
mov
xor
mov
imul
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmpl
je
cmpl
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
call
push
call
add
mov
cmpl
je
mov
call
mov
jmp
movl
mov
mov
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
call
pop
call
pop
mov
popa
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
arpl
daa
je
outsl
jo
outsb
and
imul
fs
and
or
jo
je
je
mov
cmpsl
pop
or
adc
inc
dec
pop
xor
dec
add
add
cmp
insb
loopne
cld
ficomps
scas
dec
mov
fstl
daa
pop
test
mov
jl
mov
mov
fbstp
and
hlt
fbstp
and
jmp
jmp
jmp
call
mov
jge
add
fyl2x
lods
adc
cmpsl
mov
mov
imul
dec
into
enter
je
mov
or
test
mov
pop
cmp
push
pop
jns
and
pop
sub
jle
cs
or
shll
lcall
sti
stos
out
in
lret
add
lea
dec
inc
xchg
dec
cmp
arpl
lret
ret
in
cmp
sub
push
lods
imul
in
mov
inc
xor
adc
test
jo
sbb
cmp
hlt
shll
mov
or
loopne
mov
xor
mov
rcrb
cmp
mov
aas
test
out
jp
shl
mov
outsb
lods
loope
inc
jb
mov
pop
cltd
rcl
out
in
sahf
loopne
sbb
lock
add
popl
cmp
call
pop
repz
in
add
sbb
inc
mov
pushl
sbb
jo
add
sti
and
and
cmp
cmp
inc
iret
out
dec
or
mov
mov
cs
mov
scas
dec
les
aam
into
in
sub
aam
sub
add
inc
pop
fwait
jne
ds
insb
stc
mov
aaa
mov
mov
inc
movsl
cmc
rorl
jmp
pop
pop
add
mov
or
sbb
push
adc
lods
pop
dec
inc
sahf
es
rol
push
mov
mov
jp
je
fs
sub
daa
xchg
push
lret
stos
add
popf
xchg
push
loopne
je
out
jno
rcrl
xchg
mov
fwait
lcall
push
minps
sbb
mov
mov
lret
and
in
push
push
dec
xlat
pop
fstpl
xor
popa
inc
mov
sbb
rcll
lods
das
std
pop
jno
jecxz
lret
mov
data16
jb
pop
ljmp
cmp
out
and
lods
imul
xor
fistpll
movsl
push
orl
enter
pmullw
mov
in
clc
insb
jne
mov
xchg
ds
and
jmp
mov
sbb
rolb
fistps
add
mov
popa
sti
cmp
xor
add
icebp
rclb
shr
sub
je
inc
addr16
inc
outsl
lds
shll
pop
sbb
pop
and
cmp
stos
xchg
lcall
pop
inc
mov
loop
cmc
dec
cmp
mov
or
cltd
push
adc
adc
imul
cmpsb
jp
add
stos
stc
adc
add
aad
aaa
xchg
push
cld
rclb
std
data16
and
pop
repz
pop
mov
stc
jmp
mov
cltd
test
pop
mov
add
ljmp
mov
fldl
movsl
loopne
xchg
cmpsl
pop
fisttpl
insl
cs
xchg
in
bound
and
xchg
in
sbb
push
sti
push
lock
test
in
inc
jmp
daa
rcrb
int
rol
pop
daa
xchg
movsl
or
jl
lcall
in
negl
and
mov
mov
jge
lods
push
pop
jecxz,pn
mov
sub
cmp
jo
lret
cmp
jno
xchg
push
test
pop
fnstsw
sbb
mov
mov
scas
lea
mov
gs
mov
das
push
addr16
xor
mov
or
sbb
lock
fidivs
adc
lret
dec
jno
jmp
in
and
cmp
sub
je
pop
jne
mov
jmp
mov
and
gs
adc
jp
cltd
dec
lods
lods
shrb
mulb
test
in
lods
inc
fnstcw
fwait
mov
movsl
push
int3
mov
in
out
push
mov
nop
ljmp
add
pusha
dec
inc
push
cmp
fstl
and
out
push
dec
jl
jmp
push
xchg
mov
jl
aam
inc
loop
xor
into
jbe
mov
xchg
cltd
jmp
cmp
sub
inc
loop
dec
in
push
das
xchg
adc
xlat
lret
mov
push
mov
popf
mov
add
das
push
pop
mov
push
cmc
jmp
cmc
imul
add
xchg
xor
mov
invd
test
xchg
pop
hlt
or
pop
dec
or
inc
cmc
movsl
fldenv
push
or
addb
mov
jp
cltd
inc
fs
jge
inc
sahf
jb
pop
xor
outsb
adc
insb
mov
repz
popf
dec
pop
mov
cmp
inc
jb
ds
dec
sub
cmp
in
push
and
out
popf
inc
insb
push
cld
jb,pn
dec
and
push
push
test
push
les
xchg
vmaxps
jecxz
shlb
jns
or
outsb
pop
mov
imul
add
cs
xchg
sub
mov
cs
cli
and
inc
fnsave
test
fcomps
scas
inc
push
addl
nop
push
arpl
mov
ss
add
shlb
dec
std
adcl
loop
jl
xchg
jnp
idivb
mov
xor
and
adc
add
mov
adc
outsb
popa
cmp
lds
insl
mov
mov
aas
arpl
cmp
lea
push
mov
xor
ret
daa
lret
mov
vmulps
mov
daa
adc
in
lea
pop
mov
loop
lods
lret
shrl
push
repz
lea
push
test
sub
xchg
inc
data16
sub
int
sbb
xchg
js
nop
adc
jge
cmp
xor
out
or
mov
shl
xchg
xchg
xchg
push
xchg
adc
xlat
ret
sub
sub
movsl
es
sub
dec
clc
lea
mov
stc
push
ret
inc
std
sub
arpl
sbb
bound
xchg
mov
mov
cmp
push
adc
jb
cmpsl
scas
cmp
inc
xchg
push
js
mov
cmp
rcr
pop
add
ret
aaa
cmp
pop
inc
hlt
clc
add
mov
call
insl
and
push
fadd
push
inc
dec
sbb
adc
in
cmp
sub
jmp
push
outsl
mov
cmpsl
add
sarb
mov
in
and
mov
pop
sub
insl
lret
subb
mov
in
or
popa
add
mov
mov
or
scas
loopne
pop
xor
insb
out
cmp
jbe
xor
outsb
xchg
orl
inc
pop
pop
movsb
mov
outsb
sub
iret
insb
jnp
inc
xchg
js
mov
std
add
mov
mov
jb
pop
mov
pop
js
lcall
jae
pop
and
lret
lret
int
lea
insb
out
lret
adc
sbb
ja
mov
mov
outsl
faddp
ss
inc
jbe
imul
call
cmpsl
pop
push
into
outsl
imul
mov
inc
loopne
mov
pop
icebp
aaa
sbb
test
sub
or
dec
add
xorb
inc
shrb
rorl
test
push
sub
or
mov
pop
sub
jno
in
pop
add
inc
push
add
sahf
pop
addr16
hlt
popf
je
sahf
add
mov
inc
mov
xchg
in
dec
lret
int
imul
xchg
jg
pop
push
mov
add
mov
mov
mov
mov
mov
bound
repnz
fisubs
jae
dec
cmp
sbb
out
scas
dec
mov
out
loope
inc
lock
pop
leave
push
fstl
out
into
sahf
dec
push
fadds
cmp
cmc
jl
mov
push
das
mov
stc
repz
scas
hlt
loopne
or
adc
lcall
or
lock
imul
js
or
jg
mov
outsb
stc
dec
pop
incb
pop
aam
mov
mov
imull
in
pop
push
mov
rclb
ljmp
jp
cs
cmpsb
xor
addb
fsubr
mov
push
aas
daa
dec
dec
pop
subb
mov
iret
mov
nop
cmc
lret
xlat
imul
add
popa
jmp
ret
pop
cmp
stos
int3
imul
cs
cli
stos
and
cmpsl
sbb
out
rcl
ds
inc
shrb
dec
mov
pop
xor
inc
sbb
int3
cmp
aam
dec
imull
or
pop
jnp
imulb
dec
jae
mov
enter
cmp
fcoml
addr16
push
loope
cmpb
adc
das
and
pusha
test
jp
dec
mov
mov
xchg
add
adc
mov
dec
es
cltd
and
mov
or
pop
fdivp
sbb
dec
pushf
std
aam
cmp
test
loope
jne
inc
adc
mov
pop
test
sbb
jns
repnz
xor
shr
pushf
out
jl
lea
aas
jmp
xorl
fcmovu
cmp
xor
inc
sub
aaa
aas
mov
lock
movsb
add
xchg
cmp
mov
sub
mov
or
dec
xchg
pop
cmp
or
test
jnp
jmp
pop
dec
add
rcrb
add
lcall
add
sti
xlat
push
dec
xchg
jno
adc
xchg
pop
sti
add
rcrl
out
icebp
dec
jbe
inc
xor
xor
insl
or
pop
and
inc
pop
jne
and
lret
fcomps
icebp
shlb
rcr
test
fs
sub
jecxz
mov
mov
dec
je
imul
cmpl
in
repz
xchg
xchg
mov
mov
iret
adc
jecxz
sarl
scas
sub
loopne
out
je
push
pop
xorb
ret
inc
and
test
jns
cli
inc
jge
push
push
sahf
cmc
arpl
test
cmc
outsl
cmp
mov
aam
popf
notb
mov
jl
xchg
pextrw
xchg
daa
lock
mov
pusha
mov
mov
leave
adc
sbb
test
mov
ljmp
xor
jmp
ficoml
dec
cmp
pop
add
sbb
mov
mov
test
out
das
imul
add
lret
add
leave
mov
movsl
icebp
or
outsb
decb
mov
std
es
sbb
les
inc
fldl
popf
int3
pop
in
cmpsl
jle
mov
es
or
insb
clc
inc
rcrb
sbb
mov
xor
mov
inc
mov
repz
fbld
cmp
lret
test
lea
sub
cmc
sub
inc
subb
xchg
sub
cs
rcrb
repnz
stos
pushl
out
mov
xor
sbb
mov
cmp
inc
out
ror
mov
mov
cltd
jle
inc
jp,pn
pushf
aaa
in
mov
jl
stc
pop
mov
out
adc
xchg
pusha
add
lock
mov
sub
out
into
pop
movsb
loope
add
mov
pop
lods
int
inc
cld
pop
std
stc
jns
std
push
repz
sbb
fisubl
aad
popf
mov
pop
adc
add
sub
mov
int
inc
cmp
data16
repz
movsb
ja
xchg
pop
cmp
jge
cmpsb
add
and
int3
fs
roll
pop
hlt
ficompl
or
push
pop
sti
jle
lcall
adc
sbb
shll
mov
dec
push
fstpl
mov
mov
iret
push
xchg
inc
or
aaa
dec
dec
dec
repnz
add
or
ja
ret
adc
stos
lock
into
jno
stc
repz
leave
loope
stos
loop
jne
cmp
adc
and
popf
inc
adc
inc
xor
push
outsb
add
int3
inc
cmp
and
and
clc
rclb
or
in
add
out
leave
stc
mov
arpl
xor
sbb
call
scas
iret
sbb
into
xor
aaa
pop
mov
mov
inc
fidivl
mov
add
xchg
mov
fsubs
xchg
rorb
push
xchg
fninit
repz
xor
ss
call
adc
imul
mov
mov
sbbb
sbbb
scas
adc
fdivs
and
cmpsl
push
xor
or
mov
pop
cld
jo
bound
push
fisttpll
out
mov
xchg
imul
jle
cld
gs
idiv
cmpsb
push
scas
iret
test
cmp
int
mov
mov
xor
push
es
popa
or
inc
imul
add
inc
sti
mov
fsubrs
mov
roll
sarl
mov
imul
divb
outsl
dec
add
cld
sbb
push
mov
loop
hlt
jecxz
xchg
pop
push
out
inc
xchg
add
stc
jno
fsts
leave
pushf
jmp
std
or
nop
scas
or
mov
inc
jmp
sub
outsl
add
xchg
or
aad
xor
rcrl
jo
sbbb
icebp
lods
mov
push
in
shll
cltd
dec
aad
out
cmovge
mov
into
push
fsub
scas
sub
inc
mov
add
jne
xchg
sub
insl
aad
test
xchg
add
xchg
mov
ja
dec
lcall
adc
data16
and
dec
insl
test
pop
jbe
xor
sti
pop
hlt
into
test
lods
mov
cli
mov
jge
push
jne
out
ret
push
cmpl
ret
xchg
ret
ja
push
jge
sti
push
xchg
aas
add
lods
mov
outsl
jne
outsb
lods
icebp
mov
daa
jb
push
clc
and
pop
stc
adc
outsb
daa
in
inc
dec
mov
repz
sub
mov
push
push
scas
add
popa
fs
pop
xchg
cmp
xor
push
xlat
out
jo
or
das
dec
daa
sbbl
aam
push
clc
or
gs
loopne
sbb
and
aam
dec
inc
cmp
mov
sahf
jns
movsl
jb
setnp
pop
xor
lods
add
sbb
bound
enter
out
cmpsl
pop
add
jno
and
mov
push
mov
das
mov
into
imul
dec
dec
xchg
mov
out
scas
push
sti
mov
pop
mov
or
mov
in
fwait
daa
xor
test
repz
out
pop
test
lods
push
mov
loope
xor
mov
xor
sti
test
pop
adc
pop
push
mov
pop
inc
xchg
jnp
addr16
pop
call
jl
cli
fnstsw
in
repz
fidivs
pop
leave
cmpsb
xchg
outsl
mov
or
call
sbb
push
cld
inc
lret
pop
ds
fistps
jbe
pop
fimuls
outsl
mov
adc
jns
mov
popa
mov
mov
fnstsw
or
ljmp
out
mov
xlat
clc
sbb
cmp
stc
mov
insb
or
shl
sysexit
sahf
loope
inc
mov
adc
ror
cwtl
jp
mov
push
out
mov
mov
adc
lcall
push
xchg
jne
ror
sbb
test
dec
cmp
or
inc
or
jmp
cmpsb
jmp
ds
frstor
cld
sbb
jbe
and
xor
ljmp
outsb
dec
in
cmp
adc
mov
sbb
mov
jmp
sub
ljmp
stc
cmp
cwtl
pop
stos
je
or
xchg
cld
fldt
mov
push
or
fcmovnu
dec
push
pop
xor
xchg
stc
cld
nop
fdiv
push
pusha
inc
dec
pop
addr16
aas
or
aas
mov
push
and
push
mov
adc
mov
rolb
cmpsb
mov
push
sbb
cmpsl
xchg
inc
rorb
clc
xor
and
mov
mov
push
sbb
idivb
cmp
and
inc
icebp
mov
adc
or
xor
cmp
dec
adcl
cmp
jg
out
mov
adc
mov
adc
xlat
xor
gs
add
sub
ficoms
sbb
mov
mov
or
ret
cmp
enter
and
add
xchg
inc
in
sub
cmp
loope
push
jno
cli
push
daa
cmc
icebp
sub
ret
jns
ja
loop
dec
movsb
push
enter
or
sub
in
gs
fmul
loope
aaa
sbb
inc
mov
scas
adc
xorb
pause
cld
cmp
mov
stos
shr
idivb
loop
pop
dec
fwait
inc
adc
test
xor
cmpsl
sarl
stos
add
xchg
repz
shrb
or
cs
or
push
aam
ljmp
in
sbbl
dec
inc
out
and
iret
jne
dec
mov
leave
cmc
xor
pop
mov
rorb
lods
pop
insb
inc
inc
outsl
in
sub
leave
pop
ds
xchg
dec
movsb
into
popa
push
sub
pop
push
outsb
dec
jne
cmp
xorl
push
cltd
mov
js
mov
xchg
enter
movsb
fldcw
and
lret
pop
pusha
and
add
mov
adc
mov
push
repnz
aam
push
les
push
add
pop
push
idivl
daa
or
int
pop
mov
mov
incl
imul
aam
xor
add
popa
std
or
jge,pt
icebp
xchg
movl
data16
mov
and
hlt
sbb
push
sbb
mov
adc
sti
lcall
mov
cwtl
lret
add
jge
lret
cld
out
xchg
sbb
retw
test
pop
nop
lret
inc
adc
adc
xchg
test
and
fsincos
mov
ret
das
mov
popa
lods
cltd
jae
dec
leave
sub
inc
or
out
roll
ret
fidivrl
xchg
popa
sub
cwtl
mov
jmp
mov
adc
push
aaa
xor
mov
in
mov
mov
in
jnp
and
jo
mov
xchg
lret
sbb
pop
adcl
and
addl
lret
mov
xorb
or
mov
sub
scas
inc
xchg
outsb
decb
pop
xor
ja
das
mov
adc
mov
or
rcll
jb
paddq
xchg
inc
popf
push
mov
adc
dec
dec
mov
loopne
inc
mov
sub
sub
sbb
add
insb
outsb
jns
xor
sub
xor
pushf
xchg
xchg
mov
and
lret
adc
cmp
enter
sub
les
les
outsb
cltd
jg
fcmovb
imul
cmp
test
sbb
or
xchg
les
sub
movsl
push
or
push
lods
addr16
dec
sti
imul
imul
sbb
sbbb
sub
mov
stos
dec
dec
push
or
scas
add
push
jl
pop
bound
xor
ror
aam
push
jp
xor
daa
cmovns
shl
pop
pop
mov
leave
in
mov
test
dec
inc
mov
lods
cmc
filds
addl
lds
inc
xor
fsubrl
cmp
fidivrl
loop
and
fs
mov
cmp
out
scas
jnp
popf
xchg
adc
push
test
sub
aas
sub
xorb
mov
or
xchg
push
subb
pop
jae
or
push
outsb
xchg
adc
mov
fsubs
lret
sub
in
sbb
mov
push
orb
loope
pop
add
and
xor
ret
lret
inc
and
dec
fcomip
xlat
repz
in
pop
add
jae
popa
dec
lcall
add
pop
mov
shr
push
testb
xlat
mov
xor
sub
aam
xchg
cmp
outsb
outsl
jp
or
mov
cmpsl
enter
push
pusha
cmp
inc
test
daa
insb
leave
std
jne
ljmp
lcall
shl
push
dec
std
mov
icebp
pop
mov
pop
or
notl
dec
inc
int
adc
out
mov
inc
aas
cltd
aaa
mov
or
test
adc
add
roll
xlat
jge
dec
mov
imul
insl
pop
pusha
add
mov
inc
and
xchg
fyl2x
jne
dec
mov
push
bound
repnz
push
pop
jg
pop
mov
xor
xor
cmc
stos
xor
cld
into
shrb
subl
subb
xchg
lahf
ljmp
cmp
arpl
fsubr
push
lcall
pop
push
xchg
cmpsl
imul
loop
daa
div
push
mov
pushl
pop
mov
sub
pop
pop
gs
cmp
cmpsl
push
add
mov
std
mov
int3
shrl
add
cmpsl
inc
enter
push
jne
mov
mov
mov
cmpsl
fistpl
in
or
push
dec
in
xor
das
inc
add
sahf
mov
mov
or
xchg
sbb
int
into
scas
daa
xchg
sbb
shrl
push
jecxz
sbb
sarl
inc
mov
int3
stos
sbb
pop
lods
ficoml
or
pop
imul
and
movsl
and
jmp
repz
int3
lret
or
mov
sbb
mov
add
pop
xchg
mov
testb
sbb
seto
out
mov
push
in
push
cmp
imul
cmpsb
icebp
mov
dec
lcall
dec
test
iret
dec
fwait
mov
in
jmp
xchg
orb
inc
call
cli
jae
roll
mov
cmp
loopne
int
mov
push
add
xchg
shlb
push
xchg
or
jno
leave
in
nop
xor
ret
xor
orl
je
test
pushf
outsb
fmuls
dec
fnstsw
sbb
or
addr16
sub
ljmp
mov
or
jecxz
cmp
jno
mov
fimull
loope
inc
mov
mov
pop
xor
gs
fnsave
es
fdivrl
adc
insb
and
inc
sub
decl
adc
sub
mov
jno
jp
mov
dec
lock
pop
xchg
idivl
cmpsb
std
test
scas
jecxz
loope
add
or
or
fsubs
mov
in
sub
mov
scas
fdivrs
mov
dec
mov
pop
ja
ss
sbb
cli
add
dec
mov
xchg
in
push
jmp
repz
mov
lock
scas
sbb
mov
cmpsl
jns
mov
popf
dec
jg
pop
jge
test
std
inc
or
pop
pushf
add
push
bound
xchg
fbld
jne
or
push
add
out
pop
xor
add
xchg
repz
mov
push
pushf
incb
int
pop
sbb
scas
cli
stos
rcrb
repnz
jle
xlat
stc
test
mov
sbb
xchg
push
rolb
sbb
and
adc
popf
mov
sbb
pop
ret
xchg
imull
out
adc
mov
sub
dec
push
push
out
xor
xor
pusha
dec
xchg
cmp
adc
pop
or
out
sbb
dec
jo
in
xchg
sbb
cwtl
inc
jle
xchg
jno
aam
mov
pop
mov
add
std
push
pop
xor
jnp
lods
mov
push
cmp
pop
add
adc
out
inc
pop
lret
gs
add
call
movsb
movl
fcoml
mov
jo
bound
xlat
in
sbb
insl
lret
dec
sub
inc
adc
outsb
cli
mov
xor
hlt
jle
jmp
sub
add
jne
mov
popf
mov
scas
sar
or
lcall
gs
stc
lahf
xor
leave
push
outsl
into
pop
or
inc
aas
cli
push
flds
dec
fisubrl
in
fsubrs
mov
daa
dec
leave
scas
aam
scas
outsl
pusha
bound
test
loopne
mov
pushf
xor
out
aas
mov
sbb
xchg
sub
jecxz
mov
loop
adc
push
mov
in
add
test
rcr
jmp
hlt
and
mov
lods
inc
cmp
mov
rolb
push
fsubr
movsb
stos
cld
jns
xor
addr16
add
dec
or
fnsave
xchg
es
aaa
mov
push
dec
leave
xchg
stos
mov
clc
push
cmp
mov
xlat
mov
enter
bound
xchg
loop
mov
mov
jb
movsl
sbb
push
movaps
pusha
faddp
add
das
imul
shrb
fists
mov
xchg
xlat
inc
jbe
xchg
xchg
icebp
cmpsl
rorl
arpl
daa
xor
in
xorb
sahf
fldenv
xor
push
mov
mov
cmpb
in
ljmp
mov
stc
push
inc
jnp
jnp
push
jae
pushf
fwait
dec
test
jno
and
inc
and
js
or
jecxz
mov
add
inc
arpl
adc
inc
leave
cmc
add
mov
jno
pop
cs
arpl
outsl
mov
sub
jo
movsl
imul
ss
pop
or
and
push
ljmp
mov
pop
je
jnp
fldlg2
push
insb
movsb
add
push
lds
push
mov
into
dec
mov
and
sub
idivb
pushf
ds
inc
dec
hlt
je
pop
outsl
or
and
mov
pop
frstpm(287
cmp
insb
stos
shll
insl
scas
xchg
dec
and
jg
adc
and
cwtl
cltd
shll
clc
cmp
inc
mov
sub
sub
cmp
insl
adc
pushf
adc
ja
push
xchg
mov
scas
rolb
jg
in
dec
fabs
or
jl,pt
outsb
outsb
jo
dec
int3
jns
push
mov
inc
adc
repz
xchg
popf
add
mov
mov
aam
jno
pop
pop
ss
fcoms
dec
stc
fisubrs
or
stc
into
cli
push
mov
fwait
loopne
cld
pop
sahf
aad
inc
pop
outsb
sbb
lahf
sbb
mov
sub
testl
adc
lea
xor
push
je
out
in
pop
mov
mov
frstor
lret
cmc
push
pushf
test
out
jecxz
in
adc
bound
leave
mov
pop
push
insl
sub
cwtl
into
add
cwtl
cmp
xor
xchg
fdivl
dec
mov
dec
mov
and
pushf
mov
shl
adc
mov
outsl
loopne
icebp
sub
sbbb
add
and
repnz
addr16
enter
cmp
sub
dec
pop
je
pop
sarb
or
aaa
jo
dec
int3
in
clc
push
sahf
inc
pop
inc
leave
scas
mov
fs
sbb
push
mulb
adc
mov
aad
shrl
pop
pop
aad
xchg
pop
ret
rorb
ret
das
test
mov
or
repnz
pop
addb
mov
cmp
decb
pop
or
stos
stos
cli
out
pop
push
cltd
lahf
and
xor
sbb
adc
inc
mov
xorl
and
cli
xlat
js
jge
mov
aam
and
lods
xchg
cs
imulb
mov
loop
pop
mov
ds
sub
add
mov
stc
imul
daa
add
xchg
fwait
add
insb
adc
cmp
inc
leave
mov
fwait
pushf
inc
pop
mov
mov
loop
lahf
add
fstl
mov
sub
into
xor
sub
loopne
ljmp
and
repz
xchg
adc
jnp
loope
sub
xchg
jo
pop
or
lret
out
mov
or
adc
or
mov
pop
subb
jmp
or
xor
pop
mov
mov
enter
sarl
mov
sub
adc
loopne
imulb
cwtl
add
jo
sub
xor
lret
outsb
ds
adcb
adc
xchg
mov
mov
stc
jo
jg
jp
stos
or
movsb
jne
inc
sbb
out
lods
bound
mov
popa
addr16
or
or
jb
call
mov
adc
insb
test
popf
ss
js
xor
adc
test
mov
orb
push
mov
cs
rcll
subl
and
fcmovu
dec
cld
pop
ficompl
sbb
popa
sahf
pusha
mov
jmp
imul
dec
pop
and
or
aas
rcll
pushf
mov
sub
push
nop
push
loope
jne
outsl
cmp
mov
inc
push
fsubrs
out
mov
inc
and
sahf
lret
sub
mov
pop
mov
roll
scas
lahf
mov
nop
ss
ljmp
lret
mov
loope
push
js
jae
aad
nop
adcb
lret
movzwl
cli
push
push
dec
test
push
xchg
lea
or
inc
fbstp
push
in
cli
nop
lret
faddl
jno
in
pop
xor
sbb
cmpsl
cmp
pop
pop
subb
pop
fmuls
jnp
out
fbstp
movsl
loop
adc
arpl
dec
jmp
fsubs
push
xor
lcall
test
lcall
mov
or
scas
test
bound
adc
and
push
jae
int3
subb
lods
cmpsl
pop
push
je
mov
push
mov
mov
push
aam
xchg
inc
ljmp
add
push
je
fwait
mov
fldenv
xchg
lock
dec
push
xchg
and
fisttps
mov
jl
int
push
stos
ret
cmc
or
icebp
sbb
mov
nop
xchg
lods
dec
xchg
lcall
ljmp
stos
inc
inc
out
xor
outsl
sar
das
hlt
cmp
fbld
lcall
in
add
scas
pop
iret
outsl
cmp
mov
dec
comiss
mov
mov
push
xor
push
cwtl
aad
push
pop
adc
pop
cmpsl
js
xor
jne
stos
int3
ret
adc
and
aas
mov
outsb
scas
xchg
cmp
mov
jp
movsl
adc
or
addb
fstl
cmp
arpl
lock
stos
cmp
fcoml
popa
xchg
and
jmp
adc
test
inc
leave
int
pop
cmp
cmc
and
insb
sbb
xchg
pop
mov
mov
popf
dec
cmc
xchg
add
mov
sub
xchg
aam
ret
fsubrl
jbe
adc
jmp
test
mov
sarl
adc
mov
bound
lock
repz
mov
cltd
jle
mov
mov
xchg
add
jno
xchg
or
mov
insl
aad
add
xchg
push
out
mov
fwait
sbb
mov
push
pop
inc
lods
movaps
add
into
punpckhdq
push
mov
add
adc
dec
cld
aam
and
sbb
int
mov
popa
add
test
loopne
ljmp
mov
int
jle
enter
cli
iret
jne
jecxz
xor
addr16
adc
dec
in
push
es
push
ss
inc
inc
inc
enter
in
aad
sti
insl
sbbl
mov
mov
ja
test
jp
add
push
xchg
adc
movsb
lret
or
add
mov
dec
add
mov
push
loop
fwait
pop
int3
add
out
pusha
add
push
loope
inc
mov
pop
and
sub
sub
sub
xchg
ja
and
sti
test
mov
out
mov
lea
jne
inc
cli
test
cmp
fidivrs
xchg
emms
jnp
xchg
jge
adc
clc
xchg
adc
jecxz
lret
push
fildl
cmp
leave
in
mov
push
sbb
push
sub
dec
nop
mov
push
scas
jnp
push
out
add
test
insl
sbb
lret
in
push
in
popa
jle
adc
adc
mov
add
lods
icebp
cmp
jmp
icebp
das
pop
or
sub
lock
sub
in
bound
push
sub
cmp
rorb
test
mov
scas
arpl
in
add
movsl
fistps
sbb
add
push
outsb
cmp
jp
les
cmp
sarb
test
jecxz
icebp
arpl
mov
mov
imul
popf
call
sbb
stos
shrb
push
sahf
ljmp
ss
inc
pop
cltd
test
imul
in
jge
dec
or
push
or
loope
loope
pop
call
in
push
push
ja
push
pop
repnz
dec
cld
add
mov
imul
push
imul
ja
sub
adc
call
xchg
movsl
rcr
movsl
fildl
movsb
cmpsb
lret
lcall
ret
adc
das
daa
jnp
jle
pushf
sub
enter
mov
arpl
imul
xor
xchg
cmpsb
push
push
mov
dec
xlat
subl
mov
daa
and
pop
lods
fistpl
insb
push
test
dec
rcrl
cmpl
mov
je
xchg
aad
xor
push
loopne
xor
dec
in
xchg
dec
sbb
jae
push
int
imul
arpl
fxch
mov
and
inc
or
jno
jne
mov
cmp
add
int3
fbstp
push
aas
xchg
aam
jne
inc
dec
xchg
outsb
mov
dec
dec
imul
cmp
in
lret
xchg
repnz
sarl
xchg
add
clc
movsl
mov
sub
xchg
mov
mov
mov
sub
ja
sub
sbbl
cmp
ret
push
jns
or
lcall
out
ljmp
mov
pop
ljmp
cmpsb
cmp
push
mov
pop
stos
mov
ds
in
sbb
daa
xor
mov
sub
mov
fimull
cltd
enter
push
jbe
xor
jl
lret
xor
fiadds
adc
push
ret
shrl
nop
fldenv
dec
and
fbld
adc
cmp
jo
sub
cli
outsl
les
adc
inc
push
jl
cmp
dec
and
int
sbbl
cmc
outsl
pop
in
ret
adc
es
push
std
outsb
je
movsl
xacquire
ret
xchg
jns
inc
jle
xchg
mov
sti
jno
jmp
out
mov
adc
xor
mov
jnp
pushf
aam
sbb
xor
movsl
lds
jo
scas
inc
in
or
prefetch
or
orl
ret
rcr
inc
lea
jns
xchg
pop
push
pop
in
push
mov
jecxz
push
js
push
cmp
lds
adc
pop
aad
push
jo
adc
out
jecxz
call
ret
lock
shll
repnz
mov
das
fadd
and
mov
sbbl
dec
das
fcoml
inc
adc
push
jb
inc
sub
imul
lds
std
lods
je
ss
ss
imul
xor
dec
sub
mov
sub
adc
call
sbb
adcl
push
pushf
xor
push
in
insb
push
rclb
fdivrl
loopne
add
arpl
cmp
mov
or
push
jae
xor
out
jmp
mov
xor
pushf
aad
pextrw
js
aad
xchg
imul
call
fdivr
push
add
fst
xchg
mov
jo
mov
or
mov
in
lea
mov
and
fsubl
shrb
rolb
js
xor
mov
and
inc
sub
sbb
add
ss
insl
mov
je
dec
and
into
inc
add
sbb
and
push
repz
sbbb
inc
scas
sub
data16
adc
int3
mov
outsl
inc
jecxz
jbe
pop
in
fcmovnb
or
ret
int
pop
xor
scas
cmp
fsubl
pushf
sbb
inc
add
jle
jns
cmp
inc
add
lds
loopne
repnz
sbb
outsl
pop
sub
mov
mov
sub
sub
cmp
out
mov
adc
and
jl
push
mov
lcall
xchg
xor
adc
inc
lret
dec
adc
pop
dec
fadds
fwait
jb
push
cli
popa
xlat
insb
pop
lret
inc
jg
test
pop
shll
insl
jbe
fisubs
ss
push
push
hlt
cmp
inc
mov
pop
aas
add
std
mov
push
mov
cwtl
cmp
inc
into
push
into
ja
push
sbb
mov
int3
or
push
jg
es
in
xchg
inc
push
xchg
into
lock
ja
or
pushf
pop
lcall
mov
lahf
adc
add
jle
push
jg
or
sub
pushf
iret
cmc
push
fdivs
pop
jne
or
gs
jno
jmp
outsb
leave
mov
lret
fwait
push
scas
jo
sub
inc
dec
push
pop
xor
test
pushl
lock
xlat
cmpl
les
push
push
dec
pop
xor
jle
pop
jns
lods
lods
fsubl
leave
jne
mov
ja
pop
push
and
sub
sbb
jnp
ret
sbb
sub
outsb
and
imul
jl
jmp
xor
adc
or
xor
jbe
mov
fisubl
xchg
or
inc
cmc
add
inc
imul
jmp
decb
sbb
loop
push
ret
adc
addr16
into
test
std
je
enter
ljmp
push
sahf
push
mov
iret
xor
fs
xchg
stc
and
xor
inc
mov
mov
jbe
int3
jg
pop
out
test
popf
loope
mov
rorb
call
and
sarl
pop
jno
fwait
aad
idiv
jle
fimuls
xchg
call
inc
cmp
popa
push
sub
jge
stos
les
xchg
stos
add
dec
adc
push
inc
pop
pop
inc
fcmovb
ret
int3
shr
jg
xorb
sub
sbb
fsubrl
das
hlt
dec
lock
into
sbb
scas
sub
xor
xchg
cmp
sub
mov
lahf
gs
cmp
fisubs
cltd
fisubl
add
hlt
sub
inc
shrb
lds
jmp
sbb
icebp
clc
popf
inc
inc
std
mov
mov
test
and
mov
imul
dec
mov
dec
cmp
mov
xor
mov
ret
push
sub
daa
mov
sar
loopne
outsb
inc
push
adc
pop
clc
pop
add
cmc
int3
fidivrl
outsb
adc
xor
clc
jp
or
push
pop
xchg
and
add
mov
ljmp
push
pop
inc
and
xchg
daa
add
lods
pop
inc
loope
or
lea
sti
fwait
addb
mov
imul
rcr
pop
aad
and
mov
inc
lods
fstps
nop
sbbl
push
sub
inc
ret
dec
dec
lret
aaa
dec
aam
sarl
out
pop
adc
inc
ret
sbb
in
es
xlat
jmp
mov
push
cmp
adc
pop
cmpsb
and
je
inc
das
sub
xor
imul
cwtl
cmp
mov
rcrb
rclb
loope
pop
inc
iret
lock
sbb
daa
fsub
scas
xor
push
repnz
push
adc
arpl
pop
insl
das
in
fucom
js
sub
aas
in
inc
sbb
mov
adc
sbb
hlt
jmp
mov
push
jno
mov
mov
scas
jo
out
mov
lods
mov
sub
pop
mov
push
insb
and
sbb
sbb
fs
sub
push
push
dec
hlt
push
imul
mov
push
jg
xorl
sub
cld
sub
cmp
cmp
lcall
mov
mov
cwtl
orl
test
adc
and
mulb
movsl
adcl
jl
lret
cmp
pop
ds
orb
add
mov
cmc
imul
loop
push
and
movsb
sub
or
shr
std
lret
imul
and
imul
push
cwtl
jmp
inc
int3
jmp
add
call
xlat
in
ja
jmp
mov
addr16
int
aas
or
adc
or
test
icebp
int
fbld
jns
pop
pop
vorps
push
stos
icebp
xchg
jno
jecxz
aad
cwtl
xchg
daa
pushf
mov
add
inc
psubsb
ds
scas
sub
cld
test
rcrl
out
clc
imul
xor
jmp
and
mov
inc
dec
call
loope
sub
mov
push
test
repz
aaa
mov
iret
loope
js
adcl
jmp
outsl
mov
out
push
xchg
popf
pop
aaa
inc
imul
leave
mov
cmp
movsl
imul
inc
jae
fiadds
cmp
jmp
pop
sub
pushf
jne
or
jg
nop
pop
outsl
add
adc
ficoms
loop
dec
inc
xor
rorb
es
sbb
or
push
and
cmp
fisubrl
xchg
xchg
sbb
aaa
loop
es
cltd
adc
addr16
enter
mov
or
cmc
inc
cmpsb
aaa
mov
movsl
mov
jmp
pop
bound
iret
sub
mov
pop
xchg
push
imul
mov
jne
mov
mov
pushf
or
fisttpll
xchg
cmp
nop
shl
jmp
leave
pop
arpl
iret
inc
js
mov
pop
push
mov
popf
or
jb
and
je
xor
ficoml
jno
sbb
push
and
jge
scas
aam
sub
test
xchg
inc
xchg
xor
lret
mov
or
and
sub
lock
cs
fsubs
mov
or
sbb
mov
xlat
cmp
mov
push
sub
mov
sbb
inc
xor
jbe
sahf
std
add
inc
lret
add
jae
lea
xorl
out
sbb
ljmp
and
sbb
mov
and
test
out
pop
ret
daa
sub
adc
mov
hlt
mov
lcall
jl
sub
fwait
xor
enter
testl
fdivs
sbb
loop
test
jl
jne
xchg
nop
xor
arpl
insb
inc
call
into
loopne
or
push
daa
in
outsl
xor
jge
mov
cld
add
mov
faddl
push
add
test
js
add
inc
pusha
sbb
sahf
xchg
ret
xchg
add
mov
pop
clc
xchg
jb
fnstenv
nop
js
ja
sbb
cwtl
leave
pop
nop
mov
scas
mov
xorl
scas
in
dec
pop
and
adc
aaa
jb
js
das
lret
aas
rcl
popf
movb
shll
push
xchg
popf
cli
xor
jne,pt
mov
jns
sub
loop
dec
fsts
shrb
stc
in
adc
and
dec
cli
push
xchg
sbb
jmp
int3
sbb
add
xor
das
and
test
mov
sub
jge
in
ret
xchg
sub
cltd
pushf
xchg
nop
lcall
hlt
mov
ror
xor
pushf
loope
jae
in
push
test
test
gs
loopne
testl
adc
fxch
in
scas
xchg
loopne
pusha
xchg
push
das
jg
hlt
cli
xchg
adc
mov
out
out
iret
mov
es
push
jb
pop
sbb
insb
idiv
fnstcw
rcrl
add
sub
lahf
jge
fimull
mov
or
pop
movsl
or
scas
nop
mov
or
cmp
xor
out
rorl
sub
dec
fisttpll
jle
sbbl
rcll
int
lahf
or
inc
icebp
call
pushf
jns
lret
cltd
imul
mov
popa
lea
fbld
lahf
pop
popa
push
adc
popa
add
push
or
mov
xchg
pop
fcomi
pusha
cmp
xor
mov
outsb
ja
outsb
sbb
lea
sahf
fstps
cmp
loop
cmp
mov
arpl
imul
push
mov
xchg
into
jnp
dec
ja
pop
xchg
addr16
jae
ret
push
jnp
pop
pop
loope
iret
lock
xchg
outsl
ss
lea
lods
sbb
push
jle
sbb
inc
dec
cmp
sbb
js
and
mov
imul
shll
adc
stos
stos
lret
adc
lds
cmpsb
pop
mov
pop
mov
testb
adc
and
cmp
fucomp
in
cmp
lret
inc
inc
push
ret
data16
js
cmpsb
rorl
orb
mov
mov
int3
shlb
icebp
repz
std
push
inc
jle
repnz
push
leave
push
and
push
xchg
frstor
push
cltd
inc
dec
inc
xor
dec
syscall
jns
push
cmpsb
pop
aas
xchg
repz
pop
and
stos
pop
jecxz
test
or
int3
and
pushf
push
xchg
mov
mov
imul
les
loope
and
push
lahf
sub
rorl
rclb
imul
mov
mov
mov
sbb
into
lret
or
or
in
js
loopne
inc
push
dec
jmp
pop
fs
or
push
mov
push
sub
es
mov
dec
add
ds
bnd
leave
jmp
rcrl
subb
not
lahf
inc
xor
mov
mov
jns
popf
imul
or
xlat
aaa
adc
outsl
jge
push
repz
fs
xor
popf
xchg
dec
divb
push
add
je
and
and
pusha
pop
sahf
sbb
stc
wrmsr
test
test
stc
divl
dec
mov
movsb
push
cmpsl
rorl
cmp
stos
in
scas
push
or
pop
xor
movsl
sub
jmp
mov
push
out
push
outsl
jmp
mov
push
lret
sbb
mov
mov
push
test
push
or
insl
aad
inc
cs
shll
popf
fwait
xor
sub
in
frstor
push
std
repnz
cmp
movsb
mov
or
xorl
sub
add
mov
or
divl
clc
jmp
cmp
dec
or
pop
iret
inc
sahf
push
lods
pop
add
push
cmp
stos
stos
or
adc
or
xchg
pop
inc
movsb
filds
lds
iret
repz
repnz
lret
fs
inc
repz
ret
repnz
es
into
mov
adc
dec
jmp
mov
cli
add
jl
in
cwtl
xor
push
cld
or
dec
movsb
xchg
jnp
gs
gs
sub
js
sbb
inc
mov
mov
add
int
adc
lods
aaa
out
fimuls
or
jl
push
iret
cmp
fcomps
test
sub
dec
popa
pop
fstpl
push
mov
outsb
pop
sub
scas
add
repnz
xor
sbb
push
loop
call
shl
adc
adc
sarl
cmp
addr16
sbb
int
in
in
cmc
lret
dec
dec
outsb
scas
push
xchg
dec
dec
mull
pop
inc
ss
shl
xchg
inc
aas
cmpsb
jnp
add
inc
lods
mov
cmpsb
movsb
pop
int
outsb
fistpl
dec
xchg
and
fcmovu
ret
or
dec
scas
stos
dec
cltd
cmp
mov
sbb
mov
fisubrl
cltd
pop
aad
into
xchg
mov
cltd
push
mov
enter
inc
call
mov
test
and
mov
icebp
insb
in
xorl
stos
in
jns
loop
fildll
add
nop
je
or
jmp
jo
jmp
jo
jge
sarb
fcomps
negb
and
fsubrl
mov
je
xchg
cld
fwait
push
adc
add
data16
lret
push
pop
into
cmpl
jno
and
dec
xor
add
mov
push
sub
loop
subb
xchg
mov
cmp
inc
cmpsl
xlat
lea
push
fidivrs
repnz
dec
int
xchg
icebp
or
inc
movsb
repnz
dec
scas
mov
out
fdivl
pop
addr16
add
into
insl
idiv
daa
or
scas
iret
or
adc
inc
call
sub
mov
bound
mov
xchg
inc
push
jg
popa
jae
lods
ss
popa
add
call
adc
xor
cmp
mov
nop
int
cmpsl
cmp
fsubr
mov
inc
mov
and
mov
mov
ret
jne
add
aaa
xchg
testb
mov
in
fisttpl
nop
mov
cltd
cld
jmp
stos
mov
jle
xlat
inc
icebp
push
call
pop
enter
rclb
or
cwtl
mov
mov
or
add
out
and
repnz
imul
push
jle
xor
add
fnstcw
je
imul
lods
xchg
dec
xor
clc
loopne
pop
je
xor
mov
xlat
cmp
jg
adc
mov
in
je
pop
inc
out
faddl
fucom
call
addr16
mov
sub
dec
sahf
xor
xor
lcall
repz
xchg
cmc
lret
test
adc
pushf
sbb
lock
mov
mov
out
inc
xorps
adc
sbb
add
mov
fwait
dec
jne
stc
roll
xchg
dec
sub
cmpb
adc
push
pop
sbb
jae
sub
mov
iret
push
bound
jecxz
imul
and
leave
out
xor
mov
outsb
into
loope
or
sbb
lret
mov
xor
int3
push
push
pop
push
or
dec
mov
or
pop
in
xchg
rcll
sub
pop
addps
mov
jne
mov
cmp
rclb
pop
inc
or
ds
cltd
jmp
push
jae
mov
test
push
cwtl
xchg
xchg
cltd
ror
cli
pushf
jno
add
xchg
rorb
shlb
mov
xor
push
mov
push
mov
push
sti
icebp
inc
and
jg
loop
ds
dec
iret
lcall
push
popf
fs
fdivrs
leave
js
xchg
test
ljmp
ja
inc
xlat
mov
and
out
xchg
ret
stos
jnp
jbe
cmp
lret
sub
or
mov
mov
xchg
push
loope
ret
mov
cmp
dec
cltd
fs
repnz
imul
inc
mov
mov
sbb
inc
or
dec
mov
loopne
push
mov
mov
lcall
popa
xchg
cli
mov
insb
jae
push
jp
dec
fwait
call
mov
sbb
lret
imul
ja
dec
out
fwait
in
dec
gs
or
mov
mov
jno
loop
pop
push
aaa
pusha
jb
mov
xchg
dec
out
shr
pushf
xchg
push
xchg
add
fstps
push
cmp
in
xchg
ret
js
sub
ljmp
cwtl
mov
push
addl
out
inc
mov
fistl
add
jmp
iret
xor
andl
repnz
jbe
stos
jge
mov
mov
mov
mov
xchg
sbb
cld
xchg
in
and
or
rclb
icebp
push
loope
push
mov
cmp
mov
push
inc
xlat
dec
es
push
pop
inc
add
pop
repz
jge
sbb
sub
pop
mov
mov
je
push
test
xor
and
add
sub
mov
push
cmpl
nop
and
xchg
xor
insl
xchg
adc
hlt
fs
not
pop
jo
cmp
aaa
sub
aaa
shr
fs
popf
pusha
push
cld
add
or
ja
pop
cmp
push
xchg
jle
arpl
xchg
push
lcall
scas
int3
rolb
into
in
jecxz
sub
cld
lods
rcl
xchg
cld
ds
sbb
jp
idiv
xchg
and
mov
cmp
pop
pop
testb
cmpb
movsl
mov
jno
cmp
leave
lret
shll
mov
arpl
dec
xor
dec
data16
cmp
and
inc
or
inc
mov
jbe
insl
or
xor
inc
data16
shl
or
movsb
pusha
mov
shl
push
mov
push
pop
ret
push
popa
ljmp
mov
rolb
fildl
mov
sar
xchg
fsubl
jle
sbbb
cmp
cmp
sbb
ja
sbb
push
dec
xchg
push
das
scas
outsb
mov
cmp
test
lcall
sbb
dec
repnz
mov
and
adc
lret
enter
ds
jnp
jle
fidivs
nop
sti
push
mov
stos
push
adc
fstl
dec
pop
nop
jg
cmp
lret
push
or
fs
adc
sar
scas
xchg
sbb
sub
dec
mov
div
dec
cwtl
loope
cmp
leave
imul
sub
xchg
mov
add
cli
pushl
ljmp
and
mov
mov
enter
jl
enter
xor
test
sub
insb
loop
fwait
push
xchg
ret
pop
jge
jo
jg
pushf
lods
jb
mov
xor
icebp
xchg
jg
xchg
mov
xchg
stos
push
jmp
orb
dec
add
mov
subb
xchg
loope
popf
jp
mov
mov
inc
mov
push
xchg
push
and
in
adc
shr
pop
sahf
rorb
int3
xor
sbb
pop
mov
fs
lret
pop
add
clc
or
fistpll
dec
push
add
sub
fistpll
pop
xor
rol
lret
or
push
repz
xor
adc
out
repz
divb
sub
cwtl
icebp
xchg
call
in
add
test
sahf
ljmp
xor
or
je
jo
sub
in
sub
jo
inc
out
and
mov
fcmovne
shll
cs
test
int
cs
leave
sahf
xchg
js
push
jp
pushf
push
dec
into
mov
daa
mov
in
push
lahf
enter
je
push
repnz
insb
pop
and
jp
ja
bound
sub
adc
out
mov
insl
lods
adc
push
cmp
das
push
pop
adc
mov
jb
mov
sub
cli
jge
inc
mov
test
mov
inc
test
subb
shll
push
or
push
int
cli
adc
aam
addb
mov
test
pusha
lods
data16
repnz
in
and
cmc
mov
aam
lock
loope
je
test
adc
mov
sbb
push
add
stc
cpuid
pop
mov
sub
incl
add
jns
lret
xor
push
pop
push
sbb
cwtl
ficoms
outsb
mov
sub
popl
cld
lods
es
sub
or
lret
sarl
push
jl
sarb
jecxz
dec
mov
jl
cmp
and
ror
pushf
mov
dec
xor
lods
xchg
test
mov
mov
xlat
popa
fadd
dec
popa
ret
lcall
jle
cmp
or
sti
jecxz
xchg
ds
test
sub
adc
mov
dec
xor
in
jle
imul
ret
cmpb
mov
sar
mov
jae
mov
xor
sbb
aaa
aaa
pop
ret
mov
xchg
ja
stos
in
pop
pop
inc
push
cmp
jno
call
and
je
pop
mov
lods
pop
pop
sbb
mov
inc
aam
repz
aam
pop
aad
pop
jmp
cmp
pop
push
dec
mov
xchg
dec
ret
mov
pop
popf
xor
jmp
insb
or
adc
divl
push
push
cmp
sbb
notl
mov
add
test
or
test
add
dec
outsl
xor
mov
dec
xor
nop
out
daa
mov
push
mov
mov
fld
jne
push
push
dec
push
pop
dec
xchg
xor
mov
push
jge
out
mov
icebp
out
cld
mov
push
mov
sbb
roll
scas
rorl
and
inc
sbb
aad
daa
adc
mov
ja
out
add
cli
shrl
rep
pusha
ja
es
and
clc
ret
xor
xchg
out
gs
out
and
shr
mov
call
outsl
mov
je
fidivs
push
jl
scas
jle
out
leave
in
movsb
push
test
push
pop
lahf
and
and
stos
xchg
inc
cltd
add
push
aam
ret
jg
sbb
push
cmpsb
fdivs
test
ss
stos
add
data16
push
jecxz
mov
pop
jb
cwtl
pop
scas
scas
jno
mov
mov
mov
sub
jae
xor
add
push
sti
enter
mulb
push
daa
cmp
add
incb
or
enter
xchg
fbstp
pop
pop
cmpsl
mov
adc
jns
in
jns
mov
mov
and
sbb
in
jmp
fisubrl
repz
mov
xchg
or
aad
mov
add
add
adc
dec
sbb
js
add
mov
jecxz
pop
xchg
shll
mov
arpl
dec
jmp
xlat
popa
mov
push
mov
add
mov
mov
xor
test
jnp
push
scas
adc
clc
add
aam
fldcw
stc
or
testb
add
jle
pop
in
ds
mov
shrl
bound
and
cmpsb
jne
push
mov
xlat
pop
push
fdivr
dec
mov
iret
add
xchg
and
pop
sahf
mov
rclb
mov
insl
dec
sarl
lahf
dec
sbb
popf
out
test
outsb
push
cmp
rorb
push
das
dec
imul
fisttpl
cmpsb
sbb
dec
sub
inc
cs
push
mov
sub
inc
insb
outsb
enter
addr16
xchg
and
mov
ret
fwait
sub
imul
xorl
ret
pop
mov
lods
test
jno
pop
aad
lahf
inc
imull
fists
push
in
std
sub
data16
outsb
loope
jle
dec
cmp
or
imul
push
out
cmp
popa
xor
add
or
mov
ss
sti
push
dec
mov
or
sahf
sub
sub
mov
push
cmpsl
jne
jno
cmpsl
lret
rorb
dec
in
aam
sub
test
mov
jae
out
mov
stos
pop
and
sti
aas
loop
sti
inc
sbb
mov
std
lret
add
mov
jecxz
dec
push
xor
mov
cs
fsubrp
dec
push
push
mov
test
outsl
das
sbb
stos
mov
add
nop
pop
mov
adc
mov
cltd
pop
sbb
adcl
mov
xor
inc
push
mov
mov
insb
ss
enter
push
pop
mov
or
icebp
shll
scas
out
sbb
cmp
mov
xchg
pxor
dec
mov
test
mov
les
inc
imul
inc
clc
enter
inc
bound
add
mov
cmp
sbb
fnstsw
pop
ljmp
mov
push
popa
shrl
ljmp
daa
fidivl
lret
jae
pop
or
cmp
mov
loopne
repnz
sbb
popf
mov
in
iret
cmpl
mov
jle
int3
sahf
jb
sbb
jnp
inc
iret
fimull
pushf
pop
dec
call
cmp
adc
mov
lahf
or
add
aam
sahf
mov
insb
push
loopne
adc
js
push
mov
in
ja
subb
movsb
push
mov
cmp
mov
mov
in
imul
addb
add
dec
lock
push
mov
andb
insl
add
mov
les
push
mov
js
popa
int3
rcr
fsubrs
loope
xor
adc
jmp
cmp
aad
mov
add
out
arpl
adc
enter
inc
das
mov
and
mov
pusha
mov
stc
or
int
pusha
stos
out
pop
mov
arpl
out
fucom
lods
sahf
lret
and
cli
xlat
lea
testb
comiss
in
jno
iret
fld
repz
xchg
xchg
enter
cmp
xchg
js
add
pop
xchg
jb
jo
mov
or
or
xlat
and
ret
lahf
rclb
xor
sahf
and
dec
jecxz
mov
mov
cltd
add
add
outsl
mov
bound
das
pop
outsl
shrb
dec
mov
sub
ret
outsl
xchg
sbbl
fisubs
test
fs
test
gs
in
iret
or
shlb
pop
pop
mov
rclb
push
push
push
stos
push
mov
pusha
ret
scas
jb
sahf
cltd
cmp
les
xor
cltd
leave
sbb
jo
push
imul
mov
mov
leave
sub
pusha
lods
loope
mov
es
loopne
jp
pushw
adc
xlat
jbe
repnz
inc
loopne
pop
jle
stos
call
fcompl
sbb
lret
cmpsb
test
dec
sub
add
shrl
adc
sbb
cmpsl
jmp
shrb
fisubs
xor
fidivrs
in
js
jnp
push
arpl
ja
pop
sbb
xor
fs
and
jae
inc
and
insl
leave
aas
inc
lea
mov
and
mov
movsb
jno
xchg
out
je
aas
popf
fildll
mov
mov
imul
lods
fcmovnb
pop
aad
sbb
inc
jl
jne
or
filds
lcall
fsubrl
inc
popa
push
lods
subl
inc
mov
stc
and
aaa
xor
pop
xor
lods
dec
adc
push
dec
test
xor
cmp
mov
loope
pop
xchg
repz
push
mov
mov
popa
xchg
dec
scas
movsb
dec
inc
lds
adc
mov
jl
rorb
pop
sub
push
or
lcall
jmp
rolb
xchg
bound
test
mov
adc
adc
lcall
test
add
sbb
in
out
int3
cmp
pop
fwait
repnz
and
ljmp
loopne
push
or
jp
push
lods
push
push
cld
dec
and
xchg
and
add
popa
adc
data16
sbb
insl
pop
xchg
dec
in
stos
loopne
pop
or
fucomp
inc
jae
or
push
or
imul
test
neg
inc
ljmp
sub
imul
mov
in
cmp
adc
rcrb
sbb
mov
cmp
ss
adc
notb
nopl
mov
inc
mov
push
repnz
pop
cmp
xor
xchg
lock
xor
mov
scas
aas
push
mov
sar
inc
sbb
push
mov
cmpsl
push
mov
pop
mov
or
int
push
shrb
nop
popa
in
jmp
divb
pop
jne
mov
mov
cwtl
mov
xor
cld
push
adc
aam
out
sub
out
add
or
arpl
gs
enter
das
je
mov
and
jl
sahf
jne
test
adc
xor
mov
xchg
mov
jmp
mov
inc
jle
xor
jl
leave
xchg
in
aad
lock
in
aam
ljmp
add
or
and
or
jmp
pop
xlat
sub
testl
jb
jbe
fwait
in
jle
imul
outsb
cli
pop
xlat
repnz
lock
inc
cmp
jo
mov
imul
in
and
inc
shrl
or
push
dec
push
pop
inc
xor
mov
clc
cltd
pop
sahf
pusha
xchg
lret
fwait
idivl
inc
fwait
rcrb
sbb
pop
mov
fadd
ret
jge
or
jg
bound
imull
shrb
cmp
fistps
lahf
and
mov
ds
loopne
cwtl
cmp
fildl
sbb
xor
and
dec
dec
clc
fxtract
int3
mov
or
inc
scas
std
scas
mov
and
xchg
cs
in
push
cld
sbb
push
flds
fldl
cltd
sub
fdiv
dec
xchg
daa
notl
leave
add
sub
jmp
inc
scas
push
mov
shlb
or
fistpll
pusha
mov
icebp
mov
lret
in
or
mov
repnz
sub
in
cltd
inc
mov
ret
gs
mov
push
pop
xchg
mov
popa
lret
int3
sbb
mov
lods
xchg
xor
test
inc
mov
int3
mov
inc
ss
xor
mov
mov
out
jp
ss
sub
je
mov
jae
inc
popa
std
push
shr
mov
pop
into
lahf
dec
and
pop
xor
ljmp
fistps
jmp
jo
sub
cwtl
out
pop
and
push
movsl
sub
inc
mov
je
aam
jb
add
adcb
lcall
jne
dec
ja
cmp
jb
bound
or
fs
nop
in
push
xor
sub
pop
dec
les
fsubrp
inc
sbb
mov
pop
jnp
jbe
movsl
add
inc
mov
cmpsb
ficomps
mov
xchg
out
insl
lods
mov
imul
aaa
out
daa
pop
mov
ud0
std
mov
movsb
repnz
leave
cs
cmp
add
cmpsb
sbb
outsb
and
dec
mov
mov
jp
icebp
test
and
insb
ljmp
lret
fstl
call
sub
jns
sbb
fs
int3
sbb
shll
arpl
fs
pusha
test
mov
lret
daa
test
and
ja
pop
lds
sbb
sbb
inc
dec
sub
mov
stc
mov
dec
add
cwtl
mov
fisttps
pushf
ret
test
or
push
pop
cmp
xchg
mov
sbb
push
add
aas
iret
addb
mov
mov
mov
mov
sub
imul
popf
jmp
adc
add
lret
ja
mov
mov
xlat
add
jecxz
dec
call
xchg
mov
jo
shl
add
fildll
or
stc
adc
iret
lahf
mov
gs
sarb
xchg
arpl
sbb
pop
in
mov
mov
inc
dec
adc
mov
mov
or
mov
or
mov
nop
cwtl
rolb
sti
popf
pop
movsb
jle
adc
sbb
not
add
mov
scas
cs
xor
sbbb
pop
mov
aaa
pop
je
out
and
popa
dec
xchg
mov
pop
jle
in
ror
popa
xor
insb
lods
adc
loope
bnd
ds
iret
pop
mov
dec
jl
jp
or
jmp
lcall
xchg
jle
mov
jg
pop
pop
repz
seta
or
shrb
xchg
fnstsw
addb
dec
cmpsl
fucomip
mov
pop
jecxz
push
xchg
fsubr
mov
lret
fldl
scas
adc
pop
inc
adc
mov
mov
in
ret
lret
aaa
ja
or
add
insb
ja
addb
int
jg
push
int
addr16
cwtl
fisubl
jo
sub
dec
fsubrs
xor
call
jae
jno
sub
loope
adc
sti
xor
in
push
or
ja
das
jecxz
mov
or
fwait
mov
and
fsubrl
arpl
add
mov
aad
inc
cmp
stos
mov
sbb
jae
mov
sti
mov
fiaddl
stos
xor
jns
rcrl
xchg
jge
cmp
push
mov
andb
or
mov
add
lsl
int3
and
xlat
mov
fdivrl
cmp
push
xchg
inc
in
jmp
inc
orl
cmp
sub
hlt
push
sbbl
dec
and
cmpsl
mov
insl
fcoml
push
pop
fisttpll
mov
dec
pop
sbb
inc
add
cs
repnz
adc
cld
mov
arpl
arpl
jle
adc
in
mov
jb
sbb
dec
ja
mov
out
shll
std
in
ja
mov
lret
push
pop
xchg
xchg
mov
test
sub
jg
adc
and
and
or
add
nop
cld
or
pop
dec
testb
shlb
outsb
dec
adc
or
adc
cmp
push
mov
sbb
mov
jo
call
sahf
pop
rcr
in
out
enter
notb
mov
or
addr16
jle
ret
add
dec
mov
mov
mov
mov
fsubrs
pop
nop
xor
cmp
mov
cmp
xor
and
sbb
and
es
inc
inc
and
cmpsb
fiadds
rcl
xchg
cmp
adc
arpl
mov
mov
mov
pop
pusha
push
pop
push
mov
mov
jmp
js
das
or
icebp
shlb
sahf
daa
adc
mov
mov
jbe
add
mov
pop
insb
xchg
bound
sbb
push
jp
xor
rorb
mov
push
dec
call
mov
or
sbbl
fadds
mov
and
ljmp
adc
xor
jp
cmp
mov
lret
dec
sub
inc
mov
shll
mov
xor
mov
pushf
xchg
loopne
inc
in
xchg
ret
outsb
cltd
sbb
pop
pusha
scas
mov
mov
push
jnp
dec
loope
aaa
cmpsb
cmp
fdivrl
push
pop
jbe
call
jmp
xchg
xlat
pop
cltd
cmp
out
ljmp
test
cltd
clc
push
mov
aas
repz
dec
in
test
push
mov
cwtl
lds
dec
add
sti
xchg
cmpsl
rclb
pushf
sub
push
jg
jae
fs
sub
movsb
stos
or
movsb
sbb
or
lods
cmp
dec
mov
call
sbb
out
rcll
push
insb
sbb
mov
ds
subps
das
sub
jb
lods
and
sbb
cltd
xor
mov
mov
in
lods
cltd
in
pushf
jnp
add
mov
js
push
xor
cltd
addb
xchg
xor
sbb
push
aam
es
mull
push
xchg
les
cmp
ret
in
nop
sti
mov
cmpsb
adc
test
xlat
cmp
dec
gs
fwait
push
sbb
or
inc
leave
subl
fstl
repz
pop
xor
loop
jb
fs
cmp
xlat
inc
add
push
or
test
lahf
xchg
pusha
push
push
test
fs
jbe
jmp
mov
jne
jo
mov
leave
cmp
shlb
lock
out
mov
jb
push
out
mov
cmpsb
xor
xor
out
lds
cmpsb
jle
cmp
sub
lret
mov
sub
push
lret
mov
out
inc
add
popf
dec
into
sbb
push
pop
pop
push
je
test
cmp
cs
fisubrs
popa
jo
cltd
test
imull
cmpsl
add
orb
cwtl
sbb
sbb
jecxz
sub
dec
icebp
cmp
ljmp
jb
sti
outsb
xor
cld
xchg
shlb
aaa
jnp
inc
jge
and
pop
test
adc
psadbw
popa
lahf
mov
push
adc
xlat
fstps
add
cmp
xchg
je
js
sbb
out
xchg
mov
jae
in
std
scas
jmp
or
push
pop
push
mov
in
lds
testl
pop
nop
sbb
shlb
lahf
cmpsl
fadds
lods
in
fwait
inc
stos
mov
cli
xchg
loop
iret
xchg
jns
aam
cmp
popf
cmp
mov
adc
push
out
push
inc
ret
mov
ret
push
jne
mov
mov
xchg
fstl
mov
push
cmp
out
sub
xlat
push
cmp
movsl
icebp
das
lret
push
cli
inc
inc
jmp
push
dec
jbe
insb
js
arpl
sub
dec
pop
push
test
adc
dec
ljmp
mov
mov
popf
and
fwait
pop
dec
inc
adc
xor
sar
leave
sbb
mov
jae
push
adc
lock
xlat
in
jnp
pop
lods
movsb
and
repz
test
js
mov
push
jmp
push
xchg
and
xchg
popf
inc
outsb
xchg
sbb
push
and
dec
or
push
test
cmp
lea
stos
and
or
adc
xor
mov
loop
lret
imul
shlb
jl
inc
push
dec
inc
inc
lods
push
bound
fimull
aas
inc
xchg
loop
adc
inc
mov
push
pop
cwtl
xchg
addr16
in
mov
xchg
mov
push
lock
mov
loope
call
fisttpll
pop
pop
inc
popf
or
cld
inc
inc
shlb
lret
sarl
fld
daa
cmpsb
pushf
repnz
cmpsb
repnz
les
push
dec
nop
mov
jge
mov
or
std
imul
push
mov
jle
lahf
or
jmp
clc
jp
mov
jmp
pop
int
dec
add
test
xchg
std
sbb
mov
in
push
adc
loop
sti
xchg
call
mov
in
es
mov
test
cmpsb
lret
jo
mov
mov
xor
mov
jbe
popa
int3
sbb
stos
push
push
lods
inc
movsb
cli
cmpsb
or
mov
jmp
push
push
mov
mov
out
add
inc
decb
cli
dec
rcl
adc
push
push
xchg
push
fcmovb
add
ret
sub
shl
pop
lcall
test
dec
dec
lods
push
mov
jp
sub
mov
mov
cmpsb
outsl
sub
rcrl
mov
mov
jg
mov
mov
add
mov
std
dec
inc
sarl
insl
xchg
into
repnz
sub
sub
pop
adc
xchg
mov
jecxz
arpl
scas
arpl
sbb
test
jg
popa
add
mov
xchg
add
lret
mov
cs
pop
pop
dec
sub
rorb
and
leave
cwtl
mov
mov
sub
aam
and
sbb
nop
pop
add
dec
jae
loop
mov
pop
cmp
push
sub
cmp
mov
push
sub
sahf
mov
jns
fldenv
jno
xor
xor
imul
fs
add
stc
xor
pop
push
adc
orl
pop
dec
dec
roll
push
sbb
cltd
loop
inc
mov
lret
into
push
lahf
pop
shrb
push
lahf
clc
cmp
push
sub
jbe
rcrb
rcrb
inc
notl
iret
dec
cli
xchg
int3
dec
fwait
sbb
jbe
movsb
pop
sti
nop
stc
xchg
pusha
pop
shrb
out
jns
test
add
add
fisubrs
lret
mov
adc
jae
mov
call
or
fidivl
pop
imul
dec
jae
in
into
jno
test
push
sub
push
in
lret
shrb
sub
bound
xchg
mov
cmpsl
inc
sbb
or
jne
sbb
iret
xlat
push
pop
push
dec
jg
ficompl
fisttpl
std
pop
or
xlat
fbld
imul
subl
and
dec
shll
xchg
adc
jno
xchg
push
dec
call
adc
mov
mov
jmp
mov
in
movsl
lret
mov
lahf
xor
xor
jo
aas
adc
pop
sub
stos
mov
pusha
out
rcl
jne
and
rcrl
mov
hlt
je
ficomps
rcrb
jl
and
inc
pusha
sbb
push
fidivrl
fcoml
lcall
mov
add
fst
movsl
dec
mov
mov
mov
xchg
mov
jecxz
dec
addb
ljmp
add
das
add
sub
enter
and
jl
lret
in
pushl
repz
mov
daa
dec
or
sub
push
adc
call
mov
imulb
fidivrl
stc
sti
push
jp
cltd
jge
adc
js
ret
out
mov
pop
les
lea
test
jl
xlat
xor
ret
cmp
stos
inc
clc
mov
mov
push
mov
test
push
push
pop
out
test
arpl
adc
xor
push
bound
mov
lahf
sbb
lock
adc
dec
lret
aad
and
jno
repz
sbb
adc
inc
mov
in
sbb
or
push
das
test
xchg
jno
push
scas
inc
in
out
fsubrl
test
sub
jecxz
jecxz
sub
jae
test
movsl
cmpsl
shrl
mov
dec
adc
rcrl
in
sub
cmc
mov
inc
cli
mov
xchg
dec
xlat
scas
out
and
jle
cmp
push
jae
int3
sbb
mov
in
out
jns
mov
inc
sub
stc
aad
adc
ljmp
cmpb
cmpsb
idiv
int
loopne
data16
jl
pusha
pop
adc
idivl
or
sti
add
sti
xor
mov
xor
push
push
dec
adc
sub
or
mov
xlat
rorb
pop
inc
ret
adcb
pop
dec
adc
loop
xchg
test
dec
xor
daa
xor
mov
repz
or
push
in
repz
aad
es
out
inc
mov
mov
cmpsb
mov
movsb
mov
sub
sbb
mov
mov
fsubl
sbb
lods
fs
ret
addr16
test
sbb
int3
xchg
or
sbb
int3
cmp
fimull
or
cmc
push
imul
or
cmp
xor
mov
ss
dec
ret
into
sub
sbb
aaa
das
cmpsb
ss
push
fbld
push
subb
mov
pop
xor
xchg
dec
popa
sbb
jp
dec
add
icebp
and
out
filds
in
dec
dec
ja
outsb
mov
mov
icebp
loope
ror
out
xor
pop
push
sbb
cmc
sub
fistpll
lds
sbb
cmp
adc
ja
cmp
jp
mov
pop
push
mov
pop
or
std
iret
cld
rcrl
adc
fmuls
leave
orb
lret
jne
cmp
sahf
push
pop
sar
xchg
cli
inc
sbb
push
mov
lea
push
movhlps
inc
int
inc
pop
push
sarb
add
pop
lods
insl
pusha
push
xor
fucom
push
fisttpll
dec
xchg
adc
fisubrl
pop
xlat
dec
xchg
push
push
pusha
shrb
loope
xor
and
lock
jmp
ja
aas
mov
mov
call
push
inc
mov
mov
add
mov
jmp
gs
shll
pop
fstpl
cmpsl
mov
or
or
or
jg
fimuls
scas
push
cli
std
sub
jae
add
divb
lret
in
and
mov
or
popa
mov
mov
or
xchg
xor
sub
mov
mov
ror
mov
push
jge
outsb
inc
roll
adc
adc
push
jl,pt
sub
fsubl
push
test
imul
and
repz
mov
fs
xorl
data16
aaa
sbb
inc
pop
jae
or
mov
mov
cmp
call
xor
lods
fiaddl
testl
int
out
test
and
pop
stos
adc
cmp
jns
xor
fs
loopne
cmp
jb
or
lret
jne
mov
pushf
cli
iret
xor
xchg
pop
add
inc
insb
shlb
inc
lcall
or
ds
cld
test
xor
add
sahf
pop
pop
or
divl
aaa
js
sbb
pop
rcrl
sub
inc
jmp
mov
mov
repz
mov
mov
xchg
gs
mov
pushf
push
outsl
pop
dec
pop
jns
dec
pop
cmp
mov
mov
jo
mov
rcrb
test
in
sub
lahf
jae
adcb
fcmovne
loop
add
and
xchg
in
adc
mov
pop
jl
lds
jp
cltd
inc
mov
dec
pop
mov
lods
mov
xchg
push
xor
dec
sti
insl
cs
pop
pop
stos
sbb
push
and
mov
scas
adc
rol
add
insb
xor
push
push
jns
rorl
cltd
sub
rcrb
popa
xchg
xor
jbe
pop
push
movsb
push
or
xchg
movsl
pop
dec
enter
push
jg
push
or
lret
sbb
add
mov
in
sub
and
cmpsb
inc
aas
pusha
leave
push
jmp
pop
les
iret
fadds
inc
dec
repz
int3
daa
dec
mov
lcall
ja
jo
repz
dec
fs
mov
dec
dec
push
out
xchg
push
sahf
into
cmp
dec
test
mov
mov
incl
js
imul
inc
fwait
ret
jbe
cmpb
push
xchg
jl
cmp
cltd
inc
imul
inc
movsb
fmull
call
fbld
push
sbb
jecxz
sub
in
stos
sbb
inc
scas
lret
data16
rorb
jp
leave
mov
stos
out
dec
xor
daa
lods
dec
enter
mov
ja
cmpsl
es
jbe
fldl
and
mov
push
adcl
pop
mov
insb
push
popf
call
add
test
in
std
aam
pop
xchg
add
sub
mov
fwait
loope
mov
adc
mov
xchg
dec
pop
pop
adc
rorb
fadds
pop
adc
lods
lock
mov
inc
jle
rol
je
lock
xor
movl
cmp
testl
xor
aam
lahf
imulb
vpsubb
cmpsl
insl
lcall
cmp
push
push
xor
test
sbb
push
cmp
sub
repz
dec
cmp
xor
in
lods
pop
daa
negb
cwtl
stos
nopl
adc
mov
idivl
je
aam
scas
sahf
mov
outsb
xchg
xor
push
jecxz
andps
mov
arpl
and
pop
sub
sbb
pop
dec
pushf
pushf
lock
dec
out
in
cli
loopne
mov
aad
xchg
dec
push
out
aad
cmpsb
rcrb
fisubl
cmp
adc
jo
test
cmp
loopne
xchg
rorb
out
inc
jne
pusha
pop
or
and
cwtl
mov
loope
push
mov
scas
mov
dec
dec
aad
push
push
inc
ljmp
stos
jno
sub
dec
pop
push
shrl
das
xchg
xchg
xchg
clc
sbb
pusha
cmpb
sbb
and
mov
xor
xchg
xorl
xor
mov
sbb
sbb
iret
test
xchg
push
loop
push
aas
loope
scas
or
shll
xchg
cld
inc
into
test
test
push
lods
mov
xor
sub
je
enter
jge
rorl
sahf
sbb
cmp
iret
sbb
lahf
sub
mov
sub
rcll
jns
mov
jmp
and
leave
xchg
xchg
out
movsb
push
sbb
jns
dec
and
inc
sbb
cmp
and
int3
outsl
shll
lahf
adc
out
sub
addr16
pop
inc
fwait
inc
pop
mov
fdivrl
in
dec
sub
jnp
jge
lods
mov
push
inc
pop
jge
dec
loope
insl
xchg
xchg
dec
push
js
test
data16
push
test
lcall
sti
loop
add
loopne
push
mov
cmpsl
adc
cmpsb
xor
and
cwtl
xchg
ja
mov
fsubl
int3
repnz
in
push
inc
pusha
xchg
lahf
push
insb
mov
mov
xchg
or
push
push
mov
lods
outsl
hlt
cmc
dec
hlt
cmpl
xor
dec
daa
dec
sbb
shlb
mov
sbb
mov
addb
out
fs
test
add
js
xor
pop
nop
mov
or
dec
and
mov
xchg
push
cltd
ljmp
fcoms
cld
mov
cmpsb
hlt
mov
shl
std
iret
adc
jmp
xlat
bound
fimuls
loope
sbb
pop
inc
jl
stc
mov
sahf
pop
push
mov
push
sub
or
inc
and
mov
mov
or
sub
lods
sar
jb
test
pop
adc
and
jge
dec
nop
neg
xor
out
mov
lret
loopne
and
pop
sub
je
or
sbb
or
aaa
out
stc
sbb
add
sub
lret
mov
daa
hlt
add
and
outsb
lds
enter
mov
lods
mov
lret
sbb
adc
mov
sbbb
adc
cwtl
sbb
adc
lahf
enter
out
mov
and
xor
pop
test
mov
loope
cmp
xchg
xor
xor
inc
cmpsl
mov
jno
mov
shrb
pop
mov
mov
insb
loope
sbb
sbb
add
ja
mov
mov
mov
jb
jg
imul
mov
push
inc
mov
cmp
and
clc
mov
shlb
mov
stos
arpl
inc
ljmp
cmpb
movsb
jne
sbb
add
sbb
test
xchg
cmp
inc
sbb
pop
xlat
mov
popf
add
lret
sbb
mov
sbb
or
fmull
iret
scas
jmp
jmp
imul
lods
inc
insb
cmp
dec
les
pushf
insl
sub
ret
fsubrl
add
ds
mov
clc
xor
loopne
push
xchg
pop
add
pop
pop
mov
jne
push
and
je
mov
mov
in
xchg
pop
push
mov
and
add
test
mov
push
stos
addb
lret
leave
xor
ds
push
and
and
dec
cmpsl
add
sub
adc
repz
bound
sub
shr
pop
stos
push
sahf
dec
iret
add
fistpll
fsubs
rorb
imul
cmp
jge
add
xor
pop
leave
cli
xor
sahf
mov
mov
icebp
mov
jne
mov
xor
es
lcall
and
add
js
movsb
rcl
sti
cmpsl
dec
out
fwait
xchg
pop
data16
mov
push
jmp
dec
imul
in
push
lret
or
mov
push
mov
sbb
in
jecxz
adc
sbb
fstl
cwtl
pop
and
adc
xor
jle
insl
test
mov
jle
xor
cmpsb
popa
dec
bswap
imul
or
rcll
int3
jnp
loope
mov
pop
leave
mov
xchg
inc
sub
scas
cs
pop
sbb
imul
xchg
scas
mov
dec
adc
addl
fistl
xor
movsb
pop
imul
xlat
aaa
and
mov
in
xchg
mov
in
shll
fidivs
arpl
stc
mov
shr
mov
xchg
sbb
scas
sbb
in
out
out
cmp
and
sbb
adc
xor
jle
mov
mov
arpl
and
or
repnz
pop
sbb
into
js
push
subb
inc
pop
lds
add
xchg
movsb
inc
xchg
ficoml
popf
shll
and
repnz
icebp
cmp
xchg
into
sub
fwait
outsb
jo
clc
pop
cmp
jp
lcall
or
incl
fnsetpm(287
daa
or
int3
mov
xchg
sbb
push
pop
fldenv
add
mov
ds
pop
sbb
jl
sub
pushf
repz
push
das
lret
pop
dec
inc
jmp
cmp
sbb
jg
push
fldt
ss
fdivrs
and
in
in
in
sbb
sbb
fidivrl
pop
jmp
mov
sbb
je
push
or
inc
lock
push
in
push
mov
pop
cmp
mov
cli
js
decl
fildll
xchg
inc
lcall
mov
call
add
outsb
lds
out
lret
ret
mov
mov
mov
test
outsb
mov
cmp
mov
js
add
outsb
arpl
dec
cmp
mov
movsl
xor
xor
push
rcll
mov
outsl
sbb
cmc
push
add
push
pop
dec
aam
inc
add
or
orb
sbb
inc
lea
cmp
test
push
mov
call
subl
mov
jno
div
and
mov
out
stc
cmp
xchg
pop
jne
imul
mov
dec
push
mov
cmp
push
lcall
and
lds
imul
dec
popf
xor
sbb
push
ret
fisubl
mov
adc
mov
xlat
cmc
add
cmp
and
repnz
fimuls
test
dec
bswap
outsb
loope
and
mov
pop
ret
insl
cmp
popa
sarl
lock
aad
xor
cmpsb
orl
call
je
xor
sbb
mov
add
inc
jge
sub
ss
lcall
iret
add
test
cwtl
cwtl
mov
repz
jecxz
cmp
loopne
aam
xchg
push
in
addr16
ret
mov
mov
scas
imul
dec
push
add
out
mov
xchg
push
aad
aad
cmpsl
jae
mov
je
or
xchg
add
and
adc
pop
mov
push
cltd
dec
imul
xor
outsb
cs
ret
sahf
mov
in
or
cltd
bound
sbb
add
mov
dec
ret
inc
mov
test
push
inc
ret
nop
leave
lods
jl
cmp
mov
pop
adc
js
pop
das
cltd
fsubs
add
cltd
iret
push
mov
xor
sbb
mov
jl
lods
imul
fcomps
ret
std
sbb
lret
fildll
push
pop
mov
xor
xchg
paddq
cwtl
arpl
outsl
jb
sub
sarb
mov
pop
add
mov
adc
xchg
sub
cmp
jbe
dec
xor
fcoml
push
xor
outsb
jae
push
and
sbb
fdiv
dec
xor
addr16
aaa
cmp
push
rorb
fcmovnbe
sbb
or
push
sbb
movsl
mov
jnp
test
idivl
push
mov
dec
loopne
mov
sbb
insl
fildll
out
scas
dec
mov
xlat
in
mov
in
aam
dec
lcall
sub
cmp
and
add
lea
mov
popf
stos
sbbb
in
jmp
add
dec
pushf
or
xchg
les
push
out
pop
mov
stos
sbb
scas
mov
or
hlt
add
xchg
dec
push
cmp
stos
cmp
incl
into
outsb
imul
lods
mov
mov
fadds
xlat
jge
pop
mov
jge
std
outsb
cld
cli
movsl
loope
pop
sub
sbb
fistpl
pop
rclb
cmpsb
mov
or
push
adc
shrb
test
idivl
sub
dec
popa
and
mov
mov
sub
rcrb
stos
sub
mov
mov
and
inc
test
es
fmul
cwtl
fwait
mov
mov
push
nop
outsb
test
mov
mov
mov
push
test
sahf
call
popf
neg
sti
inc
cmp
pop
xor
test
or
mov
mov
xchg
arpl
fidivs
mov
pop
dec
pop
shll
ja
in
cmc
jg
mov
sarl
sub
ret
mov
ss
xor
xchg
mov
cmp
std
addb
loope
stc
and
dec
out
loopne
aaa
js
leave
cmp
lea
or
sbb
sbb
xchg
xchg
xor
cmp
inc
xchg
into
push
scas
test
xor
sti
xchg
bound
std
outsb
es
loop
int3
xchg
jb
adcl
int3
int
loop
push
cmc
jb
pop
mov
pop
lods
cmp
cmp
test
js
ljmp
test
popa
adc
lea
mov
mov
sub
dec
ja,pn
xor
lock
push
sub
sub
call
fidivs
xchg
out
lock
sbb
add
pop
aad
pop
out
shrl
mov
sahf
cmp
xchg
push
mov
fs
pop
sub
sbb
ds
or
sbb
cmp
in
inc
jns
cltd
addb
push
imul
sbb
loope
test
icebp
sub
fs
mov
cli
dec
fimuls
call
cwtl
popf
adc
xchg
pop
add
insl
aas
in
sbb
adc
sbb
jns
test
cmp
xchg
push
lret
add
stc
cs
sbbb
gs
loop
cmp
push
sahf
je
lods
mov
lods
dec
dec
outsl
inc
mov
inc
fcompl
popf
and
mov
sub
test
xchg
std
int3
cmpsl
pop
pop
or
mov
mov
shrl
repz
test
push
xchg
mov
addr16
arpl
jg
cmpsb
push
pop
push
xchg
jge
je
dec
and
sub
movsl
or
test
sub
push
outsb
fcomps
cmpsb
ror
mov
dec
push
pop
rcrl
js
lods
xorl
nop
movsb
mov
inc
loop
in
decl
jns
test
mov
sub
mov
sbb
cwtl
outsl
fstl
cmpsb
xor
sub
xchg
pop
loope
sub
stc
outsl
ljmp
aaa
cwtl
push
jbe
inc
scas
popa
inc
scas
gs
divb
mov
dec
data16
lds
or
sub
std
ficompl
and
jl
cmpb
stos
xor
bound
lds
repz
fcoml
add
pop
loope
dec
jne
mov
loope
mov
jns
jge
ret
out
aas
mov
jle
jae
adc
sbb
insb
add
lahf
mov
aad
popa
xchg
push
jns
xchg
mov
js
imul
icebp
je
nop
daa
pop
mov
lds
aaa
enter
in
dec
dec
inc
xchg
xor
out
push
shll
jle,pt
orl
mov
xchg
push
mov
or
lret
or
sbb
mov
add
ss
bound
sbb
or
xchg
adc
add
daa
dec
jb
sbb
inc
push
in
test
clc
out
in
push
mov
jbe
cmpsl
dec
rorb
sbb
sbb
mov
fdivl
or
sbb
jge
test
cmpsb
jge
je
mov
push
mov
mov
push
dec
lds
bound
pop
cli
xor
std
loop
push
push
inc
stos
loopne
addr16
xchg
jg
push
adc
out
and
outsb
and
jbe
push
push
sbb
mov
cwtl
xor
push
sbbb
int
aad
cwtl
jmp
pop
pusha
out
lcall
xlat
dec
idivb
and
push
push
xor
std
fmull
pop
xor
inc
lcall
xor
pushf
scas
movb
push
push
sub
adc
pusha
push
and
jge
push
inc
test
ljmp
daa
sub
push
xor
cltd
mov
jns
push
push
fnstenv
loopne
js
cmp
jnp
lods
das
shlb
insl
adc
or
dec
aad
pop
xchg
sbb
insl
xor
out
mov
cmp
cmp
pop
inc
and
xchg
adc
repnz
dec
push
popf
out
push
stos
das
jecxz
jmp
ret
xorl
add
xor
js
inc
sub
sub
sbbb
or
inc
popa
push
int3
popa
push
and
je
jo
adc
ja
jns
imul
cwtl
push
jno
inc
cmpsb
lea
or
daa
inc
imul
call
pop
push
aam
orl
jp
sbb
pusha
inc
dec
lret
fbld
cmp
lea
enter
pop
lret
jne
shrl
stc
jb
pushl
shlb
cs
cld
mov
pop
ja
or
xchg
pop
jae
inc
pop
inc
add
dec
ret
or
xchg
jno
and
jne
leave
es
xchg
inc
or
lret
adcl
or
pop
sub
orl
lahf
hlt
ss
xchg
js,pn
stos
sub
sete
xor
sti
dec
shlb
test
ja
lods
jno
cmp
or
negb
shrl
mov
mov
ja
hlt
pop
mov
inc
jnp
rorl
cmova
dec
cmp
notl
test
hlt
rcrl
mov
int3
fildl
push
pop
mov
cmpsl
movsl
jp
inc
mov
stos
jne
inc
imulb
mov
std
movsl
xor
nop
pop
imul
out
push
out
outsl
in
jge
sub
inc
clc
xor
xchg
inc
mov
aam
mov
mov
negb
fsubl
je
inc
fldenv
addr16
mov
in
dec
popl
xchg
call
xor
rorl
push
mov
mov
mov
pushf
mov
push
dec
out
push
xchg
adc
mov
lock
int
mov
fs
dec
pop
insb
rolb
leave
adc
ja
leave
shl
out
push
mov
and
mov
repz
mov
and
mov
dec
xchg
popa
gs
negb
stc
jae
jge
xor
andl
test
mov
xchg
xor
insl
les
mov
xor
pop
pop
bound
cmp
mov
jp
xor
sub
popf
sbb
adc
mov
lret
xchg
icebp
xor
das
dec
scas
push
pop
and
xor
out
sub
push
lahf
jno
fwait
int
jl
inc
ret
dec
pop
mov
and
sahf
mov
icebp
push
push
mov
fisubs
bound
loopne
les
xor
mov
mov
adc
aad
mov
mov
fmuls
jbe
xchg
stc
pop
pop
mov
xchg
test
shll
loopne
fidivrl
fildll
mov
lock
mov
test
mov
inc
push
inc
cltd
push
hlt
cmc
sbb
aaa
dec
ret
mov
orl
movsl
repz
ja
aas
adc
push
push
jmp
lahf
fisubs
popw
movsl
dec
fmul
into
sbb
and
push
sbb
pop
push
mov
push
sbb
rcrb
jp
mov
mov
jbe
cmp
xchg
push
fcmovbe
add
mov
push
lahf
inc
lods
dec
or
jno
ret
nop
or
jns
pushf
mov
dec
data16
cmp
mov
aaa
stos
faddl
int
je
dec
push
test
cmpl
xor
sbb
pop
mov
mov
pop
ret
jg
mov
in
idiv
push
jnp
and
mov
push
xor
call
mov
adc
stc
jno
sbb
dec
xchg
and
and
mov
pop
or
mov
gs
pusha
jecxz
push
fdivs
xchg
mov
sub
call
lahf
xor
cli
mov
inc
dec
jl
or
fs
inc
inc
ja
adc
push
lods
les
int3
or
mov
pop
bound
push
push
pop
and
pushf
stc
mov
loope
jecxz
push
cmpsl
rclb
ficomps
inc
stc
scas
pop
imul
sarb
mov
pop
push
jnp
enter
lret
adc
notl
div
inc
add
stc
movsl
mov
xchg
aad
push
mov
fwait
push
mov
push
scas
mov
pop
imul
ret
ret
sub
and
inc
out
or
push
cld
jp
stos
popa
adc
sbb
mov
sub
cmpl
push
sbb
popa
jns
gs
lock
loopne
dec
push
inc
ljmp
ss
jns
mov
or
and
xchg
lret
in
mov
sub
and
jae
pop
dec
jmp
fs
out
push
pop
push
hlt
iret
test
into
cmp
mov
in
jle
mov
sbb
sub
push
jmp
mov
rorl
cli
ds
mov
xlat
pop
stc
nop
or
pop
stc
pop
xchg
adcb
xchg
inc
cmpsb
outsb
aam
dec
inc
mov
and
pushf
call
and
lret
test
ds
mov
aas
cmp
stos
inc
jg
inc
pop
push
cmp
iret
mov
lods
enter
and
std
repnz
mov
pusha
clc
cmp
sti
cmc
or
xchg
aas
into
testl
add
or
cwtl
xor
and
dec
pop
test
scas
cmp
cmpsb
xor
xor
pop
in
orl
inc
fdiv
cmp
jecxz
lea
jl
dec
mov
in
dec
ljmp
push
enter
dec
xor
sbb
xchg
popf
shlb
push
xor
xor
enter
cmc
sbb
lods
cs
pop
lods
pop
mov
mov
outsb
nop
es
add
arpl
ja
das
cmpsl
shrb
push
sub
xchg
dec
add
add
movsl
dec
cmp
pop
out
fcmovnb
test
add
js
sub
sbb
mov
jae
pop
mov
pop
or
push
shrb
add
pop
adc
je
push
xchg
sbb
dec
mov
sub
and
mov
ret
jns
inc
rorb
dec
data16
sar
fbld
ljmp
mov
jmp
movsb
aam
push
adc
les
mov
add
and
pop
sub
imul
xchg
fdivs
sbb
pop
sbb
in
sub
jbe
push
jo
and
int
jbe
pop
movdqa
push
pop
mov
add
js
mov
mov
cmpsb
movsl
sbb
out
int3
mov
adc
mov
lcall
sarb
out
dec
jmp
and
cld
popa
js
mov
lea
clc
cmpsl
pop
push
adc
clc
es
cmp
dec
adc
int3
addr16
xchg
cmp
xchg
out
or
xchg
push
push
das
sub
mov
jmp
jbe
add
sbb
mov
and
out
cmp
xchg
insb
scas
movsl
dec
xchg
gs
xor
popf
popa
mov
aam
xchg
sub
mov
xor
cld
jl
cltd
dec
outsb
sub
vprotd
mov
ret
fidivl
out
fmuls
xchg
pop
daa
dec
sub
insb
xor
insb
lret
sub
shll
loop
movsb
arpl
or
clc
mov
and
mov
shrl
dec
loopne
jo
stos
aaa
mov
int
mov
aas
mov
sbbb
xorb
push
jmp
push
sub
pusha
xlat
ret
dec
push
and
bound
push
retw
add
cmp
push
pop
pusha
mov
mov
mov
lea
aaa
test
outsb
insl
insl
adc
mov
xor
cmp
jle
test
bound
out
or
dec
cmp
fiadds
sub
or
in
cmp
out
xchg
inc
cmp
lret
xchg
adc
flds
and
pusha
adc
out
mov
les
in
dec
adc
or
push
adc
mov
mov
movsl
rolb
clc
gs
push
iret
sbbb
dec
in
ss
inc
and
inc
pusha
mov
or
cmp
sbbl
mov
jnp
outsb
mov
daa
dec
sti
jnp
add
iret
dec
jmp
xchg
and
xchg
stos
repz
adc
add
test
ljmp
scas
mov
shrb
daa
sub
in
adc
lock
push
das
test
sahf
push
cmpsl
sub
decl
push
out
pop
mov
loopne
imull
mov
lret
or
and
nop
mov
add
js
into
movsl
sub
fnsave
mov
les
xchg
and
ds
push
imulb
xor
imul
insl
pop
cli
and
jl
or
jp
sbb
outsl
or
mov
push
jae
negl
pusha
pop
sbb
int
stos
nop
jle
test
add
xor
mov
iret
xor
out
pop
jns
pusha
jb
in
jmp
in
pop
inc
mov
sub
adc
or
je
out
or
sub
dec
ret
mov
or
aad
out
push
inc
mov
int3
addl
xchg
lcall
mov
lret
pop
xor
pop
xchg
inc
dec
es
push
xchg
push
xor
adc
jg
cli
inc
jne
mov
pminub
sti
jge
aaa
mov
mov
push
pusha
fdivrl
pop
xchg
movsl
loope
mov
sub
shl
mov
imul
add
ljmp
aad
mov
add
xor
int
scas
clc
xor
push
and
lock
mov
or
lds
call
vcmpnltpd
dec
and
inc
inc
lds
shl
popf
xchg
adc
lods
sub
out
jns
nop
sahf
mov
mov
fidivrl
add
int
mov
out
pop
mov
xchg
repz
sbb
adcl
jno
or
dec
mov
popa
inc
dec
repz
fchs
fwait
or
andl
and
test
rorl
incb
pop
movsb
add
add
fndisi(8087
test
fadds
cmp
out
jge
je
loopne
push
push
push
pop
stc
sbb
cmc
das
test
popa
pop
mov
pop
mov
adc
sub
popf
and
scas
jge
fsubr
pop
ss
jecxz
and
sub
stos
or
mov
push
lret
fdivl
ss
cltd
jb
mov
lds
mov
jl
scas
ds
inc
pop
aas
int
inc
add
fwait
into
inc
jg
mov
mov
pop
or
xrelease
and
sbb
xchg
popa
rol
dec
mov
push
ret
sub
daa
add
and
sti
ss
push
clc
insl
pop
xchg
xchg
inc
jle
psubsb
rcrb
push
inc
inc
cmp
inc
xor
dec
fnsave
push
nop
sub
loopne
mov
les
add
adc
sbb
xchg
in
pop
vpsubw
inc
add
xlat
pop
sbbl
clc
xchg
lods
pushf
movsl
fwait
sbb
inc
jb
ret
mov
xchg
sub
or
inc
pop
pusha
add
sbb
scas
movsl
mov
fcomps
pop
lods
into
in
xchg
sub
or
out
mov
shll
int
xchg
adc
pop
sahf
pop
xchg
push
fcmovnu
pusha
add
mov
repz
push
push
gs
dec
push
arpl
sarl
test
push
push
jge
pushf
xor
inc
clc
repnz
test
in
dec
ror
mov
cli
lea
dec
mov
add
adc
inc
add
jle
or
mov
divb
orl
mov
xchg
push
push
call
cmp
xchg
or
push
push
jo
ret
jns
and
popa
fisttpll
cmpsl
lods
test
dec
cmp
rclb
ret
or
xor
out
das
pop
xchg
scas
aaa
sub
or
sbb
xor
js
data16
cmp
leave
jb
xor
into
push
or
out
dec
mov
insl
daa
sub
cld
fildl
jno
and
xchg
in
sbb
mov
neg
mov
addr16
add
std
sub
movb
js
mov
stos
cmp
push
sub
jae
jo
push
call
iret
add
push
inc
and
adc
jbe
add
dec
jae
out
popa
xchg
sbb
jle
imul
jnp
jno
stc
inc
mov
xchg
ret
adc
stos
mov
jbe
inc
xchg
clc
mov
jns
mov
test
in
jg
push
jnp
or
jae
sub
and
addr16
pop
mov
jmp
xor
adc
imul
push
jge
aas
lcall
sbb
movsb
mov
cmp
repnz
push
xchg
jg
cmp
jecxz
arpl
sub
lret
and
nop
adc
out
mov
shll
call
pop
shrl
jbe
sbb
lcall
lea
fisubrl
inc
adcb
lods
out
pop
xor
mov
ljmp
cmp
xor
xchg
jl
xlat
lods
sub
mov
sti
sub
push
call
jle
lods
jbe
mov
test
je
int3
jne
and
xchg
dec
shll
lock
int3
sbb
insb
sti
lock
or
add
add
pop
or
and
add
pop
or
push
pop
or
pop
pop
or
jb
or
mov
add
pop
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
incl
add
add
inc
add
add
add
inc
add
inc
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
xchg
inc
add
add
add
incl
add
add
xchg
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
sahf
inc
add
add
add
incl
add
add
add
add
incl
add
add
test
add
incl
add
add
add
add
incl
add
add
lods
inc
add
add
add
incl
add
add
mov
add
add
add
incl
add
add
ret
add
add
popf
rolb
rolb
incl
add
add
add
add
incl
add
add
add
incl
add
add
int
add
add
add
incl
add
add
into
inc
add
add
add
ljmp
add
inc
add
add
add
inc
add
inc
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
pushl
filds
cmp
inc
add
pushl
inc
add
inc
add
incl
add
add
jmp
add
and
out
add
incl
add
add
add
add
lcall
in
inc
add
in
inc
add
jnp
add
dec
add
cmp
inc
add
stc
inc
add
add
add
incl
add
add
stc
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
incb
add
add
incl
add
add
add
add
incl
add
add
add
add
add
call
add
add
add
add
lcall
dec
add
dec
add
call
push
dec
add
push
dec
add
jne
add
add
orl
outsb
push
gs
js
gs
imul
gs
inc
jb
popa
je
inc
imul
popa
je
inc
imul
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
je
imul
gs
add
je
imul
inc
js
je
jb
arpl
jae
inc
jb
popa
je
inc
imul
outsb
addr16
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsl
popa
fs
imul
js
add
dec
outsl
popa
fs
imul
js
add
inc
jb
gs
imul
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
insl
popa
addr16
add
dec
popa
jo
imul
insb
add
add
insl
popa
jo
imul
insb
add
je
imul
bound
gs
add
inc
gs
imul
bound
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
gs
jb
push
push
add
popa
jb
push
inc
add
fs
outsl
outsb
je
gs
jne
arpl
add
add
push
gs
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
outsb
fs
imul
gs
add
inc
imul
add
add
outsb
fs
gs
inc
imul
insb
outsl
jo
outsb
add
dec
jo
outsb
inc
imul
insb
jb
popa
add
pop
insb
insb
jae
imul
insb
arpl
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
gs
imul
insl
popa
je
outsl
outsb
inc
jns
popa
outsb
fs
add
dec
outsl
arpl
imul
outsb
insb
outsl
arpl
imul
incl
add
add
dec
add
add
add
incl
add
add
or
add
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
incl
add
add
or
add
incl
add
add
push
dec
add
add
add
incl
add
add
adc
add
add
incl
add
add
add
add
incl
add
add
dec
add
add
add
push
adc
clc
adc
pushl
dec
add
adc
add
sti
adc
add
adc
add
decl
adc
dec
add
pushl
adc
dec
add
incl
add
dec
add
ljmp
dec
add
dec
add
jge
dec
add
incl
add
add
dec
add
add
add
incl
add
add
add
add
add
incl
add
add
dec
add
jmp
addr16
add
inc
add
call
addr16
add
addr16
add
decl
inc
add
add
add
add
add
inc
pop
or
add
add
pop
or
add
add
pop
or
and
add
pop
or
push
pop
or
pop
pop
or
jb
or
mov
add
pop
or
mov
add
add
add
je
jb
arpl
fs
jae
add
int3
add
popa
insb
inc
jb
add
add
imul
jo
imul
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
add
insb
push
outsb
ja
outsb
fs
add
fs
push
dec
jne
je
inc
jns
gs
add
insb
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
jne
pop
jbe
push
jnp
push
mov
pusha
cmp
aad
xchg
out
add
push
sub
repz
insl
addr16
add
fidivl
jg
or
pushf
cmp
xchg
loope
dec
gs
dec
jbe
mov
daa
mov
dec
ret
mov
push
repz
mov
or
std
lcall
sbb
mov
sbb
test
cmp
je
jo
adc
xchg
and
cmc
xchg
push
dec
iret
into
and
or
sub
sbb
fisttps
je
push
cmp
out
stc
adc
sbb
dec
adc
cli
popa
sti
out
adc
cmp
pushf
inc
push
mov
inc
inc
lock
or
repnz
in
sti
pop
nopl
mov
pop
inc
jecxz
sbb
xlat
fwait
ret
fwait
or
int
inc
mov
dec
push
nop
inc
mov
cmp
push
add
aad
mov
jb
mov
cmp
loop
fadds
stc
sub
cmp
cwtl
xchg
pop
and
or
imul
and
inc
icebp
adc
add
xchg
push
mov
or
scas
bswap
out
inc
icebp
dec
stc
sahf
push
adc
cmpsl
pop
sub
mov
fsubrl
stc
mov
sbb
xor
lods
mov
movb
insl
pop
loopne
dec
lcall
fldcw
cmp
aaa
sbb
test
das
js
adc
and
sbb
cld
cmp
mov
jne
mov
jg
push
outsb
jmp
lret
cld
rcr
mov
lds
fimull
mov
outsb
lcall
lea
scas
jmp
sahf
pop
sahf
js
aaa
inc
xor
lds
mov
sub
adc
push
cli
mov
dec
inc
ja
pop
or
push
lods
mov
lahf
test
setge
and
adc
sub
test
lods
imul
xchg
in
dec
or
xchg
push
mov
sbb
sbb
pop
shrl
mov
gs
in
xor
enter
jge
lret
or
pop
mov
pushl
mov
dec
dec
frstor
es
movsl
push
fidivrs
in
mov
push
inc
or
out
add
pushf
cmp
movsb
push
sbb
mov
loope
insb
sub
cmp
imull
cmpsb
xor
and
rcr
cwtl
sub
xchg
cmpsl
js
sub
jecxz
jle
xchg
scas
jle
dec
pop
movb
in
sbb
lds
aas
push
sti
adc
ljmp
std
clc
pop
or
mov
xor
xchg
icebp
pop
test
aad
rol
xchg
out
push
mov
stos
push
jns
cmp
inc
inc
cmp
lods
lahf
sub
add
xor
icebp
xchg
jg
cld
jmp
je
repnz
lea
xor
es
wbinvd
cmp
mov
in
sbb
pop
fildll
cld
lock
cltd
sbb
mov
mov
sbb
outsl
pop
xchg
cmp
adc
arpl
data16
ss
ret
aaa
cmp
pop
push
cli
pusha
testb
xchg
fcompl
jnp
test
jecxz
pop
inc
inc
sbb
jg
xor
out
in
incb
lods
xor
scas
xchg
fsubl
jbe
pop
ss
insb
push
jg
in
pop
hlt
pop
mov
mov
and
cld
mov
popf
pop
rclb
std
cs
mov
xchg
jl
or
add
aaa
or
xor
jb
repnz
stos
dec
dec
mov
push
test
imul
popf
popa
push
stos
pop
ror
leave
cltd
pop
incl
fcmovnbe
inc
xchg
decl
sub
dec
mov
and
xor
dec
dec
inc
notl
add
iret
xor
adc
or
jnp
clc
aam
adc
xor
adc
add
pop
mov
and
xchg
mov
cmpsl
push
lods
out
mov
call
dec
ficoml
aaa
lret
sub
mov
aam
push
push
dec
pop
add
or
outsl
addr16
pop
mov
ds
call
repz
xor
movsb
sbb
test
mov
dec
sbb
out
stc
incb
shl
std
aad
pop
scas
pop
insb
push
leave
bound
xor
dec
ljmp
aaa
fnstenv
call
xchg
lea
and
mov
jnp
fdiv
mov
jae
cltd
push
pop
sub
scas
ret
cmp
pop
or
test
in
cmp
in
stos
pusha
xchg
test
ljmp
cmp
xchg
mov
dec
scas
jl
jns
fcmovbe
cwtl
scas
inc
das
xlat
mov
sbb
call
push
push
dec
xchg
sbbl
testb
out
leave
ret
dec
cli
dec
aas
lret
dec
clc
into
mov
sub
pop
pop
xlat
jecxz
cmp
es
mov
inc
or
inc
or
dec
aas
lcall
cld
popf
out
inc
pop
incb
leave
dec
jns
aas
clc
lret
sahf
das
mov
xchg
sub
outsb
xorl
pop
or
das
call
sar
mov
push
outsb
fisttps
cmpb
mov
mov
inc
jae
addr16
mov
fadds
add
push
inc
pop
cmpsl
stos
je
xlat
pop
dec
mov
cmp
lods
movl
out
imul
ljmp
dec
mov
cmp
dec
pusha
arpl
sub
push
nop
sbb
lret
sub
jbe
lock
test
jb
les
adc
or
add
push
sbbb
xchg
movsl
push
inc
enter
add
push
or
int
add
push
cmpsl
gs
and
loope
xchg
jl
push
sbb
add
mov
jl
add
sub
daa
add
test
cmp
push
dec
ret
cld
mov
jle
incl
rclb
sub
lods
cld
mov
and
fsts
subb
std
pop
insl
xchg
nop
sbb
jle
or
adc
mov
sti
outsb
cli
jge
aad
lret
xor
push
shlb
les
int
outsb
outsl
xor
int3
xchg
push
shrl
js
int3
mov
add
lret
scas
pop
lds
les
icebp
jl
mov
dec
xchg
xchg
jns
jb
sbb
into
dec
xchg
pop
subb
adc
loope
fcoml
mov
or
jne
shl
dec
add
mov
sahf
inc
les
jae
and
mov
mov
pop
xchg
xchg
into
gs
out
xrelease
int
or
hlt
das
js
insl
fdivl
int3
push
pop
arpl
or
imul
or
adc
sbb
rcrl
lock
movsl
xor
adc
or
mul
fucomi
std
iret
mov
aam
pop
enter
cmpsl
not
orl
push
cmp
adc
push
sub
stc
daa
test
fstpl
mov
xchg
cmp
add
in
and
push
pop
xor
mov
jmp
mov
pop
xchg
mov
ds
sbb
pushf
fsubl
fisubrl
ja
mov
xchg
push
sub
jg
jno
imul
push
cmp
arpl
sub
jno
push
or
jmp
nop
icebp
clc
pop
lods
xchg
jo
xchg
cmp
cmpsb
arpl
pop
mov
insb
dec
scas
repnz
mov
sbb
lds
mov
sarb
lret
icebp
mov
cwtl
ret
pcmpgtd
lea
jae
es
mov
cmpl
push
repz
xor
stc
jne
add
adc
sub
std
push
stos
iret
xchg
cmpsl
sbb
cld
movsl
imul
jne
sub
inc
cmp
jne
sub
loope
xlat
xlat
stc
sahf
out
xor
or
inc
xchg
or
rcrl
inc
inc
lock
xor
cmp
mov
jge
or
sarb
dec
ds
adcb
imul
mov
aad
rolb
movsl
int3
aas
xchg
jb
movsb
hlt
js
iret
xchg
sub
addr16
insb
cmp
adc
xor
cltd
push
std
popa
movsb
lods
addl
mov
jno
into
lahf
push
mov
adc
lods
mov
scas
leave
cmc
mov
lahf
call
pop
mov
sti
add
pop
lahf
js
xchg
push
pushf
xchg
lret
les
cmc
mov
neg
or
js,pn
dec
add
inc
dec
xlat
sub
inc
test
je
js
fidivrl
popf
mov
int
mov
hlt
jne
pop
loop
cmp
mov
lea
jbe
mov
movsl
stos
shlb
xchg
ficoms
mov
div
cwtl
popa
cld
clc
and
call
jge
mov
imul
xchg
dec
mov
nop
addr16
int3
test
cs
outsb
fldcw
pop
out
xchg
imul
xchg
ja
add
test
xor
cmpsl
mov
xor
outsl
push
xor
add
jae
stc
sub
dec
pop
aas
rcl
inc
mov
test
das
sbb
push
xor
jb
jecxz
sub
or
fwait
cmp
sbb
cltd
pop
push
cmp
pop
cmp
adc
nop
icebp
xor
jmp
das
hlt
dec
out
pop
mov
inc
filds
mov
loope
and
bound
call
push
push
xchg
xchg
adc
pop
pop
loop
mov
mov
hlt
xor
fcoms
sahf
mov
mov
aam
and
frndint
adc
xchg
and
imul
pop
dec
jmp
dec
pop
xchg
mov
mov
sub
sarb
lods
jge
inc
xlat
test
stos
adc
rcrb
dec
lea
mov
mov
pop
out
add
inc
data16
jne
cmp
pop
fidivs
cmp
cwtl
leave
in
pop
xchg
insb
pop
popa
sbb
movsl
out
sarl
in
sahf
ljmp
push
nop
sti
sbb
inc
jle
sub
cmp
imul
test
movsb
dec
loope
and
or
in
stc
repz
sbb
loopne
cwtl
xchg
jbe
pop
jb
fnstsw
mov
dec
mov
repz
mov
sub
inc
loop
mov
xor
dec
pop
pushf
sbb
fcomps
loope
pop
cmc
out
mov
fucomi
fwait
and
adc
sub
xor
xchg
add
test
enter
push
les
loope
in
or
in
and
mov
aam
mov
dec
cmp
cmpsl
scas
jge
sub
repnz
cmp
push
jns
iret
addl
test
xchg
inc
cli
push
sub
lcall
sti
sub
and
or
xor
mov
js
inc
sbb
jno
call
add
mov
into
sbb
inc
sbb
jmp
fldt
and
les
insl
xor
repz
xor
push
and
jp
ret
loopne
js
lods
aas
jo
out
cmp
sub
push
aad
push
test
sbb
jne
movsl
scas
aad
dec
cwtl
cmp
sub
sbb
sub
shr
and
iret
sbb
inc
adc
lods
ficoms
sub
and
xchg
xchg
stc
sbb
pop
jbe
xchg
inc
xchg
aad
sbb
add
add
mov
mov
push
pop
cmp
lret
clc
sbb
dec
mov
sub
xor
stc
sbb
mov
adc
test
test
fcompl
cmpsb
sub
shlb
xchg
out
and
outsl
aad
xchg
and
xor
inc
and
cs
dec
push
lea
sub
inc
mov
jge
stos
push
push
dec
test
push
mov
add
add
dec
push
mov
push
aad
cltd
push
mov
lcall
adc
xor
nop
out
mov
add
mov
jnp
mov
lods
mov
daa
push
in
xchg
bound
pop
mov
xor
ficomps
adc
mov
jge
lret
test
imul
jns
push
mov
cmp
dec
lcall
push
mov
fwait
pushf
mov
or
xor
out
push
and
fs
mov
push
daa
lcall
shll
adc
or
fdivrs
push
bound
cmp
ret
leave
and
leave
mov
test
cld
and
dec
rolb
or
xor
mov
std
mov
sbb
mov
into
cmc
sub
cmp
mov
push
sahf
adc
xor
adc
insb
fimuls
or
cmp
jb
jg
mov
loop
pop
sarb
mov
loop
fnstenv
repnz
in
in
cltd
shl
imul
orb
inc
shlb
icebp
outsl
add
push
addb
jecxz
iret
sub
test
iret
cmp
mov
stos
adcl
xor
sub
test
push
fiadds
aas
cwtl
nop
jns
xlat
stos
dec
orb
inc
fs
ss
fwait
pop
jno
jge
pop
mov
fmul
stc
lock
ja
or
cs
dec
mov
cmp
scas
jge
push
xchg
icebp
push
cmp
jbe
lret
shlb
mov
sub
sbb
ficoml
add
aaa
cmp
sbb
adc
xchg
mov
fs
scas
cmpsl
or
pushf
cmp
cmp
pop
add
cs
fsubs
push
xchg
mov
mov
push
subl
cmpsl
push
sti
xchg
mov
fcoml
mov
js
shll
loope
aad
inc
arpl
push
xor
and
xchg
dec
mov
test
xchg
push
jp
mov
out
loope
mov
mov
mov
jno
popa
insb
push
cmpsl
out
pusha
add
ljmp
daa
ljmp
xchg
or
inc
stos
adcl
push
xchg
xchg
sub
leave
add
bound
xchg
nop
pop
loopne
cli
aad
xchg
dec
inc
nop
fs
ret
outsl
loop
cmp
jnp
insb
ds
sahf
rol
mov
push
repz
inc
dec
xchg
enter
vcvtss2si
arpl
fdivs
cmc
adc
cmpsl
in
push
int3
iret
pop
fcmovbe
xchg
int3
outsb
cmp
mov
or
rorb
ficomps
ja
and
adc
nop
or
arpl
inc
jge
or
leave
xor
jno
ljmp
je
out
pop
cmp
ljmp
test
std
dec
xor
aam
in
mov
and
into
cld
jle
sbb
imul
pop
out
adcb
push
scas
ret
std
cmc
fcmovnb
xchg
jg
mov
add
cld
xor
sub
sbbb
shl
imulb
loop
add
dec
pop
aas
push
or
pop
push
sub
in
push
adc
adc
imul
cmp
mov
mov
xchg
push
inc
or
in
aas
fidivrs
inc
inc
mov
inc
push
ss
in
mov
out
aaa
adc
sbb
fwait
fs
pop
or
mov
mov
dec
mov
data16
mov
jb
movsb
rcll
mov
bound
pop
jnp
aam
xchg
out
mov
fwait
sub
loop
mov
insb
movsl
mov
and
aas
pop
popa
pop
ljmp
lret
jbe
in
jb
imul
jbe
mov
ja
lds
adc
sub
ljmp
mov
and
test
inc
push
sub
fidivrs
js
mov
and
popf
inc
inc
pop
aam
das
sub
out
sbb
rcrl
nop
adc
adc
aas
sbb
mov
jmp
lcall
or
imul
cltd
lea
lods
repnz
test
xchg
call
jp
dec
mov
std
mov
les
mov
and
jmp
mov
or
stos
hlt
mov
lcall
or
and
clc
inc
test
push
aas
sub
pop
dec
xor
int
or
idivb
cmp
scas
sub
push
lret
ljmp
imul
mov
fdivs
dec
jg
arpl
jmp
dec
push
scas
mov
retw
and
sub
cli
pop
jbe
arpl
test
gs
mov
aad
lret
cmp
aaa
mov
int3
and
shrl
arpl
scas
mov
repz
pop
repz
push
mov
test
popa
roll
sbb
xchg
push
xor
ficoml
loop
adc
lds
and
ja
push
out
pop
dec
mov
ja
push
mov
lock
ljmp
sub
ss
lods
test
adc
loop
cvtps2pd
enter
mov
enter
sbb
daa
sub
shll
lret
int
inc
dec
add
ja
or
hlt
adc
mov
mov
sbb
lds
mov
xor
std
aad
ja
adc
mov
popa
xlat
jp
or
cmp
sbb
mov
out
std
sbbb
sub
lcall
aaa
inc
stos
xor
xor
mov
sub
add
nop
pop
aad
mov
mov
cmpsb
gs
and
add
pusha
mov
mov
inc
jecxz
pop
sub
mov
mov
insl
mov
mov
pop
test
pop
in
iret
loopne
test
xchg
push
add
pop
cmp
addr16
imul
dec
or
cmpsl
push
fwait
xchg
jbe
xor
sbb
inc
cmp
lret
jmp
movsl
push
xchg
out
add
pop
ret
daa
bound
sbb
xchg
rcl
or
adc
test
ret
pop
shr
sbb
pop
pop
and
mov
xchg
sub
and
popa
or
inc
push
lcall
xchg
popa
inc
mov
je
or
cmpb
icebp
dec
xchg
icebp
ljmp
push
push
jmp
cmpsl
pop
jne
adc
loope
ds
addb
sbb
mov
test
add
pop
xchg
inc
lods
mov
sbb
pop
in
test
dec
mov
inc
jl
jp
xchg
sub
fs
add
cld
dec
mov
les
dec
dec
push
dec
mov
pop
jecxz
xchg
pop
cli
lods
mov
sbb
push
adc
lret
pop
movsl
inc
mov
cmp
xchg
and
pop
xor
test
in
adc
call
dec
movsl
jl
xor
testl
andps
and
pushf
pop
xchg
add
dec
xor
jecxz
iret
movl
mov
stos
enter
pop
mov
jmp
mov
jmp
and
jnp
mov
or
push
aas
push
jo
add
fbstp
in
mov
push
fsubrp
cmpsb
scas
in
mov
pop
sbb
out
sbb
stos
fisubrl
fdivrs
xchg
rcrb
pop
sahf
repnz
add
fcmovne
and
jnp
jo
pop
outsl
xchg
inc
pop
xor
sbb
jae
jg
cltd
sbb
inc
insl
int
lret
or
adc
mov
push
insb
aad
mov
add
ja
dec
shll
xchg
nop
lds
ja
add
xlat
scas
ret
aaa
xor
rcrb
mov
inc
mov
lea
stc
ljmp
sysexit
push
sub
lahf
sub
aad
mov
mov
insl
fsubrl
and
sub
mov
testb
rcrl
loop
test
cmc
fisubrs
into
adc
dec
cmpsl
daa
add
mov
dec
nop
fsubr
cmp
dec
and
xor
jle
shlb
int
mov
xchg
mov
and
adc
stos
test
and
test
sbb
jl
xchg
and
cmpsb
sbb
dec
sub
inc
ret
mov
or
jge
xor
fisttpl
mov
test
hlt
xchg
outsl
outsb
cmp
xor
mov
mov
andb
fistpll
dec
ljmp
or
jae
loope
outsb
push
in
mov
mov
add
lahf
adc
push
cmp
push
imul
out
lods
sub
popl
sub
imul
xchg
aad
pop
push
je
out
jecxz
je
pop
or
dec
fstl
mov
inc
push
filds
shrb
add
cltd
leave
rcr
mov
lea
cmp
pop
add
dec
imul
dec
mov
aaa
mov
shrl
mov
cmpsl
xchg
les
shlb
jae
mov
std
rorl
jne
push
dec
enter
jg
dec
and
push
adc
inc
fisttpl
dec
xor
and
clc
mov
shlb
or
iret
ds
addb
fwait
adc
xchg
loop
repz
sbb
push
or
fisttpll
jno
rcrb
xchg
outsl
xlat
int
lds
je
push
sub
movsb
inc
fdivl
adc
hlt
adc
push
pop
bnd
mov
dec
es
call
lret
test
xchg
cmp
inc
pop
fdivrp
fst
js
movsb
pop
sahf
xchg
out
jne
dec
popf
mov
cwtl
loop
ret
xchg
insb
iret
repz
cmp
je
add
nop
dec
flds
xor
xor
arpl
jo
in
pop
lcall
int3
sbb
out
jecxz
adc
ds
xor
mov
cltd
test
ret
xchg
lods
ja
mov
rclb
jo
enter
shl
xchg
fsubrl
loop
outsl
add
or
jp
stos
add
mov
outsl
leave
sbb
xor
cmp
mov
adc
scas
stos
sbb
loopne
and
mov
xor
push
or
fs
jl
or
ret
out
sti
push
jb
and
mov
movsl
xchg
cld
mov
jns
imulb
fcmovnu
fsts
aad
inc
aad
addl
out
mov
mov
sub
mov
rclb
scas
xchg
dec
cmpsb
lcall
cltd
jl
inc
pusha
cld
and
xchg
mov
inc
push
call
mov
ret
mov
outsl
pop
adc
loopne
mov
mov
pop
leave
ror
in
imul
std
out
adc
out
cwtl
loop
inc
push
mov
and
or
fucom
fbstp
cmp
ss
sbbl
imul
lods
jb
loope
pop
lahf
fidivrs
inc
fadd
jne
jle
cmp
pusha
xchg
sub
jmp
push
sbb
pop
lahf
ds
mov
xchg
adcb
xor
xor
aas
and
xor
push
mov
jb
lock
sbb
sbb
ss
add
fucomi
.byte
.byte
.byte
