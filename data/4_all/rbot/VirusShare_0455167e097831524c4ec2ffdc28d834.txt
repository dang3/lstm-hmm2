mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
insb
call
jb
insl
arpl
cli
jmp
lds
fscale
sub
aad
adc
xchg
ss
fdivrp
mov
outsb
inc
add
jns
adc
adc
mov
adc
pop
mov
fiadds
add
in
jecxz
pop
int
les
enter
jne
push
xchg
jo
xchg
sbb
adc
xor
test
push
mov
sbb
cs
mov
adc
test
mov
jns
xor
and
aas
adc
dec
call
addr16
mov
data16
rol
xchg
push
adc
aaa
negl
mov
mov
repnz
jae
lds
divb
rorl
sub
clc
dec
inc
out
pop
push
arpl
dec
dec
push
dec
fistpl
test
clc
push
fadds
cmpsb
cmp
data16
mov
xor
push
xor
sub
mov
gs
jmp
push
fidivrs
xchg
or
lcall
sbb
subb
cmp
lock
dec
sub
mov
pop
insb
push
sbb
insb
mov
aas
xchg
movsl
sbb
ds
xlat
loop
into
xchg
xchg
pop
cmp
sahf
xchg
and
jno
call
jl
jnp
add
addr16
leave
xchg
mov
movsb
and
sbb
sbb
jmp
adc
in
mov
stos
fiaddl
push
mov
les
pop
mov
cmp
outsl
pushf
out
push
bound
mov
rolb
sti
fildll
rcr
cmc
test
mov
jno
adc
scas
adc
mov
into
jb
daa
mov
jae
out
cmp
xor
cmpsb
push
inc
sub
mov
push
push
test
mov
test
ficoml
add
inc
adc
mov
jae
out
les
add
jbe
std
in
cmpsb
and
scas
mov
xchg
push
push
push
xor
movsb
cmp
popf
xor
jle
jnp
test
push
pushf
jge
out
imul
xchg
cmpsl
mov
in
xchg
aas
xor
sbb
sbb
cld
cmp
std
imul
out
leave
ja
rcrl
mov
mov
cmp
sbb
xor
mov
xchg
cltd
fcoms
xor
fisubrl
push
fwait
daa
aam
push
cmp
jns
lcall
jl
sbb
jno
bnd
cmp
aas
in
sub
and
stc
int
pop
out
xor
push
stos
js
test
lock
pop
fiaddl
push
sub
sbb
inc
inc
int
sub
popf
mov
cli
gs
shr
xor
cmp
push
lock
cli
pop
push
test
pop
les
dec
push
lret
mov
inc
xor
inc
dec
iret
imul
inc
popf
test
jne
sti
jb
adc
imul
add
aaa
movsb
push
test
sahf
pop
sbb
cltd
push
lret
aas
xor
jl
push
js
xor
xchg
and
movd
xorl
pop
cmp
out
mov
dec
mov
jns
popf
or
pop
sub
dec
test
jae
loopne
insl
int3
mov
push
cmp
add
sub
dec
in
xor
adc
arpl
jae
push
fucom
mov
xor
inc
xlat
and
dec
nop
test
stos
xchg
rcr
xor
mov
clc
pop
sahf
jo
not
add
leave
mov
test
mov
icebp
pop
xor
push
arpl
ror
sub
inc
pop
mov
lds
add
cmpsb
mov
fstpl
and
cltd
cmc
aas
cmp
sbbl
push
xchg
and
pusha
and
test
xchg
sub
jge
lcall
mov
dec
int3
ja
jmp
stc
adc
mov
or
mov
add
into
jle
icebp
movsb
sbb
adc
dec
pop
stos
fistl
add
pop
sbb
pop
jno
loop
and
inc
pop
or
mov
jae
sub
in
aas
popa
loope
dec
adc
jge
repnz
arpl
loop
cltd
fdivs
dec
loope
les
xchg
sti
mov
into
jo
mov
cmpsl
inc
pop
push
fidivl
int
cmp
adc
pop
cmp
in
lret
mov
fbld
sub
or
cs
fcmovnbe
mov
sahf
imul
scas
xchg
dec
sub
dec
clc
and
or
imull
int3
sbb
or
mov
jnp
adc
dec
inc
mov
pop
cmp
adc
popf
jo
ror
sub
sbb
jbe
mov
mov
outsl
xchg
adc
mov
pop
dec
dec
out
inc
xor
sbb
inc
sub
mull
or
lret
stos
sub
jno
pop
js
out
xchg
jge
stos
mov
dec
mulb
repz
mov
repnz
lea
mov
xlat
xchg
lcall
ds
xor
cltd
xchg
dec
push
adc
cld
sarb
dec
lret
in
or
cmp
cmc
shr
test
sahf
mov
ds
pop
inc
int3
in
jg
into
or
arpl
dec
movsb
clc
nop
ljmpw
jg
jp
sub
sbb
call
jmp
mov
pop
pop
arpl
cmp
popf
xchg
lock
mov
or
jo
sub
cmp
sti
mov
inc
jp
sbbl
cmp
add
jae
nop
subb
sbb
sahf
fdivl
int3
fs
and
sub
pshufw
stos
jecxz
pop
mov
push
movsb
popf
outsb
into
les
push
test
xchg
xlat
enter
dec
cs
cmc
add
stos
inc
ret
cwtl
fisubs
dec
and
push
mov
scas
ds
leave
jecxz
pop
outsl
mov
push
sub
lcall
jmp
fldl
scas
or
or
adc
sub
push
add
in
roll
pop
shrl
dec
xor
movsl
jnp
vpmovzxbd
mov
pop
push
or
mov
adc
dec
jl
std
clc
aas
mov
loopne
push
mov
outsb
jo
sbb
mov
test
xchg
mov
testl
dec
outsl
cmpsl
push
shll
stos
fdivrs
add
xchg
push
test
push
or
or
divl
pop
addb
cmpsl
loopne
sahf
cmpsl
cmp
daa
cld
dec
push
in
mov
in
in
inc
inc
or
sub
jl,pn
push
mov
jmp
pop
pop
or
in
xchg
add
pop
decb
addl
sub
or
dec
mov
jbe
adc
xor
in
mov
mov
dec
test
test
in
jl
jge
jo
sbb
push
shrb
in
sbb
std
xchg
and
push
mov
cmpsl
scas
insb
fistpll
daa
aad
inc
sbb
fstl
cmpsl
dec
lock
cli
pop
lret
mov
inc
fidivl
pusha
mov
and
dec
insb
or
jno
lcall
mov
push
inc
jge
and
cmp
add
stos
insl
mov
je
jl
mov
jb
js
dec
jecxz
addr16
xlat
loopne
jecxz
cmpb
or
ss
xchg
mov
clc
mov
dec
jno
imul
push
test
pushl
addb
or
and
nop
xchg
or
call
add
outsl
ror
adc
jns
enter
js
cwtl
inc
fisttps
je
and
inc
pop
scas
ret
das
imul
dec
mov
add
lret
xchg
mov
push
decl
dec
or
repnz
mov
gs
mov
lahf
imul
in
and
push
sahf
push
and
fldenv
mov
call
jg
icebp
aam
push
jo
mov
dec
push
loope
push
ja
bound
push
cli
adc
popf
mov
dec
pusha
mov
sub
int
inc
rcrl
adc
lret
cwtl
arpl
xchg
loopne
jge
insl
sbb
mov
dec
arpl
loope
sub
fcoms
mov
lret
fbstp
mov
mov
adc
test
sub
lods
xorb
mov
xchg
pop
rcll
mov
pushf
in
sbb
jl
pop
mov
xchg
gs
sti
outsl
es
in
or
pop
sub
jecxz
insb
mov
cwtl
fsubp
mov
lret
inc
jmp
stos
popf
in
sti
loop
sub
sub
fists
adc
sub
mov
std
filds
in
jmp
push
add
pop
inc
mov
orl
shll
or
adc
pop
push
pushf
mov
adc
mov
daa
sarb
enter
divl
into
sbb
sahf
pop
mov
daa
lret
push
ret
das
xorl
clc
xchg
fs
push
inc
add
mov
jbe
push
adc
divb
shlb
inc
sbb
scas
sub
in
or
testl
mov
in
fidivl
add
pop
xlat
add
dec
pushf
lcall
call
sub
inc
mov
cmp
inc
bound
enter
xchg
mov
enter
xor
xor
scas
xor
push
hlt
xor
test
or
fsubp
jns
aam
lea
fsubp
sbbl
jmp
outsb
jle
pop
mov
sti
push
fstpt
lret
mov
push
mov
and
in
rorl
ds
mov
fisttps
out
sub
cmp
add
ljmp
inc
or
fistpll
mov
insl
push
stos
cltd
test
fucomip
mov
push
loope
iret
clc
mov
ljmp
jno
xchg
fwait
sub
outsb
push
or
ss
outsb
inc
pop
push
jl
ljmp
mov
jns
mov
xchg
mov
mov
mov
into
sbb
dec
cmc
shl
scas
add
nop
std
aad
jne
xchg
or
mov
stos
rcrb
mov
dec
daa
in
repnz
jg
pop
xchg
xchg
rorb
rcr
jae
out
sub
add
test
les
addr16
icebp
add
ss
bound
pop
lods
push
mov
mov
lds
je
testl
cs
mulb
stos
add
aaa
push
fsubl
sub
add
add
shrl
mov
rcrb
out
movsb
aam
xchg
sbb
cmp
adc
mov
dec
dec
pop
movsb
imul
lods
cwtl
fisubl
divps
es
mov
jb
pop
push
loopne
lret
cmpsb
xchg
and
xchg
iret
and
sahf
nop
lcall
dec
xor
cmpsb
and
orw
xor
adc
xor
mov
push
movsb
jo
adc
or
add
jae
mov
mov
les
sti
aad
cmpsb
fwait
into
dec
inc
mov
inc
call
mov
cwtl
lods
stos
std
push
inc
dec
mov
xchg
stos
sub
sub
and
mov
jns
fldcw
bound
adc
sbb
std
rclb
and
mov
add
int3
outsb
out
or
das
clc
pop
xor
mov
push
or
sub
sub
or
or
scas
xor
jbe
mov
jle
dec
cmpsb
inc
push
adc
cmp
cmp
int
js
jbe
ds
scas
mov
pop
pusha
push
repz
cwtl
dec
es
sbb
adc
jle
sub
das
and
fadd
mov
cld
adc
leave
adc
stos
mov
xor
loop
mov
dec
mov
dec
xor
out
lret
shll
lcall
push
inc
ficomps
data16
test
pop
jae
xor
jo
xchg
inc
nop
xchg
xchg
adc
lods
incl
loop
inc
dec
test
mov
fistpl
in
mov
push
or
dec
movb
dec
pop
repz
clc
pop
mov
pop
rcrb
sbb
jo
je
sub
pusha
sub
loop
mov
mov
or
enter
or
inc
repnz
xor
xor
cmp
xchg
test
enter
add
and
or
test
xchg
xchg
push
js
fbld
pop
ficompl
and
mov
fldl
xor
clc
xchg
dec
fnstenv
into
xor
pop
pop
out
xor
loop
sarl
mov
dec
es
dec
sub
cmpl
push
inc
add
push
sti
adc
fcmovb
shll
rclb
xchg
push
out
or
pop
js
jl
lahf
xorl
and
adc
jmp
xchg
int3
insb
jno
cwtl
repz
shlb
cmp
lods
stos
popa
stc
xor
jmp
adc
push
pop
mov
lea
aas
add
stos
cs
data16
int3
push
popa
inc
mov
movsb
mov
mov
scas
mov
out
frstor
inc
jbe
add
pop
outsl
icebp
out
xchg
mov
pop
in
push
outsb
icebp
cmp
scas
loope
lods
xorl
in
dec
ljmp
test
or
pop
dec
jg
stc
sbb
pushf
inc
les
insl
xchg
shll
inc
inc
xchg
mov
dec
leave
push
sub
add
mov
mov
stos
into
sbb
xlat
dec
xorps
xor
ljmp
xor
mov
mov
mov
insb
inc
iret
sub
out
ret
cmp
test
jae
ret
mov
mov
sbb
das
add
mov
cwtl
push
xchg
mov
dec
cmpl
test
or
movsb
imul
sbb
ljmp
iret
int
subb
divl
leave
or
push
inc
push
inc
out
aaa
inc
inc
mov
mov
rcll
call
clc
mov
xchg
movl
lahf
call
lods
jl
call
iret
inc
mov
and
xor
rcrl
dec
stos
or
rcll
jg
dec
dec
xor
inc
dec
sbb
lods
jmp
filds
mov
pop
jp
lret
mov
jecxz
clc
imul
enter
mov
sbb
mov
repz
mov
sbb
jge
sub
push
pop
or
lret
shl
bound
ljmp
mov
add
ja
adc
inc
jo
imul
push
in
push
xor
sbb
pop
hlt
iret
mov
jp
mov
xchg
xchg
js
sub
cli
int3
adc
and
clc
xor
push
icebp
aaa
daa
xor
inc
xor
ljmp
ljmp
aam
les
cld
mov
popa
xor
bound
leave
jecxz
out
mov
loopne
add
scas
add
shlb
push
in
call
sub
aad
fs
popf
sub
std
pop
push
mov
pusha
out
dec
ljmp
iret
cmp
sbb
and
ret
lahf
into
insl
js
and
mov
xor
push
adc
adc
ljmp
pop
sub
xlat
enter
inc
pop
and
jp
xor
cmp
add
push
ja
push
fisttpl
lahf
dec
xchg
jo
and
dec
pop
mov
dec
cmp
filds
jb
push
dec
icebp
shrl
cmpsb
jno
popa
adc
xor
inc
push
pop
ja
ljmp
testl
mov
addr16
inc
xlat
enter
xchg
jns
clc
pop
or
mov
add
fldcw
xor
mov
xor
arpl
adc
or
inc
mov
in
xchg
mov
mov
jle
cwtl
push
adcl
aas
push
mov
subl
jns
xchg
pop
fs
lods
pop
mov
mov
lahf
inc
lret
fmuls
movsl
shll
xorl
push
xchg
jbe
aam
cwtl
clc
or
fildll
std
cs
loop
xchg
mov
data16
aad
ds
mov
pop
pop
int3
pop
jno
adc
jmp
cmp
cmp
sar
push
nop
dec
jbe
xor
clc
test
dec
outsl
xchg
movsl
scas
pop
or
jmp
lea
or
push
sbb
and
out
inc
pop
dec
jmp
ljmp
scas
psubq
push
aaa
cmp
leave
popf
pop
in
add
push
xchg
inc
mov
fwait
ss
push
xchg
out
lcall
sub
imul
imul
lock
call
jbe
xchg
dec
inc
rolb
xor
std
adc
jno
push
in
inc
mov
loope
insb
loopne
jmp
add
xor
in
dec
jmp
cmp
shlb
sarl
enter
mov
lret
jo
das
push
pop
das
hlt
pop
and
pop
std
das
sub
mov
dec
add
loopne
inc
cmp
roll
rclb
insl
call
outsb
add
push
in
in
push
sbb
add
adc
hlt
aam
cmpsb
movsl
mov
in
xchg
jb
mov
push
mov
xor
dec
fld
jne
sub
adc
cmpsl
ret
cmp
inc
leave
sub
xor
inc
stc
ja
or
mov
or
or
clc
xchg
dec
sbb
fwait
ljmp
ds
push
mov
addr16
mov
pop
popa
and
xor
jp
push
mov
xchg
div
lock
pop
movsb
scas
pop
in
push
aam
and
lahf
dec
mov
jae
decl
or
or
hlt
jl
je
adc
jge
loop
xchg
dec
inc
or
inc
and
cmp
fdivrs
pop
cmp
fstpl
add
bound
test
gs
icebp
loopne
flds
cwtl
mov
loop
or
mov
in
movsb
mov
pusha
es
hlt
dec
and
inc
mov
cld
xchg
movsb
sarl
fisttpl
inc
mov
gs
push
mov
data16
mov
add
sahf
xor
jo
mov
arpl
xlat
and
lds
hlt
adc
out
test
cmpsl
lods
fidivrl
dec
fs
gs
cltd
shlb
gs
mov
insb
dec
or
pop
mov
or
jl
add
ljmp
xor
fidivrl
je
rcrl
pushf
add
pop
pop
imulb
xor
insl
jg
das
push
add
jo
aam
aad
mov
sahf
jnp
add
jmp
sbb
and
loop
popf
loopne
pop
ljmp
xor
and
test
aad
loop
fisubs
scas
and
jbe
ficoml
test
lcall
adc
pop
push
sub
push
adc
jmp
sub
rorb
xor
xchg
rcrb
fisttpl
adc
enter
fisttps
or
sbb
out
imul
int
lods
popl
popf
stos
iret
push
ds
in
fnsave
jne
add
cmpsb
sahf
fwait
mov
push
outsl
cltd
jge
jo
sub
sbb
dec
out
mov
jo
cmp
iret
shrb
add
adc
loop
orb
ljmp
mov
sub
jno
or
imul
or
cmp
mov
lods
push
pusha
mov
dec
jno
sub
int3
dec
adc
push
jb
lret
pop
repz
xor
jge
loope
insl
test
adc
lods
rcll
mov
mov
scas
xorb
and
fisubs
xorb
add
stos
adc
or
cmp
mov
lods
sahf
sub
push
push
cmp
mov
ss
jecxz
sbb
shl
mov
lock
and
mov
and
mov
push
fwait
pop
xchg
dec
fstps
es
enter
xchg
sbb
or
fidivl
daa
xchg
add
xchg
xchg
add
pop
nop
lahf
add
vpsadbw
inc
insb
xlat
mov
mov
sub
adc
fwait
das
jge
add
push
jmp
pop
in
mov
ds
mov
in
imul
fcmovnbe
insb
inc
xchg
movsb
rcrb
and
add
xchg
mov
add
dec
ja
pop
lcall
push
xchg
push
fidivl
sbb
push
repnz
popf
inc
mov
mov
push
icebp
inc
subl
inc
cli
sub
lcall
roll
push
repnz
mov
jne
test
push
xchg
dec
push
add
xchg
enter
sub
mov
mov
pop
xchg
dec
aam
fisubrl
insb
or
inc
lahf
sub
mov
jmp
pop
push
cmpsb
dec
pop
jne
push
sub
jg
mov
jo
mov
insl
push
fstl
out
stos
mov
pop
addr16
fsubr
fs
add
psubw
movsl
fistpl
sti
ljmp
xor
mov
out
adc
xchg
in
cmpsl
das
pusha
xor
add
mov
clc
mov
fildll
pop
mov
xor
mov
xchg
jecxz
cmp
push
int
in
inc
arpl
mov
push
sub
cmpsb
or
pop
iret
push
das
push
loopne
pop
pop
xchg
cli
dec
and
mov
into
mov
divl
test
clc
inc
test
cmpsb
and
pop
subb
pop
xchg
iret
push
xchg
jbe
aad
into
push
adc
out
or
jns
mov
in
out
out
add
mov
jnp
outsb
testl
rorl
sbb
clc
sbb
fcomps
push
enter
jl
andb
fnstenv
andl
or
in
inc
out
sub
clc
push
pop
andl
ficompl
rclb
imull
pop
push
pop
arpl
je
mov
pusha
addr16
add
add
pop
sbb
push
stos
nop
in
imul
inc
sub
push
dec
movsl
sub
cmp
mov
aad
int3
cmpsl
push
jg
notb
aam
xlat
jmp
shrl
add
aam
mov
fadds
loope
fwait
shrl
stc
xchg
sub
or
inc
test
lcall
lods
adc
stos
xor
push
in
icebp
je
xchg
js
and
mov
ja
push
mov
orb
scas
les
dec
xchg
outsb
arpl
fildll
test
lods
adc
pop
xchg
aad
in
clc
jno
xchg
or
mov
inc
xchg
mov
pop
dec
sti
mov
dec
les
push
ficomps
xor
adc
push
xor
push
movsb
jmp
lcall
movsl
rol
jnp
shll
test
and
pop
mov
js
les
push
xchg
mov
stc
dec
ret
sbb
sbb
adc
push
sub
fstps
or
std
loope
mov
mov
adc
stc
insl
mov
addr16
mov
cmp
mov
arpl
sbb
push
jns
pop
push
mov
push
ret
cld
mov
jno
sbb
xor
mov
pop
jge
jmp
xchg
cs
outsl
add
notb
cwtl
or
cld
or
imul
sub
xchg
icebp
mov
jecxz
fstl
in
dec
dec
mov
mov
sub
lock
jle
mov
inc
mov
cmp
mov
jno
jo
sbb
mov
xchg
jmp
push
mov
push
push
bnd
push
test
lahf
mov
add
fsubs
scas
and
push
mov
cmp
arpl
sahf
cmc
lahf
mov
sub
or
cmpsb
loopne
mov
bound
cmc
stc
add
shll
mov
mov
lret
subl
in
xor
adc
out
vmovq
ljmp
sub
mov
sbb
lds
push
push
stos
loopne
xchg
das
inc
cltd
jae
out
fdivl
andb
leave
mov
imul
mov
pop
mov
movsb
cmp
cmp
psubw
jbe,pt
adc
xor
loope
je
test
lea
test
fcoml
sub
xchg
lea
shrl
in
aad
fldl
cmpl
cmpsl
cmp
setne
mov
add
or
dec
pop
mov
push
out
xor
inc
push
flds
and
lret
or
sub
xchg
xchg
mov
jg
cmp
add
dec
lcall
popf
mov
mov
or
into
and
imul
cmpsl
xchg
xor
aaa
insb
cmp
dec
nop
mov
ja
sti
sbb
dec
scas
daa
aaa
pop
xchg
ljmp
aad
mov
jae
addl
and
insb
mov
movsl
in
roll
cld
sbb
add
shlb
fisubrs
icebp
in
cmp
mov
dec
mov
and
push
psllq
xchg
std
jae
sub
pop
insb
or
clc
or
push
push
or
sti
pop
mov
addb
loope
movsl
pop
int
pop
mov
push
mov
daa
push
les
call
adc
stc
mov
mov
fidivs
jo
fcoml
movsl
xorl
les
and
cmc
xchg
jo
outsb
imul
movsb
loop
mov
adc
int3
xchg
jbe
and
ficompl
pop
mov
enter
dec
clc
bound
pushf
inc
scas
cmp
dec
xor
jnp
imul
js
mov
insb
sbb
push
xchg
nop
cmpsl
jmp
xchg
fcmovnu
rol
test
es
fsubrs
jae
or
and
pop
ja
sub
iret
push
mov
dec
testb
xchg
pop
test
mov
jecxz
insl
insl
mov
fmuls
mov
jle
sti
mov
xor
aad
lahf
pop
mov
add
cmp
push
icebp
mov
jge
pop
ja
jns
add
fidivrl
sub
inc
aas
insl
leave
pushf
popf
mov
daa
jmp
cmpsl
ficomps
mov
jl
adc
cmc
popf
mov
lods
fsubrs
ret
arpl
sbb
sarl
cmp
mov
xchg
les
sbb
mov
xor
js
xchg
mov
push
cltd
adc
pop
clc
jl
arpl
insl
stos
push
rclb
cmpsb
push
pop
fucom
cmp
mov
pop
sub
aad
shr
lods
xor
xor
adc
mov
jb
jl
nop
aas
xchg
or
mov
xchg
leave
pop
jl
adc
push
into
push
fnstsw
je
in
mov
sub
xor
push
aad
xor
xor
pop
leave
or
sub
sbb
or
xchg
ret
inc
mov
fsubrs
push
mov
daa
inc
dec
xor
jo
mov
adc
out
mov
dec
dec
aas
mov
adc
fildll
lret
and
pushf
xor
mov
pop
xchg
xorl
xchg
cmpsb
sar
sub
xlat
inc
imul
lds
xor
imul
or
push
dec
stc
or
or
sbb
inc
pop
pop
out
sbb
lret
mov
lret
cmpsl
out
mov
test
mov
shl
into
movsb
jge
xchg
or
loope
dec
mov
xor
jl
xchg
jmp
out
inc
add
test
movsb
jo
fadds
sub
xchg
and
int3
jp
jg
enter
movsl
mov
jmp
cwtl
mov
pop
fdiv
cmpsl
jae
ljmp
pushf
loop
lods
dec
fstpt
lods
xchg
mov
push
push
sahf
jle
dec
fstpl
sub
jbe
lods
mov
push
adc
sbb
push
popf
int3
xor
sub
adc
mov
ffreep
dec
cmp
ljmp
push
das
mov
mov
or
or
lds
mov
adc
add
dec
in
jp
and
arpl
push
sbb
sbb
adc
jbe
out
icebp
adc
dec
cs
xchg
loop
popf
sahf
sub
or
cmp
dec
dec
test
dec
jnp
mov
pushf
mov
push
outsb
addl
das
push
push
cmc
fcomps
ja
outsb
and
xchg
out
cmp
out
and
xor
xor
test
add
ljmpw
orb
test
pop
push
aam
and
dec
or
mov
fimull
rorb
lahf
test
cmpsb
jecxz
loopne
cs
shll
push
std
pusha
fnstenv
negl
in
pop
sti
push
aas
fcom
mov
bound
push
and
mov
imul
int
rol
mov
dec
fs
add
in
pushf
sub
fs
fildll
in
fidivrs
imul
jno
inc
sbb
inc
movsb
pushf
sbb
mov
sub
cli
xor
add
mov
out
pusha
sbb
add
sahf
dec
pop
ffree
sti
dec
adcb
inc
scas
ret
and
sarl
mov
lods
cmpsb
xchg
pop
inc
sbb
push
scas
dec
ds
push
mov
mov
lret
xorb
mov
xchg
sahf
dec
push
inc
mov
movb
or
outsl
inc
cltd
test
lret
mov
sahf
cmp
push
dec
adc
ss
shll
sub
mov
sub
pushf
add
cmp
lds
outsb
adc
sbb
mov
clc
out
pop
and
stc
xor
shrl
mov
test
dec
in
mov
jmp
inc
pop
pop
xor
mov
pop
cli
idivb
adc
test
mov
mov
jo
pop
sbb
aas
je
or
cmpsl
repnz
ja
inc
dec
jne
cmpsl
mov
lea
int3
push
aad
fwait
pop
test
jl
adc
dec
sub
pop
lds
inc
jmp
cmp
mov
jg
dec
fs
xor
lret
jp
mov
mov
rclb
sub
adc
notl
popf
xchg
js
mov
out
ljmp
orb
shrl
lods
aad
rcrl
hlt
pop
pop
popa
add
mov
cltd
mov
jae
mov
push
scas
mov
jle
int3
fists
push
and
xchg
test
adc
mov
pop
dec
mov
int
cld
pop
lret
xor
xchg
testl
stos
out
fildll
and
mov
sbb
fwait
mov
or
mov
test
aas
xor
rorl
addr16
inc
xor
or
or
or
cmp
pop
imul
fwait
jp
xchg
push
sbb
jo
movsl
aam
add
inc
mov
mov
cli
into
out
add
or
outsl
push
pop
pop
cld
push
arpl
adc
flds
push
jl
jge
or
movsb
cmp
add
ret
xor
stos
mov
mov
call
push
sti
dec
popa
push
out
pop
xchg
lds
xchg
aaa
xor
popf
stos
or
cmpl
mov
mov
shl
push
adc
cltd
in
push
pop
clc
and
adc
data16
pop
outsb
icebp
push
rcrb
xchg
adc
sbb
clc
aas
aaa
mov
inc
push
cmpl
xor
and
xchg
inc
fst
mov
popa
mov
fmuls
mov
and
clc
lret
sbb
loopne
and
mov
sti
xchg
lock
pop
mov
pushl
sub
dec
or
inc
adc
cltd
adc
es
add
pop
cmp
mov
cwtl
mov
and
shlb
or
inc
push
js
xor
mov
orl
in
ret
clc
lret
xlat
jmp
dec
xchg
mov
dec
xor
stos
jl
cli
out
in
iret
ret
push
ljmp
mov
or
adc
adc
rorb
pop
mov
movsl
pop
inc
push
xchg
jmp
dec
inc
hlt
test
inc
daa
gs
adc
cmp
or
out
sbb
dec
cmp
repnz
mov
scas
mov
mov
dec
div
lret
mov
mov
and
xchg
sbb
loope
push
jnp
jnp
pop
iret
dec
add
cmpsl
sub
mov
enter
lahf
hlt
cmpl
cmp
xor
lds
lock
xor
iret
popf
daa
iret
rclb
xchg
mov
dec
jg
xorl
gs
sbb
mov
dec
or
shlb
sbb
or
dec
pop
test
repz
das
xchg
nop
jle
xor
or
xchg
mov
outsl
mov
test
mov
mov
sub
testl
out
xchg
in
das
push
das
test
xor
mov
in
insl
inc
mov
mov
cmp
push
lods
jns
mulb
dec
adc
aaa
scas
jo
andl
push
xchg
je,pt
dec
push
sbbb
ja
xchg
xor
rcrb
xchg
les
insb
std
push
cmp
push
std
lods
xor
adc
cltd
cpuid
out
push
xchg
mov
mov
aam
xchg
sbb
and
divl
aas
xchg
fisubl
dec
or
incl
xor
addl
mov
sbb
aaa
push
add
jae
push
adc
arpl
fistpl
aad
ret
popf
push
enter
mov
pop
loop
push
icebp
xchg
in
or
and
mov
xchg
sub
test
aad
std
mov
push
sti
jl
test
and
imul
push
mov
cmc
das
movaps
ss
lds
ret
inc
jnp
adcb
rcrl
lahf
lea
xlat
lret
and
rclb
push
jge
adc
daa
add
xchg
lods
ss
cmpsb
cmp
sub
inc
pop
ss
cmp
mov
xchg
aad
test
loope
push
out
push
dec
push
sub
cmc
cmpsl
mov
inc
ja
out
jo
scas
stos
mov
iret
xor
fucomip
jg
jno
adc
sub
push
dec
in
lods
cmpsl
add
and
sbb
xor
push
pop
jmp
aad
mov
inc
xchg
cwtl
lret
xlat
movsl
shrb
sbb
xor
bound
xchg
loopne
loopne
ja
sbb
das
sbb
add
lcall
xchg
pop
jb
rorl
dec
inc
sti
cld
mov
xor
pop
push
and
stc
jle
stos
add
fdivrl
sbb
mov
ret
aad
adc
mov
cmc
sbb
popf
fcomps
mov
jp
inc
jmp
insb
push
and
cwtl
ljmp
js
pop
push
push
cmpsb
sbb
rolb
cmc
nop
gs
and
psadbw
pop
dec
xchg
or
out
adc
dec
adc
push
into
mov
inc
jl
jne
pop
pop
push
inc
xor
cmp
in
fs
and
fisttps
faddl
cwtl
in
add
mov
jge
add
mov
daa
test
push
aad
popa
outsw
xor
nop
iret
cli
mov
pop
pop
cmp
xor
jl
add
insl
pop
or
lahf
cmpl
shl
xorb
pop
jmp
jbe
inc
shlb
cmc
mov
push
adc
sbb
out
cmp
adc
jecxz
jbe
mov
in
add
lcall
jne
lods
adc
push
push
aam
xchg
inc
fidivl
jg
or
inc
aas
fcmovnbe
mov
das
popf
cmpsb
xchg
ljmp
dec
cld
leave
shrb
dec
lret
mov
aas
lahf
rcl
push
jnp
dec
xor
lret
mov
stos
call
or
pop
adc
adc
mov
das
mov
rclb
jle
sub
push
dec
adc
test
dec
inc
enter
or
xchg
jns
push
movsl
ljmp
mov
test
add
add
mov
or
cmp
push
xor
cmp
cs
inc
icebp
das
ljmp
pop
push
xchg
xchg
add
fnsave
insb
enter
lahf
jnp
out
dec
pop
lret
inc
arpl
dec
jg,pn
or
xchg
jae
outsb
js
mov
aas
fcompl
and
fs
push
je
jg
mov
pop
sbb
mov
sbb
ret
test
shrl
adc
cltd
dec
sub
addl
cs
in
cli
aaa
arpl
lret
xchg
test
loopne
dec
pop
orl
mov
lea
cmc
jb
and
addr16
inc
jp
leave
push
pop
mov
out
lea
subb
jl
push
rcrb
and
cli
cmpsl
cmp
cmc
jb
jle
cmp
test
movsb
sbb
mov
int3
mov
cmp
ss
stc
pop
sub
mov
pushf
leave
mov
jno
aad
mov
mov
mov
pop
pusha
inc
jl
xchg
push
lcall
sbb
fs
mov
sahf
xchg
je
jmp
mov
xor
cmp
inc
push
or
out
jb
pop
or
enter
ret
push
dec
sti
sub
loopne
notl
xorl
sub
fs
fmuls
ljmp
and
inc
dec
push
frstor
xchg
jg
adc
adc
xchg
leave
add
xor
mov
mov
dec
movsb
pop
mov
push
cmp
xchg
std
fdivl
int3
bound
sbb
push
mov
pxor
fsubs
xor
jnp
dec
pop
clc
into
fldenv
cmp
mov
inc
rorl
xor
cmp
negb
pop
scas
icebp
inc
jne
xor
mov
sbb
cmpsl
out
rclb
movsb
mov
sbb
lret
fiaddl
cmpsl
jmp
into
xor
es
jo
mov
xor
pop
dec
bnd
stos
mov
mov
cmp
sub
push
andb
lock
sbb
cli
cs
mov
ss
jno
cmp
push
daa
mov
pop
test
ret
cmp
and
pop
jmp
clc
inc
and
leave
fcmovu
mov
aaa
mov
test
out
or
mov
mov
dec
fisubl
jbe
inc
add
adc
jbe
loope
and
or
adc
je
fldcw
enter
add
dec
ss
pop
roll
push
or
call
adc
xchg
call
mov
lea
dec
mov
jecxz
xor
push
fisttps
xchg
out
mov
loop
aam
pushf
scas
inc
mov
clc
pop
xchg
aas
in
lret
movsb
cmp
fcoml
mov
jecxz
dec
fnsave
mov
pop
adc
dec
or
enter
cmp
cmp
dec
and
and
into
or
mov
and
das
gs
pop
and
and
ret
xor
in
sub
aad
out
sti
xchg
ret
fists
cmpl
mov
mov
xchg
xor
ret
ja
push
mov
xchg
jbe
xor
xchg
fs
jns
mov
popa
adc
sub
lret
ja
inc
fninit
mov
aaa
ljmp
push
fmull
shlb
sbb
and
lock
or
xchg
bound
push
push
jge
inc
das
inc
sbb
das
mov
xor
adc
out
lods
pop
cmc
cmp
mov
cmp
es
push
and
fcompp
stos
out
jmp
mov
push
cs
in
dec
cli
insl
sbb
test
xlat
lea
add
push
call
outsb
js
mov
adcl
insl
movb
pusha
xchg
imul
jno
out
lods
jmp
rorb
mov
in
nop
xor
loop
nop
push
adc
cmp
inc
loop
push
jae
jmp
pop
push
push
leave
idivb
push
mov
stos
mov
dec
push
jb
pop
jno
sbb
aaa
sub
or
lret
jbe
icebp
jmp
imul
pusha
jg
push
mov
xor
cltd
fwait
jb
push
adc
test
xchg
cld
xor
ret
dec
js
insb
cmp
pushf
cmpsl
pop
pop
shl
mov
jno
pop
inc
cmp
mov
ret
ja
inc
dec
pop
xor
mov
repz
and
pop
cmpb
cli
sbb
jecxz
push
mov
xor
xchg
loopne
inc
out
orl
lret
imul
add
mov
xchg
mov
pop
fsubrs
and
js
pop
leave
pusha
icebp
lcall
sbb
dec
flds
cwtl
movsb
add
xchg
fstpl
imul
out
loop
ficoml
fwait
push
dec
enter
inc
xchg
popf
pop
push
pushf
popf
mov
and
cmpb
outsl
test
mov
dec
jp
lcall
arpl
push
push
mov
insl
fisttpll
inc
mov
scas
outsb
arpl
gs
cmp
scas
or
dec
in
into
aas
or
adc
and
jnp
es
sub
push
jbe
mov
cmpl
sqrtps
and
cli
inc
inc
clc
fnstsw
add
pop
int3
mov
movsl
mov
or
sub
adc
xchg
and
arpl
xor
andl
stc
jne
int3
gs
sub
push
int3
insb
mov
xor
je
out
mov
mov
hlt
push
cmp
sbb
jmp
sbb
jmp
adc
arpl
xor
xchg
push
ret
or
mov
push
jle
les
mov
popf
mov
or
pop
mov
and
mov
jg
jnp
addr16
out
jno
jno
mov
jl
subb
flds
add
dec
data16
cli
adc
push
nop
rclb
jne
fildll
dec
les
lea
push
int3
and
imul
push
jecxz
loope
das
gs
inc
sub
fmull
xchg
test
xor
and
aas
mov
sub
inc
gs
adc
leave
sub
jne
inc
dec
lods
orb
data16
adc
adc
popa
push
jl
outsl
rcrl
jae
fidivs
movsl
jg
test
sbb
dec
insl
out
jbe
sbb
or
fldz
sbb
pop
data16
insl
outsl
imul
into
cmc
add
pop
outsl
sbb
cmpsb
push
inc
in
xchg
push
mov
loope
jbe
xchg
gs
outsl
cmpsb
lods
into
loope
call
cmpsl
fbld
ja
and
or
int3
stc
xchg
sbb
out
inc
testb
jo
rcrl
addr16
cmp
adc
fsubs
stos
sub
aaa
pop
inc
and
dec
shl
and
daa
add
jp
test
sysexit
repnz
addr16
int
xor
loop
popa
mov
adcb
lods
mov
mov
hlt
lds
jne
adc
fildll
adc
or
inc
and
xchg
lret
adc
std
inc
dec
test
add
fnstsw
push
pop
imul
movsb
test
xor
and
jg
cltd
sub
mov
mov
in
push
inc
mov
movsl
xor
out
jg
dec
pop
mov
fsubr
insb
pusha
mov
xor
xor
xchg
adc
ror
js
loop
mov
aaa
dec
inc
fst
cmc
jmp
xor
jge
lds
xchg
jnp
lods
jo
mov
mov
popf
enter
addr16
jae
push
add
jbe
mov
in
lock
push
dec
cmp
jbe
aas
inc
sbb
and
daa
mov
push
pushf
shll
fiadds
push
mov
fstpl
xor
inc
xchg
outsl
push
pop
mov
sub
xchg
jg
out
adc
xor
inc
jnp
outsb
in
leave
ret
jecxz
pop
xchg
add
push
dec
mulb
and
and
jg
fs
xchg
jp
pop
jne
imul
pop
aad
push
out
loope
pop
loopne
jle
imul
lea
fistpl
cmp
push
cmpsl
lods
in
ja
outsl
movsl
xchg
adc
jmp
fwait
lods
sub
jge
mov
xchg
cltd
mov
scas
cmp
xor
add
out
out
imul
mov
stc
cmpsb
push
pop
sub
je
popf
lea
inc
int
in
in
pop
xchg
jo
stos
out
dec
push
cli
lahf
pop
and
push
cmpl
inc
xchg
repz
aaa
mov
add
jge
dec
pop
mov
add
addr16
sti
push
mov
xchg
je
arpl
jnp
test
push
xor
xchg
xchg
mov
cmp
pop
push
icebp
ds
xchg
fdiv
data16
mov
outsb
mov
mov
adc
int3
lret
pusha
std
dec
shr
pop
add
adc
call
pop
adc
cmp
pop
in
inc
jp
mov
mov
negl
push
or
lret
and
loop
pop
dec
sub
xchg
mov
jae
popf
je
cmp
mov
mov
mov
movsl
outsl
jne
frstor
mov
loope
outsl
xor
sub
and
and
sub
repnz
xor
or
xchg
pop
xchg
mov
xchg
scas
xchg
jmp
pushf
aas
mov
sti
mov
rcrl
lret
dec
out
in
mov
xor
pop
mov
jmp
inc
test
lcall
aad
out
dec
inc
jg
lahf
jmp
in
jno
rcrl
jno
out
lret
rorb
mov
mov
jge
mov
or
pop
and
dec
pop
mov
jl
in
scas
push
fsubrs
fimuls
dec
ds
jnp
cli
and
shrb
xor
imul
mov
xor
jno
jle
xchg
jl
and
cmp
or
inc
dec
jns
sub
xchg
into
or
jns
xchg
sbb
pop
jno
stos
pop
fisttpl
std
mov
xchg
mov
cmp
cmp
outsl
dec
mov
xor
push
pushf
out
xor
outsb
cmpsl
lods
mov
and
stos
xchg
shrb
sarb
cli
cmp
jb
jo
pop
in
sysret
and
push
stc
xchg
jo
xchg
int
sti
mov
mov
out
imul
or
dec
nop
iret
test
daa
jae
loope
mov
ss
out
jne
and
out
push
shrb
and
rcrl
xchg
or
sarb
jae
mov
test
icebp
sbb
mov
sbb
stc
xor
and
fstp
in
add
repz
xchg
mov
sbb
jmp
add
mov
sub
mov
popf
loopne
cmp
popa
mov
or
out
out
jb
arpl
push
lods
inc
faddl
dec
lahf
enter
xor
incl
mov
pop
xlat
push
les
aad
fidivl
jge
push
jo
mov
pop
jle,pn
arpl
js
mov
jnp
inc
popa
jl
je
aad
push
lods
xchg
adcl
or
shll
cli
shr
push
mov
mov
lods
and
push
repz
pop
xchg
xor
xor
jecxz
int
stos
xchg
pop
mov
cmc
jb
jno
xor
mov
daa
jnp
cmpsl
jp
and
inc
xchg
es
cld
pop
push
and
scas
mov
and
out
mov
cwtl
mov
jo
mov
xorb
rclb
es
xchg
fildl
rcl
pop
mov
push
stos
pop
outsl
out
dec
mov
sets
adc
or
lret
add
pop
pop
add
repnz
mov
test
push
je
popa
insb
rcrb
pop
add
in
lea
pop
loope
lret
push
sub
add
xchg
sbb
cld
mov
jno
xlat
ja,pn
ljmp
jns
push
int
cltd
pop
in
xchg
ret
lcall
out
and
sbb
sbb
inc
push
ficoms
mov
push
repz
fs
pop
out
popa
ja
add
jl
pop
push
cmc
mov
test
aaa
loop
out
dec
into
xor
pop
cmc
pop
fld
lahf
adc
cwtl
sub
pop
mov
das
lahf
hlt
sti
enter
adcb
dec
jae
dec
cmpsl
in
lret
or
scas
shl
aam
stos
loope
cmp
cmp
movsb
jg
aaa
imul
bnd
stos
xchg
imul
mov
lods
mov
and
pop
imull
test
adc
adc
pushf
and
xchg
mov
repz
int3
mov
lea
shll
mov
faddl
jge
imul
dec
cld
outsb
xor
push
pop
fsubs
xor
inc
aaa
addb
push
incb
imul
xchg
cmp
arpl
and
push
sbb
pop
idivb
push
repnz
push
mov
add
inc
in
jbe
xchg
dec
stos
sub
jo
add
inc
fcoms
sar
mov
add
sub
fisttps
bound
sbb
jg
inc
pop
fsub
xchg
out
lds
dec
sub
or
loop
sbb
pop
jb
idiv
cmp
popf
shld
adc
pusha
loopne
xor
xor
int
lock
call
add
std
pop
cwtl
pop
ret
pop
lcall
ja
popa
mov
cmpsl
loop
stos
cmp
xor
pop
call
out
pop
popf
pop
frstor
inc
imul
jnp
fsubrp
jecxz
mov
int3
lea
out
xchg
ficoml
xchg
push
dec
stos
xorl
mov
add
imul
pushf
or
lahf
add
fisttpll
jbe
mov
lods
lcall
movsl
adc
decb
ret
fs
jae
ljmp
sub
test
sbb
and
cmp
adc
jmp
cwtl
ss
addr16
or
jge
fistl
dec
lea
fisubl
dec
out
xchg
xor
mov
scas
lock
stos
std
int
lea
outsb
cmp
dec
xchg
adcb
divl
xchg
aad
arpl
shrb
jns
adc
outsl
stos
sub
jns
das
imul
repz
sbb
push
mul
and
shll
mov
out
xlat
dec
or
lret
fs
mov
xchg
cmp
push
lahf
cmp
mov
enter
push
test
roll
daa
ficompl
jl
mov
pop
cmp
fwait
in
xor
ficomps
xor
outsl
mov
fisttpll
dec
ljmp
ss
xor
push
mov
and
data16
jle
add
mov
xor
add
adc
push
loopne
loope
adc
push
loope
dec
movsl
clc
lret
dec
imul
xor
in
fwait
daa
mov
movsb
or
push
xor
stos
or
push
mov
lods
arpl
shlb
js
pushl
nop
jl
sbb
pop
arpl
dec
mov
mov
pusha
jge
sbb
mov
cmpl
repz
loop
test
inc
sub
and
xchg
add
out
sbb
clc
pop
fiaddl
add
stos
xchg
faddl
fucomi
cmc
jnp
mov
or
and
jns
dec
lods
jle
lods
rclb
pop
cltd
sbbl
mul
push
xchg
orb
js
add
ljmp
push
movb
fcmove
jbe
pop
aas
jp
adc
popa
std
sbbb
or
shll
fbld
mov
stos
out
arpl
xchg
test
movsb
sub
daa
sarb
sub
jns
ljmp
mov
jae
shrl
call
hlt
sbb
pop
stc
xor
fildll
inc
popf
lock
fs
loope
cltd
jne
pop
mov
aam
or
pop
je
jo
mov
scas
sti
cli
loope
mov
lahf
pop
push
and
jae
shll
mov
mov
or
adcb
hlt
lods
mov
test
das
cmp
repz
lret
inc
out
mov
sbb
push
imul
and
mov
cmp
jbe
clc
xor
scas
sahf
adc
sbb
or
call
wrmsr
orb
fcmovu
mov
jle
orb
jmp
mov
sbb
sub
add
ljmp
js
sub
sub
sbb
xchg
sbb
test
adc
adc
xlat
int3
adc
xchg
cmpl
xor
les
std
adcl
mov
lock
inc
xchg
stc
sbb
lods
dec
into
fdivs
inc
iret
cs
imul
ljmp
and
sbb
sbb
mov
loop
lret
enter
mov
dec
pop
mov
ljmp
shrl
xacquire
faddp
mov
adc
into
fmulp
jne
mov
jg
rcrb
sbb
pusha
sub
andb
cmpsl
out
loopne
in
iret
cld
pop
xchg
flds
or
jbe
jecxz
dec
mov
iret
es
add
cltd
inc
and
push
xor
bound
test
mov
and
or
push
dec
push
and
inc
nop
push
push
sub
jg
add
xchg
movb
pop
add
cmpsb
aad
cmpb
std
mov
xor
ljmp
and
ja
inc
cmp
outsl
sbb
sbb
add
adc
dec
xor
repz
jge
and
and
iret
shrb
cmpsb
add
or
clc
shlb
xor
loop
pop
call
mov
cmp
stos
not
adcb
sarb
add
xchg
jo
divl
xor
cmpsb
add
cmpb
push
mov
xchg
mov
mov
sub
negb
orl
test
sub
pop
push
icebp
arpl
stc
andl
mov
jle
jnp
insb
pop
sbb
lds
pop
data16
sbb
pop
add
popa
pop
arpl
cmp
leave
inc
add
sbbl
shrl
enter
and
andb
ds
push
or
fnsave
jbe
pop
and
movsb
xor
mov
aas
cld
inc
fisubs
in
mov
insl
mov
in
outsb
in
dec
lcall
jmp
scas
inc
repz
fnstsw
jae
adc
pop
and
popf
mov
xlat
adc
mov
push
scas
scas
out
inc
in
xchg
xchg
roll
lods
ret
xor
popa
inc
push
xor
fnstsw
jg
int3
iret
in
and
adc
enter
mov
lea
dec
fmuls
jg
roll
adc
pop
push
mov
inc
xor
dec
enter
dec
gs
cld
insb
push
iret
std
xchg
mov
je
mov
pusha
ret
pop
inc
push
jbe
clc
pop
jle
adc
mov
pop
daa
push
mov
xorb
xor
es
push
push
rcll
repnz
or
clc
cwtl
mov
adc
movsb
sub
fwait
arpl
icebp
sub
xlat
inc
xor
inc
push
jmp
imul
xchg
out
sub
inc
inc
add
and
cmp
mov
jo
and
mov
adc
out
stc
je
aas
dec
xchg
sbb
mov
rep
lcall
testl
pop
push
add
sub
xor
inc
cld
inc
push
lods
pop
jge
pop
and
js
cmp
in
lds
cmpsl
fs
xorl
popf
cltd
shll
push
push
xor
outsb
sahf
lahf
inc
enter
dec
ljmp
push
out
out
or
movsb
ffree
and
dec
cltd
xor
insl
out
mov
jge
pop
sbb
lods
xor
addr16
ffree
push
rcll
movsl
subl
add
dec
mov
test
inc
je
rcrb
movsl
fdivrs
fisubl
stos
or
imul
pop
mov
xor
jge
adc
and
xchg
jb
sbb
imul
jbe
cmp
jne
jb
jno
mov
mov
mov
bound
and
jae
pop
aas
add
sbb
jns
adc
add
fiadds
ret
mov
psadbw
les
inc
out
xor
inc
adc
in
and
push
outsl
add
pusha
js
bound
push
push
data16
movsb
cmp
test
sub
popf
loopne
jg
xchg
sub
dec
bound
clc
xorb
gs
pop
push
xor
or
les
ret
loopne
loop
fadds
xlat
jo
bound
xlat
mov
jl
push
add
sub
mov
daa
jl
insb
lock
int3
insl
dec
in
and
jns
dec
adc
insb
imul
xlat
sub
insl
loopne
mov
pop
dec
mov
data16
dec
pop
mov
xchg
cltd
cmc
sti
lret
pop
repnz
xor
repz
dec
movsb
iret
xchg
pushf
gs
mov
push
repz
inc
mov
mov
cmp
fadds
aas
xor
and
jne
or
mov
loope
popf
cmp
xor
jecxz
js
incb
add
outsl
jmp
sahf
les
cmpsb
gs
cmpsl
lds
in
adc
push
xchg
cmp
push
jae
mov
sub
jo
push
add
and
cmp
sub
dec
cld
add
adc
push
shlb
pop
sarl
inc
and
jb
lods
in
mov
xchg
cwtl
fs
xchg
lods
ds
imul
pop
lock
aad
cmp
jle
add
enter
xchg
lret
and
xlat
xlat
adc
pop
mov
mov
cmp
stos
daa
mov
add
or
add
mov
movb
fbstp
ret
and
pop
pop
test
jns
cmp
sahf
ret
adc
inc
cli
outsb
lahf
arpl
les
repz
test
pop
ljmp
add
rcr
mov
test
or
cmp
lods
adc
and
fistpll
jp
push
add
or
jmp
push
loope
jnp
les
fnsave
fisubl
fistpl
rcll
adc
inc
or
xor
add
xor
mov
and
mov
add
aas
jo
jecxz
mov
int3
or
notrack
insb
adc
retw
jno
xchg
jbe
mov
jmp
sbb
inc
pop
jl
daa
jnp
jae
aam
rorl
orb
pop
push
cmp
jbe
xor
enter
inc
fsub
arpl
outsb
pop
cmp
dec
sub
cmp
and
movsl
or
sbb
pusha
das
sub
push
jbe
lahf
mov
fwait
pop
ljmp
pop
int3
sbbl
fiaddl
arpl
cmpsb
xor
jne
sbb
or
xor
loop
stos
push
call
bound
pusha
and
mov
lods
jg
test
mov
testl
outsl
jecxz
or
arpl
xor
mov
or
xor
repz
stos
fisttpl
jp
pop
or
pop
push
push
and
arpl
repz
push
xlat
in
or
dec
ljmp
jbe
fcmovu
das
xor
loope
jge
cmp
stos
jno
push
push
fildll
out
iret
pushf
or
push
lea
dec
sarb
movsb
sbb
fs
pop
push
mov
jnp
imul
pop
test
sbb
cmp
xchg
roll
and
cmp
sub
push
fs
leave
push
add
das
int
sar
push
cmpsb
nop
mov
inc
enter
and
mov
jo
notl
aam
repnz
adc
gs
lds
repnz
dec
jbe
aaa
pop
repz
mov
mov
out
mov
or
fmull
icebp
fnstenv
dec
aam
mov
pushf
cwtl
stos
push
push
jne
ja
cmpsl
int
dec
jmp
in
add
add
and
xchg
inc
push
notb
xchg
scas
mov
es
and
std
push
cmpsl
sbb
insb
pop
jecxz
pop
int3
dec
rcl
xchg
xchg
lret
sti
mov
in
add
adcl
push
dec
push
jecxz
jne
mov
fs
aad
sub
lahf
adc
jno
mov
out
into
icebp
adcb
mov
adc
push
xor
xor
ficoml
jns
divb
adcl
inc
jnp
dec
or
sbb
nop
inc
popa
pop
cli
push
cli
adc
cmp
gs
push
rolb
and
jecxz
into
xor
hlt
mov
testl
adc
fcoml
inc
movzwl
push
pusha
fwait
or
imul
loopne
cld
mov
mov
movsb
arpl
sbb
les
cli
xchg
data16
xchg
test
mov
lahf
cmp
leave
jg
or
fs
jo
jnp
sbb
outsl
xchg
scas
or
push
rcr
gs
je
je
pop
add
lods
sub
adcb
test
outsb
inc
mov
push
lds
push
call
and
jl
jnp
movsl
jp
or
sub
cmpsl
xor
sub
cli
lcall
and
lods
mov
xor
aas
cmpsl
ja
cmp
mov
lret
mov
xor
sarl
mov
jne
cmp
lcall
arpl
test
insl
lods
mov
lock
lods
lea
sub
mov
jle
movsb
lcall
movsl
outsb
ficoms
mov
add
ret
cwtl
into
mov
sbb
sbb
sub
adc
popf
cli
xlat
rcll
in
add
aas
push
sbb
jmp
ljmpw
scas
inc
adcl
stos
out
and
mov
and
cltd
enter
setbe
xor
cmpw
fisubl
mov
xchg
xor
out
pop
xchg
fldl
mov
divl
jp
rcrb
leave
push
push
lret
pop
in
out
jne
cmp
lds
jo
jl
jecxz
add
insl
or
adc
jb
push
or
imul
cmpsb
mov
mov
jb
enter
scas
popf
std
int
jg
jo
cmpsb
js
jl
data16
push
cmp
pop
pop
hlt
ja
insb
jecxz
lret
pop
out
mov
jl
in
aad
cmp
xor
mov
call
ss
stos
mov
shlb
test
jecxz
in
mov
rcr
adc
add
daa
test
out
sub
sbb
ja
mov
add
mov
mov
inc
addr16
inc
pop
insb
mov
andb
mov
inc
push
sub
jb
cld
mov
push
andl
aaa
arpl
movsl
sub
adc
mov
pusha
dec
or
cmp
mov
cli
std
mov
int3
cmpsl
xchg
movsb
cmp
cmpsl
imul
dec
rcll
push
es
stc
nop
iret
bound
add
and
push
cmpsb
aaa
fisttpl
into
ret
jmp
pop
push
xor
mov
jp
into
in
out
cmp
out
push
or
fildll
push
repz
xchg
mov
lret
inc
jecxz
cwtl
loope
inc
popa
cmpb
adc
lret
xor
int
div
mov
xor
adc
out
jecxz
dec
fs
ret
pop
jae
xor
xorb
mov
or
and
lods
out
cmpsb
pop
clc
inc
dec
xchg
cmpl
pop
sahf
jl
int3
decl
lods
cli
in
fldenv
js
xor
push
sarl
mov
sub
or
add
insb
jo
out
inc
mov
insb
aas
inc
aam
xchg
and
jp
stc
adc
lea
adc
adc
xchg
xor
movsl
push
rorl
test
jl
push
mov
hlt
jg
adc
popf
fistpll
push
jnp
add
adc
mov
lret
cs
sbb
sbb
pop
or
jb
shl
fidivs
into
xchg
leave
adc
repz
insl
inc
mov
dec
adc
mov
mov
aad
push
cs
das
and
mov
cld
mov
cmpsl
mov
inc
mov
and
insl
jl
imul
outsl
ficomps
int
popa
aas
loope
mov
push
or
push
lods
mov
std
out
pop
sub
sub
call
cmp
insl
cmp
sub
sbb
xlat
loope
in
xchg
std
add
adc
out
pop
mov
out
sahf
imul
add
stos
in
shrb
add
sub
mov
fs
cmp
imul
fcomp
and
fsubr
mov
lea
sub
sub
push
in
push
pop
push
add
mov
stos
call
cmp
inc
jnp
mov
icebp
push
sbb
popl
das
jae
dec
popa
mov
jge
push
mov
inc
xchg
inc
pop
insl
cld
xorl
xor
adc
and
enter
std
adc
jmp
pop
or
jg
push
into
mov
jb
mov
push
imul
inc
mov
iret
xchg
addb
jp
lods
sub
push
test
outsl
test
adc
popa
and
mov
out
and
adc
xchg
lock
rolb
mov
xor
jl
jp
stos
adc
idivl
popa
xchg
repz
xlat
cmp
add
and
xor
je
ja
push
outsl
aam
leave
lock
mov
push
aas
mov
cli
ret
bound
sub
mov
jbe
mov
jo
push
fsubs
cld
leave
dec
mov
inc
jmp
push
xchg
shlb
and
dec
cmpb
jecxz
lds
leave
xchg
ds
movb
movsb
sbbb
sbb
push
hlt
pop
pop
sub
lock
pusha
ret
pop
push
fisubl
or
inc
push
pop
jb
loop
xchg
jbe
adc
dec
cmpsb
and
fcomp
test
or
enter
jg
add
xor
rorb
xor
outsl
mov
mov
imul
inc
mov
test
sub
aas
bound
xor
mull
cmp
pop
adc
sbb
push
stc
inc
jb
xchg
test
das
out
pusha
negl
loope
sahf
shlb
orb
cli
add
xchg
ret
icebp
out
adc
and
push
sbb
test
mov
loop
pop
jp
in
shr
and
sti
sbb
add
or
lahf
mov
sbb
cmp
pop
pop
int3
hlt
idiv
cmpsb
sbb
lret
xchg
andb
jnp
inc
mov
push
cwtl
aaa
aas
mov
insb
jl
or
dec
mov
mov
mov
jg
ret
xchg
cmc
cs
or
loope
aaa
pop
xor
testb
test
jnp
xchg
mov
pop
push
mov
inc
push
sub
sahf
push
sub
lret
jbe
mov
pop
stos
testb
push
push
xchg
jns
fidivl
insb
lret
lcall
icebp
rorb
in
ja
data16
fstpl
daa
icebp
cmpsl
out
mov
rcr
sbb
mov
loopne
pop
mov
fbstp
jo
sbb
js
dec
mov
xchg
inc
add
orb
sub
je
lcall
mov
mov
daa
jo
stos
cmpsl
rorl
in
lret
dec
gs
adc
clc
adc
int3
jb
xor
xchg
outsl
add
lret
add
jb
in
pop
jne
movsl
jb
repnz
mov
cmp
jne
mov
cmpl
fsubrl
fimuls
jne
scas
faddl
add
hlt
mov
fdivs
inc
movsl
imul
cmc
pop
mov
std
out
add
inc
xor
rcr
push
mov
jns,pn
stos
into
stc
xchg
mov
xor
stos
dec
or
cs
pop
nop
gs
or
in
negl
and
jbe,pn
mov
fbstp
movl
mov
mov
into
nop
adc
imul
int3
mov
mov
jg
sub
lds
stc
mov
push
inc
push
data16
ss
adc
arpl
mov
xor
inc
rcrl
xchg
cli
pop
dec
mov
or
test
imul
jle
test
insl
pop
xor
inc
mov
adc
fwait
in
inc
clc
or
adcl
dec
pop
push
sbb
xor
or
rcrb
pop
push
mov
push
in
out
ror
data16
imul
int
incl
insb
lret
mov
mov
adc
out
ss
jg
stos
movsb
lock
mov
mov
push
outsl
xchg
xchg
add
std
add
aas
rorb
and
loope
cmp
or
pop
ss
push
leave
ljmp
dec
loopne
sub
bound
testb
push
mov
dec
stc
push
addr16
sbb
mov
es
outsl
lret
ret
xchg
sbb
out
sub
xlat
xchg
das
loopne
outsl
repz
adc
dec
dec
pusha
mov
out
andl
shrl
and
iret
jl
and
arpl
shl
out
jge
add
sub
inc
sbb
test
popf
dec
repz
es
test
or
xor
imul
xor
xchg
xchg
js
push
addl
loopne
adcb
testb
je
mov
test
xchg
fwait
lods
fiadds
fwait
stos
in
lahf
sub
inc
mov
or
incl
or
fs
orl
and
mov
clc
dec
mov
fsubp
push
in
sbb
mov
int3
lock
xchg
cltd
adc
in
inc
call
into
mov
push
sbb
or
daa
mov
jle
xchg
sarl
rcrb
cwtl
push
or
aad
xor
fiadds
xchg
xchg
mov
cmc
mov
je
and
outsb
add
cmp
pop
adc
loope
das
loopne
pusha
mov
inc
repz
daa
xchg
jmp
push
stos
lea
cmp
add
xchg
pusha
dec
mov
inc
push
mov
mov
dec
or
mov
out
movsb
test
outsl
push
mov
pop
iret
or
in
dec
jmp
pop
xchg
mov
push
inc
push
std
aaa
pop
xchg
loope
mov
ljmp
jge
add
scas
push
popa
fsubrp
xlat
push
inc
andl
pop
inc
addr16
fldt
js
mov
dec
call
inc
stos
sub
orb
iret
add
mov
push
repnz
jl
stos
ret
pop
adc
mov
lods
mov
push
xor
jne
mov
out
cmp
loope
pop
outsl
mov
clc
jns
or
adc
clc
jnp
dec
xchg
sbb
jae
jmp
fsubrs
loope
adc
push
aam
or
mov
movsb
sub
sbb
push
push
outsb
pop
or
ss
scas
jecxz
filds
push
fbstp
clc
push
roll
push
mov
lret
outsb
dec
ret
xchg
xchg
mov
loop
mov
stos
cwtl
dec
lret
sbb
sub
xor
xor
ljmp
inc
cmc
movsb
and
pop
pop
out
pop
enter
cwtl
leave
push
cmp
xor
test
nop
xor
loop
inc
fnstcw
push
std
mov
inc
aam
push
lret
pop
cmpsb
outsb
js
arpl
lret
pushf
cmp
pop
jns
hlt
mov
mov
pop
mov
push
cmp
cltd
xor
push
xlat
cli
ljmp
cmp
mov
sub
xor
and
movsl
pop
data16
ss
cld
jge
xor
in
aam
xchg
cmpsl
ret
into
pop
xchg
inc
inc
pop
cmpsb
in
and
shll
and
pop
dec
xchg
dec
and
xorl
fimuls
arpl
inc
mov
out
jo
popf
xchg
add
test
in
call
movsl
xor
rsqrtps
push
xchg
addr16
das
sar
fdivrl
add
push
dec
adc
xchg
cmc
movsl
movsl
lret
jp
adc
test
addr16
scas
ret
into
cwtl
in
jbe
addr16
push
stos
xchg
rcl
add
out
mov
jmp
sub
adc
xchg
pop
xchg
ficoms
and
adc
add
mov
popf
sahf
xchg
pop
sarl
inc
dec
or
or
mov
xor
push
mov
inc
stc
insb
hlt
cmp
add
sub
pop
add
mov
push
lahf
and
notb
push
xlat
mov
xor
decl
mov
jl
stos
lcall
int3
fisubrl
jl
adc
clc
mov
mov
in
in
inc
mov
push
js
dec
and
fadds
fwait
adcb
xchg
or
sti
add
popa
enter
cmpsb
xor
out
movsl
rcrl
pop
out
dec
cld
aaa
dec
shl
mov
sub
adc
add
xchg
pop
les
out
les
or
mov
sbbl
push
and
ss
jl
sub
fisubl
sbb
add
movsb
mov
mov
popf
scas
js
repnz
lcall
insl
pop
imul
sbbb
xor
adc
sub
jnp
sub
nop
rcrl
inc
scas
pushf
icebp
ljmp
mov
or
imul
popf
sbb
stos
or
rorb
aaa
cld
adc
and
mov
outsl
subb
dec
shrw
iret
jno
xchg
aas
test
cmp
sbb
out
cmp
mov
pop
mov
xlat
add
jl
mov
scas
pop
mov
call
out
testb
fildll
out
push
daa
pop
aad
and
jl
lods
mov
mov
xor
out
or
lret
sub
cmp
lcall
or
insl
addr16
neg
push
call
test
lahf
mov
sysenter
clc
pop
mov
pop
push
pop
popa
mov
mov
pop
je
fsubrs
mov
popf
add
or
cs
rolb
push
pop
dec
imul
mov
ret
ljmp
lds
pop
and
aaa
mov
xor
xlat
shl
mov
inc
inc
inc
and
cs
mov
fildl
ds
and
test
mul
fistl
push
aaa
in
out
xchg
lds
adc
and
or
lret
jge
or
cmp
mov
sub
lds
dec
mov
jle
repnz
sbb
xchg
shlb
jg
inc
push
or
sub
ficompl
pop
jns
cwtl
lods
in
mov
push
adc
das
push
dec
hlt
mov
sub
sbb
lret
mov
mov
ss
jl
lock
mov
xchg
sti
push
mov
sub
rclb
mov
dec
mov
xor
int
mov
xchg
or
fildl
or
pop
xor
push
in
sub
mov
inc
xchg
mov
adc
call
dec
cmp
dec
int
ja
test
dec
iret
sub
scas
add
in
sbb
sub
dec
in
sub
pop
cli
pop
lcall
inc
int3
pop
loopne
leave
ja
paddw
rol
mov
mov
out
mov
cltd
add
inc
repnz
inc
mov
stos
mov
inc
sub
pushf
xchg
js
xchg
iret
sbb
imul
aam
push
in
es
jecxz
pusha
pop
cmp
sbb
loopne
sbb
sub
push
sbb
mov
adc
mov
lsl
sub
mov
mov
jae
adc
cmp
rcrl
pushf
stos
outsl
add
push
xchg
pop
or
sub
insl
mov
mov
add
shrl
gs
mov
movsb
cmpsl
mov
sub
mov
stos
fidivs
push
mov
cli
cmp
ret
shl
or
cmpsb
or
pop
sbb
xchg
pushf
or
popf
popa
mov
movsl
dec
dec
aaa
sub
mov
mov
test
testb
mov
movsl
lret
out
les
inc
push
mov
cmp
rorl
test
mov
fidivrs
jge
add
sti
or
mov
fucomp
push
movups
inc
jb
cltd
dec
push
mov
es
or
cltd
mov
or
aas
mov
add
dec
mov
mov
rcrl
das
jno
rcrl
add
mov
and
mov
adc
out
add
pop
jne
add
out
stos
mov
sub
sbb
sub
rorb
jl
and
xchg
dec
sbb
adc
jg
inc
jae
clc
movsb
js
fwait
addb
int
data16
jg
cmp
and
inc
dec
stos
daa
cmp
test
jno
sub
std
aad
sub
mov
push
sbb
jo
les
inc
mov
or
xchg
scas
stos
sub
adc
push
ja
mov
sub
popf
mov
mov
cli
icebp
add
push
inc
dec
jbe
test
or
int
cli
pmaxub
dec
push
mov
mov
js
jo
loop
cmp
mov
lret
aas
mov
cmp
stos
mov
call
mov
jl
into
mov
in
gs
mov
das
shrb
or
jmp
add
mov
addr16
sbb
lods
les
cmp
adc
xchg
fnsave
jbe
fxch
dec
push
clc
enter
fisttps
loopne
cmc
fs
jl
lcall
fstl
push
push
mov
add
scas
out
pop
fstpl
adcl
jo
sub
dec
sub
or
xchg
add
test
pop
dec
shlb
xchg
imul
lds
sub
sahf
mov
lret
jg
xchg
xchg
jl
dec
enter
in
int
flds
dec
pop
or
shl
lds
cmp
fs
into
xor
xchg
sbb
push
insb
jp
push
lock
mov
xchg
mov
enter
dec
xchg
fildl
sub
mov
mov
mov
mov
lret
rorl
mov
xorb
adc
jp
or
in
adc
addr16
out
js
fdivl
push
adc
sub
mov
or
mov
popf
lcall
loop
jl
bnd
aam
adc
or
sti
mov
in
aad
jg
mov
into
sub
fxch
mov
outsl
inc
bound
jmp
mov
mov
xchg
outsl
sbb
dec
ss
bound
fstps
dec
andb
pop
leave
mov
mov
insb
in
mov
jnp
and
push
or
leave
nop
or
andb
pop
movsb
push
stos
mov
mov
in
cli
cltd
insb
pop
pop
sub
mov
jnp
pop
std
dec
lahf
dec
mov
lea
and
ror
ljmp
imul
lret
add
cmp
push
jp
enter
jl
into
in
repz
push
pop
mov
push
cmp
and
sub
outsb
jl
and
inc
xchg
mov
mov
cs
test
sbb
aas
mov
stos
rcrb
jo
push
fidivrl
test
std
bound
es
mov
scas
lock
push
fisttpll
cmp
pusha
inc
sub
push
adc
adc
je
mov
xor
xchg
mov
or
sti
fmull
imul
and
test
gs
inc
cmp
sub
inc
out
pop
repz
stc
jae
or
xor
inc
jmp
js
mov
pop
mov
mov
jp
sbb
dec
or
jp
mov
loope
xor
push
xchg
fisttpll
ljmp
imul
fstps
push
mov
out
mov
dec
cli
pop
faddl
cltd
mov
push
loop
push
xchg
fisubrl
stos
test
and
push
or
or
dec
sbb
xor
call
fidivrs
mov
shlb
jbe
cmpsl
inc
shlb
in
sbb
aad
lahf
inc
pop
mov
dec
push
pop
and
cmp
add
mov
jns
cmp
push
std
lock
ljmp
pop
mov
pop
push
sub
push
test
je
out
mov
jmp
loope
and
lock
xchg
in
mov
inc
imul
push
push
pop
or
stos
mov
data16
mov
nop
xor
sub
fwait
pop
scas
cmovne
call
loop
sbb
lahf
sar
inc
scas
jns
push
movl
repnz
ss
push
mov
push
mov
adc
xchg
aam
repz
sub
mov
inc
jo
loopne
xor
mov
cmp
std
bound
shlb
bound
or
sbb
jmp
pop
mov
loop
xor
outsl
cmp
enter
das
stos
in
out
mov
insb
ss
lods
shlb
dec
inc
push
cltd
and
inc
lcall
xchg
imul
jae
jbe
ds
inc
sub
mov
addr16
aad
sub
into
or
push
dec
or
inc
in
ffreep
pushf
adc
ret
push
fnstcw
sbb
lret
cmp
movsl
jle
dec
jo
cmp
pusha
js
pop
sbb
mov
dec
push
push
stos
sbb
cmp
pop
mov
xor
repz
shlb
pop
mov
xchg
insb
adc
lcall
test
pop
dec
adc
lahf
or
xchg
xor
inc
inc
pop
jbe
scas
mov
nop
mov
jnp
and
push
call
jns
mov
adc
ficoms
jl
xchg
jle
cld
mov
call
adc
dec
jne
inc
push
stc
in
inc
cmp
aas
loopne
cmp
adcb
leave
pop
scas
mov
pop
dec
and
daa
pop
mov
divb
push
jno
aam
mov
pushf
push
popf
add
loop
adc
xchg
mov
rolb
rcr
std
adcb
sub
adc
and
mov
push
xlat
and
inc
push
push
pop
mov
bound
inc
jb
pusha
jae
jns
inc
mov
mov
dec
xlat
es
jg
cmpsl
nop
fistl
ret
adc
cmc
jle
loop
roll
sti
lea
out
jl
outsb
xor
cmpsb
jbe
das
int
aad
push
jae
shl
in
xor
mov
arpl
inc
mov
jae
push
xchg
mov
sbb
sub
sub
jno
inc
adc
cltd
mov
pop
pushf
ret
aam
or
mov
cltd
cltd
sbb
mov
fcompl
cmp
xchg
sub
fiaddl
mov
je
adc
mov
repnz
cmc
test
dec
ds
xchg
push
mov
cli
mov
rclb
pop
cmp
fs
xor
jp
movsb
scas
loop
leave
inc
repz
mov
fisttps
mov
jecxz
ret
mov
test
jmp
movsl
add
lcall
test
insl
mov
mov
sbb
cmc
and
aam
jecxz
lcall
bound
mov
dec
lahf
lahf
bound
fs
xchg
mov
sub
mov
nop
repnz
inc
iret
lds
jmp
shll
insb
xor
and
jecxz
cmp
xchg
and
icebp
xlat
ficompl
xchg
inc
jp
fwait
inc
testl
dec
and
gs
mov
ljmp
xor
adc
ljmp
add
addr16
push
mov
adc
pop
jno
cmpb
clts
cmp
dec
xor
test
xchg
lea
roll
mov
fstpl
aas
aas
lods
cld
xchg
mov
insl
xlat
xchg
cmp
jns
sub
lret
pop
imul
mov
cmp
loopne
pop
das
mov
pop
cli
or
dec
adc
dec
sarb
mov
es
sub
rcrb
pusha
sub
ds
fs
xchg
les
je
jmp
xor
sub
mov
hlt
ja
stc
ljmp
cli
mov
or
lret
add
push
push
sbb
aad
fstpl
cmp
insl
pop
cli
and
jge
fwait
pop
and
clc
xchg
pop
lock
and
aam
and
jmp
pop
inc
pop
aaa
pop
cmc
repz
dec
sahf
jne
addl
mov
xchg
test
aaa
sahf
addr16
dec
mov
dec
fs
xchg
inc
int
lret
mov
pop
bound
xchg
or
pushf
in
sub
inc
cmpsl
or
push
mov
and
mov
enter
lods
repnz
scas
xlat
inc
insb
test
adc
ret
sbb
mov
add
ret
adc
push
adc
cmpsl
addr16
push
jb
test
adc
mov
leave
lret
xor
imul
pop
out
sarb
dec
jbe
or
popf
jmp
fsubrs
lods
and
mov
orb
into
movsl
inc
sahf
cmpsl
pop
jnp
dec
nop
in
fnsave
cltd
and
nop
mov
mov
inc
mov
xchg
pop
mov
cmp
fadds
leave
jo
sub
sbb
dec
sub
jbe
cmc
fpatan
fdivl
or
mov
rep
cs
dec
pushf
and
test
into
int
outsb
cltd
imul
pop
inc
inc
in
and
xchg
iret
imul
repnz
fisubrl
je
outsb
jb
jae
push
imul
fcompl
and
inc
fs
pop
dec
loop
ja
dec
loope
inc
xchg
out
add
bound
ja
push
xor
pusha
sub
scas
jo
jns
push
inc
inc
pop
out
mov
mov
sbb
inc
leave
movsl
dec
push
push
pop
pop
push
mov
lret
inc
mov
jnp
jle
movsb
repz
ret
adc
xor
mov
in
push
dec
push
lret
and
cmp
test
mov
inc
into
lahf
pop
pop
mov
mov
sbb
and
inc
ret
adcl
iret
jl
lcall
jecxz
sub
ret
rorl
repz
push
sbb
push
aam
jnp
add
nop
int
je
fisubrs
insb
push
adc
jl
jp
jl
and
loope
lea
sti
addb
mov
push
loope
daa
cmp
lods
xor
inc
aaa
jno
lods
sbbl
sub
sbb
out
dec
jb
pop
lret
int
aad
adc
dec
inc
stos
or
fisubl
jne
insb
xor
call
fbstp
sub
cmp
xlat
incb
lahf
cld
loop
or
mov
jae
adcb
dec
aas
pushf
jae
push
mov
lods
aas
or
adc
cmc
arpl
sti
mov
and
and
cmc
pop
push
jbe
int
fsubl
fs
push
rorb
mov
push
out
or
inc
xorl
test
jmp
cmp
push
and
inc
pop
xlat
mov
adc
jo
fisttps
jmp
dec
push
dec
adc
sbb
mov
mov
das
scas
inc
adc
sub
lret
cwtl
and
call
or
dec
mov
dec
mov
xchg
and
adc
adcl
push
xchg
push
das
xchg
or
push
jl
inc
and
push
mov
and
shrl
aas
sti
out
add
and
add
push
int
ret
mov
mov
fcmovnbe
sub
inc
enter
mov
aas
pop
push
lods
loope
sarb
sbb
sbb
stos
dec
cmpsb
push
clc
das
jne
and
lcall
std
in
fistpll
unpcklps
xor
mov
mov
out
into
dec
ret
out
pop
or
or
jg
and
lcall
xchg
jnp
mov
inc
jge
lds
lds
sar
hlt
movsl
in
mov
sbb
filds
or
mov
inc
and
test
popf
push
push
mov
pop
mov
stos
xchg
jbe
fldenv
popa
push
xchg
fucomi
popa
xor
ja
or
adc
push
mov
jmp
jmp
mov
inc
je
imul
xchg
jno
sub
inc
xchg
fidivl
inc
rorl
jae
shlb
pop
insb
adcl
out
aas
mov
repz
add
enter
in
sbb
test
es
and
pop
or
mov
push
mov
inc
cmp
adc
xlat
adc
mov
cmpl
jne
int
adc
pushf
ret
add
mov
or
jmp
mov
rcrl
pop
mov
mov
mov
imul
out
in
adc
daa
cld
sbb
in
gs
cmpsl
or
cmp
jle
push
lods
and
push
xor
int3
push
or
pop
xchg
push
stos
push
call
xchg
inc
sbb
add
int
mov
sbb
push
shll
xchg
pop
insb
addr16
cmp
and
or
or
cli
cmp
mov
lock
push
negl
dec
mov
cmp
loop
lods
xor
add
adc
xchg
push
loope
and
jg
jne
mov
push
ror
das
out
pop
xor
shl
inc
stos
cmp
dec
or
out
insl
or
ret
aaa
icebp
insb
sub
dec
jb
nop
repnz
xchg
cli
data16
or
adc
test
xor
xlat
aad
and
aas
mov
xchg
shrb
out
rcrl
mov
lds
xor
add
push
les
rcl
cmpl
arpl
sbbb
call
pop
push
sbb
adc
test
adc
mov
in
jbe
push
fwait
lock
xor
aaa
or
mov
sbb
test
sub
xlat
int3
scas
mov
and
fsubr
std
push
sub
adcb
jg
cmp
iret
dec
jb
vpmullw
cld
stos
std
lds
inc
sti
jge
mov
stos
and
add
aaa
mov
out
push
bound
or
aad
pop
hlt
sti
fstl
sub
jmp
mov
inc
sbb
dec
lds
mov
inc
lds
push
stc
pop
cli
cltd
int3
mov
push
sub
aas
arpl
into
or
imul
jno
mov
push
cmpb
mov
xchg
in
add
push
cmp
outsb
push
adc
mov
push
stc
mov
xor
ret
std
adc
popa
jmp
insl
repnz
call
push
addb
enter
iret
push
mov
jbe
mov
push
fisubl
stos
outsb
popa
dec
pop
jp
ficompl
andl
or
push
jg
dec
mov
jne
jnp
sbb
pop
lret
push
adc
enter
popa
or
cmpsl
das
je
cwtl
dec
sbb
jns
movsl
and
pop
sub
adc
mov
adc
pushf
and
lret
enter
rolb
jo
push
or
push
pop
adc
push
adc
mov
lods
mov
mov
out
test
jns
and
out
out
outsl
fsubs
int3
loopne
cmp
js
jo
fwait
inc
cmp
dec
pop
ret
sbb
cmp
sbb
sbb
enter
cli
stos
adc
mov
mov
xor
cld
pop
xlat
xor
sbb
pop
scas
xor
lahf
mov
test
xchg
sbb
and
scas
push
nop
bound
fimull
inc
jne
in
jge
xchg
jmp
sbb
out
jle
call
push
fwait
jne
lret
sbb
dec
sub
lods
dec
push
fdivrl
dec
cld
xchg
push
sbb
popf
ja
ljmp
mov
loope
mov
lods
jle
int3
push
pop
shll
cld
xchg
dec
cmp
sti
cmp
jecxz
scas
int
jb
inc
push
ffree
int
inc
push
dec
fidivs
ret
push
mov
xchg
scas
test
mov
mov
jno
jno
loop
mov
inc
test
fstps
mov
pushl
adc
out
jl
mov
js
mov
sar
lcall
outsl
mov
sub
mov
mov
inc
mov
cli
mov
mov
ds
mov
push
lcall
dec
shlb
inc
cmc
jns
xchg
subb
insl
roll
je
jg
xor
mov
jo
mov
cld
mov
bound
repnz
cwtl
testl
rcll
mov
pop
imul
inc
mov
push
cmp
jmp
repnz
rclb
into
dec
out
inc
iret
pop
outsb
and
add
ljmp
int3
decl
ja
push
jo
repz
jns
stos
out
test
sbb
inc
dec
cmp
add
xlat
cli
aam
mov
lret
mov
icebp
pop
outsb
sbb
adc
xor
or
gs
mov
and
xchg
adc
cmp
dec
ja
std
pop
mulb
add
mov
cmpsb
pop
jl
fildll
adc
xor
inc
mov
xor
popa
outsl
mov
sti
or
aam
and
cld
sub
adc
push
dec
pop
sub
jb
cs
or
sub
jb
gs
lcall
and
ss
subb
mov
xlat
inc
jns
push
out
stc
movb
sarb
out
jb
in
cmp
shrb
xor
dec
pop
pop
mov
sbb
and
mov
or
sbb
bnd
jmp
xor
sub
mov
add
mov
adc
movsl
cmp
mov
xor
lods
cmp
test
mov
cwtl
inc
int
xchg
mov
inc
cld
aaa
adc
jbe
mov
mov
mov
sub
imul
jae
inc
roll
jp
popl
pop
push
scas
pop
sarl
adc
divl
xchg
in
scas
adc
sub
call
xchg
xorb
cs
jns
mov
add
std
cmpsl
lock
jno
mov
imul
jbe
inc
mov
dec
inc
sub
inc
push
inc
jb
pop
pop
inc
pop
mov
mov
xchg
call
hlt
rorb
adc
push
sarb
pop
dec
leave
or
mov
std
std
adc
fisubrs
xor
xor
pop
cmp
pop
pop
imul
lcall
push
adc
ljmp
in
or
dec
jmp
movsb
push
ss
cmpsb
inc
xor
xchg
insl
push
or
cli
arpl
mov
leave
or
ret
rolb
sarl
xchg
fisttpll
dec
or
inc
push
xor
dec
jmp
jo
push
xchg
fnstsw
jae
sub
popa
or
lahf
or
fstps
mov
sbb
mov
outsb
mov
xor
pop
cwtl
mov
jo
pop
pop
int3
jmp
jg
jb
push
cmp
pop
es
inc
stos
aam
adc
dec
fcompl
pop
stos
inc
into
stos
movsb
movsl
dec
rcrl
push
sub
fucomp
xchg
addr16
and
mov
cmp
xor
loopne
mov
insl
and
aaa
add
test
mov
ret
inc
mov
xchg
aaa
mov
out
sub
jae
push
mov
loope
in
and
in
mov
mov
inc
mov
pusha
mov
insl
int
cmc
or
sahf
push
ja
push
repz
sbb
and
mov
sahf
clc
push
lock
cmpsl
neg
shl
cltd
sbb
icebp
lods
fs
xor
dec
mov
f2xm1
fucomp
loop
adc
leave
repz
inc
sbb
in
es
call
fimuls
sti
add
sbb
js
push
es
out
mov
idivb
loop
fists
mov
dec
in
pushf
aam
clc
xchg
mov
pushf
repz
push
and
fisttps
and
inc
cmp
filds
shll
ljmp
fadd
subl
jmp
ljmp
test
inc
andb
subl
dec
xorl
add
and
pop
mov
xor
cmp
es
mov
inc
ret
mov
fnstcw
push
sbb
into
loopne
clc
mov
mov
out
jns
sub
mov
adc
add
inc
cmp
adc
jmp
dec
mov
push
out
push
dec
cmpsl
jo
mov
enter
popf
ss
icebp
sub
shl
repnz
add
lods
pusha
xchg
mov
bound
ljmp
or
jo
sbb
inc
popf
fcmovne
jg
das
lods
in
pushf
sbb
ss
mov
andl
mov
fimuls
cmp
mov
cmp
call
mov
or
jbe
adc
movsl
pushf
es
or
sub
nop
adc
or
fisttpl
mov
sbb
sbb
push
xor
push
xor
int3
test
adc
mov
stos
pop
push
push
xor
test
jg
enter
jb
into
mov
or
je
test
stos
xchg
or
mov
fwait
jmp
stos
xchg
push
jecxz
shl
push
cwtl
test
pusha
xor
ret
gs
push
andb
pusha
psubsb
inc
mov
xchg
and
out
or
cmp
sub
in
push
xchg
stos
xchg
or
xor
inc
fdivs
xchg
dec
movsb
jnp
shll
repz
xor
xor
mov
pushf
gs
jne
test
xlat
test
lods
cmp
stos
mull
jae
mov
notb
pop
lret
xor
out
adc
enter
rep
pop
cmp
dec
in
icebp
cld
adc
fnstsw
lods
fidivs
cmp
pop
push
or
cmpsl
xchg
pop
pop
popf
mov
fstpt
enter
adc
mov
lods
in
xchg
jle
mov
xor
es
mov
aas
lods
in
inc
pop
repz
stos
lea
push
pushf
lret
cwtl
outsl
iret
xor
mov
rclb
cmp
movsb
pop
inc
or
das
pop
sub
xchg
int3
xchg
cmp
mov
sub
outsb
mov
adc
and
in
mov
cltd
pop
fcmovu
or
call
xchg
stc
test
mov
dec
inc
sub
sub
mov
out
jno
mov
loop
addr16
mov
out
mov
ret
popa
arpl
add
cmp
test
imulb
enter
popa
aas
inc
movl
clc
daa
or
push
movsb
test
dec
cwtl
jns
mov
pop
sub
jb
div
call
imul
icebp
mov
fcmovu
out
sbb
mov
inc
lods
xchg
jbe
mov
push
pop
int
and
push
mov
add
cld
push
and
iret
fcompl
int
xchg
mov
mov
push
addb
fiaddl
adc
testl
and
mov
mov
or
icebp
lods
loopne
lds
fisttpll
pcmpeqd
addr16
adc
cmpsl
daa
mov
leave
fldl
or
xor
jae
dec
pop
lods
and
add
cltd
inc
xor
mov
xlat
xchg
mov
jge
out
mov
mov
fistps
insb
fcomps
pop
sub
xor
sbb
xchg
mov
test
jb
mov
je
test
pop
in
inc
inc
movsl
jb
ds
pop
and
mov
and
adc
inc
push
rorl
es
xchg
sbb
orb
jl
imul
test
dec
mov
cwtl
stos
cli
mov
or
xor
inc
jae
jg
sub
cli
sar
aad
mov
jno
pop
iret
fdiv
cwtl
adc
lods
push
add
in
xchg
mov
mov
sub
popf
cmp
add
dec
ds
mov
and
out
test
xchg
add
mov
cmpsl
lea
outsl
test
jl
jnp
lcall
imul
dec
decb
daa
or
xor
xchg
push
fstpt
mov
cmp
loope
in
rclb
jns
in
leave
and
and
cmp
ficoml
ja
mov
jnp
mov
mov
add
sbb
cltd
ss
add
pop
cmp
mov
jmp
aad
and
lcall
mov
add
lcall
jecxz
jle
mov
sbb
in
mov
sbb
sub
divl
mov
lods
mov
in
pop
je
push
cmp
mov
out
imul
inc
fisubrs
xchg
shl
mov
jns
jl
fildl
ds
orb
sahf
inc
mov
jmp
jo
in
inc
gs
push
cmp
das
pop
cmp
ljmp
andb
lcall
pop
dec
xchg
add
repnz
xchg
out
sbb
out
and
jmp
jb
or
jnp
shll
rorl
sarl
ds
es
or
xchg
add
push
in
call
cmpsl
xor
mov
jns
pop
xor
jp
fdiv
in
mov
stos
pop
cmpsb
loop
cltd
sahf
pop
push
mov
cmp
cmp
dec
sbb
out
mov
repz
std
shlb
mov
sbb
and
jecxz
andl
pop
xor
jne
jge
sub
ds
repnz
sbb
cmp
in
mov
push
sbb
xchg
xor
orb
cltd
and
loop
pop
rol
es
mov
orb
push
push
scas
jmp
mov
arpl
push
das
pop
fsubl
xor
pop
cmpsl
sub
std
and
shr
test
daa
gs
insb
subb
jmp
mov
xchg
add
mov
or
xor
xchg
das
push
cmp
movsl
ret
mov
inc
imulb
push
push
cmpsl
std
xchg
add
xchg
push
push
push
pop
mov
add
shl
add
or
add
push
ds
and
jbe
data16
rclb
ss
lcall
cmp
stc
lods
fs
and
or
shll
and
xchg
pushf
ficoml
ljmp
imul
add
fistpll
xchg
mov
xor
and
push
xor
add
out
add
and
subb
adc
pop
aam
sub
or
sub
hlt
push
push
xchg
sbb
push
popa
call
aad
cmp
cs
pop
in
stos
and
push
cmovbe
test
mov
icebp
add
out
pop
cltd
push
pop
mov
ffreep
push
xchg
imul
push
adc
xchg
inc
ss
cld
shr
out
shr
ror
push
sub
mov
hlt
dec
stos
or
lcall
cmp
pushf
xchg
push
mov
inc
mov
xchg
imul
pop
mov
fisubrl
xchg
or
push
push
cmpb
ds
es
pop
in
aad
cmp
lret
cmpsl
sbb
data16
inc
and
jle
cld
cwtl
mov
pop
push
mov
ret
cwtl
xchg
mov
cld
mov
testb
add
test
daa
test
pop
mov
ficoml
pusha
push
in
andl
xor
sbb
or
in
add
in
add
popf
hlt
aas
sub
xchg
iret
repnz
xchg
lea
sbb
cmp
mulb
cwtl
mov
stos
dec
mov
jbe
cld
ss
sarl
xchg
ret
dec
mov
enter
xor
fildl
test
outsl
pop
gs
add
iret
dec
mov
xor
adc
mov
jmp
sahf
jmp
loope
xlat
push
movsl
xchg
push
adcb
cmpsl
cmpl
or
adc
rcrl
jnp
fistps
mov
add
mov
cmp
lret
rcl
xor
push
inc
sub
sub
into
xlat
xchg
adc
filds
lds
add
or
sbb
int3
sub
jno
frstor
test
fs
cmp
in
test
enter
mov
js
repnz
fsub
out
dec
lcall
test
ss
in
test
in
or
cld
push
int
movsl
cmp
sahf
pop
add
js
add
test
mov
xor
dec
cmp
add
add
push
aas
push
sub
xor
push
sub
iret
movsl
lahf
imull
jns
mov
jl
cli
lea
movsb
bound
std
incl
xor
mov
scas
out
fildl
dec
adc
push
mov
jmp
imull
mov
adc
xor
outsl
fnstcw
pop
rcpps
sub
jge
adc
cs
in
xchg
mov
or
lock
jae
scas
ret
sbb
push
sbb
jge
or
lds
push
adc
and
push
jecxz
movsb
or
push
outsl
mov
dec
ljmp
xchg
test
adc
insb
mov
mov
pop
repz
jle
stc
mov
leave
ds
clc
enter
std
jnp
and
mov
in
ror
adc
add
add
pop
jns
out
xchg
scas
mov
cs
adc
bound
or
xor
mov
scas
sbb
aam
sub
hlt
bound
in
mov
addr16
ret
cmpsb
repz
fadd
jo
mov
sbb
icebp
xchg
pop
pop
fnstenv
cmc
mov
shl
cmp
cmp
imul
mov
fstps
jge
shl
mov
imul
mov
bound
push
cmp
scas
and
test
and
stos
or
cmp
enter
fcmovb
sarl
jbe
mov
in
cmp
jb
and
xor
je
leave
stos
pop
js
sbb
lret
rol
js
inc
sub
in
repz
clc
imul
jb
out
pop
xor
loope
adc
cld
jp
add
sbb
jne
fnstcw
movsb
jge
xchg
push
push
xor
and
in
fnstsw
out
xor
or
pop
jne
or
xor
popa
popf
loope
add
sbb
fwait
js
add
push
daa
and
ret
jne
stos
sub
sti
shl
ror
and
mov
push
push
pop
mull
subl
outsl
movsl
lds
sub
push
fucomip
mov
sub
mov
cmp
andb
leave
xchg
out
sar
rcrl
fdivp
pusha
mov
lahf
daa
sbb
dec
call
mov
xchg
mov
xor
lods
ror
jae
stc
out
fisttpll
dec
mov
inc
cmpsl
mov
notl
mov
ds
push
ljmp
xor
mov
sahf
adc
sub
mov
ror
or
and
sbb
addl
rcrb
fstl
js
in
adc
mov
mov
in
mov
rorb
scas
mov
jle
sbb
cmp
int
sidtl
jl
jecxz
xor
pusha
sbb
decl
xchg
and
or
jg
or
adc
mov
push
jns
and
idivl
insb
test
xchg
outsb
pop
faddl
into
negl
or
xchg
sarl
jb
scas
sbbl
outsl
call
dec
cwtl
jle
push
adc
sbb
mov
cmp
xor
movd
repnz
pusha
into
out
cmp
cmpb
xor
jl
orb
popf
sbb
stos
enter
push
push
rcr
adc
out
rcrl
cltd
jecxz
in
adc
cmp
std
mov
aad
insl
out
xor
add
out
mov
xchg
dec
jno
xchg
jo
add
lcall
mov
jp
cs
movsl
lods
ret
repz
sbb
jge
push
in
push
cmp
jno
in
push
inc
aaa
xchg
iret
shll
into
pop
cltd
pushf
or
ret
mov
imul
jnp
fprem1
dec
or
push
lods
jo
jecxz
loop
adc
sbbl
out
jbe
xchg
test
fs
rdmsr
adcl
cmp
es
fs
xchg
push
out
pop
clc
ret
popa
jp
lea
push
jmp
sub
jge
and
xor
mov
imul
aam
push
push
mov
shll
push
xlat
in
mov
lea
sbb
pop
in
jo
jb
je
int3
std
test
pushf
add
pusha
aas
lods
shll
cltd
mov
ds
icebp
jae
pop
jae
rcll
out
xor
mov
call
xchg
add
dec
xorb
or
fisubl
jnp
dec
xor
rcll
negb
xchg
mov
ret
push
inc
and
xchg
jo
sbb
sub
xor
jp
push
pop
in
lds
dec
scas
ds
jo
sbb
sub
lds
push
nop
sbb
mov
adc
rclb
jne
mov
adc
adc
fidivrl
ljmp
and
mov
pop
push
and
mov
stos
jge
test
loopne
pop
sub
movsb
loopne
or
ficompl
fnstcw
jo
add
lret
inc
clc
mov
mov
stc
shlb
imul
in
sub
push
int3
popf
dec
mov
adc
out
in
cmpsl
xor
xchg
push
adc
rorl
jns
cmp
ds
dec
cmp
xchg
xorb
fdivr
std
cmp
ljmp
jnp
data16
or
test
dec
movzwl
cli
fldt
cmp
pop
sbb
pop
and
xchg
and
ficomps
jb
mov
lock
insl
pop
out
mul
push
es
cwtl
sub
daa
xor
pop
push
mov
lahf
and
mov
pop
inc
rorb
fsubs
mov
scas
sbb
or
or
push
xlat
push
or
aaa
in
push
fdivl
outsb
lret
loope
push
repnz
or
inc
ljmp
decb
scas
xchg
daa
inc
dec
or
mov
leave
and
iret
or
fisubrl
shlb
mov
mov
push
sbb
and
lods
fdivl
mov
sub
jg
pop
and
test
jns
jl
sbb
add
pop
lret
dec
repnz
in
loopne
mulb
xor
jb
mov
ficoml
leave
mov
test
xchg
mov
neg
into
cmp
aam
mov
mov
pop
dec
xlat
push
int
add
sub
out
out
ret
outsb
xchg
stos
mov
push
ficompl
fbld
cld
bound
movsb
inc
aas
in
cmp
sbb
xor
or
push
aas
divb
outsl
popa
sbb
jo
scas
xor
in
mov
lcall
mov
lret
aad
inc
cltd
sahf
pop
jp
movsl
insl
cmp
sbb
xchg
pop
lahf
push
push
push
xchg
cld
or
jb
loope
fdivr
or
arpl
xchg
call
fnstsw
xchg
rcrb
pop
clc
push
inc
dec
lds
dec
jb
mov
xchg
pop
jge
adc
scas
jo,pt
popa
cltd
jns
das
xor
pop
add
shll
dec
mov
rorb
sbb
xor
sbb
js
jl
syscall
push
and
sti
mov
gs
and
mov
and
ljmp
jo
test
adc
mov
mov
in
jbe
jp
xor
pushf
insl
and
out
ljmp
adc
dec
cmp
xlat
mov
and
jb
out
les
lds
outsb
jne
fisttpl
pop
inc
push
jl
adc
cwtl
mov
xchg
xchg
les
repnz
popf
sub
pusha
cmp
fsubs
or
sub
das
adc
pusha
adc
dec
xchg
inc
inc
shlb
pop
sbb
jno
pushf
and
inc
push
repz
push
xchg
in
push
lret
inc
or
jle
adc
jecxz
xchg
or
pushl
inc
cmpsb
inc
jo
movsb
adc
or
push
subl
movsl
andb
daa
cltd
jl
xor
xchg
fcomps
subb
dec
inc
sbb
push
test
icebp
mov
xchg
std
popa
sbb
fisttpll
cmc
pop
jae
int
and
mov
cld
add
add
add
jnp
inc
loope
xchg
loope
sub
cwtl
jmp
cltd
xchg
shll
stos
push
shlb
sbb
fcomi
cmp
push
rcl
bound
xchg
and
add
in
and
xor
dec
add
mov
adc
jecxz
fwait
daa
lods
lds
outsl
push
jns
mov
xor
lahf
push
xor
into
out
daa
or
xchg
cwtl
fs
or
and
jno
sbb
sbb
dec
rcll
or
repnz
test
rorl
cmp
imull
xchg
lret
lret
clc
pop
push
insb
pop
jle
mov
les
fdivrp
das
cmpsb
jne
jne
push
fcomi
sbb
sub
xchg
insb
ficompl
push
sbb
orl
aam
jmp
and
xor
out
movsb
mov
and
ss
adc
adc
repnz
jno
sti
cmp
push
push
les
sbb
js
sbb
sub
push
adc
jns
push
lods
aam
xorb
enter
inc
xor
push
mov
and
and
js
sbb
stc
push
iret
mov
push
sbb
outsb
aad
pop
jmp
push
and
cmp
lahf
xor
lods
and
scas
pop
insb
mov
insl
cmp
scas
or
les
mov
jmp
inc
insl
sbb
icebp
push
aaa
mov
cmp
sub
adc
fwait
sarb
into
push
mov
adc
popf
add
and
dec
mov
cli
inc
mov
cli
icebp
cwtl
mov
sti
xor
das
dec
shll
daa
sbb
add
icebp
data16
mov
push
fstpt
adc
shlb
xchg
ja
imulb
loop
sub
jp
ret
popf
enter
loop
cmp
ja
xlat
xchg
jae
mov
mov
cs
jle
mov
sbbb
call
ja
je
lcall
sbb
adc
lret
dec
fucomi
cmp
insb
mov
mov
lea
ror
lcall
bound
cwtl
rcl
add
or
outsb
cmp
das
div
pop
sub
push
push
and
imul
cmp
mov
cli
mov
push
jae
pop
js
stos
inc
sbb
xchg
ja
arpl
xor
pop
dec
ss
loop
cmpsb
sahf
dec
lods
push
xor
fsubrl
adc
mov
inc
sbb
in
xor
test
in
les
cmp
repz
pop
cmp
clc
xchg
pop
addr16
cld
mov
scas
inc
ficoms
les
cmp
lds
test
mov
bound
push
mov
cmpsl
repnz
and
call
push
sti
sbb
je
pop
xor
cmp
fwait
mov
daa
mov
and
jg
dec
mov
mov
pushaw
shll
cltd
lcall
jecxz
push
jb
mov
out
jbe
jl
pop
pop
ljmp
fcomps
jp
aas
mov
into
mov
and
stos
xchg
jge
cmpsl
jb
xor
out
pushf
int
scas
lods
jmp
clc
cmp
push
xor
aas
mov
shlb
scas
adc
add
test
test
in
dec
lock
jbe
xorb
aaa
dec
jae
xchg
ds
pop
mov
push
adc
test
mov
adc
adc
push
mov
adc
loope
cld
enter
add
xchg
filds
sbb
subl
cmp
scas
lods
adc
lret
ss
aas
dec
rcrb
and
ds
pushf
pop
sahf
pusha
bound
sbb
out
push
push
cs
out
dec
xchg
sub
mov
sbb
adc
loop
xor
loop
ror
jl
cmpsb
mov
imul
pop
sub
adc
loop
cltd
test
jo
add
sbb
push
lds
ja
aas
and
push
xor
je
ficomps
push
add
xor
push
cs
testl
cs
adc
neg
push
jle
sbb
pop
shrb
or
popf
jnp
fcmovne
repz
jo
hlt
repz
negb
xchg
push
dec
mov
sub
mov
dec
mov
pop
test
lods
dec
int3
or
or
call
popa
xchg
inc
cmp
ret
inc
cltd
mov
das
je
or
imul
pop
inc
ss
incl
shl
repnz
sub
lods
xchg
mov
lock
cmpsb
jle
stc
sub
push
nop
in
test
popa
mov
jmpw
mov
in
inc
jo
lea
dec
dec
add
mov
jp
dec
cld
js
pop
icebp
or
mov
pop
push
int
xlat
xchg
das
ds
stos
cwtl
sbb
add
mov
leave
cmp
mov
or
bound
out
movsb
cmc
into
jmp
insb
mov
push
decb
inc
outsb
in
add
in
and
das
test
mov
mov
out
into
dec
or
scas
xchg
sbb
sub
jno
or
ja
or
pop
fdivs
lods
xchg
test
pop
lock
mov
cmp
loopne
orb
fwait
dec
inc
negb
mov
mov
mov
and
pop
std
addl
add
sub
lret
mov
dec
lock
shll
pop
je
out
enter
mov
inc
in
sbbb
fs
nop
jno
mov
movsl
and
sbb
lret
add
clc
fcompl
xor
roll
insb
fnstenv
add
aaa
sub
enter
pop
xchg
pop
push
inc
dec
fmull
popa
sbb
jo
adc
mov
fists
rclb
pop
and
adc
cwtl
adc
outsl
xchg
add
daa
xchg
aad
xor
cwtl
popa
dec
movsb
mov
mov
lret
movsl
jo
packssdw
pop
stos
cltd
pushf
add
ljmp
jnp,pt
popf
xor
arpl
lcall
decb
out
ret
and
pop
xchg
je
inc
popf
sahf
in
jmp
std
mov
fisubrs
mov
shlb
cmc
jnp
pop
push
inc
or
pop
pop
sub
outsb
lock
add
sub
mov
adc
cwtl
mov
cld
addb
and
push
cmp
negl
cmp
loope
pop
jp
call
out
dec
popf
xor
leave
xchg
ret
fcmovne
lods
mov
lcall
mov
fimuls
les
jg
pop
adc
sbbl
jmp
pop
pop
lahf
mov
mov
mov
nop
mov
js
or
xchg
push
add
clc
sbb
lcall
aad
mov
nop
inc
icebp
clc
sahf
sbb
mov
sbb
push
add
mov
mov
dec
mov
fs
adc
adc
inc
and
ss
out
mov
idiv
jne
pusha
xchg
pop
cmp
lahf
js
pop
dec
repz
lea
or
or
cmp
mov
int3
and
jg
or
rol
push
sub
sahf
out
fldl
test
sub
inc
cmp
in
jg
cwtl
sarb
add
or
out
test
adc
fimull
jae
pop
add
mov
fiaddl
pop
pop
test
dec
aaa
sbb
ljmp
fmuls
aaa
out
repnz
lds
or
test
je
mov
outsl
pop
lcall
mov
xor
inc
sbb
test
or
push
dec
mov
add
or
xor
inc
clc
or
lcall
xchg
sub
icebp
clc
and
ror
pop
xchg
cmp
imul
cs
repz
mov
lret
pop
pop
mov
popa
lahf
cmpsl
sub
cmpsb
ja
mov
xlat
iret
pusha
pop
inc
push
andb
jb
dec
lock
xor
cmpsb
xor
dec
mov
aam
and
iret
out
dec
jp
loopne
mov
stos
mov
je
dec
movsb
icebp
add
icebp
jl
fmul
mov
iret
mov
mov
mov
stos
pop
and
dec
mov
in
out
out
jmp
jmp
push
into
add
xor
adc
dec
lcall
daa
sbb
pop
repz
std
lret
aaa
mov
push
cmpsb
pushf
fwait
test
jns
movsb
imul
aad
mov
outsb
loope
cmp
jle
push
mov
in
out
fdivl
aam
ret
ss
fistpl
cli
add
xchg
dec
mov
test
test
adc
mov
lock
cmp
lea
bound
out
pusha
cmpsl
mov
sub
jg
popa
sbb
mov
mov
bound
call
rcll
dec
sbb
loopne
mov
insl
inc
mov
movsl
mov
cwtl
xor
lcall
cmp
push
out
push
jecxz
cltd
dec
test
mov
lods
loopne
sbb
mov
arpl
vpmullw
add
xor
ret
hlt
xchg
mov
les
into
xor
out
hlt
mov
mov
cmp
mov
mov
or
jl
pop
fdivs
cld
test
inc
dec
js
lock
xor
daa
cld
mov
mov
mov
push
inc
and
and
mov
test
adc
pop
xlat
repz
push
ret
je
jp
mov
nop
push
sbb
mov
jo
insb
push
dec
testb
sub
scas
into
imul
bound
loope
mov
aam
jp
std
test
and
ljmp
mov
sub
lods
setne
ljmp
aas
add
sub
ret
adcl
or
mov
cld
xchg
int
lahf
int3
sub
movsl
cmc
inc
sahf
inc
dec
loop
add
sbb
popa
testb
sahf
and
sbb
js
movsl
dec
out
jl
je
shll
xchg
out
dec
inc
js
jp
js
sbb
mov
mov
mov
jae
cmpsl
jno
xchg
les
jge
sbb
jmp
or
out
sbb
sub
and
cmc
xor
xor
sbb
sar
push
mov
adc
inc
push
das
lea
push
mov
add
test
push
movl
mov
inc
push
xlat
daa
add
rorl
pusha
push
or
das
test
xor
mov
jmp
or
pusha
sbb
mov
inc
adc
mov
inc
fs
dec
xchg
cmp
jnp
repnz
or
push
dec
cmp
out
adc
mov
pop
or
ljmp
aad
and
fs
xchg
mov
insl
push
icebp
fcmovnu
push
add
and
roll
movsb
jae
xchg
or
lcall
and
mov
fstps
dec
pop
or
xchg
lods
xor
iret
outsb
je
les
adcl
out
jnp
cmp
ds
movzbl
cmpsl
dec
push
adc
mov
cmp
xor
sahf
andb
pop
xchg
and
jmp
js
andl
sub
mov
cmc
sbb
sarl
dec
cmp
xor
es
adcl
mov
repnz
outsl
cmc
sahf
mov
or
cmp
xor
loopne
shrl
push
sub
out
sbb
push
push
push
jmp
mov
popa
cmp
sbb
mov
out
in
cmp
inc
movsl
jmp
and
gs
mov
cmp
add
xchg
cmpsb
jecxz
incl
mov
test
in
jne
sbb
adc
jo
pusha
mov
mov
dec
in
xchg
adc
mov
sub
inc
mov
ljmp
mov
lret
add
sub
ds
dec
call
es
int
adc
insl
mov
push
pop
and
insb
jmp
pop
jbe
inc
add
jmp
out
mov
xchg
loopne
mov
lea
jecxz
inc
jecxz
setle
or
xor
mov
fildll
mov
xor
test
jns
xchg
xor
clc
fcmovnbe
shlb
cs
or
mov
xchg
out
mov
xor
imul
stc
sti
mov
inc
les
fistpl
hlt
rcl
imul
mov
mov
lret
hlt
xorl
xor
sub
or
adc
mov
mov
cmp
pop
jmp
push
ljmp
pop
sub
ss
filds
sbb
push
je
and
cli
add
mov
cmp
dec
enter
lds
sub
mov
out
jns
xchg
sbb
xor
push
dec
inc
outsb
ds
daa
jecxz
dec
mov
xchg
lods
int
mov
in
xor
xor
push
push
lcall
sbb
in
pusha
push
cltd
mov
inc
addr16
and
or
add
mov
mov
lock
rcl
xchg
cmpsb
shlb
ljmp
cmpsb
cmp
aad
push
xchg
in
jg
inc
cmpsl
repnz
sub
mov
mov
lret
mov
or
mov
inc
lahf
daa
ret
xchg
sub
hlt
pusha
fwait
cmp
jae
inc
mov
je
outsl
mov
jo
lret
fcoml
outsl
stc
jae
in
or
fstps
inc
fisttpl
out
out
addps
test
xchg
cli
cmpl
and
lock
in
pop
fs
dec
push
ljmp
xchg
push
mov
orl
roll
divb
inc
mov
sbb
sbb
jb
fwait
daa
mov
mov
scas
mov
add
es
mov
scas
dec
scas
xor
sti
cwtl
add
dec
mov
cmc
xchg
jb
xor
aam
sahf
pushf
mov
cmp
or
lret
or
adc
leave
cmp
mov
push
test
xchg
add
rcrb
sub
arpl
xchg
xor
sbb
dec
and
bound
adc
test
sub
xor
mov
addr16
or
loope
pop
andl
lret
nop
loope
cmp
leave
aad
push
outsl
mov
test
cmc
add
loope
in
cmp
roll
mov
mov
sti
ljmp
sbb
push
into
cs
iret
mov
push
aad
punpckldq
or
addr16
or
lock
out
jmp
int3
mov
and
xchg
lds
sub
enter
inc
int
into
ljmp
or
push
cmpsb
out
nop
add
xchg
inc
or
jge
mov
cmp
test
imul
fsubrl
insl
ud0
jb
fcmovnb
mov
in
ljmp
inc
je
test
sub
add
outsb
call
imul
leave
cs
pop
xor
jmp
dec
jmp
cwtl
test
shlb
cli
adc
les
in
filds
mov
jp
loopne
jge
inc
xchg
out
cltd
ss
fildl
std
pop
mov
inc
push
adc
repz
sbb
js
loop
lds
cld
lret
cmp
ds
push
out
adc
pop
mov
sbb
mov
or
or
lea
icebp
lock
out
incb
fcmove
adcl
xor
call
sub
pop
fstpl
jecxz
js
push
push
add
mov
int
test
jmp
mov
loope
push
or
xchg
or
and
push
and
mov
cltd
ljmp
or
cmp
and
sbb
xor
les
sbb
pop
icebp
mov
inc
imul
mov
mov
stos
xor
repnz
psraw
in
mov
mov
les
adc
data16
nop
xchg
inc
xor
mov
es
mov
adc
idivl
inc
push
xchg
stos
xor
inc
movsl
inc
cld
xor
repz
scas
jo
cld
inc
cld
mov
jg
test
imul
call
ffreep
mov
sub
lods
mov
and
rorl
add
in
ret
aad
mov
jge
subl
push
int
loopne
mov
cli
arpl
enter
std
fsubs
cmpb
add
add
mov
adc
mov
adc
repnz
mov
cs
fwait
pushf
xchg
imul
clc
push
fisttpll
inc
mov
ja
sub
es
lret
in
mov
pusha
inc
cld
int3
pop
sub
lret
dec
mov
xor
repz
loop
jae
mov
iret
iret
movsb
jecxz
pop
jae
dec
or
mov
cli
mov
mov
xchg
fdivrl
add
push
xchg
shl
cld
mov
popa
daa
cmp
xlat
popa
lods
daa
adc
mov
jnp
popa
rcll
fmuls
mov
bswap
sbb
bound
xor
ja
sahf
inc
sbb
push
test
call
inc
enter
movsb
cmpsb
fdivr
xor
jle
pop
std
inc
xchg
jbe
out
push
mov
daa
dec
inc
pusha
cmpsl
lods
add
popa
sub
mov
cmp
mov
or
imul
push
cmp
push
pop
inc
jnp
dec
repnz
and
xchg
mov
insb
push
pop
or
shll
inc
cld
sbb
rcrb
sbbb
mov
mov
push
mov
mov
xor
lcall
mov
in
in
mov
push
jno
sbb
or
xchg
pop
jge
xchg
pop
in
mov
push
lret
roll
cli
mov
and
scas
xor
or
mov
inc
or
xchg
push
cmp
push
stos
int
jae
out
in
add
jl
sbb
xchg
daa
mov
popf
adcb
sbb
loopne
int3
dec
push
in
sbb
pop
or
lret
mov
repnz
fstpl
fmull
and
mov
insb
mov
add
test
subl
lds
push
push
iret
inc
and
adcl
dec
or
sarl
repnz
inc
xor
xchg
pop
dec
rcrb
add
in
xlat
pop
mov
dec
and
scas
sti
sti
add
jl
popf
cmp
dec
push
cmp
pop
cmp
xor
aaa
xorb
repnz
push
pop
addb
pusha
sahf
sar
ds
leave
and
in
mov
pop
mov
lahf
adc
add
mov
and
js
faddp
clc
lods
sarl
adc
dec
mul
loopne
lahf
push
es
jne
fistpll
and
in
fildll
in
mov
jns
or
aas
inc
xor
lds
sbb
hlt
adc
in
add
xor
test
adc
rclb
jle
rolb
cld
das
or
out
push
dec
out
iret
rcll
addb
dec
ds
inc
xchg
icebp
push
popf
scas
push
and
add
or
or
jecxz
xchg
push
push
out
and
cwtl
shl
mov
cwtl
nop
or
sbbl
test
leave
enter
lds
push
inc
into
in
pop
mov
cmp
orl
and
mov
loope
sti
sbb
repz
js
fdivrp
xor
push
loop
cwtl
mov
adcb
insb
ret
xor
xchg
dec
or
mov
ss
data16
lret
xchg
into
mov
rcll
xchg
and
es
mov
xchg
out
jge
daa
mov
mov
lock
jge
hlt
and
dec
int
or
aam
in
mov
nop
sub
inc
mov
or
outsl
shlb
pop
repz
inc
fmul
shll
dec
push
insl
sub
sub
sub
out
clc
pop
mov
pusha
pop
jp
jo
aam
or
push
test
sbbb
push
adc
movl
sbb
dec
fwait
movb
adc
ffree
mov
adc
stc
iret
cs
push
movsb
add
insl
sar
or
clc
nop
pop
or
fistl
xchg
mov
xchg
scas
pop
addb
popa
cmp
jnp
loope
and
and
aam
pop
push
in
lcall
cwtl
cmpsb
inc
enter
jecxz
mov
adc
cs
sub
mov
push
cmp
icebp
outsb
sti
pop
push
mov
inc
cli
adc
sub
adc
xor
push
shl
mov
into
sti
mov
rclb
rcrb
jmp
xchg
jne
and
aaa
add
dec
cmpsb
into
and
ds
dec
mov
fmull
add
xchg
arpl
stos
sub
lahf
and
stc
int3
stos
xor
or
pop
les
sbb
push
adc
notb
xchg
in
mov
fisubs
into
xor
pop
je
fs
loopne
sbb
xor
pop
xchg
sub
pop
add
outsl
outsl
jecxz
xor
add
and
cmp
dec
lahf
mov
call
loope
pop
clc
iret
lahf
xchg
and
pop
and
sbb
inc
xchg
sub
mov
mov
push
mov
cmpb
or
faddl
daa
shlb
lahf
pop
insb
mov
js
sbb
rcrb
fisttpl
fstp
outsl
inc
hlt
push
sahf
lods
xchg
mov
mov
mov
sbb
movsl
sub
add
loopne
aaa
xor
inc
cmp
ds
mull
sarb
cmp
cmp
out
cmpsb
dec
sub
mov
popa
fcompl
inc
mov
mov
and
fstpt
lret
into
lods
xchg
ret
rorb
lret
stc
cmp
inc
adcl
and
rolb
jnp
cltd
outsb
cltd
sbb
aaa
inc
lcall
ror
add
adc
stc
push
cmp
in
push
mov
ljmp
out
scas
test
pop
cltd
add
enter
mov
enter
cwtl
xor
xorl
push
cld
mov
mov
mov
imul
lods
test
mov
cmpsb
popf
dec
repnz
fstpt
shlb
mov
dec
mov
pop
adc
pop
lret
cmp
add
push
inc
in
leave
xchg
xchg
xor
sub
mov
ret
pop
sahf
sbb
sahf
iret
inc
dec
jns
iret
xor
mov
pop
pop
xor
inc
add
lea
xchg
adc
dec
cmc
notb
cmp
jo
inc
fcmovb
pop
out
push
pop
xchg
mov
aas
cmpxchg
adc
jl
mov
mov
and
push
xchg
in
pop
sub
sbb
inc
mov
inc
xchg
insl
fmuls
fdivr
adcl
jge
mov
mov
rol
mov
lcall
ficomps
in
outsb
or
push
adcb
jae
adc
dec
jmp
stos
sub
cli
push
push
mov
icebp
ret
lds
jg
in
jge
dec
rol
jmp
inc
cltd
push
add
mov
xchg
pushf
shrl
lds
addr16
lret
out
in
ja
xchg
jno
adc
sub
jp
pop
sbb
push
push
nop
out
mov
add
std
pop
add
sbb
mul
test
test
pusha
add
cmp
sbb
sbb
cli
sub
sub
int
lock
push
push
push
ds
sbb
jno
mov
sarb
mov
push
scas
xchg
sub
shrb
insb
xor
imul
hlt
mov
push
insb
xchg
les
pop
out
fwait
outsl
sbb
push
test
call
mov
arpl
pop
cmp
lret
out
jle
fiaddl
push
sub
dec
clc
xchg
in
mov
icebp
jo
dec
sarl
jmp
xchg
pop
lea
dec
push
lcall
dec
repz
bound
jmp
mov
cs
sbb
sahf
or
dec
jb
out
mov
std
fisttpl
mov
jge
lahf
inc
inc
filds
out
jne
ljmp
in
xor
adc
cwtl
xor
and
test
int3
cs
hlt
outsb
or
add
scas
mov
popa
inc
cmp
and
setge
mov
das
push
sub
jne
sbb
movsb
xchg
xor
mov
lahf
aas
testb
stos
push
cmpsb
cmpsl
pushf
push
repz
xchg
adc
add
mov
jb
mov
jno
mov
iret
mov
sbb
jle
aas
jecxz
sub
enter
dec
and
rclb
repnz
cltd
cmpsb
adc
jg
pushf
decl
andl
shr
outsl
addr16
in
insl
mov
mov
cmp
push
dec
out
mov
jae
test
repnz
shl
cmp
cmpsl
xchg
outsb
gs
mov
sbb
orb
inc
out
mov
dec
push
inc
jl
decl
adc
shll
out
jns
xchg
clc
jnp
cld
fcmovne
aam
xchg
in
lret
push
pop
xlat
cltd
fstps
pusha
push
xor
lcall
mov
popf
sub
adc
into
mov
xor
sbb
andl
jmp
cmp
fcoms
jnp
mov
jmp
dec
loopne
je
cmpsb
jge
sbb
xor
cmp
mov
loopne
imul
es
into
jns
mov
outsl
jg
cmpsl
outsb
mov
pop
addr16
xchg
mov
xor
and
pop
cmp
adc
lcall
adc
aas
fsts
or
jg
outsb
or
aaa
data16
repz
push
or
fwait
int
repz
out
cmovs
xchg
js
xor
aas
js
sub
push
dec
cmp
or
cltd
mov
mov
dec
in
pop
in
pop
fsubl
mov
pop
mov
xlat
jns
push
mov
mov
push
fisubrl
jne
dec
std
adc
cmp
sbb
repnz
scas
pop
mov
out
add
xchg
mov
cmp
rcrb
jecxz
ret
adc
mov
dec
push
lcall
jle
xor
in
mov
mov
push
in
dec
inc
das
cmp
adc
xor
call
in
dec
mov
ret
cs
xchg
int
push
fs
mov
int3
pushf
sbb
pusha
xchg
clc
scas
pop
and
or
xor
insl
addr16
bound
repnz
jne
xchg
int
enter
cmp
pop
movsl
jle
mul
mov
adc
push
add
cmpsb
mov
jmp
cmc
incl
lahf
inc
imul
enter
adc
sub
jmp
sbb
dec
js,pn
sbb
xor
cmpsb
push
mov
pushl
subb
or
sbb
jne
repnz
adc
lock
and
in
cmpsb
call
xchg
call
sub
mov
cmp
push
xchg
ret
add
arpl
mov
je
jbe
jmp
int3
jp
inc
push
popa
ret
inc
fcoms
pop
push
cmp
mov
sbb
push
or
jb
int3
sbb
jno
xchg
or
ja
sbb
xor
sub
xor
add
sub
mov
into
adc
mov
int3
lahf
push
stos
test
inc
sub
cmp
pop
cli
dec
outsb
xchg
pop
lock
scas
pop
outsl
mov
sub
jg
pop
add
lahf
rcl
or
iret
sbb
rcr
fadds
mov
add
jb
fs
lret
inc
call
inc
pop
lret
cmpl
jno
out
dec
sbb
mov
scas
mov
jl
and
sub
xchg
sbb
insl
xor
test
sbb
lcall
test
imul
sbb
adc
add
ds
dec
mov
insl
int
lock
ljmp
fs
mov
dec
in
push
leave
lahf
inc
mov
insl
cmpsl
or
dec
inc
pop
push
cli
mov
mov
sbb
cmp
ffree
sub
xor
scas
mov
scas
jo
jg
aaa
sbb
dec
and
sub
push
mov
aam
xchg
inc
jmp
mov
mov
mov
fildl
sbb
push
test
call
sarl
mov
cmc
pop
adc
push
mov
sbb
cmp
mov
lea
mov
sub
test
mov
cmp
sub
pusha
test
sub
test
jbe
incl
inc
inc
inc
scas
mov
mov
push
shrb
hlt
mov
jl
sub
arpl
mov
loope
jae
jg
lods
jne
mov
enter
fwait
ret
xchg
jnp
test
iret
scas
ja
mov
push
xchg
popa
or
out
mov
mov
mov
arpl
mov
fidivrs
jmp
push
lret
bswap
cmp
mov
jb
stos
arpl
cmpsl
popa
fisubs
lcall
repnz
cmp
fs
cwtl
fmull
ljmp
sbb
popf
inc
inc
movsl
arpl
jl
or
mov
mov
dec
xlat
fcmove
negl
ss
mov
push
xchg
inc
push
cmp
jge
xchg
mov
lods
add
daa
mov
push
sub
mov
mov
or
mov
es
lds
fisubs
scas
and
movsl
add
pop
dec
inc
dec
add
out
fwait
adcb
jae
cmp
and
xor
std
mov
shrb
test
add
jge
or
call
adc
lods
lcall
jle
notl
es
xchg
pop
enter
inc
mov
add
or
js
xorb
imul
dec
lock
popl
loope
mov
adc
sbb
test
lock
lcall
sub
xchg
add
daa
push
les
ror
cmpb
inc
push
cmpsl
jmp
cmp
sti
mov
repz
imul
lods
les
out
lock
add
daa
xchg
adc
and
or
insl
add
movsb
addr16
push
out
fbstp
cs
push
in
loope
xchg
or
cmpl
jle
inc
sarb
mov
int
xchg
push
int3
cmp
jle
aam
xchg
clc
iret
xor
imul
pushf
xchg
stc
inc
dec
orl
into
mov
test
dec
es
pop
lds
ja
test
xorl
pop
xchg
testb
mov
add
xor
roll
stc
inc
je
adc
push
orb
mov
pop
fadds
dec
xlat
fucomp
push
mov
push
cmp
out
insb
inc
shrl
daa
mov
or
pop
cmp
andl
shl
shlb
add
push
cmp
add
dec
xorb
and
outsl
pop
daa
push
and
lcall
pop
mov
lods
or
aad
out
daa
pop
pop
clc
insl
dec
test
movsb
dec
stc
push
fucom
adc
mov
xchg
repnz
ljmp
shlb
jl
mov
js
adc
adc
sub
or
daa
mov
sub
mov
push
ss
cwtl
in
adc
dec
movsb
push
stos
xor
push
daa
push
test
mov
shld
dec
lea
or
push
mov
mov
sbb
dec
leave
es
leave
rorb
mov
lock
add
movsl
jbe
and
shll
mov
or
fisubs
jbe
mov
rcl
sbb
les
cmc
movsl
out
popf
pop
sbb
std
mov
iret
dec
mov
pop
push
push
out
push
lock
lret
repz
es
and
and
ja
mov
jl
out
nop
xlat
xchg
test
inc
lods
fnstenv
scas
cltd
repnz
orl
push
inc
ljmp
into
add
test
pop
xchg
xchg
pop
cmc
rcll
xor
add
pop
inc
jb
push
xchg
sbb
pop
mov
dec
lods
push
or
stos
out
ds
mov
mulb
xchg
push
popf
adc
stos
xchg
xchg
aam
faddl
xchg
sbb
push
fyl2xp1
cs
pushf
mov
fwait
in
xchg
pop
mov
mov
dec
sbb
xchg
sub
andps
mov
or
mov
imul
aaa
outsl
pop
or
push
outsl
add
in
pop
add
mov
mov
dec
insb
pop
jb
cld
not
aaa
orb
addr16
jno
loop
add
outsl
jnp
dec
mov
adc
mov
sub
out
ds
stos
mov
arpl
in
jae
testb
out
imul
and
add
popf
mov
fcmovnb
outsb
out
out
and
mov
or
sub
loop
sti
xchg
add
jmp
pop
mov
push
and
out
rorl
cmp
rolb
cwtl
push
add
mov
jle
ja
imul
mov
adc
push
jne
addl
cmc
jmp
lock
jb
xor
jmp
dec
cli
and
add
scas
dec
push
mov
push
mov
add
jbe
sub
or
stc
fisttpl
pushf
sti
push
imul
idivb
call
shrl
lret
sub
loopne
stc
mov
negb
mov
arpl
andb
inc
fcmovnbe
jb
add
push
push
jno
test
sub
pop
xchg
arpl
sub
mov
out
frstor
gs
jne
push
mov
mov
dec
loop
es
pop
enter
push
pop
pop
mov
rcll
pop
push
test
das
scas
sub
jmp
inc
pop
fimuls
pop
scas
or
out
push
jb
xchg
mov
outsb
arpl
lahf
mov
mov
adc
add
xor
sahf
xchg
push
stc
popf
loopne,pn
fimull
push
das
inc
sub
nop
lods
xchg
inc
push
fwait
add
sbb
and
rep
sub
int
in
push
and
inc
imulb
loope
cmpsb
aaa
mov
fcom
and
arpl
lahf
xchg
fs
sbb
pop
shlb
push
push
loop
xchg
jbe
inc
mov
mov
jp
icebp
inc
jg
xchg
sbb
or
addb
mov
fidivrs
and
mov
mull
cmp
sti
shll
jbe
xchg
mul
popf
or
or
je
mov
lret
sarb
cmp
pop
out
lea
pushl
stc
inc
xchg
ror
push
mov
mov
call
not
movsl
dec
dec
cmp
sub
je
sti
out
popf
aas
lea
stos
fimull
std
adc
and
stc
imul
sbb
sahf
je
mov
xor
out
cmp
loopne
push
test
inc
movsl
jne
lock
sbbb
add
fdivrs
rclb
loop
jg
or
int
fadds
and
les
inc
je
jno
cwtl
rolb
fistl
icebp
sbb
stos
testb
and
outsb
sub
out
pop
mov
or
iret
clc
xchg
xchg
cmp
lret
les
and
push
xchg
xchg
lea
or
loop
int3
in
add
ja
cmpb
push
sti
mov
fwait
dec
pop
mov
mov
dec
inc
lods
scas
outsl
iret
cmp
in
pop
ror
cs
adc
sti
loope
push
mov
sbb
cld
jbe
sbb
xchg
divl
inc
pop
leave
mov
mov
xor
adc
push
imulb
bound
mov
jle
mov
xchg
xchg
adc
prefetcht0
cmp
xor
icebp
pusha
cltd
cmc
xor
shrb
push
in
insl
mov
and
pop
insl
xchg
xlat
je
push
cmpsl
push
push
inc
shrb
in
cs
inc
pop
cwtl
push
mov
pop
mov
punpckhdq
add
lret
imul
in
xchg
enter
js
in
adc
cwtl
in
outsl
repnz
sar
jp
lcall
testl
xor
cmp
lods
dec
imul
pusha
aam
dec
arpl
or
in
rclb
bnd
es
aam
sbb
pusha
or
sar
clc
out
out
sub
fdiv
add
shlb
push
mov
inc
ret
jg
cmpsb
into
hlt
xchg
clc
mov
xor
fildll
push
mov
adc
notb
mov
cmp
jl
jb
xor
push
fimuls
outsl
push
sub
adc
push
stos
xchg
lcall
mov
push
decb
adc
bound
addb
mov
mov
mov
adc
lock
je
getsec
jnp
ja
jnp
daa
rcl
shl
xor
xchg
xchg
sbb
xchg
pop
scas
and
test
xor
and
inc
dec
jmp
repz
jecxz
fsubl
insl
mov
cld
and
loop
addr16
or
jns
add
push
dec
adc
inc
jae
and
sub
mov
ret
mov
mov
lret
loopne
push
insb
andb
js
jnp
jae
inc
xor
int3
pop
or
lret
jbe
ds
mov
cmp
rorl
jnp
fcmovne
in
shrb
shlb
movsl
ret
sub
js
test
inc
pop
inc
cmp
sahf
mov
clc
adc
cmp
into
lcall
sub
addr16
mov
es
mov
lock
cwtl
xchg
mov
adc
dec
sub
xchg
in
jno
xor
sbb
fcoms
pop
cmp
pop
mov
adc
data16
jle
in
vandps
lods
sbb
push
ljmp
filds
out
daa
fbld
imul
sbb
fnsave
push
cmp
neg
push
push
out
push
add
out
lods
or
sbb
clc
add
in
sbb
enter
daa
mov
jbe
mov
or
iret
push
ficompl
test
adcl
or
push
stc
pusha
mov
dec
cltd
fisubl
repnz
insb
mov
in
leave
mov
adc
cmpsb
jo
adc
lods
dec
enter
mov
jge
and
inc
das
andl
push
divl
mov
add
push
cmp
add
jl
gs
jo
dec
xor
push
and
inc
xor
or
mov
popa
scas
out
mov
push
test
call
mov
push
arpl
lea
and
std
push
jns
dec
xor
fists
div
xchg
sbb
enter
adc
jo
adc
inc
popa
cmp
add
jl
xor
js
scas
ret
xchg
jo
sbb
and
cmp
sbb
loope
cltd
push
jnp
sub
dec
mov
imul
out
sbb
pop
test
sbb
fists
popa
test
ds
enter
and
nop
outsb
imul
fnsave
jb
int
jmp
jg
outsl
fdivrs
dec
sbb
rolb
fsubrl
pop
sub
mov
mov
sbb
cld
in
pop
xchg
push
sub
sub
lock
rorl
popf
push
jns
cmp
sub
add
xlat
mov
outsl
lahf
arpl
enter
stc
or
push
pop
push
dec
mov
jns
jns
addl
pop
ret
jge
sub
sahf
std
lcall
loop
dec
push
xor
imul
pop
loopne
lea
xchg
addr16
inc
faddl
sbb
jg
sbb
cs
mov
inc
xlat
in
fsubrl
dec
and
jne
arpl
lea
enter
xor
adc
mov
clc
mov
jo
or
xor
push
cmpb
sub
push
push
mov
inc
in
iret
pop
flds
inc
push
in
mov
test
divl
sarl
mov
pop
xchg
pop
or
scas
add
push
mov
scas
adcb
loope
sbb
shll
loopne
push
fucomip
ja
dec
sub
jp
and
shrl
or
pop
xchg
movhps
aaa
aad
cmpl
and
daa
into
lret
mov
rep
mov
mov
pop
mov
loope
push
pop
scas
vxorpd
mov
mov
pop
fs
cmp
pop
inc
adc
add
das
add
outsb
subl
pop
pop
xorb
mov
testb
sahf
jb
jae
repnz
into
sbb
cs
mov
fld
push
lret
jns
push
sbb
insb
loop
jae
mov
push
ljmp
ds
out
loopne
mov
mov
and
loop
xchg
mov
dec
outsb
sub
insb
xor
sub
dec
sub
ret
repz
adc
rcrl
xchg
pushf
mov
push
push
xchg
jmp
cmc
and
push
adc
mov
lret
mov
sbb
ds
or
aam
xlat
pushf
jnp
xchg
cmp
std
enter
jo
aad
sub
pop
lods
mov
xchg
push
and
in
jg
inc
xor
pushf
xlat
xor
gs
sarb
out
gs
mov
mov
xchg
leave
cmp
sbb
pop
lods
add
dec
push
out
pop
in
dec
scas
scas
lock
mov
test
repz
xchg
push
cmp
push
mov
push
mov
fwait
lcall
push
insl
test
inc
dec
cmpsl
pop
cmp
push
push
es
and
orl
mov
jnp
repz
lahf
cmp
mov
mov
in
or
cltd
mov
mov
jns
dec
stos
push
lock
or
rorb
mov
clc
rcl
pop
xor
pop
add
pop
add
daa
popf
fcmovbe
sbb
cmp
mov
repnz
inc
push
in
pop
xchg
push
leave
xchg
push
into
scas
jecxz
push
cmc
xor
pop
lcall
jnp
mov
das
push
jnp
test
push
loope
data16
jge
mov
xchg
sub
pop
scas
sub
movsl
repnz
testb
adc
into
aam
and
aad
fidivrs
and
xchg
fistpll
hlt
jnp
daa
pop
pop
cmpsl
add
push
push
pushf
xor
adc
mov
inc
sbb
int3
or
jp
adc
fmuls
dec
inc
xlat
subb
mov
jne
inc
jbe
insb
in
and
fsubrl
mov
adc
sub
adc
or
cmc
inc
push
mov
daa
fwait
mov
mov
add
cmp
pop
sbb
xchg
cs
out
lret
inc
fsts
cmp
aas
xorl
andl
mov
pushf
sbb
push
dec
jno
in
add
outsb
and
mov
xor
repnz
and
jle
aam
add
rcrb
lock
in
frstor
mov
jns
stc
cmp
and
iret
mov
pop
jmp
dec
mov
mov
je
sub
jecxz
test
incl
pusha
or
jmp
xchg
clc
sbb
dec
mov
dec
dec
enter
sti
mov
cltd
xchg
in
mov
in
lods
call
jb
add
sahf
movsb
or
push
cmp
mov
mov
insl
xchg
or
je
stos
cmp
mov
sbb
inc
dec
test
sbb
std
or
jl
stos
test
popa
vmsave
xchg
pop
dec
stos
punpckhdq
inc
cmpsb
cwtl
push
mov
dec
das
loop
inc
and
push
scas
sbb
fwait
mov
sbb
nop
sti
cmc
xchg
outsl
mov
insb
xchg
jmp
jns
xchg
fcmove
push
lcall
pop
add
jecxz
cmp
pop
into
repnz
mov
inc
and
mov
cli
mov
sti
js
adc
jl
jb
roll
cmp
xchg
cmp
pop
sub
mov
sbb
mov
sub
lret
out
ror
dec
gs
pop
into
add
pop
popf
testl
cmp
lret
or
mov
int
mov
out
adc
xor
cli
mov
mov
mov
sbb
mov
mov
inc
fcompl
and
jo
mov
movsl
movsb
insb
mov
mov
or
xor
mov
sbb
mov
lds
cld
leave
aaa
popa
jns
cli
and
ss
call
into
hlt
mov
insb
mov
sub
pop
ret
mov
shl
test
aaa
fldt
in
sti
movsb
pop
mov
out
arpl
dec
dec
pop
shrl
aas
adc
aam
xor
jae
fyl2xp1
fstpl
daa
jo
icebp
clc
pusha
mov
je
in
and
nop
push
jmp
pop
lea
enter
sbb
jg
cli
dec
les
xchg
int
frndint
pop
insb
es
flds
jns
inc
jo
push
out
decl
xor
lods
and
cwtl
dec
push
jge
into
mov
mov
adc
sub
sub
cs
fnstcw
jl
jg
icebp
insl
insl
or
sahf
dec
rolb
es
or
pop
jbe
inc
mov
pusha
adc
cmc
icebp
and
adc
ret
sbb
or
adc
xchg
xor
adc
mov
cmc
outsl
sarb
inc
ljmp
repz
popa
dec
mov
icebp
xor
xchg
jnp
sbb
clc
xchg
adc
and
imul
sldt
stos
push
shrl
clc
and
sub
in
xchg
xor
pop
adc
sbb
inc
xchg
das
sbb
xor
push
sbb
dec
aad
adc
repnz
inc
dec
cmp
jle
add
adc
push
inc
ljmp
sbb
in
pop
into
or
mov
jno
sub
call
dec
fwait
inc
aas
call
fbld
cltd
pop
je
xchg
mov
add
jne
mov
mov
int
les
js
sub
ljmp
pop
dec
std
mov
pop
xchg
sbb
cmc
lret
push
adc
mov
mov
jns
or
sub
mov
jg,pn
test
cmp
xchg
lea
pushf
int
xor
fistpl
aam
shrb
mov
cmp
sbb
pop
call
outsb
cmc
enter
cwtl
xor
aad
addl
outsl
push
adc
and
mov
push
sub
cwtl
pop
daa
mov
mov
imul
push
aam
xor
mov
sub
and
mov
hlt
ja
push
hlt
xor
or
je
inc
cmp
lahf
ud1
out
mov
movsb
mov
adc
xor
xchg
sub
push
lret
cmp
mov
mov
fldenv
test
mov
inc
push
jae
pop
mov
cmp
gs
call
in
mov
jne
inc
into
icebp
and
aas
xchg
ljmp
iret
sbb
shlb
jbe
dec
int3
sbb
js
aad
andl
add
jg
sbb
lods
fbstp
xor
fsubr
loop
dec
rol
mov
jl
jbe
fmull
mov
and
mov
sub
jo
jmp
adc
loope
mov
xchg
jno
dec
fsubrl
fisubl
push
or
stc
mov
ret
or
jo
adc
stos
push
lret
pop
xchg
or
dec
roll
xor
and
jl
xchg
sti
data16
call
jmp
outsb
decb
jo
loopne
testb
adc
or
movsl
sbb
je
dec
jecxz
into
rclb
push
dec
ljmp
out
or
push
fists
sbb
imulb
sti
mov
fwait
lret
and
or
inc
int3
fdivl
mov
or
xor
sub
cld
or
add
xlat
cmpsl
sub
pop
testl
movsl
ror
dec
rclb
cmp
mov
popf
ret
lcall
in
dec
or
dec
lds
movsl
sbb
add
push
out
inc
loope
daa
fsts
sbb
xchg
arpl
test
pop
xchg
add
sub
int3
rorb
mov
cmp
jno
lahf
nop
lock
pop
cmp
ror
stos
cmpsb
pushf
fmuls
pop
neg
add
mov
adc
adc
xor
cmp
add
dec
dec
xlat
mov
lahf
sub
xchg
pop
lea
imul
mov
cmpsb
jmp
add
push
xchg
xor
ret
push
push
and
testb
xchg
orb
int3
imul
mov
add
xor
out
dec
repnz
out
pop
mov
mov
ja
mov
iret
add
inc
int
or
adc
and
mov
add
adcl
mov
imul
fadd
inc
fiaddl
mov
clc
daa
shlb
add
lds
push
es
dec
cs
bound
and
cmp
iret
cs
ret
pop
and
adc
jno
movsb
loope
dec
test
out
xor
lods
sbb
aaa
iret
inc
dec
fcoml
in
and
jmp
sub
rolb
addl
lods
lods
dec
jo
pop
movsl
or
btr
fs
mov
fs
aas
sub
shlb
int
mov
out
add
nop
aas
xor
or
rcrb
dec
xchg
jmp
icebp
or
rcr
js
leave
add
lods
jg
mov
clc
mov
lret
lods
or
pop
xor
xchg
in
pop
push
loope
leave
xor
cmp
push
or
sub
sbb
sahf
sub
dec
xlat
lds
mov
xchg
cmp
loopew
mov
mov
dec
in
xchg
loop
les
pushf
inc
loopne
mov
inc
idivl
and
push
cmpsb
call
test
cmp
xlat
inc
push
sub
sbb
push
ja
loop
jge
xor
iret
shlb
rorl
aas
or
dec
sub
sbb
cmp
ds
and
mov
xor
rorl
inc
stc
adc
test
add
mov
inc
mov
scas
or
or
jno
jo
in
jbe
pop
loope
clc
pop
inc
rcr
jns
pusha
pop
aaa
adc
sarl
jae
out
popf
inc
jnp
mov
lds
and
inc
sbb
and
iret
inc
aam
pop
inc
inc
mov
out
xlat
inc
cmp
mov
dec
outsl
mov
shl
fwait
xor
stos
mov
movsl
jbe
mov
mov
or
mov
cmp
js
ds
ljmp
sub
mov
aad
cli
sbb
mov
jp
cwtl
mov
sti
xchg
cwtl
mov
scas
add
cld
inc
dec
fiaddl
jne
fs
cli
push
mov
mov
lahf
lahf
inc
cmp
inc
jp
mov
hlt
mov
xor
fwait
out
test
sbb
fs
sbb
leave
cmpl
sub
inc
shlb
test
adc
cs
aam
jg
add
ljmp
sbb
inc
insb
stos
enter
inc
repz
icebp
jo
mov
mov
mov
or
andb
cltd
imulb
and
cmp
sbb
adc
bound
jnp
in
shlb
ja
pop
std
loopne
dec
adc
xor
sub
shl
std
xchg
inc
push
add
mov
sbb
les
pusha
cmp
adc
and
and
dec
mov
gs
xor
out
sbb
aam
add
add
adc
pop
mull
fstpl
inc
out
dec
or
mov
cld
push
pop
sbb
adc
lea
mov
pop
jle
inc
fldt
dec
mov
lret
stc
lock
mov
sbb
inc
aaa
mov
xchg
xchg
ss
std
lret
or
ja
out
roll
int3
in
andb
or
push
bound
fcom
xchg
cli
scas
icebp
mov
mov
and
jmp
cmp
sub
imul
stos
adc
lods
xor
std
ljmp
mov
imul
es
dec
jne
fbld
std
push
loopne
in
int3
repz
jnp
inc
jo
adc
cli
ljmp
xchg
les
sbb
cmp
lods
adc
pusha
into
dec
sub
sub
jp
lret
jnp
stos
fadds
sar
mov
insb
in
jl
xchg
inc
ds
sub
mov
xchg
push
pusha
push
sbb
xlat
xchg
jo
jnp
inc
mov
into
leave
add
fcmovnb
sub
lahf
dec
inc
xchg
dec
cmp
mov
shrb
pushf
sti
ffree
xor
sbb
subl
cs
sbb
ja
outsl
out
mov
out
mov
sahf
clc
insl
add
arpl
xor
cmpsl
add
sbb
fimull
iret
and
xchg
pop
incl
fsubrl
pusha
mov
lods
and
pop
jl
cmpl
sub
movsl
stc
pop
pop
lock
pop
jg
es
loope
imul
in
xor
mov
ja
push
stos
mov
mov
push
std
aaa
fs
lea
dec
lods
insb
mov
inc
ret
hlt
push
addr16
mov
pop
fcoml
lret
dec
das
pop
sarb
jle
adc
xor
adc
pop
xor
dec
jne
outsl
xchg
gs
add
add
lret
jle
mov
in
xor
out
push
push
sbb
shld
push
cmp
push
push
fnstsw
outsl
mov
jnp
outsb
sbb
in
popa
xor
nop
cmp
and
and
cmp
pop
jne
sbb
fadds
sub
adc
mov
mov
fimuls
push
xor
out
daa
bound
pop
popf
aaa
sub
pop
out
enter
jbe
fstp
pusha
or
js
in
pop
mov
sub
ds
mov
or
cltd
sub
jle
jb
jg
inc
int3
jns
pusha
adc
daa
cmp
adc
cmp
pop
lahf
ja
push
push
and
xorl
dec
lea
mov
xchg
cmpb
je
or
ret
mov
int3
js,pn
pop
ficoml
sbb
sub
sarb
cwtl
push
out
adcb
jae
cli
add
push
cmp
sub
mov
aam
sbb
shrb
cmp
lods
and
js
mov
loopne
or
fstpt
adc
add
push
push
jbe
sub
loope
arpl
adc
mov
or
gs
pop
cmp
test
aam
sbb
ret
stos
and
xchg
test
ret
loope
push
xchg
xor
pusha
jmp
pop
js
jmp
out
sbb
adc
xchg
rep
sbb
data16
jo
and
imul
std
aas
sarb
into
sub
rorl
into
sub
lock
xor
jmp
or
cmpsl
jp
repz
mov
cmpsl
push
bound
or
call
push
stos
lahf
push
in
rcll
pop
xchg
inc
insb
stc
fidivrs
sbb
adc
ja
mov
dec
je
dec
hlt
rcrl
int
adcl
in
mov
enter
and
xchg
inc
sub
xlat
addb
cld
std
popa
lods
cwtl
jbe
aaa
and
dec
adc
push
jl
xchg
iret
filds
push
pop
in
xchg
pop
idiv
dec
mov
cmc
lea
rcrl
xor
stc
mov
fcmovb
shl
lods
sbb
xchg
rcll
sub
add
cmp
inc
sbb
push
mov
xor
scas
inc
mov
ljmp
dec
sub
xchg
jno
push
jl
jne
sub
push
cmpsb
push
jl
mov
popf
add
leave
pop
and
aas
and
mov
add
pushf
jl
mov
lock
sub
js
sub
jae
dec
fsubl
rcrb
call
jnp
scas
jo
and
stc
ljmp
addb
movsb
xor
mov
stos
loope
test
mov
int3
outsl
push
lea
mov
push
jmp
and
jmp
jns
fistl
cwtl
or
movsb
pop
add
xchg
pop
sub
mov
pushf
je
xlat
andl
rol
insb
xchg
shll
fisubrl
xchg
daa
add
inc
shll
push
insl
jo
dec
pop
out
inc
cmpsl
loope
imul
nop
xchg
and
xchg
mov
adc
lahf
push
popa
arpl
pusha
repnz
shll
xchg
pop
xor
push
fmulp
or
sub
adc
push
mov
xchg
sti
xlat
scas
inc
and
cmp
insb
push
inc
cmp
xchg
pop
mov
divb
adc
into
mov
xor
adc
into
fsubl
bound
gs
mov
lcall
mov
jbe
cmp
int
pop
lahf
jecxz
out
std
xor
adc
outsl
repnz
mov
push
mov
es
inc
jmp
push
mov
fmul
jo
popa
and
lods
jne
sub
sbb
sub
mov
mov
xchg
push
std
lret
xchg
loope
inc
pusha
lods
fadds
inc
in
push
sahf
out
inc
out
fistpll
outsb
sbb
push
lret
push
mov
fiaddl
xchg
loopne
pop
mov
jo
xorl
fisttpll
ret
push
aam
xchg
outsb
adc
jb
dec
jnp
out
shll
pop
and
xor
mov
lock
adc
jecxz
popa
faddl
in
dec
movsl
repz
insl
xor
aaa
call
mov
ds
add
shlb
xchg
jle
sti
rcl
lret
mov
ret
inc
xor
in
or
mov
pop
nop
mov
out
sub
roll
fs
cmp
aas
idivb
xorb
in
sahf
out
xor
dec
mov
cmc
xchg
lret
je
mov
push
je
fwait
or
iret
sub
sbb
adc
mov
mov
xchg
test
adc
jnp
push
dec
jl
or
int3
mov
mov
lods
fldenv
insb
jmp
lahf
inc
hlt
ret
daa
push
or
mov
push
test
mov
les
pop
cltd
pop
xchg
ss
pop
inc
scas
or
dec
push
inc
adc
pop
mov
std
fistpl
loop
cs
or
aaa
mov
mov
xor
jo
and
into
cmp
fisubrl
arpl
xchg
pop
rcrb
add
lret
das
pop
push
inc
je
mov
test
cli
popf
cmp
push
in
xchg
insl
addr16
adc
inc
jno
xor
pop
push
xchg
dec
push
cld
pop
fst
rorb
dec
aam
sti
int
pop
lret
inc
je
mov
stc
test
fmull
in
cmp
push
jbe
jle
fisttps
inc
into
ret
repz
cld
jno
jecxz
iret
push
loopne
notl
test
xlat
fistpll
jg
mov
mov
or
lcall
test
push
xchg
in
sti
enter
jmp
pusha
pop
cmpsb
sbb
shrl
sbb
lcall
fdivs
or
adc
dec
cmp
cwtl
xor
jno
mov
andb
mov
cmpsb
scas
or
loop
pusha
imul
adc
mov
fisubrl
sbb
popa
es
jbe
cld
add
add
mov
inc
dec
xor
lcall
ds
add
sbb
adc
lods
subl
lock
xchg
adc
sub
jmp
add
pop
cmp
mov
fadd
lds
bound
push
sti
loop
and
sti
inc
cmpsl
and
pop
out
or
jae
or
xchg
jae
xchg
sbb
ret
cwtl
pop
fwait
ret
dec
mov
jl
xor
in
loope
es
mov
inc
jg
std
ret
pop
push
pop
add
xchg
sbb
mov
xchg
sar
dec
loop
int3
add
dec
out
test
icebp
mov
sub
addl
ja
fstl
cmp
xor
dec
xchg
mov
loopne
or
jp
fistps
xchg
push
pop
add
xor
push
gs
adc
and
jmp
jle
enter
pop
dec
cmc
dec
filds
idiv
in
or
mov
dec
lock
inc
jle
popf
mov
or
daa
rcrb
fstpl
aas
fldl
sar
add
cmpsl
fldl
lock
orl
hlt
add
fistpll
mov
adc
cmp
and
aas
xchg
imul
mov
add
or
dec
stc
lods
push
pop
and
or
and
and
adc
jae
push
jl
mov
dec
xchg
sbb
ss
ss
cmpsl
sbb
pminsw
loop
cmpsb
loopne
mov
sub
pop
lock
fcmovnu
pop
scas
pushf
mov
xor
mov
jg
std
xchg
popa
cs
fistps
popf
or
xor
cmp
divl
push
mov
push
lods
push
out
fbstp
add
push
cmpsb
pop
aaa
adc
cmc
or
sbb
jne
or
and
inc
int
cmp
mov
fildll
cmp
dec
rorl
stc
bound
mov
and
pop
or
in
aas
jge
dec
shlb
fwait
adc
ret
iret
scas
stos
cmp
and
mov
dec
xor
nop
add
ficomps
cmp
ret
inc
jnp
jae
jb
imul
clc
push
and
stos
cs
not
mov
stos
jae
fnstenv
arpl
xchg
push
push
inc
jno
fadds
dec
cld
cmc
movsb
lea
cmp
add
imul
int3
fisubrl
repnz
dec
xor
hlt
inc
arpl
jp
or
mov
add
or
mov
pop
xchg
sti
outsb
and
imul
cmp
sub
sbb
bound
adc
sub
aam
dec
std
mul
jne
cmp
stos
sbb
movsb
rol
push
in
add
sbb
push
inc
rorb
stc
repz
add
mov
sub
pop
ret
ret
sub
xchg
xor
shll
jl
dec
jge
lahf
mov
mov
je
out
pop
ja
adc
xchg
or
lds
sbb
pop
xor
cmp
add
imul
sti
dec
sbb
mov
dec
mov
or
mov
es
lret
ja
mov
mov
xchg
test
icebp
sub
adc
or
hlt
adc
push
mov
in
mov
enter
cmp
repnz
add
push
xchg
pop
dec
and
pushf
rcll
pop
pop
jl
add
sbb
xor
loopne
sub
loopne
sub
adc
sub
lahf
and
cwtl
cmp
stos
cltd
xor
test
mov
adc
mov
mov
adc
push
dec
sahf
icebp
push
jnp
sub
mov
push
dec
repz
cli
mov
xor
je
xor
jle
fldcw
cmp
arpl
pop
xchg
movsb
dec
icebp
aaa
sub
sahf
xor
shlb
aas
aaa
shlb
xchg
sub
mov
mov
fnstsw
and
jmp
push
pop
mov
loop
pop
sarl
mov
pop
scas
movsl
add
rcrb
in
jp
shll
imul
xor
insl
sub
test
test
gs
push
push
jne
jge
shrd
mov
popf
lahf
push
in
movsl
cmp
fmull
shlb
scas
rorb
popf
mov
addr16
add
bound
popa
imul
mov
push
cs
iret
pusha
cld
xor
cwtl
mov
andl
mov
sbb
cmpsl
hlt
xchg
add
ror
jge
ljmp
sbb
pop
mov
push
xlat
clc
pop
mov
jns
sbb
icebp
shr
ljmp
pushl
inc
mov
push
mov
or
js
aaa
stos
and
jbe
lods
popa
jecxz
jnp
sbb
sbb
dec
ret
lret
dec
lcall
cmp
sub
dec
out
xor
leave
repz
popf
pop
daa
add
mov
lret
dec
test
mov
fidivrs
mov
bound
pop
mov
and
dec
bnd
or
lock
jle
ljmp
incl
movsl
push
add
adc
cmc
or
fcomp
mov
cmp
ds
mov
add
xor
sahf
mov
cmc
or
cmpsb
pop
addr16
cli
jnp
outsb
insl
lret
xlat
push
popf
adc
and
leave
rcrl
sti
jae
bound
jle
rolb
push
sub
movsb
jb
mov
cmp
fldcw
adc
dec
cli
test
stc
mov
xchg
cli
pushf
pop
cmp
and
or
push
js
sbb
ljmp
push
cmp
mov
push
int3
ds
pop
pop
xor
movsl
dec
lods
sahf
icebp
dec
sbb
mov
mulb
inc
outsl
scas
sub
fs
and
ror
lahf
push
push
pop
loope
mov
or
clc
cmpsl
mov
dec
fwait
jb
std
mov
mov
mov
les
add
dec
mov
mov
fs
mov
bound
aad
jle
xlat
fistps
outsb
out
and
xchg
test
subb
mov
jecxz
pop
add
rorb
jg
in
pop
jno
push
lcall
filds
into
inc
xchg
out
gs
and
or
pop
push
or
js
arpl
mov
lret
subb
dec
and
lret
jecxz
mov
mov
pop
cmp
pushf
dec
gs
push
rol
cmp
inc
stos
mov
or
ret
repz
imull
shrl
push
mov
and
es
mov
xor
adc
or
andb
dec
lods
pusha
fsts
mov
cmp
lret
xor
xchg
mov
mov
in
xchg
cmp
lods
scas
rorb
mov
or
add
enter
fsubs
xor
add
push
cmp
fnsave
dec
daa
das
addl
ss
stc
jmp
push
jmp
jb
mov
icebp
mov
add
cmp
cmp
out
adcl
xor
rolb
lcall
pop
sub
mov
fnstcw
fwait
popl
stc
pop
jne
jnp
es
imul
aad
xchg
lods
pop
push
xchg
sub
xchg
adc
sbb
xchg
gs
and
gs
adc
loope
xor
lea
sub
jae
fildll
mov
lret
xchg
mov
les
out
arpl
adc
xor
mov
adc
xchg
sbb
loopne
int
pop
dec
xorl
mov
xchg
mov
ficoml
adc
jl
pop
sub
jae
fld
jno
push
in
or
mulb
add
js
test
loopne
sub
pop
sbb
sbb
sub
shlb
and
lea
outsl
mov
mov
inc
das
out
or
xchg
daa
gs
cmc
outsb
sbb
out
loop
ret
or
shll
cli
repz
sar
jg
es
jmp
ljmp
push
test
mov
ficoms
mov
fistps
mov
ljmp
lock
or
pop
ret
xchg
fsubp
pop
imul
mov
xor
in
repnz
fimull
mov
lods
scas
scas
pop
add
add
testl
or
mov
inc
pusha
sbb
mov
mov
pop
cmp
int3
pop
test
fisttps
movsb
es
xor
iret
xchg
xchg
out
jns
insb
lds
arpl
lcall
fiaddl
or
test
out
sbbb
ret
or
adc
jmp
loope
lods
bound
xchg
dec
cmp
je
mov
adc
push
mov
cmp
push
arpl
inc
cmp
scas
rorl
popa
adc
arpl
pop
or
data16
sub
jns
xchg
sbb
cs
xchg
adc
pop
mov
and
mov
sub
std
pop
cmp
outsb
movb
mov
aad
jle
sahf
inc
fildl
test
fists
cmp
testb
dec
add
sbb
insl
push
aam
test
movsl
enter
pop
sub
imulb
adc
cmp
xorb
push
pop
cmp
insl
push
lds
daa
xor
xchg
lcall
jl
or
mov
dec
gs
inc
fstpt
xchg
shrb
sub
or
rol
and
fnop
mov
int3
inc
jnp
aam
loopne
mov
adc
sarl
dec
jle
jb
out
push
jno
dec
mov
and
shll
xchg
cmp
fwait
sti
mov
daa
idivl
into
rolb
das
aas
lcall
xlat
adc
push
icebp
xchg
push
addr16
and
push
fisubs
into
dec
xchg
push
xor
xor
push
repnz
lea
rorb
cli
bound
sti
iret
cmp
loop
shrb
rorb
scas
fnstenv
mov
fsubrs
push
xchg
fmull
into
push
mul
cltd
stos
pop
jecxz
sub
mov
jae
pushl
fdivrl
sub
enter
and
mov
sbb
fcompl
pop
hlt
jbe
inc
dec
cmc
sbb
inc
mov
enter
cwtl
pusha
push
or
out
mov
jmp
nop
sbb
dec
aam
mov
push
arpl
sub
fs
dec
push
sti
mov
dec
cmp
cmp
sbb
leave
sub
rol
imul
jmp
into
mov
pop
adc
sti
adc
pushf
mov
shrl
jae
inc
adc
jnp
cltd
sbb
mov
lahf
mov
or
aam
add
loopne
popf
mov
in
fs
outsb
fstpt
bound
add
push
dec
bound
in
pop
dec
popf
movsb
jg
je
xor
cmp
sbb
xchg
cltd
push
das
sti
mov
inc
rorb
imul
jle
mov
mov
subl
xchg
adc
jns
push
neg
in
jae
stos
push
js
in
sbb
add
pop
shlb
scas
test
test
xchg
mov
dec
aas
in
inc
jg
inc
aaa
adc
insb
dec
cmp
in
cmp
fisttpll
mov
sbbl
int3
inc
mov
push
pop
xor
sti
test
testl
gs
clc
sub
shlb
mov
insl
jge
out
and
cmpl
and
int3
pop
nop
mov
dec
icebp
fisubrl
cmp
cwtl
rorb
jl
xchg
cmp
leave
jl
sub
inc
out
cli
fs
adc
xor
xchg
xchg
testl
cmp
mov
pusha
inc
xchg
or
imul
movsl
sbb
sbb
dec
xchg
xchg
sub
and
push
xchg
lahf
mov
sbb
fidivl
mov
jae
cmp
sub
mov
mov
aas
imul
push
add
loope
mov
push
adc
into
mov
mov
add
movsl
out
stos
pop
in
push
int
pop
stos
sub
dec
popf
mov
add
jo
faddl
cmp
fldenv
out
lahf
daa
dec
movsb
les
add
xor
mov
movsl
mov
and
loopne
xchg
jnp
dec
outsb
repnz
mov
pushl
mov
push
sahf
xor
outsl
sub
xor
ret
jp
pop
pop
pop
and
sbb
out
mov
mov
mov
aad
outsl
jecxz
movsl
push
cmpsl
push
fs
out
jmp
adc
push
aaa
jb
jp
clc
adc
push
clc
or
mov
push
mov
into
xchg
inc
jns
and
adc
sub
ss
xor
insb
cs
clc
pop
dec
repnz
xchg
adc
lea
cli
sbb
jns
xchg
mov
fsts
mov
inc
mov
xor
xchg
imul
pop
out
scas
xchg
adc
and
pop
mov
ljmp
sub
cmp
mov
call
flds
add
mov
loope
lcall
ss
nop
pop
jp
repz
inc
mov
mov
pop
pop
xchg
cld
or
ffreep
mov
cmp
cli
imul
sub
xchg
push
leave
jo
sti
ror
pop
adc
mov
pop
scas
or
shrb
push
push
sub
xor
mov
vpsubw
add
sub
in
mov
ret
mov
adc
and
mov
push
push
pop
das
push
je
pop
mov
clc
cltd
pop
or
jns
movsl
mov
jae
fs
adc
push
mov
jmp
fwait
xchg
fldcw
outsl
std
punpckldq
and
lea
roll
jmp
stc
dec
rcr
addl
sbb
pusha
adc
cs
xor
jbe
push
lret
add
push
je
pusha
cmp
push
pop
aas
xor
pop
push
push
test
sub
fs
insl
cmpl
daa
or
inc
stos
jp
popa
pop
lock
adc
cmp
sbb
mov
mov
std
ret
push
sbb
sub
push
cmpsl
or
pop
rorl
insl
arpl
insb
popa
jbe
rorl
int
test
xor
out
mov
mov
std
mov
adc
mov
in
insb
and
in
in
test
sbb
lock
pusha
or
nop
cmc
shlb
dec
xlat
dec
mov
movsl
or
cmpsb
add
je
mov
sub
in
mov
lahf
arpl
bound
inc
clc
mov
js
push
inc
ret
gs
xchg
loope
pop
icebp
sbb
mov
or
jae
push
pop
out
cmc
pop
mov
fnstenv
rclb
mov
aam
adc
adc
jg
int3
mov
mov
in
loope
cwtl
pop
imul
add
nop
idivl
aad
mov
xlat
clc
loope
ss
ret
inc
fwait
ja
or
shlb
jne
mov
mov
xchg
inc
cmp
sahf
ficomps
out
repz
xchg
insb
cmpl
lcall
test
movsb
or
fildll
flds
nop
icebp
loopne
nop
repnz
in
pop
mov
faddp
and
nop
cmp
jb
jge
aas
inc
and
test
fists
icebp
and
int
fcmovb
and
push
xlat
push
dec
inc
pop
fcoml
test
cmp
push
sub
stos
or
jle
add
pop
jg
push
hlt
jb
mov
fcmovu
pop
xor
fs
sub
cmp
sbb
push
les
into
mov
mov
cld
leave
pushf
mov
gs
jl
xor
adc
popf
cmp
out
into
arpl
push
push
clc
fcmove
lret
jbe
cmp
rclb
xlat
inc
int3
pusha
pop
es
rcr
lds
sti
cmp
jae
icebp
stos
mov
sarb
cmp
insb
orb
movb
cltd
push
mov
addb
les
jb
cmp
lret
push
rclb
outsb
jle
dec
xchg
aad
in
mov
mov
fs
test
jb
nop
push
jo
mov
push
xor
inc
mov
mov
jb
lea
cltd
inc
call
loope
dec
pop
clc
adc
mov
nop
sub
insb
dec
loop
ret
popf
imul
in
rcll
jnp
sti
adc
xor
out
add
ss
push
cli
pop
repz
jmp
das
std
ss
stc
nop
xchg
addr16
jg
jns
mov
stc
fptan
movsl
leave
movsl
pop
lds
dec
insl
js
mov
push
ljmp
inc
or
xchg
addb
mov
mov
sub
jl
inc
push
aas
xor
inc
dec
mov
clc
or
mov
xor
inc
push
lods
gs
push
stc
std
pop
mov
sub
out
in
sahf
mov
adc
sbb
mov
mov
push
mov
xchg
sarl
xchg
sub
sub
call
xchg
fsubl
andb
inc
push
mov
iret
cs
and
mov
lcall
cmpsl
adc
sti
int3
cmp
mov
xchg
loope
xchg
out
aas
ja
je
gs
dec
arpl
dec
stos
fists
int3
inc
or
sub
mov
push
mov
dec
aas
mov
shr
mov
mov
push
enter
pop
mov
aad
test
mov
iret
pop
int
and
mov
mov
dec
mov
jnp
test
aad
cld
cmpsb
addl
xchg
inc
push
sbb
pop
dec
in
in
or
pop
cmp
push
mov
jl
add
adc
std
mov
mov
in
inc
stos
pop
sub
jecxz
add
in
ret
mov
rorl
ret
pop
dec
bound
fcom
adc
iret
mov
sub
or
add
add
out
cmpl
cmp
adc
xchg
cmpsb
addr16
icebp
pop
stos
adc
mov
rcll
xchg
push
jae
outsb
fistps
negb
insb
cli
mov
sub
mov
hlt
adc
mov
repnz
sbb
or
std
call
mov
icebp
sbb
test
mov
add
std
subb
fs
stc
jne
aad
xor
adc
pop
inc
pop
mov
loop
jns
lret
pop
sbb
fldenv
dec
jl
icebp
enter
testb
jg
jmp
int3
push
mov
mov
roll
or
into
inc
inc
cld
mov
sbb
cmp
nop
pop
jae
add
ljmp
outsl
cwtl
and
ljmp
pop
push
sbb
xchg
inc
jnp
aaa
inc
sar
daa
mov
stc
jmp
push
xchg
pop
push
jecxz
pop
xor
adc
nop
mov
daa
sti
fisubrl
xor
sub
push
xor
xor
aam
xor
outsl
clc
je
mov
mov
iret
fs
shll
inc
adc
or
decb
mov
cld
sbb
sub
sbb
test
std
cmpsb
xchg
mov
or
sti
push
dec
icebp
mov
cli
dec
fs
or
inc
dec
add
xor
test
mov
fldcw
xor
pop
dec
jo
imul
call
xchg
mov
movsb
inc
mov
cmp
or
lcall
dec
mov
jne
pusha
sub
lock
sub
fistpll
lahf
pop
and
into
xchg
outsb
add
cmp
lret
jo
ror
aad
inc
repnz
repz
lcall
hlt
sub
push
cmp
stos
push
imul
and
lret
loopne
pop
jns
xchg
sbb
pop
les
outsl
int
daa
jle
arpl
fnstenv
ret
cs
dec
jno
fistl
jnp
mov
js
aad
adc
pushf
cmpsb
dec
jmp
and
xchg
push
mov
inc
std
ds
ss
and
jecxz
sahf
pop
push
inc
jge
jnp
push
out
and
js
imul
jecxz
fs
lret
push
cmp
lret
test
mov
cmp
xor
outsl
pop
mov
shrl
cmp
rol
push
shlb
mov
pusha
cli
stc
and
shll
xchg
mov
test
xchg
jns
fucomp
mov
jmp
jge
ja
call
xchg
mov
xchg
xchg
push
push
fdiv
and
sub
pop
mov
jo
push
into
sbb
xchg
fsub
das
sub
lahf
pop
arpl
mov
ret
test
sub
pop
or
and
daa
adc
pushf
js
call
jne
shlb
xchg
sbbb
mov
mov
xchg
scas
loope
out
sbb
and
add
inc
mov
add
fs
xchg
lea
fdivl
pop
iret
stos
or
adc
mov
test
fstl
rcr
pop
mov
repnz
stos
cs
sbb
jne
pusha
int3
stc
xrelease
xchg
lds
pushf
pop
outsb
clc
push
stos
pop
jae
outsb
fdivr
enter
cmp
mov
in
imul
repz
xor
and
into
push
jbe
fimull
bound
dec
inc
lea
ret
cli
inc
repz
sub
mov
xlat
fisttpl
sbb
loopne
shll
imul
movsb
and
pop
or
xor
les
pop
cmpsb
mov
scas
xchg
jb
push
xchg
iret
and
fxch
jecxz
sub
hlt
cmp
cld
adc
lods
mov
shlb
outsl
cmpb
aad
orb
adc
test
aad
cmp
es
incl
or
bound
inc
cltd
xor
insl
inc
sbb
cmp
push
inc
sub
pop
lds
push
int3
sbb
clc
xchg
sbb
aam
bound
cmpb
inc
int3
and
ret
add
mov
lods
mov
imul
or
sbb
in
and
mov
xor
lods
sub
inc
inc
pop
mov
xor
sbb
adc
mov
ret
call
push
xchg
xchg
es
add
and
xor
xchg
or
js
jg
sub
repz
jnp
insl
je
xchg
adc
cmp
aas
out
inc
mov
fsubs
mov
test
push
frstor
dec
adc
test
mov
push
add
push
xchg
adc
leave
icebp
cmp
test
pop
movsb
insl
mov
add
mov
jg
lcall
shll
movb
adc
and
inc
imul
jge
and
xchg
ds
cmp
or
jno
xchg
add
mov
mov
data16
jbe
push
lahf
push
cmc
jnp
and
in
mov
pushf
sub
mov
push
je
mov
std
lods
lods
stos
push
icebp
jmp
in
sbb
stc
inc
or
in
or
lret
dec
stc
dec
cmp
iret
mov
push
add
fs
gs
fistl
xchg
mov
xchg
or
cmp
xlat
scas
add
or
or
dec
jl
mov
loopne
test
pop
sti
negl
adc
dec
xor
iret
push
cmp
ss
stc
xchg
cmp
out
punpcklbw
popf
mov
js
add
cmp
shlb
orl
clc
push
aas
or
nopl
push
or
add
out
add
scas
jl,pt
cmp
fsubrs
test
mov
mov
dec
repnz
and
ds
sbb
lods
repnz
rol
aas
cmp
cmp
adc
sbb
ret
sti
testb
cmp
and
add
mov
test
sbb
dec
sbb
sbb
sbb
push
sbb
pop
cmpsb
ffree
fcomi
mov
pop
mov
add
out
testb
adc
jno
xor
in
mov
ret
sbb
out
cld
dec
aam
dec
xchg
add
xchg
sub
aam
cs
scas
cmpsb
adc
mov
cmp
pop
popa
cmpsb
cmp
cli
dec
xor
aam
and
add
bound
into
push
xor
outsb
div
cld
into
sbb
and
in
dec
jns
or
rclb
in
mov
dec
xchg
sbb
jg
push
cwtl
inc
cmp
out
xor
cmp
cmpsl
mov
loop
test
outsb
repz
adc
push
xchg
pop
sub
rcrl
loope
pop
sti
add
sbb
cmpsb
mov
and
cmp
push
test
pushf
mov
mov
pop
and
lret
data16
mov
xchg
mov
imul
cmc
dec
pop
jmp
jg
and
lock
jbe
sahf
jns
je
int
shll
bound
lret
out
stos
outsl
lret
cltd
push
lahf
fldt
loope
cwtl
outsb
outsb
xchg
and
out
xor
aaa
or
shrl
sbb
aaa
mov
int3
mov
sub
dec
int3
les
mov
and
shll
orl
cmp
div
test
jg
sub
inc
out
inc
subl
sbb
jp
lahf
test
adc
xchg
cmpsb
or
add
std
sub
negl
mov
rcl
ja
scas
jmp
mov
negl
out
ret
mov
push
mov
bnd
cmp
push
test
rcrb
mov
rorb
pop
adc
movsl
inc
insb
pushf
mov
mov
daa
rorl
inc
imul
lret
or
xchg
xor
mov
hlt
leave
sbb
imul
sub
je
das
lret
adc
aad
sub
insl
mov
pop
fbld
hlt
pop
call
dec
add
jecxz
xchg
xchg
divb
xor
jmp
shll
cmpsl
cmp
adc
jl
mov
lds
jno
inc
mov
sbb
pop
push
jge
push
ret
dec
cmpl
iret
scas
ss
cmp
and
test
mov
xchg
mov
in
xchg
fadds
lret
dec
xor
push
and
push
xor
push
cmp
popa
fisttpll
fs
shlb
cmc
adc
lret
cmc
inc
sub
imul
mov
xorb
test
jns
scas
sub
bts
sbb
ja
lods
sahf
cmp
fbstp
stos
push
out
push
pop
lret
dec
repnz
addl
pop
ror
dec
push
xchg
pop
mov
cmp
mov
sahf
sbb
insl
negb
scas
dec
pop
dec
rsqrtps
xor
inc
fsubrs
sbb
in
sub
xor
jb
shll
sub
mov
es
mov
xchg
aaa
sarb
out
cs
cld
std
dec
and
nop
ljmp
mov
mov
cmp
in
andl
jmp
call
lock
mov
sbb
push
push
fldl
js
add
out
insb
in
aam
int3
mov
sbb
pop
add
test
in
dec
push
outsb
push
jp
pop
int3
imul
adc
add
inc
dec
int
scas
ret
xchg
cld
lahf
js
xchg
inc
fwait
mov
sbb
pop
mov
inc
shll
data16
imul
sar
or
sbb
add
jae
outsb
sub
std
filds
lods
loope
mov
shlb
fs
push
or
js
or
mov
shrb
pop
mov
and
lret
sub
jmp
fs
pop
jmp
jo
test
mov
dec
das
add
sbb
jbe
xchg
xor
out
push
sbb
jnp
out
add
pop
fs
mov
and
mov
pop
mov
or
push
mov
rcr
and
add
push
add
cmp
faddl
jne
sbbl
std
fisubs
or
movsb
add
in
or
stc
xor
in
xchg
or
push
movsb
addl
repz
ja
sbb
mov
push
adc
cmp
cs
leave
aaa
cmc
xor
fs
enter
mov
or
xchg
or
mov
inc
imul
iret
cmp
mov
sbb
scas
xor
pop
loope
mov
fistps
in
es
aas
and
bound
add
cmpsl
sub
cli
int3
js
push
add
inc
fwait
xchg
push
mov
push
push
cld
mov
daa
in
repz
cmp
int
add
daa
mov
les
sti
push
cmc
negl
and
inc
lret
xchg
pop
movsb
decb
movsb
lahf
inc
xor
pushf
sbb
and
call
mov
push
lcall
test
jae
inc
jecxz
push
dec
movsl
into
inc
xchg
mov
dec
lock
jecxz
adc
repnz
test
xchg
daa
jge
das
pop
fwait
in
addl
mov
jge
mov
add
paddw
xchg
inc
movsl
push
rclb
cwtl
cmp
mov
add
imul
mov
add
xor
xchg
inc
stc
pusha
push
subb
and
xor
fisttpll
jb
repnz
push
ljmp
scas
repz
adc
int
orl
out
jl
bound
cmpl
gs
or
lret
mov
and
and
outsl
jns
jne
xchg
aaa
jle
push
jbe
dec
lret
in
sbb
inc
cmp
pop
aaa
test
lods
mov
inc
imul
xor
mov
jl
ja
and
cmp
aaa
xchg
xchg
xlat
and
bound
push
sbb
lds
shlb
xor
notb
dec
and
cmpsl
xchg
cmp
sbb
adc
aas
scas
cmp
cmp
sar
push
jmp
sbb
lds
dec
xchg
shlb
cmpsb
sub
or
pop
cs
repz
dec
xor
into
push
or
add
mov
outsb
pop
pop
jns
hlt
push
jb
das
insl
jle
inc
cltd
movsl
cli
adc
dec
adc
out
lcall
inc
stc
pusha
call
sub
ret
dec
loopne
mov
ljmp
cli
xchg
notl
shlb
lret
sti
out
jb
out
add
dec
hlt
inc
inc
sub
mov
and
mov
loopne
dec
mov
sti
clc
scas
loop
aam
and
jno
les
jo
daa
xchg
rorl
cwtl
and
xor
nop
andb
int
test
fcmovnu
ja
jae
jbe
int
bound
push
jnp
cmpsl
xchg
xor
shl
xchg
es
in
dec
in
mov
lock
jb
repz
std
outsb
push
rcrb
push
lahf
inc
push
je
sub
mov
or
loop
scas
push
vpcmpgtw
sbb
ss
std
adc
je
sub
lret
call
jae
pop
aam
outsb
stc
ja
jns
pop
xor
daa
out
shr
jecxz
dec
in
repnz
add
or
add
filds
pusha
repnz
out
cmp
inc
repz
arpl
cltd
push
dec
sbb
int
jecxz
or
inc
and
test
cmp
nop
aas
xor
jns
frstor
movhps
movsb
and
stos
fiaddl
inc
fdivrl
enter
xchg
out
sub
mov
mov
lahf
jge
sbb
and
repz
stos
mov
lret
repz
and
fdivl
xlat
cmpsb
or
test
es
call
sub
mov
add
out
cli
inc
out
nop
push
fldenv
cmp
jp
out
xchg
aad
lea
jge
sbb
addr16
mov
pop
xor
ljmp
shl
sub
push
sbb
dec
enter
mov
mov
int3
push
dec
jecxz
cmc
orl
push
leave
jg
mov
lods
nop
scas
xchg
imul
in
xchg
jnp
dec
xchg
popf
es
xchg
push
repnz
ja
xor
push
pop
jp
jle
arpl
cli
sbbb
hlt
divb
and
lahf
in
pop
adc
and
fbld
xorl
iret
addr16
fcoml
outsl
lock
into
sub
in
les
mov
sub
pop
inc
shll
bswap
pop
xchg
rol
aam
mov
mov
fstpt
test
xchg
and
mov
sbb
push
push
mull
lret
or
test
push
pop
insl
lahf
fsts
inc
insl
hlt
in
icebp
sti
mov
mov
lret
adc
or
js
shl
xchg
dec
mov
inc
jne
aaa
test
inc
jb
adc
mov
pop
push
repnz
orb
cltd
test
ljmp
imul
mov
inc
xchg
loopne
add
shll
inc
popa
push
and
jo
lods
dec
stc
scas
std
clc
fs
mov
dec
mov
rclb
jge
add
shl
cmpsl
repz
divb
hlt
jae
icebp
jae
jne
pop
push
xor
shlb
addr16
xor
dec
inc
lea
mov
test
and
inc
and
outsb
lret
cmpsl
test
outsb
push
inc
inc
iret
add
jmp
jmp
in
inc
js
pminsw
or
mov
iret
cmpsb
aaa
push
adc
in
inc
and
fldenv
or
pop
ja
sub
and
mov
add
scas
aam
pop
push
popa
cmove
ficompl
test
push
mov
insl
cli
xchg
in
mov
or
mov
push
mov
lret
sbb
sub
movsl
mov
inc
cmp
pop
sbb
into
out
sub
mov
dec
call
push
pop
std
mov
ss
push
pop
inc
sbb
out
xor
and
sub
xchg
mov
dec
add
lock
mov
js
mov
cltd
dec
and
dec
mov
sbb
int
out
inc
sub
pop
dec
adc
in
jno
inc
dec
sbb
js
hlt
inc
test
mov
gs
lcall
mov
jbe
pop
mov
mov
js
arpl
add
jbe
mov
and
xor
push
mov
mov
call
mov
mov
dec
dec
push
hlt
sbb
mov
outsb
ljmp
lahf
or
dec
mov
fidivrl
jb
or
jnp
in
movsb
jg
mov
xchg
rorb
jg
loop
ret
or
sti
push
dec
popa
xchg
pop
jae
sub
test
dec
push
lds
lods
sbb
push
enter
repnz
mov
addr16
cmp
cmp
out
bound
pop
add
ret
mov
pop
outsb
bnd
dec
mov
ret
hlt
add
in
push
xor
in
adc
inc
icebp
add
popf
mov
in
into
xor
adc
std
jnp
inc
call
inc
jo,pt
repz
jl
lahf
popa
add
mov
ja
clc
jno
or
add
pop
push
mov
ficoms
nop
cmp
push
test
pop
inc
add
mov
adc
xchg
aam
enter
jle
ljmp
jmp
jp
addl
jecxz
lret
cmpb
pop
int
jae
fnstsw
mov
dec
lret
aas
orl
outsb
dec
das
pusha
mov
lahf
jnp
xchg
mov
dec
shll
xchg
mov
ret
lahf
insb
fidivs
pusha
jno
shrl
loopne
mov
adc
rcrb
out
imul
xchg
pop
inc
js
fsts
xorl
insb
shlb
sub
cmp
pop
and
lods
out
pop
outsl
shlb
xchg
lock
mov
mov
ret
cltd
mov
or
ficoml
lret
push
sahf
mov
pop
and
test
adc
stos
push
jae
lods
je
mov
mov
dec
push
imul
add
adc
push
repnz
jns
sahf
or
shl
inc
push
addr16
sbb
repnz
jbe
xchg
xor
aam
sub
jecxz
test
push
push
sbbb
in
lret
dec
mov
pushf
adc
adc
cmpsl
out
inc
xor
popf
adc
pop
mov
and
out
sar
cmp
pop
add
and
cs
loopne
pop
addr16
inc
out
and
scas
ja
fiadds
sub
shll
jecxz
or
jne
daa
in
mov
xchg
pop
mov
inc
xchg
lods
stc
xorb
es
xor
mov
dec
out
fcmovb
pop
dec
push
icebp
lret
push
popf
gs
hlt
pop
cmp
ret
push
int
push
das
inc
call
clc
fdivrp
dec
andl
sbb
bound
push
sub
inc
mov
sti
xlat
movsb
inc
mov
push
jno
out
add
dec
push
hlt
pop
test
mov
int3
mov
mov
in
sub
sub
jo
loopne
fisubl
jne
ret
xchg
and
iret
into
mov
xor
sbb
mov
arpl
pop
sub
data16
and
dec
push
jb
mov
test
jo
dec
nop
pop
stos
xor
insb
mov
inc
popf
lea
cmp
xor
das
push
sub
mov
mov
push
or
orb
into
int3
jge
lahf
out
mov
arpl
dec
jnp
pop
stos
mov
imul
lret
shl
aaa
mov
negl
sbb
mov
dec
insb
mov
xchg
stos
pop
orl
inc
lods
ret
push
mov
movsl
sbb
addr16
push
ret
xlat
imul
xchg
jns
mov
push
out
sahf
mov
xor
cmp
xor
push
in
adc
push
popf
xor
inc
mov
insl
outsl
mov
adc
mov
mov
sti
jnp
inc
add
sub
clc
stc
push
add
notl
cltd
sub
jecxz
scas
scas
mov
shrl
stos
ret
in
and
testb
add
lcall
push
test
jne
or
add
out
test
stos
orl
mov
out
js
dec
fs
enter
xlat
mov
adc
xchg
adc
or
mov
jnp
movsb
mov
sahf
lahf
cli
fsubrp
cmp
cmpsb
or
inc
dec
ljmp
mov
push
jno
bound
fisubrs
imul
arpl
fisubrs
mov
stos
mov
xor
inc
jmp
inc
dec
fdivrl
test
sbb
add
push
add
pusha
xchg
cmp
fsubp
jne
ja
lds
out
inc
push
mov
pop
push
and
adc
mov
xchg
sub
mov
popf
push
jmp
fst
jnp
mov
test
xor
movsb
mov
mov
dec
xor
shr
jge
test
mov
mov
push
mov
sbb
mov
cmp
cli
js
add
dec
and
or
fwait
inc
nop
das
sar
insl
jno
in
js
hlt
int3
imul
mov
and
iret
ret
fbstp
fstpl
jg
cmpsb
dec
gs
jmp
mov
lods
and
cltd
sahf
aas
fdivr
mov
add
sarb
add
out
sbb
test
daa
xor
mov
gs
cwtl
xor
jp
jb
bound
and
inc
mov
push
mov
mov
push
sbb
loop
mov
nop
sarb
outsl
pop
in
dec
mov
les
pop
cmp
cld
adc
push
inc
mov
loope
cwtl
push
dec
add
pop
cwtl
sbb
jno
pushf
xchg
cltd
int
push
jl
testb
pop
push
inc
or
mov
ret
mov
mov
dec
das
push
dec
cli
imul
repz
outsb
in
and
cmp
jp
testl
dec
push
fprem
es
pop
sub
popf
jmp
add
push
add
mov
adc
jbe
adc
in
in
cmp
push
out
fs
pop
xlat
rcrl
or
lahf
test
les
add
add
and
fcoms
cmp
jg
pop
dec
sub
adc
mov
push
adc
loope
fimull
jae
mov
sub
in
mov
xchg
sbb
jb
arpl
ja
ja
dec
data16
in
lock
push
fdiv
adc
inc
mov
xor
fsubrs
into
cld
inc
fsubl
loop
pop
fcoml
mov
test
leave
sub
sbb
icebp
pop
aas
cmc
addl
cli
xchg
shl
inc
mov
bswap
jb
mov
dec
ror
das
jle
sbb
fnstcw
push
cmp
xor
movsl
addr16
dec
push
cmp
jbe
pop
loopne
fstpl
or
lret
scas
dec
in
pop
inc
add
push
int
adc
pop
cli
xchg
push
hlt
inc
push
popf
cs
push
outsl
sbb
mov
lahf
sub
rorl
and
sub
test
or
inc
inc
push
rcll
lods
inc
out
push
xchg
mov
jmp
jge
inc
pop
cli
sti
sahf
cmp
cmpsl
imul
mov
cmc
mov
lcall
cwtl
idivl
fcoms
pop
sarb
jp
sbb
fucomip
outsb
jo
icebp
jb
ss
or
les
aas
lcall
mov
jo
jle
xchg
add
cmpsl
std
mov
decb
xor
les
je
fpatan
xchg
mov
adc
aam
out
shr
mov
repz
nop
push
jl
into
xchg
mov
int3
les
scas
and
insl
testb
jo
pop
sub
jae
push
lret
xchg
push
repz
sbb
jbe
sbb
push
push
cmp
jns
insb
ss
mov
push
movsl
jns
pop
aas
mov
js
adc
addr16
hlt
outsl
popa
dec
popa
adc
pop
xor
push
rsqrtps
mov
cwtl
inc
frstor
jno
cli
fidivs
aad
aaa
bound
push
push
lock
jle
or
jns
xchg
lds
dec
jmp
ss
ds
mov
rep
jecxz
add
sbb
push
gs
or
and
mov
rolb
mov
inc
lods
cld
lret
testb
pop
imul
movsl
jnp
push
repz
imul
push
ret
out
fbstp
stc
xchg
imul
lret
loope
jo
ja
jnp
pop
mov
add
imul
pusha
test
cmp
lods
sub
dec
cwtl
int
in
and
lret
call
mov
out
jae
mov
scas
movsl
iret
nop
sbb
mov
test
stos
imul
or
loopne
push
xor
mov
adc
scas
cld
cs
mov
mov
and
cltd
jae
call
test
adcb
aas
sbb
clc
fisubs
pop
insb
mov
dec
jg
cmpl
cmpsb
ljmp
aam
mov
add
sahf
sub
repz
imul
push
data16
mov
andb
adc
test
or
sub
mov
insl
mov
sbb
dec
cwtl
sarl
sub
ret
sub
jge
push
and
cld
daa
dec
jo
pop
sahf
aaa
inc
fwait
sub
cmp
sub
pop
ret
or
iret
lcall
ret
roll
incb
fisttpl
ret
add
fcoms
mov
ljmp
insl
cmc
add
add
call
aaa
scas
jmp
inc
inc
mov
movsl
arpl
jo
rcll
div
hlt
sbb
imul
pop
roll
or
lds
lahf
lods
or
pop
push
mov
lock
test
mov
dec
jmp
dec
shrl
aas
jns
shlb
push
cmp
mov
adc
xor
cmpsl
outsb
imul
jbe
cmpsb
rolb
fimuls
into
mov
dec
pop
add
cli
pop
adc
aad
push
es
jnp
and
cmpsl
daa
outsb
adc
fists
lret
jp
pop
movsl
pop
rcr
idivb
pusha
rolb
fisubrl
cmpsl
cmp
push
pop
scas
daa
jl
idivb
jp
cmp
inc
push
out
cmpb
imul
jo
addr16
sti
dec
mov
xor
fdivrs
mov
jl
faddl
adc
mov
cmp
cmovg
imul
outsb
xorb
insb
popa
shlb
push
mov
fcmovnu
mov
mov
jne
lret
rorl
lock
roll
mov
lods
xor
iret
dec
dec
xlat
pushf
mov
mov
sub
fstpt
or
out
daa
out
loop
jg
cmpsb
sbb
fcompl
arpl
xchg
fisubrs
mov
inc
add
pop
push
scas
in
addr16
adc
inc
insl
and
sbbb
ljmp
jp
shl
insb
sbb
bound
lret
push
inc
inc
add
cmp
xchg
mov
pop
jno
fs
cmp
insb
pop
testl
jae
xor
test
xchg
fs
sbb
out
mov
xchg
gs
sar
mov
mov
cld
inc
scas
dec
sahf
jo
cmc
cmp
call
addr16
addl
clc
lahf
pusha
mov
fs
call
pushf
aam
mov
jbe
cmp
xchg
std
sbb
nop
pop
aam
push
pop
movsl
adc
jae
lret
pop
and
divl
pop
into
sbb
push
ficoms
xor
nop
cmp
ss
dec
push
cltd
and
xchg
jg
dec
pop
fdivrl
sub
xor
mov
lock
and
fcomp
test
cmp
out
loopne
mov
stos
fwait
aam
mov
popf
es
lods
xchg
add
icebp
xchg
or
sarb
sti
cmp
adc
lret
fbld
mov
pushf
xor
sti
or
adc
loopne
and
insb
or
cmpsb
sbb
movb
dec
cmp
pop
push
cmp
pop
jle
pop
jg
sti
stc
adc
loope
pop
adcl
jbe
pusha
push
mov
sub
and
icebp
lret
aaa
in
into
jl
mov
cld
int3
push
xlat
mov
ret
int3
cmp
fisubrl
sub
les
xchg
enter
mov
clc
aam
lea
mov
mov
bound
insl
fadds
mov
cmp
ljmp
cmpl
and
outsb
popa
add
jp
and
sub
int3
mov
mulb
pop
pop
outsl
pop
inc
and
ror
inc
leave
pop
filds
pop
repz
shrb
xchg
ret
adc
jnp
fs
ret
pop
js
cld
fldt
loope
test
in
clc
add
jl
xchg
pop
mov
xlat
clc
sbb
lret
xchg
daa
xchg
xchg
add
cmpb
lock
in
add
dec
mov
enter
xchg
pop
notl
aam
test
add
fsubs
lcall
mov
bound
lcall
adc
push
cmp
jno
cs
cmp
adc
mov
add
nop
mov
mov
das
jns
sbb
push
jae
aaa
es
inc
xor
mov
cmp
dec
or
aas
call
fs
aas
fsub
pop
xchg
je
ljmp
test
mov
leave
iret
mov
fmull
testb
or
pop
mov
mov
sub
insb
xchg
sarb
orl
leave
sub
cs
and
push
and
dec
push
pop
faddp
mov
dec
shrb
orb
movsb
sbb
fucomip
cmp
inc
es
out
xchg
rep
inc
js
and
inc
mov
cmp
pusha
xchg
or
js
xchg
fimuls
ret
sub
insl
js
xchg
sbb
clc
dec
fstps
mov
sub
ja
popa
pop
movsl
mov
test
cld
test
sarb
icebp
rcrl
pusha
mov
rcll
pop
call
in
adc
into
push
mov
je
or
ljmp
jns
dec
sub
insb
mov
test
mov
cltd
push
mov
sub
xchg
sbbl
xor
jmp
lods
mov
mov
xchg
test
bound
fldt
xchg
add
shl
fadd
push
lcall
repz
in
adc
mov
popa
jns
jns
mov
or
mov
xlat
cmp
lods
mov
fistl
push
popf
inc
jbe
and
mov
inc
add
dec
push
jp
push
loope
adc
sti
dec
test
call
mov
hlt
adc
jecxz
jecxz
cmpsb
inc
mov
jge
loopne
aaa
into
sbb
and
imul
js
in
stc
mov
jg
jne
jnp
dec
scas
mov
ljmp
outsl
sbb
jno
push
sbbl
js
cmpsl
cmp
fdivs
mov
dec
jno
cmp
jle
cld
ret
inc
xor
mov
add
jb
inc
mov
jle
jecxz
icebp
xchg
lret
orl
std
daa
dec
jg
dec
lods
pop
cmp
or
outsl
repz
push
ljmp
inc
pinsrw
jmp
test
sub
pusha
xchg
jmp
dec
mov
in
ss
sbb
shrb
xor
insl
inc
adc
dec
push
andb
test
dec
adc
rcrb
pop
fldt
push
sbb
push
push
mov
inc
inc
cld
mov
cmp
pop
and
lock
mov
dec
out
cmc
xor
inc
cmp
cmpsl
repz
xbegin
mov
xchg
lcall
outsb
jnp
sub
or
mov
and
inc
inc
cmpsb
repnz
les
in
xchg
push
ret
aad
fcoml
push
lods
sbb
movsb
es
cs
cs
ss
ja
jp
sarb
push
out
and
xlat
movsb
fldl
push
mov
push
out
mov
ds
jae
filds
into
insb
les
out
lock
int3
repz
in
mov
insl
xchg
loopne
xor
mov
mov
mov
mov
test
sbb
in
mov
stos
or
dec
xchg
lea
mov
and
or
jb
in
and
push
movb
subb
dec
aaa
dec
mov
pop
in
or
arpl
rcrb
mov
cs
je
cwtl
cmp
or
in
adc
dec
loop
cmp
and
mov
into
cld
sub
jl
sahf
push
sub
out
imul
rorb
shrb
lahf
xlat
cmpsb
dec
int3
xor
xchg
jns
dec
lock
shlb
ja
xchg
vpaddb
and
ret
add
sub
std
ds
adc
add
in
insl
sub
es
rcll
call
cmp
dec
sub
push
rcrb
mov
insl
aam
cmp
push
sbbb
pop
or
jp
xor
add
pop
int
data16
in
dec
add
mov
cmc
data16
mov
cmp
pop
inc
ss
adc
jp
stc
or
push
mov
and
push
cmp
pop
sub
dec
je
dec
addb
jg
sbb
in
mov
pop
jmp
fwait
or
inc
jl
out
out
into
cmp
adc
daa
nop
fsubrl
xchg
daa
adc
xor
pop
push
push
or
jmp
sahf
push
xlat
ret
xchg
push
cmp
jecxz
cs
shl
cmp
cmp
pop
push
leave
jne
push
xchg
ret
aas
pusha
cld
or
add
sahf
mov
movsb
push
inc
mov
movsb
lea
incb
cmp
add
popf
fisttpl
daa
lock
sbb
clc
loopne
xchg
push
sbb
aas
dec
in
and
inc
jno
shrb
andb
jmp
out
ljmp
fldcw
push
xor
jg
jo
jne
sbb
inc
int3
fcoms
enter
push
ss
cltd
call
out
xchg
nop
xchg
or
shrb
rcrl
mov
mov
dec
adc
mov
or
icebp
stos
jae
mov
fmull
fimull
mov
push
mov
or
into
adc
xorl
out
jmp
in
sbb
adc
xchg
adc
jo
push
scas
push
pop
shlb
fisttps
int
and
lret
ret
mul
or
cs
and
sub
add
mov
or
pop
cmpsb
mov
add
test
lahf
xlat
ret
stos
cltd
test
das
gs
stos
loope
xor
call
lcall
sti
pop
xchg
notb
push
jle
inc
lds
stos
jg
es
mov
loope
out
nop
pop
fcoml
or
outsb
cmp
clc
dec
dec
jo
shrb
or
sub
pop
sub
add
jns
std
and
sahf
je
mov
mov
cli
sub
repz
fbld
jno
ja
ret
ret
xor
push
aaa
andb
inc
cmp
add
pop
xchg
out
ljmp
pop
fildl
shlb
lahf
lahf
xchg
std
fistpl
mov
repz
or
lea
dec
push
sarb
cmc
xchg
jmp
lcall
inc
repnz
test
xchg
fsts
jns
lock
or
xchg
xor
push
xor
xchg
popf
cwtl
ret
clc
int3
xchg
mov
jns,pn
lret
or
jae
sub
mov
cmp
xchg
add
sub
push
aas
sbbb
inc
ret
xor
adc
add
aad
shlb
and
and
push
fwait
rorl
aam
js
std
xor
sti
in
sbb
icebp
stos
fidivrl
push
ror
jle
daa
in
stos
mov
cmpsl
and
inc
mull
jl
cmp
repnz
pop
mov
mov
insl
sub
push
sbb
inc
push
jb
sbb
jbe
add
jbe
fdivrl
pop
popf
aad
mov
ja
and
shl
loop
fiaddl
cltd
cmc
mov
sbb
fistpl
pop
sbb
jnp
sbb
rclb
loope
or
adc
add
gs
test
cmp
mov
in
lcall
inc
sub
mov
sti
xchg
movsb
push
testl
jl
adc
pop
mov
jbe
sahf
mov
ret
inc
or
rcl
cmp
sarb
dec
mov
xor
sub
ds
stc
pop
and
data16
int
mov
sbb
adc
ds
lcall
pusha
stc
cmp
mov
or
pop
mov
lahf
aaa
loop
shrb
fs
mov
sahf
fcompl
jne
call
mov
inc
aas
stos
sbb
inc
fisubrs
fstl
sbb
push
fsubs
sarl
nop
push
into
cli
mov
push
bound
inc
sbb
cltd
stos
iret
pop
ss
pop
add
les
int
push
xor
loopne
adc
sub
cmp
push
xchg
adc
dec
andl
dec
mov
movsb
cmp
ds
decl
cmp
mov
loope
setns
outsb
jb
out
lret
dec
pop
enter
pop
idivl
mov
out
fistpl
sbb
xchg
jp
out
dec
cmp
enter
out
enter
shl
icebp
and
movsl
insl
js
cs
push
sbb
mov
scas
jmp
push
leave
push
ja
push
icebp
jmp
or
addb
adc
aaa
int
dec
xchg
xchg
inc
in
sub
mov
or
lock
outsb
inc
push
or
imul
ljmp
pop
inc
ds
lahf
int3
incl
mov
lods
or
and
into
xlat
xchg
sbb
push
out
and
std
pop
sbb
mov
mov
jl
xchg
adc
mov
imul
sub
or
imul
xor
inc
and
fsts
mov
cmp
aas
lea
mov
fs
mov
mov
mov
rcrb
mov
iret
mov
sahf
mov
jns
call
rorb
inc
and
cmp
std
xchg
loopne
xor
loope
cltd
or
cmp
mov
sub
cmp
jp
or
and
sub
jle
jmp
cmpsb
and
scas
aas
and
push
push
fs
sar
out
mov
stc
pop
rorb
sarl
mov
inc
jecxz
gs
adc
xor
jmp
mov
int3
pop
leave
stc
mov
mov
fisubrs
add
call
icebp
push
insb
in
sub
xor
jmp
add
jne
dec
outsb
pop
lods
rcrb
xchg
push
and
shl
push
pop
int
mov
push
ja
pushf
fbstp
ds
test
inc
inc
add
add
mov
imul
aas
sbb
and
push
movsl
or
jnp
out
mov
jns
push
inc
imul
add
cmp
xor
pop
outsb
ljmp
mov
lretw
mov
mov
dec
imul
add
popa
outsb
or
repz
jne
shll
fistpll
xchg
enter
nop
mov
lret
js
mov
test
aad
push
sbb
mov
loope
xorb
scas
mov
or
mov
or
icebp
in
jp,pn
pop
pop
mov
mov
and
pop
je
dec
adc
sub
sub
out
inc
jl
outsb
add
or
add
ficompl
icebp
jl
fsub
insb
mov
dec
mov
repz
cmp
sbb
mov
mov
adc
mov
mov
test
dec
lcall
out
sarl
mov
xchg
stos
lea
ja
mov
add
movsl
testb
jg
scas
out
mov
xchg
dec
popf
cltd
jb
std
jne
push
rcrb
jle
sub
dec
repnz
int3
scas
subl
lds
subb
inc
loopne
mov
push
adc
inc
inc
sbb
fcoml
lods
or
lea
mov
xchg
call
jne
fstpl
shll
in
dec
xchg
jb
dec
adc
clc
ret
sti
xchg
xchg
sbb
negb
pop
out
or
aad
ds
call
jo
daa
xchg
dec
fmul
movsl
adc
lods
and
aad
or
mov
orl
jmp
lods
in
pop
adc
ljmp
and
nop
push
sbb
inc
movsl
inc
push
sbb
sub
adc
into
cmp
lahf
jb
pop
sbb
jne
adc
pop
mov
mov
dec
daa
mov
push
mov
scas
pop
inc
inc
test
jle
addr16
and
movsl
pop
xor
or
fs
fwait
ljmp
pop
sahf
and
xchg
add
dec
sub
inc
or
rclb
mov
jle
call
mov
cmc
popf
idivb
adc
xchg
adc
dec
ja
cmpsl
adc
insb
iret
inc
sub
or
iret
dec
mov
pop
fcmovnu
jmp
or
xor
loope
jp
or
adc
movsb
mov
jmp
or
and
cmp
pop
cmp
lret
lahf
arpl
aam
test
std
mov
outsb
xchg
pop
aad
cmp
and
cwtl
sbb
mov
fbstp
mov
adc
ret
jmp
jns
inc
popf
jne
sub
push
into
dec
sub
sub
sbb
dec
mov
jle
lar
push
cmc
mov
mov
lods
pushf
xor
jns
mov
shlb
mov
or
xchg
jg
adc
push
lret
mov
in
lds
adc
sub
adc
xcrypt-cfb
cmpsl
out
dec
rcrb
lds
lods
pop
cld
mov
push
dec
push
mov
sub
xchg
out
mov
cmp
mov
and
and
xchg
sahf
push
jle
mov
dec
test
jae
adc
cs
ret
add
hlt
push
movsl
push
ss
mov
insl
iret
ss
mov
rclb
subl
mov
mov
mov
pop
into
mov
and
andl
sub
inc
inc
fildl
out
shl
push
push
inc
sub
mov
and
lods
inc
mov
subl
add
ret
pop
mov
jmp
loop
xchg
adc
aad
xchg
sbb
inc
cld
mov
mov
orl
dec
jge
loopne
jp
sub
das
adc
nop
int3
jg
fisttpll
jecxz
xchg
xor
pop
incl
mov
adc
mov
sbb
lods
jo
scas
inc
jno
scas
jmp
xor
xchg
cli
xor
cmp
mov
lret
mov
jg
mov
sub
das
xor
stc
in
dec
aaa
test
in
fisttps
cmpsl
dec
jmp
mov
pop
in
add
xchg
jae
xchg
pop
les
fsubrl
mov
pop
insl
and
lcall
pushf
jl
test
sub
insb
xor
mov
scas
sub
imul
mov
mov
dec
sarb
mov
add
rorb
mov
negl
out
xchg
je
nop
mov
sti
jb
push
xchg
shll
mov
mov
cmpsl
dec
rcrl
pop
jo
xchg
inc
and
insl
ficompl
sub
add
pop
xor
and
jmp
inc
leave
test
mov
jno
lahf
jp
in
xor
sbb
shll
and
cltd
mov
ljmp
and
pop
stos
sbb
jb
mov
and
imul
pop
das
sbb
stos
mov
pop
sti
lahf
daa
mov
lret
dec
xchg
inc
mov
or
sub
jle
adc
or
jnp
lea
and
test
mov
stos
loope
stos
pop
cmp
mov
add
cmp
ret
rcl
ljmp
clc
cs
push
sbb
sub
ja
lock
pop
test
into
fistps
dec
addr16
mov
xchg
mov
mov
sbb
mov
int
adc
mov
pop
jo
popl
jg
testl
mov
arpl
shrl
mov
sub
cmpsl
push
xor
sub
mov
jbe
jecxz
xchg
inc
xchg
cld
outsl
pop
iret
lahf
addr16
pop
pop
and
sbb
mov
lret
scas
loop
xor
or
fldt
jno
in
sbb
fsub
sahf
sbb
iret
mov
rolb
cltd
mov
test
loop
cmpl
mov
stc
mov
dec
xor
xchg
mov
or
les
inc
mov
add
jnp
insb
das
mov
rorb
and
lret
les
fisubrs
fs
test
jmp
mov
daa
sbb
cmpsb
pop
out
dec
pop
rcl
dec
loop
rorl
aaa
in
cmc
int
mov
push
scas
cmpsb
jns
or
lea
pop
jecxz
jmp
jl
jae
stc
gs
repnz
stc
fdivrl
imul
pop
lock
pop
fsubrl
in
push
cmp
sar
iret
push
daa
pop
mov
mov
push
inc
das
xor
int3
lods
push
cmpsb
aad
mov
cmp
pusha
imul
push
push
add
dec
out
into
mov
imull
fidivrs
inc
jecxz
movsb
fists
or
jge
adc
mov
int
sahf
jge
pop
into
mov
insl
jne
fnstsw
jb
jb
std
nop
shlb
imul
jecxz
lret
xor
dec
mov
sarb
adc
dec
addr16
mov
stc
mov
mov
sub
adc
bswap
fst
xchg
flds
js
mov
xchg
mov
mov
pop
dec
fbld
sahf
dec
cld
rolb
mov
add
push
notl
aad
and
fcomip
loop
scas
mov
dec
test
push
sub
in
hlt
mov
rolb
pop
cmpb
lret
stc
fnstenv
sbb
mov
push
jl
arpl
test
ss
sahf
jmp
push
out
mov
cltd
repnz
pop
adc
push
mov
mov
pop
jmp
icebp
xor
adc
sbb
cwtl
sarb
xchg
add
pop
push
xor
xchg
push
or
rcrb
insl
push
stos
int
and
jg
push
mov
movl
inc
push
aad
fadds
dec
mov
sub
cmp
or
sub
cs
popa
mov
loopne
ja
pop
mov
sub
hlt
int
icebp
jmp
in
shll
sbb
adc
into
lret
stos
add
ss
pop
push
xchg
mov
je
pop
jge
jae
sub
sbb
and
daa
xchg
repz
dec
mov
cmp
sbb
jle
and
int
fs
cmpsl
sub
loope
scas
aam
test
stos
rcll
jl
mov
fistpl
les
sub
push
scas
ror
and
pop
mov
aad
out
adc
imul
pop
out
inc
je
imul
pop
scas
dec
mov
or
scas
jo
fisttps
dec
sub
xchg
mov
inc
mov
and
cmp
bound
push
in
jae
push
jo
das
mov
outsb
push
or
nop
adc
out
xchg
mov
cmpsl
lods
xchg
lods
nop
pop
and
push
jl
fwait
dec
test
mov
sub
fcoml
test
or
test
imul
call
jbe
jge
mov
out
xor
dec
fmull
or
decl
les
jae
inc
add
and
scas
jo
xchg
addl
arpl
std
pop
and
in
outsl
mov
flds
cmp
sbb
incl
mov
mov
mov
out
inc
adc
xchg
or
mov
xchg
test
dec
test
data16
ss
popa
xor
mov
in
xchg
test
inc
scas
dec
push
xchg
gs
fidivrl
pop
push
stos
mov
xchg
adc
test
pop
cmp
shr
or
or
pop
aam
jge
jnp
daa
sbb
decl
jecxz
adc
push
and
push
out
cmpsb
pop
jle
lcall
inc
cld
and
mov
push
hlt
inc
movsb
add
sub
or
dec
adc
mov
inc
and
loopne
out
xor
push
in
mov
sahf
mov
mov
clc
cmp
int3
push
mov
xchg
lret
mov
ret
inc
out
jmp
cmp
repnz
jg
push
mov
or
into
cmpsl
pop
dec
in
cmpsb
push
cmp
fnsave
or
test
sub
int3
aaa
xchg
cmp
aam
and
cmc
mov
inc
mov
movsb
scas
inc
xchg
test
out
xchg
mov
pop
adc
ret
mov
push
clc
add
inc
jmp
jno
dec
scas
in
mov
xchg
pusha
mov
dec
adc
adc
push
add
mov
jae
out
push
stos
movsb
mov
mulb
push
movl
rol
repz
aaa
loop
fs
outsl
clc
je
ja
popf
push
add
repnz
lds
or
lods
icebp
popf
das
repnz
jecxz
daa
xor
test
adc
pop
push
ljmp
lds
iret
pop
scas
mov
add
cmc
mov
jo
fadds
and
jecxz
mov
cmpsb
xchg
push
repz
mov
out
pop
jae
jmp
lcall
sarl
and
inc
std
fsubr
ljmp
jmp
imul
add
pop
cltd
push
inc
fnstcw
and
arpl
movsl
inc
aaa
gs
imul
xchg
cmp
int
je
jp
sub
sub
xchg
inc
bound
test
dec
fsubl
xchg
ljmp
pusha
sbb
std
cli
mov
mov
xor
rcrb
bound
lods
cmpsb
push
arpl
rcrb
in
ret
movsb
out
bound
dec
or
xor
jbe
ja
gs
loope
adc
mov
fmul
sti
cmp
scas
repnz
cmp
or
mov
or
aas
pop
mov
push
sub
pop
mov
xor
push
sbb
fadd
pop
mov
jns
dec
xchg
inc
pop
cmp
xor
dec
call
stos
or
adc
cmp
cmp
aas
in
das
mov
mov
pop
jno
test
insl
pop
and
enter
ss
lahf
dec
mov
imul
in
ds
sti
jp
into
out
into
push
inc
xor
push
sbbb
in
rol
push
ja
xchg
les
dec
shl
imul
and
mov
aam
ret
jg
mov
lret
cmp
adc
adc
adc
div
pop
jns
shlb
sub
aad
push
cltd
add
mov
mov
fstpl
hlt
cmpsl
mov
dec
push
inc
into
sbb
test
scas
js
add
pop
ljmp
inc
mov
js
inc
push
pop
out
aad
push
test
insb
mov
add
insb
push
or
adc
jo
cli
jg
js
movsl
popf
fisubrs
in
mov
jmp
xchg
test
jl
add
sbb
call
cs
les
nop
add
fidivs
insl
imul
movsb
fsubl
cmpsb
test
or
cmpsb
cli
pop
bound
mov
popa
xchg
aaa
inc
cmp
icebp
fmull
mov
jns
dec
push
push
gs
mov
stc
arpl
add
add
xlat
sti
dec
stos
out
xor
or
or
xor
dec
mov
ja
fwait
loop
jle
scas
mov
mov
ret
cltd
inc
sub
pop
mov
loop
movb
in
fidivrl
fwait
mov
out
daa
sub
pop
scas
xchg
xor
in
bswap
add
je
cld
and
mov
popf
mov
rclb
sti
push
test
dec
fistpl
sti
xchg
inc
jmp
sub
sti
mov
dec
sub
and
aad
xor
xlat
xchg
inc
bound
mov
jb
xchg
outsb
add
out
icebp
das
mov
shr
imul
pop
repz
mov
add
sbb
sbb
or
inc
lock
dec
pusha
jp
xor
and
xor
in
mov
lea
inc
inc
mov
pop
adcl
dec
pushf
and
jb
lret
pop
and
push
cmp
shrl
sub
mov
cmp
push
add
jle
gs
adc
movsb
mov
testb
pop
adc
ret
mull
lret
and
stc
pop
and
inc
jg
out
aaa
in
scas
xor
cltd
cli
jb
sub
cmp
dec
mov
scas
or
and
jecxz
or
rorl
add
je
ljmp
cmp
xchg
adc
sbb
jne
int3
inc
push
mov
adc
inc
addr16
scas
xchg
rclb
pop
xchg
pop
test
sti
test
xor
in
call
mov
and
scas
aam
hlt
xchg
adc
cmpl
inc
enter
push
push
fs
addr16
sti
push
jnp
je
pop
ret
cmp
test
mov
cs
push
cld
pop
rolb
shl
xchg
negl
mov
cmp
cmc
pop
sbb
arpl
jge
push
mov
pop
and
imul
push
mov
ret
aas
pop
movsb
and
adc
fcmovnu
pop
push
fildl
rcrl
sahf
inc
xlat
sub
or
inc
ret
jo
and
iret
jle
sbb
ror
mov
sbb
int3
popf
pop
sbb
inc
sub
imul
sbb
leave
into
inc
mov
insb
push
loope
xor
bound
rcl
or
and
pop
lods
les
mov
sub
repz
pop
shlb
sbb
decb
mov
inc
jecxz
fmuls
aad
int
push
cmp
outsb
inc
mov
leave
inc
add
les
jecxz
push
nop
cmp
lret
add
daa
push
pop
dec
in
pop
cmpsb
int3
mov
sub
mov
fmuls
fisubs
jge
pop
test
sub
dec
adc
movsb
test
cli
push
scas
sub
cs
rorb
add
stos
mov
add
cwtl
out
add
int
enter
sbb
sbb
popf
sbb
sahf
push
mov
idivb
dec
dec
out
dec
out
dec
pop
jge
mov
sbb
std
pusha
mov
dec
push
sbb
pop
push
test
cwtl
and
addr16
test
popa
adc
shrb
bound
arpl
pop
int
sbb
mov
cmp
int3
sub
fisubs
sti
insb
in
lds
push
cmp
sub
das
ret
aas
mov
and
pop
jecxz
adc
leave
xchg
lcall
sbb
pop
pop
dec
repz
cmpsl
and
lods
test
mov
lahf
xchg
insl
int
lret
cmpsl
xlat
loope
xchg
jb
outsl
push
pop
out
add
imul
push
popa
mov
push
dec
pushf
adc
dec
adc
ss
mov
xlat
cmp
in
and
mov
sbbb
cmpsl
pop
cmp
mov
xor
sbb
jae
xor
std
and
sub
or
and
pop
enter
push
ds
repnz
popf
lods
pop
lds
pop
pop
adc
shrb
adc
and
stc
movsb
popf
inc
out
nopl
insl
jne
push
mov
mov
je
sub
or
cmpsb
mov
js
bnd
shl
xlat
xchg
push
iret
je
mov
jne
cmc
jo
push
xor
clc
loopne
out
lret
ja
jp
sbbb
movsl
jae
push
clc
or
sbb
sub
mov
jge
loop
loop
and
adc
arpl
cli
imul
lahf
mov
bound
add
dec
cwtl
inc
pop
lret
adc
jo
clc
loopne
jg
leave
push
and
add
jb
ljmp
sbb
dec
mov
shr
xchg
and
mov
push
or
out
andb
gs
popf
popf
out
loope
pop
add
mov
jb
xchg
xchg
and
movsb
inc
jns
fmul
test
lock
ror
insb
add
aaa
fdivl
insl
and
pop
nop
sub
inc
xchg
dec
mov
add
xchg
mov
adc
clc
leave
inc
ffreep
add
cmp
pop
ret
pop
into
in
mov
push
xchg
into
push
addb
or
push
xchg
std
pop
cld
pop
and
out
push
push
xchg
data16
ljmp
mov
ret
push
lods
push
pushf
push
xchg
mov
or
int
push
xchg
arpl
mov
dec
iret
mov
push
inc
movsb
inc
imul
or
mov
xchg
add
fs
mov
pop
jb
adc
xor
inc
cld
mov
test
add
inc
mov
pop
mov
enter
add
xchg
jge
out
sbb
push
std
mov
ja
scas
sbb
rcrb
or
shrl
jecxz
push
pop
inc
jmp
dec
scas
call
jecxz
and
dec
scas
subl
inc
stos
mov
mov
in
jns
inc
cmp
jb
je
mov
in
jno
mov
lret
int
xchg
mov
cltd
vmovdqa
outsb
push
mov
mov
fs
popa
inc
xor
or
movsl
push
stos
push
shrb
les
scas
loop
sub
cwtl
hlt
cmp
aad
jmp
lret
adc
scas
dec
mov
and
adc
dec
adc
aad
sub
stos
test
mov
jmp
negb
nopl
mov
pop
adc
fidivrs
imul
jmp
mov
sub
js
cmp
inc
paddsb
jne
xchg
jg
xchg
shll
pop
pop
call
add
and
gs
sbb
fisttps
jmp
rcrl
dec
loope
mov
cltd
xor
sbb
lock
je
test
mov
cmc
gs
fisttps
test
and
mov
leave
or
mov
addl
insl
add
lods
pop
sub
fbstp
test
lock
jae
pop
insb
hlt
and
xor
xor
int3
dec
iret
mov
mov
fld
pop
sub
sbb
stc
adc
repnz
sbb
fsubl
inc
mov
les
je
jmp
dec
add
add
xchg
sub
into
popa
add
mov
inc
mov
pushf
bound
jne
ja
mov
ret
lret
inc
jne
cwtl
and
mov
and
fsts
cmp
gs
jnp
pop
sub
aas
ds
arpl
add
xchg
push
jmp
sub
stos
imul
sarl
gs
mov
jl
cwtl
and
fcomip
mov
jae
rcl
iret
sub
inc
popf
mov
outsb
sbb
cmp
or
xchg
push
inc
test
sub
mov
fldcw
cmp
lds
iret
pop
sub
popf
ret
fldt
mov
movsl
loope
pop
sub
fmul
call
add
and
jge
xchg
loope
fwait
shll
adc
movsb
enter
pop
mov
lahf
mov
add
pop
lar
aaa
jno
nop
repz
into
outsb
cltd
xchg
xchg
xchg
jo
mov
loop
sahf
and
ret
xchg
and
or
cmp
pop
cmp
jl
mov
sub
mov
xchg
push
cwtl
adc
fbstp
inc
adc
cmp
imul
movsb
cmp
mov
mov
sub
push
dec
xchg
mov
hlt
lods
mov
stc
lods
fmuls
in
hlt
xchg
test
jl
mov
mov
out
add
xchg
push
sub
jmp
cmp
jne
xor
leave
lea
addr16
push
xor
loop
loopne
push
mov
movsb
pop
jp
and
cmp
int
repnz
daa
and
pop
roll
js
lcall
xchg
stos
aas
add
sub
ljmp
stos
clc
je
subl
fwait
out
jne
add
std
pushf
add
std
dec
je
imul
lods
xchg
xor
scas
test
sbb
and
jp
lods
cmpsl
std
and
xor
jns
fstpt
inc
or
sub
insl
sbb
mov
mov
adc
push
pop
xchg
shrb
or
mov
sbb
adc
push
test
iret
fistpll
sbb
push
dec
mov
sub
fadd
mov
mov
mov
bnd
pop
js
loopne
shll
xchg
stc
cvtpd2pi
dec
aad
leave
or
movsl
mov
mov
leave
pop
loope
pop
shll
mov
add
mov
jle
dec
loopne,pt
or
test
mov
test
inc
or
cwtl
adc
sbb
mov
test
mov
stos
lret
push
mov
fdivp
xchg
scas
in
in
push
mov
mov
lea
or
jns
push
shll
nop
lock
push
mov
cmp
addr16
into
mov
test
fildll
xor
pop
pop
or
arpl
gs
pushf
pop
mov
cmc
cld
or
mov
lret
cmp
xor
iret
add
push
out
roll
dec
mov
xchg
push
pop
cli
cltd
add
lahf
xlat
or
cmp
insl
out
cli
xor
jne
insl
int
adc
ss
icebp
popf
sub
or
cmp
xor
jo
or
dec
fbld
mov
push
mov
and
xor
fmul
mov
and
popa
popa
jp
cmc
outsb
sbb
push
mov
cmp
mov
mov
loopne
xchg
je
jle
mov
roll
call
and
jb
bound
and
sub
mov
push
mov
jp
mov
mov
add
loop
cmp
enter
loope
jle
xor
repz
shll
lock
cmc
iret
xchg
aad
adc
test
or
mov
cmp
inc
cmovg
inc
adc
jg
scas
sbb
sub
and
loopne
inc
lahf
mov
mov
cmp
movsl
adc
iret
push
mov
and
cmp
das
arpl
aam
pop
loopne
pop
mov
jmp
jo
or
out
pop
push
aaa
push
in
push
mov
gs
out
frstor
les
test
daa
add
enter
inc
sub
hlt
cld
test
jns
push
cmp
cmpsl
insb
popa
mov
or
sbb
int3
ljmp
arpl
sub
mov
imul
orb
inc
outsl
addl
test
outsb
outsb
daa
stos
ljmp
enter
cmc
loop
jno
ficompl
sbb
rorl
lcall
pop
movsb
outsb
xchg
call
ja
xchg
dec
jp
sbb
xor
mov
adc
mov
lods
cmp
clc
push
scas
out
and
xor
or
inc
jbe
push
add
ficompl
dec
xchg
mov
movsb
lods
xchg
icebp
es
mov
dec
pop
mov
mov
test
repz
xchg
sbb
mov
dec
and
mov
sbb
int
push
dec
sub
push
fstpt
aad
clc
into
loope
enter
stc
mov
lock
ficoms
or
sub
fidivl
fwait
iret
outsb
mov
popf
or
sub
movsl
enter
inc
mov
push
lea
data16
sarl
add
cli
xlat
negl
jl
aaa
cmp
sbb
call
dec
sbb
adc
or
cld
lret
cltd
mov
xchg
push
sbb
lea
aam
int
leave
xorb
and
push
push
pusha
aad
mov
enter
sarb
push
xchg
out
dec
mov
jge
in
mov
repz
sbb
cmc
or
inc
cld
sub
mov
mov
jno
out
adc
xor
sub
mov
pop
jmp
xchg
pop
jle
ret
or
mov
imul
out
inc
xor
push
jae
and
repz
dec
dec
aaa
mov
mov
sub
loop
mov
imul
push
mov
pop
repnz
add
hlt
dec
in
mov
dec
dec
rcrl
xchg
fcoml
pop
imul
sarb
and
jne
pop
lret
add
in
jnp
les
outsl
test
and
dec
fistps
pop
pop
lods
push
push
mov
mov
pop
out
pop
push
cli
sbb
push
dec
in
mov
ror
inc
xchg
sbb
push
cmp
mov
and
add
mov
sub
ret
das
stc
enter
xchg
testl
rorl
adc
bound
lods
popf
jo
or
sbb
repz
dec
xchg
xchg
xlat
push
imul
sbbb
xchg
aad
inc
fisttpll
jb
sbb
sbb
cmp
dec
shll
add
gs
fistl
out
xorl
dec
setp
and
pushf
mov
fiadds
insb
rcll
mov
xchg
por
inc
insl
daa
dec
movsb
cs
add
sbb
xchg
push
push
icebp
pop
push
inc
push
xchg
pop
cld
or
faddl
pop
push
cltd
and
into
xchg
push
sbb
adc
push
jns
sub
aaa
arpl
popa
inc
int
sub
cld
adc
sti
mov
fisttpl
fwait
xor
push
arpl
sub
aam
xchg
imul
dec
xor
fs
lea
loope
push
and
inc
hlt
fwait
inc
out
ss
xor
mov
out
je
test
test
cmp
xor
adcb
lret
cli
sarb
cmc
cmp
dec
je
add
adc
fadds
pop
fstps
pop
lods
fcomps
sbb
or
cmp
push
je
imul
popa
mov
aad
shr
ret
xor
enter
fidivrs
mov
out
stos
enter
dec
mov
inc
cmp
xor
dec
push
nop
push
sub
sbb
pop
addb
loopne
inc
jle
js
push
xchg
push
lahf
movsb
adc
lods
mov
out
mov
insb
sti
es
mov
jp
test
add
inc
sahf
push
ret
sub
icebp
sub
shll
test
push
mov
pop
js
mov
rcrl
cmp
sbb
stc
cmp
aas
jae
imul
fcmovb
mov
movsb
push
mov
inc
sub
in
fldl
daa
fucomi
cmpb
vmwrite
mov
mov
pop
push
dec
xlat
push
jp
shlb
push
dec
mov
fstps
push
mov
jbe
mov
imul
int3
mov
pop
test
arpl
mov
jb
pop
and
out
xor
rorb
mov
divb
nop
and
outsl
lods
push
fcoms
xor
mov
call
mov
daa
clc
aad
movsb
mov
jae
sahf
mov
mov
pusha
fiaddl
std
push
aam
hlt
adc
ja
adc
mov
xchg
leave
sbb
aad
add
sbb
mov
push
mov
pop
out
mov
xchg
pop
dec
in
daa
xor
and
xchg
test
imul
and
je
sbb
icebp
sub
push
adc
inc
movsl
xchg
into
repnz
cmp
loope
adc
aaa
push
hlt
pop
jge
pop
adc
ret
sbbb
fldl
jecxz
sbb
dec
add
mov
les
xchg
repz
sbb
in
mov
clc
mov
mov
mov
xchg
or
sahf
adc
add
sub
cmp
jle
mov
lcall
jl
sub
out
sub
xchg
lods
pop
ret
sub
jne
iret
dec
xchg
add
adc
mov
rolb
add
jbe
aad
dec
scas
mov
or
mov
xchg
nop
pop
bnd
outsb
push
cmpsb
mov
cmp
add
ror
lods
inc
outsb
enter
cmc
fldl
xchg
addb
pop
xlat
int3
in
push
push
dec
jge
lret
mov
mov
xchg
popw
daa
push
fsubl
mov
dec
cmp
and
dec
clc
and
insb
sub
dec
mov
lahf
stos
stos
or
and
pop
or
ss
lock
adc
aaa
jno
inc
clc
iret
je
mov
lds
addr16
mov
mov
jno
pop
jns
bound
lret
loope
sub
sbb
mov
xchg
jb
xchg
mov
test
jno
jae
dec
xchg
xchg
or
imull
fistl
add
mov
movsb
lahf
mov
mov
ret
leave
jecxz
das
test
xchg
push
cld
xor
gs
rcll
mov
adcb
dec
ja
push
lret
or
jo
dec
dec
dec
test
lods
xor
or
jne
adc
push
adc
mov
mov
xorb
cmp
jb
aas
and
fdivr
lods
or
mov
add
push
ret
lahf
ljmp
mov
in
xchg
sub
mov
std
fdivrl
fidivrs
xor
fbstp
mov
add
loope
les
xor
gs
rcl
push
jg
cmpsb
leave
inc
push
or
xor
mov
adc
jmp
xchg
jae
sbb
in
cmpsb
jb
pop
dec
lahf
mov
inc
xchg
mov
add
ffree
mov
add
addr16
mov
imul
jg
mov
cmp
repz
js
subps
jns
dec
mov
into
sbb
ds
mov
mov
sub
clc
pop
in
push
mov
repz
dec
jl
mov
loop
dec
aad
imul
inc
pop
outsl
cmpsb
jns
or
inc
iret
pop
inc
imul
bound
pop
push
sahf
or
push
jecxz
ds
push
call
xchg
inc
or
test
test
test
sarl
imul
loop
mov
cmp
adc
scas
and
ljmp
fs
js
dec
sbb
mov
stos
or
or
pop
subl
inc
jns
aaa
sub
push
rcl
addr16
cmp
inc
stos
push
dec
ja
mul
sbb
pop
test
and
daa
dec
jne
push
insb
popa
popf
fists
data16
insb
stc
imul
cmp
or
dec
sub
aam
xchg
sti
xor
out
sub
fmul
pop
sbb
jl
cld
xor
add
mov
mov
add
add
ja
das
xchg
and
mov
rolb
mov
xchg
clc
hlt
jne
push
xchg
pop
cmpsl
fsts
mov
jecxz
or
pop
cltd
cltd
jg
test
push
mov
jne
subl
jns
sbb
jns
into
stos
nop
sti
jb
adcl
shlb
outsl
cmp
jo
loop
jnp
adc
sbb
shlb
mov
push
lds
lret
pop
pop
pop
add
mov
jecxz
lcall
mov
imul
dec
call
sbbl
in
faddp
leave
cs
sbb
and
cltd
xor
xor
iret
pop
stc
or
ljmp
rcll
insl
sub
mov
sbb
cltd
fdiv
xor
mov
dec
fsubp
mov
into
popa
out
adcb
loopne
jbe
pop
push
dec
xor
cmc
mov
pop
lock
adc
fcmove
pop
push
inc
pop
notb
push
and
push
mov
mov
orb
pop
mov
lret
dec
or
push
int3
pop
int3
aaa
add
imul
mull
pop
xlat
ss
xlat
mov
pop
or
outsl
out
mov
add
stos
xchg
sub
arpl
std
mov
sbb
push
mov
xor
dec
fcoms
jg
sbb
jmp
mov
xor
jb
jns
enter
or
jle
je
rcrb
mov
orb
popa
cs
addr16
pop
cs
insb
outsl
test
std
mov
and
cmc
xor
imul
lret
sbb
and
cwtl
loopne
lcall
lods
pusha
xchg
dec
mov
movsl
daa
mov
scas
sbb
xor
lock
sub
or
aas
int3
jg,pt
mov
les
lret
mov
ds
outsb
addr16
pop
fsubrl
jp
mov
stos
aad
fwait
popa
add
stos
ljmp
mov
shlb
sahf
data16
and
fdivrs
sahf
aad
pop
cltd
dec
leave
jle
mov
shr
out
fists
mov
ror
push
push
loopne
pop
mov
into
int3
cmp
mov
insl
push
push
stos
arpl
mov
aas
adc
push
lret
adc
ljmp
jbe
fimuls
pop
loop
add
xchg
mov
mov
in
je
push
ss
loopne
sub
and
mov
inc
insl
rep
mov
test
enter
hlt
aaa
jle
fidivrl
jnp
xor
setae
int
fsubr
sbb
inc
inc
xchg
mov
into
cs
and
dec
adc
mov
cld
jnp
jle
mov
sub
js
data16
cli
rol
out
or
aas
das
sbb
jl
pop
test
mov
xor
stc
and
sbb
fidivrs
push
adc
dec
ficompl
fnstenv
pusha
leave
mov
sub
sub
mov
inc
mov
repz
fs
out
mov
add
ja
fimull
mov
cmp
jb
and
pop
stc
push
mov
aaa
movsl
pop
pop
pop
cmp
sti
call
mov
jnp
aas
test
cmpsl
mov
nop
andb
insw
xlat
cmpsl
mov
addr16
inc
inc
cmc
or
leave
or
dec
sub
vphsubwd
sub
cmp
je
pop
adc
hlt
lea
and
enter
imull
mov
push
mov
push
testl
xchg
mov
xor
je
and
lock
adc
jp
jg
stc
outsb
push
mov
push
in
fdivl
push
test
xchg
loope
push
shlb
std
sub
int3
dec
aad
pop
popf
mov
sbb
imul
push
xchg
and
pop
xor
loope
das
in
add
or
inc
test
sti
jne
mov
lahf
mov
push
mov
push
rcrb
repnz
lea
cmpsb
adc
pop
mov
and
push
and
fcmovnb
imul
stos
pop
test
mov
mov
xor
cmp
mov
adc
push
mov
cmpsb
mov
out
inc
sbb
cmp
add
xchg
sub
subl
mov
add
cwtl
sti
ja
xor
pusha
jmp
jmp
and
clc
dec
movsb
dec
jno
add
lds
adc
mov
sbb
xor
loope
and
pop
pop
pop
cmpsl
ret
cs
aam
mov
cltd
add
pop
and
push
ss
dec
hlt
jae
or
pop
jl
inc
inc
mov
ds
shr
cmpb
jl
sub
mov
fcomps
push
sub
in
pop
pop
mov
jle
and
cmp
in
fistl
sub
fsts
aas
xchg
jmp
jle
add
mov
popf
jl
lahf
mov
cmp
xor
xor
cmpsl
cmp
mov
arpl
xchg
mov
mov
inc
mov
rcrl
mov
sub
sbb
jns
xor
cmc
cmp
mov
fnstenv
imul
or
jmp
stos
icebp
jg
mov
xchg
sbb
xchg
inc
pop
adc
jmp
lret
pop
test
mov
pop
pop
cmp
cs
es
shlb
das
aad
jecxz
loop
daa
cmpsb
sub
cmp
pop
pop
aas
in
pop
jmp
dec
movl
sbb
addr16
or
call
fisubs
lcall
lods
fs
inc
fmull
jp
inc
into
mov
in
xchg
push
inc
mov
pushf
std
paddb
jne
lods
ficoms
imul
push
jns
push
lahf
xchg
out
out
xchg
adc
jbe
stc
subl
rcrl
movsb
push
shl
or
gs
adc
fdivr
popa
cmp
xor
inc
adc
sti
stc
dec
lods
push
idiv
cmc
rep
loope
leave
xlat
test
ret
push
inc
push
imul
test
and
sahf
add
call
or
xchg
in
mov
outsb
lds
jnp
pop
dec
jecxz
mov
call
pop
divl
lds
mov
push
aam
cltd
popa
and
push
subl
inc
iret
clc
sbb
cmpsl
mov
arpl
xchg
dec
xlat
scas
pop
enter
push
fnstenv
aas
inc
repz
movsl
push
push
and
test
in
jg
mov
push
call
or
mov
fucomip
aad
mov
inc
inc
int3
dec
cmp
adc
dec
mov
lock
fstl
mov
dec
jmp
cwtl
sub
sub
andb
loop
push
cmpsl
aaa
out
test
push
or
inc
push
jo
das
push
jg
lret
movsl
inc
rorl
mov
fwait
mov
loope
cmpsl
pop
call
ss
stc
loop
lahf
push
jle
xchg
movsl
cwtl
loop
imul
stos
jecxz
sarl
mov
pop
push
mov
test
movsl
iret
or
adc
into
imul
xor
mov
ret
sti
and
xor
mov
and
jmp
xlat
sub
adcl
les
jno
xor
mov
lds
or
cmc
sbb
sahf
sbb
cmp
cmp
sub
sub
or
fiaddl
pop
rolb
in
fldt
jle
jmp
test
andl
js
jp
sub
rorl
pop
inc
and
mov
adc
add
jnp
out
mov
sti
pop
add
or
inc
stc
ficoms
xchg
stos
mov
ja
test
or
cmp
cmpb
sub
mov
test
test
insb
push
ss
int
cmp
xlat
idivl
xor
push
mov
adc
filds
cmp
sahf
add
inc
jp
mov
or
or
lret
xchg
or
push
and
jae
push
fs
addr16
add
jae
loope
xor
ss
mov
jnp
adc
imul
das
and
icebp
ret
inc
sti
in
punpckhbw
pop
ja
mov
popf
xor
push
mov
sub
sub
sub
adc
add
pop
outsl
fmull
insb
mov
mov
mov
mov
jno
and
adc
or
pop
fdivrl
mov
push
subb
pop
lea
or
mov
movsb
jg
sbb
pop
mov
dec
call
fildll
xor
or
daa
cmp
mov
jl
sbb
adc
push
or
jle
add
or
jmp
das
inc
push
mov
lahf
int3
xchg
sbb
dec
adc
sub
shlb
sub
dec
lret
and
pop
mov
sar
es
cmpsl
xor
cmpsl
xchg
lret
mov
jle
popf
mov
jae
push
data16
popa
sti
mov
andb
sbb
out
movsl
dec
jge
xchg
js
mov
push
jmp
jae,pt
out
pop
mov
jp
icebp
in
notb
addr16
add
sbb
movsb
icebp
das
xchg
ja
pop
cwtl
pusha
mov
in
lret
and
xor
js
dec
adc
lret
sbb
lret
dec
clc
push
inc
pop
push
push
daa
inc
sbb
daa
add
jnp
aam
aaa
test
jae
in
xor
cmp
les
push
insl
shll
pop
inc
addr16
push
fs
shll
int
push
pop
inc
or
and
ja
xchg
aad
pop
adc
sbbl
cmpb
pop
mov
push
push
sbb
jl
stos
and
popf
les
sub
into
lods
pop
push
cmc
xchg
inc
and
sub
dec
inc
xchg
test
enter
jge
and
and
and
int
lahf
pop
lret
jg
imul
inc
mov
test
sub
push
popa
mov
add
add
and
inc
ficompl
adc
jle
shll
dec
add
mov
ljmp
add
loopne
pop
jl
pop
jns
call
in
mov
dec
out
push
test
movsb
in
push
arpl
push
dec
adc
fidivs
enter
mov
je
fs
xchg
mov
xor
dec
int
mov
push
sarl
inc
adc
cmpl
lea
stos
add
xor
and
mov
or
sbb
adc
outsl
dec
xchg
cmpb
dec
pusha
outsb
xchg
pop
xchg
mov
cmpl
sub
push
out
out
sub
inc
lcall
roll
mov
stos
xchg
shrb
arpl
lods
stc
pop
ss
rcr
cmp
jae
xor
aaa
rclb
mov
fdivl
outsl
xor
xor
sti
das
test
mov
js
call
pop
ficoml
mov
push
jb
xchg
fcomp
outsb
mov
sbb
jp
add
jecxz
jo
jbe
outsb
out
dec
enter
mov
xchg
and
jmp
cmp
dec
adc
xchg
jae
jl
data16
hlt
das
outsb
mov
push
inc
test
push
dec
lea
pop
jns
popf
bound
lods
jmp
and
mov
loop
jmp
out
mov
imul
andl
pop
jns
cmp
mov
inc
push
and
mov
inc
fidivrl
inc
imul
fs
mov
xor
mov
lahf
or
daa
lea
test
sub
sbb
push
addb
mov
sbb
adc
sub
out
mov
addr16
cmp
stc
jno
stos
stos
shrl
test
scas
push
push
sahf
in
mov
mov
imull
lods
ret
aaa
jge
xchg
push
daa
sub
cld
lods
or
cs
stc
push
stos
faddl
add
adc
pushl
adc
shrb
faddl
sti
ljmp
popa
movsl
and
jl
lea
cmc
ret
stc
adc
adc
fwait
inc
sbb
mov
notb
out
inc
lret
mov
lahf
mov
fs
xchg
or
mov
cltd
cli
mov
mov
xor
mov
in
sbb
push
push
jmp
xchg
stos
xchg
out
push
inc
jle
decb
stos
jnp
and
mov
popf
arpl
mov
dec
movb
insb
dec
mov
shrb
xchg
mov
jmp
push
and
ret
sbb
das
in
mov
das
in
adcb
mov
inc
lret
push
pop
push
jl
adc
jne
js
int
and
incl
push
je
and
enter
dec
xchg
add
fwait
outsl
sti
in
sub
addr16
enter
or
cwtl
scas
sbb
pop
loop
testb
adc
mov
das
adc
ljmp
lret
repnz
pop
and
mov
or
jmp
mull
and
outsb
out
int3
sub
dec
jp
sahf
xchg
sub
pop
push
dec
pop
push
mov
out
mov
sub
rclb
push
push
in
jle
xor
int
or
inc
xchg
sbb
xlat
xchg
mov
dec
rcrl
mov
and
xor
bts
xor
cmp
or
inc
jg
lock
inc
movsl
ret
lds
daa
scas
ret
scas
cmpsl
aaa
out
xchg
lahf
call
popf
sahf
adc
pop
mov
jns
mov
test
nop
sub
xchg
adc
iret
ss
pop
adc
scas
dec
cld
and
cs
testb
or
lea
loopne
imul
repnz
sub
lret
push
ja
adc
ja
adc
mov
pushf
and
out
mov
pop
repnz
jne
sub
inc
stc
movsb
mov
xor
cmc
push
adc
and
add
shlb
pop
movsb
jg
mov
shll
lret
std
icebp
arpl
cmc
rclb
or
jle
fdivrs
mov
push
or
cmp
push
mov
pop
mov
and
fistpl
sbb
stc
push
outsb
test
pop
nop
mov
mov
fwait
testl
test
movsb
adc
stos
dec
inc
rorl
in
out
lret
inc
inc
jge
stos
outsb
sub
and
lds
pusha
add
inc
or
mov
jb
aas
pushf
xor
pop
fsubl
mov
stc
test
out
inc
ss
shlb
and
dec
pusha
cwtl
imul
stos
or
cmp
mov
in
inc
xchg
ds
push
inc
dec
out
mov
scas
dec
adcl
call
mov
xor
hlt
pop
cs
ljmp
push
jo
cmp
repnz
decb
mov
dec
loop
insl
stos
leave
int3
cltd
inc
xor
lods
and
lods
fstps
insb
cmp
and
shr
mov
mov
outsl
das
stc
push
pop
mov
inc
pusha
push
push
sub
sbb
jbe
stos
in
lret
mov
cmp
das
cli
pop
jecxz
cmpsb
pop
call
pop
fstl
outsb
std
xor
aad
lcall
movsb
dec
sub
in
mov
adc
loop,pn
pop
loop
jno
xor
cs
hlt
outsl
dec
add
leave
sub
pop
mov
pop
pop
sti
jae
ss
lods
mov
les
xchg
mov
push
sbb
cmc
ret
mov
push
or
scas
jge
fimull
ja
rorb
xlat
orb
xchg
jnp
push
test
push
adc
jno
add
repz
testl
push
shr
in
fbld
mov
pusha
inc
lods
jae
inc
lock
add
mov
mov
fldl
inc
add
sbb
xchg
push
cmp
jbe
int
dec
outsb
xchg
frstor
push
push
fwait
sarl
sbb
es
in
subb
push
xchg
icebp
mov
stos
jl
aaa
jmp
mov
xchg
jbe
jmp
lret
pop
ds
test
sub
dec
and
cmc
inc
inc
aaa
sub
sahf
mov
pop
jns
pop
pop
jo
dec
ds
sbb
xchg
xor
jo
jnp
mov
push
into
inc
roll
rolb
add
hlt
jge
insl
icebp
leave
adc
xchg
mov
test
pushl
rol
stos
lret
or
mov
lock
dec
mov
sti
fidivs
and
push
adc
pop
dec
cmpsl
inc
or
iret
mov
loopne
mov
jecxz
int
addr16
loopne
loopne
and
iret
sbb
cmp
dec
jmp
mov
movsl
stc
mov
jle
and
jmp
xor
mov
push
jae
mov
ret
cmp
or
adc
inc
fdiv
sbb
adc
hlt
int3
mov
mov
imul
push
xchg
sub
roll
sti
cmp
les
push
rorb
mov
adc
ja
or
lods
mov
loope
out
add
das
adc
imul
aaa
inc
aam
mov
push
adc
add
andb
dec
mov
and
mov
mov
add
add
push
xchg
pop
jne
imul
mov
lret
lahf
loope
and
jno
push
fsubr
dec
dec
sbb
iret
outsl
in
mov
fsqrt
lret
out
jmp
cmc
dec
xlat
inc
bswap
xor
dec
xchg
inc
mov
push
cmp
loop
dec
out
xor
xor
movl
mov
jae
clc
or
mov
lcall
js
in
xchg
inc
out
stc
inc
mov
mov
mov
adc
fnstenv
xor
sub
out
and
mov
cmpsl
xchg
mov
es
lret
rcrb
shlb
or
hlt
or
pop
sbb
fbld
inc
jae
lods
add
sahf
cli
jmp
inc
push
test
xor
mov
lock
jns
gs
sub
mov
xor
sbb
add
adc
aaa
jo
cmp
out
icebp
movsl
or
ficoms
insb
cltd
test
into
imul
getsec
outsb
jnp
xchg
lds
cmp
lret
push
enter
xor
aad
jo
jns
push
jnp
notb
repz
bound
mov
mov
pop
cmc
shlb
sub
dec
dec
jns
xor
repnz
jns
stc
push
lds
loop
bnd
jl
push
clc
into
loope
jp
insl
xlat
dec
mov
lahf
imul
mov
jnp
jge
cmp
inc
dec
mov
popa
sarl
pop
add
lea
sbb
test
pop
inc
das
sbb
lcall
stos
xor
test
sbb
mov
sub
jl
ds
jge
mov
sub
add
dec
xchg
add
mov
inc
xor
ret
mov
sbb
adcb
mov
cmp
mov
jno
and
adc
les
pop
add
cmpl
outsl
popa
popf
cltd
mov
dec
lahf
int3
fnsave
movsb
mov
js
loop
aad
mov
sti
and
int3
mov
jmp
pop
sbb
fidivs
pop
fcmovbe
lods
inc
adc
push
movb
insl
in
and
xor
mov
aaa
xchg
stos
sti
lds
pop
movsl
lods
cmp
daa
xchg
push
pushl
or
in
or
das
jl
sbb
xor
insb
mov
jecxz
adcl
cmpl
std
loop
mov
stos
mov
imul
cltd
stos
push
jmp
pop
cmpsb
push
jecxz
wrmsr
inc
movsl
cwtl
daa
cmp
mov
movsl
cmp
inc
frstor
call
aas
arpl
int3
test
ds
in
push
fldt
inc
mov
icebp
inc
or
push
sti
stc
roll
std
subb
fld
call
xchg
call
pop
lods
add
push
xchg
mov
mov
mov
pop
cmp
loope
jecxz
bound
jge
repnz
insb
fisttps
jne
push
push
xor
aam
test
mov
fcomps
gs
ror
sub
aam
jbe
sub
lods
std
and
iret
mov
insl
mov
js
inc
xchg
aad
push
mov
stos
je
and
orb
pop
int3
adc
pop
and
int
xchg
ret
xor
sbb
in
cmp
mov
scas
push
jno
jo
fmul
call
ss
jmp
cmp
pop
mov
dec
lahf
mov
xor
push
fidivrl
sub
or
jae
push
movsb
xchg
add
or
clc
ss
test
inc
mov
mov
jnp
pop
mov
cwtl
repnz
outsl
sbb
mov
inc
dec
adc
gs
fidivrl
dec
jle
or
jo
or
mov
xchg
xchg
sub
jmp
jp
daa
mov
xchg
cmp
ja
jbe
sbb
test
xchg
pop
movsl
fs
rolb
push
cs
xchg
ja
cmp
jmp
sar
sarb
mov
dec
daa
in
adc
inc
mov
popf
sub
xchg
cmp
dec
iret
cmpsl
push
in
add
or
push
adc
in
sbb
mov
xchg
orl
addr16
or
push
ja
mov
push
xor
pop
es
lods
leave
ljmp
mov
inc
push
and
in
std
aas
cmc
fcmovne
xchg
in
jg
add
xchg
cmp
push
xchg
push
int3
notl
das
pause
add
add
cwtl
inc
es
or
fwait
xchg
jae
sbb
push
aam
cmp
xchg
dec
mov
inc
pushf
cmc
xor
inc
clc
mov
xor
or
lods
fwait
push
out
pop
or
std
cvtps2pd
xor
mov
xlat
sbb
stc
push
rcrb
mov
bound
repnz
jp
fnstenv
mov
xchg
es
mov
adc
dec
pop
stc
mov
xchg
out
in
push
adc
adc
fiadds
scas
in
popf
push
cmp
and
daa
dec
jmp
imul
imul
mov
jge
stos
push
adc
dec
sbb
ret
call
ljmp
xor
xor
mov
ljmp
push
xchg
push
leave
out
test
sahf
inc
rcl
and
adc
lahf
scas
xchg
cwtl
rcrb
cmp
subb
rcrb
in
lret
jge
mov
jo
dec
es
test
lods
xlat
aam
rcl
push
jns
push
repz
pop
cli
aad
jnp
push
shlb
rcrl
adcl
pusha
out
imul
lret
push
stos
loope
mov
cs
lods
inc
xor
fbstp
mov
movb
mov
and
cmp
out
ds
cmp
mov
lea
push
mov
dec
xchg
pop
ret
lcall
xchg
adc
in
lret
push
daa
lahf
into
lea
push
cmp
movsl
aad
and
inc
in
paddsb
jbe
sbb
jmp
fsubl
jb
xchg
idivb
test
jnp
jae
std
jae
pop
dec
add
mov
jb
sti
iret
mov
sbb
adc
mov
ret
add
enter
fs
jno
mov
bound
inc
xor
iret
mov
ja
imul
aas
rorl
rolb
testl
sbb
adc
lods
insl
ret
sub
mov
iret
sub
das
xor
loopne
daa
sub
popa
pop
outsb
mov
loop
rol
dec
and
rcl
mov
xor
xchg
movsl
lahf
lret
imul
aam
lret
rcll
adc
icebp
enter
sbb
sbb
clc
outsb
push
sbb
push
shll
cmp
test
or
shlb
lds
es
jo
pop
lea
rcr
sbb
call
xchg
push
xor
push
dec
mov
xor
test
arpl
mov
hlt
loope
mov
sub
in
cmpsb
mov
sub
testl
xchg
subb
push
rorb
aam
and
loop
sbb
fucom
lock
fstpl
push
jmp
lahf
repnz
mov
mov
rorl
call
cltd
cmp
adc
fdivrl
xchg
xlat
lret
jb
mov
jnp
jbe
jl
mov
leave
cmpsb
or
or
push
mov
pop
decl
std
loopne
fsubrl
lods
imul
and
dec
sbb
movsb
repnz
xchg
js
movsl
outsl
cmp
jl
jne
inc
xlat
mov
testl
aas
mov
test
aas
cmpsb
aaa
xor
mov
aam
jmp
pop
mov
push
popf
dec
ret
push
lahf
add
jge
push
adc
clc
jle
leave
repz
out
std
push
sub
data16
xor
aaa
pop
cwtl
inc
enter
les
mov
movsb
dec
mov
push
mov
jnp
sti
ljmp
pusha
xchg
bound
aam
arpl
mov
and
das
pop
adc
stos
adc
bound
ds
imul
sub
cltd
xchg
dec
loope
into
pop
push
in
mov
sahf
mov
aaa
pop
out
cmpsb
or
and
popf
push
insb
pop
mov
dec
jle
lcall
loop
xor
sarl
sbb
adc
arpl
jnp
and
sub
addr16
dec
gs
adc
cmp
movsb
sbb
pop
test
stos
dec
or
movsb
xor
test
cmc
mov
pop
push
push
cwtl
sbb
push
mov
jb
dec
mov
sub
dec
dec
jge
ror
jge
arpl
push
sbbb
and
sti
xlat
out
mov
add
inc
inc
pop
jns
mov
xchg
sahf
sti
add
or
loope
fisttps
xor
inc
and
sahf
push
and
loopne
in
adc
push
pop
fbstp
mov
test
cmp
test
fmull
outsb
xchg
fisubrl
in
sbb
inc
ret
lock
lret
mov
cmc
addr16
nop
or
pop
jb
pop
aaa
arpl
les
loope,pt
sti
mov
cs
loop
push
aad
xor
adc
sbb
sub
popa
mov
mov
das
sbb
dec
lock
mov
pop
xchg
push
fs
mov
fwait
mov
sbb
pop
jp
push
lea
jecxz
rol
imul
popl
jo
jp
inc
imul
lcall
inc
mov
dec
lcall
stos
pop
hlt
in
cltd
and
movsb
insb
and
sub
mov
cwtl
clc
jmp
push
pop
test
mov
pop
fldl
dec
mov
dec
pushf
mov
ja
mov
std
int3
sbb
mov
cmp
jbe,pt
mov
stos
les
adc
xor
imul
cmovbe
shl
loope
movb
xorl
je
cmc
out
pop
movsl
movsl
cmpsb
movsb
mov
jo
or
mov
jnp
cld
inc
loop
jmp
test
xor
cmp
push
pop
ljmp
mov
insb
xchg
mov
iret
add
inc
lods
jmp
push
es
mov
fwait
jmp
dec
int3
frstor
cli
xchg
mov
rcrb
insl
pop
aad
xchg
xchg
sub
in
adc
es
rclb
out
or
rcl
gs
cmp
movsl
xchg
cli
adc
sbb
aad
fisttps
xchg
and
movb
pop
int
and
xchg
xchg
or
cmp
addl
enter
push
jmp
outsl
dec
aas
pop
aas
push
adc
jecxz
scas
sahf
xchg
xchg
cvttps2pi
std
mov
pop
cli
jnp
movsb
fwait
jb
pop
test
mov
pop
sti
xchg
test
clc
adc
mov
push
push
pop
leave
adc
out
push
es
sbb
or
dec
mov
adc
lahf
mov
addl
jns
scas
loopne
ljmp
loope
ret
xor
add
sbb
push
fisubrl
aam
test
sub
das
adc
imul
pop
and
or
push
adc
lock
cmp
movsb
inc
push
push
sbb
inc
adcb
cwtl
sbb
in
ljmp
stc
push
push
scas
loopne
clc
cmc
or
sub
mov
hlt
jns
subb
jb
aam
mov
mov
mov
fbstp
sub
jle
aas
iret
scas
iret
orl
scas
jno
popa
dec
lcall
add
push
jae
push
pop
mov
hlt
or
mov
cmp
adc
subl
data16
outsb
jnp
aas
add
mov
mov
sbb
test
xchg
xchg
dec
lret
negb
shrl
fdiv
in
mov
fs
jmp
addr16
stos
scas
js
sbb
mov
xor
cmpsl
xor
mov
mov
mov
dec
sbb
sbbl
test
ficoms
add
mov
data16
mov
or
loop
ja
push
mov
aad
mov
test
insb
push
ficoml
in
mov
rcrb
jg
outsb
dec
pop
stc
push
outsl
add
mov
or
pop
test
sti
mov
push
cmp
sub
push
sub
loopne
push
push
push
pop
fidivl
outsb
push
es
in
in
imul
repz
adc
xchg
inc
scas
pop
outsb
jmp
or
enter
inc
and
add
push
add
lods
insl
aas
ljmp
push
pop
leave
fmuls
aaa
in
sbb
loop
inc
jecxz
push
test
lcall
call
mov
pop
or
mov
dec
pop
insb
mov
ds
xor
mov
imul
outsl
push
mov
ror
stos
and
sbb
adc
repz
mov
xor
rcll
sbb
push
mov
mov
inc
nop
clc
mov
out
ret
test
push
sub
xchg
mov
xchg
and
mov
std
mov
and
loop
push
lret
add
and
push
jae
js
jo
stos
or
rorl
or
sbb
adc
repz
aaa
and
xor
idivl
jge
dec
jl
jno
sahf
stc
test
sbbl
pop
sub
insl
out
inc
aaa
pusha
mov
cltd
pop
dec
cmc
cmovae
andl
iret
test
jecxz
popf
push
or
cmp
mov
dec
sahf
sti
and
rcll
cmp
mov
xchg
inc
adc
mov
fcomps
xchg
or
outsb
int
dec
fdivl
shrb
pop
xchg
push
daa
xor
xchg
stc
sbb
lret
inc
out
adc
cltd
cmc
jp
or
dec
lahf
fbstp
xchg
xchg
lret
fcoml
inc
jo
mov
jge
cli
inc
jae
mov
pop
pop
sti
fstl
in
lret
jge
insl
jmp
fs
sbb
sti
inc
notl
lea
scas
sub
sub
mov
pop
push
and
ja
cmp
xchg
inc
in
mov
rol
push
push
sti
fdivrl
adc
cmp
inc
inc
push
pop
cli
test
sub
mov
sti
mov
and
jl
jae
jb
and
push
jecxz
lcall
bound
adc
fwait
cmpb
cmp
add
mov
lret
or
add
xchg
mov
sub
jne
imul
lods
aas
adc
jns
fistpl
lcall
cli
movsl
mov
es
sub
js
push
lock
or
pop
push
ret
add
mov
sub
in
jno
imul
hlt
push
sti
inc
or
pop
mov
pusha
add
dec
push
insl
insl
cmp
sti
xchg
pusha
mov
arpl
ljmp
sbb
les
lock
cmp
out
mov
movups
incb
push
mov
aam
mov
outsb
mov
dec
ret
or
sbb
xchg
movsl
jno
jbe
inc
cmp
mov
push
arpl
adc
clc
lds
dec
push
pop
mov
or
ljmp
pushl
push
mov
pop
jae
out
orb
stc
cmp
iret
icebp
fptan
push
mov
stc
ret
xchg
mov
bswap
mov
push
lahf
leave
ret
add
cmp
out
test
mov
iret
rcll
bound
adc
xor
pop
xchg
and
jns
pause
dec
xchg
inc
mov
imul
imul
nop
sbb
fsubl
push
xchg
lods
mov
test
js
jae
add
rorb
add
cmp
cltd
lds
xlat
mov
into
aaa
int3
sub
ljmp
mov
inc
inc
daa
fidivrs
movsl
mov
lds
fdiv
dec
pusha
cmp
xchg
mov
push
pop
sub
sbb
or
mov
add
jnp
in
mov
sbb
sub
sub
push
test
hlt
mov
sbb
out
push
add
lods
xchg
adc
cltd
cmp
aam
insb
ficomps
sub
dec
jb
push
sbb
shll
rcrb
or
or
xchg
dec
xor
mov
push
mov
jg
cmp
cwtl
inc
inc
fnstcw
imul
mull
xchg
jp
pop
outsb
mov
jp
sbb
pushf
sahf
inc
add
cld
hlt
sbbl
fnsave
push
jne
xor
dec
fs
idivl
aam
mov
jne
push
shll
push
dec
out
jne
jp
rclb
sbb
outsl
cmp
sub
pop
lds
clc
pop
pop
xchg
roll
addr16
inc
sub
add
add
cmp
jb
dec
jle
lock
mov
sbb
xor
pusha
stc
add
ja
stos
mov
mov
adc
sti
sbb
mov
inc
xchg
in
add
mov
shl
das
dec
sub
mov
movsl
pop
cwtl
imul
lcall
mov
pop
ja
das
cltd
push
or
or
stc
sarb
daa
shll
or
cmp
int
js
and
iret
sbbb
aaa
jno
mov
fiaddl
jmp
lods
push
inc
mov
ss
stc
je
mov
cmp
loopne
add
test
mov
out
pop
xor
cmpsb
rolb
sbb
call
dec
sub
js
fadds
mov
adc
pop
lret
cwtl
icebp
inc
mov
out
mov
push
pop
push
sahf
mov
iret
arpl
mov
mov
pop
add
sub
stos
jno
sub
push
lods
fwait
or
sbb
test
sub
mov
add
std
push
in
fadd
and
stos
push
fcomps
pushf
mov
cmpsb
frstor
iret
imul
push
mov
inc
or
mov
fstl
daa
sub
xor
xchg
scas
data16
stos
sahf
lret
jmp
data16
enter
adc
push
lea
ret
filds
popa
push
push
data16
inc
out
mov
jae
stc
or
jbe
push
mov
push
pusha
push
xchg
sub
aam
push
stc
cmp
enter
cld
mov
push
jno
mov
inc
or
xor
adc
cltd
in
or
push
cmpb
mov
dec
xor
inc
pushf
xor
adc
in
hlt
repz
jge
push
mov
push
and
addr16
data16
and
mov
mov
xor
cs
mov
mov
sub
add
inc
cmp
into
test
js
shrl
mov
and
in
ds
js
lods
out
shll
shrb
aaa
cli
push
and
xchg
xchg
test
push
xlat
cltd
aam
lcall
out
jbe
pop
pop
xchg
add
aam
ret
jge
add
bound
mov
xchg
jno
inc
dec
les
mov
pop
push
xchg
fidivrl
movsl
add
stc
mov
dec
mov
push
loopne
movsb
xchg
xchg
pop
lcall
arpl
adc
add
imul
jl
les
fistps
outsl
outsl
inc
inc
pop
xor
add
rcr
inc
das
iret
jnp
dec
adc
fdivrl
cmp
mov
sbb
and
popa
cli
inc
scas
cmp
movsl
popa
imul
movsb
cmpsl
outsl
popl
imul
and
es
sti
cmp
add
stc
jb
mov
sbb
cmp
mov
aad
je
cmp
ud0
mov
adc
iret
mov
addr16
and
arpl
push
in
xchg
and
adcl
dec
pop
mov
jmp
dec
jnp
cltd
gs
mov
les
or
in
addr16
mov
pop
adc
pop
and
mov
sub
out
arpl
icebp
ss
mov
lret
push
hlt
gs
movsl
xrelease
icebp
icebp
hlt
int3
int3
push
dec
int
jecxz
mov
and
out
pop
pop
ljmp
inc
mov
jns
add
pop
sub
shll
xor
fsts
sub
cmpsl
cmp
movsb
test
stc
or
jle
stos
xchg
inc
arpl
or
in
sahf
and
dec
pop
sbb
and
or
push
loopne
ljmp
mov
and
or
and
jns
iret
mov
or
jns
add
or
adc
sti
and
mov
daa
addb
test
inc
adc
iret
ss
movsl
mov
sbb
mov
repz
mov
cwtl
xor
xor
mov
stc
jmp
cmp
iret
sub
test
sub
in
aaa
mov
xchg
or
pop
add
jge
test
fisttpl
sbb
pop
push
pop
push
pop
out
das
or
push
dec
sub
sti
imul
mov
mov
test
js
sub
xorl
sub
rolb
jge
sbb
pop
mov
bound
add
mov
sbb
xor
fwait
xchg
and
or
mov
xorb
punpckhdq
cltd
movsb
insl
and
pop
mov
cltd
std
mov
push
mov
cmp
sub
mov
fldcw
filds
xor
adc
dec
fcomps
test
xchg
pop
inc
fbstp
and
cmp
jae
push
xchg
xchg
cmp
in
sbb
ficomps
xchg
iret
push
mov
adc
fyl2xp1
sbb
adc
jns
or
lods
lret
mov
jl
push
daa
jb
mov
movsl
adc
push
sub
ss
mov
fmul
sub
movsb
movsb
mov
shlb
sub
and
push
loop
mov
dec
leave
push
sub
cmpsb
loop
ret
inc
sarb
inc
or
fiadds
push
repnz
sbb
testl
push
pusha
in
push
pop
inc
ret
push
outsb
fisttpll
or
out
pandn
call
mov
pop
lcall
cmp
dec
xor
insb
add
mov
add
mov
cmp
jecxz
aam
rcrb
mov
test
sbb
bound
nop
addr16
jg
jns
arpl
xorb
lea
add
mov
inc
xchg
subb
lret
fimull
inc
pop
cmpsl
xchg
inc
mov
test
paddsw
jne
scas
call
mov
push
cmp
or
hlt
push
test
mov
jmp
shlb
lcall
xor
inc
xor
fidivrs
mov
shufps
outsl
cli
fs
fs
xchg
gs
inc
lock
sbb
js
lds
testl
repnz
sub
add
int
xor
mov
sbb
jg
xchg
int3
pop
mov
cmp
lret
push
mov
aad
test
sbb
popa
xchg
dec
scas
and
test
xlat
stc
or
mov
xchg
scas
aad
cmp
cmpsb
sub
mov
xor
aam
xor
test
jg
cmp
dec
and
fstl
push
jp
les
mov
icebp
leave
stos
cli
and
jae
mov
push
jg
test
mov
imul
mov
xor
cmpsb
dec
and
dec
jecxz
mov
call
pushf
xchg
pop
test
ljmp
rolb
es
std
add
inc
addr16
adc
pusha
ja
push
clc
mov
fsubrl
jae
mov
push
jnp
jne
in
mov
inc
and
add
stos
adc
pop
inc
sbb
xor
pusha
cmp
movsb
mov
hlt
cli
arpl
or
pop
xchg
inc
loop
or
push
aaa
cmp
xor
mov
fadds
rorl
add
lock
push
int3
negb
cmp
addr16
pop
mov
fildll
mov
clc
insb
or
pop
push
aam
jne
adc
rcrb
stc
mov
inc
roll
sub
cli
cmp
test
and
mov
dec
movsb
sub
ja
sub
adc
mov
fcom
xor
cmpsb
test
adc
pop
mov
pop
cltd
rclb
lods
test
dec
pushl
mov
jno
and
es
stc
jb
cwtl
lret
mov
add
je
aas
push
sbb
inc
inc
insl
out
imul
je
out
xor
sub
push
les
decb
lahf
int
jg
and
mov
xchg
dec
cltd
imul
or
loop
add
ret
mov
pushf
cltd
inc
aam
mov
jb
inc
mov
and
sbb
neg
andl
push
test
or
xchg
jbe
push
mov
cli
outsb
stos
and
push
aaa
inc
aaa
sbb
cmpsb
mov
mov
jae
stc
gs
pop
andb
xchg
sub
in
sbb
mov
lea
cmp
ss
cld
sbb
mov
pop
clc
xchg
data16
sbb
pop
push
jbe
in
sbb
cmp
xchg
mov
inc
mov
nop
ljmp
and
rolb
push
xor
mov
sarb
xchg
ja
popa
js
jecxz
mov
adcb
das
lods
cli
inc
inc
jbe
fsubrl
xchg
mov
cmp
push
addr16
nop
xor
pop
nop
or
dec
lods
pop
pop
das
popa
scas
loop
loope
out
xchg
mov
loop
jecxz
mov
pop
mov
cmp
lods
xor
add
insb
cmp
jb
call
mov
imul
mov
cmpsb
push
jecxz
shrl
lock
loopne
sub
mov
int
dec
mov
pop
and
out
cmp
push
adc
push
fsubl
fsts
int3
inc
xchg
push
xlat
out
daa
lods
jns
rclb
lret
or
repnz
inc
cmc
xchg
xchg
and
imull
adcb
or
or
pop
jecxz
jecxz
lock
xor
aam
xlat
lea
xor
jp
push
inc
out
nop
push
jne
dec
inc
inc
push
lods
aad
fcomps
sub
dec
int3
and
imul
ret
pop
incb
cmp
insb
mov
lds
test
les
outsl
fisubs
es
stos
stc
push
pop
arpl
push
rcrl
or
popa
fnstcw
jp
pusha
inc
push
xchg
dec
ret
fwait
pop
loopne
sahf
test
popa
cltd
subb
fsubrp
xchg
jb
lods
pop
mov
push
xchg
dec
call
adc
sti
adc
add
je
subb
addl
scas
rclb
fwait
enter
popf
sar
test
sbb
xor
mov
fmuls
push
in
pusha
lods
mov
add
xchg
test
cmp
subb
call
add
aam
sub
adc
lret
pop
xor
lods
in
fidivl
push
dec
sub
call
sbb
or
push
data16
hlt
dec
je
add
rcll
xchg
aad
sbbb
lods
arpl
mov
aad
sub
mov
jno
mov
sahf
shll
jp
jno
pop
lcall
jl
xor
cmpsl
fucomip
ja
adc
fisttps
gs
daa
jae
dec
sub
out
pop
sbbb
in
cwtl
xchg
mov
mov
push
mov
dec
fwait
repnz
sub
bnd
imul
sub
xchg
add
ja
sub
add
out
sbbb
or
sub
rclb
adc
mov
rcrl
fwait
lds
and
movsl
out
cmpsb
movsl
mov
pop
mov
xor
dec
push
sbb
loopne
cmp
sahf
clc
push
faddp
jbe
push
les
or
stos
and
andl
std
mov
xchg
pop
insb
jecxz
mov
dec
stc
pop
pop
adc
push
addb
aas
loop
lds
movsl
push
ljmp
test
push
adc
nop
mov
fs
sub
scas
jecxz
and
xchg
adc
repz
and
call
sbb
push
test
fidivrs
inc
mov
aaa
xchg
pop
push
stos
sub
mov
xchg
xchg
cvttps2pi
inc
inc
or
lds
xchg
sub
movntps
arpl
push
push
xor
in
mov
xor
mov
shll
or
cmp
pop
jecxz
pop
aaa
xchg
add
stos
sub
dec
sub
addr16
outsl
lret
es
jp
lods
sub
pop
pusha
sub
out
sbb
insb
inc
loope
xchg
out
scas
or
inc
pop
sub
sub
push
jno
dec
inc
add
mov
cld
mov
bound
or
mov
nop
fmuls
push
or
pop
sbb
mov
adc
sti
sbb
cli
adc
testl
sbb
adc
cli
cwtl
in
xor
in
dec
add
jg
incb
mov
mov
mov
cs
popa
aaa
pop
movsl
xchg
sub
movsb
sti
ja
pushf
sub
lock
or
jp
icebp
sbb
pop
mov
enter
or
push
inc
icebp
jmp
inc
push
lcall
mov
mov
pop
pop
cmp
jle
sbb
mov
es
mov
push
faddl
jecxz
movsb
pop
mov
repnz
pushf
mov
fdivrl
lods
xchg
out
xchg
push
dec
mov
and
sub
adc
cmp
test
mov
jmp
mov
fstpt
xchg
adc
aad
pop
aam
push
adc
aaa
pop
idivb
push
lahf
inc
lods
and
scas
cmpsb
add
lahf
arpl
lods
jp
jp
adc
rcll
cmp
inc
push
lods
mov
jnp
pop
or
loop
bound
aas
sbb
ja
jnp
pop
std
jmp
lahf
sahf
and
pusha
movsb
fisubl
dec
fiaddl
test
iret
cmp
and
lret
sub
xchg
in
test
xor
or
and
sbb
call
fwait
cmp
xchg
cmp
cmp
sahf
dec
leave
insl
or
pop
pop
mov
call
enter
adc
es
jle
pop
pop
jbe
sbb
pop
push
mov
rcr
pop
cmp
jl
popa
sti
xchg
sub
jo
jecxz
pop
or
pop
decb
imul
lds
sub
iret
pop
jmp
fcomps
jle
imul
jnp
iret
or
push
or
dec
dec
mov
testl
mov
pop
stos
xchg
adc
shll
lret
lds
ss
jl
and
mov
scas
negb
adc
movb
xchg
inc
xlat
cmp
push
aam
inc
pusha
pop
jo
jb
fsubrs
rcrb
sbb
or
jp
push
sbb
roll
adc
or
and
std
xchg
int3
pop
sub
dec
repnz
xor
pop
pusha
jp
ja
aad
push
das
and
fisttpl
cmp
sbb
fisubs
scas
push
lret
add
inc
insl
xchg
push
frstor
out
dec
cmpsl
imul
bound
test
pop
leave
mov
pop
ja
aam
fnstenv
push
pop
mov
imul
mov
stos
mov
push
cmpsb
xor
cwtl
adc
fnsave
int3
cmp
push
fwait
cmc
jmp
jnp
addl
fwait
dec
mov
push
imul
xchg
dec
jne
icebp
pop
daa
push
incl
rcrl
mov
out
lret
jno
out
jl
scas
insl
outsl
xlat
cmp
adc
aad
insb
adc
cli
mov
stos
leave
xor
mov
fxam
inc
or
pop
inc
andps
xchg
jb
mov
popf
rolb
outsb
cmpsl
inc
mov
mov
or
or
mov
or
push
jns
add
sbb
and
add
aam
vfnmsub231ps
mov
repz
mov
lret
add
inc
mov
xor
je
scas
rcrl
push
jg
xchg
aaa
repnz
cltd
sbb
imul
lcall
xchg
dec
shlb
inc
pop
lock
jbe
gs
adc
imul
xchg
pop
jg
push
movsl
jl
outsl
mov
and
mov
leave
add
sbb
les
imul
cwtl
sbb
push
popf
mov
adc
mov
dec
imulb
adc
push
jg
test
sbb
ljmp
lahf
std
aad
push
in
rcll
mov
add
ds
xchg
and
add
add
adc
test
out
aaa
push
repz
pop
fcoml
cmp
aad
frstor
pop
hlt
mov
mov
push
or
testb
inc
or
inc
mov
mov
mov
add
xor
punpckhwd
adc
aam
push
push
add
or
test
jecxz
adc
popa
and
push
popa
dec
mov
xchg
adc
or
lea
shll
mov
incb
xor
sti
or
scas
mov
mov
mov
adc
dec
dec
and
outsb
or
inc
push
inc
pop
inc
pop
mov
mov
xchg
out
xor
loope
call
jbe
dec
push
mov
lods
sbb
adc
les
mov
push
lret
ret
xchg
cmp
out
imul
loope
mov
add
mov
lds
xor
test
cli
mov
mov
das
jb
dec
push
icebp
mov
test
fwait
xor
cwtl
movsb
sbb
xor
pop
cmp
jg
and
in
into
inc
lods
cmpsb
scas
jge
push
ss
jl
push
inc
cli
jbe
add
jge
enter
pop
sbb
jbe
pop
fxch
inc
arpl
sbb
mov
movsb
aaa
cmpsl
jo
jbe
int3
inc
jo
cmp
xchg
out
ja
cmc
stos
ficoml
scas
xor
cld
stos
test
and
pop
add
mov
fwait
int3
pop
pusha
orb
add
inc
xchg
cltd
sub
jae
fldl
es
bound
imul
jmp
xchg
xor
cmp
jp
cmp
jb
into
and
and
insl
ljmp
std
adc
adc
or
hlt
lods
sbb
pushl
xchg
sub
daa
ljmp
mov
mov
xchg
repz
push
std
dec
xor
push
push
ret
push
add
pop
push
cmp
mov
ja
sarb
ss
adc
clc
jle
pop
add
ret
adc
sbb
cmp
inc
arpl
mov
aas
mov
sub
es
aas
rolb
lea
push
orb
jbe
xchg
dec
cld
push
in
push
ljmp
cwtl
add
xor
jl
and
jg
aam
add
xchg
xor
call
popf
jae
push
cwtl
insb
je
pop
lcall
jnp
loop,pn
test
adc
mov
xorl
or
mov
jl
mov
leave
lods
loop
in
lods
push
loopne
and
sbb
shll
xchg
and
pop
ja
inc
or
movsl
and
xchg
mov
jmp
sub
xchg
mov
jge
pop
sub
and
clc
fstps
ja
sbb
ret
sahf
push
inc
addl
and
ja
or
les
shrb
out
outsl
sub
inc
inc
dec
cmc
adc
clc
rorb
jmp
sbbl
fistps
ljmp
and
jecxz
mov
rorl
fadd
xchg
fs
mov
out
cld
add
or
sub
sbb
sub
jle
or
popa
lret
aas
sub
jnp
imul
mov
or
add
inc
jbe
int
stos
test
jae
shrl
je
add
or
xor
in
lds
clc
cmp
outsb
gs
mov
fbstp
dec
push
and
push
mov
mov
imul
pop
aad
xor
or
mov
cmp
jecxz
push
mov
pop
fsubrs
inc
mov
jbe
cmp
out
pop
aad
iret
pushf
inc
aam
sub
sub
or
sbb
ss
sbb
push
int
cmp
xor
cmp
or
daa
mov
sub
mov
pop
mov
sub
or
scas
mov
test
push
frstor
rolb
int
std
movsb
cs
push
mov
inc
dec
push
add
lret
add
add
aad
repnz
cmp
cmc
cmpsb
mov
pop
shrb
inc
enter
lea
dec
dec
je
xlat
ljmp
push
adc
cmc
inc
test
fiadds
dec
stc
dec
add
rolb
sarl
adc
jne
pop
stc
iret
cmovno
data16
dec
xor
or
dec
jae
int3
test
ja
inc
xor
imul
pusha
mov
xchg
popa
sub
or
jl
aad
test
sbb
push
lret
bound
pop
adc
cmp
inc
mov
jne
mov
sbb
mov
sbb
jbe
lea
rcr
fstpl
cs
mov
push
sbbl
rol
adc
push
movsb
test
add
adc
mov
cmp
mov
jo
addr16
sub
dec
add
mov
pop
arpl
inc
mov
sbb
push
pop
jp
jo
push
add
push
loope
imul
or
mov
cmp
test
fstps
mov
testl
add
outsl
and
outsl
lea
out
add
xchg
lock
xchg
fstpt
popf
mov
bound
inc
lods
pop
dec
pop
bound
insb
int3
xor
adc
incl
pop
adc
mov
int3
mov
and
mov
mov
pop
ret
push
jo
iret
fnstcw
mov
add
pop
scas
es
mov
xchg
or
rol
lds
jns
pop
inc
and
push
testl
push
xor
cmp
push
mov
pop
out
xchg
xchg
xlat
es
mov
jl
sbb
or
decl
insl
leave
xlat
sahf
jb
scas
jmp
dec
push
jo
jnp
push
cmp
push
test
fwait
adc
lods
icebp
ficompl
cmp
outsb
jp
jle,pt
dec
stos
imul
jo
xchg
sbbl
fs
jae
add
aam
cmp
mov
dec
test
nop
dec
xchg
mov
test
into
in
test
mov
dec
fidivrs
cmc
je
loopne
push
das
add
cli
movsl
mov
xchg
loop
adc
dec
movb
jle
aam
mov
push
cltd
jne
popa
fdivrl
es
icebp
pop
fsubrl
cmc
aaa
das
cmpsl
adc
outsb
icebp
hlt
shl
cmpsb
packuswb
testb
xchg
fisubrs
push
jno
inc
inc
push
inc
gs
lods
jp
sahf
or
push
aam
subb
jno
cs
xor
jnp
rcrb
ljmp
out
ja
pushf
cltd
and
mov
mov
test
or
jmp
dec
adc
lret
mov
adc
or
das
movsb
jno
fnstenv
fidivrs
sub
xchg
ds
sbb
xor
les
ret
sahf
or
push
adc
fidivrl
lods
cmp
out
adc
stos
cmp
imul
stos
fscale
fisubs
and
jb
mov
push
or
out
das
shrl
out
push
cmp
cmp
fwait
mov
sbb
orb
mov
lea
mov
or
shlb
push
and
jns
add
rolb
push
sbbl
pushf
fstl
rcr
mov
push
push
or
lock
add
sub
xchg
push
push
bound
adc
sarb
sub
xor
pop
xor
adc
subl
or
mov
jne
xor
mulb
jle
js
cltd
outsl
jmp
ja
push
adc
mov
loopne
mov
and
push
sbb
pop
lds
push
sub
adc
mov
sbb
stos
es
es
or
push
bound
sar
test
xchg
das
or
jmp
cmp
fdivs
and
adc
mov
pop
js
imul
xchg
fsubl
fsub
loop
stos
jne
xchg
adc
pop
add
in
inc
outsl
rcrb
fcmovnu
cs
dec
jno
cli
dec
data16
adcl
mov
shll
jb
lahf
sub
jns
or
pop
mov
push
fcomp
enter
cli
xchg
cld
or
jne
and
filds
push
or
or
rcr
out
movl
mov
mov
in
jns
faddl
ror
jle
imul
jbe
jg
mov
add
mov
cmp
stc
call
jle
push
pusha
add
cmp
cwtl
ljmp
sbb
mov
andb
sti
sub
cmp
cld
pop
insl
aas
fidivrl
mov
push
xchg
aaa
xchg
and
arpl
push
jl
jge
xchg
repnz
cld
std
sbb
and
push
cmpsb
sarl
jo
push
cwtl
push
adc
outsb
fldt
mov
inc
xchg
jae
lock
cmpsl
mov
test
push
loop
or
lock
cld
mov
dec
cmp
call
mov
dec
mov
ljmp
pop
jnp
push
jbe
cli
inc
xchg
lds
inc
push
adcb
mov
cmp
lods
mov
push
inc
into
out
xchg
inc
jp,pt
data16
xlat
sti
xchg
scas
xor
sti
outsb
mov
and
movsl
adc
jo
cmp
jle
sub
clc
inc
and
roll
fst
imul
sbb
mov
repnz
mov
sbb
xor
jnp
jb
mov
lea
nop
dec
mov
cmpb
xchg
inc
and
fs
mov
leave
jecxz
roll
jns
xchg
ss
lock
es
add
in
fwait
sub
lret
sbb
jne
xchg
push
out
jecxz
fcoms
mov
jp
cmp
imul
in
cmp
mov
push
cmp
push
push
rcll
push
add
arpl
imul
cmpsl
cli
int
addl
xchg
jle,pn
or
aas
cmp
lret
lret
arpl
leave
adc
call
in
in
in
mov
dec
mov
test
shl
in
popa
movsl
fcmovb
daa
jmp
sub
lret
js
xor
rolb
shlb
into
stos
inc
pop
push
fnclex
out
lret
sub
outsl
cmp
or
insb
pop
pop
add
sti
push
mov
rcll
aas
outsb
add
inc
mov
movsb
popf
pop
dec
sub
sbb
sti
cltd
cmpsb
lret
mov
daa
insl
insb
cmpsb
xchg
xor
jns
cltd
cmpsb
addl
or
aas
rcrl
mov
popf
mov
ret
mov
pusha
js
fistpll
adc
cmp
push
sub
pop
cmp
lods
repz
in
jp
mov
pushf
xorb
pop
mov
push
repnz
repz
mov
xchg
movb
xchg
mov
cmp
or
ljmp
cwtl
cmpsl
xchg
pop
add
lock
and
inc
rclb
andl
not
fwait
dec
into
cmpb
out
cmp
rorb
jbe
iret
pop
and
pop
mov
lahf
xor
popf
or
and
mov
inc
mov
mov
out
pushf
push
sbb
mov
jae
jo
aad
cs
mov
inc
imul
inc
lcall
es
mov
shlb
lea
fcomps
les
jge
push
adc
stos
jnp
mov
pop
ljmp
jbe
aaa
jb
pop
repz
mov
in
hlt
call
rclb
lds
cli
add
loopne
cmp
js
leave
loop
in
mov
mov
sahf
push
jns
incl
sbb
jo
cld
mov
aad
xor
bound
sbb
orb
stos
cmp
jbe
mov
int
mov
push
shl
dec
mov
push
jecxz
pop
imul
sahf
push
cmc
sub
mov
jmp
loopne
cmpsl
inc
xor
inc
imul
das
xor
push
sbb
std
or
push
sub
es
and
std
jnp
pop
fnstcw
sbbl
stos
or
call
mov
pushf
sub
sub
mov
clc
and
pop
fidivl
pop
xor
out
fistps
xchg
cs
cmp
pop
movsl
outsb
bound
pop
je
cmp
mov
nopl
shrl
aas
mov
aaa
sbb
adc
pushf
dec
jp
xor
lds
imul
add
jne
jmp
mov
rolb
mov
bound
jo
dec
bound
movsl
jno
mov
or
mov
inc
cmc
mov
fucomip
mov
ja
xchg
and
lret
outsl
xor
ret
loope
lret
pop
ret
push
cmp
daa
mov
in
sub
or
ds
add
incl
xchg
sbb
mov
mov
jge
dec
pusha
dec
lods
movsb
fmulp
xchg
jge
nop
negb
popa
add
cwtl
imul
test
pushf
and
add
jb
xchg
jb
cltd
sbb
addr16
adc
adc
call
insl
mov
testl
enter
sarl
xchg
add
test
pop
push
xlat
and
int3
sbb
ljmp
orb
xor
cmp
sub
mov
out
mov
cmp
lods
aam
mov
xchg
push
fnstenv
mov
xor
mov
outsb
jp
movsb
mov
sub
lret
cmp
sbb
cmp
or
mov
adc
dec
rcrl
push
adc
inc
out
cmpb
dec
inc
neg
jp
mov
ret
add
pop
adc
js
xchg
xor
sub
inc
xor
xchg
dec
pop
insl
aas
fisubl
cmp
adc
inc
adc
pop
mov
add
jg
scas
add
decb
inc
insb
xchg
mov
pop
xchg
clc
add
cltd
xchg
ss
push
popf
jge
pop
gs
fidivs
or
fmuls
lods
sub
repnz
xlat
pop
cmpsb
out
push
sbb
sub
jno
cmp
cmp
xchg
cmp
or
xchg
cmp
push
cld
add
jns
pop
jmp
push
incl
enter
or
loopne
jl
xlat
pop
pop
and
testl
push
push
lcall
mov
jg
lret
pusha
das
mov
mov
sbb
outsl
das
pop
leave
mov
arpl
mov
les
fstpl
loop
stc
test
sub
out
push
stos
outsl
push
lds
add
rcrl
cltd
jnp
lds
aas
dec
cmp
andl
dec
dec
jle
sub
mov
aas
stos
cmp
pop
xorl
std
lods
aas
xor
push
mov
mov
mov
in
and
jbe
shlb
push
cmc
pop
mov
inc
jl
or
xchg
sbb
cmp
int3
xor
insb
pop
fimull
sbb
adc
into
jecxz
arpl
fimull
adc
jns
sarl
xlat
stc
test
or
aam
es
cmpsl
sbb
lea
push
aaa
dec
push
mov
lcall
pop
imul
int3
xchg
in
setbe
stos
in
stc
pop
fs
insb
outsl
jge
call
jno
bound
cmp
mov
sbb
incl
sbb
cmpsb
push
mov
jb
repnz
xchg
std
jp
push
dec
xchg
aam
insl
xchg
xchg
add
dec
imul
ret
jg
pop
xor
jg
out
or
stos
pop
sti
fs
xchg
sub
add
lods
xor
test
std
pop
push
in
sbb
adc
pop
lods
test
cmpb
xor
std
pusha
cld
sti
stos
push
pushf
push
cltd
xor
mov
sub
icebp
stc
les
shll
or
mov
stos
xor
idiv
xor
push
fwait
mov
dec
mulb
cmpsb
sbb
dec
jmp
mov
or
add
call
jo
inc
out
mov
xor
cmc
outsl
in
icebp
sbb
adc
jns
xor
in
mov
mov
jne
jb
shl
jmp
pop
inc
mov
aaa
add
push
pop
mov
sub
hlt
stc
clc
sbb
ret
imul
mov
dec
inc
ljmp
mov
out
loope
cmp
outsl
popf
cmc
aam
xchg
push
loopne
fimull
iret
mov
sahf
outsb
xchg
decl
pop
sbb
gs
lods
aas
pop
popa
or
les
jne
mov
jmp
imul
cmp
popa
push
ficoml
gs
fsubrl
popf
lret
mov
jl
mov
xchg
mov
mov
mov
mov
mov
aaa
imul
mov
hlt
mov
pop
xor
outsb
shlb
out
adc
push
outsl
fdivs
sti
lods
mov
insl
cmp
jle
mov
hlt
int
xor
sub
outsb
and
lock
orb
xchg
mov
popa
xchg
mov
mov
pop
sub
inc
cmp
pop
repz
repz
mov
jno,pn
sbbl
fadds
mov
shl
jl
clc
sbb
in
xchg
arpl
aas
in
inc
mov
dec
cmc
out
iret
jnp
movsb
dec
inc
mov
in
test
xor
lods
and
inc
pop
xchg
mov
inc
dec
pop
hlt
mov
mov
jne
mov
pop
and
int
icebp
imul
dec
fildl
and
aaa
daa
lret
sub
movsl
pop
inc
xor
and
xor
jecxz
mov
out
rcll
fmull
push
sti
push
xchg
jno
aas
and
out
cmpl
push
jns
add
jae
sbb
popl
movb
int
mov
xchg
dec
sub
outsl
xlat
fisttpll
pop
mov
into
gs
lret
push
and
int
inc
aam
imul
fld
and
mov
imul
mov
into
dec
xchg
fcompl
and
fsts
lods
cmp
adc
push
xchg
and
sbb
loopne
sbb
pop
adc
aad
outsb
lret
loope
pop
jg
pop
int3
movl
and
cs
in
fisttpll
ja
addl
movsl
sbb
xor
dec
stos
cs
pop
adc
or
les
inc
lahf
mov
ficompl
push
js
cmp
nop
pop
in
adc
pushf
test
xchg
pop
push
push
dec
lods
stos
or
xchg
fwait
movntq
out
xchg
and
mov
loop
jne
pop
ret
insl
aad
jo
das
push
adc
ficoml
mov
dec
loopne
sbb
js
clc
out
cmp
std
jg
fnstenv
bound
sbb
mov
fstpt
or
pop
scas
movsl
shll
loopne
int3
and
jb
roll
aad
or
cmpsl
fs
es
in
xor
and
mov
or
and
lret
leave
cmp
jmp
inc
dec
and
push
jmp
addr16
dec
add
out
lods
adc
pop
movsl
outsl
decb
push
adc
or
lock
hlt
or
jge
push
jae
pop
test
adc
es
lret
jne
insb
mov
dec
add
and
pop
pop
idivl
dec
xchg
and
testl
push
int
push
fimuls
dec
je
mov
pop
jnp
std
inc
xor
pop
mov
push
add
movsl
rcll
jg
xor
sbb
outsl
push
pop
mov
mov
xchg
cmp
mov
xchg
sbb
mov
popf
cltd
ljmp
mov
cwtl
pop
mov
aad
pushf
sub
xchg
or
sub
cmpsb
fcoml
or
xchg
dec
push
dec
and
push
push
incl
pop
push
daa
mov
push
mov
into
cmc
xchg
sbb
xor
xlat
mov
sub
into
mov
adc
cmp
sbb
imul
cwtl
add
lcall
dec
xchg
fstpt
dec
sub
je
idiv
or
lods
fists
pop
adc
sbb
int
bound
or
mov
cmp
add
mov
idivb
inc
adc
mov
lret
inc
arpl
dec
hlt
iret
mov
adc
cmpsb
in
fisttpll
mov
aas
mov
dec
mov
ljmp
cmp
push
sub
add
push
cmp
xchg
stc
inc
pop
sbb
adc
ret
imul
lahf
nop
pop
add
test
sbb
and
ss
mov
mov
push
jb
xchg
and
repz
loop
in
dec
movsb
dec
and
ror
cmpsl
loope
int3
movsb
ljmp
out
adc
cmpsl
push
sub
mov
enter
xor
hlt
push
mov
mov
data16
fistpll
aam
mov
lea
imul
mov
ljmp
mov
mov
in
cmp
in
aas
sub
sub
les
or
pop
outsb
push
mov
lods
repz
lahf
xor
test
je
lret
call
lds
adc
repnz
pop
and
cmp
dec
lods
inc
mov
mov
dec
testb
mov
jp
lods
jae
testb
mov
cmpsl
loop
sub
jmp
div
out
out
movb
ret
jmp
pushf
add
rorl
aaa
ljmp
xor
ljmp
pop
mov
jle
jne
loopne
mov
ljmp
loope
pop
in
iret
cltd
xor
int3
lods
cwtl
leave
mov
pop
cli
clc
loopne
mov
jns
jg
inc
fs
pop
mov
and
jns
ss
imul
aaa
test
sub
stc
repz
decl
hlt
push
gs
sbb
in
sbb
shrb
jle
cli
and
sbb
in
sub
cmp
mov
out
mull
pop
in
jno
leave
movsl
mov
mov
sub
xor
js
cltd
out
lods
call
or
push
sub
sahf
mov
xor
push
cmp
or
bnd
xorl
les
xchg
xchg
xchg
mov
test
push
mov
aam
xor
and
pop
dec
ret
lret
out
movsl
fmull
test
outsb
aaa
sti
pop
xchg
push
xlat
test
mov
in
aas
sub
and
in
pop
enter
xchg
adc
sahf
cmp
push
xor
shlb
xchg
jl
repnz
sub
cmp
imul
jp
jns
aad
fbld
insl
sbb
mov
cli
push
cld
test
mov
fsubrp
inc
mov
loopne
push
adc
ds
pop
add
xor
dec
data16
or
fucomi
jl
test
jne
lods
inc
push
adc
pop
adc
aas
pop
mov
js
adc
loopne
loope
adc
ret
mov
lods
sub
mov
cli
fcomp
mov
lods
push
push
test
sti
cmp
cmpb
xchg
mov
jg
aaa
xchg
push
aad
pop
jnp
inc
outsl
pusha
mov
outsl
add
in
out
jb
shlb
ljmp
mov
mov
data16
bswap
adc
imul
mov
sbb
mov
mov
jo
push
mov
negl
xchg
ds
or
jbe
dec
scas
push
pop
or
sub
adc
or
push
inc
addr16
lret
push
sub
gs
icebp
add
aad
sub
jbe
call
mov
jmp
pop
fdivl
or
rorb
or
dec
sbb
jne
pop
push
mov
pop
pushf
loop
les
mov
icebp
sub
add
adc
mov
hlt
add
cmp
xlat
je
in
lret
fildl
add
sahf
mov
andl
lods
mov
lahf
aad
push
inc
popf
push
fidivrs
aaa
rol
sahf
push
push
sub
loop
das
pop
in
jl
int
jecxz
jle
hlt
stc
les
and
pop
loope
mov
fwait
in
mov
xchg
pop
pushf
scas
psubusw
push
and
inc
ficompl
sti
mov
pop
inc
sub
cli
sbb
in
xchg
push
jg
int3
pusha
sti
sbbb
sbbl
mov
cmp
push
inc
sbb
push
inc
cwtl
pop
test
pop
push
xchg
sbb
insl
imul
lds
push
dec
or
jb
dec
adc
mov
dec
or
fnstenv
test
insb
xor
xchg
push
aad
sbb
push
shll
xchg
les
mov
xchg
push
push
loope
mov
out
movb
test
push
and
add
int
sbb
addr16
sbb
and
push
push
out
mov
and
add
in
jg
faddp
add
pushf
pop
aas
xor
jp,pt
sahf
mov
mov
repz
mov
sub
or
cmc
loop
jo
push
adc
insl
aas
and
outsl
add
cmp
lret
mov
mov
repnz
test
rolb
aaa
cld
stos
out
pop
mov
add
scas
orb
fistpl
dec
cmp
aas
jno
test
push
test
add
adc
push
fwait
ss
lock
or
mov
ret
mov
mov
and
pop
call
inc
std
aas
pop
fwait
aam
rclb
xchg
xchg
cmp
dec
jns
mov
lret
push
mov
rol
jmp
lock
pop
mov
push
sub
jmp
push
test
rolb
xchg
dec
pop
lea
ret
aas
lods
lods
jg
testb
outsb
shrl
mov
push
sbb
sub
fcmovnu
sub
arpl
es
stos
push
xchg
or
push
lcall
dec
not
inc
add
stos
inc
jns
enter
and
sbb
fdivrs
push
lahf
add
sub
xor
inc
xchg
les
in
test
addb
xchg
adc
outsb
pop
outsb
xchg
add
xchg
loop
fisubrl
sub
cwtl
testl
outsb
stos
add
and
loope
xlat
and
jno
scas
inc
pop
sti
into
inc
push
js
jp
fdivs
jnp
xchg
dec
jns
jo
sbb
and
imul
sahf
mov
jns
pusha
jge
cmp
test
jno
je
les
popl
ss
mov
push
pop
lods
xchg
or
jl
add
push
cmpsl
je
imul
pop
popa
push
fmulp
add
xor
sub
into
or
aaa
mov
addl
xlat
out
sub
in
int
scas
out
mov
fiadds
cmpsb
aam
out
fldcw
mov
mov
dec
or
sbb
mov
movntps
xlat
mov
pop
ss
ljmp
push
push
dec
dec
jmp
daa
loop
insl
fiadds
mov
ret
imul
jns
clc
mov
and
lock
mov
push
sub
dec
inc
ret
dec
push
jnp
jae
mov
sbb
jo
add
cli
popf
je
mov
lcall
arpl
sbb
mov
xchg
sbb
iret
nop
xchg
ret
mov
adc
push
mov
xchg
mov
jl
jno
gs
pop
flds
dec
dec
ja
mov
bound
es
shll
push
gs
push
push
in
dec
addr16
mov
and
pop
es
enter
jb
dec
sbb
andb
icebp
adc
xchg
xchg
popa
mov
cmc
cwtl
shrb
cmp
jge
das
in
scas
out
jae
sub
mov
lcall
scas
xor
daa
mov
jge
sbb
or
cs
mov
enter
or
dec
dec
pop
insl
mov
testb
push
pop
jae
rcl
je
mov
dec
push
in
dec
inc
xor
mov
jg
aaa
mov
mov
subl
cmp
push
sbb
rorb
pop
and
fs
out
adc
or
inc
nop
aam
push
sbb
nop
xlat
test
jp
sbb
clc
andl
xor
sti
clc
xor
stos
sbb
outsb
cmp
cli
xchg
popf
mov
pop
es
mov
das
pop
mov
cli
jg
andl
sub
xrelease
imul
and
movsl
js
xor
mov
roll
mov
adc
mov
stos
cmp
dec
stos
sysexit
ja
push
cltd
je
jp
push
sahf
sub
mov
cmc
jns
mov
cmpsl
cmp
mov
mov
gs
mov
stos
xchg
sar
ss
lahf
mov
mov
roll
adc
jmp
out
sbb
lea
sti
mov
jbe
movsb
jb
dec
or
lahf
push
mov
xor
mov
into
jmp
popa
add
cmpsl
sub
daa
mov
rcrl
outsl
push
push
jmp
dec
dec
pop
dec
dec
dec
or
sub
inc
push
mov
test
dec
pop
mov
push
and
cmp
cmovns
push
xchg
lods
cmc
insl
fcomps
or
dec
add
pop
loopne
in
push
cmp
repz
repnz
flds
retw
test
xchg
inc
push
lret
jne
jno
and
sub
mov
loop
js
add
jb
jge
pop
shll
out
jo
shrb
aas
inc
xchg
test
out
dec
lock
xchg
insb
xor
dec
pop
je
rol
cli
sbb
aas
mov
loope
sbb
lods
xor
adc
iret
pushf
mov
push
pop
adc
lods
jmp
mov
pop
mov
xchg
subb
test
adc
xchg
and
ja
popa
decl
cmp
mov
adc
push
test
mov
xor
ss
ret
mov
jmp
sbb
aaa
shl
mov
daa
mov
jg
les
cli
mov
pop
cmp
xchg
scas
xchg
inc
pop
mov
test
test
sbb
xor
mov
mov
int3
fcompl
xchg
jo
popa
jecxz
arpl
push
mov
nop
aaa
xchg
dec
pop
sub
subl
rcr
jno
push
jge
mov
sbb
cwtl
mov
sbb
add
xlat
push
jbe
push
jne
mov
movsl
addr16
mov
and
pop
jp
adc
popa
pop
xor
xchg
adc
mov
xorb
mov
or
push
jbe
fstps
push
xchg
loopne
and
icebp
sahf
push
test
mov
cltd
or
mov
xchg
push
fimuls
pop
dec
cmp
mov
rolb
cli
sti
jmp
jns
or
mov
pop
outsl
sub
fcmovne
lods
pop
inc
push
or
add
call
pushf
or
mov
mov
cmp
jl
pop
dec
out
pop
xchg
jns
cmp
push
outsl
push
cli
les
cltd
jle
and
aad
loope
ja
into
push
fdivr
jle
push
or
dec
or
in
cmp
add
jg
rcrb
hlt
mov
in
loope
fistl
sbb
pop
sub
fisubl
clc
data16
or
mov
ds
arpl
inc
stos
mov
movsl
mov
add
cmp
jecxz
loopne
xor
lods
push
or
mov
mov
push
adc
popl
adc
out
test
fsubrp
adc
or
clc
orl
adc
popa
or
notl
adc
in
notb
hlt
mov
inc
dec
int3
sbb
mov
or
js
cmpsw
das
xchg
cmc
dec
in
loop
out
jbe
inc
push
push
cmp
mov
and
inc
jecxz
iret
out
ret
jp
sbb
sti
sbb
mov
mov
testb
out
and
loope
ret
lret
adc
jns
ret
es
into
imulb
jbe
and
or
cli
add
adc
out
mov
pop
xor
lock
fstpl
xchg
push
cmp
sbbl
dec
outsl
fldenv
jnp
jp
hlt
dec
add
xchg
fldcw
xchg
cmp
push
xchg
or
pop
jge
sbb
stos
sahf
sbb
daa
xor
je
mov
mov
incb
mov
loope
jecxz
mov
and
hlt
xor
aad
clc
ret
pusha
fimuls
loopne
mov
and
jae
mov
pop
fs
xor
int3
daa
sub
out
lcall
fmull
hlt
pslld
mov
fmull
push
add
sub
std
jo
xchg
pop
mov
xor
daa
js
adc
mov
rol
cmp
cli
mov
aas
js
mov
mov
repnz
call
pop
int3
mov
xchg
mov
and
pusha
fists
fistps
adc
dec
fadds
outsb
std
pop
xorl
mov
cltd
ret
lcall
cmp
or
push
shlb
push
inc
out
cmp
incb
pop
cmpsb
subl
mov
inc
aad
sbb
shll
shll
push
imul
add
adc
in
lods
call
cmc
mov
icebp
push
outsl
xchg
ja
cli
xorb
adc
es
push
push
into
xchg
jecxz
sub
dec
vcmpgess
fadds
add
mov
jmp
int
sarb
push
sub
push
call
push
push
mov
cld
fisttps
ret
loope
les
inc
mov
insb
and
inc
add
jecxz
fdivr
enter
xor
movsl
cmp
cmp
pop
loopne
imul
iret
jae
mov
sub
jl
inc
stos
jge
sub
fmuls
mov
mov
dec
rclb
and
cmp
popf
loop
cli
movsb
jno
xchg
mov
mov
dec
bound
filds
popf
or
push
mov
popa
and
sub
or
jb
inc
mov
fists
jge
cmpsl
or
and
jbe
fsubp
mov
les
scas
or
in
ss
rclb
jecxz
add
inc
lret
fs
pop
movsl
xchg
ret
cmp
cld
icebp
pushf
in
sti
cld
fcmovnb
insl
icebp
sub
xchg
xor
sub
mov
adcb
xchg
sbb
cmpsb
xchg
xchg
pop
sub
test
js
out
fucom
push
lods
xchg
mov
mov
push
rcrl
mov
inc
cmp
mov
xchg
stos
sbb
inc
pop
mov
into
push
sub
xchg
cmp
loop
decl
push
aam
mov
std
mov
aaa
andl
jae
jmp
inc
mov
stos
jle
dec
insb
jnp
les
imul
aas
decb
sbb
out
addr16
ds
popa
lods
fwait
and
jno
xorl
andl
outsb
sbb
cmp
push
aam
xor
insl
jbe
repz
mov
pop
mov
int3
clc
scas
adc
cmpsb
cmpsl
xor
ds
pop
mov
push
push
ret
orb
cld
mov
in
xchg
fidivrs
mov
sub
fwait
jle
mov
divl
mov
push
mov
mov
sbb
dec
lods
test
cld
xchg
fcoml
dec
push
and
ja
and
pop
aam
mov
jg
inc
push
sbb
je
bound
mov
inc
fs
rol
mov
pop
adc
pop
insb
cwtl
lret
push
pop
mov
andl
inc
out
ja
gs
cmp
shll
push
cmp
lret
adcl
adc
jmp
aam
in
cmp
or
jmp
and
pop
xor
lret
mov
jl
sti
pop
pusha
push
insb
or
or
sbb
xchg
mov
or
cmpsb
hlt
mov
not
insl
mov
add
jle
push
jl
test
sub
out
mov
sbb
jmp
es
imul
dec
es
add
mov
jmp
sahf
xchg
dec
cmp
mov
imul
sbb
repnz
pop
gs
lods
cmp
mov
xor
mov
jns
mov
xchg
xorl
mov
jb
sub
lret
test
jle
and
mov
jae
daa
mov
ret
mov
movsl
or
jbe
cmc
push
mov
pop
aaa
xlat
dec
lahf
notb
imul
cmp
ret
testl
or
outsb
xchg
and
cwtl
scas
add
insb
scas
adc
jnp
popf
pop
std
push
xchg
in
adc
movsl
and
arpl
aaa
scas
mov
sbb
pusha
gs
es
lcall
repz
aas
or
arpl
fsts
cmp
clc
and
mov
clc
jb
add
les
js
stos
fdivrs
pop
dec
cltd
inc
test
rorb
ss
pop
or
fistps
push
pop
pushl
loope
xchg
mov
popa
lahf
mov
bound
or
ja
xchg
push
dec
iret
jb
pop
push
sub
movsb
xor
out
or
xor
jo
push
inc
icebp
add
adc
pop
outsl
mov
lahf
mov
xchg
push
inc
fsub
push
sub
repz
cmpsb
sub
dec
shr
aad
jmp
inc
mov
into
les
scas
cwtl
stos
ss
dec
and
sbb
adc
imul
xchg
cmpsb
xor
sbb
push
sbb
add
adc
or
push
jmp
jmp
cmp
cmpsb
mov
pop
jecxz
push
push
pop
pop
mov
sbb
cli
xchg
push
cmp
add
jp
push
adc
mov
es
test
adc
mov
int3
in
adc
mov
fsub
mov
mov
xor
sub
xchg
sub
inc
cmpsl
push
je
ret
push
jle
jl
insb
or
andb
sahf
idiv
or
cmpsb
inc
xor
test
gs
adc
fndisi(8087
outsl
pop
add
xchg
je
fcompl
lret
popf
cmp
lods
psrld
lea
xchg
dec
xchg
sbb
mov
dec
adc
int
dec
mov
mov
xchg
mov
mov
cmp
or
fwait
mov
xor
jo
push
into
bound
aad
test
cmpsb
mov
mov
dec
out
out
jle
and
jmp
ljmp
mov
divb
sbb
adc
mov
dec
inc
scas
sbb
jg
lock
mov
mov
fs
xor
cld
les
lods
das
test
jne
dec
inc
jl
inc
xchg
andb
dec
sub
xor
inc
pop
fucomip
les
in
int3
bound
imul
and
jo
push
loop
in
fnstenv
fsubrs
sub
out
std
mov
out
push
add
push
rcr
inc
mov
push
cli
mov
mov
xor
inc
xchg
lds
push
aam
cmp
and
aaa
xchg
sbb
sbb
mov
rorl
out
into
loopne
clc
xchg
stc
ja
or
inc
pop
aaa
push
iret
fnstenv
jecxz
xor
int3
mov
movsl
leave
aas
test
test
outsb
dec
or
cwtl
sub
mov
repnz
xchg
inc
fidivrs
push
pop
mov
mov
jge
jecxz
sar
xor
aaa
jmp
adc
aam
mov
dec
in
cmp
rorb
shlb
pop
mov
lcall
lahf
mov
push
lock
xor
jmp
es
fimuls
aad
je
xchg
outsl
mov
je
test
fdivs
or
xchg
test
aas
movsb
sub
rcrl
mov
outsl
push
adc
xchg
je
test
ljmp
addr16
pop
xor
pop
lret
push
mov
loop
push
xor
add
xchg
xchg
imul
leave
xchg
push
js
insl
mov
or
mov
push
mov
scas
cmp
cmc
sub
mov
xchg
ficoms
arpl
push
mov
and
xor
test
jmp
mov
nop
loop
mov
sbbl
adc
insl
adc
in
xchg
inc
jae
push
bound
pop
inc
in
mov
cltd
jno
outsl
lock
jbe
lret
mov
mov
and
add
pop
xor
dec
mov
jmp
pop
push
push
pop
int3
in
and
dec
lock
inc
addb
mov
les
sti
adc
scas
mov
aaa
adc
inc
lcall
icebp
pop
adc
dec
pop
cs
mov
hlt
jbe
sahf
mov
adc
out
adc
xchg
ret
cmp
mov
xchg
mov
xor
daa
cmc
pop
inc
sub
pop
loop
aam
dec
das
leave
je
in
das
rol
cli
and
jg
in
mov
xor
popf
push
iret
adc
lock
jle
push
inc
fstp
mov
loopne
enter
ja
inc
xchg
arpl
ret
dec
out
scas
mov
sbb
nop
pop
pop
sub
inc
std
rol
lahf
out
pop
mov
adc
cmp
dec
inc
pop
ss
dec
pop
xchg
ljmp
fbstp
or
mov
nop
mov
ret
and
cwtl
lock
pop
ds
xor
dec
lods
orb
outsb
pop
cmp
push
jbe
lret
ret
sbb
adc
or
push
inc
pop
std
outsb
loop
test
sub
xor
ljmp
call
iret
aaa
adc
push
clc
and
faddl
mov
js
jns
mov
in
xchg
cwtl
mov
xchg
or
pop
xor
jg
pop
mov
mov
dec
test
pop
ret
cmpsb
out
jmp
add
popf
std
pop
xor
lahf
sub
iret
jae
adc
in
push
xchg
imul
or
ljmp
out
ret
out
xor
in
mov
xor
movsb
fidivrs
and
jle
push
mov
mov
sub
pop
in
xchg
sbb
and
inc
sub
push
in
das
mov
scas
inc
push
jmp
iret
arpl
xchg
movsl
push
enter
cmp
cmp
mov
inc
lods
mov
es
fisttpl
mov
bound
int3
sub
inc
outsl
test
sbb
bound
stos
pop
fidivs
sub
aaa
fs
xor
lahf
cmpl
sahf
add
sub
jns
loope
xchg
xchg
cmpsl
push
mov
jmp
dec
dec
imul
roll
pop
xor
mov
sbb
out
xor
push
iret
leave
enter
das
push
in
dec
push
mov
add
movsl
adc
xor
lea
mov
loopne
or
icebp
adc
stos
jecxz
mov
shll
nop
nop
imul
mov
mov
push
jecxz
orl
out
xchg
pop
loopne
insb
or
int3
aaa
out
push
cltd
pop
enter
add
popf
inc
dec
add
insb
adc
push
andl
sub
mov
out
push
in
inc
sub
cmp
jnp
xchg
enter
mov
imulb
imul
dec
xchg
ret
mov
mov
xor
push
fstpt
pop
pop
lcall
xor
fiaddl
jecxz
adc
push
xor
adc
inc
addl
and
sbb
fldenv
sti
dec
mov
dec
cmp
cmp
rolb
int
loope
add
pushw
shll
jmp
clc
jno
lock
movsl
jbe
xchg
sar
xor
repnz
sub
xchg
pop
sbb
mov
daa
aas
in
fwait
pop
inc
fmul
inc
dec
rolb
xlat
lret
fidivrl
lock
je
es
mov
xchg
lods
enter
add
push
adc
aaa
dec
mov
outsl
lods
and
push
in
rcrb
in
xorb
test
jnp
test
repnz
arpl
pop
xchg
dec
dec
repz
inc
pop
xchg
iret
mul
add
dec
insb
jecxz
push
mov
aas
rcll
je
ja
pusha
pop
fnsave
enter
dec
inc
mov
imul
gs
out
outsb
pop
stc
ret
lds
jo
out
shlb
push
imul
inc
arpl
pop
loope
arpl
mov
dec
mov
orl
cmp
imul
pop
out
hlt
es
add
lods
popf
mov
dec
pop
dec
jns
sbb
sub
sbb
js
ja
inc
xor
dec
sbb
stos
or
and
mov
xorb
lahf
loop
shr
sti
xchg
stos
mov
popa
mov
xlat
jno
stc
dec
or
adc
enter
mov
xchg
xchg
dec
dec
sbb
ret
lcall
mov
jg
orb
data16
pop
imul
mov
stos
cmp
js
pusha
pop
adc
movsl
aaa
sub
int3
mov
bnd
ret
inc
mov
loope
xor
mov
loop
pop
pushf
dec
sbb
inc
sub
imul
add
sbb
push
push
mov
mov
test
cwtl
add
mov
inc
out
test
mov
inc
out
insb
xor
add
dec
mov
or
and
dec
mov
push
and
addr16
push
xchg
cli
insb
jl
je
pop
mov
psubb
sbb
sub
dec
adc
insb
mov
int3
pop
cmp
sbb
jae
or
and
jns
jle
xor
icebp
jg
imul
aad
add
add
push
sub
lods
jecxz
xchg
pop
call
mov
arpl
js
sbb
ror
and
dec
add
or
push
add
je
push
jge
sti
adc
pop
movsl
in
lahf
rol
pop
xchg
je
pop
jbe
test
push
and
les
int
cmc
mov
insl
add
pop
loope
mov
jbe
rorb
mov
sar
inc
loope
jl
push
cmovle
in
adc
pop
push
lret
stos
sub
stc
pop
sbb
mov
clc
addr16
xchg
orl
mov
jp
push
leave
mov
sahf
loop
dec
cmc
mov
and
decb
popa
jmp
repz
and
mov
mov
fucomi
sti
mull
mov
popa
stos
fs
movsb
jno
mov
std
scas
push
dec
mov
addl
jns
pop
pop
xchg
adc
cmpsb
dec
out
sarb
jno
jle
scas
icebp
dec
mov
add
out
int
pop
stos
leave
testb
js
mov
adc
lahf
loope
ss
roll
push
test
into
xorl
jle
push
push
jecxz
pop
out
bound
adc
cltd
push
lock
cmpsb
cli
mov
inc
jge
mov
es
or
in
xor
std
push
sub
sti
push
cmpl
sbb
mov
into
mov
xor
pop
nop
pop
mov
outsb
jnp
or
cmp
enter
roll
test
xchg
fstpt
ja
shlb
ficoms
or
scas
mov
lret
push
out
xor
icebp
cmpsb
loope
mov
xchg
shr
inc
add
mov
or
outsl
lret
xor
push
add
mov
lret
int
push
dec
jb
fldz
mov
leave
out
addr16
mov
xchg
or
decl
add
jno
mov
adc
pop
pop
in
test
mov
inc
mov
fcomi
xor
sbb
xchg
rcrb
and
inc
add
or
xchg
test
push
je
into
sub
imul
adc
or
or
mov
cli
add
dec
jg
mov
test
cltd
jg
or
push
cld
call
jle
rorl
out
adc
cmc
iret
mov
imul
ret
cmpl
adc
ds
mov
jg
add
xchg
jo
xor
mov
imul
imul
ret
xchg
lock
roll
icebp
sbb
fcomip
cmp
mov
pop
sbb
in
faddl
push
fcoms
mov
pop
xchg
imul
popf
jmp
repnz
roll
push
insl
js
cmp
lods
repz
pop
mov
ffree
test
addr16
clc
ss
jb
push
sub
shrl
stos
mov
adc
mov
insb
cmp
sub
xlat
pop
adc
xchg
mov
adc
iret
icebp
loopne
adc
or
pop
sub
cmp
sub
dec
loop
ret
or
hlt
mov
loope
out
pop
sub
pop
cmp
cmpsb
insb
and
adc
and
cmp
xor
mov
ja
hlt
mov
push
mov
icebp
dec
push
mov
mov
pop
cmp
mov
outsb
jle
xchg
sub
sbb
imul
xchg
mov
test
cmpsl
pop
mov
loopne
popa
mov
sbb
loopne
lea
pop
lds
mov
xor
dec
jge
dec
loopne
lds
add
clc
rcrl
dec
push
outsb
pushf
in
jmp
out
scas
mov
mov
ja
mov
lahf
sbb
cli
adc
mov
out
pusha
gs
mov
cli
lods
sub
aaa
pop
and
and
mov
sbb
jns
cmpsb
push
push
sub
orb
fldt
xor
mov
sub
call
scas
hlt
and
pop
addr16
cmpl
imul
lods
sub
mov
xor
cmpsl
out
movlps
push
repnz
mov
inc
test
faddl
leave
loop
xchg
cmp
stos
repz
add
movsb
jae
insb
out
inc
icebp
push
lds
xchg
mov
add
mov
outsb
gs
lods
xor
or
add
ss
loopne
pxor
add
adc
xor
dec
imul
sub
jbe
cmpl
into
push
adc
js
jb
mov
data16
push
push
test
jmp
or
jge
lds
and
testl
add
and
mov
mov
out
pop
icebp
mov
fwait
sub
fcoml
jecxz
inc
mov
loopne
call
pusha
dec
mov
xchg
cltd
dec
add
sbb
xor
cmp
xor
cs
lahf
mov
or
cmc
sub
inc
loopne
cld
cmpsb
xor
dec
dec
sub
icebp
rol
out
jns
dec
push
shlb
sub
push
lds
pop
or
lock
daa
or
ds
cs
xchg
lock
ret
push
or
push
fstpl
stos
pop
and
loopne
sub
mov
adc
jae
loop
shrb
cmp
inc
dec
inc
mov
push
push
das
xchg
lahf
and
loope
fs
xor
mov
dec
les
sub
es
push
cmp
fildl
call
push
data16
push
mov
frstor
jns
out
pop
in
popa
ja
fwait
test
lret
mov
push
adc
loop
mov
and
out
inc
sub
pop
mov
nop
into
sbb
loopne
mov
test
test
mov
shlb
cmc
cmp
movsl
fidivrl
jnp
xlat
pusha
xor
pop
xor
inc
or
test
push
cmp
cmp
jns
aas
inc
sub
divl
js
imul
fmull
rorb
add
inc
fwait
out
sub
outsb
xchg
nop
push
lret
cwtl
inc
scas
stos
aad
add
flds
jl
cwtl
push
gs
sbb
jne
xchg
inc
sub
rcl
shlb
pop
jns
das
clc
mov
adc
dec
cmp
nop
sbb
loopne
int3
test
and
jae
pop
rolb
sub
mov
mov
gs
ret
lcall
shll
dec
outsl
pushf
pop
ret
mov
xchg
inc
push
pop
mov
shl
add
push
inc
test
and
cmpsl
outsb
jge
subb
xchg
stos
insb
enter
pop
dec
push
loopne
pop
cmp
cmc
cmc
and
mov
and
adc
daa
dec
pop
insb
adc
leave
cmp
arpl
roll
mov
in
mov
test
shr
adc
mov
sbbb
sub
ljmp
sub
cwtl
fcoms
fisubs
push
mov
pop
rcrb
xor
rorl
pop
inc
pop
jecxz
pop
jno
in
fisttps
in
mov
bnd
setle
add
in
jno
push
or
aas
cmpsb
xchg
and
xor
mov
push
ljmp
js
sbb
adc
das
stos
out
inc
jbe
fildll
into
sbb
dec
jle
sub
or
pop
sbb
sti
lea
inc
es
pop
push
xchg
xlat
push
lret
mov
mov
cmp
lock
mov
notl
adc
ror
push
jmp
xchg
inc
or
nop
test
out
jbe
inc
fdivrs
and
mov
mov
or
push
jns
jno
and
scas
stc
cli
jmp
push
mov
insb
repz
xchg
push
mov
jb,pn
das
das
pop
out
fstpt
in
mov
xchg
or
sbb
mov
dec
pminsw
xlat
and
mov
cmp
movsl
les
xor
andl
rcrl
pop
sub
inc
das
mov
ret
ret
cmpsl
sub
mov
aam
mov
xor
popf
hlt
jge
ret
fs
int
and
out
pusha
daa
scas
adc
push
dec
mov
sbb
subl
ds
fstp
les
jmp
push
mov
add
push
push
fstpl
or
addr16
mov
sub
jecxz
sbb
test
dec
pop
cwtl
pop
cli
add
lea
mov
fdivrs
push
in
insb
data16
ret
test
inc
notl
outsb
testb
addr16
pushf
xchg
add
or
aas
inc
in
inc
popa
mov
hlt
lods
and
lock
cmp
call
add
loop
negb
testb
ja
es
test
scas
dec
lock
push
fstps
sbb
std
imul
or
test
add
mov
pushf
idivl
arpl
jb
cmp
movsl
testl
lea
negl
xchg
or
imull
shll
pushf
outsl
inc
mov
jnp
xor
mov
je
test
cli
stc
sbb
cld
mov
jae
popf
push
out
std
inc
shr
add
daa
aam
jg
cmp
fisttpl
es
xor
or
das
imul
movsb
filds
xor
and
mov
movsl
cmpsl
add
xchg
push
xchg
inc
pop
or
fs
xchg
xchg
in
jge
mov
add
outsb
inc
add
andb
insl
dec
jg
lds
pop
inc
lcall
es
rcrl
xchg
adc
inc
lock
iret
push
pop
leave
mov
ljmp
add
lcall
bound
movsw
pusha
lahf
xor
jnp
dec
mov
in
inc
jbe
fcompl
ret
loopne
mov
cs
sbb
and
xor
adc
loopne
cmp
mov
dec
cmpsb
in
sub
mov
cli
arpl
scas
mov
ljmp
cltd
push
nop
out
aam
jo
pop
das
pop
sbb
aas
loop
lods
pop
dec
mov
das
js
lods
pop
and
insl
cwtl
lcall
push
sub
mov
sti
mov
cmc
mov
and
nop
addr16
xchg
add
cmp
sub
add
sub
jge
adc
lods
mov
mov
icebp
das
mov
xor
mov
iret
add
jmp
cmp
aad
lahf
jp
pop
or
jno
sbb
and
jg
sub
xor
hlt
loopne
or
jmp
jns
scas
push
mov
das
gs
or
jl
das
push
movsl
sbb
xor
fwait
hlt
test
sub
cli
and
or
loopne
jecxz
movsl
call
jmp
loop
aad
or
push
mov
popa
fs
dec
pop
jge
lret
xlat
push
jecxz
push
and
or
lock
enter
inc
xchg
cmpsb
push
clc
or
pop
lock
and
xchg
jo
cltd
xchg
cmp
pop
jecxz
adc
dec
mov
clc
push
imul
jle
xchg
jno
frstor
mov
fstps
push
cld
mov
xor
subb
lock
je
dec
mov
push
mov
push
push
mov
push
in
test
push
pop
dec
inc
and
es
dec
add
mov
out
fcmovne
in
jecxz
jnp
sbb
sub
je
fcoml
adc
ja
stos
loope
push
mov
mov
sbbb
sbbb
rol
jno
insb
add
cmc
lret
xor
gs
cli
in
mov
mov
bound
cmpsl
adc
xchg
data16
sub
in
push
inc
fs
iret
xor
xchg
int3
jge
popf
or
adc
jle
scas
lds
enter
stos
stc
sbb
adc
lea
cmp
push
xlat
sub
cmp
push
lea
mov
jae
sbb
loopne
sbb
jp
and
push
jae
jno
jnp
mov
push
lods
aam
fldenv
out
sub
aaa
bound
xchg
sub
push
inc
mov
addl
fldt
cmp
cwtl
jno
cmp
inc
jb
xchg
aam
xor
dec
mov
loop
outsb
repnz
xor
decb
fidivrs
jp
scas
test
add
jae
and
jns
rorb
mov
xchg
jno
sbb
mov
mov
add
push
fmul
lret
dec
clc
mov
nop
outsb
lcall
inc
mov
cmp
outsl
aad
xchg
sub
adc
cmp
mov
push
pushl
jnp
sub
outsb
inc
cld
push
mov
ror
mov
pop
sbb
jp
mov
in
daa
aad
jnp
dec
in
inc
jns
ss
outsb
xchg
mov
pusha
adc
or
pop
mov
movsl
adc
aas
mov
pop
xchg
fimull
sahf
jmp
insb
pop
xor
insb
xchg
mov
cmp
fldt
in
mov
dec
or
stc
xlat
push
mul
insl
les
dec
cmp
xchg
fxch
repnz
push
lods
mov
stos
mov
push
fsubrs
das
sbb
mov
lods
int
loop
sbb
sbb
pop
sbb
inc
aas
fstl
inc
mov
mov
scas
cmp
js
cmpl
or
add
lret
in
mov
xor
outsb
xor
xor
rcrb
adcl
cld
adc
arpl
inc
test
pop
test
xchg
inc
lock
insb
outsb
and
mov
roll
pop
adc
jl
dec
cmp
insl
and
test
cmc
nop
add
pop
jne
iret
xor
test
jbe
repz
call
mov
push
lods
sbb
scas
mov
adc
inc
lods
xor
pop
outsl
sti
dec
and
in
in
pop
stc
and
dec
jmp
fcompl
ljmp
or
loop
iret
cmp
sbb
out
loop
es
data16
out
aam
popa
pop
push
lock
in
mov
rolb
push
sub
cmpsl
lret
aas
jle
xor
test
cltd
inc
jb
test
call
inc
mov
jge
dec
mov
daa
sub
mov
cli
cmpsl
mov
add
xchg
dec
sub
fildll
and
jbe
adc
or
movsb
movsb
push
dec
jb
loopne
fadds
mov
add
xchg
mov
inc
repz
hlt
lods
cwtl
das
and
aam
fsubl
push
lods
pusha
lea
mov
add
std
arpl
push
lcall
mov
sub
push
xorps
ret
arpl
dec
jp
rcrb
rcrl
loop
adc
cltd
divb
sub
cmc
shlb
xor
sahf
cltd
int
leave
mov
jg
incl
pop
xchg
fwait
lods
mov
andl
inc
sub
jnp
adc
mov
roll
mov
jg
push
cmp
jae
fnsave
dec
sbb
icebp
fwait
inc
inc
mov
push
ds
xchg
mov
popf
aad
xor
adcl
xorb
and
add
hlt
arpl
cmpb
xchg
push
add
data16
or
inc
jnp
nop
ljmp
lds
repnz
jno
lods
add
push
lahf
mov
push
mov
shrb
insl
push
ret
lahf
add
repnz
loop
fsubl
jb
insl
mov
sub
cmpsl
out
js
aam
lock
in
lea
xor
sar
xchg
and
add
das
add
pop
int3
fdivrs
pop
rcll
add
fmull
add
sbb
sub
add
sub
cmc
roll
fsubs
sahf
test
jle
daa
pusha
arpl
xchg
jnp
insb
cmp
and
push
js
popa
jle
iret
push
jns
sub
sub
mul
mov
add
lods
fs
out
scas
shrb
inc
adc
mov
add
mov
mov
push
adc
ja
inc
sahf
and
pop
sub
push
rcll
push
and
add
mov
jbe
jo
sub
xchg
mov
cli
insb
out
inc
mov
cmp
dec
mov
cvttps2pi
fisubrs
addr16
test
lock
and
mov
scas
or
loop
aam
rolb
outsl
cld
pop
outsb
outsb
outsl
pop
pop
ljmp
or
push
mov
mov
pop
jl
dec
insl
je
adc
mov
arpl
insb
xor
adc
ds
jg
pop
pushf
inc
push
jne,pt
push
js
push
jl
adc
sarl
add
cmp
test
jl
xchg
and
clc
scas
pop
mov
scas
sbb
mov
in
add
call
insl
mov
add
imul
insl
push
jl
xor
pop
cmp
daa
data16
inc
xor
xor
ljmp
inc
mov
test
lods
push
xor
out
mov
in
roll
cmp
xchg
pop
in
arpl
fadds
out
and
mov
xchg
add
insl
aad
popa
adc
fdivr
cwtl
lods
xchg
xchg
ret
call
pop
cmp
stos
mov
push
and
push
ljmp
lret
or
sub
movsl
sbb
into
hlt
or
cmp
js
dec
popl
mov
shlb
mov
mov
out
and
pop
mov
repnz
js
inc
loop
incb
jbe
ss
jmp
ljmp
pop
sub
sub
loopne
rcrb
fldcw
andl
incl
sub
int
jg
push
jmp
cs
aaa
mov
addb
scas
jns
xor
xchg
inc
dec
imulb
shrb
clc
or
lcall
push
pusha
outsl
and
xlat
decb
xchg
and
fldcw
test
das
xchg
mov
icebp
rolb
mov
sub
into
out
mov
cmp
dec
les
fwait
pop
test
jnp
mov
cmp
ja
mov
mov
or
mov
fistpll
stos
test
sub
cmp
add
divb
fidivrs
push
iret
int
jo
imul
cmp
xchg
mov
adc
clc
sbb
iret
adc
cmp
imul
fwait
inc
inc
inc
and
sub
je
push
jno
or
sbb
cmp
ficompl
call
imul
bound
mov
roll
int
pop
mov
pop
or
pop
cmp
mov
inc
or
and
scas
xchg
inc
cmp
je
roll
push
push
lods
mov
or
stos
inc
cwtl
jo
addr16
mov
mov
fistps
xchg
out
jmp
flds
dec
xor
ljmp
movsb
mov
aam
mov
insl
mov
xor
das
shlb
daa
jge
inc
dec
cwtl
or
bound
into
or
hlt
and
addr16
mov
pop
idiv
xchg
sti
test
rcll
cmpsl
jb
ss
jne
cmp
cld
int
dec
sahf
out
add
pop
pop
sbb
push
mov
push
sub
mov
push
push
mull
roll
push
fidivrl
pop
pop
pop
not
inc
or
xchg
dec
sub
int
mov
xchg
mov
icebp
inc
mov
or
out
pop
into
fcomi
fcmovnb
hlt
aas
cmp
je
or
mov
mov
sub
mov
out
cltd
test
mov
jno
hlt
pushf
int3
nop
cmpb
mov
xchg
aaa
push
test
sub
outsl
lea
insl
scas
xor
cmp
push
pop
push
adc
arpl
lahf
xor
jb
or
cmp
xor
and
add
stc
jg
cmpsb
mov
or
cs
mov
sub
jb
test
sbb
or
xchg
add
xchg
inc
mov
push
xchg
xor
xlat
adc
cli
xlat
jns
pop
fisubl
add
aaa
push
mov
jb
cmpb
jbe
scas
and
jl
pop
pop
mov
and
xor
mov
mov
clc
fdivs
cltd
sbb
adc
pop
xor
scas
push
pop
bound
sbb
jle
mov
loop
pop
ret
inc
sbb
in
mov
nop
mov
insb
jg
mov
xchg
cmp
add
pop
ja,pt
mov
sbb
sbb
adc
mov
nop
dec
mov
push
loope
repz
add
and
iret
adc
or
jb
lods
lock
sbb
mov
xchg
sub
jno
stos
fs
shlb
sbb
sahf
jmp
iret
loop
je
lcallw
sbb
lods
rcrb
sbb
int
test
js
push
popf
sbb
push
in
outsl
push
pop
outsl
sub
mov
or
out
jmp
xchg
xchg
cmp
sbb
jno
lods
xchg
jp
das
and
mov
push
push
pop
stos
adc
mov
jne
or
inc
push
insl
cmp
ret
loope
insb
sbb
lcall
push
and
or
and
xchg
lods
push
adc
jae
lea
mov
shll
jmp
jo
stc
xchg
pop
repnz
addr16
inc
aaa
mov
adc
into
rolb
call
popf
add
mov
scas
or
or
mov
adc
sub
dec
push
sbb
ljmp
mov
lea
movsl
and
mov
in
mov
add
shr
das
scas
popf
je
xlat
fadd
push
adc
stos
das
jle
ss
jnp
mov
inc
dec
mov
shlb
inc
out
loopne
pop
cs
paddsb
inc
and
fimull
xor
xchg
push
xor
jecxz
nop
lahf
jb
es
add
inc
test
mov
mov
sub
inc
and
fistpll
enter
mov
or
test
or
jno
rcrb
adc
in
dec
inc
sbb
stc
add
pushf
call
inc
movsl
fisttpll
jmp
add
or
adc
sub
xor
in
mov
out
movsl
fstpl
mov
lock
cmc
push
jle
ss
fnsave
addr16
iret
scas
cmc
outsb
sarl
or
jns
cmpsb
aas
add
orl
ljmp
or
push
jns
loopne
cmp
std
cld
push
push
jp
stos
pop
out
fbstp
std
dec
rol
hlt
fiaddl
jge
frstor
cmpsl
sbb
inc
cmp
imul
cmc
popa
in
icebp
mov
pop
insb
repz
addr16
test
xor
mov
xor
and
sbb
ds
out
fldenv
sbb
lret
hlt
nop
leave
fcomi
xchg
inc
sbb
cmp
jbe
xor
add
enter
jge
push
in
mov
out
xchg
mov
into
fst
mov
sbb
adcb
xchg
push
sahf
or
inc
test
cmpsl
out
mov
push
movsb
xorl
dec
stos
test
mov
insl
mov
rcr
xchg
addb
ficoms
in
xchg
xor
jb
push
stos
scas
test
and
inc
ds
inc
mov
and
or
jne
add
cmp
in
pop
add
scas
xor
sti
gs
cltd
cmpb
test
mov
push
lahf
adc
mov
push
fdivrp
mov
fwait
out
push
mov
jae
fldt
dec
rcrl
push
or
fwait
jle
add
fdivs
neg
adc
pusha
clc
sarl
popa
push
addr16
adc
or
mov
rclb
aas
jmp
mov
std
mov
pushf
hlt
cmp
daa
insb
xor
xchg
stos
xchg
jns
and
jno
add
sbb
shll
adc
enter
int
jmp
jg
dec
mov
js
lock
rcrb
xchg
test
sub
popf
dec
mov
jns
loop
xor
clc
mov
repz
push
out
bnd
jmp
fprem
jns
mov
scas
lcall
pop
and
inc
in
pop
or
mov
push
cmp
lods
add
mov
sahf
je
imul
repnz
imul
push
jg
icebp
das
lock
xor
mov
int
lods
sbb
jne
fnstsw
call
mov
adcb
xchg
ror
andb
pop
add
mov
inc
fs
subb
add
shlb
fcoml
hlt
pop
in
push
popf
and
icebp
lock
les
mov
dec
sbb
adc
mov
mov
jns
sbb
inc
adc
jno
repnz
insl
cmpsl
aad
sub
cmp
out
test
pop
adc
xchg
push
cmp
fs
mov
cmp
inc
add
inc
jp
fwait
mov
xchg
in
pop
insl
and
cmc
and
stos
cmp
mov
int
sub
enter
jne
scas
fcmovbe
call
pop
iret
inc
fimuls
push
add
sahf
cld
stos
push
push
lret
inc
sarb
cmp
test
sub
shlb
jnp
das
loope
div
je
add
ficomps
movsb
mov
mov
push
sbb
push
je
pop
scas
push
pop
cwtl
push
subl
mov
and
je
cmp
dec
and
and
aam
lcall
cmc
std
stc
jb
fisubl
or
pop
mov
adc
mov
lahf
lahf
imul
cmp
jno
rcl
outsb
inc
ljmp
push
repz
ja
in
cmp
xor
daa
lret
add
fbstp
movsb
pushf
popa
stos
decb
cltd
xchg
push
jno
cmc
cmpl
adc
ljmp
popf
jae
jb
or
inc
dec
or
jle
adc
fldl
out
stos
movsb
xchg
test
adc
adcl
and
add
shrb
iret
out
cmpsb
test
lahf
push
movsb
fstpt
cwtl
inc
mov
cmp
xor
loopne
hlt
xchg
out
push
push
jne
xchg
inc
enter
mov
es
arpl
mov
les
leave
mov
pop
daa
js
xchg
repnz
add
sub
pop
mov
popa
rcr
cwtl
pushf
sbb
lock
sbb
xor
mov
xchg
sbb
and
mov
in
jns
fildll
push
leave
sti
dec
add
negl
inc
stos
sub
xor
fcmovnbe
testl
add
jecxz
ja
xchg
pop
sbb
mov
leave
dec
ja
psubb
lods
movsb
sub
cmp
cmp
lahf
add
into
jnp
jbe
mov
stos
push
push
shlb
push
outsl
les
add
mov
mov
fcmovnu
leave
pusha
jb
insb
outsb
cmp
xchg
and
add
push
push
push
mov
ja
aaa
dec
stc
fldt
imul
push
les
lods
inc
test
mov
mov
fistpl
mov
push
xlat
fldl
lea
stos
orb
inc
ds
lret
or
fwait
jg
jmp
dec
sub
adc
int3
scas
add
outsb
inc
repnz
or
mov
out
inc
incb
punpckhbw
outsl
add
mov
mov
aaa
lods
mov
mov
dec
xchg
out
repnz
cmpsb
cmp
sub
push
outsb
adc
xor
stos
jns
and
in
outsl
icebp
aam
idivl
ret
repnz
push
jbe
insl
popw
cmpsl
mov
cs
fs
mov
lods
aad
je
in
push
pop
scas
test
xor
adc
jmp
jg
int3
repz
mov
add
ret
iret
jecxz
xchg
fs
push
scas
mov
subb
sub
dec
iret
jns
fistps
movl
xor
lock
hlt
adc
test
add
test
ljmp
mov
stc
jb
fsubr
scas
jb
scas
push
add
xchg
ja
jb
mov
xchg
inc
orb
xor
rcr
rsm
in
push
mov
hlt
js
xchg
divl
mov
pusha
testl
mov
fwait
sbb
popa
sbb
nop
sub
inc
sarl
fisttps
xor
out
mov
movsl
mov
int
dec
xchg
mull
in
pop
inc
pusha
mov
push
pushf
setns
dec
pushf
sti
std
in
fisttps
mov
call
lret
pop
pop
repnz
out
jmp
pop
aad
xchg
jae
mov
xchg
bound
sti
adc
dec
xor
das
sub
add
inc
in
aas
test
imul
lods
and
push
dec
aas
inc
lea
test
push
push
push
lret
mov
sbb
stc
xor
sub
fdivrl
and
and
lahf
popa
mov
xor
xchg
into
stos
cli
adc
in
cs
mov
inc
cmpsl
into
push
inc
adc
mov
ficoml
jmp
push
cld
jne
push
add
adcb
cwtl
dec
leave
push
mov
dec
xchg
xchg
mov
enter
repz
push
sbb
add
scas
add
dec
ds
push
or
mov
fyl2xp1
jne
test
mov
jno
imul
mov
shlb
mov
sub
lahf
rcrl
fs
cltd
sahf
mov
fs
pcmpgtb
std
sbb
int
xor
stos
mov
stos
push
out
sbb
hlt
pop
or
or
mov
arpl
fs
cmp
loopne
test
inc
out
test
jmp
pop
mov
ret
inc
lea
mov
sbb
popf
mov
jecxz
adc
jnp
mov
xchg
xchg
data16
movsl
mov
xor
pop
xchg
cmp
loope
push
insb
adc
shrl
sub
xchg
out
mov
dec
mov
jge
cmp
rol
mov
inc
imull
ret
add
cmp
mov
gs
scas
and
js
ss
and
clc
je
pusha
xor
inc
mov
addl
xor
out
sbb
mov
repz
jmp
jb
notl
daa
fists
int
test
pop
dec
aad
jbe
iret
lcall
leave
insb
cmp
out
adc
std
xchg
or
bound
xchg
aam
js
push
int3
int3
test
cld
xor
sbb
mov
arpl
add
sahf
nop
stos
push
mov
dec
xor
dec
incl
jg
arpl
jns
sub
mov
stos
inc
jl
andb
popf
cmp
aaa
xchg
movsb
mov
adc
dec
mov
push
fnop
andb
mov
pop
and
sbb
mov
jne
int
loop
pop
mov
orl
ret
push
std
in
pop
add
and
imul
int3
cmp
sti
cmpsl
aas
jno
movsl
mov
cmp
push
filds
and
pop
pop
xchg
push
and
mov
xor
test
loop
sub
mov
or
pop
push
pop
cmp
insl
inc
lret
call
mov
je
xchg
mov
inc
or
mov
ficoml
sub
adc
cmpsb
jae
push
jo
jg
mov
cmpsb
js
ljmp
insl
dec
pop
push
sub
cwtl
mov
rcr
add
jle
dec
cld
sbb
sub
js
outsl
in
adc
imul
enterw
cmpsl
sub
mov
lds
fwait
or
and
pop
pop
push
leave
adc
add
stos
dec
jg
push
mov
and
stc
push
add
mov
push
push
pop
addr16
rcrb
aam
cmpsb
out
idiv
jb
push
sbb
inc
or
or
add
mov
daa
or
adcl
in
cmpps
xchg
push
jge
ss
pop
enter
pop
or
scas
push
cmpl
scas
fisubrl
lret
aam
sub
inc
in
movsl
sbb
test
test
sbb
leave
add
mov
repnz
shlb
outsb
std
xlat
dec
pusha
faddl
js
push
mov
bswap
and
dec
xchg
cmpsl
cmpsl
int3
mov
in
mov
into
dec
mov
sbb
xchg
ja
and
fstl
mov
cmp
mov
lret
faddp
das
mov
ja
mov
inc
mov
jmp
or
dec
int
jl
test
mov
jecxz
xchg
mov
inc
pop
sahf
xor
iret
pop
mov
loopne
add
fistpl
fisubrl
in
mov
push
push
cmpsl
pop
or
addr16
push
sbb
fnstsw
dec
fisttpl
dec
add
xchg
mov
andl
jecxz
jge
test
je
sbb
lods
icebp
outsl
xchg
inc
and
cltd
sub
dec
je
add
hlt
int
in
sub
shrb
cs
add
mov
sub
icebp
jne
mov
lea
shll
sub
jge
push
stos
sub
in
dec
popf
jg
xchg
adcb
jnp
sub
ret
and
xchg
loopne
jno
jae
iret
into
sahf
arpl
cmp
xchg
mov
lods
lods
data16
daa
cmpsl
pop
jmp
je
ret
xchg
jb
or
arpl
ret
neg
aad
lret
lahf
cli
sbb
fcoml
leave
ds
pop
sbb
mov
sub
scas
or
mov
test
and
inc
fisubrs
mov
andl
out
xor
pop
dec
addr16
stos
push
inc
dec
cmp
fcoml
es
pop
enter
movsb
dec
xor
add
push
in
cmp
mov
dec
icebp
std
in
and
pop
mov
mov
add
stos
loope
pop
push
into
pop
mov
cmp
sub
jl
xor
jp
fwait
add
jo
xor
out
mov
mov
xchg
xchg
mov
cld
sbb
add
pop
les
idiv
xor
xor
mov
stc
fstp
dec
clc
push
xchg
pushf
dec
les
xor
ret
fsubp
adc
fwait
mov
xor
add
imul
inc
aas
xchg
pop
mov
dec
and
pop
mov
notb
out
mov
xchg
lahf
sub
clc
push
jmp
test
xchg
lock
mov
cs
arpl
adc
lcall
jbe
hlt
pop
sbb
insb
jb
inc
push
pusha
xchg
xor
and
cli
cld
orb
mov
and
cmpsb
xlat
idiv
and
loopne
ds
jbe
sbb
cmp
call
adc
inc
or
xchg
mov
ret
cltd
sbb
mov
lea
test
inc
sbb
sub
mov
hlt
aad
in
dec
mov
int3
imul
xor
out
xchg
inc
es
ret
scas
ss
sub
dec
adc
fstps
out
xchg
jnp
arpl
dec
mov
andw
leave
in
add
push
mov
leave
jecxz
lahf
ja
in
fbld
shrb
mov
sub
inc
movsl
xor
enter
sub
jmp
inc
sub
mov
add
or
dec
ds
pop
jmp
iret
outsl
adc
push
stc
ret
in
push
dec
mov
repnz
add
push
push
cld
test
cwtl
loop
or
adc
fs
inc
mov
sbb
cmp
roll
inc
sbb
std
mulb
sub
xchg
xchg
lcall
or
cs
push
pop
rcr
aas
cmp
sub
cmp
push
xlat
stc
mov
add
lods
fcomps
in
xorb
inc
mov
ret
jo
sbb
test
mov
int3
bound
sbb
push
cmpsl
mov
loope
fisubrl
aas
daa
cmc
cmp
dec
sub
js
enterw
and
and
pop
pop
pop
jecxz
mov
add
cltd
sub
std
loope
sti
push
sub
mov
and
jmp
xor
movsl
lahf
loop
adc
aad
cmp
scas
clc
jae
mov
adc
cli
add
mov
sbb
fistl
jmp
fcomip
jne
js
cli
pop
inc
lock
xchg
mov
xor
push
pop
or
imull
cmpsl
or
cli
xor
pop
add
pop
adc
imul
add
jmp
divl
xchg
out
test
sub
adc
inc
fimuls
jb
int3
clc
inc
jmp
cmpsb
jecxz
lcall
shlb
insl
adcb
inc
aaa
popf
mov
push
cmpsb
daa
sti
sbb
shll
lock
out
mov
mov
movsl
out
jns
ror
adc
js
incl
gs
add
push
lcall
inc
mov
pushf
test
mov
andl
xor
in
ret
hlt
adc
stos
test
scas
fs
fidivs
dec
push
loop
adc
mov
clc
es
loop
mov
cld
mov
mov
add
pop
std
mov
movsl
and
ljmp
pushf
inc
push
lock
and
xchg
add
lahf
adc
sbb
lcall
dec
jbe
js
push
or
cs
daa
movsl
repz
inc
out
pop
sub
jp
cmp
into
data16
cmp
notb
xor
and
daa
mov
dec
into
mov
sub
ljmp
pop
push
cmc
mov
dec
jg
xor
xchg
jmpw
mov
popf
xor
mov
fdivrs
mov
in
test
mov
outsb
push
pusha
xchg
sahf
adc
out
xorb
divps
xor
sub
arpl
cmp
sarl
dec
out
add
jo
or
idiv
inc
aad
mov
jmp
dec
pop
jne
mov
nop
xor
adc
push
mov
lcall
adc
cmp
movsb
pop
fwait
xor
mov
imul
or
and
mov
in
pop
je
lods
arpl
outsb
cmpsb
fists
push
xor
or
aas
cld
jp
or
pop
aas
pop
enter
jl
mov
lock
loop
cmc
mov
push
in
test
mov
push
hlt
jge
ljmp
lahf
icebp
inc
mov
mov
ret
out
inc
ja
and
cmc
dec
mull
xor
and
cmpsb
cmpsl
jnp
pop
rcrl
xchg
fsubl
or
mov
jp
in
int3
outsb
adc
je
jne
fwait
pushf
adc
and
xchg
lods
pop
inc
stc
inc
mov
cltd
push
push
outsb
add
adc
loop
leave
xchg
or
roll
test
inc
imul
in
ljmp
and
jnp
sub
cmpsb
inc
sbb
idiv
dec
scas
in
ljmp
xlat
cld
pop
sbb
ss
fcomi
cld
and
outsl
imul
sahf
jp
sbb
mov
lahf
mov
sahf
imul
sub
sbb
cmp
mov
cmp
mov
ss
xchg
test
stos
lods
rcrl
rclb
sbb
sbb
inc
adc
push
in
xchg
insb
mov
cli
mov
fucomi
imul
push
push
lea
mov
gs
call
or
adc
pop
add
cmp
inc
das
mov
addl
sbb
lea
and
test
push
dec
jo
cld
sub
inc
adc
mov
sbb
sbb
jmp
lcall
or
mov
aam
lret
or
xchg
push
xor
jnp
mov
sti
xchg
sbb
ja
cwtl
movsb
xchg
mov
lods
mov
xchg
test
and
mov
imul
xchg
push
mov
orps
mov
xor
xchg
xchg
ljmp
testl
mov
add
cmp
jb
repz
adc
mov
scas
push
hlt
das
decb
mov
mov
addr16
clc
mov
lods
jle
pop
sahf
mov
xchg
std
or
inc
mov
out
idiv
mov
dec
data16
movsb
inc
in
gs
test
js
cmp
test
push
scas
mov
je
push
loope
mov
add
rcl
pop
xor
in
jns
pop
adc
mov
aam
sbb
mov
push
mov
fs
lret
pop
xor
jmp
js
stc
cs
cmp
lahf
scas
ljmp
fstl
ret
ficoml
out
pop
push
sbb
adc
call
mov
popf
iret
dec
lret
mov
push
jns
cmp
push
mov
pop
ret
sbbb
in
mov
iret
lods
adc
jmp
push
outsb
jo
fstpt
jnp
dec
movsl
aaa
js
call
shl
addl
pop
fcoml
xor
insb
mov
push
std
jb
sbb
or
fnstcw
xor
sub
arpl
leave
stc
xor
cmp
std
stc
mov
push
sbb
jnp
shll
sbb
js
arpl
push
ficomps
mov
imul
sub
leave
inc
repz
test
jecxz
push
sub
push
cli
movsl
icebp
xchg
adc
cwtl
adc
movsb
dec
add
xchg
es
jl
xchg
adc
xor
mov
repz
mov
mov
shl
or
jo
gs
rolb
pop
inc
cmp
jo
push
fistpll
push
xor
imul
add
jbe
fisttpl
inc
pushf
or
fistpll
sti
mov
pop
movsb
loop
ds
inc
dec
sbb
inc
pop
setge
cld
xor
pop
std
push
test
mov
sub
push
negb
mov
mov
and
insl
xchg
jmp
dec
push
lock
pop
bound
mov
cmp
ds
movsb
or
shrl
in
cmc
fildl
pop
leave
pop
or
out
mov
inc
mov
pop
imul
out
dec
mov
faddl
mov
fcoms
fidivl
lods
inc
fcomps
mov
jg
push
cli
mov
movsb
pop
neg
and
xchg
outsl
out
inc
jno
pop
push
jnp
add
lods
sahf
lahf
pop
in
repz
cmp
jno
pushf
fisubrl
ja
cmpsl
cmp
push
add
add
mov
lock
scas
dec
cmp
pushf
and
push
loope
clc
jo
sbb
push
dec
mov
jne
fimull
jle
in
frstor
sub
out
bound
sub
rcrl
out
popf
loopne
mov
xlat
cmp
push
push
enter
pop
sarb
or
and
fdivrl
test
mov
pop
insb
fwait
loope
outsb
jbe
repnz
popa
cs
std
leave
popa
mov
fmul
in
or
jns
pop
mov
inc
pop
mov
sbbb
mov
jnp
adc
adc
pop
cmp
inc
popa
push
ffree
dec
clc
adc
xlat
xchg
push
add
mov
cmp
cld
jb
aas
je
push
jno
out
mov
dec
into
or
aam
ljmp
mov
fs
dec
mov
ret
hlt
and
test
or
mov
sbb
aam
ljmp
jge
cmp
jge
or
inc
jge
xor
adc
mov
cltd
and
fsubs
pop
sub
inc
jecxz
decl
fidivs
ljmp
imul
test
lcall
inc
gs
xchg
xor
std
push
push
xchg
lcall
cmp
js
outsb
mov
and
pop
iret
lcall
cli
imul
add
jmp
fnsave
dec
cld
ljmp
mov
cmpsb
clc
mov
mov
std
push
mov
jg
jo
loop
je
sbb
rorl
pop
in
mov
incl
stos
movsb
jl
mov
loope
mov
imull
imul
aam
mov
lea
xchg
mov
idiv
add
or
jmp
hlt
rcrb
test
push
ljmp
push
mov
pushf
add
pop
test
rorb
in
inc
subb
inc
movsl
pop
mov
scas
arpl
ret
pop
jo
sub
push
sub
xor
inc
jge
inc
orl
aaa
push
or
or
loope
xchg
dec
mov
adc
dec
outsl
adc
loop
into
cmp
pop
fdivrl
pop
sbb
or
mov
and
xchg
dec
mov
cmpsb
dec
push
sti
repz
jne
iret
outsb
daa
add
or
repz
mov
idivb
imul
mov
hlt
jo
push
xchg
jle
outsl
lcall
cmpsb
xchg
out
add
in
or
cmp
push
jnp
or
add
pop
and
sbb
nop
mov
add
enter
icebp
aad
mov
rorb
loope
push
and
push
loope
std
fucomi
int3
adc
jp
cmpl
divl
lods
xchg
fimull
repz
xor
mov
ljmp
rol
add
stos
dec
jo
pop
lods
jae
jne
mov
lret
push
push
mov
mov
xchg
das
jmp
pop
in
add
inc
inc
stos
mov
jae
divb
into
inc
insl
cmp
out
insb
das
jecxz
loope
cwtl
movsl
lret
pop
insl
adc
mov
cld
mov
dec
xchg
aad
cmc
mov
jg
xor
ljmp
js
and
bound
imul
popa
aaa
jmp
jb
sub
testl
out
test
xor
or
add
fisttpll
imul
dec
and
insb
push
jp
daa
aas
and
jg
xchg
pop
fildl
test
sub
int3
adc
jo
ja
sahf
scas
push
jbe
mov
push
cmp
fs
outsb
mov
and
cmp
addr16
ljmp
xchg
inc
out
mulb
mov
js
cwtl
fs
mov
xor
pop
fidivl
xor
fld
inc
aas
ss
jne
jns
pop
adc
cltd
dec
pop
jmp
push
adc
adc
jo
add
xchg
sahf
movsl
das
mov
fisubrs
sub
dec
mov
mov
mov
push
icebp
cmp
movsl
idivb
pop
in
cmp
les
mov
xchg
mov
sahf
mov
repnz
dec
mov
in
sti
into
sbb
decb
out
pop
xor
sar
movsb
fidivrs
cs
outsb
fs
sbb
fdivrl
nop
and
sub
hlt
adcl
adc
xchg
push
push
jge
cmp
and
mov
mov
mov
sarb
imull
mov
test
ret
shlb
xchg
dec
ss
sub
or
cld
in
inc
push
shrl
and
int3
xor
pop
ffree
pop
jo
mov
in
xchg
mov
out
push
adcb
loopne
fdivs
mov
pop
xchg
push
mov
mov
push
jb
pop
fsubl
xor
mov
in
mov
call
jno
xchg
xchg
xchg
mov
shr
inc
pavgb
jl
mov
fdivr
xlat
ret
es
sbb
cli
mov
or
not
and
sbb
arpl
popf
cmp
fidivl
jno
test
test
jae
addr16
jp
lret
test
dec
and
ret
mov
cmc
jecxz
jecxz
test
add
inc
xlat
stos
xor
mov
pushf
push
jl
fisubs
dec
lea
pop
aad
shll
xor
ja
dec
dec
pop
mov
cmp
and
or
pop
lcall
std
lods
jge
or
fildl
loop
test
push
popa
xor
fmul
test
rclb
es
dec
scas
jl
movb
mov
cmc
mov
or
ja
sub
push
das
or
push
sbb
popf
and
insl
jbe
call
shr
add
inc
mov
sub
mov
sahf
push
test
fdivrs
xor
cmpb
mov
mov
fs
sub
fldenv
pop
lock
stos
test
roll
inc
and
pop
inc
mov
mov
sbb
xchg
test
bound
leave
mov
pop
pop
frstor
aaa
jns
in
jg
ret
daa
popa
pop
aas
lcall
fcmovbe
add
push
jnp
and
iret
xchg
cmp
adc
xchg
ret
sub
cld
icebp
sbb
sarl
mov
test
aam
insb
fisubl
cmpsl
psrad
push
rorl
inc
sbb
sub
dec
fcoml
jnp
pop
adc
add
jmp
xor
sub
push
sub
inc
pop
loope
lahf
repz
inc
inc
dec
sub
cmp
into
add
cmp
push
sbb
dec
enter
xlat
mov
lret
mov
rorb
jmp
mov
pop
mov
jne
and
pop
fnsave
push
out
mov
mov
cld
jno
mov
add
jg
mov
cmp
sub
xchg
std
fbld
xchg
jbe
pop
popa
mov
testb
mov
aaa
mov
data16
arpl
rol
mov
je
in
outsb
mov
cmpsl
mov
lock
xchg
sti
test
mov
outsl
ret
cmpsl
and
push
push
sti
movsb
jmp
sub
xchg
das
pop
inc
mov
pop
sub
clc
aas
mov
xlat
mov
jae
fmull
les
mov
loopne
cmp
jno
mov
call
test
xor
insb
push
push
loopne
insb
xorb
out
out
jle
cltd
sub
adc
xlat
popa
and
mov
dec
sti
pop
sbb
insl
sarb
iret
sub
ret
adc
xchg
or
jg
ror
hlt
iret
cltd
popa
push
test
adcb
test
mov
loope
daa
bound
rcrl
cwtl
jl
in
adc
cmp
sub
pop
cmc
cmpsl
xchg
fwait
adc
push
rcrl
sub
adcl
aad
jle
fstps
or
into
jge
inc
pop
loope
andl
call
cmpsb
push
mov
jl,pt
in
mov
sti
stos
push
insb
push
rcrl
mov
jmp
mov
pop
bound
in
lret
stos
aas
cmpsb
jmp
repz
into
imul
push
nop
cmp
mov
test
inc
xor
out
cmpl
and
adc
cmp
sti
xchg
dec
add
sub
xor
cmp
lods
es
mov
adc
pop
test
dec
mov
push
dec
push
gs
bswap
sti
lods
int3
cli
divb
dec
jmp
sub
inc
scas
add
mov
out
push
mov
sub
mov
sbb
and
addl
add
mov
inc
xor
jns
pushf
sti
jl
loopne
pop
jae
cmpsl
addr16
leave
push
sarb
dec
and
movb
jo
lds
shll
sbb
lret
mov
dec
push
faddp
fimull
mov
inc
in
ljmp
popf
ss
mov
mov
push
lcall
mov
cmp
dec
scas
and
testb
mov
sbb
stos
stos
jbe
mov
sbb
pop
jg
sub
mov
add
xchg
jo
xor
lds
pop
sbb
lods
dec
nop
loopne
popa
in
adc
icebp
mov
mov
sti
hlt
andb
imul
cwtl
adc
aas
add
pop
aam
sbb
out
shrb
aad
jmp
pop
adc
lahf
push
adc
or
btr
dec
sub
dec
pusha
and
shl
mov
cs
imul
xor
pop
mov
push
scas
pusha
mov
sahf
lret
sub
sub
mov
jo
std
out
push
aaa
and
jmp
and
xchg
psllq
xchg
out
fldcw
inc
pop
sbb
aas
out
in
mov
xor
pushf
mov
sbb
enter
test
jae
dec
cmp
add
and
fdiv
and
mov
out
dec
mov
dec
xor
jne
or
cmp
jns
ss
lds
xor
outsl
repz
ficoml
add
mov
icebp
or
mov
scas
pop
sahf
xor
sub
pop
push
mov
fcmovbe
and
pop
outsl
sub
jnp
pushf
mov
and
sbb
aam
popl
inc
push
repnz
and
lock
das
bound
push
int
or
out
push
adc
mov
adc
icebp
push
in
iret
jmp
jb
mov
mov
push
mov
test
hlt
fiadds
pop
bound
fdivp
mov
jo
je
xorb
gs
mov
scas
dec
fdivr
arpl
mov
out
rorb
inc
rolb
scas
jbe
popf
and
cld
cltd
mov
pop
xchg
aas
sbb
cwtl
add
push
add
or
inc
push
sbb
jge
mov
or
sbb
lds
loopne
or
xchg
push
mov
incb
mov
lods
and
lock
dec
mov
js
adc
jp
sti
adc
movsb
dec
gs
push
mov
mov
adc
xchg
mov
xchg
and
jns
sbb
adc
ds
dec
call
je
test
sub
push
ret
incl
jno
pop
adc
aas
inc
jns
mov
adc
jle
les
or
xor
jne
pop
mov
cwtl
fdivp
into
xchg
cli
loope
mov
ret
call
xchg
push
push
call
ret
lock
andb
pusha
xor
daa
inc
or
mov
daa
aaa
xor
lods
loopne
cmpsb
out
decb
and
mov
and
je
pusha
addb
sub
das
dec
mov
pushf
mov
iret
insb
jle
aas
shr
outsl
mov
jg
xchg
push
daa
rcrl
mov
pushl
xor
inc
sbb
dec
sub
out
mov
stos
negb
ret
mov
stc
rorl
imul
jge
je
addps
out
fsubr
cmpsl
sub
insb
fnsave
and
add
out
call
dec
out
mov
pop
push
out
scas
xor
mov
das
pusha
nop
push
sbb
loop
sbb
inc
iret
cli
cmp
dec
cld
cli
out
xor
aaa
sti
inc
out
sub
and
and
push
sbb
mov
orb
mov
add
pop
cmp
add
cmpb
out
push
mov
aam
stos
or
xchg
pop
bound
dec
rcrb
rcrl
push
lret
cs
xchg
pop
insb
mov
jne
or
shl
fs
pushf
mov
add
cmc
mov
into
mov
and
pushf
jno
xchg
jge
xor
or
push
mov
cmp
jmp
pop
adc
mov
xchg
adc
movsb
fcmovnu
pop
hlt
aaa
xor
icebp
outsl
jg
in
push
icebp
fisubrs
addr16
aam
daa
aad
add
fsubrl
loop
aaa
mov
arpl
fldenv
pusha
cmp
mov
cmp
pop
xor
jnp
pop
dec
dec
mov
adcl
std
adc
cmp
or
xchg
mov
pushf
sub
fmull
dec
cltd
ds
pop
jg
push
movb
fcoms
shrb
xchg
daa
insb
mov
xchg
jg
dec
and
in
in
bswap
mov
xchg
push
rorb
add
stos
or
xlat
stos
loopne
or
xchg
jge
popf
insb
xlat
jno
or
mov
cvtps2pd
mov
stc
dec
dec
int
pop
in
sub
xor
bound
cmp
pop
fdivl
mov
xchg
jae
push
pop
pop
ss
js
xchg
leave
out
cld
pop
cmovbe
loop
lret
cld
sbb
bound
hlt
mov
push
fbstp
nop
mov
rorb
mov
lcall
pusha
int3
pop
neg
repnz
dec
or
popa
shlb
aaa
cmp
cltd
cmp
jnp
testl
pop
sti
lds
xchg
and
add
pop
or
xchg
or
test
loope
repz
ud1
je
ss
jo
push
loopne
shlb
std
int
data16
daa
xor
push
cmpsb
dec
jmp
negb
mov
fsubl
add
cltd
mov
mov
arpl
cmp
pusha
xlat
mov
pushf
cmp
jecxz
push
mov
loopne
in
loope
dec
adc
aaa
call
cmpsb
mov
inc
popf
dec
inc
es
iret
stos
loope
test
pop
in
in
and
xorl
pop
call
mov
int3
stos
int
jno
in
in
mov
sbb
cmpl
sub
sahf
ja
sbb
ja
sahf
jne
xchg
enter
gs
arpl
mov
xor
pushl
sahf
xor
lcall
adc
sub
sub
sarb
adc
pop
lock
push
jns
icebp
pop
mov
fldcw
enter
xchg
push
add
xor
cld
shlb
jg
and
out
orl
jp
imul
rcll
push
int3
push
dec
into
aas
pop
call
dec
out
push
outsl
mov
sbbb
arpl
jmp
loope
jl
mov
dec
in
dec
xorl
out
dec
out
sub
lret
dec
cmp
or
sub
push
in
aad
sarb
lds
and
loop
mov
lret
xchg
movsb
or
and
dec
xchg
sub
sub
adcb
or
lds
xchg
pop
fwait
in
add
outsb
or
xchg
mov
push
into
cli
dec
adc
lods
dec
imul
in
ja
jbe
mov
lcall
je
adc
pop
adc
add
mov
push
shrb
jmp
lds
mull
cwtl
js
pusha
xchg
ss
call
mov
cli
movb
mov
add
js
inc
adc
sbb
sub
xor
push
loopne
xchg
mov
jne
das
dec
mov
enter
cs
push
mov
call
gs
pop
aaa
imul
popf
xchg
setl
jge
fs
adc
test
mov
pop
inc
adc
int3
hlt
rorb
sub
testl
jne
scas
xor
push
aad
into
jge
cld
je
fiaddl
arpl
gs
jno
imul
mov
xchg
jo
cmp
pop
ficomps
add
cmp
sbbb
repnz
dec
shrb
ljmp
loop
orb
dec
inc
fnsave
and
sti
repz
inc
add
int3
push
push
adc
cmp
cltd
aad
imul
sar
mov
stos
cmp
jmp
pop
aas
push
xchg
push
add
mov
sub
lcall
cld
in
cs
stos
aad
insb
mov
sub
jl
out
mov
cmp
imul
xchg
dec
mov
adc
loope
inc
cmc
jnp
arpl
and
into
cmp
cltd
add
lcall
fs
outsl
xor
xchg
cli
lret
out
push
iret
lcall
cltd
shl
adc
les
loopne
adc
mov
and
imul
sub
fimull
push
outsb
and
dec
sbb
dec
xchg
jo
jo
sbb
sub
ss
int
jmp
mov
push
xrelease
pop
push
stos
mov
subb
pop
aam
fsubs
mov
mov
dec
cmpsl
xchg
or
or
shlb
mov
pushf
and
loope
cmpsb
mov
pop
add
scas
or
rcl
xor
jecxz
out
scas
and
push
ficompl
cltd
arpl
je
sub
addr16
sarb
into
inc
dec
or
out
mov
pushf
stos
clc
jb
mov
jl
cmpl
mov
shrb
xchg
scas
popf
push
das
lods
xchg
repnz
sbb
iret
inc
cmp
sub
push
ficoml
std
into
mov
mov
sbbl
xlat
pushf
sbb
les
or
or
fs
in
mov
cmp
sbb
mov
xor
adc
mov
mov
repnz
leave
das
lcall
sti
mov
push
adc
fwait
aaa
xchg
push
ja
pop
mov
repnz
repnz
fucom
shll
ret
mov
adc
pop
push
loopne
dec
xor
pop
mov
jae
stos
xlat
fnstsw
jp
mov
mov
int3
jns
fwait
or
fsubr
dec
cmpsb
and
adc
leave
cmpsl
sub
fnstenv
sti
inc
xor
mov
xchg
pop
pop
pop
mov
sub
icebp
cmp
sbb
movsl
xchg
cmpsb
jl
loop
nop
out
dec
frstor
add
and
ljmp
loope
inc
test
jle,pn
call
dec
dec
repnz
pop
sub
in
fwait
xchg
mov
xor
mov
pop
movsl
mov
push
and
pop
push
inc
stos
lods
xchg
jp
sbb
inc
push
out
jmp
push
jp
push
jle
test
mov
mov
ret
int3
add
dec
loopne
push
cltd
inc
inc
call
loopne,pt
sbbl
je
shlb
out
ret
mov
xor
inc
insb
imul
fs
and
sbb
mul
mov
call
ljmp
add
daa
cltd
pop
or
push
leave
inc
lock
fwait
dec
add
stc
pop
call
movsl
adc
mov
ror
cmc
out
adc
repnz
addr16
push
lods
sbb
fdivl
sbb
add
cmp
pop
enter
dec
lret
mov
fsubl
and
fcmovb
jb
push
mov
outsl
int3
aaa
std
ljmp
popf
cld
test
jne
push
loopne
mov
fwait
inc
je
mov
sub
add
shll
mov
sbb
mov
addr16
inc
js
lea
test
pop
cmpb
and
je
sub
cmp
xchg
xchg
mov
dec
push
sub
add
je
pop
popf
push
push
pushf
xorb
lods
cmc
and
mov
inc
mov
dec
test
test
movsb
pop
pusha
stos
enter
test
cli
andb
push
add
pop
sarl
push
push
mov
adcb
test
fistps
dec
xor
xor
out
fsubrl
mov
or
insb
out
lahf
pop
pop
lret
mov
mov
fs
jo
aam
jo
std
lcall
cmp
add
mov
jl
cwtl
or
and
scas
xor
and
dec
shlb
out
or
loope
inc
mov
mov
lret
cmpsl
popa
mov
int3
push
sub
fdivr
add
adc
aaa
lret
fstpl
stos
aad
dec
add
lds
outsl
movsl
push
or
dec
mov
lock
fisttpll
xchg
imul
ds
loop
fcmovnbe
out
cmp
push
jb
in
ss
clc
jns
mov
rcll
push
mov
mov
insb
sub
addl
mov
pop
pushf
push
jnp
mov
jmp
aam
das
int3
pop
into
cmp
ret
popa
inc
movsl
jns
adc
jl
andl
shrb
or
or
xor
inc
aam
jmp
xor
ror
jle
lods
nop
xchg
mov
cmpsb
pop
inc
shrl
sub
rorb
mov
lret
lds
push
push
and
repnz
pop
icebp
popa
jns
or
call
je
or
cmp
jne
sarb
lock
dec
inc
fwait
ljmp
aam
fcmovnb
adc
add
cmpsl
out
add
pop
divl
fdivrl
xor
ss
scas
outsb
xchg
cwtl
jo
les
xchg
dec
mov
pop
jmp
andl
je
subl
xchg
divl
leave
stos
aam
cli
jl
pop
adc
adc
mov
lcall
test
imul
outsb
in
mov
into
shlb
pop
daa
sbb
xchg
cld
xlat
sbb
adc
jne
push
mov
xchg
loope
cmpl
adc
fcmovb
mov
jo
fwait
add
loopne
fisttpll
cmp
mov
lds
mov
mov
sub
mov
mov
mov
ret
and
inc
mov
xchg
dec
pop
xchg
push
sarb
cmp
sub
das
cmpsb
jge
in
pavgw
movsl
negl
push
sbb
imul
mov
sbb
sub
xchg
sbb
test
das
cmp
pop
inc
pop
loopne
jle
mov
sbb
fsubs
xor
pop
push
leave
test
std
dec
mov
dec
in
push
mov
mov
push
jge
lock
inc
jl
inc
out
pop
enter
add
cmpsb
mov
andb
pop
or
fdivrs
sub
into
addl
sbb
sbb
mov
add
mov
jb
fistpl
test
cwtl
dec
or
cld
popf
sbb
movsl
sbbb
mov
dec
mov
mov
cmp
loope
xor
mov
xor
or
movsb
popf
cmp
adc
out
fs
icebp
shl
stos
popf
jl
cli
ret
push
pusha
fsubs
loop
pop
int
rcll
enter
adc
das
divb
test
call
stc
lea
into
cmpb
popf
cmp
add
jnp
pop
sahf
adc
sub
xchg
fwait
stos
push
push
pop
stos
out
loopne
dec
pop
dec
loopne
cmp
mov
in
cmpsl
int3
and
add
stos
repnz
ja
mov
xor
cmc
lea
ja
mov
xchg
push
addr16
pop
stos
sahf
inc
add
xchg
test
int3
mov
xchg
mov
aas
out
sbb
add
cwtl
xor
push
xchg
jmp
clc
cmp
test
mov
ljmp
xchg
jp
js
sarb
push
or
sbb
cwtl
mov
cmp
mov
cmp
ds
push
pusha
add
pop
hlt
sbb
pop
in
test
cmpsb
dec
cmp
outsl
loopne
mov
push
js
add
dec
mov
xchg
mov
push
push
cmc
fcmovb
mov
sbb
and
mov
sub
loop
xor
cmp
sub
jmp
ficomps
add
xor
imul
out
fldcw
gs
dec
pop
scas
cmp
add
or
jecxz
int
test
pop
mov
sbb
mov
pop
pop
mov
add
das
sahf
pop
fcmovnu
push
lahf
cmpb
mov
mov
lods
imul
add
lea
or
cmp
mov
lcall
dec
sbb
out
add
dec
xor
cmpsb
mov
fldenv
mov
push
and
xchg
jns
ljmp
xlat
fisubrl
dec
and
xorl
pop
sbb
add
sub
pop
jo
les
pop
outsl
jl
jecxz
mov
xor
lcall
out
inc
sarb
pop
xchg
les
scas
aam
out
shl
fsubrs
pushf
mov
push
pop
orb
sahf
cvtps2pd
sahf
pop
test
and
das
data16
mov
int3
imul
cld
adc
les
dec
test
push
movsl
repnz
out
jmp
addr16
jle
addr16
pop
je
cli
inc
fisubrl
xchg
in
dec
das
or
sbbb
and
aas
and
test
aam
ret
dec
push
orb
xchg
lret
shrl
adc
insl
xlat
ja
pop
stos
and
inc
cmpsl
push
call
sbb
pop
aam
int3
fdivrs
aaa
sub
imul
inc
inc
add
dec
insb
adc
int
inc
cmp
add
sbb
lret
lds
pop
outsl
mov
fists
imull
inc
sbb
xor
loop
adc
pop
iret
xor
ret
or
or
adc
addl
sahf
mov
cli
mov
dec
sub
or
mov
ljmp
jecxz
jl
lds
aaa
xor
jbe
loope
xchg
cmp
adc
jmp
fadds
xor
jl
dec
ljmp
hlt
and
xchg
clc
xchg
and
insl
and
jno
jnp
repnz
mov
orb
sub
and
mov
or
cmpsb
outsb
lcall
mov
mov
mov
jae
mov
popa
xchg
and
lods
outsb
pushf
push
add
lods
push
ret
sahf
test
push
leave
je
rolb
add
scas
mov
dec
into
jbe
cli
fimull
sti
pop
aad
scas
je
jo
lea
sub
cs
mov
jmp
sub
imull
mov
in
incl
lods
popa
pop
je
push
test
int3
out
jb
push
mov
cltd
bound
inc
mov
shll
jecxz
pop
popa
stos
xchg
pop
cmp
jmp
aas
xchg
stos
test
adc
mov
dec
pop
mov
inc
mov
das
pushf
icebp
mov
xchg
test
icebp
imul
and
iret
jnp
mov
lock
aaa
push
aaa
xchg
xchg
adc
in
adc
scas
arpl
jne
add
lea
mov
xchg
sbb
leave
cmp
outsb
scas
cs
cmp
insb
jae
cli
std
or
add
dec
jmp
or
popa
ss
lods
xchg
movsb
push
loope
jne
pop
aad
sbb
jle
jmp
jb
push
add
popf
dec
dec
mov
push
push
into
arpl
mov
arpl
cltd
push
data16
sub
jmp
je
pop
cmp
mov
lcall
fcoms
in
lds
mov
cwtl
dec
mov
cmp
lods
push
or
dec
addb
popa
fs
idivl
ret
fldenv
gs
insl
pusha
rcrw
rcl
test
loop
fbstp
sub
fbld
mov
popa
sbb
lret
jmp
jb
pop
push
test
xorb
push
or
imul
sbb
shlb
shll
push
test
xorl
inc
or
add
data16
repnz
aam
xor
inc
pop
sub
dec
or
or
loop
xor
por
ret
add
imul
mov
push
mov
or
push
repnz
xchg
push
mov
loopne
lahf
xchg
les
cmpsb
and
movl
clc
dec
fcoms
mov
call
jno
icebp
repz
ja
xchg
insb
or
cs
sub
outsl
lret
mov
jno
and
jo
mov
test
mov
movsb
shl
sbb
ds
mov
mov
cmpsb
dec
mov
addl
test
nop
push
or
popf
push
popf
jmp
aas
ret
push
pop
xor
ret
xchg
rolb
xorl
popf
mov
fdivrp
stos
inc
mov
insl
jnp
and
push
adc
andb
icebp
lods
pop
mov
test
orl
adc
enter
pushf
les
fimull
push
imul
lock
cs
cld
xor
push
jb
cs
mov
push
out
pop
xchg
xlat
orl
mov
hlt
inc
or
mov
das
pop
insl
imul
test
or
aas
lea
out
inc
push
aad
vcmpsd
dec
addr16
outsl
aam
in
pop
jne
jae
das
movsl
add
jmp
outsl
and
in
xchg
sarl
outsl
mov
dec
fcompl
jbe
insl
xchg
pop
dec
insl
adc
shlb
jae
sub
sbb
into
mov
add
and
mulb
aaa
lds
cld
loopne
pop
loop
inc
fisubrs
or
int3
pop
js
dec
repnz
mov
clc
mov
pop
cmp
xchg
xlat
leave
mov
push
mov
fildll
cld
pushf
jge
xchg
inc
filds
into
cmp
insb
add
xchg
cli
sub
ljmp
outsl
mov
pop
inc
jae
andb
push
repz
mov
push
jp
sub
push
and
ljmp
inc
sub
cmp
mov
test
out
add
mov
mov
fwait
cmc
jnp
add
mov
fldt
sub
adc
mov
and
mov
nop
mov
pusha
pop
repz
fbstp
fsubrs
scas
scas
leave
aad
mov
nop
xor
push
jnp
stos
aam
sbb
sub
sbb
mov
adc
jmp
out
fstl
or
and
push
popa
and
mov
mov
adc
sahf
push
test
mov
pop
xchg
pop
arpl
aaa
push
repnz
insb
test
pop
sahf
aam
and
into
imul
sbb
sub
mov
loop
ftst
call
lcall
xchg
leave
in
jmp
xchg
sbb
cmp
jle
and
fcomps
sbb
cmc
mov
not
sti
cmp
loopne
push
xchg
push
pop
int
mov
testb
fisttps
xchg
cmp
mov
jge
call
call
bound
push
out
fucomp
jbe
fstpt
adc
ret
outsl
sbb
hlt
jbe
cld
cmp
xor
jnp
sbb
ret
sub
aad
jl
jne
lock
bound
pop
movsb
add
mov
add
jns
out
lock
dec
in
xor
movsb
dec
sub
push
push
pop
xor
and
cli
and
lahf
cmp
xor
inc
add
rcrb
push
jp
dec
jmp
pop
jns
pop
pop
push
fcomp
adc
or
mov
pop
mov
pop
pop
xchg
jns
xchg
dec
jge
orb
mov
lahf
push
shlb
icebp
xlat
loop
jecxz
add
sub
inc
cli
stos
adc
jb
adc
addr16
loop
mov
dec
out
cs
jno,pt
lea
xor
jge
mov
mov
int3
mov
mov
jle
push
fsubrl
sti
inc
fld
std
in
adc
sbbb
aad
pop
add
ret
inc
popf
and
arpl
test
sub
mov
das
cltd
repnz
or
into
mov
jno
mov
pop
cmc
lock
fisubl
scas
loope
ret
inc
sbb
mov
fwait
push
lret
pop
sub
mov
sub
sti
sbb
and
mov
mov
adc
imull
jmp
mov
add
and
fdivrp
adcb
lret
int3
xor
mov
jo
push
inc
pop
lahf
dec
ja
pop
jne
fiaddl
repnz
mov
sahf
sub
sbb
loopne
ja
jae
cmp
and
xor
cmp
sarb
sub
in
xchg
cmp
daa
inc
mov
outsl
inc
xor
mov
ficompl
out
mov
ljmp
jmp
add
pop
aad
dec
cmpb
push
std
xchg
add
scas
mov
adc
cmpsl
pop
push
mov
or
movsl
dec
loop
adc
scas
cmp
and
cmp
cmp
jmp
jne
sbb
pop
popa
leave
push
rcr
and
add
in
push
mov
imul
ss
fs
adc
and
mov
sub
xorb
and
ret
dec
sbb
inc
adc
xlat
mov
call
shll
std
add
and
inc
xchg
pop
or
fsub
adc
inc
nop
sub
pop
movsb
add
fidivrs
insl
cmp
mov
mov
call
cmp
ja
pop
xchg
mov
dec
xor
jecxz
add
sbb
fstps
xor
adc
sub
mov
mov
iret
shlb
loopne
lods
inc
mov
sbb
or
mov
and
sti
out
fstpl
fcmovnb
insb
test
and
sbb
test
ljmp
jno
cmp
push
ja
dec
xchg
jns
adc
popf
cmp
fs
sbb
pop
adc
cmp
cltd
popa
std
lcall
sbb
sarb
pop
and
into
adc
xor
in
jecxz
mov
insb
enter
lahf
xor
adc
lret
scas
jo
pop
stc
insl
mov
js
fmull
or
arpl
sbb
mov
scas
fnsave
adc
push
divl
jae
movsl
push
sbb
push
dec
add
mov
dec
and
ret
in
jns
push
cld
jne
fbld
call
pusha
loop
dec
dec
jge
fcompl
xchg
adc
or
and
lret
ss
or
add
cmp
arpl
loop
mov
out
fists
es
int
out
mov
mov
jne
inc
xchg
cmp
xorb
jnp
mov
outsb
bnd
gs
fwait
cmp
lcall
insl
and
dec
cmc
dec
lret
sbb
xchg
dec
cltd
inc
movsl
adcb
pop
enter
int
int3
je
mov
pop
test
adc
test
icebp
cmp
jge,pn
sbb
xor
inc
insb
push
into
jnp
cmp
adc
or
push
and
test
sub
adc
repz
enter
repnz
enter
mov
mov
and
mov
push
lods
ljmp
sahf
jno
pop
sahf
and
cmpsl
ja
outsb
test
push
pop
mov
jne
adc
mov
jp
ds
or
mov
pop
jmp
mov
dec
mov
sub
inc
cmp
movsb
push
std
or
xor
andb
fcomps
mov
mov
das
inc
leave
ds
ficoms
xor
dec
outsl
pop
or
sahf
movl
scas
lods
test
mov
lret
hlt
adc
iret
cmc
adc
mov
or
je
pushf
jns
mov
inc
leave
cmp
sub
adc
sub
push
arpl
loope
enter
mov
aas
cwtl
out
outsl
jne
notb
xchg
lret
xor
xlat
sahf
xor
hlt
push
outsl
aaa
push
fst
lcall
stos
xchg
stos
xchg
ds
sbb
cltd
fsub
popf
lahf
adc
add
mov
notb
mov
jns
push
aaa
mov
loope
in
cmp
jae
iret
jp
sarb
jae
mov
scas
cwtl
add
xlat
or
mov
aam
cmpsl
mov
push
adc
out
test
mov
data16
repnz
mov
mov
mov
push
lahf
jbe
xchg
iret
icebp
inc
sbb
xchg
mov
lds
pop
das
arpl
rolb
mov
movsl
repnz
add
push
repz
push
cmp
jo
push
leave
out
ret
addb
mov
test
and
ljmp
jle
pop
dec
cmp
or
mov
push
jbe
mov
xor
pop
sbb
arpl
jmp
imul
inc
adc
adc
repnz
jg
sarl
mov
mov
cltd
lcall
mov
into
popf
push
and
lahf
dec
xchg
xlat
imul
xchg
clc
cmpsb
mov
pop
fwait
sbb
js
fists
mov
loope
aam
jb
mov
test
push
sub
scas
ljmp
test
pop
adc
or
sbb
loopne
pop
push
mov
sarl
lret
fistps
outsl
outsl
outsl
xchg
loop
or
lods
nop
and
in
xchg
push
push
inc
xor
xorb
cltd
mov
dec
cli
or
jge
lret
les
sbb
inc
mov
arpl
and
or
adc
out
sbbl
lds
movsl
and
mov
sub
movsb
lock
mov
leave
rclb
add
cmp
xchg
mov
out
push
repnz
aaa
hlt
pop
xchg
in
int
push
xchg
push
pop
sub
mov
cmc
test
ja
cmp
inc
popa
jns
xrelease
repnz
das
in
sbb
push
icebp
inc
xchg
outsb
es
in
aam
daa
rcl
xchg
imul
mov
xor
xchg
mov
int3
push
cli
mov
jp
pop
das
inc
icebp
ret
add
mov
loopne
inc
mov
addr16
repz
adc
mov
insb
loop
jnp
popf
inc
stos
add
shrb
in
xchg
cli
pop
mov
scas
rorb
pushf
xor
xchg
je
push
xchg
adc
pop
cmp
test
inc
icebp
and
pop
jle
leave
pop
push
push
imul
cld
sbb
jbe
out
scas
pop
loop
popl
sub
aad
pushf
stos
icebp
mov
add
mov
lock
pop
fsubr
lret
shll
das
xor
leave
cmp
mov
jecxz
sbb
xor
push
fcomps
cmpsb
adc
out
out
movb
scas
gs
push
mov
lods
mov
xor
xor
adc
rol
stos
mov
sub
dec
add
clc
inc
aam
in
and
pop
mov
outsl
popa
jb
cltd
xor
sahf
stos
jmp
repz
or
inc
adc
cwtl
mov
f2xm1
loop,pt
out
lods
fbld
cld
inc
jbe
ret
mov
cmp
xorb
popa
sub
jl
add
or
or
mov
jb
push
mov
cmp
or
pop
out
rcll
int3
decb
movsl
or
sarl
xor
dec
imul
adc
cmp
ljmp
lock
out
sti
inc
bound
xor
cmp
jmp
aaa
gs
mov
push
arpl
in
aaa
inc
add
clc
push
lods
mov
stos
push
inc
mov
jge
lds
sub
xor
outsl
xchg
jp
fnstcw
stos
inc
push
jecxz
pop
fcom
xchg
pusha
cmp
mov
push
lock
mov
std
test
inc
aas
fstl
mov
mov
pop
or
mov
inc
lds
ficomps
enter
mov
dec
dec
pop
testl
outsl
or
xchg
loopne
mov
dec
xchg
add
dec
sbb
imul
jnp
ja
es
xchg
lods
jb
fwait
scas
mov
lds
jle
dec
lods
inc
hlt
fwait
mov
sub
lahf
pushf
popf
out
hlt
jae
jmp
call
xor
int3
or
or
sub
int3
sbb
push
cld
mov
shl
int
cmpsl
jge
fiadds
pop
inc
cmp
sbb
xor
and
mov
inc
or
push
mov
jo
sbb
push
or
rcrb
push
shll
cwtl
dec
mov
push
mov
or
inc
inc
or
je
ja
imul
fcom
loope
jne
ljmp
rorb
mov
xor
data16
arpl
inc
push
cmp
dec
xor
ljmp
sub
inc
aaa
repnz
insb
push
add
inc
inc
cld
jne
sbb
or
and
inc
cmp
ret
imul
mov
rcrl
faddl
clc
scas
mov
xchg
pop
add
add
scas
mov
sbb
pusha
in
cmc
cwtl
xor
or
fiaddl
in
or
das
ljmp
ret
leave
aad
pop
scas
fcoml
aaa
sbbb
mov
inc
cmp
pop
mov
cmpsb
dec
ficompl
push
mov
push
and
pop
pop
mov
int
adc
mov
jae
cmc
mov
lea
std
jae
jmp
daa
mov
cmpsb
ja
xchg
xchg
add
jl
sub
mull
es
lahf
sub
int
mov
xchg
das
pop
or
mov
push
fisttps
xchg
out
in
addr16
sbb
scas
movsl
lret
xor
aaa
loop
out
mov
and
jb
inc
mov
jp
dec
test
inc
xchg
stos
in
shrl
xor
sub
stc
and
cmp
adc
mov
jno
xor
loopne
ret
mov
orl
pusha
les
pop
sbbl
rcrl
test
mov
sbb
cmpsl
dec
pop
ret
dec
div
jl
push
cltd
push
aaa
mov
mov
outsl
loope
fld1
inc
ja
bound
lods
mov
adc
testl
les
mov
push
jmp
push
test
leave
pop
hlt
daa
subl
sbb
aaa
icebp
addr16
leave
faddl
test
jns
cmp
sbbl
sub
ljmp
xlat
sub
loopne
jo
mov
aaa
xor
mov
sub
call
mov
cmp
xlat
sub
fcoms
cs
fwait
jg
add
xchg
xchg
mov
mov
into
mov
mov
sbb
mov
xor
and
jno
scas
xchg
cltd
fmul
push
xorl
bound
and
mov
mov
push
dec
and
fs
ds
and
mov
inc
pop
pop
xor
cmp
sub
xorl
aam
xchg
mov
les
cs
aaa
cld
xchg
jb
mov
out
clc
mov
icebp
cltd
or
jno
popa
sbb
popf
xor
xchg
mov
add
testl
out
ret
mov
mov
fmull
push
lret
mov
out
push
xchg
add
and
imul
adc
movsb
icebp
cwtl
test
lret
repnz
xchg
cld
mov
inc
jle
std
xchg
sbb
imul
iret
cmp
es
jns
in
xchg
daa
dec
vmulss
mov
bound
xchg
hlt
arpl
lret
lahf
jge
mov
je
loopne
pushf
aam
jmp
outsb
es
push
push
add
es
gs
add
addr16
or
js
loope
repnz
cmp
add
dec
or
les
push
lds
popa
xlat
imul
inc
insl
xor
adcb
adcl
cmp
sahf
mov
test
push
mov
push
aam
xchg
mov
inc
in
bound
cmp
stos
cltd
repnz
jb
pop
imulb
and
lds
bound
dec
aaa
push
mov
mov
loope
add
aam
ret
sbb
dec
lcall
sub
pop
dec
sub
dec
pop
push
gs
daa
std
in
and
cmp
cs
or
push
mov
or
mov
inc
jecxz
jno
pusha
and
and
pop
jns
sub
mov
movb
lcall
and
mov
out
cli
popa
out
sub
mov
xchg
xchg
cli
iret
cmpsl
add
adc
popf
cmp
cmp
push
sub
jle
scas
xchg
cmp
push
lcall
sub
sbb
sbbb
and
rclb
aas
in
scas
jg
arpl
out
sub
pushf
add
ja
jno
cli
jo
or
sti
adc
insl
out
xor
or
inc
sbb
imul
jp
xor
or
lret
xor
popa
daa
rol
mov
insl
push
mov
push
xchg
cmp
rol
push
cmpsl
add
lret
adc
fstpt
push
sbb
push
pop
xor
sub
adc
iret
cmp
mov
lock
or
ljmp
pop
cmc
and
jb
adc
stc
jle
popf
incb
sbb
cmpsb
test
add
jb
aam
jmp
pushf
dec
sbb
data16
imul
jo
arpl
and
cmp
dec
inc
push
sub
and
fstps
clc
sahf
js
pop
cwtl
mov
add
adc
dec
dec
fwait
push
inc
insb
mov
mov
push
inc
test
or
adcl
xchg
add
xor
pop
fwait
sbb
fdivrs
xor
arpl
and
or
xchg
scas
push
testb
insl
jecxz
aad
gs
shl
adc
mov
or
fsubrp
aas
inc
in
sub
aad
pop
push
cmpl
bound
inc
and
outsb
adc
xchg
mov
dec
sbb
push
xchg
nop
inc
scas
dec
and
or
pop
mov
add
ja
push
or
fnstcw
test
cmp
cmp
mov
lret
test
in
ss
adcw
mov
ljmp
lds
aas
xchg
jae
repz
xor
nop
jmp
fwait
orb
iret
lock
lret
adc
pop
test
das
repz
lahf
sbb
inc
xchg
push
inc
js
es
fwait
out
or
pop
inc
je
push
cmpb
imul
push
cmp
sbb
xor
sub
mov
xchg
or
pop
test
or
mov
sub
dec
das
add
and
fimuls
js
icebp
jno
sti
in
out
and
les
push
mov
dec
add
dec
fimuls
jg
iret
fwait
rolb
add
mov
in
cwtl
and
test
cli
pop
dec
dec
sbb
ret
stc
cwtl
mov
add
sub
fnstcw
cmp
dec
sub
mulb
adc
mov
cmpsl
lahf
decl
adc
daa
std
mov
mov
pop
sub
mov
pop
es
lcall
cltd
mov
push
mov
sub
lds
mov
xlat
jno
xor
jo
pushf
scas
and
mov
stc
stos
cmpsl
outsb
negl
jo
mov
push
sub
mov
mov
push
lcall
add
lahf
neg
or
icebp
rcrb
fdivrp
pop
jno
inc
push
jb
push
push
hlt
dec
outsl
stos
inc
mov
lock
lahf
xlat
mov
mov
inc
loop
xchg
mov
icebp
in
aad
inc
pushw
imul
mov
jb,pn
icebp
sub
cmp
int3
sbb
sti
movb
xchg
shlb
enter
lods
lock
ja
mov
fisttpll
aad
cmp
inc
hlt
xchg
or
adc
add
cltd
into
repz
dec
jae
mov
pushf
cs
xchg
shlb
in
dec
mov
jne
mov
inc
ret
xlat
test
popf
lcall
daa
sub
inc
push
int3
popa
lret
dec
filds
pop
call
or
loop
ret
jbe
rolb
push
push
or
outsb
mov
ret
mov
cs
adc
mov
sub
testb
ss
sub
xlat
mov
mov
icebp
icebp
or
adc
xchg
test
roll
in
push
insb
dec
inc
insb
bound
dec
cmp
inc
push
adc
xor
out
xor
arpl
ret
xchg
adc
xor
nop
dec
jge
ja
les
jg
stos
xor
pop
ret
and
mov
and
push
test
ror
dec
jae
xchg
xchg
push
and
mov
ret
mov
leave
dec
jb
orl
popf
cmpsl
lret
mov
imul
push
jle
mov
ret
mov
mov
xor
fisttpll
jle
sbb
ss
mov
loop
mov
push
and
scas
cmp
sbb
popf
jo
pop
iret
test
loop
out
jecxz
dec
js
rcrb
stos
sahf
mov
cwtl
push
fwait
insl
out
push
stos
test
cmpsl
popf
inc
nop
push
addr16
in
in
xor
lods
inc
stos
and
xorl
mov
mov
lret
out
sbb
lods
jmp
mov
mov
push
sub
adc
mov
lcall
insb
push
jns
out
adc
jl
push
jb
ss
pusha
leave
push
pushf
add
loope
out
push
bound
mov
dec
jp
fdivs
adc
shll
dec
out
orb
or
lret
pushw
rolb
scas
cmpsl
lea
xor
and
xchg
cltd
adc
flds
cmc
les
out
or
pop
mov
jbe
jge
scas
dec
insb
js
subl
dec
add
add
sbb
call
in
fistpl
jp
pop
sarb
inc
jle
popa
xor
mov
in
push
pushw
sbbl
inc
sbb
mov
fnsave
pop
and
add
mov
add
mov
add
pop
dec
add
insb
xor
add
add
xor
add
add
add
xor
add
add
add
lcall
add
xor
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
pop
stos
add
or
pop
stos
add
add
sub
xchg
xor
lcall
add
or
dec
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
push
adcl
push
xor
adc
mov
or
invd
rolb
push
scas
and
sbb
dec
lods
push
push
ficoms
dec
dec
add
mov
or
cltd
add
lock
repz
mov
xlat
cmp
adc
push
or
stos
sarb
rorl
inc
insb
push
pop
cmp
cmpsl
sub
or
rorb
push
push
push
call
sbb
and
mov
mov
andl
add
cmp
fidivrs
push
or
jbe
add
lea
lods
stos
nop
add
addr16
add
test
mov
addl
loopne
cli
repz
out
pop
nop
sbb
das
lea
push
popa
push
std
je
sbb
nop
dec
add
lea
add
push
xchg
xlat
xchg
lods
xchg
mov
call
dec
sbb
ss
ror
cmp
nop
dec
add
xor
leave
movaps
push
inc
inc
push
addl
je
mov
lea
lret
mov
xor
rcll
xchg
push
and
push
lea
push
mov
adc
mov
cmp
pop
or
enter
aas
inc
pusha
mov
orl
lcall
mov
mov
cld
dec
jle
add
add
movb
lock
sub
mov
adc
in
pop
push
push
int
or
mov
or
or
pop
pop
pop
push
pop
ret
push
shr
or
cld
daa
mov
or
adc
aas
push
mov
adc
xchg
and
push
mov
shl
sti
mov
in
add
je
push
mov
jne
cld
inc
test
stos
pop
lds
in
xor
push
jne
scas
leave
fcompl
adc
rolb
adc
lretw
enter
nop
mov
add
std
jo
jmp
hlt
cltd
and
icebp
sub
and
rclb
or
xor
pop
dec
add
inc
adc
jge
xchg
xchg
cltd
andl
testb
inc
pop
adc
add
clc
cmp
jge
ret
loopne
rolb
andnps
sub
shll
dec
mov
xor
sub
ret
data16
call
xchg
push
mov
mov
pop
pop
dec
mov
xor
lds
sbb
jle
js
sbb
push
mov
in
add
add
push
push
call
pop
mov
mov
dec
push
loopne
mov
in
adc
pop
fistpll
fimuls
int
in
sub
inc
je
es
pop
sbb
dec
or
stc
add
movsl
add
and
xchg
stc
jnp
inc
push
cli
cmp
sbb
lret
pop
into
ss
cmp
cmp
inc
ret
jne
mov
dec
pushf
mov
push
lock
push
dec
push
xchg
fsubl
sub
lea
outsb
inc
dec
sub
loope
dec
mov
pop
xchg
and
jl
nop
pusha
aam
mov
sub
push
dec
lahf
or
and
push
push
testb
in
add
xchg
mov
out
adc
adc
lret
sbb
popa
jne
stc
jmp
inc
ficompl
add
adc
loopne
sub
pushf
movsl
dec
pop
push
jb
fimull
sub
sub
lret
mov
add
bound
movsb
cmpb
pop
sbb
and
jae
call
dec
or
into
push
jle
test
and
add
push
push
call
sbb
mov
clc
dec
test
into
insl
push
insl
jae
bound
in
and
mov
adc
testb
xchg
dec
fs
add
lahf
cmpsl
and
shl
dec
int
mov
cmp
ror
gs
jge
mov
adc
shr
add
fdecstp
mov
mov
jle
mov
jg
cmp
test
and
jmp
push
mov
inc
cmpsl
data16
pop
push
inc
sbb
inc
xchg
pop
shrl
insb
outsl
dec
popa
mov
pop
mov
inc
pushf
lods
jb
mov
stos
outsl
div
mov
icebp
mov
movsl
call
dec
or
adc
repz
ret
dec
insl
xchg
sbb
sbb
mov
dec
adc
jl
sbb
iret
shr
pusha
loope
push
lea
pop
cmp
sub
test
cmp
cmp
sub
mov
sbb
mov
enter
sbb
mov
and
js
push
or
test
aas
shrb
leave
lret
inc
lea
js
push
adc
mov
inc
jo
insb
imul
sbb
gs
jae
dec
adc
and
std
mov
gs
ljmp
outsl
jae
das
insb
sahf
pop
outsb
lahf
je
bound
mov
imulb
out
mov
dec
cmp
xor
popa
insb
mov
sub
in
stc
sbb
sub
fwait
cmp
xor
dec
js
popa
jnp
push
inc
outsl
js
emms
je
arpl
data16
adc
cmp
or
je
movsb
dec
dec
roll
push
fs
rorb
loop
sbb
je
cmc
inc
les
pop
jl
imul
jle
dec
bound
or
and
dec
cmp
cmpsb
cmpsb
dec
inc
mov
cltd
ficomps
lret
mov
insl
or
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
aam
adc
call
or
add
cmp
add
xor
add
adc
add
inc
add
xor
add
adc
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
