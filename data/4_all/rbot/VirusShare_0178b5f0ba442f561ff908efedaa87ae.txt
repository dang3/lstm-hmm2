in
test
or
mov
pop
mov
sbb
xchg
sbb
les
fistpl
mov
adc
mov
pusha
jle
lods
jg
sbb
popf
adc
cli
jnp
inc
mov
adc
pusha
shlb
sub
jle
pop
jmp
repz
push
test
mov
stos
repnz
xor
xor
pop
xchg
pop
mov
push
aad
faddl
mov
cmovno
or
lahf
inc
ja
sub
fnsave
jb
arpl
push
sbb
dec
pop
andb
dec
sbb
mov
aaa
gs
shlb
or
int
mov
adc
insl
mov
mov
push
lea
dec
add
mov
mov
scas
lret
fistps
jge
dec
pop
cmp
arpl
lock
xchg
mov
repz
push
cld
jmp
adc
push
xchg
fildll
pop
stos
outsl
mov
mov
movsl
nop
aaa
stc
add
push
sarl
pop
fcmovnb
push
ja
jmp
and
pop
jg
mov
shlb
inc
sbb
add
sub
push
xor
sahf
dec
xor
imul
leave
pop
mov
xor
int
lret
cmpsl
ret
flds
mov
cmpsl
pop
xchg
out
clc
cwtl
es
lods
mov
shl
inc
push
fwait
ret
dec
lahf
pop
es
inc
adc
xchg
lret
sbb
out
test
lods
sti
cmpsb
pop
xor
mov
lcall
lret
ret
lock
outsl
sbb
add
jp
imul
add
lret
movsl
dec
sbb
xlat
pop
sbb
test
jmp
push
mov
and
cmp
ror
inc
pop
cld
leave
sbb
jno
inc
fmuls
fmuls
jp
sbb
push
stos
jge
inc
lcall
jle
imul
negb
mov
sbb
jmp
cmp
int
cmp
js
mov
inc
sbb
aad
dec
shlb
dec
frstpm(287
or
adc
inc
adc
fsubr
dec
vpmullw
pop
rcll
fsubs
sar
jecxz
fnsave
inc
fwait
enter
mov
push
sbb
test
cmpb
push
rcll
pop
add
cwtl
dec
and
mov
mov
test
add
int
fs
mov
jns
mov
mov
pop
push
jle
pop
lock
into
sbb
add
pushw
cwtl
dec
or
nop
push
stos
mov
aaa
fadds
mov
movsl
mov
fcmovnu
ljmp
popf
lret
icebp
add
cmp
mov
xchg
fsts
sub
ficoml
cs
imul
aad
xor
xor
sbb
push
leave
jmp
or
xchg
into
xor
addl
mov
hlt
xor
jo
xchg
adc
stos
cmp
lret
xchg
pop
fnstenv
sub
xchg
push
sahf
push
jle
iret
xchg
pop
pop
je
cmp
xchg
push
jle
clc
enter
add
jle
xor
daa
hlt
xor
popf
outsl
dec
mov
loope
and
enter
xor
out
push
shlb
roll
mov
adc
setg
daa
push
inc
sti
lds
pop
and
mov
shll
pop
adc
add
fs
popf
pushf
cmpsb
xchg
and
insb
mov
and
in
mov
lret
lcall
sbb
mov
scas
xchg
bound
cwtl
nop
popf
mov
or
jp
xchg
or
shl
mov
adc
adc
cmp
mov
push
or
lahf
scas
pop
jno
in
rorl
sbb
andl
jmp
or
inc
pop
jmp
and
dec
mov
fptan
stos
cmc
mov
repz
inc
insl
out
jmp
or
cmp
clc
rolb
scas
inc
cltd
enter
push
adc
jp
sub
sub
out
jne
mov
mov
shlb
ret
cmp
and
mov
test
fwait
mov
inc
mov
cld
daa
fnstenv
mov
inc
sbb
inc
sbb
or
roll
lret
inc
sbb
daa
push
mov
pop
test
mov
pop
mov
jns
xchg
and
jae
push
clc
mov
mov
xchg
add
cmp
or
cmp
adc
lock
mov
mov
ljmp
jnp
sbb
jge
pop
xor
fwait
js
jp
mov
mov
cmc
cmp
add
xor
push
psllq
dec
sarb
clc
bound
pop
idivl
stc
repnz
or
add
mov
roll
mov
jnp
sbb
mov
in
int
xor
jb
add
and
sub
enter
aad
or
add
fdivrl
mov
loop
ljmp
xchg
div
cmp
xor
rcrl
add
mov
lahf
fcompp
inc
pop
cli
add
cltd
xchg
adc
clc
in
and
jmp
cwtl
cmc
xor
sbb
mov
scas
xchg
bound
cwtl
nop
popf
mov
or
jp
xchg
or
shl
mov
adc
adc
cmp
mov
push
or
lahf
scas
pop
jno
in
rorl
sbb
jl
clc
jle
je
jmp
or
inc
pop
jmp
and
dec
mov
fptan
stos
cmc
mov
repz
inc
insl
out
jmp
or
cmp
clc
rolb
es
cltd
enter
push
adc
jp
sub
sub
out
jne
mov
mov
shlb
ret
cmp
and
mov
test
cmc
lret
clc
cmp
inc
pop
pop
push
jns
mov
or
xlat
adc
sbb
test
xor
and
xor
stos
sub
push
mov
push
dec
sbb
pushf
cs
mov
sahf
das
xchg
stc
cli
in
test
or
ret
bound
and
xchg
ficoml
outsl
les
sbb
inc
cld
repnz
movsl
fstl
jnp
dec
je
into
xor
sbb
filds
adc
mov
andl
dec
adc
rorl
mov
add
icebp
pop
ret
inc
gs
inc
or
and
add
int3
sbb
push
inc
cltd
enter
jo
dec
push
int3
insb
enter
adc
or
cmc
enter
xchg
push
adc
out
mov
or
pop
jp
arpl
pop
and
cmp
mov
cmp
pop
rol
cmp
insl
cltd
popf
sti
jecxz
arpl
inc
sbb
inc
aas
rolb
cmp
sbbb
inc
sbb
dec
sbb
inc
lods
push
and
leave
xchg
inc
sbb
dec
pop
inc
mov
bound
call
xor
push
sub
add
push
add
xchg
stos
sti
push
fimuls
mov
sarl
dec
xor
cmp
push
fcompl
jmp
mov
js
dec
xlat
push
mov
sbb
mov
in
aam
fdivs
aaa
rcr
xor
sbb
daa
adc
test
gs
dec
or
xchg
pop
into
fmuls
mov
jne
jecxz
adc
add
inc
dec
lahf
cmc
iret
pop
sub
pop
pop
enter
mov
add
insl
sub
in
into
hlt
ja
in
xor
add
lcall
dec
xchg
mov
sbb
in
dec
push
divb
push
imulb
and
mov
sbb
add
lds
xor
movsb
push
test
lret
jae
and
int3
xchg
sbb
pop
pop
repz
mov
cmpsl
xchg
test
inc
addr16
mov
xchg
add
pop
mov
adc
sub
mov
xor
lds
push
fsub
jmp
pushf
sahf
xchg
cmp
push
pushl
cmp
je
loope
into
inc
fnstsw
or
pop
inc
sbb
adc
iret
mov
test
adc
es
xor
xchg
sub
fdivrl
and
push
push
mov
mov
sbb
mov
test
inc
sub
sub
push
and
lahf
pop
pop
add
fucomi
pop
xchg
sbb
dec
xor
into
sbb
out
mov
sub
imulb
jo
pop
nop
push
popa
sbb
inc
pop
mov
les
in
popf
sti
xchg
lahf
cmp
lds
sti
lods
inc
sub
xlat
std
int3
jmp
repz
jo
shlb
push
cmp
add
add
inc
cmp
jmp
pop
scas
inc
jmp
dec
xchg
cs
pop
jg
pusha
mov
loope
cmp
mov
stc
sub
test
out
jo
dec
sbb
add
dec
mov
icebp
or
or
dec
into
inc
push
fidivrs
jge
imul
popf
cmp
imull
xlat
dec
js
cmp
fstl
sbb
push
loop
adc
sub
loop
decb
sbb
mov
sbb
out
and
sub
call
push
cmpl
lds
ds
imul
flds
push
dec
adc
mov
stos
mov
mov
mov
jb
dec
inc
std
movsl
rcll
loop
push
inc
jno
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
shlb
jo
add
aam
adcb
add
pop
push
xchg
ret
cltd
fcoml
pushf
scas
adc
jmp
push
jg
push
cwtl
mov
mov
xor
cmp
add
jecxz
sub
mov
dec
aam
pop
mov
and
adc
xchg
fists
push
loope
lods
insl
jbe
jp
enter
jg
movswl
jmp
std
mov
sti
and
test
sahf
add
push
add
mov
in
push
movsb
mov
inc
cmp
pop
jg
xchg
pop
test
sbb
jecxz
sti
pop
push
dec
push
dec
jns
sti
mov
imul
add
fidivl
add
mov
divb
nop
jecxz
nop
lret
pushf
dec
and
ror
sbb
stos
out
lds
lret
scas
mov
sti
stos
pusha
std
fbstp
xlat
in
fucom
leave
mov
pop
sub
les
push
inc
lcall
pop
mov
or
pusha
push
xchg
sbb
lds
mov
mov
mov
adcl
movsl
xchg
mov
mov
sub
mov
push
xchg
adc
sub
jo
cmp
inc
and
movsl
pop
repz
xlat
pop
mov
out
adc
adc
cmp
sbb
das
cmp
xor
pop
cmp
mov
popa
push
mov
mov
mov
inc
mov
jecxz
push
xchg
mov
jbe
add
mov
inc
or
decb
pop
out
push
hlt
mov
sub
and
test
lods
rol
sbb
mov
test
das
xchg
stc
cli
in
test
nop
sbb
repz
jae
sub
adc
xchg
fsts
scas
aaa
push
add
mov
mov
push
mov
scas
ret
mov
xlat
fdiv
sti
and
add
inc
shlb
push
or
lret
mov
or
push
fisubl
push
fsubs
stos
cmp
jb
pop
mov
mov
shlb
hlt
fldl
jle
lcall
or
sub
mov
rol
nop
das
sahf
dec
movsb
adc
fsts
imul
lods
pop
call
lahf
mov
mov
mov
cmp
push
add
sub
mov
sbb
add
leave
lds
dec
popl
ret
popf
fmull
repnz
les
inc
in
xlat
xor
in
pop
movsb
jmp
test
push
lret
into
sub
fcoms
mov
test
cmp
xchg
add
mov
adc
xchg
fsts
movsl
lds
sub
sahf
xchg
fwait
inc
rclb
mov
push
push
xchg
cwtl
add
mov
push
lods
in
inc
test
inc
push
cmp
push
mov
xchg
sbb
push
iret
xchg
push
pop
and
adc
inc
push
dec
jns
fwait
psubw
call
aam
leave
and
rcll
int3
dec
add
lret
sub
jns
mov
xchg
repz
adc
push
insb
or
lcall
adc
fdivrp
mov
imul
punpckldq
xor
mov
pop
repnz
inc
sbb
push
jmp
lds
out
stc
cli
dec
lcall
hlt
ljmp
frstor
cmp
mov
test
add
mov
cmpsb
xor
jb
loopne
pop
mov
sub
xchg
jnp
scas
popa
sub
in
mov
push
push
xchg
cwtl
add
pop
adc
sub
mov
out
loope
jp
imul
push
cltd
scas
enter
ljmp
sub
jmp
and
mov
cmp
ds
pop
xchg
stos
nop
sub
cmp
ret
dec
movsb
adc
fsts
imul
lods
pop
call
cmpl
dec
lahf
lds
add
mov
jbe
jns
jae
xchg
shlb
sub
mov
xchg
sub
adc
lcall
pop
test
pop
and
jns
popf
inc
bound
mov
mov
mov
xchg
rcr
xchg
sbb
mov
cmp
xchg
add
lock
adc
xchg
fsts
mov
mov
cmp
sahf
xchg
fwait
inc
in
repz
loop
inc
mov
pop
jb
add
stos
cli
clc
adc
sbb
test
and
and
inc
or
movsl
addr16
xor
and
std
bound
outsl
push
ret
sbb
adc
mov
sbbb
sbb
hlt
cmc
jl
ds
xchg
fwait
xor
cmp
das
in
jmp
loop
pop
pop
mov
shr
xor
aam
sti
repnz
fisttpll
push
iret
jne
jp
add
or
pop
mov
sbb
leave
jns
lret
movsl
ret
insb
test
cli
add
inc
cli
cmpsl
add
lret
mov
jp
stc
mov
xchg
mov
lret
mov
sbb
retw
pop
xor
inc
scas
ja
add
sub
mov
xor
mov
inc
mov
fstl
pop
pop
xchg
nop
sahf
xchg
fwait
inc
adc
sbb
inc
loop
inc
mov
pop
jb
movb
add
adc
push
xchg
pop
pop
jg
mov
cmp
add
mov
dec
pushf
push
insl
fstpt
mov
fldenv
mov
mov
mov
test
cli
jno
jp
mov
int
inc
cmp
pop
jg
or
mov
and
push
adc
mov
jns
mov
add
xor
add
lods
movsb
sbbb
aas
jno
mov
cmpl
mov
inc
mov
lds
iret
repz
mov
rcrl
les
sbb
shrb
or
loope
pop
push
sub
mov
jbe
sbbb
sbb
add
mov
out
popa
arpl
repz
loop
inc
mov
pop
jb
movb
shlb
add
jge
xchg
sub
stos
leave
dec
push
fsubs
sbb
sub
add
into
clc
xor
mov
hlt
js
orb
and
xchg
out
fisubrs
sbb
xlat
adc
int
mov
repz
mov
imul
rorl
pop
dec
jns
sti
mov
imul
sbb
ret
mov
adc
lret
inc
sbb
gs
push
lods
xchg
sub
adc
inc
clc
cmpsl
sub
test
mov
xchg
inc
outsl
xor
pushf
lds
arpl
jo
inc
cmpsb
les
inc
scas
ja
inc
xchg
jl
xor
js
mov
inc
mov
loope
inc
mov
stos
jnp
jg
scas
loope
pusha
out
or
inc
lret
sub
mov
dec
mov
inc
dec
aam
out
mov
mov
rcrb
in
xchg
jmp
ret
xchg
aaa
stos
mov
xchg
cltd
mov
cmpsb
jnp
mov
jecxz
pop
push
add
xchg
pop
push
or
lea
fldcw
pop
fnstenv
and
orb
call
fucomip
hlt
cmp
fists
iret
ret
fdivp
lds
aas
add
mov
mov
in
and
mov
lcall
sbb
iret
dec
notl
sbb
adc
push
lahf
push
lret
jbe
std
stc
mov
xchg
xchg
dec
popf
lret
scas
icebp
add
or
pushf
jns
mov
stos
adc
pop
sub
jp
add
sbb
sub
xor
adc
or
dec
cmp
popf
fimuls
sti
out
push
xchg
sbb
lods
or
mov
inc
mov
mov
inc
cwtl
dec
and
inc
or
xchg
pop
int
mov
cmpsl
sti
ljmp
inc
sti
xor
fcoms
mov
inc
inc
mov
cmp
jmp
cmpsb
dec
fildll
pop
mov
mov
jbe
mov
dec
jle
dec
add
into
lcall
and
xor
hlt
leave
add
sbb
test
lcall
mov
sbbl
xor
jb
mov
inc
dec
outsb
mov
add
cli
mov
fistpll
stos
dec
pushf
lret
lds
inc
ret
add
addb
stos
pop
lock
movsw
sahf
aad
hlt
jl
add
and
pop
js
enter
and
jmp
popf
in
in
bnd
lods
das
fbstp
shlb
or
sbb
jecxz
mov
nop
lock
inc
test
cltd
xor
scas
mov
xor
push
gs
movswl
jmp
std
mov
sti
and
enter
mov
pop
mov
xchg
inc
adc
aad
imul
jnp
lsl
ret
mov
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
xchg
and
jns
aas
adc
mov
fs
out
mov
test
push
test
cwtl
xor
movsb
sbb
mov
lcall
lret
rcr
jae
das
or
mov
push
sbb
in
insl
inc
outsb
shrb
mov
xor
jecxz
fwait
pop
jp
mov
loop
mov
es
scas
inc
fdivl
cmp
adc
add
sbb
call
les
xchg
sub
xor
sub
ret
push
fsubs
stos
cmp
nop
jb
pop
mov
mov
shlb
hlt
std
add
sbbl
add
mov
push
inc
mov
ret
xor
push
jne
pop
sbb
jns
popl
shll
jp
aas
in
mov
clc
outsl
cltd
xchg
sbb
dec
mov
adc
mov
testb
cltd
nop
push
hlt
mov
cmpb
adc
sbbl
inc
lret
push
dec
push
dec
jns
fldt
jmp
mov
dec
test
repnz
xchg
lcall
lds
ljmp
cmp
loope
inc
mov
or
jnp
jg
scas
pushl
jmp
ja
adc
add
sbb
call
les
xchg
sub
ror
psllw
mov
pop
pop
rcll
fsubs
lahf
pop
test
mov
ret
mov
int3
inc
cmp
fmull
xchg
jmp
cmpsb
dec
imul
fsubp
mov
and
cmc
mov
dec
mov
jecxz
pop
mov
jecxz
xor
clc
add
mov
add
cmp
mov
add
testb
iret
cli
sarl
test
aam
mov
sub
cmc
sbb
je
out
pop
frstor
fisubrl
mov
mov
das
or
test
nop
lcall
jge
imul
jecxz
fwait
cmpsb
enter
pusha
jle
lods
pop
icebp
leave
es
sbb
xchg
fisttpl
clc
jle
add
sbb
sub
rol
and
lret
add
dec
mov
mov
sub
pushf
xor
lahf
pop
pop
in
out
cmp
mov
or
rcll
int3
inc
push
xchg
cmc
mov
xchg
jle
mov
das
sbb
hlt
imul
or
into
inc
mov
icebp
pop
dec
aam
sti
sub
jnp
mov
sbb
jbe
mov
push
mov
add
and
insl
movsl
jmp
iret
icebp
scas
dec
jl
and
mov
test
adc
push
cmc
fisttpl
dec
aaa
in
je
sahf
das
xchg
stc
cli
in
test
nop
sbb
jns
ja
cltd
adc
test
scas
or
adc
xchg
fsts
mov
cmp
ret
mov
jecxz
pushf
sahf
xchg
fwait
inc
adc
jg
sbb
imul
cwtl
add
cmp
rol
mov
aam
out
loope
jp
imul
xor
scas
enter
ljmp
add
jmp
and
mov
rorb
in
push
or
lea
aaa
lret
sbb
add
cli
mov
shrb
movsl
dec
call
fucomip
hlt
cmp
fists
iret
int3
fcomi
mov
mov
adc
mov
mov
adc
dec
xchg
jo
and
sbb
les
fidivrs
pop
and
jns
popf
inc
bound
mov
mov
mov
xchg
xchg
in
push
jl
sbb
adc
or
stos
arpl
rolb
and
pop
jno
push
arpl
int3
adc
lahf
scas
std
fabs
cmp
xchg
add
in
xchg
sbb
stos
into
in
add
dec
mov
pop
repnz
out
mov
or
movsl
cli
jg
inc
insl
xchg
adc
cli
mov
out
and
cmpsl
ret
mov
xlat
pop
fstps
aaa
popa
mov
cwtl
push
xorb
in
add
xchg
popf
out
loop
cmp
xor
add
lahf
dec
pop
test
cmp
mov
or
jl
into
sar
repz
pop
xchg
ret
mov
mov
cmpb
mov
inc
stos
pushf
adc
mov
and
fistpl
int
dec
cmpl
leave
mov
push
cmp
sbb
xor
or
stos
arpl
rolb
fs
sub
jno
push
popf
xchg
shlb
lret
and
jnp
jg
scas
loope
out
js
mov
adc
rolb
ja
fsubs
dec
test
mov
pop
xor
dec
cltd
test
stos
icebp
lea
stos
cmp
mov
pop
mov
mov
shlb
inc
fsubrl
mov
test
sub
cmpsl
push
inc
mov
ret
sub
push
jne
pop
adc
call
repz
pop
daa
dec
xchg
jecxz
daa
jle
cmc
jmp
sbb
movsl
mov
inc
cmp
add
std
cmpsl
dec
add
mov
repnz
fwait
jae
cwtl
lret
inc
sub
pop
xor
push
xor
inc
or
pop
sub
cli
stos
mov
fs
stos
dec
push
lret
lds
mov
les
xchg
fisttpl
sahf
outsl
out
leave
and
mov
jecxz
shr
rcrl
pop
push
xchg
push
xor
jno
jnp
inc
mov
cltd
dec
sbb
xchg
adc
mov
cmpb
nop
lock
mov
cltd
xor
call
mov
mov
cltd
xabort
add
pop
js
out
call
cld
add
sbbl
add
mov
push
inc
mov
ret
sub
push
jne
les
add
shlb
inc
imul
lahf
lret
in
rol
dec
clts
add
xor
add
lods
movsl
sbbb
aas
xchg
icebp
mov
cmpl
mov
inc
mov
stc
sbb
push
icebp
stos
adc
fucom
cli
mov
cld
mov
aaa
ljmp
push
jl
and
jae
les
xchg
fisttpl
outsb
stos
pop
adc
stc
add
or
push
popa
jbe
lods
arpl
pusha
mov
cld
loop
sbb
insb
stc
and
add
sbb
mov
add
jge
jb
pop
cmp
push
movsl
ret
dec
mov
pop
pop
dec
or
xchg
xchg
cltd
inc
js
xchg
outsl
movnti
imul
ds
cmc
sub
pop
xchg
xchg
fwait
xor
cmp
das
in
cmc
mov
sbb
xchg
mov
cmp
and
mov
test
scas
mov
in
ljmp
jecxz
movsl
mov
sbb
lret
inc
sbb
xchg
test
ret
test
mov
or
or
out
xchg
pop
xor
fisttps
or
aaa
xlat
in
sbb
test
xchg
mov
pop
xchg
rcl
pop
mov
dec
sbb
xchg
out
pop
mov
ret
sub
pop
fs
lods
jno
rcll
fsub
adc
add
or
xchg
cwtl
add
mov
dec
dec
mov
adc
mov
and
inc
or
and
rcll
ljmp
sbb
mov
ret
idivb
inc
inc
mov
cld
dec
sbb
outsb
imul
fisubs
fdivs
pop
jno
inc
adc
mov
mull
xchg
scas
fucomip
hlt
cmp
fists
iret
int3
fwait
aaa
repz
mov
sbb
mov
inc
sub
movsl
and
jne
mov
int3
jecxz
sbb
mov
test
cwtl
xor
pop
ljmp
jmp
popf
ljmp
or
popf
push
pop
xchg
lret
or
pop
sub
jp
add
sbb
mov
sbb
jmp
popf
test
mov
scas
fbstp
inc
rclb
or
adc
sbb
or
sub
and
push
mov
xchg
cmpsb
dec
aad
pop
int
lods
adc
fsubs
lahf
outsl
or
xchg
add
pusha
push
mov
push
adc
pushf
test
aad
mov
cmpl
addr16
repz
mov
imul
lret
mov
pop
adc
in
sti
mov
imul
sbb
ret
mov
adc
lret
cmp
adc
insl
cmpsl
cwtl
sbb
nop
push
lcall
xlat
leave
ljmp
lods
cli
mov
fistpll
arpl
lds
xchg
add
inc
addb
stos
pop
lock
pop
sahf
xchg
out
sbb
add
and
pop
js
enter
and
jmp
popf
movsl
dec
in
bnd
lods
das
fbstp
jecxz
mov
and
pop
adc
and
rcr
mov
out
loope
jp
imul
push
cltd
scas
enter
ljmp
sub
jmp
and
mov
ror
xchg
jge
or
lea
xlat
fdivp
lret
sbb
or
jle
mov
lods
mull
fucomp
pop
movsl
pop
call
fucomip
hlt
cmp
fists
iret
int3
jmp
loop
divb
mov
inc
sub
insl
movsl
sbb
mov
xchg
sub
adc
inc
in
xlat
mov
inc
and
inc
gs
dec
pop
lret
pop
imul
cmp
sbb
out
in
dec
sub
mov
inc
imul
fistl
loope
push
xor
ficoms
fwait
lods
and
stc
icebp
xor
fadds
ljmp
mov
pop
repnz
out
dec
aam
inc
fbstp
adc
mov
xchg
pop
adc
pop
fsubl
mov
in
int
test
cmpb
je
inc
ss
mov
jl
push
xchg
nop
fwait
adc
cmp
das
in
jmp
gs
pop
adcl
dec
xlat
pop
in
ljmp
sti
pop
es
rcr
repz
mov
arpl
popa
mov
xlat
nop
or
mov
fwait
jae
cwtl
lret
inc
sub
pop
xor
cs
pop
dec
iret
or
shrl
leave
test
scas
cli
push
jmp
scas
sub
ljmp
adcb
nop
stos
cwtl
push
scas
xchg
fisttpl
sahf
xchg
out
sbb
add
sub
pop
fs
lods
xor
pop
pop
icebp
leave
es
pop
fists
mov
add
sbb
mov
sub
sbb
mov
add
sbb
sbbl
movsb
jp
mov
cmp
enter
leave
cmpsb
inc
test
jb
inc
mov
cltd
push
sub
js
mov
xchg
test
loopne
add
xchg
cmp
or
pop
jg
xlat
fsubs
mov
and
push
adc
mov
jns
mov
div
out
repz
mov
loop
ret
jno
jp
aad
xor
jne
sahf
les
mov
test
mov
fidivl
mov
jae
inc
push
cmp
ret
add
push
or
pop
mov
inc
lcall
pusha
add
fsub
sbb
ret
scas
cs
icebp
leave
es
fists
fisttpl
mov
dec
xchg
and
or
cwtl
or
mov
xor
ror
notb
mov
loope
pushf
fwait
mov
fwait
adc
clc
xor
enter
rcll
dec
add
orl
subl
jb
fldl
xor
sub
xor
mov
cmpb
into
popf
sub
lock
mov
jns
into
mov
repz
pop
and
test
lock
sub
add
lods
xchg
sub
adc
inc
in
xlat
mov
inc
and
inc
xchg
rcr
aaa
xchg
repz
rcrl
test
roll
in
dec
or
mov
pop
imul
pop
sub
pop
pusha
xchg
loope
inc
mov
lods
jnp
jg
scas
loope
pusha
out
mov
inc
lret
pop
addl
or
jge
dec
call
stos
sbb
fisubl
xor
enter
mov
cmpsb
xor
xorl
out
test
xor
and
inc
je
int
js
push
dec
mov
cltd
fimuls
mov
mov
adc
pop
jae
loopne
pop
daa
dec
xchg
jecxz
xchg
mov
clc
out
cltd
lcall
ret
sbb
dec
add
xchg
or
mov
fwait
repnz
rcrb
sbb
test
sahf
mov
in
jb
inc
lret
pop
dec
pop
dec
cmp
sbb
shrb
cltd
repz
inc
sbb
sbb
mov
cmpsb
xor
jb
fcoml
lahf
adc
lret
add
push
nop
dec
push
scas
inc
xchg
ret
sub
pop
imull
popa
inc
sbb
mov
dec
mov
xchg
sub
and
push
mov
xchg
push
fisubl
and
std
bound
pop
cmpsb
in
out
cmp
mov
or
rcll
int3
inc
push
xchg
cmc
icebp
push
ficompl
jmp
cmp
hlt
imul
pop
js
into
inc
mov
icebp
outsl
inc
mov
xor
jp
aas
in
mov
lcall
mov
add
sub
mov
movsb
call
mov
inc
stos
pushf
adc
mov
lods
test
mov
sbb
int
dec
mov
cmpsl
mov
outsl
pop
fisttpll
test
or
push
into
push
adc
jle
adc
ja
lds
ljmp
cmp
lods
xchg
add
movsb
loop
mov
in
mov
leave
loop
in
nop
xchg
sbb
mov
inc
std
call
dec
mov
and
and
and
push
mov
xchg
push
fsubs
and
std
bound
pop
in
repz
mov
inc
inc
mov
orl
shrb
loop
call
jmp
and
mov
sbbb
fisttpll
pop
in
mov
dec
call
sbb
test
lahf
lds
add
mov
testb
jp
inc
rcrl
xor
mov
cltd
pushf
dec
and
sbb
in
std
test
and
inc
pop
rcr
dec
sbb
punpckhwd
cmpsl
xchg
xchg
stos
fsts
pop
dec
push
pushf
test
dec
mov
jecxz
loopne
fistl
cltd
xchg
cltd
shrb
test
fidivs
test
icebp
daa
testl
gs
sbb
inc
divb
sbb
adc
mov
mov
pop
xor
dec
mov
fnstenv
jmp
xchg
fdivrs
jmp
gs
fwait
mov
mov
fldenv
pop
push
adc
jns
jecxz
enter
or
fidivl
movsb
out
and
push
xchg
mov
lds
popf
sub
in
mov
jns
into
cmp
fisttps
mov
jp
add
cmp
mov
popf
mov
fsubrl
pop
int
sbb
rcrb
xchg
inc
adc
sbb
stos
fildll
stc
mov
lods
sti
mov
shrl
sbb
test
dec
xchg
mov
scas
testl
inc
jb
lods
rcrl
lret
jns
xchg
rorb
mov
outsl
jg
leave
push
nop
or
cli
stc
and
pop
add
dec
js
add
cwtl
rcrl
mov
rcll
pop
sbb
mov
mov
mov
and
call
mov
mov
call
cmc
push
loopne
cltd
add
sbb
sahf
mov
mov
fsubp
dec
mov
xor
jnp
dec
add
repnz
mov
jae
mov
pop
loop
inc
sbb
sahf
test
ret
test
ljmp
sarb
mov
movsb
fisubl
and
jne
std
inc
in
jae
sbb
push
test
sbb
jno
les
xchg
sub
dec
adc
xchg
fsts
cld
ret
sub
inc
sbb
scas
jg
leave
cwtl
fdivs
xor
pusha
mov
rclb
insl
ret
pop
push
andl
jns
dec
xchg
lock
pop
mov
cltd
xor
lods
inc
insl
xchg
popf
mov
mov
cltd
inc
adcl
fs
repz
mov
inc
inc
mov
jl
pop
xchg
xchg
jmp
cmpsb
dec
xchg
pop
mov
cmpl
repz
dec
call
push
mov
pop
iret
int3
inc
hlt
movsl
ret
aaa
lods
dec
or
adc
mov
and
mov
insb
jg
dec
mov
pushf
cmpb
adc
push
push
dec
cmp
sub
popf
inc
into
jae
sbb
mov
shl
hlt
push
jl
sbb
adc
or
stos
jge
dec
fsubr
sbb
fnsave
cltd
fcoml
sbb
add
cltd
lods
jle
mov
punpcklwd
cmpsl
xchg
out
leave
in
and
or
dec
ror
or
and
pop
and
repnz
movsl
ret
inc
mov
dec
in
push
jne
sbb
mov
fldenv
pop
fs
adc
mov
add
or
imul
sbbb
lahf
sub
sub
xor
mov
sbb
out
jecxz
push
mov
and
jns
roll
in
iret
rcrl
add
add
cmp
jnp
aam
cltd
mov
and
and
iret
xor
adc
add
pop
dec
sbb
lahf
sub
fildll
stc
mov
mov
adc
inc
or
mov
pop
or
xchg
lcall
jg
outsl
sub
sahf
loopne
pop
pushf
ret
add
dec
insb
jnp
scas
popa
inc
pop
jo
cmpsl
cwtl
fwait
leave
in
and
inc
add
add
push
sbb
or
lret
sbb
mov
test
mov
mov
mov
mov
cltd
xabort
xor
sti
sti
and
inc
int
loopne
dec
pop
xor
int3
xchg
jle
mov
push
adc
adc
cmp
idivl
pop
loopne
in
mov
addr16
adc
mov
jecxz
movsl
mov
cmp
roll
xchg
test
ret
test
mov
or
pop
dec
push
insl
inc
in
xlat
mov
inc
and
jmp
movb
or
repnz
cmp
stos
xchg
les
or
inc
mov
fistl
fimull
jae
xor
lods
jge
shrl
dec
sarl
fstps
adc
jmp
mov
andl
faddl
xchg
cwtl
shll
andb
adc
sbb
xchg
mov
mov
mov
and
fstl
jmp
cmpsb
ret
sti
xor
fsubl
mov
in
xchg
enter
aam
sub
sub
mov
fsubr
push
and
rcrb
mov
xchg
xchg
ds
mov
and
fstl
dec
mov
daa
repnz
mov
lock
loop
cmp
push
sarb
imul
fsts
mov
jp
lahf
push
lock
and
cli
test
cld
mov
or
stc
mov
pop
sub
les
xchg
rcl
jg
test
sbb
les
add
sbb
and
and
jmp
popf
test
icebp
bnd
lods
scas
fbstp
sub
add
add
xor
mov
dec
mov
xchg
sub
and
push
mov
xchg
cmpsb
leave
jmp
jno
and
sti
sub
cmpsl
in
out
cmp
mov
out
adc
dec
pop
push
int3
sub
mov
fsubr
push
and
jge
jge
xor
cmp
pop
mov
jecxz
xor
lahf
lds
add
mov
insb
sbbl
enter
sahf
test
ret
test
nop
movsb
ret
popf
fmull
repnz
aam
mov
jnp
inc
in
xlat
xor
test
xchg
subb
iret
push
lret
rcr
in
inc
mov
or
cmp
adc
mov
sbb
stos
dec
mov
xchg
sbb
sub
adc
popf
ret
scas
scas
pop
icebp
leave
orb
repnz
xor
fwait
sbb
mov
or
push
or
lret
sbb
push
push
fsubs
xchg
imul
sbb
enter
or
inc
test
jp
inc
mov
add
sbbl
add
mov
mov
push
adc
adc
pop
aad
mov
pop
loopne
jns
dec
inc
mov
sub
jp
aas
in
mov
lcall
mov
add
sub
mov
faddp
sbb
dec
movsl
mov
mov
dec
pop
dec
push
popa
lods
loopne
pop
test
pop
movsb
leave
test
pop
cs
mov
sahf
das
xchg
stc
cli
in
test
nop
sbb
jmp
aam
cltd
adc
xchg
sub
jne
inc
push
lret
stos
xchg
fimull
cli
outsl
sub
fsub
out
cld
ret
add
dec
insb
jnp
scas
jg
leave
cwtl
sub
jmp
rclb
insl
ret
mov
cmp
inc
mov
sub
gs
and
push
mov
inc
insl
xchg
les
arpl
jnp
enter
mov
mov
or
and
addl
mov
jno
adc
fadd
cli
lock
or
les
aas
mov
arpl
lds
cmp
pop
push
scas
push
lock
ret
cmp
pusha
push
mov
adc
insl
movsl
jmp
push
divb
nop
xlat
dec
sub
ret
push
repnz
out
pop
out
mov
sar
xor
pop
fnstsw
in
or
or
cmp
add
xchg
lcall
bswap
std
lock
movb
loope
fwait
loope
inc
xor
xor
jnp
jg
scas
pushl
add
repz
in
loope
cmp
ret
rcr
mov
stc
xor
loop
aam
popa
adc
adc
xor
cmpsl
ret
mov
jmp
popa
xchg
sub
int3
pop
and
mov
xor
push
dec
xchg
mov
jmp
gs
filds
aam
sti
fistl
dec
cmpsl
pop
lock
mov
clc
sti
pop
es
rcr
repz
mov
flds
hlt
mov
je
pop
or
mov
cwtl
or
cwtl
loop
les
sbb
test
push
in
dec
sbb
shrb
jmp
or
or
cmp
adc
lcall
adc
loopne
cmp
lods
jle
mov
dec
sbb
sbb
mov
out
inc
fwait
imul
mov
andl
stos
into
bound
add
and
dec
out
dec
mov
adc
mov
in
test
mov
jecxz
call
push
ret
add
adc
andl
sub
sub
mov
push
dec
mov
pop
ret
addb
pop
loopne
call
test
push
cmc
lret
daa
dec
mov
xor
inc
mov
add
cmp
out
sub
test
jmp
int
sbb
rcrb
sub
dec
adcl
inc
ret
push
in
movsb
fldcw
fucomp
je
ror
push
lret
rcrl
pop
inc
xchg
aam
and
sbb
adc
xor
cmp
stos
std
lock
add
data16
pop
scas
mov
lahf
jecxz
fdiv
and
sub
add
mov
mov
test
sbb
and
mov
testb
mov
repz
and
lret
xor
cmpsb
jnp
enter
mov
sti
and
inc
loopne
dec
pop
xor
int3
xchg
jle
mov
das
pop
cmc
hlt
imul
or
mov
popa
push
mov
shll
jp
aas
in
mov
jnp
mov
adc
sub
cmp
sbb
push
xor
sarl
test
push
stos
push
sub
movsb
leave
test
pusha
cli
push
int3
stc
mov
adc
cmp
divb
mov
push
sub
adc
sub
sub
cmp
jecxz
sub
mov
aad
mov
add
dec
xchg
push
je
int3
scas
rcrb
ss
fdiv
sti
sub
mov
mov
or
push
or
lret
adc
adc
fsubs
xchg
imul
xor
sti
sub
cmpsl
in
popa
pop
in
push
adc
mov
add
lret
lret
bound
imul
inc
test
fiaddl
les
fstl
dec
mov
mov
lahf
lret
jecxz
movsl
mov
out
dec
cmp
push
sarb
imul
icebp
push
testl
sbb
mov
cld
aaa
jae
dec
jo
mov
sbb
fwait
xlat
ljmp
test
loop
lcall
cmp
sbb
xor
les
push
in
bnd
jg
xchg
loope
cmp
fcmove
add
rclb
aas
rcll
push
fidivrl
or
mov
pop
fisubs
movsl
dec
aaa
xlat
sbb
xchg
push
call
icebp
pop
pop
sbb
daa
loopne
hlt
xor
xchg
and
mov
xchg
cmp
or
fisttps
call
jg
add
decl
or
out
mov
or
repnz
jbe
add
mov
pop
repnz
leave
addr16
aas
ficoml
imul
test
push
cli
mov
or
mov
ja
fs
fisttps
sahf
cmp
in
test
or
lret
nop
dec
mov
inc
inc
ret
fcmovnbe
ficoml
pop
es
or
add
cltd
pushf
adc
inc
shrb
cltd
fstl
adc
push
mov
xchg
pop
repnz
popf
dec
cmc
andl
int
dec
mov
repnz
xor
movsb
lock
mov
repnz
gs
push
or
outsl
popa
jne
outsl
or
pop
arpl
fwait
dec
and
test
js
sbb
fisubrs
test
xchg
cmp
or
pop
movsl
adc
add
add
mov
cmp
jp
add
rorb
jp
lcall
dec
xor
jmp
pop
icebp
imulb
jno
stos
mov
loop
gs
adc
xchg
repnz
inc
inc
fildll
inc
push
sbb
jno
add
sub
inc
shlb
sbb
or
test
fwait
xor
xchg
int
xor
jb
fcoml
mov
push
lret
ret
mov
mov
xlat
outsb
bnd
popf
push
fiaddl
in
pop
dec
sti
jae
adc
lret
or
fwait
push
dec
mov
xor
mov
int
cmp
push
aas
fwait
lret
in
mov
mov
xchg
cltd
out
cmp
mov
fdiv
addl
and
sub
fsubr
mov
rolb
or
and
cmp
and
mov
test
fwait
lahf
in
mov
and
sub
sbb
test
lcall
repnz
xchg
roll
sub
push
cmp
sub
cmc
sbb
mov
or
xor
cmp
or
cmp
adc
lock
mov
mov
paddw
imul
mov
mov
roll
add
jp
mov
int
lock
mov
lds
pusha
sarb
push
sbb
add
xor
aam
mov
jnp
inc
push
mov
xchg
sbb
sub
mov
pop
insl
push
inc
aad
jb
fwait
lea
inc
out
gs
addr16
jg
pop
mov
jo
cmp
xchg
sub
shr
mov
rolb
adc
lds
cmp
and
mov
test
fwait
lahf
in
cld
add
loope
es
sub
sbb
test
lcall
xor
inc
dec
and
push
cld
int
cmp
sub
cmc
sbb
clc
and
popa
in
inc
mov
or
cmp
adc
pushf
stos
pop
sub
mov
test
add
cmp
lds
pop
jmp
pusha
jle
das
pop
icebp
or
cmp
sti
daa
sbb
cld
sar
dec
mulb
sbb
iret
cld
add
mov
test
scas
divb
sbb
aaa
push
leave
jne
sbb
daa
loopne
js
enter
fcomi
out
xlat
xor
into
add
and
rolb
ss
or
mov
mov
andb
nop
and
pop
shrl
mov
adc
xchg
mov
sbb
push
xor
mov
sarb
push
inc
jecxz
or
cmpsl
adc
andb
or
sbb
imul
stc
xor
fisttpll
frstor
mov
xchg
jp
jmp
int3
sahf
sbb
lret
rcll
adc
mov
push
int3
pop
jl
rcl
lcall
lcall
sbb
cmovns
and
inc
pop
leave
bnd
inc
mov
out
or
repz
cmp
jl
fadd
int
ljmp
out
sbb
shlb
cltd
insl
fsubs
push
int3
and
fstps
cmp
sbb
arpl
add
xchg
inc
dec
mov
sbb
dec
jl
xchg
adc
ret
push
sbb
ret
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
fmull
cwtl
dec
xlat
mov
and
enter
scas
arpl
mov
jne
adc
cmp
push
xor
div
pop
addr16
dec
dec
test
sbb
ss
or
mov
pop
xor
scas
shl
dec
add
mov
rcrb
jnp
mov
mov
ficoms
mov
ljmp
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
subb
or
add
mov
add
push
test
cs
push
test
or
shrl
int3
push
xor
lds
loopne
shrl
stos
or
mov
iret
cmpsl
mov
data16
sbb
outsb
aaa
adc
mov
xchg
ret
push
iret
ljmp
xlat
int
loopne
cmp
fisubs
test
ret
cli
test
iret
add
ret
xchg
xchg
fistl
test
add
or
lea
pop
lds
stc
jmp
pusha
jle
das
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
jbe
adc
scas
lahf
push
lds
add
jecxz
iret
icebp
in
jns
outsb
out
lahf
stc
cwtl
shll
add
add
jmp
lds
pop
pop
xor
imul
pop
stos
and
fistps
sbb
xchg
mov
xor
and
cmp
cmc
mov
cmpsl
mov
push
jmp
incb
xlat
ret
mov
subl
shrb
xlat
test
lret
push
push
mov
insl
movsl
imul
mov
call
dec
movb
cmp
test
pop
andl
faddl
nop
fdivl
ficoml
lds
repnz
jl
rorl
cmpsb
lods
adcl
sub
rorl
js
lods
cs
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
sub
pop
jae
inc
insl
out
pop
sarl
jle
ljmp
xor
xchg
adc
daa
bound
inc
inc
popa
movd
decb
js
push
lret
lods
je
or
int
push
dec
in
xor
aam
fndisi(8087
push
iret
inc
fildll
pop
mov
sbb
sahf
mov
adc
mov
shlb
mov
cwtl
cwtl
or
cld
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
sbb
fcomps
jne
insl
jle
mov
xor
das
movsl
mov
cs
sahf
pop
and
test
out
jo
jecxz
pop
mov
fcom
xor
out
das
dec
lock
jl
das
dec
iret
ror
jmp
fld1
stc
jp
scas
scas
loope
sti
jnp
out
scas
lods
icebp
sbb
stc
out
xchg
out
imul
out
dec
push
or
and
or
test
cs
inc
cmpsb
jg
stos
les
fbstp
std
or
pushf
jle
pop
mov
add
add
into
inc
lahf
fs
mov
mov
test
lcall
dec
test
stos
stc
imul
mov
aam
mov
xchg
push
negl
in
lods
mov
fldenv
cmpl
xchg
stc
cli
in
test
or
test
pop
imul
outsb
cmpsb
sub
mov
addb
rcrb
inc
sub
jp
pop
lcall
adc
pop
mov
jecxz
push
cmp
loop
out
repnz
jg
out
das
dec
iret
std
arpl
jecxz
fwait
scas
mov
nop
arpl
push
jmp
push
jae
push
sbb
jge
negl
fildll
lahf
stc
cwtl
shrl
pushf
ret
addr16
sub
or
dec
dec
adc
rcrl
or
sbb
and
xchg
out
xlat
push
sbb
mov
inc
jge
pop
ret
sbb
cmp
out
mov
jne
xor
pushf
jle
sbb
mov
sbb
pushf
push
nop
push
fnstcw
fcoms
aam
xor
rol
sub
mov
pop
imul
out
ljmp
insb
shlb
movsl
out
stc
xchg
scas
push
mov
dec
xor
jb
mov
mov
push
dec
cmc
je
cmp
pop
and
call
jl
pop
inc
fstl
pop
fprem1
jmp
addr16
repz
rcrl
jp
dec
cmpsl
daa
sub
mov
sub
mov
mov
inc
arpl
out
fxch
lds
sbb
arpl
shl
mov
pop
dec
inc
dec
fmull
mov
ja
cmp
push
mov
test
out
xchg
sbb
fists
add
jmp
popa
mov
mov
sti
add
je
mov
xor
dec
sbb
sub
movsl
inc
aaa
stos
push
insb
sarl
adc
test
cmc
sbb
std
fistpll
stc
mov
mov
test
sbb
subb
imul
cmp
vsubss
xchg
cmp
push
mov
int3
xor
repz
dec
add
jecxz
popl
rclb
sarb
out
sbb
cmpsb
fldt
imul
pop
mov
xlat
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
xchg
inc
push
fwait
sub
int3
push
sub
push
out
push
cmp
roll
cmp
push
aam
cmp
mov
aad
insl
ficomps
push
shrb
mov
rcrb
adc
dec
xor
into
mov
je
or
jne
sub
add
inc
ss
push
mov
adc
jno
mov
or
shl
sbb
cmp
mov
in
jnp
cli
jnp
inc
mov
add
adc
push
add
and
mov
mov
negb
mov
adc
fdivrl
jl
aas
xlat
cmp
lahf
lea
stc
testb
pop
test
mov
or
ret
nop
and
push
xchg
in
lcall
inc
insb
je
out
movsl
pop
mov
and
or
inc
ret
in
cmp
movsl
cltd
lret
gs
rcrb
iret
mov
jbe
mov
icebp
aaa
mov
sbb
jge
les
jmp
sbb
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
ljmp
inc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
pop
mov
test
js
call
aam
enter
loopne
hlt
mov
xchg
mov
add
orl
sub
xchg
adc
pop
stos
mov
ret
cmp
and
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
movsl
or
cmc
pop
into
push
dec
or
lret
movsl
gs
or
pop
push
stos
xchg
scas
lods
pop
imul
pop
adc
popf
ljmp
mov
mov
push
aam
sbb
jge
dec
inc
sbb
shlb
jnp
xchg
and
in
mov
sti
and
mov
and
mov
push
mov
jle
lds
pop
movsl
arpl
incl
or
aas
shlb
dec
repz
pop
mov
xor
rol
sbb
xchg
xchg
mov
jbe
fnstsw
int3
jnp
popf
cmc
hlt
std
mov
sti
and
test
jnp
sbb
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
test
out
inc
mov
and
mov
sbb
bound
add
imulb
push
inc
dec
movsl
inc
push
sbb
cli
sbb
sub
jp
cmc
leave
push
jmp
push
icebp
add
inc
fdivrl
cltd
rcr
adc
pop
pop
inc
imul
jge
lcall
lcall
adc
dec
movsb
aad
xor
xor
mov
mov
popf
stos
js
inc
mov
pop
jb
add
mov
out
push
test
out
movsl
pop
popa
outsl
ja
fucomip
js
jo,pt
push
sub
scas
push
movl
in
jle
fildll
or
les
inc
outsb
add
inc
popf
or
dec
sarl
aam
mov
negl
inc
int
sub
repz
lods
loope
dec
iret
rcl
pusha
mov
jl
xor
inc
daa
jne
xchg
test
stos
xor
or
push
xorl
dec
aam
sub
push
test
push
cmc
movsl
inc
jno
and
push
inc
out
xor
into
repz
cmpsl
mov
mov
xor
add
addb
shll
push
push
xchg
aam
xor
dec
popa
push
into
add
das
mov
inc
xchg
and
insl
mov
jnp
and
test
loop
xchg
adc
in
addl
xchg
addl
add
pop
push
ja
into
ds
pop
iret
rorl
xchg
xchg
insb
sub
leave
bnd
mov
xchg
and
ss
in
add
ret
cwtl
push
jne
inc
sahf
insl
sub
clc
mov
in
out
dec
xchg
or
lods
sbbl
jae
or
xchg
in
dec
or
repnz
jle
adc
rolb
adc
popa
push
sub
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
orl
xchg
test
sbbb
rclb
sub
add
movl
push
nop
dec
and
pop
lret
test
adc
push
push
mov
pop
and
jne
in
jno
insb
into
pop
mov
repz
or
mov
pop
or
cmp
or
jl
cwtl
dec
xor
cmp
jb
adc
imul
pop
dec
test
std
test
es
mov
inc
push
adc
push
dec
dec
adc
xor
adc
and
sub
out
push
xor
push
cmp
or
dec
push
fs
inc
xlat
repz
xchg
fwait
cmp
lock
lods
hlt
addr16
fistpl
push
inc
lahf
mov
adcb
frstor
jmp
push
dec
aad
imul
into
inc
mov
inc
dec
jg
shlb
lret
rclb
mov
fwait
cmpsb
imul
repz
jno
in
mov
mov
and
xchg
sbb
xchg
cmp
and
xchg
cmp
gs
and
mov
adc
icebp
jmp
xchg
sub
mov
push
xor
cmp
pop
inc
push
sbb
or
ret
jo
xor
popf
and
inc
cmp
jo
cmp
xchg
sub
cs
dec
popa
pop
adc
mov
pop
adc
call
cmp
pushl
ficompl
popa
xchg
push
sbb
lods
stos
sbb
outsl
in
lods
add
fldcw
dec
lods
data16
sbb
jns
adc
call
mov
mov
fwait
test
mov
pop
in
mov
pop
in
jmp
push
xor
hlt
inc
mov
add
xchg
or
fidivrl
fucompp
xchg
outsl
or
std
repz
hlt
jle
jp
add
mov
scas
aaa
mov
cli
jnp
inc
mov
mov
jne
idiv
add
fdivs
cmc
or
xlat
lock
sub
cli
aad
jns
fcoml
testb
jmp
ja
mov
dec
bound
mov
sbb
pop
out
sbb
pop
gs
and
test
cmc
hlt
mov
adc
add
sub
jne
les
jl
cmp
clc
jp
add
cltd
sub
adc
aas
add
lods
cmpsb
sbbb
lret
mov
pushf
dec
push
fcmovnbe
stos
mov
rcll
pushf
pop
pop
pop
loope
lcall
stc
jg
imul
jecxz
sub
mov
cs
stos
adc
add
add
test
imul
push
es
mov
sahf
sti
add
inc
mov
leave
pop
cmp
js
in
xchg
jl
sbb
fistl
popl
push
jo
test
mov
xor
xchg
xchg
inc
push
mov
or
in
insl
xchg
popf
pop
adc
ljmp
repz
out
roll
enter
pop
test
mov
xorb
aaa
push
addr16
rorb
aaa
mov
dec
sahf
inc
adc
inc
cmp
jle
mov
push
sahf
sub
mov
sbb
daa
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
aad
inc
sub
inc
fs
push
cmp
sub
cmc
sbb
xor
fdiv
bound
sbbl
ljmp
pop
xchg
je
xchg
cmpsb
dec
ja
test
mov
cmc
int
addr16
dec
fmull
es
lahf
cmpsl
pop
icebp
or
je
cltd
adc
jb
adc
rolb
subl
adc
mov
jge
xchg
cmc
mov
add
mov
mov
or
lahf
cltd
pop
adc
stos
clc
xor
cmpb
je
test
loope
and
arpl
adc
xor
ret
xorb
or
mov
fmull
mov
das
insl
lahf
mov
js
mov
push
aas
pop
out
pop
sub
jbe
sub
push
sbb
mov
jmp
mov
xchg
addr16
mov
pop
push
ljmp
int
push
lret
push
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
inc
fmuls
xchg
fisttpl
add
jp
add
cmp
push
mov
mov
sahf
xchg
sbb
js
sbbl
fnsave
add
jns
in
xor
or
mov
mov
fwait
inc
push
rol
lock
outsl
jae
fsubrp
cmp
scas
xchg
scas
out
xor
out
mov
jns
or
clc
int3
pop
into
and
repz
in
adc
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
imul
int
jg
sbb
jns
pop
mov
test
add
in
mov
push
jl
cltd
jo
lock
jge
cmc
cld
or
lret
fdivl
xor
test
dec
imul
xchg
shlb
stos
lods
adc
dec
inc
dec
ficoms
mov
adc
cmp
sub
inc
in
mov
loope
pop
lods
push
xchg
mov
push
or
dec
shl
je
sub
push
xlat
adc
dec
and
sub
mov
ret
mov
and
aaa
out
jno
jmp
cmp
mov
imul
push
or
je
imul
pop
roll
mov
rorl
inc
and
aaa
aad
cmp
ret
ret
lea
xor
mov
cld
nop
es
xchg
stc
mov
and
inc
push
inc
cmp
ret
mov
dec
in
pop
and
fmull
pop
outsl
cs
xor
add
ret
les
push
add
ja
into
push
cmp
mov
jecxz
pop
add
les
insl
movsl
rcll
pop
iret
and
sbb
pop
mov
mov
jne
aas
push
enter
cmc
movsl
testb
in
aam
inc
stos
xchg
mov
sbb
or
imul
inc
adc
mov
leave
jnp
mov
shl
cmpsb
fsubr
adc
xor
and
adc
sbb
mov
sub
or
sbb
mov
fwait
push
dec
mov
mov
enter
xchg
cmc
mov
stos
dec
sub
pushf
xchg
push
bound
out
loopne
aas
movsl
dec
fistl
ficomps
xchg
fistpl
or
and
mov
loopne
mov
sbb
sub
idivb
in
into
shrl
movsl
lea
add
pop
shrl
or
xlat
int
add
in
and
lahf
inc
push
jl
fcom
and
lcall
daa
and
iret
mov
sbb
mov
push
ja
inc
in
scas
jge
inc
sbb
inc
aaa
lret
fucomp
add
fldt
repnz
dec
inc
sar
or
jg
test
sbb
mov
les
enter
movsb
jb
das
push
xor
add
sub
fstpt
loopne
adc
dec
mov
lds
adc
in
ja
or
in
mov
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
aam
xor
imul
push
push
push
push
adc
test
pop
sub
fucomip
repz
sahf
in
cmc
mov
push
rcrl
enter
sbb
loopne
mov
cmpsl
mov
data16
sbb
ljmp
jnp
stos
inc
js
gs
stc
or
xchg
addr16
mov
cmc
cmp
pop
xor
xchg
xor
inc
pop
jnp
lret
nop
cmp
push
ret
mov
cwtl
mov
dec
movsb
aad
xor
xor
mov
bound
pop
cld
loop
in
nop
xchg
lahf
push
cwtl
lock
sub
scas
outsb
repz
and
sub
xchg
rcrb
mov
fists
xlat
cltd
aad
imul
test
or
fbstp
out
lods
sti
jae
arpl
and
push
ljmp
add
mov
sbb
jb
mov
xor
call
rcrl
mov
into
fwait
cmp
pop
dec
sbb
jnp
hlt
leave
add
sbb
test
lcall
daa
and
iret
mov
sbb
mov
push
ja
inc
in
scas
cmp
inc
cmpl
jae
movsb
pop
mov
mov
mov
jp
sub
dec
and
addl
xchg
cmp
inc
mov
mov
mov
int3
imul
and
iret
test
btr
outsl
jno
lahf
data16
push
ljmp
popa
mov
mul
addr16
out
out
mov
sbb
rcrb
push
mov
cmpsl
test
aas
xchg
xor
jne
cltd
cmpsl
inc
popf
cld
dec
or
and
cmp
mov
adc
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
mov
cmpsl
mov
xchg
or
and
adc
and
ss
int
inc
mov
sub
mov
pop
imul
fsubs
js
push
xchg
mov
bound
dec
mov
push
mov
les
push
sbb
lcall
insl
movsb
push
shrb
sub
inc
cmpsb
lea
scas
jle
xchg
xchg
mov
mov
fdivrs
insb
out
mov
cmp
insb
aas
xchg
and
mov
fsubrs
data16
mov
test
ljmp
mov
loop
cmp
adc
ret
or
hlt
pop
sub
mov
pop
xor
or
mov
rol
xchg
out
stos
mov
dec
push
sbb
int
mov
mov
xchg
fbld
in
dec
sub
push
add
xchg
shl
mov
cmpl
dec
mov
imul
loop
notl
repnz
stos
inc
in
test
mov
cwtl
pop
pushf
cmp
mov
or
sbbl
jecxz
stos
std
cld
jns
rcrl
rorb
jb
fisttpll
cmp
lds
fucomp
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
out
in
xor
jnp
mov
nop
ljmp
xchg
movsl
dec
hlt
ja
std
sbb
bound
jecxz
jns
ret
push
cmpsl
inc
lret
xchg
scas
sbb
in
jp
cmpsb
bound
or
iret
repnz
jmp
iret
movsl
mov
cmp
xor
push
in
nop
shll
fucom
cli
xor
roll
inc
test
lods
mov
cmp
and
sbb
lock
inc
adc
xchg
pop
adc
sbb
rorb
cwtl
ret
push
jnp
fistl
lret
lds
push
jns
lahf
cli
mov
cmp
iret
pop
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
fidivrs
ret
int
lcall
push
and
and
popa
xchg
jecxz
xchg
das
cmpsb
int3
sub
in
mov
scas
shrb
sub
movzbl
mov
jne
sahf
fidivrs
rorl
sub
or
pfacc
jle
fwait
inc
jo
rorl
test
push
enter
test
and
xchg
sqrtps
outsl
or
mov
out
xchg
out
enter
es
mov
mov
add
and
and
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
sbb
pop
push
mov
cmp
ja
xchg
movsb
enter
cmc
or
outsb
xor
les
sbb
adc
and
call
repnz
sub
test
iret
add
fidivrl
or
dec
fistl
or
lea
pop
lds
pop
jmp
pusha
jle
das
jb
jle
mov
std
cli
jnp
inc
mov
mov
jne
idiv
add
push
pop
push
pushf
incl
out
jno
sbb
scas
lahf
scas
in
cli
jnp
out
mov
push
sub
adc
jp
pop
lods
divl
stc
into
add
and
rorb
ss
cmp
sub
fcmovu
mov
or
jbe
push
mov
aam
bnd
or
mov
add
inc
mov
clc
pop
das
mov
mov
mov
sti
je
loope
ret
aad
shlb
stc
add
mov
cmp
sbb
in
popf
jnp
mov
pop
dec
cltd
lahf
push
sub
movsb
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
or
fs
data16
or
cmp
dec
mov
push
mov
cmc
repz
xchg
push
mov
shlb
pop
xchg
inc
mov
lock
jmp
push
jle
pop
xchg
mulb
mov
fadd
or
jo
inc
int
xchg
test
repz
jp
lds
iret
lret
scas
enter
and
adc
mov
dec
jno
cltd
push
push
sbbl
inc
dec
mov
loopne
sub
and
and
dec
inc
dec
mov
add
ret
cmp
and
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
push
cmpb
sub
sahf
imul
jns
loope
sub
add
push
adc
jp
pop
xchg
addb
mov
insl
outsb
pop
cltd
enter
sub
xchg
push
sarb
xor
xchg
sub
pop
mov
adc
repz
xchg
mull
cmc
push
sbb
mov
aaa
mov
in
push
aam
ret
inc
jge
imul
stos
cmp
sub
fwait
insl
add
test
add
sbb
add
andb
js
sbb
mov
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
and
lcall
mov
xor
into
cltd
sub
push
mov
ret
dec
ficomps
pop
movsl
je
push
les
mov
mov
mov
leave
fs
iret
push
add
jmp
add
or
jmp
js
scas
mov
xchg
sub
add
dec
fidivrs
lods
mov
fstpl
icebp
xchg
jp
fisttps
mov
mov
jle
js
inc
mov
pop
jb
add
mov
out
push
scas
shll
sub
add
lea
addr16
mov
fstl
pusha
in
loop
dec
pop
bound
out
loopne
or
outsb
add
lock
mov
loop
mov
ss
mov
pop
push
xchg
push
decb
call
jne
pusha
add
in
and
xor
repz
adc
and
jns
pushf
rcrb
sbb
sbb
fisttpl
ficomps
cmc
mov
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
sahf
std
and
dec
cmpsl
xchg
int
sar
enter
adc
mov
mov
dec
xchg
aam
jne
sbb
push
inc
ficoml
dec
inc
cmc
pop
dec
push
sarl
shr
pop
lret
xor
fisubs
xchg
mov
xor
arpl
adc
mov
cltd
scas
push
push
ret
inc
lock
jl
das
dec
xor
mov
fwait
scas
fsubl
sbb
push
rcl
ss
cmp
ja
mov
clc
aaa
pop
push
dec
loope
das
xor
mov
cwtl
cltd
out
sbb
mov
ja
or
mov
or
loopne
cmp
idivl
arpl
pop
xor
fisttpl
pusha
jae
les
xor
loop
sarl
cmc
and
fistpll
bound
rol
fiadds
and
arpl
movb
fsubrl
stos
shl
xlat
add
lods
fldt
ljmp
cmp
gs
cmp
dec
jnp
cmc
bound
sub
out
dec
and
ret
mov
inc
push
insl
imul
push
mov
pushf
dec
adc
or
insb
jb
lods
inc
push
pushf
sub
cmp
call
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
sti
mov
sub
push
mov
add
jmp
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
cmpb
je
test
loope
and
jecxz
pminub
mov
sbb
jl
cmp
xor
mov
add
sub
inc
out
push
cmp
roll
mov
sub
insb
push
sub
push
mov
mov
rorl
pop
test
push
stos
lea
ljmp
movsl
leave
mov
imul
inc
xor
add
cmpb
xchg
aas
cmpsb
enter
lods
mov
jae
data16
pop
test
mov
or
out
sahf
xchg
jl
call
je
cmp
cmp
xor
adc
rolb
sub
xchg
xchg
aas
inc
mov
pop
jge
xchg
cmc
mov
jp
fst
in
mov
mov
or
mov
add
pop
std
bound
cltd
add
aaa
jl
pop
push
mov
dec
test
imul
aad
sbb
or
and
and
pop
jb
loope
call
punpcklbw
loopne
xor
push
and
xchg
cli
mov
inc
xchg
enter
lock
icebp
int
imul
pop
pop
xor
sbb
in
jmp
test
aaa
jns
pop
push
mov
cli
mov
sti
stc
cli
in
test
or
test
lahf
imul
outsb
cmpsb
sub
mov
mov
dec
mov
xor
popf
aad
inc
gs
iret
movsb
stc
movswl
outsb
jno
sbb
jge
pusha
cmp
das
es
add
mov
mov
in
or
jle
les
test
ret
test
leave
jnp
sbb
xor
sub
adc
xor
popa
movsl
mov
enter
inc
gs
cltd
in
push
in
rcl
dec
sub
ljmp
mov
ficoms
sub
xchg
lods
lcall
popl
mov
cmp
jp
add
add
mov
sbb
cltd
orb
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
pop
cmp
dec
cltd
jae
pop
fistpll
add
mov
xchg
lods
push
outsl
sbb
ja
in
es
shlb
jnp
xchg
and
cmp
dec
dec
dec
cmpsb
xor
dec
push
pop
mov
pusha
jp
mov
push
push
or
jb
pop
in
mov
pop
das
rorl
scas
pushfw
add
popl
mov
dec
pop
call
xchg
sbb
jnp
dec
ljmp
sti
lahf
movsl
call
add
xor
repnz
hlt
add
pop
shrl
push
push
rcl
hlt
cmp
or
movb
cs
push
lds
jle
pop
inc
jl
and
cmp
xor
xchg
dec
stos
add
repnz
sbb
sahf
add
sarl
ss
mov
or
fisubl
cmp
inc
push
ret
call
xor
stos
enter
and
xrelease
cltd
outsl
aad
sbb
adc
push
stos
fnsave
lds
ret
adc
mov
scas
adcb
mov
xor
cmc
xor
jl
mov
inc
mov
cmc
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
ljmp
repz
out
sarl
out
push
pop
pushf
xchg
dec
adc
cmp
sub
mov
dec
adc
lcall
and
test
pop
shrb
int
push
fisttpl
pop
add
loop
shrl
stos
or
outsl
aam
lods
and
es
xchg
mov
aad
insl
ficomps
fldcw
stos
lea
gs
imul
rol
repnz
fwait
aad
and
fcoms
int3
or
shrb
shll
and
xor
add
sbb
call
add
cmp
add
mov
scas
aaa
mov
cli
jnp
inc
mov
add
adc
push
add
and
mov
mov
jbe
call
fldcw
test
loopne
test
aas
sbb
bound
lea
mov
mov
xor
insb
loop
loope
xchg
fdivrs
mov
daa
lahf
pop
movsl
ficomps
stc
lea
mov
in
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
movsb
fyl2x
mov
movsb
lds
nop
lds
mov
fldenv
testl
loope
lret
movb
mov
shll
adc
adc
xchg
jnp
imul
outsb
lret
jbe
lahf
and
push
dec
call
xor
aas
scas
xchg
and
test
xchg
stc
and
sub
shrb
stc
dec
dec
sub
lret
jl
das
inc
iret
shlb
push
cmp
test
xlat
jae
je
repz
push
repz
mov
into
mov
shll
loopne
hlt
mov
xchg
mov
add
orl
sub
xchg
adc
pop
stos
mov
ret
cmp
and
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
lds
imull
sahf
jnp
popa
mov
fwait
and
cmp
mov
or
mov
xlat
push
xor
das
cmpsb
int3
sub
in
mov
scas
shrb
fs
mov
add
xchg
mov
cmpsb
cltd
push
inc
ret
jb
fs
push
out
and
gs
fwait
cmp
mov
aam
fdivrs
inc
out
mov
cmp
fnsave
sti
sti
and
test
fisubrl
shrb
cmp
mov
popa
dec
mov
out
test
push
push
xor
and
mov
jmp
aad
mov
or
cmp
rol
int
mov
xchg
rolb
inc
out
mov
pop
aas
jle
lahf
dec
and
push
in
shl
mov
or
fisubl
cmp
inc
push
ret
call
ds
movsb
mov
push
gs
arpl
aaa
jl
imul
sarl
xchg
pop
cmc
add
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
dec
adc
adc
fisubrl
jnp
inc
mov
add
adc
cwtl
add
and
mov
mov
negb
ret
jns
push
jae
jp
mov
push
ja
lods
lret
cmpsl
dec
cltd
les
das
xchg
and
lds
xor
dec
popa
sub
and
movsb
adc
faddp
loopne
shrb
mov
nop
sbb
lods
xor
or
cmp
or
add
lock
add
mov
cmc
sub
xor
icebp
cli
jp
adc
repnz
jns
lds
nop
lds
mov
fldenv
testl
roll
arpl
jge
les
in
mov
xor
movsl
mov
gs
fisttps
and
push
pop
xchg
test
shll
and
pop
rclb
inc
push
repnz
aam
cmpsl
loope
popl
mov
add
add
xchg
adc
mov
and
or
insb
int3
xor
in
pop
popf
xor
jmp
std
mov
sti
and
test
pop
imul
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
mov
out
inc
mov
and
mov
dec
dec
xchg
jle
add
mov
dec
lods
jg
leave
gs
aaa
imul
ret
stos
out
mov
push
imul
in
movsb
mov
bound
push
xchg
xchg
mov
repnz
mov
push
jns
dec
int3
std
push
cmp
scas
roll
inc
fnstsw
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
fisttpl
test
dec
mov
hlt
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
jecxz
pop
sub
imul
sbb
xor
lret
push
inc
push
cmpl
or
push
sub
push
sub
push
out
push
cmp
roll
aam
push
sti
cmpl
mov
das
inc
scas
dec
imul
test
movsl
sub
loopne
lret
inc
dec
push
adc
dec
xor
xor
div
call
nop
mulb
push
ret
insb
mov
push
sbb
lret
sub
push
xchg
outsl
cmp
lds
push
fdivrl
jmp
mov
ret
xor
inc
out
sub
sbb
mov
fwait
push
dec
mov
mov
lret
pop
jge
xchg
cmc
mov
cmp
movsb
ret
xor
cmpsl
mov
jae
mov
int
jno
jecxz
fcoms
mov
nop
pop
adc
add
sub
xchg
vsqrtss
add
notb
sub
addr16
std
mov
jno
jl
ficoml
adc
jmp
mov
push
jbe
add
sar
sbb
ds
stc
imul
mov
aam
mov
xchg
push
negl
in
lods
mov
fldenv
repnz
hlt
je
sahf
das
xchg
stc
cli
in
test
or
test
ljmp
inc
outsb
cmpsb
sub
mov
adc
mov
leave
ljmp
jae
in
mov
scas
jmp
xchg
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
icebp
or
outsb
ds
je
xor
mov
call
mov
fsubl
jne
stc
lcall
mov
pop
add
dec
xchg
mov
stc
and
sbb
mov
test
or
aas
test
fildl
sbb
ret
arpl
lds
ret
jl
jg
fbstp
test
pop
mov
jmp
popa
int
pop
fcomi
imul
push
stos
loop
sub
ljmp
cli
sub
mov
adc
jno
int
add
pop
lcall
divb
jo
xor
sbb
or
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
fucomp
pop
pusha
jle
das
pop
icebp
or
cmp
andl
mov
in
testl
mov
fsts
pop
add
and
push
xor
loopne
outsb
mov
or
out
scas
mov
lods
pop
aam
into
repz
lahf
lods
xlat
xor
mov
mov
push
test
push
andl
divb
push
lret
shrl
pop
sbb
test
arpl
call
int
push
sub
push
xor
leave
pop
ret
and
aam
mov
test
xor
or
sbb
test
nop
lret
movsl
iret
sbb
and
pop
stos
mov
ja
xchg
jge
push
std
ljmp
in
and
jne
sub
ret
mov
idivl
int3
and
inc
push
mov
pop
mov
jbe
xorl
aad
in
cmpsb
aas
stos
jle
xchg
test
and
ret
cmpsb
mov
addl
pop
rorl
lods
sbb
or
call
mov
add
xchg
mov
ficomps
lods
jl
cmpsb
xchg
sub
cmp
jno
mov
lahf
inc
push
xchg
fnsave
imul
mov
icebp
enter
push
leave
daa
in
hlt
xor
and
gs
test
fisubs
faddl
push
cwtl
cmpb
xor
les
cli
jmp
aas
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
sar
jecxz
sbb
sbb
ja
push
mov
loopne
mov
je
xchg
ja
jmp
or
pop
cmp
jne
movsb
pop
repnz
cmpsl
sub
int3
or
sub
dec
repnz
mov
int3
add
scas
push
mov
pop
dec
xchg
adcb
gs
lods
pop
adc
pop
pushf
jle
xor
js
in
lds
push
xlat
pushf
sbb
and
stc
and
popa
cmp
ret
pop
outsb
mov
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fsubs
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
inc
and
or
loopne
cmp
adc
mov
and
jp
insb
and
pusha
or
jae
les
xor
leave
xor
hlt
pop
lret
cmp
mov
pop
inc
xchg
hlt
je
or
mov
add
fnsave
jg
mov
pop
in
nop
and
les
sbb
sub
mov
pusha
in
movsl
dec
push
test
xor
test
ret
push
rorb
push
fisttpl
mov
adcl
jbe
sub
sub
in
ret
dec
mov
and
aad
bound
mulb
scas
repz
push
lock
cmp
insb
movsl
pop
jno
mov
xor
ret
scas
loop
xor
lods
dec
mov
outsl
cs
repnz
test
jp
mov
pusha
aaa
jge
xchg
test
addr16
add
and
xchg
jmp
sbb
push
jle
add
fsts
inc
pop
cmp
leave
sti
int
clc
test
cmp
and
sbb
jno
lods
fwait
lahf
lds
push
or
inc
movsl
xchg
sub
pushf
ret
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
jge
lahf
jge
mov
notl
repz
sarl
xor
jbe
pop
xchg
xchg
mov
mov
push
in
bound
mov
and
sub
outsl
push
movsl
sub
aad
xchg
dec
arpl
xchg
ret
pop
mov
fucomp
loope
sarl
push
cld
loop
add
roll
mov
sarb
mov
cmc
or
or
fsubs
mov
jg
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
jecxz
lea
and
andl
fwait
ror
xchg
rolb
jb
inc
inc
pusha
ds
out
inc
xchg
jp
call
into
inc
xchg
sub
idivb
rol
leave
and
sbb
and
lods
jae
mov
mov
rcl
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
or
mov
mov
cmp
cmpsl
test
imul
outsb
cmpsb
sub
mov
mov
push
iret
sbb
push
shr
inc
xchg
jae
in
mov
push
iret
mov
lgs
outsb
out
arpl
das
push
sub
push
clc
mov
fsubrl
cmc
jl
fmul
adc
outsl
cmp
fld1
stc
jp
scas
scas
loope
sti
mov
cltd
mov
pop
cs
icebp
in
jns
outsb
out
lahf
stc
sbb
pop
inc
loope
lea
pushf
shrl
loope
inc
push
push
adc
ret
test
lahf
dec
dec
call
clc
test
adc
mov
hlt
xor
adc
ret
ficomps
mov
sub
shll
testb
pop
mov
mov
sbb
sub
push
ja
inc
in
scas
jge
dec
pop
mov
pop
inc
cmpsl
lret
fucomp
add
fldt
repnz
dec
inc
shll
adc
add
les
icebp
inc
scas
xchg
stos
cmc
adc
lods
nop
xchg
push
and
and
popa
xchg
hlt
inc
les
jecxz
cmpsl
dec
cwtl
loop
cs
fistl
outsl
xchg
and
in
ss
mov
out
and
mov
das
je
mov
sub
xchg
jbe
popf
push
sbb
add
rcll
movsb
cld
popa
xchg
repz
std
dec
data16
inc
aad
mov
pop
out
in
loop
push
adc
and
lea
push
pop
pop
push
test
movsl
repz
and
lds
add
mov
cmp
jp
add
add
mov
sbb
push
xor
mov
cld
movsb
fsubrl
stos
shl
xlat
jl
push
xor
mov
and
adc
inc
cmp
xor
dec
inc
sub
sub
or
je
pop
inc
shl
je
lret
shl
jmp
ljmp
and
sub
es
test
pop
and
ja
and
arpl
das
push
imul
fiadds
inc
jl
jmp
out
cmp
sbb
pop
test
test
add
popa
stos
lods
icebp
sbb
icebp
jnp
sahf
sti
lahf
lods
call
adc
jp
gs
cltd
clc
push
in
rcl
dec
sub
ljmp
mov
ficoms
sub
xchg
lods
lcall
popl
mov
cmp
jp
add
add
mov
sbb
push
xor
mov
arpl
mov
jg
lret
push
repz
cmp
inc
xchg
pop
mov
mov
jne
call
mov
shlb
jp
mov
push
out
fmuls
repnz
cmp
or
mov
dec
mov
lods
adc
xor
cmc
test
ficoml
divl
ss
arpl
pusha
mov
mov
cmc
jge
fisttpll
rol
mov
pop
push
cmp
mov
in
aaa
sbb
mov
pop
xchg
enter
and
inc
pop
clc
jecxz
mov
jmp
std
mov
sti
and
test
js
sbb
xchg
push
hlt
mov
popa
dec
mov
or
sbb
push
call
add
mov
push
xor
fwait
insb
out
and
daa
adc
rorb
dec
sbb
push
fmul
adc
sbb
pop
test
push
stos
lea
ljmp
fldt
int
jno
fildll
push
sahf
jns
loope
pop
in
mov
in
push
addl
or
andb
push
enter
movsb
jb
and
gs
movl
mov
cmp
repz
dec
mov
lds
adc
in
ja
or
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
ljmp
repz
out
rorl
enter
pop
cmp
pop
sub
cli
jecxz
mov
aaa
push
addr16
ret
xchg
inc
fstpt
dec
sahf
dec
movsl
or
pop
inc
inc
movsb
gs
lahf
jg
xor
loop
movsl
test
mov
repz
jge
xchg
fwait
lahf
mov
jns
pushf
rcrl
sub
addl
push
adc
mov
sbb
pop
xchg
sbb
xchg
mov
mov
cld
int
cmp
sub
cmc
sbb
mov
push
adc
pop
jmp
lds
sbb
insb
or
out
cs
out
mov
mull
inc
pop
lcall
das
mov
in
mov
push
sub
int3
xor
repz
add
sbb
or
mov
rclb
sarb
out
sbb
cmpsb
fldt
lock
mov
or
lahf
cltd
pop
adc
stos
clc
xor
cmpb
je
test
loope
and
arpl
es
inc
pop
sahf
imul
adc
sbb
mov
movsb
sub
les
xor
xor
hlt
pop
lret
cmp
mov
pop
inc
xchg
hlt
je
or
int
sub
pushf
dec
ficoms
sbb
inc
mov
mov
imul
mov
clc
mov
insl
int3
imul
mov
hlt
nop
in
adc
or
imul
inc
adc
mov
leave
jnp
mov
shl
cmpsb
fsubr
adc
xor
and
jecxz
sbb
movsb
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
and
adc
adc
and
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
and
rorb
add
inc
mov
or
inc
and
or
loopne
cmp
adc
and
push
dec
push
adc
inc
mov
mov
pusha
fimull
push
iret
inc
rcr
cmp
add
leave
cmpsl
inc
icebp
xchg
add
and
inc
xor
cmp
je
imul
call
sub
imull
jge
sbb
jmp
fdiv
lret
arpl
ss
mov
xchg
cmp
jae
mov
and
xchg
cmp
mov
inc
xchg
or
push
cli
cmp
stos
xor
xor
mov
mov
push
stos
js
inc
mov
pop
jb
add
mov
out
push
test
out
cmp
out
and
xchg
mov
xchg
rorl
gs
dec
inc
pushf
mov
jg
imul
xor
dec
mov
mov
add
aas
or
sub
aad
addb
fcompl
pop
ret
mov
mov
movsb
popf
divb
fstl
test
clc
mov
cmc
lret
in
lds
xchg
mov
mov
sub
pushf
ret
pop
mov
mov
sbb
lcall
scas
jge
lahf
jge
inc
test
scas
lret
call
mov
arpl
mov
adc
bound
jo
add
or
stc
sub
fisubrl
orl
inc
adc
fistpl
ret
pop
pushf
jbe
stos
shll
movsb
insl
mov
outsb
loope
lds
or
mov
mov
inc
out
repnz
sub
and
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
and
daa
pop
repz
out
icebp
mov
xchg
cmp
ljmp
mov
stos
jae
nop
and
xchg
inc
gs
imul
add
lds
ret
mov
stc
push
pushf
popf
arpl
push
xor
xchg
add
rcrl
in
pop
mov
nop
jns
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
fs
data16
scas
pop
rcl
ja
mov
stos
mov
inc
insl
jle
popf
enter
lods
sahf
das
movsl
int3
ljmp
shr
adc
pop
cmc
add
jns
xor
stos
adc
xchg
xchg
adc
mov
sub
test
arpl
fsubr
xchg
xchg
test
pop
push
loope
jmp
lea
mov
dec
mov
jne
cltd
pop
insl
test
fdiv
addl
and
sub
popf
out
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
sbb
inc
mov
mov
subb
push
decb
push
insb
jne
dec
lret
popf
ds
fwait
sarb
adc
and
ss
jmp
movsl
inc
dec
push
ss
mulb
outsb
scas
imul
sub
out
in
addb
rol
insl
dec
xchg
push
xorb
pop
push
les
dec
insl
dec
lret
outsl
fistl
xlat
jg
test
loop
ljmp
cmpsl
xlat
adc
adc
lret
gs
mov
fidivs
ja
pop
dec
push
adcb
pop
jp
dec
scas
lods
inc
add
lcall
jae
sbb
jg
out
aam
dec
and
adc
inc
pop
popf
sar
stos
test
push
cwtl
iret
movsl
mov
cmpsb
mov
xor
dec
push
mov
mov
add
ret
mov
jns
ds
ss
lret
test
jecxz
sbb
shrb
pop
pop
sbb
adc
gs
ret
gs
cltd
fs
hlt
sub
or
lds
jge
sub
cmc
sbb
out
push
cld
mov
movsl
cmp
and
into
in
mov
fbld
mov
test
sub
dec
push
xchg
add
je
mov
pop
test
mov
sahf
pop
mov
repnz
out
inc
insb
icebp
xor
xor
je
xchg
fisttps
inc
xchg
mov
inc
icebp
addr16
fdivrs
rcr
nop
outsb
mov
out
cld
lcall
cmc
jnp
testb
fucomi
hlt
std
mov
sti
and
test
fisubrl
shrb
cmp
mov
popa
dec
mov
out
test
push
push
xor
and
mov
jmp
aad
mov
or
cmp
rol
int
mov
xchg
rolb
inc
xor
sbbb
divb
fst
fisttps
aad
test
mov
sahf
cmp
stc
inc
repz
adc
pop
jmp
lds
adc
mov
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
and
test
addl
rcll
adc
push
fisubrl
xchg
adc
js
mov
ror
ret
adc
in
decl
inc
lret
leave
push
gs
cmpsl
xor
call
jg
out
lret
jbe
inc
inc
xchg
adc
cmpsl
movl
adcl
movsb
aad
jmp
dec
pop
jg
test
adc
mov
sbb
or
in
test
jns
push
xchg
xor
mov
sub
pushf
ret
pop
mov
pop
adc
mov
test
cli
add
movsl
imul
pop
push
pop
inc
jle
movsb
inc
fwait
push
testb
jae
cmpsl
push
mov
fmull
cmpsb
and
je
cmp
pop
rcr
je
faddp
dec
jp
sub
mov
jne
cmpsb
fisttpll
enter
lods
jne
jmp
xchg
pop
mov
cmc
add
pushf
sbb
loop
nop
xchg
mov
jle
add
in
xchg
lahf
xor
aam
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
cmp
pushf
inc
mov
inc
lock
scas
mov
int
inc
mov
loop
jge
mov
repnz
adc
cs
fsubl
orb
cmp
and
jl
jp
push
fs
mov
cli
mov
inc
xchg
jg
ret
sbb
inc
ds
stc
imul
sbbl
mov
jb
pop
push
bound
push
test
mov
inc
mov
je
fnstcw
adc
bound
test
pushf
imul
outsb
cmpsb
sub
mov
mov
dec
mov
xor
push
ss
test
jns
jmp
xchg
insb
push
dec
movsl
ss
js
pop
das
rcrw
inc
and
add
or
push
or
test
mov
jb
fmul
push
lods
scas
jecxz
jnp
out
cmpsl
mov
incl
cmpl
test
pusha
leave
adc
inc
roll
xor
inc
shll
sbb
pop
mov
insl
cmpsb
xchg
cltd
sahf
or
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
jo
out
mov
jnp
hlt
leave
add
sbb
test
lcall
daa
and
iret
mov
sbb
lcall
scas
jge
mov
mov
ds
add
fstps
cmp
std
bound
sub
int3
xor
call
xchg
xchg
imul
mov
mov
pop
pop
push
repnz
push
es
dec
adc
in
jo
pop
cmc
or
fcoml
inc
adc
push
roll
ficoms
repz
imul
cs
xchg
mov
scas
xchg
sbbl
pop
push
shrl
inc
mov
jnp
mov
jb
pop
fdivrl
aaa
jae
int3
aaa
jb
dec
mov
nop
xor
xor
push
dec
pop
xchg
inc
gs
je
pop
gs
inc
mov
lret
clc
xor
add
and
add
mov
xor
sub
les
aad
stos
das
lret
jno
pop
faddl
xchg
mov
sbb
jmp
push
push
test
sbb
in
in
inc
dec
pop
adc
into
sub
mov
xchg
mov
mov
lods
push
mov
xchg
ljmp
xlat
je
mov
cmp
adc
push
fsubrs
sbb
rclb
inc
lea
or
jns
mov
mov
sbb
loopne
jge
stc
fildll
xchg
sub
mov
push
xor
cmp
pop
inc
push
sbb
or
ret
jo
xor
popf
and
inc
cmp
jo
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
movsl
pop
mov
and
or
inc
ret
lds
es
inc
dec
lahf
inc
mov
push
sub
test
shrb
sbb
push
stc
sub
jge
mov
mov
xor
ret
mov
inc
add
inc
scas
cmp
mov
call
xlat
movsb
shll
lock
jp
ss
push
out
ja
in
jg,pn
shl
mov
pop
aam
jne
insl
outsb
pop
cltd
enter
lods
mov
push
fs
mov
push
popa
outsl
xchg
iret
aad
inc
and
xor
repz
add
jecxz
popl
rclb
sarb
out
sbb
cmpsb
fldt
imul
pop
mov
xlat
or
pop
fsubl
test
mov
cmpb
xor
loopne
imul
jg
clc
pop
push
aas
es
mov
lahf
aam
inc
pushf
pop
mov
call
fnsave
outsl
and
add
mov
and
daa
add
test
loopne
int
jmp
popf
pop
push
scas
arpl
jle
add
mov
dec
test
repz
clc
sub
jne
mov
fbld
or
fbstp
sub
pop
test
rcr
xchg
mov
les
cld
xor
and
fisubl
pop
add
sar
cmp
add
cmp
jl
adc
repz
xchg
cld
add
sbb
loop
push
xor
out
cld
jb
dec
sbb
add
mov
or
and
xchg
xor
ss
xchg
jbe
fnsave
cmp
sub
ljmp
jecxz
cmc
jg
dec
cmp
inc
sub
data16
js
or
aad
cwtl
mov
in
in
into
lahf
mov
push
push
mov
mov
add
setle
xor
mov
cltd
decl
mov
nop
xor
cs
sub
lods
xchg
sub
adc
fldenv
fnstcw
xchg
jae
mov
popf
lret
cmpsl
xchg
test
mov
adc
add
movl
pop
insl
dec
pop
xchg
jbe
or
push
push
push
xchg
push
es
test
sbb
clc
xchg
jmp
in
ffree
popa
jae
repz
scas
xchg
rcll
loop
push
popl
scas
out
cmp
out
mov
xor
jbe
jae
test
popf
inc
and
lret
sbb
cli
mov
fsubr
inc
sbb
mov
and
aaa
jl
pop
or
adc
leave
andl
add
jg
test
fimuls
call
clc
test
adc
mov
hlt
xor
adc
ret
ficomps
mov
sub
roll
add
lcall
daa
and
iret
mov
sbb
lcall
scas
mov
lea
push
lret
add
inc
fldt
cmp
push
sarl
mov
mov
add
subl
scas
push
fcomps
jne
insl
outsb
pop
cltd
mul
insl
test
fistpl
test
dec
fwait
jo
sub
repz
aad
jno
add
sarl
cli
repz
jg
out
das
dec
lock
mov
pop
push
sbb
idivl
outsl
outsl
call
scas
loope
std
inc
into
cmpsb
iret
pop
call
leave
pusha
icebp
mov
fistpl
inc
lret
call
add
jecxz
inc
mov
pushf
out
sbb
pop
iret
mov
cmp
sub
test
cmc
xor
movsb
sbb
pop
add
mov
mov
jne
les
in
xor
mov
cmp
jp
add
add
mov
sbb
cltd
orb
xor
mov
cld
mov
shl
jmp
scas
lods
pop
imul
pop
push
mov
shrl
fildll
shrl
dec
sub
sub
shlb
xor
fldcw
sbb
clc
cmp
repnz
fimull
cmp
xor
pusha
cmp
das
es
inc
xor
and
leave
xchg
hlt
ja
std
outsl
addr16
call
pop
dec
dec
push
push
in
sti
pop
fistpll
test
out
jmp
mov
mov
add
ljmp
mov
pop
dec
inc
inc
rcrl
filds
and
push
xchg
jb
sbb
mov
xchg
ljmp
cmpsl
xor
rorl
movsb
sbb
clc
mov
push
mov
out
mov
sub
push
add
loopne
jmp
sbb
pop
mov
mov
jne
jmp
clc
pushl
imul
dec
in
sbb
fmuls
cmpsb
mov
fists
movsl
push
mov
jge
sub
fwait
xchg
fcoms
pushf
sub
or
cmpsl
push
pop
jno
in
lds
js
inc
mov
jne
mov
cmp
mov
mov
int3
pop
jge
xchg
cmc
mov
cmp
movsb
ret
xor
cmpsl
mov
jae
mov
dec
bound
jecxz
fcoms
mov
nop
fcoms
add
invd
xor
push
sbb
pop
adc
push
push
push
adc
out
push
ret
mov
inc
mov
testl
adc
ret
sbb
cmc
in
pushf
cmp
sub
outsl
pop
cmpsb
push
pop
movsb
fisubrl
mov
movl
js
stc
mov
mov
test
in
andb
out
add
shrl
imull
sub
mov
jb
loopne
fistpll
xchg
inc
loop
loopne
jl
scas
adc
mov
subb
cmp
scas
xchg
mov
scas
out
mov
out
hlt
xor
sub
loopne
out
sbb
pop
push
xlat
imull
rcll
inc
jle
rep
mov
mov
adc
inc
mov
pushf
fucomip
sbb
pop
iret
mov
cmp
sub
test
cmc
xor
movsb
sbb
pop
add
mov
xor
jne
les
in
xor
mov
cmp
jp
add
cltd
sub
adc
fdivrs
add
lods
cmpsb
sbbb
lret
mov
pushf
dec
push
fcmovnbe
stos
mov
rcll
pushf
pop
pop
pop
loope
lcall
stc
jg
imul
jecxz
sub
mov
cs
stos
adc
add
add
test
imul
push
es
mov
fisttps
popf
adc
scas
hlt
mov
add
icebp
cmp
or
add
jmp
out
xchg
adc
cmpsl
js
leave
sbb
xor
jb
mov
or
in
insl
xchg
popf
pop
adc
mov
gs
sbb
mov
xchg
int3
push
sub
cmp
pop
push
lds
imul
mov
add
and
pop
push
adc
inc
dec
daa
jp
or
xor
or
in
test
icebp
scas
xor
sbb
rolb
out
inc
mov
and
div
push
add
pop
icebp
cmpsl
dec
inc
orb
and
dec
movl
mov
movsl
sub
ljmp
mov
pop
and
jmp
stc
into
inc
mov
cltd
sub
dec
in
mov
fwait
adc
enter
call
nop
fidivs
lds
xchg
adc
mov
sbb
lret
clc
aaa
jge
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
pop
roll
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
hlt
inc
or
dec
push
pop
xor
rolb
add
mov
sbb
sub
stos
mov
push
jmp
call
or
and
loopne
and
mov
sbb
push
adcl
rcrl
in
pop
mov
nop
jns
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
inc
dec
aam
pop
mov
scas
ud0
add
jle
pusha
and
leave
lock
test
cwtl
jg
jge
sbb
lret
xchg
mov
inc
out
scas
mov
fildll
les
fldcw
andb
rolb
aas
or
xor
lret
push
mov
dec
sahf
dec
mov
mov
ljmp
insl
mov
daa
jo
push
sbb
inc
and
add
lahf
jmp
lock
sarl
cmp
and
insb
jne
inc
into
push
mov
mov
inc
push
cltd
jns
ret
xchg
ret
dec
lods
jmp
cmp
inc
push
stc
inc
jb
dec
mov
lret
wbinvd
sub
push
outsl
sbb
push
in
dec
out
outsl
stos
sub
mov
jb
int
sahf
pop
js
lahf
fstpt
push
aam
into
xchg
xlat
jg
xlat
sbb
jae
fcmovnu
test
fstpl
repz
ds
jo
lock
dec
add
adc
leave
jnp
or
lods
leave
aam
mov
fdivrl
cli
xor
fists
out
cmp
outsl
sbb
and
test
jnp
sbb
xchg
push
hlt
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
repz
jl
mov
roll
inc
add
int3
cwtl
stos
add
outsl
hlt
jmp
decb
push
mov
cs
mov
mov
dec
mull
cltd
fbstp
repnz
test
lods
rcrb
dec
jmp
adc
mov
mov
cmc
add
xchg
push
shlb
int3
lock
movsl
xchg
mov
fcompl
aad
xor
xor
mov
mov
pop
stos
js
inc
mov
pop
jb
add
xchg
js
std
decl
sarl
hlt
idivl
outsl
outsl
xchg
push
adc
scas
out
jp
mov
loopne
mov
rcll
in
mov
popf
ja
into
add
inc
pop
test
mov
sub
dec
mov
ret
mov
aad
cwtl
mov
adc
lahf
jnp
push
mov
cmp
cmpb
cmp
sahf
xlat
xor
mov
cltd
fmuls
mov
nop
xor
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
lods
mov
mov
arpl
movsl
sub
sbb
sbb
sbb
ret
xchg
mov
leave
lock
mov
test
mov
rcrl
pushf
sub
jnp
mov
js
call
iret
adc
jb
cltd
enter
daa
out
xor
gs
es
or
inc
and
or
sahf
imul
adc
sbb
mov
movsb
sub
les
xor
or
inc
xchg
jge
ret
stos
and
std
mov
xor
inc
push
inc
mov
mov
dec
gs
jg
xor
popa
lods
fldt
or
sub
lahf
push
mov
mov
pop
cmpsb
mov
xor
xchg
push
pop
clc
cmpb
cmpsb
mov
sbb
aad
neg
pushf
test
fwait
rolb
ja
xor
jae
xor
adc
repnz
xchg
jo
rcl
mov
aam
clc
xor
mov
adc
es
xchg
xchg
inc
push
mov
or
in
insl
xchg
popf
pop
adc
daa
pop
repz
out
sarl
out
push
test
xchg
add
or
mov
sub
sbb
push
inc
roll
sbb
in
int
mov
pop
loop
lods
ds
add
ljmp
arpl
and
daa
adc
nop
xchg
add
sub
push
mov
dec
push
in
int3
inc
push
cltd
mov
icebp
sub
push
in
dec
push
or
fbstp
pop
mov
mov
adc
sub
les
jl
or
add
pop
xchg
cwtl
xor
stos
jge
pop
adc
inc
int3
aad
cmp
stos
xor
xor
mov
mov
cmp
mov
pop
jb
add
mov
outsb
rcll
cwtl
jge
jge
outsl
jg
std
xchg
xor
lret
scas
in
lock
test
das
inc
fidivrs
sahf
lret
xchg
lock
call
loope
lahf
stc
cwtl
shrl
pop
xchg
orb
fs
sub
stos
iret
mov
sbb
mov
and
sub
js
inc
shlb
int
insl
xchg
in
test
jecxz
movsl
add
rcrl
in
pop
mov
nop
jns
imulb
in
dec
pop
add
jns
lds
cli
lret
mov
lret
sar
jecxz
aam
ja
stc
cli
in
test
or
test
ljmp
inc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
pop
push
repz
fidivrs
jnp
cmp
rclb
loope
rcll
add
jp
fpatan
leave
sbb
add
and
hlt
cwtl
adc
popa
test
cltd
sahf
inc
sub
pop
pop
add
inc
cwtl
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
cld
push
ret
mov
insl
mov
cmc
fcoml
and
push
dec
xor
xor
inc
mov
sub
push
pop
lret
pop
mov
aad
mov
xchg
mov
out
aad
movsl
dec
test
fmuls
push
xchg
aam
xor
dec
popa
push
ret
rclb
dec
mov
adc
cltd
dec
bound
jg
pop
rcll
movsl
sbb
xchg
incl
or
shlb
dec
repz
pop
mov
xor
rol
sbb
xchg
xchg
mov
jbe
xchg
mov
int3
jnp
popf
cmc
hlt
std
mov
sti
and
aas
lahf
es
jns
jle
orl
xor
imul
inc
fdivrs
inc
icebp
dec
mov
and
test
arpl
or
adc
fsub
movsl
std
cs
jl
out
test
jo
pop
test
mov
mov
mov
mov
push
popf
dec
adc
xor
test
jnp
and
adc
cli
sub
and
movb
mov
jmp
ljmp
lds
sbb
mov
adcl
jbe
sub
sub
pop
mov
fnstcw
scas
in
mov
jmp
pusha
xor
jle
mov
and
mov
addb
mov
xchg
mov
imul
outsl
dec
call
scas
push
jmp
cmp
mov
sbb
dec
loope
xor
mov
cwtl
cltd
data16
sbb
mov
in
scas
int3
fwait
lds
stos
xchg
mov
jnp
adc
mov
mov
cld
mov
or
popa
ret
push
sub
shrl
loop
iret
sbb
daa
adc
nop
test
decb
aad
push
fmul
adc
aas
in
aad
insl
ficomps
fldcw
stos
lea
push
gs
push
enter
cmc
movsl
testb
in
aam
dec
and
pop
cmpsl
lret
dec
sbb
adc
push
mov
setbe
stos
pop
bnd
xor
or
dec
mov
sarl
pop
es
jo
sub
cmc
cwtl
sbb
xlat
dec
les
jle
dec
daa
or
andl
das
rclb
jmp
cmc
fdivrs
push
in
xor
and
jmp
cmpsb
in
adc
pop
or
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
sbb
dec
call
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
sub
adc
fdivrs
add
lods
cmpsb
sbbb
mov
adc
int3
inc
mov
and
mov
mov
push
mov
and
jbe
lods
adc
push
mov
mov
lods
push
and
sub
dec
stos
inc
in
test
lea
mov
in
mov
jo
sub
repz
insb
loop
ja
inc
fcoml
jg
clc
inc
and
add
or
and
add
and
adc
xchg
mov
mov
fidivrl
sti
in
popa
insl
in
push
mov
aaa
dec
insb
stos
loopne
hlt
js
test
js
sbb
mov
dec
sbb
pop
jle
push
xchg
mov
pop
adc
mov
in
mov
bound
adc
xchg
pop
orl
addr16
fcoml
xchg
jbe
push
mov
mov
insb
aad
insl
mov
sub
mov
bound
lret
jmp
mov
cld
mov
mov
xor
idivl
fs
xchg
daa
push
push
jl
lret
rcrl
mov
push
pop
mov
leave
xchg
fistpl
jo
cmp
cmp
lds
jmp
pusha
jle
das
pop
icebp
or
cmp
fcmovne
loop
add
sub
addl
mull
lret
stc
dec
movsb
dec
push
test
push
cmp
lock
lds
out
cmpsb
enter
inc
ret
fldl2e
scas
cmp
pop
shrl
xchg
add
xorb
dec
or
test
pop
mov
insl
mov
pusha
pop
push
test
sbb
stos
cmp
ss
and
shlb
pop
adc
mov
fistl
xor
sbb
test
lcall
inc
mov
inc
pop
jg
adc
test
push
jnp
pushf
dec
sbb
scas
mov
push
loop
xor
sahf
pop
xchg
iret
xorl
clc
mov
adc
add
movl
pop
cmp
mov
gs
jmp
aas
mov
xchg
mov
scas
ja
int3
push
jg
dec
cltd
push
out
and
mov
sbb
aam
repnz
rclb
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
jae
sti
and
aas
lahf
es
jns
hlt
jl
out
mov
insl
dec
xchg
pop
pop
lcall
xor
fsubl
fsubrs
dec
movl
lahf
fs
push
add
dec
xlat
aas
add
fsubrl
ret
dec
lret
cltd
adc
sub
adc
push
test
cld
mov
sti
cli
int
jbe
or
bound
test
jl
sbb
cmpsb
sub
mov
mov
push
iret
mov
xor
ljmp
dec
fbstp
sub
mov
arpl
jecxz
xchg
das
push
sub
or
repz
out
and
leave
lock
xor
outsl
cmp
dec
xlat
dec
xchg
mov
stos
mov
dec
adc
es
inc
clc
pusha
mov
js
pop
loopne
pushl
or
jecxz
test
je
test
cmpb
pop
mov
mov
jns
sub
inc
pop
xchg
mov
inc
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
imul
leave
fsubrl
stos
lret
movsl
mov
add
addr16
incb
inc
jecxz
xor
sbb
stc
push
inc
in
dec
mov
scas
dec
rcr
mov
and
mov
ret
adc
enter
dec
movsl
or
sbb
fistl
sbb
and
shll
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
xchg
adcl
jbe
fldenv
cmpsl
push
jecxz
int3
mov
fldl2e
scas
cmp
ds
xchg
inc
scas
imul
mov
dec
xor
repnz
inc
mull
dec
mov
popf
jle
cmp
outsb
clc
mov
or
ljmp
jnp
adc
jno
or
js
sbb
jmp
cmp
roll
fcomps
je
cmp
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
jge
lahf
jge
mov
notl
sub
lea
pop
cltd
jge
dec
inc
sub
int3
xor
loop
sbb
sub
scas
inc
push
repz
xchg
sub
jmp
ficompl
cs
pop
and
mov
movsl
cmpsb
test
xor
arpl
out
rcll
mov
pop
lock
jl
das
dec
iret
shl
idivl
daa
fsubrs
dec
fwait
push
rcl
jae
pushf
lods
pop
jae
fidivrs
lahf
jnp
lea
negb
out
enter
int3
pop
sub
pushf
add
jmp
sbb
xorb
popa
out
and
fsts
xchg
push
mov
pop
loopne
mov
cmp
or
mov
in
inc
rcrl
add
ljmp
or
int
ret
gs
push
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
shll
pop
push
pop
sahf
nop
enter
cwtl
in
subl
gs
xchg
mov
out
cmpsb
scas
push
and
sub
lods
dec
fisubrl
jo
fisttps
xchg
xchg
dec
xchg
stc
pop
mov
scas
pxor
cld
repz
cwtl
or
add
cmc
jl
das
dec
iret
shl
idivl
outsl
outsl
insb
incl
out
dec
loopne
stc
mov
or
shrl
jmp
arpl
cmp
icebp
stc
nop
jge
jg
leave
xchg
push
xchg
sbb
rcll
addl
push
aad
lret
gs
loopne
cmc
mov
add
jge
scas
sbb
pop
in
pop
pop
add
cmp
lock
les
jecxz
movsl
mov
cltd
jo
iret
mov
sbb
jo
iret
cmpsl
mov
push
push
mov
pop
xchg
dec
mov
ficoms
shr
ja
imul
mov
xlat
sub
mov
fstl
movsb
xchg
xor
dec
inc
sub
sub
add
adc
add
add
test
imul
push
es
mov
sahf
sti
add
inc
mov
leave
pop
jp
push
xchg
jl
sbb
fistl
popl
push
jo
lods
dec
mov
xor
xchg
xchg
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fsubs
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
inc
lahf
fimuls
fsubrs
mov
mov
test
and
sub
jb
sub
xor
divl
es
test
dec
jecxz
sbbl
hlt
mov
mov
rcl
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
push
sbb
jae
mov
mov
cmp
cmpsl
test
ljmp
inc
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
inc
call
xchg
mov
xor
xchg
push
mov
cmpsb
jno
test
xchg
and
rorb
add
inc
mov
out
mov
int
dec
add
inc
jbe
dec
je
mov
jb
test
and
ret
es
repnz
enter
jle
insl
and
rol
pop
inc
add
imul
mov
cld
jg
cmpsl
xlat
in
ret
sub
repz
sbb
push
cmp
je
test
lods
lods
pop
mov
and
inc
jne
movsb
pop
bnd
lret
cmpsl
sub
int3
sub
sub
insb
orl
fsubrl
arpl
enter
dec
and
pop
mov
adcl
int3
scas
fcmovbe
iret
push
inc
cmp
cmc
and
adc
jmp
and
xor
cmp
stc
inc
push
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
fsubs
pop
mov
gs
sbb
mov
xchg
insb
test
add
push
push
roll
add
or
lret
mov
das
cmp
dec
inc
movb
sub
les
sarl
cwtl
cmp
pop
adc
mov
push
xchg
jno
sub
mov
subl
ficomps
fsubrs
fistl
xchg
lods
hlt
xchg
sub
vandnps
push
sahf
xchg
cmpsl
pop
sub
adc
clc
pushl
insl
mov
add
andl
sub
outsl
adcb
xor
repnz
mov
or
nop
pushf
sarb
pop
jl
pusha
test
ficoms
jg
xor
mov
inc
or
es
or
arpl
dec
mov
mov
int
jge
xchg
cmc
mov
cmp
movsb
ret
xor
lahf
cmpsl
mov
jae
mov
loope
jno
jecxz
fmuls
adc
adc
add
aam
and
imul
pop
push
push
push
adc
test
pop
cmp
repz
sti
jge
pop
dec
divl
daa
cmc
dec
inc
test
cld
push
pop
lock
icebp
int
imul
pop
pop
xor
sbb
in
jmp
test
aaa
jns
pop
push
movsb
pop
fucom
cli
mov
sti
stc
cli
in
test
or
test
jl
sbb
cmpsb
sub
mov
mov
push
iret
sbb
push
shr
inc
xchg
jae
in
mov
push
iret
mov
lgs
outsb
out
arpl
das
push
sub
push
clc
mov
fsubrl
cmc
jl
fmul
adc
outsl
cmp
fld1
stc
jp
scas
scas
loope
sti
mov
cltd
mov
pop
cs
icebp
in
jns
outsb
out
lahf
stc
sbb
pop
inc
loope
lea
pushf
shrl
loope
inc
push
push
adc
dec
dec
movsl
shl
add
and
dec
push
nop
push
mov
sahf
inc
movsb
jle
ljmp
cmpsl
cmp
sbb
aas
ja
int
dec
stc
gs
xchg
ja
adc
fcompl
mov
inc
loop
adc
sub
mov
adc
jno
int
add
pop
lcall
divb
jo
xor
sbb
or
pop
adc
pop
sub
jp
add
cmp
lds
pop
jmp
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
mov
jae
pushf
sub
call
lret
pop
jmp
fisttpll
jg
lahf
dec
xchg
clc
lahf
stc
cwtl
shll
or
add
push
rcll
dec
adc
pop
sbb
pop
inc
loopne
int
mov
lods
push
lsl
lahf
jmp
jae
rcrl
rorb
lock
sbb
daa
push
mov
push
push
mov
fisubrl
dec
out
mov
mov
push
xchg
fildl
outsl
cli
mov
jne
mov
mov
sbb
lods
cmp
rcrl
xchg
mov
outsb
or
add
xchg
sarb
xor
mov
jp
add
cmp
lds
fsubrp
pop
pusha
jle
das
pop
icebp
or
cmp
fs
loop
data16
pop
add
mov
jg
out
aas
add
lea
sbb
mov
iret
aad
cld
xchg
fwait
outsl
outsl
call
jae
daa
ja
mov
mov
fucomp
push
jg
lahf
lods
xlat
lret
cmpsl
leave
mov
add
jle
nop
lds
dec
pop
or
push
out
pop
adc
and
xchg
out
inc
ret
mov
xlat
pop
pop
inc
or
idiv
sti
add
test
sbb
daa
push
sahf
jbe
push
push
jle
sbb
stos
xchg
mov
cmpsb
stos
mov
outsb
mov
in
mov
shr
push
popf
mov
rcrb
jne
cmc
fwait
inc
rcrl
sbb
jae
les
sbb
or
dec
mov
add
push
out
mov
or
movsb
js
jbe
xor
frstor
clc
sbb
in
adc
cli
jnp
inc
mov
add
adc
push
add
and
mov
add
jbe
inc
lret
jb
sahf
xchg
ss
push
jae
fdivrp
xor
out
movsl
xor
cmp
mov
int3
pop
insl
loopne
jecxz
mov
aaa
pop
loope
mov
jmp
mov
push
mov
bound
nop
push
fs
sbb
fstps
cwtl
aaa
arpl
imul
es
test
popa
jecxz
loopne
sbb
sbb
daa
or
xchg
les
orl
lcall
push
out
fdivp
dec
xorb
sub
mov
push
fcoml
push
test
mov
lahf
cmp
pop
dec
sbb
add
cmp
or
cmp
adc
mov
les
enter
mov
pop
nop
jbe
mov
ficomps
mov
pop
mov
sti
xor
mov
cmp
movsb
scas
xor
cs
inc
daa
inc
lcall
test
push
xchg
mov
fistpll
jnp
out
xchg
inc
ret
lahf
lea
mov
outsb
rcl
mov
lock
test
or
dec
lock
mov
loop
mov
popa
imul
loop
je
repz
test
frndint
inc
in
mov
mov
leave
adc
cmp
lea
jg
or
and
jl
pop
adc
pop
xor
test
fs
push
cmp
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
scas
shll
sub
es
test
pop
and
xchg
and
mov
cmp
das
es
inc
xor
and
leave
xchg
hlt
ja
std
outsl
addr16
call
push
loopne
mov
and
jmp
mov
repz
push
mov
or
xchg
aam
fcoms
inc
pop
ret
mov
sarb
push
dec
xchg
adc
or
subl
ds
ret
pop
pop
xor
sbb
test
lcall
daa
and
iret
mov
sbb
sub
push
ja
inc
in
scas
jge
mov
mov
ds
add
fstps
cmp
std
bound
sub
int3
xor
call
xchg
xchg
jno
mov
je
loop
pop
cltd
enter
fistl
xchg
push
mov
aas
test
sub
cmpxchg
out
dec
aam
pop
mov
scas
pxor
cld
repz
out
das
in
rorl
mov
fsubl
cmc
loop
xchg
mov
into
pop
lds
jmp
mov
mov
fldcw
xchg
ds
out
hlt
or
sbbb
hlt
test
cmc
clc
jnp
push
sbb
ret
js
test
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
xchg
std
pop
int3
push
into
shr
ret
mov
insb
xchg
dec
xor
rol
in
loopne
mov
je
or
es
ja
lds
imull
sahf
jnp
popa
jbe
pop
xchg
mov
and
clc
mov
push
xlat
adc
dec
adc
jle
les
jecxz
pushf
sub
cmp
call
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
sti
mov
cltd
add
cmp
inc
jmpw
mov
lret
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
jecxz
int
imul
imul
test
cs
call
add
nop
out
xor
push
cmp
or
mov
outsl
mov
scas
mov
mov
aaa
pop
jb
sbb
stos
insl
lods
mov
mov
pop
push
ljmp
aad
push
lret
push
insl
pusha
cmc
movsl
dec
sbb
lods
fldcw
data16
in
and
or
movsl
mov
cld
jp
add
cmp
push
lret
ret
sahf
sahf
xchg
sbb
js
xchg
xor
test
xor
hlt
das
pusha
enter
bsr
adc
cmc
jmp
cmpsl
ds
int
incb
mov
addr16
imul
xlat
xor
push
adc
int3
mov
cmp
je
out
jb
out
outsb
ret
lahf
repnz
add
int
lods
repnz
and
xchg
jmp
sbb
push
jle
add
fsts
inc
pop
cmp
leave
sti
int
clc
test
cmp
and
sbb
jno
lods
fwait
lahf
lds
add
sbb
cmp
mov
sub
pushf
ret
pop
mov
mov
sbb
lcall
scas
jge
inc
sbb
inc
aaa
lret
fucomp
add
fldt
mov
mov
xchg
mov
push
cmpsb
jge
push
ja
cmp
dec
or
stos
inc
lcall
dec
inc
cmpsb
fs
fistps
inc
leave
scas
dec
xchg
jp
sub
mov
xchg
jne
ret
pop
inc
adc
arpl
pop
stc
add
adc
test
dec
cmp
daa
cmp
subb
xor
push
aas
fwait
lret
in
mov
mov
or
pop
fsubl
test
mov
cmpb
xor
loopne
jns
jle
jnp
dec
mov
insl
jge
add
dec
mov
and
test
arpl
mov
xlat
pushw
adc
mov
mov
lea
jbe
mov
or
pop
into
push
sub
js
test
pop
inc
stos
mov
pop
test
mov
fldt
ljmp
movsl
leave
ret
lcall
loop
cmp
mov
aas
push
mov
push
sbbl
push
dec
xchg
aam
jne
insl
jbe
lahf
enter
jb
ret
pop
xchg
ret
arpl
mov
xchg
xlat
test
xor
movsb
cmp
das
push
sub
add
jl
mov
xchg
in
rorl
mov
std
test
out
out
mov
inc
push
fidivrl
sub
cwtl
lock
sahf
sub
adc
sbb
inc
dec
xchg
lahf
jmp
sub
inc
cld
xor
data16
aad
inc
rol
mov
push
xor
inc
orb
jp
int
push
into
movsl
and
int3
inc
pop
and
arpl
cmp
cmc
jmp
pushl
adc
ljmp
and
jl
adc
and
mov
dec
sbb
lcall
jge
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
jp
jge
scas
xchg
iret
jmp
adc
pop
lahf
jbe
test
adc
cltd
ficompl
pop
sbbb
orl
and
bound
push
inc
add
arpl
add
cmp
mov
sub
dec
lret
fidivrs
cli
shrd
imul
fsubl
mov
fcmovu
sti
sti
and
test
cmp
shrb
cmp
mov
popa
dec
mov
into
cmpsl
stos
shll
inc
xchg
in
mov
sub
roll
inc
mov
mov
in
jbe
orl
cmp
adc
fsubrl
push
mov
mov
outsb
mov
in
and
push
mov
hlt
and
ror
mov
loope
loop
fwait
aad
lahf
jmp
mov
and
cmp
imul
enter
insl
dec
xor
pop
push
inc
push
mov
xchg
gs
orl
adc
scas
hlt
mov
add
icebp
cmp
or
add
jmp
out
xchg
adc
cmpsl
js
add
pop
xor
mov
movsl
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fsubs
pop
mov
gs
pop
rorl
enter
pop
cmp
pop
sub
clc
jecxz
mov
aaa
push
addr16
les
fwait
dec
push
ret
push
rcl
idivl
popa
out
jno
sti
mov
mov
push
cmc
cmp
cmc
cmc
jecxz
dec
push
jmp
adc
ljmp
and
jl
adc
and
mov
dec
sbb
mov
jg
cmp
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
sbb
mov
mov
inc
insl
jle
popf
mul
dec
sub
cmc
inc
dec
push
cmpl
pop
insb
scas
in
mov
jmp
pop
mov
push
sub
sbb
repz
fwait
adc
add
sahf
xchg
mov
xlat
sti
fs
rorl
jl
jnp
sahf
sub
aaa
shll
pushl
mov
test
xchg
mov
inc
adc
inc
aas
jecxz
dec
mov
sbb
add
mov
mull
aam
jae
push
addl
mov
mov
hlt
cmp
imul
jne
jp
add
add
mov
sbb
push
xor
mov
cld
movsb
fsubrl
stos
shl
xlat
jl
sub
jno
pop
cmp
jb
pop
adc
imul
push
outsl
and
xor
xchg
sub
mov
sahf
out
subb
cltd
das
mov
in
scas
aas
test
pop
jmp
jnp
out
jno
insb
out
pop
mov
out
or
js
inc
int3
out
lsl
mov
fwait
jns
or
stos
hlt
aam
lret
fwait
adc
dec
sbb
fisubl
pop
sarb
ret
jp
gs
in
call
popf
fwait
mov
imul
mov
or
and
and
mov
xchg
cmp
or
aas
test
fildl
test
mov
mov
push
sarl
mov
rclb
cmpb
cwtl
pop
push
jno
fst
outsl
mov
imul
cmpsb
xchg
mov
adc
imul
lods
fldcw
sbb
sahf
out
or
jae
fldt
pop
dec
div
xor
int
nop
mulb
push
ret
insb
mov
push
sbb
lret
sub
test
pop
stos
pop
xchg
outsl
cmp
lds
push
fdivrl
jmp
mov
ret
xor
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
enter
pop
inc
cltd
inc
in
cmp
sub
pushf
ret
sbb
std
sub
xor
xor
adc
adc
bound
lods
sub
adc
pop
popf
xchg
mov
les
shl
nop
jle
sbb
mov
ficomps
fldcw
loop
dec
pusha
sub
push
ljmp
jae
pop
cmp
popf
lret
add
and
xlat
cli
aad
idivl
int3
and
out
sub
mov
mov
xchg
inc
and
and
popf
adc
gs
cld
in
jmp
jge
outsl
jno
insb
out
mov
scas
pop
adc
mov
je
mull
mov
rcrb
xchg
xchg
or
fwait
out
jp
in
inc
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
push
add
push
lds
gs
xchg
inc
stos
repz
dec
je
fildl
in
inc
inc
sar
repz
rcrl
lahf
bound
add
add
stc
loop
mov
aas
pop
dec
dec
pop
lret
adc
dec
pop
push
cmp
popa
ds
mov
cltd
jmp
loop
fsubrl
push
dec
dec
xlat
data16
pop
dec
stos
lret
cmp
pop
fstpt
jns
sbb
test
add
jo
test
xchg
fcmovne
aad
adc
sub
pushf
shr
rcrl
inc
xor
mov
mov
fisubrs
and
lret
add
xchg
cmpsl
or
mov
ficomps
xchg
out
test
jge
sahf
jp
popa
lret
mov
pop
push
leave
jne
sbb
out
mov
push
loope
cs
outsl
outsb
jo
mov
pop
push
addl
stos
sarl
or
adc
adc
rolb
jae
test
sbb
xchg
xchg
adc
pop
inc
test
mov
and
std
popa
int
and
hlt
imul
mov
paddusb
xchg
dec
les
test
pop
aaa
stos
xor
dec
xchg
or
sbb
xchg
out
in
leave
dec
jge
rolb
fs
movsl
add
or
xor
jb
fisttpll
cmp
lds
jmp
pusha
jle
das
pop
icebp
or
cmp
fcmovne
loop
addl
das
adc
sbb
pushf
lcall
sub
mov
dec
int
insb
decl
imul
shlb
fisttps
stc
in
jns
test
js
pop
or
and
adc
add
in
push
inc
test
mov
std
mov
xlat
mov
lods
xor
push
add
pop
das
or
addr16
stc
loope
mov
test
add
mov
faddl
stos
out
inc
mov
icebp
cwtl
add
insb
adc
mov
repnz
shlb
imul
lea
ljmp
and
call
imul
push
push
dec
in
clc
popa
mov
push
repnz
repnz
mov
fcmovb
xchg
mov
lods
mov
mov
in
scas
aas
test
fs
in
mov
jmp
jecxz
xchg
sbb
mov
filds
inc
shll
jecxz
cwtl
cwtl
popf
jmp
sub
mov
mov
out
inc
and
aas
int
and
loope
cs
sbb
les
aas
outsb
add
push
shll
inc
stos
jae
imul
mov
bound
pop
adc
push
xchg
cltd
popa
jle
mov
jmp
cmpsl
mov
inc
insl
test
push
pop
stos
gs
std
rolb
push
movsl
add
popf
jnp
sub
stos
rcr
xlat
fisttps
aad
test
mov
sahf
cmp
stc
inc
repz
adc
pop
jmp
lds
adc
mov
adc
mov
les
enter
mov
pop
nop
jbe
mov
mov
pusha
mov
jmp
scas
inc
fwait
lock
daa
push
shrl
jne
int3
cmpsl
inc
add
cmc
stos
gs
pop
sub
lret
jno
push
mov
int
add
and
sbb
mov
mov
pop
iret
test
popa
sarb
push
add
clc
inc
es
sub
test
lret
and
clc
dec
call
and
jne
les
cmpl
sbb
imul
pop
adc
mov
and
xchg
sub
lods
xchg
sub
adc
std
and
imul
mov
or
inc
jns
loope
lret
aam
fisubl
cmpsl
pop
rcrl
or
outsb
push
or
mov
stos
outsl
mov
enter
pop
push
ret
xchg
clc
xor
fcmovne
repz
mov
fcoml
rcrl
cmp
jno
sbbl
xchg
testl
xchg
fcmove
enter
and
ret
cmpsb
mov
mov
jmp
std
mov
sti
and
test
cwtl
imul
push
hlt
mov
mov
daa
dec
mov
ds
xchg
test
push
sarl
xor
push
fwait
mov
pop
in
or
test
add
sbb
roll
push
mov
enter
les
push
int
push
lahf
stos
sub
cwtl
pop
frstor
imul
xchg
in
stc
dec
data16
aaa
stc
or
icebp
push
push
pop
jnp
or
dec
adcl
imul
cmp
stos
xor
xor
mov
mov
mov
mov
pop
jb
add
mov
out
push
scas
shll
xor
sub
add
lea
addr16
mov
fstl
mov
out
lods
mov
mov
and
loope
dec
pop
jle
nop
add
dec
adc
add
xchg
adc
test
add
je
js
shlb
mov
testl
rclb
out
mov
lea
mov
adc
mov
adc
pop
pop
xor
pushf
or
lds
push
cld
sub
mov
mov
adc
mov
mov
rorl
cmp
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
movsl
mov
pop
and
movsb
leave
test
addl
rcll
or
push
fisubrl
xchg
fldt
movsb
jbe
xor
xor
jle
mov
xlat
repz
mov
int3
pop
into
and
repz
in
adc
shrb
add
ficoml
popa
dec
sbb
in
dec
popa
pop
jnp
push
mov
les
jns
pop
mov
test
add
inc
sbb
pop
jecxz
movsl
mov
cltd
jo
or
cmpsl
push
sahf
mov
mov
iret
sbb
fwait
aam
sub
lods
sub
mov
and
adc
inc
mov
popa
pushf
dec
ret
sub
push
pop
cltd
adc
les
adc
lock
and
cld
sub
fstps
pushf
xchg
pusha
or
sti
fstps
and
sbb
pop
inc
shlb
add
sub
cmc
or
sbb
inc
push
fsubl
and
sub
mov
pop
fstpl
mov
jecxz
arpl
out
add
xor
dec
shlb
mov
or
lock
jle
cmp
test
aam
mov
cmp
decl
add
inc
sbb
pop
jecxz
movsl
mov
fcom
and
lcall
daa
and
iret
mov
sbb
lcall
scas
jge
mov
mov
ds
add
sub
jb
pop
lea
dec
push
sahf
jge
call
or
std
inc
dec
push
add
shl
je
insl
lods
xchg
shl
dec
jmp
lahf
and
sub
mov
push
sahf
pop
and
mov
out
or
leave
loop
jae
jle
out
or
js
inc
int3
fiaddl
pop
dec
add
shlb
or
les
xor
enter
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
ss
xor
xchg
or
addr16
adc
add
xchg
sub
rol
dec
sbb
jle
push
xchg
mov
pop
adc
mov
mov
mov
bound
adc
xchg
pop
xchg
into
popa
jae
and
leave
arpl
cltd
pop
jmp
incb
xlat
ret
aad
outsl
into
pop
mov
ret
mov
outsb
aaa
mov
loope
pop
xor
sbb
cmp
rorl
cmp
dec
movb
push
push
sbb
into
xchg
sti
in
sbb
out
lcall
mov
lcall
sub
dec
fsubl
movsb
mov
fisubrl
jnp
inc
mov
cwtl
add
cmp
xchg
xchg
pop
inc
mov
dec
out
mov
xor
das
stos
xlat
shll
test
mov
ret
cltd
call
sti
mov
xchg
dec
test
aaa
mov
pop
jle
nop
add
mov
sahf
dec
gs
inc
pop
adc
or
call
jg
dec
push
sahf
sub
mov
sbb
daa
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
cli
or
mov
aad
inc
sub
rcr
push
mov
sub
cmp
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
pop
or
lds
stos
xchg
stos
cmp
cmpsb
fdivrl
outsl
cwtl
lods
inc
sbb
mov
lds
lret
push
push
xor
je
test
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
jae
xor
in
lds
jg
movswl
jmp
std
mov
sti
and
sbb
lret
dec
sbb
lea
cmp
ret
mov
test
jl
or
int
rcrl
pop
xor
add
or
mov
scas
loope
leave
ss
roll
js
mov
jmp
lret
mov
inc
dec
mov
sbb
leave
test
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
loope
add
mov
pop
rcl
mov
cmpsb
xor
jb
fisttpll
cmp
lds
sbb
scas
das
pop
icebp
or
cmp
sti
and
in
ret
or
leave
or
push
jge
dec
jnp
in
lret
je
dec
cmpsb
mov
xlat
push
mov
out
in
js
or
mov
xchg
sahf
cmp
dec
in
lahf
sti
cwtl
inc
data16
test
mov
ret
mov
cmc
test
scas
xchg
add
sti
mov
cwtl
ja
sbb
daa
mov
mov
ret
lret
aas
out
scas
test
pop
dec
int3
push
sub
mulb
daa
cmpsb
cmc
fxch
mov
dec
mov
fdivp
dec
inc
popf
leave
cmc
sbb
shrl
sbb
jne
addr16
flds
sub
sahf
xchg
sub
xchg
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
and
jne
xor
bound
shrl
fnsave
repz
and
mov
testb
jnp
out
push
data16
sbb
mov
cli
jno
mov
lahf
inc
push
adcl
out
jl
enter
push
leave
daa
in
hlt
xor
and
gs
test
fisubs
faddl
push
cwtl
cmpb
xor
pop
loopne
inc
push
ret
ret
arpl
lds
push
sarl
test
mov
rclb
cmpb
cwtl
pop
push
jno
fst
outsl
mov
sub
pop
xchg
dec
mov
stos
lods
scas
imul
jno
pop
aas
adc
mov
cmp
or
ret
loop
sbb
adc
pop
cmpsl
lret
dec
movsl
push
leave
or
mov
pop
xor
and
lock
add
mov
rcrb
jnp
mov
mov
ficoms
sti
mov
ljmp
sbb
mov
fwait
push
dec
mov
and
adc
mov
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
and
mov
pop
rcr
aaa
adc
sbb
test
cmpl
icebp
imul
test
rolb
cmc
and
addr16
pop
push
jl
in
rol
mov
and
rcrb
iret
mov
jbe
mov
icebp
aaa
mov
sbb
jge
les
std
sbb
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
cmp
ret
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
mov
shr
jo
sbb
xchg
xchg
xor
addr16
clc
push
sbb
leave
cld
icebp
jg
out
ud0
dec
mul
push
dec
cmpb
mov
cmp
push
sti
vxorps
mov
out
cmpsb
enter
inc
ret
fldl2e
scas
cmp
jns,pt
outsb
repz
cwtl
add
inc
and
xorl
std
cmpl
decb
inc
sbb
adc
std
int3
inc
pop
dec
int
jle
pop
mov
add
add
inc
fidivs
lret
lock
inc
adc
adc
sbb
rorb
cwtl
ret
push
jnp
fistl
lret
lds
push
jns
lahf
cli
mov
cmp
cs
mov
sahf
das
xchg
stc
cli
in
test
or
fs
add
pushf
mov
test
and
outsl
or
cmp
lods
pop
cmpsl
adc
ljmp
push
or
fistps
xchg
mov
les
sarl
cli
repz
rorb
sub
jl
xchg
jge
mov
add
xor
stos
stos
sub
cmpsb
fcomp
pop
std
xchg
sbb
in
pop
adc
stos
clc
xor
cmpb
test
and
sub
cs
js
push
pop
roll
cli
int3
mov
mov
popa
push
negl
push
xor
jl
xor
add
mov
inc
sbb
cmpsb
gs
jae
fistpll
ret
lods
lret
mov
or
xor
push
xor
or
pop
mov
jne
les
cmp
out
bound
sub
sub
dec
inc
bound
xchg
lock
sbb
stos
jbe
push
mov
jno
aad
iret
cltd
and
inc
mov
sahf
adc
pop
test
cld
loop
in
dec
and
bound
fwait
push
dec
mov
and
adc
mov
inc
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
jle
nop
lds
sub
adc
insb
pop
sbb
add
and
test
arpl
pushf
xchg
cmp
or
orb
lods
popa
shrl
push
cmp
roll
or
pop
mov
lcall
ss
mov
test
sahf
or
jne
rcrb
aaa
xlat
xchg
cmp
mov
xchg
repz
cmp
icebp
add
push
cmp
sbb
int
or
fwait
xor
xchg
int
xor
jb
fisttpll
cmp
push
or
mov
sahf
xchg
sbb
js
adc
scas
fwait
leave
xchg
jl
andl
imul
push
adc
mov
shrb
pop
sub
mov
dec
call
push
rcl
jae
pushf
lods
pop
jae
mov
or
jb
fwait
dec
call
hlt
repz
in
inc
xchg
jl
into
rcll
add
mov
sbb
add
mov
mull
aam
jae
push
addl
xor
mov
hlt
cmp
pop
add
add
mov
jge
jg
ret
outsb
dec
dec
fsubrl
pop
arpl
aaa
inc
repz
and
adc
and
lods
fisubl
sub
pop
sbbl
outsl
jmp
test
test
inc
inc
inc
push
sbb
loope
leave
add
inc
jge
and
pop
pop
rorl
movsl
lods
adcl
jmp
fidivs
aad
rorl
xchg
fmuls
cs
movsb
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
jle
nop
lds
dec
dec
adc
mov
bound
lret
arpl
popf
jo
push
sbb
push
xor
lds
mov
shrl
stos
or
mov
iret
cmpsl
mov
data16
sbb
addr16
push
scas
imul
scas
mov
xchg
mov
jmp
and
push
roll
push
push
xor
mov
or
sbb
lods
jge
fs
into
aam
jge
pop
xor
mov
mov
pop
stos
js
inc
mov
pop
jb
add
mov
out
push
scas
shll
sub
add
lea
addr16
mov
fstl
pusha
in
loop
dec
push
loopne
or
push
xchg
loope
dec
lock
mov
dec
adc
inc
fxch
cli
sarb
inc
inc
insb
or
ja
xchg
jns
lret
xchg
sbb
mov
stc
in
lock
push
or
je
cs
mov
inc
ljmp
lcall
xlat
dec
sub
cmc
xor
sbb
std
fistpll
stc
mov
mov
test
in
andb
mov
cmpsb
dec
sub
lcall
ss
mov
fiaddl
inc
imul
ss
ja
adc
or
gs
sti
addl
sbb
mov
in
fidivrl
cmp
jmp
std
stos
mov
mov
jae
lahf
outsl
aas
addl
mov
sti
sti
and
test
sbb
shrb
cmp
mov
sahf
dec
mov
into
pop
stos
movsb
dec
repz
ret
loopne
inc
lds
cltd
xor
mov
add
mov
pop
sub
les
popa
stos
int
dec
mov
fdivp
dec
inc
popf
leave
cmc
sbb
shrl
sbb
jne
addr16
flds
sub
sahf
xchg
sub
xchg
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
lret
sbb
cmp
pop
mov
rorl
scas
push
repz
imul
scas
push
push
cmpsl
out
arpl
scas
mov
inc
call
pcmpeqd
ja
inc
test
daa
dec
leave
movsl
jno
pop
cs
jne
mov
xor
mov
xor
test
mov
inc
push
ja
or
sub
adc
rcrl
ret
and
in
xchg
pop
xchg
fcomps
mov
addr16
add
iret
loopne
test
jl
mov
hlt
push
aas
mov
xor
outsl
mov
xor
insb
xor
lret
mov
in
addr16
lea
push
ss
int
inc
jno
pop
cmp
into
ret
sbb
dec
xor
sub
mov
fmul
xor
push
ret
and
add
and
shl
push
mov
scas
push
and
sub
mov
lret
mov
mov
pop
dec
push
dec
cmp
or
pop
pop
xor
fadds
or
or
dec
jae
xor
jns
dec
mov
adc
dec
enter
es
mov
rcrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
xchg
adc
mov
mov
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
enter
roll
icebp
pushf
jle
mov
xor
jmp
dec
inc
jecxz
xchg
outsb
xor
pop
cmpsl
fisubl
cmp
inc
push
pop
inc
andb
lret
fstl
out
mov
loope
pop
sub
lock
pop
mov
cs
inc
push
clc
mov
jns
gs
mov
sub
cld
xchg
sub
lret
jae
xor
mov
cmc
add
pushf
sbb
loop
nop
xchg
mov
jle
dec
fdivrl
enter
mov
in
mov
jnp
inc
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
mov
out
out
aaa
lahf
cmpsl
or
sub
dec
aaa
mov
movd
decb
in
int
imul
lcall
pusha
pop
push
pop
mov
inc
inc
dec
lahf
sub
rorb
test
scas
loope
xor
cmpsb
sbb
ljmp
sbbl
hlt
mov
mov
rcl
rorl
in
lods
stos
cmp
ljmp
pop
cli
movsb
leave
pop
notl
ret
jae
mov
bound
sbb
outsb
or
cmp
ret
int
lcall
sti
addb
dec
xorl
lods
push
sub
or
and
iret
xchg
adc
pop
and
mov
repz
inc
das
push
inc
stos
das
and
or
das
adc
les
cmp
pop
int3
inc
dec
mov
dec
mov
jns
out
mov
out
loopne
js
rorl
into
inc
lret
loop
movsl
fists
aaa
imul
lock
or
movsb
jo
mov
mov
sarb
cmpsl
pop
or
fldcw
leave
inc
rcl
and
arpl
vpavgb
mov
mov
fsts
inc
pop
cli
add
inc
mov
int3
pop
jg
adc
movsl
lret
lcall
sbb
std
fistpll
stc
mov
mov
test
sbb
subb
imul
cmp
vsubss
lods
inc
inc
int3
mov
mov
in
ja
sbb
jge
fisttpll
rol
pop
jno
sbbl
xchg
aaa
sbb
mov
pop
xchg
pop
lret
push
mov
clc
jecxz
mov
jmp
std
mov
sti
and
sbb
lret
dec
sbb
fidivrl
addl
mov
inc
jbe
xor
or
fwait
mov
jmp
mov
jmp
outsb
push
pushf
inc
test
mov
rorl
sbb
xor
dec
mov
insb
and
ficompl
fldcw
ficomps
sbb
loop
scas
bound
mov
jmp
mov
mov
or
xchg
sbb
jnp
xchg
xchg
or
pop
push
outsb
shlb
leave
jns
or
push
clc
cmp
lret
cmp
outsl
or
scas
aaa
mov
cli
jnp
inc
mov
mov
mov
cmp
ret
xchg
sub
and
push
cmp
in
scas
out
jp
inc
pop
mov
jnp
inc
pop
enter
in
jns
outsb
out
sti
inc
pusha
data16
add
add
lock
or
ret
nop
and
push
xor
imul
daa
mov
pop
sbb
insb
add
fadd
fldl
pop
dec
push
jecxz
inc
mov
sbb
insl
rolb
gs
rcrb
repnz
mov
int
inc
sbb
fwait
clc
mov
jnp
in
repz
rcrb
jbe
mov
movl
pop
jmp
lds
sbb
sbb
icebp
or
push
and
nop
dec
and
pop
lret
test
adc
pop
pop
mov
jecxz
sbb
bnd
pop
notl
cmc
jae
addr16
mull
inc
inc
sbb
mov
out
cmp
out
mov
out
lock
std
mov
push
mov
das
aad
neg
xchg
std
fwait
mov
orb
pop
loopne
rcll
or
out
es
mov
push
loop
xchg
ds
push
dec
mov
popf
negl
mov
cmp
sub
mov
iret
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
mov
xor
repz
sbb
push
cmp
je
test
lods
lods
pop
mov
and
push
jne
movsb
pop
repnz
cmpsl
sub
int3
or
sub
dec
repnz
mov
mov
aaa
add
dec
mov
int
or
nop
pushf
rcrb
lahf
adcl
mov
sbb
enter
int
and
fcmovbe
cmp
mov
mov
fisttpl
in
mov
jnp
inc
push
mov
or
in
insl
xchg
popf
pop
adc
fsubs
pop
mov
gs
sbb
mov
xchg
mov
rorb
add
inc
mov
or
inc
and
mov
rol
insb
arpl
rorb
dec
arpl
call
dec
pusha
jae
repnz
popf
ret
mov
mov
or
push
xchg
fisubl
shl
sbb
insl
movsl
aam
mov
roll
shll
push
int
add
decl
ret
fs
inc
fcomps
lds
sbb
lcall
std
jo
aad
dec
fwait
lods
hlt
inc
in
mov
test
pop
and
sub
and
test
xor
popa
cmp
das
rorl
scas
jbe
cltd
imul
test
scas
divb
sbb
aaa
push
leave
jne
sbb
fidivrs
push
lret
mov
cmc
fcomi
lods
mul
fdivrs
and
push
je
or
inc
sarl
xchg
jmp
sbb
push
jle
add
pop
and
leave
sti
int
clc
test
cmp
and
sbb
jno
lods
fwait
lahf
lds
push
and
sub
pushf
ret
pop
mov
mov
sbb
mov
push
ja
inc
in
scas
cmp
inc
cmpl
in
inc
cmp
dec
movsb
jecxz
arpl
cwtl
adc
pop
dec
inc
sbb
je
ljmp
lds
pop
fwait
enter
lods
xchg
mov
in
cmpsb
aas
stos
shrb
sub
jb
dec
pop
bound
add
ja
dec
add
movsb
andl
in
cwtl
add
les
dec
cmp
adc
or
cmp
mov
ret
arpl
or
and
test
pop
imul
push
hlt
mov
popa
dec
mov
sbb
pushf
rolb
call
les
mov
push
inc
rol
push
cmp
or
outsl
aam
dec
sbb
sub
push
mov
insl
aad
mov
outsb
xor
scas
popa
xchg
rcl
movsl
push
test
push
sub
jb
fcoml
movsb
rcrl
mov
xchg
mov
mov
cs
cmp
mov
sub
in
pop
dec
adc
sub
lods
xchg
mov
mov
and
lods
adc
fisubl
negb
dec
cwtl
jae
adc
leave
icebp
xchg
adc
sbb
aam
repnz
rclb
sahf
fptan
mov
sub
std
stos
stos
test
pop
cmpsb
enter
add
mov
mov
in
and
test
fwait
imul
push
hlt
mov
popa
dec
mov
outsb
test
push
push
push
lds
je
and
add
movl
les
es
adc
dec
sub
inc
sbbl
cmpsl
push
sahf
jle
xchg
sub
push
ficompl
in
mov
lret
cwtl
sub
vandnps
scas
sub
jne
and
xchg
addr16
mov
cmc
jp
std
cmpsl
out
pop
xor
xchg
xor
inc
pop
jnp
lret
nop
cmp
push
ret
pop
jl
rcl
lcall
aad
xor
xor
mov
bound
pop
cld
loop
in
nop
xchg
lahf
push
cwtl
lock
aas
xchg
dec
in
rcl
cmpsl
mov
sbb
or
test
hlt
je
lods
outsl
jae
fdivrp
xor
lahf
adc
cld
lods
jnp
outsb
repz
cwtl
add
test
or
fsubr
and
nop
add
dec
adc
pop
sbb
jo
out
jp
and
mov
cmc
cmp
cmc
fninit
pop
dec
push
ljmp
popa
mov
ljmp
and
jl
adc
and
mov
dec
sbb
lcall
mov
sub
cmc
sbb
mov
push
adc
pop
jmp
lds
sbb
insb
repnz
fdivrl
push
lea
xlat
adc
dec
mov
roll
pop
and
imul
or
mov
or
scas
add
loop
mov
inc
lock
jl
pop
je
sbb
xchg
push
inc
out
out
divb
sub
divb
cld
lods
dec
jae
fdivrp
xor
sub
adc
xor
lods
xor
into
orb
dec
inc
orb
ds
cmpsl
xchg
sbb
sub
push
dec
mov
lcall
and
or
adc
popf
je
pushf
mov
mov
sbb
stc
clc
jp
add
cltd
sub
adc
fdivrs
add
lods
cmpsb
sbbb
lret
mov
pushf
dec
push
popf
xlat
stos
mov
rcll
pushf
pop
pop
pop
loope
lcall
stc
jnp
sahf
movsb
xchg
xor
dec
inc
jae
adc
outsl
mov
loope
pop
in
push
test
cli
imul
xchg
sbb
ja
test
loope
movsb
fstl
fsubl
cltd
jg
xor
sbb
add
popa
or
inc
add
subl
dec
std
adc
les
xchg
jns
fimull
push
mov
or
xchg
and
mov
xchg
xchg
push
xabort
xor
cmpsb
ret
cltd
enter
mov
mov
pop
add
or
nop
pop
adc
add
aam
xor
imul
aaa
push
push
push
adc
test
pop
cmp
repz
sti
jge
pop
dec
divl
daa
cmc
dec
inc
test
cld
push
out
ret
sbb
inc
jnp,pt
imul
sbbl
mov
jb
pop
push
bound
push
test
mov
inc
mov
je
sahf
cmp
in
test
or
pop
sbb
outsb
or
cmp
ret
int
lcall
cmp
stos
in
mov
clc
inc
add
inc
sbb
movsb
iret
lods
loope
jg
pop
rcll
fcompl
adc
jmp
roll
in
sbb
std
and
cmp
xor
adc
dec
mov
adc
lret
jae
loope
pop
fdivrl
sti
xor
jb
pop
outsl
or
test
pusha
mov
mov
xchg
adc
mov
loopne
add
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
xchg
std
pop
int3
push
mov
ja
mov
pop
add
out
pop
fstl
wbinvd
imul
push
adc
call
daa
sub
ljmp
movsb
pop
loopne
mov
movsb
shll
lock
jbe
lods
push
xchg
mov
repnz
sub
lret
jnp
jbe
mov
insl
outsb
pop
cltd
enter
fldt
jae
in
scas
aas
test
sub
cmpxchg
dec
lret
and
cld
mov
dec
mov
lret
sbb
xor
add
xchg
pop
mov
fists
les
repnz
repnz
scas
cmp
jae
fidivrs
pop
sub
adc
jl
pop
adc
shll
pusha
scas
fdiv
ss
cmp
leave
int
fcmovb
mov
mov
adc
and
test
lods
lock
sub
js
jae
inc
xlat
ficompl
pop
cmpsb
cli
and
rolb
jo
cmovg
cmp
pop
dec
lret
popf
ds
push
sub
enter
repz
ss
int
and
xchg
cmp
je
sti
adc
inc
ret
pop
test
dec
es
stos
xchg
test
insb
or
shlb
sub
loope
add
dec
xor
xor
dec
mov
sarl
sbb
shlb
inc
addr16
inc
fxch
jb
add
sarl
cli
repz
test
shrl
push
dec
mov
xor
push
les
xor
enter
xchg
xchg
incb
xchg
sbb
sbb
or
pusha
sbb
test
or
addr16
adc
add
xchg
sub
popf
out
mov
cmp
mov
lods
insl
lret
mov
mov
ret
push
jmp
out
pop
iret
or
push
jl
outsb
scas
sbb
sbb
repz
inc
dec
hlt
xor
jmp
mov
sbb
movsl
insl
mov
cmc
and
fisubrl
call
paddq
push
dec
jmp
mov
imul
fists
jl
or
or
sub
push
popa
fsts
movsb
fstl
cld
test
xor
shll
pop
push
fdivr
test
push
sti
jne
sbb
mov
fwait
push
dec
mov
and
adc
mov
pop
jae
inc
insl
out
xchg
inc
test
daa
dec
leave
movsl
jno
pop
inc
push
fwait
ret
push
cmp
pop
rorb
ss
cmp
sub
icebp
lods
push
pop
pop
xor
pop
sbb
xchg
inc
push
fwait
jp
mov
or
repnz
add
addb
je
sti
jae
fildll
jmp
decb
aad
push
pop
push
insl
aad
insl
ficomps
fldcw
stos
lea
mov
fbld
xor
leave
jecxz
arpl
aaa
jl
push
or
sarl
xchg
pop
cmc
add
pushf
pop
pop
xchg
xlat
fistl
jge
aaa
push
jae
xor
pop
jb
cmp
dec
adc
adc
fisubrl
jnp
inc
mov
add
adc
push
add
and
mov
mov
negb
mov
je
pop
lods
addr16
fidivrs
pop
xchg
fxch
jb
sbb
lods
mov
inc
lods
andl
pushf
test
inc
addr16
inc
stos
jae
nop
and
push
xchg
mov
xchg
and
daa
mov
xor
out
pop
xchg
sub
int3
inc
out
mov
mov
fsts
inc
pop
cli
add
inc
mov
push
pop
jg
adc
fs
sub
cmc
sbb
std
fistpll
stc
mov
mov
test
in
andb
out
add
rorl
mov
xchg
dec
and
shll
xorl
and
inc
outsb
ret
mov
or
jnp
aad
jae
ret
xchg
cld
inc
out
xor
out
mov
jp
scas
xchg
scas
cwtl
cld
lds
outsl
jae
idivb
sbb
mov
fldl
lods
lock
mov
popf
loopne
fdivrl
sti
icebp
mov
sbb
xchg
push
xchg
sbb
rcll
addl
push
aad
lret
gs
loopne
cmc
mov
add
jge
scas
sbb
pop
in
pop
pop
add
cmp
mov
cli
test
xor
leave
add
mov
or
mov
sub
jne
test
dec
imul
xchg
rclb
xor
mov
lds
inc
push
cmpb
sub
mov
fildll
sub
dec
push
fsub
ja
in
jg,pn
shl
je
pop
xchg
and
insl
outsb
pop
cltd
mul
int
adc
jmp
scas
ret
mov
fucomip
bnd
out
test
xor
arpl
das
push
divl
mov
imul
outsl
and
lock
xchg
xchg
dec
push
fidivrl
jp
cmp
rcl
inc
icebp
outsl
in
push
or
sbb
xlat
push
jle
divl
and
es
fdivs
aaa
imul
pop
sbb
pop
sub
js
test
or
aas
test
fildl
xchg
mov
mov
push
shll
cld
mov
cmpb
cwtl
pop
lahf
push
sti
cmpl
mov
stos
cmc
lcall
adc
and
jmp
cmp
sahf
nop
aam
push
mov
sub
mov
fisttps
and
cmpsl
xchg
leave
push
add
inc
ss
push
mov
adc
jno
mov
or
shl
sbb
cmp
mov
lret
std
cli
jnp
inc
mov
add
adc
push
add
and
mov
mov
jbe
adc
pop
pop
push
test
cmpl
popf
xor
lret
mov
cmc
mov
nop
test
jo
mov
pop
push
addl
stos
sarl
or
adc
rcll
pop
push
test
sbb
xchg
xchg
adc
sbb
xchg
das
pusha
test
rclb
xorb
mov
or
test
fisubrl
enter
loop
inc
and
stos
xchg
scas
outsb
lods
sbb
ljmp
inc
add
mov
jge
inc
xor
inc
test
cmp
xchg
fistl
test
add
or
lea
pop
lds
mov
scas
das
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
xor
jae
mov
adc
jge
adc
push
test
into
add
xchg
nop
pushf
inc
cld
jo
or
lds
push
pop
mov
fiaddl
jg
stos
shrb
mov
nop
sbb
lods
xor
or
cmp
or
add
lock
add
mov
cmc
sub
xor
icebp
cli
jp
adc
repnz
jns
lds
nop
lds
mov
fldenv
testl
orl
xchg
test
sbbb
push
adc
add
movl
rcll
and
push
popf
das
test
in
mov
mov
dec
add
js
popf
into
jmp
mov
mov
sub
inc
sbb
pop
rcr
mov
push
mov
xor
clc
jp
pop
pop
pop
jne
sbb
mov
mov
leave
adc
jg
fwait
and
mov
xchg
test
lret
mov
inc
lfs
dec
dec
adc
mov
fisubrs
lret
arpl
call
int
push
pusha
lods
in
xor
leave
pop
ret
push
sub
xchg
mov
and
js
or
push
pop
bound
push
cld
pop
outsb
fistl
insb
jnp
inc
sub
jecxz
cmp
into
repz
mov
push
hlt
inc
ret
dec
inc
sbb
outsl
pop
jge
dec
fsubl
mov
rcr
je
lret
repnz
push
mov
aam
or
test
imul
fidivs
pop
aad
popf
roll
inc
frstor
sbb
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
cld
or
hlt
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
xor
cmpb
je
test
push
movsb
mov
dec
push
dec
orl
or
xlat
mov
xor
dec
arpl
sti
mov
in
xor
inc
mov
jl
xor
mov
into
jbe
in
or
loopne
hlt
jmp
decb
push
insb
jne
inc
into
push
mov
cmpsb
ret
in
iret
cmp
xor
inc
mov
push
mov
scas
iret
bswap
stc
dec
push
out
mov
test
add
aam
addl
add
dec
sbb
sbb
fisttpll
sbb
mov
fisttps
mov
bound
in
nop
xchg
lahf
push
cwtl
lock
mov
or
push
push
mov
push
xchg
dec
mov
push
lods
shrb
loope
call
fbstp
xor
mov
xor
enter
pop
int3
aaa
adc
psraw
push
push
and
test
popf
divl
mov
adc
loopne
std
into
lcall
and
mov
inc
cmovge
lcall
cmp
pop
mov
mov
sbb
sub
push
ja
inc
in
scas
mov
inc
scas
mov
xor
fistl
outsb
repz
out
dec
les
sub
mov
push
xchg
cmp
stos
rcrl
xchg
stos
pop
and
int
stos
lods
mov
mov
xchg
aas
cmpsb
shrb
stos
data16
lahf
jb
mov
or
jo
idiv
xor
out
and
ljmp
cmpsl
cmp
adc
xor
fsubs
gs
std
cwtl
fidivl
inc
pop
in
sub
mov
xchg
push
jle
call
lret
xchg
dec
xorl
lret
add
mov
cmp
mov
lods
sub
ret
ret
sahf
imul
ret
jl
jg
fcomip
test
pop
mov
and
out
dec
sbbl
and
mov
mov
xor
mov
insl
mov
push
fistl
addb
mov
xor
mov
add
lods
mov
push
bound
sub
int3
or
and
in
and
addb
push
dec
add
rorl
test
xchg
sbb
push
xor
xor
pop
ret
jge
or
ret
adc
sbb
rolb
inc
clc
or
fwait
push
dec
mov
and
adc
sub
pop
jae
inc
insl
out
sbb
inc
add
pop
ljmp
ja
mov
push
mov
adc
jb
rolb
pushf
inc
addr16
pop
jnp
sbb
cmpsb
mov
les
fwait
movsl
gs
lcall
and
and
cmp
ret
add
test
mov
push
sub
inc
enter
repnz
jo
mov
adc
xlat
aas
add
lds
push
rcrb
sbb
inc
mov
adc
sub
pop
repz
pop
mov
sahf
sbb
dec
or
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
outsb
or
int
lcall
sti
stos
lds
fwait
lods
mov
pop
leave
test
mov
jle
scas
call
in
cmp
int
push
ror
pop
mov
repz
inc
das
mov
mov
sbb
add
push
mov
int3
inc
dec
int
mov
pushf
jp
xor
insl
fsubs
ja
xchg
pop
ds
int3
fwait
nop
xchg
xor
gs
rcll
add
ds
sbb
xor
je
test
pop
sub
js
test
or
pop
out
arpl
arpl
jmp
stc
jae
inc
ret
rolb
jecxz
imul
into
rorl
cmc
lahf
push
sti
cmpl
ret
dec
jbe
xchg
test
and
pop
pop
pop
sbb
or
cmpsl
loope
lret
cmp
xlat
enter
sub
pop
jo
shrl
ret
xor
mov
lock
jl
rcll
pushf
adc
push
inc
fistpll
jb
jle
mov
std
cli
jnp
inc
mov
add
adc
cwtl
add
and
mov
mov
negb
add
jle
mov
es
dec
pop
xchg
push
std
mov
int
mov
and
dec
add
jo
or
incb
mov
lahf
test
repz
xchg
mov
mov
shrl
arpl
push
sub
ret
jl
sbb
cmp
or
push
xchg
xchg
inc
test
xchg
sar
aas
sbb
sbb
ja
imul
movsb
jbe
mov
aad
mov
mov
loopne
jmp
sbb
pop
mov
mov
jne
jmp
std
mov
jmp
and
push
roll
push
push
xor
mov
or
sbb
lods
jge
fs
into
aam
jge
pop
xor
mov
mov
sbb
mov
pop
jb
add
mov
outsb
rcll
cwtl
jge
jge
outsl
jg
std
xchg
xor
lret
scas
in
lock
mov
jnp
sahf
sub
ljmp
mov
shll
mov
inc
adc
jle
nop
lds
dec
dec
adc
jo
mov
bound
mov
add
test
fwait
inc
test
cltd
adc
sbb
push
pop
stos
gs
int
cmpxchg
sbb
incb
adc
movsl
fcom
adc
sbb
stos
cmpsb
addr16
jmp
push
lea
push
lret
loope
stos
jecxz
cmp
ret
mov
in
push
dec
subl
sbb
jne
inc
adc
sub
push
popa
fsts
movsb
fstl
cld
test
xor
shll
pop
push
fdiv
test
push
sti
jne
sbb
mov
fwait
push
dec
mov
and
adc
sub
pop
jae
inc
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
jle
nop
lds
dec
dec
adc
mov
bound
lret
arpl
popf
jo
push
sbb
push
xor
lds
mov
shrl
stos
or
mov
iret
cmpsl
mov
data16
sbb
addr16
push
scas
imul
scas
iret
pop
stos
fs
cmpsl
add
pop
daa
sub
sub
packssdw
insb
mov
sbb
xchg
nop
sbbl
int3
test
and
outsl
or
cmp
xchg
outsb
push
pop
pushf
jbe
and
jno
movsb
insl
fwait
roll
push
outsb
loope
lds
or
mov
mov
inc
out
or
clc
add
cmp
push
mov
or
in
insl
xchg
popf
pop
adc
ljmp
repz
out
sarl
out
push
test
xchg
add
or
mov
sub
sbb
or
sbb
mov
and
test
pop
arpl
int3
push
xor
jo
and
out
inc
sbb
cmpsl
push
add
shlb
xor
sbb
nop
xlat
stos
movsl
push
movsl
push
rclb
lea
aaa
insb
scas
dec
sub
mov
push
ror
inc
lret
push
mov
orb
mov
jo
in
movsl
leave
add
push
out
mov
or
movsb
js
jbe
xor
frstor
sbb
in
adc
cli
jnp
inc
mov
add
adc
push
add
and
mov
mov
negb
ret
push
jae
lret
sub
inc
xchg
pop
xor
lods
cmp
jle
lods
out
std
inc
arpl
out
fxch
lds
add
stos
xor
or
cli
dec
in
insb
sahf
dec
mov
or
fucom
cli
xor
roll
ret
add
mov
push
xor
icebp
mov
push
cmp
mov
jno
pop
hlt
fs
arpl
pop
inc
xchg
mov
xchg
sar
dec
add
stos
aam
lahf
stos
sub
mov
push
movsb
jmp
push
ja
fs
movsl
mov
stc
mov
mov
sub
jl
sbb
mov
adcl
jbe
sub
sub
jnp
cmp
jmp
test
jg
outsb
jno
insb
negb
mov
scas
pop
pop
or
imul
fadd
cmp
outsb
cmp
scas
mov
out
jb
fsubs
pop
adc
jge
into
sub
das
sti
pop
fistpll
repz
pop
cmpsb
inc
cltd
movsl
mov
mov
add
dec
mov
inc
xor
push
dec
pop
xchg
inc
gs
dec
mov
idivl
dec
daa
mov
lock
jo
push
sbb
and
add
inc
sar
pop
cs
test
jecxz
or
inc
aad
fwait
scas
mov
jno
das
and
mov
in
arpl
mov
jg
sbb
push
push
mov
sub
jne
adc
call
orl
hlt
cwtl
rolb
push
sbb
jg
out
sub
sub
shl
sub
lock
sub
sbb
inc
jmp
sbb
js
fisubrs
shl
leave
inc
xchg
inc
sarb
clc
mov
adc
or
and
sub
or
test
dec
push
repnz
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
stos
clc
xor
cmpb
je
test
loope
and
arpl
adc
xor
ret
xorb
or
mov
mov
out
pusha
xor
push
cmc
mov
dec
dec
jecxz
movl
hlt
fs
arpl
pop
inc
xchg
mov
xchg
out
sti
sbb
jle
jmp
adc
mov
push
movsb
jmp
push
ja
fs
movsl
mov
stc
mov
mov
sub
jl
sbb
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
loopne
cmp
mov
push
or
jo
test
jae
cld
add
cmp
cmpsl
fsubp
fadd
xor
hlt
ja
jge
dec
or
xchg
xor
lret
scas
out
xor
add
jb
aaa
ret
mov
mov
xchg
pop
sub
ds
xor
xor
daa
loop
je
fadds
add
inc
mov
inc
mov
sbb
pop
adc
inc
mov
pop
jb
mov
iret
add
test
jns
push
xchg
xor
leave
add
mov
or
imul
leave
fsubrl
stos
lret
movsl
mov
add
addr16
repnz
mov
stc
push
mov
sbb
insb
scas
stc
ret
xchg
rcr
mov
and
mov
ret
adc
enter
dec
movsl
or
sbb
fistl
clc
jecxz
mov
xor
shll
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
mov
pop
repnz
mov
negb
repnz
jbe
frstor
push
pop
mov
icebp
adc
mov
inc
mov
inc
roll
xor
jne
fdivr
pop
push
push
les
push
mov
nop
shll
fucom
cli
xor
roll
inc
test
std
xor
call
lret
jecxz
nop
pcmpeqb
xlat
inc
aad
or
ret
out
fdivp
dec
xorb
sub
mov
push
fcoml
push
test
mov
lahf
cmp
pop
dec
sbb
add
cmp
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
loopne
cmp
mov
push
or
jo
test
jae
cld
add
cmp
cmpsl
fdivp
sbb
mov
xor
sub
in
cmp
sub
loope
clc
adc
fwait
mov
mov
and
loopne
rcll
or
out
es
mov
push
loop
xchg
ds
push
dec
mov
popf
negl
mov
mov
mov
test
add
inc
sbb
pop
jecxz
movsl
mov
cltd
jo
bound
push
xchg
xchg
cltd
lret
movsl
mov
and
xchg
addr16
std
jmp
sub
imul
sbb
inc
sub
mov
push
push
inc
ljmp
dec
dec
mov
inc
fsubl
ja
in
and
push
jecxz
imul
inc
pop
lcall
das
mov
pop
add
fisubs
xor
mov
or
inc
lret
and
int
or
ret
jb
mov
stc
xor
or
cmp
jmp
or
stos
insl
fcomp
movswl
jmp
std
mov
sti
and
test
cwtl
imul
push
hlt
mov
popa
dec
mov
iret
jg
shll
sbb
pusha
or
pusha
xor
je
idivb
leave
xor
xchg
rolb
adc
or
fimull
sub
dec
fcmovne
sub
or
push
xchg
pop
mov
cmp
paddq
push
dec
iret
lahf
sub
pop
push
push
mov
push
outsb
mov
dec
popf
push
aad
and
jne
push
xchg
adc
stos
jbe
js
sbb
xor
adc
inc
fdivrl
jecxz
fistps
test
cld
loop
in
lret
pop
xchg
in
cmp
mov
and
adc
sub
pop
jae
inc
insl
out
pop
roll
mov
sbb
call
cmpsb
cmp
hlt
repz
push
arpl
clc
inc
es
pop
rcrl
add
ja
pop
cmpsb
dec
cmc
sbb
mov
xorb
mov
call
imul
xor
rorb
ss
inc
ret
arpl
mov
push
fbstp
jmp
ss
movnti
push
push
lds
pop
icebp
pop
iret
aaa
or
xchg
jmp
jnp
inc
das
dec
test
inc
mov
inc
fbstp
jns
loope
lret
aam
in
jmp
push
xor
hlt
inc
or
xchg
or
fidivrl
fucompp
xchg
outsl
or
std
shl
adc
in
test
outsl
or
scas
aaa
mov
cli
jnp
inc
mov
add
adc
push
add
and
mov
mov
negb
and
jnp
lods
inc
jae
add
cs
jae
lcall
repz
rorb
dec
xchg
jno
mov
mov
addr16
mov
ret
mov
aad
cwtl
mov
adc
lahf
jnp
push
mov
cmp
cmpb
cmp
sahf
xlat
xor
mov
cltd
fmuls
mov
nop
xor
inc
popf
mov
add
lods
xchg
sub
adc
inc
in
xlat
mov
fldenv
testl
shll
pop
push
lods
push
xchg
movsl
and
jg
out
in
dec
sub
inc
dec
aad
pop
cltd
enter
lods
mov
mov
arpl
movsl
sub
sbb
sbb
sbb
ret
xchg
mov
leave
lock
mov
test
mov
rcrl
pushf
sub
jnp
mov
js
call
iret
adc
ret
and
popf
int
mov
jne
iret
in
adc
pop
cmp
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
fcmovne
dec
call
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
add
mov
sbb
cltd
orb
xor
mov
arpl
mov
jg
lret
push
repz
cmp
inc
xchg
pop
mov
mov
jne
call
dec
push
sahf
jg
push
es
add
imul
shlb
jp
insl
pop
xchg
push
stos
movsb
shrl
fwait
lods
lods
subb
repz
shrb
and
int
and
icebp
xor
xchg
sbb
xchg
sbb
mov
mov
ficoml
dec
sarb
inc
jmp
push
js
movsb
jp
cwtl
hlt
stos
insl
fcomp
movswl
jmp
std
mov
sti
and
test
js
sbb
xchg
push
hlt
mov
popa
dec
mov
mov
test
arpl
orb
imul
jecxz
sti
jle
lret
cmpsl
pop
push
add
stos
add
outsl
hlt
jmp
decb
push
insb
jne
inc
into
pop
mov
insl
cmc
imul
test
push
stos
test
imul
movsl
mov
ja
lds
imull
sahf
jnp
popa
jbe
lods
push
outsl
sbb
ja
in
es
shlb
jns
mov
push
popa
dec
leave
test
adc
jle
les
jecxz
pushf
sub
cmp
call
pop
xchg
out
js
inc
fdivrl
sar
add
push
push
pop
sti
mov
jp
push
mov
add
jmp
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
stos
clc
xor
cmpb
je
test
loope
and
jecxz
pop
sub
imul
cmp
inc
rclb
xchg
push
adc
xchg
ds
push
ss
add
push
and
mov
or
mov
cmpsb
push
mov
mov
mov
call
mov
lret
imul
push
inc
sub
push
aaa
push
lea
mov
ljmp
push
sahf
jns
loope
fldenv
or
and
mov
sbb
divb
pop
stos
ja
lret
pop
scas
mov
leave
ljmp
jae
in
mov
scas
shrb
mov
mov
test
mov
pop
xchg
mulb
fldcw
push
fisubrl
xchg
adc
js
mov
ror
ret
adc
in
decl
inc
lret
cmpsb
shll
fidivrs
cmp
fcom
into
add
and
rolb
ljmp
jle
scas
dec
mov
inc
xor
adc
mov
rcll
push
cmp
add
iret
ret
xlat
mov
inc
lahf
fs
mov
mov
test
lcall
dec
test
xchg
stc
imul
mov
aam
mov
xchg
push
negl
in
lods
mov
fldenv
cmpl
xchg
stc
cli
in
test
or
test
cmp
sbb
cmpsb
sub
mov
inc
fimull
mov
pop
test
lods
cmp
dec
inc
leave
sub
scas
inc
fwait
lds
sub
repnz
inc
std
rorb
mov
int
cs
dec
les
mov
push
adc
push
iret
xor
imul
pop
jns
mov
adc
cmp
es
ud1
and
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
insl
int
jg
cmp
mov
stos
js
std
scas
xchg
sahf
xor
and
adc
push
or
int3
jecxz
cmp
insb
push
sub
push
mov
jb
sbb
mov
and
daa
lods
imul
lods
inc
popa
fsts
mov
adc
enter
cmc
mov
mov
in
jbe
lods
push
outsl
sbb
or
shl
je
sub
out
fldcw
pop
cltd
dec
out
dec
dec
in
int3
mov
or
inc
jmp
leave
les
mov
sub
ja
inc
fcoml
jg
idivl
out
push
test
out
cmp
out
mov
nop
pop
mov
adc
scas
mov
add
xchg
cs
repz
mov
mov
inc
test
sbb
xor
push
mov
sbb
and
rcll
xor
xchg
sub
pop
sti
sbb
push
sbb
hlt
sbb
add
inc
rolb
je
and
mov
push
fiadds
in
inc
out
test
loopne
mov
je
mov
push
xlat
mov
mov
add
clc
mov
gs
and
into
adc
mov
subb
dec
cmp
dec
les
lds
aad
shll
pop
shr
adc
iret
pop
test
xor
popf
or
and
add
mov
fwait
push
dec
mov
and
adc
sub
pop
jae
inc
insl
out
pop
sarl
jle
adc
fbstp
sbb
lahf
std
cmpsl
enter
rorb
ljmp
jle
nop
lds
sub
adc
insb
pop
sbb
add
and
test
arpl
add
inc
push
sbb
xchg
xchg
jmp
popa
shll
orl
rorl
fs
push
dec
xchg
mov
shll
roll
sub
sbb
leave
test
ljmp
sbb
sub
cmp
pop
dec
sbb
and
fcoms
jecxz
add
mov
push
add
mov
cmpsb
xor
jb
fisttpll
cmp
lds
pop
jmp
pusha
jle
das
pop
icebp
or
cmp
andl
mov
in
testl
mov
fsts
pop
add
and
push
xor
loopne
outsb
mov
or
out
scas
mov
lods
pop
aam
into
repz
lahf
lods
xlat
xor
mov
mov
push
test
push
andl
divb
push
lret
shrl
pop
sbb
test
arpl
call
int
push
sub
push
xor
leave
pop
ret
and
aam
mov
fistl
sbb
or
mov
lahf
cmc
gs
sbb
fwait
aam
sub
loop
mov
jge
xor
adc
mov
adc
popf
ljmp
adc
pop
cmp
mov
cli
xor
dec
sub
stos
les
aam
add
imul
lods
arpl
pop
jg
repnz
aam
cmpsl
adc
cwtl
lock
das
pop
mov
es
lret
inc
inc
pusha
test
stos
fcoms
jbe
fldl
jns
lret
sbb
pcmpeqw
mov
andb
movsl
data16
and
enter
mov
nop
add
and
jecxz
add
mov
mov
addr16
test
sbb
inc
mov
pop
inc
inc
dec
jae
inc
mov
aaa
scas
stc
aaa
push
outsl
jne
jne
ret
fadd
cmp
mov
cltd
xor
cmc
sbb
les
mov
mov
mov
pop
xchg
shll
cmp
xchg
pop
dec
or
mov
cmp
mov
cmpsb
xor
jb
fisttpll
cmp
jl
adc
repz
xchg
cld
add
sbb
loop
add
jg
fadds
inc
lock
cs
push
iret
fidivs
pop
repz
iret
sub
push
push
and
call
mov
imul
mov
mov
dec
or
sub
pop
sbb
inc
xlat
leave
jnp
sahf
sbb
add
popa
sahf
call
scas
popa
and
data16
punpcklwd
in
ss
adc
stos
add
out
ret
sbb
inc
mov
sbb
test
popf
jnp
fldenv
xchg
jb
pop
push
bound
push
test
mov
inc
mov
je
fnstcw
repz
in
bound
test
fildll
inc
outsb
cmpsb
sub
mov
fldenv
mov
pop
test
lods
inc
xchg
push
arpl
inc
jmp
loop
mov
mov
cs
pop
insb
repnz
mov
and
out
cld
xor
outsl
add
into
sub
jp
scas
inc
lods
pop
out
cltd
inc
xchg
jne
pop
dec
xor
and
cmp
out
mov
js
cs
repnz
jns
popf
ret
push
pusha
fnsave
imul
lock
or
movsb
jo
mov
and
andl
mov
std
aaa
jnp
movsl
repz
jne
les
cmpl
sbb
imul
pop
adc
mov
jg
aad
pushf
ret
pop
mov
hlt
mov
arpl
jp
jno
lds
push
clc
stos
dec
and
aad
je
or
mov
test
roll
xor
stos
je
sbb
mov
mov
sub
adc
popl
inc
sbb
lods
mov
mov
sub
das
pushf
pop
xchg
test
aad
xchg
xchg
dec
aam
jecxz
add
das
push
jmp
add
out
stc
lock
jl
mov
divl
adc
sbb
scas
scas
loope
mov
inc
out
scas
mov
pop
cs
popf
jmp
loope
lahf
icebp
cmpsl
ret
stc
pop
test
cmp
je
in
sti
jmp
mov
add
test
bound
jns
ss
or
mov
dec
mov
stc
clc
jp
add
add
mov
sbb
push
xor
mov
arpl
mov
jg
mov
push
int3
push
xor
dec
movsl
arpl
scas
cmp
adc
fwait
push
push
movsb
ret
xor
dec
inc
jae
les
arpl
in
es
test
pop
mov
testl
sub
fwait
lret
push
pop
dec
dec
push
cld
xchg
xchg
mov
sbb
mov
incl
fcompl
and
cs
xor
adc
push
repnz
fwait
push
dec
mov
and
adc
sub
pop
jae
inc
insl
out
sbb
inc
add
pop
lods
mov
jl
pop
lods
out
std
into
add
sahf
pop
or
mov
sub
popf
sub
xchg
inc
gs
imul
push
inc
push
xorl
in
push
inc
movsl
cltd
lret
gs
rcrb
iret
mov
jbe
mov
icebp
aaa
mov
sbb
jge
les
xchg
sbb
sti
sbb
sbb
mov
sahf
das
xchg
stc
cli
in
test
or
test
mov
cmpsb
sub
mov
nop
cli
cmpsl
pop
scas
mov
leave
cli
sarl
call
sbb
sahf
pop
mov
repz
cmp
pop
gs
add
jae
jle
scas
pxor
ret
sti
pusha
das
sahf
xor
mul
inc
lcall
gs
out
jae
pushf
lret
scas
loope
sti
jnp
out
scas
mov
pop
pop
ljmp
outsb
out
lahf
stc
cwtl
shll
insb
lea
sbb
pop
shr
addb
aas
xorl
pop
add
mov
rcrb
pop
jno
xchg
sbb
leave
mov
adc
and
jl
in
test
pop
rcrl
mov
sub
and
xchg
sub
lods
xchg
sub
adc
fldenv
fnstcw
xchg
repnz
inc
ljmp
sub
dec
mov
sub
mov
imul
rol
fs
xchg
repz
dec
popf
aas
stos
shrb
clc
into
bound
insb
ret
xchg
xor
out
jnp
andl
in
cwtl
add
les
push
mov
xchg
stc
dec
cmp
adc
or
cmp
mov
ret
mov
fcmovu
sti
sti
and
test
sbb
shrb
cmp
mov
popa
dec
mov
mov
push
dec
push
adc
inc
mov
mov
pusha
fimull
push
outsb
inc
rcr
cmp
add
outsl
hlt
sbb
into
cmp
mov
xchg
scas
cmp
je
imul
and
test
ss
and
rorl
pop
adc
lcall
out
out
mov
shrl
pushf
push
xor
sub
out
jns
dec
adc
fistpl
ret
inc
cmp
mov
into
jbe
pusha
mov
xchg
inc
or
orb
mov
std
fdivrl
xchg
jg
out
daa
add
leave
xchg
xor
or
push
adc
stos
mov
and
jnp
jb
jb
jmp
push
std
mov
int
mov
or
add
mov
std
pop
push
lds
les
push
jecxz
call
and
jbe
mov
arpl
xchg
lcall
mov
add
loop
dec
cmp
hlt
movsl
mov
jg
add
mov
int
inc
sub
sub
mov
add
out
in
xlat
mov
fldenv
testl
rorl
arpl
jge
les
in
mov
xor
ret
std
les
or
stos
inc
lcall
hlt
inc
les
jecxz
cmpsl
dec
cwtl
loop
dec
fucomi
das
jns
jno,pn
insb
repnz
mov
inc
and
rorb
mov
clc
sahf
imul
jl
insb
jbe
popf
repnz
add
shrl
lea
and
push
out
cmp
dec
cltd
or
dec
sbb
ret
rcll
add
sarl
mov
int
cltd
jns
pop
and
cmpsb
pushf
jbe
pop
aam
jae
push
addl
mov
mov
hlt
cmp
imul
jne
jp
add
add
mov
sbb
push
xor
mov
arpl
mov
incl
sbb
mov
dec
ljmp
and
bound
imul
jns
loope
pop
lods
push
outsl
sbb
dec
pushf
mov
jecxz
imul
mov
scas
push
mov
das
mov
push
sbb
jo
sub
cmpxchg
in
outsl
test
xor
xchg
sub
imul
xchg
xor
pop
sahf
not
int
mov
add
xchg
leave
inc
les
stos
xchg
mov
hlt
ss
outsl
add
xlat
repz
mov
or
incb
aaa
jae
int3
lea
adc
int
jmp
fwait
mov
sarb
push
dec
xchg
adc
or
subl
ds
ret
pop
pop
xor
sbb
test
lcall
daa
and
iret
mov
sbb
sub
push
ja
inc
in
scas
cmp
inc
cmpl
movsb
mov
ret
xor
xchg
out
test
mov
in
movb
xchg
das
fcomp
push
jne
sahf
repnz
mov
jae
fs
xor
insl
scas
roll
inc
fnstsw
pop
xlat
cld
sbb
cmp
mov
fdivs
xchg
pop
nop
fisttpl
test
dec
mov
hlt
fistps
push
aas
fwait
lret
in
mov
mov
or
lahf
cltd
pop
adc
clc
xor
cmpb
je
test
loope
and
arpl
adc
xor
ret
xorb
or
mov
mov
out
pusha
xor
push
xlat
js
jge
mov
dec
mov
adc
push
jmp
dec
mov
insb
sub
push
ficoml
adc
sahf
cli
test
outsl
cli
mov
jne
mov
mov
sbb
lods
cmp
rcrl
xchg
mov
outsb
or
cmp
ret
int
sarb
xor
mov
jp
add
cmp
lds
jle
pop
pusha
jle
das
pop
icebp
or
cmp
sti
and
in
ret
or
or
cmpb
aas
enter
js
add
pop
and
pop
stos
fcom
pop
pop
push
test
leave
mov
adc
lds
out
mov
mov
test
repz
jge
hlt
and
mov
pushf
aas
out
sbb
jbe
mov
cmp
out
jne
cwtl
mov
add
shll
xchg
sbb
lret
int
push
iret
ret
clc
sti
mov
stc
clc
jp
add
add
mov
sbb
push
xor
mov
test
sub
in
push
enter
lods
push
shrl
sub
mov
aad
ja
pop
imul
adc
mov
stc
add
aam
adc
aam
stc
insl
pop
fwait
enter
lods
xchg
mov
inc
mov
aaa
popf
jo
stos
cmp
ljmp
inc
mov
dec
stc
arpl
inc
sarl
mov
sub
dec
lret
fidivrs
cli
shrd
imul
fsubl
mov
fcmovu
sti
sti
and
test
pop
imul
push
hlt
mov
sahf
dec
mov
into
pop
stos
movsb
cltd
repz
push
pop
push
outsl
xlat
sti
ret
in
test
lahf
push
mov
pusha
test
inc
inc
cld
push
dec
xchg
dec
vcvttss2si
pop
mov
push
xchg
fsincos
sbb
int
jnp
and
out
lods
jmp
into
and
movb
cmpsl
je
or
or
or
cmp
adc
mov
push
enter
rcl
lcall
sbb
lods
sbb
scas
mov
push
int
push
xchg
int3
pusha
xor
rorl
dec
and
mov
inc
lock
outsl
sub
imul
scas
xchg
mov
out
ja
popf
bound
loope
sub
mov
sti
inc
lahf
push
mov
mov
jne
iret
in
adc
pop
cmp
push
jp,pt
push
mov
and
pop
lcall
scas
inc
lahf
fcmovne
dec
call
xor
inc
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
in
lods
data16
dec
cmpsb
loop
mov
cwtl
pop
mov
push
fstpt
adc
lret
lds
imull
sahf
jnp
popa
mov
enter
cmp
dec
dec
lret
movsw
cwtl
push
push
adc
jae
xor
leave
and
sarb
or
sbb
js
adc
jno
js,pt
xchg
sbb
mov
gs
adc
pop
stos
aam
mov
jnp
inc
push
mov
or
in
jg
fsubs
mov
stc
into
clc
rcrb
dec
aaa
popf
xor
jnp
stc
fdiv
cltd
ss
inc
pop
jmp
stos
int
imul
mov
sub
pop
add
push
push
push
lds
orb
cmpsl
adc
outsb
scas
icebp
dec
xor
fs
ret
out
cmp
les
pop
test
fidivl
sub
hlt
dec
rcr
xlat
addr16
xchg
lahf
push
jns
lret
sbb
mov
cmp
out
pop
clc
sub
mov
ret
dec
sub
daa
sbb
ret
cld
xor
lods
fisttpl
mov
adcl
jbe
sub
sub
sbb
das
fucomi
test
popf
scas
cmp
push
leave
clc
inc
add
cmp
add
push
icebp
lret
push
mov
js
lock
xchg
xchg
dec
push
fidivrl
jp
jmp
add
icebp
outsl
in
push
or
sbb
xlat
push
jle
divl
and
es
fdivs
aaa
imul
pop
sbb
pop
sub
js
test
or
aas
test
fildl
ret
ret
arpl
lds
rclb
incb
xor
xchg
dec
daa
sub
into
ja
sbb
dec
ficomps
in
pushf
push
sub
mov
loope
adc
add
cmpsb
push
imul
and
sub
mov
pop
imul
shrb
lods
and
mov
jbe
lods
pop
ss
push
mov
xchg
jl
shrl
test
fistl
xchg
jb
xor
lods
aad
sarl
xchg
mov
movsb
mov
xchg
addb
lret
in
cmp
mov
mov
int3
pop
jge
xchg
cmc
mov
mov
jae
add
and
mov
xchg
aas
movsl
dec
fistl
sbb
and
xchg
in
sbb
mov
cmp
test
repz
dec
jbe
mov
bound
subb
mov
arpl
call
add
push
xor
push
xor
adc
mov
inc
xchg
enter
lock
icebp
int
imul
pop
pop
xor
sbb
in
jmp
test
aaa
jns
pop
push
mov
push
aam
ja
stc
cli
in
test
or
test
pop
imul
outsb
cmpsb
sub
mov
mov
dec
cmpsl
mov
push
es
test
pop
and
fcmovne
bnd
out
movsl
mov
inc
sub
nop
scas
pop
out
ret
cld
jae
cld
out
daa
dec
lock
jg
xchg
movsl
cwtl
jle
outsb
ds
je
jbe
jg
dec
dec
cmpsl
in
push
mov
inc
and
mov
cmp
push
insb
into
add
and
rorb
add
inc
mov
out
mov
push
sbb
and
sbb
inc
rcrl
mov
jb
test
and
fildl
in
xor
negl
cmpsb
or
dec
xchg
mov
add
cli
jecxz
cmc
add
and
rcll
in
outsl
in
push
dec
ret
scas
arpl
push
int
inc
dec
dec
fcompl
pop
inc
jle
movsb
inc
sbb
mov
out
leave
inc
lods
push
mov
xchg
ljmp
xlat
je
mov
cmp
adc
push
fsubl
adc
flds
sub
cmc
in
push
adcb
mov
xchg
iret
mov
insl
je
xor
cmp
mov
xor
ret
ficoml
mov
mov
xchg
fadd
pop
aas
xchg
xor
jne
cltd
cmpsl
inc
popf
pop
dec
or
and
cmp
mov
adc
xchg
cmp
or
aas
out
lods
imull
pop
loopne
mov
push
cmc
or
mov
pusha
lret
jecxz
cmpsb
ja
mov
rorl
sbb
fmull
cwtl
dec
xlat
mov
and
scas
arpl
mov
jne
adc
cmp
push
xor
div
pop
addr16
dec
dec
test
lahf
or
xchg
sbb
xchg
stos
ja
add
out
and
sub
es
test
mov
into
inc
ja
adc
xor
jl
pop
out
ret
cld
jae
cld
out
daa
add
mov
pop
cld
mov
inc
mov
dec
insb
mov
inc
loopne
imul
pop
out
inc
inc
push
adc
aam
and
scas
xchg
sub
inc
mov
inc
lock
lahf
out
jno
les
jno
dec
jmp
sub
pop
mov
rolb
jle
ljmp
cwtl
lret
xor
push
fwait
mov
adc
cli
add
lahf
pushf
sbb
sbb
jae
mov
rorl
or
sub
aas
outsb
xor
test
ljmp
mov
enter
dec
das
mov
les
xchg
stc
cli
in
test
or
test
fisubrs
inc
outsb
cmpsb
sub
mov
nop
cli
cmpsl
pop
scas
mov
leave
cli
sarl
xchg
push
mov
sbbb
cmc
out
ljmp
cmp
das
push
roll
scas
push
repz
mulb
cli
scas
push
push
cmpsl
cwtl
jg
test
mov
nop
arpl
pop
inc
sub
ja
popf
lods
push
mov
loopne,pn
js
lock
outsb
out
lahf
stc
cwtl
roll
or
xorl
xorl
pop
add
mov
sbb
sub
stos
mov
push
jmp
call
mov
ret
ffree
push
mov
out
pusha
jp
rcrl
add
xor
mov
cltd
andb
sbbb
mov
and
push
leave
pop
add
sub
mov
fnstsw
xchg
aaa
in
je
sahf
das
xchg
stc
cli
in
test
or
test
pushf
imul
outsb
cmpsb
sub
mov
mov
push
iret
sbb
sahf
roll
in
mov
dec
sub
icebp
cmp
rcrl
clc
icebp
jle
scas
pxor
cld
repz
out
das
dec
lock
mov
aaa
jge
outsl
outsl
call
push
shrl
jae
mov
cs
icebp
lods
xlat
xor
adc
pop
mov
mov
mov
cmp
xchg
lds
dec
mov
pop
inc
cmpsb
jg
stos
gs
pop
mov
lahf
and
jne
xor
bound
adc
xchg
xchg
pop
ljmp
cmpsb
sub
ja
mov
xchg
insb
mov
lret
inc
std
lods
dec
in
pop
push
fistpll
xor
enter
dec
or
test
inc
mov
or
cmp
adc
mov
adcl
jbe
sub
sub
in
ret
dec
loop
add
loopne
cmp
mov
push
or
push
jae
dec
adc
aad
mov
loopne
mov
outsl
jae
push
xor
lret
scas
out
xor
out
jmp
loopne
in
jl
cmp
sub
mov
mov
lods
cltd
hlt
mov
test
outsl
aad
add
lock
adc
insl
int3
nop
mov
dec
and
mov
mov
test
add
test
jns
push
xchg
xor
leave
add
mov
or
mov
push
stos
and
dec
pop
push
mov
and
je
push
les
sub
rcrb
pop
jne
push
sahf
loope
lret
xor
dec
jecxz
inc
mov
in
xchg
iret
or
aad
push
mov
sub
adc
mov
xor
and
outsb
adc
push
cmp
and
add
xor
fsts
add
incl
orb
lea
repnz
xor
mov
push
pop
pop
imul
add
mov
xchg
ds
cmovae
lret
cmp
or
cmp
xchg
sub
popf
out
mov
cmp
mov
lods
movsl
pop
mov
and
or
inc
ret
lds
es
inc
dec
lahf
inc
mov
push
sub
cwtl
mov
mov
push
stc
sub
jge
mov
lock
lods
lahf
push
push
ljmp
sbb
mov
rcr
mov
fildll
push
fwait
mov
rclb
test
xchg
stos
push
repnz
pop
xchg
mov
cmpsb
dec
sub
scas
push
and
sub
fs
mov
jb
loopne
pop
jmp
xchg
inc
xlat
pop
mov
inc
out
push
push
xor
je
popf
fisttps
inc
xchg
adc
addr16
fdivrs
shr
nop
outsb
mov
push
fidivrl
cmpsb
cld
mov
push
cmp
push
lds
jg
movswl
jmp
std
mov
sti
and
sbb
cmp
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
fucomip
jl
adcl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
idivl
call
cmp
loopne
dec
pop
inc
shr
clc
sbb
and
gs
enter
pushf
int
pushf
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
jp
mov
cmp
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fmulp
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
push
mov
pop
test
mov
cwtl
mov
mov
add
jno
xor
pushf
dec
and
xchg
sbb
pop
stos
fsubr
test
xchg
leave
pusha
fsubrs
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
inc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
or
xchg
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
shrb
adc
js
xchg
adc
dec
mov
pop
lods
test
xorl
jns
sub
movsb
fidivl
push
gs
fwait
pop
call
pop
jmp
cmovae
fmuls
stos
loopne
xor
and
and
je
and
xor
je
mov
out
mov
ficomps
popf
adc
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
fwait
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pop
movsl
mov
mov
stos
mov
ja
shrl
cmp
inc
mov
std
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
and
imull
mov
mov
bound
dec
arpl
xchg
dec
inc
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lock
mov
mov
xchg
test
dec
mov
jecxz
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
popa
sub
inc
sarb
dec
add
jp
pop
repnz
push
cwtl
dec
and
imul
dec
add
mov
shll
push
call
xchg
push
enter
mov
mov
mov
mov
mov
out
push
adc
pop
cwtl
mov
hlt
js
xchg
icebp
scas
int3
sbb
scas
jns
lahf
adc
mov
in
mov
cld
aas
in
and
cmc
mov
insl
xchg
sti
aaa
negb
adc
mov
sbb
ss
mov
cmp
add
inc
stos
xchg
adc
sub
pop
push
dec
push
dec
or
sbb
pusha
into
lods
mov
mov
xchg
test
dec
mov
call
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
adc
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
add
stos
inc
movsb
pop
sbb
jno
inc
push
cmp
ret
outsb
pop
dec
push
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jmp
or
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
repnz
scas
inc
movsl
fcompl
xchg
mov
adc
push
add
jbe
dec
sbb
aam
mov
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
cmp
and
or
cmp
shr
mov
mov
dec
cmp
cs
aam
bt
testl
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
jns
test
or
je
mov
jbe
push
xchg
add
mov
iret
add
test
ja
push
movsb
adc
adc
xchg
cmp
stc
mov
enter
bound
or
mov
dec
mov
movsl
dec
insl
mov
xchg
lcall
xchg
mov
mov
inc
xor
fdecstp
js
addr16
scas
inc
movsl
fcompl
xchg
pusha
or
jbe
add
push
aas
hlt
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
cmp
and
or
cmp
shr
mov
mov
dec
cmp
cs
aam
bt
testl
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
jns
test
or
je
mov
jbe
push
xchg
add
mov
iret
add
test
ja
push
movsb
adc
adc
xchg
cmp
stc
mov
enter
bound
or
mov
dec
mov
movsl
dec
insl
mov
xchg
lcall
xchg
mov
mov
inc
xor
fdecstp
js
xor
pop
xchg
sub
addl
add
push
aas
pop
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
mov
inc
popl
xchg
mov
and
xchg
jp
dec
icebp
test
sub
cmp
sbb
xor
fld1
std
jge
xchg
lock
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
jae
jmp
xchg
mov
gs
and
call
cmp
cltd
enter
popl
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
add
or
int
imul
push
sub
jbe
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
jmp
fstp
push
out
mov
enter
sbb
jb
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
in
mov
jns
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xorl
fucomip
jl
subl
shlb
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
dec
mov
mov
xchg
call
cmp
pop
inc
xchg
jmp
clc
sbb
and
gs
mov
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
cwtl
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
pop
mov
pop
xor
mov
mov
cmp
add
push
hlt
das
push
pushf
dec
and
xchg
ss
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
add
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
inc
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
xchg
lcall
sub
test
test
inc
mov
mov
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
ret
mov
imull
mov
mov
bound
dec
clc
sub
jmp
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
call
ljmp
push
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
lret
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
sbb
bnd
int3
xor
loop
and
sub
inc
sbb
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
push
cltd
enter
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
aam
fimull
lcall
inc
inc
fcmovnu
cwtl
inc
out
mov
mov
mov
sbb
push
outsb
sbb
sbb
rolb
fs
icebp
testb
sbb
pushl
xlat
mov
sub
mov
mov
or
ljmp
ficoml
xchg
add
sbb
fdivs
adcb
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
jnp
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
push
jo
jb
dec
subl
cmp
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jg
scas
inc
movsl
fcompl
xchg
rorl
addl
add
push
aas
lods
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
andl
mov
mov
and
xchg
jp
dec
repnz
sub
cmp
sbb
mov
jge
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
or
sub
sub
add
lahf
jle
dec
push
call
cmp
cltd
enter
popl
lea
adc
add
int
jle
fucomip
mov
cmc
mov
and
je
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
insb
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
insb
push
or
int
imul
push
sub
jg
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
aas
lea
and
mov
mov
test
enter
sbb
xchg
inc
ljmp
sbb
xchg
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
out
mov
hlt
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adc
fucomip
jl
adc
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
test
mov
sub
mov
ret
loopne
dec
pop
inc
daa
jmp
clc
sbb
and
lahf
lret
jecxz
gs
pusha
enter
int
clc
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
dec
and
mov
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
ja
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
das
mov
pop
and
mov
fmull
cmp
sbb
push
cwtl
sub
das
std
pushf
dec
and
xchg
pop
lret
fsubr
test
xchg
leave
pusha
xlat
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sub
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
and
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
sti
movsl
mov
mov
stos
mov
ja
mov
shrl
inc
mov
js
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
sub
scas
mov
imull
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lods
mov
mov
xchg
test
dec
mov
test
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
test
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
inc
movsb
pop
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
pop
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
push
loop
xchg
dec
add
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
adc
fcompl
xchg
push
or
jge
add
push
aas
leave
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sar
andl
mov
mov
and
xchg
jp
dec
imulb
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
inc
xchg
mov
sub
cmpsb
inc
and
call
cmp
cltd
enter
ror
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
es
cmpsl
mov
fwait
lea
mov
inc
adc
sub
xchg
or
int
imul
push
sub
icebp
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
jecxz
cmpsb
inc
cmpsl
fstp
mov
je
es
sbb
sbb
inc
push
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
iret
loope
add
sti
mov
pusha
sbb
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
xlat
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
add
fucomip
jl
xor
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
jo
repz
ret
loopne
dec
pop
inc
jp
repz
sbb
and
lahf
lret
jecxz
gs
lods
enter
int
xlat
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
push
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
push
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
jle
mov
sti
mov
adc
cmp
add
sbb
cwtl
sub
das
mov
jne
sbb
pop
stos
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jmp
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
sti
movsl
mov
mov
stos
mov
ja
or
cmp
mov
fsubrp
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
sbb
imul
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
je
mov
mov
xchg
test
dec
mov
mov
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
cs
xor
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
arpl
bnd
int3
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
pop
loop
xchg
dec
push
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
xchg
pop
inc
xchg
rorb
addl
add
push
aas
bound
mov
ret
or
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rcrb
mov
jmp
xchg
sbb
outsb
and
xchg
jp
dec
dec
test
sub
cmp
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
mov
sub
out
inc
and
call
cmp
enter
cli
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
movsb
xor
xchg
cltd
lea
ss
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
imul
adcb
xor
fisubl
adc
scas
jb
cld
mov
mov
or
inc
inc
ficompl
pusha
mov
idiv
je
mov
adc
add
test
cmp
pop
outsl
les
std
lock
fistpl
lcall
cmp
mov
jmp
mov
inc
sarb
js
fistl
xchg
push
cmp
pminub
rorb
fwait
sti
xchg
mov
sub
pop
inc
and
call
cmp
enter
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
movsb
xor
xchg
cltd
lea
ss
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
imul
adcb
xor
fisubl
adc
scas
jb
cld
mov
mov
or
inc
inc
ficompl
pusha
mov
idiv
je
mov
adc
add
test
cmp
pop
outsl
les
std
lock
fistpl
lcall
cmp
mov
jmp
mov
inc
sarb
js
fistl
xchg
push
cmp
pminub
shrb
inc
cmpsb
pop
fwait
repnz
mov
sub
sbb
lahf
jle
dec
push
call
cmp
inc
aam
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jg
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
ret
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
fs
or
int
imul
push
sub
repnz
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
loopne
cmpsb
inc
cmpsl
fstp
icebp
out
mov
enter
sbb
test
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
inc
sbb
fwait
push
jo
cmp
add
rcrl
jo
iret
cmpsl
mov
adc
push
hlt
sub
push
push
and
testl
push
in
dec
scas
fistl
or
mov
rcrl
fcoms
filds
mov
adc
stos
jge
dec
aam
popa
lea
outsl
cmp
pushf
pop
addr16
std
mov
jno
aad
jne
mov
sti
fstps
pusha
das
popa
or
inc
mov
inc
inc
sbb
mov
or
mov
xchg
mov
mov
cli
ss
lds
mov
or
lock
mov
je
in
jecxz
inc
sbb
pop
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
iret
loope
add
sti
mov
pusha
sbb
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
fs
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
fucomip
jl
sub
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
mov
sbb
scas
ret
loopne
dec
pop
inc
in
jmp
clc
sbb
and
lret
jecxz
gs
inc
enter
int
aas
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
xbegin
mov
push
sbb
sub
mov
lock
inc
insl
fwait
sub
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
xor
pop
mov
mov
push
mov
mov
add
jnp
xor
pushf
dec
and
xchg
dec
pop
stos
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
cmp
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
aaa
movsl
mov
mov
stos
mov
ja
pop
test
test
inc
mov
dec
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
push
fildll
mov
dec
pop
mov
bound
dec
or
xchg
dec
inc
shlb
or
imul
nop
xor
mov
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
pop
lods
mov
mov
xchg
test
dec
mov
or
dec
xor
pop
dec
les
movsb
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
mov
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xor
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
pop
dec
mov
bnd
int3
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
cmpsl
loop
xchg
dec
jmp
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
jp
scas
inc
movsl
fcompl
xchg
jae
addl
add
push
aas
mov
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
sbb
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
sub
sub
xchg
mov
ljmp
mov
fdivrl
loope
enter
and
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lock
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
int
cmpsl
mov
fwait
lea
mov
inc
adc
sub
rcrl
or
int
imul
push
sub
idivb
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
cmp
cmpsb
inc
cmpsl
fstp
mov
mov
mov
test
enter
sbb
fildl
inc
add
mov
or
daa
rcrl
xchg
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
pushl
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
andl
fucomip
jl
sbbl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
mov
mov
xchg
repz
ret
loopne
dec
pop
inc
fucomip
repz
sbb
and
lahf
lret
jecxz
gs
ror
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
push
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
bound
pop
dec
mov
fimuls
cmp
add
sahf
push
cwtl
sub
das
les
pop
lret
fsubr
test
xchg
leave
pusha
pop
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
stc
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
inc
addr16
or
ljmp
popf
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
mov
mov
mov
stos
mov
ja
or
cmp
pop
inc
into
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
jp
scas
mov
imull
mov
mov
bound
dec
in
sub
popf
sbb
addb
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
dec
lods
mov
mov
xchg
test
dec
mov
mov
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
loop
shrb
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adc
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
sbb
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
add
jge
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
mov
jo
jb
dec
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
push
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
popf
scas
inc
movsl
fcompl
xchg
pop
or
push
add
push
aas
pop
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubrs
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
sarb
andl
mov
mov
and
xchg
jp
dec
inc
test
sub
cmp
sbb
ffreep
fld1
std
jge
push
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
lcall
cmc
sub
cltd
inc
and
call
cmp
cltd
enter
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jge
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
mov
repz
lea
mov
inc
adc
sub
rcrl
or
int
imul
push
sub
icebp
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
ret
inc
cmpsl
fstp
xor
mov
mov
test
enter
sbb
xlat
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
pop
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
sbbl
fucomip
jl
adcl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
add
mov
shr
repz
ret
loopne
dec
pop
inc
pop
jmp
clc
sbb
and
gs
mov
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
cmpb
push
jb
mov
lds
cmp
xor
adc
stc
push
push
mov
cmpsl
outsb
xchg
pop
lock
enter
add
push
nop
pop
stos
xchg
push
fcmovbe
sbb
fistpl
xchg
std
iret
mov
cmpb
jg
lret
jno
inc
xchg
fwait
out
js
inc
shlb
lds
mov
add
xchg
mov
fcoms
xchg
adc
aas
imul
in
mov
lret
das
shrb
sub
stos
mov
cltd
aaa
mov
mov
cwtl
mov
mov
xchg
sub
add
mov
dec
mov
mov
addr16
cmp
loopne
dec
pop
inc
insl
jmp
clc
sbb
and
lret
jecxz
gs
or
int
inc
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
mov
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
push
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
clc
mov
pop
push
jbe
mov
sbb
push
add
ljmp
cwtl
sub
das
gs
dec
and
xchg
inc
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
dec
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
aam
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
roll
fwait
lods
mov
jbe
xor
int
pusha
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
jo
fsubs
and
xchg
dec
xchg
sbb
movb
mov
xor
cmpsl
stos
sbb
xor
mov
sbb
push
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
call
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
inc
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
or
xchg
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
shrb
adc
js
xchg
adc
dec
mov
pop
lods
test
xorl
jns
sub
movsb
fidivl
push
gs
fwait
pop
call
pop
jmp
cmovae
fmuls
stos
loopne
xor
and
and
je
and
xor
je
mov
out
mov
ficomps
popf
adc
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
pop
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
adc
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
ret
dec
mov
stos
mov
ja
adc
cmp
inc
mov
clc
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
inc
fildll
lock
mov
bound
dec
shrb
xchg
dec
inc
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
out
mov
mov
xchg
test
dec
mov
dec
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
inc
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
subb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
add
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
inc
loop
xchg
dec
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
je
scas
inc
movsl
fcompl
xchg
je
addl
add
push
aas
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
sbb
mov
sbb
test
adc
test
sub
cmp
sbb
sub
jge
dec
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
notl
sub
sub
jo
and
call
cmp
inc
and
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
repnz
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
daa
popf
sti
pop
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
and
or
int
imul
push
sub
hlt
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
pop
lea
pop
out
mov
enter
sbb
push
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
in
mov
dec
and
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
subl
fucomip
jl
or
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
xor
mov
call
cmp
pop
inc
xchg
jmp
clc
sbb
and
lret
jecxz
gs
mov
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
outsb
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sbb
fsubrl
fnsave
push
test
lret
mov
repnz
stos
loopne
push
xchg
push
jae
cld
ret
pushf
pop
mov
xchg
test
cwtl
data16
xlat
dec
addb
xchg
pop
jo
movsl
or
xor
mov
xchg
dec
lock
push
fcoml
adc
ljmp
stc
jmp
js
or
cltd
dec
xchg
sbb
cwtl
int3
dec
and
test
pop
aam
mov
adc
lahf
mov
pop
push
rep
icebp
mov
xor
insl
or
hlt
pop
mov
jmp
mov
sub
push
hlt
es
lea
cmp
lea
test
or
pop
mov
xor
mov
jp
mov
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
outsl
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
outsb
mov
pop
sahf
mov
bound
cmp
add
adc
cwtl
sub
das
inc
pushf
dec
and
xchg
sbb
pop
stos
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
jns
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
xchg
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
lahf
movsl
mov
mov
stos
mov
ja
shrb
cmp
pop
inc
pop
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
push
fildll
xchg
mov
mov
bound
dec
stos
sub
jg
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
add
fisubl
jo
decl
xchg
push
adc
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
sbb
xor
sbb
pop
fucomi
jge
rorl
add
jecxz
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
xorb
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
adc
bnd
int3
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jo
jb
dec
mov
adc
pusha
sarb
sub
push
mov
rclb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
pop
popf
scas
inc
movsl
fcompl
xchg
rorl
addl
add
push
aas
jbe
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubs
mov
cmp
and
or
cmp
shr
mov
mov
dec
cmp
cs
aam
bt
testl
mov
mov
aam
fwait
pop
cmpsl
fists
or
inc
rcl
sahf
jb
insl
xchg
rcrb
jns
test
or
je
mov
jbe
push
xchg
add
mov
iret
add
test
ja
push
movsb
adc
adc
xchg
cmp
stc
mov
enter
bound
or
mov
dec
mov
movsl
dec
insl
mov
xchg
lcall
xchg
mov
mov
inc
xor
fdecstp
js
jecxz
scas
inc
movsl
fcompl
xchg
int
addl
add
push
aas
jg
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shr
andl
mov
mov
and
xchg
jp
dec
sub
cmp
mov
cmp
call
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
mov
jae
mov
xchg
mov
inc
inc
and
call
cmp
inc
xor
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
hlt
pop
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
and
cmpsl
mov
fwait
lea
mov
inc
adc
sub
movsb
push
or
int
imul
push
sub
idivl
and
repz
les
jl
ss
sbb
imul
jecxz
pop
mov
imul
xor
sbb
aas
xchg
mov
rcrb
mov
xchg
stos
push
test
xlat
test
pop
movsb
jmp
jae
mov
rorb
cmpsl
jno
dec
ret
sbb
fdivl
xchg
add
cld
push
iret
leave
mov
sti
enter
cmpsl
pop
insb
ja
ss
jno
pusha
jmp
stos
in
jno
cmc
mov
mov
movsl
or
add
or
mov
mov
cmp
repnz
xor
xchg
xchg
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
std
push
or
int
imul
push
sub
jae
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
ret
lea
pop
out
mov
enter
sbb
jmp
shr
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
pop
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
xor
fucomip
jl
sbbl
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
idivl
mov
sbb
nop
ret
loopne
dec
pop
inc
aas
jmp
clc
sbb
and
gs
pop
sub
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
mov
mov
scas
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
dec
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmpl
fcmovnb
mov
push
mov
mov
add
push
push
cwtl
sub
das
scas
pushf
dec
and
xchg
bswap
pop
stos
fsubr
test
xchg
leave
pusha
fisubrs
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
sbb
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
inc
addr16
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
or
xchg
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
shrb
adc
js
xchg
adc
dec
mov
pop
lods
test
xorl
jns
sub
movsb
fidivl
push
gs
fwait
pop
call
pop
jmp
cmovae
fmuls
stos
loopne
xor
and
and
je
and
xor
je
mov
out
mov
ficomps
popf
adc
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
xchg
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
fmulp
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
test
lcall
sub
push
cmp
mov
movsl
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
pop
fildll
daa
mov
mov
bound
dec
xchg
xchg
dec
inc
shlb
or
imul
nop
ds
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
bound
cmpsl
xchg
test
dec
mov
sbb
dec
adc
mov
dec
les
lahf
lcall
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
ljmp
xor
sbb
rol
fucomi
jge
sarl
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
adcb
sbb
sub
push
cmp
ret
outsb
pop
dec
inc
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
aaa
loop
xchg
dec
dec
sub
or
cmp
sub
push
mov
rcrb
mov
das
xchg
mov
pop
outsl
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
fstpl
pop
insb
xchg
xor
addl
add
push
aas
adc
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rolb
mov
cli
popl
out
sbb
cmp
adc
test
sub
cmp
sbb
test
jge
mov
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
xchg
xchg
mov
sub
or
cmovge
cmp
cltd
enter
aam
pop
sub
push
adc
add
mov
fucomip
mov
cmc
mov
and
jno
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
sti
dec
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
inc
push
or
int
imul
push
sub
std
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
insb
lea
mov
mov
mov
test
enter
sbb
std
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
orl
jmp
mov
lahf
aam
xor
mov
bound
loop
ret
mov
mov
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
js
clc
sub
ror
inc
mov
ja
fs
mov
sbb
mov
jae
aam
iret
mov
mov
pop
adc
add
inc
stos
int
test
add
xor
lods
jle
mov
sbb
cs
jnp
in
mov
icebp
leave
cmc
je
xchg
mov
pop
xlat
mov
loope
xchg
adc
es
adc
or
mov
inc
les
pop
enter
xor
mov
sbb
mov
ds
pop
mov
sti
mov
in
and
sbb
test
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
orl
xor
mov
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
mov
sbb
jg
loopne
dec
pop
inc
int3
jmp
clc
sbb
and
lahf
mov
int
xchg
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
cmpb
push
jb
mov
lds
cmp
xor
adc
stc
push
push
mov
cmpsl
outsb
xchg
pop
lock
enter
add
push
nop
pop
stos
xchg
push
fcmovbe
sbb
fistpl
xchg
std
iret
mov
cmpb
jg
lret
jno
inc
xchg
fwait
out
js
inc
shlb
lds
mov
add
xchg
mov
fcoms
xchg
adc
aas
imul
in
mov
lret
das
shrb
sub
stos
mov
cltd
aaa
mov
mov
cwtl
mov
mov
xchg
sub
add
mov
dec
mov
mov
loope
repz
ret
loopne
dec
pop
inc
out
jmp
clc
sbb
and
lret
jecxz
gs
pushf
int
test
inc
dec
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
and
mov
pusha
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
sub
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
sarb
pop
inc
mov
push
mov
mov
add
mov
hlt
das
outsl
pushf
dec
and
xchg
dec
pop
stos
fsubr
test
xchg
leave
pusha
fsubrl
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
xchg
fmul
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
icebp
movsl
mov
mov
stos
mov
ja
sbb
cmp
inc
pushf
ljmp
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
and
scas
mov
imull
mov
mov
bound
dec
mov
xchg
dec
inc
shlb
or
imul
nop
mov
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
mov
xchg
cmpsl
xchg
test
dec
mov
xor
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
lock
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
orb
mov
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
pop
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
loope
jo
jb
dec
cwtl
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
add
pop
out
xchg
mov
adc
mov
add
push
aas
fistps
mov
ret
cli
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
mov
loope
xchg
sbb
push
and
xchg
jp
dec
clc
test
sub
cmp
inc
out
mov
ret
fld1
std
jge
aad
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
pop
xchg
mov
sub
lret
lahf
jle
dec
fwait
call
cmp
cltd
enter
popl
cltd
nop
mov
add
mov
int
jle
fucomip
mov
cmc
mov
movsb
xor
xchg
cltd
lea
ss
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
imul
adcb
xor
fisubl
adc
scas
jb
cld
mov
mov
or
inc
inc
ficompl
pusha
mov
idiv
je
mov
adc
add
test
cmp
pop
outsl
les
std
lock
fistpl
lcall
cmp
mov
jmp
mov
inc
sarb
js
fistl
xchg
push
cmp
pminub
sarb
inc
cmpsb
pop
fwait
jne
mov
sub
push
inc
and
call
cmp
enter
xor
lea
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
lock
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
movsb
inc
daa
popf
sti
xchg
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
mov
dec
mov
xchg
fistpll
adc
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
sub
cmpsb
inc
cmpsl
fstp
fucom
mov
mov
test
enter
sbb
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
test
push
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
add
fucomip
jl
adcl
xor
mov
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
imul
sub
repz
ret
loopne
dec
pop
inc
push
jmp
clc
sbb
and
lret
jecxz
gs
hlt
enter
int
push
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
sahf
jp
mov
mov
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
or
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
ja
mov
adc
mov
mov
ret
mov
add
push
push
cwtl
sub
das
cmp
jne
dec
lret
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
insl
movsl
mov
mov
stos
mov
ja
sub
cmp
mov
out
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fildll
push
pop
mov
bound
dec
or
xchg
dec
inc
shlb
or
imul
nop
mov
mov
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
sub
mov
mov
xchg
test
dec
mov
fwait
addb
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
out
test
xor
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
addb
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
add
bnd
int3
xor
and
sub
inc
sbb
mov
mov
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
psrad
jb
dec
sub
or
cmp
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
ss
scas
inc
movsl
fcompl
xchg
mov
addl
add
push
aas
xor
mov
ret
shlb
cmpsl
ret
out
cmpl
lea
fsubs
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rorb
andl
mov
mov
and
xchg
jp
dec
ljmp
cmp
sbb
popf
ret
fld1
std
jge
sbb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
les
sub
push
ds
inc
and
call
cmp
inc
mov
lea
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
hlt
pop
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
popf
sti
or
imul
mov
inc
adc
sub
stos
push
or
int
imul
push
sub
icebp
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
cmpsl
lea
repnz
mov
enter
sbb
pusha
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
clc
mov
dec
and
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
and
fucomip
jl
add
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
test
sbb
rol
loopne
dec
pop
inc
cmp
repz
sbb
and
gs
icebp
enter
int
lret
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
jle
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
or
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
adc
pop
jno
mov
rorb
mov
sbb
push
cwtl
sub
das
outsb
pushf
dec
and
xchg
cmp
pop
stos
fsubr
test
xchg
leave
pusha
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
push
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
popf
sbb
sub
or
xchg
pop
jno
lds
sbb
add
inc
adc
jae
out
xchg
pop
shrb
adc
js
xchg
adc
dec
mov
pop
lods
test
xorl
jns
sub
movsb
fidivl
push
gs
fwait
pop
call
pop
jmp
cmovae
fmuls
stos
loopne
xor
and
and
je
and
xor
je
mov
out
mov
ficomps
popf
adc
add
enter
mov
in
out
and
sbb
sbb
add
add
cltd
push
mov
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
inc
lret
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
and
lcall
sub
shrl
inc
mov
sub
cld
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fildll
aad
fldt
arpl
mov
shlb
or
imul
nop
mov
lods
gs
lods
xor
es
sbb
int3
ficoms
loop
xchg
pop
jb
add
push
sbb
add
jae
or
cmp
or
les
xchg
test
push
sub
xchg
pop
pop
cmpsb
call
jnp
mov
rolb
push
adc
sbb
aam
cmp
clc
push
into
dec
fwait
xchg
adc
pop
mov
fldenv
divb
popa
imul
xor
hlt
cmp
test
sahf
js
test
enter
adc
add
test
imulb
negb
push
pushf
cmpb
adc
fnstenv
test
cli
cmp
scas
mov
imull
mov
mov
bound
dec
or
xchg
dec
inc
shlb
or
imul
nop
ss
lods
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
dec
lods
mov
mov
xchg
test
dec
mov
call
add
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
lock
mov
push
dec
lock
xor
sbb
aad
fucomi
jge
shrl
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
orb
sbb
fwait
lods
mov
mov
push
adc
ret
outsb
pop
dec
xor
bnd
int3
xor
fwait
leave
loop
and
sub
inc
sbb
mov
or
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
in
loop
xchg
dec
xlat
sub
or
cmp
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
add
pop
and
andl
addl
add
push
aas
or
mov
ret
movsb
inc
sbb
cmpsl
ret
out
cmpl
lea
fsubs
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
mov
mov
bnd
sbb
mov
or
sub
cmp
sbb
rol
fld1
std
jge
sub
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
add
sub
push
ds
inc
and
call
cmp
enter
pop
int3
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
movsb
xor
xchg
cltd
lea
ss
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
imul
adcb
xor
fisubl
adc
scas
jb
cld
mov
mov
or
inc
inc
ficompl
pusha
mov
idiv
je
mov
adc
add
test
cmp
pop
outsl
les
std
lock
fistpl
lcall
cmp
mov
jmp
mov
inc
sarb
js
fistl
xchg
push
cmp
pminub
sarb
fwait
jne
mov
sub
cld
inc
and
call
cmp
enter
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
movsb
xor
xchg
cltd
lea
ss
ret
loopne
inc
adcb
in
cltd
fisttpl
pop
cmp
sbb
mov
imul
adcb
xor
fisubl
adc
scas
jb
cld
mov
mov
or
inc
inc
ficompl
pusha
mov
idiv
je
mov
adc
add
test
cmp
pop
outsl
les
std
lock
fistpl
lcall
cmp
mov
jmp
mov
inc
sarb
js
fistl
xchg
push
cmp
pminub
sarb
fwait
lods
xchg
mov
sub
aas
inc
and
call
cmp
cltd
enter
dec
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
icebp
pop
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
jno
or
int
imul
push
sub
lock
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
xor
fisttpl
mov
mov
test
enter
sbb
fs
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
dec
pop
xchg
dec
and
mov
add
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
mov
cmp
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adcl
jmp
mov
lahf
aam
xor
mov
loop
ret
mov
add
dec
inc
cmp
push
hlt
sub
push
push
and
ja
inc
in
mov
sbbl
inc
push
and
sbb
xorl
pop
rcr
xor
rcrl
dec
pop
out
cltd
adc
test
mov
mov
xchg
int3
test
jns
dec
ret
or
lret
jno
aad
mov
aad
jmp
fxch
and
shlb
or
sarb
clc
jb
mov
jb,pt
xor
adc
out
or
add
fisubl
pop
fidivrs
jnp
sbb
sbb
xchg
xchg
sti
and
sbb
jb
mov
call
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
adc
fucomip
jl
subl
mov
bound
loop
ret
mov
mov
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
js
clc
sub
ror
inc
mov
ja
fs
mov
sbb
mov
jae
aam
iret
mov
mov
pop
adc
add
inc
stos
int
test
add
xor
lods
jle
mov
sbb
cs
jnp
in
mov
icebp
leave
cmc
je
xchg
mov
pop
xlat
mov
loope
xchg
adc
es
adc
or
mov
inc
les
pop
enter
xor
mov
sbb
mov
ds
pop
mov
sti
mov
in
and
sbb
out
mov
dec
out
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
and
fucomip
jl
cmpl
enter
pop
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
idivl
dec
call
cmp
ret
loopne
dec
pop
inc
jns
repz
sbb
and
jecxz
gs
pop
enter
int
loopne
dec
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
mov
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
mov
fsubrl
fnsave
push
test
lret
mov
repnz
stos
inc
inc
pop
dec
ds
sbb
jmp
rclb
arpl
jo
test
sbb
xorb
cmp
arpl
cmpsl
add
pop
xor
xlat
fistpl
push
pop
cmpsl
push
jg
mov
enter
or
xchg
dec
rcrl
push
jb
adc
adc
sti
mov
or
fsubs
sub
fdivrs
cli
jae
loopne
xor
lahf
cltd
xlat
pop
mov
xchg
adc
add
push
scas
loop
mov
add
and
hlt
cwtl
mov
imul
cmpb
xor
pop
xor
mov
jp
mov
push
clc
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
xchg
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
movsl
mov
pop
aam
mov
aaa
mov
mov
add
bound
cwtl
sub
das
mov
pop
lret
fsubr
test
xchg
leave
pusha
fsubrs
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
mov
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
dec
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
scas
dec
jge
jg
rorl
das
roll
fwait
lods
mov
jbe
xor
int
pusha
mov
lret
rcll
lret
xor
mov
or
pop
xchg
mov
inc
sub
add
jo
fsubs
and
xchg
dec
xchg
sbb
movb
mov
xor
cmpsl
stos
sbb
xor
mov
sbb
push
adc
sub
fildll
stos
cld
xor
je
arpl
lds
cmp
movsl
add
cltd
push
dec
mov
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
mov
jge
test
fucomp
cld
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
push
movsl
mov
mov
stos
mov
ja
fsubrs
cmp
mov
adc
jae
cmp
sub
popf
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
pandn
mov
mov
bound
dec
inc
sub
fistpl
or
cmp
inc
lcall
gs
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
cwtl
lods
mov
mov
xchg
test
dec
mov
adc
dec
lret
imul
xchg
adc
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
scas
xchg
stos
mov
stos
xchg
push
adc
push
dec
sub
enter
mov
cmpsl
sbb
jmp
scas
inc
fwait
push
shlb
jae
sub
mov
pop
cmp
dec
cmp
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
cmpb
inc
movsb
pop
sbb
jno
jb
mov
push
adc
ret
outsb
pop
dec
push
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
popl
ret
pop
mov
and
lcall
cmp
aam
inc
and
stos
gs
jmp
push
cltd
enter
rcll
inc
add
repz
adcl
inc
push
adc
testl
sbb
or
ljmp
aam
fimull
lcall
inc
inc
fcmovnu
cwtl
inc
out
mov
mov
mov
sbb
push
outsb
sbb
sbb
rolb
fs
icebp
testb
sbb
pushl
xlat
mov
sub
mov
mov
or
ljmp
ficoml
xchg
add
sbb
fdivs
xor
stos
inc
movsb
pop
sbb
mov
lods
mov
mov
push
adc
ret
outsb
pop
dec
ss
xor
leave
loop
and
sub
inc
sbb
mov
xchg
ret
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
sti
loop
xchg
dec
arpl
adc
pusha
sarb
sub
push
mov
rclb
mov
das
xchg
mov
sbb
mov
fnstcw
pop
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
mov
scas
inc
movsl
fcompl
xchg
rorb
sbbl
jbe
dec
push
aas
je
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsub
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
rclb
andl
mov
mov
and
xchg
jp
dec
cmp
fdivrs
dec
sbb
mov
fld1
std
jge
out
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
push
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
rclb
sub
sub
scas
inc
and
call
cmp
cltd
enter
mov
pop
sub
push
adc
add
mov
int
jle
fucomip
mov
cmc
mov
and
cmc
pop
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
add
dec
mov
fisubrs
popf
xchg
test
adc
mov
out
repz
inc
or
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
jecxz
cmpsb
inc
cmpsl
fstp
stos
out
mov
enter
sbb
iret
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
pop
xchg
dec
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
inc
mov
dec
and
cmp
hlt
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
addl
addl
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
mov
dec
mov
mov
in
call
cmp
decl
inc
dec
jmp
clc
sbb
and
jecxz
gs
jmp
int
lds
inc
iret
cmpsl
mov
loop
ret
movsl
mov
mov
and
push
dec
cmp
fwait
mov
insb
push
clc
sub
ror
inc
mov
imull
sbbl
icebp
add
jl
jae
mov
adc
iret
xlat
cwtl
pop
push
imul
xchg
jb
mov
cmp
and
cltd
lret
or
inc
sbb
into
scas
fcomip
cli
cmc
xor
jle
outsl
cltd
repz
or
sbb
push
ret
aam
ds
mov
aam
stc
repnz
cmp
xchg
popf
aad
aas
mov
test
test
imul
and
es
fcoms
add
sbb
fdivl
stos
mov
dec
mov
mov
lods
call
cmp
loopne
dec
pop
inc
mov
in
and
lahf
lret
jecxz
gs
outsl
enter
int
push
mov
sbb
mov
cmpsl
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
mov
cmc
push
inc
sbb
push
sbb
sub
mov
lock
inc
insl
fwait
add
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
cmp
pop
mov
jbe
adc
cmp
sbb
push
cwtl
sub
das
jmp
dec
and
xchg
out
pop
stos
fsubr
test
xchg
leave
pusha
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
cltd
push
lcall
daa
iret
cmpsl
mov
imul
xchg
cwtl
lret
movsl
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
jmp
std
mov
aad
jo
xchg
test
dec
mov
sub
test
ja
mov
pop
mov
std
mov
xchg
jmp
in
shrl
outsl
loopne
mov
mov
leave
adc
sbb
sti
and
dec
popa
sbb
cs
dec
sarb
jns
sub
movsl
cwtl
test
xchg
cmpsl
push
or
add
in
test
jae
push
insl
stc
insl
lsl
call
dec
pop
std
bound
xor
insb
sbb
cmpb
xor
xchg
out
lret
and
push
and
sbb
sub
adc
rcrb
scas
jne
cmp
mov
push
cmc
sbb
mov
ret
pop
pop
xor
sbb
test
lcall
jne
inc
pop
movsl
mov
mov
stos
mov
ja
ljmp
cmp
mov
adc
jae
cmp
sub
lret
add
sub
inc
sbb
or
in
inc
pop
stos
xchg
stos
std
mov
and
pop
cwtl
fnstenv
xor
scas
fs
loope
sarl
or
shlb
pop
pop
adc
addl
frstor
mov
push
inc
or
outsb
mov
push
fidivrs
and
mov
cmpsb
sbb
scas
push
push
ret
test
stos
xor
enter
push
adc
add
mov
orl
mov
mov
dec
or
test
aad
sbb
stc
loop
mov
popf
movsl
dec
and
adc
jae
fisubrs
and
xchg
xor
flds
inc
popf
mov
add
lods
xchg
sub
adc
fnstenv
test
cli
fildll
ja
fldt
arpl
sub
xchg
dec
inc
shlb
or
imul
nop
xor
and
cltd
lods
xor
mov
xchg
stc
mov
mov
ror
jae
add
arpl
or
out
and
popl
mov
adc
popf
add
push
into
and
xchg
mov
pop
fidivrl
jnp
stos
gs
mov
cmpsl
cltd
add
mov
outsb
adc
add
sti
in
mov
je
nop
lea
inc
sub
sbb
pop
cmc
fidivs
cmp
mov
xor
jmp
lcall
es
sbb
or
cwtl
pop
adc
leave
ret
jbe
cld
push
push
xchg
xor
cltd
and
mov
scas
pop
rcr
push
mov
sub
cmp
sub
cmc
sbb
pusha
lods
mov
mov
xchg
test
dec
mov
cmp
dec
and
mov
dec
les
rcrl
push
pop
test
lods
inc
sbb
scas
in
add
popf
scas
pushl
arpl
rolb
cmp
xor
xor
addr16
and
or
push
scas
add
xchg
mov
adc
mov
pusha
stos
cmp
mov
sub
out
enter
and
test
sub
fwait
inc
fildll
int
ds
in
shlb
popf
xchg
pop
adc
sub
push
mov
mov
mov
mov
or
cmp
mov
cli
arpl
frstor
and
inc
dec
or
adc
mov
inc
push
lcall
lods
dec
test
inc
sbb
cs
mov
sahf
das
xchg
stc
cli
in
test
or
sbb
and
cmp
xchg
stos
mov
stos
xchg
push
adc
push
dec
dec
test
xor
sbb
data16
fucomi
jge
shrl
mov
andl
addl
call
test
rorb
stc
mov
adc
out
inc
insl
sti
imul
outsb
pusha
and
mov
rcll
sbb
leave
rclb
mov
xor
sub
and
sub
sahf
xchg
into
add
inc
fcomi
fdivl
lods
cltd
pop
pop
minps
imul
jecxz
inc
ss
pop
add
adc
repz
and
int
inc
sub
push
fs
les
lret
ja
mov
push
negl
fs
movsl
dec
stos
pop
rcrl
shll
test
mov
sbb
fdivs
add
stos
inc
movsb
pop
sbb
jno
test
cltd
push
adc
ret
outsb
pop
dec
mov
int3
xor
and
sub
inc
sbb
mov
pop
xchg
pop
mov
mov
mov
cltd
pop
lock
fidivrl
xor
cmpsl
ret
punpcklwd
outsl
push
andnps
inc
xor
mov
push
adc
inc
dec
test
sbb
mov
rcl
ror
mov
xor
or
xor
and
in
xchg
pop
inc
bound
iret
cmpl
cmp
lret
lock
fiadds
dec
inc
push
addb
add
int
mov
dec
or
fstp
inc
lahf
sti
jecxz
std
mov
sub
lahf
movsb
leave
fs
add
xor
into
movsl
ret
pushf
bound
sub
test
inc
sahf
cmp
mov
cmpsb
xor
jb
fisttpll
pop
mov
mov
cltd
lods
inc
and
lahf
scas
mov
mov
jb
dec
sbb
adc
pusha
sarb
sub
push
mov
rcrb
mov
movsb
cli
xor
mov
loopne
fidivrs
sti
mov
push
mov
mov
lea
in
mov
push
xchg
and
sbb
pop
push
mov
ret
mov
xor
lods
imul
cmc
test
hlt
xor
sti
jne
jle
enter
mov
jbe
adc
test
inc
test
inc
pop
jg
sbb
into
mov
js
cwtl
xor
aaa
fsts
sti
sahf
jnp
mov
mov
in
je
cmp
lret
xchg
ret
test
or
outsb
cmpsb
sub
lcall
ficomps
xchg
shrl
dec
movsb
aad
xor
xor
fdecstp
js
cwtl
popf
scas
inc
movsl
fcompl
xchg
das
or
push
add
jbe
dec
dec
push
aas
sti
cwtl
dec
and
xor
test
insl
jmp
xchg
enter
cmpsl
ret
out
cmpl
lea
fsubr
push
movsl
mov
daa
loop
hlt
xor
mov
addr16
int
mov
add
adc
adc
inc
arpl
fistpl
pop
pop
loope
pop
iret
ret
xlat
lea
xor
dec
cmp
imulb
jo
imul
sbb
sbb
cmpb
stos
int
mov
fnsave
test
insb
push
push
xchg
inc
sub
lret
mov
mov
pushf
shll
fcoms
lds
les
cmp
shll
dec
pop
xorb
pop
jno
lds
inc
push
js
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
shlb
andl
mov
mov
and
xchg
jp
dec
mov
cmp
sbb
test
fld1
std
jge
std
cmpsb
inc
cltd
xlat
call
int3
pusha
ds
iret
jecxz
mov
sub
cmpsl
mov
das
out
cmc
mov
nop
imul
shrb
insl
loope
mov
bound
mov
sbb
push
sarl
rol
dec
pusha
cltd
ret
mov
test
jno
sub
add
cmp
add
ret
int3
mov
in
mov
jmp
inc
pop
jmp
movsl
mulb
cwtl
bound
xchg
or
jl
dec
or
sbb
xchg
xor
enter
jecxz
cli
mov
mov
scas
das
pop
icebp
sbb
cmp
pop
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
mov
inc
cmpsb
pop
fwait
sbb
sub
sub
fldl
lahf
jle
dec
shr
jb
js
cmp
cltd
enter
mov
lea
adc
add
mov
fucomip
mov
cmc
mov
and
jne
mov
xor
ljmp
ja
mov
mov
push
sub
dec
push
adc
add
xlat
sbb
insl
xchg
ret
inc
mov
movsl
mov
push
insb
mov
sub
movsb
sbb
pop
and
cmpl
jo
shll
fadds
or
cmp
lret
lods
repnz
mov
sub
mov
mov
mov
loopne
cmp
cltd
cmpsl
dec
movsb
cmp
mov
repz
mov
mov
jb
add
push
inc
lahf
mov
or
in
mov
jnp
inc
push
mov
or
mov
lock
mov
lahf
cmpsl
mov
fwait
lea
mov
inc
adc
sub
push
push
or
int
imul
push
sub
std
mov
and
repz
inc
or
pop
mov
and
out
divl
mov
add
stos
inc
sbb
in
and
nop
aas
mov
sbb
lahf
add
jne
vandnps
and
shrb
jae
test
ds
popf
push
jnp
xchg
dec
add
push
jl
jnp
hlt
movsb
xor
xchg
or
pop
inc
sub
jl
test
sub
xor
aad
mov
ficoms
fnstsw
sbb
push
into
pushf
sbb
mov
jb
std
rorb
and
fwait
and
push
fistps
push
aas
fwait
lret
in
mov
mov
or
cmp
fstp
add
je
pop
enter
sbb
stos
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
mov
mov
and
mov
sti
mov
pusha
sbb
lods
mov
pop
repnz
sbb
cmp
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
popf
rcrl
pop
pop
popa
sub
mov
fldt
leave
js
xor
test
and
lahf
dec
add
xchg
imul
mov
sarl
push
flds
sahf
dec
fistpll
dec
mov
or
fbstp
xlat
rclb
in
cmp
lcall
iret
sbb
xor
repnz
ffree
push
mov
inc
insl
in
imul
movswl
jmp
std
mov
sti
and
sbb
lds
cmp
mov
mov
call
inc
sbb
dec
adc
call
pop
mov
daa
pop
and
fucomip
jl
sub
imul
bound
loop
ret
mov
subb
scas
mov
psadbw
icebp
mov
adc
pop
stos
mov
loop
inc
in
mov
insb
popa
mov
xchg
mov
rcrl
fistpl
inc
cmp
dec
loope
mov
das
sub
lock
mov
xchg
movb
inc
pop
mov
mov
sub
pop
push
dec
pop
cld
loop
test
stos
dec
xor
in
fadds
and
xor
dec
xchg
rclb
gs
sbb
aam
and
int3
popf
popf
push
mov
jae
mov
pop
repz
in
mov
repz
and
sub
add
pop
sbb
idivl
in
call
cmp
ret
loopne
dec
pop
inc
fwait
jmp
clc
sbb
and
lahf
push
enter
int
shll
inc
int
mov
loop
ret
movsl
mov
mov
mov
mov
pop
cli
sub
aaa
cltd
jo
push
scas
mov
bound
push
pop
push
sub
mov
xchg
push
pop
push
jl
ret
or
mov
leave
rorb
rorl
stos
cmp
or
jno
lds
and
sbb
in
inc
push
movl
leave
icebp
cmp
fiaddl
mov
add
xchg
dec
fdivrl
test
enter
fnstenv
xchg
jmp
lods
jge
imul
sbb
mov
sbb
out
mov
repz
cmpb
je
test
inc
pushf
cmp
mov
adc
xchg
cmp
or
pop
mov
xor
mov
jp
mov
fdivr
sti
mov
jecxz
push
sbb
sub
mov
lock
inc
insl
fwait
pop
leave
fsubrl
fnsave
push
test
lret
mov
repnz
stos
rorb
stos
mov
pop
cs
push
or
xchg
test
or
out
mov
pop
xchg
cmp
roll
mov
sbb
test
mov
cmp
scas
push
jg
stos
in
jno
mov
mov
or
add
cmpl
in
aaa
jb
adc
or
pop
inc
test
or
nop
dec
pop
jge
fwait
xchg
out
scas
dec
xor
and
xor
push
insl
xchg
fcmovnbe
xchg
jg
lea
insl
ds
sbb
call
ret
xchg
inc
jmp
or
xchg
push
hlt
cwtl
movsb
popf
xchg
push
cmpsb
pop
ret
adc
cwtl
dec
and
mov
mov
test
add
hlt
jns
ljmp
push
mov
or
cmp
or
sbb
push
cwtl
sub
das
inc
pushf
dec
and
xchg
lret
fsubr
test
xchg
leave
pusha
push
scas
mov
jecxz
cmpb
ljmp
push
sbb
cld
xor
mov
daa
xchg
stos
lds
mov
or
adcb
push
pop
pop
cld
inc
jecxz
lods
lret
adc
loopne
sbb
popl
cmp
mov
jb
add
movsb
sbb
sbb
test
scas
ss
xor
imul
dec
fnstsw
lods
dec
mov
call
mov
jne
out
out
cltd
clc
bound
push
and
pushf
and
stos
ret
sbb
push
loope
test
add
mov
lods
lea
pop
inc
sbb
and
fsubrs
popf
mov
cmp
jp
add
adc
sbb
mov
insl
cwtl
adcb
cltd
int3
addr16
les
rcl
stos
mov
pop
test
lods
push
dec
ss
dec
add
jg
scas
mov
popf
lret
lret
lods
push
cmp
dec
mov
push
mov
push
xchg
cwtl
rclb
stos
mov
mov
pop
dec
mov
xchg
mov
add
pop
lret
mov
popf
push
dec
sarl
in
divl
mov
sbb
daa
and
fdivl
mov
adc
mov
xlat
insb
popf
jmp
push
cmp
xchg
lds
int
andb
cmpb
sbb
jb
aad
lret
pushf
dec
daa
sub
pop
das
or
push
jae
sub
or
or
clc
je
imul
and
and
inc
mov
rorb
and
nop
mov
insl
and
pop
mov
dec
cltd
jge
xor
pushf
dec
and
ror
add
sub
mov
adc
adc
mov
mov
divb
mov
mov
test
fcmove
mov
sbb
lahf
jns
dec
mov
xchg
sub
sbb
cmp
imul
in
cld
jle
scas
inc
enter
cld
pop
aas
lret
sbb
cs
jno
pop
stc
xor
test
les
in
push
mov
in
jbe
cld
jns
pop
shlb
pop
pop
mov
mov
outsl
adc
jle
popf
bound
shlb
hlt
loope
mov
ret
and
shll
xchg
dec
fcmovnbe
idivl
shr
xor
cmp
add
add
adc
clc
sarl
clc
cmp
pmuludq
enter
loopne
sbb
sbb
jl
pop
adc
cld
push
enter
imul
dec
je
cli
mov
jno
mov
fcmovnu
ljmp
bound
mov
inc
cmp
inc
jbe
inc
mov
ficoml
stos
jecxz
jg
mov
fs
rcrl
repnz
push
lahf
jnp
inc
pusha
fistps
orb
arpl
rclb
mov
jl
fldl
jo
xchg
cltd
mov
out
mov
sbbb
cmpsb
xlat
add
mov
push
or
bound
mov
sbbl
mov
sbbb
cwtl
adc
dec
inc
je
js
aas
adc
or
dec
bound
ljmp
cltd
pop
sub
xor
mov
mov
inc
sbb
nop
stc
std
mov
or
pop
mov
ja
rorl
xor
fidivs
test
int3
adc
test
inc
pop
lods
mov
add
sub
in
movsl
push
dec
dec
mov
lods
push
cmp
nop
shll
mov
imul
push
std
ss
scas
dec
paddusb
xor
adc
leave
es
jle
mov
fs
lahf
ret
mov
pop
addl
fdiv
js
stc
xor
test
les
fwait
in
push
pop
pusha
inc
std
out
or
fsubl
pop
rcl
jb
out
sub
jmp
and
mov
test
faddl
icebp
mov
xchg
cmp
orb
and
dec
imul
arpl
push
aam
nop
cmp
pop
sub
add
jecxz
cld
xchg
test
sbb
inc
and
mov
push
xchg
out
test
das
stos
fisubrs
adc
scas
pop
cmp
call
dec
rcrl
shll
test
mov
sbb
cltd
les
adc
dec
mov
cmpsl
dec
push
xor
ret
mov
fdivrl
repz
gs
rorb
ret
insl
jne
mov
inc
sti
jbe
push
fsubrs
sbb
mov
pop
xchg
push
push
or
push
push
daa
dec
out
mov
ret
fld1
gs
jmp
or
cmpsl
fstpl
je
cwtl
orb
out
fwait
rclb
cwtl
stc
inc
cmp
das
and
mov
fsts
lods
sbbl
imul
arpl
ds
lock
inc
sbb
cmp
mov
int
mov
xor
mov
lds
nop
lds
clc
sub
lret
push
mov
inc
fisttpl
test
mov
les
test
push
sbb
lret
or
push
outsl
lds
sub
cld
or
sbb
and
test
cmc
cmp
add
add
sub
mov
aam
icebp
mov
mov
adc
outsb
mov
push
fidivrl
push
jmp
mov
in
mov
fld1
popa
jge
ja
aas
mov
bound
out
popa
cwtl
mov
push
orb
test
gs
xchg
movsb
cmp
clc
js
test
xor
sbb
push
mov
pop
mov
mov
test
clc
int3
mov
mov
sub
mov
fiaddl
popa
cwtl
rolb
xchg
mov
sbb
pop
loop
ds
jno
pop
xor
mov
stos
push
test
imulb
in
pop
lcall
pop
lcall
les
test
and
jnp
push
push
mov
or
sahf
fcoml
ja
sub
xor
test
cmpsl
xchg
pushf
add
das
adc
add
aam
clc
adc
adc
or
je
mov
repnz
xor
adc
push
sub
imul
sets
pop
mov
or
pop
fdivrl
jnp
mov
iret
insl
nop
xchg
sbb
sbb
jecxz
adc
push
imul
pop
push
pop
push
or
cwtl
test
aaa
jmp
les
cmpl
dec
lahf
lret
in
ret
mov
or
jl
adc
mov
cltd
mov
mov
pop
mov
push
rorl
or
incl
xor
push
in
int
les
nop
pushf
cmp
mov
std
mov
inc
mov
cmpsb
mov
fisubrl
sbb
std
inc
daa
inc
sahf
fs
rcrb
sbb
adc
fldcw
mov
scas
aaa
mov
cli
jnp
inc
mov
cwtl
lock
sbb
nop
stos
xchg
rorl
or
pop
fistpl
icebp
fdivs
lea
pop
or
adc
mov
cmovae
repz
popf
sbb
or
push
enter
pop
xchg
mov
mov
fldl
int3
adc
js
test
xor
sbb
push
mov
pop
mov
mov
test
clc
int3
mov
mov
sub
mov
sbb
outsb
or
xchg
sarl
shlb
dec
movsl
mov
mov
cmp
lret
xchg
lcall
xchg
pop
insb
loop
mov
fwait
sbb
add
dec
jbe
mov
imulb
pop
pop
popa
mov
ja
mov
pop
mov
dec
lods
fnstsw
in
inc
sbb
pop
xchg
scas
jg
sub
mov
inc
into
cld
idivb
jl
js
adcl
shll
sbb
mov
lock
fsubs
sub
cmp
imul
pop
fsin
repz
flds
inc
cltd
clc
loopne
and
sbb
mov
dec
jb
sbb
and
fstps
ja
adc
scas
shr
mov
pop
xor
stos
orb
cs
cmovo
test
adc
sbb
mov
xchg
into
iret
xor
mov
cmp
lock
js
test
lret
and
cmp
mov
jae
push
mov
jmp
shll
xchg
cltd
adc
nop
fistl
movsl
or
ret
rcl
cltd
fcoml
stos
test
xor
jmp
mov
out
andb
adc
sub
les
mov
adc
mov
and
add
mov
and
call
jg
out
movsb
inc
and
inc
push
dec
push
ret
mov
xchg
jmp
adc
or
cmp
xor
ficoml
loopne
stos
into
lcall
mov
mov
mov
cltd
fucomp
mov
dec
or
push
xchg
sbb
cwtl
jecxz
adc
jae
ret
aad
pop
sub
loopne
test
cmpsl
in
loope
and
mov
popf
lret
popa
shlb
loop
xchg
dec
mov
mov
push
push
mov
xchg
cld
ljmp
popa
cltd
push
sbb
xchg
scas
and
orb
popf
lahf
adc
out
les
sbb
adc
xchg
lock
loop
test
fwait
xor
mov
xchg
imul
mov
inc
dec
jmp
cmpsl
ret
sahf
lret
fwait
cltd
xchg
dec
fcomi
bound
mov
int3
pop
add
mov
mov
mov
mov
xchg
dec
push
dec
mov
jl
mov
sub
or
or
xchg
mov
sbb
lahf
lret
xor
repnz
cltd
sbb
mov
jecxz
orb
lcall
lret
repz
pop
jbe
sub
cmp
sub
cmc
sbb
call
test
fcoms
sub
test
sbb
sbb
jne
add
or
mov
adc
pop
fs
mov
fisttps
jnp
js
xchg
jg
adc
enter
mov
sbb
pusha
push
test
popl
cmp
scas
push
mov
adc
push
dec
sahf
imul
popf
add
mov
sub
cmp
jnp
jge
dec
sbb
fstpl
xchg
scas
daa
loopne
mov
sahf
dec
inc
int
push
fcompl
insb
pop
adc
xchg
int3
pop
das
idivl
push
clc
jbe
mov
cwtl
stos
pop
loopne
movsl
mov
mov
jmp
jns
xor
or
adc
ja
mov
pushf
sbb
adc
mov
das
push
mov
int3
out
mov
test
lds
lods
push
shrl
sub
test
ljmp
sbb
scas
mov
test
xchg
test
jo
and
fisubl
lods
popl
stos
inc
cmp
nop
inc
pop
rclb
mov
adc
jp
fisttps
fmuls
popl
sub
fbld
lds
rcrb
hlt
cltd
daa
or
sbb
mov
mov
dec
and
xchg
jp
int3
pop
test
sub
dec
fsubs
pop
fidivrs
mov
fwait
lea
pop
out
sbb
inc
mov
cltd
adc
sbb
mov
cs
aad
test
test
bound
mov
arpl
filds
nop
sti
mov
jecxz
xchg
ret
mov
mov
pushf
cmp
loopne
faddl
jecxz
mov
mov
aaa
sbb
adc
mov
sbb
scas
mov
jecxz
ljmp
pop
jne
cmpsl
xchg
push
nop
pop
stos
mov
mov
or
mov
stos
push
inc
sbb
adc
test
lods
mov
mov
pusha
inc
fidivrl
loopne
jmp
push
dec
stos
leave
loop
sarb
rcrb
andl
test
cmpsb
js
int
pop
xor
pop
mov
pop
xchg
lahf
call
sub
mov
stos
cmpsl
ret
fisttpll
cmp
mull
cltd
aad
int3
add
or
push
hlt
test
push
hlt
jmp
push
cwtl
cmpb
xor
shr
and
dec
imul
clc
sub
inc
inc
div
cwtl
adc
cmp
mov
inc
sub
add
add
push
xor
dec
movsb
je
pushf
lret
movsl
ret
adc
lods
fsubrl
mov
push
and
test
cli
movsb
fnstenv
ljmp
cmp
icebp
add
pop
push
jle
or
jmp
stos
and
jg
lods
dec
mov
add
jbe
xor
and
jnp
mov
mov
icebp
leave
cs
inc
mov
out
or
ds
jo
mov
out
sbb
and
cwtl
dec
and
push
out
mov
dec
push
fdivrs
push
cmp
jb
pop
mov
mov
dec
mov
xor
stos
jae
jecxz
or
hlt
jl
fwait
adc
in
fisubs
fsubrl
test
and
rol
mov
sub
enter
inc
pop
pop
outsl
jecxz
pop
daa
dec
repz
pop
stos
lahf
std
enter
dec
in
sbb
sub
xor
sbb
leave
lahf
flds
aad
movb
inc
mov
shlb
fisubl
movsb
fstps
push
adc
ficomps
clc
sub
sahf
fcmovnb
add
insl
mov
outsb
or
imul
sbb
push
rcll
mov
push
test
add
nop
jae
push
mov
ficomps
jl
xor
mov
popl
lds
rolb
cwtl
cld
daa
js
or
adc
mov
mov
mov
cmpsl
jbe
inc
sbb
inc
lods
pop
repz
cmp
test
cmpsb
jnp
clc
ja
mov
adc
sbb
mov
push
or
rclb
xchg
dec
mov
inc
sub
ret
mov
fcomps
mov
dec
sub
pop
sbb
sbb
nop
sti
std
mov
or
pop
sti
scas
add
cli
fdivrs
mov
or
push
leave
sbb
mov
push
mov
pop
or
hlt
test
mov
and
ljmp
jge
and
adcb
mov
stos
mov
or
test
arpl
fdiv
dec
mov
cmp
or
mov
fmull
pop
lahf
inc
adc
sbb
or
inc
test
push
add
inc
mov
std
adc
jmp
mov
fisubs
xchg
sbb
xor
jmp
sbb
fistps
aam
insl
loope
cli
mov
cmp
add
es
pop
pop
cwtl
test
out
push
adc
dec
xchg
cltd
or
out
jle
in
push
shl
mov
sub
test
or
mov
jmp
sahf
jle
imul
pusha
xor
gs
dec
aaa
into
int3
repnz
lods
inc
mov
mov
rcl
lret
pop
xlat
icebp
negb
subl
mov
das
push
dec
repnz
mov
and
add
shll
push
push
dec
mov
fisttps
pop
scas
ret
xor
test
push
or
lds
sbb
mov
fwait
lods
jle
jmp
loop
sbb
mov
mov
push
dec
cmp
cmp
sbb
adc
out
add
cmpsb
js
add
pop
xor
sbb
fldl
push
jle
sub
ja
jno
ljmp
cmp
bound
xchg
xchg
and
pop
add
inc
push
adc
add
ljmp
insb
sbb
pop
xor
ljmp
push
popf
jp
add
pop
cmp
pop
push
shll
sub
pop
dec
jo
mov
dec
sbb
jmp
xchg
sti
int3
jcxz
adc
pop
jg
sbb
test
das
push
dec
pop
rorb
out
fists
fs
sysexit
dec
sbbb
xor
rcll
inc
pop
shlb
mov
shlb
inc
lock
les
or
mov
mov
pop
pop
dec
xor
popf
fists
sbb
or
shrl
xor
adc
outsl
enter
mov
dec
aam
inc
les
inc
push
fisubs
xor
leave
push
insl
xchg
fcmovnbe
xchg
mov
cltd
pop
adc
clc
xor
loopne
pushl
mov
arpl
mov
inc
push
mov
cmpsl
mov
cltd
cmp
shll
ret
stos
ret
test
adc
repz
mov
cmp
jp
add
pusha
js
xor
andb
add
lods
xchg
sub
adc
inc
in
std
test
and
fldl2e
je
sahf
das
xchg
stc
cli
in
test
nop
cmp
add
or
add
xchg
add
mov
cmpsb
xor
jb
popa
jle
cltd
jb
adc
add
adc
fisubrl
jnp
inc
mov
mov
and
add
add
mov
aam
mov
jnp
inc
push
mov
or
mov
rclb
mov
and
lods
mov
jnp
fsubs
cmpsl
movsb
add
das
xchg
dec
xorl
and
into
inc
sub
inc
push
adc
ret
cmp
std
into
inc
mov
inc
pop
pop
mov
loopne
pop
pop
inc
cmpl
mov
jp
add
add
mov
or
jg
and
mov
scas
cli
push
and
mov
les
mov
mov
jnp
sbb
dec
push
cld
sub
fucomp
stc
dec
ss
push
dec
mov
sbb
lret
mov
sbb
xchg
dec
movsl
xchg
mov
adc
inc
lcall
jge
pop
xor
fwait
iret
push
cmp
popa
or
mov
or
push
addl
cmc
hlt
loope
push
mov
daa
das
xor
aas
mov
fists
push
in
xchg
jmp
lea
mov
cmp
fdivs
mov
push
int3
vpunpckhdq
das
mov
shlb
cmpsl
xor
add
mov
cltd
sbb
test
js
test
adcb
lea
jbe
stos
ret
out
xor
jl
cmp
clc
jp
add
add
mov
sub
cmp
pop
stos
push
lods
xchg
sub
adc
leave
push
out
mov
sbb
scas
movl
idivl
jo
xchg
xchg
test
ret
or
cwtl
popf
das
xchg
fisttpl
outsb
in
add
jp
add
xor
sub
xor
inc
xor
fwait
iret
push
push
fwait
push
mov
js
cwtl
hlt
inc
sarb
or
shll
and
pop
int3
pop
mov
mov
xchg
rclb
movd
mov
cmp
sub
jae
xchg
xchg
inc
cltd
enter
mov
fsubs
mov
xor
dec
arpl
mov
int
pop
loop
dec
mov
dec
sahf
dec
cs
mov
int3
lcall
cmpsl
and
sbbb
jae
in
aaa
lcall
sbb
mov
mov
iret
cmpsl
imul
inc
mov
jg
push
jne
xor
and
push
and
xor
jmp
arpl
push
sub
inc
sbb
or
pop
sbb
xorb
fnsave
push
mov
add
xchg
xor
mov
jbe
lahf
jp
xor
mov
mov
lods
movsb
or
loopne
add
inc
add
or
mov
or
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
call
mov
call
cmpl
enter
sbb
push
adc
das
shlb
insl
addl
ja
shrl
dec
repnz
jge
mov
inc
popl
inc
mov
lret
jecxz
std
cmp
ja
mov
scas
or
mov
fsubrl
adc
lahf
insl
mov
pop
outsl
sub
sbb
push
adc
test
mov
lret
ljmp
bound
std
inc
pop
fcmovu
mov
mov
cmp
les
pop
dec
les
mov
gs
lods
fcoms
into
mov
aas
fdiv
xchg
jns
scas
inc
movsl
faddl
dec
shlb
fsubr
or
lds
adc
sub
cmc
jno
fidivrl
ret
mov
out
and
pop
xchg
pop
flds
fwait
ja
aas
mov
or
pusha
ds
loop,pn
repnz
adc
int
cmp
addl
pop
push
stos
add
adc
cmpsb
add
mov
pop
ret
imul
sbb
mov
ficomps
cmp
fwait
xchg
or
lret
lds
xchg
xchg
int3
adc
pushf
insl
mov
insb
or
push
dec
mov
pop
push
test
test
mov
bound
stc
stos
inc
xor
nop
cwtl
pushf
mov
hlt
xor
ret
sub
jl
pop
lahf
cmp
mov
fs
ret
aaa
lahf
sub
loop
ret
scas
cs
idivl
sbb
insb
ss
aas
cmpsl
xor
dec
lcall
aam
ds
jp
iret
loopne
and
push
mov
scas
xlat
insb
imul
ja
test
es
les
xchg
das
ljmp
inc
xor
sbb
test
push
adc
test
mov
or
mov
cmp
mov
sub
mov
cmp
add
dec
jmp
ds
sbbb
lods
dec
jl
adc
sahf
mov
sbb
add
cld
push
sbb
mov
les
adc
sub
mov
jno
mov
xchg
adc
dec
mov
cld
push
shll
cmp
in
subb
xchg
lds
push
lret
xchg
dec
cmpsb
push
push
lret
movsb
push
sub
sahf
jno
adc
cmp
icebp
cmp
lods
cmc
cmp
cmp
or
add
mov
fistl
and
cltd
movsl
adc
outsb
ret
fwait
movsb
mov
test
cmpsl
aad
leave
jb
lret
lahf
cmpsb
sbb
mov
jp
mov
add
je
cmp
insb
jbe
mov
jo
pop
ds
xchg
shl
je
pop
mov
js
pop
aas
cmpsl
xlat
in
idivl
mov
inc
pusha
push
cmp
or
mov
dec
fs
cmp
push
mov
push
push
dec
cmpsl
push
push
mov
pop
insb
push
cmp
outsb
push
mov
and
xor
adc
dec
mov
xor
dec
xor
test
stos
aad
gs
and
dec
mov
mov
outsl
cmp
mov
pop
dec
mov
cmc
cld
jg
inc
inc
xor
adc
pop
add
inc
mov
xor
invd
inc
inc
xor
inc
inc
mov
je
pop
adc
xor
xchg
dec
daa
adc
inc
mov
mov
das
sbb
mov
dec
inc
mov
hlt
jl
pusha
jo
cmp
pop
popl
cmp
xchg
sub
xor
mov
pop
ret
cmp
cmp
sub
mov
repnz
mov
lret
jecxz
push
cwtl
xor
fisubl
mov
mov
and
cmpsl
mov
nop
pop
repnz
imul
insl
sahf
mov
mov
cmp
cmp
std
movsl
lods
dec
pop
jp
pushf
dec
pop
jno
mov
mov
xchg
test
inc
sahf
cmp
mov
cmpsb
xor
jb
loopne
sbb
and
mov
xor
sub
pop
out
js
in
movsb
lahf
mov
sub
xchg
mov
inc
sbb
lea
js
ds
inc
mov
sbb
cltd
or
adc
jmp
sbb
out
test
fwait
pop
pop
into
cmpsb
inc
cltd
enter
in
add
sbb
add
andb
js
sbb
popf
lret
cmp
sahf
dec
mov
aam
movsl
dec
call
xor
mov
inc
aas
pop
cmpb
mov
add
push
inc
or
adc
sub
iret
cmp
xor
leave
lahf
xchg
imul
mov
dec
sbb
clc
iret
pop
mov
sahf
das
xchg
stc
cli
in
test
or
invd
shlb
test
or
add
sub
scas
jmp
mov
movsb
xchg
pushf
cmp
sbb
pushf
jp
lods
je
sbb
jle
lods
fcomip
cmp
and
xrelease
into
shlb
add
mov
jecxz
mov
xchg
imul
xchg
repz
sbb
cmp
test
inc
shrb
cmpsb
inc
loope
repz
jo
push
pop
sub
jmp
dec
addr16
sub
mov
xchg
mov
imul
mov
mov
js
jmp
push
jne
and
ds
lods
ja
fcomi
mov
inc
sbb
outsl
and
imul
sub
cmpb
fwait
popa
cmpsb
clc
icebp
mov
sbbl
sbbb
adc
inc
sub
lahf
cmp
imull
stos
inc
ret
add
and
aam
cmp
ret
dec
xchg
lcall
shlb
jb
mov
fs
xor
xor
cmp
push
mov
or
rclb
es
mov
adc
push
les
rcll
push
fdivrs
push
inc
inc
jge
imul
cmpsb
fcomp
aaa
adc
rclb
fildl
inc
mov
dec
sahf
and
cmpsb
hlt
mov
daa
sub
mov
dec
pop
ja
shl
or
add
in
cmp
movsl
mov
dec
pop
and
jae
xchg
pop
mov
loope
pushf
sbb
mov
lock
jbe
add
aaa
cwtl
cs
gs
mov
add
mov
inc
push
add
lret
test
pop
lcall
repz
imul
fmull
nop
pop
pop
add
xor
or
adc
add
adc
push
xor
mov
cli
shl
sbb
addr16
mov
loopne
jne
inc
add
or
sbb
mov
adc
cmp
mov
cmp
fidivrl
push
sbb
dec
test
jp
cmp
mov
mov
sbb
cmp
es
sub
pop
cmpsb
sub
shr
xchg
cmp
or
mov
call
enter
repnz
mov
in
mov
psubusb
sbb
xor
enter
lcall
dec
test
mov
in
out
clc
lret
inc
in
dec
mov
pop
xor
test
loop
xor
cli
into
xchg
stc
cli
in
test
cmp
dec
sbb
mov
or
std
mov
aam
xor
or
fwait
pushf
adc
mov
xchg
mov
lods
inc
and
pusha
push
jg
cmp
icebp
cmp
lods
cmc
xchg
sub
or
sbb
mov
fwait
push
dec
mov
test
dec
aam
stc
ficompl
push
pop
xchg
push
add
sub
cmp
or
adc
fwait
inc
lsl
gs
outsl
mov
rcrb
sbb
sub
dec
inc
push
dec
inc
shll
sub
loope
aad
enter
ljmp
sbbl
add
lock
jge
lcall
and
adc
shll
push
ss
add
mov
clc
or
adc
mov
icebp
mov
ss
lds
mov
in
lret
pop
sbb
sub
cmp
pop
std
mov
fcoms
pop
shrl
add
sbbl
stos
jb
lds
add
pop
mov
fcmovne
imul
jg
stc
loope
xlat
addr16
push
pop
in
test
or
jge
or
mov
push
mov
arpl
sbb
mov
jnp
inc
push
mov
or
mov
enter
mov
and
clc
rcrb
std
mov
mov
int3
add
sub
mov
fwait
stc
leave
or
mov
xor
adc
pop
int3
lcall
mov
imul
ficompl
pop
pop
lock
clc
iret
sbb
inc
sbb
add
push
sbb
in
xchg
divb
xchg
fidivrl
mov
std
fs
jns
cli
mov
push
clc
mov
aaa
fsts
push
mov
push
push
pop
arpl
add
insl
mov
sbb
in
or
ljmp
lcall
enter
ret
jnp
push
push
mov
add
icebp
adc
js
ret
add
adc
jl
clc
aaa
jge
or
pop
stos
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
cmp
mov
cltd
rep
cmovae
ffreep
mov
pop
sub
aam
sub
xchg
jle
pop
dec
lea
popa
mov
lods
xchg
adc
cwtl
sarl
sahf
lret
mov
loopne
mov
add
adcl
push
lock
pop
push
adc
popl
roll
sbb
rcrb
bnd
stos
mov
add
aam
sbb
cli
cmpsb
jae
mov
push
inc
fstp
insb
mov
insb
push
cld
mov
xchg
ds
leave
push
pop
jp
push
push
dec
cmpsl
push
push
inc
lcall
cmp
mov
mov
jnp
leave
sbb
push
xlat
fucomi
repnz
mov
outsb
loopne
inc
popf
pop
aas
cmpsl
push
mov
pop
pop
sbb
js
jae
inc
cwtl
nop
pop
pop
mov
cwtl
push
cltd
cmpsb
fists
xchg
mov
jae
int
jmp
idiv
les
enter
push
mov
iret
jecxz
enter
or
loope
fwait
pop
inc
sub
das
out
and
pop
inc
inc
mov
pop
dec
pop
test
cmp
and
inc
repz
jnp
pop
fdivs
mov
pop
mov
inc
mov
add
sahf
push
pop
imul
mov
pop
dec
mov
imull
mov
sbb
ljmp
pop
stos
inc
ret
add
lcall
sbb
ret
iret
xchg
lcall
jle
xor
fistl
or
test
jl
adc
std
test
fists
js
rclb
xchg
and
mov
adc
inc
out
jge
sbb
mov
xor
inc
popf
imul
xchg
pop
cmpsb
loopne
pop
ljmp
pop
fdivl
mov
dec
inc
xor
sbb
fcomps
stos
repz
cli
mov
dec
push
ss
mov
ret
pop
stos
dec
and
mov
mov
test
xor
mov
lret
jecxz
pop
cwtl
test
pop
add
mov
xor
lds
push
pop
imul
add
fwait
or
shrl
mov
xor
adc
push
test
and
sub
and
daa
sbb
fstpt
mov
jecxz
loopne
fistl
cltd
mov
xchg
push
sub
xchg
sbb
push
pusha
jp
and
and
push
repz
ss
dec
push
push
cwtl
fsub
sarb
inc
dec
or
add
mov
out
aam
stc
repnz
ljmp
int
int
jns
mov
mov
or
pop
fcompl
mov
mov
shlb
fdivs
sbb
leave
cwtl
pop
dec
push
sbb
idivl
popf
test
orb
xchg
xor
call
inc
sbb
and
mov
push
popf
mov
cmp
jp
add
mov
lock
pop
pop
adc
mov
sbb
aas
sub
dec
lahf
popf
push
xchg
dec
xor
rorl
mov
lahf
mov
pop
jge
jmp
js
stos
xchg
mov
testl
les
test
dec
xchg
or
ret
rorl
cmpsl
int
cmp
movb
push
sbb
test
adc
sbb
inc
sarb
testl
or
jb
xor
icebp
les
fwait
mov
xchg
push
jg
inc
mov
cmp
mov
dec
push
outsl
bswap
lds
les
add
mov
sbb
and
mov
lcall
xor
mov
lea
mov
xchg
xor
jmp
lcall
push
inc
sbb
cltd
call
dec
lret
adc
mov
and
dec
or
sub
into
cmp
sbb
xor
out
jge
fsts
jmp
sahf
pop
test
movsb
sbb
and
sbb
movsl
nopl
ret
jno
adc
test
mov
sbb
lock
les
mov
and
in
push
test
sbb
cld
mov
xchg
mov
test
mov
inc
inc
cmp
mov
lret
sub
mov
stc
pop
mov
insl
xchg
popf
aad
pop
sub
test
loope
daa
outsl
or
test
push
and
jno
cwtl
sbb
cs
and
cmp
mov
mov
sarb
pop
pop
aad
fwait
mov
adc
push
pop
pop
test
pop
or
into
add
shrb
movl
add
rcrl
repz
cmp
jno
enter
sbb
outsb
xor
orl
adc
aam
jge
jmp
lahf
cwtl
les
xchg
stc
cli
in
test
or
invd
mov
shlb
fldcw
xor
jne
or
stos
xlat
aad
pop
pop
rcl
lcall
cs
inc
cmpsl
push
dec
lds
pop
xlat
cld
or
inc
and
subl
es
hlt
push
xchg
and
dec
fcompl
xchg
mov
add
inc
inc
adc
push
out
jns
lret
in
mov
mov
cmp
in
stc
jae
xchg
xchg
inc
cltd
enter
mov
sbb
loop
jg
dec
cwtl
test
imul
sahf
dec
ja
ret
sbb
inc
mov
lret
mov
into
sbb
xchg
movsl
stos
rcrl
bound
ljmp
dec
mov
leave
sarb
imul
les
js
stc
test
test
inc
lret
push
dec
lcall
loop
lret
cmpsl
jno
into
rolb
or
sub
sub
cmp
sbb
leave
dec
mov
cltd
movsb
push
lds
cmp
scas
push
xchg
mov
std
cli
jnp
inc
mov
mov
inc
cmp
pop
mov
cwtl
test
xor
jmp
add
mov
stos
xor
into
fcoms
std
jb
inc
cwtl
xchg
je
jmp
movsl
dec
stc
hlt
jl
popf
mov
int
jle
push
insl
movsb
jmp
les
cmp
xlat
test
sub
jle
mov
xchg
mov
movsl
and
sti
jecxz
test
mov
js
cmp
lds
cltd
xchg
adc
scas
inc
and
add
test
test
mov
xlat
xor
jae
sub
iret
sbb
ret
cmc
pushl
test
cmp
ret
add
daa
add
pop
sub
mov
iret
orb
sbb
mov
jbe
sub
xor
mov
sub
dec
nop
push
fwait
imul
push
rolb
fs
fldenv
dec
shll
add
pop
imul
imul
xor
test
ficoms
leave
xabort
pop
hlt
or
and
sbb
push
or
mov
jns
push
adc
pop
add
xchg
hlt
pop
stos
shr
aaa
loopne
xor
mov
repz
sti
ficoms
sbb
cltd
mov
pop
sub
movl
or
ret
vunpckhpd
sbbl
dec
sbb
sbb
sbb
sub
dec
lahf
cmp
jae
fildl
in
mov
pop
cmp
sbb
mov
inc
xchg
dec
rorl
scas
fcmove
xchg
outsl
sub
test
movsl
inc
add
lahf
xlat
mov
mov
fdiv
fwait
add
or
nop
sbb
add
and
je
decl
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
movsl
fstps
call
fwait
mov
stos
xchg
out
mov
enter
sbb
add
dec
shl
cwtl
xchg
aad
adc
mov
out
ljmp
push
xorb
or
mov
clc
sti
mov
fidivrl
mov
sahf
jb
sbb
cltd
push
aam
and
iret
xor
adc
cmp
shrl
mov
ds
cs
mov
sahf
das
xchg
stc
cli
in
test
cmp
dec
sbb
mov
or
std
mov
aam
xor
or
fwait
pushf
adc
xchg
push
cltd
mov
and
fcomi
js
inc
bound
cld
add
add
sti
insb
inc
ret
sbb
mov
jge
fisttpl
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
std
mov
push
or
inc
bound
out
mov
flds
stos
test
test
je
and
dec
inc
mov
jle
cmp
sahf
ret
imul
xor
mov
addr16
in
cld
ds
mov
jns
mov
add
insl
adc
dec
jp
lcall
mov
dec
pushf
dec
and
jg
scas
repnz
stos
xor
add
fildll
stc
mov
dec
pop
inc
mov
or
xchg
dec
retw
adc
or
and
les
xor
lds
jge
pop
xor
sbb
push
je
xchg
jo
movsb
cltd
xor
outsl
sbb
mov
adc
xchg
pop
lret
repz
addr16
les
push
jmp
in
inc
jge
inc
mov
and
lods
insl
out
xlat
pop
faddp
jecxz
iret
push
adc
cmp
push
adc
out
mov
sbb
mov
cmp
xor
sbb
pop
mov
pop
mov
mov
test
clc
int3
sbb
mov
mov
mov
adc
xchg
mov
sbb
mov
mov
mov
fadd
adc
icebp
idivb
cmp
or
test
popf
xchg
leave
pop
fildll
fidivrl
aas
in
xchg
shlb
push
sbb
cmp
mov
xor
fiaddl
add
cld
jp
add
sbb
mov
cwtl
inc
sbb
and
pop
out
js
in
movsb
lahf
mov
sub
xchg
add
decl
add
addr16
fdivrs
mov
fsubl
pop
jp
mov
jmp
jb
fdivrl
dec
in
pop
fdivrl
loop
int3
pop
sub
cwtl
cltd
adc
cmp
dec
inc
xor
outsl
mov
jmp
adc
mov
mov
imul
jns
pop
mov
test
mov
mov
cmp
jp
add
bound
repnz
xor
aad
pushf
ss
or
dec
pushf
dec
and
jg
scas
repnz
stos
xor
add
fildll
stc
dec
cmp
in
cmc
fsts
sbb
cmp
test
insl
mov
xchg
outsl
stos
inc
lcall
or
stos
xor
xor
cwtl
lret
mov
leave
loop
das
jmp
clc
xor
je
stos
loop
xchg
add
inc
mov
mov
dec
lods
push
jmp
mov
aam
jbe
mov
mov
frstor
imul
add
andl
rcr
and
cmpsb
hlt
je
dec
dec
imul
cmp
js
test
xor
sbb
pop
mov
pop
mov
mov
test
sub
out
mov
sbb
rcrb
jg
adc
mov
inc
sbb
nop
jg
adc
rcrb
adc
stos
out
add
aam
sbb
sub
ljmp
add
arpl
lock
inc
dec
xchg
xchg
sbb
push
push
mov
stos
ja
dec
pop
mov
adc
cmpl
jnp
mov
cld
push
or
mov
leave
jmp
rorb
add
sahf
out
inc
inc
ret
les
rcl
xchg
fsubr
sbb
push
cmpsb
sub
xor
xor
dec
lahf
adc
mov
sti
mov
mov
out
mov
mov
je
push
pop
sbb
dec
mov
out
ret
mov
ljmp
push
xchg
sub
popf
cltd
mov
fcomip
jns
jecxz
pop
dec
test
repnz
push
jo
in
ja
push
sbb
or
aaa
and
mov
sbbb
jne
mov
ja
sbb
lcall
fstp
jmp
pop
popf
cld
dec
pop
insb
push
pop
imulb
insl
mov
or
dec
fistl
push
cmp
xchg
stos
inc
pop
lret
rcl
fistpl
jbe
xor
push
mov
test
dec
xchg
mov
push
xchg
push
fwait
out
sub
sbb
mov
fwait
push
dec
mov
mov
stc
repnz
mov
inc
pop
mull
orb
or
fldl
sti
repz
mov
xchg
dec
inc
dec
and
leave
sbb
idivl
xchg
jb
stos
cltd
dec
popa
or
mov
subb
shll
mov
cmp
lahf
pop
mov
mov
jmp
jecxz
movsl
mov
les
inc
push
xchg
cmp
in
cmpsb
iret
jmp
and
inc
dec
jge
cmpsb
sub
stos
inc
int
mov
jae
pop
mov
arpl
subl
mov
jae
stos
clc
pop
dec
mov
ja
stos
cmp
mov
jnp
mov
mov
mov
arpl
repnz
addr16
scas
mov
cli
jnp
inc
mov
popf
inc
sbbl
push
dec
mov
test
adc
test
mov
ljmp
mov
mov
and
ret
fld1
jb
cmp
jne
jecxz
xchg
or
jle
inc
inc
mov
enter
xor
and
and
dec
repnz
bound
pop
test
rcr
dec
pop
mov
mov
mov
mov
cmp
jp
add
pushf
ret
ret
mov
add
addr16
test
pop
jecxz
sbb
mov
stos
test
fiaddl
inc
pop
xor
mov
fucomp
jae
push
test
xchg
pop
pop
std
cmpsl
jno
lret
push
cmp
ret
xchg
sub
cwtl
sub
mov
pop
scas
jb
mov
xor
loope
cltd
lods
inc
sbb
aad
adc
das
mov
scas
aaa
mov
cli
jnp
inc
mov
popf
inc
sbbl
push
dec
mov
jno
dec
mov
cld
mov
es
sub
mov
pop
repz
mov
sti
fildll
xor
mov
cwtl
mov
rclb
add
lret
cmp
out
pop
ret
cmp
mov
jmp
mov
aam
fwait
pop
mov
xchg
fimuls
or
in
inc
add
rcrb
mov
cmp
mov
jo
cmpsl
mov
cmpb
mull
jle
push
stos
les
sbb
repnz
push
loop
int
mov
mov
dec
pop
movl
pop
mov
mov
add
popf
cwtl
xchg
dec
cmpsl
adc
stos
inc
lds
sbb
pop
fadds
inc
fcoml
sbbb
mov
cs
fcomps
js
or
add
idiv
mov
pop
ds
push
dec
adc
stos
mov
mov
pop
cmp
xor
daa
test
add
call
mov
scas
mov
int3
add
jb
xor
sbb
in
cli
popf
inc
sbb
cs
decb
mov
and
out
dec
mov
testl
ret
jb
daa
mov
in
ja
les
aad
add
sub
aad
jp
adc
cmpsb
stos
push
test
sub
mov
push
xor
mov
or
push
cmpsl
pop
inc
loopne
or
rclb
sbb
test
lcall
cmp
fcomp
aad
adc
sub
mov
lds
dec
mov
pusha
inc
jecxz
xchg
mov
enter
pop
divl
add
or
inc
sbb
loop
fsubrs
jmp
jae
and
push
dec
pop
cmp
push
fdivl
dec
lahf
adc
mov
aas
mov
popf
iret
sbb
js
mov
sbb
and
sbb
fisubrs
subl
call
int3
nop
mov
dec
and
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
mov
fisubl
mov
mov
and
cmpsl
mov
nop
pop
ljmp
sahf
dec
xchg
xlat
pop
sbb
test
clc
sub
lcall
subl
ret
mov
ret
movsl
insl
lds
or
daa
pop
mov
mov
stos
ret
fistpl
jo
cmp
fwait
enter
mov
push
jp
xor
dec
cwtl
js
popf
lahf
adc
mov
ds
mov
adc
cmp
sti
adc
jns
xchg
xchg
xchg
sub
repz
fst
in
mov
mov
cmp
or
jae
xchg
xchg
inc
cltd
enter
mov
fsubs
mov
xor
dec
arpl
mov
int
pop
bound
fstps
adc
call
fcompl
push
inc
ret
push
sti
pop
inc
jle
sbb
in
hlt
push
cltd
xchg
jo
mov
leave
roll
inc
add
ja
popa
stos
mov
out
jo
hlt
das
xor
sub
fimull
leave
sbb
test
fsts
push
lret
fucomp
jae
push
aam
ja
stc
cli
in
test
cmp
int3
add
mov
or
fistps
pop
xor
mov
repz
lods
pop
pushf
or
sbb
ficoms
mov
cmpsb
fbld
ss
mov
mov
add
push
push
cmp
rclb
mov
jmp
push
aas
fwait
lret
in
mov
mov
cmp
sub
jae
xchg
xchg
inc
cltd
enter
mov
int3
pop
sub
sbb
loop
jg
dec
cwtl
test
imul
fstps
adc
call
pop
lods
dec
add
lock
lods
jmp
in
mov
mov
jbe
adc
pop
xchg
cmp
in
dec
scas
push
pop
dec
adc
pop
jae
sbb
mov
je
cmp
jns
stos
iret
inc
out
jae
mov
jg
rcr
mov
jl
or
mov
lret
xlat
xchg
and
and
sbb
fstps
mov
mov
xchg
jle
push
nop
xor
in
popf
pop
xchg
cmp
subl
mov
into
xchg
addl
jp
rclb
aam
jnp
jne
adc
cmp
sub
jecxz
mov
out
sbb
mov
push
out
call
xor
mov
dec
dec
or
jns
mov
dec
push
gs
add
cwtl
dec
and
mov
mov
test
add
imul
in
clc
pop
divl
inc
add
jl
mov
mov
mov
in
sub
lods
dec
pushf
dec
and
jge
test
shl
adc
test
add
mov
sbb
aas
pop
mov
cmp
ret
add
adc
ficoml
outsb
stos
std
cmp
add
jno
shrb
cltd
fstl
jl
or
mov
scas
aaa
mov
cli
jnp
inc
mov
addl
xchg
inc
sbb
add
mov
jno
dec
mov
push
in
xchg
rol
pop
test
stos
sub
cmpsb
enter
cmpsl
xchg
stos
inc
inc
rolb
fldt
inc
mov
mov
push
pop
sbbb
cmpsl
stos
out
push
adc
cltd
jb
fsubr
xlat
or
mov
cmp
dec
or
call
jae
ds
add
push
shl
or
add
inc
divl
shl
jl
adc
push
add
repz
mov
lods
xchg
sub
adc
shl
mov
dec
sbb
xchg
mov
push
mov
jmp
mov
xchg
dec
mov
bnd
push
cmp
and
repnz
jg
scas
dec
fcoml
push
enter
mov
jmp
mov
bnd
into
scas
rcrl
das
aas
cmpsl
xlat
ret
pushf
addl
lea
pop
ds
sub
pop
mov
xchg
imul
daa
int3
sbb
enter
ret
xchg
xchg
fs
sbb
xor
and
dec
inc
mov
pop
push
adc
xchg
pop
xchg
dec
daa
cs
mov
jno
gs
inc
mov
repz
dec
pop
add
adc
pop
fsubrl
mov
pop
sub
mov
sbb
cmp
mov
repz
mov
lret
xchg
sub
adc
shl
mov
dec
sbb
xchg
test
push
mov
js
fisttpll
xchg
shll
mov
imul
push
adc
mov
xchg
popf
adc
int3
mov
repz
ss
js
cmp
idivl
inc
push
pop
loop
jo
adc
mov
jle
out
push
push
lods
out
xor
mov
add
jb
sbb
mov
mov
mov
xchg
pushf
hlt
jl
fwait
adc
xor
jo
and
push
or
xchg
lods
mov
xor
je
insl
fildl
xor
mov
pushf
mov
dec
movsb
jbe
sbb
jge
mov
lds
add
xor
push
jnp
cmp
aas
add
cmp
stc
test
test
inc
sub
xchg
xchg
jno
mov
lret
popa
sarb
retw
inc
pop
mov
cmp
mov
push
stos
cmp
fcompl
jbe
xor
push
mov
test
pushf
ja
mov
cli
jnp
inc
mov
addl
or
push
dec
mov
test
adc
test
mov
ljmp
popf
pop
mov
testl
jge
jl
xorb
mov
ds
cmc
dec
inc
ds
sub
iret
inc
xor
mov
jmp
gs
fistps
inc
sbb
adc
or
adc
pop
xchg
dec
sbb
inc
inc
xor
xorb
test
rclb
xchg
sub
pushf
ss
movsl
mov
dec
pushf
dec
and
push
nop
mov
xchg
aaa
pop
mov
fildll
lret
lcall
inc
ret
pop
sub
loop
mov
fcmovnu
mov
push
adc
pop
scas
dec
jns
or
add
pusha
mov
jle
mov
std
cli
jnp
inc
mov
xchg
cwtl
xchg
inc
sbb
add
mov
test
adc
test
mov
ljmp
popf
jmp
xor
fsubs
jl
cmp
fld1
jb
cmp
pusha
mov
ds
sub
inc
sbb
hlt
jl
adc
add
push
adc
or
movsb
icebp
pop
pop
add
or
pop
jae
int3
add
movsl
dec
cmp
in
and
sti
mov
data16
nop
sub
sbb
test
lcall
mov
xchg
dec
and
push
nop
aas
rcr
movsb
leave
test
fdivrs
add
scas
mov
xchg
fbstp
jg
xchg
ss
popf
lret
testl
jo
std
add
ficoml
fbld
add
adc
lods
mov
lods
pusha
push
xchg
jb
sub
in
cmp
xlat
mov
es
into
mov
pushf
push
fistl
bound
mov
cmp
xchg
mov
mov
jecxz
xor
pop
xchg
fsubl
mov
pop
testb
fucomi
hlt
std
mov
sti
and
push
and
mov
adcl
gs
jb
mov
mov
imul
mov
arpl
mov
jne
adc
cmc
sbb
clc
sti
mov
loope
or
mov
idivb
adc
rorb
orb
mov
sbb
pushf
or
nop
adc
mov
push
lcall
jmp
mov
mov
sbb
mov
icebp
or
pop
sub
push
push
sbbl
fs
pop
jbe
mov
or
stos
xor
xor
mov
in
lds
ja
loop
and
or
dec
movb
dec
mov
jns
fwait
and
inc
jnp
inc
push
mov
pop
xor
insl
in
sub
stc
mov
jmp
std
mov
sti
and
test
inc
pushf
cmp
mov
adc
xchg
cmp
xor
sbb
inc
mov
pop
mov
mov
test
clc
int3
mov
mov
sub
mov
cmp
popf
mov
sbb
adc
test
dec
push
inc
test
mov
push
test
lret
mov
mov
test
lcall
lea
lods
popf
repz
out
cmpsl
mov
or
cmp
adc
cltd
or
sahf
inc
lcall
cmpsl
dec
push
xor
ret
mov
mov
fwait
leave
cmc
xor
rolb
mov
testl
mov
popl
rcrl
pop
data16
push
fdivrs
test
mov
and
mov
jmp
std
mov
sti
and
add
jecxz
mov
adcl
gs
jb
mov
mov
imul
mov
das
push
test
mov
mov
push
lds
adc
mov
aam
or
mov
repnz
and
mov
hlt
sub
cwtl
lret
movsl
cltd
icebp
mov
cmpsb
xchg
xlat
cwtl
sub
cmp
sub
cmc
sbb
repz
loopne
test
daa
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
lods
push
inc
fidivrl
cmp
lret
pop
test
mov
sbb
push
cmp
in
leave
insb
mov
sub
stc
or
dec
into
add
dec
mov
jns
sti
and
xchg
cwtl
dec
and
cmp
pop
dec
mov
cmp
jne
mov
or
pop
fdivrl
jge
push
adc
int3
mov
arpl
or
sub
movsb
lea
dec
mov
lcall
and
mov
addr16
rcrb
jae
ljmp
add
test
ret
mov
add
addr16
cs
push
lret
loopne
xchg
and
cli
cmp
shrl
push
sub
lcall
test
fmul
dec
pop
insb
push
rcrb
xchg
dec
mov
idivb
setae
int
push
mov
mov
lods
mov
mov
mov
push
ret
mov
xchg
ffree
js
jg
xor
icebp
lret
repz
mov
adcl
les
sarl
xchg
lea
inc
xor
mov
sbb
cmp
enter
mov
mov
imul
stc
pop
jge
mov
or
push
or
loope
jl
dec
mov
out
outsl
mov
dec
xchg
mov
sbb
pop
xor
daa
jbe
jmp
adc
mov
fcoms
iret
cwtl
mov
clc
sti
pop
es
popf
dec
sub
test
add
test
dec
cmpsl
in
xor
sub
or
sub
jne
xchg
lret
xchg
cld
mov
adc
xor
movsb
cmp
jae
and
jge
or
mov
scas
mov
xor
pop
fstpt
push
cmp
push
into
or
scas
pop
negl
sbb
fs
aas
cmpsl
push
mov
inc
in
mov
jmp
or
test
xchg
add
fstpl
cmpsb
orb
jbe
lret
push
insl
in
xchg
adc
call
insl
test
fdiv
in
and
cmp
or
cmp
xchg
sub
rol
popl
adc
pop
movsl
ficoms
mov
xchg
rolb
push
cmc
sub
lods
sbb
add
sbb
sahf
int3
jns
pop
loop
aaa
loope
pushf
je
pop
xchg
push
jbe
and
iret
inc
stos
pop
rcrb
adc
mov
cmp
cld
mov
or
dec
pop
add
jge
jnp
sahf
das
xchg
stc
cli
in
test
or
lods
mov
mov
mov
popf
sub
xchg
dec
arpl
aaa
sub
xchg
fistps
inc
out
aas
cmpsl
xlat
adc
mov
or
jo
test
xchg
sub
dec
and
cmpsb
cmpsb
cmpsb
xor
sub
adcl
adc
data16
popf
mov
mov
cltd
sbb
inc
dec
inc
ds
xchg
sub
movsl
inc
imul
cmp
pop
mov
xor
and
add
and
inc
mov
mov
pop
sti
mov
data16
nop
sub
sbb
test
lcall
dec
test
xor
xlat
dec
sbb
pop
jnp
sub
mov
lahf
movsb
fldcw
fs
fisttpll
or
fists
add
cs
in
dec
adc
ficoml
mov
jns
add
lds
push
pushf
sub
sbb
insb
daa
enter
push
test
adc
mov
adc
jmp
mov
dec
pop
and
fwait
and
inc
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
call
mov
call
cmpl
enter
xchg
mov
out
push
repnz
push
or
popa
mov
pop
push
xchg
or
mov
mov
bound
inc
mov
mov
jle
ds
cmp
mov
add
mov
lock
dec
sbb
add
mov
xchg
adc
clc
icebp
mov
sbbl
test
lods
push
sub
pushf
dec
sbb
push
dec
xor
mov
dec
mov
xor
sbb
fmull
fsts
jl
sbb
imul
in
fcompl
aad
xor
xor
jl
bnd
das
mov
and
dec
add
or
cwtl
cs
dec
and
mov
pop
mov
scas
or
fwait
cmp
xlat
push
sbb
xor
xchg
sub
in
es
pop
jne
cltd
out
femms
lds
repz
js
inc
inc
mov
dec
dec
dec
sub
das
loopne
cmc
mov
mov
fwait
pop
adc
adc
lea
cmp
cmpsb
ja
sub
mov
pop
adc
rcrl
mov
cmp
sbb
sbb
add
inc
sbb
sub
mov
fsubl
dec
cli
sub
jle
test
fldcw
int3
mov
and
sbb
rcr
cmp
invd
hlt
les
fdivl
xchg
add
cmpsl
push
push
inc
lcall
sub
in
adc
inc
pushf
mov
xchg
pushf
mov
jns
jg
dec
ret
stc
inc
xchg
cmpsl
sub
rorl
pop
les
mov
hlt
js
out
push
test
int
cmp
inc
jg
mov
or
pop
out
lods
mov
lret
dec
inc
xor
or
pop
inc
pop
mov
cltd
pop
inc
sub
jbe
cmp
call
int3
xchg
popf
push
sub
sub
cld
xor
arpl
mov
or
add
xchg
push
sahf
repz
mov
sbbl
push
aad
lds
inc
cmpb
imul
lds
push
stc
mov
enter
jne
call
add
popf
mov
popf
in
call
dec
jns
or
push
sbb
lret
imul
test
add
movsb
push
sub
xchg
mov
jge
mov
jmp
leave
arpl
stos
aas
cmpsl
xlat
fs
mov
jae
or
mov
pop
ds
data16
sbb
out
push
mov
fnstenv
pusha
jo
into
imul
popf
iret
sbb
dec
fsubp
mov
and
adc
sub
mov
and
mov
mov
adc
lret
mov
scas
inc
mov
movsl
push
clc
push
mov
mov
pop
or
pusha
xor
rep
mov
mov
shlb
adc
mov
ret
xchg
int3
addr16
lock
ss
sbb
mov
inc
pop
pop
xchg
dec
add
insb
sbb
cld
mov
jo
subl
stos
jno
add
pop
sbb
sbb
test
fstpl
in
jns
push
mov
jge
push
cmp
jae
jg
cmpsl
mov
stos
jl
aas
add
and
sub
or
js
icebp
repnz
and
daa
or
jge
fwait
cmp
cltd
lods
xlat
insb
dec
or
fwait
cmpsb
fsubr
aaa
insl
or
ljmp
mov
out
enter
sbb
fs
aas
pop
push
or
ret
enter
adc
mov
das
xor
cmp
pop
or
pop
divb
cmp
add
xchg
fnstsw
add
iret
push
pop
xor
clts
cmp
add
out
pop
dec
mov
sub
or
mov
ss
sub
mov
inc
cmpsb
xchg
adc
mov
sub
inc
stos
jae
jns
xchg
fcmovnb
pop
clc
and
dec
jnp
ljmp
push
cmp
ret
add
sbb
push
push
add
ja
or
ljmp
fildl
push
jle
jmp
pop
inc
and
or
lahf
jp
sbb
cltd
lcall
fdivs
adc
int
mov
mov
dec
push
mov
pop
mov
mov
pop
cmp
jmp
mov
sbbl
out
push
aam
lds
push
pop
ljmp
addr16
push
mov
popf
test
adc
add
sub
loopne
lds
pop
lds
push
pop
adc
or
mov
push
mov
mov
mov
fsubrl
adc
subb
xchg
lahf
push
lods
push
push
cmp
xor
pop
and
jae
mov
sar
or
insb
fcomps
bound
stos
inc
mov
lds
dec
mov
mov
jge
push
cmp
stos
mov
xchg
pusha
push
cmp
lahf
lret
xchg
pop
out
js
inc
out
aas
cmpsl
xlat
adc
xchg
rcll
sub
inc
test
and
add
fstl
cmp
loope
insl
popf
aad
jl
xchg
mov
ljmp
pop
mov
fdivp
enter
insb
aaa
mov
jl
adc
jne
or
push
loop
rcrb
int3
xchg
popf
push
sub
xor
aam
roll
xor
mov
mov
fs
jnp
mov
aaa
mov
shlb
jecxz
dec
subb
mov
cmpsl
sbbl
sub
ja
inc
in
orl
and
or
jne
std
jae
pop
mov
insl
push
or
in
sub
jno
into
enter
and
xor
scas
xchg
ficoml
les
mov
inc
mov
inc
movsb
push
sub
popa
xchg
cmpsl
jmp
jg
stc
loope
test
cmc
cmc
std
stos
jl
aas
inc
das
sbb
out
sub
js
stc
or
adc
addr16
addr16
fwait
mov
xchg
sbb
lods
xlat
dec
aad
fistps
daa
pop
jne
outsl
push
data16
popf
mov
push
xchg
shlb
loop
hlt
mov
jl
adc
dec
adcl
jmp
dec
imul
fildl
std
fwait
pop
or
fcompl
pop
xchg
pop
pop
pop
lds
push
xchg
mov
lret
in
iret
inc
add
aad
or
cmpsl
mov
xchg
and
fdivs
pop
dec
jno
jp
adc
ret
jbe
add
inc
mov
dec
mov
movsb
dec
clc
and
repz
mov
push
dec
pop
into
bound
cwtl
popf
lcall
sbb
idivb
outsb
cmpsl
sub
or
push
ja
shlb
fistpl
popf
enter
js
jbe
scas
mov
mov
fsubr
lock
xor
lea
inc
add
pop
mov
int
rclb
lds
sbb
leave
lods
xlat
insb
imul
cmp
sarb
call
mov
and
mov
mov
rorl
or
sub
inc
shl
cwtl
cmc
xor
pop
das
or
mov
mov
sarl
inc
iret
sar
int
call
xor
stc
dec
add
mov
sbb
mov
and
enter
jge
les
fsts
mov
mov
mov
xor
mov
mov
mov
cld
jl
test
outsb
push
mov
xchg
rcr
pushf
sbb
sub
mov
pop
scas
dec
popa
dec
jle
enter
jns
push
push
mov
ficomps
jp
lods
inc
or
pop
aas
add
sbb
out
sbb
inc
xchg
pop
ds
data16
dec
loopne
mov
mov
mov
xor
scas
pop
dec
pusha
jo
jnp
enter
dec
or
sbbl
cwtl
mov
xor
jl
adc
add
aam
dec
inc
jge
imul
cmp
sub
fistpl
dec
loopne
cmp
mov
push
in
call
pusha
xor
mov
cmpsl
flds
cmp
ja
pop
ror
sub
test
pop
dec
ja
inc
sbb
xor
dec
jno
pop
xor
add
int
lret
sbb
mov
jmp
bound
sbb
insl
lret
ret
nop
cltd
sbb
idivb
push
mov
or
sbb
fnstcw
push
cmp
push
jbe
test
pop
andl
push
mov
js
pop
js
dec
inc
pop
test
std
decl
and
repnz
mov
movsl
je
cmp
adc
dec
jg
jo
ret
test
ret
jb
xchg
ds
repnz
mov
mov
mov
pop
inc
sbb
lret
dec
test
xchg
dec
inc
repz
mov
dec
mov
inc
mov
popf
cmp
add
fwait
js
call
call
jo
pop
xchg
pushf
ret
xchg
sub
pushf
ss
push
ror
mov
and
jg
sub
mov
popf
jecxz
jge
cmp
fucomp
jae
pop
hlt
test
idivl
cmc
rcll
sbb
shlb
cmp
or
xchg
pop
imul
scas
loopne
lock
jae
aaa
fwait
lods
mov
mov
rcl
inc
pushf
shl
sahf
xchg
fwait
push
add
out
js
add
movsb
notl
mov
jmp
sbb
test
pushl
sbb
xchg
mov
outsb
push
test
insl
in
jbe
mov
mov
sbb
xchg
ds
jno
out
mov
xchg
es
or
xchg
sub
add
in
cmc
negb
popf
divl
popl
xor
pop
mov
popf
sti
mov
dec
jae
mov
imul
outsl
add
lods
fwait
addb
sbb
mov
inc
sbb
push
mov
aaa
iret
add
mov
sub
sub
ja
pusha
jmp
subl
fcoms
mov
les
pushf
outsb
cmpsl
sub
or
mov
sbb
fdivrs
jns
or
ds
mov
pop
xor
pop
iret
push
push
xor
xor
fsub
add
and
cs
jp
rclb
dec
aam
stc
repnz
and
xchg
sub
ret
sbb
fdivrs
push
sbb
dec
test
fcmovnbe
mov
mov
cwtl
flds
or
cmpsl
loop
hlt
mov
daa
iret
mov
inc
enter
fisttpl
nop
ret
gs
shlb
mov
jo
push
in
mov
mov
test
add
in
and
mov
negb
lret
sbb
mov
inc
cltd
mov
inc
sbb
push
fs
xor
adc
cmp
sub
sub
negl
pusha
cli
rorl
xchg
push
fcoms
shlb
sbb
or
mov
pop
popa
fdivs
mov
xor
xor
xor
xorl
add
jecxz
xchg
mov
jle
fwait
push
dec
mov
xor
repnz
cwtl
shl
mov
lret
in
mov
mov
enter
gs
aas
sti
sti
and
inc
push
push
hlt
test
imul
push
push
imul
test
xor
sbb
dec
mov
pop
mov
mov
test
pop
mov
imul
mov
mov
aam
push
adc
clc
lods
pushf
inc
mov
adc
cs
das
stos
fsubr
lods
jmp
ret
scas
stos
dec
sub
in
aas
dec
fisubrl
mov
jae
test
dec
and
add
inc
pushf
les
stos
lds
push
push
stos
scas
andb
movsb
inc
pop
cld
lret
fstl
jnp
push
fucomi
movsb
cmp
stc
cmc
xor
and
addb
iret
movsb
mov
pusha
adc
cmpsb
dec
push
fisubs
dec
cmp
push
fsubs
pusha
mov
out
addb
insl
popf
outsl
out
add
jp
test
inc
add
mov
mov
dec
sbb
test
cwtl
mov
loopne
jge
sbb
sbb
ljmp
mov
orb
jmp
fldcw
mov
jecxz
pop
nop
jo
mov
inc
ret
sbb
add
rorb
fsubrl
int
sbb
mov
add
pop
stos
inc
in
mov
icebp
shll
ffree
jmp
js
or
pop
and
les
ljmp
sbb
sub
mov
push
push
testl
add
lods
sbb
dec
imul
lahf
leave
ljmp
scas
lcall
pop
cwtl
ja
add
and
adc
dec
fidivrl
pop
xor
mov
adc
and
push
pop
xor
dec
cmpl
dec
mov
jo
pop
fsubs
jo
jmp
fcoms
decb
pop
lea
sub
les
jmp
xchg
mov
popa
out
nop
and
les
ss
mov
imul
fistpl
push
repz
xor
lock
sub
shlb
cmp
jecxz
jmp
push
dec
movsl
ret
inc
shlb
jb
lcall
lcall
sbb
dec
push
mov
repz
arpl
or
in
stc
mov
mov
push
mov
mov
mov
or
test
pop
iret
pop
repnz
lock
adc
mov
shlb
cs
rcr
xchg
stos
arpl
loop
jmp
dec
mov
adc
inc
aam
jae
mov
ret
mov
fbstp
xchg
imul
sbb
in
int3
in
inc
and
insb
sahf
pop
jmp
fwait
outsl
jae
mov
jl
or
cmpsb
ljmp
mov
mov
adc
xor
jp
pop
xchg
sbb
stos
sub
cltd
js
and
int3
cmp
mov
mov
shl
gs
rcrl
ljmp
cmpb
or
and
mov
in
movsl
ret
popf
fsubr
mov
sahf
mov
dec
push
add
mov
lahf
popf
jmp
dec
popf
lret
or
lcall
test
cld
sub
int3
cmp
mov
lds
mov
adc
stos
xor
xor
icebp
leave
mov
adc
scas
xchg
test
jnp
inc
mov
push
jno
add
add
scas
push
mov
xor
inc
pop
mov
mov
mov
sahf
mov
stos
call
rorb
data16
push
adc
inc
sub
inc
inc
mov
loope
test
mov
push
test
test
das
test
cwtl
push
sub
imul
pop
pop
mov
jecxz
cmpsl
jecxz
inc
sbb
mov
nop
xor
sbb
cmp
dec
mov
and
repz
dec
orb
mov
movsb
fisubl
lahf
mov
lret
fucomp
jae
jno
cld
xchg
mov
ret
cmp
scas
orl
xchg
dec
bound
test
inc
push
dec
stos
xchg
stos
std
xor
lods
movb
loope
movsb
fcoml
es
xchg
mov
mov
mov
scas
jl
lret
adc
xor
mov
icebp
loop
mov
pop
xchg
imul
out
inc
inc
sbb
cmp
jno
xorb
add
push
std
bound
insl
test
push
dec
jecxz
mov
out
jnp
add
pop
mov
imul
mov
xor
xor
xor
mov
sbb
daa
jmp
jl
mov
adc
xchg
pop
adc
testl
mov
lock
outsl
sti
dec
fisttps
mov
daa
pop
stos
sub
sti
mov
sbb
mov
fisttpll
int
lods
mov
fsubrs
sub
mov
xor
std
cld
sub
iret
jl
fnstenv
mov
js
ja
cmp
and
fcmovnbe
lahf
cmp
shl
js
inc
icebp
sbbl
or
je
or
dec
ss
sub
mov
ret
push
lods
ja
inc
jp
cmp
pop
insl
or
mov
mov
bound
out
inc
cwtl
fisttpl
adc
fwait
dec
pop
rorb
int3
adc
mov
and
call
ja
repz
add
xor
lea
mov
pop
sbb
in
jecxz
jge
rcrb
pop
and
inc
mov
mov
cmp
lock
or
imul
push
ja
fsubr
mov
mov
sbb
xor
pushf
pop
xor
mov
repnz
cmp
mov
mov
or
js
mov
stos
xchg
stos
jge
sti
mov
or
push
clc
lock
lods
xor
aad
adc
or
scas
aaa
mov
cli
jnp
inc
mov
mov
cwtl
xchg
inc
sbb
add
mov
test
adc
xchg
adc
in
xchg
rol
pop
test
mov
sbb
fwait
mov
loope
repz
lea
mov
mov
and
aam
sub
fisubrs
push
dec
test
sbb
ljmp
push
xchg
icebp
pop
pop
lret
xor
dec
dec
cmp
add
into
add
aam
or
mov
repnz
mov
mov
xchg
xchg
push
imulb
mov
sarb
sbb
rcrb
jno
mov
mov
xor
xor
xchg
add
sub
mov
imul
lret
or
sub
pop
jl
jecxz
mov
adc
pusha
push
cmp
in
push
mov
or
mov
addl
pushl
or
je
or
push
enter
test
mov
pop
test
and
fucomi
hlt
std
mov
sti
and
xchg
enter
cwtl
push
or
mov
cltd
mov
mov
cmc
hlt
imul
jne
aam
jae
adc
addr16
pop
rcrl
repz
sbb
cltd
or
xor
mov
add
test
hlt
xor
int
cltd
lret
movsl
push
mov
mov
cmp
imul
sbb
mov
pusha
scas
pusha
lods
iret
jns
dec
rcr
xor
adc
inc
data16
sbb
push
stos
std
fdivrl
sbb
insl
mov
rcll
lods
pop
in
add
cmp
and
xchg
lahf
push
fdivl
sbb
das
cmpsl
xlat
add
out
addb
or
mov
rcrb
dec
xor
xor
or
pop
mov
aaa
insl
or
cmp
out
call
int3
cmc
aaa
cmc
or
and
sub
dec
inc
int
arpl
in
jge
clc
pop
das
or
adc
in
fists
push
add
xor
jmp
xchg
sti
fimuls
push
xor
lcall
cmp
jo
pop
dec
int3
lahf
or
aad
pop
adc
pop
jg
adc
jno
scas
push
sub
leave
cmp
pop
push
mov
sub
inc
push
pushf
xor
jbe
outsl
mov
xchg
aad
sub
arpl
das
jg
cmpsb
push
push
dec
xor
sbb
push
int
gs
pop
pop
mov
and
sbb
dec
lods
xor
in
push
inc
xor
fiaddl
or
cld
jle
push
pop
mov
add
jecxz,pt
je
xchg
sbb
fucomp
push
ljmp
fildll
test
fwait
dec
stos
cmp
xlat
dec
mov
push
ret
test
pusha
mov
push
and
mov
shrb
mov
inc
imul
loopne
fsubs
pop
add
push
repz
jg
cmc
jmp
jge
sbb
aaa
adc
add
pop
lock
movsl
inc
or
ret
in
dec
cltd
nop
push
hlt
mov
negb
push
ficompl
cwtl
cmc
xor
sbb
inc
fisttpl
lret
shr
std
inc
inc
and
adc
popf
addb
and
fstps
push
mov
aam
push
inc
pop
and
mov
lds
and
xor
mov
cld
cmc
lret
andl
add
inc
lcall
clc
dec
mov
fptan
fwait
xor
xchg
sbb
inc
gs
mov
std
mov
xchg
cltd
in
rcrb
jnp
cwtl
bound
mov
inc
inc
mov
sub
add
ret
push
dec
mov
int
or
ficomps
push
fldl
xchg
push
lock
and
fstl
inc
ret
push
add
inc
ds
pop
fimull
mov
lds
jmp
hlt
shlb
mov
sbb
outsb
xor
test
jg
rcll
mov
add
push
pop
sbb
cld
mov
mov
pusha
cmc
fisttps
or
jno
dec
enter
mov
add
push
push
mov
adc
or
lret
xor
pusha
jbe
lods
xor
inc
xor
clc
push
rcll
les
and
sub
pop
out
add
lcall
fisttpl
stc
mov
xor
xlat
and
mov
dec
push
loope
iret
mov
push
iret
repz
pop
pop
push
mov
fnstenv
test
adc
mov
pushf
mov
pop
fstpl
jns
or
test
or
mov
movsl
inc
imul
jecxz
int
lock
jl
jg
fbstp
test
pop
mov
sbb
dec
add
or
insl
pop
sbb
push
lock
ss
mov
pop
jnp
and
test
jne
std
jae
sbb
xor
pushf
pushf
dec
data16
xchg
xor
orl
lods
xchg
stos
std
xor
sub
xor
pop
or
lds
inc
mov
iret
sarb
iret
pop
pushf
jle
xor
fyl2x
xor
inc
das
and
aas
push
xchg
popl
and
adc
sti
inc
insb
mov
push
mov
jae
outsl
lcall
ret
xchg
sub
fcoml
fucomi
scas
inc
sti
mov
cmpsl
adc
vsqrtss
jo
or
mov
xchg
inc
xchg
or
stos
out
fistl
xchg
mov
pop
pop
stos
inc
ret
and
cltd
jge
popa
cmp
mov
call
inc
adc
and
in
pop
inc
mov
cmp
push
rol
popa
and
aaa
mov
clc
dec
outsl
enter
mov
mov
cmp
lods
cmpl
mov
lea
mov
enter
jg
pop
stos
xchg
cmpsb
jbe
pushf
cmpsb
mov
lock
es
rcll
inc
pusha
or
mov
aad
sbb
test
inc
sarb
mov
or
add
adc
popl
or
test
sti
add
stos
and
fdivl
test
xchg
xchg
adc
push
dec
insb
push
stc
insb
dec
cmpsl
add
adc
test
test
cmp
inc
lds
repnz
push
push
and
add
cmp
sahf
or
jmp
stos
sub
lret
movsl
adc
arpl
mov
push
push
cs
ret
cmpsl
fxch
call
mov
mov
push
out
sbb
dec
movsl
ret
mov
inc
incb
push
push
cli
scas
shlb
push
cmc
mov
inc
out
int
repnz
pop
cld
stos
shll
pop
add
sarl
ret
int3
call
adcb
gs
fisttps
imul
mov
push
or
and
add
gs
mov
push
inc
faddl
jmp
fwait
movsl
jg
push
sub
or
push
lock
mov
sub
sbb
cltd
dec
cwtl
clc
jle
rcll
adc
repnz
dec
mov
inc
push
std
les
nop
cmpsb
std
sbb
shll
jb
int
fcomp
dec
jecxz
arpl
add
push
sub
shl
in
push
loopne
int
or
int
pop
movsl
imul
jmp
lods
cltd
mov
jmp
push
add
ret
xorb
mov
fmull
lahf
pop
decl
dec
mov
outsb
shl
jmp
daa
dec
test
stos
mov
add
jae
pop
or
push
aam
dec
mov
xchg
mov
or
adc
pop
jle
cwtl
xor
dec
sbb
add
xor
cmp
xor
xor
pusha
mov
xor
fcmovnb
dec
je
outsb
jl
xchg
lds
xlat
es
call
test
dec
jmp
loop
cwtl
inc
stos
sbb
es
sbb
repz
push
jne
in
or
add
mov
jnp
enter
loopne
je
mov
adc
push
adc
addr16
push
adc
jns
mov
push
push
push
popf
jbe
sbb
or
mov
dec
movsl
movsb
dec
lcall
scas
or
push
sbb
sub
mov
xor
or
stos
dec
or
mov
dec
fistl
pushf
dec
and
push
neg
push
pop
sbb
sbb
inc
mov
sbb
mov
sub
push
xor
out
sbb
int
mov
inc
scas
xchg
mov
jl
pop
stos
xchg
stos
std
xor
mov
int
in
pop
mov
fstl
scas
push
ret
subl
enter
fdivl
xor
sbb
cmp
pop
adc
sahf
add
imul
dec
mov
pop
out
fs
out
or
add
outsb
ret
test
shll
jge
mov
cs
lea
or
rcrb
lea
cmp
fiadds
and
jne
lds
cmpl
sbb
ljmp
fldenv
mov
or
or
ret
aas
loop
imul
sub
idivl
inc
std
movsl
dec
sbb
les
push
test
xchg
addr16
leave
dec
or
mov
cmp
dec
outsb
out
sbb
pop
adc
adc
xchg
xor
push
lret
pop
add
nop
mov
jo
sub
pop
pop
sbb
pop
jb
or
and
fstl
push
sarb
icebp
jb
and
or
loopne
xor
pop
push
push
sub
cmpsb
mov
addl
cmp
gs
push
dec
test
inc
hlt
jo
sbb
loop
hlt
mov
popf
ja
push
adc
in
dec
fsubr
mov
adc
pop
push
jno
push
add
out
in
mov
stc
js
pop
add
std
ficomps
pop
testl
lds
sbb
int
stos
ja
int
addr16
popl
imul
pop
inc
cltd
lret
lcall
sbb
inc
fldt
jnp
sbb
call
add
test
adc
push
cmp
xchg
dec
mov
loop
movsl
pop
pusha
ja
mov
jno
aad
ds
jno
in
lds
inc
cmp
stc
and
adc
adc
adc
xchg
jge
fwait
xor
push
sub
pop
test
xlat
sbb
push
gs
stos
add
fldcw
fidivrs
xor
push
and
iret
sub
jecxz
mov
stc
out
je
loopne
imul
sahf
dec
mov
sbbl
push
js
loope
mov
iret
fbstp
lods
mov
sbb
testl
pop
lock
negl
adc
push
xor
and
loop
adc
test
push
mov
mov
fwait
add
mov
sti
stos
pop
js
jb
scas
sar
cmp
jno
inc
sbb
cld
mov
es
or
mov
add
xchg
xchg
push
in
dec
push
inc
mov
mov
cwtl
dec
iret
xor
jmp
ret
mov
enter
adc
es
in
test
xchg
pop
data16
dec
sarb
xchg
jmp
lods
xlat
insb
imul
cmp
lea
xchg
sti
and
sbb
daa
loopne
hlt
je
nop
lea
jle
fcmovne
mov
cmp
aaa
lret
mov
movsl
xchg
inc
inc
sahf
sub
fisubs
imul
dec
lock
mov
pop
cli
mov
test
pushf
sbb
insb
or
sub
fnsave
dec
and
mov
cli
das
repnz
push
in
popa
decl
sbb
dec
sbb
rcr
mov
xor
inc
or
leave
mov
fisttpl
and
mov
jl
pop
insb
sahf
test
dec
lds
inc
mov
lret
xchg
mov
std
cli
jnp
inc
mov
adc
push
mov
xchg
sbb
mov
daa
insb
jecxz
pop
jp
pop
stc
mov
jp
dec
push
jmp
inc
fcoml
cmp
clc
rcrb
das
adc
adc
bound
sub
loopne
fmulp
andl
xchg
test
cmp
dec
call
xchg
mov
dec
sbb
fucomp
adc
xchg
icebp
movl
jbe
pop
cli
out
sbb
add
cltd
stos
test
or
push
sbb
sub
jmp
add
jns
rcrl
cmp
jmp
fdiv
lret
mov
cmp
sub
nop
sbb
test
adc
stos
divb
inc
adc
data16
fnsave
jb
movsb
call
lods
jle
mov
push
cmp
repnz
cld
loop
inc
mov
imul
pusha
sbb
xchg
test
mov
push
pop
mov
sub
mov
fists
into
jns
in
pop
jnp
mov
aaa
int
ss
test
push
or
int
lret
inc
xchg
jmp
sbb
push
jle
jecxz
popf
xchg
sbb
add
mov
pop
add
mov
jnp
mov
sbb
mov
add
test
add
or
insb
dec
dec
mov
dec
mov
add
clc
out
inc
sahf
sbb
cld
mov
icebp
mov
push
pushf
mov
adc
or
add
test
ret
sub
mov
test
or
lods
cmc
xor
and
in
jbe
jmp
addl
mov
scas
jg
fxam
mov
loope
or
xlat
in
test
push
push
mov
sbb
pop
mov
enter
out
cld
repz
xor
jae
fbstp
fnsave
sbb
push
out
cltd
inc
loope
xchg
enter
mov
or
imul
sahf
xchg
std
testl
loopne
addr16
push
loope
mov
repz
and
or
mov
hlt
mov
test
xor
stos
leave
fsubrl
mov
arpl
xchg
lret
dec
outsb
adc
int3
and
aad
jae
outsb
adc
and
mov
jno
or
idivb
adc
ficompl
orl
fst
gs
cmp
or
shll
cltd
fmull
jnp
jmp
loop
jmp
inc
bound
xchg
js
test
inc
orl
sarl
mov
or
add
dec
cmp
lret
push
js
stos
fisubl
fucomi
mov
es
mov
in
jns
lcall
leave
jecxz
and
mov
xchg
sbb
dec
daa
fbstp
dec
sahf
loop
pop
xor
ljmp
cmp
jbe
xlat
movsl
jnp
cmpsb
loope
pusha
lret
or
add
cmpsb
addr16
pusha
jp
mov
add
or
jg
sub
rcrb
sub
push
stos
push
and
loop
xchg
mov
mov
js
popa
insb
rolb
addr16
lock
insl
sbb
movsb
jmp
mulb
sub
shlb
xor
inc
sbb
cltd
dec
sub
mov
ret
repz
push
ss
ss
mov
inc
sbbl
fistl
stc
pop
push
fdivrs
ret
out
js
inc
movsl
ret
add
insb
jbe
mov
lahf
mov
mov
pop
cwtl
sub
sub
sub
int
out
adc
mov
int
inc
test
jle
cli
push
popf
imul
inc
lahf
mov
mov
fdivs
add
dec
dec
sbb
mov
call
int
sub
mov
data16
mov
jecxz
iret
stos
cmp
xchg
xor
xor
ret
fst
mov
leave
test
enter
jne
enter
lret
and
xchg
pop
sub
mov
cmp
mov
int
jmp
cwtl
sub
stos
fnsave
jnp
lea
push
pop
mov
scas
and
inc
bound
js
mov
mov
jle
gs
sub
xchg
sbb
fmuls
sarl
cwtl
inc
pop
out
dec
je
popa
xlat
negl
mov
jbe
std
mov
jmp
mov
sbb
test
setp
imul
jnp
mov
mov
inc
xor
and
test
test
and
scas
mov
das
dec
out
sti
mov
sbb
xor
lods
popl
test
xor
pop
popf
iret
inc
imul
jp
lahf
adc
shll
mov
outsl
aad
sbb
push
inc
jbe
sub
mov
push
add
repz
sbb
je
in
mov
testb
sbb
xchg
mov
push
out
jmp
rolb
pop
push
xlat
clc
dec
cs
push
add
mov
sahf
jecxz
or
frstor
repnz
jle
sbb
fstps
add
sub
pop
inc
mov
out
push
lods
push
stos
icebp
mov
fbstp
pop
pop
pushf
mov
sbb
and
cwtl
xchg
and
push
add
mov
pop
imul
pop
dec
fcompl
dec
lcall
mov
jnp
mov
jecxz
pop
xor
mov
ret
mov
add
fsubrl
jae
inc
adc
jg
mov
pop
data16
outsl
cli
mov
or
in
and
push
and
xchg
mov
xchg
mov
pop
sub
inc
pop
sub
scas
ja
test
lahf
jnp
push
push
adc
call
push
xchg
fists
fidivs
sbb
lahf
inc
test
add
scas
jg
fxam
dec
rcll
pop
stc
push
testl
push
js
daa
adc
sarl
sbb
jno
inc
push
test
lods
loope
pop
mov
jns
js
shr
fnsave
sti
sti
and
bswap
jecxz
jl
fdivs
rclb
xor
mov
hlt
cmp
es
shlb
xor
pop
ljmp
add
scas
lcall
orl
pop
and
jmp
lcall
adc
and
lcall
xchg
int3
lds
xchg
sub
adc
push
test
popf
les
jge
outsl
lahf
and
mov
mov
cmp
dec
inc
fsubl
cltd
inc
movsl
shl
or
test
push
adc
xchg
xchg
fdivrl
push
nop
mov
pop
adc
fucomip
nop
les
push
fdivrl
jno
arpl
add
ret
idivb
out
mov
lods
adc
scas
test
xchg
cmc
mov
mov
pop
subl
add
fwait
cmp
push
stos
iret
insl
xchg
push
sub
sbb
es
hlt
je
in
fwait
inc
ljmp
xchg
cmp
xorb
jo
pushf
dec
add
push
sub
inc
repz
sti
aad
pop
in
lret
inc
cmovge
xchg
inc
movsl
xchg
sub
pushf
addl
outsb
xor
pushf
xchg
lret
insb
in
push
push
ret
sahf
mov
popf
das
fucomp
fwait
cwtl
or
jmp
shrl
sub
adc
pop
add
inc
imul
lods
jbe
xor
lock
push
testl
or
lret
data16
mov
in
or
adc
enter
mov
jne
orl
pushl
mov
sbb
mov
cwtl
dec
and
push
mov
sub
daa
mov
xchg
mov
jb
fwait
xor
daa
movsb
dec
jnp
xchg
dec
xorl
outsl
fstp
gs
sub
pushf
popf
neg
or
mov
pop
test
mov
xorl
stos
call
mov
push
roll
std
dec
jo
loop
xor
outsl
fcoml
mov
lcall
xor
shll
bnd
and
fcmovnu
les
xchg
stc
cli
in
test
or
invd
mov
jae
lret
addb
mov
out
mov
sahf
xchg
out
jl
mov
pop
mov
aam
jge
pop
xor
mov
in
mov
push
jb
sub
or
add
mov
notl
rcll
xchg
and
repz
pop
jp
pop
inc
int
cmp
jg
mov
or
pop
fdivrl
fsubs
mov
cltd
es
xchg
xor
and
mov
push
iret
mov
cmc
push
add
sbb
fldl2t
repz
pop
mov
test
add
imul
adc
bound
adc
inc
or
jno
int3
lret
movsl
mov
mov
cmpsb
xchg
xlat
cwtl
sub
cmp
sub
cmc
sbb
cmc
movsl
xchg
xchg
dec
popf
lret
or
or
or
cmp
adc
mov
movsl
adc
lcall
or
stos
xor
xor
lcall
inc
cld
push
cwtl
or
mov
pop
and
repz
inc
test
dec
mov
fwait
xor
or
mov
in
inc
and
movsl
pop
repz
xchg
cltd
jmp
popa
and
mov
enter
imul
and
sbbb
or
jb
idivb
les
jns
pop
mov
test
add
imul
ret
incb
or
add
rol
pop
push
pop
repnz
sbbb
imulb
sbb
mov
and
inc
in
inc
mov
negl
fs
push
xchg
incl
add
cmp
push
or
cmp
movsl
sbb
cmp
jae
aaa
fwait
lods
jge
jb
sbb
adc
push
jg
stos
push
repz
leave
loop
and
or
cmp
andl
sarl
cmp
push
mov
pop
xor
insl
in
popf
aad
sub
and
enter
lea
aad
add
int3
cmp
or
cmp
xchg
sub
popf
xchg
mov
cwtl
shl
mov
push
cld
fistpl
into
pop
mov
loopne
pop
pop
dec
cmpl
mov
jp
add
or
mov
pushf
sti
test
ret
inc
clc
lds
jns
lds
nop
lahf
push
aaa
pop
inc
in
xlat
mov
mov
lahf
cmp
mov
xchg
stc
cli
in
test
or
invd
mov
shlb
stos
dec
or
movsb
mov
outsb
shlb
and
das
jne
cltd
cmp
arpl
push
sbb
sarb
in
mov
add
xlat
pushf
sbb
xchg
pminub
mov
testl
sub
xchg
stos
add
fmuls
xor
ret
push
insl
xchg
popf
aad
fisubs
cmpsb
jno
fcom
mov
mov
dec
cltd
enter
mov
cwtl
ds
cld
loop
mov
test
mov
movsb
out
and
cltd
pop
call
int3
lcall
sahf
dec
pop
mov
movsl
sbbl
leave
fcomi
xor
mov
cmp
jp
add
mov
lock
dec
inc
pop
repnz
orb
cltd
loopw
sbb
and
fisttps
jns
shrl
mov
mov
fldl2e
je
sahf
das
xchg
stc
cli
in
test
nop
sbb
or
mov
adc
xor
sub
lcall
xchg
fucomi
leave
and
sbb
pop
or
scas
aaa
mov
cli
jnp
inc
mov
mov
inc
sarb
js
push
or
test
les
xchg
testl
movd
mov
pop
mov
gs
outsl
sbb
and
test
pop
dec
xchg
lea
xchg
movsb
popf
xchg
push
push
cwtl
mov
test
or
aas
lea
ss
arpl
cmp
mov
mov
pop
push
rorb
sbb
popa
mov
or
insl
movsl
ret
popa
and
cli
jns
lds
nop
lahf
push
aaa
pop
inc
in
xlat
mov
fldenv
cmp
mov
xchg
stc
cli
in
test
pop
xor
test
mov
ja
lds
movsl
or
popa
aam
fidivl
jecxz
cmpsb
fstl
pop
cmpsl
push
sub
cmp
std
cli
jnp
inc
mov
jmp
and
xchg
mov
mov
cmp
xchg
insb
addb
fistpl
sbb
mov
stos
cmp
pop
add
push
inc
sti
mov
jne
in
pop
dec
add
push
mov
hlt
cmc
xor
cmpsb
push
jmp
mov
inc
mov
imul
mov
int
cmc
or
cltd
mov
add
mov
cmp
jp
add
adc
ss
mov
jno
sub
icebp
imulb
js
stos
mov
inc
mov
int3
xchg
sbb
pop
jne
das
xchg
stc
cli
in
test
nop
cli
push
fsts
jp
xchg
add
fisubrl
fcmovne
xchg
add
jp
add
sti
call
fstl
jnp
aad
mov
in
repnz
fstps
gs
clc
push
cwtl
add
or
mov
jge
sbb
stos
and
xchg
mov
push
sbb
cmp
adcb
es
jb
fwait
outsl
or
or
shlb
test
rcll
and
jae
dec
mov
cltd
sbb
sub
out
cmc
xor
pop
cmp
fs
into
inc
mov
adc
popf
je
pusha
in
mov
pop
jno
lock
lahf
in
or
ficompl
hlt
cmp
mov
sub
pushf
ret
pop
pushf
jne
fs
lea
dec
rcrb
jne
test
shll
lock
scas
pop
popf
scas
mov
rcrl
les
sbb
outsb
or
mov
adc
and
cwtl
pop
adc
sbb
cmp
stos
xor
xor
sbb
jl
popf
mov
call
adcb
inc
sarb
clc
jb
adc
or
cmp
mov
adc
mov
in
xchg
mov
inc
loope
in
push
dec
test
cmpsb
inc
cltd
out
enter
push
je
test
push
or
xchg
ds
push
dec
mov
sahf
dec
mov
rorb
dec
adc
in
mov
loopne
out
mov
mov
lods
aam
mov
inc
sbb
and
add
rcrl
mov
sbb
psadbw
push
stos
mov
ja
push
push
inc
mov
mov
cmpl
jmp
les
or
jo
xchg
adc
lcall
gs
pop
push
xchg
adc
test
xor
shrl
mov
xor
sbb
jno
mov
dec
add
jmp
add
xchg
adc
loope
pop
ret
fwait
imul
fwait
cmp
test
mov
or
mov
cmp
orl
dec
sub
push
push
jb
add
inc
loopne
mov
stos
mov
es
out
mov
call
inc
mov
mov
sbb
pop
add
dec
decb
in
or
xchg
icebp
push
jbe
add
mov
or
nop
aas
ret
fwait
jle
pushf
cmpsl
and
jno
mov
push
push
cld
stos
sub
addb
sbb
test
fnclex
pusha
std
cmpsl
dec
pop
les
jno
dec
inc
and
adc
nop
or
adc
mov
xor
lods
jle
dec
aad
mov
add
inc
mov
scas
movl
out
mov
mov
inc
icebp
loopne
jb
aad
dec
sarb
pop
std
xchg
mov
xchg
cmc
mov
into
push
movsb
inc
insl
jmp
mov
ljmp
xchg
xchg
inc
cltd
enter
mov
fsubs
mov
xor
dec
arpl
mov
int
imul
adc
test
sahf
testl
jmp
xor
sub
ja
stos
loopne
ret
outsb
ja
ret
sahf
repz
mov
pop
sub
test
ret
test
scas
or
dec
and
mov
test
pop
cli
sub
sbb
scas
sahf
mov
in
mov
mov
xchg
test
movsb
shlb
and
add
gs
push
stos
fnsave
stc
add
test
lret
jno
pusha
mov
cli
ljmp
leave
loop
add
sub
or
stc
or
add
ds
jb
and
inc
jl
and
imul
insl
stc
xchg
xor
mov
gs
std
insl
and
imul
push
cmp
sbb
dec
inc
push
mov
fsubrs
in
aad
push
mov
sub
in
mov
arpl
fstpt
jecxz
dec
push
mov
xchg
mov
hlt
sub
ss
sbb
mov
inc
cltd
jl
or
dec
fcmovnbe
jo
xlat
dec
sub
stos
es
cmp
jne
fstps
notb
fwait
pop
pop
cmp
test
adc
mov
push
inc
scas
ja
test
pop
inc
adc
mov
add
mov
fcoml
jbe
mov
inc
fcoml
xor
xor
jnp
jg
mov
mov
icebp
xor
xor
add
cmp
test
int
call
imul
and
push
fidivrs
xchg
mov
lret
adc
rcl
fld1
gs
out
push
enter
jge
push
adc
mov
loop
enter
add
dec
push
mov
jmp
mov
mov
sbb
loop
repz
and
push
push
loopne
pop
pop
add
xchg
pop
dec
ret
decb
call
add
cli
shr
cmpsl
repz
fsubrl
dec
movsl
mov
ss
xor
mov
shlb
inc
in
mov
inc
and
cld
mov
test
arpl
pop
pop
or
mov
inc
push
loopne,pt
push
rcrb
jne
lds
fidivl
jecxz
test
xchg
jmp
sbb
dec
sub
sbb
mov
ret
pop
add
enter
adc
inc
sahf
add
sub
sbb
sbb
or
add
jmp
bound
xchg
sub
or
out
mov
lea
xchg
out
mov
test
or
push
arpl
inc
xor
das
je
outsl
stos
shr
push
data16
js
dec
jl
scas
stos
sbb
lds
push
xchg
xor
ret
cmp
sbb
mov
sbb
add
inc
sbb
nop
aas
add
rorl
adc
mov
movsb
fisubl
and
test
ljmp
negl
mov
fmull
or
xchg
jp
cmp
sub
mov
xchg
scas
push
test
cwtl
dec
in
shll
fstpt
repz
push
movsb
js
stos
js
push
loopne
and
inc
add
adc
add
sbb
mov
xchg
mov
insl
in
mov
mov
mov
xor
mov
mov
das
xchg
dec
xorl
adc
pop
ret
popa
xchg
hlt
cltd
sahf
gs
push
xor
inc
inc
mov
movsl
imul
leave
push
adc
mov
jmp
gs
rcrb
add
and
pop
stos
push
lods
xchg
sub
adc
fldenv
rorb
test
repz
out
pusha
in
fists
repz
jo
dec
and
mov
lret
cld
xor
pushf
stos
ja
jns
movsl
or
sbb
mov
add
xchg
cld
int3
aad
mov
test
mov
mov
inc
or
outsb
sub
andl
rcrl
repnz
fwait
push
dec
mov
test
dec
aam
stc
fsubrs
in
push
fidivrs
out
mov
add
clc
jecxz
mov
jmp
std
mov
sti
and
or
push
or
int3
inc
xor
dec
pop
pop
add
xchg
hlt
pop
stos
shr
aaa
loopne
xor
mov
repz
sti
daa
sahf
xchg
mov
inc
jnp
mov
adc
es
mov
loop
lret
pop
dec
ret
mov
ss
dec
pop
stos
aam
jno
mov
sbb
push
dec
xor
or
jg
into
rorb
add
movsl
insl
mov
rcr
adc
mov
xchg
outsl
stos
inc
lcall
cwtl
mov
dec
movsb
aad
xor
xor
cwtl
mov
mov
leave
loop
inc
mov
push
fadds
mov
inc
cmc
sahf
xlat
rcr
xor
test
and
xor
test
insl
lds
enter
mov
jne
out
jge
out
mov
popf
xchg
push
adc
pushf
test
push
outsl
mov
cmp
out
jge
pop
mov
adcl
or
lods
test
jmp
dec
lahf
faddl
pop
add
and
mov
mov
cld
jg
les
add
inc
sbb
rorl
xlat
mov
add
stos
dec
in
xchg
xchg
adc
outsl
dec
lahf
pop
js
cmc
fistpl
cli
das
stc
mov
ret
xchg
sbb
mov
scas
mov
sub
jl
pop
outsb
divb
mov
inc
mov
mov
xor
mov
sbb
jg
xchg
pop
push
jmp
cmp
adc
xorl
sub
add
insb
cmp
daa
xchg
int
sub
dec
and
cmp
xchg
mov
jle
ds
jmp
std
mov
sti
and
or
push
or
xlat
pop
gs
jb
mov
mov
imul
mov
arpl
inc
dec
pop
or
and
fucomip
repz
mov
pop
pop
in
dec
sbb
repnz
jbe
adc
mov
aas
loop
push
dec
adc
cwtl
lret
inc
mov
jp
lds
scas
push
sub
lods
leave
je
outsb
dec
lahf
jnp
jae
fistpl
bound
mov
push
cmp
pop
shrl
leave
sub
movsl
mov
cld
jp
add
xor
mov
or
movsb
test
sbb
std
cli
jnp
inc
mov
adc
xchg
push
cmp
vmread
call
sbb
loopne
sbb
aam
fdivrs
stos
cmp
mov
sarl
jecxz
arpl
add
mov
cwtl
cltd
test
ret
out
mov
cltd
jns
sub
sbb
xchg
sbbl
and
mov
mov
test
mov
ret
repz
dec
add
je
mov
mov
and
pop
stos
push
lods
xchg
sub
adc
leave
dec
xor
sub
mov
popa
stos
mov
test
dec
push
inc
shr
xor
xchg
daa
adc
jl
ret
sbbb
stos
sub
add
fisubrl
pop
outsb
shlb
xor
dec
cs
test
mov
xor
sub
xor
in
mov
add
fsubl
sti
mov
jge
andb
mov
daa
es
hlt
daa
or
inc
mov
rcll
jle
pop
mov
mov
xchg
and
fdivrl
fidivl
dec
jl
cmp
out
clc
and
out
je
jmp
shlb
hlt
mov
xchg
xor
mov
mov
push
cli
jge
cwtl
mov
xchg
int3
adc
mov
add
das
cmp
or
in
and
popa
cwtl
xlat
in
pop
xacquire
sbb
hlt
int
divb
inc
test
rcll
cwtl
push
fwait
xchg
push
ja
inc
in
dec
mov
mov
gs
fldcw
in
dec
ljmp
lds
sbb
fwait
dec
sub
dec
mov
ss
shrb
jnp
mov
mov
and
dec
repz
fwait
add
or
sub
or
mov
jge
xchg
fsubrl
sbb
mov
pop
xchg
inc
or
mov
inc
jge
jmp
or
mov
mov
mov
cmpsb
out
les
adc
sbb
lret
push
adc
xchg
test
push
outsl
mov
sbbl
and
xor
mov
mov
adcl
mov
pop
in
cmp
and
int
in
outsb
out
and
xor
shll
roll
js
fsts
nop
in
push
hlt
mov
sub
frstor
test
je
lods
lds
and
stc
push
and
dec
mov
mov
lret
and
inc
clc
and
dec
mov
push
ficoml
lcall
std
xor
pop
or
mov
popf
adc
sbb
cmp
cmp
std
cli
jnp
inc
mov
mov
push
test
xchg
sbb
mov
dec
aam
jns
fwait
and
dec
aam
cmp
xchg
mov
cmp
or
cmpl
xabort
pop
hlt
or
and
or
xor
or
in
jne
cwtl
mov
xor
inc
lret
shr
repz
adc
inc
pop
mov
jns
les
movsl
add
add
mov
sub
aad
pushf
cltd
push
mov
and
gs
mov
add
mov
dec
push
cli
sub
popa
gs
repz
fwait
mov
sub
scas
mov
test
cmp
ret
push
lock
cmp
adc
lcall
std
fmuls
lea
pop
lds
stos
sti
mov
mov
aad
scas
jge
pop
mov
in
lds
inc
jmp
or
add
push
addl
mov
or
in
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
movsl
fstps
call
fwait
mov
stos
xchg
out
mov
inc
inc
mov
pop
lea
shrb
cmpsb
cmc
sarb
sbb
cmc
mov
shl
mov
or
repz
and
push
sahf
and
cmpl
jnp
iret
fwait
sbb
loope
loop
xchg
enter
insb
xchg
pop
dec
lock
adc
mov
stc
xor
adc
orb
mov
lahf
lcall
dec
popf
lret
ljmp
lds
sbb
mov
movsl
sbb
jl
fsts
lahf
fcoml
jbe
xor
cltd
sub
xchg
adc
insb
inc
sarb
pop
push
mov
clc
ret
sti
mov
data16
dec
sarb
push
jmp
lods
push
sub
cmpsb
movb
cmpsl
ret
fld1
adc
pop
fdivrs
sti
mov
jno
and
es
imul
mov
dec
inc
push
jp
lret
mov
mov
jb
lret
sbb
xor
xor
int3
nop
mov
dec
and
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
xor
fisubl
mov
mov
and
cmpsl
mov
nop
pop
sbbb
mov
pushf
dec
lods
aad
push
dec
xor
cmpsl
or
fsts
push
lret
fucomp
jae
push
aam
ja
stc
cli
in
test
cmp
dec
or
mov
or
fistps
pop
xor
mov
repz
lods
pop
pushf
arpl
sbb
push
cmp
push
mov
inc
mov
mov
sub
add
dec
test
jl
mov
gs
sbbb
in
mov
mov
cmp
dec
out
jae
xchg
xchg
inc
cltd
enter
mov
fsubs
mov
xor
dec
arpl
mov
int
pop
dec
daa
adc
inc
sbb
ja
mov
push
add
mov
into
fcmovu
int
pop
fdivl
mov
xor
mov
add
cmp
shrl
sub
les
and
sbb
jmp
out
adc
jno
test
mov
xchg
ds
mov
mov
xchg
sbb
icebp
sbb
nop
sbb
sub
lock
inc
movsb
pop
pop
push
mov
lods
jle
fistpl
fwait
icebp
add
popa
mov
imul
cmp
add
fcoml
test
lret
and
or
add
cltd
int
je
rcll
push
cwtl
add
push
mov
sub
mov
pop
fidivl
je
mov
pusha
xor
mov
loope
mov
cwtl
fisubrl
lods
xchg
dec
mov
mov
fnsave
ljmp
jne
lea
fwait
movsl
dec
jo
lods
cmp
lods
mov
testb
lret
jecxz
add
mov
xor
bound
bound
or
ret
jg
fwait
ljmp
sbb
pushl
xchg
dec
test
mov
cltd
push
mov
aas
push
mov
call
mov
dec
bound
mov
push
push
mov
scas
fs
gs
push
mov
lods
outsb
testl
cmp
inc
pusha
push
pop
mov
and
cmp
cmc
cmp
pop
sub
or
arpl
dec
mov
and
les
mov
dec
ds
and
ss
lds
mov
pop
mov
gs
jl
xchg
std
bound
cmp
cmp
mov
test
outsl
stos
cmp
cwtl
adc
aam
lcall
test
nop
mov
fucomi
xchg
mov
mov
test
xor
mov
lret
jecxz
outsl
lret
stos
lock
jmp
sbb
aas
test
or
sbbb
movsl
mov
aad
stos
mov
pop
mov
push
sub
dec
mov
mov
sbbl
xchg
jl
xchg
lret
movsl
jno
mov
mov
xchg
test
inc
sahf
cmp
mov
cmpsb
xor
jb
loopne
sbb
cwtl
inc
sbb
mov
mov
xchg
mov
mov
adcl
pusha
subl
rcr
mov
mov
pop
popf
xchg
push
pop
xchg
fdivrs
mov
popf
insl
cmovae
imul
outsl
cmovl
imul
mov
cmpb
cmp
loop
or
add
mov
jne
push
ss
xchg
cmp
or
aas
lea
ss
mov
hlt
sbb
pop
div
sbb
sbb
imull
mov
add
mov
ficomps
in
push
push
lods
xchg
sub
adc
into
jecxz
mov
dec
sbb
xchg
rcrl
jmp
xchg
mov
stos
adc
sbb
ret
add
or
push
mov
dec
movsb
pop
mov
movb
add
rcrb
dec
mov
fnsave
popf
scas
inc
fwait
push
aas
add
lret
iret
add
test
cmpsb
mov
xor
push
mov
mov
jmp
mov
mov
or
pop
out
mov
data16
jne
mov
repz
enter
inc
jmp
mov
dec
lahf
inc
cwtl
push
mov
mov
int3
add
mov
imul
pusha
xor
leave
jno
fsubrs
mov
mov
adc
mov
sbb
mov
dec
jno
dec
and
xchg
inc
sbb
subb
adc
test
lods
push
dec
jb
sub
push
dec
add
cmp
xor
call
insl
mov
lock
inc
push
sub
mov
clc
push
mov
dec
lods
icebp
cltd
fnstcw
sahf
jb
lahf
xchg
movsl
jbe
shr
cmc
mov
testl
mov
inc
clc
or
fwait
push
dec
mov
lods
push
mov
inc
push
mov
rcrb
adc
push
fisubl
in
rol
fld1
jb
pop
test
mov
mov
xor
aaa
sbb
nop
int3
inc
pop
stos
adc
xchg
jp
dec
daa
cs
mov
aad
lcall
cmc
fsub
or
ret
mov
test
pop
xlat
jmp
xchg
jnp
mov
add
jmp
aam
jl
movb
xor
and
mov
pop
stos
dec
in
xchg
inc
repnz
out
dec
lahf
mov
into
push
inc
pop
cld
stc
push
movsl
xor
mov
and
mov
push
or
jl
pop
lahf
scas
scas
mov
pop
mov
pop
sub
in
ret
cld
push
int3
pushf
xor
xchg
inc
fwait
leave
cmc
in
cmp
aas
add
cmp
jl
shl
pop
test
xchg
lret
test
cltd
sti
mov
out
jecxz
push
cmp
xchg
mov
xchg
out
std
mov
jne
bound
mov
mov
xchg
arpl
scas
xchg
mov
cmc
mov
enter
mov
daa
pop
addb
adc
clc
into
std
seta
xor
btr
inc
aaa
mov
leave
sbb
cmp
jg
pop
scas
inc
push
lcall
ret
push
dec
xor
sub
dec
les
mov
pop
jecxz
sti
inc
and
movsl
push
test
movsb
or
xchg
lds
push
mov
push
stos
mov
push
push
inc
leave
dec
mov
cmp
int
dec
jnp
or
scas
fsubs
lahf
scas
push
xchg
mov
std
cli
jnp
inc
mov
lea
cwtl
xchg
inc
sbb
add
mov
test
adc
test
mov
ljmp
popf
jmp
xor
fsubs
jl
cmp
fld1
jb
cmp
jne
mov
lss
xchg
cmovno
push
test
outsl
movsb
xchg
test
fnstenv
das
or
add
ljmp
cmp
and
sti
mov
movsl
add
adc
jecxz
adc
lret
pop
dec
ss
jnp
lret
movsl
mov
lock
outsl
sub
or
push
test
int3
mov
loop
int3
loop
out
test
and
dec
aaa
lahf
lcall
sbb
insl
mov
shrl
gs
push
cmp
xchg
stos
inc
pop
mov
dec
fs
ret
shrb
add
inc
pusha
push
dec
arpl
or
push
mov
loop
in
nop
xchg
mov
pushf
test
dec
insl
add
dec
aam
pop
ror
pop
dec
or
imul
adc
jbe
loop
sahf
dec
fbld
cmpsl
ret
fld1
gs
iret
sbb
jg
pop
xchg
add
sbb
popf
test
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
dec
jae
mov
pop
dec
jns
and
cs
dec
popa
sahf
dec
mov
cmc
adc
mov
pop
xor
lcall
test
scas
inc
in
dec
mov
and
add
adc
sub
mov
test
dec
sub
xor
sub
xor
or
dec
mov
cwtl
mov
fisubrl
stos
xor
xor
cwtl
dec
insl
xor
leave
loop
inc
mov
mov
sbb
stos
cwtl
xor
lret
xchg
xchg
sub
repz
je
mov
xchg
mov
xchg
cmp
fsubl
fs
pop
mov
rcrl
int3
pop
sub
pusha
or
xchg
sub
xchg
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
mov
pop
xchg
mov
add
ret
sbb
and
cli
or
mov
jbe
xchg
jo
movsl
mov
sbbb
jne
dec
sahf
mov
lret
pop
xor
pop
and
jmp
lahf
sbb
out
pop
cmpsl
fcoms
std
mov
test
shlb
dec
sbb
mov
cmpsb
xor
jb
loopne
sbb
jae
mov
cwtl
inc
sbb
lods
fstpl
push
lahf
mov
sub
xchg
fcmovne
and
adc
adcl
adc
xchg
imul
insb
inc
jbe
xor
and
out
cmp
mov
jge
stos
mov
sub
cltd
or
adcl
sub
xchg
jmp
mov
dec
mov
into
pop
stos
nop
cmp
ljmp
test
repz
sti
ficoms
rcr
push
icebp
push
sbb
pop
sub
mov
movsb
fisubrl
call
xor
aam
mov
idivb
mov
ja
push
sub
mov
mov
scas
ljmp
pop
repz
sub
adc
add
int
movsb
mov
sbb
stc
test
jnp
adc
add
popa
push
fidivs
dec
lds
test
add
pushf
sub
sub
cmp
mov
add
mov
imul
push
inc
mov
mov
xchg
xchg
inc
and
xchg
dec
fmul
pop
fdivrl
jns
test
xor
loopne
push
xor
test
loope
xchg
xchg
lahf
and
pop
mov
add
and
mov
andl
pop
mov
sbb
loopne
sti
mov
sub
cmp
mov
sub
pushf
ss
test
dec
pushf
dec
and
pop
nop
mov
js
cli
mov
xor
pop
in
mov
lret
fucomp
jae
gs
mov
dec
in
mov
enter
icebp
push
mov
mov
or
imul
cmp
xchg
or
shlb
mov
stc
int3
les
inc
fwait
leave
loop
inc
scas
jle
cmpsl
push
mov
pusha
sarb
mov
and
dec
mov
les
je
enter
test
mov
jg
mov
cmp
in
shll
xchg
xchg
inc
cltd
enter
mov
fcompl
rcrb
and
mov
xor
aam
cmp
mov
jmp
mov
xor
scas
and
ficoms
push
add
lcall
and
lret
jecxz
add
xor
mov
ss
add
sbb
and
nop
sbb
mov
xor
push
sub
mov
loop
into
in
das
push
xchg
pop
adc
xchg
lret
movsl
jno
pop
ss
outsl
mov
jae
add
pop
dec
mov
lcall
std
sbb
push
cmp
mov
popf
push
pushf
jb
lahf
jp
xor
and
loope
shll
mov
js
nop
cltd
lahf
shr
testl
adc
test
out
jp
pop
fsubs
loopne
je
pop
roll
pop
ficoml
cwtl
push
mov
xor
xchg
lods
bound
data16
loopne
test
fdivl
sbb
movsl
dec
pop
hlt
jl
push
mov
mov
dec
inc
ret
dec
mov
and
fistl
in
add
fadd
sbb
push
add
pop
aas
aam
or
pop
dec
aaa
add
jbe
pop
rcrl
mov
push
inc
test
adc
cld
in
or
lret
lcall
sbb
repz
loopne
sti
mov
xor
hlt
lea
xchg
adc
cmp
lock
sub
pop
mov
xchg
dec
push
mov
aas
xchg
sbb
fcmovnb
push
inc
fwait
leave
loop
inc
cli
or
sbb
mov
fwait
push
dec
mov
xchg
push
mov
inc
aas
jecxz
cli
xor
or
cmp
inc
and
xabort
js
cmp
enter
mov
int3
pop
xor
xor
dec
inc
mov
bound
outsl
mov
sbb
sub
sub
filds
aam
icebp
pop
adc
inc
mov
mov
jae
ljmp
add
mov
lock
jo
pop
add
inc
inc
sbb
das
adc
mov
inc
stos
xchg
and
sahf
lcall
bnd
push
icebp
xlat
int
add
decl
pop
popf
ljmp
sbb
test
mov
sbb
mov
movsl
sbb
sbb
sbb
icebp
lods
shr
rcrl
lret
lods
or
scas
aaa
mov
cli
jnp
inc
mov
lds
inc
shlb
inc
mov
inc
add
insb
add
inc
xor
fisubl
sbb
inc
add
lea
jge
outsl
sbb
and
test
pushf
aaa
out
jmp
cmpsb
fwait
insb
outsl
mov
mov
stos
rclb
cwtl
dec
and
mov
mov
test
icebp
ds
mov
mov
inc
sbb
pop
or
dec
inc
sbb
or
mov
imul
dec
sbbb
jge
movsb
ljmp
or
sbb
std
fisttps
sahf
mov
arpl
bound
test
cwtl
daa
sbb
jne
add
xorl
or
in
movsb
ljmp
jge
pop
xor
mov
in
mov
fmul
add
sub
rclb
or
and
and
add
mov
jne
mov
pop
mov
addr16
outsl
sbb
and
test
pushf
and
adc
dec
inc
cmp
ret
push
adc
adc
or
cmp
sbb
or
jecxz
cltd
mov
add
mov
cmp
jp
add
add
lds
enter
repz
popf
in
aam
and
int
sbb
push
mov
filds
bound
dec
pop
or
lods
das
xchg
stc
cli
in
test
cmp
stos
xor
mov
or
fistps
pop
xor
mov
repz
lods
pop
pushf
or
adc
pop
pusha
pop
into
xor
fucomi
repnz
ss
aas
cmpsl
xlat
add
mov
mov
mov
mov
je
and
xor
mov
insl
jmp
in
jb
stc
mov
pop
out
aad
sbb
pop
sub
pusha
or
xchg
sub
xchg
jmp
mov
dec
mov
sbbl
mov
add
push
fwait
js
mov
sti
mov
lock
pop
dec
aaa
bound
lret
mov
cld
jg
mov
sbb
lret
movsl
dec
sbb
xlat
xor
fcoml
mov
aaa
sub
in
out
mov
ffree
jmp
mov
into
push
cmp
sub
cld
jbe
jge
push
jne
jge
push
push
jecxz
fnsave
sbb
jecxz
xchg
push
mov
inc
pusha
push
stos
icebp
sbb
repz
push
mov
add
add
xor
adc
cwtl
fdivr
xor
mov
andl
adc
push
lods
xlat
xchg
mov
mov
cmp
loopne
mov
jb
mov
and
sbb
jecxz
mov
shr
mov
ret
adcb
ficompl
adc
mov
xor
mov
cmp
cmp
pop
add
inc
sbb
inc
add
mov
xchg
inc
add
jecxz
xor
cmp
and
lods
inc
sbb
xchg
outsl
sub
sti
mov
sub
dec
repnz
jmp
dec
xor
xor
in
js
mulb
and
jge
or
push
shrl
push
mov
mov
xor
test
mov
aaa
clc
cmp
xchg
bound
jl
mov
sbb
in
testl
std
decl
and
fxch
out
out
shl
push
inc
push
fidivrl
enter
mov
lahf
sbb
leave
xlat
sbb
aaa
popf
iret
and
push
jb
insb
aaa
sbb
cmp
mov
aad
lret
xchg
dec
daa
cs
pop
das
or
lret
mov
mov
cmp
cmp
mov
and
sub
adc
fnstsw
cmp
jl
sbb
jl
sbb
xor
push
mov
int3
addr16
xchg
icebp
xor
fsubrl
aas
les
pop
push
lods
push
cmpsl
xor
pop
pop
scas
mov
sbb
cmp
fistpl
pop
jp
arpl
push
aas
loop
pop
outsb
fstps
rcr
popf
mov
add
pop
scas
dec
jnp
inc
movsb
push
sub
sahf
cli
jbe
lahf
jp
scas
pop
ja
or
add
jnp
lea
cmpsl
push
sbb
jle
clc
je
std
pushl
mov
mov
pop
mov
push
out
es
push
call
push
movsl
xchg
jo
cmp
call
pop
mov
sbb
pusha
call
cmp
xchg
mov
adc
imulb
fmuls
in
mov
mov
pop
push
andb
push
xchg
int
mov
mov
dec
mov
mov
cwtl
cld
aaa
pop
or
dec
sbb
add
push
pushf
xor
pop
fs
xchg
mov
jmp
xlat
stos
mov
adc
mov
sbb
push
dec
xor
jmp
dec
popf
in
inc
xchg
icebp
or
pop
sub
js
cmp
adc
mov
les
adc
loopne
jecxz
sbb
xchg
sbb
xor
push
sbb
popa
inc
xchg
and
and
and
push
addl
inc
stc
inc
push
cmp
push
mov
cmp
xchg
nop
nop
inc
sbb
cmp
shr
jb
mov
xchg
dec
test
bound
add
mov
mov
dec
fisttpll
inc
xor
dec
lret
int
push
stos
pop
xor
test
neg
adc
popf
xchg
mov
sahf
cmp
lea
mov
sarb
push
xor
lock
jg
inc
cmp
mov
cli
test
adc
add
add
ljmp
push
mov
fs
mov
xchg
jnp
lret
or
aas
ret
xchg
fstps
bnd
push
fcmovbe
cli
inc
mov
std
clc
or
xchg
mov
mov
fldenv
clc
adc
lahf
mov
adc
dec
out
in
testl
adc
ds
jle
out
jp
adc
xchg
imul
out
cmp
pop
fidivrs
mov
fs
xchg
mov
dec
inc
cwtl
mov
push
or
jmp
push
mov
cmpb
or
jmp
xchg
mov
adc
sbb
adc
inc
pop
aam
int
inc
xor
pop
wbinvd
push
jecxz
push
idivb
add
sbbl
sbb
and
scas
jp
cmpsb
test
cmp
in
pop
jp
jbe
adc
jno
pop
sbb
mov
stc
shll
pop
pushf
dec
pop
mov
cltd
mov
idivb
push
stos
pop
jbe
dec
cmpsl
push
ja
andl
rcl
fistpl
jbe
and
stos
lahf
add
xchg
fsubrp
mov
jl
jle
push
sbb
jle
fdivs
pushl
mov
out
rcl
cltd
mov
xor
cmp
mov
push
int3
pop
fiadds
fld1
jb
shr
mov
xchg
push
repz
aad
xorb
rol
sub
sbb
adcl
popa
mov
pop
idivl
cs
or
mov
pop
add
xchg
mov
test
jne
mov
in
ja
inc
lcall
pop
ret
xchg
int3
or
mov
fsubrl
dec
add
mov
mov
push
repz
pusha
sub
ret
xor
push
aas
cmp
inc
aas
sub
mov
dec
cmpsl
push
scas
mov
leave
fs
cmp
aam
xor
lahf
inc
pusha
ficomps
jle
ffreep
mov
jl
js
add
addl
xchg
adcl
ds
push
je
mov
lret
lret
fcoms
insb
jbe
ret
mov
pusha
jo
stc
into
pop
push
in
pop
enter
xor
sbb
leave
pop
pop
sub
inc
jne
pop
dec
daa
adc
mov
or
sbb
sub
xor
mov
jne
add
ret
sar
xor
sti
jnp
mov
sbb
mov
and
shlb
pop
jecxz
xor
scas
dec
sti
mov
mov
jle
dec
test
test
cmc
sub
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
sub
xor
rcll
mov
std
fisubl
push
jb
aaa
sub
popf
xchg
fsubl
outsl
mov
pop
js
mov
or
loopne
das
cmpsl
xlat
add
clc
je
pushl
sub
cltd
dec
cwtl
in
dec
aam
stc
sbb
in
sbb
xlat
sub
aad
incb
cmp
mov
out
cmc
fwait
lahf
iret
sbb
mov
sbb
enter
imul
xchg
movsb
lcall
inc
fistl
mov
mov
fsubl
lcall
dec
push
add
into
ret
mov
pop
dec
jbe
add
push
mov
dec
jg
cmp
into
addr16
ret
xchg
pop
mov
outsl
mov
test
lods
push
dec
repnz
cmc
sbb
inc
push
cld
test
mov
lret
mov
ficoml
dec
xor
fistl
or
test
xchg
jbe
xor
lods
jg
or
imul
sbb
js
jmp
in
sub
cmp
psubw
lock
aam
stc
fcmove
and
jp
or
mov
fidivl
xchg
daa
jl
cmp
fld1
jb
and
out
fcoms
or
es
lahf
dec
jl
mov
bound
mov
xchg
mov
mov
or
ljmp
cmp
aas
pop
mov
pusha
xor
sti
add
lods
inc
gs
ja
lock
jbe
adc
mov
std
mov
xchg
sub
adc
leave
pop
push
clc
sub
ja
push
test
cli
sub
les
jno
imul
imul
xchg
lods
pop
lock
push
inc
sbb
lret
stos
jne
jge
mov
sub
mov
movsl
fcoml
pushf
cmpsl
push
insb
into
movsl
push
sbb
add
sti
jmp
aaa
mov
cli
jnp
inc
mov
mov
inc
sarb
cmp
mov
fptan
fwait
cmc
pop
je
cmp
pop
test
stos
sub
cmpsb
fcomp
jmp
sti
cmp
into
clc
les
cmp
lahf
dec
mov
fldenv
loop
hlt
or
jl
sub
movsl
jne
test
cmp
clc
js
test
adcb
lea
dec
inc
iret
les
jg
pop
add
pop
adc
ret
ret
ret
inc
mov
add
add
test
cli
or
ret
std
mov
xchg
sub
adc
mul
shll
inc
lock
sub
lock
inc
cmp
sbb
mov
lret
int
push
cmp
jl
pop
stos
xchg
stos
cmp
fcompl
push
mov
sbb
jo
and
jmp
test
ss
xor
pop
adcl
inc
xlat
idiv
mov
insb
xor
mov
or
fcompl
pop
lcall
pop
mov
lahf
cmpsl
scas
repz
pop
mov
inc
mov
js
insb
aaa
movsb
cwtl
into
push
pop
adc
test
push
dec
lea
js
pop
das
or
add
mov
push
addr16
pusha
gs
mov
hlt
xor
push
add
sbb
aaa
add
or
icebp
cld
jg
mov
ja
inc
sub
dec
icebp
adc
sub
dec
cli
dec
mov
xor
sbb
jg
sahf
sbb
divl
test
add
push
jl
lret
sahf
fwait
test
push
or
outsb
movsl
sub
push
cmpsl
push
outsl
mov
lock
push
cmp
lods
vpsrlq
push
mov
lret
sbb
test
popf
scas
inc
pop
loopne
cmp
sub
or
idiv
mov
xchg
int
and
out
push
aam
ret
inc
lods
sti
ss
mov
cmp
fcom
pop
call
jne
or
xor
ret
enter
xchg
mov
lds
push
mov
dec
daa
adc
cmp
xor
pop
das
or
syscall
test
sub
repz
or
call
fsubl
insb
or
div
dec
lock
jl
adc
jecxz
cld
or
arpl
ret
popf
cmp
xor
xchg
xlat
out
repz
rcrb
jbe
mov
cli
xor
sub
repz
loopne
test
les
rcrl
xor
cltd
add
fisubrl
xor
sahf
sub
push
or
shrb
lahf
mov
jle
sub
test
pop
scas
lahf
icebp
cli
xor
jb
adc
sbb
call
inc
stos
push
add
pop
jno
fwait
sbb
mov
cmp
movsb
xor
lods
cmp
cltd
xchg
pop
outsl
inc
aad
mov
je
or
stos
dec
inc
aam
enter
mov
in
cmp
xor
ret
pop
pop
xchg
stos
xor
mov
in
addl
pop
mov
push
dec
mov
adc
xchg
fildl
cmpb
ret
dec
cltd
push
pop
pop
mov
push
aaa
sub
xchg
mov
scas
cmp
cmp
in
jmp
cmp
stos
mov
cmp
ficoml
jge
mov
inc
push
imul
cmp
stos
xor
xor
cwtl
xchg
mov
leave
loop
inc
mov
push
fadds
mov
inc
cmc
sahf
xlat
rcr
xor
sub
sbb
movsl
xchg
sub
jb
mov
test
fwait
dec
test
ds
or
out
adc
sbb
xchg
enter
test
hlt
jl
ljmp
fsubr
mov
cmc
repnz
or
adc
popa
mov
inc
divb
inc
jmp
clc
ds
and
sar
jecxz
mov
xchg
inc
movsl
xchg
sub
pushf
ss
xor
pushf
dec
and
pop
nop
mov
js
cli
mov
xor
test
fs
fldt
pushf
dec
cmp
movsl
sbb
inc
inc
aas
fwait
mov
lcall
inc
lcall
cmp
lods
rcrb
pop
pusha
jns
and
and
and
repnz
mov
loopne
add
ds
jl
xchg
sbb
repz
decl
mov
xchg
cmp
les
jmp
push
push
lods
xlat
push
call
push
lods
jmp
mov
xchg
addr16
idivb
loop
int3
xor
movsl
dec
mov
jl
dec
mov
xchg
movsb
pop
lods
or
ret
mov
clc
mov
arpl
ficoml
lcall
sbb
sti
repz
mov
cmp
jp
add
mov
ret
mov
add
setl
push
dec
or
mov
mov
test
test
push
test
test
mov
xor
adc
iret
sbb
insb
push
jl
pop
insl
mov
icebp
hlt
inc
sbb
orb
mov
ficompl
les
mov
scas
dec
stc
sbb
jecxz
mov
mov
shlb
icebp
sbb
js
popf
fistps
mov
mov
adc
mov
sbb
pop
sbb
jp
cltd
mov
fucomp
push
push
lods
inc
xchg
adc
movsl
jo
flds
mov
mov
testl
mov
jns
cltd
ret
mov
shrb
inc
out
inc
xor
sub
and
pop
loopne
fdivrl
jne
mov
ss
xchg
outsb
pop
adcl
subl
adc
pop
dec
xchg
xor
fsubrl
aas
les
cmp
sbb
stc
jno
pop
sbb
and
and
dec
mov
fistps
insl
xor
xor
mov
idivb
imul
dec
cmpsl
enter
leave
dec
jbe
jno
and
movsb
push
add
push
jle
sbb
adc
jge
lret
ret
xchg
xlat
idiv
inc
stc
inc
movsl
jle
cmpsl
push
cmp
dec
add
inc
adcl
insb
lcall
push
out
jp
or
cmpsb
mov
push
jne
fcmovne
inc
push
pop
cmp
inc
jb
fwait
jl
dec
cltd
enter
mov
mov
mov
jl
sub
inc
mov
aad
or
or
add
shr
ss
xchg
add
mov
mov
fisubrs
or
arpl
int
mov
pushf
jl
sbb
cltd
xor
xchg
mov
lahf
sahf
mov
fstpt
dec
std
test
inc
and
cmc
stc
inc
and
dec
mov
cld
mov
inc
push
insl
ret
add
add
ja
iret
fidivrl
xor
into
mov
jno
jb
adc
mov
outsl
in
pop
pop
js
in
scas
jg
jg
int
cmp
mov
adc
arpl
ret
add
inc
xchg
insb
in
adc
rclb
imulb
add
imul
push
int3
push
gs
in
popl
xor
clc
aad
sbb
pop
sub
jg
test
mov
lret
pusha
jecxz
lea
cmp
sbb
je
repz
ret
mov
test
clc
int3
mov
mov
sub
mov
lret
popf
mov
sbb
adc
lret
mov
sbb
insl
sahf
ret
insl
sbb
adcb
mov
pop
stos
inc
in
dec
lea
mov
pop
jp
pusha
mov
lods
mov
push
in
in
xchg
test
test
mov
sbb
cltd
mov
inc
lcall
cmpsl
dec
push
xor
ret
mov
fsubrl
mov
fwait
leave
cmc
xor
aas
push
xor
mov
mov
and
push
aam
ret
fwait
xor
cmp
xchg
mov
decb
jmp
std
mov
sti
and
or
and
mov
inc
repnz
rol
push
adc
mov
das
or
inc
jae
cmp
inc
sahf
shll
fmuls
pop
add
sbb
inc
sbb
outsl
cmp
popa
cltd
ror
dec
out
or
scas
jno
jp
int
pop
xchg
icebp
mov
and
aad
sbb
stos
jne
in
cmp
xchg
aaa
loope
mov
sti
stc
cli
in
test
cmp
mov
add
or
icebp
mov
stos
jbe
outsl
sub
js
shrb
cltd
popf
sahf
fidivl
lahf
pop
into
mov
fucomi
repnz
sbb
xor
clc
in
idivl
add
idiv
mov
pop
ds
ja
in
test
fwait
mov
xchg
xchg
cld
xchg
insb
jbe
push
inc
jb
fisubs
pop
fdivrs
sbb
jecxz
xchg
enter
aam
stc
or
xchg
dec
inc
xor
pop
sub
adc
ficomps
hlt
xchg
mov
loopne
cmp
jnp
pop
ret
stos
pop
add
iret
xchg
xor
lsl
sub
imulb
mov
popa
mov
or
stc
inc
sbb
xchg
mov
mov
cmp
fstpt
cwtl
mov
test
rcl
pop
dec
sbb
jo
dec
pop
leave
ror
je
ret
pop
add
stc
adc
push
aam
cld
or
mov
xchg
fcmovu
mov
js
sbb
add
push
pop
mov
jae
push
dec
sbb
or
adc
jl
js
cwtl
fiadds
out
adc
dec
shlb
sbb
mov
push
popf
jmp
inc
mov
jno
inc
and
and
shl
pop
xchg
pop
fdiv
repz
add
sbb
add
andb
js
sbb
popf
or
xchg
jmp
mov
dec
mov
into
pop
stos
nop
cmp
ljmp
xlat
fcoml
cmp
repz
sti
mov
sbb
and
test
add
jbe
ror
ds
dec
push
lock
add
arpl
dec
xor
shrl
or
stos
xchg
and
dec
pop
rcrl
shll
mov
les
mov
jecxz
mov
push
test
adc
movsb
lahf
dec
rol
and
mov
adc
push
lcall
add
or
adc
dec
idivl
cwtl
jns
std
decl
cmp
jb
xchg
xchg
sub
sbbb
push
push
sub
cmpsb
fidivl
fwait
pop
gs
fwait
push
pop
mov
lea
icebp
inc
popa
push
adc
and
push
sete
jge
mov
mov
sub
int3
js
lcall
int
pop
lods
xlat
or
jl
fwait
pop
in
aad
fcom
push
add
add
imul
ss
lret
xor
mov
ss
aad
leave
cmc
jb
ljmp
push
adcl
lods
pop
jp
pusha
mov
lods
mov
push
in
inc
loopne,pt
adc
sub
lock
sbb
sbb
cltd
dec
sbb
stos
mov
add
cmp
pop
test
lods
jne
scas
dec
nop
xchg
cld
pop
mov
addr16
popf
lahf
lahf
cltd
ss
rcrb
test
mov
clc
jb
ror
jg
pop
pop
hlt
cwtl
int
je
adc
push
test
cmpsb
mov
aam
mov
mov
fsubrp
cld
xor
shlb
bound
loop
leave
xor
mov
imul
mov
and
dec
sbbb
xor
and
xor
pop
pop
pop
test
cmp
cmpsb
mov
sbb
add
setnp
pop
add
outsl
or
lds
sbb
mov
ret
mov
cmp
sub
jg
mov
pushf
les
mov
in
popa
pop
mov
cmp
shll
lcall
insb
mov
push
fisubl
pop
jb
xor
mov
xchg
jno
movsb
lods
lret
push
xchg
fcmovnb
cmp
std
cli
jnp
inc
mov
mov
inc
sbb
add
mov
jno
dec
mov
loopne
call
push
sub
ja
fistpll
ret
fld1
jb
cmp
mov
xchg
dec
inc
push
jb
insb
aaa
sbb
or
sub
cmp
mov
dec
ret
pop
mov
dec
sub
pop
push
int
je
mov
out
sub
mov
ret
test
repz
add
mov
pusha
jp
mov
add
xor
or
sub
mov
xchg
enter
pop
pushf
inc
stos
adcb
lods
mov
pop
lods
push
sub
add
and
push
push
pop
sbb
xchg
mov
iret
repnz
sbb
xchg
fcomp
adc
sub
adc
sub
xchg
xchg
sbb
fstl
mov
cld
arpl
mov
pushf
cli
stc
punpcklwd
rcll
push
pop
mov
dec
aam
xchg
mov
repnz
dec
lods
rcrb
cltd
jne
andl
mov
cmp
dec
xchg
xchg
inc
cltd
enter
mov
sbb
loop
jg
sub
adc
jmp
mov
adc
movsl
into
pop
stos
shll
xchg
mov
jne
adc
or
add
bswap
pusha
xor
jns
scas
dec
aaa
mov
mov
dec
or
mov
sub
pop
push
ret
mov
xor
scas
outsl
inc
pushf
cmp
push
mov
mov
icebp
cli
loope
mov
sbb
jno
test
or
add
xchg
dec
cmpsl
push
testb
fnsave
add
fs
xor
inc
sbb
and
xchg
push
cld
mov
pop
popa
or
cmp
pusha
js
or
je
or
sub
rorb
or
push
push
fsubs
jp
mov
mov
insl
fwait
insl
or
jge
out
mov
lds
enter
or
rcrl
dec
push
or
mov
push
sahf
imul
rclb
cwtl
dec
and
mov
mov
test
xor
mov
lret
jecxz
pop
cwtl
test
pop
add
mov
xor
jo
les
xchg
in
cwtl
lret
movsl
adcl
cli
lods
lret
push
and
ja
xchg
mov
or
bound
push
cmp
xchg
test
inc
pop
lret
xchg
lcall
push
push
sbb
add
scas
ret
aaa
pushf
lret
int3
mov
inc
lahf
mov
dec
jecxz
bnd
lods
lods
inc
idiv
jnp
inc
mov
or
sbb
pop
xchg
aas
xchg
int
je
or
push
sahf
enter
movl
std
sub
test
mov
mov
xor
xor
mov
mov
push
adc
das
mov
ljmp
fidivs
call
sar
call
aam
sti
pop
adc
mov
ret
sahf
lret
jns
mov
mov
adc
or
hlt
lods
cli
mov
push
fisttpll
ret
pop
jbe
jae
mov
sub
cmp
sub
cmc
sbb
repz
loopne
test
les
rcrl
xor
or
stc
out
pop
stos
xchg
fwait
popf
pop
mov
scas
push
lret
pop
test
cmpsb
jno
adc
cmp
add
stc
inc
lahf
pop
aas
cmpsl
aaa
cwtl
hlt
addl
push
dec
out
ds
xchg
xchg
xchg
sub
js
popf
xor
dec
lods
xlat
insb
fnstsw
mov
jae
mov
mov
pusha
xor
cmpb
popf
dec
inc
mov
cmp
stos
xor
pop
sub
inc
adc
idivl
ret
jae
cmp
ss
push
loope
ljmp
cmp
sbb
jae
mov
mov
or
cltd
test
out
dec
cmpb
inc
imul
test
pushl
sti
test
sahf
mov
mov
mov
mov
dec
popf
scas
je
fistps
dec
cmp
nop
dec
callw
pop
or
adc
cltd
mov
adc
dec
mov
pop
test
lods
jne
scas
dec
nop
xchg
cld
pop
mov
addr16
popf
lahf
lahf
sbb
sbb
rcrb
test
cmpsb
stos
clc
jb
ror
bound
pop
hlt
fxch
out
adc
fstpl
cmpsb
mov
aam
mov
pop
out
stos
cmp
pop
shlb
xor
mov
xor
insb
aaa
sbb
movsl
dec
dec
or
adc
dec
cwtl
mov
shlb
mov
lods
lea
mov
mov
push
xor
push
ficoms
fdiv
shl
pusha
lds
sti
test
lock
pop
add
orl
inc
mov
cli
xchg
fwait
das
adc
mov
and
sub
or
out
lret
mov
or
cmp
nop
cwtl
inc
push
jl
rorl
adc
stos
jge
mov
stos
inc
lcall
dec
cmp
push
mov
jp
loop
cwtl
dec
pop
xor
leave
loop
inc
mov
push
fadds
mov
lock
in
mov
out
sbb
mov
out
je
mov
pop
test
movsl
xor
xchg
mov
jo
pop
cmc
pop
outsl
pop
test
popf
mov
mov
mov
dec
jb
ret
mov
and
xchg
xor
pop
pop
push
xchg
mov
xor
pop
or
mov
arpl
sub
pop
nop
mov
pop
and
lock
xchg
mov
mov
pushf
int
pop
dec
mov
cmp
sbb
xor
test
mov
icebp
or
jno
mov
repnz
test
mov
stc
or
sbb
sbb
cmp
adc
enter
push
xchg
test
mov
mov
adc
repnz
cwtl
fstl
jp
scas
jg
cmp
icebp
cmp
lods
cmc
cmp
cmp
adc
inc
clc
or
fwait
push
dec
mov
cltd
push
mov
inc
push
mov
ret
adc
push
fisubl
mov
jl
fwait
lea
iret
add
mov
inc
inc
lahf
mov
je
push
dec
add
push
repnz
push
or
popa
mov
pop
xor
pop
adc
mov
stos
pop
add
dec
repz
cmp
sti
mov
add
ja
pop
mov
orb
mov
negb
dec
mov
jl
sub
dec
push
test
test
pop
cmc
mov
stos
push
push
sbb
test
andl
xchg
int
push
movsl
or
cld
or
push
fsubrs
popf
push
jp
cmp
cmp
in
lods
bound
xlat
pushf
imul
pop
aas
cmpsl
push
cwtl
rolb
push
je
sbb
xor
mov
popf
loop
add
mov
xor
jp
or
push
fdivrs
loope
push
xlat
adc
call
mov
xor
loopne
push
push
test
sbb
mov
cwtl
mov
mov
pop
mov
out
mov
movsl
mov
ret
loopne
pop
push
rolb
inc
mov
fadd
nop
sub
sbb
test
lcall
dec
sahf
ror
mov
and
jg
scas
repnz
stos
xor
add
fildll
stc
dec
cmp
in
cmc
fsts
sbb
cmp
xchg
sahf
sbb
fiaddl
push
push
mov
cli
sub
xor
test
add
inc
mov
scas
fucomi
inc
repz
lret
fwait
cli
jnp
inc
mov
mov
inc
sbb
add
mov
jno
dec
mov
lock
es
sub
leave
xchg
fsubl
clc
popa
jge
out
wbinvd
adc
clc
fcoml
xor
xor
mov
dec
inc
pop
repnz
and
gs
inc
dec
xor
inc
inc
xor
cmc
arpl
int
inc
mov
inc
ret
std
pop
add
out
xchg
cmpsl
xor
jae
mov
add
sbbl
fwait
mov
cwtl
lret
lds
or
mov
xor
mov
data16
jae
push
mov
pop
out
jb
adc
push
cmp
rcrl
jl
movsl
push
test
fbstp
push
sbb
fistl
lahf
mov
fldt
add
arpl
push
xchg
rclb
pushf
ret
shll
add
adc
out
std
xorl
mov
cmp
rcll
push
fidivrl
mov
call
cmpsl
ret
xchg
fldl
and
enter
sarb
enter
pop
adc
mov
jmp
mov
and
dec
inc
dec
sahf
dec
mov
dec
loopne
in
xor
std
mov
ds
add
add
adc
jno
mov
clc
lock
ss
sahf
int
mov
adc
lds
ret
leave
fmuls
lcall
fisubl
push
mov
mov
jne
push
mov
popa
scas
lahf
sbb
xchg
fcoms
fiaddl
xor
hlt
add
in
pushf
insl
into
push
cmp
pop
xchg
mov
jmp
cld
push
xchg
and
sbb
push
pushf
mov
js
pop
js
and
aam
inc
mov
xor
or
sarl
outsl
inc
mov
mov
or
add
add
filds
insb
dec
jae
cmp
fistps
test
add
sub
mov
mov
mov
and
mov
enter
in
das
xchg
dec
pop
dec
inc
xor
dec
inc
jne
sub
ss
into
cld
mov
xchg
mov
sahf
cli
lock
mov
repz
mov
jecxz
inc
inc
push
add
dec
popa
xchg
std
andl
ret
sbb
sub
movb
sub
jno
pop
sub
mov
lods
mov
sar
dec
pop
insb
cwtl
adc
pop
mov
fdivl
or
sub
arpl
repz
add
cmp
push
sub
jp
cmpsl
sbb
jmp
xchg
mov
cld
rcrl
pop
xor
or
es
adc
sbb
rcr
pop
fdivs
rorl
and
int3
mov
pop
sub
mov
bound
call
inc
cltd
out
and
add
push
adc
dec
cmp
stos
dec
cmpb
mov
in
mov
in
adc
sbb
jmp
xor
mov
push
cmp
adc
ret
fidivs
lcall
sti
cmp
imul
ret
mov
pop
stos
pop
fs
adc
lods
jns
leave
mov
pop
sbb
xor
jae
leave
pusha
sub
ret
cmc
ret
icebp
sbb
lods
ja
in
sbb
or
les
push
ret
inc
inc
pop
cmpsl
sub
stos
shr
and
test
jmp
dec
insb
ss
aas
cmpsl
and
enter
scas
out
adc
mov
fimull
adc
fstpl
pop
test
gs
or
cmp
xor
or
aad
mov
sbb
xor
add
mov
loope
cwtl
sub
push
loopne
das
ja
xchg
add
test
je
xchg
into
xor
sub
cmp
mov
clc
ds
mov
jge
pop
dec
aaa
and
cmp
jmp
mov
sbb
lret
aas
xchg
xchg
negb
cmp
push
dec
jb
test
sbb
pop
and
fnstsw
ja
clc
dec
sbb
inc
lahf
rol
and
sub
hlt
inc
sbb
leave
insl
scas
je
and
cmpsl
fwait
popf
mov
xor
movsb
push
aam
rcrl
data16
mov
imul
call
in
loope
sub
lods
mov
mov
out
aad
dec
mov
hlt
jmp
out
adc
mov
cltd
xor
pop
cli
adc
popf
inc
sbb
inc
stos
and
jb
pop
fdivl
insb
call
clc
push
and
xchg
enter
dec
push
and
fwait
push
je
pop
in
in
mov
dec
aad
inc
push
ficomps
sub
and
shrb
add
or
lods
lahf
fisttps
push
xchg
sbb
cmp
dec
js
or
sahf
fs
pop
lret
clc
testb
mov
fists
adc
das
dec
mov
add
push
pop
into
push
rcr
rorb
insb
fcoms
adc
mov
in
test
add
dec
pop
enter
lds
mov
std
pop
jp
push
mov
add
jmp
and
or
pop
or
sarb
pop
std
xor
cltd
es
dec
aaa
sbbl
in
or
or
dec
enter
and
xor
inc
jge
cmp
inc
inc
popf
jnp
cmp
call
pop
xchg
mov
dec
inc
cwtl
mov
sub
fs
adc
xor
inc
cmp
out
or
jg
shl
mov
mov
xchg
pop
pop
movsl
or
mov
mov
cmp
jp
add
mov
dec
sbb
add
setl
dec
or
mov
mov
test
sahf
cli
cmp
shrl
jecxz
bound
dec
xor
stc
jnp
jns
pop
lahf
js
je
fildll
sbb
inc
sbb
or
xchg
cmp
sahf
or
std
mov
add
adc
shlb
stos
sbb
mov
lahf
scas
jg
test
push
dec
xor
cmc
cmp
pop
sub
rcrb
pushl
inc
sub
vmovntdq
repz
jo
std
mov
jle
fdivs
jmp
out
flds
mov
mov
fucomi
imul
fimuls
leave
sbb
divb
and
mov
inc
push
std
dec
jle
fwait
cmp
and
shlb
cwtl
mov
clc
sti
or
hlt
lahf
aam
adc
mov
fimull
negl
repnz
inc
sbb
nop
pop
jecxz
xor
iret
f2xm1
pop
mov
xor
lods
push
dec
mov
pusha
mov
repz
sbb
rcrl
push
ss
shll
mov
shrb
xor
sub
andnps
lret
pop
pushf
repnz
inc
inc
pushf
ljmp
js
xor
repz
inc
stos
ds
sar
inc
sbb
mov
or
stos
inc
hlt
dec
fcoms
dec
mov
adc
cmpsl
push
mov
daa
jbe
mov
sbb
adc
add
dec
push
aas
cltd
enter
mov
cmpsl
sbb
cwtl
add
leave
cwtl
sahf
test
leave
out
mov
cwtl
pop
inc
aaa
shrl
mov
outsb
xor
scas
mov
mov
mov
fadd
jg
sbb
repnz
cwtl
inc
or
enter
mov
hlt
mov
pusha
dec
xor
fisubrs
sbb
and
push
dec
mov
mov
mov
imul
testl
test
sbb
xchg
add
sahf
pop
jle
push
push
scas
rcrb
dec
pop
jp
add
jae
rclb
loopne
adc
iret
pop
xchg
jle
mov
popf
int
xor
cmpsl
xlat
rol
andl
jns
dec
int
iret
aam
cltd
hlt
and
adc
cmpsb
push
lods
inc
xchg
adc
mov
pop
flds
mov
stos
mov
testb
mov
dec
xchg
enter
int3
inc
mov
int
ds
mov
out
ret
out
mov
mov
push
imul
push
out
mov
lds
jl
test
enter
lock
popa
or
mov
repnz
xchg
adc
movsb
nop
mov
in
arpl
inc
push
push
stos
push
and
push
and
stos
dec
pusha
lods
pop
pop
dec
cltd
mov
lods
lahf
sbb
testb
popa
push
mov
pop
ja
push
add
xlat
and
stos
inc
lods
pop
aad
jbe
mov
mov
jns
push
push
fmull
mov
xor
jns
add
cld
ret
andl
sbb
idiv
decl
sub
inc
daa
xchg
int
aam
fcomip
into
popf
xor
dec
pop
fisubs
pop
test
jmp
pop
dec
cltd
aas
fwait
xlat
push
sbb
out
mov
aam
jbe
fs
mov
aaa
xchg
sbb
cmc
shrb
mov
adc
adc
add
adc
stc
lea
sbb
test
mov
cmp
movsl
push
xor
xchg
nop
mov
adc
cmpb
pop
rcrb
push
aad
lea
test
xor
mov
clc
pop
scas
sbb
stos
xchg
mov
cld
mov
dec
pop
imul
mov
push
push
cltd
add
push
std
mov
pop
scas
dec
cmp
lahf
es
mov
mov
mov
sbb
aaa
ror
add
add
or
or
xchg
ds
mov
out
push
fidivl
loope
add
test
movsl
add
xchg
pop
aam
jo
in
lahf
adc
out
and
add
cltd
les
push
jl
adc
insb
xchg
dec
daa
insb
sbb
out
pusha
dec
aam
mov
pop
jmp
loope
cmp
cmp
lods
neg
out
loopne
mov
addr16
pusha
xor
lea
xor
scas
push
sarb
aaa
mov
sbb
sbb
outsb
sub
xor
imul
push
dec
sti
mov
insl
push
push
int3
in
lods
sub
mov
inc
dec
rol
push
push
cld
sub
push
ficoml
fmull
adc
push
sti
sarb
nop
jae
and
movsb
push
es
mov
in
push
lahf
xchg
aad
mov
popf
scas
jg
stos
loop
les
pop
push
mov
js
cmc
call
rcr
jns
mov
icebp
adc
mov
mov
clc
mov
fdivl
ja
xlat
adc
test
xor
mov
mov
lahf
iret
sbb
adc
test
inc
mov
pop
stos
iret
mov
lret
nop
dec
daa
push
test
adc
int
fwait
stos
cmp
xor
dec
jne
or
fcomip
cmc
dec
lock
sbb
aaa
add
or
xchg
ret
add
cmc
cld
or
push
and
dec
jns
sub
sbb
push
push
ss
pop
push
ja
pop
out
into
fs
xchg
dec
scas
pop
rcr
dec
pop
xor
insb
cmp
dec
xchg
xchg
in
jbe
mov
cmp
out
adc
mov
fcoml
jbe
xor
shll
push
push
inc
fwait
cmc
mov
inc
and
pop
fdivs
adc
adc
aam
jle
insl
or
jo
adc
mov
push
sbb
out
aas
xchg
mov
mov
cmovl
mov
mov
rolb
jb
push
and
ljmp
push
sbbb
jp
push
mov
shrl
cmpl
cmc
add
mov
jnp
cmpsb
sti
jo
push
mov
mov
in
pop
inc
xchg
ret
vorps
or
cmp
rcrb
lahf
mov
mov
pop
jg
and
test
sub
out
xchg
enter
push
dec
mov
pop
insb
dec
das
xor
fsts
cmp
ret
cs
mov
mov
das
push
scas
jns
or
shl
adc
xchg
jnp
xor
bnd
cmp
inc
fdiv
in
xchg
sbb
and
sbb
enter
pop
les
pop
shl
adc
dec
adc
xchg
aas
pusha
xchg
call
fdivs
jmp
mov
ficomps
popf
iret
sbb
sbb
pop
out
pop
lds
mov
and
int
jle
xlat
mov
mov
pop
push
mov
shll
mov
enter
inc
aas
sub
gs
add
pop
movsb
xor
insl
call
push
ss
sbb
push
ja
and
ret
lahf
cmpb
xor
fisttps
std
pop
sbb
mov
and
addb
cmp
jae
add
or
or
dec
cmp
jnp
dec
loop
mov
adc
in
lds
sbb
hlt
jbe
out
jns
xor
pop
popf
cmc
jmp
xchg
or
sub
adc
icebp
fsubrs
pop
andl
rcr
jle
out
push
inc
lods
xlat
insb
imul
gs
dec
jno
cltd
loope
lahf
outsl
cmovb
jae
xor
push
adc
or
addl
aaa
decb
dec
inc
xor
mov
xlat
sub
dec
sahf
or
cmp
jbe
sbb
sub
adc
inc
mov
mov
clc
sbb
mov
jnp
cmpsb
fwait
jo
push
mov
mov
or
out
mov
imul
les
fisttpll
pop
stos
shrl
test
and
dec
mov
les
xchg
cmp
shlb
fnstenv
les
outsl
loop
lock
lock
and
sbb
cmpsb
push
lahf
fists
lods
aaa
push
pop
js
adc
je
dec
cmc
xor
subl
adc
ljmp
addb
mov
imul
xchg
dec
jb
cmpsb
jmp
loopne
mov
jns
mov
hlt
psrad
mov
fcoms
and
lcall
jbe
adc
jo
adc
xchg
pop
inc
mov
mov
dec
push
push
push
bound
hlt
mov
adc
or
loope
pushf
jnp
sbb
dec
xchg
jno
sub
lods
dec
movsl
mov
sbb
inc
jge
push
cmpsl
mov
inc
pusha
pop
insb
popa
inc
icebp
int
cmp
lods
mov
rcrl
pushf
pop
cld
add
xchg
mov
adc
or
xchg
cli
rclb
push
mov
pop
jne
call
push
movsb
test
sbb
jns
fwait
pushl
mov
jno
jo
popa
or
or
add
out
jg
inc
cmp
xchg
test
dec
cmc
xor
mov
xchg
sub
clc
cmp
in
ret
test
pop
fsubl
cmp
movsb
jmp
in
jae
es
xor
rcrl
mov
xorps
push
ljmp
pop
push
or
pop
movsl
push
jmp
out
cmp
js
adc
lock
push
hlt
mov
or
add
xor
cltd
add
mov
lock
inc
pop
lret
orl
xchg
int3
addr16
mov
xchg
jl
sub
cmp
xor
push
cli
sub
mov
pushf
cs
js
xchg
lret
or
or
or
cmp
adc
pop
dec
sub
pop
pop
mov
leave
pop
mov
cmpb
push
mov
sbb
push
in
push
mov
xor
cld
in
inc
ja
je
cli
sbb
mov
add
jae
adc
jg
stc
repnz
pushf
mov
lret
in
mov
mov
or
pop
fdivrl
inc
je
adc
add
fwait
and
inc
mov
push
jp
dec
mov
xchg
movsb
lea
mov
imul
cmp
ss
mov
loopne
mov
adc
subb
movsb
xor
add
jecxz
push
testb
ss
mov
dec
pushf
dec
and
pop
nop
es
adc
cli
mov
xor
test
fs
fldt
arpl
jo
xchg
mov
repz
or
sub
ja
add
pop
cmp
cltd
fcoml
cs
add
inc
mov
sahf
adc
imul
jbe
adc
pusha
loop
xchg
or
pop
mov
idivl
clc
xor
lea
mov
inc
es
int
sub
lods
push
out
xor
cmp
adc
push
insl
sti
outsl
lahf
rcll
mov
testl
push
lea
mov
sbb
or
sbb
test
shll
out
and
lods
sti
jp
xor
mov
or
push
add
in
icebp
jno
xchg
iret
sbb
dec
dec
inc
or
nop
pop
sti
cmp
movsb
rcrb
divb
cmp
dec
inc
dec
icebp
and
stos
stos
jge
jnp
sbb
les
lcall
cs
pop
lahf
cmp
js
pop
insb
push
jl
cwtl
insl
mov
push
add
mov
jp
adc
sbb
jbe
mov
enter
fsincos
push
shl
cmp
mov
fistps
push
sarb
xor
jecxz
mov
add
or
sarb
sub
mov
jp
clc
dec
xchg
xchg
inc
sahf
add
push
fidivl
xor
jns
and
xchg
fbstp
mov
aaa
sbb
stc
xor
lcall
fiadds
sbb
loopne
sub
mov
aaa
jecxz
call
cmp
add
pop
mov
loopne
lret
inc
inc
mov
popf
and
cmp
jp
sbb
cmp
dec
rorb
inc
or
lods
push
adc
cwtl
push
lock
xor
stos
mov
and
hlt
adc
ja
pop
push
ja
pop
out
lret
fists
je
mov
sbb
ret
or
inc
sub
add
add
or
add
add
movsb
push
sub
and
cmp
jg
cli
test
sbb
loopne
inc
fdivrl
jmp
idiv
jmp
in
mov
rcrl
pop
mov
out
push
fidivrl
xlat
insb
stos
movsl
cld
cmp
and
pop
insb
mov
jge
outsb
cmp
sbb
mov
enter
daa
pop
sbb
sbb
pushf
dec
daa
loopne,pn
aad
test
inc
xor
ficoml
pop
add
inc
sbb
pushf
aas
mov
jnp
cwtl
xlat
adc
test
ret
inc
or
add
lcall
dec
test
mov
xor
mov
aaa
cmp
repnz
pop
push
lods
pop
jbe
fs
fists
je
aad
xchg
xchg
fsub
cmp
push
push
aaa
std
sbb
sub
ja
lds
fsts
pop
test
dec
cmp
or
pusha
mov
cmp
std
cli
jnp
inc
mov
repnz
or
addl
es
stos
push
in
xchg
cwtl
push
sub
sbb
ret
mov
movsb
in
sub
lahf
adc
jb
pop
or
testl
inc
shll
daa
je
seto
jle
mov
popa
jae
sbb
mov
pop
jle
add
and
mov
test
add
xor
mov
cmp
jp
add
cltd
addb
cs
insb
and
je
les
inc
dec
leave
mov
add
push
fwait
je
ja
dec
pop
jne
test
movswl
in
rol
xchg
push
jne
mov
aaa
sbb
cmp
out
nop
dec
bound
test
in
inc
jo
xchg
stos
jge
cmp
adc
cltd
push
add
popf
xor
fwait
leave
inc
nop
inc
sarb
mov
outsl
mov
sub
dec
test
jle
inc
cmp
arpl
xchg
mov
rclb
mov
jae
push
jne
sbb
mov
sbb
loop
je
mov
mov
dec
dec
xchg
cmp
loopne
aad
imul
xor
mov
sub
dec
sub
das
sbb
jae
mov
adc
lock
push
push
jp
fnsave
add
or
ret
dec
xchg
test
hlt
cs
idivb
xor
dec
pop
test
mov
push
xor
inc
pop
fldt
aad
jae
jno
rolb
and
mov
inc
adc
add
cmp
adc
xor
fcmovne
lahf
mov
push
jbe
sub
xor
and
inc
fdivrl
mov
jmp
scas
inc
fwait
push
daa
jg
repz
pop
add
mov
pusha
test
mov
dec
mov
daa
cmpsb
dec
and
push
fidivs
movsb
add
sbb
cli
jae
inc
sbb
jnp
cli
out
or
cmpsl
frstor
xor
mov
je
mov
lahf
cwtl
sbb
pop
dec
inc
lahf
lret
inc
sub
cli
stos
pop
pop
xchg
int3
lcall
pushf
jge
leave
imul
fwait
cli
lds
mov
shl
movsl
xchg
inc
sbb
ret
inc
sbb
or
ret
fs
and
test
xchg
mov
cmp
clc
cmpsl
dec
sbb
xchg
push
loop
in
xchg
jno
repz
je
cmc
jno
lea
pusha
xchg
rorb
xchg
or
mov
mov
xor
mov
in
pop
psraw
cmp
sbb
adc
cmpsl
pop
fmull
pop
loopne
sub
cmc
xor
adc
cmp
shlb
or
aam
sti
jns
scas
sbb
fnstenv
push
push
rcrl
push
stos
icebp
mov
xchg
dec
and
xchg
pop
fdivrl
insl
in
outsl
push
or
fldl
int3
or
mov
test
push
hlt
mov
sahf
inc
ftst
pop
sub
call
insl
mov
push
xchg
cmc
xor
adc
ret
ficoms
iret
ss
mov
repnz
inc
pop
fcmovbe
cli
cmpsb
add
xchg
icebp
dec
sbb
nop
adc
test
mov
push
xor
jge
mov
cmc
fisttpl
rclb
dec
nop
lahf
shrb
loope
add
stos
bound
xchg
fisttpl
stos
mov
add
mov
rcrb
jnp
inc
inc
mov
pop
dec
xchg
mov
std
cli
jnp
inc
mov
stc
repz
adc
dec
sbb
rcl
xchg
cwtl
and
jl
jp
jns
js
and
sbb
xchg
mov
inc
dec
mov
xchg
fwait
notb
mov
sbb
pop
pop
mov
hlt
js
repnz
push
mov
insb
inc
inc
and
mov
xchg
cmp
xor
sbb
jle
repz
ret
mov
test
sub
out
mov
add
rcrb
jg
adc
or
add
in
xor
lcall
xchg
mov
aaa
dec
cmpb
mov
aaa
jns
sub
jecxz
inc
shll
jge
cmpsl
fwait
push
xchg
mov
test
repnz
add
push
jge
sbb
push
jmp
jne
add
ja
shrb
sub
xorl
clc
cmpb
pop
js
es
sub
or
sub
mov
push
mov
mov
xchg
ret
xchg
push
lods
repz
cmpsl
mov
lahf
inc
pop
dec
cs
lea
pop
xchg
dec
add
sbb
mov
cmp
sub
sub
and
sub
inc
inc
xor
pop
jmp
data16
cmp
cmp
mov
and
sub
mov
leave
inc
push
mov
mov
or
or
sub
fsubrl
pop
or
and
stos
push
lods
enter
xor
mov
js
movsb
push
dec
dec
popf
lret
sub
ud1
fsubrl
cmp
pop
jg
push
xchg
stos
vandnps
pop
mov
arpl
sub
dec
push
shrb
add
mov
push
or
mov
xchg
lret
in
or
cmp
cmpsb
stc
xor
and
or
xor
push
mov
sbb
popa
jo
pop
mov
mov
fs
jnp
jnp
inc
bound
inc
adc
xor
jb
xor
xchg
add
and
pop
adc
pop
pop
das
or
xchg
nop
arpl
addb
cwtl
mov
clc
sti
pop
es
fisttps
loopne
xchg
cmp
pop
cmp
xor
jg
cmpsl
mov
fadd
sub
mov
inc
cmpsb
xchg
adc
cmp
in
push
dec
mov
mov
popa
insb
xchg
adc
push
jmp
int3
or
add
xorb
fnstcw
daa
xchg
dec
xchg
jg
cmpsb
push
push
push
gs
enter
dec
push
fsubrl
push
aaa
outsb
std
pop
or
xor
icebp
in
cld
pop
aas
pop
or
dec
jmp
idiv
mov
sbb
daa
dec
sub
jp
stc
xor
fucomip
push
push
lods
xlat
out
test
xchg
enter
cmpsl
fstps
mov
cmpsb
in
out
adc
and
fwait
les
jle
adc
dec
daa
inc
jbe
sbb
push
aas
rorb
shr
xrelease
aas
or
push
nop
fwait
call
rorl
cmp
jmp
mov
sub
inc
cmpsl
mov
push
leave
pop
in
movsl
ret
les
lock
insl
sahf
mov
push
dec
mov
jae
pop
and
aad
fstpt
dec
sbb
cwtl
ret
and
insl
pop
loope
add
sbb
and
cmp
adc
ds
sahf
fs
pushf
ror
movsl
dec
gs
cltd
sub
pop
jle
or
jecxz
leave
in
and
in
pop
mov
hlt
xchg
sbb
sub
lock
xchg
addl
and
cmpsb
mov
aam
adc
jmp
outsl
cmp
idiv
les
mov
and
and
xor
sarb
lea
imul
pop
jl
add
mov
and
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
mov
fisubl
mov
mov
and
cmpsl
mov
nop
pop
lcall
dec
inc
push
xchg
cli
lret
bound
gs
in
dec
push
lret
leave
je
lahf
aaa
into
lcall
lret
rcr
stos
cmp
cmpsb
fcoms
add
xchg
add
xchg
jl
rorl
push
sub
xchg
jb
movsb
fidivs
cs
in
cld
or
xor
movsl
fcompl
js
pop
js
jnp
inc
stc
cwtl
xchg
nop
sbb
add
and
adc
js
aam
mov
jnp
inc
push
mov
or
cs
xor
popf
fwait
stos
cmp
out
mov
and
mov
stc
int3
pop
pop
lcall
mov
int
gs
js
test
push
jne
test
idivl
shr
pop
iret
pushf
dec
pop
lea
inc
jge
mov
clc
sti
mov
out
pusha
and
jge
icebp
or
sbb
leave
xchg
fdivl
cwtl
lret
sbb
push
mov
into
lahf
push
and
lds
lcall
lret
xchg
lcall
scas
popf
je
fldl
push
xchg
pop
call
cmp
xor
addb
fistl
jnp
cs
stos
mov
lcall
jle
push
xchg
cmp
cwtl
jp
mov
and
ret
popf
mov
sbb
sti
mov
add
dec
adc
rorl
jb
or
mov
adc
fsubs
pop
fwait
adc
xor
mov
push
or
out
les
sbb
fstpl
xchg
inc
dec
mov
mov
mov
out
aam
inc
pop
inc
sub
inc
dec
sbb
jle
jecxz
roll
pop
stos
int
jns
stos
pop
popf
xchg
jge
mov
mov
shrb
enter
mov
jecxz
adc
imul
mov
cmpb
in
dec
pushf
jp
mov
loop
push
sarb
dec
fwait
jl
out
mov
add
mov
cmpsl
xchg
test
cmp
sbb
addb
ficoml
outsl
shlb
mov
add
mov
mov
jg
xlat
js
and
push
stc
mov
fwait
push
arpl
rcll
testl
in
inc
es
out
shll
and
pop
xchg
adc
sub
mov
push
pop
leave
mov
ret
inc
jmp
sbb
cmpsl
push
pushfw
push
inc
inc
mov
rolb
test
sahf
dec
xchg
jmp
and
push
mov
cmc
hlt
clc
lds
pop
test
mov
mov
pop
mov
test
add
inc
repz
out
ja
sbb
xor
fnsetpm(287
mov
lahf
and
mov
xchg
xor
rol
inc
cmpb
adc
enter
mov
cmp
jmp
jle
lret
rcll
les
aad
or
test
sbb
out
xchg
or
lock
mov
push
xchg
pop
pusha
dec
push
dec
test
pusha
mov
jmp
push
cmp
mov
and
sbb
add
inc
je
lret
push
jo
mov
push
stc
rcrl
jle
mov
shlb
mov
imul
fucomi
hlt
std
mov
sti
and
or
inc
aam
call
lret
enter
dec
lret
cltd
fimuls
jb
jmp
mov
push
orl
push
xchg
pop
push
push
ret
pop
pop
xor
mov
mov
sub
pushf
ret
pop
sbb
test
pop
sarb
sub
dec
xor
mov
sub
cmc
sbb
adc
cld
mov
sar
pop
push
test
int
mov
cld
mov
test
mov
jl
rorl
out
fistpl
js
jbe
sub
dec
sbb
pop
rclb
jae
jo
stc
jb
pop
sub
or
and
cmp
mov
popf
outsl
inc
xor
dec
and
cltd
mov
cli
pop
cwtl
push
insl
lds
jnp
dec
jne
cltd
out
or
mov
fildl
cmp
in
hlt
xor
and
push
adc
inc
sbb
or
add
xor
repz
call
pop
dec
cmp
ds
push
mov
mov
filds
cmc
jnp
mov
fnstsw
sub
jecxz
sbb
add
test
mulb
int
cmp
sbb
repnz
sbb
push
test
sbb
and
cld
mov
fistps
add
jl
cmp
stos
adc
stos
jne
test
test
adc
outsl
or
pop
xor
jbe
scas
fidivs
aad
repz
add
int3
ljmp
jae
mov
ret
in
addl
push
or
xor
sbb
dec
notb
push
fidivrl
movl
push
shll
fld1
jb
xor
xchg
and
mov
test
sub
cmpb
xlat
mov
push
cmp
out
cmp
loope
call
shlb
subl
sbb
jmp
cs
outsl
add
lds
add
mov
aam
and
jge
and
mov
jns
ja
push
test
cli
cmpsl
repnz
push
icebp
aad
pop
inc
rorl
mov
outsl
lahf
pop
in
mov
mov
shlb
sub
xor
or
jmp
imull
loope
pop
xchg
fildl
cmc
push
pop
lcall
jge
pop
xor
lcall
fstps
add
or
or
cmp
or
inc
mov
add
and
add
sbb
aad
cmp
movsb
inc
inc
popf
mov
add
dec
mov
and
and
lea
out
mov
jne
cwtl
stc
inc
aaa
fsubrl
in
repz
cmp
lret
cmp
mov
inc
sahf
ror
pop
mov
imul
jmp
movsl
mov
pop
stos
add
mov
test
mov
nop
jns
inc
sbb
rcrb
sarl
pop
stc
sti
dec
sbb
sub
std
inc
inc
sbb
sbb
clc
lods
pop
add
sbb
cs
shl
sbb
sub
cmp
fiaddl
fsub
jnp
pop
mov
fcmovnu
xchg
cmp
inc
fs
mov
jno
in
xlat
add
xchg
int3
push
icebp
jl
popa
or
xchg
fwait
push
dec
mov
test
push
mov
xchg
sub
fcom
push
fdivrs
cld
and
cmpsl
ret
test
lret
mov
mov
xchg
jle
mov
add
mov
and
adc
inc
or
rclb
cmpsl
fisubrl
or
lahf
inc
jns
dec
cld
int
sbb
adc
sbb
fs
pushf
repnz
jge
mov
jge
cltd
pusha
or
mov
push
cmp
nop
push
hlt
mov
mov
hlt
cltd
adc
test
std
mov
and
jns
stos
inc
xor
mov
dec
sbb
popf
pop
sbb
inc
ret
pop
pop
or
sbb
or
scas
dec
push
push
outsb
les
sbb
icebp
sub
stos
mov
push
dec
orb
mov
jg
mov
push
dec
add
test
xchg
fwait
push
dec
mov
popf
push
mov
inc
aas
imul
ret
icebp
cld
mov
imul
stc
fld1
jb
pop
aam
fcomi
ljmp
adc
inc
cmovno
test
sbbb
dec
xchg
cmp
idivl
sarb
push
shll
pop
lahf
lahf
iret
fucomip
and
ds
and
iret
lock
inc
sbb
test
ret
inc
sbb
push
pop
shrb
cmpsl
mov
cmpb
mov
dec
int3
popa
adc
movsb
jb
lret
dec
insl
and
pop
xrelease
pop
dec
sbb
rcrl
fs
push
pop
outsb
mov
xchg
lds
jl
fistl
push
test
pop
test
add
jmp
and
pop
lock
lods
pop
fsub
stc
or
pop
jb
push
mov
aaa
nop
mov
xchg
inc
cwtl
nop
or
mov
push
loope
movsl
ret
fcom
xchg
mov
jmp
mov
cmp
out
call
lcall
movsl
and
xchg
ret
mov
inc
sub
xor
and
add
xorb
pop
xor
imul
mov
jecxz
lea
push
sub
sbb
mov
mov
mov
fmull
lret
mov
lds
push
clc
movsl
jb
ljmp
subl
jb
xchg
cwtl
nop
pop
add
in
out
sbb
mov
and
pop
inc
sub
or
mov
push
test
lods
loopne
cmpsl
pop
call
and
push
fists
fprem1
xor
adc
and
shlb
inc
sbb
test
dec
and
cmp
rcr
ds
cmp
mov
insb
jbe
cld
jns
fsubrs
mov
outsl
or
iret
sbb
xor
pop
inc
in
leave
cwtl
mov
mov
int
push
jae
fimuls
test
or
aas
lea
ss
rcll
subl
ffreep
ficomps
jae
mov
mov
insl
and
jl
cmp
fnsave
jg
jnp
dec
pop
add
jns
lds
cli
movsb
shll
ret
add
push
cmpsb
mov
pop
dec
mov
cmp
adc
cltd
mov
inc
lcall
cmpsl
dec
push
xor
ret
mov
sbb
js
fists
fcmovne
loop
xchg
clc
push
xlat
je
js
mov
ss
aas
rcr
xor
bnd
push
or
pop
push
sub
ljmp
es
scas
mov
cmpsl
cltd
clc
fmuls
scas
push
sub
pop
ja
shr
and
das
idivb
pop
add
cwtl
dec
and
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
aas
rcr
and
mov
mov
and
cmpsl
mov
cmpb
imul
sbb
xor
inc
push
dec
jae
cmp
cmc
sti
dec
rcrl
dec
gs
data16
dec
mov
rorl
push
sub
mov
add
pusha
mov
jle
mov
std
cli
jnp
inc
mov
adc
push
mov
xchg
sbb
mov
shrb
xchg
dec
scas
sbb
adc
mov
xor
loop
inc
adc
ret
xor
push
ficomps
gs
data16
adc
mov
cwtl
mov
in
cmp
movsb
or
mov
xchg
jmp
or
imul
jmp
dec
xor
movsl
sti
stos
mov
jnp
mov
sbb
push
int3
daa
daa
mov
inc
add
jmp
cld
inc
dec
cmpsl
movsl
flds
lahf
pusha
or
sub
cmp
sub
cmc
sbb
mov
popf
push
call
test
xchg
lds
xlat
mov
push
sarb
cwtl
adc
fucom
in
cmp
lahf
stc
lock
push
arpl
fnstsw
xchg
cmp
or
data16
sti
and
cli
repnz
and
or
dec
shlb
sbb
lock
dec
xor
stos
icebp
mov
fistps
xor
pop
jb
push
outsl
pop
or
popf
push
add
mov
test
inc
add
mov
xchg
cmp
or
mov
xorb
push
mov
adc
ret
pop
pop
xor
sbb
test
lcall
inc
mov
or
dec
adc
cmpsb
push
push
lret
imul
out
sub
ror
ds
bound
les
adc
inc
pop
jnp
add
jl
cltd
fistl
ds
and
sub
jno
lds
pushf
rcl
mov
lods
and
inc
bound
mov
inc
or
lret
sbb
sarb
add
mov
xchg
lock
mov
pop
jno
fisubs
adc
enter
cmp
cmp
loope
or
xchg
imul
out
cmp
adc
inc
inc
mov
pushf
pop
pop
pop
shrb
and
popf
xchg
push
adc
pop
xchg
lcall
mov
loopne
pop
daa
xchg
and
or
fsubr
out
popa
cmpsl
fwait
jo
jp
add
ror
test
ret
test
lret
jns
lds
nop
lds
push
adc
mov
mov
jp
out
mov
adc
test
ret
cli
jae
movsl
dec
xor
inc
push
pop
pop
pop
sbb
mov
ss
mov
xchg
test
movsb
mov
xchg
call
adc
loop
daa
ror
add
or
sbb
rorl
les
out
jecxz
mov
jo
inc
inc
sub
push
cld
cltd
outsl
inc
rcrl
xchg
mov
icebp
push
movsl
sub
mov
in
add
repnz
movsb
es
rcrb
popa
sub
adc
ror
ds
mov
mov
fildl
je
or
nop
rorb
xchg
stos
inc
push
push
mov
shll
test
stc
mov
sbb
mov
fistpl
or
add
leave
sbb
movsb
ret
mov
scas
ljmp
mov
inc
jno
in
dec
rorb
fmuls
cmp
or
pop
cmp
pop
fwait
pop
mov
mov
mov
mov
mov
imul
lahf
adcb
and
dec
add
push
orl
or
dec
xor
lahf
or
mov
add
pop
lret
fwait
xor
xchg
push
pop
adc
stos
fldt
rcrl
fdivs
and
inc
cltd
enter
xchg
xorl
push
add
movsl
jne
test
rolb
dec
and
mov
pop
pop
add
cmp
cmp
lahf
xchg
notl
sbb
cld
mov
pop
sbb
mov
inc
les
pop
mov
repnz
cmp
in
out
or
ficoml
mov
sbb
test
rorl
or
lcall
mov
lods
mov
jmp
call
xchg
add
cmpsb
mov
sbbb
loope
xchg
and
add
js
push
add
xchg
les
mov
scas
push
pop
add
mov
imul
or
inc
dec
push
xlat
mov
jmp
mov
fwait
jmp
data16
inc
mov
es
sub
sub
fsts
inc
inc
ret
push
xchg
adc
les
push
mov
bound
scas
cmpsl
jb
inc
cmp
xor
add
mov
pop
sbbb
or
mov
push
mov
test
ja
imul
ds
jg
and
mov
add
rcrl
pop
lahf
subb
and
ret
cltd
fistpl
mov
lret
push
inc
push
dec
or
sbb
in
cld
lods
xchg
jp
stc
dec
pop
jbe
push
sub
mov
test
arpl
mov
into
fs
pop
pushf
cmp
sbb
pusha
jle
das
fstpl
mov
mov
icebp
or
out
add
or
test
dec
les
cmp
les
mov
xchg
push
push
xchg
sarb
inc
in
insl
sbb
fucomi
hlt
std
mov
sti
and
and
push
or
or
imul
pop
pop
mov
subl
fstpl
mov
test
std
jb
add
rep
pusha
lahf
repnz
aaa
hlt
cmp
add
cld
sarl
fs
adc
fwait
ja
lods
jmp
lret
rclb
push
mov
in
fnstsw
neg
fucomp
cltd
mov
popf
lret
sub
xchg
dec
in
idivb
fstpt
cmp
mov
or
lods
arpl
loope
out
test
lods
aaa
mov
lahf
inc
mov
jg
push
inc
fwait
ss
mov
or
es
add
movsb
rorl
out
scas
addr16
fdivrl
sahf
dec
in
in
jbe
int3
in
mov
pop
cmc
stos
pop
fs
pop
iret
outsb
aaa
popf
mov
fcmovbe
insb
aaa
shrb
sub
or
sub
jmp
jge
adc
inc
inc
inc
arpl
pop
aaa
fsubrs
pop
mov
andl
mov
push
xchg
negl
daa
mov
daa
mov
sbb
out
subl
and
mov
pop
cli
jnp
dec
sbb
imul
xchg
xor
push
adc
mov
add
push
jl
mov
pop
repz
cmc
idivb
or
imul
push
mov
add
js
push
enter
lahf
mov
ret
xchg
leave
gs
jo
mov
mov
jl
outsb
aam
mov
lods
adc
hlt
jp
cltd
bnd
or
mov
xlat
insb
ljmp
jmp
sub
sti
cmp
fidivrs
push
cmc
incb
int
dec
movsb
dec
add
insb
push
inc
mov
ljmp
mov
fisubrs
addr16
mov
dec
sahf
dec
mov
sbb
shr
mov
mov
loopne
dec
mov
clc
cmp
xor
lcall
adc
fcmovnb
add
jmp
cld
inc
insl
cwtl
repz
lahf
or
mov
nop
jecxz
push
lret
push
and
mov
loop
mov
lret
jmp
mov
xor
test
inc
clc
movsl
sbb
lds
lcall
cmpsb
push
push
mov
mov
mov
mov
push
push
in
jae
sbb
or
mov
cld
loop
pop
jns
mov
addl
ret
rcll
push
fsubs
pop
cmc
add
sub
test
out
xor
pop
insl
stc
mov
sub
int
pop
mov
and
mov
xchg
int3
addr16
cwtl
pop
sbb
lahf
jne
int
cld
or
jmp
js
test
or
pop
ljmp
cmp
add
mov
cmp
jp
add
adc
popa
mov
jecxz
iret
imul
lret
gs
dec
pushf
jbe
push
jns
sub
cmp
sub
cmc
sbb
push
xor
xchg
dec
nop
mov
pop
adc
xchg
xor
sbb
stos
dec
in
pop
sub
mov
pushf
jne
cwtl
mov
lods
mov
mulb
rep
inc
sbb
scas
and
mov
sbb
lock
and
sub
add
aas
js
or
dec
icebp
or
add
dec
lods
test
shl
mov
xchg
stc
into
sub
cmp
mov
lea
in
and
jmp
jne
scas
push
test
cmc
push
mov
pop
or
sbbb
shll
cmc
push
add
cmpsl
adc
add
mov
insl
pop
adcl
dec
ret
fimuls
mov
sub
ljmp
imul
ds
ret
fs
ret
jle
in
fildll
pushf
cld
hlt
test
inc
mov
fisttpll
mov
std
mov
lcall
outsl
loop
test
jecxz
xchg
ficoml
lcall
inc
leave
dec
jb
mov
lods
jle
push
es
in
cltd
jbe
xor
int3
scas
inc
fwait
addr16
push
fs
push
add
sbbl
scas
addb
shll
mov
xor
dec
fisubl
and
push
cmp
sbb
mov
or
push
popf
xchg
stos
cmp
fcom
mov
mov
ror
mov
aaa
imul
int
inc
ret
mov
roll
or
into
pop
lods
sub
jp
mov
loope
mov
imul
cmc
lret
test
repz
sbb
inc
mov
nop
dec
sbb
mov
cwtl
mov
hlt
into
pop
mov
stos
mov
ja
push
test
test
cli
and
jmp
push
out
lret
rclb
sub
mov
ret
lock
inc
sbb
mov
shrb
enter
fldcw
mov
cli
ja
mov
inc
fwait
ljmp
scas
cltd
mov
test
jp
mov
cmpsb
out
mov
adc
jp
int
jge
xchg
testl
mov
adc
mov
cmp
xchg
fcomi
wbinvd
jle
imul
xor
int
or
mov
xor
push
ret
shl
in
je
add
jecxz
addl
xor
inc
rorb
mov
lods
inc
push
fucomp
or
and
cwtl
gs
jp
inc
fistpl
ret
data16
inc
stos
stc
out
shrl
loop
inc
mov
ret
repz
pop
cld
xor
popa
mov
addb
dec
jge
pop
insl
cmpsl
push
jne
push
jg
mov
cmp
fsubrl
dec
arpl
sbb
std
jbe
popl
cmp
sub
je
arpl
mov
std
mov
dec
cmp
add
out
sbb
dec
push
sub
fcoml
xchg
fwait
pop
pop
lods
gs
popf
sbb
pop
mov
add
push
and
mov
adc
xchg
cmp
xor
or
pop
stc
ss
bound
je
daa
clc
iret
mov
jns
outsl
pop
adc
iret
pop
adc
xor
add
pushf
push
push
lods
xchg
sub
adc
inc
in
lods
dec
sbb
repnz
sub
scas
cmpsl
scas
push
clc
mov
bound
mov
ret
push
lock
cmp
adc
cmp
pop
jnp
ficoml
adc
jl
cmpl
lret
jmp
rclb
pushf
and
add
or
push
in
or
fildll
mov
sub
push
mov
fwait
xor
mov
fcoml
cmp
mov
test
cmp
push
jns
cwtl
dec
inc
push
xor
adc
inc
sbb
push
imul
ret
fildll
stos
shll
andb
test
pusha
xor
xlat
mov
cmp
hlt
jge
sbb
aaa
inc
sub
outsl
mov
and
insb
push
pop
xchg
push
jbe
in
or
mov
cli
xlat
xor
in
lret
sbb
add
mov
ds
mov
push
in
inc
or
nop
lds
movsl
dec
and
icebp
fcoms
test
xchg
add
dec
out
xchg
pop
gs
arpl
clc
and
pusha
dec
fdivrl
mov
nop
mov
inc
out
decl
setb
mov
popf
push
lea
data16
push
icebp
jns
xchg
sbb
mov
pop
scas
dec
sub
push
mov
fwait
dec
adc
aam
fs
jb
stos
ja
outsb
sbb
mov
jle
aaa
int3
add
dec
sbb
inc
inc
pop
lock
stos
inc
cli
or
jecxz
in
cmp
pop
jae,pt
cmpsl
add
scas
loope
mov
fwait
inc
test
adc
loop
iret
fadds
js
lahf
loop
enter
dec
movsl
xchg
sub
pushf
es
sub
lret
mov
jmp
xlat
stos
mov
fbld
dec
sbb
scas
add
fbstp
jns
rclb
rcr
add
mov
sbb
ljmp
push
pushf
push
xchg
je
and
bswap
jecxz
ljmp
sbb
cmp
adc
dec
pop
pusha
jnp
mov
jge
push
inc
fs
or
and
call
out
test
pop
xchg
sahf
sub
test
push
stos
clc
jns
nop
xchg
pop
scas
stos
or
pop
je
cmpsb
iret
lock
roll
add
inc
cld
adc
pusha
fisttpll
xchg
sti
mov
f2xm1
lds
fisubl
sub
mov
repnz
or
or
xchg
dec
or
jl
mov
cmp
add
inc
sahf
jnp
imul
rcr
test
pop
mov
mov
out
ja
and
fsubrs
push
enter
xchg
ja
fs
insb
xor
jb
sub
arpl
push
cmp
fildll
repnz
sbb
dec
adc
popf
xchg
sbb
jnp
mov
nop
sbb
mov
adc
stos
std
fnstsw
pop
enter
call
stos
add
add
add
loope
dec
fimuls
adc
or
add
in
stos
mov
imul
ja
jp
jmp
xor
shll
inc
rcll
scas
fcoms
fs
sti
insl
leave
out
sti
push
lcall
jnp
jae
adcl
sub
mov
pop
add
or
dec
aad
xor
nop
xchg
sbb
cmpsl
test
push
xchg
dec
cmpsl
shl
cmpsb
pop
mov
repz
mov
sbb
or
fld
je
pop
hlt
ret
ds
lahf
fadds
decl
xchg
push
sti
js
inc
lret
out
fwait
mov
cli
cmpsl
dec
cwtl
pop
stos
test
fdivp
dec
inc
test
decb
data16
out
push
push
bound
sbb
mov
inc
or
mov
xor
pop
in
lea
lds
jnp
push
pop
pop
pop
mov
cltd
dec
xchg
mov
pop
roll
sub
add
xchg
insb
leave
push
repnz
lcall
add
cmp
mov
sbb
lods
xlat
jb
or
or
jne
and
mov
sti
adc
dec
sbb
cmp
imul
ret
mov
adc
or
push
adc
mov
add
fdiv
cmp
inc
pop
push
arpl
push
inc
inc
inc
xchg
xchg
clc
cmp
sbbl
xchg
mov
outsb
pop
mov
add
and
jg
test
sbb
push
mov
cmp
sbb
rolb
adcb
add
fcoml
lds
repnz
inc
pop
test
mov
pop
lds
imul
fwait
sbb
pop
and
add
add
arpl
mov
bound
adc
repz
divb
pop
fstl
pushf
sar
cmpsl
sub
dec
negl
adc
into
dec
pop
loope
fwait
adc
mov
xchg
inc
push
push
cmc
movsl
dec
repz
pop
add
fsub
fstl
inc
aad
ret
ss
inc
dec
jo
pop
ja
les
test
jp
adcb
adc
add
xchg
mov
xor
negl
test
mov
pop
jmp
hlt
inc
pop
adc
mov
sub
and
mov
jnp
push
rol
test
movsb
jmp
leave
lcall
adc
dec
cs
int
sbb
roll
sbb
xchg
mov
sbb
xchg
cmp
test
pop
sub
mov
flds
repz
roll
ss
sbb
hlt
add
in
lcall
sti
dec
push
pop
or
js
inc
int3
cmpsl
dec
add
shll
mov
adc
ja
fldl
je
xchg
sbb
sub
jp,pt
fildl
sbb
mov
cmp
push
repz
int3
inc
xor
pop
xor
push
or
test
cmp
lock
mov
pop
das
or
sub
pop
pop
push
shl
cmp
add
mov
clc
repz
jecxz
movb
cmp
mov
cmp
lahf
orb
andb
rclb
sub
inc
sub
inc
mov
dec
xor
mov
adc
push
pushf
dec
sarb
push
xor
hlt
dec
lods
iret
add
bound
or
sub
aam
shl
dec
mov
mov
fs
pop
lods
lds
int3
gs
inc
lahf
or
sti
push
fsub
add
scas
push
xchg
mov
jl
pop
movsb
sbbl
or
test
cltd
pop
mov
mov
in
xchg
ljmp
stos
mov
pop
mov
loope
loope
dec
mov
movsb
sub
arpl
jo
aaa
xchg
jae
push
test
repz
in
or
mov
int
xor
orl
jae
mov
cld
xor
scas
push
inc
xor
xor
enter
daa
leave
mov
outsb
or
iret
cmpsl
mov
lret
push
adc
rcl
lds
jmp
lds
mov
sbb
sahf
scas
ljmp
lcall
les
push
inc
jmp
push
flds
and
jp
shrl
jbe
gs
cld
cmp
dec
push
mov
ret
lahf
scas
fs
in
call
fisttpll
clc
jle
add
inc
push
mov
xorb
sub
mov
adc
mov
jmp
xchg
sub
lret
lahf
xlat
stc
into
jns
call
stos
scas
iret
sbb
cltd
sub
inc
enter
ret
add
xchg
push
repnz
adc
or
test
mov
inc
dec
imul
jne
lret
loopne
inc
jecxz
pop
in
sbb
jle
xchg
roll
xor
imul
inc
sub
cld
and
mov
xchg
scas
mov
dec
js
hlt
mov
mov
rcr
push
mov
add
aam
push
pop
push
subb
ljmp
aam
add
imul
mov
inc
movsl
push
fsubs
sub
lock
and
cmp
lahf
dec
fadd
sbb
shll
fucomi
repnz
cmp
sbb
jl
sbb
cltd
in
notl
or
out
push
daa
xchg
enter
xor
loop
fucomi
push
lret
xor
or
pop
cmp
call
aam
enter
mov
add
pushf
les
mov
cmpl
mov
cmp
repz
insb
sub
repz
or
subl
test
dec
lahf
lret
jecxz
inc
inc
add
aad
or
stc
cld
jg
les
push
and
jnp
ja
xor
mov
dec
xor
rcrl
inc
loop
mov
add
adc
jg
mov
xchg
test
mov
jae
lds
notl
xchg
movsl
int
stos
push
mov
mov
sub
push
push
push
popa
xor
adc
sub
mov
mov
inc
frstor
les
dec
xchg
outsl
sti
and
push
cltd
sub
push
mov
shrl
mov
mov
test
gs
pop
das
gs
rcrl
dec
mov
hlt
in
insb
or
mov
lahf
test
repz
inc
fprem
leave
call
pop
in
out
adc
loopne
jae
cwtl
iret
inc
fsts
bound
add
xor
lods
out
sub
lock
mov
aam
and
lods
ret
inc
out
in
jecxz
test
fisubrl
lds
lret
imul
lea
push
rcl
mov
jns
cs
xchg
or
out
test
cmpsb
test
mov
cmpsl
push
pop
xchg
out
icebp
or
lods
sbb
cmp
iret
jns
dec
sbb
addr16
loop
or
push
sbb
xchg
cs
xchg
xchg
out
cwtl
lods
xchg
cwtl
outsb
test
mov
xchg
in
jbe
push
out
stos
push
cmp
pop
enter
enter
in
adc
jg
mov
mov
bound
fimull
xor
mov
mov
xchg
adc
mov
pop
add
inc
sahf
jnp
imul
lahf
jmp
dec
dec
inc
adc
adc
cld
jg
popf
lcall
pop
adc
mov
xor
shrl
mov
inc
in
jae
sbb
xor
mov
gs
xchg
push
data16
add
jecxz
dec
cmpsl
push
sub
lea
sub
stc
in
adc
scas
pop
ja
pop
xchg
inc
fs
mov
and
jbe
ja
and
sbb
test
out
shr
inc
lret
dec
notb
lret
call
cmp
fwait
mov
pop
out
mov
push
dec
xor
push
lock
cmp
inc
inc
mov
aas
xchg
push
test
mov
das
jge
mov
pop
xor
std
sbb
dec
sub
call
dec
out
jecxz
clc
into
mov
sbb
out
cltd
lcall
cmp
cwtl
sbb
cld
lds
dec
imul
dec
iret
dec
cmp
iret
or
pop
shrl
cs
into
scas
mov
dec
dec
ss
js
xchg
lods
push
cmp
mov
pop
outsb
fmuls
cmp
and
mov
sti
stos
pop
scas
sbbl
jo
push
push
dec
mov
imul
sbb
lods
xchg
inc
or
sti
or
popa
or
lcall
addr16
xor
jp
push
sbb
inc
push
call
lock
sbb
ret
push
sbb
mov
cmp
xlat
push
sahf
xorl
enter
dec
je
nop
inc
cltd
enter
jge
and
stc
mov
cmp
leave
cs
or
mov
lods
lcall
inc
sub
sti
fidivl
jecxz
dec
mov
sbb
add
adc
adc
xchg
repz
push
arpl
pop
fbstp
fwait
add
shll
lock
lahf
sbbl
hlt
aam
push
repz
test
cmc
in
insb
jns
sahf
mov
jnp
mov
iret
es
insl
cmpsl
add
loop,pt
clc
std
pushf
or
clc
dec
push
sbb
push
or
fmuls
fdiv
xchg
jo
arpl
inc
push
jmp
inc
andl
xchg
imull
in
mov
mov
push
mov
rcrl
or
scas
fsubs
xlat
insb
imul
aaa
mov
cmp
jnp
jne
outsl
push
sbb
mov
pop
outsb
inc
dec
js
mov
aad
mov
mov
or
dec
mov
icebp
das
mov
imul
ret
loopne
stos
inc
ret
inc
mov
lcall
xor
xlat
push
ljmp
les
mov
pop
mov
mov
push
aam
ret
loope
jnp
push
push
in
lds
icebp
mov
push
aaa
insb
scas
mov
fdivr
jl
aaa
mov
cmc
or
cmpsl
jno
loope
sub
or
insb
xchg
les
sub
imul
push
sub
pop
sub
repnz
popf
roll
and
adc
and
lret
mov
std
mov
sbb
shll
test
push
stos
clc
jns
nop
xchg
pop
scas
stos
or
pop
je
cmpsb
iret
lock
roll
add
inc
cld
adc
pusha
fisttpll
xchg
sti
mov
f2xm1
lds
fisubl
sub
mov
repnz
or
or
xchg
or
jmp
inc
lahf
adc
sub
sti
pop
decb
xor
cmp
mov
orb
or
loopne
xchg
sbb
stos
stos
clc
mov
cld
mov
jnp
xchg
sti
sub
notl
jnp
xchg
mov
mov
sbb
or
fstps
int
push
cmp
sbb
orb
rcrl
sub
inc
push
jo
xchg
add
fstp
adc
lahf
mov
xchg
xor
dec
xor
fcoml
pop
loope
jno
jle
inc
shrl
lock
fsubs
ljmp
addr16
loopne
sbb
pusha
xchg
dec
adc
loope
inc
das
lret
stos
call
inc
sub
shlb
enter
dec
lods
iret
xchg
int
jmp
mov
mov
aam
ljmp
push
mov
lcall
xor
mov
sahf
out
adc
pop
aad
lahf
xor
popf
push
aad
leave
subl
sbb
gs
ret
pop
push
jnp
mov
std
mov
jae
pop
leave
in
and
xor
and
push
cmc
add
mov
jbe
jns
pop
shrl
adcb
xor
ljmp
fldenv
mov
daa
out
nop
out
push
cmpl
sbb
jecxz
or
subl
negl
mov
js
jns
pop
push
adc
aam
jae
push
das
cli
xchg
call
dec
and
call
mov
mov
mov
sbb
outsb
sub
push
pushf
aam
js
in
pop
or
push
sbb
sub
pushf
mov
cmpl
repz
inc
pop
push
jecxz
add
mov
xor
rolb
test
or
dec
jns
lea
xchg
es
inc
stos
jno
test
addr16
cwtl
or
sbb
sub
cmp
push
sbb
mov
inc
lahf
sbb
cmpb
in
std
or
and
insl
pop
mov
cmpsb
lea
ror
sub
xchg
out
negb
mov
in
shrb
test
cmp
stos
daa
lahf
inc
fildll
mov
bound
popf
add
adc
js
in
sbb
xor
sbb
pop
mov
out
arpl
lock
out
xchg
das
pop
push
out
mov
xchg
in
jnp
push
jns
xrelease
or
cmpsb
std
icebp
sub
push
ljmp
mov
mov
cmpsl
mov
fdivrs
jbe
lods
add
mov
lods
jne
adc
imul
xlat
loop
sti
mov
push
adc
adc
xchg
and
add
pop
dec
jnp
mov
scas
mov
pop
mov
adc
lods
push
dec
lret
loop
stos
notl
cmp
mov
stc
or
jg
sub
sbbl
mov
in
enter
mov
pop
xchg
and
inc
inc
pop
sar
int
jne
inc
in
repz
test
aam
fidivl
sub
fiaddl
popf
xchg
imul
adc
inc
sbbl
call
incl
dec
enter
stos
and
pushf
sbbl
lcall
mov
mov
add
xlat
sbb
popf
iret
and
js
sbb
or
hlt
jl
push
hlt
iret
ficoms
sbb
mov
pop
mov
lahf
cmp
lods
fadds
inc
inc
aas
push
lods
fdivrl
mov
cmp
cmc
mov
cmp
fistl
adc
stos
adc
sub
dec
out
mov
js
inc
dec
in
imul
add
push
adc
daa
cmp
xor
adc
jns
inc
popf
cmp
lock
xchg
mov
push
aad
xor
xchg
push
cmp
lret
xchg
jp
scas
dec
pop
jnp
test
dec
push
in
sti
mov
lcall
sbb
pusha
cmp
mov
idivl
push
push
mov
rclb
xor
addr16
repz
es
mov
lods
add
cmpsl
sbb
fdivrp
or
outsl
pop
lea
icebp
bound
jb
js
sbb
movsl
pop
pushf
test
fsubr
mov
cmpl
cmp
bound
mov
add
mov
leave
mov
and
lds
rorl
movsb
test
xor
mov
test
js
inc
jb
add
push
push
mov
inc
xor
rcrb
sbb
mov
pop
inc
faddl
push
and
mov
fisttpl
inc
xor
jbe
xor
test
xchg
cmpsl
leave
add
xchg
lods
push
push
fidivs
sub
fisttpl
jbe
mov
mov
fucomi
repnz
idivl
das
jg
out
lahf
cmpsl
xlat
or
rcll
dec
adcb
je
rorb
or
jl
mov
das
lods
dec
fsts
pop
pop
mov
arpl
leave
jbe
lea
sbb
adc
enter
into
inc
xor
mov
xchg
addb
shrb
mov
xchg
dec
pop
xorb
sahf
dec
mov
lock
sub
cmpb
pop
insl
jle
iret
fisttpl
stc
mov
mov
or
lock
lock
ja
shr
sbb
add
dec
xor
sub
popf
pushf
fs
sbb
les
mov
jno
test
and
mov
pop
inc
xlat
pop
iret
jge
outsl
sub
adc
ljmp
pop
ret
mov
push
mov
push
jmp
jmp
xor
jle
sbb
mov
sub
cltd
cmpsl
fld
inc
pusha
push
rcrb
ss
adc
out
inc
xor
pop
movsl
jg
out
call
adc
aaa
mov
pop
xchg
ret
pop
test
daa
push
lret
imul
lret
lea
enterw
shrb
xchg
mov
push
inc
mov
mov
shrb
imul
das
dec
mov
dec
call
loopne
aam
mov
inc
xor
lcall
lods
fdivrl
rep
loopne
mov
cmp
or
mov
jo
call
in
aam
xor
sub
and
nop
out
lods
popf
dec
add
sbb
into
mov
stos
in
lods
seto
lods
cltd
fstpt
or
ret
lods
test
in
in
push
mov
mov
mov
or
outsl
test
shll
xorl
and
inc
outsb
aad
icebp
loop
cmp
loop
push
jg
sbb
mov
lea
jnp
jno
out
in
js
sub
shll
inc
add
lret
add
icebp
xchg
ret
adc
xchg
rcr
test
adc
mov
leave
repnz
out
add
pop
pop
pop
rclb
push
ret
sub
and
mov
push
mov
scas
je
add
mov
pop
popf
inc
xchg
in
jl
pop
cmp
or
cmp
pop
ljmp
mov
sub
pop
mov
lcall
dec
xchg
mov
jnp
pop
mov
popa
jmp
test
fwait
adc
int3
sub
jmp
imul
jp
xchg
mov
inc
inc
repz
mov
push
push
and
xor
fldt
push
sbb
pusha
mov
ds
pop
fwait
leave
add
inc
fcoml
jg
adc
idiv
mov
mov
xor
addr16
adc
aas
cli
xchg
call
inc
and
mov
inc
or
bound
pusha
push
or
xorl
push
or
xor
inc
adc
das
shrb
push
mov
mov
test
jg
enter
inc
aas
push
lods
fdivrl
jbe
mov
mov
cmp
fistl
adc
stos
adc
sub
dec
out
mov
js
inc
dec
in
imul
add
push
adc
daa
cmp
xor
adc
jns
inc
popf
cmp
lock
xchg
mov
push
aad
xor
xchg
aad
sub
ret
xchg
jp
scas
dec
pop
jnp
test
dec
push
in
mov
lcall
sbb
pusha
cmp
mov
idivl
pop
testl
xor
addr16
repz
es
mov
lods
add
movsb
stc
cmp
fdivrp
or
outsl
pop
lea
icebp
bound
jb
jbe
sbb
movsl
pop
pushf
test
xlat
out
mov
cmpl
cmp
bound
mov
add
mov
leave
mov
and
lds
rorl
movsb
test
xor
mov
test
js
inc
jb
add
push
push
mov
orl
fcoml
aaa
jmp
sbb
mov
pop
inc
fcompl
push
and
mov
fisttpl
orl
divl
xor
test
xchg
cmpsl
leave
add
xchg
stos
push
push
fidivs
sub
fisttpl
jbe
cmp
jbe
mov
fucomi
repnz
idivl
das
jg
out
out
cmpsl
xlat
or
rcll
dec
adcb
je
rorb
or
jl
mov
sbb
aam
cld
mov
and
and
shlb
aam
aaa
dec
xor
aaa
ret
add
ficomps
std
fidivl
adc
cmp
jmp
or
jno
pop
sub
enter
mov
dec
xchg
shr
sti
in
lods
add
xchg
inc
in
lock
pushaw
sti
sbbb
and
mov
push
pop
mov
xor
test
jne
lds
fbld
xchg
pop
psubsw
bound
mov
sbb
dec
das
pop
repnz
or
pop
mov
pop
outsb
hlt
aas
push
mov
jmp
in
lds
arpl
and
lret
pop
lea
sbb
rcrb
add
sub
sbb
mov
loope
cmp
sub
fsubs
sti
adc
lods
cmp
sahf
daa
dec
sti
mov
idivl
popa
jb
arpl
xchg
pushf
out
push
rorl
popa
popf
xor
lds
pop
adc
inc
rcrl
jmp
out
push
shl
and
or
add
and
sub
adc
jmp
add
cmp
pop
dec
jo
jnp
cmc
lret
orb
cltd
lret
movsl
mov
sub
cmp
sub
fistl
pop
add
mov
mov
xor
xchg
inc
and
push
add
lret
and
add
jbe
mov
in
xchg
test
cltd
adc
mov
add
mov
xor
clc
sub
push
mov
jge
jb
and
jmp
je
adc
inc
adc
sbb
pop
out
jle
sub
jo
mov
mov
jp
enter
sti
xchg
jp
dec
outsb
push
lods
movsb
inc
fisubl
pusha
fcmovnbe
lcall
push
mov
aaa
popf
pusha
shll
mov
dec
inc
pop
pop
jge
shr
and
das
mov
das
or
lock
mov
mov
ret
inc
jecxz
push
iret
jbe
repz
mov
xor
incl
xor
dec
cmp
add
dec
test
sub
ja
mov
hlt
sub
fst
leave
add
sub
and
fwait
sahf
sbb
cld
mov
jne
xor
ljmp
vblendvps
xchg
into
adc
in
sbb
mulb
push
movsl
lret
add
jge
sub
fwait
lret
push
jp
dec
push
in
aad
inc
push
movl
enter
js
inc
out
cmpsl
xlat
push
push
xor
lock
dec
add
pop
xor
data16
sub
movsl
icebp
xor
add
adc
xchg
mov
fxch
imul
stos
nop
jge
jg
add
imul
mov
daa
adc
cmp
hlt
dec
in
into
mov
ficompl
sahf
outsb
pop
loopne
fidivs
ret
jecxz
dec
push
ljmp
sbb
iret
mov
jbe
adc
cmpb
loope
movsl
aam
cwtl
scas
mov
pop
aaa
stos
inc
cmp
adc
mov
fbld
int3
push
fbstp
pop
mov
lahf
popf
in
push
jl
sbb
mov
cmp
jae
popl
fsubrl
std
xor
push
sbb
nop
pushf
rcrb
sahf
adcl
pusha
push
fstpl
or
js
fdivrl
jne
fisttpll
rol
adc
adcl
push
mov
push
adc
add
xor
enter
sub
rorl
ret
inc
mov
rclb
sub
mov
xor
sbbb
inc
mov
jnp
out
jnp
lds
lods
xchg
cltd
sahf
xchg
push
jae
push
pop
or
sbb
sarl
nop
sbb
daa
jmp
jl
sub
mov
sub
in
add
lahf
pushf
sbb
sub
jae
mov
je
rcl
movl
xor
mov
rcrb
pop
outsl
fldenv
and
pop
dec
add
pop
leave
add
or
repnz
test
add
inc
cmp
int3
adc
lods
cmp
mov
fidivs
popa
mov
std
cmp
mov
jmp
cmp
xor
sub
dec
jl
lds
dec
fadds
adc
inc
jl
sti
adc
push
pop
xchg
js
shrl
pop
cmpsl
cwtl
pop
std
scas
inc
cmc
jmp
in
aad
and
xchg
into
hlt
adc
or
or
ret
fsubrs
or
cmc
out
je
add
es
pop
test
cmp
mov
popf
add
mov
jmp
mov
mov
iret
not
adc
dec
leave
fsubrl
adc
arpl
pusha
xchg
jge
mov
pop
lcall
sbb
cmp
jae
lret
push
xchg
cmp
popf
in
loopne
mov
xor
push
jnp
int3
call
adcb
gs
fisttps
imul
mov
push
or
and
add
gs
mov
push
inc
mov
mov
sub
xchg
mov
inc
andl
mov
add
daa
ja
xor
jp
inc
cwtl
dec
and
adc
inc
cs
lods
stos
repz
xchg
sbb
mov
sub
mov
shr
popf
mov
mov
shlb
dec
cmc
or
xor
insb
mov
mov
in
pop
xor
stos
shr
repz
or
push
mov
fcomp
mov
ja
iret
lock
dec
aaa
inc
fcompl
cmp
xchg
mov
iret
mov
in
imul
inc
into
xchg
mov
fstl
mov
fsubs
mov
aas
dec
add
ljmp
subl
xchg
test
or
loope
dec
push
lret
stos
xchg
fimull
mov
fs
jle
cmp
xchg
dec
jnp
lret
cmp
repnz
clc
sub
dec
xchg
sub
ret
addl
mull
mov
sbb
pop
stos
imulb
aam
js
lods
xlat
push
ljmp
pop
mov
pop
sbb
jb
sti
mov
mov
inc
add
enter
aam
or
adc
push
and
mov
scas
je
mov
jge
add
inc
fwait
call
fs
jmp
clc
add
push
sti
mov
sub
or
xchg
cld
jg
aaa
daa
and
dec
mov
jp
or
cmp
pusha
pushl
sbbl
adc
sbb
mov
adc
mov
push
rcrb
cmp
sub
push
stos
pop
insl
xchg
jnp
mov
xlat
push
shll
ss
xchg
jno
in
ret
gs
jg
imul
push
xlat
lahf
mov
cwtl
cmp
sbb
mov
adc
inc
lea
movsb
or
and
aad
mov
pop
cmp
pop
dec
daa
fisubs
jge
jg
je
mov
cmp
mov
aam
push
or
jmp
mov
sub
fdivrl
mov
xor
mov
divl
sbb
repz
cld
or
add
or
or
inc
sub
jl
lock
les
push
lret
loop
push
test
jno
scas
inc
and
out
pop
rcrl
adc
int3
or
shlb
shll
xchg
aad
sub
cmp
movsl
fnstsw
add
inc
mov
lods
mov
scas
and
inc
lahf
mov
testl
sbb
sbb
xchg
in
testl
jo
sbb
daa
xchg
nop
pop
outsl
js
inc
daa
or
and
sub
xchg
rcl
test
in
pop
dec
fistl
jns
xchg
sarl
movsl
sbb
fldl
addr16
adc
mov
int3
sti
pop
pop
lods
sbb
xchg
imul
push
or
jge
lods
add
add
xor
sub
jns
push
stos
pop
lods
call
ja
or
pop
add
mov
jae
mov
pop
arpl
inc
mov
testl
pop
adc
outsb
lret
pusha
and
insl
fisubrl
xor
xor
xor
popf
mov
insl
push
and
cmp
ret
inc
jp
push
sbb
ja
fadds
xor
mov
xchg
add
daa
mov
in
rol
pop
fcoms
decl
repnz
fmulp
sbb
scas
mov
repz
or
incb
loop
jp
lds
push
pushf
jno
or
adc
es
ficompl
and
in
cmp
mov
jne
repz
pshufw
sbb
hlt
xchg
sub
sub
xor
push
sub
lods
lods
jbe
sbb
adc
mov
dec
pop
and
insl
cmp
stos
and
sti
insb
jne
pop
dec
aaa
push
sub
mov
cmc
mov
and
int3
lea
xchg
sbbb
sub
cmc
inc
rcl
fists
push
shrl
rol
mov
gs
and
pop
inc
jle
pop
inc
insl
lret
jnp
mov
sub
push
pop
loop
dec
adcl
push
dec
cltd
fxam
gs
cmp
js
lds
or
out
jmp
js
dec
iret
idivl
fistl
sti
xchg
cwtl
cwtl
ror
out
loopne
jmp
xchg
cmpsb
xchg
iret
and
in
in
pop
subb
jnp
enterw
push
or
insb
inc
loope
mov
insb
or
xor
dec
fstl
dec
sub
sub
data16
lret
sahf
lret
mov
pop
add
push
or
xor
jnp
mov
sbb
inc
cmp
imul
ret
ror
addr16
mov
sub
scas
inc
sub
inc
mov
dec
xor
fmull
and
lret
ret
loop
cmpsb
imul
push
sahf
xchg
cmpsb
movsb
inc
cmp
xchg
cmp
inc
push
xchg
test
inc
lock
fcompl
jbe
push
roll
jb
and
es
sub
fs
cmc
inc
add
ljmp
pop
dec
fnstsw
xchg
sub
fimuls
ds
sub
sub
push
and
cld
jno
xchg
das
inc
outsb
sahf
pop
js
orl
adc
pop
sub
push
je
sub
jbe
std
cmpl
cmc
mov
jle
or
xchg
pop
out
call
loopne
aam
aaa
fisttpll
dec
adcb
cmp
int
daa
inc
mov
les
inc
add
inc
cmc
cld
add
insl
out
xadd
ret
push
dec
xor
ror
add
inc
jne
sub
xchg
lret
scas
fs
pmulhuw
push
insb
push
roll
repnz
jbe
jp
scas
push
mov
mov
dec
fs
push
xchg
fcmovnb
mov
lods
inc
orb
hlt
fnstsw
add
push
jle
lcall
pop
int
jl
jnp
std
lret
lret
inc
xor
adc
xchg
int
out
add
dec
xor
cmp
xchg
mov
call
out
adc
push
cmpl
les
adc
xor
inc
aaa
sbb
pop
shlb
cltd
push
pop
cmc
ficoml
mov
or
xchg
pop
pop
addr16
jb
clc
lock
sub
or
test
cmpsl
or
lods
sarb
xor
cmpsl
mov
xchg
rolb
push
xchg
push
cmp
xchg
loope
fcmovb
xlat
call
mov
lret
imul
les
push
test
lret
inc
sub
lods
push
and
push
lods
fildll
inc
ret
cmp
aam
movsl
push
mov
stos
cmp
movsl
and
xchg
xchg
xlat
inc
push
inc
inc
push
lea
repnz
inc
repz
and
dec
mov
adcb
adc
ljmp
inc
fsubl
test
adc
adc
orl
mov
pop
fs
adc
cld
and
and
mov
mov
xorb
scas
out
bound
andb
push
xchg
push
mov
jne
pop
mov
dec
ret
or
test
fiaddl
adcl
add
mov
inc
pop
rorl
add
out
pop
adc
repnz
push
incl
mov
or
bound
cltd
lret
pop
js
movsb
mov
cmp
dec
inc
cmp
inc
sbbl
test
xor
les
cs
dec
shl
pop
scas
dec
pop
repz
mov
insl
inc
mov
psubw
fsubrl
sbb
imul
shrd
mov
dec
push
scas
jno
adc
mov
jmp
push
mov
mov
or
incb
loop
jp
lds
push
pushf
jno
or
adc
es
ficompl
and
in
cmp
mov
jne
repz
pshufw
inc
mov
inc
push
test
mov
pop
mov
cmp
pop
ret
inc
int3
dec
pop
out
add
stos
dec
gs
jmp
clc
shrd
lahf
in
inc
cmp
cmp
fdiv
insl
test
or
sub
xchg
sbb
xchg
ds
outsb
in
scas
shrb
lcall
aaa
stos
inc
test
add
out
xor
in
mov
icebp
or
inc
enter
mov
push
mov
push
push
mov
pop
aam
inc
pop
ret
movsl
dec
fldl
jl
cmp
push
pop
cltd
push
arpl
or
add
push
cmovg
sbb
movsb
lods
repz
adc
xchg
jnp
std
mov
jge
pop
in
shrl
sub
movl
call
cmc
adc
insl
mov
fs
xchg
xor
insb
aaa
and
mov
shr
pop
or
les
rol
sbb
pop
mov
jecxz
insl
stc
inc
inc
mov
mov
iret
ror
scas
and
mov
sbb
add
cmp
adcl
out
test
cwtl
test
aas
jnp
mov
jae
adc
aam
cltd
and
cmp
ss
int
lret
push
push
in
add
lret
popf
bound
insl
xchg
sub
movsl
frstor
dec
cmpsb
add
scas
js
push
jo
jns
adc
xchg
jge
enter
repz
push
push
fisttpll
js
inc
loop
lahf
cmpsl
xlat
or
cmpsl
test
fdivrl
cmp
mov
fistpll
xor
cmp
iret
mov
loop
sahf
jb
pusha
jo
cmp
or
xchg
ja
mov
sbb
jbe
push
or
jno
dec
cmc
mov
shlb
fisubrl
shlb
sbb
jne
ret
loopne
fsubrl
sarl
lds
out
shlb
sbb
andb
sbb
mov
fsubr
add
insl
movsl
aam
ljmp
adc
call
dec
mov
into
mov
push
ret
dec
sbb
jbe
movsl
insb
inc
dec
xchg
xchg
push
adc
push
shlb
stos
xchg
stos
adc
test
gs
push
out
aaa
pop
setg
addb
loopne
mov
inc
mov
dec
adcl
rcrb
pop
mov
mov
popa
xor
lods
xlat
push
fwait
es
out
jp
cmp
jbe
adc
dec
xor
les
loop
mov
dec
sbb
imul
push
shrb
aad
lahf
sub
mov
ja
add
stos
shr
lret
js
jle
lahf
adc
stos
and
add
mov
jnp
cmpsl
int3
aaa
mov
shlb
lret
bnd
shr
cmp
arpl
test
or
fwait
push
mov
mov
cmc
sub
inc
push
jmp
and
pop
mov
cld
jb
sub
scas
cmc
sub
test
adc
push
sarl
xchg
rclb
fdivr
push
dec
fsts
cmp
xchg
jp
in
pop
dec
push
aad
fwait
data16
enter
mov
jg
add
orl
lcall
decl
adcb
stos
dec
test
mov
out
ss
or
fld1
shlb
jg
pushf
inc
mov
pop
push
ljmp
mov
inc
inc
and
jge
fs
push
jns
or
js
mov
dec
mov
lock
xchg
popf
std
jb
adc
subl
add
add
add
leave
mov
and
pop
cwtl
add
nop
push
lcall
rorl
mov
lret
mov
push
mov
imul
cmp
mov
pop
outsb
push
cld
nop
jns
aad
lods
push
cmp
lahf
dec
mov
push
mov
inc
mov
pusha
jnp
fsts
mov
test
sub
mov
popf
jae
and
in
testl
stos
sbb
dec
fwait
in
mov
jae
adc
mov
mov
push
cwtl
jne
dec
dec
rolb
aam
sbb
ret
pop
out
mov
push
or
xor
and
dec
inc
pop
ret
test
mov
stc
and
ljmp
add
push
add
adc
nop
jecxz
pop
dec
repz
repz
pop
sti
inc
in
adc
and
add
jbe
out
or
mov
js
xlat
push
inc
mov
push
dec
lods
push
dec
cmp
js
loope
adc
push
pushf
dec
lock
movsl
xchg
xchg
fstps
cmpsl
mov
lret
push
ja
mov
sbb
inc
imul
dec
sbb
in
addr16
push
icebp
xor
rolb
loope
jnp
cs
inc
sbb
jmp
lcall
adc
out
xlat
out
sti
jns
es
movsb
test
iret
rcll
mov
push
loope
sti
jb
cmp
arpl
add
aam
cwtl
repnz
or
rol
dec
sbb
pop
mov
insb
movl
loope
or
dec
outsb
sub
ljmp
add
cmc
adc
inc
fdiv
cmp
xor
fwait
pop
push
push
pusha
or
sbb
xor
mov
fimuls
pop
jno
pop
jo
push
negb
push
mov
mov
icebp
pop
cwtl
inc
and
mov
popf
in
sbb
insb
push
roll
repz
pop
inc
xchg
push
cmp
shlb
inc
lock
jne
sbbl
pop
xchg
fmuls
push
decb
test
adc
and
push
jl
bound
sbb
loop
test
jl
jns
sbbl
ds
xchg
in
or
or
adc
push
mov
addl
push
lret
inc
out
cmp
fs
enter
testl
ror
dec
and
mov
mov
popf
ds
fsubr
mov
dec
ret
orl
stos
pop
lods
cltd
inc
inc
mov
dec
shrl
xor
jmp
clc
sti
jmp
stos
inc
in
inc
pop
shrb
xor
enter
lcall
xor
lds
and
push
shl
ficoms
cmp
lret
daa
outsl
cmp
cmp
push
shll
push
imul
aam
adc
sub
push
xchg
repz
sbb
iret
push
dec
push
inc
cmc
pop
jl
adc
sub
outsb
add
push
xchg
fisttpl
or
addr16
cli
dec
or
inc
add
cmp
adc
add
cmpsb
pop
icebp
fsubrs
out
jecxz
mov
jo
inc
inc
sub
push
cld
cltd
outsl
inc
rcrl
xchg
mov
icebp
push
movsl
sub
mov
in
add
repnz
movsb
es
rcrb
popa
sub
adc
rcrl
or
ficomps
xor
int
rcrl
pop
xor
add
pop
push
pusha
lods
push
setae
rorb
add
shl
mov
cmp
fwait
sbbl
pop
divl
add
movsl
mul
lods
sub
sub
test
and
sbb
xchg
outsl
dec
ficoms
aad
dec
cmpsl
xchg
test
sbb
std
cmpsb
cmpsb
lret
add
dec
sbb
pushf
pop
mov
leave
jns
dec
sbbb
cmpsb
inc
fdivrl
jmp
push
pop
inc
jo
and
mov
push
inc
and
push
adc
mov
shlb
jmp
fbld
test
dec
push
xchg
and
pop
dec
lret
push
mov
loope
mov
outsl
mov
in
sub
imul
shrb
movsb
jle
pop
sbb
sahf
dec
mov
out
add
add
xchg
in
jmp
jns
icebp
das
adc
or
sti
jecxz
or
fs
sub
lahf
movsl
sti
push
add
jo
sbb
insl
adc
into
iret
mov
sbb
cwtl
or
xor
adcb
jne
cmpsl
mov
fimull
or
xor
push
mov
orl
jp
sbb
mul
lds
fildl
outsl
lret
stos
pusha
int
test
cmp
adc
aad
mov
sbb
xchg
cmp
add
inc
fcoml
jg
sbb
sbb
add
add
push
pop
adc
mov
lret
mov
push
sarl
inc
sbb
sahf
jne
jge
jmp
and
cld
mov
loopne
xchg
imulb
popa
rcr
lds
loop
pusha
jbe
xchg
cmp
adc
jnp
sub
cmp
inc
xchg
sti
or
in
andb
mov
inc
pop
shl
ja
fnsave
rcll
fsts
nop
shr
stos
sahf
xor
icebp
add
rorb
rcr
jmp
cld
hlt
test
lods
jo
popf
mov
push
dec
sbb
jns
xchg
aam
xchg
daa
jno
cltd
mov
adc
cmpsb
mov
ljmp
xchg
sti
xchg
out
mov
add
mov
cmp
outsb
pop
mov
jmp
xor
leave
loop
add
pop
fstp
divl
xchg
xchg
mov
daa
mov
and
xchg
jg
test
and
and
icebp
sub
loop
push
fistps
les
stos
push
mov
sub
xor
popf
xchg
mov
adc
pop
adc
aad
stc
sbb
sub
cltd
mov
push
negl
dec
xor
scas
mov
cmp
pop
mov
add
add
push
subl
ja
sbb
call
mov
fnsave
hlt
mov
cmp
movsl
leave
pushf
imul
xchg
stos
les
sbb
mov
add
test
pop
fwait
pop
mov
mov
mov
mov
mov
imul
lahf
adcb
and
dec
add
jae
rol
adcl
clc
jb
mov
rol
sub
shlb
inc
shlb
vmulss
mov
jne
cli
or
cmp
icebp
mov
movb
xchg
test
arpl
fs
sbb
or
in
jge
add
mov
js
mov
xchg
inc
pop
sbb
adc
or
cwtl
pop
add
mov
inc
pop
rorl
add
out
pop
adc
repnz
push
incl
mov
leave
bnd
shrb
int
jnp
pop
push
fistl
addb
scas
sbb
push
dec
xor
insb
push
in
cld
lods
mov
cmpsl
jae
test
mov
or
pushf
mov
mov
sbb
stc
mov
mov
in
pusha
hlt
adcl
add
xchg
test
adcl
sbb
mov
stc
divl
xor
call
cmpsl
dec
icebp
pop
xchg
jmp
add
jno
fwait
xor
rcrl
jae
cld
orb
and
rcrl
cmp
pop
mov
ret
jp
pop
daa
je
mov
push
imul
jne
sbb
or
push
cmc
xchg
rcl
jns
xor
jg
mov
xor
popa
mov
and
and
sbb
or
jo
push
jmp
cmp
test
mov
icebp
hlt
add
push
mov
imul
leave
fmuls
js
mov
xor
jg
subl
rclb
push
dec
fistpll
sub
fisttps
leave
push
mov
fwait
xor
insl
and
add
add
clc
jae
adc
pop
jp
add
addr16
xchg
mull
test
pop
std
test
imul
rclb
mov
shlb
sar
jns
push
cwtl
clc
xchg
imul
xchg
out
xchg
in
loope
jb
daa
int3
out
jnp
sub
aas
mov
sub
inc
pop
mov
or
jmp
stos
fidivl
jmp
movsl
rcrl
repz
cmp
lahf
outsb
pop
loopne
mov
into
adc
repz
std
call
ret
movsl
loopne
rorb
mov
add
mov
push
mov
lret
imul
lahf
das
stos
inc
mov
inc
lcall
fnsave
dec
jae
mulb
xor
sub
mov
fsts
shrb
pop
out
xorl
mov
or
adc
hlt
xchg
cmp
xchg
mov
ficomps
sbb
fwait
add
xchg
hlt
repnz
pop
cmpsl
xlat
jmp
dec
sbb
lret
cmp
insb
incl
out
inc
and
inc
fsubl
mov
pop
fs
inc
test
dec
les
dec
outsb
aaa
sbb
cwtl
mov
push
test
add
xchg
cmp
or
pop
test
adc
imul
lods
fdivrl
leave
in
insl
xor
mov
ret
sbb
pop
movb
inc
imul
test
shl
mov
jmp
arpl
mov
loope
lahf
fucom
dec
movsb
or
add
inc
and
test
test
jmp
lcall
mov
add
cltd
mov
fs
inc
in
push
aad
andl
push
jne
rolb
arpl
add
push
fsubs
stc
mov
fdivp
fidivrs
stos
lds
push
movsb
int
ja
repz
inc
test
daa
dec
enter
pop
mov
decl
test
jb
in
out
int3
add
mov
adc
ss
pushf
aam
iret
mov
repz
movsb
testl
pushf
mov
lret
sub
inc
add
outsb
add
inc
adc
mov
shll
enter
xchg
dec
push
fs
push
xchg
mov
push
leave
dec
xlat
dec
push
push
xchg
subb
icebp
sbb
dec
out
push
fwait
jmp
jno
mov
push
lret
idivb
lret
sti
imul
jmp
es
lds
xor
mov
mov
push
jbe
xchg
jns
push
icebp
dec
jbe
mov
lods
inc
sbb
ficoms
pop
mov
in
xor
add
ret
sarl
aas
sahf
ljmp
imul
js
les
seto
pop
push
ret
or
inc
inc
mov
push
pop
push
cmp
mov
sbb
dec
jb
jns
pop
jmp
cmpsb
dec
cmp
fcomp
jns
sbb
mov
dec
mov
mov
pop
jne
nop
pop
jl
and
push
and
mov
mov
enter
add
sbb
xor
adc
icebp
dec
sbb
mov
jle
jne
cmpsl
mov
fimull
or
xor
push
mov
orl
jp
sbb
mul
lds
fildl
outsl
lret
stos
pusha
int
test
cmp
es
mov
adc
iret
jns
dec
sbb
xor
insl
loopne
sub
cmp
fsub
mov
shlb
in
lcall
arpl
pop
mov
adc
leave
sub
push
mov
push
jmp
ret
or
or
fnsave
sbb
mov
sbb
add
mov
and
stos
fisubrs
lret
jmp
lret
popf
jle
aas
rcrb
xchg
cmc
pop
push
into
inc
mov
fmuls
jns
xor
lahf
iret
inc
pop
scas
pusha
test
sub
call
insb
movsl
cmp
pop
lea
dec
mov
hlt
sub
ret
ds
jmp
jge
test
jne
inc
add
push
and
sahf
shl
xchg
mov
inc
pop
lcall
insl
adc
push
sarl
xchg
rclb
fdivr
push
dec
fsts
cmp
xchg
jp
in
pop
dec
push
aad
fwait
data16
enter
mov
jg
add
orl
lcall
decl
adcb
xchg
cmp
mov
and
cmpsl
lock
sub
dec
push
std
bound
cmpsb
xchg
sbb
sbb
jo
jl
pop
push
mov
dec
test
cwtl
lds
xor
mov
outsb
ljmp
ss
and
fwait
shlb
out
cmc
adc
xor
shrb
ret
inc
adc
leave
rol
jmp
mov
scas
push
mov
icebp
push
aad
or
sbb
jo
mov
push
loop
and
pushf
add
es
int3
pop
push
repnz
add
mov
and
popf
sbbl
push
jae
mov
dec
out
xor
imul
jle
xchg
mov
inc
aaa
ret
jp
mov
fucomi
bnd
int3
xor
mov
andl
out
into
inc
cld
mov
sub
fwait
bound
movsb
mov
fiadds
add
sub
cli
jecxz
inc
cmc
lret
ljmp
and
ja
std
cvtpi2ps
shll
or
sbb
and
cmp
ds
fcomps
gs
outsb
cmp
sbb
roll
dec
mov
roll
ljmp
or
jecxz
imull
lahf
dec
test
arpl
push
leave
iret
cmp
mov
in
out
lods
shlb
movsl
popf
fnstcw
mov
pop
cmp
inc
mov
test
jp
jns
rcrl
cmp
mov
aaa
movsl
and
stos
test
lcall
nop
fldl
dec
scas
mov
mov
pop
jp
ret
sub
jno
lds
test
mov
add
fistl
jb
sti
sub
mov
icebp
push
lcall
mov
int3
out
mov
and
clc
pop
push
das
test
ljmp
cwtl
das
call
insb
lock
stc
xlat
push
shlb
lret
mov
shrb
test
or
dec
mov
mov
xor
lock
fwait
scas
inc
push
aad
add
adc
xchg
and
mov
std
dec
add
mov
ss
test
mov
or
out
mov
lds
loopne
add
mov
das
stos
pop
popa
jmp
fcmovnu
mov
repnz
cmp
cmpsl
shrl
mov
push
cmp
test
xchg
shrl
jl
arpl
fcomps
bswap
lods
jne
mov
sub
adc
repnz
sbb
js
ds
xchg
mov
mov
xchg
ljmp
add
clc
dec
cwtl
in
mov
cmp
mov
scas
push
daa
shll
dec
pop
push
jne
dec
jp
movsl
rcrl
pop
ficomps
stos
push
xor
push
sti
sub
repnz
in
push
mov
or
lahf
sub
adc
roll
fs
mov
loopne
sahf
aas
jmp
negl
inc
test
mov
rcll
lds
mov
je
data16
ds
sub
push
cmp
das
mov
hlt
test
mov
lahf
cld
repnz
xlat
lcall
mov
push
inc
and
add
xchg
add
addl
iret
int3
dec
xor
inc
inc
push
mov
fwait
inc
lret
arpl
xchg
inc
fisubrl
xchg
js
loope
sahf
add
shl
sbb
inc
jmp
andb
test
popl
dec
pop
lret
mov
or
adc
xchg
ret
push
cmp
and
movsl
fcmovb
push
out
cmp
addr16
inc
adc
jecxz
inc
cmc
adc
or
xor
inc
std
andl
mov
daa
pop
pop
adc
add
lret
popa
pop
lea
in
mov
push
push
add
iret
sbb
in
sbb
xor
frstor
fldt
insl
xchg
sbbb
icebp
xor
ss
aad
dec
mov
aaa
mov
test
and
int3
stc
js
scas
pop
fisubrl
xor
stc
mov
push
xchg
stos
sub
shrb
adc
dec
mov
bnd
xchg
mov
mov
mov
mov
je
push
rcll
jg
add
xchg
or
clc
jbe
lahf
mov
js
rcrl
xchg
or
or
pop
cli
jg
inc
jge
imul
popf
jmp
xor
mov
mov
push
test
jl
iret
dec
sbb
mov
sbb
ja
out
andl
rclb
lds
nop
jp
add
xor
xchg
push
mov
xor
enter
ret
enter
lret
xor
mov
or
adc
leave
nop
pop
adc
dec
mov
lret
imul
les
sbb
cmp
pop
dec
push
dec
cmpl
push
mov
xchg
jbe
jp
retw
adc
cmc
add
test
sbb
lcall
pop
test
lods
inc
inc
mov
mov
test
bound
adc
loop
out
enter
or
scas
pop
mov
shlb
dec
ficompl
jle
popf
jns
inc
lret
lret
fnstcw
pop
out
xor
xchg
lret
fwait
jge
and
outsb
dec
fldt
dec
pop
aas
orl
sbb
xor
or
dec
push
or
iret
or
enter
mov
in
aaa
push
push
xor
jge
filds
popf
je
mov
mov
adc
or
mov
inc
jmp
aaa
shrl
pusha
cmp
sti
jp
inc
mov
xor
fstpl
or
xchg
add
mov
stos
push
and
mov
out
fisttps
out
and
push
inc
testb
sbb
sbb
in
adc
movsl
xor
ljmp
fldenv
mov
daa
out
nop
out
push
or
cmp
std
cli
jnp
inc
mov
cwtl
add
or
push
les
ror
addr16
sti
adc
or
mov
aad
dec
cmpsb
ret
testb
fucomi
hlt
std
mov
sti
and
sbb
jecxz
mov
mov
aad
add
mov
sti
push
test
jmp
xchg
adc
test
jmp
ds
cmc
jnp
sahf
rol
or
jo
and
pushf
mov
pop
ret
xchg
mov
ss
aad
test
ljmp
stos
inc
mov
les
push
or
int
mov
inc
imul
add
xchg
sbb
adc
or
and
add
jp
add
sbb
and
mov
xor
sub
pop
out
js
in
movsb
lahf
mov
sub
xchg
add
inc
out
std
sub
xchg
xchg
pop
enterw
xor
nop
dec
and
pop
inc
dec
add
sbb
xor
into
pop
adc
push
cmpsb
adc
xlat
push
int3
push
sub
dec
push
push
pop
repz
ds
lods
imul
jmp
mov
adc
add
mov
dec
or
out
mov
clc
ds
mov
adc
test
shrb
mov
pop
xor
inc
sub
sbbb
insl
pushf
ret
sbb
add
mov
stos
mov
jnp
adc
aaa
dec
rolb
pop
pop
les
jb
mov
mov
scas
fcoms
gs
cwtl
stos
jns
scas
xchg
fisttpl
loope
stos
inc
xchg
fsts
test
add
sbb
repz
leave
loop
and
cmp
mov
inc
pushl
push
daa
xchg
int
dec
mov
pop
xchg
imul
cmpsb
sbb
mov
jne
xchg
xchg
xchg
cltd
enter
push
add
add
andb
js
sbb
sahf
ret
dec
mov
ret
pusha
mov
mov
xchg
lea
cmp
test
sti
jb
in
mov
sbb
or
sbb
dec
stos
sbb
loop
pushf
scas
push
mov
ss
mov
mov
push
mov
cmp
sbb
sub
mov
neg
into
ss
imul
cmp
pop
adc
jl
sbb
frstor
pop
jnp
ficoml
adc
cmp
cmp
leave
dec
mov
mov
push
fwait
leave
loop
add
sarl
cli
repz
lods
mov
or
push
in
ret
aaa
xchg
int
pushl
stos
sbb
dec
pushf
mov
iret
rorb
jmp
jl
stos
ret
xor
cmp
incl
lahf
lds
xchg
test
rorl
lods
xor
xchg
out
push
push
fstpl
jp
sbb
sbbl
jmp
lret
fwait
loopne
icebp
aaa
test
jge
decb
fists
les
xchg
cmc
sub
xorl
aam
lock
arpl
push
mov
stc
sarl
fldenv
fwait
mov
stc
or
jg
sub
sbbl
mov
in
enter
mov
pop
xchg
and
inc
inc
pop
sar
int
jne
inc
in
repz
test
aam
fidivl
sub
fiaddl
bound
cmp
jl
adc
and
push
test
dec
dec
mov
add
rcll
dec
fdivrl
nop
fistps
test
pop
lods
pop
push
jle
aaa
cld
add
mov
iret
xor
push
jg
inc
lods
imul
push
adc
push
addr16
aam
cmp
and
mov
call
sbb
xor
ret
inc
mov
mov
mov
aam
mov
lds
out
mov
stos
les
xlat
dec
xchg
outsl
loop
pop
sarl
mov
loopne
lods
and
shlb
xchg
mov
add
mov
les
push
mov
inc
out
mov
int3
fldenv
xor
int
fsubrl
fs
xchg
jns
into
xor
xchg
xchg
mov
in
cmp
mov
xor
pop
mov
xchg
cwtl
test
xchg
sbb
sarb
sbb
mov
mov
xlat
mov
scas
adc
or
in
adc
xchg
dec
into
mov
xor
push
xchg
jmp
and
dec
ja
xor
mov
add
mov
daa
cmp
out
repz
sti
fimuls
add
mov
push
cmp
pushf
sbb
xor
inc
add
xor
sbb
ret
inc
hlt
adc
clc
sub
xor
inc
push
shrl
sbb
rcr
into
push
add
imul
cmp
sbb
mov
sbb
dec
das
xchg
stos
mov
stos
xchg
sbb
push
lret
jge
rolb
test
stos
data16
scas
mov
scas
sub
leave
insl
xor
pop
mov
lods
and
leave
cwtl
add
cmp
xor
mov
push
jmp
imul
jp
lret
lcall
test
mov
in
and
imul
insb
hlt
test
push
hlt
mov
adc
aaa
push
dec
mov
mov
popf
push
push
xchg
sbb
xchg
ja
lret
push
pop
jno
lock
lahf
pop
bound
hlt
jmp
inc
movsl
xchg
sub
pushf
ret
pop
sbb
add
mov
repnz
push
fdiv
mov
add
push
in
mov
jmp
jae
sub
mov
add
sub
inc
sbb
add
fimull
test
les
gs
fstl
mov
aad
mov
adc
jp
test
sbb
cmp
xlat
jmp
sbb
in
cmp
mov
and
rcl
xor
add
mov
sbb
adcl
mov
jmp
std
mov
sti
and
test
push
or
mov
xchg
cmp
or
pop
lea
ss
rcll
subl
ffreep
ficomps
jae
mov
cltd
jo
fcomps
je
cmp
ss
inc
adc
mov
and
push
nop
mov
xchg
aaa
pop
mov
fildll
stos
xor
push
mov
xchg
push
nop
mov
pop
mov
xor
xchg
or
xchg
or
aaa
lret
jecxz
mov
cmp
fstl
mov
cmp
std
cli
jnp
inc
mov
add
xchg
push
cmp
pop
mov
and
xchg
jg
mov
cmp
shlb
aas
test
stos
cmp
jb
imul
sti
and
test
push
sub
mov
xchg
cmp
xor
sbb
bound
pop
mov
mov
test
sub
out
mov
mov
mov
adc
add
adc
mov
cmpb
pop
ret
insb
test
push
mov
mov
push
xor
add
cmp
popf
lret
sbb
inc
and
jnp
scas
xchg
stos
jge
fimull
push
jne
inc
jl
fistpl
mov
xchg
mov
add
add
push
fucomp
loope
fistpll
lret
lods
int
mov
mov
sbb
arpl
rorb
mov
xchg
sub
mov
or
push
lods
rcrb
movsb
inc
inc
cltd
push
jne
sbb
pop
jg
cltd
fucom
jb
sbb
shlb
dec
loope
inc
mov
push
jp
sub
cmp
and
mov
call
gs
or
addb
cmp
pop
add
push
subl
cmp
mov
test
subb
stos
push
lods
xchg
sub
adc
loopne
shll
inc
lock
xchg
mov
fucomp
xor
mov
mov
js
fisttpll
xchg
shll
mov
scas
xchg
stos
lds
push
dec
mov
sahf
fcoml
fnsave
lods
mov
shl
lret
and
test
jge
iret
and
fwait
leave
loop
inc
loop
das
cmpsl
xlat
popf
or
sbb
mov
out
gs
mov
fcom
xchg
cmp
loopne
pop
sti
fucomip
popa
jge
outsl
bswap
scas
int3
testb
mov
loop
adc
mov
test
xchg
fdivrs
mov
sbb
and
or
test
sub
sbb
aam
sti
sub
sbb
js
add
pop
mov
ret
mov
pop
dec
mov
pop
cli
xchg
les
and
insl
mov
jmp
insl
sahf
mov
jmp
cwtl
jge
push
dec
lahf
cmp
push
test
pushf
cmp
scas
and
dec
mov
add
or
xor
jb
loopne
sbb
popa
and
mov
xor
mov
js
in
movsb
lahf
mov
sub
xchg
sbb
fimuls
add
sub
push
mov
fwait
xor
enter
jmp
enter
cmp
mov
in
in
out
cmp
push
adc
and
sbb
adc
adc
xor
mov
aad
dec
mov
nop
mov
fucomi
xchg
mov
mov
test
xor
mov
lret
jecxz
push
cwtl
mov
fisubl
mov
mov
and
cmpsl
mov
nop
pop
mov
imul
sub
pop
stos
push
outsb
jno
mov
sbb
cwtl
xlat
mov
push
dec
pop
jp
pushf
dec
pop
jno
or
jae
or
das
cwtl
inc
scas
xchg
stos
push
xchg
or
cld
jp
add
cmp
mov
sbb
jge
or
or
push
jl
data16
sarb
jle
push
mov
inc
icebp
and
jb
adc
adc
pop
stos
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
movsb
fstps
call
fwait
mov
stos
xchg
out
mov
inc
inc
xchg
jge
sbb
or
and
fisubrs
push
dec
mov
pop
push
mov
sarb
or
xor
cmp
add
add
pop
pop
iret
orl
inc
sbb
ret
mov
mov
sub
cwtl
lret
movsl
cltd
icebp
mov
cmpsb
xchg
xlat
cwtl
sub
cmp
sub
cmc
sbb
repz
loopne
test
daa
or
loopne
pushf
xor
dec
jecxz
xchg
stos
lds
xchg
mov
mov
jno
shrb
cltd
fstl
in
int3
scas
jg
sti
cmc
mov
enter
inc
shlb
notl
repz
sbb
add
mov
xchg
sub
mov
xor
pop
lods
xlat
insb
jbe
push
cmp
in
push
ret
fld1
jb
pop
hlt
or
and
or
loopne
pop
push
or
cmp
lds
lods
mov
mov
arpl
mov
mov
cli
mov
sbb
stc
clc
jp
add
mov
sub
sbb
lds
cs
mov
sbb
pop
ficoml
imul
in
sbb
cld
mov
testl
sub
call
pop
jb
mov
sbb
enter
add
nop
stos
pop
xchg
scas
xchg
ficoml
outsb
mov
xor
movsl
xchg
mov
mov
and
loope
movsb
fcoml
jp
mov
and
lret
popf
fists
cmp
negb
pop
and
dec
std
arpl
dec
mov
xchg
pushf
xchg
inc
cwtl
dec
and
jecxz
cli
xor
or
cmp
inc
and
xabort
mov
cmovl
out
xor
inc
adc
pop
sub
xor
sbb
out
push
adc
cmpb
iret
mov
jmp
ja
mov
das
repnz
sub
add
xor
xorb
test
rclb
xchg
sub
pushf
ss
dec
xchg
lret
mov
and
jg
scas
repnz
stos
xor
add
fildll
stc
mov
dec
pop
inc
enter
add
pop
sub
cmp
sbb
or
xchg
xchg
fwait
loope
push
sub
mov
and
jae
ret
leave
ficomps
jnp
inc
mov
add
mov
mov
sarl
and
cli
cmc
dec
and
mov
mov
pop
mov
cmp
outsl
jae
xchg
xchg
inc
cltd
enter
mov
sbb
loop
jg
dec
cwtl
test
imul
popa
push
sub
mov
or
fsubrs
mov
insl
pop
test
aas
pop
sbbb
mov
dec
aaa
and
or
xlat
rcl
adc
cmp
cwtl
push
divb
outsl
adc
and
aaa
stos
test
ljmp
jae
lret
adc
repz
add
insb
cmp
dec
out
mov
mov
jge
push
push
jge
xor
and
jl
mov
pop
mov
lods
inc
pop
jg
sahf
inc
pusha
scas
nop
xchg
idivb
mov
popf
stc
std
jl,pt
aas
rolb
or
cld
jle
into
bound
add
dec
aas
stc
xor
xor
mov
sbb
adc
js
ret
addr16
mov
in
fwait
pop
cltd
dec
cwtl
scas
fs
xchg
popf
icebp
xor
loopne
mov
dec
lea
aas
push
xchg
dec
pop
mov
jb
mov
jne
add
repnz
pop
add
and
sti
mov
clc
stos
cmp
add
jbe
pop
lods
inc
or
or
ret
push
fwait
push
sbb
movsl
mov
rcrb
ret
lods
iret
sbb
inc
test
dec
sub
push
pushf
cli
pop
and
adc
adc
bound
fcomps
bound
mov
mov
and
mov
xchg
gs
pop
in
incb
movsb
push
fnstcw
push
mov
ficomps
fsts
or
add
repz
in
jecxz
arpl
inc
out
std
push
dec
in
ds
xchg
jecxz
pushf
test
jp
adc
pop
js
pop
in
and
cmp
lea
sbb
mov
mov
push
adc
pop
jb
aas
adc
mov
inc
xchg
bound
jns
mov
cltd
or
out
ficompl
mov
je
sub
mov
js
add
iret
sbb
fs
cwtl
out
sbb
xor
sbb
outsl
mov
pop
cli
orl
and
mov
jb
push
dec
mov
mov
sbb
jnp
test
xchg
mov
stc
dec
sbb
push
outsb
pop
jp
jbe
fbstp
insl
inc
clc
hlt
call
xchg
xchg
xchg
ficoml
mov
push
xchg
cmp
fwait
lods
xchg
xchg
xor
jge
pop
xor
cwtl
test
lcall
mov
push
fadds
mov
inc
cmc
sahf
xlat
rcr
xor
addr16
test
sbbl
ret
mov
push
fidivrl
int3
pusha
mov
and
ret
fld1
jb
pop
mov
vmread
dec
cmpb
push
sbb
and
inc
cmc
enter
mov
stos
xchg
ror
int3
sbb
test
aaa
fsubrl
in
cmp
lods
neg
sti
loopne
cmpsl
add
ret
std
xchg
push
cmp
pop
xor
dec
mov
pop
loop
gs
push
mov
icebp
cmpsl
ret
popf
sti
jmp
les
shrl
mov
mov
jns
mov
icebp
jmp
lock
xchg
test
xor
and
fistl
sub
sub
xchg
dec
arpl
mov
sub
or
mov
sarb
aas
cmpsl
xlat
in
andb
std
decl
sub
mov
xchg
int
loop
mov
or
je
jp
fildl
jp
jp
fbld
or
std
mov
std
xor
imul
sbb
movsl
dec
add
orl
lret
sbb
mov
dec
ret
xorl
xor
call
push
popf
mov
xchg
pop
adc
aas
fdivl
mov
shr
ja
shll
xor
mov
xchg
int3
adc
xchg
pushf
arpl
push
xor
jmp
loopne
mov
icebp
stos
mov
mov
pushf
dec
data16
dec
in
outsl
mov
adc
jge
pop
jne
andb
stos
inc
lods
pop
pop
push
sbbb
xorb
jae
inc
fistpll
jmp
iret
flds
bound
mov
sbb
inc
fsub
xor
out
mov
cs
xchg
in
dec
in
mov
xchg
jmp
lods
mov
out
fcomps
pop
lea
and
popf
iret
pusha
push
or
subl
xchg
dec
inc
jne
cltd
fs
sub
cmp
mov
arpl
fistl
lds
sahf
cmp
add
addr16
sub
jge
add
out
clc
add
sti
add
gs
insl
mov
sbb
lret
movsl
mov
push
fs
push
cmp
sub
cmc
sbb
repz
loopne
test
aam
sub
cwtl
test
xor
cltd
add
fisubrl
shrl
jne
gs
sub
mov
xor
pusha
movsl
ret
into
xor
fucomi
bnd
jno
fs
cmp
cs
jge
mov
mov
into
jns
dec
ret
or
test
aam
fldl
mov
out
xchg
sub
fidivs
mov
into
sbb
pop
xor
xor
dec
inc
mov
pop
bound
push
pop
cmpsb
hlt
push
mov
cltd
stc
call
int3
lcall
int3
xchg
cli
jo
pop
jmp
sahf
mov
js
clc
sti
mov
in
add
es
mov
mov
add
mov
aas
cli
sbb
mov
test
push
xor
push
sub
xor
add
xor
subb
in
jmp
cmp
lods
mov
mov
and
mov
or
fs
jle
fiaddl
rdpmc
cltd
lods
jle
jnp
lahf
inc
lahf
add
cld
and
popf
scas
stc
xor
jmp
lds
imul
jle
inc
sbb
add
lahf
push
mov
inc
push
fidivrs
sub
sahf
and
pusha
jo
fwait
pop
adc
mov
cltd
repz
insb
aaa
and
mov
jb
jl
adc
mov
xchg
dec
push
ljmp
fildll
fsubs
leave
mov
pop
mov
and
or
add
iret
xchg
cmp
shll
inc
gs
in
ja
and
cld
jg
inc
add
out
mov
stos
pop
ficoml
xor
imul
push
out
int3
pop
andb
repz
pushf
dec
pop
jae
inc
sbb
mov
gs
push
mov
imul
sub
hlt
lods
mov
mov
sbb
jecxz
mov
mov
pop
into
xor
and
or
push
and
sbb
mov
xlat
in
jecxz
mov
sub
js
jns
lcall
addr16
clc
inc
xchg
mov
daa
popf
mov
imul
arpl
loope
jns
cwtl
dec
inc
xchg
adc
addl
movsl
inc
mov
jl
dec
cltd
lret
cli
mov
dec
push
gs
add
cwtl
dec
and
mov
mov
test
mov
xchg
adc
cmp
mov
sub
pushf
ss
insb
test
lret
mov
and
pop
nop
and
pop
stos
adc
cli
mov
xor
pop
in
mov
lret
fucomp
jae
jns
mov
popf
lret
mov
sbb
ret
or
dec
push
sub
jns
aad
push
mov
mov
cmc
xchg
call
xchg
dec
data16
dec
mov
pusha
mov
in
mov
mov
xchg
fistpl
rcll
dec
shlb
in
daa
or
fdivrl
fwait
cmp
xchg
xchg
push
fdivrs
xor
lea
sti
mov
mov
dec
cwtl
enter
mov
mov
mov
mov
sbb
mov
aam
in
pushl
inc
xor
imul
inc
mov
cs
mov
imul
lock
inc
sbb
inc
iret
and
jl
xchg
xchg
in
push
divb
jno
pop
xor
push
stos
xchg
or
mov
xor
mov
mov
xchg
xchg
push
xchg
pop
call
xor
mov
or
cmp
imul
mov
cli
daa
cmp
sbb
adc
jmp
add
xlat
pushf
mov
xchg
cmp
sbb
jle
inc
sbb
add
mov
dec
cmpl
mov
push
mov
movsb
cli
jae
push
insl
lret
insl
or
mov
imul
out
adc
push
ss
adc
and
adc
pop
inc
sub
lahf
cmp
or
leave
popf
push
xor
mov
jns
mov
imul
lret
jecxz
add
sbb
cmp
mov
sub
pushf
ss
insl
test
lret
mov
and
pop
nop
and
pop
stos
adc
cli
mov
xor
pop
in
mov
lret
fucomp
jae
jns
mov
popf
lret
mov
sbb
ret
or
dec
push
sub
jns
aad
push
mov
mov
cmc
xchg
call
xchg
dec
data16
dec
mov
and
fcoms
or
loope
ss
mov
pop
sti
popa
clc
push
push
pop
jae
sub
inc
test
iret
fdivr
xor
or
dec
jo
cld
inc
sbb
or
fsubr
or
int3
addr16
int3
inc
ficomps
pop
mov
adc
hlt
jl
out
mov
int
push
movsb
popf
lahf
jg
add
test
push
flds
inc
pop
imul
inc
mov
sub
mov
cmc
mov
fists
add
sahf
sti
jnp
cmpsb
sbbb
mov
xor
nop
jl
addr16
iret
mov
jg
adc
stos
test
lahf
push
lods
push
push
cld
stos
jb
mov
sub
mov
xor
mov
mov
xchg
xchg
push
xchg
lcall
inc
mov
or
cmp
imul
mov
movsl
pushf
sahf
stc
push
sub
cmc
ja
cmp
dec
sbb
bnd
enter
or
jl
loope
or
or
sbbb
idiv
decl
push
and
movhps
pop
cmp
insb
jbe
xor
lahf
pop
iret
push
imul
push
leave
mov
orb
dec
inc
ds
sub
xor
out
pop
ret
xorb
mov
call
pop
shlb
imul
lahf
in
clc
add
das
mov
push
adc
xor
aad
pushf
addl
push
cwtl
sbb
test
jne
dec
xchg
pop
push
lods
push
cltd
test
sbbl
mov
cmc
fisttpl
dec
bound
fcomps
mov
jge
push
insl
sub
movsl
xor
or
add
push
mov
adc
inc
lcall
jge
pop
xor
icebp
sbb
mov
ss
rolb
sbb
push
cmp
ds
pop
mov
pushf
xchg
inc
cwtl
dec
and
mov
rcrb
adc
push
fisubl
mov
jl
fwait
lea
mov
repz
cmp
pop
or
push
sub
mov
fsubr
mov
test
andl
mov
sbb
pop
loope
cmpsl
adc
adc
mov
or
mov
xchg
add
dec
les
inc
sub
insl
mov
pop
fisubrl
push
dec
stc
pop
movsb
sub
jns
mov
gs
scas
test
fs
fistpll
dec
sbb
lahf
pushl
pop
pop
sbb
subl
aas
fidivrl
mov
stos
ljmp
jns
fstps
xor
jge,pt
inc
xchg
mov
inc
xchg
and
push
or
inc
add
mov
pop
ds
inc
test
dec
shll
out
push
mov
push
pop
mov
pop
pop
movsl
pop
cmc
mov
lds
inc
xor
dec
inc
ret
jl
sub
mov
xchg
lods
cwtl
loop
mov
push
in
inc
xor
mov
or
insl
xor
mov
pop
dec
lods
in
call
movsb
jbe
pop
add
or
cld
inc
insl
cwtl
dec
and
dec
mov
jo
outsb
sub
les
push
cli
sub
mov
pushf
jae
sub
dec
popf
in
in
inc
mov
or
cmp
adc
cltd
xor
adc
dec
mov
cmpsl
dec
push
xor
ret
mov
mov
mov
xor
push
addl
xchg
push
mov
or
fbstp
out
push
add
mov
jb
sub
ret
sti
xor
cltd
or
cltd
shr
int3
out
mov
adc
adc
cmp
dec
inc
xor
mov
ret
loopne
dec
sahf
ja
adc
movsb
xchg
adc
arpl
mov
imul
cltd
push
add
sbb
inc
sbb
fiadds
movsb
imul
mov
movsb
out
sbb
push
inc
cltd
test
inc
sbb
push
fs
add
test
or
dec
sbb
lock
mov
iret
inc
repz
cld
repz
ret
cmp
cwtl
cmpl
ret
add
and
add
or
rorl
or
dec
fs
ret
pop
pushf
lret
gs
mov
xchg
pusha
or
repz
leave
loop
xchg
rcrb
in
cmp
mov
mov
pushf
xchg
inc
cwtl
dec
and
mov
fcomp
cmpsb
enter
scas
lcall
cmpsl
ret
aam
fdivs
insl
mov
cmp
inc
or
inc
cmpsb
adc
out
mov
int
fsqrt
xchg
jmp
adc
fnstenv
or
adc
add
jne
jae
jb
mov
cli
iret
jp
sub
imul
sbb
push
mov
test
jl
pop
dec
ss
imul
push
push
lods
xchg
adc
and
repnz
lret
jns
popf
jae
lret
push
mov
push
pop
lods
jno
test
pop
or
jae
test
push
mov
or
dec
mov
cwtl
mov
repnz
jge
pop
xor
sbb
push
out
repz
cmpsl
ds
xchg
int3
inc
sub
sub
js
jns
sbb
cmp
push
mov
or
mov
enter
int3
in
inc
and
or
mov
mov
sti
and
or
es
ret
add
into
adc
mov
xchg
cmp
orb
aaa
fidivrl
gs
inc
xor
inc
pop
and
je
and
add
mov
inc
mov
add
xchg
jns
cwtl
push
mov
arpl
xor
adc
xor
fisttps
dec
mov
mov
movsb
bound
test
mov
and
add
daa
dec
sbb
mov
cmpsb
xor
jb
popf
or
cli
mov
in
and
xchg
loope
lds
mov
leave
jmp
xchg
mov
icebp
sbbb
add
iret
adc
xchg
int
or
jecxz
mov
xor
or
push
fidivrl
jmp
into
call
sbb
dec
mov
aaa
sbb
sahf
and
nop
test
push
lret
cltd
jns
and
or
xor
sub
ret
arpl
sub
jno
mov
lahf
frstor
dec
inc
add
aad
or
dec
addr16
cmp
test
dec
pushf
dec
xor
jecxz
dec
xor
pop
clc
sub
aaa
cmp
jne
jmp
repz
cmp
cmpsl
xchg
test
or
sbb
insl
cwtl
and
cmp
mov
mov
cmp
lods
lds
jge
pop
xor
cwtl
in
bnd
int3
scas
fucomi
js
inc
xchg
and
fwait
popf
dec
repz
mov
jo
pop
test
and
mov
sti
sub
mov
add
imul
jbe
inc
sbb
xor
es
jb
fwait
lea
xor
shl
mov
and
cwtl
dec
push
cmp
sbb
imul
rclb
lcall
aam
cmc
pop
adc
push
sahf
bound
orb
aas
call
lock
inc
sbb
outsb
add
lahf
inc
cwtl
or
jp
imul
sub
mov
push
aad
je
or
dec
cli
lods
jge
xchg
dec
cmp
ljmp
push
pushf
mov
xchg
test
mov
outsb
push
jmp
das
push
jge
imulb
pop
xor
mov
jle
mov
adc
ret
scas
cs
xchg
adc
add
xor
mov
inc
mov
dec
sti
jecxz
dec
out
idiv
mov
mov
int
dec
loopne
scas
addr16
test
xor
cmp
insb
jbe
sbb
jae
fildll
aam
push
fwait
xchg
mov
pushf
push
mov
jmp
pushf
dec
inc
pop
inc
pop
repnz
inc
fs
fsubrs
aam
mov
movsl
add
xor
rol
lods
mov
or
call
orb
fsubrs
gs
sbb
aaa
add
jbe
pop
adcl
cli
cmpsl
mov
repnz
mov
repnz
stos
mov
filds
pop
inc
fcoml
pop
and
inc
movsl
jae
pop
int3
mov
and
push
aas
shll
adc
cltd
in
push
movsl
mov
cld
jp
add
pop
lods
shrb
enter
or
lahf
inc
jg
lds
or
push
fwait
leave
cmc
std
xchg
cmp
aas
cmpsl
mov
mov
lock
mov
xor
dec
sbb
and
push
test
js
fisubl
and
cmpsb
pop
call
or
mov
fs
hlt
js
mov
jb
cmp
jp
mov
rcrb
gs
add
mov
gs
lea
loopne
mov
xchg
jnp
pop
sbb
jecxz
mov
sbb
mov
nop
ret
mov
lcall
outsb
out
movsl
decl
jg
js
sub
test
test
pop
in
mov
ljmp
cld
xor
sbb
jae
fdivl
jg
push
jne
test
push
sbb
jae
mov
aaa
or
xchg
dec
sti
add
xor
dec
stc
js
popf
movsb
push
jmp
mov
pop
mov
in
inc
dec
or
add
lret
pop
push
mov
notb
push
fdivs
dec
jecxz
push
sub
xor
insl
cmovae
fidivs
xor
push
and
mov
cwtl
mov
mov
jne
dec
bound
mov
cmc
mov
mov
pop
dec
scas
or
rorl
jmp
scas
ret
test
enter
popf
mov
cmp
jp
add
adc
jecxz
adc
lret
lds
inc
cmp
sub
int
enter
push
lods
mov
test
pop
push
adc
push
mov
in
cmc
fsts
or
push
or
cmp
roll
mov
pop
rol
sbb
ja
mov
jecxz
jcxz
fistps
test
mov
jecxz
jno
inc
stc
sbbl
jecxz
int
sbb
or
jp
adc
sub
inc
lea
mov
mov
xor
fsts
iret
shl
enter
insb
aaa
xchg
xor
dec
push
dec
nop
gs
popf
mov
inc
imul
add
mov
stos
sbb
inc
into
pop
jp
or
ds
iret
pop
jp
sbb
add
stc
aad
ret
add
jmp
cld
ljmp
int3
jo
in
dec
push
insb
push
insb
cmp
push
dec
mov
xor
mov
sar
dec
pop
insb
mov
push
xchg
lds
or
cmp
push
std
adc
in
leave
fs
pop
fildl
push
xor
inc
fs
int3
xacquire
scas
cmpsl
mov
shll
in
cmp
mov
mov
pushf
xchg
inc
cwtl
dec
and
mov
ret
adc
push
fisubl
in
rol
fld1
jb
pop
xchg
push
jne
out
sub
test
sub
xchg
jmp
repnz
popf
mov
jge
jp
addl
loopne
cmp
es
fwait
pop
jb
mov
decl
sti
inc
pusha
push
adc
mov
test
aad
stos
jecxz
cltd
divb
sbb
adc
push
jno
lods
push
sub
push
or
jne
sub
cmc
stc
inc
fldt
jecxz
pop
insb
mov
pop
push
outsb
push
sub
cli
addb
imul
adc
dec
jmp
mov
add
inc
xchg
cltd
sbb
scas
loope
scas
mov
inc
stc
cmp
scas
xlat
add
mov
dec
les
xchg
jns
cli
sbbl
jmp
inc
sbb
movsb
fstps
call
fwait
mov
stos
xchg
out
mov
inc
inc
xchg
js
sbb
or
and
fisubrs
pop
dec
mov
popa
mov
popf
cltd
dec
popf
or
shrl
push
xchg
dec
pop
mov
cmp
in
xchg
pop
xchg
cmp
pop
mov
repnz
mov
hlt
sub
cwtl
lret
movsl
cltd
icebp
mov
movsb
lds
nop
clc
xor
shll
inc
lock
xchg
mov
pop
in
mov
mov
stos
adc
sbb
ret
add
sbb
xor
fisubrl
lahf
or
mov
fldcw
add
shrb
sbb
loop
mov
in
aad
xchg
xchg
jb
mov
or
cmpsl
xlat
in
testl
add
dec
shlb
adc
aam
inc
fildll
cmp
mov
jno
inc
and
jecxz
cmp
mov
sti
and
sub
push
or
xlat
pop
gs
jb
mov
mov
imul
mov
arpl
mov
jne
adc
push
inc
inc
mov
sbb
clc
sti
mov
loope
xchg
lock
jbe
in
ja
pop
rcrl
cltd
je
lds
leave
fsubrl
rorl
sbb
dec
mov
xor
shll
inc
lock
xchg
mov
pop
in
mov
mov
stos
adc
sbb
popl
scas
test
sbb
or
cmp
xchg
xor
lock
sub
pop
mov
xchg
dec
push
mov
aas
test
adc
idivb
cmp
sbb
sub
add
stos
mov
mov
sub
xchg
and
ljmp
stc
sar
cwtl
inc
insl
std
popf
mov
mov
aas
call
inc
cltd
enter
lret
jle
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
dec
aas
pop
cmpb
mov
add
push
and
mov
mov
mov
fdivl
fs
dec
mov
jg
push
push
mov
push
pop
mov
push
push
test
mov
fildl
scas
stos
dec
jo
pushf
ja
lods
push
cmp
stos
fistps
or
adc
pop
ja
nop
test
add
sbb
cwtl
inc
sbb
mov
js
in
movsb
lahf
mov
sub
xchg
sbb
jb
rcrl
fwait
xor
mov
and
mov
xchg
mov
pop
cmp
fsubl
fs
pop
mov
rcrl
int3
pop
sub
pusha
or
xchg
sub
sub
in
dec
ret
xorl
mov
mov
loopne
pop
daa
mov
or
cmp
imul
mov
lock
xchg
iret
xchg
sub
lods
xchg
sub
adc
inc
in
lods
dec
sbb
fildll
mov
testb
mov
insl
aaa
bound
xchg
push
imul
jge
dec
and
stos
cmp
push
xchg
shr
jbe
lods
clc
add
push
cmp
jge
mov
out
js
adc
pop
cmpsl
rorl
jle
mov
dec
mov
sbb
aam
incl
test
ret
push
stos
cli
mov
push
pop
scas
push
test
cltd
inc
inc
mov
xchg
and
popa
pop
add
mov
and
adc
mov
mov
pop
out
fmul
outsb
mov
sub
mov
stos
xchg
mov
mov
test
clc
aas
fisubs
mov
mov
adc
adc
cmp
inc
add
sub
jle
mov
cmp
mov
stos
adcl
cmp
pop
xorl
in
xor
cmp
jbe
movsl
mov
inc
nop
repz
jge
imul
cmpsl
into
jecxz
mov
cmp
lods
clc
jae
leave
pushf
shlb
xchg
loop
jg
fistps
jno
ljmp
sbb
mov
fwait
push
dec
mov
push
mov
inc
push
mov
ret
adc
push
fisubl
in
rol
fld1
jb
pop
cwtl
pop
mov
inc
mov
sbb
dec
mov
hlt
jl
sub
mov
and
mov
pop
pop
shl
mov
sub
or
int
mov
and
jns
jnp
or
pusha
xor
aaa
nop
and
je
cmp
pop
mov
inc
cmp
xor
dec
xor
xlat
pop
sbb
push
push
enter
jne
in
movsl
mov
sbb
ljmp
cmp
in
test
or
xchg
dec
addr16
stos
in
pushf
testl
xchg
ficompl
movsl
and
lods
push
sub
fidivs
adc
sub
fucomi
and
stos
inc
cwtl
pop
mov
mov
cwtl
xchg
add
mov
rcrb
mov
jle
out
push
push
lods
xlat
out
movsb
inc
sbb
stos
adc
pop
mov
sub
shlb
and
mov
aam
and
mov
adc
xchg
cmp
xor
sbb
outsb
mov
pop
mov
mov
test
iret
fucomip
mov
cmp
mov
mov
mov
adc
add
stos
arpl
sbb
sbb
pop
adcl
mov
outsl
adc
mov
sub
and
mov
mov
mov
stc
xchg
aas
xor
xor
movsl
xor
mov
jae
add
idivb
scas
movsb
aas
adc
jb
movsb
sub
stos
jecxz
jg
mov
sbb
cmp
push
cmp
sub
or
or
mov
std
lcall
das
arpl
dec
mov
lea
pushf
xchg
inc
cwtl
dec
and
mov
fcomp
cmpsb
enter
scas
lcall
cmpsl
ret
xchg
cmp
in
jne
dec
inc
xor
mov
push
je
or
xchg
idivl
and
dec
inc
mov
jle
pop
ja
sub
pop
mov
adc
mov
cmp
lret
filds
mov
sbb
gs
dec
aaa
mov
fwait
bound
sbb
adc
lret
inc
out
fnstcw
and
movsl
mov
cli
lock
and
mov
les
loope
adc
stc
sbb
sbb
std
ljmp
sti
stc
cli
in
test
cmp
and
add
or
fistps
pop
xor
mov
repz
lods
pop
pushf
imul
mov
shll
and
js
pop
popf
aaa
or
stc
ret
mov
hlt
jl
pop
mov
setl
adc
or
fistl
mov
popf
jmp
jae
mov
out
mov
cmp
pop
gs
mov
js
enter
stos
mov
sub
cltd
add
sbb
outsl
mov
das
and
addr16
mov
shr
repz
inc
popf
insl
pop
or
sahf
ds
clc
mov
pop
sub
mov
mov
jbe
mov
leave
cmpl
popa
cmpsl
ret
mov
sbb
xor
lret
add
sub
and
mov
add
arpl
movsl
pusha
inc
mov
jb
mov
pop
mov
sbb
stos
push
shrl
dec
movsb
aad
xor
xor
cwtl
adc
mov
leave
loop
inc
mov
push
fadds
mov
inc
cmc
sahf
xlat
rcr
xor
addr16
adc
lahf
or
in
jbe
sbb
out
lods
cmp
pop
popa
mov
cmpsl
fstpl
je
lcall
mov
adc
cmp
push
or
popa
mov
pop
testb
adc
and
mov
imul
add
inc
xor
push
sbb
mov
sarb
jecxz
adc
mov
sbbb
push
cwtl
addr16
push
pushf
cmpb
adc
in
jecxz
mov
dec
sbb
xchg
mov
pop
in
mov
mov
stos
adc
sbb
popl
scas
test
sbb
or
cmp
xchg
xor
lock
sub
pop
mov
xchg
dec
push
mov
aas
test
adc
idivb
cmp
sbb
sub
add
stos
mov
mov
sub
xchg
and
push
dec
xor
sar
cwtl
inc
insl
std
popf
mov
mov
aas
call
inc
cltd
enter
lret
jle
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
dec
aas
pop
cmpb
mov
add
push
and
mov
mov
mov
fdivl
fs
dec
mov
jg
push
push
mov
push
pop
mov
push
push
test
mov
fildl
scas
stos
dec
xor
pushf
ja
lods
push
cmp
stos
bound
or
adc
pop
ja
nop
test
add
sti
lock
or
xchg
insb
mov
test
add
fwait
cmc
std
popf
xchg
call
pop
sbb
add
mov
adc
xchg
adc
xor
clc
aam
fsubl
pop
lcall
jge
ja
sti
repz
jno
fwait
push
adc
jle
dec
pop
mov
fwait
dec
and
mov
dec
mov
cltd
cmp
and
out
mov
xchg
jge
jl
hlt
fcmovnb
xchg
jne
pop
mov
in
negl
dec
and
movl
ret
sbb
insl
fwait
ret
dec
test
shll
sub
push
ljmp
loop
inc
mov
cmp
sti
mov
mov
hlt
frstor
ret
add
ja
scas
lea
push
fbld
repnz
lcall
pusha
movsb
add
push
mov
pop
mov
and
popf
scas
bound
push
mov
adc
add
add
inc
dec
clc
cmpsb
push
sti
and
rcr
rorl
mulb
inc
push
inc
ret
add
adc
sub
sbb
dec
js
lds
imul
sti
and
xchg
enter
ret
add
sbb
push
dec
mov
dec
out
dec
mov
push
daa
mov
int
lahf
movsl
imul
mov
ds
ja
add
scas
push
ss
or
mov
add
dec
sbb
mov
xchg
fstpl
mov
jl
outsl
sub
adc
sbb
push
lds
lods
dec
mov
push
dec
jae
dec
mov
stc
adc
cwtl
mov
sub
in
jge
insl
xchg
push
cmp
push
jge
sbb
dec
lcall
dec
push
add
mov
idivb
movl
mov
stos
loop
and
sbb
aaa
arpl
shlb
add
popl
xor
lret
jg
stc
mov
lods
adc
pop
cmp
insb
jbe
cld
xor
out
es
lea
cmp
cmp
cmpsl
cmp
out
dec
add
out
dec
push
or
cltd
sahf
dec
mov
sub
insb
pop
push
add
ljmp
mov
shrl
mov
push
sti
mov
jecxz
popa
mov
loop
cmp
rcrl
jl
pop
dec
jno
mov
addr16
add
mov
sbb
mov
sub
dec
repnz
pop
les
adc
dec
mov
in
js
fsubrs
lock
or
xchg
dec
shll
jne
outsl
mov
ja
das
xchg
dec
sti
sbb
in
jbe
jmp
mov
jmp
pushl
sbb
js
adc
scas
xlat
in
andl
or
shll
mov
mov
out
push
mov
scas
xlat
insb
jmp
out
ja
stos
xor
adc
fwait
jg
popf
iret
and
cmp
test
subl
mov
pop
adc
mov
test
orb
adc
cmpsb
mov
pop
mov
mov
xor
imul
aas
mov
imul
lds
adc
sbbl
test
stc
lret
mov
sbb
cld
and
aaa
dec
push
cmc
test
mov
xor
pop
cld
mov
cmc
mov
and
jne,pt
das
sbb
imul
jge
stos
in
sti
ja
push
inc
sbb
fsts
mov
xchg
incb
rolb
repz
inc
inc
pushf
stos
xor
mov
js
pop
scas
loope
addb
repnz
bound
or
xchg
pop
sub
int3
imul
or
sub
cmpsb
inc
mov
pop
insl
icebp
in
push
add
pop
lea
push
bound
cmpb
jb
insb
aaa
sbb
or
dec
cwtl
mov
or
stos
inc
mov
jge
inc
fiadds
aam
icebp
fisttpl
loopne
cmp
cmp
int
inc
ds
sub
ret
mov
xchg
add
repnz
mov
cmpsb
dec
mov
xchg
adc
ret
ss
inc
sub
cltd
fsubrl
clc
and
ljmp
enter
ja
add
sub
loope
bound
jbe
movsl
mov
nop
jmp
and
es
imul
gs
cmc
cltd
and
cmp
fnstenv
int3
push
inc
inc
mov
mov
je
or
inc
in
sbb
in
sub
or
stos
mov
xchg
mov
rcll
push
fidivl
jp
mov
pop
mov
mov
pop
pop
fidivs
add
call
leave
xchg
mov
push
or
xchg
dec
mov
inc
sub
xor
and
mov
push
inc
mov
popf
cmp
cltd
test
xlat
cmc
clc
clc
gs
dec
aaa
adc
cmp
rcrl
cltd
dec
or
cs
and
xor
mov
xor
arpl
dec
sbb
rorb
push
fcompl
and
pushl
or
add
rorb
push
out
cltd
jmp
sahf
inc
lcall
or
cwtl
dec
cwtl
dec
pop
mov
push
xchg
jl
mov
mov
or
std
popf
jl
aas
add
add
loop
mov
or
mov
rorl
adc
dec
lods
push
jmp
xchg
insb
jbe
cli
or
pop
cmp
fs
fwait
pop
aaa
popf
iret
jle
test
bound
sbb
loopne
in
adc
inc
xor
dec
mov
ljmp
fdivl
or
mov
jae
test
mov
imul
mov
pop
xchg
lock
cld
jg
popf
xchg
leave
fsubrl
cwtl
movsl
scas
imul
and
xchg
dec
xor
sub
mov
and
dec
jae
cmp
dec
popf
scas
fucomp
or
adc
test
mov
sbb
fisttpl
mov
pop
pop
mov
enter
loope
mov
push
fs
mov
jno
loope
sarl
xlat
fcoml
cli
and
adc
push
mov
clc
dec
cmp
in
popl
xchg
adc
aas
mov
ljmp
push
dec
daa
orl
repz
lahf
lea
rolb
cmp
pop
sub
cmpb
xchg
sub
xchg
jmp
mov
dec
mov
add
fsubrs
add
push
fwait
js
mov
sti
mov
lock
pop
dec
aaa
add
add
push
ret
jecxz
sar
int3
cmpsl
mov
imul
dec
pushf
dec
lods
aad
stos
mov
pop
test
sub
dec
repnz
cmc
push
dec
xor
inc
and
xchg
ds
mov
int
sarb
pop
xchg
int
push
add
cltd
mov
scas
jb
sub
pop
pushf
ret
cld
mov
mov
xlat
scas
mov
lahf
fistps
inc
xchg
idivl
rolb
lea
mov
sbb
jmp
mov
mov
cmpsl
dec
fstl
mov
cmp
pop
gs
xchg
xchg
xchg
cltd
enter
fs
add
cmpb
xchg
sub
cmp
in
jne
pop
mov
rolb
ret
popa
pop
or
sbb
mov
lods
sbbl
jp
sbb
sbb
add
push
dec
cmp
int
mov
stc
and
mov
pop
repnz
lahf
inc
int3
lods
push
test
cwtl
xor
mov
int3
loop
scas
mov
ffree
stc
pop
cmp
arpl
add
xchg
dec
mov
cmp
adc
cltd
test
adc
dec
mov
xor
add
cmp
ret
lahf
sahf
adc
jo
jg
dec
fsub
lods
jo
jb
addps
adc
inc
sarb
dec
gs
test
xchg
scas
xchg
in
pop
mov
out
xchg
stos
adc
pusha
jo
cmp
std
xchg
mov
mov
fcomi
enter
in
xchg
mov
fwait
enter
cmpb
xchg
sub
daa
sub
pop
scas
ss
push
jne
shlb
fidivs
xchg
ja
pop
clts
decb
lea
push
add
bound
jnp
adc
cmp
hlt
int
stos
ja
jne
push
mov
stos
movsl
jb
mov
repnz
mov
xchg
mov
imul
mov
xchg
test
int
mov
adc
addb
push
xchg
popf
xchg
dec
cmpsl
push
add
jb
lods
jne
or
jns
enter
cmp
imul
xchg
cmp
fwait
leave
loop
add
or
filds
mov
mov
test
mov
in
mov
jnp
inc
push
mov
or
test
sub
ja
stos
pop
test
divl
fwait
lea
xor
mov
sbb
add
inc
sbb
or
addb
or
mov
das
xor
daa
jge
enter
fdivrs
loopne
mov
mov
dec
lahf
lret
std
inc
or
cmp
std
pusha
inc
sbb
inc
sub
int
inc
ljmp
xchg
ret
sbb
jne
push
adcl
jns
sbb
inc
mov
movsl
jmp
dec
popf
call
aam
insb
cmp
dec
and
add
cs
push
stos
jge
dec
cmp
outsb
aas
lcall
or
add
xor
mov
mov
add
jmp
adc
cmpsl
xlat
in
addl
or
sub
lea
pop
mov
push
test
lods
mov
pop
mov
jl
scas
cmp
pop
bnd
lea
mov
mov
int3
add
mov
rorl
dec
loope
jl
mov
xchg
jg
dec
daa
cs
mov
mov
push
jmp
inc
xor
popf
mov
xchg
je
pop
cmp
aaa
xor
adc
jae
lods
inc
mov
mov
jge
pop
dec
aaa
add
sarb
insl
pop
jb
or
add
and
mov
sub
stos
aad
pushf
push
lods
push
pop
int3
xor
scas
int
test
push
pop
lcall
pusha
jp
cltd
fs
outsb
push
mov
stos
xchg
xor
mov
cmpsb
xor
jb
loopne
sbb
adc
mov
cwtl
inc
sbb
and
pop
out
js
in
movsb
lahf
mov
sub
xchg
ljmp
idiv
decl
and
lret
and
cmpsb
pop
fistl
xchg
mov
pop
test
movsb
in
cmpsb
fmul
jmp
mov
es
pop
jl
fisubs
jne
cmpsl
enter
jns
pushf
dec
leave
cwtl
jns
cwtl
mov
mov
adc
inc
dec
sahf
dec
mov
xor
call
cmp
cmp
lock
ds
and
sar
jecxz
mov
xchg
mov
xchg
sub
pushf
cltd
push
mov
and
mov
mov
mov
movsb
lds
nop
clc
xor
shll
inc
lock
xchg
cmp
pop
in
mov
mov
stos
adc
pop
push
pop
outsb
fstps
idivb
outsb
cmpsl
sub
lret
fcomip
add
mov
lods
mov
rcrb
cmpsl
pop
mov
xor
fmul
ljmp
xor
aas
mov
jl
rcll
js
jg
ja
pusha
je
pop
inc
cwtl
dec
and
cmpsb
mov
fdivs
cmp
pop
nop
pop
cmp
repz
pop
fidivrs
add
out
xchg
je
pop
push
int3
jecxz
and
sub
fsubrs
aaa
mov
mov
push
roll
stos
fucomi
repz
cmp
add
dec
fucomip
repz
fdivs
mov
xor
mov
mov
jmp
imul
out
imul
sbb
and
sub
aad
leave
add
inc
pop
add
loop
mov
jae
dec
mov
arpl
lret
push
mov
cmpsb
xchg
test
ret
or
jg
outsb
cmpsb
stos
jge
fmuls
push
testl
sahf
cmp
xchg
jbe
sub
dec
test
push
cmp
lahf
fistps
inc
shll
lret
push
push
fsts
andb
dec
mov
xor
dec
out
mov
mov
test
movsb
cli
jne
mov
inc
fld1
jb
pop
call
in
jb
mov
int3
pop
and
js
sbb
add
xchg
dec
cmpsl
sub
and
xchg
mov
or
add
dec
or
loopne
cmp
mov
or
add
pop
iret
add
xor
lds
adc
imul
mov
mov
int3
addr16
lcall
push
les
push
mov
push
xor
and
pop
or
in
fcompl
push
pop
fcomps
repz
callw
cmp
sbb
cltd
imul
lcall
cmpsl
dec
push
xor
ret
mov
fdivr
repz
xor
loop
pop
mov
addl
int3
fst
mov
sbb
push
cmp
movsl
mov
insb
jbe
push
cmp
in
push
ret
fld1
jb
pop
hlt
or
and
push
and
mov
adcl
gs
jb
mov
mov
imul
mov
arpl
mov
jne
adc
lcall
clc
sti
mov
loope
xchg
lock
jbe
adc
cmp
mov
negb
ret
sbb
in
adc
pop
stos
push
icebp
push
rcrb
cmp
cmc
sbb
pop
cmp
test
ja
lods
test
or
inc
cmp
lret
daa
pop
add
inc
movsl
sbb
inc
jl
and
push
leave
movsb
push
sub
mov
adc
js
jle
leave
xchg
sbb
hlt
sti
sub
les
adc
or
add
or
sbb
sub
fldcw
cmpsb
xchg
iret
jbe
mov
pop
fidivrl
jne
out
femms
lds
adc
jnp
test
pop
pop
mov
inc
adc
imul
sbb
shl
js
lcall
adc
pop
mov
loopne
jle
fwait
mov
pop
push
add
pop
xor
sbb
test
lcall
jmp
ror
mov
and
pop
nop
lods
lret
adc
cli
mov
xor
pop
in
mov
lret
fucomp
jae
mov
pop
dec
icebp
incl
pop
adc
cmp
dec
mov
lret
and
or
sahf
or
xchg
cmc
adc
add
sub
lods
sahf
jno
pusha
mov
scas
in
or
fwait
pusha
loopne
and
in
andl
add
rcl
lahf
xor
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
movsb
fstps
call
fwait
mov
stos
xchg
out
mov
inc
inc
xchg
ficompl
and
fisubrs
pop
dec
mov
popa
mov
popf
cltd
dec
popf
or
shrl
push
xchg
dec
pop
mov
cmp
in
xchg
pop
xchg
cmp
pop
mov
repnz
mov
hlt
sub
cwtl
lret
movsl
cltd
icebp
mov
movsb
lds
nop
clc
xor
shll
inc
lock
xchg
mov
pop
in
mov
mov
stos
adc
sbb
ret
add
sbb
xor
fisubrl
lahf
or
mov
fldcw
add
shrb
sbb
loop
mov
in
aad
xchg
xchg
jb
mov
or
cmpsl
xlat
in
testl
add
dec
shlb
adc
aam
inc
fildll
cmp
mov
jno
inc
and
jecxz
cmp
mov
sti
and
push
and
mov
adcl
gs
jb
mov
mov
imul
mov
arpl
mov
jne
adc
sbb
inc
mov
sbb
clc
sti
mov
loope
adc
fldlg2
ja
pop
rcrl
cltd
je
lds
leave
fsubrl
rorl
sbb
dec
mov
xor
shll
inc
lock
xchg
scas
lret
fucomp
xor
mov
mov
js
fisttpll
xchg
and
clc
add
jecxz
add
je
in
dec
pop
stos
xchg
stos
popf
mov
add
adc
sub
cmp
mov
ja
cmp
and
and
scas
lahf
icebp
cli
inc
cwtl
pop
and
shlb
idivl
out
mov
mov
xchg
sub
dec
and
xchg
fst
pushf
mov
lret
in
mov
mov
or
lahf
adc
mov
jge
jo
cltd
sub
frstor
in
fwait
shr
inc
push
in
dec
cmp
loopne,pn
sub
inc
outsl
pop
push
sbbb
shrb
xchg
cmp
imul
mov
in
jmp
lret
push
lock
or
jl
mov
cmp
jge
lds
movb
xor
rcrb
lahf
or
test
loopne
mov
mov
mov
sbb
add
lret
fucomp
pushf
inc
pop
lahf
push
xor
cmp
les
mov
add
test
pushf
push
fstpl
lcall
ss
sub
in
mov
aas
in
std
out
and
loope
sarl
imul
cmp
sbb
mov
fwait
push
dec
mov
pop
pop
out
into
les
xchg
arpl
xchg
push
sahf
cmpsb
test
pop
push
jmp
mov
pop
xchg
fidivs
cmp
stos
out
cmp
rcll
and
cmc
cmp
and
fmuls
jno
lret
add
jge
lods
jg
dec
sbb
shlb
mov
dec
sbb
in
mov
jg
mov
lea
push
add
bound
sti
sub
mov
bound
mov
movsb
sbb
lds
jae
cmp
mov
mov
jge
and
add
jae
pop
aas
mov
into
addr16
adc
test
mov
sbb
cltd
enter
mov
add
sub
frstor
cmpsb
sahf
xor
ret
mov
sbb
js
fists
sbb
loop
xchg
sbb
add
loop
lea
cmp
mov
inc
xor
cmp
mov
jnp
test
insl
in
mov
ret
out
ret
out
mov
fs
lds
xor
out
jmp
jecxz
adc
ds
sub
mov
push
sbb
ret
js
test
adcb
and
mov
mov
test
add
int
xor
in
daa
div
sbb
mov
fwait
stc
into
sbb
add
lret
cmpsl
jge
cmpb
adc
mov
test
push
mov
xchg
cwtl
pop
loop
pop
push
mov
in
mov
fs
fnstsw
je
shll
fadds
or
nop
or
jge
pop
movsl
or
pop
cmp
mov
dec
movsb
jbe
sub
mov
adc
loope
fistpll
mov
pushf
jae
inc
sarb
andl
rcrl
repnz
add
mov
or
in
mov
jnp
inc
push
mov
or
mov
les
and
gs
and
mov
push
mov
icebp
enter
adc
daa
loopne
hlt
je
xchg
xchg
fwait
cs
repnz
cmc
hlt
clc
movsb
test
add
or
mov
shrl
test
sar
int
sbb
pop
adc
lods
in
dec
add
repnz
ss
sbb
inc
pop
sbb
insl
cltd
ret
dec
test
sbb
inc
cmpsb
xchg
adc
sub
dec
push
inc
push
lret
sbb
add
mov
cmp
in
mov
mov
sub
cmp
or
cmp
adc
lcall
add
jne
pop
mov
fs
ja
cmp
shll
sbbb
jo
cs
cmp
clc
dec
cmp
pop
std
arpl
addb
adc
inc
nop
sbb
sarb
sbb
mov
inc
gs
fst
pop
faddp
mov
ret
pop
pop
pop
dec
mov
mov
mov
sbb
xchg
enter
mov
hlt
xchg
dec
leave
dec
inc
xor
jbe
inc
mov
dec
ret
xor
cmp
gs
sub
je
movsl
push
push
mov
sub
mov
hlt
adc
inc
mov
ss
mov
stos
add
sub
enter
jno
dec
int3
addr16
repnz
mov
leave
mov
enter
push
inc
stc
shll
xchg
push
dec
xor
ljmp
mov
xchg
test
or
outsb
push
sbb
fdivl
ret
dec
push
dec
cmpsl
push
dec
lcall
jle
cltd
shr
push
mov
inc
pusha
add
inc
fs
adc
std
or
inc
mov
out
add
jge
mov
je
mov
test
jecxz
ss
mov
xor
pusha
jo
sti
pop
call
out
lret
fdivs
jecxz
push
cld
pop
sub
inc
sub
lea
xchg
popa
mov
xchg
xchg
inc
inc
xor
movsl
sbb
in
es
mov
inc
inc
pop
lahf
lret
jecxz
ret
dec
mov
mov
jae
xor
in
das
and
int
mov
imulb
pop
add
xor
push
dec
ss
pop
mov
lahf
sbb
stc
or
lahf
js
stc
add
nop
push
pushf
sti
insl
mov
xchg
test
inc
and
cmp
imul
aad
pop
sbb
jecxz
mov
in
shr
sbb
pop
fcompl
mov
mov
test
rcrb
dec
rorl
lret
adc
or
mov
mov
bound
pop
lcall
movsb
inc
popa
push
imul
dec
cmp
aad
push
mov
mov
mov
dec
and
stos
shr
stos
jne
or
popf
mov
cmp
popf
mov
sbb
or
mov
daa
cmp
jmp
clc
sti
jle
push
xor
syscall
pop
aas
sub
in
or
cmc
std
add
cmpsl
ret
dec
aaa
adc
movsb
ret
sbb
xlat
stos
dec
sahf
sbb
sbb
sbb
into
ds
adc
dec
mov
cld
xor
insb
fcom
cmpl
jae
in
jge
mov
xor
gs
adc
mov
push
fidivs
jge
test
or
dec
xor
cmc
in
jl
aas
add
sbb
and
inc
pushl
mov
adc
cmpsb
mov
xchg
mov
sub
add
pusha
jo
jnp
out
pop
fsubs
xor
loop
push
je
xchg
enter
hlt
pop
sub
inc
jne
jnp
dec
aad
inc
mov
pop
inc
das
or
mov
inc
inc
mov
je
lahf
cmp
mov
and
mov
mov
dec
aaa
test
ja
pop
push
mov
sbb
jg
pop
xchg
leave
fsubrl
xchg
sub
xor
xlat
stos
push
mov
sub
out
or
cmp
mov
fucomp
cld
clc
fldcw
jmp
les
or
cltd
sbb
push
sub
fmuls
push
sbb
mov
push
mov
lods
mov
dec
cltd
lods
inc
pop
cmpsl
inc
pusha
push
je
push
in
pushl
js
js
adc
test
shl
std
add
ja
add
inc
cwtl
dec
and
int3
ljmp
test
xchg
inc
fbld
pop
mov
fs
xlat
pop
fldenv
mov
adc
leave
call
adc
jne
pop
dec
daa
adc
cli
pushl
pop
hlt
mov
inc
lea
popf
je
pop
cmp
xor
lods
lcall
dec
pusha
xor
jns
inc
add
out
rcrl
enter
mov
mov
xchg
sub
adc
push
test
cli
movsb
bnd
xchg
pop
es
dec
cmp
js
popa
imul
mov
xchg
dec
scas
sbb
add
je
inc
sbb
pop
mov
and
mov
mov
ret
jns
into
pop
lahf
sub
clc
jbe
lahf
jp
enter
repz
push
mov
sbb
mov
jo
jle
push
sbb
add
mov
inc
daa
xchg
int
mov
shr
push
fcoml
insb
imul
jecxz
iret
add
jmp
xor
loope
shll
aam
and
inc
mov
testb
arpl
int
cmpsl
shl
pop
adc
movsl
fwait
pop
mov
push
fisubrs
pop
mov
and
mov
fs
and
stos
lahf
cld
add
pop
pop
repnz
jl
or
xor
push
jae
push
add
arpl
mov
call
push
add
mov
dec
mov
mov
cld
std
mov
in
jl
mov
mov
sbb
fcompl
add
jl
rorl
push
sub
gs
mov
xor
icebp
sbb
mov
sbb
rcrb
iret
inc
popf
pop
mov
popl
pop
xchg
int
dec
imull
les
or
xlat
insb
jbe
cli
jae
and
add
mov
jge
insb
mov
in
mov
iret
es
cltd
addr16
mov
pop
mov
enter
jne
dec
pusha
out
imul
shl
mov
shr
mov
adc
pop
add
xchg
mov
cmp
jnp
mov
mov
pop
hlt
and
and
pop
dec
ss
jp
xor
pop
icebp
mov
xor
add
pop
filds
aad
dec
pop
dec
and
rcrl
mov
movsl
sub
cmp
cwtl
jge
push
xlat
stos
vandnps
int
push
mov
jb
mov
insb
jbe
lods
ficomps
bound
scas
pop
psubsw
js
into
das
call
out
dec
in
shlb
andl
fadd
sbb
inc
stos
push
jle
insb
add
shll
pop
jns
lods
xlat
sub
or
inc
sbb
cltd
insl
test
mov
cmpsb
inc
cltd
out
movsb
jle
ficomps
fs
adc
fisubrl
int
imul
sahf
dec
mov
sub
sahf
lret
arpl
push
xchg
fcmovbe
sbb
mov
jns
xlat
mov
lock
addl
add
sbb
movl
or
ret
popa
and
cli
jns
lds
nop
lds
clc
sub
mov
jge
dec
add
mov
pop
push
les
pushf
dec
mov
dec
lds
mov
rcll
jge
addb
dec
mov
stos
xchg
dec
cs
test
push
cmpsl
pop
imul
aad
es
adc
mov
popf
sbb
mov
mov
lds
pusha
sarb
mov
stos
aam
mov
jnp
inc
push
mov
cmp
xchg
nop
nop
inc
sbb
mov
std
mov
push
or
inc
bound
out
mov
fnstenv
xor
mov
dec
and
jp
adc
jne
test
adc
mov
cmc
hlt
cwtl
imul
mov
or
jns
pop
mov
test
xor
mov
lret
jecxz
outsl
lret
stos
lock
jmp
sbb
aas
test
or
sbbb
inc
sbb
out
nop
xlat
pop
sbb
test
cli
stos
ss
pop
pop
add
adc
test
negl
stos
cmp
xchg
test
lods
or
cmp
adc
cltd
mov
stos
mov
add
repz
xor
add
cmp
ret
lahf
sahf
adc
test
fcompl
js
pop
js
jmp
adc
mov
loopne
lcall
aam
mov
fwait
xor
cmp
xchg
mov
decb
jmp
std
mov
sti
and
push
and
mov
adcl
gs
jb
mov
stc
or
into
pop
stos
shll
cmpsl
inc
mov
xchg
dec
sbb
mov
jecxz
pop
addl
mov
addb
jmp
jg
popf
xchg
push
cs
les
cwtl
jg
sbb
sbb
pop
test
sbb
testb
and
mov
stos
fistps
test
dec
gs
jbe
sbb
in
jl
pop
enter
lods
pop
pop
push
push
lret
pop
test
push
mov
lds
bnd
jg
mov
xor
andl
xorl
push
dec
mov
cmc
push
mov
inc
push
mov
ret
adc
push
fisubl
mov
jl
fwait
lea
iret
add
es
pop
sub
sbb
mov
int
pop
push
push
dec
xchg
sbb
add
sbb
call
xor
mov
adc
mov
repnz
sub
add
ja
pop
lods
dec
cmp
add
cwtl
shll
imul
test
dec
push
lods
outsb
jno
je
aaa
jns
data16
xchg
mov
sbb
fldt
pushf
dec
pop
jno
mov
mov
xchg
test
inc
cmp
jae
lods
pusha
xor
imul
add
sbb
cwtl
inc
sbb
movsb
fstpl
push
lahf
mov
sub
xchg
sub
and
fs
cmpsl
and
addr16
or
mov
and
insb
imul
cmp
push
cmp
jne
test
or
mov
add
mov
add
xchg
cmp
xor
sbb
sbb
pop
mov
mov
test
sub
out
mov
sbb
rcrb
jg
adc
mov
imulb
fsubrl
adc
sbbl
stos
mov
xor
add
sub
lcall
inc
mov
mov
shrb
inc
std
push
mov
imul
pop
cmpsl
push
push
dec
mov
xchg
adc
pop
fisubrl
xor
mov
ficoms
or
sub
mov
sbb
addl
pushl
or
mov
sti
and
fs
test
int
cmp
jg
mov
or
pop
fsubl
jge
out
sbb
mov
adc
add
add
xchg
cmp
or
sbb
dec
jo
call
fsubrs
sbb
cld
sti
mov
jmp
mov
sbb
test
lcall
call
xchg
dec
and
jg
sub
mov
popf
jecxz
jge
cmp
fucomp
jae
pop
hlt
test
idivl
test
inc
shlb
jo
aam
fucom
xchg
cmc
mov
mov
mov
addr16
ret
add
xchg
mov
lods
inc
inc
lods
aad
mov
cld
loop
sbb
sbb
sti
sub
imul
into
loop
std
jp
fsubp
mov
sbb
xor
arpl
fucomip
mov
lret
xchg
js
out
mov
addr16
std
jge
jb
mov
aad
sbb
pop
sub
hlt
xor
int3
out
test
add
xchg
cmp
xor
sbb
sbb
pop
mov
mov
xlat
movsl
divl
ficoms
add
sbbb
cltd
je
mov
cli
jg
pop
dec
jno
mov
mov
pushf
das
xor
jns
sub
cmp
sub
cmc
sbb
repz
loopne
sti
mov
xor
hlt
lea
xchg
adc
cmp
pop
pop
scas
dec
fs
jle
jp
loope
cltd
lods
inc
sbb
aad
adc
or
scas
aaa
mov
cli
jnp
inc
mov
flds
cwtl
xchg
inc
sbb
add
out
mov
frstor
and
xchg
mov
xchg
mov
pusha
jo
jnp
cmp
inc
cltd
lods
jne
dec
inc
and
cmp
or
cmp
xchg
sub
add
in
cmc
fcompl
aad
repz
enter
ja
into
mov
pop
xchg
mov
pop
push
iret
sbb
add
inc
add
ds
adc
ret
inc
mov
icebp
imulb
and
fldt
loop
repnz
push
mov
cltd
xlat
std
int3
jmp
repz
scas
cmp
and
pop
cmp
lods
or
cmp
adc
cltd
imul
mov
add
sub
frstor
cmpsb
sahf
xor
ret
mov
fsubl
sbb
ret
faddp
mov
addl
add
mov
sbb
or
mov
pop
test
insl
in
or
pusha
jo
cmp
popf
gs
lahf
inc
mov
lods
xchg
inc
jb
jnp
es
hlt
push
add
mov
dec
mov
pop
rcrb
adc
push
test
into
pop
stos
les
inc
mov
inc
fwait
cmp
repz
sti
ficoms
or
xor
cltd
je
mov
cli
jg
pop
dec
jno
mov
mov
pushf
das
xor
jns
xor
fs
sub
cmc
sbb
repz
loopne
sti
mov
xor
hlt
lea
xchg
adc
cmp
pop
pop
scas
dec
fs
jle
jp
loope
cltd
lods
inc
sbb
aad
adc
or
scas
aaa
mov
cli
jnp
inc
mov
flds
cwtl
xchg
inc
sbb
add
out
mov
frstor
and
xchg
mov
xchg
mov
pusha
jo
jnp
cmp
inc
cltd
lods
jne
dec
inc
and
cmp
or
cmp
xchg
sub
xchg
jmp
mov
dec
mov
aam
movsl
dec
call
xor
mov
xor
pop
cmpb
xor
pusha
ss
lds
inc
sbb
inc
add
lds
insl
cmp
insl
sahf
cmp
rcrb
sbb
test
add
leave
cmp
lahf
cli
mov
ja
cld
mov
mov
insb
push
jl
stos
test
sbb
addb
pop
adc
jns
xchg
int
xor
jb
fisttpll
sbb
mov
pusha
cmp
stc
stos
sbbl
repz
pop
pop
adc
jmp
xchg
leave
inc
add
inc
icebp
or
outsl
cmp
shlb
inc
push
fdivs
sbb
mov
xor
daa
ret
mov
mov
sti
and
or
loopne
jg
add
cmpl
jbe
sbb
mov
pop
sti
inc
push
adc
push
movl
push
inc
ret
in
sti
test
ret
ficomps
mov
aam
ret
mov
adc
popa
pop
xor
mov
xchg
sub
adc
shlb
jno
in
loop
flds
cli
push
std
push
add
add
aaa
rorb
stc
adc
les
pop
mov
movsl
or
lds
mov
sarl
pop
mov
fcompl
scas
pop
nop
jle
xor
push
jg
inc
iret
jmp
rcrb
in
cmp
mov
mov
sub
xchg
addr16
repnz
jp
repz
inc
insl
xchg
jmp
or
mov
push
orl
mov
es
mov
sbb
add
bound
out
adc
ret
push
inc
mov
sbb
inc
and
xor
mov
sahf
hlt
pop
adc
xchg
aas
jae
xlat
inc
inc
jae
ljmp
add
mov
lock
jnp
add
orb
cmp
cmp
retw
sbb
aaa
jmp
push
adc
push
inc
inc
adcb
dec
push
vpaddsw
push
clc
mov
rcr
loopne
shlb
mov
dec
xchg
movsl
add
sub
mov
cmpsb
xor
jb
fisttpll
sti
enter
xchg
aaa
outsb
scas
stc
stos
sbbl
repz
pop
pop
adc
jmp
xchg
mov
inc
icebp
or
les
dec
dec
shlb
inc
push
fdivrs
jp
loope
insb
adc
push
lds
aas
daa
ret
mov
mov
sti
and
or
loopne
jg
add
cmpl
jbe
sbb
gs
pop
sti
inc
push
adc
push
add
shlb
ret
in
sti
test
ret
ficomps
mov
aam
ret
mov
adc
popa
pop
xor
mov
xchg
sub
adc
leave
js
clc
scas
jns
test
mov
push
outsb
pop
sbb
jae
inc
rcll
push
sbb
mov
inc
add
enter
or
stos
pusha
pop
pop
add
mov
shl
add
leave
aad
adc
das
mov
scas
aaa
mov
cli
jnp
inc
mov
mov
inc
sarb
add
mov
cmp
mov
rcll
ja
pop
pop
adc
imul
inc
adcb
insl
push
into
imul
fwait
pusha
and
mov
or
mov
je
dec
xchg
and
mov
xchg
cmp
or
jl
push
pusha
push
push
in
lcall
ds
jne
in
mov
cmp
jnp
ja
pop
shll
sub
mov
add
jbe
fnsave
jg
sbb
pop
test
mov
adc
movsb
sbb
mov
mov
or
jmp
les
jae
mov
ret
test
xchg
or
imul
mov
roll
adc
sbb
jnp
sbb
faddl
sbb
pushf
dec
stc
sub
cmp
ffree
inc
cmp
faddp
test
ffreep
les
cltd
xor
popf
shll
inc
fnstsw
test
test
add
mov
add
inc
dec
cltd
push
fimull
lahf
int
jle
push
sbb
ret
bound
push
mov
sub
jno
mov
aad
das
mov
int
xor
lds
mov
hlt
and
fldl
mov
xor
xor
inc
aaa
mov
je
and
pop
cmp
and
jnp
sbb
xor
out
push
stc
pop
sub
test
jge
push
inc
ss
adc
xchg
stos
inc
aad
mov
dec
icebp
inc
pop
sub
sbb
cmpsl
pusha
mov
cld
add
sbb
out
pusha
inc
add
sbb
mov
add
lret
xchg
inc
xor
mov
aam
arpl
xlat
mov
mov
inc
mov
fcmovb
test
fcmovnb
vpand
add
and
cltd
pop
sub
lahf
enter
push
dec
popf
leave
ret
pop
push
xchg
ror
incb
pop
xchg
ror
sahf
dec
imul
jb
pop
xchg
ret
int
sahf
lcall
aas
bound
popa
mov
leave
inc
aas
push
imul
iret
leave
rcrb
jne
enter
adc
and
int3
pop
in
mov
mov
sub
aas
mov
insl
jecxz
add
sbb
and
pushf
sub
lds
mov
popf
stos
adc
mov
mov
scas
lcall
scas
mov
cli
jnp
inc
mov
mov
push
push
jb
or
cmp
mov
rcll
ja
pop
pop
adc
imul
inc
adcb
insl
push
dec
imul
fwait
pusha
and
stos
je
bound
loopne
mov
and
mov
xchg
cmp
or
mov
push
in
lcall
ds
jne
in
mov
pop
cmp
shll
jae
hlt
out
lock
adc
or
xor
dec
aaa
jae
imul
cmc
add
sbb
cmp
std
insl
ffree
stc
dec
repz
pop
or
xor
pop
imul
mov
mov
xchg
add
mov
movsl
dec
icebp
cmp
mov
jle
stc
add
orb
inc
ret
addr16
or
fwait
cmpb
or
and
or
fcmovnu
and
ret
mov
xchg
movsl
rcrl
sbb
mov
cmpsl
inc
fadd
jb
mov
cmpsb
sbbb
mov
mov
and
xchg
and
mov
sti
daa
mov
sahf
out
mov
and
mov
mov
test
add
jb
pop
add
fwait
push
divb
push
imul
add
mov
mov
sbb
lock
out
xchg
fs
lret
sbb
pop
test
push
mov
pop
lcall
mov
sar
pop
jp
test
and
xchg
adc
lock
rorl
dec
mov
js
push
ljmp
es
inc
ljmp
ljmpw
js
pop
xchg
fsts
and
pop
pop
adc
xor
pop
mov
cmp
sbb
add
sbb
nopl
or
pop
cmpsb
and
and
hlt
jae
mov
cmpb
jmp
lea
cmp
push
addr16
pusha
push
push
in
lcall
ds
jne
in
xchg
inc
cmp
pop
inc
ja
pop
shll
jae
hlt
into
lock
adc
or
sub
lcall
add
fcoml
test
cltd
movsl
push
mov
test
fucomp
adc
daa
mov
arpl
xchg
test
rorb
xchg
dec
sbb
or
insb
mov
rorb
out
ficompl
push
add
adc
add
sbb
adc
daa
mov
cli
and
xchg
xchg
mulb
mov
movl
jbe
inc
lcall
add
mull
add
aaa
inc
inc
mov
xor
inc
mov
mov
addl
test
dec
dec
ror
xor
xchg
sbb
mov
daa
sub
adc
loop
mov
shr
mov
enter
int3
mov
jecxz
xor
fcom
xor
loopne
xor
xor
fidivl
mov
lea
adc
cmp
fs
sub
cmc
sbb
xor
out
push
stc
imul
pop
lock
or
fldl
mov
subb
les
jno
ret
sub
inc
int
xor
xchg
loope
sarl
dec
cld
loop
mov
rclb
mov
popl
sahf
pop
fsubrs
sub
or
arpl
ret
clc
fcompl
fidivrs
dec
repz
repz
in
hlt
inc
inc
mov
xor
push
mov
mov
subb
je
mov
popa
inc
jne
add
mov
add
jne
adc
mov
andb
in
ret
mov
in
inc
ss
les
mov
aam
mov
scas
inc
testb
orb
hlt
adcb
test
aaa
loope
mov
repnz
hlt
test
test
arpl
add
cmp
add
sarl
stos
pop
ret
inc
mov
cmp
stos
faddl
or
fldenv
or
cs
repnz
and
xchg
push
adc
in
cmp
mov
mov
sub
repz
outsl
push
int3
push
fisubs
repz
inc
insl
stc
jbe
sbb
sbb
and
std
mov
push
repz
jecxz
negl
mov
inc
xchg
and
mov
dec
xchg
xchg
test
adc
insb
push
inc
mov
insl
rcrb
pop
push
xchg
fists
cmp
adc
imul
ja
mov
inc
and
mov
into
add
lea
or
or
mov
adc
mov
sbb
movsb
lahf
addl
push
ret
and
cmpsb
pop
add
xor
cmpsl
push
inc
gs
cmp
xchg
ret
mov
lret
mov
rorb
lods
mov
ficoml
arpl
sbb
mov
ljmp
ret
movsl
mov
cli
sub
xchg
andb
mov
cmpsl
add
xor
imul
sbb
clc
sbbl
inc
rorb
jb
mov
cmpsb
int3
mov
and
fdivs
mov
loopne
and
mov
jns
mov
nop
sub
and
mov
mov
test
add
daa
jb
pop
add
fwait
push
divb
push
negb
int
pop
xor
jns
xchg
adcb
sbb
lock
icebp
mov
xor
adc
sub
cli
testl
cltd
dec
sub
mov
fucomp
jae
mov
fbld
mov
xchg
test
dec
cmp
mov
loopne
xchg
stos
lds
ja
mov
sbb
mov
pop
mov
rol
inc
mov
rol
xchg
rol
pop
stc
and
sbb
ffree
inc
pop
stos
mov
jge
xchg
sub
mov
movb
fld
inc
popf
lret
test
test
repz
movsl
fcmovnb
lds
into
add
loop
inc
cltd
ds
rclb
popf
int
pop
cli
pop
push
xchg
ror
mov
les
mov
mov
loop
das
mov
fst
xor
mov
xor
int
xor
xor
fdivs
mov
lods
arpl
std
les
mov
insb
adcl
cmp
int3
cmp
jae
enter
sti
stc
cli
in
test
cmp
or
mov
or
fistps
pop
xor
mov
repz
lods
pop
pushf
pop
pop
sarl
daa
call
std
div
sbb
loop
xchg
sub
or
fstl
cmp
jl
out
lret
sbb
mov
aam
jg
push
stos
xrelease
hlt
pop
fdivrl
sti
xor
dec
xchg
outsl
or
mov
hlt
cwtl
sbbb
or
cltd
clc
inc
and
das
out
cmc
xor
mov
xor
cmpsl
jbe
call
sahf
divb
or
mov
in
push
or
jp
add
mov
mov
jle
add
mov
leave
push
fs
lret
cwtl
cmc
mov
mov
jnp
sbb
dec
inc
popf
cmpsl
pop
jb
stc
dec
rdtsc
add
enter
mov
les
sbb
add
cld
jp
add
sbb
pop
and
mov
xor
jg
add
pop
jge
inc
add
inc
std
and
sub
or
mov
inc
pop
mov
mov
inc
cwtl
push
test
pop
mov
jp
fidivrl
fistpll
jecxz
call
pop
mov
cltd
jae
int3
pop
add
enter
sbb
loop
push
je
ds
xchg
mov
lcall
lock
add
arpl
ljmp
jecxz
ds
mov
lar
lods
push
idivb
and
sbb
add
insl
mov
fs
pop
mov
imul
xor
push
sbb
in
lret
sbb
inc
mov
sbb
jg
lods
mov
popf
arpl
cmpsl
test
sbb
mov
mov
dec
cmpsl
push
push
xchg
fbld
push
jae
cmp
or
pusha
ja
mov
and
mov
cmp
cmp
lods
pop
sub
adc
in
cmp
mov
call
pushf
xchg
inc
cwtl
dec
and
imul
ret
icebp
cld
mov
imul
stc
fld1
jb
pop
aam
fcomi
push
jne
push
mov
lea
adc
cmp
mov
int
ds
cs
ret
loop
pop
das
adc
and
pop
stos
shrl
push
xchg
loopne
dec
movsl
cmpl
push
ds
jns
add
sub
int
mov
jmp
cli
cmpsl
dec
sbbb
dec
cli
insl
mov
cwtl
data16
mov
inc
stc
push
cli
test
pop
sbb
stos
push
ja
movsb
mov
popf
lret
add
xor
mov
imul
outsb
daa
sub
mov
dec
jl
fstpt
stc
pop
lea
mov
lods
inc
sbb
ret
movsl
inc
fucomi
jge
lds
mov
mov
fucomi
idivl
xchg
pop
mov
jns
lret
dec
mov
xor
in
xor
mov
sbb
cld
jle
insl
sbb
iret
test
hlt
std
mov
sti
and
adc
test
sbb
mov
movsb
cmp
clc
js
test
orb
and
dec
imul
sbb
into
mov
jns
add
mov
mov
shrb
dec
cmpsl
mov
fcompl
mov
dec
pop
sub
test
lret
ljmp
into
and
sti
mov
cld
mov
pop
insb
orl
xchg
dec
bound
test
mov
arpl
pop
loopne
fnsave
jb
movsb
call
lods
jle
test
add
fstpt
loop
sbb
add
sbb
xlat
in
pop
idivl
out
inc
sbb
mov
dec
cmp
xor
insb
cwtl
or
pop
mov
mov
push
mov
mov
pop
fidivrl
out
xor
ret
aad
fwait
pop
std
sbb
int3
add
push
xchg
sub
or
sub
cmpsb
and
xchg
adc
fnstenv
inc
shl
pop
and
fistl
mov
add
mov
mov
cmp
jp
add
imul
mov
lret
and
cmpsl
mov
pop
fs
push
sbb
dec
cli
stos
stc
jae
dec
in
stos
mov
dec
sbb
xchg
lahf
mov
aaa
aaa
xchg
fisubl
cmpsl
xchg
push
nop
mov
jae
test
cmpsb
sub
push
push
push
pop
jnp
mov
pop
icebp
cmp
sub
jl
adc
scas
std
leave
jne
or
out
inc
sarb
dec
xorl
decl
mov
sbb
and
cmp
aas
fwait
lret
in
mov
mov
xchg
mov
nop
sti
repz
sarb
sbb
cmp
repnz
mov
adc
xchg
cmp
adc
mov
inc
call
pop
sbb
cld
int
clc
sti
mov
jecxz
fwait
jecxz
enter
popl
rorl
fwait
inc
or
mov
cli
dec
cmp
and
mov
jnp
pushf
xor
and
pop
stos
lods
push
sub
les
mov
frstor
negl
movsb
mov
cmp
in
test
or
fs
cmp
addb
imul
test
fwait
lods
gs
lods
xor
scas
andl
loop
xchg
data16
adc
addl
push
js
cmpsl
cmp
inc
xor
addl
mov
xchg
repz
mov
lock
sarb
cmp
out
mov
mov
xchg
enter
lahf
testb
add
mov
mov
cwtl
mov
jmp
faddl
inc
sub
sti
mov
push
repz
fnsave
lds
ret
call
push
paddq
lock
mov
je
adc
add
shll
outsb
xor
cmp
lds
stos
push
test
test
inc
mov
inc
jmp
pop
or
xchg
test
dec
mov
sbb
lret
ret
mov
xchg
or
int3
ljmp
fstpl
icebp
xchg
jge
push
xchg
shrb
jle
sub
push
adc
sti
jnp
pop
xchg
jne
js
jle
sbbb
add
xchg
sub
mov
andb
sbb
push
lcall
addb
cmpsl
cltd
into
sub
fdivrp
stos
fmul
mov
ds
inc
fnstsw
mov
pusha
ret
jg
dec
aas
fsubrl
and
cmc
pushf
sub
mov
addl
mov
ds
into
add
mov
lock
mov
jp
mov
or
xchg
sub
xchg
and
test
inc
mov
mov
scas
stos
and
test
fisubl
outsl
les
repz
jp
sub
sub
cmp
in
or
ret
test
es
imul
imul
pop
lahf
xlat
push
cltd
lods
fidivs
cmp
and
pusha
mov
outsl
dec
jno
mov
popa
mov
add
or
inc
sbb
ret
into
mov
and
dec
and
rcr
pop
inc
jnp
lods
daa
push
sub
sahf
dec
pop
lret
fld1
jb
fimuls
addr16
sbb
icebp
call
sarb
sbb
add
lcall
jp
incl
rcl
xor
ljmp
loop
xor
jg
out
fdivs
jle
inc
div
in
jno
jl
mov
popf
inc
call
or
and
data16
jge
inc
pop
lret
test
mov
dec
dec
xchg
mov
stos
cltd
decl
sbb
in
lock
ret
cmpl
add
jae
insl
sbb
inc
xor
stos
inc
gs
push
sbb
sbb
aad
jmp
xchg
frstor
js
inc
arpl
mov
sarl
popf
scas
adc
jecxz
jno
xchg
adcl
adc
xor
xchg
repnz
rolb
repz
hlt
inc
push
inc
pusha
pop
sbbl
testb
inc
dec
xchg
popf
test
loope
call
mov
sti
cmpsl
push
mov
movsb
in
xlat
jne
ret
jmp
es
jbe
add
xor
ja
add
aam
push
imul
mov
ja
or
cmp
test
add
out
ja
imul
insb
test
xchg
enter
dec
pushf
lods
fcoml
js
pop
cmpsl
imul
in
sub
push
idiv
sub
push
mov
lret
jecxz
add
adc
flds
insl
add
mov
xchg
pop
cmc
add
mov
add
push
pop
hlt
subl
into
pop
in
xchg
mov
push
test
fidivs
orl
sbb
inc
dec
inc
add
mov
adc
pop
mov
xor
shrl
rorb
xchg
jne
popf
popf
mov
xchg
jo
pop
lods
jg
mov
push
inc
lahf
icebp
jecxz
popa
jg
in
jns
xchg
enter
push
pop
hlt
popf
cmp
mov
jb
or
arpl
sbbb
popa
mov
shlb
lret
ret
test
repnz
xchg
movsl
dec
xchg
sbbl
cmp
outsb
incl
cs
in
je
lock
cmc
les
push
repnz
xor
in
leave
pop
or
mov
out
imul
testb
fisubs
std
mov
lods
aas
in
in
in
bound
mov
mov
mov
outsb
fnstenv
enter
jne
add
sahf
iret
pop
repz
mov
loope
inc
dec
adc
jnp
lds
mov
loop
mov
jle
popf
scas
jmp
popa
inc
clc
jle
ret
jmp
jle
clc
and
loop
or
dec
ds
xchg
push
fsubs
leave
jge
cmp
or
in
add
xchg
inc
cli
and
loope
xadd
inc
mov
xor
or
int3
pop
jb
repz
in
cld
cli
jecxz
enter
or
jne
enter
dec
lret
cmp
repnz
ret
imul
jge
test
js
cmpsl
pop
std
jmp
adc
adc
ret
sbb
jae
adc
add
inc
or
xchg
and
icebp
imul
les
fldt
push
test
cltd
push
add
addb
xchg
xlat
in
xchg
push
push
ds
into
mov
leave
mov
test
call
adc
add
pop
call
adc
ss
loop
imul
gs
arpl
and
cmpsb
jg
clc
ds
xchg
cmp
jmp
movsb
cmp
mov
lock
paddsb
dec
and
rcr
xor
jns
inc
lret
imul
mov
mov
and
cmp
jle
test
popf
iret
and
mov
lods
stos
xchg
mov
xchg
xchg
mov
fisubrs
pop
inc
sahf
js
mov
in
lret
movsl
ds
pop
pop
and
inc
hlt
mov
sti
lahf
ds
pusha
shll
mov
xchg
xlat
sbb
or
add
lret
cmp
dec
scas
dec
rclb
mov
xchg
orl
and
push
mov
fcmovne
es
out
arpl
outsb
pop
mov
rcl
ret
push
scas
xchg
fisubl
aas
add
imulb
jns
jle
js
xor
out
popa
mov
pusha
add
repz
outsb
dec
add
sub
dec
flds
sbb
adc
movsl
lcall
stc
sub
cltd
xchg
adc
cmpsb
cmp
sbb
sbb
mov
jno
outsb
lods
adc
add
pop
les
push
xor
shrb
mov
cmpsb
mov
push
int3
mov
fildll
pop
mov
lods
movsl
dec
mov
sub
addr16
in
stos
cmp
out
mov
adc
test
cs
cmpsl
mov
cld
cs
push
fwait
and
sbb
pop
stos
lahf
push
rorl
subl
nop
mov
pop
mov
dec
pop
add
movsl
adc
push
cld
push
push
fisubl
stos
pop
mov
sub
jbe
and
out
jmp
cltd
frstor
js
dec
cmp
push
fisttps
inc
fbld
xchg
ret
loop
pop
cmpsl
xlat
je
sub
or
push
es
pop
dec
cmc
sub
test
sbb
loop
sahf
data16
inc
cli
cmpsb
mov
aad
jp
loope
mov
mov
mov
cli
out
out
insb
and
movsb
mov
aam
inc
loopne
mov
push
ficoms
out
arpl
xor
mov
inc
xchg
fdivs
mov
mov
push
or
stos
in
rcl
pop
lahf
lret
xchg
xor
sbb
js
lds
aaa
or
aad
in
clc
xchg
xlat
stos
lds
arpl
and
mov
out
int3
sbb
xor
fcmovb
out
sbbb
lea
loopne
test
push
add
loop
push
push
lcall
add
std
call
lret
fsubl
jns
lds
test
and
fwait
cmpsl
dec
sub
xor
xchg
xchg
lods
hlt
add
popf
shlb
jecxz
inc
mov
dec
jae
fsubrs
imul
push
les
cmp
inc
sbb
push
jne
mov
sbb
xchg
outsl
cwtl
repz
mov
mov
int3
data16
gs
in
jnp
xchg
daa
jns
and
jbe
mov
fiaddl
jb
ret
push
mov
push
das
inc
push
ret
mov
xor
inc
mov
jg
gs
in
clc
mov
loop
inc
add
pop
sbb
jno
jmp
aam
xor
call
fs
xor
stos
mov
sub
jg
ror
cmp
repnz
shrb
inc
inc
int
jp
in
lock
arpl
rcrl
xchg
fldcw
jmp
out
cmp
jmp
pop
stos
push
jl
loop
mov
ficoms
sub
fistps
scas
mov
cmp
xchg
jo
cmc
lock
rolb
xchg
loopne
inc
jbe
pop
imul
nop
push
shrl
jl
and
push
stc
lods
push
insl
sub
xchg
imul
shrl
lret
jo
mov
rcll
test
lds
enter
dec
sarb
xlat
mov
cwtl
insl
pop
dec
in
fstpl
mov
mov
mov
mov
outsl
mov
xor
fcmovnu
mov
stos
popf
testl
pop
mov
dec
inc
adc
cli
add
dec
sub
hlt
mov
das
push
mov
enter
dec
gs
lret
push
scas
aas
push
aam
pop
dec
jg
test
mov
loope,pt
jbe
push
or
sub
push
and
cmp
shll
out
mov
mov
mov
sbb
lods
sub
aad
mov
out
fdivs
pop
into
jo
sbb
test
andl
shlb
jb
push
mov
sub
push
push
mov
sbb
cmpsl
ret
jb
gs
inc
filds
ret
in
sub
mov
sub
mov
imul
lret
sub
mov
inc
xor
movsb
int
ljmp
and
jb
aam
aad
xorl
mov
mov
mov
mov
cld
mov
xorb
in
stos
jecxz
fdivl
mov
xor
lds
lods
jnp
sbb
jae
lahf
scas
icebp
mov
testb
popa
mov
lea
xchg
cs
xchg
cltd
mov
xor
mov
jo
pop
dec
outsl
ljmp
xchg
xchg
sti
push
cmp
and
xchg
shlb
pushf
sub
fcmovnb
jle
jg
and
pusha
repz
aas
aas
cmpsl
push
push
xor
stc
dec
sbb
inc
adc
xchg
int
mov
frstor
imull
cmpb
sub
adc
enter
pop
clc
clc
adc
push
aas
sub
xchg
sbbb
dec
mov
dec
mov
test
repz
mov
xor
mov
popa
stos
sti
call
popf
or
mov
fnsave
jno
mov
dec
jle
jae
add
jne
and
outsl
int
and
movsb
leave
xor
and
mov
pushf
dec
push
mov
pop
stos
push
aam
scas
mov
xor
inc
mov
mov
aaa
imul
cmp
inc
inc
add
nop
popf
mov
sti
mov
mov
pusha
and
push
ds
dec
or
jle
mov
loop
test
in
test
rcr
or
out
lds
inc
cmc
cwtl
out
cmp
add
inc
xor
or
mov
test
xchg
inc
js
mov
mov
mov
imul
out
imul
movsb
push
adc
fnstcw
fwait
stos
push
enter
dec
lret
inc
sub
roll
push
mov
and
mov
clc
sti
mov
inc
mov
inc
sarl
push
xchg
push
pop
inc
xor
scas
mov
outsb
xchg
addr16
dec
cmp
inc
stos
pushf
adc
jg
call
sbb
movsl
sbb
adc
int3
gs
add
test
sub
data16
lret
or
cs
lcall
jnp
lds
push
inc
nop
xchg
lret
jp
pushf
cmp
ds
add
xchg
ljmp
out
inc
push
adc
or
sbb
sub
lcall
push
pop
es
pop
push
xchg
mov
mov
mov
sbb
mov
cmp
stos
sub
popl
adc
scas
add
push
jo
xchg
jne
bound
add
sbb
out
push
daa
dec
add
and
lahf
cs
mov
test
hlt
outsb
test
ljmp
lcall
inc
mov
lods
push
out
aaa
les
xchg
test
xor
in
cmpsl
ret
dec
mov
sbb
adc
stos
push
ja
inc
scas
adc
push
std
cmpsl
int
lds
cmpsl
inc
idivl
rol
je
mov
sbb
dec
data16
xchg
dec
stos
xchg
ficoml
mov
sub
fstl
fsubl
hlt
cmp
sbb
and
xchg
ret
test
in
inc
andl
add
xor
hlt
pop
repz
hlt
fidivrl
mov
sbb
movsb
lock
into
and
mov
xor
leave
pusha
cmp
sub
push
sbb
mov
and
sub
sahf
dec
mov
rcrb
inc
sub
mov
movsl
xor
adcl
fistps
std
jnp
mov
jo
ret
imul
lret
push
xor
iret
inc
dec
or
imul
xchg
jnp
add
mov
ja
nop
sti
pop
scas
mov
mov
xor
out
movsb
shll
or
imul
outsb
mov
or
test
xor
mov
mov
cmp
lods
cmp
jmp
xchg
mov
jmp
shl
cmp
jo
mov
add
inc
out
repz
mov
shlb
or
dec
out
pop
sahf
jp
mov
xchg
jmp
inc
mov
sahf
xchg
pop
ss
lea
xchg
mov
dec
mov
sarl
and
xor
xor
push
xchg
imul
mov
ret
and
xchg
xor
stos
scas
sbb
or
dec
lahf
in
clc
push
xchg
xor
dec
jne
pop
pop
dec
sub
add
in
leave
pusha
lret
data16
dec
and
jne
push
mov
push
pop
into
inc
add
pop
add
adc
sbb
rcl
xor
cwtl
cmp
adcb
orl
dec
lock
movsl
fwait
dec
scas
test
mov
mov
ret
add
cmpl
js,pn
or
fcmovnb
pop
jo
lods
das
fildll
jl
mov
inc
jle
ja
push
clc
clc
popl
test
xor
cwtl
mov
call
inc
mov
sub
jbe
lea
insl
or
mov
into
mov
push
sbb
test
pop
sub
test
sti
xchg
adc
int
mov
dec
fisttpll
mov
loopne
ljmp
divl
xlat
jne
test
and
xor
pop
sub
jg
movsl
mov
mov
jnp
icebp
aaa
mov
xchg
mov
adc
fs
xor
cmp
repnz
jge
xor
and
xor
das
pushf
fsub
cmp
dec
mov
inc
or
ret
lods
out
mov
arpl
jo
pop
es
test
xor
push
nop
repnz
push
std
add
inc
push
and
pop
popf
sbb
repz
mov
or
or
bswap
mov
pop
dec
aam
repnz
outsb
mov
lods
dec
xchg
xchg
cmpsb
test
xchg
xchg
enter
dec
jmp
pop
repz
mov
dec
mov
add
lret
mov
sub
cmpsl
adc
outsb
push
adc
adc
and
sub
mov
pop
pop
sarb
cmp
test
add
xor
adc
mov
sti
jns
movsl
rcrb
das
fisubrl
or
out
cmpsl
push
xchg
mov
cwtl
push
lock
scas
dec
and
sub
out
fldt
mov
jno
ljmp
in
imul
adc
int
repz
mov
div
pop
jo
pop
dec
outsb
add
pop
jb
mov
jnp
sub
add
pop
xchg
and
mov
std
jo
ds
out
add
or
dec
ret
xor
push
cmp
test
xor
pop
mov
ret
clc
and
aad
sbb
stos
add
out
js
jl
xor
and
dec
pop
mov
shr
xorb
lods
outsb
jmp
cwtl
mov
out
test
enter
in
cmp
mov
into
stos
fldl
push
rolb
iret
fwait
sbb
jmp
cmp
mov
add
xlat
pushf
fcmovnb
mov
xor
mov
int3
mov
dec
push
jnp
iret
mov
mov
mov
clc
scas
jb
mov
push
inc
aad
mov
cmp
xor
int
mov
jl
cltd
addb
lock
push
mov
inc
pop
inc
push
adc
adc
lods
inc
inc
pushf
cmp
lahf
push
adc
insl
stos
lret
jge
movl
pop
repz
arpl
shlb
sbb
mov
add
popa
add
rcl
mov
adc
jge
pop
fisubs
mov
adc
mov
inc
sahf
xlat
xlat
add
jae
lods
add
mov
xor
sbb
mov
dec
int3
mov
cmpl
inc
pop
lock
xor
sbb
cmp
movsb
mov
insb
sub
test
mov
inc
dec
lret
repnz
das
inc
sbb
inc
add
mov
subb
dec
aad
aad
inc
push
cmpsl
test
shrb
push
andl
xor
mov
ret
fisttpl
mov
xchg
test
sbb
mov
inc
sbb
sbb
push
test
shrb
push
lcall
ss
push
pop
jo
pusha
test
cmp
outsb
cld
stos
dec
push
xchg
cmp
loope
iret
pop
add
or
xchg
add
mov
aam
mov
dec
fstpl
imul
mov
mov
xchg
cltd
cmc
mov
aad
push
push
push
movsl
cld
and
inc
enter
or
sub
lret
ljmp
dec
mov
sub
add
inc
scas
daa
stos
shr
push
cld
int
pop
cmp
pop
add
out
fucomip
repz
dec
jle
lahf
lret
jecxz
xor
pop
push
mov
lea
jecxz
dec
inc
xor
into
jnp
fs
mov
int
fldcw
push
push
and
push
and
pop
int
shl
mov
xorl
add
jae
cmp
xchg
pop
pop
test
sub
fs
aas
mov
push
inc
rorl
nop
mov
cmpsl
mov
jle
jns
lahf
adc
mov
dec
stc
sbb
fdivs
fistl
mov
and
gs
das
adc
lods
pop
in
jbe
or
xor
and
std
cmpl
mov
pop
dec
call
pop
insb
sub
out
mov
out
call
mov
sbb
into
rorb
call
adc
mov
cmp
cmp
add
pop
mov
lock
sbb
and
mov
or
aas
jno
fs
or
and
ror
jp
lods
scas
push
test
cmp
shl
dec
lods
mov
xor
sub
je
out
lods
dec
sub
pop
push
loopne
imul
mov
or
lea
les
sbb
pop
movsl
arpl
pop
xchg
and
sbbl
cmc
mov
mov
fiadds
sub
pop
icebp
test
and
sbb
xorb
gs
adc
add
dec
inc
fistpll
xchg
ficomps
mov
jle
rcrl
pop
fwait
xor
xchg
jecxz
int
imul
sbb
fnstcw
pop
movsl
pop
lock
mov
xchg
mov
lods
aas
lahf
lret
in
repz
adc
sbb
stc
js
and
push
adc
push
and
iret
les
lods
in
lods
dec
dec
lret
jmp
mov
shr
lock
pop
or
xchg
dec
scas
adc
or
pop
inc
sub
test
pop
movsb
cs
in
xor
pop
xchg
fistpl
xor
aaa
pusha
push
dec
xchg
push
lcall
push
jae
loope
pop
fdivs
aad
jae
rclb
test
pop
and
arpl
ret
push
push
decb
lret
lret
adc
dec
jnp
sbb
jl
outsl
dec
adc
adc
sub
inc
sbb
add
sti
jle
mov
lcall
das
mov
fcoms
mov
mov
out
movsb
ja
in
sti
cmp
jge
xor
mov
pop
mov
cmc
scas
in
and
inc
sbb
fcoml
pop
enter
mov
cmp
inc
add
dec
push
cli
test
test
aas
xlat
js
and
xor
in
xor
push
fxch
inc
cs
dec
push
pop
fcoms
call
jl
push
lock
push
xchg
pop
addr16
cmp
aad
mov
in
ret
mov
mov
in
jp
inc
jg
in
fwait
add
or
ret
shll
adc
icebp
pop
test
inc
les
xlat
mov
scas
leave
xor
movsb
inc
add
js
ret
jg
sbb
jno
and
xor
call
or
mov
scas
inc
int
imul
int
jb
in
mov
sub
call
dec
call
pop
fdivp
adc
repnz
outsl
or
sti
pop
js
xor
jmp
stc
out
jmp
fdivrp
data16
imul
dec
arpl
mov
out
sahf
inc
mov
aad
call
popf
lret
test
pop
mov
daa
push
and
arpl
pop
shlb
xchg
aad
stc
add
sub
cmp
pusha
dec
fcomi
push
popf
scas
jg
sub
add
sub
or
es
in
fidivrl
push
std
out
inc
les
cltd
xchg
imul
ljmp
jnp
enter
outsl
imul
add
mov
inc
mov
int3
inc
or
cltd
sbb
sub
pop
cmp
gs
test
sub
jno
idivb
leave
adc
loopne,pt
iret
cmpsl
stc
and
sti
mov
mov
cmp
scas
jo
rolb
in
shlb
mov
insl
cwtl
aad
fisubs
mov
adc
cltd
lea
ds
dec
pop
pop
push
cmp
mov
cwtl
sub
pop
lods
mov
rcr
xorb
test
out
jl
rorl
dec
das
pop
add
shr
xchg
or
in
pop
and
lret
pop
mov
jecxz
mov
adc
mov
popf
fists
jl
jo
sarb
andl
mov
sub
inc
mov
sti
gs
rol
mov
jbe
mov
sub
insl
xchg
inc
stos
sti
lcall
cmp
inc
pop
xor
hlt
or
jle
add
pop
daa
push
inc
push
jmp
push
mov
sbb
loop
aad
dec
dec
fistl
pop
into
pop
stos
add
mov
aad
cld
jge
iret
fisttps
sti
mov
hlt
mov
push
mov
mov
rcl
sbb
ret
ss
cwtl
lret
inc
jp
mov
lret
test
inc
pop
mov
jp
mov
insb
popa
fisubl
filds
jae
ljmp
test
and
inc
or
arpl
jae
fs
lcall
mov
pop
and
je
cmpsl
lret
xchg
fists
sbb
in
cld
mov
inc
fcompl
jg
sbbl
push
fcomi
arpl
add
adc
jecxz
or
inc
imul
fcmovb
movsl
fwait
xchg
jmp
dec
push
cmovb
enter
mov
out
xchg
ret
fld1
popa
jge
std
or
pcmpgtw
icebp
add
xchg
push
xchg
aad
inc
ror
xchg
xchg
jp
shl
or
daa
jno
sbb
jbe
cltd
fmuls
mov
mull
in
and
lock
xchg
push
scas
icebp
loop
and
out
insl
lret
jbe
fnstsw
jmp
lods
adc
push
push
stos
pop
push
cmp
js
aaa
adc
cmp
jbe
xchg
cmp
jecxz
inc
and
add
sbb
cmp
lcall
inc
aad
cmpsb
push
mov
pop
inc
pop
mov
mov
mov
jmp
jae
bnd
or
pop
popf
sbb
sti
pop
inc
clc
mov
adc
rcl
inc
sbb
mov
or
mov
xlat
bound
xchg
out
xor
popa
jmp
cmp
ret
pusha
jbe
scas
icebp
in
jl
ja
mov
fcompl
jg
xor
jle
pop
fadds
mov
jp
sahf
dec
mov
jnp,pt
shr
repz
adc
inc
sahf
sbb
scas
fadds
pop
movsl
xor
sub
xlat
cmc
sbb
mov
out
push
adc
pop
inc
pop
ljmp
insl
and
jmp
sbb
sarb
out
push
aam
ja
add
shlb
push
in
movsl
dec
push
add
pop
iret
pop
add
decl
adc
mov
dec
push
aaa
shll
mov
imul
pop
push
loop
or
dec
shlb
push
mov
movsb
push
xchg
cld
jmp
mov
pop
mov
or
or
pop
xchg
imul
sub
pop
mov
sahf
xchg
jbe
int
mov
rcrb
repz
pop
clc
les
mov
jmp
je
lds
push
adc
ret
jge
adc
mov
sbb
scas
inc
test
sbb
adc
std
mov
loopne
negl
ror
cmpl
jle
pop
add
fs
lock
lock
cmp
addb
ret
mov
pusha
stc
bound
xchg
mov
push
test
imul
xchg
jae
pop
pop
decl
push
jmp
not
mov
imul
xchg
test
loope
jle
scas
mov
push
mov
loop
mov
xchg
mov
lret
movb
pop
popf
iret
dec
and
or
inc
xchg
lahf
xchg
sbb
push
sti
sub
stc
nop
iret
mov
or
roll
mov
fidivs
cmp
mov
aad
jle
xor
cmp
xabort
pop
sbb
jno
stc
sub
push
fstl
mov
adc
cltd
cmp
fsubr
dec
pop
xor
int3
lcall
cmp
test
pop
push
add
fbstp
lock
push
scas
cwtl
add
mov
and
hlt
mov
sub
test
hlt
scas
icebp
ja
repnz
and
pop
jnp
outsl
shrb
mov
xor
pop
arpl
jns
sarl
mov
inc
stos
aam
or
test
lock
inc
imul
cmpb
inc
test
in
rorl
jo
sbb
mov
adc
fcmovne
jle
jg
test
mov
in
andl
mov
les
insb
add
xor
jno
mov
and
nop
imul
mov
loope
clc
in
jb
mov
pop
or
xor
xchg
sar
mov
adc
mov
pop
hlt
daa
mov
ss
adc
push
sub
pop
sub
repz
das
mov
xor
fucom
xor
mov
sahf
inc
xor
into
arpl
xor
cmp
jecxz
cmp
stc
cmp
jae
std
aas
mov
rcrl
mov
push
xor
cld
push
pop
fcmovb
jnp
xor
adcl
sbb
movsb
jo
xchg
cwtl
nop
fsubl
sti
mov
es
fs
mov
inc
es
enter
sbb
push
imul
andl
stos
or
roll
sbb
fsubs
pop
loope
or
sbb
dec
stos
out
inc
jmp
in
jb
pop
fsubs
gs
jg
cld
loope
xor
xchg
mov
daa
clc
xchg
dec
in
mov
mov
aad
and
gs
pop
lret
rorb
call
jge
popf
add
mov
in
sbb
jmp
test
scas
mov
jbe
adc
pop
rorl
add
add
clc
mov
insl
cmpsb
mov
dec
gs
cli
xorl
xor
mov
push
jmp
lret
pop
xchg
fadds
mov
lds
xor
sbb
and
mov
mov
push
sub
sbb
pusha
jp
lret
fcmovbe
inc
ret
cli
mov
je
fwait
push
adc
in
or
mov
mov
dec
cltd
jns
repnz
sub
leave
push
pop
xchg
imul
inc
xchg
mov
stos
sbb
jo
outsl
xchg
imul
push
cmp
sbb
jg
jge
jns
mov
pusha
rol
sub
shlb
add
bswap
mov
rcr
lock
negb
adc
lret
rclb
dec
push
fcoms
lcall
push
inc
push
xchg
add
sbb
add
sbb
and
enter
mov
mov
aaa
adc
or
mov
pop
push
imul
outsb
hlt
dec
imul
sub
or
std
xor
mov
ret
adc
dec
leave
test
jbe
bnd
stos
enter
xchg
cmp
pop
dec
je
dec
cltd
xchg
xchg
sbb
sbb
cmp
xchg
sub
aas
or
push
adc
call
or
arpl
shll
dec
mov
fdivrs
add
mov
mov
mov
dec
bound
dec
inc
fadds
pop
push
iret
in
test
loopne
jne
imul
mov
neg
arpl
and
repz
xchg
loopne
divl
arpl
mov
push
push
cltd
push
loope
outsb
xor
xchg
dec
and
jno
add
test
popf
mov
and
mov
add
pop
mov
popf
lret
inc
jge
xchg
pop
sub
lcall
or
insl
mov
add
xchg
stos
mov
or
xchg
inc
push
aam
xor
xchg
jb
xchg
cmp
test
ret
adc
mov
test
xorl
addb
mov
add
mov
add
add
or
mov
or
mov
xorb
push
inc
push
push
ficoml
mov
add
rcrb
and
lret
mov
pusha
push
xchg
sbb
rclb
lods
push
lock
push
nop
mov
push
lret
push
push
dec
inc
inc
xor
mov
cmp
imul
xor
jmp
or
inc
xor
repz
pusha
add
in
or
sbb
add
xor
xor
mov
pop
push
mov
push
adc
inc
pop
pop
adc
push
out
inc
pop
adc
pop
fisubl
es
dec
scas
sarb
dec
das
nop
adc
push
jne
cmpsb
sub
dec
adc
scas
ss
dec
lods
rorl
dec
sub
and
push
cmp
dec
sub
stc
in
push
aas
inc
stos
rcrb
testb
inc
sub
cmp
push
push
xor
or
sar
sbb
ja
lods
xor
lods
xlat
insb
jae
mov
mov
and
ffreep
sub
xchg
inc
cltd
and
inc
out
xchg
ss
sbb
repnz
aaa
out
rorl
fld
nop
mov
and
pop
shl
ja
jbe
je
arpl
pop
loop
mov
sbbb
fsubrs
aad
adcl
adc
push
into
add
int
sbb
adc
shll
mov
divb
mov
sbb
jecxz
xlat
std
ret
cltd
dec
pop
andl
add
push
test
pop
mov
push
addb
mov
pop
stos
add
adc
cli
add
adc
les
sti
push
mov
bound
iret
pop
add
in
idiv
popf
scas
inc
add
mov
add
adc
sbb
sbb
subl
and
sbb
push
mov
jp
je
mov
lahf
vphaddubq
sbb
lds
dec
cmp
pop
cld
scas
jle
imulb
xchg
adc
mov
notb
mov
dec
adc
mov
mov
jmp
fstl
dec
int3
test
les
jnp
mov
add
sbb
fildl
mov
dec
cwtl
psadbw
rcl
dec
mov
aaa
leave
inc
loopne
lret
sbb
sub
stos
pop
push
mov
pusha
std
cmpsl
popa
scas
in
push
mov
xchg
test
lret
test
inc
sub
mov
outsb
adc
shrl
fwait
lods
jne
xchg
leave
xor
cltd
lods
and
cmp
lahf
scas
jne
iret
sbb
xchg
out
addb
sub
scas
push
andl
xchg
shl
rolb
xchg
pop
mov
in
or
mov
mov
mov
mov
ret
mov
lea
xor
xchg
push
push
add
sti
cld
inc
pop
mov
fwait
pop
aaa
in
hlt
pusha
je
mov
push
mov
push
out
dec
cmp
call
call
mov
lods
js
fistps
js
lods
mov
std
out
test
lret
jecxz
gs
xor
ss
dec
mov
cli
orb
leave
fsubrl
aad
and
jge
and
xor
xchg
push
test
fucomp
in
dec
push
lret
jle
mov
sti
popf
lret
fsts
sbb
roll
or
xor
and
adc
lock
xor
jp
fbstp
clc
xchg
fidivs
sub
jns
incl
sub
sti
int3
pushf
fbld
inc
fidivrs
addl
pusha
rcr
je
gs
adcl
enter
mov
pop
test
mov
sahf
cmpsb
test
pop
sarb
jne
insl
or
cwtl
int3
out
lods
sub
and
cmp
arpl
lea
sub
insl
dec
xchg
hlt
mov
jmp
sbb
fsts
push
idivl
lds
add
lods
add
inc
fadds
out
std
int
mov
popa
cmpsl
sbb
in
shrb
test
les
dec
or
addr16
js
arpl
or
subb
xor
inc
pushf
push
mov
inc
hlt
xchg
fnsave
cmp
xorl
cmp
loop
or
daa
jp
xor
jmp
push
cwtl
cld
repnz
lret
mov
xchg
xchg
jg
movsb
push
or
loope
sarl
mov
enter
into
xchg
sbb
push
xchg
mov
fsts
icebp
ds
popf
mov
inc
mov
push
add
inc
aam
enter
aad
add
xchg
jg
sahf
dec
aad
jo
push
into
pop
stos
int
lods
popf
jae
pop
mov
push
mov
test
testl
mov
mov
cmp
cmpsl
mov
pop
cmp
add
cmp
outsl
imull
repz
sbb
dec
movsl
add
jae
sti
test
dec
int3
loope
arpl
lock
pop
cmp
stos
or
fs
pop
stos
inc
test
mov
pop
xor
lock
sbb
inc
add
insl
fcmovne
sbb
xor
push
andl
add
sbb
movb
mov
pop
push
xchg
mov
ret
addl
movsb
pop
arpl
cmpsl
jnp
cmpsl
mov
mov
sub
out
mov
or
fsubp
mov
lea
movsl
cmp
dec
cmpsb
inc
aaa
xor
pop
mov
push
push
cld
sub
push
insl
fnstenv
mov
jno
xchg
jl
lahf
in
or
and
jmp
ret
mov
adc
cmpsl
mov
xchg
or
lret
movsl
shlb
fsubrl
dec
pop
popl
cmc
dec
sbb
scas
mov
pop
xchg
pushf
sbb
iret
mov
pop
sub
rcrb
clc
repz
shl
mov
lcall
mov
lock
sbb
inc
inc
push
fimuls
mov
js
lea
sbb
push
outsb
cmp
adc
push
mov
sti
sbb
add
cmp
push
pop
mov
jbe
movsl
mov
pop
test
push
jmp
pop
jp
jg
fstps
call
jns
cmpsb
out
cmp
icebp
scas
inc
out
sub
add
mov
xor
cmp
lret
idivl
loop
clc
mov
mov
repnz
je
cmovg
xchg
inc
cmpsb
test
ret
pop
sbb
add
lret
add
bnd
jae
mov
dec
and
or
addr16
testb
pop
inc
mov
xor
scas
mov
pop
pop
bound
mov
pop
xor
test
sti
push
inc
repz
dec
jle
pop
push
xchg
leave
xchg
stos
mov
jg
sub
xor
mov
into
jo
popa
sysret
jo
sbb
loope
sbb
mov
push
mov
fsts
mov
cwtl
aad
xchg
push
push
sbb
jb
pop
xchg
and
pop
sub
out
cmp
sub
enter
jns
mov
inc
ds
movsb
inc
mov
mov
popa
pushl
les
or
out
pop
mov
std
test
jnp
jge
add
lea
pop
sub
pop
push
sbbl
fsubrl
data16
xor
mov
mov
add
and
test
cltd
and
data16
sub
cmp
jno
dec
pop
subl
es
sub
adc
sub
or
dec
pop
adc
js
xor
rcl
sbb
cmp
in
ret
pop
push
jg
push
in
add
mov
call
arpl
daa
es
or
xor
pop
adc
adc
mov
push
cltd
imul
lahf
mov
mov
lea
and
inc
jne
sub
scas
scas
or
int
les
inc
pop
adc
push
sbb
call
mov
shlb
mov
repz
into
jge
mov
inc
cmp
add
insb
cmp
std
add
ljmp
lock
jb
cld
rolb
sbb
repnz
test
xlat
aad
inc
jmp
je
cld
jae
lret
and
dec
mov
xchg
les
subl
pop
mov
push
addb
stos
dec
cmp
mov
inc
mov
fadd
sbb
cmp
sbb
add
push
test
jae
lea
icebp
loopne
push
mov
mov
andl
cs
xchg
xchg
cli
mov
dec
and
mov
stos
xor
sbb
lods
jnp
fsubr
mov
jns
sti
fistpl
cwtl
lds
xchg
scas
sub
jmp
cmp
and
push
iret
mov
les
mov
inc
mov
cmp
dec
loopne
jmp
push
orb
mov
adc
mov
push
fxch
aas
mov
pop
jb
mov
xchg
push
mov
xor
cwtl
or
adc
fdivrs
movsb
add
stos
push
sub
stos
jnp
jno
mov
jae
mov
xchg
inc
pop
xchg
arpl
pop
sub
push
in
stos
lret
mov
mov
outsb
subl
movsb
test
jecxz
cmpsb
lcall
jg
mov
popf
fistps
sub
jo
jns
sbb
lret
test
add
cmp
jp
cld
loopne
cmp
dec
mov
testl
push
mov
montmul
cmpsb
inc
lds
cmp
jecxz
jmp
shrb
mov
cwtl
loope
mov
lret
idivl
jmp
ss
sub
pop
mov
cmc
pop
adc
push
stos
cmpsl
xor
dec
arpl
add
pusha
cltd
es
outsl
or
xor
mov
adc
xchg
repnz
fdiv
xchg
jp
out
ret
and
aaa
imul
addr16
mov
and
dec
fsubl
fldt
pushf
dec
sub
or
pop
aad
jge
addb
jo
imul
xchg
sar
imul
cmpsl
pop
test
shll
mov
lock
sbb
xor
mov
popf
mov
inc
sarb
mov
test
rcr
pop
stos
or
insl
popa
dec
in
sub
adc
xor
jo
jp
aad
pop
adc
ret
or
mov
mov
pop
and
mov
xchg
xor
dec
inc
dec
xchg
dec
loope
lret
xor
cmc
je
rol
or
sub
lea
rol
loopne
push
in
enter
xlat
mov
xor
pop
pop
mov
bound
pop
insl
cltd
orb
mov
int3
dec
test
fsubrs
mov
dec
inc
and
movsl
mov
cmp
pop
mov
and
gs
fmulp
mov
add
scas
xchg
mov
dec
outsb
xchg
std
sbb
enter
pop
f2xm1
jecxz
mov
inc
sbb
je
fwait
ljmp
mov
cs
fldt
call
xchg
pop
xchg
adc
rcr
xchg
cli
mov
dec
and
adc
mov
xchg
cmpsb
popa
inc
ja
cmpsl
fwait
dec
into
fadd
mov
mov
lods
pop
sub
dec
jnp
incl
sbb
inc
out
pushf
dec
jg
mov
gs
mov
stos
scas
pop
stos
ret
inc
mov
inc
stos
jmp
xlat
mov
repz
mov
cmp
lock
pop
mov
inc
lock
insl
lock
sbb
lret
push
pop
mov
cwtl
lret
pop
shll
xor
mov
mov
inc
addl
mov
scas
mov
xchg
push
aaa
pop
pop
dec
ret
jg
jmp
ret
nop
add
cmp
sbb
push
fstl
stos
push
lock
cs
lret
jns
or
push
sti
add
cmpsb
jge
cli
int3
bound
fistpll
scas
xchg
dec
popf
jo
or
xchg
dec
test
inc
mov
inc
push
mov
add
clc
xor
xchg
push
fcomps
out
ljmp
sti
xor
mov
aam
sti
stos
shlb
dec
push
and
lret
dec
mov
cmc
sub
add
cmc
pop
cmp
jne
pop
lock
jl
adc
adc
neg
jmp
lods
mov
jb
mov
mov
loopne
call
xor
and
adc
cmpsl
jecxz
push
adc
nop
adc
inc
mov
lods
mov
ljmp
mov
test
sti
ja
xchg
icebp
mov
mov
push
jmp
push
scas
xchg
lret
imul
movsl
mov
mov
mov
pop
jg
cltd
ret
mov
es
in
out
dec
js
aad
mov
andl
xchg
or
mov
push
mov
adc
mov
imul
lahf
inc
jns
enter
inc
sti
sbb
dec
mov
shrl
add
inc
gs
je
cwtl
mov
mov
pop
mov
sub
test
repz
cmp
dec
pop
mov
mov
cli
stc
mov
repnz
int3
mov
jne
add
or
add
sbb
pushf
or
rcrb
lahf
pushf
inc
shrl
inc
aad
mov
sbbb
sub
cmp
or
mov
mov
and
inc
xor
push
pop
fiaddl
je
fwait
inc
test
or
divl
xor
add
jg
leave
pop
repz
jo
lds
sbb
popf
mov
dec
shld
loop
adc
outsl
sbb
stc
fisubrl
inc
popf
sub
mov
mov
or
test
enter
push
je
add
inc
mov
xchg
rorb
lods
fisubrs
fsubr
mov
push
fistpll
push
cld
ss
negb
inc
mov
subl
out
adc
shll
int3
cld
add
pushf
push
mov
lock
aad
or
and
adc
mov
mov
icebp
push
push
sbb
in
sbb
jno
rep
lds
gs
pop
jle
in
xor
mov
pop
adc
xor
inc
inc
sbb
iret
into
mov
outsb
mov
ss
mov
adc
mov
test
enter
aad
xor
sbb
stc
xor
mov
mov
sub
dec
es
dec
shll
adc
and
push
lds
mov
icebp
aaa
lds
fiadds
fstl
pop
mov
sti
mov
lea
shlb
js
push
mov
lahf
es
in
mov
fsubr
cli
cli
dec
sahf
ja
push
idivl
fsubr
leave
mov
jbe
fcmovnb
loopne
pop
mov
fucomip
loopne
ds
fisttps
in
imul
cld
sub
mov
and
adc
sub
sbb
aas
pop
in
or
lods
imul
sbb
push
sbb
stos
mov
xchg
clc
fs
lods
mov
fcmovne
mov
push
push
sub
int3
and
jge
sti
adc
push
sub
and
movsl
cld
mov
call
and
sahf
fdivrp
pop
mov
idiv
sbb
pop
fwait
adcb
cld
pop
arpl
idivl
js
or
icebp
dec
cmp
repnz
mov
dec
adc
inc
sub
fadds
stos
iret
call
lea
iret
and
xchg
test
mov
flds
sub
out
mov
xchg
dec
lret
or
dec
mov
into
pop
fisubl
jnp
dec
jae
int3
imul
fisttpl
jge
xlat
xor
inc
sbb
xchg
or
push
dec
repnz
and
fwait
les
xchg
imul
aas
ss
int
fsts
imul
mov
bound
adc
test
jge
jb
sub
fisubl
push
insl
fistl
gs
add
fwait
lods
jle
clc
cli
push
inc
mov
jmp
fucomi
in
mov
jbe
js
mov
or
std
jmp
push
push
rorb
icebp
cwtl
dec
cmp
ret
or
insb
jbe
cli
pop
movsb
inc
and
mov
fld1
aam
popf
icebp
pop
mov
out
mov
jno
insb
aaa
and
popf
jbe
addb
cs
dec
sahf
dec
dec
rcrl
mov
les
inc
lret
fdivl
iret
shrl
mov
jae
pop
push
iret
ret
jmp
rcll
mov
or
movsb
bound
mov
scas
xchg
sub
lret
movsl
ret
dec
cmp
adc
fsubrl
lods
call
dec
call
into
popf
enter
mov
sub
ljmp
cmpsb
bound
fcompl
push
lcall
inc
xlat
adc
sbb
add
mov
sahf
icebp
shrb
jmp
out
pusha
mov
mov
cmpsb
mov
sub
ret
add
std
cmp
mov
and
inc
stc
addb
xchg
inc
jp
or
shrl
jp
movsb
inc
and
pop
imul
sbb
add
add
scas
shr
lret
imul
into
dec
jbe
pop
rcr
or
fcoml
cmp
aas
jl
lds
mov
or
in
pop
pop
or
mov
jbe
pop
rolb
fwait
or
push
cwtl
leave
data16
pushf
dec
and
pop
stos
push
and
xchg
sbb
mov
mov
shl
and
movsl
pop
sub
inc
inc
add
enter
icebp
jp
and
out
jno
and
dec
mov
mov
das
pop
out
jle
cltd
push
jb
dec
loop
fiaddl
aad
loop
icebp
jb
insb
inc
fwait
push
icebp
ret
fildl
mov
dec
mov
add
test
mov
dec
addr16
xchg
orl
arpl
daa
repnz
mov
mov
scas
xchg
mov
lods
mov
int3
faddl
inc
mov
sbb
int
inc
lret
mov
shl
mov
pop
dec
mov
pop
cmp
scas
les
mov
sti
pop
iret
fistpl
sar
add
addb
adc
push
addr16
test
imul
cmc
adc
rolb
push
mov
idivl
stos
sub
cmpsl
xchg
inc
jne
ret
sbb
mov
xor
mov
ret
mov
sub
addr16
loope
cmp
out
cmp
lahf
dec
mov
repz
pop
dec
xchg
idivl
adc
or
data16
dec
aam
stc
ficompl
inc
lahf
pop
aam
add
or
insl
cltd
sbb
les
mov
inc
popf
pop
mov
mov
aam
test
cmp
mov
das
call
in
fwait
mov
fwait
pop
je
adc
lea
or
test
fists
inc
ret
repnz
and
or
inc
pop
adc
adc
stos
inc
sbb
rorb
mov
inc
cmp
jb
lcall
test
xchg
mov
gs
test
lahf
stos
cmp
pop
cmp
scas
cs
add
lock
sbb
jl
and
jns
dec
in
scas
repnz
arpl
leave
ljmp
xchg
fstps
loopne
and
xor
or
pop
jecxz
jnp
inc
stos
xchg
daa
call
fptan
stos
cmp
repnz
xor
stc
inc
pop
aam
or
mov
or
aad
xchg
inc
repnz
adc
push
bound
xchg
inc
mov
cltd
mov
jns
imul
test
sbb
ljmp
js
sbb
cmc
fninit
mov
mov
jns
inc
imulb
cld
and
xor
xchg
pop
sbb
mov
and
mov
xor
push
imull
out
stos
push
fwait
mov
push
fsts
addr16
cmc
stos
dec
aaa
push
sar
cmpb
scas
xchg
pop
sbb
aaa
jo
xchg
or
insl
outsb
xchg
sub
jne
mov
loop
imul
push
fstl
mov
cmpsb
aaa
repz
sub
rclb
and
cld
clc
jb
add
or
cwtl
movsb
xchg
pop
bound
mov
or
cmp
fisttpll
cmp
scas
cmp
popf
jecxz
dec
lea
pop
das
xchg
enter
fcoms
bound
lea
push
jne
movsb
xchg
test
pop
hlt
mov
inc
mov
call
inc
mov
push
xor
rol
inc
loopne
mov
mov
repnz
cli
jbe
jne
mov
js
mov
int3
fnsave
add
in
lahf
loop
pop
cli
stos
bnd
xor
pop
mov
pusha
cmc
cmpsl
dec
pop
inc
xchg
loopne
negl
mov
loop
jns
inc
pop
add
ds
repnz
stos
movsl
adc
add
add
push
xor
dec
lret
mov
jge
enter
sti
sbb
sbb
push
dec
sti
push
out
add
xchg
mov
push
mov
rolb
pop
sub
mov
sbb
pop
jp
mov
out
add
sub
lock
pop
mov
and
inc
ja
in
daa
in
sbb
sub
out
es
mov
lretw
sbb
mov
fsts
in
daa
stc
out
sub
je
fcoms
sbb
mov
adc
mov
sbb
lock
add
arpl
inc
out
mov
mov
dec
sarb
and
push
push
sub
rcl
pop
movsb
loopne
jns
int
pop
out
jno
rclb
out
cmp
or
clc
push
push
mov
mov
sub
inc
lcall
xor
lock
repz
xchg
mov
bnd
cmc
mov
icebp
leave
test
jb
add
xchg
jnp
adc
inc
xchg
jge
sub
rcll
xchg
jns
jne
push
imul
stos
int3
pop
xchg
popf
pop
push
xchg
sbb
xchg
sbb
mov
dec
adc
addl
je
std
push
sti
mov
movsl
lret
inc
dec
cmp
mov
shrl
inc
cltd
push
test
cs
mov
roll
mov
stc
cmp
imul
in
loope
les
adc
sbb
cld
or
mov
stos
mov
aam
and
push
leave
sbb
out
adc
aam
ja
push
outsl
pop
inc
cmp
xchg
cmpsb
mov
pop
subl
xchg
mov
mov
sbb
mov
cwtl
ja
xchg
jp
movsb
adc
xchg
test
adc
cmpsl
mov
movsb
lahf
and
mov
insb
push
or
fsts
pop
xchg
or
add
cmp
mov
lea
insb
mov
fadd
jge
cmp
xchg
lea
fcoms
jmp
pop
push
ds
sti
insl
lahf
jle
dec
pop
lahf
call
iret
outsw
mov
in
dec
sub
dec
inc
in
nop
mov
mov
in
das
ljmp
idivl
sti
popa
push
orl
jbe
mov
jae
mov
hlt
into
add
mov
lret
push
push
rcrb
cli
ss
jg
adc
sbbl
mov
fdivrs
rolb
sub
pop
jge
jmp
lahf
sbb
shrb
out
mov
pop
add
and
add
jo
gs
adc
xchg
mov
into
mov
adc
int3
scas
mov
push
jmp
mov
and
out
shrb
mov
sti
js
test
clc
jb
adc
in
add
or
hlt
js
cmp
daa
push
add
or
sbb
or
mov
fsubrl
std
in
sar
dec
mov
sbb
in
inc
add
popf
jmp
mov
dec
pop
insb
mov
adc
sahf
sub
mov
lds
jl
mov
inc
pushf
pop
add
sbbb
and
cld
jg
hlt
sub
addb
mov
sub
lret
pop
jg
and
lds
sbb
xchg
mov
inc
adc
pop
jo
mov
sahf
aad
inc
sbb
dec
je
into
clc
mulb
dec
dec
or
test
jns
push
inc
loop
sub
sbb
daa
xchg
fisttpl
mov
repz
sbb
ret
and
pop
or
es
xchg
mov
add
cs
inc
cs
jp
into
pop
outsl
inc
inc
pop
pushf
out
test
mov
movsl
xor
int
ss
sub
lcall
test
inc
push
mov
mov
sub
inc
fstpl
push
mov
mov
lahf
divb
aam
push
add
jmp
bound
bswap
pusha
ret
xor
mov
gs
jb
adc
cld
mov
adc
aaa
stos
es
leave
push
or
adc
mov
pop
mov
scas
rcrb
ret
mov
lds
imul
dec
leave
sbb
mov
mov
enter
stos
pop
push
inc
mov
sahf
test
mov
sbb
and
pop
jno
sahf
inc
jg
or
fistpll
xchg
incb
dec
fdivl
mov
sub
or
xchg
pop
adc
push
dec
mov
stos
jb
stos
mov
arpl
sub
mov
fistps
cmp
mov
ret
push
lods
popf
iret
rorl
sbb
inc
adc
cltd
sbb
fwait
lods
ficomps
daa
sarl
push
mov
fwait
in
or
mov
xchg
sti
and
inc
pop
cltd
sbb
jnp
cmp
dec
push
mov
or
or
jecxz
inc
scas
xchg
int3
sbb
sbb
and
mov
div
testl
mov
pop
shll
mov
pop
ret
call
ss
mov
push
push
rcll
add
stc
ficomps
stos
adc
call
jne
clc
enter
mov
jo
popf
xchg
das
std
pop
mov
pop
pop
cs
test
jo
out
rcrb
test
or
mov
test
xchg
aas
push
inc
stc
mov
cmpsl
aad
pop
jns
mov
out
ja
loopne
ret
gs
sub
mov
in
pop
sub
je
push
fs
mov
inc
jecxz
mov
or
lret
adcl
pop
push
test
dec
aad
jne
xor
mov
pop
push
lods
std
or
adc
in
jns
xor
mov
mov
leave
mov
cmpb
popf
add
test
inc
stc
ljmp
cmp
sar
call
push
sbb
dec
subl
or
add
mov
cmp
movsl
inc
lcall
loope
xchg
inc
pop
fmull
enter
pop
add
fisttpl
daa
fsub
loop
into
adc
jge
jo
add
or
add
mov
xchg
aas
dec
mov
fldcw
xchg
mov
xor
fs
mov
mov
mov
mov
cmpsl
cltd
enter
sub
inc
decl
jno
push
and
inc
lods
cmp
fadd
inc
adc
sbbl
call
fildll
cmp
addb
popf
imul
lahf
les
aas
cltd
aaa
mov
mov
rol
dec
cmpsl
mov
xorb
leave
movsl
dec
pop
iret
repnz
xchg
stos
push
pop
stos
adc
cmp
bound
dec
mov
pop
repz
push
ljmp
pop
or
adc
stos
mov
lret
inc
dec
fs
jle
push
pop
enter
cld
mov
addl
jge
mov
scas
inc
fwait
ljmp
sbb
jns
mov
mov
mov
jno
cmpsl
push
mov
adc
cmp
jbe
movsb
inc
inc
xchg
xchg
in
cmp
cmpsb
cmp
jl
inc
cltd
fsubp
imul
or
enter
pop
dec
cwtl
mov
lea
movsb
stc
mov
or
mov
hlt
icebp
and
call
mov
mov
adc
mov
adc
les
movl
in
popf
popf
std
sbb
or
cltd
in
mov
jo
fs
adcb
test
mov
inc
cld
dec
dec
mov
jns
dec
lcall
sbb
das
xor
dec
mov
xchg
dec
bound
stos
pop
in
push
push
scas
shll
movsw
sbb
xchg
fimull
adc
lret
and
xchg
cltd
cmpsb
enter
pusha
adc
and
stc
repnz
mov
push
xchg
adc
adc
mov
mov
mov
xchg
jecxz
jp
xchg
testb
idivl
js
or
jns
insl
jg
mov
leave
add
iret
cld
mov
mov
int3
inc
inc
pop
pop
jne
shr
ret
xor
lock
mov
jno
push
mov
xor
jo
push
aas
in
pop
inc
xor
je
call
mov
push
arpl
stos
mov
cvtpi2ps
mov
dec
mov
and
pushf
or
mov
dec
mov
xchg
sbb
mov
sub
test
push
cwtl
notl
js
ja
dec
sbb
les
clc
lock
dec
sbb
stos
mov
lcall
inc
push
xor
test
lret
lret
cmp
xchg
pushf
lahf
pop
idivl
xchg
subb
adc
js
std
push
fidivrl
gs
add
mov
stc
int
sub
and
lock
lahf
dec
cli
fs
and
fimuls
and
jno
ss
movsl
hlt
or
jne
gs
rclb
mov
dec
ret
push
into
pop
test
aaa
call
ret
loopne
mov
sbb
mov
lock
push
jo
or
rcrb
fldenv
or
ret
mov
icebp
jbe
lea
xlat
jmp
lret
mov
adc
dec
xchg
mov
pop
aas
push
push
cwtl
lods
mov
rcl
inc
movsl
test
cmp
adc
jae
fldt
fists
fcomp
mov
pop
pop
nop
ret
cmpsl
xchg
xchg
fsubrl
push
fucomi
in
iret
mov
and
mov
loope
cmp
or
sub
inc
push
fmul
shlb
sub
mov
sahf
enter
mov
popf
pop
jo
jo
mov
lea
lock
mov
lock
xor
js
stos
push
jp
push
insl
sbb
cmpsl
xor
mov
push
fs
sbb
mov
arpl
mov
shl
mov
iret
filds
nop
sti
std
mov
sbb
sub
pmulhuw
scas
jmp
push
enter
popa
pop
and
outsl
lcall
pop
stos
xchg
pushl
aaa
in
xor
xchg
arpl
cltd
mov
lock
xchg
jge
out
add
push
mov
int
xchg
cmp
enter
cmpsl
dec
push
adc
in
call
scas
inc
xchg
cltd
arpl
test
inc
jg
push
sbb
in
dec
cmp
mov
push
stc
rorb
inc
ficoms
mov
lahf
out
jns
add
enter
mov
xor
jo
sbb
clc
mov
fsubrl
and
push
xor
xor
pop
fistps
mov
push
add
pop
xor
mov
hlt
mov
repz
xor
xlat
les
pop
or
loop
dec
dec
push
cld
cmc
mov
sbb
xchg
enter
dec
fisttps
nop
xlat
push
sbb
jecxz
mov
cmp
dec
pusha
gs
testl
fistps
adc
scas
leave
pop
shlb
add
cmp
add
push
inc
jle
mov
fidivs
jnp
clc
cmp
mov
jmp
add
rcrl
jb
xor
add
inc
dec
mov
and
test
xchg
mov
movsl
ret
sbb
push
ret
test
sahf
ret
xchg
xchg
gs
push
test
add
shll
fldt
lret
and
mov
or
ljmp
sahf
imul
movsb
jae
adc
call
lahf
lret
ret
loopne
ja,pn
je
and
fdivs
sahf
idivb
mov
ja
adc
pop
cld
scas
js
add
xor
iret
mov
inc
stos
pushf
adc
lahf
mov
movl
push
xor
stos
pusha
cmc
lods
outsb
popa
testl
push
test
cwtl
push
push
or
xchg
stos
std
cld
pop
mov
jne
cmp
imul
test
jno
shrl
ficoms
pop
aad
jmp
shlb
mov
xchg
ja
arpl
iret
pusha
repnz
sub
leave
or
dec
push
lret
lds
push
pop
movsl
ret
push
sub
sahf
ret
push
pushf
jle
rcr
call
pop
das
mov
xor
pop
dec
sbb
inc
hlt
sub
es
adc
fiaddl
inc
addl
or
insb
jbe
adc
cmp
loop
pop
xor
in
jle
jg
add
hlt
in
addr16
mov
mov
fnstsw
or
test
mov
sbb
jne
jge
idiv
lods
fstp
jl
les
mov
js
aas
ja
push
arpl
bound
sbb
icebp
jne
xor
ret
adc
enter
ror
pop
stos
xchg
mov
push
mov
push
dec
test
cs
sbb
fildll
clc
add
lret
jb
pop
dec
mov
aam
mov
fisubl
insl
mov
xchg
dec
jmp
mov
aad
xchg
int
enter
ret
test
mov
mov
out
pop
dec
sbb
enter
ret
aam
push
pushf
les
sub
das
cmc
cmpsl
dec
sub
mov
sbb
mov
push
mov
dec
sbb
mov
cmp
lahf
and
stos
xlat
mov
loop
cmp
stos
xchg
ss
dec
ss
sbb
insl
movsl
add
pop
lock
jb
cmp
add
and
ret
inc
inc
xor
int3
mov
xor
xor
jp
pop
xchg
sbb
movsl
aaa
add
mov
add
movl
mov
push
lret
ret
subb
and
jmp
sbb
pop
ljmp
daa
mov
sub
aad
or
add
js
lea
xor
pop
mov
sbb
mov
jle
ja
inc
sbb
pop
xchg
sahf
out
cmp
jae
out
enter
and
lock
mov
mov
or
xchg
mov
cmc
mov
cmpb
jno
pop
out
mov
nop
jg
push
pop
and
mov
loopne
sarl
lcall
xor
dec
sbb
sbb
push
mov
imul
in
movsl
xchg
mov
insl
in
lds
cmp
iret
test
dec
insl
les
jne
pop
jmp
ja
fisttpll
xchg
fldt
mov
pop
test
push
mov
push
or
lret
stos
cmpsb
xchg
roll
dec
mov
jle
cmp
in
fiaddl
inc
mov
out
pop
js
popf
scas
pusha
jmp
cwtl
push
cmp
mov
xor
inc
out
add
mov
mov
pop
fcoml
pop
imul
jae
movsl
jb
cmpsb
shl
out
mov
filds
std
fwait
arpl
rolb
insb
sbb
xchg
packsswb
pop
mov
xchg
test
mov
icebp
cmpb
or
cmp
add
arpl
int
pop
movsl
inc
imul
addr16
xor
ret
xchg
add
cmp
sub
lods
sbb
jmp
fs
mov
fs
xchg
push
sbb
aaa
push
iret
jns
sub
pop
stos
mov
dec
mov
rorb
jmp
rorl
mov
pushf
dec
int
xchg
mov
dec
mov
rcrb
and
pop
stos
mov
xchg
fwait
mov
adc
cltd
mov
add
or
repnz
push
aas
outsb
iret
mov
push
subl
mov
add
insb
inc
rcrl
mov
sbb
mov
movsl
lock
sbbb
sub
das
inc
test
iret
xlat
scas
leave
out
cmp
cmpsl
lods
pop
sub
cmc
cmp
or
mov
or
js
es
sti
cmc
loopne
mov
out
sub
inc
std
in
into
xor
mov
adc
sub
repz
das
mov
and
xor
add
add
ds
or
add
push
push
loop
jmp
je
sbb
or
and
or
sarb
mov
sub
or
push
call
xorb
push
sub
mov
lock
mov
mov
js
scas
jne
xchg
inc
mov
adc
pusha
mov
jle
mov
push
imul
xor
mov
repz
pop
popa
or
push
or
sub
or
lods
mov
rolb
sbb
push
loop
mov
sahf
dec
jae
mov
cli
insb
stos
movsl
lods
cmp
lahf
shlb
fists
insl
cltd
ret
or
cltd
ret
xor
jmp
inc
xor
hlt
lret
dec
fildll
repnz
dec
mov
or
fimull
dec
movsb
sub
daa
cmp
pop
cmpsl
test
or
or
hlt
mov
test
cmp
das
mov
loopne
xor
pop
xchg
jo
push
subb
dec
fld
lea
ljmp
imul
push
and
imul
sub
das
push
int
std
mov
loop
fs
mov
mov
mov
lret
iret
fcomps
adc
cs
push
loope
dec
popa
lods
aad
xor
jbe
outsb
shrb
or
and
adc
push
push
xor
inc
shll
fs
and
jl
adc
xor
popa
and
jnp
push
mov
daa
cli
cmp
movsb
jnp
rcrb
mov
repnz
mov
jl
mov
push
cmp
cmp
xchg
dec
int
mov
push
leave
push
cmp
idivl
sub
cmp
cmp
shrb
and
das
mov
jnp
mov
xor
loopne
mov
mov
jo
cmc
mov
xor
call
pusha
scas
xchg
xchg
jp
jb
mov
divl
pop
cmpsb
loop
xchg
pop
or
ja
clc
in
cmpsl
aas
xchg
in
mov
adc
mov
sbb
xchg
xchg
fisubl
fistpl
jne
lods
jo
push
iret
pop
cld
or
mov
loope
lahf
pop
int3
sti
and
leave
or
push
sarl
push
imul
std
sub
fsubrs
fisttps
test
stc
xchg
imul
inc
dec
inc
pop
xchg
mov
mov
add
fnstsw
jae
inc
mov
and
inc
lret
xor
pop
sbbl
test
bound
inc
movsb
adc
sbb
jl
daa
mov
lahf
addr16
jecxz
adc
lahf
push
outsl
adc
jae
arpl
push
sbb
mov
pop
xor
cmp
xchg
orb
mov
push
inc
aas
adc
jp
xchg
in
daa
sbb
cmpsb
dec
movsb
fsubrl
sub
pop
int
daa
ret
xor
jbe
movsl
out
mov
jmp
xchg
mov
or
lret
mov
lds
pop
stos
ret
sahf
pusha
mov
inc
pop
adc
repz
decl
repnz
ds
mov
and
mov
fisttpl
cli
push
rcll
mov
sub
mov
cmp
cmpsl
ret
fld1
je
sbb
arpl
push
inc
test
xchg
push
mov
and
jne
dec
ja
scas
imul
lock
pop
out
shlb
sub
out
mov
jp
jecxz
mov
xchg
lock
adc
lret
jmp
mov
divb
adc
mov
mov
dec
mov
jbe
fisttpl
xor
xor
loopne
ss
ret
inc
aas
enter
test
frstor
nop
push
pushf
sbb
xchg
pusha
mov
out
or
lods
ret
pop
mov
scas
outsl
jmp
dec
into
jg
int
cltd
xchg
rolb
jp
ficomps
push
dec
xchg
lahf
daa
ljmp
inc
pop
fcoml
lcall
fsubrl
push
xor
jp
addb
adc
mov
mov
mov
sbb
xchg
inc
shlb
cmp
and
rorl
sti
inc
in
mov
push
inc
jge
lods
mov
mov
inc
xor
inc
cmp
push
adcl
rol
repz
das
mov
sbb
xor
je
xor
xchg
mov
or
jmp
jo
sbb
dec
mov
jg
jnp
icebp
dec
ss
mov
sub
dec
mov
call
imul
dec
aaa
repz
jo
jl
adc
pushf
cmp
addb
lret
lret
dec
jl
popf
cli
loope
addr16
pusha
testb
inc
dec
adc
repnz
sbb
out
repnz
pop
mov
js
push
cwtl
cld
xor
adc
add
mov
lret
push
jecxz
repnz
mov
jne
jmp
push
sub
sbb
leave
mov
adc
sahf
incl
mov
push
mov
shlb
aas
lahf
es
mov
shrb
pushf
fisubrs
xlat
test
push
push
mov
xchg
fisubl
addr16
mov
mov
jns
push
daa
mov
lock
xchg
cmpsb
in
inc
imul
imul
or
test
push
lret
pop
stos
dec
push
jmp
push
and
mov
jbe
xor
cmp
cmp
xor
jp
xchg
inc
clc
call
imul
testb
push
fs
jne
dec
sahf
bound
mov
arpl
arpl
inc
xchg
mov
lahf
jns
sbb
repz
incl
inc
add
inc
sbb
loop
adc
and
mov
aam
in
fs
xchg
insl
jmp
sahf
mov
sbb
pushf
repz
insb
mov
fdivl
fbstp
lock
shlb
std
loope
fs
xchg
je
inc
imul
sub
scas
sti
push
cmpsb
pop
std
cmpl
aam
cmp
out
clc
jl
mov
out
push
notl
aas
fld
inc
sbb
inc
enter
cld
or
pop
repz
imul
cmp
dec
pushf
fs
cwtl
dec
divl
xlat
push
fistps
movsb
aam
arpl
xchg
push
dec
jnp
mov
push
hlt
pop
sub
shrb
int
divb
and
gs
aad
pop
sbb
addr16
in
dec
inc
orb
je
pop
addb
addl
cwtl
pusha
and
or
scas
lock
shlb
rolb
cmp
or
ficompl
outsb
jno
icebp
out
mov
in
sbb
test
aam
dec
popf
dec
jo
stc
test
ret
pop
lods
or
les
in
fisubrs
outsb
shl
pop
es
jg
and
jo
ja
fidivl
jmp
movsl
and
test
iret
jmp
mull
scas
fstpt
mov
incb
cmc
adc
or
bound
cwtl
dec
or
inc
push
cmp
lds
push
dec
int3
xchg
jmp
mov
clc
push
sahf
mov
cmp
dec
popf
in
mov
test
push
jle
lcall
popf
insl
push
lea
movb
out
test
dec
sub
test
leave
jp
xor
out
and
cmc
cld
inc
adc
sub
pop
fcomps
sub
add
push
jle
pop
inc
jne
test
xor
lcall
stos
jae
push
lock
jae
rolb
jns
sbb
ficomps
push
dec
stc
jmp
add
aam
jmp
mov
jbe
fdivrs
out
movsb
jge
xchg
call
scas
fbstp
js
mov
fucomip
in
dec
ret
clc
pop
and
lahf
mov
std
out
jne
icebp
or
stc
jecxz
in
mov
add
push
xchg
nop
mov
btc
mov
stc
cmpl
lds
push
sbb
out
jae
pop
add
cmpsl
xor
aad
inc
cltd
mov
clc
gs
push
insl
jmp
insl
jg
push
imul
inc
dec
sub
scas
subl
and
aam
insb
aad
mov
movl
adc
sub
mov
insb
push
repz
lds
sub
push
sub
lds
adc
daa
enter
lods
in
jbe
xchg
add
aaa
push
jge
xchg
jne
and
sub
std
shlw
fstpt
xor
cs
push
ret
daa
pop
pop
push
inc
std
std
call
adc
xlat
sahf
mov
jle
fidivrl
add
dec
outsl
lret
push
sub
add
lds
jbe
clc
push
mov
loopw
jbe
push
inc
dec
adc
pushf
jmp
sub
lret
pop
subl
dec
xchg
and
mov
adc
mov
bound
cmp
dec
xor
sub
aaa
and
jle
push
pop
enter
or
lock
aad
incb
push
ja
lds
js
inc
mov
jl
pop
or
and
mov
std
jp
fsubrs
dec
stc
dec
mov
cmp
jae
jle
mov
sbb
sbb
lcall
and
inc
sub
pop
jl
dec
lret
std
outsl
cmc
sbb
or
mov
cmp
in
imul
outsb
sti
mov
ds
or
adc
xor
pop
jl
xchg
xor
add
loope
pop
add
jmp
movsl
pop
mov
insl
cmp
mov
addr16
mov
in
push
icebp
inc
inc
adc
dec
push
pop
dec
out
adc
mov
mov
repz
dec
pop
push
jg
adc
pop
testb
lds
vandps
mov
xchg
cmpsl
outsb
sub
sub
pop
clc
scas
dec
fs
lods
fadds
int3
ficomps
and
imul
fistps
inc
jg
pop
sub
jmp
xor
jmp
fldenv
xor
out
xor
sub
shrl
inc
inc
out
ss
lcall
cmp
xchg
cmp
xor
adc
nop
add
pmaxub
mov
aam
cmp
or
adc
lock
push
mov
xor
pop
add
push
std
jecxz
arpl
icebp
ds
add
test
sahf
test
aaa
pop
inc
jne
pusha
inc
in
jnp
ja
sbb
stc
jle
pop
push
mov
arpl
data16
push
inc
inc
adc
pushf
sti
mov
or
insb
pop
dec
sub
rcrl
sbb
scas
shr
les
rcrb
and
push
sbb
mov
pop
in
xchg
inc
lret
jne
lahf
das
outsl
jo
push
orb
mov
dec
pop
jecxz
sbb
out
and
mov
push
cmp
or
or
sbb
int
repnz
mov
repz
push
xchg
aas
jns
inc
cli
add
in
push
out
mov
push
pop
xor
arpl
adc
pusha
rolb
cwtl
cltd
jg
add
mov
pop
mov
fsubl
nop
mov
out
mov
jp
inc
lock
out
movsb
mov
sbb
andb
decl
adc
int3
aad
jp
sbb
adc
std
cld
jg
or
outsb
pop
sbb
add
dec
in
adc
loop
and
repz
int3
push
jmp
adc
push
pop
call
sub
adc
mov
testb
pop
or
mov
jnp
pushf
add
negb
lods
mov
mov
xchg
stc
mov
mov
mov
iret
inc
cli
mov
rcrl
out
in
loopne
inc
xlat
popf
lock
adc
mov
pop
int3
xchg
cli
xor
in
cmpsl
add
xchg
push
jno
sahf
scas
das
push
aas
push
xchg
gs
inc
sbb
cmp
jae
icebp
xor
jbe
ss
xchg
ss
and
dec
cli
jle
pop
dec
fbstp
test
outsb
in
and
fs
adc
xchg
add
or
and
mov
jge
daa
dec
nop
lret
xchg
dec
clc
stos
mov
push
cli
dec
jl
xchg
add
add
mov
inc
insl
insl
push
mov
jnp
shll
and
xor
stos
and
in
or
in
pop
sub
shlb
nop
add
push
pop
fnstenv
in
add
nop
or
push
je
mov
fldl
gs
addl
lahf
sub
lock
add
push
in
xor
testl
stc
sti
jo
inc
stos
pop
sti
sub
and
ret
inc
cmp
cli
cmp
sbb
jo
xor
aaa
rcr
icebp
push
sbb
mov
addr16
and
arpl
rcrb
xor
sbb
shrl
mov
fnstcw
roll
add
add
mov
inc
mov
jns
addr16
lock
push
sbb
or
inc
jmp
jle
int3
adc
repz
sub
int
xchg
ds
cmpsl
arpl
or
movsb
insb
inc
out
mov
push
and
fdivr
dec
pop
insb
dec
scas
int
mov
sub
int3
pop
sbb
ja
sbb
dec
fs
ss
push
icebp
hlt
mov
push
jno
daa
loop
sub
fildll
roll
in
testl
ljmp
sub
add
pop
iret
pop
pop
cmp
leave
push
inc
ficoml
inc
sbb
arpl
or
push
xor
adc
subl
push
loope
cld
arpl
shlb
xor
jbe
adc
mov
fimuls
xchg
push
mov
loop
cli
notl
ss
clc
sbb
inc
pop
movsb
pop
push
in
dec
push
push
popl
xor
mov
testb
add
or
aad
jecxz
fstps
xlat
adc
shlb
push
pop
aas
mov
les
dec
dec
xor
mov
out
insb
jae
fimull
dec
pusha
daa
sbb
imul
pop
scas
xor
mov
cltd
es
leave
xchg
cmp
pop
jns
or
mov
icebp
pop
js
ja
iret
adc
pop
cli
dec
incb
nop
les
in
mov
push
out
cmp
popa
add
cwtl
pop
cmpsb
push
inc
js
inc
mov
jge
xchg
out
jno
inc
inc
xchg
dec
adc
sbb
hlt
pop
repnz
cwtl
ds
jbe
mov
push
mov
fsubl
nop
mov
out
mov
jp
inc
shlb
movsb
mov
sbb
andb
decl
adc
int3
aad
jp
sbb
adc
in
cld
jg
or
outsb
pop
sbb
add
dec
in
adc
loop
and
pushf
scas
scas
sbb
rorl
stc
dec
or
testb
pop
push
jg
in
ja
sub
sbb
xor
jmp
scas
sub
mov
gs
out
movsl
dec
lods
rorl
lcall
fdivr
fdivrp
and
std
rcrb
push
ss
xor
insl
loope
cli
pushf
add
push
out
cmovo
adc
cmp
out
fucomp
adc
stos
insl
and
rolb
xor
dec
sbb
sbb
lea
fimuls
xor
in
or
aaa
out
xor
xchg
jb
mov
or
out
es
fnstsw
inc
jbe
mov
mov
nop
cmpl
jno
in
sub
fdivl
add
sbb
rolb
neg
push
mov
icebp
loopne
fs
cmp
jmp
test
dec
fidivl
scas
test
mov
or
mov
lret
mov
rcrb
mov
cmp
aam
movsb
push
cmp
mov
test
jle
sahf
jns
cmp
js
push
in
lret
imul
inc
ja
dec
test
jl
dec
cli
sbb
xchg
loope
test
pushf
ds
cmpsb
scas
jae
test
test
push
pop
mov
es
xchg
mov
es
popf
aas
mov
outsb
pop
jecxz
lods
sbb
sbb
or
sub
pop
adc
jo
mov
daa
jno
or
xchg
enter
out
jge
or
addb
sub
push
incl
add
outsb
pop
cmc
insb
maskmovq
divl
outsb
jb
or
lea
add
in
cmpsb
sbb
lret
cmpsl
adc
dec
mov
mov
shrb
popa
fsubp
inc
xchg
int3
push
popa
in
adc
negb
xchg
cmp
loop
mov
in
pushf
notb
lret
xchg
ror
push
clc
daa
out
xchg
in
enter
movsb
jbe
outsl
in
xchg
aaa
outsb
lods
and
orb
xor
test
xlat
add
das
xor
sbb
jb
pop
test
out
and
sub
loopne
pop
int3
jo
jns
sbb
call
pop
je
jo
in
cmc
xor
xor
loope
sbb
push
xchg
jb
loopne
fnstsw
or
data16
dec
lds
inc
jne
jge
xlat
sub
fs
ja
mov
cmp
ss
jns
out
test
cld
and
stos
std
xor
fmull
fcoms
popf
inc
jp
in
gs
sbb
call
lret
adc
jbe
cld
lods
push
dec
jb
adc
mov
ja
shl
jle
adc
mov
cld
lret
mov
in
adc
push
mov
enter
ret
push
ja
mov
je
inc
mov
jmp
and
mov
cmp
test
andb
insl
and
push
sub
mov
std
lods
pop
pop
js
incl
inc
add
out
outsl
jo
inc
jne
push
xlat
insb
add
sbb
je
rclb
out
add
xor
sub
pusha
jo
dec
add
lret
inc
sub
hlt
punpcklwd
out
dec
cwtl
jb
pusha
jb
cmpsl
aas
sub
or
adc
pop
es
inc
fsub
cld
pushl
mov
mov
loope
push
inc
inc
mov
pushf
imull
jp
sti
cmp
loopne
sbb
pop
ret
mov
sbb
in
ret
gs
push
lahf
xchg
add
mov
and
cmc
sub
dec
inc
ja
mov
xrelease
jno
stos
subl
push
jle
lods
xor
cmc
xorb
fst
push
pop
imul
daa
sbb
popf
dec
dec
sub
xchg
call
jns
dec
mov
js
lcall
jns
pop
mov
dec
repz
fwait
mov
sub
in
mov
inc
cmp
aam
jne
dec
lods
bound
fstps
and
sub
cmp
sub
mov
mov
leave
test
mov
adc
bound
cs
lods
push
jbe
out
add
bound
xor
je
in
mov
fisubs
repz
pop
add
push
mov
hlt
out
or
jo
daa
jg
sbb
cmpsb
movsb
jl
insb
xor
push
and
mov
shl
xor
mov
mov
jmp
in
mov
or
jbe
clc
mov
lret
mov
add
ljmp
dec
sbb
test
sub
jo
xor
xor
in
pop
and
pop
adc
fs
dec
push
mov
mov
inc
or
std
je
daa
xchg
and
pop
cmp
inc
test
test
push
pop
mov
es
xchg
mov
push
aaa
popf
aas
mov
outsb
push
jecxz
lods
sbb
sbb
or
sub
pop
adc
jo
mov
daa
jno
or
xor
xchg
enter
out
jge
or
sbb
mov
cmp
iret
jnp
jle
mov
out
sete
cmpsb
add
mov
pop
addr16
sbb
imul
push
inc
clc
and
adc
jg
push
cmpsb
insb
popa
fdivp
inc
xchg
int3
push
popa
in
adc
negb
xchg
cmp
loop
mov
in
pushf
notb
repnz
xchg
ror
push
clc
daa
out
xchg
in
enter
test
outsl
in
push
aaa
outsb
lods
cmp
je
fisttps
jg
xor
test
xlat
add
sbb
ret
std
decl
sub
lock
cmp
add
sub
adc
sti
loopne
mov
scas
sahf
scas
das
pop
cmp
cmp
rcl
push
fstps
ret
xchg
push
pop
loopne
fnstsw
or
data16
dec
lds
inc
jne
jge
xlat
sub
in
popa
ja
mov
or
ss
jns
out
test
cld
and
stos
std
xor
fmull
lcall
mov
stc
in
gs
sbb
call
mov
add
mov
lahf
mov
mov
mov
mov
fs
cs
jge
add
push
cmp
push
es
ret
push
ja
mov
je
inc
mov
jmp
and
and
andb
insl
and
push
sub
mov
std
lods
pop
pop
js
incl
inc
add
mov
js
jne
cmpsl
xlat
insb
add
sbb
je
rclb
out
add
call
pop
xchg
cmpsl
mov
test
sub
mov
adc
shlb
in
mov
jge
adc
aaa
mov
inc
jne
lods
lds
sub
inc
fildll
stc
fistpl
sbb
testb
repz
jge
roll
adc
add
fwait
out
loope
popf
pop
adc
xchg
dec
jl
xchg
or
mov
cs
mov
pop
gs
adc
mov
js
pop
int3
pushf
push
bound
dec
scas
sar
les
rcrb
and
pop
je
sub
fs
jle
jle
cmp
add
pop
loop
call
jns
dec
mov
js
lcall
jnp
pop
mov
leave
out
paddq
jge
dec
mov
jl
fs
cmp
aam
jne
dec
lods
bound
mov
mov
add
push
sub
mov
mov
leave
cmp
cmpsb
mov
aaa
out
mov
je
fcomps
push
lods
arpl
adc
xor
add
push
or
addr16
clc
adc
inc
into
lret
push
add
loop
and
testl
or
jo
daa
jg
sbb
cmpsb
movsb
jl
push
pop
mov
shl
xor
mov
mov
jmp
in
mov
or
int
mov
mov
add
ljmp
push
mov
xor
xchg
add
jns
sub
inc
in
xchg
sbb
dec
inc
testb
jo
mov
add
mov
jg
jge
mov
jg
pushl
stc
cltd
outsl
push
or
mov
bnd
cmp
push
pop
cli
jae
push
push
cltd
dec
jno
mov
nop
add
pmaxub
aas
sub
or
and
add
sbb
fnstcw
xor
pop
add
push
std
jecxz
arpl
mov
imul
cli
ja
or
pop
inc
jne
pusha
inc
in
jnp
ja
adc
inc
fs
or
push
mov
in
xlat
push
in
adc
xlat
stos
rcll
test
cmp
dec
sbb
arpl
popa
scas
push
and
and
aad
bound
pushf
mov
divb
sbb
push
jl
xchg
in
and
push
negl
jne
out
mov
add
loope
into
pushf
sbb
repnz
cmp
adc
push
push
xor
push
addl
sbb
int
ljmp
push
pop
dec
jae
push
xlat
insb
jbe
push
pop
cmpsb
fsubrs
and
addr16
jo
mov
insl
push
push
inc
incb
add
pop
andb
andb
pop
lods
daa
mov
arpl
rcrl
xor
mov
mov
lahf
cmp
loop
fs
add
push
test
mov
cwtl
and
test
inc
xor
lea
mov
sbb
out
cmp
adc
cmp
push
cmp
jae
push
aas
mov
loope
arpl
outsb
add
sbb
sub
xchg
add
fisubrl
pop
outsb
push
es
dec
mov
jle
cltd
lds
in
je
ficomps
cli
pop
inc
movsl
add
cld
mov
lods
push
sub
or
sbb
mov
adc
fdivrs
bound
lret
movsl
jp
cwtl
inc
push
inc
mov
sub
call
or
mov
pop
push
das
xchg
pop
add
inc
cltd
mov
test
cwtl
mov
dec
sbb
pop
movsl
mov
mov
mov
mov
fmulp
jns
push
sub
divl
push
jnp
add
pop
test
xor
push
outsb
xchg
fisttps
mov
mov
push
jnp
mov
xor
xor
sbb
xorb
lret
test
arpl
mov
xchg
ret
add
or
test
cld
add
les
leave
dec
pusha
mov
aaa
pushf
arpl
sti
add
inc
pushf
bnd
mov
int3
sub
xor
inc
mov
mov
add
cmp
mov
aam
xchg
popf
xor
test
sub
mov
stos
cmp
xabort
pop
fdivrl
and
orb
and
inc
cwtl
js
add
xchg
movsb
jl
int3
pop
pop
stos
shr
ss
fldcw
mov
icebp
ds
movsl
or
inc
sbb
xchg
fldl
lcall
or
loop
cmp
icebp
mov
xor
aad
test
in
aad
mov
mov
mov
dec
push
mov
push
cmp
pop
sbb
sub
sbb
push
cmp
dec
sub
lcall
push
inc
dec
lcall
jbe
insb
lret
fidivs
and
repnz
pusha
loop
and
sub
or
call
mov
cmp
xor
jnp
addr16
inc
addr16
inc
shlb
xchg
cli
repnz
addr16
insl
dec
add
ja
jnp
aaa
mov
pop
add
pusha
cli
sbb
add
in
pop
pushf
jnp
fnsave
mov
das
dec
stc
inc
sbb
test
aaa
in
jbe
mov
pop
mov
int
jae
mov
sti
xchg
insl
iret
scas
je
mov
and
or
subl
sub
dec
mov
jmp
fwait
imul
stos
push
and
lods
iret
movsb
stos
inc
cmp
and
lods
mov
stos
mov
pop
in
xchg
dec
mov
sub
or
xchg
and
enter
test
xchg
pushf
mov
lds
fwait
lret
dec
fisttps
mov
jns
repnz
pushf
lahf
iret
pop
leave
loop
test
mov
add
mov
mov
push
and
inc
xor
movsl
ret
pop
mov
mov
fwait
mov
mov
repz
loopne
push
je
test
inc
push
stos
orb
icebp
adc
push
dec
mov
shl
mov
enter
enter
ret
pop
inc
mov
and
push
mov
imul
pop
sub
daa
push
sub
mov
mov
xchg
vmulps
scas
push
dec
jns
arpl
xor
es
in
lret
js
xlat
das
xchg
stc
cli
out
mov
in
mov
test
sbb
jge
mov
mov
stos
xchg
and
into
dec
movsl
xchg
aaa
mov
push
imul
cmp
sub
hlt
test
mov
popa
je
addl
and
or
mov
xchg
rcr
xor
mov
adc
adc
cmpsb
pop
dec
movsl
das
ss
jne
mov
or
fnstcw
xor
std
movb
mov
push
cmp
mov
and
insb
add
mov
jo
xor
and
fiadds
aam
or
in
xchg
test
sub
xor
cmp
sub
lods
pop
cmpsb
mov
aaa
jg
mov
pop
imul
sub
cmp
pop
imul
movsl
lahf
and
cmp
pop
test
mov
movsb
ss
pop
jae
jl
gs
push
sub
or
into
xchg
add
xchg
rorl
mov
cmpsb
xor
xchg
fs
cli
aaa
cmp
sahf
cmp
ret
cmp
in
pop
movsl
scas
cmp
xchg
inc
mov
addb
ljmp
arpl
mov
mov
jmp
jecxz
xchg
pop
lods
out
jno
loope
jb
jg
sub
icebp
pop
jnp
aaa
add
jle
leave
loopne
sub
mov
lahf
add
xlat
xor
fldcw
mov
shlb
mov
adc
or
xor
push
fs
mov
push
adc
xor
imul
pop
or
daa
movsb
sbb
xchg
pop
incl
mov
pop
jae
lret
sbb
dec
fs
in
cmp
sbb
jge
and
repnz
xchg
xchg
int
test
lahf
aad
xchg
jns
pop
ljmp
push
fmull
sub
push
sbb
pop
pop
jo
ds
mov
out
je
cmc
xor
adc
imul
dec
mov
ror
mov
test
shll
out
fwait
lahf
adc
fildll
out
cli
je
jo
xchg
stos
mov
in
cmp
loope
movsl
xorl
loope
xchg
enter
mov
or
fisubrs
fsubrs
dec
mov
and
test
or
lahf
cmp
jae
subb
cmp
ljmp
aad
cld
dec
lret
mov
sbb
jmp
cmp
add
and
leave
outsl
mov
dec
ficomps
icebp
mov
dec
jmp
cmp
ljmp
jae
jp
xchg
cmp
xchg
stc
cli
cmp
push
mov
ljmp
cltd
push
das
test
mov
stos
xchg
fildl
push
loope
ss
shrb
arpl
sub
fistpll
adcl
mov
andl
arpl
loopne
adc
lds
mov
repnz
or
push
mov
jno
xchg
ss
or
pop
outsl
mov
push
int
lahf
cmpsl
test
jl
js
fstl
mov
mov
daa
xchg
enter
hlt
rorb
ret
stos
mov
push
cmc
adc
inc
xor
adc
aam
icebp
pop
sbbl
add
out
out
jnp
inc
fsubs
xchg
in
fcoms
push
adcl
mov
and
xchg
xor
leave
push
adc
dec
push
and
inc
mov
inc
and
movsb
mov
adc
xchg
aam
sbb
mov
fdivrs
cmp
push
inc
adc
push
mov
std
mov
dec
aad
jns
fimull
jbe
movsb
inc
sub
daa
test
scas
add
pop
jg
add
sub
cmpb
std
jl
arpl
add
in
mov
popa
mov
dec
mov
jno
popf
call
cli
test
jnp
subl
xchg
pop
cmpsb
inc
lds
arpl
out
movsb
frstor
xchg
inc
lds
add
push
arpl
rolb
pop
testl
mov
daa
jl
fs
vhsubpd
jno
scas
lods
out
mov
inc
outsl
adc
int
icebp
ss
xor
dec
sbbb
aad
pop
mov
frstor
inc
xchg
std
jb
aaa
lret
sub
dec
dec
sbb
fld
sbb
addl
andb
fs
add
jno
xchg
outsl
cs
jne
fdiv
jnp
cmp
test
mov
dec
loope
and
popf
lods
push
stc
movsb
subb
cmpsl
in
pop
stos
mov
add
stc
jmp
xor
or
push
bound
dec
cmp
and
sub
mov
sub
daa
dec
pop
les
aaa
jge
push
mov
popf
cmpsb
and
adc
and
and
inc
xor
jae
pop
dec
mov
and
rcr
inc
xor
inc
inc
mov
xchg
jecxz
pop
mov
sti
clc
sbb
mov
push
cmp
add
ret
pop
dec
daa
ds
into
or
addr16
push
mov
adc
dec
stos
fst
leave
test
je
mov
push
lret
test
out
cmp
and
popf
rep
mov
mov
fmuls
inc
lcall
dec
sub
mov
pushf
jae
jns
add
pop
mov
xchg
mov
cltd
lods
add
xchg
dec
xchg
mov
cld
sbb
inc
shlb
idivl
rcrl
mov
fildll
xchg
inc
push
rcrl
jecxz
out
push
lods
mov
aas
out
lock
cld
sbb
sbb
cli
sbb
insl
sahf
rcll
jecxz
iret
mov
adc
mov
rolb
test
mov
fnsave
xor
loop
sbb
jle
add
mov
imul
mov
dec
jnp
mov
ss
xchg
pop
fdivr
aas
mov
mov
jmp
inc
loop
int3
or
xchg
mov
pushf
jl
sbb
jb
push
sub
sub
aam
arpl
test
sbb
inc
shlb
in
mov
aam
or
pop
mov
rclb
inc
mov
inc
mulb
fildl
pushf
and
rcrl
inc
xor
lahf
fisttps
das
roll
inc
cmp
xor
test
or
es
fs
pop
xchg
pop
xchg
fcoms
ljmp
stc
mov
push
mov
inc
insb
orl
xor
pop
mov
jae
enter
loopne
pushl
cwtl
insb
loop
mov
shr
mov
das
shrb
leave
fsts
dec
adc
mov
mov
insb
cmp
ljmp
push
cli
xchg
repz
push
jg
or
mov
pop
or
add
pinsrw
pushf
dec
lods
aad
jmp
ficompl
cmp
shrl
xchg
lock
es
fucomp
push
dec
fidivl
add
push
cmp
lds
cmpsl
fmuls
jp
or
sub
stos
rorl
mov
cmp
fmul
movsb
std
imul
cltd
sbb
jne
ret
push
imul
sbb
add
enter
scas
andl
jecxz
add
xchg
cmp
cmp
mov
and
inc
add
clc
lahf
cld
pop
cmp
xchg
mov
filds
dec
jbe
fwait
lea
dec
push
sbb
mov
in
sbb
enter
rcrb
lock
jbe
mov
pop
sub
xor
pop
mov
addl
pop
test
outsb
cli
stos
ss
sub
cmp
movsl
cmpsl
mov
clc
mov
loopne
shll
and
and
pop
mov
into
iret
popf
addr16
fsubrl
lods
sarl
dec
rorb
xchg
pop
stos
push
and
mov
and
scas
mov
and
xor
mov
cmp
pop
pop
jae
pop
mov
inc
scas
pop
mov
lret
pop
enter
sbb
pop
and
sahf
mov
lret
in
ror
xchg
mov
loope,pn
pop
push
sbb
and
jmp
repz
push
pop
inc
mov
add
outsl
and
insb
cltd
cmpl
adc
pop
and
outsl
xchg
mov
and
and
adc
or
pop
insl
xchg
inc
lods
in
shlb
icebp
enter
sub
or
or
push
es
rorb
lock
popf
rclb
mov
pop
in
lret
sbbl
mov
mov
jecxz
jne
mov
testl
dec
fstl
lret
cwtl
insb
and
mov
mov
repnz
sbb
test
pop
dec
or
and
mov
xchg
dec
mov
mov
mov
insb
daa
xchg
xlat
pop
mov
sbb
inc
fisttpl
dec
pop
stos
xchg
push
dec
xchg
xchg
orl
cmp
pop
out
or
push
fmuls
into
scas
pop
popf
sbb
mov
daa
in
jl
cmpb
jo
daa
andl
test
out
jmp
inc
xchg
mov
nop
cmp
push
shrb
mov
fs
mov
das
inc
sub
test
aaa
mov
push
repz
dec
pop
ficoml
lret
cmpsl
dec
hlt
icebp
daa
shrb
test
icebp
sub
and
mov
std
mov
mov
scas
shrb
inc
dec
das
lret
jecxz
mov
push
aaa
mov
and
lods
add
movsl
jg
and
rcrb
cld
imul
imul
shr
div
pop
mov
fucomp
jae
jecxz
dec
mov
lods
test
xchg
std
stos
adc
rcrl
mov
push
fwait
push
and
mov
test
lods
push
sbb
subb
and
dec
cmpsl
sbb
and
mov
dec
adc
mov
jle
cmpl
xchg
jp
pushf
jo
cmp
inc
fildll
out
push
test
out
dec
mov
xchg
sbb
es
mov
fs
lea
push
push
pmulhw
xchg
enter
std
pop
sti
insl
mov
lea
sbb
cmp
sahf
loop
mov
in
rcr
xchg
dec
icebp
dec
pop
jmp
scas
incl
daa
lock
xor
add
cs
andb
xchg
lods
aaa
jns
mov
xor
mov
cmp
mov
adc
fwait
clc
mov
push
lahf
mov
mov
jbe
fldt
jo
xlat
fldl
mov
mov
cmpsb
mov
fmull
and
lds
movsl
data16
add
movsl
push
and
dec
mov
jno
shlb
dec
lods
shr
pop
sbb
mov
and
bound
fdivrs
cmp
xor
ret
sub
jle
aad
sbb
pop
dec
and
sbb
mov
or
or
movsb
xlat
out
push
enter
cmp
xchg
mov
fldenv
fsubrs
pusha
mov
lds
mov
rclb
aas
or
adc
and
ja
xor
inc
int3
add
pop
loope
mov
push
pop
add
popl
cmp
ja
nop
xor
inc
iret
cmpsl
ret
leave
lods
cltd
lret
movsl
js
adc
and
mov
cmp
dec
scas
sub
cmc
fildll
jae
lock
sub
pop
int
test
add
or
lea
dec
bound
cmp
stc
movsb
xchg
push
cs
ffree
mov
pop
scas
out
pop
mov
into
popa
cwtl
pop
sub
mov
fwait
push
and
pop
jns
clc
adc
jmp
and
insb
mov
push
mov
mov
xchg
mov
and
pop
pop
xlat
mov
mov
mov
sbbb
xchg
mov
mov
mov
sub
or
leave
lret
or
or
jecxz
dec
dec
add
cmpsl
idivb
jmp
aad
mov
sub
leave
test
mov
sub
das
mov
add
jg
test
push
mov
sar
sub
cmpsl
cld
test
in
test
gs
shrl
hlt
int
pop
pop
in
dec
mov
in
dec
cmpsl
out
cmpsl
mov
or
cmp
rclb
xchg
fimuls
push
imul
mov
push
aad
mov
mov
lea
xor
inc
and
add
xchg
cmc
ret
or
fs
jo
cmp
sub
inc
lret
jmp
xchg
movsl
xor
pop
lods
cmp
jnp
fs
pop
pop
inc
bound
out
fmuls
sub
inc
enter
out
inc
push
les
js
hlt
or
imul
xchg
jbe
shlb
adc
or
add
stos
mov
and
ss
push
mov
pop
sub
cld
shll
xchg
fildl
scas
cwtl
mov
inc
stos
adcb
jle
mov
test
inc
and
and
cmp
sbb
movl
sbb
daa
popa
xchg
dec
sbb
xchg
fwait
and
xor
jae
faddl
dec
insb
jbe
lret
xchg
ficoms
ficoms
pop
repz
adc
adcl
add
mov
test
dec
xchg
lods
push
fsubr
xorl
xchg
and
cltd
stos
bound
movq
pop
xchg
mov
les
fwait
enter
je
dec
jl
jmp
fimuls
push
adc
test
popf
sub
popf
pop
sbb
and
dec
mov
and
ds
cmpsl
dec
lahf
lret
hlt
mov
push
and
mov
push
adc
mov
lahf
into
xor
sbb
stc
lods
pushf
dec
leave
adcb
xor
jne
push
and
pop
cli
lret
and
cmp
bound
xor
cmp
repnz
fidivrs
push
jne
lret
jmp
stos
xchg
mov
lahf
add
cmp
mov
filds
mov
mov
fucomi
in
mov
and
fdivrl
sar
add
inc
imull
test
fsubrs
or
es
jl
xchg
xor
push
enter
inc
out
or
jmp
pop
cmp
sar
outsl
cmp
mov
ret
sbb
outsb
aaa
sbb
adc
jmp
fwait
sub
cmp
ret
das
cmp
les
add
ss
movsl
dec
pop
mov
lods
sti
jl
popf
in
cld
mov
xlat
hlt
mov
mov
xchg
or
sti
lods
sbb
jmp
mov
movsl
push
and
clc
lret
sbb
loop
icebp
arpl
sub
mov
into
pop
inc
fcmovu
sahf
dec
pop
jno
lret
inc
lret
lret
dec
mov
aas
or
jno
arpl
mov
mov
lds
pop
xchg
push
js
in
jge
inc
je
repz
clc
sbb
and
inc
cmp
xchg
xchg
clc
insl
xor
inc
addr16
push
jecxz
pop
cmp
cmpsb
mov
enter
ret
test
or
test
jle
jae
clc
or
mov
flds
sahf
jp
les
add
mov
inc
cmp
jge
into
pop
into
popa
das
push
xchg
loopne
adc
mov
repz
adc
shl
hlt
mov
clc
enter
fdivp
mov
lahf
xorb
das
fidivs
and
sbb
lahf
push
clc
cmpsl
pop
mov
sbb
inc
pop
lret
fucom
fnstenv
lods
dec
sub
pop
xchg
pushf
lds
fisubrs
pop
jae
inc
inc
cld
lcall
dec
ret
enter
leave
mov
repz
enter
lahf
jle
sub
jg
int3
mov
cwtl
or
inc
out
sti
pop
test
and
js
clc
adc
cwtl
mov
addr16
loopne
fdivrl
push
mov
xchg
lds
enter
push
xchg
lahf
test
jmp
sbb
push
out
enter
sbb
push
cmc
pop
daa
xor
xchg
dec
mov
mov
incb
inc
sbb
dec
cmp
xor
mov
popf
add
pop
mov
jge
inc
subl
repnz
lcall
mov
pop
or
into
lcall
xor
aad
test
pop
and
xchg
sahf
mov
push
mov
jge
jge
out
mov
ja
loop
inc
dec
jo
xorl
add
push
arpl
sbb
jb
mov
pop
test
add
push
fcompl
ljmp
popf
jl
mov
add
cmc
lahf
addl
inc
or
pushf
mov
push
mov
je
arpl
fwait
out
fldl
or
imul
xchg
push
push
stos
cmp
and
mov
mov
pop
push
sbb
pop
sub
sub
lea
out
and
mov
mov
jecxz
adc
ret
das
push
test
sub
mov
in
cmp
mov
mov
lahf
lret
inc
lahf
dec
lahf
mov
mov
mov
nop
aas
ficoml
imul
mov
push
lods
add
push
dec
mov
ja
mov
in
jno
icebp
dec
stos
imul
adc
fisttpll
jecxz
daa
push
sbb
fdivr
jns
stos
in
popa
jno
and
fnsave
push
mov
add
dec
mov
lods
add
pop
nop
inc
jg
mov
fimuls
rol
sub
pop
xor
inc
sti
jle
pop
mov
mov
xchg
inc
test
dec
xchg
inc
lret
fidivrl
lock
std
movsb
cmp
pop
fdivrl
lret
xor
push
dec
test
int
loop
je
clc
sub
hlt
jns
add
insl
mov
sub
sub
dec
adc
popa
sahf
mov
je
movsl
mov
stos
add
fildl
les
pop
hlt
lds
dec
lahf
cmp
stc
cmpb
inc
and
add
cmp
int3
or
subb
rclb
push
outsl
push
addb
fistps
inc
xchg
fbstp
lret
aaa
mov
jo
cmpsl
mov
jo
ss
clc
addr16
adc
jecxz
cmc
add
in
ret
rorl
dec
sub
cmp
inc
push
jno
outsb
inc
sbb
push
inc
test
js
mov
mov
stos
mov
lcall
cmp
jnp
fwait
mov
and
jne
mov
ret
push
jl
mov
shr
cmp
ret
pusha
add
scas
div
sbb
jnp
sbb
fmuls
imul
dec
movsb
and
dec
mov
adc
mov
insl
imul
les
jg
mov
in
stc
inc
add
jae
push
lock
add
in
jbe
ds
add
cld
mov
inc
jmp
shr
xor
shlb
xor
popa
imul
mov
lret
fdiv
inc
jbe
pop
outsl
push
aad
popa
add
xor
inc
ret
js
daa
pop
adc
hlt
add
xchg
cwtl
jl
stos
std
mov
mov
leave
add
inc
xchg
popa
inc
cwtl
pop
jo
pop
dec
sbb
popf
fists
add
cmp
mov
fwait
cmp
leave
jns
clc
jb
mov
pushf
adcl
cmpsb
mov
jae
xchg
lret
iret
cmpsl
ret
test
mov
std
add
mov
insb
inc
les
sbb
jmp
xchg
dec
push
leave
mov
outsl
fbstp
test
idivb
mov
push
std
jnp
jno
mov
xlat
add
mov
enter
pushf
add
add
or
and
mov
pop
mov
fidivrl
mov
mov
ret
jp,pt
mov
subl
pusha
test
hlt
inc
mov
notb
inc
ret
push
mov
pusha
test
movsl
popf
inc
and
imul
lahf
shrb
jnp
ret
dec
or
int3
mov
jl
fwait
mov
int3
lods
xchg
fdivs
call
pop
into
push
popf
push
stos
icebp
mov
xchg
cmp
jnp
js
add
mov
out
enter
inc
sbb
mov
hlt
cmp
fisttpl
mov
movsb
fisubrs
mov
mulb
aam
dec
fisttpl
sahf
or
or
int
jg
outsl
call
push
dec
xchg
dec
sbb
mov
or
cmpb
push
hlt
mov
addb
xor
dec
stos
and
mov
lcall
std
cmpsb
mov
mov
dec
aas
or
pop
jno
test
mov
or
fsubl
or
daa
xchg
add
mov
or
lahf
lods
or
stos
xor
aaa
xchg
dec
leave
cmp
lods
add
mov
jle
mov
inc
nop
and
push
pop
dec
adc
daa
add
sub
pop
xchg
xchg
out
imul
push
pushf
and
inc
mov
inc
test
cmp
cmp
lds
inc
roll
fs
mov
xchg
mov
imul
sub
xor
ret
and
sub
roll
push
int
inc
lcall
dec
roll
iret
or
xchg
mov
cmpsl
jg
cs
add
popa
in
pop
push
adc
mov
lock
xchg
divb
pop
imulb
sbb
fildll
fucomp
jo
xchg
addr16
test
xor
mov
test
inc
scas
xchg
popa
dec
loop
dec
cmpsl
outsb
les
jge
jns
xchg
lea
inc
pop
test
push
push
sti
add
pop
mov
das
je
and
nop
fldt
stc
lahf
jns
clc
lahf
xor
add
nop
mov
xchg
xor
leave
mov
push
stc
or
fucomp
push
mov
push
add
mov
lahf
jb
sbb
pop
cmpsb
pop
pop
sarb
call
loope
inc
aaa
xlat
push
addr16
cmpsl
xor
mov
sbb
mov
xchg
mov
test
mov
mov
lret
sbb
lds
add
aam
sbb
pop
rcrb
es
imul
ss
ja
fnsave
int
adc
mov
sbb
shlb
stos
mov
jnp
mov
aas
imul
push
fadd
lds
cwtl
pushf
dec
mov
or
xchg
shlb
fildl
test
sti
or
pop
jb
popf
fadds
shr
psubusb
adc
adc
add
rol
sub
mov
call
pop
xchg
push
or
fisttpll
sub
push
mov
cltd
mov
dec
dec
addr16
lods
xlat
cmpsb
jbe
es
out
xchg
mov
pop
dec
cwtl
lds
int3
adc
mov
enter
pop
bound
orl
fstl
aaa
fcoml
lret
rclb
aad
shll
aas
mov
ja,pt
fistl
ret
mov
sbb
cmp
push
lock
cmp
cmc
xchg
dec
sahf
jnp
and
lahf
cwtl
xchg
arpl
mov
push
imul
pop
jbe
test
ja
cmpsl
test
sub
fidivl
dec
pop
icebp
popa
test
sub
arpl
repz
icebp
in
add
pop
les
arpl
adc
dec
and
clc
cmp
ds
mov
mov
push
lret
jg
pop
enter
jp
es
fisubs
incl
mov
jge
fisubl
fs
sbb
adc
mov
stos
icebp
mov
cs
mov
ljmp
sbb
mov
ds
sub
notb
or
adc
lret
push
xor
lahf
and
sahf
loop
mov
mov
lods
inc
dec
fstl
je
mov
data16
clc
into
cmp
and
scas
lods
xchg
cmp
in
or
lods
add
fsubrl
fnsave
dec
and
out
std
js
in
loop
inc
fs
pop
test
fwait
fldt
jns
or
inc
mov
mov
mov
jno
add
fcomi
and
fidivrl
add
adc
mov
inc
mov
ffree
cmp
jmp
andb
out
add
and
dec
mov
adc
adc
xchg
jg
cwtl
lock
cmpsb
cmp
daa
test
hlt
nop
dec
and
sub
push
sub
mov
xor
shr
jb
cmp
jns
xchg
cmpsl
lcall
dec
inc
jmp
outsb
xor
sub
je
clc
imul
shl
scas
ja
pop
sub
outsb
dec
xchg
shl
mov
xchg
scas
mov
dec
lahf
frstor
std
test
cltd
je
roll
or
ret
inc
xorb
or
jge
push
stos
push
test
lods
lds
shll
adc
mov
rorl
dec
pusha
ljmp
icebp
cmp
mov
cmp
cmpsl
outsl
adc
jecxz
mov
mov
movsb
push
lds
dec
out
insb
arpl
pop
mulb
lods
push
icebp
sbb
ss
xorb
fmuls
pop
jecxz
dec
push
and
push
mov
fwait
sti
imul
adc
loopne
pop
fdivrl
movl
cmp
leave
lock
jo
movsb
mov
roll
orb
lret
sarl
aam
dec
jae
add
pop
xlat
in
cmp
fdivrs
in
aad
insl
in
fs
sub
mov
xor
js
jo
adc
arpl
jp
inc
push
xor
push
pop
push
test
jmp
jge
clc
stos
xchg
pop
lods
mov
ret
pop
sahf
pop
les
ljmp
in
lret
lods
iret
sbb
movsl
cmpl
cwtl
imul
lcall
jge
pop
xor
jae
mov
daa
add
dec
sti
mov
mov
movsl
jmp
gs
xchg
mov
fdivrs
shll
fisttps
out
jecxz
ja
cmp
lods
xchg
xchg
jo
jae
add
int
mov
repz
adc
push
jo
enter
lea
cmp
pop
test
lock
cmp
lcall
cmp
lock
iret
arpl
xorb
xchg
rorb
mov
mov
addr16
or
jbe
imul
mov
cmp
cmp
pop
xlat
jbe
jp
into
fbld
or
pop
and
movsl
insb
repz
pop
aaa
inc
add
test
pop
imul
push
pop
jl
cmp
push
repnz
jp
gs
movsb
inc
sbb
dec
jl
shll
jl
popa
clc
push
pusha
cmpsb
or
sti
rclb
dec
xlat
mov
push
xchg
mov
push
daa
inc
mov
jne
cmpsb
shll
out
int3
mov
cmpsb
push
xor
mov
jp
mov
and
aas
mov
shr
lods
arpl
xchg
add
sahf
dec
and
push
sub
shrl
pop
mov
mov
mov
lock
idivl
or
push
lea
enter
inc
insl
mov
pop
test
add
subb
stos
push
decl
sub
xlat
xchg
sbb
stos
push
int
test
mov
lret
jecxz
mov
push
dec
mov
lret
or
test
add
in
push
xor
xchg
fcmove
divb
mov
gs
or
pop
scas
ds
fdivrl
push
jno
outsb
or
push
push
sub
push
icebp
leave
xor
andl
repz
push
sbb
xchg
xchg
push
inc
into
adc
jl
mov
dec
ffree
mov
popf
push
mov
or
mov
fld
call
dec
enter
mov
xor
cltd
push
jbe
pop
xchg
jmp
sbb
cmp
mov
rolb
cmpsl
cwtl
lahf
inc
lret
adc
add
push
push
add
testl
outsl
mov
outsl
rcr
shll
loop
hlt
movsl
mov
lcall
push
mov
lea
xlat
clc
scas
stos
inc
ss
ficompl
mov
sbb
push
mov
scas
xchg
sbb
xor
push
fbld
mov
int
push
cmp
lea
cmp
jmp
dec
les
lret
mov
mov
fiaddl
test
pop
jo
jo
or
xor
iret
stc
out
out
jecxz
fdivrs
xor
push
insl
cmc
fwait
lea
sbb
cmp
fcmovnu
sti
mov
jne
rcll
addb
enter
ret
jl
fwait
mov
cmp
dec
inc
mov
pop
push
jle
movsl
lret
sbb
adc
and
add
popf
clc
sti
dec
mov
sbb
sbb
aaa
nop
or
xor
orb
das
leave
cmpb
lods
pushf
xchg
addr16
aad
pop
jns
stos
loope
popa
xchg
mov
pop
imul
xchg
movsb
push
dec
mov
out
arpl
sbb
popa
in
pop
inc
testb
rcll
push
mov
cmpsb
aaa
mov
pop
sbb
dec
push
rcrb
add
mov
imul
push
inc
xchg
adc
js
mov
xor
mov
push
push
ds
les
adc
mov
push
rclb
aam
pop
pop
lds
push
jb
add
and
mov
es
cmpsl
mov
push
and
inc
xchg
ljmp
jmp
cmp
xlat
addb
test
popf
xor
shl
ret
loopne
mov
dec
pop
jmp
jno
push
and
pop
xor
jb
mov
movsl
mov
and
sbb
ss
cld
xor
mov
pushf
dec
cmp
lds
cmc
js
mov
pop
or
and
rcll
cmp
sub
scas
and
dec
inc
test
mov
addb
and
lods
inc
pusha
xor
jmp
fstl
pop
gs
cmp
mov
mov
dec
and
and
js
mov
inc
fwait
leave
gs
and
adc
adc
mov
gs
hlt
jb
and
sub
and
push
lock
jns
adc
mov
cmpsl
ret
add
lcall
rclb
xor
mov
nop
std
ja
loopne
jne
ret
jl
adc
sub
fisubrs
stc
sub
scas
idivl
std
shl
in
dec
pop
push
sbb
add
add
jmp
adc
scas
sbb
lahf
mov
enter
sbbw
push
push
push
stos
movsl
mov
inc
pop
lret
aam
mov
fisubrl
sbb
jae
xor
les
fldt
arpl
pop
sahf
insl
mov
xor
xchg
xchg
dec
out
lret
xchg
stos
inc
fstl
dec
jnp
aaa
push
jnp
mov
fnsave
repnz
orb
cmp
js
rorb
or
jo
jl
dec
pop
lahf
in
imull
xlat
in
and
pop
dec
pop
mov
insb
add
repnz
xor
adc
push
push
mov
insb
filds
stos
cmp
rcrb
dec
lods
int
jnp
iret
dec
push
inc
int
incb
sahf
xchg
inc
and
sahf
inc
popa
ret
clc
je
movsb
lods
stc
mov
cmc
ja
inc
popf
imull
inc
mov
mov
call
mov
pop
outsl
inc
fucomip
repz
mov
hlt
jbe
mov
sti
mov
pop
dec
lock
add
les
int3
dec
and
lods
push
aas
and
stos
popf
gs
pop
jnp
and
lods
or
push
jno
lret
jle
fs
fxch
scas
or
mov
icebp
dec
test
leave
xchg
test
xor
addb
push
mov
dec
add
add
inc
xchg
loope
test
or
lods
and
aad
out
scas
imul
sbb
bound
sub
jo
loop
xchg
in
filds
ss
sbb
or
mov
test
fmuls
cltd
and
push
shl
jne
push
mov
push
sbb
fistpll
je
fs
hlt
jle
mov
and
xchg
pop
cli
xchg
cwtl
sbb
enter
imul
fisubrs
insb
jmp
mov
lea
sub
les
xor
pushl
mov
mull
xor
gs
lahf
mov
orl
mov
outsb
aaa
mov
rorb
sbb
hlt
push
xor
lret
add
sahf
lea
push
dec
jb
mov
aad
iret
push
int3
pop
cmp
jmp
ret
sub
cmpsl
push
xchg
stos
dec
mov
outsb
test
mov
in
push
or
sahf
mov
jb
ret
test
test
leave
es
iret
jb
mov
repz
mov
imull
inc
sbb
gs
xchg
movsl
mov
mov
out
push
fidivrl
mov
insb
jbe
bound
mov
jg
es
test
cmp
outsl
or
inc
mov
dec
jle
mov
pop
sub
int
dec
loop
jmp
mov
xor
shl
fcoms
loopne
mov
imul
lahf
lret
lock
addl
enter
mov
mov
add
movsl
mov
jo
sub
mov
es
lods
dec
pop
cmp
addr16
mov
fstpt
push
xor
lods
adc
leave
jmp
and
mov
or
push
es
dec
cmp
xor
pushf
dec
cmpsl
mov
aad
gs
mov
jno,pn
sub
movsl
or
and
inc
mov
fs
andl
inc
add
adc
lahf
xchg
push
sbb
loope
clc
dec
xchg
call
cli
sbb
jb
fsubs
mov
dec
mov
push
iret
fnstsw
mov
dec
add
fwait
inc
inc
es
mov
inc
sub
push
out
sub
adc
movsl
movsl
cmp
lret
fwait
mov
stos
push
xchg
test
add
jp
sbb
pusha
inc
push
loope
or
jbe
jge
mov
fwait
iret
jbe
sbb
pop
add
cmpsl
lret
sbb
lahf
cmp
inc
cmpsl
aad
jb
clc
mov
xor
pop
cmp
sub
pop
jo
cs
add
arpl
incb
dec
movsl
sub
fiaddl
mov
arpl
mov
cmc
mov
pusha
bound
inc
fisttpll
or
add
iret
sbb
lock
xchg
mov
jns
dec
cmc
xor
and
repnz
fwait
push
pop
dec
mov
pop
xabort
mov
movsb
adc
mov
xchg
pop
sub
movw
mov
push
daa
adc
and
movsb
sti
fbstp
mov
inc
mov
je
in
cmp
dec
fisubrl
rolb
call
nop
out
aad
ja
xchg
dec
mov
gs
cs
outsb
inc
arpl
mov
inc
mov
lods
or
jbe
stos
pop
sub
pop
das
lahf
sub
lods
xchg
mov
fcoml
cmp
jp
aad
mov
inc
lcall
ret
sbb
and
mov
cmp
sub
cmc
mov
cld
mov
push
lods
xchg
inc
sub
subl
mov
pop
cli
clc
adc
leave
pop
addb
mov
pop
mov
movsb
lea
jge
jo
inc
mov
sarb
repz
out
int3
pop
jbe
push
sbb
imul
mov
ret
mov
arpl
out
lret
adc
mov
xchg
aam
cmc
fsubs
xlat
stos
mov
cwtl
xor
es
pusha
push
push
divps
sbb
idivl
sbb
fwait
dec
xchg
iret
pop
cmp
ret
inc
cmp
cld
jp
jo
enter
mov
mov
inc
jns
dec
enter
jmp
fisubrl
dec
pop
jae
inc
push
fcomp
inc
test
sub
lods
xor
push
sbbl
jb
inc
sbb
movsb
out
test
fistl
cltd
sub
jg
mov
movsb
mov
add
pop
push
jl
roll
push
insb
inc
test
pop
je
es
in
out
push
mov
or
jo
jp
iret
jb
lea
mov
sub
les
xor
or
mov
xchg
fwait
inc
xor
push
movsb
sahf
ja
shl
xor
sub
imul
scas
fbld
test
jmp
pop
xchg
pop
pop
dec
push
fdiv
mov
inc
sbb
jae
std
divl
mov
idivb
stos
lahf
in
pushf
dec
sub
stos
mov
pop
or
mov
mov
movsl
or
pusha
cmc
xchg
push
in
mov
cmpsl
xchg
fsts
jl
mov
xchg
shrl
inc
sub
mov
or
and
dec
mov
pop
xor
add
pop
mov
aaa
pop
inc
xor
mov
sub
pop
aas
inc
cmp
xor
pushf
shll
aam
mov
outsl
pop
arpl
pop
jmp
jp
mov
fwait
xor
test
jle
or
out
inc
and
into
clc
mov
add
mov
icebp
mov
xchg
pop
dec
and
mov
push
jl
mov
mov
fisubrs
sbb
xor
sbb
shlb
ljmp
or
or
aad
frstor
mov
push
push
test
jecxz
movsl
mov
push
mov
mov
adc
xchg
lds
iret
xor
stos
sbb
xor
lods
stos
mov
stc
and
sub
pusha
push
adc
jae
repz
sub
cld
jl
cltd
mov
push
cs
test
mov
mov
lods
dec
in
lea
loopne
rcll
movl
mov
pop
inc
cli
xchg
mov
adc
jl
mov
xlat
clc
sarb
mov
shr
lcall
fdivs
adc
cmp
xor
push
insl
mov
insb
lock
mov
jnp
dec
icebp
repz
shlb
cmp
mov
shlb
cltd
pop
es
das
sahf
dec
pop
movsl
leave
pop
mov
pop
or
or
pop
xlat
movsl
iret
iret
fucomip
call
push
mov
cltd
insl
pop
mov
shrb
pop
daa
mov
cmpb
mov
mov
fcoms
cli
sub
sbb
test
enter
mov
iret
fisubrs
rcll
fmuls
or
mov
movsl
inc
pop
movsb
xchg
test
sbb
xor
insl
scas
je
and
xchg
xchg
jns
test
push
jns
lret
sbb
fisubrl
scas
leave
add
push
jg
iret
stc
mov
bound
mov
loope
dec
scas
xlat
in
test
jg
out
rorl
pop
jns
js
push
std
rcl
cltd
fbstp
mov
lods
loope
pop
mov
decl
and
fwait
insl
ds
mov
jle
mov
fsubrl
and
sbb
xor
inc
test
xchg
dec
inc
jne
pop
mov
sarl
xchg
jns
sub
aaa
stc
icebp
jae,pn
dec
push
add
xor
push
pop
add
addb
xor
inc
push
cmovl
sbb
mov
xor
jg
inc
pop
inc
sub
xor
cmpsb
fidivl
leave
add
and
dec
jle
lret
sbb
mov
scas
xchg
pop
xor
movsl
test
mov
aas
repz
lcall
adc
dec
and
es
mov
jns
push
jg
iret
fdiv
xchg
pushf
lahf
xor
mov
aas
cmpsl
push
orb
mov
jne
sbb
sub
addr16
sub
push
test
push
popf
push
inc
adc
movsb
int3
scas
inc
and
mov
or
adc
or
dec
cltd
enter
mov
push
or
adc
mov
push
adc
mov
adcl
push
test
push
or
xchg
mul
mov
lahf
lret
jecxz
jns
xchg
lahf
adc
sbb
dec
shrb
sub
outsb
xchg
adc
divb
mov
mov
push
dec
mov
xchg
dec
in
dec
xor
cld
ljmp
dec
sahf
dec
pop
icebp
mov
outsl
mov
repz
add
sti
jns
push
negl
sub
stos
add
sub
jbe
or
push
stos
dec
mov
mov
push
pushf
nop
lods
and
dec
cwtl
xchg
cmp
inc
movsl
mov
das
xlat
rcll
js
stc
jl
stc
mov
cwtl
dec
and
sbb
sbb
fbld
pop
test
test
pop
stos
bound
out
mov
or
xor
and
icebp
andb
mov
dec
and
add
or
imul
mov
or
repz
dec
inc
sbb
rcrl
and
aad
ret
mov
or
cmpsl
mov
pop
outsb
mov
or
rcll
pop
stos
push
and
mov
push
ja
in
dec
jb
mov
orl
arpl
jge
fwait
mov
in
les
stos
jae
stos
xchg
stos
scas
mov
pop
fcoml
test
es
sbb
mov
mov
sahf
nop
and
push
mov
mov
es
add
and
or
shrb
popf
mov
mov
xchg
lock
pop
mov
or
push
repnz
call
pop
add
sbb
pop
mov
inc
fisubrs
cwtl
xor
push
and
jb
jnp
enter
lods
test
push
adc
cmpl
and
imul
xchg
or
je
or
scas
cmp
cmp
mov
mov
sbb
cmp
pop
jbe
sti
loop
cld
sub
pop
movb
lahf
xor
push
pslld
push
dec
bnd
and
lods
pop
pushf
hlt
aam
push
push
adc
pop
rcll
fs
mov
shr
popf
push
ret
sbb
lcall
sbb
push
jnp
xchg
cmp
xchg
mov
jno
cmp
enter
sub
cwtl
inc
pusha
ficoms
pop
xchg
dec
dec
pop
dec
mov
ds
cld
or
call
add
xchg
adc
enterw
inc
iret
in
and
je
addr16
hlt
jnp
pop
into
int3
sarl
lock
cmp
enter
rcll
sbbb
jp
sbb
jno
sahf
sub
mov
fisubrs
xor
cs
xor
es
xchg
fiaddl
mov
push
lret
mov
icebp
clc
sti
mov
insb
sbb
pop
dec
aaa
adc
pusha
nop
mov
adc
imul
sbb
xchg
xorb
jmp
mov
stos
dec
in
ljmp
int
imul
sub
out
or
xchg
imul
scas
sbb
shr
movsb
push
pusha
sahf
nop
test
adc
int3
scas
xlat
jo
in
out
pop
xchg
fwait
push
cmpl
inc
push
lret
andl
lcall
inc
mov
xchg
xchg
and
test
sub
aad
jmp
ljmp
fcmovnu
sti
xor
cmp
adc
int3
pop
dec
adc
in
movsl
in
hlt
jl
fwait
sbb
pop
dec
mov
popa
mov
fdiv
mov
add
inc
pop
or
mov
mov
psllw
repz
dec
cli
cmp
mov
test
inc
cmp
les
dec
sbbb
sub
xchg
inc
ret
popa
mov
stos
les
cmpsl
mov
icebp
jmp
data16
popf
lds
arpl
ret
int3
push
inc
dec
ja
add
push
push
std
clc
fnstenv
push
movsb
push
sub
dec
in
cmp
xchg
xchg
xchg
lahf
cmc
mov
icebp
leave
test
roll
cmp
adc
in
or
sbb
xchg
xchg
lahf
outsb
enter
xor
jge
push
sub
call
push
cmpsl
pop
dec
jp
fwait
lea
xchg
cmpl
sbbl
fidivl
mov
ljmp
pop
push
mov
xorb
sbb
sub
fbld
jns
aam
dec
lahf
cwtl
inc
jecxz
enter
pusha
mov
dec
add
dec
mov
fistl
jmp
jbe
cmp
lret
dec
sub
sub
popf
jp
lret
fisttpll
leave
pusha
pop
mov
popf
lret
int
stos
negl
test
nop
test
inc
scas
mov
sbb
nop
xchg
push
adc
mov
push
jne
dec
mov
shrb
mov
arpl
dec
mov
cmp
push
dec
push
sahf
movsb
sbb
pop
add
shl
decl
sub
clc
call
xchg
xor
cmc
push
pop
test
xor
in
pusha
adc
xchg
fldlg2
jb
mov
cmpsb
push
cltd
enter
rcll
orb
mov
inc
je
xchg
imul
cltd
push
pop
cmpsb
cmc
push
inc
into
pop
stos
jge
adc
mov
mov
fucomip
or
icebp
imul
les
push
mov
mov
cld
test
or
push
enter
cmp
or
nop
stos
mov
out
cli
cmc
inc
mov
mov
add
daa
sahf
aad
jae
gs
xchg
repz
je
aad
add
or
mov
das
sbb
fisubrl
pop
adc
loope
fisubrs
cld
into
pop
test
mov
cmp
mov
loope
leave
aas
mov
add
rcrl
in
arpl
leave
adc
pop
or
add
sbb
fisttps
inc
xor
imul
adc
push
mov
popa
sbb
pop
mov
cwtl
stc
scas
xor
xor
mov
mov
mov
out
mov
mov
adc
adc
int
mov
into
aad
add
inc
inc
imulb
mov
loopne
pop
daa
lea
in
mov
inc
sbb
adc
jecxz
cmpsl
mov
mov
ljmp
test
xorb
lret
movsl
inc
inc
pushf
dec
and
adcl
nop
popf
mov
sbb
jae
xor
adc
mov
fisubs
stos
jl
jp
dec
and
add
xchg
ficoml
stos
xchg
stos
std
mov
mov
aad
lods
movb
push
loope
stos
lods
inc
sbb
mov
fucomi
in
sar
jle
fwait
leave
loop
cmp
xlat
in
push
inc
jno
xchg
out
stos
call
daa
mov
pop
mov
xchg
jge
cmp
in
aas
pop
mov
xchg
pop
fidivrl
adc
cmp
mov
iret
dec
sbb
aad
xchg
inc
insb
shrl
push
or
int
mov
jmp
push
sahf
dec
mov
mov
call
mov
dec
mov
repz
fwait
pop
pop
andb
cmp
mov
push
xor
and
or
aam
sbb
icebp
mov
mov
popf
jne
imul
test
jae
icebp
aam
in
mov
mov
xor
cltd
sbb
mov
mov
jo
imul
nop
sahf
dec
xchg
push
stc
add
mov
fidivs
jecxz
mov
ret
inc
and
cmp
leave
xor
andl
and
sub
cmp
xchg
inc
test
add
sub
fdivrs
jnp
test
add
out
roll
jnp
or
jg
or
dec
mov
add
mov
xchg
xor
mov
xchg
shr
xor
shl
icebp
adc
xchg
sahf
add
popf
fcomi
mov
inc
pop
dec
xlat
pop
adc
xchg
cmc
lds
and
xchg
dec
pushf
dec
subl
dec
cmpsl
add
push
push
mov
sbb
xchg
shl
pop
xor
clc
cmp
fistpl
les
mov
bound
test
inc
sbb
adcl
mov
pop
shll
scas
sub
adcl
cltd
lods
jle
test
iret
pop
xor
andb
leave
loop
js
aas
aas
repz
jge
sbb
dec
mov
mov
push
mov
inc
cmp
or
sub
xor
pop
fdivrl
cmp
enter
std
adc
jecxz
fistps
out
mov
xor
dec
lods
out
inc
sbb
mov
fmull
out
xor
or
call
in
sahf
pop
add
mov
push
in
cli
ret
or
jmp
lock
cwtl
jmp
vpor
sub
sub
iret
pop
icebp
dec
fildl
int
decb
mov
add
idiv
push
xchg
int3
jnp
sbb
das
xchg
pushf
vpunpcklqdq
add
cld
xorb
pop
add
flds
add
and
pop
add
and
or
lock
or
pop
pusha
jnp
mov
pushf
xchg
xchg
adc
inc
xchg
js
rclb
andl
into
jae
and
fnstenv
movsb
jp
xchg
sub
fsubs
cmp
cmpsl
sti
push
pop
shlb
lret
mov
addr16
jg
stos
lea
mov
in
inc
lcall
mov
adc
jne
push
jne
cmp
hlt
and
mov
add
cmp
pop
inc
mov
lock
push
sti
jmp
jl
ret
mov
ret
inc
stos
dec
xor
js
loope
and
fstp
scas
mov
mov
add
stos
or
sti
cmp
mov
xchg
fxch
sbb
arpl
mov
popf
jno
cmpsl
push
jne
test
push
pop
dec
das
cmp
jp
sbb
in
mov
jnp
mov
sti
and
add
cmp
std
push
idivl
mov
add
les
out
in
jl
xor
pop
cmp
sub
test
pusha
shlb
dec
lahf
jb
or
std
bound
std
mov
loope
xor
mov
icebp
jge
rcrl
push
push
das
or
int3
mov
fsubrl
lcall
inc
xor
pop
and
push
repz
lahf
lods
cmp
aad
ja
stos
add
cli
mov
ja
int3
in
pop
sbb
arpl
test
mov
mov
stos
cmpsl
sbb
test
sub
lret
je
lret
popf
add
mov
or
jno
arpl
push
push
mov
addr16
jb
sbb
lcall
ret
push
push
jo
cmpb
addr16
sub
adc
push
pop
loopne
andl
stc
sahf
xchg
xor
push
lods
dec
mov
jae
sub
add
pop
or
dec
mov
fld
cmpl
push
adc
in
push
aas
aaa
imul
mov
xchg
jmp
fidivl
mov
sub
pop
mov
mov
dec
jbe
xchg
xchg
in
mov
and
mov
fstpl
imul
pop
jle
xor
push
out
adc
xor
testb
cwtl
cwtl
scas
test
jns
dec
push
xchg
xlat
jge
lret
push
pusha
sub
stos
mov
dec
test
cs
mov
mov
xor
daa
xchg
mov
lret
fxch
push
sbb
push
clc
stc
lcall
jo
cmp
push
xchg
pop
insb
dec
push
sbb
data16
push
jge
mov
inc
jb
and
inc
mov
call
dec
lods
and
out
shlb
adc
cmp
xchg
mov
mov
mov
aam
test
cmpsb
inc
mov
mov
sbb
sub
pop
daa
ds
and
mov
adc
mov
mov
and
mov
call
cwtl
test
nop
add
push
repz
ds
mov
lock
jecxz
fistl
pop
add
mov
mov
fsubrl
enter
dec
pushf
pop
mov
bound
xchg
idivl
in
scas
pushf
jne
dec
cwtl
dec
and
dec
dec
int3
lret
loope,pt
adc
rcr
pop
mov
sbb
add
add
mov
or
xchg
dec
data16
cmp
push
cmp
add
sbb
sub
sub
pop
shrl
insl
incl
dec
repz
je
gs
in
shl
movsb
push
fwait
jge
mov
movsl
xchg
flds
lods
mov
pop
outsl
mov
mov
xor
cltd
add
leave
cltd
pop
push
sub
sbb
roll
mov
std
push
cmpsl
mov
xchg
adc
je
loopne
mov
push
test
test
sbb
push
xchg
xor
stc
sti
popl
lock
jo
lret
clc
pop
mov
push
fnstsw
dec
and
sbb
dec
push
shlb
mov
pop
dec
xor
subb
popf
lret
cld
xchg
mov
mov
aas
or
fidivl
arpl
push
rcrb
jg
sbbb
jmp
lahf
sbb
inc
stos
sub
iret
das
imul
iret
cld
repz
inc
mov
clc
cmc
js
jl
mov
cli
dec
inc
inc
fstl
iret
or
sbb
stos
adc
fsubs
lahf
out
jbe
mov
hlt
cmp
lret
clc
or
sahf
xor
popa
cltd
enter
les
xchg
lahf
xchg
pop
add
fimull
lret
pop
pushf
or
rolb
or
fwait
in
or
mov
test
push
dec
lahf
inc
nop
fdivp
adc
in
aaa
les
es
cmp
outsb
or
sub
hlt
dec
xor
rorl
jns
mov
mov
or
mov
sub
lahf
stos
inc
lcall
push
xor
lods
rcll
lcall
loop
xchg
dec
popa
mov
in
pop
fidivs
lret
scas
sub
ljmp
mov
ror
or
xchg
cmp
and
ljmp
mov
addl
and
int3
ja
mov
sub
push
and
fsubs
mov
fwait
push
adc
test
nop
fisttpl
pop
enter
ret
icebp
stos
jb
fwait
jb
jo
mov
shll
add
jecxz
leave
fwait
sahf
and
cmp
fisubrs
cmpsl
call
in
pop
dec
mov
push
sti
repz
ret
pop
lcall
add
pop
sbb
shl
mov
jl
ds
sbb
mov
inc
push
iret
lret
stos
jno
dec
fnstcw
hlt
sub
adc
mov
cmc
mov
dec
sbb
push
cmp
std
dec
cwtl
scas
fldt
mov
pop
into
xor
lret
insl
mov
popa
fsts
pop
pop
dec
mov
xchg
rcll
lods
fwait
adc
movsb
jb
movsb
push
add
cltd
lods
cmc
mov
sub
test
fcmovne
adc
iret
dec
lea
cmc
sub
pop
adc
mov
sbb
add
mov
mov
sbb
addr16
mov
pop
add
stos
mov
cld
push
and
faddl
fnsave
mov
pop
je
lret
decb
imul
fisubs
cmp
dec
mov
push
ja
repnz
add
add
ret
loopne
in
mov
jns
rcrb
movsb
add
incl
enter
bsf
jl
mov
ficomps
andl
jnp
fsubrl
xchg
jecxz
pop
stos
aam
mov
sbb
gs
arpl
imulb
mov
ror
cmp
daa
pusha
dec
mov
sbb
out
pop
scas
pop
into
push
xchg
mov
jbe
sub
movsb
jl
orb
lods
inc
push
sbb
pusha
mov
out
js
int3
push
inc
push
shlb
dec
test
sbb
loop,pt
mov
rclb
dec
aam
stc
repnz
movl
jg
fistps
fistpll
sbb
fcmovnu
in
adc
push
aam
xor
loopne
jmp
cli
loopne
inc
adc
fdivl
stc
sahf
call
mov
imul
sub
mov
add
xchg
mov
sub
pusha
movsl
in
dec
inc
aas
adc
iret
cmp
xor
arpl
mov
rcrb
repnz
push
aaa
jns
fnstsw
in
jmp
sbb
cmp
mov
shrb
ret
lods
sti
aam
imul
mov
pop
stos
lret
push
popf
sub
jno
lahf
sahf
int3
lahf
jmp
mov
out
pusha
inc
mov
adc
dec
sbb
mov
dec
cmp
jae
int
xchg
push
cmp
pop
cli
jg
inc
insl
loope
or
cmp
pop
sti
pop
aam
int
mov
es
cmp
pop
sub
fwait
jle
jg
scas
mov
int
jae
dec
mov
jge
jbe
pop
fdivrs
les
test
adc
ja
sti
test
les
xchg
jnp
mov
mov
mulb
cld
jg
xchg
mov
idiv
xor
jns
mov
aaa
push
aad
adc
xor
shrl
inc
mov
lcall
pop
lcall
xchg
sbb
sbb
push
dec
icebp
push
xchg
pop
stos
ja
or
imul
fldt
popf
into
jg
ret
adc
lock
sbb
jp
lods
ja
cmp
ss
int3
movsl
nop
les
sbb
jae
xor
mov
lods
lea
cltd
or
insb
jbe
sbb
pop
push
fbld
pop
aaa
fcmovnu
in
imul
sti
mov
adc
inc
push
mov
popa
cmpsb
jns
fldpi
mov
pop
fidivs
lahf
ja
mov
and
inc
dec
pop
mov
pusha
js
cmp
fucomip
in
loopne,pt
pop
cltd
sub
jge
out
xor
fnstenv
bound
enter
std
lret
pop
pop
dec
fwait
inc
lret
cwtl
lret
repz
adc
stos
mov
out
or
fbstp
mov
das
scas
mov
xor
pop
or
test
and
adc
or
xchg
lcall
rcr
push
push
mov
xchg
mov
lods
jae
sub
push
imul
in
cld
ja
scas
inc
fs
sti
and
jno
int3
dec
jle
js
cmp
cltd
int3
push
adc
mov
fmuls
nop
cmc
bound
mov
cmc
sbb
sub
inc
mov
push
lea
inc
int
push
lea
sbbl
imul
dec
inc
pop
adc
pop
xor
inc
mov
pop
mov
jns
stos
popa
mov
mov
faddl
mov
jb
cmc
inc
push
into
fadds
lock
cmc
add
call
decb
fs
add
imulb
ja
leave
mov
sbb
sub
test
xchg
xor
sbb
sub
rol
lcall
lret
fmulp
jecxz
cmpsl
test
test
sbb
xorl
movsl
adc
cmp
movb
cli
ds
data16
lret
push
jo
and
jnp
lahf
orb
sbb
jno
adc
loopne
jg
mov
mov
leave
dec
push
mov
out
adcl
fmuls
frstor
mov
jge
push
loopne
mov
sub
xchg
pusha
jo
xchg
adc
add
mov
inc
add
mov
sbb
test
and
adc
fldcw
pop
das
or
iret
inc
pop
xchg
call
pop
rclb
add
mov
pop
add
inc
sbb
xor
loopne
cltd
cmpsb
push
mov
mov
cld
cmc
shll
nop
xor
xor
jp
outsl
insl
test
lods
sub
xchg
out
lock
sub
xor
lahf
hlt
in
push
xchg
pushf
pop
das
in
mov
pop
sub
mov
xchg
fisttpl
imul
push
jno
mov
and
cltd
lods
aad
pop
xchg
loope
int3
inc
repz
mov
add
push
repz
mov
sub
adc
mov
test
xchg
pop
inc
fcompl
add
sub
daa
lcall
lods
cmpsb
es
push
mov
inc
mov
cmp
sbb
pop
addr16
cmpsl
cli
or
jmp
dec
mov
inc
mov
xchg
xchg
idivl
and
jle
adc
and
mov
sbb
movsl
dec
lahf
cld
aad
cwtl
cmp
mov
shl
jg
cli
xor
cli
sbb
fnsave
push
or
xchg
out
popa
xor
lds
lods
fnsave
mov
loop
dec
popf
lret
mov
xchg
aad
inc
sub
ret
push
push
mov
lret
xchg
jne
push
jb
lods
cmp
das
push
dec
push
inc
add
testl
pop
push
aad
leave
loop
movsb
xchg
cld
sti
pusha
push
pop
inc
cld
inc
add
pop
insb
xor
dec
sbb
inc
loopne
adc
test
stos
iret
stos
movsb
inc
sbb
cmpsl
ret
sahf
xchg
push
fwait
outsl
mov
cltd
enter
mov
fnstsw
sub
dec
push
mov
mov
fsubrs
test
cs
lahf
imul
fcompl
push
movsl
dec
hlt
bound
das
outsl
stc
imul
pushf
mov
jmp
mov
xchg
jno
sbb
mov
js
xor
pushf
dec
and
imul
rolb
inc
pop
lods
shll
lods
stos
stos
push
xor
pop
add
inc
loopne
pushf
fnstenv
cmp
sbb
lea
lods
mov
arpl
hlt
push
or
jbe
scas
jne
pop
adc
inc
dec
lea
dec
and
inc
and
scas
inc
idiv
dec
mov
cmpl
xabort
sahf
add
cmp
out
fwait
sarb
mov
out
push
movsb
cmp
mov
clts
inc
sbb
inc
and
movsl
repz
xlat
daa
cmp
pushf
ret
ret
jge
sbb
aaa
mov
xor
mov
and
xor
and
xor
mov
or
clc
pop
push
inc
inc
fisubrs
incl
inc
mov
pop
add
jo
pusha
push
mov
or
adcb
ds
inc
mov
icebp
cmpsb
jp
push
adc
test
ds
mov
mov
push
mov
mov
stos
jnp
xor
mov
in
insl
mov
mov
mov
or
mov
loop
xchg
fldl
movsb
mov
push
scas
andl
sub
and
or
fs
cmp
sbb
dec
std
jle
clc
mov
add
into
les
icebp
and
mov
movsl
test
add
out
pop
mov
and
xor
push
jb
fwait
outsl
inc
adc
popf
das
jns
sbb
xchg
pop
xchg
push
jecxz
mov
aas
push
imul
sub
mov
dec
adc
xor
or
loope
mov
ret
or
sub
clc
sti
mov
jecxz
jns
mov
ss
add
fisttps
jg
movsb
into
stc
and
dec
mov
lahf
adc
sub
dec
popf
std
push
mov
mov
test
mov
xor
push
cli
mov
inc
cli
arpl
mov
push
add
fsubrl
mov
mov
xchg
pop
dec
push
enter
jns
mov
inc
mov
lods
inc
pop
imul
mov
dec
cmp
mov
out
gs
and
leave
fidivrs
cmp
sub
dec
gs
into
js
dec
dec
mov
dec
sbb
mov
or
inc
mov
or
sub
adc
loop
add
neg
mov
inc
nop
xor
mov
inc
mov
add
lock
inc
pop
cwtl
sti
cmc
pop
adc
mov
cmp
nop
icebp
mov
ret
loopne
loopne
iret
je
daa
pop
roll
push
pusha
push
sti
sbb
cmp
arpl
inc
mov
or
outsl
imul
inc
cmp
in
in
popf
int3
movsb
mov
fisubrl
jae
lret
loope
push
and
pop
iret
dec
sbb
push
push
inc
in
lcall
mov
jp
dec
je
add
or
cmp
hlt
fucomp
dec
es
lret
idivl
sub
pop
fdivrs
mov
sub
js
or
out
loope
push
or
adc
sbb
test
jno
iret
push
inc
sbb
gs
add
or
xchg
lods
int3
pop
sub
dec
push
cmp
mov
loop
aad
stos
mov
int
sub
pop
stos
shr
rcrb
xchg
sub
sti
jle
insb
add
mov
cmp
jo
pop
or
adcb
hlt
test
sbb
test
push
out
test
jns
inc
mov
dec
xchg
mov
fs
icebp
add
ss
and
or
pop
lock
inc
negb
dec
fidivs
imul
mov
in
push
mov
es
add
js
arpl
sub
cmpsb
into
clc
cli
std
decl
and
iret
popa
sbb
adc
jns
cmpsb
add
cmp
ja
scas
and
jecxz
pop
cmp
sti
pop
mov
divl
inc
cltd
enter
in
inc
scas
pop
mov
int3
movsl
das
push
pushf
pushf
dec
inc
imul
adc
mov
push
imul
sbb
lea
or
mov
fdivr
inc
fwait
cmp
repz
sti
inc
movsl
notl
inc
pop
jge
shll
sbb
mov
add
inc
testl
cmp
lds
pop
and
ret
jl
push
std
out
mov
bound
inc
sub
inc
and
push
stos
xchg
mov
and
lret
cmp
jl
jecxz
lcall
pop
lret
pop
cli
icebp
add
out
jl
stc
inc
cmpsb
and
xor
sbb
add
push
inc
ss
sub
sub
bound
push
dec
shrl
outsl
mov
inc
mov
leave
mov
and
movsl
mov
bound
inc
push
push
add
mov
and
mov
adc
jmp
jg
jne
ja
sub
or
movsl
sti
pop
xchg
jbe
mov
jno
mov
test
shlb
ret
inc
sbb
jg
or
ss
push
inc
or
lods
cli
fiaddl
push
imulb
leave
fs
aaa
inc
mov
and
rolb
jg
sub
leave
popa
cmp
push
sbb
pop
in
rorb
fmuls
jp
or
enter
sbb
fstpt
popf
inc
mov
mov
dec
push
inc
cmp
mov
cmp
repz
js
addr16
inc
jle
push
and
es
mov
data16
jmp
in
dec
fwait
sbb
mov
mov
pop
sub
xor
push
dec
inc
sub
xor
sub
lods
and
aam
push
sub
mov
mov
mov
and
in
push
dec
cmpsl
rcl
insb
inc
sahf
dec
mov
into
pop
mov
dec
ss
div
js
add
mov
loop
xlat
xor
lock
mov
and
sbb
test
push
dec
push
fists
mov
cmpsb
add
fwait
aam
lds
ljmp
hlt
std
repnz
push
outsb
push
xlat
pop
push
mov
add
push
das
xchg
pop
xor
push
cmp
mov
add
adc
jne
les
pop
nop
fnsave
cli
movsb
mov
in
pushf
adc
xchg
test
mov
jno
and
jns
add
xchg
jg
mov
cmp
add
add
inc
cmp
rclb
aam
repz
addb
sub
cmpsb
push
push
in
xchg
imul
loopne
push
cltd
insl
or
fstl
jae
fwait
arpl
pop
jne
es
fpatan
jnp
sbb
es
hlt
mov
xchg
mov
sarb
xor
mov
rcr
mov
cmpsb
repz
into
std
mov
imul
cltd
clc
aad
mov
mov
sbb
adcb
xor
out
loopne
jl
push
adc
cwtl
fldcw
scas
jge
lret
or
mov
popa
sahf
add
clc
scas
lahf
frstor
cld
lods
pop
mov
xchg
sbb
test
jge
dec
cmpsl
jo
imul
repz
mov
lea
sbb
data16
shr
bnd
test
jmp
mov
inc
loopne
out
std
adc
lds
test
pop
or
push
movsl
cmp
xchg
xchg
mov
xor
lds
arpl
pusha
fdivs
mov
int3
jecxz
inc
sbb
dec
sbb
or
lret
adcl
xchg
or
mov
fistl
rcll
or
adc
ret
push
or
push
and
imull
pop
adc
fistps
adc
sti
scas
rolb
out
mov
mov
insl
pop
iret
fucomi
mov
lret
shl
jg
jne
mov
pop
mov
sbb
mov
les
add
pop
inc
jo
jge
xor
inc
inc
fnstsw
or
pop
jns
mov
push
scas
lea
cmp
pop
fbld
popf
lahf
inc
adc
jge
dec
shr
repnz
test
mov
icebp
leave
sbb
rolb
mov
idiv
test
lcall
mov
jge
xchg
notl
inc
xlat
sti
jmp
add
lret
sbb
fs
jg
aaa
or
fdivs
jecxz
bound
fcmovb
popa
mov
adc
ret
lods
pusha
mov
cmp
or
inc
ret
jae
cmp
ss
and
mov
lret
mov
adc
test
out
mov
test
lret
daa
mov
daa
mov
xor
cmp
pop
icebp
daa
dec
push
mov
mov
sbb
sbb
scas
mov
and
or
jge
dec
sbb
stc
mov
scas
sbb
mov
movsb
jge
push
rcr
push
stos
mov
mov
jne
inc
das
mov
leave
in
out
xor
test
test
bound
fs
jge
and
shlb
ror
out
push
push
jo
mov
adc
addr16
cli
sbb
leave
shlb
mov
and
mov
cmp
test
push
or
les
aaa
inc
shll
xor
imul
mov
xor
jge
lods
clc
scas
movsb
shl
dec
pop
movsl
test
mov
sahf
rcll
sbb
insb
rcll
ret
mov
add
cmp
adc
outsb
adcb
imul
adc
add
xchg
mov
sbb
jecxz
adc
rcll
loope
popa
xchg
mov
aaa
mov
scas
pushf
popf
insb
add
jge
xchg
xor
xchg
cmp
cs
mov
scas
xchg
mov
ljmp
add
push
push
inc
cmp
dec
xor
das
mov
sbb
and
or
sub
lock
mov
loopne
jle
dec
xor
mov
mov
imul
mov
add
and
fwait
xor
cmp
repz
cmpsl
in
rcll
push
adc
pop
mov
fcomps
test
sbb
fisubs
movsb
hlt
test
cmp
mov
and
jmp
mov
inc
nop
jg
lret
dec
fst
repz
cld
mov
jne
pusha
and
sub
add
test
inc
mov
enter
inc
mov
cmp
jmp
sahf
jb
jp
push
fidivrs
jae
jg
icebp
jmp
sti
nop
bound
sbb
stc
xor
push
mov
insl
cmpsl
and
in
push
std
test
fcomps
arpl
add
push
rorl
adc
jl
js
add
daa
js
mov
enter
mov
mov
dec
dec
pop
sahf
int
daa
je
mov
fucomp
jecxz
movsl
ret
dec
rclb
rcll
cmpsl
ret
test
stos
mov
fisubrs
ficomps
fwait
xor
mov
aad
lret
fidivrs
arpl
mov
xor
mov
cmp
push
test
fucomip
jbe
sti
pop
adc
int3
pushl
nop
inc
mov
stc
xor
lods
or
jb,pn
inc
and
addr16
mov
popf
pushf
rclb
mov
lods
push
dec
cltd
pop
jbe
movsb
sub
out
mov
pop
inc
jmp
int
popa
stc
mov
jnp
and
sub
xchg
xchg
cmc
nop
sbb
addb
insb
enter
xchg
inc
jg
xor
push
dec
fstl
mov
or
mov
js
cmc
inc
mov
sbb
repz
cli
or
mov
add
outsl
movsl
and
push
mov
pop
xchg
jno
pop
mov
sbb
sbb
pusha
lret
mov
jne
fs
repz
mov
int3
mov
mov
mov
sbb
mov
outsl
adc
inc
push
pushl
aas
rolb
push
mov
je
repnz
loopne
stos
shlb
adc
int3
aam
mov
lock
into
aaa
mov
xor
cmpb
mov
lods
pushf
jmp
add
sbb
cmp
out
fists
roll
test
std
cmpsl
mov
dec
xchg
shll
lret
xlat
divb
adc
mov
lods
or
sbb
and
dec
aaa
mov
jnp
lahf
gs
mov
or
push
push
or
inc
adc
aas
adc
je
mov
out
call
mov
xor
shll
fistl
adc
push
inc
push
test
jo
jge
and
js
outsl
or
cmpsl
fstpl
inc
ret
clc
insb
aaa
xchg
jae
dec
push
add
lds
dec
inc
jne
lcall
rcrl
mov
call
pop
je
sub
inc
stc
add
push
fsubl
or
pop
stos
jbe
out
enter
and
cli
jle
pop
dec
push
aaa
xchg
int3
pushl
int3
in
pushf
jmp
sahf
lock
lcall
sbb
xor
movb
jmp
xchg
movsl
cld
mov
add
stos
shrl
scas
xchg
popa
mov
sub
outsb
loop
std
lock
fildl
xchg
push
test
in
inc
sbb
scas
xor
stc
pop
ljmp
jne
add
and
shl
sbb
and
ds
rcrl
dec
mov
je
add
pop
cmp
lock
cli
mov
shlb
dec
adc
mov
das
lretw
mov
out
or
scas
fnstcw
cmc
in
xor
test
aas
adc
movsb
sub
test
inc
xor
rcrb
add
stc
mov
test
mov
or
loopne,pt
imul
fucomi
cmp
push
adc
jecxz
jns
push
pop
lret
mov
imul
movsb
sub
or
adc
mov
dec
mov
test
add
adc
mov
popf
imul
faddl
or
or
or
xor
mov
cmpsb
xor
popf
xchg
sub
lahf
rcrb
inc
sbb
mov
shll
adc
xchg
mov
rclb
mov
fisubl
fimull
frstors
idivl
jae
out
xchg
stos
repz
fdivrl
lahf
xchg
movsb
imul
idivl
xchg
or
xchg
xchg
enter
sub
test
out
cmp
lods
mov
xchg
pop
xor
aam
rorb
ret
mov
inc
mov
movsl
mov
pusha
sti
mov
pop
clc
pop
pop
xor
and
adc
in
cld
jg
cmpsl
jno
fsubrl
iret
pusha
jo
xbegin
lcall
adc
mov
outsl
mov
ret
xor
jae
ja
sbb
xchg
sbbb
cltd
push
fnstenv
pop
pop
dec
imul
jnp
inc
pop
mov
gs
mov
xchg
pop
adc
mov
add
mov
fdiv
repz
jg
leave
pop
leave
loop
dec
pop
js
or
into
xchg
add
and
inc
pop
cmpsb
cmpsb
sbb
dec
and
cmp
jb
movsl
andb
dec
mov
clc
les
cld
lods
push
adc
pusha
ds
sbb
inc
aam
call
iret
int
imul
sarb
shl
mov
arpl
out
xchg
jb
aam
in
mov
xchg
pop
mov
mov
jb
aaa
in
lock
push
jo
push
add
or
cwtl
or
inc
xchg
xlat
stos
clc
cli
sbb
test
enter
mov
push
lret
aad
jp
pop
lods
mov
inc
cmp
cmpsl
push
cmp
push
sub
inc
pop
test
inc
sbb
sub
or
gs
sub
and
jmp
mov
lds
jmp
scas
and
leave
outsl
jne
push
push
mov
push
fisttpll
in
jl
rcrl
mov
xchg
cmc
mov
call
fwait
sub
jns
mov
inc
test
sbb
mov
insb
aaa
and
fistpll
test
out
jb
popf
push
mov
xor
int
mov
bound
lods
shrb
mov
xor
in
in
push
cmp
mov
push
adc
xor
sbb
sbb
in
jns
fwait
xor
addr16
sub
arpl
mov
testl
les
jge
ret
cmp
outsl
mov
int
push
dec
jae
lcall
sahf
xchg
or
stos
mov
sbb
test
xchg
cwtl
dec
xchg
stos
std
frstor
adc
clc
sub
push
cltd
mov
push
and
and
push
rcrb
mov
xor
test
lods
push
mov
rcll
xchg
insb
add
ret
jmp
mov
push
fisubl
lahf
cmpsl
dec
js
scas
jb
inc
cltd
imul
sbb
inc
jb
sti
cwtl
pop
test
insb
or
fisubrs
sub
jle
pop
jmp
test
fdivs
dec
mov
loopne
xchg
pop
jl
jg
test
scas
call
sub
inc
inc
int
or
popf
sbb
divb
outsl
in
outsl
lds
js
into
aas
pop
push
sub
dec
jae
pop
in
mov
adc
insb
clc
mov
adc
test
mov
mov
push
mov
push
imul
dec
pop
mov
dec
aad
pop
sbb
sub
pop
stos
pop
pusha
inc
fidivrl
mov
xchg
lock
add
pop
aas
rcl
cmpl
xchg
out
pop
popa
iret
cli
mov
movsl
ret
jmp
insb
jbe
xlat
inc
pop
push
lods
test
mov
mov
add
mov
jno
sub
dec
test
jle
push
mov
adc
or
mov
jmp
call
xchg
push
mov
mov
inc
addr16
mov
cmp
fisttps
pop
cmp
push
mov
cmp
lods
dec
ljmp
dec
sbb
mov
sub
mov
push
push
test
xor
rorl
add
adc
pop
and
imul
into
push
sarl
mov
sub
inc
mov
and
imulb
sub
jl
pop
scas
sbb
repz
xor
test
or
cmp
movsl
outsb
js
insb
fisttps
cmc
cmc
jbe
mov
loopne
imul
xchg
jne
ret
movsb
push
mov
inc
push
xor
inc
push
xor
mov
insb
mov
lods
push
addr16
insb
ljmp
adc
pop
pusha
mov
repz
xchg
xor
dec
mov
sub
ret
add
xchg
cmp
mov
test
dec
dec
mov
jns
inc
add
dec
pop
repz
inc
sbb
call
push
add
dec
movsl
xchg
sub
scas
xor
lcall
push
adc
out
jno
and
in
movsb
mov
or
mov
push
es
ret
icebp
aam
sub
jae
or
sbb
xor
mov
cmpsb
xor
jb
loopne
sbb
cmpsb
jge
mov
sarl
sub
or
js
pop
sarb
dec
sti
cwtl
aam
sbb
add
aas
push
mov
sub
je
cli
jg
pop
call
pop
cmp
and
call
pop
mov
and
sub
or
mov
xor
xchg
movsb
xchg
xchg
lods
mov
pop
insb
jbe
add
sub
call
rcl
lock
iret
fucomip
in
insb
lcall
aaa
gs
outsb
aaa
mov
repnz
push
push
add
cs
and
gs
lret
stc
add
mov
adc
add
mov
sbb
cmp
mov
dec
sbb
shl
mov
mov
pushf
test
je
in
xor
dec
mov
ret
nop
adc
mov
inc
sbb
lret
cmp
lods
push
lds
leave
lret
xchg
push
bnd
jge
pop
xor
in
addl
or
xor
fimuls
jmp
or
mov
aad
sbb
cli
jno
push
insl
lahf
insl
add
jae
cltd
lock
cmp
enter
pop
icebp
out
leave
lahf
sbb
sbb
sub
xor
imul
add
orb
in
and
pop
into
call
cmp
shll
fsubl
and
gs
mov
aaa
in
or
pop
lds
inc
in
mov
in
push
inc
mov
lcall
lret
test
sbb
addr16
mov
lret
fucomp
movsb
cmpsb
inc
dec
mov
fwait
pop
jno
test
inc
inc
cmp
fmull
fisubrl
cs
bts
test
pop
mov
cmp
adc
in
shll
jg
cmp
xchg
dec
mov
jg
add
mov
adc
stos
out
sbb
add
ja
test
js
adc
sub
fldl
jae
sub
mov
lret
in
sbb
sbb
pop
add
adc
scas
stc
lcall
insb
std
pop
movsb
bound
adc
ret
imul
jae
int3
mov
push
pop
mov
jecxz
fsts
adcb
bound
mov
pop
xchg
jne
imul
xor
mov
std
mov
ret
pop
dec
lock
pop
or
dec
int3
jno
in
dec
imul
scas
in
das
stos
test
sub
aas
repnz
pop
and
xor
push
std
repz
mov
push
les
cltd
xchg
mov
xchg
idivb
scas
adc
or
fs
scas
dec
jnp
xchg
scas
mov
or
dec
sbb
enter
roll
lahf
lods
mov
mov
or
cmp
sbb
add
dec
mov
clc
daa
dec
mov
pop
aad
movsl
ret
fmul
sub
jb
cmp
lea
rcl
and
pop
mov
inc
mov
jae
cli
xchg
jae
sbb
in
mov
push
push
lret
xchg
pop
sbb
lods
lret
sahf
and
mov
pop
mov
rcll
mov
repz
mov
lahf
mov
out
pusha
sub
lahf
aam
cltd
pop
jp
xor
sbb
faddl
dec
sbb
adc
xor
lods
push
dec
mov
sub
fildll
dec
inc
pusha
mov
mov
dec
rcrl
jno
inc
push
fsubl
lret
sbb
mov
push
cmp
data16
add
dec
pop
jbe
int3
xorl
fstl
mov
popa
scas
nop
jmp
js
jg
and
dec
xchg
fnstcw
mov
imul
mov
xor
pop
mov
xchg
cwtl
test
xchg
cmp
mov
add
in
cmovle
jp
inc
cltd
test
adc
test
pop
dec
dec
push
lret
push
jle
aas
push
stos
mov
mov
mov
cs
add
inc
movsl
pop
inc
pop
dec
fcompl
adc
test
gs
inc
mov
sbb
popl
push
pop
push
sbbb
jp
pop
dec
mov
xor
jp
jno
push
cmp
jl
sbb
jg
push
imul
das
dec
add
fwait
mov
mov
adcb
xor
and
mov
lock
inc
add
loope
and
push
xchg
cltd
xor
arpl
mov
dec
push
sub
jp
mov
xor
movsl
dec
leave
bnd
lods
lods
pop
popf
sbb
and
push
lret
cmc
pop
mov
idivl
add
jge
je
push
mov
inc
adc
ret
pop
call
xchg
pop
pop
adc
mov
push
aad
call
mov
mov
fmull
or
ficoml
dec
in
mov
repz
push
popa
mov
negl
mov
shll
pop
loopne
pop
aaa
jmp
lcall
jmp
dec
test
enter
out
mov
cmpsl
scas
push
jae
int3
stos
xor
sbb
repnz
test
xor
icebp
push
xchg
shll
lods
mov
mov
inc
pop
cmp
or
in
movsl
xchg
mov
fadd
sub
jg
lds
xchg
int
cmp
jb
inc
enter
std
cmp
adc
push
sub
mov
jae
mov
mov
bound
xchg
es
push
std
or
cmp
ret
jmp
or
test
sbb
cmp
mov
inc
mov
shr
push
sarb
and
enter
xchg
cmovae
loop
and
mov
add
fsubrs
aam
pop
mov
pop
jne
sbb
xchg
mov
jnp
mov
fdivrs
popl
test
lock
mov
sbb
mov
ja
push
mov
sbb
add
jae
je
outsb
fisttpl
mov
stos
mov
das
mov
lret
jne
das
mov
stos
xor
ldmxcsr
out
movsl
icebp
add
icebp
cltd
inc
std
xchg
xchg
test
sbb
hlt
mov
xchg
mov
mov
fcmovne
test
dec
xor
and
pop
test
dec
and
pusha
mov
jns
pop
ds
fwait
leave
loop
movsb
adc
addl
push
sub
dec
je
and
push
mov
test
mov
inc
call
mov
jne
fs
lds
xor
ret
adc
lds
push
out
sub
cmpl
and
std
sti
push
inc
mov
dec
lock
mov
fs
ret
cmp
adc
mov
jns
lods
jg
or
add
mov
fs
out
lods
cld
lret
sub
jb
mov
push
shrl
shlb
pushl
iret
jle
je
fildll
imul
jno
dec
dec
nop
inc
clc
mov
add
xchg
add
push
push
adc
sbb
xchg
pop
sbb
lret
arpl
jno
xlat
and
pushf
aaa
or
mov
addl
test
stos
es
arpl
xor
sub
clc
dec
cs
add
lds
je
hlt
mov
xorb
sahf
xor
fs
mov
mov
aam
dec
fnstsw
aas
fwait
push
loop
pop
decl
daa
adc
daa
lret
mov
into
mov
mov
loop
mov
idiv
sti
sub
and
mov
pop
mov
ret
push
pop
mov
sahf
jns
fnstenv
clc
stos
shll
leave
xor
mov
sbb
adc
inc
fiadds
loop
dec
xchg
mov
adc
dec
dec
sub
test
xchg
mov
fmuls
pop
sahf
mov
push
out
push
lds
movsl
push
pop
xchg
fxch
mov
lods
inc
pop
dec
push
pusha
mov
cmp
gs
sti
cmp
xchg
xlat
clc
fdiv
test
inc
sbb
call
sbb
xor
test
xchg
out
enter
pop
jno
inc
jp
xor
mov
jns
clc
adc
pop
mov
or
mov
xchg
fnstcw
sbb
mov
inc
sub
pop
lock
mov
rorb
out
rcrb
mov
pushf
mov
mov
jb
jp
xchg
fiaddl
adc
pop
icebp
xchg
lods
andl
jecxz
cld
mov
and
mov
or
adc
scas
push
negb
inc
std
and
movsb
and
lock
xchg
lahf
add
popf
loopne
pushf
mov
mov
mov
mov
ret
fists
test
scas
xor
shlb
push
dec
fidivl
cs
int
cmp
scas
cmp
jne
popf
ficoms
ret
loope
lret
adc
xchg
cmpl
cs
rcr
dec
fimull
cmpsb
push
imul
dec
sbb
pusha
mov
out
pop
test
dec
cmpsl
ret
xor
inc
inc
cltd
xabort
in
pop
mov
xchg
icebp
test
dec
lea
lret
mov
cmp
mov
popf
jecxz
inc
push
push
jle
imul
and
cmpl
lds
les
mov
sbb
pop
nop
adc
and
stos
fisttps
pushf
dec
xor
cmpsl
rorl
pop
stos
push
push
hlt
pop
jb
lcall
add
pusha
lds
lret
add
xchg
dec
data16
hlt
and
dec
cmp
lcall
imul
andb
pop
bound
jge
outsl
fucomi
push
inc
aam
out
jo
mov
xchg
mov
or
pop
sar
dec
mov
incl
and
jae
push
sub
dec
and
mov
inc
pop
pop
orb
ret
in
jne
lea
mov
mov
cmc
mov
fisubs
inc
and
lods
shl
push
mov
xchg
shr
in
jecxz
push
lock
ret
loopne
fs
xchg
repz
in
pop
pop
lock
lock
adc
repnz
add
negb
xchg
xchg
nop
adc
repnz
stos
mov
jno
inc
in
and
cmp
inc
mov
stos
push
add
es
sarl
or
pop
pop
or
sbb
mov
vandnps
lcall
mov
js
test
dec
mov
test
fisttps
cmp
xor
sbb
cmp
sub
mov
mov
pop
or
add
pop
jecxz
pop
fdivrs
adc
fildl
fisttps
adc
addr16
fld1
mov
and
jecxz
pop
aam
mov
mov
mov
mov
out
mov
cmc
hlt
enter
out
push
mov
dec
cmp
mov
fstl
addb
pop
pop
add
jecxz
pop
sbb
dec
push
jnp
sbb
insl
mov
adc
fldt
cmp
lret
mov
add
jne
pop
sti
mov
jae
sbb
and
mov
mov
mov
incl
scas
mov
inc
imul
add
fildll
inc
lcall
cmpsl
gs
lods
clc
jae
dec
pushf
sti
into
xor
mov
out
push
rcrb
mov
sub
std
stos
je
gs
addl
js
iret
cwtl
push
or
cli
in
popa
add
std
mov
and
call
fwait
jb
enter
adc
int3
adc
sub
loope
push
aas
out
mov
cmc
sbb
mov
shl
mov
lret
mov
add
ret
or
mov
mov
or
add
sub
jle
fwait
mov
or
cmp
cwtl
lret
negl
stos
test
shrl
ljmp
push
mov
dec
push
xchg
jno
or
xor
inc
sbb
fistl
popf
push
stos
inc
lcall
ss
movsb
shrb
jnp
mov
in
xlat
fucomi
sbb
and
mov
andl
repz
rcr
mov
jge
outsl
mov
xchg
xor
and
mov
push
pop
call
push
popf
sbb
femms
xchg
cmp
inc
aas
mov
and
mov
out
adc
jp
dec
xchg
or
scas
jbe
popa
popa
sahf
bound
mov
lods
mov
mov
mov
shrb
and
pop
xchg
pop
adc
sbb
jno
xorl
jns
push
sbb
cmp
pop
adc
jo
pushf
dec
mov
mov
leave
jnp
sbb
hlt
push
xchg
aaa
clc
jecxz
and
scas
push
mov
mov
fisubs
shr
out
or
add
or
add
cmp
xchg
cmp
inc
lcall
dec
rclb
ret
lret
add
push
lcall
scas
inc
movsl
fmull
scas
jb
adc
and
sbb
imul
mov
sbb
xor
int
push
fnstenv
loop
test
rorl
mov
xchg
dec
pop
call
js
js
cwtl
sbb
pop
mov
lahf
cmp
daa
repnz
in
xchg
insb
xor
mov
sahf
fsts
sub
push
pushf
pushl
mov
pushf
arpl
sbb
push
clc
add
mov
cmp
sbb
xor
scas
inc
scas
pop
or
mov
jno
mov
xchg
jne
js
movsl
mov
ret
push
and
mov
stos
push
xchg
jno
jnp
push
lahf
subb
insl
iret
pushf
lds
jl
ror
popf
lret
xlat
insb
add
jbe
insb
dec
pushaw
leave
js
cltd
xchg
add
inc
xor
insb
and
movsl
test
pop
dec
lds
mov
lods
push
lahf
test
bnd
sub
and
xor
loope
dec
adc
stos
jl
loopne
pop
and
lahf
adcb
sub
xchg
sub
dec
cmc
and
adc
push
inc
popf
sti
icebp
jecxz
inc
jo
cmp
cmovae
fstp
mov
adc
jecxz
f2xm1
mov
push
orb
jmp
or
sahf
dec
mov
lret
pop
inc
repz
xor
sub
stos
fistpll
mov
fcmovb
or
movsb
repnz
bound
lcall
or
mov
jg
xchg
jno
dec
push
sbb
jle
mov
test
push
adc
push
fnsave
push
jle
dec
mov
fbstp
stos
jo
lcall
aas
or
cmp
lret
pop
adc
cli
mov
xor
mov
sub
mov
sub
popf
movsb
lahf
mov
outsb
and
adc
pop
loopne
mov
pop
pop
mov
push
cwtl
dec
repz
in
je
cli
mov
push
jno
stc
fnstenv
mov
pop
aas
test
lahf
sub
aaa
shlb
div
sbb
loope
pop
cmp
cmpsb
add
mov
dec
fisttpll
out
inc
pop
sub
sub
movsl
jns
mov
cmp
jmp
ds
jp
fsts
and
xor
push
add
pop
sub
mov
dec
fnstcw
xlat
mov
jb
cmp
lds
jnp
pop
push
pop
scas
mov
das
es
mov
int3
call
pop
inc
jp
add
push
mov
scas
decb
jno
push
mov
icebp
lcall
jb
sbb
and
lret
jg
pop
js
bound
push
mov
pop
fldl2e
jo
jae
loope
sub
lret
filds
jae
lea
sahf
dec
push
lds
inc
push
je
daa
mov
rcrb
push
jno
test
mov
mov
stc
les
sarb
xchg
inc
in
test
aaa
sub
fstp
imul
imul
rcll
mov
shrb
adc
or
pop
add
and
imul
repz
xchg
pop
pop
dec
push
fdiv
jne
mov
or
xorl
mov
ficoml
add
dec
and
jne
push
test
mov
push
in
mov
mov
icebp
mov
dec
scas
inc
lds
aas
test
nop
inc
cwtl
aas
stos
dec
jecxz
stos
lds
into
push
mov
repnz
lds
mov
bound
test
ret
jnp
popf
movsb
loope
pusha
loop
clc
adc
idivl
add
add
dec
sbb
or
mov
test
mov
mov
and
xor
pop
lods
mov
incb
fwait
lea
sbb
cmp
sbb
and
xchg
popf
ja
out
mov
stos
cmpsb
jp
push
popa
mov
into
add
ds
movsb
push
inc
jge
stc
sarb
repz
cmp
pop
lahf
lret
xor
movsb
xorb
sub
mov
outsl
dec
outsl
adc
xchg
leave
fdivl
sbb
dec
mov
insl
jno
xchg
dec
pop
ret
dec
mov
test
testl
push
test
and
jae
push
loope
xchg
add
lods
in
xchg
or
jmp
cmc
in
imul
push
mov
inc
cmc
xor
push
pop
xor
in
xlat
popa
mov
popf
mov
movsb
ss
aas
add
push
fadd
shlb
sbb
jnp
and
push
fsub
clc
fldt
cmp
test
mov
pop
xor
mov
stos
or
push
dec
cwtl
lods
sti
sub
pop
add
jne
mov
pop
adc
push
sbb
xor
mov
test
push
je
pop
pop
jno
nop
fwait
lahf
aam
or
pop
dec
aaa
sbb
adc
mov
xlat
lea
int
sahf
ret
pop
inc
dec
jle
sbb
sbb
push
sub
imul
scas
sbb
jecxz
sbb
lods
xchg
dec
popf
lret
test
pop
imul
add
push
mov
pop
cwtl
fldt
xor
stos
out
lcall
inc
enter
pop
jns
mov
jge
xchg
std
add
pushf
popf
mov
leave
xor
xchg
cwtl
lock
cltd
scas
lahf
inc
adc
jecxz
or
pop
xor
pop
aam
cmp
inc
pop
xchg
pop
mov
stos
jecxz
jns
cs
mov
and
xlat
jg
xchg
push
ret
enter
jg
out
repnz
test
mov
fsubr
dec
adc
orb
mov
rclb
xchg
mov
loope
mov
repz
jl
cmc
pop
lahf
lret
std
inc
and
dec
cltd
pop
jecxz
mov
xchg
push
add
add
xchg
sbb
divb
mov
push
scas
push
test
jns
das
lahf
sub
lret
shl
iret
in
mov
clc
stos
roll
jo
mov
sub
mov
addb
add
xchg
sub
repnz
lcall
lods
adc
cltd
mov
in
push
cwtl
gs
and
xchg
cli
sbb
nop
xchg
pop
push
jno
shlb
sub
push
orl
or
sahf
out
fwait
xor
xchg
enter
ret
xchg
popa
push
into
and
mov
xor
sbb
inc
cwtl
pop
and
movsb
or
fimuls
sbb
push
add
cmc
mov
sub
inc
lock
adc
or
loopne
es
jb
enter
jmp
add
add
lea
pop
mov
rclb
cmpsb
out
jae
out
movsl
push
adc
jnp
push
stos
stos
push
test
stos
mov
push
pop
mov
jle
stos
sub
adc
xchg
gs
xchg
iret
enter
jecxz
jnp
outsl
rcr
jae
mov
dec
cmpsl
push
push
std
lock
dec
cmp
xchg
push
imul
cs
push
cmc
xor
insl
ss
or
jl
dec
movb
dec
clc
pop
ds
jge
and
test
and
mov
or
in
insb
jbe
cli
fistps
xchg
arpl
fwait
xlat
xor
out
ret
xor
aam
rclb
xor
or
cmpsb
jge
fsubr
mov
sbb
dec
mov
xor
std
int
pop
jg
push
mov
scas
arpl
xchg
xlat
insl
push
jnp
mov
jle
mov
add
call
les
dec
pushf
dec
negl
mov
test
push
ret
clc
scas
lcall
lods
jg
inc
inc
roll
cmp
lret
pop
inc
sub
sbb
cmpsl
push
lcall
test
lret
add
adc
pop
test
scas
xchg
xor
sbb
jae
sbb
or
mov
adc
mov
sub
js
leave
lods
pop
xor
add
mov
sub
test
jo
fisubl
shlb
push
xchg
pushf
jae
cmp
xlat
call
xor
and
ljmp
nop
icebp
cmp
mov
popf
mull
out
or
mov
daa
cmp
jnp
test
and
inc
fisubs
in
mov
mov
dec
ss
jne
mov
pushf
dec
and
cmp
dec
jno
xchg
dec
mov
sbbl
arpl
and
dec
push
sub
dec
mov
push
stos
fnstenv
dec
mov
std
mov
call
ret
sbb
xchg
push
rcrl
ljmp
add
adc
leave
push
fwait
orb
mov
lahf
dec
jg
mov
xor
and
pop
js
pop
cmc
xchg
mov
xor
or
push
sbb
jl
jecxz
stos
inc
jbe
jecxz
in
jo
cwtl
mov
out
es
mov
push
xchg
lret
and
inc
push
daa
pop
adc
mov
lret
adc
popa
dec
xchg
gs
jmp
pop
scas
rolb
in
int
sbb
mov
sbb
add
sbb
in
jns
fwait
xor
addr16
sub
cmpb
repnz
pop
ficoml
lods
dec
push
test
clc
fisttpl
sti
pushf
fnstenv
mov
cmp
mov
scas
xchg
test
cmp
pop
inc
push
scas
lret
fsubl
and
pop
inc
in
or
lods
xchg
jp
and
cltd
mov
sbb
add
pushf
popf
push
push
mov
lret
sub
adc
out
mov
add
mov
pop
adc
lea
and
push
pop
adc
xchg
cwtl
inc
add
cmp
and
cmpsb
inc
test
mov
jg
push
or
jecxz
sbb
xor
leave
rolb
push
es
rolb
aas
sbb
arpl
mov
cld
popf
mov
mov
cmp
jae
push
insl
inc
sub
cmp
cwtl
dec
scas
and
mov
jnp
pop
xor
mov
dec
mov
aad
mov
xor
mov
ja
push
scas
jnp
fistl
pop
testb
js
aas
jno
pop
lock
test
add
inc
pop
imul
mov
jecxz
dec
mov
push
adcb
mov
in
int3
or
lock
stos
dec
daa
addr16
lods
sub
adc
push
andl
sbb
jae
sbb
int
lret
and
call
popf
inc
or
mov
xchg
jns
in
pop
pop
daa
jnp
sbb
out
in
add
popf
jp
lret
jmp
daa
loop
hlt
nop
or
lret
ds
addr16
push
adc
add
pop
pop
xchg
stos
shr
data16
div
push
pop
push
je
cmpsb
data16
ret
mov
mov
mov
xchg
scas
add
push
adc
adc
aad
fcompl
lret
push
fistpl
int
push
out
and
out
int
dec
pop
lret
xchg
push
mov
popa
inc
mov
sub
mov
jg
cs
add
jns
xchg
fistl
jb
sub
and
inc
lods
shr
cwtl
popf
ficoms
adc
leave
or
xor
adc
inc
sarb
pop
in
inc
xchg
adc
xchg
xor
sbb
and
dec
lcall
jg
clc
rcrl
mov
loope
mov
and
into
int3
pop
sub
int3
push
outsl
hlt
shr
stos
jne
and
push
leave
fwait
xor
pop
in
push
dec
js
cltd
fistps
mov
imul
pop
frstor
cmpsb
mov
ss
lea
enter
cwtl
push
lock
shrb
mov
and
sbb
xchg
sub
lret
jns
push
test
dec
adc
sub
stc
pop
fisttpll
clc
fldt
repz
pop
xor
mov
dec
lds
imul
dec
push
or
gs
sbb
movsb
mov
mov
mov
call
push
mov
push
mov
add
out
mov
pusha
jp
pop
add
and
scas
mov
push
enter
jbe
inc
dec
mov
ret
es
xlat
xchg
cltd
adc
aad
pop
xchg
fsubl
hlt
cmp
insb
or
or
movsb
cltd
add
int3
inc
mov
pop
pop
push
mov
leave
call
aaa
jmp
scas
jmp
aas
divl
ja
cmp
mov
inc
dec
aad
ret
ret
pop
or
xor
lret
xor
sbb
dec
jns
jg
sub
lret
mov
lret
addr16
mov
xor
pop
push
xchg
jp
adc
mov
fisubrl
pop
adc
stos
repz
inc
fs
sbb
lods
mov
mov
fdiv
inc
pop
jmp
cmp
ss
andl
mov
loop
ljmp
xor
pushf
or
mov
jle
enter
aam
pop
ja
push
pop
adc
cmp
call
outsb
inc
test
popf
mov
hlt
add
adc
inc
push
xchg
xchg
les
int3
cmpsl
add
push
mov
sub
dec
nop
ret
shr
xor
mov
mov
pop
inc
or
lods
ja,pt
jmp
test
mov
cwtl
ret
mov
icebp
mov
cmpsl
mov
repz
leave
cwtl
push
cltd
dec
push
mov
push
test
dec
mov
sbb
cli
sub
fisttpll
icebp
xorw
xchg
push
pushf
sahf
cli
pushf
inc
scas
cmc
test
cmpsl
push
mov
push
jae
sub
push
sbb
xchg
jle
mov
pop
int
jo
push
and
cmp
dec
xchg
jmp
mov
xchg
xchg
xor
je
xchg
mov
adc
mov
push
pop
stos
fisubs
dec
xchg
jb
fwait
lods
xlat
incl
arpl
je
push
das
xchg
pop
inc
adc
jns
pop
int3
sub
mov
mov
call
mov
push
inc
mov
sub
lods
lret
loop
mov
icebp
clc
sti
fists
add
negb
jae
lahf
cwtl
jnp
sbb
mov
inc
push
shlb
adc
mov
bound
in
adc
fst
cmc
and
test
mov
jnp
mov
xchg
filds
call
xor
cld
adc
pop
cltd
filds
xorl
arpl
jge
mov
js
cmp
movsb
pop
pushf
ret
arpl
adc
int3
mov
mov
aad
dec
mov
rorl
add
add
das
adc
pop
es
jns
js
addr16
out
rol
add
lock
or
inc
pop
stos
sub
adc
mov
loope
push
add
pop
jp
pop
jb
fwait
sti
or
inc
sub
add
inc
in
dec
mov
sub
cmp
sub
or
push
mov
popa
loopne
insb
in
mov
fwait
shrb
and
mov
mov
and
xor
sub
mov
sub
cltd
or
in
mov
rorb
or
fbld
test
inc
push
cli
mov
xlat
lcall
fstp
in
pop
xchg
mov
scas
jno
add
sbb
lds
das
sbb
insl
lret
jge
pop
test
mov
pop
test
xchg
pop
gs
subl
lahf
ficoms
mov
push
mov
sarl
sub
mov
out
or
popa
jg
push
jge
mov
mov
mov
sub
and
xchg
imul
push
ss
and
pop
pop
daa
jo
enter
xor
mov
cmc
enter
mov
jp
test
pop
mov
xchg
in
enter
test
mov
in
je
mov
cld
pop
push
dec
mov
jae
mov
or
jo
or
rol
enter
xorl
sahf
pop
insl
into
pushf
in
inc
insl
mov
clc
dec
sbb
xor
test
pop
lods
mov
sbb
aaa
jae
cli
pusha
loope
dec
fisttps
inc
out
lds
and
loope
stos
sbb
sbb
dec
sub
xor
sub
lcall
adc
lea
insl
es
pop
scas
nop
pop
fildll
fs
scas
inc
lahf
xchg
push
js
sbb
je
ret
mov
inc
ret
and
dec
aam
flds
inc
mov
loope
mov
push
outsb
ret
test
bound
mov
adc
ret
pop
hlt
push
call
xchg
test
jmp
push
sbb
push
lret
mov
fnsave
lret
mov
push
sbb
lea
fsubs
mov
jae
mov
adc
mov
and
pushf
pop
xchg
sbbl
xor
fst
lret
pop
nop
icebp
push
pop
xor
inc
stos
clc
stos
xchg
fst
dec
int3
or
in
push
std
stos
js
aas
lds
dec
fxch
popf
pop
ja
inc
xchg
cwtl
adc
lds
cmp
pop
mov
xchg
daa
mov
jnp
addr16
push
stos
enter
sbb
mov
lods
loope
inc
popa
sbb
in
aad
jge
sahf
adc
out
addr16
leave
inc
cwtl
cmpsl
jge
aas
xchg
push
test
inc
rcl
cwtl
push
jb
mov
xchg
adc
push
mov
out
push
fidivrs
test
xchg
icebp
mov
push
fdivrl
dec
or
mov
adc
cmp
jmp
dec
adc
subb
push
mov
test
bound
fucomi
repz
shl
fstl
addb
fisubl
xchg
mov
pop
cmpsb
mov
test
nop
or
pop
ficoml
loope
xor
int3
out
pusha
adc
lea
dec
lret
sbb
lahf
lock
dec
cmp
out
jno
fisttpl
or
lds
sub
cld
fs
push
lret
or
pop
mov
aaa
ja
imul
cltd
mov
mov
adc
or
inc
leave
inc
inc
in
iret
mov
pushf
cmpsb
and
push
adc
inc
xchg
xchg
jg
adc
and
movsb
sbb
inc
rcll
imul
mov
cmp
cmpsb
xor
fidivs
fwait
outsl
cmc
clc
cmpl
daa
in
hlt
dec
sbb
lea
inc
mov
sub
mov
int
pop
mov
icebp
out
inc
hlt
cmpsl
ret
xchg
jp
mov
adc
cld
ret
lock
lock
mov
mov
mov
std
dec
cmpsl
sbb
daa
lret
movsl
mov
add
xor
aad
sbb
xor
insb
shrl
mov
stos
into
sbb
xlat
ds
mov
add
jae
dec
add
push
das
cmc
ljmp
test
movsl
mov
mov
xchg
mov
jo
or
and
sub
jg
aam
jno
leave
loop
and
push
lods
push
cltd
jl
cmp
addb
es
les
sbb
aas
pop
fldl
mov
inc
dec
push
jecxz
xchg
and
test
gs
pusha
xchg
and
mov
and
test
sub
sub
inc
andl
mov
mov
mov
fwait
clc
or
fcoml
mov
mov
mov
test
addr16
cmp
loope
mov
mov
pop
test
or
push
push
push
ret
aam
imul
testl
in
cmpsl
xchg
mov
and
popa
sub
imul
dec
jno
mov
and
push
mov
jno
lods
out
xorl
xchg
dec
mov
jecxz
movsl
fstp
decb
cmpsl
int
jbe
aas
outsl
iret
stos
jecxz
cli
adcb
pop
repz
inc
std
push
xor
cmpl
and
and
popf
cmp
or
mov
ret
push
push
out
add
cmp
and
inc
mov
jns
cmpsb
mov
add
sub
test
dec
test
dec
lret
sbb
int3
ret
sbb
pop
int
cli
mov
loopne
std
aad
pop
add
mov
iret
lret
and
jmp
cmp
repnz
mov
out
adc
lods
xor
sti
cli
mov
test
int3
pop
inc
cmp
icebp
push
lock
and
pop
inc
popa
test
xchg
loopne
aad
les
or
pop
daa
sbb
pop
cmp
scas
jle
lcall
inc
pop
mov
lods
mov
aam
sbb
inc
mov
and
mov
sbb
jae
aas
ljmp
inc
repz
inc
cmpsl
adc
mov
je
rorb
xchg
je
sbbb
cmpsb
insb
jbe
xlat
pop
and
movsl
xchg
aaa
fcmovnu
push
lds
fsubr
addr16
mov
leave
rcrl
aas
adc
jle
mov
inc
mov
adc
stos
adc
sub
fcmovnb
popf
cmpl
add
mov
mov
mov
jns
jg
inc
pop
sbb
imul
iret
js
in
fsubrl
and
popa
pop
pop
arpl
mov
lods
push
xor
es
out
add
jno
dec
mov
insl
mov
into
sub
xchg
mov
push
jae
mov
push
pop
push
sub
sub
dec
sub
fisttpll
mov
pusha
jp
inc
lahf
icebp
xchg
mov
aas
lret
addl
jge
popa
fnstcw
push
shlb
sbb
adc
xchg
cmc
mov
jg
stos
mov
ja
sub
jns
enter
out
adc
cmp
hlt
push
push
or
out
mov
addl
pop
in
gs
mov
mov
cmp
loop
movsl
and
int
sub
ds
jecxz
repnz
push
jns
adc
xchg
mov
and
adc
pop
pop
repnz
xor
or
lahf
lret
fs
sbb
sub
aas
scas
mov
jb
cmp
jo
cld
mov
repz
stc
inc
push
cld
mov
das
xchg
je
mov
pop
or
mulb
push
fwait
mov
test
mov
inc
jne
add
cmpsb
dec
dec
ret
sub
cmp
popf
inc
pop
rcrl
repnz
hlt
test
and
sti
jl
xchg
clc
std
sbb
subl
inc
mov
les
mov
dec
je
push
fdivrs
xlat
xor
inc
mov
das
aad
rcrl
insb
cmpsl
jnp
pop
jae
lea
hlt
js
in
fnstenv
jl
loope
adc
out
inc
sub
cmpl
les
inc
mov
push
stos
xchg
xor
daa
mov
test
pop
pop
leave
mov
mov
cld
add
inc
ljmp
lahf
sbb
cmp
test
gs
ss
jns
mov
loope
mov
sarl
dec
cmp
test
imulb
loop
jo
pop
add
inc
pop
pop
lret
push
push
or
dec
pop
mov
jno
aad
mov
push
leave
les
roll
push
jge
notl
ret
orl
mov
idivl
push
es
or
xchg
xchg
jg
mov
fistpll
mov
iret
lock
adc
dec
adc
sbb
pop
dec
fld1
jb
cmp
push
xchg
hlt
pop
rolb
sbb
cmp
lea
sbb
aam
or
pop
cmp
or
daa
mov
int
cmp
out
out
fucomip
bnd
insl
loopne
and
scas
jns
mov
adc
jno
and
dec
pusha
int
mov
mov
dec
adc
mov
test
push
ljmp
int3
cltd
lret
pop
lods
mov
lret
cmpsl
xchg
test
sbbb
xchg
sbb
call
movsl
jne
mov
sbb
xor
cmp
js
popl
pusha
mov
out
pop
and
iret
pop
xor
jbe
popa
dec
addb
jmp
sub
jne
in
ja
cmp
inc
cwtl
out
xchg
insl
jp
mov
jge
jmp
xorb
pop
aas
popa
test
loop
mov
add
nop
sub
pop
dec
push
jb,pt
jmp
jecxz
ljmp
add
js
divb
push
push
push
fidivs
imul
cmp
or
add
xor
mov
je
adc
aad
out
orb
sbb
leave
xchg
mov
cmp
push
jge
lods
in
xor
popf
cli
mov
movsl
int
inc
ss
mov
mov
in
mov
mov
bound
add
push
cmpb
xchg
mov
mov
mov
xor
jg
scas
repnz
mov
call
sub
and
xchg
mov
mov
jecxz
lcall
addb
add
shlb
mov
mov
xchg
cmc
mov
xchg
stc
xchg
and
xchg
and
pop
clc
in
and
or
and
mov
lds
jl
out
mov
lock
mov
or
mov
jmp
daa
jge
outsl
pop
pop
add
or
push
jb
push
inc
in
inc
lds
ds
mov
or
jl
jnp
jecxz
fldt
mov
or
mov
adc
ret
push
rolb
sub
xor
mov
notl
jnp
lahf
sub
push
sbb
je
bound
mov
popf
push
inc
adc
ljmp
mov
adc
mov
into
mov
pop
scas
shll
xchg
dec
popa
mov
cmp
repz
mov
push
push
inc
jge
in
mov
std
jne
gs
loope
mov
out
push
or
insb
jbe
and
scas
and
lcall
mov
jnp
cwtl
arpl
mov
mov
shrl
shr
lret
sbb
ljmp
icebp
out
std
pop
movsl
movsl
lds
jle
xchg
mov
lret
xlat
jmp
ret
insl
pop
inc
sbb
jle
jo
cmp
pusha
shrb
clc
jb
fidivrs
and
cmp
sbb
mov
inc
inc
mov
mov
mov
bound
mov
cltd
xchg
pop
gs
dec
aas
sub
push
sub
lret
push
push
jecxz
adc
pop
fs
jge
rcll
inc
pushf
xor
popl
dec
and
add
cld
cmp
rcll
in
andl
inc
scas
push
dec
fsubs
addr16
mov
sub
mov
push
dec
shrb
inc
fistpll
fdivs
and
pop
lea
pop
int3
jbe
or
hlt
js
test
push
daa
leave
sbb
push
movsb
xor
movsl
sbb
ja
roll
sahf
test
cmp
xor
mov
mov
fxam
or
aam
sbb
xor
in
sub
mov
lahf
addr16
ret
mov
fcmovnu
outsl
sub
lret
add
or
pop
and
iret
sahf
sbbl
jae
lret
arpl
ss
or
data16
sub
dec
push
cmp
imul
adc
push
mov
mov
mov
lret
jnp
mov
iret
enter
lahf
push
dec
iret
adcb
fcmove
sti
fs
jae
pop
sub
daa
out
es
stos
in
iret
inc
imul
sahf
inc
shr
push
test
ret
xchg
inc
mov
fbld
das
cmp
mov
xor
dec
add
cmp
cli
or
cmp
cmp
testb
lret
push
xchg
out
inc
movsl
push
sub
std
ficoml
dec
cmp
cmc
pop
data16
jb
inc
inc
ja
mov
cmp
xor
jbe
mov
pop
push
leave
inc
adc
cmc
lds
enter
addr16
sub
sarb
clc
addr16
sbb
pop
inc
cmp
dec
test
jle
je
jns
std
jae
push
mov
icebp
dec
insl
cmp
in
xchg
test
sub
jp
add
cmp
movsl
test
xchg
sbb
in
loop
add
dec
addl
cmp
xlat
clc
sbb
mov
jae
pop
jg
xchg
fdivrs
je
and
lahf
je
add
mov
mov
jle
or
xchg
jb
ret
dec
iret
pop
mov
fwait
ds
rclb
or
inc
inc
jno
fisubrs
fcomp
mov
pop
sahf
xchg
or
into
pop
movsl
pop
in
mov
sahf
lods
shrb
aam
call
cmp
sub
sbb
js
sbb
aam
inc
fistpl
adc
popf
or
sbb
cltd
andb
scas
adc
leave
mov
mov
sbb
push
dec
jns
mov
mov
sbb
sahf
and
clc
fcmovne
hlt
sarb
sahf
ret
rolb
sbb
stc
jge
clc
fcmovnb
test
in
push
or
pop
push
mov
pop
scas
shrl
lds
popf
fldl
cmp
aad
lods
cltd
add
adc
xchg
movl
andl
sbb
lret
xchg
cmp
addr16
cmp
int
lds
cmpsb
scas
test
pop
inc
xchg
daa
jo
xor
mov
adc
xchg
jne
and
xchg
mov
push
or
fisubrs
fldpi
mov
cmc
test
nop
out
mov
int3
in
repz
repz
mov
mov
xchg
icebp
mov
fwait
lods
movl
and
dec
pushf
or
repz
dec
dec
sbb
ret
test
movsb
fisubl
movsb
jmp
xlat
int
inc
mov
mov
iret
sub
rorl
cmp
testb
fidivrl
lar
jbe
test
cmc
movsb
push
jno
sbb
pop
jp
and
xchg
jp
loop
pushf
nop
js
push
mov
inc
add
pop
aas
outsl
jge
in
adc
out
mov
lret
lret
les
inc
cmp
and
in
lods
pop
orl
out
cltd
call
mov
pushf
out
pop
inc
mov
cmp
in
sbb
lret
sub
imul
mov
pop
push
xchg
in
mov
push
adc
and
into
mov
sti
and
ds
stos
push
les
fdiv
fwait
cltd
sub
mov
inc
cmp
cmc
push
jg
or
sbbb
mov
test
xchg
mov
iret
inc
cmc
lods
xchg
jmp
sbb
int3
pop
test
and
sbbl
jecxz
inc
ret
icebp
sbb
jno
add
fcmovnu
dec
les
add
mov
inc
mov
cmpsb
enter
pusha
adc
xorb
mov
sub
sbb
fdivs
in
andl
test
pop
xor
add
js
mov
ret
fisubrs
xchg
dec
push
pop
lret
sbb
sub
cmp
inc
inc
mov
iret
movsb
inc
push
shlb
shr
mov
sbb
je
ret
fdivs
mov
test
xorl
loopne
jno
cs
sub
pop
je
mov
xchg
dec
sbb
mov
mov
pop
xchg
fsubrl
pop
ret
test
xchg
dec
pushf
pop
test
jle
test
notb
sub
mov
mov
jle
add
fwait
mov
xchg
sti
mov
sub
shrb
test
sbb
dec
int3
imul
push
mov
test
test
sti
add
sub
push
push
or
subb
scas
icebp
or
sarb
imul
dec
push
dec
test
push
les
ljmp
dec
push
mov
jne
jmp
iret
jne
jecxz
ss
lea
xor
iret
pop
or
pop
ljmp
mov
ljmp
scas
mov
sub
xor
jb
pop
and
xor
and
outsl
clc
push
inc
adc
std
cmpsl
xchg
sbb
popa
cltd
rorl
mov
fildl
mov
and
sbb
test
lret
mov
idiv
xchg
inc
pop
scas
mov
sbb
mov
pop
push
dec
popf
in
adc
lods
jbe
movsl
inc
sub
pop
pushf
lds
stos
lds
ja
dec
gs
jae
cmp
fldcw
add
push
cmp
cli
fcomps
movsb
repnz
mov
mov
rcrb
pop
mull
inc
sbb
rolb
sti
xchg
mov
inc
insb
sbb
mov
or
adc
dec
mov
jae
xchg
mov
je
mov
jp
fistl
xlat
testb
xor
call
das
xchg
idivl
add
in
notl
sub
loopne
pop
xor
ljmp
test
adcl
cmp
push
lcall
mov
shll
push
pop
repnz
jnp
test
frstor
lret
adc
popa
lcall
mov
adc
mov
dec
mov
shlb
movd
test
sbb
in
pop
cmp
adcl
xchg
lahf
std
pop
mov
in
mov
mov
cmp
or
mov
sbb
in
sti
dec
xor
clc
mov
dec
in
and
adc
ficomps
inc
cwtl
lods
push
inc
push
popf
pop
lods
pop
inc
xchg
mov
cltd
enter
stos
push
test
aaa
orb
hlt
xchg
xchg
xchg
push
adc
xchg
movsb
add
shlb
add
add
inc
stc
mov
and
sahf
lcall
push
inc
shl
fwait
xor
clc
jbe
gs
jle
nop
mov
lods
icebp
aaa
cmp
xchg
or
fldenv
xor
arpl
fwait
xor
lret
adc
mov
lret
fisttpll
xor
fadd
les
jno
add
sub
movl
mov
adc
test
mov
xor
mov
mov
mov
inc
xchg
push
add
dec
push
js
mov
and
fwait
leave
ror
iret
ret
mov
fidivrl
lret
jge
jns
mov
ret
in
sub
fsubs
gs
inc
and
test
adc
in
cwtl
sub
sarb
repz
push
adc
adc
inc
inc
inc
mov
cli
jb
jp
sub
movsb
xor
xchg
push
adc
jl
shl
fisubl
sub
lods
mov
popf
sub
cmpl
add
lea
cmc
mov
bound
lea
jnp
test
in
xor
movsl
cmp
mov
sub
mov
cmp
cli
mov
xor
int
test
jnp
ja
in
loope
lock
ret
repnz
sbb
add
shll
subb
xchg
mov
mov
test
adc
insb
je
push
aam
add
add
and
adc
pop
int3
cmp
or
roll
pop
mov
and
mov
stos
xchg
xchg
popf
inc
cmp
fwait
test
fwait
inc
mov
fwait
cltd
or
loope
push
test
mov
inc
and
popf
sub
das
fadd
and
sub
int3
aad
arpl
or
or
pop
xor
jl
pop
mov
mov
sub
sub
loope
repz
mov
call
push
pop
popf
jge
dec
or
cs
jmp
jge
stos
gs
dec
lret
mov
outsl
mov
iret
sarl
push
xor
push
mov
mov
insl
lret
rcrl
push
test
lock
shlb
movsl
mov
addr16
fcoms
dec
xorl
cmp
or
xchg
cld
idivl
push
mov
addl
dec
cli
and
mov
and
das
into
push
push
mov
loopne
inc
xchg
dec
jae
ret
jae
stc
sub
ret
dec
ljmp
iret
xchg
jg
push
mov
pop
xchg
lret
jecxz
fists
aas
in
jb
movsl
xor
or
jle
cmpsl
test
ds
xchg
icebp
into
pop
mov
incl
xchg
push
addr16
in
lret
or
repnz
pop
cld
das
cli
rolb
mov
addr16
sub
dec
lods
aad
adc
xor
shrl
mov
or
adc
aaa
int
ret
pushl
movsl
sbbb
rolb
dec
mov
popf
out
cmpsl
push
testl
scas
dec
fs
dec
adc
xor
pop
mov
dec
test
or
add
dec
jns
mov
pop
xchg
jl
push
stos
push
scas
popl
mov
push
cmp
push
dec
mov
ljmp
jmp
push
lea
decl
mov
ljmp
jae
pop
jae
enter
mov
in
jns
sub
movsb
aad
xchg
adc
imul
fmuls
mov
jg
mov
sbb
sub
stos
insl
mov
aas
sti
cmp
lahf
cmp
cld
cmpl
in
push
rcrl
movsl
aad
cs
pushf
xor
jne
push
fst
pop
mov
imul
push
hlt
int
jge
jle
arpl
pop
add
fbstp
xor
inc
hlt
inc
sub
inc
clc
adc
shl
add
std
aam
mov
pop
cmp
sbb
push
or
xchg
pop
sbb
test
mov
add
and
inc
inc
adc
jae
js
lret
cmc
ret
or
fs
jo
cmp
or
into
test
ret
je
cmp
xchg
mov
repnz
mov
imul
int3
jbe
enter
mov
xchg
sub
mov
cltd
stc
fimull
lret
pop
pushf
ret
dec
push
repz
sub
imul
popf
testl
jne
cmc
lret
in
dec
sti
ficoms
inc
adc
pop
dec
aaa
jbe
add
inc
or
nop
jbe
mov
and
push
cmpsb
ret
popa
stos
jb
shll
cmc
lods
mov
bnd
inc
shl
pop
jle
in
xor
push
xchg
ljmp
cmpb
imulb
push
test
popa
mov
stos
scas
arpl
mov
push
add
add
lock
loop
push
cmp
sbb
scas
leave
test
sbb
and
cmc
popa
cmp
lea
mov
int
rcl
mov
cltd
repz
imul
mov
jnp
or
mov
enter
mov
aaa
mov
inc
and
sub
cmp
cld
shlb
mov
xor
xor
mov
int
pop
jns
jg
mov
in
dec
inc
inc
idivl
ret
mov
lahf
sar
inc
mov
or
mov
add
inc
ljmp
dec
and
xchg
sarl
xchg
ret
dec
clc
fndisi(8087
jnp
out
adcb
xor
test
pop
cmp
xchg
fcmovnbe
push
inc
adc
xchg
dec
shll
lahf
inc
mov
xor
test
inc
aas
mov
dec
jge
and
and
push
mov
jnp
ja
fimull
adc
add
jge
add
mov
pop
into
add
dec
xor
rol
xor
stos
aad
and
es
sbb
mov
cmpsb
jo
and
inc
jmp
mov
enter
or
push
das
sub
cs
xor
jp
sbbb
inc
mov
sub
ss
icebp
aad
rcr
mov
in
lea
ja
xor
or
mov
cs
fnstsw
popf
and
and
cmpl
arpl
jno
push
push
insb
aad
lods
or
jbe
stos
pop
xchg
aaa
mov
into
ds
lcall
in
xchg
pop
flds
lds
dec
arpl
dec
mov
adc
aam
jecxz
mov
push
add
sbb
mov
pop
dec
sti
icebp
xlat
rclb
gs
pop
shlb
repnz
shlb
mov
mov
and
repz
add
inc
orb
xor
mov
mov
andb
loop
mov
lods
sbb
pop
inc
dec
mov
lods
rolw
int3
lea
fisubrs
sbb
fdivs
mull
out
or
cmp
cmp
ljmp
cmp
and
insl
loop
xlat
mov
stc
pop
add
cld
orb
sub
fcoms
mov
pushf
pusha
das
lods
mov
or
push
jge
add
lods
lret
fucomp
je
fildll
jae
add
nop
jnp
inc
into
fadds
push
add
sbb
adcb
je
xchg
pushf
pushf
rorl
movsb
lods
cmpl
xchg
call
mov
push
mov
add
mov
inc
cltd
inc
icebp
das
loope
ds
xorl
or
imul
pop
jb
daa
push
leave
mov
adc
mov
and
cli
test
and
jl
repnz
mov
ljmp
mov
ds
les
and
inc
cltd
mov
dec
sahf
dec
test
pop
cmpsb
ss
cmp
pop
add
in
out
idiv
fcmovu
adc
pusha
xlat
hlt
mov
mov
shrb
fbld
cltd
adc
xchg
pop
repz
fstl
outsb
loop
xchg
movsb
pop
scas
mov
sbb
mov
jnp
pushl
xor
shll
add
mov
mov
jne
pushf
pop
fistpl
call
xor
imul
jp
mov
std
jo
out
test
pop
testl
adc
pusha
in
jb
xchg
mov
xchg
repz
cmp
xor
dec
or
pusha
insl
cmovl
sti
push
dec
mov
or
test
test
inc
fbld
shlb
mov
dec
pop
in
mov
movsl
and
push
mov
cmp
lahf
cmpsl
cmovge
loop
jns
rcll
lret
into
iret
pop
adc
scas
cwtl
or
and
and
addr16
inc
ret
scas
mov
out
push
dec
xor
push
adc
imul
cmovo
inc
into
test
addl
jo
pop
ljmp
push
cmp
mov
mov
adc
daa
test
mov
adc
movsb
mov
cs
pop
mov
jl
and
pop
push
out
jo
xchg
add
sub
mov
xchg
imul
pop
xchg
inc
fcoml
daa
fsubl
aaa
fsts
pop
inc
loop
mov
lock
in
data16
sub
xchg
sub
sub
movsb
and
xchg
sbb
adc
out
into
adc
jbe
pop
xor
adc
inc
inc
out
mov
lods
push
lcall
xor
jg
pop
sbbb
pop
mov
add
jg
push
jne
push
mov
mov
je
and
pushf
js
jp
fisubrl
pushl
sub
mov
mov
lods
verw
jb
pop
scas
mull
push
aam
or
test
bound
stos
jae
cs
jmp
aam
push
cmp
jg
cld
mov
fcomps
jo
or
mov
inc
clc
pop
cmp
dec
aam
lret
and
or
xor
mov
out
in
and
enter
cmp
lea
mov
enter
rcrl
xchg
mov
add
ds
imul
inc
arpl
negl
push
int
or
cmp
jecxz
div
clc
or
lods
das
cltd
adc
xor
add
push
lods
sbb
leave
pusha
iret
dec
cs
mov
arpl
cmp
or
mov
pop
push
mov
pop
repnz
lds
inc
rcl
dec
and
repnz
mov
or
pop
ljmp
dec
loop
mov
dec
inc
mov
sbb
arpl
push
mov
sbb
or
addr16
jge
out
lahf
inc
push
inc
stos
xor
mov
xor
dec
ljmp
adcb
pop
adc
jp
inc
mov
mov
int
jb
add
std
bound
std
es
aaa
fnstcw
mov
cli
popa
out
mov
std
adc
mov
movsl
hlt
fwait
je
pop
add
imul
lret
call
jg
roll
push
test
mov
cmpl
xor
std
rolb
mov
mov
je
cmp
in
lods
hlt
xchg
inc
ret
dec
sbb
decl
jae
xor
push
clc
lock
dec
lret
aad
pushf
dec
push
cmp
ret
sbb
lcall
cwtl
cmpsl
aam
push
lods
cmp
lea
popf
pop
imul
lahf
rol
imul
or
adc
loop
cmp
xlat
cmp
imull
mov
aam
repnz
xchg
sbb
mov
loopne
je
inc
rcrb
ret
inc
mov
sub
dec
push
jl
aam
testb
mov
sbb
loop
xor
in
sub
and
inc
push
daa
jne
or
ljmp
and
mov
sub
lea
shl
or
imul
mov
fcmovnbe
out
lret
add
test
ret
jae
enter
push
jnp
test
lods
mov
lret
lahf
and
lahf
pop
cmpsl
rcll
inc
dec
mov
sub
scas
xchg
xchg
lods
ret
stc
std
mov
orb
push
gs
pop
fstl
cmp
sahf
sub
bound
movsb
pusha
add
mov
adc
xchg
cmpsl
dec
mov
sbb
str
or
push
stos
into
div
std
decl
mov
out
je
cmp
inc
jecxz
jb
cmpsb
cmpsb
fstpt
mov
es
xchg
or
cmp
repz
push
data16
mov
aas
aam
xor
loopne
jns
test
jle
dec
fiaddl
jb
mov
incb
jns
sub
pop
scas
mov
jecxz
fidivl
and
fwait
pop
cmpsb
push
adc
adc
sbb
sti
mov
orl
sahf
add
inc
mov
test
decl
lahf
ficompl
sbb
cs
sub
stos
xchg
das
push
lret
sbb
call
mov
popa
add
rorl
insl
cmp
orb
lock
movsb
mov
leave
push
pop
and
shr
dec
in
push
neg
mov
inc
cmp
jmp
leave
repz
movsb
sbb
inc
jl
aas
cwtl
xor
movsb
push
sti
mov
ret
xchg
test
test
shlb
mov
xchg
insb
jbe
push
fwait
movsb
mov
mov
pop
cwtl
les
mov
lea
dec
fadds
xor
cwtl
arpl
stc
cmp
cmpsb
cmpsb
xor
enter
das
dec
test
fsub
jae
and
inc
mov
push
repnz
or
adc
sub
add
or
repz
lods
jecxz
cli
or
fwait
mov
lods
xchg
scas
fildl
add
sti
xchg
pop
xchg
loop
push
pop
sbb
mov
int
into
push
inc
pop
mov
je
pop
push
and
or
add
jae
dec
cmpsl
push
mov
and
pop
leave
sub
repz
lahf
cmp
es
inc
shlb
mov
inc
and
adcl
test
imul
cld
dec
mov
movsb
je
ret
into
hlt
push
fiaddl
les
mov
popf
mov
mov
mov
jae
fwait
lea
and
cmpsl
stc
fmull
fld
jb
mov
out
mov
imul
pop
and
in
js
call
faddl
mov
call
sbb
fcoml
rcrb
inc
add
ffreep
repz
lock
mov
stc
je
lock
jge
test
ret
test
ret
xorl
adc
cmc
clc
cmpsl
mov
mov
cmpsb
mov
pushf
mov
sti
and
sub
roll
arpl
loopne
test
sbb
push
lock
adc
fistps
push
mov
push
inc
dec
les
sahf
xor
xor
cltd
cmp
and
jnp
mov
loop
scas
sbb
repz
or
push
stos
into
mul
std
decl
mov
xor
mov
stos
cmp
pop
scas
dec
jbe
lods
xlat
push
mov
sub
and
call
push
dec
add
inc
jl
sbb
mov
shr
adc
pop
cmp
fidivs
pop
das
mov
mov
push
sub
mov
push
sub
mov
lret
clc
push
jl
mov
lret
sbb
lds
in
inc
fwait
jecxz
jecxz
cld
test
loope
and
jecxz
arpl
in
mov
xchg
sti
in
loop
mov
xor
adc
sti
mov
xor
in
movsl
jle
xlat
inc
in
in
outsb
insb
fildl
cmp
inc
out
gs
fs
dec
loopne
movsb
push
je,pt
push
loope
in
cs
lret
push
loop
and
push
inc
iret
push
jecxz
fs
imul
push
test
idivl
into
fsubs
stos
dec
pop
ror
je
sub
fsub
fucomp
push
add
int3
fisubrs
lods
dec
pop
dec
adc
iret
sbb
mov
pop
mov
sub
ret
jl
adc
mov
pop
into
dec
daa
adc
aaa
ret
fsubr
pop
das
or
mov
pop
push
sub
or
xor
fisubrl
cmp
add
mov
pop
dec
or
add
xor
fisubrl
clts
xchg
mov
mov
fwait
jecxz
jecxz
cld
lea
loope
xor
rcrl
xor
shrl
mov
lret
fisttpll
shll
dec
and
lret
rorl
cmp
xchg
test
fsubrs
arpl
das
lret
mov
push
movsb
push
sub
inc
pop
push
adc
fucomi
repnz
lods
push
mov
push
or
mov
inc
sbb
mov
adc
loop
mov
and
jne
loopne
sub
push
out
inc
clc
cmp
repz
xchg
sbb
xchg
dec
mov
mov
shrl
push
or
aad
cmp
incb
mov
stc
sub
mov
mov
insl
lds
fdivr
fsubl
ss
lret
inc
mov
sbb
mov
outsl
adc
int
adc
pop
xor
dec
mov
rcr
mov
leave
adc
mov
hlt
lcall
pop
push
xchg
pop
and
jl
ja
stos
cmp
ljmp
loopne
sub
mov
adc
mov
mov
fldt
imul
cmpsl
xor
leave
test
leave
sbb
lods
cmpsb
fldenv
int
jo
outsl
rcrb
add
sbb
jg
stos
mov
scas
add
xchg
sub
xor
xchg
xchg
pop
cmp
mov
lret
lcall
sahf
dec
push
fs
jle
aad
fwait
inc
jmp
incb
mov
fidivs
test
xor
movsb
push
pop
xor
pop
dec
mov
jg
hlt
insb
or
mov
cltd
test
and
jns
cmp
testl
fimuls
xchg
sbb
cmp
mov
cmp
rclb
push
jmp
lds
jmp
jno
pop
jae
outsb
xor
shlb
dec
mov
or
lahf
es
into
loopne
and
sub
shlb
mov
ss
jg
push
repnz
mov
push
mov
repnz
or
fsubs
scas
jg
leave
loope
jle
scas
psllw
icebp
cmp
sbb
xchg
les
mov
push
cmc
mov
inc
mov
popa
aam
xor
ret
inc
sbb
mov
insl
xlat
enter
mov
xchg
imul
fldt
xchg
enter
mov
hlt
in
out
mov
inc
pop
repnz
daa
inc
jecxz
sbb
movsb
idivl
shrb
mov
imul
daa
jb
aam
xchg
in
aam
ret
scas
add
test
mov
jbe
jmp
out
loope
and
aad
cmp
mov
inc
pop
xor
les
cmp
and
popf
repz
stos
adc
stc
xor
push
mov
xor
scas
lea
scas
jecxz
gs
fistl
dec
push
ficoml
cmp
test
cmp
and
sub
push
js
mov
inc
mov
call
push
sub
and
out
dec
aam
lret
gs
call
or
les
popa
jecxz
call
mov
mov
xchg
incb
sbb
or
xor
inc
xlat
adc
xor
loop
xor
divl
addr16
mov
mov
in
pop
add
inc
fcmovbe
ficomps
test
lods
shlb
in
ja
lahf
lods
shll
cmc
cld
fnstcw
adc
mov
iret
push
sbb
fisttps
xchg
push
sub
xchg
ljmp
mov
bound
sub
or
lds
lods
in
cwtl
stos
hlt
notb
lret
orb
push
pusha
popf
mov
jbe
lahf
mov
aad
fwait
pop
mov
add
bound
mov
push
xchg
pop
inc
lock
cltd
js
fs
std
mov
dec
sti
sbb
pushl
mov
jb
adc
adc
jecxz
adc
xor
pop
gs
cmpsl
sahf
mov
ds
shrl
jae
cmpsl
hlt
pop
in
adcb
repz
mov
stc
rcl
inc
int
add
and
inc
xor
dec
enter
icebp
sbb
mov
or
jle
decb
sbb
cvtpi2ps
mov
sbb
sbb
popf
into
or
or
cli
or
pushf
aad
sti
xor
das
jno
mov
scas
jo
mov
pop
arpl
out
ret
pop
push
push
jl
stc
xchg
xchg
sahf
dec
cmpsl
add
pop
and
movsb
push
sub
add
jbe
movsb
mov
test
and
in
mov
in
out
fcmovne
adc
pop
mov
xchg
aad
mov
mov
sbb
jb
xor
popl
addr16
pop
rorl
aam
pop
push
push
pop
ljmp
and
fsubl
mov
xlat
adc
fcompl
xor
mov
dec
add
add
mov
fdivrs
sub
lret
inc
sub
das
gs
das
imul
push
push
jp
arpl
lea
xchg
mov
mov
push
pop
jno
nop
fwait
lahf
in
inc
mov
push
fdivrs
test
jbe
or
mov
xor
arpl
mov
pop
daa
lods
push
jg
lds
cli
lods
dec
sbb
scas
mov
testl
mov
shll
iret
enter
addl
in
xor
mov
dec
movsl
and
nop
int
and
push
pusha
jmp
rcrl
jae
sub
mov
jg
and
and
mov
xor
cmp
jle
test
es
test
fildl
xorb
or
ret
sbb
jbe
in
in
push
sub
fimull
ss
sti
incb
fbstp
pop
mov
jae
dec
icebp
popf
jmp
push
jae
cmp
jne
mov
or
icebp
das
in
lods
mov
cli
cwtl
and
es
ret
shlb
jl
das
arpl
inc
jmp
aam
lahf
sbb
adc
mov
idivl
bnd
ror
push
xchg
loop
test
loopne
and
mov
xor
ljmp
inc
add
ret
into
sub
test
jno
add
push
mov
push
jnp
cmp
and
mov
xchg
clc
paddusb
mov
scas
call
data16
fbld
cwtl
popa
or
inc
daa
and
loop
mov
decb
mov
or
cmp
mov
xchg
neg
mov
push
js
fcmovbe
daa
push
pop
pushf
sbb
xchg
mov
int
xchg
stc
xor
outsl
enter
pop
pop
mov
cltd
add
sub
mov
xlat
pop
gs
jb
mov
jns
mov
xor
push
rcrl
mov
dec
xchg
inc
xor
call
mov
pop
jecxz
mov
movsb
aaa
mov
cld
adc
pop
cmp
je
cmp
and
mov
jbe
xor
ror
lods
or
hlt
xchg
jmp
xor
rclb
pop
insb
nop
clc
ret
sub
test
push
mov
fsubrs
mov
pushf
dec
and
cmc
in
push
xchg
loop
xchg
andb
sub
out
xchg
jns
ret
jno
sbb
popa
mov
sub
fsubrl
or
icebp
loopne
das
call
std
inc
imul
stos
movsl
popf
push
jnp
and
mov
sub
les
sub
jne
mov
or
cmp
fstpl
dec
sbb
aam
sbb
cmpsb
hlt
mov
mov
inc
mov
lret
stos
xorb
aas
mov
push
int
test
aaa
and
ljmp
adc
scas
dec
outsl
clc
out
notl
jbe
mov
clc
mov
cld
add
je
loop
xor
dec
adc
cmp
in
scas
lds
pop
lea
jmp
scas
fiaddl
or
loope
test
test
pop
sbb
out
xchg
cmp
les
inc
pop
mov
dec
pop
lods
or
lods
inc
inc
dec
cmp
imul
sbb
shll
call
cmp
jo
xchg
push
shrb
adc
into
fbstp
out
push
jns
sbb
cltd
aad
incb
jmp
sarl
cmc
insl
pop
mov
lea
ret
mov
mov
nop
adc
push
enter
pop
test
bound
dec
lret
xor
push
movsl
mov
dec
das
or
leave
aam
shll
and
imul
inc
inc
pop
call
inc
pop
mov
lock
jbe
cmc
jo
stc
test
cmp
imul
jg
enter
sub
fsubrl
fwait
sahf
pop
and
test
dec
lock
mov
sbb
dec
mov
into
inc
mov
xchg
les
adc
repnz
imul
test
outsb
push
cmp
push
add
xchg
lcall
stc
bound
loopne
cs
add
filds
sti
sub
push
fcmove
loop
in
adc
repz
in
ds
adc
call
add
inc
xor
xchg
cmpsb
pop
out
fwait
mov
jge
jg
insb
sbb
movsl
int
outsl
ror
fidivs
pop
adc
xor
mov
mov
mov
mov
in
sub
test
insl
sbb
into
sub
xor
cmp
cmp
das
lret
and
or
fiaddl
movsb
call
shrb
or
mov
mov
adc
aam
xor
call
xor
in
push
jae
popa
xchg
lods
push
dec
cmp
mov
pop
aas
sbb
icebp
fildll
pop
push
mov
insl
insl
int
movl
sbb
ret
and
xchg
jo
push
aaa
fwait
lods
push
test
push
scas
sub
mov
fsubr
in
lds
je
movsb
xor
jl
pop
dec
cmp
pop
inc
mov
mov
popf
xchg
jge
dec
and
rcr
arpl
push
scas
fbstp
jnp
fistps
ljmp
sbb
cmp
movsb
jecxz
out
inc
xor
mov
jecxz
push
mov
lret
out
mov
ror
dec
rcll
in
xorl
xchg
jecxz
out
lahf
jno
in
call
insb
sti
jecxz
rol
sbb
sbb
xor
mov
jne
mov
mov
pop
dec
adc
dec
jl
jge
scas
mov
ss
repnz
stos
rorb
lods
repz
fs
movsl
jp
xchg
outsl
imul
jle
or
in
outsb
inc
outsb
lods
lret
mov
outsl
add
lret
loopne
pop
scas
jbe
int
popf
lds
sbbb
pusha
adc
sahf
mov
mov
xchg
xor
jl
push
mov
inc
adcl
jns
dec
mov
lds
stos
out
and
lods
mov
dec
xchg
mov
mov
pusha
jo
dec
shll
and
popf
fldt
xor
and
rcpps
in
pop
dec
int
jmp
mov
dec
mov
push
mov
pop
icebp
cmp
cmp
and
or
dec
lahf
lret
xchg
sbb
subl
fildl
lret
adc
jp
mov
fs
pop
sub
cmpb
fmull
test
mov
lret
cs
xchg
xchg
arpl
jle
mov
cmpsl
in
mov
enter
pushf
mov
inc
sbb
push
push
sub
and
cpuid
ret
fistl
repnz
and
test
ss
and
jmp
jl
mov
aam
repz
mov
pop
ds
lret
xor
out
rorl
mov
ret
jp
sbb
into
sub
enter
sbb
add
scas
xchg
sbb
pop
shlb
and
fucomip
sub
int
pop
mov
stos
mov
dec
and
and
cmp
pop
or
cmpsl
push
shll
xlat
add
clc
sti
jle
add
enter
xor
mov
mov
sbb
mov
dec
pushf
jecxz
outsl
in
lods
dec
fwait
push
outsl
leave
test
cltd
push
add
mov
fwait
stos
call
in
jae
bound
sub
xchg
cld
stc
cltd
mov
mov
outsb
fisubs
sbbl
aas
sbb
insb
jge
and
inc
ljmp
sbb
jle
adcl
sbb
adc
jnp
out
dec
push
stos
inc
fildl
adc
lcall
test
enter
cmpsl
ret
arpl
pop
jnp
mov
dec
stc
lcall
das
xchg
dec
inc
adc
jns
and
push
adc
inc
jl
popf
xchg
frstor
xchg
in
and
popf
inc
cmpsb
aam
sub
mov
pop
pop
jno
nop
fwait
lahf
frstor
ret
rcll
jg
adc
pop
adc
lahf
aas
add
mov
sbb
cmp
pop
pusha
js
cmp
sub
test
pop
and
scas
mov
rorl
mov
xchg
mov
popf
fldcw
sbb
pushf
ret
adcl
pop
pop
les
js
inc
push
adc
jne
nop
dec
sub
jnp
shrb
cltd
cmpsb
mov
jp
enter
movsl
js
popf
popa
test
pop
dec
xorl
add
aad
call
test
jnp
adc
scas
dec
add
lods
xlat
push
jns
add
jno
cmpsl
sti
gs
jnp
aad
fcomps
shlb
insb
aaa
and
imul
xchg
pop
rclb
inc
cmp
scas
xlat
xor
mov
push
sahf
xor
and
jns
push
inc
adc
pop
in
jge
sarb
cmpsb
xchg
popf
adc
dec
inc
mov
addr16
scas
inc
xchg
dec
and
stos
push
sahf
popf
jge
rolb
addr16
mov
cld
mov
and
imul
lock
sub
arpl
lcall
test
fsubrl
xchg
mov
enter
fadds
mov
sarl
js
ds
push
xchg
jns
xor
sub
leave
cmp
arpl
js
es
sbb
cwtl
jb
shll
jae
sub
jp
inc
addr16
sbb
sub
push
mov
int3
leave
jae
fistps
and
xor
jb
sbb
int3
test
int
inc
adc
xchg
lods
popf
mov
hlt
hlt
dec
mov
push
jbe
rcll
lds
dec
test
movsl
cmc
pop
adc
dec
lret
les
std
pop
xchg
out
and
cmc
loope
or
lea
std
pop
add
cmpsb
shl
insb
sahf
aad
xchg
mov
cmp
dec
paddusb
push
dec
sbb
push
ljmp
pop
pop
add
push
sti
adc
xlat
xor
and
add
sbb
pushf
testb
inc
xchg
or
stos
orb
push
sub
aad
jp
mov
scas
inc
jb
out
into
mov
into
xor
or
sbb
mov
fwait
push
dec
mov
xchg
dec
mov
data16
fldenv
pop
pop
imul
add
repz
xchg
cltd
lea
stc
out
xor
cmp
sbb
and
sub
xchg
sub
pop
dec
mov
adc
pop
pop
mov
fisttpll
repz
dec
sbb
inc
sbb
jge
loopne
ja
xor
cli
add
das
int
push
das
mov
test
push
xchg
gs
adc
or
ja
inc
in
fisttpl
lret
push
lahf
repnz
fstl
test
push
xchg
fbstp
ds
into
nop
cmp
or
pop
pushf
les
xlat
stos
lds
xchg
sbb
fdivr
mov
mov
xor
lock
adc
pop
push
sbb
push
dec
cmp
in
repz
sete
pop
adc
or
add
or
or
jp
stc
pop
sub
into
fisubrl
push
into
lcall
cmpsl
ret
bound
jmp
pop
sti
mov
inc
mov
and
push
mov
js
mov
sub
dec
or
mov
xor
iret
mov
addb
std
and
sub
sbb
add
fucomip
hlt
cmp
fists
add
lock
dec
or
cltd
ror
pop
pop
dec
icebp
cli
pop
lahf
addr16
dec
push
jp
leave
dec
loop
dec
popf
sbb
mov
repnz
pop
mov
lock
sbb
pop
mov
mov
cmpsb
xor
adc
sub
nop
inc
xor
adc
scas
or
cltd
sub
cmp
movsl
sub
and
test
pushf
sbb
cmpsl
std
fistpl
fsubl
mov
mov
iret
lahf
push
sahf
out
rcll
xchg
sub
clc
push
leave
pop
adc
pusha
jo
jnp
imul
pop
insl
test
fwait
add
mov
aam
or
mov
dec
or
subl
rolb
pop
mov
sub
loop
mov
inc
roll
test
sub
pandn
repz
push
push
jnp
cmp
mov
sub
pop
ret
mov
sbb
aaa
lds
fwait
push
sbb
inc
insb
cltd
je
adc
mov
push
cmpsl
inc
pop
dec
imul
aas
imul
scas
rcrl
fstl
pushl
sbb
cltd
xchg
std
imulb
fildl
mov
mov
pop
scas
ret
dec
lods
pop
xchg
outsb
and
pop
shlb
push
movsl
xchg
aad
push
cmc
mov
nop
nop
ss
into
and
sub
in
sbb
inc
imul
test
stc
scas
sbb
add
out
cmp
mov
xlat
insb
imul
xchg
pop
movsb
mov
pop
cmp
call
fwait
pop
data16
popf
add
push
pop
or
cmp
sub
inc
flds
out
mov
push
adc
pop
je
fimuls
mov
dec
sahf
dec
mov
addl
mov
cltd
hlt
stos
pop
sub
sbb
inc
adc
cmp
mov
sub
add
add
mov
movsl
push
push
int
cltd
lret
movsl
ret
xchg
mov
repz
stos
push
fwait
sub
sbb
jno
scas
sbb
xchg
lret
fldl
push
and
dec
mov
in
cltd
dec
push
test
and
add
mov
xchg
lcall
jo
ljmp
cmp
pop
or
mov
iret
js
es
and
sbb
out
loopne
xor
into
bound
jp
xchg
and
push
test
fwait
cmpsb
fucomp
push
mov
mov
and
mov
scas
mov
shlb
and
or
and
test
rcll
add
adc
loopne
addr16
pop
jo
fisubrl
add
js
sahf
push
or
cmp
xchg
mov
test
sbb
and
and
adc
mov
and
jge
add
mov
sub
mov
jae
leave
and
dec
sbb
xchg
enter
dec
and
stc
or
jle
and
iret
jae
jns
inc
pop
int3
inc
dec
popf
lret
aad
pusha
stc
cltd
mov
rcrb
add
and
lret
push
push
xchg
popf
pushf
jp
iret
fs
pushf
sarb
js
mov
dec
dec
pop
cmp
popf
mov
cmp
sbb
inc
data16
or
shr
add
pop
or
push
mov
pop
xchg
imul
cmpsb
sbb
jbe
push
lods
cmp
lea
mov
adc
xchg
fs
mov
dec
inc
xor
cmp
inc
fiadds
nop
or
jo
or
mov
movsb
inc
mov
dec
cmp
ret
mov
push
mov
das
push
in
sbb
pop
or
pop
push
xlat
hlt
scas
stos
xlat
pusha
push
adc
mov
scas
dec
aas
mov
ret
jle
arpl
test
and
out
insl
pop
jge
xchg
sahf
fstl
enter
inc
in
outsl
outsb
push
roll
cs
xor
hlt
push
rclb
mov
inc
scas
je
lock
push
fs
cmp
jg
xchg
dec
and
cli
jnp
inc
mov
mov
and
sbb
rclb
xor
mov
pop
sbb
repnz
xor
and
jmp
add
sti
sbb
mov
mov
xor
inc
pop
mov
dec
jb
dec
nop
sub
movsl
enter
fsubr
or
orl
mov
push
xor
pop
mov
xor
std
mov
rcrb
lahf
mov
lock
cs
adc
mov
dec
movlps
jmp
mov
les
xor
mov
and
dec
fsub
out
mov
les
inc
push
sbb
test
jge
popf
mov
in
cmp
int
pop
cmpsb
mov
xchg
imul
test
push
or
leave
pop
scas
sbb
push
inc
fwait
and
jecxz
xchg
adc
cs
dec
mov
rclb
test
mov
in
imul
xor
jge
in
or
sbbb
cmpsb
inc
loope
jno
cltd
rcll
inc
test
sbb
mov
or
xor
adc
xchg
fdivrs
insl
pop
dec
adc
xor
sub
cmp
clc
into
mov
jecxz
jge
lods
sub
ss
xor
or
scas
xor
lret
movsl
movsl
pop
pushf
dec
and
into
dec
cmp
push
dec
fwait
test
cmc
sbb
xlat
xor
movsb
cld
lds
mov
fiaddl
test
scas
xchg
stos
stc
inc
xor
mov
cmp
int3
js
mov
pop
popf
xchg
es
movsl
pop
stc
jns
sbb
popf
scas
inc
fwait
out
push
xchg
popa
stos
inc
add
or
add
dec
sub
lcall
sbb
js
cltd
mov
and
sbb
movsb
adc
lahf
xchg
jno
lea
fmuls
mov
test
mov
aam
or
dec
and
add
cmc
testb
neg
xchg
mov
fiadds
dec
mov
addr16
arpl
mov
clc
sti
mov
adc
mov
fs
repnz
jle
sbb
push
cmp
dec
in
popa
icebp
mov
lret
mov
mov
sub
shr
dec
pusha
dec
dec
xor
test
movsl
iret
hlt
jg
rcr
xchg
cmp
lods
cwtl
adc
movaps
sbb
push
aam
add
cmp
push
adc
inc
jne
sub
fwait
lods
jle
js
and
imul
lock
mov
mov
mov
stos
xchg
fsubrs
out
mov
ds
jp
mov
mov
pop
xchg
je
push
fimull
insb
popa
mov
gs
mov
mov
icebp
test
arpl
movsb
push
jl
insb
dec
xorl
sub
ss
push
ret
push
movsl
popa
mov
adc
mov
cld
mov
stos
pop
cmp
xlat
test
and
pop
loope
ja
xchg
sbb
mov
test
mov
outsb
or
icebp
out
and
xchg
int3
lods
xlat
cld
jnp
rorb
jns
iret
loope
scas
mov
stc
ret
pop
mov
iret
mov
aaa
aaa
xchg
testl
mov
fadd
mov
mov
cltd
add
loopne
dec
ret
and
add
add
mov
aad
mov
inc
shl
sbb
and
inc
fwait
sbb
and
sub
fs
lcall
pushl
fistl
int
push
jne
adc
shrb
mov
mov
sbb
sub
cmp
push
mov
xor
mov
xchg
xor
insb
repz
ss
loope
mov
lcall
insl
pop
dec
sbb
jbe
cmp
mov
cld
repz
and
notl
out
in
sub
fs
mov
push
cli
shl
mov
fnstsw
xor
outsb
xor
sub
mov
lods
divb
xor
les
mov
jae
scas
rcrl
mov
pop
dec
add
jo
fsincos
cs
sub
xor
data16
push
jo
sub
push
pop
push
xchg
mov
inc
shlb
adc
pop
mov
pop
push
pop
fmuls
pusha
jle
mov
and
add
cltd
fisubrl
inc
lret
adc
jle
shl
sub
xor
xchg
lahf
icebp
push
test
fs
inc
pop
xchg
adc
push
mov
sub
stc
into
clc
and
pop
pop
adc
out
inc
pop
loopne
xor
sbb
xchg
icebp
mov
in
sbb
mov
mov
jns
enter
sub
mov
call
scas
sub
add
xor
sbb
sbb
sbbl
repnz
add
fnstsw
shlb
adc
pop
into
in
jg
xor
aad
dec
adc
pop
pop
xchg
mov
cli
shr
cs
sbb
xor
arpl
js
pop
aam
push
jo
xchg
add
adc
sbbl
ret
and
mov
lods
cmp
jmp
shll
add
cmpsl
std
and
cmp
or
mov
xor
mov
mov
aam
pop
shr
imul
xchg
push
jecxz
cmp
mov
add
pop
insb
pop
loopne
test
cwtl
pusha
fbld
mov
das
xchg
inc
and
push
mov
in
dec
je
or
mov
xor
in
call
dec
sub
jno
insl
jae
fdivrl
ljmp
push
sbb
ret
mov
inc
mov
cmpb
lret
inc
mov
cld
push
sbb
mov
dec
lods
stc
imul
xchg
xorb
xor
in
lcall
dec
dec
loopne
lds
sbb
inc
jl
dec
rcl
pop
jne
xor
lods
pushf
rcrl
add
repz
mov
adc
dec
js
jge
mov
jl
das
sti
lcall
cwtl
imul
or
jae
int
call
push
sti
xchg
je
inc
cmpsb
jge
inc
insb
pop
outsb
mov
mov
sub
rcl
fwait
pop
mov
out
dec
pop
dec
mov
mov
sbb
test
adc
inc
push
adc
clc
inc
inc
push
inc
inc
add
cmpb
xchg
or
cmc
ficoms
inc
pusha
push
rorl
jge
dec
lahf
stc
test
fwait
jecxz
jecxz
add
ret
xchg
fdivrl
ret
mov
sub
xlat
test
movsb
clc
dec
sbb
push
lahf
mov
jge
pop
scas
xchg
decl
dec
xor
pop
aad
mov
mov
pusha
test
sbb
or
jne
jnp
xchg
pop
dec
insl
xor
add
cmpsb
shll
test
mov
xorl
xchg
scas
lahf
fnstsw
loopne
iret
stos
ret
mov
inc
xor
scas
mov
mov
add
xchg
test
xor
jne
or
les
frstor
shrl
mov
mov
aas
into
cwtl
fcomps
cmpsl
jnp
xor
xor
sub
mov
adc
leave
out
mov
jne
inc
push
xor
mov
pop
leave
mov
dec
call
inc
je
imul
adc
clc
jg
mov
cmpsl
insb
cltd
gs
mov
pop
test
test
mov
xor
mov
outsb
mov
push
push
push
dec
push
hlt
jo
lea
mov
inc
mov
mov
popf
xchg
int
or
mov
pop
insl
lret
rcll
add
mov
outsl
lret
adcb
pop
movsb
jl
xchg
or
sub
jne
cmp
jnp
jg
xor
push
sub
aas
cmpsl
aaa
adc
addl
decl
rcll
sti
jp
adc
push
test
insl
std
imul
pop
adc
fbld
pop
xchg
cltd
dec
bound
xor
cmp
or
mov
inc
add
xor
aad
mov
imul
sahf
adc
es
sahf
pop
stos
shrb
pop
repnz
jl
cmpsl
push
jl
repz
data16
cmp
cmp
mov
gs
call
adc
mov
js
int3
or
fidivl
mov
lock
sarl
cmpsl
add
cmpsl
rorl
jns
sbb
repz
and
shrl
xchg
or
das
js
jmp
fiadds
adc
popf
fistpl
push
dec
out
jae
push
jl
sbb
push
mov
lret
xor
cs
or
sub
loop
repz
inc
aas
cmpsl
es
sbb
hlt
and
roll
addr16
mov
mov
xchg
cmc
outsl
dec
mov
mov
push
inc
and
in
mov
cltd
enter
dec
inc
je
lcall
xor
popf
push
bt
mov
adc
dec
adc
js
ret
shrl
movsb
std
inc
hlt
and
lahf
iret
fists
lods
inc
out
mov
jae
test
add
ret
sbb
push
fistps
mov
leave
fsubl
lret
pop
shl
aaa
js
aad
mov
test
or
jp
scas
xchg
fists
fldt
jns
bound
ljmp
test
ret
int
fisttpl
push
mov
sti
sbb
int3
and
int
sbb
mov
mov
pop
pop
sub
xchg
or
imul
xor
or
les
sbb
out
push
hlt
jge
inc
mov
push
fmuls
mov
fwait
outsb
aam
ja
lea
or
or
push
pop
mov
pop
jl
out
adc
repnz
mov
rcll
fisubl
repz
frstor
mov
mov
repz
cmc
mov
sbb
fiaddl
sbb
mov
and
and
dec
stos
push
push
jno
dec
push
sbb
aaa
or
aas
inc
mov
shlb
les
mov
mov
fcompl
aad
jns
pop
adc
push
adc
ljmp
jno
pusha
addr16
in
inc
sbb
sarb
js
es
mov
push
xchg
mov
inc
sbb
mov
hlt
enter
lret
or
loopne
shr
push
test
mov
sbb
out
fld
clc
movsb
add
mov
enter
jo
aad
sub
dec
push
sub
pop
in
fisubrs
xchg
mov
push
pop
sahf
out
dec
xor
sub
or
call
mov
cmp
cmpsl
sbb
out
incb
test
repnz
int
rcrl
sbb
add
mov
pop
mov
aas
mov
mov
add
cli
and
add
push
dec
mov
daa
addr16
jae
jns
xchg
pop
cwtl
es
mov
pop
pop
sbb
sarb
ss
fistpl
insl
mov
jmp
fbld
pop
cltd
push
mov
mov
ja
mov
pusha
mov
xor
inc
pushl
roll
loopne
movsl
inc
addb
cld
popa
jae
xor
cmp
mov
insl
jp
ljmp
sub
cmpsl
in
xchg
mov
mov
jns
lods
cmpsl
jae
je
xor
dec
jl,pt
pop
mov
shll
lret
sbb
dec
sub
or
scas
shr
ss
mov
jmp
mov
pop
add
cmp
lret
jecxz
sbb
or
sub
add
int
inc
pop
ret
test
adc
and
jne
push
fcmovnb
dec
push
add
addr16
xlat
daa
out
in
mov
das
jp
popf
arpl
push
cld
repz
enter
jecxz
das
xchg
stos
loop
movsl
pop
push
orb
fnsave
lahf
leave
shlb
cltd
lods
hlt
adc
mov
pop
adc
scas
inc
fs
bound
and
cli
jno
adcl
sbb
test
sbb
or
cmp
xchg
call
test
add
dec
mov
xchg
cmovae
fnstsw
or
mov
or
or
in
xchg
dec
daa
push
mov
mov
pop
stos
sub
mov
lret
daa
lods
fisubs
insb
cmp
sub
fisubs
dec
fistps
adc
popa
mov
sbb
sbb
cmc
in
sbb
inc
mov
in
popf
mov
push
in
notb
gs
lods
push
xor
xchg
mov
repnz
jg
inc
ja
push
rep
adc
mov
andl
push
cmp
enter
add
or
daa
cmp
xchg
stos
lret
fcomps
jae
fisttpll
push
aam
adc
ljmp
dec
xchg
bound
jo
jae
rcrl
xchg
inc
cmpl
inc
mov
jae,pn
jecxz
mov
dec
repz
movsl
je
mov
xchg
imul
jo
sbb
sbb
fcomp
stos
inc
xor
lret
inc
lods
rorl
xor
das
add
bound
fs
ja
inc
jne
sbb
mov
gs
dec
inc
dec
les
jo
popa
dec
add
dec
ja,pt
iret
or
cltd
xor
pop
sub
js
sbb
dec
mov
int3
in
int
sbb
outsl
sub
or
mov
xchg
or
jne
mov
lcall
jae
pop
pushf
ja
lods
jbe
movsl
inc
inc
mov
lcall
and
adc
push
xchg
ret
sbb
xor
in
leave
mov
sti
iret
jo
sbb
insl
xor
xchg
mov
andb
adc
inc
mov
inc
enter
dec
aad
jns
pop
and
js
push
shr
aam
int3
loop
mov
ret
fld1
adc
jp
shrb
lcall
sub
xchg
sub
mov
push
das
xchg
les
inc
int
imul
popa
inc
sub
outsb
mov
add
movsb
int
insb
leave
imul
mov
dec
fscale
ja,pt
lret
fwait
mov
push
push
sbb
xchg
loopne
push
inc
fsubl
cwtl
ds
and
push
xchg
sbb
pop
add
cmpsl
hlt
fnstenv
jae
das
popf
scas
ljmp
xor
mov
cmpsl
test
cltd
mov
fmull
xor
xorb
data16
ja
cwtl
xchg
lcall
pop
cltd
jmp
xchg
fsubrl
xor
jbe
scas
add
cltd
pop
cld
loop
inc
cmp
in
xor
cwtl
iret
xor
or
test
fwait
idivl
roll
adc
mov
push
jmp
fcmove
fsubs
mov
xchg
cmc
rolb
lds
push
mov
mov
lahf
xlat
jecxz
inc
pop
cmp
mov
and
xor
cs
int
imul
dec
lods
cmpb
mov
lret
fwait
iret
sbbb
xor
mov
int
cld
movl
jp
mov
loope
iret
xor
jno
cli
cmp
mov
sbb
shlb
fisttpl
mov
jae
cld
lret
lret
mov
stc
mov
jno
xchg
sbb
xchg
iret
pop
mov
sub
stos
mov
outsl
jb
push
dec
push
mov
xor
or
loop
xchg
mov
shlb
xchg
jg,pn
cltd
cmc
xor
orl
idivl
pop
js
dec
mov
adc
fcomps
lea
cmpb
fimuls
cmp
xchg
pop
jno
fbld
insl
cmpsb
imul
inc
fisubs
iret
sbb
lea
insb
xchg
add
dec
in
add
adc
in
cmc
cwtl
outsl
aad
ja
mov
in
dec
mov
repnz
test
imul
fcmovnbe
adc
mov
jae
shrl
in
clc
pop
push
aas
call
ss
sbb
out
hlt
dec
inc
mov
rclb
jl
outsl
sub
ja
out
sti
jp
mov
push
mov
jae
inc
xlat
inc
popa
stos
pop
lahf
sbb
lea
fcoms
and
cmp
dec
lret
or
imul
inc
cmpsb
dec
pop
sbb
addr16
in
sub
enter
lahf
pop
lahf
ljmp
bound
jno
cmc
jo
inc
rclb
sarb
push
imul
pop
je
mov
les
enter
jp
out
xor
fmuls
push
push
insb
jbe
push
mov
out
xchg
push
out
dec
testl
ss
mov
pavgw
mov
cmp
xchg
mov
popf
xchg
push
mov
jno
jmp
or
aas
out
jne
fsubs
pushf
xchg
jne
popa
mov
call
or
or
pop
hlt
xor
jo
in
ja
inc
sbb
lds
into
push
and
ret
call
dec
jbe
fsubrs
push
dec
jns
xchg
pop
ret
sub
dec
stc
ret
ret
and
mov
pop
push
dec
jae
cli
mov
pop
insb
push
bound
jp
test
imulb
movsl
push
cmpsl
cmpsb
push
push
or
inc
or
sarl
push
ljmp
xor
ss
scas
mov
cmp
repz
push
dec
js
adc
push
lret
ds
cmpsl
in
into
pop
lret
lahf
or
jle
loopne
lahf
mov
stos
icebp
cmpl
test
xchg
push
or
shlb
mov
dec
add
cmp
hlt
test
sub
daa
cmc
cmpsl
and
adc
rcrb
xor
inc
sahf
or
mov
imul
push
mov
testb
mov
test
aas
add
inc
xor
sbb
fstps
inc
lods
push
adc
in
repz
pop
adc
mov
xor
sbb
arpl
jo
ds
jmp
or
ss
jno
mov
sub
mov
jo
dec
push
jb
xor
pop
push
shll
xchg
add
js
in
leave
jge
inc
je
ljmp
std
and
mov
xchg
jmp
push
repnz
into
dec
cmp
lods
xlat
ja
push
cli
jle
fdivs
sbb
xchg
cltd
and
add
xlat
aam
sbb
inc
xor
sarb
inc
push
sbb
inc
cmc
clc
cmp
sahf
scas
sbb
int3
int3
int3
filds
pusha
cld
es
or
rcrl
ss
adc
inc
mov
inc
push
jns
inc
jbe
mov
shrb
or
lret
push
dec
push
push
das
xor
cmpsb
or
into
ret
and
cmp
and
mov
push
sbb
icebp
cmp
or
fcoml
sub
fildll
sub
cs
inc
and
mov
sahf
push
lds
mov
mov
lahf
leave
loop
js
mov
dec
test
add
mov
sub
out
inc
mov
in
lods
dec
ret
mov
xchg
xchg
and
lds
jp
in
pop
sbb
jne
xor
adcb
or
mov
outsl
pop
push
jecxz
rcrl
and
jb
movsb
jle
pop
les
xor
mov
jae
mov
pusha
sbb
lret
clc
adc
ja
mov
mov
xlat
sbbb
sub
jns
shrb
lret
xor
jb
movsb
mov
sbb
nop
lahf
jge
fs
cmp
cmc
mov
push
push
rcl
aas
or
imul
mov
jge
jmp
pop
pop
test
arpl
mov
pop
dec
cmp
mov
push
lret
or
mov
adc
pop
pusha
les
les
cmp
les
dec
push
push
and
add
mov
mov
ja
jecxz
mov
jmp
std
mov
sti
addr16
out
xor
pushf
test
pop
or
int3
popa
or
cmpl
fnsave
jmp
xchg
out
cmp
mov
add
inc
mov
jno
mov
xlat
cmp
mov
ds
xor
aad
or
mov
adc
ficoml
sbb
cmp
cmp
repnz
mov
sti
pushf
rcr
lret
push
push
lea
xchg
std
divb
fldt
cli
daa
adc
lea
adc
lods
pop
and
cmp
test
jo
es
mov
imul
sub
cwtl
pop
shlb
arpl
rolb
fildl
ror
inc
adc
push
xchg
and
dec
mov
xchg
pop
dec
adc
dec
adc
and
stos
incb
lret
xchg
aad
jp
mov
mov
add
mov
sbb
inc
mov
sub
mov
cs
jb
ja
in
xor
call
pop
jae
pop
add
pop
scas
rcr
mov
clts
xchg
xor
push
les
stos
dec
cld
cmc
leave
mov
xor
fstpt
outsl
nop
xlat
std
sahf
stc
pop
shr
imul
stc
dec
loop
or
in
mov
dec
adc
mov
js
pop
mov
add
outsl
adc
enter
push
push
stos
mov
push
jne
add
jge
xor
aad
lods
fwait
pop
jp
xor
pop
push
mov
adc
xlat
in
xor
outsb
xor
cmp
enter
and
mov
xchg
notl
inc
cs
mov
cld
jnp
jg
mov
outsb
mov
sti
inc
mov
dec
mov
call
dec
inc
push
mov
fldl
lods
outsl
dec
mov
popf
cli
push
cmp
les
fisubrl
in
push
movsb
xor
loop
pop
mov
and
mov
sbb
int
mov
fdiv
loope
sbb
dec
sbb
mov
stc
gs
lret
inc
sub
inc
cli
sub
mov
push
fcoml
sbb
add
mov
add
xor
mov
fisttpll
xor
xchg
push
xchg
sbb
or
in
out
add
mov
faddl
inc
pop
inc
mov
out
jle
push
loope
cltd
lods
inc
arpl
and
into
lods
jns
and
into
je
enter
subl
add
jecxz
xor
or
js
cmpl
pop
mov
cmp
call
cmovae
cmpsl
ret
es
mov
or
pop
sbb
sarb
inc
or
in
mov
daa
adc
and
ds
movsb
je
adc
adc
in
lock
mov
add
push
adc
pusha
ss
test
ds
gs
in
ja
jne
jge
adc
mov
js
int3
or
jbe
lret
xchg
adc
stos
repnz
imul
aaa
dec
xor
aad
adc
jbe
fldl
scas
stos
dec
lret
lds
sbb
add
push
jnp
stos
xor
rol
mov
scas
dec
lret
fcoml
mov
cltd
sub
add
fisttps
mov
scas
hlt
add
ljmp
push
lahf
jecxz
dec
mov
ret
and
mov
sub
xor
dec
gs
lods
xlat
mov
xchg
inc
ss
cmpsl
dec
jle
pop
mov
popf
dec
adc
fwait
ds
sub
mov
mov
imulb
shl
dec
imul
xor
sub
sub
cs
jb
movsl
sbb
mov
fwait
lahf
xlat
pushf
mov
imul
jo
mov
orl
add
ss
push
sbb
pop
push
dec
pushf
dec
loop
pop
push
xchg
mov
nop
test
pop
pop
or
pop
aas
cld
mov
pop
mov
mov
pop
sub
mov
mov
inc
mov
sbb
scas
xchg
pusha
popf
xor
mov
pushf
pop
jge
sti
adc
aad
jae
repz
loop
cmpb
xchg
pop
mov
or
adc
sti
jno
adc
in
pop
add
jl
mov
xorb
xchg
fmuls
jge
xchg
adc
xor
mov
out
xchg
imul
sub
mov
xor
loop
fwait
jae
repz
pop
flds
dec
test
jns
mov
stos
jmp
test
ss
into
push
nop
mov
rorb
xchg
jge
add
jg
push
je
in
loopnew
push
xor
push
incl
add
cmp
nop
repnz
cmpsb
xchg
xchg
lret
ret
and
test
mov
push
dec
sbb
int3
inc
xchg
je
fldl
mov
and
sbb
cmpsl
aad
pushf
mov
pop
ds
cmp
test
dec
push
orb
jge
js
push
mov
out
out
xchg
iret
xor
mov
dec
xor
inc
sti
fwait
test
mov
or
mov
dec
and
stos
and
mov
inc
ja
jge
test
int3
sbb
enter
sub
push
fdivp
push
mov
popa
inc
shlb
rolb
popa
xor
aam
idivl
sbb
and
call
mov
add
orb
mov
add
int
jmp
add
divb
sbb
int
in
cmpsb
imul
popl
repnz
stos
outsl
into
mov
fwait
ret
loopne
mov
cltd
nop
popf
pop
movsb
dec
in
aaa
stos
daa
cmpsl
inc
sub
test
add
rcrb
add
mov
inc
pop
push
pop
negb
fucom
xchg
or
mov
xor
add
out
jp
inc
jecxz
push
dec
mov
push
sub
pop
and
out
xor
push
sbb
cmpsb
jge
loope
xchg
out
das
sbb
repz
xchg
ja
and
cwtl
jnp
jl
sub
lret
mov
push
dec
mov
shll
icebp
jbe
adc
jmp
cli
icebp
jle
mov
cmpsb
cld
fldenv
jae
lcall
or
cmp
pop
and
add
rolb
or
sub
sbb
nop
push
pop
dec
jb
in
outsl
jno
mov
sbb
push
dec
jae
lret
adc
icebp
and
jl
dec
ret
add
das
in
adc
jl
fistl
lcall
push
xor
in
mov
arpl
jge
pop
js
xor
pushf
leave
jbe
jae
adc
mov
or
ja
fmulp
or
add
shlb
lds
inc
loopne
jns
xchg
mov
into
xor
arpl
fildll
pop
lds
cmp
outsl
pushf
pop
pop
fsubl
push
aas
pop
dec
xchg
addl
mov
adc
dec
inc
sbb
mov
add
hlt
les
sbb
inc
push
mov
in
adc
iret
fwait
js
or
outsl
rcrb
mov
adc
mov
leave
jno
ret
aaa
pop
mov
and
dec
lahf
cmp
outsb
inc
fcompl
xchg
leave
sbb
sbb
fistpll
lds
lds
cmc
ja
les
pop
nop
jnp
adcl
jae
push
push
jne
addr16
jbe
dec
testb
test
jecxz
ret
fsubp
decl
mov
loop
loopne
shrb
popf
dec
std
mov
cld
je
rclb
sti
addr16
jae
outsb
mov
cmp
popf
inc
and
or
out
push
or
ja
jge
insl
or
sub
enter
adc
loop
adc
int3
cmpsl
push
sti
xchg
pop
dec
fwait
dec
sbb
sbb
orb
mov
out
xchg
in
mov
push
iret
inc
fs
lea
ror
and
mov
or
or
mov
testb
jno
pop
and
mov
push
hlt
lcall
leave
movsb
pop
out
pop
call
jmp
or
mov
pusha
push
cmpsl
mov
les
sbb
ret
xchg
cltd
nop
sbb
jp
ffree
xchg
dec
pop
stos
cmc
xlat
mov
lahf
popf
jns
stos
sub
or
adc
fisttpll
cmovae
dec
mov
or
mov
xchg
pop
cmpsb
push
push
insl
test
je
xor
dec
fsubl
lock
aam
cwtl
je
inc
sbb
imul
sti
into
xchg
je
jnp
push
sti
pop
into
cmpsl
das
out
test
lea
and
sub
aad
inc
jg
dec
add
mov
mov
pop
jnp,pt
shr
repz
adc
add
in
jge
xor
jns
xor
cwtl
lret
or
out
scas
clc
mov
adc
push
dec
pop
mov
insb
incb
mov
and
cmpsl
cmp
pushf
mov
sbb
dec
int3
cltd
mov
loope
sbb
add
mov
push
jp
enter
cmp
loop
test
adc
mov
or
shrb
jnp
push
int
sub
mov
in
jge
mov
inc
sarb
les
jne
sbb
aad
stc
or
sbb
xor
push
or
xorl
aam
add
fcomip
mov
mov
xor
pop
hlt
jge
out
mov
mov
cmc
mov
pop
cs
enter
or
mov
sahf
or
pop
adc
pop
test
call
add
pop
sbb
and
lret
jecxz
insl
pushf
dec
mov
pop
add
test
mov
addb
push
imulb
mov
push
fldenv
push
pop
stos
fdivl
dec
test
mov
icebp
adc
xlat
push
clc
mov
add
in
sub
xor
mov
pop
inc
and
imul
mov
inc
into
roll
cld
sbb
cmp
fsubrp
pushf
shlb
sub
repz
and
dec
push
cmp
xor
fsubrs
fwait
out
jp
outsl
daa
add
inc
push
mov
xchg
inc
pop
pop
enter
inc
add
jne
jnp
mov
jae
iret
xchg
xor
pop
sub
les
inc
sub
dec
enter
jg
bound
sub
mov
jmp
jo
adc
pop
mov
loopne
icebp
into
sbb
mov
and
sar
vpcmpgtw
loopne
cmpsl
adc
add
fiaddl
inc
sbb
imul
jb
jns
sub
xchg
sub
fwait
es
push
dec
pop
add
jmp
lcall
in
lret
xor
inc
pop
scas
xchg
mov
xchg
fildl
movsl
xor
movsb
xchg
inc
push
ret
lret
gs
dec
jo
mov
mov
filds
xchg
hlt
arpl
popl
jmp
push
gs
pop
gs
in
jg
int
mov
or
sbb
nop
cmpsb
jnp
into
lcall
sahf
mov
mov
imul
fsubrl
sbb
and
sub
hlt
dec
mov
into
test
xchg
adcl
adc
scas
ja
hlt
sbb
notl
int3
adc
pop
sbb
pop
sub
out
jmp
je
inc
pop
dec
fsubl
push
pop
enter
fidivl
negl
jg
mov
cld
subb
dec
outsb
stc
mov
pop
int3
movsl
sar
mov
push
cld
jae
shrb
les
cld
xchg
inc
imul
add
xor
jl
or
sub
lret
mov
test
dec
inc
popf
lds
dec
cli
std
rol
push
pop
fiadds
ss
xor
or
dec
mov
add
push
pop
mov
ja
aad
mov
stc
mov
and
out
fdivrs
test
out
pusha
xor
add
add
daa
dec
push
or
mov
aad
cmpsb
cmc
loopne
ds
push
xchg
idivl
add
fadds
cmp
mov
pop
add
mov
jns
sahf
lds
jmp
lock
jbe
mov
test
test
adc
shrb
cmpsl
stos
cld
repnz
rolb
and
dec
in
and
mov
aam
push
sub
cmpsb
lock
test
ret
and
and
mov
push
outsb
shlb
push
pop
mov
inc
sbb
pop
pop
jl
jecxz
lcall
adc
sbb
je
out
push
cmc
roll
clc
jecxz
or
inc
push
cmc
test
xor
or
cltd
sub
mov
adcb
or
shr
or
xchg
popf
pop
dec
adc
mov
dec
shll
xchg
enter
outsb
loope
test
jae
fsubrs
loopne
aad
stc
mov
jmp
cmp
in
cmp
push
mov
ret
shl
cmp
fistpll
pop
xor
mov
or
mov
stc
push
inc
in
push
divb
icebp
aam
xor
stos
mov
adc
xor
inc
xchg
pop
push
mov
sahf
jecxz
loope
mov
imulb
daa
xchg
test
and
or
std
icebp
pop
mov
stos
ret
xlat
fmul
push
mov
pop
jl
push
addr16
add
lods
aad
loope
scas
movl
jg
pop
mov
mov
daa
je
xor
popl
dec
jnp
movsb
push
cwtl
dec
pop
jne
push
xchg
jmpw
inc
das
mov
pusha
jo
dec
fisttpll
mov
or
popf
iret
and
cmp
je
mov
hlt
push
jecxz
iret
lods
mov
xor
test
or
popf
into
pop
lea
inc
push
aas
cmp
in
les
and
lcall
sbb
lahf
add
in
lea
xor
push
and
cmp
cmpsl
mov
xchg
xorb
mov
dec
mov
mov
adc
sub
les
mov
sbb
and
mov
jae
cs
mov
into
ds
and
rorl
je
adc
dec
inc
pop
mov
jne
cli
mov
pop
pop
mov
mov
push
jmp
iret
ljmp
jecxz
movb
pusha
jg
out
jg
dec
mov
mov
jno
pop
push
out
push
mov
or
jns
lahf
js
es
jl
sub
pop
mov
adc
call
cmc
std
aas
int3
lods
jmp
mov
and
sub
out
and
push
dec
mov
mov
scas
sub
sbb
dec
je
lods
test
cmp
lds
cmpsl
push
cmpb
mov
cmpsl
mov
nop
clc
dec
cltd
aas
data16
fnsave
jbe
sbb
push
hlt
and
and
test
icebp
ljmp
mov
push
popa
shll
dec
add
push
mov
push
jg
jbe
loopne
outsl
jmp
dec
push
out
adc
gs
pop
test
int
shlb
push
outsl
lret
loopne
mov
fs
xchg
fstl
ds
xor
mov
xchg
fildll
jecxz
add
cmp
mov
test
push
insb
fadds
sbb
pushf
and
pop
jns
ret
mov
xor
and
mov
aaa
lcall
and
mov
nop
insl
sub
sub
pop
stos
sub
or
ret
imul
imul
cmc
fcoms
icebp
dec
sub
add
mov
in
scas
mov
xchg
data16
dec
and
mov
aad
add
lahf
sub
movsb
shl
enter
push
push
sbb
jl
sbb
sbb
sti
icebp
add
and
xor
retw
sbb
or
imul
pop
lock
mov
cs
cmp
cwtl
push
pop
outsb
cmp
aaa
pushw
in
sti
cmp
ds
sub
outsb
inc
jle
mov
popl
dec
outsl
or
imul
cmc
icebp
pop
rcrb
sahf
lods
ja
inc
cmpsb
popf
fcmovnu
pusha
jo
xchg
jno
mov
fwait
rolb
jb
bound
sub
leave
jecxz
sub
inc
stc
sahf
xchg
dec
daa
push
call
dec
ret
adc
adc
lea
mov
sbb
sbb
stos
pop
lahf
lret
jecxz
popa
test
popf
sbb
orb
pop
sbb
dec
xchg
ret
cmc
pushf
dec
test
icebp
test
lds
je
sub
mov
pusha
mov
xor
add
xchg
mov
mov
xchg
test
rorl
ret
or
jmp
cmpsl
or
dec
pop
jmp
int3
mov
lock
lret
lock
pop
clc
call
fucomp
repnz
jns
popa
hlt
and
pop
jo
xorl
inc
sarb
pop
xor
jmp
outsl
inc
rcll
pusha
inc
mov
bnd
cmp
push
jbe
adc
and
call
inc
cltd
push
imul
loope
lea
jno
and
xorl
or
pop
or
or
ret
pop
roll
xchg
push
mov
lcall
sub
leave
cltd
sbb
sbb
xchg
push
lock
outsl
sub
pop
ret
sbbl
aas
pop
dec
insb
rcrb
inc
flds
div
bnd
push
sub
dec
sbb
fbstp
xchg
adc
dec
pop
imul
notl
cmp
inc
inc
pop
shl
add
or
and
in
adc
outsb
fsts
stos
fcoml
popf
lret
fsubrl
add
test
mov
mov
loop
xchg
adc
cmp
or
sbb
mov
dec
fdivs
shll
rcll
cmc
imul
jmp
daa
popf
imul
cmpsl
jge
and
andb
dec
enter
jg
mov
jns
enter
mov
out
mov
nop
cmpsl
xor
cmpb
jne
mov
mov
mov
insb
lea
ss
shlb
and
xchg
push
add
enter
mov
add
cmpb
fcmove
lds
cwtl
push
test
dec
or
nop
imul
fisttpll
cwtl
aad
sbb
cmpl
pop
mov
jns
sbb
pop
jno
rclb
sub
daa
add
imulb
push
stos
ja
jne
xchg
and
or
lcall
push
jno
rclb
int3
sbb
ror
enter
sbb
jle
gs
jl
test
pop
dec
test
inc
imul
jmp
push
addr16
and
xchg
mov
xlat
push
aam
out
jnp
insl
das
cmp
dec
mov
mov
mov
dec
insb
aam
pavgw
mov
aas
push
and
mov
jbe
es
dec
inc
lret
int
cmpsl
push
push
rclb
sbb
jg
ret
xchg
fdivrs
sti
stc
inc
mov
jnp
xor
jns
cltd
xchg
lods
mov
xor
xor
add
and
stos
mov
inc
xor
clc
pop
clc
or
stos
aad
rcll
push
fstp
dec
dec
xlat
sbb
fs
sbb
test
and
sbb
lock
stos
lret
mov
jno
push
push
fnsave
rorb
mov
out
inc
pop
xchg
shrb
or
lahf
inc
leave
test
adc
push
aas
pop
call
or
mov
mov
in
xchg
and
cwtl
xchg
mov
add
push
js
sub
movsb
cli
xor
xchg
add
inc
xchg
lahf
pop
out
test
iret
dec
inc
enter
test
and
add
insl
push
cmp
sub
mov
inc
dec
call
or
mov
ret
rcrl
daa
push
shll
fwait
lahf
sbb
pop
xchg
pop
sar
lea
mov
push
imul
dec
negl
adc
lahf
inc
stc
sti
push
push
mov
repnz
repz
push
cmc
fldt
xchg
rolb
cld
xor
cmp
sub
shlb
gs
cmpsl
cmp
test
and
scas
mov
and
imul
pop
adc
inc
or
ds
jl
sbb
adc
es
cld
push
hlt
push
out
jne
adc
mov
mov
adc
push
cltd
inc
fdivl
cmp
mov
mov
and
mov
scas
daa
mov
inc
in
data16
adc
cmp
sti
dec
inc
cmc
mov
rorl
jne
movsl
sub
js
mov
sti
mov
add
mov
jo
bound
fldt
shlb
add
aaa
inc
mov
dec
pushf
dec
and
push
xor
pop
aaa
ljmp
pop
mov
notb
dec
push
mov
mov
mov
mov
stos
cmp
jo
js
retw
pop
mov
scas
inc
sub
inc
mov
xor
push
mov
cmp
jecxz
cmpsl
fcoml
jle
cmp
push
dec
data16
xchg
jmp
fwait
leave
xchg
sub
jb
adc
int3
out
jbe
jo
vmovupd
test
xor
push
out
adc
pop
xchg
jbe
ret
xchg
mov
pop
pusha
es
rol
pop
cmpsb
mov
fnstsw
mov
mov
inc
mov
sbb
iret
les
xor
out
inc
mov
and
lea
push
sub
pop
fistl
orl
sbb
outsl
clc
inc
push
out
movsl
cli
js
inc
xor
stc
mov
dec
stos
or
add
fs
cwtl
addr16
lods
mov
inc
movsl
dec
dec
mov
cmp
iret
mov
jmp
scas
popf
xor
lea
movsl
dec
rorl
adc
loopne
add
sub
xlat
stos
inc
lcall
cmp
sarl
jge
test
scas
mov
lock
rdpmc
imul
and
push
adc
ds
pushf
dec
mov
mov
inc
jecxz
push
cmp
push
js
mov
xchg
pop
movsb
call
inc
sti
ficomps
popa
jle
ja
jnp
clc
and
insb
or
in
and
lret
dec
mov
ret
pop
dec
mov
stos
sbb
movsb
fstpt
test
and
cmp
adc
outsl
pop
stos
stc
sbb
mov
xor
outsl
jl
mov
in
movsl
scas
push
fbstp
sbb
xchg
adc
sub
shll
xchg
sbb
cmpsl
xchg
test
dec
gs
mov
lret
scas
sub
or
mov
or
das
in
icebp
pop
xchg
lods
add
lods
cmp
sub
push
subb
mov
dec
cmpsl
stc
mull
mov
adc
cmp
lock
mov
sub
mov
inc
sbb
xchg
fisubrs
pop
mov
xchg
mov
or
xchg
and
lea
test
shr
lret
sbb
test
cmc
mov
jb
inc
inc
inc
repnz
add
add
rorl
inc
inc
xor
pop
and
sub
rcrb
sbb
sub
inc
sbb
fistps
mov
imul
xor
aaa
in
fsubrl
jle
mov
shrl
mov
ret
or
pop
dec
push
add
dec
orl
xchg
test
sbb
cld
stos
inc
xchg
in
adc
dec
fwait
outsb
aaa
jo
xor
inc
dec
mov
cltd
mov
xchg
pop
jns
mov
push
nop
call
cld
cmp
in
fadd
add
orl
addl
scas
addr16
sbb
cmpsb
dec
aad
sub
mov
rcll
fisubs
jno
lea
mov
repz
and
cwtl
dec
push
sbb
into
jge
cmp
loope
mov
pop
je
mov
aaa
pop
arpl
mov
loopne
testl
sti
inc
pushl
mov
jecxz
pop
mov
sub
sbb
mov
fisttps
mov
jno
dec
xor
add
push
dec
out
fnstenv
push
aad
jne
jae
jns
in
cmp
in
pop
pop
mov
push
and
add
inc
push
push
adc
xchg
lds
adcb
xor
imul
mov
xor
or
cmpsl
dec
js
mov
nop
or
or
jo
in
stc
sbb
add
jmp
push
and
cs
jg
lret
je
pop
mov
and
adc
jns
test
sbb
or
adc
mov
jmp
inc
int3
dec
sub
cwtl
stc
hlt
push
shrb
mov
ret
mov
jge
insl
sub
ljmp
out
add
iret
cvtps2pd
pop
push
subb
ds
and
or
jnp
pushf
int3
dec
add
xor
popf
or
js
mov
xor
repz
inc
inc
aaa
lahf
pop
ss
add
test
jge
lahf
jne
mov
repnz
lret
out
popf
inc
lahf
popf
gs
loopne
call
cmp
popa
add
jge
pop
xor
mov
cmp
or
push
pop
jno
lods
push
mov
cltd
int
lock
fsubl
scas
mov
inc
scas
inc
test
jno
sub
lahf
dec
imul
inc
data16
xchg
jle
mov
adc
jl
jge
lahf
fildll
mov
iret
gs
pop
xchg
mov
out
cmp
out
jae
clc
les
shl
hlt
mov
xchg
mov
imul
outsl
jmp
js
ret
fwait
in
mov
jp
nop
inc
jecxz
push
xlat
pop
lock
sti
jno
dec
rcl
in
lock
cmp
or
add
loop
xor
aas
jbe
push
xlat
stos
mov
divb
mov
xchg
adc
in
xchg
outsl
push
mov
es
daa
add
cmp
jnp
mov
xchg
sbb
cli
rcrb
gs
sub
sbb
ds
or
enter
lahf
jle
sub
xchg
scas
xchg
inc
jmp
sbb
pop
jecxz
idivl
addb
imul
pop
or
ss
gs
pop
movd
xchg
mov
dec
cmpsb
icebp
dec
jnp
push
ret
movsl
xor
sahf
int
push
push
adcl
jp
mov
sahf
aaa
in
or
adcb
aad
aaa
or
push
add
jns
aaa
in
hlt
add
imul
cli
push
cli
mov
andl
dec
jne
roll
gs
lds
or
ret
popf
sbb
and
or
push
push
inc
inc
sub
mov
popa
aad
sbb
mov
dec
cmpsb
fs
sbb
cld
jmp
test
cmp
ret
push
pop
rorl
sub
das
xchg
dec
pop
stos
pop
repz
lds
adc
pop
pushf
ja
mov
adc
ret
pusha
mov
stc
fdivl
lods
dec
jg
shl
mov
jle
inc
ret
adc
sbbl
lahf
in
or
cmpsl
xor
mov
push
in
or
sub
shrl
dec
es
lea
dec
adcl
mov
pop
insl
or
cwtl
dec
push
xchg
cmc
ds
mov
pop
lcall
jmp
xchg
arpl
out
in
mov
rclb
fucomip
call
add
gs
adc
pop
sub
add
or
cli
movsl
cs
pop
fwait
lea
pop
sbb
mov
test
push
hlt
and
dec
pop
add
push
fidivrs
imul
into
jmp
xor
test
sbb
js
scas
jne
push
xchg
mov
sub
or
xor
jbe
cmp
movsb
pushf
mov
or
xchg
dec
lahf
sbb
out
mov
pusha
jmp
jb
andl
js
mov
jne
gs
test
cwtl
pop
pop
dec
testl
add
dec
les
rorl
pusha
cmpsl
movsl
cmc
jmp
inc
loope
or
insb
repz
mov
shlb
aaa
xorb
ds
or
inc
xchg
lcall
cwtl
test
sbb
in
push
je
inc
add
inc
jg
lds
sbb
punpcklwd
js
push
rcrb
inc
sbb
aam
xor
mov
mov
pusha
pop
adc
push
stos
push
push
rorl
inc
frstor
jg
mov
cmpsb
fs
xchg
fdivl
shll
loop
rorb
inc
mov
push
sub
inc
pop
adc
mov
int3
repnz
add
adc
pop
cmpb
lahf
adc
and
inc
fdivrs
adc
add
cmpsl
xchg
fstp
push
addr16
fdivrl
xchg
jp
adc
sbb
imul
pop
icebp
pop
xor
mov
fwait
dec
test
enter
add
cld
sbb
add
loopne
inc
lds
das
iret
mov
jecxz
cmp
pop
push
xchg
je
inc
mov
jmp
fdiv
cmpsl
in
stc
sti
mov
pushf
incl
xchg
enter
ja
outsb
pop
enter
imul
xchg
sbb
push
cmp
sbb
stos
aad
fcmovnu
ljmp
and
rorb
insb
inc
xchg
or
sbb
fdivr
ret
sbb
mov
stos
inc
lcall
test
aas
loope
mov
arpl
jae
xchg
fidivl
sub
sbb
jg
push
inc
mov
addl
inc
leave
sti
lea
js
ret
pop
adc
xchg
imul
pop
mov
aam
dec
push
cwtl
sahf
outsl
or
pop
shlb
jo
loop
xor
xchg
mov
mov
push
adc
add
mov
shr
inc
cmpsb
cmc
dec
adc
sahf
dec
mov
fadds
and
dec
inc
or
les
lds
sbb
pop
jg
out
jno
pop
dec
enter
jo
imulb
shlb
imul
inc
test
dec
inc
and
adc
inc
adc
test
sahf
sbb
leave
dec
push
lock
sub
push
sub
aam
mov
cmp
dec
and
xor
mov
les
sbb
mov
shr
or
fstl
pushf
popl
lahf
inc
fildll
jns
rorb
xchg
arpl
scas
cmpsl
push
cwtl
cli
cmp
insb
pop
repz
decl
jge
nop
icebp
mov
xor
xor
mov
or
sub
movsl
data16
popa
jge
out
push
dec
inc
out
popa
shl
mov
les
xchg
dec
sbb
mov
hlt
cs
repnz
add
pop
pop
push
test
push
adc
loope
sbb
sub
jb
rcr
jmp
js
int
inc
pusha
ss
adc
sarb
cmpsl
nop
lock
adc
xchg
subb
sub
or
or
inc
xor
call
cltd
test
inc
scas
adc
fidivrs
lahf
cmp
add
shrb
mov
aam
xlat
jo
jle
imul
jge
lret
mov
mov
push
mov
pushf
xchg
or
lds
inc
mov
xchg
dec
and
or
leave
xchg
outsb
fdivl
inc
cltd
je
fstp
andl
sar
xor
scas
daa
push
rcll
push
fdivrs
fbstp
or
enter
repnz
inc
ficomps
xor
rcrb
enter
cwtl
or
or
xchg
fisubrs
push
inc
lret
sbb
in
xchg
jb
jo
sbbl
xchg
push
add
mov
pandn
data16
xchg
inc
xchg
jo
repz
popa
imul
jnp
and
adc
lods
xlat
dec
cmp
dec
xchg
jge
push
push
lret
push
gs
stc
sub
and
mov
test
xchg
iret
je
ret
lock
xorl
std
or
addb
les
daa
sbb
arpl
mov
cmp
or
mov
dec
aad
pop
movsl
dec
ja
lret
in
inc
into
cmp
sbb
stc
cmp
sub
es
mov
xchg
lret
test
repz
insb
scas
adc
gs
cmp
inc
dec
arpl
ret
mov
ljmp
pop
add
daa
mov
fwait
inc
cmpsb
and
dec
xor
jbe
adc
les
xchg
sub
dec
sub
cmp
addr16
out
in
insl
lcall
xor
cmpl
push
aad
jg
xchg
insl
cmc
pop
mov
mov
test
lods
pop
xor
mov
add
pop
xchg
mov
in
cwtl
and
dec
mov
add
xchg
dec
mov
repz
and
pop
stos
xchg
and
inc
jb
pop
sub
add
xor
sub
pusha
dec
fimuls
sti
jmp
xchg
inc
fwait
and
adc
inc
js
or
imull
mov
sbb
cwtl
inc
inc
shr
cmp
sub
inc
out
fnstcw
jbe
jp
incb
cmp
js
in
mov
int
mov
dec
push
rolb
rcl
sbb
pop
imul
sahf
mov
shl
mov
les
lods
mov
pop
xchg
jo
inc
mov
mov
sbb
jmp
nop
mov
xchg
mov
pop
adc
adc
jne
or
mov
pushf
dec
lahf
lret
in
test
stos
push
stos
jmp
mov
mov
ror
jnp
mov
fs
scas
inc
add
mov
flds
aam
mov
shlb
add
imul
imul
add
addr16
insl
out
add
andl
inc
sbb
shrl
cmpsb
xchg
cwtl
pop
and
lods
dec
add
sbb
pop
adc
lcall
cmp
lea
or
sub
push
dec
or
icebp
fisubrs
pop
fisubrs
pop
mov
movsb
in
int3
or
les
or
aad
bound
mov
scas
mov
xor
mov
sub
int3
shll
xor
icebp
scas
mov
ds
adc
aas
inc
testl
xlat
adc
lret
inc
push
adc
lret
je
ficoml
into
dec
ds
fs
cs
stc
xor
inc
xlat
adc
cmp
mov
stos
xchg
and
jae
mov
mov
lods
jne
jl
arpl
insl
pop
dec
mov
pusha
mov
jmp
pop
add
iret
adc
andl
add
sub
xchg
add
xor
mov
xchg
in
cwtl
dec
sub
push
cmp
adcl
pop
cmpsl
fucomi
xchg
je
sbb
mov
mov
cmp
or
cmc
dec
in
xchg
rol
out
stos
fcomi
test
jg
jmp
xor
xorb
and
dec
ljmp
les
jg
mov
xlat
cmp
jns
mov
jb
mov
sti
mov
sbb
jmp
psubusw
xchg
push
sbb
nop
jno
xchg
xlat
stos
enter
push
stos
shrl
inc
mov
fldl2e
jae
cmp
dec
ds
test
or
adc
test
or
sub
imul
push
jb
leave
add
cmp
cmp
shrb
addr16
xchg
jge
jmp
push
mov
xchg
mov
mov
ret
dec
sub
xor
int
fs
cmpsb
push
popa
cwtl
dec
sub
lods
dec
aad
sbb
add
xchg
xchg
les
cwtl
mov
pop
dec
lea
mov
cmp
loope
push
sub
mov
insl
inc
fdivr
mov
or
push
rcl
mov
dec
popf
hlt
fxam
dec
pop
mov
or
jge
jno
pop
fistpl
pop
mov
xor
mov
xor
ret
and
in
or
cmpl
push
fwait
ds
in
dec
and
jl
inc
js
fst
push
mov
scas
cmp
fwait
jp
sahf
inc
ljmp
lcall
jo
push
mov
push
aam
ss
pop
cmp
and
jns
dec
inc
sub
xchg
sub
ret
popf
add
inc
dec
les
test
mov
sbb
jl
cmp
fnstcw
je
or
jmp
pop
mov
xchg
mov
jle
jbe
mov
xchg
mov
shlb
pop
aam
xor
aas
cltd
nop
bound
out
lods
mov
dec
pop
hlt
xor
icebp
cwtl
jmp
cmp
jne
adc
push
mov
sbb
call
int
filds
pop
lret
mov
popa
pop
inc
mov
repz
ret
mov
xor
jp
gs
jns
mov
sti
fisttpl
iret
pop
popf
and
ds
stos
cltd
insb
in
push
push
lcall
add
inc
pop
in
mov
jle
push
inc
loope
mov
xchg
xor
stos
clc
lock
dec
sbb
inc
bound
push
xchg
jge
add
xchg
mov
jb
mov
cwtl
adc
lock
dec
lea
in
mov
jnp
mov
jns
lock
aam
mov
sub
or
sti
and
mov
aaa
movsb
adc
imul
dec
aam
and
jmp
sbb
mov
cmp
aam
add
jmp
data16
lea
in
pop
add
aam
negb
ffreep
movsb
push
and
mov
sarb
loope
and
addl
adc
mov
adc
loopne
outsl
mov
jle
ret
nop
and
clc
sti
aad
sbb
lret
hlt
sbb
lds
ja
outsl
dec
pop
test
js
jae
adc
xor
xor
add
push
sti
bnd
add
lods
mov
add
aad
xor
mov
push
pop
pop
pushl
movsl
cld
mov
adc
and
fcmovnbe
adc
dec
ret
test
arpl
lods
sbb
stos
push
xor
scas
lcall
shlb
aas
repz
dec
fdivrs
shll
js
je
addr16
pop
test
inc
sbb
inc
cmp
dec
cmp
fwait
pop
pop
adc
out
pop
pop
jb
insb
mov
push
gs
xchg
outsb
jg
insb
or
enter
cmp
dec
lret
je
les
mov
sbbl
push
movsl
das
pop
movsb
popf
xor
cld
js
lcall
dec
xchg
incb
adc
adc
push
ds
test
outsb
aaa
mov
lahf
lods
dec
lret
add
xchg
fldenv
clc
xor
insl
lods
dec
divl
dec
sub
test
inc
fwait
cmp
aas
sbb
mov
pusha
loop
cvttps2pi
sbb
mov
push
stos
sub
out
add
and
cmp
push
inc
cmc
inc
pusha
jle
scas
jg
inc
testb
push
add
inc
rclb
test
adc
js
into
rclb
mov
popf
cmp
or
cmpsb
jge
dec
push
sbb
out
push
movsl
aad
pop
fs
push
or
nop
scas
mov
dec
inc
fwait
es
aaa
pop
mov
inc
lock
lea
fadds
je
popa
mov
das
dec
test
arpl
xchg
xchg
xor
jge
push
pop
push
add
and
add
sbbl
or
mov
cmc
cld
cmc
ffreep
sbb
and
dec
push
cmp
leave
subb
xor
sbb
push
sub
sub
sbb
mov
sbb
mov
and
stc
cli
in
test
mov
es
nop
inc
fcoml
roll
fistpll
stos
in
stos
popa
imul
xchg
pop
js
jmp
cmp
popa
or
mov
loope
inc
pop
add
test
jb
or
rorl
cmc
fmul
mov
or
pop
ds
mov
lcall
imul
clc
push
fisubl
pop
fisubs
add
mov
imul
out
mov
adc
fwait
inc
add
mov
dec
incb
push
push
mov
pop
mov
adc
jl
or
jbe
int
pop
movsl
and
mov
push
xchg
loopne
lea
ja
js
jnp
ror
cmp
addr16
arpl
lock
jbe
adc
mov
lcall
push
pop
xor
shll
xor
outsl
jno
xchg
dec
sbb
clc
sub
cmp
loop
shll
fs
daa
dec
leave
testl
xchg
or
cmp
aad
ror
sub
inc
push
sub
pop
in
enter
mov
jge
dec
ror
loop
or
cmc
cmpsl
cmp
mov
xchg
mov
pop
dec
and
jb
and
dec
xchg
sbb
and
sbb
in
and
push
fdivrl
push
sbb
prefetchwt1
or
pop
sarb
inc
aad
mov
pusha
cltd
dec
or
popa
push
xchg
in
into
loope
pushf
jnp
fmull
mov
popa
jle
das
push
mov
int
addl
adc
cmp
es
pop
in
xor
cmpsl
mov
faddl
mov
movsl
sbbb
cld
or
mov
call
pushf
dec
and
faddl
push
pop
jne
mov
push
mov
or
cmp
subb
das
bound
stos
sbbb
fisttps
ror
cmp
or
int3
xchg
jp
mov
mov
popa
ret
dec
bnd
lea
or
cmpsb
xor
pushf
push
cwtl
add
pop
movsb
test
roll
scas
push
lcall
mov
xchg
mov
xor
xlat
add
clc
int3
add
push
shlb
hlt
jns
xchg
sub
mov
push
sub
int
imul
popa
inc
sub
jb
shr
mov
imul
jbe
in
cmp
aam
movsb
inc
pop
repz
rolb
inc
sbb
and
or
inc
cmc
aam
or
xor
mov
xchg
mov
das
xor
fxch
jp
add
stc
mov
xchg
sbb
and
rolb
pop
jae
pop
pop
push
xor
sub
sbb
mov
dec
idivb
scas
adc
sldt
xchg
lcall
dec
movsb
push
lret
lcall
jp
xor
lods
or
ret
sbb
movsl
pop
xchg
in
idivl
adc
pop
mov
lock
ds
jl
sbb
push
pop
cmp
cmpsl
stos
int3
cmpsb
sbb
xorl
out
and
inc
enter
out
mov
aaa
pop
sbb
sti
push
test
jle
clc
pop
xchg
jmp
stc
ret
in
pop
das
adc
pushf
into
pop
stos
jne
pop
insl
sar
ds
mov
cmp
cld
jl
movl
jle
inc
push
mov
push
fists
lahf
mov
aas
ficompl
push
push
cmp
cltd
sub
mov
adc
dec
lcall
sbb
bound
cwtl
nop
jge
xchg
rorl
mov
fcomp
push
cmp
scas
nop
xlat
gs
push
xor
sbb
in
cmp
movl
or
int3
cmp
bound
or
add
mov
cmp
push
mov
sbb
sbb
xchg
xchg
lods
fidivl
jnp
mov
std
stos
mov
outsl
cmpsb
nop
mov
lock
push
sbb
bound
jo
or
add
out
cmpsb
cmc
neg
sahf
xchg
jmp
lret
mov
jle
mov
sub
or
mov
out
test
mov
pop
sbb
iret
addl
cmp
sbb
xchg
mov
jmp
xor
cmpsb
inc
mov
jbe
xor
movsl
divb
dec
jne
mov
mull
ljmp
loope
dec
sbb
pushl
add
lea
inc
push
ljmp
icebp
push
mov
stos
xchg
stos
jno
pop
adc
scas
jle
mov
push
mov
lods
inc
ret
xchg
jle
push
lcall
int3
lods
pushl
test
rclb
mov
iret
xor
mov
dec
aam
adc
sahf
imul
cmpsb
pop
sti
sbb
repz
bound
mov
pusha
nop
cmp
cltd
mov
arpl
ficoml
xor
cmp
jecxz
fiadds
out
mov
stc
adc
xchg
sahf
add
aam
mov
stc
cmc
adc
cld
mov
dec
pop
mov
imul
mov
cld
popf
mov
out
mov
popa
int
jo
rcl
xor
xor
je
rcl
lret
les
sub
lds
xchg
imulb
jno
sahf
aam
or
fwait
push
push
ficoml
jp
jmp
cmp
icebp
imul
inc
dec
aam
mov
call
sub
sub
or
imul
mov
loop
ficomps
add
xor
scas
int3
mov
push
jo
mov
insl
test
stc
pop
movsb
popf
cltd
cmp
lods
xlat
push
jg
inc
cmp
mov
lret
pop
mov
fs
ljmp
mov
add
or
or
and
fisubrs
leave
ret
adc
popa
mov
adc
pushf
mov
fsubrl
repz
movsb
into
push
sahf
add
std
pop
adc
or
sti
jle
lds
sbb
cmp
lods
aaa
imull
std
lods
cmp
push
or
push
cwtl
movsl
decl
lahf
adc
xchg
clc
pop
mov
dec
scas
adc
pop
mov
xor
pushf
dec
sbb
jmp
mov
mov
mov
imulb
dec
push
xor
fisubrl
lahf
scas
outsl
jmp
scas
dec
cli
mov
clc
lea
pop
out
lods
inc
pop
mov
jmp
gs
hlt
and
or
mov
cmc
sbb
fiadds
xor
js
iret
daa
mov
pop
adc
lea
mov
push
jbe
insb
fistps
push
sub
xor
xchg
pop
lea
jo
add
or
pop
dec
add
test
xlat
mov
jne
jnp
popf
in
adc
f2xm1
cli
das
or
imulb
pop
add
lds
call
sbb
sbb
leave
cltd
mov
mov
nop
mov
ret
adc
pop
dec
outsl
fadd
xor
aaa
xor
push
lods
and
jne
lods
jbe
stc
mov
adc
dec
mov
mov
push
xchg
lcall
mov
test
cmp
sbb
mov
push
mov
jl
lods
cwtl
push
mov
jns
mov
sub
leave
cmp
or
es
sbb
cwtl
jb
shll
jae
and
inc
hlt
jge
out
sub
push
mov
int3
push
jnp
fistps
movsb
lret
xor
jb
sbb
int3
test
int
inc
adc
dec
fmuls
push
or
testl
jnp
sbb
stos
sbb
movsl
adc
and
mov
fldl
aam
add
es
pop
mov
mov
ljmp
sbb
xor
mov
add
stos
mov
mov
mov
mov
ja
jbe
sub
jmp
jns
jle
lret
cmpsl
xchg
mov
shrb
rcll
mov
test
mov
mov
ljmp
arpl
cwtl
test
push
nop
mov
xchg
and
cld
jle
cmpsl
es
sub
jno
icebp
pop
jb
pushl
mov
and
pop
rcll
outsl
pop
dec
stos
repz
stos
cmp
into
arpl
insb
sti
xor
jle
dec
std
mov
jmp
push
jae
hlt
test
mov
push
jmp
cmp
mov
xchg
in
imulb
daa
leave
pop
shrb
sub
or
seta
and
fistps
aam
and
sbb
or
cli
repz
ret
in
dec
inc
mov
sahf
inc
push
nop
insl
push
fildll
cmpsl
hlt
xor
movsb
stc
pushf
push
jbe
cltd
mov
out
stos
xchg
dec
xor
add
push
test
push
adc
test
enter
sub
xchg
cli
icebp
xchg
jmp
pushf
fstl
pop
les
xor
sbb
xor
mov
cs
pop
shr
adc
testl
adc
mov
jg
xor
push
jg
test
push
mov
adc
fidivl
pop
stos
bound
mov
and
add
in
out
enter
jge
rorb
mov
push
hlt
adc
idivl
add
fdivs
adc
push
ds
orb
jbe
loopne
enter
mov
aas
sti
cmp
psubsb
inc
into
test
pop
sbb
xlat
test
xchg
pushf
fwait
sahf
sbb
in
xchg
xor
mov
mov
icebp
sti
sub
loope
xchg
rcrl
ljmp
dec
cmp
jae
or
jnp
adc
xchg
dec
rcl
pop
aad
jns
rorb
or
lods
fsts
sar
xor
add
iret
repz
loop
xchg
adcb
dec
cmc
push
adc
fucomp
jne,pt
out
ds
xchg
dec
imul
pop
dec
mov
mov
stos
icebp
mov
jle
fstl
xor
arpl
fwait
inc
fsts
xor
mov
sbb
aaa
sbb
pop
mov
hlt
std
iret
cs
fcoml
clc
sub
andb
idivb
movsl
sub
mov
je
mov
fdivrl
inc
xchg
scas
loopne
stc
pop
pop
iret
shrl
mov
mov
sti
lock
cld
das
out
adc
rcrb
sbb
imul
shrb
pxor
subb
dec
dec
xlat
mov
imull
in
mov
popf
cmp
push
test
xchg
mov
push
aam
cs
xor
andl
push
pop
dec
fidivrs
test
pop
fcoml
das
pusha
push
mov
mov
ss
xchg
xlat
clc
hlt
testl
or
in
jns
stos
loope
hlt
jp
mov
xchg
je
jp
mov
mov
fwait
jae
fbstp
popa
cmp
test
popf
imul
lods
xchg
mov
test
jne
and
mov
lcall
or
les
xchg
dec
mov
cwtl
or
add
mov
aaa
mov
test
lock
repnz
scas
pop
or
outsb
mov
stos
ljmp
call
fwait
and
lcall
bound
add
clc
or
addb
test
add
std
sbb
in
scas
mov
ret
sub
popa
mov
lods
jle
jbe
out
mov
add
push
or
lock
pop
mov
add
imull
movsb
mov
popl
pushf
dec
incl
scas
addr16
stos
add
stc
aam
push
dec
pop
movsl
popf
ljmp
pop
ss
jne
or
sbb
das
push
mov
pop
mov
mov
aaa
dec
rcll
addl
test
mov
mov
inc
gs
cs
test
inc
sub
adc
les
cmp
or
add
lahf
dec
lahf
lret
hlt
mov
cltd
jmp
mov
mov
cld
fldcw
xor
mov
dec
and
int
ret
call
jnp
sbb
push
sub
js
mov
lahf
pushf
push
in
int3
pushl
addl
divl
pop
mov
repz
sub
fildl
push
sub
scas
adc
gs
test
in
push
clc
sub
mov
lds
mov
mov
cmp
sbb
mov
sub
or
push
pop
adc
hlt
daa
mov
mov
fwait
xor
cmpsl
mov
mov
ss
pop
ret
imul
cmp
in
mov
sbb
and
push
mov
push
adc
lods
testb
sbb
mov
pop
add
xor
negl
mov
mull
iret
pop
and
int3
and
inc
adc
shlb
push
xor
in
scas
movsb
mov
xchg
adc
jle
ret
lahf
or
xchg
push
cmp
xchg
cmp
inc
mov
or
or
inc
loope
pop
pop
les
and
outsb
es
jp
push
test
xchg
mov
lods
xor
xchg
xchg
sub
loope
sti
movsl
push
or
xchg
das
jg
jb
jp
scas
negl
mov
inc
xchg
test
push
cmp
and
orb
or
push
mov
inc
sub
mov
fldt
fwait
clc
cwtl
sub
roll
call
mov
enter
int3
push
cmp
js
divl
rcrb
lea
cmp
sti
je
inc
cwtl
dec
and
mov
pop
mov
fsubrs
popf
mov
cmp
jp
in
xor
out
add
dec
shrb
mov
fs
gs
mov
inc
pop
stos
fwait
or
test
loop
jns
roll
fnstenv
or
xchg
test
sub
push
sbb
cmpsb
ret
mov
mov
xchg
xor
cmp
es
cmp
in
jbe
movsb
mov
jmp
and
repz
loop
xchg
rorl
mov
mov
fwait
push
popf
js
subb
mov
adcl
sahf
fimull
nop
rolb
mov
pop
cmpsl
ret
std
cld
imul
or
rcr
jnp
shlb
xadd
addl
xchg
pop
sub
sub
add
movsb
adc
xchg
lods
cwtl
sub
mov
ret
loopne
jmp
push
popf
mov
cmp
jp
loope
mov
xchg
push
adc
adc
add
fsubrl
lret
movsl
mov
mov
push
lds
mov
push
dec
xor
leave
fs
leave
lods
dec
dec
popf
lret
arpl
inc
or
outsb
push
cld
pop
daa
or
stos
aam
imul
scas
dec
fmull
mov
into
inc
sbb
scas
pushf
mov
xchg
mov
or
or
andl
dec
mov
test
js
sbb
test
rclb
push
lods
mov
cmp
cmpsl
pop
fwait
clc
divl
fwait
mov
lods
data16
jne
and
xchg
enter
enter
rcrb
and
mov
mov
mov
roll
and
inc
mov
test
movsb
in
mov
repz
aas
scas
ds
lret
xor
dec
jo
add
lods
rcll
sbb
add
jmp
jmp
fmul
fldenv
pop
ret
vcvtdq2ps
xor
xor
pop
stos
inc
loopne
sbb
pop
and
jae
jp
jg
outsl
mov
popf
in
repz
xchg
test
mov
mov
or
lds
xchg
mov
insl
mov
fcmovnbe
jns
test
shlb
cltd
lods
ficomps
inc
push
loop
bnd
xor
inc
fwait
cmc
jmp
xchg
adc
sbbl
lock
pop
sub
lahf
add
inc
loopne
add
js
adc
divb
stos
sti
insl
das
cmp
lea
cmp
mov
add
mov
or
out
mov
dec
pusha
mov
adc
push
xor
mov
xchg
dec
fisttps
add
ret
fisubrl
enter
rol
mov
pop
repz
jg
inc
stos
jno
cli
cmp
movsb
mov
pushf
insb
mov
mov
mov
push
xor
stos
leave
gs
mov
fildll
add
fistl
adc
add
cmp
cwtl
sub
sbb
mov
mov
ljmp
movsl
lcall
ja
sub
pop
mov
jl
pusha
push
jg
jp
mov
leave
loop
mov
mov
cmc
jl
ror
inc
sbb
insb
xchg
mov
mov
fucomi
push
cmp
xchg
gs
inc
sbb
cmpsl
dec
sbb
mov
in
xor
mov
or
mov
inc
stc
hlt
jl
mov
je
push
mov
aad
pop
es
orl
push
and
mov
loopne
clc
sbb
mov
in
jnp
stos
xor
ret
mov
push
orb
fldenv
nop
adc
or
push
dec
repnz
movsb
lret
test
pop
mov
fucomp
jae
ljmp
dec
pop
insb
fmuls
cmp
dec
inc
xchg
pop
sbb
xchg
or
mov
cmpsl
push
ja
std
mov
test
inc
insb
rcrb
cmp
cmp
jge
jecxz
scas
inc
xlat
call
mov
and
sub
cmp
add
lcall
addr16
fcoms
and
xchg
mov
and
cmp
cmp
jecxz
mov
es
shll
and
dec
inc
mov
sub
cmp
mov
das
cmpsl
cmp
dec
jb
or
sbb
mov
imul
dec
fadds
add
iret
ret
ret
fisubrl
stos
pop
sub
rol
mov
pop
repz
jg
inc
stos
jno
cli
cmp
aam
dec
pushf
insb
mov
mov
mov
inc
lods
push
push
fwait
lds
cmp
int3
mov
xchg
lret
jnp
fildll
pushf
cmp
jno
xchg
xchg
xorl
lods
mov
xchg
movsl
nop
outsb
test
add
mov
pushf
inc
jnp
ret
adc
mov
popf
xchg
das
mov
mov
jmp
pop
aas
add
add
inc
mov
and
cwtl
push
pop
stc
fisubs
xor
jp
outsb
push
mov
ret
lret
in
cmpsb
jnp
or
add
popa
mov
mov
arpl
shll
mov
xor
lods
add
aam
imul
mov
cmpsb
ret
andl
mov
int
outsl
mov
mov
loope
adc
cmp
and
push
jb
pushf
iret
loope
cmp
push
add
or
in
xchg
pop
xchg
into
pop
mov
jmp
ficoml
push
test
adc
xlat
mov
shrb
pop
sub
mov
dec
mov
aam
sub
mov
addb
xlat
shr
lock
fisttpll
jno
fisttpl
je
add
shrb
or
add
dec
and
pop
ret
adc
add
push
adc
add
iret
xchg
shr
jo
sbb
xchg
int3
pusha
xor
dec
test
push
lods
push
sub
leave
test
mov
outsl
negl
fldcw
lcall
repz
fcoml
xchg
leave
arpl
cwtl
std
repnz
mov
fdivp
xchg
subl
ret
loopne
jg
inc
out
sti
jp
fidivrs
in
movb
icebp
pop
adc
mov
add
push
jne
js
inc
xor
adc
sbb
addr16
or
xchg
or
jle
cmpsl
inc
mov
jae
add
hlt
sub
arpl
jge
test
addr16
test
scas
and
enter
shrb
mov
jno
stos
fidivs
mov
add
test
movsl
call
movsb
ret
dec
scas
xchg
inc
xacquire
scas
mov
mov
rorb
cs
mov
arpl
addb
and
adc
push
test
bound
fsubrs
xchg
enter
xchg
jb
lcall
cmp
cwtl
dec
and
sti
sti
pop
sbb
pop
imul
dec
and
sbb
cmpsl
cmp
mov
mov
shr
repz
sbb
xor
ret
imul
iret
stc
push
dec
cs
icebp
loopne
xchg
ja
adc
in
test
xor
test
into
iret
fs
fmull
jns
mov
je
jmp
xchg
mov
mov
mov
mov
jp
inc
and
dec
repz
and
pop
inc
push
mov
mov
dec
dec
push
scas
jne
dec
sub
mov
lods
cmp
sbbb
push
jle
leave
inc
push
mov
scas
aaa
mov
cli
jnp
inc
xchg
and
sub
andl
clc
jle
xchg
jecxz
add
fisttpll
mov
xchg
jg
sbb
out
mov
jle
lea
les
push
mov
aas
jbe
mov
inc
xor
xchg
mov
jo
orl
mov
sbb
mov
sbb
das
mov
sbb
daa
jp
fnstenv
and
lock
jp
or
shrl
add
sbbb
jl
pop
imul
stos
icebp
sti
out
dec
sbb
int
mov
hlt
arpl
mov
sbbl
fisubl
bound
and
xchg
dec
addr16
sub
pop
or
mov
stos
aad
xchg
inc
xchg
dec
mov
jle
mov
dec
test
scas
jp
cmpsl
mov
adc
mov
inc
fwait
leave
loop
andl
mov
clc
call
xor
and
sub
push
daa
inc
lcall
imul
xchg
cmp
sub
and
xchg
cmpsl
ret
mov
lea
jecxz
xchg
sbb
iret
and
jmp
xor
pop
mov
mov
cmpsl
lods
jns
mov
inc
mov
addl
mov
pop
xor
lret
aam
in
mov
mov
mov
lahf
xor
aaa
clts
xchg
dec
int
sbb
mov
sub
movsb
xlat
imul
mov
pop
mov
pusha
in
jmp
lods
and
mov
sub
inc
cli
push
mov
mov
movsl
push
mov
jge
jge
push
inc
sbb
cmpsl
push
stos
inc
lcall
dec
mov
cmpsb
push
jle
sbb
add
imul
xchg
ljmp
mov
mov
pop
dec
xchg
daa
inc
inc
pop
jecxz
call
test
sbb
fwait
lret
in
mov
repz
mov
enter
ficoml
int3
add
das
or
cmp
pop
outsl
xchg
das
sbb
int3
es
clc
js
push
inc
cwtl
dec
and
mov
mov
ret
mov
aas
fdivrs
insb
idiv
mov
enter
dec
movsl
xchg
sub
out
leave
ret
push
jae
mov
sar
jl
jg
xor
stos
xchg
mov
ljmp
js
aas
sub
mov
xchg
iret
out
bound
mov
push
sbb
and
cmp
pop
mov
scas
or
mov
pop
test
lret
test
mov
push
mov
pop
popf
insb
inc
fwait
leave
xor
cmp
clc
jle
adc
subl
cmpl
int
jg
mov
loopne
xchg
daa
xchg
mov
inc
mov
repz
aaa
inc
mov
cmp
das
cwtl
stos
mov
xchg
mov
add
or
cmp
fdivrs
or
in
fildll
or
fsubr
jae
pop
stc
mov
out
and
push
sbb
jne
pop
xchg
lahf
lret
in
iret
jb
scas
jo
or
vpor
dec
stos
cmp
gs
mov
sub
xlat
out
repz
pop
jle
stos
outsb
sub
cmp
mov
leave
scas
shll
insb
push
mov
inc
xchg
push
sbb
push
sbb
std
cld
cmp
cmpsl
push
push
sti
inc
or
push
ja
xchg
xchg
mov
inc
mov
inc
test
scas
dec
cmp
push
cwtl
xor
inc
adc
popa
mov
inc
mov
imul
mov
je
rclb
popf
jo
pop
jo
insb
xchg
and
out
or
push
js
es
xor
sbb
lds
sub
and
xchg
enter
mov
test
shr
lret
pop
mov
jmp
cmp
inc
add
xor
ja
sbb
imul
sub
xchg
mov
dec
lahf
push
rcrl
xchg
aad
mov
negl
xchg
lds
icebp
lods
mov
das
or
push
dec
iret
out
cmp
push
dec
jb
lret
in
inc
cmpsl
aad
loope
imul
jl
movsb
ljmp
inc
sbb
pop
push
pushf
flds
inc
mov
xchg
sarb
mov
lds
and
mov
lcall
mov
and
in
xchg
inc
push
int3
pop
pop
arpl
add
adc
in
cvtps2pd
xor
xor
fstl
and
and
cmpsb
push
in
lahf
cmpsl
movsl
mov
jl
push
mov
repz
push
sbb
repnz
xor
and
sub
mov
pop
mov
sbb
lcall
mov
cmp
ss
sbb
int3
sbb
repz
les
mov
sub
push
imul
or
lods
fidivs
loop
pop
out
dec
lea
sub
jae
movl
sbb
mov
icebp
jmp
scas
sbb
cmpsl
xchg
aam
movsl
jge
cmp
fcoml
and
popa
mov
stos
fildl
add
cmp
add
jo
jle
push
lcall
int3
sub
popf
pop
jle
inc
mov
clc
adc
fsubl
jne
js
add
mov
push
push
cwtl
dec
and
jno
jge
adc
pop
push
stos
sbb
scas
adcb
or
jo
rcll
into
mov
adc
mov
push
ret
cltd
aad
lret
inc
and
lret
push
pushf
mov
rcrb
xlat
sti
mov
mov
cmp
cmp
adc
cmc
iret
jecxz
clc
xor
mov
mov
pop
rcrb
lret
call
fisttpll
arpl
ss
mov
cltd
lret
push
xchg
dec
pop
add
pop
jle
cld
mov
or
aam
push
pop
arpl
scas
es
addb
test
pop
dec
add
inc
adc
pop
test
add
inc
jge
adc
lahf
push
nop
mov
push
cld
hlt
pop
andl
sbb
repz
pushf
xor
test
lock
out
push
jns
out
xchg
mov
pusha
jo
sub
sub
add
popa
mov
mov
mov
mov
mov
jl
xchg
dec
adc
daa
add
mov
xchg
icebp
mov
pop
hlt
push
push
pop
sub
fstl
pop
shrb
mov
stos
xor
pop
dec
lock
sbb
lods
pop
cmp
sbbl
sbb
imul
stos
mov
scas
jle
dec
mov
push
fbstp
jns
fadd
cmp
insb
pop
dec
sbb
jae
or
aas
dec
movsb
add
sarb
aam
filds
stos
outsb
and
or
push
cmp
lret
lods
cs
lahf
inc
ret
mov
or
xchg
cmp
xlat
clc
add
fstpl
mov
iret
fdivrs
jnp
and
inc
ja
movsl
fwait
xor
dec
scas
xlat
aas
jns
pop
cmp
out
dec
inc
lret
mov
enter
xor
jb
and
mov
jmp
mov
stos
push
into
fadd
flds
or
add
cwtl
push
inc
xchg
jne
adc
inc
pop
mov
and
inc
idivl
mov
andb
outsl
mov
mov
movsb
sub
sub
jno
mov
pop
lods
and
les
sub
pop
cwtl
in
clc
das
or
push
movsl
pop
or
push
xor
sbb
outsb
out
pop
popa
hlt
dec
cmpsl
insl
fstp
loope
pop
scas
jno
ficompl
cmp
xchg
jne
fcmovnu
loope
aas
lahf
jp
sub
loopne
repz
mov
lret
faddl
cmp
sub
rorl
pop
mov
fwait
lea
stos
sahf
inc
fistps
lahf
inc
lahf
mov
pop
cmp
in
jbe
lcall
mov
in
outsl
or
adc
shl
or
add
ss
faddp
pop
test
adc
add
bound
mov
inc
pushf
sbb
rolb
inc
pop
and
mov
imul
sar
dec
pop
sahf
test
fwait
add
mov
lea
mov
lods
js
mov
ret
dec
sub
int
sti
movl
cli
iret
test
dec
push
movsl
loop
fisubrl
jns
mov
sbb
cli
je
xlat
pop
mov
cmp
outsl
mov
xchg
or
shrb
or
xor
adc
sub
sahf
or
mov
cmp
ja
fwait
outsb
jbe
clc
jl
or
sbb
mov
fwait
mov
mov
int
mov
js
pop
jmp
mov
xlat
iret
xchg
push
cmpsb
sbb
jbe
loopne
ds
jmp
std
mov
sti
mov
dec
sbb
xchg
push
and
or
aas
das
fcomps
dec
and
push
lea
arpl
int3
inc
pop
mov
in
mov
push
jae
mov
sbb
add
or
xchg
xchg
push
sbb
addr16
mov
sbb
stos
pop
lods
and
les
dec
lods
fildll
mov
jge
mov
cmp
and
mov
lahf
clc
je
pop
enter
out
or
cmp
adc
xchg
lods
jle
cmp
jmp
popf
xchg
inc
sub
mov
test
dec
pop
test
jl
mov
cmp
cmp
pop
stos
aam
mov
jnp
popf
xor
lods
mov
or
mov
mov
outsl
jbe
cwtl
dec
and
cmp
or
cmp
dec
dec
mov
push
sarl
mov
inc
cmp
pop
scas
mov
jbe
addb
mov
mov
cmp
jp
popa
lahf
mov
mov
test
nop
push
cmp
mov
stos
inc
cmp
push
lods
pushf
in
jbe
test
sub
cmp
sub
sub
mov
icebp
movsb
mov
cli
je
fistpl
dec
cmp
outsl
mov
mov
jbe
shrb
or
xor
adc
xchg
lods
jle
fidivrl
jmp
popf
xchg
inc
xor
mov
test
dec
pop
test
jl
jmp
and
cmp
xor
sbb
fsubrs
xor
sbb
shlb
cmp
pop
lcall
mov
pop
adc
dec
sub
inc
leave
or
inc
cmpb
dec
dec
mov
push
sarl
mov
inc
cmp
pop
scas
test
stos
pop
sub
xor
fsubrs
popf
mov
cmp
jp
popa
lahf
mov
adc
add
test
nop
push
cmp
mov
stos
inc
cmp
lods
pushf
in
jbe
test
sub
cmp
sub
sub
cmp
mov
jns
movb
push
cmpsl
xchg
test
ret
add
cli
jge
imul
dec
cmpsl
insl
mov
scas
jno
mov
xchg
jbe
sub
ja
cli
xchg
push
cmp
jno
loopne
inc
jecxz
fs
xlat
arpl
inc
jmp
pop
stos
aam
mov
jnp
popf
xor
lods
mov
or
mov
mov
outsl
jbe
cwtl
dec
and
cmp
or
cmp
dec
dec
mov
push
sarl
mov
inc
cmp
pop
scas
mov
jbe
addb
mov
mov
cmp
jp
popa
xchg
mov
fldlg2
add
ret
or
scas
mov
into
pop
and
jmp
imul
jb
dec
xor
movsl
loop
add
push
adc
sti
stc
cli
cmp
pop
shrb
mov
xchg
or
pop
mov
cmp
mov
enter
cmp
stos
xor
in
sbb
or
lahf
mov
cmc
cmp
dec
mov
neg
mov
jbe
lock
or
in
mov
jnp
fwait
xor
xchg
pop
and
mov
cmp
sti
pop
cwtl
and
cmc
sarl
mov
inc
sbb
in
insb
or
xchg
inc
add
xchg
cmp
addl
dec
jo
imul
mov
jb
inc
inc
mov
call
dec
inc
pop
inc
stos
cmpsl
jecxz
lcall
mov
ret
or
push
rcl
dec
in
stos
push
lods
fwait
mov
fs
jne
add
cmp
push
jns
mov
sahf
das
xchg
stc
cli
cmp
jbe
movsl
mov
pushf
mov
cmp
and
mul
test
arpl
scas
dec
fs
dec
sbb
mov
mov
and
jge
outsb
js
dec
mov
fs
jnp
inc
sbbb
jle
cwtl
cmp
std
decl
and
add
out
out
mov
xchg
subb
inc
movsl
xchg
jbe
mov
adc
cmp
jb
pop
pop
outsl
js
cltd
dec
or
fisttpl
or
sub
or
pusha
imul
pop
xchg
mov
imul
adc
pop
pushf
into
push
ljmp
mov
or
lret
stc
addb
dec
inc
js
scas
cwtl
aas
dec
dec
cmpsb
arpl
sbb
mov
jne
les
sub
mov
lret
fisttpll
add
sti
sub
dec
sbb
push
dec
push
dec
push
stos
in
sbb
or
dec
rorl
out
js
leave
faddl
mov
in
subb
dec
cmp
outsb
js
dec
push
test
cli
jnp
and
in
andl
js
icebp
js
adc
jg
cltd
mov
mov
pop
pusha
iret
stos
xlat
push
fidivl
cmp
mov
jnp
js
mov
mov
out
add
fcomps
stos
stos
xchg
lret
addr16
sbb
xchg
xchg
pusha
nop
dec
push
dec
xchg
lret
in
js
mov
jle
enter
cmc
xchg
add
cmp
outsl
clc
cmovle
pusha
clc
jp
gs
rol
push
sbb
leave
decb
imul
ss
lock
cmp
repnz
inc
sbb
mov
nop
cmp
fldl2e
je
sahf
das
xchg
stc
cli
cmp
adc
test
xor
jg
or
dec
fwait
outsb
subb
testb
xchg
mov
mov
xchg
adc
fsubs
push
or
scas
aaa
mov
cli
jnp
and
adc
add
andl
inc
push
fwait
int
dec
nop
es
cmp
push
test
xchg
imul
movswl
jmp
std
mov
sti
mov
sbb
mov
mov
mov
daa
mov
sbb
mov
cmp
and
imul
mov
jb
inc
inc
mov
call
dec
inc
js
or
imul
mov
mov
sbb
push
dec
xor
mov
dec
repnz
imul
movsl
cld
lods
mov
lea
test
negl
lret
jg
repz
push
xchg
aam
xor
movb
lret
fisttpll
dec
test
aaa
fptan
js
jge
or
js
adc
cmpsl
daa
add
fs
xchg
fcoml
mov
adc
int
xchg
add
xlat
in
out
push
xor
aam
imul
pop
mov
xor
lahf
dec
xchg
ds
fcomps
mov
sub
sbb
mov
push
sarl
mov
jge
pop
scas
pushf
jg
pop
sub
sub
inc
add
mov
cmp
jp
in
stos
mov
dec
sbb
lods
insl
test
jg
cwtl
jo
fmul
push
push
mov
sub
jno
mov
pop
lods
and
mov
inc
cmp
mov
xor
pushf
cmp
adc
mov
fidivs
xchg
inc
cmp
stos
popf
mov
fcmovb
and
cmp
mov
and
push
int
cmc
pop
pusha
dec
dec
sub
imul
jnp
and
inc
scas
cld
jle
add
mov
or
dec
jecxz
push
cmp
mov
inc
cmp
cmpsb
fwait
lret
in
mov
fldt
stc
dec
test
mov
push
lock
or
mov
ja
rcrb
ret
pop
sub
js
pop
push
lea
arpl
mov
xchg
or
jae
inc
cmp
push
pop
cmpsl
mov
lahf
insb
jbe
mov
sbb
test
lcall
popf
int3
adc
lods
mov
mov
fisubl
js
push
stos
mov
sbb
push
cs
mov
sahf
das
xchg
stc
cli
cmp
mov
inc
js
insl
ret
add
mov
stos
std
icebp
jmp
aad
movsl
xchg
dec
mov
enter
mov
sub
ja
lcall
xchg
inc
jmp
cmp
or
sbb
mov
fwait
mov
mov
int
mov
js
pop
jmp
mov
xlat
iret
xchg
mov
jmp
jo
movswl
jmp
std
mov
sti
mov
inc
fsubrl
mov
xchg
mov
movsl
dec
daa
mov
mov
sbb
cwtl
dec
and
mov
imul
inc
lds
jae
mov
xchg
sti
hlt
mov
cmp
out
ja
xchg
mov
sbb
jbe
mov
sub
lods
xchg
sub
jno
mov
pop
lods
and
xorl
jns
mov
sbb
xor
pushf
cmp
movsl
mov
nop
pop
scas
es
shrb
adc
pop
mov
push
xchg
fsubrp
stc
movsl
leave
fs
sbb
xchg
inc
add
mov
mov
push
pop
or
sub
test
jle
cmpsl
in
loopne
insl
jg
inc
dec
std
gs
das
xchg
stos
aam
mov
jnp
fwait
xor
mov
jae
stos
cmp
pop
in
in
xlat
push
mov
push
lock
inc
and
pop
rcrb
andb
pop
sub
js
pop
push
mov
arpl
adcl
mov
inc
iret
or
inc
clc
xchg
or
and
mov
and
push
lods
xchg
sub
jno
mov
lods
and
mov
push
ljmp
mov
stos
repnz
popf
insl
jbe
fsubrs
cmp
or
cmp
int
lods
xchg
inc
lods
lcall
mov
sbb
push
mov
cmp
xchg
out
mov
mov
shlb
mov
scas
aaa
mov
cli
jnp
and
adc
add
andl
dec
mov
int
dec
nop
es
cmp
push
test
insb
cmpsl
sub
mov
movswl
jmp
std
mov
sti
mov
dec
shrb
addb
lds
movsb
push
out
inc
mov
push
inc
inc
sbb
dec
call
loopne
pop
imul
inc
int3
inc
push
pop
push
dec
iret
or
inc
loopne
stos
aad
mov
jmp
jb
fidivs
push
jns
into
lods
xchg
sub
adc
sbb
push
lds
sub
ds
fsubrl
and
dec
aad
sbb
inc
and
mov
lahf
sti
je
xchg
imul
pusha
pop
insl
mov
inc
or
xchg
aad
xor
jmp
mov
or
lahf
mov
cmc
cmp
dec
mov
neg
mov
movsb
sbb
cmp
in
mov
jnp
fwait
xor
lods
mov
or
mov
mov
outsl
jbe
cwtl
dec
and
cmp
or
cmp
dec
dec
mov
push
dec
mov
pop
fnsave
les
cmp
pop
mov
dec
push
aas
test
cmp
jp
popa
lcall
gs
lea
std
cld
or
mov
pushf
fcompl
std
mov
inc
and
push
dec
mov
test
dec
inc
cli
out
mov
stc
cli
cmp
test
insl
ret
mov
xchg
or
pop
mov
cmp
mov
enter
cmp
stos
xor
in
sbb
or
lahf
mov
cmc
cli
mov
or
and
ds
lret
sbb
dec
pop
cs
pop
stos
aam
mov
jnp
popf
xor
lods
movsl
xor
jg
lods
cmp
lea
mov
jne
mov
or
xor
inc
pop
fwait
pop
rcrb
arpl
and
adc
xchg
cmp
addl
sbb
imul
mov
jb
inc
inc
mov
call
dec
inc
jle
push
or
mov
addr16
ret
or
push
rcl
dec
in
stos
push
lods
fwait
mov
fs
jne
rorb
mov
jns
mov
sahf
das
xchg
stc
cli
cmp
jbe
movsl
mov
pushf
mov
cmp
or
mul
test
arpl
dec
sbb
lea
subb
dec
jge
js
dec
jbe
fs
jnp
and
test
sti
std
lea
cmpsl
sahf
inc
pop
fwait
int
dec
pushf
pop
mov
jmp
push
lods
xlat
addr16
ljmp
ret
fs
iret
fiadds
aas
into
sbb
add
inc
and
pop
rcrb
add
and
adc
xchg
cmp
xchg
rclb
in
mov
imul
inc
mov
test
iret
repz
loop
xlat
inc
sbb
sub
sarb
sub
pop
stos
push
lods
xchg
sub
jne
vandnps
mov
ss
mov
inc
mov
mov
jnp
subb
mov
mov
push
cmp
push
or
xor
adc
sub
sahf
or
push
cmp
and
and
leave
cmp
cmpsl
lret
movsb
sbbl
dec
xchg
fwait
int
mov
js
lcall
andl
ss
cli
dec
jnp
call
or
push
mov
xor
inc
adc
insb
inc
leave
mov
xchg
dec
iret
dec
inc
xor
bound
cmp
mov
or
mov
mov
cmp
pop
popl
jae
mov
xchg
sti
hlt
jp
pop
dec
aaa
lds
ret
push
dec
lock
stc
gs
mov
mov
mov
mov
test
and
mov
push
sub
push
dec
xor
leave
mov
repz
cmp
sub
xchg
xchg
xchg
cmp
jge
or
dec
roll
jns
fisubrl
mov
and
push
decb
movsb
test
push
sbb
and
push
pop
pushf
popf
xchg
xchg
mov
stos
pushf
dec
pop
fucomi
subl
adc
ds
dec
jecxz
pop
cmp
lret
fsub
dec
adc
mov
cltd
xchg
aas
jae
lods
cmp
lea
mov
jne
fisttps
or
mov
inc
hlt
dec
clc
in
fwait
inc
and
mov
dec
mov
xchg
xorb
dec
sbb
arpl
mov
xchg
or
inc
inc
xor
and
add
int
test
mov
and
mov
mov
cld
or
fwait
cltd
int3
adc
lods
mov
mov
sbb
push
dec
xor
test
dec
repnz
jns
push
and
jae
cld
lods
mov
add
insl
ret
mov
xchg
or
pop
mov
cmp
dec
cmpsl
negl
jbe
enter
cmp
stos
xor
in
sbb
or
inc
cmc
cmp
sbb
add
mov
fnstcw
pop
jns
fistl
inc
aaa
scas
stos
loop
mov
cwtl
nop
inc
push
lods
in
mov
fldt
mov
lea
idivl
popf
mov
dec
sbb
xchg
push
and
or
clc
aad
lahf
inc
iret
mov
sarb
sub
xchg
mov
insl
pop
mov
jae
mov
xchg
sti
hlt
jp
pop
dec
aaa
lds
ret
push
dec
lock
jmp
and
xchg
mov
mov
lods
and
jno
mov
xor
dec
cltd
jg
push
push
mov
jno
mov
stos
fs
in
notb
dec
cmp
dec
cmpsl
imull
jbe
enter
cmp
stos
xor
jmp
stos
sti
dec
pop
sub
fists
stc
jl
adc
mov
xchg
mov
xor
test
jg
mov
les
lods
pop
pusha
lahf
stos
xlat
push
pushf
and
jne
pop
stos
mov
pop
daa
mov
mov
xchg
add
sbb
add
andb
js
sbb
mov
movsb
push
rorl
mov
push
inc
inc
cli
cmovg
pop
dec
test
pop
test
jae
mov
xchg
sti
hlt
mov
cmp
cmc
lods
sbb
jbe
mov
sub
lods
xchg
sub
jne
mov
inc
xor
sub
sbb
imul
rol
fiaddl
ss
pop
mov
inc
leave
inc
cs
mov
int
xchg
je
and
push
xchg
cld
out
stc
fmull
sbb
ficomps
xchg
inc
or
cmpsl
push
mov
ret
mov
inc
enter
mov
js
call
and
ds
lret
sti
mov
fwait
cs
inc
mov
imul
rcll
and
mov
ret
test
fisubs
cmp
call
pop
sti
sti
mov
jle
cltd
lcall
cwtl
sub
repnz
add
or
lahf
out
rolb
inc
movsl
and
mov
imul
pusha
xor
in
cld
wbinvd
xchg
mov
mov
add
ja
repnz
bound
cli
jg
les
and
lcall
rorl
and
add
sub
push
adc
sub
add
jl
lcall
cmp
into
and
into
push
cwtl
aam
xor
jno
jb
movsb
cmpsl
push
insb
inc
add
mov
pusha
push
pop
pusha
ret
jle
aaa
fldenv
sbb
cmpsl
xlat
adc
in
push
adc
sub
std
cmp
test
stc
add
cmp
and
mov
pop
pop
es
pop
pop
fs
mov
iret
mov
mov
cmpb
dec
dec
xchg
xchg
cwtl
nop
dec
push
dec
xchg
lret
in
js
mov
jle
enter
cmc
xchg
add
std
pop
outsl
clc
cmovle
pusha
clc
jp
popa
xchg
mov
sbb
in
add
rclb
dec
mov
ret
dec
sub
int
sti
pop
add
adc
inc
sahf
sbb
test
dec
inc
movsl
loop
fisubrl
jns
mov
jge
push
std
insl
js
fldcw
jnp
mov
movsl
jae
or
sub
fldcw
pop
pop
dec
pop
stos
gs
fistl
mov
sub
pop
jnp
js
shll
cli
leave
jmp
popl
ljmp
pop
cwtl
mov
ja
push
scas
out
fwait
mov
mov
int
sub
mov
fwait
mov
cwtl
inc
out
inc
mov
ffreep
xchg
add
xchg
jb
sti
sti
mov
pusha
shrb
mov
xchg
mov
cmc
dec
daa
mov
pop
test
mov
cmp
and
insl
pop
test
jae
popf
into
inc
xchg
imul
cld
mov
out
add
lea
std
cld
inc
or
stos
push
arpl
or
imul
dec
xor
imul
inc
push
neg
xlat
addr16
cli
cmp
inc
shrb
add
cli
jge
test
movsl
shl
sub
add
add
dec
fistl
dec
push
in
pop
in
sbb
cmc
sbb
ds
sbb
add
mov
pop
cmp
shrb
scas
addr16
popf
xor
lods
mov
adc
sti
repnz
mov
fwait
inc
fistpll
popf
repz
mov
cmpsl
inc
mov
adc
lahf
push
xor
mov
xchg
jmp
addr16
imul
arpl
int3
inc
pop
mov
in
mov
push
jae
mov
sbb
add
or
xchg
xchg
push
sbb
outsl
lret
fbld
imul
lret
scas
or
cld
jge
add
push
popa
cmc
mov
into
xor
lods
push
sbb
sbb
ret
cld
mov
xchg
fisubrl
xchg
dec
cmpsl
xor
pop
fistl
test
movsb
imul
imul
jnp
lods
push
stos
test
ds
fdivrs
pop
push
daa
inc
lcall
popa
imul
mov
test
push
and
sbb
stc
mov
jmp
std
mov
sti
xchg
leave
out
int3
inc
test
imul
jno
add
arpl
and
cld
out
repnz
ret
jecxz
andl
sub
cltd
mov
add
mov
cmp
jp
popa
mov
in
add
jnp
cld
or
xchg
xchg
int3
adc
lods
mov
mov
sbb
push
dec
xor
add
dec
rcrl
fbld
and
ljmp
stc
cli
cmp
movsb
xchg
dec
cmp
cmpsb
xchg
adc
jge
or
pop
sahf
aad
fildl
mov
jns
mov
mov
and
push
int
dec
pop
pusha
dec
dec
cmp
and
imul
jnp
and
andl
std
mov
mov
fnstsw
jp
add
push
in
mov
mov
leave
cmp
fisubs
imul
es
hlt
std
mov
sti
mov
cmp
insb
inc
leave
mov
xchg
mov
stc
dec
daa
mov
mov
imul
dec
and
mov
imul
inc
lahf
adc
pop
mov
jnp
xchg
mov
jp
in
add
rclb
inc
mov
ret
dec
sub
int
sti
pop
add
adc
inc
std
outsb
iret
test
dec
ret
movsl
loop
fisubrl
jns
mov
adc
ret
cmp
movsb
xchg
adc
ret
add
scas
js
shrl
cmp
test
or
push
add
and
dec
cltd
insl
dec
push
in
pop
jmp
mov
or
inc
sbb
sbb
add
into
cmp
test
hlt
jp
jnp
popf
xor
lods
mov
out
cmp
popa
jo
sbb
outsl
xor
lret
shl
or
add
aaa
sbb
faddp
pop
test
adc
pusha
sub
js
pop
push
lea
arpl
sub
or
inc
into
pop
jge
or
unpckhps
pusha
in
aam
sar
add
mov
les
inc
jle
mov
ljmp
dec
test
jns
sbb
mov
push
lods
and
mov
jge
sub
mov
jge
push
std
insl
js
fldcw
jnp
mov
movsl
jae
or
sub
mov
std
stos
gs
fistl
lods
nop
inc
arpl
jecxz
scas
xchg
dec
dec
jle
jmp
test
adc
sbb
outsb
js
stc
jl
test
or
arpl
push
subl
pop
dec
mov
cmc
scas
addr16
popf
xor
lods
mov
out
cmp
popa
jo
sbb
outsl
xor
lret
shl
or
add
aaa
sbb
faddp
pop
test
adc
pusha
sub
or
clc
js
pop
push
mov
arpl
orl
mov
jae
mov
push
ljmp
mov
or
lret
stc
push
test
shlb
sahf
sbb
cmpsb
scas
cwtl
aas
dec
test
jno
mov
push
lods
and
mov
jge
sub
mov
jge
push
std
insl
js
fldcw
jnp
mov
movsl
jae
or
sub
movsl
cs
pop
dec
popf
stos
gs
fistpl
cltd
push
mov
out
and
fnstcw
outsb
js
dec
cltd
test
cli
jnp
lods
mov
sbbb
shll
fidivrs
pop
dec
sbb
scas
sbb
xchg
scas
addr16
fwait
xor
lods
mov
pushl
stos
mov
cmpsb
sbb
fsubs
out
mov
iret
mov
mov
cmpb
dec
dec
lea
xor
and
adc
scas
cmp
mov
fcmovb
pop
test
mov
add
stc
clc
jp
gs
mov
pusha
xor
das
mov
sbb
inc
or
sub
out
test
pusha
outsb
sub
orb
push
dec
xchg
fisubrl
jns
mov
sbb
mov
xor
dec
sbb
lret
jg
repz
mov
jp
fistl
mov
sub
inc
xor
jmp
xchg
scas
pop
leave
fxam
xor
push
mov
cmp
xchg
mov
jle
mov
fwait
lea
stos
sahf
inc
into
fwait
int
sub
mov
movsb
sbb
inc
mov
subb
dec
pop
cmp
cmp
mov
data16
sti
mov
sbb
insb
inc
inc
xchg
dec
dec
or
mov
dec
lret
or
pop
hlt
add
add
mov
push
pop
loopne
dec
dec
and
fsubrs
popf
mov
cmp
jp
popa
xchg
mov
fucomp
add
lea
sbb
cld
or
ret
aad
int
pop
mov
ret
or
push
rcl
dec
cld
test
mov
sarl
inc
and
fldl2e
je
sahf
das
xchg
stc
cli
cmp
mov
dec
fisubrs
mov
xchg
or
pop
mov
cmp
dec
cmpsl
idivl
jbe
enter
cmp
stos
xor
in
sbb
or
inc
movsb
ds
sbb
add
mov
fistpll
pop
dec
jle
scas
sbb
push
scas
addr16
popf
xor
lods
mov
or
mov
mov
outsl
jbe
cwtl
dec
and
cmp
or
cmp
dec
dec
mov
push
sarl
mov
inc
cmp
cs
scas
mov
jbe
addb
mov
mov
cmp
jp
popa
lahf
mov
mov
test
nop
push
cmp
mov
stos
inc
cmp
addr16
adcl
push
sub
cmp
sub
sub
mov
icebp
movsb
mov
cli
je
fistpl
dec
cmp
mov
mov
jbe
shrb
or
xor
adc
sub
inc
mov
in
sbb
cmc
sbb
xor
inc
vpternlogq
ds
std
lea
gs
inc
loop
int
sub
mov
fwait
mov
cwtl
inc
cmp
mov
lock
dec
xchg
and
push
xor
sbb
add
andb
js
sbb
mov
push
dec
mov
pop
push
mov
gs
lea
insl
pop
pop
addb
or
pop
pop
orl
sbb
popa
inc
mov
in
add
cs
cld
or
scas
mov
into
pop
and
cmc
pop
dec
mov
imul
jb
dec
xor
movsl
loop
lret
cwtl
clc
scas
mov
mov
stc
cli
cmp
mov
fdivrs
cltd
push
fsubrl
add
sub
popl
arpl
in
push
into
pop
test
sbb
movsb
lcall
jge
pop
in
sbb
or
inc
or
sbb
inc
movsl
fucomi
test
repz
lea
data16
inc
ljmp
dec
xchg
cwtl
inc
imul
xor
jae
stos
mov
cmpsb
sbb
fsubs
movsl
jb
mov
sub
je
enter
dec
or
enter
jnp
dec
adc
xchg
cmp
mov
push
dec
fwait
les
cmp
ds
mov
dec
push
dec
test
cmp
jp
popa
lahf
mov
in
add
test
nop
push
cmp
mov
stos
inc
cmp
addr16
adcl
test
sub
cmp
sub
sub
mov
adc
cli
je
fistpl
dec
cmp
mov
mov
jbe
shrb
or
xor
adc
sub
sahf
or
mov
cmp
mov
clc
jl
or
sbb
mov
fwait
lea
mov
int
sub
mov
popf
xor
lods
movsl
xor
jae
lods
cmp
lea
mov
popf
mov
dec
sbb
cmp
aas
mov
cld
sub
int3
push
imul
pop
push
xchg
arpl
mov
xchg
or
jae
inc
cmp
stc
stos
lahf
insb
jbe
mov
sbb
test
lcall
xchg
int3
adc
lods
mov
mov
fisubrl
fsubrs
scas
sbb
push
cs
mov
sahf
das
xchg
stc
cli
cmp
stos
jp
cltd
or
outsb
flds
cmp
cltd
add
dec
arpl
in
push
into
fsubl
fldt
movsb
lcall
jge
pop
in
sbb
inc
stc
adc
dec
xchg
cmp
inc
jp
in
subl
adc
dec
cmp
iret
out
test
movsl
cwtl
out
jbe
call
fwait
lret
in
mov
fldt
sti
adc
dec
xchg
cmp
dec
jl
insb
inc
inc
mov
sub
and
ret
sbb
mov
mov
inc
sbb
std
insl
mov
cmp
fsubrs
popf
mov
cmp
jp
popa
push
mov
in
add
adc
cld
or
xchg
int3
adc
mov
js
pop
sub
push
mov
pop
sub
xchg
inc
lcall
clc
out
lret
sub
or
or
cmp
stc
mov
mov
cmpsb
push
ja
pop
fidivrl
pop
jb
xor
sbb
mov
mov
mov
fisubrl
jnp
and
in
subl
adc
dec
cmp
iret
out
xchg
and
mov
aas
fwait
lret
in
mov
fistpl
xchg
mov
outsl
sub
fsin
out
and
cmpsb
lcall
mov
pushf
dec
scas
lret
pushl
subl
pop
add
adc
mov
sbb
fdivs
sub
or
dec
out
mov
fdivrs
or
pop
mov
jnp
stos
mov
dec
sbb
xchg
insl
test
jg
cmpsl
adc
fmul
push
sub
mov
test
les
aad
std
test
dec
inc
cmp
out
mov
in
inc
push
adc
movsl
pop
cmp
loopne
inc
and
lret
lods
pusha
insb
sub
push
stos
pop
scas
jb
mov
shrb
xchg
jbe
mov
adc
mov
loop
lcall
cwtl
lahf
and
push
pop
out
negl
dec
idiv
lahf
imul
mov
nop
rcll
and
mov
ret
test
pusha
mov
mov
sti
cmp
mov
cmp
add
xchg
xlat
addr16
dec
std
mov
int
sub
cmp
loop
into
inc
sub
dec
mov
jne
add
pushl
sbb
mov
loopne
mov
xchg
sub
jp
shr
cmp
mov
pop
xor
movsl
loop
jae
clc
scas
mov
mov
stc
cli
adc
lret
inc
stos
outsl
jmp
enter
daa
sub
jecxz
xchg
imul
pusha
fsubrl
rcll
imul
aad
xor
jmp
stos
rcl
sti
je
popf
scas
jg
mov
sti
and
in
lret
inc
sarb
fsubp
loop
decl
daa
inc
mov
mov
int
add
out
push
subl
pop
mov
sub
sti
sti
and
insb
imul
sbb
cwtl
xchg
dec
jnp
movsb
jae
je
cmp
sbb
xchg
test
dec
cmc
test
cmp
pop
lahf
lods
ja
jne
jp
add
fwait
mov
pushf
cmc
repz
mov
add
lods
xchg
sub
adc
rcll
stc
arpl
fldl2e
je
sahf
das
xchg
stc
cli
in
test
les
stos
mov
cmc
idivb
or
xor
mov
cmpsb
xor
jb
loopne
xchg
sub
mov
mov
hlt
jbe
mov
mov
scas
aaa
mov
cli
jnp
inc
mov
in
stos
sti
nop
imul
mov
int
icebp
xchg
imul
mov
dec
addr16
lods
mov
cwtl
insl
inc
repz
jne
mov
inc
out
lea
jae
sti
and
xchg
sti
popa
test
mov
jp
fdivs
xchg
popa
sub
call
cmp
cmpl
mov
fcomps
fcoml
jns
add
mov
sub
outsl
jo
jnp
mov
int
imul
addr16
xor
leave
hlt
jnp
push
dec
sub
int3
out
push
fwait
push
mov
sahf
sbb
cmp
pusha
fnstsw
mov
movsl
popf
dec
add
push
jge
or
mov
popl
fisubl
stos
jg
pop
ds
imul
or
lret
jae
sub
mov
shl
ret
inc
add
xchg
pop
cmc
mov
inc
les
adc
jmp
add
and
mov
fisubrl
sub
outsb
xchg
inc
add
adc
lods
dec
pop
fxch
push
call
jle
mov
xor
cmc
frstor
pop
lret
test
mov
int3
pop
jbe
jmp
lods
push
cltd
sahf
xchg
hlt
push
mov
pop
cmp
inc
flds
mov
sbb
lea
pusha
pop
enter
jmp
sbb
xlat
cltd
orb
mov
scas
push
call
mov
int
xlat
addr16
or
clc
jge
ror
jmp
fbld
int
fbstp
pop
test
popf
in
jns
add
xchg
sbb
cmp
and
jo
in
lahf
dec
add
xchg
cmp
mov
arpl
fadds
or
lods
jl
pushf
pop
pusha
arpl
call
je
push
add
mov
lret
xchg
nop
mov
shrb
mov
movsl
icebp
jno
mov
inc
mov
fisubrs
adc
sahf
jg
inc
pop
add
popa
scas
push
sbb
mov
sbb
repnz
mov
xlat
push
or
lds
push
lcall
mov
clc
daa
mov
stc
xchg
jl
mov
xor
std
adc
fistpll
leave
inc
ds
out
insl
movsl
aam
mov
out
mov
clc
jae
mov
xor
arpl
inc
data16
jmp
or
and
xchg
jnp
mov
nop
sbb
cwtl
sub
sarl
shlb
xor
dec
les
inc
add
pop
std
or
sbb
adc
and
scas
jge
fdivrl
pop
mov
cmp
mov
dec
in
xchg
push
xor
add
xor
mov
int3
stos
push
imul
lock
jns
jne
inc
push
dec
and
bound
xchg
sub
mov
jge
lret
xor
scas
push
sbb
dec
test
out
shrb
shrb
mov
xor
fs
movsl
fdivrs
repz
jns
push
fwait
lahf
pop
jmp
repnz
xchg
sbb
je
mov
mov
fst
lret
adc
xlat
push
jge
incb
sbb
ljmp
cld
jl
js
imul
loope
xchg
jmp
shlb
dec
mov
scas
pop
or
pop
mov
sub
outsl
mov
insl
pop
sbb
fsubl
jne
inc
push
xchg
mov
mov
inc
add
in
mov
shlb
add
pop
movsl
fsubs
jb
pop
int3
pop
xchg
jmp
push
xchg
xchg
or
fcoml
xchg
popf
xor
mov
jmp
adc
and
test
jge
test
out
int
imul
jmp
sbb
and
lahf
push
sbb
leave
pop
push
sub
data16
mov
mov
xchg
in
mov
pop
dec
rcrl
cmpsb
iret
ret
mov
sbb
or
je
mov
sbb
cwtl
pop
cltd
ja
pushf
xchg
clc
insb
clc
mov
xor
lret
adc
sbb
loop
lret
inc
mov
rcrb
cwtl
pop
stc
mov
mov
sub
jecxz
enter
xor
or
popa
pop
mov
leave
les
push
dec
or
mov
or
loopne
rcrb
addb
scas
fsubrs
pop
xor
fsubs
xor
leave
test
pop
or
adc
mov
xorl
adc
xor
mov
adc
mov
sub
movsb
jno
dec
lods
insl
lahf
in
push
mov
shll
lret
jge
inc
add
popf
std
testb
daa
hlt
mov
rcrb
neg
pop
xchg
jmp
sbb
and
ljmp
repz
mov
push
sbb
int
sbb
mov
lock
out
mov
cmpl
pop
lret
cmpsl
movsb
lret
xor
pushf
xchg
adc
clc
mov
sbb
mov
sbb
cld
mov
mov
popf
cmc
fcmovne
pop
test
cmpsb
popa
vblendvps
xchg
into
adc
imul
xchg
test
ret
sub
inc
stos
jbe
clc
dec
sbb
loopne
ror
leave
enter
dec
push
mov
fdiv
dec
cmp
out
clc
mov
push
pushf
or
les
adc
xchg
cmp
pop
lods
test
and
fs
mov
fisubl
inc
fwait
adc
and
cmpsb
jo
dec
mov
rcrl
mov
jb
mov
xchg
mov
mov
pushf
fnsave
mov
mov
ja
cmp
or
jbe
adc
pop
dec
and
jecxz
inc
mov
or
sbb
lea
mov
push
std
js
dec
rcrb
or
lock
mov
fwait
push
mov
sahf
sbb
cld
mov
sbb
mov
jns
sbb
test
add
sub
cmp
adc
inc
cmp
int3
adc
xchg
cmp
fisubrs
enter
jne
dec
sub
mov
fdiv
fldt
mov
aaa
xchg
jecxz
adc
add
sbb
lods
adc
push
add
ss
inc
add
adc
mov
adc
and
mov
fisubs
xor
scas
loopne
pop
out
mov
jbe
insl
out
aad
mov
push
mov
lret
jne
dec
pop
pop
inc
cmpsl
push
mov
dec
call
insl
mov
cld
imull
sbb
push
and
jecxz
fnstenv
js
xchg
sub
dec
cmpsl
aas
add
fmull
call
fildll
mov
popf
je
dec
push
fmulp
out
scas
mov
mov
pop
lahf
popf
push
imul
sbb
push
dec
jg
loop
sbb
cwtl
xor
les
adc
test
mov
mov
cmp
adc
push
pop
pusha
jnp
movsl
mov
mov
sbb
jecxz
adc
aad
dec
inc
dec
add
or
outsb
cmp
sbb
sub
int3
sub
cmpsl
push
push
ret
xchg
mov
mov
adc
bound
gs
push
sbb
cltd
mov
loop
jbe
adc
shlb
inc
test
push
out
jle
stos
dec
popf
neg
sbb
insl
xchg
rcll
and
fildll
xchg
pop
mov
imul
in
lret
xchg
jo
xor
adc
aas
add
stc
ss
adc
push
imul
mov
pop
mov
lock
inc
ljmp
lahf
jo
dec
rcrl
mov
jnp
mov
sbb
mov
adc
stos
lcall
jo
pop
ja
bound
lcall
cmc
xor
cmp
mov
or
fcmove
in
movl
enter
js
inc
mov
sub
arpl
push
mov
dec
dec
add
pop
xor
push
mov
inc
add
loop
push
sbb
scas
pop
test
sbb
push
add
sub
enter
outsb
adc
adc
mov
mov
inc
mov
test
mov
ja
push
aas
shrb
xchg
stos
pop
addr16
nop
dec
ljmp
fstpl
xchg
shl
inc
jecxz
jbe
push
lahf
adc
pop
testl
rcr
mov
hlt
mov
aad
imul
xor
jmp
out
shll
int
mov
pop
pop
imul
popf
pop
in
mov
cmpsb
mov
sub
pop
cltd
dec
add
lret
push
mov
mov
sub
test
or
lods
cld
push
mov
push
sbb
sbb
scas
hlt
mov
sbb
mov
lock
mov
imul
and
aad
add
mov
stos
push
mov
pop
xchg
inc
add
mov
sbb
aam
daa
data16
inc
push
inc
fnsave
sbb
out
js
les
mov
enter
cmp
aad
push
int
aas
lret
mov
dec
daa
push
mov
sbb
fnstcw
ljmp
and
jmp
jl
cltd
or
test
adc
jmp
pop
dec
test
imull
aad
sbb
stos
sub
lods
cmp
in
gs
cmpsb
mov
jle
adc
int3
jmp
and
mov
sbb
shlb
mov
aam
fwait
dec
add
sbb
mov
pop
xor
enter
scas
std
sbb
mov
and
shlb
inc
and
lea
xor
mov
inc
cmp
outsl
sub
xchg
mov
cmpsb
sub
movsb
jno
jns
insl
lahf
inc
pop
les
jb
jmp
enter
jg
or
push
xchg
sti
lods
push
cwtl
push
sub
mov
fdivs
xor
adc
adc
or
loopne
ret
sarl
push
sbb
daa
stc
js
out
mov
lock
or
js
mov
je
in
int
lds
xchg
push
xor
mov
push
jno
rcrl
pop
in
stos
outsl
mov
shl
mov
cmc
sbb
ret
jmp
flds
pusha
les
pop
or
sub
pop
or
stos
out
pop
inc
sub
fisubs
mov
test
add
daa
cwtl
lahf
mov
dec
cmp
call
cli
sbb
test
les
jl
aam
repnz
fcoml
out
andl
cld
stos
pop
xor
push
fsubs
pop
lret
stos
call
cmpsb
jo
cmp
in
xchg
imul
jno
ror
lret
xchg
jnp
lds
mov
insl
lods
push
cltd
sahf
insl
mov
fldenv
pop
call
jne
movsl
cmc
int
push
iret
xchg
mov
test
ret
inc
sbbl
out
loopne
repnz
sbb
xchg
mov
fsubl
mov
hlt
sti
int
xlat
leave
adc
addr16
push
adc
fiadds
jns
rcrl
pop
call
adc
inc
test
add
mov
inc
lds
sub
stos
pop
or
jl
arpl
test
pop
or
fidivrl
insl
test
inc
xlat
popf
mov
mov
xor
cmp
mov
or
jne
sbb
lds
sub
movsl
icebp
xor
add
lcall
jae
cmp
adc
mov
sub
loop
andl
insl
out
jnp
add
leave
fs
push
dec
les
in
rcr
jne
push
lcall
mov
clc
clc
scas
cmp
lret
test
lea
enter
iret
in
cmpsl
dec
jne
add
fsubl
mov
push
push
mov
mov
push
clc
lods
in
push
mov
shll
pop
dec
add
movl
hlt
or
aam
xor
repz
into
push
stos
div
jnp
adc
and
cltd
dec
fs
xchg
jmp
or
push
cmp
call
in
cwtl
outsb
jo
xor
mov
or
pop
lret
xchg
or
jl
fsubs
sub
arpl
sbb
and
cmpsl
lock
pushf
jne
out
pop
test
dec
jno
jg
mov
mov
repnz
lods
imul
xlat
fs
popf
divl
dec
in
rorl
push
mov
xchg
lret
jge
push
fwait
lahf
in
stc
mov
arpl
popf
mov
and
jbe
gs
jp
leave
nop
ds
fucomip
movsl
movsl
inc
mov
mov
pop
pop
and
mov
sbb
push
mov
pusha
mov
cmc
call
or
and
mov
or
sub
sarb
loopne
or
and
mov
dec
data16
push
push
ds
cld
loop
add
or
sbb
ret
mov
push
or
aam
or
mov
sbb
test
xchg
sbb
and
cmpsl
stc
sbb
mov
js
pop
loopne
pushl
test
sbb
cmc
push
int
aas
mov
sbb
xchg
cmp
xor
test
mov
push
sub
mov
pop
test
mov
outsl
adc
pop
adc
sbb
sbb
insb
xor
bound
mov
testb
loope
sbb
adc
or
hlt
test
inc
xchg
pop
lea
frstor
jns
pusha
mov
sbb
pushl
pop
in
rcrb
test
jb
insb
or
loopne
mov
xchg
out
inc
add
lret
xchg
cwtl
je
push
imul
sbb
mov
cld
loop
fsts
rclb
add
mov
cmpsl
dec
adc
sub
mov
adc
into
mov
xor
or
addr16
icebp
jb
sbb
push
negb
ss
aas
lods
xor
push
cltd
dec
push
in
mov
pop
xchg
jmp
sbb
testl
lahf
push
mov
pop
loopne
cli
movsl
mov
imul
jmp
adc
test
or
iret
imul
addr16
xor
pushf
insb
cmp
cmp
test
in
movsl
cmp
xchg
jb
lret
xchg
mov
mov
andl
cwtl
call
sbb
xchg
adc
adc
stos
jbe
enter
stc
or
popa
nop
rcl
mov
fistl
sbb
push
xor
leave
xchg
sarb
cld
inc
orl
mov
push
push
adc
dec
add
adc
dec
fdivs
sbb
push
lret
mov
adc
mov
pushf
mov
mov
lret
pop
xor
cwtl
push
mov
jbe
fdivs
lods
js
sahf
xchg
std
aaa
dec
cmp
andl
mov
fcomps
jl
jns
add
mov
sub
jo
mov
xor
in
int
imul
addr16
xor
leave
mov
dec
push
mov
xlat
addr16
out
push
fwait
push
mov
sbb
cmp
pusha
fdivrs
std
mov
test
add
push
jge
add
xorb
inc
adc
movsl
mov
jg
push
addr16
gs
lods
jne
lret
sub
mov
shl
ret
inc
inc
add
xchg
cld
cmc
mov
inc
les
lock
repnz
fcoml
dec
add
and
mov
cltd
insb
ret
pop
outsl
xchg
inc
add
adc
test
pop
fxch
push
call
jle
sub
mov
adc
lret
mov
mov
lret
out
jbe
jmp
xchg
push
cltd
sahf
xchg
hlt
push
mov
das
mov
fnstenv
in
mov
mov
fistps
jecxz
xlat
movsb
pop
enter
jmp
sbb
cltd
orb
mov
scas
push
test
je
jp
or
fst
addr16
or
mov
xlat
out
arpl
ret
jae
pop
mov
lahf
popf
in
jns
addl
outsl
pop
lods
sbb
cmp
mov
push
xchg
dec
add
xchg
cmp
mov
arpl
fcoms
or
lods
jl
test
pusha
arpl
call
je
cmp
sbb
adc
sbbl
fdivl
stos
push
jo
sbb
gs
inc
add
mov
popf
outsb
ret
adc
mov
dec
and
bound
popa
xchg
push
sbb
mov
sbb
xadd
test
int
push
or
add
push
lcall
mov
clc
daa
sub
lock
xor
std
adc
out
pop
leave
inc
ds
insl
movsl
aam
pop
xchg
mov
dec
das
stos
and
xor
arpl
add
jae
jmp
enter
pop
or
loope
xchg
jnp
mov
cwtl
sub
fstpt
pop
xor
cmp
lock
les
inc
add
pop
std
or
xchg
cltd
mov
push
cmp
and
scas
jge
call
jecxz
pop
in
pushf
cmp
mov
dec
in
xchg
jl
inc
add
xor
cmp
sub
stos
imul
lock
mov
push
inc
and
bound
xchg
push
mov
jge
add
imul
mov
shrb
das
mov
iret
fs
test
mov
repz
jns
push
fwait
lahf
pop
jmp
repnz
adc
sbb
hlt
mov
mov
fst
lret
adc
mov
jge
jp
jne
rcrb
cmp
mov
scas
ljmp
mov
std
cmpsl
pop
or
xchg
jmp
andl
dec
sahf
pop
scas
pop
or
mov
xchg
lcall
insl
pop
or
sub
xor
movsb
jne
inc
push
xchg
mov
mov
inc
add
in
nop
cmp
mov
add
test
xor
mov
pop
xchg
jmp
push
xchg
lret
or
fsubrl
cmp
call
jmp
adc
jbe
jge
jecxz
sbb
andl
jb
adc
sbb
jmp
sbb
and
mov
leave
pop
xlat
sub
data16
lods
mov
leave
pusha
pop
dec
rcrl
cmpsb
int
aaa
adc
sbb
or
je
mov
sbb
cwtl
pop
cltd
cli
cmp
insb
clc
mov
xor
lret
adc
sbb
xchg
jg
inc
mov
rcrb
push
pop
stc
mov
mov
sub
jecxz
pop
inc
test
xor
or
popa
pop
mov
leave
xchg
push
lret
icebp
push
mov
or
loopne
rcrb
xchg
sbb
scas
insb
fcoms
mov
gs
jl
inc
movsb
xorl
adc
xor
mov
adc
jl
pop
fs
mov
fisubl
lahf
in
push
mov
sahf
dec
inc
add
popf
sbb
or
daa
hlt
mov
nop
pop
es
xchg
jmp
sbb
cltd
test
js
repz
movsb
mov
push
sbb
int
sbb
cs
lock
out
mov
mov
push
pop
lret
cmpsl
sbb
mov
xchg
sub
adc
push
inc
cmp
mov
test
cmc
sbb
sbb
jle
dec
ja
cli
in
test
inc
xlat
insl
jmp
inc
popa
inc
lock
sbb
push
xchg
dec
sti
mov
arpl
inc
cmp
ficoms
lret
lods
dec
gs
icebp
xchg
jp
fisttps
sbb
in
popf
cltd
add
lock
adc
sbb
xor
out
testl
aam
mov
jnp
inc
push
mov
inc
fcoml
mov
sbb
mov
dec
pop
pop
lea
jae
sti
and
insb
imul
sbb
pop
xchg
dec
jnp
and
je
cmp
ficoml
mov
pop
mov
test
pop
subl
jp
add
in
sub
add
scas
dec
pop
xchg
int3
cmp
inc
mov
inc
and
or
jge
dec
testl
mov
sarl
dec
ja
cli
in
test
inc
insl
jmp
inc
popa
inc
lock
sbb
cmpsl
xchg
dec
sti
scas
inc
arpl
inc
cmp
mov
cltd
lods
inc
icebp
xchg
jp
mov
cmpsb
push
or
inc
jno
jnp
inc
mov
in
stos
stos
push
imul
mov
int
test
inc
mov
inc
and
lods
mov
xchg
jne
mov
inc
movsb
pop
lea
jae
sti
and
insb
imul
jno
hlt
add
xchg
sub
jnp
loopne
dec
je
cmp
and
jmp
test
cmp
test
lods
adc
lahf
push
sbb
cmp
mov
sub
pushf
scas
dec
mov
xor
jbe
mov
dec
and
or
cmp
dec
testl
mov
test
jg
ja
cli
in
test
dec
das
insl
jmp
add
inc
lock
sbb
pop
push
push
stos
scas
lcall
mov
xchg
jb
sub
add
movsb
fisttps
sbb
fstpl
lock
adc
ds
sbb
sbb
xor
testl
aam
mov
jnp
inc
push
mov
or
or
xor
mov
enter
cmp
test
je
mov
jns
aaa
gs
in
add
add
andb
js
sbb
sbb
fwait
jle
mov
inc
xor
mov
xor
fbld
je
and
pop
add
rcr
xor
mov
cmp
jp
add
fadd
ret
mov
add
pop
xchg
ret
sbb
or
dec
and
pop
stos
push
test
call
inc
mov
mov
lods
mov
mov
insb
push
inc
fdivs
or
out
stos
in
or
xor
pop
stos
xchg
cmp
jb
mov
cmc
pop
sub
dec
push
js
cs
fisubrl
jnp
inc
mov
fldl
cwtl
xchg
inc
sbb
add
mov
test
adc
test
mov
ljmp
cmp
gs
ljmp
pusha
jle
or
call
stos
inc
xor
bound
bound
outsb
aaa
and
pop
rorb
xor
xchg
dec
mov
das
lcall
test
xor
mov
aam
push
dec
mov
out
adc
adc
nop
sub
xor
ja
or
mov
xor
mov
cwtl
cmc
adc
adc
imul
inc
dec
and
out
mov
push
je
sahf
das
xchg
stc
cli
pop
dec
mov
pop
push
mov
cmp
test
cld
push
cmp
cwtl
js
stos
xor
and
push
cmp
sbb
mov
xor
mov
push
cmp
cmp
ss
cli
jnp
incl
sub
pop
scas
push
idivb
mov
fwait
push
lahf
jno,pn
je
fimull
sub
cwtl
xchg
jns
mov
fcmovne
jb
pop
cmp
sbb
sti
sti
fadds
cwtl
inc
xor
pop
xchg
inc
and
dec
pushf
inc
xor
mov
and
xor
roll
insl
mov
pushf
scas
addb
sahf
je
popf
mov
cmp
jp
add
adc
das
mov
add
ret
pop
sahf
mov
inc
pop
mov
int
cmp
sub
cmc
sbb
rcrb
and
pushf
imull
test
mov
sbb
jp
mov
sub
cmpsb
adc
dec
jae
out
push
jle
fcoml
aad
xor
xor
jnp
repnz
repz
pushf
dec
mov
xchg
in
cmp
mov
std
push
mov
inc
aas
jecxz
cli
xor
or
cmp
inc
and
call
mov
xor
mov
jecxz
stc
hlt
mov
daa
aas
gs
sbb
je
and
dec
inc
mov
jle
mov
clc
mov
arpl
out
aad
ljmp
and
subl
cmc
js
adc
popf
shlb
hlt
push
and
lock
mov
mov
sub
negb
loop
popf
scas
ljmp
mov
push
xchg
inc
icebp
push
test
add
cld
insb
mulb
int
xchg
fldt
stos
lods
cltd
and
jmp
stos
add
sub
dec
rclb
aad
xor
ss
mov
mov
jno
incl
inc
repz
add
clc
outsb
mull
insl
daa
stos
sub
add
jecxz
test
sbbb
cmp
dec
rcl
in
mov
sbb
dec
jo
fwait
jge
sti
sti
mull
adc
xchg
inc
and
jno
pop
sub
sub
cmp
jb
dec
add
idivb
mov
adc
test
loopne
mov
repz
mov
ja
or
mov
pop
sub
mov
mov
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
arpl
pop
sub
inc
sbb
addb
stos
mov
stos
xchg
stos
inc
lcall
pop
test
lods
inc
sbb
scas
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
addl
add
push
mov
adc
test
sub
mov
lahf
cmpsl
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
mov
adc
sbb
add
fsubrl
cwtl
lret
movsl
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fldt
.byte
pusha
call
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
push
push
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
xor
jne
jmp
jmp
leave
jne
jp
jo
jmp
call
call
lock
fstpt
mov
bswap
not
pushf
not
bswap
jmp
mov
pop
mov
or
jmp
bnd
jmp
bnd
std
jmp
repz
cld
jmp
lret
pop
pop
pusha
pushf
xor
call
call
add
mov
add
jmp
call
jno
jmp
jp
jmp
jmp
call
jnp
jno
jmp
jmp
push
mov
add
xor
add
xor
cmpl
je
xor
jmp
mov
and
add
inc
xor
dec
jne
jmp
xlat
sti
scas
scas
incl
scas
scas
scas
and
mov
scas
scas
lods
pushf
outsl
es
stos
es
cmpsl
es
mov
out
mov
scas
scas
scas
insb
pushf
outsl
lret
push
lahf
lret
es
pushf
outsl
and
scas
scas
sub
stos
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
and
adc
jb
stos
lods
scas
scas
lods
jp
inc
cwtl
scas
scas
scas
inc
es
scas
scas
push
dec
sub
stos
ficompl
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
inc
lods
scas
scas
scas
cmc
inc
fs
pop
les
or
mov
fwait
and
shr
adc
cmpsl
mov
mov
rorl
je
clc
jg
mov
xor
mov
fwait
inc
mov
add
fldl
fwait
add
rcrl
scas
adc
in
cs
pusha
mov
jg
add
ret
ret
jno
mov
mov
cmp
gs
lret
mov
xchg
pop
mov
aad
xchg
out
push
insl
xchg
push
sub
in
lods
gs
daa
in
sub
xchg
push
das
ret
inc
or
in
add
pop
cmp
mov
cmc
shll
dec
test
pop
adc
sub
daa
mov
and
cli
js
dec
xchg
cmc
sub
mov
lahf
pop
ja
cli
or
lcall
xor
xchg
imul
cmp
negl
dec
xchg
mov
adc
addb
filds
xchg
xchg
int
push
push
xchg
in
push
repz
pop
testl
jno
dec
and
adc
adc
dec
xor
imul
inc
fisubl
clc
adc
add
xor
ljmp
cmp
neg
out
cltd
cmp
scas
sub
insb
outsb
or
leave
pushf
aaa
jmp
insl
cmp
pop
push
cld
sub
mov
sub
cmc
lods
stos
repnz
push
mov
jbe
iret
mov
lret
fs
mov
sub
insl
or
inc
rcr
sub
ss
lods
dec
xchg
sub
mov
in
out
movsb
shlb
or
je
mov
mov
xchg
push
push
fiadds
aam
es
push
and
mov
add
jmp
cmp
mov
xor
notb
pop
jge
rcrb
pop
in
pop
hlt
insb
mov
mov
in
mov
ljmp
std
bound
pop
mov
sbb
adc
add
add
fwait
ret
ljmp
fcomps
xchg
push
adc
fisubl
loopne
popa
mov
out
mov
lcall
pushf
add
mov
mov
imul
imulb
or
mov
and
insb
mov
std
push
inc
outsl
lcall
into
je
int
xchg
add
jb
xchg
cltd
nop
push
push
sub
outsb
test
and
mov
lds
scas
sub
jnp
mov
mov
mov
mov
jno
mov
jl
shlb
or
xchg
dec
push
bound
sbb
xchg
fsts
push
adc
xchg
or
adc
ret
subl
pop
xchg
xor
inc
pop
testb
jle
add
dec
push
mov
mov
ror
fcoms
ss
dec
jmp
imul
popa
add
ss
dec
and
sbb
fnop
out
sub
mov
shl
cld
mov
mov
adc
push
daa
cmpsl
data16
in
ljmp
js
mov
jb
mov
ljmp
movsb
out
fnstsw
int
pop
pop
lock
mov
sbbb
mov
pushf
lds
lods
dec
mov
rcrb
dec
stos
insb
adc
inc
and
loope
call
shlb
pop
in
mov
sarl
fimuls
jg
mov
or
lea
insl
sub
or
jmp
addr16
adc
test
orl
or
sub
adc
out
adc
lods
and
addr16
movsl
bound
sub
imul
sar
jae
mov
les
inc
mov
cmpsl
mov
push
jecxz
fwait
inc
fidivs
lds
push
sbb
mov
jno
adc
xchg
pop
leave
enter
gs
mov
add
sub
mov
pushf
dec
movsb
orb
add
ds
cltd
pop
pop
cwtl
pop
aad
aad
scas
adc
mov
adc
jecxz
pushf
sbb
cmp
jns
lds
outsb
subb
sub
inc
filds
sbb
push
ja
mov
into
sub
pop
add
out
mov
mov
push
cmp
mov
mov
addl
lahf
lahf
pop
pop
mov
push
aad
aam
xchg
push
stos
dec
fucomi
lcall
test
dec
int
sahf
sbb
lcall
scas
fdivrl
rcrb
sbbl
xchg
or
xor
adc
arpl
gs
and
pop
movsb
sbb
sbb
mov
leave
adc
gs
pop
or
push
jp
jbe
sbb
pop
mov
iret
adc
xchg
lcall
imul
dec
outsb
fld
mov
ja
xor
dec
je
or
adc
cmp
push
mov
cs
jmp
ljmp
and
mov
cli
hlt
mov
cmp
sub
test
loopne
in
mov
adc
xor
stc
loop
inc
imul
push
jg
mov
add
jo
jnp
mov
int
add
jo
lahf
mov
jnp
lahf
push
lds
cmp
add
je
test
test
xor
pop
mov
push
inc
cmp
loop
and
add
cmp
lods
inc
pushl
hlt
in
add
push
daa
mov
outsl
jmp
mov
pusha
sub
in
loope
dec
ret
dec
pop
inc
rolb
sbb
push
pop
dec
scas
cmp
scas
std
rol
call
pop
sbb
jne
mov
out
ss
jp
ss
test
mov
iret
xchg
clc
pop
push
mov
dec
mov
sub
testb
push
and
sarl
dec
fs
and
cmp
je
and
dec
loope
repnz
push
lret
mov
rclb
mov
mov
iret
loopne
sub
push
inc
add
cltd
push
sbb
cld
xchg
popa
popa
pop
or
fwait
cmp
incb
sub
out
fidivrs
fists
inc
gs
sbb
incl
mov
jae
mov
pop
mov
inc
gs
xchg
push
push
int
popf
sub
loop
add
aas
sbb
dec
xchg
mov
loopne
xor
in
xchg
addb
cwtl
inc
pop
ja
and
add
scas
iret
movsb
add
xorb
xchg
aaa
jne
ja
jo
fwait
dec
shlb
xor
scas
mov
cmpsl
outsl
mov
inc
fldenv
mov
cmp
sbb
sub
out
ljmp
fisttpl
xor
dec
xor
mov
out
jnp
mov
or
cwtl
jbe
roll
cmp
std
out
insb
out
fidivl
or
inc
int3
sub
int3
test
jne
dec
xor
lods
imul
mov
push
inc
ljmp
mov
cmp
cmp
fistpl
imul
or
icebp
les
dec
loope
ljmp
ss
ss
push
pop
xchg
mov
push
xor
xor
push
fcmovnbe
adc
ss
adc
and
ret
add
cmp
lea
stos
jne
xor
adcb
cmp
push
xchg
es
cwtl
push
insl
addr16
jle
pop
imull
pop
fdivr
test
leave
rolb
xor
lahf
aam
ret
mov
mov
setno
push
and
dec
int
pop
pop
jp
mov
clc
cmc
js
push
shr
mov
imul
mov
mov
sbb
adc
hlt
ffreep
rclb
out
xchg
push
xchg
test
cmpsb
std
sub
jae
or
xchg
sbb
sahf
xchg
xor
lods
sarb
add
xchg
negl
jb
cmp
enter
jp
jle
ret
lock
sbb
pop
sbb
lret
dec
movsb
cmp
xchg
add
jle
adc
and
push
push
mov
inc
loope
aas
and
lahf
pop
iret
shll
push
loopne
cwtl
push
out
ss
cmpsb
imul
je
or
and
xorl
fldl
and
inc
call
jge
add
jns
lock
sbb
scas
imul
mov
mov
in
inc
les
cli
ret
xor
repnz
decb
gs
andb
push
stc
mov
xor
sub
mov
sub
push
mull
aaa
push
inc
sti
in
rcrl
mov
xchg
mov
leave
roll
clc
bound
jecxz
out
add
mov
mov
jbe
xlat
icebp
lock
cmp
sub
adc
ret
push
lcall
cmp
addb
loop
mov
jae
cmp
push
cli
int3
pop
ret
xchg
fsubrp
stos
xchg
push
andl
test
fisubrs
decb
mov
add
pop
pop
fs
jb
out
fistl
stos
lock
mov
fmull
or
movsb
mov
xchg
inc
test
add
jo
cmpsl
mov
ljmp
jnp
mov
in
mov
jecxz
lock
loopne
push
jl
stc
es
jns
mov
xchg
inc
add
stos
inc
push
sbb
add
aam
fwait
sub
movsl
gs
push
add
inc
push
daa
inc
lret
or
loop
imul
ljmp
addb
into
test
repnz
or
neg
sub
cli
push
pop
ds
lcall
sbb
jnp
movsb
orb
dec
or
fidivrs
adc
or
inc
push
push
pop
or
inc
inc
cmp
pop
pop
imul
jb
loopne
mov
aam
mov
incl
sbbl
sub
pop
aad
ljmp
not
xor
pop
inc
jae
vmovntps
in
jb
add
pop
or
cmpsb
arpl
shlb
inc
dec
mov
insl
mov
sub
subl
int
mov
jo
into
mov
inc
daa
xchg
or
push
setne
lds
mov
mov
or
mov
jecxz
fcoms
ja
fdivp
push
fwait
jo
rcr
jo
sbb
pop
loop
in
mov
aaa
and
jg
jl
dec
mov
jecxz
lock
mov
xchg
enter
mov
dec
adc
inc
jb
cmp
xchg
enter
xor
jae
cmp
fs
int3
fisttps
mov
pop
push
jne
mov
sbb
inc
fwait
mov
dec
pop
cmpb
dec
dec
and
cmp
shll
add
clc
mov
sbb
jb
insb
stc
mov
sahf
leave
sbb
leave
sbb
or
in
dec
mov
inc
ret
jle
cmpl
mov
inc
testl
jmp
enter
mov
ljmp
pop
sub
dec
xchg
mov
mov
test
outsb
shrl
jb
imul
aam
mov
jp
mov
sub
sbb
mov
mov
jg
sbb
ret
sub
int3
jb
and
mov
outsb
pop
inc
fwait
call
xchg
inc
inc
xor
adc
fdivrl
fcomi
in
jae
enter
icebp
cmp
mov
aas
xlat
pop
iret
dec
and
jge
lods
add
or
outsl
pop
adc
test
push
jmp
cmp
push
dec
cld
fisubrs
xchg
outsb
std
xor
mov
dec
push
ds
sbb
lea
aaa
mov
push
add
mov
mov
sbb
scas
mov
fcoml
out
enterw
adc
cmp
mov
mov
sub
test
ficomps
fisubs
stos
int
das
icebp
fistpll
mov
outsb
arpl
cmp
sub
dec
dec
fcoml
aam
data16
pop
adc
adc
add
movsb
lcall
pusha
fimuls
xor
adc
push
cld
movb
nop
xor
sahf
lahf
inc
adc
mov
xor
out
in
jp
sub
inc
rorb
lods
jnp
fcompl
sub
jge
add
shll
cmp
clc
dec
lret
cltd
andb
or
cmp
adc
fisttpll
push
xor
call
dec
cmpb
xchg
adc
in
les
xchg
cs
jp
xlat
aad
pusha
dec
call
int
jns
push
or
cld
push
dec
outsl
pop
sbb
aaa
lea
in
mov
sbb
jl
xor
push
in
jne
mov
aaa
adc
xchg
out
das
sbbl
and
add
add
call
inc
inc
sbb
mov
or
jg
push
add
mov
mov
push
push
mov
or
inc
arpl
mov
repz
icebp
cmp
push
mov
jae
movsb
pop
ljmp
and
in
xor
test
dec
or
idivb
xchg
adc
sbb
jnp
je
mov
test
dec
mov
repz
insb
in
jp
sub
leave
gs
shlb
inc
jbe
push
inc
or
sbb
icebp
cmpsl
sub
int3
mov
shrb
bound
clc
mov
mov
sub
enter
aam
sarb
jo
and
fstps
icebp
push
pushf
xchg
xor
test
push
sbb
add
dec
int
xor
jmp
cwtl
pop
jnp
std
or
ja
test
push
pop
test
dec
mov
cld
std
popa
add
movsl
dec
dec
call
sub
bound
ljmp
inc
push
popf
cmp
xor
in
mov
pop
rorb
and
push
fsub
rcrl
cmp
into
lret
das
push
or
scas
inc
sahf
popf
sbb
and
in
test
inc
xchg
in
inc
shlb
push
fsubrp
popf
jl
enter
inc
sub
mov
jne
repz
pop
test
mov
jb
stos
cwtl
xchg
mov
pop
mov
and
sub
ljmp
lds
pop
jnp
dec
sahf
xchg
mov
fcomps
jns
sbb
inc
fsubrs
addr16
ds
jmp
stos
xchg
sbb
jp
sbb
mov
mov
aad
xor
mov
lods
cmp
inc
inc
into
pop
jbe
cmp
mov
pop
dec
jecxz
sbb
loop
pusha
test
out
mov
sub
sbb
pop
jle
fcomps
aam
sub
int
test
mov
sbbl
cmp
sbb
in
and
shrb
lahf
rol
icebp
decb
inc
lds
popa
repnz
rclb
mov
addr16
rcrb
call
and
or
add
cmp
rolb
add
adc
adc
mov
je
hlt
outsb
pop
mov
movsb
and
fwait
push
add
or
xor
mov
rol
and
and
cmp
mov
push
mov
or
sub
dec
sbb
xor
loop
bound
fdivr
les
and
jmp
cltd
lods
jbe
or
jns
jp
int3
lcall
xor
xor
scas
inc
into
stos
out
adc
jge
xor
mov
inc
mov
mov
into
cltd
out
or
cmp
fcoms
fwait
push
adc
fisttps
and
rcll
sbb
sub
shlb
push
dec
pmulhw
jecxz
adc
adc
roll
insb
dec
sbb
shrb
push
les
out
dec
sub
cmp
or
lea
or
stos
jp
mov
ret
es
clc
add
mov
pop
dec
mov
sub
or
or
jmp
mov
push
dec
mov
mov
mov
lret
fcoms
popa
lds
cs
imul
leave
xchg
add
pop
lret
mov
cld
xor
push
sbb
jmp
cmpb
pop
mov
das
xchg
ret
push
stos
sbb
stc
js
add
and
outsb
inc
xor
sub
sahf
add
lods
sub
out
fadd
insl
stos
dec
test
jae
sbb
movsb
lret
mov
in
iret
cmp
je
test
das
loop
dec
in
mov
pop
adc
cltd
jne
inc
cwtl
xor
pop
insl
sbb
push
xor
xorl
lds
mov
jecxz
cli
aas
lret
dec
rcrb
ja
jnp
into
lds
repz
xor
inc
jle
ljmp
jl
out
jmp
mov
cmp
mov
xor
cld
push
rcll
lahf
in
loope
dec
cli
lods
push
jnp
cmp
lods
movsb
dec
adc
movsl
ret
or
loopne
sbb
adc
push
sbbb
pop
gs
rclb
outsb
insl
mov
sahf
orl
jbe
lret
adc
xlat
pushf
inc
mov
dec
xor
pop
fwait
pop
int3
lret
int
cmpsb
and
lret
shrb
mov
jg
cld
mov
mov
imul
push
outsb
lahf
or
pop
jl
lret
cmc
mov
push
xchg
pop
rol
and
movsl
or
or
sbb
push
scas
ficomps
aam
xchg
scas
leave
loopne
ja
sub
lret
cmpb
insl
mov
xor
shll
mov
es
add
daa
test
pusha
mov
add
sbb
outsb
sbb
cmp
dec
rorl
shll
dec
inc
cmpsb
addr16
pop
dec
inc
out
rcl
sub
test
inc
mov
jbe
loop
std
in
cltd
mov
les
fcmovb
pop
xlat
dec
fcoml
fwait
sbb
xchg
add
cmp
xor
cmpsb
arpl
mov
mov
inc
addl
push
pop
jle
mov
rcr
dec
call
int3
mov
sbb
pminub
lcall
scas
or
imul
xchg
outsl
stc
inc
cmp
fldcw
mov
add
pop
fistl
clc
jns
mov
or
cmp
dec
jg
push
rcl
aaa
popf
call
mov
cmp
pop
int3
pop
mov
jmp
les
inc
cwtl
mov
sub
lcall
fistl
dec
xchg
mov
inc
jge
inc
test
jb
adc
sbb
xlat
mov
je
jbe
inc
fstps
fbld
push
push
cmpsb
xor
popa
sub
movups
cmc
push
xchg
fs
mov
cmp
imul
mov
ljmp
psrld
or
sub
cmc
jbe
imul
lods
lret
jl
pop
ret
xchg
cmp
or
sar
push
cld
add
lret
jno
incl
jg
xor
in
mov
inc
xchg
subl
je
jl
iret
inc
inc
cli
ljmp
push
in
cmp
imull
mov
dec
mov
fs
int
inc
or
movsb
cmpsl
lahf
dec
mov
mov
xor
pushl
out
dec
adc
fsubr
mov
inc
jmp
lea
cmp
push
xchg
mov
pop
icebp
and
mov
lsl
popl
jecxz
or
xor
movsl
xor
in
aaa
pop
push
jae
lret
jno
imul
push
in
movsb
lea
out
das
sub
mov
xchg
fnstcw
ret
fisttps
jmp
xchg
push
loopne
stos
adcl
dec
nop
cs
xchg
mov
or
mov
push
popf
xchg
movsl
sub
cld
imul
fcoml
lahf
and
pop
cmp
xlat
adc
cli
xlat
dec
jl
push
push
jns
jle
ret
fcoml
dec
int3
ret
push
sbb
fbld
or
in
push
cmc
cmp
cltd
scas
mov
in
das
pushf
shlb
aas
aas
test
mov
arpl
push
gs
mov
mov
fmulp
ret
jno
pusha
iret
add
mov
lods
stos
xor
jge
out
or
aaa
ljmp
push
rep
inc
ja
adc
and
lock
push
mov
mov
sbb
push
mov
push
push
xchg
pop
imulb
jg
dec
xchg
and
jb
std
fnstenv
cmc
jmp
jae
repnz
or
mov
jl
pop
mov
ja
push
cmp
xchg
loop
mov
fisubrl
fnstsw
mov
test
leave
xchg
push
jb
push
test
mov
adc
rcrb
push
fwait
aad
in
es
out
nop
and
mov
sub
mov
int
or
push
pop
cmpsb
outsb
sbb
int
pop
dec
lds
xor
push
pop
xor
push
ja
jbe
cltd
pop
pop
push
cmp
cli
and
inc
test
adc
popf
mov
jbe
subl
jecxz
adc
push
mov
jno
fstpl
pop
dec
popf
mov
push
or
and
fsub
xchg
mov
jp
push
and
pop
push
orb
xor
movsl
jbe
cld
in
pop
mov
sub
pusha
mov
push
je
push
in
gs
mov
jae
add
sbb
or
xor
lods
in
cmp
subb
inc
sbb
loopne
dec
xor
sbb
scas
cmc
cmpsl
add
inc
sar
push
sbb
push
repnz
pop
dec
cld
repnz
inc
cltd
xchg
or
sub
push
enter
push
ret
mov
fsubs
in
inc
out
test
push
lock
jbe
lock
imul
jle
mov
std
jne
jl
xchg
pop
cmp
test
mov
stc
mov
loope
mov
js
sub
sbb
bound
js
mov
int
jl
fcmovb
mov
or
push
cli
insl
std
or
add
imul
ds
imul
or
and
hlt
and
lods
mov
test
or
mov
lds
cmp
xchg
imul
adc
cmpsb
iret
xchg
mulb
mov
sbb
and
jle
push
and
ret
inc
repz
sbb
rcrb
cmc
mov
inc
add
or
popf
scas
cmc
iret
frstor
ljmp
inc
pusha
cmpb
xchg
insb
pop
push
xchg
sub
cmp
and
sarl
mov
and
ja
pop
dec
pusha
dec
sbb
lcall
scas
mov
mov
or
xchg
jns
loopne
shrl
outsl
jnp
ds
mov
inc
sbb
clc
mov
jecxz
shrb
stos
in
jg
sbb
cmp
inc
int
xchg
aas
mov
cmp
push
inc
push
sub
xorl
ret
hlt
setae
mov
pop
lea
adc
dec
pop
out
sub
enter
cmpl
pusha
insl
pop
xchg
pop
loope
cmp
lret
insl
mov
hlt
adc
mov
mov
jnp
cli
push
fdivp
add
bnd
add
xor
push
adc
xor
sub
lahf
insb
insb
mov
adc
or
dec
lods
in
pusha
fdivrs
push
pushf
hlt
insl
sub
push
leave
dec
iret
jae
hlt
sbb
pop
pop
ljmp
push
loope
out
jg
mov
das
xor
push
inc
popa
mov
adc
push
push
fdiv
sbb
push
xor
pop
ret
xor
out
loope
push
jl
enter
mov
mov
sub
pop
rorl
mov
enter
lods
add
xlat
add
or
js
pusha
repnz
insl
mov
mov
mov
pop
pop
adc
push
xor
arpl
js
or
jns
shrb
inc
sahf
fsubrl
jbe
in
sahf
and
xor
insb
ret
rorb
xor
popf
lcall
lods
clc
cmp
dec
or
mov
jecxz
mov
xchg
jle
lock
pushf
aad
in
dec
sbb
lods
cmp
cmp
cli
pushf
xchg
or
imul
stos
inc
cmp
xchg
icebp
mov
stos
testb
jmp
jg
repnz
pusha
inc
jns
cmp
fsubr
lods
or
aas
xchg
cs
andb
jl
dec
mov
stos
test
inc
xchg
imul
jno
push
out
mov
jp
rcrl
aas
pop
cmp
sub
lods
jne
out
int
orl
shll
inc
sub
xchg
pop
arpl
in
push
mov
add
cld
jp
fildll
adc
sahf
sbbb
in
pop
dec
notl
es
sbbb
incb
mov
dec
roll
push
xor
mov
jmp
adc
adcb
lahf
sti
cmp
push
mov
and
dec
push
jmp
std
jb
nop
lock
scas
je
je
sub
hlt
out
push
cmp
call
cmp
adc
aas
out
add
add
outsl
lret
adc
jne
mov
aam
mov
mov
mov
test
lods
lahf
sbb
dec
push
or
sub
repz
test
and
rcll
sbb
adc
aad
clc
or
cli
inc
inc
xor
jmp
mov
rol
inc
movsl
outsl
cs
xchg
pop
pop
inc
enter
adc
push
lods
adc
js
cmp
cmp
jnp
pushl
sub
pop
cmp
jl
ds
cmp
xchg
mov
and
jp
pop
sbb
call
shlb
out
hlt
lahf
jbe
aas
pop
sbb
push
jno
imul
roll
pop
add
popf
dec
sahf
xor
out
cmpsl
inc
xor
rorl
xor
xchg
add
mov
out
mov
cltd
imulb
dec
jbe
fdivrl
jbe
rcrl
push
clc
ret
cmc
jb
loop
jle
inc
repnz
daa
jae
dec
dec
fmulp
or
pop
ja
imull
lds
out
and
and
js
outsb
std
adc
jmp
outsb
imul
cwtl
jp
mov
popl
xor
inc
fs
xchg
cmpsb
mov
insl
push
cmp
iret
stc
in
cmp
jge
push
or
mov
sbb
push
leave
push
loop
and
fcompl
mov
aaa
mov
pop
mov
pusha
pop
int3
into
sbb
jbe
insb
xor
outsb
pushf
test
cmpl
jl
jle
je
mov
scas
ret
xor
ss
in
sub
pop
push
adc
notb
maskmovq
sub
xrelease
imul
arpl
or
out
push
lcall
faddp
dec
mull
cmp
mov
push
mov
scas
in
js
xor
inc
pop
fsubp
add
in
in
jg
leave
jecxz
add
outsl
fnstcw
call
out
inc
push
cmp
loopne
test
pop
inc
dec
add
ret
mov
out
sbb
imul
cmpb
push
in
daa
add
add
jns
cmpsl
rol
and
scas
pushf
jae
mov
ds
imul
pop
dec
xchg
scas
cmp
mov
or
sbb
shrl
pop
imul
sub
jns
xor
adc
out
mov
sbb
iret
outsb
data16
lock
fdivrs
and
sbb
loop
adc
jecxz
scas
or
movsl
lds
rorl
daa
xchg
outsb
cmp
lea
js
xchg
and
xchg
int3
fcomps
nop
inc
dec
push
lea
mov
jl,pt
jecxz
insb
cld
xor
mov
in
cltd
or
mov
push
xchg
or
dec
call
add
cmc
adc
mov
shlb
adc
sbb
pop
lret
mov
enter
jae
adc
cmp
pop
sti
add
pop
js
dec
cmpsb
shll
xchg
or
jno
adc
sbb
test
add
xor
xor
insb
and
push
and
nop
popf
xchg
in
mov
mov
jle
test
pop
ret
jl
adc
dec
pushf
ficomps
add
inc
push
es
xlat
or
fwait
out
sti
mov
jle
rcrl
std
lcall
push
xor
mov
and
sbb
ficomps
cs
pop
inc
je
or
and
mov
test
lahf
repz
jg
push
in
clc
fnclex
popf
and
jno
push
pusha
jnp
lret
jg
jbe
into
pop
push
jl
push
xchg
cmp
sub
mov
in
xchg
test
dec
movsl
insb
cwtl
inc
loope
aas
push
pushl
xor
xchg
int
pop
jmp
jae
test
jbe
fistl
sub
mov
lahf
stos
mov
in
mov
gs
lcall
jo
xor
incb
scas
mov
lea
sbb
inc
jecxz
add
push
pop
add
sub
stc
pusha
xor
jp
fwait
sbb
xchg
fmull
mov
popf
cmova
rsqrtps
push
pop
into
mov
jp
jg
dec
jo
out
adc
jmp
fbld
loope
xchg
inc
cmp
insb
mov
insb
or
or
cmp
dec
push
inc
nop
test
je
das
jns
mov
shrl
sbb
add
out
in
push
xor
into
and
push
cmp
roll
cmpsl
out
xor
dec
jbe
test
pop
jo
fsubrs
loope
movsl
mov
push
out
mov
loopne
addl
add
inc
cwtl
scas
js
popa
mov
or
aam
repz
jmp
loop
movsb
pop
iret
jne
adc
into
aas
xlat
cltd
lods
jnp
outsl
cmpsl
add
jb
xchg
sub
adc
lret
add
test
pop
sub
stc
xor
cmpb
loop
jno
subb
leave
push
mov
inc
or
int
cmp
mov
push
pop
fimull
cmp
aas
or
cmp
clc
push
mov
lahf
nop
or
push
mov
sarl
mov
push
or
dec
pop
sbb
mov
sub
call
add
pop
pop
or
pushf
pop
sarl
inc
sar
sub
jg
out
pcmpeqd
adc
es
aad
jo
popa
hlt
jmp
adc
jl
das
filds
rolb
xchg
sbb
pop
hlt
inc
and
rorl
test
stos
stos
mov
push
mov
inc
aaa
sub
fldcw
cmp
cmpsl
bound
sub
push
imul
ret
or
inc
jmp
mov
xor
in
mov
mov
push
and
sub
mov
sbb
repnz
mov
mov
xlat
sub
in
les
scas
test
sbb
cmpb
push
xchg
xchg
mov
lahf
or
sub
cmp
insl
out
outsl
and
add
adc
mov
pop
xchg
cmpsb
xchg
cmc
cs
sub
xchg
bnd
mov
cmp
pop
xor
scas
inc
pushf
inc
sbb
xchg
es
mov
pop
jne
aaa
dec
lds
arpl
stc
scas
lods
inc
les
popf
cmc
lods
fistl
ret
fidivs
sub
sbb
and
mov
push
add
dec
xchg
xchg
xchg
sbb
rep
add
in
not
mov
cmp
je
pop
push
push
mov
mov
or
lret
sbb
das
call
insl
push
pop
mov
adc
and
test
cmp
mov
test
daa
add
lds
scas
scas
inc
mov
nop
xor
pop
jmp
gs
dec
fs
test
pslld
cmp
leave
mov
xchg
dec
cmp
jb
fmul
xchg
sub
test
mov
pop
lret
mov
dec
jmp
adc
mov
shlb
adc
insl
mov
xchg
add
jl
mov
je
subl
push
idivl
or
jge
dec
loop
xor
adc
sub
dec
inc
pop
sbb
jl
dec
mov
repnz
rclb
in
push
ss
out
xchg
mov
pop
dec
imul
or
push
lret
inc
pop
imul
push
imul
sub
hlt
push
push
lods
add
push
mov
std
cmc
out
mov
fldenv
test
das
xchg
ficompl
icebp
mov
repz
in
dec
mov
fsubrl
adc
mulb
mov
icebp
push
jl
std
nop
lock
divl
arpl
mov
push
mov
pop
push
push
arpl
xchg
add
lds
out
loope
outsl
cwtl
push
int3
icebp
cmp
outsl
push
fwait
into
inc
loope
lret
inc
inc
add
xchg
add
pop
aaa
rolb
pop
int
xor
aas
nop
pop
xchg
push
stos
add
inc
xchg
add
adc
gs
inc
arpl
fnstsw
shrb
fld
jg
pop
jge
mov
mov
mov
pop
mov
xchg
sbb
adc
js
push
js
sbb
jnp
popf
push
nop
push
addr16
pop
and
outsl
mov
xchg
outsb
xchg
pop
mov
popa
xchg
std
cmp
mov
xor
scas
repz
mov
push
mov
pop
adc
mov
aam
add
stos
inc
pop
push
dec
adc
shll
jecxz
andb
sub
and
int3
lret
call
inc
adcb
mov
aas
pushf
pop
jne
xor
pop
adc
sbb
test
pusha
outsl
xchg
inc
pop
lea
mov
dec
xor
loopne
add
dec
mov
sub
inc
cmp
adc
inc
xor
mov
out
and
inc
incb
loope
xor
pop
push
fld
cltd
xor
add
xor
sub
fnsave
nop
movsb
sbb
sbb
sub
lcall
jp
cmp
mov
sahf
xchg
insl
aad
in
adc
add
mov
adc
lea
inc
popa
popa
and
add
aam
pop
aaa
jb
cmp
inc
cmp
cmp
mov
loopne
aam
jae
loope
outsb
adc
fs
scas
ficoml
cmp
stos
ret
and
sub
das
sub
ffreep
pushf
subl
out
insb
or
add
inc
push
gs
out
jecxz
int
inc
add
dec
in
push
jbe
scas
add
pop
dec
rcll
adc
mov
sub
scas
or
scas
push
jmp
xchg
add
das
andnps
shrl
notl
jae
ret
pop
fmuls
and
test
loope
lea
mov
add
pop
push
test
push
sbb
add
sbb
lahf
xor
add
push
int
push
jecxz
fbld
sub
test
outsb
iret
addr16
jp
dec
scas
in
rorb
pushw
jecxz
sub
or
inc
in
xchg
shlb
and
testl
es
sbb
fbld
sahf
push
lock
xchg
pop
std
aas
gs
in
test
mov
enter
sbb
jo
mov
xor
int3
aad
les
cmp
sbb
test
cwtl
js
loopne
test
jl
mov
sbb
sub
push
dec
push
cmp
dec
or
add
icebp
cs
cmp
into
adc
sub
cmp
stos
mov
loop
out
aam
sti
inc
inc
xchg
dec
mov
pop
ret
inc
icebp
cmpb
inc
cmp
push
fcmovu
push
sbb
scas
pop
mov
jnp
push
jbe,pn
or
mov
ret
in
push
mov
pop
sub
insb
push
cli
cmpsb
jg
insb
pop
out
cmp
iret
xchg
mov
lidtl
sub
push
add
out
int
jne
imul
inc
fildll
fistl
pop
xor
push
lret
out
ficoml
lret
pop
cld
and
inc
jo
movsb
jge
add
scas
cmp
hlt
sub
add
sub
pop
out
fisubl
jne
into
arpl
loop
mov
dec
jns
popa
lock
sti
xchg
jle
enter
movzwl
xchg
dec
cs
add
leave
mov
aas
inc
jae
adc
je
sbb
fisttpl
jb,pt
shr
jbe
loope
mov
in
inc
dec
push
mov
xchg
jb
fstps
aas
mov
push
and
arpl
dec
jae
inc
test
mov
xor
or
cld
pop
mov
dec
xlat
adc
sub
push
pop
mov
idivl
or
or
jbe
push
mov
outsb
pop
push
and
icebp
inc
and
insb
push
xchg
fwait
loope
xchg
stos
xor
dec
mov
js
xchg
movsb
cmp
jge
push
cmpsb
mov
pop
mov
sub
enter
je
jne
shr
inc
je
mov
pop
cmp
lcall
mov
jg
jo
pop
sub
enter
adc
and
dec
inc
data16
sahf
sbb
das
shrb
aas
push
fbld
enter
add
daa
ljmp
fs
jg
aam
stc
fwait
jle
imul
add
lahf
mov
fidivs
sub
xchg
dec
push
sbb
push
inc
sbb
cs
cmpsl
int
dec
sub
lea
mov
push
clc
pop
adcl
mov
fisttps
ds
divl
adc
es
cltd
xchg
cmp
test
mov
pop
ss
test
jb
xor
not
sahf
movsl
shlb
rclb
jns
or
je
cld
in
dec
push
xchg
repz
mov
int3
xchg
pop
dec
rcl
sub
sub
mov
sbb
mov
pop
iret
jne
dec
push
jle
push
lods
dec
cltd
or
jo
in
jle
cmpsl
xorl
cmp
push
jmp
sbb
aas
jge
mov
xlat
jge
push
in
jge
ret
add
jb
push
cmp
cmpsb
add
xchg
das
and
mov
push
or
data16
pusha
xorb
or
cmpsb
lret
add
add
in
xchg
insb
out
int3
test
ja
push
add
addr16
lret
stos
xchg
pop
mov
push
dec
ret
push
mov
xor
arpl
pushf
or
cmp
lret
xchg
xchg
incl
stc
fbstp
loope
bound
jae
mov
pop
hlt
rcrl
iret
jnp
or
shl
add
outsl
add
push
clc
mov
jnp
shlb
mov
push
or
push
std
int3
pop
dec
loope
aas
insl
pop
ret
les
sbbb
loopne
mov
fidivrs
arpl
cmpsl
cmp
movsl
mov
ja
or
into
xchg
mov
and
daa
cmp
cmp
push
cmp
mov
pop
repnz
in
sub
bswap
push
idivb
adc
test
imul
call
jbe
jp
mov
rclb
push
into
pop
push
mov
outsb
sbb
ret
push
sub
or
cs
pop
sub
and
push
adc
fistps
adc
outsb
mov
mov
xchg
inc
jl
lea
mov
outsb
addb
in
push
dec
jmp
cltd
arpl
inc
add
enter
inc
stos
popa
pop
inc
cmp
std
adc
hlt
pop
mov
jns
xlat
fs
mov
mov
enter
lret
popf
out
jae
xor
jae
mov
push
xor
xchg
and
mov
clc
mov
ret
and
xor
int
insl
out
fdivrl
jecxz
add
sub
leave
je
xor
stos
inc
scas
xlat
cmpl
mov
les
jle
mov
mov
jg
sahf
lods
adc
push
lods
mov
enterw
and
push
shlb
or
adc
loope
mov
and
sbb
xchg
cmp
scas
adc
push
ljmp
ficoms
and
js
rcrl
fcompp
and
jle
into
jbe
push
mov
cmp
lock
jge
push
jns
mov
xlat
jno
adc
arpl
push
cmp
ficomps
aas
ljmp
xchg
add
adc
add
mov
insl
inc
xchg
cmpsb
xchg
mov
xor
cmp
lock
or
sbb
add
pop
or
jb
inc
pop
mov
testb
test
or
lcall
push
lods
pop
jl
and
gs
lret
mov
inc
pusha
inc
fsubrl
ret
sbb
push
movlhps
sub
shr
xor
dec
mov
sti
ljmp
inc
insb
inc
stos
ss
ret
data16
push
mov
pusha
arpl
arpl
adc
je
scas
cmp
xor
sub
xor
rclb
loopne
cltd
push
daa
push
fbld
inc
add
fsubl
rol
push
jb
sub
out
in
or
mov
cmp
sahf
cmp
dec
adc
mov
inc
loopne
mov
pop
test
sahf
lret
mov
sub
nop
cmc
int3
pop
and
fdiv
xchg
adc
or
sahf
jmp
mov
xchg
stos
repnz
mov
mov
shrb
or
xchg
imul
mov
jbe
clc
mov
in
out
cmpsb
pop
outsb
cmp
mov
icebp
loope
mov
ret
or
faddl
lcall
repz
mov
ds
fidivl
int
in
mov
cli
rclb
jmp
and
bound
inc
stc
xor
int
xchg
adc
sub
sarb
add
adc
inc
or
mov
in
std
push
cs
mov
add
call
and
hlt
lock
jmp
icebp
cmp
outsl
pop
dec
and
or
push
dec
repnz
call
aad
inc
or
and
pop
pop
es
sbb
in
xor
scas
cltd
bound
xchg
fidivrl
inc
jo
fs
bnd
adc
pop
loop
in
pushl
sbb
mov
adc
lret
xor
mov
inc
scas
pusha
mov
adc
addr16
xor
adc
lea
sbbl
ret
hlt
jae
out
mov
test
test
in
lods
xor
jl
sub
xor
outsb
fmul
in
push
test
shll
lea
pop
leave
aad
loop
xchg
sub
or
clc
rolb
pop
in
sub
cli
xor
add
bound
imul
pop
sbb
and
and
inc
xchg
jg
sbb
mov
dec
mov
adcb
jnp
push
in
push
mov
lock
imul
sub
cwtl
movsl
es
jecxz
pop
pop
sarb
in
movsw
lret
ret
stc
pop
jne
jl
pushf
mov
dec
movsb
jno
gs
sub
sbb
aaa
in
out
dec
fsubrp
inc
mov
jecxz
push
inc
pop
push
arpl
inc
inc
iret
push
scas
adc
pop
stc
data16
adc
inc
xor
jl
xor
jp
int3
and
jl
xchg
add
aaa
lock
out
aad
test
loopne
shlb
adc
repz
std
enter
or
dec
cmpl
mov
dec
mull
jmp
sub
xor
xchg
and
pop
sub
rorb
dec
inc
test
inc
pusha
into
push
mov
fwait
nop
es
hlt
jb
mov
mov
mov
inc
insb
rclb
repnz
flds
sahf
aad
dec
adc
nop
sbb
or
fdivl
and
jno
repz
lret
mov
dec
jbe
inc
hlt
xor
and
fcoms
push
test
popf
xchg
mov
mov
xchg
stos
add
push
mov
imul
adc
adc
sbb
pop
jns
mov
add
in
mov
fcomi
cmc
adc
sbb
fsubl
mov
pop
or
stos
enter
ret
jmp
movsb
pop
pop
cmpsb
xchg
or
shrl
clc
shr
jb
mov
sbb
pop
je
ds
dec
arpl
inc
pop
xor
pop
mov
and
or
rol
es
lea
jp
or
mov
pop
adc
mov
roll
or
sub
xchg
stc
ret
and
aas
cmp
dec
in
sahf
push
sti
cwtl
les
cmp
mov
adc
outsl
mov
lret
pop
pop
push
fists
mov
jns
add
jp
push
cmpsl
jp
fcomps
push
repz
mov
shll
aas
cld
hlt
std
jno
vpackssdw
fs
push
mov
jb
cmp
mov
or
dec
enter
nop
mov
sbb
jnp
andl
fisttpll
pop
adc
aaa
subb
sbb
inc
sbb
push
test
push
add
loopne
mov
xlat
sbb
test
xor
mov
xlat
ficomps
sub
dec
pop
cmp
dec
and
jnp
ficomps
cli
aad
and
test
fimull
repz
ret
add
sub
mov
cmp
dec
and
sbb
les
ffree
xlat
xchg
push
jle
jl
lahf
dec
xor
pop
lahf
pop
push
lcall
push
dec
xchg
xchg
add
xor
push
jg
aam
xor
sub
repnz
sub
jno
jae
loopne
ret
sarb
or
cli
xor
and
fildl
xchg
add
into
add
mov
dec
or
mov
or
sub
xchg
xchg
fistps
xor
jg
je
aad
cmp
add
xchg
insl
push
adc
jp
and
inc
arpl
lods
cmp
or
out
mov
ss
stc
sub
mov
and
push
xchg
leave
add
in
inc
mov
lds
push
sarb
xor
adc
push
pop
fdivs
ret
sbb
add
lock
mov
xor
hlt
jb
mov
data16
bound
adc
test
cmp
push
stos
in
add
hlt
pop
ret
push
ret
out
jnp
cmpsb
pop
call
jno
mulb
xlat
jns
add
jmp
sub
sbb
jb
testl
dec
das
call
aas
jl
lret
mov
into
xchg
mov
dec
data16
dec
xor
mov
cmpl
cmp
cmpsb
adc
stos
xchg
jg
pusha
sub
movsb
push
iret
sbbb
or
xlat
mov
mov
cmc
pop
cmp
cwtl
dec
push
pop
cmp
repnz
sub
inc
int3
xchg
or
sbb
dec
xor
push
test
mov
push
popa
test
sbb
ret
and
pop
and
or
and
push
int
out
inc
int3
loope
xor
test
lahf
mov
aas
xchg
and
subb
mov
sbb
std
loope
or
and
jns
adc
mov
int
test
mov
xchg
mov
or
or
dec
push
adc
lret
mov
jg
mov
mov
lret
in
imul
sbb
mov
adc
add
add
jno
jne
addl
and
fdivrs
sub
push
pop
mov
or
out
xor
mov
pop
test
shll
cld
cld
adc
mov
icebp
xor
push
iret
sub
inc
popf
jbe
std
hlt
push
repnz
das
lcall
inc
inc
sbb
daa
or
pop
dec
inc
addb
dec
stos
lds
xlat
push
mov
push
mov
and
mov
cs
dec
outsl
sub
ds
arpl
fstpl
push
push
js
arpl
loope
inc
fcomps
jne
movsb
add
dec
cwtl
jp
popf
cmp
test
imul
test
cwtl
iret
mov
iret
arpl
mov
shrl
inc
sub
hlt
xchg
mov
cmp
xor
cmp
lods
inc
lods
adc
ljmp
rorl
cmp
add
enter
out
mov
loopne
shll
mov
subb
mov
insb
mov
in
adc
sub
jle
sbbb
lret
fnsave
es
cwtl
fcmovb
ret
in
nop
pop
loop
adc
cmp
popf
loope
sti
es
cmpsb
das
xchg
lret
dec
adc
sub
adc
fistps
divb
inc
or
pop
xor
dec
jb
ja
sbb
xlat
in
inc
cld
test
mov
movsl
and
mov
inc
hlt
es
cld
push
push
push
mov
mov
push
dec
enter
jne
sub
iret
in
pop
mulb
jb
inc
mov
movsb
and
into
pushf
or
std
sti
push
scas
leave
xor
xchg
out
pop
sbb
xchg
push
into
mov
ja
mov
lcall
push
adc
in
in
mov
and
cmpsl
outsb
js
and
mov
xchg
jecxz
cmp
int3
mov
repz
mov
cs
pop
stos
jns
mull
scas
scas
or
std
and
cmp
xchg
movsl
cmp
test
mov
in
push
jle
xor
adc
xchg
pop
xchg
ret
mov
push
daa
sub
cmpl
outsl
jnp
test
rolb
aam
aaa
out
insl
dec
jno,pt
or
shl
pop
sbb
push
test
pop
out
jo
lds
mov
and
push
adc
xchg
loope
xor
pop
std
int3
and
jecxz
push
imul
or
inc
adc
cmp
cld
mov
adc
xor
jmp
repnz
mov
pop
mov
sub
sub
pop
push
js
cmp
cli
lahf
inc
cwtl
mov
mov
fxch
jg
ret
out
test
ds
and
addr16
cwtl
and
outsb
inc
lret
sub
mov
adc
mov
ret
mov
adc
popf
hlt
inc
into
xor
lods
sub
pop
mull
push
in
inc
into
inc
pop
xchg
scas
int
lahf
sarb
rcrl
and
xchg
mov
test
pusha
jecxz
jae
fsubs
xchg
xchg
xchg
movsb
movsb
cmpsl
cs
mov
dec
or
lock
gs
orb
lcall
pop
rclb
ss
or
add
and
cmpsl
sub
cmpsl
push
mov
insb
imul
mov
lahf
dec
inc
cwtl
fwait
or
or
mov
xchg
hlt
mov
mov
ss
test
sbb
cli
pop
adc
push
ror
inc
dec
cmp
ret
cmpb
push
xchg
shll
pop
int
test
dec
add
js
test
dec
add
mov
push
ljmp
and
cmp
icebp
jnp
mov
bound
dec
xor
sub
rcrl
mov
or
jl
psubd
mov
scas
test
cmp
test
inc
cmp
int
sub
lret
in
mov
adc
jo
or
jl
xchg
je
push
hlt
sbb
xor
out
jge
mov
adc
aaa
push
sub
test
push
mov
fsub
or
inc
pop
jbe
loope
sub
in
iret
dec
out
and
cmp
cltd
bound
pop
into
jno
jmp
mov
pop
jae
cmpsl
iret
xor
xor
leave
inc
scas
leave
std
cmp
inc
push
sub
jbe
mov
aam
mov
push
pop
mov
push
jge
dec
pop
mov
pop
loope
mov
push
adc
fwait
xor
pop
xchg
sbb
pop
ficompl
scas
xor
popf
test
repz
and
bound
out
adc
xchg
mov
jno
push
inc
push
gs
in
lds
cmpsl
imul
mov
adc
cmp
mov
xchg
xor
mov
loope
int3
mov
push
mov
xor
mov
sbb
push
xchg
jmp
pop
dec
andl
mov
add
inc
push
mov
cmp
lods
adc
jp
scas
inc
lods
test
pushf
pushf
inc
shr
arpl
push
int
pmaxub
and
xor
pusha
jne
mov
adc
push
mov
fs
jle
shlb
cs
ret
iret
aaa
add
add
jbe
ret
in
ret
sub
daa
insb
shrl
jnp
fisttpll
adc
rcr
andb
adc
lret
bnd
mov
fsubrl
mov
push
lock
nop
es
addr16
push
in
or
xor
mov
in
movsl
aad
and
sub
push
pop
lcall
adc
clc
xlat
jge
hlt
sbb
cwtl
adc
jno
movsb
xchg
jns
lods
ljmp
lock
rclb
push
fldcw
push
repnz
jge
sub
xor
fistpll
mov
movsl
fbld
test
test
lahf
gs
dec
or
scas
or
aaa
popl
and
add
nop
lea
sbb
subb
mov
inc
jecxz
testl
mov
jg
cmp
pop
int3
je
or
addr16
adc
mov
scas
enter
mov
pop
jecxz
or
mov
dec
dec
jmp
movsb
sub
fbstp
jl
sub
dec
popf
in
jg
and
insl
inc
pop
inc
mov
js
jp
jae
shlb
adc
mov
xchg
insb
pop
mov
inc
lods
test
shll
lahf
cmp
jns
jmp
add
mov
mov
fildll
pusha
add
cmpsb
out
loopne
push
into
jmp
cmc
aas
sbb
and
mov
outsb
loopne
sub
mov
dec
or
pop
sub
mov
xor
pop
dec
lret
fisttps
sbbb
jns
lahf
dec
or
cmp
stos
lds
jge
add
pop
cmp
push
mov
imul
bound
insl
pushf
xchg
sub
es
subb
data16
repz
clc
test
lret
mov
dec
push
das
jmp
enter
and
inc
push
add
jmp
add
or
jle
jnp
pop
inc
lcall
lods
jle
push
stos
ljmp
fldenv
adc
outsb
and
out
les
fsubs
rol
sti
fcmovnb
xor
das
add
js
dec
jg
add
scas
push
data16
mov
cwtl
pusha
mov
dec
mov
lods
push
sahf
psraw
mov
xor
cld
sar
pop
sahf
fists
mov
adc
leave
dec
mov
sbb
adc
pop
mov
popf
dec
add
adc
fisubs
push
repz
push
sbbl
into
push
jno
fwait
mov
ret
ss
in
fdivrl
dec
dec
sbb
jnp
xor
jle
loope
les
push
js
iret
mov
xor
jbe
adc
pop
test
rolb
stc
xor
inc
test
lock
push
jne
xorb
mov
adc
push
ffree
out
xor
sub
jl
dec
icebp
in
in
gs
push
lods
xchg
ja
jecxz
gs
jno
pop
pop
xlat
dec
mov
pop
or
aaa
enter
adc
xchg
dec
aas
outsl
push
fwait
bound
inc
jl
and
cli
sub
sub
cli
and
sbbb
push
or
cmpsb
pusha
cmp
jle
pop
fmull
xchg
push
out
mov
fidivs
inc
movsl
in
arpl
pop
adc
loope
adc
jmp
mov
daa
ret
test
lea
movsl
stos
xchg
xchg
notb
mov
sub
sbb
test
mov
pop
mov
mov
hlt
aaa
jb
cwtl
mov
lods
mov
push
mov
mul
fcmovne
xorb
xor
mov
lcall
adc
movb
mov
adc
inc
fmuls
imul
pushf
jge
adc
mov
xchg
jns
mov
fstpt
or
xchg
rorb
mov
mov
jg
push
mov
xchg
mov
shlb
pop
dec
into
arpl
fiadds
xlat
ja
cmc
push
hlt
orl
dec
add
mov
push
loopw
mov
roll
inc
mov
xchg
sbb
inc
mov
mov
cli
ljmp
out
push
jmp
ffreep
jo
mov
inc
je
dec
mov
shrl
div
popf
mov
jne
jmp
in
hlt
push
rorl
push
jle
adc
es
test
xor
in
and
pop
loop
insb
dec
mov
cmp
into
sbbb
ja
lds
out
movsb
adc
pop
dec
cmp
push
sub
nop
test
mov
cwtl
es
xchg
add
jl
lret
mov
rclb
push
push
jge
lea
inc
xor
pop
loope
mov
or
addr16
mov
xchg
andb
jo
insb
sub
sbb
jmp
pop
or
mov
mov
push
mov
and
jmp
dec
imul
pusha
adc
es
pop
add
das
dec
jo
dec
jns
push
sbb
xorl
call
out
push
fidivrl
sbb
jo
nop
repnz
hlt
push
repnz
sbb
xchg
and
lret
add
or
xchg
out
push
inc
stc
daa
filds
cwtl
dec
std
stc
fcoml
and
push
inc
pop
sbb
sub
mov
gs
dec
xchg
mov
jmp
rclb
mov
xchg
mov
push
fchs
jb
test
test
cs
inc
mov
dec
xchg
outsb
in
cltd
icebp
pop
outsb
and
jle
sbb
add
sbb
test
sbb
repnz
mov
data16
sub
std
fs
lea
pop
into
sti
xor
into
mov
lods
jl,pt
in
and
cmp
sbb
xor
aam
mov
ret
je
je
xchg
gs
pop
mov
icebp
cwtl
mov
addr16
fdivs
mov
popf
cmp
repz
xlat
pop
jnp
inc
int3
lahf
out
cltd
and
pushf
sarl
imul
inc
stos
cmpsb
mov
insl
lods
fwait
bound
dec
jl
clc
es
adc
lret
jl
sbb
jle
iret
in
mov
xchg
push
jmp
and
mov
scas
in
orb
add
jne
adcl
mov
inc
sahf
sub
push
inc
and
inc
mov
cld
xchg
test
test
test
dec
and
arpl
push
fists
in
andl
out
out
sbb
jnp
mov
out
js
and
icebp
mov
cmp
pop
js
fildl
push
gs
mov
lock
add
xchg
repnz
lahf
in
mov
mov
lret
push
sub
cmp
jne
inc
fdivrs
jne
push
movb
lahf
jle
iret
xor
scas
out
mov
add
pop
jl
sbb
pop
lods
movsb
xor
xchg
ret
adc
dec
stos
adc
ds
mov
cwtl
ds
or
jge
arpl
int
push
push
ret
orb
gs
inc
cmpb
xchg
lret
pop
lock
and
add
mov
and
adc
scas
rcll
push
cmp
mov
dec
jmp
cmp
mov
loop
lret
cs
xor
subl
mov
mov
scas
or
repz
xchg
pop
lret
sbb
adc
cmp
scas
mov
jno
addr16
adc
inc
cmpsb
cwtl
mov
in
outsb
rcrb
loope
std
or
rcll
popf
sbb
insl
aad
or
cmp
test
lret
movsl
rcrb
push
xor
into
rsm
fprem
and
dec
mov
shlb
arpl
mov
fstpl
out
imul
pop
shll
hlt
sysexit
mov
xor
cvtps2pd
mov
jns
adc
sbb
mov
nop
fmuls
hlt
dec
int3
call
test
js
inc
add
sti
aas
xor
push
fbstp
pop
fwait
popf
pop
cmp
stos
cltd
push
sbb
push
xor
xchg
mov
adc
idivb
pop
mov
cltd
jge
lcall
mov
push
mov
roll
push
inc
xchg
mov
fwait
push
dec
jno
arpl
fldt
or
scas
xor
dec
mov
mov
inc
mov
int3
add
roll
arpl
lds
xorl
aad
pop
fwait
mov
sbb
into
or
test
cmp
pop
cs
adc
jbe
push
push
es
xchg
sti
jns
mov
addr16
inc
xor
sub
out
arpl
cmp
jl
andl
lds
rclb
push
pop
outsb
dec
push
push
clc
cmp
mov
test
dec
mov
shlb
bound
mov
jne
sahf
lea
sbbb
cwtl
mov
sub
shrb
dec
adcl
mov
addr16
dec
add
cmp
xor
shlb
out
add
or
fildll
sbb
pop
sub
stc
fwait
push
lret
xchg
and
push
ljmp
ss
pushw
mov
mov
into
push
leave
lock
imul
xchg
jmp
insb
add
nop
mov
mull
jmp
xor
cmp
push
xor
cvtps2pi
in
xor
mov
lock
sbb
test
add
ret
inc
je
sub
aaa
and
xchg
and
stc
and
fwait
daa
mov
add
pop
in
ljmp
inc
push
int
stos
add
adc
jb
jecxz
loopne
mov
push
in
hlt
fs
mov
mov
testl
xchg
jmp
dec
cmp
imul
jl
xlat
je
fidivrl
int
jno
pop
lock
dec
aad
loopne
data16
inc
fcomps
or
or
sar
aam
mov
into
out
jg
neg
stos
and
xor
into
je
out
add
xchg
or
sbb
daa
adc
mov
fs
fdivrs
or
cld
dec
addb
mov
in
inc
fsub
mov
dec
mov
push
adc
pop
mov
jle
jae
push
mov
push
mov
call
mull
jo
mov
ss
push
xor
pop
popa
or
cmpsl
push
xchg
movb
push
adc
adc
cwtl
or
fwait
call
test
pusha
out
push
xor
es
js
and
mov
and
push
div
mov
inc
in
inc
sub
repz
lret
in
icebp
in
sbb
pop
es
xor
aad
sbbl
jbe
lea
push
push
dec
xchg
inc
dec
dec
rol
out
fstpt
andl
stc
mov
push
das
add
mov
sub
out
fbstp
add
and
out
adc
insb
jo
imul
orb
out
jl
pusha
js
cwtl
and
out
shl
mov
xlat
pop
jecxz
or
xor
addb
std
pusha
shl
test
adc
int
or
and
rclb
ljmp
push
std
and
cmp
mov
cwtl
aas
push
sub
xchg
mov
and
es
pop
sub
sbbb
iret
fisttpl
lret
cmc
das
subb
jecxz
pop
dec
js
mov
and
inc
push
dec
push
imul
out
inc
sbb
ljmp
mov
sbb
jno
or
xchg
push
pop
pop
xor
dec
cmp
and
pop
cltd
outsb
mov
pop
and
push
or
popa
jo
push
pop
jg
add
adc
adc
adc
cmpsl
mov
sbb
arpl
std
sbb
sub
cmpsl
push
add
lea
fldenv
jl
pop
jne
push
hlt
push
gs
mov
addr16
dec
adc
stc
sub
addr16
fninit
insl
sub
push
mov
addr16
fsubl
sub
faddl
test
sub
pop
test
pop
jno
add
push
pop
xchg
or
in
and
icebp
mov
xchg
inc
iret
xchg
jnp
xor
push
dec
scas
mulb
stc
mov
rcrl
daa
cli
xor
addr16
and
stc
in
mov
mov
and
lret
and
aaa
jns
cli
inc
jb
pop
xchg
cmpb
fildll
xchg
daa
test
iret
jp
pop
out
sbbb
lret
and
repnz
test
lds
shrb
or
shll
ljmp
lcall
sbb
dec
out
lret
cltd
xchg
cmpsl
out
mov
jg
fmul
cmp
icebp
cmp
insl
add
lods
les
ss
pop
push
jecxz
mov
mov
mov
and
bound
int3
imul
outsl
mov
int3
cwtl
xchg
clc
jns
adc
pop
cmp
call
push
and
jge
int
jae
into
jmp
jp
daa
xchg
insl
je
pop
or
pop
mov
mov
mov
scas
mov
pushl
push
ss
xchg
int3
sbb
int
test
jle
movsb
sbb
adc
es
in
add
inc
xchg
arpl
jmp
pop
sbb
jae
shll
idivb
mov
jo
add
mov
stos
fldcw
ja
mov
arpl
popf
jns
daa
inc
andb
dec
iret
je
or
sbb
fcoms
out
mov
emms
test
loope
xchg
lods
cli
or
xchg
stos
sahf
pop
or
jecxz
rolb
add
pop
xchg
int
out
scas
cs
add
mov
mov
in
inc
ficoml
push
xchg
xlat
leave
and
ss
enter
mov
cmp
xchg
hlt
sbb
xchg
lods
and
jmp
fdivrl
gs
and
jno
fistpl
imul
mov
movsl
data16
add
das
sub
sub
ret
mov
pop
or
mov
out
sub
adc
adc
adc
push
nop
enter
mov
xchg
cltd
cmp
mov
imul
cli
loopne
stc
lods
dec
arpl
sti
dec
or
ret
sbb
push
cmpsl
pusha
sbb
ja
cmp
lods
inc
iret
xchg
xchg
pop
mov
xchg
cld
mov
dec
and
adc
mul
clc
xor
mov
sbb
push
push
inc
ds
adc
sbb
imul
xchg
inc
leave
stos
sub
adc
sbb
ret
jmp
pop
popa
mov
movsb
pop
lret
mov
out
lds
dec
jnp
pop
aam
dec
mov
cmp
ret
inc
jo
inc
mov
outsl
sub
das
ret
loop
and
imul
xchg
in
loope
insl
pop
adc
mov
or
out
ja
push
sub
cld
mov
push
cmp
out
lock
push
adc
sub
mov
cmc
sub
xchg
sbb
rcrb
pop
into
dec
rcrb
add
lds
shlb
pop
xchg
lcall
lahf
in
sub
push
or
dec
push
pusha
mov
mov
lahf
pop
jo
mov
inc
and
lods
add
fdivl
pop
insb
jnp
or
and
repnz
out
sub
test
push
aam
xor
shl
lcall
xor
adc
pop
inc
or
and
mov
fildl
testb
inc
xchg
je
mov
cmpsl
iret
pop
push
or
jno
pop
xchg
scas
xchg
shr
or
or
loope
pop
and
aas
loope
stc
push
xchg
dec
xchg
mov
cli
pop
add
add
cwtl
rcrl
lods
lods
mov
out
add
xor
xchg
push
je
lock
pushf
stos
lods
int3
cwtl
adc
push
xchg
pop
and
dec
adc
adc
cmc
or
in
ret
ss
pop
sub
dec
sbb
sahf
and
ljmp
jbe
dec
rcrb
std
sub
jb
dec
mov
pushf
dec
pop
dec
in
jnp
shlb
scas
fdivs
add
adc
cltd
sbb
shl
flds
cwtl
inc
jecxz
xchg
inc
mov
int3
pop
cmp
and
or
or
mov
jmp
pop
and
push
sub
jne
popa
pop
pop
sub
jg
leave
mov
sbb
and
cli
cmp
adc
test
dec
mov
and
xchg
mov
fnstsw
fdivr
mov
dec
jne
cmpsb
mov
mov
test
sbbl
loope
insl
jne
adc
notb
sub
add
call
mov
xchg
inc
movl
xchg
leave
out
ja
nop
lret
lea
push
mov
sub
xor
mov
mov
addr16
jg
icebp
mov
out
jno
lcall
adc
cmc
xchg
subl
adc
lahf
dec
push
int3
out
cltd
cli
adc
xor
loope
cmpsl
test
repz
dec
dec
popa
daa
pop
jns
mov
xchg
out
pusha
inc
cmpsb
jmp
insb
stos
jle
addr16
jle
xor
push
stos
xchg
pop
scas
lea
mov
sub
xor
es
xchg
pop
xor
test
jl
mov
addb
push
sub
push
andl
in
xchg
fstpt
roll
enter
mov
mov
inc
rolb
and
mov
pop
inc
fwait
repnz
mov
stc
mov
mov
add
call
cmp
fucom
roll
or
cmpl
call
mov
mov
jmp
loop
xchg
cmpsl
add
outsb
xor
repnz
iret
fistpll
sahf
cmp
xchg
nop
pop
mov
push
mov
call
fdivs
js
lcall
jbe
push
push
xchg
dec
adc
mov
mov
lock
rorl
imul
push
mov
cli
xor
dec
dec
mov
mov
out
mov
cmpsb
mov
loop
fisttps
mov
faddl
ret
cmp
test
and
pop
sub
pop
mov
mov
shlb
testb
in
shll
inc
adc
loopne
jnp
and
mov
mov
xchg
enter
cmp
sbb
mov
aaa
cmpsl
fwait
lea
add
test
sahf
adc
xlat
out
loope
lds
pop
cmp
mov
mov
mov
dec
xchg
rcrl
popf
xchg
jmp
shrl
nop
pop
cld
test
in
mov
inc
push
cmp
mov
mov
arpl
in
sahf
outsb
test
sarb
clc
push
mov
lret
out
add
dec
cmpsb
rcrb
ja
sti
sbb
mov
les
mov
in
cmp
xchg
and
inc
fs
xor
sahf
cwtl
les
add
enter
add
inc
push
lahf
nop
or
inc
push
repz
dec
mov
bound
test
jmp
cwtl
std
lahf
inc
int
or
mov
ds
orl
outsl
lret
sbb
xlat
mov
or
scas
jns
mov
adc
mov
aam
add
mov
dec
sub
movb
push
cltd
dec
pop
sbb
inc
rclb
jle
fcmovnb
pop
dec
jb
mov
dec
xor
in
sub
call
adc
sub
fdivrl
call
hlt
dec
mov
add
pusha
dec
fnstsw
sub
mov
das
es
sahf
mov
jae
and
add
adc
out
ljmp
jne
cmpb
push
cmp
push
add
out
jmp
sbb
push
jns
mov
or
rolb
lret
and
inc
push
pop
cmc
test
stos
icebp
cwtl
pushf
imul
lea
adc
dec
sbb
sub
in
mov
mov
lock
pop
add
cmp
mov
jnp
das
cmp
ret
cmp
or
jmp
mov
and
push
pop
das
imul
sub
mov
inc
and
mov
dec
dec
insl
xor
cltd
fnstsw
mov
adc
sbb
and
insb
dec
adc
dec
lock
sub
xor
adc
mov
cmpb
mov
sub
shrb
popl
js
aam
ds
push
mulb
dec
sarb
flds
scas
lret
je
mov
and
fdivp
outsb
data16
in
xor
outsb
movsb
jns
int3
test
mov
and
mov
dec
arpl
clc
hlt
sub
fdivl
lock
add
mov
iret
daa
sahf
ljmp
xor
out
sbb
dec
lock
xor
in
gs
dec
and
sub
popa
scas
stos
inc
sub
les
jnp
jp
scas
ss
inc
sarl
and
mov
sub
mov
pop
test
dec
cltd
cmp
aad
ss
int
jle
or
pop
outsl
lret
icebp
outsl
popa
outsb
push
jnp
mov
es
aaa
mov
nop
mov
cmp
xor
mov
imul
ss
add
ljmp
mov
mov
scas
movsl
hlt
adc
sub
in
and
push
test
adc
movsb
enter
ljmp
adc
mov
pop
loope
jle
push
aam
mov
pop
xchg
lcall
cwtl
jecxz
daa
mov
xchg
cmp
sub
pop
pop
adc
out
push
in
aam
bound
packssdw
es
and
cmp
pop
xor
ljmp
and
mov
add
push
dec
cltd
mov
xor
xchg
hlt
mov
subl
push
ljmp
aas
dec
lds
push
test
push
inc
pop
and
pop
jmp
cld
push
sub
es
leave
aam
cmp
fidivs
or
sub
jo
dec
add
nop
sub
push
or
jns
lret
and
test
dec
addl
mov
data16
add
fldenv
sub
mov
jno
xchg
loope
push
js
pop
dec
imulb
mov
cli
xchg
aam
push
imul
xor
cmp
sub
mov
xor
xchg
aas
fwait
mov
add
movsl
push
sub
mov
cmpsl
adc
fldcw
data16
sub
movsl
mov
ss
popa
xchg
xor
into
jno
out
and
inc
hlt
arpl
scas
fs
negb
stos
or
jb
xlat
loopne
lahf
mov
insl
addr16
mull
stc
sti
fldcw
xlat
push
push
fldcw
in
add
pop
bswap
sub
xchg
ljmp
out
cmp
cmp
movsl
jo
subl
fcompl
cmp
xchg
push
rcll
movsl
cs
sahf
pop
push
inc
dec
adc
pop
lods
insl
ret
cmp
hlt
mov
in
lea
sub
call
inc
mov
out
sti
xchg
outsb
pop
add
push
cli
dec
adc
nop
jmp
lock
cwtl
imul
sub
jbe
xchg
adc
lea
mov
stos
gs
loope
jno
mov
in
pusha
ja
lds
lock
push
pop
clc
bound
xor
jo
hlt
addr16
movsb
fnstenv
je
sub
imul
mov
pop
xor
xor
stc
mov
mov
push
push
sahf
cmp
or
jle
sahf
sbbl
shll
sahf
sbb
mov
pusha
dec
mov
daa
or
jg
popa
mov
xchg
dec
pop
push
xchg
insb
pop
flds
jmp
dec
xchg
xchg
std
dec
pop
insl
std
mov
inc
fs
mov
imul
mov
xor
mov
repz
cmp
adc
and
and
sbb
cmp
sbb
insb
outsl
mov
icebp
push
int
lahf
push
lods
mov
rolb
inc
popf
pop
adc
aad
js
pop
mov
sbb
mov
jp
dec
add
cwtl
or
decl
cmc
sti
dec
mov
inc
push
sbb
or
cmp
subb
jmp
inc
sbb
dec
xchg
dec
mov
mov
sbb
pop
mov
cs
hlt
clc
push
sub
dec
ret
inc
ja
repnz
jecxz
cmpsb
hlt
mov
jge
push
outsb
adc
adc
inc
ss
xchg
lret
add
pop
cmp
out
cmc
xchg
dec
inc
inc
insl
test
aas
add
sbb
adc
push
cmp
mov
shrl
xchg
add
imul
pop
leave
data16
rolb
lcall
arpl
out
gs
mov
xchg
adc
or
mov
fwait
and
xchg
push
adcb
out
daa
sbb
fisubrl
pushf
dec
pop
scas
xchg
sti
ds
pop
les
aaa
jne
xchg
lock
xor
nop
xchg
add
loopne
dec
pusha
add
cld
cmp
xor
vfmadd132sd
in
mov
stc
sbb
inc
aaa
adc
test
sti
sub
or
dec
jnp
add
xorl
jle
aas
test
jl
rcll
int
jmp
shll
jmp
cmp
ds
inc
in
dec
push
pusha
jl
push
rorl
into
dec
dec
inc
imul
bound
mov
nop
filds
fwait
lods
out
insb
movlps
fmul
subb
push
jg
push
mov
js
loop
in
adc
lea
pop
xor
sbb
daa
std
js
cmpsl
mov
xchg
mov
in
inc
cmp
rorb
ret
bound
push
cmp
jg
lods
mov
jmp
adc
pop
push
sub
cli
jl
ss
sub
es
cmp
fsubs
jo
mov
mov
dec
lods
cmc
jmp
push
iret
mul
test
jns
iret
mov
push
jmp
and
pop
xlat
and
sbb
lods
pusha
dec
ljmp
cltd
sbb
fildl
mov
ja
into
test
cmp
popf
xchg
or
push
outsb
fwait
scas
in
mov
inc
cltd
mov
rcll
je
fstps
shrl
push
nop
shlb
inc
jl
xchg
push
aas
adc
sub
add
ljmp
in
outsl
mov
je
add
xor
sbb
inc
push
mov
mov
mov
inc
popa
mov
shl
xor
test
scas
xchg
negb
add
cmc
leave
outsl
fmull
lret
movsb
add
scas
add
cltd
hlt
adc
rcr
push
sub
push
jns
sbb
inc
add
out
lods
arpl
mov
jb
je
fdivr
movsb
dec
xor
cmpb
imul
pop
sub
outsb
mov
es
jmp
aas
mov
nop
out
stc
orl
mov
aas
scas
xor
dec
inc
or
ret
fcoms
adc
out
push
sub
loop
lds
or
iret
add
sbb
mov
mov
insl
sub
cmpb
cli
push
xchg
stos
dec
dec
test
stos
hlt
fdivrs
insb
test
fwait
push
mov
jae
pop
adc
sbb
imul
sti
mov
aaa
mov
subl
movsb
jmp
in
xlat
xchg
xor
gs
int3
imul
aad
subb
daa
popa
fmull
mov
insl
mov
and
sub
or
pop
out
rcrl
mov
jo
rcrb
mov
pusha
mov
shrb
push
jge
in
fsubrl
pop
jecxz
dec
sub
je
dec
add
sub
push
inc
pop
ds
outsb
pop
cmp
sti
or
adc
test
push
xchg
lret
mov
inc
or
aaa
gs
push
sbb
xchg
xchg
daa
in
cmove
xor
rcll
xor
dec
push
subb
or
lahf
cmp
insb
jl
jl
xor
cltd
pop
adc
cmp
adc
std
pop
addl
pushl
icebp
int3
sbb
xor
sub
setle
dec
arpl
dec
lgs
mov
sbb
xchg
mov
sbbl
lret
fcompl
scas
in
adc
mov
mov
push
sub
push
popf
mov
push
sub
lods
insb
xchg
daa
add
push
arpl
mov
inc
dec
jns
lods
fstpt
std
add
jno
sbb
or
or
and
sub
repz
mov
or
add
lds
and
add
aas
into
ljmp
insb
movsb
fimull
sub
mov
scas
stos
in
jecxz
lock
ljmp
pushw
add
cltd
pop
dec
out
jg
pusha
mov
jno
icebp
iret
out
ja
mov
xor
xor
cltd
sub
popf
movsb
or
mov
mov
in
outsb
dec
pop
cmpsb
and
and
jnp
scas
inc
jecxz
jns
add
test
lcall
test
imul
jnp
add
and
orb
int
xchg
clc
rolb
lods
hlt
cmp
dec
test
sbb
loop
jae
dec
adc
mov
pop
and
std
andb
add
mov
add
fldl
push
jecxz
xchg
and
movsl
and
not
sbb
fnstcw
repnz
pop
add
xchg
add
or
push
xor
mov
fistpll
pop
daa
dec
or
jecxz
stc
ret
fmul
inc
xchg
mov
add
push
xor
fcomi
jle
repz
in
cmp
into
call
std
in
imul
lock
arpl
xor
mov
xor
popa
test
das
pop
or
repz
jae
test
divb
xor
das
les
adc
jb
sub
insb
pop
arpl
pop
addl
pop
push
jecxz
lret
push
dec
or
popa
add
cli
int
ja
push
mov
xchg
ror
cmp
mov
ss
add
xchg
push
in
incb
out
fistps
adc
outsb
jmp
shlb
aam
add
ds
push
cli
cmpsb
rcr
ret
ret
cmpsl
jp
inc
pop
fucom
into
jae
punpckhdq
push
pusha
ret
subb
popa
jmp
pop
jge
jns
mov
cltd
inc
sub
xor
es
fwait
cmp
inc
adc
xchg
cmp
sbb
mov
xchg
push
pop
es
shl
push
mov
cmp
into
push
or
inc
lcall
fcompl
out
imul
push
in
inc
andb
das
xchg
mov
fnstsw
ja
dec
xor
and
hlt
insb
aad
fimuls
mov
push
and
adc
cs
sub
mov
stc
or
xchg
jge
cmp
inc
cmp
cmpsl
into
repnz
lods
in
pop
pop
jne
adc
es
roll
jne
mov
mov
add
xor
add
and
jp
or
sarl
xchg
push
test
push
jb
rcll
pop
pop
and
dec
sub
sub
xchg
ret
push
xchg
fs
push
das
cmp
data16
fcomi
push
adc
inc
xchg
pop
shl
push
jno
jo
mov
daa
es
cmpsb
xchg
or
out
test
mov
movsl
lret
repz
cltd
dec
cmc
movsb
fistpl
out
in
aad
jmp
loope
mov
adc
fnstsw
jmp
call
sub
and
iret
dec
je
cmpsb
sub
dec
lret
clc
je
cld
ljmp
jnp
test
dec
insb
repz
mov
stos
pop
jge
xor
in
int3
test
sbb
push
rcl
mov
fisubl
cmc
sbb
out
dec
jo
fistpl
out
repz
mov
cli
push
lock
ds
inc
cmpsb
insb
xor
es
push
aas
sub
jle
test
jmp
or
loopne
cmpb
pop
xor
pop
add
pop
addr16
dec
ss
xchg
cmpsl
or
and
add
mov
adc
push
xor
enter
sub
cltd
push
mov
popa
arpl
hlt
jp
outsl
fadds
inc
push
clc
sub
sub
dec
inc
pop
call
lock
push
ja
nop
imul
add
add
icebp
adc
rep
pop
jl
inc
pop
shrl
daa
mov
pushf
iret
xchg
fs
mov
xor
sub
std
sti
stc
jmp
mov
iret
inc
jae
out
sub
fnsetpm(287
loope
test
ret
loopne
cmp
xchg
cmpsl
xchg
pop
pop
sti
jb
push
repnz
cmp
pop
in
int3
mov
mov
cmp
outsl
lea
xchg
test
and
and
jg
sub
or
mov
add
lods
mov
fstpl
movsb
subb
out
xlat
xchg
mov
dec
xor
cmpsb
cwtl
xlat
in
enter
das
pop
or
cltd
or
and
loope
mov
pop
ret
bound
push
sub
cmp
or
pop
or
adc
xchg
rolb
and
loopne
pop
nop
out
add
pop
ss
outsl
ret
mov
ret
lods
sbb
or
clc
aam
fstpt
pop
mov
cmpb
lahf
out
cmp
push
test
and
mov
fstpl
inc
repnz
sbb
mov
xchg
adc
test
ds
pop
lcall
jg
aaa
dec
ret
jo
test
sub
mov
int
out
or
movsb
stc
in
pop
lods
ljmp
shl
add
insl
sub
lods
xor
xor
add
mov
mov
in
mov
cld
popa
call
or
les
negb
push
adc
lret
add
push
test
pop
mov
mov
cs
mov
sbb
dec
cmp
loopne
jl
jp
hlt
lcall
add
ljmp
rcrb
xor
sti
ffree
in
dec
dec
push
mov
mov
imul
xchg
jg
or
mov
or
ja
dec
pop
xchg
js
and
add
fcmove
push
addr16
mov
rcrb
inc
sti
sub
mov
test
jp
push
mov
dec
scas
sbb
cli
mov
jbe
frstor
cmp
lods
push
bound
test
fdiv
mov
addr16
rcrb
jo
sahf
sarl
push
fwait
dec
xor
xchg
insb
xchg
or
std
mov
es
mov
gs
sbb
mov
xchg
arpl
or
push
inc
mov
sbb
cwtl
sbb
xor
jno
daa
inc
in
jg
push
das
inc
or
cmp
pushf
mov
mov
sti
idivb
les
mov
push
aam
clc
andl
dec
movsb
aam
pushl
mov
mov
and
pushf
push
jmp
fbstp
xor
in
int3
insb
pop
mov
sbb
cmp
idivl
inc
push
ja
adc
aam
push
imul
xor
cli
cmp
sbb
push
aad
out
dec
push
mov
cld
mov
mov
inc
xchg
mov
test
es
dec
dec
shrb
lock
dec
or
add
jge
clc
jns
jne
dec
pop
cmp
push
cli
sub
cmp
movsl
inc
data16
pop
pop
ficoml
lret
sbb
mov
pop
pop
push
mov
fsubrl
push
mov
es
das
xor
dec
xchg
mov
dec
push
mov
fisubl
stos
xor
test
mov
jmp
out
mov
addr16
dec
dec
cmp
jmp
xchg
nop
dec
clc
in
sub
adc
add
push
push
push
add
cmp
dec
push
xchg
sub
or
adc
in
jbe
bound
push
js
addl
or
jge
fwait
stos
sub
mov
jecxz
push
xchg
dec
cmp
push
jp
mov
inc
mov
adc
pop
out
pop
jg
imul
pop
cmpsl
sub
lds
lcall
stc
adc
and
fwait
dec
repz
push
call
jl
loop
mov
pop
mov
sub
orl
ja
cmp
cli
xchg
inc
jbe
pushf
cs
push
mov
push
in
popl
out
fnstenv
sbb
dec
inc
sub
jg
xchg
daa
jmp
mov
paddb
movsl
loope
mov
incb
sahf
faddp
rol
je
sbb
xchg
add
rcrb
hlt
adc
out
es
add
xlat
cmp
mov
mov
add
rcll
nop
xor
dec
movsl
cmp
fnstenv
push
clc
pushf
roll
dec
fadd
xor
lahf
ja
add
pop
mov
add
push
lds
cmpsl
loop
stos
xchg
sub
jp
out
enter
out
dec
lock
sbb
or
test
fsubrs
and
jns
sub
in
insb
sub
or
fwait
add
push
and
dec
cmp
fdiv
cmpsl
pushf
mov
xchg
imul
dec
movsb
dec
aad
cwtl
xlat
and
xor
sub
test
dec
adc
in
mov
mov
aad
push
add
jge
jmp
outsb
jb
out
push
fists
dec
jp
inc
rcl
mov
jnp
jae
shll
icebp
mov
push
jns
lahf
pop
lods
ret
adc
cmp
in
or
rcll
movsl
inc
mov
mov
sbb
inc
or
and
add
loop
add
xchg
sbb
and
dec
mov
mov
push
push
into
int3
scas
lret
mov
mov
cmp
lea
les
movsl
sub
movsb
or
sahf
xor
cmp
test
ja
cmp
add
dec
aaa
imul
inc
cmp
push
xor
std
ret
nop
repz
lea
mov
sbb
cld
dec
shrl
jge
and
test
test
es
fdivrs
add
test
cmpps
pop
xor
dec
jl
enter
mov
bound
orl
cmpsl
or
sbb
push
inc
rolb
aad
xlat
jae
test
xchg
ret
cmpl
xor
out
stc
movsl
xor
gs
lret
push
rep
inc
stos
xchg
sbb
mov
in
push
int3
mov
adc
ret
sti
push
or
xor
popf
push
xchg
cmc
sub
xchg
fmuls
inc
rolb
sub
pushl
push
xchg
in
cmp
in
mov
mov
sbb
bound
js
push
rolb
mov
packssdw
pop
in
pop
add
fbld
mov
dec
push
iret
and
xchg
test
jae
lcall
jne
push
addl
popa
das
and
pop
pop
adc
repz
lret
and
inc
mov
iret
inc
loop
xor
inc
adc
enter
imul
add
xor
adc
adc
cltd
pop
pop
mov
mov
or
mov
subl
in
jg
ret
sbb
dec
mov
jns
jmp
and
cmp
dec
mov
shrl
xchg
out
mov
jns
add
pusha
mov
test
cmp
daa
sahf
scas
out
insb
jle
testb
lods
mov
push
int3
mov
scas
jmp
push
xor
inc
loop
push
jb
dec
inc
outsl
gs
inc
inc
lret
insb
pop
orl
cmc
in
sbb
dec
test
insb
pop
xor
aam
cmp
arpl
enter
and
jns
js
bound
dec
mov
xchg
mov
or
cmp
push
jae
in
imul
mov
clc
mov
jge
add
mov
adc
mov
adc
popf
outsl
cs
sub
push
sub
jle
inc
lods
leave
xor
pushf
out
fidivrs
mov
fiaddl
push
fisttpll
push
push
add
idiv
pushf
push
mov
outsl
cmc
jle
int
dec
adc
leave
jb
push
mov
mov
bound
jb
out
int3
in
lcall
fldenv
xor
or
or
das
xor
lods
mov
daa
push
sub
lea
xor
inc
in
mov
bound
sub
popf
mov
mov
pop
cld
outsb
ret
sbb
stc
arpl
fwait
dec
xor
pop
imulb
push
cmpsl
sahf
pop
push
sbb
jns
dec
out
fbld
hlt
mov
clc
jne
lock
cmp
popf
pop
mov
or
daa
mov
pop
cltd
jbe
cmp
lock
push
push
cwtl
mov
aam
faddp
mov
aad
mov
jnp
mov
fs
iret
enter
pop
push
mov
add
in
pop
push
mov
mov
stos
arpl
sub
rcl
stc
mov
insb
mov
js
imul
js
pusha
mov
les
loop
or
lods
call
lods
mov
in
out
loop
inc
repnz
fstl
loopne
pushf
xor
dec
adc
jle
cltd
in
inc
aaa
cli
jge
in
or
mov
inc
or
addl
push
sbb
push
fsubr
xchg
adcb
xchg
pop
shlb
rcl
sbb
inc
aaa
inc
xchg
mov
or
add
shll
addr16
xchg
pop
mov
aad
mov
xor
popa
rcrb
cmp
clc
jecxz
cmp
aad
jp
lahf
filds
mov
fistpll
pop
rol
push
jle
sub
mov
data16
rclb
gs
cltd
fsubl
test
add
mov
cmpl
pop
test
mov
cmp
nop
in
adc
jge
scas
adc
nop
pop
sub
push
push
ret
sbb
or
fsubl
cmp
pop
jne
fdivr
and
bound
push
jle
aad
xlat
enter
imul
mov
sarb
cs
xor
xchg
test
and
fcompl
movsb
dec
or
inc
rolb
insb
inc
jge
xchg
fsqrt
ljmp
ret
add
ret
dec
bound
insb
orb
sbbb
bound
iret
rorb
fbld
dec
xor
pop
lea
jecxz
add
out
in
insl
cmpsl
icebp
push
icebp
mov
lods
add
pop
fwait
lods
push
sbb
adc
fsubs
testb
scas
fdivr
mov
and
push
xchg
xchg
hlt
gs
mov
lds
jno
idivb
mov
xor
pop
in
adc
sbb
push
test
mov
mov
mov
sbb
sub
xor
call
testl
cmp
out
cmp
mov
daa
inc
mov
dec
shrl
dec
mov
pop
pop
dec
rcr
movsb
xchg
popl
push
pop
inc
sub
cmp
push
xchg
push
popa
sbb
sub
xchg
daa
sbb
loop
outsb
jg
jg
dec
out
rclb
je
mov
fs
sub
loope
inc
jge
jp
push
in
popl
aam
aam
dec
mov
add
jmp
xor
cmpsb
leave
rol
or
jp
out
lret
out
outsb
jbe
imul
pop
shl
test
sub
andl
adc
ja
filds
stos
in
mov
push
loop
sbb
cmpsb
add
push
push
out
push
cmpsb
mov
not
inc
and
sub
mov
xor
xchg
jno
inc
jp
dec
adc
sub
ret
xchg
into
cmp
mov
mov
cmp
imul
add
loopne
lahf
fsubrl
aam
inc
dec
xchg
movsl
rcrl
je
out
testb
mov
adcl
fistl
rcll
or
hlt
fidivl
cmp
push
lods
mov
add
movsl
inc
pusha
sbb
test
mov
stos
or
dec
es
xchg
push
pop
mov
fcmovnbe
hlt
mov
fidivs
pop
in
in
aad
inc
and
divb
decb
loop
and
push
jmp
push
cwtl
jl
inc
movsl
popa
jmp
mov
cmp
in
cmpsl
mov
push
stc
pop
add
or
xchg
sbb
sbb
push
and
pop
pop
or
jbe
ret
or
sub
push
mov
sbb
inc
les
and
push
aas
push
shll
insb
cmp
push
lret
lock
shrb
stos
dec
sub
adc
negb
sbb
stos
push
sbb
mov
sub
push
cmpsl
hlt
in
ret
rol
adc
test
out
mov
int
cmpl
cmp
pop
in
add
fldl
and
call
pop
ja
dec
adc
mov
andb
add
lahf
popa
cmp
lea
pavgw
js
sbb
push
mov
xchg
bound
mov
adc
rorb
sti
xchg
popa
xchg
jbe
les
jecxz
dec
push
jg
ja
mov
arpl
cli
jge
data16
push
sbb
push
xor
pop
dec
inc
sarb
sahf
lea
out
cmp
nop
imul
pop
jge
movb
mov
pop
int3
jns
lcall
mov
jle
stos
movsl
arpl
lods
xchg
xchg
push
mov
nop
mov
add
imul
aas
imul
setae
mov
pop
xchg
repz
cmp
mov
xchg
lret
orb
daa
adc
enter
js
insl
ret
and
call
rolb
add
sub
cs
lods
push
movsw
outsb
cmp
insl
stos
imul
insl
mov
mov
cmpl
mov
popa
push
pushf
outsl
add
mov
out
mov
push
lea
stos
fmull
icebp
insb
add
xlat
loope
jb
aaa
lahf
mov
scas
xchg
es
loope
sti
sbb
mov
sub
ss
rcrb
dec
in
or
mov
push
pop
inc
inc
cwtl
mov
fimuls
or
jo
adc
xchg
jo
fldt
sarl
dec
insb
sarb
or
or
inc
and
ficompl
ljmp
lcall
adc
xor
in
dec
bound
jne
push
emms
xor
push
cmp
in
fwait
clc
pop
sbbl
jno
mov
and
adcl
lea
js
adc
insb
in
call
pop
cmovg
out
leavew
jl
test
sub
sbb
mov
cmc
push
push
lcall
subl
mov
add
addr16
js
test
cmp
rcrb
push
push
loopne
mov
add
add
ljmp
jge
xchg
push
pusha
fsubrl
gs
sahf
ret
pop
hlt
dec
out
pusha
and
xchg
rorl
xor
sahf
testb
xor
aam
xchg
pop
sub
fstl
test
or
xlat
in
mov
and
loope
imul
scas
or
jns
pop
test
mov
add
jb
xor
repnz
cld
push
into
mov
mov
loop
cmp
data16
aam
pushf
inc
push
dec
stos
and
enter
jo
lds
pop
push
sbb
mov
out
add
xchg
ds
ret
lret
or
dec
mov
stc
popa
and
pop
or
cmpsb
repnz
repnz
pop
jns
movsl
adc
fwait
and
adc
lds
mov
fcompl
jmp
test
add
fsubs
cmp
cli
hlt
inc
mov
lds
mov
adc
xor
faddl
push
or
jae
mov
iret
mov
pop
ja
aad
cli
in
adc
and
mov
cmp
cmp
jbe
and
jne
dec
push
pop
add
popf
dec
test
xlat
loope
mov
mov
jl
mov
pop
addl
cmp
gs
inc
inc
inc
stos
mov
and
lahf
jne
clc
mov
mov
arpl
fimuls
push
adc
xchg
and
mov
jl
fcomps
mov
shrl
pusha
sub
daa
addr16
mov
add
fldl
xchg
cmpb
jmp
mov
add
mov
sub
jle
pusha
sbb
ljmp
scas
pop
sbb
mov
ljmp
push
add
add
pop
and
cmp
jecxz
jmp
mov
sbb
mov
outsb
or
add
pop
aas
mov
mov
repnz
mov
repz
jge
adc
jmp
dec
enter
or
pusha
cmc
cmp
js
int3
fisttpl
fisubrs
rcrl
pop
cltd
repz
fs
leave
adc
icebp
adc
jmp
push
subl
orl
into
jmp
imul
int
sbb
fists
mov
sahf
mov
xchg
popa
adcl
lds
add
shl
dec
rcll
test
inc
xor
sti
pop
movsl
repz
shrl
jo
stos
jnp
fiadds
pop
lret
fisubrl
mov
jmp
mov
add
lret
leave
xor
push
int3
addr16
pop
pop
arpl
and
or
xchg
and
stos
int3
jae
repnz
adc
int3
test
pusha
test
dec
push
rcrl
dec
cwtl
jae
std
xchg
iret
mov
fidivrs
mov
push
in
insl
dec
sub
dec
inc
sub
rorl
xlat
test
roll
mov
enter
loopne
lcall
inc
dec
dec
outsb
jno
out
adc
push
iret
rcrb
je
add
pop
std
movsl
fwait
dec
xor
stos
ret
imul
sbbl
mov
mov
inc
gs
movsl
xchg
sub
fisttpll
jns
das
imul
sub
sub
jecxz
mov
jbe
mov
out
mov
pop
repz
pop
xor
jge
and
movsb
pop
decl
stos
je
sub
aam
je
pop
sti
clc
mov
retw
sub
mov
push
cld
mov
shlb
cmpsb
push
adc
adcb
sub
lds
or
fistl
mov
mov
lods
sub
xchg
inc
pop
mov
cli
jmp
dec
dec
dec
cmp
pop
dec
mov
lcall
xchg
cmp
and
ds
rcll
aas
xorb
into
lods
rcrb
roll
rcrl
js
xchg
xchg
jo
inc
iret
das
mov
xor
clc
sub
xor
roll
sbbl
mov
ss
cmp
aaa
xchg
pop
cs
je
xchg
fwait
xor
pop
insb
jno
scas
push
aaa
add
int
push
cld
or
pop
shrl
movsl
cs
jbe
scas
and
add
or
insl
or
pop
movlps
adc
sti
adc
jle
pusha
out
push
int
fcomps
jb
lods
shlb
sub
sbb
fdiv
mov
xchg
leave
dec
dec
cmp
xor
jae
pop
insb
and
adc
divl
in
sub
dec
cli
fld
aam
inc
cmp
cmp
loopne
mov
pushl
adc
cmp
fs
mov
xlat
subl
sub
ljmp
sub
pop
fwait
push
inc
push
mov
vpshldd
cvtdq2ps
xlat
jmp
test
jo
sbb
pop
pop
jno
ja
xchg
mov
subb
push
sbb
mov
js
popf
std
pop
outsb
push
pop
adc
es
jb
adc
gs
xchg
icebp
ret
jae
out
cs
out
pop
aas
dec
sub
loope
andl
jnp
xchg
and
mov
sarb
cmpsl
jnp
icebp
cmp
sbb
rcrl
cwtl
cmp
sub
jb
lods
dec
jmp
push
jecxz
and
sbb
adc
in
xor
xchg
iret
lods
popa
sti
adc
js
add
jns
outsl
push
sub
mov
test
clc
icebp
bound
sbb
imul
addb
inc
mov
pop
stos
arpl
clc
add
lods
cltd
mov
jl
mov
jge
jge
fistpl
xlat
cmpsb
xchg
lods
adc
aas
ds
inc
sub
adc
std
push
je
jno
dec
aaa
or
das
lods
ss
jae,pn
in
das
test
rcl
adc
xchg
addr16
aam
cmp
pusha
mov
iret
lahf
and
xlat
scas
and
fwait
dec
orl
sub
aad
paddw
pop
sub
pop
mov
mov
sub
add
gs
fisttpll
fldl2e
sub
scas
pop
popa
movsb
xor
dec
xlat
mov
outsb
adc
scas
mov
and
mov
scas
or
jns
popa
jnp
sub
pushf
jl
dec
dec
sbb
adc
div
test
mov
cli
imul
xlat
mull
aas
es
cmp
inc
mov
aad
mov
pop
mov
mov
mov
cmp
adc
push
jne
stos
and
arpl
inc
aaa
in
out
jmp
fisubs
mov
xor
adc
mov
jecxz
pop
inc
jmp
stos
jmp
ljmp
pop
test
test
fsubrl
sbb
push
mov
inc
push
jp
and
cs
sbb
int
movsl
je
push
out
or
and
mov
movsb
or
pop
hlt
xor
xchg
ljmp
out
jnp
in
movsb
mov
repnz
outsb
ret
pop
sub
addr16
inc
dec
sub
mov
mov
insb
test
inc
add
xchg
mov
insl
jecxz
sbb
jp
int3
addl
out
xchg
cmp
mov
test
mov
jo
lods
addr16
fimull
mov
xor
mov
mov
lock
icebp
stos
hlt
sbb
insl
adc
bound
xor
dec
mov
loope
negl
test
insl
ret
or
jmp
push
sub
pushf
mov
ret
bound
mov
xor
iret
xchg
cwtl
lods
xchg
fisttpl
scas
jns
fstpl
inc
pop
pop
cld
inc
or
cli
aaa
mov
leave
nop
mov
mov
pusha
cmpsl
popf
test
mov
mov
mov
and
fs
ja
std
jmp
jmp
std
add
lds
lret
data16
push
push
inc
jmp
in
cmpb
mov
sbb
sahf
xor
dec
cmpl
int
iret
dec
cwtl
movsl
dec
hlt
vpcmov
aam
gs
pop
xchg
cmp
dec
or
mov
test
pop
repz
cmp
adc
insl
inc
les
mov
into
mov
mov
cwtl
jle
jge
loopne
arpl
les
xchg
or
popf
xchg
sarb
sbb
cmp
jmp
dec
sbb
or
xchg
add
inc
fcompl
dec
cld
xchg
movsl
outsl
mov
mov
inc
mov
and
in
mov
pop
xorl
notl
dec
mov
les
scas
orl
mov
call
pop
test
push
shll
xchg
and
xorb
es
inc
dec
faddl
test
mov
sub
jecxz
repnz
pop
iret
outsl
jns
ljmp
mov
test
cli
addr16
inc
jecxz
xor
inc
out
xlat
and
jns
sahf
add
in
bound
loope
cld
push
dec
cmpsb
fsubr
push
pop
cmc
lods
nop
push
push
add
add
mov
fdiv
out
jo
insb
inc
sub
ret
or
mov
ficompl
push
fs
in
mov
or
cmp
call
jb
mov
pop
sub
jb
outsl
fimuls
xor
cmp
je
mov
jno
mov
xor
jecxz
repnz
es
data16
push
mov
mov
sbb
fsts
mov
pop
cld
pop
or
lds
iret
jmp
int
test
push
and
dec
js,pt
xlat
mov
aas
jl
mov
jge
scas
cmpsl
out
fucomi
jb
bound
mov
in
ret
inc
xor
push
inc
and
lods
inc
dec
push
nop
mov
push
adc
stos
in
scas
add
andb
mov
sub
sbb
mov
repnz
xlat
cmpsl
ss
xor
js
mov
outsl
aas
mov
fstpl
dec
out
sbb
enter
cs
iret
mov
pushl
pop
loop
xchg
mov
sbb
jmp
fcmovbe
jno
ret
call
mov
mov
or
add
loopne
mov
mov
sub
sbb
jns
ljmp
cli
push
sbb
frstor
je
xchg
push
sti
mov
sub
out
inc
imul
sbb
bound
loope
into
ret
and
sahf
pop
iret
sti
enter
jle
and
adc
cmp
in
out
fistl
fwait
ds
mov
lret
in
iret
leave
nop
jne,pn
cs
jmp
cwtl
push
xchg
gs
mov
dec
lea
jge
loope
mov
xlat
mov
insl
mov
mov
or
dec
push
adc
xchg
lds
ljmp
ss
sarl
sbb
cmp
or
push
imul
decb
shrl
xchg
fcmovnu
jle
jecxz
insb
adc
cmp
cmpsb
mov
cmp
xchg
push
push
xor
into
inc
in
lret
or
inc
or
and
mov
mov
cwtl
or
xchg
bound
rcl
jp
xor
dec
inc
pop
mov
xchg
cltd
out
add
sbbb
mov
pop
inc
sub
push
sahf
add
loopne
dec
adc
sub
mov
mov
das
xchg
and
ljmp
mov
adc
cs
pop
or
sti
or
pop
fidivrl
dec
fistpll
or
jns
in
cmp
cwtl
lock
xchg
adc
or
cmp
xor
fwait
ljmp
and
gs
cmc
movb
sbb
push
ja
or
sahf
jecxz
lods
xchg
xchg
test
pop
or
leave
jle
stos
pop
pop
ret
lea
jp
iret
xor
pop
in
out
test
or
and
push
and
mov
and
sub
cmp
imul
ret
sbb
lahf
mov
mov
pop
ret
xchg
cmp
jmp
push
push
xor
orb
mov
ljmp
fwait
bound
mov
pop
sar
aam
pop
rcr
stc
jecxz
movq
or
ljmp
inc
pop
lret
push
jns
movsb
pusha
mov
icebp
scas
mov
pop
dec
sub
lock
aam
add
imul
movsl
sub
xchg
and
test
mov
pusha
xchg
fidivrs
pushf
out
or
cmc
pop
push
sub
std
xabort
add
bound
cmpl
mov
push
jg
scas
jg
pop
or
into
leave
nop
mov
addr16
out
push
mov
lahf
shll
jne
xchg
iret
call
jmp
scas
dec
in
add
fdivrs
scas
jb
cld
cmp
mov
repnz
scas
mov
testl
popf
cmp
adc
inc
into
push
push
dec
in
push
shlb
jae
gs
ficomps
movb
cmp
fcmovbe
dec
nop
out
popa
aad
out
dec
and
pop
frstor
xchg
add
sbb
es
mov
mov
movsl
insl
mov
psrad
sbb
cmp
cmp
mov
fwait
jg
push
pop
and
and
mov
lods
imul
xor
jg
stos
pop
mov
sub
jmp
jmp
sub
or
sub
mov
mov
sbb
test
pop
push
xor
aas
std
jge
lock
cmp
pop
jmp
fs
fsubs
fwait
xchg
jmp
push
xchg
leave
call
ja
scas
ret
jno
in
adc
incb
mov
or
jg
cmc
lods
dec
lret
push
js
rcll
push
push
mov
jo
jl
adc
and
sarb
repz
pop
pop
add
ret
aam
mov
cmp
es
add
inc
test
lahf
push
xchg
add
dec
pop
ljmp
ljmp
xchg
or
push
push
pop
icebp
adc
adc
ss
inc
xchg
repz
or
mov
inc
js
xor
cmp
jb
inc
imul
lock
push
push
xor
ficoml
xor
loop
push
cmp
adc
mov
ja
test
pusha
cli
inc
test
sbb
cmpsl
push
pop
rclb
add
jne
sbb
sahf
push
add
xchg
xor
rcl
lods
into
cld
pop
ret
and
pop
lahf
pop
xchg
addr16
cmp
jbe
sub
lcall
jp
mov
mov
es
mov
sbb
jno
in
mov
add
mov
inc
imul
pop
popl
loopne
sub
mov
mov
pop
inc
dec
loopne
stos
orl
sti
add
int
imul
into
lcall
ljmp
mov
mov
dec
loope
loop
hlt
loop
cli
push
shll
int
cmpsl
js,pn
mov
or
cmc
xor
popa
sub
pop
push
sbb
in
lret
insb
je
pop
js
aad
lret
jnp
call
sub
out
hlt
lea
xchg
fs
ficoml
mov
call
adc
pshufw
aad
add
inc
cmp
cmp
icebp
icebp
xor
or
jp
xor
daa
imul
or
pop
mov
jp
cmp
imul
sub
test
jecxz
mov
leave
mov
fsubr
les
push
or
mov
gs
inc
lods
and
subl
dec
das
or
add
pusha
stos
mov
push
jmp
shlb
aad
sahf
into
loope
ficompl
push
dec
mov
stos
insl
jmp
shlb
xor
push
enter
test
lahf
js
mov
jo
js
pop
adc
sti
adc
popa
dec
dec
lock
inc
pop
sbb
inc
sub
jmp
mov
fdivrs
pop
int3
in
mov
shrb
hlt
out
adc
xor
loop
mov
mov
or
test
imul
ss
mov
adc
out
push
mov
sbb
dec
jno
xchg
mov
push
cltd
push
shlb
sub
out
jnp
lds
dec
mov
xchg
clc
mov
pusha
ljmp
data16
xor
data16
xor
cmp
neg
insl
lahf
cmpsb
pusha
ja
adc
adc
adc
ss
cmpsb
or
pop
movsb
mov
xchg
xchg
cmpsl
aad
aam
data16
mov
sbb
filds
clc
bound
mov
sub
mov
cmp
gs
mov
and
jle
pop
insl
dec
sbb
out
jno
mov
mov
mov
fwait
or
mov
fcomip
stc
push
jne
pop
mov
jp
sub
cmovo
sbb
das
jb
ds
xchg
popa
es
mov
das
cli
xchg
insb
mov
loop
fisubrs
data16
sahf
inc
xorl
and
aaa
mov
xor
lds
sbbl
inc
dec
mov
daa
xchg
jbe
jno
cmp
call
xchg
scas
push
popf
std
std
fld
dec
jmp
lret
faddl
jmp
push
lock
cltd
push
and
sahf
lret
add
adc
jno
jne
call
jns
xchg
push
or
fidivs
push
mov
xchg
lock
cmp
mov
iret
push
add
movsl
and
pop
xchg
cmp
push
pushf
lods
into
sub
push
pushf
push
dec
test
push
ret
stc
jne
mov
inc
push
jge
and
dec
push
mov
dec
sbb
cmp
ret
insl
mov
icebp
pop
test
push
mov
or
popf
mov
int3
mov
adc
enter
sahf
fildll
or
or
xchg
bound
sub
adc
xchg
cmp
mov
xor
pop
dec
adc
xchg
xchg
mov
dec
inc
lds
ja
sarb
pop
jg,pt
jno
movsb
dec
bound
jno
xchg
fs
popa
icebp
adc
jbe
stos
adc
xchg
sbb
pop
and
xor
pop
aam
cmc
ret
lea
add
pusha
push
bswap
or
imul
imul
shlb
or
pop
push
lock
inc
in
pop
bound
sahf
loopne
mov
pushf
pop
sahf
lods
test
fs
mov
inc
cmpb
lcall
jo
dec
cli
xor
xor
out
mov
inc
push
and
xlat
shlb
std
xlat
or
pushf
mov
in
mov
int3
mov
sbb
and
cmpsl
lret
dec
inc
adc
sbb
icebp
adc
and
insl
pop
int3
rolb
xchg
or
in
xor
push
imul
inc
xor
pop
call
or
popa
out
js
push
ret
or
mov
sub
fldz
push
sarl
jo
js
fcomps
stos
addl
add
mov
add
pop
dec
out
fsubl
mov
ret
jge
aam
movsl
mov
push
lahf
jecxz
adc
and
mov
sbb
sub
xchg
add
jb
clc
and
fmuls
cmp
cmpsb
fildl
or
push
jns
test
hlt
cmpsl
sbb
in
xor
hlt
int
mov
loope
stc
push
mov
and
add
fnstsw
mov
mov
mov
adc
mov
jmp
test
and
sub
fldt
or
or
ljmp
lret
sub
push
cmc
mov
cmp
mov
rorl
ret
test
out
xor
jno
arpl
cmpsl
xor
push
das
mov
mov
pop
ljmp
xor
fs
lods
dec
xchg
pop
jnp
imul
push
or
jno
test
jb
fildll
xchg
stc
adc
test
add
inc
bound
aaa
inc
sub
push
xchg
sub
mov
mov
jo
popf
out
sbb
out
sub
cmp
hlt
aad
cld
adc
dec
outsb
and
mov
sbb
pop
push
jns
jge
shlb
orb
mov
cmp
in
jnp
aad
cmp
cwtl
repnz
insl
outsb
addl
xchg
adc
pop
xor
mov
and
call
xchg
aad
pop
xchg
sub
cmc
xchg
cld
lret
add
mov
jge
pop
cmc
xchg
sahf
inc
inc
push
ret
or
cwtl
shll
push
or
xchg
pop
popl
or
dec
test
add
hlt
push
fnstsw
inc
mov
in
mov
movlps
leave
push
fstpt
rol
shll
sbb
mov
adc
push
sbb
subb
mov
sub
sbb
sbb
push
mov
int3
aas
adc
out
xchg
inc
jl
mov
negb
jbe
lret
inc
out
push
and
xor
mov
call
sahf
es
inc
add
mov
inc
jg
cmp
clc
ss
push
sub
add
pop
xor
inc
jae
cmc
popa
sar
test
cs
push
int3
test
sub
leave
sbb
mov
shrl
push
aas
outsl
roll
int
hlt
movsl
jle
and
out
test
add
das
mov
inc
xchg
mov
add
push
sti
test
imul
repz
enter
add
dec
pop
cmc
pop
mov
add
xchg
test
out
jo
cmp
xchg
lahf
mov
mov
orl
stc
cmp
dec
loop,pn
and
or
jmp
pop
test
iret
filds
in
mov
clc
sahf
xchg
jbe
cli
xchg
shld
mov
push
out
insl
ljmp
imul
cwtl
shrl
mov
cmp
xor
or
movsb
pop
mov
aaa
mov
jns
adc
fidivrl
inc
test
push
jb
dec
loop
sbb
nop
sub
inc
xchg
int
mov
jmp
dec
popf
jecxz
xor
mov
pop
and
push
popa
jae
fdivs
add
test
addr16
mov
and
adc
int3
cli
fstpl
push
sub
cld
mov
aad
jmp
and
push
cmp
lods
sahf
mov
rcrb
out
xchg
dec
dec
movsb
mov
loop
sub
pop
bound
mov
jb
mov
ljmp
mov
pop
loop
mov
cli
sbb
lods
sub
push
les
aad
lret
into
pop
lret
stc
stc
xor
fcompl
cmpsb
aad
rcrl
push
jmp
insb
aam
test
lds
mov
jb
mov
arpl
popa
rcrl
xor
cmc
out
push
inc
int3
dec
ficoml
cld
sub
adc
loopne
ja
mov
sub
pop
sub
mov
rcrl
sbb
inc
dec
and
sub
push
outsl
sbb
xchg
cmp
mov
loopne
cld
dec
sbb
or
lret
stos
xchg
loopne
in
mov
inc
icebp
xchg
push
dec
push
out
or
jmp
ja
jns
sbb
popa
add
and
adcb
out
cld
lods
ficoml
push
sub
dec
xor
roll
test
adc
mov
dec
jle
jmp
cmp
in
fnsave
fs
pop
adc
mov
mov
inc
in
push
ret
sarb
test
and
sbb
cmp
testl
add
fs
pop
cmp
int
sbb
sub
push
push
cltd
or
ss
in
dec
scas
bound
shrl
dec
cmp
lret
test
inc
xchg
or
push
popa
xor
dec
test
int
mov
lock
mov
hlt
inc
xor
jl
mov
mov
fs
cmc
inc
add
mov
xor
fwait
cltd
addl
outsl
cmp
xchg
or
into
sbb
sbb
das
push
js
add
pop
addr16
xchg
mov
jp
out
aad
outsb
pop
mov
dec
mov
xor
jno
je
and
jnp
inc
aad
mov
das
test
gs
cmpsb
mov
pop
popa
fldt
out
pop
out
mov
test
mov
lea
ja
fistpl
int
xor
popa
arpl
push
jle
dec
push
xchg
xor
xchg
mov
dec
and
out
xchg
mov
test
orl
push
pop
push
in
outsb
mov
adc
hlt
fisubs
in
pop
mov
and
mov
dec
enter
xor
xchg
insb
mov
stos
test
jle
and
xchg
stos
sbb
out
roll
cli
xorb
popa
jns
pop
js
push
ret
jne
negl
por
lods
clc
jbe
push
fs
out
movsl
push
inc
xchg
pop
lods
mov
fst
data16
cmc
mov
incl
xchg
gs
arpl
cli
dec
add
and
xchg
mov
lretw
pop
push
xor
testl
pop
jns
scas
mov
inc
adc
dec
rcll
and
out
push
scas
jge
fistl
lds
or
rcr
std
mov
mov
jae
rcr
inc
jbe
jbe
nop
sbb
in
outsl
pop
adc
mov
xchg
pop
fidivrl
je
es
outsb
dec
inc
mov
mov
mov
xchg
jecxz
mov
fdivs
jg
inc
shr
jmp
add
ss
adc
cmc
jne
push
jne
repz
fwait
arpl
mov
jae
lods
or
xor
mov
pushf
lret
out
sbb
sub
xchg
ret
or
stos
dec
movsb
cmp
inc
scas
inc
dec
push
movsb
add
mov
les
sub
addr16
xor
pop
sbb
or
insl
mov
cmpsb
push
cmc
mov
sbb
inc
cmpsb
out
jnp
stos
insl
and
cltd
stos
jp
movsb
mov
sub
mov
fldcw
mov
xor
push
xchg
push
and
ficomps
sbb
or
push
fisubl
mov
in
out
flds
addr16
or
jg
nop
js
jnp
dec
and
sub
insb
sub
rorb
jnp
lods
cmp
dec
sub
mov
imul
call
xlat
lods
jmp
push
dec
or
lea
fs
fwait
mov
mov
scas
adc
cltd
jg
test
mov
ja
adc
rdtsc
jl
sahf
scas
scas
jmp
js
or
sub
inc
and
xor
mov
or
dec
out
sub
pop
data16
add
outsb
inc
mov
push
out
adc
mov
daa
jns
add
mov
xor
or
imul
adc
loopne
pop
sub
sub
fbld
sti
and
xor
cmp
dec
cmp
mov
neg
cmp
imul
lret
icebp
cmp
in
shrl
ds
popa
test
push
ret
movsl
testl
pop
aas
pusha
or
in
pop
aas
mov
fsub
xchg
jl
mov
mov
enter
push
repnz
out
and
sbb
sub
mov
call
push
and
or
sub
incl
adcl
fidivrl
mov
or
pop
inc
add
cmp
cmc
adc
mov
dec
pop
xor
push
sub
ds
in
lds
test
push
loopne
lds
out
aas
and
js
xchg
test
and
out
or
pop
pop
mov
inc
mov
xor
mov
imul
jg
inc
xchg
add
ds
cli
arpl
pop
loop
jl
jb
loop
xor
push
inc
sub
js
pop
mov
mov
inc
dec
dec
push
sub
pushf
jle
mov
cmpl
or
std
enter
out
fwait
icebp
insb
lret
lock
in
aam
xchg
pushf
cmp
enter
fiadds
into
add
std
cmp
dec
shrl
mov
fistpll
test
cli
mov
push
les
out
mov
mov
movsl
xchg
inc
mov
pop
and
mov
loope
cs
jne
outsl
cs
lods
insb
sub
stos
imul
xchg
scas
and
and
inc
jae
fwait
clc
mov
movsb
repz
mov
subl
pop
inc
pop
push
pop
pushf
rcr
sbb
test
push
sub
insb
pusha
mov
rclb
jnp
lods
mov
xor
push
test
test
dec
aas
xchg
mov
cld
jns
aaa
aad
sbb
or
mov
mov
lret
adc
inc
dec
pop
dec
lods
inc
jmp
push
les
rcl
mov
jbe
pop
dec
cmpsb
ljmp
imul
into
cmpsb
arpl
loope
mov
xchg
jg
xchg
lea
ja
mov
xchg
sbb
mov
fwait
aaa
or
push
fstpl
les
inc
or
lahf
daa
inc
add
fstps
jne
mov
fsubr
push
add
inc
out
sub
or
or
inc
pusha
loope
xchg
or
cmp
rcll
lds
xor
inc
imul
dec
xchg
or
lret
pop
sub
xchg
add
jo
or
or
mov
add
in
cltd
mov
dec
add
arpl
cmc
mov
jg
mov
cmp
mov
mov
jb
mov
in
or
popa
stos
hlt
sbb
cmp
inc
add
stos
cld
ficomps
fdivr
aad
cmp
repnz
xchg
xor
sub
mov
sub
adc
call
jb
jle
mov
xor
arpl
jae
pop
sbb
mov
imul
aas
lcall
inc
and
xor
popf
pop
dec
rol
xchg
push
int
dec
addb
cmpsl
xchg
movsb
nop
mov
sahf
pop
arpl
cmc
sub
xchg
outsb
inc
cwtl
dec
lods
sbb
xchg
movsb
push
cld
mov
mov
xor
aas
push
imulb
or
data16
inc
add
inc
jle
mov
cmc
adc
inc
xor
ljmp
aas
cwtl
mov
fisubrl
imul
outsl
sub
callw
inc
dec
or
mov
outsb
sub
addr16
lods
cmp
and
or
push
fnstsw
orl
dec
push
jno
and
or
icebp
dec
sbb
lcall
mov
cmp
in
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
push
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loope
pusha
aas
mov
jp
clc
mov
je
repnz
xor
dec
or
leave
mov
movb
add
sbbb
popf
pop
sbb
lcall
aam
push
adc
xchg
push
outsl
cs
lods
insb
sub
stos
imul
in
arpl
loop
pusha
aas
mov
jp
stc
mov
je
repz
xor
dec
or
lret
pop
movl
pop
push
ficomps
pop
sbb
xchg
push
adc
rclb
lods
insb
sub
stos
imul
in
arpl
loop
pusha
and
mov
jp
stc
mov
je
repz
xor
dec
push
int
dec
or
mov
movl
pop
pop
ficomps
pop
sbb
xchg
push
push
aad
push
adc
xchg
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
push
scas
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
imull
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
outsl
cmpsl
test
pop
jge
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
negl
fisubrl
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
out
out
data16
push
insb
iret
pushf
data16
data16
inc
mov
pop
push
mov
pop
inc
sub
setl
lods
push
iret
xor
scas
inc
inc
mov
stos
mov
xchg
scas
aas
insb
inc
fistps
jge
test
scas
out
and
aad
inc
cmpsl
inc
inc
pop
inc
insb
inc
aad
fbstp
jle
pop
inc
aam
fidivrs
xor
push
add
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
notl
xchg
lods
scas
scas
insb
mov
pop
jge
gs
mov
inc
test
inc
mov
inc
movsb
pop
inc
pop
inc
pop
pop
inc
cmpsl
push
inc
inc
pop
inc
dec
push
inc
xor
jle
testl
xor
scas
scas
xor
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
