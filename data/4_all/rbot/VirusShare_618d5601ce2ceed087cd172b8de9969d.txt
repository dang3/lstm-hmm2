push
or
add
add
add
mov
add
add
add
adc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
fcoms
add
push
add
roll
xor
push
add
push
add
add
push
add
add
add
addb
add
cld
rolb
pushf
rolb
or
push
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
add
add
add
hlt
add
add
add
add
add
sbb
add
adc
add
mov
pop
jge
arpl
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
push
add
add
mov
sub
and
sbb
lret
xchg
nop
xor
aas
or
scas
push
sahf
jmp
mov
int
cmpsb
in
les
lea
inc
fcoml
xor
push
int
xchg
decl
mov
arpl
inc
lea
xorl
push
aam
mov
mov
xchg
mov
sub
sahf
sti
andl
sbb
xchg
xchg
inc
dec
js
pop
xchg
popf
test
xchg
mov
lods
lcall
inc
inc
jbe
jae
push
xor
pop
in
add
out
or
insb
pusha
filds
jp
cwtl
lahf
push
dec
jg
jae
add
pop
cmp
adc
pop
pop
mov
xor
hlt
mov
push
testb
mov
int3
outsl
aas
mov
insl
push
push
hlt
nop
sahf
cld
inc
or
jbe
add
mov
sahf
add
mov
adc
aad
insb
std
add
sbb
in
imul
mov
out
dec
pusha
das
cmc
pusha
sbb
cmp
hlt
push
ljmp
push
movsl
mov
or
movsl
pop
cwtl
scas
pop
and
sub
lea
inc
add
inc
sbb
idivl
fsubl
push
sbb
jo
and
xchg
les
cwtl
xor
pop
push
jnp
fldt
dec
lods
pop
fadds
orl
lret
xchg
pop
and
ja
arpl
inc
outsl
repz
adc
ficomps
push
sbb
mov
movsb
sub
fldl
cwtl
mov
shlb
nop
inc
cmp
cmp
mov
lcall
test
aas
mov
mov
cltd
lods
lock
lods
call
aas
xor
or
ret
add
cmp
mov
cli
in
sub
push
mov
adc
pushf
dec
dec
movsb
and
hlt
pop
and
jecxz
or
aad
push
imul
mov
lock
iret
mov
and
neg
jo
sbb
xor
adc
cwtl
xor
jp
sub
dec
pop
cmp
adc
jo
cltd
out
xor
in
jb
fwait
cmp
inc
je
mov
movsb
rorb
push
sbb
jge
and
cmpsb
add
clc
cld
xchg
das
ret
fidivrs
cmc
in
inc
xor
imul
xchg
push
fldt
lds
jae
daa
insl
pop
dec
pop
fsubrp
ret
std
xchg
mov
fdivrs
pop
push
mov
mov
movsb
sub
imul
sarl
pop
mov
iret
inc
and
jmp
int
in
movsl
mov
xchg
xchg
sbb
mov
dec
mov
mov
gs
cmp
rcl
mov
xchg
pusha
dec
cltd
sub
rol
or
test
mov
push
adc
or
stos
lods
and
cmp
push
cmp
jle
push
bound
gs
xorl
cmp
or
push
and
push
sub
orb
scas
cs
mov
xlat
or
xor
sub
mov
sbb
jb
popa
and
lock
dec
pushf
lods
stc
and
rol
enter
adc
xor
inc
in
add
and
cmp
xor
mov
xchg
out
negl
movl
jb
jne
ss
lds
xlat
imul
lock
arpl
mov
mov
sbb
out
jp
jmp
imul
push
lods
xor
ss
lea
push
das
pusha
inc
push
add
xchg
sbb
int3
js
mov
stos
fsts
xchg
adc
pop
std
sbb
xchg
jg
test
jnp
pop
in
mov
jb
js
jl
in
lret
call
mov
or
or
pusha
push
dec
mov
ror
das
xor
xor
clc
and
xchg
call
out
sub
int
scas
stos
push
out
jns
sbb
sbb
loopne
cmc
stos
sub
xchg
push
movsb
add
rcrb
mov
call
stos
adc
xchg
pushf
test
lahf
push
push
sbbl
push
and
add
mov
rclb
lcall
std
bound
or
or
movsb
push
aam
shll
rcrb
pop
inc
ja
cmp
mov
cmc
int
leave
dec
or
jo
push
call
clc
pop
jo
mov
fstl
xchg
movsl
movsb
sub
mov
std
outsl
sub
test
push
inc
inc
aas
mov
or
outsl
int3
pop
lea
loopne
lcall
sub
mov
inc
js
mov
jae
call
aam
out
pusha
mov
mov
aad
inc
adc
jmp
adcb
adc
push
cltd
xchg
inc
sub
pop
arpl
mov
call
dec
inc
shlb
push
mov
call
or
lahf
pop
add
cmp
lcall
pop
addb
sbb
xchg
movsb
je
sbb
sub
mov
sub
leave
and
inc
in
pop
push
mov
es
lret
out
sahf
fs
sbb
bnd
push
aam
into
aaa
sbb
inc
stc
popf
jne
jecxz
cmp
fcmove
nop
jle
cmp
int3
jno,pn
call
adc
xchg
xor
mov
mov
outsb
dec
mov
jae
mov
movsl
mov
mov
sbb
and
inc
cltd
call
in
jne
cld
mov
push
outsb
jmp
cmp
stc
push
add
cmc
lahf
dec
outsl
ficomps
pushf
repz
or
ja
cmp
sub
or
cmp
sbb
cmpsl
popf
push
nop
mov
jmp
push
pop
repnz
mov
push
repz
fimuls
jnp
cmpsb
fisttps
xchg
adc
fsubl
movsb
lds
add
dec
test
mov
test
sub
mov
add
notb
aaa
or
cld
jecxz
jle
decb
jmp
out
das
cmc
pop
mov
cli
mov
pop
mov
push
aas
movsb
scas
aam
loopne
enter
cmpsb
add
inc
mov
jl
xchg
cmp
insl
gs
fwait
cwtl
in
pop
out
pop
sbb
ret
les
push
pop
sbb
mov
or
les
out
sbbb
add
into
nop
sbb
cmp
aad
mov
cmc
and
xchg
sub
mov
popfw
stc
popl
dec
cli
xlat
xor
add
mov
in
fwait
mov
push
dec
sbb
dec
add
outsb
loop
add
cmp
push
jl
mov
or
fnsave
movsb
sbb
insb
cld
dec
xchg
xchg
sbb
fucomip
insl
push
shrl
xchg
das
xor
adcb
popf
mov
bound
enter
jb
xlat
mov
sbb
decl
dec
mov
in
push
sahf
push
mov
pop
add
mov
push
imul
cli
cli
sahf
adc
push
mov
fwait
xor
mov
push
sbb
into
sbb
jp
ret
stc
lret
stc
sbb
cvtps2pd
xor
leave
ljmp
in
mov
mov
jecxz
rcll
rcr
xchg
sbb
cld
jno
jle
mov
popa
xor
xchg
jne
insb
push
cs
xor
dec
cmpsb
arpl
jnp
sbbl
in
les
out
jae
sub
out
adc
out
lods
sarb
sub
repz
push
rorb
and
addb
inc
aam
dec
inc
fstps
ljmp
sbb
add
pop
and
add
mov
int3
fisttps
mov
and
dec
cmp
pop
inc
xor
cltd
or
aaa
push
mov
out
sub
stc
mov
clc
inc
ss
add
lea
and
enter
push
adcb
popa
add
popf
mov
jg
gs
outsl
popf
addr16
xchg
mov
fdivl
xor
or
sbb
or
fsubrs
push
aam
sub
bound
js
inc
shlb
repnz
cmp
mov
inc
sub
mov
sahf
xchg
xchg
rolb
adc
add
nop
mov
jmp
movsb
je
fnstsw
leave
ja
or
call
adc
ret
imul
sbb
lock
sahf
jno
mov
mov
sub
daa
or
pop
mov
pusha
fdiv
xor
sub
insb
loopne
mov
xor
les
inc
ljmp
mov
or
popf
loopne
pop
xorb
sti
bound
push
and
ret
sub
dec
cmp
pop
jnp
adc
outsl
jecxz,pt
inc
push
inc
cmc
ja
sub
pop
xlat
sbbl
movsl
mov
inc
push
lahf
call
pop
jp
cmp
cmp
fidivs
sbb
aaa
jo
fnstsw
mov
mov
xchg
jns
jne
movb
data16
add
jge
lods
push
dec
adc
adc
add
and
cli
add
shrl
imul
add
dec
mov
fcoml
imul
cld
cmc
int3
mov
sbb
jno
jae
jg
pop
jne
lahf
test
cmp
popf
sbb
jg
inc
enter
daa
and
fidivs
cmp
aad
add
dec
sarl
cld
pop
aam
jae
orb
xchg
add
dec
add
out
out
stos
out
outsb
sbb
mov
cmc
pop
add
test
dec
push
in
cmp
sbb
xchg
sbb
shl
mov
fs
call
xor
mov
inc
inc
xor
js
pop
lcall
iret
jbe
or
cs
push
mov
dec
jne
mov
js
lods
inc
dec
loopne
mov
pop
mov
std
notl
sub
sbb
dec
inc
inc
dec
adc
hlt
jmp
imul
enter
adc
push
ret
imul
adc
xchg
orl
lds
loopne
int3
pop
fstpt
sti
leave
inc
bound
adc
jns
loope
xchg
xor
mov
stos
sub
loope
add
scas
push
mov
cs
add
pop
hlt
daa
aaa
addb
cli
arpl
rcrb
pushf
pop
clc
jle
sub
xor
sbb
pop
mov
insl
mov
fsubrp
ror
jb
or
popa
mov
subb
xchg
hlt
imul
xchg
cmc
push
in
pushl
xchg
push
andl
rcll
hlt
and
xlat
push
fdivrs
mov
jae
adc
adc
xor
lea
shlb
sarb
cmpsb
je
incl
push
jl
add
push
mov
ret
pushf
and
pop
imul
aaa
cmp
in
cmpl
fnstcw
mov
pop
loop
sbb
movsl
pop
jmp
les
xchg
pop
rorb
out
jg
rorb
stos
lods
cmpsl
xchg
rorl
scas
inc
out
xlat
sub
sbb
out
ss
aad
xchg
jo
popa
rcr
sub
movsl
mov
sbb
xor
xchg
out
and
stos
not
sbb
test
or
add
xlat
dec
loope
mull
repz
push
jo
subb
fcmove
or
das
pop
xchg
jp
jns
scas
inc
mov
dec
mov
fs
loope
popf
sti
push
mov
mov
aam
and
jns
push
adc
jns
cmp
mov
push
sbb
jno
ss
mov
lret
jnp
dec
sar
lods
cwtl
mov
jb
add
idivb
fsts
nop
add
xor
nop
pop
out
ror
mov
cli
pop
fisttpll
aas
xor
push
xchg
imul
hlt
test
mov
mov
and
mov
unpckhps
pop
adcl
push
xchg
jae
pop
ljmp
xor
mov
pop
push
mov
insb
xor
int
stc
lock
loop
and
adc
mov
in
addr16
inc
sub
iret
nop
jmp
dec
adcb
mov
xor
imul
push
push
fbstp
stc
test
lds
or
pusha
push
cltd
xor
or
out
movaps
bound
mov
push
arpl
mov
adc
outsl
jno
int3
scas
push
aad
xlat
jns
and
sub
fcmove
cmpsb
jae
inc
test
js
xor
and
popf
xor
pop
push
ds
sbb
pop
movsb
xlat
movsb
out
test
movsb
out
fucomi
fcoml
pop
push
sbb
sbb
rorb
inc
rolb
imul
mov
pusha
adc
out
pop
push
mov
scas
sub
outsb
jnp
mov
scas
mov
sbb
adc
lock
dec
dec
loope
adc
push
xorl
jecxz
shll
pushf
xchg
stos
insb
push
xchg
js
es
movsb
jg
push
jbe
mov
leave
lcall
sarl
fdivrs
fnstsw
fistps
dec
mov
cwtl
subl
jmp
sub
lods
and
inc
xor
cmp
mov
push
pop
addr16
out
adc
xchg
pop
out
push
sarl
xchg
dec
adc
xchg
repz
jp
xor
jbe
faddl
repnz
out
ret
scas
cmp
sub
cmp
sti
mov
scas
hlt
ljmp
cmpb
dec
sbb
pop
pop
adc
mov
dec
call
icebp
test
roll
aad
out
mov
pop
arpl
pop
xor
in
jecxz
inc
sahf
pushf
sahf
cs
or
or
int
or
mov
mov
scas
sti
mov
xchg
sub
add
push
add
jecxz
arpl
dec
cwtl
ret
adc
xchg
adc
cwtl
mov
cmc
int3
xor
xchg
fsubrs
add
lods
jae
pop
loopne
sbb
push
loopne
sub
in
fs
rorl
movsl
lock
test
clc
jg
inc
ja
push
rcrb
bound
lods
xor
shlb
leave
in
xorl
cmpsb
sub
sbb
sbb
lret
cwtl
and
pop
ljmp
jo
pop
movsb
aaa
lea
sbb
mov
or
movsb
push
leave
sbbb
xor
mov
add
idivl
pop
dec
stos
sbb
mov
pop
xchg
scas
mov
dec
imul
jmp
jbe
popf
aaa
pcmpeqb
and
jb
push
inc
andl
pop
cmp
jmp
sub
pop
fwait
xor
add
inc
pop
cwtl
inc
aaa
jmp
xor
and
adc
xchg
cmp
xor
jl
pop
and
imul
movsl
cli
iret
aam
int
or
dec
cmp
jg
jmp
shl
inc
and
das
adc
sub
stc
adc
loopne
push
dec
cltd
lcall
adc
inc
mov
es
int
shrl
fwait
jne
jmp
pop
sbb
push
test
mov
dec
adc
or
es
xchg
pusha
sbb
dec
cs
pop
mov
loope
sbb
out
aad
ds
sub
fisttps
decl
jae
mov
xchg
lea
test
xor
mov
pop
pushl
test
pop
mov
ds
push
cmp
mov
enter
stos
mov
enter
and
loop
push
push
xchg
xchg
mov
xchg
inc
cmp
push
jns
mov
jp
loopne
mov
xor
dec
mov
mov
or
popf
push
pop
or
xor
sarb
test
mov
mov
ljmp
in
or
pop
shll
mov
shll
decl
cmp
lock
sbb
jbe
mov
dec
mov
or
xchg
aaa
jl
sti
push
divb
mov
cmp
cmpsb
ret
out
sbbb
shlb
pusha
cmp
jle
sbbl
fwait
lds
scas
test
xchg
inc
sub
pushf
cmp
mov
mov
insb
test
imul
idivb
push
jne
push
pop
and
sbb
pop
adc
jae
adc
inc
cltd
lret
test
mov
push
xor
lahf
out
cmp
push
into
movsl
je
jp
xlat
inc
aas
adc
adc
push
outsl
sub
push
pop
fmul
inc
jg
and
and
and
mul
add
pop
push
mov
xchg
dec
mov
cmp
imul
or
adc
sub
add
inc
adc
inc
iret
mov
repz
sahf
push
outsb
shll
adc
push
scas
mov
call
adc
dec
fninit
add
dec
adc
int3
test
aaa
outsl
cmp
inc
stc
test
adc
push
pop
jae
ja
sub
lods
leave
mov
add
xor
pop
sbb
add
js
lret
jmp
pop
jg
xlat
adc
hlt
dec
popa
pop
lds
int
std
out
lahf
inc
cmp
add
mov
sahf
sub
mov
jo
inc
xchg
shlb
ret
jg
mov
sbb
cs
roll
add
cld
push
mov
popf
cmp
sarb
jb
call
mov
sbbb
outsb
rcrb
filds
dec
mov
mov
idivb
and
xor
ds
adc
sub
fwait
sbb
pop
jnp
insl
imul
aaa
xchg
adc
mov
data16
fcompp
push
add
filds
int
outsl
sti
inc
sbb
inc
rcr
popf
sahf
pop
push
mov
lret
xchg
scas
mov
daa
jg
and
repnz
test
aam
mov
call
ljmp
or
pop
and
lods
iret
or
mov
clc
pop
xchg
lods
shrl
add
xor
loope
sbbb
and
push
loopne
add
pop
xor
jg
cltd
jg
push
std
adcl
data16
push
add
lahf
push
mov
hlt
xor
stos
cmpsb
pop
iret
fcom
mov
inc
aam
repnz
pop
pop
add
cwtl
adc
sbb
roll
xchg
outsl
push
neg
outsl
dec
cmp
mov
jne
jbe
push
pop
fidivrl
cwtl
pop
mov
or
add
mov
and
adc
xchg
seto
subl
push
enter
inc
dec
std
jge
stos
loope
mulps
mov
push
cmp
rcl
je
pause
dec
push
push
clc
mov
iret
jge
cmp
dec
outsb
arpl
add
cmp
xor
mov
jno
push
mov
shrb
mov
ja
jnp
outsl
std
push
xor
adc
push
out
sub
xchg
jle
dec
adc
sbb
pop
jp
mov
sbb
xor
fldt
pop
movsb
dec
jge
sbb
add
daa
add
repnz
leave
mov
fcoml
dec
push
movsl
mov
or
and
jecxz
sarl
pop
push
adc
aaa
add
xchg
scas
adc
decb
push
sub
scas
xchg
fsubr
xchg
hlt
xchg
ljmp
sub
adc
repz
push
or
ret
sbb
daa
clc
push
das
ljmp
cmc
leave
add
int
das
jl
xor
stos
rorl
mov
pop
aas
imul
call
ret
fbld
shlb
dec
addb
out
into
jo
ds
xchg
jge
dec
xor
sti
xorl
sarl
jb
fsubrp
testl
xlat
pop
jbe
imul
pop
cmpsb
js
xor
shr
test
lcall
sub
dec
xlat
cmpsl
and
lcall
or
mov
fistpll
aas
jp
test
or
mov
ret
aas
jns
sbb
pop
xor
jnp
mov
mov
repz
push
jmp
sub
push
jo
cwtl
or
sbb
lods
push
sub
jecxz
fisubl
xchg
dec
xor
cmp
lods
loope
insb
fst
jg
nop
out
sbb
mov
jns
push
mov
xchg
inc
stos
outsb
add
jo
push
sahf
stc
jle
push
pop
inc
or
or
and
add
ja
into
adc
pop
les
xor
pusha
notl
or
xchg
movsl
mov
enter
mov
iret
add
inc
jo
dec
pop
mov
push
test
insl
cmp
dec
cmp
pop
movsb
in
cmpsb
inc
das
xlat
repnz
lret
dec
cmp
enter
xor
mov
in
jae
andl
mov
imul
repz
or
jbe
or
jo
inc
and
arpl
xchg
xchg
rclb
out
cmp
call
add
fsub
push
test
and
icebp
jecxz
mov
pop
lcall
mov
lret
fdivrs
clc
call
hlt
stos
and
jecxz
push
mov
bound
adc
push
aad
dec
jne
mov
mov
mov
jl
nop
pop
cmp
xchg
daa
jge
out
pop
jmp
dec
fsubl
shl
shll
jae
bound
jp
out
mov
xchg
xor
je
mov
or
movsl
int3
mov
test
pop
ror
testb
aas
outsb
xor
xchg
movsl
imul
test
js
into
bound
stos
mov
cmpsl
jp
mov
jne
popa
mov
or
in
xchg
jl
mov
andl
mov
jg
fsubrs
lock
aas
push
repz
mov
imul
push
test
mov
xorl
lea
fistpll
cmc
fcoml
mov
and
les
jp
dec
pop
pop
lahf
das
push
mov
outsb
sub
cmp
add
dec
or
mov
lret
arpl
pop
out
fs
mov
imul
and
and
loope
push
ret
and
jecxz
pop
pop
xchg
push
and
js
testl
jmp
mov
pusha
mov
test
jg
or
loop
adc
and
in
repnz
enter
out
pop
clc
mov
mov
adc
xchg
shlb
and
fisubs
xchg
and
and
push
or
push
push
jecxz
adcl
sbb
data16
mov
push
cli
inc
cli
jno
add
push
clc
inc
sbb
mov
push
insl
in
inc
xchg
loope
leave
das
imul
aad
fsubp
jno
int3
push
inc
sarl
rcrl
fcompl
adc
jecxz
adc
xorb
jle
ret
loope
cmp
fnstenv
and
jl
mov
jns
call
cmpsl
icebp
icebp
sub
lods
add
add
imul
mov
btr
pop
xlat
mov
sahf
inc
lret
cmp
lods
xor
popf
xor
sub
and
xlat
int3
cltd
outsb
inc
and
sbb
mov
loope
sbb
inc
mov
or
push
and
or
xchg
mov
leave
das
pop
sbbb
sbb
call
or
sbb
jne
dec
rorb
xor
xchg
imul
dec
mov
mov
xor
mov
daa
pop
xchg
mov
push
mov
jecxz
insb
sub
dec
or
pop
and
sbb
mov
testl
inc
adc
pop
adc
lret
or
scas
cmpsb
pop
cli
outsl
bound
pop
insl
add
push
out
ret
testb
add
test
aaa
ds
icebp
sub
jne
fwait
jle
adc
inc
sti
xchg
add
repz
add
enter
cmp
pop
pop
add
imulb
lcall
adc
lods
shlb
add
cmp
loopne
xchg
inc
hlt
lds
xchg
lret
xchg
nop
jbe
adc
inc
pop
push
sub
in
lret
cmpsb
push
push
aaa
lea
adc
pop
mov
mov
push
stos
mov
jecxz
push
cmp
and
cltd
cmp
xchg
loope
pop
pusha
popf
aaa
stos
lahf
mov
sbb
stos
cmp
sub
jle
clc
lcall
pop
rcl
sahf
pop
fidivs
fwait
out
xlat
jge
jl
xchg
dec
insl
rclb
mov
sub
dec
loopne
mov
fldl
stc
aam
xchg
dec
test
mov
pop
inc
pop
jp
loop
out
fsts
pop
mov
movb
aas
fwait
pushf
and
mov
jecxz
rorl
imul
int3
mov
inc
int3
std
test
sbbb
mov
sub
cwtl
xor
addr16
aaa
pop
pushf
inc
adc
push
add
jg
cmp
jns
dec
in
adc
ret
loope
lds
jo
add
jne
repnz
mov
jmp
dec
or
xchg
sub
add
xlat
mov
mov
jbe
inc
int
lret
adc
popf
cmpsb
add
gs
les
xchg
pushf
fiaddl
mov
mov
lret
push
in
dec
nop
and
push
push
push
sub
test
mov
outsb
cmc
arpl
fldcw
push
insb
and
pop
aaa
enter
push
adc
out
loopne
or
cmp
das
mov
outsb
adc
insl
repnz
inc
add
add
aam
shl
pop
dec
stos
mov
sbb
cmp
int3
aaa
movsl
sub
outsl
nop
dec
mov
dec
or
xor
xlat
push
dec
cmc
dec
rcrb
ja
out
ss
rorb
mov
stos
stos
pop
icebp
movsb
inc
insb
push
fisubrl
sub
add
sub
jl
js
xchg
das
pop
addb
lret
fldt
rcll
sahf
call
sti
leave
arpl
rolb
ja
add
inc
ljmp
jae
lods
mov
cmpsb
fbstp
pop
xchg
data16
mov
pop
push
std
insb
jmp
mov
sarb
imul
xor
mov
sti
decb
cmp
pop
xchg
add
or
push
fidivs
flds
popf
dec
ret
sbb
sbb
inc
add
mov
in
sub
pop
test
leave
popf
jb
adc
das
add
mov
mov
cltd
pop
xchg
je
push
mov
xchg
rcrl
out
lcall
mov
adc
aad
sbb
jae
fcmovne
jno
fs
and
push
rclb
imul
adc
ja
into
push
test
inc
or
icebp
xcrypt-ctr
cmpsl
filds
xchg
push
fdivrs
out
add
lahf
and
mov
cmp
adc
shl
dec
in
pop
jle
jno
lods
mov
mov
adc
or
or
mov
imul
fadds
in
lret
push
or
das
dec
or
repnz
clc
inc
push
inc
pop
repz
movsb
sub
xchg
or
fidivrl
mov
call
jmp
leave
in
inc
jb
push
repnz
xor
pop
add
pop
enter
cld
inc
dec
sub
and
lret
imul
mov
add
ds
xor
cmpsb
pusha
bound
mov
dec
jp
jge
inc
jp
adc
movd
push
sub
or
sarl
outsl
fs
jnp
ret
fisttps
popa
mov
frstor
mov
movsb
in
jmp
ficoms
mov
jecxz
movsl
repz
stos
adcb
je
pop
cs
adc
scas
ret
push
data16
pop
int
push
sub
in
add
das
jb
in
xchg
outsl
popf
xor
pop
out
dec
sub
fsubrl
jb
fdivs
pop
bound
sub
fldt
out
mov
mov
mov
loope
rorb
loopne
dec
in
flds
mov
sbb
in
iret
inc
jnp
add
dec
into
sub
aas
jp
and
push
dec
xor
pop
pop
test
shl
out
cwtl
sbb
in
aas
scas
or
mov
js
mov
call
lahf
add
inc
lea
je
test
das
and
out
xchg
mov
pop
cs
sub
xchg
adc
xlat
repnz
sbb
mov
lahf
lret
or
xor
inc
mov
push
pop
aas
mov
cltd
in
fwait
or
and
push
shrb
cld
dec
or
subb
jb
outsb
bound
jle
test
shlb
outsb
ror
dec
adc
iret
into
lds
jo
jl
ljmp
mov
pop
mov
cmp
sbb
or
ja
inc
lods
mov
push
cs
fdivrp
jne
pop
jb
loopne
jbe
xchg
iret
addl
cli
sbb
push
pop
js
fbld
lods
pop
in
add
pop
sub
sbb
dec
inc
idivl
nop
movsb
fisubl
adc
fstpt
es
xchg
arpl
int3
stos
es
loope
jmp
loopw
or
jb
sub
imul
lret
mov
pop
add
pushf
mov
lret
sar
cltd
fildl
xchg
push
xlat
fidivrs
jg
inc
xor
xchg
dec
pop
ret
push
int
mov
pusha
cs
cmp
sub
stos
push
push
or
in
dec
arpl
sbb
cmp
leave
add
jae
cmp
mov
sub
rcrl
sti
fidivrs
idiv
dec
mov
jbe
jnp
fwait
icebp
sbb
int
rorl
int3
sub
lock
imul
out
add
aam
out
mov
or
adc
push
arpl
sub
fdivr
call
loopne
cmc
adc
xor
popf
vpcmpeqd
jmp
cltd
sbb
popa
in
jne
dec
jns
aaa
idiv
lahf
push
and
cli
shlb
psllq
xchg
dec
int3
dec
sarl
aas
rcrb
pop
test
mov
and
dec
add
cmp
sub
sbb
jb
xchg
sub
xchg
jne
stos
add
cltd
pop
push
push
cmp
jl
lea
xchg
or
or
push
popa
xor
xchg
inc
push
sti
push
mov
inc
and
popf
sbb
sub
pop
mov
rcrb
int
popf
inc
iret
imul
mov
mov
dec
insl
mov
fs
jl
xchg
add
decb
fnstenv
sbb
jg
loop
inc
popf
cli
neg
mov
sahf
sbb
xchg
sub
sbb
jne
out
cmp
in
int
sub
push
insb
push
push
adc
cld
jno
mov
fcoms
leave
push
cmp
pusha
cvtpi2ps
sbb
subb
mov
ljmp
cmp
sbb
cmp
cmpsl
cmp
popf
sbb
pop
fisubrl
stc
cmp
movsb
mov
fbstp
jb
xchg
mov
loop
inc
mov
mull
push
xor
aas
icebp
divb
cwtl
cmp
xchg
ss
cmp
outsb
sahf
lcall
gs
mov
int3
test
inc
sbb
fcmovne
pop
add
or
xchg
adcl
and
sub
xorl
sbb
xchg
push
mov
ret
mov
cmp
jmp
mov
fadds
loopne
fldl
mov
sub
lods
nop
ljmp
icebp
mov
cmovp
and
ror
ja
xor
pop
outsb
scas
cmp
fwait
xchg
aas
repnz
scas
push
inc
mov
or
push
pop
sub
jle
scas
cltd
lret
fisubrs
sub
jg
stos
jb
out
test
nop
test
cmpsl
mov
cmp
mov
cwtl
mov
xchg
add
outsb
stos
insb
loop
add
roll
aad
and
pop
dec
cmp
mov
or
sub
push
mov
xor
inc
sbb
mov
inc
adc
push
movntq
out
add
fsubr
aaa
call
sbb
out
sbb
inc
icebp
sub
cwtl
push
lds
xor
jecxz
or
loop
inc
or
stos
mov
push
dec
call
cmp
test
outsb
add
fs
stos
push
push
mov
in
add
pop
cmp
and
shlb
lds
js
in
inc
jmp
jmp
sbb
jle
add
xorl
sbb
stos
mov
popa
dec
xchg
test
sub
xor
adc
repnz
andl
inc
push
mov
mov
popa
push
lret
loop
cmp
popa
pop
cld
sub
sub
xor
rcll
sub
mov
popf
loopne
out
sbb
xchg
pusha
ss
mov
shlb
iret
fsubrs
and
cmp
imul
adc
pop
inc
or
fcomi
mov
test
aas
mov
in
aad
xor
rcl
gs
int
stos
lock
arpl
test
shrb
and
xor
push
or
cmp
int
sbbb
shll
jno
xor
insb
sbb
push
dec
rcrl
aas
lcall
jmp
pop
aaa
outsl
pusha
push
mov
xor
and
xchg
jg
call
sbb
cmp
fwait
inc
or
das
cmp
mov
cltd
dec
inc
and
add
add
scas
loopne
mov
repz
jge
shlb
xchg
fwait
stc
xchg
setne
mov
in
pop
push
fdivr
cmp
jecxz
shrl
sub
dec
jo
sbb
test
jbe
xchg
jp
fs
pop
jo
cmc
add
cmp
out
xchg
mov
xchg
add
cmp
stc
insl
insl
in
aas
add
repz
out
hlt
loopne
adc
add
mov
lgs
xlat
mov
push
push
andps
xor
add
lods
and
xor
push
popf
test
lods
jecxz
push
mov
mull
mov
popf
xor
cli
enter
loopne
aaa
jmp
lahf
cld
shl
jno
shrl
and
pop
jbe
or
add
fucomp
scas
sub
adc
negb
add
pop
mov
js
cmpsl
mov
add
mov
pop
or
in
test
fucomp
rorl
pop
ja
jecxz
ss
add
lea
mov
adc
push
aas
aam
push
or
mov
push
pop
pxor
xchg
arpl
fs
popf
cmpl
pushf
aas
cmpsb
jl
iret
shll
lret
aas
fwait
out
test
and
enter
test
jl
fldt
sahf
mov
mov
add
in
xlat
mov
or
leave
std
pop
cmp
jp
xorb
push
cmp
mov
cmp
jecxz
pop
jne
fnsave
xor
jae
cmpsl
pop
mov
and
mov
movsb
or
loopne
sub
mov
test
int
pop
or
movsl
and
das
or
sub
icebp
pop
seto
lods
mov
nop
call
sub
fwait
adc
xchg
ret
push
loopne
pop
lret
scas
push
enter
add
outsl
out
push
inc
sbb
loop
jo
mov
rcl
int3
jno
sbb
inc
bound
push
jge
aaa
dec
sbb
or
pop
or
lcall
mov
subl
add
inc
pop
xchg
out
push
adc
rol
or
jp
jmp
push
pop
popf
aad
xchg
imul
stos
sti
mov
xchg
and
fadd
jne
mov
adc
sti
sbb
cmp
fld
je
in
cmpsb
xlat
dec
pop
pusha
mov
pop
rcrb
adc
das
and
sub
dec
adc
dec
sub
push
inc
lea
fisttpl
out
adc
cmpsl
cmp
inc
aas
jb
lahf
add
loop
test
lahf
dec
mov
xchg
ss
pop
ljmp
and
imul
xchg
cmp
jne
repnz
fistpll
cmp
cwtl
fmul
sub
dec
icebp
std
inc
cwtl
gs
ret
fs
sar
sub
test
rorl
mov
icebp
sub
aas
bound
xchg
push
xor
iret
fdivs
jp
sbb
sub
outsl
push
jp
mov
sub
out
stos
dec
ret
fwait
xor
jg
push
fwait
sbb
bound
movsl
fldt
jp
push
mov
aad
pop
cmp
mov
movsb
jg
mov
push
ds
mov
popa
imul
and
adc
add
jl
pop
xor
dec
xchg
cmc
sarb
stos
outsl
inc
cmp
movsb
inc
mov
pusha
pop
inc
xor
or
sub
dec
out
sbb
lahf
add
push
jl
mov
pop
or
xor
xor
jmp
jnp
dec
loop
shlb
stos
inc
adc
sub
cs
and
fs
dec
adc
ss
imul
push
lea
mov
cld
mov
mov
mov
pop
or
sarl
mov
das
bound
sahf
push
dec
bound
lock
adc
add
cmp
stos
mov
cmp
jle
test
out
imul
fimull
mov
popa
shrl
fisttpll
scas
pop
in
das
inc
push
negb
and
outsl
aam
xchg
jle
mov
add
adc
cs
leave
les
out
fs
popf
enter
in
repnz
pop
jmp
jl
std
cmc
or
mov
xchg
sbb
leave
jp
mov
arpl
scas
push
inc
jle
icebp
inc
aam
cmp
jne
pusha
mov
and
cmpsb
por
movsb
lea
sbb
push
loopne
inc
cs
xor
mov
test
shr
pop
inc
fiaddl
push
push
out
jl
sbb
cli
jge
mov
ljmp
pop
out
outsl
pushf
cmc
outsb
js
out
lret
insb
enter
xchg
lcall
lock
cmpsb
lods
push
cmpsb
enter
or
ds
jae
scas
adcl
mov
push
scas
add
jno
add
rorb
push
jbe
sub
xorb
in
lods
lret
scas
mov
sub
fldcw
divl
inc
mov
mov
fs
lds
inc
and
push
sub
stc
xchg
or
ja
test
movsl
int
mov
leave
mov
add
pop
push
loop
or
into
add
lea
dec
or
mov
ret
sub
cmp
out
pop
adc
jno
mov
xchg
jb
shrl
cmp
sub
pop
add
push
xor
int3
aad
pop
scas
push
and
cmp
jo
andb
xor
lods
lea
shl
mov
shrb
xor
push
and
jbe
mov
xor
mov
arpl
mov
sub
negl
mov
clc
imull
pop
inc
cli
add
pushfw
or
xchg
inc
mov
mov
scas
push
pop
sub
bound
popf
dec
gs
stc
leave
or
adc
xor
adc
xchg
add
xchg
mov
insb
aad
inc
mov
sub
in
mov
or
sbb
or
pop
dec
mov
lods
and
dec
push
dec
jo
lods
rclb
addb
xchg
pop
lret
xchg
add
lea
jge
jl
fwait
sbb
fnclex
jbe
mov
cmpsl
add
ja
sarl
mov
shl
jne
mov
lahf
and
int3
xchg
dec
mov
bound
jnp
loopne
adc
enter
inc
lds
rorl
repnz
mov
rclb
mov
dec
sbb
xchg
mov
int
into
in
out
mov
imull
fdiv
sahf
orl
vmread
popa
test
cmp
push
das
push
jge
push
shlb
mov
insb
push
and
sbb
xchg
xchg
mov
pop
push
loop
ficompl
inc
inc
cld
and
les
iret
cmp
sub
ret
pop
mov
push
outsb
out
mov
jp
in
scas
pop
nop
shlb
mov
fildll
inc
mov
sbb
pop
push
lods
jne
call
or
jne
adc
fs
fdivrl
inc
outsb
mov
xor
pop
ljmp
jno
mov
inc
dec
in
xor
lcall
mov
es
xchg
cltd
jl
pop
aam
and
sahf
insl
mov
push
and
sub
ljmp
loop
cmpl
push
test
mov
nop
inc
xor
test
or
pop
jno
add
test
sbb
jnp
test
and
ja
mov
sub
in
mov
or
cmp
adc
je
int3
out
cld
and
push
ljmp
cmp
xor
sbb
adc
popa
out
mov
clc
int3
cmp
xor
jnp
filds
aam
push
pop
pop
sbb
jecxz
fldt
imul
jmp
test
bound
aas
cwtl
test
movl
fcmovbe
fists
mov
mov
lea
outsl
mov
rorl
mov
insb
pop
push
cli
mov
ret
daa
std
popa
mov
push
push
add
ret
bound
sti
push
jns
ljmp
xchg
inc
repz
icebp
flds
movsb
daa
pop
aad
push
loope
int3
mov
lret
je
pop
mov
push
add
push
push
xchg
ds
stos
dec
je
xchg
imul
sti
or
push
call
mov
jbe
cs
rcll
jbe
sub
fcomps
loope
jb
ljmp
jne,pn
test
or
jge
mov
xor
push
jmp
jecxz
lahf
gs
ss
lret
divl
std
and
adc
mov
out
sbb
scas
aaa
lahf
mov
faddp
mov
test
xchg
mov
ljmp
and
and
das
mov
ret
sub
je
stos
and
fnstcw
fdivs
push
dec
ret
push
mov
xlat
push
lcall
mov
jb
ss
push
aad
rol
adc
push
flds
xchg
mov
cmp
rolb
int
ret
push
lea
mov
pop
xchg
cmc
and
aas
inc
ret
pushf
test
in
shlb
and
add
inc
pop
lahf
fs
xchg
in
leave
jbe
push
std
outsb
scas
mov
icebp
fisubs
subl
push
pop
sbb
call
push
push
movsb
ret
rcrb
push
jbe
fcom
repnz
cmp
nop
in
pop
sbb
push
jne
dec
pop
lcall
mov
lret
cmpsl
fildll
aad
iret
push
rcll
pop
lahf
xchg
stos
sub
test
xchg
jnp
nop
add
adc
cltd
in
and
bnd
dec
lret
jnp
mov
mov
stc
loope
inc
repnz
mov
in
mov
stos
jle
fcomps
in
stos
sub
and
loope
out
sahf
push
sbb
aad
and
push
clc
xchg
lret
jle
sub
in
jae
ffreep
pop
aam
push
xor
int3
jne
sub
add
and
dec
xor
xor
sub
lds
sub
mov
jecxz
enter
xchg
push
push
sbbl
popf
push
xchg
fcoms
repnz
insb
sti
icebp
push
and
or
and
nop
notb
pop
xchg
adc
neg
ret
stos
rorl
jge
test
fistpll
ficoml
add
add
or
jg
mov
fisttpl
das
adc
and
test
lcall
push
sub
leave
mov
mov
sub
ljmp
gs
dec
and
jl
cmp
xor
add
fisubrl
loopne
aas
test
lods
or
cmp
sub
lahf
negb
add
push
sbbl
lds
inc
lods
iret
xor
inc
addr16
add
nop
cld
fistl
push
xchg
arpl
lods
mov
imull
mov
std
lret
test
in
cmp
or
stos
aad
out
clc
adc
and
jno
xchg
out
das
jmp
rcll
aam
lret
or
testb
jecxz
out
mov
mov
outsb
loop
or
in
aaa
mov
pop
pop
xchg
push
jb
and
xchg
pop
into
mov
iret
int
aaa
sbb
dec
das
and
roll
loope
and
adc
jg
nop
mov
mov
mov
dec
add
repnz
mov
or
pop
sub
xchg
add
fnstcw
test
adc
xchg
stc
insb
mov
roll
push
repz
arpl
mov
cmpsl
mov
je
out
cmp
divb
cmp
cmp
out
adc
mov
mov
push
sahf
inc
inc
es
jnp
pop
out
sub
scas
pop
and
jp
xor
test
aaa
int3
dec
xor
dec
jbe
push
mov
xchg
mov
movsb
test
xor
popf
push
xchg
fnsave
pop
imul
jno
paddq
setp
cmpsl
in
mov
sbb
stos
sahf
mov
movsl
mov
cld
add
ficoms
cmp
inc
sub
mov
jae
fdivrl
add
rcrb
cmpsl
add
cmp
dec
xor
push
fiaddl
test
fildll
popa
mov
jmp
mov
idivb
sbb
and
aaa
loopnew
or
inc
push
pop
dec
mov
cmpsl
ret
dec
int3
jge
mov
ja
xor
xchg
push
pop
sbb
cwtl
mov
stc
sub
ret
lods
sub
mov
dec
insb
or
popl
pop
mov
fwait
stc
mov
pop
mov
jnp
ljmp
and
dec
mov
pop
cli
jp
idivl
ret
push
fwait
mov
push
add
popf
hlt
push
cmp
lret
ret
ljmp
adc
ljmp
pop
scas
inc
xchg
add
sbbb
mov
add
pushf
xchg
mov
sub
mov
sub
out
mov
scas
sub
add
jb
movb
sbb
les
es
xchg
insb
add
ret
jl
inc
mov
fdiv
stc
fidivs
or
jno
cltd
pop
pop
xchg
xorl
pop
pop
xchg
sarl
xor
out
bound
inc
xor
or
pushf
ds
mov
cmpl
addr16
sarb
dec
adc
jbe
mov
xor
xor
xchg
jp
lea
idiv
fstpl
sub
movsb
popa
movsl
fidivs
subl
add
insl
jle
adc
ss
sbb
dec
jae
push
popf
xchg
push
or
mov
dec
ja
and
pop
out
shll
fs
xor
sbb
adc
jge
int
out
imul
adc
lret
mov
push
mov
mov
fcmovnbe
je
push
mov
push
test
sub
rcll
ljmp
dec
fsubs
xchg
sub
lods
cmp
pop
cmp
insl
inc
xorl
das
into
fstp
push
mov
push
lcall
std
mov
inc
or
jmp
das
movsl
call
lods
sub
cmp
xor
jl
lds
loop
jl
push
push
mov
imul
adc
adc
ja
sahf
sub
std
out
cli
mov
inc
push
xor
sbb
mov
movsl
push
add
and
inc
repnz
inc
pop
mov
testl
add
and
sbb
add
rolb
mov
jecxz
je
inc
cwtl
sahf
xor
cld
dec
jge
mov
fists
and
ss
mov
xchg
lods
xchg
das
jns
mov
inc
outsb
rol
mov
aas
aas
scas
hlt
or
and
jb
lahf
sub
std
sbb
sub
cmpsb
sbb
inc
push
ljmp
jle
jnp
jl
movsb
mov
ja
sub
sbb
cmpsl
xor
mov
bnd
insl
push
mov
or
fisubs
push
push
xlat
fsub
iret
and
mov
mov
gs
sbb
imulb
mov
jecxz
sub
dec
test
add
setae
clc
cmc
or
push
outsb
push
in
shll
sbb
das
mov
xchg
loop
ja
inc
cmp
ja
in
xchg
data16
xor
add
outsl
test
or
and
pop
xor
popf
mov
push
cltd
insb
mov
mov
popa
sbb
nop
xchg
adc
xor
addr16
shr
push
addr16
mov
and
pop
mov
movl
ja
shr
ret
cmpsb
dec
sub
mov
cmp
stc
scas
rcr
push
pusha
cmpsl
negl
fsubrl
cmp
je
stos
testb
xchg
sub
add
and
cmp
mov
xor
mov
inc
add
lods
jnp
adc
call
mov
das
daa
and
push
jecxz
jecxz
test
mov
sar
hlt
cmp
adc
push
adc
inc
mov
adc
xlat
xlat
imul
mov
jnp
into
xchg
test
lock
xchg
mov
arpl
or
rcll
xor
std
jmp
js
lret
leave
outsb
add
xorl
xchg
icebp
enter
or
aaa
cmp
ss
push
fnstenv
cs
jne
icebp
popa
add
int
test
ret
test
sbb
xchg
loopne
push
pushf
mov
jae
add
xor
outsb
sbb
stos
decl
out
repnz
dec
lods
test
adc
icebp
or
lcall
lret
inc
mov
and
push
in
push
outsl
add
mov
ds
pop
push
in
fildl
sahf
or
fwait
dec
imul
dec
dec
sbb
dec
inc
test
aaa
mov
les
mov
call
push
clc
repnz
dec
dec
insl
int
mov
mov
sub
jmp
adc
sbb
mov
test
xchg
push
scas
jmp
push
ja
xchg
sub
scas
mov
mov
dec
cmc
xor
lea
addr16
or
mov
push
test
fbld
cmp
fsts
pop
mov
xchg
xor
adc
lea
inc
push
in
xchg
pusha
inc
es
dec
popa
fs
sub
fnstcw
test
xchg
mov
push
mov
jmp
adc
jmp
sub
jae
jmp
dec
insl
out
jne
mov
jmp
push
sbb
adc
stc
lret
sbb
mov
xor
pop
xor
inc
adc
or
mov
shr
pop
mov
out
add
jne
pop
dec
sahf
pop
fwait
xchg
mov
xor
adc
xor
cmc
push
jnp
iret
movsb
out
in
mov
adc
push
fnsave
mov
mov
push
push
mov
nop
call
jge
cmpsl
loop
jg
dec
push
xor
adcb
lcall
mov
xchg
jmp
xorb
lock
cmp
iret
outsl
dec
jge
cmp
addr16
test
adc
jnp
out
xchg
sub
sarb
push
push
ljmp
fwait
dec
in
xchg
mov
push
xlat
and
jp
pusha
notl
jl
sub
loope
jo
int
loop
cs
cs
xor
into
mov
add
mov
insl
hlt
dec
shrb
xor
dec
repz
sbb
pop
or
mov
jle
jl
in
scas
push
mov
dec
mov
testl
cli
and
test
jg
insb
test
popf
xchg
mov
adc
sbb
dec
loope
mov
push
xchg
jge
add
pop
stos
add
jmp
stc
leave
xchg
shlb
add
nop
sbb
lcall
lret
add
rorb
jne
push
call
adc
jecxz
shll
pop
stos
nop
loop
fstps
pop
sarl
and
nop
call
sbb
shll
in
or
push
fcomip
cmp
xchg
dec
mov
cmp
sbb
fcompl
jo
dec
inc
dec
xchg
jmp
int3
dec
addl
xor
dec
jg
cwtl
arpl
mov
fwait
hlt
add
rcll
jle
les
insl
mov
xor
pushf
lahf
cmp
cmp
hlt
inc
dec
and
out
add
test
jge
mov
and
mov
filds
pushf
sbb
addb
call
jg
push
rorl
cmp
and
cwtl
add
shrb
mov
lods
sub
xor
jae
inc
flds
fsubr
ja
xchg
mov
jmp
xor
xor
push
adc
pusha
repz
jecxz
hlt
mov
ds
call
iret
inc
scas
mov
xor
das
sub
push
adc
repz
negb
sub
test
imul
rcl
mov
push
hlt
inc
out
mov
lock
sub
xor
push
dec
out
es
adc
pop
pop
and
out
fstpl
jne
inc
adc
xchg
add
cmpsl
jmp
lcall
xchg
adc
xor
mov
fcmove
jb
es
int
popw
dec
jae
mov
dec
cmp
out
sti
arpl
fiadds
data16
mov
add
dec
test
enter
scas
in
cmp
test
jecxz
orl
push
jge
add
mov
sbb
push
sbb
test
imul
lods
sbb
stos
cmp
inc
js
stc
mov
pop
push
sub
inc
mov
jo
dec
aas
or
adc
dec
cmp
shlb
jmp
pop
inc
aaa
sub
pop
stc
inc
fidivrs
dec
and
dec
pop
or
inc
jmp
fisubs
out
pop
xchg
repnz
test
xor
pop
xor
mov
movsb
jg
lds
push
mov
dec
pop
popa
loopne
dec
lock
clc
cmp
pusha
sti
cmp
jge
dec
inc
outsb
inc
and
pushf
stc
out
orb
xchg
mov
or
loopne
add
aad
repz
enter
aad
pop
lds
push
xchg
in
sub
sub
outsl
insl
jno
repz
push
fld
ljmp
inc
mov
ret
adc
idivl
pop
jge
mov
dec
outsb
out
mov
into
xchg
aad
imul
gs
data16
sbbl
mov
or
or
int
ret
call
jl
clc
ret
xchg
sub
cld
lret
xchg
and
in
xchg
loop
fs
mov
and
es
out
shrl
xchg
clc
xchg
insl
aaa
lahf
test
push
repnz
add
push
xlat
ja
cmp
add
xor
rorb
or
mov
fnstcw
movsb
arpl
popa
fmul
adc
push
arpl
leave
sub
cmp
les
or
mov
negl
aaa
gs
mov
mov
mov
fiadds
jg
nop
push
lahf
gs
pushf
aam
rorl
imul
fisttps
ljmp
pop
movsb
insl
lods
pop
xor
mov
clc
mov
int
ror
push
mov
jg
les
mov
add
fiadds
or
stos
sbb
jae
sti
mov
push
aas
fs
xor
lods
pop
inc
leave
nop
sti
jne
lds
test
sbb
leave
dec
and
cmp
push
cmp
and
lret
and
xchg
test
subl
push
jns
push
xor
cmpsb
movsb
pop
in
and
leave
cwtl
mov
mov
push
sbb
pop
popf
out
fisubrs
into
test
sbb
ret
ds
mov
fistpll
cmp
mov
push
or
in
sub
insb
mov
push
add
sub
jge
xor
enter
adc
jecxz
lods
add
jp
sub
iret
aad
sub
jle
int
aaa
cmp
fistpll
push
arpl
lret
outsb
sub
jne
aad
fsubrs
inc
mov
or
into
popf
or
xor
adc
adc
fisubl
test
test
ds
sub
mov
xlat
fcmovnb
add
jo
sbb
out
loope
in
lret
dec
fs
jg
movsb
sub
adc
addr16
or
pop
dec
imul
rorb
lret
or
xor
xchg
pop
xchg
jae
jbe
xchg
mov
push
sub
push
lret
xchg
stc
aad
sub
cli
test
lds
sahf
or
cmp
fs
lret
pop
cmp
fstps
inc
mov
addr16
dec
mov
sub
sub
cld
cmpsl
enter
dec
dec
jg
mov
cmp
in
jp
call
mov
xor
icebp
lret
cmp
xchg
shlb
sbb
mov
pop
push
out
je
das
das
loopne
in
inc
fwait
stc
sbbb
dec
outsb
das
pop
mov
mov
popf
jge
mov
jmp
sbb
push
femms
aad
dec
sbb
mov
dec
addr16
push
notl
adc
jmp
cltd
sti
sub
fcoml
mov
imul
je
xchg
sbb
mov
movsl
jge
or
pop
and
or
ljmp
fldcw
fdiv
cmpsl
and
inc
insb
push
cmpsl
sub
and
pop
call
xchg
cmp
adc
pop
inc
and
and
test
pop
and
sti
or
add
fdivs
ljmp
leave
mov
xor
push
mov
and
imul
idivl
mov
into
dec
add
push
in
stc
cmp
loop
mov
xor
lea
mov
pop
adc
ss
mov
sub
stos
divl
add
pop
addr16
fildl
lock
sahf
stc
push
mov
fcmovu
adc
inc
push
push
jl
pop
fucomi
xor
and
pop
roll
mov
lods
jl
loope
ret
dec
mov
cmc
fidivrl
mov
jns
stos
sbb
hlt
jg
and
loopne
cltd
faddl
mov
scas
imul
je
xor
and
inc
push
mov
push
sbb
dec
cltd
adc
repnz
adcb
leave
ss
add
adc
lock
and
and
jle
cmp
clc
mov
rorb
push
pop
out
pop
xchg
jmp
rorl
fbstp
iret
pusha
std
sbb
mov
cmp
jns
shrl
repnz
fwait
or
enter
mov
xor
mov
mov
fcmovnu
std
out
jns
xchg
xor
xchg
pop
jge
jo
ds
rcrb
adc
jmp
dec
jno
push
insb
cmp
bound
cs
imul
add
enter
mov
dec
dec
mov
xorb
lahf
pop
arpl
sbb
ds
cmp
icebp
inc
iret
scas
mov
mov
or
pop
cmp
in
ret
dec
cmp
test
sti
mov
hlt
inc
mov
xorl
stc
pop
dec
int
lea
fisttpl
sub
push
in
pop
mov
push
out
adc
lock
gs
test
loop
and
cmp
pushf
jecxz
sti
addr16
sahf
repz
fwait
add
ficoms
push
xor
dec
roll
xchg
and
push
sbb
add
inc
shl
push
pop
pop
or
movsb
push
pop
push
bnd
loopne
and
int3
pop
inc
mov
andl
mov
js
lods
lret
or
nop
dec
sti
mov
sbb
and
sub
xchg
imul
xlat
cmp
add
popa
arpl
in
xchg
sti
and
adc
inc
xchg
dec
aad
sbb
sbb
adc
iret
mov
or
cmp
xlat
jecxz
cmp
aaa
enter
ss
mov
push
jl
xchg
cmp
push
in
ds
mov
push
jmp
imul
push
rolb
ss
and
mov
sub
leave
insl
in
or
daa
ret
arpl
sub
ficomps
mov
sub
add
push
sbb
test
adc
es
insb
adc
lea
mov
cs
mov
xchg
bound
lahf
mov
and
cmp
pop
jle
cmc
ss
cmp
ds
jle
xorb
sbb
mov
into
in
hlt
and
jns
sahf
lahf
push
sbb
mov
mov
lret
jo
jmp
xlat
sbb
cs
invd
pop
mov
out
lret
xor
xchg
js
jb
inc
xchg
pop
push
push
pop
push
out
xchg
out
pop
imull
mov
enter
and
or
dec
scas
clc
jno
outsb
in
pusha
pushf
adc
sbb
xlat
lds
adc
cwtl
mov
mov
sti
hlt
test
jmp
ljmp
movsb
sahf
cmp
pop
ss
mov
push
cmpsl
inc
jmp
cmp
pushf
mov
xchg
inc
cs
shlb
xchg
jecxz
clc
or
repnz
lods
gs
ret
dec
ds
mov
bound
push
xor
xchg
push
xor
shlb
push
mov
cmp
push
mulb
mov
xchg
jp
pop
stc
lods
imul
ret
pop
inc
out
mov
sub
sub
jne
jnp
inc
pop
jns
imul
popf
jmp
add
pop
jg
movsb
xchg
cmp
pop
adc
and
sti
jne
cmc
sub
enter
movsb
jg
in
aad
dec
mov
or
mov
dec
mov
pushf
or
pop
shl
arpl
orl
cld
push
mov
jae
push
pop
clc
es
cmp
dec
ljmp
push
incl
push
movsl
xor
push
daa
adc
lret
arpl
mov
faddl
dec
lret
outsl
aas
ficompl
or
mov
pop
add
in
dec
stos
pop
mov
jle
icebp
ret
into
lcall
jae
imul
es
xor
ret
std
cmp
sbb
push
in
cmc
fmulp
sub
fwait
jae
clc
mov
fcoml
mov
pop
ror
aam
bnd
cmpsl
pusha
rcr
mov
hlt
adc
add
mov
sbb
test
shl
jnp
dec
or
daa
or
mov
cwtl
lahf
jbe
aaa
enter
imul
mov
and
mov
negb
cs
xor
or
xchg
fbld
fnstcw
imul
dec
jmp
in
sbb
jle
push
push
mov
mov
xor
js
xor
cmp
sbb
push
sub
roll
adc
lahf
ret
lcall
psubd
flds
xor
loope
mov
dec
sti
pop
inc
cmp
std
daa
inc
fs
clc
cmp
ds
jb
lahf
test
stos
ds
mov
rorl
add
loopne
mov
call
pushf
fists
xor
addb
xchg
add
pop
xchg
mov
push
add
xchg
push
cli
mov
imul
push
pop
aas
test
orb
pop
xor
lds
imul
rcll
sub
test
push
jnp
mov
mov
dec
ljmp
mov
cmp
xchg
sbb
xchg
jne
xchg
jb
jg
pushf
in
xor
pop
insl
aad
xorb
dec
mov
test
sub
fcompl
pop
loop
mov
push
adc
and
xor
cmp
clc
dec
popf
sti
not
lret
insl
loope
sbb
sti
es
rcrb
mov
enter
xlat
adc
sbb
mov
cmp
imul
jle
cmc
cli
push
adc
push
push
inc
fildl
scas
dec
add
inc
sahf
enter
sbb
mov
out
sbb
fldt
mov
push
popa
mov
mov
jge
mov
mov
adc
pop
cmp
incl
pushf
push
cmp
cwtl
push
pop
lods
xchg
sub
enter
cmp
insb
lods
shr
push
push
jno
sub
push
or
test
lods
jg
jb
cmpsb
test
xor
adc
shrb
sarl
dec
dec
or
js
xchg
mov
out
cmp
jp
xchg
mov
adc
mov
jmp
xchg
cltd
cmp
add
push
fsubr
add
cmp
mov
call
jbe
jl
xchg
aas
subb
xchg
sub
rorl
outsb
push
adc
mov
or
jns
lret
adc
dec
insl
lcall
decb
xchg
mov
int3
inc
cwtl
ror
mov
lds
inc
push
adc
call
adcl
mov
bound
adc
icebp
sti
out
cmpsl
aas
cmc
cltd
xchg
inc
insb
sahf
fstl
outsl
jg
sbb
fisubrl
jecxz
enter
push
ss
sub
jecxz
push
leave
inc
sbb
xchg
jp
fwait
dec
push
cltd
and
jl
jne
fdivrs
xor
hlt
push
xor
rcrl
xlat
push
sbb
cmpsl
jnp
pop
sbb
dec
jae
notl
mov
and
mov
cwtl
xchg
insb
ficoms
fstp
push
mov
pop
xor
in
add
jecxz
mov
notl
jnp
popa
adc
movsb
jmp
scas
shr
insl
xor
stos
cmp
shlb
sbb
cmp
sub
cmc
jmp
or
push
jo
fldl
or
cmp
test
adc
nop
cwtl
mov
in
xor
hlt
jg
bound
out
popf
ret
inc
push
jle
xor
adc
dec
lcall
iret
nop
push
push
ds
outsl
fdivrp
xchg
int3
push
je
jg
pop
mov
cmpsb
pop
mov
mov
and
dec
pop
out
test
jne,pt
push
xor
jmp
jnp
nop
movsl
sub
addr16
push
out
leave
daa
mov
sti
jg
and
mov
xchg
or
mov
lahf
mov
jl
test
sahf
mov
sbb
in
out
cmp
loopne
jg
sbb
mov
shlb
push
arpl
add
sarl
push
and
ljmp
fcom
in
leave
cmp
dec
xchg
test
inc
push
lretw
pop
cmp
les
shlb
adc
ss
in
jp
lock
and
loop
in
push
lods
pop
enter
imul
sbb
mov
js
enter
mov
enter
xor
inc
push
inc
or
adcb
lahf
cmpsb
ja
add
leave
sti
je
and
fs
int
pop
xchg
inc
dec
pop
jns
mov
add
andb
arpl
pop
arpl
movsl
std
in
fsts
repnz
lahf
pop
adc
out
movsl
push
pop
jo
cwtl
push
xchg
adc
ljmp
jg
aam
insb
cmp
dec
mov
pop
cmp
jge
or
xor
jg
add
push
aaa
jo
pop
xchg
adc
jo
inc
pop
jle
testb
mov
jb
int3
clc
cmpsb
stc
add
sbb
jp
or
cmp
cmpl
rorl
pop
subb
or
cmpsb
mov
dec
inc
movlps
pusha
jns
test
cli
mov
in
les
out
andl
mov
dec
inc
testl
mov
aaa
ljmp
adc
push
popa
subb
lret
dec
push
push
mov
lea
add
cmpsl
mov
repnz
add
fdiv
bound
add
and
test
sub
ja
or
mov
dec
sub
mov
js
insb
repz
aas
jne
mov
sahf
lea
xor
dec
decb
stc
mov
jge
aas
clc
lahf
mov
test
insl
mov
ja
movl
mov
jne
popf
sub
in
add
mov
ljmp
loop
loopne
test
lcall
mov
mov
fcmovne
adc
pop
inc
jg
cmp
outsl
scas
xchg
mov
andb
push
daa
pop
dec
int3
lock
inc
aaa
pop
out
insl
jp
addr16
out
cmp
push
xor
push
fmul
leave
les
and
mov
sbb
fadd
sahf
mov
pop
ss
iret
jl
or
cmpsl
push
xchg
xchg
int3
addr16
js
cmpsl
pop
dec
dec
add
popa
or
adc
dec
in
or
movsl
inc
push
int
adc
std
inc
std
add
jnp
push
aad
dec
aad
sti
sbb
pusha
mov
or
and
and
lret
movsl
clc
sarb
in
mov
popa
shrl
sahf
pop
out
inc
adc
pop
fistl
sub
cmp
fs
lcall
dec
push
and
xchg
inc
lods
xchg
sub
jmp
aaa
sti
and
dec
push
cmp
call
insl
adc
aam
rcrb
mov
loop
fadds
cltd
mov
nop
push
inc
in
mov
lret
adc
mov
mov
shll
lret
pop
std
pop
adc
or
lret
push
call
xchg
es
cmpsl
enter
xor
xchg
xchg
pop
mov
sub
rorb
mov
cmpb
xchg
push
loope
scas
pop
push
enter
ret
lock
fiadds
movb
mov
arpl
insb
push
mov
fcmovbe
fiaddl
mov
or
sti
cmove
inc
xor
imul
add
in
jl,pn
outsl
adc
dec
jmp
sbbl
inc
add
adc
shl
jnp
mov
xor
mov
mov
jae
push
cmp
lcall
loop
cwtl
add
mov
cs
push
jbe
mov
cmc
lods
lds
sti
shlb
xchg
std
roll
adc
cmp
jno
mov
scas
dec
das
cli
enter
shll
dec
scas
cmc
xchg
push
in
ret
adc
xor
icebp
cmp
dec
mov
ret
inc
pop
push
jecxz
lcall
mov
pop
push
lds
adcl
stos
int
xlat
ret
pop
jl
iret
lods
cmpsb
cli
sub
dec
mov
and
std
sahf
jmp
loop
mov
int
inc
or
mov
push
mov
inc
push
xor
dec
mov
fisubrs
lcall
mov
enter
test
lcall
insl
out
pop
push
push
xor
add
js
mov
add
inc
lcall
adc
out
jecxz
adc
inc
aaa
inc
lret
mov
in
cmp
inc
dec
xchg
jo
push
std
ja
and
mov
mov
cltd
push
mov
js
xchg
pop
cmpsb
jg
stos
nop
sbb
sub
xchg
mov
ficomps
jno
mov
push
nop
clc
scas
mov
cmp
pop
aad
stos
xlat
xchg
mov
mov
and
inc
and
mov
mov
cs
aas
add
dec
mov
cwtl
fcoms
pop
adc
sub
das
xor
ds
mov
mov
inc
int3
mov
lahf
sarb
ss
cmp
cwtl
fdivs
js
dec
cmp
pop
rorl
ret
dec
pop
jbe
mov
repz
bound
adc
pop
mov
lcall
mov
inc
mov
dec
pop
aaa
in
adc
pop
loop
pop
inc
pop
pop
nop
jo
jb
scas
mov
push
pop
ds
or
sbb
xchg
xor
jl
scas
adc
data16
jg
xchg
adc
hlt
cmp
sub
mov
adc
mov
ds
aad
cs
test
mov
imul
into
pop
insb
imul
in
loopne
xor
jecxz
jp
dec
scas
lret
shll
fmul
mov
in
xor
enter
inc
int
into
lods
std
cmp
add
test
push
call
inc
std
jb
jp
dec
call
movsl
mov
das
jecxz
pop
jg
stos
sub
mov
jle
sbb
lock
fsub
xchg
pop
mov
dec
arpl
push
cmpsb
sub
cmpsb
ror
cmpsl
sbb
xor
cli
or
or
mov
cmp
sbb
adc
pop
shlb
push
lret
mov
fidivs
lock
sbb
cmp
inc
add
mov
lret
lahf
pushf
out
mov
imul
les
adc
push
inc
sub
pop
cli
insb
sbb
xor
sti
stos
mov
aas
or
das
jg
adc
ret
mov
daa
mov
shll
out
lret
adc
add
ret
mov
push
add
into
jns
cmp
cmp
sarl
and
add
push
push
cmp
or
sbb
lods
mov
out
adc
std
dec
mov
call
xor
loop
arpl
ss
dec
xor
xchg
dec
pop
and
imul
shlb
xor
cmc
outsl
jl
xchg
sub
negl
lods
insl
int
cmpsb
orl
mov
jae
cmp
dec
aad
xchg
pop
inc
stos
lret
sub
adc
jnp
jl
sbb
loop
adc
cs
or
mov
mull
subb
sbb
jge
jge
arpl
jge
xchg
jae
add
mov
inc
push
imulb
ja
inc
mov
push
xchg
loop
xchg
sub
hlt
push
and
push
fisttpll
and
lods
pop
sbb
mov
jge
inc
rolb
and
sbb
icebp
inc
push
inc
bound
sub
adc
andl
popf
mov
aad
cltd
mov
pop
gs
cltd
dec
ss
lret
pop
in
inc
test
jnp
cs
mov
pop
pop
xor
and
sbb
mov
mov
popa
popa
fnstenv
ss
flds
jmp
std
mov
adc
out
ja
push
mov
test
mov
leave
outsb
mov
xor
mov
cmp
popf
cltd
test
dec
adc
mov
mov
outsb
mov
lcall
xchg
vpackssdw
mov
mov
imul
call
rcr
stos
int3
scas
jnp
inc
outsl
loope
and
xchg
hlt
mov
add
int
in
xor
movsl
adc
stc
sub
mov
gs
push
out
sbbb
sub
inc
dec
and
aad
xor
lret
and
mov
lret
sbb
xchg
rol
lea
pop
pushf
adc
repnz
mov
inc
in
loope
mov
andl
jb
sub
sti
bound
call
cmpsb
push
pop
adc
mov
or
mov
xchg
or
jecxz
notb
aad
push
cmpsb
rclb
jmp
mov
sub
lcall
cmc
addr16
cmpsb
dec
add
add
je
es
add
pop
rcll
mov
mov
pusha
movsl
lods
div
sbb
in
or
xchg
cld
adc
dec
mov
sub
int
aaa
sbb
dec
pop
subl
test
into
mov
xor
and
inc
sub
outsb
mov
push
sbb
push
iret
adc
dec
push
int3
int3
sub
xor
movsl
aam
inc
jb
sarb
leave
ret
inc
out
inc
jge
jmp
idivl
aad
push
es
jecxz
rcl
sub
lret
xchg
pushf
js
lods
sbb
and
enter
mov
and
jmp
cmp
mov
in
fsubrl
and
loop
imul
push
movsb
mov
adc
push
das
fsubrs
test
sub
xchg
subb
orl
pushf
cli
aaa
sti
sahf
pop
std
addr16
jns
enter
jle
int3
lcall
call
fldl
xchg
jmp
stos
imul
lea
cmp
jns
dec
mov
jae
mov
inc
xchg
inc
dec
push
pop
insb
in
mov
les
adc
fistl
sbb
fwait
outsb
push
clc
pop
test
dec
jl
lods
ljmp
roll
pushf
lahf
mov
sbb
bound
jle
call
cmc
negb
sub
mov
loop
iret
out
xor
adcb
je
xchg
das
insl
xor
out
sub
cmp
cmp
push
rorl
subl
loopne
scas
jbe
fsubl
daa
movsb
push
cld
sub
loope
stc
or
mov
mov
push
notl
fisubl
daa
cmp
outsl
inc
push
les
popf
mov
xchg
adc
inc
popa
jmp
lods
and
dec
fs
fnsave
data16
and
cmpsb
mov
inc
lahf
in
ljmp
mov
or
cmp
jp
jl
stos
cmp
push
xor
loopne
pop
aas
rcr
push
jge
mov
insl
insb
mov
in
addl
xlat
fcomps
cmp
sbb
insb
or
shll
mov
cmp
test
loopne
add
pushl
adc
fisubs
sub
cmp
inc
adc
xchg
dec
pop
xchg
mov
mov
sbb
sub
sbb
push
stos
lods
loopne
ljmp
fcos
fwait
xchg
stc
fyl2xp1
pop
and
loope
mov
mov
in
push
cmp
push
push
insb
jle
in
dec
mov
sarb
in
aaa
or
std
loopne
inc
ret
mov
arpl
xchg
mov
push
mov
int
not
jle
and
dec
adc
pushf
pop
loope
xchg
pop
psrlw
jb
iret
in
orb
push
dec
outsb
cmpsb
scas
adc
dec
xorl
outsl
adc
mov
mov
cmc
mov
adc
shr
movsl
dec
cwtl
push
adc
daa
push
xchg
add
js
push
push
pop
mov
stos
and
jbe
leave
and
jp
mov
or
jnp
into
lret
mov
js
and
and
push
dec
or
pop
mov
pop
jle
fldcw
xchg
std
adc
jns
hlt
iret
sub
sbb
out
mov
mov
mov
or
inc
or
push
popa
mov
cli
pop
out
scas
mov
outsl
xor
cli
test
or
inc
ja
les
out
pop
add
inc
jmp
or
leave
mov
lods
jp
js
shl
xchg
push
mov
adc
inc
add
mov
adc
xchg
mov
push
outsb
call
jle
cmpsl
jmp
adc
mov
out
loope
jle
outsb
dec
mov
mov
pop
lods
dec
and
iret
test
insl
out
xchg
mov
mov
inc
sub
out
push
push
push
dec
les
or
andb
out
xorb
and
pop
pushf
outsb
sub
adc
mov
aad
inc
lods
insl
mov
cmpsb
lahf
rcl
rep
into
push
push
sti
stc
insl
ljmp
cmp
std
rcrb
adc
lret
nop
xor
insb
cmp
cmpsb
sbb
lods
mov
push
push
fwait
mov
in
mov
xor
es
lea
mov
xchg
push
push
and
bound
add
lcall
jp
adc
xchg
aad
loop
xchg
ljmp
add
sahf
push
into
sbb
mov
mov
push
mov
cmp
pusha
call
loop
test
jne
and
lcall
xchg
push
push
adc
xchg
test
mov
pop
fcmovb
lods
sbb
int
mov
sub
xchg
cmp
push
ret
leave
xor
mov
fs
xor
jbe
pop
inc
pop
mull
push
mov
mov
out
insl
jb
or
jno
sti
pop
cmc
add
mov
push
div
icebp
fldenv
mov
jne
test
movsl
mov
shll
mov
xchg
inc
dec
neg
push
gs
mov
mov
inc
ret
push
cmp
jle,pn
xor
je
sub
lret
ret
pop
negb
or
cmp
dec
mov
xor
push
pop
jns
mov
and
or
sti
cmp
pop
iret
pop
std
arpl
xchg
mov
loop
addr16
scas
rcrb
decl
lods
sbb
stos
push
push
xchg
mov
dec
xchg
scas
mov
scas
mov
loop
push
push
fldl
out
mov
and
imul
sahf
inc
xchg
cmc
or
fwait
and
insb
jb
out
sbb
loopne
cmp
mov
loop
dec
scas
sbb
test
stos
and
stc
xor
push
sbb
shlb
ss
jne
dec
mov
fldl
into
push
mov
mov
aam
mov
jnp
xchg
movsb
push
mov
sbb
xor
fcompl
rcr
add
or
push
push
sti
cmp
sub
jmp
xchg
cmpl
jge
or
cmc
adc
jge
xchg
cmp
xor
push
shlb
and
xchg
and
fstpt
xor
lods
ret
mov
mov
xchg
pop
push
dec
vandnpd
frstor
xlat
stos
push
inc
lahf
jg
dec
out
push
push
in
test
and
movl
cmp
fiadds
fistps
fnstcw
dec
cld
shrl
shll
inc
in
inc
inc
popf
outsl
fwait
push
fnsave
lods
fistps
jns
cmpb
xchg
out
jge
cmc
popf
dec
dec
call
lods
rclb
cmp
pop
test
xchg
aam
pop
add
sarb
mov
int3
ss
sbb
jo
outsb
int3
sub
cwtl
jg
dec
xor
xor
addr16
ja
out
inc
xor
aam
movsb
dec
sbb
rorb
jmp
and
dec
xor
lds
dec
cmp
xor
std
outsl
cmp
scas
ror
mov
mov
fsubr
jns
dec
push
shrl
and
cld
pop
fisubrs
inc
jbe
cmp
xor
repnz
inc
and
lods
xor
xor
push
imul
sub
sub
push
cmp
sbb
xchg
test
push
push
sub
mov
mov
arpl
jae
aaa
iret
lods
inc
cltd
cmc
push
into
stos
mov
movsl
and
icebp
dec
jne
cmovl
pop
sti
jae
push
sahf
mov
cmp
cmpsb
js
mov
inc
test
mov
inc
or
fildll
lahf
cld
xor
gs
test
sti
outsb
xor
sti
sbb
cmpsl
iret
imul
mov
fistps
cmc
pop
pop
mov
cmp
push
mov
jecxz
mov
pop
jno
xchg
dec
xchg
shlb
pop
stos
mov
sbb
enter
mov
adc
pop
rorl
es
shl
repz
lods
test
inc
aaa
aad
xchg
cmpsl
out
jmp
gs
xchg
inc
stc
cmpsl
adcl
pop
in
mov
mov
lods
dec
xor
je
stc
loope
add
into
frstor
movsb
faddl
dec
sub
sbb
loop
rep
loopne
iret
jo
mov
rcll
pop
jne
in
in
cmp
dec
add
mov
pusha
adcl
aaa
jmp
inc
adc
notl
xchg
sbb
xor
cmp
inc
and
sahf
ret
ljmp
cmp
aam
mov
push
cwtl
aaa
ret
or
repz
cmp
int
outsl
sar
repz
dec
aam
pop
mov
adc
mov
repnz
ljmp
sahf
mov
sbb
pop
xchg
sbb
arpl
push
jecxz
mov
jnp
cwtl
aad
mov
daa
pop
in
mov
cmpb
push
pop
daa
frstor
add
sub
inc
movsb
sarl
push
mov
jle
add
pop
xor
enter
push
nop
mov
fcmovb
iret
dec
push
add
scas
xchg
aad
pop
mov
add
and
out
cmpsb
mov
mov
mov
rcll
sub
cmovns
int
sahf
lret
push
pop
test
icebp
cmpsb
in
jb
sahf
sub
mov
repz
sti
sub
les
arpl
ljmp
jae
lods
pop
stc
dec
mov
fs
pop
cs
das
dec
addr16
mov
dec
enter
push
rolb
mov
mov
iret
cmp
outsl
or
sbb
sub
cld
std
pop
add
lret
adc
inc
lret
arpl
cmp
clc
call
push
inc
lret
cmp
shlb
ja
inc
inc
push
jecxz
or
adc
push
dec
sbb
jo
enter
mov
clc
stos
lret
loop
pop
xchg
push
out
loope
les
insb
sub
add
imul
movsl
add
push
add
cmp
dec
cmp
ds
aas
xor
xchg
push
xchg
sbb
mov
jne
lea
popf
bound
stos
std
xor
mov
dec
aam
adc
and
test
imul
hlt
ss
lahf
lds
inc
fiadds
xchg
pop
std
cli
xchg
add
inc
mov
fisubrl
add
js
nop
rol
sti
inc
mov
dec
inc
adc
mov
mov
js
xchg
jle
mov
push
pushf
rolb
mov
out
mov
clc
jns
lock
jne
cmc
push
pop
xchg
test
jnp
scas
ja
es
push
hlt
mov
jns
mov
and
pop
xorl
idiv
addb
inc
xorl
daa
in
xor
mov
jnp
out
pop
lret
loop
mov
popa
sbb
push
cld
cmpsl
daa
push
les
dec
mov
pop
das
aam
in
es
and
add
and
push
push
cltd
lar
jg
mov
je
rorl
es
lock
arpl
inc
lret
mov
adc
dec
lcall
gs
clc
jl
pop
sarl
in
mov
inc
sbb
arpl
fdivs
int
cs
cmp
lods
push
mull
das
clc
and
sub
pop
sub
pop
sub
adc
out
shll
mov
pop
dec
mov
mov
push
jle
mov
es
fidivs
adcb
outsb
or
pop
lock
or
inc
mov
mov
js
inc
fwait
sub
enter
outsl
lcall
in
add
mov
scas
aaa
cmp
fistl
dec
dec
sub
inc
add
cli
or
mov
jl
cwtd
scas
sbb
xor
jnp
fisubrl
dec
sbb
mov
test
fwait
lret
pusha
sti
sub
cs
lcall
pop
pusha
adc
adc
stos
jnp
mov
dec
les
mov
scas
sub
nop
and
mov
xchg
cmpsl
in
push
sub
sti
popf
repnz
and
fadd
call
ret
jno
into
fisubrs
sbb
xorl
int
inc
cmpsb
push
movl
inc
fdivrl
cmpsb
cmp
cmp
push
repnz
sub
jmp
mov
fdivl
ret
add
xlat
ja
jo
in
mulb
faddl
pushf
push
xchg
in
arpl
clc
and
inc
xlat
cmc
mov
bound
insl
jp
in
xchg
iret
enter
push
mov
test
adc
push
adc
test
daa
inc
movsl
bound
lock
pop
cmc
test
mov
jae
push
cwtl
or
or
dec
lahf
xchg
jmp
dec
xchg
inc
sbb
jne
push
std
add
xor
addr16
repz
mov
out
jne
mov
outsl
xchg
stos
jmp
add
pop
and
mov
push
fiaddl
sub
les
cmpsl
and
xchg
mov
push
sahf
add
testl
incb
sbb
mov
mov
repnz
js
jae
add
ss
lcall
cli
inc
cltd
stos
dec
inc
andl
aam
and
mov
test
lcall
xchg
sub
hlt
push
dec
jmp
stos
push
dec
add
dec
xchg
xchg
dec
push
into
adc
cmc
ret
mov
dec
stos
xor
cmp
xchg
lea
into
sbb
rorb
add
or
nop
sti
dec
fs
mov
fstpl
xchg
fdivl
lret
sbb
jmp
lea
pusha
daa
std
idivb
int3
pushf
dec
pop
mov
sbb
jbe
xor
mov
fsubl
dec
in
rol
push
sbb
pop
out
jbe
xor
jbe
inc
stos
mul
dec
and
cmc
call
aaa
cmpsl
negl
or
mov
ret
jecxz
jbe
data16
or
xchg
call
scas
popf
mov
cli
pop
mov
test
scas
jge
jmp
iret
mov
scas
sbb
adc
or
jg
aam
pop
nop
mov
or
jno
cltd
pop
push
pop
mov
cli
js
mov
mov
push
push
lea
mov
into
mov
push
sub
dec
dec
cmpsl
mov
jl
pop
repnz
lods
add
mov
icebp
mov
mov
stos
pop
jnp
sub
or
sub
or
sbb
cmp
push
sbb
mov
push
clc
xor
testb
push
cmp
jb
push
push
mov
sub
and
jns
scas
das
sti
push
cwtl
cmpl
sub
cmc
xchg
fcomp
cli
add
into
test
xchg
arpl
xchg
dec
scas
out
repz
sarb
adc
sbb
add
mov
out
push
lods
xchg
int
inc
or
cmpsl
sbb
mov
sbb
notl
mov
lods
js
test
mov
push
add
out
add
sahf
aam
push
sbb
loope
inc
ret
imul
lock
call
jno
and
into
xchg
loopne
mulb
lahf
inc
mov
pop
lret
inc
adc
mov
stos
and
pop
aad
test
std
push
jl
enter
outsb
repnz
insb
inc
jecxz
add
int3
mov
xchg
push
test
pusha
ret
mov
outsl
insb
rorb
lock
xor
pop
test
and
int3
aas
repnz
js
int
mov
in
divb
mov
jle
inc
fdivs
ret
sbb
or
sar
jg
sub
jle
adc
xor
jo
xor
or
jg
rcr
cltd
sub
or
mov
jns
sbb
dec
fildl
addr16
mov
mov
fwait
es
imull
aaa
pop
push
mov
cld
iret
adc
jae
inc
loop
sbb
jnp
mov
push
xor
sahf
add
andb
cmp
mov
stos
inc
sti
and
xor
jl
aaa
inc
icebp
stos
or
rolb
out
adc
int3
movsl
scas
jno
cltd
xor
dec
push
call
cli
mov
js
repnz
xchg
outsb
lds
ja,pn
inc
jge
fsubs
shlb
movsb
push
bound
mov
add
and
loopne
push
pop
dec
enter
test
int
std
mov
inc
push
and
sti
gs
movsbl
mov
cltd
adc
cli
jae
lock
stc
fs
dec
cmp
push
xor
loope
ds
jb
dec
pushf
xchg
mov
dec
xlat
mov
xor
push
shll
insl
push
sub
xor
and
iret
and
mov
rcrb
pop
xchg
push
scas
cs
aaa
mov
call
dec
or
add
rcrl
mov
test
add
dec
sub
stos
or
rorb
push
push
pusha
lods
int3
jno
lcall
jl
jbe
incl
xchg
sub
fsubrl
sub
sbb
jo
int3
loop
inc
cltd
movsl
mov
mov
ret
lock
sub
fisttpl
ds
leave
cli
pushf
cmove
add
push
pop
or
sbb
sub
insb
imul
test
add
stos
repz
inc
lret
jno
mov
ja
fstl
decl
fcomps
aaa
bound
ss
out
jnp
sub
insb
lcall
jns
pop
push
data16
and
cli
pop
jns
dec
pusha
xchg
fnstenv
fisubrl
add
and
outsb
inc
daa
into
fwait
dec
mov
ret
sub
mov
xchg
adc
incl
nop
inc
pusha
rcr
loope
insl
aad
fs
lock
mov
cltd
mov
add
jecxz
push
movsl
pop
orl
jns
dec
out
pop
jne
cmpsb
push
out
mov
jecxz
outsl
add
jbe
xorb
jecxz
or
cmp
nop
outsb
aam
sbb
ret
push
mov
orl
daa
cmpsl
xchg
shlb
push
out
fisttps
nop
inc
pop
mov
cli
jmp
mov
loopne
adc
sti
xchg
dec
ja
sub
into
mov
mov
lahf
sbb
loop
int
fdivr
jnp
mov
rsm
cmp
cmc
gs
pop
test
mov
sbb
mov
fistps
jl
mov
movsl
pop
inc
xchg
sbbl
insb
cltd
cld
xlat
fld
xor
fs
stc
xchg
fisubrs
jnp
and
xor
icebp
fdiv
xor
sub
sbb
adc
cld
in
dec
aam
sub
mov
mov
rcll
mov
sub
ret
push
mov
add
jmp
sub
jae
mov
jl
push
sbb
jecxz
sarb
stos
in
cmpsb
sub
push
nop
mov
mov
cmpsb
adc
insl
outsb
sbb
sbb
mov
lods
aam
or
popf
pop
xchg
cmp
adcl
sub
loopne
inc
sub
cmp
aas
push
jae
insl
fldcw
push
rorl
enter
sub
mov
or
repz
mov
jl
ds
divb
jmp
cmp
sbb
mov
test
mov
clc
imul
shlb
pop
aad
jnp
cwtl
xchg
popa
sbb
orl
insl
mov
rcr
stos
pop
lcall
cmp
sahf
hlt
add
movsb
lcall
lds
jg
jmp
out
push
mov
clc
cld
pop
pop
push
outsb
aad
pop
sub
push
test
push
mov
add
repz
loopne
pop
push
adc
sbbb
lods
sti
jmp
nop
aas
cmp
idivl
jmp
cmp
int3
das
aam
loop
lcall
jp
aam
shrl
mov
mov
aad
adc
add
jae
fisttps
mov
jg
inc
adc
out
shlb
fmull
cmpsb
mov
int3
sub
int
mov
lods
sub
lods
aas
mov
test
cwtl
cmpsl
lret
fdivs
out
inc
std
into
sub
loopne
test
call
pop
fdivrl
je
jmp
mov
stos
jb
stos
and
fistpll
out
ret
add
or
stos
sbb
xchg
mov
fsubs
hlt
pop
cmpsl
lods
shlb
mov
shlb
inc
data16
sbb
mov
fisttpll
adc
pop
cmp
insb
cmp
aas
jns
loope
cs
out
jg
mov
push
test
pop
add
jp
mov
xchg
outsl
in
pop
scas
pop
lret
push
sub
std
mov
jbe
sahf
cmp
lret
ss
fdivs
mov
pop
dec
and
xchg
shl
push
push
idiv
insl
xchg
lcall
push
cmpsl
imul
inc
mov
jae
ljmp
jno
in
jp
inc
shr
dec
pop
and
testb
fwait
cmp
sar
iret
rol
popa
mov
repnz
rolb
dec
outsb
add
call
xchg
xchg
scas
cmp
daa
in
ss
adc
inc
dec
xchg
outsb
jns
push
push
dec
and
pop
sub
aam
stc
jecxz
paddb
addr16
mov
push
mov
push
lahf
mov
xchg
cmpsb
sti
movsb
lods
jecxz
push
jnp
call
xlat
adc
push
mov
mov
in
enter
add
mov
repnz
jbe
dec
loope
pop
int
xor
icebp
pop
pop
aam
imul
dec
aas
cwtl
out
movzbl
and
fsubr
outsb
insb
aas
jmp
jge
mov
into
sti
mov
in
mov
in
out
push
in
xchg
xchg
hlt
mov
push
fs
sub
inc
test
cmp
pop
shll
lret
pop
and
mov
ror
rcl
inc
xor
pop
jecxz
dec
or
icebp
ret
cmp
sbb
jge
std
arpl
mov
out
inc
jl
xlat
lret
cmc
mov
test
out
mov
sub
lea
sbb
and
imul
xchg
lods
jae
xor
xor
test
xchg
sub
insb
in
dec
or
lock
cmp
or
stos
xchg
test
jnp
movsb
sbb
insl
mov
mov
icebp
fchs
push
mov
outsb
mov
mov
jnp
or
punpckldq
aas
mov
xor
outsl
jns
fistpl
call
test
inc
dec
ljmp
jno
jne
mov
inc
or
mov
jp
jle
out
jns
mov
shl
and
sbb
dec
mov
mov
push
or
hlt
jmp
test
ljmp
repnz
sbb
ja
dec
loop
outsl
push
dec
mov
add
xchg
test
and
jecxz
adc
inc
xchg
add
sub
mov
mov
decb
adc
into
push
lds
pop
int3
imul
sbb
ret
outsb
dec
out
out
jbe
test
jne
inc
xchg
add
out
lods
jno
mov
pop
mov
insb
nop
mov
mov
push
das
cmp
test
repz
out
stc
sarb
clc
jle
ret
mov
dec
push
lock
pop
cld
adc
mov
xor
or
dec
ret
adc
mov
cltd
push
adc
xchg
xor
movsb
sub
stos
fs
notb
mov
jg
pop
inc
push
fidivs
dec
rcrl
mov
icebp
inc
outsb
push
cmpsl
pop
xlat
jecxz
out
iret
mov
push
xchg
xchg
mov
sahf
push
icebp
dec
xor
cmp
mov
xchg
mov
lods
xchg
jo
push
ret
popa
push
jecxz
fs
dec
cmp
daa
pop
lea
xchg
fcompl
dec
insb
hlt
sahf
dec
icebp
and
sbb
sbb
xor
inc
push
pop
inc
sub
jp
sub
out
adc
gs
popf
mov
pop
pop
movsl
rcrl
fdivp
xchg
loopne
push
fwait
mov
xchg
and
sbb
and
inc
mov
in
jecxz
cmc
in
add
lret
inc
fisubrs
fs
pop
les
inc
sub
fisubl
cmpsl
int3
mov
or
ljmp
dec
cmpsb
jbe
inc
popa
or
xchg
in
push
out
cmp
adc
or
and
adc
clc
mov
push
and
mov
aam
xchg
jnp
inc
mov
mov
xchg
outsl
fcompl
ret
popa
movsl
mov
dec
add
test
mov
bound
cs
out
ret
sub
and
sbb
clc
arpl
mov
pop
push
fcoml
or
scas
xor
scas
cmp
fdivrl
push
jo
pop
pushf
mov
mov
rorl
scas
out
mov
and
loope
mov
pop
and
push
pop
mov
lcall
into
js
push
pop
std
stc
sub
imul
stc
ret
xchg
insl
xor
mov
int3
bound
inc
fidivs
or
sub
mov
xchg
xor
movsb
imul
dec
push
stos
sbb
cmp
sub
or
jb
xor
andnps
adc
lds
adc
xor
int3
push
push
sbb
xor
mov
mov
jo
pop
or
sbb
fdivl
out
repnz
movsb
iret
jecxz
dec
lret
jo
mov
arpl
popf
ds
imul
xchg
xchg
cmpsb
lret
call
sbb
pushf
int3
mov
mov
jmp
cmp
jle
ss
cmp
push
dec
movsb
imul
xor
daa
movsb
arpl
jmp
pop
and
inc
ret
aas
or
mov
cmpsb
stos
sbb
dec
lahf
jb
bound
fcoms
cmp
pop
popf
int3
push
xor
ret
loope
fs
rclb
jns
imul
pop
add
insb
mov
adc
push
int3
mov
jae
push
dec
sbb
mov
lcall
jno
cmp
ret
push
jnp
jl
sub
mov
addr16
aad
sub
xchg
sub
out
jae
arpl
xor
inc
repnz
xor
call
inc
sbb
sbb
add
test
inc
ficoms
pop
jp
and
cltd
push
sub
hlt
dec
pop
arpl
movsl
dec
shrb
mov
jae
jmp
in
add
mov
fnstenv
stos
nop
adc
addr16
js
or
pop
jns
adc
loopne
hlt
enter
call
out
addr16
test
leave
push
iret
leave
cmpsl
cmpsl
adc
mov
nop
jmp
jne
jge
push
out
push
idivl
test
addr16
std
add
sbb
jle
sub
xlat
jnp
and
fisttpll
xlat
dec
xchg
enter
cmpsb
int3
sar
popf
loop
jbe
test
sub
xor
cmp
inc
add
adc
in
add
sub
jle
add
xor
cs
xchg
push
cmp
cli
add
ds
inc
je
push
mov
add
push
jge
push
iret
inc
rol
mov
fcomp
mov
ficoml
xchg
and
inc
mov
es
jo
mov
stos
ret
sti
mov
inc
adc
and
test
out
cmpb
cmp
sahf
ffreep
jnp
sub
movsl
jp
loopne
mov
push
sahf
mov
sti
and
mov
pop
lcall
jecxz
cmovno
ja
arpl
xchg
push
outsl
nop
fcmovnbe
jge
xor
clc
shl
jne
xchg
xchg
pushf
dec
iret
outsb
fistps
mov
mov
loope
scas
hlt
lods
xor
lahf
hlt
pop
pop
scas
mov
imul
popf
xor
jb
stos
sub
ds
mov
sti
push
sbb
gs
test
and
xchg
fisubrs
leave
or
mov
sbbb
fcoms
add
add
jno
cwtl
push
loop
je
imul
jbe
nop
sti
notl
leave
mov
cmp
adc
push
inc
add
outsl
mov
insb
int3
stc
xor
aad
das
xlat
dec
xor
and
inc
push
enter
jle,pn
movsl
mov
mov
or
jmp
cmp
out
mov
fimull
xor
xchg
xchg
sbb
rol
lret
sub
and
adc
subb
jge
test
xorl
mov
cmp
mov
insl
subl
xlat
xlat
xor
out
cmpsl
roll
ret
xchg
jmp
cwtl
cmpsb
std
dec
sbb
adc
sub
aad
in
xor
shl
in
orb
aad
xor
daa
mov
add
jmp
insl
push
sti
sbb
push
adc
sbb
mov
mov
sahf
pop
aad
and
stc
mov
xchg
cmp
pop
mov
xchg
cmp
jecxz
repz
sbb
mov
outsl
add
test
stc
xor
ret
mov
xchg
pushf
repnz
push
divb
insb
jno
sbb
mov
xor
xchg
sbb
in
dec
addl
mov
bound
test
jno
push
pop
dec
mov
repz
inc
and
and
repz
mov
inc
dec
jl
jnp
dec
adc
ud2
ja
test
fcmove
cmp
pop
jecxz
add
outsl
push
adc
sbbb
ds
sub
pop
push
hlt
cmpsb
dec
or
push
lahf
dec
adc
cld
sbb
sub
aas
mov
push
sbb
repz
rcll
orl
call
lea
adc
add
mov
test
ja
push
xchg
out
das
pop
mov
test
inc
add
pushf
fsubr
jno
cmc
add
mov
cltd
negl
fnstcw
aas
gs
scas
mov
sbb
xor
daa
inc
mov
das
ja
mov
adc
ret
aaa
lds
movl
jl
jl
sbb
jnp
ss
cli
cmc
cli
fdivrs
dec
daa
sub
fidivrs
cmpsl
inc
test
inc
add
in
jp
or
test
and
jae
xor
ljmp
mov
add
sarl
clc
pop
mov
cmp
mov
add
pop
or
jnp
or
aaa
push
inc
lds
loop
dec
loop
sub
sub
jp
ret
addr16
xor
sub
mov
xchg
mov
pop
ds
add
cmp
adc
pop
sbb
or
nopl
sbb
cmpsl
lock
adc
addr16
out
pop
mov
jb
icebp
outsb
lods
fsubr
nop
shrl
pop
cli
aad
adc
shll
adc
sarl
es
add
call
icebp
pop
std
inc
sub
adc
sbb
push
add
and
es
lahf
jle
pop
cmp
repz
pop
pushf
mov
or
loop
out
test
or
pushf
cmp
mov
mov
test
cwtl
js
lds
bound
cs
imul
mov
sahf
fs
je
out
adc
repnz
push
hlt
mov
add
je
inc
stos
insb
push
jnp
pop
test
cld
roll
lahf
mov
xlat
inc
mov
fstl
add
push
sub
dec
xchg
jbe
jne
sbb
xchg
xor
gs
stos
cmpl
out
pmullw
pop
and
sbb
and
aad
sub
pusha
ret
out
mov
mov
out
loopne
jns
jb
add
or
xchg
jno
mov
nop
mov
fucomi
enter
pop
xchg
lods
inc
add
pushf
lods
dec
sbb
nop
pop
push
or
in
fsubs
lds
adc
push
stos
shlb
mov
dec
sahf
dec
inc
or
test
mov
andl
mov
loope
bound
add
add
cs
rorb
pop
cltd
xlat
xor
into
push
dec
cmp
adc
stc
lret
dec
xchg
mov
xchg
cmpsl
sahf
sub
pop
sbb
dec
mov
jb
and
dec
sti
jmp
inc
int3
int
das
hlt
cmp
out
bound
xor
sarb
push
ds
mov
int
add
sbb
inc
or
push
add
int3
jecxz
outsb
sub
roll
adc
es
mov
sub
data16
fstpt
inc
std
and
mov
rclb
xchg
dec
cmc
ret
rclb
and
dec
mov
repz
or
adc
ret
pop
jno
outsb
mov
out
push
popa
pop
or
aas
das
or
push
sub
in
imul
pop
adc
daa
cmp
xor
sbbb
jae,pt
xchg
xor
push
jle
cwtl
int3
mov
imul
cmp
mov
jne
mov
pop
subl
xchg
scas
sub
sub
filds
and
dec
in
in
fidivrl
mov
mov
andb
jecxz
xchg
loopne
dec
push
adc
es
xchg
clc
stos
pop
sbb
pop
inc
inc
cmpsl
clc
adc
push
mov
scas
xlat
daa
xchg
pop
scas
test
mov
fisttps
and
nop
push
dec
cwtl
inc
lahf
scas
xchg
jb
push
and
pushf
mov
push
mull
add
jo,pn
jne
js
cwtl
inc
jle
pop
sbbb
test
enter
popf
dec
pop
std
in
mov
std
or
jp
pop
pop
jo
pushf
inc
int
ret
pop
rorl
in
dec
fstl
cmc
or
mov
push
icebp
mov
push
and
cmp
sbb
loop
push
nop
or
enter
movb
rcll
pop
rcll
jmp
movsl
cltd
add
xor
cmpsl
adc
sub
das
movsb
aam
imul
inc
in
sbb
pop
test
fimuls
adc
jo
cli
data16
ja
aam
stos
push
pop
push
popa
in
daa
add
test
adc
push
inc
and
pop
jno
imul
xor
andl
stos
pusha
out
pop
fisubs
pop
and
scas
daa
cmp
pop
repz
insb
xchg
push
aas
cmp
sbb
rcrl
dec
inc
stos
and
push
fdivs
xchg
dec
pop
fwait
aam
sub
cmp
into
cmpsl
or
rclb
lahf
pop
lock
fldcw
out
addr16
pop
sbb
cmpsl
cltd
stos
mov
stos
mov
adc
arpl
push
int
imul
das
jle
or
xchg
test
outsl
pop
mov
enter
mov
out
push
iret
popa
cmpsl
jecxz
das
and
out
adc
test
xor
jae
mov
inc
fs
mov
lods
jg
hlt
adc
push
inc
inc
and
sub
lcall
sti
or
jmp
xor
adc
jl
jle
lcall
xchg
lahf
mov
sub
jg
clc
pushw
orb
das
enter
sbb
arpl
jbe
in
test
mov
in
aad
insl
fs
pop
mov
mov
test
fdivs
xchg
pop
pop
push
aas
sbb
pop
pop
std
inc
adc
add
sub
push
sbb
sahf
sahf
cli
sub
fs
pop
xlat
sbb
outsb
sub
pop
add
mov
mov
test
leave
leave
test
shll
add
lahf
xchg
dec
xlat
or
pop
aam
lcall
pop
imulb
cmpsb
add
out
mov
and
loope
mov
sub
sub
ds
stos
sub
dec
lret
or
stos
jecxz
or
out
sti
mov
sub
push
dec
mov
dec
cmp
in
jl
lret
jmp
nop
pop
and
adc
adc
dec
fildll
in
pushf
cmc
rclb
cli
dec
adc
and
sti
cmpsb
in
test
frstor
stos
js
pop
push
xor
out
repnz
mov
pop
call
inc
push
loope
xor
mov
test
lahf
xchg
pop
sbb
sbbb
scas
mov
test
push
shlb
jo
sub
stos
jg
jne
sbb
jecxz
gs
gs
mov
cwtl
mov
mov
inc
adc
jp
cld
cmp
cltd
push
jne
fistps
cmc
or
mov
jno
pop
adc
jp
push
shll
call
hlt
push
lret
test
jnp,pt
pop
mov
lds
mov
outsb
hlt
mov
dec
lods
pop
out
mov
outsb
mov
mov
jmp
mov
gs
mov
dec
xchg
jle
mov
sub
or
lcall
pop
sahf
sub
mov
outsl
test
push
cwtl
arpl
pop
pop
loope
dec
jne
jg
add
dec
cmp
stos
mov
mov
xor
xchg
fmuls
fucomp
andl
jno
push
jo
inc
or
pop
dec
fcoms
idivb
inc
lret
jle
xor
fisubl
adcb
ret
ficoms
mov
call
pop
nop
addr16
sti
push
pop
xchg
cs
stos
jmp
pop
ret
inc
pop
iret
dec
adc
mov
push
pop
cmp
or
mov
dec
jns
add
add
sub
jg
daa
lcall
cmp
or
dec
test
aad
pusha
cld
repz
sub
int3
in
and
or
scas
dec
inc
pop
fnsave
movsl
push
pushf
aam
mov
pop
movsb
dec
push
sub
scas
in
push
push
dec
test
dec
sbb
dec
push
or
repz
push
das
inc
inc
sub
inc
push
inc
jo
xor
sahf
push
aaa
add
push
bswap
dec
aam
loop
repz
dec
and
das
movsl
push
mov
pop
mov
push
lea
add
inc
out
add
cmpsb
sahf
mov
mov
rclb
sub
nop
cmp
cli
and
jge
dec
adc
mov
and
repnz
and
adc
in
or
in
shrb
loop
mov
int3
das
sbb
jbe
insl
or
or
push
cmp
add
in
mov
ljmp
aaa
sbb
lock
stos
add
jp
sbb
cmp
xor
movb
mov
push
shr
jmp
cmpsb
push
into
push
addl
out
and
cwtl
inc
sbb
push
cmpsb
addr16
in
xor
mov
push
loope
imul
mov
mov
push
lods
cltd
into
dec
xchg
popf
cmp
bound
cmp
sbb
xlat
sub
xor
push
mov
subl
inc
jecxz
cmp
xchg
sub
fstps
jno
cld
xchg
xor
adc
xchg
ss
mov
jge
leave
add
cmovge
mov
push
jmp
add
adc
mov
and
iret
mov
inc
mov
dec
push
adc
imul
sti
ror
adc
sbb
sub
call
mov
pop
jg
sub
xchg
movsb
lods
mov
outsb
pop
xchg
repz
mov
sbb
push
push
mov
call
mov
mov
mov
std
popf
and
fildl
jle
sbb
push
inc
sbb
roll
fmull
shr
add
cmpsb
pop
jae
in
push
test
lcall
in
cmp
xchg
aad
test
lahf
adc
iret
add
or
out
cmp
js
flds
cmpsl
js
inc
pusha
lret
push
cmp
icebp
cmp
fcomps
inc
xchg
xchg
imul
or
repnz
push
inc
mov
cmp
or
pop
int
out
mov
rdpmc
shufps
incl
or
scas
lds
lcall
dec
inc
in
subb
ds
mov
adc
or
int3
sub
lods
and
mov
repz
rclb
inc
adc
mov
and
jnp
stos
cmpsb
cs
adc
pop
sub
dec
fstps
xchg
insl
addb
daa
enter
push
mov
in
les
test
sarl
add
push
push
leave
movsb
unpcklps
lahf
pop
dec
bound
jns
mov
adc
dec
jge
add
dec
xlat
mov
jbe
mov
dec
arpl
sbb
shrb
push
cmpsb
inc
mov
gs
or
mov
movsl
pop
pop
test
imul
pop
out
mov
mov
and
outsb
push
add
jle
xchg
mov
mov
dec
dec
cmpb
adc
cwtl
outsl
jge
orb
jbe
pop
sahf
fsubs
ret
jnp
xchg
cmpsb
out
fnclex
pushf
outsb
pop
in
mov
pop
jnp
sub
mov
xorl
int3
mov
in
ja
and
xor
flds
lds
and
push
pop
xchg
mov
fsts
jge
cli
push
pusha
push
cli
ljmp
pop
aas
fxch
xchg
out
int
hlt
not
inc
arpl
and
and
lahf
jnp
mov
inc
inc
mov
adc
movntps
add
jo
repnz
popf
xor
movsb
jae
pop
ficoml
pusha
inc
mov
fcoms
call
mov
out
je
dec
fildll
push
mov
inc
out
aas
sub
jl
mov
cltd
add
pop
stc
dec
shlb
mov
push
jnp
inc
push
dec
xor
out
flds
xlat
or
mov
or
push
cmp
xlat
std
insb
push
sbb
xlat
in
cmpl
in
pop
sbb
cmp
sbb
pop
outsl
mov
imul
sbb
ds
mov
pop
mov
jl
iret
nop
push
ljmp
leave
sub
and
iret
cmp
mov
lea
and
jecxz
lcall
mov
out
sub
in
jns
out
dec
aas
adc
mov
add
insl
cmp
das
mov
shlb
jecxz
inc
iret
fdivrs
add
mov
aas
cwtl
add
xor
cwtl
jl
loope
and
leave
fimuls
mov
js
jno
push
jge
adc
xor
scas
outsl
and
mov
divl
mov
cmc
mov
push
xor
dec
lock
jmp
or
outsl
lods
stos
aad
xor
scas
fidivs
aas
out
insl
push
cli
rcrl
imul
imul
ljmp
sub
test
mov
loope
mov
jae
pop
xchg
dec
add
sbb
cs
pop
cs
jne
mov
sub
popf
lret
sti
nop
inc
ror
inc
in
xchg
push
add
insb
sub
dec
pop
ss
shlb
dec
lods
and
out
jl
imul
push
mov
fwait
xchg
mov
shll
cmp
mov
sub
mov
jno
or
aas
mov
push
sbb
bound
in
scas
or
and
fcomps
imul
stc
add
sub
cltd
js
cmp
mov
into
fld
xor
sub
pop
in
xchg
ds
push
mov
cld
mov
mov
lods
sbb
rcr
mov
hlt
push
imul
lret
clc
add
decb
cmpb
add
aas
pop
sbb
adc
dec
inc
enter
jmp
mov
pop
jno
sub
popf
push
xchg
mov
inc
ret
jnp
jle,pn
mov
call
out
adc
dec
push
xor
ja
or
mov
aaa
js
mov
icebp
mov
mov
lds
xor
ljmp
jno
or
mov
mov
cs
arpl
popa
cmpsl
inc
loop
sub
or
mov
sbb
xchg
rcll
push
mov
mov
pop
mov
push
repnz
push
adc
add
sbb
cmpsl
jbe
ss
push
add
scas
fsubl
mov
adc
jbe
pop
in
test
jnp
cltd
jl
mov
notb
call
scas
ja
sbb
mov
test
cmpsl
ss
int3
test
push
xchg
or
icebp
fwait
sbb
out
dec
hlt
adc
in
lea
pop
xlat
cmp
jmp
pop
jg
outsb
stc
mov
jmp
stc
sub
pop
into
imul
adcb
repnz
dec
mov
cmp
push
cmpl
sub
inc
jmp
push
push
pop
mov
cmc
js
pop
add
inc
xchg
stos
int3
xchg
loopne
je
mov
jno
loopne
into
inc
adc
mov
es
nop
mov
pop
sbb
movsl
cli
js
push
jns
xchg
dec
add
inc
jg
sbb
arpl
fwait
repnz
stos
movsl
xchg
std
pop
sbb
aaa
sti
mov
mul
xchg
negl
rorb
in
dec
movsl
scas
aaa
add
dec
mov
sub
adc
ss
jg
lock
clc
ja
adc
jmp
mov
sub
jl
aad
push
shr
xor
out
dec
sub
sahf
jmp
add
add
and
les
sub
dec
adc
sti
dec
sbb
mov
setno
dec
mov
movsb
mov
adc
mov
movsl
out
pop
pop
lea
cmpb
or
fldenv
inc
std
shlb
imul
adc
adc
lds
push
mov
je,pt
mov
mov
notb
push
mov
add
aam
jne
and
adc
adc
fidivrl
hlt
mov
pop
mov
xchg
push
loopne
popl
loope
xlat
xchg
into
dec
cld
xchg
sub
and
xor
and
iret
cmpsl
test
jg
mov
and
in
fcompl
dec
push
push
test
push
lahf
insl
and
lahf
in
aam
pop
pop
adc
sbb
je
fiaddl
mov
sbb
sub
scas
mov
mov
add
dec
out
scas
stc
and
push
mov
lahf
test
and
mov
xorl
cmp
sub
int3
mov
pop
nop
rcl
and
dec
cs
shll
lcall
or
jmp
sbb
fildll
cmp
rcl
cmpsb
les
inc
popf
mov
pop
shlb
xlat
movsb
movsl
pop
sub
adc
push
inc
add
icebp
adc
mov
les
in
and
scas
pusha
call
lcall
cmp
stos
movsl
fsubrs
aaa
inc
loop
mov
and
je
lods
xchg
arpl
mov
les
scas
mov
add
xchg
jnp
xchg
push
movsl
and
cwtl
pop
mov
jno
pop
sbb
jbe
popf
lret
mov
imul
push
dec
or
mov
jbe
dec
es
and
jae
popa
into
pop
dec
cmp
xorl
dec
xchg
dec
or
ljmp
in
movsb
push
xchg
mov
mov
es
jo
nop
xchg
jbe
sbb
orl
inc
sbb
adc
rcrb
add
aad
shlb
mov
mov
imul
mov
lock
mov
lock
repnz
adc
in
pop
loop
push
leave
mov
jbe
loope
loope
sub
mov
sti
outsl
js
mov
pop
out
ret
test
cmp
cwtl
aad
dec
ja
jno
mov
inc
rorb
ficoml
xor
jo
and
sbb
and
scas
shlb
sbb
stos
aad
push
xor
mov
and
aaa
scas
sahf
add
mov
cmc
dec
pop
cmp
push
fbld
sbb
cwtl
xor
mov
cmpsl
or
pusha
mov
pop
xlat
vmovd
idivb
cmp
inc
inc
inc
and
push
imul
daa
cli
pushf
and
xor
sbb
sub
mov
sbb
add
pushf
adcb
js
push
imul
and
sub
cmp
fs
mov
scas
pushf
xchg
xchg
mov
add
pop
cli
mov
push
mov
jo
iret
lods
push
and
out
mov
movsb
in
stos
lods
inc
xchg
std
test
add
jbe
ret
out
stos
arpl
sbb
add
movl
xchg
outsl
stos
or
mov
adc
push
add
xor
cwtl
adcl
stos
lock
sbb
push
dec
and
leave
jb
sub
jno
jmp
out
mov
in
test
movsb
or
push
push
xor
test
sbb
pop
pusha
cmp
fildl
pop
dec
jp
inc
filds
mov
das
rsm
fptan
adc
aas
out
jns
add
mov
lock
cwtl
jne
sahf
jmp
out
sub
push
add
xor
add
sbb
jb
mov
dec
pop
or
cmpsl
enter
mov
cli
daa
and
cmp
scas
iret
inc
cmp
pop
cwtl
dec
jecxz
xor
sub
push
mov
and
pushf
add
mov
icebp
adc
hlt
rcrl
push
mov
int3
cmp
push
hlt
mov
dec
pop
sbb
daa
push
push
clc
jo
jle
add
out
and
and
pop
push
pop
dec
mov
mov
cmc
adc
fadds
sub
cmp
lahf
push
ljmp
les
out
fwait
push
rcll
clc
pop
repz
nop
mov
xor
in
das
push
cmpl
cmpsl
enter
or
xor
or
arpl
add
cmc
gs
dec
lea
cmp
dec
cmc
cmp
enter
add
xchg
pop
sarb
push
cmc
call
inc
test
stc
dec
aad
adc
shl
xchg
pop
push
lret
or
adc
and
cwtl
or
pop
mov
shll
cmpsl
cmp
dec
mov
popf
xor
pop
in
adc
subl
mov
pop
mov
cltd
pusha
jle
mov
cmp
fwait
rcrb
and
dec
inc
ja
les
push
push
adc
sub
aad
xor
mov
nop
pushf
nop
pop
bound
push
jp
xchg
cltd
rclb
jmp
push
mov
arpl
mov
mov
sub
aam
test
outsb
jns
mov
sbb
xchg
stos
subl
mov
testb
inc
mov
xor
movsb
xchg
cwtl
add
shlb
dec
jne
xorb
int
mov
sub
push
xchg
imul
cmpsl
xchg
ret
push
push
inc
jg
mov
stos
fwait
jp
mov
or
int3
mov
adc
pop
push
shrb
das
andb
mov
xor
xchg
inc
jns
push
mov
cmp
test
and
repz
repz
leave
push
popf
cmp
xor
mov
push
or
fcomps
and
and
fisttps
mov
sti
and
and
pusha
push
inc
push
jp
mov
xchg
mov
sti
inc
imul
xchg
ja
ret
dec
add
and
xchg
mov
push
cmc
ds
xor
mov
pop
int3
shll
push
fldcw
int
fs
adc
lock
dec
lds
ss
cs
movsb
mov
adc
icebp
mov
lea
cmp
cmc
arpl
sub
lea
stos
push
cmp
js
dec
stc
sub
jp
push
push
or
test
cmp
xchg
jnp
mov
lock
ds
ret
jno
xor
mov
stos
cmp
das
lea
psrld
mov
dec
add
mov
pop
iret
aam
scas
push
scas
arpl
push
test
sub
int
jmp
cmp
stos
and
stos
dec
mov
lods
xlat
js
dec
mov
cltd
jbe
iret
xor
pop
adc
jmp
lcall
dec
add
popl
push
mov
in
and
push
subl
shlb
inc
sahf
andb
adc
arpl
out
sbb
push
std
repnz
sbb
test
cli
adc
jae
mov
fisubrs
and
pop
inc
lret
cs
adc
sti
sti
xchg
int
das
cmp
cs
or
pop
push
jnp
mov
out
push
mov
push
mov
mov
adc
add
sbb
sarb
mov
and
push
lock
sbb
iret
dec
je
les
addl
mov
or
xchg
or
add
xlat
pop
cmp
not
and
pusha
add
dec
jle
push
jnp
mov
and
inc
and
jecxz
pop
xor
sub
fs
mov
mov
sbb
nop
rorl
jmp
add
rorb
das
and
dec
loop
repz
cwtl
mov
shlb
aaa
jge
push
into
in
rorl
rclb
test
fnsave
mov
nop
jae
push
jnp
xor
insl
test
ja
adc
xchg
sub
mov
or
cmp
insl
mov
mov
sarl
pop
push
jns
pop
jno
fimuls
leave
jb
or
xchg
ficoml
jns
lret
bound
jbe
in
jmp
out
xor
mov
xchg
es
dec
ss
lods
mov
rorl
xlat
and
dec
add
mov
sbb
dec
adcb
push
scas
add
cmp
testb
jg
rorb
inc
sahf
ja
sbb
subb
mov
sbb
jbe
push
dec
aam
mov
mov
call
test
inc
fistpll
fnsave
aas
in
fsubr
scas
mov
push
mov
or
push
push
mov
dec
inc
jp
and
mov
scas
and
ljmp
cmp
xchg
mov
lods
fistpl
push
std
adc
dec
bound
addl
inc
pop
mov
leave
cli
leave
lret
clc
aas
lds
mov
push
sbb
iret
sahf
jnp
stos
sahf
testl
mov
inc
stc
jge
mov
hlt
xor
ja
ret
outsb
into
clc
stos
mov
push
popa
cs
mov
and
cmp
push
add
cwtl
out
cmp
lock
mov
cmp
push
ds
pop
adc
xor
lock
inc
js
pop
jmp
outsb
into
cmp
ss
add
sub
add
cmp
fcmovne
outsb
popl
inc
outsb
repnz
xor
sub
dec
test
ja
daa
add
pop
int3
or
and
les
pop
and
pusha
mov
movsb
subl
shrl
mov
jo
cmp
ja
jecxz
and
mov
outsb
scas
pop
out
mov
test
repz
xchg
pop
pushf
cmp
arpl
jecxz
add
mov
adc
or
cmc
subl
sbb
push
mov
sti
leave
stos
enter
in
out
dec
pop
dec
lret
nop
arpl
mov
scas
xchg
jp
pop
hlt
jl
add
popa
or
jns
jbe
out
shrb
out
out
xchg
aad
dec
mov
mov
test
pop
nop
mov
sbb
pop
roll
pop
enter
pop
xor
outsb
mov
cld
mov
js
int3
mov
cmpsb
cmp
dec
sbbb
in
fsubrs
out
cs
mov
out
pop
xchg
pop
cmpsl
lcall
sbbb
ja
lea
pop
jl
mov
jae
testl
jecxz
xchg
test
movsl
mov
stos
adc
testb
sahf
pop
addl
add
aas
icebp
loope
pop
jbe
enter
insl
xlat
add
or
mov
inc
fisubrs
arpl
in
jne
out
pop
mov
pop
aaa
xorb
es
xor
shl
or
mov
mov
and
aam
aam
clc
nop
movsb
ror
push
or
mov
cmpsl
neg
push
aas
xchg
cmpsl
aam
lahf
xor
mov
adc
push
gs
dec
je
sahf
jecxz
loope
mov
and
cld
lahf
inc
mov
or
insl
fidivs
mov
insl
adc
jmp
pop
ficoml
lock
jge
xlat
pop
pushf
pusha
fwait
inc
repz
mov
adc
xor
push
daa
sub
out
inc
subl
jl
cli
xchg
imul
push
int3
orl
and
lock
scas
idivl
fildll
jge
jbe
stos
pop
in
loop
push
outsb
jg
mov
sbbl
fwait
dec
int
int3
sbb
scas
jge
sub
inc
fsubr
inc
mov
xchg
pop
pop
stos
stos
and
jo
cs
mov
and
popf
mov
add
int3
out
das
xchg
mov
cmp
sbb
mov
mov
test
nop
aad
cmp
aaa
cmpsb
sbb
sub
mov
adc
inc
push
mov
dec
mov
xchg
xchg
xor
icebp
aam
cmp
pop
test
sbb
imul
int
sahf
loop
sub
pop
mov
sahf
rorb
push
sub
cmp
mov
mov
mov
dec
shrb
arpl
jbe
fildl
out
fistl
push
adc
jae
jle
ds
rcrb
mov
popa
and
xchg
cmp
pop
lcall
hlt
adc
push
outsl
lock
mov
or
push
mov
call
std
les
int3
or
dec
enter
sbb
fcmovnb
and
push
stc
pop
mov
xchg
mov
pop
push
enter
outsl
call
xchg
insl
xchg
loopne
adc
mov
mul
shlb
fiaddl
add
lret
ja
add
loopne
sub
pushl
mov
mov
stos
imul
mov
mov
sbb
sbb
scas
or
in
popa
and
xchg
push
lods
inc
pop
adc
push
lret
popa
repz
mov
insl
gs
sub
jle
mov
rorb
cwtl
lock
mov
xchg
popf
jno
or
sbb
add
jge
xor
xchg
jno
fildl
dec
xchg
pop
mov
xchg
dec
repz
mov
orl
jp
jle
in
xchg
xor
sub
inc
and
cmp
mov
icebp
jns
out
hlt
addr16
jne
jae
aas
loop
mov
lahf
jp
int3
cltd
test
ret
repnz
mov
rorl
test
arpl
mov
lcall
mov
push
jle
mov
inc
aaa
sarl
cmp
mov
mov
inc
fwait
add
in
shlb
call
dec
ds
inc
js
mov
dec
push
mov
jnp
add
xchg
int
arpl
mov
out
cmpsl
jmp
scas
cmp
psubb
xor
outsl
cmp
call
jmp
adc
jo
sbb
inc
cmp
popa
rcrl
push
out
mov
ja
shlb
leave
in
and
outsl
pop
inc
add
bound
mov
mov
std
iret
or
xor
loope
push
pusha
dec
inc
outsb
nop
cmp
cmp
std
xor
loopne
xorl
mov
push
outsl
sub
out
lret
into
fs
sarb
push
cmp
pop
sbb
fdivl
hlt
mov
gs
pop
xor
fyl2x
fstpl
leave
or
in
dec
inc
in
inc
cli
xor
dec
in
jb
mov
jae
pusha
in
fwait
in
dec
mov
mov
add
mov
pop
dec
dec
rcrl
sub
cld
xchg
out
jns
rclb
loop
jmp
cwtl
daa
xchg
cmp
int
sarl
sbb
xchg
cwtl
cmc
pop
pop
xor
mov
stos
mov
mov
pop
fcomip
push
xlat
stos
fisubrs
or
mov
jns
out
or
xor
and
dec
mov
pushf
inc
sahf
imul
roll
cli
jg
adcb
mov
pop
dec
pop
incb
and
mov
cmp
push
or
rolb
fnstcw
xchg
mov
imul
loop
or
xchg
andb
fcmovnbe
push
test
fcmovnu
jecxz
jo
scas
and
jmp
xor
outsl
fdiv
xchg
sbbb
fcoms
ret
pop
pop
adc
mov
jno
mov
jmp
lock
push
mov
mov
push
shll
test
fsubrl
fsubs
cltd
mov
mov
out
into
mov
aad
cmp
lea
pop
push
dec
adc
and
jp
addr16
sbb
mov
mov
xor
push
fiaddl
ret
jae
stos
ret
stc
sbb
jp
push
mov
cmp
pushf
loope
cmc
cmpsb
and
push
cmc
test
loopne
xor
mov
inc
mov
sarb
mov
pop
stos
test
fdivrl
and
jg
loop
addr16
icebp
and
sbb
pop
aam
aam
xchg
iret
lcall
scas
repz
and
inc
pop
pop
push
cs
pop
xchg
lods
inc
push
cmp
fcomp
imul
aam
add
pop
push
cld
stos
xlat
scas
mov
js
adc
pop
adc
mov
mov
rorb
ret
into
mov
ds
pop
test
and
dec
or
jno
fldt
pusha
fld
push
mov
jp
call
pop
sbbb
mov
dec
repnz
sub
jle
bound
int
addb
sti
scas
sti
insb
cwtl
adc
jp
jge
aam
bound
popa
clc
pushf
idivl
mov
xor
pop
inc
add
stos
dec
dec
pop
push
push
fldt
lcall
cmp
xchg
movsl
mov
xlat
cmp
lcall
sti
cmp
test
rorb
pop
or
dec
jg
dec
fcompl
xchg
sbb
pop
mov
shl
dec
fcomi
jp
imul
sbbl
jbe
dec
movsb
mov
bound
cmpl
test
mov
push
pop
mov
jmp
ret
int3
or
cmp
daa
movsl
sahf
fldl
pop
jmp
push
mov
addr16
dec
mov
repz
sbb
call
pushf
sbb
push
cld
mov
scas
roll
std
lahf
jo
out
xor
add
or
pop
ret
inc
cmp
mov
mov
fnstsw
divl
fidivrs
jae
hlt
sbb
jle
test
jmp
outsb
sub
adc
adc
dec
jl
arpl
in
fstl
adc
xlat
dec
pushf
sub
mov
scas
out
push
repnz
clc
push
mov
push
adc
in
icebp
xor
je
adc
in
sbb
push
adc
sub
cltd
fistpll
jg
call
xlat
imul
mov
xor
test
fs
ljmp
outsb
es
mov
loopne
xor
cmpb
xor
adc
dec
fistl
xchg
lea
and
mov
scas
lret
inc
mov
dec
andb
add
cli
in
sub
push
pushf
std
dec
popf
pop
push
adc
stos
xchg
xor
scas
xchg
mov
cmp
pop
push
push
cmp
lcall
imul
lret
outsb
dec
clc
ficoms
push
fisttpl
xor
ret
pop
std
lods
dec
insb
sahf
push
out
cli
faddl
dec
cmc
call
sbb
adc
iret
fisubrl
add
lcall
mov
out
pop
dec
sbb
cs
inc
popa
imul
mov
das
mov
movsl
cld
insb
into
ds
inc
loopne
pop
mov
stos
jg
sub
mov
outsl
jo
cmpsb
or
int3
mov
mov
push
loop
jg
shll
cmpsb
jae
and
mov
divb
inc
leave
daa
ss
xchg
cli
jge
mov
out
lea
fisttpl
push
xor
out
fwait
ret
mov
insl
cmpl
rorb
sbb
mov
dec
jge
mov
cs
jae
iret
sub
inc
into
out
cwtl
ret
cmp
popa
push
fwait
push
dec
aam
mov
fs
and
arpl
out
or
pop
fcomi
pop
rolw
inc
movsl
scas
jae
inc
imul
inc
lods
int
cli
adc
cmpsb
cli
mov
fwait
push
das
lahf
loop
loopne
ret
jbe
out
cs
jle
movb
cmp
lock
mov
outsb
xchg
jb
mov
push
lret
add
dec
xor
iret
out
pop
hlt
movsb
push
push
fmuls
sub
fldt
xchg
cmc
jnp
test
cmp
cwtl
xor
repnz
vdivsd
popa
inc
cmp
testb
mov
dec
mov
and
or
sub
adc
clc
cmc
add
ljmp
gs
xchg
dec
xchg
gs
repz
gs
cli
test
jo
into
cmp
minps
jns
lock
fstps
pop
mov
adc
xchg
adc
mov
fdivs
aam
sti
sbb
lret
cmp
lods
ss
test
lea
add
lods
xchg
mov
lds
fdivl
sub
dec
popa
pop
cltd
mov
add
outsb
int
and
jge
rcrb
mov
and
jns
jbe
pop
cmpsl
jne
lret
aas
outsl
cmp
lahf
pop
cmp
cmc
adc
int
dec
cmpsb
push
insl
push
nop
or
in
adc
pop
or
cmp
lcall
push
cmp
je
and
pop
push
mov
pushf
xor
pop
hlt
pop
insl
jle
lret
cmp
mov
cmp
cld
push
jns
jns
mov
jns
jmp
push
test
sbb
cmp
cmp
inc
mov
pand
les
mov
inc
mov
les
xchg
cmpsw
or
and
ret
lahf
jl
inc
mov
aam
int
xorb
sub
xchg
iret
data16
xchg
cld
dec
pusha
dec
neg
movsb
inc
insl
push
sub
push
inc
popf
jmp
repz
stos
adc
jle
shr
or
lret
xor
movsb
push
add
lcall
je
pusha
sub
dec
and
imul
mov
mov
adc
cmp
mov
in
inc
lea
sbb
and
jg
enter
cwtl
outsb
dec
jp
out
outsb
mov
sub
sub
jmp
jp
sub
cmpl
stos
or
sub
ljmp
push
sub
push
or
jg
mov
outsl
add
sub
mov
inc
mov
icebp
xchg
fisubrs
and
cmpb
imul
sbb
mov
jnp
les
sti
push
pop
pushf
mov
andb
pop
into
push
add
mov
fs
mov
mov
jo
mov
scas
jl
push
lock
aaa
xor
pop
add
adcl
push
lahf
pop
push
shll
mov
inc
jmp
fisubrs
sub
lods
xchg
pop
mov
insl
lahf
repnz
je
int3
xor
pop
sub
pop
aam
jo
add
scas
stos
pop
fstps
or
test
push
lock
dec
jg
sub
jge
sub
xor
xor
rorb
dec
mov
adc
lods
mov
xchg
xor
pop
gs
fcmovb
jbe
pop
adc
adc
dec
orl
adc
push
push
in
mov
jecxz
test
mov
push
cmp
mov
sub
mov
jmp
mov
iret
sub
cmp
xor
sbb
sti
jge
lds
or
in
sub
rolb
fs
cmp
mov
inc
push
jo
stos
push
pop
pop
in
scas
sub
das
or
loopne
pop
lods
xor
mov
and
sti
or
sub
mov
hlt
insl
arpl
mov
loopne
fnsave
mov
lea
push
ret
inc
jb
icebp
push
xchg
mov
inc
scas
dec
mov
test
and
mov
mov
into
push
push
push
dec
cmp
aam
mov
popf
int3
sub
push
mov
popf
add
pop
xor
ret
add
pushf
ffree
sub
ret
sub
adc
jbe
icebp
xor
arpl
push
imul
sub
jmp
cmc
call
add
and
pop
or
outsl
fs
mov
aam
sub
or
pop
sbb
mov
or
out
aas
imul
leave
xchg
and
xorl
and
lock
xchg
loopne
in
add
xchg
stc
mov
pop
sahf
jmp
or
inc
or
fisttpl
or
sarl
jae
mov
or
and
in
push
js
dec
lds
in
cmp
loop
das
test
test
sbb
jno
sub
je
repnz
test
push
push
lcall
xchg
mov
lods
xor
mov
js
mov
inc
stos
idivl
fwait
push
sbb
mov
sub
in
mov
sub
cmp
lret
xchg
jmp
sbb
dec
mov
fildl
sbb
ficompl
dec
out
pop
xchg
add
out
pop
testb
xlat
push
out
ret
rol
mov
mov
cmp
adc
jno
test
rcrl
add
stos
fadds
mov
push
test
jecxz
gs
add
jns
lods
fidivl
xchg
jp
movsb
xor
adc
pop
mov
das
int3
sub
aam
dec
pusha
into
ss
adc
mov
or
cmpsl
or
mov
xchg
cli
ja
lea
cld
sbb
xchg
test
aas
and
pop
cmpsb
es
cmpsb
repnz
mov
jo
mov
stc
dec
pop
sbb
xchg
dec
xchg
scas
lret
cmp
xchg
or
movl
aam
test
dec
lods
scas
mov
jae
pop
or
push
daa
ja
dec
add
lahf
test
ja
clc
jge
mov
mov
test
pop
pop
cmp
ret
sbb
push
push
push
out
mov
jge
add
loope
lret
cmc
xchg
rorb
jo
pop
pop
ss
int3
cmc
mov
xchg
arpl
xor
stos
test
aas
push
push
and
enter
outsl
jmp
sbb
jg
mov
mov
pop
stc
gs
xchg
cmc
data16
rol
xor
mov
daa
add
enter
add
xchg
loop
loop
bound
sub
inc
mov
repz
mov
shlb
xchg
test
cltd
xor
xchg
inc
jnp
push
sbb
push
jb
xor
cmp
xor
out
pop
sbb
jae
rol
insb
add
cld
xor
clc
cld
mov
sbb
or
push
addb
insb
or
add
aaa
push
mov
sbb
cld
icebp
pop
sbb
jb
pshufw
fsubrs
ds
test
pop
xchg
jle
or
inc
xor
out
adc
jmp
mov
inc
push
test
icebp
jae
dec
xchg
cmp
jbe
dec
int3
mov
mov
outsb
mov
lods
adc
fnstsw
pushf
fildl
and
das
sub
movsl
add
ljmp
lret
inc
pusha
pop
push
and
roll
pop
pusha
into
shrb
sbb
out
in
xchg
xlat
or
shl
dec
fs
sahf
sub
pop
pop
cmp
std
inc
aas
sub
jno
sbb
sbb
popf
add
jnp
addr16
sbb
pop
arpl
nop
inc
test
or
xlat
jo
enter
pop
in
lods
gs
test
pusha
pop
xor
pop
push
sahf
call
jp
shl
aad
andl
mov
movsb
scas
jmp
push
jbe
jno
lea
jecxz
push
mov
stos
or
gs
test
clc
mov
inc
push
sahf
sub
sub
std
fldcw
or
pop
pop
in
dec
inc
clc
arpl
int
movb
ljmp
jle
mov
and
or
outsb
cmp
xchg
xorl
in
arpl
lods
or
ja
out
icebp
out
mov
aas
sahf
jne
sti
pop
xor
inc
sbb
loope
in
cli
mov
push
arpl
cmp
mov
push
adc
cltd
mov
jle
test
fwait
test
xchg
xchg
lods
push
add
pop
loopne
fs
xchg
xchg
pop
out
out
push
lea
pop
jle
xchg
scas
movsb
cmc
sarl
dec
in
icebp
xchg
daa
push
or
mov
popf
sahf
sub
xor
cmpsl
add
adc
out
in
cmp
jge
out
dec
ja
mov
mov
outsl
int3
inc
vmovaps
push
rcrb
dec
xor
outsb
js
mov
sub
aas
cmp
cs
jne
pop
in
dec
inc
xchg
or
mov
ret
out
xor
push
sub
out
es
jbe
jnp
xchg
add
inc
add
or
loope
mov
xor
cmpsb
mov
lods
mov
and
movsl
pusha
push
xor
jp
dec
imul
inc
add
test
ja
fisttpll
push
adc
arpl
dec
jo
or
pop
jmp
pop
sahf
fsubp
scas
add
adc
std
pop
jb
push
das
aad
dec
stc
mov
mov
dec
xchg
mov
mov
jp
add
loop
mov
jo
xchg
adc
cli
adc
inc
leave
movsl
popa
scas
mov
int
xor
in
xor
cmp
or
ret
xchg
imul
imul
lcall
mov
subb
pusha
adc
imul
sahf
and
jae
es
mov
fwait
jmp
rcll
stc
mov
out
pusha
mov
mov
jl
shrl
xchg
mov
xchg
push
jbe
sahf
xchg
lret
fsubl
push
rep
lods
xlat
fs
arpl
ficoml
popf
sahf
xchg
mov
mov
sbb
and
mov
adc
xchg
inc
stos
out
in
mov
les
outsl
rolb
out
push
pop
loope
and
jbe
mov
out
xchg
mov
or
adc
cmc
in
inc
pop
add
mov
pop
xchg
and
xor
add
out
push
mov
enter
fbld
lock
inc
arpl
rorb
mov
add
or
or
inc
movsl
ret
jmp
mov
push
fwait
call
shll
push
mov
cli
pop
pmulhw
push
cmc
add
gs
cltd
cmp
shl
jno
cld
es
xor
push
cwtl
dec
cmpsl
dec
mov
cld
mov
mov
add
fildll
repnz
cmpsb
push
pushf
mov
popf
mov
sbb
push
xchg
push
add
adc
sahf
addr16
push
call
aad
cmc
add
xor
push
mov
dec
mov
sub
sbb
mov
nop
je
in
xchg
inc
sbb
out
dec
push
xchg
imul
cmp
jne
and
movsb
jmp
mov
pop
insl
pop
jge
daa
mov
sahf
jge
push
mov
inc
in
iret
cmc
aad
hlt
mov
imul
popf
into
repz
push
mov
std
fisubs
mov
pop
xor
lret
gs
jo
xor
es
or
fwait
push
mulb
scas
int
xchg
cmp
push
xchg
inc
into
adc
mov
push
cmp
into
sub
gs
mov
mov
mov
ljmp
adc
and
mov
mov
sbb
jge
adc
lea
inc
fyl2xp1
mov
cmpl
ss
mov
aam
loope
and
lea
sub
je
pop
jno
or
cltd
add
pop
ljmp
sub
scas
xchg
cmp
dec
fnsave
testl
das
mov
orb
sub
pushf
scas
sbb
pop
xchg
mov
std
inc
cmpsb
mov
xor
add
inc
push
shl
stos
fs
mov
mov
test
mov
mov
push
mov
sarl
sub
inc
std
fcompl
hlt
dec
push
arpl
mov
or
lcall
jle
repz
jne
xor
pop
mov
mov
mov
cs
xchg
mov
mov
insl
inc
xchg
js
jle
nop
ret
shlb
int3
nop
push
mov
stc
and
adc
mov
inc
sbb
je
pop
dec
adc
cltd
fidivrs
popa
xorb
mov
pop
lods
xor
push
cmp
mov
adc
and
dec
pop
jge
and
adc
cli
int3
stos
loop
inc
xchg
neg
lret
out
lods
mov
cltd
dec
pop
je,pn
and
orl
push
sub
cmpsl
fisubl
mov
loop
xor
sbb
test
xchg
mov
xlat
jnp
not
cmp
push
mov
bound
popf
popf
push
mov
mov
rolb
cld
int
stos
xor
or
dec
in
sbb
cltd
xor
std
insl
test
xor
jge
mov
xor
lods
and
xchg
push
inc
xor
fisubl
jno
adc
inc
adc
aas
inc
mov
xorl
mov
incb
stc
push
flds
xlat
push
jle
cld
and
inc
sub
xchg
jno
mov
enter
andl
inc
xor
mov
xchg
shll
gs
in
fwait
movsb
icebp
or
loope
pop
sysenter
ss
push
sbb
mov
mov
or
mov
out
pop
mov
sbb
fidivl
fidivs
push
mov
push
enter
call
lds
call
mov
mov
xchg
add
loop
sub
xor
iret
jecxz
aad
push
call
repnz
sbb
fcoml
test
mov
xchg
cmpsl
sub
mov
dec
mov
mov
aad
lcall
adc
sub
xor
adc
fmull
lock
cmp
mov
pop
cmpsb
cmp
xchg
jg
push
jg
fcmovbe
mov
lret
push
sti
mov
not
je
sbb
sahf
jo
scas
push
fsubrs
clc
and
push
ss
jns
mov
sub
sbb
popf
loop
nop
pop
fs
fimull
or
fsubr
in
xor
cmp
mov
outsl
call
es
popf
push
jno
addr16
or
fldenv
push
outsb
mov
ds
sub
lret
mov
repz
jbe
lods
mov
out
mov
pop
mull
btr
mov
cltd
inc
stos
testl
fnstcw
push
lock
and
push
inc
sbb
mov
xchg
jo
inc
cmpsb
jno
insl
and
addr16
loop
das
adc
add
imul
inc
jl
mov
subb
cwtl
push
pop
iret
ljmp
lcall
lods
les
or
jns
fiaddl
cli
mov
jg
pop
mov
xor
xchg
add
scas
sbb
push
push
sbb
iret
rol
int
mov
dec
sahf
or
loope
nop
inc
sbb
xor
es
les
js
aaa
sbb
mov
jecxz
inc
add
stc
sbb
jo
mov
in
dec
fwait
in
dec
sti
iret
push
xchg
sub
bound
les
sti
in
mov
ds
xchg
mov
je
xor
dec
push
iret
test
push
or
cmc
hlt
nop
std
mov
lock
loopne
repz
mov
rcr
jle
pop
pop
std
push
sub
push
cmp
xchg
cwtl
bound
cmp
clc
pop
aam
dec
mov
call
loopne
mov
pop
inc
jp
cmpsl
stos
daa
out
idivl
sbb
ss
mov
imul
pop
add
adc
sbb
mov
out
cltd
dec
bound
push
mov
cmp
add
mov
mov
loope
data16
adc
out
dec
nop
pop
jle
cwtl
mov
outsl
int3
xchg
std
xchg
sbb
cld
lcall
leave
sti
test
push
enter
mov
arpl
scas
js
fwait
iret
mov
cmpsb
leave
pop
repnz
insb
mov
add
inc
mov
addr16
push
mov
pop
mov
jl
push
jne
pop
lret
lret
and
or
lret
xchg
fidivrl
xchg
mov
psraw
out
insl
andl
xchg
sbb
test
adc
lods
add
sbb
and
insb
sub
je
mov
addr16
sub
bound
rorl
cmp
lods
lahf
je
rcr
inc
orps
mov
add
mov
dec
xchg
pop
imul
sub
jl
ret
and
fneni(8087
int
in
popf
adc
stos
jo
scas
jo
xor
lods
xchg
call
pop
int3
dec
aas
push
pop
mov
mov
sarb
fldenv
pop
mov
test
cwtl
sub
mov
lock
xchg
clc
rcrb
shll
xor
and
and
clc
dec
jno
aam
xorl
fisubl
xchg
adc
scas
scas
mov
and
push
hlt
lods
and
pushf
sbb
pop
jle
mov
shrb
pop
pop
mov
ja
rorb
leave
xchg
mov
xorl
je
and
outsl
roll
arpl
cmp
ror
or
mov
adc
sub
ret
in
shll
aas
push
and
sbb
divb
push
clc
sbb
push
rcll
mov
jb
js
pop
sbb
adc
inc
mov
push
xor
pop
or
enter
les
std
loopne
ljmp
scas
sub
lea
cmp
repz
scas
push
sbb
loop
addb
jae
xchg
adc
sbb
xchg
into
test
pop
cli
das
ret
mov
mov
stos
mov
shll
int3
insl
inc
mov
leave
add
bound
nop
mov
data16
cld
stc
jp
fwait
outsb
pop
and
pop
and
mov
add
test
mov
inc
data16
mov
mov
out
mov
lods
loopne
pop
add
or
ret
sbbb
popf
mov
cmpsb
ret
xchg
aas
std
gs
and
ss
adc
repnz
js
mull
jae
call
jl
xor
mov
push
pop
stos
adc
stos
insb
js
cmp
not
scas
jns
ljmp
ss
rcrl
push
jmp
shlb
jg
inc
xorl
or
call
push
cmpsl
shrb
sub
inc
cmp
push
or
faddl
jp
add
adc
loopne
adcl
xchg
inc
adc
out
dec
mov
insl
jns
out
test
mov
sti
fiadds
imul
fildll
inc
cmp
inc
adc
dec
inc
leave
xor
xchg
loop
dec
ljmp
push
lock
les
lret
pop
in
adc
icebp
mov
mov
dec
pop
lods
cmpsl
out
dec
inc
push
or
orl
dec
xor
mov
shrb
in
and
mov
dec
cmp
add
mov
movsb
pop
mov
dec
jo
and
dec
aas
xchg
inc
push
mov
adc
inc
xchg
test
aaa
xchg
add
cmpsb
jl,pt
scas
sbb
sbb
mov
push
lcall
sbb
cwtl
les
lea
mov
cmp
dec
jle
and
or
or
and
adc
fsubr
dec
loopne
adc
enter
and
call
push
shlb
fdivs
jmp
sub
sbb
cld
cld
je
es
loope
mov
xor
inc
mov
push
jle
out
xor
enter
and
and
daa
cmp
movsb
imul
aaa
test
sbb
cld
int3
lret
std
mov
xchg
pop
inc
popf
ljmp
mov
dec
sub
sub
arpl
push
icebp
fstl
enter
mov
push
sub
push
fs
rorl
fwait
bswap
lret
and
push
mov
pop
int3
dec
fcomps
or
das
jno
mov
xor
inc
roll
mov
jns
push
mov
sbb
frstor
int
stos
xor
iret
xchg
jne
xchg
push
and
outsb
jb
divl
outsb
je
xchg
or
mov
dec
andl
decb
xor
push
fdivrs
scas
cmp
xlat
js
mov
push
pop
cmp
push
fwait
push
pop
inc
aam
cmpb
mov
xor
inc
xchg
lds
xor
add
daa
cli
fcomi
insl
dec
sub
cmpsl
lea
jns
push
jecxz
push
jle
push
pop
mov
adc
fldenv
pushf
fbstp
ret
mov
popa
xchg
stos
push
pop
mov
cmp
roll
sub
and
and
or
lahf
repz
paddb
add
test
dec
or
std
jmp
sti
aas
or
mov
sbb
dec
push
lcall
enter
loopne
or
push
or
ja
lahf
loop
adcl
mov
xor
rclb
xchg
cmp
cmp
xchg
sub
pop
or
ret
xchg
mov
lods
cld
lret
or
cmc
insb
inc
addb
push
jae
ret
push
int
movsl
fnstsw
lret
mov
mov
lods
lods
inc
in
leave
int3
sub
fsubs
cmc
mov
fstps
jne
dec
sub
or
mov
mov
push
lcall
popf
mov
pop
gs
imul
ret
testl
push
shl
xorl
mov
push
mov
ja
fiadds
scas
xchg
out
xor
ficomps
rcrb
jnp
fbld
mov
jno
sub
dec
ds
jbe
mov
fistpll
inc
adc
xchg
cmp
mov
mov
push
sub
mov
push
loope
aaa
xchg
nop
xor
push
ret
iret
jbe
xchg
cmpsb
inc
sti
int3
in
nop
ljmp
mov
pop
xchg
adc
rep
jp
adc
ja
xor
loope
js
push
xchg
pushf
mov
test
sbb
rolb
test
adc
xchg
shrb
iret
pop
dec
add
out
je
pop
add
lds
push
mov
insb
push
js
sbb
pop
pop
repnz
sub
pop
insl
add
pop
add
aam
pop
jp
push
gs
in
adc
lods
cltd
jnp
fdivs
outsl
shll
push
addr16
sub
mov
enter
fabs
cmpsl
push
push
pop
test
mov
cli
in
addr16
mov
incb
pop
into
mov
inc
mov
adc
add
dec
sub
shl
sub
sub
mov
popf
mov
mov
fistl
add
ret
into
mov
nop
mov
cmp
mov
mov
mov
push
icebp
js
scas
imul
xor
bound
lcall
mov
sbb
cmp
or
inc
clc
push
mov
push
stc
inc
mov
mov
or
mov
ds
jns
push
ds
js
mov
pusha
sub
mov
outsb
push
lret
jne
dec
ds
imul
inc
jle
or
pop
xchg
fidivrs
scas
int3
push
jecxz
push
push
lea
or
jmp
jo
bound
subb
daa
sub
mov
loop
jns
xlat
rcll
fldcw
jbe
sub
dec
mov
dec
inc
les
inc
push
or
ja
movsb
mov
xor
sbb
push
lds
push
or
adc
jecxz
sahf
cli
and
out
add
or
and
add
ja
scas
sbb
add
push
pusha
push
or
adc
or
dec
fnstenv
cmpsb
clc
aad
addr16
lahf
adc
sarl
xchg
into
sub
mov
dec
or
pop
jmp
sbb
cld
call
jmp
mov
hlt
or
in
fsts
inc
inc
cmp
in
sbb
jecxz
cmc
hlt
mov
xchg
lock
cmp
inc
es
jge
sbb
cmpsb
enter
lds
addr16
addr16
in
inc
lret
call
dec
int3
push
je
xchg
cmp
mov
loop
out
aad
ds
xchg
leave
dec
rcrb
inc
je
mov
iret
and
jbe
in
mov
test
push
push
jmp
xor
pop
pop
into
fnstsw
test
push
dec
xchg
je
lods
icebp
rolb
jbe
les
and
cmp
test
int3
or
mov
dec
repnz
mov
push
fbld
cmp
popa
mov
mov
in
in
clc
popf
insb
loopne
js
frstor
in
outsb
inc
mov
lcall
fs
sbb
aaa
or
test
pop
imul
and
decb
or
mov
in
shr
pop
stc
sub
or
cmp
jo
inc
xchg
adc
dec
gs
pop
mov
test
test
or
out
jmp
je
sbb
jae
repnz
add
mov
stc
adc
into
or
xlat
xchg
loope
push
hlt
mov
jecxz
xor
das
jp
mov
xor
or
aaa
and
and
xor
shlb
sbb
mov
sahf
sbb
pop
jmp
xor
stos
sub
inc
iret
xor
dec
fisttps
jmp
inc
cmp
xchg
xchg
cwtl
popf
add
nop
cwtl
mov
push
push
lret
jne
adc
mov
pop
push
fcoml
cld
loope
inc
mov
pushf
dec
push
orl
adc
test
pop
test
pop
in
xor
lods
int
cli
xchg
hlt
in
in
lret
movsl
cmpl
sbb
add
sbb
scas
test
int
outsl
mov
pop
cli
clc
xlat
ljmp
and
je
insb
aas
loop
jle
je
push
mov
mov
inc
out
or
push
jns
ss
xor
addr16
xchg
push
loope
sub
aam
pop
xchg
int
fisubrs
call
out
pushf
fcomps
out
xor
sbb
adcb
sbb
fucomp
or
faddp
or
test
jge
push
fstps
loopne
push
cmp
jl
pusha
sub
push
push
sub
sub
cmp
aaa
push
in
and
jbe
adc
icebp
bound
mov
out
hlt
sub
sub
mov
jmp
jmp
sub
nop
adc
movsb
out
push
and
cmc
or
mov
pushf
xor
shl
fmuls
int3
lcall
adc
dec
pusha
cmpsb
lcall
pop
push
ret
adc
scas
push
les
add
into
sbb
or
test
lods
ret
mov
sbb
js,pn
imul
pop
out
jle
imul
mov
arpl
stos
scas
mov
adc
jecxz
out
cmc
mov
jle
jge
icebp
inc
idiv
sbb
icebp
adc
aas
mov
imulb
dec
insb
xchg
jge
cmpsb
lcall
test
test
lcall
imul
subb
inc
imull
push
pop
sub
pop
in
fdivl
jg
mov
popf
loope
sbb
out
mov
nop
jne,pt
xchg
imul
sbb
dec
lock
icebp
fmul
push
or
aam
mov
pop
gs
lret
dec
movsb
out
ljmp
xchg
and
xor
inc
xor
enter
fisttpl
and
and
stos
dec
dec
push
add
jns
xorb
cwtl
xchg
mov
mov
jns
xor
sbb
test
pop
rcl
adc
mov
xchg
insb
xchg
jecxz
jmp
in
pop
fsubl
pop
sbb
mov
in
sbb
in
stos
sbb
push
xor
mov
inc
sti
cmp
mov
fistpll
stc
pop
jno
dec
mov
outsb
xchg
cmp
aad
leave
xor
sbb
mov
pop
or
xor
xchg
mov
sub
jo
dec
pop
xor
xchg
push
cmc
sbb
out
loop
sti
nop
xor
insb
adc
scas
arpl
into
pushf
and
mov
pop
scas
adc
push
stos
push
mov
jnp
int3
lds
dec
xor
and
mov
push
jno
lcall
cli
or
jns
push
dec
mov
pop
ljmp
sub
pop
out
in
push
xchg
mov
in
call
dec
repz
jle
push
in
movsl
mov
pop
fcoms
outsl
sbb
jge
test
jg
inc
pop
sarb
roll
cmp
clc
cltd
int3
add
mov
dec
jle
lret
mov
arpl
and
insl
sub
jno
je
sub
sbb
pop
test
out
mov
sbb
xchg
movsl
pop
adc
arpl
loopne
repz
push
add
out
iret
xor
test
lock
or
in
cmc
fstps
mov
jg
aad
inc
mov
push
adc
push
int3
jne
jns
fisubs
sti
popa
cmc
aaa
scas
and
cmp
cmp
lods
and
jne
dec
push
lds
fmuls
mov
jp
inc
or
push
fisubrl
add
push
test
jbe
cltd
enter
xchg
loope
repz
pop
mov
aas
push
pop
insb
shlb
imul
jle
push
test
loope
dec
cmpsl
stos
test
movsl
insl
adc
mov
hlt
int3
enter
xor
dec
mov
adc
add
push
mov
dec
fadd
jne
pop
mov
cmpsl
mov
iret
and
mov
mov
mov
and
test
lcall
in
and
dec
stos
dec
jns
jne
out
sbb
or
addr16
call
fbstp
inc
out
repnz
mov
push
fstl
pop
sbb
stos
jge
sbb
fcoms
aas
push
xchg
or
mov
addr16
mov
mov
sub
pop
sub
sahf
rorb
shrb
xchg
mov
fwait
cwtl
mov
mov
xor
leave
into
loop
xchg
scas
fistpl
mov
clc
mov
adc
dec
push
inc
push
sbb
lret
sub
cmpsb
pop
push
stos
je
jb
dec
imul
or
ljmp
sub
or
hlt
shrl
adc
scas
int
xor
cmp
ja
lret
xchg
insl
xor
inc
stos
push
insb
bound
jnp
ret
mov
jmp
cmp
sub
pop
aaa
movsb
loope
adc
mov
lods
cmp
jo
es
lcall
lret
push
and
out
rorb
test
imul
lds
jecxz
ds
or
sbb
dec
jg
or
sbb
push
pop
dec
aas
dec
add
add
and
es
jg
inc
pop
xchg
cmc
scas
loop
mov
xor
int
sub
or
test
adc
mov
cs
push
jno
ds
xchg
sti
insl
pop
pushf
xor
imul
aam
and
movsl
fstps
aaa
lods
jle
mov
xchg
xlat
adc
cwtl
xchg
mov
pushf
lcall
jns
std
push
insb
into
mov
inc
sbb
xchg
rorl
cs
inc
inc
pop
mov
and
push
jne
adc
scas
sbb
push
ljmp
je
mov
cmp
mov
push
in
test
pop
pop
cmpsb
nop
adc
ror
fcoml
movb
ret
mov
sbb
dec
xchg
movsl
in
push
or
adc
arpl
mov
xchg
into
les
stos
loope
xchg
cmp
les
movsb
mov
jge
inc
jae
sbb
inc
adc
mov
mov
push
test
push
inc
jmp
imull
movsl
pop
aam
fsts
push
xor
stos
jmp
and
cmpl
pusha
inc
hlt
fisttps
add
mov
mov
xor
cmp
sar
cli
cld
xor
cmc
daa
dec
mov
stos
roll
mov
int
mov
xchg
mov
negb
mov
clc
inc
mov
cmp
cmc
inc
inc
jnp
adc
sbb
repnz
pop
loop
and
pop
in
jb
ss
std
add
fdivs
int3
loopne
rcl
mov
lea
pop
mov
add
imul
inc
daa
imul
push
jp
inc
pop
in
outsl
or
loope
addb
hlt
push
sbb
cmp
xchg
mov
adc
add
outsb
and
xor
mov
jecxz
add
pusha
cmp
pop
es
clc
push
lret
dec
add
sbb
xor
pushf
shll
dec
cmp
pop
xchg
sub
cmp
lahf
lret
das
jge
pop
jb
jl
jne
sbb
sub
call
mov
sti
scas
xchg
xlat
sub
cmc
inc
inc
adc
dec
pushf
mov
mov
jb
push
pop
adcl
sbb
push
xchg
out
mov
out
cmp
int
or
insb
push
and
dec
aad
and
add
or
and
push
pop
divl
adcl
jmp
fwait
mov
rcr
mov
jle
addb
xor
pop
pusha
sub
out
in
cmpsb
cmp
test
sub
pop
xor
mov
mov
mov
je
sub
mov
jne
movsl
cmp
js
fsubl
jl
lahf
stos
shr
sub
push
lret
and
bound
sbb
mov
mov
cmp
das
hlt
fistpll
dec
ljmp
test
jno
ret
or
lods
xchg
xor
gs
outsl
inc
fwait
cli
flds
pop
adc
pop
xchg
adc
scas
xchg
mov
movsb
nop
pop
js
clc
jbe
sub
sbb
or
sti
fmul
xor
dec
pusha
or
xchg
cli
adc
mov
and
sub
or
lock
push
lods
repz
pop
jecxz
push
add
sti
pop
or
into
adc
popl
xchg
jp
jno
mov
push
or
inc
pop
or
std
into
xor
test
mov
in
sub
int3
cmp
mov
jbe
mov
shr
cmp
aaa
mov
add
loope
fxtract
mov
js
push
or
hlt
sbb
lods
jmp
pop
test
cld
ret
cmp
inc
shlb
xlat
dec
and
popa
out
and
stc
sub
cmpsl
outsb
add
call
mov
cmp
popa
mov
jo
cmpl
or
imul
mov
test
mov
cmp
test
fcompl
jp
in
aad
popa
pop
pop
or
jbe
das
push
lods
in
insl
fiaddl
ds
pop
push
fiadds
testl
stos
flds
xor
add
cwtl
jns
jne
push
cmc
adc
or
xchg
pop
rcrl
gs
cmp
cmp
dec
out
xor
out
rol
fcmovne
inc
imul
mov
inc
pop
add
jnp
inc
out
mov
sub
cmp
mov
push
outsb
fmuls
lret
and
lea
std
mov
push
enter
sub
mov
add
xchg
and
add
push
andl
std
cli
mov
push
int
mov
sbb
adc
arpl
outsl
or
sbb
jne
pop
jb
sbb
sbb
push
mov
ljmp
cmp
jg
test
add
hlt
int
imul
sub
mov
xor
mov
push
out
cs
test
rcr
aad
aaa
aad
and
push
adc
pop
lar
sub
mov
mov
out
sbb
inc
lea
cli
fiaddl
cmp
mov
scas
jecxz
xchg
cltd
divb
insb
xchg
arpl
push
in
or
dec
or
sub
dec
push
sbbl
loop
jne
pop
nop
jle
inc
cltd
jmp
mov
jmp
pop
out
jo
lods
test
mov
mov
aaa
mov
andb
stos
movsl
mov
jb
dec
push
inc
loopne
sbb
sub
xchg
std
bswap
notb
xchg
inc
jmp
imul
jo
shr
sbb
mov
fnstcw
icebp
stos
movsl
ds
or
es
sbb
dec
cmp
cmpsb
mov
xor
cmp
test
and
xchg
sbb
push
fcompl
adc
mov
mov
push
fwait
jno
inc
push
lahf
push
jno
lods
leavew
ret
mov
sbb
inc
dec
cs
aam
and
cs
jmp
popa
out
cmp
sbbl
les
repz
movsb
outsl
and
jnp
mov
push
sub
adc
sub
scas
sbb
jecxz
ret
push
add
fsubl
mov
loop
jne
cmp
rcll
xchg
in
or
rorl
mov
mov
mov
out
ret
sbb
imul
addl
ljmp
loop
xor
and
aam
sbb
xchg
inc
mov
movsl
pop
pop
mov
roll
sbb
push
sub
cmc
cld
sub
mov
mov
sub
out
lds
cltd
in
mov
or
push
mov
xchg
xchg
test
sbb
addr16
aaa
push
ja
ss
out
pushf
mov
jmp
pop
mov
push
jno
pop
push
inc
jg
mov
xor
pop
mov
fmul
mov
dec
in
mov
adc
or
cmpsb
inc
imul
gs
call
xchg
sbb
daa
aaa
aaa
popa
jge,pn
iret
aaa
lret
pop
adc
leave
push
decb
adc
pop
push
ds
movsl
push
test
add
mov
inc
mov
pusha
pop
and
cmp
mov
test
enter
shll
mov
inc
repnz
pushf
mov
imul
sbb
lock
mov
imul
inc
js
dec
addr16
add
pusha
xchg
es
adc
mov
or
pop
or
gs
jno
pusha
shlb
mov
adc
imul
cmp
inc
aad
or
mov
es
dec
jbe
icebp
push
fadds
jns
lea
test
rorb
mov
jmp
lahf
xbegin
push
pusha
inc
repz
inc
jb
mov
out
movsbl
in
push
mov
dec
aaa
xchg
loopne
or
jle
inc
hlt
ficomps
arpl
arpl
add
call
fistpl
and
mov
ja
call
push
push
mov
lds
test
mov
add
fs
cltd
push
sti
outsb
and
add
push
mov
and
fcoms
sub
jo
add
xor
inc
roll
mov
pop
inc
and
fsubrs
inc
xchg
cmp
ss
dec
cwtl
rcll
sub
enter
jb
dec
insb
repnz
movsl
cli
bound
push
cld
fstpl
xor
cmc
mov
jg
inc
imul
xchg
insb
mov
xchg
and
sub
movsb
pop
mov
mov
inc
inc
je
lock
xchg
push
jns
js
inc
adc
lret
imulb
popa
push
xor
push
popa
out
cmp
test
pop
repnz
xchg
and
pushf
cld
jb
or
fdivrs
cmp
xlat
mov
lret
mov
and
mov
inc
mov
popa
ret
inc
lea
rorl
faddp
test
or
int3
or
mov
pushfw
add
ficompl
push
dec
mov
adc
xchg
jbe
mov
dec
push
jge
in
mov
dec
aas
in
aas
jecxz
jae
sgdtl
cmp
jbe
incl
jo
mov
mov
test
sub
push
aad
mov
call
adc
mov
mov
or
ja
roll
movsl
pop
lods
rorb
xor
sbbl
push
test
sbb
lahf
cs
dec
in
lret
push
mov
daa
lret
jo
les
dec
insb
mov
xchg
sarl
mov
pusha
pop
dec
test
add
add
adc
testl
cs
push
lods
cwtl
mov
xor
scas
cmp
xchg
mov
jmp
inc
adc
je
lret
stos
loopne
data16
mov
fidivrl
add
inc
packssdw
jne
imul
sbb
fdivr
fidivrl
das
pop
add
iret
stos
lret
movsb
xchg
outsl
xchg
lods
mov
lea
popa
fistl
and
jmp
jge
icebp
mov
aad
stc
cmpsl
pop
jmp
jns
pop
ljmp
mov
out
sbb
pop
inc
mov
call
mov
jno
dec
dec
sub
stos
out
sbb
adc
mov
adc
sahf
dec
sub
mov
xchg
mov
push
flds
and
out
inc
mov
or
pusha
aad
xchg
cltd
dec
sbb
pop
mov
sahf
mov
lret
mov
cmp
mov
test
push
inc
je
sahf
addr16
mov
ja
stc
xlat
mov
addr16
xor
push
add
pop
xorb
push
add
into
push
in
jp,pn
mov
pusha
lret
push
pop
mov
insl
pop
push
stos
arpl
jns,pn
ret
stos
jbe
stos
push
movsb
shll
arpl
push
jnp
mov
jmp
sub
push
adc
mov
adc
test
cmp
je
faddl
add
mov
hlt
mov
or
sbb
sbb
movsl
sub
sbb
mov
lcall
mov
inc
cmpsb
sub
roll
loop
xchg
adc
push
and
lods
inc
incl
xchg
mov
inc
call
repz
jecxz
add
jl
lret
cmpsb
inc
sbb
cmp
mov
leave
cwtl
push
mov
dec
fdivr
lcall
mov
test
add
pop
in
dec
loop
jb
mov
add
jge
pop
cmp
jbe
mov
sbb
pop
mov
ja
adc
jmp
rcl
adc
add
mov
mov
adc
mov
nop
dec
mov
icebp
cmp
test
les
aaa
or
hlt
mov
sbb
or
cwtl
push
jae
mov
shlb
pusha
jae
jge
stos
mov
sbb
push
xchg
push
xor
mov
rolb
mov
sahf
ret
ret
jbe
and
inc
sub
dec
mov
stos
or
adc
adc
leave
andb
adc
loope
push
add
mov
pop
sub
pop
out
xchg
insl
lods
clc
test
in
or
or
xchg
sub
movsb
inc
std
dec
jno
sbb
inc
loopne
loop
push
sbb
add
adc
xchg
mov
out
loopne
mov
int
inc
sub
aam
mov
add
cmp
cmpl
in
adc
xchg
and
and
out
push
arpl
xchg
nop
mov
adc
mov
call
mov
stos
sbb
mov
xor
loopne
mov
in
rcrl
sbb
and
fistps
daa
lcall
rolb
mov
push
out
inc
scas
bound
aaa
outsb
xorl
dec
xor
cmc
mov
push
xchg
fcomps
adc
mov
fsubrp
xchg
jmp
repnz
adc
imul
sbb
pushf
stos
xchg
mov
mov
in
push
dec
dec
inc
lret
int3
repnz
dec
test
negl
mov
xlat
subl
push
jnp
stos
and
adc
ja
out
sub
mov
insl
scas
subb
push
pop
enter
xchg
fdivp
ret
dec
cld
lock
imul
push
mov
sub
out
jbe
or
mov
int
jmp
push
divps
shrl
mov
pop
add
int3
mov
cmp
test
adc
inc
adc
xchg
jmp
or
stc
xchg
push
test
stos
aad
in
inc
cmc
cmp
cmp
jp
cmp
ds
xchg
les
or
cs
int3
arpl
int3
mov
mov
lcall
pusha
divb
and
fildll
sahf
jns
push
jne
inc
pop
jns
add
fdivrs
cltd
out
push
fld
xchg
push
xor
pop
jl
shll
inc
repnz
and
lcall
ds
xor
jge
sbb
xchg
mov
adc
mov
ds
sbb
mov
sub
push
cmp
xchg
aam
mov
cmpsb
scas
jae
mov
outsl
xor
cmpsl
int
and
lds
pop
repz
sub
test
add
xchg
insl
aam
repz
mulb
into
mov
sub
lret
aas
adc
cli
xor
adc
mov
mov
test
and
repz
dec
cmp
pop
sub
add
ds
out
push
jns
mov
mov
loop
jns
test
sub
mov
xchg
lret
fxch
pop
dec
pop
fiadds
inc
repnz
cmpsb
pushf
pop
lea
jp
xor
dec
jmp
dec
mov
faddl
rorl
popf
cli
adc
adc
gs
sub
xor
dec
addr16
test
stos
ljmp
pusha
ds
jno
mov
imulb
addr16
mov
mov
jmp
cld
dec
nop
xchg
cltd
aaa
sub
icebp
mov
mov
in
xchg
mov
sahf
aas
adc
sbb
dec
aas
inc
sub
cmc
pop
sub
add
mov
and
scas
cwtl
mov
and
jo
aad
jg
push
and
inc
sbb
in
popf
shll
fdivs
stos
pop
cltd
insb
mov
adc
call
fbld
les
fs
insl
jne
add
lahf
mov
gs
mov
jle,pt
addr16
int3
sbb
icebp
dec
add
lahf
cmpsb
jg
icebp
pushf
push
jns
xchg
int3
dec
repnz
enter
mov
xchg
stos
packssdw
scas
xor
mov
pop
out
in
push
lahf
ljmp
jecxz
lods
mov
pop
ret
sub
loopne
xlat
mov
pop
decl
sbb
cld
fmuls
decb
mov
jp
nop
ss
push
xchg
bound
push
ljmp
xchg
ret
cmp
xchg
pop
nop
outsl
mov
or
fdivrs
xchg
mov
jp
sti
jns
ds
mov
sub
xor
sub
aad
add
js
notb
ljmp
mov
pop
jbe
jns
gs
lock
arpl
push
fidivrs
cmp
jae
add
sub
inc
or
jle
call
fs
cmp
cmp
shl
test
adc
scas
sahf
test
xor
fcoms
push
fildll
mov
mov
add
pop
repnz
out
inc
lcall
inc
or
and
clc
cmp
inc
int
add
lret
and
movsl
loop
push
mov
int
or
sub
stos
fstps
lret
popf
in
mov
fiaddl
or
out
mov
mov
insb
mov
and
jno
sbb
dec
loopne
subb
fmul
or
out
dec
cli
and
cld
dec
or
cmp
pushf
xchg
and
pop
mov
sub
shr
dec
icebp
xchg
data16
or
cmp
addl
insb
pop
stos
xchg
xor
mov
inc
cmp
mov
das
and
insl
mov
inc
into
stc
fcom
sub
test
sbb
mov
jbe
sub
lcall
fiadds
inc
sbb
mov
and
movsb
jo
out
out
sbb
insb
dec
pop
push
andb
in
in
mov
xchg
scas
inc
cmp
popa
sub
cwtl
jns
test
fimuls
sbb
test
popf
imul
pop
repz
and
lock
lock
cmp
scas
jle
dec
dec
fistpll
mov
hlt
test
fs
outsl
out
aad
fstps
sbb
and
fstpt
mov
xor
xor
fsts
jnp
dec
mov
pop
xchg
sbb
cmp
scas
jb
lock
jle
pop
mov
mov
repz
sbbl
jnp
jns
and
sahf
push
inc
push
xlat
cmp
adc
sbb
xlat
xchg
out
gs
fnstcw
cmp
clc
fldt
jmp
xor
xchg
test
daa
pop
push
add
loopne
cmp
jo
push
in
inc
fwait
mov
int
mov
arpl
test
add
addr16
mov
stc
out
adc
jno
dec
jo
aas
imulb
adc
mov
or
dec
dec
adc
mov
dec
mov
js
pushf
xchg
cmc
mov
je
mov
lods
mov
ss
in
cmp
dec
add
jae
cmp
pop
cli
cmp
clc
js
in
loope
push
jnp
test
xor
in
or
xchg
in
adc
mov
je
jmp
dec
sbb
adc
dec
pop
in
fst
out
test
lea
insb
sbb
stos
push
fstpt
shll
std
cltd
mov
clc
jo
push
mov
popa
push
push
cmpsb
lock
mov
out
stc
cli
dec
vmwrite
lcall
aas
rcr
jae
shl
lea
lret
mov
fsubrl
lds
jne
add
sti
mov
or
into
in
insb
and
fisubl
cmp
dec
xlat
mov
jb
aas
ds
or
shll
push
inc
lds
fnstcw
fnsave
push
xchg
mov
lods
clc
add
pop
hlt
mov
scas
testl
jns
callw
daa
inc
dec
aad
jnp
aas
mov
add
mov
jns
rclb
enter
push
scas
les
xor
movsl
xchg
idiv
jl
sub
push
xchg
pop
adc
insb
adc
jecxz
nop
or
sbb
dec
jo
add
mov
ds
mov
test
clc
and
cli
sub
mov
mov
adc
dec
jnp
lea
iret
int
xchg
je
lds
cmp
pusha
adc
xor
mov
cld
sub
jl
dec
sub
popa
test
ss
movsl
popf
mov
call
pop
xchg
mov
mov
xor
mov
ret
repz
cltd
call
into
add
lods
mov
jl
aas
movsl
lret
cmp
cmp
gs
push
repz
dec
pop
jb
repz
and
scas
ljmp
repnz
imul
jge
adc
inc
aaa
ret
push
icebp
xchg
sub
sbb
mov
or
fidivl
add
filds
cmp
push
sub
mov
fcomps
xchg
sbbl
mov
lods
loopne
in
sahf
or
inc
add
adc
and
jmp
lods
mov
mov
mov
xor
inc
gs
mov
lods
add
sbb
jmp
call
jbe
fs
lea
pushf
jp
rcrb
jmp
or
jo
push
data16
cmp
imul
or
or
cltd
and
stc
sub
push
test
sub
shll
out
jno
out
mov
push
inc
hlt
out
cmp
inc
mov
sti
in
mov
cmp
pushf
jno
inc
add
cwtl
sub
popf
movsb
xchg
mul
aam
mov
es
mov
jnp
pop
xor
andb
out
dec
xor
outsb
pop
outsb
dec
xor
into
mov
inc
or
jb
rorb
loopne
jae
jns
mov
cli
insl
arpl
and
push
adc
mov
lods
pusha
aas
sub
flds
push
jecxz
pop
ret
lahf
mov
adc
mov
mov
pushf
bound
dec
and
jge
jmp
mov
pushf
push
sbb
push
adc
movsl
addl
pop
mov
and
pop
mov
ret
dec
es
je
or
pop
mov
scas
clc
xor
xor
fwait
popa
inc
adc
cmpsl
inc
jge
cld
and
in
pop
or
subl
xchg
js
cmpsl
stos
icebp
xor
out
xchg
fucomi
mov
ret
addr16
les
xor
add
packuswb
dec
mov
dec
mov
sar
outsb
dec
negl
lret
daa
cmpsl
fisubs
repz
xor
mov
in
mov
repnz
cs
xor
aam
test
push
xchg
xchg
lock
or
push
popa
sbb
in
jns
push
cmp
in
adc
xor
mov
push
ret
sub
pop
shll
repnz
ficomps
adc
add
sbb
call
push
jo
sbb
mov
enter
sarb
or
mov
cmp
or
jmp
test
add
in
mov
cmpsb
fdivrp
inc
sbb
jle
push
inc
xor
cmp
mov
sub
mov
inc
ror
jge
xchg
pop
out
nop
ja
jg
xor
push
push
pop
sbb
test
repz
stc
test
shlb
dec
push
add
add
dec
jmp
xchg
enter
in
adc
subb
add
js
xchg
push
sub
inc
jno
daa
notb
sub
sbb
mov
nop
xor
inc
insb
xorb
repz
sbb
mov
sub
mov
fcmove
inc
loope
mov
dec
loope
nop
lods
roll
jae
cltd
cltd
cmp
push
sahf
mov
pop
hlt
push
shlb
ss
xchg
mov
clc
das
pop
xorb
jge
push
rclb
movsl
cwtl
inc
std
lret
imul
scas
rcl
push
add
pop
test
rorl
mov
movsb
cmp
popa
push
ret
clc
sbb
inc
jns
imul
xchg
cmpl
punpcklbw
pop
xchg
xor
sbb
imul
flds
rcrl
dec
push
rcrl
add
shlb
pop
sub
pop
mov
fildll
je
nop
sahf
xchg
add
lock
addb
das
das
popa
pop
xor
imul
push
mov
shl
push
icebp
fs
sub
loopne
sub
mov
push
outsb
out
imul
daa
test
mov
mov
xor
arpl
mov
fwait
xchg
sbb
pusha
std
decb
test
and
in
lea
mov
daa
inc
mov
mov
movsb
mov
fistl
pop
ret
xor
scas
or
adc
int3
lods
flds
sti
xor
xor
mov
mov
in
mov
int
in
adc
negl
lahf
ljmp
std
push
add
loope
xchg
add
dec
lret
xorb
cli
push
inc
dec
loop
jb
mov
lahf
push
bound
or
xlat
cltd
or
or
jmp
xor
out
rcr
jmp
push
repz
aam
cld
jnp
scas
cmc
mov
and
jne
mov
push
add
fcom
ljmp
inc
xchg
movsl
sbb
sahf
mov
jb
scas
out
fstpt
rolb
push
iret
test
test
aam
or
sub
cmpsb
fcoms
negb
imul
mov
ljmp
rol
push
insl
enter
les
jg
imul
negb
xchg
ds
std
or
aam
test
mov
push
popa
xchg
into
and
inc
ljmp
out
out
add
and
divl
fcmovbe
sub
gs
rcrl
inc
xor
sbb
and
adc
or
test
lods
movsl
jo
stos
sub
xchg
fistl
sarb
icebp
mov
adc
mov
into
scas
fdivrs
fwait
sub
xchg
out
xor
cmp
mov
inc
xor
hlt
mov
add
into
cmc
js
push
clc
movsl
hlt
int3
lods
inc
stos
mov
jns
pusha
fdivs
fisubs
test
jae
mov
xchg
or
xor
xchg
daa
fnstsw
icebp
mov
shll
xchg
mov
and
roll
leave
mov
xchg
sub
dec
pop
mov
cmp
stos
and
mov
inc
imul
mov
sub
lret
out
mov
cmp
mov
scas
ds
imul
mov
inc
cmp
push
stos
xor
in
cmp
sbb
outsl
je
loope
js
or
stos
incl
dec
repnz
mov
or
pop
adc
cmp
dec
mov
and
icebp
dec
mov
test
outsl
pslld
mov
in
jle
or
orb
dec
cmp
clc
cmp
int
nopl
jbe
pop
sbb
or
sarl
cwtl
dec
std
inc
test
push
clc
lods
xchg
jecxz
ja
fwait
xor
out
mov
sub
clc
stos
and
inc
shlb
mov
mov
push
push
inc
dec
aam
outsl
scas
in
pushf
rcrl
mov
pop
push
mov
movsl
or
cmp
pop
push
pop
adc
jecxz
out
inc
imul
lock
mov
repnz
jecxz
sbb
stc
mov
and
mov
fdivl
sub
jl
mov
movsl
push
pop
aad
jl
dec
xchg
jbe
fstpt
gs
fsubl
ret
and
adc
inc
pushf
inc
push
pop
shll
pmaxub
xor
mov
add
test
loop
popa
les
adc
mov
inc
pop
outsl
pop
dec
and
mov
imul
jb
clc
dec
call
hlt
sbb
jb
xchg
sub
popa
cltd
adc
and
jo
xor
sahf
lcall
xor
insb
sbb
jo
and
mov
ljmp
mov
jb
cmc
xchg
xchg
jns
add
lret
push
or
out
adc
mov
sbb
sub
cmp
lret
lcall
movsb
inc
fdiv
enter
lahf
cmpb
movsb
shll
jecxz
hlt
mov
pop
imul
mov
push
sub
in
pop
adc
js
imul
outsl
out
adc
mov
pop
or
push
pusha
pop
std
push
jmp
int3
ds
fwait
add
mov
mov
add
jmp
lret
dec
jp
pop
iret
out
movntq
jg
repnz
repnz
out
cmpsl
add
stc
imul
sbb
sti
jg,pn
add
xchg
out
pusha
xor
popf
xchg
insl
je
sbb
stos
btc
sub
adc
enter
in
jl
push
inc
pusha
jo
aad
cmp
lea
fdivrl
pushf
icebp
imul
sbb
pop
dec
es
andnps
repnz
mov
mov
imul
and
loope
into
dec
mov
pop
sbb
or
dec
into
ljmp
pop
movl
out
xchg
divb
pop
sbb
jmp
jne
adc
push
mov
pop
mov
aam
test
sub
pop
adc
push
xchg
mov
mov
in
pop
pop
rorb
test
sbb
push
xchg
xchg
inc
inc
mov
jecxz
mov
jbe
lock
frstor
fwait
or
cltd
jbe
adcb
pop
incb
mov
ja
dec
imul
mov
pop
sub
cltd
clc
sbb
outsb
cmp
addl
lret
mov
std
jecxz
mov
fnstsw
lret
ret
push
push
test
mov
add
mov
lods
push
lods
in
popa
and
stos
mov
push
or
jns,pn
inc
mov
jle
xchg
mov
outsl
rcrb
pop
mov
inc
jno
in
cwtl
sar
orb
push
adc
sbb
pushf
fildll
xchg
bound
call
int
xchg
xor
jp
inc
mov
addr16
in
cmp
or
loope
mov
notb
cs
jae
popa
cmp
rolb
xchg
lea
imul
mov
inc
ret
jg
mov
negl
cld
insl
test
pop
cltd
dec
push
out
leave
imul
dec
shrb
lret
jbe
jno
push
es
cmpsl
xchg
int
adc
mov
mov
mov
push
push
and
fldl
outsl
pop
sbb
add
mov
mov
aam
shll
xlat
push
jbe
mov
call
jb
or
sub
and
mov
andb
scas
add
into
addr16
pop
add
add
call
dec
cmpsl
cld
lods
test
add
sbb
popl
mov
shlb
push
pop
js
out
jne
mov
scas
mov
cmp
stos
push
mov
sbb
int3
ret
addb
jecxz
mov
insl
add
and
jle
jae
mov
cmp
pushf
jl
xchg
ja
inc
lods
sub
loope
repnz
inc
popa
jmp
into
out
xchg
imul
aaa
mov
lods
fistl
jbe
and
pop
cld
sub
in
or
or
and
or
sub
cld
cmpsl
popfw
mov
adc
loopne
int3
sub
inc
in
mov
orb
sbb
mov
arpl
xchg
and
movsb
xor
cmpb
inc
inc
stos
loop
sub
push
popa
xlat
mov
loop
mov
sub
sub
subb
dec
mov
and
xor
jno
cwtl
mov
mov
or
xchg
cmp
cmp
fsubrp
ljmp
and
pop
sbb
pop
jno
jl
fimuls
lods
call
lcall
cmp
mov
push
pop
add
xor
push
int
negl
push
and
cld
bound
jbe
mov
in
aas
loopne
in
enter
push
push
mov
outsb
xor
int3
pusha
and
cld
xchg
adc
lcall
gs
imul
clc
push
leave
popf
stos
inc
std
push
bound
cmpsb
jg
adcl
sbb
jns
jns
pop
push
test
jns
in
xor
fsubrp
pop
mov
test
cmp
lods
ljmp
test
xchg
sub
push
jb
cwtl
stos
in
das
imul
jmp
pushl
pop
mov
popf
mov
mov
pop
ret
popf
or
or
jno
add
mov
xor
bound
adc
flds
fs
testl
mov
adc
push
mov
mulb
andb
mov
dec
and
or
ret
xlat
scas
push
push
xchg
pop
test
shrb
jnp
push
xchg
sub
shll
jnp
xor
movsb
movups
testl
int3
pushf
idivl
insb
dec
sbb
test
and
dec
or
or
push
sbb
inc
xor
inc
cmpsl
sub
mov
xor
xor
inc
or
add
shr
popf
cld
jno
lret
int3
and
mov
pop
popf
movsb
scas
sub
push
repnz
lcall
mov
out
xor
jle
cmp
dec
test
ja
daa
lods
inc
jnp
lods
lahf
mov
cmp
jns
aas
imul
jp
or
sub
inc
pop
xorl
pop
hlt
add
sub
orl
test
mov
mov
jbe
cmp
push
fadd
movsl
xchg
push
nop
dec
push
mov
push
jno
adc
jbe
sbbl
mov
sbb
pop
or
jns
je
mov
adc
in
cs
jmp
and
cmpl
in
dec
jp
imul
inc
mov
mov
and
ljmp
aad
jp
imul
adc
xchg
cli
in
cmpsl
mov
push
movsb
sarl
fs
add
mov
pop
mov
outsl
jecxz
push
cmp
cmpsb
test
inc
add
ret
sbb
xchg
add
je
pop
fwait
sub
mov
add
push
aaa
sub
stos
jbe
std
jl
dec
aaa
adc
ret
repz
sbb
jo
aas
mov
hlt
jecxz
pshufw
or
popw
shlb
insb
cmp
out
push
addr16
pop
xor
leave
mov
cmp
popf
jnp
push
in
stos
into
sbb
or
adc
mov
sahf
push
mov
int3
mov
jb
popf
and
sar
dec
inc
insl
faddl
add
out
fwait
add
in
mov
and
insl
push
xchg
xor
adc
cmp
test
pop
rolb
push
jmp
jns
xor
out
sti
cmp
cmc
pop
mov
adc
test
push
jecxz
sbb
sbb
mov
sbb
inc
test
cmp
test
scas
int3
imul
push
repnz
roll
mov
mov
xchg
xchg
add
fwait
dec
daa
xchg
push
test
mov
je
mov
add
dec
sbb
add
cmp
sub
jo
into
shlb
mov
xchg
lock
call
sbb
aas
fdivl
xor
adc
push
add
fcom
dec
aad
cmp
sbb
push
in
ficoms
pop
dec
or
fstp
lea
incb
mov
sub
out
incb
imul
loopne
jecxz
aaa
data16
lods
mov
jg
inc
ljmp
aad
add
minps
xchg
mov
and
loopne
mov
inc
or
std
jns
mov
mov
sbb
stos
cmp
repz
cmpsl
xor
cld
adc
loop
cmp
adc
pop
cmpsb
pop
bound
xlat
pop
cmp
into
push
add
pop
jl
loope
aaa
js
cmc
cmp
lods
pop
scas
fucomp
mov
lret
aam
push
mov
loopne
and
mov
pop
pop
xor
inc
sbb
int
aam
and
mov
icebp
rclb
jle
sti
stos
ljmp
fucomp
jl
jecxz
in
daa
inc
add
call
outsl
push
shrl
inc
test
sti
xchg
mov
sub
sub
loop
nop
sub
mov
and
xchg
adc
and
repz
inc
adcl
adc
ss
popa
fwait
push
outsl
mov
mov
or
push
out
in
popa
mov
xchg
mov
std
mov
sbb
adc
inc
jg
clc
pop
xorl
in
fcoml
push
inc
subl
cmp
in
push
adc
cmc
xor
daa
call
out
mov
xchg
fs
adc
jo
cwtl
sbb
fucom
cmp
push
fistl
jo
add
xchg
sub
cmp
pusha
push
jle
mov
xchg
pusha
ljmp
cmp
adc
pop
mov
out
leave
lea
fildll
push
cmpsl
fldenv
cmpl
push
sbb
pop
sahf
in
inc
add
add
int3
ljmp
leave
dec
arpl
je
xchg
iret
insl
dec
movsb
xchg
xor
cmp
loop
jbe
data16
or
icebp
push
cmp
dec
adc
jns
cld
sub
js
loope
mov
aas
jb
outsl
jge
xchg
xchg
or
push
fs
insb
push
cmc
enter
cmp
xorb
outsb
inc
insl
push
push
dec
push
mov
inc
xchg
adc
addr16
imul
je
or
das
repz
mov
push
sub
xchg
packuswb
std
or
scas
lods
or
ret
pop
push
pop
lahf
jmp
mov
leave
out
sub
pop
xor
dec
or
add
push
cmpsl
xlat
adc
test
sub
cwtl
fs
inc
sarl
cmp
das
mov
into
xlat
leave
pusha
aad
aaa
scas
int
loope
mov
pop
push
call
icebp
cmp
sub
jecxz
dec
pop
stos
mov
push
pop
jg
dec
cmp
imul
mov
jb
jo
mov
cmp
lret
jecxz
pop
cld
aas
cmp
lret
lds
dec
clc
add
sub
add
and
test
pop
orl
pop
int
lods
push
cmp
out
push
decl
mov
into
stc
sub
sbb
add
mov
lret
mov
xor
in
xchg
push
gs
push
and
adc
push
pop
rolb
push
dec
inc
daa
or
addr16
ds
sub
repnz
xor
stos
insb
mov
into
cmp
cli
inc
and
aas
add
and
pop
inc
mov
bound
adc
adc
or
lret
mov
scas
fucomp
hlt
adc
imul
mov
fdivl
inc
call
pop
shlb
lea
loopne
rcl
cmpsl
hlt
xchg
xor
fwait
test
lcall
and
loop
mov
mov
xor
rcr
popa
sbb
repnz
or
pop
inc
mov
fnstcw
adc
push
shlb
pop
add
sub
faddl
in
in
fisubs
cwtl
jmp
lods
call
or
push
insb
mov
push
pop
pop
jp
incb
mov
in
mov
pop
into
loope
loop
mov
cmpsl
pushf
arpl
fistpl
call
fldl2e
js
sarl
cmp
movsl
inc
es
sbbl
sbb
int
in
ds
test
mov
scas
xchg
xchg
dec
enter
cmpsb
push
fadds
out
lahf
mov
cmpsb
mov
jmp
sbb
popa
add
lods
lods
xchg
cld
jno
jl
mov
sub
notb
sbb
mov
mov
incb
jp
mov
jae
mov
inc
aam
test
das
push
stc
jo
inc
mov
divb
xor
arpl
and
cwtl
or
fldt
pusha
cmp
rolb
xor
push
sbb
pop
xorb
and
mov
sbb
cmp
dec
sbb
sbb
xchg
jnp
repnz
add
popf
lock
je
repz
and
jmp
test
fwait
jbe
fucom
cwtl
inc
mov
stc
stos
mov
and
inc
fs
jp
jne
aaa
push
pop
scas
pop
subb
out
movsl
hlt
and
sub
insb
pop
adc
xor
add
inc
addb
popa
xor
scas
bound
and
outsb
loope
adc
xor
std
mov
lods
xor
cmp
mov
add
inc
loope
dec
jg
xchg
ss
dec
stc
pushf
mov
pop
pop
add
inc
sub
jnp
call
iret
or
fstl
arpl
sti
nop
repz
mov
cmp
loope
pop
jecxz
xor
xchg
xchg
pusha
xchg
test
outsb
fidivrl
imul
cltd
adc
cmc
out
popa
xor
inc
mov
popf
shlb
adc
cmc
push
cmp
xchg
sahf
mov
mov
popa
insb
xor
xor
xor
shrb
pop
dec
and
sbb
stc
xor
idivl
loopne
push
popa
in
rcl
sbb
sub
inc
mov
xchg
xlat
or
and
add
jo
push
dec
or
fs
int
rsm
jns
scas
pop
adc
inc
ja
pop
test
xor
fwait
loopne
ret
fs
adcb
mov
pop
lahf
mov
xorb
adc
addr16
fmuls
ds
xchg
andl
iret
inc
aam
cmp
add
cmp
mov
dec
popa
inc
push
iret
rcl
sbb
xchg
outsb
stos
pop
mov
mov
shrb
arpl
das
adc
jmp
aas
fs
mov
movsb
mov
leave
std
loop,pt
mov
clc
int
loope
or
addr16
push
adc
adc
jns
test
adcb
xchg
pop
repz
out
lret
fadds
lds
sarb
dec
jecxz
dec
xchg
sub
push
cwtl
pusha
leave
clc
xor
in
movsb
inc
mov
js
std
jo
negb
movsl
add
negl
xchg
pop
stos
insl
les
incl
xor
xchg
sub
pop
dec
aam
in
lock
ret
fwait
ja
mov
shl
sti
adc
cmc
ja
xorl
and
ret
in
mov
pop
sbb
pop
into
movsl
mov
lahf
sbb
xchg
push
inc
fcmovne
repnz
mov
in
mov
out
leave
add
lea
daa
imul
popf
jge
and
mov
add
push
rol
cmp
xchg
ss
ret
cmpsl
jl
roll
cmp
out
jge
adc
imul
ficoml
mov
xchg
std
and
push
xor
push
fld1
pop
sbb
xor
cmpl
test
es
lods
shll
adc
daa
xchg
adc
sub
int
mov
lcall
cmc
pushf
mov
pop
pop
and
and
imul
dec
imulb
pop
mov
fs
mov
les
mov
or
pop
sbb
in
sub
adc
je
push
rcrb
gs
push
sub
lods
add
xor
shrl
fsubs
push
out
dec
cmpsb
movsb
pop
adc
push
cwtl
shrl
xchg
ds
xchg
shll
aas
push
or
arpl
and
mov
sahf
js
in
call
add
adc
mov
xchg
inc
xchg
sub
push
mov
outsb
popa
insb
popf
iret
daa
inc
sti
xor
xchg
or
jp
push
push
add
mov
xor
lret
test
ficoms
fs
cmc
cmpps
in
xor
lods
cmp
loopne
sub
dec
test
xor
outsb
shl
aas
mov
pusha
jge
xchg
cmp
sub
rorb
mov
push
ret
xchg
inc
push
or
notb
out
adc
mov
and
hlt
xor
xor
add
push
mov
pusha
inc
xor
das
out
aas
sahf
aas
jp
pop
push
jo
xor
sub
dec
xchg
cmp
inc
mov
add
sub
cltd
mov
and
test
jnp
pop
xchg
dec
sbbb
repz
sub
testl
subl
pushl
inc
sarb
push
aaa
aam
daa
cmc
push
js
add
jle
mov
lret
pushf
jnp
lods
icebp
in
rorl
fmull
repnz
sub
jbe
push
mov
dec
adc
call
mov
sbb
jle
xchg
mov
mov
test
ret
jmp
push
int
inc
push
test
jmp
cmc
add
out
pop
sbbl
clc
xchg
xor
cmp
add
and
iret
cmp
or
ja
jb
scas
mov
mulb
lds
cli
push
shlb
mov
je
sbb
xchg
cmpsl
cmpb
insl
pop
repnz
insb
fsubr
inc
testl
inc
ror
sbb
sbbb
dec
push
inc
sahf
cmp
push
mov
insl
test
cs
flds
lcall
lds
movl
xchg
imulb
pop
jno
pop
in
aaa
add
repnz
jmp
arpl
cmp
cmp
leave
ret
mov
push
push
fildl
pop
lea
add
jge
loopne
mov
in
arpl
push
or
mov
addr16
or
enter
clc
sbb
stc
xlat
ret
mov
into
pop
rol
sub
stos
lea
pop
scas
cmpl
mov
fistpll
mov
cmp
sbb
dec
sbb
xor
sub
mov
mov
mov
pop
mov
inc
xchg
cmp
jg
push
das
cwtl
outsl
ret
push
addl
inc
fstp
je
pop
lods
cmp
addb
inc
stos
ret
or
sarl
jns
mov
test
inc
loopne
mov
pop
lods
jbe
lock
lods
adc
push
sbb
stos
jno
repz
mov
adc
cltd
aad
xor
jg
ret
push
sbb
or
mov
pop
xchg
xor
data16
das
js
mov
rcrl
sub
leave
push
repz
dec
and
cmp
gs
imul
and
adc
mov
push
pop
out
adc
loopne
xchg
sbb
addr16
add
fbstp
das
lds
int3
lds
enter
imul
inc
rolb
fwait
in
dec
cmp
lea
mov
test
shrb
or
aad
or
xchg
out
in
and
stos
push
push
fnstsw
mov
inc
adc
inc
dec
leave
outsl
nop
sbb
jecxz
inc
addr16
pop
push
and
insb
testb
pop
inc
mov
shrl
cmp
lret
in
int3
call
lret
jae
jp
xor
pop
movsl
sbb
mov
pop
addr16
aas
sub
or
jg
jnp
mov
push
jns
xchg
push
sbb
repnz
fnstsw
inc
add
mov
lea
pop
scas
adc
fmul
cmp
cmp
adc
inc
lahf
xchg
push
imul
inc
andb
pop
push
std
imul
sbb
ret
jl
pop
in
adc
dec
xor
inc
scas
inc
push
sar
mov
ss
scas
dec
pop
mov
jl
fs
jg
mov
pop
icebp
enter
inc
adc
xchg
ret
sbb
cwtl
dec
pop
and
sbb
aas
in
out
jp
int
push
mov
ja
shll
inc
jb
fcmove
aam
xchg
pop
je
dec
mov
mov
inc
adc
or
testb
add
fs
dec
pushl
mov
cli
add
lods
jmp
insl
dec
add
in
inc
cmp
dec
push
jns
mul
sbb
inc
add
loop
mov
std
cltd
cmpsb
insl
gs
inc
mov
js
jmp
lods
fisttps
fwait
fstp
sbb
xor
xchg
jo
pop
mov
iret
push
pop
push
subl
or
dec
sarl
stc
mov
pop
or
call
mov
cmp
pop
inc
in
mov
orl
jae
dec
add
adc
and
mov
mov
cmp
adc
mov
xchg
inc
insb
cmp
inc
push
les
dec
in
in
pop
xor
xor
xchg
jle
mov
mov
jmp
ret
pop
lret
add
push
push
push
mov
fsubs
cs
and
fld
mov
jbe
nop
sub
inc
in
pop
adc
pop
or
shll
int
mov
xchg
jl
repnz
add
xchg
sbb
fisubl
jge
fiadds
push
pop
jecxz
mov
inc
aas
fmuls
testb
xchg
sbb
in
push
shrl
xor
in
stos
or
imul
je
call
cmp
sub
aas
mov
fildll
cmp
dec
out
pop
cmp
jo
outsb
pop
aam
out
xchg
out
add
pop
stos
ss
cld
push
lea
add
and
mov
int3
mov
dec
and
aam
xchg
jnp
mov
movsl
mov
pop
mov
rorl
int3
mov
outsl
pop
or
dec
jbe
add
cmp
mov
je
sub
jb
xchg
push
xor
push
stos
jp
sbb
xor
f2xm1
into
scas
pop
repnz
push
push
int
xchg
loop
inc
orb
hlt
bound
xchg
jg
mov
rorb
jmp
rclb
movsl
jnp
lret
nop
sub
push
push
outsl
sub
xor
xor
mov
out
and
jne
aaa
fsubrs
popa
les
pop
loopne
pop
sub
out
push
stos
std
icebp
sub
cmp
sti
pop
dec
push
xchg
sbb
daa
xor
or
lods
sub
sahf
pop
inc
mov
hlt
inc
mov
movsl
jge
jmp
add
leave
lcall
adc
adc
and
dec
xor
mov
xchg
jg
cmp
call
ss
je
in
rol
mov
enter
pushf
sub
jae
mov
js
xchg
lahf
outsl
outsb
sub
or
mov
jp
pop
in
out
rol
pop
jno
hlt
mov
icebp
pop
out
sub
xchg
in
loopne
leave
int
mov
in
mov
cmc
das
xchg
ljmp
sub
or
pop
mov
fstps
lds
les
imul
jnp
push
mov
pop
cmp
loope
pop
mov
push
sub
stc
fistpl
jp
out
xor
stos
stc
or
mov
lods
sahf
sbb
inc
cwtl
test
mov
scas
inc
add
cwtl
jno
out
push
pushl
mov
mov
aaa
cmp
sub
pop
xchg
outsb
int3
mov
jmp
jecxz
mov
rolb
shlb
push
les
stos
inc
cmp
lret
mov
enter
das
or
and
dec
inc
cmp
fstp
aad
xor
data16
mov
cltd
je
pop
bound
ss
adc
cwtl
and
leave
jne
repnz
push
inc
popf
jmp
sub
fmuls
dec
mov
negl
sti
sub
cmc
jbe,pn
mov
and
adc
or
iret
pop
and
outsb
clc
jl
jne
mull
xchg
xchg
push
mov
lcall
into
pop
movsl
pop
andb
fcmovbe
push
fimull
adc
scas
mov
xor
pusha
int3
jp
mov
push
add
mov
and
xchg
and
ja
cmp
aad
ljmp
pop
cmp
ret
xchg
in
sbb
cmp
ss
mov
jbe
cltd
jmp
cmpsl
outsb
adc
jmp
out
test
leave
mov
out
pop
test
jmp
dec
adc
les
stos
lret
add
sahf
rcr
jae
addr16
stos
arpl
aam
std
xchg
push
sub
sbb
unpckhps
lods
push
xchg
jae
rclb
and
arpl
fisttpl
in
adc
fsincos
test
jbe
xchg
adcl
mov
ret
je
or
nop
in
sbb
in
test
push
or
mov
out
pop
fcoml
lcall
add
push
xor
mov
dec
mov
cmpb
xchg
fwait
cmc
dec
rcrl
std
push
popa
mov
shll
push
loop
test
int
mov
xor
dec
mov
fwait
xchg
push
roll
fmull
jb
sub
push
xlat
add
or
dec
stc
clc
jo
scas
ja
pop
and
in
aam
gs
mov
rcr
fiaddl
push
dec
pop
push
push
in
cld
cmp
in
inc
in
add
lods
mov
push
cltd
sub
ja
das
inc
inc
cld
adc
call
loopne
sub
xor
es
cli
or
dec
out
mov
mov
inc
and
nop
imulb
rcrl
push
push
dec
stos
xchg
lret
fwait
mov
ret
subl
aad
std
mov
test
inc
dec
cwtl
imul
fdivl
add
and
cmpsb
cli
popa
mov
cmp
dec
pushf
xchg
mov
sub
imul
rcll
mov
in
loopne
jecxz
addr16
inc
and
pushw
pusha
push
mov
imul
cmp
scas
cwtl
addr16
mov
repnz
clc
fisubs
fldenv
aam
push
mov
fisttps
cmp
and
sbb
push
aad
cmp
dec
lret
sbb
in
push
andl
push
inc
sbb
clc
mov
and
sub
leave
aad
cmp
jo
mov
adc
push
bound
scas
je
dec
and
aaa
popa
test
lock
push
or
clc
mov
add
sub
stc
xlat
into
mov
mov
push
test
add
cmc
testb
cmp
arpl
mov
mov
lahf
xor
add
push
data16
cmp
shlb
cs
inc
fsubr
cmp
scas
loopne
pop
xchg
inc
pop
ret
add
pop
insb
add
testb
push
cltd
mov
ror
xchg
imul
xor
sahf
movsb
sub
cld
sub
jne
lods
lds
fldcw
dec
scas
insl
cmp
or
fadds
push
stos
sub
cmp
jne
sbb
fistpll
lcall
test
ljmp
dec
xchg
mov
or
mov
aaa
int
mov
add
pop
pop
mov
mov
lcall
imul
jno
cltd
cmp
xchg
dec
cmp
in
jns
call
cli
pop
sub
stos
pop
pop
push
or
cli
jecxz
jl
mov
aas
fbld
aam
and
mov
adc
insl
jecxz
push
pop
mov
andb
outsb
xchg
xchg
in
or
in
push
push
inc
and
xchg
dec
lock
adc
icebp
and
push
pop
es
out
add
orl
lock
loope
inc
pop
sbb
adc
shll
and
pop
push
push
movsb
mov
popf
ljmp
mov
cli
loope
xchg
mov
pop
mov
jns
pop
push
imul
dec
cmp
iret
jae
loop
enter
sub
mov
inc
mov
jmp
lret
sub
mov
shlb
lcall
adc
mov
test
jg
fwait
mov
dec
out
mov
jno
rcrb
ss
sahf
xchg
loopne
or
and
dec
jae
pop
pop
aad
icebp
inc
cld
jg
test
pop
sbb
push
sub
fistl
mov
pushf
fcomi
jg
lods
addl
xor
jbe
or
es
leave
sti
das
dec
pop
cwtl
mov
testl
push
xorl
shlb
sub
hlt
pushf
xor
pop
jle
int
push
sarl
pop
int3
lock
int3
sbb
adc
leave
mov
addr16
outsl
sub
xor
cmp
mov
sub
mov
mov
imul
pop
dec
arpl
enter
cmpsb
addr16
push
xchg
orl
sbb
and
jle
in
adc
outsl
push
xchg
stos
lcall
dec
stc
lahf
push
imul
call
xchg
sahf
pop
leave
pop
or
jl
mov
dec
das
dec
pushf
aaa
bound
movsb
jbe
and
or
popf
mov
sbb
orl
stc
cs
mov
inc
xor
push
xchg
icebp
pop
addr16
and
repnz
jb
mov
enter
or
lea
dec
and
sub
xchg
pop
imul
stc
cld
call
dec
xor
jno
daa
xchg
add
mov
sti
repz
std
jbe
popf
push
in
add
add
xor
mov
loopne
jp
test
push
sbb
sub
jge
ds
inc
fsubl
dec
out
icebp
aas
cltd
data16
mov
shl
mov
cld
or
dec
mov
into
mov
addr16
mov
loopne
add
add
pop
or
fwait
lds
push
sub
xchg
inc
out
cmp
xchg
scas
dec
lcall
out
pop
lahf
sbb
jno
xchg
mov
cwtl
sub
rorl
or
imul
daa
rclb
sbb
mov
sahf
push
inc
sub
pop
add
mov
mov
orb
push
ss
sub
lcall
inc
pop
clc
fwait
ror
push
jge
dec
sub
or
cmpsb
inc
in
stc
sti
aad
cmp
sbb
and
push
add
sarl
je
fsubl
xlat
bound
jg
ss
mov
mov
cmc
rcll
xchg
and
ss
lods
mov
int3
cmp
xchg
push
decb
in
mov
gs
andl
and
adc
loop
popf
insl
inc
lret
cmpsl
iret
sub
jp
clc
push
js
outsl
add
aaa
in
insb
js
jnp
les
xchg
mov
push
adc
subl
mov
rcll
jl
jb
inc
mov
lret
repz
dec
cmp
mov
or
cmp
enter
lahf
sbb
inc
add
sub
subl
lret
sbb
sub
mov
adc
bound
or
xor
out
into
push
cs
sub
stc
idivb
mov
popa
pop
mov
mov
out
and
pop
pop
push
hlt
push
sbb
fisttpl
inc
jne
movlps
movsl
jo
out
mov
sbb
adc
insb
or
pop
sub
ljmp
outsb
adc
dec
cmp
adc
scas
sbb
test
mov
pop
xchg
jle
mov
jmp
cmpsb
rorb
mov
or
push
fidivrl
lret
and
jmp
inc
adc
gs
or
jl
lret
push
lods
inc
pop
mov
sti
lret
xor
sahf
roll
jns,pt
sbb
mov
pop
into
fstps
and
out
in
add
ds
inc
lret
roll
push
test
sub
clc
das
lcall
das
mov
ljmp
fadd
lods
aam
cmp
test
movsl
and
testl
pop
adc
jle
inc
jl
pop
lods
loop
mov
dec
mov
out
and
cmpsl
push
enter
pop
mov
imul
adc
sbb
push
mov
pop
jae
ss
xor
sbb
cli
xor
shrl
inc
and
fnstenv
sbb
push
mov
cmp
sub
sbb
mov
test
push
repz
cmc
cltd
sbb
pop
imul
push
sbb
daa
dec
pop
sahf
add
pop
test
mov
xor
clc
mov
xor
andl
sahf
xchg
aad
loope
xlat
add
je
mov
sarl
sbb
test
sub
mov
xor
loop
mov
xchg
lods
mov
repnz
lock
xor
push
xchg
rorb
int
lods
mov
jle
inc
insl
call
aam
loop,pt
push
les
insb
pop
push
cmp
inc
dec
mov
in
adc
mov
aad
dec
iret
add
int3
rcll
sub
or
or
imul
scas
xor
loopne
and
cltd
mov
mov
add
fsubr
add
push
testl
adc
jg
or
mov
and
inc
and
xchg
mov
sbb
push
cmp
divb
mov
jp
dec
dec
push
pop
jne
sub
xor
jnp
scas
cmc
jae
pushf
dec
or
cli
adc
imulb
repz
mov
xorl
loopne
xlat
xchg
pop
dec
jmp
xchg
inc
jnp
outsb
scas
dec
dec
push
jae
sbb
hlt
push
out
dec
popa
jg
xor
inc
cmp
push
mov
hlt
inc
fdivrl
xor
in
jmp
sahf
push
push
dec
adc
xchg
sub
jmp
es
push
or
sahf
cmp
mov
data16
sub
mov
addl
sar
out
call
pop
and
repnz
inc
xchg
in
icebp
lock
cwtl
fdivs
fs
pop
pmulhuw
mov
or
popf
out
cmpb
adc
sub
andl
sbb
dec
push
cmc
iret
popa
pop
mov
lret
pop
daa
adc
ds
test
sub
jns
dec
and
lock
adc
inc
xchg
call
jle
and
loope
jle
btc
into
out
pusha
lret
stos
jne
sti
fcomip
mov
cwtl
shll
pop
mov
rclb
outsb
inc
shrl
dec
cmp
cmpb
inc
dec
xchg
dec
pop
jnp
pop
and
dec
sar
mov
iret
dec
xchg
adc
mov
sbb
aam
mov
mov
cmp
icebp
inc
stos
and
icebp
adc
mov
loop
call
jge
es
gs
outsb
enter
mov
outsb
ss
mov
pushf
clc
adc
mov
dec
push
mov
insb
leave
in
gs
and
mov
jae
ja
out
mov
dec
pusha
pop
lahf
pop
or
xchg
inc
out
aas
fninit
push
add
ret
lock
scas
clc
int
addr16
arpl
add
dec
push
mov
hlt
out
test
xor
cltd
rorb
jae
or
mov
sti
push
xchg
or
pop
lods
rcrl
push
mov
cmp
cmc
push
outsl
addr16
aam
push
out
stos
push
xchg
rcl
cmovnp
pushf
and
std
jo
jbe
and
add
shr
push
dec
sbb
pop
test
pop
mov
or
adc
and
inc
repz
mov
repnz
add
xchg
adc
fwait
sbb
arpl
or
xchg
sub
pop
cmpsl
xor
xchg
cmp
outsb
xchg
jno
xorb
adc
stos
mov
repz
imul
lods
mov
push
inc
sub
pop
mov
adc
imull
ss
and
loope
sub
cmc
lcall
adc
movsb
cmp
jno
mov
fs
fsubr
jbe
or
or
jmp
xor
es
and
fwait
mov
sbbb
repnz
call
xchg
mov
xor
jge
jne
cmp
xor
ss
xor
cmpb
add
or
popf
xor
jne
lret
push
push
sub
jge
mov
call
outsb
xor
jo
int3
xchg
or
loope
inc
sub
pop
xor
mov
xor
or
xchg
fnsave
jno
lret
jae
out
push
inc
sub
xor
push
push
push
ret
xchg
push
dec
addr16
stc
fcomps
stos
lahf
sub
sub
push
jb
mov
cltd
jbe
sti
inc
xchg
mov
add
adc
cmp
dec
or
int
xor
mov
dec
scas
mov
push
popf
in
int
mov
test
aam
clc
sub
xlat
jae
incl
cmp
xchg
mov
iret
andl
mov
fsubl
or
adc
call
or
inc
lcall
gs
cmp
mov
push
jb
mov
test
pop
insl
dec
je
mov
sbb
mov
icebp
out
out
cmp
push
inc
push
push
sub
push
mov
int3
test
mov
ss
push
mov
andnps
push
clc
sti
mov
sub
lods
push
call
jle
mov
leave
pop
pop
mov
aam
add
adc
cmp
inc
ja
xor
cld
jmp
rcrb
dec
pop
movsb
cmp
sub
inc
std
jl
sbb
xor
cmp
ja
lods
ja
fsts
icebp
mov
sub
xor
pop
mov
lahf
pop
popa
je,pn
sbb
call
push
std
andb
mov
and
push
jae
testb
mov
int
cmp
pop
jmp
popl
repnz
cmpl
aas
adc
data16
mov
adc
ss
xchg
aas
imul
lea
cld
jo
call
inc
cwtl
shll
mov
jl
lods
pop
and
or
adc
adc
fstl
addr16
jecxz
cmc
jno
loop
repnz
or
mov
clc
fcomps
mov
test
inc
mov
in
sbb
mov
pop
sbb
ljmp
lret
cld
ret
shlb
dec
add
xor
movsb
arpl
sbb
sub
stos
rcr
decb
mov
push
mov
imul
into
pusha
jns
lahf
mov
add
sub
xchg
xchg
jg
clc
jmp
scas
mov
sub
nop
sub
mov
push
std
test
sub
inc
cmpsl
dec
fisubrs
mov
sbb
pop
mov
int
test
cmpsb
loope
push
sbb
cmp
repz
out
lret
adc
out
pushf
jne
dec
stc
les
movsb
and
adc
aaa
popa
cmp
lret
scas
dec
push
aam
mov
jae
cld
mov
add
movsb
imul
mov
fwait
xchg
aad
scas
ss
inc
fnsave
inc
cmp
push
aas
stos
test
stos
stc
or
mov
mov
cmp
jg
pushf
or
repnz
fisubrs
ret
test
mov
xorb
pop
fiadds
shll
gs
add
and
pushf
test
lods
sub
ja
aaa
mov
mov
arpl
loope
je
and
jne
aaa
stos
std
das
into
lods
rcrl
repnz
mov
js
fwait
outsb
mov
fdivs
sbb
sbb
lock
fcmovnu
pusha
push
ss
cmp
pop
shrb
jb
push
outsl
xor
push
sub
mov
xor
push
xlat
mov
js
inc
insb
jecxz
push
cli
inc
jo
orl
dec
cltd
jno
jb
push
jle
or
inc
fyl2x
mov
xorl
or
adc
int
xor
ret
mov
pushf
pop
fsubs
stc
jbe
hlt
fwait
pop
sub
mov
pusha
jg
mov
jl
dec
gs
xchg
or
lret
pop
adc
mov
xchg
je
out
mov
xor
sbb
push
testb
subb
cmc
das
sub
push
add
mov
mov
daa
pop
push
rcll
jne
xlat
shlb
xchg
fsubl
out
movsb
popf
insl
and
fimuls
sub
cmp
jp
sub
les
jmp
and
fidivrs
shll
ljmp
call
add
adc
ljmp
push
jo
cwtl
lret
sub
jb
jecxz
int3
or
mov
shl
out
mov
mov
mov
ret
mov
add
cld
jecxz
xor
mov
cmp
nop
dec
js
cld
lock
pop
rclb
dec
enter
xchg
cli
xchg
pop
in
sbb
xchg
or
and
pop
mov
cli
ja
xor
insl
cmp
aas
adc
xor
fnsave
add
push
add
mov
push
mov
adc
mov
sub
jnp
out
or
adc
enter
cmc
lret
jle
loope
inc
outsl
ret
call
cmc
and
mov
cmp
push
dec
scas
and
sub
mov
stos
mov
in
xchg
test
or
fldcw
cmpsl
adc
cltd
ja
frndint
sub
mov
arpl
shrl
add
fcomp
sbb
shrl
dec
mov
inc
das
clc
out
clc
xchg
pop
insl
aam
push
mov
pop
adc
fwait
pop
sub
and
out
iret
pop
sub
mov
jno
jo
mov
jbe
rcrl
jmp
jecxz
mov
test
jb
cs
add
lds
movsb
xchg
and
push
pusha
adc
fdivrp
lahf
mov
les
cmpsl
cmp
lret
hlt
sub
mov
fwait
xor
addb
stos
add
push
outsl
pushf
fistl
test
leave
dec
jno
push
popf
scas
jle
mov
mov
dec
dec
xchg
arpl
stos
fs
xor
int3
in
hlt
mov
in
xchg
sarb
inc
mov
dec
xchg
lret
nop
test
xchg
fwait
dec
cmp
les
hlt
inc
jbe
js
dec
mov
or
dec
fistpll
mov
sbb
mov
negb
xchg
scas
sub
out
pop
mov
mov
in
sbb
mov
jecxz
or
jmp
pop
loopne
ss
dec
xor
cld
outsb
sbb
push
ret
int3
mov
add
ljmp
loop
inc
pushf
adc
fistps
or
or
or
aad
add
mulb
xchg
nop
movsl
xchg
fs
mov
mov
loopne
test
into
in
fisubrl
fs
and
dec
sub
add
lock
stos
push
lcall
test
int
or
fwait
js
sbb
jb
cld
mov
in
test
mov
iret
xchg
jno
loopne
stc
inc
dec
push
pop
pop
leave
sub
xchg
into
out
movsl
fwait
pusha
rol
dec
push
inc
test
inc
mov
pop
jo
hlt
mov
cmc
and
insl
add
jo
addb
xor
mov
stc
stos
xlat
repnz
int3
nop
daa
loopne
xchg
mov
repnz
lcall
mov
push
jle
xor
dec
ja
inc
in
xor
sbb
add
push
leave
outsb
mov
std
stos
pop
inc
add
ss
and
int3
out
imul
jns
pop
jne
icebp
xor
cmp
test
test
jmp
sub
jge
mov
movsb
pop
repz
push
cmp
adc
or
rolb
jno
and
aam
ret
rolb
add
jnp
int3
xor
mov
cmp
add
xchg
or
ret
xor
rolb
orb
enter
ljmp
ret
dec
rolb
push
adc
and
rol
mov
out
call
addr16
es
cli
add
data16
aaa
jge
xchg
mov
sti
xchg
addr16
decb
leave
adc
push
ret
xlat
mov
xchg
je
adc
mov
push
nop
stc
mov
test
xchg
out
popf
inc
hlt
jnp
pushf
xor
ffree
mov
mov
nop
dec
lods
pop
fcoms
sahf
out
je
test
push
add
mov
adc
xor
imul
sub
mov
into
adc
mov
daa
pop
push
inc
lcall
cld
adc
mov
and
je
insl
xor
repz
pop
icebp
mov
icebp
push
test
xchg
pop
xchg
daa
repnz
mov
stc
and
push
cmpsl
pop
daa
jne
sahf
mov
mov
shrl
std
out
aad
or
movl
ss
sbb
fcoms
in
outsl
sbb
sub
inc
push
pop
sub
insb
xchg
jle
xor
xor
jne
lods
pop
add
cs
lahf
or
mov
aad
xor
sub
lods
mov
stos
push
sbb
and
jnp
lcall
fstl
mov
xor
xchg
int
outsl
or
push
pop
pop
sub
push
scas
aad
inc
rcr
mov
inc
js
cmp
stos
test
sub
xor
xchg
push
add
into
ret
fwait
push
inc
testl
mov
xlat
and
mov
int3
in
pop
jnp
in
lock
xchg
push
dec
dec
mov
jg
rolb
jb
sub
sbb
xlat
jb
fists
push
nop
in
sahf
out
clc
push
jbe
lods
xor
xor
lret
push
or
int3
mov
aas
sub
je
dec
movsb
mov
fildl
push
adc
gs
out
inc
ja
and
jmp
ljmp
cmpl
pop
jno
push
stc
mov
jno
pop
iret
cmp
mov
lahf
je
sarb
int
push
adc
fwait
imul
loopne
movsb
popf
sbb
aam
jg
inc
mov
cli
jnp
sbb
add
push
xor
sbb
mov
rorl
mov
lahf
jle
lret
shll
mov
hlt
push
xchg
lret
rep
xchg
ss
xlat
stos
hlt
popf
fdivs
mov
test
loopne
cmp
in
pop
or
push
mov
pop
and
jmp
jne
popf
int
xor
mov
notl
xchg
iret
mov
jmp
add
sbb
dec
xchg
mov
ja
out
jecxz
mov
xchg
imul
adc
rclb
out
mov
dec
dec
cli
mov
cmp
lret
xchg
push
test
jle
sbb
fwait
mov
sbb
mov
ljmp
fcoml
popf
test
cmpb
loopne
or
test
fdivrp
addr16
cmc
out
pop
ror
mov
std
push
or
addl
mov
mov
test
adc
test
add
pop
cmpb
loop
out
test
mov
cli
ficoml
es
cwtl
aaa
mov
aaa
jp
cltd
ljmp
inc
repz
lahf
daa
mov
mov
mov
xor
pop
scas
xchg
xchg
add
or
in
inc
gs
test
inc
test
fidivl
stc
cmp
ss
push
mov
lret
dec
ljmp
push
imul
mov
pop
xchg
pop
outsl
inc
mov
cmp
sbb
cmpsb
ror
jge
mov
int
inc
shrl
inc
stos
mov
cwtl
pop
ss
and
fiadds
mov
das
cwtl
pusha
xchg
outsl
lcall
gs
fninit
outsl
lcall
rcll
mulb
test
fwait
push
mov
mov
rcl
xor
imul
test
and
inc
shr
andps
inc
sti
out
mov
jg
mov
mov
xchg
repz
cmp
sti
scas
es
pop
xor
stos
xor
push
sahf
call
xorb
ror
and
xor
stos
push
call
lret
adc
xchg
cmp
or
out
pushf
sbb
ljmp
in
xor
ljmp
popa
outsb
xor
push
cwtl
scas
lret
dec
pusha
inc
jl
cmp
and
fsub
mov
les
movsl
xorb
repnz
lcall
ret
sti
lahf
cld
mov
ret
int
push
popl
jnp
mov
fxch
aad
cmc
fst
add
icebp
xchg
lods
push
leave
orl
insl
jns
and
push
push
ss
fwait
jnp
inc
jp
mov
shll
and
bnd
and
mov
push
xchg
jno
sarl
xchg
add
pop
fisubrs
cmp
scas
pop
pop
or
imul
in
mov
inc
shr
xchg
or
sub
and
add
push
mov
xchg
mov
mov
push
sub
push
xchg
mov
nop
sbbl
scas
sbb
aas
jle
mov
mov
mov
data16
call
sub
js
into
jae
imul
lcall
mulb
cwtl
sbb
jb
or
test
or
das
imul
push
adc
or
cmp
ja
rorb
mov
sbb
xchg
insl
ss
fwait
add
dec
loopne
cvttps2pi
lods
jbe
add
mov
lahf
addr16
pop
sbb
push
cmpsl
pop
jns
stos
mov
sub
inc
pop
xchg
js
mov
imul
mov
dec
test
xchg
and
lods
aam
xchg
sbb
jge
xor
cli
fs
and
pop
and
dec
and
cmp
xor
xchg
xor
xorl
aas
orb
lods
aad
in
lcall
lahf
inc
in
popf
adc
push
xor
pop
inc
add
adc
dec
pop
push
outsl
xchg
jmp
inc
and
popa
fwait
jge
push
sub
in
iret
xchg
cmp
jbe
cmp
and
sub
fimuls
ljmp
data16
clc
fstps
int
data16
xchg
outsl
xchg
clc
fisttps
add
shrb
xor
scas
loopne
inc
je
mov
gs
rcrl
out
shr
iret
outsb
mov
mov
arpl
fs
sahf
icebp
cmp
adc
sbb
aas
add
repnz
aaa
in
call
sahf
mov
fsubrs
push
or
cmpl
xchg
es
mov
fisubl
divl
lock
pusha
inc
ja
cmp
xchg
pop
decb
pusha
mov
roll
lds
lahf
mov
jle
les
xchg
mov
sbb
ss
push
jecxz
sub
jb
addb
pop
pusha
and
jecxz
add
push
xchg
ret
sub
cmpsl
adcb
xlat
pop
or
adc
lahf
adc
jb
out
cmpsl
mov
cmp
out
ds
sbb
sti
mov
mov
xor
decb
test
jg
xchg
add
adc
mov
add
loop
jg
mov
aas
mov
mov
repz
xchg
lahf
hlt
mov
push
ss
ds
sbb
xor
ss
xor
roll
aad
jns
popf
fwait
ja
negb
cmpsb
aad
mov
in
inc
mov
mov
stc
mov
test
cld
mov
push
fsubs
imull
cmp
inc
push
mov
push
cwtl
ds
cmc
inc
cmp
int3
mov
inc
xchg
jecxz
inc
jmp
or
incl
xor
mov
mov
xchg
adc
cmpsb
cmp
inc
dec
idiv
bound
xor
mov
stc
push
fneni(8087
lock
inc
add
mov
add
stos
fs
fsts
xchg
cmc
jp
xchg
dec
test
ja
call
lahf
imul
cmpsb
fdivl
inc
jb
js
adc
push
test
aas
aad
jb
push
mov
stos
iret
xor
mov
dec
sbbl
hlt
lods
add
xor
rcrb
push
pop
jg
mov
or
adc
scas
add
jl
div
insl
dec
arpl
cld
inc
sbb
xor
adc
lret
orl
bound
sti
shlb
out
gs
mulb
jecxz
mov
lret
inc
insb
jns
flds
add
outsb
adc
push
dec
xchg
std
negb
roll
fisttps
xor
stos
cmpsl
xor
pop
lods
cmp
jmp
dec
andl
cmp
ret
jno
loopne
test
jle
mov
aas
stos
popa
sti
mov
lea
daa
sahf
lcall
cmp
sub
xchg
push
xor
lods
adc
cmp
arpl
xor
cmpsl
lret
jle
mov
mov
fsubrs
mov
push
cmpsb
dec
in
add
or
inc
int3
dec
jle
mov
lods
jg
pushf
mov
push
cmp
mov
pop
lret
mov
sti
movsb
mov
cmp
dec
lahf
xchg
xor
push
testb
mov
shlb
add
adc
or
nop
fstpl
xchg
mov
daa
fwait
ret
sub
jbe
mov
mov
cs
in
rcll
mov
mov
aad
cltd
int3
dec
cmp
rolb
add
ss
dec
les
mov
insl
xlat
inc
mov
lcall
push
fwait
mov
inc
cmp
push
pop
and
lods
aas
inc
in
loopne
fisttpl
xchg
jp
adc
add
mov
jnp
pop
popa
cmp
insb
and
lahf
lock
sub
aam
popf
lret
add
dec
cld
mov
push
js
inc
jb
mov
add
arpl
fiadds
ret
in
sub
mov
mov
ret
sub
and
insl
add
ficomps
inc
sbb
in
add
xchg
scas
outsl
out
or
movsb
int3
lods
ljmp
outsl
stc
xchg
popa
jle
jne
fwait
sahf
cmp
push
lcall
mov
outsb
cmp
or
jno
seto
rcll
push
repnz
ss
out
inc
push
sbb
and
call
or
fsubr
test
push
sub
push
sub
mov
pusha
jge
push
adc
sbb
pushf
mov
push
out
popf
inc
dec
js
cmp
push
das
incb
es
mov
leave
xor
push
pop
push
es
xchg
pop
fwait
sbb
and
sub
jae
pop
cltd
out
das
ja
pop
js
jb
lea
fwait
insb
xor
jne
enter
inc
stos
test
fwait
or
scas
jo
imul
test
ljmp
out
lock
sti
mov
sbb
loope
dec
cltd
test
clc
dec
jno
call
je
adc
adc
sub
xchg
xchg
idiv
pop
mov
or
jnp
mov
jns
xchg
dec
cmovne
mov
add
and
lahf
add
repnz
addb
adc
xor
insl
test
jl
arpl
cmp
call
fs
and
push
push
lcall
movsl
sbb
or
mov
cmc
xchg
rorb
loopne
scas
daa
out
es
leave
xor
or
xlat
orb
and
push
mov
xor
dec
ret
push
dec
pop
sub
daa
jb
icebp
out
movb
popf
pushf
inc
push
je
test
adc
or
std
push
hlt
mov
dec
int3
js
dec
mov
cmp
in
pushl
pop
test
loope
cli
xor
adc
sti
outsb
xor
pushf
lds
mov
sbb
out
repz
xchg
sub
mov
xor
xchg
stos
mov
fidivrl
mov
xchg
mov
and
jecxz
dec
cmp
sub
bound
loope
push
and
das
ds
mov
repnz
push
xchg
lods
mov
or
pop
bound
jno
into
fsubrp
mov
mov
mov
es
pushw
jmp
sbb
mov
lods
outsl
mov
fst
stos
cmp
add
cmp
mov
and
pminub
outsb
and
test
int
fisttpl
adc
rcll
scas
add
inc
sbb
mov
in
std
icebp
push
ss
shll
imul
lahf
cmpsl
aam
inc
iret
or
cmovp
ss
mov
pushf
loop
inc
xchg
std
loopne
testb
mov
sbb
mov
cld
cmp
data16
xor
test
dec
mov
xchg
insb
cmc
js
jmp
or
fs
or
les
hlt
clc
jge
cld
dec
sub
jge
mov
xchg
sub
jp
mov
insb
notl
jl
lds
push
fwait
mov
bound
pop
mov
mov
icebp
mov
mov
roll
pusha
scas
mov
xchg
mov
test
jb
pop
push
inc
inc
jb
or
stos
loopne
adc
pop
out
cli
lods
sahf
adc
loopne
cmpsb
push
push
ds
adc
andb
frstor
inc
daa
mov
dec
jo
mov
mov
push
cmc
cwtl
hlt
cmp
sub
ss
clc
jp
jl
sbbb
repnz
push
lock
add
lock
push
daa
pop
push
xchg
pop
jbe
sarb
sub
adc
addr16
out
pushf
imul
js
iret
scas
stos
add
and
outsb
test
int
rol
sbb
xchg
addr16
and
test
add
lods
das
jmp
je
jle
mov
pop
psadbw
loope
xchg
test
test
mov
mov
pop
xchg
pop
cld
lock
jnp
push
jmp
in
mov
xor
push
adc
xor
daa
cmpsl
push
add
cltd
push
scas
inc
mov
fwait
pop
in
and
ds
fadds
inc
and
or
mov
xor
lods
nop
stos
mov
mov
cmp
aam
mov
xchg
hlt
icebp
cmp
hlt
pop
add
jo
test
in
sub
mov
hlt
xor
ret
dec
loop
cmpsb
lret
call
jmp
loope
mov
mov
out
cs
stc
ret
es
cmp
bound
push
enter
jp
std
sub
xlat
or
lret
sti
and
mov
mov
ss
js
in
cmp
jge
inc
push
gs
lcall
xor
dec
jecxz
sbb
cmpl
mov
jnp
cld
test
add
gs
xorb
shl
dec
mov
clc
pop
inc
jbe
pop
inc
sub
fists
insl
repnz
outsl
jo
and
pmuludq
mov
pop
popa
outsl
xor
lods
movsl
stos
out
scas
pop
cli
inc
fmul
call
push
movsb
lea
pop
cmp
pop
inc
pop
nop
pop
jl
dec
js
popf
jno
push
push
shl
mov
out
testl
in
mov
mov
scas
add
pop
push
mov
sahf
pop
enter
cmp
adc
in
or
inc
cmp
dec
sahf
push
into
sub
data16
enter
add
imull
das
sbb
mov
fdivs
mov
jne
es
icebp
ja
cmp
in
das
mov
leave
sbb
inc
dec
and
bound
cmp
out
sub
cwtl
add
repz
fiadds
dec
and
push
mulps
xchg
and
mov
inc
jnp
cltd
cmp
ds
push
sbb
out
adc
pop
gs
ja
xchg
mov
mov
pop
shrl
mov
cmpsb
ds
fnstenv
movsb
repz
dec
loope
push
xchg
scas
cmp
mov
lcall
xchg
pop
push
stc
and
pop
ret
jb
cmc
mov
jbe
jl
lds
mov
xchg
aad
mov
mov
xor
push
ficoml
insl
inc
inc
movsb
imul
or
pop
inc
das
sub
jae
sub
mov
in
cld
cmp
xorl
mov
xchg
ja
movsb
pop
sahf
sbb
out
lods
mov
in
inc
inc
xchg
cmpsl
xlat
test
rcl
fs
fiaddl
mov
flds
cmpsb
push
enter
in
aam
xchg
sbb
xor
out
pop
out
xor
fstps
xor
rorl
cmp
push
sub
sbb
sbb
and
cmp
push
dec
fsubrl
lcall
and
mov
cmp
movsb
jecxz
in
jg
adc
xchg
dec
in
sub
pop
mov
or
cli
test
xchg
sbb
push
mov
lret
xchg
scas
testb
ret
cmp
inc
jo
fprem
pop
xor
dec
ret
leave
add
nop
push
cmp
in
stos
add
pop
push
and
in
inc
stos
dec
mov
and
cltd
std
jno
jle
xlat
rcrb
or
add
adc
test
adc
movsl
dec
call
rcr
sbb
mov
mov
sti
cmp
test
add
scas
adc
clc
push
pusha
ja
push
inc
pop
scas
dec
xchg
mov
fwait
or
and
mov
mov
imul
cli
cmp
pop
out
fwait
sub
cmp
cs
leave
inc
inc
addr16
push
lretw
push
shlb
push
js
lds
les
std
filds
hlt
xchg
sbb
pushf
ja
icebp
aaa
add
ja
repz
insl
xlat
pop
xor
mov
mov
adc
xorb
inc
cld
and
jg
mov
fnsave
in
cmpsb
dec
jg
dec
aaa
loope
mov
je
in
push
mov
or
sbb
insb
push
les
out
dec
ss
add
cmpsb
fdivrl
data16
mov
pop
xchg
sub
cmp
or
push
test
add
out
mov
dec
xchg
popf
dec
push
sarb
inc
int3
xlat
push
sahf
mov
lock
adc
fisttpl
movsl
sti
inc
movsb
std
loopne
mov
xchg
jne
push
cmpsl
push
mov
cmp
bound
call
js
xor
inc
lods
out
push
repz
fisttpll
xor
shll
jmp
sahf
xchg
lock
dec
adc
or
jne
lret
lods
movsb
xorl
inc
sbb
xchg
ret
mov
mov
rol
mov
test
loop
xchg
dec
int3
sbb
repz
bound
xchg
aam
add
add
xchg
add
add
test
sbb
jb
lret
sub
bswap
call
jp
and
and
push
mov
jns
adc
scas
outsl
rorl
mov
subl
rorl
or
in
scas
filds
adc
cmpsl
pop
xchg
jle
fnsave
adc
movsl
icebp
sub
pop
in
lahf
out
lock
mov
adc
cmp
pop
sti
xchg
enter
testb
adc
mov
mov
stos
sbb
xor
rorb
jns
rcrb
pop
cwtl
adc
stc
div
call
ror
in
fsub
mov
loop
xor
jecxz
add
into
cmpb
jae
and
insl
stc
fs
and
incl
test
loope
jns
mov
sbb
jno
jne
xor
or
and
xchg
imul
dec
insl
ja
mov
addl
jne
xor
xor
lods
or
mov
ret
xor
sarb
jecxz
mov
pop
sbb
hlt
sbbl
lds
aad
add
xor
gs
or
shll
in
hlt
gs
mov
add
mov
mov
shl
cmpsl
lea
mov
push
dec
or
jnp
dec
sbb
mov
push
mov
loop
sub
jnp
dec
movsb
cld
jbe
mov
add
mov
in
sub
or
add
sbb
mov
cli
rorl
fidivl
cmpsl
mov
int3
lahf
addr16
clc
rcll
sub
pop
jne
rcll
jnp
mov
lods
adc
sub
arpl
testb
or
mov
test
xchg
mov
cmp
sti
jb
mov
int
push
enter
xor
jmp
mov
inc
es
and
mov
and
lcall
in
jecxz
adc
jmp
add
pushf
out
int3
add
push
xor
and
sti
adc
push
popa
fistpll
push
ret
xchg
rol
pop
push
lds
fwait
loop
in
adc
out
dec
jmp
xchg
mov
enter
int3
loopne
pop
ret
mov
lock
jo
divb
mov
out
adc
fwait
mov
mov
into
lret
sub
dec
cs
xchg
repz
push
xor
jmp
es
mov
shrb
sarl
dec
xchg
fcmovb
mov
loop
je
mov
dec
and
or
dec
inc
xchg
scas
loopne
sub
nop
or
jno
or
jge
repnz
icebp
mov
sbb
mov
call
pushf
outsb
aaa
call
orl
lcall
inc
js
xchg
int3
pop
xchg
shlb
xchg
xorl
or
ja
jnp
sbb
fisubl
jecxz
jne
sbb
aad
loopne
push
mov
ret
inc
jg
add
push
daa
iret
mov
push
sub
nop
aas
out
test
or
popa
cltd
outsl
das
adcb
mov
stos
xor
insb
iret
aas
aaa
lea
mov
in
hlt
pop
subb
mov
cli
adc
jbe,pn
in
outsb
scas
lret
sub
xorl
lcall
jbe
sub
lret
adc
adcb
and
int
xor
inc
popa
ror
bnd
jecxz
mov
jl
lds
outsl
mov
xchg
add
jecxz
arpl
cmp
aaa
stos
popf
andb
jle
jae
cmc
addr16
sbb
out
in
shr
repz
insl
push
push
xor
jb
jle
xor
or
fucomip
rep
dec
or
mov
or
out
dec
mov
jnp
loopne
sbb
insl
sarl
into
mov
pop
mov
cs
inc
test
dec
pop
fwait
sub
sbb
ret
mov
insb
jle
inc
ljmp
jb
in
sub
dec
roll
cmp
es
xchg
push
aad
fwait
lods
push
lods
rcl
sbb
das
xchg
mov
dec
out
jno
lock
mov
pop
ljmp
add
cs
inc
pop
mov
popf
inc
aaa
rep
pcmpgtw
ljmp
cwtl
dec
fwait
sahf
dec
mov
inc
push
ss
sbb
out
cmpxchg
xor
aas
jne
cmc
pop
and
fwait
push
fs
pop
int3
jmp
lret
std
jno
ljmp
push
mov
cmp
out
jg
clc
fwait
dec
bound
stos
pop
loopw
adc
mov
popf
cmpsb
mov
and
sti
dec
ljmp
outsl
pop
sbb
jne
lods
mov
jbe
rcll
loope
leave
lock
cmpsb
lcall
cmp
mov
cmova
inc
xor
andb
cld
jb
and
or
shl
fwait
pop
adc
repz
subb
jl
lret
fdivs
jecxz
mov
mov
or
add
cmp
fisubs
ja
jnp
mov
mov
add
aad
inc
or
dec
ret
xchg
gs
jecxz
jo
lret
xchg
or
mov
pop
int3
cmp
lds
lret
fidivrl
dec
pop
lret
adc
js
and
xlat
out
in
lock
and
gs
sbbb
dec
fs
inc
xlat
sbb
adc
fs
pop
jno
and
orl
jne
add
addr16
pop
movsb
sub
subl
mov
mov
icebp
dec
xchg
data16
xchg
sahf
in
cmp
cli
push
mov
pusha
push
call
les
sbb
outsb
out
bound
sub
fcompl
and
or
pushf
xchg
and
mov
fs
cmpsb
push
je
mov
aam
ret
dec
or
inc
ljmp
sub
in
enter
push
push
push
mov
imul
leave
xchg
inc
jle
mov
nop
sbb
hlt
out
lahf
xor
rol
stc
popf
mov
or
or
cmc
enter
or
add
fcmovb
sub
insl
scas
stc
mov
push
fdivrl
aad
cs
addr16
dec
xchg
outsb
leave
push
pop
cmp
pop
add
push
ss
arpl
xor
int
out
fildl
mov
in
sahf
and
jbe
in
mov
and
mov
dec
mov
add
xor
packsswb
test
adc
pop
mov
addr16
scas
ds
sub
sbb
lret
or
insb
mov
es
int
paddsw
sahf
pop
sub
imull
pop
mov
push
push
cwtl
push
rep
push
push
pop
dec
and
test
les
mov
cld
push
pop
scas
pop
gs
push
jno
mov
outsl
dec
inc
fwait
testl
push
push
cld
dec
fldl2t
add
int3
jecxz
inc
mov
mov
xchg
push
sbb
insb
out
mov
push
aas
push
les
les
je
inc
out
cmpsl
cmp
mov
and
movsl
lock
out
add
cmp
cmpsl
repz
ds
add
mov
cs
sti
jo
cmp
btc
or
sub
mov
stc
fldl
sbb
lret
xor
mov
popa
outsb
fiaddl
shlb
push
mov
mov
pop
test
rorb
or
dec
fists
mov
pusha
lahf
xor
xchg
push
jo
jge
xor
sub
xor
aas
mov
addr16
xor
dec
push
adc
xchg
inc
cmpsb
adc
adc
jmp
sub
fldl
add
repz
fistpl
lahf
shrl
imul
jne
es
imul
sbb
mov
jl
test
sbb
das
in
fadds
icebp
sbb
fnstcw
outsb
add
aam
shl
adc
pop
mov
jne
mov
add
adc
pop
push
lcall
cmpsl
test
les
ja
adc
fcom
inc
or
pusha
movsl
or
push
mov
test
push
sub
xchg
sbb
inc
cmpsb
mov
call
les
test
dec
mov
cmp
sahf
shlb
mov
mov
int
inc
fistl
add
mov
aad
out
adc
dec
mov
mov
and
stos
jg
stos
ss
push
fwait
loop
movsl
jb
xor
popf
std
rcrb
repnz
push
icebp
adc
pop
shll
mov
test
mov
push
mov
pop
or
mov
lcall
outsl
ss
mov
cmpsb
out
jb
xor
cmp
mov
push
int
insb
pop
aam
inc
pop
push
inc
sarl
xorl
popf
in
push
or
cmp
add
mov
stc
pop
xlat
push
push
in
ret
lcall
gs
mov
cmp
out
das
pop
mov
ret
xorb
jge
xchg
inc
mov
es
and
jbe
pop
mov
mov
jp
pop
aad
sbb
aaa
or
sub
add
hlt
scas
sbbl
push
mov
jl
ja
loope
insb
xchg
loopne
dec
repz
xchg
dec
pop
test
pop
int
fisubrs
mov
sahf
popa
test
and
mov
jnp
pop
sub
into
bound
push
fcomp
imul
notb
dec
mov
xchg
dec
sbb
iret
xor
movl
sarl
sub
int
into
mov
ftst
ficompl
scas
add
dec
cmp
push
mulb
js
into
bound
sub
nop
lret
scas
es
xorl
out
cld
dec
pop
enter
adc
in
movb
sbb
into
into
add
testb
outsb
mov
push
mov
cmp
and
cmp
ret
xor
jp
or
jg
nop
call
loop
insb
sub
xor
sub
or
bound
test
shrl
shrb
sbb
shrl
out
pop
jge
xor
call
imul
jge
stos
cs
xchg
mov
into
dec
imul
mov
push
lds
or
inc
hlt
clc
repnz
add
jbe
addl
xchg
adc
imul
jns
xchg
popf
imul
jle
out
mov
scas
aam
dec
sub
mov
mov
or
test
mov
inc
inc
jo
cltd
push
cmp
push
bound
mov
inc
ja
imul
fidivrl
imul
imul
ret
rorw
outsl
in
hlt
mov
pushf
cmp
push
notb
sbb
push
mov
jb
faddp
das
mov
add
cld
sbb
add
xor
pop
adc
iret
sub
shll
cmpsb
inc
adc
int3
int
or
ret
dec
int
in
orb
loopne
loop
icebp
cwtl
sbb
roll
adc
test
ss
dec
or
xlat
bound
add
dec
xor
mov
fdivl
or
jge
movsl
fbld
cmc
xchg
adc
popa
xchg
mov
mov
or
mov
cmp
sahf
fdivrs
lods
fsubrl
sbbb
cli
lret
xchg
mov
ljmp
into
cltd
out
out
cmp
inc
add
jns
or
scas
adc
cmp
xor
xor
insl
push
lods
cmc
inc
stos
ret
and
repz
push
gs
jo
mov
divps
push
sbb
sbb
add
inc
js
sbb
sahf
imul
push
inc
add
or
clc
push
cld
xchg
not
push
pop
andl
in
in
lods
lods
lods
pop
out
shl
incl
xchg
sbb
arpl
outsb
jae
stos
and
sbb
insb
mov
push
lahf
mov
int3
shlb
je
sub
loop
fimull
cmp
test
test
xorb
ja
sbb
scas
shl
pop
cli
mov
mov
dec
or
int3
push
mov
ss
push
xlat
mov
sbb
fwait
jnp
dec
daa
mov
das
jg
arpl
mov
push
arpl
sbb
lahf
jo
and
push
push
and
mulb
test
lret
cs
jecxz
or
cs
lea
jbe
mov
cmpsb
fs
add
cmp
pop
inc
inc
push
jge
leave
inc
out
repnz
dec
pop
inc
mov
inc
out
pop
and
loopne
jg
cltd
mov
movsb
and
test
mov
sub
xchg
or
push
lock
lret
outsb
xor
mov
daa
int3
out
sbb
jle
lods
es
pushf
push
cltd
stos
jmp
fimuls
xchg
cmp
out
push
insl
push
jmp
popf
fildll
push
dec
jo
sub
xor
sbb
cs
cltd
fcmovne
es
dec
gs
cmpsl
dec
pop
aam
and
daa
mov
call
add
xchg
lret
pop
mov
xchg
hlt
fildll
jmp
iret
fcoms
mov
test
mov
xor
enter
rcrl
push
pop
xor
cmp
adc
fwait
jae
insl
fisubrs
cmp
mov
ret
lcall
mov
dec
cmp
mov
or
mov
testb
and
inc
enter
inc
shlb
or
mov
daa
dec
sub
push
addb
ds
mov
jo
jle
push
mov
insb
mov
out
inc
test
mov
cmpsb
dec
mov
mov
scas
rclb
jno
stos
push
data16
and
in
push
add
mov
push
inc
leave
cmc
ret
and
fcoms
aas
xor
jp
jg
mov
mov
and
ret
in
sub
pop
cmp
stos
add
cs
std
loope
out
push
xor
push
dec
jae
sti
cli
push
xchg
loop
pusha
daa
or
cltd
or
sub
test
mov
scas
pusha
cli
lcall
add
in
pushf
jnp
mov
push
imul
dec
adcb
test
stos
aad
std
jle
pop
clc
popa
iret
test
addr16
pop
cmp
popf
sub
sub
test
and
jno
in
mov
scas
into
add
jb
scas
sub
add
fisubrs
lds
inc
int3
sub
and
inc
mov
ficoml
or
jnp
push
dec
cltd
add
xchg
or
xor
sbb
lea
inc
int
and
shlb
or
pushf
fwait
mov
test
jne
and
pop
xor
insl
pushf
xchg
adc
adc
sar
shlb
ret
dec
mov
cli
sarl
cmp
or
jge
dec
push
daa
fidivs
sub
rcl
add
out
adc
mov
mov
push
mov
jg
xor
or
fsubl
xor
stos
fimull
mov
lock
add
cs
pop
jno
dec
sbb
sub
mov
sbb
clc
inc
mov
mov
dec
push
out
sub
xchg
adc
add
ljmp
loope
or
mov
fidivs
jae
aad
lods
dec
rorb
or
gs
jb
lds
js
jmp
arpl
rolb
fs
lock
dec
adc
lahf
push
dec
js
arpl
jl
push
or
cmpsl
fwait
ljmp
cwtl
pop
in
add
mov
jge
arpl
das
and
push
jmp
xor
orb
xchg
sub
cmp
dec
xchg
xchg
and
sub
sbb
fldt
and
lret
dec
mov
sub
jmp
adc
inc
mov
lahf
inc
push
xor
sub
sbb
add
fnsave
cmpsb
jo
xlat
jl
lea
add
sub
lods
int3
cmp
pop
dec
cmp
push
fwait
int3
pop
inc
stos
roll
idiv
arpl
xchg
imul
pop
dec
popa
roll
dec
cpuid
cmp
loop
dec
lods
loopne
mov
xor
xor
in
xchg
stos
imul
shl
popf
xchg
outsl
lock
jmp
ret
ret
dec
jns
pop
repz
pusha
stos
mov
lock
and
mov
push
jae
adc
out
dec
pusha
and
adc
aas
cmpsl
cmp
add
ja
mov
repnz
aas
loop
push
sbb
loopne
or
pop
add
loop
aam
and
negl
jo
std
cmp
adc
jmp
pushf
aas
clc
addr16
lahf
push
mov
into
and
imul
inc
inc
lcall
sarl
stos
inc
sub
inc
fidivs
loope
xchg
dec
add
add
push
lods
mov
cmp
int
pop
cmp
stc
inc
out
adc
cmc
dec
jmp
leave
mov
push
pop
in
adc
dec
add
loop
aam
je
push
mov
jno
mov
push
les
rorl
push
fwait
int
jbe
movsb
orl
cmp
lock
outsl
pop
xchg
mov
clc
add
rcr
fsubl
lret
pop
cmp
mov
add
incb
mov
cmpsb
lret
popf
add
mov
sbbb
push
ret
imul
sahf
inc
inc
mov
jb
test
cmp
xchg
dec
inc
aas
cmc
lahf
pusha
jb
jmp
dec
sub
xchg
dec
sbb
outsl
mov
sub
add
mov
xchg
cmp
push
add
sub
mov
mov
push
dec
int
popa
mov
pusha
lret
in
pop
mov
mov
bound
inc
movsb
dec
sub
jnp
dec
in
inc
jl
iret
xorb
pop
sbb
jbe
mov
notl
pusha
inc
decl
sub
dec
cmp
leave
daa
sbb
les
jae
mov
sarl
cmp
and
inc
inc
mov
mov
sub
xchg
pop
les
repnz
andl
loop
adc
sti
xchg
xchg
pop
data16
cs
xor
fstl
cltd
pop
add
dec
jg
jno
mov
arpl
fcompl
cwtl
sahf
arpl
in
clts
xor
aaa
inc
cmp
or
fs
out
mov
inc
cmp
or
pop
add
or
dec
lret
jnp
incb
out
scas
adc
inc
sbb
das
movsb
out
adc
aas
lret
adc
into
push
push
and
ljmp
inc
sbb
dec
push
daa
pop
inc
subb
jle
adc
js
inc
jo
idivl
or
add
inc
mov
xchg
icebp
popa
cmp
insl
aad
or
push
jnp
jecxz
xchg
ds
popf
mov
pusha
sbb
xor
or
imul
dec
lea
xchg
sub
cmc
add
inc
xor
loope
and
clc
cmp
cmp
xchg
push
stos
jnp
mov
mov
pop
mov
push
sbb
push
inc
ret
pop
inc
add
jo
aas
fnstenv
dec
loopne
sarb
test
jp
lahf
cmp
jno
adc
or
cld
jno
test
test
xchg
insb
cmp
mov
lea
or
push
dec
aam
mov
cmpsb
popf
call
pusha
leave
add
fldt
jmp
lret
std
sub
sub
and
push
int3
addr16
xor
cmp
jnp
xor
or
cwtl
imul
and
push
or
sbb
or
jmp
scas
sahf
push
clc
mov
bound
sub
lret
cmc
mov
xchg
lahf
cmp
push
add
lods
xchg
sub
nopl
push
lcall
mov
cmp
mov
mov
in
and
addl
sbb
sahf
inc
mov
adc
shlb
inc
xchg
repz
push
jb
fcomps
adc
adc
cmpsl
call
jnp
cltd
push
movsb
cmpsb
mov
inc
mov
inc
sbb
sub
shr
fidivrl
add
xor
mov
cmp
imul
push
and
leave
ljmp
shrb
sub
pop
jb
xor
mov
mov
lahf
lods
nop
jae
idivl
inc
sahf
adc
inc
xlat
imul
jno
cmp
mov
dec
movsb
leave
push
inc
or
fidivrl
rcll
or
or
out
fstps
les
cmp
ret
sub
inc
pop
ss
jo
rorb
mov
aam
enter
mov
scas
push
add
xchg
cmpsb
dec
adc
icebp
cwtl
dec
cmc
cmp
rolb
mov
or
popf
inc
jle
sahf
loop
push
ds
repz
movsl
push
cmpsb
fistps
mov
imul
push
push
mov
shrb
mov
int3
sub
jmp
xchg
xor
dec
xor
or
sarl
and
cmc
push
sbb
xchg
cmp
scas
imul
jnp
hlt
call
cmp
mov
sbbl
xchg
iret
mov
es
push
dec
pop
mov
jo
shrb
sbb
xor
fildl
xchg
icebp
fdivs
dec
cmpsb
mov
mov
adcl
or
outsb
loopne
xor
ss
jecxz
jmp
jecxz
rorb
ljmp
xor
adc
inc
divl
xor
ds
or
mov
pop
mov
ds
sub
jae
xchg
mov
imul
js
xor
adc
xchg
pushf
cwtl
hlt
arpl
mov
jecxz
or
outsb
pop
jl
inc
fcompl
movsb
clc
popa
xor
cmp
test
shll
out
mov
pop
mov
movsb
imul
daa
sbb
mov
psrlq
adc
addb
xor
and
clc
push
jle
xchg
pushf
xchg
mov
push
add
inc
xchg
pusha
in
jl
ds
push
enter
adc
cmpsl
jl
cmp
inc
mov
add
in
ss
push
xchg
pop
mov
push
into
leave
pushf
push
or
add
jge
push
pushf
adc
loope
outsb
fidivrl
shrl
mov
dec
cmp
cmp
push
inc
stos
stos
pop
mov
cmp
es
arpl
push
shrl
push
mov
dec
loop
push
mov
pop
and
hlt
repz
jno
xor
jno
pop
clc
jne
add
adc
jmp
pop
mov
ret
jo
mov
push
sub
addl
pop
repnz
fidivrs
xchg
and
lds
into
adc
and
inc
push
adc
add
pop
in
test
mov
add
cwtl
and
pop
mov
pop
and
sbb
xchg
xchg
xchg
push
pushf
and
or
jg
xchg
imul
fwait
sti
in
adc
int
xor
dec
xchg
enter
mov
inc
or
daa
fists
popa
popf
inc
push
hlt
mov
test
cmp
int
cmpsl
sahf
out
pusha
push
das
cmp
sbb
or
pop
bsf
sti
test
mov
xchg
call
sub
fildll
sarl
or
lods
ret
cmpsl
sbb
dec
mov
sbb
aas
jo
aad
mov
sbb
jns
inc
and
js
jp
mov
push
adc
imul
or
ljmp
lret
add
sbb
fwait
sbb
hlt
popa
sub
fisubrl
dec
es
jnp
xchg
inc
mov
jg
out
jmp
mov
lret
lret
sbb
cs
enter
mov
pop
push
mov
jo
dec
cs
xchg
js
xor
dec
shl
dec
dec
jmp
push
mov
scas
or
jnp
adc
ljmp
or
xor
pop
mov
int
fnstcw
sti
inc
sbb
mov
int3
jno
data16
cmpsb
xchg
add
in
cld
sahf
shrl
negl
enter
jp
je
ret
add
jb
and
pop
js
adc
sbb
subb
or
xor
xor
pop
cmp
cmp
pop
push
ret
lds
jg
cwtl
nop
sub
in
cmp
loopne
mov
sub
adc
fs
frndint
outsl
push
xchg
iret
movsl
cmpsb
pop
and
iret
adc
addr16
lods
push
mov
mov
ljmp
cltd
adc
mov
cmc
lock
push
test
imul
inc
aam
test
cwtl
cmp
mov
adc
sub
cmp
adc
mov
fs
push
mov
sbb
shrb
rcrb
andl
scas
push
push
pop
repnz
inc
inc
mov
xchg
ret
or
mov
jns
fsubs
jmp
mov
mov
call
push
out
je
mov
lods
sbb
xor
mov
enter
mov
add
iret
push
test
fnstsw
sbb
lret
push
mov
imul
fmull
jae
cwtl
mov
lret
dec
out
movsb
scas
lret
inc
add
repz
adc
mov
rcrb
pop
xchg
xor
push
cwtl
dec
mov
push
fmul
repnz
xchg
jmp
out
or
and
ret
mov
inc
add
inc
test
mov
imul
fwait
xchg
lahf
sbb
icebp
push
inc
out
and
gs
insb
in
jl
inc
add
ret
cmp
sarb
iret
cmp
push
jg
mov
cmpsb
movsbl
xchg
rolb
pusha
sbb
jge
xchg
lcall
lock
mov
std
cli
adc
mov
xchg
mov
push
lods
xchg
icebp
dec
pop
test
pop
lods
incb
mov
lea
add
sbb
in
adc
inc
inc
mov
xchg
jbe
mov
das
nop
ljmp
pop
cmp
shl
pop
fildl
xor
or
lahf
popa
inc
not
mov
dec
test
dec
js
icebp
pop
fsubrs
arpl
pushf
mov
jp
push
mov
add
mov
xchg
mov
mov
lds
int
call
mov
test
jnp
out
xor
js
jo
push
cwtl
insl
std
add
jmp
sub
cwtl
test
fs
mov
cmp
xchg
sub
sub
adc
push
xchg
pcmpeqb
jb
sub
or
cld
jne
mov
aaa
in
cli
das
add
pop
aam
shl
outsb
inc
pop
push
mov
aas
jg
pusha
fisttps
sub
ret
cld
push
pop
lds
cltd
sub
xor
mov
in
inc
mov
shrb
lahf
movsb
add
adc
push
aaa
ficompl
iret
fsubs
stos
inc
jne
roll
test
fldt
lods
mov
cs
jl
imul
scas
popl
xor
fxch
pop
push
loopne
jmp
cmp
jo
aad
xor
or
pop
cmp
xor
sub
sbb
xchg
ds
inc
lahf
out
or
sbb
add
cmove
mov
lahf
jge
dec
and
arpl
mov
xchg
push
cmpsb
mov
dec
scas
push
dec
movsb
sti
outsl
gs
cmpsb
cmp
mov
and
pop
mov
lods
ja
pop
imul
imul
mov
loopne
xchg
add
and
push
push
scas
sahf
sub
shll
inc
and
or
push
in
xchg
add
add
arpl
xor
push
cli
sar
fistpl
sbb
enter
lret
and
or
popa
push
mov
dec
sub
repz
cmp
jge
push
or
add
outsl
adc
movsb
ljmp
xlat
and
std
sbb
pop
test
or
sub
pop
sbb
jge
jl
dec
cmc
push
mov
sbb
inc
add
mov
or
pop
mov
fimull
popa
lds
int3
lods
pushf
mov
in
sbb
xchg
ja
xchg
cli
orb
add
in
jg
filds
cmc
cwtl
mov
pusha
xor
push
push
cmp
mov
fwait
push
dec
aas
inc
lock
enter
lahf
lea
xchg
call
inc
mov
jg
xchg
imulb
je
adc
pushf
pop
pop
inc
mov
int3
test
scas
mov
je
push
dec
sbb
add
imul
lock
psrlq
jno
xchg
test
faddp
cmp
test
mov
mov
lret
stos
push
test
xor
push
adc
movb
rcl
xor
xchg
aad
subb
shrl
mov
scas
inc
into
jo
loop
xorl
xchg
arpl
cwtl
fisubrs
ljmp
ss
fwait
sub
lea
sub
cwtl
stos
cmpsb
in
cmp
mov
mov
push
fmuls
jo
or
cs
cmp
mov
add
pushf
push
sbb
aaa
mov
inc
and
in
or
jge
lret
ds
fstps
sub
or
das
sub
mov
sbb
movsb
inc
cwtl
mov
addr16
mov
mul
jge
xchg
scas
add
xor
add
add
and
out
jb
jno
jo
or
push
xchg
adc
xor
pop
xchg
lret
sti
rcll
jp
inc
jecxz
xorb
pop
cmp
jae
in
jl
cmpsb
adc
or
out
scas
sbb
cltd
jmp
inc
sub
mov
mov
cmpl
pop
addr16
push
cmc
jmp
cwtl
arpl
mov
adc
cmp
test
inc
and
es
data16
jb
rcll
or
stos
cmp
fisubs
pop
into
sti
adc
push
adc
fbld
icebp
js
push
cmp
test
lahf
pop
popa
adc
mov
and
jge
mov
movsb
outsb
mov
adc
cmp
mov
fcomp
pop
mov
mov
dec
or
push
cmc
outsb
les
aam
mov
sarb
xchg
lahf
mov
push
mov
mov
scas
mov
loope
enter
xchg
push
pop
inc
add
repz
push
in
mov
test
into
rclb
cmp
xor
hlt
idivb
inc
sub
jl
and
mov
lods
pop
dec
cmpsb
mov
aad
pop
iret
pushf
push
orl
sbb
out
fisttpll
aas
movb
xchg
mov
lods
sbb
fs
pop
cmpsb
mov
xchg
mov
inc
incb
insb
sbb
xchg
and
fisttpl
fdivs
icebp
and
aaa
and
jmp
and
push
data16
pop
out
add
jb
jmp
addr16
loopne
rol
xchg
movsb
xor
or
out
popa
es
addps
jg
incl
push
js
jg
adc
xchg
incl
nop
leave
sbb
inc
in
lret
sti
pusha
push
push
jne
push
fsts
jg
add
fistps
jbe
inc
mov
incb
jecxz
movzwl
jnp
stc
inc
or
in
scas
and
loope
mov
cmp
or
test
sub
imul
cmpsl
scas
sbbl
push
lods
push
fwait
out
push
jp
mov
push
cli
mov
push
ljmp
mov
pop
pop
outsb
pop
test
jp
std
leave
imul
mov
jno
sbb
bound
xchg
or
aad
dec
movsb
cmp
xchg
clc
repnz
xor
pop
bound
fisubs
jb
je
add
jle
mov
scas
xor
pop
fwait
adc
lock
subw
fdivrl
mov
xchg
outsb
adc
js
pusha
mov
add
stos
ljmp
clc
cmpsl
daa
or
dec
cltd
call
jb,pt
cmp
mov
mov
lret
das
jp
je
dec
add
mov
adc
mov
jae
int3
sub
arpl
dec
subb
shlb
repz
mov
push
or
add
dec
imul
or
or
and
lret
fmulp
pop
lds
std
xchg
incl
aas
fsubrs
xorb
in
mov
adc
xor
jb
adc
scas
and
inc
dec
cmp
dec
call
js
sahf
imul
dec
lahf
jae
mov
fwait
iret
loop
adc
mov
dec
push
movl
or
shll
or
dec
or
sbb
stc
xchg
mov
adc
add
sbb
mov
popf
stos
shlb
inc
fadds
