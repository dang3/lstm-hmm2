mov
shrl
adcl
and
ret
jae
fnsave
or
or
jno
rolb
cs
push
out
push
rol
rorl
outsb
push
hlt
nop
in
je
sub
xlat
xchg
cli
push
aaa
rdpmc
mov
rcll
pop
mov
push
add
pop
jmp
popa
sub
mov
xor
stos
mov
adc
lahf
enter
push
pop
jns
mov
orb
cmpsb
pop
cmpsl
mov
mov
cmpsb
sti
sub
mov
xchg
jmp
or
push
push
jnp
mov
push
ficompl
push
cwtl
mov
fisttpll
test
cmp
call
push
push
add
loopne
xchg
dec
and
bnd
or
cmp
lods
push
cmp
ja
pop
or
imul
and
mov
inc
or
pop
in
repnz
cmpsl
mov
in
mov
jecxz
cmp
ljmp
pop
lahf
xchg
out
dec
dec
mov
hlt
lea
jecxz
cmp
xchg
repz
xchg
adc
adc
pushf
jmp
out
pusha
xchg
inc
and
adc
fnsave
sub
jp
sti
jns
xchg
fwait
mov
repz
ja
out
loope
dec
das
sub
xor
ret
shll
xchg
jb
mov
mov
jle
jmp
xlat
loope
push
or
sub
lods
int
mov
dec
push
jb
imull
movsl
push
add
mov
je
mov
adc
push
mov
stos
in
inc
xor
push
stos
mov
mov
addr16
lcall
cmp
dec
and
dec
add
jg
xchg
dec
in
xor
xchg
pusha
cmpsb
fwait
sahf
in
js
mov
rorb
aas
push
mov
add
mov
jb
aaa
cwtl
aaa
lcall
ds
dec
arpl
stos
push
movsl
fnstsw
sub
dec
imul
adc
test
inc
bound
test
clc
pushf
xchg
rcrl
std
mov
negl
cmpsb
cmpsl
aad
dec
repz
sbb
lret
or
ljmp
data16
mov
mov
or
movb
repnz
fstps
rcl
dec
adc
inc
inc
jno
fmuls
add
movsl
popa
ret
mov
test
clc
mov
sub
jbe
repnz
enter
imul
popa
mov
dec
das
popa
inc
xchg
push
mov
sub
xor
rcrl
rolb
aam
mov
cli
je
hlt
das
add
push
iret
fwait
popf
dec
stc
rcrb
add
push
add
mov
sub
je
imul
js
ljmp
out
xchg
dec
test
les
xor
pop
or
outsb
mov
ss
or
mov
fdiv
xor
cld
out
outsl
inc
push
lods
repnz
sub
mov
inc
mov
pop
mov
gs
call
dec
xor
push
xchg
adcl
adc
xor
mov
imul
fwait
outsb
loopne
add
jge
sbb
fwait
xchg
popf
jmp
shr
ret
add
adc
fmull
js
les
xor
jbe
fwait
test
sub
add
lret
add
mov
jge
xchg
adc
std
cmp
idivl
push
inc
addb
fisttpll
add
test
bound
scas
cmc
dec
pop
jmp
mov
fimull
leave
insb
js
dec
or
repnz
dec
push
lock
and
fs
cmpsl
and
cmp
popf
int3
imul
int
push
pop
nop
inc
pop
lods
pushf
cmp
in
enter
sub
adc
mov
pop
stc
jns
testb
clc
ds
push
xlat
cmpsb
jne
stos
mov
test
dec
daa
sbb
scas
in
das
out
jecxz
or
dec
aam
push
fcoms
fnstcw
aaa
adc
ret
inc
fidivrs
jae
es
mov
fsts
cltd
or
sbbl
movsl
fwait
gs
jns
sti
xor
inc
mov
mov
lret
add
or
pop
pop
xchg
mov
daa
dec
ret
add
jno
ds
jg
push
popa
nop
adc
lods
addb
dec
loope
subl
imul
int3
jne
xchg
mov
push
cmp
jecxz
lahf
add
and
cltd
cwtl
fidivrs
cmp
cmp
sbb
sbb
rol
dec
lcall
push
test
add
xchg
fwait
ljmp
jl
sbb
pop
adc
cmp
and
cmp
cmp
cld
xchg
ror
push
add
movsb
adc
jg
add
hlt
xchg
or
movsb
or
test
gs
inc
or
xchg
xorl
fstpl
jb
aas
in
add
lock
sbb
sub
xchg
dec
add
mov
push
clc
rcrl
shl
lret
mov
push
movd
cmp
jnp
mov
shr
jle
mov
push
xchg
loop
inc
push
repz
mov
inc
mov
jecxz
fs
mov
mov
fldl
aaa
push
jno
and
ss
jge
enter
pop
cmp
inc
mov
shl
adc
sbb
push
and
and
jmp
ljmp
mov
mov
lock
rolb
add
dec
arpl
sbb
mov
add
adc
or
mov
sbb
iret
jge
mov
sbb
jecxz
cmp
test
cmp
loop
ljmp
movsl
repnz
loope
ret
lcall
lret
out
cld
adc
nop
mov
mov
adc
mov
push
push
sub
dec
aam
mov
test
jnp
jle
dec
js
lea
scas
add
ss
out
inc
jnp
and
or
in
inc
pop
in
sbb
push
sti
int3
push
subl
ss
mov
lock
mov
mov
movsl
loope
movsl
pop
std
arpl
imul
ret
ret
add
xchg
repz
das
xchg
mov
imul
jp
xchg
or
ret
mov
xlat
stc
inc
xchg
mov
stos
push
gs
ljmp
ret
bnd
push
movsl
adc
sub
loope
fldenv
sub
pop
out
mov
aam
fisubrs
popa
lcall
mov
mov
jne
and
cmp
int
sti
sbb
xchg
jne
inc
addr16
pop
push
scas
mov
enter
sbbl
xchg
and
jnp
icebp
xchg
lcall
dec
sbb
orb
aad
jg
mov
movsl
pop
jmp
mov
xchg
icebp
loop
aaa
pop
inc
mov
ljmp
mov
shl
arpl
mov
and
pop
jae
xchg
aaa
mov
sub
repz
test
cmp
into
jae
outsb
movsb
clc
lock
int3
add
jae
sbb
push
add
fcoml
cs
sbb
sub
popf
jo
loop
mov
sbb
into
xchg
jge
xor
fs
fldenv
je
mov
pop
mov
imul
push
sbb
pop
pop
sub
mov
sub
mov
pop
out
lea
jne
or
jb
xchg
adc
dec
jecxz
push
inc
mov
add
xor
jle
and
cmp
xchg
int3
aaa
xor
xchg
mov
lcall
cld
push
leave
jne
addb
sub
or
ret
scas
iret
fdiv
aam
jb
inc
inc
jp
decl
push
adc
test
sbb
push
int
cmp
clc
scas
popa
sarl
adcl
insb
scas
sbb
push
mov
mov
adc
pop
das
movsl
aas
stos
fucomi
ret
xor
xchg
inc
xchg
cmp
sbb
dec
push
aaa
sub
add
fbld
std
test
mov
xchg
outsl
scas
pusha
loope,pn
adc
mov
xchg
je
loope
shl
inc
add
out
mov
pop
bound
pop
cli
pop
mov
xchg
in
mov
add
and
inc
arpl
sbb
mov
mov
mov
sbb
pop
mov
xor
xchg
cmp
jo
sbb
xor
cld
loop
inc
in
mov
out
adc
cmpsb
lea
mov
or
sti
ss
movsl
movl
int3
sbb
fnsetpm(287
lret
cmp
jmp
dec
idiv
test
push
in
dec
in
xchg
and
adc
cltd
xor
push
ficoms
enter
call
scas
cltd
test
dec
nop
lret
inc
cmpsb
lds
xchg
jle
je
sbb
in
or
pop
jp
adc
subl
out
aaa
iret
or
mov
out
lods
shlb
fnsave
jg
jl
xchg
mov
and
loope
mov
ficompl
fsubrs
pop
jl
xchg
sbb
inc
das
pop
dec
xor
push
dec
pop
pop
shlb
adc
xchg
std
pop
pop
mov
xor
rorl
popa
sub
push
xor
cmp
stc
shll
pop
sbb
repz
sbb
daa
mov
pushf
clc
lret
xchg
cli
mov
repnz
xchg
xchg
invd
mov
mov
in
imul
aam
negl
xchg
lahf
xorb
mov
out
mov
pop
enter
sub
daa
repz
sbb
xchg
loope
push
lret
fdiv
dec
jecxz
sub
inc
loop
pop
xchg
cmpsb
inc
orl
push
add
out
pop
sub
sub
cmpsb
jmp
pop
das
je
add
insb
shr
ss
stc
fistps
fidivl
scas
iret
and
push
and
movsb
loopne
push
xor
sub
cmp
pop
cmp
sbb
mov
push
push
cmp
sti
push
xor
sbb
mov
insb
cmp
pop
adc
mov
adc
test
bound
into
icebp
mov
jae
loope
jb
ret
pop
test
in
scas
popl
daa
das
jns
andb
mov
sbb
test
jmp
inc
pop
dec
mov
sbb
pop
lret
jmp
cwtl
popf
and
sbb
xchg
or
jae
push
and
aaa
nop
out
arpl
mov
mov
loop
and
cmp
mov
or
out
mov
adc
in
ret
fisttpll
inc
fldl
xchg
xchg
pop
add
into
mov
pop
outsl
push
mov
mov
and
cmc
and
ret
enter
popf
mov
sbb
mov
out
lds
adc
xor
add
dec
sub
movsb
in
push
flds
cmc
jl
mov
push
push
xchg
lods
rcrl
enter
sbb
pop
pop
cmpsb
aaa
sbb
cmpsb
mov
notb
inc
ret
dec
rcrl
mov
xchg
mov
clc
lods
sub
shrb
call
xor
iret
aad
stos
xor
lods
lea
or
sub
stos
in
test
mov
ror
mov
xlat
mov
incb
push
pop
adc
and
das
dec
add
jge
or
fwait
mov
xchg
rol
jg
xchg
fsubp
dec
push
rep
mov
gs
pop
mov
pop
js
cmpsb
fbld
sbb
ffree
mov
arpl
xor
mov
jne
fcoml
mov
jae
lock
test
sarb
fdivr
or
jl
add
jmp
dec
and
mov
aam
inc
outsb
out
mov
mov
mov
insl
dec
arpl
idivl
or
movsb
std
pop
mov
das
cmp
movsl
xor
and
nop
dec
and
gs
cmp
pop
sub
cld
dec
in
test
inc
iret
and
push
int
lea
js
inc
ss
push
mov
inc
pop
push
push
add
mov
loop
push
rcrb
jp
pop
push
dec
mulb
add
cwtl
andl
inc
jb
inc
add
test
xchg
sarl
mov
xor
xchg
cmp
in
imul
add
inc
scas
xchg
dec
inc
mov
push
dec
in
adc
lods
push
or
jecxz
fucom
and
sbb
push
imul
pop
jl
lods
roll
out
pop
cltd
pop
ds
sbb
and
add
pop
popf
shr
mov
or
sbb
dec
or
cli
ds
mov
stos
shll
ja
cs
push
mov
clc
in
pop
ret
popf
outsl
in
addl
jno
lahf
std
sub
rcll
in
mov
mov
dec
fdivrl
div
xchg
lock
xchg
call
popl
into
xchg
and
or
inc
push
jae
sub
xchg
mov
adc
push
push
call
pop
ret
mov
and
test
jle
inc
stos
negb
lret
loop
mov
aad
out
aad
notl
aaa
pop
mov
popf
adc
push
xor
sbb
repnz
movsl
jmp
nop
jo
inc
nop
fstpt
pop
push
jns
ss
adc
push
mov
xchg
pop
sahf
push
mov
rcrb
fcmovnbe
pop
addr16
and
aam
fwait
les
add
inc
ds
cmovno
or
arpl
jecxz
ds
mov
cltd
xchg
mov
popf
js
out
lock
in
iret
add
inc
dec
pop
popf
push
pop
add
mov
pop
cli
into
pop
mov
cmp
jp
or
sub
ds
xlat
and
insb
pop
insb
jge
dec
cmp
andb
dec
cmpsl
mov
mov
imul
xor
mov
maxps
push
mov
repnz
aaa
adcl
call
sub
mov
sar
xor
in
xor
cwtl
fstl
push
cmp
je
cmpsb
lock
lock
cmp
adc
jo
pop
iret
jb
sahf
adc
in
xchg
mov
lcall
clc
int3
lea
mov
mov
das
and
idivb
add
pop
test
ds
mov
mov
test
inc
shrl
lds
insb
ja
pop
add
scas
shll
push
and
cmp
sub
jmp
fistpl
iret
pop
repnz
lea
lcall
add
mov
js
cmp
jl
and
ja
dec
cmp
cs
data16
push
in
add
pop
cmpsb
lcall
sub
xor
sub
xor
mov
std
iret
cltd
or
or
call
popf
negb
and
jp
push
add
hlt
cld
es
ffreep
clc
mov
popf
in
fcmovne
mov
lods
jae
jae
mov
dec
sub
cmpsb
movsb
push
insl
sub
aaa
dec
stos
jne
mov
mov
shr
mov
sub
out
rorb
lret
popa
jns
jo
cltd
jle
sub
lock
aaa
cli
or
in
inc
mov
and
cmp
inc
lods
imul
xor
mov
and
arpl
pop
push
or
mov
xchg
movsb
cmpsb
test
push
out
test
mov
xchg
sbb
insb
js
push
fnstcw
pop
and
mov
xchg
mov
popf
dec
lds
sub
or
call
pop
mov
push
imul
adc
sub
sahf
testb
dec
pop
xor
mov
xchg
arpl
sarl
cwtl
vandnpd
loope
rcl
out
pop
out
popa
les
pop
xchg
test
in
jle
sub
call
sub
sbb
in
pop
xchg
mov
outsl
mov
repnz
out
xlat
les
sub
lcall
and
push
adc
lret
vmread
and
in
cmp
xchg
decl
lret
push
lret
or
mov
dec
or
ficomps
fwait
push
jne
xchg
das
lcall
sub
daa
mov
lcall
sub
adc
mov
cmpsl
jns
sub
mov
dec
lods
push
sahf
ss
jg
inc
pop
pop
rcrl
add
sbb
jno
sub
fdivr
das
loop
xlat
in
sbb
rcr
shrl
add
dec
leave
rclb
xchg
push
xlat
aaa
shll
les
push
cltd
xchg
jo
jmp
insl
test
push
mov
outsl
pop
int3
mov
rorl
dec
cmp
push
cld
sbb
xchg
std
mov
fidivl
cs
fildll
cmpsb
push
xchg
cs
je
jl
addr16
rep
xorb
in
adc
add
data16
rorl
adc
ret
lahf
mov
ret
mov
fwait
jp
pop
dec
test
in
mov
aaa
jg
nop
fstpl
lret
fs
popa
rolb
ljmp
xchg
sbb
mulb
iret
lods
push
jmp
rorl
sbb
xor
dec
stos
inc
outsl
mov
inc
fidivrs
mov
mov
pop
cmpsb
and
fsubrs
lds
xor
lcall
mov
out
fcoms
loope
push
dec
lds
fs
xlat
mov
addr16
test
hlt
push
sub
push
lahf
add
mov
pminub
into
cmp
adc
cld
cmpsb
adc
test
scas
adc
aaa
pop
push
sbb
xchg
and
rorb
mov
xchg
pusha
pop
cmp
cmp
ja
dec
add
out
rcrl
mov
inc
inc
gs
addr16
sbb
lds
stos
jmp
mov
dec
js
popa
push
clc
xor
outsl
or
pop
mov
dec
das
int3
movsl
adc
lret
inc
cmpsb
in
stos
mov
lods
dec
fwait
dec
in
enter
jmp
and
and
das
dec
outsl
std
movsl
aam
ljmp
jle
js
insl
inc
in
es
out
inc
adcb
cmp
test
xchg
rcl
cs
cmc
jno
lods
aaa
lret
adc
sbb
sarb
rcrb
outsl
sbb
or
popa
xor
mov
mov
mov
dec
jg
jns
ss
insl
or
dec
and
out
cli
ja
arpl
lods
cs
or
xchg
mov
call
bound
aad
stos
lcall
rcll
sbb
mov
jno
sahf
pop
daa
popw
stos
scas
repnz
cmp
out
cmp
inc
jnp
dec
sub
nop
mov
dec
in
je
popf
in
mov
lods
xor
repnz
jge
sar
or
int
fadds
inc
out
and
cmp
sub
lret
and
mov
cmpsl
xorl
inc
adc
mov
scas
add
fsubrl
outsb
jl
shrb
ljmp
xorps
jle
or
orb
xor
lods
xor
and
inc
adc
add
pop
rcrb
mov
ja
add
insl
push
mov
gs
sub
mov
lods
mov
das
push
daa
adc
dec
imul
loopne
or
mov
cltd
mov
xchg
mov
sti
jecxz
ret
test
ret
pop
sbb
in
mov
mov
jb
xor
pop
movsl
movsb
cmpsb
sub
xchg
push
mov
sahf
cltd
sarl
pusha
xchg
adc
cltd
orl
out
pushf
fiaddl
mov
inc
mov
fistpl
outsb
inc
xchg
inc
int
data16
bound
mov
icebp
icebp
xor
push
lret
dec
lock
mov
arpl
xchg
sahf
mull
loope
je
or
push
jb
in
stos
and
xchg
sub
inc
bound
jg
adc
rclb
das
or
out
enter
cs
adc
push
mov
and
and
push
mov
jecxz
hlt
mov
dec
inc
sbb
sahf
fwait
pop
cmp
add
xchg
dec
dec
xchg
insl
outsl
mov
arpl
imul
push
push
jge
push
jecxz
ja
inc
push
xlat
daa
subb
cmc
push
sar
popa
cmp
pop
jns,pt
add
push
jne
in
jg
push
mov
mov
push
or
jmp
adcl
sti
mov
dec
gs
fisubs
push
clc
cmp
pushl
stc
insb
shlb
lea
insl
jbe
std
jns
or
je
stos
jo
cli
push
sti
mov
rolb
int3
add
inc
lret
jle
movsb
sbbb
push
dec
fs
fmul
cwtl
cs
in
mov
push
or
cwtl
push
popa
inc
inc
inc
adc
sbb
dec
mov
pop
add
dec
cwtl
aad
repnz
pop
lfs
test
and
fdivs
or
popf
mov
mov
shrb
dec
inc
pop
push
pop
and
lret
icebp
mov
pop
leave
sar
push
cmpb
lods
fsubrl
fucomip
sti
scas
xor
test
outsl
loop
test
scas
jle
int3
and
leave
xchg
push
adc
scas
jecxz
cmp
jo
stos
push
sbb
push
dec
cmc
insb
pop
shl
xchg
incl
lods
adc
dec
jl
pop
in
scas
mov
sub
push
mov
or
dec
movsb
push
sahf
and
mov
icebp
mov
xor
test
out
aam
in
int
push
mov
ja
gs
stos
stos
mov
aad
fwait
cmp
cld
cs
ret
or
push
jb
es
cmp
mov
adc
push
js
push
cmpsl
frstor
inc
sbb
lods
scas
push
adc
cli
mov
add
jg
mov
and
pop
pop
repnz
imul
sub
jae
jne
push
dec
mov
leave
pop
in
adc
mov
test
cmovns
sar
jns
sub
loopne
jne
cmp
push
adc
mov
je
aas
rcrl
cmp
mov
add
mov
daa
push
cli
sarb
notl
pop
pusha
sbb
xor
and
lock
mov
add
pop
xchg
call
aas
cmpsb
js
xor
adc
xchg
les
cmp
fdivrl
aam
pop
and
leave
fildll
into
or
sub
push
mov
jge
jns
or
hlt
lret
je
push
push
jmp
jnp,pt
cmpsl
or
clc
inc
mov
jbe
jno
ds
gs
js
xchg
xor
xchg
adcb
jns
add
xchg
push
cwtl
sbb
lahf
mov
jb
into
sub
xchg
data16
mov
xor
xor
popf
dec
lea
sub
pop
cmp
enter
sub
mov
mov
movsb
lods
xchg
cmc
jmp
sbb
jle
lret
pop
mov
push
lods
pusha
jns
inc
cmpb
orl
cmp
shrl
sbb
sub
jl
xchg
scas
ja
enter
sbb
push
fnstenv
into
stc
dec
push
cmp
sbb
or
adc
cmp
sub
cmp
adc
inc
dec
nop
push
cmp
pop
loop
adc
add
imulb
shl
push
imul
dec
imull
icebp
mov
mov
sar
push
xor
bound
dec
out
bound
sub
in
ss
pop
adc
insb
jecxz
mov
dec
push
adc
roll
push
xchg
fiadds
fstl
outsb
decb
xor
sub
pop
mov
xchg
sbb
mov
sbb
push
xor
lds
sub
adc
sbb
out
mov
cmp
scas
mov
sbb
and
push
jmp
leave
lods
or
daa
add
cmp
mov
cli
dec
int
into
insb
imul
cld
and
out
nop
psraw
fwait
test
xchg
in
pusha
inc
movsb
jecxz
sti
or
test
sub
pop
addr16
pop
ljmp
jnp
aas
loope
push
popf
cmpsb
lret
outsb
lcall
cmp
sub
movsb
fmul
pop
sbb
out
push
and
shll
mov
sub
cltd
fisttpll
xorl
cmp
adc
dec
cld
es
fsubrs
ret
test
out
daa
mov
mov
fcomps
or
int
pop
out
dec
mov
sub
mov
push
xchg
mov
lods
idiv
jne
mov
jmp
dec
cltd
outsb
cwtl
sahf
jb
push
icebp
pop
in
ja
ficoms
jle
fimuls
and
sbbl
pop
mov
xchg
push
stos
sti
mov
dec
jb
aam
push
aad
lret
repz
sbb
fldenv
lea
xchg
xchg
out
push
jno
jo
aam
push
cli
pop
add
popf
mov
xchg
lea
das
jne
push
stc
sbb
decl
jl
xchg
outsb
and
or
ret
popf
push
push
mov
and
orl
add
in
add
xchg
add
packssdw
jmp
popa
lock
jp
adc
mov
cmp
adc
in
leave
shld
inc
xchg
stos
pop
cmc
cmp
sbb
xor
cmpsl
fisubs
xor
cmp
shrb
add
jae
push
testb
and
xchg
adc
cmp
mov
jmp
sar
inc
push
aaa
sahf
fs
cmp
outsl
xor
push
xchg
add
fwait
hlt
dec
addr16
out
js
add
scas
jb
jl
enter
mov
imul
lds
repnz
ljmp
inc
dec
pop
fdivs
popf
xchg
lods
outsl
es
fwait
push
mov
mov
in
in
push
add
test
mov
jmp
rorl
mov
stos
mov
mov
pop
pop
pop
pop
inc
cmc
stc
adc
ret
loopne
mov
cmpsb
add
int3
sbb
vmwrite
sub
jbe
insl
outsl
mov
push
xor
in
inc
xchg
inc
loopne
pop
into
push
jle
loope
imul
add
lea
and
mov
leave
scas
push
fistpl
xor
jo
add
cmp
sbb
xchg
cwtl
mov
ret
inc
cmp
jo
sub
repz
adc
mov
rcll
addb
rcr
aam
fidivrs
mov
xlat
inc
outsl
js
xchg
push
movb
push
xchg
mov
sar
xor
ret
das
mov
sbb
jne
pop
push
enter
add
cmc
jg
shll
mov
inc
data16
cmp
rorb
sbb
cmp
rclb
nop
repz
fmul
or
addr16
push
pop
out
jnp
pop
jnp
cmp
leave
or
decl
dec
es
insb
shr
fisubs
xor
mov
push
xchg
testl
imul
sbb
mov
push
hlt
mov
sub
rcrb
adc
pusha
call
sahf
scas
inc
and
pusha
fsubl
ret
or
push
movsb
adc
adc
jo
repz
adc
fnstenv
pop
push
imul
fcomps
test
outsl
das
sbb
mov
push
push
pop
jo
mov
add
xchg
pop
loopne
and
enter
dec
inc
inc
mov
mov
sar
jo
lcall
mov
xchg
jle
adc
inc
cmp
push
xchg
cmpsl
dec
xor
mov
and
data16
pop
fwait
loopne
mov
xor
pop
cmpsl
scas
pushf
and
lods
sti
std
decl
jge
mov
mov
adc
aam
xchg
scas
dec
mov
fstpt
mov
ds
test
push
mov
fwait
jbe
daa
stos
jg
mov
jb
jbe
sti
inc
sbb
mov
je
cmp
hlt
sub
cmpsl
leave
dec
mov
and
sub
inc
sub
ss
ret
adc
mov
lods
shlb
jge
jle
movsb
push
cmp
and
or
shlb
cmp
mov
cmc
pop
popf
bound
cmc
gs
fidivrl
add
stc
fucom
sub
dec
lret
and
int
out
ljmp
jbe
pusha
faddl
and
outsb
dec
sbb
adc
cmc
nop
sub
ret
dec
add
cmp
stos
sbb
pop
lods
xchg
mov
jb
xchg
mov
fcmovbe
mov
pop
mov
push
mov
push
ja
sahf
addl
out
mov
push
add
scas
adc
aad
or
mov
jae
sub
test
mov
add
jno
dec
xor
mov
dec
addr16
lcall
or
xor
sbb
arpl
fwait
cwtl
in
sub
call
inc
fdivs
jge
imul
jno
push
subb
data16
in
xor
rcll
mov
jl
ret
outsl
mov
lahf
push
sub
and
iret
inc
outsl
and
xlat
flds
jbe
adcl
ffreep
jmp
test
mov
roll
and
movl
scas
inc
and
into
mov
pushf
sub
lods
push
stos
or
sub
sbb
insb
sub
mov
xchg
push
enter
in
pusha
ja
xchg
pop
or
shlb
sbb
test
cmpsb
inc
gs
and
int
dec
ljmp
jno
not
mov
addr16
mov
sti
mov
jbe
ret
or
adc
push
dec
push
pop
pop
mov
test
loop
sub
pop
stos
ds
xor
pusha
lahf
mov
cmc
mov
lock
cmpsb
imul
pop
xchg
ss
sub
pop
ds
push
out
xor
push
add
dec
dec
dec
pop
sbb
add
movsb
inc
jl
inc
mov
lahf
leave
mov
lahf
ret
mov
lret
repz
imul
jbe
sbb
or
mov
xchg
pop
sub
lea
andl
icebp
mov
add
push
mov
gs
xor
sbb
aaa
mov
inc
dec
inc
jmp
fdivrl
adc
add
jae
or
cmp
pop
fstl
adc
and
push
jbe
in
es
mov
jne
in
mov
mov
clc
int3
jle
cmpl
inc
or
roll
ds
jns
or
dec
push
int3
dec
push
insb
mov
jns
sub
and
movsl
loop
adc
xlat
in
dec
iret
pop
out
jecxz
ficoms
xchg
outsl
pop
fcomps
sub
add
iret
stos
sub
lahf
xchg
fldcw
icebp
rcrl
xchg
ljmp
push
scas
mov
xor
imul
sbb
adc
adc
push
rclb
fnstenv
rorl
clc
xor
test
lret
lock
pop
mov
cmp
enter
leave
lds
cltd
movsl
inc
jnp
cld
outsl
or
idivl
push
pop
cmpsl
out
and
repz
mov
fdivrl
mov
mov
cli
in
jbe
ds
cmp
negl
mov
push
push
lcall
jp
pop
pop
or
fiadds
xchg
repnz
aad
inc
jbe
and
test
out
cmc
or
rcl
sti
int3
shll
sahf
scas
lsl
repnz
mov
or
pop
inc
popf
lret
or
enter
xor
and
mov
aaa
aaa
add
lret
sub
mov
data16
xchg
into
ljmp
popf
cli
inc
adc
jp
cmp
fisubs
mov
pop
pop
and
pop
add
inc
testl
fstps
and
and
stc
sbb
or
push
jl
imul
jbe
xchg
fisubl
movsb
arpl
lahf
mov
dec
push
shlb
outsb
add
push
fwait
imul
ja
jbe
mov
in
je
pop
insb
mov
cmp
fnstsw
xchg
add
and
adc
xor
inc
scas
loope
dec
js
dec
mov
ja
imul
sbb
mov
push
and
xchg
jne
bound
lahf
pop
stos
fildl
sub
jle
push
insb
cwtl
inc
mov
jnp
cltd
loop
popf
add
andb
mov
pop
jle
sub
jo
jp
xchg
jmp
aad
mov
push
xor
pop
add
ret
xor
mov
push
mov
pop
aad
or
mov
aam
jns
jp
mov
sbb
leave
inc
add
mov
fdivr
and
rorl
jb
sbb
mov
jno
adc
jbe
adc
ss
loope
push
test
dec
fldenv
in
imul
dec
push
jle
pop
cltd
aam
fildl
out
xchg
lahf
jb
testb
stos
icebp
inc
in
jl
mov
scas
sub
lahf
imul
xchg
daa
and
notb
jp
lock
notl
adc
xchg
mov
push
pop
pop
pslld
and
stc
sbb
add
pop
cltd
jae
outsb
insl
cmp
dec
mov
rorl
jbe
jnp
ret
mov
lret
pop
test
fidivrs
adc
fsub
mov
lods
xchg
cmp
subl
pushf
sbb
jnp
mov
rclb
and
mov
shrb
sub
push
add
xchg
dec
jb
push
cltd
xchg
jns
push
push
lahf
xor
jecxz
aas
fs
sbb
loopne
sarl
mov
lods
stc
shl
shrl
test
adc
xor
test
xor
das
xchg
sub
fwait
dec
cmp
lsl
into
fwait
inc
inc
clts
xchg
mov
xchg
sbb
mov
add
lcall
pop
sahf
adc
or
xor
push
jno
cmpsb
xor
or
jae
jnp
xlat
push
xor
adc
leave
sbb
imul
sahf
xor
mov
out
fs
decl
push
cmpsl
mov
xor
xor
pop
mov
jecxz
ror
sti
addl
inc
test
loope
pop
push
lds
sub
adcb
pop
sti
xor
int3
outsl
mov
or
dec
mov
daa
jo
mov
add
lret
aaa
aad
sub
aam
or
pop
sti
cld
hlt
lretw
add
or
test
push
sbb
push
sub
xor
inc
sbb
inc
shl
nop
scas
jbe
outsb
pop
nop
insb
insb
mov
lcall
cmp
aaa
or
ficompl
iret
push
mov
orb
xchg
cs
decb
inc
cmp
in
pop
xor
ret
ss
outsb
xor
fwait
addb
stos
add
mov
popf
aas
loopne
xorb
mov
movsl
add
out
in
adc
or
mov
nop
sub
arpl
adc
je
int3
inc
push
pushf
out
outsb
mov
mov
out
lret
pop
jnp
adc
test
ret
cwtl
mov
pop
and
lahf
clc
jmp
jbe
fsubr
jle
sbb
test
pop
das
jne
pusha
aad
or
dec
push
das
inc
sbb
out
adc
fbld
outsl
unpckhps
test
xchg
in
loope
aad
pop
jmp
rorl
adc
cmp
mov
add
cmp
cmp
add
xlat
les
test
mov
inc
addr16
dec
inc
pop
mov
es
xchg
push
clc
imul
adc
out
pop
cwtl
gs
push
sbb
inc
mov
test
in
mov
fcos
mov
xor
pop
dec
mov
cmp
mov
push
lcall
jo
and
mov
dec
jnp
and
sub
mov
aam
fdivr
sub
lcall
scas
dec
adc
mov
je
call
add
jmp
icebp
popa
sub
and
insl
and
mov
pop
or
pop
sbb
shl
pop
mov
fnclex
jo
popa
cmp
adc
cmpsl
xor
out
cmc
rcrl
sahf
testb
and
pusha
inc
mov
test
out
pop
mov
in
jnp
xchg
nop
jg
jp
push
in
fnstsw
pop
dec
out
iret
mov
add
adc
and
mov
and
xor
stos
lock
push
push
jg
sub
lcall
inc
xor
cmp
bound
sarl
mov
fistps
add
cltd
dec
pop
repz
dec
jb
flds
aad
pop
sahf
xor
sub
sub
add
mov
mov
cwtl
xor
loope
int3
mov
push
mov
mov
and
lret
push
pop
sub
xor
jp
push
gs
outsl
sub
jmp
sahf
mov
das
mov
movsl
pop
push
scas
jp
fnsave
flds
mov
adc
jae
mov
pop
jae
adc
jno
in
jmp
lods
outsl
pop
dec
mov
jmp
push
aam
mov
add
sub
aam
mov
movsl
fneni(8087
fs
clc
pusha
mov
repnz
in
cmpb
ud1
lcall
cld
push
fadd
or
xchg
fwait
xor
outsb
arpl
call
fbstp
pop
inc
and
andl
pop
scas
in
aaa
xchg
mov
stos
dec
mov
add
dec
fiadds
inc
mov
push
int3
mov
adc
ja
in
push
fidivrs
mov
sbb
jnp
dec
loopne
inc
sahf
jp
jmp
dec
pop
mov
and
rclb
sbb
fidivrl
in
sub
incb
call
iret
mov
push
jno
fidivs
inc
xor
push
add
push
shl
and
cmp
push
sub
xor
fistpll
and
das
out
fs
iret
cwtl
mov
subb
add
mov
add
and
dec
mov
sbb
mov
fdivs
aam
iret
inc
mov
or
pop
daa
cmpsb
aam
mov
jge
mov
nop
aad
test
pop
lods
push
test
mov
inc
jl
out
cmp
mov
cmpb
imul
add
pop
fdivrs
orl
jmp
fcmovnu
push
bound
sbb
mov
outsl
push
xor
cltd
xor
or
xchg
das
push
stos
in
fimuls
cltd
addr16
dec
pop
dec
in
and
jb
push
push
mov
daa
jnp
cmp
add
addr16
pop
xlat
loope
add
mov
or
scas
daa
adc
cmp
mov
scas
scas
stc
and
and
push
cmp
pop
adc
jns
pop
sbb
lods
ss
push
aas
cmp
lock
mov
jno
xchg
lods
adc
stos
or
int3
stos
stos
sbb
mov
dec
out
sti
insb
movsl
pushf
ds
add
clc
push
add
pop
fists
arpl
cmpsl
aam
in
dec
and
push
push
push
movups
ja
shl
jo
nop
testl
push
jno
mov
jmp
mov
push
fmuls
xchg
out
call
loope
repnz
mov
pop
test
or
sub
push
or
ds
pop
daa
js
fbstp
cwtl
lret
aad
repnz
mov
shlb
push
in
cmp
into
imulb
push
mov
out
dec
sbb
add
push
movsl
mov
fdivrl
jae
cwtl
cmp
cs
inc
mov
cmpl
sub
sub
pop
loop
jle
sahf
and
iret
pushf
lods
xchg
sub
sbb
adc
dec
jle,pn
pop
fsubrp
xor
or
stos
push
cmpb
mov
mov
pushf
push
scas
mov
fwait
jmp
xlat
in
loop
push
pop
fisubrl
mov
outsl
std
jle
mov
fs
pop
aas
icebp
fmulp
lcall
daa
mov
je
and
lcall
add
push
mov
test
sahf
aas
jno
mov
leave
and
insb
push
and
push
pop
sar
mov
add
adc
ret
inc
lock
sub
cmpsl
and
mov
in
push
aas
scas
inc
xor
jle
lods
stos
test
push
or
lods
pop
imulb
ds
test
cs
jbe
sbb
xor
inc
mov
dec
adc
or
dec
imulb
mov
nop
push
int
push
jbe
inc
or
xorl
stc
xor
mov
out
fisttpl
mov
hlt
fwait
imulb
adc
sbb
sub
cmp
mov
lea
inc
cmpsl
jle
push
xchg
cmp
scas
adc
mov
xchg
inc
xchg
daa
inc
adc
jl
cmpsb
sbb
in
or
adc
imul
jmp
ljmp
repnz
push
dec
inc
cmpsb
mov
hlt
jg
add
icebp
daa
decb
pop
mov
jl
cmp
xchg
arpl
push
lods
cmp
sbbb
sub
aas
icebp
dec
iret
cltd
push
fsubrs
in
add
mov
outsb
xor
movsb
and
popa
jecxz
aam
sbb
in
sub
and
xlat
xchg
outsl
sbbb
sbbl
fcmovnu
stos
push
icebp
or
pop
xchg
sbb
gs
pop
mov
andb
jl
inc
test
icebp
xrelease
xchg
imul
mov
and
ficompl
pusha
test
adc
sub
inc
adc
incl
loop
xchg
push
ljmp
enter
test
mov
ljmp
mov
aaa
xchg
cmp
push
out
dec
xchg
shll
jns
xchg
add
cmpsl
cmp
mov
dec
pop
hlt
dec
sahf
bound
test
insl
out
add
adc
xor
aad
push
lds
xor
sub
repz
jae
sub
in
sub
popa
sub
adc
sbb
jg
lret
int3
pop
adc
pop
cmp
mov
lea
orl
test
jb
hlt
je
mov
lods
cmpsl
mov
and
cmp
add
pop
out
cmpsl
push
fdivr
sbb
add
xchg
mov
fidivl
fdivs
mov
mov
rep
push
or
cmc
fadds
adc
fwait
pop
inc
push
xchg
or
sarb
sub
mov
push
out
loop
sbbl
push
xchg
sub
repnz
jae
inc
pop
sbb
cmp
stos
insl
dec
and
and
ret
stos
movb
add
dec
js
test
dec
dec
sub
enter
xor
mov
add
mov
mov
pop
imul
cmp
fcompl
in
push
loopne
push
popf
outsl
inc
add
cwtl
and
or
push
out
cmp
sahf
dec
adc
sbb
orb
leave
push
inc
sub
xor
fldt
mov
xchg
stos
sar
fimull
rolb
dec
out
pop
test
pop
popf
ljmp
pusha
hlt
mov
mov
pop
lock
hlt
dec
dec
sbb
pop
jl
cmpsl
mov
inc
repz
push
adc
cmp
nop
and
dec
leave
mov
add
mov
jae
cmpsl
mov
repz
pop
inc
pop
cmp
jae
jg
leave
ss
pushf
jecxz
pop
fdivrs
cltd
mov
sti
push
iret
lea
pop
mov
daa
fidivrs
nop
xor
cwtl
pop
mov
or
out
lds
lret
jl
jo
pop
dec
ret
mov
test
add
cmpsl
inc
cmc
cmpl
cmc
int
jle
lods
fsubrl
sbb
dec
add
push
inc
or
xor
push
dec
jne
jp
sub
push
es
jle
mov
neg
mov
push
stos
jle
and
jno
jmp
enter
lret
test
in
cmc
in
adc
xor
sub
lock
bound
repnz
adc
and
adc
repnz
daa
outsb
xor
int
pop
xchg
push
rol
pop
jb
xor
shrb
cld
ret
sbb
mov
add
jae
pop
sub
mulb
arpl
xchg
popa
jbe
ss
jle
dec
ja
push
fwait
xor
or
mov
scas
adc
push
xchg
ss
shr
inc
add
inc
gs
push
fsubrs
add
sbb
lock
lret
in
scas
dec
mov
mov
cwtl
add
and
decb
adc
mov
ljmp
imul
dec
popf
enter
dec
pop
mov
adc
lea
push
and
cltd
test
pop
inc
jns
sbb
adc
les
mov
out
pop
jb
mov
lahf
jmp
loopne
inc
mov
mov
js
sub
imul
std
sub
les
push
enter
popf
mov
fstps
movsl
push
lods
popf
jecxz
out
adc
inc
outsb
cmp
mov
pop
loope
int
insl
and
cld
decb
cltd
nop
rolb
adc
shll
sbb
ja
xchg
sbb
or
inc
ret
pop
fidivrl
push
pop
dec
add
pop
stc
and
and
loopne
mov
ljmp
out
adc
jl
das
pop
das
dec
mov
xor
jle
push
repnz
pushf
sub
xorb
rep
lret
fidivrs
jle
popa
nop
jae
xor
push
imul
in
push
iret
sti
jmp
sub
jbe
push
push
aaa
sub
sti
dec
enter
or
sar
ret
fcomi
lret
icebp
or
jge
dec
mov
and
xchg
lods
xchg
mov
xchg
arpl
sub
cmp
mov
pop
les
push
clc
and
jo
xor
inc
loop
pop
push
popa
jg
dec
or
movsb
jecxz
mov
mov
jmp
loop
in
jecxz
inc
test
sbb
pop
mov
je
inc
imul
push
sbb
and
jae
ror
scas
mov
rolb
std
ds
mov
aas
dec
mov
mov
push
imul
adc
mov
imul
ss
out
fdivs
inc
cmp
adc
out
mov
je
mov
jle
out
and
mov
mov
mov
aas
xorl
das
faddl
jbe
and
xchg
mov
cs
jns
mov
pushf
clc
xchg
inc
sahf
ljmp
jmp
test
cli
fwait
push
sahf
mov
daa
sahf
aaa
mov
cwtl
inc
push
add
lcall
sub
xchg
push
outsl
adc
cmp
push
dec
mov
xor
pusha
out
pop
int3
insb
mov
pop
js
mov
addr16
das
test
jbe
mov
sarl
shl
popf
ficompl
icebp
dec
mov
pop
jle
cmpsl
out
add
idivl
jl
cli
mov
int3
out
cld
or
pop
jbe
imull
cs
sub
jae
icebp
rclb
inc
adc
sbb
inc
jae
inc
push
xchg
in
jns
mov
and
dec
xor
pop
xchg
and
movsl
and
fdivr
scas
and
scas
divl
data16
cvtps2pi
scas
insl
jle
rorl
inc
sub
and
mov
fmul
ss
push
xchg
mov
mov
xor
xor
push
loopne
adc
add
pop
imul
fcoml
adc
lock
mov
sahf
push
shrb
jp
enter
add
and
pushf
fs
clc
rorl
push
daa
pop
xchg
sbb
enter
dec
test
cli
add
in
adc
and
push
stos
jnp
loope
rcll
testl
push
testb
push
mov
inc
clc
cmp
in
test
push
pushf
rorl
pop
cmp
pop
cmp
fistps
or
js
mov
dec
xchg
loope
or
mov
mov
in
sbb
mov
test
jmp
xchg
and
lods
mov
pop
insl
cmp
mov
push
movsb
lcall
pop
loope
popa
and
sub
xor
xor
add
fldcw
mov
jle
dec
test
mov
jg
mov
call
lahf
mov
lahf
lcall
xor
pop
xor
jnp
test
jo
mov
enter
fistps
push
test
leave
in
cli
pop
adc
sub
mov
jbe
dec
es
aad
mov
cmp
dec
mov
int
popf
adc
mov
pop
jge
in
stc
mov
loope
mov
cmp
add
ljmp
cs
pop
sbb
mov
out
mov
arpl
stos
xchg
shrb
dec
xor
cld
ds
dec
aas
daa
and
hlt
jno
test
shlb
orl
iret
cltd
out
leave
inc
xchg
sub
sub
sti
cmp
pop
and
cmc
push
insl
pushf
push
mov
mov
sub
in
dec
orb
pop
icebp
or
pop
sub
out
pop
lea
xor
or
pop
push
and
add
sub
mov
lds
imul
and
cmp
sti
mov
jns
sti
iret
popa
andl
shlb
adc
xor
lcall
lret
push
inc
test
add
mov
cs
repz
push
insl
cmp
xor
ljmpw
push
mov
and
pop
loope
lret
leave
pushf
aam
cltd
call
pop
imul
ja
cmp
sbb
data16
mov
dec
clc
in
loop
inc
cmp
sbb
pop
jg
sub
xchg
or
insb
sbb
xchg
scas
jmp
sub
out
jbe
and
push
xchg
lret
repz
dec
aas
xchg
mov
xchg
stos
outsb
cli
jnp
lock
xchg
bound
sbbl
dec
push
pop
jp
add
push
outsb
and
add
fnsave
mov
add
sub
push
lea
push
dec
xchg
or
add
aas
or
mov
iret
int3
pop
add
push
jae
jb
pop
pop
mov
in
jle
ja
pop
data16
shr
sbb
insl
sub
in
mov
push
dec
cmpsb
pop
and
lea
add
popa
push
xchg
es
fistpll
out
jge
stos
adc
or
dec
push
or
cmpsl
pop
pop
xchg
addr16
imul
xor
je
rol
push
es
scas
mov
loope
in
mov
mov
aaa
aaa
mov
mov
scas
das
movsb
mov
xor
leave
cmc
pop
stos
push
inc
inc
push
bound
call
jae
dec
fsubrl
sti
shrl
jns
xor
int3
adc
adc
cmovns
jnp
xchg
pop
sbbb
jmp
push
or
ret
push
lahf
push
dec
mov
or
mov
push
out
mov
sarl
mov
mov
sub
push
fdivl
push
xlat
xor
fwait
out
in
cmpsl
adc
mov
in
dec
popf
mov
lret
sub
es
sub
or
inc
daa
fstl
nop
and
mov
addb
aad
cmpsb
dec
and
cmpsl
fwait
xor
push
cmp
xchg
mov
out
lcall
sahf
pop
add
push
mov
bound
inc
sbb
imul
and
jne
es
add
std
jae
shlb
inc
out
pop
fiaddl
mov
push
stc
mov
popa
lret
das
xchg
push
mov
dec
addr16
daa
mov
xorb
gs
jno
inc
test
cmp
notb
pop
mov
mov
out
sub
mov
pushf
jb
repnz
movb
push
inc
in
xchg
pop
cmp
jnp
mov
adc
arpl
int
mov
mov
in
notl
xor
adc
data16
ret
push
fsub
add
push
or
or
xchg
fisubrs
cmp
scas
popa
ret
int3
dec
jb
inc
mov
adc
jbe
ret
cmp
cmp
ret
jns
jbe
and
xor
xchg
dec
in
int3
adc
xchg
mov
ljmp
or
insb
mov
in
xchg
jb
test
loopne
jl
fisubrs
dec
ss
jne
shlb
sub
mov
pop
push
sub
push
add
dec
jbe
insl
cmp
adc
push
cmpsl
icebp
imul
dec
jge
arpl
popa
das
inc
pushf
arpl
jmp
sbb
out
jae
jnp
and
cltd
mov
lods
xlat
popa
out
fistl
jmp
sub
jne
roll
xchg
movsl
xchg
loopne
ret
loopne
inc
lds
mov
cli
inc
xchg
add
imul
shrb
mov
mov
sbbl
nop
and
mov
lret
jp
mov
call
jmp
enter
cmp
dec
or
repz
push
jae
or
adc
xchg
lods
xchg
ds
mov
jo
and
cmp
dec
les
bound
pop
es
scas
rolb
dec
inc
cs
xchg
test
addr16
jge
ljmp
sub
out
push
test
lahf
stos
xor
movsl
or
mov
push
jb
mov
xor
jmp
inc
ss
leave
push
test
lds
jmp
xchg
andb
loope
jg
fcmovnbe
mov
mov
sbb
sbb
fcomi
pop
dec
lods
loopne
fstp
xchg
mov
pop
divl
or
movsb
jb
xor
inc
mov
and
jg
sti
or
ffree
sub
mov
xchg
sub
andl
sbb
xor
ss
hlt
fldl
outsl
push
mov
cmovge
cmp
pop
cmpsb
jecxz
or
mov
mov
xor
rorb
ds
dec
jp
jo
pop
push
jns
sub
jne
add
xlat
or
add
out
inc
ret
outsb
andl
fidivrs
push
rcr
rcrb
mov
lcall
pop
adc
or
pushf
test
add
push
aad
addr16
or
pusha
mov
cs
add
in
mov
mov
js
loop
cmp
out
inc
pop
aaa
push
mov
les
jge
add
pop
ret
sti
cltd
sub
stos
clc
sbb
rorb
mov
pop
cmpsl
enter
push
mov
stos
jg
add
imul
into
xor
loop
mov
jae
add
test
cwtl
imulb
pop
rcrb
mov
shll
lods
cld
negb
push
jno
xor
fsin
inc
adc
movsl
jne
in
cs
mov
daa
iret
or
add
scas
ds
sub
sub
mov
pop
and
pusha
push
mov
and
pop
je
mov
mov
je
sub
xchg
scas
xchg
test
push
mov
in
dec
aaa
sbb
aam
call
stos
movsl
xchg
iret
dec
fcmovnu
jp
fnstenv
imul
cmp
inc
adc
fmul
test
into
ljmp
adc
sbb
xor
jecxz
lret
in
push
btr
adc
bound
jnp
fcomp
je
xor
scas
mov
in
push
mov
push
cltd
pusha
addb
cli
int3
clc
inc
inc
and
or
ficoms
lods
ficomps
cmc
jecxz
push
pop
push
inc
sub
pop
lods
dec
adc
sub
add
aaa
jbe
dec
arpl
ds
rcrl
fucompp
ret
and
inc
cli
out
cld
fidivrl
popf
xchg
movsb
dec
pop
inc
pop
xor
inc
pop
hlt
gs
cmc
clc
mov
cmp
jno
dec
pop
lea
lcall
jecxz
test
insl
and
aaa
add
ja
dec
stc
into
aad
and
and
ljmp
fldenv
loope
adc
mov
mov
cmp
cmp
mov
xor
cmpl
lcall
bound
lret
inc
fs
mov
mov
roll
mov
cltd
aad
pop
push
cmovp
shll
xchg
add
push
data16
adc
add
jb
or
jae
pop
lods
push
ret
cmpsb
xchg
out
mov
cs
sahf
fisubrl
add
adc
cmpsb
cli
push
lea
lds
fdivrs
cmc
push
pop
jge
mov
cmp
push
xchg
cmp
add
xchg
pop
movb
dec
pop
cmp
sub
push
outsb
inc
mov
xchg
xchg
sbb
pop
loope
xchg
push
je
jb
push
and
push
addr16
dec
push
test
xor
cmp
inc
gs
cmp
bound
mov
jno
les
jnp
pop
inc
xchg
and
ss
gs
and
pop
or
insl
lret
std
stos
sub
add
in
push
mov
fs
inc
outsl
sbb
and
and
jno
jl
loopne
pop
fists
mov
sbb
daa
fsub
pop
push
adc
jge
sbb
jmp
cmp
dec
and
call
dec
ret
aam
out
dec
mov
push
test
adc
stc
jbe
or
xchg
push
fwait
jns
mov
sbb
lods
cmpsl
mov
cmpsb
pxor
adc
push
in
cwtl
xchg
cmp
mov
sub
icebp
dec
cld
add
cmp
xchg
pop
outsl
repz
divb
fwait
dec
add
dec
xor
and
adcb
dec
xorb
outsl
fldcw
lock
inc
shlb
popa
shrb
lods
pusha
mov
dec
sub
xor
jmp
jnp
ret
jo
decb
stos
cmp
test
data16
xor
stos
nop
shl
stos
data16
push
loope
inc
add
js
test
push
and
cltd
jle
popa
push
cmp
dec
clc
rcl
sbb
out
fcmovu
adc
ds
test
jecxz
or
push
sub
cmp
pushf
pop
xchg
testb
xchg
orb
adc
fnsave
scas
data16
pop
dec
lfs
push
pushf
std
dec
mov
and
add
loope
pushf
fcomi
or
subb
cmp
test
ret
hlt
outsl
push
xchg
push
pop
adc
ss
add
ds
dec
inc
adc
pop
jne
stc
iret
in
add
outsl
daa
mov
fsub
dec
lret
call
lock
popa
inc
sbb
sbb
lcall
out
cld
cmp
adc
jle
mov
inc
orl
cmc
dec
daa
or
nop
out
jnp
cmp
call
inc
and
sub
sub
cmp
xchg
jmp
inc
sbb
inc
push
je
mov
inc
cli
lcall
fdivrs
lret
jbe
out
mov
dec
xchg
cld
aam
ss
xor
push
add
lock
jg
test
fs
data16
adc
xor
add
enter
xchg
hlt
inc
sti
cmpsl
cmc
lret
clc
in
lret
clc
rorb
add
mov
das
fidivrs
push
call
mov
dec
or
test
mov
nop
push
stc
jne
or
sub
mov
and
loop
sub
repnz
cmpsb
testb
subl
adcb
ret
cld
ret
pushf
data16
jns
xchg
shr
add
ss
push
or
jl
imull
cmp
int
and
mov
lods
cmp
sbb
ljmp
inc
loope
xchg
cltd
scas
aas
mov
sahf
cmp
sti
xchg
jecxz
push
pushf
scas
scas
push
and
cmpsl
sub
sub
mov
push
aas
inc
cld
push
sub
icebp
sub
inc
loope
iret
sub
dec
packsswb
inc
xchg
push
das
mov
add
xchg
int
or
ficompl
xchg
pop
cmpb
pop
sub
mov
jg
shl
adc
ja
xchg
scas
push
filds
inc
pop
inc
mov
fidivs
sub
shll
jne,pt
into
cmpl
nop
dec
xorl
fdivl
in
cmc
fsubr
xorl
bound
mov
repnz
jmp
pop
mov
insl
jge
mov
sar
sbb
mov
and
std
stos
loope
mov
adc
sbbl
fistpl
or
cld
loop
inc
stos
negb
stc
adc
push
push
dec
jno
add
enter
sub
in
mov
mov
jmp
ds
adc
mov
out
sbb
mulb
dec
scas
cmp
pop
xchg
add
pop
ss
cmp
stc
rcll
add
ror
jmp
sub
sub
cmp
mov
fs
nop
pop
addr16
mov
jne
fucomi
jp
ds
ret
add
fs
sub
and
and
dec
aam
jmp
inc
ljmp
pusha
insl
add
mulb
outsb
push
mov
int3
lcall
pop
leave
push
dec
cmp
leave
test
sbb
fnsave
xchg
lock
sbb
aaa
push
bound
movsb
imul
into
repnz
cmp
cltd
lea
enter
test
dec
mov
lcall
sbb
aad
inc
push
fwait
adc
sub
jle
cmc
mov
add
jb
jmp
mov
xchg
pop
xor
dec
test
xlat
jb
mov
test
cld
ljmp
mov
jae
jle
sbb
lcall
mov
fs
or
sbb
dec
movsl
push
mov
push
pushf
xor
jmp
popf
xor
push
and
pop
and
movsb
sub
push
enter
xor
jo
push
das
lock
sti
lds
xor
ja
adc
mov
or
or
mov
nop
pop
icebp
testb
pop
inc
aaa
std
lahf
pop
int
xor
jb
inc
mov
inc
imul
lcall
mov
push
dec
outsl
loope
sbb
xchg
adc
push
jb
sbb
xor
sub
adc
mov
out
movsb
xor
push
ja
in
xor
es
pop
pop
add
sub
outsb
sahf
mov
inc
mov
fistps
mov
popa
mov
pop
adc
cmp
xor
das
out
sbb
loope
test
push
mov
cmp
jns
lods
mov
xchg
inc
adc
sar
cmp
repz
jb
in
dec
jb
insl
ret
ljmp
aas
popa
bound
gs
inc
cmp
arpl
adc
movsl
movsb
dec
pop
sub
test
cltd
add
push
push
or
push
adc
pop
add
in
insb
xchg
jae
jg
into
in
in
mov
jo
xlat
lds
and
dec
outsb
cmp
pusha
xorl
or
xor
sbb
in
imul
mov
mov
cld
adc
jo
push
test
rcr
pop
lock
add
push
pop
js
data16
mov
dec
sahf
pop
idivb
push
lods
dec
addb
xchg
in
rclb
sub
negb
mov
mov
jne
aam
aaa
shld
cwtl
pop
test
push
sbb
cltd
mov
inc
or
popf
pop
fbstp
jmp
jge
inc
adc
shlb
iret
in
jp
push
adc
in
bound
addl
mov
lahf
outsl
ja
adc
pop
out
jnp
cmp
inc
cmp
outsb
and
pop
lret
sbb
mov
insb
shr
jns
stos
mov
pop
sub
in
pusha
fwait
test
mov
mov
stos
fldt
add
pop
loop
scas
and
sub
shll
xchg
jmp
cs
enter
cli
or
arpl
and
fstps
cwtl
inc
rolb
dec
xor
sahf
and
cli
clc
leave
cli
push
daa
rcpps
add
cmp
cmp
test
fs
push
cmp
js
add
jno
cmp
shll
lcall
lea
aas
dec
dec
jge
stc
pop
mov
inc
data16
jmp
test
xchg
das
cmc
and
mov
cmpsl
mov
ficomps
shlb
pop
add
jge
inc
inc
testb
rolb
mov
sub
fwait
push
popf
xor
push
mov
stc
cmpsl
scas
push
dec
mov
jl
test
inc
pusha
xor
fsub
pop
je
psubb
out
sahf
out
out
xorl
push
pusha
fs
popf
jle
fstl
fnstcw
rcr
pop
xor
push
repnz
pop
xchg
pop
imul
ss
mov
add
cmp
or
jge
or
movsl
cmp
jecxz
mov
mov
xor
out
mov
notl
xchg
lock
std
pop
lds
movsl
jb
push
clc
jbe
or
sbb
dec
in
test
or
and
pop
aaa
ja
jg
xor
leave
lcall
inc
fnsave
lahf
jne
mov
inc
in
xor
sub
icebp
mov
pushw
das
sub
mov
lahf
dec
or
xlat
or
mov
mov
fcomip
pop
aaa
jg
or
mov
jp
pop
loope
outsl
stc
movsb
xor
jo
fildll
sbb
ljmp
sahf
popf
inc
dec
adc
mov
fucom
loopne
sub
data16
pusha
stos
xchg
or
mov
mov
scas
sbb
out
out
xor
push
push
adcl
mov
out
cmpsl
add
fwait
into
push
lcall
sbb
mov
jg
sti
bound
push
sarb
or
sub
sarb
cmp
cmp
or
daa
pop
jno
sbb
push
inc
div
jne
jg
out
addl
lcall
jle
fstl
scas
add
sbbl
mov
int
in
jmp
or
fdivr
or
cli
lahf
xchg
jge
dec
cmp
adc
mov
pop
mov
dec
cmp
pusha
inc
lods
out
lea
and
outsl
and
mov
add
fidivs
movsb
push
js
movb
std
dec
add
les
rorb
sbb
shr
jg
jne
cli
inc
gs
icebp
loop
fistps
loope
cmp
addl
test
fwait
inc
lods
inc
sub
xor
movl
pop
hlt
xchg
fwait
cmp
inc
es
into
in
lret
popf
lcall
xor
fstp
int
adc
add
out
iret
cmp
sub
arpl
jmp
pop
cmp
adc
xchg
loope
push
xchg
cwtl
push
fimull
je
push
sub
ret
jge
outsb
mov
push
addr16
andl
scas
cmpl
pop
xor
pop
test
jne
inc
mov
hlt
aam
mov
mov
into
mov
add
xor
sbb
js
add
imul
pop
dec
cld
xor
movsb
and
cmc
mov
icebp
xor
aam
xchg
pop
bound
or
pop
jne
xorl
sbb
lahf
push
or
jg
loope
js
pusha
add
fistps
xchg
jno
adc
add
mov
xorb
popaw
fstp
sahf
jmp
je
sti
sbbb
in
xor
cmpsl
dec
cmp
rcll
dec
pop
lcall
pop
paddq
add
out
pushf
arpl
stos
orl
jg
bound
inc
mov
ret
cs
xor
jae
imul
fisttpl
cmp
imul
aas
cmp
cmp
lock
add
jnp
or
xchg
leave
pop
fisttpl
test
test
mov
jecxz
aad
sub
inc
fnstsw
push
daa
leave
andb
fidivs
cmpsl
mov
cmc
stc
sub
addr16
mov
popf
fistps
adc
adc
fsubl
pop
rcr
or
xchg
mov
outsb
lock
aad
out
cwtl
xchg
fdivrp
mov
rcrb
pop
fnstsw
cmpsl
in
iret
jge
mov
imul
or
js
xor
movsb
add
xor
nop
mov
arpl
sahf
and
test
inc
andl
xchg
outsb
imul
nop
hlt
mov
fdivl
push
dec
pop
and
xchg
es
sahf
xacquire
lods
lock
pop
loope
xor
arpl
mov
clc
pop
sub
outsb
in
cmp
adc
or
sub
xchg
addr16
fbld
or
pop
je
ljmp
pop
ds
mov
je
repnz
stos
mov
inc
ss
mov
xor
faddl
jecxz
or
xor
jno
xor
dec
outsl
aas
sti
pop
jg
fldt
mov
pop
mov
shll
mov
cs
cmp
mov
decb
push
dec
or
cmpsb
addr16
mov
or
mov
lods
cmp
aas
sub
mov
mov
mov
imul
out
lret
sti
mov
inc
push
fnstenv
test
rcrl
push
das
nop
add
stos
mov
xchg
add
push
in
push
xchg
add
stc
or
lods
cmpsl
popf
loop
arpl
in
and
xor
mov
cld
fiadds
test
addl
neg
add
loop
jne
pop
push
fdivrp
es
loope
or
scas
add
add
push
push
outsl
and
or
ds
adc
andb
jmp
call
mov
outsl
adc
fstl
mul
xor
xor
mov
ljmp
mov
out
mov
sti
insl
inc
add
xor
in
mov
std
mov
arpl
pushf
in
mov
jnp
repz
fcmovb
xor
mov
mov
lahf
push
mov
inc
inc
shrb
xchg
add
je
ss
or
mov
pop
jae
mov
movzwl
xor
cmpsb
hlt
insl
and
nop
jns
fdivp
mov
mov
push
lock
ret
fstpl
shrl
dec
shr
repnz
inc
cwtl
jne
pushl
ss
and
and
scas
cmc
mov
lds
inc
inc
dec
fcomps
repz
jbe
fimull
cmp
xlat
jae
ret
bound
cmp
iret
into
mov
jo
cmc
adc
mov
in
mov
mov
fimuls
pushf
adc
lock
js
cmc
pop
xlat
outsb
sbb
jno
add
test
imul
push
rolb
cld
push
mov
lcall
sbbb
shrl
loopne
fdivr
dec
or
xlat
xchg
adc
or
pop
hlt
dec
mov
sahf
and
lods
ds
imul
push
addb
jno
cltd
mov
in
pop
cmc
aam
mov
or
mov
sarb
les
pop
mov
pop
pushl
adc
inc
test
xchg
xchg
inc
or
sti
mov
jp
inc
les
cmp
ja
xor
xchg
lea
cmp
and
ss
mov
pop
mov
aaa
adc
pushf
adc
das
loop
sbb
loopne
cmp
mov
sub
ret
fnstcw
lret
inc
pop
mov
outsb
cmp
add
rcl
or
in
adcl
adc
mov
dec
aad
add
or
sub
mov
fcmovne
xchg
aam
add
mov
imul
outsl
mov
repz
sbb
lcall
subb
add
enter
jbe
cmc
jbe
mov
pop
and
and
test
xlat
jge
lds
repz
std
push
inc
fnsave
lock
ret
xchg
ja
push
sbb
scas
mov
adc
and
mov
mov
cmp
pop
sub
mov
xlat
sahf
sbb
scas
sub
sbb
dec
or
mov
cmp
sub
mov
cmp
cmp
cmp
push
adc
aas
into
lret
mov
sub
jle
xchg
lcall
test
imul
enter
pop
mov
jns
adc
notb
jb
or
ret
inc
xchg
sub
bound
mov
cmp
add
nop
out
jg
add
aad
in
push
cmp
dec
push
inc
stos
loopne
dec
ja
stc
pop
jle
lret
push
jge
jnp
mov
mov
in
bound
or
jg
cmp
aaa
idivl
and
push
js
scas
mov
mov
stc
inc
dec
inc
test
push
push
push
ljmp
lock
or
jp
xchg
mov
cmc
repz
pushf
pop
insl
lahf
outsl
aam
adc
and
pop
mull
fists
mov
add
and
xorb
adc
jo
jmp
pushf
mov
imul
cmpxchg
xchg
push
cltd
test
ja
mov
xor
leave
sub
je
xor
inc
inc
jl
jp
mov
std
inc
add
xchg
js
and
incl
stc
inc
push
loop
dec
jge
and
dec
out
add
loope
lahf
rorl
imul
xchg
lea
jmp
push
add
stos
testb
dec
dec
mov
xchg
adc
jle
xchg
ret
push
jb
psubsw
pop
push
mov
mov
xchg
sti
sub
pushf
scas
roll
push
pop
xchg
jae
jns
cmpsb
pop
aam
mov
cwtl
push
xchg
scas
lds
adc
mov
fimuls
sbb
cmp
add
in
mov
out
sub
mov
lcall
xor
xor
ja
les
adc
mov
push
inc
inc
inc
ljmp
fildl
push
and
vxorps
testl
aaa
aaa
sarb
or
adc
xor
dec
imul
adc
cwtl
mov
std
push
and
mov
iret
pop
mov
or
push
test
jg
mov
lea
hlt
or
jg
mov
pop
scas
ljmp
in
pop
sahf
and
mov
andl
hlt
push
jmp
cltd
add
push
dec
cmp
stc
lret
loop
shrb
stos
divb
lahf
xorl
popf
jecxz
xor
lret
pushf
icebp
sbb
subb
in
mov
ret
sub
cs
jne
mov
add
xor
xchg
add
cmpsb
mov
dec
mov
stc
mov
push
lret
sub
push
mov
and
or
pop
push
dec
xor
dec
push
xchg
in
cmpsl
inc
stos
mov
xchg
pop
push
adc
mov
sahf
lret
inc
sub
xor
out
fists
inc
jmp
hlt
movsb
ret
cltd
std
scas
in
pop
addr16
test
and
das
pop
dec
xchg
xchg
addr16
je
jns
mov
and
or
mulb
das
cmp
jo
mov
leave
mov
xor
cmpsl
sahf
jno
xchg
xchg
rcl
adc
out
int3
divb
lock
pop
add
adc
mov
rorb
cld
dec
shl
js
and
mov
xchg
cmpsl
and
int
add
ljmp
sbb
int
cmp
fdivr
aam
pop
out
xchg
cmp
inc
xchg
xchg
inc
cmc
pop
shl
add
xor
adc
xchg
dec
inc
pop
xchg
fcoms
pop
cmp
loopne
int3
nop
sbb
sbb
adc
sbb
popa
leave
lods
out
or
insb
scas
add
cmp
std
inc
sbb
adc
arpl
push
pop
inc
int
sbb
xor
xchg
bound
cmp
mov
loopne
incl
loope,pn
into
outsb
push
orl
push
mov
adc
adc
inc
nop
sub
cmpsl
mov
sub
sti
push
jecxz
out
jge
add
mov
outsl
xchg
or
mov
das
mov
shl
sub
mov
xchg
iret
cmp
and
outsl
sub
fadd
ljmp
cwtl
push
xchg
loope
outsl
ja
or
shll
insl
jle
xor
ficoms
sub
xchg
dec
in
or
xor
repz
mov
jnp
jmp
xchg
xchg
push
insb
int3
pop
inc
sahf
xchg
fs
and
sub
aaa
mov
adc
add
jge
cmp
xchg
mov
popa
clc
sbb
pop
sbb
or
iret
sbb
das
shlb
je
xchg
adc
inc
fdivrp
out
xchg
ss
int
incb
dec
jge
sub
outsl
call
fnstcw
dec
test
hlt
ret
fwait
dec
pop
pop
out
sahf
lock
cmp
cmpl
pop
cmp
mov
negl
xor
cltd
mov
int3
jbe
lret
in
mov
pop
xchg
fiadds
xlat
js
fsts
inc
sbb
sbb
or
xor
or
clc
add
cmpsl
or
movsb
xchg
mov
mov
sbb
fcmove
lcall
add
pop
sub
call
ja
push
int3
sbb
or
sbb
lret
pop
call
jle
out
in
mov
in
inc
or
les
int3
stc
hlt
push
imul
into
cmp
les
repnz
hlt
out
es
mov
fs
sub
xchg
mov
push
fs
out
push
xchg
je
xchg
cmc
add
adc
loop
into
cmp
and
adc
jle
jns
addr16
xor
xchg
push
mov
xchg
sbb
sbb
jecxz
jl
out
mov
or
imul
fmull
mov
sub
hlt
mov
mov
cld
lock
rcrb
or
sbb
mov
mov
rolb
fildl
test
cmc
cmpsl
cltd
xor
sti
mov
out
xchg
aaa
les
fnstenv
dec
outsb
mov
cmc
sub
fnstsw
es
pop
fcomps
out
data16
or
mov
mov
xchg
shrl
popa
js
mov
add
and
sub
jae
sbb
jne
out
pop
xor
push
xchg
push
mov
cmp
mov
sub
push
push
add
ret
fwait
jl
push
loopne
xlat
in
fndisi(8087
cld
les
push
push
jbe
je
cmp
xchg
mov
fldt
fisubrl
inc
add
add
int
lret
jnp
sub
jne
jge
mov
push
mov
fcomip
or
sti
leave
arpl
mov
ss
and
push
stos
add
movsl
pop
imul
lds
lods
sbb
or
fwait
mov
ljmp
jl
sbbb
mov
cmp
out
sarl
jmp
and
inc
push
aas
mov
ret
inc
pop
aaa
add
test
jns
sbb
mov
pop
inc
add
dec
dec
sbb
push
pop
cmp
sahf
test
add
add
into
ja
std
shll
mov
adc
push
lahf
push
xor
fsubp
adc
mov
lahf
sbb
adc
test
inc
cmpsb
pop
or
outsl
cs
es
andb
lea
jle
xor
loope
jl
mov
xor
adc
or
popf
sub
and
fs
inc
pop
xlat
push
push
andb
fadds
inc
jb
or
daa
outsb
fs
or
sbb
aad
fwait
inc
fucomp
fwait
sbb
enter
mov
adc
cwtl
mov
gs
lods
bound
js
hlt
call
lods
mov
and
ja
sbb
jp
adc
jmp
cmp
push
imul
mov
jne
mov
add
lahf
jo
cltd
mov
in
fldl
inc
ss
in
imulb
mov
shrl
test
pop
add
jp
das
aad
add
jns
repz
mov
stos
xchg
pushf
ja
lret
push
add
lret
push
sarb
add
jb
pop
cli
sub
sub
xor
lods
popa
ror
xchg
pop
xsha256
cmpsb
adc
ss
cli
cmp
push
fs
rcll
ret
push
je
or
sbb
sbb
push
jmp
xchg
test
fisubrl
stos
jl
sub
out
jne
xor
sbb
clc
js
in
sbb
mov
xchg
sbb
shl
mov
jmp
mov
out
call
out
mov
lret
add
jge
jns
repz
xor
or
imul
out
sub
xchg
push
mov
and
pop
daa
test
sub
push
and
adc
and
jnp
aam
push
outsl
data16
ja
fisttpll
mov
cli
rorl
movsl
jg
jno
mov
ss
fnstsw
or
xchg
aad
dec
mov
pop
mov
and
js
sbb
mov
push
popa
jge
sbb
and
jg
pop
and
das
lods
dec
adc
lea
jmp
sub
pop
add
and
or
cmpl
out
hlt
cmp
arpl
sub
aas
insb
mov
bound
inc
lahf
into
inc
mov
test
sub
mov
lret
jecxz
mov
pusha
xchg
into
stc
inc
leave
push
pop
push
rorl
push
icebp
inc
mov
aas
mov
push
lahf
lods
mov
aad
out
out
in
xchg
aaa
int
mov
sti
movsl
lock
movsb
xor
xor
leave
jnp
adc
xchg
daa
cld
jne
cld
xor
aas
and
cs
imul
dec
add
imul
push
inc
push
xor
xor
cwtl
jmp
sub
mov
stos
mov
cmp
xchg
cmc
jo
movsb
xchg
test
xchg
scas
adc
mov
lret
fiaddl
imul
mov
sbb
xchg
fdivp
out
fnstsw
imulb
jno
xchg
mov
sbb
rcrl
cmp
int3
cli
imul
bound
xchg
push
loopne
mulb
dec
cmpsb
mov
adc
subb
push
mov
xchg
icebp
xchg
inc
movsl
add
pop
pop
cld
lcall
lea
push
stos
push
mov
aad
pop
xor
pop
cltd
bswap
into
jnp
mov
mov
int3
dec
dec
test
pop
or
popf
adcb
pop
mov
jg
call
adc
enter
inc
movsl
inc
mov
cmp
sub
add
mov
out
dec
lcall
mov
push
mov
mov
push
outsb
jo
loope
push
mov
push
cmp
lods
cli
cmp
mov
jge
enter
mov
lret
outsb
or
inc
loope
jb
into
jnp
xchg
mov
push
out
mov
inc
mov
rcll
movsl
loop
xchg
mov
adc
aas
andl
dec
xchg
sbbl
stos
sbb
dec
pop
adcl
xor
mov
adc
in
outsb
pop
xor
and
sbb
jns
sbb
mov
inc
inc
arpl
inc
adc
mov
popf
stos
xor
clc
xlat
xor
leave
enter
sub
cltd
testb
add
movsl
orl
popa
cmpsl
dec
inc
cmp
xacquire
movsl
xchg
push
push
add
cmpb
add
sbb
inc
out
outsl
sub
stc
je
cld
sbb
repnz
test
pop
lds
in
mov
xchg
inc
xchg
mov
adc
rorl
mul
mov
mov
and
int3
lods
lahf
lahf
gs
hlt
cmpsl
fsts
sub
js
ficoml
jge
xchg
cwtl
dec
addr16
jg
pop
in
daa
or
shrl
lahf
ret
cmp
sbb
pop
jge
pop
aaa
mov
inc
out
mov
repnz
sahf
pop
inc
lcall
in
fsubp
in
std
add
dec
jmp
aam
fsubr
inc
leave
push
dec
jg
push
fidivrl
jg
add
dec
ljmp
out
jecxz
das
shlb
xor
shll
hlt
xor
ljmp
pop
outsl
push
jecxz
inc
mov
adc
fs
inc
in
repz
sahf
dec
cmp
inc
and
arpl
inc
or
mov
int3
test
rorb
ja
mov
or
imull
nop
xor
push
mov
pop
outsl
dec
mov
mov
aaa
pop
jl
es
cmp
test
data16
enter
jae
lock
adc
add
sbb
push
sbb
cmp
fdiv
jb
cmpsl
inc
jb
jns
or
mov
insb
insl
dec
xchg
testl
sub
jo
movsb
add
add
xchg
imul
cmc
repz
int3
inc
jg
mov
loopne
pop
xchg
xchg
mov
push
adc
sbb
imul
popa
lret
jecxz
call
and
jmp
lret
xor
sub
fcomp
dec
hlt
test
stc
sub
fs
call
dec
jns
sub
subl
add
inc
mov
and
std
sub
imul
mov
pop
xchg
lock
push
sbb
sti
dec
inc
push
shll
and
dec
shll
inc
mov
jb
loope
ss
clc
jae
stc
mov
dec
mov
and
test
mov
ret
testb
sub
popa
aam
mov
movl
aad
push
jmp
pusha
cmpsl
push
in
add
pop
add
in
push
ds
and
mov
cmp
cmp
enter
bound
push
inc
push
mov
ret
mov
dec
xchg
loope
js
insl
xorb
mov
mov
daa
mov
or
sbb
xor
mov
icebp
mov
sub
pop
shr
cmp
es
pop
mov
ss
mov
or
lret
adc
or
xor
cmpsb
xor
clc
mov
out
fnstsw
jmp
ss
inc
loopne
cmp
sub
rolb
jns
test
mov
inc
loope
jmp
mov
arpl
sub
and
lods
xorb
mov
loopnew
push
adc
xchg
mov
lret
jl
jne
dec
pop
sbb
sub
in
in
daa
mov
or
and
int3
pushf
mov
dec
sub
push
ret
pop
push
mov
adc
add
mov
or
test
nop
mov
fwait
aad
dec
leave
inc
cwtl
stos
xor
and
into
adc
fildll
loope
stc
sti
jl
adcb
rol
clc
pop
out
pop
xor
pusha
addr16
popa
or
adc
sub
dec
nop
fisubrl
xchg
out
xchg
xchg
shr
fs
clc
loop
arpl
and
dec
iret
rcll
call
xchg
test
inc
and
mov
pop
out
leave
iret
inc
dec
mov
pop
inc
ljmp
notb
jae
ss
adc
xlat
or
je
jns
frstor
pop
pop
daa
outsb
inc
cwtl
and
cli
xchg
xchg
lcall
outsl
fisubrs
dec
scas
mov
testb
or
jg
stos
jnp
dec
in
jle
mov
mov
dec
push
cmpb
aaa
dec
fisubs
or
push
inc
mov
pop
sbb
mov
push
add
pushf
cs
and
sbb
xor
push
mov
lods
andb
xchg
adc
xor
push
cmp
mov
aaa
int
sbb
fsts
sub
add
in
jne
xchg
shlb
pop
mov
or
sub
insl
add
cmc
mov
xchg
cmpsb
xor
lea
adc
sbb
movsl
inc
cli
or
xchg
ljmp
fadd
lea
clc
pop
loop
push
outsl
and
dec
imul
or
jb
shl
mov
push
fnstcw
cmp
mov
mov
sub
sti
imul
xchg
add
push
in
in
xchg
rcr
imul
mov
mov
out
fldcw
xchg
dec
in
out
test
xchg
sub
bound
mov
push
jle
xor
js
leave
xor
clc
jecxz
jnp
rorb
sub
outsl
ds
xor
jmp
mov
shr
jge
xchg
lret
xchg
sub
mov
xor
or
xchg
add
pop
loopne
push
inc
pop
loopne
inc
inc
pop
pop
jge
mov
sbb
inc
cmp
mov
cmp
dec
cmpb
cmpsl
das
dec
fsts
jl
fwait
or
stc
stc
or
jp
dec
mov
xor
repz
ss
aad
cmp
jb,pt
call
jne
les
das
ror
bound
fisubrl
cld
nop
jae
in
add
mov
lcall
mov
movsl
pop
pushl
and
pop
icebp
aam
jo
mov
movsl
cmp
pop
cli
dec
xorl
inc
in
aaa
cltd
dec
aas
inc
imul
in
test
cmp
jbe
jge
mov
xchg
call
push
mov
incl
mov
aaa
mov
outsl
xchg
mov
int3
fnstcw
mov
xchg
push
pop
inc
cmpsl
enter
mov
pop
mov
pop
mov
push
adc
push
cmp
pusha
add
inc
inc
into
lods
cmpsl
lea
ret
lods
repz
sahf
jo
inc
or
or
dec
adc
notb
ljmp
lret
call
les
cmc
fsubs
sub
mov
loopne
cs
xchg
enter
xchg
mov
mov
out
lock
stos
mov
jecxz
mov
add
test
mov
mov
add
jle
movsb
add
out
mov
outsl
inc
mov
xor
cmpb
imul
jbe
inc
mov
subb
mov
jns
test
scas
pop
pop
mov
cwtl
mov
mov
out
mov
jns
mov
lods
pushf
imul
and
pop
sub
lcall
adc
jns
fisubrl
sarl
jmp
mov
in
lcall
sub
out
fldcw
sub
ds
push
cld
dec
fdivrl
test
pop
mov
xchg
push
xchg
push
int3
pop
cltd
lcall
jae
or
out
xor
sti
test
out
lret
xchg
pop
inc
jp
call
subl
call
movsl
pop
faddp
xchg
fucom
mov
xlat
sbb
cmovae
test
jbe
std
inc
imul
cwtl
pop
stos
sbb
add
sahf
inc
arpl
iret
pop
in
test
sbb
xchg
or
cmc
mov
sub
lret
shr
xchg
cmp
dec
fstps
jne
pop
stos
add
jbe
clc
sbb
xchg
bound
push
mov
jo
xor
xchg
jo
arpl
in
lods
sbb
sbb
mov
call
lahf
sbb
xchg
out
pusha
lcall
or
mov
rcr
or
iret
dec
xor
mov
in
cmpsl
insb
cmpb
in
jb
push
push
les
xchg
pop
arpl
dec
push
lock
test
out
icebp
push
inc
mov
jno
jae
mov
inc
aam
mov
xor
sbb
fidivrs
sub
cmp
mov
lahf
jp
fldl
sbb
sub
out
test
daa
out
outsb
xchg
push
daa
push
xor
nop
pop
in
ficoms
fisubrl
cmp
nop
jns
mov
cmp
mov
lods
in
push
sbbb
pop
jle
pop
add
rcrl
inc
mov
jb
sti
xchg
daa
es
and
imul
xchg
cmp
cli
cltd
adc
cmc
pop
das
mov
lahf
mov
std
inc
fs
sub
aas
int
jmp
js
imul
dec
hlt
push
cmpsl
out
pop
mov
adc
enter
cmpsl
cmc
subb
out
sub
xchg
lahf
test
cmc
lret
jl
addr16
cmpl
iret
dec
and
mov
push
rcll
pop
cmp
xor
cmp
orl
jno
dec
popa
inc
sarb
lret
imul
int3
inc
loope
xchg
xchg
clc
and
stc
aam
lcall
repz
subl
mov
inc
shll
std
and
pop
xchg
rcrl
lea
lcall
ja
andb
dec
inc
cli
sub
push
fwait
inc
mov
popa
jbe
outsb
les
mov
and
pop
addb
int3
pop
dec
lds
adc
cmp
xor
jp
push
sub
cli
mov
sub
xchg
cmp
jp
cwtl
andps
pop
fidivs
dec
loop
mov
dec
push
jmp
int3
ss
mov
test
mov
pushf
andl
sar
jo
ss
in
cli
mov
mov
adc
sahf
mov
sbb
movsl
imul
int3
shlb
mov
decl
adc
leave
mov
fs
push
js
fs
add
mov
add
stc
sub
cmp
lret
and
dec
stc
enter
loope
sbb
pushf
ss
js
lock
shrl
mov
inc
pushf
mov
xchg
loop
dec
pop
cmp
mov
push
es
add
dec
lcall
xchg
int3
lret
inc
cld
cwtl
jp
inc
in
inc
mov
cmp
stc
cmp
add
notl
nop
movb
mov
sbb
add
push
loopne
or
scas
cld
push
push
xor
sub
pop
pop
scas
repnz
adc
imul
mov
test
inc
sbb
jecxz
push
jno
jmp
scas
lods
icebp
push
or
mov
or
mov
mov
xchg
jb
adc
scas
inc
clc
call
push
adc
dec
jl
push
sub
jae
cli
pop
cmp
jns
cs
data16
inc
pop
popa
sub
shll
in
jle
inc
mov
push
daa
pop
jns
mov
ret
and
xchg
and
xorl
add
shlb
lret
xchg
xor
sbb
outsb
loope
sub
fidivrl
xor
test
int
je
jecxz
div
insb
jmp
jle
stc
jg
lahf
adc
xor
jb
mov
pop
sbb
loope
loopne
xor
pop
mov
popa
neg
inc
sub
ss
pop
jp
lods
mov
insl
mov
xchg
cs
addr16
adc
aad
imul
xchg
and
mov
dec
or
aas
dec
mov
scas
sub
jge
lea
mov
loope
mov
mov
ds
push
jns
mov
das
pop
sahf
jg
cmp
jg
push
push
dec
cmp
sti
adc
mov
movswl
test
aam
sbb
pop
mov
sbb
inc
lods
and
jno
adc
arpl
ret
shrb
addr16
lds
push
lds
pop
sub
push
jo
out
repz
inc
pusha
pop
push
and
rolb
mov
ret
add
imul
jecxz
orl
ja
std
and
out
std
mov
cwtl
cltd
inc
sbb
data16
push
mov
sub
xchg
clc
and
mov
mov
int
jno
xlat
mov
dec
jnp
mov
mov
cld
out
jmp
mov
imul
cmp
in
push
push
mulb
mov
das
jns
jge
adc
sub
sbb
mov
js
enter
cmp
ficoms
int3
inc
enter
test
loope
jnp
xor
rclb
movsl
sahf
cmp
xchg
jbe
sub
jle
lret
rcll
sbb
and
dec
mov
adc
cmpsb
jb
lea
and
hlt
mov
and
repnz
movsl
xchg
lcall
jge,pt
mov
sbb
inc
pop
in
lahf
aam
push
lea
mov
push
arpl
iret
stc
in
stos
and
lret
rcll
and
sbb
xor
xchg
mov
xor
mov
call
mov
ret
incl
test
popf
pop
arpl
rol
xchg
call
lret
and
insl
lahf
shlb
dec
mov
push
jge
push
adc
ret
mov
rol
test
cld
xchg
push
into
mov
imull
sbb
rclb
sbb
xor
xchg
push
sahf
pop
dec
xchg
sub
clc
sbb
or
sti
les
loope
cli
fwait
outsl
fldt
xchg
cmpsb
xchg
sbb
pop
add
sub
insb
das
mov
or
lods
or
mov
insl
fiaddl
or
jmp
push
loope
sahf
lret
lods
shll
popa
mov
pop
les
xchg
dec
bound
pop
hlt
lea
jne
adc
push
ljmp
dec
fwait
dec
xchg
and
jg
sbb
pop
loop
popf
mov
test
mov
inc
stos
cld
sbb
and
divb
ret
std
ret
inc
ret
icebp
xchg
andl
inc
movsl
lret
fstpt
cmp
in
mov
aaa
mov
fcoml
adc
push
jae
cmp
pop
push
dec
xor
pop
mov
mov
ret
adc
dec
mov
das
push
dec
cld
pop
mov
daa
nop
popf
xchg
decb
pop
addr16
ljmp
push
sub
jnp
ja
aam
mov
dec
shrb
incb
mov
ss
dec
inc
mov
cmpsl
xlat
push
cltd
insl
push
mov
mov
and
ljmp
fistps
add
push
sub
dec
lret
mov
add
xchg
in
shll
popa
out
sub
and
dec
pop
fsts
leave
out
out
bound
pop
xchg
xchg
jb
jl
add
test
xor
pop
and
add
div
mov
mov
pop
es
cmp
mov
mov
mov
imul
mov
test
pop
fnstcw
dec
jmp
push
mov
xchg
inc
mov
jge
jg
pop
and
daa
sbb
mov
adc
mov
pop
push
jecxz
int
jne
cmpsb
push
pop
cmp
insl
ret
xchg
aas
lret
inc
or
data16
dec
sahf
adc
xor
jae
push
sbb
sbb
mov
dec
cmpsb
iret
cmp
pop
fdivs
stc
outsl
pop
outsb
shl
add
push
mov
pop
addl
mov
sub
add
imul
sub
dec
jbe
pop
inc
cmc
mov
std
inc
jns
aam
orb
xchg
xchg
mov
inc
pushf
arpl
inc
dec
jg
outsl
sub
popl
jnp
cltd
in
int
prefetch
jp
cli
dec
dec
jecxz
les
ret
jnp
imull
ror
scas
pushf
daa
sbb
fmuls
adc
sub
cwtl
or
jl
jmp
leave
jl
jnp
push
in
inc
xor
xchg
dec
pop
adc
repnz
cmp
je
imulb
jbe
adc
adc
xchg
jp
sbb
test
jl
fstpl
mov
jp
xchg
push
icebp
lret
cli
mov
stos
push
mov
jmp
sbb
daa
mov
inc
sahf
nop
loop
fwait
sbb
xor
or
jge
mov
das
shrb
mov
gs
ficoml
lret
sti
or
jmp
jnp
xchg
push
stos
push
in
mov
mov
repz
test
dec
mov
cli
add
ret
push
dec
test
jne
lahf
inc
xchg
test
in
iret
sub
out
inc
aam
pop
push
add
xlat
jne
mov
inc
popa
fisttpll
jnp
je
dec
faddp
adcl
ljmp
js
push
xchg
xchg
mov
mov
xchg
popf
mov
test
dec
leave
fidivl
jle
sub
add
leave
push
in
or
dec
and
repnz
cmpsl
add
cmp
mov
mov
rorl
adc
stc
pop
std
xor
jecxz
pop
loope
adc
xchg
or
sub
into
xor
into
cmp
or
rcr
mov
dec
insl
and
push
mov
push
mov
sbb
push
adc
mov
xchg
daa
add
jmp
xchg
lahf
pop
daa
jb
push
data16
jne
pop
jne
xorl
loope
cmp
ss
push
lcall
sbb
stos
and
mov
cmp
add
sbb
inc
subl
int
outsb
xchg
mov
nop
stc
fistps
cld
scas
sar
mov
popa
repnz
push
mov
fbstp
insl
or
mov
sbb
frstor
scas
mov
leave
xlat
ret
lahf
bnd
cmp
adc
test
push
test
mov
mov
outsb
test
sti
sub
imul
mov
test
sti
test
dec
jo
test
add
push
divl
sarl
or
sub
pop
xchg
push
in
xchg
add
jge
jecxz
int
lret
ret
in
add
sarl
mov
sub
mov
sahf
and
push
les
and
sub
xchg
outsl
jge
push
loope
cmp
clc
lds
fcompl
mov
roll
pop
imul
adc
daa
inc
pop
jle
pop
clc
cmp
fldenv
je
and
jg
jmp
mov
adc
and
mov
push
xchg
outsl
push
xchg
cld
jp
mov
adc
aam
js
into
jmp
cld
fisttpl
fwait
in
cmp
or
push
leave
rclb
jp
push
pop
mov
sub
jae
xchg
and
and
outsl
ja
imul
popa
cmp
dec
aad
addr16
in
fidivrl
ja
fistpl
loopne
push
pusha
cwtl
cltd
pushl
xor
rclb
dec
fldt
test
jno
pop
or
mov
cmp
jmp
mov
in
pop
mov
dec
pop
sbb
out
rcrb
testb
sbb
sub
sbb
out
lea
jp
mov
xlat
les
ss
iret
add
out
jno
inc
jmp
and
mov
cmp
lret
mov
lods
pop
stc
mov
pop
hlt
push
lahf
cmpsb
lret
aas
or
orb
push
aaa
add
repnz
nop
leave
mov
flds
hlt
push
leave
imul
hlt
add
mov
cmp
in
aam
fwait
xrelease
push
dec
pusha
or
scas
sub
jge
fcoms
mov
xchg
lds
insl
ljmp
js
popf
int
push
mov
dec
inc
mov
xor
int3
das
pushf
push
inc
pop
cs
xlat
xchg
sub
imul
adc
pop
out
dec
and
test
nop
loop
mov
and
pop
jge
test
mov
adc
or
xor
je
jle
cmpsl
icebp
mov
dec
js
dec
push
std
push
cmp
fidivs
sbb
int3
shlb
cmpsb
dec
mov
sbb
mov
add
mov
popa
cmp
sarl
stc
neg
or
mov
ja
inc
cmpsl
movsb
ljmp
pop
push
enter
es
in
mov
jp
iret
ret
push
mov
inc
mov
xor
test
and
push
bound
dec
xor
jmp
stos
lret
adc
pop
push
xchg
dec
push
mov
cltd
out
es
pop
repnz
mov
push
lods
shlb
arpl
fsts
nop
xchg
popa
inc
into
jne
inc
jecxz
sti
rolb
rorb
push
jae
sahf
mov
ljmp
shll
iret
push
lret
xorl
ds
aas
pop
or
dec
mov
jne
sub
sub
and
xor
jae
daa
mov
xchg
negl
sbb
pop
mov
jp
fmul
int
xor
push
dec
sbb
cmp
add
inc
mov
and
and
adc
cmp
sbb
push
push
jl
sahf
jno
mov
mov
inc
push
jo
dec
les
in
rcrb
and
inc
sbb
in
sub
dec
cmpsb
mov
or
xchg
stos
push
enter
wbinvd
cld
pop
jmp
in
jne
gs
fists
decl
mov
pop
pop
adc
outsb
shrb
loope
ret
mov
fbld
fwait
mov
xor
rorl
push
push
stos
call
icebp
cmc
sub
or
dec
dec
push
out
jmp
sub
dec
iret
addr16
pop
xchg
inc
mov
mov
xchg
outsb
and
into
scas
lock
dec
shrb
imul
out
out
loope
pop
scas
packuswb
rclb
dec
push
inc
fsubl
adc
mov
or
mov
lods
sub
mov
sub
dec
mov
in
sub
cltd
or
sti
jg
popf
hlt
xchg
xor
lds
out
inc
jl
push
test
xchg
sub
add
dec
push
out
inc
sbb
data16
mov
pop
add
push
pop
pop
mov
ss
ret
pop
cmpsb
fmulp
cmp
jecxz
add
push
dec
push
je
das
movsb
cmpsb
mov
into
lahf
xchg
add
nop
test
push
jo
inc
call
push
inc
loopne
sub
dec
adc
loopne
cmp
mov
mov
jae
insb
add
adc
inc
out
fnstsw
adc
jmp
fs
jg
dec
ffree
test
mov
sbb
sbb
sub
cmp
jge
lcall
xchg
popa
out
in
and
stos
or
cmpsl
pop
out
pop
jbe
mov
call
lea
sbb
add
jle
lcall
adc
subl
clc
xchg
push
jg
cmp
pop
jmp
lds
pop
aaa
mov
cs
es
das
mov
pop
rcr
jge
mov
das
jmp
mull
pop
jns
dec
rcrb
pop
cmp
in
pop
shl
push
push
xor
jmp
mov
inc
das
insb
or
in
push
mov
arpl
push
sub
mov
add
data16
sub
push
lret
pop
mov
mov
inc
mov
andb
in
out
mov
test
loopne
inc
or
insl
adc
sti
notb
popa
dec
sub
ja
arpl
repnz
std
jne
or
mov
ds
andl
test
mov
sbb
and
pop
ds
and
pushf
aas
in
jne
rcll
xchg
push
lret
mov
mov
into
mov
cmp
mov
add
test
outsl
decb
adc
sub
lock
push
loop
das
mov
ss
pop
jbe
sub
test
mov
mov
xor
les
pop
test
mov
stos
shlb
jle
jae
in
adc
int
test
adc
int
adc
loop
cmpsb
mov
loop
sbb
repz
sbb
mov
inc
in
xor
pop
rcrb
in
out
repz
or
mov
popa
data16
test
inc
push
xchg
ret
and
xchg
sub
ret
data16
leave
xchg
mov
xor
mov
sbb
inc
adc
mov
jns
outsb
mov
mov
mov
jae
in
push
sub
lock
adc
dec
test
rorl
mov
cmp
fdivrl
aas
mov
sub
push
call
subb
int3
fwait
mov
inc
icebp
out
jo
shll
jmp
xchg
lcall
sbb
out
xchg
loop
addr16
fcmovnu
sbb
push
fwait
push
xchg
into
insl
add
inc
pop
mov
sub
js
sub
arpl
shlb
cmpsb
dec
pop
fs
ret
mov
sub
in
cmpsb
fcoms
rcrl
test
aam
mov
inc
inc
into
aaa
fnsave
mov
mov
dec
out
sbb
push
orl
add
aas
repnz
aas
add
fsubrl
movsl
cld
xchg
hlt
movsb
cwtl
les
jno
mov
or
fcmovb
and
push
addb
sub
push
cmpsl
jo
fsubl
aaa
xchg
mov
aam
cmp
pop
inc
sarb
pop
shl
inc
lods
out
xchg
xor
pop
cld
sbb
and
outsl
clc
dec
sbbl
inc
pusha
dec
int
lcall
cmp
daa
jbe
jmp
and
sub
arpl
mov
pop
and
scas
movsl
push
mov
ss
add
test
add
fld
mov
jmp
scas
iret
xor
xchg
pop
add
push
movsb
and
lcall
dec
ret
mov
dec
jb
in
je
aam
je
and
pop
add
or
xor
orb
push
insb
mov
push
popf
into
inc
lds
xor
xchg
popa
flds
mull
aas
adc
sub
sub
sbb
cltd
inc
cmp
dec
pop
lcall
push
sbb
xchg
inc
sbb
call
hlt
testb
dec
lcall
jns
neg
jns
scas
xchg
mov
jecxz
mov
cmp
icebp
in
bound
lods
push
jns
dec
sub
inc
sbb
shrb
mov
or
insl
mov
or
sar
push
ficoml
push
punpckhwd
sbb
addb
imul
jp
xorl
mov
lcall
stos
cs
loope
jmp
in
test
bnd
mov
cmpsb
test
lcall
arpl
movsb
fldenv
arpl
jp
mov
xchg
scas
push
fcmovnu
daa
and
sti
dec
mov
sub
dec
sub
insb
in
ja
dec
jae
lods
test
aas
movsb
mov
mov
int3
mov
fisubrl
dec
sahf
sub
fwait
push
sahf
mov
filds
or
in
xchg
cmp
test
bound
shrb
jnp
or
bound
jae
xor
cwtl
or
mov
mov
or
or
decb
mov
sub
mov
mov
mov
fdivl
out
test
fdivl
cmp
mov
int3
push
sub
sub
movsb
jecxz
imul
push
mov
aas
xlat
pop
fistpl
es
mov
sbb
leave
mov
xor
push
inc
nop
inc
jnp
imul
cltd
push
xor
mov
mov
testb
push
push
push
add
cltd
or
jp
mov
bound
xchg
mov
sar
xchg
add
hlt
lahf
pusha
icebp
nop
lds
mov
xlat
xchg
cmovle
aaa
or
jg
ds
insl
sahf
and
ss
shll
clc
mov
imul
js
inc
inc
push
bnd
cvtdq2ps
je
in
dec
push
jmp
push
iret
test
ja
stos
cmp
pop
inc
je
add
bound
stos
sub
dec
jle
push
adc
fwait
cmp
sbb
mov
jo
adc
push
mov
jno
jne
outsl
add
mov
mov
sbb
jmp
mov
xlat
xor
pop
jb
into
mul
rorb
add
in
mov
push
es
data16
fsubrs
pop
and
stc
mov
insl
mulb
into
pop
jbe
cltd
test
inc
out
sti
xlat
das
les
fmul
cmp
cmpsl
pop
or
xchg
loop
mov
scas
ds
lods
decb
xchg
cmp
idivb
mov
mov
xlat
popa
pop
pop
out
ret
xchg
xor
push
mov
out
ret
sub
inc
push
mov
inc
or
push
xchg
dec
cmc
cli
mov
sub
add
jnp
clc
jp
mov
jns
loopne
fwait
or
inc
call
adc
add
cmp
push
mov
sub
lods
pop
int
xchg
mov
pop
aas
dec
push
stc
ds
pop
mov
mov
xor
aaa
popa
movsb
pavgw
rep
imull
mov
lods
shlb
hlt
fs
xlat
mov
lret
cmc
push
dec
outsb
mov
push
pop
rcrb
cmp
std
inc
xchg
test
mov
cmp
ljmp
roll
int3
std
rep
jle
mov
cmpl
xchg
and
cmp
mov
ljmp
inc
mov
divb
and
cmpl
bound
jg
mov
xchg
mov
cli
push
cmpsb
shl
mov
test
inc
xchg
cltd
push
push
mov
outsb
xorl
cmp
cltd
jp
pop
jg
aam
mov
jle
cltd
aad
xor
push
repnz
outsb
sbb
xor
jp
out
pop
mov
dec
pop
push
adc
jno
jge
dec
insl
roll
les
and
rep
sub
push
lahf
lods
cmc
je
jo
je
hlt
xor
adc
push
sbb
add
loop
stc
inc
mov
dec
push
pop
sbb
sti
idiv
push
mov
xor
push
jg
movsb
cmpsb
inc
mov
adc
repnz
mov
adc
test
lea
lret
rol
jo
test
dec
dec
cmp
cmp
cmp
mov
mov
xor
loopne
rolb
inc
push
push
mov
lret
fwait
dec
lahf
cmp
adc
test
xchg
inc
popf
inc
scas
inc
iret
dec
jmp
repz
xor
push
fwait
inc
add
mov
xor
push
mov
mov
mov
iret
push
mov
jns
xor
mov
push
ljmp
and
fisubl
fdivp
imul
sub
gs
add
mov
data16
xorl
hlt
mov
sbb
inc
push
add
lods
sub
add
xchg
push
aaa
mov
mov
cli
jae
nop
pop
adc
xlat
mov
xor
sahf
jl
loope
jp
adc
aad
xchg
mull
xchg
and
pop
cwtl
pop
push
rcl
std
jg
fisttpl
clc
mov
fidivrs
scas
sub
loop
add
arpl
xchg
mov
pop
jnp
xchg
xor
hlt
dec
psrad
call
push
lods
jmp
mov
in
cwtl
xchg
cmp
add
mov
rcll
pop
and
or
mov
mov
xchg
xchg
jp
lcall
hlt
xchg
and
mov
fwait
sub
mov
inc
dec
add
pop
mov
inc
imulb
pop
adc
push
mov
nop
pushf
xor
mov
lcall
ficoms
or
jmp
ss
js
rcll
mov
cmp
cltd
pop
mov
pop
push
fdivrl
fldcw
dec
xor
ror
fildl
ret
roll
pop
pop
jle
pop
dec
mov
xchg
repnz
je
push
sbb
mov
imul
and
out
mov
push
insl
dec
outsl
push
popf
adc
xor
xchg
out
mov
and
mov
enter
pop
shlb
mov
dec
sub
outsb
stos
les
js
loope
rclb
rclb
outsb
cli
fstps
sub
pop
or
mov
xchg
push
mov
sbb
call
jb
mov
and
sbb
gs
pop
push
idivb
mul
xchg
sub
out
mov
icebp
aas
lods
xchg
sub
mov
stc
xor
push
scas
inc
mov
xor
adc
ret
and
xchg
loop
push
xchg
sahf
mov
and
lds
xor
repz
gs
mov
sbb
push
mov
ss
pop
jmp
cmp
dec
mov
loopne
dec
sub
dec
pop
jo,pn
mov
andb
mov
inc
hlt
hlt
out
mov
jle
jp
notb
mov
insl
jnp
sub
dec
jl
ret
dec
cmp
jne
mov
jp
aaa
jge
push
dec
loop
pop
push
pop
push
cmc
nop
jne
mov
fcomip
pop
push
mov
jmp
int3
jmp
jb
insl
shl
paddq
pop
push
fiadds
fwait
mov
andl
mov
cmp
fisttps
outsl
jne
mov
fdivrs
scas
sbb
in
mov
int3
or
ss
stc
xor
push
sbb
pop
inc
xor
insb
xor
mov
hlt
xchg
or
repz
fmul
or
popa
ljmp
xchg
frstor
dec
repnz
mov
rclb
stos
mov
in
fisubl
xchg
in
rcll
rolb
imul
imul
out
aaa
faddl
cwtl
sub
mov
shlb
aas
and
jo
dec
js
lahf
dec
into
inc
adcb
cld
adc
scas
push
adc
lock
pop
jmp
mov
ss
or
pop
ss
sar
movsb
lods
mov
pop
cmp
ret
inc
into
pop
and
int3
adc
cmpsb
stos
push
pop
push
push
and
and
inc
mov
xchg
clc
pop
subl
jae
nop
outsl
popf
stos
mov
or
mov
jnp
lock
inc
in
jmp
cltd
jb
daa
sbb
jnp
sbb
inc
xchg
sub
lahf
add
les
inc
mov
fwait
loop
das
loop
pop
pop
andl
sub
inc
mov
sub
push
in
and
add
dec
into
daa
xchg
pop
idivb
mov
stc
pop
sub
rcrb
push
mov
fmuls
mov
fsubs
pop
dec
or
popf
sub
roll
inc
imul
jo
dec
lods
xor
pop
clc
out
ret
dec
cmp
mov
mov
scas
popa
insl
jmp
loop
movsl
cmp
pop
out
or
pop
mov
call
xor
stos
inc
fwait
arpl
enter
mov
cs
nop
fisttpll
fs
stos
or
push
pop
push
mov
mov
imul
dec
push
aaa
mov
ret
hlt
aas
mov
pop
ret
xor
jne
sti
mov
scas
adc
push
sbb
push
mov
pop
push
cli
add
lea
sub
cs
mov
pop
xor
mov
cmpsb
xor
je
fsub
xor
aad
mov
cmc
cli
movsl
fcompl
pop
and
xchg
ljmp
push
inc
outsb
mov
sbb
sbbl
jo
cmpsb
sbb
ret
mov
insb
jg
shlb
fnsave
mov
rcrl
repz
add
sub
out
mov
inc
xchg
addr16
and
adc
call
lds
cs
imul
push
lret
out
iret
add
addr16
js
loopew
mov
jns
sbb
mov
xor
jge
jmp
xor
in
and
stos
enter
loopne
push
adcl
fisubs
lret
int
dec
dec
sub
imul
fcompl
lahf
test
stos
mov
int
out
ss
test
mov
cmpsb
scas
push
ror
jg
inc
aad
lret
inc
mov
mov
cmpsl
or
mov
icebp
jl
sbb
push
pop
cmp
nop
mov
jnp
mov
xlat
mov
leave
sub
jno
cmp
adc
mov
in
aam
inc
jns
jl
pop
jmp
rorl
pusha
xor
sbb
jo
pushf
cmp
jns
loope
shlb
or
pop
bound
test
push
test
sbb
jmp
xor
test
inc
bnd
sbb
pop
bound
loopne
mov
push
adc
lods
fisubrl
bound
mov
sub
shl
jge
adc
sbb
bound
in
jno
inc
mov
inc
out
dec
adc
nop
adc
push
mov
fisubrs
test
mov
pop
andl
popf
mov
push
jge
leave
xor
cmp
dec
arpl
push
imul
std
xchg
inc
dec
inc
popa
jmp
jp
je
push
mov
mov
cmp
scas
lret
aaa
jecxz
sti
std
imul
sub
or
aas
xchg
jmp
outsl
add
test
jp
cli
jle
shll
lcall
andl
test
xor
fisttpl
ret
sub
jmp
xchg
dec
jbe
mov
orb
add
cmpsb
inc
clc
lret
and
ret
jp
test
cmp
aad
loopne
jae
fldl
loop
pop
inc
out
call
pop
dec
sbb
loope
repnz
fisubl
sub
dec
push
std
sarb
xchg
lock
pushf
push
add
dec
std
dec
inc
call
mov
jo
mov
cmp
or
lea
stos
scas
mov
inc
lahf
fdivrs
ret
call
and
divb
dec
jno
cld
push
scas
pop
mov
jb
lret
cmp
push
jg
rorb
sub
pop
data16
in
ljmp
mov
xor
movsl
jnp
and
pmuludq
pop
cli
and
push
test
shll
repnz
mulb
pushf
sub
pop
mov
cwtl
dec
sti
shll
or
add
jg
jbe
adc
out
test
out
and
loopne
lahf
rdtsc
cmp
pop
or
adc
sbb
mov
in
mov
jnp
inc
ds
ret
xchg
adc
mov
fdiv
inc
xor
arpl
push
sub
int3
adc
cmp
jp
mov
test
mov
jno
jne
stc
mov
repnz
jns
adc
push
lds
imul
sub
push
cld
and
cld
cli
push
add
into
pop
sub
xor
pop
loop
arpl
daa
sbb
ds
std
gs
out
stos
sub
mov
xor
lock
repz
mov
inc
cmpsl
jbe
mov
data16
pop
or
mov
scas
test
or
cmc
xchg
mov
in
xchg
sub
cmp
mov
xor
push
andb
xchg
mov
daa
mov
test
stc
cmc
repz
or
sub
xchg
fistl
stos
loop
pop
insl
loopne
repnz
xchg
addr16
popf
sbb
sub
adc
or
mov
xor
out
jbe
sub
and
in
sub
outsl
jle
jbe
inc
mov
sub
xchg
push
jmp
xor
push
add
jecxz
out
imul
movsb
adc
xchg
test
test
pushf
pushl
std
dec
jle
push
data16
push
jno
sbb
push
push
enter
loope
mov
dec
add
adc
jns
xchg
and
lock
mov
adc
int
fmuls
lds
ficomps
aas
and
aad
jbe
mov
xchg
aam
outsl
cmp
push
fwait
pop
sub
fwait
pop
cmp
arpl
cmc
mov
push
mov
xlat
das
cwtl
pop
push
hlt
mov
dec
in
loop
add
sub
xor
push
les
popf
mov
xchg
sbb
push
xor
rcrb
inc
mov
and
cmp
pop
jg
aas
sahf
lret
scas
inc
adc
xlat
pop
sbb
mov
roll
lods
popa
addb
hlt
cmpsl
loopne
cmp
xchg
jp
ret
push
mov
dec
jmp
cwtl
pop
push
lahf
ja
test
pop
inc
jnp
cmc
cmp
roll
inc
aas
sbb
push
bound
jmp
and
test
jnp
or
data16
adc
and
stc
fbstp
popa
std
sub
div
idivl
jp
aas
mov
test
mov
mov
imul
leave
cmp
jnp
hlt
lea
imul
pusha
leave
dec
and
ss
inc
out
test
fildl
xor
in
shrl
xchg
ja
movsb
push
aas
pop
mov
imul
pop
xchg
es
cmp
and
push
lcall
push
incb
or
leave
mov
mov
push
adc
arpl
mov
dec
or
sbb
xorb
hlt
loopne
add
jnp
sub
sub
xor
mov
cmp
pop
push
adc
cmc
adc
fsin
lock
xchg
pop
xor
idivl
mov
pop
push
adcb
cs
inc
rcrl
mov
jb
cmp
cmpsl
lahf
sbb
xchg
cwtl
jnp
rcll
sbb
dec
push
lods
gs
dec
add
jb
inc
sahf
pushf
xchg
jbe
cmp
fists
jl
sub
fimuls
loop
xlat
cmp
fsubrs
andb
mov
mov
inc
and
push
iret
mov
into
mov
sbb
push
pusha
aas
ja
sub
sbb
das
test
jo
rep
jnp
ret
ror
mov
cmpsl
lcall
add
in
add
or
inc
lea
jno
repnz
dec
mov
push
adc
loopne
push
sbb
inc
push
inc
pushf
cli
or
shl
mov
cmp
outsb
lret
fs
movl
mov
test
add
and
stc
orb
mov
pop
pop
test
xor
cmpsl
and
stc
xor
aaa
jecxz
loopne
pop
push
cmp
pop
pop
mov
jecxz
fnsave
xchg
mov
cmp
or
add
sub
pop
mov
inc
fcoml
in
push
iret
movsl
xchg
or
mov
das
data16
push
sbb
jbe
mov
mov
sti
cmc
nop
cmp
push
adc
fstpt
icebp
fists
int
mov
jge
popa
xchg
stos
xchg
or
loopne,pt
jb
out
popa
dec
mov
bound
or
test
outsl
shr
fisubs
xlat
test
xchg
stc
mov
ja
mov
push
hlt
sbb
pop
ret
arpl
test
ss
push
jl
imul
and
mov
mov
ds
jnp
xchg
adc
push
pop
mov
lods
jge
es
xchg
neg
lcall
and
cld
xor
mov
push
pop
push
cli
enter
ficoms
xchg
ds
mull
mov
das
push
cli
cmpsl
inc
loop
mov
out
das
cs
fs
fisubl
xchg
popf
and
sbb
aaa
mov
sti
lea
fcomps
and
push
sub
mov
adc
push
jge
daa
mov
xorb
mov
push
push
icebp
adc
add
aam
ja
aaa
pop
or
pop
scas
dec
leave
push
and
push
negb
mov
cmp
jle
sbb
popf
sbbl
shrb
cli
xchg
pop
test
push
aaa
movsb
push
repz
ja
xchg
mov
fmuls
cli
sub
or
xor
cli
loopne
movsb
cmpsl
cmpsl
mov
ret
mov
jle
clc
sarl
pop
cmpsb
and
jno
jb
and
into
sub
pop
loop
cmp
mov
inc
add
pop
in
out
xchg
decl
sub
dec
mov
int3
push
xor
jecxz
pop
outsl
or
out
cmp
push
sub
addr16
ds
cmp
call
jne
dec
xchg
stos
in
dec
out
dec
mov
and
fcomps
ja
mov
sub
rcrl
js
call
data16
or
stos
bound
add
inc
xor
sti
pop
xlat
sbb
aad
push
adc
sahf
inc
add
arpl
cmp
pop
rolb
add
cmp
cmpxchg
or
pop
xor
mov
inc
repnz
jns
mov
jl,pn
pop
gs
push
inc
call
cmp
pop
sti
xchg
jle
sbb
push
jle
repz
jmp
inc
sbb
xchg
lret
sub
lds
cmp
xchg
mov
or
inc
jmp
addr16
cmpsl
dec
enter
stos
lea
les
sbb
cmp
stos
ds
lret
and
inc
lds
inc
cmp
and
xor
inc
mov
cmp
stos
fstpl
mov
jo
out
push
cltd
fsts
das
nop
lods
mov
pop
popa
icebp
ss
and
inc
test
fidivrs
add
and
xor
aaa
mov
jp
js
lret
dec
fdivl
mov
jg
mov
aad
push
sbb
adc
pop
fdivrl
test
shlb
fidivl
repnz
jo
negl
inc
bound
pop
data16
pushf
sbbl
lahf
fstpt
mov
push
sti
adc
mov
sahf
out
js
rorl
es
mov
adc
sub
or
sub
sub
jle
das
arpl
add
mov
je
sbb
push
sbb
test
jp
out
aas
mov
cmp
xor
sub
dec
jo
cmpsl
adc
xchg
jge
mov
lods
pop
lds
scas
xor
test
pop
sbb
push
xor
inc
es
inc
xlat
push
inc
loopne
mov
lahf
jb
jmp
sub
clc
sub
out
inc
sbb
imul
lea
std
rcl
mov
aad
sbb
cmp
imul
xchg
dec
mov
rcrb
mov
xchg
mov
enter
test
sub
rcl
sahf
xor
inc
adc
adc
int
outsb
gs
gs
loopne
dec
in
iret
aad
sahf
pop
insb
aam
mov
push
pop
xor
jae
lret
jl
es
mov
add
add
pop
lods
jno
int3
inc
je
cmp
cmp
dec
adc
mov
and
inc
jne
mov
sbb
cli
pop
jno
mov
cmp
dec
fs
inc
sti
xor
adc
mov
dec
ficoml
mov
aam
pop
lea
jmp
mov
push
std
push
sub
ljmp
adc
mov
mull
pop
adc
add
inc
push
jb
cmpsl
adc
push
popa
cmp
cwtl
je
push
adc
and
mov
mov
pop
fwait
leave
cli
push
mov
lcall
xchg
sub
pop
aad
and
shlw
and
cmp
xchg
lret
arpl
push
inc
mov
call
cmc
xor
inc
out
xchg
xor
out
mov
dec
call
cmp
cmp
sti
shr
xor
push
add
js
gs
xor
jbe
in
adc
add
fmul
cvtpi2ps
cmpsl
outsl
testl
cmp
lods
dec
add
mov
sbb
mov
and
divb
test
or
into
nop
mov
cltd
cmp
ss
inc
les
mov
das
jmp
adc
gs
dec
popf
lahf
test
push
push
or
lret
fstpl
ficoms
lret
add
das
iret
mov
imul
jne
pop
sub
int
fnsave
testb
scas
push
bound
adc
jae
and
movsb
leave
add
into
out
dec
or
cli
and
mov
pop
xlat
jae
sub
jle
out
sub
xor
cmp
mov
lahf
xchg
xchg
mov
je
data16
clc
aam
clc
and
andl
lods
jno
stos
inc
mov
sub
xor
rorb
bound
iret
jo
aad
enter
imulb
xchg
pop
add
inc
adc
scas
xorb
scas
dec
add
inc
iret
cmp
pop
jp
mov
icebp
movsb
mov
mov
dec
adc
mov
mov
mov
repz
push
sahf
inc
fnstsw
jl
and
data16
pop
mov
and
pop
inc
dec
pop
cvtdq2ps
pop
shll
mov
jae
jge
pop
adc
mov
loop
addr16
pop
fnstcw
add
stc
mov
scas
call
in
cld
ffreep
cmpsb
and
jnp
jns
pop
mov
cmp
jg
or
mov
inc
in
loop
xorb
outsl
popf
mov
pop
repz
test
xchg
insb
sbb
push
std
fadd
pop
popa
dec
jl
enter
mov
xchg
add
mov
das
aam
cmpsb
push
inc
int3
adc
sbb
push
or
daa
jno
pop
push
and
ret
sarb
in
iret
imul
out
dec
xchg
out
push
enter
mov
in
lds
pop
or
cmp
std
and
lcall
lock
jo
leave
sbb
scas
enter
sti
mov
jns
call
mov
mov
mov
push
inc
cmp
xchg
push
je
inc
sti
jae
inc
shl
dec
pop
sub
jb,pt
stos
lea
scas
xchg
jb
mov
dec
cmpsb
xchg
xor
mov
ret
jne
sbb
aaa
sbb
push
adc
out
pop
subl
dec
xlat
mov
ficoml
mov
and
je
bnd
fwait
cmp
hlt
adc
push
pop
sbb
dec
xor
xlat
add
lcall
cld
int
or
out
loope
jnp
jb
jl
dec
xor
push
xchg
fucomp
cmp
dec
xlat
popa
sbb
les
pop
mov
ss
adc
adc
xor
xlat
lods
inc
sbb
nop
adc
inc
xchg
ret
fidivrl
pop
push
and
clc
mov
pushf
mov
das
xor
sahf
adc
arpl
cmp
mov
mov
sub
mov
mov
xchg
dec
jp
lods
stos
stos
jns
icebp
dec
ja
hlt
or
sti
arpl
jns
xchg
lret
cmp
dec
dec
adc
cmp
mov
dec
jl
dec
sti
cmp
xchg
cmp
jecxz
mov
sub
clc
stc
sbb
mov
outsl
mov
or
daa
subb
mov
dec
stc
pop
pushf
in
push
fdivp
push
mov
mov
adc
xchg
andb
cs
pusha
hlt
in
sbb
jno
movsb
pushf
cli
push
xchg
incl
mov
fldenv
mov
icebp
rcrb
xor
and
adc
mov
cmp
aas
xchg
mov
push
je,pn
mov
xchg
xchg
enter
dec
add
xor
xlat
xchg
cltd
xor
pop
xor
fildl
add
lahf
test
xchg
pop
sbb
negb
xchg
push
dec
mov
fs
jecxz
ja
pop
aas
repnz
ja
dec
pop
fsubs
stc
dec
mov
inc
sbbl
mov
jne
xchg
rorb
ja
lds
clc
push
inc
pushf
cmp
cmp
adc
pop
dec
jae
cltd
gs
sbb
pop
imul
pop
jbe
movsl
out
shrb
or
jmp
insl
mov
mov
jnp
je
push
test
add
or
adc
mov
fcoms
adc
mov
andb
lret
popf
adcb
jle
bound
xchg
jne
aad
mov
popa
stos
sbb
add
mov
movsb
push
xchg
or
mov
in
adc
xchg
dec
aam
xchg
rclb
jo
je
hlt
ljmp
mov
sahf
push
push
push
jo
and
loop
xchg
loop
aas
fs
mov
or
mov
mov
lret
loop
repnz
or
push
xor
inc
dec
fldt
lods
mov
push
jle
cs
pop
jp
jle
adc
sbb
lcall
mov
cmp
push
movsl
lock
sub
testb
mov
outsb
lods
jge
fsubl
dec
jl
in
adc
arpl
mov
or
subb
fwait
or
popl
pop
mov
int
pop
pusha
rclb
arpl
cmc
and
mov
push
aaa
stc
roll
pop
jle
push
push
sahf
cmpsl
aad
out
outsl
mov
add
mov
pop
adc
cmp
lds
cmp
xchg
xor
xchg
dec
bound
mov
rolb
leave
inc
sub
daa
jmp
jo
mov
je
mov
in
out
push
jbe
adc
shrl
mov
pop
fmull
rcrl
rcl
lahf
outsb
fs
dec
jmp
daa
enter
in
outsb
cmp
xor
clc
addl
or
xchg
jns
jae
movsb
divl
add
pop
mov
subl
and
jg
adc
int
es
push
das
idiv
in
add
ljmp
incl
popf
jb
fs
mov
movsl
lret
push
out
inc
and
adc
push
shll
xchg
out
sti
sub
jbe
mov
add
ret
xchg
test
data16
push
mov
cltd
add
pop
je
xchg
loopne
xor
dec
stos
xchg
je
xchg
scas
inc
aaa
orb
cmp
add
mov
in
add
dec
adc
push
clc
sbb
add
push
cmpsl
mov
imul
cltd
ret
loope
outsb
lods
fsubrl
cmc
aaa
jno
inc
cmp
clc
aas
add
fnstsw
orl
negl
mov
ficoms
mov
inc
jb
loope
jl
mov
and
stos
rorb
imul
imul
push
adc
and
mulb
pop
loope
je
pop
mov
mov
int
add
mov
outsb
loopne
jbe,pt
movsb
shl
inc
icebp
scas
dec
dec
jo
clc
addr16
jg
push
pusha
dec
jb
adc
adc
push
aaa
and
mov
divb
stos
pop
je
push
add
pop
cmp
fnstsw
inc
or
inc
add
out
lcall
cmpsb
sbb
add
inc
shrl
cmp
movsl
xchg
dec
dec
push
nop
insb
lret
adc
outsb
dec
nop
call
inc
lcall
xor
repz
or
jno
outsl
xchg
lods
add
xor
dec
xor
jmp
add
pop
dec
dec
movsb
ja
xor
jp
pop
sub
daa
jbe
pop
rolb
or
xchg
or
dec
adc
sti
sbb
inc
mov
movsl
mov
div
pop
dec
imulb
in
mov
or
or
lock
cmpsb
xor
inc
insl
jo
cmp
adc
pop
pop
or
cmc
mov
mov
sbbl
inc
orb
cmp
push
loope
ja
fldenv
lds
push
push
pop
mov
sbb
lret
lods
push
sbb
mov
scas
add
jnp
shlb
lret
cmpsl
fisttpl
orb
and
adc
scas
test
mov
push
into
mov
icebp
xchg
psrld
add
shrl
cs
push
xchg
and
push
mov
mov
js
cmp
xchg
push
dec
arpl
jns
ds
cmpsl
inc
in
or
in
mov
or
sbb
mov
mov
shr
cmp
lock
inc
idivb
iret
sbb
sub
ss
sbb
mov
test
and
pop
lahf
cmovae
inc
repz
xor
das
cmp
into
inc
mov
aam
mov
sahf
stos
into
cmp
pop
lcall
bnd
call
inc
mov
or
hlt
movsb
orb
fldt
sbb
jle
and
cltd
addb
subl
inc
sbb
cmc
sbb
fnsave
icebp
loope
movsb
or
rcll
nop
in
jmp
mov
ret
pop
push
cmp
jmp
mov
or
repz
popaw
mov
pop
sbb
jo
pusha
cmp
or
sub
push
es
int3
sub
test
pop
cld
sbb
xchg
jb
mov
out
xorl
mov
shll
xor
xor
js
mov
inc
call
pop
int
orl
mov
xchg
rcl
jle
mov
push
jecxz
mov
cmc
icebp
cmc
xor
or
rolb
adc
dec
sbb
xchg
out
or
sub
jb
jno
out
lret
push
sub
lock
insl
leave
adc
arpl
lods
clc
ret
mov
xor
push
xchg
sbb
mov
daa
frstor
nop
cs
lods
insb
pop
push
sbbl
lret
data16
inc
mov
dec
bound
add
sub
mov
cmp
in
pop
jno
das
mov
cmp
cmp
cwtl
xor
adc
inc
xchg
cltd
push
int3
push
mov
jle
jns
leave
lods
clc
lods
scas
into
add
pop
dec
sub
adc
adc
push
pop
imulb
inc
pushf
inc
hlt
pop
mov
dec
mov
jns
push
jmp
ljmp
dec
push
and
dec
mov
mov
sbb
xchg
cmpsb
dec
aad
add
pop
int
das
ja
repz
out
cmp
stos
pop
hlt
es
call
or
repnz
in
mov
adc
or
inc
adc
shl
xchg
sbb
sbb
jbe
fwait
cmp
add
inc
pop
mov
xchg
adc
mov
pop
mov
adc
jns
xor
daa
xor
call
xchg
push
sahf
std
loop
adc
aaa
rcrl
outsl
inc
xor
sti
stc
add
outsl
mov
sahf
outsb
push
pop
and
jg
jns
faddl
jbe
aaa
and
xchg
mov
ss
popf
rcrl
int3
inc
mov
loopne
push
jns
fistps
mov
pop
into
add
push
test
dec
mov
mul
test
dec
iret
mov
aad
scas
rorl
movsb
sub
xor
ljmp
std
stos
dec
inc
sub
dec
inc
repz
les
cwtl
insl
repnz
mov
lock
testl
cmpsb
jae
lahf
cmp
fucomip
scas
es
pusha
lods
stos
and
out
sub
mov
xchg
fsubp
xchg
sub
jno
out
sbb
mov
faddp
xor
adc
icebp
push
xchg
hlt
inc
dec
jecxz
cli
call
jnp
rcll
cmc
popf
adc
lret
jmp
sarl
aad
in
pop
out
or
mov
or
popa
out
pop
fwait
es
fbstp
cmp
push
pop
clc
pop
ds
push
scas
shrb
jne
pop
scas
mov
adc
sbb
sub
fs
ljmp
and
out
mov
mov
mov
and
imul
push
xchg
and
push
add
int3
enter
add
mov
jns
popa
test
push
rcrl
xor
mov
fnstenv
adc
ret
das
lea
fists
push
and
inc
mov
cmpsl
jae
fstps
sbb
in
mov
dec
or
insl
push
gs
sbb
xor
lea
stos
notl
insl
popa
jle
sbb
push
mov
and
push
inc
pop
mov
cmp
insl
mov
aaa
outsl
add
dec
lret
adc
dec
push
mov
mov
loopne
sbb
cmc
stc
aaa
mov
push
outsl
fdivp
adc
mov
aad
sbb
mov
jp
mov
ret
popa
jl
mov
sub
push
sub
aam
mov
mov
aas
sti
into
and
dec
es
mov
loopne
idivb
out
andb
sbb
lret
fcompl
xorl
push
int3
pop
mov
and
adc
pop
pop
in
mov
inc
cmc
addl
dec
shrb
sbb
loop
scas
insl
leave
xchg
sub
imull
xchg
cs
gs
jne
out
notl
mov
ret
and
lea
subb
ss
mov
rcll
ret
divl
out
cmp
push
add
sahf
clc
push
test
add
dec
lods
inc
pop
mov
dec
fisubrl
pushf
inc
out
shlb
or
js
fimuls
mov
mov
movsb
mov
or
jo
mov
pop
test
scas
lds
aad
jl
add
push
push
ret
lods
test
xchg
loopne
cwtl
dec
idivb
sub
orl
adc
decl
lea
push
ljmp
out
cmpsb
and
das
outsl
nop
sti
lds
sub
mov
adc
pop
jnp
stos
and
sub
or
scas
out
or
iret
popa
jns
imul
pop
sahf
inc
cmp
pop
pop
iret
call
sbb
mov
call
pop
xor
xchg
inc
dec
or
icebp
mov
dec
lods
rcll
repnz
das
lock
fdivr
out
xor
add
aam
ljmp
xchg
int
rorb
in
jo
jnp
jae
nop
jl
mov
cmp
jge
gs
ret
sbb
adc
adc
lret
sar
add
xor
sar
lds
decb
xchg
xchg
push
lock
dec
and
pop
jmp
test
sub
xchg
pushf
icebp
sub
ss
jo
cmp
outsb
call
pop
ss
jge
cmp
je
es
mov
mov
xchg
mov
movsb
std
mov
outsl
popa
iret
jns
cmovs
call
arpl
cld
hlt
cmc
xor
mov
sbb
mov
rcrl
sbb
inc
cs
mov
pop
repnz
loope,pt
mov
pop
enter
pop
dec
sbbl
mov
into
and
inc
push
shll
andl
lea
cwtl
es
inc
sar
mov
pop
adc
shr
mov
sbb
xor
jns
mov
mov
mov
mov
loope
mov
xlat
push
iret
lret
fwait
mov
cwtl
scas
dec
xchg
out
lea
pop
xchg
pop
push
movsl
dec
mov
inc
mov
xchg
jge
in
aam
sub
std
lahf
add
mov
or
rcl
movsl
sti
cmp
push
dec
jns
int
pushf
mov
or
sbb
das
jb
arpl
mov
lods
and
push
add
outsl
mov
cmpsb
test
jb
mov
pushf
sub
xchg
das
or
or
cld
lcall
xor
jae
movsl
adc
mov
mov
js
frstor
bnd
mov
dec
jp
inc
loopne
sub
mov
mov
stos
aas
pop
pop
nop
lea
scas
in
mov
movsb
cmp
sbbl
scas
out
adc
daa
cmp
dec
dec
ret
ljmp
repz
pop
mov
cli
ficompl
sbb
clc
inc
ret
outsb
lds
dec
mov
gs
jl
lods
adc
push
mov
mov
ljmp
shrb
xor
add
rep
dec
in
mov
outsl
mov
adc
add
andl
jmp
dec
pop
in
sub
push
adc
adc
mov
gs
int
bnd
clc
dec
scas
loopne
sti
loopne
and
rcrb
xchg
cltd
dec
xchg
sbb
add
lahf
ds
les
jb
add
movsb
add
es
mov
mov
addr16
out
inc
test
add
push
sbb
lds
cmp
loop
pop
push
xor
fucomi
xor
dec
lret
rclb
jmp
or
dec
in
sub
pusha
lock
mov
data16
or
fadds
mov
pop
das
cmp
lcall
sbb
dec
xor
mov
jno
jl
pop
std
mov
sbb
pop
xchg
and
fwait
mov
cmc
gs
sbb
fidivrs
inc
and
ja
push
jne
mov
sbb
add
mov
adc
stc
lret
pop
addr16
orl
cmp
outsb
test
iret
mul
push
dec
jne
push
mov
lea
lret
cmp
jmp
push
push
or
mov
into
out
add
mov
or
mov
nop
mov
iret
inc
test
pop
pop
jb
in
rolb
or
mov
xchg
je
add
fsts
or
xlat
adc
bnd
dec
and
jb
and
test
or
xor
lahf
adc
popf
stc
dec
rclb
sub
rol
xchg
adc
lret
pop
jmp
or
repz
inc
or
cmc
sub
stc
pushf
into
jmp
mov
iret
sbb
lods
out
js
sti
loopne
push
xchg
add
xor
loope
jnp
into
mov
mov
xchg
aam
fstps
aaa
and
xor
fistpll
xchg
sbb
loopne
popa
mov
xchg
std
sbb
lods
scas
push
nop
inc
mov
icebp
add
jae
leave
addl
outsb
ja
jne
xchg
cli
inc
pop
push
cmp
test
mov
imul
pop
movsb
les
in
cwtl
mov
leave
pop
push
sub
mov
iret
ret
hlt
loop
dec
ret
sub
stc
int
sbb
dec
push
mov
jnp
jne
mov
xlat
push
inc
push
mov
add
shl
jne
sbb
ja
adc
sub
inc
jo
mov
movsb
int3
inc
leave
adc
rcr
fmulp
push
lock
mov
sub
push
arpl
andl
mov
sarb
stc
leave
lahf
jb
sbb
repnz
int
ss
cmc
icebp
lds
addr16
popf
aad
push
xchg
mov
rcrb
mov
idivb
out
ss
jmp
cmpsl
stos
int
sub
dec
mov
jmp
mov
mov
movsl
loope
stc
dec
or
mov
rolb
data16
mov
mov
xchg
into
imul
cmpsb
sbb
rol
mov
mov
fsubrp
ljmp
jnp
divl
sbb
xor
les
sub
pop
push
cmpsl
fsubrl
dec
stos
sub
mov
mov
xchg
xchg
clc
mov
aam
addl
lds
sub
push
es
sub
pushf
sub
andl
cltd
xor
mov
push
pop
inc
xchg
addr16
mov
xchg
push
fwait
ror
stos
or
pop
sub
cld
mov
and
pushf
movsl
jg
int3
lahf
dec
sbb
hlt
mov
pop
popl
sarl
imul
in
lcall
add
add
inc
fdivp
bound
or
clc
aad
push
shlb
hlt
enter
call
scas
fidivl
inc
xchg
shll
mov
mov
xchg
clc
jne
fisubrl
fsts
push
dec
jecxz
cmp
cld
repnz
stos
sub
call
sbb
imul
repz
aad
mov
bound
mov
dec
cmpsb
ret
dec
xor
fcmovb
jmp
lahf
dec
inc
loopne
mov
and
or
add
rorl
inc
mov
iret
into
cs
gs
adc
cmp
dec
xlat
out
jae
mov
lock
hlt
outsl
pop
ret
out
repz
xor
jle
test
rcrb
cmp
loopne
mov
mov
cmpsl
sbb
rol
jp
data16
dec
repnz
sbb
dec
popa
push
nop
push
mov
je
add
cs
inc
push
fidivs
cmp
notl
stos
xor
fcmovnu
in
jmp
adc
jnp
imul
adc
mov
aaa
int3
std
push
mov
movsl
rorl
xchg
adc
dec
or
std
lret
pop
sub
in
ret
adc
das
iret
pushl
dec
shrb
mov
inc
ss
pop
stos
push
icebp
pop
inc
inc
lds
mov
in
sar
stos
mov
adcb
add
jb
fldt
cmpsl
cli
add
loope
popa
bound
ljmp
mov
sahf
stc
aad
andb
mov
lods
ret
pop
or
mov
add
xor
aam
mov
rcll
pop
lods
test
inc
hlt
and
sbb
popf
push
pop
xchg
add
stos
push
jle
pop
sub
jo
sbb
stc
jg
ret
sub
xchg
stc
jne
out
aaa
xor
jmp
mov
sbb
sub
icebp
mov
jns
mov
xchg
pop
or
mov
ljmp
repz
or
push
decl
pop
fstl
les
push
aam
jp
es
sub
jno
hlt
jmp
cmpps
jnp
mov
fwait
rcrl
dec
pop
gs
push
xchg
dec
mov
ror
in
outsb
push
dec
cmp
lds
mov
jl
push
stos
xchg
bound
mov
pop
arpl
iret
inc
xor
sub
jecxz
cmpb
adc
aam
scas
scas
out
adc
ljmp
syscall
sbb
inc
sub
stos
jb
adc
sub
ds
out
sarb
sbb
xchg
xor
mov
jno
test
inc
out
pop
cld
pop
mov
sbb
and
mov
sub
or
loopne
cmp
jge
ja
gs
fs
pop
rol
cltd
cltd
xor
mov
inc
lcall
pushf
stc
inc
idivb
test
adc
jp
fcomps
shl
in
mov
enter
orb
pop
inc
xchg
jne
fistl
call
fs
lahf
or
in
lods
lds
mov
test
ret
insb
outsb
sub
sub
xlat
test
adc
popa
jno
add
mov
or
pop
out
fucomi
and
sti
cs
push
and
mov
and
rcrb
popa
adc
and
fistpll
mov
clc
cli
add
loope
cmpsb
aam
in
dec
es
leave
sbbl
aas
pop
mov
aaa
loope
imul
push
mov
outsl
xchg
lods
jo
xor
xor
sbb
in
or
les
cmpsb
push
orb
xor
dec
ss
movsl
push
je
stc
jge
repnz
cmp
fisubs
sti
cmp
pop
andl
or
data16
jns
xor
js
sbbl
scas
cmp
iret
inc
fcmovu
scas
loope
mov
sub
mov
aaa
mov
jle
aad
leave
outsl
stos
mov
push
add
notb
xor
cld
xor
or
mov
outsb
js
sub
idivl
int
dec
push
sbb
jge
mov
out
stos
out
mov
sbb
inc
sbb
aam
bnd
sbbb
or
xor
rorb
lcall
repz
cld
dec
or
inc
in
jl
loopne
xor
inc
mov
xlat
or
lods
mov
push
cmc
xor
add
sub
dec
adc
push
mov
push
pushf
pop
shl
ret
push
lret
xor
adc
xchg
mov
lods
xchg
imull
jb
inc
imul
or
and
mov
movhps
add
lret
mov
movsl
jbe
aas
rorb
and
and
cmp
movsl
pop
fidivs
out
pop
push
cltd
cwtl
xor
enter
and
out
sbb
and
and
mov
lea
testb
in
mov
shlb
icebp
flds
jl
scas
outsl
sbb
or
mov
bound
dec
incl
repnz
or
add
js
loop
ss
test
sub
daa
aaa
inc
jmp
adc
aad
fcmove
test
dec
out
fldenv
mov
xchg
bound
enter
cmpsb
or
jmp
jmp
loop
fildll
xchg
xchg
mov
inc
icebp
out
adc
aas
fdivr
dec
imul
leave
divl
mov
pop
cmp
loopne
ja
mov
data16
shr
test
and
roll
mov
push
xchg
cmc
aad
dec
inc
add
xchg
mov
or
inc
scas
jns
cmc
mov
push
test
add
and
js
test
movsb
out
xchg
sub
cmp
insl
bound
mov
dec
sub
and
inc
sub
insb
xor
inc
out
mov
or
or
xor
pop
in
cmpsl
fisubrs
jmp
popa
xchg
int3
mov
jo
inc
scas
adcl
dec
inc
sbb
movsl
sbb
pop
cld
outsb
and
sub
jns
ljmp
out
loope
pusha
push
fs
gs
jb
pushf
rolb
xchg
dec
add
fildll
mov
insb
mov
cli
leave
sti
and
xchg
cwtl
rol
test
mov
sub
add
xlat
loope
gs
mov
imul
jnp
fwait
testl
push
aas
les
sbb
pop
xor
push
xchg
repnz
xchg
jg
push
jae
or
ret
in
movsl
daa
nop
hlt
mov
mov
pop
cmp
xor
add
aam
mov
rcr
call
call
xor
sub
popf
mov
jae
pushf
mov
test
cwtl
xchg
dec
test
push
jp
pop
cs
mov
sbb
rcll
fwait
dec
popf
mov
fcompl
sbb
dec
fcomi
cs
add
andb
mov
mov
pop
mov
int
mov
jno
push
sub
out
in
ljmp
jne
and
rcrl
addr16
lods
je
inc
dec
xor
das
pop
icebp
jecxz
imul
and
push
sbb
xchg
int3
dec
dec
xor
stos
pop
xlat
es
jns
insl
pavgb
cwtl
in
fs
ja
adc
nop
xchg
scas
test
fidivrs
add
xchg
nop
shrl
or
push
out
int3
dec
rorl
imul
cmpsl
data16
pusha
add
pushf
dec
inc
pop
addl
and
and
jbe
jns
and
inc
xor
ret
subb
adc
add
jmp
nop
les
imul
inc
mov
scas
cli
data16
aad
repnz
pushf
adc
mov
es
inc
cmc
push
pop
sbb
adc
mov
or
lds
mov
or
mov
loope
jg
push
fs
loopne
jmp
popa
xor
xchg
mov
data16
cwtl
aad
pop
sub
jne
clc
call
cmpsl
sub
dec
test
mov
stos
mov
or
xor
adc
xchg
rorb
repnz
mov
shlb
push
ljmp
sbb
inc
imul
adc
aad
aas
ret
jns
push
sahf
sbb
gs
push
fnstcw
ret
fmuls
jb
mov
shrb
insl
pusha
arpl
adc
or
xor
sbb
mov
cli
fnstenv
mov
jmp
push
loope
hlt
pop
push
pushf
xorl
movsl
lds
or
addr16
pavgw
shlb
push
pusha
push
fdivrs
mov
jge
mov
adc
pop
jnp
daa
xor
cld
insb
jo
mov
push
leave
adc
jbe
shrl
cmpsb
adc
pop
sarl
nop
mov
hlt
cmp
mov
ret
inc
push
xor
pop
mov
mov
mov
push
stos
xchg
rcll
jno
push
sub
incb
xchg
mov
mov
movsl
in
push
addr16
enter
jae
popf
je
pop
pop
stc
xor
cmpsl
call
shll
xor
push
and
mov
imul
mov
rclb
mov
fdivrs
scas
aad
orb
sbb
pop
cmp
xchg
insl
in
inc
xchg
sarl
sbb
mov
mov
sbb
lahf
sub
xchg
sbb
mov
jmp
pusha
push
xor
lea
mov
repz
sbb
loopne
js
and
xchg
lds
pop
sarb
test
sbb
shll
pop
call
cmp
dec
jle
push
inc
push
out
mov
movsl
cmp
nop
adc
push
push
xchg
subl
sub
push
inc
rcr
sti
shrb
and
jle
and
push
pop
cmpsl
mov
jae
out
sub
push
int
mov
daa
mov
push
mov
push
jl
jo
ret
cmpsb
sarb
lahf
mov
sub
insl
ljmp
sub
xchg
cld
mov
shrb
hlt
push
pop
ret
dec
adc
int
xlat
xchg
mov
subb
push
es
gs
repz
pop
out
jecxz
sbb
push
pop
mov
cmp
add
dec
dec
or
inc
out
inc
ja
dec
in
cmpl
push
scas
lock
mov
arpl
xchg
mov
push
push
inc
inc
xchg
adc
scas
sbb
add
mov
dec
sbb
movsb
mov
lahf
test
mov
mov
jbe
ljmp
jne
xor
mov
rcr
cltd
orl
mov
cmp
aad
icebp
mov
inc
jb
sub
loope
dec
repnz
pop
mov
fsubrl
test
jbe
ss
arpl
jp
sub
loop
or
loop
test
std
outsl
pop
mov
es
stos
mov
jl
lea
dec
mov
pop
scas
lret
cmp
testb
rol
sub
loop
jge
cltd
and
xor
add
sahf
push
add
mov
aad
and
rcrb
mov
xor
jecxz
adc
rorb
and
aad
xor
pop
arpl
dec
xor
jbe
mov
ret
repnz
cmpsl
pop
lcall
inc
jbe
dec
aas
shl
movsb
dec
or
ds
xor
popa
mov
and
sahf
imul
sarl
push
aaa
inc
dec
lahf
pop
mov
mov
fcoml
ds
imul
pop
cltd
mov
mov
lret
add
gs
xlat
shll
repnz
jbe
inc
pop
lea
and
xchg
das
data16
inc
mov
mov
stos
test
je
xor
jge
out
xor
jbe,pt
bound
xorb
sarb
mov
xchg
test
inc
jne
push
or
dec
lret
cmc
inc
mov
das
pop
sub
mov
repz
in
xor
pushf
iret
jg
sbb
push
add
pop
imul
mov
mov
and
in
mov
in
lret
inc
fprem1
gs
jae
ljmp
xor
pop
mov
pop
lock
lahf
stos
push
clc
mov
les
sbb
and
adc
adc
xchg
mov
shl
add
mov
mov
dec
popf
push
adc
or
mov
call
cwtl
dec
push
adc
sub
jne
scas
out
pop
push
aad
jle
lds
in
cs
loop
call
fistps
inc
jb
inc
mov
rcrb
loopne
sub
xor
cmp
fsubs
jp
xchg
push
aam
lcall
loope
jnp
dec
dec
jg
xchg
shlb
cmc
jne
cmp
out
pushf
xchg
mov
mov
mov
icebp
fidivrs
xor
push
pop
pop
sub
xor
cmp
adc
stc
call
gs
int3
out
pop
ficomps
fadds
mov
jl
insl
push
loopne
mov
test
cltd
and
adc
enter
movsl
jno
rcrl
aam
adc
mov
jb
icebp
arpl
cmc
pop
sub
pop
jb,pt
dec
dec
mov
mov
repnz
push
cltd
fiaddl
xor
jnp
shll
and
dec
mov
push
cmpsb
gs
cs
pop
lcall
stos
cwtl
aaa
push
out
stc
iret
push
dec
lahf
je
cmp
xchg
push
mov
xchg
scas
sub
jbe
xchg
fcoml
sub
add
xchg
cs
and
test
push
stc
xlat
rcrb
mov
mov
mov
loope
mov
fbld
dec
cmp
push
loopne
ljmp
adcb
cmp
out
adcb
add
mov
lods
rorb
out
mov
lret
xor
lahf
int
add
scas
rcll
mov
inc
sbb
ret
shrl
mov
jp
push
lcall
fisubrs
xor
lret
int3
out
mov
movl
lret
jmp
loop
xchg
lds
nop
sbb
andb
mov
cmpsl
or
scas
add
neg
fidivs
cli
inc
popf
xchg
daa
mov
push
xlat
xchg
icebp
fstpt
dec
lcall
fwait
jmp
fldt
test
mov
dec
mov
mov
jno
nop
fiaddl
jno
dec
cmp
push
mov
jmp
rcrl
cwtl
jno
lahf
xchg
mov
pop
or
fwait
sbb
mov
loopne
cmp
shl
pop
rorl
jns
adc
les
inc
lods
jmp
fcmove
roll
cmpsb
dec
adc
shl
jo
lods
jge
mulb
inc
and
mov
dec
test
xchg
pop
js
cwtl
xor
sub
mov
loop
jge
fcoml
cld
movsb
insl
jo
pop
std
mov
mov
dec
pop
popl
rcl
mov
rdtsc
das
pop
dec
fisubrs
mov
mov
loop
sbb
outsl
xor
ss
mov
lcall
sbb
mov
cmp
cmpsl
test
and
dec
xrelease
xchg
cmp
sar
pushf
pushf
sub
out
pop
jne
pop
xor
cmp
pop
add
addr16
lahf
fmuls
jp
inc
push
sub
mov
jl
jecxz
enter
jecxz
or
rcrl
xchg
push
fstpl
jno
mov
nop
hlt
enter
aad
lcall
repnz
jg
and
mov
stos
mov
jge
and
mov
sbb
pop
std
cld
popa
aas
stc
or
jmp
stos
pop
sbb
dec
js
fldt
jns
orb
lods
dec
sbb
mov
cmp
dec
jmp
mov
leave
push
mov
jno
mov
dec
rcll
inc
mov
in
mov
push
mov
cmp
lret
mov
push
xchg
es
into
dec
xor
out
aas
inc
popa
jge
rcrb
orl
xor
mov
addb
addr16
in
sub
in
xchg
sbb
test
cmpsl
cmp
adc
divb
xlat
xor
sub
inc
stc
iret
add
enter
pop
mov
jg
push
push
dec
out
mov
xor
js
loope
pushf
stc
cmp
sbb
lret
gs
inc
adc
pop
dec
lods
clc
into
mov
dec
push
mov
xchg
pop
mov
daa
cmp
repz
inc
mov
scas
inc
in
push
cmpl
sti
scas
pop
xor
cmc
ljmp
daa
data16
push
push
sbb
fs
mov
jbe
ret
push
pop
xor
pop
or
arpl
mov
jl
sahf
fimull
dec
adc
mov
mov
fldl
sub
outsb
outsl
mov
shrl
sub
test
xor
pushf
mov
repnz
add
insb
in
cltd
idiv
push
int
xchg
or
je
test
add
pop
xor
aam
mov
jmp
adc
xchg
sbb
adc
adc
add
sahf
fs
add
xchg
mov
lret
shll
inc
jmp
ja
jmp
add
mov
fmuls
sti
mov
jnp
lea
fisubrs
dec
pop
xchg
xor
mov
sub
jnp
pop
adcb
stos
cmpsl
push
jg
stc
cmp
jno
mov
arpl
jo
add
sti
ret
js
pop
sbb
enter
cmp
mov
lea
xchg
dec
push
cltd
stc
mov
lods
cmp
lahf
cmp
shrb
adc
mov
ret
mov
adc
js
and
lods
addb
pop
jg
xchg
cmpsl
inc
jne
dec
call
push
inc
lahf
cmp
mov
sub
ret
sub
sub
mov
xor
negb
xor
mov
jmp
repnz
mov
aam
pop
xor
jnp
push
rolb
test
mov
sbb
mov
movsl
mov
sbb
stos
mov
push
push
aaa
inc
rep
test
pop
aas
ja
ret
and
jl
inc
pusha
mov
and
repnz
and
mov
xor
sahf
lret
int
sbb
add
xchg
adc
adc
mov
and
push
int
push
sti
pop
pop
xchg
arpl
mov
stc
push
xor
stos
scas
cmpsb
add
js
dec
mov
ja
inc
cmp
cmpsb
es
xor
shrl
bound
ficoml
mov
test
loopne
xor
pop
in
push
leave
ja
push
cmp
xchg
mov
inc
mov
sub
mov
pop
adc
and
roll
popf
mov
inc
into
mov
mov
xor
mov
das
dec
cli
data16
jb
pop
pop
shrb
xor
push
inc
mov
sbb
pop
ret
cmp
out
imul
sub
rcrb
add
jl
in
dec
push
pop
stos
xchg
loope
push
or
mov
inc
ret
shll
pop
jl
mov
adc
stos
jnp
insb
mov
pop
mov
fsubrl
mov
lret
inc
daa
add
cmp
pop
xor
movsl
aam
lea
fs
xchg
dec
xor
incb
cmp
out
roll
pop
jno
mov
jecxz
pop
prefetch
push
xor
add
test
test
or
or
lds
int3
dec
add
adc
addr16
inc
cmpsb
aam
std
fdivs
push
add
fs
int
clc
mov
push
xor
inc
lock
push
or
or
push
add
pop
lods
sbb
dec
jmp
rcr
cmp
xchg
lods
fmulp
push
cs
push
push
push
push
imul
ret
cs
and
push
outsb
or
jle
xchg
aaa
xchg
out
shrl
adc
ja
pop
pop
sbb
sbb
movsl
data16
daa
outsl
push
xchg
xlat
sbb
and
and
mov
outsl
rorb
sub
inc
stos
lahf
jne
pop
mov
xchg
xlat
negl
mov
pop
xorb
lcall
and
push
nop
inc
lret
push
in
into
lea
mov
jp
jne
insl
xchg
xor
cmpsb
push
xchg
das
cmp
cli
jo
lds
mov
add
add
mov
sbb
shlb
xlat
cmp
dec
push
sbb
in
scas
frstor
cli
stos
cmp
jecxz
bound
sub
jmp
shl
pop
jmp
inc
mov
movsb
inc
pop
pop
daa
cmc
jne
mov
adc
ja
jae
mov
and
movsb
lahf
lcall
iret
inc
xchg
add
and
mov
lcall
lret
lods
cmc
sti
daa
cmpsb
popf
xchg
hlt
jb
imul
shrb
push
xor
xchg
leave
stos
ds
addr16
cld
fcom
or
xor
ret
and
movb
and
mov
xor
jno
sub
pushf
jae
jp
mov
or
and
inc
sub
insl
mov
mov
fcmovne
push
adc
mov
fwait
out
and
das
push
pop
and
or
lahf
mov
cmpsb
addr16
dec
pop
mov
divl
adc
mov
lret
mov
movsl
pop
xor
pop
test
dec
enter
hlt
mov
call
cmp
cmp
lahf
xlat
fidivs
mov
pop
mov
pushf
xchg
data16
cld
push
scas
out
xor
clc
hlt
inc
mov
sbb
xchg
insl
in
lcall
sbb
mov
xor
push
xor
leave
mov
fisubl
and
cmp
adc
mov
ret
movsb
cmp
rorl
fmull
sub
adc
mov
clc
dec
xchg
fwait
lret
sbb
out
mov
sub
jo
in
lret
push
jge
inc
repnz
fwait
orb
push
rolb
nop
stc
sbb
or
xchg
mov
cmp
das
push
mov
inc
shr
xor
sbb
adc
dec
divl
pop
cmp
xchg
icebp
pop
lds
inc
daa
outsl
aas
lcall
sub
cs
pop
xchg
cmp
aam
xlat
fists
packssdw
filds
mov
mov
dec
and
push
cltd
and
jb
repnz
sti
loope
inc
cli
subb
in
push
push
jo
adc
sub
repz
cltd
jno
sbb
pop
call
test
fnstenv
mov
add
fcompl
push
dec
xor
iret
jge
xchg
and
push
add
xor
aas
mov
cmpsl
sub
push
movsb
das
in
loope
sub
rclb
adc
mul
adc
dec
jecxz
xor
das
mov
pop
cmp
add
call
jns
imul
pusha
das
mov
jnp
jle
js
jno
push
in
jbe
pushf
inc
loop
adc
dec
pop
iret
out
dec
mov
jmp
daa
sti
les
loop
jecxz
dec
mov
mov
push
insl
out
out
loop
push
or
add
push
lods
cmpsb
inc
cmc
out
add
sub
inc
jge
inc
lock
inc
inc
lods
sarb
mov
push
pop
out
mov
fwait
xlat
mov
test
cmp
ret
mov
shrb
fmuls
cmpsb
pop
cmpsl
adc
xor
mov
jecxz
lods
pop
loopne
mov
or
mov
add
jae
loop
in
cwtl
aas
aaa
decl
pop
aad
adc
popf
into
dec
lret
clc
stos
in
mov
or
sbb
push
aaa
sbb
pop
push
insl
repz
fdivl
or
adc
xchg
adc
jmp
jnp
in
popa
pop
std
cmp
mov
pop
test
std
out
rcrb
lret
pop
imul
mov
out
jl
cli
jge
lods
mov
movsl
lahf
mov
pop
cmpsl
pop
mov
outsl
outsl
dec
fiaddl
mov
adc
sarl
icebp
loop
mov
in
sub
sbb
bswap
rclb
jmp
fcomps
fnstsw
cli
pop
jecxz
mov
scas
sbb
daa
sub
push
movsl
mov
rol
xchg
into
jno
lds
roll
scas
or
fwait
cwtl
je
mov
lock
scas
or
mov
rol
push
lock
fisubrs
addb
pop
cmp
jbe
fsub
pop
pop
jae
sub
vcvtpd2dq
idivl
cwtl
push
inc
mov
lock
jne
mov
daa
out
ret
ja
or
push
inc
popa
pusha
inc
mov
out
sbb
adc
lods
mov
aas
outsb
pop
int
filds
mov
dec
jp
out
mov
adc
movsl
sub
and
or
jmp
pop
fisubrl
push
add
inc
sbb
xor
rol
pop
rcrl
add
movsl
test
pop
pop
dec
add
ds
cmp
push
or
adc
inc
mov
adc
aaa
add
and
mov
add
sbb
int3
push
mov
scas
or
loop
insb
lods
mov
push
fcomps
mov
dec
stc
xchg
xchg
adc
inc
lea
popa
pusha
sahf
addr16
sub
sub
push
pop
ljmp
xchg
dec
sbb
stc
adc
mov
addr16
jno
scas
rolb
cmp
bound
adc
lret
or
das
cmp
xchg
mov
scas
xchg
sub
jg
jae
xor
inc
aam
nop
test
lret
xchg
and
jg
mov
dec
pop
data16
push
cltd
jp
mov
inc
nop
ss
insl
or
xchg
fwait
inc
jae
push
test
fnstenv
fcmovnu
in
ret
mov
xor
push
adc
sarb
cmp
frstor
fsts
sub
daa
sbb
fdiv
in
sbb
in
fisubrs
mov
clc
sti
jmp
jge
sbb
mov
jae
enter
fcmovu
lods
mov
cmpsb
mov
push
inc
ja
dec
jecxz
mov
mov
inc
xchg
pop
and
pop
fnstenv
mov
insl
sbb
pushf
int3
fsubrs
xorb
jle
out
pop
popa
mov
dec
aam
xor
imul
movsl
xchg
sub
leave
mov
jl
ret
in
js
or
fstps
xchg
roll
xchg
mov
xchg
into
add
pop
push
xchg
dec
test
xor
pusha
ljmp
adc
cltd
mov
es
and
push
arpl
in
xor
rcrl
dec
mov
and
cld
adc
ficoms
insl
xchg
mov
mov
mov
xor
inc
je
inc
mov
loope
gs
and
orl
scas
sbb
push
push
jnp
push
pinsrw
add
mov
out
inc
inc
lods
bound
or
loopne
pop
sub
pusha
push
loopne
aas
sbb
ljmp
sbbl
rol
call
fwait
xor
lods
push
icebp
sub
sbb
push
xchg
xor
cmp
push
cmpsl
ret
outsl
jns
imul
push
add
out
mov
pushf
jns
dec
push
test
outsb
loopne
pop
inc
or
push
jp
enter
jl
or
pop
cmpsl
cmp
cmp
cmpsl
aas
jbe
les
dec
inc
dec
negl
sti
pushf
js
jne
fdivrs
faddl
push
or
push
cltd
cs
mov
xor
sti
shrd
push
into
pusha
insl
sar
loopne
orb
xor
push
cwtl
mov
push
xor
sub
xchg
cli
in
movsl
sahf
mov
adc
in
mov
pop
adc
cmc
mov
lcall
pushf
adc
es
mov
inc
dec
mov
xchg
daa
sti
add
in
sbb
ficoms
mov
ss
adc
jp
sub
aaa
jne
pop
ds
cmp
aas
popf
pop
test
mov
fistps
int3
hlt
push
jo
mov
lret
fs
jecxz
ret
cmp
lds
daa
movsl
push
and
xchg
repz
xor
sub
add
jns
in
sbb
jne
xor
scas
test
negb
scas
xchg
xchg
in
aam
lret
shll
inc
or
andl
lock
sbb
imul
jb
aad
into
lret
pop
imul
jle
aad
js
out
pop
arpl
push
fbstp
xchg
xchg
cmpsl
xor
sub
in
cli
sub
fmul
xor
sarl
mov
jecxz
outsb
sqrtps
int
xchg
jl
xor
pop
lret
sub
stc
es
sbb
stc
xor
loop
push
data16
pop
pop
maxps
inc
push
pushf
call
adc
shl
stos
dec
sbb
jp
ds
into
or
cmpsb
sbb
ret
sar
and
and
mov
push
jge
push
das
jg
mov
mov
inc
rcll
sahf
dec
fs
dec
sti
mov
addr16
push
pop
out
pop
add
mov
out
push
addr16
or
clc
loop
inc
inc
xchg
jbe
mov
inc
and
cmpsl
pop
pop
inc
jno,pt
out
mov
sahf
pop
cltd
std
in
es
clc
jns
mov
movsb
adc
jmp
sub
xchg
insl
jl
lock
in
dec
sub
cmpsb
mov
movsb
and
push
mov
push
jle
cld
test
xchg
xchg
je
push
loopne
dec
jbe
std
mov
mov
pop
je
rcr
xchg
add
js
pop
ljmp
xchg
add
sti
das
mov
jne
xor
xor
add
mov
test
mov
dec
je
loopne
push
push
outsl
js
xchg
fs
and
inc
rcrb
sbb
push
jnp
cmp
xor
or
mov
cltd
adcb
sub
jge
sub
mov
enter
mov
in
xor
or
fildl
roll
insl
ljmp
pop
ljmp
stos
aas
insb
std
loopne
xchg
or
js
sar
insl
mov
xchg
mov
push
mov
sub
sbb
or
mov
ret
outsb
mov
outsl
scas
xor
cs
or
pop
arpl
jo
xor
push
rcrl
jge
sub
and
push
mov
lret
push
or
sub
and
sahf
das
in
pop
insb
push
mov
jle
xchg
daa
call
pop
adc
cltd
shll
int3
mov
shrl
sbb
jb
mov
fisttpl
and
mov
xchg
popf
xchg
dec
jg
mov
daa
fsubp
xor
lcall
jb
stos
iret
and
fdivs
inc
adc
das
mov
frstor
icebp
jnp
andb
ljmp
and
and
notb
adc
shrb
xchg
inc
inc
scas
icebp
sbb
int
insl
push
negb
push
bound
rorb
cmpsb
push
pusha
push
dec
mov
sar
aad
pop
gs
or
sub
inc
arpl
mov
sbb
ljmp
pop
addr16
lahf
into
shrl
insb
xchg
mov
test
add
push
jecxz
lock
bound
push
gs
movsb
rol
jae
icebp
mov
rclb
mov
popl
clc
adc
outsl
push
and
dec
stos
inc
lret
dec
xchg
cmp
aam
shlb
mov
mov
dec
imul
mov
out
sar
rcr
adc
lcall
jbe
test
pop
push
add
add
jae
imul
popf
movsb
mov
pop
xchg
das
inc
ret
push
xstore-rng
cmpsl
test
gs
sub
dec
lcall
xchg
lret
sahf
xor
add
outsb
pop
sub
std
sub
test
sbbl
xchg
daa
mov
push
and
push
adc
xchg
shrl
pop
call
repnz
pushf
or
cmp
jmp
dec
adc
ss
orb
sbb
jne
sub
repz
sub
aam
or
cmpsl
xor
mov
jbe
jns
insb
jne
mov
gs
inc
push
mov
push
lods
lret
lods
jp
jmp
fdiv
pop
mov
imulb
ds
inc
lds
jmp
cld
mov
mov
push
xchg
imul
andl
test
mov
xor
in
sub
or
outsb
push
test
bound
iret
notl
xchg
pop
outsb
cmp
out
xor
sbb
inc
stos
in
flds
push
inc
mov
or
xchg
loop
sahf
mov
dec
adc
fmull
xor
cmp
jg
mov
ret
xchg
adc
mov
in
movsb
and
out
flds
push
stos
lret
dec
ja
inc
inc
adc
push
inc
mov
xor
ret
xchg
out
dec
idiv
lea
lcall
inc
mov
mov
mov
xchg
imul
repz
mov
sbbb
sbb
sub
jb
push
out
stos
dec
lods
inc
js
enter
pusha
mov
cmp
clc
orl
enter
xchg
cmp
mov
pop
inc
mov
faddl
clc
inc
mov
das
dec
mov
cmp
loop
add
gs
xchg
xchg
push
loopne
fadds
push
aaa
jecxz
jo
and
aas
lcall
sti
mov
mov
mov
cs
mov
or
hlt
lods
cwtl
mov
inc
or
xchg
out
inc
ja
fsts
lcall
mov
dec
popf
cltd
sub
stos
dec
ror
mov
dec
push
insb
pusha
jmp
pop
cmp
orb
mov
outsb
and
or
mov
jmp
imul
mov
xchg
jno
or
lea
adc
fdiv
fildl
pusha
imul
loope
cltd
dec
xchg
xchg
dec
mov
outsl
aad
adc
inc
testl
lds
adc
stos
mov
cmp
aas
cltd
or
inc
push
and
jmp
divl
popa
ja
and
jmp
cmpsb
jle
xchg
sahf
lret
inc
mov
push
xchg
lcall
push
test
mov
fmul
mov
push
mov
insl
mov
aaa
icebp
sbb
xchg
pushf
jnp
cltd
or
add
push
mov
stc
jb
or
mov
pop
mov
fs
pusha
and
jg
or
ret
xchg
inc
shll
jp
out
push
push
push
fwait
enter
sbb
mov
mov
xor
scas
jne
stc
mov
ret
nop
pop
or
insl
scas
and
bound
andb
ljmp
jl
repz
jbe
cli
or
lret
stos
pop
addr16
stc
xchg
cmp
movsl
pop
mov
pop
pusha
int
push
xchg
xor
xlat
mov
mov
negl
adc
test
jae
cld
repnz
xor
call
sub
enter
mov
cs
xchg
lods
xor
inc
jl
push
xor
out
adc
sarb
negl
addr16
lea
movl
leave
in
lret
repz
ret
sbb
xor
stos
fdivrs
test
sbb
std
popa
pop
jg
pop
insl
add
into
sbb
push
inc
sar
or
testl
mov
jns
sbbb
test
mov
push
das
mov
mov
jl
dec
or
ljmp
push
inc
adc
in
loopne
fdivs
negl
repz
add
pop
and
dec
outsl
rol
lods
jecxz
jne
mov
sbb
jb
jns
popa
mov
xor
jno
iret
lret
scas
das
jns
push
mov
push
adc
mov
mov
jge
and
fcmove
pusha
mov
or
sub
sbb
adc
xor
cs
addr16
cmp
xorb
push
push
imul
out
push
xchg
lea
imul
pop
push
add
in
sub
mov
mov
pushf
add
lods
out
push
pop
rorl
clc
jo
sub
jb
aas
mov
xchg
adc
xchg
int3
int3
lret
mov
xor
imul
test
fldcw
mov
push
and
mov
imulb
test
movhps
mov
jg
sbb
xchg
inc
and
lods
cmp
add
mov
jae
cld
dec
inc
insl
push
mov
add
sub
mov
pushf
jae
xor
lock
imul
sti
and
fcoms
jg
mov
cmp
out
jge
fldenv
loop
rorl
aas
ja
pop
mov
mov
cmp
jmp
xor
cltd
pop
insl
mov
inc
push
sbb
sahf
test
aad
jo
ja
sbb
fldt
popf
imul
ficoms
sub
lahf
xchg
adc
hlt
rcl
cmp
add
cld
mov
les
xchg
mov
adc
push
pushf
hlt
xchg
stc
adc
xchg
ljmp
leave
add
in
jae
mov
inc
jmp
xor
ret
pop
fs
imul
pop
ja
repnz
and
mov
stc
clc
pop
xor
xchg
mov
inc
dec
scas
sarl
mov
adc
cltd
les
pop
movl
mov
sti
and
js
jnp
adc
xor
and
stos
mov
push
xor
mov
xchg
scas
scas
frstpm(287
push
aas
leave
arpl
or
int3
pop
mov
jge
sbb
out
jg
out
lret
mov
adc
fcompl
mov
cmpsl
push
faddp
aam
sub
cli
das
int
adc
pushf
adc
sbb
and
ljmp
popf
fwait
cltd
xchg
data16
and
mov
std
int3
and
fnstsw
into
loope
mov
mov
jl
mul
cli
cmpsl
stos
call
gs
or
and
lock
test
inc
dec
das
push
add
testl
not
or
cli
loop
cmp
ljmp
push
js
cmc
push
dec
lea
sub
jl
out
into
add
xchg
test
dec
sbb
push
jmp
xor
mov
subl
push
jbe
ljmp
xchg
stos
adc
loope
xchg
outsl
aad
add
and
ret
inc
and
xor
push
int3
xchg
fs
dec
mov
jnp
mov
push
cs
ja
repnz
or
xchg
push
scas
in
pushf
mov
mov
decb
adc
movsl
mov
js
sbb
movsl
in
push
mov
inc
sbb
push
nop
test
out
nop
jbe
cmp
inc
or
cmp
jbe
dec
and
and
mov
imul
icebp
mov
insb
add
popa
mov
sub
shrl
jae
inc
jbe
pop
or
jmp
xor
mov
fadd
sbb
push
inc
push
stc
cmpsb
add
sub
data16
sub
inc
aaa
cmpsl
mov
movsb
cmp
inc
ret
sub
mov
movsb
out
pop
adc
mov
cmp
lea
fildll
sub
cs
xchg
mov
jne
add
call
sarl
mov
sub
dec
out
push
jbe
cmp
push
or
popa
in
mov
cld
or
lock
pusha
mov
icebp
add
pop
ljmp
sub
or
test
flds
hlt
mov
mov
mov
xor
jmp
ds
sar
outsl
add
jo
and
in
lock
stc
jg
push
fildll
arpl
or
jecxz
and
aas
xor
fstl
or
and
clc
mov
popa
ret
cld
test
mov
fistps
icebp
orl
loop
or
xchg
mov
pop
cmp
and
pop
and
dec
int3
enter
outsb
inc
fisubl
adc
mov
xorb
adc
jl
dec
or
add
xlat
jmp
jo
or
out
stos
fadd
lea
jp
in
inc
lcall
pop
imul
push
imul
call
movsb
dec
add
out
cld
push
xchg
dec
pop
int
arpl
sbb
fwait
hlt
ljmp
fcoml
popa
cmovp
lret
xchg
cmp
adc
xchg
push
pop
cmp
add
jl
cli
sub
dec
test
icebp
loopne
pop
or
out
pushf
and
pop
jmp
adc
cltd
hlt
and
cmc
fdivs
sbb
mov
lcall
outsl
stc
arpl
push
rol
dec
cmp
negl
dec
mov
pop
sub
cmp
inc
xlat
xchg
cmp
inc
pop
addb
pushf
pop
les
dec
pushf
mov
in
xchg
scas
int
pop
repz
lahf
sbbb
int3
adc
xor
xchg
mov
imul
loop
out
jae
mov
mov
and
push
sub
or
lret
pushf
dec
loope
or
mov
clc
add
ret
inc
xor
xor
jo
jne
add
jmp
rorl
fdivr
icebp
mov
add
xor
loope
mov
enter
sti
enter
lahf
sahf
sub
jb
mov
stos
stc
cmp
push
mov
add
cltd
inc
dec
data16
jb
js
nop
push
xchg
sti
int
call
movsl
push
inc
test
cli
ficoml
std
push
shlb
fdiv
pop
mov
cmpb
cmp
mov
push
add
cli
xor
iret
pusha
inc
xor
stos
jle
decl
xor
mov
mov
push
mov
test
xchg
ljmp
ljmp
outsb
jp
adc
shrb
cld
ljmp
imul
sahf
and
movb
rorb
pushf
sub
xor
jo
orb
pop
push
out
stos
iret
and
lcall
loop
pop
mov
shll
xchg
dec
inc
sti
sbb
push
add
data16
ror
cld
adc
fwait
xor
cmp
shll
sub
leave
iret
adc
jle
lock
clc
out
dec
push
stc
aaa
lahf
push
leave
mov
lods
lret
add
inc
lret
adc
adc
xor
and
imul
scas
xor
int3
adc
aaa
fcoms
xchg
dec
push
xlat
in
xchg
frstor
inc
mov
lcall
call
js
stos
pop
out
dec
cmp
jnp
leave
test
push
punpcklwd
ss
ja
xchg
fcomps
and
addb
out
xor
mov
xchg
ds
add
lret
xor
add
xlat
andb
pop
cmpb
movsl
out
xchg
lds
xchg
lahf
nop
xlat
or
jns
cltd
add
dec
pop
mov
add
mov
lods
adc
mov
jne
sar
je
mov
bound
es
mov
push
ljmp
xchg
and
cmp
movsb
jp
inc
jl
xor
stos
jle
mov
aad
pop
push
jb
aad
shll
pop
mov
or
push
call
out
or
and
imul
push
sbbb
rcl
cmp
test
pop
pop
lcall
pusha
rorb
rclb
inc
test
pop
das
push
les
cmpsb
xor
ljmp
mov
xor
add
push
cmp
orb
pop
movsl
pop
push
sbbl
je
adc
inc
jg
aam
insl
xor
ret
xchg
shl
xchg
in
loope
pop
adc
in
jmp
nop
sub
sbb
and
aas
inc
pop
mov
outsl
arpl
pop
xor
jno
cmp
xchg
or
insb
push
mov
xchg
jg
xor
pop
xchg
xchg
jle
icebp
outsl
ss
sbb
jo
push
mov
lret
adc
orb
mov
mov
jl
stc
push
das
les
jbe
dec
inc
jae
xchg
inc
push
in
mov
popf
sbb
jb
push
push
push
xor
mov
mov
jnp
fimuls
or
aas
add
ffreep
int
mov
adc
jl
or
filds
mov
stc
inc
leave
ret
cmpsl
in
enter
sub
pop
mov
aas
insl
rcrl
pop
movsl
inc
cltd
xchg
fwait
ljmp
mov
add
fistpl
nop
fnstsw
fnstsw
outsb
sbbl
leave
mov
xorb
jno
cmpsb
push
cmp
aaa
adc
jp
ret
data16
das
in
cmp
loopne
int3
aam
xchg
daa
xchg
sub
lock
dec
ret
mov
fs
aam
cmp
dec
mov
inc
push
inc
lods
cmp
adc
arpl
das
cs
shlb
sbb
mov
or
sbb
jmp
cld
cmp
fdivl
stos
add
outsb
cli
add
ja
add
ss
mov
lock
adc
pushf
jo
push
xchg
jbe
popf
outsb
pop
out
data16
xchg
dec
in
out
jp
cmp
mov
stos
enter
lds
xchg
jg
imul
fsts
loopne
mov
sub
jno
inc
adc
aad
mov
push
sub
iret
movsl
stos
and
sbb
icebp
mov
lods
jae
in
insl
test
jecxz
add
pop
xchg
lods
jmp
lret
out
out
sti
and
cwtl
aaa
mov
insb
loope
leave
cmp
scas
pop
fidivl
test
sbb
test
dec
xchg
jmp
jno
out
push
pop
xchg
jno
and
loopne
lahf
jp
mov
dec
stc
and
mov
test
clc
inc
add
enter
faddp
add
cmp
shr
out
or
dec
dec
scas
adc
aaa
xchg
sarl
sahf
sub
jecxz
in
insl
or
jmp
out
xorb
or
imul
pushf
leave
and
xor
out
scas
movsl
sub
lcall
adc
dec
fstpl
int3
shrb
or
pop
in
aam
testb
pop
sbb
sub
insb
xor
or
lods
push
rcl
push
xchg
repz
sub
loope
sbb
mov
mov
lods
and
sti
loop
push
xchg
sbbl
cmovns
ljmp
sbb
pop
mov
sti
mov
push
mov
insb
xchg
dec
loope
int
iret
push
pop
les
shrl
add
cmpsl
sub
xchg
adc
nop
xlat
xchg
xor
addr16
iret
in
xchg
xlat
jmp
or
push
jge
push
pushf
cli
pop
pop
nop
test
clc
pop
fnstcw
pushf
loopne
lahf
jne
test
mov
call
incl
cmp
or
pop
sub
xlat
jnp
fstpl
xor
push
jmp
cld
push
addb
mov
or
or
push
add
iret
or
push
jbe
dec
les
fs
mov
sub
mov
and
aas
jge
push
ror
cmp
mov
gs
fucomi
mov
inc
xchg
mov
popa
mov
aas
repnz
loop
jnp
icebp
push
fcomp
shlb
mov
push
sub
mov
sub
cmpsl
outsb
fchs
mov
mov
movsl
inc
or
dec
scas
divb
xchg
mov
in
ud2
leave
jnp
xchg
mov
nop
cli
inc
push
stos
pop
aam
or
add
push
cs
xchg
lock
scas
jecxz
pop
lods
cmp
xchg
jns
adc
adc
dec
sub
mov
in
lcall
adc
in
shlb
rcr
dec
loop
cmp
enter
jmp
add
int
loop
mov
mov
xchg
paddusb
push
iret
in
push
xor
in
stc
push
jb
sbb
int
nop
jp
fs
gs
aad
sbb
sahf
sbbl
mov
mov
sti
lret
sbb
movsl
pop
sti
pop
and
and
lods
pop
fdecstp
inc
sub
mov
leave
adc
rcrb
cltd
xchg
fistps
jecxz
push
jnp
jo
ret
jb
test
ds
mov
in
shrb
xor
in
xchg
xor
bound
adc
lret
fadds
loope
mov
mov
shrb
test
sub
or
and
or
jb
into
ds
lods
ds
mov
or
mov
fwait
add
jb
inc
push
lea
xchg
fmulp
push
mov
push
popf
mov
jae
push
sarb
pop
or
fidivs
cmc
std
sbb
inc
hlt
sti
std
xchg
and
or
aam
push
out
push
or
cmc
es
jo
lahf
pop
sbb
lret
sarb
or
fdivrs
mov
cmp
push
cmp
inc
and
ret
stos
or
mov
and
fnstsw
sbb
push
pop
sub
mov
ljmp
jg
and
mov
hlt
pop
jb
and
lret
inc
mov
inc
dec
jae
in
mov
cltd
sarb
fstl
pop
pop
inc
test
nop
xchg
mov
aaa
add
andl
insb
and
xchg
ret
pop
cs
sbb
jecxz
mov
inc
xchg
and
leave
pop
loopne
repz
inc
add
int3
push
lret
adc
mov
adc
cmp
stc
lcall
and
call
test
or
sub
aam
inc
jb
jl
dec
xchg
push
dec
lea
ds
gs
jecxz
ret
cmpsl
or
xchg
xchg
pop
dec
mov
lds
ds
dec
repz
addb
clc
jnp
mov
mov
push
ret
add
lret
insl
mov
jb
xchg
push
fmul
leave
loop
xchg
mov
sub
jmp
jge
outsb
shl
sbb
jns
mov
lea
jecxz
cmp
xchg
ret
jp
push
sub
inc
lahf
iret
bound
xchg
mov
dec
stc
stos
push
lock
fiaddl
imul
sbb
ret
push
stos
inc
inc
fnstenv
clc
pop
sbb
repz
jbe
adc
and
popa
imul
cmc
filds
inc
jge
jbe
lcall
pop
mov
sub
mov
dec
sahf
or
repz
aad
mov
jg
lea
jle
or
mov
divl
xchg
cmpsl
push
mov
cmp
lret
mul
and
xor
sbb
out
lcall
mov
jo
fs
push
sub
push
outsl
int
jae
and
cmpsb
leave
lods
repnz
stos
repnz
sbb
imul
mov
pop
and
inc
adc
jmp
outsl
data16
popa
lock
dec
push
inc
mov
dec
sbb
add
cli
cltd
pop
push
and
xor
mov
jmp
inc
adcb
cmp
jbe
sub
mov
fistl
arpl
push
mov
shrb
dec
sbb
dec
ficomps
xor
mov
push
mov
add
or
cltd
xchg
inc
push
add
outsb
inc
push
lcall
xlat
push
mov
pop
pop
mov
fnsave
pop
mov
stos
sbb
pushf
dec
or
lret
call
dec
mov
mov
xchg
inc
mov
xor
stos
xchg
loopne
dec
shll
arpl
sbb
sbb
fldl
ficomps
clc
push
sub
fnstcw
xor
sarl
int3
out
popf
inc
fildl
xchg
cmpsl
sub
adc
int
dec
sbb
test
xor
xchg
xor
and
pop
push
ljmp
imul
aas
and
movl
cwtl
out
xor
aas
je
das
lods
push
or
sbb
test
stos
inc
je
mov
mov
push
mov
or
mov
sub
bound
sbbb
fiaddl
ret
rcr
ss
add
mov
xor
les
cltd
push
pop
sti
cmp
mov
add
jnp
test
jge
rcrb
shlb
mov
dec
out
inc
push
and
or
or
push
popa
xchg
pop
out
sbb
push
jecxz
loop
sahf
daa
das
mov
les
jmp
push
fisubs
or
push
dec
pop
stos
decb
and
repz
xlat
adc
clc
or
movsl
pop
jae
push
mov
loop
mov
cmp
sub
push
iret
xchg
push
mov
repz
jns
out
mov
pushf
inc
or
pop
dec
sub
notb
or
pop
xor
inc
lret
and
xor
mov
leave
es
lods
mov
test
clc
add
test
ficompl
cs
and
test
mov
cld
adc
lahf
imul
test
sbb
cmpsl
shlb
pop
mov
test
pop
arpl
jg
jge
std
and
test
xchg
div
adc
mov
cmpsl
ds
cltd
cmc
sbbl
jne
fistpl
xor
pop
xor
push
xchg
add
imul
and
out
jbe
sbb
pop
and
movsl
popa
loopne
jnp
or
mov
xchg
test
pop
adc
dec
mov
stos
je
out
testl
inc
inc
mov
cmc
aas
in
sub
cs
jge
push
and
fstps
adc
push
cs
jp
xchg
mov
loopne
pop
inc
rorl
adc
aas
xchg
push
ljmp
xorb
adc
sahf
sbb
jmp
int3
jp
mov
int
insl
adc
push
cmc
pop
adc
jle
cmp
lods
jne
pop
or
in
push
mov
mov
jge
lret
int3
lret
xor
adc
push
out
pop
outsb
pop
ds
scas
pusha
add
sub
sbbb
aad
pop
imul
sub
pop
daa
xchg
jo
and
orb
jmp
nop
lret
nopl
inc
cld
lds
insb
adc
imul
dec
andb
jecxz
repnz
int3
popa
cmc
repnz
lcall
icebp
inc
xor
mov
cmpsl
xchg
cmp
pushf
pop
aad
inc
bound
fstpt
hlt
jbe
cmp
mov
orb
lgs
pop
add
xchg
and
cmc
mov
stc
aam
jbe
xchg
addr16
in
icebp
dec
outsb
xor
mov
fadds
dec
ret
icebp
ficomps
and
cmp
lods
insl
in
cmp
dec
lds
into
jae
mov
es
cmc
jg
or
test
in
mov
outsl
cwtl
out
andb
sbb
scas
fdivrs
sub
pop
leave
int3
add
or
jns
jne
cltd
dec
arpl
js
push
lret
mov
gs
ja
daa
fistpll
ret
mov
add
push
mov
mov
xchg
mov
fwait
mov
jl
add
pop
in
fstpt
cmp
sbb
or
pop
lods
sbb
xchg
ficoms
inc
imul
push
mov
pop
movsl
jl
pop
ljmp
imul
mov
rcr
je
mov
lods
sub
popf
push
xchg
pop
mov
in
jp
arpl
xchg
cmp
sub
rclb
in
rclb
movsl
lock
push
iret
in
sarb
mov
inc
int3
jge
sbb
lea
pushf
int3
test
jg
mov
sub
jl
mov
cmp
cmpsb
mov
test
push
enter
insl
cmp
es
fwait
lock
fisttps
ret
push
mov
jp
add
push
inc
or
dec
and
mov
cmpsl
sub
out
xchg
mov
or
xor
and
imul
negb
mov
mov
test
xchg
xchg
dec
sbb
mov
cmpsb
pop
vphaddubw
xchg
sahf
fcmove
jns
push
andl
jp
shll
push
jb
pop
roll
push
push
inc
test
or
jbe
mov
mov
pop
cli
mov
jmp
jae
sub
sub
xchg
xchg
ret
into
shrl
cmpsl
add
push
sbb
iret
or
das
mov
inc
int3
add
je
ja
pop
add
cltd
cmp
add
add
mov
adc
call
fistpll
mov
push
xchg
lea
shll
sub
lock
scas
mov
movsb
sbb
je
lcall
iret
jle
fistl
hlt
out
mov
xor
and
lcall
mov
inc
mov
lods
sub
mov
push
xor
sub
jmp
cmp
frstor
stc
cwtl
ret
or
adc
in
mov
push
xchg
cmp
movsl
rclb
lods
decl
ljmp
mov
insl
sbb
lea
jno
jnp
adc
fmuls
sbb
int3
push
movsl
cmp
push
pop
lcall
mov
icebp
push
mov
cmc
mov
mov
push
lods
mov
scas
pop
xor
arpl
xchg
push
clc
dec
and
bound
orl
das
popa
imul
sub
movsb
fildl
xor
add
mulb
adc
pop
leave
test
icebp
add
push
sub
xor
call
xchg
outsl
loopne
js
xchg
loope
inc
dec
mov
fdivrp
pop
cltd
int
icebp
jb
test
shrb
arpl
movsl
xor
ja
cmpsb
mov
sbb
add
push
in
xchg
rcrl
cwtl
fmull
mov
data16
push
aaa
stos
loope
mov
rcl
cs
aam
cmc
call
push
add
xor
outsb
mov
jle
mov
shl
lret
lock
lret
mov
stos
bswap
mov
enter
jne
fwait
pop
lret
jo
mov
fsubl
lods
cli
stos
les
inc
push
dec
je
aaa
dec
out
lock
sub
push
mov
fbstp
mov
inc
movsb
pop
add
out
push
mov
cltd
push
pop
push
les
rcrl
stc
in
sbb
sbb
pop
ret
adc
xor
jl
push
pop
dec
jp
and
xchg
mov
mov
movsl
lea
push
pop
in
fucom
adc
mov
jg
mov
loope
pop
notb
and
aam
push
sahf
lods
dec
les
push
adc
push
pop
testb
mov
int
imul
movsl
dec
dec
insl
add
mov
popa
lret
xor
push
movsl
lcall
into
adc
pop
int
dec
out
lds
or
or
jl
push
mov
and
xchg
mov
enter
lgdtl
movsl
bound
lea
mov
sub
inc
mov
add
sub
jp
pop
and
jbe
test
xor
enter
push
add
aaa
or
out
fisubrl
add
mov
cld
xor
scas
jae
or
cld
inc
imul
mov
test
int
sub
mov
and
ret
sbb
and
push
fmuls
bound
fimull
jge
imul
mov
sbb
jp
xor
xchg
mov
sbb
movsl
js
fisubl
or
imul
lahf
pop
adc
xor
lds
mov
xchg
inc
add
adc
inc
jg
inc
mov
jg
aam
xchg
sub
jns
loopne
mov
adcb
inc
pop
push
cmpb
movsl
jae
inc
idivl
pushf
mov
adc
cli
push
call
xchg
int
es
and
lock
sub
adc
sbb
mov
and
sbb
sbb
loopne
mov
cli
into
into
cmp
lds
mov
fsubs
mov
in
dec
mov
fisubs
dec
adc
xor
sbb
push
ljmp
push
cs
pop
adc
inc
push
add
jmp
pusha
or
pop
sub
mov
or
cmp
cltd
popl
popa
imul
lret
enter
imul
lds
lcall
or
lret
jl
cmp
cmp
sub
pop
xchg
sub
imul
sub
inc
and
je
inc
shl
xlat
xor
adc
sub
sti
lret
jge
icebp
sbb
aad
rcl
aas
pop
sbb
cmp
pop
mov
pop
jecxz
xlat
cmpsl
xlat
cmp
ficoml
in
stos
and
lea
xor
sbb
stos
jns
hlt
rcrb
popa
rcrl
adc
xchg
xchg
or
shlb
lods
stos
jp
adc
pop
pop
mov
push
mov
outsl
sbb
jnp
mov
pop
or
push
mov
push
fdivs
outsb
mov
insb
adc
cld
mov
push
inc
call
rcrb
test
fcmove
out
inc
dec
dec
mov
or
cmp
xchg
mov
pop
imul
and
movl
mov
xchg
sub
bound
add
addl
pop
xchg
inc
rorl
mov
std
fsubl
adc
pop
adc
jmp
addr16
cmp
cmc
repz
or
add
cmpl
mov
mov
sub
mov
xchg
pop
dec
push
sbb
pop
into
mov
and
ret
sub
stos
dec
xchg
int
pop
arpl
cmp
jb
push
sbb
cmpsl
in
shl
callw
lret
adc
out
cmp
or
jnp
ja
arpl
jmp
ljmp
cmp
sbb
xchg
addl
and
jae
test
pop
lret
mov
insb
mov
cmp
xor
push
xor
pop
rclb
sbb
movsb
push
int3
nop
inc
mov
xor
sbb
icebp
xchg
jge
mov
aad
cmpsb
xor
out
cmp
aaa
std
pop
pushf
out
pop
sub
out
out
mov
nop
mov
or
adc
pop
mov
jl
pop
scas
std
mov
mov
insl
js
lods
lea
mov
in
int3
jns
and
sbb
xchg
mov
adc
lds
dec
lret
add
sbb
jne
andb
das
sub
into
fldcw
pop
iret
cmp
ja
mov
repz
loope
out
lret
dec
cmp
xchg
mov
jecxz
aad
stos
sti
int
movsl
mov
dec
jns
test
jl
out
cltd
pop
push
insb
fcompl
jne
pop
inc
or
test
int3
movsb
add
xlat
sahf
shlb
mov
fnstsw
cmpsl
push
and
xchg
movsbl
mov
fdivrl
aam
aam
xchg
pop
mov
mov
xchg
lods
sbb
inc
popa
dec
popl
loope
inc
sbb
inc
loope
pop
sub
inc
jp
jmp
sahf
add
mov
sbb
xchg
inc
test
pushf
jbe
sub
mov
jns
mov
loop
sahf
shrb
cmp
daa
test
scas
mov
push
push
jmp
cmp
loope
push
movsl
loope
call
or
scas
push
in
imul
xchg
std
mov
jle
jbe
mov
cmp
out
xchg
pop
repnz
movsb
pop
lret
hlt
jae
adc
inc
outsl
ljmp
cwtl
test
mov
mov
jl
lea
xchg
jo
ds
vpshad
xchg
mov
cwtl
sbb
ljmp
sbb
push
push
add
adc
fisubrl
int3
xor
sub
mov
ds
popf
ret
add
xchg
mov
repz
sbb
cwtl
inc
in
dec
pop
or
inc
inc
and
mov
mov
scas
ret
lret
loop
or
sbb
mov
ficomps
push
and
jge
adc
fstpt
js
sbb
aas
push
jne
cmp
popa
fcomp
xchg
test
mov
ret
cmc
fadds
movsl
js,pt
mov
push
dec
loope
in
inc
mov
add
inc
les
out
sub
inc
stc
ret
sbb
les
sub
mov
stc
mov
mov
bound
js
xchg
rolb
push
vmwrite
fldt
fbld
es
xchg
cmp
sub
lods
leave
xlat
call
sbb
pop
mov
movsl
jae
dec
or
dec
inc
outsl
or
push
and
lret
mov
and
mov
lahf
or
xchg
ret
in
and
stos
aam
jg
xchg
call
xlat
hlt
mov
sbb
shlb
pop
mov
jmp
mov
xor
lock
lods
jo
inc
cs
stos
movsb
or
mov
mov
and
or
sub
shl
mov
sbb
cmp
ljmp
dec
and
ja
push
mov
clc
cmp
inc
nop
stos
and
repz
movsb
rorl
adc
mov
loopne
out
sbb
es
mov
jae
test
adc
or
aas
cli
movsb
les
repnz
shrb
outsl
or
xor
mov
xor
sbb
cmp
inc
xchg
xchg
or
xor
mov
mov
mov
adcb
es
stos
fsubrs
xchg
inc
inc
fiadds
sub
andl
popf
andb
sbb
dec
imul
mov
test
cmp
js
push
sub
fdivrl
add
ret
jmp
stos
vmwrite
add
lcall
outsb
stc
xor
out
fcoms
aam
shll
cmp
sub
lret
test
fstl
cmp
xor
and
xor
sti
mov
fs
dec
icebp
jmp
leave
cmp
cs
fwait
gs
loopne
add
sub
adc
sti
cmp
push
jl
jl
movsl
push
dec
dec
dec
mov
nop
or
jb
lods
dec
std
mov
jb
seto
inc
xorb
js
push
xchg
sub
stc
test
push
cmp
adc
lret
push
xchg
outsb
fdivr
rclb
or
pop
jbe
iret
mov
call
mov
xorb
sub
mov
and
jge
fdivrs
sbb
xchg
popa
enter
lds
and
jge
lcall
nop
out
ret
daa
shl
cmpsl
xor
push
cwtl
out
mov
jp
dec
mov
cmp
add
or
push
push
insb
push
mov
std
fimuls
mov
pop
xchg
sarb
sbb
push
loop
xchg
inc
test
inc
push
stos
mov
cs
out
jae
popf
jg,pn
push
faddp
mov
and
mov
add
test
lahf
xchg
dec
arpl
sbb
out
divps
cmp
fdivp
xlat
push
dec
insb
or
test
test
pop
and
mov
cmpsl
jns
aaa
mov
stc
push
dec
cmpb
push
outsb
jg
dec
jno
sbb
mov
xchg
jae
mov
faddp
sub
in
push
add
popa
add
cltd
aam
jae
pop
stos
into
dec
jae
lea
pop
loope
push
stos
das
fstps
out
mov
cpuid
push
mov
and
lock
pop
inc
out
xor
std
lahf
into
outsb
xchg
adc
out
sub
lods
in
insb
xorl
shrl
adc
sub
xorb
stc
push
ss
sub
cltd
xchg
stos
lret
in
loopne
sbb
pop
push
aad
mov
aaa
mov
scas
push
dec
jno
push
mov
inc
cmp
adc
pop
or
fsubs
push
add
xor
nop
cld
hlt
or
xor
push
push
jecxz
les
dec
push
mov
mov
scas
xchg
xchg
scas
pop
mov
test
mov
jb
data16
pop
fldt
lea
shl
dec
xor
in
mov
and
sti
inc
mov
and
and
or
cmp
mov
and
in
scas
js
mov
pushw
ss
xchg
loope
pop
movsb
mov
xchg
inc
mov
movsb
sub
dec
xchg
cmp
push
and
imul
repnz
sbb
out
inc
xorb
or
jb
add
jns
push
adc
pop
xor
inc
adc
pushf
add
cwtl
mov
and
xor
add
cmp
add
int3
and
push
jns
inc
pushf
xorl
inc
pop
mov
rcrl
xchg
xchg
or
mov
fbld
xorl
fldt
iret
sub
sbb
dec
fcomi
imul
int3
dec
and
rolb
jmp
jle
mov
jge
outsl
mov
or
inc
push
ja
sub
icebp
inc
fs
outsl
cld
fsubl
test
daa
rolb
or
lods
jnp
lcall
push
push
pop
movsl
dec
lret
int3
aam
mov
mov
in
dec
in
rorl
mov
into
daa
es
inc
setb
das
loop
arpl
pop
mov
movl
scas
jecxz
push
mov
testb
pusha
mov
mulb
cmp
xor
loope
inc
in
fimuls
in
testl
repz
add
out
loopne
dec
pop
jno
mov
fs
ret
inc
popf
dec
nop
push
add
jp
xchg
cmp
imul
lret
lods
push
mov
add
push
dec
sbb
js
mov
pop
or
andl
mov
push
and
mov
cmp
pop
leave
rolb
fadds
dec
xlat
insl
dec
std
fdivp
bound
and
xor
fs
xchg
xchg
jb
fcmove
lahf
adc
fcomp
aad
sbb
cs
movsl
mov
pop
mov
call
and
cmp
sub
addr16
adcb
jmp
aad
fcmovnbe
mov
add
shl
jbe
stc
ljmp
xor
jne
add
mov
mov
xchg
mov
cwtl
cmpsb
iret
sbb
adc
mov
inc
shrb
bound
inc
fsubp
xor
mov
outsb
testb
dec
jno
sbb
inc
js
pop
jl
sbb
push
cmc
js
outsl
sbb
adc
movsb
jl
cli
fcoms
mov
je
flds
dec
push
into
push
pop
insb
push
not
add
aad
test
jne
mov
enter
push
loopne
aam
clc
stos
lret
push
sbb
xchg
dec
mov
xchg
or
daa
mov
pop
push
ret
mov
mov
out
xor
call
jmp
jno
cmp
das
ret
mov
adc
rcrb
test
out
fmuls
dec
mov
pop
scas
xor
shrl
imul
cvttps2pi
and
xchg
out
mov
clc
xchg
in
mov
jp
xor
pop
loop
lds
rorb
fwait
xor
int
dec
out
mov
test
lret
leave
dec
js
jne
mov
scas
lret
xchg
xor
je
cmp
int3
dec
cmp
push
divb
scas
lds
xchg
js
inc
mov
pushf
pusha
into
or
cmc
sahf
lret
icebp
pop
dec
je
or
pop
mov
popf
sub
or
test
sub
adc
push
insb
pop
flds
notb
cmpsb
xchg
cmp
dec
repnz
es
lahf
pop
inc
push
push
mov
xchg
mov
ret
xor
adc
or
inc
and
jmp
out
test
jnp
push
cmpsl
mov
es
add
or
mov
push
inc
adc
pop
test
scas
ret
push
mov
and
sbb
push
ret
fildll
cmp
test
mov
addr16
xor
push
pushf
mov
cld
cmpsl
imul
mov
cmpsb
aas
add
sbb
xor
add
add
lcall
sbb
ficompl
sbb
jecxz
cld
insl
daa
sti
and
cld
jnp
mov
jmp
add
adc
sbb
std
mov
into
roll
adc
mov
lret
mov
adc
push
sub
fadd
jecxz
iret
pusha
fnstsw
xchg
es
mov
mov
fisubrl
les
bound
out
pop
xchg
adc
into
xor
arpl
cmpsl
call
jo
pushf
push
pop
popa
fcmovne
stos
sub
sbb
xor
aad
xor
scas
push
cmp
stos
orb
pushf
or
daa
dec
rclb
dec
insl
fcoml
js
sub
pop
push
sbb
mov
cmp
loopne
push
inc
out
dec
fldenv
pop
pop
add
std
addr16
insl
sahf
pop
jg
icebp
lods
scas
filds
mov
clc
jl
ds
push
sbb
shr
rcll
mov
jo
rcrl
jecxz
dec
std
sub
or
and
in
xor
jno
xor
sahf
dec
daa
dec
inc
or
jge
enter
je
pusha
shlb
bound
cmpsb
jo
idivb
xchg
lea
lret
cmp
fdivrs
std
icebp
shl
cwtl
pop
sbb
cmc
xor
cmp
pop
out
cld
rolb
dec
je
imul
inc
fsts
out
jne
in
in
or
movsb
ljmp
sub
dec
sub
pop
or
mov
jo
cli
leave
rolb
jecxz
cmc
cmc
stc
cmpsl
loopne
cltd
loop
add
sub
inc
cltd
scas
mov
cmp
out
sub
cmp
sub
leave
or
shll
rcl
add
and
adc
mov
jne
in
test
xor
pop
call
xchg
adc
and
mov
xchg
cmp
aam
outsb
fsubl
lds
push
loope
or
leave
jbe
jg
pop
rcrb
lea
xorl
mov
mov
test
js
test
xchg
sti
xor
pop
stos
loope
dec
sti
stc
mov
xor
cltd
aad
mov
add
sbb
jae
ljmp
cmp
lret
fld
out
dec
movsb
lret
das
mov
ret
and
mov
iret
xor
aad
jae
enter
and
push
adc
daa
ret
sub
and
pop
add
out
mull
addl
pusha
stc
push
xor
adc
orb
addr16
sarb
pop
lods
cmpb
add
or
or
push
test
cmc
ret
cmp
sub
mov
or
xchg
nop
daa
stc
les
sub
push
mov
xchg
push
jmp
mov
and
jae
addr16
and
faddp
push
jle
mov
rorb
call
in
sub
sub
dec
loop
enter
or
sub
and
ud2
inc
sub
or
into
ds
push
or
loopne
lret
xchg
cli
stos
inc
xor
test
xor
and
cmp
out
mov
gs
rcr
movsl
aam
mov
mov
dec
add
jp
mov
adc
xchg
mov
xlat
and
pop
nop
push
pusha
clc
jg
push
mov
mov
lds
mov
push
dec
mov
push
xor
pop
fcoms
mov
div
fisubrs
cmpsl
pop
mov
jp
sub
mov
test
xor
mov
shlb
fwait
mov
shlb
out
dec
xchg
aas
push
pop
push
and
cmpb
cmpsl
bound
insl
or
rclb
cmc
dec
mov
mul
das
lds
ja
or
sub
xchg
dec
sub
mov
popa
cmp
sub
incb
cltd
cmp
dec
sub
out
cmp
pop
loopne
add
sti
out
testb
cmpb
mov
sub
mov
mov
jnp
mov
outsl
outsl
mov
or
sahf
mov
jle
cmp
lods
fisttpll
sbb
dec
or
ret
sahf
arpl
jne
jbe
jge
xchg
pop
stos
adc
cld
dec
jnp
in
daa
jb
jle
ljmp
mov
xlat
rolb
cld
fldl
dec
mov
xor
stc
xlat
test
xor
dec
pop
movhlps
jbe
mov
mov
mov
aam
mov
jmp
jbe
sti
push
inc
xlat
adc
loop
add
cmp
mov
lret
scas
inc
outsl
xor
or
xor
es
loopne
clc
rcr
jne
ja
inc
jmp
ja
scas
xchg
bound
jmp
lahf
cmpsl
aaa
lds
pop
icebp
and
mov
cmp
jb
push
lods
ds
lods
cmp
mov
addr16
sub
sbb
mov
div
adc
inc
mov
mov
scas
inc
jne
push
xor
xor
adc
add
mov
out
adc
dec
mov
pop
imul
mov
nop
push
xor
cmp
mov
fldl
jge
sub
xchg
adc
rcrl
xchg
in
inc
sub
adc
cld
dec
pop
or
mull
or
cli
add
ret
pop
out
subb
test
sub
shrl
fmul
pushf
fs
cmp
mov
fnstenv
cld
pop
or
lahf
in
movsb
mov
cmp
lods
inc
mov
sub
dec
out
in
pop
xchg
into
and
fcoms
jne
mov
adc
stc
pop
movl
add
idiv
inc
sbb
xchg
call
pop
inc
stc
and
out
dec
ds
push
mov
test
sub
loopne
fs
rol
or
scas
mov
mov
loop
nop
hlt
jns
and
scas
enter
clc
mov
jnp
mov
xchg
push
mov
hlt
xor
cli
aaa
in
test
dec
sub
pop
add
xchg
pop
shrl
jnp
scas
jb
mov
mov
mov
dec
pop
cs
mov
add
outsb
adc
inc
sub
pop
push
fldcw
inc
aad
xchg
inc
aad
cld
ret
pop
cmp
pop
inc
mov
fcoml
scas
les
jg
aam
inc
cwtl
sbb
jmp
sbb
xor
jp
roll
mov
cmp
sti
xchg
test
cld
inc
lds
push
aad
pushf
or
cmp
xorb
repz
std
int
mov
jo
loope
gs
mov
adc
mov
push
mov
pop
fsubrl
loopne
loopne
test
sbbb
adc
loop
pop
mov
cmpsb
scas
les
jns
pop
cmp
shr
push
das
mov
xlat
sbb
popf
mov
call
cwtl
enter
std
dec
xchg
movsb
sbb
sub
jo
pop
adc
xor
xor
test
push
lea
adc
jns
lcall
jae
cmp
push
shlb
or
xor
sub
jnp
dec
les
add
outsb
push
xor
jnp
push
add
push
inc
adc
dec
cmpsl
rcrb
leave
xor
ds
clc
xchg
push
jmp
aad
push
outsl
in
xor
insb
lods
and
lret
js
sub
popa
mov
jb
or
test
pusha
xor
scas
movsl
jns
call
test
adc
into
ret
lret
lods
std
insb
movsl
inc
mov
mov
sbb
call
push
out
aas
std
icebp
in
lock
mov
insb
xchg
mov
fwait
jno,pn
push
popf
sbb
xor
push
dec
jmp
and
test
or
enter
pusha
mov
sahf
jno
shr
sbb
jge
aam
imul
andb
and
pop
xchg
push
std
jle
dec
push
cmp
jae
inc
sahf
rol
scas
popf
hlt
or
xor
sub
sub
in
movsl
bswap
imul
jne
bound
cmp
gs
call
pushf
cltd
sti
push
mov
les
pop
add
out
scas
aad
stc
out
int
mov
loope
and
xchg
clc
jns
arpl
pop
mov
xchg
call
push
rcr
notb
nop
imul
out
adcb
push
xor
cli
inc
jb
cmp
scas
in
stc
mov
das
mov
jp
mov
bound
outsb
pop
mov
cmp
xchg
and
lcall
gs
cs
ds
jo
cmpsb
out
int
adc
frstor
add
loope
push
jge
push
leave
sbb
pop
mov
jne
push
pop
sub
and
ljmp
popf
mov
dec
dec
cmp
xlat
sar
je
lahf
sub
cli
in
rcll
in
xor
jmp
mov
pusha
add
enter
cmpsb
xor
and
push
mov
jle
repz
add
push
aaa
mov
mov
jae
sbb
outsb
jmp
inc
xor
andb
rolb
cmpsl
mov
data16
jns
pop
pop
and
fsubl
xor
fisubs
insl
push
adc
daa
dec
shll
sbb
sub
pop
lods
xor
aas
add
sti
push
xor
push
mov
sub
inc
add
pop
xchg
push
jo
adc
cmp
cmc
call
fisttpl
shll
imul
sbb
inc
jecxz
cmpsb
mov
jecxz
loopne
sti
cmpsb
ficoms
aad
pop
scas
bound
add
inc
and
inc
lret
rcll
jecxz
push
repz
and
push
cmp
cmp
sahf
sbb
mov
pop
lea
test
and
daa
mov
nop
push
jmp
mov
lock
out
or
repnz
add
or
inc
add
adc
icebp
repz
mov
push
orl
les
xor
cmp
sbb
mov
or
mov
pop
xchg
jo
cmp
pop
outsb
mov
pop
sbb
inc
or
push
jbe
inc
cmpsl
pop
ret
cmp
test
add
cmp
xor
dec
movsb
das
bound
xchg
ret
cwtl
sbbb
mov
je
arpl
lods
loop
fsubs
ja
sub
movsb
loope
mov
inc
inc
push
xor
sbb
dec
lock
decl
sub
dec
cs
stos
test
mov
pop
push
cs
fsub
mov
mov
pop
aad
or
xchg
into
cmpsb
stc
xor
addr16
stc
je
lret
ret
in
sti
aad
inc
lods
dec
fidivrs
xlat
xchg
xchg
push
aaa
xchg
or
push
shll
push
jg
out
mov
movsl
stos
xor
les
cmp
cmc
aaa
fadd
sahf
xchg
mov
stos
or
add
shrl
lret
inc
out
mov
push
cli
in
in
std
test
xchg
push
daa
cltd
popf
in
repz
lahf
aad
mov
cwtl
test
mov
roll
in
mov
lret
in
pop
sarl
add
push
add
in
dec
stc
cmp
jne
cmp
and
xor
cmp
shrl
je
ds
xorb
jno
mov
movsl
xor
lcall
inc
jmp
nop
cmpb
pop
and
lods
scas
jo
popl
fdivrl
or
rcl
sbb
fsubr
push
test
push
mov
sub
mov
add
mov
jae
pusha
jbe
arpl
ss
icebp
xchg
mov
in
pop
call
fdivr
mov
sub
adc
jo
mov
int
xchg
insb
data16
lods
popa
push
pushf
js
sti
loop
movsb
sub
adc
xor
cltd
mov
leave
xchg
jp
notb
jle
cmp
movsb
sub
cmpsb
rorl
into
pusha
mulb
out
jbe
lock
cmp
mov
sub
jg
jne
sub
in
sub
mov
stos
mov
mov
in
push
test
fdivr
jae
lds
fstpt
add
mov
and
dec
jo
cmp
cmp
out
or
sub
shr
jmp
lret
and
inc
jns
clc
outsb
sbb
jno
inc
imul
pop
inc
mov
dec
pusha
or
mov
mov
mov
shl
popf
mov
inc
out
test
xchg
iret
arpl
pop
xor
push
insl
aaa
pop
or
hlt
sti
xchg
aaa
or
and
cmp
fdivs
outsl
dec
add
aad
negl
sub
jl
out
and
lret
pop
call
sbb
shl
les
mov
stc
sub
push
cltd
and
mov
subb
lcall
ret
icebp
sbb
cld
aad
mov
inc
mov
bound
mov
fldcw
inc
add
mov
aad
mov
shr
lds
in
add
cmp
adc
add
stos
inc
imul
js
shll
cmp
xchg
sbb
pop
mov
inc
xor
jg
nop
jns
int
shrl
ror
out
jno
pusha
push
cltd
sub
mov
nop
sub
test
shr
jae
mov
add
or
lret
setns
dec
sub
aam
sbb
inc
cltd
xchg
je
test
bound
xor
mov
pop
pop
cmp
mov
nop
push
pop
push
inc
push
add
pop
sti
lock
jns
xchg
jns
sub
dec
add
loop
fmul
push
add
daa
test
jnp
mov
sub
mov
sbb
jbe
insb
add
mov
push
sbb
xchg
in
jmp
insl
lds
adc
int3
lret
data16
mov
insb
dec
lret
xchg
cmp
loopne
aas
sti
sarb
inc
roll
sbb
movsl
or
sub
push
inc
push
push
arpl
sub
aad
sbb
std
into
dec
cmp
gs
repz
xor
xor
xor
mov
xchg
fldl2t
inc
cmp
sub
dec
insb
addr16
subl
insl
cmp
mov
jl
jecxz
xchg
sub
adc
test
pop
adc
xor
std
jmp
or
test
imul
cld
mul
sti
mov
pop
adc
push
int3
je
add
repz
mov
popf
lock
cwtl
sbb
jae
push
dec
stos
cmp
inc
jne
divb
mov
mov
in
cmc
sub
mov
dec
xlat
pop
lods
icebp
int
dec
xchg
fs
mov
and
ficompl
push
repnz
xchg
adc
push
push
mov
inc
push
int3
push
and
ds
sbb
movsb
out
dec
mov
mov
or
mov
cmp
xchg
lds
loope
mov
imul
mov
sub
ds
mov
add
bound
outsl
aas
and
mov
inc
ja
dec
es
adc
jmp
aam
rclb
fs
rcl
ljmp
and
mov
push
fstpl
cltd
mov
pop
fst
bound
out
inc
loop
xor
leave
in
mov
push
aaa
sub
inc
xchg
std
jmp
test
aad
push
sbb
mov
aaa
push
orl
mov
mov
in
mov
sbb
pushf
mov
push
mov
shl
cmp
adc
lods
pushf
ljmp
mov
popa
jge
mov
xlat
lcall
enter
push
xor
outsb
repz
push
data16
loope
mov
adc
jae
lret
jg
sbb
popa
xchg
imul
mov
pop
lods
sbb
mov
bound
dec
lret
mov
shlb
test
push
mov
scas
cmp
out
jo
adc
sti
fs
cltd
xchg
pop
jge
mov
xlat
mov
mov
fstps
pushf
sti
cmpl
mov
sbb
pusha
dec
or
sub
dec
in
clc
mov
push
addr16
xor
arpl
enter
mov
inc
and
push
push
ret
jno
cld
add
push
ds
push
and
push
fcmovne
sub
shl
xor
ret
into
inc
add
pop
add
mov
lret
mov
mov
mov
mov
xor
sarb
jns
pop
mov
out
xchg
sub
mov
xchg
add
xchg
push
mov
mov
inc
inc
mov
push
outsb
mov
xchg
lods
and
loope
fwait
jnp
clc
pop
sub
mov
add
rcr
dec
sbbb
mov
js
push
xlat
push
imul
push
lea
sub
out
jp
fcmovnu
ret
call
mov
addr16
mov
imul
ljmp
pop
mov
rcll
stos
shrb
fistl
add
rclb
cmp
dec
push
daa
xor
rol
lret
movsl
aas
in
fs
hlt
ret
and
scas
cs
and
and
inc
or
adc
push
push
jl
lods
push
mov
aas
cmpsb
rcll
lahf
lods
xchg
sub
fadds
sbb
or
shlb
das
aaa
lret
aaa
cmp
jg
sbb
loop
ret
jge
jnp
push
inc
xchg
inc
insb
hlt
enter
xor
or
into
dec
mov
cwtl
mov
inc
sbb
mov
push
cltd
jg
dec
dec
cs
push
sti
ja
jmp
sbb
scas
aad
pop
mov
push
lahf
daa
arpl
mov
and
cs
icebp
add
std
cli
lock
shrl
lcall
pop
pop
pusha
and
inc
push
test
push
sbb
cmp
ret
imul
xor
andl
and
lahf
aam
and
or
in
mov
int
jbe
mov
sbb
test
sub
test
or
popf
push
cmpsl
ss
cmp
and
shl
pop
dec
pusha
xchg
pushl
mov
mov
dec
dec
cmpsl
mov
mov
out
lods
mov
xorb
xchg
inc
ljmp
jg
jbe
outsb
out
xlat
and
jle
sub
mov
push
imul
mov
aaa
scas
lds
mov
jne
cmp
xchg
aad
push
cld
pop
mov
push
push
cmpsb
push
mov
add
loopne
idivb
push
negl
jmp
cmp
dec
lret
mov
enter
mov
xor
jecxz
and
icebp
inc
cmpsl
nop
sbb
sbbb
push
subb
inc
mov
in
cmp
js
nop
jo
mov
push
mov
outsb
jmp
bound
mov
fidivrl
movsl
dec
sub
add
rcrb
outsb
push
inc
cwtl
dec
pop
dec
insb
lods
push
pop
mov
xchg
lcall
cmp
fcoml
mov
cs
mov
lds
enter
cltd
data16
ja
sbb
or
xor
and
fcoms
fisttpl
jl
sub
pop
bound
mov
sub
add
icebp
fwait
push
idivl
or
mov
jb
add
jecxz
jno
jp
xor
push
int3
jne
jecxz
jno
pop
dec
mov
sbb
xor
int3
movsl
push
jge
roll
lock
jg
xor
mov
hlt
mov
cmp
je
xor
into
or
lds
jnp
stos
les
in
outsl
mov
cmp
loop
pmullw
pop
fcomps
cmpsl
or
adc
sub
push
jne
cmp
jne
xchg
mov
and
lock
and
cmpl
and
movsb
shlb
sarl
xchg
mov
stos
mov
ljmpw
pop
push
mov
mov
int
insl
adc
out
sub
hlt
jbe
mov
insl
xor
or
clc
ljmp
imul
push
repnz
or
lea
subb
test
inc
mov
mov
mov
fnstcw
push
cmpsb
sbb
xor
push
das
pop
mov
mov
ret
pop
nop
lods
lods
or
cmp
scas
jno
fsubl
test
pop
jne
ja
cmp
adc
mov
add
add
lret
gs
fistpll
shrl
je
jb
mov
mov
xchg
mov
out
insl
mov
cmpsb
std
mov
ds
nop
into
ljmp
lods
movsb
repnz
pop
sub
clc
adc
mov
sbb
sub
pop
fcomps
push
sbbb
cwtl
and
cld
in
lock
sbb
push
leave
cmp
fldl
cmp
andb
mov
sub
push
sub
repz
mov
xchg
add
inc
scas
or
sbb
mov
sub
aad
imul
sub
out
push
leave
scas
sbb
fidivrl
dec
out
addr16
sub
add
jne
bound
xor
insb
test
push
sub
iret
xchg
sub
nop
les
outsl
inc
inc
repnz
pop
adc
mov
jne
xorl
mov
and
insl
push
mov
mov
sti
sub
mov
imul
sahf
test
pop
iret
or
aam
iret
lock
add
sub
add
push
fsubrs
adc
mov
bound
lea
cltd
dec
xchg
xor
cmpsl
scas
ljmp
pop
jp
or
mov
lds
mov
repnz
std
sbb
inc
lret
mov
popa
sub
push
lret
ja
cmp
xor
lods
dec
repz
cmp
adc
das
inc
cmp
mov
out
imul
mov
in
out
sbb
sub
fcoml
inc
gs
dec
ds
getsec
lods
fmuls
insl
into
shll
cmp
pop
pop
inc
lods
or
pop
mov
sub
jp
pop
sbb
rolb
in
push
pop
dec
or
and
ret
jmp
je
popa
xchg
mov
pop
jns
test
mov
cmp
push
aad
push
loope
adc
jmp
hlt
sub
xchg
aam
aaa
xor
adc
fildl
pop
in
adc
arpl
dec
push
lret
adc
mov
sub
out
xchg
ljmp
pop
popf
push
scas
dec
mov
sbb
adc
inc
pop
call
jle
add
daa
mov
sbb
push
mov
clc
loop
xchg
pop
cmp
sbb
loop
pop
and
cmp
jl
addl
cmpsb
cmpsl
adc
xor
xchg
sub
jmp
mov
add
insb
mov
fs
fnstsw
sub
cmp
or
adc
dec
popa
adc
pop
out
insb
lret
push
jmp
lods
std
popa
dec
or
dec
inc
les
cltd
fsubr
aas
mov
mov
enter
fimuls
mov
in
fs
sbb
inc
xor
icebp
dec
jmp
sub
pop
cld
mov
pop
dec
mov
mov
sbb
sub
or
fnsave
lret
shlb
ds
lret
js
sub
outsb
nop
nop
dec
popa
sub
int3
sub
sbb
adc
outsl
mov
mov
add
cmp
arpl
cwtl
rep
pusha
adc
jae
and
xor
xor
mov
jg
aad
ret
mov
mov
test
inc
hlt
into
fimull
imul
pop
scas
inc
sbb
mov
or
and
dec
mov
adc
mov
push
xchg
test
insb
ds
push
test
adc
in
mov
jne
out
pop
mov
js
sbb
mov
mov
in
fstpl
fists
mov
push
lcall
data16
out
pop
pop
mov
pop
lret
mov
mov
lods
call
xchg
push
inc
in
into
jbe
cmc
xchg
pop
idivb
into
test
inc
aas
mov
stos
jbe
and
arpl
mov
test
in
aam
insl
in
test
icebp
adc
lcall
loop
shll
ret
sub
mov
insb
jb
ficoml
fwait
enter
fcomip
add
sub
mov
jae
aad
jnp
adc
cmp
sub
add
or
pushf
jmp
mov
movb
sbb
adc
adc
je
push
es
add
adc
ds
mov
mov
es
sub
mov
stos
pop
cmp
and
test
pop
jne
mov
inc
cmpsl
iret
mov
mov
lret
push
jno
mov
imul
daa
adc
jns
xor
inc
add
ljmp
es
das
mov
inc
repnz
dec
aam
adc
mov
push
scas
popf
add
sbb
xlat
push
arpl
jmp
scas
adc
mov
adc
fcompl
repz
enter
xor
xchg
popa
fldcw
lret
xchg
idiv
cs
rcrl
pop
pop
add
out
pop
into
push
sbb
jno
mov
je
test
mov
pop
xchg
jno
mov
add
pop
fldenv
sahf
push
sbb
lods
stos
out
add
mov
stos
sbb
je
call
leave
lahf
enter
ljmp
rorl
ds
xor
fsubp
icebp
inc
repnz
insl
mov
sbb
sub
sbb
xor
insl
cmp
adc
scas
push
mov
dec
cwtl
jg
add
pop
dec
loop
mov
push
and
and
jle
ret
mov
sbbl
lret
dec
cmp
mov
mov
or
addl
fcompl
rorl
cmpsl
ret
push
aas
sub
cmpsb
mov
or
cmpsb
call
dec
cmpsb
or
hlt
lahf
sub
pop
dec
push
xchg
cltd
adc
ja
xchg
pop
outsb
cmp
mov
mov
inc
addr16
sar
in
and
push
fucomip
leave
dec
aas
shr
ficoml
inc
ljmp
bound
xor
jb
mov
lods
cld
lcall
cmpsb
xchg
and
sbb
add
loop
xchg
mov
or
xor
mov
js
fisubs
pop
popa
out
adc
push
int3
bound
or
mov
inc
loopne
xchg
in
mov
aam
insb
push
adc
mov
popa
sbb
out
jbe
lret
int
fwait
loop
pop
push
jns
xchg
mov
sbb
and
mov
mov
loopne
cmc
insl
add
inc
jp
jmp
cmpsb
jns
test
mov
insl
jmp
xor
inc
std
push
sbb
xor
sub
faddl
jg
mov
inc
faddl
aam
mov
mov
xchg
push
rcll
pop
mov
cmp
or
dec
aas
mov
xchg
dec
xor
js
fisttps
or
add
mov
cwtl
cmp
idivb
and
mov
push
jecxz
ficomps
push
fmuls
pop
cmpsl
or
sub
fcmove
jecxz
sbb
jle
sbb
dec
aam
dec
fildl
cmp
adc
je
and
xchg
jbe
jmp
cld
add
iretw
test
mov
and
cmpsl
popa
add
mov
loop
fs
xor
fwait
imul
andl
daa
sbb
cmpsb
stos
shrl
icebp
pop
test
inc
sub
pop
mov
lret
das
int
xchg
xchg
sub
push
mov
fstl
xchg
les
sbb
scas
pusha
sub
mov
cwtl
mov
sbb
js
dec
imul
popa
in
and
jae
push
lock
popa
mov
mov
adc
jnp
xor
imul
inc
jnp
scas
push
pop
das
loop
mov
mov
mov
sbb
scas
mov
fadd
lcall
imul
xchg
stos
xor
out
cmp
mov
daa
jecxz
lret
xchg
mov
inc
and
loop
xor
shrb
mov
pop
add
sbb
and
mov
leave
outsl
adc
fwait
loop
and
call
lods
pop
sbb
test
sbb
mov
aaa
enter
jle
lret
pop
and
cmc
aam
hlt
mov
and
and
stos
pop
jp
or
pop
leave
mov
movsb
in
mov
imulb
mov
xchg
xchg
jecxz
stos
jl
jnp
pop
nop
mull
inc
or
xor
fstpt
mov
test
jns
in
sub
fs
pusha
adc
sub
mov
dec
aaa
mov
fsubl
adc
imul
fcoms
cld
inc
xor
aaa
adc
scas
mov
and
dec
rclb
stos
cmp
pop
ret
bnd
arpl
mov
dec
dec
test
ret
inc
gs
fstps
and
add
int
aam
aaa
imul
dec
xlat
xor
mov
inc
add
int
lods
aam
dec
pop
and
add
fwait
xchg
jecxz
pop
cs
pop
stos
dec
nop
ss
pop
mov
aad
or
rcrb
dec
and
or
icebp
std
and
test
xchg
dec
inc
pop
test
sbb
push
sub
and
dec
aas
adc
lods
inc
bswap
rorb
xlat
aam
loope
sbb
neg
or
dec
sub
ret
dec
insb
jne
scas
in
and
adc
flds
mov
cmp
mov
dec
out
ds
push
jns
sub
loopne
lahf
add
aad
stos
pop
inc
shll
dec
out
xchg
mov
mov
mov
in
int3
fimuls
imul
test
out
enter
sbb
mov
in
jmp
dec
adc
xchg
mov
test
cwtl
jle
fstpt
movsb
adc
push
xchg
xor
pop
lret
dec
int3
and
pop
adc
and
faddl
mov
jle
fsubrs
jo
lea
mov
mulb
sbb
xchg
cmp
push
stos
add
notb
icebp
cmp
out
in
inc
xor
rorb
or
test
dec
mov
push
inc
rcll
jae
fistpll
inc
jp
jg
aad
les
lret
push
cltd
mov
clc
cwtl
scas
pop
inc
jle
daa
jl
or
outsl
xor
lret
adc
push
push
pop
or
lcall
imul
rorb
jle
xor
arpl
enter
cmp
movsb
cltd
mov
mov
test
out
data16
movsb
push
add
into
dec
fsubs
inc
push
repnz
mov
xor
flds
subb
scas
es
sub
push
in
jge
or
xchg
and
cmc
inc
test
xchg
in
lock
push
test
negl
std
and
mov
mov
add
jl
gs
cltd
jmp
icebp
cmc
or
les
arpl
adc
and
popf
lods
lahf
lcall
add
jge
js
call
stc
arpl
inc
inc
in
xchg
pop
mov
mov
pop
sbb
rolb
add
lods
jle
adc
fisubrl
lahf
fcomi
mov
sahf
jg
lea
leave
sub
fstps
xor
jp
or
popa
shll
xchg
inc
mov
fwait
pop
test
ficomps
pop
mov
sbb
inc
fnstenv
shrb
cmp
push
mov
test
xchg
jne
lea
push
cmpsb
xlat
test
lret
xchg
stc
inc
and
xor
ficompl
ds
mov
jo
stos
mov
int
into
insb
aaa
fldl
icebp
add
dec
scas
sbb
andl
das
and
xchg
fptan
cltd
push
lock
clc
in
fsubrs
int
mov
xor
pusha
inc
hlt
pop
icebp
and
adc
repz
repz
mov
adc
lahf
in
or
jns
outsl
nop
enter
push
loope
scas
jl
inc
std
js
xlat
push
cmp
push
aas
xor
lea
xor
ror
fwait
pop
repz
cmp
xlat
in
xchg
and
cmpb
pushf
bound
jns
xchg
ljmp
popa
icebp
dec
out
pop
out
or
scas
stos
push
outsl
adc
mov
fistpll
cs
and
aam
je
pop
mov
cli
adc
sarl
add
lret
ret
or
push
aaa
adc
mov
cmp
insl
mov
ja
xor
mov
xchg
sar
addr16
mov
sbb
aad
adc
cmp
pop
add
out
imul
push
push
pushf
xchg
inc
ja
cmp
or
inc
ret
nop
int3
repnz
pop
jbe
outsb
pop
and
pop
xor
jle
mov
out
or
in
mov
data16
jmp
sbb
jne
ret
dec
sub
jae
mov
sahf
xchg
iret
inc
fs
jge
mov
ret
add
data16
fcoml
inc
xlat
ja
push
repz
pop
adc
shr
mov
cltd
fsts
adc
pop
icebp
bound
mov
xchg
in
add
or
add
lods
xchg
push
add
mov
int
and
aam
push
sub
test
je
loop
inc
pop
lahf
aas
scas
lret
and
in
movsb
mov
cwtl
jnp
mov
shrb
jnp
push
aad
daa
mov
add
leave
sbb
call
sbb
in
bound
jbe
test
aaa
pushf
in
repz
xchg
mov
lea
mov
mov
pop
shr
in
imul
jae
pop
rol
mov
popf
test
add
mov
idivb
jecxz
mov
adc
and
xchg
mov
jae
sahf
xor
outsl
enter
dec
cltd
lcall
repz
mov
xor
mov
jge
ds
pop
test
outsl
clc
inc
fwait
scas
sbb
sbb
inc
xor
sub
and
jnp
sbb
pop
cmp
adc
negl
addl
mov
mov
jae
mov
cmp
jnp
in
jmp
cmp
scas
jecxz
insb
push
jecxz
pusha
xchg
das
dec
push
loope
pop
xchg
mov
cld
mov
inc
push
sub
mov
loope
jg
mov
mov
frstor
or
adc
inc
std
aas
out
jbe
dec
cmpsl
dec
arpl
sub
mov
test
lret
sub
cltd
jne
fyl2xp1
cld
call
ss
ja
insl
fistl
jmp
push
cmp
lods
dec
out
add
cmpsb
push
scas
mov
lahf
rcrl
pop
push
jnp
loope
adc
jnp
jne
xchg
fbld
jae
mov
adc
sub
loope
js
jns
xor
clc
rcrb
popf
and
inc
fsubs
lret
xchg
shlb
stos
ja
adc
in
mov
xor
fs
loope
add
mov
int3
pop
loop
fcoml
and
in
mov
inc
xor
sahf
fisttpll
mov
fimull
movsb
mov
pop
push
inc
test
mov
icebp
jl
push
leave
xchg
rorb
jae
inc
sbb
add
mov
pop
xchg
sub
sbb
ds
push
cmp
stos
call
repnz
aaa
in
or
sbb
in
out
inc
lock
mov
pusha
sub
xor
dec
push
sarl
pop
jne
sub
loopne
mov
mov
outsl
pop
es
ds
imul
mov
loope
xor
jle
or
fisttpl
mov
roll
call
mov
adc
mov
movsl
mov
inc
pop
repnz
mov
les
jnp
or
bound
inc
nop
cmp
xor
jae
mov
mov
insl
cli
rorb
int
cmpsl
dec
sub
fs
push
pop
inc
loope
or
push
js
je
std
or
rep
inc
cli
outsb
sbb
insb
xlat
sbb
jbe
out
add
push
in
notb
imul
stos
ljmp
clc
push
xchg
inc
and
dec
in
push
orl
repnz
clc
or
mov
pusha
xchg
dec
add
outsl
imul
es
leave
das
sbb
cmp
adc
and
and
push
inc
adc
push
and
xchg
xor
adc
mov
mov
mov
test
dec
mov
fldl
xorb
pop
pop
sub
lds
cmp
lock
jp
cwtl
fwait
xchg
insb
mov
push
fcoms
push
lret
or
mov
movsl
in
mov
test
movsl
add
mov
pusha
and
or
inc
lock
mov
bound
out
imul
ds
ror
test
mov
xchg
in
and
in
jmp
lock
test
les
pop
ffree
pop
adc
aad
jae
lea
pop
insb
adc
fcomps
test
data16
pop
and
mov
mov
xor
sub
jno
in
push
out
sbb
or
popf
loop
dec
aad
aaa
movsb
mov
and
dec
push
xor
inc
imul
aam
add
mov
int
ss
or
xchg
push
aam
pop
or
inc
icebp
sarb
scas
sahf
jecxz
jnp
bound
mov
inc
ss
add
aas
imul
out
sub
scas
rcl
cmpsb
lahf
mov
xchg
in
jge
xchg
lock
adc
mov
movsb
loopne
or
or
xchg
jnp
bound
mov
or
ja
inc
fsub
lds
jp
cmp
sbb
addr16
pop
fmulp
add
sbbb
sti
movsb
je
adc
movsb
mov
cmp
sbb
mov
out
nop
jp
cmp
pop
add
mov
aam
or
add
lds
mov
adc
and
jo
ret
sub
sahf
mov
rcr
sub
sub
ret
cltd
sub
jbe
and
pop
sbb
jle
loope
jo
jle
stc
jne
dec
aam
inc
xchg
and
repz
push
ds
xchg
mov
adc
add
fcom
xchg
std
pusha
in
or
push
or
arpl
xchg
push
test
and
leave
sti
dec
sub
mov
push
inc
push
push
pop
mov
mov
pop
es
mov
roll
or
push
outsb
mov
adc
cld
adc
lods
int
int3
movsb
ret
pop
inc
mov
mov
dec
lea
jge
aad
std
clc
test
ret
dec
lods
mov
mov
cli
push
scas
out
jns
mov
jo
mov
add
ficoml
xchg
pop
fcmovbe
inc
fdivrp
inc
insl
outsb
pop
push
daa
jge
jo
idivl
add
movsb
pop
cmpsl
and
and
lods
lods
sti
mov
xchg
xorb
jbe
push
add
push
notl
push
fstps
test
movsl
in
inc
out
mov
and
xchg
imul
test
lret
test
xchg
pop
ret
push
sbb
movsb
sub
fstps
xchg
push
adcl
cmp
xorb
xor
lock
insb
sub
jno
push
sbb
cwtl
cmp
ret
push
pop
dec
pop
movsb
pop
rcr
addb
jnp
out
xor
sahf
mov
mov
decl
xchg
inc
popf
hlt
les
xchg
dec
cmpsl
and
push
pop
mov
add
jl
popa
jbe
pop
nop
call
repz
pop
add
push
ljmp
in
xchg
mov
out
adc
pop
and
sub
dec
or
loopne
cli
or
mov
ret
mov
cmpsb
aad
add
inc
fwait
dec
fldenv
loopne
or
scas
mov
mov
in
std
cmp
fidivrl
xor
mov
xchg
mov
rol
cmp
sub
dec
dec
push
mov
lock
sub
and
divl
fsubrs
and
jmp
mov
popf
aam
ret
aas
jg
fsts
ja
test
roll
mov
fcomp
fwait
int3
cmp
and
or
mov
pop
add
cli
jp
and
push
int
mov
sub
mov
adc
xchg
nop
adc
leave
lahf
push
adc
inc
pop
inc
andb
jne
mov
cmp
lods
and
or
lock
stc
inc
pop
clc
lret
add
scas
outsl
adc
push
xchg
xor
sbb
stc
pop
sbb
sbb
xchg
xchg
jmp
inc
cltd
in
sbb
jns
and
push
jae
push
stos
pop
aaa
lea
pop
pushl
call
mov
loop
push
xchg
test
sahf
stos
fucomip
push
bt
lods
popa
sbb
mov
test
imul
and
cs
inc
xor
stos
xchg
cmp
jle
leave
mov
adc
dec
cli
rorb
jo
test
fistpl
inc
add
stc
mov
rcr
ror
xchg
shlb
pop
lret
cmc
xor
js
pop
ljmp
negb
mov
out
shrl
aas
pop
fldl
pop
and
sub
cltd
jno
mov
push
xchg
sub
rorl
ljmp
push
inc
outsl
add
mov
sbb
dec
xor
les
and
fwait
movb
and
cld
fwait
lcall
ljmp
sub
xor
mov
mov
scas
or
std
ss
ror
lds
sbb
xchg
xchg
sbbb
imul
or
jnp
ds
pop
jnp
mov
fwait
push
mov
test
xchg
idiv
insl
out
mov
jno
aas
jle
mov
add
shl
dec
xchg
in
push
mov
xchg
cld
add
mov
jo
hlt
inc
inc
bswap
stc
lea
into
mov
mov
jmp
lods
and
mov
pusha
in
pusha
and
je
mov
sti
gs
idivb
movsl
sub
cmc
sbb
mov
lds
fstl
rorl
jmp
ljmp
mov
sahf
pop
mov
adc
testb
je
or
je
push
cmp
adc
push
movsl
cmp
lock
movsl
mov
lds
mov
fstpl
adc
cmp
lds
movsb
xchg
push
xor
mov
jbe
xor
cwtl
xchg
std
inc
mov
push
cltd
popa
mov
push
mov
ds
sub
std
jo
std
popa
jmp
push
mov
test
pushf
enter
loopne
mov
sub
adc
stc
inc
and
xor
ret
xchg
mov
test
sti
lea
loop
dec
pop
lret
outsb
sbb
cmp
js
sbb
fwait
push
fidivl
adc
pop
icebp
sbb
mov
add
cmpb
push
popa
xor
ret
and
jmp
sbb
xchg
inc
push
xchg
shrb
xchg
xchg
and
sub
rcr
imul
test
xor
ret
divl
cld
mov
out
std
pop
icebp
add
das
aaa
inc
fldt
jg
adc
roll
mov
mov
mov
lea
cmp
jge
fwait
sbb
std
cmpsl
pop
mov
add
jbe
mov
sarb
cmpl
mov
ret
sub
pusha
nop
and
cwtl
dec
push
sahf
push
or
push
sbb
and
jl
imul
imul
jno
xlat
aad
and
jo
or
push
add
rolb
fs
in
fsubrs
cmpsl
jge
pushf
mov
sti
shlb
das
les
cs
jl
jno
je
jmp
jl
jle
sahf
or
mov
adc
xor
or
mov
or
incl
xchg
xchg
and
xchg
push
int
shlb
cmc
imul
add
ret
pop
ljmp
stc
ja
fdivrp
mov
add
add
stos
or
pop
add
dec
push
call
popf
mov
jb
fldcw
sbb
pop
lods
bound
aas
ss
mov
inc
push
popa
pop
and
cmpsl
pushf
mov
inc
jmp
mov
pop
sbb
xchg
sahf
mov
xor
adc
xor
pushl
daa
jnp
inc
jmp
jg
fistpll
push
popa
cmp
add
jmp
icebp
pop
fidivs
data16
movsb
pop
mov
jge
push
call
and
enter
adc
or
dec
xchg
test
insl
pop
push
pop
pop
pop
hlt
out
test
add
stos
leave
cs
cmp
mull
lods
pop
je
push
jmp
jp
or
push
dec
mov
out
dec
and
std
popf
or
test
and
mov
cmpb
xorb
ss
popa
mov
dec
cld
ret
pusha
sbb
lcall
mov
inc
mov
sbb
ljmp
push
repnz
push
fildll
enter
icebp
rorl
pop
jg
ficoms
mov
rep
mov
cmpsl
xchg
shr
inc
mov
adc
dec
nop
stc
sub
mov
sbb
roll
cmp
push
or
arpl
addr16
mov
cmp
pop
popa
xchg
pop
cmp
push
adc
cld
xchg
xor
outsb
xor
mov
or
stos
jae
or
movsb
repz
xlat
push
push
cmpsb
dec
inc
lret
mov
adc
lret
inc
cli
test
push
add
fidivrl
pop
mov
rclb
js
sbb
add
sbb
hlt
sbb
ds
repz
mov
adc
jg
adc
addb
cwtl
movb
mov
push
inc
mov
jg
leave
inc
cmp
cmp
add
das
dec
int3
jge
dec
ja
jecxz
dec
add
sbb
jnp,pn
pop
repz
xor
xchg
insb
rolb
adc
iret
aad
into
out
js
lock
jmp
jmp
iret
fwait
or
push
cs
push
dec
inc
stc
pop
aaa
mov
jo
cmp
std
pushl
addr16
push
xlat
xlat
pop
sub
fbld
mov
mov
xchg
jp
into
push
lock
scas
ds
and
push
jg
jecxz
xchg
ss
jno,pn
ljmp
xchg
xchg
xchg
cmp
loopne
jbe
sub
ret
pop
mov
cmpsb
repnz
bound
xor
dec
inc
xchg
push
xchg
out
push
repnz
jae
shlw
jb
and
mov
xlat
lods
lea
shlb
fmuls
scas
and
sbb
dec
jae
mov
xchg
jp
dec
aad
mov
add
incl
loop
pop
adc
dec
pushf
pop
icebp
push
and
cmp
orl
cmpsb
add
adc
andb
and
lahf
lock
adc
mov
arpl
repnz
sbb
mov
stos
xchg
addr16
out
into
mov
cmp
cmp
andl
enter
xchg
int
or
aaa
xchg
daa
sub
call
fidivrs
inc
repnz
out
call
pop
pop
mov
push
pop
imul
and
testl
cwtl
or
xor
mov
fwait
mov
icebp
stos
mov
in
out
adc
ds
mov
xlat
pop
mov
test
repz
sbbl
push
xchg
pushf
xchg
sbb
fidivs
push
add
jl
dec
push
jb
sub
sub
pop
jne
test
aam
cmpb
cld
ficoml
mov
adc
pop
mov
in
pop
int
and
inc
jle
adc
jl
mov
jecxz
push
pop
cwtl
call
int
inc
mov
xchg
dec
dec
into
inc
xor
bound
shll
push
rolb
femms
mov
and
push
jae
lods
add
insl
out
call
xor
cmpsb
cs
stos
adc
add
fadds
and
cli
sub
cmp
push
and
dec
lret
mov
push
xchg
add
adc
mov
pusha
mov
enter
test
xor
xchg
add
pop
nop
int
jmp
mov
int3
xchg
and
lcall
mov
fwait
push
adc
pop
insb
xor
adc
push
add
xchg
lods
repnz
sahf
fdivrs
push
adc
les
xchg
and
ja
mov
pop
lcall
mov
out
mov
and
adc
cwtl
mov
aad
arpl
xor
or
and
push
or
xor
pop
fwait
mov
arpl
jg
jbe
insb
stos
mov
or
cmp
mov
loopne
pop
rcrb
cmp
or
add
filds
sub
ret
or
jecxz
jle
sbb
dec
loopne
lret
xchg
movsb
faddl
int3
jae
out
ret
dec
clc
cmp
cltd
sbb
pop
cltd
mov
adc
lret
sbbb
push
xor
lret
mov
repnz
sbb
clc
inc
icebp
sub
movsl
arpl
test
pop
das
aaa
into
or
rclb
add
jge
cs
rcl
movsl
ret
sub
add
test
pop
fs
mov
fstp
or
dec
jbe
dec
fsubr
adc
pop
addr16
pushf
pop
mov
sbbl
mov
ljmp
dec
jb
test
pusha
movsb
popf
cmp
mov
sub
jg
jnp
mov
ljmp
ja
aad
mov
or
xchg
iret
cmpsb
adc
pop
stos
dec
add
pop
jae
fadd
fsubl
lahf
push
and
dec
ds
xlat
inc
mov
sbb
mov
push
pop
mov
xchg
pop
int
pop
inc
mov
cs
cltd
mov
mov
xchg
loopne
or
movsl
test
cmp
clc
xchg
push
test
push
addb
insb
xchg
fcmovnbe
addr16
gs
push
add
add
repnz
es
dec
and
cmp
xorl
test
add
clc
out
lcall
sub
or
in
jb
inc
xchg
jb
sub
dec
lcall
fs
lret
push
push
arpl
dec
adc
xchg
popa
cmp
add
inc
push
popf
push
lret
and
or
push
bound
lods
adc
fistpll
cli
sahf
cld
lahf
call
aas
cmp
call
push
loope
or
xor
inc
cwtl
mov
cmp
lds
hlt
mov
fcoms
cwtl
mov
dec
mov
shrl
ret
out
mov
das
add
mov
sti
aam
sti
sarl
stc
mov
pusha
ret
cmp
mov
lods
mov
jle
pushf
dec
fnstcw
mov
xor
pop
pop
mov
int
sbb
or
cli
lock
ret
aad
sub
add
gs
mov
in
xchg
subl
dec
lret
pop
aaa
cmp
enter
fdivrl
lcall
cmpsl
xor
cs
mov
fiaddl
outsb
adc
adc
sbb
or
aam
out
cwtl
dec
cmp
xor
mov
pop
lds
cmp
xor
stc
lcall
pop
pop
cmpsl
push
mov
dec
and
cmp
subb
push
jb
pop
sub
loopne
fimull
insl
arpl
test
jae
fisubrl
lea
push
xchg
ds
jl
adc
addl
mov
push
out
pop
in
pusha
pushf
fldl
addr16
sarl
cld
adc
jne
arpl
mov
lods
and
jae
clc
in
es
movb
push
sbbb
into
add
jle
xor
jno
push
in
add
fcompl
inc
arpl
push
mov
and
ja
inc
or
and
adc
jnp
in
adc
jae
scas
pop
std
gs
sub
pop
insl
enter
nop
cwtl
mov
aaa
dec
xchg
push
out
mov
call
pop
mov
and
and
mov
pop
gs
rcl
movsb
pop
shrb
cmpsb
ror
fnstcw
fs
fs
movsb
lcall
ror
hlt
or
jmp
sbb
fsin
mov
sar
subb
mov
adc
mov
in
scas
and
lcall
mov
pop
dec
outsl
ret
inc
mov
std
sbb
push
jmp
lods
movsl
add
mov
insl
sbb
in
xor
mov
sbb
sti
das
xor
in
sbb
aad
call
mov
js
aad
pop
xor
scas
jb
push
std
mov
cwtl
dec
push
in
pushf
popa
lods
lahf
jg
push
outsb
add
lret
outsb
outsl
mov
inc
mov
lds
ljmp
push
add
push
and
mov
xor
push
pop
mov
andl
cwtl
jg
mov
sarb
fistpl
xchg
sbb
xchg
insb
pop
mov
sbb
sti
mov
and
cld
xor
push
mov
mov
push
sub
or
pop
jle
or
sub
mov
sub
in
arpl
xchg
sub
jne
dec
cmp
cmp
popa
cltd
pop
adc
dec
and
outsb
pop
mov
ficoml
negb
jecxz
xor
xchg
leave
leave
adc
stc
das
ficompl
add
fdivrs
or
test
cwtl
inc
leave
dec
adc
imul
push
or
jp
test
fimull
daa
lds
and
xchg
fistpl
sub
gs
adc
lahf
inc
lock
jb
add
inc
mov
rcl
mov
cmp
mov
pop
cli
pop
fstps
call
add
push
dec
insl
pop
aad
cmp
pushf
add
pop
pop
divb
push
call
stc
inc
pop
inc
movsb
int
lahf
jne
pop
pop
ret
xor
inc
out
stos
cmp
rolb
lock
jmp
out
in
dec
push
leave
mov
ljmp
jp
adc
pushf
sbb
stos
movsb
xchg
pop
mov
out
in
in
xlat
cmpsb
int3
pop
and
stc
insl
cmpl
scas
sub
int3
dec
cmp
sbb
and
inc
addl
sub
js
xor
out
jge
cmp
loop
mov
aas
or
jne
mov
scas
aas
adc
dec
stos
loop
mov
add
xchg
push
pop
dec
inc
push
inc
rolb
pop
jnp
std
outsb
push
test
imul
repnz
xchg
jp
imul
sbb
mov
lods
xchg
mov
jae
in
jae
pop
rolb
mov
jecxz
adc
lods
jno
insl
pop
cmc
mov
push
adc
xchg
cwtl
test
cmpsl
xchg
jne
lret
mov
mov
push
clc
adc
mov
add
pushf
fidivl
sub
in
outsl
cltd
jns
jmp
sbb
xlat
xchg
xor
movsb
sahf
mov
bndldx
cmp
fbld
cltd
dec
adc
out
jno
push
shll
dec
adc
in
add
fiadds
je
or
mov
rorb
repnz
dec
or
and
into
bound
popf
push
mov
mov
repnz
fs
or
push
outsl
push
and
sub
loope
ja
fwait
and
dec
xor
pop
shrb
rol
add
insb
cmp
sub
adcl
lahf
cmpsl
xor
outsb
fwait
aas
dec
push
push
outsl
nop
pop
out
cmpl
mov
push
xchg
out
mov
mov
xchg
add
pop
add
loope
pusha
int
adc
cmp
or
jle
dec
xchg
mov
rol
inc
and
ja
mov
inc
std
jmp
jne
sarb
jo
dec
inc
out
repz
dec
popf
repz
pop
incl
pop
jp
movsb
orb
mov
push
test
fiaddl
jmp
in
adc
jl
ja
or
inc
mov
rol
int3
out
push
sub
stc
adc
cmpsl
push
mov
popf
call
xlat
pop
data16
or
jno
inc
xchg
cli
adc
je
sbb
xchg
imul
cmp
fisubl
sarb
mov
push
mov
adc
sti
addr16
sbb
xor
movl
lock
daa
or
lcall
xlat
dec
jns
dec
xchg
sahf
xlat
fdivs
mov
or
jns
test
mov
mov
inc
and
ljmp
jp
leave
lods
ljmp
movsl
inc
les
lahf
imul
mov
and
lahf
scas
xor
or
push
adc
outsb
inc
repz
addr16
cmp
jb
push
nop
test
dec
adc
arpl
sarb
ds
xor
mov
and
sub
pop
pop
adc
cmp
imul
jge
stos
int
mov
in
pop
clc
or
sub
and
sub
in
fadd
daa
inc
pop
lods
lahf
push
sub
fidivrl
xchg
test
mov
or
pop
mov
imul
jbe
and
scas
mov
icebp
add
adc
out
cmp
add
cmp
jp
les
mov
mov
call
xchg
lcall
sbb
sub
cmpsl
mov
inc
jp
dec
adc
int
adc
add
push
adc
hlt
push
inc
mov
mov
mov
sub
adc
repz
repnz
fsubs
xor
inc
xchg
and
fwait
dec
inc
es
test
cmp
out
mov
divl
sub
test
add
fstpl
popa
mov
push
xchg
repnz
sbb
xchg
nop
or
in
inc
out
sahf
push
xor
xchg
pop
bound
jmp
inc
pop
cwtl
ret
rol
mov
xlat
jp
pop
stos
push
pop
mov
sahf
xchg
pop
and
fldl
repz
inc
or
pop
std
popl
std
mov
cwtl
xchg
test
ret
adc
xchg
jle
hlt
insl
es
dec
mov
test
inc
popa
daa
test
pop
in
xor
ljmp
nop
rcrb
jne
lsl
xor
pop
cmp
jle
and
fxtract
ss
adc
lret
dec
pushw
gs
inc
xchg
hlt
cmp
mov
subb
mov
push
nop
dec
outsb
mov
push
sbb
sbb
and
add
inc
out
cwtl
nop
jne
inc
jns
and
es
repz
mov
mov
cmp
inc
je
insl
out
andl
mov
mov
mov
outsb
mov
stos
inc
mov
inc
inc
enter
xor
jns
lret
push
iret
sti
sub
out
pop
loopne
and
jle
int3
mov
shll
pushf
push
or
out
mov
hlt
add
outsl
xchg
cmp
iret
pusha
adcl
inc
push
mov
add
and
imul
sub
or
fcompl
icebp
xchg
callw
cmp
xor
and
fwait
xchg
das
into
add
jno
insl
loopne
loopne
and
xor
fdivs
ret
push
icebp
arpl
lcall
aam
push
dec
lret
or
je
cmp
out
and
leave
ficoml
adc
dec
lods
xorb
adc
aas
sbb
pop
lods
fwait
scas
mov
sbb
jl
fs
ffree
movsl
fbld
call
data16
lcall
ljmp
pop
repz
lods
add
cmp
mov
dec
or
aam
mov
jbe
sub
push
jnp
xor
cmpb
outsl
popa
out
push
adcb
xor
fwait
add
or
adc
push
dec
loopne
cld
push
cs
mulb
lock
fidivrl
mov
cli
pop
hlt
xchg
cmp
in
dec
and
cmp
cmp
push
imull
xor
sbb
jge
dec
fcomps
bound
mov
xor
ds
inc
outsl
into
mov
js
inc
lock
mov
sahf
push
iret
int3
xchg
xor
ss
dec
lret
push
lods
xchg
xchg
mov
loop
fstps
bound
sub
inc
add
call
scas
fdivrl
sti
lods
xchg
or
add
push
xchg
fisttps
cs
push
sbb
in
lock
inc
bnd
mov
dec
inc
pop
ficompl
repz
sub
fcmovu
add
scas
in
scas
pop
ret
fwait
bound
mov
test
and
jp
xchg
mov
xchg
xchg
les
dec
test
cltd
lods
add
out
mov
fdivs
shl
fcomp
sub
jp
fs
test
gs
gs
dec
cmpl
or
mov
push
fcmovnbe
insb
das
push
or
jmp
jno
or
mov
mov
push
and
insl
fs
pop
sbb
popa
or
mov
push
scas
imul
sbbl
mov
test
mov
pmaxsw
dec
pop
addr16
push
cmp
push
xchg
mov
lock
xor
cmp
dec
push
or
xchg
push
cwtl
outsl
mov
popa
das
shll
ljmp
lret
fisttpll
test
or
gs
dec
inc
cltd
sub
ret
push
dec
pop
nop
sbb
adc
push
or
mov
mov
jle
adc
scas
fstl
mov
push
sub
fwait
pusha
mov
mov
frstor
in
test
jecxz
daa
std
push
pop
xlat
aad
imul
and
sub
sub
aas
ficoms
sbb
and
rclb
sub
pop
loopne
push
xchg
and
lds
xlat
jecxz
mov
scas
scas
adc
jle
mov
mov
ret
out
lret
mov
pop
fnstcw
adcb
add
mul
lret
mov
test
pop
pusha
jge
test
inc
xchg
sbb
pop
mov
fsub
pop
in
fnstcw
push
push
lret
filds
loopne
ret
cli
nop
dec
ret
sbb
mov
dec
sbb
call
mov
inc
scas
mov
shll
ret
iret
add
nop
jmp
cmpsb
out
ljmp
add
dec
dec
je
out
mov
pushf
mov
push
cmc
movsb
cmp
sub
pop
cmp
sub
arpl
filds
mov
bndldx
mov
pusha
adc
ficoml
ljmp
in
pop
cli
rclw
mov
cmp
fmull
cmpsb
pop
aam
and
iret
fisubrl
je
lods
sbb
shlb
cmc
jb
mov
sbb
xchg
cmp
xchg
add
cmp
and
dec
leave
lock
sbb
jbe
mov
fucomp
stc
movsl
push
pusha
popf
dec
xchg
xor
mov
or
andb
pop
adc
rcll
imul
leave
lahf
out
push
nop
stos
stc
int3
adc
mov
mov
and
cmp
clc
dec
daa
sub
sub
mov
mov
or
repz
adc
fsubl
test
shl
sub
sbb
ret
xor
sbb
scas
mov
shl
in
mov
fcoml
andb
mov
lret
cli
xlat
jle
lahf
pop
dec
cld
je
dec
mov
xchg
test
adc
std
inc
hlt
scas
imul
inc
out
xchg
jo
jo
mov
adc
jmp
loop
mov
cmp
sbb
xor
in
pop
jl
add
test
mov
inc
pop
sahf
and
ret
cmp
mov
enter
add
push
les
jl,pt
imul
pop
mov
mov
xchg
pop
popa
push
ljmp
mov
sbb
jnp
and
push
ljmp
and
pop
push
mov
addl
xor
ljmp
push
imul
push
loope
jae
xchg
insb
out
add
into
fwait
mov
mov
leave
or
leave
aam
xchg
lcall
imul
ret
adc
xor
add
jb
push
jbe
xchg
lods
imul
ficompl
or
pop
cwtl
imul
daa
mov
cwtl
insl
incl
cmpb
cli
xchg
fdivrl
push
and
mov
push
cmp
rolb
add
ja
daa
and
mov
popa
dec
fnsave
adc
in
test
lret
gs
mov
iret
sub
or
lcall
repnz
mov
ss
adc
inc
sub
mov
mull
sbb
jge
push
popf
icebp
cld
pushf
and
int3
and
fwait
cmpb
push
xchg
and
loope
jns
jg
repz
ljmp
lahf
xchg
pop
pop
dec
sbb
filds
push
lcall
or
hlt
dec
in
int
shlb
or
jp
pop
adc
dec
lret
push
cmp
popa
dec
dec
xlat
inc
jno
cld
in
lret
mov
mov
ds
aad
adc
imul
cwtl
xchg
jecxz
pushf
jecxz
fwait
mov
mull
rcll
lock
jle
ret
sub
lret
pushf
hlt
fs
call
xlat
xchg
into
mov
outsl
das
xor
cmc
push
pop
add
and
iret
fcomi
lds
xchg
xor
jno
pop
cmc
fsubl
jl
mov
push
cmp
sbb
mov
ds
fcomp
dec
incb
push
mov
push
movsl
mov
xor
sub
ss
ljmp
mov
test
addr16
push
out
test
jp
icebp
pop
mov
lcall
sbb
test
push
xor
push
arpl
lcall
sub
mov
imulb
ret
lahf
pop
js
xor
cmp
test
pop
inc
or
int3
jnp
xchg
ja
inc
les
inc
ljmp
cld
or
dec
sbb
mov
push
sub
jo
xchg
xchg
sub
push
les
xchg
jbe
lea
sahf
add
add
add
sbb
lea
sbb
push
add
aad
mov
test
push
jno
inc
arpl
psllq
and
jge
aad
outsb
cmp
data16
cmp
xor
or
inc
sbb
mov
cmp
nop
icebp
fs
faddl
call
div
inc
aaa
popa
fwait
jge
pop
outsb
test
or
sbb
add
push
mov
leave
das
xlat
into
jnp
xchg
adc
pop
pop
push
out
mov
stos
repz
popa
imul
test
add
lret
test
scas
sti
cmpb
movsb
and
jp
or
repz
jne
iret
in
mov
lods
pop
ds
lods
or
mov
lods
sbb
sbb
rcrl
push
sti
dec
sbb
icebp
jecxz
in
out
scas
in
ljmp
and
bound
and
fwait
sbb
sbb
xchg
mov
or
mov
lds
or
cs
lea
xchg
arpl
stos
push
mov
mov
inc
push
jge
loopne
ret
data16
mov
adc
xchg
xorl
xor
sbb
dec
pop
push
sub
jno
cmpl
jp
or
cmp
mov
sub
inc
lods
lahf
fwait
test
je
repz
stos
leave
and
stos
cld
enter
cmpsl
inc
add
mov
sbb
andnps
dec
movb
repnz
aaa
sbb
popa
mov
mov
jmp
shl
pop
fisubs
es
popa
mov
xchg
fisubs
lret
nop
test
adc
add
lret
adc
loope
adc
icebp
xor
cmc
nop
pop
or
push
fisttps
sub
add
in
out
ret
inc
in
sahf
sub
jcxz
sbb
pop
gs
push
adc
fwait
mov
mov
mov
imul
inc
lahf
adc
mov
pop
cmp
psrld
daa
int
push
jg
xor
xchg
je
dec
push
pop
push
jae
adcl
nop
mov
pop
xorb
sbb
mov
rcrb
imul
inc
xchg
aam
or
push
and
icebp
cwtl
mov
xchg
cmpl
mov
jns
mov
stc
adc
decl
ds
cltd
scas
outsl
test
lods
call
jg
mov
dec
enter
les
dec
push
arpl
sar
mov
outsb
pop
out
xchg
rcl
enter
dec
leave
jno
shrb
popf
mov
or
push
pop
cs
xchg
mov
inc
dec
test
push
hlt
xchg
mov
ret
push
or
test
stos
repz
or
push
adc
ds
loop
mov
push
icebp
out
pop
test
in
cmp
push
mov
and
add
sbb
js
pop
push
sbb
cmp
sti
imul
dec
xor
das
and
jnp
or
lods
xorb
rorl
cmp
aas
gs
aas
icebp
pop
out
add
jmp
inc
mov
call
mov
and
bound
test
out
js
dec
inc
push
addr16
dec
insb
iret
jp
jge
or
or
sahf
fldenv
push
rcr
or
push
nop
push
in
daa
ja
inc
iret
mov
sub
popa
es
dec
stos
add
xchg
js
aas
push
mov
mov
xchg
int
popf
mov
into
push
add
inc
and
xchg
sarl
mov
jno
stos
cmpb
or
fcmovnbe
mov
pusha
sbb
call
xor
sub
sub
ret
scas
gs
mov
jl
jecxz
mov
aas
push
push
push
xor
push
scas
sub
jb
aaa
add
fildl
pop
mov
sub
popf
jnp
lds
lock
inc
daa
push
ret
lds
lcall
sar
cs
inc
xor
ja
xchg
das
mov
xor
hlt
dec
cmp
into
scas
int3
and
popf
repnz
mov
popf
xchg
xchg
test
int3
xchg
jl
and
rcl
jns
and
or
cmpsb
mov
movntq
out
aas
sbb
in
add
push
and
xchg
mov
pushf
inc
insl
inc
flds
mov
mov
in
xorb
lods
iret
bound
aad
fisttpl
enter
push
xor
or
nop
fstpl
popf
dec
cmp
mov
shlb
arpl
in
in
stc
cli
push
lret
mov
xchg
data16
negb
stos
mov
out
aam
insl
push
mov
js
mov
jge
cmp
mov
fsubr
dec
lcall
ret
cmc
or
mov
lret
cmpsb
xor
lock
pminsw
or
xchg
fidivl
lods
outsb
or
xchg
int3
fsts
cs
xor
pop
orb
dec
jle
adc
fwait
or
fistpll
mov
inc
mov
xchg
outsl
leave
adc
out
cmp
cld
and
inc
je
scas
scas
lahf
dec
mov
push
mov
sub
xchg
jmp
xchg
mov
push
in
sub
aas
in
outsb
and
sub
shlb
pop
call
pushf
jno
adc
movsb
xor
pusha
pop
jge
xor
test
sub
mov
lcall
pop
sbb
lea
out
adc
adc
mov
fistl
mov
mov
test
stos
mov
add
in
mov
lcall
xchg
dec
dec
cwtl
loopne
repz
pop
xchg
jle
and
inc
mov
jle
scas
popa
cwtl
ret
ja
dec
pop
adc
cmpsb
sbb
add
push
dec
repnz
xor
or
and
push
std
adc
mov
lcall
fsubrl
jecxz
mov
filds
mov
sub
pop
insb
and
mov
mov
clc
cli
add
xor
jecxz
sub
or
subl
push
pop
call
fcoms
mov
or
push
jmp
cmpsl
jecxz
clc
add
dec
adc
cmp
pop
mov
pop
shrb
mov
adc
clc
dec
movsl
mov
ljmp
in
jecxz
pop
pop
mov
repz
mov
push
push
aad
jns
and
mov
ja
fstl
mov
xor
out
cmove
xchg
dec
ljmp
jae
sbb
repnz
or
xchg
ret
mov
cld
sub
pop
mov
leave
ds
imul
lds
loop
or
jbe
pushf
sarb
jge
out
je
jne
lret
add
pushf
pop
cld
repnz
cli
jbe
loope
andl
mov
xor
mov
mov
loopne
dec
xchg
das
pop
insb
popf
cmpsl
dec
sahf
mov
push
add
arpl
cmp
jmp
aas
inc
arpl
push
sub
cmp
mov
loopne
iret
inc
leave
push
test
and
fidivrl
ret
lahf
and
push
inc
loopne
inc
mov
jbe
in
mov
adc
leave
repnz
aam
movsl
cmp
mov
mov
les
outsl
sub
shl
dec
push
xchg
and
mov
scas
aad
push
sub
out
dec
in
dec
nop
aas
fldt
scas
pusha
adc
leave
addr16
mov
mov
pushf
jecxz
mov
insb
loopne
mov
insl
lods
adc
pop
mov
fs
inc
adc
pop
add
or
inc
mov
dec
xchg
stos
cmp
cli
mov
lret
add
add
jnp
insb
adc
popa
insl
arpl
sub
ja
stc
addr16
xor
mov
mov
aad
and
inc
xor
stos
and
in
sbb
shrb
aam
push
xchg
fwait
xchg
orl
cltd
daa
cmc
sbb
and
jae
mov
jp
xor
sarl
push
inc
subl
cmp
mov
sbb
push
adc
xchg
cli
add
repz
std
push
sbb
popf
pop
stc
ret
pusha
ficoms
add
jmp
ficompl
lcall
imul
push
mov
outsb
jmp
push
xchg
adc
pop
ret
rcr
lret
repnz
mov
cli
mov
stc
jo
cld
cmp
mov
adc
test
clc
mov
and
fs
pushf
mov
rorl
popf
cmp
or
out
ret
mov
mov
mov
mov
cmpsb
dec
out
cltd
inc
push
jno
push
push
mov
adc
sbb
mov
push
repnz
add
xlat
jne
les
outsb
iret
lcall
bound
mov
cli
pop
js
xchg
or
and
scas
es
stos
lret
subb
mov
xchg
jle
pop
xlat
push
inc
shr
in
mov
jp
movlps
je
xchg
sub
cmpsb
in
aad
fistps
pop
mov
mov
cwtd
dec
fldt
stos
fcmove
pop
test
inc
outsb
imul
xor
jbe
inc
sub
xor
int3
daa
pushf
add
jae
pop
fsubrl
fs
add
js
push
popf
sub
mov
add
xchg
inc
pop
mov
and
adc
push
adcl
neg
inc
and
pop
push
xor
push
mov
xor
xchg
and
idiv
test
lret
lock
testl
jmp
outsb
lcall
add
mov
cmp
sbb
repnz
scas
sbb
xchg
adcl
mov
lahf
mov
loopne
cmp
shrl
jl
sbb
dec
xor
aam
es
outsb
push
adc
push
bound
cmp
clc
vpavgb
or
int
pop
je
ret
jl
or
inc
es
roll
pop
sub
pop
dec
mov
sub
sbb
movl
inc
cltd
insb
fcompl
rcrb
pop
dec
sets
int
pop
adc
fbld
xor
test
pop
push
dec
stos
stc
loopne
push
cli
xor
add
push
ret
popf
cli
mov
int
gs
test
movsl
and
arpl
or
out
cli
ret
negb
in
inc
dec
test
sbb
and
lahf
cs
in
jne
adc
paddsb
stos
pop
xchg
shlb
lahf
fisttpll
fwait
out
sub
int3
sbb
xchg
sub
xchg
das
lods
sahf
xor
shlb
ljmp
bound
mov
shr
jb
aaa
sbb
cmp
sub
push
imul
imul
xchg
and
mov
scas
movsb
das
dec
sbb
sbb
cmp
push
and
pushf
popa
push
sub
mov
fldt
sbb
pushf
cmp
jnp
mov
out
imul
pop
iret
cmpsl
mov
data16
or
and
iret
cmc
jle
fdivs
push
sub
clc
sbb
sbb
push
stc
cmpsb
xchg
cmp
test
lods
inc
xor
repnz
jmp
stc
js
sbb
std
shll
xchg
shr
mov
add
dec
enter
cltd
jne
sbb
rep
and
sti
lods
jbe
mov
mov
inc
cmp
insl
mov
pop
xorl
or
mov
pop
xor
inc
testb
fsts
adc
rorl
addl
outsl
jne
add
pop
ss
pop
test
and
mov
sub
lock
repnz
ficomps
ss
sbb
icebp
pop
lods
push
push
cs
push
jnp
inc
lret
call
or
pushl
xor
add
or
mov
shrb
cs
dec
add
mov
enter
stos
xor
xchg
btr
fstps
pushl
dec
xchg
movsb
cld
cmp
or
test
push
pcmpeqw
loope
cmpsl
push
test
jmp
fcmovne
add
pop
stos
pop
dec
xor
mov
test
hlt
add
and
ss
out
jp
pop
sub
or
fld1
or
push
add
ljmp
icebp
dec
and
lret
and
sahf
arpl
mov
mov
ja
cltd
sub
loop
ds
es
jmp
add
testb
pop
shl
sbb
ss
mov
jnp
add
mov
sbb
pop
xchg
je
or
sub
xchg
fwait
and
stos
dec
push
mov
js
addl
outsl
es
adc
in
xchg
test
xor
call
jb
cmc
iret
xchg
pop
sti
jne
mov
das
xor
dec
imul
shr
lcall
inc
loopne
jo
shlb
push
arpl
sbbl
xchg
test
pop
pop
cmp
mov
lods
sti
pusha
add
insb
adc
fdivrl
incl
in
dec
dec
and
outsl
gs
sbb
push
adc
mov
enter
hlt
dec
dec
sub
add
and
pop
mov
lret
addb
and
imul
shrl
xlat
insb
inc
sbb
xchg
sub
test
flds
mov
outsb
cmp
out
sbb
imul
inc
dec
add
adc
ficoml
popf
xor
dec
lods
aad
inc
cmp
cmp
add
lahf
orl
add
mov
imul
mov
adc
cltd
jmp
mov
dec
adcb
xor
notl
cs
lcall
mov
cli
inc
cmp
inc
dec
and
pop
into
and
imul
mov
sub
cmp
aaa
push
bnd
mov
shrl
mov
adc
in
jmp
inc
movsl
les
fdivrs
xlat
and
jae
inc
pushf
outsb
inc
stos
and
push
mov
mov
scas
push
nop
xor
roll
xchg
add
out
fwait
adc
push
gs
shll
fwait
inc
dec
sub
adc
arpl
xor
mov
cmpsb
cmpsl
je
inc
pushf
out
call
int3
pop
lret
mov
out
sbb
icebp
js
sub
leave
fdivs
cmp
repnz
adc
cmp
pop
repz
cmp
mov
addl
jl
sub
data16
push
push
xchg
fnstenv
pop
inc
rcrb
ss
addr16
stc
shr
sub
scas
inc
adc
test
pop
push
les
push
add
mov
mov
loope
das
repnz
clc
enter
lock
pop
inc
cmp
xlat
jae
pushf
popa
inc
adc
iret
loope
and
aaa
mov
lds
jnp
lcall
lods
mov
xchg
in
inc
rclb
sub
or
pusha
subb
mov
loop
nop
mov
dec
loopne
lea
fwait
mov
xchg
shrb
repnz
nop
jg
xchg
mov
xchg
mov
pop
scas
sbb
arpl
and
sub
dec
test
sbb
push
adc
jmp
mov
lea
jg
xor
aas
ss
iret
add
test
loope
fildll
mov
into
das
cmpb
pop
mov
push
aaa
fadd
xchg
or
cmovne
xchg
insl
cmp
mov
das
xchg
clc
adc
lds
or
push
mov
sub
or
orb
cmc
jae
call
and
cld
sub
push
in
push
ds
pop
pop
sahf
lods
cmp
cmpsb
pop
es
sti
push
push
pop
faddp
std
mov
and
pop
xchg
sub
cmp
pop
xchg
or
cmp
mov
aad
push
loope
stos
hlt
gs
std
sti
cmc
cmp
push
lock
insb
push
pop
mov
out
lcall
imul
xor
cmpsl
mov
sti
inc
loopne
lahf
imul
imul
jl
call
jle
push
mov
inc
cli
push
rcll
outsl
jmp
lret
mov
jmp
nop
sahf
xor
out
push
pop
mov
aam
sub
push
lock
pop
and
jle
push
sbb
dec
lahf
pop
push
xchg
xchg
mov
mov
fldl
subl
adc
dec
cmp
mov
pop
push
stos
shr
out
pop
mov
hlt
cmc
ljmp
xor
xchg
loop
popa
adc
and
push
ljmp
leave
lcall
mov
sbbb
mov
inc
xor
or
push
mov
xor
xor
pop
sti
fsts
add
and
jg
js
push
aas
jne
xor
mov
dec
cmp
shlb
sbb
mov
jg
xor
push
mov
filds
movsl
mov
insb
pop
scas
mov
mov
sbb
popf
mov
xadd
lcall
lock
dec
imul
test
sub
and
les
adc
fbld
dec
inc
sbb
clc
and
fcoml
and
push
in
and
cmp
outsb
rcl
xchg
and
jl
outsb
lret
fstps
lret
add
iret
ret
mov
sbb
popf
xchg
ja
cmp
int
outsb
xchg
lret
inc
add
adc
cli
xchg
pop
vmaxps
stos
dec
rcl
popa
sar
test
xchg
out
pop
add
je
or
sti
ja
out
cld
mov
jne
fwait
je
mov
in
xchg
addr16
mov
adc
mov
fsubr
rolb
mov
dec
sub
notb
push
jo
xchg
push
push
xchg
std
cmp
pop
in
dec
xor
inc
push
cmp
mov
incb
repz
jge
sub
pop
popf
rorb
cmp
mov
or
pop
xor
aam
xchg
lods
xchg
movsl
pop
pop
jl
shll
sbb
lds
ja
mov
inc
push
or
and
jg
push
and
xchg
cld
cwtl
cmpb
call
cli
mov
push
int
cmc
pop
lret
xchg
fs
mov
pop
inc
lods
cmp
dec
add
fs
test
mov
or
lret
mov
jle
hlt
outsb
clc
mov
adc
push
test
pop
add
aas
cmp
int
mov
ret
inc
sbb
push
stc
or
imul
add
inc
dec
cmpsl
call
dec
fdivrl
xchg
stos
jnp
testl
enter
or
mov
pop
cmp
loop
dec
in
mov
bound
push
sub
test
xor
repnz
insl
add
push
inc
loopne
xor
popf
out
fmull
iret
xchg
int3
jae
push
pop
push
xchg
mov
leave
das
jno
test
add
xchg
cmpl
sub
jae
stos
cli
xor
std
jnp
pop
hlt
mov
addr16
scas
fwait
jnp
lret
sub
cwtl
insl
shll
stos
call
loopne
jne
clc
xchg
subl
mov
mov
dec
push
pop
scas
push
xchg
add
movsl
leave
mov
loop
loope
xchg
addl
push
dec
dec
popa
mov
cltd
sbb
dec
adc
aad
mov
xor
xchg
sbb
jle
fdivl
into
mov
or
lock
les
sbb
pop
std
sub
adc
mov
and
pop
stos
adc
mov
sbb
std
mov
xor
pop
and
imul
vcvtps2dq
test
out
jns
push
pushf
aaa
js
lahf
outsl
or
xor
fs
fdiv
or
jge
sbb
loope
ficoml
dec
daa
xor
popf
mov
mov
fisubl
push
and
pop
inc
mov
xchg
mov
decl
inc
ja
adc
inc
leave
inc
push
inc
sarl
xor
pop
inc
mov
bound
dec
xor
adc
pop
popa
pop
out
jno
popf
sahf
aam
dec
sti
xchg
jle
ret
in
loope
xchg
rolb
addr16
mov
rcl
jg
inc
aas
into
repz
lods
outsb
aam
std
aas
sbbl
cmc
xorb
cmp
fdivrs
xchg
imul
ljmp
lret
ficoms
pop
stc
or
dec
sbb
pop
add
sbb
dec
test
add
test
mov
jb
cld
mov
cmp
data16
and
cli
fmul
cmp
mov
pusha
scas
mov
pop
and
sarl
cmp
pop
and
sub
sub
pop
ret
sub
cwtl
pusha
dec
stos
inc
cmp
fmull
adc
inc
pop
mov
out
push
sbb
inc
lsl
lcall
jo
pop
mov
xchg
inc
adc
xlat
sti
lods
and
test
xor
shrb
jl
inc
jp
icebp
push
fisttpll
pop
sub
adc
lea
test
sarl
sbb
add
pop
add
lret
mov
push
loopne
es
iret
mov
std
xor
ret
inc
pop
mov
rorl
xor
lcall
ret
repz
or
add
mov
push
add
push
lods
cmp
pop
subl
pop
cwtl
sbb
lds
hlt
outsl
jnp
sbb
ja
fisttpll
test
jne
sub
repnz
popa
sub
add
mov
pop
sub
neg
stos
xchg
jb
mov
std
add
mov
mov
popa
mov
mov
and
mov
cmp
sar
out
aad
pop
xlat
inc
lcall
xchg
dec
cmpl
push
inc
sahf
scas
sbb
sbb
xorb
ja
cmpsb
loop
mov
cwtl
inc
mov
push
xor
int3
xchg
push
and
jo
and
dec
add
jo
lds
repz
jle
adc
mov
add
into
clc
rcll
int
ss
outsb
xor
into
faddl
daa
push
push
stc
movsb
inc
rcrb
arpl
push
adc
ret
jae
and
cli
jp
pop
das
adcb
xchg
int3
mov
test
dec
sub
xchg
jl
dec
test
jg
nop
and
repz
mov
push
xlat
mov
cmp
cmp
lock
mov
outsb
add
test
fnstsw
cltd
fldl
sub
mov
cwtl
int3
les
popa
mov
outsl
xor
xchg
xchg
push
push
xchg
clc
sub
scas
mov
scas
jae
adc
imulb
js
pushf
cmpsb
fs
push
stos
insl
notl
fs
loop
pop
mov
hlt
sub
cmp
out
jl
add
push
fisubs
pop
shll
and
cli
adc
pop
sub
int3
insb
cs
xchg
daa
jge
adc
xchg
mov
pop
test
and
pushl
sub
movlhps
mov
xor
pop
fisttpl
push
push
mulb
mov
gs
jb
scas
mov
xor
std
cmp
inc
insb
aaa
fistl
mov
xor
mov
cmp
push
cwtl
rcr
sti
push
pop
mov
aam
dec
xchg
rorb
mov
in
mov
mov
cli
push
lahf
pop
xchg
dec
and
fistps
pop
je
push
dec
test
or
sub
push
lods
stc
xchg
sub
pop
inc
fwait
mov
xlat
mov
arpl
mov
mov
data16
mov
jnp
test
inc
sub
stos
stc
roll
sbb
insb
mov
repnz
pop
gs
mov
sub
pop
sbb
xlat
cmpl
fisubrl
mov
pop
adc
xor
test
inc
mov
lods
cmp
xchg
push
xchg
xor
mov
fidivrl
shr
lea
stos
aam
in
pushf
adc
repnz
lds
sub
push
cmp
mov
shl
adc
in
and
ja
xlat
lods
pushf
ret
ss
mov
mov
ja
sub
pop
or
pop
sbbb
mov
popa
adc
mov
repz
sub
repz
movsb
push
sub
int
cmp
and
bound
mov
cmc
data16
andb
adc
xor
shrl
jecxz
mov
dec
mov
je
rcrl
testb
std
push
shl
arpl
cmp
loope
mov
movsb
xchg
or
dec
ret
rclb
xor
and
cmc
sub
out
fsubs
lahf
outsb
jg
cmpb
in
dec
cmp
mov
cmp
sub
je
adc
or
mov
jbe
nop
add
lret
ljmp
xchg
pusha
mov
mov
out
fld
stc
das
sti
lea
test
pop
sbb
adc
inc
or
xchg
inc
pushf
or
cmc
mov
int
bound
mov
cld
pop
push
imul
imul
or
gs
sub
jo
fisubrl
loope
xchg
fldl
add
popa
pop
int3
gs
sub
jb
data16
ja
rcll
in
jno
sub
or
cltd
enter
rcrl
cld
sub
jge
idivl
into
stos
pop
mov
jle
rcl
lret
jbe
movsl
inc
cmc
and
and
lret
adc
std
lahf
sub
ja
divl
ret
jp
clc
dec
test
ss
or
out
data16
sub
adc
std
mov
add
mov
pop
mov
adc
int
mov
cmpsb
sbb
insl
cmp
sub
mov
push
daa
int3
jnp
out
es
inc
and
lock
andb
daa
test
cmpsb
aam
mov
ret
popf
movsl
mov
adc
cmp
mov
dec
add
push
dec
dec
pop
dec
xor
jbe
out
xor
daa
push
bound
adc
jmp
jns
dec
lock
mov
icebp
sahf
or
cwtl
adc
outsb
push
les
orl
jb
lock
rcrb
jl
sbb
sarb
add
and
pop
push
fwait
pop
cmp
inc
mov
lcall
jb
das
adc
and
push
arpl
outsb
pcmpgtw
xchg
and
xor
aad
iret
rol
jge
dec
pusha
leave
fcmovnb
inc
and
cld
jo
fldenv
call
adc
mov
pushf
inc
cmpsl
mov
imul
fdiv
push
push
enter
jae
and
push
sarb
mov
mov
sub
fnstsw
out
cmp
adc
cmpsb
pop
push
jns
rcrl
out
pop
mov
outsl
mov
dec
inc
dec
blcmsk
and
scas
xchg
mov
push
mov
lcall
ret
and
insb
mov
push
movsb
xchg
inc
loop
pop
jle
jecxz
xor
xchg
daa
test
adc
addr16
and
mov
movsl
mov
ficomps
outsb
inc
xchg
mov
push
addr16
test
cmc
aas
flds
xchg
dec
in
mov
pop
or
adc
cmp
es
pushf
fdiv
sub
jg
lahf
cmp
push
fsubp
adc
pop
mov
or
aaa
dec
pop
and
sbb
inc
xor
sub
push
cmp
mov
add
cmp
mov
sub
cmpsb
or
sbb
pop
jno
dec
fldenv
scas
rcrl
dec
inc
lret
push
sbb
xchg
mov
fistl
mov
and
mov
sub
shrb
sbb
adc
fisttpll
sbbb
bound
jmp
in
lock
aaa
lock
add
fistl
pop
in
mov
push
in
xchg
pushf
mov
push
or
insb
enter
shl
jo
inc
fisttpll
xor
ror
inc
cmp
xchg
lock
test
pop
insb
shl
xchg
popf
add
shlb
jecxz
pop
adc
sbb
arpl
sbb
bndstx
ret
mov
mov
ficoml
sahf
inc
shl
sbb
and
push
and
mov
pop
testb
ret
test
ret
and
xchg
dec
iret
sbb
jno
call
inc
setns
xor
mov
popf
jecxz
cs
je
add
jnp
push
pop
pop
dec
inc
int
pop
adc
dec
cmc
es
pop
mov
mov
adc
xchg
or
mov
stc
int3
xorl
jge
mov
popa
shll
xor
les
or
call
fs
mov
xchg
sar
decb
movsl
and
xlat
shr
pop
lock
adc
or
stos
sbb
dec
jecxz
jl
scas
mov
fistps
in
scas
sbb
adc
xchg
outsl
int
test
mov
mov
pushf
cltd
sub
arpl
mov
mov
repnz
aam
rol
pcmpgtd
sbb
adc
adc
dec
mov
call
jmp
int3
imul
call
or
jb
data16
xchg
ss
lret
dec
mov
je
clc
xor
cmp
cmp
stos
dec
dec
xchg
pop
dec
or
push
ret
pop
cld
jb
dec
sti
jae
loopne
repz
dec
lods
lock
push
mov
shlb
push
push
clc
fimuls
aam
iret
mov
cmc
cmp
fildl
sahf
mov
das
mov
jb
mov
pop
pop
lret
ja
mov
pusha
mov
sbb
addl
mov
xor
inc
lods
fcmovnbe
insl
in
addl
push
or
cld
push
fisttpl
ret
mov
jle
xchg
sub
mov
adc
and
in
bound
sub
or
int
std
jns
les
and
ret
in
insl
in
sub
add
or
dec
cmp
test
dec
lea
adc
pushf
cmc
xchg
loopne
loop
stc
call
jmp
cltd
xchg
mov
pop
and
outsl
xchg
xor
inc
sbb
xor
in
push
mov
cmpsb
iret
dec
enter
dec
mov
mov
mov
pop
jo
inc
add
pop
sbb
outsb
jo
xor
adc
mov
roll
ret
adc
std
shrl
in
inc
cs
roll
out
jl
rclb
xchg
mov
lods
dec
xorb
loop
ret
pusha
call
jmp
out
out
inc
out
sbbb
out
dec
out
bound
adc
inc
rcll
rolb
shl
rolb
addb
rolb
adc
mov
lret
sarl
pop
sar
loop
int
or
jne
or
push
mov
push
add
inc
or
push
clc
dec
scas
dec
rorl
js
imul
jnp
push
dec
dec
push
push
xchg
push
test
push
cmp
and
mov
out
inc
je
jecxz
push
and
movsl
sbb
gs
xor
mov
pop
sbb
ds
xchg
fsubr
push
orl
mov
dec
ss
inc
xchg
lahf
sbb
jl
mov
adc
loope
ss
inc
add
jg
mov
gs
lea
or
inc
xorb
or
imul
fisttpl
xchg
ret
cmc
addr16
cltd
jmp
pop
movsb
popl
lock
and
dec
add
sbb
mov
xchg
xchg
jl
or
out
es
xor
fistl
pusha
xchg
test
mov
mov
jns
cmpsl
in
ds
cmpsl
gs
add
inc
mov
mov
xor
cltd
outsb
inc
push
cltd
push
cmpsb
inc
mulb
xor
lods
cmp
aas
rolb
mov
mov
imull
mov
xchg
xlat
dec
mov
mov
ja
out
pop
inc
sbb
repnz
loopne
ds
pop
scas
xor
mov
pop
dec
mov
or
xor
xor
xor
out
pop
aaa
mov
cli
fldl
lock
idivl
decb
decl
xchg
jecxz
adc
ror
sti
sub
mov
add
add
mov
sbb
adc
adc
fists
mov
decl
cld
aam
pop
decl
xchg
mov
push
or
xchg
cmp
cwtl
or
sarl
lods
or
idivl
pop
sub
push
inc
stos
jbe
inc
inc
and
cli
add
lds
inc
cmc
mov
mov
cmpb
and
xorl
push
mov
or
ficoml
mov
dec
dec
dec
mov
dec
dec
jp
mov
movsb
stc
cmp
add
jne
insl
les
roll
dec
arpl
mov
lret
jle
sarl
fisttpll
mov
mov
xchg
push
shll
push
dec
pop
das
data16
aam
pop
ret
movsb
pop
in
sub
fisubrl
sbb
sub
repnz
lods
pop
stc
push
inc
cmp
fisttpl
stos
sub
lahf
push
cli
mov
adc
test
into
mov
imul
push
sub
xor
lcall
pop
repz
test
loopne
int3
or
sarb
daa
mov
or
lahf
stos
jg
pushf
int
mov
mov
loop
int3
adc
jnp
mov
pop
jle
sbbb
mov
xchg
aam
xor
xchg
jmp
xchg
out
adc
or
dec
push
movsb
inc
mov
add
lret
xchg
jo
sub
xchg
adc
mov
scas
rcrl
cmp
cmp
loop
stos
mov
adc
and
jno
fbld
pop
mov
cmpl
mov
flds
mov
mov
sti
sbb
lods
cmp
xor
std
cld
dec
cmp
int3
mov
pop
movsl
cmpsb
jbe
push
das
leave
out
imull
jbe
fsubrs
mov
es
jmp
sahf
sahf
jno
aam
ja
movsl
jno
mov
ftst
jae
inc
stc
std
pushf
iret
dec
cmpsl
or
cmp
sbb
or
mov
jmp
adcl
lret
mov
inc
movsl
mov
push
hlt
add
stos
xchg
aaa
dec
ret
mov
mov
pop
jge
dec
into
mov
inc
push
dec
daa
popa
xchg
and
xchg
dec
lahf
push
hlt
jnp
imulb
adc
ret
mov
pextrw
xor
rolb
inc
xor
mov
das
pop
mov
enter
sbb
mov
sub
push
movsb
adc
cmc
sbb
bnd
pop
mov
jmp
lahf
mov
imul
pop
mov
push
sub
dec
sub
and
mov
pop
or
cmpl
leave
dec
movd
in
ja
das
out
addl
nop
dec
sub
es
cmpsl
push
add
rorl
fstsw
push
add
add
subb
pop
jp
xchg
mov
jbe
ss
pop
clc
xchg
stos
cmp
lods
push
xchg
inc
scas
push
mov
fldl
lahf
popa
or
testl
dec
xor
xor
jae
sti
das
mov
andl
add
xorl
in
lcall
cmp
adc
mov
adc
loop
mov
fistps
fwait
cmp
push
imul
mov
dec
add
pushf
out
jns
int3
cmp
lods
addr16
cmc
filds
js
call
cwtl
mov
lahf
pushf
cld
mov
dec
icebp
add
mov
pop
loopne
rolb
and
cs
rclb
inc
mov
int
jl
cmp
sub
and
push
jb
in
int3
fbstp
shl
mov
mov
loop
sbb
inc
push
bnd
pause
rolb
mov
ret
adc
xor
out
in
dec
into
xchg
sub
jno
and
inc
lock
ja
pop
rcrb
fldcw
mov
add
fistpl
nop
mov
xchg
xor
shl
mov
nop
out
or
cld
push
inc
mov
sahf
shl
pop
xchg
aas
dec
shl
pop
insl
mov
sbb
sub
adc
sub
push
mov
and
push
mov
cmp
xor
ret
mov
jns
dec
inc
stc
jbe
mov
rcrl
hlt
jnp
add
shlb
in
push
scas
loop
dec
and
clc
std
sub
adc
push
jle
xchg
add
mov
xchg
ds
jnp
adc
scas
pop
add
lea
mov
xchg
cmp
xchg
mov
rolb
decl
jg
hlt
push
stos
mov
pop
ret
pop
mov
ljmp
jo
repz
mov
jne
sub
sbb
addr16
adc
and
and
mov
mov
jnp
ds
movsl
pop
cmp
test
leave
outsb
cwtl
in
dec
je
fidivrs
mov
cld
jb
xchg
test
je
out
fsubr
inc
and
cmp
out
xchg
xor
ret
add
sti
into
push
aad
cmp
jge
ret
enter
pop
cwtl
je
push
and
xlat
sub
ss
xchg
movsl
sarl
xor
imul
icebp
xor
mov
test
js
mov
push
test
xor
test
scas
nop
cmp
inc
xchg
xchg
sub
out
pop
loope
repnz
mov
sbb
rcrb
faddl
mov
std
mov
cld
add
ljmp
bound
dec
sar
hlt
shll
sbbl
ljmp
xor
into
adc
lods
mov
pushf
cmp
lcall
dec
daa
push
jp
lea
ret
jecxz
movsb
mov
sbb
imul
std
test
lret
xchg
xchg
pop
and
mov
cmp
aaa
jecxz
push
or
pop
dec
pop
in
xor
stc
pop
loop
data16
jbe
fcoms
adc
data16
scas
mov
pop
pop
pop
or
pop
scas
push
mov
push
push
lea
mov
dec
rcrb
imul
enter
in
inc
rorl
loope
popa
cli
dec
test
lds
mov
push
mov
push
mov
jge
mov
adc
jnp
xchg
mov
add
cmpsb
adc
rcll
mov
pusha
adc
in
pop
jo
xor
lret
inc
and
and
insb
xchg
jno
movsb
stc
js
testb
and
xor
or
xor
push
mov
xor
lods
push
rcl
sbb
mov
lcall
shll
cmpb
out
popf
aad
mov
mov
lods
arpl
adc
pusha
mov
adc
push
cmp
xchg
in
dec
push
outsb
cwtl
jae
movsl
repz
in
shlb
in
sbb
in
xlat
mov
dec
add
fcmovu
ret
arpl
cmp
mov
jnp
nop
js
mul
pop
mov
pop
jno
int3
test
mov
fmull
rol
cwtl
ja
shlb
int
psadbw
mov
inc
jl
mov
mov
cmp
rcll
sub
push
cmpsl
mov
cmp
inc
lods
sbb
incb
rolb
fnstenv
hlt
mov
pop
clc
subl
repz
inc
incb
mov
dec
popa
mov
pop
mov
leave
ret
mov
jno
and
bound
and
pop
decb
nop
xchg
xchg
mull
mov
clc
pop
out
mov
dec
jge
ja
push
out
mov
cmp
jle
push
pop
jnp
inc
repz
mov
das
out
inc
xor
mov
xchg
adc
daa
pop
jg
ret
shlb
push
mov
lret
mov
mov
jmp
lea
push
push
pusha
imulb
call
xor
ljmp
xchg
leave
stc
cmp
nop
dec
je
pop
mov
push
push
mov
sbb
les
pusha
xchg
sbb
std
pusha
shrl
outsl
mov
scas
pop
mov
fstpt
or
add
add
xor
xor
es
adc
mov
fmuls
xchg
stc
mov
cmovne
stos
data16
adc
xchg
pushf
iret
sbb
pop
das
iret
push
pop
scas
pop
cs
sbb
mov
sbb
jnp
in
not
imul
sub
int3
out
xchg
or
imul
test
add
insb
mov
cmp
int3
jmp
mov
push
das
cwtl
ret
xchg
fs
fmuls
sahf
or
or
mov
fldt
outsb
and
dec
and
mov
mov
je
and
out
clc
addb
mov
aas
rclb
lahf
or
int3
out
add
sti
inc
push
gs
mov
mov
mov
nop
ret
cmp
decl
xchg
nop
lods
pop
or
movsb
pop
or
pop
or
dec
inc
push
dec
inc
dec
xor
add
add
add
add
je
jb
arpl
fs
jae
add
add
add
add
add
inc
add
inc
