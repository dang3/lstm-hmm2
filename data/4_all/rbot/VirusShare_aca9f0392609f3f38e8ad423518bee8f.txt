pop
push
mov
mov
sbb
lea
pop
mov
pop
jge
scas
and
in
mov
imul
xchg
sub
sbb
pop
scas
sbb
sbb
xchg
jnp
jmp
outsl
pop
je
jbe
cmp
sub
cltd
sbb
sahf
mov
jbe
leave
fbstp
push
or
push
ret
out
sbbb
push
jbe
fsubrs
outsl
rcrb
lock
pop
and
idiv
ss
adcb
sub
sub
push
stos
add
xchg
outsb
addr16
test
bound
or
ret
cli
and
clc
out
push
mov
ret
shr
ficoms
js
push
sbb
ss
sub
cmp
or
aad
inc
insb
mov
mov
jecxz
mov
scas
xor
cwtl
js
cmc
or
push
aaa
jbe
lahf
push
adc
iret
mov
movsb
out
or
testb
fwait
xchg
sbb
stos
adc
repz
dec
cli
cli
sahf
mov
subb
cmp
jp
xor
loop
mov
or
and
inc
sbb
jns
cltd
jl
dec
push
fs
adc
in
mov
cltd
aad
int
pop
test
std
fidivl
add
push
lods
mov
fsubrp
and
cmp
cld
ret
and
inc
test
fcompl
push
test
icebp
les
jne
pop
and
jle
jecxz
js
mov
xchg
xor
pop
mov
push
or
or
or
bound
cld
push
adc
das
enter
sub
subl
add
sub
fsub
cld
jg
outsl
and
adc
repz
f2xm1
movsl
mov
or
sbb
mov
xchg
sub
cmp
sub
sahf
push
call
push
mov
and
ret
sub
push
jbe
out
fdivl
ss
push
pusha
jl
mov
jl
sti
idivb
cltd
pushf
and
pop
mov
nop
ror
in
jle
jo
pop
xor
fstpl
jge
sub
imul
xchg
fsubs
mov
or
nop
mov
xchg
xchg
and
xchg
xor
pop
test
js
daa
jp
sub
loopne
adc
dec
arpl
lods
mov
sub
mov
int
jbe
push
pop
mov
out
cwtl
and
mov
cld
les
jle
scas
adc
hlt
or
or
fiadds
jb
pop
and
mov
jl
mov
rcr
cld
lds
jae
inc
scas
cmp
test
subl
xor
fcmovnbe
mov
xor
or
out
xor
inc
cs
jg
dec
push
jbe
sbb
call
pop
ds
xchg
inc
bound
sbb
pop
adc
xor
jge
push
cmp
lds
rorb
in
inc
pop
dec
in
imul
clc
dec
stos
shl
xchg
stos
lret
pusha
mov
jl
cmc
jbe
jg
mov
mov
sub
sahf
mov
mov
and
xchg
in
insb
repz
test
push
cmp
mov
push
xchg
adc
iret
jge
jl
ljmp
xchg
mov
cwtl
decb
cli
dec
bound
imul
popf
cmp
cmpsl
push
repnz
xchg
adc
or
cmp
movsl
ficompl
pusha
push
sbb
arpl
ret
mov
jle
rcrb
lds
loopne
loope
sub
lcall
dec
mov
sbb
add
xlat
lahf
out
mov
pop
dec
lock
xchg
sbb
adc
mov
sub
dec
fcmovb
push
mov
loop
outsl
lcall
dec
inc
pop
outsb
mov
cld
sbb
lahf
fstpt
xchg
xchg
in
mov
cmp
sub
pop
push
mov
out
add
xchg
mov
mov
ret
mov
cmp
rolb
pop
fdivrs
sbb
jmp
push
inc
jnp
jle
pop
fcmovnbe
mov
cmp
lret
shl
fucomip
cs
loop
pop
xchg
lods
cmp
js
mov
xor
lret
mov
lods
dec
movl
xchg
pop
sub
jno
pop
or
adcb
sbb
pop
lock
fnstenv
stos
pop
pop
cwtl
clc
adc
popa
push
aam
cmp
stc
xchg
inc
aam
cmp
cmp
rorl
inc
movsl
or
inc
sbb
stos
in
xor
xorl
sarb
js
push
or
pop
add
xchg
jge
and
stos
xchg
mov
xchg
js
ud1
push
fcomps
daa
mov
out
mov
dec
mov
add
sub
out
cwtl
ljmp
aam
xor
jg
sub
and
cmp
and
inc
outsb
fbld
pop
xchg
out
pop
je
scas
test
mov
inc
adc
cwtl
jg
jbe
add
je
add
and
inc
mov
stos
mov
dec
decb
movsl
mov
lahf
aam
sbb
inc
frstor
clc
and
add
imul
mov
outsb
and
xor
test
push
push
mov
add
dec
mov
stc
sbb
pop
xchg
insb
fs
jp
sbb
add
xlat
adc
jle
jecxz
cmpsb
mov
fdivl
into
stos
add
sbb
mov
xor
outsb
out
aas
push
xchg
dec
dec
lods
inc
fmul
sub
mov
push
mov
mov
xorb
mov
aaa
add
mov
pop
test
jg
cmp
lds
in
push
push
rclb
fistpll
ret
xlat
jle
lds
imul
clc
jmp
mov
pop
test
add
sub
jl
dec
loope
stc
je
insl
mov
jp
fwait
mov
xchg
and
xchg
xor
adc
andb
mov
xchg
rol
sub
inc
jae
cmpsb
mov
ret
data16
jno
mov
jge
out
scas
ror
mov
adc
dec
sub
stos
dec
push
cltd
inc
mov
push
int3
stos
dec
xchg
or
cmp
aam
jp
xorb
js
test
in
imulb
scas
fcoms
push
mov
inc
cli
cmp
sub
mov
into
rcll
pop
or
out
cmp
and
lock
cmp
and
push
pop
mov
ljmp
or
shrl
add
leave
repz
outsl
push
inc
movsb
xlat
loope
fsubs
ret
mov
or
push
pop
lahf
mov
scas
mov
outsb
cmp
adc
xchg
aam
xor
and
movsb
push
fnstenv
cmp
int3
mov
fbstp
jb
ret
loop
mov
lgdtl
out
call
cs
ret
jp
mov
xchg
jmp
xor
js
dec
call
sbb
repnz
lahf
and
mov
pushl
cmpsb
arpl
iret
mov
sbb
mov
fisubs
push
fdivs
jge
std
mov
out
ss
movsb
hlt
popf
mov
push
jb
sub
jns
mov
jl
add
dec
or
and
pop
fwait
enter
mov
clc
pop
push
shl
sbb
sub
mov
sbb
gs
fwait
lcall
ret
fnsetpm(287
inc
xchg
imul
js
fsubrp
test
int3
aam
repz
insl
push
repnz
clc
cs
adc
insl
sbb
xor
jp
adc
sub
mov
mov
cmp
fildl
bound
sahf
dec
idiv
fdivs
int
pop
add
cmp
out
inc
mov
xchg
subl
sbb
sub
andb
js
add
jmp
shrl
dec
pusha
pop
mov
es
mov
and
pop
adc
add
inc
div
shl
jo
scas
inc
lea
jmp
xorl
lods
call
mov
stos
push
sbb
mov
xchg
insl
ficoms
pusha
fsubr
inc
movsl
lret
jnp
loopne
push
fstpl
and
mov
lcall
cmpsl
test
cmpsl
add
cltd
or
in
mov
dec
pop
divb
mov
and
mov
mov
fistpl
jl
push
push
das
popf
movsb
mov
loopne
mov
mov
xchg
or
lret
mov
rcrl
sarb
jmp
xchg
mov
dec
push
leave
out
mov
jno
rclb
mov
lock
mov
out
xchg
cltd
decl
in
sbb
pop
push
inc
dec
testb
pop
iret
ljmp
loopne
fs
mov
hlt
sarl
in
imul
and
jae
push
lret
push
xor
fidivl
cmpsb
int3
cmpsb
mov
movsl
test
aam
mov
fwait
mov
adc
je
pop
push
sub
xor
leave
dec
mov
int3
pop
and
faddl
stos
fsubr
test
sub
sub
pushf
adc
and
ficoml
sbb
popa
dec
das
jl
inc
ss
push
rorl
popf
add
clc
mov
scas
push
cmp
dec
and
fldcw
jae
daa
inc
test
sbb
or
cld
pop
mov
iret
repz
popf
stos
jmp
xor
aad
push
fiaddl
add
inc
in
jns
adc
mov
mov
fnsave
stos
stos
add
or
arpl
pop
loope
lret
sbb
add
mov
and
jg
sarl
sbb
jb
out
cmp
jo
js
je
fidivs
ret
xchg
and
std
js
push
pop
cmp
addr16
fistps
sub
ficoms
mov
leave
ss
inc
int
cli
or
adc
lods
xor
loope
adc
ss
or
mov
mov
cmp
mov
xchg
aas
data16
insb
or
ljmp
mov
pop
ds
add
pop
and
cmp
into
adc
add
cmp
mov
sub
loop
imul
jbe
pop
fdivrs
sbb
das
cld
cmp
jae
mov
popf
mov
notb
scas
fimull
in
orl
dec
ds
sbb
rcrb
add
jbe
dec
cmp
stos
insl
cmp
jae
pushf
adcb
in
out
andb
xor
xor
nopl
jbe
sbb
sbb
mov
mov
stc
fdiv
ljmp
add
xor
dec
pop
test
xchg
add
and
cmp
jbe
inc
fsubrl
mov
addl
sbb
cmp
fidivrl
fstl
sub
mov
sub
mov
mov
adc
inc
jp
popa
or
and
stos
cmp
lret
pop
mov
mov
adc
stc
push
aaa
or
jmp
out
cli
mov
sub
pop
mov
out
dec
add
movsb
inc
pop
and
psllq
push
cwtl
sub
ret
imul
jnp
xchg
shlb
fstl
in
out
cmpsl
aam
jmp
insb
push
out
test
add
lret
xchg
aam
outsb
jb
xchg
pop
repz
cwtl
inc
xchg
and
ss
jns
jmp
popf
std
sub
shl
jmp
mov
push
cmp
imul
stos
lahf
mov
lcall
mov
xchg
fwait
mov
push
pusha
adc
ror
aam
push
xor
shll
dec
lods
and
rorb
addr16
xchg
xchg
dec
inc
mov
xchg
ret
sub
arpl
xchg
mov
push
mov
aam
test
filds
cmp
aaa
mov
xchg
iret
xor
adc
ja
cmp
push
xchg
shll
jno
addr16
push
roll
arpl
push
dec
stc
test
addr16
ficoms
loop
popf
addr16
xchg
sahf
lret
repz
insb
jae
outsb
popa
std
jns
mov
mov
cmpsb
repnz
dec
cld
fnstcw
add
push
int3
pop
ret
popa
les
or
mov
push
and
decb
push
jecxz
cmpsl
sub
pop
jmp
jecxz
mov
adc
push
push
pop
cmpsb
push
push
jmp
jo
fdivr
dec
cmp
cli
pop
sbb
int3
ss
dec
shr
arpl
xlat
add
cmp
stos
sbb
fdivrl
cmc
rorl
cmpsl
cwtl
cmp
insl
pop
or
jns
mov
mov
lods
andl
xchg
out
mov
or
jo
addr16
aas
jbe
std
es
gs
jp
lds
jecxz
in
dec
mov
int
nop
out
and
mov
cmpsb
pop
pop
shrl
movsl
dec
add
push
fwait
or
orl
pop
pop
shll
pop
and
sbb
out
rcrb
cwtl
in
dec
jmp
fidivrl
movsl
push
sub
push
inc
fcmovne
sbb
scas
mov
fistpll
add
imul
mov
inc
inc
shr
jnp
or
je
pushf
mov
fs
shlb
neg
movsb
les
push
pop
mov
cs
fbstp
pop
pop
loop
data16
mov
scas
pusha
push
add
dec
fimuls
xchg
inc
ret
call
or
sub
lcall
jb
outsl
cmc
mov
loope
orb
pusha
cmpsb
cld
mov
test
xlat
cmp
insl
mov
mov
dec
ret
pop
inc
xchg
mov
lods
mov
xchg
lods
les
cld
adc
adc
dec
xorb
stos
xchg
sti
dec
das
jmp
push
jle
adc
mov
call
pop
sub
sti
aad
and
or
mov
lret
xchg
mov
in
lock
sti
and
lret
out
mov
adc
out
adc
mov
dec
fbstp
ja
fidivl
jg
mov
inc
mov
inc
xchg
lret
mov
rep
les
jne
sub
shl
stos
cmovg
ljmp
sub
push
scas
lods
cmp
stos
push
imul
ret
fsubl
push
pop
mov
std
fisttpll
negl
push
sub
pushf
lock
push
jnp
push
push
adc
fidivrl
xor
ret
out
lock
in
test
push
rcl
mov
fbstp
mov
andb
mov
xchg
or
push
ret
movsl
push
and
in
ss
cwtl
pop
inc
and
shll
js
enter
test
imul
nop
loopne
insl
and
call
rol
stos
pop
cmp
jb
ret
dec
mov
imul
mov
and
pop
pop
hlt
andnps
dec
pop
dec
repnz
xchg
sbb
aas
mov
loop
aas
in
out
divb
push
or
xchg
mov
loope
stos
jg
xchg
or
inc
and
pushf
mov
lods
jecxz
or
lcall
fiadds
test
in
shll
out
lods
popl
push
mov
dec
arpl
add
pop
push
xor
inc
add
clc
jns
orb
daa
mov
int
fdivrl
out
mov
adc
fs
fldcw
iret
enter
std
int3
xor
std
test
push
mov
mov
sbb
pushf
mov
xchg
xchg
jne
int3
mov
adc
sub
or
xchg
jge
jbe
lds
test
sub
mov
xor
xor
imul
mov
fwait
sub
push
inc
mov
xor
mov
hlt
lret
ret
mov
xchg
jnp
fsubs
fdivrs
ss
sub
rol
stos
es
stc
ss
jg
fisubrs
mov
xor
dec
idivb
out
push
add
mov
xor
cmp
shll
fnstenv
fucomip
push
mov
xor
jecxz
or
into
mov
xlat
into
sbb
mov
jo
ret
xchg
or
movsl
mov
inc
daa
or
jmp
mov
sub
mov
sbb
cmp
popa
pop
mov
cmpsb
fcmovnb
std
jecxz
pop
dec
xchg
pop
add
inc
ffreep
es
add
hlt
jg
pop
stc
test
jo
shrb
xchg
dec
shr
sbb
pop
mov
cmp
sub
xchg
popa
mov
cmp
push
lea
rcr
jp
cmp
push
inc
fstl
aaa
mov
popa
xor
pop
adcb
pop
adc
or
inc
pop
lret
xchg
das
mov
jo
and
or
dec
repnz
call
stos
or
jmp
mov
enter
popa
cmp
pushl
push
sub
stos
out
or
push
mov
dec
movntq
fsubrl
xchg
adc
mov
dec
inc
sub
adc
sbbl
cmp
push
jno
fs
mov
dec
xchg
xchg
xchg
sbb
mov
add
sub
movsl
cwtl
popf
and
test
jmp
loopne
jae
xor
push
outsl
pop
mov
sbb
in
sbb
divl
daa
iret
fildll
jp
dec
mov
pop
lds
nopl
ds
mov
ljmp
iret
xchg
das
mov
inc
push
mov
cmp
lock
dec
out
sbb
je
stos
clc
sub
rcrl
jecxz
xor
push
rcll
add
adc
jg
ror
xor
movsb
dec
shl
jne
fmul
loope
popa
clc
cmp
push
mov
loope
or
jle
mov
add
mov
pop
ja
or
lods
jecxz
je
jge
les
xchg
push
jge
ret
adc
bound
mov
pushw
xchg
je
inc
fisubrs
mov
inc
jae
pop
lahf
test
iret
mov
cmp
cmp
inc
std
stc
xchg
loopne
inc
jg
mov
jmp
push
jle
xor
test
inc
mov
mov
cmp
fldt
cmpsb
sbb
pop
fidivs
lods
mov
fstsw
cmp
testl
hlt
out
sub
xor
cmp
lea
mov
aad
cwtl
pusha
cwtl
sbb
push
add
in
adc
pop
pop
sub
daa
cmpsl
inc
and
xor
out
mov
outsl
lret
xor
cmpsb
movsb
enter
xchg
dec
mov
sbb
xor
cmp
in
mov
fsubrs
imul
aas
ss
lret
pop
fsub
xchg
sahf
lcall
mov
iret
and
popl
loop
sbb
in
add
mov
sbb
inc
mov
xor
and
mov
stos
pushf
movsb
mov
rcll
mov
sbb
arpl
ja
mov
cs
sti
and
mov
adc
jns
jecxz
jo
pop
imul
outsb
and
out
inc
inc
rcrb
and
cmc
jns
xlat
jmp
sahf
xor
les
lods
push
scas
rorb
push
in
mov
loop,pt
out
ret
rcr
or
or
aam
xchg
pop
scas
test
push
aam
rcl
jne
jbe
insl
pop
inc
xchg
test
adc
add
rorl
jno
cmpsl
leave
test
repz
sub
das
lods
xchg
adc
xchg
jge
cmpsb
lds
jecxz
cmpb
lcall
or
pusha
cmpb
push
sti
ror
fsubs
ret
adc
mov
jnp
xor
push
jmp
xchg
pop
out
fnsetpm(287
std
lods
sub
and
insb
scas
repz
sub
pop
call
lock
mov
push
clc
cli
ret
push
mov
add
jg
mov
aam
test
jl
sbb
pop
nop
test
ljmp
call
mov
out
dec
add
imul
scas
adc
ljmp
mov
mov
out
dec
cmc
jecxz
inc
xor
pop
push
push
xlat
bound
rcl
xor
or
fidivrs
push
mov
popf
mov
xchg
pop
notb
add
pop
jo
jl
in
rorl
push
sub
aad
rcrl
adc
scas
rclb
and
pop
out
add
fcom
jne
add
cmp
aaa
and
je
mov
or
cld
sbb
mov
popa
jmp
dec
ja
mov
jecxz
mov
loop
out
cmp
sti
pop
fstpl
dec
imul
in
push
jge
and
cs
mov
ljmp
cmp
push
xchg
fs
or
aas
lret
sub
out
int3
ja
xchg
lods
pop
data16
inc
sbb
stos
mov
cmp
cltd
test
test
push
or
add
add
jae
adc
sahf
sbb
lods
mov
mov
pusha
add
add
loop
or
fdivl
jns
push
loop
pushf
out
imul
lcall
shlb
xchg
cmp
fistps
cmp
testl
je
cmp
jecxz
orb
sarb
hlt
add
add
inc
leave
xchg
xchg
xchg
lret
enter
mov
xor
ret
ret
inc
out
push
aaa
sub
mov
addr16
push
aas
out
jp
hlt
int3
push
insl
xchg
sbb
cmp
std
sub
arpl
mov
mov
cli
cld
dec
inc
mov
daa
inc
xchg
push
dec
movsb
jp
or
push
xor
jecxz
inc
cmp
cli
call
dec
xchg
mov
mov
pop
loope
fbstp
jmp
aad
cmp
add
cmp
mov
lock
loop
fs
les
lods
addr16
repz
clc
leave
pusha
call
out
cmp
scas
cmpsb
mul
xor
cmp
cld
pop
movsb
cwtl
dec
es
notl
arpl
mov
fistps
pop
ljmp
in
push
ret
out
dec
pop
sbbl
add
imul
bnd
inc
arpl
outsl
pop
bound
mov
pop
lahf
push
outsl
mov
data16
shll
sbb
mov
push
in
add
in
in
dec
pop
cmp
jo
scas
jno
inc
mov
jne
jge
xor
mov
or
xor
add
mov
dec
lahf
xchg
pusha
or
mov
xor
int
sub
push
inc
data16
sub
jne
addr16
shlb
mov
dec
fistpll
in
dec
int
cmpsb
push
popf
pop
inc
mov
ret
and
add
lods
movsl
add
lret
dec
xchg
or
fistpll
mov
les
cmp
lods
xchg
out
and
aaa
add
lods
fistpl
mov
adc
call
jae
cld
push
or
nop
in
jecxz
cwtl
in
int
lea
jbe
addr16
aaa
mov
ja
enter
sti
sbb
in
mov
cmp
scas
dec
mov
je
jmp
fadds
push
pop
aad
adc
jno
fcomp
cmp
xor
xchg
bound
mov
ror
out
jmp
pop
andl
test
adc
in
jmp
xor
cmp
mov
or
xchg
fcomi
lods
sub
dec
ds
stos
insl
mov
hlt
mov
sarl
jne
lds
lahf
pushf
add
inc
int
jae
jmp
jne
mov
dec
lret
xor
add
mov
flds
imul
sub
mov
rol
xor
mov
mov
sti
shlb
sbb
mov
lods
aaa
pushf
push
xchg
lods
add
mov
fwait
stos
js
data16
addr16
pop
scas
adc
xorl
or
mov
xchg
dec
sbbb
insb
fcomps
pop
shl
pop
arpl
sub
push
out
inc
loope
arpl
adc
mov
lahf
fisubs
adc
sar
dec
xchg
insl
mov
xchg
pop
std
sub
push
dec
pop
push
stc
adc
pop
cmp
aaa
mov
ljmp
daa
pop
lea
cmc
pop
int
push
push
adc
cmp
cmp
push
jno
sub
lods
pop
clc
out
test
and
call
mov
inc
mov
pop
and
xchg
dec
fucomip
call
mov
cwtl
std
or
ret
test
in
or
nop
and
lock
lret
cmp
movsl
ds
enter
sub
xor
icebp
dec
jmp
stc
in
out
cmpsb
push
sub
inc
mov
xchg
out
jbe
lahf
jb
fs
mov
imul
jl
cmp
int3
dec
push
leave
inc
rclb
ljmp
and
jecxz
in
push
fwait
pusha
xchg
add
mov
test
stc
add
stc
sarw
repz
mov
xor
mov
xor
fldenv
stc
xor
fbld
lcall
ret
cmp
xchg
pop
fsubrp
fcmovb
lret
lahf
xlat
jp
xlat
sarl
xlat
push
xor
xchg
fiadds
lcall
imul
mov
xchg
jl
sbb
les
or
and
je
int3
scas
test
imulb
adc
out
aas
mov
mov
vmovq
jo
xor
adc
out
lahf
jnp
fwait
arpl
bound
and
jmp
pop
je
das
xchg
sub
pop
and
scas
mov
cmpps
jne
jae
add
rcrb
std
insl
xchg
test
in
int
dec
out
fcmovb
mov
xor
jnp
dec
stc
and
or
mov
aas
push
loopne
jmp
pop
dec
in
fcomip
ret
ret
jl
pop
insb
jbe
mov
push
fwait
pop
addl
ds
cmp
adc
dec
subl
jmp
dec
in
je
in
test
pushf
cmp
jbe
mov
mov
sub
lret
xor
js
sbb
subb
mov
add
enter
sub
adc
xor
sbb
xchg
sbb
jg
cmp
cmpsb
dec
lods
stc
lock
fsts
mov
xchg
ret
pop
cmpsb
movsl
xchg
loop
mov
pop
xchg
repnz
loopne
std
pop
pushf
das
pop
or
test
fidivrs
xchg
fcmovb
leave
pop
repz
aas
mul
jg
fs
outsl
sub
sub
stos
sub
ficompl
mov
ja
sbb
out
and
insb
je
xor
shrb
jecxz
inc
inc
mov
jge
jge
aad
insb
in
cmp
lcall
pop
xor
or
xlat
out
add
and
pop
add
fcmovu
adc
pop
test
imul
pushf
dec
mov
jg
jecxz
sub
cmp
jb
fistpl
scas
scas
add
jp
ss
mov
int
out
xor
in
add
jo
testl
mov
adc
cld
and
jne
fs
addl
rolb
pop
inc
in
rol
call
out
lcall
es
ds
mov
xor
clc
or
lahf
data16
add
mov
mov
jns
js
in
mov
stos
je
xor
movsl
sub
das
ficoms
sbb
sbb
xor
rolb
cmp
or
mov
add
loopne
das
in
mov
fisttpll
lea
sbb
lahf
shlb
mov
shl
lcall
xchg
jg
imul
add
fimull
adc
out
sbb
add
xor
xor
sbb
and
add
cmp
push
sbb
push
imul
xor
mov
popa
ficomps
jp
and
popa
dec
vmovups
xor
push
sub
enter
mov
sbb
pushf
or
mov
jmp
out
push
sti
cli
mov
sbb
cmp
inc
mov
lret
jmp
and
mov
and
mov
push
jno
mov
mov
es
add
in
pop
jae
jmp
jns
push
xchg
addb
push
push
out
movsl
out
cwtl
jbe
jo
ret
mov
pop
arpl
shlb
mov
adc
repz
icebp
aam
sub
fsubl
jmp
ret
mov
lret
sarb
sub
push
or
xor
sahf
jle
cmp
mov
add
jne
das
jecxz
repz
and
adc
mov
fistl
sub
insb
decb
mov
cmc
jns
mov
mov
xchg
sub
scas
shl
inc
dec
insb
mov
rcrb
dec
divl
xor
je
xor
shlb
ficoml
out
paddw
ds
inc
ja
xor
push
loopne
push
ss
clc
repnz
pop
es
sub
lods
cld
or
dec
fwait
mov
out
push
adcb
pop
repz
adc
push
pop
mov
in
imul
popf
mov
call
push
cmp
xor
movsl
xchg
and
pop
sbb
std
dec
test
xor
sub
adc
jmp
rorl
pop
and
mov
loopne
or
pop
jecxz
xchg
add
pop
pop
sti
vmovsd
mov
shll
mov
int3
pusha
sbb
dec
push
aam
mov
hlt
pop
add
cli
mov
js
gs
mov
xchg
sahf
in
adc
pop
sub
xor
mov
add
shrb
insb
fwait
adc
add
addl
mov
inc
andl
and
fidivrs
sbb
cmc
insb
insl
movsb
push
and
scas
repnz
in
leave
jmp
add
clc
in
lahf
push
and
push
orb
shlb
int
xchg
pusha
pop
adc
call
insl
dec
dec
mov
popf
push
mov
mov
cmp
push
lds
mov
cli
sbb
popf
jl
push
adcb
add
and
pop
inc
mov
jo
jbe
ret
cli
xor
mov
xchg
mov
aaa
cld
mov
out
scas
stc
in
xchg
sub
pop
sub
jo
dec
sub
fidivs
jmp
pop
xor
addb
aam
sub
fwait
loopne
push
jle
iret
mov
cld
push
jb
test
fcom
mov
push
adc
inc
cmpsl
es
jae
mov
or
shrb
mov
les
pop
xchg
nop
test
adc
imul
mov
jmp
mov
jb
loopne
icebp
mov
dec
cmp
out
jg
pop
xor
shl
push
ret
enter
pushf
push
test
push
js
shll
inc
or
movsl
popa
imul
pusha
pop
shrb
ja
jbe
ret
into
xlat
mov
pusha
cs
leave
push
out
ret
lret
sub
inc
mov
xchg
sub
pop
dec
negl
cli
cmp
dec
sar
inc
xchg
cmpb
jno
xlat
sub
jecxz
inc
out
add
push
pop
mov
xor
or
in
push
or
pop
xchg
jp
lret
pop
inc
fwait
mov
daa
inc
test
lret
stc
sub
lahf
push
rclb
popf
or
lods
inc
int3
fmull
mov
adc
shll
or
mov
and
sarl
dec
mov
in
cltd
mov
mov
and
stc
inc
movsl
or
mov
lea
lods
call
and
mov
and
scas
sub
stc
cwtl
jbe
test
aam
mov
out
pop
mov
ljmp
jge
adc
notb
jns
xchg
sub
mov
push
mov
or
lock
mov
xor
ror
inc
idivl
sub
jae
les
cmp
or
sti
repz
hlt
mov
or
push
lds
sub
lcall
sbb
mov
jo
pop
dec
shrl
dec
ds
mov
fmul
mov
pop
add
jmp
dec
cmp
sub
push
jno
stos
outsl
dec
imul
cmpsl
and
mov
sbb
inc
push
mov
xchg
js
dec
es
xchg
sarb
or
insl
and
mov
mov
jle
mov
jge
in
shll
and
and
add
cld
or
clc
mov
das
clc
mov
cmp
out
jnp
push
fcompl
mov
add
out
add
pop
fstpt
jp
ja
pop
add
sub
gs
sbb
or
pop
mov
or
or
xchg
sub
call
dec
adc
inc
push
push
dec
dec
mov
cmpsb
push
mov
ret
xchg
in
inc
lahf
daa
add
adc
adc
jmp
addr16
std
inc
aam
cwtl
addl
jo
shlb
push
cmp
in
mov
mov
and
ret
xor
jmp
inc
iret
push
adc
aam
lods
mov
jo
adc
scas
andl
addr16
outsb
sbbl
push
lea
mov
jp
leave
scas
fistpll
shrb
adcb
pop
mov
jb
or
mov
insl
xchg
pop
xchg
stos
repz
sub
fdiv
sbb
iret
int3
or
out
dec
mov
lods
div
and
pop
and
fbstp
cmpsb
sub
fsubr
stos
ja
or
pop
out
xor
cmp
fisubl
push
xor
lahf
or
mov
dec
push
xor
push
or
xchg
js
stc
cs
jae
sub
int3
push
mov
fdiv
mov
sarl
sub
mov
in
mov
mov
push
sub
xchg
jl
adc
in
push
out
cwtl
sub
test
jnp
lea
sbb
sub
mov
sbb
adc
and
lret
and
add
push
pop
shrl
mov
dec
push
and
dec
pop
pop
pop
cmp
std
repnz
push
or
cmovae
push
cmpsb
test
movsb
cli
xor
pop
pop
adc
stc
cld
fildl
mov
aaa
repnz
inc
and
aas
ret
fwait
jb
push
ljmp
mov
pushf
icebp
dec
inc
ret
mov
hlt
jnp
stos
dec
jbe
mov
cmp
xor
adc
ret
dec
lret
test
lahf
cmp
add
ljmp
shlb
adc
dec
shrl
sahf
jbe
mov
pop
push
lcall
arpl
jns
or
imul
mov
jge
cs
adc
mov
dec
dec
aaa
pop
iret
pop
adc
test
ljmp
fisubrs
mov
mov
jnp
xchg
jb
cltd
lcall
test
fidivrl
int3
mov
mov
xchg
fdivrs
loope
xor
pop
inc
and
pop
ret
mov
pusha
cmp
push
mov
ja
ds
lock
pop
jmp
gs
les
sti
in
mov
clc
sub
adc
adc
mov
fdiv
mov
jg
loop
xor
sub
loopne
out
or
daa
sub
lahf
rclb
mov
mov
aaa
mov
mov
cmp
stos
notb
mulb
call
mov
repz
inc
push
sbb
cmc
icebp
shll
ds
mov
pushf
mov
mov
or
stc
sarl
adc
sub
sub
sbb
add
pop
movsb
jbe
xor
sahf
popa
call
std
inc
aad
popa
add
sbbl
mov
stos
not
dec
in
cmp
pop
pushf
dec
aas
fidivl
dec
adc
sahf
xchg
inc
mov
adc
out
xchg
in
movsb
pushw
or
xor
xchg
lcall
imul
pop
ds
out
out
cmc
inc
nop
call
cli
addr16
adc
cld
and
xchg
fldt
stos
cmp
adc
dec
pop
pop
mov
pop
pop
lods
enter
or
cli
outsb
push
aam
push
sub
lret
or
mov
aam
mov
scas
adc
sbb
call
add
ljmp
scas
int3
mov
mov
int
std
pop
outsl
call
lds
mov
xchg
sbb
cwtl
mov
call
ja
push
jbe
imul
or
push
dec
jno
notb
sub
jecxz
icebp
out
mov
movsl
popa
jnp
movsl
xor
mov
sbb
or
add
bound
jno
inc
sub
mov
sub
mov
cmp
pop
xchg
into
push
imul
inc
shl
pop
dec
sbb
cmp
fsubp
ss
inc
pop
loopne
jge
pusha
pop
dec
out
dec
inc
mov
ss
pop
notb
cmpsb
stos
sbb
stos
mov
inc
xlat
adc
sub
ljmp
mov
and
jge
or
sbb
cmp
jp
mov
sbb
pushf
sub
push
mov
rol
cmp
adc
cmp
or
add
call
push
repz
or
xor
xchg
cmp
fs
mov
subl
pop
popf
mov
movsl
dec
dec
iret
fidivrl
or
push
dec
loopne
xor
xor
dec
cmp
jecxz
lock
adc
test
push
jnp
fcompl
pusha
inc
jp
shrl
dec
stos
mov
dec
imul
adc
xor
and
scas
rcr
pop
lahf
cmp
icebp
test
aam
loope
cli
movsl
ljmp
adc
fbstp
add
ffreep
lret
pop
out
loop
mov
fsubr
popf
push
cmp
lcall
sahf
ss
enter
into
push
arpl
jge
dec
mov
inc
lcall
xchg
adc
test
js
cmp
sbb
lret
jnp
dec
mov
pop
pop
lods
mov
xor
xchg
jmp
bnd
arpl
insb
popa
add
pop
test
jns
cltd
rorb
inc
cmp
xor
clc
push
outsl
scas
mov
lea
hlt
dec
push
inc
sub
mov
sub
jle
cld
cmp
jae
ret
mov
mov
adc
sub
add
sbb
push
sub
in
dec
adc
push
sahf
lahf
shl
sbb
imulb
fbstp
fs
iret
push
aaa
fidivl
sbb
movsl
lahf
stc
mov
xchg
fwait
hlt
or
sbb
jmp
movsl
int3
or
jns
and
rolb
out
xor
mov
test
mov
mov
adc
repz
fistl
addb
fs
and
cmc
mov
sbb
xchg
dec
call
pop
dec
dec
mov
inc
cs
adc
data16
xchg
ds
es
inc
inc
ss
shrl
lock
lahf
push
mov
in
subb
push
jo
mulb
ljmp
daa
pop
enter
in
test
pop
js
mov
mov
dec
jl
xlat
dec
shll
sub
fwait
pop
xchg
add
fmul
xchg
dec
adc
pop
mov
popa
fidivs
out
les
fistps
xchg
js
iretw
loopne
pop
inc
repnz
mov
lds
stos
push
pop
addr16
push
test
xchg
or
adc
les
fcomip
pop
filds
gs
push
sahf
clc
std
aad
mov
pop
fistps
push
mov
pop
mov
lret
fstpl
push
dec
ret
or
jmp
repnz
addb
adc
adc
xlat
sub
out
pop
out
jp
xchg
push
arpl
scas
dec
inc
je
sbb
hlt
daa
pushf
out
out
xchg
pop
cmp
mov
in
push
xchg
aam
std
cld
push
jae
mov
stos
daa
xchg
xchg
jne
in
jno
adc
inc
dec
push
imul
lea
push
push
pushf
fimull
rorb
cmp
mov
and
jmp
or
add
xchg
push
call
push
or
inc
add
in
xchg
mov
jmp
ret
popa
sbb
or
pop
ret
std
jmp
cmp
pop
fsubrs
stos
mov
nop
cmpb
sahf
mov
je
xchg
and
repz
jl
xor
jmp
repz
inc
repz
dec
mov
dec
fdivp
mov
jecxz
clc
push
jmp
jl
inc
insb
inc
loopne
call
and
mov
lret
xchg
pushf
lea
sahf
sarl
mov
outsb
and
mov
fs
xchg
push
xchg
pusha
push
ja
into
rcl
mov
add
nop
mov
jg
or
fwait
sahf
adc
push
repz
aas
push
fcmovu
fildll
fisubl
mov
pop
sbb
and
xor
out
dec
cmc
fidivrs
roll
inc
sub
jb
shrl
clc
sub
sub
out
sub
xchg
ret
fcmovnbe
xchg
fisubrl
mov
std
add
sti
or
movsl
xchg
add
int3
push
cwtl
sahf
in
cmp
mov
jb
repnz
into
push
insb
psubq
or
out
mov
cmp
stc
loop
lock
xchg
xchg
sub
jae
outsb
xchg
sbb
es
es
jmp
insb
pop
push
xor
push
adc
dec
adc
popf
adc
jmp
ret
cmp
cmp
cmc
bound
xchg
rcr
das
xor
test
bound
shll
and
and
loope
add
mov
xchg
into
loop
jge
inc
outsb
out
aaa
pop
stos
in
dec
scas
fimuls
cwtl
movsb
repnz
int
pushf
adc
adc
add
jmp
les
sub
rcrb
loop
testl
test
ret
jbe
cwtl
push
mov
or
loope
cmp
enter
cmp
jno
cmp
sbb
insl
adc
or
pop
out
inc
div
sub
xchg
test
aam
int
inc
int3
out
dec
mov
dec
mov
sub
pop
or
mov
ret
push
mov
lahf
dec
adc
into
cmp
xor
xchg
ja
mov
sbb
pop
xchg
xchg
leave
leave
mov
add
shlb
fcomps
mov
mov
mov
cmp
xorb
inc
adc
xchg
and
les
dec
data16
enter
and
or
inc
inc
repz
loopne
lds
jb
mov
jle
test
in
or
xor
clc
les
lds
mov
push
mov
sbb
ljmp
sbb
dec
fcomip
in
subl
outsl
and
jp
mov
ficoml
mov
xor
out
cli
push
jle
adc
xchg
push
scas
cmp
pop
mov
enter
ret
mov
clc
mov
inc
pop
in
inc
outsl
xchg
jns
test
ficompl
sub
xor
outsb
cld
addr16
xchg
push
lods
ds
adc
or
inc
lock
arpl
test
mov
ss
mov
cmp
loop
inc
pop
dec
cli
aas
stos
and
xor
dec
ror
sub
out
push
mov
sub
insl
lods
sbb
jns
pop
push
lds
out
push
push
stos
insb
mov
push
jns
fstpt
push
mov
cs
adc
fistl
lcall
shrb
ds
xor
repz
lcall
pop
popf
push
cld
shrl
insl
cmc
fisttps
fstps
add
push
sbb
xor
mov
dec
leave
test
sub
push
mov
fistpll
adc
hlt
out
je
pop
out
andl
lods
call
push
mov
cmp
stc
testb
xchg
cmc
cmovl
push
mov
dec
stc
mov
test
divb
xchg
mov
je
rep
movsl
xchg
cld
cmpsl
cmp
pop
jmp
dec
push
ljmp
inc
jle
mov
out
jns
mov
imul
movsb
xor
addl
cs
in
outsb
pusha
out
pop
lcall
sub
fildl
jo
xor
lahf
js
repz
insl
jecxz
popf
push
jb
xchg
enter
adc
mov
pusha
cli
das
daa
rcr
in
mov
pop
daa
push
inc
repz
xor
ret
push
xlat
cwtl
add
pop
mov
imul
test
cs
mov
push
dec
mov
mov
lds
sbb
je
js
inc
fcoml
cld
das
add
fld
ljmp
mov
popf
sub
mov
cmc
push
and
pop
dec
push
push
test
xlat
in
pop
mov
jl
and
fmuls
addr16
mov
roll
hlt
sub
rorb
jne
jmp
shll
mov
jle
and
bound
and
inc
mov
sbb
jecxz
jbe
ret
cmpsl
enter
xor
sbbl
xor
or
pop
repnz
pop
aad
sti
mov
cmp
xor
out
xorl
rcll
insb
repz
or
mov
sub
das
jns
das
out
insl
lea
pop
mov
or
fsubp
mov
ds
ror
dec
loopne
dec
dec
outsb
je
jge
lcall
enter
ret
sti
loop
imul
mov
in
add
es
cwtl
arpl
fcmovbe
add
out
ss
in
movsl
pushf
ret
aaa
xchg
or
ss
mov
add
mov
jno
ss
xchg
orl
mov
scas
test
cmc
out
inc
dec
lahf
dec
sub
mov
fmuls
mov
pop
mov
pop
adc
fidivrs
xlat
jmp
daa
or
jb
testb
sbb
inc
outsb
movsl
mov
xchg
aas
cs
leave
sbb
cmp
sahf
xchg
lcall
sahf
cmp
lock
scas
mov
mov
pusha
xor
test
xor
iret
bound
adc
dec
cmp
jg
mov
mov
repz
sbbb
stos
outsb
mov
ret
mov
and
pop
test
insb
je
xor
xor
jo
cs
adc
lock
dec
je
push
pop
fsubl
xchg
cwtl
dec
pop
inc
add
inc
xchg
daa
insb
adc
cmp
or
xchg
jnp
lods
jno
and
out
or
push
sahf
je
sarb
xchg
jno
add
repnz
aaa
fmul
fstl
inc
xchg
mov
inc
loopne
mov
insl
mov
and
loop
push
mov
sbb
inc
daa
mov
divl
cmp
inc
dec
push
mov
inc
pushf
lcall
and
nop
sbb
lcall
repz
cmp
xchg
sub
adc
xchg
fwait
push
jmp
and
aad
xor
data16
pop
adc
mov
pusha
orb
sahf
out
pop
mov
xchg
xchg
push
test
push
sti
leave
addr16
mov
sub
cwtl
fcomi
push
xlat
xor
xchg
shrl
outsb
sbb
or
push
inc
mov
inc
jnp
adc
out
add
jle
cmp
enter
addr16
xchg
mov
or
mov
outsb
fidivs
imul
sarb
jl
out
les
out
sub
outsb
outsl
push
jl
adc
outsb
pop
push
in
out
sub
int
das
cmp
xchg
testb
incb
jg
into
rol
lds
push
popf
mov
outsb
mov
jg
pop
inc
xor
mov
mov
mov
lcall
andl
xchg
int3
aas
push
into
int
enter
fucomip
cwtl
repnz
adc
sbb
fistps
ss
inc
mov
int3
cmp
es
js
jle
fsubrs
mov
aas
mov
dec
cs
push
xchg
adc
sahf
js
add
stos
inc
lods
or
add
shll
fisubrs
mov
inc
test
mov
nop
push
add
ja
jmp
mov
das
fs
loop
xor
fmulp
jnp
shll
mov
adc
add
inc
xchg
mov
imull
jle
push
push
in
js
outsl
mov
pushf
jecxz
jbe
mov
in
fbstp
out
jne
adc
xlat
xchg
xchg
pop
adc
sbb
jno
outsb
push
push
jmp
addr16
sarl
xchg
hlt
lcall
mov
mov
sbb
icebp
cmc
scas
cmp
jecxz
xor
repz
sbb
mov
sub
or
arpl
xchg
addr16
mov
xchg
nop
push
jmp
cli
push
mov
adc
int3
das
nop
addr16
xor
cltd
std
and
rcrb
cmp
inc
cld
loope
push
sbb
lret
out
sub
jbe
sahf
into
cmp
dec
ss
out
sub
jns
jg
and
xchg
or
cmpl
jnp
inc
mov
add
pusha
cwtl
ffree
movsl
cwtl
imul
mov
cmpsl
pushf
cmpsb
out
adc
add
and
jle
stos
popa
push
pop
dec
jmp
cld
mov
lds
jo
pop
imul
jge
adc
aaa
add
or
clc
xor
push
dec
es
lahf
shl
mov
loopne
dec
mov
push
scas
cli
and
cmp
ljmp
ss
fldl
cmpb
out
push
movsl
inc
sub
cmp
jne
pushf
mov
das
shlb
add
jae
jle
out
adc
jg
mov
clc
push
repnz
out
jno
ds
add
stos
in
xlat
jb
sarl
lcall
pop
jmp
jo
jns
mov
adc
sbb
es
test
adc
xlat
hlt
call
sbb
imul
ljmp
rcll
adc
inc
sub
adc
ds
ljmp
push
fwait
push
inc
jl
mov
sbb
outsb
rcll
rclb
cmp
sbb
out
mov
adc
push
jl
xor
sbb
xor
lcall
scas
sahf
je
push
dec
lock
repnz
enter
mov
add
xchg
xchg
mov
cs
jns
mov
pop
shlb
cli
or
sbb
lahf
jmp
mov
jle
mov
dec
nop
inc
xchg
sub
sub
cwtl
dec
jl
cmpsb
or
mov
inc
and
leave
inc
add
adc
es
insb
dec
lock
mov
loop
popf
fwait
popa
pop
cmc
cmp
xchg
cmp
jle
pop
ja
add
repnz
loopne
std
mov
scas
stos
inc
cltd
inc
ret
lret
das
mov
mov
inc
xchg
ficomps
sub
incl
cmp
jbe
sbb
sbb
mov
xlat
enter
xchg
dec
dec
outsb
mov
decl
ds
inc
pop
inc
lods
push
cmpsb
mov
decb
pop
xchg
dec
cmc
pop
les
sub
int
inc
cmp
adcb
jp
sub
lea
cmp
push
jo
or
mov
int3
std
mov
lret
cmpsl
scas
daa
rclb
lahf
imulb
mov
pop
mov
aad
int
inc
jbe
or
divl
push
xchg
xchg
jl
mov
cmpsl
xchg
pop
out
test
lock
fists
inc
xchg
inc
pop
mov
dec
or
loop
iret
cmp
out
pop
xchg
ret
rclb
cltd
mov
hlt
fs
je
call
add
add
rcr
aam
addr16
pop
dec
or
jmp
push
inc
das
mov
pop
mov
outsl
jecxz
dec
insl
fisttpl
popf
enter
jne
cmp
dec
inc
xor
repnz
gs
or
cltd
imul
mov
inc
push
ss
imul
push
daa
fstpt
cmpsl
lods
mov
hlt
mov
jle
rcrb
jne
adc
loope
fdivrl
mov
mov
movsb
cmp
aad
inc
mov
add
daa
xor
mov
jbe
fidivrs
in
fdivs
sbbl
xor
xchg
push
das
push
nop
aas
jecxz
cmp
in
mov
pop
adc
movsb
filds
lods
inc
jge
addr16
jmp
mov
mov
lea
sti
dec
ds
pop
xlat
imul
into
fisubs
out
and
sti
jbe
sarb
dec
xchg
adc
iret
cmpsb
pop
pop
jecxz
cld
cltd
push
and
and
rcr
dec
icebp
shlb
mov
inc
mov
insb
add
mov
cli
mov
in
aad
sub
mov
mov
movsl
movsb
mov
sti
and
je
mov
xchg
mov
dec
fld
jmp
ljmp
out
pop
mov
out
mov
rcrb
fcoms
push
xchg
mov
inc
dec
mov
jne
hlt
jo
dec
mov
es
cwtl
xor
hlt
push
cs
push
mov
out
mov
pop
imul
sbb
inc
mov
inc
in
mov
lock
or
mov
clc
sbb
inc
jmp
lock
repz
outsl
sbb
minps
rcrl
leave
mov
jl
jmp
or
movsl
cmp
movsb
mov
add
adc
in
mov
lahf
mov
mov
mov
sub
dec
shlb
cs
push
ds
outsl
out
cmp
push
adc
or
pusha
and
xchg
mov
aaa
sbb
lret
mov
shrb
jmp
jle
jecxz
add
ljmp
inc
dec
mov
mov
mov
or
into
or
mov
out
ss
lock
xor
stos
mov
mov
loope
in
mov
mov
jbe
movsl
mov
jnp
arpl
aaa
dec
mov
dec
decl
pop
lcall
pop
inc
and
sahf
xchg
pop
mov
test
sahf
int3
push
adc
and
sub
js
shll
outsb
push
lock
dec
sub
out
mov
shl
adc
fstps
fldcw
jae
or
xor
cmp
addr16
xchg
jb
pop
mov
ljmp
inc
xor
pop
test
jge
je
mov
jmp
inc
mov
add
movsl
ljmp
mov
outsl
mov
lods
stos
cmp
je
jge
ss
sbb
inc
jmp
aaa
lcall
push
shll
xor
pop
jnp
int
arpl
mov
cli
fidivrl
aam
fldt
fidivs
mov
sub
inc
lods
sbbl
sub
xlat
fsubr
mov
xchg
out
or
mov
push
dec
dec
leave
mov
call
in
int
mov
push
sbbl
mov
call
sub
dec
sti
cmp
mov
jb
mov
mov
inc
pop
std
xor
and
insl
mov
ficomps
mov
rorb
dec
xchg
movsb
dec
jb
sbb
loop
lds
mov
pop
jmp
jo
nop
jg
std
xor
cmp
adc
inc
imul
std
negb
out
ljmp
dec
mov
add
mov
pop
mov
push
dec
outsb
push
lret
insl
cmpsl
dec
sub
jae
cwtl
jbe
pusha
rcr
pop
push
or
cmp
add
shll
xchg
jg
xchg
xchg
mov
xchg
pop
xchg
aad
mov
lods
stos
sbb
leave
cs
in
outsb
fdiv
push
and
adcl
mov
mov
pop
jge
xchg
outsl
jne
mov
mov
pop
insl
sahf
in
pop
mov
adc
arpl
push
repz
test
jae
mov
cmpsl
repz
in
jl
push
adc
dec
fistpll
xchg
insb
int3
arpl
es
adc
cs
push
xchg
rcrb
push
cmpsl
stos
or
repnz
inc
sub
mov
ficoml
jge
push
jmp
int
lret
test
outsb
and
pop
mov
and
add
xchg
sub
push
pop
div
clc
jg
pop
jae
jmp
loop
sbb
cmpsb
xchg
push
xchg
scas
mov
gs
sub
xlat
or
cmp
push
lret
dec
mov
adc
sub
mov
ret
mov
int
mov
add
dec
in
and
int3
pop
scas
sbb
in
lcall
popf
add
lahf
ds
clc
push
cmp
and
or
sub
xchg
pop
sahf
orl
scas
xor
inc
out
dec
cmpsl
adc
mov
mov
pop
je
bound
fs
and
cld
scas
pop
and
scas
divb
subl
pop
fs
stos
xchg
mov
xor
adc
adc
sbbl
aad
push
adc
sub
fwait
pop
mov
add
shl
dec
push
int
sub
fstpt
cs
aas
aaa
and
mov
jne
cli
test
and
sahf
lds
ja
repz
shlb
sbb
iret
jg
mov
mov
sti
or
mov
icebp
mov
ss
cwtl
inc
add
repnz
sub
sbb
arpl
out
ret
xchg
xlat
ja
flds
mov
cmpsb
push
mov
sub
jmp
bound
stos
loopne
xlat
inc
push
xor
mov
scas
add
add
sub
and
mov
push
lock
pop
jbe
jb
xchg
xchg
repnz
sub
cmpsb
insb
push
lds
push
mov
je
push
inc
jecxz
or
mov
pop
inc
xor
jb
pushf
mov
sub
out
js
mov
adc
or
cmc
add
cld
jno
adc
pop
sahf
insl
inc
add
inc
ret
push
test
popa
ret
jae
lods
in
pusha
popa
mov
xchg
sar
divl
cwtl
push
loop
jns
mov
aas
cmpl
mov
xchg
or
aad
testl
je
out
cmp
jg
push
push
adc
adc
fxch
push
xor
ror
scas
mov
es
popf
push
scas
pop
xchg
cmpsl
mov
ja
fisubs
mov
idivb
jp
repnz
xor
mov
lods
jbe
dec
std
mov
add
les
popf
pop
lock
or
out
pusha
inc
ret
pop
lods
pop
jmp
mov
push
pop
inc
dec
pop
push
data16
and
adc
fsubrs
fildll
add
inc
pop
add
xchg
mov
pop
jge
mov
cmp
pop
xor
mov
xlat
or
sub
cmp
iret
push
gs
sbb
mov
bound
dec
fwait
pop
inc
xchg
aaa
inc
mov
dec
xor
jge
loop
shr
xor
arpl
push
add
jns
cmp
cmpb
por
cmp
mov
pusha
cwtl
sub
loope
adc
stos
xchg
xor
enter
or
outsb
or
or
sub
pop
jne
in
stos
sbb
out
inc
fildl
xchg
imul
fdivr
add
lds
jae
or
inc
out
inc
ss
fdivrs
adc
ds
aad
mov
bound
push
repnz
in
outsb
test
fistpll
cmp
aad
and
lahf
es
add
adc
stos
movsl
mov
imul
mov
xchg
or
mov
xor
dec
adc
inc
mov
pop
lret
inc
xchg
lret
cld
and
lds
pop
mov
xchg
jnp
arpl
jnp
cmp
loop
das
xchg
ljmp
rcll
lret
or
inc
imul
std
lret
popa
outsb
lds
xchg
sub
add
mov
mov
xchg
xchg
movsb
mov
popf
mov
xchg
pushf
dec
sub
xlat
call
pusha
sbb
into
mov
aad
lea
test
sti
xor
sub
mov
lock
mov
lock
les
add
sub
mov
dec
fimuls
nop
out
or
popf
fnstenv
nop
dec
xor
iret
jno
clc
pusha
rcl
das
insl
test
push
and
popa
dec
cmp
jb
ljmp
jg
cmp
xor
sub
xchg
sub
testb
xor
adcb
mov
out
add
out
mov
dec
add
cmp
xchg
add
and
mov
pushf
pop
adc
mov
mov
adc
or
mov
fnsave
pop
dec
loop
sub
aam
shlb
sub
inc
orl
pop
repz
loop
cmc
jmp
idivl
push
ljmp
jle
jp
sub
pushf
imul
cmp
push
test
bound
adc
sbb
inc
inc
rolb
xor
enter
xlat
inc
iret
mov
out
stos
leave
repnz
mov
mov
aaa
push
dec
or
mov
push
popa
push
out
pop
sbb
movsb
push
mov
cli
xchg
add
in
push
andb
ret
jmp
rcrb
dec
repnz
bound
loope
mov
adc
inc
jge
mov
nop
rcrl
adc
mov
pop
imul
repnz
test
dec
sub
pop
pop
subl
inc
xor
jmp
lret
in
jb
leave
jb
mov
inc
xor
mov
mov
cmpsb
dec
mov
insb
enter
test
test
lock
jb
sbb
and
frstor
ljmp
cmp
sbb
ja
xchg
mov
out
add
test
mov
int3
xchg
in
pop
cwtl
xor
loop
ret
shrl
sub
mov
pop
ret
cld
lret
inc
sub
sub
inc
mov
dec
in
fiadds
add
shll
rorl
and
int3
push
leave
nop
repnz
not
adc
fwait
cli
push
sbb
js
lcall
lds
sub
js,pt
outsb
orl
push
ret
inc
add
or
xchg
cmpsl
in
or
test
fnstcw
fisttpll
gs
popl
adc
mov
enter
mov
mulb
fisttpl
lea
aad
or
fwait
mov
and
and
fsubrp
mov
cmp
frstor
pop
sub
dec
testb
cld
xchg
pop
hlt
adc
adc
xor
mov
inc
xor
push
lock
or
dec
mov
lret
xor
cmp
sub
ds
test
fsubrs
repnz
xorb
mov
test
je
cltd
mov
sub
or
jl
mov
test
xor
stos
adc
or
pop
cmpsb
sbb
fcmovnu
adc
fisubrl
orl
mull
push
in
pusha
shrl
fistps
mov
mov
rol
cmp
xor
nop
jns
xor
sub
jmp
sub
pop
shrl
fadd
sub
jo
cltd
les
outsb
aad
fiadds
jmp
xor
inc
sarl
and
jo
and
jmp
jp
sbb
cmp
mov
adc
out
pop
repz
push
out
pop
mov
sbb
fcoml
mov
stc
fwait
add
aam
push
xchg
testl
daa
jo
and
out
mov
insb
inc
je
and
and
aam
addps
in
pop
and
and
repnz
in
add
lods
test
imul
adcl
jle
out
out
in
mov
adc
test
sub
and
nop
movsb
push
jl
nop
or
xchg
jb
arpl
cmpb
shlb
sbb
clc
mov
hlt
prefetch
xor
stos
or
in
insb
pop
mov
jae
stos
pop
cmp
xchg
push
out
rclb
xchg
loope
jmp
in
scas
sub
dec
in
and
xor
into
sahf
sbb
mov
mov
sbb
xchg
test
mov
pop
fidivrs
divb
pop
lahf
push
and
js
mov
fisubrl
popf
sbbl
scas
xor
fidivrl
fcom
mov
iret
popf
dec
icebp
ja
test
clc
dec
hlt
inc
or
dec
lret
scas
je
popf
add
pop
sbb
mov
dec
sub
or
jns
pushf
mov
jne
imul
inc
lret
inc
push
and
cmp
pop
insl
cld
add
mov
mov
xor
mov
sahf
dec
mov
mov
lods
jg
jge
dec
and
mov
inc
not
cmp
outsb
stc
cmp
fdivrs
nop
or
scas
cmp
hlt
outsb
out
push
pop
subb
cmc
ret
inc
sahf
mov
mov
add
push
cmp
xchg
pop
xor
in
mov
xor
pop
lcall
or
xchg
xchg
jo
andl
shll
imul
iret
xchg
sub
adc
and
mov
enter
repnz
js
in
fcmovb
push
test
fs
sti
ficoml
dec
nop
pop
cmp
mov
mov
xchg
nop
pop
jl
inc
jae
in
les
jecxz
inc
stos
shrl
xor
mov
fisubrs
je
jne
xchg
data16
test
mov
sbb
pop
shr
cmpsb
es
or
cmp
adc
or
aas
ss
test
fists
jle
jecxz
pop
mov
rorl
imull
mov
test
repz
lea
xchg
pop
notb
sub
sbb
adc
sbb
push
jge
repz
call
outsb
xchg
ja
movups
adc
mov
push
xchg
lods
rdrand
dec
dec
aam
popf
out
mov
das
in
cli
je
or
cs
push
pop
sub
add
scas
sbb
js
rorb
and
shr
push
sbbl
ret
fwait
loope
cmc
cli
into
sahf
sub
mov
in
insl
jno
insb
fs
dec
cmp
in
insl
push
inc
push
cwtl
loope
in
mov
in
push
mov
out
jae
cli
int3
dec
xchg
imul
mov
inc
test
loope
jmp
and
lcall
jae
mov
inc
adcw
sub
push
jno
push
and
jb
mov
push
add
jbe
or
sti
mov
pop
cli
mov
mov
or
test
movsb
stos
jno
mov
jb
xchg
xchg
fcom
cs
xor
jae
out
setl
add
fbstp
inc
outsl
fldcw
push
mull
mov
and
fiadds
aam
ror
cmp
lret
in
mov
and
mov
dec
pop
pusha
js
stos
or
mov
xor
aad
add
push
push
imul
or
sbb
mov
out
out
jo
sbb
pop
iret
push
jne
addr16
add
test
dec
lahf
aam
and
jg
fistpl
xlat
sbb
ss
xchg
push
xchg
push
cmp
sbb
mov
imul
cld
orl
insb
pusha
insl
jbe
sbb
cwtl
push
xchg
mov
xorb
jge
xchg
aad
inc
stos
jle
mov
cltd
lods
pop
lds
cmp
mov
in
clc
add
mov
rol
scas
and
cltd
ficomps
cmp
clc
daa
pop
mov
pop
cmp
jae
mov
pushf
push
push
sbb
scas
or
xchg
pusha
mov
jge
sahf
ja
cmpsl
cmp
andl
cli
push
sub
jp
arpl
pop
and
push
pop
pop
jp
xchg
add
xchg
bnd
rorb
fsubrs
push
jne
xor
gs
and
test
xor
popf
pop
lds
shll
out
mov
mov
in
sub
ret
inc
je
xor
popa
sahf
pop
loop
push
fsubrl
lds
jbe
testb
xchg
out
or
out
mov
and
pop
push
insl
out
add
stos
pop
adc
and
leave
sbb
sbb
xchg
inc
hlt
push
fildl
rcrl
cmc
xchg
aaa
pop
das
es
popa
mov
dec
fnstenv
dec
cmp
pop
xor
lds
xchg
cmpl
pushf
mov
cmp
sahf
sub
divb
inc
adc
dec
dec
fdivrl
adc
test
je
xor
cmp
repz
sarl
pop
adc
fwait
jne
fs
mov
jp
jge
aaa
add
dec
mov
sub
jge
or
cmc
sub
js
arpl
sub
adc
pop
jl
mov
fistpll
shrl
sub
in
test
jae
cmp
dec
shr
push
lds
imul
test
push
arpl
and
add
lods
add
int
imul
fcmovnbe
jle
iret
addr16
mov
cmp
jg
enter
int3
subb
xor
ds
stos
cmpsb
rcll
in
or
cs
cmp
rclb
std
sub
dec
inc
mov
lods
dec
fisubs
push
pop
mov
push
stc
xor
stc
leave
data16
and
add
sub
jo
mov
out
push
iret
enter
sub
cwtl
sub
and
jl
xor
lods
mov
icebp
push
and
sbb
push
push
out
xchg
mov
mov
xchg
push
mov
inc
in
xor
clc
or
cmp
cmp
jbe
lret
popf
pop
mov
or
mov
lea
cld
es
pop
pop
sbb
addr16
ss
addl
dec
std
roll
hlt
xchg
ret
mov
out
fnstcw
test
repz
mov
sub
sub
in
add
or
dec
les
add
incb
jg
push
push
insb
iret
aad
add
pop
ja
xor
fwait
inc
imul
ljmp
ljmp
mov
enter
movsb
ds
and
ds
jno
fiaddl
and
pop
xor
fs
adc
out
mov
jecxz
xchg
fists
sub
sub
mov
xchg
dec
icebp
ja
test
adc
mov
rcrl
cmc
xor
push
popa
mov
iret
mov
out
call
push
adc
xchg
enter
mov
jns
sahf
cmp
push
adc
push
les
sub
in
jae
rolb
enter
out
clc
test
xor
lock
bound
jp
adc
sub
ret
adc
lret
mov
xchg
mov
xor
xor
not
sti
add
loopne
xchg
lret
aaa
sbb
mov
test
pop
cmpsl
pop
xor
adc
bound
pop
pop
in
mov
push
aad
outsb
dec
sbb
movsb
cltd
push
cmc
jb
fcoml
int
sub
push
dec
outsl
sub
push
adc
repnz
xlat
insb
cmp
jp
aad
mov
cmp
lretw
xor
outsl
mov
pusha
js
jmp
shll
int
jl
pop
jmp
push
adc
inc
and
dec
mov
shrl
enter
mul
imul
loopne
mov
mov
jmp
lcall
mov
fstl
lods
sub
fsts
and
ret
std
subb
cmp
mov
aaa
cs
push
int3
mov
and
pop
pop
insb
sarl
lods
add
pop
xor
scas
mov
mov
mov
roll
mov
jbe
out
mov
popa
mov
test
lods
add
out
pop
je
mov
jno
lret
xor
imul
jg
and
fistpll
fistpll
jp
dec
xorl
mov
pusha
ret
js
stos
inc
inc
push
jns
ficompl
or
xchg
sub
cmp
lret
mov
add
jbe
shlb
pop
repz
push
jmp
pop
dec
mov
cmp
xchg
in
pop
int3
sbb
mov
dec
pushf
add
in
or
scas
cmp
jle
push
mov
es
dec
lock
sbb
lea
pop
push
adc
ss
jo
mov
cmp
out
das
mov
jb
scas
add
mov
pop
and
cmp
mov
arpl
ret
pop
inc
lcall
sbb
sbb
jmp
mov
or
add
or
and
push
xor
xchg
insl
mov
fucompp
out
cli
nop
shrb
pop
mov
cmp
or
fbstp
jp
lcall
push
cs
mov
adc
sti
les
sub
es
or
pop
jecxz
dec
das
mov
notl
dec
xchg
xchg
mov
xchg
push
scas
sahf
shr
inc
xchg
testl
mov
ds
pusha
pop
test
push
rcr
xchg
into
and
repz
pop
subl
pop
inc
fnstenv
inc
jle
out
movsl
inc
lcall
xor
push
xchg
sbb
lods
xchg
mov
xchg
mov
jmp
jmp
push
stos
sub
ret
mov
lret
pop
imul
push
dec
and
int
lret
cmp
and
mov
ret
test
or
pushf
push
lds
mov
shl
cld
hlt
sbb
in
in
clc
lcall
cmp
mov
std
xor
jle
lcall
or
fucomi
jge
pop
testb
int3
int3
int
in
outsl
inc
ja
mov
mov
push
mov
mov
jl
nop
cmp
mov
xchg
cmpsl
outsl
add
insb
dec
test
dec
sub
dec
cmp
pop
pop
stc
mov
sub
les
adc
and
cmc
jb
in
pop
lahf
mov
mov
add
sub
jnp
mov
leave
cwtl
push
adc
xchg
push
mov
rcrl
mov
sbb
inc
lods
call
and
out
lods
inc
outsb
loop
out
sub
sub
popf
pop
mov
push
jbe
aam
in
or
lcall
stos
jbe
arpl
push
sbb
test
dec
es
mov
cs
adc
test
adc
sub
jae
mov
mov
jbe
loopne
popa
aaa
mov
scas
push
sbb
lret
imul
imul
add
lahf
jle
push
push
inc
add
sbb
rcrl
lret
xchg
lock
adc
and
push
out
push
rclb
pop
pop
cmc
repz
mov
fnstenv
cmp
pusha
xchg
mov
cmp
negl
dec
stos
dec
jb
inc
adc
xchg
jno
aaa
mov
in
xchg
adc
loopne
sub
scas
in
call
cli
stos
inc
xor
mov
cltd
inc
sub
xchg
xlat
push
hlt
scas
int
inc
das
repz
jbe
loop
jge
andl
jns
dec
and
jle
sub
nop
arpl
mov
and
aam
pop
incb
or
loopne
in
pop
psubb
or
leave
daa
and
jb
push
cmc
stos
sub
pop
push
sub
stos
inc
xlat
mov
xor
pop
dec
jge
call
or
jne
xor
dec
outsl
les
roll
mov
sbb
dec
outsl
pop
test
pop
pop
iret
push
push
xor
clc
mov
adc
xchg
lahf
popa
push
iret
fdivrs
js
jb
fcomps
iret
or
jmp
stc
cs
loopw
fcomps
outsb
dec
lahf
sbb
jg
scas
pusha
sub
adc
jb
inc
les
decl
idiv
cmc
mov
or
push
or
add
decl
xor
xor
enter
cwtl
push
jmp
sahf
xchg
ja
cli
out
or
cmp
daa
lods
or
stc
mov
lods
mov
js
cmp
loop,pn
ja
loop
jo
lods
pop
rcrl
dec
aam
jp
adc
psadbw
or
inc
in
push
mov
jae
lret
cmp
lret
add
out
adc
cmp
adc
fimull
jmp
rcll
inc
mov
lcall
push
dec
cli
lcall
dec
mov
lcall
lcall
sbbl
add
inc
or
arpl
inc
mov
cs
shrb
mov
adc
call
addr16
sahf
pop
jecxz
push
cmpsl
jg
aaa
fwait
jo
sub
fs
xchg
fnsave
mov
ret
cmp
cmp
pop
sti
push
dec
dec
ror
sbb
repnz
xlat
sti
push
push
std
sti
jl
push
dec
sahf
mov
pop
in
mov
rcrl
jmp
push
adc
xor
negb
adc
je
sub
mov
es
lock
rclb
cmp
push
loop
scas
into
popa
jae
mov
mov
lds
jae,pt
imul
lret
adc
inc
xchg
pop
adc
pop
nop
inc
jbe
inc
and
jle
fwait
pop
in
decb
ret
pop
jb
sub
into
in
xorb
jp
xor
sbb
icebp
mov
ljmp
popf
loope
enter
lret
movsb
imulb
pop
dec
out
outsl
rorb
scas
icebp
mov
lcall
outsl
pop
xchg
or
jb
inc
cmp
sub
adc
and
push
dec
hlt
add
pop
jb
popa
mov
pushl
mov
ret
push
popf
push
mov
out
mov
rorl
ljmp
leave
test
or
adc
imul
out
sbb
sahf
mov
adc
lahf
stc
pop
movsb
push
sbb
fcoms
dec
or
adc
lock
decb
ljmp
add
in
and
jmp
push
int
sbb
int3
push
dec
mov
aam
mov
mov
ds
scas
and
adc
jae
mov
cmp
imul
ljmp
test
and
sti
or
data16
fcomps
cmp
hlt
add
stos
mov
and
popa
pop
gs
xchg
push
shlb
js
sub
pop
pop
bound
fsubs
pop
xchg
push
xchg
sti
into
push
jno
mov
hlt
mov
popf
out
ret
fistpll
sti
cltd
sbb
inc
xor
and
push
pop
les
inc
mov
cmc
or
adc
outsb
mov
adc
add
push
or
out
int3
xor
xor
inc
adcb
ret
dec
mov
aad
pop
push
insl
cmp
imul
out
shll
xor
jp
mov
in
push
sbb
push
decb
add
in
push
adc
add
xor
ret
cs
jp
add
xchg
jmp
inc
mov
daa
sub
sbb
xlat
dec
pop
sbb
imul
lcall
push
inc
cmp
test
pop
sbb
jecxz
mov
mov
scas
jl
xor
xchg
mov
andb
fdivrl
xchg
inc
and
je
push
jg
mov
mov
xchg
jno
pop
mov
aaa
mov
rclb
hlt
repnz
jl
into
cwtl
mov
mov
fadd
loope
fs
push
mov
cmpsb
cld
sub
xchg
dec
xor
ljmp
push
pop
and
dec
cld
xchg
inc
ss
movsb
push
pop
mov
loope
mov
shll
loop
popa
pop
xor
jbe
sub
cs
mov
data16
cli
popa
out
xchg
or
xor
faddp
cmp
push
ret
dec
cmp
mov
pop
jge
adc
out
js
add
xor
jecxz
shll
cwtl
xor
push
loopne
adc
push
loopne
add
or
add
mov
sub
fnstsw
pop
push
fs
add
iret
mov
sbb
and
xlat
jp
mov
movsb
sub
adc
mov
mov
js
xor
cld
das
sbb
adc
divb
int3
mov
icebp
add
loopne
rol
fcmovb
pop
adc
repz
mov
push
in
lss
mov
mov
and
cwtl
pop
dec
js
push
push
mov
adc
sbb
sub
push
sub
into
fdivs
adc
mov
and
int3
jl
cmp
loopne
sbbb
mov
push
fdivrl
xchg
adc
pop
pushf
movsb
repnz
sahf
dec
push
jno
icebp
andb
mov
ja
test
dec
hlt
jns
fldt
jbe
sub
sbb
inc
jmp
ja
repz
outsb
sub
cmp
arpl
xchg
shrb
mov
pop
dec
sbb
jmp
popa
sahf
xor
xor
push
push
repnz
pop
xor
lahf
and
les
jl
shrb
xchg
mov
adc
dec
fs
lcall
mov
pop
push
scas
push
fidivs
js
sub
pop
xor
movsl
jecxz
push
out
popa
sub
ficoms
ja
pusha
xlat
mov
xor
xor
and
loop
outsb
in
lret
push
mov
nop
dec
imul
jbe
cmp
cmp
mov
xor
in
dec
inc
mov
scas
jmp
out
push
cmp
dec
jb
ret
jp
sbb
pop
mov
mov
enter
xchg
dec
stos
inc
lds
mov
mov
nop
out
testb
les
fdivrl
fs
jge
pop
pusha
movsl
lret
xchg
xchg
mov
lahf
lret
mov
and
in
stc
movsb
sahf
mov
out
lds
jge
icebp
scas
lahf
lds
rorl
dec
fldt
and
mov
addr16
jb
icebp
jl
and
pushf
and
xchg
loope
rol
push
inc
in
mov
divl
fst
inc
jmp
mov
in
movsb
subb
push
push
aam
pusha
aad
pop
sbb
filds
xchg
inc
inc
xor
call
or
sub
test
sub
iret
add
cmc
fcoml
cwtl
into
sub
sbb
sahf
jbe
stc
push
mov
sbb
std
or
loopne
popf
inc
mov
sbb
jns
ja
and
fwait
xchg
or
es
dec
mov
sub
sbb
test
sbb
jmp
sbb
cwtl
xchg
std
pop
icebp
jne
jg
xor
outsl
sbb
dec
add
sub
mov
or
xchg
mov
pop
repnz
aam
je
jmp
push
je
lods
mov
mov
xchg
mov
xchg
mov
mov
js
pop
loop
sbb
andb
mov
stc
int3
dec
push
fisubrl
push
int3
stos
push
pop
fadd
loope
mov
outsl
inc
mov
xchg
ret
clc
ljmp
pop
push
or
aad
cwtl
inc
loopne
leave
cs
or
mov
in
fldt
add
and
mov
aam
in
pop
pop
mov
pop
jae
loope
out
fmuls
mov
jp
cmp
xor
and
in
jl
lods
sbb
add
mov
cld
in
push
mov
push
jg
imul
dec
ret
sub
xor
shll
pop
xchg
push
stos
ss
data16
xchg
leave
scas
shl
dec
xchg
add
das
or
sub
imul
mov
add
mov
cmp
sahf
and
cli
shll
jge
test
fsts
xor
mov
int3
push
jbe
bound
xor
or
scas
pusha
lock
fldenv
cmp
push
test
insl
inc
addl
rcrb
pop
mov
pop
test
in
data16
push
inc
out
cmc
mov
sysenter
xor
aad
and
xchg
sbb
inc
enter
scas
push
and
fimuls
xchg
push
xchg
xchg
ljmp
outsb
mov
cli
fsubs
leave
ja
jle
arpl
outsl
mov
out
jns
xchg
jns
fsubp
out
rorb
js
inc
push
pop
jbe
movb
cmp
sahf
fdivrs
sbb
inc
push
outsl
inc
mov
jle
pop
cmpsb
scas
stos
sub
sub
lods
daa
jl
jns
jmp
cmc
xchg
popf
mov
nop
adc
out
out
push
pop
mulb
fwait
pop
and
pop
js
push
mov
add
push
push
jmp
mov
mov
cmpsl
imul
fbstp
pop
data16
add
or
mov
add
gs
aad
outsl
xor
inc
and
add
scas
ret
adc
mov
out
ljmp
jmp
iret
fsub
mov
pop
cwtl
subl
repz
pop
sub
xchg
dec
add
pop
les
xchg
sub
fidivrs
or
and
sub
jmp
and
adcl
jbe
push
out
movsl
clc
pop
and
sahf
cmp
push
test
enter
jmp
and
push
ss
cmpsb
mov
mov
sub
cmp
subb
and
jge
xchg
pop
add
add
fsubrl
pop
cmp
mov
rorb
jmp
or
sbb
mov
call
aam
es
cmp
and
or
leave
jg
adc
cmp
pop
jmp
aam
or
inc
insb
aam
data16
cwtl
test
xchg
jo
add
pop
mov
add
imul
xorb
inc
mov
dec
and
mov
fwait
test
call
mov
mov
fimull
lods
xor
jl
push
push
push
mov
jne
pop
sahf
mov
xchg
jl
pusha
cmp
fbld
sub
push
insb
cmp
mov
imul
ret
pop
inc
frstor
push
pop
inc
aam
jns
push
adc
xchg
stos
adc
iret
mov
ljmp
add
jmp
fisubrl
cmp
clc
sbb
scas
xchg
out
in
in
fwait
pop
adc
fstps
scas
pop
lcall
cs
add
xor
ja
das
adcb
push
fucom
fdivr
pop
cmc
inc
ret
aad
push
xchg
push
pop
movsl
pop
ficompl
frstor
int3
xchg
ret
add
gs
cmp
mov
xor
sbb
dec
mov
adc
xchg
repnz
mov
add
jae
adc
and
jle
aas
loop
int3
repnz
fwait
lods
adc
adcb
cld
push
sbb
dec
cwtl
inc
stc
andl
and
sbb
or
xlat
cmpsb
cwtl
or
jecxz
and
jo
xchg
dec
rcrb
fdivrp
xlat
and
lods
pop
pop
addl
xor
dec
fidivrs
imull
dec
lahf
jle
mov
icebp
scas
stc
pop
mul
mul
add
xor
addr16
jbe
dec
fucompp
or
jmp
push
sub
ss
mov
mov
sbb
mov
add
sbb
iret
jg
imul
push
cmp
test
aad
or
xchg
adc
mov
dec
pop
sarl
mov
test
jmp
or
pop
flds
insl
repz
sub
sbb
hlt
pop
lock
adc
test
pop
push
adc
sub
xor
adc
add
lahf
inc
xchg
ljmp
jmp
popa
jnp
push
cld
lea
mov
xor
xchg
imul
mov
lea
xlat
jge
adc
bnd
push
inc
aad
cli
cmpsb
insb
ja
mov
push
bound
insl
aam
inc
scas
enter
repz
mov
inc
push
out
cmpsb
leave
outsb
gs
inc
faddl
in
mov
jbe
jno
stc
mov
mov
push
sbb
imul
or
inc
adc
add
out
adc
dec
adcb
jl
lods
in
in
sbb
push
xor
popa
test
push
fisttpl
imul
xor
adc
dec
fwait
jnp
add
pop
scas
mov
xchg
xor
and
cmpsb
decb
xchg
add
sbb
ds
pop
lahf
ljmp
das
fldl
jmp
mov
sbb
ret
pop
mov
dec
sbb
sbb
jmp
inc
aaa
adc
fmulp
pop
test
lods
xchg
ljmp
fcoml
dec
xchg
sub
enter
push
sbbl
mov
icebp
scas
scas
jp
add
in
sbb
les
sahf
test
lea
shrl
je
shrl
xor
nop
enter
mov
push
adcl
push
dec
in
inc
jnp
sub
mov
into
nop
mov
aaa
test
or
data16
or
daa
icebp
ljmp
nop
out
mov
test
lea
lahf
push
pop
cli
inc
in
sub
fadds
add
inc
setle
pop
push
les
sti
push
add
xchg
xor
jmp
sbb
mov
das
mov
adc
repnz
nop
mov
mov
out
jno
das
ret
pop
dec
out
aas
mov
dec
cmp
ret
xchg
xchg
jp
jecxz
lea
xchg
cwtl
jbe
in
scas
jp
dec
lods
cmp
sub
jmp
testb
cmp
sub
fiadds
cmpsb
cmp
ret
push
loop
out
jno
and
sbb
shll
jns
push
dec
clc
out
or
mov
sbb
xchg
stos
mov
pop
adc
ljmp
in
imul
imul
repnz
jae
xchg
cwtl
cmc
decb
cmp
outsb
xchg
and
xor
xlat
push
add
sub
test
rolb
xchg
rorb
adc
jb
mov
dec
mov
pop
stos
imul
xchg
dec
mov
and
popl
cmp
dec
mov
popl
ret
dec
jae
mov
stc
or
inc
jl
dec
or
or
gs
scas
xor
in
xchg
or
jb
testl
lock
ret
jae
cs
add
dec
sub
add
rorl
repnz
add
scas
in
adc
out
xchg
cs
add
add
inc
sbbb
fmull
adc
xor
add
ss
out
pop
lahf
or
xchg
jb
mov
cwtl
cmp
inc
in
int
in
in
into
or
repz
jmp
mov
nop
inc
push
out
int
mov
xchg
rorl
lcall
ss
dec
les
add
mov
cmc
leave
in
xor
jbe
add
movsl
mov
adc
test
outsb
mov
jp
roll
call
aam
out
push
xchg
addr16
jg
into
inc
push
les
xor
mov
fldcw
jecxz
scas
stos
fcmovnb
jo
out
test
cwtl
je
scas
mov
lock
adc
sbb
jnp
pushf
aaa
mov
sub
fnstenv
test
jb
xchg
out
adc
inc
std
pop
or
sbb
popa
mov
iret
int
movsb
cmp
roll
mov
pop
sbb
repz
jp
ret
add
orb
call
inc
add
or
dec
adc
add
cmp
cltd
repnz
push
or
test
mov
adc
pop
leave
sub
mov
sbb
or
mov
les
xchg
sbb
out
test
sbb
lods
idiv
insl
pushf
aam
add
jmp
scas
int3
inc
mov
sbbb
imul
scas
mov
popf
pushf
popl
jmp
fwait
out
mov
mov
stos
jecxz
push
and
cmp
fsubl
adc
inc
sub
shr
imul
rcrb
imul
scas
inc
dec
adc
cmp
xlat
xor
jno
dec
adc
inc
mov
fidivrl
addr16
pusha
pop
xor
adc
shr
mov
xchg
aad
sub
into
lods
jg
dec
sub
sbb
or
and
xchg
aaa
leave
xchg
dec
shlb
pop
repnz
lods
jmp
out
in
mov
lock
js
cmp
xchg
enter
ret
clc
and
test
push
push
and
sbb
ljmp
movsb
xchg
lahf
incl
mov
scas
orl
sub
adc
mov
iret
xchg
inc
add
addr16
cmp
jne
cmpsb
imul
repnz
imul
push
or
inc
cmp
scas
mov
jnp
jmp
push
out
jae
xchg
into
icebp
push
xlat
stos
fadd
insb
add
sti
dec
add
add
leave
xchg
repnz
pop
jg
pop
lcall
into
mov
jmp
out
xchg
in
lods
fisubs
pushf
push
insl
xchg
adc
subl
sub
cmp
or
std
flds
test
xor
mov
repz
out
add
popf
fstps
mov
mov
cmp
repnz
and
mov
inc
out
pop
sti
inc
cli
loop
fwait
xchg
sbb
mov
mov
mov
jge
andl
add
js
outsb
xchg
std
out
ja
pop
in
pop
scas
mov
cmpsl
lcall
mov
mov
lret
cltd
pop
push
add
bnd
inc
inc
loop
imul
and
addr16
push
lea
mov
loopne
and
cmp
nop
adc
mov
pop
ljmp
xchg
xchg
lcall
aaa
and
xor
out
dec
dec
adc
ljmp
pop
pop
lahf
mov
je
stc
sarl
pop
sub
test
push
jg
xchg
je
mov
fildl
fs
adc
inc
fstl
adc
gs
sub
pop
in
and
mov
test
add
mov
outsl
pop
out
mov
pop
xchg
std
std
daa
dec
insl
test
ljmp
lods
and
ljmp
mov
fisubs
ja
jmp
enter
outsl
aad
mov
mov
hlt
or
jnp
stos
outsl
in
rcll
cmpxchg
int
cwtl
hlt
jnp
fcoml
pop
icebp
movsl
popa
dec
and
mov
push
inc
mov
paddsb
outsl
jg
fnstenv
fisubrs
test
adcb
test
pop
inc
jnp
pop
fnsave
mov
imul
add
dec
add
cmp
cmp
ljmp
lock
and
lret
mov
les
jns
ja
push
movsb
cmpsb
lahf
imul
clc
push
pop
shlb
or
inc
fcomp
jb
mov
fmuls
pop
in
inc
pop
sbb
push
daa
ss
idiv
sub
adc
jns
push
je
adc
sbb
aaa
mov
add
scas
aas
push
xchg
and
out
shll
int3
je
mov
outsl
aaa
aas
mov
xchg
lcall
pusha
inc
insl
fisttpll
xlat
das
cmpsl
add
cbtw
push
jae
mov
gs
inc
jns
and
jg
or
xor
mov
cmp
lret
in
jb
xor
xchg
shr
xchg
pop
adc
xchg
cmp
jg
dec
rcll
cmp
repnz
rcrl
stos
enter
sbb
jns
mov
out
lods
xchg
mov
sar
clc
sbb
xchg
xchg
test
sbb
inc
in
aas
push
pop
sbb
lock
mov
repz
in
push
pop
mov
pop
and
sbb
xchg
ja
jb
pop
mov
pop
sub
sub
fldl
mov
outsb
cmpsl
pusha
pusha
push
dec
cmp
or
aas
fs
addl
mov
cld
das
mov
or
cmp
xor
mov
mov
cs
push
cmp
cmp
jge
ret
mov
loopne
jnp
or
gs
leave
inc
iret
jae
inc
xchg
imul
out
inc
dec
clc
stc
mov
adc
xchg
inc
aas
jl
xchg
sahf
int
repz
fs
in
sbb
jecxz
xor
push
or
stos
roll
mov
out
cmc
xor
test
inc
in
ja
test
pop
sub
mov
sahf
sub
add
pop
mov
das
sbb
push
xor
addr16
in
das
ficoml
push
dec
mov
test
clc
add
lcall
lods
insb
lock
jge
push
or
std
mov
jns
je
cmp
call
ret
push
repz
jle
and
mov
sbb
iret
lahf
xchg
test
lret
push
inc
cmp
mov
in
aam
andb
dec
fdivr
mov
mov
sub
xlat
add
mov
jbe
xchg
test
stos
xor
shrl
sbb
push
scas
aad
push
enter
xchg
xchg
mov
push
pop
cmp
imul
sbb
pop
or
subb
push
or
imul
shrb
xor
adc
sbb
or
in
icebp
sub
mov
xchg
hlt
cmc
xchg
or
pop
repz
vmovss
cmc
add
cmp
mov
orl
push
cmp
adc
cmpsl
mov
and
sar
mov
fnstsw
data16
xor
outsb
sub
or
int
push
adc
scas
push
loopne
mov
insb
leave
call
pusha
or
and
fs
loopne
pop
jno
stos
jge
pop
cmpsl
jne
and
loope
scas
mov
inc
movsb
mov
add
std
call
in
adc
fadds
in
cmp
decb
popa
xchg
inc
js
data16
das
push
imul
jnp
push
repnz
cltd
adc
out
ret
std
pop
xchg
mov
ds
mov
out
pop
div
movsl
into
out
cmpsl
cmp
adc
std
sahf
sub
jge
lods
pop
rcrl
and
or
push
out
sbb
enter
jno
and
and
mov
repz
and
cmp
fs
sbb
push
and
mov
repnz
xchg
mov
inc
lods
push
sub
std
popa
sub
shlb
cmpsb
and
data16
and
or
pushf
fiaddl
sub
or
ss
dec
out
mov
inc
mov
cmp
in
add
jae
add
mov
fbstp
into
sub
test
and
cmp
pop
and
data16
sbb
scas
jnp
jecxz
xchg
leave
addb
mov
cwtl
cmp
mov
les
es
je
mov
push
pop
mov
stos
jno
rorl
lahf
sarl
lods
lods
mov
arpl
cmp
ljmp
jbe
int3
test
jb
sub
mov
stos
push
fisttps
sbb
sbb
pop
jge
cmp
fbld
pushf
mov
and
cmp
jns
subl
in
daa
mov
std
fistl
cmc
ds
xchg
arpl
test
dec
ss
addl
or
push
add
cmc
loopne
sub
mov
xor
jmp
and
pushf
or
inc
push
rclb
out
pop
fidivl
nop
cmp
sub
es
dec
lds
mov
inc
imul
inc
testb
ret
and
rolb
push
xor
lods
addl
outsb
add
aaa
popf
xchg
pop
and
lret
inc
jg
inc
xchg
mov
lock
fbstp
xchg
inc
adc
ja
cmpsb
pop
mov
sub
stos
inc
cs
mov
arpl
xchg
fcomp
sub
ds
jnp
push
push
and
cli
lcall
scas
xor
xor
loop
nop
jno
xchg
shlb
lock
xchg
xchg
idivb
lods
fwait
out
call
cmp
fimull
pop
cmp
test
rolb
mov
mov
cld
sbb
imul
push
mov
enter
clc
pop
sarb
fdivs
add
outsl
and
dec
sbb
mov
pop
inc
push
add
pushf
pop
jns
jo
xor
loopne
inc
ror
mov
jnp
out
outsb
pop
and
in
addl
loopne
push
sub
adc
jge
pusha
jl
or
loope
clc
mov
pop
or
xchg
leave
bound
push
in
add
or
lods
pop
dec
inc
dec
fwait
dec
xchg
pop
jle
push
cli
stc
jb
pop
popf
inc
xorl
into
and
jns
lcall
pop
cli
jmp
pop
ss
xchg
xor
push
ret
jbe
dec
int
pop
add
inc
xchg
aad
sub
cwtl
sar
mov
sub
mov
adc
pop
add
or
fidivl
pop
cmc
add
out
jnp
mov
jbe
cli
aad
push
je
mov
shll
fcomps
rcrb
lret
repnz
inc
out
sbb
je
shlb
ss
push
mov
aas
ret
pop
sub
and
add
int3
in
decb
mov
inc
cmp
dec
out
xor
xor
mov
dec
fistl
xbegin
xor
rclb
dec
bound
rclb
std
and
lahf
or
inc
int3
call
pushl
jmp
outsl
jae
inc
repnz
and
xchg
xchg
sahf
fidivs
dec
nop
lods
jge
jmp
lahf
mov
mov
int
dec
dec
mov
jp
dec
call
icebp
fs
jl
mov
negb
cmpsb
int3
out
enter
or
std
cs
out
nop
fdivrs
jmp
jns
dec
cmp
mov
jne
iret
cmp
dec
mov
testl
mov
inc
cmp
adc
jecxz
ror
mov
dec
fs
sbb
mov
pop
mov
add
dec
dec
pushf
shll
iret
xchg
out
ss
in
ljmp
loop
xor
xor
outsb
scas
js
addb
scas
mov
pop
rcrb
scas
xchg
pop
inc
jg
outsb
daa
push
adc
inc
repnz
orl
in
loopne
push
xchg
stos
lcall
outsb
mov
jmp
push
clc
data16
pop
dec
pop
dec
aaa
jmp
or
jl
repz
inc
pop
jae
cmp
pop
dec
xchg
cld
fidivl
outsb
rorl
xor
and
mov
test
sub
mov
lock
mov
add
in
orb
inc
sub
pusha
out
or
es
iret
pop
cmp
inc
in
ja
imul
add
lret
sub
pushf
cmp
loop
jnp
mov
fsub
shll
cmpsl
cmpsb
inc
data16
xchg
xor
arpl
sub
xchg
imul
in
xchg
dec
loop
or
xor
pop
clc
or
jo
enter
xchg
jbe
stos
pop
jle
xor
xchg
int3
mov
mov
adc
sub
mov
xchg
arpl
or
jo
jmp
jae
icebp
mov
in
scas
or
pop
mov
pop
push
rcrb
or
fs
and
mov
mov
stos
xchg
aad
sbb
insl
out
sar
lods
mov
mov
ja
pop
mov
out
push
pop
cmpsl
lret
imul
shrl
test
aaa
mov
lcall
nop
pushf
icebp
repnz
in
jno
mov
mov
xor
cltd
in
insl
mov
outsb
push
inc
rclb
in
push
repnz
jmp
dec
push
adc
sbb
inc
ljmp
ljmp
movsb
movsb
xchg
shl
mov
inc
daa
xor
das
fcoms
inc
mov
scas
and
dec
js
in
movsl
rep
mov
mov
cmp
insb
test
hlt
movsb
push
mov
popa
out
dec
pop
fisubrs
fisttpl
nop
xor
xchg
and
notb
test
adc
bound
inc
xor
mov
cmp
test
inc
inc
sub
lock
mov
xchg
pop
sahf
jno
or
mov
mov
xlat
sub
dec
ret
dec
neg
mov
rol
xor
adc
rol
repnz
adc
imul
mov
adc
out
sbb
jnp
sbb
jb
scas
inc
sahf
cmp
cmp
xchg
ds
add
sbb
dec
xchg
sub
jae
clc
shrb
out
sub
dec
jbe
mov
pusha
lock
mov
testl
push
icebp
or
cmpsb
lds
mov
sahf
push
js
arpl
mov
push
pop
mov
xchg
dec
test
sbb
cmp
adc
or
inc
or
loop
sahf
inc
clc
or
push
mov
popf
cs
jmp
cmp
mov
add
and
jae
or
jne
stos
pop
inc
adc
pop
xchg
stos
xor
pop
popa
out
xor
das
dec
in
fildl
sarb
scas
jo
rol
and
jle
stos
push
add
jecxz
push
ss
xchg
add
or
cmp
scas
andl
sub
sahf
mov
push
loop
ss
or
push
test
pop
adcl
xchg
fidivrs
sbb
sarl
lret
out
sub
shlb
inc
aas
xchg
sarl
sub
pop
dec
mov
and
pop
jne,pt
cltd
cmpb
out
in
cld
push
add
sbb
into
cmp
xor
jnp
xchg
mov
movsb
lahf
sbb
into
mov
xor
loop
stos
mov
inc
pop
mov
pop
mov
push
test
sub
mov
inc
cwtl
ljmp
inc
mov
movb
push
mov
fisubs
cltd
xlat
std
inc
fwait
xlat
mov
push
test
clc
push
pop
mov
push
xchg
and
pop
jnp
xchg
aam
and
pushf
fbstp
jns
push
fdivrl
xchg
mov
outsl
lea
shrb
mov
lock
adc
push
ret
cmpb
mov
shrl
mov
movsl
jo
cmp
stos
xchg
cs
lahf
mov
fsts
rolb
sub
add
test
push
dec
int3
jl
mull
jb
adc
adc
jae
mov
and
jne
les
inc
jmp
out
add
and
data16
repnz
das
insb
sbb
or
xor
std
pop
xchg
fwait
lret
and
mov
data16
fistl
mov
dec
adc
sbb
inc
lret
sbb
pushf
sti
jo
sbb
dec
nop
addr16
dec
dec
fiaddl
rcll
and
xchg
test
mov
dec
aas
and
push
pushf
cmp
insb
cli
outsl
lret
and
adc
lds
imul
xor
push
cmpsl
rcl
cli
dec
xlat
out
jge
scas
dec
mov
aas
cld
popf
movsb
dec
test
mov
in
stos
jns
insb
cmp
xor
mov
gs
mov
in
fisubrl
push
mov
sbb
je
mov
cs
mov
sbb
or
xchg
lods
mov
daa
cmpsb
xchg
or
xchg
les
sub
xor
test
inc
out
mov
mov
jecxz
jmp
fcoms
and
lret
add
cli
clc
and
xor
jns
aaa
scas
sbb
ss
sbb
xor
xor
sbb
cltd
outsl
mov
mov
fcoml
mov
sbb
push
jnp
mov
rcrb
loop
adc
adc
cmpsb
jbe
iret
and
cmpsb
rolb
xor
cmp
adc
push
insb
out
outsl
ja
jp
jns
mov
stos
cmpsl
cmp
add
scas
notb
fwait
jg
lahf
mov
xchg
scas
push
jp
xchg
in
mov
fs
sub
jb
dec
push
jle
ret
clc
mov
pop
xor
sbb
outsb
xchg
push
out
dec
test
adc
movsl
mov
leave
popf
pop
lock
clc
fwait
push
jle
jns
dec
aad
popf
daa
and
insb
push
mov
lahf
dec
jecxz
cld
sbb
jle
ljmp
out
xor
cmp
cmc
push
xchg
cld
hlt
xchg
mov
daa
out
lods
rcr
dec
jmp
dec
xchg
jno
push
mov
popa
cmpsl
outsb
pop
lods
popa
sbb
pop
mov
dec
lods
cmp
popa
sbb
xchg
iret
jl
dec
bswap
jle
fisttps
or
mov
icebp
cwtl
test
and
lock
mov
repz
xchg
ret
xchg
fsubs
and
inc
jmp
loope
popa
xchg
cwtl
out
mov
aaa
inc
shll
jp
xor
push
scas
jl
sbb
ds
inc
lds
in
or
xchg
and
subb
icebp
dec
dec
jg
inc
cmp
adc
iret
add
ficomps
nop
out
push
jne
loop
jnp
adc
xchg
sub
hlt
jno
cmpsl
into
inc
push
ljmp
jb
clc
xchg
push
data16
adcl
sub
cmp
mov
pop
and
or
sahf
sub
mov
inc
int
inc
inc
sbb
cmc
imul
out
mov
xchg
cmp
in
dec
subb
or
pop
pop
out
push
sbb
pop
cmp
cmp
xchg
popa
movsl
loop
or
enter
cmp
je
push
ja
pop
xchg
enter
cmp
xor
sbb
xchg
jo
shl
jg
cmp
fwait
icebp
sbb
push
jp
fldcw
jne
popa
sub
aam
bound
jle
neg
das
add
int3
outsb
adc
into
orl
sub
inc
push
andl
imul
inc
loope
sub
out
test
nop
ficompl
daa
popl
ds
pop
sub
aam
nop
add
stc
pop
jp
in
scas
jo
je
pop
lods
test
xchg
mov
xchg
push
test
sahf
aam
jns
iret
movsb
pop
aad
repnz
xchg
adc
mov
adc
jle
mov
cmp
stos
repz
ret
cmp
adc
xor
sub
jne
jae
mov
clc
adcb
sahf
add
int
inc
aaa
inc
cld
sub
sarb
ret
and
pop
cmp
fisubl
test
imul
sbb
pop
xchg
fmull
fildl
push
sbb
dec
ficompl
lods
loope
lret
loopne
jle
push
mov
sti
pusha
repz
or
bound
adc
cmp
lea
int3
dec
xchg
mov
and
mov
insb
imul
jns
idivl
les
mov
sbb
jecxz
push
mov
push
bound
dec
in
adc
aas
es
imul
enter
stc
loopne
rcrb
xchg
lods
sti
aas
jnp
stos
inc
push
adc
xchg
mov
push
dec
fwait
ja
xlat
pop
pop
je
addr16
fdiv
test
aas
out
cmpsb
jno
or
std
jg
into
jns
decl
and
mov
jecxz
mov
push
inc
add
push
push
jmp
push
lret
in
push
je
arpl
test
fistpl
mov
pop
cmp
push
jb
or
mov
fildl
push
daa
push
mov
or
xchg
insl
pusha
fisubrl
fwait
testl
int3
mov
cmp
jno
test
jae
xchg
jg
mov
loop
xchg
rcl
loopne
jbe
pop
in
aas
orb
cmp
add
incl
dec
cli
or
fistpll
lods
pop
pop
sbb
pop
xchg
imul
jmp
adc
push
cltd
jmp
ja
popa
xchg
push
mov
and
sbb
fstps
push
insl
faddl
mov
and
je
outsb
inc
fldl
fistl
push
outsl
popa
rcl
pop
inc
or
and
inc
push
or
cmpsl
es
ret
mov
jmp
mov
xchg
inc
or
mov
jmp
adc
out
sbb
jmp
mov
ja
mov
hlt
lods
mov
hlt
or
orl
aaa
insb
insb
inc
push
fwait
aam
or
pop
scas
out
sbb
dec
jne
out
pop
mov
push
mov
sub
movsl
xor
roll
dec
add
arpl
test
movsb
mov
fsubl
in
int
sbb
addb
ljmp
sub
lcall
cwtl
cmp
mov
shll
mov
test
enter
inc
inc
push
xchg
xchg
rol
rclb
outsl
int3
adc
cmp
or
push
sbb
in
pop
sbb
das
cltd
test
push
or
mov
pop
repz
dec
in
sbb
push
mov
adc
mov
or
dec
dec
inc
and
arpl
shrl
aad
mov
repnz
arpl
cs
push
pop
ficoms
mov
or
inc
adc
fwait
adc
sub
cltd
lds
adc
aaa
rcrl
cmp
insb
imul
jge
adc
daa
sbb
sbb
stos
mov
push
mov
repnz
in
mov
out
cmpsb
sbb
in
mov
dec
xchg
dec
cs
xor
dec
push
cmpsl
pop
xor
inc
pop
mov
xchg
push
filds
jmp
add
test
lcall
add
add
repnz
lods
jg
mov
in
push
cld
cmc
dec
cmpsl
pop
imul
pushf
jecxz
test
mov
stc
sbb
inc
ljmp
push
jb
sub
mov
out
insl
sub
sub
inc
imul
leave
adc
inc
add
inc
and
push
int
jle
pop
repnz
mov
stos
jne
lods
es
fnsave
dec
mov
push
adcb
sbb
test
stos
mov
cmpsb
mov
inc
mov
mov
adc
in
sbb
lret
and
push
popa
popf
mov
pushf
cmp
out
or
pop
jne
or
mov
and
scas
outsb
push
rcll
or
or
xchg
gs
out
lods
inc
data16
mov
sahf
jle
push
or
ss
pop
into
loopne
andb
adc
dec
lahf
push
neg
icebp
cmpsb
cli
cmp
jbe
and
aas
pop
mov
push
dec
cwtl
and
cli
js
mov
fdivl
and
movsl
xor
lds
adc
jo
das
les
jl
mov
fildll
fstps
call
cli
cmpsb
enter
add
jle
scas
mov
mov
cli
ljmp
mov
lds
jg
ja
mov
push
lods
fldln2
adc
pop
mov
stos
cmp
xor
xor
xchg
dec
pop
fwait
pop
aas
push
mov
dec
dec
jo
or
int3
push
cmp
mov
mov
xlat
add
mov
mov
sti
dec
out
mov
test
push
inc
adc
aaa
stos
rorb
add
adcl
dec
push
sub
gs
daa
outsb
jle
jne
push
dec
mov
jmp
pop
push
int3
xor
arpl
mov
push
in
pushf
int3
scas
orb
pop
or
es
pop
movsl
pop
aaa
in
lret
pop
fimuls
inc
pop
xor
ret
cltd
cmovl
xchg
lods
push
pusha
jmp
mov
mov
and
data16
repnz
mov
pop
jp
cli
stos
stos
popa
cmp
push
lea
aaa
mov
or
stos
inc
push
sub
and
sub
adc
sbb
nop
repnz
xchg
shrl
fs
les
clc
mov
xchg
and
in
jle
test
inc
sub
insl
rclb
in
insl
jmp
out
xchg
cmpsb
pusha
xor
push
js
sbb
jae
mov
insb
add
or
arpl
std
or
fidivs
lods
divb
rorl
mov
adc
out
out
mov
jno
or
pop
pushf
jne
or
outsb
std
fmuls
cmp
jge
mov
or
adc
ss
cmp
pop
dec
push
lahf
jo
or
xor
xchg
arpl
gs
in
dec
out
inc
hlt
es
lret
rol
ret
std
cmp
sbbl
xlat
or
xchg
pop
cmp
cwtl
mov
out
push
sbb
jnp
lds
mov
ds
pushf
in
outsl
dec
mov
hlt
pop
mov
push
bound
movsb
adc
daa
jo
or
test
xchg
jbe
popf
loop
push
outsl
ja
ss
lods
lods
xchg
xchg
popa
shlb
les
jg
and
call
sbb
insb
clc
push
lcall
lds
add
in
push
pop
ds
xchg
cmp
sbb
jle
cmp
inc
push
in
push
test
sub
in
sub
mov
scas
bound
xor
and
pop
rcrl
push
stos
push
out
repz
scas
cmp
jp
push
out
push
sub
in
js
fnstsw
jmp
jl
xchg
scas
test
outsl
cmpl
pop
mov
mov
and
or
loopne
subl
aam
aas
call
pop
push
rcrl
hlt
popa
icebp
cltd
adc
inc
std
sub
push
mov
cli
sahf
mov
push
and
rorl
icebp
je
add
or
xchg
shlb
cmp
pop
jb
and
xor
inc
mov
mov
cwtl
dec
cmp
ret
cmp
jne
sbb
xlat
js
or
fcmovne
dec
imul
stc
stos
push
clc
mov
push
lods
daa
ss
lahf
push
sbb
pop
ds
fldpi
lret
iret
push
mov
and
dec
and
ds
sarb
loop
ror
sbb
mov
push
imul
arpl
sub
jno
inc
sbb
cmp
es
out
lcall
fcmovnu
xchg
xchg
xor
test
mov
notb
in
addr16
mov
push
popf
shrl
pop
sbb
xchg
inc
ficoml
cmpsl
inc
outsl
ds
sbb
or
mov
sub
movsl
push
arpl
or
fs
inc
pop
mov
push
imul
or
and
fbld
inc
adc
mov
sar
loope
push
add
stos
mov
sahf
ja
inc
inc
fs
dec
pop
stos
test
dec
shrl
ja
outsl
push
jne
xchg
push
sbb
or
mov
mov
sub
and
xchg
sub
lret
repz
mov
xchg
add
lret
arpl
pop
sub
pop
gs
xchg
das
or
out
aad
repnz
add
mov
xor
ss
mov
iret
xchg
mov
test
pop
clc
or
push
popf
lret
clc
stos
fstpt
scas
cmpb
pop
sbb
mov
test
movsl
or
sbb
xchg
cmc
sbb
xor
outsl
or
stc
mov
xchg
pop
dec
mov
test
xchg
jbe
xchg
sub
jb
cmp
xor
je
or
push
mov
cmc
add
xor
sbb
shll
int3
mov
mov
mov
dec
pusha
jnp
mov
lahf
outsl
sub
push
enter
inc
sub
sub
pop
sub
add
call
ja
testl
lds
dec
and
inc
stos
pop
mov
fs
or
mov
xchg
push
pop
mov
cmp
cli
imul
nop
add
adc
cmp
leave
das
sbb
mov
jle
lock
outsl
mov
scas
in
call
sub
inc
mov
pop
movsb
test
ret
cmp
sub
adc
push
push
shl
sub
mov
je
scas
push
adc
test
sti
jbe
sbb
push
adc
adc
fcomps
lret
or
int3
jl
and
mov
pop
out
sub
mov
pop
fcoms
mov
xor
sahf
fisttpl
mov
xlat
xorl
mov
xor
xor
xor
test
or
adc
pshufw
jo
enter
xlat
dec
enter
cli
sub
or
fisttps
cli
sbb
and
jbe
sbb
sub
or
xchg
mov
mov
add
loop
scas
mov
jno
loop
mov
lods
and
icebp
mov
xchg
jno,pn
mov
fcoml
fdivrs
sarl
gs
mov
cli
sbb
mov
add
pusha
lods
in
outsb
leave
adc
push
mov
imul
pop
pop
lret
jg
sub
mov
in
fmuls
pop
jb
push
adc
push
push
cmpsb
outsb
xchg
xor
nop
jns
jp
daa
cwtl
xor
mov
dec
dec
mov
and
mov
xor
jnp
push
add
sub
add
sbb
scas
call
or
inc
insb
xchg
fsts
push
jno
xchg
xchg
lods
dec
lods
inc
ds
aas
repz
fldenv
lea
adc
lahf
cs
xchg
loopne
aam
in
lahf
push
dec
jmp
out
mov
aaa
mov
into
std
mov
out
push
mov
dec
mov
inc
mov
cmp
fldl
push
lock
mov
notl
and
mov
or
cs
ss
lods
sub
xchg
and
cmp
daa
sar
inc
cmp
jg
adc
mov
ret
into
mov
push
std
push
sbb
jge
jno
push
jecxz
fildll
push
dec
push
arpl
imul
iret
xchg
mov
and
lock
inc
or
test
stos
push
jno
mov
mov
adcb
scas
lds
sub
dec
mov
or
or
jp
sbb
add
fadd
mov
xchg
sub
mov
add
add
jecxz
xor
sbb
mov
xchg
lods
sub
inc
es
mulb
sub
repz
push
adc
loop
pop
out
insl
mov
fldenv
mov
stos
add
pushf
xchg
inc
add
add
mov
xor
clc
cmp
lret
xor
test
add
mov
dec
xor
dec
test
jno
das
ret
mov
rolb
or
mov
jl
add
sub
or
jbe
cmpsb
ds
sbb
ljmp
jb
fmuls
and
add
xchg
scas
sti
ficomps
and
dec
mov
mov
movsl
xor
adc
pop
sub
mov
adc
in
push
cmovbe
je
fisttpll
push
push
sbb
gs
push
std
negl
fldt
sbbb
je
dec
sbb
mov
add
xchg
mov
scas
scas
push
or
gs
lods
cwtl
stc
ja
xchg
stos
sarb
insb
mov
mov
pop
sbb
dec
aas
shr
xor
jl
cmp
push
add
js
xor
sub
int3
cs
push
loop
data16
cwtl
push
out
mov
mov
adc
or
adc
and
pusha
mov
int
testb
psubsb
sub
ret
stos
sub
aas
pushf
lea
dec
inc
dec
sub
jae
cltd
cs
jecxz
pushf
mov
mov
xor
sub
adc
xchg
jnp,pn
xor
pop
cs
out
out
mov
mov
jle
jp
cli
mov
cwtl
push
jp
push
leave
lcall
sub
leave
jl
inc
mov
pop
loope
repnz
shr
pop
imul
mov
mov
pop
repz
mov
lahf
lods
adc
jne
dec
or
push
sub
lret
jmp
das
adc
adc
xor
pusha
div
adc
push
cmp
notl
cmp
sbb
xor
sub
sub
mov
ret
xor
push
imul
sar
out
in
pushf
mov
sub
stos
movsb
js
idiv
and
bound
mov
in
adc
ja
push
mov
shrl
popa
lcall
push
jecxz
js
mov
xor
xchg
insl
mov
push
jecxz
call
shrl
leave
in
nop
jb
out
popa
and
inc
or
dec
pop
or
dec
or
dec
popf
mov
aas
ds
ds
dec
inc
pop
out
push
filds
cmpsb
pop
mov
adcl
lods
cmpsl
inc
shlb
aas
pop
test
xchg
cmp
xchg
mov
adc
push
pop
in
cmp
jo
xor
sub
out
sbb
mov
or
sahf
adc
mov
outsl
das
imul
mov
shlb
scas
sub
pushf
jae
and
arpl
rolb
xchg
dec
fcmovnb
xor
sbb
and
lret
sbb
cmc
mov
sti
sbb
scas
push
and
imul
lods
push
and
je
dec
mov
adc
dec
jecxz
arpl
out
or
xorb
iret
jo
sbb
dec
jns
dec
mov
jno
sub
dec
cwtl
popa
mov
jge
jne
loop
stos
sbb
dec
or
push
push
sarb
fisubrs
inc
mov
ret
pop
or
decb
bound
sti
jnp
jecxz
imul
movsb
mov
pushf
je
outsl
push
pop
adc
xor
notl
lock
and
fidivl
cwtl
pop
push
fwait
adc
xlat
jne
popa
and
imul
mov
push
rol
popf
cmc
repz
rcrl
inc
inc
popf
hlt
and
adc
sub
or
xchg
or
cmp
mov
or
arpl
push
adc
pop
cld
cld
jg
jge
daa
push
fs
ss
xor
inc
in
imul
mov
ljmp
imul
daa
inc
clc
shl
ja
insl
jbe
sbb
sub
shll
out
je
push
push
mov
dec
adc
push
jp
std
shrb
fs
push
cmpsl
dec
sub
xor
loop
lahf
outsb
xchg
inc
push
pop
add
test
ret
das
or
cmp
push
les
call
int3
pusha
inc
cld
lret
jge
add
sarl
and
js
stos
outsl
int3
dec
mov
cmp
push
orl
sbb
push
stos
ja
jl
out
mov
ss
imul
mov
popa
fidivl
sub
fsubrs
fists
ds
int3
rolb
scas
sub
cltd
lock
xchg
sub
or
add
stos
mov
lds
fstpt
sub
dec
xchg
push
push
xcrypt-ctr
cmpsl
pop
shlb
enter
mov
push
cmp
in
enter
mov
int3
add
dec
pop
mov
call
mov
inc
lock
push
addr16
inc
lock
sub
adc
movsl
das
sub
scas
in
sub
mov
popf
mov
jp
cs
in
sti
mov
dec
test
out
add
jp
lds
mov
sub
cmc
les
into
outsl
ret
xor
add
cmp
leave
push
mov
icebp
aad
push
insb
lods
jo
mov
mov
lock
lcall
scas
scas
pushf
adc
addl
lods
jb
lahf
inc
cmp
pusha
xor
pop
pop
movsb
or
adc
mov
js
sar
leave
mov
andl
or
or
mov
and
jge
cmpsb
mov
lea
and
sbb
lods
rcrb
cmp
outsb
leave
mov
mov
outsl
dec
mov
adc
mov
clc
mov
or
mov
inc
mov
sbb
cmp
xchg
lcall
adc
cmpsl
es
xchg
ret
js
add
pop
push
fstp
fwait
dec
outsb
in
ret
pop
xchg
jle
sahf
mulb
fwait
push
dec
aaa
in
mov
inc
sub
mov
xchg
mov
add
dec
addr16
jge
aad
cli
ret
inc
pop
sub
fsubrs
repnz
adc
push
in
popa
jae
sarl
xorb
inc
add
mov
sub
in
pop
inc
test
mov
adc
pop
fisubrs
pop
fidivrl
popf
repnz
addl
dec
sub
sbb
imull
and
adc
lret
mov
test
mov
fisttps
and
fstpl
mov
inc
mov
inc
push
mov
stos
sub
adcb
sub
fwait
lcall
sub
fldl
bound
cmpsb
fisubrl
and
outsl
bound
out
mov
idivl
jns
stos
push
cmp
test
mov
pop
cmp
mov
or
outsl
sub
lret
mov
js
repz
or
aad
leave
ret
adc
pushw
shrl
stc
fdivl
pop
lcall
mov
sbb
mov
inc
dec
jne
data16
enter
sub
xchg
inc
dec
mov
addb
dec
scas
loopne
dec
and
mov
shrb
add
repnz
cli
dec
fadds
in
jg
in
test
shrb
shlb
fmul
mov
stos
insl
aam
outsb
out
sbb
dec
ret
xor
sahf
lret
cmp
loopne
mov
adc
ja
inc
lahf
testl
push
movsb
lods
or
dec
mov
loope
movsl
xor
pop
mov
and
iret
add
jp
loope
cs
fst
xchg
mov
push
push
xor
add
jmp
ret
and
stos
call
bound
mov
cli
arpl
lahf
jne
xor
loope
lds
mov
pop
push
add
notb
xchg
bound
mov
jecxz
and
mov
push
and
out
xchg
cmp
mov
dec
shr
fbld
lock
insl
mov
iret
repnz
push
push
andb
add
lock
repz
add
push
push
hlt
lret
in
xlat
dec
mov
pop
cmp
lahf
arpl
popa
stos
sti
sbb
rorl
jmp
cmc
add
or
aam
push
or
dec
sahf
gs
and
sti
lcall
ret
add
sbb
mov
outsl
out
lock
mov
add
aad
sub
or
or
dec
and
jne
in
outsl
nop
add
and
scas
sbb
pop
shlb
push
mov
cwtl
jbe
call
xchg
pop
out
jne
aam
adc
outsb
test
jl
cs
ss
mov
mov
in
jecxz
jge
loope
mov
pop
or
sub
mov
mov
pop
sbb
pop
adc
pop
dec
push
loop
push
sub
push
jp
cs
lea
adc
ja
pop
out
add
sub
mov
jbe
stos
in
jl
jmp
in
mov
addb
inc
jae
fnstcw
andl
das
cmpsb
testl
dec
fst
mov
xor
enter
xor
rclb
sub
mov
or
movsl
mov
xor
add
scas
xchg
ljmp
or
adc
xchg
mov
push
add
test
add
std
icebp
sub
add
in
lea
jle
mov
xchg
xlat
data16
popf
fisubrl
aas
js
in
movsl
jmp
clc
push
aaa
movsl
adc
sbbl
xchg
dec
adc
push
in
fcmovu
movsb
mov
add
pop
xchg
push
cmp
ja
cwtl
mov
stos
popa
push
add
push
test
dec
fdivrl
cld
fisttps
popf
lret
fistps
push
out
hlt
mov
lea
mov
pop
lds
sub
mov
loopne
mov
adcl
test
js
mov
inc
sub
dec
testl
cld
push
rcr
popf
push
ds
sarl
add
cmp
aas
mov
cmc
clc
add
adc
push
outsl
sbb
out
xor
xchg
dec
int
cs
enter
sbb
lret
popf
dec
pusha
xor
in
jl
ja
test
fdivs
and
jmp
dec
std
imul
pop
out
jo
pop
in
ftst
ds
jl
lods
das
sub
fisubrs
movsb
iret
sbb
rcrl
mov
cmp
sub
adc
mov
fistps
sarl
rclb
inc
adc
jmp
inc
and
outsl
in
cmp
fimuls
leave
inc
cltd
outsb
jp
loopne
int
adc
sbb
jg
aad
jbe
mov
rcrb
daa
stos
insl
scas
cmpsl
or
int
mov
cmp
xchg
xor
hlt
insb
jecxz
subl
sbb
jae
ja
mov
dec
mov
daa
sbb
inc
into
ss
sub
xchg
lahf
or
sub
hlt
and
mov
dec
call
call
dec
insb
jb
cwtl
rorl
mov
dec
add
sbb
scas
mov
lods
xchg
ret
sti
lds
fsubrl
loop
push
inc
cmp
setbe
or
pop
faddl
xchg
call
inc
aaa
push
cmpsl
xor
cli
rolb
sub
jb
and
in
and
cmc
push
mov
or
enter
jl
xchg
cmp
mov
ret
fsubl
ja
scas
pushf
shrb
ficompl
fisubrl
xor
cs
cmpsb
mov
sub
shrl
hlt
ficoml
ja
dec
jp
jmp
mov
loope
mov
negl
mov
cmp
ret
int3
leave
fwait
push
in
ret
and
jns
out
mov
lahf
ret
pusha
sbb
or
and
fmulp
jecxz
bound
adc
stos
jns
repz
sti
fmull
mov
xor
and
jge
lcall
adc
and
xchg
shrb
jl
mov
cld
sbb
pop
jecxz
xor
mov
xchg
jge
cmc
pop
mov
sbb
pushl
inc
sub
cmpb
adc
cmp
sti
push
scas
ljmp
rcrb
ret
mov
add
xchg
scas
push
mov
in
mov
leave
aad
scas
inc
int
cwtl
dec
int
lret
cmp
or
inc
push
ret
aad
lret
setp
cli
das
mov
pop
cmc
pop
mov
test
imul
jl
dec
inc
cmp
push
addr16
push
outsl
xlat
dec
das
das
add
ret
inc
push
nop
xchg
repz
cmp
aas
outsl
mov
jno
push
int
mov
sub
inc
loop
pop
in
js
pushf
jmp
enter
mov
das
imul
push
test
cwtl
cmpsb
jb
cmpsb
jns
and
pop
int3
xchg
fcmovb
or
clc
fnstcw
inc
negb
push
rep
pop
add
add
aam
adc
sahf
and
add
xor
push
pop
jno
and
or
in
mov
cltd
inc
testb
mov
xchg
xchg
push
sub
mov
mov
ss
outsl
jg
inc
ljmp
popf
pop
fsub
imul
jmp
cmp
bound
je
fndisi(8087
xchg
mov
mov
jne
mov
addr16
or
mov
imul
mov
mov
jge
push
adc
mov
jp
inc
sub
mov
add
pop
aas
scas
push
inc
test
aam
mov
loop
inc
loope
xorb
or
pop
fbld
fisttpll
cld
xor
adc
mov
lahf
daa
dec
adc
xor
ja
mov
jb
push
call
dec
pusha
pop
dec
cmp
jmp
std
jmp
push
pop
clc
loope
dec
lcall
out
aaa
adc
push
dec
fbstp
hlt
js
xor
ret
jmp
outsb
mov
loope
pop
mov
leave
sbb
pop
sub
jb
pop
test
fcmovnb
pop
mov
test
sbb
roll
jecxz
mov
jecxz
mov
push
jg
sahf
mov
ds
stos
jno
pop
scas
outsl
loope
popf
insl
addr16
outsl
xor
or
popf
and
filds
inc
std
jmp
pop
cs
jns
mov
dec
inc
pop
rcll
xchg
cli
dec
js
mov
xchg
cld
cmp
repz
shlb
adc
or
jns
aad
push
cmp
jno
xchg
jg
adc
sub
sub
int
ret
flds
call
icebp
inc
out
out
ljmp
daa
test
lea
ss
stos
sub
dec
in
and
pop
pop
decb
fmuls
mov
dec
insb
sbb
cmp
add
cltd
clc
rcl
lcall
add
jbe
and
test
daa
add
sub
mov
fidivl
jmp
ja
mov
mov
push
cmpb
lods
mov
iret
and
push
es
sbb
pop
cmp
push
cmp
fcmovnu
inc
push
and
sti
mov
push
insl
lahf
jp
xchg
in
or
lock
call
sub
sti
mov
push
pop
mov
es
mov
out
xor
das
push
inc
jno
mov
xchg
repnz
adc
insb
xor
push
dec
or
icebp
idivb
dec
mov
push
andl
xchg
sub
cmpsb
call
roll
and
fmul
adc
arpl
sub
inc
sbb
dec
jnp
ret
ljmp
leave
pushf
ret
add
or
frstor
cmp
js
lret
movsl
sub
xor
push
lahf
push
loopne
sub
loope
jo
ficompl
mov
fimull
add
or
inc
mov
cmp
lahf
imulb
push
jecxz
jae
sub
mov
mov
inc
sbb
in
movsb
push
adc
jg
sbb
lret
cld
outsb
adc
jns
repz
cs
shl
popf
ljmp
mov
mov
clc
xchg
fs
imul
push
mov
push
mov
leave
mov
in
sahf
popf
jb
mov
inc
sar
jne
fadd
mov
insl
hlt
cwtl
test
pop
sahf
push
in
std
jp
pop
or
sub
inc
fidivs
ror
and
stc
cmp
lods
xchg
jl
mov
inc
inc
push
rcr
jns
cmp
cwtl
inc
cs
fxch
jb
aaa
roll
sub
daa
cmp
sbb
jge
xchg
ljmp
jbe
xor
jb
cmp
add
inc
js
mov
in
push
pop
and
rolb
add
loope
sarb
mov
add
push
add
cmp
xchg
data16
xchg
inc
call
fadd
repz
mulb
leave
xchg
sub
scas
nop
mov
mov
lea
loop
popa
push
loopne
dec
pop
jne
push
inc
nop
jae
aaa
jmp
fdivr
jecxz
fs
inc
mov
ja
sub
call
ret
mov
pop
std
fsts
adc
popa
call
xchg
jno
sub
repnz
xchg
sbb
sarl
fstps
aad
arpl
cmp
test
mov
fisubl
xchg
loope
leave
xor
loopne
pop
movsl
stc
aas
cmpsl
mov
add
aas
lea
or
or
cld
adc
cvtdq2ps
mov
inc
scas
push
pop
cmovs
lret
fld
jp
push
pop
out
jl
repnz
aaa
xchg
je
xchg
popa
adc
aaa
int
xor
fnstenv
shrb
push
cli
adc
xor
iret
xchg
cltd
push
popf
outsl
push
int3
into
fisttpl
mov
jmp
mov
arpl
pusha
mov
mov
leave
pop
add
inc
or
scas
mov
sbb
out
mov
mov
addb
inc
cmp
movsl
mov
in
lods
inc
nop
test
xlat
leave
mov
sbb
aaa
movsl
xor
add
xor
call
test
mov
loopne
addr16
mov
mov
sub
int
add
fldenv
repnz
inc
imul
jne
in
test
inc
sub
push
or
mov
fucom
mov
dec
xchg
push
sbb
sub
jg
cltd
inc
adc
cs
push
call
subb
jp
cmp
int
push
ret
in
aad
lea
clts
and
out
loope,pn
adc
pop
inc
push
aas
cmp
mov
aaa
push
insl
push
push
lods
xor
mov
pop
xchg
arpl
outsb
sub
jne
stos
cmp
mov
mov
or
xchg
in
jns
insl
inc
ror
sub
out
int3
leave
outsb
xor
add
repz
inc
dec
fdivrs
add
loop
aas
notb
subb
inc
lret
mov
and
or
jae
and
and
inc
fisubrl
mov
or
gs
push
into
out
iret
mov
das
inc
dec
xchg
mov
xchg
ljmp
rcrl
mov
mov
mov
in
inc
testl
sbb
cld
pushf
mov
lahf
dec
fwait
pop
subb
idivl
mov
ficoms
jle
jne
sub
lea
fbstp
fsincos
xor
sbb
in
mov
hlt
pop
xor
xor
push
pop
cmp
or
cmp
push
jb
mull
arpl
imul
cmp
mov
outsb
cmp
sub
fnstcw
push
icebp
rcrl
mov
cmp
jmp
mov
xchg
adc
pop
mov
lds
lcall
out
push
insl
int
mov
in
aas
and
mov
mov
sbb
xor
mov
in
and
clc
jbe
test
repz
add
or
cmc
mov
adc
in
jmp
adc
loop
dec
cld
or
sbb
pushf
pop
int3
into
or
jb
mov
ljmp
scas
in
in
xchg
mov
pushf
mulb
dec
mov
and
jl
test
stos
stos
ret
mov
cmp
mov
or
test
shlw
xchg
pop
push
sbb
enter
ja
add
repnz
dec
das
jle
xchg
cld
pop
adc
or
sbb
in
into
mov
repz
scas
sbb
aaa
mov
inc
mov
dec
fdivs
push
clc
fsubrs
ret
insl
mov
mov
xchg
jbe
pushf
sbb
pop
sbb
dec
ja
jmp
mov
add
sti
pop
pop
pop
hlt
rcll
pop
subb
pop
adc
xchg
ss
cmp
inc
repz
fs
dec
dec
shlb
sub
cli
out
pusha
adc
test
adc
js
aad
mov
fmull
push
jae
push
in
arpl
xchg
ret
into
inc
cld
stos
data16
push
add
movsl
dec
ljmp
cmp
xor
fimull
cmpsl
rcll
mov
xchg
add
lret
fucom
fdivl
jge
orb
inc
pop
into
mov
test
bound
add
call
and
addr16
sbb
cltd
popf
fiaddl
lea
cli
cmp
push
inc
jecxz
out
mov
fsubl
pop
xchg
push
std
or
jmp
icebp
jae
cltd
stos
call
mov
mov
adc
cmp
popf
add
sbb
dec
push
mov
push
xor
iret
mov
in
pop
jnp
inc
ds
scas
arpl
xchg
idivl
jl
mov
inc
lods
jnp
add
pop
add
or
movsl
test
out
jl
mov
push
in
in
pop
pusha
stos
gs
test
outsl
imul
or
push
addr16
sub
das
xor
pusha
in
adc
outsl
xorb
pushf
popa
popf
out
cli
push
clc
mov
mov
orb
mov
leave
enter
sbb
ds
jge
mov
fsubrl
movsb
aaa
rol
and
sbb
cmpb
cmp
or
mov
pop
or
pop
pop
mov
enter
fimuls
cmp
sub
pop
cmp
or
dec
insl
mov
insb
xchg
push
and
push
jecxz
insb
sbb
dec
movsb
mov
mov
mov
cmp
xor
negb
fwait
test
push
push
sbb
jns
jno
mov
ss
orl
ds
arpl
adc
mov
fwait
push
mov
sbb
xor
inc
mov
mov
loop
in
sbb
icebp
push
mov
mov
xchg
xchg
sbb
xor
gs
mov
jle
sahf
adc
push
dec
jmp
xlat
fwait
inc
pop
pop
mov
nop
xchg
mov
jp
repz
ss
inc
pop
scas
daa
cld
nop
movsl
sub
jbe
bound
jno
sahf
repz
inc
mov
xorb
mov
xor
jp
xor
fnsave
data16
imul
test
mov
inc
ret
and
aam
and
fildll
hlt
pop
test
adc
pop
add
dec
mov
mov
inc
sub
insb
mov
pop
addr16
insb
in
insb
jl
jmp
mov
pop
push
push
clc
sub
pop
idivl
xor
sub
aas
push
cwtl
jmp
dec
aaa
sub
or
sarl
pop
inc
xlat
fwait
aaa
imul
sub
imul
subl
fstps
adcl
hlt
out
jnp
xorb
and
bound
xor
aaa
int
dec
sbb
or
xchg
inc
dec
shlb
sbb
inc
and
jmp
push
xor
loope
mov
mov
in
mov
mov
in
test
xchg
gs
and
xchg
insb
or
cmc
dec
jecxz
add
aas
and
cmp
in
xchg
push
negl
std
jp
insb
cmpsl
fnstcw
ljmp
lds
and
pop
mov
out
xor
mov
push
push
fisubrs
pop
adc
repnz
icebp
shr
or
mov
push
fldenv
or
inc
push
iret
and
xor
cmp
sbb
sbb
and
je
push
jbe
bound
cmp
fsubrs
push
cmp
rorb
subb
popf
xlat
ljmp
dec
mov
xor
or
in
insb
mov
lahf
dec
lcall
aaa
pop
aam
adc
adc
sbb
xchg
out
jno
push
sub
sbb
jp
and
sbb
stc
movq
jnp
ret
jnp
hlt
push
les
adc
test
sbb
enter
jp
xor
aaa
add
add
cmp
sbb
xchg
cs
fwait
test
sub
cli
leave
cmp
mov
xor
imul
pop
or
sbb
pop
sahf
std
out
mov
loop
in
popf
mov
inc
out
stos
jns
mov
cmp
pop
pop
xchg
outsb
ss
test
sahf
mov
push
inc
outsl
into
out
aam
out
fidivrs
xchg
pop
and
gs
mov
inc
pushf
push
out
pop
inc
in
lahf
cmc
pop
dec
pop
mov
aam
mov
gs
pop
into
out
les
dec
mov
lods
mov
mov
xor
jnp
test
mov
push
shr
pop
xor
in
jp
mov
mov
outsl
jge
andl
push
fsubl
dec
jge
jnp
es
inc
adc
and
cmp
mov
pop
fbld
arpl
daa
mov
ljmp
cli
cmpsb
loopne
mov
lock
or
dec
add
sbb
mov
push
cmp
jnp
int
sbb
scas
ds
mov
out
dec
outsl
icebp
arpl
jmp
xor
cmc
fcmovnbe
insb
push
cltd
mov
into
fistpl
or
fldcw
out
aad
sbb
inc
pop
test
mov
and
inc
cwtl
mov
mov
mov
in
loope
inc
xchg
push
out
fwait
dec
es
lea
loopne
mov
stos
pop
ret
mov
mov
dec
les
outsl
xor
rol
stc
es
xchg
sub
les
push
xor
cmp
imul
ss
xor
pop
out
cltd
inc
and
or
fs
arpl
outsl
and
jns
repnz
sub
xchg
xor
fisubrl
pop
lea
jo
pop
jmp
xor
pop
adc
pop
and
mov
sti
js
mov
mov
inc
jo
bound
xchg
xchg
mov
fisubrs
cmp
and
inc
push
not
scas
mov
lcall
addr16
add
lds
shr
rcrl
aad
and
stc
rorl
push
subb
test
jnp
cmp
sub
jp
dec
inc
jbe
add
repz
mov
inc
adc
lock
mov
imul
lods
mov
sbb
insl
int
gs
cmp
adcb
insl
imul
cmp
and
in
adc
dec
jns
push
xchg
int3
in
lcall
cmpsb
push
stc
mov
dec
lcall
sub
adc
movsb
adc
testl
cmp
add
aam
ja
aas
lret
fsub
in
and
pop
push
sub
movsb
outsb
push
ret
mov
xchg
popa
sarb
push
cwtl
jecxz
ret
das
cmp
sar
scas
ret
push
into
inc
inc
dec
lock
jg
mov
jo
jg
loope
ret
xchg
adcb
xchg
pushf
mov
xchg
cld
adc
lret
je
dec
or
jnp
jl
test
jg
pop
add
scas
adc
pop
enter
repz
js
dec
adc
out
xchg
pop
add
dec
push
test
xchg
dec
or
cmp
in
and
sub
popa
fisubl
sbb
lahf
ds
xchg
test
out
mov
adc
dec
push
cmp
add
cmpsl
sbb
inc
mov
cmp
aas
test
xchg
pop
push
or
xchg
lret
cwtl
mov
fwait
pop
fcmovbe
fcomps
push
xchg
xor
lock
mov
mov
xor
icebp
mov
jo
loop
pop
mov
mov
jb
pop
jecxz
scas
sub
sbb
insl
movsl
jne
pop
mov
and
lahf
cmp
bound
sahf
sbb
data16
test
jmp
sbb
jl
mov
ds
sub
cmp
add
push
pop
lods
push
or
xor
sub
testl
xchg
pop
pop
into
les
or
mov
jo
cmc
pop
adc
xor
ret
xor
cld
add
dec
pop
pop
test
push
or
jo
inc
sbbb
insl
dec
outsb
sahf
pop
xor
inc
adc
in
or
mov
rcr
sbb
jge
mov
fimull
push
xor
aam
icebp
xor
cmp
pop
int3
add
fwait
mov
pop
cmp
mov
push
sub
jno
pop
lret
les
cmpsb
inc
jmp
push
adc
fdivl
pop
adc
aaa
add
hlt
aaa
ljmp
popf
pop
mov
sbb
insl
lods
sar
push
rcll
jo
xchg
int3
xchg
mov
clc
add
outsb
xchg
stos
aam
dec
add
xchg
xchg
xor
dec
mov
mov
mov
out
scas
inc
mov
mov
fistpl
btc
inc
sub
loope
lods
xor
mov
sub
frstor
mov
popa
pop
mov
mov
cmc
shrb
jns
mov
repnz
cmpsl
ljmp
or
push
pop
or
ret
mov
mov
mov
mov
lea
sub
out
xchg
ss
add
cs
mov
mov
repz
into
ret
push
into
xor
push
aad
int
adc
lds
and
sahf
lea
xor
out
es
cltd
je
mov
xchg
mov
dec
or
fs
inc
push
mov
les
pop
pop
das
ss
ljmp
ljmp
jb
push
inc
pushf
cltd
cld
in
or
sbb
inc
hlt
clc
ds
cld
stc
push
fcmovu
pop
mov
sbb
cmp
dec
imul
xchg
push
pop
lcall
subb
jo
lds
inc
push
jecxz
cmp
xchg
dec
daa
jecxz
push
popf
shr
les
xchg
or
mov
rcrl
sahf
xchg
das
dec
test
iret
fwait
add
push
ud0
fstl
jle
dec
add
inc
mov
xchg
dec
notl
add
xchg
xchg
xchg
mov
add
xor
pop
and
orl
dec
sbb
and
mov
pop
sahf
adc
subl
ret
sahf
cmp
pop
jle
aam
call
xor
out
dec
add
nop
adc
data16
or
xorb
or
sbb
ret
cmp
pop
pop
dec
mov
adc
push
mov
clc
xlat
gs
aad
stos
pushf
mov
lret
and
mov
sbb
cld
out
dec
inc
clc
inc
mov
adc
sti
repnz
loop
insl
jno
inc
push
aad
mov
fistps
mov
jmp
push
loop
mov
icebp
pop
addr16
push
adc
andl
xchg
xchg
xchg
inc
mov
xorb
xchg
and
dec
mov
sub
cs
mov
xchg
ljmp
les
cmp
add
call
rorl
rcrb
add
and
jg
and
imul
sbb
mov
es
xchg
cmpsl
add
jg
or
js
xchg
cmp
add
aaa
xor
sbb
lcall
pop
iret
push
imul
adc
fwait
xchg
fs
lock
call
ss
pusha
repz
insb
fs
push
push
lcall
pusha
cmp
inc
mov
fsts
adc
add
pop
dec
jecxz
arpl
out
imul
stc
sarb
je
cld
fisttpl
cmp
jne
pop
jno
lahf
xor
jne
das
dec
mov
mov
test
nop
fcomps
cs
jo
cmp
mov
inc
and
pop
movsb
icebp
cmpsl
or
jmp
push
and
mov
je
and
in
aad
xor
stos
xor
or
jnp
dec
and
sahf
xlat
pop
jmp
sub
std
lcall
aaa
inc
insl
fdivs
jne
ja
jecxz
push
into
out
loopne
mov
fidivrs
sub
push
and
pop
mov
gs
push
dec
xchg
dec
in
mov
call
jmp
mov
lret
mov
out
adc
dec
push
mov
xchg
insl
ret
dec
in
ret
xor
das
mov
lods
jg
es
mov
cmp
cwtl
in
loope
rcr
push
shlb
sbb
sub
sti
sub
scas
ret
fwait
cli
pop
jmp
add
int
mov
mov
js
and
loop
lea
adc
jle
add
mov
lods
loop
jbe
hlt
inc
decb
repz
int3
cmp
fstl
insb
shl
adc
mov
dec
cmp
cs
fwait
jne
and
test
mov
adc
xor
jbe
push
jb
inc
or
cmp
add
inc
mov
dec
lock
ja
xchg
lods
lock
insl
push
rorl
dec
into
outsl
scas
jne
inc
int
aas
adc
inc
gs
lahf
pop
std
dec
arpl
mov
dec
scas
mov
scas
rep
xchg
inc
sub
push
mov
insb
xor
jnp
out
xchg
push
push
push
mov
aas
fldcw
sbb
negl
pop
xchg
push
cmpsl
jb
in
mov
xchg
movsl
or
fidivrs
adc
sbb
flds
clc
xlat
cmp
cmp
ljmp
xacquire
jmp
or
cmp
out
movsb
lods
out
pusha
gs
stos
ds
sub
jge
mov
out
stos
xchg
sbb
ljmp
mov
hlt
dec
dec
pushf
mov
jp
push
je
sbb
popa
lahf
add
mov
cltd
test
sub
fstps
fldl
pop
into
jle
mov
hlt
pushf
adc
int3
sub
scas
push
cmp
subl
rcll
insl
xchg
dec
mov
and
xor
xchg
adc
xor
outsl
roll
das
jo
xchg
adc
xchg
add
pop
inc
jo
loopne
inc
sbb
or
imul
orb
scas
cld
ret
test
mov
dec
test
add
push
mov
pop
jge
cld
cmpsl
lock
pop
jl
mov
pop
pop
int
fadds
into
push
int
mov
imul
fdivs
or
pop
mov
call
xchg
insb
add
aad
or
xchg
mov
inc
sub
mov
xchg
out
shrb
adc
pop
push
lret
in
mov
out
setno
sahf
loopne
xchg
in
aam
xchg
ret
stc
into
out
test
hlt
push
cmp
pushf
fisubrs
dec
mov
mov
and
aaa
test
mov
insb
and
scas
cmp
into
rcll
sub
cmp
out
fs
out
arpl
cwtl
in
and
stc
orb
mov
sub
cmp
lcall
jno
xchg
push
sub
cmp
ss
je
loopne
inc
sub
out
aam
out
fldl
arpl
or
push
fsubrl
fadds
jp
andl
test
push
push
cmp
in
mov
push
xchg
lods
jle
in
arpl
in
mull
icebp
movsb
imul
mov
push
sub
mov
aaa
and
insb
lea
sbbb
dec
js
loop
imul
fisubrl
fstpl
or
leave
xor
xor
pop
stos
mov
dec
cmp
enter
mov
out
push
and
arpl
push
lahf
shll
xor
jnp
mov
in
or
daa
sub
movsl
add
xchg
rcrb
push
in
popa
push
rcrb
sub
ret
xchg
mov
mov
repz
movsb
jns
lock
aaa
enter
xchg
shrb
mov
inc
or
xor
fwait
adc
in
mov
push
jg
adc
mov
inc
xlat
sar
sbb
jns
dec
jl
xor
ja
sahf
lock
out
shll
and
xchg
mov
xchg
call
fcmovne
cmpl
or
pop
je
in
outsl
enter
xchg
push
mov
xchg
cmp
aam
sub
jns
lahf
lahf
add
mov
lret
mov
ret
lods
js
mov
ds
out
sbb
lock
bound
jne
mov
adc
into
fwait
rorb
or
push
xchg
mov
ret
jp
lahf
xlat
lahf
inc
mov
lods
shl
mov
inc
pop
and
xor
out
sub
cmp
cwtl
subb
add
stos
insb
xor
mov
insl
xlat
pop
fistps
out
mov
push
xchg
dec
cltd
test
orl
jl
fldt
mov
pop
add
lods
xchg
repz
inc
testl
lds
xor
sub
cmp
pop
fdivp
in
mov
jp
pop
loop
jnp
inc
scas
jns
jmp
cwtl
mov
sbb
rcl
icebp
popa
push
adc
loop
adc
mov
cs
dec
dec
mov
enter
in
lret
movsl
push
lods
cwtl
or
insb
loope
out
mov
jecxz
push
das
aas
sbb
and
ret
lock
rolw
xor
lock
je
add
imul
mov
pop
loopne
jo
and
jne
int
dec
jns
cli
fwait
pop
lret
jl
out
faddl
xor
fmull
adc
aad
ljmp
dec
lahf
cmp
fistps
adc
sbb
rcrb
test
in
sub
outsl
aad
ret
sti
cmpsl
hlt
rcl
in
std
scas
mov
loopne
jge
ljmp
in
lock
xchg
jecxz
fidivs
inc
movsl
mov
mull
jge
pop
insl
and
mov
push
sbb
xchg
push
mov
cmp
jp
or
dec
lds
push
sub
out
dec
rcrb
mov
std
subb
inc
jle
jp
lahf
imul
mull
jbe
sub
sbb
jbe
push
test
or
fsts
sub
xchg
xor
inc
stos
loop
outsl
cltd
loope
loop
lahf
insb
jg
sti
cmc
jns
push
shlb
push
in
arpl
sub
cwtl
xor
inc
sub
cmp
pop
push
shl
xchg
addr16
js
pop
inc
repz
pop
jl
cs
mov
cmp
shll
or
rorb
out
jmp
stos
push
cmpsl
scas
dec
call
mov
lahf
js
sub
aad
and
sub
xor
out
add
xchg
movsb
ljmp
or
sub
mov
repz
sub
arpl
sbb
divl
fdivrl
repz
jmp
cmc
sub
jb
imul
adc
repnz
test
xor
jle
lock
fidivs
dec
or
xor
ja
sub
aad
cmp
es
mov
xor
ljmp
cwtl
jecxz
jno
notl
mov
imul
jno
xor
dec
sti
xor
cmp
dec
repz
int3
cmp
icebp
push
pop
sub
mov
jne
add
incl
pop
pop
shrb
sub
cmp
sub
cmp
in
mov
arpl
xchg
pop
dec
sbb
aas
jg
into
cmp
out
mov
push
mov
jbe
push
pop
cli
xchg
adc
or
inc
fildll
lods
clc
sub
ret
xor
mov
dec
adc
mov
fwait
std
dec
jg
cs
int
and
xchg
insl
push
sbb
sti
xchg
jmp
push
cmp
sbb
add
pop
adc
mov
les
or
pop
mov
sub
xor
clc
in
ss
jmp
sbb
in
xchg
outsb
rorl
test
fcmovne
sti
sub
sarb
xchg
out
mov
ret
repnz
sbb
cs
mov
adc
cvtps2pd
shlb
mov
xchg
cltd
mov
bound
pop
stos
inc
mov
bnd
lock
mov
in
push
push
inc
imul
push
pop
js
iret
test
xchg
pop
dec
jbe
jg
mov
lret
mov
inc
rcrb
daa
push
in
das
xor
jbe
push
aam
sub
lea
mov
fdivrs
les
hlt
test
xchg
mov
cmp
cmc
xchg
mov
popa
push
out
pusha
push
sarb
sbb
xchg
inc
fmull
outsl
dec
dec
and
or
push
jmp
sbb
imul
movsb
clc
hlt
das
lods
flds
jmp
sbb
ds
ret
xor
stos
lcall
in
mov
sbb
rorb
lea
inc
jnp
clc
testl
add
fcomps
lret
lods
test
dec
subb
mov
cltd
pop
pop
mov
mov
pop
push
xor
cmpsl
jg
divl
inc
xchg
adc
xchg
lock
xchg
fmuls
cmc
mov
lods
cmc
inc
shr
les
pushf
inc
jbe
call
divb
mov
imul
jl
test
adc
xchg
pop
cld
movsl
push
movsb
je
popf
dec
inc
je
dec
movsl
iret
aad
fdiv
xlat
jg
jno
das
push
out
movb
scas
jecxz
repnz
cmpsl
sbb
divl
dec
add
mov
in
add
nop
push
jb
push
ja
cs
pusha
fistps
movsl
sbb
in
or
or
inc
adc
xor
cmp
pop
xchg
in
dec
insb
jmp
cmp
fimull
in
data16
repz
mov
mov
mov
std
movsl
int3
in
xchg
cli
jge
xor
push
dec
pop
rclb
pop
test
fistps
mov
mov
bound
and
lret
scas
outsl
aas
test
bound
push
inc
cmp
in
add
loope
lds
pop
or
shrl
fsub
xchg
std
mov
jns
sub
cmp
jge
gs
pushf
cmpsb
repz
pop
sub
add
icebp
mov
dec
js
loop
mov
aaa
fs
pushf
xor
jl
inc
out
and
jb
and
dec
sub
loope
addr16
aad
ljmp
dec
ds
outsb
mov
or
loopne
pusha
loopne
mov
cltd
arpl
or
sbb
mov
jg
push
std
fcomip
in
push
icebp
mov
mov
jl
out
dec
mov
sahf
add
das
in
xchg
daa
jp
sub
roll
movaps
lods
jmp
loopne
jecxz
arpl
fistpl
mov
idivl
cld
cs
rcl
and
cmp
in
xor
aaa
xor
pop
mov
lock
mov
in
fstps
jbe
mov
push
pop
in
je
xor
sbbl
sti
test
das
pop
aad
loope
stos
push
pop
xorb
adc
add
mov
fstl
pop
lahf
lods
aam
scas
in
sub
add
inc
sub
or
mov
or
inc
mov
xlat
cmc
dec
push
mov
pop
or
enter
jno
ret
sub
pop
lret
sub
add
jbe
sti
add
imulb
mov
ljmp
out
inc
pop
add
cmp
repz
out
inc
out
call
xchg
cmp
mov
inc
lret
hlt
hlt
rorl
cmp
dec
dec
pop
sahf
xor
fiaddl
lret
pop
aam
cltd
xchg
int3
popa
adc
repz
popf
mov
jmp
lods
sbb
sub
mov
mov
pop
cwtl
mov
dec
pusha
js
imul
int
stos
lret
adc
xchg
enter
scas
je
and
pop
mull
push
mov
cmc
jg
testl
gs
cmp
outsb
xor
daa
mov
cmp
push
addb
clc
cmpsl
add
out
movsl
mov
pop
sbb
xor
xor
and
in
xor
mov
loop
ja
rcrl
cmp
xchg
xor
xor
test
xchg
or
outsl
fcoms
sbb
pop
lahf
dec
rcl
addb
fisubrl
mov
pop
mov
pop
push
mov
outsl
fwait
stc
adc
aam
sub
dec
inc
movsb
jb
dec
fnstenv
jle
push
lds
shl
cmp
test
mov
cmpsb
jbe
cmc
cmp
xchg
xchg
mov
mov
or
lea
ret
gs
pop
mov
push
xchg
xchg
sub
and
mov
les
jbe
cmp
in
and
cmp
out
sbb
ficoml
dec
ret
xlat
and
cmp
ffreep
movsb
outsl
ljmp
call
jge
clc
sub
jg
sbb
cs
push
rcrb
pop
jb
mov
scas
adc
cwtl
ret
mov
xor
cmc
aam
adc
push
outsb
and
dec
pop
sub
jle
loop
pop
mov
lods
inc
les
scas
mov
je
push
push
aam
and
dec
test
insl
mov
pushf
mov
push
sbb
push
adc
cmp
fcoms
pop
daa
inc
mov
jae
jmp
adc
divb
add
add
jecxz
sub
jle
lret
or
icebp
ljmp
push
ss
xor
pusha
cwtl
sbb
xor
mov
jmp
pop
imul
cmp
or
cmpsb
shll
lods
and
lahf
fldt
fimull
xchg
scas
stos
mov
lock
xor
loopne
push
xor
cs
add
add
mov
repnz
sahf
sbb
insb
xor
rorb
cmpsl
mov
in
imul
adc
lcall
imul
push
adc
jmp
mov
test
or
cli
out
movsb
das
jns
std
pusha
mov
ret
xor
dec
sbbb
inc
bound
arpl
jl
in
in
bound
imul
cwtl
call
scas
push
cwtl
mov
sub
mov
lahf
xlat
push
scas
movsl
mov
mov
and
cld
xor
loopne
cmc
stos
cmc
in
jmp
pop
aam
shr
mov
test
pop
push
ja
cmp
jge
out
fstl
xchg
xor
rcrl
xorl
mov
push
out
aad
xchg
into
scas
inc
push
sbbl
lret
and
out
aas
or
inc
xchg
sub
and
sub
arpl
popa
enter
xchg
or
jno
or
popa
test
inc
and
add
enter
dec
mov
in
add
dec
insl
lods
pop
xchg
or
bound
cmp
sub
mov
cs
xchg
stc
fidivl
push
out
cmp
pusha
adc
repz
xchg
stos
stos
xchg
cmp
dec
cmpsl
pop
inc
adc
cmp
rorb
xchg
int3
dec
xchg
push
xchg
scas
push
mov
stos
or
cmp
xchg
push
sbbb
mov
and
add
adcb
in
mov
arpl
mov
imul
out
or
rcll
mov
xchg
ljmp
int
out
cmp
sti
push
dec
or
lods
or
insl
jle
jb
xchg
movsl
arpl
push
je
dec
out
shr
scas
push
out
stos
imul
jmp
bound
arpl
xlat
dec
ret
add
mov
mov
popf
or
les
mov
mov
aam
dec
fstl
sub
test
je
ja
dec
push
push
sub
imul
out
and
cmp
mov
mov
out
xorl
pop
sub
sbb
push
aaa
shrb
lret
js
sahf
sub
jbe
ljmp
stos
mov
inc
cltd
cmp
xor
or
inc
xor
xor
or
insl
cs
aad
ret
add
dec
xor
ljmp
outsb
jl
jecxz
pop
sub
or
addl
addr16
ja
adc
inc
mov
test
repz
xchg
add
ret
test
cmpsb
movsl
lock
adc
mov
jmp
cmp
add
test
xor
cmp
mov
lods
ja
sbb
dec
xlat
dec
cltd
enter
and
mov
adc
test
cmp
sub
mov
mov
arpl
iret
test
inc
xor
mov
mov
sub
inc
ss
addr16
sub
xchg
inc
xor
jb
test
xor
adc
jmp
fs
sarb
idiv
es
fidivl
movsb
fcompl
xchg
test
mov
xor
dec
xlat
in
xchg
sbb
jmp
mov
fadds
mov
hlt
neg
lea
pusha
mov
dec
shlb
and
xor
dec
pop
cwtl
xchg
cmp
fdivrl
sbb
cs
cmpl
mov
lahf
dec
jl
neg
jbe
mov
mov
fnstsw
bound
outsl
jae
js
push
test
mov
push
lods
inc
fs
xlat
test
inc
jp
mov
mov
aam
ret
mov
lret
xor
dec
push
xlat
mov
adc
xchg
mov
push
sub
and
add
testl
add
lcall
or
pusha
jecxz
movsl
loopne
jmp
pop
out
inc
sbb
outsl
mov
sub
fwait
or
or
loopne
jg
cltd
lea
mov
pop
xchg
rol
mov
mov
clc
pop
ljmp
sti
adc
sarb
sub
flds
shl
mull
fistpl
adc
movsb
xchg
xchg
rcll
gs
push
jp
lret
and
xchg
jns
add
push
sbb
in
add
scas
and
xchg
ret
lods
add
push
mov
pop
into
or
loope
bound
jg
sarl
adc
cmp
into
xor
mov
jne
cmc
inc
pop
jmp
add
ljmp
pop
xor
dec
leave
out
jb
fisubs
push
jecxz
stc
push
neg
pusha
mov
fimull
pop
ficoml
add
sub
cmpsb
ret
lock
jne
jmp
iret
cmc
jge
adc
xchg
sahf
xchg
mov
add
cwtl
jge
inc
fdivl
sbb
sahf
mov
and
fisubrs
ljmp
cmc
xor
pop
mov
dec
movsl
lret
in
adcl
adc
adc
fdivr
test
mov
push
test
leave
xchg
pop
dec
ds
xchg
adc
pop
adc
mov
push
dec
stos
mov
jge
das
sub
mov
dec
lcall
lret
lcall
cwtl
add
dec
or
xor
out
cmp
adc
aaa
jb
inc
dec
mov
insl
adc
pusha
into
pop
add
out
sub
adc
andl
push
sahf
in
dec
iret
shll
xor
hlt
sti
insl
or
xor
mov
in
out
xor
jno
hlt
fmulp
in
test
dec
test
mov
movsb
adc
repz
hlt
test
sbb
aas
outsl
cmc
mov
fbstp
daa
loopne
cmpsl
fs
movsl
jne
lock
push
jbe
test
pop
negl
stos
sub
lret
das
mov
mov
mov
and
mov
mov
stc
and
loop
ss
adc
aad
lcall
movsb
sub
fildll
and
mov
cld
test
dec
icebp
jne
loop
jnp
pop
stos
bound
pop
cmovle
subb
shll
xlat
inc
xchg
mov
sub
mov
and
push
xchg
insb
cmp
mov
pop
mov
sbb
mov
push
dec
mov
sub
pop
mov
mov
sbb
mov
and
jne
repnz
sbb
or
cmp
jmp
xor
lahf
cmp
jb
sub
iret
dec
xor
dec
int3
sbb
jae
pop
stos
sahf
lcall
nop
cmp
fisubl
hlt
sub
push
or
mov
inc
out
stos
imul
or
shrl
mov
stos
fnstcw
adc
int3
into
jbe
adc
push
inc
das
lahf
cmpsl
mov
aaa
arpl
cmp
repnz
das
xchg
aam
inc
je
fs
and
int3
insb
imul
dec
mov
rorl
lret
out
dec
ss
fld
cmp
fisttpll
les
pop
int3
repz
sti
into
xlat
scas
adc
dec
loop
cmpsb
dec
jmp
mov
mov
xchg
and
pop
scas
adc
push
mov
xlat
lock
pop
cmp
sar
cmpsl
xor
inc
cmpb
pop
std
sbb
jne
push
aam
inc
inc
outsb
add
xchg
or
sbb
xchg
dec
cmpsl
pop
arpl
jns
mov
xor
lea
adc
push
rcrl
xor
andl
push
inc
sub
adc
inc
cwtl
mov
ficoms
add
ds
push
jb
inc
or
jbe
sub
mov
popf
scas
hlt
push
repnz
clc
aaa
mov
xchg
es
scas
in
jb
xor
mov
imul
lahf
into
xchg
ret
aaa
mov
orb
dec
loopne
sub
or
add
pop
mov
orl
out
sub
adc
data16
loopne
cmp
jp
scas
outsb
push
iret
out
shll
inc
jp
in
aaa
sub
add
push
jge
xchg
cmpsl
push
mov
ds
push
dec
or
and
jg
movsl
pop
leave
ror
dec
fwait
out
mov
out
dec
mov
xchg
dec
js
ljmp
ljmp
loopne
mov
xor
xchg
fsubs
push
lods
xor
mov
push
loope
fisubrs
pop
scas
mov
sub
stos
das
xor
or
out
repz
std
adcl
rclb
dec
fs
in
and
jae
in
fs
mov
fistpl
dec
push
jmp
idivl
jp
dec
jmp
gs
iret
imul
icebp
mov
int
xor
adc
dec
icebp
mov
cwtl
mov
jns
call
xor
mov
add
shr
mov
jmp
js
test
xor
dec
dec
jecxz
jg
movsb
enter
and
dec
fsubrp
imul
addr16
xor
mov
or
popa
inc
dec
jle
dec
negb
cmc
dec
mov
testl
mov
push
dec
aaa
mov
mov
jge
into
cmp
lock
add
adcb
xor
adc
popf
fwait
cmp
enter
ret
jns
or
xchg
rcl
add
or
mov
push
scas
mov
shlb
xorl
scas
lds
shrb
fprem
xor
dec
mov
or
into
test
stos
dec
ret
xor
pushf
adc
js
dec
cltd
aaa
test
and
insb
sub
in
lods
push
jnp
sti
int
outsl
pop
js
in
cs
pop
pop
pushf
outsl
mov
dec
stos
stos
mov
inc
dec
fimuls
sahf
xor
dec
fists
mov
test
shlb
cmp
push
inc
loop
sbb
mov
or
ja
imul
pop
test
and
cmp
pop
pop
hlt
dec
out
pusha
pop
dec
jo
mov
sbb
sbb
setp
xchg
xor
enter
and
fistl
test
cmc
sbb
es
iret
shl
popl
dec
rorb
inc
dec
add
fbld
and
pop
call
shrl
jns
fldl
lea
cld
push
outsb
dec
sbb
mov
jle
rcll
xchg
fstp
stos
call
mov
xchg
test
dec
push
adc
push
jbe
dec
mov
xchg
icebp
jge
xor
dec
inc
xchg
cmp
mov
scas
add
rolb
pop
movsb
test
je
loopne
insb
lock
mov
xchg
stc
mov
insb
push
dec
mov
into
and
lea
in
dec
push
in
mov
and
inc
pop
sub
add
jg
fs
push
adc
pop
pop
hlt
push
xor
test
repnz
adc
ss
sbb
inc
pop
nop
mov
mov
test
push
bswap
push
inc
ficoml
xlat
pusha
mov
cmp
fsubrs
mov
in
jg
mov
arpl
jae
sbb
aaa
negl
test
in
inc
hlt
dec
add
insl
outsb
lahf
bound
sub
xchg
es
movsb
loope
js
mov
enter
scas
mov
dec
jmp
push
mov
fisttpll
cmpsb
or
aas
inc
or
xor
mov
inc
sbb
push
inc
xorb
add
add
icebp
outsl
cmp
and
and
xchg
push
cmp
cmp
aas
jmp
push
stos
jmp
cmp
cmc
pushf
imul
push
sbb
rol
push
pop
jg
jle
outsl
or
shll
mov
sbbb
popa
lea
sbb
dec
sbb
mov
fs
ret
out
insb
aad
adc
pop
out
jle
in
arpl
test
add
jns
sti
aaa
push
jno
pop
lds
jbe
sbb
imul
sub
pop
sbb
out
subl
fisubrs
cltd
nop
sahf
xchg
adc
iret
jne
push
lods
je
aam
cmp
out
icebp
cs
cmp
xchg
lea
fnstsw
lahf
xor
jno
jo
rorb
mov
loopne
xor
insb
lret
sbb
in
mov
xchg
ret
call
adcb
pop
stos
xchg
push
mov
insl
push
inc
aaa
and
flds
adc
cmp
jae
imul
fs
ljmp
imull
jno
lret
fstps
ss
insb
stos
or
loop
arpl
in
loop
jbe
add
cmp
fsubs
mov
stos
out
jl
roll
fstl
scas
push
xchg
cwtl
xor
dec
fisubrs
popa
jg
fs
cmp
and
outsl
adcl
and
xlat
jb
mov
and
loope
nop
push
dec
sub
mov
dec
cmpsb
xchg
inc
popa
pop
add
shll
and
cmp
pop
roll
imulb
outsl
bound
ret
lds
cmp
adc
das
dec
dec
lahf
clc
adc
xchg
xchg
pop
jecxz
or
dec
xchg
sbb
shlb
jmp
jnp
loop
pop
fdivrs
iret
and
inc
imul
lret
mov
dec
dec
inc
mov
dec
je
dec
dec
arpl
jae
aas
jnp
adc
push
xorb
sbb
jmp
pop
add
scas
insl
fdivrs
cmp
cmp
lcall
pop
push
xlat
aas
in
call
cmp
inc
mov
or
ds
xor
fwait
test
push
and
imul
dec
addr16
incb
xchg
scas
pushf
adcl
fsub
in
lahf
addr16
or
loope
mov
ljmp
cmp
jns
jbe
icebp
adc
mov
shlb
jbe
dec
inc
aaa
jbe
mov
jmp
in
cmc
jmp
ja
sub
adc
mov
movq2dq
jbe
jae,pn
cs
out
mov
sbb
xor
mov
and
and
jmp
mov
pop
mov
xor
pop
test
filds
loop
loope
xchg
pop
add
pop
sub
loope
es
outsl
pop
push
or
jecxz
addr16
sub
addb
sub
js
lcall
cmpl
movl
dec
cld
mov
mov
push
and
in
lds
hlt
mov
mov
mov
add
aaa
inc
xchg
xlat
inc
and
add
push
jl
and
sub
cltd
push
mov
mov
out
ss
pop
out
pop
popl
dec
xor
cli
cmp
cmp
jle
adc
dec
xor
lcall
adc
inc
leave
loopne
xor
lret
pushf
xor
addr16
fsubp
inc
popa
repz
sub
in
je
pop
adc
jp
cmp
mov
lock
mov
nop
mov
mov
or
sahf
jmp
jmp
enter
inc
mov
xchg
ljmp
out
inc
ret
inc
nop
mov
and
xchg
icebp
sar
lods
jbe
mov
in
adc
sub
cli
ljmp
pop
fnsave
xchg
mov
pop
inc
inc
adc
add
sub
lea
lahf
addb
jmp
cltd
jmp
xor
fimull
ret
xchg
sahf
push
imul
push
aam
add
ja
fmuls
call
fs
mov
addr16
mov
test
dec
lods
xchg
jecxz
js
sti
xchg
movsb
xchg
fcmove
out
xchg
daa
fs
cmc
or
arpl
cmpsl
aaa
dec
push
loopne
pop
jns
mov
outsb
test
add
repz
mov
push
mov
daa
or
mov
enter
sbbl
cmpb
jmp
aaa
fwait
mov
call
ja
xor
mov
fnsave
ret
push
sbb
arpl
repnz
rcrl
adc
mov
add
ret
dec
sub
inc
cmpsb
dec
cmp
mov
scas
stos
cli
mov
and
pop
lea
movsb
adcl
cmpsb
push
jae
shrl
out
mov
ds
mov
pop
inc
jge
cli
xor
test
js
adc
xchg
mov
out
in
push
mov
lods
stos
cwtl
xor
dec
mov
scas
add
adc
imul
fbld
cld
mov
out
insl
aas
sub
jg
jbe
jmp
lea
sbb
xor
inc
mov
push
faddl
jne
leave
add
mov
icebp
bound
mov
aaa
push
push
cwtl
iret
ret
and
mov
mov
push
pop
cltd
negl
mov
cmp
out
lret
out
push
mov
pop
add
sub
sub
inc
std
cld
sarl
xor
daa
jmp
into
shll
mov
lret
adc
je
in
adc
push
push
into
insl
incl
dec
push
movhps
int
and
ss
jge
adc
jle
or
mull
lods
push
pusha
xor
sbb
js
out
scas
xchg
jne
pop
push
mov
lea
dec
jne
pop
cmp
into
sbbb
int3
rorl
cmpsl
repz
xor
inc
cmp
pop
pop
mov
iret
cvtps2pi
mov
xchg
pop
cmp
into
jnp
loopne
inc
jbe
shr
lcall
test
adc
lds
sub
dec
jge
pop
dec
pop
xchg
sbbl
dec
sahf
push
cmp
repnz
mov
mov
adc
xor
mov
mov
jge
out
mov
mov
clc
mov
push
les
push
mov
mov
fldenv
push
cmc
sub
xchg
test
dec
jae
push
aad
test
js
fimull
mov
mov
test
hlt
subb
bound
fcomps
cwtl
aaa
xlat
jbe
or
pop
jns
iret
iret
adc
mov
out
je
lock
shlb
pop
imul
hlt
rcrb
jne
xchg
inc
imul
jmp
mov
xchg
cmp
or
mov
and
sar
idivl
jae
jmp
mov
pop
into
xchg
inc
mov
fimull
jne
iret
cmpb
jmp
and
imulb
push
inc
xchg
pop
xor
mov
adc
pop
xchg
mov
bound
dec
jmp
js
sbb
xchg
xchg
mov
jb
push
push
mov
mov
ja
into
dec
mov
mov
sbb
push
push
jl
xchg
out
inc
mov
cmpsb
lahf
xchg
ja
cmpsb
xor
cmp
xor
jmp
xchg
scas
and
cmp
cmp
aad
adc
nop
jmp
xorl
mov
cwtl
and
fsubl
out
jl
mov
xchg
mov
jbe
sbb
test
ror
icebp
mov
repz
inc
sbb
jecxz
in
pop
repz
arpl
sub
xchg
fwait
cmpb
loop
pop
push
or
mov
push
arpl
add
popa
inc
rorb
add
cwtl
or
in
xor
pop
fbstp
fwait
scas
inc
inc
pop
cmp
mov
jae
pop
pop
icebp
clc
mov
rcll
sbb
aas
xlat
out
cmc
iret
enter
sub
cli
xor
mov
push
mov
sar
xchg
dec
sbb
push
lock
rcr
cmp
dec
ret
test
sbb
mov
jnp
inc
cmp
fdivl
mov
xor
jns
testw
or
mov
adc
mov
pop
cli
inc
xchg
dec
xor
repnz
add
movsl
in
cmp
in
cmp
xor
sbb
lds
inc
inc
add
loop
insl
daa
xchg
sbb
dec
jne
sub
xor
inc
icebp
jmp
add
shlb
mov
or
xchg
jne
sbb
push
mov
adc
pop
es
inc
push
and
and
movsb
out
ds
xor
fnstsw
leave
or
mov
ds
and
out
mov
cmp
xor
test
pop
sti
mov
add
outsl
insb
jae
fistpll
lods
jecxz
adcl
mov
pop
sub
mov
pusha
aaa
lds
inc
icebp
daa
xchg
aaa
pop
adc
aad
shrl
jle
in
ss
aaa
dec
ljmp
scas
incl
pushf
aas
dec
and
or
pushl
int
sub
adc
adc
cmp
jge
pop
mov
xor
insl
lock
rcrb
pusha
mov
fistl
jne
fisttps
imul
jle
add
push
cwtl
pushl
enter
push
jl
xor
jno
lahf
pushf
gs
dec
cmpl
lea
inc
aas
mov
and
inc
or
or
ret
sbb
andl
add
mov
out
mov
xchg
aaa
sbb
sub
jle
out
pushf
out
stos
mov
push
sub
pop
mov
cltd
out
jl
jb
outsl
sub
sub
add
fs
inc
cs
add
fsubp
xor
daa
xor
insb
dec
jbe
scas
mov
repz
sub
shrl
daa
test
and
push
ss
jg
mov
adc
xchg
jbe
push
sti
ret
inc
stos
popl
mov
into
sub
jne
rep
push
and
outsl
repnz
dec
or
in
les
push
sbb
scas
outsl
pop
mov
lret
mov
mov
pushf
adc
sbb
mov
mov
push
ss
fildl
add
pusha
lds
pop
psadbw
jns
in
mov
flds
rcl
repz
sbb
fs
leave
sub
lret
xchg
imul
pop
addr16
ja
lcall
loop
into
jmp
xor
add
or
or
mov
and
or
les
or
fcomps
mov
dec
je
and
aam
aas
insl
push
cmpsb
fsts
nop
cs
or
divb
fiaddl
imul
inc
pop
and
idiv
iret
sub
fwait
jae
aam
or
aad
jecxz
pusha
xor
or
out
sub
mov
cmp
addr16
cmp
xchg
repz
fisttpl
xor
adc
popl
pop
ret
fcmove
pop
arpl
add
repz
clc
repnz
call
in
add
in
xor
inc
cltd
sub
repz
movsl
in
inc
arpl
jle
jge
por
sahf
out
scas
loope
push
rclb
in
inc
stos
daa
ja,pt
sub
push
adc
out
lsl
mov
in
mov
into
adc
and
mov
xlat
popf
sbb
cs
mov
loop
xor
and
jnp
jp
jne
cmpsb
xchg
aad
out
imul
int3
out
xchg
fwait
jno
outsl
fdivr
pushf
ljmp
aad
insl
dec
xchg
das
jmp
imul
outsb
ds
sub
add
mov
dec
rorb
pop
sbb
out
cs
sbb
mov
pop
fidivs
popa
cli
jmp
repz
mov
stos
lods
jmp
out
xchg
inc
mov
pop
fwait
xchg
sub
push
xchg
imulb
push
inc
jge
lahf
in
inc
xchg
sti
jmp
mov
and
inc
lahf
movsl
loop
das
inc
rsm
daa
dec
cmp
insb
scas
cmp
out
mov
out
insb
push
lahf
movsl
dec
jmp
aad
test
nop
jle
mov
stos
inc
pop
xchg
mov
gs
dec
sub
cmp
cmp
jmp
dec
pop
or
or
xor
xor
jmp
push
mov
xchg
jp
cmp
jb
testl
mov
dec
daa
ds
and
push
mov
rcll
out
lock
fistpll
mov
pop
addr16
into
ret
xchg
mov
popa
push
out
add
fists
push
mov
mov
in
dec
nop
ja
add
mov
aad
dec
rolb
sbb
xorl
jle
in
das
in
out
adc
xlat
repnz
lock
adc
cmp
jne
xor
mov
and
fstpt
je
movsb
mov
xchg
push
mov
push
scas
test
cmp
or
pusha
mov
pop
dec
jp
push
mov
xchg
out
mov
cwtl
push
sbb
pop
das
jnp
sub
loop
mov
nop
ret
js
out
inc
push
mov
sbb
fidivl
aad
mov
jle
sbb
cmp
outsb
lods
cld
fisttpl
nop
inc
int3
int
fbld
jp
jnp
cmp
fs
ret
push
in
pushf
pop
cmp
aam
cmp
ljmp
cmpb
jns
sbb
jecxz
add
jg
pop
rorl
and
dec
sub
out
jle
ret
mov
cltd
loop
jp
dec
push
push
rclb
xor
jmp
ret
ljmp
leave
adc
les
mov
out
xlat
imul
dec
xor
repz
and
xor
nop
xchg
pop
xchg
jl
fbld
adc
icebp
jne
cmp
pop
scas
ds
cmp
es
and
fnstsw
jae
jae
or
cltd
dec
sahf
lock
mov
add
cli
mov
ss
imul
or
cmp
mov
mov
xor
ret
lret
pop
xlat
mov
out
aam
xor
scas
adc
mov
repnz
add
mov
mov
dec
xor
cmp
mov
xor
fcmovnu
into
push
or
inc
hlt
inc
sub
sub
mov
stc
mov
mov
and
xchg
inc
jb
sub
mov
loop
and
lret
jg
pushf
jae
dec
xor
and
popf
pop
jg
inc
sbb
in
sub
mov
cld
out
call
mov
xor
jl
sti
xor
add
cmc
push
add
push
cmp
aaa
jno
jge
in
push
in
js
mov
sbb
inc
repnz
push
leave
out
outsb
jg
add
mov
and
cmp
div
outsb
adc
or
imul
test
xor
divl
cmpsl
cmp
cwtl
pop
jns
popf
movsb
addr16
jno
test
das
mov
mov
lea
adc
or
cmp
and
or
xchg
in
sub
adc
divl
cmpsb
sub
fmuls
mov
out
out
xchg
scas
push
xor
jnp
daa
repnz
sti
lret
fsubs
and
shlb
movsl
addb
jne
dec
sub
dec
push
rcrl
sub
adc
push
push
dec
enter
or
shl
ljmp
das
in
rep
outsb
mov
sbb
cmpsb
insb
add
ljmp
xchg
add
pop
icebp
or
pusha
rorb
cltd
std
mov
add
mov
aas
xchg
mov
or
inc
test
or
pop
cmc
popf
imul
pop
jb
movsb
xor
push
xor
pop
push
sbb
adc
cmp
das
or
jno
das
push
cli
shll
adc
sub
and
testb
int3
xor
mov
arpl
adcb
cwtl
cmp
out
lods
jle
jge
sbb
imul
mov
push
in
loopne
inc
mov
lods
pop
inc
xor
imul
out
sub
cli
fstl
cld
lods
cld
lods
mov
sbb
cli
jns
fldcw
arpl
jg
sub
push
mov
jns
add
pop
jg
pop
jae
loopne
or
cwtl
je
jnp
popf
sahf
push
mov
add
clc
or
inc
leave
arpl
adc
sub
popa
push
arpl
lret
dec
sahf
fdivrs
mov
sub
push
dec
cld
sub
dec
ret
dec
sbb
dec
add
fwait
inc
and
pop
jne
je
int3
movsl
mov
test
jmp
testl
mov
and
xor
call
or
les
lahf
lahf
mov
dec
mov
outsl
mov
inc
leave
xchg
in
pop
or
jmp
addl
in
testl
jl
push
mov
faddp
subl
jmp
add
es
dec
jbe
xor
sbb
cld
pop
ja
inc
mov
cmp
or
inc
dec
jb
hlt
fistl
into
aad
imul
jecxz
sarl
sarl
push
cmc
into
adc
test
popf
mov
std
xor
mov
pop
mov
popf
xor
in
movsb
xchg
jns
jecxz
lret
stos
adc
andl
fucomi
sbb
mov
jmp
sub
shlb
lds
dec
stos
and
aaa
mov
jnp
mov
arpl
jo
ljmp
push
or
mov
cmp
adc
decl
push
ja
lea
cmp
cli
mov
popa
inc
out
imul
adc
fnsave
pop
out
cmp
or
data16
push
mov
mov
jge
scas
pop
sub
cld
xchg
cmp
aad
or
xor
cwtl
push
fsubrl
push
push
jp
and
and
cmp
sahf
jne
xchg
sahf
push
mov
orb
ficompl
adc
or
mov
dec
mov
ss
lds
divl
movsb
stc
sbbl
aaa
jne
push
daa
xor
or
xor
and
lock
mov
movsl
jp
addr16
int3
aam
data16
dec
inc
sbb
fidivs
jb
leave
fcmovb
inc
imull
mov
repnz
jb
aas
out
xchg
jge
push
sbb
sbb
dec
mov
stos
xchg
repz
sbbb
pop
lahf
call
xor
mov
inc
or
jmp
adc
push
mov
dec
cwtl
mov
and
test
repz
arpl
lods
add
dec
jne
mov
push
fidivrl
stos
sub
cmp
mov
insb
fisubl
clc
in
inc
push
adc
fldt
pushf
js
push
mov
sbb
sti
inc
testl
sub
loopne
sub
inc
shlb
push
outsb
ret
jg
stos
dec
int3
mov
sub
mov
dec
jp
xor
jle
xchg
nop
xlat
sub
jb
cmpl
loope
in
mov
loop
inc
enter
cld
adc
xchg
stc
hlt
out
dec
test
pop
int3
xchg
xchg
add
xor
test
into
push
outsb
push
inc
cmpsl
sarl
div
call
imul
push
sbb
ret
arpl
rclb
cltd
mov
or
or
mov
or
sbb
arpl
sub
sbb
xor
dec
inc
sub
es
in
adc
dec
jmp
lret
jecxz
lds
addl
test
inc
sbb
push
icebp
xor
iret
mov
push
xchg
test
xchg
fimull
movsb
adcl
xchg
popa
pop
inc
push
bound
add
jno
pop
jnp
test
add
daa
in
mov
push
mov
jp
jns
ret
scas
mov
lcall
fstpt
dec
stos
adc
jp
clc
pushf
dec
push
lret
test
and
push
sbb
and
mov
sarb
adc
cwtl
mov
int
mov
sub
and
in
in
imul
testb
inc
inc
lahf
add
dec
cwtl
mov
adc
scas
xorb
cltd
mov
add
adc
loope
out
jl
aas
scas
loopne
arpl
sbb
cmp
sub
mov
imul
xor
jmp
insl
jns
or
mov
xor
adc
xlat
jns
popf
insl
cmp
cmc
cmp
pop
xchg
cmp
mov
fbstp
std
mov
xor
sbb
shrl
loope
imul
shlb
adc
ss
lods
lock
inc
mov
mov
shlb
stc
dec
xchg
add
pusha
in
cmc
push
stos
xchg
aaa
cmp
pushf
cltd
stos
hlt
add
or
jle
les
mov
ljmp
inc
xor
xor
jnp
push
in
xor
add
std
xchg
imul
cli
in
xor
pusha
or
out
cmpb
mov
in
psrld
pushf
imul
cmp
mov
ds
xor
hlt
pop
jbe
ljmp
stc
adc
mov
xchg
add
jo
push
jo
push
fadds
outsl
mov
dec
out
lods
mov
push
andb
ret
icebp
dec
mov
inc
mov
scas
stos
sub
mul
jno
jmp
fnsave
sbb
xchg
push
ljmp
out
and
in
out
adc
lods
sub
pop
and
push
jmp
push
in
popf
lret
aam
jb
mov
pop
mov
dec
push
push
dec
out
or
sbb
xchg
and
sbb
push
push
xchg
adc
dec
out
xchg
int3
sub
out
cmp
push
cmp
lock
ss
out
loop
adc
jecxz
cmc
mov
adc
sub
mov
outsb
cli
fildll
sbb
xorb
je
mov
sbb
push
pop
add
in
pop
mov
dec
mov
test
das
or
out
cmp
jmp
mov
inc
xchg
ss
jg
loop
jl
xchg
lods
ret
ljmp
jp
mov
push
mov
jge
xchg
in
xor
or
pop
mov
xchg
sbbb
aaa
xchg
rcrb
xchg
mov
jno
jbe
aad
jl
dec
leave
mov
jmp
push
adc
pop
test
movsb
imul
push
out
or
aas
jl
mov
push
mov
add
or
sbb
add
push
or
loope
std
sbb
loopne
mov
dec
aaa
repz
fldcw
cmp
pop
inc
xchg
push
sub
add
addr16
cmp
cltd
es
sahf
push
jnp
push
cmp
inc
mov
mov
repz
mov
mov
pop
sbb
push
lods
js
mov
mov
pop
mov
add
fstps
mov
sub
jg
add
rsm
sub
test
add
out
cld
cmp
test
mov
ds
nop
rclb
pop
mov
pop
cld
mov
jbe
aas
insb
xor
sub
insb
lea
cmc
sub
push
icebp
cwtl
xor
inc
arpl
sub
lods
sbbb
lock
dec
jb
outsl
inc
inc
mull
int
cmp
mov
insl
gs
std
pop
je
rcrb
pop
je
inc
jae
shlb
je
scas
aas
hlt
add
adc
jbe
insb
es
dec
out
push
clc
or
or
std
jo
inc
lret
js
mov
pop
aam
pop
jne
mov
ljmp
or
or
mov
loope
lahf
repnz
inc
fadd
mov
leave
int
inc
cmpsb
mov
jecxz
sbb
out
pop
jbe
cmpl
add
dec
pusha
adc
dec
in
inc
gs
mov
fwait
adc
lahf
add
out
fimuls
xor
lcall
mov
and
iret
xchg
inc
mov
or
rorl
jmp
nop
cwtl
cmp
cmc
lcall
addb
cmp
mov
lods
push
arpl
je
xor
jg
jecxz
jp
adc
ljmp
mov
add
inc
repnz
dec
imul
pop
lea
frstor
popf
jns
push
rcrl
shrd
clc
inc
push
adc
adc
dec
das
das
jne
lcall
xchg
adc
mov
mov
and
mov
or
xchg
mov
sahf
lods
and
mov
es
sub
popf
and
in
fildl
xchg
sti
mov
push
cmc
cli
out
xor
les
xor
push
pop
ret
jnp
sbbb
fnstenv
scas
imul
pushf
pop
out
sbb
pop
xchg
cmpsl
mov
inc
ss
dec
fs
dec
dec
call
ds
xor
cmpsb
das
and
mov
jle
leave
into
lret
int3
cwtl
lea
neg
mov
pop
lahf
in
and
lds
xchg
cld
adc
int
hlt
pop
jle
mov
data16
cmp
enter
pop
dec
in
cs
xor
mov
push
mov
arpl
std
xchg
dec
outsb
mov
aam
daa
xchg
cli
pop
pop
jne
mov
std
xor
push
sbb
subl
pop
and
iret
aaa
sbb
roll
pop
cmp
xchg
in
dec
cwtl
mov
pop
cmc
lret
pop
pop
jne
test
arpl
mov
rorb
jo
jno
sub
cltd
fxch
mov
ljmp
pop
mov
cmp
in
in
test
mov
popf
fildl
loop
cmp
cmp
mov
or
call
out
clc
pop
jg
adc
sbb
sbb
mov
iret
mov
imul
iret
subl
push
jl
jmp
aas
pop
pushf
ljmp
xchg
out
stos
pop
test
pop
jne
cmpsb
movlps
arpl
sub
add
addr16
or
shrb
pop
notl
mov
mov
jns
cmp
pop
inc
xchg
les
nop
pusha
shrl
decb
xchg
sub
adc
cwtl
mov
xor
jns
or
xor
xor
mov
mov
lcall
aam
test
mov
jg
fists
movsl
sub
in
jecxz
xor
or
sahf
and
out
aas
aad
mov
out
ss
pand
add
ret
or
mov
pop
xlat
lea
repz
xor
stos
test
pop
cwtl
mov
stos
dec
mov
in
int
sub
adc
sti
out
or
and
out
jnp
dec
in
test
enter
jl
ret
or
cmp
jge
mov
int
dec
jnp
sbb
in
dec
aam
adc
scas
mov
mov
mov
cmp
inc
sbb
in
cmp
sbb
and
add
inc
push
faddl
jmp
and
ss
sub
jno
and
mov
outsl
mov
mov
cltd
push
inc
or
std
cltd
cld
and
cltd
lcall
mov
data16
jb
xchg
test
jp
sbb
sub
int3
shrb
out
mov
rdtsc
xorb
push
pop
adc
jl
or
mov
sub
pop
push
pop
or
das
das
jne
push
mov
out
mov
add
dec
sbb
ljmp
mov
push
add
mov
pop
and
shll
sbb
push
push
inc
js
insl
jb
xchg
adc
ret
mov
fcompl
arpl
outsb
xchg
xorb
movsl
call
mov
pushf
and
and
cmc
fisubl
leavew
fdivs
test
mov
inc
pop
dec
pop
popf
xchg
lods
hlt
sbb
cmp
mov
mov
adc
pusha
mov
jnp
add
or
addr16
mov
mov
mov
mov
sub
iret
daa
arpl
push
gs
mov
push
pop
aaa
sbb
out
inc
out
ds
ds
jne
jmp
lret
in
ljmp
pop
mov
cli
enter
pusha
test
inc
nop
sbb
test
icebp
and
jne
adc
outsl
jmp
cmp
ss
dec
adc
mov
insb
das
into
jp
jb
push
add
aad
lahf
test
xor
push
push
ja
mov
push
cmpsl
cwtl
mov
lcall
fnstsw
test
xchg
xchg
aaa
add
std
add
xchg
sbb
jns
addr16
ret
jae
jecxz
movb
ljmp
lahf
push
sbb
mov
jb
pop
iret
sub
rclb
inc
sahf
cmpsl
jg
xor
xor
sub
jle
imul
jl
inc
clc
mov
push
les
les
ror
sbbl
test
shl
fcomp
dec
adc
imul
push
jge
mov
xchg
mov
mov
stos
inc
dec
inc
lea
test
pushf
movsb
and
test
daa
pusha
or
fs
pop
out
xor
xlat
xchg
in
inc
leave
mov
cmpsl
push
mov
cmp
fiaddl
psrlq
pop
mov
mov
fwait
rcll
out
leave
push
mov
sbb
and
das
mov
imul
push
xor
sbb
xchg
sbb
sub
and
addb
leave
das
mov
enter
push
adc
into
shl
or
pop
sbb
cld
adc
mov
dec
fnsave
fwait
insb
lcall
push
cmpsb
pop
pop
sarb
cmp
push
pusha
or
sub
notl
mov
mov
push
clc
inc
hlt
inc
lock
pop
pop
scas
jle
xlat
int3
jle
aam
xchg
lret
sub
es
movsb
lret
lods
jnp
and
stc
or
and
sbb
hlt
lea
add
cmp
dec
in
add
inc
push
add
sbb
sub
addr16
xor
into
push
sub
push
mov
cmp
or
dec
mov
divl
nop
mov
jbe
push
pop
add
push
xor
daa
movsl
add
dec
adcl
mov
adc
je
adc
sbb
lods
into
mov
mov
sti
mov
das
js
sub
insb
jge
dec
xchg
jns
xlat
dec
dec
ror
inc
cli
lret
lods
push
arpl
cmp
dec
test
inc
push
push
mov
jnp
or
in
dec
push
add
pushf
mov
xlat
test
inc
adc
add
icebp
int3
mov
pop
sub
dec
adc
adc
adc
out
jbe
into
push
fstps
push
jmp
adc
shlb
repnz
pop
jg
imul
fnsave
jbe
das
sbb
xor
lea
mov
movsl
inc
dec
repz
jne
arpl
scas
bound
ljmp
aaa
adc
sbb
stc
cmp
mov
cmpsb
cmp
lcall
xchg
xor
sub
js
mov
xchg
ss
dec
adc
pushf
pop
add
add
repnz
test
mov
stos
pusha
dec
lds
movsl
and
mov
mov
add
lods
xchg
mov
js
jg
mov
adc
out
pop
cwtl
test
aaa
xchg
mov
mov
das
arpl
into
push
cmpsl
negl
lock
adc
je
lret
sbb
insl
clc
push
push
sub
js
fwait
adc
aam
or
test
shll
cmpsl
dec
mov
lods
sub
xchg
jle
cmpsb
mov
repz
jb
ret
add
repnz
sub
push
iret
xor
mov
cmp
sar
adc
cli
mov
pushf
mov
or
cmp
cmp
negb
cmp
stos
cmp
adc
je
stos
sbb
fcmovne
add
xor
and
or
cmp
imul
movsl
dec
sub
jb
mov
inc
out
addl
mov
fisubrl
adc
cmp
scas
push
in
loop
mov
fsubrl
imul
pop
sbb
mov
pop
lcall
dec
je
aaa
cltd
push
popa
jo
add
sub
in
jp
push
jg
fs
adc
testl
hlt
ja
aaa
push
or
stos
or
add
xchg
sub
jl
fistps
daa
add
gs
inc
jno
in
scas
cwtl
repz
jp
out
push
es
add
frstor
out
sbb
std
sahf
cwtl
repz
jp
pop
rol
fldenv
dec
sbb
lods
mov
dec
push
sub
jmp
or
sti
inc
push
out
dec
push
xor
xchg
in
outsb
popf
sbb
mov
call
xchg
inc
jmp
cmp
scas
mov
aam
subb
out
mov
insb
arpl
out
dec
lods
pop
sbb
inc
incl
out
aaa
js
jnp
mov
sbb
mov
push
push
push
fnstenv
jns
push
jle
cwtl
pop
or
xchg
push
mov
pusha
lods
fcmovu
push
sub
daa
scas
xor
mov
xor
ret
negl
insb
pop
stc
mov
outsb
mov
int3
mov
mov
leave
fildl
push
jns
xchg
jbe
es
das
push
cmpsl
lea
fucomi
adc
sahf
sbb
sub
sahf
and
or
or
pushl
lret
mov
cvtps2pd
pop
jne
pop
cmp
fldl
imul
mov
mov
jnp
or
aad
sahf
cmp
stos
inc
sbb
inc
or
scas
push
scas
pop
xor
jp
adc
orl
icebp
sub
stos
push
sbb
xor
cmp
repnz
jge
cmpsl
mul
mov
ss
hlt
out
sbb
sub
xchg
pusha
stos
shlb
iret
sub
sub
sbb
jl
loope
push
arpl
dec
iret
xlat
popa
jge
sbb
jb
mov
int
loop
xchg
cmpsb
je
inc
mov
cmp
jbe
jae
rorb
mov
pop
incl
loop
leave
stos
jne
or
fcmovb
enter
nop
cmp
fisubrl
mov
aaa
int
stos
inc
fs
loope
add
test
fsubrl
mov
lock
push
out
add
dec
inc
dec
cmp
call
shll
subb
je
xor
xchg
inc
popf
xor
push
je
cmp
arpl
inc
mov
test
jnp
pusha
orb
xchg
mov
sub
xchg
outsl
outsb
push
popf
fxam
mov
push
ja
adc
xor
fldcw
inc
or
ds
mov
pop
push
push
cwtl
test
mov
mov
outsb
mov
outsb
popa
or
aam
bound
push
outsl
imul
cld
push
into
pusha
mov
test
sbb
cmp
movsb
xchg
xor
push
fdivl
cld
cli
stc
fidivs
push
push
subl
xor
pusha
scas
outsl
add
orl
ljmp
push
xchg
sti
popa
mov
mov
mov
adc
jno
add
fisubs
fdivrp
push
int
sbb
ror
insb
iret
fadd
inc
and
imul
movsb
xchg
sti
sbbl
push
ret
adc
out
add
xchg
aad
hlt
cmp
aad
inc
inc
pop
aam
mov
mov
inc
test
add
sub
dec
insb
mov
test
aaa
dec
inc
pushf
rorl
and
mov
jg
mov
fxch
out
icebp
cmpb
mov
aad
push
sarb
data16
cmp
ret
arpl
shll
or
dec
aas
jns
out
int3
pop
bound
pop
xchg
popf
lods
add
arpl
cs
sub
sbb
out
cld
imul
addr16
xlat
pop
and
dec
andl
add
fcmovb
cmpsb
mov
jnp
in
and
aam
cmp
or
lock
cmp
push
aad
push
jns
shr
dec
push
rol
aad
jmp
das
hlt
pop
hlt
sahf
out
mov
or
adc
fucom
les
dec
pop
jne
cmp
mov
sub
cwtl
fsubl
mov
mov
sarl
loop
imulb
add
cmp
dec
fiadds
outsl
sub
out
xor
icebp
insb
sarb
gs
test
mov
lods
inc
aaa
xchg
lcall
outsl
std
sbb
in
fcom
repz
add
cltd
mov
xor
roll
andl
adc
jns
insl
popf
adcb
ja
or
jb
mov
jb
negl
in
movsb
pop
test
dec
rcrb
pop
push
pop
mov
inc
mov
nop
mov
in
lods
xor
push
mov
cmpsl
out
adc
sub
aad
pushf
ds
aam
adc
or
push
jb
jmp
shl
and
mov
or
lods
mov
hlt
pop
cltd
sbb
jmp
inc
push
push
sahf
jo
stc
fnstenv
loop
mov
push
xor
loopne
inc
or
bound
jne
sub
sbb
fildll
jg
mov
fisubrs
fmuls
fsub
mov
rcll
insl
inc
sbb
sti
adc
sub
and
push
xchg
push
lret
out
daa
mov
stos
pop
clc
sub
mov
dec
push
iret
data16
sub
fsubs
and
cld
xchg
rclb
and
adc
xchg
ljmp
inc
daa
or
rorl
and
gs
mov
adc
push
add
mov
pop
mull
mov
sub
roll
pop
es
mov
mov
xchg
and
sti
cmpsb
les
cmp
movsl
inc
xchg
sti
fdiv
add
call
sub
mov
bound
and
push
lcall
rcr
insb
imul
repnz
iret
jae
or
nop
aas
pop
lahf
in
push
adc
fcompl
je
jne
or
pop
jmp
xchg
sbb
and
mov
hlt
std
lods
jns
sbb
dec
data16
cmp
xchg
pusha
addr16
xchg
pop
out
mov
sahf
dec
imul
mov
addb
sbb
push
dec
scas
std
sub
mov
cmp
dec
or
xor
popf
cmp
fdivrl
sti
push
inc
mov
repnz
cltd
in
mov
aas
in
loop
pop
fstl
repz
pop
push
idivl
jo
xor
insb
dec
insl
dec
inc
int3
cwtl
dec
cmp
aaa
das
xchg
mov
fs
sbb
enter
ja
je
push
out
or
int
shll
lahf
pop
mov
mov
addr16
mov
fildl
leave
cmp
movsl
add
cld
mov
jns
or
aaa
cmpsl
enter
or
sub
dec
lahf
daa
jae
mov
adc
movsl
cmp
bnd
sbb
xor
jnp
mov
clc
imull
aas
sbb
sbb
ss
push
adc
inc
mov
push
sub
scas
sub
xchg
cs
sahf
das
lock
ds
ret
dec
outsb
add
stc
pop
out
inc
cmp
lea
pop
inc
fldcw
inc
add
aam
pop
es
sbb
imul
jb
cmp
adc
pop
mov
or
mull
adc
push
fucom
cmp
ficomps
imul
push
and
repnz
cmp
out
pop
aas
jnp
imul
mov
aaa
call
insl
lods
out
add
enter
xlat
cmp
lcall
push
mov
mov
pop
popf
xor
jle
inc
and
jns
inc
scas
pop
idivb
mov
rcl
xchg
inc
mov
fincstp
negl
cmc
mulb
enter
fs
adc
push
pop
mov
fildl
mov
repz
dec
sub
push
icebp
dec
inc
pop
cli
sbbb
mov
aad
repz
push
nop
add
inc
pop
jl
ds
mov
and
mov
call
push
and
scas
aam
ss
das
and
fs
sub
push
jmp
or
ficomps
and
or
adc
loop
xor
sbb
push
sub
cs
and
jns
push
outsb
fs
push
cmp
mov
out
pop
lods
pop
test
xor
inc
js
xor
fimuls
call
lcall
adc
cli
imul
mov
xchg
jns
in
fiaddl
push
rcll
adcb
in
pop
xchg
pop
data16
or
xor
pop
or
imul
add
je
lahf
jnp
testl
jl
sbb
in
out
mov
pusha
cld
testl
popa
mov
mov
arpl
insl
idivl
stos
aaa
stos
xchg
xlat
cld
clc
sub
mov
cmpb
jbe
or
add
cmp
sub
inc
shrb
and
es
or
popf
ror
adc
cmp
popa
test
mov
test
push
sahf
dec
rcrb
int
fmulp
ljmp
cs
mov
dec
ret
xor
and
hlt
icebp
xchg
jne
push
loop
lret
ret
nop
pop
inc
or
mov
push
aam
dec
push
shlb
in
pushf
ljmp
mov
ficoml
sti
rcll
cmp
clc
lods
inc
mov
adc
sbb
mov
movsl
xor
adc
sub
pop
xchg
flds
push
fldcw
ds
aam
mov
xchg
mov
js,pt
jnp
push
imul
and
int3
divl
je
pop
push
mul
sub
iret
addr16
insl
ret
jo
lret
hlt
push
mov
adc
mov
pusha
adc
in
xchg
sahf
fnsave
in
jge
or
mov
divl
imul
cmpb
sub
dec
mov
imul
jno
rol
imul
and
shrl
clc
ljmp
movsb
icebp
pusha
daa
push
fldcw
adc
inc
dec
out
jae
ds
out
xchg
mov
lea
or
addr16
and
pop
adc
clc
imul
adc
pop
mov
rolb
pop
rclb
js
pop
js
int
xchg
pushf
into
cmp
sub
imulb
ficoml
adc
mov
add
lea
xchg
xchg
mov
insb
in
movsb
xchg
out
xor
cwtl
cmc
insb
xlat
cwtl
mov
sbb
pushf
cmp
xchg
lods
xor
mov
cmc
cmp
out
lds
add
sti
cmpsb
xor
cwtl
mov
or
mov
int3
in
scas
cmpsb
pop
subl
mov
and
arpl
jo
jge
inc
out
scas
cwtl
jge,pn
and
aaa
cmp
sub
das
sub
or
cmp
int
out
lret
mov
xlat
int
stos
mov
sub
in
ss
pop
push
aad
pop
mov
xor
push
pop
loop
rorb
fst
inc
loopne
bound
fistpl
mov
out
sbb
ret
jns
popa
inc
imul
mov
xchg
mov
movsl
cli
add
call
std
jae
arpl
cmp
push
sbb
out
sbb
push
push
mull
pop
lods
rcr
inc
push
push
cltd
sub
arpl
sub
out
je
sub
ret
addr16
lret
mov
push
pop
inc
mov
adc
push
adc
mov
fdiv
nop
notl
adc
push
pop
cmpsl
pop
lret
int3
adc
mov
mov
jnp
jp
jae
dec
sub
es
ds
jbe
or
push
pop
incl
sub
jb
mov
jbe
mov
ret
xchg
imul
lahf
xor
inc
notl
ret
cmp
out
cli
sbb
lea
aam
jne
mov
or
subb
cltd
push
std
sub
inc
fmull
stos
pop
or
stos
gs
sbb
clc
add
roll
fdivr
in
ret
gs
aas
popf
pop
ud1
xabort
les
daa
repnz
mov
sbb
das
repz
xchg
adc
movl
lea
add
ja
mov
cmp
mov
les
or
cmp
fdivrs
cmpsb
dec
clc
rorl
iret
popl
shll
pop
push
inc
sbb
push
push
jb
scas
fs
add
push
mov
int3
adc
inc
and
mov
push
sbb
fldl
pop
addr16
and
cmp
notb
movntq
cmc
sbb
dec
dec
sbb
sub
mov
insb
imul
cmp
test
cld
cltd
jb
push
xor
or
cmp
mov
push
inc
xchg
outsl
sub
fistl
hlt
xchg
loope
scas
iret
out
orl
loop
xchg
pushf
inc
loopne
sub
sbb
loop
mov
stc
movsl
pusha
pop
xor
push
leave
iret
mov
pop
cmp
inc
imul
sbb
mov
in
cld
mov
hlt
ffree
fistl
bound
jge
xlat
push
jb
iret
ja
fwait
mov
adc
push
jecxz
std
sti
ret
sub
test
dec
fcmovnu
fdivr
xchg
aaa
addl
mov
shll
pop
clc
icebp
sbb
in
sbb
jg
add
data16
scas
in
jl
ss
xchg
repnz
lret
xor
adc
fcomps
inc
rcrl
out
adc
push
inc
pop
cmp
mov
push
popf
enter
xor
push
out
jge
icebp
bnd
adc
pop
cmp
push
sub
and
and
cmp
insb
mov
push
sub
insb
int
pop
icebp
sbb
jmp
cmpsl
dec
enter
add
hlt
xor
inc
adc
push
outsb
adc
popl
pop
fstp
iret
test
aas
sub
pop
sahf
mov
ss
adc
popa
lret
pushf
push
mov
mov
adc
les
inc
cltd
xchg
in
das
sbb
mov
aaa
adc
mov
dec
in
xor
inc
sarb
stos
ja
xor
sub
pop
inc
inc
push
dec
cmpsb
xor
xchg
mov
popf
rcr
sub
pop
test
inc
and
sub
icebp
and
int
int
cmp
or
lcall
jecxz
mov
mov
lea
push
fdivl
mov
gs
fldt
jmp
push
dec
dec
push
add
and
adc
js
push
in
mov
dec
into
cmp
jg
idivb
mov
cmp
xor
das
bound
testl
cltd
stc
jns
stos
push
and
xorb
push
xchg
push
lea
stos
mov
paddsw
jle
je
and
imul
insl
es
and
add
cmp
cmp
fsts
loope
mov
fwait
loopne
and
xlat
vminpd
nop
add
mov
dec
cmp
and
cmp
stos
mov
jg
arpl
int
movsb
nop
jl
pop
aas
and
fsubs
sbb
xlat
xor
ficomps
inc
jp
jmp
push
std
out
xchg
mov
mov
rcr
mov
adc
sub
xchg
jae
jbe
int3
mov
or
jae
xchg
aam
mov
jl
sbbb
jp
mov
movsl
cmp
jmp
jae
bnd
cli
popa
mov
dec
test
leave
rcll
mov
cmpsb
mov
jb
cld
dec
addb
nop
xor
fidivrs
lret
bound
pop
out
xor
scas
push
dec
jecxz
inc
add
xchg
out
inc
mov
insb
clc
pop
insl
addr16
int
add
mov
or
push
mov
and
push
mov
fisubrs
xchg
das
mov
inc
dec
testl
adc
loopne
dec
shlb
inc
adc
rorl
xchg
lock
sahf
jb
pop
movsb
dec
cwtl
sbb
popa
popf
inc
leave
mov
into
loopne
imul
insl
sahf
and
adc
adc
cwtl
mov
jle
mov
dec
fisubrl
add
xor
dec
mov
dec
inc
pusha
mov
xlat
imul
in
rolb
aas
push
xchg
gs
fwait
mov
mov
mov
xor
stc
inc
insl
jns
gs
pop
mov
repnz
sbb
mov
jno
ds
xchg
fstpl
mov
repz
pushf
push
pop
inc
push
sbb
cmp
push
fidivl
pusha
push
insb
sbb
add
or
mov
repnz
inc
mov
in
lret
.byte
jno
