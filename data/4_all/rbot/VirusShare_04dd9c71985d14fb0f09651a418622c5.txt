push
or
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
adc
add
add
add
add
in
adc
add
adc
add
adc
add
adc
add
adc
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
cmp
adc
add
add
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
aaa
mov
sldt
add
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
adc
mov
out
sbb
add
pushf
int
push
pop
in
mov
mov
stc
inc
mov
pop
imul
repnz
addb
adc
int3
and
clc
das
mov
xlat
lahf
add
bound
sbb
fsubr
leave
repnz
xorl
aad
dec
push
mov
push
and
in
xchg
pop
adc
jo
popa
cmp
mov
out
dec
jne
in
cmp
add
and
sahf
adc
test
push
jmp
repz
inc
leave
lahf
mov
dec
adc
mov
frstor
xor
adc
outsb
xchg
or
jmp
loopne
stos
mov
dec
icebp
popa
arpl
jp
or
cmp
jl
add
sub
in
cwtl
sbb
and
pop
sti
xor
or
jmp
mov
adc
pop
mov
mov
enter
pop
xchg
outsl
mov
arpl
xor
and
icebp
adc
call
mov
mov
xchg
dec
movsb
pop
arpl
popf
fwait
or
mov
cmp
xchg
xor
sub
mov
stc
dec
cmp
mov
pop
push
rcrl
cltd
icebp
leave
icebp
rcl
push
ja
js
cld
cld
xchg
jnp
loopne
out
mov
add
add
loopne
xor
repnz
jl
mov
scas
daa
jne
mov
xchg
or
icebp
sahf
fisttpl
and
push
push
xchg
stos
je
cmpb
jne
mov
fs
cmp
int
push
pop
arpl
jg
jnp
inc
or
iret
inc
xor
xchg
mov
int3
sbb
test
test
ljmp
jne
mov
stos
mov
push
lea
pop
sbb
jae
arpl
pop
xchg
sbb
fnstcw
test
xor
xchg
insb
cltd
mov
sub
cs
inc
dec
cltd
jns
add
mov
jo
pop
and
mov
inc
sub
mov
mov
mov
mov
push
call
out
pushf
stos
cmp
cmp
scas
push
adcb
jge
cmpsb
adc
jg
adc
int3
and
lcall
cmp
outsl
rclb
adc
aas
sub
xor
add
and
lahf
addr16
or
gs
hlt
add
mov
sti
mov
loopne
push
cmpsl
std
adc
je
add
lock
xor
pop
cltd
push
xchg
mov
fistpll
push
pop
outsb
dec
shl
stos
push
xchg
sti
enter
es
arpl
push
std
cli
es
stc
and
pusha
jo
cmp
cld
adcl
push
les
jo
jbe
dec
jp
cmp
add
fidivrl
roll
aad
int3
out
and
iret
fstpl
or
jle
outsb
lret
ja
sti
adc
insb
cwtl
cmpsl
xchg
loopew
push
movsb
jbe
clc
lcall
or
mov
repz
inc
dec
dec
adc
and
jl
mov
mov
or
popf
test
fsubrp
jg
pop
enter
mov
adc
arpl
lret
push
in
test
call
ljmp
mov
das
ds
dec
mov
cmpsl
sbb
repz
mov
cmpsl
jne
sub
mov
rcrb
mov
jle
mov
test
fistpl
mov
add
lret
pop
add
mov
add
xor
xor
mov
xchg
pop
addr16
sbb
xchg
jns
dec
add
jno
add
xor
shrb
lret
pop
sarb
xchg
push
push
push
hlt
sub
std
sbb
call
inc
sbbb
data16
mov
mov
pop
ret
sbb
jp
lahf
mov
inc
mov
push
int
or
aam
xchg
lahf
cli
outsl
out
push
inc
out
lea
jnp
into
cmp
negb
mov
repz
jecxz
adc
pop
sub
xchg
stos
mov
sub
inc
cmpsl
jmp
cmc
loope
sbb
ret
mov
fwait
mov
xor
mov
rol
jmp
dec
pop
cmp
xchg
mov
into
out
inc
xlat
hlt
repz
pop
mov
mov
daa
cmp
clc
adc
pop
ret
inc
pop
hlt
adcl
imul
sbb
xchg
sub
sub
int
push
sbb
cmp
loop,pn
sub
dec
pop
cmp
sbbl
loop
adc
lods
in
sub
dec
out
dec
out
cmp
inc
sbbb
jne
pop
js
push
je
and
pop
xor
lret
lret
gs
mov
mov
dec
adc
bound
imul
push
stos
test
adc
insb
cmp
and
mov
aam
xchg
pushf
sub
loop
cmp
les
mov
aas
in
call
popf
rorl
pop
dec
hlt
movsl
scas
mov
lret
lahf
cmp
pop
arpl
cld
mov
popa
sbb
fistpl
mov
or
mov
aas
ja
jg
jb
sub
test
sti
xchg
cltd
add
fstpl
mov
add
scas
aam
xchg
cld
sarb
fisubrs
dec
mov
jg
inc
or
outsb
int3
lret
jb
pop
stc
xchg
in
mov
gs
add
push
mov
call
enter
test
mov
sbb
imul
cmpsb
loopne
mov
loope
outsb
aas
push
scas
mov
std
xchg
jg
dec
sarl
sbb
incb
xchg
push
xchg
or
fsubr
push
popf
jl
fmul
or
movsl
xchg
pop
mov
sbb
jb
das
rolb
and
or
add
mov
cmc
push
mov
popf
into
dec
sbb
aam
add
das
adc
test
cmp
loopne
lock
js
lods
out
mov
aad
mov
bound
xor
jp
sbb
aam
int3
dec
js
pop
xor
mov
jns
fimull
mov
jg
mov
push
call
jg
sub
mov
or
xlat
pop
jns
or
popf
movsl
or
imul
out
xchg
add
loope
sbb
sub
les
int3
repz
std
fstpl
pop
inc
sbb
fcoml
mov
or
xor
adc
lret
inc
jmp
xor
je
pop
push
shll
rcr
es
leave
mov
pop
add
jp
jmp
les
mov
and
or
push
nop
movl
mov
and
pop
xlat
out
aad
gs
xor
cmpl
fidivrs
inc
sbb
daa
add
cld
ss
or
jl
dec
popf
imul
cmp
cwtl
out
adc
sbb
sbb
pop
push
push
ja
cmp
hlt
lahf
bound
dec
stos
cmp
inc
sarl
arpl
insb
jge
aad
jmp
and
js
xchg
les
in
mov
jae
or
pop
addr16
arpl
jecxz
pushf
or
les
loopne
jbe
sub
pop
in
mov
inc
clc
int
mov
mov
adc
js
xor
jnp
mov
dec
push
out
into
jnp
xor
mov
divl
je
outsl
iret
pop
fcmovbe
sahf
inc
stos
clc
lods
mov
xor
cmp
loope
sub
lods
pop
add
pop
gs
inc
lds
shll
mov
test
or
jo
fsubrs
shrb
ss
ljmp
sahf
jnp
mov
mov
loopne,pn
jns
in
mov
shl
fildll
dec
xchg
xor
inc
sub
jbe
add
nop
aas
cmpb
pop
repnz
xchg
sub
mov
repz
push
sub
addl
int
mov
faddl
pushf
inc
loop
push
mov
inc
xchg
dec
xchg
and
xchg
cli
sti
icebp
pop
cmovo
sarl
mov
pop
fldl
fldl
pop
negb
sbb
jae
sbb
push
push
scas
push
into
dec
jp
push
push
mov
and
sarl
aaa
das
jnp
push
jl
jae
cmp
cmp
icebp
lea
inc
or
add
jbe
push
or
xor
testl
xor
clc
lret
sub
mov
or
jge
cmp
cmc
pop
fistl
mov
mov
rol
and
mov
adc
outsb
sub
and
cld
stos
xchg
stos
inc
orb
std
sub
push
in
fadds
clc
sarb
xor
jae
add
cmpsl
xchg
xor
stos
in
add
fldenv
lea
iret
and
mov
loopne
sbb
push
and
icebp
inc
out
inc
xchg
adc
inc
pusha
cmp
jno
test
icebp
mov
push
xor
mov
push
mov
cmp
and
xlat
mov
clc
fldl
inc
cmp
mov
xchg
mov
stc
jb
stos
adc
rcrb
outsb
nop
lret
mov
int3
shll
xchg
sub
pop
jo
pusha
xor
popf
add
jne
and
mov
das
ja
gs
jg,pn
ret
push
add
in
pushl
pmulhw
les
add
adc
rcrb
add
pop
ljmp
adc
out
fbld
mov
xchg
lea
cmpsb
loop
shrl
xchg
xchg
mov
push
pusha
or
ja
cmc
push
jle
sbb
pop
inc
into
scas
je
dec
call
les
inc
test
out
into
and
std
shl
push
imul
arpl
loope
inc
in
jb
rcrb
movsb
int3
xor
pop
sbb
in
mov
sub
cmp
push
std
push
testb
adc
adc
mov
mov
push
roll
insl
ja
inc
dec
lcall
cmpsl
sub
push
mov
aas
xor
mov
sbb
and
mov
movsl
popf
stc
cli
xor
mov
cmp
shlb
sub
push
cmp
push
mov
inc
imul
pusha
lcall
fldcw
subl
xchg
js
push
xchg
cwtl
popa
xorps
xlat
mov
or
icebp
jg
and
fisubrl
xchg
lea
inc
outsl
bound
ja
rolb
sub
mov
testl
cld
pop
push
mov
mov
mov
sti
inc
fidivrs
pop
mov
cmpsb
jo
or
dec
inc
cmc
or
cmpsb
xchg
adc
aad
mov
rcrl
mov
lret
sahf
xchg
push
mov
mov
out
pop
mov
adc
test
cmc
or
sub
mov
movsb
jbe
mov
inc
mov
xlat
call
ja
pop
xor
sbb
stos
fdivrs
add
jb
xchg
push
jl
ds
mov
nop
daa
pop
enter
addr16
lods
inc
adc
push
push
pop
jmp
negl
negb
add
or
scas
jb
dec
dec
mov
in
gs
add
addr16
test
lret
js
sbb
shll
push
jp
fimuls
scas
sub
xor
dec
adc
sub
jp
in
lahf
popf
cltd
dec
push
fimull
xchg
mov
cwtl
push
jne
adc
repz
lock
mov
scas
xchg
sub
mov
pop
mov
jne
adc
jg
addr16
fcmovnb
push
orl
aad
jbe
add
daa
lods
lret
sbb
push
icebp
pop
jne
in
push
aas
pop
inc
ss
repz
push
and
dec
xor
cmp
pop
sbb
sbb
dec
dec
aaa
aad
add
cmpsb
rolb
push
xor
push
push
fisubrs
int
fisubs
push
in
sub
lds
push
pop
pop
into
jo
add
add
push
rcr
popf
mov
lods
or
pop
mov
sarl
fwait
out
xor
es
ret
and
mov
repnz
push
dec
xchg
xor
or
cld
sbb
mov
lar
xorb
aaa
xchg
lock
in
xor
in
lods
popa
jnp
pop
rorl
notl
mov
cmpsb
xchg
mov
in
clc
out
xor
stos
ficomps
xchg
movsl
sub
fs
clc
push
xor
xchg
out
shl
push
pushf
jecxz
mov
cmpb
iret
mov
scas
jbe
add
outsb
cltd
fistpl
sub
in
inc
ss
fidivs
add
mov
bound
inc
fisttps
push
lret
adc
out
or
push
cmc
fcmovnb
xchg
shll
out
mov
arpl
loopne
adc
test
mov
loop
adc
clc
adc
popa
pop
scas
jnp
outsb
mov
pop
call
cmp
dec
js
shlb
sub
movsb
movsl
in
test
cmp
imul
pusha
fisttpl
lea
jo
dec
inc
aaa
imul
test
push
inc
lock
or
rep
adc
pop
cmpsl
mov
pop
adc
adc
or
mov
js
cmc
and
std
mov
pop
ja
test
shrl
loopne
movsb
aaa
mov
xchg
jns
je
jbe
xor
cld
insb
jns
into
cli
pmulhuw
lds
lods
imul
dec
pop
add
sahf
dec
push
mov
ljmpw
std
sub
andb
insb
lret
in
in
xor
mov
mov
jp
jmp
stos
inc
adc
jns
jno
pushl
push
pop
jmp
jle
sub
or
cwtl
or
mov
mov
daa
jb
xchg
sbb
aas
subl
add
in
sarl
shll
sbb
ljmp
pop
imul
negb
mov
mov
xor
pop
daa
cmpl
and
stc
lahf
or
pop
addr16
jg
popa
dec
cmp
mov
sbb
mov
out
push
in
rorl
lret
pusha
sti
pop
adc
lock
cmpsb
xchg
jmp
rorb
scas
int
push
ds
mov
ret
mov
inc
pop
test
sub
std
in
mov
sub
stos
out
or
mov
cli
mov
push
or
pop
repnz
adc
xchg
mov
enter
mov
push
pop
push
pop
pop
xor
ret
xchg
cltd
movsl
push
push
mov
mov
aad
sbb
pop
pusha
in
jo
ret
pushf
jecxz
mov
mov
add
sbb
jg
fwait
jecxz
es
test
push
cmp
dec
or
jno
lahf
jbe
xchg
fistl
cltd
sbb
sub
pop
imul
cmpsl
mov
scas
loopne
dec
imul
and
xlat
sahf
or
jae
int
or
enter
loopne
mov
mov
dec
fimuls
sbb
sbb
push
and
pusha
cmpsl
sbb
cmp
test
negl
xchg
cwtl
mov
inc
cmovo
pusha
mov
mov
orl
xchg
fisttps
into
push
mov
jbe
shll
push
mov
rcrl
mov
out
mov
outsl
mov
cmp
mov
addl
xchg
shlb
pop
dec
mov
cltd
xor
fisubl
shrl
mov
xchg
movsb
jo
lahf
adc
mov
adc
lea
mov
cmpsb
push
pop
mov
rclb
adcl
addb
push
and
test
cs
and
jl
xor
sbb
dec
fmuls
xlat
insb
lret
mov
push
mov
lock
scas
cs
stos
sub
inc
ds
add
jne
jns
mov
fistpl
sub
add
pop
ret
sbb
ljmp
inc
cmp
add
sub
or
jecxz
jns
inc
inc
pop
push
lea
mov
pop
mov
das
lret
iret
mov
in
or
jbe
sub
lret
mov
add
sub
inc
in
addr16
sub
shll
add
mov
pop
sbb
shlb
dec
push
cmp
add
inc
mov
mov
push
lahf
aas
mov
push
xor
fldt
mov
mov
repz
mov
xor
push
aaa
lea
fimuls
aam
fdivrs
push
sbb
fdiv
cltd
pop
loopne
test
mov
stc
mov
adc
bound
or
mov
dec
test
lret
xchg
addl
cwtl
pop
test
sbb
ljmp
sub
cwtl
inc
shrb
int3
mov
ljmp
mov
mov
pop
push
cmp
mov
popa
cli
adc
mov
repnz
jmp
push
inc
loopne
hlt
jns
out
daa
dec
cmpb
inc
jo
xchg
arpl
test
test
mov
nop
sbb
sbb
or
mul
in
add
std
adc
cmpb
imul
jmp
cs
popf
fwait
popa
in
xchg
movsl
insb
adc
add
cmp
clc
mov
pusha
fistps
mulb
mov
xor
test
enter
ja
popa
and
push
and
test
insb
and
adc
jne
in
mov
rcrl
sbb
out
shlb
jno
int3
sbb
lea
iret
lret
sbb
or
push
fwait
in
ss
scas
and
pop
inc
stos
stc
inc
repnz
dec
shll
sbb
push
xor
sbb
and
push
sbb
sbb
in
sub
ljmp
dec
jle
dec
dec
xchg
insl
dec
testb
das
pop
movsb
cli
sub
addr16
mov
mov
pop
cmp
dec
mov
aas
enter
stos
add
xor
sahf
int
jns
jne
xor
mov
mov
inc
xor
adc
mov
ljmp
xchg
jo
adcl
into
pusha
fwait
pop
jge
aad
pop
cmp
or
pop
scas
jns
add
adc
xchg
or
dec
push
xor
into
cmp
lods
shlb
outsl
xchg
mov
fistps
pushf
loop
pop
test
sarb
mov
xlat
cltd
mov
fwait
jle
mov
or
out
mov
xchg
cmp
pop
push
cmpsb
jmp
outsl
xor
adc
mov
inc
enter
in
nop
dec
test
inc
scas
pop
lahf
mov
jnp
cs
imull
push
sbb
int
es
xor
and
add
xor
lahf
dec
adc
push
push
movsl
mov
rorb
add
or
mov
sbb
popa
mov
pushf
test
jnp
inc
mov
imul
xchg
lret
popa
stos
js
xchg
gs
sbb
xchg
jmp
push
add
inc
ret
out
outsl
cmpsb
cmpsb
cld
mov
int
pusha
ljmp
mov
push
xor
lock
mov
xchg
xchg
xor
fldt
jb
sbb
dec
adc
fisubrl
mov
jo
jl
xor
sub
pop
negl
cmp
cwtl
add
outsb
into
psubusw
out
and
aad
sahf
jecxz
mov
jb
jp
clc
adc
jmp
out
test
shrb
adc
inc
push
es
jecxz
fdivs
cmp
fistpll
pusha
int3
dec
imul
sbb
xor
fsqrt
xor
add
pop
fbstp
pop
mov
popa
adc
adc
cwtl
mov
mov
mov
int
mov
inc
outsb
cmp
sub
test
mov
cmp
jne
push
out
push
pop
in
pop
fsubl
int
inc
push
movsb
cwtl
cltd
rclb
push
inc
dec
arpl
adc
clc
inc
fildl
bts
mov
lahf
scas
scas
ss
jecxz
pushf
adc
push
test
insb
repz
cmp
adc
xor
cs
mov
lcall
pusha
pop
lret
fildll
sub
push
sbb
mull
outsb
push
xchg
mov
jge
xchg
dec
adc
cmc
scas
ret
fwait
ds
ret
stc
sbb
repz
test
jp
scas
mov
dec
popa
jl
aaa
xor
jns
faddl
lcall
std
dec
mov
xchg
cmpb
xchg
xchg
ficoml
sbb
imul
pop
and
inc
cmp
ss
rcr
pop
out
sbb
sbb
ja
shll
es
dec
testb
into
test
push
das
jbe
cld
in
lcall
hlt
ret
test
movsb
sbb
sub
jo
cli
test
add
arpl
xchg
sahf
ljmp
repnz
mov
dec
leave
jecxz
mov
lret
cmp
mov
lret
aaa
ds
data16
int3
mov
adc
lock
pop
test
or
inc
fwait
push
xchg
push
push
mov
aaa
add
movsb
adc
imul
sti
movzbl
xor
push
sarl
decb
ds
fbstp
add
sub
add
dec
dec
insl
cld
mov
pop
xor
pop
pop
sbb
mov
jbe
scas
xchg
dec
orl
xchg
arpl
fs
out
jbe
push
and
xchg
push
fnstsw
cmpsl
jecxz
fcoms
lahf
inc
repnz
and
insb
ljmp
dec
mov
push
sbb
xorb
sbb
in
test
dec
fcompl
sub
pop
fucomip
data16
push
cltd
sbb
inc
pop
inc
sti
hlt
pop
add
loop
insl
js
pop
mov
adc
push
outsl
imul
imulb
xlat
lods
test
arpl
sub
lea
or
mov
jge
push
outsb
xor
jp
mov
ja
adc
cli
or
dec
cmc
repz
pop
inc
mov
jp
out
out
mov
pop
movsb
jge
rorl
fwait
mov
popa
popf
mov
push
or
mov
and
lcall
les
xchg
mov
test
jns
xchg
mov
stc
das
loopne
push
xlat
out
cmp
dec
jl
jae
les
inc
jle
fdivl
xor
shl
adc
mulb
icebp
fists
rol
pop
aaa
adc
arpl
add
inc
pop
pop
arpl
stos
cltd
ds
into
in
jg
lret
pop
dec
pop
or
mov
mov
sbb
loop
subb
sbb
dec
add
scas
ret
je
addb
lods
mov
dec
sahf
fiaddl
daa
call
pop
jle
jp
or
pop
mov
iret
ja
cmp
inc
mov
mov
dec
xchg
xchg
push
mov
inc
add
fcomps
pop
jnp
inc
sub
rcrl
cmpsl
or
pop
mov
mov
mov
jns
xorb
scas
dec
ret
xchg
jg
and
mov
push
adc
add
mov
inc
shlb
in
xchg
lcall
mov
push
daa
push
inc
inc
adc
movb
into
mov
stc
mov
es
fisubs
adc
dec
loop
shlb
lcall
int3
sbb
lret
lods
mov
lods
jge
sub
subb
out
popa
add
add
dec
add
pop
icebp
and
xor
mov
pop
or
pushf
daa
popf
mov
jecxz
clc
cmp
xchg
mov
es
add
inc
les
push
es
imul
fistl
popl
push
jl
mov
jne
pop
push
shlb
sub
cmpsl
push
mov
fldenv
mov
mov
mov
push
out
gs
cmp
imulb
dec
cmp
sbb
ds
pop
arpl
adc
ret
int3
hlt
pop
fcompl
arpl
add
pop
mov
not
cs
lds
push
jl
ljmp
cwtl
push
or
loope
aad
nop
test
mov
mov
sub
jmp
mov
shll
mov
dec
jecxz
mov
ja
mov
lret
addb
pop
fdivp
sbb
lock
cmp
cs
dec
sbb
sbb
stos
or
dec
jle
xor
in
ret
xor
ret
jb
jo
movsl
jne
jnp
in
test
shll
xor
xor
cmp
xchg
imul
sbb
cmp
iret
cmpsl
fildl
aas
leave
xor
sbb
jo
push
jecxz
fldl2t
add
cs
push
idivl
xchg
call
jmp
sbb
icebp
fs
add
bound
das
or
pushf
adc
xchg
or
and
ds
cmp
sbb
cmc
xor
xor
out
xchg
rorb
sub
pop
mov
pop
mov
push
xchg
js
test
lock
dec
sarb
jbe
xchg
jmp
stc
pop
aam
pop
movsb
xchg
data16
jmp
add
cmpb
dec
out
sub
test
fabs
into
ss
inc
push
out
popa
sub
cwtl
cmp
and
ret
aad
in
loop
sub
sbb
cs
daa
jle
cltd
xchg
pop
lods
xchg
mov
movsl
mov
mov
std
cmp
inc
das
int3
aas
push
iret
out
push
stc
dec
sbb
mov
sub
xlat
mov
add
cmp
adc
and
lods
add
lret
insl
adc
push
inc
pop
push
inc
incb
loope
mov
jno
sub
sub
xchg
aad
int
cmpsb
fildl
and
icebp
mov
mov
jmp
leave
ss
mov
fnstsw
cmp
aad
enter
jge
pusha
mov
sbb
out
or
push
xchg
xor
movzbl
js
int3
sbb
mov
lods
repz
adc
ret
sbb
nop
std
mov
cmp
pop
sti
inc
jecxz
push
mov
out
icebp
cmp
cmp
mov
mov
adc
and
cmc
in
iret
out
mov
outsl
push
aas
xchg
pop
je
cmpsl
lock
mov
ficoms
mov
sub
in
cmpsb
call
jmp
frstors
lods
xor
mov
test
jnp
mov
pop
xor
mov
and
pushf
jae
xchg
lret
dec
or
xchg
pop
pop
ret
xchg
and
cmpsb
int3
lock
ret
addr16
or
iret
dec
sub
shlb
test
js
shr
or
mov
lret
mov
push
sub
scas
leave
pop
adc
mov
mov
push
xchg
dec
jle
xchg
nop
mov
sub
xchg
enter
jno
jecxz
rcrl
sbb
fwait
decl
or
add
sub
inc
movsl
stos
jge
cmp
das
adc
dec
dec
and
push
out
in
filds
pop
lds
mov
popa
sub
bound
mov
cmp
ljmp
dec
xchg
call
andl
ljmp
enter
paddsw
xchg
or
in
push
lea
sub
xor
or
cmp
lds
inc
xor
testb
mov
nop
jge
mov
lahf
aam
lcall
push
xchg
or
pop
clc
adc
pop
xchg
add
fists
pushf
repnz
bound
fs
repnz
dec
mov
cmp
xchg
mov
mov
ret
cwtl
fidivs
imul
jns
mov
out
pusha
xor
cs
pop
dec
push
neg
push
mov
sub
push
rcrl
add
mov
ret
mov
aas
gs
adc
pop
data16
das
xor
mov
rorl
pop
es
sub
push
mov
sbb
adc
xchg
test
fistpll
loop
popa
out
mov
pop
add
xchg
dec
hlt
jb
into
adc
sbb
repnz
rcrb
into
mov
jns
and
outsl
imull
cmpl
ljmp
inc
loop
mov
aam
and
and
fwait
and
inc
push
stos
in
iret
adc
aaa
pop
call
aam
aam
stos
insl
jg
idivl
fsub
cmovns
inc
cs
in
ror
js
daa
mov
lret
or
sub
mov
in
shlb
shrb
je
mov
jno
mov
cmp
lret
iret
movsl
gs
sar
adc
sbb
mov
sub
dec
leave
mov
rcl
lcall
addr16
data16
lods
sub
cs
jge
jg
inc
cmp
jbe
je
jns
cmp
in
jns
and
cmpsb
mov
js
xchg
push
pop
and
jb
testb
repnz
rcrb
sub
jmp
jle
add
mov
cmpsb
in
popf
pop
pop
jno
adc
or
rorl
pop
inc
jl
pop
mov
insl
in
int
dec
push
sbb
mov
lahf
fiadds
pushf
sub
movsb
pop
roll
sub
push
arpl
jo,pn
push
jecxz,pn
inc
rcll
fsubs
arpl
pop
push
es
lret
out
in
fnstsw
push
aaa
andb
bound
int
push
xchg
cs
std
mov
sub
movsl
jg
xor
iret
add
xchg
mov
pop
adc
push
mov
fwait
push
cli
jne
or
mov
inc
jnp
imul
dec
sbb
dec
mov
xor
sarb
mov
popf
adc
test
sarl
jb
pop
shll
mov
xlat
jecxz
inc
adc
xchg
sbbl
scas
jae
jns
nop
or
sbb
xchg
mov
adc
scas
cltd
push
pop
jae
xchg
gs
sbb
in
xchg
dec
jmp
dec
andl
cmc
xchg
fimuls
and
xor
jecxz
sub
das
xchg
xorl
and
xor
aam
xchg
pop
aam
adc
mov
fistpl
lcall
jbe
shll
mov
xorb
adc
mov
pop
sub
mov
fisubrs
cmp
faddp
aad
jmp
sbb
sub
rolb
lds
out
mov
adc
push
pop
lds
add
in
hlt
sar
cmp
loope
push
sub
fstpl
movsb
push
rcl
jge
push
outsb
enter
adc
ret
ss
xor
sub
mov
es
adc
imul
iret
cli
xchg
inc
mov
test
repnz
and
mov
andps
add
aas
add
hlt
xchg
ss
orb
sbb
mov
in
gs
jbe
stos
je
or
sub
and
dec
dec
cmp
jno
inc
add
std
or
xchg
sub
loope
sbb
xchg
cmp
outsb
adc
jecxz
fidivs
cmpl
jl
mov
mov
mov
das
sti
fisttpl
jmp
out
stc
add
popl
mov
mov
ljmp
push
pusha
mov
pop
rcl
xchg
ret
or
push
mov
or
mov
lcall
sbbb
push
or
in
pop
lahf
idiv
scas
idivb
popa
xchg
stc
aad
mov
xchg
stc
imul
inc
jmp
sbb
loope
pop
and
clc
fbld
jae
push
add
lret
pop
in
jne
pop
bound
test
mov
jp
jnp
xchg
sub
les
mov
mov
xlat
jo
xchg
push
out
inc
xor
mov
xor
cli
gs
arpl
mov
int3
es
mov
push
aam
xchg
pop
sub
and
push
pop
shrb
fdivr
sbb
mov
adc
or
jle
insl
ficompl
rcrl
pop
sahf
push
aas
pop
daa
pop
dec
xchg
fwait
test
scas
dec
inc
adc
shr
mov
iret
aas
insb
aad
imul
mov
ja
stos
push
or
push
movsb
lds
orb
xchg
mov
aaa
adc
and
jg
mov
jne
sbb
and
and
sbb
clc
dec
test
aas
xchg
out
cld
mov
mov
lock
fldcw
lods
adc
lock
stc
add
jl
jo
clc
repnz
inc
mov
or
ret
add
sub
fsub
addr16
mov
aas
arpl
fcoml
push
ror
jo
dec
mov
fst
sbb
and
fdiv
stos
andb
jp
xor
jge
or
and
outsl
fcmovne
insl
push
push
pop
fisubrs
mov
push
push
dec
pop
fimuls
scas
jns
pop
loop
dec
mov
iret
mov
lahf
mov
xchg
rolb
pop
xchg
mov
lcall
xor
hlt
out
ret
inc
movsl
cltd
dec
or
test
js
aad
in
jo
addl
ja
add
and
cmp
mov
je
mov
cli
jg
out
adc
mov
ds
fs
ja
sahf
mov
shlb
dec
lock
outsb
mov
pop
pushaw
out
mov
shlb
icebp
pop
sti
jl
push
jl
stos
out
sbb
lea
add
cltd
jp
xchg
je,pn
filds
test
xor
leave
adc
popf
mov
inc
sbb
pop
dec
xchg
int
add
ss
push
fimuls
inc
mov
and
sarl
je
sub
sub
and
pop
jge
mov
shll
dec
ds
jge
cmp
sub
int3
xor
add
in
mov
mov
popf
sti
mov
jmp
mov
xchg
mov
leave
pop
scas
rcr
out
movsb
jnp
mov
out
xor
rorb
jecxz
aas
mov
popa
mov
pop
icebp
lock
testl
jno
pop
sub
jb
mov
out
fidivs
or
xor
ret
fnstcw
push
les
movsb
stc
cmp
xchg
ret
lds
lods
std
sub
xchg
iret
aaa
or
add
or
inc
jle
push
push
mov
adc
sub
mov
pop
jle
rclb
scas
or
mov
fldl
xor
lods
jp
repnz
repnz
mov
xlat
jge
push
add
shll
xchg
jbe
mov
push
lahf
pop
mov
lock
arpl
roll
mov
jmp
movsb
fadd
insl
pop
outsl
shll
lcall
lret
push
sbb
mov
sbb
stc
and
xor
rorl
js
mov
gs
mov
adc
xchg
lret
xor
into
ljmp
cwtl
cmp
jno
enter
clc
sbb
ds
lcall
mov
rcr
div
sub
scas
scas
fisttpll
sbb
pusha
cmp
push
insb
fisttps
adc
pop
and
pusha
push
test
in
cld
add
lret
mov
dec
add
sbb
fimull
shlb
mov
je
jno
cmp
les
jg
jmp
cmp
scas
call
inc
mov
fisubs
lret
mov
dec
repz
adc
jbe
std
shlb
pop
or
sub
lods
in
add
inc
dec
sub
fs
stos
pop
jae
fucomi
out
out
mov
ja
cli
fisttpll
xor
xor
cld
jno
fcmovu
ret
mov
jb
sbb
xor
sbb
mov
jecxz
sub
jnp
aas
mov
aas
sub
jle
lret
pop
leave
inc
aam
push
xor
jns
xchg
daa
push
xchg
fistpl
adc
and
das
push
data16
pop
inc
dec
adc
xorl
cltd
dec
sahf
comiss
jl
repz
adcl
cs
mov
xor
jnp
dec
inc
ljmp
jecxz
xor
stos
xor
fistps
sbb
xchg
jae
addr16
test
gs
ficompl
push
cmp
sbb
mov
nop
xchg
cmp
in
push
pop
cli
sbb
mov
call
js
ret
vdivps
ja
inc
jge
movsl
or
pushf
mov
sti
mov
push
inc
jge
sub
std
pop
inc
jecxz
daa
lea
pop
lea
xchg
sub
popf
lret
imul
cmpsl
imulb
inc
fcompl
jmp
cmp
in
xor
pmuludq
add
mov
loopne
sub
jbe
lcall
push
dec
rorl
gs
push
cmp
mov
ljmp
aas
dec
rdmsr
mov
xchg
ja
dec
std
xlat
inc
insb
cmpsb
dec
rcrb
sti
movsl
hlt
mov
mov
sub
add
cmc
lret
jns
ljmp
je
jp
aam
lret
scas
cmp
mov
mov
out
jle
xchg
mov
jle
pop
ljmp
mov
jo
sub
mov
push
out
sub
pop
pop
cmp
out
jg
in
test
movsl
stos
jns
imull
jle
push
or
lcall
fs
lock
jnp
dec
adc
xor
or
lods
inc
fbstp
ja
sub
out
les
jge
dec
arpl
xor
sarb
mov
mov
push
add
mov
in
xor
outsb
adc
sub
fcomps
cmp
jmp
out
or
mov
sub
lods
jns
popa
faddl
jl
adc
sbb
pop
leave
sahf
mov
jge
mov
in
icebp
pushf
fisttpl
movsb
stc
adc
ret
xchg
cmp
pop
push
mov
inc
call
jbe
pop
lods
push
push
lock
stos
sub
inc
mov
inc
pop
sub
je
xchg
je
arpl
fwait
mov
and
dec
mov
and
cmpsb
jae
inc
xchg
shll
xor
mov
int
inc
pop
xchg
sub
bound
bswap
fistpl
insb
sbb
hlt
push
andl
cld
rorb
and
cmp
addr16
mul
mov
or
or
pop
fisttps
jb
subb
xchg
outsb
in
xchg
cmp
pop
jns
or
aad
bound
xor
cmc
jmp
jae
mov
or
sub
ficompl
xchg
dec
stc
xlat
bound
fs
sar
or
cmc
lcall
sbb
out
fldcw
jae
mov
push
cltd
adc
cwtl
inc
ret
mov
shr
push
and
or
rcl
gs
shlb
fsts
xor
adcl
xlat
sbb
push
inc
push
dec
add
adc
daa
fwait
hlt
or
mov
jmp
scas
pop
sbb
adc
cli
rcrl
ds
cmp
movsl
pop
mov
mov
pop
dec
push
or
insb
sbb
jb
or
hlt
out
dec
aad
cmpb
mov
lods
pusha
inc
loop
mov
ja
and
mov
sbb
inc
xchg
jnp
clc
push
addr16
mov
xchg
imul
dec
aam
je
push
sub
push
aad
adc
jns
pusha
xchg
das
fsubs
ficompl
push
mov
sbb
hlt
mov
xor
sub
fisubrs
test
scas
inc
es
jecxz
lock
mov
xlat
push
je
mov
jns
das
xchg
sub
adcb
jbe
fldt
rorb
cmp
aam
and
xchg
cmp
ret
add
dec
jne
mov
in
ja
dec
scas
adc
inc
xchg
adc
out
mov
scas
hlt
dec
inc
dec
sti
stc
cli
into
mov
jb
jae
jecxz
mov
add
sub
and
fwait
aas
add
loop
pushf
pop
push
sahf
popa
and
mov
repz
fsubl
xchg
subl
cmpsl
call
and
adc
int
jl
xchg
sbb
adc
jmp
lea
nop
fadds
cmove
mov
mov
imul
mov
rcr
ss
popf
testb
and
insl
js
imul
add
das
xchg
pop
lea
ja
sahf
xchg
lahf
inc
fiadds
and
scas
aas
jnp
adc
outsb
stos
mov
and
call
add
jge
repnz
jae
push
ss
jp
out
test
lods
jo
xlat
sti
xlat
xor
sub
mov
clc
out
shrb
add
add
dec
cli
mov
mov
into
sti
fwait
pop
and
subl
insl
and
add
sub
xor
sbb
mov
int
loop
or
sub
andl
outsl
rorb
sti
js,pn
inc
and
lea
mov
test
adc
add
stos
sahf
xor
xor
xchg
fsub
insb
fcmovbe
or
dec
dec
push
inc
add
lret
sub
dec
pop
xor
ljmp
pop
sub
push
mov
pop
divb
mov
cmp
movsl
jmp
cmp
dec
dec
enter
data16
sub
mov
in
pop
fs
push
add
pop
jnp
jns
dec
sbb
cmp
jecxz
daa
sub
push
inc
ret
pop
adc
adc
pop
pop
dec
shll
sbb
and
jae
xor
repz
sbb
test
aad
and
push
idivb
jmp
rclb
daa
push
cmp
imul
jbe
leave
cmc
cmp
out
mov
mov
psubsw
sahf
mov
ret
in
popf
mov
jge
pop
das
pop
mov
mov
outsb
jge
sahf
aas
mov
pop
mov
call
int3
xor
add
sbb
icebp
adc
cmp
mov
cmc
int3
jae
push
push
fs
xor
mov
addr16
jns
mov
gs
fcoms
sub
cmp
pop
lods
out
addb
mov
pop
scas
push
or
cmp
add
jbe
mov
scas
lret
ss
lods
rclb
fidivs
icebp
sub
loopne
add
pop
subl
sbb
imul
sti
xchg
mov
jne
hlt
mov
sahf
lods
mov
lret
ljmp
xor
and
xlat
int
adc
sub
and
xlat
xchg
ja
sub
push
jnp
test
jmp
rol
out
cmpb
faddp
ret
pusha
ja
cwtl
movsb
or
cli
fnstsw
push
movsb
or
sub
mov
sub
mov
mov
sub
push
mov
sti
cmpsl
repnz
fisttpl
call
mov
sarl
jecxz
iret
push
ficoms
xchg
les
nop
xchg
jl
stos
sub
adc
call
gs
dec
fcomps
adc
cmpsl
adcl
pop
dec
inc
xor
sbb
xchg
xchg
stc
cmpsb
mov
inc
ficoml
add
xchg
adc
test
shlb
pusha
lret
xchg
ret
mov
add
push
int3
hlt
rcrl
push
jb
mov
mov
sbb
xlat
fs
sub
push
push
outsb
in
fistl
push
incb
mov
adc
test
clc
mov
std
daa
daa
adc
int
stos
add
or
dec
and
fdivs
add
sti
mov
ss
jg
adc
and
xchg
test
or
mov
xor
pop
sub
call
loop
fisubrs
aas
arpl
repz
cmpsb
sti
mov
cmc
push
add
imul
outsb
cmp
sub
loope
test
cmp
inc
out
andl
add
cmp
pop
xor
or
push
scas
repz
enter
mov
pop
pop
mov
and
lods
std
xchg
or
int3
xor
outsl
pop
imul
mov
incb
in
sub
pop
jbe
or
in
stc
push
jne
sti
dec
mov
mov
mov
pop
pushf
loope
inc
adc
mov
sarl
pop
push
mov
or
scas
sub
xchg
push
mov
xchg
leave
roll
fldenv
lds
mov
popl
mov
fisttpl
mov
cmp
cmpsb
sbb
adc
jmp
cmp
lock
inc
cltd
cwtl
push
scas
add
inc
mov
mov
pop
aaa
lods
push
inc
or
push
jbe
into
fsub
inc
xor
mov
adc
sub
hlt
and
les
popf
jns
and
mov
sbb
jg
mov
stos
adc
jno
pop
out
cmpsb
pusha
or
or
test
cwtl
sub
js
sbb
inc
ss
fnstcw
stc
pop
sbb
jp
cmp
add
or
sbb
ret
dec
xchg
pop
loopne
mov
subb
lea
pop
add
mov
lods
rcrl
pushf
fstpl
out
jecxz
cmpsl
sarb
adc
fisttpl
sti
lods
dec
nop
das
dec
add
xlat
sub
adc
into
out
mov
daa
out
movsl
leave
push
ja
adc
pop
xchg
ret
and
xchg
sbb
cmc
add
loope
cmc
xchg
fldl2t
push
test
int3
and
sbb
ja
add
fiadds
test
fucomi
icebp
mov
insl
lret
aaa
fnstcw
add
test
add
push
and
pop
lret
and
inc
lods
arpl
ss
push
jbe
xchg
stc
adc
fdivrl
push
cmp
test
mov
ret
add
add
sti
addl
fstpt
mov
pop
mov
insl
jp
adc
jbe
mov
mov
inc
into
sti
adc
das
ror
pop
fistpl
outsl
clc
push
leave
mov
xchg
imul
inc
stc
jae
addr16
aas
lds
cld
and
dec
int3
mov
pop
jno
cmpb
aas
cmp
pop
xor
or
or
sbb
adc
lahf
popf
into
addb
repnz
jo
fs
or
sub
lcall
pop
loope
adc
fstps
scas
in
cmc
inc
push
sahf
pop
cmp
dec
push
mov
jmp
mulb
cmp
and
mov
std
dec
inc
mov
lods
daa
sub
dec
push
mov
jmp
inc
outsl
cwtl
push
cld
push
lcall
sbb
mov
pop
jnp
dec
pop
stos
pusha
or
and
mov
scas
xchg
aaa
je
jne
lret
scas
mov
out
cwtl
inc
hlt
cmp
aad
pop
frstor
push
inc
push
int3
sub
sub
cmp
fwait
into
or
lret
fwait
sti
push
mov
sbb
push
lret
outsl
je
adc
jg
mov
mov
jg
aas
push
inc
inc
jmp
inc
pop
xor
je
and
sbb
cmp
mov
ds
js
test
fmuls
out
jl
lock
lcall
mov
push
shll
push
sar
inc
mov
inc
outsb
sbb
sub
lret
fs
sbb
popf
xchg
lgs
mov
popf
js
mov
out
mov
mov
lea
dec
add
mov
xor
hlt
out
add
sbb
sti
jo
ficoms
jbe
out
sbb
cmc
mov
cmp
hlt
rorb
mov
leave
popa
push
pop
jle
insb
addr16
into
stc
shr
push
mov
orl
jnp
aaa
jg
out
dec
shll
repz
int3
int3
pop
mov
sub
xchg
movsb
aam
jmp
fcoms
sbb
push
or
out
ret
pop
popa
fmuls
iret
jecxz
jnp
xchg
add
pushf
inc
adc
mov
ds
inc
pop
add
sub
imulb
cmp
push
sbb
or
xor
sbb
shrb
das
and
popf
xchg
aad
ds
add
cmpb
jo
clc
inc
icebp
fistps
or
fildll
push
sahf
add
ljmp
jp
add
repz
jns
xlat
test
push
int3
movsb
mov
or
popa
lea
cltd
and
pop
rcrl
dec
fnsave
lods
mov
stos
lods
cmp
vunpckhps
daa
xchg
cld
jg
rcll
daa
push
mov
test
arpl
jbe
or
shlb
or
aam
add
in
ret
and
imul
test
lods
js
cmp
and
cmc
jge
cmp
mov
mov
in
cpuid
je
movl
pop
divl
andl
adc
sbb
dec
and
fadds
test
push
sarb
ljmp
pop
jb
adc
pop
movsb
call
idivb
jne
xor
je
movsb
or
push
cld
and
jl
lahf
adc
out
jle
ret
mov
loope
fiadds
test
adc
test
data16
add
enter
leave
inc
dec
or
mov
fstpt
fcompl
lret
sar
pop
adc
movl
adc
fwait
dec
std
mov
loop
cmp
push
aaa
adcb
xchg
push
cmp
dec
bound
inc
int3
or
das
ret
lret
sbb
add
insb
in
in
cmp
xchg
mov
sub
jo
xchg
movsl
test
inc
decb
inc
xor
cmc
push
cwtl
xchg
icebp
lods
push
push
inc
adc
sbb
mov
scas
fdivr
mov
lods
dec
enter
pop
pop
jge
cmp
sub
inc
jp
loope
sbb
lahf
outsl
dec
call
add
adc
and
mov
cmp
pop
inc
dec
mov
mov
movsl
sub
stc
cmpsl
jae
xor
int3
scas
add
test
or
pop
in
xor
clc
cmp
fstl
adc
test
xor
jnp
jns
mov
mov
addr16
sub
xchg
int
push
add
mov
lahf
sti
push
fwait
inc
push
inc
sub
dec
cmc
push
xor
add
or
add
outsl
mov
mov
lret
sbb
push
cmc
sub
out
popf
add
int
or
inc
subb
or
mov
les
test
insb
std
mov
adc
adc
mov
mov
xchg
stos
mov
fs
adc
add
in
imul
jmp
in
add
mov
add
adc
shl
pop
mov
and
std
cmp
adc
movsl
in
sbb
das
pop
pop
arpl
nop
insb
xor
outsl
push
sub
ret
mov
xor
shll
out
notb
dec
aaa
add
mov
sub
aad
cmp
jg
imul
mov
push
lret
xor
or
or
push
in
pop
insl
lods
in
sbb
sub
inc
jno
test
adc
ja
orb
insb
pop
in
sub
cmp
les
shlb
inc
xor
pop
add
mov
jb
imul
not
cs
inc
pop
popf
inc
add
xchg
cmp
fildl
fwait
cs
push
outsl
xchg
lds
cmp
push
enter
stc
test
xchg
and
fimull
test
xchg
jbe
andb
lret
imul
cwtl
enter
ljmp
lea
pop
push
ficoms
es
sub
push
adcl
sbb
inc
or
pop
test
repnz
fidivl
jg
nop
mov
jo
fwait
mov
push
or
cmp
aad
imul
pop
les
pop
orb
adc
cmc
enter
js
adc
out
das
das
test
loope
lret
fnstsw
pusha
xor
inc
aam
fcompl
aaa
dec
clc
push
jno
jns
push
sub
jg
add
inc
daa
sub
xor
mov
pop
fdiv
mov
inc
mov
repz
cmpsl
mov
xor
lds
icebp
sarl
scas
lret
cmp
mov
jns
adc
adc
push
addr16
mov
mov
push
xor
jg
pop
pop
sbb
mov
sbb
push
xchg
mov
in
pop
bound
popa
test
push
stos
lret
rorl
push
dec
fildll
xlat
sbb
cmp
enter
ret
cmpsb
cwtl
leave
add
or
loopne
xchg
ret
fimull
dec
arpl
orw
test
inc
add
pusha
jbe
mov
mov
mov
dec
and
adc
sbb
adc
push
inc
fsubrl
cmpsl
int
dec
mov
or
sub
jb
cmp
cmpsl
ror
ss
and
and
aam
add
cli
cmp
adc
ljmp
aad
jbe
mov
stos
jae
aaa
scas
or
fdivr
pop
or
inc
xchg
in
adc
adc
insb
sbb
and
int3
pop
test
ret
mov
sub
rcrb
enter
inc
or
andb
in
imul
hlt
movsb
cmp
mov
das
or
test
mov
outsb
mov
sub
or
dec
das
mov
or
loope
mov
fucompp
subb
mov
add
mov
xchg
inc
out
ljmp
xor
push
inc
xchg
push
inc
fdivr
add
mov
pushf
adc
sub
testl
pop
aam
ds
lods
ret
dec
jge
xor
push
out
adc
jmp
iret
stos
imul
lcall
sub
or
mov
xchg
or
xchg
jecxz
mov
ja
dec
andb
arpl
mov
push
and
dec
fadd
or
xor
mov
test
gs
out
mov
push
mov
mov
test
push
mov
js
icebp
out
push
int3
dec
lcall
rep
push
jo
cmp
push
push
add
loopne
popa
fwait
popf
in
cmp
cmp
rcrb
and
arpl
pop
scas
push
push
jmp
inc
fcoml
add
xlat
rcl
push
jp
cs
pop
shrl
dec
adc
int
faddl
jno
pop
leave
adc
adc
jmp
stos
mov
pop
loop
testb
mov
scas
sbb
mull
mov
in
fsubr
xchg
pop
out
push
sar
push
cmc
mov
push
sti
loop
jbe
dec
push
sub
sbb
sbb
and
xor
movsl
icebp
ljmp
aaa
into
sub
pushf
inc
insl
sub
cmc
jb
loopne
orb
mov
fistpl
les
pop
push
sbb
es
push
dec
push
enter
pushf
pop
fistl
leave
xorl
mov
pop
int3
inc
movsl
add
nop
xchg
sbb
roll
push
outsb
jg
stos
cmpb
jne
sub
xchg
or
cmp
sahf
adc
lea
lods
lcall
ss
mov
push
or
dec
je
sbb
ja
xchg
inc
mov
and
and
popf
push
mov
std
dec
int
and
inc
and
mov
cmc
sbb
jno
aaa
xor
enter
nop
cmpsb
adc
es
sbb
mov
ss
inc
cld
fcoml
pop
pop
imul
test
std
and
fstpl
outsb
xlat
imul
push
sbb
cli
xchg
sub
pop
out
add
mov
mov
dec
addr16
loop
lods
inc
and
jmp
lahf
pop
aas
lret
aaa
sar
in
mov
lods
into
test
or
cmp
imulb
sub
out
les
insl
mov
das
mov
jmp
mov
cmc
scas
jae
mov
sub
mov
xchg
stos
sbb
mov
cmc
and
jl
jmp
fwait
xor
sbb
imul
aaa
rcrl
test
push
mov
roll
mov
cmp
sti
jecxz
xchg
pop
adc
rorb
push
jbe
mov
js
pop
add
lret
sbb
cltd
add
mov
add
jno
jmp
dec
or
je
cmpsl
lret
gs
adc
jo
notb
pop
sub
imul
call
jo
jo
addl
fs
lea
push
pop
cmc
fisttpl
outsb
inc
or
popf
je
push
leave
or
data16
mov
cmc
loop
mov
jp
mov
xchg
add
rcrb
push
cltd
nop
xchg
push
adc
push
out
pop
add
aad
outsb
or
mov
push
push
xor
shr
cmp
lahf
cmp
rolb
repz
add
mov
fists
out
xchg
xchg
push
push
xor
pop
pop
inc
xchg
jae
jns
out
jo
je
cmp
xor
mov
sahf
push
movsb
xorl
fistpl
std
lret
repnz
push
popf
cmp
mov
int
neg
das
mov
ja
mov
out
fidivl
fisttpll
mov
inc
and
xor
pop
outsb
mov
notl
pop
sub
addb
in
dec
faddl
push
adc
call
or
cwtl
movsb
jge
in
mov
mov
push
mov
into
add
cmpsl
mov
gs
adc
xchg
and
in
inc
aam
dec
addr16
loopne
loop,pt
fs
cs
pop
ret
jnp
jb
test
pusha
inc
imul
and
js
lock
xchg
inc
std
adc
adc
mov
dec
shl
dec
psrad
in
sub
js
jp
mov
adc
loope
fnstenv
jg
out
adc
pop
jae
rep
leave
sbb
cld
lahf
mov
sub
ficomps
xchg
xchg
imul
hlt
pop
lret
bswap
cltd
out
xchg
mov
jle
jl
sub
sbb
adc
pop
arpl
lret
dec
daa
stos
scas
and
jnp
fisubs
adc
xchg
push
sub
mov
cmpsl
in
lcall
pop
xchg
imul
cmp
mov
sbb
and
xor
cmpb
aas
pop
das
pusha
and
pop
pop
inc
out
fmull
mov
push
aaa
addr16
cmpsl
into
mov
mov
mov
sbb
cmp
lock
sti
jno
sub
xlat
sbb
outsb
mov
jbe
pop
movsb
sti
loop
lret
aas
push
rcrl
shrb
or
sub
mov
dec
lods
aam
movsl
shr
fxch
mov
sbb
mov
lea
gs
or
xor
iret
lds
aas
cmc
enter
les
iret
shlb
or
inc
call
mov
xor
push
test
mov
popa
sub
xchg
xchg
fistpl
and
pop
repz
daa
test
pop
cmp
push
stos
xorl
xchg
cmp
orb
push
stos
arpl
test
out
adc
fs
lahf
test
imul
jge
adc
icebp
leave
dec
leave
lods
icebp
inc
shrb
add
test
mov
aad
dec
lret
dec
adc
jg
shll
ret
cmp
lea
es
mov
push
push
out
cltd
mov
stos
dec
popf
adc
jbe
add
sahf
stos
cmp
jle
push
jmp
or
outsl
iret
sub
xchg
iret
inc
dec
int3
pop
mov
push
xchg
xor
mov
xor
mov
loopne
outsl
jb
fwait
pop
popa
cmpsl
stos
inc
mov
add
ffree
adcl
cmpsl
test
pop
mov
movsl
popa
cmp
dec
jae
je
loopne
cmpsl
push
or
jo
sbb
insl
sbbl
mov
outsb
cmpsl
jbe
data16
inc
jne
or
push
xchg
jb
adc
cmp
lret
and
or
mov
push
pop
xchg
inc
imul
sahf
adcb
les
add
cld
jp
aad
sbb
nop
stos
xor
jl
xor
jbe
in
adc
dec
ljmp
faddl
fists
insb
xchg
outsb
push
mov
adc
daa
enter
jae
xchg
stos
cmpsl
jnp
xchg
scas
daa
cmpsl
jg
mov
pop
mov
or
xor
dec
dec
nop
add
or
xchg
cwtl
xchg
cmp
addr16
insl
mov
jecxz
and
and
rorb
imul
mov
push
push
xchg
pop
mov
inc
out
stc
inc
sub
sub
insl
insl
mov
cli
je
in
mov
cmp
in
jnp
negb
leave
mov
mov
or
je
xchg
cmpsb
shlb
iret
xchg
in
sub
in
outsl
enter
jg
pop
cmp
jle
psubusw
add
jnp
xor
mov
clc
push
xor
cmp
shlb
and
add
mov
add
dec
add
and
or
mov
xor
test
fisubrs
repnz
mov
push
pusha
mov
or
imul
inc
cmp
shll
ds
pop
mov
popf
rorl
lods
int3
sbb
fldz
xchg
mov
fcoml
xchg
inc
sbb
aad
outsb
movsb
popf
lret
out
xchg
or
cltd
sbb
clc
insb
loop
sub
mov
das
ljmp
sbb
into
lds
sbb
xor
xchg
or
pop
pop
insb
imul
mov
cli
sub
outsl
in
movsl
addr16
inc
push
pusha
adc
xor
daa
jno
push
mov
cmp
cmpsb
dec
inc
xor
add
clc
xor
cld
aas
mov
jmp
into
push
pop
xor
push
dec
hlt
daa
cmpsb
sub
std
jge
jl
pop
cmp
push
push
shll
dec
and
mov
repnz
and
add
std
lds
add
bound
cmp
int
add
pushw
xor
mov
dec
jmp
push
jg
scas
out
inc
push
lods
fsubrs
dec
iret
sbb
xlat
ljmp
xchg
mov
shrb
add
add
dec
dec
sbb
stc
sti
push
imul
adc
push
sarb
mov
sub
aaa
inc
add
int3
xor
cmp
add
mov
mov
lcall
ljmp
xorl
adc
test
pop
pop
lods
imul
rcrb
mov
xchg
lock
hlt
les
pop
xchg
test
int3
test
add
jbe
xor
ss
fdivs
outsl
adc
das
popa
jg
fiadds
js
add
mov
filds
sub
push
push
mov
sbb
dec
inc
inc
pop
cmp
call
xor
movsl
fstp
loopne
cmpsl
fistl
in
jg
push
addr16
int
mov
lods
mov
jns
pop
dec
cli
xlat
mov
mov
sbb
xor
loope
add
pop
push
ss
mov
gs
xor
ret
add
subl
adc
dec
inc
push
jne
pop
push
daa
xor
cwtl
loope
jle
mov
xchg
push
xor
mov
push
enter
xor
cltd
hlt
adc
cmpsb
pop
sbb
pop
dec
call
add
jb
lcall
pop
stos
test
sub
jle
sbb
jmp
push
nop
push
mov
fsubr
push
sub
push
dec
pop
fwait
mov
adc
call
les
repz
in
insl
inc
fwait
movsl
fs
or
jae
es
int
sbb
mov
mov
cwtl
jmp
lret
pop
push
push
xchg
pop
in
push
inc
jbe
xchg
dec
adc
icebp
fisubs
cmpl
in
xchg
aaa
mov
das
addr16
int
mov
mov
pushf
es
adc
inc
in
and
mov
or
shr
popa
sbb
cmc
mov
jl
std
push
fs
cmp
xor
push
inc
sbb
pop
push
subb
cwtl
hlt
adc
push
out
cmpsl
loope
xor
sbb
push
jo
iret
push
iret
imul
jb
sbb
addr16
aad
je
adc
sbb
add
testl
outsb
incb
pop
push
dec
loop
xchg
and
push
mov
fistps
mov
sub
mov
imul
aas
inc
in
int3
cmp
mov
jge
movsl
pusha
sub
sbbb
shrl
ja
fisubl
outsb
cmp
cmp
test
add
or
dec
out
mov
jle
sbb
movsl
loop
sub
out
ret
xor
mov
push
mov
add
out
icebp
movsl
gs
mov
fimull
subb
aad
rcll
addb
pusha
cmpsl
mov
or
add
mov
ss
lods
cwtl
xor
mov
pushl
and
in
daa
in
gs
jecxz
scas
inc
fucomip
adc
idivl
push
xchg
sbb
jae
cs
test
jg
and
divl
xor
sbbb
mov
daa
pop
shrb
mov
and
cmpsl
aas
sti
lods
insl
mov
pushf
fildl
xor
mov
dec
mov
xchg
xchg
aaa
pop
lock
adc
xchg
popa
push
push
or
hlt
das
rcr
ds
in
mov
push
xor
clc
pop
adcb
pop
add
pop
icebp
gs
mov
movsb
fwait
adc
negb
fcmovne
push
jbe
aam
das
outsl
cs
push
ds
xchg
jb
pop
or
push
xlat
push
jns
pop
ret
add
cmpsb
push
mov
and
pop
stos
in
mov
mov
add
es
stc
xchg
dec
aad
cli
shrl
pop
adc
adc
jno
jp
cmp
bound
mov
dec
test
sbb
lock
xor
lret
cld
pop
int
and
xor
sbb
xorl
sahf
and
xchg
jb
xor
mov
lods
mov
sub
inc
pop
movsl
or
ficoms
adcb
ret
push
push
in
push
push
jmp
and
lds
or
movsb
arpl
jg
mov
inc
clc
lret
iret
adc
repz
in
xchg
sar
pop
scas
movsl
push
mov
cmp
push
std
push
ds
sbb
pop
test
insl
int
sub
jmp
rorl
inc
cwtl
sub
cwtl
fdiv
sub
fimull
add
outsl
fcmovnbe
repz
or
cmp
sub
clc
mov
adc
mov
dec
leave
flds
sub
push
rcll
in
ret
jbe
mov
std
lret
add
xor
mov
mov
ret
popa
out
push
out
sbb
mov
mov
xchg
cmpsl
shrl
push
and
add
inc
inc
gs
pushf
xor
pop
dec
lcall
cmp
in
sub
cmp
adc
push
loop
imul
pop
aaa
enter
call
pop
sub
xchg
int
les
movsb
ljmp
sub
test
jle
fs
add
loope
hlt
dec
or
adc
push
lahf
fadd
fs
mov
sti
into
lret
jno
xor
push
test
fwait
pop
fwait
std
mov
cli
add
sti
fstpl
fidivs
jge
xlat
xor
cmp
es
add
stos
xor
add
je
fildll
stos
sub
das
jl
and
mov
aaa
push
xor
ret
push
xchg
or
sub
mov
pavgw
mov
testl
div
cmp
fiadds
popf
insl
push
xchg
add
inc
lret
pop
mov
inc
jo
push
xor
sbb
push
sbb
and
adc
mov
out
addr16
add
xor
fwait
test
jb
clc
pop
std
pop
dec
in
call
lcall
popa
outsb
inc
aas
and
sti
arpl
xchg
xchg
mov
push
xchg
popf
xchg
cmp
scas
adc
jnp
lcall
ljmp
decl
fistps
sub
das
or
ret
or
xchg
into
mov
sub
mov
push
sbb
push
mov
mov
fsubs
daa
outsb
popf
adc
ja
orb
jb
movsb
mov
std
jae
idivl
in
fstps
pop
ret
cld
xor
add
dec
add
jmp
jecxz
push
rcll
fcmovne
popf
mov
mov
sbbl
pop
push
loope
inc
xor
mov
mov
int
rcrl
je
push
outsl
sbb
aaa
jmp
cmp
dec
rorb
pushf
adc
xor
jmp
adc
push
mov
loope
xchg
in
pop
lret
adc
xchg
xchg
dec
push
sbb
push
and
xchg
mov
je
or
cli
push
push
mov
cmp
inc
aam
push
outsb
xchg
push
lods
push
and
mov
popa
sbb
mov
addb
or
sbb
add
add
or
cmp
aaa
andb
add
add
mov
stos
es
pop
jbe
jae
mov
push
cmp
ljmp
aas
rclb
cli
arpl
dec
int
sbb
push
mov
inc
cmp
add
ror
mov
mov
or
sub
faddl
enter
adc
xchg
rcrb
js
fsubrs
pop
cli
sub
andb
fistl
inc
and
xchg
dec
ljmp
mov
jbe
xor
pusha
sub
mov
jecxz
adc
mov
lods
loop
inc
mov
mull
int3
imul
out
push
xchg
out
xchg
dec
mov
and
enter
inc
xchg
mov
out
jmp
fldcw
sbb
or
data16
sbb
cmp
jns
insl
mov
scas
mov
add
xchg
xchg
mov
sti
mov
cli
xchg
cmp
arpl
fstps
inc
mov
dec
repz
inc
push
inc
scas
sub
mov
sar
inc
pop
inc
jle
inc
popf
add
push
xchg
sub
xor
inc
jecxz
shll
ss
movsb
enter
cli
add
mov
or
fcoml
cwtl
int3
xor
adc
xchg
shll
and
inc
out
mov
cwtl
pop
sub
cli
aas
xor
bswap
mov
not
jge
out
in
bnd
push
stos
jl
inc
xchg
stos
sbb
inc
xlat
mov
sbb
ljmp
hlt
and
es
dec
in
or
stos
push
push
add
and
fcomps
int
inc
jae
jl
add
mov
out
mov
inc
lcall
xor
jecxz
xor
xor
push
aaa
out
fiaddl
in
dec
lods
icebp
clc
gs
jmp
lea
jp
inc
adc
les
rorb
and
push
pop
inc
scas
stos
add
mov
out
repz
das
adc
or
addb
mov
push
pop
push
bnd
jmp
inc
adc
fimuls
and
pop
mov
push
js
mov
int
and
addb
movsb
xchg
jnp
inc
push
push
and
pop
sub
scas
pop
push
fadd
lods
sbb
mov
cmp
adc
vmovdqa
cmp
fiadds
mov
inc
ljmp
and
ret
dec
addr16
adcw
mov
fwait
testl
xor
fmuls
popf
cmp
push
icebp
sbb
loop
out
jae
jns
mov
in
fiadds
add
in
inc
in
pop
mov
xor
mov
std
fldenv
sbb
sub
dec
push
out
push
push
or
popw
lods
mov
fstpl
cmc
add
frstor
mov
mov
ficoms
jns
push
xchg
repz
arpl
jae
jnp
ljmp
insb
ss
pop
cmp
ljmp
icebp
movsb
test
inc
rorl
or
icebp
je
push
dec
enter
push
push
nop
pop
lock
jp
ds
cld
cltd
xchg
inc
or
pusha
inc
andb
mov
imul
pop
outsl
push
dec
mov
pop
pop
loopne
lock
xchg
fadds
adc
mov
call
aaa
movsb
jl
incb
jne
ds
add
pushf
adc
clc
cmpl
inc
das
pop
movsb
sbb
xchg
mov
sub
cs
adc
and
add
mov
icebp
cwtl
movl
movsb
test
pop
push
push
and
popw
in
sub
lahf
gs
xchg
shl
xchg
push
test
pop
mov
cmp
repz
sbb
add
cmc
and
fs
rclb
add
iret
shl
lea
push
imul
nop
lahf
jns
xor
in
dec
mov
jg
sbb
mov
or
pop
loopne
lods
nop
adcl
fscale
cmpl
test
and
sbb
es
pop
int3
xchg
cmp
clc
jle
cmpsl
xchg
test
dec
aaa
cmp
xor
dec
into
pop
sahf
iret
or
adcb
ret
insl
es
fimull
ljmp
imul
lea
push
inc
jp
push
mov
xor
cmc
inc
jns
cmp
cmp
test
loop
pop
ret
jne
ret
aaa
fimull
sbb
xor
std
cmpsl
lret
add
cmc
xchg
add
stc
sti
xor
adc
daa
xor
ds
repnz
mov
fnstcw
sarl
sbb
sbb
les
je
sbb
mov
push
ds
les
jbe
mov
push
imul
pushf
jge
pop
inc
sti
popa
mov
rolb
test
lret
cli
or
mov
and
loop
push
aad
dec
rolb
cmp
shll
je
xchg
repnz
fnstenv
fldl
pop
rcrl
mov
cmp
arpl
mov
xor
mov
mov
sahf
ret
pop
sti
cmpsb
popa
repz
sub
mov
shrb
imul
or
inc
decl
xor
ret
add
xchg
stos
xchg
loopne
jns
je
fisubl
jno
sbb
rcrb
fidivl
mov
sub
inc
cmp
push
fiadds
fwait
and
mov
mov
pop
sub
fcoml
ljmp
jbe
cmp
das
push
and
out
popf
xchg
xchg
ds
dec
repz
sub
iret
addr16
push
inc
mov
mov
sub
icebp
adcb
imul
jp
cmc
popa
adc
adc
test
loope
mov
out
out
popf
arpl
mov
mov
xchg
cld
data16
xchg
rol
out
or
pusha
mov
ds
aaa
and
ja
dec
movsb
lods
scas
dec
es
fsubl
int3
ud1
pop
jnp
jae
arpl
lcall
pop
jp
jmp
adc
dec
gs
cmc
dec
in
ss
xchg
push
mov
dec
sbb
test
jecxz
xor
test
rcrl
pop
in
mov
daa
je
js
inc
jne
decb
adc
arpl
jmp
std
roll
outsl
clc
bswap
mov
gs
add
mov
add
es
decb
push
loope
in
mov
into
push
mov
ja
loop
fs
mov
and
sbb
fmuls
mov
in
and
mov
rcrb
insl
jnp
shll
fisubrs
pop
sbb
sub
sti
stc
push
insl
daa
in
cmpsl
ss
inc
inc
data16
adc
sbb
xor
rcl
cmp
cld
xchg
int3
or
mov
repnz
cmpsl
adc
rclb
das
out
add
mov
cmp
clc
les
stos
out
js
mov
test
cmp
push
aaa
mov
in
sbb
jg
daa
popa
and
inc
loop
das
popf
mov
movl
mov
push
js
outsl
ret
das
mov
push
xchg
pop
push
sub
insl
push
dec
adc
add
mov
xor
das
pop
pop
mov
insl
ds
repz
pop
lods
push
jmp
pusha
and
fsubrs
mov
in
insb
mov
rorl
pop
fldcw
push
filds
int
jns
xor
imul
sahf
sub
dec
dec
mov
dec
insb
jmp
and
js
mov
push
pop
test
lahf
push
dec
fistl
jae
lods
xchg
jmp
mov
mov
dec
mov
enter
pop
jle
adc
jle
rclb
inc
mov
dec
push
ja
pop
pusha
cs
je
out
or
cwtl
cmp
div
pusha
adc
sahf
xlat
dec
mov
inc
xor
pushf
pop
fadds
xchg
pop
push
mov
sti
mov
shrb
loopne
push
in
notl
into
js
cltd
mov
stc
testb
mov
cmp
rcrb
lret
mov
mov
ljmp
pop
mov
cmc
inc
in
or
scas
imul
jb
inc
cmp
jl
xchg
add
cwtl
in
scas
push
lahf
push
xor
fnstsw
unpcklps
jno
or
addb
mov
sub
inc
push
sbb
fmuls
cmc
xor
dec
jmp
test
mov
adc
dec
push
xlat
mov
jge
adc
cmp
out
push
jb
popa
ret
das
cltd
inc
pushl
cmpsl
jbe
mov
dec
lcall
pusha
sub
es
sti
pop
jno
cs
iret
out
iret
cmpb
push
add
mov
ja
fsubp
mov
faddl
test
imul
js
fldcw
out
loope
adc
pop
ljmp
or
inc
sub
insb
out
lea
mov
push
in
mov
jg
rcr
mov
ljmp
lcall
gs
daa
and
fdiv
roll
jmp
sar
das
push
add
dec
jae
dec
leave
sar
xchg
emms
enter
xchg
push
mov
cmp
jno
push
sub
ror
jne
sbb
cvtdq2ps
sub
stc
add
les
sarb
pop
mov
push
sub
mov
leave
add
dec
xor
cld
cld
cli
dec
or
repnz
icebp
mov
adc
es
pop
mov
xchg
inc
fimull
mov
sahf
pop
pop
xor
add
pop
jne
and
or
into
push
sub
push
es
outsl
les
adc
movsb
adc
mov
cmc
jae
les
add
repnz
fwait
mov
push
sub
cs
xchg
pusha
inc
jnp
adc
popf
faddl
push
shl
pop
ret
pushf
dec
push
jo
insl
aad
popa
mov
xchg
jno
ret
xchg
repnz
fdivrp
cmpsb
and
cmp
dec
loopne
mov
mov
jo
loop
jno
movsl
lahf
fnsave
rclb
filds
fwait
cmp
cli
push
mov
fs
pushf
js
inc
leave
cmp
mov
call
xlat
xchg
jecxz
mov
adc
jp
aas
add
insb
push
fcmovbe
push
push
out
sahf
lcall
test
addr16
sbb
rol
rcr
and
xchg
sub
in
lock
pop
andl
pusha
sbbb
xor
mov
stos
cltd
test
jl
or
jb
rorl
adc
jnp
cmpl
pop
js
mov
ret
adcl
hlt
aaa
push
mov
lcall
das
imul
repnz
bnd
xor
int
push
mov
int3
mov
imul
push
fucomp
je
pop
push
mov
js
std
fldcw
call
or
inc
call
or
xor
jmp
add
inc
paddsw
lods
inc
sub
and
mov
xor
les
inc
inc
jnp
scas
aad
das
sbb
loopne
ds
fistps
stos
jmp
pop
dec
inc
or
lock
sub
adc
leave
dec
clc
cmpsl
push
jb
inc
icebp
fistpll
or
adc
pop
fcomps
testl
and
jmp
dec
adc
adc
inc
and
lret
pop
scas
dec
enter
lret
xor
push
xor
std
jl
inc
and
mov
xchg
jmp
mov
int
gs
sbb
scas
add
cmp
addl
aas
push
sub
int
dec
sbb
rclb
sbb
xchg
test
out
mov
and
aas
pop
mov
std
and
ss
pop
jns
mov
jle
mov
imul
popa
jmp
push
arpl
jns
mov
pop
ss
xor
scas
pusha
aaa
ss
mov
ss
loop
or
lret
test
pushf
or
repnz
adc
xchg
mov
lea
mov
loope
fucomp
and
dec
imul
pop
mov
mov
sub
and
test
add
sbb
gs
cmpsl
push
xchg
sti
int3
push
sub
mov
add
add
adc
std
adcb
cli
push
pop
sbb
push
cmp
in
ds
sbb
xchg
push
cwtl
and
mov
push
into
mov
mov
xchg
imul
fistps
orb
flds
jge
aam
cmpsl
jnp
dec
inc
enter
stos
cmp
mov
push
fmull
data16
mov
orl
das
ficoms
xor
clc
test
lea
push
repnz
or
jne
xchg
cmc
ffreep
xor
xchg
dec
iret
fstps
xchg
out
int
lock
adcb
mov
lods
xor
pop
test
push
fs
cli
mov
jl
cltd
adc
dec
mov
lahf
dec
add
icebp
push
and
pop
add
add
loop
sti
adc
lods
adc
scas
lds
out
lcall
jno
cmp
pusha
sub
aaa
sbb
ds
mov
inc
lods
mov
cmpsb
mov
out
pop
call
push
mov
mov
pop
fldl2t
ret
xchg
pop
stos
nop
cmp
cs
adc
xchg
ljmp
pushf
and
pop
lret
mov
cmp
repz
or
stc
repz
xchg
push
int
and
pop
out
test
stos
jl
xchg
test
xor
arpl
push
add
bound
xor
arpl
inc
push
in
fcomps
cmc
sub
stc
mov
cli
loope
hlt
and
js
or
ljmp
xchg
add
mov
push
xchg
std
outsl
cmpsb
dec
test
pop
xchg
rcrl
ljmp
jge
xor
or
xchg
mov
fcomp
outsb
sbbl
mov
adc
imul
in
cmp
ds
sarb
popf
pop
xchg
pop
push
adc
jbe
dec
cmpsb
cmp
jecxz
shl
mov
ret
jmp
jmp
cmpsl
pop
lock
je
jb
ret
sub
fsubl
dec
dec
inc
xor
arpl
cli
test
dec
add
xor
rcrl
fistpl
sbb
mov
push
lret
ja
jno
inc
popa
sub
and
lret
inc
or
push
jg
movsb
lods
adc
jge
or
ja
jae
leave
lock
xchg
push
xchg
mov
int3
sbb
jl
sbbl
in
aam
xor
gs
mov
arpl
push
sbb
pop
imul
aam
cltd
pop
loope
jnp
mov
xchg
xor
cmp
mov
scas
cmp
scas
sbb
pop
xchg
add
ss
ret
ja
jae
jg
mov
sub
pop
adc
jnp
js
adc
shll
sbb
cmp
and
addr16
adc
call
jge
mov
add
popa
xor
xor
adc
int3
stos
jecxz
mov
outsb
sub
fildl
xchg
push
adc
xchg
fdivrs
insl
jnp
xorb
hlt
lods
scas
ja
movsb
jb
daa
cmp
mov
aad
stos
fsubr
je
pop
xchg
pop
pop
adc
fwait
int3
and
sbb
in
lea
and
ljmp
mov
jecxz
in
and
sahf
out
mov
jae
lods
clc
ret
daa
adcb
mov
in
jl
adc
daa
xchg
stos
aad
int
sbb
mov
mov
jb
adc
mov
or
notb
pop
mov
dec
test
xchg
icebp
mov
sbb
div
inc
ds
insb
sbb
notl
addl
je
in
sub
mov
pop
push
pop
mull
imul
sahf
mov
jp
or
jle
inc
lahf
mov
out
mov
and
mov
enter
ret
and
or
mov
or
pop
call
dec
movsl
xor
add
scas
jmp
inc
inc
lods
push
sbb
push
cmp
cmp
cmpsl
adc
xlat
add
clc
mov
adc
cmc
int
mov
cmp
fsubrl
shrb
mov
push
dec
pop
cmc
scas
jp
insb
cltd
lea
ret
pop
mov
jp
notl
clc
cmp
lret
dec
imul
mov
or
xor
add
test
xchg
fldenv
or
cmp
pop
das
sahf
sub
popa
mov
cmp
mov
xchg
xchg
and
adc
mov
pop
pop
imul
add
incb
jp
dec
sub
mov
push
sub
jle
cmp
or
cmp
sbb
mov
jae
xchg
pop
iret
adc
outsl
movsb
les
xor
add
xchg
rolb
ja
mov
jne
dec
jecxz
sub
in
add
cld
adc
fiaddl
sbb
fsubs
jmp
ja
imul
push
les
loopne
pxor
jmp
lret
lods
and
dec
push
les
push
outsl
sub
das
sbb
imul
popf
pop
aas
repnz
cmc
cmp
jge
rorl
lds
add
push
loopne
jne
in
inc
push
push
jge
pop
xchg
and
pop
pop
cmp
push
cmp
lret
cmp
mov
mov
inc
push
divl
cmp
and
pushf
push
addr16
js
out
cmc
dec
push
mov
mov
loop
imul
lock
mov
or
xchg
lds
xchg
add
sbb
mov
cs
mov
je
push
sbb
ja
mov
bound
jge
mov
out
inc
push
dec
dec
cld
dec
xchg
ja
jno
jnp
pop
js
mov
rolb
dec
movsb
cmpsl
mov
sbb
or
push
mov
sbb
in
pushf
mov
or
dec
nop
js
leave
push
add
xchg
fs
or
adc
pop
inc
jecxz
xor
and
xchg
sub
ss
jl
repnz
in
addr16
add
jg
add
insb
leave
adc
das
cwtl
lea
out
push
insb
leave
sarb
pop
lea
shlb
lds
sbb
icebp
xchg
mov
fwait
cvtps2pd
out
xchg
movsb
orl
or
or
mov
mov
cmp
out
jb
das
rcrb
xchg
pop
cs
aaa
ljmp
mov
sub
sbb
bound
push
mov
test
imul
mov
mov
or
or
cmc
lret
inc
adc
mov
popa
or
enter
mov
outsb
xor
stos
daa
cld
addr16
xor
shrb
cwtl
sbb
nop
or
inc
out
xlat
rcll
movsl
pusha
dec
cltd
and
les
add
xchg
mov
mov
dec
stos
mov
pushf
adcl
enter
mov
mov
dec
push
adc
iret
jne
ds
enter
addl
jmp
inc
stos
aas
mov
and
lods
mov
mov
xor
in
in
add
cwtl
add
outsl
out
cmc
mov
nop
or
mov
movsl
pop
add
into
scas
fistpll
jmp
ror
cmpsb
mov
push
ret
dec
push
sbb
movsb
fcom
dec
ja
and
in
pusha
mov
mov
shr
arpl
test
inc
sub
movnti
sbb
clc
adc
popf
arpl
lcall
fcomps
out
in
jecxz
sub
pop
shlb
cmpsl
sub
inc
cmp
in
icebp
dec
sbb
aad
stc
leave
fstpl
push
mov
pop
sbb
ljmp
into
enter
xchg
xchg
inc
xorl
cmpsb
sub
int
push
stos
out
or
push
jge
dec
adc
mov
cli
inc
dec
or
stos
jnp
loopne
mov
in
sub
jg
scas
bound
sti
or
mov
enter
xlat
and
cmp
movsb
sub
add
rorl
adc
sbb
cmc
test
movsb
into
fisubl
mov
loope
xor
sub
arpl
clc
jmp
mov
cmp
pop
mov
jae
negb
mov
inc
mov
mov
cli
nop
repz
in
add
sahf
leave
push
data16
inc
imul
push
aam
push
in
jmp
jmp
fisubrs
cmp
cmp
xchg
ret
fnstenv
aad
jnp
sbb
std
mov
xchg
jmp
ret
sbb
jo
loopne
cli
add
jle
push
rolb
lcall
fwait
leave
fstpt
push
out
add
mov
pop
orl
jno
ja
mov
iret
iret
push
lahf
clc
out
pop
rcrl
mov
lahf
fmul
popf
mov
push
mov
mov
push
sub
lods
data16
adc
cs
dec
inc
push
mov
stos
insl
mov
xchg
adc
jmp
loop
nop
pop
pop
add
cwtl
cli
pop
jns
jbe
xchg
ficomps
shrb
shld
pop
sahf
push
mov
inc
lea
jae
test
mov
stos
xchg
cmp
ret
xor
pop
push
mov
repz
loope
mov
loop
lret
daa
mov
or
pop
std
sub
xor
push
push
add
lret
repnz
gs
into
loop
push
pop
pushf
sbb
gs
or
in
inc
jno
push
clc
shll
ret
inc
int3
or
sbb
sub
cmp
and
xchg
mov
fndisi(8087
mov
lds
out
xor
add
xchg
test
mov
push
loopne
loopne
aam
mov
sti
fiadds
repz
loope
inc
mov
lahf
call
cmc
daa
ret
cmpsb
ds
icebp
cs
es
pushf
xor
xor
pop
sub
and
aam
sbb
dec
out
vrcpss
test
ljmp
push
daa
jb
pop
iret
fsub
frstor
neg
arpl
sbb
inc
test
mov
adc
cltd
ljmp
scas
jo
add
lahf
inc
push
shr
jmp
adc
cmp
sub
fmuls
push
and
fiadds
push
sbb
ror
daa
cmpsb
das
int
sub
mov
adc
add
jp
push
sub
outsb
and
rolb
fldl
sub
js
push
enter
sbbb
cmp
jp
sub
mov
insl
lcall
push
shlb
push
jmp
mov
jge
inc
scas
add
je
cmp
add
xchg
or
mov
mov
inc
or
shl
mov
mov
cli
leave
fmull
sub
gs
cmp
xchg
iret
stc
mov
insb
jmp
and
ljmp
xchg
jne
rorb
pop
int
sub
jmp
cmp
add
jae
popf
dec
mov
inc
xor
and
cli
adc
pop
aam
add
lods
loop
mov
adc
fcmovne
fdivrl
or
add
test
cmpsl
pop
in
fisubrl
scas
inc
or
fsubp
fimull
in
add
in
jecxz
stos
es
sarl
dec
mov
shll
out
pushf
mov
and
lcall
push
test
fisttpl
daa
repnz
out
cmp
push
or
mov
pop
subl
stos
popf
leave
scas
les
loope
flds
adc
jne
aam
mov
popf
loopne
mov
adc
lods
xlat
adcb
dec
jns
push
mov
xchg
cli
jmp
xor
or
mov
adc
jp
xor
jl
pop
xchg
data16
sub
gs
xor
out
daa
movsb
hlt
cld
fdivrs
add
push
in
mov
adc
popf
das
fldl2e
setl
shll
adc
rorl
pop
and
lods
bound
inc
bound
ljmp
aam
and
lods
lods
out
in
hlt
scas
jae
fwait
rorb
sbb
notb
enter
pop
xchg
aas
dec
hlt
data16
lods
popf
adc
pop
orb
cmc
or
cmp
push
aaa
cmp
inc
lcall
mov
insl
xor
sbb
mov
sub
adc
aaa
rcl
xchg
sti
add
adc
pop
fmull
arpl
mov
pop
inc
push
inc
jl
xor
loop
fistpll
adc
pushf
xor
data16
jmp
bound
arpl
or
addr16
int3
jmp
icebp
cltd
and
mov
out
hlt
push
and
lock
sub
scas
or
leave
dec
std
sbb
xor
inc
pusha
pop
mov
fisubrl
iret
jge
xchg
mov
out
loop
mov
ljmp
test
push
ret
shrb
sarl
and
subb
sbbl
push
pop
sub
outsb
gs
pop
lods
test
jge
xor
cwtl
and
aas
mov
jmp
rcll
push
fcompl
rorb
sti
dec
in
xor
paddsb
dec
fcomps
mov
or
int3
mov
out
mov
jne
adc
add
mov
cwtl
dec
cmp
push
das
outsl
and
sbb
push
lock
aam
fisubrl
or
jp
enter
flds
inc
push
push
xchg
movsb
xor
mov
or
divl
test
movsl
sbb
xchg
mov
bound
test
adc
dec
or
rorb
mov
fcomps
mov
add
push
mov
scas
inc
mov
fdivp
mov
sbb
fidivrs
pusha
insl
stos
clc
pushf
addr16
push
bound
pop
push
pop
pop
es
bsr
les
aad
adc
mov
sahf
mov
inc
fcomi
and
sub
xchg
cmovns
in
push
jne
xchg
leave
aad
popf
add
pushf
xchg
dec
push
pop
mov
push
xchg
ljmp
call
pop
or
sub
pop
out
sub
inc
pop
sbb
or
ds
inc
mov
add
clc
nop
sub
shrl
stc
pushf
pop
dec
mov
sahf
inc
xchg
bound
and
int3
dec
xlat
or
jne
test
lahf
or
xchg
jge
mov
jg
sahf
or
push
in
int
mov
cmp
pop
ss
mov
daa
leave
or
daa
arpl
push
sti
xchg
lods
icebp
or
fmul
iret
dec
push
clc
cld
mov
jo
inc
mov
icebp
push
inc
and
sub
and
pop
shl
mov
mov
xchg
jbe
push
inc
xor
fs
mull
inc
inc
jae
jo
push
ror
push
notl
add
add
xor
pop
jne
adc
cld
mov
add
xchg
int
mov
data16
je
mov
repz
repnz
xchg
aaa
add
xchg
mov
push
nop
xlat
jns
movb
in
and
push
jno
xchg
and
xchg
cltd
jae
das
inc
push
cmp
cwtl
cmp
out
sbbb
lods
mov
push
shlb
test
inc
test
pop
es
xlat
inc
xor
pop
cltd
mov
jle
jnp
and
inc
dec
jmp
leave
pop
jno
cltd
imul
les
push
mov
sub
dec
push
andb
mov
aas
push
loopne
jp
lret
iret
jb
xchg
outsb
pop
xor
mov
fldenv
jns
pop
fstpl
mov
xor
cmp
scas
add
rolb
hlt
cmp
js
idiv
xor
shr
and
cli
xor
pop
sbb
shrl
clc
mov
scas
scas
push
jnp
popa
mov
in
pop
mov
mov
or
jns
inc
cmp
push
jbe
call
ljmp
mov
push
xor
adc
rcr
in
mov
mov
jb
scas
xchg
mov
xchg
outsl
xor
mov
testb
xlat
or
cmp
dec
in
sbb
inc
inc
aas
jns
mov
or
enter
adc
subl
push
dec
out
sbbl
les
mov
cmp
ss
bound
scas
test
fcompl
push
pop
jmp
dec
mov
fisttps
jne
test
sbb
sti
and
inc
pop
jl
or
leave
ret
popa
arpl
movsl
mov
pop
jmp
mov
dec
iret
jno
lret
adc
scas
add
and
sub
test
stos
sarb
xor
dec
mov
cli
mov
jecxz
je
dec
lahf
mov
cmp
mov
pusha
or
pop
fwait
jg
mov
pop
enter
inc
dec
xchg
cmc
and
lock
xlat
push
sahf
out
pushf
mov
stos
pop
jmp
adc
cltd
stos
mov
in
repz
xor
sbb
cmp
add
out
ffreep
jge
mov
rclb
pop
dec
jne
jno
icebp
popa
inc
aad
cmp
stos
icebp
push
push
out
push
mov
js
cmpsl
or
scas
mov
pop
xchg
add
mov
xor
movsb
ret
add
mov
pusha
test
ja
fnstcw
inc
push
push
add
xchg
sar
push
xchg
add
lret
xchg
adc
test
fsubl
jmp
lods
sbbb
sub
push
pusha
stos
orb
rcrl
jno
and
aam
out
mov
fsub
xchg
in
fbld
lock
cmpsl
lret
and
jbe
daa
sbbb
push
xchg
leave
push
addr16
mov
js
in
xchg
inc
adc
imul
and
mov
cmpl
xchg
dec
inc
mulb
scas
fs
mov
gs
lea
cmp
inc
cmp
lock
fs
outsl
lods
push
and
inc
into
jle
jl
out
or
notb
jecxz
popf
inc
mov
adc
pop
clc
mov
das
lahf
movsl
xor
call
cli
jo
seta
sbb
dec
sbb
dec
int
add
loopne
aad
jp
in
insb
sbb
ret
dec
das
jb
and
fadd
les
fnstsw
sahf
and
pop
stos
push
stc
das
xor
ds
inc
jns
stos
push
shll
rcrb
rclb
dec
aam
push
out
sbb
pop
fnstcw
aam
add
popa
adc
push
mov
mov
pop
cmp
les
lahf
sbb
das
pop
lret
inc
inc
mov
pop
dec
test
jp
dec
sbb
clc
push
inc
xchg
dec
sbb
inc
iret
mov
push
out
cmp
aam
mov
jne
mov
inc
dec
cmp
lret
sbb
daa
dec
lcall
cmp
getsec
push
lods
xlat
mov
mov
ss
jne
ds
sbb
std
adcl
pop
ret
out
mov
addr16
or
sbb
push
notb
cmpsl
loop
jmp
pop
lods
push
jg
push
mov
dec
mov
leave
std
mov
mov
add
movsl
mov
mov
les
stos
pop
movsb
test
mov
mov
push
jmp
icebp
add
sub
sbb
cmp
loop
cmpl
lret
mov
rcll
enter
sub
scas
mov
je
push
xor
in
adc
ljmp
insb
popa
sbb
call
inc
add
ret
push
movl
cli
repz
into
xchg
cmp
shrl
inc
adc
add
pop
jg
mov
or
fnsave
push
push
repnz
int
xchg
jbe
pop
fists
mov
fists
sbb
jne
test
pushf
push
push
mov
inc
fcompl
mov
cmc
inc
lcall
das
push
pop
lea
mov
daa
je
dec
jbe
mov
dec
fildl
jp
fucomp
pop
mov
test
clc
dec
add
add
fs
xchg
js
mov
mov
add
ret
test
lds
ror
jo
imul
loopne
inc
or
mov
cmp
xor
rclb
into
cmc
adc
adc
sub
ret
out
int3
test
jl
out
pusha
cld
sbb
cltd
movsb
mov
nop
inc
addr16
fldl
mov
iret
adc
add
movsl
jnp
cmpsb
and
mov
mov
jmp
or
adc
and
sarl
adc
mov
imul
cmc
xor
addb
mov
mov
jne
lret
loope
push
fwait
inc
adc
movsb
imul
ficoml
mov
mov
fistl
cmp
aas
clc
imul
std
imul
lret
and
mov
lea
sub
out
leave
xchg
movsl
sbb
ds
es
mov
jo
les
xchg
or
shlb
mov
imulb
sub
call
or
into
dec
inc
cmp
mov
outsb
cli
pushf
inc
stc
cmp
sub
mov
xchg
inc
cli
in
push
adc
es
cs
xor
mov
scas
mov
popa
pop
aas
xchg
lods
sub
jg
sub
sub
lds
mov
inc
js
pop
aad
jl
xchg
pusha
cmp
ficoml
jl
and
mov
cmpb
xchg
xchg
fistpl
sbb
jmp
xchg
es
add
scas
les
mov
xchg
jge
jae
ss
sar
stos
enter
xchg
mov
addl
gs
sbb
adc
mov
or
push
xchg
inc
push
sbb
addr16
mov
jne
pop
fstpt
mov
add
xor
xlat
in
mov
cltd
xchg
pop
lea
pop
xchg
adc
mov
mov
jb
adcb
and
movsl
gs
insb
inc
adc
adc
add
sub
ljmp
xor
in
inc
dec
adc
fwait
adc
jl
and
adc
lret
in
and
or
subb
push
mov
mov
mov
xor
jb
into
in
inc
sahf
xchg
int3
fistpll
xchg
push
orl
and
mov
cmp
and
jg
xchg
push
dec
xrelease
aam
insb
lea
outsl
ljmp
push
pushl
loopne
cld
movsb
jp
dec
sbb
mov
cs
mov
mov
xchg
sbb
xchg
dec
outsb
push
fcoml
enter
pop
and
cwtl
mov
les
repnz
fcomp
jecxz
cld
pop
aas
bound
inc
mov
inc
jl
push
es
je
int
jmp
stos
mov
jle
pop
bound
mov
clc
fistpl
ficomps
notl
sbb
push
ud0
int3
jl
es
gs
fisttps
mov
jnp
scas
out
shll
sub
es
jnp
push
add
adc
enter
pop
dec
gs
xor
rcrb
stos
push
mov
js
cmp
popf
pop
or
scas
ror
and
iret
cmp
mov
xchg
mov
cmc
mov
mov
sub
int3
mov
mov
dec
and
push
lea
push
loop
lsl
loop
add
mov
bound
xlat
ret
add
in
push
pop
mov
sub
dec
sub
mov
jmp
inc
jp
or
int3
adc
sbb
fwait
lods
mov
and
addr16
xchg
and
arpl
rcr
ret
push
movsl
testb
rorl
cltd
jno
sbb
hlt
fcmovnb
inc
scas
cli
into
sbb
lods
sti
xchg
pushf
and
add
outsl
outsb
xchg
jmp
mov
lds
call
fdivl
xchg
lods
lret
out
add
cltd
ljmpw
loop
add
test
and
lds
sbb
cmc
adc
sbb
push
jl
addb
mov
or
lock
int3
stos
xor
mov
xchg
stc
fmul
jle
dec
push
xor
cmpsb
sub
push
rclb
les
int3
pop
push
shll
arpl
xchg
push
mov
inc
popa
shrl
cs
mov
fisubl
and
adc
insb
cwtl
pop
outsl
sub
aam
adc
mov
push
xchg
adc
int3
cmp
mov
push
sub
fidivl
adc
fs
and
dec
data16
sub
lods
jp
xorb
gs
clc
mov
outsl
xor
mov
sahf
sti
jge
mov
push
jecxz
pop
mov
mov
sbb
std
cwtl
jae
and
xor
rcll
and
out
fs
xor
and
inc
loop
add
xchg
and
stos
pop
cmpsb
dec
stos
ljmp
loope
push
icebp
pop
mov
mov
out
movzwl
push
test
mov
mov
or
movsb
cmp
cmc
cmc
xor
xlat
es
mov
xchg
popf
pop
pop
mov
cmc
mov
fadd
pop
add
fnsave
mov
iret
sbb
pop
jp
imul
sbb
or
std
sbb
xor
xchg
xlat
mov
sub
div
adc
int3
mov
mov
cld
lcall
cmp
push
leave
adcl
xor
xlat
bound
xchg
xchg
pop
xchg
testb
sbbl
out
dec
and
imul
cmp
sbb
lret
pop
push
xor
mov
xchg
std
xor
or
cmpsl
mov
adc
pop
sbb
or
mov
cwtl
dec
sbb
stc
pop
pop
sub
or
cli
and
jns
push
pop
shlb
lods
loop
popf
daa
add
bound
cmp
sbb
push
lds
mov
xor
adc
lret
pop
ds
fcmovnbe
xor
cmp
fdivs
mov
inc
mov
jae
add
dec
add
cmc
xchg
inc
add
mov
rcr
pop
lahf
cltd
std
jae
jo
mov
imul
fs
xchg
fidivl
cld
ds
int3
mov
sub
call
sbb
jmp
push
mov
hlt
inc
mov
das
jle
push
sub
shlb
mov
and
push
sarb
jecxz
mov
ja
xchg
int
jg
subb
repz
inc
mov
int
pop
mov
scas
mov
and
push
and
lea
push
adc
jl
push
fstpl
push
dec
test
xchg
ja
and
cmc
jae
neg
andb
cmp
mov
xor
repnz
xor
push
inc
sbb
cmpsl
push
fistpl
addr16
sbb
fisubl
adc
pop
mov
jno
lcall
test
lret
pop
jecxz
mov
adc
icebp
pop
int3
adc
push
push
dec
sbb
dec
js
pop
mov
jb
xchg
iret
xchg
clc
cwtl
popa
jg
insb
shl
lret
pop
repz
lods
popa
adc
sbb
mov
test
mov
aam
decl
fucomi
jg
insb
daa
dec
and
rcl
iret
sub
cmp
xor
popf
mov
cmp
pushf
cltd
cmpsb
xor
scas
push
mov
pop
xchg
fcompl
jp
lret
or
bound
xor
xchg
push
aaa
xor
movsl
std
inc
mov
vpsllq
and
shll
sub
xor
jp
popa
dec
push
sub
addr16
ret
xlat
cmp
adc
jae
mov
movsb
rorl
and
mov
inc
mov
cmpsb
or
mov
sbb
fidivrl
test
inc
and
aaa
shl
mov
lret
dec
in
cld
sbb
mov
inc
xchg
test
mov
hlt
sbb
shlb
lret
jno
push
lock
xchg
inc
fldcw
call
adc
call
jo
dec
push
jns
loop
dec
imul
cltd
or
jne
mov
adc
or
mov
sub
idivb
sbb
and
into
mov
add
pusha
pop
je,pt
aas
mov
dec
pop
pop
dec
js
into
mov
js
outsb
push
sbbb
dec
leave
adc
pop
mov
rcrl
dec
sub
aaa
or
mov
jo
sarl
cwtl
hlt
lods
ss
pextrw
and
out
mov
scas
or
jecxz
mov
ss
add
jecxz
arpl
dec
and
in
je
in
and
iret
adc
out
ret
out
stos
sti
call
mov
repnz
nop
mov
mov
fiaddl
gs
add
fs
and
jp
mov
and
imul
faddl
xchg
ja
fsubrl
out
into
ja
add
pop
and
gs
in
or
xlat
aad
jecxz
data16
or
aad
ss
adc
test
pop
jno
push
xchg
or
mov
out
dec
ds
jp
stos
cmp
rorl
stos
jl
jno
dec
mov
imul
jmp
dec
sahf
fisubs
mov
mov
ret
and
adc
cmp
test
mov
sbb
movsb
sbb
jb
push
lret
cld
clc
cmp
test
out
or
lds
test
retw
add
adc
out
cld
jecxz
inc
fdivl
mov
add
daa
cltd
add
add
test
jle
mov
insb
scas
inc
sbb
and
in
dec
addr16
xchg
lds
jnp
push
ss
mov
enter
imul
sbb
add
pop
jl
rorb
shr
daa
es
sahf
rclb
lcall
imul
loopne
cmp
hlt
and
adc
pop
movsl
popf
test
xchg
jl
cli
pop
call
cltd
enter
mov
in
mov
push
lea
pop
push
mov
cmp
pop
cmp
jo
scas
mov
leave
fs
lahf
dec
or
jo
push
sti
push
jb
cmp
push
cmp
fmuls
cmc
xchg
cli
fimuls
cmpsb
mov
xor
pushf
fsubrl
subl
stos
jae
or
sahf
es
test
mov
sub
sbb
sub
sbb
mov
dec
fisubl
and
mov
adc
mov
add
stos
das
lds
loope
sub
outsl
cmp
nop
mov
push
adc
out
cltd
jg
stos
sahf
xchg
xchg
jb
test
sub
and
xor
adc
adc
popf
and
or
sti
bswap
fistl
cld
cmp
dec
out
je
fcoml
jnp
dec
data16
or
sub
stos
lods
pop
aaa
movsl
fldenv
sbb
cmpsb
cmpps
fcoml
pop
int
mov
das
inc
jl
jmp
add
add
adc
in
lock
das
sbb
cs
adc
cmpsl
cmp
dec
out
push
nop
out
stos
push
jmp
xchg
xchg
push
stos
inc
lcall
dec
das
jne
dec
nop
cmpsl
dec
sahf
sti
pop
stos
mov
rcl
out
jp
ret
ja
jne
push
aas
sti
mov
repnz
push
dec
pop
push
aas
adcl
sub
stc
cmpsl
adc
fidivl
shlb
cmc
sub
push
aam
pop
das
jge
arpl
test
lret
stos
jecxz
imul
out
sbb
pop
ljmp
xchg
cmp
mov
cs
fs
aad
and
jbe
xor
fisttpll
hlt
jl
out
add
fisttpl
pop
stos
jle
fld
pop
in
xchg
loopne
out
fiaddl
cmp
push
scas
mov
pop
xor
test
lret
movsl
hlt
pop
mov
jl
testb
adc
jl
mov
sbb
add
in
enter
add
push
or
imulb
pop
aas
ss
xchg
dec
mov
sti
and
dec
int3
loop
sub
jo
les
sbb
adc
bnd
jae
and
jge
and
idivb
pop
das
adc
push
jae
xor
repz
xorl
jecxz
jg
lods
adc
sahf
mov
or
cmc
cwtl
cmpl
outsb
les
cwtl
or
cs
cmp
imul
into
push
cld
addr16
xor
pop
int3
jge
fmuls
popa
jae
rol
sub
dec
xor
insl
mov
pushf
loop
fists
cmp
push
and
or
in
push
or
hlt
rcl
push
rorl
cli
movsb
jae
xchg
int3
out
pop
mov
mov
int3
and
mov
jno
ja
or
fldl
sub
adc
and
dec
stos
inc
push
mov
mov
xchg
std
push
mov
add
add
jno
jb
test
es
movsb
push
xor
les
je
sub
repz
aad
hlt
rcl
in
push
aas
incb
pop
les
rorb
inc
ds
test
dec
jl
dec
call
jg
repz
xor
dec
pop
cmp
mov
mov
push
ss
inc
insl
enter
test
push
mov
pop
sub
adc
in
inc
mov
movsl
insb
mov
xchg
sub
leave
or
jno
push
imul
movsl
pop
or
push
jl
shll
adcl
adc
jp
mov
sbb
inc
xchg
shl
sub
cmp
cmpsl
mov
pop
jno
inc
mov
fisubl
jne
jns
xchg
fisubs
mov
cmp
hlt
pop
cmp
fucomip
push
inc
out
int3
lock
addr16
lcall
push
pop
cmp
int3
adc
xchg
sub
cs
dec
jne
push
mov
cmp
roll
or
sbb
rcll
add
add
out
jecxz
jl
rorb
cmp
movsb
outsb
loope
pop
xorb
ror
ja
not
mov
jae
mov
jbe
mov
adc
dec
mov
mov
out
aad
xchg
in
push
into
inc
inc
jnp
jl
cltd
in
mov
lahf
int3
loop
int3
sub
cmpsl
data16
inc
cmp
inc
push
sahf
sbb
mov
fsubl
jge
sti
js
and
inc
pop
je
cmp
push
inc
xchg
push
icebp
push
adc
push
in
or
mov
push
insb
je
in
jnp
jmp
fsubrl
addb
cmpsb
jne
cs
repnz
add
xchg
int3
add
mov
mov
fwait
out
cs
mov
inc
push
mov
fmull
fisubrl
jnp
fildl
sbb
pop
xor
mov
outsb
inc
imul
repnz
cmp
push
pop
sub
insb
adc
pop
mov
add
mov
std
ljmp
push
fisubs
sti
mov
inc
sbb
out
xchg
add
push
mov
lahf
bound
sbb
cmp
pushf
pop
cmpb
roll
test
scas
adc
inc
jmp
fildll
inc
out
push
and
jo
pop
cld
dec
cmovnp
cmp
cwtl
test
fwait
pop
cli
jnp
jle
adc
dec
cld
push
jge
iret
inc
fxch
fistpl
adc
stc
out
mov
jb
orb
dec
pushf
push
inc
xor
test
mov
inc
pop
cmpsb
lods
jmp
push
pop
pop
mov
xor
mov
movsb
jae
add
add
je
push
jle
lret
in
mov
fidivs
faddl
das
fildl
in
xor
sbb
inc
push
jns
or
repnz
shll
sbb
cld
push
xor
pushf
dec
mov
jl
rorb
pop
idivb
or
icebp
push
add
lds
movsl
cmp
jne
rorl
das
int
and
xchg
cld
sub
cmc
pop
cmp
and
in
mov
dec
push
pop
stos
lea
mov
sbb
mov
cmpl
sarl
sub
jmp
sbb
pop
xor
lods
jle
pushf
es
inc
sbb
daa
jl
je
popa
mov
nop
mov
repz
jns
push
xlat
lea
lea
mov
adc
cwtl
xchg
mov
add
call
shll
push
ficoms
push
in
xlat
mov
push
stos
pushf
pop
mov
imul
stos
jge
mov
call
cmp
xchg
fstpt
xchg
pop
or
notb
inc
in
fistps
pop
cld
mov
sub
outsl
pop
sub
lods
jnp
xor
sbb
jecxz
outsl
sub
loop
sahf
add
pusha
incl
inc
lds
mov
jne
clc
mov
jl
sbb
out
dec
mov
inc
push
jbe
push
mov
and
dec
movsl
sub
imul
or
inc
cmpsl
mov
imul
jge
and
xor
test
xor
lods
mov
inc
faddl
or
adc
mov
xchg
push
dec
in
push
add
mov
inc
stc
push
cli
movsl
sub
or
pusha
sbb
push
cli
mov
aas
or
xor
mov
rcll
inc
inc
inc
mov
insb
ja
mov
jge
data16
sub
in
xchg
inc
lret
clc
rcrb
and
ret
bound
nop
int3
mov
je
and
xchg
fwait
xchg
pushf
and
or
jne
test
aaa
lea
push
loop
push
pop
cli
mov
inc
dec
and
pop
dec
jo
movsb
insb
jno
mov
insl
shrl
push
xor
imul
mov
shll
addr16
shll
or
out
fwait
adc
jae
mov
push
leave
cld
cli
inc
push
mov
int
insl
andl
int
ds
stos
adc
rep
pop
inc
lret
mull
outsb
jle
add
aaa
insb
fsubrs
inc
dec
in
dec
sub
inc
int
add
sbb
push
pop
std
scas
ja
mov
add
test
orl
adc
fisubrl
lcall
fmull
sbb
xchg
test
insl
inc
mov
lds
ljmp
xchg
push
or
inc
popf
xchg
or
cld
mov
arpl
mov
out
sub
je
cmp
aad
push
cmc
loopne
mov
outsl
cmp
jecxz
in
pop
mov
mov
repz
sbb
add
xchg
cmp
test
or
xchg
pop
les
mov
mov
ja
jno,pn
and
pop
sub
pop
std
in
es
andb
rorb
inc
dec
lret
je
test
enter
adc
xor
lret
mov
mov
sbbb
push
pop
scas
imul
cmpsl
cmp
sahf
test
rcrl
repnz
rcll
stos
cwtl
sahf
jmp
in
call
scas
inc
out
mov
and
pop
lea
out
stos
push
dec
sahf
out
int
xor
jbe
push
in
inc
dec
push
repnz
sbb
inc
out
inc
dec
sbb
push
cld
xchg
sbb
xor
nop
jbe
fadd
lret
adc
movsb
xchg
outsb
jg
mov
inc
in
dec
cmp
sub
rcrl
addps
incb
sbb
cmp
out
les
bound
das
xchg
jnp
daa
lret
movsb
pusha
popa
and
aad
xchg
jge
fldz
js
xchg
clc
ret
xor
flds
sti
xchg
mov
inc
rclb
lds
mov
jns
aam
or
addr16
popf
and
lods
add
sbb
or
mov
bound
push
cmc
push
ss
adc
xchg
lcall
add
enter
icebp
insb
sub
jnp
xchg
pop
adc
push
das
dec
popf
push
sbb
fcomps
cs
fnstenv
push
mov
and
xorl
mov
dec
xchg
xlat
cmp
scas
pop
jno
iret
je
mov
iret
test
cltd
mov
xchg
icebp
aaa
out
pop
xor
jo
jmp
jp
inc
xor
sarb
shr
mov
int
xor
mov
cld
mov
push
xor
adc
push
or
ljmp
jle
ja
inc
sub
in
sbb
gs
imul
dec
push
mov
cmpsl
out
mov
in
stos
lcall
pop
fisttpl
mov
sti
sbb
xchg
xor
js
xor
rcrl
sub
in
lds
and
fisubrl
add
ljmp
pop
loop
sti
lea
es
outsb
cmp
xchg
ss
stos
and
pop
dec
adc
pushf
movsl
rclb
insl
xor
out
fwait
push
hlt
scas
sbb
test
je
andb
push
cmp
enter
sbb
in
ss
xchg
test
pop
out
mov
ds
sub
movsb
xor
mov
lds
lods
subb
or
lcall
and
mov
or
add
xor
dec
mov
pop
adc
xchg
xor
dec
mov
into
in
jns
cmpsl
lret
or
add
fwait
sbb
bound
cmp
add
sub
fimuls
jmp
add
mov
lcall
popa
mov
cmpsb
bswap
dec
add
sub
cli
mov
test
mov
xor
shlb
fisubl
bound
stos
fadd
icebp
push
popa
mov
add
add
xchg
cmp
movsb
mov
sbb
add
pop
mov
shll
sbb
shl
ljmp
inc
pop
aaa
mov
pop
or
lcall
mov
inc
jg
cmp
aad
testb
mov
jle
inc
inc
dec
movsb
int3
add
sbb
xchg
clc
dec
dec
mull
in
mov
add
icebp
cmp
and
push
das
sbb
dec
stos
sbb
je
bound
das
aaa
fcmovbe
js
lret
push
mov
or
xchg
push
sbb
xor
int3
sti
jne
push
scas
mov
mov
ret
jmp
inc
loop
dec
andl
fxch
pop
mov
cmp
out
adc
or
je
adc
add
stc
mov
fnstcw
in
shrl
mov
movsl
adc
xor
test
les
inc
scas
xchg
xchg
add
mov
rcl
stos
push
pop
enter
inc
or
insb
shr
out
cmc
and
in
pusha
or
lods
nop
lret
mov
inc
push
sbb
cmpsl
dec
pop
inc
lea
aad
mov
sbb
lahf
fcmovbe
push
ficoms
ja
ja
sbbl
sarb
ja
add
push
jle
aam
dec
add
pop
push
jmp
and
or
std
jne
and
add
daa
mov
mov
mov
adc
dec
cmp
pop
in
cmpsl
fnsave
add
mov
sbb
or
paddsb
icebp
or
js
gs
mov
mov
sub
mov
xor
mov
dec
jp
outsb
xchg
popf
hlt
or
jae
pop
jbe,pn
mov
jecxz
inc
push
cmp
stos
rcl
arpl
out
sbb
subl
movsb
icebp
dec
or
ljmp
test
adc
fisubs
cmpsl
jne
sub
divl
inc
ljmp
leave
inc
dec
mov
out
mov
adc
es
jmp
add
or
gs
or
dec
xchg
xor
mov
mov
mov
add
add
cmp
lahf
hlt
adc
and
pop
imul
mov
cmc
jp
dec
push
jp
gs
xor
aam
xchg
add
pop
out
fdivrs
push
pcmpgtd
imul
mov
jbe
mov
push
je
lods
add
aam
fidivrl
mov
cmp
leave
push
sbb
fstpt
mov
les
mov
adc
sub
xor
aad
notl
cmpb
mov
mov
push
dec
xchg
mov
stos
adc
sub
mov
data16
mov
xor
notb
movsb
push
imul
and
cmp
jmp
adc
xor
push
pop
or
rcr
ret
test
mov
and
loop
push
push
cs
mov
fsubl
stos
adc
or
cmp
and
insl
je
dec
xor
xchg
enter
scas
fsts
or
daa
push
les
daa
mov
fisubs
test
not
lds
adc
stos
fbstp
or
or
in
lret
div
subl
xor
inc
mov
add
loopne
sti
test
mov
notl
jno
add
or
add
loop
mov
in
hlt
jbe
shrb
fwait
shll
aad
push
movsb
nop
pushf
loope
test
into
lret
cmp
shrb
cmc
xchg
cmp
jne
mov
jbe
ficoml
add
sti
mov
xor
in
xchg
pop
xchg
xchg
out
adcb
or
and
jo
mov
pop
stos
lods
lods
mov
mov
into
insb
cmp
and
sbb
cltd
lahf
enter
jg
push
dec
rcrl
or
loop
call
js
mov
xor
inc
cli
adc
stc
rcrl
das
popa
inc
les
inc
bound
push
call
lret
mov
pop
push
cmp
mov
sbbl
in
mov
pushl
imulb
add
rcll
xor
ds
pop
xlat
xor
lret
mov
loop
sahf
jl
dec
in
scas
lahf
or
xor
jne
push
inc
fnstcw
in
cmp
pop
incb
cltd
push
jmp
jp
push
dec
fnsave
je
dec
clc
hlt
int
das
shlb
mov
push
ret
daa
ja
jl
jbe
push
fldenv
inc
mov
jle
add
fadds
push
icebp
arpl
outsb
or
and
daa
dec
push
sbb
push
sub
mov
fistpl
inc
xor
push
sbb
pusha
les
mov
stos
pop
inc
xor
xor
out
fisttpll
in
xor
push
jecxz
test
sbb
mov
imul
sarb
xlat
add
or
leave
add
or
xorl
sub
in
pop
jbe
in
out
cmpsb
shll
cmp
jne
pusha
addr16
gs
jecxz
mov
xchg
cltd
shl
xor
or
mov
jp
icebp
das
ror
insl
sar
jmp
rcl
and
dec
pop
stos
test
mov
lret
add
add
mov
stc
pop
pop
or
mov
xchg
loop
out
ja
movsb
test
inc
std
leave
cmp
fistl
dec
icebp
jo
cmpsb
adc
jg
flds
push
sar
xchg
inc
ret
inc
xchg
add
mov
pusha
fisttpl
cmpb
mov
call
mov
daa
or
cmpsb
nop
adc
xchg
jbe
int3
and
insb
mov
movsl
aaa
mov
lcall
faddp
sbb
mov
loopne
je
out
das
fsubp
xlat
inc
pop
iret
push
dec
testl
lcall
mov
arpl
cld
mov
aad
data16
incl
imul
sub
pop
mov
nop
cmp
in
jmp
std
or
adc
push
xchg
ret
xor
int3
mov
jnp
movsb
sub
xchg
pop
mov
and
mov
dec
mov
cmpb
sbb
loop
cs
mov
add
dec
fwait
jmp
pop
ret
shlb
mov
scas
les
adc
mov
pop
test
sub
fstps
push
pop
mov
inc
or
ss
rcrl
xor
inc
jl
push
mov
rcll
push
mov
mov
mov
mov
ret
push
cli
or
imul
das
inc
test
push
sub
jle
dec
add
xlat
inc
insb
pushf
push
inc
out
dec
scas
daa
jns
sub
xchg
add
jno
jb
clc
sbb
ret
jecxz
pop
daa
adc
push
push
rorb
jg
sbb
sub
push
je
mov
shll
cmp
cmp
push
mov
sub
rol
out
test
adc
mulb
shll
adc
fimuls
ljmp
xchg
rorl
lods
mov
jle
mov
aaa
roll
je
dec
lds
adc
sbb
in
jp
in
pop
ja
cmp
jbe
stos
sbb
pop
int3
movsl
aas
pushf
push
daa
sub
leave
out
jae
pop
ret
imul
iret
dec
hlt
sbb
ljmp
fldenv
mov
mov
imul
and
cmp
bound
leave
scas
in
ds
sahf
insb
lods
cld
in
xchg
cwtl
mov
xchg
lret
jmp
aas
push
bound
jp
or
push
test
in
mov
and
push
in
adc
pop
les
aad
fucom
je
shll
inc
rolb
add
push
push
jo
adc
andb
jne
sbbb
and
push
lcall
pop
lret
xchg
addr16
cli
pop
cmp
mov
movsl
inc
je
pop
inc
cltd
jle
negl
inc
mov
jmp
xor
and
fbstp
inc
into
rorl
call
sbb
roll
xor
jne
cmp
inc
fs
push
jae
sub
test
sbb
add
and
or
sahf
cmp
jecxz
sub
fisubrs
jp
pushf
push
aaa
mov
out
dec
bound
cmp
imul
and
std
sbb
cmp
push
push
aaa
dec
push
adc
loop
adc
and
sub
push
in
decl
lods
xchg
push
rolb
cmp
sub
xor
sbb
in
mov
pop
lcall
in
jns
sti
push
aad
sbb
dec
push
mov
cld
dec
sub
movsl
jg
shlb
fnstenv
push
xor
clc
adc
xor
add
in
or
xlat
adc
inc
ret
lret
adc
pop
testl
and
lahf
mov
xchg
xchg
cwtl
lds
imul
outsl
rcrl
idiv
insb
incb
popf
inc
insl
fildll
scas
sbbl
and
and
lret
mov
lods
sbb
fcmove
add
jb
mov
inc
push
push
jp
sbb
push
jns
sub
data16
ret
in
mov
mov
data16
loope
pusha
addb
pop
adc
mov
xor
push
pop
je
out
xchg
dec
into
lock
nop
xor
mov
fcomps
pop
dec
loopne
dec
dec
mov
fs
cmpsl
test
xor
imul
fcoml
jmp
ljmp
and
dec
mov
nop
into
repz
out
dec
dec
add
jge
movsb
jne
mov
out
inc
es
es
add
sbb
popf
pop
xor
popa
loope
xchg
sbb
dec
imul
inc
cltd
mov
dec
pop
ds
jge
mov
add
add
mov
jae
xchg
add
pushf
sub
lods
push
rcl
mov
xchg
jp
cltd
mov
enter
pop
xor
jae
sub
jmp
mov
add
pop
adc
dec
ret
pop
jno
pusha
fcomps
cwtl
sub
popl
ficoms
mov
push
jp
into
pop
xor
xchg
in
pop
insb
inc
stos
mov
mov
inc
aas
outsb
ss
icebp
sbb
add
jnp
push
sub
int3
and
cld
sahf
sbb
sbb
sub
sbb
and
int
xor
shrl
mov
or
sub
clc
hlt
ljmp
test
scas
and
xor
inc
dec
les
mov
jge
loope
lahf
pop
fs
movsl
arpl
pusha
push
add
cld
xor
scas
inc
push
adc
push
jno
inc
gs
gs
mov
mov
cwtl
adc
loope
add
ja
mov
push
out
add
out
loopne
jne
aas
add
orb
jne
fnstsw
cmpsl
inc
in
sbb
adc
mov
xchg
shlb
imulb
mov
inc
push
popf
and
pop
jb
xchg
nop
sti
out
xchg
pop
pop
fstp
cltd
jmp
mov
sbb
ds
sti
lret
movl
mov
mov
test
jecxz
lret
in
jle
dec
in
cmpsl
jb
icebp
lds
ss
js
pop
jecxz
jns
dec
jnp
adc
pop
push
jns
xchg
aad
pop
pop
mov
lds
lcall
rcrb
jno
testb
stc
push
lret
inc
cwtl
mov
nop
aam
and
add
incl
jbe
or
ljmp
dec
mov
add
cld
mov
adc
cmp
sub
das
rclb
rolb
cwtl
pop
sbb
add
jl
lcall
pushf
mov
je
mov
imul
pushf
push
jo
sbb
inc
das
mov
pop
mov
sbb
cmpsb
imul
rol
call
call
mov
cli
popf
aad
jl
es
aaa
push
push
insb
repnz
aas
shll
and
enter
inc
insl
mov
jecxz
sub
fdiv
ljmp
dec
lods
jp
jo
mov
xchg
xchg
mov
mov
lahf
fmulp
outsl
movntps
orl
dec
fisttps
mov
mov
push
add
pop
ds
pop
mov
shrb
loope
mov
outsl
sti
dec
cli
cmp
xor
imul
xor
inc
jbe
add
insb
js
jae
and
mov
or
fwait
in
fstpl
cmp
subb
stc
icebp
dec
sbb
ljmp
sbb
xchg
enter
mov
test
sahf
cmp
cmp
pusha
fmul
leave
cmc
lods
pushf
dec
jecxz
pusha
add
popf
jle
jl
push
dec
and
push
aaa
push
jmp
jne
push
push
add
push
ljmp
inc
pushf
sub
or
imul
xchg
test
fcoms
cmp
pop
mov
push
into
ror
cwtl
das
cld
dec
pop
or
pop
lret
dec
jg
pop
sub
add
pop
stc
movsl
lds
mov
fsubrp
jle
or
aaa
mov
daa
sbb
inc
push
fildll
fs
repz
jmp
sub
data16
pop
data16
add
cmp
divb
xchg
aaa
xchg
test
clc
jb
rorl
pop
pop
cmp
aam
loope
adc
fmull
test
fs
dec
or
ja
popa
stos
or
or
add
pop
mov
add
jae
je
ret
mov
subb
ficoms
fcomp
pop
out
jle
in
cmc
in
cmpb
insb
out
xchg
stos
data16
in
xor
pop
aaa
mov
pop
std
pusha
rolb
in
add
fistl
gs
inc
lret
inc
mov
pop
cmpb
ret
xchg
pushf
mov
test
cltd
jne
fucomip
test
ficomps
movsw
stos
lds
outsb
jae
sbb
shr
arpl
mov
xlat
push
lahf
and
jo
cmp
lret
loope
rorl
push
lods
xor
mov
lcall
in
pushf
lods
and
pop
out
popa
or
sub
pop
jecxz
andl
inc
sahf
test
outsl
sahf
jnp
cmp
icebp
lahf
lock
sbb
enter
add
mov
mov
sub
fs
cli
mov
dec
add
adc
xor
add
gs
jecxz
inc
repz
jne
jb
jg
addb
std
les
lahf
fsts
mov
hlt
and
sub
arpl
cmp
and
movsl
xchg
ret
cmpsb
pop
sbb
cmpsl
xchg
in
mov
xchg
ja
and
fcmovbe
jo
mov
or
or
stc
out
fildll
ljmp
push
adc
insl
out
sub
inc
cld
call
jb
scas
xorb
mov
jns
sub
mov
xchg
mov
cs
cwtl
sub
stc
or
cmp
pop
mov
xchg
adc
cmp
dec
sub
out
lods
lret
nop
inc
fmuls
xchg
mov
sub
sbb
mov
mov
arpl
cmp
test
xor
outsb
or
inc
jb
push
gs
fdivrp
dec
cltd
jae
add
icebp
inc
fisubs
test
mov
lret
popf
lahf
sbb
mov
push
mov
or
add
stos
adc
pop
and
adc
int
ret
sub
add
and
xchg
divb
loopne
mov
popa
icebp
mov
push
iret
inc
sub
sub
jle
dec
pop
fcmovne
xlat
outsb
xor
into
xchg
out
negb
sar
fbld
mov
data16
je
or
jge
sti
out
test
cmp
and
ljmp
outsl
fisubl
sub
gs
jnp
cli
imulb
ljmp
mov
scas
rolb
sub
xor
mov
loope
imul
inc
insb
xor
aam
adc
dec
fildll
cmp
jmp
pop
shlb
add
xchg
pop
mov
sub
clc
std
mov
xlat
adcb
lods
cli
out
push
cmp
aas
jo
je
enter
shrl
sub
loope
cltd
and
gs
fs
adc
std
pop
pop
push
pop
pop
adc
mov
les
mull
pop
cmp
push
outsl
xor
loope
in
outsl
xlat
mull
push
push
inc
icebp
sti
xlat
xor
add
mov
sbb
call
inc
data16
and
cwtl
mov
sub
mov
outsb
cltd
icebp
mov
push
test
cld
adc
push
adc
daa
mov
xchg
and
ret
add
lods
inc
fsubrs
bts
fucomi
lahf
das
insl
lcall
mov
push
test
inc
lahf
movsl
addl
enter
dec
adc
or
orb
jg
push
ss
xchg
pop
push
loop
imull
cli
xchg
jae
inc
pop
test
fwait
test
adc
push
inc
test
fisttps
add
aaa
xchg
in
inc
cmp
or
ja
sub
and
adc
sbb
jbe
mov
sub
in
sbb
sahf
aas
cmp
jmp
mov
jmp
mov
scas
ja
lock
mov
xchg
add
adc
in
ret
sub
lcall
push
xor
loopne
sub
add
ljmp
dec
lods
ds
pop
adc
inc
arpl
cmp
mov
fildl
jnp
pusha
sbbl
push
hlt
into
movsb
pop
pop
pop
xlat
stos
jno
mov
dec
xchg
xor
push
inc
imul
scas
mov
mov
inc
sub
dec
arpl
sbb
or
push
rcr
sub
inc
push
pop
movsl
pop
in
into
ss
push
into
lock
jecxz
test
xchg
jmp
lahf
fildll
xchg
jns
mov
imul
xor
pop
repnz
xchg
adc
testb
jns
je
inc
add
adc
adc
pushf
je
icebp
lods
mov
mov
push
pop
je
pop
cwtl
lahf
out
mov
mov
mov
leave
and
pop
sbb
mov
addl
jmp
in
lret
adc
test
mov
fldl2t
push
mov
pop
cmp
add
xchg
pushf
popf
cmp
or
loope
test
fildll
sbbl
das
pusha
mov
sub
mov
inc
cmpl
test
fstp
dec
cli
jg
aaa
daa
lret
adc
sub
push
mov
dec
adc
sbb
mov
pushf
mov
adc
pop
ljmp
add
mov
in
shrb
movsb
or
int3
test
mov
cmp
mov
cltd
jnp
sub
test
ljmp
in
inc
adc
mov
repz
fwait
or
or
xlat
dec
incl
jg
mov
clc
cmp
mov
fldl
inc
arpl
and
out
and
scas
dec
frstor
dec
jge
xchg
mov
popa
cmpsl
scas
dec
out
sub
sbb
dec
dec
ds
mov
rcr
lock
cmpsl
in
add
movsl
or
lcall
aam
lods
addl
stos
jle
add
dec
icebp
roll
jl
and
xchg
lock
gs
std
mov
testb
push
push
shlb
mov
fwait
shr
out
pop
cs
lret
and
sbb
xor
xchg
mov
mov
movb
outsl
jns
inc
sub
adc
jmp
pusha
xor
sbb
mov
dec
dec
hlt
movsb
and
stos
or
outsl
cmp
and
xor
push
mov
xor
jb
jbe
jmp
jo
mov
es
sub
mov
rcl
ljmp
inc
test
hlt
out
js
add
push
add
sti
mov
ret
outsb
xlat
and
or
lcall
mov
sub
out
ret
sbb
shlb
pushf
lods
mov
in
jno
mov
and
cmpsl
lret
lret
andl
adc
cmp
dec
stc
inc
jle
es
rcr
xchg
adc
jp
loopne
jb
adc
iret
xchg
test
adc
nop
pop
repnz
inc
cli
loopne
insb
lock
mov
fldt
pop
xchg
xor
xor
add
mov
lds
loopne
mov
jle
insb
inc
stos
ja
xchg
sbb
outsl
pop
icebp
nop
or
test
mov
aaa
xchg
sub
dec
fadds
lea
iret
mov
jae
mov
lcall
pop
adc
dec
pop
inc
jae
es
fwait
packuswb
push
or
sbb
repz
adc
jbe
sbbb
movsb
dec
jb
test
inc
ficoms
pop
jae
movb
stos
aas
and
ja
bound
xchg
mov
mov
aad
std
add
stos
sarb
jl
and
arpl
dec
jmp
scas
pop
das
popf
xor
clc
mov
imul
cmp
outsl
jg
dec
add
cmp
iret
mov
jge
mov
frstor
lcall
int3
subl
cmp
jge
mov
scas
test
insl
add
mov
mov
push
mov
jl
stos
in
fbstp
cmp
adc
mov
cmp
mov
mov
or
fcompp
std
rclb
sub
push
popf
loopne
jge
xchg
popf
xchg
jge
mov
mov
pop
adc
fimuls
xor
inc
sar
fistpll
mov
fisubrs
push
mov
iret
stc
mulb
cli
jp
outsl
pushf
push
es
int3
insl
push
xchg
xor
jbe
adc
int
mov
cmp
inc
mov
mov
push
lds
mov
fnstcw
pop
or
xor
push
dec
movsl
jl
jp
loop
xchg
mov
pop
je
enter
mov
jmp
fistl
loope
cwtl
stc
dec
stc
mov
push
push
fs
mov
repnz
out
pop
lock
mov
gs
mov
add
out
ds
outsl
jne
adc
pop
icebp
shlb
out
incb
shll
lods
rcrl
cli
ret
inc
int3
hlt
fs
out
ljmp
dec
adc
push
data16
leave
add
adc
mov
out
ret
push
in
jns
rcll
fstps
add
xchg
mov
xlat
dec
sbbl
sarb
lcall
negl
pop
or
fidivrs
jl
jl
mul
je
xor
hlt
jns
xor
xchg
and
add
in
jge
notb
add
mov
dec
sub
arpl
add
clc
mov
add
or
mov
stc
test
push
lods
lock
insl
aaa
outsl
cmpsb
ja
leave
adc
sub
and
fdivrs
mov
xchg
dec
addr16
rorb
or
push
xor
mov
jb
jns
cmpsb
fstpl
mov
outsl
into
push
arpl
adc
loope
fidivl
push
push
dec
mov
push
or
xorb
cmp
push
pushl
imul
iret
insl
jo
pop
push
push
sub
pushf
mov
hlt
jae
cli
mov
push
sub
push
inc
int3
push
test
jge
cmp
jle
cmp
repnz
or
filds
mov
rcrl
out
cwtl
pusha
mov
daa
aaa
cmpsb
mov
mov
test
xchg
arpl
in
cmpsb
mov
cmpl
jne
push
ret
ds
mov
in
mov
int3
add
pop
rcl
scas
mov
arpl
pop
rclb
jmp
mov
cmpsl
cmp
jl
jmp
add
fimull
mov
adc
je
stc
addb
sub
cwtl
outsl
into
aaa
adc
fwait
adc
cmp
push
sub
jle
out
ret
push
std
leave
shll
shrl
daa
cmp
ljmp
insb
mov
xor
popa
out
pop
pop
or
and
ja
pop
stos
subl
pop
mov
std
cs
insl
js
jl
icebp
xchg
or
scas
and
dec
push
push
stos
outsl
in
lret
mov
jne
mov
mov
jb
cwtl
push
scas
mov
and
clc
inc
stos
lods
cwtl
mov
push
jnp
mov
mov
pop
clc
lret
call
fwait
subl
setg
jl
jne
xchg
insb
test
or
mov
push
fstps
scas
push
jmp
ret
aam
loop
dec
icebp
cmp
jae
repnz
lods
pop
inc
mov
test
lods
movsb
sar
add
icebp
add
arpl
in
fucomip
mov
jb
jne
repnz
loopne
sti
test
scas
or
aas
sub
jnp
xchg
test
test
fadds
scas
roll
mov
lods
inc
ss
xor
push
adc
xchg
add
push
xchg
not
bound
pop
jle
iret
es
mov
mov
mov
pop
jne
sub
mov
nop
imul
inc
xor
add
mov
and
mov
jle
cmc
in
dec
test
aaa
jns
stc
pop
ds
dec
inc
stos
sti
fsubrs
ds
ror
push
mov
fiaddl
dec
sbb
jbe,pn
mov
push
fwait
dec
jmp
cmp
adc
mov
jmp
in
mov
adc
ja
scas
scas
fs
pop
xchg
shrl
mov
out
dec
cmpl
in
out
push
andb
jge
or
push
push
xor
lahf
test
pop
add
dec
jbe
add
cmp
cmpsb
xor
sbb
mov
dec
ja
in
imulb
push
aaa
cmp
aam
jno
xor
mov
sti
and
push
lret
mov
movsb
pop
inc
pop
push
and
frstor
push
lret
push
test
shlb
inc
xor
xlat
add
out
mov
mov
mov
adc
pop
sub
inc
in
call
adc
xchg
hlt
xchg
lods
out
and
repnz
sub
push
cmp
mov
dec
lock
ret
inc
mov
out
cmpsb
xchg
test
adc
mov
ret
repnz
inc
add
insb
ja
data16
sbb
push
cwtl
dec
in
xchg
and
and
push
xchg
imul
out
repz
pop
repnz
adc
xchg
leave
and
mov
arpl
in
push
iret
mov
pop
add
mov
xor
ficompl
sarb
lock
lcall
adc
cmp
mov
xlat
mov
scas
jae
aad
dec
xchg
dec
lahf
mov
cwtl
icebp
hlt
mov
mov
pop
xchg
repz
dec
sqrtps
in
inc
dec
inc
pop
pusha
adc
arpl
mov
in
fimuls
shll
or
push
fadds
xchg
shrl
sbb
dec
test
sar
jbe
push
cmc
cmpsl
jb
maxps
dec
dec
pop
fisttpll
jl
inc
scas
jo
jbe
sub
sub
add
sahf
mov
cmpsl
mov
stos
sub
xor
int3
and
cmp
inc
call
int3
xchg
mov
mov
mov
sarl
outsl
popl
in
sbb
jbe
sbb
adc
mov
icebp
sub
mov
loopne
add
or
xchg
into
les
add
rorl
xlat
sbbb
mov
pop
xchg
shlb
inc
scas
mov
bnd
and
test
fidivrs
cwtl
sbb
imul
lret
ret
xchg
je
lock
push
add
cld
pushf
icebp
jmp
jne
fiadds
insb
movsb
inc
xchg
cmc
test
stos
inc
fwait
in
or
mov
add
or
pop
sar
enter
push
cmp
mov
cmc
pop
dec
mov
test
pop
in
mov
ficoms
sub
cli
dec
repz
push
ljmp
dec
mov
testb
and
jecxz
sub
scas
cmp
push
sti
scas
jno
dec
ret
jmp
daa
sbb
push
xchg
les
icebp
xor
cli
mov
add
popa
push
test
jmp
mov
mov
push
pop
sarl
popf
mov
repnz
pusha
push
bound
and
pop
enter
jl
test
shl
dec
xor
cmp
pop
inc
push
mov
lret
dec
roll
inc
scas
push
out
in
sub
mov
sub
mov
inc
aam
jecxz
cmpsb
mov
es
psrlw
sub
cmp
in
lods
xor
add
icebp
or
mov
cltd
and
out
testl
mov
mov
mov
cmp
push
data16
jecxz
js
xchg
aas
insl
in
fmull
in
and
adc
push
jmp
mov
mov
jbe
inc
jp
repz
rclb
sarl
arpl
xchg
or
pop
rclb
mov
int3
xchg
push
jg
out
sti
mov
mov
loopne
testl
add
pop
lahf
mov
mov
je
arpl
and
fisubrs
mov
mov
or
ss
test
sbb
sbb
mov
pop
inc
jb
add
sbb
or
sbb
cmova
pop
ja
cmp
cmpsb
or
mov
mov
pop
xor
mov
jge
add
psrad
out
xchg
fisubs
pop
jmp
loop
fimuls
mov
xor
adc
rorl
cli
mov
dec
popf
push
pushf
sub
adc
push
mov
mov
je
and
das
pop
mov
test
stos
lods
je
test
jle
mov
std
cmc
push
inc
es
fdivl
add
int
xchg
test
mov
fistpl
popa
cmc
or
int3
adc
jns
push
xchg
cmp
ja
push
mov
bswap
xchg
add
sub
rclb
out
mov
ret
lods
and
loopew
lods
andl
pop
cltd
lahf
or
jne
sbb
push
adc
add
xor
push
cmp
or
cmp
dec
int
pop
push
jp
cmpsl
pushf
push
and
leave
cmp
lock
scas
pop
jmp
push
and
cmpsb
pop
adc
fidivl
stos
push
ficoml
stos
jo
out
and
pusha
pop
sbb
or
mul
loop
jl
aas
or
mov
jp
dec
mov
js
and
or
cmc
jae
das
sub
pop
hlt
repnz
mov
into
mov
fiadds
add
add
jo
xlat
adc
push
adc
xor
and
add
imul
xor
xchg
out
nop
xlat
mov
push
movsb
aas
fistps
cld
outsl
test
sbb
adc
push
sub
dec
aad
mov
jmp
mov
fadds
sbb
rorb
pop
xchg
or
or
pop
xor
mov
jns
pop
fcmove
aaa
push
dec
add
aam
mov
test
adc
outsb
dec
mov
arpl
aad
mov
call
lcall
add
inc
and
fisubrs
aaa
mov
fisubrl
or
mov
ljmp
test
rol
jne
in
jo
mov
sub
lcall
push
fwait
and
in
ljmp
add
and
scas
adc
inc
cli
lret
lret
jp
daa
clc
int3
pop
sub
cwtl
testl
inc
shr
push
mov
ljmp
jns
ret
dec
jo
dec
jmp
push
inc
cmp
in
fdiv
inc
mov
adc
popf
xchg
xchg
fidivrl
shlb
repz
clc
fisubl
xor
dec
fs
or
ficompl
daa
mov
test
insl
loopne
push
sbb
aam
js
aad
dec
push
jl
orb
pop
xor
mov
std
sar
pop
nop
lcall
or
imul
scas
dec
icebp
inc
stos
das
sub
cmp
or
xchg
incl
lret
mov
notl
push
dec
dec
xor
call
imul
jbe
dec
pop
lcall
mov
leave
lcall
inc
jne
mov
jo
rolb
stos
mov
pop
sub
cvtdq2ps
add
xchg
fsubrp
adc
mov
push
sbb
nop
lock
xchg
rcrl
test
lea
in
subb
fadds
mov
sbb
push
iret
arpl
std
inc
roll
mov
stc
mov
call
pop
and
test
sub
adc
fdiv
fnclex
mov
and
or
cmp
push
mov
aas
nop
add
add
pop
popa
sti
insl
and
mov
mov
mov
je
sahf
dec
jns
push
loopne
addr16
xor
bnd
cmp
dec
out
call
or
cmp
andl
cld
das
xor
insl
fisubl
jle
adc
repnz
subb
inc
test
push
pop
push
cli
lahf
and
jecxz
jge
dec
addr16
adc
fsubrl
adc
orb
mov
std
mov
rol
or
sub
push
jne
inc
dec
gs
test
in
popa
lahf
xchg
clc
in
push
cmp
mov
pop
mov
imul
jnp
dec
push
jnp
pop
xchg
and
orl
sbb
clc
icebp
mov
aam
out
fidivl
faddp
lret
cwtl
movsl
sbb
bound
push
ss
test
dec
jp
sbb
repnz
das
jae
nop
vpmaddwd
ret
adc
mov
cmp
and
cmp
mov
mov
jg
mov
ljmp
mov
or
xor
mov
imul
js
andb
mov
cltd
add
inc
out
fdivs
cld
stos
orl
jnp
cli
cwtl
cmpsb
jge
sbb
push
filds
pop
insb
iret
test
or
ret
cmp
pop
mov
pop
mov
xlat
in
out
bound
lods
test
shrl
mov
lahf
bound
sbb
xor
pop
subl
notb
adc
addr16
repz
sbb
cltd
sbb
into
test
dec
push
mov
xor
cmpb
push
jge
jcxz
or
stos
push
adc
sub
inc
cmc
jb
repz
lds
jae
xor
add
jmp
jmp
inc
inc
ljmp
push
jmp
das
mov
arpl
xchg
sbb
cmp
pop
movsb
adc
addb
adc
xchg
xor
mov
cmpl
xor
mov
push
lret
aam
ja
fs
mov
cli
sbb
lods
xor
fdivs
in
insb
fs
adc
fsubr
adc
adc
pop
sbb
push
imul
arpl
and
orb
call
jbe
rclb
sbb
dec
out
xchg
loope
fstp
lret
pop
imul
test
sahf
push
mov
mov
sub
lahf
xor
push
call
add
adc
fbld
in
mov
int
sar
call
loopne
imul
adc
mov
ret
dec
push
sbb
inc
leave
leave
inc
jge
mov
push
shrb
push
lock
lcall
orl
cmp
xchg
test
inc
fisubrl
jno
iret
push
mov
push
xchg
xchg
adc
test
sbb
sbbb
pop
pop
xor
imul
mov
sub
popf
aam
jl
mov
dec
dec
enter
cmpsl
fidivl
xchg
iret
lods
xor
stos
xor
enter
aaa
gs
test
jmp
mov
scas
mov
and
jo
xor
push
cs
push
pushf
sub
in
fdiv
in
xlat
outsl
sti
imul
pop
incb
push
cmp
push
adc
xchg
mov
cmpsb
loopne
lahf
add
lods
mov
push
push
mov
sbb
jp
inc
sbb
mov
dec
divl
adc
sbb
fldt
cmp
jl
dec
daa
sbb
dec
push
mov
shlb
xor
or
and
mov
stc
inc
lods
jbe
scas
and
xor
pop
push
xor
adc
test
loop
mov
sub
icebp
bound
jno
lahf
inc
fisttps
inc
fldenv
test
mov
pop
push
dec
push
lahf
mov
push
cld
hlt
cltd
push
or
in
fisttpll
inc
lea
pop
jl
adc
dec
xchg
sbbl
ss
and
jb
add
sahf
loopne
pop
or
inc
loope
push
dec
push
jbe
orl
jne
push
sub
dec
xchg
fucomp
and
mov
aad
iret
movsl
xchg
aas
dec
mov
pop
cli
neg
test
sbb
adc
xchg
xchg
sahf
fsubs
inc
mov
imul
mov
inc
sahf
pusha
outsl
mov
fists
xchg
dec
sarb
mov
scas
xchg
fidivrs
add
jno
push
dec
sahf
nop
hlt
cmp
cmc
loope
fwait
mov
test
push
xchg
xor
sti
fisttps
outsl
test
test
mov
inc
fcomps
add
sub
ret
adc
and
jecxz
lea
xor
inc
iret
nop
mov
jnp
hlt
inc
mov
push
sbbb
js
xlat
jne
vunpckhps
xor
mov
frstor
mov
ret
jle
sbb
aam
popl
ret
jecxz
enter
adc
sub
les
daa
inc
stos
cltd
sbb
shrb
adc
lcall
push
push
pop
setnp
daa
adc
mov
mov
push
jno
adc
add
les
xor
and
xor
cmpsb
icebp
jo
mov
push
arpl
fsts
data16
ja
mov
adc
call
pop
pusha
and
andb
dec
and
es
icebp
gs
sti
bound
mov
adcl
mov
pop
pop
dec
iret
push
cmovne
hlt
cmpsb
jmp
adc
jns
hlt
sbb
push
pop
dec
lahf
mov
or
sbb
mov
out
push
push
iret
cmpsl
xchg
aaa
dec
add
scas
sub
dec
orb
pop
cmpsl
lahf
inc
sub
sbb
or
imul
std
pop
pop
mov
lahf
popa
lret
mov
adc
out
adc
cltd
pusha
sub
push
adc
pop
in
xchg
shlb
pop
or
movsb
adc
push
out
xchg
test
xchg
ds
movl
sti
inc
xor
movsl
jae
lds
repz
xchg
cmp
push
in
pop
mov
add
ljmp
insb
xor
enter
sub
or
cwtl
fldenv
jbe
icebp
jns
fdivr
pop
dec
mov
fdivr
xchg
pushf
jg
out
hlt
push
inc
xchg
shrl
dec
loop
and
push
or
js
inc
arpl
fcmovbe
xor
mov
add
fcoml
cwtl
out
xor
ja
rclb
out
sbbl
jbe
sbb
fdivrl
sbb
in
lret
pop
test
xchg
das
dec
insl
outsl
lret
shrl
mov
dec
mov
sahf
sub
mov
jnp
inc
jbe
std
test
xchg
repz
ffreep
movsl
cmpsb
out
testb
push
out
push
pushw
jecxz
stos
jge
push
cmp
shlb
lock
out
adcb
push
mov
mov
sbb
enter
repz
aam
mov
lret
pop
cltd
aam
das
xchg
lock
mov
jg
pop
inc
shrb
test
rorb
xor
fwait
clc
gs
cmp
repz
inc
mov
push
mov
test
or
sbb
dec
mov
in
in
aad
outsl
jg
or
or
addr16
dec
add
push
sbb
xchg
cmp
out
sti
scas
clc
lds
pop
or
out
jmp
xchg
or
add
iret
test
data16
pushl
mov
cmp
imul
xor
mov
sub
push
out
in
adc
nop
sub
mov
push
sbb
adc
pop
mov
cmp
sti
pop
pop
daa
sub
cmp
fs
outsl
cwtl
fdivrs
repnz
sti
sub
mov
test
pop
aam
xor
jge
sub
aaa
mov
xor
stc
xlat
xlat
loope
fisttpll
jp
lods
shl
sub
aas
iret
loope
je
lods
dec
push
jne
mov
cmpl
and
fcmovne
add
test
sub
push
int3
in
outsl
fdivrs
jp
jl
aam
mov
sub
in
leave
in
sbb
and
orb
out
rorb
loop
push
dec
or
arpl
pop
push
fisubrs
pop
jno
pop
dec
inc
mov
mov
add
pop
lock
fdivr
xor
rorl
insl
cmp
xchg
in
cli
repz
add
sub
sbb
and
ja
and
pop
fld
insb
mov
sti
dec
jns,pn
cltd
add
int3
inc
mov
mov
fcomp
in
xchg
adc
inc
dec
jno
push
xchg
out
pop
mov
push
mov
mov
mov
mov
mov
sbb
cmp
mov
imul
test
insl
lock
mov
xor
pop
cmc
pop
mov
imul
mov
dec
and
fstl
stos
imul
inc
shlb
push
mov
loope
dec
xlat
and
outsl
xchg
dec
hlt
pop
mov
sub
mov
push
mov
xor
push
in
aam
sbb
rorl
xor
fmulp
mov
lock
test
js
mov
cmc
pop
jbe
sbb
inc
add
adc
sar
movl
push
lcall
arpl
js
mov
hlt
je
add
fsubs
push
sbb
jle
enter
lret
fdivrp
adc
xchg
rcl
pop
mov
xchg
sbb
in
cmp
or
pop
jp
mov
push
cmp
mov
mov
mov
sub
mov
mov
adc
fucom
jecxz
mov
sub
dec
sub
sbb
ljmp
das
jecxz
add
popf
fdivp
push
jnp
sar
pop
sbb
mov
stos
dec
pushf
sbb
lcall
cmp
mov
std
add
rorl
fmuls
into
rorl
and
dec
pop
fstl
scas
mov
jmp
fwait
cmpsl
xlat
rolb
fscale
popa
pop
cli
outsb
rcl
cwtl
sub
cmp
mov
mov
in
xor
fs
andl
mov
fadds
lods
les
inc
out
shrl
dec
mov
repz
cmpsl
jns
dec
xor
scas
shlb
push
loop
dec
push
or
mov
test
and
lods
cmp
and
js
lods
xchg
dec
std
mov
les
mov
lea
jmp
in
jns
in
subb
cmp
mov
mov
cmp
daa
movb
jb
lcall
pop
push
xlat
pop
add
jl
adc
jnp
xchg
cltd
mov
mov
push
lods
scas
inc
pop
mov
pushf
jp
sbb
push
jae
adc
adc
xor
scas
jne
sar
into
test
into
or
dec
fxch
lcall
mov
xchg
les
push
jge
sbb
movsl
out
scas
mov
int
sub
inc
mov
xchg
imulb
lods
out
dec
sbb
jge
xor
add
cmpsb
jle
inc
xchg
sub
mov
mov
push
cs
xchg
int3
shlb
cmp
popf
jae
decb
into
mov
scas
xchg
and
mov
faddp
mov
enter
push
les
popf
mov
xchg
fwait
push
pop
iret
mov
fisttps
cmp
shlb
mov
and
in
sbb
push
call
add
dec
lret
sub
cmp
xlat
out
sti
iret
fwait
sbb
imul
inc
test
or
xchg
je
push
dec
test
mov
fwait
pop
mov
mov
inc
loope
out
cwtl
es
cli
mov
fisubrl
mov
scas
jl
shrl
pushf
ret
adc
mov
jle
push
aam
jno
insb
insl
es
ss
aad
push
ds
nop
negb
into
adc
pop
fistpll
mov
or
mov
and
add
mov
dec
int3
push
jge
int3
mov
cwtl
pop
cmp
push
mov
xchg
mov
test
in
jg
movsb
xchg
dec
xor
and
fiaddl
rorl
es
cmp
stos
jl
pop
and
inc
cmpsl
mull
inc
ret
or
fdiv
cmp
dec
jb
push
sbb
dec
mov
pop
dec
pushf
adc
mov
jo
pop
adc
sbb
aam
aas
lcall
cld
or
leave
shrl
jb
push
cs
jp
jl
insb
mov
cld
xor
mov
jl
icebp
mov
pusha
shll
gs
mov
lahf
pop
xlat
cmp
dec
push
shrl
out
mov
sub
arpl
movsl
add
and
push
inc
cli
mov
xlat
inc
cmpsl
sbbl
lds
cwtl
pop
mov
icebp
jnp
jecxz
pop
xor
mov
cld
and
pop
or
scas
xchg
and
pop
xchg
jno
push
imul
xchg
mov
pop
out
sub
arpl
enter
dec
inc
xchg
lahf
fstpt
in
dec
xchg
and
out
cli
enter
cwtl
push
lahf
rorb
xchg
pop
mov
mov
jmp
dec
testl
cltd
jnp
pop
push
push
jns
aas
insb
mov
jmp
insb
cmp
dec
shrl
or
sti
jge
push
and
sub
dec
loope
pop
lcall
inc
fsub
in
inc
scas
jnp
ljmp
aad
push
in
iret
dec
push
and
sbb
sbb
imul
mov
in
jno
jb
leave
mov
xchg
pop
cmc
fwait
lock
pop
loop
movl
fistps
ret
into
or
in
aad
shll
jecxz
or
fcmovne
pop
lock
das
fsubs
jl
js
xor
sub
jne
xlat
mov
paddsw
call
or
lds
jbe
push
enter
push
add
adc
cmp
loope
mov
mov
mov
mov
pop
out
push
jp
shr
stos
inc
dec
or
inc
lods
mov
fisttps
inc
lods
mov
nop
insb
cmp
jmp
sub
xchg
add
jne
mov
out
movsl
mov
ds
mov
pop
nop
into
jnp
hlt
adc
push
stos
push
in
pop
xorl
repz
into
dec
or
mov
mov
loopne
cltd
clc
sbb
mov
xlat
jnp
in
mov
pop
fsubrl
or
test
test
push
aam
sti
sarb
mov
sbb
push
test
lret
repz
dec
lds
out
add
sahf
decl
movsl
jp
fucom
jle
or
sbbb
ret
ret
cmp
xor
mov
stos
pop
jmp
jnp
add
cmp
jne
in
pop
mulb
jbe
adc
lret
and
sti
shrd
sti
cltd
inc
rcll
icebp
shll
data16
pop
inc
mov
mov
mov
lods
and
inc
mov
and
scas
inc
push
andl
rolb
insl
rorb
pop
lcall
cli
jns
cli
xchg
xchg
fnstcw
sub
ficoml
cltd
in
sahf
mov
incl
xchg
sbb
fnstcw
fprem1
and
mov
and
scas
mov
fstp
jb
push
ret
fiadds
outsl
pop
mov
inc
xchg
stos
cltd
mov
xor
pop
jno
cmp
xchg
stc
fmul
arpl
ficomps
xor
dec
add
adc
popa
jno
jne
scas
cmpsb
stos
mov
into
jle
xor
repz
jp
stos
lahf
and
add
out
mov
push
pop
push
xchg
loop
cmp
mov
mov
hlt
insl
aam
adc
std
js
fsubr
push
test
fldl
jae
cmp
cli
mov
imul
pop
hlt
xchg
xchg
sub
cmp
loopne
mov
outsl
stos
pop
pop
dec
mov
repz
rolb
inc
stos
gs
cs
mov
mov
fdivrl
jo
insl
pop
jle
mov
test
mov
add
jo
cmovno
xchg
push
or
sub
insb
xchg
and
les
or
in
cmpsb
mov
rol
stc
dec
mov
cmpsl
shlb
or
dec
pop
ljmp
push
adc
sbbb
mov
mov
cmp
mov
mov
daa
dec
fstpt
sarl
and
scas
jb
aaa
push
push
lahf
mov
and
test
fs
sub
jns
jae
pop
in
in
pop
jmp
adc
mov
std
or
sbb
mov
cmc
xchg
sbb
rcll
movsl
mov
lret
sbb
fldt
dec
adc
scas
adc
ja
mov
fs
xchg
jl
xchg
enter
loop
aaa
gs
enter
rcrb
xchg
mov
push
jne
jb
lods
or
mov
xchg
loop
jb
shl
mov
sti
sbb
inc
or
mov
imul
adc
es
out
data16
pop
cli
adc
and
cmp
clc
arpl
inc
xchg
out
adc
aad
mov
loop
fs
dec
add
ljmp
and
loope
mov
jmp
test
and
xor
or
xchg
aaa
and
sarb
jg
enter
xor
xchg
les
xor
jne
push
adc
jnp
push
xchg
icebp
in
and
and
adc
pusha
loop
jno
icebp
lcall
xlat
xchg
add
adc
mov
stc
pushf
inc
popa
aas
jmp
movb
mov
imul
jp
ds
mov
adc
dec
or
lods
out
and
jne
mulb
cmp
xchg
vcvtpd2psx
test
in
mov
sbb
xor
push
mov
ficomps
cwtl
xchg
lock
and
scas
stos
adc
adc
aam
xchg
add
jno
add
adc
pop
push
clc
rcrb
bound
sahf
bound
inc
dec
mov
inc
dec
cmc
insl
sbb
int3
hlt
ljmp
xchg
cld
or
sarl
ljmp
adc
sub
add
shll
pop
aad
jge
and
lods
mov
lret
add
dec
lret
popf
xor
jmp
fsubrp
xchg
pop
adc
or
aam
mov
test
in
jbe
sbb
icebp
dec
mov
add
fnstsw
mov
and
pop
sti
mov
mov
hlt
jb
cli
daa
imul
movsb
mov
sahf
mov
hlt
js
dec
sub
mov
rcll
movsb
xchg
out
jne
shlb
jo
test
repnz
jns
mov
bound
in
push
aam
out
cmp
loope
pop
int
push
mov
xchg
xor
mov
cmp
out
movsl
mov
or
lods
mov
push
sub
es
mov
shlb
adcl
outsb
loopne
mov
les
daa
inc
sbb
xchg
stc
cmpl
pop
lret
xorb
sbb
hlt
loope
xor
dec
cmp
int
xor
testb
inc
mov
stos
xor
mov
and
call
jle
lea
adc
popa
aaa
pop
mov
jb
cmpsb
or
fcmovnu
pop
iret
ficomps
cmc
jl
add
aam
repz
jmp
xor
jmp
cltd
mov
cmp
mov
cwtl
adcl
orb
movsl
bound
pusha
insl
pop
xor
test
aad
mov
cmpsl
add
xchg
dec
aam
dec
mov
xor
mov
jg
sbb
filds
shrl
or
fnstsw
mov
pop
out
leave
jecxz
xchg
or
lea
fiaddl
gs
pop
inc
sbb
pop
push
adc
lea
arpl
aam
ljmp
xor
enter
test
sbb
sbb
cmp
inc
xchg
stos
or
inc
pushl
jno
jecxz
mov
icebp
ds
les
nop
add
test
xor
mov
jmp
in
nop
push
dec
nop
adc
je
push
out
mov
mull
sbb
addl
ss
xor
dec
scas
test
jb
les
add
test
push
sti
popa
sub
int3
mov
mov
nop
sbb
bound
xchg
jo
outsl
xchg
cmp
xor
loopne
pop
xor
lods
xorb
xor
xor
jb
cmp
cmp
subl
pop
dec
nop
lret
pushf
jnp
mov
ljmp
xor
aaa
xor
fists
rolb
aas
cmpsb
fnstcw
movsl
mov
in
pop
xchg
mov
repnz
inc
pop
in
xor
inc
imul
negl
mov
fwait
xchg
and
sbb
push
push
int
push
popa
mov
cmp
xchg
mov
fsubrs
pop
xor
test
dec
test
lods
push
pop
xchg
jle
in
cmpsl
jae
cltd
jecxz
in
adc
loop
adc
stos
mov
rcrl
jmp
setnp
jae
int
add
ret
int3
mov
psrlq
leave
loope
jp
jnp
pop
aad
enter
dec
xor
fwait
rcrb
bound
jecxz
cmp
scas
imul
ss
jne
ljmp
sub
add
mov
fwait
das
sti
mov
in
or
ss
or
imul
jb
popa
out
xchg
pop
lds
loope
xlat
in
inc
inc
scas
into
push
pop
push
imul
push
scas
popf
add
movsb
lds
dec
dec
jne
jo
cmp
mov
das
or
and
pop
cld
outsb
stos
addr16
mov
push
bound
pop
call
mov
cmp
mov
jg
rolb
inc
fbstp
popf
jbe
inc
test
jl
adc
sbb
adc
rolb
stos
xlat
rorl
rcl
ds
sbb
fdivrs
xchg
imul
fildll
jp
mov
inc
jmp
mov
jmp
adc
sbb
sub
ss
movsb
mov
faddl
daa
xchg
shl
sbb
aaa
cwtl
cmpsl
lea
inc
or
js
push
jo
mov
adcl
out
dec
xchg
sub
push
fdivrl
and
sahf
xchg
ss
idiv
cmp
pop
out
mov
mov
inc
adc
int3
js
sbb
jmp
loop
ja
mov
pop
xchg
fnstcw
aaa
mov
into
pop
push
and
mov
or
sbb
movl
sub
bound
xchg
adc
add
inc
loope
aad
loope
pop
add
les
cmp
aad
fucomi
inc
hlt
adc
mov
cmpsb
jmp
sub
movsl
cmp
and
dec
xor
push
fnsave
xlat
mov
push
cmp
testl
lock
xlat
or
repnz
icebp
daa
aam
dec
dec
loope
or
or
lret
ficoml
outsb
dec
xor
mov
insl
clc
nop
pop
inc
or
add
sbb
sbb
test
pop
cmp
les
xor
pop
inc
ss
out
pop
movsb
adc
push
dec
dec
inc
sub
shlb
and
jns
arpl
mov
push
mov
pop
outsb
cli
call
xchg
sub
jmp
aad
xor
ja
inc
jl
add
pop
fstpl
sbb
adc
mov
jo
cmp
adc
jnp
loopne
or
cmp
fstpl
daa
shrb
leave
icebp
and
jb
shrb
mov
js
xorl
pushf
push
and
xor
cmpsb
add
push
xchg
xor
int
jmp
jle
or
cltd
xchg
pop
data16
push
inc
adc
ret
cmp
aad
shl
push
xchg
dec
dec
in
sbb
mov
xor
hlt
lret
lea
ja
inc
lahf
push
xchg
push
xchg
pop
mov
imul
cmpsl
mov
ret
lea
sub
mov
mov
cltd
sbb
ss
inc
inc
cmc
insl
in
out
dec
or
decl
dec
inc
mov
test
pop
jae
sbb
fistps
mov
adc
in
std
mulb
push
call
jmp
pop
and
es
inc
sub
dec
jbe
sbb
mov
out
in
fsubl
mov
jbe
xchg
pushf
cmp
sub
cmp
das
aad
mov
pop
mov
push
sti
cld
xchg
jbe
add
add
clc
outsb
xchg
daa
fmuls
ret
xchg
fmulp
xor
cmp
ret
mov
inc
test
adc
adc
lock
sbb
mov
scas
dec
add
gs
mov
mov
int3
xor
xor
nop
out
rcrb
mov
fwait
jg
sti
rcll
das
xchg
push
cwtl
hlt
push
les
adc
sub
jg
sub
lcall
cmpl
xor
sbb
xchg
xor
lods
in
sub
add
push
out
inc
adc
and
daa
sub
xor
mov
js
pushf
or
stos
push
in
add
cli
cmpsl
movsl
in
and
ret
jl
int3
fdivr
pop
pop
pop
jg
pop
inc
outsl
dec
and
dec
mov
push
cmc
fs
dec
aam
cmpsb
xlat
int3
mov
pop
and
mov
call
insl
outsl
cli
aas
mov
push
mov
sti
xchg
repz
fiaddl
pop
or
mov
aas
imul
out
sbb
shrb
movsb
mov
and
ret
inc
loop
nop
movb
aas
shll
pop
xchg
xchg
lea
cmp
mov
lea
movsb
aam
ss
lahf
sbb
arpl
in
pop
cmp
pop
push
into
fildl
dec
jp
dec
push
xchg
cmp
rcrb
fs
push
dec
sbb
es
cmp
pushf
and
push
hlt
ja
or
cli
dec
ja
mov
mov
add
jmp
clc
and
pop
outsb
pop
cmpsl
sti
test
xchg
push
adc
mov
lock
out
cs
or
jecxz
push
mov
pop
or
aas
xor
out
fs
scas
ficoms
mov
or
push
popf
xchg
or
pop
push
aad
andb
mov
hlt
add
je
dec
aas
pop
sbb
and
xor
rorl
lods
gs
cli
cmp
or
push
pop
sbb
xlat
lods
mov
xchg
cmc
mov
dec
test
int
sub
mov
jl
dec
mov
xchg
cmp
xorb
xlat
or
std
loop
out
xorl
pop
adc
sub
or
xor
pop
sarl
mov
push
lret
sti
aas
adc
or
in
addr16
cmpsl
shl
movsb
aas
lock
in
inc
or
push
xor
aaa
mov
mov
sahf
repz
pusha
or
out
js
pushf
orb
ss
pop
mov
inc
sbb
shll
aas
pop
jmp
mov
mov
fs
jo
test
pop
or
inc
and
in
adc
loope
and
ret
cmp
stos
jmp
gs
push
push
int3
movsb
xor
xor
inc
cmp
sub
adcl
cmc
jp
sub
lods
jg
jae
jl
or
push
or
jp
xchg
jle
add
xor
mov
fbstp
movsl
sub
xor
lret
pop
mov
ret
xchg
adc
push
fimuls
addr16
js
xor
dec
ja
jae
mov
mov
in
int3
js
iret
js
inc
dec
jmp
or
bnd
cmp
int
in
xor
add
mov
fisubrs
daa
scas
fistpll
sub
cmp
mov
xchg
xlat
dec
mov
hlt
add
sti
inc
pushl
cmpl
dec
aad
lcall
pushf
mov
shl
shrb
and
push
fsubrl
in
jmp
ja
xor
lock
inc
adc
sub
adc
dec
in
cwtl
pminsw
xrelease
fcoml
test
mov
outsl
mov
lea
pushf
fmulp
ja
mov
jo
test
mov
adc
mov
inc
sahf
lahf
mov
aas
bound
in
sti
pusha
leave
push
fbstp
rcl
icebp
repz
xchg
iret
and
fdivl
jmp
mov
fxch
daa
pop
jmp
fcmovnbe
dec
jb
aaa
sbb
stc
sbb
mov
pop
cmp
push
sbb
xchg
jo
mov
stos
sub
mov
push
negl
scas
jge
jle
push
or
adc
mov
add
xor
loop
push
sub
or
imul
cwtl
push
sub
dec
push
decl
inc
cmp
sbb
gs
lcall
mov
int
cwtl
fisubl
clc
les
mov
je
scas
rcl
jmp
sub
call
daa
cltd
fcompl
push
pop
cmp
sub
ja
pop
inc
sub
jb
sti
push
add
pmulhuw
retw
sub
jns
aas
sub
add
imul
insl
mov
int3
gs
and
fwait
addb
jge
xchg
popa
add
cmpsb
mov
fidivrl
or
rol
sub
icebp
jo
lret
jnp
dec
inc
mov
xchg
xchg
lods
and
enter
aas
xor
in
xor
fs
sub
cmp
pusha
cwtl
fst
imul
mov
lahf
pop
pushf
lods
push
out
lret
fstpl
clc
pop
testl
cmpsl
imulb
je
mov
inc
add
mov
les
or
mov
lret
jp
sub
cltd
xchg
shlb
sub
out
pop
fildll
andps
push
jnp
cld
cmpsl
enter
push
dec
sti
out
paddusw
dec
add
shrl
pop
pop
sbb
sub
jbe
push
adcl
mov
inc
daa
mov
das
sub
das
xchg
mov
stc
inc
jecxz
aas
stos
xor
leave
jl
sbb
mov
enter
repz
movsb
mov
inc
mov
pop
or
pop
add
mov
pop
out
cmc
jecxz
sar
frstor
cmp
push
pop
dec
push
test
cmp
cld
and
pop
shld
mov
rol
into
adc
xchg
cmpsb
cmp
fistpl
dec
popa
push
hlt
sub
rorl
imul
mov
sahf
loop
dec
je
mov
jle
cmpsb
push
dec
sbb
jp
in
jns
pop
dec
fdivrl
ror
push
or
ret
add
lahf
in
cmovg
mov
loope
into
movb
adc
or
pop
xor
mov
cmp
cld
jmp
repnz
cwtl
repnz
mov
add
inc
dec
test
sub
mov
test
in
mov
mov
out
push
fbld
push
movsb
outsl
ret
xor
adc
lods
jnp
aam
scas
pop
into
jg
inc
cli
push
xor
inc
inc
sub
mov
add
cs
inc
stc
jle
push
mov
cmpl
xchg
inc
adc
lcall
andb
cltd
and
stc
xchg
mov
inc
inc
or
and
push
loop
test
mov
jmp
bndldx
sub
movsb
xchg
cmp
push
push
add
adc
stos
sub
daa
mov
push
add
mov
repz
jbe
outsb
iret
insl
shll
mov
shrl
add
dec
and
rorl
inc
adc
and
shrl
mov
out
flds
loope
lods
or
jl
sbb
xchg
cli
cmp
adc
mov
add
mov
push
in
sbb
mull
mov
cmp
fdivs
enter
jl
push
add
push
xchg
in
and
imul
testb
inc
in
bound
enter
add
mov
daa
xor
cli
test
mov
lcall
mov
mov
popa
loope
notb
pop
pop
inc
mov
lret
subb
or
jae
fwait
sahf
xor
in
lds
cmp
or
int
ffreep
arpl
stos
sbb
and
inc
ljmp
mov
out
insb
push
lahf
add
mov
pop
cs
not
lods
mov
ret
mov
shll
jmp
push
dec
cmp
or
lret
mov
sub
pop
inc
ss
cs
in
filds
push
jae
dec
and
iret
test
aaa
mov
mov
or
lea
mov
lret
sahf
or
sub
addl
add
popa
fs
dec
xchg
loop
and
fcomi
mov
jg
pop
aam
stos
cmc
test
aaa
sub
or
scas
inc
sub
push
xor
mov
jg
mov
jne
das
add
pop
sub
mov
xor
xor
stos
js
sbbb
int
mov
rcl
mov
mov
negb
dec
adc
loopne
inc
and
mov
jno
inc
lret
jno
je
das
xchg
push
pop
push
sti
pusha
cmp
pop
xchg
lret
js
imul
adc
insl
cmp
xchg
sbb
mov
and
test
daa
sub
outsl
dec
js
dec
xor
daa
pop
mov
xchg
jecxz
pop
test
outsb
cmovge
add
lcall
fdivrs
and
lahf
sub
mov
daa
mov
lret
push
in
cwtl
jge
fmul
jle
arpl
enter
int3
in
xchg
roll
xchg
and
fcomp
cli
out
scas
fnstsw
rorl
pop
das
or
mov
xchg
jle
mov
stos
xor
mov
pushf
or
js
adc
aaa
cltd
ja
fstpt
imul
mov
divb
sub
ds
mov
fstpl
call
out
out
jl
jno
test
loop
inc
sbb
out
mov
stos
and
outsl
inc
add
xor
lret
mov
test
and
mov
ja
xchg
jmp
sti
push
cli
ljmp
cmp
shrb
shl
cmp
xchg
daa
notl
jae
push
addr16
inc
ss
add
loop
pop
cli
xor
test
xchg
pop
lret
mov
mov
or
lock
nop
xor
outsb
pop
xchg
lds
cmc
xchg
mov
into
std
arpl
and
inc
jb
js
or
sub
mov
lahf
shl
out
outsb
mov
dec
ret
fisttps
cmpsl
push
out
call
xchg
les
mov
mov
xor
or
push
pop
in
push
imul
popf
dec
js
pop
testb
dec
frstor
scas
sahf
out
lock
test
icebp
jg
ljmp
int3
sti
and
sbb
shll
lea
aaa
adc
insl
roll
and
push
push
lcall
dec
test
out
xor
push
test
les
mov
fwait
push
stos
test
xor
sbbb
hlt
xchg
movsb
test
nop
mov
stc
lret
fstpl
dec
push
test
inc
pop
lret
jmp
popa
leave
add
paddsw
cli
and
inc
les
lret
or
adc
cld
mov
cmpsb
sbb
pushf
sub
adc
push
stc
and
pop
popf
mov
jbe
jns
insb
mov
mov
mov
sar
and
jne
shlb
mov
mov
jno
neg
cli
jge
sub
imul
mov
mov
pop
jno
out
ja
pop
and
push
sbb
mov
pop
lcall
es
pop
ljmp
xor
add
jne
cmpsb
sbb
or
inc
leave
shr
das
enter
lret
xchg
cmpl
mov
divb
filds
out
das
lret
and
mov
jp
fs
xor
push
push
push
dec
xchg
adc
into
dec
sbb
push
lea
mov
or
std
les
pop
sub
int3
js
dec
pop
jle
pop
and
mov
pop
and
xchg
push
cli
inc
jns
ljmp
ret
loopne
scas
imul
xor
mov
cmp
inc
mov
fwait
jno
sub
mov
cmp
sti
sti
add
js
jmp
add
test
push
insl
int3
pushf
xor
loopne
sbb
cltd
cmpsl
mov
pusha
pop
push
fnstsw
loopne
jl
fistpll
pop
lret
out
sbb
dec
and
pop
add
xor
lock
movsb
cmp
addr16
mov
fcomip
and
inc
orl
adc
jbe
xor
mov
or
movsl
icebp
push
dec
push
loop
mov
push
mov
into
inc
enter
fucomip
add
inc
push
cmpsb
movsb
std
test
sub
scas
dec
sub
outsb
adc
fdivrl
add
dec
cmp
and
clc
idiv
adc
or
jbe
or
cmp
pop
call
sbb
or
imul
cmpsl
sahf
mov
jae
cmpsl
sub
sbb
fmul
lcall
fisubrl
fildll
andb
mov
cmpsb
push
ljmp
sahf
int3
js
mov
dec
inc
fwait
sub
push
xchg
xor
sub
sub
jecxz
pushf
sub
lahf
mov
movsl
in
cmp
ja
bound
jle
cmp
icebp
dec
xchg
loopne
mov
push
jmp
add
dec
aam
daa
mov
push
dec
sti
iret
fstps
aad
loopne
jle
rcll
ret
or
enter
add
outsl
xchg
ret
fadds
push
lock
xchg
lods
mov
adc
mov
or
mov
xchg
test
or
stc
les
mov
frstor
test
push
xchg
shll
in
or
mov
into
push
js
lods
dec
stc
test
dec
jmp
fdivs
cmp
out
mov
push
inc
cmpsl
cmpsl
fistpll
out
push
loopne
inc
mov
push
pop
sub
movsl
andb
out
ret
loop
jl
cmp
lock
dec
lods
jnp
negb
aad
jb
incb
int3
dec
cmpsl
mov
pop
xor
pop
cmp
mov
cmp
jp
push
popf
rcrb
mov
test
inc
movsb
push
mov
cmpsb
xor
aaa
mov
sub
es
lcall
jno
cld
insl
mov
popa
leave
adc
push
sbb
inc
xchg
pop
js
and
jecxz
xchg
fsubl
scas
xor
shll
rcll
sbb
rcrb
adc
mov
mov
pop
push
mov
ss
out
daa
iret
dec
test
or
mov
dec
ficoml
out
jbe
and
sub
cmp
pop
pop
mov
sbb
aam
lret
push
or
cwtl
push
or
or
js
outsl
imul
xchg
fcompl
mov
sti
pop
push
jge
mov
mov
je
clc
inc
mov
movsl
or
outsl
lods
gs
sarb
hlt
jns
pop
into
push
pushf
adc
aaa
stos
cmp
sub
pop
ljmp
popf
or
idivl
adc
stc
cmp
inc
xor
and
int3
in
aam
stc
sahf
dec
adc
mov
inc
sbb
arpl
sbbb
int3
cltd
mov
sub
inc
cmp
gs
shll
cwtl
mov
bound
daa
icebp
hlt
and
and
and
lods
into
mov
mov
push
mov
cld
mov
fists
test
cmp
jb
xor
insb
loop
es
sti
pop
pop
nop
push
mov
out
sbb
xor
inc
jmp
xchg
aas
js
lcall
iret
mov
jae
mov
addr16
jle
sarb
or
jl
insl
add
lds
pusha
adc
jno
add
inc
rol
or
lods
xchg
add
dec
bound
aas
adc
loopne
pop
mov
sub
add
mov
leave
xchg
fs
cmp
aaa
mov
mov
enter
sub
lcall
js
jb
push
mov
fisubrl
xchg
mov
je
ret
fnstcw
out
cld
inc
pop
mov
rol
enter
fs
lahf
and
pop
xchg
cmpsb
out
mov
in
dec
or
xchg
mov
cmp
bound
sub
fwait
dec
xchg
jns
jge
adc
pop
xchg
aam
sub
lret
or
dec
mov
imul
in
mov
fneni(8087
daa
or
pop
out
xlat
sti
je
cmp
mov
pusha
push
aas
pop
add
adc
xor
pushf
pop
outsb
cmp
js
fcmovnu
inc
mov
xchg
rcr
rcll
mov
adc
stc
add
push
lods
lods
cmpsl
outsl
je
pop
mov
outsl
push
push
jp
das
iret
cmc
popa
dec
out
and
ss
fsts
jmp
in
inc
into
mov
movsl
jno
loop
sbb
sahf
cltd
inc
outsl
inc
dec
pushf
sub
jb
mov
loopne
pop
out
mov
outsb
popf
cld
and
shlb
shl
call
imull
dec
iret
fcompl
mov
jl
cmp
cmp
out
test
stos
daa
lds
hlt
aas
adc
call
sub
xchg
aam
call
ljmp
es
jb
xchg
dec
stos
and
push
adc
or
inc
in
xchg
cmpsb
hlt
pop
cld
cmp
pop
sub
or
in
xor
sbb
mov
adc
shll
hlt
sub
test
sbb
out
xor
test
bound
test
cs
mov
test
ret
test
fwait
arpl
mov
movsl
sbb
fbstp
loopne
inc
cmpsb
mov
mov
shrb
add
sbb
cli
movsl
mov
aaa
jecxz
add
pop
ljmp
scas
sbbl
dec
jmp
insl
mov
or
popa
or
stos
add
add
aam
pushf
sub
sub
stos
outsb
xor
popf
inc
adc
mov
orl
sbb
cli
mov
mov
jbe
mov
int3
adc
iret
lock
push
int3
fstps
loopne
cmpsl
xchg
xlat
bound
push
sbb
sarl
and
testl
inc
inc
lret
mov
mov
pop
addr16
jl
clc
pop
cld
sti
test
rolb
int3
call
std
fnstsw
jmp
xchg
pop
mov
push
xor
lret
ret
out
mov
test
leave
test
push
es
idivb
mov
cmp
mov
iret
add
push
sub
push
gs
or
icebp
jae
mov
xor
call
jge
loopne
cmp
cmp
lea
fwait
pop
imul
stos
in
sbb
add
xchg
adc
mov
cwtl
sbb
scas
rcrb
insb
lret
cmp
popa
cmp
adc
fld1
cmp
lea
xchg
lret
push
shll
mov
hlt
cmpb
jecxz
dec
fimuls
dec
in
add
daa
xor
ja
lret
fnstcw
add
or
xor
pop
push
pop
dec
icebp
pop
addr16
sub
fdivrl
js
inc
call
je
mov
and
jge
popa
pop
fstpt
cmpsl
pop
icebp
cmp
inc
sbb
movsl
jns
loop
pushf
add
adc
fmuls
scas
sbb
jge
imul
push
call
inc
std
loopne
insl
sbb
pop
adcb
ror
pop
pop
loopne
cmp
and
testb
je
sub
cmpsb
cs
jp
push
aas
or
jg
xor
sti
xchg
push
das
jnp
hlt
mov
fwait
subl
imul
pop
lea
mov
mov
loopne
mov
and
test
js
insb
std
imull
scas
dec
sbb
jnp
adcl
hlt
push
shlb
jno
mov
dec
sarb
dec
dec
es
movsl
test
push
inc
jp
and
jg
jns
or
xor
pop
notb
pop
jp
jne
dec
jo
jbe
adc
mov
into
psllq
pushfw
divb
mov
addr16
add
inc
sub
xchg
mov
fisttps
adc
lcall
mov
or
insb
aas
sarb
into
mov
dec
les
daa
or
xchg
stos
inc
rclb
dec
ja
in
pop
loop
sub
xchg
icebp
jnp
enter
test
cmp
xorb
xlat
mov
repz
outsl
inc
lret
sbb
cld
add
insb
sbb
gs
sti
ljmp
push
pop
arpl
aas
arpl
inc
mov
or
fisttps
insb
std
movsl
push
dec
sbb
inc
sbb
xlat
dec
outsb
push
into
jge
xchg
fldl
mov
aam
xchg
icebp
add
fwait
mov
sahf
in
mov
push
scas
iret
dec
pushf
jg
pop
push
aad
addr16
ja
sbb
int3
dec
imul
mov
mov
inc
mov
out
add
xchg
je
test
pop
les
xchg
test
sub
mov
pop
sub
pop
sahf
xor
and
mov
cmp
fcmovnbe
mov
ftst
xchg
test
push
or
or
add
jg,pt
mul
mov
nop
cmovno
fists
inc
mov
sbb
icebp
add
dec
inc
les
sub
or
sahf
pushf
pop
jmp
std
mov
enter
mov
xor
pop
sbb
pusha
mov
aad
je
shll
rcrl
outsl
imul
lretw
sub
mov
insl
dec
ss
xchg
mov
ja
popf
inc
sbb
data16
or
cli
outsb
les
call
scas
inc
cmp
fidivs
push
sub
add
je
mov
xchg
sub
rcrl
call
jmp
sbb
loop
jne
imul
and
mov
adc
sub
pop
stos
pop
aad
cmpsl
fstpt
cmp
fxsave
mov
xchg
cmc
sub
mov
rol
inc
cmp
pop
xlat
mov
sbb
popa
add
dec
aad
dec
mov
pop
xchg
out
pop
xchg
icebp
push
or
add
jb
out
rorl
ficoms
push
into
xchg
xor
into
in
pop
cmc
cmp
jo
and
cmpsl
movsb
pusha
sbb
mov
lahf
dec
and
xchg
or
sbb
lret
roll
loope
in
hlt
fdiv
xchg
and
in
mov
cmpsl
pop
push
call
bound
inc
sbb
mov
jmp
mov
pop
movsb
xchg
xchg
mov
or
sbb
nop
insb
or
jg
in
nop
lahf
mov
and
dec
xor
les
aas
inc
and
popa
xor
or
cltd
xor
mov
movsl
movsl
xchg
push
sbb
imul
ss
fisttps
test
and
int3
push
mov
imul
pusha
pop
mov
lock
daa
and
inc
mov
mov
ds
fdivs
fisttpll
xchg
cmp
mov
icebp
or
and
jmp
xchg
clc
outsl
addl
aaa
fistl
jg
into
dec
cmp
pop
out
xchg
mov
push
nop
or
es
pop
xor
cmp
insl
loopne
test
loop
sahf
inc
or
inc
xchg
lds
ss
ja
clc
fs
add
dec
jp
ja
jnp
jb
fisubrl
shrb
pop
mov
xchg
scas
divl
aas
mov
int3
xor
movsb
inc
rol
inc
mov
and
cmp
sub
dec
iret
div
or
fwait
jmp
jb
popa
scas
cs
mov
adc
jecxz
sbb
sub
jmp
popa
insl
int3
mov
shll
aad
add
outsb
mov
add
mov
pop
xchg
lea
xchg
stos
mov
sahf
loopne
clc
mov
shrl
mov
iret
push
cmp
adc
sbb
add
jno
leave
scas
dec
popa
pop
in
mov
test
mov
mov
fwait
jb
insl
and
bswap
mov
in
cmp
pop
enter
xor
sahf
out
fcoml
xlat
xor
daa
jp
arpl
cmp
fidivrl
push
filds
inc
xchg
push
sub
ljmp
sahf
push
aaa
mov
cld
push
insb
js
stos
idiv
push
int
adc
insb
push
loop
dec
scas
and
imul
jmp
call
xchg
inc
pushf
push
sub
sub
jbe
popf
or
js
push
cmp
cli
mov
add
in
mov
mov
bound
in
sbb
sub
shlb
and
pop
jno
push
shl
int
fcomi
ret
imul
lock
xor
ss
rorb
cltd
xchg
jecxz
ja
adc
xchg
cltd
lahf
mov
arpl
adc
shlb
sub
dec
xchg
clc
or
sub
loop
mov
cmp
mov
test
lds
sbb
loop
jns
or
lahf
sbb
mov
mov
xchg
call
jg
inc
cld
or
enter
mov
mov
cmp
lods
pop
xchg
dec
in
sub
push
test
push
fisttps
imul
jo
mov
push
test
jbe
jge
xor
popf
push
ret
stc
nop
aaa
xchg
pop
jnp
pop
jae
div
and
hlt
adc
push
scas
mov
daa
aaa
out
sahf
push
aas
adc
cli
je
mov
push
cli
xchg
and
not
aam
sahf
xchg
leave
fisubrl
sub
rcrb
movsl
dec
adc
or
xor
cmpsb
fsts
sti
aas
push
jmp
ds
jno
adc
punpckldq
repnz
sub
xchg
daa
mov
mov
push
inc
xchg
jp
dec
loope
into
inc
je
adc
mov
test
rcl
pop
mov
xchg
int
xor
inc
lahf
mov
insb
mov
scas
ret
xchg
push
fimuls
gs
xchg
jecxz
popa
fidivrs
or
test
pop
out
or
fcmovu
je
adc
add
aaa
push
and
or
push
and
rcll
lods
xchg
adc
push
sbb
and
leave
cmp
mov
push
pusha
mov
bound
or
add
lock
or
add
imul
pop
push
hlt
mov
push
shrb
fs
mov
mov
aaa
shll
aad
mov
mov
icebp
fsubl
in
ds
and
aas
std
lods
and
cmp
pushl
dec
mov
mov
adc
inc
or
imul
daa
push
push
inc
or
out
outsl
aas
mov
outsl
rcl
jbe
movsl
and
out
push
mov
fistl
push
add
jns
sbb
push
call
pushf
aad
inc
out
lds
ljmp
xchg
outsl
jnp
jnp
mov
jne
xchg
mov
mov
push
jmp
pop
xor
outsb
mov
daa
jno
jb
inc
loope
jp
loope
lcall
rcrb
icebp
adc
mov
xor
sbb
es
jne
cmp
fld
stos
push
adc
jb
and
mov
fcom
sub
lods
xor
add
or
testb
jno
or
pushl
notb
out
pusha
test
jo
imul
add
push
in
addr16
ret
mov
aas
mov
xchg
ds
mov
iret
cmpb
out
or
xor
lock
in
stos
fwait
das
and
or
and
jmp
jnp
xchg
insb
sarb
inc
aaa
out
dec
js
push
out
or
aam
test
cli
ljmp
mov
pop
add
and
dec
pushf
fisttpll
cs
jbe
mov
push
xchg
lods
out
cmpsl
mov
sub
pop
insl
jnp
pop
fadd
or
cmc
rep
popa
aas
mov
xchg
dec
lods
bound
adc
test
lret
test
or
pop
mov
int
jno
jmp
cmp
je
repnz
int
das
add
mov
xchg
pop
mov
xchg
push
cmp
mov
adc
pop
cmp
jnp
mov
imul
push
jb
dec
push
std
scas
inc
dec
shlb
push
xchg
cmp
jle
jno
ret
fimull
pop
insl
mov
lret
mul
mov
push
push
loopne
cmpsl
rcrl
add
dec
pop
pop
or
dec
pusha
and
mov
addr16
push
xchg
mov
loope
idivl
loope
int
push
loop
cmp
cmp
es
fwait
leave
sbb
stos
cmpsl
dec
sub
lidtl
push
std
jp
into
fmul
adc
lcall
testb
xchg
ja
pushf
jg
leave
xor
pushf
outsb
in
dec
jnp
or
and
stos
xchg
mov
pop
inc
cld
inc
subb
repz
out
cwtl
icebp
popa
or
lds
or
or
and
mov
inc
pop
pushf
dec
rcll
jle
pop
or
sti
xchg
mov
divb
push
jnp
cmpsl
popf
pushl
addr16
aam
xchg
scas
xor
jnp
ljmp
dec
inc
dec
adcl
movsl
sbb
fs
js
dec
fs
inc
cltd
jl,pt
mov
pushf
int3
sbb
mov
icebp
jmp
leave
sbb
pop
shl
mov
loope
add
fwait
jp
leave
in
or
call
mov
push
push
push
jb
cmp
loope
fcomps
push
test
pushl
jno
sbb
out
int3
lret
xor
aam
mov
add
mov
nop
mov
int
and
pop
add
mov
jae
mov
mov
repz
je
xchg
xchg
lods
jge
pop
xchg
pop
xchg
cmpsb
pop
jecxz
sti
stos
xchg
es
in
mov
xorb
fnstenv
mov
adc
mov
sub
call
dec
cmp
xor
je
mov
lods
inc
call
mov
out
dec
xchg
cmc
loop
mov
dec
lcall
mov
xor
movsb
sub
dec
lea
mov
imul
jg
mov
stos
inc
xchg
dec
pop
mov
sub
ret
sbb
sub
push
push
idivl
mov
decb
out
adc
push
add
xchg
shrl
and
sbb
sbb
sbb
cmpsb
jnp
rolb
dec
pusha
imul
nop
cld
jg
loope
repz
cmp
test
pop
into
fldenv
rorl
pop
in
movsb
sbb
cmc
push
in
mov
adc
jmp
push
lret
lret
mov
mov
dec
xchg
sbb
call
pop
dec
mov
jp
sub
add
xor
jae
faddp
adc
mov
cld
xchg
mov
repnz
aad
sbb
inc
or
aam
aad
cltd
stos
in
ds
or
repnz
fbld
fistl
movsl
loope
repnz
shl
sub
mov
in
arpl
and
ja
mov
outsl
stc
add
dec
addr16
push
xchg
adc
sbb
shlb
lret
adc
mov
jno
insl
out
xchg
sbb
cli
pop
dec
jp
lea
jmp
sub
int3
adcb
lds
cmp
test
cmp
pushf
push
daa
fnstenv
popa
arpl
js
and
push
sub
jbe
jnp
fsubl
jmp
insb
ret
insl
pop
pop
testl
xchg
cwtl
lcall
pop
push
mov
jecxz
jmp
mov
testl
icebp
cmp
jo
inc
pushf
faddl
bound
push
jno
push
out
and
out
test
fcomi
subl
push
xor
dec
test
addr16
sbb
imul
pushf
dec
sub
cmc
mov
and
and
fxch
push
shlb
cmp
sub
push
lahf
out
xchg
cs
lock
sub
dec
out
jbe
inc
and
sbb
ret
orb
sti
sbb
pop
lahf
je
inc
outsb
out
cmp
push
aad
in
push
movsl
mov
xchg
push
xlat
add
inc
pop
pop
test
cs
gs
je
xor
ret
jo
imul
ss
int
lds
xchg
sub
aam
stos
mov
ljmp
push
in
jmp
mov
and
shrl
mov
mov
xor
mov
fwait
lret
sbb
cli
mov
push
adcb
inc
pop
cld
jae
ffreep
daa
lret
into
mov
in
outsb
cmp
insb
and
shrl
pop
xor
add
xchg
push
daa
push
pop
out
loop
sub
stos
sbb
pop
pusha
pop
xor
fsts
cli
sbb
aad
dec
iret
bound
movsl
or
mov
mov
mov
mov
ret
test
stc
test
push
aam
or
inc
adc
adc
push
pushf
sub
scas
add
repz
ja
in
in
sti
aad
adc
ret
push
lret
ss
xchg
leave
push
ffree
lock
cmp
pop
mov
dec
std
push
jecxz
xchg
pop
jmp
clc
sbb
mov
ljmp
sub
data16
xor
clc
mov
movsb
mov
fbstp
pop
jg
andl
adc
or
insl
adc
mov
mov
jno
pusha
test
xchg
xchg
sbb
fmulp
push
ja
jmp
or
es
je
jno
std
inc
xchg
jecxz
pop
cmp
out
scas
jnp
fdivrs
mov
lea
repnz
mov
jno
daa
cltd
lds
loop
mov
shlb
shrb
or
cmp
out
or
and
mov
enter
cld
scas
push
lret
and
cli
and
mov
lds
rcl
jg
jecxz
or
adc
sub
jge
adc
loope
xchg
dec
adc
or
stos
int3
movsb
mov
mov
cmovb
jge
and
and
outsb
fimull
sar
dec
fisubrs
cmp
sub
dec
lods
movsl
push
dec
jno
jl
sub
inc
stc
mov
pop
cmp
pop
xchg
outsl
xor
and
xchg
fwait
cmp
pop
sub
xchg
mov
cli
jmp
adc
pop
and
repnz
mov
decb
xor
jbe
adc
fcmovne
sbb
aaa
push
das
int3
data16
or
je
pop
rcrl
aam
adc
or
or
aam
or
movsb
cmpsb
inc
and
shl
inc
push
rorb
popf
inc
jge
fwait
mov
xor
ficoms
add
dec
int
sahf
mov
lds
jle
pop
pop
popf
lock
test
or
push
xor
hlt
std
jnp
pop
jp
push
mov
int3
xchg
insl
mov
push
cwtl
nop
leave
cmc
mov
mov
xor
add
shll
clc
or
sbb
push
shl
and
sbbl
data16
push
fucomp
xchg
xchg
jle
pop
test
data16
bound
js
fstpt
and
add
popf
movb
imul
hlt
rcr
daa
jmp
gs
call
pop
mov
adcl
stc
loop
jbe
adcl
jno
or
js
push
lock
sti
subl
fisttpll
jae
add
sub
out
dec
shl
loop
loop
sarl
movsl
rcr
stc
out
sub
mov
loope
pop
inc
aam
loope
mov
enter
out
cmp
adc
outsl
lods
adc
push
jp
in
out
jbe
and
inc
loopne
and
sbb
cs
mov
int
cltd
sbb
das
xorb
ljmp
or
xlat
call
mov
xor
call
mov
jbe
insb
ja
push
pop
jns
dec
xchg
ja
fadd
faddl
lock
push
cli
insb
rorb
stos
mov
rcl
insb
pushf
ficomps
rep
mov
sub
jecxz
rcrb
adc
js
js
dec
rcrb
fcom
adc
movsb
je
mov
mov
inc
pop
or
xor
xchg
cltd
push
dec
xchg
or
call
dec
cmp
inc
xor
dec
rcll
cmc
sub
mov
mov
sbb
mov
leave
call
mov
add
outsb
enter
cmc
lock
gs
mov
sub
ds
fidivrl
push
pop
xlat
add
mov
push
orl
in
xchg
out
mov
adc
ja
xor
fwait
pop
int3
push
mov
or
jae
cmp
or
lret
inc
push
clc
push
icebp
gs
xorb
lcall
push
roll
adc
les
pop
add
inc
lock
pop
outsb
mov
por
sub
std
popf
jg
jge
fbstp
pop
jle
jns
cltd
jno
xchg
jmp
adc
int
in
rclb
out
lcall
inc
push
push
cli
xor
mov
mov
das
inc
lds
mov
cs
lods
xchg
stos
add
movsb
jmp
or
andb
jmp
je
mov
andl
int
cli
push
xlat
adc
cs
jne
popf
nop
je
pop
arpl
adc
xor
addl
insb
push
fistps
dec
ret
scas
cmpsl
es
nop
mov
jmp
mov
cwtl
dec
fnsave
and
jmp
cmp
adc
fistps
test
test
inc
les
ss
lret
jle
sbb
dec
add
lret
aam
je
lods
xchg
sub
jg
cmc
xchg
xlat
addr16
stos
dec
sbb
stc
cmp
dec
push
andb
xor
data16
dec
jmp
xlat
xchg
shlb
and
sbb
arpl
sahf
xchg
mov
adc
sub
pop
shl
sbb
jle
xor
loopne
mov
push
pushf
adc
shr
nop
out
pop
mov
cmpsl
lds
mov
addr16
imul
cmp
addr16
andl
jo
mov
inc
andb
js
stos
ret
sub
js
sub
mov
jmp
in
loopne
rcrb
testb
repnz
imul
sbb
mov
jns
or
stos
rcll
sub
fs
add
movsl
aaa
fadd
jbe
cmpsl
jae
mov
test
jb
and
call
dec
ss
sbb
mov
in
cwtl
push
repnz
test
lret
mov
or
das
and
adc
pop
mov
sbb
or
ljmp
cmpsl
imul
xor
xor
xchg
cmp
push
je
dec
lahf
cmpb
sbb
add
add
out
inc
movsb
add
inc
cmp
dec
ror
nop
inc
xchg
mov
scas
sub
cmp
jl
jnp
sbb
clc
stc
nop
movsl
ret
fidivrl
in
inc
mov
mov
and
add
lret
cmp
xor
enter
movsl
gs
jb
adc
int3
or
cmpsl
jge
pop
scas
popa
ror
sub
aam
das
mov
clc
inc
int
aad
test
bound
imull
ret
das
ficoms
dec
add
or
aam
and
je
sbb
shrb
adc
jb
jg
testl
push
jmp
je
lret
jp
call
xchg
adc
paddusb
add
xchg
sub
lods
outsb
xchg
test
pushf
arpl
lret
icebp
dec
ret
fdiv
push
cld
xchg
xor
aad
out
mov
jge
cmc
int
arpl
mov
mov
jp
jge
xor
inc
mov
ljmp
dec
mov
out
fwait
dec
popf
mov
arpl
cs
repz
mov
cmp
inc
xchg
std
shll
add
dec
pop
or
je
pop
pop
xor
in
pop
adc
sub
sbb
adc
push
loope
inc
sub
vunpckhpd
mov
cmp
out
jns
cmp
es
dec
enter
daa
aaa
xor
pop
xchg
cwtl
and
sub
aad
sub
les
xchg
movsb
jmp
ss
cmpsb
fcmovne
jae
lock
fdiv
ret
or
shlb
sub
cmpsl
in
push
sbb
fdivrs
sbb
and
das
push
mov
sub
sahf
lock
stc
scas
mov
lods
mov
mov
nop
cmpsl
pop
movsl
lret
cmp
dec
fdivrs
xchg
popf
adc
jb
jmp
jp
cmpsb
pop
jns
shlb
lock
in
adc
push
cli
outsb
pop
pop
mov
mov
in
sbb
push
mov
mov
mov
xor
sbb
pop
lret
and
scas
icebp
pop
xchg
test
lret
roll
cmp
or
rclb
pop
adc
inc
inc
lods
xchg
cmpb
cmc
xchg
mov
popf
fs
push
xor
inc
scas
dec
bound
dec
imul
xchg
or
ror
repz
inc
hlt
loopne
out
inc
mov
sahf
or
mov
push
ss
push
xor
outsl
scas
xlat
les
ds
mov
outsb
bound
push
fcmovu
repnz
outsb
jbe
add
lea
dec
pop
cmpsl
inc
fisttps
jbe
dec
add
adc
dec
inc
mov
xchg
pop
int
cs
jmp
cmp
pusha
dec
xor
or
sbb
cs
fwait
jge
mov
push
adc
je
or
cmp
mov
mov
aas
les
aas
or
xor
dec
push
int
gs
mov
negl
cli
pop
adc
lea
shl
scas
mov
out
loopne
sbb
outsb
sub
mov
inc
mov
stc
push
or
addr16
xor
pushf
scas
pop
cmpsb
pop
xchg
jne
ret
test
mov
jnp
sbb
jl
mov
cmpsl
ror
adc
jl
ss
icebp
mov
jmp
inc
hlt
xor
outsl
or
push
jge
insl
inc
arpl
icebp
push
mov
lods
sub
cld
add
xor
inc
inc
addl
mov
jno
sbb
lock
cli
and
outsb
cmp
cmp
push
inc
scas
mov
stos
xor
fnstsw
pop
xlat
push
push
xchg
inc
rcrb
adc
negl
mov
imul
aas
jae
divl
in
xchg
push
insl
outsb
sbb
sub
push
xchg
mov
sbb
jbe
and
mov
popa
push
push
lahf
shlb
out
push
test
pop
dec
xchg
cmc
jmp
push
stos
rorl
repz
push
aas
or
jb
sbb
rcl
inc
dec
jl
les
sbb
jb
lret
jg
sub
pop
fcompl
inc
cmp
out
xor
jg
xchg
shrb
jl
sbb
jecxz
jnp
push
xchg
xor
push
dec
inc
xchg
and
inc
push
pop
xchg
fmuls
out
push
aaa
xchg
jne
fs
push
out
jo
jle
lods
loopne
and
cmp
adc
int
data16
mov
mov
sahf
mov
inc
mov
xchg
dec
jno
fildll
addr16
adc
adc
xchg
mov
jo
push
inc
cmp
dec
or
ljmp
or
test
int3
idivb
mov
pop
mov
scas
xchg
cmp
cmpsb
add
push
pop
mov
mov
mov
repnz
gs
xchg
ficomps
adc
jo
mov
out
inc
cmp
mov
fldl
icebp
dec
pop
mov
dec
jnp
fsts
inc
inc
pop
shll
jns
loopne
and
in
mov
add
jo
xor
and
into
xchg
fimull
push
jbe
loope
and
cmp
or
xchg
sub
pop
cmpsb
fsubrp
sub
addr16
lret
jge
sub
fadd
xchg
xor
insl
loopne
xlat
shll
imul
aam
mov
insb
cmp
mov
push
outsb
push
cld
mov
les
fwait
mov
sub
enter
sbb
and
pop
rcrl
cwtl
inc
lcall
sbb
mov
and
idivb
popf
push
test
test
and
add
sub
cld
cwtl
out
std
mov
add
add
jb
sbb
in
test
dec
mov
mov
call
mov
loopne
or
jle
sub
cmp
xchg
lret
icebp
add
adc
add
push
das
adc
inc
sbb
cmp
and
cmc
cmp
push
push
lahf
mov
fisubrs
inc
insl
or
pop
in
sbb
cmp
stos
popa
bound
inc
or
fistl
daa
push
sbbl
xchg
loop
sub
or
push
and
push
mov
mov
in
lea
jbe
sub
jecxz
and
fldenv
out
push
stc
sub
mov
mov
mov
xor
jl
cmpsl
or
negb
add
or
scas
int3
outsb
inc
cmp
dec
testl
cmp
in
es
sbb
fstpt
dec
into
pxor
sbb
fistl
inc
xchg
mov
into
push
jp
out
dec
sub
inc
mov
xor
out
jmp
dec
or
enter
mov
inc
push
pop
push
popa
jae
stc
out
shll
dec
sub
jae
adc
imul
out
and
cld
dec
imul
pop
pushl
aam
or
mov
fiaddl
push
and
iret
rolb
add
pusha
add
into
or
and
ret
push
pushl
fs
adc
fldl
xchg
mov
push
lds
ljmp
ss
stos
jp
adc
pop
test
mov
aaa
cmp
int3
add
dec
mov
sahf
pop
sbb
movsb
jmp
add
into
dec
cli
cmp
inc
inc
jno,pn
xlat
or
push
in
or
inc
inc
sub
divl
dec
out
outsb
mov
loopne
in
mov
cmp
xlat
ljmp
jmp
testb
gs
mov
aam
pusha
mov
or
iret
push
and
jae
add
movsb
cmp
cmp
jne
or
icebp
jl
and
jmp
push
mov
adc
pop
test
popf
daa
filds
sub
test
dec
dec
mov
mov
jo
loope
call
pop
mov
outsl
xor
mov
test
push
popa
rorb
push
push
clc
add
out
ja
xchg
jle
outsb
pop
cmp
push
cwtl
in
sub
jno
ja
fistpl
and
jbe
iret
les
std
fdivp
movsl
sbb
test
fwait
or
loop
cli
stc
xor
pop
xchg
out
and
push
outsl
cli
fs
js
mov
add
gs
xchg
imul
inc
insl
cmc
sub
sub
aaa
outsl
xchg
outsb
sub
add
xor
in
mov
aaa
xchg
jne
push
cs
insb
xor
mov
lock
pop
in
sti
cmp
xchg
xor
dec
fs
stc
pop
or
mov
add
adc
jnp
jns
cmc
gs
jb
push
test
pop
add
mov
jl
sub
pop
sub
dec
ja
mov
enter
stos
mov
cmpsb
sbb
enter
and
push
sbb
jmp
test
cmp
cmp
pop
inc
mov
lods
and
out
dec
cmp
push
sub
mov
dec
sahf
aas
ss
andb
lcall
in
and
sbb
dec
int
ljmp
jmp
int3
enter
fnsave
sti
test
ds
into
cmpl
inc
or
cmp
push
test
into
aam
add
outsb
mov
xchg
imul
mov
nop
jns
sub
lcall
rcll
inc
lcall
dec
mov
cmc
jne
js
mov
push
inc
mov
stos
subb
mov
pop
out
pop
cmp
jmp
imul
and
lock
outsl
daa
cld
inc
out
xlat
out
aad
adcl
dec
loop
in
scas
out
mov
cld
pop
fidivrs
cmpsl
push
rcrb
dec
rorb
push
ficompl
stos
sbb
fnsave
cmp
push
andb
out
lds
cmp
or
cmpsb
std
sbb
inc
cmpsl
xchg
hlt
dec
daa
push
ret
std
mov
imul
or
pop
in
sbb
cmp
mov
mov
cmp
iret
inc
sub
lahf
fidivl
sbbb
lods
fmuls
fistpl
jb
xchg
mov
sbb
dec
mov
lret
mov
push
roll
ja
cmp
cmp
jb
inc
aam
lret
dec
cmp
rcr
cmp
add
xchg
loop
cld
lods
mov
repnz
xchg
mov
push
ja
insb
cli
lahf
and
push
cmpb
jle
jns
enter
scas
jp
idiv
dec
fwait
dec
imulb
mov
mov
popf
and
daa
imul
mov
cmpsl
test
mov
or
in
inc
je
lds
mov
sti
insb
aas
sbb
in
loop
sahf
pop
iret
adcl
sti
inc
dec
dec
adc
bound
clc
iret
lds
arpl
add
and
into
popa
sbb
cld
mov
iret
scas
xor
pop
rcrb
xor
adc
addl
popa
cmc
pushf
movsl
movsl
sar
mov
or
popa
cmp
jbe
pop
int3
or
jb
in
add
push
cmp
dec
and
lret
imul
mov
cmp
lock
clc
xlat
scas
dec
jmp
dec
mov
sub
dec
inc
loopne
outsb
cmpsb
sub
movsl
xchg
push
cmp
cmovae
aam
adcb
pop
les
clc
sub
fsubrl
insb
pop
fcoms
mov
fiadds
fcmovu
adc
add
jmp
add
cltd
mov
push
jb
xor
adc
pop
pop
int
out
jle
adc
xorb
or
incb
ret
and
mov
add
cli
and
repnz
pushf
int3
out
test
aaa
frstor
aas
ss
leave
or
jbe
jbe
add
testl
fs
mov
sti
icebp
jo
adc
adc
sbb
dec
dec
xchg
aam
mov
sbb
cmp
std
sub
add
sti
rcl
and
call
mov
test
stc
dec
pop
cmp
ja
adc
mov
and
dec
repz
pop
pop
add
inc
jmp
cmp
sbbb
sub
cs
adc
inc
notl
cli
fdivrl
cld
sub
fldenv
movsb
and
cmp
lret
pop
loop
lret
outsl
in
add
xchg
mov
push
mov
mov
add
mov
rcrl
push
sub
cmc
icebp
and
lods
mov
mov
incl
daa
jecxz
repnz
mov
mov
jge
and
cmp
popa
jecxz
scas
mov
aaa
in
lcall
lds
xchg
dec
call
xchg
jo
pop
adc
pop
clc
roll
pop
add
lods
cmp
sub
insb
jae
push
in
imul
std
cmp
movsl
pop
jmp
dec
mov
pop
pushl
imul
adc
mov
addr16
clc
cmp
sub
scas
pushf
idivb
mov
mov
cmpsb
out
and
out
cltd
push
adc
pop
loop
or
daa
int
loope
hlt
fcompl
shrl
std
xchg
mov
cmp
test
xor
xorb
es
sarl
xchg
or
add
pop
lret
data16
andb
inc
sbbb
xchg
enter
lret
movb
rorl
sahf
cld
sbb
les
inc
xchg
xor
mov
xorl
pop
addl
sub
sti
popf
jbe
push
out
adc
enter
js
cmp
jb
shll
ds
out
pop
sahf
shrl
cwtl
xor
dec
jns
mov
pop
jmp
adcl
leave
pop
add
cmc
into
mov
mov
into
rorl
test
xchg
ret
sbb
sbb
sub
mov
and
xor
stc
mov
pop
or
pusha
rorb
mov
mov
insl
out
push
inc
sub
clc
pop
pop
loop
loope
xchg
stos
inc
shll
mov
rorb
vmwrite
sub
cmpsb
sbb
mov
inc
and
in
push
es
dec
and
movsb
iret
mov
ljmp
aad
add
ficomps
roll
adc
mov
dec
roll
lock
or
lret
cmpsl
pushf
add
push
push
push
ficoml
dec
data16
mov
mov
test
add
pop
sbb
mov
inc
icebp
jo
or
sub
lods
push
jnp
pusha
dec
xchg
lods
stos
hlt
sbb
pushf
in
push
sbb
jg
add
add
ds
pusha
leave
fucom
cld
xor
dec
or
inc
call
and
js
cltd
dec
rolb
fimuls
jbe
jg
mov
xorb
lds
jns
jge
mov
cmp
mov
sub
cmc
arpl
lret
lahf
stc
xchg
adc
inc
mov
and
fsubrs
and
jnp
push
daa
adc
pop
pusha
sar
inc
pop
or
repz
sbb
loopne
inc
sbb
pop
mov
cltd
dec
pusha
jl
das
xchg
aas
stos
xchg
sub
xorl
pusha
test
jecxz,pt
pop
pop
add
sbb
outsl
cli
aam
pop
mov
dec
xor
fadd
adc
mov
pop
mov
bound
xor
loop
xor
filds
xchg
repz
aaa
popf
inc
push
sarb
inc
xor
inc
sbb
push
test
dec
ds
shl
out
lea
dec
and
loop
ret
cld
adc
stos
mov
flds
push
mov
ss
sahf
cmp
cmp
add
inc
rcr
push
pusha
movsb
and
loopne
add
push
jl
lods
pop
mov
ret
roll
rep
fdivl
push
int3
xor
mov
dec
int3
fimuls
or
pop
adc
jbe
sub
sub
fildll
push
or
lahf
inc
sub
bound
xchg
jnp
insb
jmp
inc
les
dec
lods
insl
cs
insb
mov
lea
xchg
pop
icebp
aas
inc
into
or
roll
cwtl
imul
dec
fldcw
dec
outsl
fistpl
push
inc
sub
jl
pop
ja
pop
outsl
pop
aas
mov
xor
xchg
dec
push
adcl
pop
les
jno
lods
stos
inc
int3
stos
lds
push
test
pop
mov
and
scas
adc
jno
push
or
sti
pop
mov
inc
and
xor
inc
mov
in
cmp
xor
pop
imul
mov
inc
cmp
dec
sbb
out
call
ret
sbb
stos
rcl
fldenv
ret
mov
pushf
js
fistpll
aam
stc
cwtl
jmp
push
jns
fnsave
adc
mov
pop
out
ret
adc
xchg
imul
pop
ljmp
or
ja
pop
xchg
push
jne
lock
scas
or
gs
mov
mov
sbb
mov
mov
dec
mov
aam
fsubrl
fwait
mov
inc
fidivrs
jbe
sub
pop
mov
loopne
test
fmull
ss
inc
mov
pop
fwait
xchg
jne
imul
shlb
test
ss
push
and
xchg
inc
outsb
adc
add
test
xchg
dec
shll
or
adc
pop
dec
jle
loop
pop
mov
or
xchg
fldcw
push
out
gs
js
xchg
and
adc
push
and
xor
rcl
insb
jecxz
cmp
lcall
dec
cmpsl
stc
add
cmpsb
sbb
push
js
jb
pop
mov
subb
cmpsb
out
je
sbb
mov
lods
mov
icebp
dec
jmp
aas
jo
cmp
adc
sub
or
aas
dec
inc
inc
xor
jmp
and
jle
icebp
adc
xor
mov
sub
dec
sbb
scas
mov
push
mov
cmp
insl
sub
in
mov
cltd
lahf
adc
mov
dec
push
nop
pushl
jmp
inc
ror
in
cltd
orb
leave
mov
jo
jnp
ret
cltd
loope
testl
xchg
mov
shrl
jbe
mov
fsts
int
leave
int
loopne
adc
ret
dec
jae
adc
insl
divl
scas
pop
or
insb
int
fsubs
push
jp
and
test
bound
jecxz
sub
mov
sbb
mov
call
sahf
mov
jmp
adcl
jg
pusha
dec
push
pop
daa
or
mov
mov
dec
xchg
xchg
pop
cli
rcr
imul
add
das
fnstcw
dec
and
push
mov
icebp
mov
pop
mov
xchg
enter
or
fnstenv
mov
pop
adc
lock
nop
loop
xchg
aas
cs
outsb
jae
or
sbb
sti
mov
dec
mov
int
inc
jecxz
sbb
inc
mov
jo
sbb
sbb
cmc
dec
nop
roll
cmp
jns
add
jne
jne
sub
add
pop
mov
icebp
aam
out
sub
pop
orl
mov
sbb
mov
loope
jp
xlat
orl
adc
into
arpl
adc
xor
decl
cmc
leave
jb
popa
ss
jp
adc
inc
fisubl
dec
push
push
enter
pop
or
pop
sbbl
mov
cmpsl
mov
push
stos
lret
jno
fsts
xchg
sub
aas
adc
push
pop
xor
sahf
test
push
arpl
pop
pop
jg
adc
call
or
movsl
mov
ss
gs
add
leave
addr16
shl
nop
mov
xchg
pop
cmp
pop
cwtl
fiaddl
mov
outsl
cmp
ljmp
movsb
test
mov
pop
push
repz
lret
pushf
cltd
mov
cmc
pop
std
xlat
mov
ja
out
adc
mov
andl
mov
xor
push
xchg
pop
mov
pop
mov
cmp
or
adc
adc
lahf
movb
xorb
add
push
lea
orl
xchg
mov
clc
lahf
cwtl
leave
mov
test
daa
ss
jge
mov
and
push
pop
loop
rorb
rcll
dec
loop
outsb
in
mov
xor
and
jge
dec
icebp
pusha
sbb
addr16
mov
push
xchg
lods
rorb
jp
fdivrs
push
sahf
sbb
mov
ret
fs
and
gs
div
jbe
xor
data16
jle
jns
mov
xchg
stos
insb
jae
sbb
sbb
jmp
xlat
mov
mov
push
pop
sbb
das
sarl
lret
and
pop
out
mov
mov
rclb
mov
icebp
sbb
jle
fildl
insl
bound
fsubl
mov
mov
lea
decl
cmp
or
gs
lock
sahf
sbb
adc
fnstsw
and
imul
sbb
or
xchg
lds
out
stos
aad
loope
push
testl
rclb
out
mov
mov
dec
sub
sbb
xchg
dec
jns
pushf
dec
shrl
cmp
pop
pop
mov
dec
cs
mov
mov
imul
lahf
jp
push
subps
push
movsb
iret
adc
dec
fwait
pop
mov
jg
adc
and
cmpsb
push
cmpsl
jne
fndisi(8087
pop
out
mov
jle
push
loopne
movsl
cli
pusha
in
jmp
rcrb
ret
fwait
adc
and
jecxz
cltd
shll
loop
push
adc
int
mov
jb
xchg
sub
popf
adc
fdivrs
lds
sub
xlat
je
add
xor
iret
aaa
loope
inc
stc
cmpsb
jp
jge
ja
test
aam
imul
ss
fistpl
stos
cmpsl
xchg
shrb
scas
sbb
out
inc
dec
shr
add
fs
das
fmul
insb
sub
mov
stc
rcll
dec
pusha
sbb
test
loop
in
pop
rclb
cmp
jecxz
in
dec
xor
xor
mov
and
push
rorb
jge
jns
cmp
gs
push
out
or
mov
mov
dec
jb
lahf
pop
add
test
cld
cli
aad
mov
jmp
push
xor
cwtl
cmpsb
lds
pop
xorb
arpl
rorb
leave
sub
or
or
ljmp
xchg
stos
popa
sahf
fistpl
jo
xor
je
push
pop
test
push
or
cmp
sbbb
je
sti
scas
rcrl
addr16
fldenv
fcmovb
fs
iret
ljmp
pop
pop
push
lea
xchg
cmp
int
pop
add
fs
xor
loope
sbb
lock
movsb
sub
sub
repz
scas
scas
and
and
stos
xchg
jno
stos
adc
xor
dec
out
mov
jg
rclb
mov
dec
mov
or
fiaddl
cmp
xchg
push
popl
hlt
mov
push
xchg
rcl
movsb
sbb
pop
cmc
dec
in
movsl
aam
mov
pop
fcmovnb
cld
sti
insl
imul
ds
mov
imul
icebp
test
sahf
xchg
or
xchg
xor
sub
repz
mov
cmpsl
add
cwtl
dec
arpl
into
sbbl
push
add
arpl
push
daa
jge
repz
rcl
out
and
cs
sbb
in
cmp
jp
lds
cmpsl
sbb
pushl
jmp
xchg
mov
sub
xchg
lcall
std
xor
aam
jno
sti
sbb
cs
jl
cmp
popa
inc
in
loop
cmpsl
mov
enter
lea
lret
adc
cltd
sbb
aam
sub
stos
inc
call
movsl
xchg
add
aas
cmpsl
push
dec
xlat
pop
push
push
jmp
adc
js
fidivl
lds
lds
sbb
out
adc
dec
aad
addr16
adc
add
push
dec
shlb
push
xchg
lahf
cmp
mov
filds
jno
mov
mov
insb
sub
fs
cmp
adc
rcll
xchg
hlt
out
pop
dec
dec
in
rorl
dec
push
addr16
jo
pop
sbb
ds
and
cld
loope
and
adc
jns
mov
lds
test
test
and
mov
mov
into
push
fwait
lea
outsb
jo
cmp
jne
mov
pusha
aam
jmp
xchg
clc
fildll
adc
out
adc
mov
nop
xor
push
mov
mov
cld
push
popf
mov
mov
fs
sti
dec
xlat
pushf
add
fcoml
bound
imul
mov
adc
pop
cmc
cs
ret
pop
scas
int3
and
xor
stos
jnp
rorb
xor
or
shll
push
sbb
js
mov
adc
lret
shl
mov
mov
cli
je
adc
and
cmp
mov
cmp
shlb
sbb
cs
in
mov
fnstcw
mov
mov
in
notl
inc
out
jno
or
cmp
inc
stos
fstpl
in
jo
rcl
sub
sbb
orl
popf
dec
scas
cwtl
mov
adc
lcall
lcall
rorl
mov
div
push
jnp
jns
pop
shlb
jecxz
cmpsl
push
dec
cmp
xor
and
adc
mov
les
and
inc
dec
lds
jno
mov
sbb
adc
bound
sti
mov
les
or
and
dec
inc
in
ror
je
imul
scas
jle
subb
lahf
popa
lret
movsb
xor
sub
into
dec
and
or
data16
imul
add
jp
mov
xchg
sti
rcrl
or
rol
add
mov
shrb
dec
sbb
jle
shr
xor
mov
loop
or
mov
add
add
movsl
push
mov
lcall
and
repnz
inc
lods
loope
push
int
jbe
shrb
fwait
pop
jne
xchg
jg
adc
test
stos
into
ljmp
xor
inc
popa
in
cmp
lret
test
divl
mov
jo
into
sarb
jae
cmpsb
scas
and
push
push
mov
movsb
lods
and
pusha
xor
add
test
jae
mov
sbbl
nop
je
repz
cs
jmp
pop
sub
lcall
scas
sub
daa
shlb
lods
jmp
lds
fs
mov
sti
ret
testb
cmp
add
daa
rcrl
mov
jg
icebp
das
pop
push
repz
divb
arpl
cli
or
pop
adc
repz
xchg
add
push
xor
mov
int3
dec
mov
les
insb
dec
adc
popa
repnz
roll
es
aaa
push
in
add
enter
mov
test
push
aas
sub
xor
lods
int
mov
dec
mul
in
push
daa
je
addr16
sub
fcmovne
pop
mov
dec
imul
xchg
jne
out
cli
leave
mov
sbb
pop
sub
or
sub
shrl
mov
dec
cmp
cmp
addl
xchg
sub
movsb
cmp
outsl
lret
cld
push
mov
mov
pop
fwait
lods
dec
mov
cmpl
enter
jo
sti
push
jbe
lods
push
iret
xchg
mov
cmc
enter
push
mov
fcoms
arpl
lret
pop
mov
test
lcall
scas
fisttpl
shr
leave
pop
into
fbstp
stos
stos
adc
push
push
xor
dec
mov
int
mov
inc
mov
pop
fcompl
push
sub
std
mov
lds
add
lcall
pop
int3
stc
cmp
jb
mov
jp
daa
xchg
push
add
fisttps
filds
push
es
sbb
or
and
out
insb
out
xchg
test
adc
mov
enter
mov
jge
je
add
ds
dec
jbe
into
rorl
jnp
adc
sti
jmp
fisubrl
jb
lods
movsl
movsb
jp
xor
gs
sbb
int3
push
add
xor
arpl
pop
fsts
test
jl
add
jge
pop
mov
mov
jle
lret
inc
lahf
mov
in
hlt
lret
dec
notl
and
movl
mov
movsl
leave
jne
out
arpl
sub
mov
xor
std
stc
divl
jl
movsb
mov
mov
sahf
mov
insl
xor
or
xor
loope
insb
push
mov
lret
xchg
dec
lds
lods
xchg
xor
sbb
or
pop
repz
pop
pop
dec
or
imul
cmc
dec
clc
daa
shrb
sub
insb
data16
jne
insl
fidivl
cld
addr16
ljmp
mov
pushf
rcrb
bound
xorb
rclb
dec
stc
pop
mov
jae
lret
fs
push
test
xor
xor
lea
imull
cmp
pop
xchg
rcr
jno
mov
cmc
in
gs
mov
adc
bound
jp
mov
inc
adcb
mov
hlt
cmp
rcll
jmp
mov
sub
in
mov
jl
stos
lock
frstor
stos
mov
call
add
mull
in
xchg
xchg
fnstsw
push
xchg
imul
jb
bound
push
inc
jb
push
into
xchg
push
hlt
out
xchg
or
arpl
es
xchg
es
mov
mov
push
and
sahf
rorl
push
inc
jecxz
test
inc
adc
mov
adc
cmp
mov
sbb
add
pop
inc
int3
mov
clc
jg
mov
dec
mov
fnsave
push
rcl
xor
fisttpll
movsb
js
js
arpl
cld
loope
inc
mov
push
mov
rorl
dec
lea
push
rorl
daa
mov
jle
mov
lea
leave
cwtl
jle
push
mov
xchg
xor
mov
shrl
mov
mov
xchg
dec
or
into
ds
sub
add
sbb
xchg
dec
pop
test
inc
and
add
fs
nop
fsts
dec
daa
aad
adc
push
clc
jo
sbb
nop
test
rcl
in
and
sub
lret
fprem1
pop
mov
dec
loop
mov
cmc
int
sbb
pop
xor
push
aas
icebp
jae
jecxz
pop
insb
lahf
add
pushf
adc
jecxz
dec
scas
pop
fldcw
filds
push
in
adcl
movsl
scas
call
jge
push
or
gs
jle
pushf
xor
ss
jb
mov
adc
xlat
push
add
dec
add
outsb
sbb
adcb
leave
daa
xchg
and
mov
icebp
sub
lea
int
inc
sahf
sahf
push
mov
xor
push
jno
cld
icebp
sbb
push
scas
jmp
nop
in
enter
cwtl
sbbl
sub
sub
jecxz
mov
rclb
test
xchg
mov
in
sti
inc
addr16
ficoms
push
sub
inc
jnp
xlat
hlt
outsb
add
sbb
dec
mov
lock
in
mov
mov
lds
push
out
pop
mov
das
mov
jmp
outsb
push
pop
jnp
out
push
xchg
cmp
push
xor
mov
inc
jo
push
loop
sarl
mov
add
in
notl
mov
mov
sub
aas
das
fdivrp
mov
inc
push
clc
scas
sbb
mov
xchg
xor
stc
mov
push
sarl
inc
es
push
fs
clc
or
enter
fisubrl
fldenv
mov
rolb
dec
out
pop
and
lcall
insl
xor
cmpxchg
rcl
sub
mov
das
shrb
sbb
test
pop
insl
mov
mov
inc
rorl
mov
stc
andb
jbe
loope
dec
arpl
mov
dec
hlt
pop
and
flds
out
dec
add
mov
adc
push
popf
sub
mov
sbb
rol
or
out
ret
sbb
pop
xchg
fs
daa
push
inc
call
push
iret
aam
add
fwait
outsl
ja
and
ljmp
add
jmp
outsl
cmpsl
dec
shrb
stc
mov
imul
lret
mov
sbb
sbb
or
decb
sbb
cmc
outsb
pop
xchg
pop
sub
lcall
and
repnz
test
in
mov
fnstenv
mov
xor
cli
ds
adc
add
jbe
out
imul
or
mov
mov
xchg
call
xlat
aam
iret
loop
mov
jo
dec
push
inc
cmp
mov
inc
imul
mov
sbb
insb
and
iret
js
shl
push
fdivs
rorb
jl
or
inc
iret
sarl
out
or
xchg
ficoml
mov
jns
rclb
insl
aaa
mov
loopne
call
push
lock
or
lahf
lds
fs
adc
xchg
adc
and
dec
les
add
inc
add
and
insl
out
inc
and
mov
mov
mov
dec
shlb
xchg
shrb
inc
cmp
lock
mov
jl
stos
leave
js
bound
adc
inc
xor
push
fistpll
js
in
out
call
outsl
push
xor
loope
bound
out
movsl
adc
bound
sbb
int
adc
pushf
out
pop
lcall
jae
lret
jb
sbb
or
push
leave
lods
xchg
pop
pushf
jg
rorb
mov
adc
sbb
add
fwait
incb
inc
inc
xor
loope
sub
pop
sti
mov
loop
jg
or
pushf
pop
jo
sarb
mov
imul
jmp
ljmp
ret
dec
movsl
add
adc
testb
xor
pop
stc
jmp
mov
pusha
jno
xlat
xor
not
jbe
xchg
sarb
ss
test
xor
xor
pop
fisubl
cmc
lret
add
pop
or
out
addr16
jp
int
jg
popf
inc
out
jnp
loopne
leave
mov
jp
hlt
xchg
cld
std
cmp
cltd
mov
loope
push
cmp
call
aam
fsts
jecxz
push
cmp
pop
insb
inc
push
daa
pop
fistps
or
jns
sbb
fmull
sbb
mov
pop
outsl
stos
xor
mov
cmp
cmp
cmp
mov
loopne
dec
repz
nop
loop
call
xor
mov
cmp
jb
lahf
mov
mov
mov
or
loope
xchg
inc
fisubl
je
pop
mov
stos
ss
sti
sbb
ret
sbb
mov
lods
cmc
leave
mov
shrl
and
push
popf
ljmp
xchg
and
stos
out
jmp
or
sub
push
lea
out
jne
ret
jns
jl
daa
inc
subb
pop
bound
mov
sub
inc
push
ljmp
pop
and
test
mov
or
cltd
ds
cmp
jp
and
xlat
stc
dec
mov
pop
mov
mov
push
jg
push
mov
out
pop
adc
adc
xchg
jecxz
cmp
ja
scas
xchg
gs
push
xchg
add
pop
sub
jno
outsl
das
js
jb
movsb
cmp
cwtl
rcrl
xor
int
or
subl
movsl
lock
xor
pop
or
fcoml
fdivl
imul
lea
pop
sti
outsb
push
sar
hlt
rclb
mov
movsb
fimull
sahf
push
hlt
movsb
push
push
imul
jp
xor
pop
testb
enter
pusha
js
popa
fcomps
mov
call
mov
cld
jge
ljmp
adc
mov
ja
jg
lods
push
pop
syscall
or
in
int
enter
cmp
std
nop
pusha
in
push
push
dec
shll
push
mov
negb
lret
xchg
mov
lds
sbb
push
xor
outsl
lods
clc
daa
inc
lcall
fwait
cmpsb
mov
int3
push
cmp
jb
lret
insl
repz
push
mov
pop
jae,pn
sbb
lods
or
pop
stos
cmpxchg
add
push
aas
xchg
or
xorb
popf
fisubs
jl
test
outsb
jecxz
sbb
cmp
push
lret
scas
shlb
lret
xor
lock
pop
es
push
dec
ss
xchg
clc
mov
sub
mov
jnp
jb
xor
jns
inc
mov
aad
ss
loope
jno
fcompl
push
mov
jmp
xor
addr16
ljmp
sub
daa
jg
popa
fs
jecxz
std
and
mov
inc
pop
adc
push
or
add
mov
ss
in
mov
sbb
hlt
and
pop
cmp
dec
icebp
clc
xor
test
sub
xor
push
fwait
pop
js
pop
arpl
push
mov
mov
test
div
mov
sti
pop
mov
adc
xor
jge
mov
test
adc
sbb
xor
inc
imul
sub
pop
scas
lcall
out
fnsave
stos
bound
and
inc
lock
xchg
out
mov
inc
or
pushf
fcmovbe
mov
mov
mov
js
jns
jmp
mov
stos
sub
shrb
iret
mov
mov
add
mov
jae
ficoms
popf
cmp
dec
jne
push
inc
pop
test
sbb
cltd
out
xor
adc
inc
inc
push
mov
mov
adc
jecxz
lea
pop
mov
aas
jbe
jne
pop
or
mov
push
mov
ds
int
adc
and
mull
push
sbb
add
adc
in
fld
pop
dec
fistl
aaa
fcoml
add
xor
pop
inc
add
sub
stc
sbb
mov
test
sub
jmp
fnstenv
mov
fs
lods
mov
out
adc
dec
adc
inc
adc
arpl
cmpsb
mov
xor
pop
js
sar
aas
mov
testb
push
and
push
fstl
dec
repz
pop
push
cmp
pop
or
loope
push
shl
daa
sub
repnz
mov
add
aam
idivb
push
sub
aad
jecxz
jmp
scas
pusha
dec
divb
xchg
data16
cli
unpckhps
mov
movsb
ret
mov
mov
fwait
mov
or
sub
and
pop
sub
or
cwtl
ror
leave
xor
mov
mov
mov
pop
sub
mov
mov
jno
cli
xchg
inc
jl
jne
pop
popa
lret
testb
in
or
call
sbb
daa
mov
sub
addl
dec
adc
fsubrs
scas
pop
mov
xchg
fimull
xlat
cmp
loop
movsb
fsts
push
add
xlat
cs
maskmovq
idivl
mov
mov
mov
mov
loope
mov
addl
sub
and
decl
jmp
ss
inc
in
in
pop
adc
jnp
fs
pop
xor
ret
push
outsl
imul
mov
inc
notl
xor
inc
sub
cwtl
mov
int3
ret
push
cli
mov
pushf
enter
addr16
pop
jb
jo
xchg
ljmp
jmp
popa
repz
in
icebp
cmp
or
cmpsl
pop
pop
je
mov
pop
mov
and
jl
adc
cmc
loope
mov
movd
jecxz
add
scas
popa
push
pop
pop
xchg
cld
sbb
mov
mov
xchg
and
aas
pop
mov
fstl
push
sahf
sub
rolb
xchg
in
jge
mov
xchg
mov
icebp
lods
cwtl
gs
inc
or
pop
xor
dec
hlt
push
ja
daa
hlt
lahf
jne
cmp
cli
sub
xchg
push
xchg
mov
dec
test
inc
ret
push
popa
outsb
jo
mov
jb
sbb
lahf
aam
mov
xchg
inc
lret
add
or
mov
pop
insb
into
or
mov
pop
in
fisttpll
cmc
rcrb
or
add
mov
out
gs
gs
out
add
mov
push
adc
push
int
pop
pop
pop
or
pop
sbb
fldenv
sti
lea
fidivs
sbb
aad
popf
jecxz
mov
push
mulb
mov
dec
pop
or
or
mov
inc
dec
push
lds
pop
cs
es
jo
nop
sub
cs
fwait
les
dec
mov
or
sti
inc
xor
mov
sub
stc
adc
pop
push
jbe
setb
inc
test
hlt
adc
outsb
push
test
js
sub
mov
mov
enter
sub
pop
xchg
mov
mov
xchg
sub
jge
sar
jecxz
xlat
mov
lret
or
adc
mov
dec
push
inc
shll
outsl
push
dec
iret
mov
fwait
shrl
pop
js
and
xor
les
cltd
cs
cwtl
into
in
scas
cltd
andb
or
das
mov
push
lock
icebp
in
iret
sbb
mov
push
int
aas
bound
icebp
mov
push
xchg
xor
cmp
imul
outsl
fisubrs
sti
enter
repz
cmc
popa
jo
inc
gs
scas
xor
jg
int3
rcl
sahf
sbb
repz
sbb
jno
dec
gs
push
les
sub
mov
pop
or
loopne
push
sub
xlat
push
jge
lds
mov
sub
push
in
aaa
sbb
psadbw
inc
addb
push
inc
cli
pop
sbb
mov
cld
insl
mov
mov
lahf
mov
scas
cmc
add
mov
cmp
dec
push
sbb
popa
cmp
mull
pop
and
dec
cltd
xchg
outsb
cmpsl
add
adc
test
out
je
dec
imul
pop
into
pop
xchg
xchg
nop
add
fwait
test
push
std
popa
cmp
inc
sub
mov
mov
push
js
cmp
jbe
cmpsb
inc
mov
mov
pop
icebp
mov
fdivl
jmp
mov
jg
sbb
adc
inc
gs
push
fists
lret
xchg
jge
dec
fisubs
inc
and
adc
mov
insl
jno
mov
adc
ret
cwtl
inc
das
jecxz
lods
xchg
mov
outsb
call
movl
aam
sbb
lahf
xor
arpl
add
xchg
dec
cmp
fwait
out
and
loop
mov
ds
mov
pop
data16
dec
xor
inc
jne
inc
in
jmp
or
leave
shr
sub
jo
movsl
fbld
fwait
mov
lcall
sbb
pop
xchg
inc
enter
jne
in
clc
ret
aam
sub
mov
push
pop
xlat
push
outsb
add
es
out
stos
cmp
aaa
hlt
pop
lods
in
outsl
xlat
adc
adc
into
jns
or
push
loope
mov
cwtl
adc
pop
xor
inc
pop
js
inc
xor
mov
insl
pop
sbbl
pop
int3
int3
cltd
cmp
sub
loop
pop
inc
sub
sbb
lcall
mov
lret
xchg
jo
mov
lret
sahf
ljmp
xor
icebp
jle
jo
int
fadds
arpl
clc
dec
in
icebp
pop
or
movsb
or
xchg
sbb
loop
push
movsl
xchg
repz
out
mov
sub
insb
sarb
jmp
lret
loope
lcall
xchg
subb
push
mov
ja
mov
aaa
adc
jnp
pop
popf
mov
push
mov
data16
adc
rorl
in
sbb
inc
xor
jae
mov
imul
xor
or
and
pushf
xor
test
cmp
inc
mov
fsubs
call
add
fcompl
jecxz
push
stos
test
popf
imul
jle
and
std
test
leave
mov
bound
adc
xchg
outsl
cwtl
out
shlb
dec
addr16
fisubrl
adc
repnz
arpl
dec
lcall
arpl
jl
pop
pop
mov
sub
push
xlat
xchg
push
mov
popa
test
mov
and
lods
jmp
fs
outsl
xor
sub
inc
add
or
jmp
push
adc
sub
mov
movsb
fisttps
or
mov
jnp
lcall
hlt
sub
je
stos
mov
jb
jo
mov
cmpsl
lret
call
mov
aas
inc
xchg
pop
push
inc
leave
out
fwait
jnp
push
cmp
dec
adc
xchg
inc
xchg
lods
ljmp
test
jno
std
pushf
mov
into
dec
fcoms
les
aam
push
cmc
not
shrl
sub
es
sub
pop
lret
xchg
push
movsb
pop
pop
ficoms
pop
and
mov
xchg
push
jo
mov
cmp
jg
pop
mov
fisubrs
inc
ret
hlt
or
sbb
mov
xchg
popl
into
fiaddl
push
cmpsb
aad
mov
and
loopne,pn
and
jl
mov
std
jae
and
movsl
pop
inc
ds
push
lods
add
test
fstpl
mov
push
popf
dec
shrb
dec
mov
jae
jmp
insl
das
jno
mov
pop
arpl
mov
or
push
push
jecxz
insl
inc
jbe
xchg
adc
or
sbb
sub
popf
mov
lock
imul
je
dec
sahf
jmp
aaa
cmp
fistps
pop
mov
mov
sbb
mov
imul
pop
pop
je
xchg
lret
sub
pusha
or
pop
xor
sahf
sub
xchg
jne
mov
and
out
cmp
in
jecxz
iret
test
jg
adc
leave
cld
std
movsl
pusha
or
out
pop
aaa
xchg
xchg
dec
push
sarl
or
setns
sbb
mov
mov
dec
sub
pop
pushf
aad
mov
or
cwtl
pop
lcall
inc
pop
icebp
mov
inc
jnp
mov
jecxz
daa
xchg
cmp
stos
dec
lods
cmp
mov
out
cmpsb
mov
push
mov
mov
in
loop
repz
push
adc
test
sahf
xchg
scas
add
sarl
sbb
iret
mov
fmuls
fwait
incb
ret
movsl
dec
inc
pop
ret
sbb
test
std
or
flds
popa
cmp
lcall
bnd
daa
xchg
dec
and
call
xchg
pop
ds
jle
and
sti
xlat
les
jl
subl
add
jb
outsl
or
pop
out
pushf
rcrb
jl
inc
stc
vminpd
xor
pop
and
test
and
ss
jo
xor
outsl
mov
mov
aas
inc
jae
xchg
inc
fwait
xor
mov
adc
aad
sub
bound
loope
in
xor
xchg
std
fstpt
insl
or
xchg
out
mov
movb
push
ljmp
std
movsb
jmp
mov
jo
dec
push
popa
mov
sbb
mov
fsincos
ret
push
push
pop
push
mov
cmp
mov
cltd
stos
xchg
and
pop
add
and
stos
mov
cltd
repz
xchg
fucomip
outsl
pop
jmp
test
pop
lock
mov
sub
mov
cs
js
push
inc
fdivrl
movsb
imul
mov
sbb
push
xchg
cmp
fisubrl
push
push
test
push
lock
cmc
ret
pusha
gs
mov
mov
mov
insl
pop
in
in
fs
pop
cmp
jno
sbb
xor
shlb
and
dec
jns
jno
pop
fcompl
bound
call
add
leave
or
sub
fcomps
jecxz
lret
push
fnsave
outsl
stos
jb
pop
push
subl
push
test
sub
mov
jl
xchg
hlt
hlt
sbb
test
mov
aam
movsl
in
mov
sub
inc
pop
fsubp
mov
lret
sub
jecxz
dec
xchg
das
das
jae
cltd
xchg
adc
xchg
loopne
fisubrl
enter
ret
mov
and
data16
das
sbb
add
fnstenv
dec
das
push
cmp
adcl
out
dec
test
js
add
mov
es
inc
jmp
and
es
cld
and
lret
cltd
or
fcoml
fs
jne
lods
and
aad
inc
lret
adc
arpl
mov
or
cwtl
pop
inc
addb
cltd
fisubrl
mov
xor
or
les
fiadds
push
xorb
fbld
mov
and
aaa
inc
or
xor
and
iret
push
test
aaa
icebp
inc
add
jg
ror
dec
scas
scas
push
push
sarl
cmp
push
fmuls
inc
xchg
xchg
push
adc
call
xchg
cs
inc
js
cld
and
jno
sbb
or
inc
jbe
jmp
mov
bound
int3
push
pop
sbb
fucomi
push
into
movsb
jge
fsubr
ja
jp
les
ja
add
shl
mov
pop
imul
jle
mov
pop
sbb
mov
pop
and
hlt
xchg
pushf
sbb
aad
xchg
xlat
or
icebp
int
sbb
xchg
js
imulb
int3
mov
loopne
outsb
movsl
iret
sbb
cmp
cli
mov
xor
mov
dec
mov
cmc
pushl
inc
lds
out
and
loopne
sbb
insl
xlat
push
cmpsb
inc
mov
ret
sahf
jbe
inc
xorl
and
push
cld
ficompl
push
dec
add
push
xchg
cld
imul
pop
cmpsb
xor
leave
mov
bound
pop
outsb
cmpsl
push
mov
jbe
xor
sbb
mov
xor
jbe
or
movsb
adc
clc
adc
scas
mov
jp
mov
ret
outsb
pop
jmp
pop
ds
jge
daa
jns
jo
leave
inc
mov
imul
ss
xchg
xor
addr16
add
add
xchg
lcall
pushf
cmp
push
scas
pushf
cmp
scas
sbb
push
adc
dec
mov
lds
sbb
scas
call
lcall
div
and
push
loopne
mov
cmpsb
dec
lret
mov
in
iret
xlat
cmp
rorl
and
in
loopne
shl
dec
sbb
mov
jmp
xor
repz
xchg
aas
mov
push
cmpsb
mov
add
jno
mov
rcr
xor
aad
sbb
mov
xchg
push
hlt
or
cmpsl
loop
daa
je
fisttps
cltd
loop
push
lcall
inc
icebp
pop
out
sub
adc
jl
jg
cmpl
rorl
daa
int3
cld
fisubl
in
mov
movl
pop
jp
repz
mov
out
icebp
xor
daa
and
mov
aaa
fstpl
xchg
cmp
adc
iret
cmp
sub
push
dec
xor
xlat
lahf
mov
inc
pop
xchg
adc
popa
fs
push
repnz
lahf
mov
inc
negb
and
inc
orl
pop
mov
xlat
xchg
fildll
jecxz
cmp
or
xor
jg
ficoml
fstl
dec
leave
fs
mov
dec
shlb
popf
enter
or
lahf
jge
rolb
sub
xchg
mov
cwtl
adc
ret
add
ja
add
xchg
add
out
into
ds
lock
cmp
sbb
jecxz
jae
mov
mov
or
inc
and
jo
push
push
adc
in
repnz
cmp
outsb
and
mov
xor
lds
pop
pop
es
lea
mov
repz
pushf
sub
mov
pop
dec
idiv
pop
cmc
pop
mov
add
test
pop
pop
jne
push
and
fs
int3
insl
lahf
sub
jmp
jns
pop
fidivl
push
mov
fcoms
adc
push
mov
data16
and
sub
in
xchg
in
sahf
inc
add
and
mov
cmp
leave
lea
jp
sbb
cmp
pushf
sbb
cmp
xlat
popa
imul
insl
push
dec
xor
mov
dec
imul
ja
lods
fincstp
rclb
psubsw
std
loopne
mov
ja
inc
insl
fidivrs
lret
pop
pop
pop
cmovne
cmpsl
mov
movsb
mov
add
mov
cmp
testl
xor
dec
repnz
cmp
cmpsb
pusha
cmp
inc
fs
lods
pop
sub
pop
in
xor
push
call
jne
lret
sti
mov
or
shl
or
cld
call
mov
adc
mov
add
ficomps
repnz
sti
adc
dec
xchg
sbb
jle
js
fcmovnb
add
out
je
or
cmp
mov
sbb
lods
cmp
fwait
stc
popf
insl
fstpl
lcall
rcrb
and
insb
push
jnp
imul
cli
leave
aaa
rorl
push
fisubrl
inc
mulb
cli
inc
jnp
xchg
fldt
loope
add
push
mov
jge
xchg
xchg
inc
jns
sbb
jmp
adc
hlt
push
adc
mov
cmp
lahf
fsubl
jge
xor
and
into
scas
mov
test
cmpsl
dec
push
out
nop
inc
cld
test
mov
pop
lahf
ret
and
cmpl
dec
addr16
aad
ss
lock
lret
or
sbb
pop
or
sbb
add
xor
shl
add
mov
add
sahf
or
adc
or
mov
ss
mov
dec
repz
pop
pop
lret
out
jne
addr16
pop
in
fdivrl
push
popa
inc
lahf
mov
cmp
sahf
jo
test
int3
test
test
hlt
mov
test
mov
popf
push
int
mov
push
filds
push
loope
sub
lods
sub
sub
mov
ss
dec
sub
popa
call
aas
push
push
das
cs
das
iret
fstpt
push
mov
xor
xchg
adc
repnz
in
xchg
test
int
mov
sub
aaa
cmp
add
outsl
fnstcw
mov
xchg
and
mov
cld
inc
xor
push
loopne
mov
lret
inc
je
add
or
mov
aas
inc
dec
mov
sub
nopl
push
incl
ljmp
ljmp
ds
xorl
inc
adc
andl
loop
movsb
insl
lret
sti
add
sbb
lea
aaa
js
out
fcoml
pop
dec
mov
pop
inc
push
jbe
jmp
in
mov
and
jb
adc
sbb
push
jge
jl
xor
ret
mov
test
loope
popf
int
inc
cld
mov
mov
pop
sub
sub
cli
fists
jb
pop
mov
movsl
or
pop
and
shrl
or
ds
enter
lcall
dec
inc
sar
mov
push
jbe
inc
sbb
rclb
cld
lahf
mov
lcall
push
pop
leave
jecxz
repz
xor
push
sub
lcall
scas
jbe
scas
mov
and
xor
xchg
xchg
sbb
lcall
fistpl
pop
sub
jnp
push
mov
jmp
cmp
scas
push
aam
std
pop
and
mov
or
aam
add
je
cmc
leave
insb
xor
stos
push
mov
push
push
adc
adc
mov
fisttpl
inc
addr16
lahf
mov
leave
xor
jae
dec
sti
loope
inc
pushf
push
jg
daa
in
loopne
add
call
mov
xor
into
pop
sub
je
lods
push
sbbb
ret
cmp
jo
xor
sbb
dec
xchg
subl
ds
push
out
inc
mov
test
dec
push
xor
jle
xchg
sub
popf
pop
jae
push
sub
sub
adc
repnz
xchg
loop
jb
test
fcompl
mov
adc
jmp
hlt
arpl
xchg
inc
rcrb
mov
jmp
inc
repnz
stos
cmpsb
in
push
fbld
leave
cmp
int3
aas
stos
xor
jbe
out
mov
ret
std
jg
ljmp
js
dec
mov
inc
lods
lahf
sub
lahf
dec
dec
int
dec
mov
idivl
mov
bound
lods
in
mov
sarb
or
push
fs
xchg
cmp
xor
inc
cmp
xchg
jns
orl
imul
adc
sub
sbb
arpl
lock
dec
mov
popf
mov
push
lcall
js
jno
out
inc
mov
stc
pop
fisttps
inc
adc
cmp
insl
mov
or
scas
and
adc
out
xor
repnz
mov
sub
mov
sub
pop
add
push
or
adc
and
fwait
push
fisttpll
or
icebp
cli
cli
jnp
inc
mov
rorb
mov
push
sub
mov
inc
sti
pop
int
cmp
hlt
mov
repz
pop
mov
sbb
push
ljmp
inc
mov
pusha
in
jb
mov
cld
jo
stos
das
cli
adc
stc
cld
int3
fidivs
adc
out
ljmp
mov
hlt
push
dec
inc
jp
frstor
inc
push
push
test
mov
jne
test
mov
adc
outsl
and
xchg
add
into
inc
mov
es
loop
push
lcall
int
mov
inc
fdiv
mov
mov
test
inc
popa
shrb
out
mov
xchg
push
and
mov
imul
xchg
mov
sub
mov
push
mov
test
sti
jne
xchg
das
fcomi
pop
out
movsl
cmp
cmpsl
xor
ja
test
push
insl
and
adc
xor
sub
fwait
scas
sbb
stos
cs
lock
lret
sbb
pop
xchg
mov
or
out
pop
cmp
sti
pop
cwtl
jae
iret
mov
cmpsb
insl
out
mov
mov
hlt
scas
inc
jbe
push
ds
push
sub
mov
pop
aas
cltd
and
mov
rcll
add
lods
orb
bound
mov
xor
cmp
sti
js
pop
rcrb
loopne
imul
or
pop
dec
push
mov
movsb
jmp
jge
loop
xor
xchg
insb
nop
xlat
aas
in
ret
xchg
and
fs
jo
or
loopne
push
xchg
xchg
cmpsb
ss
mul
roll
lods
iret
jg
jnp
sub
aam
mov
pop
cmp
in
cmpsl
mov
mov
lods
outsl
cmpsl
aad
push
ret
and
popf
push
cmpsb
jp
pop
pop
stos
mov
push
fldl
push
jb
movsl
mov
jne
mov
adc
rclb
pop
mov
cmp
in
xor
movsl
cmp
out
fstpl
divb
mov
lcall
or
fbstp
sbbb
out
pop
sti
pop
mov
jo
leave
mov
add
pushf
dec
dec
jle
mov
pop
add
jmp
dec
fisttpl
push
sbb
inc
les
xchg
xchg
cltd
into
xchg
orb
lds
ret
xchg
jmp
pop
cmp
jecxz
jno
push
fdivrs
xorb
loope
aas
std
lret
mov
loope
xchg
insl
mov
jo
sbb
pop
mov
cmpsb
mov
fmull
push
jg
arpl
movsl
push
cld
adc
dec
push
scas
icebp
cmp
inc
jge
mov
jne
add
fisubrl
cmp
lcall
mov
sti
std
mov
enter
dec
adc
dec
sbb
xchg
push
mov
sbb
nop
int3
push
dec
xchg
xchg
sbb
jo
sub
push
rcll
dec
loope
mov
ljmp
dec
cmp
cli
repnz
pop
ret
test
push
or
jle
shrl
leave
adc
adc
adc
inc
mov
arpl
dec
or
xchg
add
imul
sub
adc
lock
and
fstl
sbb
mov
fcomi
and
js
fldenv
mov
dec
ja
outsb
inc
push
fwait
push
mov
rol
iret
addps
or
ljmp
mov
push
leave
jnp
jp
jo
push
je
jmp
insl
repnz
jb
and
jns
pop
xchg
roll
dec
cmp
sarl
fcompl
jne
ljmp
sub
fldcw
inc
jl
inc
je
or
aam
and
repz
fidivs
scas
mov
shrb
std
movl
subb
mov
inc
inc
movsl
xchg
and
jmp
jmp
cld
xor
adc
mov
push
aas
xchg
push
dec
pop
rcrb
and
mov
pusha
sub
dec
and
stos
popa
stc
push
icebp
add
mov
fidivs
sahf
mov
pop
jle
repnz
pushf
fwait
in
inc
arpl
inc
and
clc
inc
xchg
aad
push
enter
jb
call
loopne
test
stos
lret
push
fisubrs
in
dec
push
pop
mov
ja
hlt
inc
idivl
pop
fxch
aas
mov
cli
shrb
pusha
fnstsw
push
ds
aaa
out
cmp
push
repnz
pop
sub
and
rcrl
sahf
stos
jge
sub
testl
adcl
xor
dec
call
mov
ret
mov
sbb
fidivl
add
std
movsl
cmp
sti
ja
iret
add
andl
jae
xlat
mov
invd
scas
pop
or
iret
adc
xor
test
mov
mov
mov
sub
in
mov
mov
push
dec
stc
fistl
push
cmp
data16
int3
push
jp
idivl
sbb
push
in
dec
sub
repnz
out
jns
sbbb
mov
pusha
jne
pop
or
jo
push
mov
jmp
mov
rol
fs
inc
push
movsl
lods
in
repz
fbld
dec
aam
mov
int
adc
loop
mov
mov
push
push
out
aam
clc
dec
adc
mov
cmpsl
inc
ja
mov
cmp
jge
in
mov
lahf
push
jmp
dec
adc
xor
negb
mov
imul
inc
mov
das
adc
mov
xor
jg
fistpll
pop
mov
adc
jecxz
adcl
dec
dec
sub
xor
sbb
out
jo
loope
pop
xor
mov
scas
mov
in
leave
jne
push
mov
or
add
sub
cmp
lods
ret
hlt
and
mov
daa
cmp
movsb
loop
xchg
or
cmpsb
out
cwtl
mov
insl
push
repnz
in
pop
xlat
mov
js
push
jmp
pop
insl
sub
test
sbb
sub
clc
mov
cmpsb
add
mov
scas
mov
sub
outsb
sbb
in
in
adc
arpl
mov
insb
mov
sarb
ss
test
mov
movl
sub
mov
lea
into
test
leave
dec
repnz
mov
pop
jecxz
out
xchg
loop,pn
shll
mov
rol
fwait
in
xchg
mov
int3
and
aam
repnz
idiv
sub
rcll
cltd
sbb
mov
mov
shll
andl
sub
outsb
adc
fwait
add
adc
push
cs
jae
in
or
nop
sbb
inc
ljmp
out
xchg
jmp
pop
xor
test
pop
mov
jb
sbb
test
xor
mov
insb
sbb
add
lock
sbb
pop
sahf
enter
stc
int3
repnz
jg
jne
sub
data16
shrw
push
and
fisttpl
mov
rcrb
jge
xchg
xchg
jge
insb
lcall
xchg
sahf
mov
leave
movl
inc
mov
and
scas
xor
orl
mov
lods
cltd
xchg
add
mov
ret
mov
sub
xor
imul
into
scas
or
mov
adc
jns
or
adc
jg
stos
cs
into
lods
adc
cmp
addr16
inc
mov
lods
mov
and
mov
push
push
inc
loopne
pushf
test
add
inc
cwtl
push
scas
fxch
insl
in
push
jno
std
call
rol
lahf
addr16
pop
push
fsub
jecxz
stos
add
stc
repz
mov
inc
push
in
cmp
lcall
imul
fwait
dec
mov
orl
jmp
pop
mov
daa
sub
push
sbb
push
adc
leave
sti
cmpsb
mov
jb
inc
add
imul
stc
ja
inc
cmp
jmp
sbb
std
jmp
scas
leave
fdivl
lahf
mov
hlt
cltd
ret
orb
scas
and
xlat
or
lcall
outsb
loopne
mov
mov
mov
pop
mov
xor
cmp
adc
int
into
roll
int3
mov
adc
test
dec
loope
dec
daa
or
cmpb
push
test
mov
mov
insb
mov
jmp
arpl
pop
je
filds
cmpsb
scas
cmp
push
sahf
jge
xchg
fcomps
lock
adc
mov
ret
mov
outsl
in
movsl
sub
leave
mov
mov
out
dec
dec
in
ror
sub
cmp
popa
pusha
rcll
ret
mov
mov
xor
jne
jle
jp
mov
mov
sub
sahf
adc
fldenv
mov
jl
imul
inc
inc
bound
jne
inc
xchg
jle
inc
sbbb
das
test
adc
jnp
addr16
mov
test
xor
cwtl
mov
add
lds
push
mov
dec
pop
jge
push
mov
mov
dec
xlat
mov
and
test
insl
roll
sbb
cli
out
daa
fcoml
adc
inc
aaa
push
push
rclb
pop
add
fcmovb
dec
sbb
xchg
scas
test
mov
ret
ljmp
jbe
nop
test
jns
sti
mov
mov
inc
xchg
bound
daa
dec
movsl
lahf
mov
mov
jle
dec
or
sub
gs
es
icebp
push
xor
jl
lods
test
out
mov
mov
andb
test
push
push
cmp
movsl
xchg
add
scas
push
inc
jo
cmp
lea
jo
outsb
jbe
xor
jg
dec
and
jecxz
adc
xchg
int3
pop
or
outsb
or
mov
mov
sub
je
jge
mov
into
daa
cld
xchg
int
cmp
stos
test
loopne
jns
negl
xor
sarb
mov
sahf
stc
mov
rcll
pop
adc
mov
xorl
pusha
pop
aad
xchg
gs
das
pop
pop
push
jns
lods
outsb
push
cmpsb
jo
arpl
push
mov
subb
push
int
imul
push
sub
xor
jnp
imul
movb
test
push
inc
jo
mov
adc
adcl
cmpsl
push
dec
in
mov
cli
insb
mov
add
and
cmp
jbe
pop
insb
and
mov
inc
jecxz
js
sbbb
jb
fbstp
add
sbb
mov
jl
rcrl
mov
es
icebp
and
pop
or
adc
sub
mov
outsl
je
pop
pushf
stc
dec
imul
outsb
sub
xchg
and
adc
sub
lds
push
pop
sarb
cmpsl
add
es
les
stos
out
xor
mov
repnz
cld
dec
jmp
mov
pop
cwtl
or
sub
std
in
xorb
dec
push
fwait
cmp
outsb
mov
jns
ljmp
stc
xor
mov
xchg
sbb
lea
lahf
rcrb
adc
jge
out
lock
fistl
jne
scas
adc
jo,pt
aas
push
nopl
ret
imull
sbbb
addb
cmp
ficoml
out
outsl
push
push
cmp
test
loop
cmc
pop
jge
mov
stos
mov
push
sub
out
out
jl
or
lret
scas
insb
inc
loop
rcll
sarl
push
hlt
adc
mov
pop
les
gs
cmp
fidivrl
xstore-rng
cmpsl
add
jo,pn
mov
push
pop
push
jl
cld
cmp
xchg
lcall
push
jae
mov
adc
inc
jg
rcr
lcall
loopne
inc
sub
add
xchg
mov
or
cmp
jmp
mov
jne
cmpl
inc
sbb
fadds
cmc
negb
cld
cmp
mov
hlt
push
pop
adc
push
loope
inc
nop
fs
imul
add
lahf
mov
mov
nop
dec
loope
arpl
mov
jp
lcall
xchg
dec
cmpsl
es
xor
sub
push
mov
cmp
lods
daa
and
xchg
inc
cld
jmp
out
lret
adc
cwtl
pop
inc
jl
ljmp
sbbl
xchg
mov
jmp
add
scas
imul
mov
in
nop
sub
jo
xor
ds
fstl
mov
loope
arpl
add
mov
pop
mov
aam
mov
xlat
scas
test
adc
xor
enter
test
inc
sub
loop
cmp
bound
jl
add
loopne
into
outsl
pop
js
fstpl
pop
xchg
rorb
xchg
sahf
pop
pop
std
scas
mov
outsb
inc
inc
and
mov
push
icebp
fs
lods
les
pop
sbb
and
pop
loop
movb
repnz
or
dec
stos
mov
or
adc
popa
push
cwtl
shrb
xor
mov
pop
push
jl
mov
mov
mov
push
je
sbb
cli
cmp
pop
jmp
xorl
sti
test
sub
pop
sti
cmp
test
or
adc
sub
pop
or
incl
push
pop
dec
cmc
jnp
scas
and
pop
fcompl
insb
int3
or
ss
cmp
cmp
push
mov
mov
adc
jecxz
outsl
cld
fsubs
pop
das
mov
pushf
lret
or
mov
mov
movsb
fcmovbe
pop
lret
jne
bound
insl
insb
cwtl
aas
mov
sbb
fistps
dec
mov
test
xor
lea
adc
shlb
jns
dec
adc
movsb
jge
loopne
xor
or
add
jae
and
rcll
adc
in
or
iret
aaa
mov
dec
enter
aaa
mov
dec
dec
test
aaa
dec
and
ja
mov
insl
xchg
inc
or
or
push
das
xor
enter
sub
add
adc
jle
sbb
leave
sub
faddl
jnp
xchg
pop
cmp
xor
mov
pop
push
stos
cmp
mov
inc
subl
inc
insb
push
ljmp
pop
add
rorl
aaa
sbbb
fwait
test
mov
push
ret
gs
and
dec
or
sbb
mov
xchg
in
push
out
dec
lods
rcll
add
outsl
aaa
add
sbb
rcrb
rolb
mov
xchg
iret
or
movsl
fidivs
sub
xor
xor
in
loope
aad
stc
pop
repnz
jo
jns
jmp
jne
xchg
sub
es
lret
xor
push
aas
mov
js
ror
inc
test
xchg
hlt
test
xor
or
inc
or
ds
fiadds
pushf
rolb
popa
adc
outsb
jmp
jp
mov
add
lods
adc
jle
daa
out
xchg
dec
stc
loop
call
addr16
mov
and
cmp
push
addb
popl
or
inc
mov
sbb
jnp
push
pop
pop
js
jbe
mov
jp
into
mov
je
add
jo
popa
sbb
pop
imul
xchg
rorb
jp
xor
das
push
jge
subb
mov
subb
mov
clc
dec
hlt
or
nop
in
xchg
and
and
call
cmp
mov
cltd
outsb
shrb
fldcw
mov
jp
push
aam
adc
cmp
push
mov
xchg
lock
imulb
loopne
push
hlt
xchg
xor
add
in
fsubrl
jno
xor
rolb
js
divl
ja
das
arpl
lret
fistpl
cli
outsb
cmc
sahf
pop
xchg
shrb
jge
insl
test
cmc
nop
cwtl
sbb
push
dec
jge
out
mov
jb
jp
xchg
les
or
aas
fsubl
jl
mov
mov
pop
repz
ds
pop
sub
test
sub
sub
lahf
mov
addr16
or
adc
ja
hlt
xchg
cmp
mov
fs
or
add
mov
sbb
test
cmp
loop
pop
je
sub
int
or
or
add
nop
aam
push
roll
repz
lods
ss
stos
cmp
mov
push
int
jo
test
push
mov
push
mov
nop
lret
mov
movsl
mov
aam
mov
out
pop
or
in
inc
in
gs
test
inc
aaa
mov
jmp
push
cmp
xor
into
jo
inc
scas
push
pop
xor
xchg
pop
add
or
mov
mov
rcll
xor
sbb
xor
lock
mov
aaa
test
popa
push
andb
nop
stc
jl
arpl
dec
mov
xor
into
and
int
outsl
jg
mov
lcall
loopne
cmpb
int
dec
jl
push
add
call
sbb
testl
test
pop
inc
sahf
pop
imul
mov
je
cltd
lcall
outsb
popa
pop
repnz
incb
adc
jp
test
mov
lahf
pushf
ja
mov
sub
dec
jge
sbb
test
pop
ja
cmp
jne
sub
mov
ja
mov
leave
notb
xchg
push
dec
int3
stos
add
inc
and
jae
imulb
fucomi
stos
int
sbb
sub
notb
jl
push
ljmp
scas
repz
jmp
testb
out
divl
test
xchg
sbb
xor
sarl
ja
lock
mov
lods
cmp
cmc
inc
mov
mov
push
test
sbb
insb
fisttps
push
fdivl
in
shrb
enter
data16
push
pop
or
sbb
popa
dec
cwtl
iret
pop
xor
adc
dec
addb
dec
sbb
push
mov
pop
and
sbbl
dec
or
push
inc
dec
popa
mov
mov
pop
jae
push
push
pop
xchg
movsl
dec
nop
out
mov
dec
sbbb
xchg
loopne
lret
je
add
jmp
lret
inc
mov
mov
cmp
jnp
notl
pop
adc
push
mov
mov
in
clc
pop
lret
jnp
push
or
mull
mov
es
rcrl
xor
mov
or
jae
int3
push
es
cmc
cli
mov
push
lock
push
out
fldt
jno
mov
sub
push
ljmp
sbb
xchg
dec
jae
push
test
lret
fstpl
mov
rolb
repz
loop
pop
fiadds
inc
inc
add
xchg
mov
fdivrs
sbb
fmulp
mov
push
lret
fidivs
pop
inc
xchg
into
fs
aaa
sub
push
push
dec
mov
jnp
push
notl
bnd
sbb
and
pusha
and
lret
xchg
or
push
fwait
push
fcompl
popa
jns
aas
in
xor
jecxz
add
xchg
aas
jbe
bound
gs
movsb
mov
sub
pop
sbb
lret
imul
data16
jae
ret
stos
mov
inc
and
test
stos
push
xchg
xchg
pushl
push
adc
dec
fwait
das
pop
lahf
cmp
fwait
lock
mov
out
clc
cmc
icebp
jge
cmpsb
movsb
rcrb
adc
cmc
mov
adcl
xchg
mov
fwait
and
adc
mov
js
sub
push
sub
pop
ret
ljmp
xlat
enter
jns
pop
adc
mov
in
shrl
call
jnp
sub
mov
add
jb
sbb
iret
testl
es
push
sub
xchg
push
cmp
inc
lret
inc
mov
cmp
mov
xchg
sub
lcall
movsl
pushf
or
jbe
cmp
jbe
sbb
outsl
lea
je
and
scas
rcll
xor
fs
sub
xchg
out
pop
pushf
mov
sbb
dec
clc
xchg
or
cli
pop
jo
sbb
push
incl
das
mov
mov
aad
in
add
shl
jno
sahf
jae
faddl
mov
add
jno
cmpsb
ds
mov
adcb
add
shrl
leave
cwtl
dec
outsb
lds
shrl
mov
sub
fimuls
call
mov
loopne
and
sub
pop
mov
mov
dec
mov
iret
or
pop
lret
sbb
sub
dec
jge
rcl
rorb
inc
mov
mov
insb
fdivrp
loop
xchg
fiaddl
mov
orl
aaa
mov
jno
cmpsb
sbb
push
dec
lds
adc
daa
add
idivb
cmpsl
out
aam
stos
cltd
sub
push
outsl
in
aam
xor
fcoml
sbb
xlat
movsb
inc
sub
mov
jno
inc
sbb
ficompl
xchg
add
xchg
lret
into
lret
mov
mov
xchg
inc
mov
pop
int
mov
push
xchg
xor
lcall
arpl
sub
add
pop
add
inc
lock
daa
js
das
rcl
and
push
mov
cmp
fdivl
test
in
lahf
mov
cmp
cmp
ret
mov
xor
mov
jecxz
xor
enter
push
scas
loopne
movsl
inc
ja
push
es
test
pusha
nop
repnz
mov
push
mov
adc
pop
sarb
leave
adc
ret
jecxz
inc
call
pop
idivl
jbe
lea
ficoml
jp
testl
sub
adc
fists
cmpsl
lea
inc
gs
fchs
pop
or
xchg
cmp
lret
les
popf
jo
mov
leave
ret
mov
imul
add
enter
xlat
stos
xchg
mov
ds
outsl
adc
push
xor
je
mov
adc
dec
pop
inc
mov
popf
out
push
les
inc
dec
lods
mov
ret
cmc
xchg
arpl
push
test
pushf
shll
sahf
movsb
and
jns
jbe
add
cmp
mov
jl,pn
or
and
jb
and
mov
das
je
ds
repz
dec
jae
lock
lcall
inc
push
repnz
xchg
lea
push
inc
les
dec
popa
jns
jg
outsl
or
or
pusha
adc
push
add
loope
jle,pn
dec
clc
bound
lods
and
lcall
dec
mov
jbe
dec
push
dec
shl
popa
loopne
jecxz
xchg
pop
mov
and
in
fsubrl
inc
addl
dec
fdivr
iret
lea
pop
shrb
mov
aaa
jg
pop
inc
fidivrl
pop
popf
sub
repz
mov
jno
push
jnp
push
adc
fxch
mov
fisubs
adc
xor
pop
pminub
push
sub
push
jo
push
divb
xor
xor
cmp
fsubrp
add
ret
pop
sarl
stos
mulb
xchg
or
adc
sbb
lods
jno
repz
jbe
xchg
cli
es
clc
adc
mov
mov
dec
jp
pop
add
sbb
test
pop
add
repz
iret
ljmp
mov
xor
mov
stos
bound
shl
add
mov
imul
mov
insl
mov
push
in
repnz
fucomip
sub
jp
pop
repz
psubd
adc
adc
ljmp
fstl
xor
ja
push
lret
leave
jg
jecxz
ret
mov
out
pop
test
mov
jnp
jmp
fidivrl
jbe
loop
into
clc
mov
push
push
out
inc
adc
mov
and
push
mov
ret
mov
enter
xchg
adc
dec
je
out
mov
loop
cwtl
pushf
sub
inc
nop
roll
cmpsl
lahf
jno
sar
sbb
adc
jl
add
into
or
enter
cmpsb
subb
mov
stc
es
sbb
sub
arpl
mov
dec
push
sub
mov
mov
inc
push
fwait
sti
and
sub
mov
out
dec
rcrb
mov
mov
push
push
mov
mov
repz
idivb
jo
call
xchg
dec
mov
mov
adc
mov
scas
ficoms
xor
pop
popf
or
outsl
jae
in
sbbl
insl
sbb
or
sbb
xchg
in
mov
scas
xchg
cmp
fs
mov
inc
in
adc
test
cmp
xor
adcb
shll
lahf
push
in
dec
es
mov
sti
shrb
into
lds
inc
imul
fs
out
adc
stos
stos
jge
sub
mov
fistpl
std
ror
xorb
jno
cmp
test
stc
pop
adc
mov
ret
inc
cmpsb
out
fistl
std
and
fstpl
and
cmp
xor
mov
std
pop
dec
cmpsb
or
cmc
iret
xor
jl
xor
push
lock
addb
xchg
xchg
push
aaa
out
jno
aad
in
orl
int3
rcrb
ja
cltd
xchg
xchg
dec
jb
leave
cmpsl
mov
jp
jns
das
iret
mov
iret
xchg
push
shl
adc
out
jns
fimuls
pop
sbb
imul
in
leave
jo
sub
jmp
inc
or
and
cwtl
pusha
lds
mov
sbb
movb
xchg
nop
sbb
push
test
lods
jmp
call
adc
aas
mov
outsb
aas
outsl
cmpb
or
in
shr
ret
add
stos
jo
nop
mov
jl
mull
js
sbb
xchg
aas
stos
xchg
mov
push
cmc
inc
rclb
pusha
lds
out
and
outsl
lcall
dec
lods
push
and
cld
mov
pop
mov
mov
mov
lcall
rorl
mov
mov
adc
sub
out
jecxz
sbb
mov
xchg
shrb
inc
jo,pt
sbb
arpl
iret
lret
mov
into
lods
insl
addr16
ror
repnz
cmp
xor
out
lea
mov
mov
add
add
ja
push
sbb
adc
out
clc
test
clc
jecxz
imul
xchg
lret
fwait
ja
mov
or
xor
ret
sub
mov
or
xchg
outsb
int
or
fwait
lods
int
sbb
cmp
xor
jb
cwtl
ficoms
ret
mov
out
imul
js
mov
jmp
or
pop
outsb
incl
cmp
fcom
es
pop
push
leave
xchg
sub
adc
fdivs
jle
mov
and
in
mov
adc
jg
pop
dec
test
aaa
ljmp
pop
sub
jne
leave
push
xchg
dec
add
mov
dec
cmp
pop
nop
or
aam
repnz
push
ss
stos
mov
lods
fldl2t
cmc
and
add
lods
jmp
adc
shlb
mov
xchg
jbe
das
in
imull
pop
or
jne
shll
inc
lea
jg
cmp
adc
call
xor
insl
dec
pop
cmp
stc
popl
out
icebp
cmc
js
cltd
clc
xchg
mov
or
sbb
je
mov
je
into
and
add
movsl
jg
sbb
push
and
xchg
xchg
jge
pop
pusha
mov
inc
fs
mov
outsl
imul
pusha
out
sub
add
jge
lock
ja
adc
fnstsw
divb
inc
sti
mov
adc
dec
jmp
jp
mov
cmp
jp
add
add
mov
scas
dec
sub
fsubl
push
ljmp
outsb
cmp
cwtl
sub
mov
push
push
in
fwait
insl
call
aad
or
mov
pushf
cmp
xchg
mov
mov
sbb
rolb
sbb
cmp
ja
loope
shll
inc
push
xchg
pop
test
adc
faddl
or
xlat
fisubrl
jmp
repz
int3
xor
lods
sbb
dec
fs
jno
ds
sbb
sub
lock
xchg
or
pushf
mov
mov
loope
pop
xor
movl
cmp
mov
bound
jne
add
adc
cmc
sbb
dec
jno
xor
test
cli
push
adc
jo
sahf
jns
jbe
add
fisttps
popa
rorb
fnstsw
jecxz
pop
test
add
cmp
add
mov
dec
repz
sub
pop
stos
pusha
call
push
jge
and
jl
inc
or
xchg
cmp
bswap
inc
lahf
cwtl
jo
inc
xchg
jb
or
in
push
inc
mov
popa
scas
cld
cmp
outsb
dec
dec
mov
add
adc
jle
jmp
dec
jmp
mov
mov
cli
pop
stos
mov
clc
mov
pop
mov
loop
rcrl
mov
popl
out
shrl
nop
and
pop
mov
fisttpll
jmp
out
mov
mov
daa
mull
or
pop
setnp
add
inc
mov
mov
mov
aad
lock
lock
fcompl
scas
movsb
jl
mov
jne
cmc
test
and
inc
ret
lods
cli
aad
test
arpl
inc
call
fwait
mov
sarl
icebp
out
adc
dec
addb
push
mov
cmpsl
stc
imul
jle
cld
test
mov
sub
push
lods
nopl
je
std
dec
out
mov
xchg
jecxz
dec
fidivs
hlt
dec
cmp
into
cli
sub
xchg
adc
or
js
dec
call
movaps
sbb
mov
cli
xlat
mov
into
bound
xor
mov
call
repz
cmpb
mov
fldl
lcall
push
xor
movsb
pushf
xorl
inc
fistps
add
test
inc
add
xchg
mov
push
loopne
cwtl
iret
pop
push
mov
push
cmp
mov
mov
idivl
push
cwtl
inc
or
popf
nop
clc
xlat
pushf
incb
sti
jb
rorb
stos
mov
adc
imul
jle
jl
rolb
andl
pop
cmp
or
mov
iret
push
cmp
jb
xor
inc
shrl
jnp
push
rorb
je
and
leave
rorb
arpl
cmp
mov
xchg
mov
mov
enter
and
pop
popf
cmp
out
gs
jae
adc
push
sub
loope
xor
push
mov
jmp
cmpsl
cmp
nop
dec
arpl
shrb
ficomps
cmp
pusha
mov
dec
mov
adc
and
insl
inc
sbb
mov
pop
add
cmp
jns
enter
xor
push
mov
cmp
cmp
and
pop
sbb
fwait
insl
imul
mov
xor
and
mov
popf
test
insl
addr16
add
testl
inc
andl
test
xchg
dec
clc
mov
add
push
jmp
repz
push
stos
loopne
xchg
jmp
andb
mov
dec
or
shr
push
fistpll
or
jo
fwait
mov
xchg
bnd
loope
jl
rcll
subps
mov
mov
ja
rcrl
rcr
idiv
mov
xchg
jecxz
test
rcr
xor
daa
or
je
les
je
bound
jne
es
popf
cld
sub
fisubrs
cmp
cmc
xor
jge
push
and
mov
push
in
dec
or
sub
cli
push
jne
xchg
pop
mov
cli
cmpsb
jge
and
mov
mov
inc
nop
and
pop
aas
inc
mov
pop
fisubs
inc
pop
scas
popf
push
mov
mov
pop
xor
jl
inc
js
inc
ja
daa
mov
add
dec
push
punpcklbw
jge
dec
scas
push
cltd
pop
inc
xor
mov
jnp
add
cvttps2pi
ds
rcl
push
loope
mov
stos
das
lret
movsl
nop
mov
int3
movsl
adc
xchg
and
cmp
js
push
loop
popa
int
sub
xor
out
pop
or
sub
repnz
bswap
and
outsb
out
loope
mov
adcb
testb
ja
jns
dec
push
mov
adc
adc
js
aas
lret
mov
in
hlt
inc
push
call
and
aaa
ljmp
enter
jge
rclb
insb
aas
int
mov
inc
arpl
mov
scas
xchg
pop
and
mov
add
nop
mov
dec
or
mov
ss
push
dec
out
cli
sbb
scas
ss
clc
and
je
inc
mov
mov
lcall
or
and
mov
data16
pop
push
leave
xor
xor
out
jbe
mov
pop
jmp
ja
push
imul
push
data16
mov
mov
jno
dec
add
cmp
cmp
aam
cltd
repnz
mov
cmpsl
or
and
add
inc
lea
gs
les
pop
pop
mov
fdivr
outsb
dec
es
pop
fiaddl
lahf
out
cli
cmpsb
add
data16
dec
lret
sbb
aas
rclb
pop
out
xor
adc
movsl
movsl
stc
imul
and
dec
out
test
inc
push
out
das
jmp
fcmovu
fucomip
pop
xchg
dec
xchg
mov
pop
aam
dec
lds
call
and
mov
ja
sub
jb
jp,pt
das
movsl
imul
int3
push
xchg
faddl
xchg
mov
push
xor
and
pop
sub
push
xchg
outsl
outsl
sbb
jbe
cmp
mov
insb
xor
adcb
and
fdivrp
dec
fbstp
icebp
ret
bound
jb
cs
push
in
xchg
xor
sbbb
outsb
mov
and
movsb
stc
mov
ret
sbb
dec
pop
jnp
out
inc
stos
or
lea
adc
mov
repnz
or
sti
pop
lds
icebp
and
add
mov
lret
gs
lods
jo
ret
dec
jbe
and
mov
push
into
orl
push
aad
adc
scas
xor
aam
jae
cmpsl
test
dec
add
jge
jne
sub
cmp
inc
lahf
cmp
add
insl
or
fsts
mov
sub
mov
mov
mov
dec
dec
mov
jecxz
inc
adc
filds
roll
enter
cmp
jno
jmp
das
daa
mov
xlat
cmp
ljmp
add
cmp
sti
stc
or
rcrb
es
shrl
insl
mov
fs
mov
sub
mov
rol
and
lods
or
rcrb
inc
or
nop
mov
pop
leave
pop
pop
xchg
test
out
push
sahf
cmp
mov
sub
push
jne
sbb
test
push
dec
xor
jl
cmp
adc
ftst
or
adc
pop
and
cli
lods
je
push
mov
test
out
scas
xchg
jns
std
fdivs
and
inc
add
and
int3
pop
inc
test
add
popa
cmc
outsb
xchg
sbb
push
jne
adc
mov
fwait
adc
pop
jg
movsb
imul
lods
mov
inc
out
add
jo
xchg
outsb
adc
fwait
mov
sub
or
pop
daa
out
pop
sahf
mov
pop
imul
xchg
fistl
sbb
mov
pop
cs
lods
cli
inc
mov
mov
popf
ret
test
add
lea
add
sarb
adc
mov
notb
clc
cli
push
mov
repnz
push
stos
std
or
fcomp
adc
aad
cli
cwtl
jp
or
push
jnp
inc
in
insl
adc
sti
inc
leave
adc
mov
mov
outsb
sbbb
push
xchg
arpl
int3
call
cmc
pop
adc
mov
dec
jno
orl
cmp
in
divb
dec
adc
xor
out
test
sub
sbb
dec
dec
push
or
jb
mov
or
dec
popa
jbe
popf
popf
or
pop
daa
mov
xor
andl
dec
xor
das
cmp
push
add
push
int
jmp
push
mov
lret
call
inc
stos
adc
loope
cltd
jae
cld
paddusb
ror
mov
lret
mov
lods
jecxz
les
xchg
ffree
jle
sbb
adc
inc
in
adc
sbb
dec
aam
or
or
push
dec
fwait
mov
xlat
pop
push
aad
ret
mov
jno
jo
aas
scas
lds
sbb
cmpsl
imul
fxtract
jnp
adc
mov
pop
and
xor
ljmp
bound
xchg
mov
fistps
lock
es
mov
mov
lahf
mov
sbb
mov
insb
outsl
ds
sub
sbb
vpsadbw
push
xchg
loopne
mov
push
push
sub
fstl
jl
jmp
adc
push
jns,pn
sub
cmp
mov
sub
mov
cmp
insb
mov
lea
int
aas
sub
mov
jmp
call
dec
xchg
xchg
int3
adc
pushf
xchg
push
hlt
cmp
mov
adc
and
pop
mov
call
dec
notb
out
push
mov
xor
stos
xor
cmp
scas
and
arpl
mov
test
js
push
insl
movsb
mov
sbb
xchg
dec
leave
scas
lret
jg
out
lret
jecxz
mov
xor
mov
mov
xchg
mov
ret
sub
pop
jb
dec
cli
pop
cld
stos
into
push
pop
adc
push
mov
add
sbb
stos
mov
sbb
shlb
mov
pop
in
dec
push
and
adc
jbe
adc
cs
or
negb
sbbl
add
xchg
aas
test
std
sbb
cmpsl
je
mov
in
xchg
shr
leave
mov
lods
mov
fwait
popf
movl
std
js
enter
sub
test
sbb
jge
fcom
adc
xchg
xor
movb
sub
jmp
add
jb
incl
and
xlat
push
rcl
out
xor
mov
inc
dec
sub
rol
mov
sub
nop
add
shlb
mov
out
xchg
pop
mov
and
sahf
jno
sub
stos
nop
fbstp
add
xchg
dec
iret
loopne
add
push
test
in
fs
xchg
and
not
ds
scas
cmp
insb
xor
adc
jl
in
jmp
test
mov
push
xchg
icebp
lret
dec
inc
mov
ret
xchg
lret
test
jo
hlt
shrl
roll
loope
std
daa
inc
sbb
dec
xchg
mov
int
pop
fnstcw
icebp
adc
jne
lret
fistl
stos
int
fisttps
and
insb
andb
mov
jns
je
jo
ss
adc
mov
push
and
test
push
hlt
sarb
scas
mov
mov
sub
sbb
mov
lahf
and
mull
pop
mov
xor
aad
jg
adc
cli
repz
pop
repz
repz
daa
and
sbb
outsl
xchg
or
inc
outsb
pop
pop
pop
add
fsubl
add
and
popa
xlat
lret
push
push
push
leave
pop
sbb
das
add
mov
push
add
sbb
movsl
jecxz
cltd
insl
jmp
outsb
sti
out
lret
lret
push
push
cli
and
xor
add
xchg
fstl
inc
xchg
ljmp
pop
inc
lods
dec
dec
dec
popa
shlb
mov
inc
inc
out
sar
dec
rep
dec
mov
cmp
in
push
push
pop
arpl
xchg
xor
jno
and
pop
out
negl
mov
cmc
cs
aas
adc
push
das
xchg
add
repz
movl
pop
push
int3
pop
rorb
cmp
sbbl
mov
push
cld
cltd
jbe
insl
out
inc
push
jb
movsb
mov
loop
cmp
ret
jecxz
imul
andl
ret
repnz
pop
daa
push
fmulp
in
or
out
and
stc
sti
adc
xchg
xchg
push
cmp
fimull
addl
sub
mov
ret
jp
mov
xchg
and
int3
and
dec
addr16
rclb
gs
dec
es
imul
loopne
je
fs
jl
pusha
jae
mov
push
sub
and
push
in
stos
pop
sub
and
adc
lahf
xor
dec
add
push
pop
add
adc
enter
pop
mov
mov
cmp
fidivrl
xor
nop
in
clc
shrb
xchg
or
sub
and
jge
adc
imul
out
push
sub
cltd
mov
iret
mov
pop
push
sarb
push
les
push
icebp
adc
into
mov
pop
mov
pop
pop
in
push
enter
xchg
fmuls
sub
popf
rol
mov
fdiv
call
fcoml
aad
pop
sub
and
pop
sbb
jp
fsubrl
jae
adc
mov
lock
adc
add
and
sbb
mov
or
xor
int
outsb
add
fadd
or
les
stc
out
or
fs
lds
bound
fsub
add
push
les
mov
clc
sbb
xchg
test
jo
mov
xchg
dec
lods
dec
rcrb
mov
andl
adc
daa
adc
aaa
rcl
arpl
scas
sub
inc
dec
and
mov
lahf
hlt
scas
xchg
scas
xor
mov
xchg
sub
mov
arpl
and
inc
popf
sbb
pop
lods
xchg
xor
inc
mov
idivb
inc
xlat
dec
test
movl
add
adc
jbe
push
jl
xchg
dec
and
sahf
xchg
and
popaw
clc
jno
jnp
fcompl
fisttpll
jmp
imul
mov
push
mov
dec
mov
into
lret
leave
outsb
fildll
cmp
add
es
jmp
jl
pushf
call
xor
in
call
mov
popa
xchg
cmp
icebp
inc
adc
push
pop
out
or
xor
sbbb
mov
xor
jecxz
out
sub
inc
insl
xlat
aas
push
fsts
pop
push
xor
mov
fdivrs
push
aam
lock
lods
jne
sub
jnp
mov
mov
and
lret
and
mov
add
fwait
mov
adc
mov
sbb
mov
push
test
pop
inc
push
mov
ret
fmull
add
in
das
push
xchg
sub
xor
in
mov
dec
popa
out
cli
cld
outsl
shrb
aas
sub
rolb
sub
jecxz
test
pop
mov
and
lds
adc
cmp
data16
mov
call
push
lods
cmp
and
fsubr
jecxz
out
rcrb
mov
jle
inc
jg
push
test
mov
popl
in
into
xor
add
sub
xchg
dec
les
push
jg
xchg
dec
jl
negb
jmp
xor
sbbl
movsl
lret
bound
lea
loope
pusha
mov
push
bswap
dec
push
add
lcall
out
jb
mov
cmpsb
pop
pop
push
pop
dec
jnp
adc
es
or
pop
inc
fcomp
ret
jbe
inc
cli
aam
xlat
sbb
push
cmp
xchg
rclb
pop
ficompl
mov
scas
bound
hlt
test
inc
adc
jbe
arpl
xor
jmp
xchg
jno
mov
adc
xchg
in
cmp
scas
cmp
je
jno
mov
lret
dec
test
out
xchg
mov
mov
ss
ss
leave
cmp
or
bnd
das
pop
jmp
loope
arpl
out
mov
daa
lods
pop
cmp
sub
clc
add
inc
xor
lock
mov
pop
xchg
dec
mov
mov
jbe
test
dec
ljmp
out
pop
dec
ljmp
insl
jmp
jmp
push
in
out
sbb
das
cmpl
jg
inc
shll
xchg
loopne
mov
or
pop
sti
or
add
lahf
pusha
ljmp
mov
push
mov
mov
dec
hlt
xchg
mov
xchg
xlat
mov
push
mov
push
inc
jl
push
push
xchg
dec
cmp
movsb
mov
dec
out
outsb
jns
cmp
out
dec
nop
dec
jns
repz
insl
inc
xorb
xchg
divb
stos
pop
mov
sub
ret
xchg
push
sub
adc
cmp
cmp
slwpcb
mov
call
aas
sub
aam
sbb
pop
loop
mov
inc
jne
sbb
cmp
xor
call
sub
adc
loop
stos
jmp
cmp
daa
sub
and
stc
add
mov
mov
sub
insb
call
out
xchg
gs
fcoml
das
pop
and
or
clc
push
xchg
cltd
addr16
jne
mov
xchg
add
testb
xor
pop
pop
sarb
movsl
add
cmpsb
xchg
cwtl
fistl
outsl
adc
aad
mov
dec
shll
cmpb
jmp
cmp
iret
mov
fcoml
test
fistpl
cwtl
xor
pop
cltd
mov
push
cmpsl
gs
push
ljmp
nop
mov
inc
add
ja
pop
jnp
lcallw
popa
bound
fstpt
jecxz
hlt
or
outsb
movsl
or
pop
fdivs
xchg
mov
push
mov
scas
and
loope
pusha
sbb
fimull
sbb
xchg
jno
pop
mov
bound
lcall
inc
cs
jae
test
rcll
mov
mov
lock
stc
jl
cltd
out
xchg
dec
cmp
dec
adc
or
mov
or
xor
inc
test
xchg
in
dec
shrb
outsl
into
sbb
out
ja
and
jle
push
or
add
stc
sub
dec
into
test
repz
das
jbe
and
ret
fidivs
adc
or
loopne
iret
cmp
mov
or
sarl
cmpb
icebp
sbb
sbb
sbb
xchg
mov
pop
xchg
mov
push
cmpsl
outsl
xchg
mov
dec
ret
and
sbb
xchg
arpl
add
cmove
sbb
shlb
cmc
arpl
mov
or
and
add
inc
xor
sahf
pushf
mov
jmp
sbb
adc
int3
test
inc
sbb
fisubl
mov
adc
addr16
int3
lock
pop
jge
sbb
stos
xchg
lret
popa
and
in
icebp
cli
hlt
dec
ret
fistpll
outsl
push
mov
mov
in
jno
loope
push
test
cli
sarb
imul
push
adc
cwtl
inc
mov
or
out
stos
mov
dec
pop
cld
add
in
dec
cmp
lret
call
hlt
mov
pop
lcall
xchg
scas
mov
sbb
mov
and
push
cmp
inc
push
aad
xlat
mov
xchg
ljmp
push
and
std
sti
pop
add
sti
pusha
jbe
ds
repnz
inc
fs
cmp
jl
cltd
jnp
icebp
addl
int
jmp
mov
xlat
xor
repz
push
mov
hlt
aam
fs
lcall
shrb
sub
xchg
es
mov
pop
push
jne
loopne
aam
cld
jmp
fimull
stc
fisttpll
cmp
cltd
inc
add
adc
jnp
dec
nop
aaa
js
xchg
iret
xchg
insb
push
fmull
jle
mov
lret
adc
ja
ds
sbb
cmpsb
mov
or
inc
stc
sub
rclb
movsl
sar
xor
loopne
repz
mov
mov
dec
jg
addb
push
aaa
sbb
fnstsw
and
imul
ret
xor
and
in
mov
fisubrl
stos
push
pop
out
aad
sbb
enter
fdiv
and
pop
neg
mov
push
je
mov
mov
ss
add
in
xchg
adc
sub
push
add
ds
popa
push
jle
push
cltd
or
inc
add
les
and
andl
mov
pop
bound
stos
out
mov
sbb
xor
in
xchg
iret
mov
fstps
xor
mov
cmp
fucomp
cmp
cmpb
iret
aaa
js
and
sbb
sbb
mov
jmp
push
add
imul
lret
jno
sbb
sbb
aaa
or
sbb
push
gs
pop
shl
add
es
imul
and
add
jnp
jmp
fistl
test
call
hlt
xor
lods
psrad
inc
sti
cmovae
andb
dec
sbb
jns
out
pop
call
out
push
jmp
iret
cmp
push
repz
and
sub
ss
dec
dec
icebp
or
rolb
fisttps
jbe
call
mov
inc
mov
push
fidivl
xor
adc
dec
inc
sub
sti
jp
inc
insb
sbb
adc
cmpsb
sub
in
xchg
movsl
jge
sub
call
push
push
test
cs
jne
push
dec
dec
jl
push
or
sub
popf
sbb
and
jb
cwtl
dec
xor
pushf
xchg
loope
inc
mov
ss
xchg
push
sub
jecxz
jp
push
push
test
ja
sub
and
inc
jle
xor
lods
lods
lcall
fcoml
arpl
pop
xchg
jno
pop
inc
sbb
cmp
lods
xor
inc
ficomps
in
imul
jnp
sub
pop
hlt
or
pop
cmpsl
ficoml
iret
lea
push
and
cltd
and
fnstcw
iret
aam
cmpsl
fucomip
icebp
push
adc
push
repz
inc
push
jo
pop
cmp
push
in
inc
sbb
xchg
cmp
adc
je
mull
in
bound
push
xchg
xor
mov
jne
xchg
push
ljmp
jnp
sbb
jbe
xor
cmp
push
out
dec
xchg
mov
dec
and
mov
int3
xchg
movsb
inc
test
popa
int
ss
pop
stos
jbe
xchg
xor
mov
shl
roll
xorl
xor
subl
addr16
call
stos
inc
sbb
pop
mov
rcrb
jg
jecxz
popa
loop
mov
mov
outsb
add
insl
mov
jle
and
aad
cwtl
xor
cmp
and
mov
loop
xor
cmp
sbb
or
popa
lcall
adc
push
ljmp
adc
fwait
pop
jg
pop
add
mov
pop
or
in
add
cmpsb
aam
xchg
rolb
cmpsb
add
std
push
dec
xchg
add
adc
lea
adc
insb
test
inc
notb
cwtl
lds
orb
push
mov
leave
ljmp
imul
xchg
mov
je
jmp
and
push
push
ss
fisubrs
out
movsb
cli
daa
mov
dec
and
adc
pusha
fdivs
sub
adc
lcall
inc
push
add
mov
data16
push
jae
subb
dec
mov
mov
fcomps
sahf
cmc
pmaxub
push
xor
cmpsl
push
sti
xchg
out
jne
pop
add
pop
sub
in
inc
inc
jne
or
fs
inc
xchg
push
mov
pop
mov
ret
mov
cmp
scas
cmp
in
push
test
mov
mov
xchg
xor
xchg
fcmovne
pop
sub
jl
or
mov
ds
in
sub
shrl
je
jp
imul
push
fadds
mov
lahf
or
fistl
dec
mov
lods
and
and
jb
or
leave
inc
mov
jg
aaa
inc
adc
cmp
das
fildl
ret
add
and
test
xchg
andb
xor
daa
mov
cmp
jo
inc
fs
mov
or
std
test
and
test
dec
ret
xchg
sahf
outsl
clc
cltd
gs
daa
push
out
xchg
and
or
cmp
leave
or
sbb
mov
cmp
pop
xchg
mov
mov
and
mov
pop
cmpsb
test
xor
dec
repz
call
xchg
mov
std
xor
test
push
fsubrs
andl
push
mov
dec
icebp
cmp
cltd
mov
cmp
sub
sbb
imul
cmpsb
lcall
xchg
mov
pop
push
roll
jno
push
popf
sub
testl
stos
xchg
sub
gs
movsl
dec
loope
shll
add
add
roll
jb
movsb
leave
mov
jmp
pusha
test
imul
add
mov
aas
dec
dec
mov
pop
test
fdivrl
lods
leave
mov
mov
mov
push
or
xor
mov
fidivrs
insl
push
stos
jecxz
push
mulb
or
jne
mov
into
sub
stos
pop
pushf
fwait
insl
cmpsl
addr16
jg
movsl
xchg
arpl
orb
iret
xor
jmp
add
add
outsb
cmpsb
xchg
aaa
sbb
mulb
js
sbb
push
sbb
and
dec
popf
sahf
xchg
or
gs
aad
pusha
push
ja
xchg
jmp
loope
ret
clc
lahf
ljmp
and
imul
pop
dec
fiadds
dec
mov
int3
mov
lret
push
xchg
popa
gs
in
test
sbb
jl
pop
xor
jb
or
pushf
mov
mov
insl
ds
cli
adc
loop
movsl
stos
notb
popa
adc
cld
mov
push
frstor
inc
leave
rorb
or
mov
add
pop
add
mov
adc
inc
insl
or
cmpsl
bound
push
xor
sbb
jnp
mov
shl
mov
aad
inc
xchg
repnz
test
cmp
fimuls
adc
mov
inc
add
push
xlat
and
insl
sar
ljmp
or
fsts
mov
in
in
sub
adc
xor
push
into
in
mov
push
jle
scas
mov
add
daa
ljmp
gs
ds
in
es
add
pop
mov
test
test
fs
dec
repnz
inc
sbb
cmp
sub
dec
popf
xchg
scas
in
xacquire
into
mov
fnsave
test
and
scas
mov
cmpsb
addr16
xchg
js
xor
inc
mov
notb
je
and
dec
filds
ja
jae
pop
arpl
stos
jo
mov
cld
bound
outsb
lock
sbbb
out
lods
movsb
int
jae
ret
fwait
pusha
movsl
adc
xor
cmp
dec
cmpsb
cwtl
push
dec
sub
xchg
stos
cmc
bnd
clc
andb
push
test
pop
mov
je
leave
stc
add
jns
outsl
push
sbbl
dec
sbb
cwtl
push
sbb
jecxz
xchg
dec
test
in
jo
mov
ss
pop
adcl
lock
sar
jo
add
sub
ja
lods
cmp
cli
add
or
jl
xchg
rolb
addb
jle
js
popa
repnz
aam
or
mov
mov
jge
jecxz
fdivl
push
add
ss
test
mov
rorb
sahf
es
lahf
jmp
addr16
fsubr
jmp
scas
insb
sbb
jge
test
mov
insb
js
jge
or
out
or
insl
pop
mov
dec
pop
sbb
and
push
aaa
cvtpi2ps
push
mov
out
adc
lods
lds
pushf
adc
mov
push
daa
pop
mov
jnp
adc
jno
adc
leave
je
xor
jnp
push
mov
gs
imul
xchg
mov
imul
nop
sti
cmp
in
xchg
icebp
jne
sbb
shr
push
cmpsl
mov
mov
out
call
fwait
mov
enter
dec
mov
arpl
mov
loopne
jmp
dec
xchg
repnz
inc
push
ss
push
xchg
mov
adc
xor
jle
adc
sub
jbe
mov
aas
dec
aad
push
adc
xchg
or
fwait
repnz
call
jnp
xor
stc
fsubrp
clc
add
aad
mov
sbb
cmp
icebp
fiadds
ja
fnstenv
push
push
or
mov
mov
mov
cmpsl
xor
jno
and
push
push
inc
xchg
hlt
ja
mov
repz
ficompl
clc
dec
push
mov
es
mov
in
push
jmp
cmp
pushf
ljmp
push
inc
fprem1
push
mov
mov
mov
loopne
fstpt
nop
test
jg
outsb
stos
push
mov
mov
int
dec
or
push
cmpsl
or
sbb
ret
jno
stos
js
jo
out
mov
sub
jle
pop
test
fsubrl
fcom
sbb
in
jp
aad
dec
push
or
imul
cld
addr16
loope
rclb
pop
xor
push
mov
mov
push
and
stos
push
es
fwait
xor
xor
cmp
sti
shlb
jg
or
loope
push
cmp
dec
mov
icebp
enter
push
xor
in
stos
loop
push
ss
loope
repz
pop
jns
shl
jmp
push
jno
rorl
testl
jg
mov
xor
sub
test
cmpsl
sbb
sub
push
imul
sub
movsb
mov
inc
jmp
dec
sub
sarb
lods
xchg
stos
cmpsl
sub
negl
xchg
fwait
je
sbb
inc
aam
push
pop
inc
add
js
stos
lods
or
inc
push
outsb
sub
into
jg
repnz
push
add
mov
daa
push
addr16
popa
xor
adc
cmp
jl
cmp
cmp
test
mov
xor
xchg
movsl
cmp
sub
pop
mov
insb
pop
dec
sub
xor
xlat
aas
imul
add
sub
lock
push
jb
push
jno
add
mov
dec
inc
cld
rolb
in
jmp
jmp
jecxz
jge
sub
sub
cmp
dec
loope
xlat
and
call
addr16
push
stc
mov
or
jle
adc
insb
dec
mov
push
js
add
cmp
sti
call
outsb
inc
in
ficompl
out
mov
mov
loopne
jae
push
mov
add
push
or
lahf
daa
and
stos
jnp
jge
dec
push
mov
flds
mov
les
fwait
xorl
dec
pusha
mov
pop
add
pusha
push
inc
jg
mov
dec
jmp
fbstp
sbb
push
roll
mov
subl
scas
imul
pop
aam
xchg
in
dec
hlt
dec
aas
cwtl
xchg
rcll
xor
rcr
ljmp
rcrl
or
push
negl
inc
inc
lods
jmp
lahf
aad
jae
push
xor
divl
into
icebp
push
ret
adc
cld
add
xlat
jg
repnz
enter
ja
hlt
ret
imul
adcb
push
sbb
xchg
js
rorb
mov
incl
xor
cmc
inc
inc
lods
fisubrl
imul
xchg
add
cmp
pop
xchg
movsb
mov
aaa
sti
cmp
gs
mov
pop
mov
pop
jae
int
mov
mov
mov
push
mov
je
sub
pop
cmp
inc
mov
imul
leave
pop
or
shll
lods
in
adcl
leave
xchg
pop
dec
cmp
xchg
in
adc
adc
cmp
jmp
lret
in
mov
xchg
push
jns
adc
mov
cmp
pop
push
repz
insl
ljmp
mov
jmp
jmp
push
cmc
sub
xor
addl
insb
stos
dec
fcomi
dec
out
sub
jl
mov
icebp
push
mov
in
xor
add
pop
pushf
adc
jae
movsb
and
loope
inc
pushf
push
lret
mov
js
into
aaa
popl
in
dec
mov
add
mov
insl
inc
xor
mov
lret
cvtpi2ps
in
mov
js
roll
mov
lods
adc
std
out
cld
int
call
icebp
fbstp
mov
adcb
fistpl
mov
iret
or
mov
arpl
cld
cmp
pop
jns
cwtl
pop
jmp
int3
mov
repz
in
lcall
fsts
in
int
dec
push
jne
or
rcr
push
jbe
inc
ficoms
and
aas
icebp
xchg
sbb
inc
mov
sbb
ja
iret
test
inc
jb
test
sbb
mov
inc
ss
pop
sub
jb
and
xchg
pop
hlt
mov
imul
push
inc
mov
sub
jbe
data16
in
addr16
imul
mov
cmpb
out
lock
push
and
mov
push
mov
cltd
mov
pop
inc
mov
repz
add
in
mov
xor
push
mov
popf
adc
push
push
je
cli
arpl
or
mov
jp
cmc
ret
lcall
jae
arpl
xchg
jmp
pusha
pop
cld
xchg
sub
clc
xlat
aaa
pop
cmp
xchg
mov
fisubrs
sbb
jl
cmp
and
pop
xorl
adc
sahf
cmpl
insl
inc
jbe
jp
cs
pop
sahf
push
mov
push
fildll
sub
jecxz
jnp
enter
clc
inc
inc
dec
in
mov
cmpsl
pop
jns
dec
mov
push
mov
imul
repnz
lret
loop
sub
incl
pop
jo
clc
int
sub
mov
adc
mov
ficomps
aad
mov
adc
push
fwait
mov
dec
jge
sbb
movsl
lods
nop
adc
popf
mov
or
fs
sub
xchg
mov
cmp
pop
stc
push
adc
ret
insb
inc
outsl
xchg
and
jns
mov
mov
jl
mul
cmp
into
or
add
sub
daa
imul
out
push
xchg
xchg
mov
push
pop
je
cmp
xchg
in
mov
pop
jecxz
push
js
jbe
add
out
mov
xchg
in
in
out
mov
jne
inc
jo
inc
mov
out
sbb
xchg
or
mov
add
jno
push
orl
add
jl
xchg
inc
sub
aaa
sub
adc
pop
mov
scas
jmp
xor
lds
pusha
jecxz
jge
out
cmpsb
sub
or
outsl
xchg
sbb
imul
sahf
in
jg
mov
add
loop
shrl
ds
lods
cmp
std
sbb
adc
pop
js
fidivrl
test
outsl
movsb
sarb
int3
pop
push
pop
adc
jg
or
icebp
pop
fsubrl
in
pop
aaa
xchg
sub
in
add
test
std
dec
mov
and
ds
pop
aam
add
adc
cltd
ljmp
xor
jne
mov
fadd
pusha
dec
cmp
adc
and
insl
lcall
lret
pop
mov
icebp
xchg
push
mov
cmpb
sub
xchg
and
outsb
mov
sbb
mov
jae
outsl
fcmovbe
mov
mov
adc
push
dec
pop
mov
or
and
xlat
inc
ss
xor
or
or
cwtl
test
fucomp
push
pop
mov
fists
cmp
xor
loope
push
enter
add
and
dec
fidivrs
ss
fcomps
pusha
push
sahf
popf
and
inc
xor
push
mov
out
lods
insb
scas
lock
xor
lret
add
test
or
xchg
push
mov
push
fdivs
fwait
adc
jle
dec
or
imul
shll
std
mov
or
test
fistl
mov
sahf
pop
mov
icebp
or
push
dec
repnz
xchg
insl
cmp
push
jmp
nop
inc
adc
rclb
push
add
xchg
pop
sub
xchg
push
adc
cwtl
cmp
enter
mov
inc
and
insb
add
and
mov
inc
repnz
cld
ret
jge
mov
sub
ljmp
cltd
fistl
sbb
pop
and
jnp
ja
or
dec
jb
xor
in
je
push
xlat
daa
dec
push
pusha
mov
push
and
push
icebp
movsl
testb
adc
pop
enter
or
cs
ficomps
sbb
ret
adc
aas
push
push
loopne
jb
mov
iret
ljmp
lds
cmp
dec
and
jne
jno
cmp
incb
lods
shrl
mov
std
movl
es
dec
call
mov
and
jmp
lcall
lret
mov
lock
lcall
jp
add
loope
out
es
and
pusha
mov
mov
xchg
ficoms
inc
movsb
dec
int
push
xchg
dec
dec
and
add
mov
imull
sub
pop
xorb
push
xchg
std
mov
aas
or
call
lock
hlt
jbe
sub
js
inc
mov
pop
mov
vzeroupper
sub
and
push
push
hlt
pop
or
mov
je
inc
mov
xor
push
jecxz
xchg
in
mov
aas
and
add
mov
mov
or
fistpll
rorl
pop
movsl
mov
or
test
inc
scas
or
inc
xchg
mov
mov
fidivrs
push
dec
cmp
jmp
mov
repz
xchg
ficompl
bound
pop
xchg
cltd
insl
fstps
add
testl
out
or
push
inc
sub
in
dec
xor
xlat
push
loop
or
popa
adc
movsb
lahf
shll
cs
and
shlb
xchg
data16
xor
sbb
inc
inc
mov
rolb
add
inc
lods
mov
adc
sbbl
jo
mov
imull
outsl
inc
test
ljmp
pop
stc
call
mov
fnsave
sbb
adc
mov
lea
cmp
pop
setle
and
les
jns
test
jmp
lock
or
add
incb
dec
test
or
xchg
in
idivl
ret
outsb
pushf
ds
loopne
lods
adc
enter
push
dec
mulb
adc
test
cmc
js
test
mov
divl
pop
dec
fwait
inc
popa
lods
fadd
lret
ljmp
mov
and
mov
ljmp
mov
xchg
inc
ret
jge
push
lock
dec
rcrb
cmp
stc
scas
pop
enter
ds
adc
stos
xchg
sar
imul
mov
addr16
sbb
into
rolb
push
pop
mov
in
pop
in
dec
nop
sub
or
inc
xchg
xchg
push
cli
fdivp
add
fsub
xchg
adc
add
jnp
and
xchg
sbb
out
push
xchg
shll
lods
aam
push
push
ljmp
sub
jno
jg
mov
and
push
adc
sub
add
or
mov
xchg
dec
and
fnstsw
ds
xchg
fsub
and
roll
adc
and
filds
fs
enter
sbb
out
outsb
movl
fs
pop
or
mov
inc
jg
xor
aad
xlat
inc
cmp
xchg
into
lods
sbb
int3
dec
call
sub
dec
fsubrs
scas
enter
push
scas
test
insb
or
dec
mov
dec
in
push
aaa
inc
cmp
lret
fs
fnstenv
pop
push
sbb
jno
arpl
xchg
mov
mov
add
test
cmpsb
jb
push
adc
call
xor
inc
sahf
popa
aaa
dec
push
cmpl
xor
es
add
ds
cmp
xchg
and
cltd
mov
sarb
inc
pop
sbb
mov
daa
std
jge
loop
outsb
clc
jae
push
dec
or
dec
xchg
mov
je
mov
roll
xor
ret
cmp
mov
xchg
pop
enter
in
mov
repnz
dec
cwtl
loop
enter
sbb
xchg
and
popf
inc
rcrl
cmc
insl
lahf
add
mov
jnp
insl
sti
cmp
in
push
ret
ss
dec
mov
sahf
aas
sub
addb
cmp
push
sub
jb
cli
das
dec
out
mov
fiadds
jnp
add
push
inc
lret
mov
arpl
ret
movsb
or
sahf
dec
xor
lds
jns
sub
and
mov
in
fldcw
push
mulb
adc
add
xlat
inc
nop
dec
icebp
jo
aad
fistpl
test
test
push
orl
xor
mov
adc
mov
pusha
addr16
xor
in
adc
cltd
sbb
add
inc
adcb
xchg
les
jmp
lods
sub
jmp
inc
jl
pusha
adcb
xchg
pushf
mov
push
cli
ds
xchg
lahf
jecxz
lret
mov
mov
pop
pop
mov
scas
fisttpll
sarb
lods
or
mov
sarl
inc
loope
arpl
push
das
inc
cmc
test
int
mov
rcll
jge
scas
pop
xor
add
push
mov
das
add
in
mov
jle
cwtl
std
jae
in
les
mov
bound
fstl
dec
clc
xchg
jno
pop
cwtl
pop
outsb
out
jnp
ds
dec
add
inc
ljmp
cmp
sub
sub
je
cmpps
sub
mov
xlat
xor
push
push
insw
loopne
in
repz
in
popf
int3
sub
dec
mov
sbb
cmp
dec
iret
adc
in
popf
jp
add
xor
sub
push
push
mov
arpl
aaa
dec
jecxz
push
inc
lahf
in
arpl
dec
push
fsubrl
mov
daa
cmc
lods
adc
jae
sahf
ds
push
hlt
adc
push
ret
pop
ss
adc
lds
lods
ja
pop
jae
bound
add
jbe
inc
pop
leave
dec
xchg
icebp
pop
insb
push
test
sahf
gs
cmp
xchg
jg
lahf
imul
adc
jbe
in
repnz
testb
dec
inc
nop
das
das
test
test
pop
add
roll
xor
lcall
loopne
xchg
jecxz
pop
mov
sqrtps
mov
pop
test
cmp
arpl
push
inc
stos
xlat
push
xor
outsb
mov
add
test
andb
enter
inc
mov
or
inc
xchg
jbe
cmpsb
leave
sbb
jge
pop
adc
out
jae
sbb
lret
imul
sub
sbb
cmp
jb
inc
lret
out
ds
iret
cmpsb
gs
and
and
or
rcll
fwait
aam
mov
out
in
pop
inc
rorl
inc
js
mov
or
add
mov
adc
loopne
leave
or
insb
pushf
stc
into
inc
iret
movsl
cmp
xchg
pop
andl
cmp
mov
insl
and
test
mov
push
es
pushf
xchg
ss
cmp
mov
cli
inc
dec
mov
or
aas
nop
out
xor
adc
push
adc
sub
push
mov
lcall
adc
add
iret
xor
int
scas
mov
movsl
fwait
dec
ja
insb
mov
aam
cmp
mov
mov
call
mov
movsb
dec
adc
xchg
mov
and
xor
adc
dec
push
fldenv
push
sbb
mov
lret
nop
fucomp
stc
cmp
fadd
fs
jb
ds
pop
aad
int
and
pop
cmp
imull
push
dec
dec
fsubs
dec
mov
fmuls
cmp
add
mov
or
sahf
xchg
divl
lcall
dec
fs
adc
pusha
sub
or
cltd
xchg
jb
imul
push
inc
push
lods
push
lahf
mov
daa
adc
out
pusha
adc
inc
sub
jno
push
lods
imul
and
xchg
mov
fs
in
inc
pop
cmc
push
sub
insb
cmc
cmp
push
mov
push
xchg
call
fdivrp
push
bound
push
mov
addr16
xor
arpl
pop
cmp
mov
ja
xchg
stos
pcmpgtd
in
pop
lret
leave
shlb
mov
xchg
cmp
das
add
in
pop
nop
cmp
mov
xchg
imul
in
mov
and
repz
push
mov
in
les
je
xchg
fstl
dec
jbe
or
xor
xor
ds
add
mov
fnstcw
fbld
movsl
xchg
imul
push
push
push
pop
mov
mov
cwtl
jo
cs
add
aas
lea
or
mov
mov
jno
ja
repz
and
xor
loop
cld
scas
ljmp
add
xchg
pop
pop
stos
hlt
subb
xchg
stos
movsl
push
jg
icebp
xchg
adc
mov
aam
xchg
aam
and
push
dec
test
iret
aas
mov
cmp
inc
pop
bound
fbld
xchg
xchg
lret
out
xchg
and
pop
daa
fnstsw
xchg
cmpsl
dec
mov
mov
aas
and
cmp
and
dec
out
or
or
aaa
in
jp
filds
sbb
jne
enter
aaa
jle
clc
adc
leave
sbb
movsb
aam
mov
adc
jge
xchg
jno
push
pusha
aad
daa
or
inc
dec
xor
int3
xchg
mov
push
outsl
test
mov
mov
dec
dec
pop
dec
scas
lret
mov
movsb
test
jmp
rcl
dec
std
sti
inc
mov
cld
gs
cmp
xchg
out
repz
leave
inc
add
and
lock
loop
or
sub
dec
jno
xchg
es
repz
cltd
dec
mov
mov
fldenv
insl
inc
sti
mov
stc
add
adc
jnp
mov
and
insl
dec
sarb
pop
xchg
jo
xchg
setbe
push
sbbb
mov
and
movsb
sub
and
repz
mov
dec
push
adc
shrl
call
lods
jae
pop
in
loopne
test
scas
adc
mov
adc
dec
fstpl
mov
outsb
mov
and
mov
or
pushf
daa
in
jecxz
xchg
add
stos
xchg
idivl
jge
rcrb
xchg
jo
pop
test
aaa
jae
jmp
sbb
sub
std
aas
mov
pop
bound
sti
nop
test
js
call
test
or
divl
lret
cmp
dec
push
stos
ret
pmaddwd
out
or
sbb
mov
mov
sbb
mov
ljmp
inc
add
scas
dec
xor
outsb
rcr
in
xor
add
xchg
xor
mov
dec
xor
or
fnsave
mov
add
add
cmp
dec
lret
fnsetpm(287
stos
pop
xchg
adc
cwtl
add
cmp
sbb
and
clc
out
fs
rol
and
filds
cmp
ljmp
ret
cmp
lret
loopne
add
mov
clc
arpl
jnp
negl
int3
mov
pmuludq
adc
jb
push
dec
jmp
xor
and
js
xor
gs
mov
push
stos
lret
leave
and
cli
cli
shlb
faddl
nop
imulb
mov
xorb
add
jp
jno
leave
rclb
xor
push
pop
push
hlt
pop
adc
loop
dec
xchg
mov
in
cs
cld
mov
sahf
loop
add
ds
cmp
and
mov
dec
add
add
cmp
ja
shrb
inc
imul
or
mov
push
push
mov
xlat
in
scas
xorb
scas
or
repnz
mov
adc
inc
mov
shll
jae
psubb
mov
mov
pop
repz
pop
imul
xchg
sahf
mov
lods
pop
pop
subb
add
cwtl
mov
push
mov
mov
popa
cs
ret
jno
ret
js
sbb
xlat
xor
aas
push
push
cmpsb
in
sarl
mov
pop
sub
out
and
sbb
cli
scas
xor
fwait
pop
cltd
push
sub
inc
push
loopne
push
inc
mov
nop
cltd
and
out
inc
roll
adc
int3
xchg
ret
xor
mov
je
test
scas
jno
scas
pop
or
out
divl
pop
in
nop
pop
iret
cmpsl
data16
icebp
fsubs
xchg
into
jmp
mov
pop
hlt
xchg
notl
xlat
sub
out
inc
jmp
or
sarb
jne
das
lods
lock
xchg
out
and
push
mov
xchg
rcr
lods
jno
ret
jmp
sbb
test
xchg
stos
jne
lea
pop
mov
adc
push
out
add
push
fdivrp
jmp
mov
arpl
xchg
nop
mov
out
xor
pop
xor
out
daa
loop
and
cli
cmc
inc
dec
out
mov
dec
xor
mov
jb
popf
jns
mov
test
fistpl
add
cmp
js
sbb
loop
divl
call
sti
push
adc
repz
mov
dec
jmp
out
jp
lds
inc
aas
cmpsl
xor
mov
outsb
xor
pop
int3
imul
mov
xchg
int
adc
push
bound
dec
in
in
scas
add
pop
loopne
push
or
test
jne
or
xchg
pop
shrl
inc
pop
pop
sub
loopne
mov
and
movsb
xchg
jae
aaa
push
idiv
push
push
push
testb
icebp
pop
and
push
push
jne
and
lcall
cmpsb
lret
push
out
cmp
out
jne
xchg
push
xchg
imul
jge
hlt
sti
push
and
lret
mov
mov
movsl
dec
leave
add
pop
aam
add
test
in
int
stos
repz
pop
xor
lock
jae
fsub
adc
mov
jecxz
xor
and
out
push
int3
pop
inc
leave
jge
mov
shlb
loopew
dec
jge
mov
cmp
dec
mov
pop
test
sarb
mov
arpl
bound
xor
popa
scas
fistpll
sahf
data16
adc
test
xor
inc
pop
add
bound
add
jmp
in
inc
out
xor
addb
sbb
leave
or
mov
xchg
rsm
cwtl
mov
mov
cmp
popa
cmc
pop
ret
adc
xor
cmp
cld
xchg
and
sub
push
and
out
pop
rorl
je
or
incl
sbb
lcall
xor
es
sbb
ja
xchg
loopne
hlt
enter
fsubs
pop
sub
cmc
pop
jnp
lods
sub
push
pushf
sbb
xchg
pcmpeqb
jle
xchg
mov
ja
movsl
dec
xchg
dec
fbstp
sbb
imul
mov
iret
ucomiss
ja
outsl
mov
fnstcw
pop
push
divb
xchg
call
gs
mov
cmpsl
stos
mov
into
push
inc
pop
sub
pop
loope
mov
xchg
cmp
mov
and
fwait
sahf
test
and
fcoml
cmp
les
shl
enter
cmc
jle
and
test
mov
sahf
cmpl
sub
jmp
mov
or
stos
popa
and
data16
mov
jns
aad
insl
add
ficompl
lods
data16
in
nop
lcall
xchg
and
jb
gs
mov
test
js
jmp
adc
lret
adc
add
sbb
xchg
pop
orl
rol
dec
fcmovbe
xor
pop
inc
mov
jb
and
loopne
jbe
movl
inc
bound
loop
sbb
in
push
jae
lcall
or
fmulp
pushf
mov
mov
js
adc
dec
sub
mov
sub
es
in
or
das
dec
xchg
mov
mov
push
or
mov
icebp
pop
xchg
mov
xchg
popf
or
sbb
ds
add
mov
cmp
adc
xor
cmpsb
sbb
mov
es
dec
stos
fidivrl
std
jne
clc
cmp
add
mov
inc
ret
iret
imul
dec
or
mov
cmpsb
shrl
cmp
ja
dec
call
jp
jg
push
sarl
rorl
mul
jns
add
push
mov
int3
into
cmp
dec
add
movsb
xor
rorl
push
imul
addb
add
test
lcall
enter
orb
inc
add
popa
mov
outsl
push
clc
jnp
xlat
popf
mul
jno
sahf
xchg
imul
nop
adc
inc
jecxz
or
int3
jns
push
test
daa
int3
pop
hlt
adc
xor
inc
mov
xchg
mov
out
pop
js
ja
iret
loop
jne
jecxz
xor
scas
jecxz
cmc
mov
into
lods
das
lret
inc
adc
mov
sub
jo
cmpsb
ss
mov
int3
and
xchg
mov
fs
jns
mov
pop
mov
fisubrs
pop
adcb
pop
rorb
push
int3
mov
into
pusha
and
loope
or
ss
int
in
inc
adc
testl
aas
sub
nop
mov
mov
pop
loope
imul
lock
pushf
push
mov
mov
cmp
sbb
pop
cmp
cmp
xor
add
adc
out
xor
int
lods
and
rol
inc
add
inc
aam
mov
inc
jg
xchg
add
out
fsubl
call
xchg
mov
mov
pushf
lcall
enter
mov
cwtl
std
dec
mov
mov
jg
js
adc
mov
aam
xchg
xchg
push
int3
sbb
inc
pop
insb
mov
popa
add
iret
push
sbb
dec
std
lds
mov
in
call
out
add
into
mov
mov
sbb
add
test
das
sub
arpl
push
xchg
jo
pop
mov
fistpll
shll
lds
pop
pop
hlt
sbb
pop
and
push
loop
mov
and
inc
int
jnp
sbb
sub
out
test
daa
das
mov
popf
data16
lahf
ret
mov
aam
sbb
sub
pop
jno
dec
test
push
lret
add
stos
pop
mov
leave
xchg
ljmp
shrl
mov
push
sbb
ds
aas
and
and
mov
scas
cld
pop
adc
out
in
pop
jle
cmp
or
outsl
jge
lcall
out
pop
mov
cli
adc
mov
mov
test
mov
data16
dec
mov
icebp
gs
and
fisubl
int3
cli
push
inc
hlt
xor
jnp
stc
icebp
in
mov
roll
divps
ljmp
push
lods
out
dec
push
jle
sub
add
inc
insb
shlb
cmp
adc
repz
in
test
pop
jno
test
out
js
shll
ficompl
loopne
icebp
dec
cld
mov
fldenv
iret
scas
fwait
mov
data16
lcall
stos
or
jg
jecxz
cwtl
dec
mov
popa
xchg
mov
sub
lahf
pop
or
xor
popf
inc
lods
in
cld
cmpsl
je
