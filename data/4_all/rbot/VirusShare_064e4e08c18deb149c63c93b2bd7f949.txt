add
mov
daa
jecxz
pop
xchg
or
inc
nop
loope
push
xlat
sbb
jecxz
enter
push
inc
fdivr
xchg
lahf
shll
dec
ds
lahf
jle
das
pusha
aad
cmc
fcmovnu
test
and
lret
and
add
pop
jnp
and
sbb
and
cmpsl
cwtl
push
push
xlat
mov
push
stos
fisubs
add
push
repz
xlat
push
test
insb
dec
stos
add
mov
test
jne
mov
notb
in
mov
push
aaa
mov
cmp
xorl
xchg
jne
call
addr16
leave
jno
and
hlt
repnz
push
mov
stc
jne
ret
pop
mov
sbb
pusha
sub
fsubs
cmp
lds
inc
test
in
popa
inc
stos
lea
popf
movsb
in
xchg
jle
adcl
cmpsb
aaa
je
mov
out
in
in
incl
fs
cmp
add
add
scas
add
fstps
jmp
aad
bound
xchg
fs
xor
adc
pusha
call
sub
cli
rcrb
std
mov
mov
lock
arpl
and
xchg
outsl
int3
mov
in
xchg
jae
cmp
mov
jns
push
outsl
imul
inc
and
add
mov
add
aas
cli
sub
push
aaa
mov
loope
addr16
jno
mov
es
jae
test
stos
adc
jmpw
lods
in
adc
pop
in
sti
mov
inc
dec
sbb
sub
and
sbb
mov
stc
mov
orb
out
sbb
lahf
and
cmp
mov
push
xchg
test
icebp
inc
inc
mov
ret
jne
dec
enter
push
repnz
int
test
pop
push
test
adc
lret
push
jl
push
lds
sub
pop
inc
data16
fnsave
mov
out
push
sbb
daa
sbb
mov
xchg
leave
mov
stc
shrl
ja
xchg
jbe
sbb
shrb
cmp
xor
inc
pusha
mov
xlat
ud1
inc
xor
adc
push
jae
loopne
stc
xchg
mov
hlt
jle
outsb
mov
repz
pop
stos
popf
fs
mov
outsl
loope
adc
fistps
jbe
in
mov
jbe
dec
data16
pop
sub
mov
cld
mov
cmp
jecxz
jb
ss
stos
lret
cltd
push
inc
xchg
mov
add
insb
icebp
das
fs
fs
fdivp
movb
jno
in
jbe
add
or
daa
lahf
test
sub
das
pop
xchg
mov
jae
add
lret
aaa
stos
cmp
popa
and
sbb
fldt
mov
jne
into
inc
mov
ss
fldt
mov
rorb
jo
orb
pop
inc
pop
aas
sub
pop
sub
mov
adcl
repnz
xlat
aaa
lods
xlat
insl
stos
fadds
sub
test
add
cmp
pop
in
mov
jnp
xchg
vmovntps
jne
pop
data16
shr
cmc
or
pop
movsb
mov
mov
sub
sub
fidivrs
bound
je
aas
sti
or
sbb
push
repz
push
ds
pushf
and
mov
scas
push
aaa
in
adc
fildll
mov
add
imul
lods
xchg
sahf
xchg
in
pop
xchg
or
daa
push
fs
faddl
push
dec
shrl
jnp
xor
sub
sbb
xchg
sbb
gs
nop
insb
jle
add
in
push
les
and
insb
in
rorl
add
repz
lods
lods
xchg
xlat
insb
test
mov
sub
xor
inc
cs
movsl
mov
mov
cmp
inc
xor
inc
mov
out
inc
hlt
sbb
push
in
std
cltd
or
push
test
mov
cmc
sbb
xchg
dec
mov
cmp
jnp
push
push
push
mov
lcall
pop
fs
hlt
cmp
stos
and
lcall
std
or
insb
aam
test
pop
lcall
xchg
mov
imul
test
iret
mov
dec
sub
jbe
aaa
push
insb
fwait
sbb
inc
mov
cmp
add
sti
lds
xchg
inc
sarb
outsb
and
push
jb
les
add
inc
adcl
and
or
xchg
pop
xlat
cmovnp
fdivrl
pop
ja
mov
push
fildl
fidivrs
jp
bnd
aam
popa
es
rcrb
xor
ret
pop
test
ret
cltd
and
dec
addr16
xchg
rcrl
mov
js
lret
mov
test
mov
rorl
sbb
jne
flds
shrb
inc
mov
pusha
cs
sbb
xchg
rcl
pop
out
stos
cmp
aas
jl
add
leave
pop
or
loop
cmpsl
push
inc
movsl
adc
jb
mov
push
jmp
mov
jge
dec
addr16
mov
in
sti
xor
daa
clc
mov
fst
mov
ror
mov
shlb
xchg
shll
push
jb
or
inc
pop
sub
popa
repz
aaa
stos
inc
xchg
out
arpl
push
jmp
addr16
je
mov
clc
lret
xor
xchg
xchg
sub
pusha
push
adc
andb
lds
iret
sub
pop
cli
mov
in
test
sti
mov
jb
mov
pop
sbb
add
xor
aaa
adc
into
xor
mov
imul
stos
lea
sbb
xchg
ficoms
add
fdecstp
pop
mov
xor
push
sbb
xchg
daa
into
push
leave
out
into
mov
sub
sub
adcl
repz
lret
mov
dec
ljmp
push
sbb
or
jmp
ret
add
testb
sub
add
rorl
jp
or
cs
jp
cmp
aaa
xchg
in
adc
mov
and
mov
roll
stos
retw
dec
and
adc
mov
push
mov
fcoml
cmc
pusha
inc
movsb
stos
jle
sbb
das
aad
popa
jg
cmc
fnsave
mov
adc
pop
je
fsub
jge
sti
mov
mov
cmp
sub
pop
push
adc
leave
clc
mov
int3
xor
xchg
and
fistps
test
jp
cmp
in
loop
fwait
jo
xchg
outsb
jle
mov
les
push
mov
test
mov
push
andb
jge
sbb
scas
les
inc
in
pop
sbb
lret
lods
popa
loop
and
pop
shr
mov
mov
loopne
cmc
inc
jg
addl
pop
nop
jecxz
mov
fildll
push
and
inc
mov
xor
jne
shlb
frstor
into
pushl
fnstsw
int3
mov
lds
jl
cmc
sahf
jnp
mov
sub
and
rorb
push
clc
hlt
push
add
outsb
daa
addr16
nop
push
mov
mov
test
add
negb
inc
ds
ret
jnp
inc
loop
push
dec
pop
push
dec
dec
xlat
mov
pop
mov
pop
add
imul
mov
sbb
mov
popf
loope
and
xchg
test
or
cmp
mov
inc
inc
popf
pop
push
xchg
ja
mov
cmpb
movl
mov
xor
loope
sbb
pop
clc
and
test
mov
je
lret
cmpl
hlt
add
sub
into
roll
mov
xchg
cmc
jp
mov
out
xchg
bound
adc
xchg
ss
shlb
test
push
fcomps
push
adc
gs
push
fs
pop
in
push
jp
cmc
shlb
xchg
stos
mov
xchg
test
mov
pop
jo
pop
xor
lock
cmc
jns
gs
pop
adc
stc
jl
xor
mov
push
pop
jecxz
adc
push
pop
out
pop
aaa
loope
adc
outsb
rorb
add
je
xchg
push
sub
fidivl
incb
sub
lock
divl
mov
inc
push
aad
jge
nop
sbbb
mov
sbb
je
scas
pushf
mov
mov
xchg
lods
sbb
sarl
lds
push
in
nop
adc
pop
push
xor
xor
jns
push
pop
loope
int
aad
pop
mov
mov
cwtl
add
xor
outsb
mov
xor
jl
mov
xchg
rclb
fsubrs
xchg
addr16
adc
mov
rcr
mov
or
push
aas
or
pop
xor
adc
inc
dec
xor
push
mov
mov
pop
inc
mov
push
lods
xor
jg
dec
push
movsb
cmc
addb
enter
or
or
cld
xor
sub
or
dec
leave
and
lea
or
cmp
sub
sbb
pop
cld
push
jp
mov
pop
and
add
lret
cmp
sbb
xor
subb
jne
xor
jmp
dec
rcrb
mov
and
mov
pop
sahf
and
xchg
pop
mov
sarb
add
hlt
movl
cli
movsb
inc
jl
aaa
pop
sarl
int
xor
mov
rorb
xchg
push
mov
addb
fnsave
lock
mov
sahf
repz
insb
sub
sbb
insb
sbb
pop
adc
dec
cwtl
popf
inc
add
mull
push
mov
adc
xor
xor
pop
popa
sub
test
jae
cmc
fildll
mov
addb
jne
test
dec
cmp
into
jb
into
mov
push
fildl
lock
fistps
test
lahf
pop
fmuls
clc
pop
cmp
dec
test
fadds
add
call
lods
out
xchg
mov
push
out
fwait
or
mov
push
test
cs
pushf
mov
jo
mov
push
and
or
ljmp
lret
push
sbb
icebp
lea
cs
sub
and
pusha
mov
insl
inc
add
je
inc
mov
mov
inc
aas
aam
nop
lds
jl
cli
jecxz
push
leave
add
daa
xchg
test
test
sbb
js
mov
dec
cmp
jo
mov
mov
fimuls
cli
test
or
fs
outsb
pop
mov
inc
rcrl
sti
addr16
mov
adc
movsl
add
inc
sarl
xlat
mov
jge
cmpsb
sub
push
and
sbb
popf
mov
test
aad
orl
xchg
mov
add
adc
sub
lods
sub
not
dec
outsb
mov
lods
push
jmp
jae
xchg
add
shr
in
mov
pop
mov
jmp
dec
mov
repnz
js
jne
cmp
jbe
lahf
pop
sbb
jns
imul
out
stos
ja
int3
inc
sub
adc
loope
in
adc
dec
lods
out
jns
fs
xchg
roll
push
sti
pop
in
mov
fldt
cmpsl
inc
in
add
rorl
mov
jo
push
mov
sub
ret
xchg
int
arpl
mov
add
inc
mov
aaa
pop
inc
ss
loopne
fs
fidivl
sbb
loopne
out
jo
or
mov
mulb
dec
adc
pop
cli
and
inc
call
inc
es
repz
fiaddl
ja
ss
out
pop
mov
pop
ret
test
pop
test
ja
cld
shlb
and
xlat
mov
ss
pop
sub
scas
jne
ljmp
or
jo
xor
aam
xor
adc
jecxz
dec
pushf
sarb
lds
pop
iret
and
cli
and
mov
dec
les
bound
out
jp
mov
add
or
adc
icebp
pushf
repnz
mov
cs
mov
out
cmp
add
or
cltd
sbb
sbb
jno
cli
xor
xchg
das
dec
shrl
gs
rorb
cwtl
xchg
rorb
popa
pop
cmp
popf
mov
mov
sub
pop
test
mov
cmpsl
loopne
and
adc
outsl
pop
ja
popf
insl
push
cmpsl
aad
cwtl
fdivr
jo
xchg
clc
fcos
mov
add
mov
xchg
addr16
cmp
xor
popf
jb
pop
js
outsb
ljmp
fbld
inc
mov
stos
sarb
jg
fwait
cmp
lahf
cmc
adc
sarb
sub
sub
test
jno
xor
sub
cmp
xor
nop
inc
das
or
adc
fdivrl
inc
cmpsb
and
inc
xchg
ja
inc
mov
fisubs
mov
lds
mov
lret
mov
stc
cmp
xchg
loope
lret
sbb
aam
push
out
add
clc
out
xchg
jo
push
scas
lds
jb
stc
loopne
cwtl
pop
mov
mov
sub
inc
mov
mov
jg
fs
adc
xor
adc
arpl
or
jb
xchg
or
insb
xchg
je
xchg
stos
sbb
je
rcll
sbb
stos
and
test
dec
add
pop
jns
jp
es
lcall
and
popa
xor
loopne
inc
add
mov
dec
or
int
das
xchg
mov
inc
dec
adc
mov
mov
pop
fimuls
flds
lods
push
pop
rclb
jbe
out
sbb
mov
pusha
ss
dec
test
fnstsw
js
fiadds
out
cmp
stos
inc
xlat
fcoml
mov
adc
sbb
and
xor
sbb
jge
jge
negl
lret
jno
jle
sbb
add
lea
mov
in
mov
cli
fbstp
and
mov
pop
bound
xchg
lcall
or
leave
xlat
mov
jle
outsb
xor
fisttpl
sub
fwait
shll
jmp
mov
iret
in
lock
rorl
or
pop
filds
repz
jo
setle
adc
fisttpll
rorb
lret
imul
pop
or
push
pop
enter
mov
add
lahf
jno
aaa
sarl
xor
es
mov
loopne
pop
push
sub
stos
xchg
mov
bswap
into
mov
hlt
les
jb
mov
repnz
push
jl
xor
push
stos
test
das
fsubr
xchg
aam
int
push
and
das
inc
pop
test
mov
inc
test
mov
icebp
icebp
xor
adc
shrb
jno
ret
add
fdivrl
pop
mov
fisttpl
sbb
mov
into
xchg
addb
shr
xorb
cmp
test
xchg
lods
sarl
push
xchg
in
inc
repnz
roll
push
push
or
or
jecxz
stos
lret
dec
or
lock
cltd
jge
in
incb
mov
ret
adc
adc
push
gs
sub
cmp
test
adc
xchg
mov
dec
outsl
roll
mov
xor
pushf
push
out
push
pop
mov
jb
or
nop
pop
adc
rcl
arpl
lods
aad
adc
test
jmp
sub
sbb
jnp
sbb
xor
pusha
hlt
jg
cmp
aas
ret
jecxz
push
imul
dec
xor
popf
dec
inc
or
or
test
pusha
movsl
fcoms
push
jnp
push
lcall
sub
shrl
and
push
or
inc
mov
add
push
mov
movb
or
repz
scas
inc
xor
inc
leave
sbb
inc
std
popa
cmp
nop
aad
jecxz
imul
divb
or
and
jge
sub
push
test
mov
jbe
inc
out
pop
daa
lods
push
adc
sub
cli
in
mov
icebp
fldt
fildl
hlt
jae
push
or
lods
mov
mov
int
imul
sbb
fdivr
push
ss
jecxz
sbb
add
jmp
xorb
dec
sbb
mov
add
inc
jo
mov
push
shlb
lcall
ret
inc
mov
cmp
mov
sbb
or
push
rorb
push
shlb
jecxz
mov
push
pop
sbb
mov
fdivl
orb
pop
mov
loop
jp
dec
xchg
pushf
fbstp
jb
jns
jg
mov
sub
jp
test
test
xor
inc
aaa
jo
movsl
inc
mov
xlat
inc
jle
and
in
lret
xchg
mov
mov
and
cmp
movsb
mov
cltd
cmp
jns
mov
or
scas
inc
add
jge
shlb
inc
jp
mov
iret
stos
int
outsb
in
xchg
fists
mov
es
ficompl
pop
iret
xchg
push
push
mov
jecxz
popa
imul
xor
xchg
jl
das
mov
repz
fisubrl
sbb
mov
out
jecxz
mov
push
sub
aas
or
or
cmpsl
fistpll
dec
or
mov
push
mov
sbb
adc
pop
daa
push
cmp
sbb
les
pop
into
pop
das
push
sbb
jl
and
cmp
jl
in
lock
cmp
mov
pop
jmp
js
adc
out
add
lods
ljmp
insb
cmp
and
mov
test
xchg
dec
stos
test
sbb
sqrtps
xor
sbb
xchg
pop
push
int3
push
ljmp
xor
mov
fld
repz
clc
ljmp
and
pop
cmp
popf
xchg
nop
add
push
mov
cli
pop
int3
out
into
shr
divl
cwtl
lcall
out
call
push
leave
lahf
sub
jmp
jb
into
cld
mov
data16
mov
lods
cli
sub
jae
cmp
xlat
xchg
out
push
sub
add
sbb
dec
leave
rcrb
sarb
pop
mov
clc
test
push
push
sub
jno
dec
sbb
or
mov
add
sbb
jp
dec
pop
jb
pop
adc
adc
shlb
idivl
add
lret
shl
test
sbb
sbbb
add
jns
push
stos
ret
imul
nop
inc
mov
outsl
inc
call
cwtl
sbb
leave
cltd
sarl
sbb
fimuls
pop
mov
cmp
push
aad
sub
mov
lods
fstpl
fidivl
mov
pop
sub
jmp
xchg
jb
xchg
dec
dec
xor
lret
hlt
push
xchg
lock
enter
cmpsl
xlat
mov
sti
les
stc
movsb
dec
lret
xchg
es
stos
dec
sahf
sub
popa
das
xchg
data16
cmp
jne
shll
cli
out
adc
xlat
mov
int
mov
popa
mov
dec
das
in
inc
fcmovu
int3
rorl
cli
lods
inc
sbb
insl
jle
adc
mov
xchg
sbb
cmc
cmp
push
sub
inc
cmp
dec
jb
rcrb
jecxz
divl
add
cld
pusha
pop
lea
leave
push
sbb
adc
cmp
popa
sbb
out
xlat
testb
and
hlt
push
inc
adc
xor
sbb
jmp
aaa
test
cmp
jp
jne
stos
test
jb
mov
push
and
mov
push
lds
pop
cmpl
xor
ds
out
xor
lahf
dec
and
push
dec
lea
or
fistl
cmp
xchg
aam
loope
scas
repz
jns
adc
cli
sbb
jno
jnp
test
ficoml
hlt
in
or
imulb
jae
cmp
loope
inc
jno
pushf
hlt
int3
pop
add
inc
adc
shl
outsb
roll
dec
je
xchg
mov
xchg
xchg
xchg
das
por
test
adc
out
scas
loope
xor
daa
and
adc
shrl
clc
push
movsb
inc
into
push
mov
push
inc
gs
and
pop
movsb
adc
test
jno
movsb
sbb
lock
ficomps
push
stc
clc
adc
jecxz
dec
addl
gs
inc
pop
mov
push
fcmovnbe
daa
sbb
xchg
imul
mov
frstor
mov
xor
push
adc
xor
or
imul
sbb
sub
into
mov
ljmp
or
mov
icebp
outsb
jo
jae
sub
int
sti
mov
jbe
lcall
in
xchg
or
adc
repz
out
imulb
sbb
push
int
jmp
xlat
fnsave
xchg
fistpl
mov
out
rcrl
jle
jp
jl
loope
xchg
cmp
jo
stos
lods
xor
mov
mov
mov
pop
jge
or
imul
push
sbb
mov
xchg
push
rorb
or
mov
jp
aam
mov
pop
push
jo
push
out
add
cmpsl
divb
sti
ds
std
popa
popf
jno
shrl
cmp
popa
outsl
into
addr16
jnp
cmp
and
adc
notl
ss
ret
cli
jle
jo
aas
fsubr
cmp
sub
icebp
xchg
adc
sbb
xor
scas
repnz
lea
fisubrl
inc
fmul
hlt
stos
inc
mov
cmc
mov
xchg
mov
and
xor
mov
jge
adcl
enter
mov
cs
or
inc
sti
mov
repnz
pushf
mov
and
test
nop
sub
neg
insl
dec
adc
push
les
andb
xchg
jl
out
lret
and
popa
xor
and
add
inc
inc
push
outsb
jae
enter
xchg
pop
jl
mov
scas
cwtl
add
jge
mov
into
je
js
icebp
mov
inc
outsb
mov
fistpl
jnp
xchg
cltd
adc
std
call
inc
lret
mov
or
ljmp
iret
test
test
lret
sub
sbb
out
xchg
ds
push
adc
mov
push
mov
nop
and
xorl
imul
loopne
fimull
xchg
sti
mov
and
jae
mulb
into
add
sub
ja
mov
mov
inc
jne
add
xor
or
mov
popa
mov
lods
adc
xchg
out
push
jg
arpl
sbb
ljmp
dec
mov
cltd
mov
dec
mov
int3
xor
mov
bound
xorl
in
adc
push
push
jmp
les
dec
xchg
adc
maxpd
addb
jg
int
mov
stc
faddl
xor
xchg
pop
push
jg
or
mov
push
lds
gs
mov
rolb
fisttpll
sbb
and
jne
and
cmp
and
in
test
lods
imulb
shlb
nop
fstp
pushf
fstl
scas
outsl
xchg
pop
cltd
neg
pop
int3
xchg
jge
rclb
xchg
inc
dec
xor
std
ficompl
or
sbb
stc
xchg
push
in
inc
jo
mov
inc
pop
pop
xor
xchg
cmp
mov
push
addr16
dec
dec
adcb
push
dec
or
or
outsb
leave
int
add
cmp
push
loop
mov
pop
loop
repnz
or
out
mov
outsl
scas
int
cmp
adc
rorb
cld
inc
iret
xchg
fsubs
jmp
mov
test
test
aam
adc
dec
outsb
xor
jno
or
add
add
xchg
fadd
cmp
lds
jg
xchg
data16
icebp
add
loopne
mov
imul
ror
fisubl
sub
mov
divb
xchg
dec
jg
lea
sbb
pop
sbb
adc
call
and
fwait
mov
adc
mov
imul
adc
sbb
std
pop
add
pop
push
test
inc
or
dec
lods
and
mov
daa
mov
mov
xor
dec
in
mov
outsb
call
adc
shlb
es
fwait
ds
or
xchg
aad
push
aam
dec
cs
cltd
in
and
jecxz
fsts
faddl
scas
insb
cmpsl
lds
jne
and
xchg
aas
mov
xchg
push
jp
in
lcall
mov
sub
loope
mov
shlb
pop
jl
outsl
cmp
loop
outsb
inc
test
scas
divl
mov
pop
jg
cli
xor
shll
cmpsb
adcl
stos
mov
cltd
testb
std
inc
js
xor
stc
jbe
jnp
xchg
adc
adc
and
lret
inc
lcall
movsl
fsubr
aas
fimull
repnz
movsb
bswap
or
std
add
push
leave
and
or
aaa
lret
sub
cli
sub
push
push
mov
mov
gs
scas
dec
inc
bound
in
add
enter
int
aam
pop
shlb
in
or
or
fldt
lods
call
ret
push
add
xchg
inc
pop
pop
lahf
pop
les
sbb
test
pop
or
fsub
divl
pop
add
push
pop
push
mov
call
enter
or
fnstenv
inc
sbb
ja
xchg
subl
or
sub
outsb
sub
sbb
les
add
push
enter
aaa
xor
inc
or
xor
or
fwait
aaa
sti
push
mov
mov
xchg
jnp
pop
adc
jge
push
stc
dec
mov
add
push
mov
dec
cmpsb
pop
cmpsb
push
mov
jno
lods
shll
xchg
or
mov
rolb
loope
mov
pop
adc
stos
pop
sub
fdivs
or
adc
test
or
push
arpl
mulb
mov
loop
inc
dec
out
aam
mov
push
ret
xor
xor
mov
sbb
nop
push
xor
andb
insl
xchg
faddl
into
test
xor
call
imulb
mov
mov
adc
lahf
xor
loopne
push
mov
xchg
or
fiaddl
cmpsl
and
dec
pop
inc
sub
inc
jg
enter
xor
dec
pushf
out
gs
pop
xchg
out
xchg
cwtl
data16
lret
pop
arpl
xchg
gs
loop
adc
jecxz
int
or
leave
pop
inc
dec
pop
out
jge
mov
mov
mov
mov
fisubrs
andl
or
mov
popa
xchg
inc
rolb
dec
call
mov
xchg
or
jne
dec
or
jo
push
pop
cli
adc
push
mov
cli
cltd
add
lea
pop
and
pop
sahf
loope
pop
rclb
sub
mov
scas
pop
js
and
sti
sbb
push
pop
dec
mov
lds
sub
test
mov
cmp
push
mov
stos
pop
sahf
dec
xor
subl
out
cmp
cmp
mov
xchg
jle
rorb
call
call
mov
in
mov
push
jge
aad
jl
outsl
add
sub
sub
push
addr16
sub
mov
fistpll
sub
push
fsubrl
sti
shl
or
jl
add
mov
shr
mov
jg
ds
out
adc
mov
jbe
add
movsl
add
xchg
add
jmp
ja
cmp
xchg
scas
push
inc
push
push
fistps
movsl
sbb
bound
jmp
lods
mov
push
sbb
add
mov
cs
add
shrb
cltd
mov
repnz
push
addb
lahf
sarl
outsb
push
ret
test
sub
pop
fbstp
or
inc
xor
jmp
outsl
sub
and
mov
lods
xorb
aad
into
test
nop
or
dec
adc
mov
adc
xor
enter
jns
mov
dec
adc
inc
or
loop
mov
pop
add
and
out
cmp
push
inc
cmp
dec
and
dec
pop
push
mov
adc
ret
jmp
and
les
inc
mov
lcall
das
push
addr16
fmull
or
mov
insb
rcll
cmp
xchg
push
push
push
sbb
in
push
lods
add
add
xor
sbb
lods
mov
and
bound
mov
xchg
add
mov
adc
test
push
jo
out
fsts
mov
cmp
sbb
cmp
add
fldln2
push
insl
pop
push
in
movsl
aad
ja
xlat
adc
jmp
dec
mov
in
dec
mov
scas
insl
gs
xchg
push
test
stos
mov
lods
cmpsl
scas
lock
mov
lock
in
mov
stos
mov
out
dec
shr
sub
ret
stos
sub
fbld
inc
xchg
lahf
inc
mov
insb
loop
or
xor
iret
lods
or
rclb
dec
push
cmc
pop
xor
and
ss
inc
inc
mov
gs
mov
in
rorb
adc
fdivrl
jge
cli
xchg
fldz
push
gs
jge
cmp
sti
jge
jnp
inc
rclb
lods
add
ja
aaa
pop
inc
arpl
mov
pop
stos
les
je
jl
cli
imul
mov
push
sarl
mov
xor
loopne
mov
ljmp
cmp
movsb
shl
and
nop
push
cli
sti
cmp
push
mov
lahf
cwtl
xchg
test
pop
xor
push
cs
push
cmp
push
xor
lock
dec
scas
jmp
loop
ret
xchg
and
mov
arpl
js
clc
adcb
leave
mov
cmp
pop
or
mov
add
lea
sbb
xor
inc
push
rorl
and
imul
push
insl
cmp
add
sub
in
push
insb
das
jl
popl
pop
sahf
roll
outsb
aas
pop
push
xor
xlat
and
dec
aaa
push
pop
cmpsb
scas
xchg
xor
jle
dec
divb
clc
and
inc
push
push
mov
adc
jns
pusha
ljmp
xor
clc
sub
ret
jmp
cmpsb
nop
mov
lret
movsb
fisttps
lods
cs
sbb
push
ret
or
stos
xchg
pop
lret
divl
cmp
and
sti
test
xchg
sbb
mov
cmp
xchg
bound
jne
add
inc
fwait
lea
inc
adc
mov
repnz
adc
xor
xchg
out
lret
sbb
mov
pop
sbb
sub
sub
rorl
add
dec
mul
inc
stos
sbb
xchg
jg
mov
icebp
pop
cmpsb
adc
andb
aas
addr16
pop
pusha
rep
or
and
inc
fwait
mov
pop
jp
jg
mov
addl
lock
xor
test
add
sbb
push
add
lret
cmpsb
subb
mov
inc
and
mov
dec
jne
adc
inc
or
loop
cmp
test
pop
xor
cli
jbe
xlat
insl
mov
ljmp
data16
pop
push
pop
dec
mov
cltd
mov
xorb
inc
lds
pop
xlat
lods
jb
xor
aaa
mov
repz
mov
packssdw
shll
int
out
xlat
sub
mov
notb
lret
lds
cmpsb
pusha
clc
add
push
loop
es
xchg
mov
imul
fstpl
adc
add
mov
incb
ret
push
iret
jge
je
jecxz
fsubrl
or
cmpsb
cmp
or
xor
sub
mov
test
andb
fcompl
add
dec
mov
std
mov
outsb
xor
int3
push
es
stc
push
cld
jp
jne
repnz
pop
xor
popf
push
sbb
repz
cli
into
iret
and
push
xchg
or
and
cmp
nop
add
out
int3
cmpsl
push
fiadds
push
or
xor
and
adc
pop
mov
push
dec
push
dec
adc
movsb
mov
xchg
nop
pop
xor
in
xchg
fldt
cwtl
jae
rcrl
or
cwtl
mov
dec
sbb
icebp
data16
icebp
pop
push
jmp
mov
pop
xchg
jnp
mov
test
adc
xchg
inc
loope
cmc
push
fcoms
clc
rcrb
dec
fcoml
test
adcl
mov
and
mov
sub
js
inc
or
cmc
lret
lods
pop
sub
add
push
int3
mov
inc
mov
xchg
cmp
lods
sub
int3
outsb
or
push
filds
cltd
push
mov
js
in
xor
adc
cld
jbe
andl
cltd
xchg
mov
jnp
int
or
sub
bound
lock
sub
push
mov
mov
out
pop
int3
push
add
shll
mov
sbb
ja
pop
inc
mov
pop
mov
mov
sub
pop
sbb
pushf
jg
dec
mov
out
cmpsl
loopne
int3
push
mov
mov
mov
push
xchg
sbb
mov
xchg
imul
out
mov
lret
mov
jg
jg
adc
shlb
shll
loopne
mov
mul
movsl
ret
in
lahf
aad
jns
inc
out
imul
lods
dec
into
add
lret
and
mov
and
jp
std
leave
mov
jb
loopne
xchg
dec
mov
push
sub
lret
insb
test
inc
sbb
in
mov
xchg
decl
enter
jle
lds
ret
in
jno
loop
or
add
and
sbb
lcall
repnz
pop
addr16
inc
jb
repnz
addr16
in
and
xchg
fistpl
popf
jmp
fisubrl
sub
ret
sbb
adcb
pop
jmp
xchg
call
and
jp
jne
inc
daa
repnz
add
mov
sbb
dec
xlat
mov
mov
or
ss
cmpb
adc
bound
add
mov
out
arpl
subl
nop
push
jno
push
int3
dec
sbb
inc
pop
mov
xchg
subl
push
sbb
movsl
rclb
pop
dec
and
push
subl
and
mov
adc
adc
in
sbb
out
or
mov
aaa
mov
add
bound
stc
and
cld
mov
leave
add
ror
mov
pushf
adc
xor
add
inc
negb
fdivr
stc
push
push
lock
das
cmp
arpl
add
jmp
and
movsl
pop
dec
inc
or
andb
cltd
sub
mov
cmpsl
mov
daa
ljmp
mov
mov
aaa
je
lahf
and
dec
jo
pop
mov
sub
lods
adc
shll
xor
xchg
cld
or
xorl
cmpb
mov
sub
jge
pop
test
aas
sub
dec
xchg
je
xor
dec
add
mov
ljmp
cmpb
jp
push
cmp
adc
or
mov
adc
dec
adc
icebp
cmp
add
mov
decb
bound
push
and
mov
push
cltd
adc
out
sub
sbb
out
int
jae
clc
int
into
and
pusha
popa
in
cmc
lcall
sub
movsl
xchg
mov
in
cld
fwait
adc
dec
mov
test
mov
mov
push
or
xchg
les
pop
jae
jle
xchg
stc
shlb
cmp
jp
fs
and
aaa
or
pop
fs
in
shll
push
jbe
mov
sbb
rcrl
mov
mov
imul
pop
ret
incl
pop
or
cld
push
sbb
or
frstor
adc
out
fcoml
sbb
push
test
subl
dec
xor
aas
inc
ror
sbb
add
lahf
or
lock
fsts
or
inc
in
fdiv
mov
out
jl
xor
call
mov
dec
repnz
aad
cli
and
stc
sbb
xchg
stos
shlb
ds
xor
push
and
fcom
sbb
push
aas
xchg
mov
cs
rol
xchg
test
out
jl
or
inc
mov
dec
inc
in
mov
lods
cli
fcmovbe
cli
sbb
xlat
jno
jbe
jns
sbb
icebp
addr16
push
add
rcl
sub
xchg
aas
inc
decb
adc
sub
jp
mov
inc
nop
aad
lods
sub
lcall
add
jg
arpl
out
out
sub
iret
cmp
adc
dec
xchg
rolb
pop
in
cmpsl
inc
and
adc
or
enter
and
loopne
test
cli
outsl
test
js
add
cli
and
inc
mov
xchg
stc
push
jo
pushf
dec
adc
pushf
mov
arpl
dec
or
jle
cmp
inc
popa
mov
scas
dec
or
scas
lret
lea
mov
xchg
xchg
or
mov
push
lds
imul
or
int3
pop
pop
mov
mov
cmp
pusha
push
add
mov
aad
dec
dec
xchg
call
adcb
lret
test
inc
xor
cmp
popa
addr16
out
data16
dec
int3
leave
sbb
popa
js
std
cmpsl
xchg
jb
inc
lods
rol
sub
fisubs
mov
and
aaa
jg
or
aaa
repnz
push
or
scas
fldcw
ficomps
les
sub
add
add
outsb
xor
and
cmp
jns
or
jg
inc
push
mov
fstps
push
pop
cmp
sbbb
call
popf
outsb
fwait
xchg
movsl
and
xchg
xchg
jns
dec
add
push
cmpsb
mov
bound
fstps
push
mov
jmp
leave
push
jae
mov
pop
push
movsl
mov
pop
sahf
pop
ds
and
inc
idiv
jbe
pop
pushf
orb
ss
and
les
push
fldl
mov
dec
push
insl
xor
pop
sbb
stc
out
push
xchg
jbe
xor
js
stos
cmp
pop
push
daa
in
pop
or
cwtl
jbe
jmp
enter
std
cmp
mov
sub
mov
stos
adc
aad
add
xor
mov
js
adcb
mov
rcrb
jge
cs
test
dec
mov
out
dec
and
inc
sahf
dec
xlat
jmp
faddl
push
push
sub
pop
xor
push
jae
mov
mov
stc
lcallw
hlt
jne
arpl
xchg
pop
jmp
xor
xor
fcoml
stc
jno
lock
out
jp
add
cmp
adcl
jmp
xor
and
sub
pop
add
in
shrl
sbb
imul
inc
addr16
xchg
imul
adc
stc
and
and
add
adc
jnp
jns
sub
sub
pop
es
jg
or
cmc
int3
ss
mov
fcoml
mov
shlb
outsl
mov
xor
mov
push
jg
xor
aaa
pop
xlat
jmp
xor
and
mov
sub
sbb
pop
pop
hlt
inc
xor
cmp
ss
pop
dec
aad
test
cmp
fimull
das
ljmp
adc
mov
pusha
jo
aas
jle
dec
aaa
stc
xor
jne
and
arpl
cwtl
dec
cmp
iret
jp
cmp
add
and
adc
scas
out
cltd
adc
inc
ja
and
push
pop
sub
js
mov
rcll
cmp
ljmp
add
pop
pop
sahf
mov
mov
stos
fiadds
movsl
mov
cmp
fisubl
xchg
hlt
lret
xor
js
xor
cld
ret
adc
aam
mov
dec
jb
mov
mov
xor
and
cmc
fdivr
mov
cmpsl
movsl
lahf
jle
xchg
movsb
inc
ds
mov
push
inc
mov
sarl
or
aad
dec
inc
push
or
test
dec
mov
movsl
cwtl
outsb
sub
sbb
sbb
jmp
and
ljmp
jle
ja
and
xor
fisubrl
or
rcl
popf
sbb
add
fdivl
push
pop
in
or
out
cmp
sahf
cmp
mov
adc
insb
test
orl
mov
sub
data16
cmp
mov
in
jle
xlat
jl
jge
es
ficoml
inc
adc
mov
mov
jae
mov
jle
sub
pop
test
pop
outsb
xchg
pusha
int
mov
aas
mull
ret
and
mov
fsubrs
out
lods
sub
mov
mov
mov
mov
mov
sbb
and
mov
fistpll
cmp
jae
sub
shl
xor
mov
fdivs
inc
cmpsl
pop
pop
jnp
mov
sti
push
lock
xor
inc
scas
xchg
mov
push
adc
outsl
dec
jbe
jns
dec
repnz
clc
sahf
jle
jno
bound
jns
inc
int3
sbb
push
or
jnp
outsb
cmpsl
jg
sti
mov
sub
sub
lds
mov
inc
sbb
rol
jno
mov
in
adc
or
aam
out
and
or
jb
scas
mov
arpl
scas
xor
jg
fwait
and
pop
push
rclb
push
push
clc
mov
xor
insb
mov
mov
xchg
cmc
pop
mov
incb
pop
bsr
dec
mov
sub
fwait
mov
in
mov
push
or
and
xchg
pop
insl
cmp
push
std
and
mov
test
dec
loop
bound
into
in
xorb
les
stos
iret
add
shrl
movl
adc
push
add
fsubrs
shlb
dec
iret
testb
rclb
sub
add
add
add
aad
or
ret
fnsave
andb
es
inc
inc
xlat
mov
dec
sub
and
outsb
dec
fwait
sub
cli
mov
jmp
mov
mov
test
lcall
cmp
xchg
aas
push
jmp
int3
mov
pop
pop
adc
jno
cmpsb
mov
popf
inc
adc
push
sarb
addr16
add
test
jno
cld
sbb
pusha
ljmp
les
and
or
sahf
and
out
out
and
or
and
and
fisubl
or
or
xor
push
repnz
cmp
pop
inc
pop
inc
outsb
arpl
icebp
sbb
cmp
dec
ljmp
arpl
push
into
notb
push
push
scas
test
in
or
sar
fmull
enter
mov
cwtl
into
xchg
jg
hlt
cwtl
ja
int
test
xchg
stos
insb
mov
std
in
mov
sub
jbe
outsl
mov
fstl
pop
repnz
lods
dec
and
cmp
pop
aas
mov
mov
lret
cmp
pop
jnp
sbb
clc
cs
push
movsl
add
ss
les
cmp
jg
aad
iret
jge
jns
xor
xchg
push
les
fdivrp
sbb
lods
pushf
xchg
fimuls
rcll
and
int3
repnz
push
mov
pusha
xchg
fwait
adc
ljmp
push
aaa
scas
inc
push
cmpsl
rclb
jbe
jmp
or
arpl
mov
jmp
sub
outsl
into
pop
scas
push
fidivrs
icebp
xchg
cli
sbb
pop
ljmp
mov
call
pop
sti
imul
dec
dec
repz
in
inc
enter
mov
inc
mov
dec
dec
sub
mov
out
sub
and
scas
xchg
jbe
sbb
xor
lcall
jg
mov
fcoml
push
test
pop
fiadds
xchg
jb
pop
push
inc
negb
xchg
arpl
inc
xchg
adc
js,pt
popa
je
cmp
pusha
mov
mov
mov
inc
idivl
jne
in
notl
insl
aad
xor
loopne
pop
push
js
dec
je
push
and
sbb
push
inc
jb
sbb
stos
loop
andps
cli
insb
jbe
mov
sub
stos
xor
push
pushf
fmull
sbb
jg
pop
inc
push
scas
adc
shlb
inc
lret
sbb
imul
add
push
rorb
std
xchg
mov
outsb
push
pop
ja
dec
aad
xchg
daa
bound
mov
int
mov
fwait
add
lahf
push
lds
imul
push
mov
lods
push
mov
sbb
insb
pop
xor
cmp
dec
mov
sub
pusha
or
daa
push
icebp
sub
mov
xor
call
xchg
icebp
popa
cmp
pop
cmp
inc
jbe
dec
movsb
cmp
cltd
pop
daa
xchg
xchg
loopne
sub
pop
repnz
in
jne
mov
pop
nop
jmp
push
int3
ret
aad
nop
ret
ret
fldt
nop
lret
push
inc
xchg
das
and
imul
gs
xchg
lods
lea
lds
adc
loop
jmp
sub
fisubrs
setp
sbb
outsl
iret
mov
xorb
js
mov
xor
push
xchg
mov
jg
ds
sbb
hlt
fsubl
pop
lret
mov
mov
push
push
pcmpgtb
cmpsb
or
fwait
sbb
cmp
inc
pop
les
pop
adcb
aaa
push
sbb
pop
push
pop
shrb
ja
inc
cmp
stc
xchg
mov
add
in
sbb
rol
cmp
idiv
pop
lret
dec
sahf
repz
movsb
loopne
or
jle
test
loope
mov
hlt
fmull
or
pop
lahf
sub
jns
push
pushf
jae
jbe
mov
cli
cmpsl
adc
inc
mov
clc
shl
cmp
dec
sub
jp
and
es
pop
inc
pop
jg
stos
stos
loope
jo
int
and
mov
fnstenv
pop
mov
dec
imul
scas
std
xchg
sub
aas
arpl
movsl
std
ret
fcmovu
inc
daa
jmp
hlt
mov
pop
xorl
cmp
add
subl
sbb
insb
adc
push
pop
mov
hlt
or
sbb
add
jg
int
jle
or
aas
imul
mov
out
iret
xlat
es
pop
scas
sbb
push
mov
jge
xchg
push
pop
cmpsl
in
cli
pop
pop
in
leave
jne
mov
push
fidivl
div
xchg
ret
dec
push
loopne
daa
movsl
cltd
sbb
repnz
sub
sub
jb
and
ljmp
nop
mov
ja
ljmp
lcall
sub
push
lcall
movsl
mov
add
or
int3
jb
rol
test
insl
jo
fs
inc
add
sub
test
mov
in
lret
push
jae
xchg
test
mov
out
mov
dec
add
ss
xor
jbe
int3
inc
jns
sbb
mov
cwtl
mov
pop
and
mov
push
in
xchg
sbb
fnstsw
adc
jns
js
jo
lds
das
iret
jne
pop
sti
push
ret
lods
cmpsl
dec
je
das
lock
outsb
mov
push
cmp
int3
out
daa
dec
add
movsb
sub
jb
xchg
mov
sub
shrl
mov
pcmpeqw
push
xor
jae
ficomps
shl
adc
rcr
mov
mov
pop
sub
push
mov
mov
xchg
and
jae
jns
jb
gs
inc
or
mov
jmp
inc
mov
lods
or
or
enter
xchg
fyl2xp1
fwait
or
dec
popa
xor
ss
push
cmp
insl
fwait
mov
mov
sub
pop
jb
std
ret
pop
aam
jle
popf
mov
sub
dec
int3
insb
movsl
cmpsl
dec
sbb
std
mov
shlb
mov
adc
fcomp
dec
push
lods
jg
dec
icebp
sbb
adcb
mov
das
in
out
out
push
sbb
cmp
out
shrb
pop
call
dec
mov
mov
ds
out
jnp
xor
mov
push
stc
enter
dec
push
push
pop
inc
xchg
add
cmp
movsb
mov
pushf
add
cmp
in
jo
xchg
jbe
add
jnp
nop
or
adc
movsl
xor
jbe
add
call
data16
push
lock
ss
push
sti
cmp
mov
mov
cmpsl
scas
push
push
dec
push
mov
aaa
inc
test
mov
out
xchg
sti
sbb
xchg
sub
jmp
lods
cwtl
popf
insl
sbb
mov
lret
dec
sbb
pop
mov
pop
scas
push
call
jno
mov
addr16
sti
stos
inc
inc
xor
lock
cmc
addr16
mov
pop
and
and
or
vpxor
aam
inc
add
xor
xorl
ficomps
js
cmp
orb
pop
test
in
pop
out
loopne
mov
pushf
add
in
mov
pushf
pusha
ds
add
cmpsb
sub
aas
xor
sbbl
push
out
pop
ficoml
incl
jge
hlt
out
sti
jle
mov
sti
or
insb
cmp
mov
out
jge
cmp
sarb
xor
das
mov
sarb
jae
clc
cmp
mov
lock
xchg
xchg
dec
mov
push
daa
xchg
inc
cwtl
in
fs
lea
aam
fnsave
icebp
jns
xchg
ret
out
mov
test
cmpsl
lods
stos
test
mul
xor
cmp
out
cmc
jl
sbb
in
dec
sahf
mov
xchg
mov
in
testl
jnp
or
hlt
push
bound
and
push
inc
add
adc
aam
cmpsl
xor
fimull
lret
adc
mull
xorb
and
cmc
imul
addr16
test
sub
dec
popa
dec
jmp
inc
pusha
das
ret
xor
dec
loopne
mov
shrl
arpl
ss
ret
cmp
adc
mov
lcallw
enter
dec
xchg
push
sub
rclb
shl
dec
ds
xchg
inc
push
inc
cmp
popf
or
in
cmp
neg
sbb
pop
add
les
inc
xor
and
mov
mov
dec
mov
aaa
xchg
mov
pop
cmpsl
push
mov
into
dec
and
es
cmp
mov
sbb
cli
add
pusha
or
loopne
jno
sti
out
lock
les
dec
repz
push
add
loope
or
std
mov
fwait
imul
or
mov
dec
mov
add
mov
xchg
jecxz
jecxz
push
xor
mov
std
jnp
pushf
mov
dec
mov
add
pop
cmp
and
shll
xchg
jl
xlat
jnp
xchg
pop
lods
lcall
test
imul
inc
rorl
pusha
das
in
cwtl
in
adcb
mov
testb
movaps
into
mov
loopne
cmp
mov
out
push
or
loop
outsb
int
cli
inc
pop
mov
pop
jg
or
test
add
leave
fmull
fimull
lcall
lods
fldenv
cltd
pusha
outsb
cwtl
stos
cld
call
mov
rcll
popf
xchg
fists
inc
movsb
push
fisubl
cmp
and
or
mov
cmc
movaps
stos
adc
in
sbb
fwait
imul
pop
lsl
jmp
ficoml
adc
jmp
pop
xor
jecxz
iret
jecxz
and
xor
shl
add
fisubs
test
aam
popl
inc
mov
fdiv
push
das
subl
pop
or
mov
enter
pop
lods
xor
pop
adc
dec
les
inc
andb
stos
stos
inc
inc
jnp
sub
repnz
push
cmc
scas
pop
scas
jle
nop
or
inc
xchg
shl
push
leave
sub
inc
aad
cwtl
data16
fwait
mov
clc
mov
stos
stc
scas
push
sbb
mov
jbe
xchg
out
movsl
add
push
jne
xor
xchg
mov
addl
and
pop
lahf
int
inc
push
push
xor
add
mov
jmp
jmp
fs
or
int3
aas
nop
daa
push
push
iret
and
sti
pop
dec
fnstsw
mov
jge
jmp
xchg
xchg
shrb
jae
rcll
fsubrl
jmp
pop
inc
push
fistl
fbld
lods
stos
clc
and
mov
mov
inc
adc
insl
lock
sub
int3
daa
fs
outsb
cltd
add
xchg
mov
sahf
mov
push
dec
frstor
jl
jg
outsb
sbb
test
decb
jae
sti
andb
push
and
jmp
jge
ss
cmpsl
aas
pop
popa
dec
dec
mov
cld
rol
rolb
pop
dec
jmp
mov
mov
in
movsb
loopne
cmc
mov
cltd
xchg
mov
int
cs
jns
and
push
cld
mov
in
lret
inc
lods
push
xchg
fdivl
mov
cltd
sub
aas
cwtl
push
ficompl
lea
inc
or
add
js
gs
mov
push
aaa
pusha
mov
imul
inc
neg
insl
mov
rcrb
lret
mov
mov
test
lret
pop
out
data16
xor
sbb
jo
je
jle
lret
cmp
mov
push
in
pop
xchg
shl
std
enter
xlat
in
aad
jecxz
xor
in
xlat
leave
jl
fmulp
mov
dec
shr
popf
xchg
dec
pop
sub
test
test
lahf
xor
test
cmpsb
shl
pop
mov
lcall
jl
add
movsb
mov
test
xlat
add
inc
movsl
fstps
push
or
mov
arpl
cli
movswl
lods
pop
adc
sti
push
outsb
pop
lcall
xor
mov
incb
iret
pop
and
mov
scas
and
pop
pop
jne
xchg
jb
jg
dec
mov
adc
repnz
lods
jb
sbb
mov
pop
jne
sub
mov
pop
fidivrs
loope
pop
xchg
aad
cmp
out
sub
adc
idivb
xor
mov
cli
fimull
out
adc
xchg
cmc
jge
out
mov
sub
rcrb
dec
inc
or
idivb
jmp
mov
lret
sahf
or
shrl
jno
addb
dec
scas
push
dec
mov
sahf
mov
push
cltd
mov
ds
xor
inc
mov
lods
add
nop
in
dec
xlat
xlat
in
sub
jno
and
mov
cmp
cwtl
add
mov
and
and
inc
test
imul
mov
push
out
push
add
pusha
mov
cmp
fsubrs
fistps
imul
adc
push
clc
aas
test
xchg
add
stc
sarb
insl
roll
outsb
dec
rorl
xor
ss
or
pop
rcll
enter
cmp
jb
dec
and
add
add
mov
fwait
inc
addr16
push
sub
daa
push
xchg
pusha
aam
test
jecxz
fisubs
testb
dec
mov
pop
hlt
int3
ret
mov
ret
mov
roll
rcll
outsb
dec
enter
sarl
pusha
lea
or
addr16
xchg
cs
ljmp
ljmp
stos
lock
cmp
ret
clc
jo
or
mov
dec
add
pop
mov
push
outsb
leave
nop
jbe
mov
subl
fucomp
push
aam
push
mov
mov
loop
or
inc
pop
sub
mov
std
faddl
rorl
and
sub
rclb
lcall
and
xor
cld
xchg
inc
roll
gs
test
cwtl
int3
movsb
pusha
and
pusha
add
adc
or
mov
mov
out
mov
fucom
push
popa
ja
add
fstpt
xchg
push
das
test
jae
dec
popa
in
mov
punpckldq
mov
cmp
mov
pop
insl
das
ljmp
ret
add
les
mov
adc
scas
movsb
adc
adc
fsub
ja
adc
jmp
inc
sub
scas
rcl
addb
shl
and
mov
mov
test
iret
adc
aam
push
retw
adc
mov
aam
jo
mov
push
adc
cmp
mov
mov
cwtl
push
adcl
lcall
and
jecxz
mov
nop
push
sbb
adc
mov
popa
aam
ficompl
insb
ficoms
xor
pop
mov
or
outsb
loopne
push
push
adc
push
ss
lods
pushf
mov
scas
sub
ljmp
xor
into
in
mov
scas
cmovno
cmc
push
dec
jg
repz
data16
lahf
xor
pop
pop
aam
xor
in
xorb
dec
int
xorb
and
cmp
add
bound
push
add
and
pop
aas
fwait
sub
imul
fs
or
addr16
xor
adc
test
idiv
dec
insl
stos
scas
cmp
idivl
ljmp
mov
adc
cmpsl
ljmp
loope
fldenv
das
test
mov
daa
enter
lret
lock
push
gs
adc
cmpsb
jae
mov
xchg
in
arpl
sub
xor
ret
out
xor
adc
jo
pop
movsb
add
xor
bound
shl
les
sub
jae
fcmovnbe
out
sbb
and
jne
xor
pop
stos
push
or
sarl
in
inc
test
pop
xchg
mov
cmpsl
dec
cmp
stos
xchg
addb
or
data16
fnstsw
int3
lea
paddsb
push
or
push
iret
js
in
cmp
mov
sbbl
jmp
in
rcl
jb
sti
aam
je
adc
arpl
cwtl
pop
popa
std
mov
pop
test
jg
mov
jmp
cmpsl
sbb
mov
pop
mov
push
leave
popa
jle
dec
fisubrs
js
mov
popl
gs
xor
jne
pop
jno
loopne
mov
lods
sbb
mov
in
sub
test
mov
loop
xor
push
jb
mov
pushf
inc
xor
mov
or
fdivl
mov
stos
mov
loop
pop
das
pop
inc
inc
mov
add
into
mov
test
mov
or
mov
aad
fistpll
mov
adc
xchg
out
lahf
xchg
fdivrs
sbb
aas
int3
pop
cmp
shrl
xlat
push
mov
adc
fildl
jne
or
cmp
into
xor
fsubrs
inc
add
mov
lret
xlat
outsb
xchg
cmp
cld
xor
nop
les
pop
push
mov
jbe
outsb
pop
cmpb
mov
jg
pushf
mov
sub
cmp
loop
mov
data16
daa
insb
and
and
shll
cmp
loop
and
xor
push
shrl
jb
popl
rcr
pusha
jecxz
dec
mov
cmc
cmpsb
pop
sub
lahf
inc
call
pop
cmp
lret
xor
popl
imul
jb
lahf
jne
faddp
mov
push
sub
loop
test
dec
cmp
pusha
fcmovb
je
int3
cs
pop
loop
push
cs
push
int
dec
xlat
sub
scas
jecxz
mov
arpl
jmp
push
cld
aaa
inc
dec
daa
mov
cltd
push
idivl
out
das
lods
and
fstpl
divb
lret
dec
pop
jbe
adc
pusha
inc
fbstp
push
lahf
lahf
jmp
fdivrl
push
mov
dec
sub
jno
or
in
cmpsl
xchg
push
jmp
jae
xchg
out
dec
jp
push
outsl
inc
or
testl
mov
xlat
cmc
insb
ret
imul
jo
inc
icebp
leave
inc
andb
pop
call
lret
xchg
orl
xchg
test
xchg
mov
push
or
pop
push
lahf
add
mov
stos
jg
ret
mov
loope
dec
jne
xchg
lock
cmpsb
jae
int
add
push
adc
int3
aam
divl
or
cmp
ds
loopne
mov
scas
lds
xchg
add
addr16
outsb
mov
jbe
lret
or
xchg
mov
adc
leave
xor
jmp
sti
xchg
push
popa
test
and
fnsave
arpl
xor
js
add
int3
rcrb
jbe
xchg
or
insb
or
xchg
dec
cmpsb
or
hlt
adc
repnz
pop
jp
sbb
cmp
mov
loopne
ret
std
sbb
popf
or
gs
mov
mov
adc
testl
mov
imul
ficomps
dec
imul
fs
lahf
into
rclb
xor
pop
in
xlat
mov
test
data16
repz
pop
es
sbb
mov
jns
cwtl
fsubrs
insb
pop
mov
test
imul
cwtl
push
inc
cmp
xchg
in
pop
jecxz
or
stc
sbb
push
faddl
stc
jnp
fidivl
pop
dec
dec
mov
loope
lods
xor
sub
or
dec
pop
cli
cmp
or
push
int
jp
fisttps
push
enter
cmp
shl
push
dec
cmp
in
faddl
sbb
sub
loop
lds
cli
inc
in
or
jl
cs
pop
mov
sub
or
adc
mov
and
pop
inc
or
xchg
lret
mov
lods
sbb
cmpsl
pop
test
mov
mov
add
leave
lea
push
shlb
adc
cltd
mov
jecxz
fwait
cmp
fsubrp
sbb
adc
cmpsl
xchg
loop
cwtl
push
loopne
mulb
or
cmp
pusha
int3
adc
lahf
add
pushf
adc
sbb
adc
sub
or
data16
mov
push
out
or
or
xchg
push
mov
inc
mov
adcb
xor
ljmp
mov
add
cs
push
lea
adc
insl
add
or
jbe
add
imul
push
push
xor
fisubs
adc
clc
cmp
inc
mov
push
xchg
and
dec
lods
pop
sbb
push
mov
mov
in
lods
xchg
xchg
std
idiv
sbb
loop
outsb
punpcklbw
fwait
rorl
jle
ficoml
scas
jns
inc
mov
pusha
cwtl
dec
jge
add
cmpsl
cs
pop
jle
inc
flds
dec
stc
mov
cmpsl
mov
call
sbbb
mov
cmpsb
and
dec
iret
fwait
stos
test
jne
and
insb
or
xorb
sub
inc
mov
mov
fistl
sub
inc
inc
ja
cld
mov
or
stos
dec
sti
leave
cwtl
inc
ret
pop
imul
inc
push
dec
jmp
lock
daa
aad
sub
shrl
xchg
mov
mov
mov
jecxz
and
add
out
push
clc
pop
xchg
cmpsl
and
dec
push
repz
andb
inc
nop
stos
mov
inc
popf
adc
push
inc
adc
cmp
ss
add
and
lock
dec
sti
sbbb
enter
stos
xor
cmp
inc
adcb
inc
bnd
outsl
pop
push
cmc
xorl
rolb
mov
in
stos
push
cwtl
out
xlat
fildll
int
sahf
mov
and
jge
icebp
ds
xor
pushf
loope
mov
or
rcl
lahf
and
fwait
aas
cmpsb
ret
imul
xlat
push
into
sbb
mov
fcmovu
cmp
sti
bound
pop
or
enter
push
push
adc
rcll
mov
cmc
ret
xor
mulb
and
pushf
and
pop
int3
inc
test
and
clc
adc
dec
mov
jp
cmp
xchg
xchg
loopne
dec
adc
lahf
mov
jae
xchg
mov
mov
dec
stos
mov
mov
dec
cmc
mov
aaa
and
mov
ljmp
inc
adc
cli
push
notl
add
mov
and
pop
cmp
xor
dec
bound
or
gs
insl
xorl
lcall
inc
insl
daa
and
pop
xlat
sbb
mov
daa
pop
in
xor
push
lods
mov
mov
call
ss
sbb
ds
pop
pop
jp
test
cwtl
cmc
jno
lock
xor
out
imul
inc
mov
stos
loopne
sbb
mov
mov
iret
adc
adc
adc
xchg
push
aad
mov
mov
inc
clc
jl
fnclex
cmp
pop
adc
insl
lds
add
xchg
sub
sbb
jb
push
mov
aam
xchg
in
cld
sbb
sub
cltd
outsl
in
repz
pop
or
xchg
call
rcrb
addb
push
mov
dec
test
paddw
mov
cmp
hlt
lock
sbb
ret
mov
les
sbb
jmp
insl
pushf
pop
adc
cmp
sub
inc
sbb
jl
repnz
cmp
add
mov
cmc
loopne
lds
sub
mov
scas
outsl
outsl
dec
adc
mov
jle
jmp
ja
mov
insb
add
sbb
jg
into
stos
sti
fwait
test
lock
clc
dec
lds
cmpsl
mov
es
xchg
sbb
xor
ljmp
push
test
movsb
xor
mov
inc
andl
test
mov
ret
ds
sbb
stc
push
out
lea
xchg
insb
movsb
in
repz
xor
loopne
xchg
mov
mov
hlt
sub
shrb
leave
pop
fwait
insb
das
gs
and
inc
jg,pt
push
sub
mov
mov
dec
loopne
cmc
mov
add
cmp
mov
nop
scas
sbb
push
aam
sahf
cmpsb
test
sbb
mov
decb
lock
hlt
in
out
daa
dec
jge
int
xor
xchg
jecxz
push
shll
pop
sub
dec
lods
mov
and
push
push
mov
pop
pop
pop
xchg
xchg
or
or
shll
mov
jmp
mov
inc
aad
push
adc
push
fcomps
inc
enter
cs
repnz
daa
xorl
addl
sbb
push
in
test
aas
loope
aad
inc
or
mov
or
scas
repnz
mov
cmc
cmpsl
mov
push
mov
cmp
rorb
enter
adc
or
into
test
adc
xchg
iret
add
push
xchg
jg
test
jp
andb
mov
ja
push
das
data16
add
stc
or
dec
popa
pop
jno
mov
scas
xor
data16
add
iret
xor
mov
mov
pop
aaa
ja
pop
jb
fwait
add
aas
cmp
pop
cmp
jecxz
lret
inc
outsl
pop
data16
sbb
out
push
sbb
inc
andl
out
adc
divb
or
xchg
jbe
pop
xor
movsb
shrl
pop
ficoml
jmp
stos
jns
xor
cld
inc
add
sbb
out
lret
shll
adc
repnz
inc
addl
mov
cmp
cmp
pusha
adc
mov
repz
adc
xor
js
and
rol
idivb
xchg
xor
sub
add
dec
ret
xchg
lods
mov
sub
xlat
push
push
ss
mov
addr16
sti
dec
rclb
xor
mov
cmpsl
cmpsl
dec
into
and
mov
cmp
mov
xchg
rcrb
or
int3
dec
jle
sub
fstpt
imul
or
xchg
pop
repz
pushf
mov
je
adc
out
mov
not
mov
xchg
or
cmp
or
outsb
jo
fiaddl
test
fsubr
or
xchg
cmpsb
and
mov
sbb
push
and
cmp
cmpsb
nop
sub
std
sub
xor
xchg
mov
jmp
loope
cmp
arpl
in
xchg
repz
lds
sbb
xchg
push
push
adc
and
adc
in
inc
ret
lds
mov
int3
test
ficompl
cmpsl
or
loopne,pt
push
rclb
lahf
int
sbb
mov
fstl
add
mov
or
aas
btc
push
xor
aad
or
jle
mov
lds
movsl
sub
pop
add
mov
das
cwtl
cmc
add
jbe
pop
dec
fisttps
or
faddl
and
mov
in
pop
push
mov
je
and
scas
sbb
lret
cwtl
enter
and
jo
out
jle
int
clc
sbb
adc
or
gs
push
pop
data16
xchg
movsb
ror
sti
add
jmp
cmp
pusha
ffree
mov
adc
in
in
lcall
rcl
scas
out
addl
mov
cwtl
mov
scas
xchg
int
test
push
mov
jo
sub
fwait
sbb
mov
test
lds
adc
lods
ljmp
sbb
inc
jns
arpl
mov
in
nop
mov
push
xor
fsubrl
fidivl
aas
dec
sub
in
lock
xor
and
jmp
xor
test
pop
xchg
xchg
xchg
push
cmpl
dec
pop
pop
icebp
fmull
sbb
leave
clc
mov
adc
lods
ret
jle
repz
daa
mov
mov
or
pusha
sbb
xor
lahf
pop
sub
subb
sbb
ja
push
out
xchg
add
mov
sub
aam
vmovapd
loope
lret
test
or
dec
test
aas
mov
popa
xchg
sbb
add
out
pop
dec
call
mov
sbbl
sti
inc
cmp
and
pop
and
push
mov
jge
inc
imul
in
fwait
xchg
lret
xchg
test
cltd
aas
ljmp
pop
xlat
test
sti
adc
jns
out
mov
sti
addl
inc
sub
les
ret
push
fadds
cld
cmp
add
repnz
jno
addr16
lds
and
dec
loop
cmp
mov
mov
mov
divl
adc
sahf
rorl
pushf
lret
push
pop
pop
sbb
push
fs
sub
mov
int3
int
sbb
fs
sbb
sbb
push
fists
dec
mov
mov
stos
xchg
xchg
icebp
xor
push
cmpsb
mov
loopne
dec
pusha
sub
flds
sub
jmp
fucom
hlt
sub
lock
adc
adc
pop
int
mov
cld
data16
sbb
outsb
scas
out
addr16
in
repz
decb
pop
cwtl
mov
sti
xor
or
cltd
iret
aad
push
movsb
xor
and
jl
mov
subl
sbb
loopne
loop
jnp
dec
fdivl
in
rorl
test
mov
sub
incl
test
pop
mov
cli
jnp
mov
jno
fisttps
lods
jg
jae
jne
jbe
or
jl
data16
cmp
out
filds
mov
lret
gs
into
adc
pop
sbbl
mov
lcall
cltd
push
lds
arpl
ds
sub
mov
sub
cmp
add
jnp
dec
sub
dec
pop
vpmaxsd
xor
pop
in
sbb
inc
out
inc
push
jge
xor
adc
push
ret
add
push
aam
mov
sub
jge
and
test
mov
into
les
out
sbb
js
pop
pop
lds
xor
xchg
orl
fyl2x
mov
loope
and
mov
push
hlt
js
fdivrp
iret
enter
repnz
fcomi
bound
out
lea
push
ds
test
mov
push
push
dec
das
rcll
and
mov
inc
and
inc
lcall
cmp
pop
fsubl
sub
or
stc
in
mov
lods
mov
daa
or
je
cmpsl
sub
inc
xchg
sub
adc
lret
and
or
outsl
inc
dec
sbb
adc
aad
addb
call
das
jno
aaa
jge
xchg
and
xor
aas
jae
and
outsb
jnp
fidivrl
inc
imul
jae
jl,pn
mov
add
enter
clc
sbb
adc
ljmp
cmp
out
negl
fcmovnbe
std
inc
mov
outsb
or
ds
dec
mov
pop
inc
xorb
hlt
push
xchg
in
xor
fsub
inc
mov
xor
fdivs
push
mov
iret
addr16
je
std
adcb
ljmp
loope
fwait
addl
imul
mov
fdivp
insb
push
mov
pusha
push
adc
pop
jmp
mov
shll
lret
loopne
ja
idivb
jo
mov
mov
lret
sbb
popf
push
xchg
out
std
adc
test
in
cld
adc
xchg
jle
outsl
leave
jecxz
push
test
add
xchg
pop
shll
das
sub
popf
scas
bound
das
and
cmp
push
inc
mov
ret
xchg
pop
push
mov
ret
movsb
pop
stos
push
inc
xchg
cli
cs
inc
adc
push
push
fimull
dec
jecxz
dec
push
loopne
lods
cli
repz
sbb
cmp
and
pop
imul
push
adc
mov
ja
push
mov
mov
mov
adc
sub
je
jbe
repnz
rcr
scas
test
xor
and
cmp
in
loopne
adc
dec
sarb
cltd
stc
cs
push
aad
adc
mov
jmp
out
scas
cmp
sub
sbb
out
mov
cltd
push
data16
adcl
stos
push
adc
add
sub
xchg
pusha
stc
inc
lods
pop
js
movsb
cmpsb
dec
mov
push
testl
cld
int3
mov
out
xchg
and
jp
sub
push
loopne
mov
xchg
mov
xchg
call
pop
loope
ss
int3
cmpsl
aaa
cmpsl
dec
ljmp
test
pop
fidivrs
pop
adc
xor
sub
in
and
nop
mov
mov
loopne
outsb
sbb
lods
pop
lds
jmp
pop
mov
shlb
adc
lods
inc
cld
cmp
mov
pusha
xor
fcoms
or
adc
and
or
rep
jle
sub
sbb
icebp
in
insl
orb
mov
mov
sbb
jns
xlat
add
push
lret
iret
adc
cmpsb
orb
pusha
inc
gs
insb
pushf
add
sti
push
xor
sbb
cmp
jb
xchg
ljmp
cmp
pop
ss
jbe
in
jbe
pop
cltd
mov
add
repnz
test
into
pusha
sub
jnp
sbb
hlt
stc
outsl
loop
mov
xchg
lods
inc
lods
fwait
dec
cs
jp
out
add
adc
push
test
or
fildl
out
sahf
fstpt
dec
add
xchg
aad
and
dec
jmp
mov
in
cmp
test
push
rcr
inc
insl
test
inc
ja
test
adc
daa
pop
dec
sbbb
sbb
fdiv
adc
hlt
cmp
xchg
dec
movsl
and
cmc
pushf
stos
mov
mov
pusha
mov
or
in
xchg
mov
mov
addb
insb
jnp
add
pop
jnp
mov
push
addb
aad
ret
dec
rolb
pop
mov
cmp
test
lock
in
xchg
add
xchg
push
ret
les
or
add
xchg
out
inc
in
cltd
fsubrs
mov
pop
test
mov
push
mov
sub
cli
sub
iret
push
jno
out
cmc
mov
mov
lods
mov
adc
or
xchg
adc
pop
out
mov
andl
cmpsb
mov
nop
jne
add
jbe
shll
xor
xor
push
xor
mov
cltd
mov
inc
dec
out
int
out
cwtl
adc
outsb
dec
xchg
into
or
add
in
rorl
mov
repz
adc
repnz
add
dec
test
dec
test
xlat
sbb
mov
jp
push
fcmovnbe
xchg
mov
mov
les
or
sub
and
and
test
dec
mov
cwtl
hlt
jb
cmp
movsb
in
enter
jns
push
aas
add
jmp
adc
push
sub
mov
out
add
sbb
inc
stos
stos
mov
in
rcl
loop
push
cmp
lds
jae
adc
je
fistps
les
leave
clc
fcmovb
pop
inc
lcall
push
daa
push
mov
je
bound
and
rcr
imul
dec
fs
xor
mov
sbb
inc
in
fcos
movsb
fstp
test
fcoml
inc
jno
hlt
mov
pop
ss
js
ja
push
add
mov
mov
fcoms
xorb
nop
xchg
fisubs
push
scas
popa
dec
push
imul
outsb
push
jae
pop
push
daa
mov
insl
in
mov
adc
paddq
sti
cli
mov
fsub
pop
jmp
outsl
xor
enter
lods
push
push
mov
lret
fs
popf
insl
aaa
push
mov
lock
sub
out
negb
in
dec
push
xor
mov
adc
pop
shrb
sbb
out
fdivrp
lcall
push
adc
sub
sbb
or
sub
mov
std
cltd
faddl
cmp
add
aam
out
push
gs
loopne
cmp
xorb
jo
loopne
ret
mov
pop
xor
icebp
xchg
mov
sub
sub
pop
push
sub
pop
je
jmp
dec
cld
mov
lds
bound
pop
pop
cmp
push
mov
push
fcmovbe
testl
add
sub
and
jg
into
push
inc
repz
nop
xchg
cltd
outsl
cmp
test
movsl
fisubrs
in
mov
dec
pop
mov
add
mov
or
pushf
push
jecxz
rcll
stos
mov
xchg
push
inc
xchg
stos
in
inc
les
out
out
sub
mov
loop
sahf
inc
insl
and
faddp
cmpsb
jp
dec
jno
ret
mov
loop
in
or
adc
daa
pop
xor
lret
jge
lds
sbb
stos
stos
imul
push
pop
xorl
push
shrb
sub
jnp
sbb
jns
sahf
cmp
out
jo
pop
cmp
and
js
imul
inc
adc
sahf
fists
out
test
mov
je
decb
inc
adc
dec
jp
mov
addl
les
dec
push
cli
dec
ret
push
cwtl
push
xchg
idivb
lock
testl
out
movsl
stos
and
es
sbb
sbb
mov
push
in
stos
dec
push
out
test
mov
dec
in
fists
jb
xor
xor
std
lret
stos
repz
pop
jnp
stc
mov
jle
jbe
xor
and
cltd
add
mov
sbb
and
wrmsr
dec
xchg
loopne
sub
xchg
fsubrl
cmc
sub
adc
out
xor
gs
mov
push
fistpl
or
scas
ret
int3
sub
fstps
mov
add
addr16
mov
and
test
cmp
aam
xchg
adc
push
xor
or
mov
inc
pop
fmul
stos
inc
and
xchg
inc
icebp
test
dec
loope
imul
rclb
mov
loopne
sub
lahf
loope
pushf
gs
dec
popa
mov
aaa
or
xor
xor
sbb
lea
or
jb
std
outsl
in
or
shlb
stos
jecxz
sub
sbb
push
adc
dec
pop
mov
into
push
jae
iret
sbb
aad
xchg
mov
ret
adc
lock
shr
or
outsb
mov
inc
movsb
shlb
iret
push
xchg
outsl
jecxz
fnsave
and
lea
imul
add
sbb
pop
test
and
cli
enter
add
out
adc
adc
add
in
and
push
cmc
cmp
xchg
fcmovnbe
aam
in
jo
inc
les
fisttpll
lods
enter
into
xchg
cli
add
fmul
loop
ljmp
or
leave
adc
or
cmp
mov
pop
imul
or
inc
dec
mov
dec
pop
mov
sbb
sbb
push
imul
jbe
pop
sub
dec
and
inc
int
add
pop
push
xor
jne
flds
jmp
or
jle
fiadds
mov
shlb
mulb
mov
test
sbb
test
outsl
lock
jecxz
mov
dec
push
push
stos
xchg
lea
hlt
push
aas
inc
jae
repz
in
imulb
xor
push
inc
popf
sbb
sbb
xlat
push
pushf
jne
popf
sbb
std
hlt
mov
lret
icebp
stos
dec
cwtl
or
mov
aad
sbb
xor
filds
lcall
cmpsb
xor
adc
jg
icebp
pop
jl
xor
pop
or
mov
rcrl
sar
ret
loope,pt
adc
das
cmc
pop
mov
enter
into
cmp
sbb
popa
inc
call
cmp
cmp
idivl
fmulp
and
and
sub
repnz
call
mov
sub
xor
sub
add
les
mov
rol
xor
gs
mov
sub
mov
add
lret
lock
mov
gs
or
fmuls
cmp
std
test
push
mov
dec
dec
inc
lock
push
add
repz
shrl
fnstsw
dec
nop
jo
jno
test
repnz
dec
sahf
or
and
and
jle
lock
mov
nop
adcb
push
test
dec
mov
mov
push
and
outsl
mov
mov
test
inc
adc
lret
lea
lea
cmpsb
pop
ss
push
imul
or
pop
scas
incb
pusha
mov
mov
loopne
negb
inc
ret
mov
mov
dec
or
push
shr
ret
mov
mov
xor
shl
test
add
push
sbb
pop
js
mov
loopne
movsb
mov
jne
ss
and
cmp
inc
pushf
add
xor
pop
test
dec
mov
ss
jb
adc
popa
push
sub
adc
icebp
imul
mov
into
jb
jnp
and
adc
mov
sti
inc
pop
inc
inc
mov
sub
jb
out
or
sbb
aad
push
negl
fs
mov
dec
fiadds
insb
dec
push
dec
push
inc
bound
xchg
push
fsubrl
cmp
and
loopne
add
jo
sub
int3
ret
lods
jecxz
sarl
sbb
in
dec
fwait
cmp
xchg
mov
aam
adc
in
push
hlt
fisubrl
inc
lret
or
xchg
int
sbb
pop
lret
push
add
push
das
cwtl
adc
stos
xchg
lahf
jb
mov
add
xchg
not
sub
pop
sbb
adc
mov
mov
cli
dec
jb
or
inc
cmp
test
push
add
sbb
repnz
mov
aam
out
jne
ja
cld
sub
fs
dec
dec
lds
mov
jge
inc
incb
mov
mov
imul
mov
pop
or
adc
dec
jnp
into
sarl
fwait
xchg
mov
xor
or
jecxz
cmpsb
mov
sub
jb
stos
mov
add
mov
jae
js
pop
xlat
mov
test
mov
shlb
push
mov
loop
cmp
sbb
xor
sub
mov
xchg
dec
loope
rolb
xlat
cmp
sbb
fwait
sbb
or
push
stos
cs
sbb
push
arpl
xor
insl
inc
xor
pop
scas
dec
cmp
rorb
mov
cltd
repz
mov
add
lods
ds
aam
les
out
js
cltd
pop
cltd
fcomi
xor
pop
mov
popf
xchg
sub
xor
xor
push
xchg
lcall
lcall
lock
cmp
jo
test
xor
cwtl
cli
insb
xor
fwait
es
adc
inc
scas
adc
sub
jg
dec
xchg
mov
jp
lock
mov
in
pop
push
push
and
pop
jno
xchg
aaa
inc
mov
inc
inc
jno
inc
mov
adc
int
add
xor
jg
push
mov
imul
movsb
adc
pop
sub
mov
lcall
int3
mov
xor
in
add
out
andb
fcoms
cld
outsl
or
sbb
mov
mov
sub
rcrb
imul
lcall
cmp
sub
dec
adc
jbe
jle
add
inc
pop
mov
lock
dec
inc
ss
dec
lahf
push
adc
aam
pop
mov
repnz
in
loopne
lret
xchg
fcom
pop
jns
divb
sub
popa
add
cs
add
push
xchg
stc
testl
cs
ret
lods
int3
jp
dec
mov
fwait
aam
sbb
scas
sub
xor
popf
pop
inc
ret
lea
mov
mov
cmpsb
cmpsl
jb
cltd
jno
in
aad
lds
lcall
mov
int3
xor
nop
xor
mov
jmp
cmp
inc
lock
repnz
fnstenv
mov
sbb
dec
jle
and
fldl
xor
ret
mov
push
cmp
dec
ljmp
cmp
lds
cmpsl
out
jae
mov
repz
daa
ljmp
add
xlat
add
sbb
lret
pop
into
psubsb
test
scas
mov
mov
aas
movsl
mov
clc
repz
fwait
pop
lret
add
faddl
popa
shll
pop
dec
hlt
scas
dec
dec
inc
ljmp
dec
es
push
cmp
push
jl
mov
pop
cwtl
lods
jo
pop
push
je
cld
and
mov
inc
add
fwait
repnz
out
sar
in
add
xchg
or
inc
or
pop
jo
sti
nop
aas
sbb
int
in
pop
stos
arpl
or
cmp
movsl
pusha
xor
push
fwait
stos
sti
pop
dec
pop
mov
xchg
jmp
mov
sbbl
mov
ds
pusha
push
inc
fmull
xchg
cmp
bound
insb
mov
cmp
mov
cld
cmpsl
shl
cltd
dec
test
or
mov
sahf
push
and
negb
jae
sub
push
sbb
daa
imul
add
push
mov
das
cs
decb
dec
pop
das
push
add
faddl
mov
mov
xlat
mov
jbe
fsts
insb
jecxz
out
xchg
add
jbe
or
mov
icebp
into
xor
out
pushf
push
cmp
mov
mov
addb
jnp
push
mov
lret
cmp
push
push
sub
int
sti
xor
mov
cmp
mov
and
adc
lds
out
and
and
dec
push
xchg
sub
mov
fildl
sbb
popf
mov
jg
negl
rcll
pop
leave
mov
ja
adc
es
out
fstpt
jg
ret
push
test
mov
les
push
jecxz
clc
mov
repnz
repnz
lahf
aaa
cmpsl
xchg
push
jnp
push
sti
xchg
dec
lock
mov
adc
in
mov
push
or
clc
iret
fs
mov
leave
outsl
xchg
sub
cmp
jl
lods
pop
sub
or
sub
shr
testb
addr16
cld
jo
loopne
pop
and
mov
mov
cs
push
jne
shlb
push
add
nop
lods
shr
jecxz
mov
orb
je
sti
stos
pop
ds
sub
pop
lcall
cwtl
jge
icebp
jno
add
cmpb
jnp
push
or
push
cmp
and
jns
add
pop
or
add
or
mov
adc
mov
jb
fsubrl
daa
fldcw
je
xchg
aam
add
add
outsl
inc
cmp
mov
fs
push
mov
sahf
call
js
divb
adc
test
daa
add
jmp
cmpsl
mov
inc
pop
jmp
xchg
sub
cmp
arpl
movsl
sti
movsb
jle
pop
negl
adc
mov
scas
mov
shll
mov
test
sti
sbb
repz
test
arpl
out
adc
lock
jecxz
sti
leave
push
cmp
xor
frstor
insb
outsb
dec
pop
lcall
mov
sbbb
popf
mov
das
push
insl
mov
push
dec
or
iret
push
pop
sub
push
sbb
xchg
insb
divl
jg
push
divl
push
aam
fstpt
jge
push
push
nop
or
sub
popf
mov
dec
adc
jg
cmp
xlat
shlb
jbe
loope
ja
xor
rcrl
bound
bound
loope
enter
mov
sub
repnz
fsubl
outsb
jnp
lods
aas
mov
cli
mov
sahf
mov
jb
cmp
lods
mov
adc
or
xchg
xor
add
and
xchg
test
aas
cwtl
xor
into
mov
mov
add
lret
fldt
jl
mov
push
lods
push
or
pop
outsl
mov
int3
test
ret
arpl
jno
and
xchg
cs
jmp
data16
repz
inc
out
enter
mov
cld
xor
pop
int
mov
xor
mov
mov
adc
mov
sti
lods
push
or
loopne
xchg
or
lods
pop
inc
inc
push
sub
dec
dec
jp
jmp
jae
data16
jg
dec
lods
ds
add
sub
pushf
cmp
inc
jb
shlb
xchg
or
out
cmp
imul
int3
inc
or
add
sub
fwait
lret
lds
ficomps
adc
mov
fs
pop
rol
sahf
xor
icebp
outsl
out
mov
imul
testl
inc
je
aaa
mov
pop
push
cmp
ret
pop
ret
sbb
inc
mov
adc
inc
mov
xlat
rorb
movsb
pop
adc
leave
mov
or
cmpsl
mov
subb
loop
sub
std
xlat
pop
hlt
pusha
xchg
sbb
jno
xchg
inc
js
push
sti
cld
push
sbb
cmp
sbbl
pushf
ret
popf
mov
std
daa
je
cwtl
jno
sbb
ja
xorb
loop
jle
mov
lock
decb
ret
cld
mov
push
mov
xlat
and
mov
gs
sub
adc
jg
fldl
mov
pop
mov
aam
mov
mov
fadds
adc
jp
sbb
xchg
int3
push
icebp
xor
mov
out
lods
movl
adc
mov
or
ds
sub
fwait
out
lds
jb
inc
cmp
mov
ss
push
and
fisubl
test
sub
dec
dec
jmp
sahf
inc
mov
lea
popa
test
rclb
push
add
pmaxub
sbb
outsl
data16
scas
sbb
pop
addl
lods
mov
aaa
stos
pop
inc
jae
jg
orl
inc
out
shll
mov
imul
mov
cmp
pushf
rorb
in
ja
xor
sarl
jb
test
cli
imul
dec
adc
adc
repnz
je
sarb
mov
test
in
push
ljmp
mov
das
add
mov
dec
adc
arpl
jmp
add
pop
fcomps
fistps
sub
lds
fsubrs
inc
mov
mov
lea
lock
and
ds
aas
inc
notb
pusha
inc
push
dec
orl
and
lret
negl
and
pop
test
jb
sbb
dec
das
or
lds
jge
fidivrs
insl
ud1
push
mov
adc
xor
cltd
inc
leave
xor
xorl
je
sbb
cmp
jl
fidivl
add
test
pandn
lcall
dec
in
in
ror
mov
rcl
pop
cmp
iret
fs
jbe
push
xor
push
outsl
jl
mov
popf
or
pop
mov
add
fisubrs
cmp
xchg
rcr
cld
loopne
aad
add
mov
adc
jmp
lods
inc
dec
dec
inc
in
mov
stos
jne
dec
inc
popa
dec
jne
repz
inc
cltd
mov
rorb
fsubl
stc
jno
lcall
jp
mov
std
cli
or
es
lea
cmp
aaa
js,pn
test
fbld
jae
mov
ds
jmp
loopne
and
xchg
ret
mov
test
jne
pop
add
insb
outsl
or
xor
fcom
iret
pop
arpl
xchg
xchg
push
in
jecxz
ret
shrl
ret
push
sub
or
popf
push
in
jae
iret
data16
sub
ret
jmp
sahf
les
adc
mov
pop
sub
mov
popf
mov
adc
in
dec
arpl
push
inc
in
xchg
and
mov
addr16
or
std
mov
test
fs
cmp
jmp
jnp
and
xchg
or
jmp
ljmp
push
add
xchg
jb
insb
arpl
aad
lea
cld
inc
in
enter
jl
dec
and
das
sbb
adc
add
pop
mov
xor
adc
inc
dec
data16
mov
jb
int3
outsl
je
stc
js
dec
lret
adc
int
stos
jp
cld
iret
xchg
test
ljmp
add
stos
mov
mov
xlat
daa
imul
push
dec
fiaddl
adc
and
add
jo
addl
push
jmp
scas
adc
shlb
jo,pt
jp
fsub
outsb
push
repnz
mov
sub
sbb
scas
push
into
cld
xchg
shrb
scas
push
dec
sub
or
sbb
cmp
insb
lock
rcll
insl
lret
andl
pop
test
popa
out
fcmovu
xor
jmp
pop
cwtl
and
or
out
mov
jbe
dec
cltd
add
je
mov
push
sbb
popf
adcb
dec
pop
arpl
popa
movsb
push
cmpsl
xchg
pushf
and
jl
pop
sub
mov
mov
das
sbb
mov
out
jne
cld
cmp
dec
xchg
push
push
mov
repz
mov
lahf
fstpt
mov
leave
push
mov
mov
mov
bound
mov
add
mov
dec
jno
faddl
mov
sbb
out
lock
mov
mov
fwait
js
pop
leave
add
xor
adc
vcvtsd2si
mov
add
add
cltd
or
in
pop
sbb
xor
mov
aaa
adc
mov
fistpll
cltd
lock
imul
ret
mov
fistpl
inc
lock
stc
data16
mov
cmp
outsb
testb
cli
sbb
jne
mov
or
mov
adc
jle
lock
shrb
sahf
mov
xchg
repnz
jecxz
int3
sub
lret
adc
push
adc
and
or
lret
push
aaa
and
imul
push
jg
jp
adc
dec
and
sub
push
scas
ljmp
test
inc
insl
push
daa
mov
lret
ret
out
cli
push
and
call
sbb
loop
push
mov
imul
insb
lea
jo
push
lret
fstpl
push
and
push
movsl
sbb
or
jecxz
iret
bound
mov
ja
adc
add
fdivrl
cmp
add
aas
lods
sbb
test
fucomp
or
jne
mov
out
sbb
outsl
shll
push
sbb
push
shlb
in
xchg
push
push
mov
add
daa
mov
test
pop
xchg
pop
enter
and
xor
or
mov
push
cmp
ret
cmpsb
repnz
ret
bound
adc
fstl
cmp
fdivrl
pusha
popa
cmpsb
add
inc
mov
cmc
lret
mov
imull
xchg
xor
jp
cmpl
in
mov
cmp
les
lods
mov
jne
or
or
lret
mov
into
inc
out
scas
xchg
or
addr16
jle
xor
lcall
push
push
daa
dec
adc
or
fcmovnu
add
pop
cmp
pop
xchg
inc
sbb
into
inc
mov
xor
sub
mov
add
pop
xchg
bound
stos
mov
push
je
cwtl
sub
ljmp
in
jae
test
lcall
dec
cli
add
stc
ds
xchg
cs
fs
shl
mov
lea
jb
in
stos
mov
mov
test
scas
hlt
out
and
xor
jbe
cmp
mov
xor
sub
bound
movl
or
cli
jbe
pop
add
inc
lea
xlat
push
xlat
fwait
jo
pop
clc
test
mov
sbb
shll
icebp
rorl
sub
fcom
or
pusha
adc
jp
xor
aas
cmpsl
push
dec
daa
sub
push
sub
mov
cltd
and
int
adc
insb
out
push
or
pop
fwait
or
fildl
repz
push
ret
lret
push
cld
push
pop
fs
mov
xchg
mov
aas
arpl
mov
add
xor
xlat
pop
lods
das
call
icebp
je
ret
jae
cmpsl
jg
movsl
std
jge
push
fidivs
or
sbb
xchg
sub
aaa
mov
test
adc
lods
sub
stos
clc
in
push
mov
inc
pop
lds
and
iret
lret
xchg
das
test
lret
lret
cmpl
and
les
jl
jae
ds
stos
and
inc
repz
cs
adc
fisubs
jmp
xchg
push
fscale
fs
xchg
or
push
sbb
xchg
pusha
dec
leave
cmc
adc
xchg
testb
pop
loop
out
lcall
adc
sbb
sbb
jg
mov
fcmovbe
sahf
out
lea
sbb
and
hlt
xchg
add
lock
sub
aas
les
enter
adc
repnz
lcall
lds
fcmovu
sbb
arpl
fstl
pusha
mov
and
idivl
lods
adc
xor
adc
adc
loope
pop
imul
movsl
xor
ja
test
jmp
push
stos
push
js
cwtl
shrl
cmpsl
arpl
push
xchg
stos
fildl
xchg
ret
loopne
sub
jmp
in
xchg
dec
xchg
movsb
dec
add
mov
jp
dec
int3
aam
imul
daa
imul
bound
out
fnsave
out
xor
or
jae
ds
add
xor
repz
cmp
mov
or
push
dec
pushf
inc
dec
mov
dec
out
push
and
sbb
mov
cmp
enter
pop
mov
negl
sti
push
mov
mov
in
lods
jnp
popa
aaa
sbb
push
xor
push
aam
bound
inc
pop
mov
aam
jno
rcr
pop
stos
mov
inc
loop
push
ss
push
and
pop
lds
fldt
or
cld
ds
mov
xchg
push
dec
mov
mov
stc
pop
loopne
std
scas
inc
mov
leave
out
ljmp
jne
dec
repz
mov
pop
xchg
mov
fimull
cmp
enter
jp
loope
or
mov
xor
xlat
fcomp
jne
dec
mov
div
xchg
popa
adc
add
inc
lea
fimuls
pmulhuw
cwtl
sub
lret
or
push
xor
add
div
sub
out
sti
out
mov
imull
ds
fsubs
ja
loopne
mov
mov
leave
ss
adc
xchg
js
cwtl
leave
stc
or
punpckhwd
sahf
push
sub
enter
nop
sub
push
pushf
jne
mov
mov
jnp
adc
add
inc
stc
xchg
push
aad
mov
adc
cmp
push
daa
enter
imul
adc
and
adc
jbe
add
xchg
and
sub
jo
adc
out
ret
insb
inc
movsb
faddl
mov
adc
add
pop
enter
mov
push
aam
jmp
jp
fisubrl
jo
add
fcomip
lcall
lods
fdiv
pop
call
pop
jo
stos
cmp
dec
bound
sbb
mov
pop
push
pop
pop
out
call
jo
cmpsl
adc
fidivrs
add
or
or
sbb
mov
jg
ret
shrb
add
sub
daa
out
pop
js
sub
push
sub
test
cmp
xor
jg
sbbl
fisubrs
push
loopne
leave
das
add
cmp
pop
xor
dec
pop
pusha
push
jmp
inc
pshufw
loopne
sbb
sub
negb
js
imul
ds
std
xchg
dec
fcoms
xor
and
rcrb
pop
sub
jb
pmuludq
push
push
xchg
add
out
movsl
shl
into
cmpb
call
xchg
repz
shl
sub
popf
addr16
cld
or
jmp
lcall
pop
xlat
add
ret
xor
xchg
mov
xlat
jns
loop
lret
ret
dec
add
add
fists
lods
jmp
ret
xor
ret
movsb
out
jge
mov
inc
cli
fdivrs
push
loope
mov
or
xchg
mov
jge
mov
mov
sahf
loop
shlb
sub
sbb
sub
add
clc
mov
xchg
xchg
cmpl
add
cmpsl
testb
movsl
scas
xlat
xchg
mov
mov
out
shl
xchg
adc
xchg
sahf
cltd
mov
cmp
fsubl
pop
pop
cmp
adc
nop
es
cmpsl
inc
sbb
ss
push
push
xlat
std
sub
fsubs
cmp
cmp
aas
push
adc
test
push
sub
xchg
adc
cmp
add
sbbb
dec
repnz
xor
cwtl
das
push
jnp
mov
inc
sarb
jno
testb
aas
xor
aas
aam
push
mov
and
lret
in
mov
fldt
or
fwait
loopne
cmp
sbb
cltd
mov
mov
iret
mov
xlat
ljmp
cmc
in
rclb
mov
mov
sub
incb
scas
call
xchg
int3
daa
xor
xchg
leave
adc
xchg
test
addr16
fbld
push
and
sarl
pushf
mov
rcl
mov
inc
xor
adc
mov
lock
mov
int
sub
sbb
cld
cmp
not
lcall
rclb
jne
lahf
es
ret
sbb
lds
loop
sub
rolb
outsb
inc
add
aas
shll
dec
xlat
inc
loopne
addr16
xor
push
xor
cmp
or
bound
pop
insb
popa
add
shr
cmpl
aaa
cmpsb
dec
outsb
mov
mov
dec
jns
out
sbb
fidivrl
aad
adc
int
cmp
repz
mov
pop
xchg
lds
cltd
fisubs
pop
pop
mov
xchg
or
fdivrs
inc
test
cmp
call
stc
ret
fadds
lret
lcall
sub
mov
lods
fldt
leave
repnz
test
out
test
mov
jbe
rol
imul
es
mov
rcrl
adc
dec
outsl
cmpsl
test
sbb
jb
sub
xchg
test
into
inc
xlat
ret
loopne
insl
mov
push
das
pop
andl
or
call
dec
aas
cmp
andl
mov
pop
or
aam
add
dec
in
leave
icebp
xchg
pop
dec
adc
adc
cs
adc
push
mov
andl
lahf
std
add
stos
push
mov
outsb
and
adc
mov
jns,pn
add
sub
lahf
es
cmp
aam
and
inc
gs
adc
jbe
loop,pt
fimull
jp
test
and
mov
idiv
fbstp
cltd
xchg
int
cmp
fdivrl
jb
addb
in
xor
out
dec
loope
fstpt
les
and
add
dec
cld
fcmovne
inc
shlb
push
mov
insb
outsl
inc
sub
clc
test
scas
les
dec
pop
ret
sbb
or
or
lea
addr16
mov
in
movsb
xchg
in
outsl
fdivs
jne
mov
shlb
jle
jb
jmp
adc
pusha
outsl
iret
fs
adc
sub
leave
scas
cmp
xor
movsb
pusha
mov
sbb
outsl
shll
imul
jne
ret
call
stos
xlat
and
add
mov
or
sub
mov
lods
add
or
addr16
inc
mov
jb
outsl
mov
icebp
or
push
in
xchg
mov
cs
mov
hlt
lods
divb
sbb
insl
sub
ds
mov
inc
cltd
aaa
in
xchg
rorb
sub
xchg
inc
and
pop
movsb
aaa
dec
mov
mov
pop
ret
andb
push
pop
xor
adc
jmp
pop
loopne
out
push
bswap
sahf
dec
adc
pop
xchg
out
imulb
repnz
mov
aas
pop
sub
jmp
or
insl
in
vphaddbd
push
insl
or
adc
xchg
scas
negb
or
inc
js
xchg
add
es
jnp
mov
into
pop
negb
jno
cwtl
fistl
cmpb
cmp
pop
mov
ret
data16
dec
inc
pop
add
mov
imul
fstpt
xchg
mov
sarl
js
adc
jae
xor
add
test
ss
dec
shrb
fs
bnd
int3
push
lea
sbb
ljmp
cld
xlat
cmp
gs
and
sub
push
sbb
xor
dec
test
jne
push
das
sbb
movsb
jmp
pop
sbb
pop
push
lret
data16
xor
shlb
stos
dec
lds
xchg
or
ss
xchg
nop
xor
test
addb
add
xor
push
pop
mov
cmpb
sbb
es
nop
jp
inc
push
xor
xor
cmp
push
mov
mov
inc
shll
roll
cld
mov
pop
mov
stc
fcmovbe
outsb
lds
pop
cs
and
shr
sub
sahf
decb
push
push
dec
xor
xchg
pop
cmp
jnp
xchg
repnz
xor
mov
and
nop
dec
adc
fwait
das
das
lret
xchg
mov
arpl
insb
mov
xchg
push
cmpsl
fisttpl
push
sbb
inc
xchg
leave
sub
adc
xchg
rol
mov
and
sti
sbb
sbb
jno
push
stos
icebp
fsubrl
pop
test
adc
pushf
imul
jmp
mov
adc
out
sahf
and
and
and
adc
lods
add
shll
fsubp
pop
rcrl
jge
inc
test
cmp
cmp
sbb
mov
outsb
stos
rol
push
lret
mov
inc
sub
dec
lahf
xchg
icebp
push
cmpsl
pop
cmp
xchg
dec
mov
pop
inc
cmp
testb
sbb
push
popf
pop
inc
mov
push
and
or
xor
jmp
stos
cmp
xor
pop
jmp
addr16
mov
cmp
jae
adc
inc
imulb
cmp
ss
bt
push
outsb
ljmp
in
inc
mov
inc
call
aas
mov
xchg
push
adc
cltd
pusha
jp
sub
mov
out
sbbb
sub
and
inc
cmp
mov
inc
fisttpl
insl
in
and
js
push
sbb
shll
xchg
cltd
mov
scas
aam
xchg
add
cmpsb
and
fmuls
idivb
xor
lods
lock
mov
lock
push
ss
iret
cmp
cmp
xchg
mov
cmp
xor
pop
or
cmp
rcrl
in
fs
mov
dec
fs
ror
rcrb
sub
dec
cmpsl
jns
push
cld
jmp
repnz
idiv
rcpps
push
and
loope
mov
dec
sbb
test
add
repnz
dec
jns
ret
add
lds
aam
aaa
sub
fwait
cmc
xor
out
xlat
mov
dec
mov
in
jg
jns
ds
xor
inc
jmp
mov
in
mov
cmp
in
cld
es
lea
cmp
call
mov
cmp
fdivrs
mov
test
jl
jmp
lahf
addb
or
inc
scas
mov
mov
lds
lret
cwtl
jbe
xchg
inc
pop
in
lods
or
cwtl
push
fists
or
ljmp
iret
in
add
lods
and
stos
scas
scas
shrb
pop
mov
push
xchg
pop
sbb
mov
aaa
jmp
ljmp
push
shlb
cmc
inc
sbb
fwait
inc
das
xchg
jmp
in
jnp
js
pop
test
sbb
pushf
pushf
push
cld
xchg
lods
or
xor
adc
mov
lret
pushf
aam
into
jne
scas
cmp
cmpb
loope
mov
jns
xchg
ds
add
je
push
dec
movsl
mov
mov
push
je
int
inc
adc
scas
adc
lcall
test
sbb
mov
inc
sub
stc
dec
shl
cmp
jmp
popa
aam
cli
popf
inc
xchg
mov
mov
mov
jnp
push
popf
cs
inc
sbb
cmpsl
or
dec
cmp
loopne
pop
adc
dec
inc
fiadds
adc
or
xchg
mov
jno
dec
nop
cmp
outsb
testl
test
xchg
in
stos
jno
popa
mov
test
sub
loopne
push
add
push
sub
je
sub
jno
sbb
jg
sbb
dec
or
movsb
adc
xchg
push
mov
mov
outsl
scas
leave
negb
cmp
add
inc
shll
jnp
std
xchg
rcrl
cli
es
dec
xchg
mov
cli
std
in
mov
mov
test
inc
sbb
and
cmpsl
adc
ret
fst
scas
scas
leave
mov
icebp
mov
notb
mov
movsb
loopne
push
les
pop
cli
out
aam
dec
add
pop
xor
sbb
pop
cmpl
jmp
fimuls
sub
dec
pop
mov
lods
mov
mov
cwtl
adc
jne
mov
sub
or
pop
stos
xchg
das
ret
lea
add
or
sbb
mov
mov
jmp
sar
data16
ja
sub
dec
dec
jmp
sahf
cmp
roll
in
and
jb
mov
push
add
test
or
push
pavgb
mov
add
jge
push
fnstenv
stos
sbb
adc
leave
or
jbe
fsubr
in
dec
push
jno
ret
pop
push
in
data16
mov
pushl
xorl
int3
and
mov
sti
vcvtsd2si
arpl
inc
or
shlb
add
cmp
mov
sbb
xor
lcall
aas
lods
jmp
inc
cmc
scas
push
and
sarl
dec
add
push
dec
push
mov
xor
imul
ds
and
jno
ss
mov
sub
out
adc
pop
push
sub
fnsave
icebp
sub
inc
inc
fdivl
pop
aaa
notb
loope
jnp
sti
mov
xchg
sar
mov
jbe
out
lds
leave
inc
loop
push
aaa
scas
cmc
aaa
mov
in
scas
stos
push
stos
es
push
fildl
adc
push
mov
or
out
inc
push
jg
push
push
cmpsb
roll
callw
lock
movsb
push
gs
push
scas
cltd
ljmp
mulb
pop
or
popf
jecxz
loopne
sahf
inc
mov
hlt
cmc
pop
and
xchg
jnp
dec
ljmp
in
jge
lods
dec
in
sub
jno
sub
fiaddl
dec
sub
sub
icebp
pop
mov
loope
push
cwtl
daa
inc
gs
mov
lods
aaa
ja
js
outsb
lock
xor
sbb
cltd
int3
xor
xchg
dec
mov
and
pop
mov
adc
nop
push
das
pop
pop
pop
pop
cmp
and
cmc
lock
std
fnstcw
in
lds
aad
ficoms
imul
or
mov
popa
xor
jb
add
fisttps
cmp
jmp
lea
orl
lods
mov
aas
xchg
lret
idivb
add
stos
call
inc
out
in
xor
mov
js
int
cmp
cli
out
mov
lods
sti
mov
movlps
mov
push
adc
xchg
sub
sub
popa
lcall
cmpsl
shrl
and
outsb
lea
arpl
jge
movsb
ret
ljmp
jle
cwtl
dec
test
call
mov
mov
mov
insl
push
cmp
lea
adc
lods
jecxz
push
mov
inc
in
daa
popa
xor
adc
fisttpl
or
aad
jae
inc
xchg
ret
jp
cltd
cmp
aam
sub
ficoms
xor
add
loop
cld
jb
repz
in
pushl
add
loop
pop
sub
add
int
xor
je
pop
fcmovnb
filds
test
cmp
shr
shl
sbb
ljmp
mov
gs
cmpsb
das
insb
or
jl
mov
xchg
bound
mov
pop
je
mov
lds
out
lock
dec
dec
dec
xchg
xor
push
sbbb
roll
dec
std
ret
mov
rcll
jbe
cld
icebp
in
divb
mov
bnd
ret
push
dec
or
inc
dec
jl
xchg
mov
xchg
leave
sub
push
out
ss
jns
cld
pusha
jbe
sbb
out
inc
push
lds
bnd
daa
xor
roll
or
fsubl
lock
adc
mov
inc
push
jno
pop
jne
dec
mov
scas
test
or
enter
hlt
lods
add
enter
call
cld
lock
sbb
cmp
in
dec
movsb
mov
jge
jg
xchg
jecxz
dec
dec
sub
xchg
lods
jns
gs
imul
jge
mov
xor
popa
xchg
int
lret
mov
pop
fs
daa
or
icebp
in
fs
inc
push
add
ror
icebp
add
xlat
repz
stos
scas
jbe
cs
jb
repnz
outsl
loop
push
fwait
scas
and
push
mov
dec
lret
imul
sub
mov
sbb
add
pop
jbe
mov
sbb
mov
test
adc
pop
jl
fistpl
adc
and
adc
xchg
icebp
xchg
test
inc
jns
insb
sub
inc
insb
lret
sbb
xchg
fcoms
idiv
add
lret
nop
in
pusha
mov
cmc
les
mov
and
mov
sti
iret
or
sbb
cmp
dec
repnz
inc
pop
xchg
lcall
jne
xchg
adc
sbb
xlat
bound
icebp
dec
inc
inc
or
mov
pop
arpl
sahf
and
fists
mov
xlat
sub
pop
sahf
lret
insl
xchg
adc
inc
fmul
mov
into
mov
cli
insl
jle
mov
stos
push
es
jbe
xchg
sbb
fmull
inc
inc
cmp
gs
loop
push
rcll
aas
xchg
nop
push
js
mov
dec
add
pop
and
adc
sbb
nop
repnz
pop
pushf
loopne
push
clc
addb
sahf
mov
push
jle
das
jno
movsb
xchg
push
adc
mov
pop
cmpsb
ds
aad
pop
sti
outsb
inc
or
mov
pop
orl
pop
xor
jle
inc
cltd
jb
outsl
mov
sbbb
adc
shr
in
sub
shlb
pop
or
imul
and
xorl
dec
dec
mov
es
in
popa
or
jb
mov
mov
mov
xchg
fistl
xor
adc
pop
pushf
pop
dec
leave
out
jb
or
add
jo
jle
dec
push
pop
out
xor
iret
insl
xor
pop
inc
add
shll
test
push
lods
repnz
mov
js
xchg
xor
xchg
mov
inc
rcrl
clc
sbb
push
movsl
mov
jmp
push
push
mov
cmp
nop
data16
mov
subb
cmp
mov
aam
pusha
enter
pop
dec
xor
or
mov
lcall
sub
dec
push
dec
lahf
or
mov
push
push
pop
add
movsb
xchg
hlt
adc
adc
push
add
mov
ds
in
aam
dec
add
shr
pop
push
scas
out
cli
daa
int
inc
lret
subl
lock
push
lock
lock
cld
and
insl
pusha
sbb
call
cmp
hlt
xor
mov
mov
or
jne
jmp
sbb
icebp
pop
pop
xor
call
jbe
lcall
push
lret
loop
mov
add
cmp
subb
arpl
dec
fnstsw
int3
push
lret
ret
subl
outsb
inc
push
sti
push
add
nop
inc
data16
mov
test
lret
jge
mov
jecxz
mull
push
mov
or
mov
pop
xchg
cmp
repnz
push
mov
mov
add
and
and
mov
push
les
lods
cmpsl
adc
adcb
jo
je
cltd
fisttps
adc
outsl
mov
sahf
and
cltd
test
dec
leave
cmp
xor
and
test
out
addr16
xchg
mov
push
stos
leave
and
fisubs
mov
sahf
mov
loop
in
push
sahf
jg
movsl
call
cmpsl
sbb
or
cltd
sbb
fimull
push
fmull
sbb
mov
cmp
cwtl
out
leave
int
jns
mov
xchg
or
and
insb
ja
xchg
sub
es
cltd
pop
fs
mov
sahf
sub
ljmp
adc
jmp
in
add
lret
outsb
bound
mov
outsb
and
mov
stos
add
mov
je
das
jmp
xchg
es
ret
mov
xchg
and
andl
das
add
jg
pop
cmpl
jmp
jl
shlb
les
ds
dec
cmc
movsl
sbbb
ror
and
shrl
inc
and
jbe
push
push
lea
xchg
mov
mov
xchg
xor
scas
out
ss
jl
adc
pop
rcl
fcoml
xchg
ret
mov
addb
sbb
xor
jge
andb
and
ficompl
add
stos
insl
mov
lods
sbbl
test
fiadds
cli
ds
jae
leave
jmp
pop
xchg
jecxz
ja
push
push
jp
xchg
sbb
pusha
inc
clc
jmp
or
pop
mov
sbb
mov
and
mov
mov
int3
lret
fisttpll
in
mov
ss
and
cmp
test
push
pop
mov
add
sub
ljmp
insb
mov
push
push
cmp
les
adc
xchg
sub
mov
gs
popa
cld
and
pop
dec
rcrb
int
outsb
push
jbe
js
ljmp
mov
jne
cmp
sbb
adc
sti
or
and
mov
cmp
scas
cmp
jle
and
add
pop
sbb
shrl
std
fcomi
xchg
js
mov
cmp
and
addr16
cmc
mov
sahf
das
shlb
enter
pop
roll
outsb
sbb
sar
sbb
mov
sub
xor
adc
sbb
and
jo
jne
lods
sub
orl
popa
aad
xchg
outsl
sbb
jl
in
jae
jp
pop
ds
je
push
adc
sbb
repz
out
jp
pop
fistpll
mov
sahf
fcomi
or
pop
cmpsb
mov
and
sbb
mov
popa
repnz
dec
in
pop
cs
pop
and
cs
orl
repnz
mov
pop
in
push
stos
sub
sbb
jecxz
xorl
cmp
loope
mov
sbb
aaa
repnz
add
lahf
jae
fnstcw
iret
cmp
stc
insb
mov
iret
xchg
mov
xor
cmpsb
jbe
or
xor
in
aad
insl
and
fisubs
pop
rcll
out
stos
jno
or
fdivr
roll
or
jbe
push
xchg
gs
test
jmp
jns
int
daa
lock
mov
cmpsb
mov
jmp
mov
int
out
dec
in
mov
bound
push
cld
mov
mov
pop
repz
mov
out
push
sub
add
movsl
pop
or
mov
imul
push
xchg
jae
xchg
cmp
cmp
or
in
xchg
or
jmp
test
adc
add
and
xor
pop
mull
jae
fstpl
inc
shlb
test
mov
jo
lods
xor
mov
push
add
push
sbb
movsl
push
inc
rolb
sub
xchg
push
xchg
movsl
stos
add
jnp
or
popa
pop
xlat
inc
aaa
lahf
cmp
ja
and
clc
lds
mov
imul
cmc
push
andb
test
adc
adc
adc
pop
mov
into
inc
lcall
add
or
sbbb
sti
push
adc
or
mov
cld
ret
jbe
xchg
adc
addr16
push
mov
loope
push
or
mov
enter
stos
add
aam
bound
push
fsubp
push
nop
jo
push
cmc
pop
jne
pop
pushf
adcl
aaa
sub
call
sub
and
in
fs
cmpb
push
sbb
fcmovu
inc
sarb
hlt
xor
push
popa
pusha
pop
sbb
xor
ds
movsl
jns
aad
xor
cmc
jge
push
dec
jg
xor
clc
fs
push
or
into
stos
inc
imul
lret
and
mov
scas
dec
mov
dec
xchg
mov
and
in
es
dec
push
push
mov
das
and
mov
imul
int
negb
imul
mov
fistl
xchg
adc
push
stos
orb
dec
mov
stos
sbb
or
push
add
and
mov
mov
mov
xorl
pop
xchg
pop
test
mov
add
pop
jmp
rcl
rclb
mov
xchg
mov
push
std
fistpll
jo
fnstenv
xor
mov
push
mov
push
orb
dec
adc
mov
rep
mov
je
dec
inc
or
jmp
repz
dec
ret
sbb
push
aaa
cs
shll
lods
popa
sbb
mov
imul
fwait
cmp
sub
sbb
mov
arpl
and
push
adc
call
adc
mov
inc
mov
ja
mov
xchg
push
dec
push
adc
movsb
cmp
and
stos
xchg
lret
mov
sub
je
in
fadds
in
es
fsubrs
js
push
mov
js
fs
jnp
lcall
cmp
or
pop
insl
inc
xchg
repnz
in
mov
in
xchg
cmp
jbe,pn
popa
fbld
dec
mov
xor
loop
addl
adc
jecxz
stos
xchg
mov
in
leave
push
sahf
inc
xchg
xchg
sar
push
xchg
pushl
jle
in
jmp
push
leave
cmp
pop
inc
sbb
dec
je
inc
sbb
in
jge
mov
enter
cltd
aam
jg
roll
mov
cwtl
mov
xchg
adc
jmp
push
and
lahf
roll
in
jecxz
mov
dec
aam
and
loope
icebp
lcall
shrl
and
jb
int3
ja
test
add
lret
sbb
shll
mov
mov
pop
jge
push
fcomip
fistpll
xchg
fimuls
lock
or
mov
add
cmpsb
into
or
loop
popa
push
sub
mov
std
repz
hlt
pop
fld
jb
dec
jne
out
dec
into
xlat
mov
pop
cmp
xor
cmc
or
aam
or
add
pop
icebp
dec
daa
cld
pop
fsubr
js
sarl
loopne
and
test
jmp
into
loope
loope
sbb
pop
sahf
pop
push
ds
sti
jo
xchg
icebp
and
inc
icebp
repnz
loop
push
ret
mov
dec
mov
int
pop
xchg
aad
push
das
lods
add
sub
lods
rcrl
add
mov
leave
int3
stos
xchg
or
repnz
xor
jb
test
adc
fs
mov
popf
sub
testl
pop
xchg
fisubs
clc
or
insl
or
jne
inc
repnz
test
cltd
jns
and
int
test
js
push
lret
mov
xchg
pusha
add
jge
pop
mov
fs
ljmp
sbb
mov
mov
add
sub
into
leave
adc
jae
inc
or
dec
sbb
je
or
mov
imul
push
push
mov
jns
sbb
inc
cmc
jns
xor
or
mov
int3
imul
pop
mov
cmpsl
aad
rorl
jae
and
push
jmp
popl
addb
inc
ss
rcl
or
insb
les
repz
xlat
xor
pop
mov
xchg
fsubs
push
inc
int
repz
popf
test
push
mov
jmp
sub
push
fwait
repz
inc
js
xchg
jae
mov
xchg
jle
mov
sub
int3
pop
xor
stos
scas
popa
lahf
push
inc
stos
inc
pop
jmp
jmp
push
fimull
inc
aad
sahf
in
pop
stos
out
out
in
mov
clc
pop
repz
sub
pop
xchg
pop
jnp
std
and
mov
loopne
or
or
dec
inc
inc
cmpsl
dec
notl
mov
sub
jo
mov
es
mov
push
jg
inc
push
mov
lret
in
cwtl
ret
pushf
std
add
jle
push
add
enter
mov
add
sahf
sarl
adc
loopne
dec
push
roll
and
shrl
inc
sbb
sub
inc
cli
push
cmp
push
je
mov
pop
dec
aad
es
inc
scas
std
jmp
inc
stc
mov
pop
cmp
icebp
out
cmp
rcrl
movsl
add
add
mov
adc
in
and
fistpl
jne
movsl
xor
test
adc
lcall
cmp
dec
add
add
lods
and
mov
jg
mov
cld
lret
push
rol
jecxz
or
leave
xlat
add
out
mov
pushl
imul
fisttpl
cmpsl
cmp
xchg
out
fsts
mov
jmp
fmull
enter
xchg
pop
lods
aaa
pop
mov
mov
sub
fmull
mov
mov
daa
xor
and
outsb
mov
mov
dec
inc
push
enter
or
addr16
push
mov
cld
jmp
call
pop
jb
je
ds
dec
aam
test
enter
fisubs
lcall
pusha
mov
sub
or
icebp
movsl
xor
adc
inc
adc
mov
test
push
pop
andl
push
pop
adc
push
mov
std
daa
push
lcall
and
std
lcall
adc
and
mov
mov
popa
daa
addr16
mov
mov
push
fucom
fldenv
push
fbstp
cltd
inc
push
sub
cld
dec
je
pop
jno
and
jl
jecxz
in
add
cmpsb
sbb
jae
cli
fs
gs
pop
ds
imull
adc
and
jns
cmp
mov
mov
mov
cmp
stc
jnp
push
push
fstps
pop
mov
xchg
bound
lret
add
lods
repnz
cli
incb
frstor
mov
adc
test
xor
jo
int
pop
jno
gs
add
and
sub
aas
fdivrl
xchg
mov
and
push
shlb
dec
ffree
movsb
les
adc
bound
mov
imul
enter
xchg
cmp
dec
repz
into
dec
shlb
test
xor
inc
add
pop
mov
and
or
je
outsb
lret
inc
test
imul
lret
xchg
mov
gs
xchg
push
mov
pop
mov
inc
cmpsl
mov
mov
mov
mov
invd
jmp
lods
pop
add
mov
mov
cmp
lahf
push
jo
add
aad
pop
xchg
cli
outsl
push
repz
test
insb
pop
and
pop
inc
fstps
aam
test
loop
mov
pop
ret
mov
sub
cmp
test
adc
jb
pop
or
fwait
das
cli
xor
add
xchg
and
in
inc
cmp
push
repnz
pop
aam
xorb
in
je
push
add
add
das
lea
test
pop
push
fidivrl
inc
xchg
push
push
leave
fists
repnz
inc
addb
xchg
adc
sub
xchg
js
mov
fnstenv
lods
int
sbb
insl
push
xor
cmp
or
arpl
push
sti
scas
push
das
fucomip
fdivs
movb
pop
dec
das
lds
cmp
and
call
sbb
in
and
out
ss
call
fldenv
sub
hlt
jno
jge
repnz
std
cmc
and
pop
shrb
rcl
cmp
pop
ficompl
fcmovnbe
adcl
push
xchg
nop
out
das
mov
mov
inc
cmpsl
xchg
inc
xchg
loop
cli
leave
outsl
inc
push
ficomps
ljmp
jle
test
je
dec
and
ja
dec
adc
clc
mov
mov
les
push
cltd
xor
sub
stos
daa
add
cwtl
mov
xchg
lods
mov
mov
icebp
aad
pop
xchg
aad
cmpsl
les
pop
aad
sbb
xor
insl
jne
test
es
or
dec
jbe
bound
sahf
mov
pushf
cmpsb
jge
dec
inc
or
pushf
cltd
arpl
ja
mov
nop
xchg
or
scas
push
adc
mov
cmp
fstps
add
or
and
test
sbb
adc
out
pop
mov
adc
sub
dec
popa
hlt
push
cld
sbb
cmp
ret
faddl
movsb
sub
into
mov
sti
xchg
imul
stc
xchg
push
in
mov
je
test
pop
aas
clts
pop
lret
mov
sbb
xor
adc
aas
subb
pop
test
xchg
jmp
fs
mov
ret
fimuls
jl
std
or
jl
roll
mov
mov
xor
fs
sbb
adcb
gs
lahf
scas
repz
xchg
lret
into
sub
loope
mov
and
arpl
outsl
fildl
jo
cmp
mov
mov
loopne
outsb
dec
cmp
or
leave
outsb
imul
pushf
in
test
addb
dec
rclb
jo
sbb
xlat
imul
cmpb
push
push
cmpsl
sarl
aaa
subb
cmp
jae
dec
rorb
cmc
pop
movsb
mov
cmpsb
in
dec
insl
roll
dec
mov
pextrw
sbb
mov
leave
xchg
addr16
and
push
iret
dec
insl
xor
adc
mov
daa
sub
cwtl
dec
fwait
out
and
mov
pop
jl
sbb
sbb
ret
outsl
jo
jge
ljmp
dec
cmpb
mov
adc
mov
mov
js
andl
sti
fildl
pop
int
movsl
cltd
pushl
clc
aad
int3
cld
pop
xor
pop
pop
gs
sub
clc
lcall
cli
mov
aad
sub
mov
add
enter
push
or
scas
sub
sub
mov
rorb
push
dec
cmp
cwtl
or
je
idiv
push
xlat
out
cmp
xchg
lret
xchg
mull
daa
orb
push
scas
sub
pusha
push
sub
dec
mov
or
mov
mov
push
sub
jle
lcall
xchg
sub
stos
inc
rolb
xor
mov
jmp
dec
std
cli
mov
cltd
mov
mov
mov
xchg
push
xchg
iret
shrb
or
pop
push
cltd
add
add
adc
mov
test
add
or
mov
lods
cmp
xchg
test
fnstcw
mov
sbbl
dec
push
mov
jl
cwtl
insl
in
mov
addb
push
mov
nop
adcl
cs
fwait
inc
jo
les
adc
cli
sbb
js
nop
daa
and
std
call
filds
popf
enter
icebp
xchg
lret
jmp
insl
push
push
scas
push
xor
je
fstl
cltd
and
xchg
pusha
xchg
jmp
adc
jl
and
xchg
test
cmp
or
cmp
or
dec
lods
orl
in
push
cltd
lds
std
repnz
test
mov
gs
push
and
sub
jae
jge
in
lods
mov
lret
adc
or
out
push
xchg
data16
shr
pop
sarb
cmpsb
iret
fs
ljmp
pmullw
test
inc
cltd
rorb
aam
or
inc
lahf
push
push
mov
arpl
jbe,pt
dec
push
cmpsb
movsb
mov
mov
test
ficomps
insb
sarl
inc
sbb
xchg
scas
xor
insb
cwtl
sub
mov
xchg
js
add
sbb
cmp
outsb
lock
idiv
xchg
dec
mov
fmull
xchg
push
cmp
leave
test
or
gs
add
sub
pusha
hlt
lret
imul
xor
out
inc
jno
mov
cmp
sub
cmp
lock
test
aas
cmpsl
pmaddwd
or
mov
out
add
sub
cmp
pusha
in
or
mov
xor
push
addr16
shrl
jg
mov
pushf
movsb
push
ja
mov
sub
dec
rclb
mov
nop
xchg
xor
into
sbb
jbe
add
push
jne
xor
rolb
in
sbbb
addr16
dec
pushf
dec
cmp
dec
sahf
cmp
fisubl
inc
outsl
mov
xor
xlat
lret
in
xor
pop
mov
cltd
test
insb
scas
push
cmp
test
push
and
jg
cmc
test
lea
loopne
pop
mov
stos
inc
inc
es
das
mov
fisttpll
dec
and
mov
mov
pushf
mov
jecxz
push
jle
lods
xchg
push
outsl
pop
je
rorl
dec
je
lret
stos
imul
sub
sbbb
mov
repz
fwait
inc
mov
add
lea
push
mov
mov
lods
in
push
cmp
ret
outsl
push
mov
jbe
mov
and
and
inc
cmc
cmp
stos
leave
imul
shll
adc
mov
cli
cmp
enter
das
sbb
mov
and
xchg
das
mov
push
fstp
sbb
cmp
bound
ds
mov
lods
inc
mov
mov
ds
subb
addr16
mov
sbb
icebp
cmc
cmpsl
xchg
cmpl
pop
mov
inc
inc
outsb
int
inc
mov
ss
or
sbb
aaa
jg
loopne
sub
andl
rorb
imul
mov
mov
mov
aaa
daa
sub
push
js
ss
pop
inc
dec
cltd
add
jmp
jae
xchg
cld
xor
pop
dec
aam
adc
pop
sahf
lods
fistpl
out
fwait
inc
inc
lea
fisttps
fdecstp
cwtl
icebp
cmp
push
sahf
xchg
in
bswap
mov
mov
fisubrl
lcall
outsl
loope
mov
or
je
int3
subl
or
pop
das
and
out
ret
mov
cmp
cmpsl
adc
aaa
xor
addr16
push
jnp
popf
hlt
jp
pop
stc
sahf
sbb
xor
aam
loope
and
test
adc
rol
xor
pop
sub
push
xchg
fldt
jge
test
xchg
sub
inc
test
clc
mov
jo
mov
sahf
clc
jl
scas
mov
out
mov
sbb
test
pop
pop
nop
fdivrs
loop
lods
adc
test
mov
and
bound
out
sbb
xchg
jnp
lret
out
push
aad
bound
in
stos
xor
mov
stos
nop
mov
xor
int3
inc
nop
lock
jmp
loop
and
push
enter
lds
dec
insl
icebp
in
inc
pop
mov
cltd
addb
mov
popl
outsb
sbb
mov
mov
stos
in
pop
cmp
dec
sahf
inc
out
xor
std
std
mov
xchg
push
xlat
push
lods
mov
inc
push
hlt
sub
lea
push
inc
ret
mov
stos
aaa
gs
pop
add
xor
jg
jno
jmp
ret
or
adc
push
bound
mov
adc
and
push
outsb
sub
in
and
scas
pop
shrl
aaa
sarb
fsub
sti
adc
aaa
call
xchg
adc
rol
push
and
jnp
in
movsb
cmp
into
fbstp
rorb
sbb
jl
jecxz
add
enter
hlt
xchg
lahf
xlat
xchg
xchg
aaa
ret
sub
jne
cs
movaps
mov
loopne
gs
sub
test
dec
ret
mov
cli
je
pop
lock
stos
cmp
add
mov
sub
ret
out
popa
shl
scas
jmp
xlat
in
js
inc
lods
fdivrl
dec
cld
jno
pop
popf
xchg
lahf
fstpt
jo
push
mov
xchg
sbb
ficomps
insb
xor
lods
nop
sbb
mov
subl
js
mov
lods
sub
cli
test
mov
jo
jle
js
inc
jecxz
fiadds
xor
hlt
loopne
mov
js
insb
movsb
lahf
rcl
js
addr16
mov
push
pop
arpl
aad
mov
mov
mov
or
lahf
cli
pop
push
mov
xor
inc
mov
push
rcrl
dec
add
jbe
insl
and
icebp
sub
mov
shll
rcl
subl
push
sub
mov
in
xchg
push
pushf
xlat
xchg
outsb
fsubrl
lret
int3
ret
sti
fistps
test
xor
and
das
lret
fsubrl
push
fildl
jbe
xchg
dec
jo
push
popa
jmp
call
pop
cmp
sahf
std
or
nop
push
dec
push
pop
or
pop
inc
loopne
push
lea
or
movswl
push
clc
data16
daa
jo
in
adc
jno
inc
pop
pop
xchg
xchg
cmp
fisttps
jns
sub
mov
inc
mov
cmp
xchg
sub
inc
in
inc
push
xor
push
out
mov
pop
repnz
pcmpeqd
mov
sub
and
clc
xchg
aaa
fcomp
pop
sbb
rolb
pop
out
insl
fiadds
jbe
pop
jp
sbb
mov
xchg
hlt
andl
push
stos
call
imull
push
stos
shrl
jo
jl
mov
push
pop
pushf
pop
out
pop
mov
and
cmp
jnp
out
mov
std
push
push
inc
push
mov
adc
fcompl
dec
cltd
outsl
ret
cld
push
es
adc
repnz
pop
adc
jle
addr16
xor
stc
dec
pop
mov
lods
std
add
pop
test
and
cmp
or
lret
or
imul
and
push
cmpsl
sub
mov
xchg
out
push
jae
jmp
jecxz
and
ss
cmp
subl
jo
divl
mov
mov
int3
inc
dec
jo
test
adcl
add
inc
add
fistl
mov
int3
mov
or
or
cwtl
enter
push
pop
cwtl
outsb
cmpsb
aaa
inc
inc
pop
adc
test
lods
scas
cmp
stos
push
pop
js
push
sbb
mov
in
cltd
jmp
mov
nop
dec
mov
push
insb
and
mov
lcall
in
rol
push
in
insl
xor
add
push
aad
add
popa
outsl
jg
cs
stos
ret
add
fisttpl
jp
test
ficoml
mov
enter
clc
pusha
gs
test
ret
or
scas
outsb
push
or
dec
or
insl
punpcklbw
dec
sbb
jg
cli
out
push
jno
pusha
dec
int
push
or
sti
movsl
lcall
cwtl
lods
xchg
push
or
mov
jne
push
pop
xchg
in
cmp
or
sub
imulb
inc
cltd
arpl
jge
dec
and
push
daa
cmc
fsubr
pop
lods
addr16
push
mov
mov
push
movl
stc
sbb
jno
fcomps
mov
push
xor
fdivrl
add
jl
cld
ror
mov
fstps
int
enter
or
int3
fs
jno
push
js
or
sarb
fnstenv
xchg
rol
call
test
or
ss
pop
divb
mov
popf
test
sarl
xor
popf
fwait
and
xor
insb
bound
loop
cmp
mov
jecxz
xchg
push
cmp
lds
jecxz
mov
or
cwtl
mov
mov
test
inc
in
lea
int3
and
lods
mov
inc
xlat
cmp
aas
aaa
aas
cmp
mov
out
call
daa
fcompl
cmpb
add
enter
out
shll
les
or
push
icebp
cmp
rcrl
lock
pop
imul
out
lods
call
jle
adc
inc
lock
mov
and
adc
daa
das
fisubl
add
subl
lcall
sbbl
test
test
and
outsl
and
sub
int
mov
mov
push
cmp
add
jne
flds
sub
ss
sbb
adc
fldt
testl
popa
jns
gs
call
push
data16
dec
jb
jge
movsb
add
lahf
inc
jg
cs
fwait
and
pop
fists
cltd
je
rolb
popa
loop
lahf
add
lds
cld
pop
and
arpl
mov
jnp
fs
or
and
xor
dec
cli
fadds
ja
cltd
jg
and
sub
sub
imul
mov
enter
rorb
add
add
and
adc
loopne
sti
xchg
xchg
mov
std
fiadds
pusha
scas
and
outsl
dec
inc
sub
inc
xchg
aas
sbb
dec
pop
in
stos
mov
insl
dec
call
inc
int
cld
adc
mov
xlat
push
lock
mov
pop
inc
sub
or
jle
pop
push
or
addb
lret
subps
inc
shrl
push
xchg
cmp
xor
imul
push
dec
std
mov
fcompl
inc
mov
xchg
jnp
push
les
pop
test
xor
imull
movsb
or
test
and
add
adc
lahf
stos
cld
push
cltd
ret
fsub
out
jmp
scas
jmp
add
test
adc
cmpsl
xchg
sbb
cmpb
movsl
fwait
lods
inc
testl
gs
in
push
mov
ret
lods
mov
mov
sahf
pop
push
push
mov
adc
lock
pop
dec
in
out
push
aam
rorl
sbb
mov
ja
movsl
cwtl
scas
jnp
push
or
mov
outsl
into
push
stos
sub
aas
sahf
push
loop
adcb
fistpll
iret
in
hlt
add
ja
dec
push
xchg
xchg
adc
cmp
fdivrl
and
enter
fcomps
addl
xchg
out
xchg
push
test
push
int
leave
orb
xchg
jmp
out
inc
sub
dec
dec
sbb
cmpsl
sub
push
out
mov
jns
sbbl
mov
loope
xor
int
test
ret
xor
push
sahf
adc
mov
or
out
pop
inc
cmp
repz
pop
xchg
mov
orb
cmpb
repnz
cmp
jmp
mov
jbe
shll
add
dec
push
sub
nop
pop
add
divl
mov
mov
xorl
ljmp
jbe
xchg
ffreep
pop
pop
xchg
sahf
jno
mov
psubq
daa
cmp
cmp
push
mov
dec
xchg
xlat
sub
push
xor
or
addl
mov
inc
cmp
inc
mov
fwait
jno
movsl
xchg
cmp
xchg
xor
enter
xor
std
idivl
xchg
ffreep
fsts
repz
mull
into
aad
dec
dec
test
or
scas
ja
cmp
mov
lea
jae
daa
dec
test
inc
leave
mov
add
dec
aaa
fimull
or
lcall
jge
daa
sarb
shll
or
add
jmp
addr16
mov
add
inc
jp
jns
adc
or
div
rclb
imul
dec
and
fidivs
leave
push
push
mov
leave
mov
mov
mov
mov
lods
xchg
push
stos
dec
pop
jo
in
push
notl
loop
fldcw
imul
adc
or
pop
movsb
insb
out
push
pop
inc
mov
hlt
outsb
int
ljmp
and
leave
dec
jae
or
or
clc
jge
cmp
adc
ljmp
fmul
sti
pop
out
xchg
outsb
lahf
jge
outsb
pop
xor
lock
and
cwtl
rcl
and
xchg
jmp
insb
push
add
in
movsl
mov
cmc
add
push
popa
mov
insl
in
test
bound
sub
into
rclb
popf
fidivl
cmp
sub
pusha
fists
sbb
xorb
inc
std
or
mov
cld
cmp
pop
popa
into
push
pop
shlb
xchg
clc
fldt
add
jno
outsl
jmp
loopne
and
jns
jae
fcomi
push
push
sub
shl
cmp
sahf
js
vpsrad
lret
adc
inc
push
pop
fwait
scas
jle
or
ja
sbb
or
jno
inc
jo
add
lcall
jmp
pop
test
and
jge
push
jl
mov
mov
adc
packsswb
les
sub
add
jo
and
xchg
sahf
loop
sub
clc
das
jnp
jg
dec
popf
pop
xchg
fcomps
dec
aas
xchg
xor
dec
dec
xor
mov
xlat
out
add
ret
mov
call
scas
jge
mov
or
insb
clc
fwait
dec
jb
lods
das
lea
xchg
lcall
sbb
and
repnz
pushf
adc
or
mov
xchg
jp
lret
outsb
jecxz
mov
ljmp
std
test
orb
out
shlb
adc
test
ss
jno
jnp
xchg
loope
xor
push
jge
fistps
jecxz
bswap
push
das
ret
and
fs
in
ret
dec
test
imul
mov
rcrl
cld
ja
rcrb
out
lcall
mov
mov
xchg
out
xchg
fstp
jp
sbbb
mov
faddl
sbb
push
mov
nop
sbb
adc
notb
fdivrl
in
cmpsl
sub
and
and
push
popa
add
js
xchg
mov
daa
ret
add
and
mov
mov
insl
or
call
loope
mov
and
test
mov
ds
rorl
mov
cmp
divb
pop
clc
xor
dec
sub
dec
loope
lahf
xor
cltd
push
arpl
sub
cmovb
cmpsb
cmpsl
adc
or
out
push
loope
jmp
sub
repnz
sahf
mov
sub
pop
jno
and
push
dec
adc
ss
push
add
ds
call
bnd
pop
ljmp
icebp
inc
sbb
mov
pop
movsb
pop
cmp
adc
test
mov
out
faddp
lods
daa
lock
mov
mov
mov
pop
jle
dec
repz
dec
adc
ljmp
pop
into
push
or
mov
lea
lahf
ja
int3
xchg
add
inc
lods
push
inc
shrb
leave
jg
into
jecxz
out
outsb
jno
mov
pop
sub
xchg
xchg
lret
insl
cmp
aas
adc
inc
inc
sbbl
imul
cmp
cltd
and
xor
mov
xchg
push
mov
push
push
mov
xchg
fsubrs
inc
mov
fxam
inc
add
mov
scas
sub
mov
dec
xor
test
lret
in
jl
lea
pop
mov
scas
jne
mov
loope
xchg
cli
aaa
into
mov
pop
inc
ret
cmp
cli
ss
in
jmp
mov
sbb
mov
adc
jb
popf
cwtl
push
xchg
jo
and
shll
shrb
cli
lret
add
pusha
add
pop
movsb
movsl
out
lea
and
and
mov
pop
or
push
adc
pop
cmc
push
nop
push
lods
inc
arpl
adc
loop
sub
adc
add
or
add
push
mov
add
inc
mov
xor
insl
stos
decl
fdivs
cltd
sbb
fadds
push
mov
pop
sub
popf
fsubs
dec
mov
stc
jno
lods
test
fmuls
lcall
mov
jp
imul
xor
fwait
mov
mov
mov
test
pushf
mov
movsb
xlat
push
pop
test
out
out
shrl
mov
dec
adc
popf
int3
ja
pop
adc
xchg
sbb
data16
and
jp
inc
cltd
in
inc
mov
orl
push
scas
pop
mov
stos
pop
cmp
test
push
dec
pop
jg
fistl
xchg
or
aas
dec
hlt
lock
add
repz
fwait
fwait
mov
test
xchg
fbld
ficoms
fnsaves
xchg
mov
push
xchg
push
mov
dec
inc
pop
mov
loope
cwtl
in
arpl
pushf
inc
clc
ds
aam
ljmp
adc
rcll
in
add
test
loop
jnp
inc
divl
fisubs
pusha
mov
dec
adc
cmp
sarb
and
jbe
dec
jbe
jb
in
ret
or
sahf
mov
mov
in
lds
dec
daa
inc
insl
iret
lahf
cmpsb
int
sbb
sub
stos
xor
dec
and
fwait
cmp
xor
pop
push
push
addr16
push
jmp
jo
adcl
adc
jl
lahf
push
stc
int3
sub
cmp
cltd
imul
cmp
adc
and
into
add
loope
sub
dec
test
cltd
dec
ljmp
sti
insb
leave
mov
stos
insb
jmp
pop
fs
mov
cmp
sbb
popw
pop
lcall
mov
ds
mov
jmp
shll
or
mov
loop
xchg
loop
sbb
mov
and
add
push
ljmp
push
loopne
das
scas
ds
jmp
mov
cmp
dec
hlt
add
lret
cs
jns
inc
movsl
ja
ret
sbb
cmpsl
jmp
ljmp
push
scas
add
adc
loopne
or
gs
popa
push
out
mov
xchg
fimuls
pop
mov
stos
xchg
xchg
xchg
push
mov
ja
sbb
push
and
std
mov
shr
jp
clc
aas
nop
mov
xchg
adc
repnz
int3
cmc
xchg
cmpsl
lods
aaa
adc
mov
jecxz
mov
mov
push
or
rcrl
jae
push
iret
cld
pusha
add
push
mov
lret
movsb
xchg
shrb
inc
lahf
ret
mov
dec
push
ficoml
and
sbb
mov
sbb
xchg
mov
dec
inc
roll
mov
std
cmc
fwait
jg
adc
sbb
movsl
cmp
pop
pop
or
sub
inc
fdivrs
mul
fists
mov
adc
rol
call
and
fcmovu
or
mov
rcll
testb
test
mov
cli
sub
mov
je
add
enter
jne
cli
inc
pop
cmp
cmp
or
data16
mov
mov
mov
inc
aam
jmp
stc
inc
adc
shl
insl
negb
sbb
lret
dec
lahf
sbb
cwtl
cmpsb
jb
stos
gs
leave
aam
leave
jb
and
out
cs
cmp
mov
mov
lea
ja,pt
sbb
call
cmp
or
push
or
mov
xor
dec
mov
aad
int
popa
imul
push
pop
mov
roll
sub
insl
js,pn
xchg
fsubp
cmp
push
xor
cmp
xchg
int3
out
dec
test
out
cmp
xor
aam
sub
lea
and
push
adcl
test
mov
imul
aas
xor
xchg
xlat
stc
fcmovu
cli
mov
movsl
sub
mov
xchg
out
cs
xchg
lds
push
stos
jle
lea
sbb
xchg
scas
loop
in
addr16
cmp
pusha
sbb
bound
sbb
add
pop
dec
fcomp
jl
rolb
in
popa
mov
and
add
aas
insl
mov
add
ds
es
push
mov
inc
xchg
jmp
sub
xchg
xchg
loopne
outsb
les
je
jmp
adc
ss
dec
or
leave
decl
out
negb
sbb
ror
mov
iret
mov
and
and
push
std
jmp
imul
ja
ds
in
xchg
in
xchg
rorl
nop
adc
xor
push
test
jns
inc
xor
or
adc
mov
dec
imul
pop
fldcw
loope
shl
arpl
notl
or
mov
mov
sub
mov
mov
out
jbe
leave
mov
or
dec
daa
lret
repz
lods
pop
pusha
mov
adc
rcrb
or
sub
pop
arpl
pop
inc
sub
daa
inc
rorb
rcll
inc
and
pop
dec
jg
loope
ficoml
iret
push
sti
stc
push
xlat
fxch
jae
loop
dec
out
jb,pn
xchg
fistps
idivb
lods
jge
lret
mov
fs
pushf
idivb
jno
inc
cmpsb
jp
stos
mov
aaa
push
mov
mov
jno
dec
pop
push
cmc
and
mov
xchg
jo
mov
data16
rcl
cli
add
xchg
pop
jge
xchg
xor
sub
sbb
imul
mov
js
add
dec
mov
mov
jp
std
imul
jg
mov
mov
out
xlat
pop
loopne
dec
xlat
xor
mov
sti
xchg
insl
adc
push
mov
xor
adc
leave
xor
push
and
repz
xor
pusha
test
inc
cli
out
and
push
mov
clc
xor
mov
in
add
lahf
fcompl
cmp
mov
cmpsl
pop
add
jp
addl
dec
or
adc
pusha
sub
xchg
mov
lock
std
push
adc
test
popl
cltd
lret
and
and
mov
outsb
cltd
imul
push
sbb
sbb
loop
shll
xchg
stos
push
inc
adc
cmp
sbb
and
mov
lcall
scas
movsl
cmpsl
cmp
loopne
and
je
add
push
adc
arpl
hlt
out
aas
xchg
int3
stos
add
pop
fstpt
dec
faddl
sub
xlat
fs
push
cmc
fisubs
inc
adc
xor
mov
sbb
rcrb
mov
sub
shr
push
mov
cmp
jne
and
mov
fildll
popf
adc
out
xor
mov
sub
add
or
dec
push
cmp
xchg
dec
mov
mov
dec
arpl
or
pop
jp
scas
outsl
addl
repz
std
cmp
mov
mov
jae
cmc
and
mov
mov
test
inc
inc
nop
pop
pop
pop
cmp
lods
mov
add
cmp
add
pusha
ljmp
dec
push
cmpsb
mov
pop
rdmsr
icebp
cmc
stos
dec
jae
dec
fwait
xor
mov
dec
mov
sarb
mov
dec
xchg
push
filds
jmp
fnstsw
outsb
xchg
mull
mov
and
clc
xor
test
loop
xchg
mov
rcrb
mov
cli
sub
mov
pop
and
mov
out
pop
aaa
cli
push
rcl
out
in
push
push
add
mov
jl
iret
cld
fisttpll
jg
pop
mov
sub
loopne
xchg
sbb
mov
push
outsl
iret
jge
xchg
adc
jg
sub
loopne
adc
jae
xor
cmp
jge
push
inc
mov
pop
adc
jl
pop
dec
lods
xchg
jmp
push
nop
dec
mov
cltd
or
je
jl
inc
sbb
lcall
fcmove
pushf
or
pop
andb
xor
arpl
mov
test
imul
xchg
xor
push
pop
clc
cmc
xor
mov
lret
mov
xor
mov
mov
xlat
mov
ds
cmp
or
je
movsl
mov
fs
je
out
mov
xor
in
std
ret
fwait
sahf
mov
call
inc
popa
add
pop
jmp
fistpll
mov
sub
aad
xor
xor
cld
jp
movsb
lods
icebp
nop
mov
mov
mov
mov
test
andb
and
std
ficomps
and
xor
movsl
in
es
inc
rorl
insb
mov
lcall
sbb
mov
xchg
adc
xchg
ret
daa
jae
addr16
adc
ss
mov
adc
shrb
in
jmp
out
jecxz
pop
add
jbe
stos
pop
or
insb
inc
xor
push
push
sbb
ds
mov
ror
stos
pop
dec
push
int
dec
fstpt
and
shlb
push
cltd
mov
mov
mov
ret
push
and
add
mov
pop
push
lock
add
jns
fwait
test
outsl
scas
or
movsb
jle
or
jecxz
lahf
adc
test
gs
icebp
lock
mov
movsb
js
imul
clc
jb
jmp
mov
dec
adc
out
sub
inc
xor
js
ljmp
push
lock
fcmovu
and
outsb
je
cmp
inc
xchg
loop
sbb
or
and
dec
icebp
xchg
push
loopne
and
mov
sbb
int3
mov
popf
xchg
testl
repnz
fcompl
test
scas
outsl
cld
push
iret
pop
gs
sub
push
in
dec
add
cmp
mov
pop
je
add
add
pusha
orl
dec
clc
jecxz
pop
divl
rclb
and
inc
cmp
clc
or
add
sbb
loop
lock
add
push
test
mov
test
data16
sbb
jmp
aam
push
mov
jmp
addr16
std
dec
add
push
mov
ss
pop
cli
pop
cmpsl
arpl
inc
add
push
adc
lret
and
icebp
or
inc
dec
imul
out
ja
and
jge
int3
movsb
ljmp
stos
xchg
mov
loope
push
dec
mov
in
jbe
lahf
rcl
fdivrs
push
dec
or
in
mov
cmp
leave
in
iret
jo
dec
fnstcw
test
add
xor
aad
cmc
pop
xor
ret
movsl
mov
add
adc
sub
scas
outsl
repz
jmp
roll
adc
cmp
inc
or
xor
jbe
inc
lock
aas
dec
mov
mulb
mov
into
mov
and
sub
cmpsb
lret
sar
in
imul
fcoml
cmpsb
xor
outsb
movl
aam
or
push
cmp
push
shll
or
shrl
lock
jg
data16
aaa
pop
es
push
arpl
ljmp
mov
push
jns
sbb
xchg
js
pop
mov
push
sub
out
sbb
dec
call
in
scas
cli
jecxz
sbb
cmc
out
sub
and
inc
cmp
in
das
mov
add
push
mov
shrl
jbe
dec
and
mov
push
pop
jne
xchg
push
out
stc
or
xchg
mov
out
inc
jl
xchg
jnp
test
nop
stos
mov
mov
mov
push
jecxz
or
in
lahf
cmp
mov
lock
inc
adc
rclb
sbb
sbb
and
dec
mov
xchg
jne
jo
xor
cmp
movsl
mov
mov
movsb
fcmovnu
adc
ja
add
decb
popa
add
out
or
jp
mov
mov
mov
jno
fs
sub
ljmp
js
mov
mov
mov
xchg
xchg
cld
push
adc
stc
adc
xchg
mov
popf
arpl
out
cmpsl
lahf
cmc
and
and
cmpsb
daa
mov
xlat
jno
test
jbe
fmulp
mov
mov
cmp
xor
leave
lea
inc
jg
push
sbb
imul
inc
addl
daa
push
cwtl
adc
lock
mov
or
mov
insl
ret
xor
idivb
das
popf
add
xabort
jle
xchg
nop
fsubs
jo
fstpl
add
insl
movsb
inc
in
xor
into
insb
jmp
incl
mov
insl
add
scas
ds
dec
sub
mov
imul
mov
xlat
mov
pop
imul
sbb
xlat
lea
dec
fs
lahf
mov
arpl
cld
mov
daa
dec
pop
dec
mov
xor
in
mov
mov
pop
xchg
xchg
adcl
daa
sbb
scas
mov
aam
add
roll
dec
jae
dec
idivb
inc
shll
push
or
jb
daa
xor
call
fstpt
in
jecxz
sbb
call
into
inc
jns
in
hlt
mov
mov
mov
mov
sbb
lretw
dec
fnsave
fcomps
cmp
int
mov
addr16
in
imul
stc
out
movsb
orl
mov
pop
leave
or
push
or
insb
rclb
rcrb
sbb
mov
scas
jmp
lock
loop
or
pushf
scas
in
jmp
xor
add
and
out
cmp
shl
adc
jnp
lret
cmp
sub
wbinvd
bound
das
mov
cli
lods
mov
adc
add
lret
test
xchg
jnp
mov
test
leave
mov
xchg
lods
xlat
stc
mov
lahf
mov
pop
das
dec
pop
xchg
popa
xchg
mov
adc
xor
cmp
aas
push
or
je,pt
mov
and
mov
shlb
cmp
shrb
mov
sarb
and
loopne
sbb
push
insb
daa
cs
inc
cltd
lea
xor
mov
xchg
jl
outsl
push
jmp
outsb
out
sub
and
sub
shl
hlt
nop
pop
cmp
dec
jmp
adc
out
dec
push
sub
cmc
leave
jmp
jle
imull
dec
pusha
negl
icebp
inc
push
fists
or
cmp
aas
adc
mov
inc
jl
cmp
xchg
dec
mov
scas
clc
and
or
mov
inc
jns
jmp
lds
scas
cltd
or
mov
and
adc
fisttps
xor
gs
sbbl
cwtl
enter
arpl
aas
rcrb
arpl
push
push
cmpb
stos
andb
push
pop
xor
mov
add
or
inc
or
cld
xchg
jnp
xchg
dec
outsb
mov
movsb
cmp
add
and
fwait
scas
jns
popf
cmpsl
rol
test
push
sbb
cmp
add
jg
imul
xchg
inc
icebp
loopne
mov
pop
and
fcompl
push
addr16
inc
jno
cmp
sub
mov
testl
and
fstl
sub
xlat
add
dec
aad
mov
jg
jp
scas
mov
jecxz
imul
arpl
das
daa
rclb
lods
add
push
jecxz
cmp
test
or
arpl
adc
cwtl
mov
repnz
dec
jno,pn
xlat
je
jne
xchg
push
loope
push
mov
cwtl
cltd
pop
add
jg
orl
test
aas
add
mov
stos
adcb
inc
pop
adc
dec
out
testl
fistpl
cld
mov
scas
jle
cmp
sub
sub
mov
pop
xchg
ljmp
inc
cmp
daa
movsb
mov
popa
call
mov
xlat
enter
pop
stos
or
cmp
cmc
xchg
mov
lret
rsqrtps
rol
push
lock
push
and
inc
out
xchg
add
je
push
adc
inc
mov
movl
add
xor
jnp
xor
ss
fsubrl
dec
data16
jmp
and
cmpsl
add
mov
mov
xchg
imul
outsb
nop
mov
outsl
dec
cmp
sbb
mov
out
add
enter
addr16
sbb
lret
push
xor
int
xlat
lahf
les
jmp
mov
icebp
jo
inc
pushw
push
mov
xchg
or
arpl
xor
inc
lcall
jo
push
data16
fsubrs
xchg
call
lret
xor
lret
subb
mov
pop
sbb
cmp
nop
jb
stc
add
popa
cmp
xor
mov
es
pop
or
fbld
aaa
andb
icebp
inc
dec
inc
push
mov
and
sbb
cmc
add
pop
mov
cmp
out
sbb
sarb
xor
cmp
stos
cmp
in
add
jbe
mov
jmp
xchg
xchg
push
movsb
ret
lcall
insl
gs
popf
bound
ficoms
lahf
push
pop
jl
aaa
inc
pop
add
xor
hlt
icebp
mov
fsubrl
push
sahf
repnz
push
fadds
rol
cs
rcrb
jno
idivl
xor
xor
outsl
fidivrl
leave
test
mov
es
pop
xor
imul
push
inc
incb
mov
mov
jle
pusha
mov
aas
pop
and
popa
repz
lret
cltd
sbb
hlt
test
pop
mov
jg
mov
lods
imul
fcmovnbe
jmp
pop
push
xchg
pusha
cmpsb
repz
xchg
lahf
rcr
sbb
mov
ljmp
stos
pop
dec
inc
int
mov
fnstsw
ret
inc
cmp
jnp
icebp
push
push
xchg
ficoms
mov
xchg
jno
mov
push
push
xchg
int
mov
mov
into
ds
xchg
scas
jmp
out
mov
cmp
enter
lea
dec
jne
loope
mov
je
mov
sbb
test
cltd
push
mov
mov
ffree
out
aam
pop
mov
loope
push
lret
mov
adc
xchg
icebp
lds
es
fsubs
bound
mov
sahf
pop
xor
cwtl
pop
imull
sbb
enter
inc
push
add
jecxz
lds
in
outsl
imul
aad
or
mov
push
enter
or
mov
aam
hlt
insb
pop
jmp
mov
jnp
or
cld
iret
pop
outsw
push
or
cmp
or
out
or
mov
or
fadd
xor
clc
lods
and
pop
imul
cwtl
and
jmp
xor
xchg
scas
rorl
push
out
sub
xor
mov
fcompl
sbb
pop
pop
arpl
cmpl
lods
pop
dec
or
shlb
lahf
pop
scas
lahf
push
jp
mov
mov
aam
iret
mov
push
mov
xorb
jbe
sti
sti
loopne
pop
adc
in
mov
push
mov
jmp
mov
mov
jp
daa
xchg
cmp
xor
xor
lahf
rorb
push
push
fldt
xchg
int
ret
mov
loop
or
jnp
mov
pop
stos
leave
or
pop
add
outsb
or
iret
andb
and
sbb
mov
ret
xor
jnp
push
cmp
rclb
xchg
push
mov
mov
mov
out
adc
and
aad
mov
xor
in
fcomps
sub
nop
pop
mov
ss
mov
scas
xchg
add
jne
loopne
out
stos
icebp
mov
shll
outsb
movsb
sbb
rcl
sbb
mov
cmp
fcmovbe
cmpb
hlt
xor
ja
mov
mov
sub
stos
add
adc
shlb
enter
loopne
hlt
pop
xchg
pusha
xchg
sti
or
sub
or
adc
clc
cmp
xchg
xchg
sarl
xor
lret
and
mov
int
loope
adc
push
sbb
stc
ja
popf
jmp
pushf
sub
mov
ret
ss
jo
jbe
mov
push
dec
jge
imul
jo
sbb
jne
or
xchg
cmpsl
mov
insl
popf
pop
pushf
xor
pop
lcall
enter
and
clc
push
aam
fmull
orb
rolb
adc
cmp
stos
jo
jg
hlt
lea
adc
mov
insl
ret
mov
ja
push
xor
xchg
mov
xchg
adc
fdivrs
testl
add
out
jl
xchg
stos
aas
enter
rcl
out
sbb
xor
xchg
dec
iret
rol
push
cmp
shl
inc
adc
sub
sahf
or
popa
je
fwait
mov
into
dec
jae
cmp
shrl
or
sub
adc
dec
cmpsb
icebp
mov
dec
sub
icebp
mov
jp
in
sbb
bound
insb
leave
popf
arpl
hlt
clc
enter
jbe
clc
add
push
in
sbb
and
les
push
sti
jae
jecxz
subb
sbb
mov
pop
inc
and
xor
mov
insb
out
clc
lea
imul
inc
mov
mov
ret
and
bswap
add
lahf
pop
aaa
subb
nop
mov
xor
xor
frstor
sbb
sub
jmp
cmc
jae
push
adc
jnp
fs
push
dec
push
dec
mov
jecxz
jbe
movsl
or
in
cli
jnp
pusha
idiv
packsswb
xor
mov
push
std
mov
fs
pushl
dec
das
pop
push
mov
out
lea
adc
rorb
sbb
and
aam
clc
mov
push
test
stos
mov
jns
lods
cld
jbe
shlb
mov
adc
int
shrl
mov
or
jns
push
xor
mov
add
jno
pop
jge
push
mul
repz
add
fwait
mov
das
mov
pop
addr16
pop
sbb
jecxz
bound
xor
arpl
repz
xor
cmpsl
cltd
mov
rcll
dec
jge
loope
repnz
mov
mov
adc
push
or
mov
mov
pusha
add
xchg
stc
mov
dec
cltd
mov
lea
and
les
push
js
loope
ret
scas
sti
out
stos
xchg
int
pop
or
add
subb
cli
add
bound
push
ret
inc
jge
cld
xchg
insb
je
loopne
mulb
push
insl
js
dec
xor
pop
sarb
lods
pop
filds
cwtl
sbb
xchg
pop
sub
fistpl
jg
test
ljmp
cmp
test
adc
cs
stos
mov
lods
cld
dec
fcomip
adc
push
dec
push
das
sbbb
adc
or
push
mov
addr16
sub
aam
xlat
cld
pop
cmp
dec
outsb
lds
test
pushf
cmp
xchg
lahf
gs
mov
mov
jne
pop
mov
xchg
out
adc
fcmovb
add
pop
int3
mov
notb
ss
mov
push
aam
mov
push
pop
outsl
test
outsb
mov
ss
inc
daa
js
pusha
cwtl
cmp
daa
rorb
adc
imul
fisubrs
lahf
xchg
add
jne
dec
cmp
out
jnp
mov
stos
loope
lcall
test
mov
jl
out
adc
loop
jg
adc
xchg
mov
inc
fbstp
je
xchg
or
ljmp
adc
pushf
sbb
mov
and
clc
lea
xchg
adc
mov
cwtl
jecxz
iret
cwtl
jo
movsl
xchg
int3
out
and
leave
push
pop
pop
std
sbb
lock
mov
mov
nop
aam
push
or
xchg
out
mov
add
ret
fistpl
or
sub
and
xor
sub
ss
loopne
jb
inc
mov
xor
rorl
fadds
adc
cltd
mov
hlt
sub
aaa
jns
fs
xor
jnp
mulps
inc
les
pop
sbb
addl
xor
sahf
fst
fwait
push
inc
xchg
inc
mov
mov
sbb
mov
mov
push
xor
ja
inc
scas
dec
pop
rolb
jb
push
rcrb
pusha
repnz
push
cmp
dec
cld
or
adc
leave
sti
fldl
roll
out
lret
push
ds
es
repnz
push
xchg
cs
inc
push
sub
fildl
push
or
hlt
test
movsb
and
jae
xor
movsb
imul
sbb
in
dec
out
fcoms
decl
cs
lahf
or
add
inc
inc
cwtl
daa
rclb
pusha
loopne
movsl
movsb
push
cmp
scas
xlat
mov
loopne
add
push
inc
and
adc
adc
inc
stos
pop
stc
lods
xchg
popa
mov
cwtl
xchg
add
mov
cmpsb
pop
adc
mov
sbb
jne
pushf
out
inc
mov
stos
sbb
movsl
dec
orl
mov
jno
testb
push
fstl
xchg
pushf
jbe
andl
lahf
outsb
call
stos
pop
in
into
xor
movsl
divl
sbb
pop
pop
inc
add
lock
and
push
repnz
enter
mov
sub
sbbl
data16
lds
out
pop
movsl
cmp
popa
bound
mov
xlat
jb
prefetchwt1
or
push
inc
arpl
inc
rolb
int
addl
test
sbb
push
add
aaa
jo
xor
sbb
mov
push
movsl
adc
xchg
and
int
lcall
mov
adc
lods
or
and
imul
lock
stc
sub
xchg
popf
jne
or
sub
add
fwait
insb
cmp
mov
aas
inc
mov
dec
clc
xchg
pusha
sub
xchg
test
std
fdivs
in
xchg
pop
xchg
sti
jp
push
nop
xor
in
pop
cmp
cs
xchg
out
dec
cltd
mov
sub
or
sbb
lds
mov
addb
test
insl
outsl
pop
ret
mov
and
mov
add
cmc
data16
ljmp
into
sbb
mov
ret
int
scas
xor
repz
mov
test
ret
pushf
out
and
adc
cmp
icebp
aaa
insb
mov
mov
cmpsb
ss
jge
xor
push
pop
fdivr
je
cltd
xlat
icebp
fbstp
sbbb
dec
mov
outsb
lods
pop
sbb
gs
lods
sub
sbb
push
xchg
iret
cmp
andb
push
sar
sub
dec
outsl
out
lahf
mov
inc
pop
xchg
sub
lods
sub
inc
xchg
loope
xor
out
pop
leave
cmpsl
pop
mov
dec
pop
adc
push
ljmp
lahf
test
sbb
pop
xor
stc
mov
xor
in
sbb
dec
scas
test
int
mov
aam
insl
gs
jg
add
add
sbb
test
dec
pop
mov
in
adc
cwtd
cli
xor
notl
shlb
mov
mov
cmp
cltd
or
mov
add
lock
mov
jge
sbb
xor
rcrb
adc
add
and
mov
daa
in
sub
flds
lods
outsl
sahf
mov
aam
lret
push
or
mov
sbbl
cltd
lcall
cmpsl
mov
mov
and
xlat
lcallw
test
pusha
inc
add
and
sub
xor
adc
inc
imul
dec
hlt
aad
jmp
dec
push
push
ja
mov
mov
dec
pop
cmpsb
imul
fsubrs
jmp
sahf
ds
test
add
popf
or
and
stos
aaa
or
and
pop
mov
jb
xchg
dec
xchg
adc
popf
sub
dec
rorb
sbb
aaa
add
cmp
jle
dec
adc
loop
dec
scas
cmp
ja
in
pushaw
into
loop
mov
ret
fadd
std
dec
sub
cmp
and
rorb
or
aas
sub
or
jne
sarb
int
fwait
mov
je
shlb
sub
clc
jno
clc
shll
xor
inc
lods
or
add
aas
jle
mov
xor
aaa
or
xchg
adc
leave
lcall
fsts
inc
jnp
sbb
jecxz
push
or
lret
test
jge
jo
testb
movsb
jo
inc
incl
mov
mov
inc
jnp
push
dec
xor
sbb
pop
sub
pop
ja
jg
dec
mov
daa
mov
mov
sub
imulb
pop
add
lods
cmpsb
aam
cmc
mov
in
adc
adc
popf
imul
xchg
or
pop
inc
cmp
mov
inc
fucomip
or
xor
clc
dec
je
add
cltd
aad
aad
add
mov
cmp
dec
fwait
add
dec
adc
adc
push
jmp
sti
push
cli
int3
fimull
xchg
ds
jl
sbb
ja
adc
into
jle
add
and
pop
mov
addr16
outsb
xor
cmpl
divb
cs
scas
sub
jbe
lahf
fildl
sar
insb
gs
daa
sbb
and
mov
pop
cmp
iret
pop
dec
dec
out
imul
lcall
iret
push
sub
pusha
pop
xchg
jne
adc
push
mov
orl
bound
mov
cmp
insb
lods
cs
jb
fildll
mov
mov
insb
idivl
dec
rorb
mov
mov
adc
inc
gs
lock
dec
mov
out
jle
clc
addr16
dec
push
jle
movsl
aaa
int3
pop
shlb
pop
xor
jle
call
jmp
jns
fxch
cmp
jae
mov
sbb
adc
movsb
outsb
add
cli
shrb
movsb
xor
cmpsb
pop
daa
cmp
add
into
cli
jb
in
imull
iret
or
xor
or
adc
loopne
lcall
into
dec
daa
xchg
mulb
aad
push
inc
xor
outsl
out
pusha
and
loopne
mov
outsl
paddsw
repz
mov
fstps
sub
push
or
addl
sub
shlb
negl
adc
fs
cmp
jb
lds
push
shll
fcoml
push
imull
movsl
aas
xlat
lahf
pop
mov
cs
addr16
ja
shr
out
cmp
cmc
roll
scas
mov
pop
sub
sbb
and
js
call
mov
add
jae
xor
lahf
and
sbb
dec
sti
xor
mov
push
mov
faddp
push
mov
mov
xor
xchg
stos
jnp
mov
jne
insb
div
push
and
and
in
mov
sti
or
pop
jl
xchg
inc
jbe
jecxz
or
fwait
dec
scas
dec
mov
inc
xor
sahf
adc
nop
dec
int3
leave
lret
xchg
repz
and
cmp
push
jae
cmp
ljmp
inc
sbb
jge
adc
add
xchg
popf
lret
add
nop
daa
sbb
push
fadds
mov
call
int3
mov
jnp
dec
jg
iret
pop
shrl
inc
repz
fmulp
icebp
cmc
mov
icebp
jae
xchg
mov
mov
add
mov
pop
daa
sbb
lret
hlt
test
fidivl
xor
jbe
pop
cmp
xor
loope
pop
in
mov
cmp
lcall
xchg
xor
jl
jb
cs
scas
pop
jbe
and
movsl
push
jne
sbb
aad
scas
xchg
rcrb
cld
sbb
xor
xchg
push
and
scas
mov
jne
jo
pop
cmpsl
in
out
jge
enter
push
addr16
xchg
test
and
in
sbb
js
repnz
bnd
add
or
mov
xorl
mov
inc
adc
outsb
call
lock
adc
fldl
int
enter
fwait
pusha
jecxz
pop
arpl
cmc
jns
mov
cli
call
fdivrp
jp
push
xor
jae
insl
rolb
mov
cmpsl
test
aas
xchg
sub
xchg
or
icebp
popf
or
adc
call
jle
mov
dec
and
pop
fiadds
mov
mov
pop
jle
mov
and
adc
cmp
and
lods
mov
cmpl
sarb
mov
sbb
daa
mov
pop
add
sbb
in
fwait
lods
sbb
arpl
bound
cmc
sub
inc
dec
aad
xor
pop
jnp
not
inc
mull
cld
jle
scas
sub
loope
mov
jp
add
testl
mov
mov
scas
out
loopne
rcl
shrb
outsb
mov
cmp
orl
jbe
test
jl
pop
repz
imul
js
jge
cmp
mov
lahf
add
es
push
in
push
ljmp
popa
test
pushf
sub
nop
sbb
inc
mov
mov
ficoms
jl
jo
mov
push
pop
into
xor
mov
ror
jmp
sbb
into
loop
mov
cltd
outsl
inc
push
or
cltd
in
cmc
pop
xchg
jb
cmp
sbb
pop
push
arpl
add
adc
mov
lock
mov
imul
sbb
sbb
cmpb
push
js
push
pop
mov
fdiv
sub
pusha
je
imul
lea
push
mov
pop
je
inc
xchg
shrb
jecxz
mov
pop
add
jmp
lea
mov
lds
fs
adc
pop
int3
mov
inc
loop
ffree
xor
sbb
lcall
lock
cld
loope
push
gs
push
inc
aas
test
test
mov
mov
fcmovnb
cmp
or
sub
inc
or
xor
jns
push
out
mov
xor
fwait
lret
mov
jnp
push
test
cmpsl
ljmp
arpl
stos
sbb
aas
in
xchg
and
into
cmp
leave
inc
fadds
ss
sub
add
mov
and
incb
aad
cmc
jge
pop
std
int
int3
jnp
je
xor
mov
lret
out
or
es
stc
ljmp
mov
xor
clc
imul
fcoms
or
sbb
mov
test
xor
pop
sub
push
and
sbb
mov
mov
popa
sub
mov
pop
stos
jl
adc
lret
xor
cmp
or
xor
mov
or
jno
and
jnp
das
mov
mov
imul
mov
adc
mov
mov
in
insb
cwtl
add
adc
xchg
fldenv
cmp
out
ret
repnz
clc
xchg
aad
in
or
sbb
sti
push
mov
or
jge
xorl
push
push
push
fwait
movsb
nop
testb
lods
jg
inc
insl
or
out
lds
dec
cmp
addr16
sbb
call
sbb
adc
xchg
popa
pop
rcll
jmp
nop
repnz
push
aaa
jmp
sbb
jns
enter
jecxz
mov
pop
mov
xchg
in
adc
in
inc
movsl
pop
icebp
cmp
cmp
dec
ucomiss
in
rcll
xor
lret
sub
adc
sbb
sbb
pushf
mov
sbb
rclb
sbb
inc
xlat
jae
add
dec
out
aam
lock
pop
mov
rorl
inc
nop
in
xchg
mov
xor
xchg
mov
popf
xor
pop
mov
rclb
xor
mov
sub
dec
repnz
mov
inc
add
je
popf
hlt
sub
cwtl
repnz
outsl
dec
and
push
dec
xchg
pop
inc
or
adc
mov
cwtl
cltd
xor
das
mov
mov
xor
lds
fbstp
into
enter
sahf
jbe
shlb
rclb
shll
loopne
movsl
test
dec
les
pop
push
or
adc
push
push
test
fildl
in
add
ss
or
xchg
push
loopne
add
shr
call
lahf
movsl
mov
pop
dec
pop
or
aam
daa
jg
adc
into
jae
or
jp
xor
jb
xor
xchg
jne
fs
fs
inc
mov
rcll
or
mov
lret
hlt
call
sahf
push
add
cmpsb
mov
xchg
pop
dec
dec
or
mov
and
inc
mov
xchg
subb
jmp
xor
cmpl
xor
xchg
lds
inc
jg
add
das
imul
push
add
pop
add
clc
and
mov
mov
push
adc
xchg
inc
add
add
ja
outsl
push
jl
cld
mov
ja
sub
xchg
idiv
sbb
mov
rorb
jae
mov
pop
out
enter
jmp
pop
cwtl
sbb
out
inc
inc
enter
mov
shll
and
loopne
aad
pop
pusha
pushf
cmovge
push
push
pop
sti
and
sbb
shrl
mov
jmp
stos
mov
jo
mov
jecxz
lea
mov
ds
mov
addb
add
idivb
dec
std
jle
dec
jg
insb
sub
fwait
xchg
dec
pop
stos
and
inc
dec
insl
fwait
mov
mov
lods
push
out
mov
or
std
insb
fmull
cmp
cmp
call
push
inc
cmpsb
std
int
sub
sub
stos
inc
movsl
lret
lock
push
es
pop
dec
push
icebp
int3
je
call
cmp
push
pop
mov
stos
int3
push
out
sbb
mov
sub
iret
int
push
cmpsl
xchg
sbb
sbb
call
adc
repz
leave
or
push
lret
leave
rol
adc
jne
lods
test
jns
mov
idivb
pusha
int
lea
pop
pop
ljmp
jecxz
xchg
gs
mov
and
ja
jb
dec
ret
jmp
and
cmpsl
sub
outsb
hlt
xor
mov
mov
xchg
call
scas
mov
jle
xorl
enter
ja
or
ljmp
stos
fs
jae
lcall
push
fs
ret
fildl
xchg
leave
ret
leave
nop
mov
hlt
pop
cwtl
jbe
inc
jge
stc
dec
int
dec
stc
in
cmpsl
test
stc
pop
hlt
lret
movsb
cwtl
pop
add
pop
cmpsb
lcall
xchg
insl
push
sbb
and
inc
sub
jne
call
mov
iret
xchg
pusha
mov
fcomps
push
and
jo
xor
idiv
inc
imul
ja
ss
mov
imul
std
push
inc
and
fdivrs
idiv
dec
cwtl
outsb
fmull
mov
pop
xor
test
jbe
sti
xor
and
mov
cwtl
sub
shlb
imul
popa
fcoms
aas
insb
gs
addr16
lcall
adc
sarb
fstl
mov
mov
out
jle
sbb
lods
push
jp
and
add
daa
adc
lret
dec
out
in
and
jbe
add
out
popf
sbb
jb
xchg
clc
pop
cmp
and
xor
icebp
ds
mov
faddl
aad
mov
pop
pushf
insb
push
add
xor
mov
out
js
and
or
loope
jecxz
push
and
sbb
jg
jns
roll
loop
pop
jae
xchg
or
scas
sbb
dec
data16
ja
sub
or
push
aaa
and
xchg
lret
push
fisubl
mov
and
iret
mov
inc
jl
sub
xchg
imul
push
sub
ror
std
cmp
lahf
mov
aaa
jecxz
xor
sbb
dec
enter
movsb
lds
lea
or
ret
sub
ret
pop
cwtl
test
xchg
add
movsl
movl
adc
cmp
mov
stos
test
jle
imul
mov
xchg
test
jnp
test
push
ret
push
jl
mov
mov
shlb
xchg
aas
imul
mov
ja
inc
pop
adc
imul
mov
push
sub
faddl
outsl
out
les
or
ss
decl
mov
out
fisttpll
xchg
push
pusha
dec
add
mov
pop
sti
lcall
push
cmp
mov
lea
stc
ret
out
sbb
shrl
fnsave
mov
add
sub
adc
fdivs
inc
mov
arpl
inc
xor
jne
xor
jl
daa
ret
ja
and
pusha
cmp
cmpsl
and
push
dec
dec
repz
imul
jmp
fisttps
arpl
cmpb
jnp
pop
ljmp
outsl
sub
jp
out
pop
std
jmp
cld
test
js
rorl
adc
cmp
mov
bound
rcll
lret
insl
into
int3
das
fs
and
cmpl
hlt
popa
inc
mov
popa
adc
sub
cs
pop
and
inc
mov
pop
xchg
mov
inc
in
mov
ja
pop
push
ja
lea
sbb
mov
ja
loopne
push
ret
scas
ss
pop
pusha
out
dec
sbb
cwtl
fs
mov
sbbb
je
dec
fcomp
adc
int3
jbe
into
call
mov
aad
inc
loope
dec
push
adc
jo
cmpsb
dec
adc
daa
adc
ds
fildl
jo
popa
jg
lods
scas
cs
int3
jne
popa
and
dec
xchg
xchg
ja
sbb
pop
and
dec
dec
shrb
xchg
gs
sti
sbb
dec
repnz
out
clc
aam
cmp
adc
mov
or
out
loop
xor
mov
in
and
pop
movsl
mov
inc
ret
mov
inc
fdivs
or
push
fs
or
das
or
sbb
mov
cmp
loope
sub
and
outsb
lods
gs
fwait
rcll
bound
bound
outsl
dec
cmp
mov
pop
jno
jb
insb
call
in
mov
fcoml
sahf
cmpsb
jbe
jae
xorl
insl
mov
jb
adc
enter
rcl
sub
xor
sti
add
or
outsl
xchg
add
mov
scas
test
push
out
ret
fwait
mov
pop
pop
outsb
push
out
jecxz
jb
push
sub
lahf
int
adc
pop
es
dec
jmp
ljmp
push
and
ja
mov
aas
cmp
lods
inc
mov
testl
pop
jae
sbb
dec
or
lds
add
jmp
cmpl
xor
std
insb
repz
mov
add
movsb
xchg
mov
mov
in
fsubl
jp
dec
cmp
js
lahf
cmp
loope
imul
push
aaa
scas
call
cmpsl
dec
scas
inc
jo
iret
dec
and
pusha
mov
mov
ds
gs
xchg
pop
and
sub
push
outsl
outsl
mov
loop
mov
gs
loop
mov
jne
movl
test
mov
daa
cmpl
popf
dec
iret
mov
bnd
dec
push
cld
adc
jne
out
adc
add
sub
mov
pop
jecxz
jle
leave
pop
mov
mov
sbb
mov
cmp
push
movsb
adc
das
pop
cltd
cmc
xchg
icebp
mov
outsb
sbb
cs
mov
dec
jnp
mov
push
cmp
dec
test
and
jno
push
push
lods
in
jl
xchg
stos
pop
fistps
and
mov
push
mov
mov
movsl
hlt
mov
int
cmp
insl
push
rol
hlt
mov
xchg
inc
insl
sbb
pop
sbb
jmp
fildll
cmp
sbb
sbb
add
mov
cld
mov
sub
mov
stos
fstpl
or
jg
xlat
pop
shll
xchg
popf
push
loop
inc
cmp
adc
das
popl
mov
jb
push
ret
and
mov
inc
mov
andl
int
push
rcll
movsl
int
adc
mov
add
mov
jo
ficomps
loopne
mov
jnp
imul
adc
pop
cmp
imul
testb
sbb
jmp
ficomps
cmp
mov
add
sahf
add
jge
xchg
push
aas
jo
insb
jb
ret
scas
mov
sti
lcall
cs
add
inc
add
or
pop
xor
sahf
pushf
stc
mov
and
xchg
inc
and
dec
shrb
pop
lods
out
addl
aad
aaa
outsl
adc
std
ss
or
and
pop
xchg
ret
aas
rcrl
add
stc
out
dec
mov
shll
inc
call
or
mov
int3
push
dec
in
cmpsl
nop
test
sub
mov
adc
jno
cmp
bound
jl
arpl
cmpsb
popf
lea
cmp
jecxz
cli
or
jns
cmpsl
ret
shll
stos
shll
mov
mov
inc
rcrl
lcall
push
ret
lds
aad
inc
dec
jae
rcrl
mov
es
mov
call
in
mov
loopne
sbb
inc
stc
popf
mov
inc
adc
aas
ljmp
lods
push
push
scas
lds
enter
fcompl
not
scas
out
pusha
pusha
icebp
test
add
cmp
jno
dec
jge
mov
lahf
xchg
ljmp
mov
adc
adc
mov
mov
stc
repz
adc
adc
shl
mov
add
adc
into
leave
addl
mov
xchg
fisubs
jb
movsb
mov
insl
dec
mov
push
jb
dec
ss
jmp
lea
jecxz
and
dec
lock
mov
sbb
cld
xchg
aas
xchg
cmc
mov
stc
jno
dec
xlat
sbb
pop
mov
mov
jae
jbe
std
dec
jno
into
xor
sub
std
xor
push
ja
mov
in
lret
push
aas
test
push
arpl
xor
mov
call
out
xchg
mov
mov
mov
hlt
aad
je
or
stc
and
repz
push
cmp
or
or
fldcw
ret
xor
xchg
scas
xchg
mov
in
roll
imul
popf
cmc
popf
jmp
xlat
call
inc
jmp
mov
lods
int
adc
sbb
jp
pop
xchg
dec
cmp
lds
mov
cmp
lret
cmp
movsb
cwtl
mov
pop
pop
mov
call
in
push
lret
ds
mov
sub
sub
push
in
push
enter
enter
out
pusha
sti
xor
mov
loop
mov
or
fdivrp
fs
pop
and
into
sub
fisttpl
sub
sbb
add
insl
inc
clc
inc
lods
mov
aaa
loop
cmpl
fs
sbb
lret
and
dec
mov
pop
movsl
adc
iret
xchg
test
inc
loope
in
in
push
leave
shrb
leave
cwtl
cmp
mov
rcrl
arpl
xchg
cmp
es
cld
arpl
push
jnp
pop
lcall
lret
adc
mov
stc
je
xchg
dec
sbbl
clc
int
in
adc
jne
push
jp
and
imul
add
xor
popf
mov
sub
jp
cmp
rcl
cmp
out
inc
fimull
lcall
in
dec
or
pop
pop
adc
rcl
add
xor
int
adc
xchg
je
shll
dec
mov
xor
aaa
mov
aaa
jae
mov
push
dec
or
sub
loope
mov
xor
sbb
lock
shlb
loopne
movl
lds
out
or
mov
mov
inc
cs
and
imul
addl
bound
int3
lcall
mov
jge
mov
repz
inc
popa
jle
inc
rcll
mov
call
sti
xchg
mov
pushw
loope
out
or
scas
cmpb
or
push
nop
ljmp
pop
out
push
push
xchg
shl
jp
dec
scas
xor
icebp
fsts
push
mov
out
stos
xor
mov
sbb
or
fidivrs
mov
push
loopne
sbbl
es
arpl
add
push
scas
lods
mov
nop
xchg
into
dec
pop
fcomip
int
test
and
movsb
fisubs
into
and
mov
ljmp
scas
xchg
fst
push
push
shlb
adc
dec
stc
mov
xchg
hlt
loop
sbb
test
pop
or
dec
fistps
mov
dec
mov
jg
inc
push
xor
loop,pt
xchg
cwtl
pop
jle
lret
gs
out
mov
stos
mov
add
fs
les
rcll
jo
rolb
mov
push
push
mov
cmp
add
rolb
and
in
ret
daa
js
mov
data16
lds
inc
inc
dec
movsb
xchg
push
popf
or
cmp
cmc
push
and
fstpt
dec
cmp
ljmp
lods
aas
sbb
ficoml
iret
mov
fldt
and
rorb
data16
push
inc
fbstp
mov
push
pop
or
clc
push
mov
cmp
jno
pop
pusha
aad
sbbl
or
cld
jmp
leave
jo,pn
addr16
adc
pushf
sahf
outsb
out
int3
mov
inc
imul
mov
jecxz
jecxz
sahf
bound
movsl
mov
pop
xchg
mov
dec
add
xor
gs
xor
je
jmp
movsl
fidivl
jmp
pushf
xchg
cmp
jmp
jmp
jp
jnp
sub
push
outsl
add
dec
call
sub
fcom
ja
movsl
test
dec
add
xchg
or
xchg
push
jmp
aad
push
aaa
sti
dec
xor
push
adc
inc
jno
jp
and
nop
adc
push
je
mov
test
xor
outsb
jbe
call
pop
jbe
xor
test
cmp
ret
orb
popa
pop
inc
pop
mov
rorl
mov
movsb
pusha
adc
clc
mov
pop
int3
mov
mov
push
ss
test
shll
std
mov
aad
sbbl
inc
sbb
test
call
xchg
and
test
test
daa
cli
stos
pop
mull
push
pop
mov
fdivrs
aam
add
adc
inc
test
add
sbb
inc
add
dec
scas
addl
sbb
lret
rcrb
ret
and
lock
aam
mov
mov
shrl
jb
mov
jno
cld
rorb
aas
xchg
add
dec
adc
push
cmp
sub
push
stos
mov
clc
data16
mov
icebp
pop
xor
push
ljmp
and
inc
mov
out
not
in
mov
inc
and
push
js
mov
subb
xor
std
insb
in
push
dec
sbb
adc
sbb
popf
xor
mov
xchg
dec
inc
push
xchg
ds
cmp
ret
mov
xchg
pop
int
push
or
adc
lea
push
ljmp
xor
jbe
shr
xorl
jb
xor
dec
sub
ret
pop
pop
jmp
cli
pop
test
adc
mov
js
xchg
and
ljmp
ss
shlb
push
stc
je
ds
repnz
cmp
aam
inc
jnp
inc
sub
sbb
stos
fnsave
push
dec
jecxz
sub
imul
push
pop
scas
inc
mov
sbb
jnp
push
xchg
inc
mov
push
in
cltd
int3
sub
negb
into
or
jle
cs
hlt
xchg
mov
push
imul
int
adc
ret
sub
jl
scas
jg
enter
movsb
jnp
jmp
out
jo
jb
or
mov
mov
mov
cld
cwtl
dec
rcll
lret
add
aam
shlb
cld
int3
push
sub
push
sti
sub
pop
xor
sbb
inc
cmp
and
mov
xor
aaa
add
push
xor
jmp
dec
out
lods
cmp
xchg
adc
subl
jbe
mov
lea
cmpsb
hlt
cs
xlat
xchg
or
mov
andb
adc
mov
lock
dec
cld
or
sub
cmp
test
sbb
into
shlb
ret
inc
sti
pop
ja
mov
cli
push
ja
and
mov
xchg
and
cmp
cltd
fistl
in
mov
clc
mov
cmp
adc
popa
loope
add
and
imul
push
jmp
ficoml
cmp
in
sub
jecxz
xor
popa
loopne
dec
sbb
mov
test
clc
fstpt
add
or
xchg
mov
aam
movsb
sub
imul
or
push
out
rcrl
pop
in
and
cs
sbb
out
and
pop
mov
jmp
icebp
shrb
jno
jge
pusha
out
jo
popa
fnstsw
arpl
mov
out
pop
scas
xor
test
push
xor
and
cmp
push
mov
jne
loope
outsl
pop
inc
in
cmpsl
fisubl
lret
out
shrl
add
insl
jb
inc
jp
out
inc
push
sahf
add
ss
xchg
xor
insl
cmp
js
sbb
jg
mov
loopne
mov
add
or
in
mov
inc
sbb
dec
adc
push
adc
push
adc
jp
xor
inc
mov
or
enter
sub
jmp
lds
mov
shrb
xchg
jo
hlt
pop
fdiv
fwait
pop
std
aad
sub
inc
test
icebp
mov
inc
cmp
dec
adc
nop
xlat
sbb
mov
push
or
imul
push
dec
and
rorb
xchg
or
cmp
enter
inc
jmp
mov
enter
xchg
and
xorl
push
push
ljmp
inc
gs
ret
aaa
mov
rcll
inc
mov
and
push
out
and
sarb
xchg
out
fisubs
cmp
mov
in
xor
dec
add
aad
lret
push
add
mov
rcl
push
jg
mov
orl
xlat
repz
je
xchg
push
xlat
clc
and
add
leave
int
outsl
xor
in
and
inc
dec
pop
pop
or
fcomi
mov
popf
jae
insb
add
push
lret
js
mov
mov
and
fcmovu
ret
xor
pop
mov
int3
leave
jmp
inc
dec
lods
xlat
repnz
jge
push
xchg
ficomps
test
push
fxch
loope
add
mov
mov
sti
inc
aaa
cmc
idivb
stos
and
movsl
push
cltd
sub
fadd
jnp
push
mov
pop
pop
xchg
jg
ss
xor
adc
fsubr
jbe
adc
pop
movb
mov
sbb
push
inc
sbb
cmpl
insb
mov
mov
jo
pop
jnp
jl
test
adc
cmp
sbb
pusha
sub
add
fisubrs
xor
xor
call
ficoml
test
xchg
cs
mov
daa
pop
jb
inc
arpl
jle
mov
mov
push
lds
ret
inc
mov
pop
xor
push
sbb
sub
dec
push
psadbw
addr16
lods
frstor
cmpsb
mov
mov
mov
leave
jns
ret
enter
cmp
push
imul
add
xchg
sti
in
arpl
movsb
mov
mov
aas
xchg
jmp
test
aam
add
fimull
mov
into
bound
xor
pop
arpl
aaa
mov
cmp
lahf
push
addr16
iret
cmp
add
sbb
sub
mov
std
imul
xchg
movsb
sub
cmp
pop
lret
jns
mov
add
mov
push
cmp
sbb
jl
sub
cwtl
jb
mov
and
lods
jle
and
nop
sub
push
ljmp
sbb
xor
jo
dec
xor
lock
aaa
divb
xor
insb
faddl
cli
call
mov
xlat
sarb
xchg
push
mov
test
or
mov
xchg
std
jnp
mov
push
xor
cmpsb
lret
movsl
or
mov
cs
out
inc
mov
int3
pop
in
pop
jnp
sbb
arpl
dec
adc
jg
push
dec
and
sbb
sub
cs
mov
mov
jns
add
dec
out
ds
push
add
sub
pop
adc
pop
les
popf
push
dec
jnp
int
sbb
adc
leave
xlat
push
outsb
fbstp
sub
lea
stos
adc
icebp
add
inc
enter
or
push
ljmp
xchg
jecxz
in
int3
inc
adc
lea
xchg
fwait
mov
jbe
cmp
arpl
popa
jmp
aad
jnp
pusha
push
stos
cli
or
roll
fwait
adc
cmp
loope
fists
add
jg
mov
es
mov
mov
movsl
dec
xchg
arpl
dec
and
mov
test
mov
out
repz
mov
out
push
sbb
inc
subl
stos
cmpsb
ds
out
mov
mov
fsub
and
scas
dec
mov
cld
and
ret
mov
jg
sarl
lcall
mov
mov
scas
nop
fmuls
xor
add
pop
ds
andl
mov
fdiv
sbb
lret
sysexit
out
cmc
mov
fwait
xchg
lret
stc
jp
xor
ret
sti
xor
loope
dec
leave
xor
adc
stos
or
cmpsl
cs
pop
lcall
pop
and
jp
pop
fcompl
inc
pop
add
push
adc
flds
mov
dec
or
das
pop
cmpsl
roll
lds
add
aas
ja
pop
mov
mov
xor
adc
decb
sbb
push
icebp
add
fstl
push
sbb
call
adc
leave
or
aaa
shlb
inc
adc
ffree
add
mov
ss
stc
mov
xor
pop
mov
cmp
push
out
enter
pop
sub
enter
negl
adc
lds
mov
jbe
xchg
test
cmp
repnz
xor
jae
addr16
mov
and
mov
or
filds
push
popa
fst
mov
shr
and
cmc
movaps
loopne
add
int3
jne
aaa
sbb
mov
dec
jnp
and
mov
leave
pop
cmp
lock
aaa
jmp
sbb
dec
and
sub
cmp
movsl
add
mov
jl
nop
and
fs
std
mov
jecxz
sti
pusha
sub
xor
jp
mov
lock
or
inc
lahf
les
hlt
jl
xchg
dec
fmul
imul
push
call
or
call
pop
fistpl
mov
xchg
int3
imul
pop
jge
ja
sub
jg
jge
dec
and
lahf
sbb
mov
hlt
aaa
add
pop
xchg
adc
mov
lret
inc
mov
mov
push
xor
adc
mov
xor
jmp
lret
xchg
mov
and
mov
jecxz
aad
gs
adc
dec
xor
rcll
mov
cmp
imul
cld
clc
cmp
jl
cmp
hlt
fistl
xchg
jge
out
adc
fisttps
and
gs
fs
dec
pop
push
dec
or
fmull
popf
loop
jnp
inc
push
jg
xchg
cmpsl
aam
bound
pop
or
mov
fdivs
ret
loopne
inc
inc
mov
mov
pusha
adc
xorb
push
xlat
pop
jge
dec
lret
shl
cs
fbld
and
xchg
xor
pop
xor
es
sahf
mov
mov
mov
fstps
test
movl
mov
jge
or
sub
imul
inc
gs
ja
outsl
jle
and
jae
js
add
in
js
bt
pushf
sahf
mov
inc
mov
mov
dec
mov
pop
into
mov
es
int
dec
enter
iret
dec
pop
and
out
mov
mov
inc
pop
add
xlat
mov
adc
sub
push
mov
or
cmp
je
add
lret
arpl
popa
shll
xchg
scas
xor
and
or
push
shl
loop
xchg
pop
ret
jle
in
or
jno
std
mov
sahf
mov
scas
and
sub
out
test
test
mov
sbb
xchg
xor
test
push
pop
inc
mov
wrmsr
xchg
out
sbb
and
outsl
cmpsb
jns
and
push
cmc
adcl
jle
xor
lret
add
pop
out
loop
push
push
cmc
xor
push
mov
xor
pcmpeqw
fmulp
shl
jge
aam
into
push
rclb
jle
int
and
pop
sub
enter
jg
push
icebp
cmp
cli
and
push
imul
int
inc
jp
push
fidivs
outsl
push
and
es
inc
xchg
fistl
mov
push
test
xor
push
xor
sub
xorb
fcmove
hlt
outsl
jp
sahf
add
fldt
pop
popf
inc
test
rolb
jg
mov
ja
push
jne
lods
test
mov
pop
adc
subl
test
les
outsl
in
mov
jo
stos
insb
and
mov
xchg
jns
cltd
sbb
cmp
mov
es
rcrl
iret
xor
insl
dec
xor
dec
sbb
mov
in
sbb
xchg
add
push
ret
dec
push
ret
add
pop
fnstsw
out
call
mov
xchg
addr16
xchg
push
mov
loop
loop
push
add
cmp
insb
pop
leave
dec
in
popf
rolb
jmp
sbb
mov
inc
loopne
into
js
popa
add
test
mov
add
insb
ja
mov
shl
xor
call
and
lahf
insl
scas
fistl
xlat
pop
lret
add
xchg
push
ljmp
pop
mov
push
scas
shl
jge
stos
dec
int3
mov
mov
outsb
inc
in
jns
inc
jbe
xchg
push
fists
lret
or
inc
sbb
arpl
daa
mov
xlat
and
sbb
xchg
adc
cmp
jecxz
inc
fnsave
psubusw
sub
int3
push
data16
fdivrl
pop
popa
mov
mov
loope
dec
dec
inc
aas
pop
sub
outsb
or
mov
scas
test
subb
pop
rcll
call
sti
addr16
mov
mov
sbb
sub
add
cmp
repnz
in
dec
jne
sub
push
mov
into
int
pushf
gs
scas
jae
mov
adcl
aad
jne
xchg
out
adc
pop
dec
jne
into
xor
es
and
mov
xor
icebp
jl
add
adc
sbb
inc
test
xchg
add
jp
sub
shrb
das
sbb
out
push
les
rcll
addb
mov
sbb
inc
shrl
mov
xchg
std
cmpsl
dec
pop
dec
push
out
mov
popa
cmpb
ret
int3
shl
jae
data16
sub
fwait
inc
dec
cltd
mov
and
pop
in
stos
add
arpl
sti
out
fistl
ja
nop
jl
iret
data16
nop
and
pusha
xchg
add
je
idivb
es
ljmp
xchg
cld
jp
cmp
movaps
mov
aas
addr16
das
dec
add
sarl
sub
mov
xchg
imul
in
repnz
and
idivl
inc
pop
pop
adc
cmp
call
lcall
xchg
dec
incl
and
dec
rolb
mov
push
sub
pusha
push
jp
dec
fsubr
mov
bound
pop
arpl
leave
mov
fwait
shrl
scas
repnz
cmp
jmp
add
dec
shlb
iret
push
stos
dec
aas
insl
in
mov
jno
popa
pop
test
adc
repz
jns
xchg
pop
or
mov
dec
push
mov
adc
nop
loope
lcall
popf
sarb
add
sbb
rcl
pusha
push
push
xor
sub
xchg
icebp
sahf
sub
lret
xchg
cmp
lret
push
adc
fsub
scas
shrl
jmp
out
imul
mov
jmp
push
cmp
push
call
push
sbb
and
stos
imul
and
roll
movsl
mov
cmp
pop
cmp
ss
test
push
incl
data16
push
hlt
push
lods
leave
fildll
jns
jmp
outsl
out
fidivrl
cld
ret
lret
insb
add
cltd
cmp
xlat
in
xchg
lcall
or
pop
out
fs
out
lret
imul
jmp
sbbl
repz
and
pop
xor
add
gs
fcomi
cmp
add
outsb
mov
cmp
ret
xor
xor
dec
mov
std
fdivr
test
lahf
out
cs
push
pop
jne
mov
and
sarb
mov
push
subl
call
pop
xchg
repnz
fildll
mov
rorl
xor
aas
push
nop
or
int
jmp
adc
xlat
insb
out
testl
clc
xchg
lods
push
cs
pop
xlat
loope
cwtl
jg
mov
sti
cmp
jmp
dec
push
es
cs
xchg
or
mov
outsl
pop
in
jae
pop
and
ret
push
js
aam
inc
scas
jmp
push
xor
enter
add
and
ds
mov
xor
push
outsb
ret
xchg
mov
loopne
push
fisubrs
jg
orb
enter
mov
es
rcrl
mov
mov
mov
fmulp
mov
xor
mov
sbb
xor
add
jnp
fldt
sar
dec
cmp
das
jo
into
ljmp
sbb
dec
loopne
inc
or
movsl
std
or
in
dec
leave
dec
mov
or
and
pop
outsl
sub
rcll
sub
or
sbb
cmpsb
push
pop
in
les
ret
outsb
mov
in
adc
push
mov
jge
pop
xchg
cmp
loopne
xchg
dec
clc
dec
pop
outsb
loopne
lahf
push
ret
aad
cld
lcall
mov
or
sbb
inc
mov
cmpsl
push
aaa
ja
movsb
pop
ficompl
pop
insb
cltd
in
out
push
dec
repz
push
cmpsb
cs
xchg
pop
push
arpl
push
lahf
clc
pop
int
shlb
sbb
or
fisttps
sub
sub
push
xchg
cld
popf
ror
pushf
and
cmp
movsb
sbb
mov
jp
push
xchg
sahf
iret
je
xchg
mov
pop
insb
jge
or
dec
jle
ds
dec
xchg
popf
test
je
cmp
ret
cli
iret
call
mov
cmp
sbb
pop
sub
dec
ljmp
fldenv
xchg
mov
mov
add
out
fwait
jb
cmp
cmp
push
enter
sbb
lds
jne
fidivrl
cmp
gs
jmp
dec
int3
and
mov
into
sti
push
mov
jb
fisttps
inc
ret
orb
push
pop
aas
adc
pop
jb
dec
sbb
pop
xor
mov
push
enter
xor
xor
mov
lcall
repz
xchg
mov
cmp
cwtl
sub
enter
movsb
aas
pop
inc
and
and
insb
ss
sub
into
and
jb
pop
stos
cmpsl
mov
dec
sbb
sahf
orl
jns
in
loop
mov
les
pop
scas
sub
or
jne
dec
jmp
mov
clc
stos
cmc
adc
push
leave
inc
jnp
mov
xchg
jo
mov
in
pop
pop
and
es
sbb
sbbb
sbb
popa
push
scas
mov
sub
push
xor
arpl
imul
addr16
shll
jno
popf
mov
mov
out
and
pop
movntq
pusha
xor
icebp
test
test
js
out
fcompl
rcr
ret
cmpsb
dec
mov
aam
out
cmc
xchg
push
dec
shrl
push
and
xchg
mov
dec
cwtl
insb
test
pop
roll
mov
leave
out
mov
dec
cltd
shrb
outsl
inc
xor
mov
rcrb
dec
jo
insb
es
cmp
add
sbb
aas
mov
test
push
incl
add
mov
nop
gs
jmp
cmp
xor
add
add
in
roll
dec
mov
cwtl
out
mov
or
imul
xchg
idivl
sub
inc
inc
test
push
adc
inc
iret
sub
or
shl
arpl
loope
mov
jae
cmp
out
icebp
adc
xlat
cmp
and
insl
mov
in
adc
fs
lds
mov
mov
lret
mov
in
enter
mov
push
mov
inc
ret
sbb
fsts
filds
lahf
in
xchg
jnp
pop
cmp
lock
pop
and
sbb
pop
jbe
jmp
xor
hlt
cmp
or
jo
jne
xor
data16
lea
pushf
or
dec
test
xchg
mov
lock
aas
popf
push
mulb
jns
pop
dec
add
xchg
sti
shlb
mov
jne
mov
xchg
aam
orb
test
pop
lea
pop
add
insb
mov
int3
fstpt
and
lods
and
xchg
loope
popa
addr16
dec
hlt
mov
mov
sahf
inc
lret
mov
ss
stc
mov
jb
push
add
imul
sbb
dec
es
jno
sar
adc
loop
icebp
adc
shlb
test
shrl
outsb
mov
jne
insl
test
pop
jg
or
push
out
inc
js
sbb
adc
dec
push
inc
lahf
and
scas
mov
dec
repnz
mov
es
cmpsb
xchg
aas
fs
cmp
clc
or
xchg
scas
ds
xchg
fwait
dec
lods
pop
mov
fcom
fs
sbb
inc
sbb
lret
sub
imul
lods
aad
je
enter
es
mov
into
fld
je
cmp
aas
sbb
icebp
jmp
rcrb
imul
iret
inc
xlat
xor
fbld
xor
pop
and
movsl
aas
cmp
sbb
pop
cmpsl
sbb
mov
cli
je
divb
fnstsw
lret
push
nop
xor
jae
das
arpl
dec
mov
pop
loop
ret
bound
cmp
dec
mov
aas
xor
scas
js
loop
rcl
popf
cmp
movsb
mov
or
cmp
int
fldcw
test
fiaddl
mov
jle
xchg
ret
xor
pop
imul
xchg
mov
rorl
cltd
andb
pop
lahf
adc
nop
out
xor
mov
bound
sahf
xchg
leave
ja
rcrl
popa
xlat
or
mov
add
ret
jns
aam
cmp
insl
inc
scas
sub
dec
mov
cs
sbb
popa
inc
xchg
push
in
cmp
pop
aad
jno
sub
or
ja
and
fnstsw
inc
fcomps
push
inc
add
sbb
and
push
ja
cltd
dec
push
loop
lds
lock
pop
test
cmp
fisttpll
iret
cld
dec
adc
in
loope
sar
pushf
mov
inc
lods
mov
sub
jp
xchg
sbb
pop
enter
mov
out
movsl
and
or
in
adc
add
inc
lret
jb
jns
mov
icebp
sti
popa
push
pop
into
mov
cli
inc
and
imul
pop
mov
std
xor
add
push
jb
inc
mov
ficompl
pop
leave
dec
out
xor
push
xchg
leave
cltd
mulb
jo
xor
out
pop
dec
int
inc
xchg
xchg
mov
mov
mov
inc
scas
movsb
into
sbb
mov
mov
mov
xchg
dec
cmp
xlat
mov
dec
mov
mov
push
xchg
out
xchg
mov
popa
decl
cltd
out
inc
ret
mov
xchg
sbb
push
xchg
insl
dec
lock
jle
rcrb
es
pop
mov
andl
mov
loope
xchg
sbb
cmpsb
cmc
addb
or
inc
inc
xchg
out
es
jo
xchg
inc
sub
sub
and
cli
faddp
sbb
lods
adc
sub
adc
jno
jg
stc
pop
push
scas
lods
sar
sbbb
pushf
sub
and
mov
adc
adc
jge
pop
js
pop
push
idivl
repnz
or
mov
dec
imul
popf
fstl
fisubl
mov
pusha
or
lock
and
fiadds
in
mov
adc
pop
mov
mov
sub
dec
pushf
mov
cmp
mov
cmp
pop
lret
pop
inc
andl
mov
and
lret
pop
in
push
movsb
stos
push
or
in
popa
nop
test
repz
das
ja
std
push
loop
adc
sbbb
sbbb
adc
mov
inc
ja
rcrb
rol
xchg
movsl
xor
subl
push
fimull
stc
add
subl
out
lcall
and
sti
aas
sbb
call
mov
sbb
lret
mov
cmp
inc
push
xchg
pop
sbb
push
and
and
jmp
mov
pop
mov
cli
inc
or
push
jo
lds
cwtl
cmp
sub
daa
inc
sbb
pop
push
push
imul
fs
xor
lods
pushf
inc
mov
push
mov
scas
xchg
xchg
xchg
in
jns
pop
inc
add
sub
sbb
out
loope
inc
mov
add
adcb
lahf
jmp
fwait
mov
and
lret
ljmp
insb
cmpsl
dec
mov
enter
jae
cs
mov
fwait
jge
jmp
jnp
scas
dec
sub
inc
std
mov
call
fidivs
scas
ljmp
testl
addl
mov
psrad
mov
mov
mov
mov
into
inc
jl
mulb
push
aas
ds
inc
xor
sub
cmp
mov
int
nop/reserved
inc
jge
test
in
fs
test
and
fwait
mov
ljmp
lods
pop
pop
imul
jne
outsl
lds
cmp
mov
repnz
cmp
lea
mov
jg
adc
pop
dec
gs
lods
xor
cmpsb
mov
add
adc
xor
nop
ja
mov
sbb
jnp
add
shr
insl
int3
push
pop
mov
push
adc
or
ja
inc
jp
clc
dec
movsl
pop
xorl
mov
sub
mov
pop
test
mov
aam
sahf
insl
fdivp
inc
cmpsb
test
test
cmp
addr16
xchg
in
mov
aam
out
mov
or
jae
ffree
rcl
int3
xchg
shrb
std
clc
jb
decb
mov
into
shl
mov
cmp
pop
and
inc
inc
push
std
dec
fildl
and
sub
jge
inc
out
adc
mov
inc
daa
in
jne
add
notl
arpl
xor
xor
pusha
fsubs
mov
fisubrs
add
fcmovne
cmp
cltd
jo
ficoml
inc
mov
das
ja
adc
iret
aas
sbb
loopne
inc
xchg
inc
sbb
add
test
hlt
into
cli
ja
bound
mov
xor
popa
lock
adc
pushf
sahf
dec
cmpsb
mov
jae
andb
mov
sbb
mov
pusha
iret
mov
int3
movsb
test
pop
imul
and
sbb
arpl
or
add
add
pop
daa
adc
rorl
mov
push
into
lock
js
xor
stos
push
mov
fdivrs
mov
jp
inc
adc
mov
jge
dec
mov
stos
dec
mov
inc
mov
sub
stos
mov
inc
xchg
cmp
pop
mov
ljmp
mov
daa
dec
xchg
jle
and
jbe
scas
aam
lret
shlb
les
lcall
dec
cmc
xor
dec
push
jecxz
imul
xchg
adc
mov
mov
addr16
jno
push
mov
pop
jp
sbb
dec
xchg
aad
adc
jecxz
rorb
cltd
xor
adc
sbb
cs
mov
xor
mov
ror
and
in
cmp
mov
bound
sbb
push
adc
aad
popf
addl
pop
dec
repz
adc
negb
jl
pop
pop
sbb
or
fwait
lcall
xchg
mov
xchg
fcmovnu
cmpsb
imul
push
hlt
push
xor
popa
xor
pop
mov
pop
mov
jmp
cmp
mov
add
fsubl
mov
xchg
insl
dec
or
fldt
and
mov
clc
ss
popf
xchg
lret
mov
aaa
enter
jmp
push
dec
cmc
cltd
jmp
mov
loopne
mov
inc
out
out
lret
sbb
addr16
or
lock
or
mulb
and
lds
jb
push
push
ljmp
cmp
and
xchg
insb
in
dec
and
insl
jbe
jne
sbb
out
push
or
int3
test
mov
pop
lahf
enter
and
inc
mov
in
pop
inc
mov
mov
or
jno
pand
pop
std
xchg
daa
cmpsb
sbb
or
or
and
das
mov
int
mov
scas
xlat
push
ret
rolb
gs
pop
and
ja
rcr
jns
and
bound
pop
sbb
or
push
cmc
pop
inc
fisttpll
test
push
push
cld
push
stos
cmpsb
clc
out
call
lahf
sti
inc
add
mov
push
cmp
call
out
cmpsl
xorb
call
sub
push
sub
or
mov
dec
adc
cmp
mov
es
mov
lods
pusha
loopne
dec
pop
pop
pop
rorb
incb
je
push
outsl
xor
fs
and
mov
jb
add
sahf
xchg
add
neg
test
aaa
push
call
push
push
in
std
mov
sub
add
and
test
dec
int3
inc
movsb
jnp
notb
mov
enter
testb
lea
inc
in
adc
les
inc
outsb
and
std
jmp
nop
mov
jmp
inc
in
sbb
icebp
pop
clc
mov
sub
mov
xchg
out
addr16
add
or
test
push
inc
repz
popf
das
ret
shlb
sbb
loop
cmpsb
and
call
cmp
or
lret
nop
cwtl
std
scas
xor
mov
push
clc
hlt
xorl
aam
dec
lods
mov
cwtl
sti
in
adc
mov
inc
sbb
lds
ds
in
pop
sbb
cwtl
cmp
ljmp
xor
pusha
mov
out
sbbl
enter
push
loope
push
adc
hlt
xchg
pop
sbb
mov
clc
lahf
jg
loop
imul
adc
add
bound
nop
ja
lahf
pop
pop
repnz
sub
dec
ds
add
add
xchg
mov
outsl
lds
scas
aad
and
dec
xor
inc
cli
jl
fsubrl
and
dec
cmp
frstor
push
add
xor
addr16
cmp
cmpl
orl
push
in
or
jmp
push
dec
mov
pushf
pop
fsub
adc
mov
pusha
js
mov
add
mov
hlt
arpl
add
ficomps
xlat
add
inc
rorl
inc
in
cmp
lods
jle
sahf
cmp
das
jae
enter
popa
leave
add
pop
pop
push
inc
outsb
push
out
stc
sub
cltd
xor
in
sti
push
test
sub
rcrb
lock
adc
cwtl
pop
lahf
mov
rcrl
imul
pop
push
stos
add
fs
sti
mov
leave
fsubp
lcall
inc
stc
pushf
or
cltd
int
and
mov
pop
das
pusha
jecxz
cmp
jp
test
lahf
cs
lds
es
push
ret
sub
jbe
je
inc
adc
xor
pop
jno
outsl
xchg
pop
fld
adc
pop
jae
nop
dec
cmc
inc
repnz
ret
ss
sbb
pop
pop
mov
daa
xchg
push
mov
out
ret
sbb
pop
mov
pusha
jne
in
shll
aas
ja
mov
add
and
push
mov
or
sub
add
addr16
outsl
mov
mov
pop
xchg
push
nop
jmp
stos
push
fcmovnb
cmp
mov
dec
jae
and
or
inc
testl
lods
pop
or
pop
jle
xchg
push
dec
out
lock
ljmp
xchg
or
adc
outsb
repz
sub
cld
push
daa
mov
js
je
pop
aaa
jnp
out
std
imul
cs
mov
jle
push
sbbb
lds
adc
pop
push
stc
pop
mov
jmp
movsb
pushf
lcall
sbb
icebp
mov
inc
mov
pop
push
and
cmp
ficomps
sbb
pop
sub
xchg
hlt
sub
lret
hlt
jo
and
lret
pop
hlt
imul
out
sahf
cmp
in
faddl
mov
xchg
mov
and
cmp
and
inc
out
dec
jg
push
bound
push
mov
lds
sbb
xor
sub
repnz
aad
jmp
dec
fnstcw
sbb
lahf
jne
add
xchg
xor
outsl
dec
pop
cmp
push
iret
lods
pop
ret
xchg
ja
js
mov
add
out
jns
jo
mov
pop
push
add
xchg
loopne
sbb
inc
daa
sub
fstl
push
or
pop
dec
push
mov
jb
mov
mov
popa
pop
xor
push
jmp
test
or
aaa
jp
mov
test
lcall
jmp
or
and
out
push
popf
xchg
iret
mov
stc
bound
and
cmc
push
xor
and
data16
push
fwait
sbb
mov
sub
flds
sub
pushf
mov
push
arpl
xchg
mov
dec
mov
push
fs
sbb
ljmp
lods
loop
fcompl
repz
into
push
mov
mov
mov
cltd
push
fmul
mov
add
pop
pop
ss
jbe
add
jbe
pop
pop
sbb
imul
dec
xchg
out
and
hlt
lret
sbb
mov
pop
mov
adc
test
pop
andb
push
lock
lock
das
fsubrp
test
lret
dec
xchg
imul
int
out
insb
loop
push
mov
outsb
movsw
jecxz
add
fmull
push
push
push
jp
push
xor
jecxz
inc
add
stos
jecxz
mov
dec
add
mov
mov
pusha
in
xchg
sbb
xor
sbb
scas
inc
pop
ljmp
push
aad
and
mov
and
sub
sahf
leave
add
pop
xor
iret
xlat
outsl
mov
sub
repnz
pop
or
sbb
lods
sbbb
fisttpll
cmp
pushf
iret
inc
xchg
xchg
xchg
sbb
out
pop
or
sbb
fistpll
mov
or
jnp
jo
popa
into
imul
adc
roll
push
sahf
sbb
mov
out
lods
cmp
mov
mov
pop
push
jns
push
arpl
lods
inc
push
mov
mov
fisttps
cmp
cmp
push
addr16
add
std
and
scas
push
xchg
aam
icebp
sub
int3
lods
mov
cmpsl
adc
xor
out
hlt
xor
cmp
aam
add
jl
inc
rcrb
stos
arpl
imul
fnsave
rcrb
mov
mov
mov
ret
xlat
cmp
mov
cltd
jae
gs
jle
adc
nop
lcall
nop
pushf
dec
outsl
inc
ljmp
dec
push
int
je
pop
mov
and
sarl
push
das
sbb
cltd
cmp
push
or
insl
push
addb
cmp
enter
pop
adc
push
jo
dec
cmp
cltd
dec
mov
cmp
sub
std
movsb
fldenv
xlat
sahf
mov
xchg
and
push
aaa
push
subb
je
outsl
lds
jg
pop
daa
push
cltd
xchg
push
mov
ss
mov
xor
or
add
mov
xchg
stos
cmp
in
mov
mov
out
mov
push
repz
in
lahf
insb
jg
xbegin
add
push
xlat
jno
sbb
outsl
mov
filds
inc
xchg
jb
xor
sub
xor
add
hlt
lcall
cmp
sbb
jg
cmp
repz
ds
das
pop
jo
inc
dec
mov
cs
in
jne
aad
lret
push
jne
in
lret
mov
add
dec
sarl
cmpsb
iret
ret
mov
mov
push
xchg
jp
hlt
std
loopne
dec
mov
pop
stos
leave
testl
test
lret
inc
and
or
mov
or
or
aam
cmp
mov
fs
stos
bound
ja
cs
mov
int
or
push
pop
dec
inc
add
ljmp
mov
insl
add
mov
add
mov
cmc
in
outsl
pop
jle
add
repnz
jmp
lret
shll
cmc
andl
dec
pop
cmp
add
jo
cmp
test
addl
push
stos
inc
cmpsb
dec
fwait
dec
push
mov
xorb
push
jb
push
or
pop
sub
xor
cli
lods
mov
inc
loopne
fs
or
in
sbb
mov
cmp
shrb
mov
push
jle
sbb
push
push
mov
jnp
imul
sub
test
mov
jmp
aas
xchg
xor
pop
sub
popf
cmp
dec
cli
and
push
and
inc
repz
mov
std
dec
mov
out
or
lcall
jge
inc
xor
pop
cltd
jo
out
insl
push
xor
cmp
adc
xor
push
fisubs
mov
mov
mov
pop
push
jb
insb
add
sbb
ds
inc
fnstcw
cmp
lcall
xor
mov
and
les
setl
pushf
xor
in
leave
jmp
test
xor
and
int3
adc
xchg
jne
xchg
popl
movsl
imul
pop
mov
into
pop
push
lcall
xchg
imul
mov
or
sti
popw
jbe
test
ss
xchg
jo
test
pop
mov
sbb
jmp
pop
cmp
loop
cmp
loopne
mov
rol
pop
icebp
ja
mov
mov
or
cmp
fistpll
add
xchg
fsts
rep
or
xor
cmp
pop
or
fldt
and
xor
shlb
dec
sahf
or
push
jae
cltd
test
inc
int
mov
mov
stos
movsb
mov
adc
pop
mov
mov
daa
std
into
xor
pop
inc
loope
dec
dec
inc
in
pushf
dec
dec
xor
out
lock
arpl
out
mov
popa
sub
loope
sub
or
sti
cwtl
lods
icebp
stos
mov
js
sub
dec
repz
cmp
xor
adc
lret
fidivrl
jo
fwait
and
push
les
stos
sbb
mov
jge
xor
xchg
das
sbb
lcall
sahf
stos
pop
loopne
popf
push
aad
stos
mov
sbb
scas
movl
mov
cmp
int
shrb
adc
into
cmp
stc
fdivrs
push
xlat
mov
cmp
mov
aaa
int3
lret
sbbb
push
test
insl
push
dec
pop
aam
int
lret
hlt
xor
ja
add
daa
mov
inc
lods
sub
xor
adc
fstl
mov
ljmp
inc
inc
out
loopne
lods
loopne
insl
jge
adc
mov
dec
lods
cs
and
daa
mov
lea
dec
rcrb
adc
in
outsb
std
xchg
and
out
movsl
and
pop
in
jnp
mov
jle
jp
sub
scas
and
in
fwait
es
push
jmp
loop
ret
xchg
jnp
pop
popl
push
and
dec
sbb
insl
subl
or
mov
cmp
pop
pusha
inc
cmp
jno
pop
cmp
xor
cwtl
jne
flds
jl
jnp
out
xor
cmpsl
cmpsb
xor
dec
cmpl
xchg
fisttpl
stc
dec
add
cli
or
push
into
sub
dec
lods
nop
or
push
cltd
out
int3
lcall
xor
xchg
repz
push
in
and
add
cmp
dec
leave
cltd
das
pop
mov
jg
adc
jnp
adc
sbb
push
sbb
lock
movsb
pop
ror
jbe
inc
mov
adc
mov
mov
inc
and
mov
push
mov
test
into
repnz
dec
test
icebp
mov
jns
sbb
mov
jno
mov
lahf
push
and
push
lahf
fwait
xor
jl
lods
fstpl
fiaddl
xor
push
in
sub
out
or
mov
cmp
mov
or
cmpb
popf
or
xor
xchg
pop
test
sub
cmc
ret
mov
inc
popa
or
and
cmp
jae
lcall
cli
test
into
xchg
pop
pop
iret
mov
mov
mov
jge
loope
xchg
mov
aas
mov
jmp
inc
je
pushf
pushf
xor
mov
pushf
mov
cmp
push
mov
sub
outsl
ss
jmp
pop
outsl
cmpsb
and
cmpsb
neg
movsl
popa
xchg
gs
jle
mov
rorl
bnd
jne
jo
push
xor
loopne
addb
xor
iret
movsl
aaa
stos
sub
jl
xchg
shlb
inc
and
arpl
mov
inc
repnz
jne
and
mov
cmc
push
xor
xor
hlt
push
and
lahf
inc
and
idivb
cmpsb
xor
mov
into
jmp
sub
or
fnsave
push
add
dec
sub
pop
adc
xor
jmp
pop
xchg
flds
push
mov
pop
popa
fisttpll
add
sbb
jecxz
enter
xchg
cwtl
push
cmp
sahf
sub
hlt
loopne
movsb
mov
sbb
add
ret
or
push
jmp
jbe
shr
dec
adc
in
loopne
xchg
push
enter
add
xor
aam
sub
adc
jecxz
mov
insb
sub
xor
mov
push
fimull
push
xor
xor
pop
notl
mov
cmp
loop
pushf
inc
dec
fiaddl
in
sub
xchg
mov
add
enter
jecxz
ficoms
outsb
jp
ja
push
sbb
pop
sbb
dec
xchg
and
xlat
sub
aam
dec
pop
pop
push
adc
mov
jno
mov
or
daa
out
pop
sub
cmpsl
test
mov
jbe
lds
ljmp
dec
sbb
ret
sub
clc
lods
push
sahf
xchg
push
xchg
mov
ja
out
jnp
cmp
cmc
ret
cmpb
sti
dec
jb
divb
js
add
push
sbb
adc
cwtl
fadds
outsb
push
fwait
mov
dec
insb
jnp
pop
xchg
outsl
jo
inc
mov
and
mov
sarb
xchg
js
in
mov
pop
pop
mov
rcrl
mov
in
jns
stc
pop
iret
cli
push
jg
repz
cwtl
dec
out
pop
xlat
ljmp
fisubl
mov
pop
mov
loop
fbstp
dec
jmp
insb
mov
cwtl
mov
or
xlat
sbb
mov
xor
test
int3
mov
out
cli
push
jne
pop
repz
jnp
push
insl
movsl
movsb
outsb
enter
jp
add
sarb
loopne
cmc
mov
jae
adc
pop
out
jmp
and
aam
mov
mov
sbb
inc
fdivs
in
push
stc
pushf
icebp
sbb
bound
xchg
add
push
push
fistl
xchg
dec
push
cwtl
in
cmp
mov
jecxz
scas
movsl
clc
dec
js
int3
mov
in
out
daa
sbb
jnp
push
in
push
lods
fs
sbb
fstpt
lahf
fisttps
ret
dec
out
xchg
lods
movsb
es
jae
lods
cmp
or
inc
dec
pop
mov
stos
mov
daa
out
out
or
xor
mov
or
fs
std
fldt
or
pop
js
push
gs
cltd
arpl
cmc
and
sub
aad
jg
inc
sbb
stos
adc
push
mov
jae
out
sbb
lods
or
scas
or
mov
mov
lret
sub
push
clc
scas
shll
push
adc
scas
jnp
mov
arpl
ss
fildll
mov
out
rol
push
add
push
cs
xor
jg
cmp
push
fcomps
adc
push
jbe
xchg
std
ljmp
in
mov
xchg
mov
xchg
mov
aas
scas
push
dec
mov
call
pop
add
cmpsl
insl
les
jge
adc
loope
shl
aaa
and
mov
stos
fadd
loopne
rorb
lahf
movl
es
int
mov
fidivl
repz
jp
pop
mov
mov
icebp
or
loope
mov
imul
sub
lret
push
pusha
ljmp
cmp
out
cmp
and
xor
mov
mov
jg
mov
mov
push
sbb
ret
sub
nop
outsl
cli
xor
jle
fwait
xor
sbb
sub
loopne
cmp
loop
repnz
cmp
jno
xchg
leave
fldl
push
fisubs
int3
dec
jl
jbe
int
jp
add
dec
ret
dec
hlt
fwait
mov
dec
push
daa
les
nop
addr16
push
push
push
mov
adc
dec
xor
movsb
xchg
sub
mov
ds
pop
cmp
xchg
arpl
fs
sub
movsb
int3
mov
fnstcw
pop
mov
into
push
add
call
int
sub
mov
cmp
icebp
and
pop
or
and
int
pop
int
loop
call
jle
or
imul
xchg
fwait
int
add
es
push
pop
mov
cmp
mov
out
xchg
lds
and
push
sarb
scas
jge
iret
loope
push
adc
cmc
imul
mov
hlt
and
add
stc
mov
mov
inc
bound
cmpb
in
pop
hlt
clc
sub
mov
inc
fmuls
arpl
out
nop
pop
mov
cmp
cmpsb
icebp
lock
xchg
mov
mov
rcrl
xor
cmp
aaa
repnz
in
cltd
outsb
mov
jno
nop
iret
stos
std
and
mov
cli
stos
lock
popf
je
push
mov
xor
sub
dec
ja
sub
jae
xchg
xchg
sbb
jnp
mov
mull
inc
add
stos
iret
stc
inc
inc
pop
mov
cmp
insl
jne
rclb
and
mov
mov
sub
imul
test
je
dec
xchg
xor
lods
movsl
pop
push
into
lret
enter
out
pop
sbb
repz
loop
jne
xchg
ds
pushf
sub
loop
hlt
lods
xor
aas
mov
cmp
dec
mov
cmp
and
stc
int3
faddl
enter
test
mov
xchg
out
jo
mov
mov
add
loop
lcall
add
pop
cwtl
jge
xor
xchg
daa
sbb
in
cmp
mov
mov
leave
sub
mov
mov
jns
sbb
mov
mov
sub
movsb
adc
push
imul
stos
ljmp
lods
mov
cbtw
jle
inc
adc
jne
pop
test
xlat
enter
add
mov
loop
push
cmp
adcl
adc
push
call
and
adc
adc
shll
pop
inc
iret
fldt
stos
mov
negl
mov
stos
mov
sbb
mov
dec
push
pop
or
pop
mov
fisttpll
jge
mov
adc
mov
mov
push
hlt
inc
out
add
mov
test
shr
add
xor
test
cmp
lock
clc
in
lret
dec
rcrb
adc
push
xor
jmp
iret
arpl
mov
add
cmp
inc
xchg
ficompl
idiv
or
pop
dec
cmc
sub
data16
dec
and
mov
jo
jmp
cli
or
mov
adc
in
sbb
xor
adc
cmp
cmp
loope
fsts
xchg
lods
iret
testl
push
stos
mov
mov
jo
adc
add
psubusw
popa
mov
dec
push
sahf
adc
orl
xchg
scas
dec
popl
jmp
mov
inc
icebp
icebp
fldt
mov
pop
cmp
cmp
jnp
mov
scas
jb
jne
cmp
ss
mov
push
xchg
jnp
jbe
sti
add
jle
popf
dec
mov
subl
and
mov
frstor
jb
pop
lods
leave
jbe
or
mov
cmp
xor
stos
mov
push
aam
mov
cs
arpl
jge
ret
sahf
sub
jbe
cmp
dec
test
pop
loope
and
lods
and
inc
cmp
mov
sub
lret
push
stos
mov
paddq
mov
stos
shll
das
mov
test
int3
or
mov
push
out
mov
adc
adc
adc
and
sbb
cmp
fs
sub
jmp
cmp
pop
cmp
sbb
scas
lret
call
adc
add
cmc
dec
movsb
sub
test
jmp
mov
lret
add
out
jo
cmpsl
in
pop
fcmovb
or
or
sbb
xchg
fsubrl
pop
push
push
mov
pop
loop
jle
shr
shll
push
rcll
movsl
push
adc
push
mov
cli
mov
pop
inc
sahf
hlt
or
xchg
and
in
dec
lcall
cmpsl
scas
popa
inc
mov
lock
pavgb
lds
sub
xchg
out
popf
cli
in
cmpsb
shll
jo
push
and
xor
inc
xor
xor
mov
cmpsb
sbb
or
dec
sti
in
out
das
add
imul
pop
mov
inc
test
fwait
push
cmp
enter
dec
test
push
dec
inc
mov
and
notb
xor
push
adc
adcl
mov
cmp
nop
iret
stos
mov
jne
aaa
adc
in
jg
add
pop
cmp
cmc
jl
sub
gs
jle
cmp
or
add
inc
push
push
daa
ret
jecxz
cmp
sbb
add
add
ljmp
fldl
aaa
push
fildll
jae
pop
push
adc
mov
or
cmp
push
fs
pop
rcrl
cltd
mov
loope
insb
jle
or
and
fcompl
ja
repnz
jbe
pop
cmp
sbbl
enter
insb
orb
push
sbb
lahf
jno
rcll
jo
xchg
cmpsl
jb
or
mov
xchg
push
lret
sbb
jge
lods
aaa
out
pop
insl
jmp
or
cwtl
notb
cmp
push
lahf
adc
in
inc
sbb
ss
mov
int
mov
sahf
adc
shrl
cmp
and
movsl
nop
push
mov
nop
mov
addr16
data16
in
xor
mov
adc
test
push
fldt
sbb
data16
dec
add
mov
int
ret
xchg
bound
movaps
sbb
jne
pop
stc
test
lods
out
lods
dec
aaa
mov
xchg
rorl
and
and
xor
sti
pmaxub
scas
hlt
daa
int
loope
es
pop
rcrb
pop
add
push
push
inc
push
fsts
js
test
mov
cmp
lods
mov
or
dec
je
in
mov
int3
outsl
lret
scas
pop
mov
fildll
sub
cltd
sub
inc
lock
negl
aad
lods
imul
sbb
add
and
imul
repnz
bound
mov
xchg
dec
insb
leave
pop
push
inc
fmuls
inc
pusha
loopne
add
mov
in
or
or
das
fcmovne
xlat
or
xchg
lcall
push
aas
cmpsl
bound
and
mov
icebp
je
sbb
xchg
or
lret
dec
dec
sub
lahf
sub
pusha
dec
jmp
insl
sbb
test
mov
push
inc
lahf
cmpsl
jmp
dec
mov
ljmp
jp
popa
es
mov
xchg
inc
test
dec
mov
jmp
mov
jno
add
popa
repnz
mov
leave
sbbl
sbb
inc
in
test
xchg
nop
mov
sti
add
mov
sahf
xchg
in
jle
rol
shlb
dec
inc
test
cli
push
movsl
sub
ret
lock
hlt
repz
cmp
cmp
mov
or
jecxz
inc
int3
rorb
pusha
in
sbb
pop
adc
adc
lea
mov
mov
cwtl
pop
mov
rol
sarl
sub
pop
fistps
mov
jb
jb
dec
inc
mov
imul
adc
mov
mov
outsb
mov
and
int3
xlat
xor
nop
stc
xchg
lds
lret
fsubs
sub
lahf
xlat
inc
cmpsb
hlt
call
loope
push
outsb
push
sti
and
in
and
into
aad
outsb
mov
sub
das
ja
rcrb
adc
cmp
movsb
mov
out
lds
pop
push
and
aad
lcall
mov
add
adc
loop
xor
sti
mov
lret
push
xchg
inc
mov
cmp
cmpsb
add
xchg
jmp
jle
inc
cmpsb
mov
jnp
pop
cmp
ret
pop
or
pop
mov
adc
imul
data16
jle
movsl
icebp
loope
or
lds
xchg
cmp
sbb
xchg
cs
loop
jne
add
push
dec
mov
add
bsf
popf
xchg
inc
and
lret
or
or
jno
dec
pop
scas
lods
fchs
dec
mov
jae
retw
adc
fs
div
inc
stc
scas
sbb
shll
cld
mov
adc
js
cwtl
mov
and
sbb
or
inc
sub
push
jp
jnp
hlt
mov
mov
mov
outsb
in
jg
mov
mov
rcl
scas
dec
dec
cwtl
jmp
mov
mov
popa
sar
fwait
movsl
sbb
add
sbb
movsl
inc
lcall
in
rolb
adc
or
arpl
sub
cs
mov
sub
ljmp
xor
icebp
adc
jbe
jne
cmc
mov
sti
stos
insl
or
mov
fsin
push
sub
movsb
je
cltd
sub
inc
inc
jno
pop
lock
mov
xchg
lds
mov
pushf
dec
adc
aaa
add
repnz
lret
sbbb
lret
jae
pcmpeqd
jle
xchg
jecxz
inc
push
or
test
lcall
jbe
or
mov
mov
inc
xor
loopne
pushf
mov
lea
shll
enter
add
and
mov
xchg
lret
mov
out
das
bound
xchg
in
mov
xor
outsl
fs
movb
enter
and
mov
add
cli
xorb
sbb
out
xor
test
movsb
aam
shl
out
in
sbb
shll
fbld
push
int3
jl
outsl
pop
sub
cwtl
sbb
test
aas
push
nopl
xchg
push
sub
cmp
sub
pop
mov
pop
push
icebp
dec
in
adc
pop
aaa
imul
mov
cmp
rcrl
and
jns
imul
jg
mov
insl
sub
and
adcl
dec
push
xchg
sub
jmp
adc
outsl
scas
pop
jno
fimuls
push
lret
inc
int
push
mov
and
sub
imul
fdiv
sbb
pop
adc
inc
cs
mov
cmpsl
inc
pop
sub
aas
jg
dec
add
cmp
adc
xchg
sub
in
ss
movsb
pop
enter
adc
jg
xor
ss
insb
aam
dec
or
inc
enter
jmp
dec
cwtl
jnp
mov
add
in
cmc
loope
ja
test
lcall
lock
or
jmp
jg
or
gs
mov
call
fidivs
test
pop
popa
push
test
insl
cs
adc
mov
jbe
adc
dec
cs
mov
fmulp
test
jb
dec
leave
rcl
lcall
mov
sub
dec
inc
test
sti
jle
xchg
cmc
ret
sub
scas
xchg
test
xor
fstl
test
out
shl
es
insl
xchg
in
loope
pusha
and
imul
fcoms
fmuls
dec
data16
int3
icebp
fnstcw
mov
adcl
mov
jp
or
test
idiv
in
jns
cltd
xor
out
popa
add
mov
xor
in
adc
andb
ror
enter
and
sub
push
and
push
push
out
xchg
aas
imul
das
add
data16
xchg
lds
xlat
or
jbe
push
or
mov
pusha
pop
stos
inc
xor
xor
shlb
aaa
push
jb
inc
outsb
jbe
jle
rorl
test
dec
out
jge
loopne
add
mov
jnp
ror
sub
add
out
pop
mov
lods
jecxz
dec
inc
push
push
dec
cmpb
xchg
cli
repnz
cmp
adc
add
lock
lcall
mov
outsl
jg
cmp
in
cmpb
out
ret
insl
icebp
cmp
incl
and
push
fldenv
stc
rcll
loop
sub
cmp
gs
stc
cmpsl
cmp
and
or
or
adc
lahf
popl
scas
pop
adc
int3
and
test
inc
jge
sbb
adc
pop
jne
xchg
cmp
xlat
nop
loope,pn
cmp
imul
push
shrb
gs
inc
jl
cmp
test
push
cmp
cmpl
fisubrs
repz
cmp
pop
aad
jb
push
xor
shlb
imul
mov
lea
lret
sti
rcrl
shlb
lcall
xchg
mov
pusha
jle
sub
mov
shlb
mov
es
jns
add
pushf
enter
cli
xchg
sub
jge
xchg
push
imul
pop
ljmpw
lret
jnp
rcl
ret
jg
fldcw
popf
and
add
icebp
push
les
loopne
sbb
stc
shlb
repz
nop
sti
sbb
dec
mov
xlat
xor
xor
cld
inc
aas
xchg
js
inc
aas
or
scas
das
add
js
mov
mov
lahf
aam
and
sub
mov
push
push
pop
out
fdivrs
cmpsl
sbb
int
addb
or
sbb
xorl
mov
xor
iret
scas
and
cmpsl
outsb
insl
pop
push
pop
lahf
pop
addr16
dec
sub
and
push
aas
imul
jmp
imul
icebp
ficoms
lock
out
and
mov
out
rclb
pusha
mov
cld
mov
adc
sbb
ds
outsl
and
scas
scas
mov
out
xor
fstpt
jmp
int
gs
inc
xchg
or
loope
xchg
or
sahf
pop
sub
fimuls
mov
stos
xor
dec
mov
pusha
dec
adc
push
sbb
jecxz
xchg
adc
xchg
push
daa
and
rolb
push
ljmp
aam
and
imul
sub
ds
jo
cmp
cltd
aad
sub
mov
inc
mov
xor
push
mov
in
adc
ja
nop
cmp
and
mov
and
es
ljmp
mov
cmp
dec
pop
dec
mov
and
push
mov
icebp
mov
xlat
nop
pop
in
gs
mov
arpl
xchg
jno
sub
pop
repz
addr16
repz
or
stos
xor
cmp
out
jb
out
pop
clc
in
fidivrs
lods
pop
aas
fistps
lret
in
mov
addr16
xchg
mov
jns
lds
scas
pop
and
pop
pusha
xchg
or
sub
jne
pop
rorb
inc
xchg
popa
cmp
in
mov
push
out
je
sub
sub
sbb
mov
cmp
sahf
loop
insl
jbe
ficomps
cmp
inc
xor
cli
out
mov
gs
push
in
outsb
cmp
js
and
adc
mov
lret
scas
inc
sbb
pop
push
aaa
inc
mov
out
pop
movsl
test
mov
add
das
jns
in
pop
gs
out
sbb
je
sub
mov
adc
inc
fiadds
jmp
fbstp
arpl
sbb
adc
sbb
adc
scas
sbb
xor
jne
pop
int
pop
add
aaa
xabort
icebp
pusha
je
arpl
test
pop
fmuls
sarb
cmp
clc
loope
fst
call
sub
fmuls
lcall
icebp
push
mov
cs
dec
sbb
mov
repnz
push
mov
ds
mov
in
nop
inc
dec
repnz
xor
loope
mov
pushf
sarl
orb
mov
inc
bound
lret
ret
cmp
pusha
pop
aas
inc
loope
scas
mov
fs
cmp
jl
cmp
adc
dec
add
add
in
sbb
pushf
inc
sub
sub
or
in
mov
fwait
dec
sub
std
enter
cmp
lds
push
cltd
cmpsb
pop
testb
jns
enter
cmp
and
int
ja
repnz
push
cmp
inc
or
mov
pusha
movsl
jecxz
adc
sub
mov
mov
xchg
or
xlat
aaa
hlt
push
jns
jecxz
mov
cltd
leave
cmp
rolb
inc
setb
or
rcrb
add
add
push
cmpsl
clc
mov
cld
cmc
sub
lds
jecxz
push
sub
mov
das
dec
sbb
cmp
sub
pop
push
cmp
or
push
in
fmull
mov
sbb
dec
notl
iret
push
ret
xor
xchg
xor
jle
adc
push
push
or
mov
fs
sbb
mov
ss
sahf
fadd
and
lea
dec
dec
mov
sbb
in
mov
mov
mov
sub
pop
sahf
xchg
xchg
in
andl
pusha
inc
shlb
lcall
pop
rclb
lret
repnz
in
sbb
sbb
mov
inc
sti
fimull
sub
dec
mov
aaa
push
pusha
mov
mov
sbb
jnp
imulb
and
dec
xchg
repnz
pmovmskb
das
outsb
jle
mov
mov
dec
arpl
mov
sub
ds
xchg
mov
cwtl
jne
inc
push
mov
rcll
lods
fnstcw
insl
ds
mov
jb
out
xor
pop
sub
or
shrb
enter
and
les
mov
pop
call
nop
in
ljmp
or
das
out
dec
xor
push
push
clc
push
jnp
fmulp
flds
jbe
dec
xchg
lds
bound
xor
std
sub
nop
fcoms
mov
arpl
lret
sub
popf
and
add
push
addr16
test
ljmp
and
push
test
out
adc
cmp
dec
ds
fistps
lret
or
mov
sbb
xacquire
sbb
nop
mov
cli
xchg
mov
ds
inc
incb
insl
mov
adc
inc
xchg
mov
out
sub
repz
sub
and
adc
lahf
aam
sahf
xchg
test
mov
bound
in
mov
mov
dec
rep
add
or
subb
push
rorb
cmpsb
dec
sarb
data16
shlb
jp
add
repz
sbbl
rclb
pusha
pop
push
add
dec
cmp
push
jne
lcall
push
je
jae
dec
xchg
aas
mov
mov
sar
mov
aaa
lds
pop
or
inc
inc
push
push
dec
rcrb
xchg
rclb
lods
into
std
dec
dec
lods
mov
xor
jl
mov
dec
bound
pop
loope
pop
lcall
mov
sbb
sub
testl
ss
fdivrl
and
fstl
in
int3
gs
sub
call
dec
cmp
add
mov
adc
repz
fstl
je
scas
push
test
sbb
mov
and
adc
rep
popf
mov
nop
test
adc
push
in
mov
adcl
push
and
imul
std
in
enter
and
fs
mov
cmp
push
rorl
imul
or
mov
xchg
xchg
sub
lahf
push
pop
pusha
testb
rcll
add
mov
sahf
sbb
pop
imulb
sbb
jp
pushf
sti
in
sub
mov
cmpl
sahf
sub
dec
add
pop
les
fdivp
cmp
mov
call
jmp
cmpsl
and
mov
scas
sbb
and
mul
push
je
cmp
mov
jbe
push
mov
cmp
mov
inc
daa
inc
into
loopne
mov
push
mov
dec
mov
xchg
ds
push
xchg
push
insl
jb
pop
dec
dec
xchg
xchg
jmp
cmpsb
inc
sub
inc
bound
js
cmp
fldt
icebp
sub
lcall
test
add
sub
fisubl
cmpsb
dec
and
xchg
add
sbb
cmp
flds
cltd
je
mov
push
xlat
in
mov
cmp
mov
out
and
push
orl
cmpsb
mov
fadds
hlt
add
arpl
loope
xor
std
notl
adc
shlb
jle
adc
sti
mov
pop
and
pusha
jno
fdivp
and
xchg
jnp
push
imul
repnz
sbb
stos
sbb
or
jecxz
fisubrs
and
pop
es
xor
push
push
pop
dec
in
mov
pushf
call
push
inc
push
inc
in
in
jecxz
jo
mov
cwtl
jns
xchg
sbb
movsl
xchg
xchg
xor
cmp
xor
out
push
jae
imul
adc
mov
xchg
iret
adcl
jnp
or
xor
cmp
fmuls
inc
lahf
outsb
shll
mov
stc
cmpb
xor
cmp
inc
sbb
lods
jns
xlat
cmp
xor
mov
imul
mov
mov
test
loop
lea
xor
inc
jge
adc
mov
ja
or
dec
dec
mov
mov
icebp
dec
outsb
add
mov
std
into
xor
lret
gs
push
dec
sub
in
push
push
rcll
push
jge
in
xor
adc
and
outsb
cwtl
dec
lcall
cmp
shlb
inc
idivl
jae
mov
aas
xchg
out
mov
jp
pop
or
sahf
push
cmp
mov
fildll
incb
aaa
rol
aad
leave
insl
incl
jle
lret
xor
adc
gs
insl
pop
imul
add
test
into
jmp
and
sbbb
sbb
pop
in
icebp
and
mov
fisubs
mov
stc
ret
lret
aas
sbb
xchg
imul
push
jecxz
fxam
push
sub
push
mov
sahf
and
iret
mov
cmp
test
jne
dec
sbb
pop
push
jne
or
into
and
imul
imul
adc
cmp
push
je
lods
or
aad
mov
insb
mov
sbb
loope
in
sub
lahf
outsb
add
sahf
loope
pop
and
push
mov
lret
outsb
mov
test
cltd
cmp
xor
psubusb
movsb
fldl
aam
sti
and
sahf
or
lcall
aad
fimuls
out
pushl
shll
pop
or
imul
push
test
lret
xor
cmpsb
jl
or
jl
int
mov
cmp
sti
pop
movl
inc
push
sub
arpl
mov
dec
std
rolb
and
xor
push
add
popf
int3
or
ljmp
pop
subb
sbb
mov
cmpb
movb
lahf
mov
cmc
out
pop
jne
mov
mov
xchg
jne
mov
adc
loopne
add
test
xchg
cli
sbb
sbb
in
sub
mov
stc
js
pop
cmp
cmp
test
xchg
icebp
pop
lock
jae
imul
aam
xchg
std
mov
inc
imul
movsb
xor
xor
xchg
jne
jl
sbb
out
cmp
mov
dec
or
je
push
call
inc
aam
mov
movsl
lock
cs
adc
lret
lods
psubusw
inc
xchg
cmpsl
gs
pushf
add
pop
jb
fcmovnu
cmp
add
xor
push
or
repnz
cmc
test
xchg
or
push
xchg
add
inc
adc
ficompl
stc
fwait
mov
cld
insb
xchg
push
xchg
jg
mov
mov
pop
decl
mov
std
inc
dec
push
xchg
out
std
push
mov
outsl
push
cmp
xlat
pop
je
clc
scas
popf
arpl
mov
jbe
xlat
inc
mov
xlat
enter
int3
xor
jno
cmp
or
jne
pop
pop
xchg
sbb
dec
rolb
icebp
jmp
ud2
sub
or
mov
testl
push
inc
fs
hlt
sbb
sbb
adc
loop
adc
imul
cld
rcll
test
aaa
mov
fcmovb
xorb
sub
and
shll
lods
push
pop
movsb
out
dec
mov
and
lock
aaa
jl
or
scas
xchg
push
xorb
dec
mov
ficompl
fiaddl
outsb
dec
es
imul
jg
pop
in
push
sbb
rorl
mov
cmp
popa
or
xor
jl,pt
pop
enter
inc
sarl
cmp
pop
call
clc
pusha
xor
test
lcall
fldenv
aas
out
stc
sub
pop
add
ja
or
jle
in
mov
addr16
icebp
cmpl
cmp
mov
aad
lods
nop
cmpsl
cmp
jecxz
dec
daa
pop
clc
jl
dec
cmp
repz
fs
sbb
mov
xchg
pop
mov
or
cltd
shr
pop
loop
push
cwtl
adc
dec
fadds
jle
inc
in
imul
xor
cmc
fimuls
das
stos
bound
lahf
inc
aam
shlb
pop
rcl
lds
mov
lea
pop
cs
mov
in
xor
xor
fxch
cmp
mov
and
sar
mov
lods
faddl
out
push
xchg
or
sahf
xorb
shl
repz
lcall
pop
jno
push
push
pop
imul
aad
sbb
mov
sbb
cmp
or
inc
lds
or
sbb
clc
loope
jecxz
sbb
fimuls
inc
test
insb
out
daa
jle
cmpsl
mov
ljmp
sbb
fmull
neg
pushf
xchg
add
lea
testb
ficompl
mov
cmp
into
add
and
mov
fidivs
loopne
push
ss
imul
jle
dec
shrb
mov
fdivrs
iret
imul
sarl
mov
xor
push
shlb
les
call
out
and
push
icebp
aam
fdivs
push
test
and
sub
insb
lock
push
mov
subl
in
jmp
mov
pop
or
fisttps
mov
add
or
and
mov
jbe
mov
dec
das
std
shlb
adc
lcall
sbb
mov
sub
push
subb
lcall
lret
mov
repz
and
push
pop
pop
scas
clc
cld
push
or
in
fidivs
scas
or
cmp
dec
lcall
xchg
push
mov
and
jl
mov
leave
xlat
pushf
push
mov
mov
mov
mov
sub
in
lea
or
push
and
loop
xchg
jl
imul
cld
sti
incl
das
clc
mov
test
dec
push
inc
push
les
mov
jge
add
jl
push
sub
fists
or
addb
pop
cltd
pop
psadbw
mov
jl
ljmp
out
in
testb
cs
cmp
ss
adc
jns
push
lcall
notl
pop
push
ds
ror
dec
fbld
dec
jp
push
mov
jl,pt
xchg
mov
dec
sub
idivb
es
int3
and
sbb
rcl
jo
cld
sub
lds
add
cmpsb
push
addr16
dec
push
jb
daa
sarb
jns
loopne
push
in
stos
xchg
mov
or
and
adc
jbe
fistl
ret
or
hlt
xchg
int3
push
mov
push
cmp
xor
mov
pop
jnp
adc
aaa
shrb
mov
pop
lock
adcl
cmpl
push
test
add
aam
fmuls
mov
fwait
push
pop
fadd
into
pop
add
mov
jmp
push
enter
dec
clc
clc
test
jge
shlb
xchg
inc
daa
loopne
loop
mov
scas
mov
adc
add
push
dec
jge
sub
pop
dec
jne
adc
dec
ss
adc
xchg
fimull
ja
orb
mov
subl
cwtl
inc
xor
lcall
cmpsb
das
jp
xchg
sbb
xor
scas
push
xor
aas
mov
pop
sbb
jg
pushf
pushf
sbb
notl
cmp
sbb
je
ja
and
inc
ljmp
jns
adc
pop
push
frstor
sbb
nop
mov
mov
mov
mov
lods
push
or
clc
daa
in
mov
mov
pop
int
je
das
xor
in
cli
mov
cmp
xchg
jmp
pop
jb
orb
test
jne
push
mov
fs
sbbl
test
mov
pop
cld
mov
jo
push
dec
pop
aad
lds
icebp
popa
popa
mov
cld
int
sahf
lods
inc
add
fcmovnb
std
adc
pop
ret
lods
test
ret
inc
mov
in
sub
jecxz
add
int3
cmpsb
or
imul
dec
testl
in
jmp
inc
mov
dec
inc
les
add
pop
pop
sub
mov
push
and
cmp
cmp
je
add
jo
popa
fmulp
leave
jmp
movsb
loope
fwait
lods
and
lcall
gs
xchg
jae
outsl
jo
add
add
imul
ja
lea
imul
addr16
pop
sbb
lods
sub
mov
xchg
cmp
pop
fwait
test
pop
push
adc
arpl
mov
cmp
mov
into
shr
rorl
or
outsl
aam
addr16
pop
outsl
shrb
in
mov
push
jno
sbbb
push
pop
jg
pop
out
dec
push
pop
outsl
test
push
or
xor
inc
in
mov
stc
das
jl
push
divb
shll
mov
sub
pushf
cmp
insb
sbb
add
pop
cltd
inc
fstpl
mov
jns
orl
mov
mov
xor
icebp
inc
jns
push
imul
jle
or
push
cmp
jge
adc
popf
xchg
jno
ret
push
in
negb
insl
cwtl
pop
call
jge
addr16
rol
test
mov
imul
adc
jns
cmc
int
xchg
shrl
xchg
ds
or
ror
incb
sti
aad
mov
lret
sbb
mov
xchg
cmp
or
mov
outsb
adc
cmp
pop
fidivrs
aam
cs
loope
jbe
adc
addl
ficoml
xor
lea
call
dec
cmp
idivl
in
mov
push
aam
idivl
add
sub
push
scas
cmc
idivb
stc
pushf
lods
mull
cmp
daa
cmp
insl
mov
fwait
pop
xor
pop
dec
fiaddl
and
decl
sbb
mov
xchg
daa
jecxz
add
out
in
repz
and
ret
fisubrs
jle
cmp
mov
sub
cmpsl
push
loop
stos
xchg
cwtl
loope
call
imul
xchg
in
adc
sbb
inc
repz
mov
jns
in
sbb
adc
scas
lods
in
dec
push
push
push
inc
outsl
or
clc
jg
leave
sbb
bound
add
push
mov
xchg
imul
call
loope
mov
test
jl
in
mov
mov
push
test
add
xor
or
dec
out
and
xchg
into
sub
pop
js
aad
movsb
adc
dec
mov
sti
ret
mov
sub
ljmp
pusha
loop
movsl
mov
addr16
leave
or
lret
inc
dec
xchg
push
sbb
pop
mov
sub
inc
mov
push
mov
jge
jmp
leave
sbb
rclb
fs
mov
das
inc
cmp
test
stos
mov
orb
xlat
mov
mov
xor
test
sbb
outsb
insl
add
popf
mov
mov
mov
popf
xchg
neg
clc
add
adc
adc
mov
lahf
adc
shlb
mov
dec
xchg
cmp
or
in
sub
fadd
test
jle
sahf
sahf
inc
mov
mov
cli
cmp
ds
ret
sahf
scas
mov
jo
pop
pop
in
fbld
cmpsb
imul
mov
ljmp
flds
scas
dec
int3
in
in
mov
lret
daa
popf
shlb
xor
fcomps
mov
mov
filds
imul
and
jg
cmp
or
lret
add
in
sub
cmp
popa
or
jmp
out
jb
jge
pop
cmpsl
adc
loope
clc
andb
pop
cbtw
mov
or
outsl
cltd
adc
addb
out
push
mov
pop
mov
cltd
ret
push
test
push
sbb
ret
insl
daa
clc
dec
out
rorb
sub
pop
mov
sub
fwait
or
fisttps
mov
cmovae
out
mov
add
push
shll
add
lret
sub
dec
and
sbb
vfmsub213sd
das
xchg
xchg
add
or
mov
addl
iret
adc
mov
outsl
jne
stc
xlat
xchg
add
scas
movsb
pop
add
adc
iret
in
out
dec
push
xchg
cmpsl
cmp
gs
sar
mov
xchg
aam
sub
push
pop
insl
in
mov
inc
jp
loopne
push
push
loop
sub
outsl
shr
int3
dec
pop
aam
aaa
sbb
stc
into
cltd
adc
pushf
pop
nop
dec
jmp
xchg
and
or
jp
dec
mov
shrl
ja
jle
fstl
jb
mov
imul
xor
stos
and
jns
cli
fimull
nop
imul
andnps
mov
aad
pop
mov
push
mov
addb
clc
push
subb
dec
xchg
daa
in
sysenter
addr16
call
enter
insb
daa
fists
cs
push
pop
or
in
clc
adc
cltd
test
fldcw
mov
loope
xchg
flds
scas
adc
sti
pop
adc
insb
mov
stc
dec
and
push
sub
jno
stos
jp
mov
punpckhwd
movsb
cmp
lahf
arpl
mov
jecxz
fwait
dec
cmp
mov
fdiv
jle
leave
inc
jbe
inc
pop
call
xchg
movswl
cmp
stos
xchg
fmuls
orl
inc
mov
dec
xor
xor
mov
mov
sub
mov
pop
xor
pop
sti
in
ret
jno
mull
jl
dec
push
pop
inc
or
aam
or
pop
nop
and
sub
nop
addr16
gs
jno
mov
jle
pop
cmpb
cwtl
repnz
jecxz
jnp
lcall
push
ljmp
cld
lahf
jl
aam
mov
orb
je
xchg
sub
mov
jg
mov
clc
pop
mov
push
das
cmc
pop
fucomi
push
xchg
ja
cmpsb
jne
xor
add
lods
stos
sub
dec
loop
in
pop
cmp
xor
insl
les
ret
jecxz
pop
adc
jbe
xor
pop
movsb
mov
add
pusha
shr
pop
fldcw
aad
in
cli
pop
pop
push
jmp
pop
xchg
xchg
std
les
andb
movsb
dec
mov
jge
push
sub
and
cmp
xchg
testb
aad
cmp
fcomps
add
jne
mov
mov
mov
jmp
in
into
fstl
xlat
stos
mov
loop
mov
xor
int
outsb
fwait
test
arpl
sub
and
fs
push
loopne
out
mov
decl
xor
fdivr
lret
mov
lahf
cltd
or
stc
int3
push
insb
sbb
mov
xchg
xor
jl
dec
stc
scas
popa
push
sub
xor
mov
sbb
clc
cwtl
mov
xor
bound
and
xlat
mov
out
mov
mov
lods
xchg
daa
pop
decb
data16
jbe
outsb
fwait
lock
mov
and
ds
mov
and
add
imul
mov
lret
xchg
mov
sbb
fisubs
mov
adc
mov
sti
jg
push
xchg
adc
aad
sbb
mov
repnz
popf
cmpsl
push
xor
fsubl
orb
test
pusha
nop
bound
rcll
push
jl
hlt
dec
sbb
mov
sahf
repz
add
xchg
mov
dec
lahf
mov
sbb
in
dec
loope
aas
dec
xchg
dec
push
aaa
cmp
out
inc
fsubrs
xchg
bound
cmp
dec
push
loopne
adc
pop
and
jnp
inc
hlt
fwait
xor
add
sahf
sbb
pop
mov
mov
ss
in
test
jne
xchg
popa
or
cmp
int3
fildll
sub
xchg
jo
cmpb
sub
push
xchg
fldl
jmp
cltd
inc
pop
movsl
push
pop
add
pop
mov
push
mov
adc
mov
cmp
movsl
fsubrl
test
mov
xor
xchg
addl
cmp
xchg
adc
add
rcr
lods
mov
icebp
repnz
sbb
hlt
pop
push
cld
cld
dec
pop
sub
xchg
xlat
mov
popa
xchg
cmovae
push
mov
mov
pop
lss
push
mov
neg
ljmp
xor
in
test
jle
lret
int3
fstps
cs
mov
pop
jns
cs
fadd
xchg
dec
daa
pop
test
in
sbb
data16
lcall
xchg
sub
inc
jge
sub
sbb
js
decl
xorl
sbb
mov
subb
or
leave
mov
jg
lret
push
mov
adcb
sbb
pushf
icebp
xor
ss
addr16
es
xor
adc
push
sbb
test
test
jmp
mov
xchg
aam
into
test
mov
and
or
sbb
notl
or
fs
hlt
repnz
fists
or
dec
leave
flds
loop
pop
ds
xorl
push
xchg
pop
mov
leave
bound
aad
add
mov
xor
inc
pop
jbe
dec
test
shr
test
pop
scas
mov
cmovs
mov
xchg
cmp
je
xor
sbb
loope
jecxz
adc
shll
lret
inc
or
mov
add
jle
or
bound
rorb
or
xchg
inc
lock
lahf
pusha
cmpsb
test
jne
or
in
mov
iret
jbe
stos
push
lfs
inc
subb
fldcw
fwait
outsb
fsts
adc
in
jecxz
dec
fsubp
mov
inc
mov
hlt
dec
push
mov
test
sbb
mov
es
and
jb
cmp
mov
cmp
leave
xchg
fstps
jmp
out
ja
xchg
inc
cmpsl
in
insl
testl
leave
lea
rcrb
xor
push
bound
hlt
mov
add
mov
sti
inc
push
je
dec
lds
dec
aas
push
in
in
aaa
pop
aas
fs
sbb
stos
cld
ret
dec
sub
and
out
mov
pop
fistpll
xor
ja
shlb
inc
jmp
ficoms
insb
cmp
lods
xrelease
clc
data16
push
pop
decl
cmp
push
mov
lret
mov
jae
push
std
test
push
stos
aad
add
call
and
adc
test
xchg
and
das
in
dec
loop
inc
push
adc
adc
jbe
add
ret
jg
push
pop
filds
push
insl
pop
sub
outsb
xor
xchg
xchg
cs
sub
cmp
pop
into
out
repz
fcmovnu
data16
popf
xor
nop
in
popf
xchg
or
jb
push
xchg
mov
mov
push
inc
and
and
or
cmp
push
sbb
out
inc
sbb
cmp
jb
pushf
in
sbb
cld
cltd
dec
jae
dec
xchg
jns
cmp
movsb
das
insl
enter
ljmp
dec
sbb
sahf
or
lcall
xorb
jo
xchg
cmp
jp
and
mov
adc
xchg
cwtl
lds
add
jge
xorb
addr16
sbbl
dec
jnp
mov
stos
shl
call
xchg
jp
adc
es
cmpsl
cld
test
xchg
sarb
cmp
jno
jb
dec
outsb
call
int
sar
lcall
add
jl
test
mov
sarb
pop
push
and
adc
push
sbb
xchg
dec
sahf
jns
stos
sub
stos
mov
xchg
xchg
xchg
mov
test
incb
hlt
mov
ret
scas
cltd
mov
xchg
addr16
ljmp
rolb
out
imul
rcrl
mov
xchg
xor
outsl
add
cs
hlt
pop
addr16
sti
cwtl
or
movsb
inc
ja
pop
call
clc
add
push
sub
testl
in
pop
fdivrs
mov
imul
jg
mov
or
outsl
shrl
sbb
out
adc
loopne
mov
push
sub
pop
add
lods
inc
in
add
cmc
mov
xorl
sbb
pushf
xchg
popa
test
in
imul
shlb
imul
sbb
sbb
sar
ja
daa
sti
and
loope
in
adc
dec
mov
lods
shl
in
push
notl
xlat
mov
cld
or
idiv
mov
dec
or
xchg
int3
dec
jbe
mov
inc
lea
dec
or
mov
xchg
adc
xchg
dec
pop
into
pop
adc
or
adcb
pushf
fisubrl
mov
cltd
imul
jle
fcmovu
jns
mov
inc
adc
lea
cmp
testl
in
fstpt
jge
inc
mov
mov
dec
dec
ja
popf
cmp
movsl
jl
pop
lock
daa
movsb
inc
add
leave
aas
ja
scas
push
jbe
cwtl
ljmp
add
mov
dec
inc
mov
js
xchg
sbb
js
test
xlat
add
mov
cs
int3
aam
xchg
movsb
mov
int
cmc
inc
ret
repnz
xchg
mov
cmp
lret
sub
ds
aaa
mov
movsl
aam
add
mov
pop
call
xchg
repnz
inc
mov
out
cmp
and
sub
or
mov
dec
movsb
scas
scas
ja
hlt
cld
scas
in
popa
xor
andb
dec
pop
jbe
xchg
mov
jae
sbb
cli
fidivl
cmp
or
cmc
lock
dec
es
mov
and
mov
push
lret
ret
fidivl
dec
pushf
add
or
xor
outsb
in
test
cmp
jb
cmp
lea
leave
adcb
pop
add
inc
push
push
daa
xchg
mov
bnd
sub
cltd
ljmp
arpl
add
jecxz
rclb
push
jne
and
cmc
arpl
adcb
decb
mov
mov
stos
and
lods
dec
sahf
or
push
jb
push
or
pop
jne
mov
gs
lock
loope
cmc
fs
cmp
lds
fdiv
pop
cmpb
push
loop
jmp
and
and
push
mov
int3
arpl
mov
and
pop
call
dec
sub
sbb
fwait
gs
ret
arpl
jecxz
mov
push
jge
in
imul
jnp
mov
or
popl
add
mov
mov
jns
test
lods
sbb
and
ret
loop
shrl
and
sahf
pop
and
fcomi
mov
dec
out
dec
out
jmp
popw
dec
stos
sbb
pop
mov
out
pop
cwtl
pop
jl
cld
or
aas
add
lock
mov
xchg
frstor
mov
mov
add
jbe
cmp
sbb
sub
subb
pop
xchg
data16
xchg
inc
mov
fldcw
out
lods
lock
dec
mov
out
mov
sbb
scas
xchg
mov
loopne
push
and
jo
jnp
push
pop
fprem
xchg
sbb
cld
mov
xor
into
mov
push
pop
jnp
imul
pop
sti
rol
popf
das
sarl
push
xchg
lods
cmpsb
loop
insl
mov
dec
out
scas
or
jb
add
jge
roll
subb
xchg
int3
pop
cmc
xor
or
jge
pop
hlt
push
movsb
dec
rorl
fs
jge
mov
mov
lock
loopne
adc
lret
adc
xchg
push
fldenv
icebp
fwait
daa
mov
cmp
aas
xor
or
sbb
ss
inc
xor
mov
fmuls
push
push
orb
jg
or
inc
add
int3
push
jge
mov
adc
xlat
sub
lret
je
lea
repnz
mov
mov
adc
mov
jb
xchg
stos
repnz
jnp
mov
cli
cltd
cmp
xor
fidivs
lods
sbb
loop
orl
les
mov
call
mov
iret
sub
out
les
out
cmp
jbe
add
mov
adc
or
sbb
pop
das
jbe
cmc
xlat
adc
dec
xor
sbb
xchg
std
inc
pop
fadd
xchg
addr16
clc
pop
mov
std
cs
lds
pop
mov
xchg
ds
in
xchg
or
mov
push
mov
mov
mov
push
dec
jle
aam
push
incl
mov
mov
xchg
addr16
cmp
clc
movsb
mov
cmp
jmp
or
jns
mov
sub
ss
pop
call
std
or
cmc
fnstcw
lahf
jmp
mov
pop
inc
popa
out
jno
fistpll
inc
popf
xchg
add
mov
dec
aaa
mov
jmp
jmp
and
xor
cltd
sahf
shlb
inc
sub
adc
aaa
and
mov
dec
ret
add
jl
pop
mov
inc
out
push
cmp
pop
sbb
pusha
rcll
or
push
add
xchg
lock
in
andb
jnp
sbb
bound
or
push
push
jp
cmpsl
mov
add
cmc
das
cmc
mov
push
leave
mov
and
mov
or
mov
push
and
push
or
push
movsb
jb
addl
mov
out
lock
jg
xor
mov
mov
sbb
inc
add
test
xchg
insl
dec
push
movsl
mov
stos
popf
mov
and
mov
pop
push
fs
stos
movsl
push
or
out
pmaddwd
and
leave
cmp
fbstp
sub
insl
xor
aas
xchg
scas
movsl
fstps
cwtl
inc
pushf
imul
jg
cwtl
test
mov
jl
movl
movsl
xchg
icebp
int
mov
xchg
hlt
stos
stos
push
adc
bound
dec
movsl
fwait
ljmp
push
or
jno
cmp
sbb
xchg
stos
cltd
push
cmp
pop
pop
jo
mov
int3
inc
in
cltd
popf
adcb
test
pop
lods
in
xchg
icebp
xchg
jle
in
mov
outsb
add
jne
inc
dec
scas
faddl
notl
inc
xchg
lds
in
js
bound
push
mov
xchg
pop
ja
and
scas
inc
hlt
and
es
pop
adc
in
pusha
and
outsb
mov
fldenv
inc
pop
ds
dec
jge
pop
push
jo
aaa
lock
mov
add
push
clc
aaa
inc
enter
stc
lock
scas
movsl
and
pop
dec
jp
adc
pop
add
xchg
out
xchg
fs
or
insb
popf
popa
xlat
push
jnp
xor
std
jmp
aaa
ret
mov
jle
test
add
outsl
jbe
rclb
sbb
xchg
mov
sbb
and
lock
in
adc
push
lahf
jge
dec
jnp
lcall
or
sub
pop
mov
mov
dec
hlt
cmp
jno
jl
sbb
test
cmp
xchg
dec
xor
mov
dec
and
dec
outsl
xchg
adc
sub
add
sbb
aaa
mov
mov
scas
mov
lret
jne
addr16
out
clc
into
pop
push
mov
ret
aad
jae
xchg
les
dec
push
jb
int3
mov
dec
push
arpl
sbb
std
sub
pop
icebp
ret
mov
int3
insb
cli
repnz
xchg
mov
pop
popf
scas
inc
rcl
cs
lcall
clc
aam
cmpsl
lea
imul
cli
iret
mov
pop
xchg
mov
pop
add
out
ret
mov
dec
pop
lret
jp
ss
pushf
sarb
dec
or
out
pop
and
inc
push
xor
push
jb
pop
dec
aas
sub
add
out
ja
sbb
into
popa
ds
xchg
add
sub
dec
imul
add
imul
mov
push
lcall
dec
das
stos
ret
xor
dec
dec
add
inc
jmp
aas
jecxz
jbe
ss
les
inc
out
and
test
movsb
out
xchg
sbb
aas
insl
loop
and
pop
pop
bound
xor
push
aam
mov
cmc
leave
dec
pushf
push
addr16
xor
icebp
scas
inc
fdivrs
out
push
xchg
xor
sub
icebp
lock
test
lods
scas
dec
adcb
mov
sbb
das
mov
pusha
rolb
popf
jle
xchg
add
or
jnp
repnz
push
std
mov
imul
mov
out
out
xchg
push
iret
bound
js
mov
jge
mov
lret
xchg
mov
out
inc
aas
jg
mov
or
shlb
addl
enter
cmpsl
mov
das
adc
gs
adc
mov
mov
pushf
test
test
inc
jg
ja
jo
fsubr
loop
add
sub
loopne
mov
adc
call
rcrb
int
ret
xchg
xchg
inc
mov
inc
add
into
test
or
cmp
lock
sti
inc
mov
stos
test
cmp
stc
add
daa
push
cld
shrb
jb
shrl
push
push
sub
mov
lods
dec
push
jecxz
mov
or
mov
or
jl
sbb
dec
push
dec
sbb
in
inc
sub
push
rcrb
repz
sub
push
sbb
jae
sub
ss
sti
ds
inc
mov
push
mov
test
mov
adc
push
sbb
lock
test
adc
mov
jl
pop
jnp
mov
sbb
enter
aas
sbb
xchg
outsb
nop
and
xor
and
lock
xor
xchg
xor
gs
shrl
ret
lock
dec
xchg
cmpl
cmp
sub
ret
repnz
nop
inc
je
mov
pop
std
cmp
sbb
shrb
pusha
lods
out
xor
xor
fildl
in
nop
sub
push
sahf
dec
sub
fwait
je
xor
or
mov
push
jle
les
mov
mov
dec
inc
or
mov
push
xchg
pushf
out
pop
inc
mov
int3
hlt
xlat
add
dec
jecxz
push
mov
or
inc
mov
scas
outsb
xor
jae
sub
cltd
mov
test
push
mov
pop
out
std
pop
mov
fcomps
or
rcr
xor
or
fistl
repz
pop
dec
into
dec
xor
popf
inc
push
ja
xchg
shl
push
out
sti
dec
lahf
punpcklwd
cli
sub
mov
and
or
loop
xor
repz
jns
movsl
mov
adc
xorl
test
rep
cwtl
ror
call
push
push
push
push
mov
clc
out
xchg
imul
sbb
xchg
jne
inc
neg
inc
push
pop
sub
dec
and
test
or
or
jmp
xor
push
jnp
shll
adc
stos
dec
cmp
jae
mov
add
pushf
in
cli
test
adc
shrl
sbb
add
inc
sbb
pusha
mov
ret
push
repz
cmc
in
pop
mov
pop
in
mov
sub
push
add
mov
lods
xlat
ret
mov
out
lret
mov
into
push
dec
mov
sub
add
add
jp
inc
xchg
pop
jo
test
push
out
inc
push
ret
mov
xchg
xchg
pop
dec
movsl
mov
inc
stc
dec
out
test
adc
repnz
popa
sub
notb
pop
xor
jns
jnp
cmpsb
cltd
inc
and
xor
dec
sti
dec
in
arpl
push
xor
mov
pop
neg
mov
or
add
pop
jmp
add
inc
test
and
daa
sbb
lea
xchg
mov
or
insl
xor
pop
jbe
adc
sbb
and
adc
cltd
xchg
add
lods
negl
jge
push
ss
fnsave
or
into
jmp
popa
mov
loopne
pop
sbb
sub
add
mov
mov
mov
cmpsl
rcl
jmp
adc
imul
sub
repnz
repnz
fildl
daa
push
xor
inc
or
fwait
push
and
sub
mov
test
pop
ljmp
mov
je
add
fisttpll
in
mov
xor
insl
sub
or
dec
mov
sbb
pop
mov
inc
lret
cltd
cmc
cltd
ret
sub
push
les
adc
adc
lcall
iret
xor
fwait
mov
xlat
in
lret
stc
inc
outsl
test
ljmp
mov
rcrb
add
inc
arpl
movl
mov
mov
xor
into
je
scas
inc
dec
mov
lahf
or
add
xchg
arpl
mov
pop
mov
add
test
push
andl
jns
pop
inc
leave
data16
sbb
sbb
lds
or
lahf
cmpsb
fisubl
clc
sbb
bound
jae
aam
cmpl
or
dec
das
pop
out
jae
cmc
movsb
neg
push
movsb
xor
sub
pushf
shrb
stos
enter
icebp
sub
mov
in
enter
sysexit
flds
push
jno
rclb
ret
push
xchg
mov
push
mov
xchg
fwait
sub
jo
das
aas
cwtl
fs
fs
out
outsb
in
sbb
mov
add
js
push
dec
or
adc
push
sbb
mov
add
aam
testb
jp
xorl
mov
stos
xchg
repz
mov
jno
xchg
outsb
mov
popa
sbb
mov
jb
cmpsl
jge
adc
adc
shrl
dec
or
push
dec
enter
pop
cld
es
jae
add
jno
jp
scas
xchg
in
mov
sbb
cld
maskmovq
testl
loope
jle
test
pop
les
out
das
pop
inc
xchg
hlt
addr16
shrl
jle
imul
addr16
in
pop
pop
in
mov
aam
fidivl
icebp
mov
sti
pusha
push
pop
jne
jmp
maskmovq
imull
rcrl
out
aaa
shrb
pop
sub
mov
rolb
sub
pop
jg
jmp
ss
push
adc
andl
jnp
cmp
or
outsb
sbb
cmpl
pop
lret
test
mov
sub
mov
xor
dec
hlt
pop
ficomps
test
sbb
sbb
cmc
out
sbb
sub
push
mov
cmp
mov
mov
mulb
outsb
fstps
jns
aaa
clc
push
ret
jl
mov
fsqrt
add
inc
mull
jp
cmp
pop
adc
hlt
adc
mov
lcall
sbb
ret
dec
sub
xor
fbstp
sti
addr16
jno
cmp
pop
or
test
or
sbb
mov
mov
int
add
sbb
dec
dec
sub
add
aas
das
adc
add
sub
repz
popa
dec
mov
test
and
addb
mov
or
cmpsl
jmp
sbb
or
stos
sub
das
test
pop
push
or
outsb
sbbb
pop
jg
add
dec
jl
daa
dec
imul
add
iret
jge
call
fiaddl
jne
pop
sub
or
test
lods
xor
jne
cmp
dec
pusha
adc
lock
scas
xchg
xchg
rcrl
sub
out
les
and
dec
jns
enter
fcomip
dec
lea
fwait
adc
ja
cmp
cmp
add
xor
add
mov
in
mov
xchg
aaa
xor
and
pop
mov
aam
sti
fisttps
push
inc
cli
mov
in
dec
mov
aad
call
shlb
add
f2xm1
pop
out
sbb
add
push
and
divb
mov
inc
dec
or
addr16
out
rcr
icebp
lret
mov
and
imul
imul
mov
test
jecxz
mov
adc
stos
loop
ds
orb
push
adc
mov
and
loope
cli
adcl
add
adc
sub
add
xchg
jecxz,pn
mov
push
je
pop
xchg
sti
std
in
and
adc
ss
sarb
jmp
push
or
imul
bound
shlb
sub
inc
mov
mov
adc
and
into
pop
sahf
insb
push
mov
call
mov
jmp
and
push
and
and
or
test
fldcw
je
sbb
sbb
push
xorb
cli
push
pop
sbb
mov
push
and
mov
popa
or
outsl
test
push
cmp
dec
cmp
sub
pusha
out
fcoms
lret
inc
pop
jp
ret
pop
xor
add
xchg
cmc
cmpsb
stc
rep
or
aas
loopne
in
jno
lcall
test
dec
mov
sbb
notl
ds
out
shll
xchg
fnstenv
jns
push
dec
cmp
loope
fwait
loopne
sar
jg
sub
movsl
sub
cmp
pop
shr
lods
jecxz
das
mov
sub
adc
sub
mov
xor
jnp
mov
dec
out
push
int
or
inc
fprem
clc
or
adc
xchg
cwtl
out
into
cli
jle
adc
jb
pop
jle
pop
pop
subl
or
mov
int3
jmp
std
test
add
mov
or
jmp
pusha
jle
lods
nopl
loope,pt
dec
test
push
int
jns
cltd
add
cmp
notl
adc
mov
cmc
pop
addr16
bound
out
frstor
subl
sub
sub
pop
cs
decb
lods
lods
sbb
movsl
or
sub
daa
addr16
and
mov
adc
ret
inc
lods
mov
out
sarb
fimull
cmp
outsl
adc
cltd
lcall
dec
popf
int
stos
loop
lea
popf
jo
repz
dec
and
cmp
sbb
mov
add
cmpsb
xor
int
lods
or
dec
or
out
pushf
bound
xlat
mov
dec
arpl
sub
dec
ret
jmp
and
inc
sbb
rcrl
fsubr
inc
add
sbb
cs
inc
cmpsb
lea
int
add
mov
sub
fcom
push
inc
das
notl
add
push
pop
movb
push
sub
sub
xor
ja
fists
jae
scas
jmp
push
cld
push
dec
xchg
fs
pop
mov
outsb
sub
cmp
vpmadcsswd
ljmp
aas
lods
cmp
shr
xchg
or
push
push
xchg
mov
jle
cld
mov
hlt
xlat
jmp
nop
les
jecxz
adc
cli
iret
add
ret
fimuls
lret
ret
xchg
push
pop
fiaddl
insl
and
stos
divl
fsubrl
inc
lahf
loopne
data16
add
stc
out
mov
xchg
jl
xor
push
mov
inc
xchg
dec
hlt
jo
sub
cmp
lods
mov
sbb
mov
adc
add
repnz
jbe
stc
aad
xor
xor
notl
mov
adc
mov
sub
sti
test
cmp
movsl
pop
aad
push
and
or
lea
mov
hlt
insl
cmp
adc
mov
mov
or
jnp
push
fimull
adc
add
out
cmpsl
add
dec
insl
adc
shl
dec
fistl
dec
mov
pop
cld
cmp
popa
js
or
adc
jns
cmpsb
daa
and
mov
icebp
pop
inc
or
pop
add
or
adc
mov
xor
push
fildl
push
mov
roll
push
in
jg
sti
loopne
jne
inc
das
mov
ret
cld
push
insb
xchg
movl
jl
pop
xor
sub
jg
inc
adcb
adc
repz
adc
jne
mov
mov
jmp
lds
orl
cmpsl
in
outsl
test
pop
das
and
inc
xchg
lret
scas
out
and
inc
enter
cmpsb
sbb
stc
aam
subl
mov
mov
ret
mov
lock
enter
and
faddl
addr16
stc
mov
cs
push
push
cmp
inc
sbb
pop
pop
sahf
incl
cmp
test
in
jle
orb
mov
test
cmp
daa
incl
ljmp
in
maxps
xchg
into
cltd
ljmp
shlb
int3
push
mov
fwait
or
test
imul
mov
push
xlat
imul
shr
mov
imul
cmpl
in
in
aad
mov
push
lods
jge
movsb
test
cmpsb
sar
push
bound
loopne
dec
adc
aad
ret
dec
dec
sbb
jb
xchg
popl
mov
fcompl
add
fs
cli
out
adcb
jae
mov
shrl
fcomps
push
pop
movl
mov
sbb
add
push
sub
rcrl
sub
jns
dec
out
jo
jl
adc
adc
mov
adc
mov
ficoml
test
jbe
pop
cmpsl
clc
scas
pop
and
sub
xchg
sub
adc
adc
cmp
lcall
out
fcmovnu
adc
mov
xchg
cmp
pop
test
mov
imul
dec
adc
sbb
cmp
mov
sbb
stos
popa
push
and
sub
push
in
push
lds
sub
jle,pn
mov
adc
adc
jb
fs
jno
inc
sbb
popf
int
sbb
mov
xchg
je
mov
sti
in
pop
push
sahf
lret
aam
adc
jp
mov
adc
flds
cmp
test
mov
js
jns
push
out
loopne
loope
or
imul
jp
adc
push
cmp
or
test
xchg
ja
mov
xchg
xor
cmp
ljmp
inc
sbb
xorl
mov
dec
data16
adc
cmpl
shll
jmp
push
add
or
add
push
movsb
cwtl
insl
jp
mov
push
insb
addr16
pop
cmp
pop
cmpb
cltd
je
gs
stos
inc
lds
ljmp
xchg
sbb
aas
stos
out
dec
mov
cltd
insl
cs
jg
push
inc
rclb
out
add
pop
adc
out
daa
push
scas
out
ss
in
mov
pushf
xchg
fwait
enter
test
dec
movsl
adc
xchg
hlt
pop
insb
and
push
scas
add
stos
hlt
pop
xchg
cmp
mov
xchg
or
push
jecxz
cwtl
test
mov
lods
rorb
movsl
mov
push
sbb
nop
in
and
xchg
and
and
adc
pop
aas
or
push
std
add
out
or
mov
das
inc
jg
jl
repz
dec
push
xchg
test
shll
adc
and
gs
subl
fcmovnu
push
and
data16
adc
fldln2
jno
je
imul
cmp
stc
xor
adc
leave
xchg
stos
int3
cwtl
add
insl
fcoml
in
idivb
jmp
cmp
inc
xchg
mov
cmp
mov
jg
outsl
xchg
sbb
loop
enter
aam
movsb
pushf
adc
leave
fadds
xor
fimull
iret
std
lea
hlt
xchg
dec
mov
call
int3
iret
mov
dec
jae
cmp
test
xor
adc
fchs
xchg
cmpsl
sbb
or
addb
outsb
sub
movsl
cmp
jns
sub
push
mov
xor
and
sub
subb
ja
jnp
lret
fbstp
test
xchg
call
hlt
dec
incb
jne
inc
loop
inc
cmp
mov
dec
sti
cmovno
daa
sbbb
push
or
stc
mov
dec
hlt
cmp
adc
mov
mov
sub
dec
insl
imul
lock
pop
movsl
stos
fistpl
lea
aas
push
lock
sub
dec
iret
aas
mov
jg
hlt
jmp
fwait
adc
add
cmp
add
shll
out
xor
leave
scas
outsb
iret
subl
dec
lods
jo
adc
test
das
sbb
iret
xor
add
in
adc
pop
xchg
pop
xor
push
lods
mov
sarl
int3
mov
inc
outsb
cmp
in
cmpsl
cmp
add
shll
adc
xchg
jns
sti
aam
ss
call
data16
xchg
push
cld
pop
cmp
jecxz
and
jmp
lahf
and
jecxz
push
mov
pusha
in
mov
sub
iret
andb
repnz
stc
mov
or
xchg
ret
pop
and
ret
mov
adc
adc
mov
sub
sbb
xor
jge
xlat
ss
scas
and
mov
add
pop
push
jg
jne
jno
aas
adc
in
add
movsl
sbb
dec
pop
xchg
dec
mov
inc
jo
test
add
push
sbb
ficoms
out
and
adc
clc
out
mov
xlat
xlat
movl
inc
jmp
jl
jo
or
lahf
loop
jo
pop
loop
lret
or
lods
iret
add
add
fdivs
das
sub
cmp
into
fisttpll
js
mov
call
out
cmp
adc
dec
cmp
mov
push
push
mov
stc
rcr
mov
add
xor
outsl
push
push
cmp
sub
jnp
cltd
jnp
loope
mov
cld
stos
aad
and
xchg
and
push
dec
iret
push
shl
inc
push
jnp
stos
loop
aaa
and
dec
xor
push
add
inc
lahf
cmp
loope
lods
fldt
ret
mov
shl
popf
add
in
add
and
sub
insb
lods
fsub
jno
ljmp
decb
dec
adc
clc
addl
cli
push
push
rolb
dec
jo
cld
dec
rcl
adc
cltd
shlb
ret
jecxz
mov
clc
mov
adc
popa
and
adc
inc
push
inc
scas
int3
outsl
cmp
push
pop
lret
es
sbbl
inc
xchg
iret
icebp
insl
pop
cmp
outsl
popl
push
adc
add
and
mov
sub
mov
sti
ret
inc
in
push
sub
rorl
pop
xchg
mov
push
inc
adc
pop
out
jmp
shrl
and
fists
fstl
pop
inc
dec
mov
dec
rolb
pop
push
fdivs
stc
in
xchg
mov
int3
mov
test
es
mov
xor
loop
mov
into
call
das
pop
mov
push
inc
adcl
xchg
sbb
imul
mov
mov
sub
mov
or
add
sbb
in
sbb
rclb
out
imul
jl
int3
adc
iret
xor
push
sbb
fists
out
lods
pop
test
cmp
mov
shrb
stos
jae
push
jl
mov
insb
pop
cld
dec
daa
stos
ror
rol
popa
rcrl
push
test
dec
test
dec
cltd
rcrl
mov
xchg
xor
test
mov
add
scas
jl
mov
movsl
aam
es
sbb
or
inc
int
jnp
sbb
stos
lea
inc
inc
fsubl
push
notl
and
imul
sbb
aam
aad
mov
outsb
push
mov
repz
push
test
and
js
pop
enter
sti
or
not
jp
pop
sub
dec
cli
aam
xor
or
dec
loope
leave
lret
push
xor
insb
cmp
fidivl
mov
scas
xor
or
popa
and
int3
and
or
mov
jbe
pop
loop
xchg
adc
cmp
roll
pop
es
out
adc
cmp
stos
or
xor
std
sbb
icebp
int
mov
cmpsb
lahf
adc
jne
pop
sbb
out
cwtl
cmp
pop
cld
shr
adc
rcl
xlat
dec
sbb
adc
or
add
cli
cmp
daa
mov
inc
loop
test
aaa
enter
leave
stos
add
add
jbe
jge
iret
push
nop
aam
ja
push
mov
jae
daa
push
inc
push
out
adc
ret
adc
mov
dec
sub
jg
nop
in
inc
movsl
cld
jmp
jbe
lds
enter
or
xchg
jge
add
sub
fisubs
movsb
add
adc
enter
sub
std
cwtl
xchg
test
and
out
jbe
jnp
xor
cmpsb
loopne
icebp
fisubs
jp
add
jp
xor
adc
mov
or
icebp
mov
xchg
ret
lods
fdivrp
and
test
test
shll
mov
and
repnz
in
sbb
scas
repnz
aad
dec
mov
mov
into
and
push
mov
push
push
fsubrs
inc
cmp
mov
and
ret
lds
mov
invd
jmp
imul
mov
hlt
scas
popf
daa
repnz
outsb
pop
test
clc
popf
inc
cmpsb
fcoml
lea
fstl
inc
mov
lods
rcll
fdivr
sbb
addr16
pop
decb
pop
aas
sbb
inc
pop
icebp
iret
dec
mov
inc
inc
test
pop
fs
icebp
add
insb
in
mov
pop
addr16
pop
cmp
popf
or
xchg
push
stos
sbb
pop
sahf
jle
outsl
enter
call
xorl
insb
jecxz
sbb
jo
sbb
mov
xchg
mov
into
add
xchg
in
aad
lds
jo
rorl
scas
aad
xchg
push
mov
jne
adc
sti
push
mov
addb
add
or
push
pop
jne
mov
pop
sarl
ret
cwtl
inc
adc
xlat
xchg
mov
push
sub
std
cld
mov
xchg
loopne
mov
mov
call
cmc
and
adc
scas
rcrb
jmp
pop
test
mul
loopne
aaa
es
cmp
mov
mov
iret
pop
sub
test
push
cltd
and
ljmp
adcl
add
fisubl
and
cs
push
pop
lock
xchg
inc
lret
lea
fsubl
mov
imul
xchg
and
shrb
ret
lret
sbb
scas
das
nop
mov
pop
mov
or
mov
arpl
xchg
fucomi
icebp
scas
push
imul
sbb
cmpsl
nop
aaa
fcoml
filds
inc
mov
sub
lock
lahf
push
push
fwait
adc
xchg
divb
xor
mov
aam
fnstenv
cmp
cmp
dec
adc
jl
adc
pop
jge
stos
fadds
repz
popf
dec
jb
xchg
jne
dec
jae
cmp
enter
lods
sahf
or
loop
nop
dec
jno
pushf
in
sbb
mov
xor
lea
xor
add
push
or
and
inc
xchg
and
pusha
or
ja
cwtl
shr
pop
jp
mov
push
fldcw
xchg
push
inc
das
shrl
pop
mov
and
rclb
push
int
call
das
stc
push
sbb
jecxz
addb
fidivl
faddl
ret
in
movsl
xor
push
pop
push
aas
ret
mov
xor
pop
xchg
add
push
and
and
fmulp
negl
addr16
sarb
out
jmp
adc
inc
fistps
cmp
push
jbe
shrl
ficoms
and
push
push
pop
ds
xor
push
mov
jae
aam
mov
es
in
sbb
and
dec
outsb
dec
push
ss
test
and
xor
dec
popf
mov
or
dec
and
repnz
imul
dec
adcb
outsb
movsl
out
xchg
out
mov
mov
jl
pushf
fstl
ret
inc
mov
or
hlt
push
mov
or
loope
pop
stos
dec
sbb
mov
xchg
test
std
stc
in
addb
nop
adcl
lret
sub
std
leave
sub
dec
aam
push
jecxz
movhps
cs
pusha
js
mov
mov
call
dec
fbstp
add
mov
scas
rolb
icebp
lret
dec
mov
xchg
stc
mov
push
jmp
cmpsl
lcall
fidivl
jo
loopne
ret
xchg
cltd
cltd
jecxz
sbb
outsl
aam
in
sbbb
jns
mov
fistpll
gs
cmp
mov
lret
adc
inc
outsb
cmp
push
pop
aas
fsubrp
stos
or
nop
int3
jbe
xchg
mov
dec
xchg
xor
jb
push
ss
icebp
xchg
or
aaa
push
sub
sbb
and
cld
dec
mov
pop
sbb
mov
lock
scas
fstps
xor
xorb
mov
dec
sub
adc
pop
jmp
lock
incl
pop
jnp
jne
fsubr
dec
xchg
js
xor
cmp
xor
and
mov
sub
outsl
jne
sbb
push
shll
into
sahf
movsb
rcrb
aaa
pop
inc
dec
xchg
js
dec
daa
je
nop
into
int3
int3
ljmp
and
xor
imul
popa
adc
lods
xchg
orb
repnz
pushf
imul
cmpsb
cmp
add
int
aam
dec
dec
push
das
dec
enter
addr16
call
repnz
dec
iret
dec
and
push
dec
add
fwait
test
jne
and
call
xor
mov
xlat
xor
cld
out
jnp
mov
int3
xchg
js
subb
testb
dec
and
jnp
ds
adc
icebp
cmpsl
scas
stc
adc
mov
out
mov
iret
fs
mov
cmc
loope
inc
mov
test
ret
mov
xchg
gs
add
mov
lods
imul
jg
sub
mov
jmp
jmp
jno
into
push
into
mov
insl
test
cmp
repnz
push
mov
movlps
inc
push
lea
adc
dec
cli
aad
popf
mov
pop
iret
xor
out
fsubr
je
push
adcb
outsl
dec
andl
sbb
lds
and
xor
je
negb
jno
inc
jle
sub
jecxz
aas
jmp
cmp
xlat
pop
cmp
pusha
bound
add
lods
scas
cmp
test
adcb
pusha
xchg
or
xor
dec
lods
insb
test
xorl
and
jge
mov
push
sti
scas
cmp
xchg
mov
push
or
shl
out
or
shlb
xor
aam
mov
and
or
inc
add
test
pop
ja
rcrl
and
sbb
test
ss
test
push
stos
add
lods
mov
bound
ja
lcall
mov
push
pop
mul
push
inc
fidivl
jbe
dec
movsl
cmp
rcrb
outsb
sub
add
cwtl
sbb
rcr
dec
stos
jle,pn
pop
add
shl
push
xchg
jns
xor
imul
sbb
nop
mov
pop
dec
iret
test
or
mov
dec
inc
adc
pop
jecxz
bound
jl
orb
es
iret
in
je
pop
repz
jns
adc
dec
jbe
and
dec
jmp
xor
sub
push
pop
mov
pop
idivl
cltd
jmp
inc
sbb
or
sbb
pop
or
into
mov
es
mov
sub
inc
push
inc
push
inc
jl
and
inc
les
cmp
rol
ret
push
sbb
xchg
loope
cltd
inc
mov
ja
movsl
cmp
xchg
add
nop
add
mov
fisubrl
stc
jge
fmull
and
dec
outsl
push
popf
or
jge
cmp
sarb
nop
inc
xor
enter
aad
mov
movsb
or
pushf
je
or
btr
cmp
movsb
in
xor
mov
jecxz
in
push
notl
fwait
inc
dec
mov
and
sub
int3
pushf
cmp
xor
sahf
and
fadd
scas
subb
mov
cmp
dec
sub
xchg
fstl
push
js
lods
sbb
pop
lock
xlat
xlat
mov
mov
cmp
fsubrs
push
aad
pusha
fisubl
movsl
out
fldl
repz
xchg
add
or
scas
add
xchg
inc
mov
mov
ss
ja
in
mov
adc
ret
mov
mov
or
xor
or
jno
push
fwait
into
mov
fisttpll
mov
pop
or
push
add
pop
call
or
push
rcrl
insb
xor
shlb
xchg
loop
test
and
push
cmpsl
mov
mov
mov
es
sub
mov
pop
aaa
fbld
inc
out
je
mov
lcall
movsl
xchg
fists
fwait
gs
std
push
fstpt
fidivl
or
push
clc
jbe
loop
push
cltd
mov
cld
push
cmp
mulb
inc
xor
cmc
xor
sbb
aaa
adc
ror
sar
push
ss
pushfw
jae
loope
mov
xchg
js
jne
ja
cld
test
popa
movsl
aam
nop
mov
inc
lret
push
out
jo
je
cld
pushf
in
fidivl
push
inc
mov
inc
jo
or
lret
xor
or
and
or
adc
fnstsw
popa
adc
subb
fcoml
out
pop
and
iret
add
lods
cmp
mov
push
adc
fsubrs
into
mov
mov
addr16
mov
cmp
add
scas
loope
cmp
insl
adcl
or
xchg
call
lea
cs
push
add
mov
aas
adc
int
sbb
bound
dec
mov
jb
mov
xchg
fdivrs
add
cmpsl
fmuls
ja
or
repz
pop
and
mov
push
sub
imul
fmull
and
divb
test
push
outsb
clc
mov
xchg
mov
dec
lret
test
adc
gs
or
leave
mov
adc
sbb
xor
add
lock
inc
pop
ja
pop
xchg
stos
jmp
lcall
aas
cmpsb
push
sub
lret
int
sub
in
xorl
stc
pop
sti
xor
push
mov
fwait
xchg
mov
pop
adc
xor
rcrb
add
lock
dec
iret
stc
fidivl
xor
insb
cmp
push
rclb
repz
je
mov
lods
stc
xor
or
mov
pop
xor
or
sti
xlat
sub
cld
and
orb
fs
add
mov
cmp
and
dec
pop
inc
lahf
mov
shll
sub
xor
dec
xchg
mov
pushl
cmp
and
push
bound
cld
imull
and
in
mov
mov
pop
sbb
call
cmp
subb
jecxz
rcr
adc
rcrl
les
bound
mov
or
sbb
mov
outsl
fmuls
and
enter
insb
js
push
jo
repz
cld
push
and
jne
hlt
cmpsl
mov
orl
sub
or
lock
fmull
dec
mov
mov
mov
test
xor
in
push
dec
mov
xchg
psrlq
in
push
pushf
addl
cmc
push
push
xchg
mul
stos
push
xor
leave
je
pop
sarb
das
push
xchg
ja
stos
xchg
ficoms
jo
in
lret
rcrl
xlat
aas
jmp
add
pop
iret
stc
cli
ja
mov
push
xor
insl
push
ss
push
xor
jnp
into
and
out
and
jne
rcrb
cwtl
jnp
fsubr
dec
cmovp
sub
loope
orb
xchg
insb
xor
mov
lret
or
into
or
call
int
inc
sub
incb
push
fdivr
les
push
fcmovu
shll
and
fdivl
dec
dec
out
jle,pt
jmp
bound
iret
popl
jne
jp
mov
bound
nop
dec
or
iret
adc
mov
mov
cmc
bound
stos
sbb
push
inc
mov
inc
cmp
fidivrl
fcoms
sbb
cmpsl
movsl
cmp
lock
sub
sahf
cld
into
fwait
leave
movsb
sbb
ds
xchg
fsts
leave
lea
ret
jnp
mov
lock
mov
lods
push
jge
inc
fstl
and
adc
filds
imul
subl
sbb
xchg
pop
and
icebp
loope
and
cmp
inc
jg
loope
dec
loopne
movl
add
insb
lahf
mov
pop
js
mov
loopne
xchg
and
inc
call
ds
or
jmp
inc
mov
jb
jg
xchg
sub
adc
pop
push
arpl
mul
scas
push
mov
out
aam
dec
xchg
dec
std
cmpsb
adc
cmpsl
jecxz
popf
inc
icebp
shll
add
sbb
push
mov
xor
insl
pop
cmpsb
jb
shrl
lret
mov
jecxz
sbbl
push
mov
xor
test
rcrb
stos
inc
hlt
mov
mov
cli
mov
xor
mov
or
cmp
sbb
pop
lods
scas
xlat
jle
mov
imul
insb
aam
out
push
stos
sbbb
jne
fisttps
add
and
out
aaa
push
cs
dec
mov
inc
out
jle
rolb
push
push
jnp
lret
fistpl
sub
xor
clc
xchg
xchg
testb
jb
scas
push
icebp
out
imul
cli
bound
div
mov
notb
insl
inc
mov
push
dec
sahf
pusha
jl
aad
mov
mov
in
dec
and
jno
dec
in
in
ss
xchg
std
xchg
pop
das
shrl
ljmp
stos
ss
inc
jb
bound
add
frstor
ja
mov
mov
cltd
ja
adc
vmovntpd
sub
ljmp
sbb
push
std
cs
lds
std
or
mov
lea
repz
je
ds
push
adc
inc
test
pop
sbb
cmp
xchg
out
dec
pop
imul
mov
popf
adc
aad
nop
push
fldcw
lea
xlat
nop
daa
xor
mov
xchg
jmp
lcall
les
mov
sub
shr
add
adc
bound
insl
popa
cltd
in
fisubrl
pusha
sbb
and
jecxz
movsb
sub
sub
push
aas
mov
jns
ficoms
jnp
jne
jg
ror
sub
ret
fisttpll
cmp
sub
adc
xchg
shl
dec
ljmp
cmp
or
shrl
leave
pushl
mov
pushf
cmp
sub
ljmp
mov
push
or
arpl
mov
mov
inc
ret
nop
xlat
ljmp
test
push
fstps
cld
push
inc
pop
add
stc
sahf
lock
dec
in
pop
xor
lcall
jmp
imul
xor
push
shlb
outsl
sub
mov
mulb
dec
insl
les
stc
test
mov
cwtl
sahf
stos
mov
movsl
xor
gs
sub
cs
stos
mov
insb
loopne
loopne
push
cli
jo
jno
jns
imul
push
lcall
push
cld
mov
outsl
push
stc
pop
out
sub
xor
inc
or
sahf
cmc
stos
sbb
outsl
dec
addb
dec
or
xorb
push
push
mov
shlb
sbb
add
jg
mov
sarl
and
mov
sahf
mov
clc
inc
sbb
ficompl
fcompl
jno
andl
fdivrl
lahf
lret
xor
mov
pop
mov
cmove
push
mull
inc
sub
cltd
ja
add
add
add
sub
jnp
in
xchg
test
movsl
mov
inc
xor
das
pop
dec
inc
daa
add
movsb
push
lret
loopne
std
inc
xchg
adcl
cld
std
push
dec
sti
gs
adc
mov
iret
in
jg
add
and
sbbb
xchg
incb
gs
mov
mov
pop
sahf
stos
xchg
mov
fcmovb
cmp
add
loopne
xchg
cmpsl
hlt
jmp
into
test
pop
adc
mov
lret
jne
jo
push
out
cmpsb
mov
mov
notb
xchg
les
or
and
xor
dec
xchg
jo
mov
cwtl
or
mov
adc
pusha
xor
sbb
jp
test
lock
cmp
aaa
jmp
lods
shr
xchg
pop
sbb
adc
test
pushf
scas
das
jge
cltd
lods
negb
out
push
and
xor
sarl
or
inc
shl
inc
xor
jb
mov
pop
out
jecxz
popa
fucomp
paddsb
mov
jne
test
pop
mov
mov
or
mov
dec
jae
loopne
mov
and
das
push
or
sub
stos
fsubrp
sub
loope
mov
add
std
pop
push
mov
push
jbe
jnp
gs
push
cltd
add
in
leave
xor
add
mov
mov
xchg
push
xchg
dec
imul
ret
and
mov
rcl
mov
int
cmpsb
call
sub
jg
pusha
inc
out
mov
ret
dec
dec
push
add
mov
lahf
cmp
adc
mov
fcom
cmpl
mov
mov
cmp
dec
sahf
cmpsl
sti
ret
dec
je
cmp
ficompl
jecxz
sbb
stos
jge
or
mov
and
inc
inc
rolb
lahf
inc
stos
push
fdivr
or
clc
mov
imul
dec
mov
inc
bound
mov
add
cmpsb
or
dec
lret
and
mov
and
orl
daa
das
scas
jno
and
call
cmp
mov
imul
adc
outsl
jns
frstor
push
sub
push
subl
pop
lods
cli
pop
inc
dec
sbb
sub
xchg
jo
pop
pop
push
mov
or
lods
pop
imull
mov
inc
test
addr16
std
sub
es
movsb
and
xchg
lock
icebp
inc
mov
and
or
and
aas
out
iret
mov
push
xor
int3
xchg
mov
clc
cmpsl
fs
cmp
xchg
clc
push
out
in
xchg
icebp
inc
xchg
adc
xor
decb
jb
ret
dec
cmpl
mov
outsl
xchg
lea
push
jbe
mov
andl
sarb
push
mov
pushf
push
jns,pt
or
sub
rep
andl
imul
mov
shlb
fidivs
in
cmp
rolb
dec
test
cld
stc
decb
fistl
aaa
cmp
push
dec
cld
or
mov
push
dec
inc
add
mov
xorl
pushf
mov
jl
test
mov
push
aaa
or
mov
imul
int3
mov
pop
js
and
hlt
aaa
dec
hlt
push
shlb
out
inc
and
mov
out
push
add
mov
out
xchg
aad
mov
xchg
aam
outsl
sub
stos
fwait
jmp
cmp
jle
in
scas
mov
lea
inc
or
repz
cmp
inc
jns
mov
dec
and
or
dec
inc
inc
cwtl
mov
cltd
pop
scas
rcrb
es
hlt
mov
test
imul
xor
push
jmp
mov
push
and
clc
sub
xor
int
popa
js
cld
ja
roll
jmp
sub
xchg
sti
pop
jmp
mov
mov
cmp
mov
or
cltd
popa
jno
mov
mov
outsl
inc
int3
mov
outsl
inc
int
jmp
xchg
inc
lea
sub
fbld
jge
cld
xchg
test
and
in
pushf
or
cmpb
cltd
jbe
cmpsl
and
sti
or
psubq
lods
add
fidivrl
or
push
imul
pop
or
sbb
in
sbb
stc
cmpsb
push
shr
xchg
clc
insl
arpl
xor
mov
flds
data16
mov
dec
fcom
or
cmp
xor
sub
ret
sub
xchg
out
push
push
pop
nop
sbb
inc
xor
aam
lods
rorl
mov
pop
xchg
mov
dec
sub
and
daa
mov
lahf
push
cs
dec
movsl
dec
or
sub
popa
scas
and
lret
push
fnsave
mov
xchg
scas
sub
and
repz
popf
inc
xchg
jne
xchg
mov
jge
adc
mov
cmp
repz
inc
dec
mov
xor
cli
pop
insb
mov
cld
jge
movsl
pop
jl
mov
mov
jl
or
pop
mov
daa
and
pop
sub
inc
repz
jl
mov
and
ds
sti
fdivr
insl
stos
imul
mov
inc
dec
lock
xor
pop
lods
sub
icebp
and
cmpsb
js
jae
or
lahf
add
mov
mov
push
adcl
or
aas
inc
inc
in
fstpl
or
or
pop
inc
xchg
mov
testl
orl
add
fldenv
sbb
jo
movsl
cmp
lds
jno
jno
add
in
das
daa
in
fadds
leave
mov
cld
pop
cmpsl
xchg
lcall
push
inc
sub
stos
mov
cmpsb
xor
cmp
jbe
xchg
push
lret
ret
adc
sub
push
clc
loopne
and
pop
jo
rcll
mov
mov
mov
mov
xor
in
mov
inc
call
jno
jbe
and
sbb
js
cltd
imul
dec
mov
testl
jns
xor
dec
test
lret
cs
out
xlat
dec
mov
movsl
xor
mov
xor
pop
leave
inc
in
xor
adc
sub
cli
and
dec
jmp
xchg
popf
mov
mov
insb
xchg
mov
mov
fldt
in
xchg
xor
adc
fst
push
out
xor
andb
dec
cmpsb
mov
mov
addr16
jo
cmc
cmpb
and
das
imul
adc
push
ja
cmp
cs
push
lea
xor
aaa
cmp
cli
mov
lds
lret
shrb
or
aas
adc
enter
sub
push
push
inc
shll
push
jno
rcrl
in
movsb
inc
xor
nop
out
nop
fsubrs
cmp
hlt
inc
shrb
jnp
imul
popf
mov
push
mov
cltd
pop
and
sbb
pop
imul
pop
cmp
les
cld
and
sub
stc
out
lahf
adc
movaps
inc
push
ss
pop
aas
jp
xchg
mov
loope
repnz
cmp
stos
outsb
ja
adc
test
xor
adc
adcl
ljmp
subb
int
push
xchg
movsl
inc
dec
movsl
and
cli
insl
and
cmpl
mov
pop
jg
sbb
add
xchg
movsb
sub
addr16
sbb
adc
cmp
daa
enter
and
mov
fistpl
stc
pop
mov
fnstcw
push
pcmpeqw
push
std
sub
imul
insb
push
pusha
hlt
mov
sbb
call
repnz
ja
aas
lods
pop
pusha
cmp
adc
mov
and
mov
jl
xchg
testl
dec
push
xchg
inc
pop
out
xchg
jno
pop
cmpsb
push
js
loop
shll
addr16
orl
inc
xor
lods
add
jnp
repnz
sub
int
out
mov
inc
mov
lock
test
stos
sub
or
xchg
test
gs
mov
enter
insl
cmc
test
imul
jecxz
lods
shrl
mov
clc
adcl
cmpsl
lret
pop
sub
orb
fcmovne
cld
dec
sub
pop
push
scas
movsl
sub
pop
mov
xor
fcomip
add
mov
and
xchg
je
jae
mov
shrb
adc
mov
lahf
rcll
lret
pushf
rolb
in
mov
clc
cmp
xchg
ja
rcll
lcall
sbb
push
mov
std
xchg
push
test
mov
xchg
cmp
inc
shrb
xchg
xor
jb
cmp
rol
jmp
fcos
and
jg
mov
mov
sub
push
enter
cmp
lods
mov
cli
pop
adc
mov
push
lea
pop
mov
js
adc
adc
cmp
or
xlat
aam
push
inc
addl
shlb
jge
cli
lea
jle
mov
push
popa
fsubrs
in
mov
popf
xlat
inc
sub
inc
dec
or
dec
xchg
outsb
out
jp
jo
sti
push
cld
cmp
cltd
jp
cmp
inc
in
rcrl
mov
lret
cmp
insl
lds
lea
xor
xor
xchg
lahf
pop
xchg
daa
jne
cmc
leave
sahf
cmp
popl
rclb
cmp
or
jmp
xor
imul
call
outsl
mov
xlat
adc
lret
dec
cmpps
push
fdivr
mov
inc
js
hlt
repz
fiaddl
xchg
ret
in
jb
add
fsubr
or
mov
clc
jl
arpl
jmp
sbb
sbbl
inc
xchg
push
xchg
ja
sub
pop
or
pop
jecxz
int
add
jg
mov
xchg
sahf
flds
jns
jns
xchg
rcrb
orl
cmpsl
leave
push
sti
xchg
inc
cmp
lcall
jo
flds
push
jmp
inc
mov
cmp
sahf
aad
push
xchg
ds
mov
add
and
add
bound
lret
fidivrs
mov
subb
test
cmp
arpl
mov
sub
pop
cmp
stos
cmp
mov
xor
or
lret
rorl
daa
xlat
or
add
pushf
stos
jmp
int3
cmc
xchg
sub
orb
sbb
loop
xor
ret
dec
and
dec
xchg
xorl
data16
lret
addr16
xchg
xchg
test
push
std
flds
lods
sbb
cmpsb
dec
inc
adc
sub
ljmp
push
outsl
imul
jge
xchg
arpl
jle
fwait
imul
xor
lea
add
in
jbe
mov
sbb
adc
addr16
fwait
xor
sub
lret
ret
rclb
dec
dec
sbb
add
scas
sbb
lcall
jo
je
mov
popf
push
mov
jecxz
push
icebp
outsl
inc
outsb
xchg
mov
test
in
cld
icebp
fsubrs
out
sbb
data16
arpl
mov
push
and
dec
xchg
dec
dec
shl
add
cmp
fnsave
shr
jo
cmc
addr16
and
sbbb
imul
cli
ss
scas
pop
cli
xchg
outsb
mov
stc
jo
add
enter
icebp
ficomps
add
add
mov
adc
add
adc
test
sahf
mov
or
dec
bound
push
stc
loopne
mov
mov
push
jb
es
fnstenv
fldt
inc
loopne
pop
pop
and
testb
int
add
pushf
sbb
dec
testl
enter
jbe
ret
fsubl
and
in
fildl
sti
dec
sub
ja
pop
in
sahf
jp
cmpsl
jne
popf
mov
lds
out
test
icebp
mov
fwait
divb
dec
mov
out
cmp
mov
or
inc
leave
cmovbe
mov
xchg
lds
dec
sbb
dec
rorb
inc
push
xor
sar
mov
popa
sahf
shlb
ss
cmp
adc
lret
xchg
shll
xchg
cli
mov
ret
stos
leave
pop
cmpsb
out
out
add
push
add
add
rcrb
mov
push
dec
dec
inc
jmp
jne
dec
jl
pop
mov
xchg
sbbb
les
mov
das
popa
in
out
data16
and
push
push
fisubl
outsl
cmc
sub
xor
arpl
xchg
pop
andl
push
aam
mov
stos
sub
xor
pushf
test
mov
and
sbb
push
push
loope
daa
in
scas
adc
fldt
orb
xchg
pop
stos
ja
jae
sahf
cmpsl
int
adc
nop
push
rcll
in
pop
movsb
cltd
pusha
or
adc
adc
sub
sub
adc
jae
cmp
or
sub
jp
bound
mov
dec
xchg
xchg
and
shlb
out
gs
cmpsb
ret
push
in
cmp
sbb
mov
std
xchg
ss
xor
mov
mov
jmp
pop
push
test
pop
fldenv
sbb
add
scas
jp
pop
andl
out
cmp
js
ret
fs
enter
mov
je
idivl
test
pushf
xchg
or
pop
mov
mov
loopne
add
in
xor
sbb
jne
jns
add
fmuls
jmp
mov
lahf
stos
andb
ret
pop
mov
push
xor
fld
imul
mov
fsubs
fimuls
sbb
inc
dec
adc
pop
xchg
mov
aad
jl
shlb
mov
aam
movsb
or
pop
mov
fwait
popa
frstpm(287
and
xor
push
lods
movb
jb
rol
xchg
test
dec
in
push
mov
push
f2xm1
ret
mov
fidivrs
fildll
and
xor
ja
les
daa
mov
push
mov
push
cltd
xchg
mov
adc
iret
inc
in
stos
scas
and
cli
test
sbb
adc
or
cmpsl
pop
or
mov
mov
pop
rolb
push
and
inc
or
xchg
sbb
push
xchg
nop
add
mov
and
dec
jg
fiaddl
bound
fsubrs
dec
je
xchg
popf
mov
enter
mov
push
inc
jo
push
ret
cwtl
or
push
sbb
xor
je
das
xchg
daa
push
idivl
icebp
sbb
sub
xchg
xchg
ficomps
sbb
pop
cltd
jmp
mov
or
scas
stos
push
push
dec
xchg
insl
or
lods
ljmp
xor
jne
mov
lret
outsb
add
add
jle
xchg
movsb
dec
cmp
das
ja
and
pop
pushf
sbb
or
mov
bound
mov
xchg
mov
clc
cmp
out
cmp
and
dec
jg
cli
add
cmp
adc
jns
jbe,pt
mov
jmp
rcll
icebp
mov
xchg
arpl
jge
addb
lods
shl
jg
push
adc
mov
inc
mov
mov
add
aaa
push
push
mov
int
outsl
dec
sbb
mov
and
mov
dec
mov
gs
mov
or
xor
mov
test
cmpl
fxch
ret
mov
adc
sbbl
out
cltd
mov
adc
cmp
loop
xor
mov
sbb
test
call
fsub
dec
pop
jle
decl
dec
hlt
das
sbb
jb
mov
pop
xchg
or
mov
clc
mov
add
icebp
shll
mov
jae
lods
cmp
scas
out
test
inc
cmpsl
add
aas
xchg
push
nop
lret
inc
mov
or
scas
jmp
jne
and
fnsave
je
in
push
clc
icebp
pop
cmp
pop
mov
rclb
jno
jb
xorl
push
xchg
dec
repz
mov
and
aaa
testl
sbb
xchg
mov
fucomp
and
cld
icebp
int
dec
or
jmp
movsb
sub
ret
jo
sub
cs
mov
cltd
pop
pop
xlat
or
jbe
jecxz
or
xchg
ret
inc
mov
dec
jl
mov
xchg
stos
dec
push
mov
xor
rorb
hlt
sub
pop
cmp
push
movsl
rcrl
imul
dec
add
and
inc
jle
inc
and
inc
out
subb
jnp
pusha
mov
cltd
insl
mov
xor
cmp
mov
imul
insb
and
adc
mov
inc
sbb
ljmp
rcrl
add
pop
jecxz
dec
inc
adc
jno
and
adcl
mov
sbb
arpl
sbb
lock
sub
pop
loope
xchg
and
pop
or
cmpl
adc
in
fsubl
outsb
shlb
mov
repz
fistpll
mov
or
inc
int3
jae
sub
inc
enter
fidivs
cmp
mov
sti
adc
jmp
ret
pop
inc
ret
add
cmp
mov
outsb
imul
and
push
enter
jns
sar
mov
inc
push
mov
iret
imul
xchg
outsb
arpl
cmp
jle
dec
movsb
inc
push
pushf
push
inc
repnz
shll
loop
rorl
out
jecxz
nop
out
out
sub
sbb
mov
add
loope
scas
push
insb
pop
cmp
pop
dec
adc
xchg
push
les
mov
dec
cmp
repz
and
int3
cmp
push
xchg
mov
xchg
loopne
inc
lds
repnz
push
pop
push
lret
jecxz
popf
mov
lss
cs
mov
pop
fstpt
sub
cmp
lock
out
out
mov
push
jmp
mov
xchg
mov
xchg
ja
or
and
cwtl
mov
hlt
es
xor
inc
lret
aaa
stc
xor
xor
push
call
sub
xlat
inc
push
sbb
add
out
cmc
mov
test
mov
fwait
xchg
aaa
aas
bound
das
jbe
mov
aaa
sub
jbe
lods
stc
mov
mov
fcoms
ret
push
pop
mov
pop
fldl
fcoml
in
jno
out
div
inc
add
push
icebp
stos
testl
inc
sbb
cmp
jecxz
push
push
sub
cmpsl
loop
and
dec
dec
adc
push
pusha
imul
dec
sbb
andb
pop
stos
movsb
add
sbb
xchg
mov
jns
repnz
cltd
les
mov
jle
jle
addr16
mov
xor
ds
hlt
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
sahf
pop
fmull
inc
cli
leave
pop
pop
bound
mov
add
test
sub
es
test
cmp
mov
or
mov
add
test
loopne
aam
popf
icebp
mov
jmp
pop
pop
mov
test
xor
outsl
cmp
cmp
daa
into
sub
adcb
clc
mov
imul
mov
mov
sub
sub
xor
inc
test
test
xchg
jmp
loopne
popf
sbb
pop
push
jmp
pop
adc
std
inc
mov
or
push
mov
sbb
adcb
push
jmp
xor
pop
aas
jnp
stc
xchg
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
xor
aam
popf
