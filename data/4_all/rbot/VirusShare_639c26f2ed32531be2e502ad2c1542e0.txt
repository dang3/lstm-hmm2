int3
inc
or
add
add
cmp
or
mov
or
or
add
add
add
call
inc
or
imul
gs
xor
cs
insb
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
add
or
jo
or
test
add
or
dec
inc
or
pusha
inc
or
jo
or
test
add
or
add
add
jne
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
inc
or
hlt
inc
or
sub
add
dec
add
dec
add
add
add
mov
mov
sub
cld
lods
shr
cmp
jne
mov
bswap
add
mov
add
sub
dec
jg
pop
pop
ret
mov
add
inc
add
add
add
add
add
aad
scas
pop
popf
lret
mov
cmp
mov
cld
out
add
inc
dec
add
das
push
add
les
mov
bound
add
and
mov
ds
xchg
sbb
xorb
ror
int3
xorb
jo
pop
mov
xlat
scas
fdivs
jecxz
int
enter
dec
mov
fbstp
add
orb
xor
test
incl
scas
push
test
jg
add
sbb
ud0
inc
loop
inc
push
jle
cltd
rorb
jno
shll
faddl
mov
xchg
cmp
mov
ds
sbb
adc
call
repnz
add
jle,pn
push
dec
sub
cli
shlb
rol
fisttpll
sar
push
mov
cmpl
imul
jp
out
mov
push
inc
mov
addr16
stos
sbbl
and
xchg
jns
int3
push
mov
or
hlt
inc
aad
cmpb
lods
dec
jl
adcl
mov
lock
sub
add
pusha
xor
xchg
adc
pop
or
in
jbe
adc
mov
mov
fmulp
cld
xor
sbb
adc
ljmp
dec
push
cmp
lods
dec
mov
lock
xor
adc
popa
or
test
inc
addl
cmp
sahf
inc
pop
outsb
mov
subl
sub
pop
int3
cmp
and
cmp
aaa
push
add
xor
es
inc
pop
xchg
scas
inc
mov
rol
xchg
xchg
xor
adc
add
pop
xlat
pop
js
push
push
adc
push
cmp
insb
popf
and
add
push
in
inc
or
add
mov
dec
inc
adc
pop
pop
cli
pop
repnz
and
sarb
sub
adcb
pop
xor
rorb
into
lods
shlb
xor
inc
clc
sbb
out
dec
aam
or
iret
xchg
and
aad
es
cltd
fwait
popa
add
out
cmp
inc
sub
add
inc
xchg
aad
lock
push
mov
push
fucomp
cmp
adcl
dec
xchg
data16
sbb
aas
adcb
add
data16
test
pop
mov
imul
movsl
fildll
subl
jmp
aad
bound
test
mov
xchg
adc
mov
push
xor
xchg
out
lea
dec
cwtl
push
jmp
pop
sub
inc
sbb
cwtl
jae
and
bound
push
push
xchg
in
cwtl
xor
mov
nopl
in
xchg
addr16
lods
pusha
inc
mov
cld
int3
js
imul
xor
fcoms
pusha
mov
cmp
pop
jl
cmpsl
jb
inc
add
mov
or
lods
fnsave
pop
xor
adc
inc
js
jmp
notb
pop
inc
add
daa
inc
enter
cltd
xor
sub
inc
sub
adcb
dec
insb
mov
sbb
pop
jb
sub
push
xchg
aam
test
push
pop
sub
mov
or
inc
aad
in
mov
mov
mov
adc
test
push
mov
inc
data16
leave
push
pop
adc
mov
adcl
js
leave
fmull
push
mov
popf
jecxz
mov
loop
orl
orl
xchg
stos
adc
push
ret
jmp
add
jge
loop
loope
mov
cs
xlat
mov
jae
pop
add
cltd
or
inc
aaa
pop
or
outsb
add
pushf
fcomps
mov
roll
adc
dec
cld
and
mov
mov
in
sbb
and
adc
cmpsb
cmp
sub
mov
or
xchg
pushf
lods
inc
nop
faddl
shrd
mov
ret
jmp
fidivl
and
sub
insb
in
sub
xor
popf
jp
jns
add
sbb
jae
movsl
mov
inc
push
adc
mov
or
sbbl
das
push
pusha
mov
and
add
xor
mov
mov
ret
push
dec
push
sbb
and
adc
push
push
in
pop
stc
loope
popf
cmp
into
repnz
daa
fnsetpm(287
add
outsb
int3
movsb
gs
jo
inc
xchg
sahf
aas
xor
inc
push
mov
cmpsb
sbb
adc
nop
imul
sbb
add
adc
lea
cwtl
dec
cmp
rcl
and
iret
sub
xchg
mov
in
mov
jmp
rolb
daa
std
ja
dec
sbb
call
or
les
mov
dec
sbb
ja
pop
fs
jno
mov
lcall
mov
fcompl
mov
lods
pop
sbb
cmp
test
push
pop
les
sbb
adc
fisubrl
mov
sbb
xchg
repnz
mov
mov
and
inc
push
shrb
in
int3
inc
adc
mov
imul
xlat
pop
pop
xchg
xorl
fcmovbe
gs
inc
pop
push
push
out
mov
xchg
jnp,pn
xor
jl
push
mov
inc
fwait
test
mov
fucom
fs
int
pop
jge
push
adc
push
fsubrl
cmp
push
lods
lods
ss
sub
mov
out
push
lret
mov
into
pop
outsb
mov
mov
adc
mov
push
or
xchg
or
addl
stos
push
sbb
add
fisubrl
loopne
lods
push
xor
inc
mov
sbb
data16
out
std
ret
loop
hlt
push
stc
dec
roll
dec
lock
imul
sub
pop
push
xchg
adc
inc
pop
sbb
mov
mov
lock
out
das
mov
adc
sahf
mov
add
mov
pop
lods
sete
enter
cmp
pop
fiadds
or
and
dec
add
sub
mov
call
sub
xor
js
xor
push
mov
in
cmp
mov
adc
dec
movsb
sub
mov
je
sti
inc
outsl
sub
inc
sar
es
jns
dec
push
out
xchg
addr16
or
cmp
scas
sets
mov
pop
dec
inc
or
push
sub
xor
dec
add
ret
xor
mov
push
insb
movsl
test
repz
or
cmpsl
mov
pop
and
pop
cmpsl
fwait
mov
xchg
vpunpckldq
sarl
jmp
jl
cmc
fisubrl
push
test
xor
outsl
jne
pop
inc
jl
pop
ds
or
push
das
cli
mov
pop
cmp
jne
and
xsave
xor
push
in
inc
push
inc
lahf
and
rolb
pop
add
aas
fadd
les
in
lcall
es
int
je
rclb
test
dec
push
clc
mov
aam
movsb
and
pop
cmp
lahf
adc
adc
stc
and
scas
inc
mov
push
sahf
cmp
and
addb
push
inc
sub
cmp
mov
jmp
and
ror
xchg
movsl
mov
testl
js
xor
dec
sahf
inc
pop
mov
and
xor
insl
ret
lods
sub
or
add
xor
xor
int3
mov
or
and
movsb
xchg
outsl
into
dec
hlt
pushf
shll
inc
ret
or
imul
xor
insl
add
popl
add
adc
dec
inc
xor
mov
pop
push
push
outsl
jmp
sbb
jo
in
imull
pop
xchg
aad
inc
sub
pop
push
test
fwait
xor
ret
inc
xor
xor
in
pop
inc
xor
add
jp
sub
add
sbbl
pusha
leave
sar
sbb
and
jp
mov
mov
jnp
inc
pushf
pop
lcall
ss
cltd
mov
add
out
push
sahf
mov
jecxz
push
push
ds
sti
cmp
icebp
out
push
stos
push
inc
cmp
les
and
sti
fiadds
out
push
push
mov
jp
shll
test
dec
inc
shll
cld
pop
callw
ljmp
les
ret
cmp
inc
or
pop
inc
mov
cmpsb
repz
adc
dec
lcall
aam
cmp
mov
add
adc
add
loop
or
stos
pop
or
mov
jns
out
pop
xchg
inc
int3
mov
mov
xchg
add
mov
insl
jp
mov
incb
adc
shll
or
fistl
lds
push
cmc
cmp
ficompl
mov
mov
inc
stos
pusha
pop
mov
or
loopne
movsl
addb
fsubl
and
xor
mov
or
pusha
loope
mov
pop
sbb
into
cmp
icebp
add
mov
bound
fwait
cmovl
aam
loopne
in
push
gs
push
ss
pushf
adc
add
jne
daa
adc
push
enter
xchg
rcll
and
scas
push
sbb
pop
and
sub
lods
mov
aaa
adc
lods
sbb
cli
dec
sub
int3
sar
mov
lret
inc
fldl2t
cmpb
xchg
lods
lds
leave
aam
push
dec
xor
adcl
push
inc
dec
pop
adc
out
jp
daa
mov
jo
inc
add
scas
lea
cmpsb
jbe
call
xor
pop
or
dec
push
scas
mov
dec
pop
lea
fiaddl
sahf
jo
nop
in
rorb
jno
sar
rcr
out
in
mov
pop
or
dec
data16
push
dec
and
push
lods
cmpsl
adc
push
dec
fidivl
and
pop
add
cmp
push
dec
cmp
xchg
mov
sub
roll
mov
xchg
into
cltd
push
pop
push
pop
cld
or
andb
or
ret
loop
sub
jo
push
or
in
je
dec
xor
sbb
ljmp
cmpsl
inc
or
dec
lds
xor
pop
add
mov
mov
mov
sbb
mov
sub
adc
lock
jae
pop
inc
adc
cmpsb
shll
stos
jp
pop
dec
in
lret
mov
test
xor
jnp
loop
mov
jb
test
nop
or
push
mov
orl
stos
add
mov
mov
xchg
cmpsl
pop
stos
out
jnp
ds
inc
add
subl
sbb
mov
dec
sub
rcl
xor
xchg
in
jl
push
or
dec
and
rolb
xchg
or
inc
dec
mov
int3
pusha
pop
scas
inc
imul
mov
fcmovne
and
and
ljmp
push
in
test
or
push
mov
insl
xchg
out
add
rclb
fld
movsb
dec
adc
push
or
mov
lea
jb
shlb
int3
loopne
outsl
adc
or
push
in
cmp
cwtl
ret
ret
jl
icebp
cmc
lahf
mov
pop
pop
push
cwtl
xlat
cmc
or
fldt
in
xchg
and
leave
insb
in
sarb
xorl
clc
ret
sbb
adc
js
pop
shlb
and
test
and
push
jns
loopne
mov
cmp
inc
mov
and
sbb
fnstenv
xchg
lock
push
sahf
and
pusha
cli
ret
xlat
fcmovnu
rcl
clc
mov
stos
das
int3
xorl
push
lret
pushf
pop
dec
pop
or
scas
stos
pop
sbb
inc
movsb
add
xchg
pusha
fcoml
lods
mov
and
jl
fidivl
sbb
or
out
loope
cmpsb
or
xor
iret
ficoms
dec
jnp
inc
dec
mov
and
cmp
or
ss
mov
cmp
inc
xchg
scas
pop
lcall
mov
cmpsb
or
push
xchg
push
adc
jb
push
sbb
dec
jecxz
xchg
pop
lahf
dec
and
fdivrs
push
dec
sub
push
faddl
ljmp
add
movsl
adc
mov
sub
popa
je
scas
cld
mov
paddusb
jmp
std
jno
andl
imul
mov
add
adc
ja
out
sub
adc
shrl
loope
jbe
les
mov
lods
mov
cs
push
popa
jnp
jno
xchg
nop
add
pop
push
loopne
pushf
sub
inc
int3
icebp
xor
out
push
out
mov
push
subb
es
in
lret
cs
pop
xchg
jbe
pop
inc
inc
movsl
mov
inc
punpcklwd
jg
push
add
jb
or
dec
add
cli
imul
daa
movsb
dec
mov
loop
push
pop
cwtl
mov
pop
clc
lds
xchg
cmp
cmp
pop
ds
scas
push
jns
shlb
inc
mov
and
mov
push
and
mov
add
data16
call
mov
and
movsb
icebp
pop
sub
sbb
test
ret
sarl
insb
push
inc
rorb
ss
fnsave
cmpsb
shl
fwait
lcall
pop
jmp
jmp
cld
shlb
shl
lods
push
cmpb
into
xchg
jmp
or
lods
and
aas
mov
into
lods
shrl
dec
and
push
sub
sub
pop
test
mov
mov
fists
inc
outsl
or
stc
mov
cs
xchg
loop
pop
pushf
jne
mov
adc
sub
add
lret
inc
in
jmp
stos
in
adc
addr16
push
sbb
mov
or
adc
mov
adc
jp
push
mov
into
add
dec
mov
mov
pop
or
mov
push
mov
lret
jmp
and
sbb
mov
push
inc
xchg
mov
push
cltd
pop
les
les
loop
jecxz
or
jb
adc
fcomps
js
and
in
loop
inc
loop
xor
rorb
int
shlb
xor
inc
outsl
adc
inc
and
adc
xor
mov
push
inc
xchg
and
cltd
add
mov
test
pop
les
pop
add
imul
sub
inc
xchg
notl
in
and
int
mov
dec
sub
xor
or
inc
in
movsl
jmp
sub
cwtl
push
dec
adc
sbb
push
shlb
sub
sub
gs
shll
sub
outsl
into
fisubrs
clc
push
dec
adc
pop
inc
push
and
scas
or
jb
xchg
pop
or
mov
mov
add
lcall
loope
mov
pop
push
stos
push
divl
int3
jmp
sub
push
sub
or
mov
lret
mov
jae
fld
outsl
inc
cmp
sub
and
mov
cmp
in
and
jb
xor
xor
icebp
pushf
addr16
les
leave
cmp
lahf
outsb
pop
daa
mov
adc
insl
bound
mov
cmc
sahf
sub
popa
jmp
sbb
mov
loopne
pop
addb
sub
pop
dec
mov
call
clc
dec
or
cltd
and
orb
inc
nop
nop
out
and
jnp
pop
and
pop
popf
pop
popa
loop
aaa
cmpsl
mov
nop
enter
popa
aad
negb
sbb
ss
inc
add
sbb
mov
sarb
adc
ret
mov
subb
jge
mov
adc
and
popa
stos
xor
jbe
inc
das
popf
lods
sbb
fistpl
clc
mov
cmpb
or
adc
mov
pop
popf
int3
popf
and
cmpsb
cli
nop
or
mov
out
mov
stos
cli
popa
xlat
shlb
xor
in
inc
and
inc
mov
sti
pushf
mov
xlat
mov
sbb
or
mov
push
mov
inc
nop
xchg
xorb
gs
xchg
in
out
or
int
daa
xor
xor
add
mov
leave
pop
mov
insl
add
xor
xchg
nop
cltd
mov
fstps
and
out
ss
cmpsb
inc
pop
rcrl
insl
inc
sbb
xchg
sub
inc
add
jae
dec
xor
sti
aam
push
xchg
daa
ret
cmpsb
int3
shll
insb
adc
mov
pop
pop
inc
push
sbb
push
test
fsubl
xchg
inc
shll
push
cmpsb
fstl
xchg
dec
bound
cltd
out
fs
pop
in
mov
push
mov
dec
aam
lret
mov
and
add
mov
inc
decl
cmpl
push
push
jmp
popf
cmp
loopne
xor
orl
fdivs
test
xchg
rorb
inc
sbb
insl
gs
push
push
daa
popa
and
push
inc
fwait
leave
push
and
and
inc
sub
mov
imul
inc
sbb
dec
lods
int
orb
fldenv
or
sub
mov
cmp
mov
mov
in
jmp
add
cltd
lret
mov
pop
lahf
sbb
cmp
sbb
mov
sub
mov
adc
lcall
les
inc
mov
outsl
and
adc
xor
pusha
xchg
lods
ficoml
add
fdivrs
jmp
or
adc
shr
dec
stos
jnp
ljmp
pushf
sub
outsl
mov
add
fistpll
xchg
popa
pop
inc
mov
loop
subb
das
shl
scas
sub
pop
ja
test
add
lods
cmp
out
test
push
pop
cmpsb
xchg
clc
mov
sub
mov
inc
adc
sub
mov
pusha
int
pushf
or
adc
enter
mov
dec
and
mov
inc
mov
fidivl
add
aam
fs
xor
daa
rcrb
enter
inc
xchg
imul
adc
cmp
bound
sbb
roll
clc
mov
or
orb
repnz
call
jae
sub
fs
sub
popa
mov
cs
out
push
jo
repnz
call
sub
mov
jmp
sbb
cmc
movsl
sub
mov
nop
out
mov
lcall
xor
rol
jle
and
rolb
dec
mov
pop
sub
enter
and
and
inc
ss
push
pop
shl
negb
in
sbb
jno
lea
rorb
or
adc
fwait
enter
mov
outsb
cld
xchg
adc
adc
scas
rolb
dec
mov
xchg
sbb
xor
xchg
xchg
mov
push
fisttpll
mov
inc
ret
adc
pop
pop
mov
push
mov
dec
insb
or
rorl
sahf
test
or
sub
mov
or
cmc
cmc
scas
stos
adc
and
push
push
mov
insl
add
add
xor
adc
jp
or
popa
inc
inc
xchg
push
orb
dec
aad
fcomps
sub
mov
sbb
sbb
shl
xchg
int
movsb
mov
ret
push
pop
mov
dec
mov
push
je
push
adc
mov
mov
mov
mov
ficomps
sarl
sub
cwtl
mov
pop
movsb
xchg
add
sub
dec
adc
fcoml
jmp
mov
xchg
mov
fidivrs
bound
sub
sub
mov
xor
push
movsb
cwtl
inc
cmp
mov
stos
inc
adc
sbb
les
mov
cld
mov
dec
int3
xchg
sbb
sub
mov
data16
or
cmp
jbe
mov
pop
pop
push
mov
mov
push
sbb
pop
adc
inc
lds
out
push
xor
inc
pop
out
and
mov
add
push
nop
mov
mov
int3
jmp
mov
ljmp
fldenv
cld
and
xchg
or
cmp
mov
and
sahf
pop
mov
shlb
pop
adc
push
shrb
das
mov
push
inc
rorl
cmp
dec
and
xor
je
loop
mov
xchg
mov
cmp
lcall
sbb
pop
add
add
xor
adc
xchg
mov
adc
xorb
movsb
inc
stos
xor
imul
jb
and
and
nop
scas
cmpb
iret
pop
jae
or
loop
outsl
sbb
jne
mov
ret
adc
inc
jo
out
dec
cmp
xchg
jae
xchg
sbb
inc
idivl
int
add
and
adc
or
loopne
sub
dec
push
sbb
mov
inc
mov
add
inc
xchg
pop
and
inc
add
xchg
ret
in
fimuls
rclb
xchg
lret
divl
inc
mov
dec
mov
pushf
shlb
loope
mov
mov
cs
mov
xchg
rcrb
or
pusha
xchg
xlat
xchg
pop
push
mov
movsl
mov
fwait
pop
scas
and
ror
xor
jl
mov
jns
xor
cmp
add
sub
and
scas
arpl
jle
gs
push
cmpsb
shll
daa
sub
cmpb
sbb
mov
aam
call
xchg
hlt
mov
jbe
test
adc
xchg
jp
rol
pop
adc
testb
dec
into
ss
jns
sub
int3
jne
lcall
lret
arpl
shrb
sbb
and
js
std
xchg
jo
and
push
mov
ja
mov
pop
cltd
scas
xchg
shll
xchg
addr16
cmp
ret
cmp
dec
inc
movsl
popa
add
and
xchg
adc
scas
cmp
inc
and
adc
data16
repz
popa
test
lret
int
and
jnp
lretw
insl
movsl
dec
inc
pusha
pop
sar
test
jne
sub
cmc
lahf
sub
adc
pop
dec
adc
ljmp
daa
data16
pop
fmul
mov
xchg
mov
stos
pop
jp
stos
test
pop
call
test
mov
and
loope
scas
ja
inc
test
push
jbe
fcoml
adc
loopne
std
mov
inc
push
cmp
ljmp
movl
sbb
sub
in
mov
test
inc
and
inc
outsb
sahf
dec
jne
xor
add
cmp
insl
adc
sbb
mov
out
cld
insb
lcall
push
sbbb
xor
cmp
subb
int3
fwait
push
aam
in
stc
scas
and
loopne
add
or
sbb
call
rolb
cmp
add
sbb
or
pop
adc
pushf
pop
cmp
je
mov
fmull
outsl
loop
xor
adcb
cmp
mov
pushf
outsb
test
in
push
cld
mov
stos
dec
stos
mov
lds
mov
pop
lods
es
jmp
xchg
lret
orl
loope
dec
imull
jnp
push
cs
lods
and
bound
xchg
aas
rcrl
and
adc
push
push
popa
pop
inc
jge
pop
inc
xchg
mov
push
add
inc
adc
in
sbb
aad
in
and
push
push
in
inc
cmc
lods
push
out
enter
out
and
mov
and
cld
mov
lock
push
pop
inc
mov
jo
lret
orb
fld
adc
and
stos
incb
mov
mov
inc
and
lods
mov
mov
push
sbb
leave
sarb
push
xchg
cmc
mov
sbb
scas
jge
mov
xor
cmp
add
cmp
push
or
push
or
mov
flds
push
inc
mov
sbb
lret
or
test
shlb
mov
sub
mov
inc
loop
xor
and
jae
cmpsb
mov
cs
jne
inc
mov
and
jecxz
pusha
lahf
and
mov
insb
mov
stc
xor
out
push
test
mov
inc
adc
repnz
ret
push
push
fcomps
xchg
test
fisubs
sbb
lret
add
jo
mov
arpl
and
gs
out
daa
cmpb
push
mov
aam
xorl
lds
mov
js
cmc
call
push
cmpb
dec
push
push
push
inc
pop
test
sub
and
aas
test
xor
mov
mov
jg
cmp
push
xorb
out
xlat
mov
f2xm1
push
popf
call
jns
inc
and
gs
jno
aad
sub
fnstenv
or
loop
andl
inc
and
pusha
sahf
scas
gs
test
xchg
cmpsl
mov
mov
cmc
pop
xchg
dec
roll
out
add
xchg
xchg
add
and
and
sub
mov
mov
sub
push
fistpll
adc
inc
vmovlps
and
add
lea
rcll
imul
sbb
and
pushf
and
aam
dec
push
sarl
pop
das
jecxz
dec
loope
addl
int3
dec
push
rcrb
out
pusha
ja
mov
mov
adc
push
lret
outsl
shl
lds
add
inc
push
arpl
pusha
push
add
add
push
mov
jno
xor
pop
xchg
pop
dec
or
jbe
rcll
sub
xchg
adc
test
inc
and
test
test
mov
push
sub
mov
test
pop
das
jnp
sub
clc
mov
divl
imul
pop
out
out
cwtl
sub
push
insl
rcll
pop
and
je
pop
scas
jg
mov
cmp
in
mov
out
jo
jns
adc
mov
mov
push
pop
adc
xrelease
push
cmpsl
push
movl
jg
test
out
adc
cmpl
lds
pop
mov
mov
aad
adc
cmpsl
enter
fists
jno
insl
pop
cmp
std
es
loope
ljmp
out
sub
cmp
adc
jns
daa
mov
push
cmp
ja
fdivrl
or
rcrb
and
inc
and
mov
fldcw
dec
shlb
loopne
jmp
aad
push
xorb
cwtl
loope
push
inc
jle
fmull
cmp
lods
loopne
push
insl
xor
or
lods
xor
dec
cmp
push
push
mov
arpl
mov
push
pop
or
sbb
aaa
sub
push
shrl
inc
dec
and
dec
nop
xor
mov
xchg
xor
push
pop
dec
mov
in
mov
add
push
addr16
xor
in
xchg
pmaddwd
lock
or
cwtl
push
je
xor
pushw
retw
fnsave
mov
xor
dec
fwait
push
push
pop
and
sbb
inc
lret
adc
sbb
js
adc
lcall
or
add
loope
mov
add
es
icebp
lea
or
pop
ret
bound
dec
fmull
dec
popa
imul
jno
aad
idiv
ret
add
call
adc
mov
movsl
xor
test
not
pop
lds
mov
add
data16
inc
sub
stos
mov
cld
xchg
inc
je
mov
movsb
cmp
ds
inc
xor
or
pop
or
or
hlt
shll
cmpsb
mov
xchg
outsb
push
inc
fisttpll
fdivrs
sub
popw
aam
sub
insb
out
xchg
or
rolb
test
jge
lods
repnz
xchg
jg
add
pop
pop
and
ljmp
js
jno
gs
ret
loopne
fistps
fs
popf
or
mov
rcrb
adc
ret
and
aam
dec
cmp
js
test
jo
mov
repnz
mov
out
mov
push
cmp
arpl
dec
adc
jge
cmp
inc
imul
lcall
imul
and
cmpsb
stos
hlt
test
push
sbb
in
lea
mov
xchg
xor
adc
mov
in
dec
dec
jns
fsubrs
pop
cmpsb
cmp
jne
jecxz
push
jle
aam
add
and
cmp
push
lret
or
mov
jl
sbb
pop
mov
xor
mov
sti
enter
repz
push
adc
jle
fsub
in
mov
addr16
push
test
mov
sti
fidivl
xor
inc
jmp
mov
sub
mov
dec
and
inc
add
xchg
hlt
das
adc
sub
inc
push
movsl
mov
jle
shrl
cmp
adc
ljmp
add
inc
into
jbe
mov
push
jno
mov
fs
xor
add
pusha
in
or
repnz
mov
outsb
inc
in
mov
mov
push
lcall
and
xor
push
jge
sbb
xchg
push
pop
add
pusha
push
sbb
lcall
inc
xchg
xor
stos
mov
pop
fnsave
mov
cmpsb
jno
in
mov
test
test
sub
in
fs
fucomp
sub
push
adc
movsl
xchg
xchg
xchg
insl
sti
ljmp
insb
icebp
sti
and
jle
cmc
cmpsb
ljmp
inc
xchg
jbe
test
push
adc
xor
xor
jbe
pushf
lock
or
push
in
outsb
imul
adc
aad
push
in
and
arpl
imul
out
jle
mov
jno
xchg
enter
jge
adc
mov
xchg
ss
cwtl
xor
mov
loope
ret
jno
jecxz
xor
mov
or
std
popf
mov
clc
into
fistl
gs
and
mov
jnp
xorb
jb
loop
stos
popf
shl
call
cmc
nop
inc
dec
lds
sbb
fwait
cmp
scas
leave
les
or
jb
lahf
dec
lds
sub
xchg
cmpsb
sbb
lret
addb
push
adc
jmp
bound
scas
or
fsubs
cmp
pop
or
test
or
test
jge
shlb
jae
lea
test
cmp
mov
movsb
xchg
divl
add
aaa
mov
dec
mov
jp
adc
mov
sbb
in
aaa
fbstp
push
inc
inc
mov
pop
lahf
inc
and
sbb
adc
jbe
mov
lods
cmc
icebp
jmp
sub
mov
jmp
sub
stc
pop
movsl
jo
ret
dec
mov
or
sub
mov
mov
cmp
mov
push
out
inc
push
mov
xor
jp
cld
inc
mov
shrl
fbstp
adc
sub
sub
pop
dec
pop
xchg
mov
pop
or
push
mov
pop
mov
aad
or
mov
mov
sub
xchg
ds
inc
nop
adc
sub
sbb
test
je
and
ja
jno
xchg
pusha
pop
insl
movsl
rcll
dec
adc
cmp
repnz
pop
rorl
xor
xchg
sarl
stos
js
into
and
push
les
shrl
adc
js
inc
adc
adc
bound
inc
test
outsl
cmp
add
mov
push
aas
loop
inc
int3
loop
cwtl
rcll
push
lds
jge
testl
mov
cwtl
ja
mov
sahf
push
bound
aam
pop
push
fwait
mov
mov
jo
fcoms
inc
outsb
subb
movsl
or
or
pop
sub
mov
mov
or
test
popf
push
pop
dec
movsb
jne
mov
jno
adc
push
je
xchg
add
xor
mov
rcr
test
or
dec
xor
mov
lahf
dec
sbb
mov
or
in
mov
mov
jno
mov
mov
jp
xchg
clc
xor
push
dec
lods
or
jl
xchg
jmp
push
lret
test
stos
adc
xchg
imul
add
and
cmp
jmp
mov
in
sub
mov
xor
lcall
add
adc
mov
movsl
jne
mov
stos
aam
and
into
mov
add
lret
test
push
add
rcl
cmp
leave
mov
loopne
xchg
and
push
mov
or
shrb
jbe
out
or
adc
mov
sarb
sti
dec
clc
pop
cmp
or
dec
inc
and
xor
add
cwtl
andb
xlat
shll
mov
xor
jb
push
mov
in
sbb
sub
jo
mov
fbstp
ss
mov
inc
inc
shlb
rol
pop
mov
mov
lds
lret
and
inc
in
fnstenv
jno
jmp
push
pop
lds
xlat
nop
orb
sub
stos
adc
mov
jns
test
mov
addb
daa
in
xchg
jo
cmp
rcll
mov
arpl
lods
incb
ficoml
jmp
stos
xchg
scas
xchg
add
shll
cmpsl
insl
outsb
jno
pop
pop
leave
shrl
mov
mov
imul
sbb
and
fnstenv
bound
mov
shl
and
cmp
add
cld
cmp
xor
lahf
dec
sbb
inc
sarl
insl
sub
test
lahf
sarl
test
xchg
and
cmpsb
int3
add
test
mov
xor
cs
fcoms
adc
out
es
lcall
aad
or
out
push
push
pusha
push
inc
mov
push
push
mov
lods
cmp
out
mov
pusha
push
js
xchg
lcall
push
in
push
cmp
sbb
add
outsb
push
iret
adc
cmp
lea
mov
repnz
and
xchg
cs
jno
aas
pop
mov
push
pop
imul
stc
fisubrs
int3
dec
lods
jns
jg
sbb
dec
mov
push
pop
mov
ret
ja
xlat
push
and
add
add
imul
xor
inc
inc
mov
or
sub
lret
mov
jge
pop
pop
pop
jb
jno
stos
je
xchg
or
inc
push
dec
popa
push
xlat
pop
mov
lods
xchg
lret
cli
mov
repnz
push
fnstenv
rcrb
addb
inc
dec
xchg
sub
xor
cwtl
fsts
icebp
adc
sbb
js
xor
sbb
pop
cmp
jmp
xor
push
push
dec
test
pop
xor
jo
dec
mov
mov
push
add
push
rclb
mov
pop
add
test
sbb
jne
xchg
jns
xchg
rcrl
ljmp
fs
jge
jp
jae
into
adc
sbb
and
or
pop
mov
repz
jae,pt
clc
push
jno
movsl
nop
pop
lcall
repnz
xchg
test
sub
push
push
call
xlat
out
testl
cmpsb
mov
sbb
mov
xchg
push
rcr
inc
add
dec
push
pop
pop
mov
sbb
das
test
out
push
jae
inc
mov
movsl
sub
fsubrl
dec
movsb
mov
aas
cmp
adc
mov
shll
xor
mov
stos
sbb
scas
jb
bound
dec
or
mov
push
lock
or
pusha
call
mov
xor
in
repz
into
subl
std
popf
sub
das
sub
icebp
cmp
inc
xchg
dec
divl
or
les
fmuls
lock
cmp
pushf
popa
pusha
jae
shrl
mov
mov
mov
and
jnp
dec
js
insl
mov
or
push
adc
pop
int
scas
scas
xchg
mov
adc
out
scas
loopne
jae
out
jne
cmp
pop
pop
sub
std
inc
or
cmc
notl
mov
ficoml
jnp
adc
das
in
imul
lcall
cmp
inc
push
sahf
lret
fwait
push
mov
xor
sbb
insl
dec
xchg
add
rorl
mov
testl
les
arpl
in
rcrb
push
sbb
add
lock
add
stos
test
dec
mov
jp
sti
jle
mov
adc
movsb
or
movsb
call
adc
scas
ret
push
adcb
adc
outsb
and
or
xchg
outsb
lods
mov
push
rolb
ret
mov
cli
and
addr16
mov
push
inc
or
sbbb
adc
cwtl
xchg
dec
cmc
adc
cmp
add
in
inc
movsb
xlat
mov
inc
mov
pop
mov
sbb
push
mov
les
movl
push
lret
xor
addr16
bound
pop
xchg
arpl
jo
call
jbe
test
sub
dec
aam
xor
xor
cmp
jp,pn
fisubl
xchg
mov
scas
and
adc
jp
mov
push
nop
add
inc
loop
mov
xchg
inc
dec
sub
xchg
inc
cltd
inc
and
inc
sub
lahf
push
mov
movsl
inc
test
stos
inc
sbb
lods
inc
mov
inc
scas
add
inc
push
inc
push
mov
enter
lcall
sbb
xchg
sbb
push
sub
push
dec
push
loop
inc
push
push
xor
push
repz
rcl
jno
inc
dec
and
cmp
cmp
push
notl
push
aad
push
clc
adc
or
popl
jnp
call
outsl
adc
jnp
addr16
mov
sub
sub
jno
daa
push
dec
rclb
jge
testb
stos
cwtl
mov
inc
mov
xchg
sbb
stos
or
or
push
cmp
outsb
insb
inc
mov
jne
aam
sti
adc
or
clc
add
fists
mov
aaa
loop
and
jb
aas
cmc
fcmovb
out
pop
xchg
xchg
inc
and
cmp
pop
dec
adc
repz
arpl
mov
inc
or
pop
dec
inc
lea
adc
stc
adc
add
xchg
outsb
mov
ret
inc
xchg
jl
in
xor
sbb
inc
movsb
mov
jne
xor
jmp
out
jb
add
pop
shr
movsl
ret
push
stc
addr16
mov
cmp
test
cli
out
les
insl
jge
inc
hlt
arpl
mov
pushf
mov
lds
xchg
mov
xor
lods
jne
lods
test
xchg
dec
dec
cmp
sahf
or
adc
xor
pusha
lods
pop
sbb
cs
outsb
aam
pushf
jnp
push
adc
test
and
inc
cmp
mov
pop
sub
lea
insl
jbe
mov
out
sub
inc
je
jg
cmpsl
push
xchg
fistpll
cs
in
cmc
xchg
daa
push
clc
test
push
pop
push
add
popf
or
xchg
fwait
or
pop
mov
jo
xor
jge
xchg
sub
cltd
loopne
rorl
xchg
xchg
mov
pop
roll
xchg
subl
cmp
push
inc
mov
push
push
push
jl
cmpl
sbb
xlat
movsl
or
cmp
sub
xorb
ss
clc
dec
fucomi
hlt
dec
sub
xchg
jae
into
adc
jo
inc
dec
in
cmpsb
adc
adc
gs
xchg
daa
lea
xchg
and
inc
test
dec
sub
popf
mov
cmp
mov
inc
sub
fnstsw
xor
int
les
aaa
inc
scas
xchg
dec
push
insl
mov
stos
stc
icebp
mov
aam
out
imull
lahf
and
pop
sbb
pop
sarb
addb
xor
jle
xchg
dec
jle
and
inc
pushf
ljmp
dec
ss
add
push
testb
add
push
cmp
pusha
mov
fmul
xor
adc
stc
test
out
mov
adc
push
inc
ja
cmp
or
icebp
in
xor
push
jne
inc
mov
push
dec
in
in
mov
fs
pop
add
sbb
imul
outsb
add
push
scas
or
aas
or
or
jbe
inc
sbb
leave
pusha
shl
scas
lret
mov
addr16
fdivl
mov
sbb
sub
mov
mov
fimull
adc
cmc
dec
pop
mov
push
adc
or
xchg
mov
mov
mov
cld
in
or
call
loopne
push
sbb
mov
scas
mov
addr16
sbb
sub
leave
imul
mov
mov
inc
mov
cmp
mov
inc
sbb
sbb
sub
inc
enter
test
aaa
xlat
loope
and
mov
jo
mov
insb
ret
fidivl
jmp
sub
mov
enter
test
test
jmp
xor
inc
clc
push
incl
ret
out
pop
xchg
sub
jmp
pinsrw
inc
xchg
aad
pop
fs
insl
pushf
jmp
xlat
cmc
xor
inc
clc
movntps
lret
push
cmp
dec
push
xchg
xchg
sbb
cmpsb
or
sarb
ret
and
clc
inc
lods
jge
rol
add
push
and
repnz
push
push
push
push
mov
xor
jns
popf
mov
sub
sub
xor
scas
outsb
ficoml
fcmovb
lahf
or
push
subl
sbb
mov
test
inc
sbb
stos
repz
pusha
cmp
sbb
sbb
or
cmc
test
andl
or
mov
stc
mov
xchg
xchg
cmp
test
pop
push
lock
adc
scas
sbb
mov
test
leave
lods
int
push
mov
repnz
loope
push
sub
dec
inc
pop
sbb
pop
daa
adc
mov
and
test
xor
push
sahf
test
stos
inc
in
stos
and
xor
in
adc
cltd
mov
rorl
add
lea
aas
loopne
push
pop
enter
or
and
cmpsb
jp
sub
movsb
cmp
mov
ret
sahf
fstps
adc
lret
popa
lods
jbe
jge
push
rcrl
aad
fdivr
and
and
test
sub
ret
cmp
insb
mov
mov
cmpsb
bound
add
popf
pop
mov
pop
insl
dec
mov
arpl
add
mov
fisubrl
movsl
pop
test
mov
das
add
mov
xor
sbb
clc
xor
pop
inc
jno
inc
sbb
aas
push
inc
xorl
dec
test
jecxz
scas
sub
in
into
in
and
fs
les
and
mov
mov
xchg
je
loopne
icebp
inc
xchg
and
cmpsb
adc
mov
mov
lds
push
leave
aas
cwtl
pop
adc
enter
cmc
nop
gs
dec
inc
fidivs
dec
inc
stc
mov
mov
mov
ret
pop
insb
and
stos
inc
stos
dec
cmpl
adc
xchg
clc
cmp
daa
xchg
inc
pop
xor
push
inc
cvtps2pd
mov
fldcw
mov
pop
mov
repz
mov
sub
mov
movsb
add
adc
push
mov
push
mov
mov
mov
cmp
cmp
mov
pop
push
popf
in
out
dec
inc
ja
lds
inc
mov
test
dec
rorb
pop
gs
add
aam
iret
test
xchg
outsb
ret
sbb
jge
movsb
lahf
shrb
mov
les
das
mov
push
addl
dec
addb
and
js
roll
push
lea
fnstsw
out
dec
sbb
xchg
mov
inc
jle
push
xchg
sub
pop
call
add
push
popa
xor
sbb
push
out
push
fldl
mov
loop
or
outsb
pop
js
bound
mulb
mov
mov
push
inc
cmpsb
or
cmp
or
bound
xchg
jg
push
add
test
mov
mov
add
lods
test
cvtpi2ps
xchg
stc
ja
lods
pop
in
push
test
and
push
lahf
ja
push
test
dec
push
inc
jl
popf
push
push
adc
lea
movsb
add
shlb
fisubrs
inc
stos
mov
movsb
shll
es
mov
pop
in
mov
inc
or
ret
pushf
push
sub
mov
inc
fildl
xchg
mov
lds
leave
xchg
add
fsubrl
and
nop
lds
adc
sbb
jecxz
jbe
out
push
cwtl
ja
fldcw
mov
pop
orb
andl
xor
mov
adc
out
sbbb
push
mov
rorl
xchg
cmp
loopne
cs
pop
lods
and
push
pop
in
inc
push
xchg
jp
add
and
les
sub
mov
ret
lea
xor
cmp
iret
rcll
xchg
ss
cmp
cmp
xchg
and
push
stc
bound
movsl
dec
dec
jl
and
call
push
inc
mov
jl
add
pop
add
fcompl
xchg
pop
add
jmp
jbe
inc
jbe
inc
mov
mov
push
mov
jmp
xor
mov
dec
popf
dec
inc
frstor
mov
and
dec
push
mov
mov
jb
lret
call
sbb
push
xchg
sbb
test
push
pushf
fucomp
divl
pop
scas
xor
push
and
mov
mov
js
lahf
insb
add
in
pop
iret
mov
arpl
icebp
pop
xchg
push
push
xor
int3
aad
jbe
or
imul
gs
mov
gs
out
fcoml
push
and
add
hlt
xchg
mov
jp
or
out
cmp
adc
push
sbb
cld
xchg
add
xchg
pop
mov
mov
clc
leave
adc
sbb
push
inc
inc
push
int3
imul
and
mov
gs
fdivs
lods
imul
in
and
in
inc
repnz
mov
call
and
inc
inc
lret
or
or
xchg
lcall
es
cmp
mov
sub
ljmp
mov
into
pusha
fbstp
fs
cli
ja
jmp
jg
repz
aaa
jmp
lahf
sub
pop
cli
mov
inc
mov
adc
adc
orb
inc
pop
cmc
aam
xlat
jbe
fcmovb
xor
insl
outsb
and
and
push
dec
push
pusha
clc
inc
or
pop
lods
xor
mov
fwait
loop
fwait
cli
loop
jno
push
add
pop
scas
enter
dec
or
adc
jne
jle
push
dec
fdivl
adc
add
or
or
push
mov
push
movsb
lahf
leave
jmp
inc
sbb
aad
je
stos
icebp
jo
or
pusha
movsl
push
dec
dec
jg
icebp
pop
stc
mov
mov
ds
int
ljmp
test
enter
test
push
enter
mov
and
repz
bound
test
icebp
xor
inc
sub
jae
cmp
or
hlt
shll
cs
sbb
and
pop
mov
jp
jl
sbb
decb
hlt
or
mov
loope
or
lock
sarb
aaa
add
push
sub
aaa
mov
sbb
xchg
adcl
jl
xchg
adc
pop
cli
andl
test
sbb
call
add
jg
out
xchg
enter
or
pop
outsb
pop
addl
arpl
mov
sti
pop
sbb
inc
jb
fbstp
push
pop
sub
sbb
jecxz
clc
cmpsl
add
pop
lods
leave
or
sub
out
dec
or
ja
loopne
je
or
mov
dec
test
push
mov
leave
insl
or
gs
cmp
or
sarl
cli
scas
lods
dec
sbb
or
push
mov
push
es
mov
push
xchg
push
adc
movsb
fcoml
inc
jo
jo
rcrl
hlt
out
jmp
push
push
data16
out
add
or
xchg
adc
and
cld
push
and
adc
add
movsb
pop
fstpt
repz
or
ds
dec
pusha
sub
subb
imul
adc
push
adc
cmp
inc
and
and
loop
pop
add
cmpsl
and
xchg
pop
lcall
xchg
mov
jbe
and
outsb
sub
inc
inc
xchg
movsl
push
out
jg
adc
ss
loopne
repz
bswap
and
incb
int
mov
jnp
mov
imul
adc
test
sbb
push
mov
orl
idivl
and
jmp
popf
enter
fcomps
ljmp
dec
das
xlat
inc
or
or
jmp
fwait
scas
sub
clc
pusha
not
movb
push
clc
mov
pop
mov
arpl
ret
xchg
stos
pop
int3
dec
adc
test
adc
push
mov
xor
pop
xlat
mov
push
push
xlat
lds
sbb
jne
cmp
xor
cltd
xor
lahf
iret
push
movsb
lds
pop
inc
popa
fisubrs
mov
mov
incb
aas
mov
add
inc
jno
dec
mov
mov
or
aad
fnstenv
inc
push
popa
pop
push
mov
aad
mov
test
dec
sarl
or
ror
shlb
inc
cmc
cmp
xor
loopne
add
pushf
adc
inc
lods
cmp
rolb
lret
or
xor
lods
es
mov
loop
mov
pop
pop
cwtl
fistpl
shll
xchg
and
out
pop
lret
inc
inc
stc
mov
and
inc
scas
adc
adc
and
stos
loop
adc
jge
mov
lds
or
inc
fdiv
cld
xorl
arpl
cmpsb
and
in
in
mov
pop
or
jne
jmp
pop
enter
or
mov
mov
negb
lret
adc
push
rclb
inc
xorb
dec
pop
xor
and
enter
leave
mov
lea
inc
or
xor
jns
sbb
cld
mov
subl
cld
test
adc
mov
out
subl
xlat
push
mov
cld
out
push
cmp
lock
out
mov
and
and
movsb
enter
xor
sub
nop
andb
push
xor
xor
fs
push
adc
push
insl
in
pop
or
nop
pop
sub
std
stos
fistpll
ss
lret
adc
push
popf
cmpb
daa
enter
bound
sbb
and
aam
pop
adc
test
push
ja
inc
inc
and
arpl
mov
inc
mov
int3
pop
inc
sub
mov
inc
enter
xor
push
inc
dec
movsb
int
lret
inc
and
pushf
jg
loopne
push
sub
fildl
add
adc
sbb
popa
and
mov
xor
dec
adc
xor
and
adc
sbb
and
adc
out
add
pop
mov
mov
mov
popa
or
clc
xor
lock
fisubs
adc
rcl
mov
dec
and
adc
inc
adc
push
rcll
movsb
dec
lds
enter
fcmovnb
fmul
sbb
sub
test
insl
loop
mov
mov
adc
rol
adc
and
bound
or
adc
sarb
roll
notb
outsb
adc
inc
enter
mov
mov
insl
bound
or
loop
xor
push
adc
ret
push
insb
add
mov
xchg
mov
and
inc
xor
xorl
inc
sub
inc
mov
loop
fs
jge
adc
testb
arpl
fstl
test
sub
mov
rcl
shll
mov
adc
ds
xlat
stos
xor
mov
pop
fwait
lock
fs
stos
xor
dec
add
sub
sub
cmp
push
mov
sbb
cmpb
push
add
xor
loope
sub
xchg
adc
fstpt
mov
dec
mov
xlat
and
leave
dec
mov
cmpsb
dec
mov
out
cmp
or
cmp
push
bound
popa
add
stc
call
out
shlb
nop
mov
push
cmpsb
jnp
cli
jp
push
popa
or
sbb
sub
ljmp
int
cltd
and
stos
jbe
inc
mov
ret
movb
nop
inc
sbb
mov
leave
mov
or
push
mov
xlat
stc
jg
mov
mov
andl
in
stos
mov
pushf
and
leave
pop
bound
lcall
test
xchg
adc
mov
push
cmp
inc
xor
or
mov
sbb
out
cmp
inc
inc
xchg
or
rcrl
mov
jae
fdivs
sbb
ret
nop
add
mov
aad
mov
mov
xchg
push
xchg
nop
icebp
push
fwait
jle
xorl
lcall
pop
sub
lea
sub
and
xchg
mov
fdiv
add
in
cmpsl
mov
or
xchg
add
jecxz
inc
xchg
pusha
push
adc
testl
mov
and
or
mov
adc
xor
mov
pop
cmp
adc
mov
mov
sahf
out
mov
and
ret
push
in
jns
stos
out
xlat
push
sub
in
and
enter
std
movsb
popa
adc
mov
xor
aad
fst
and
outsl
fsubl
add
sbb
sbb
shr
sub
loop
data16
inc
lahf
adc
and
mov
sbb
ja
lods
push
sti
sahf
mov
movsl
sarl
and
pop
jne
js
pop
mov
mov
pop
sbb
dec
jle
cmpsl
sub
fisttpl
pop
push
and
inc
dec
or
fiaddl
lret
mov
xchg
mov
shll
lahf
push
jg
jno
add
mov
lahf
push
push
bnd
push
jg
dec
lcallw
scas
pop
fwait
rorb
cmp
mov
fcom
dec
mov
xor
xor
add
pop
or
cmpsl
je
test
push
push
mov
inc
and
int3
pop
xor
cltd
scas
cmc
and
mov
mov
aaa
fidivrl
jmp
inc
and
add
xor
fsubs
and
call
xor
insb
xor
data16
enter
lods
scas
sbb
int
sbb
push
scas
mov
mov
sarl
jl
nop
mov
dec
fistpll
icebp
mov
and
pop
cltd
movsl
adc
adc
dec
mov
aam
xchg
jne
fidivs
dec
mov
xadd
loopne
mov
jge
mov
xchg
mov
in
add
sar
mov
stc
test
mov
xchg
pop
and
aam
pushf
call
pop
push
jecxz
jno
test
inc
dec
add
outsl
sub
fs
aam
pop
repz
jecxz
mov
iret
mov
or
jne
xor
inc
ss
lcall
mov
ss
xor
pop
mov
push
stc
sbb
xchg
cmp
mov
dec
rcr
fidivs
aam
in
adc
scas
mov
pop
inc
stos
jne
testb
repz
insb
ret
sbb
adc
sub
pop
subb
pushw
mov
adc
pop
jmp
hlt
pop
push
cwtl
jl
jmp
test
push
outsb
and
push
nop
aas
sti
movsb
push
fstpl
xchg
push
push
inc
int
xchg
pop
mov
jmp
popl
inc
testb
xor
ja
mov
mov
out
shrb
xor
popf
cltd
subb
and
cmp
mov
cmpsl
mov
or
ficoml
pop
movsb
jge
inc
rorl
mov
pop
ljmp
inc
scas
cld
jmp
jb
test
push
das
inc
loopne
jmp
out
sbb
inc
xchg
mov
ja
push
test
or
push
lods
mov
jo
out
aad
inc
xor
sub
mov
mov
lahf
xchg
shlb
repz
int
jg
lret
repz
fsubl
adc
jae
mov
dec
pop
pop
inc
dec
test
add
lods
or
pusha
fs
sub
push
cs
xchg
jns
inc
imul
xor
addr16
bound
jmp
stos
lret
nop
or
xchg
add
mov
aam
mov
std
mov
and
jp
push
lds
and
rorl
int
enter
jns
les
scas
inc
movsb
push
mov
adc
scas
fisubrs
dec
aam
in
fimull
stc
push
push
xchg
push
adc
jp
add
and
mov
mov
inc
cmpsb
xchg
jle
mov
leave
and
jp
cmpsb
cmp
cmp
pop
pushf
mov
pop
pop
es
insl
pusha
ret
ljmp
pop
lods
inc
aam
lds
cwtl
icebp
pop
or
pop
loope
mov
inc
xlat
test
and
cmp
adc
sbb
push
into
jle
rclb
adc
stos
mov
push
jg
jecxz
inc
pop
and
out
nop
mov
das
shl
fists
inc
sbb
xchg
out
rol
popa
test
lea
push
cmp
cmpsb
add
push
fmull
das
mov
enter
shrb
rcrb
push
lods
and
imul
or
jne
jmp
mov
test
cltd
adc
mov
fistpl
or
mov
ja
add
addb
and
inc
sbb
idivl
repz
ret
insl
or
dec
popa
test
pop
inc
outsl
fstpt
iret
and
mov
sub
stos
inc
pop
fcomps
cwtl
pmaxsw
les
xchg
adc
and
fcompl
aaa
adc
scas
xchg
adc
aaa
pop
sub
adc
test
popl
jne
xchg
push
push
or
mov
popf
inc
loopne
mov
adcb
and
addb
adc
sarb
push
inc
mov
mov
dec
sbb
cmp
test
mov
or
int
add
rolb
cmpsl
sub
loop
adc
or
repnz
xchg
push
xor
fsubl
mov
das
shll
mov
push
jb
lds
or
jae
pusha
xchg
add
cmp
ret
mov
out
sub
aas
inc
stos
into
rolb
mov
call
push
shll
clc
ljmp
jno
push
jle
cmp
xchg
jge
mov
and
pop
in
mov
cmpsb
lret
popa
fnstsw
cld
pusha
frstor
sbb
dec
jge
jp
setns
and
or
rcll
add
adc
shrl
nop
leave
pusha
mov
test
and
lret
int
push
mov
dec
sub
sbb
or
cmp
and
xor
bound
xchg
adcb
jecxz
add
push
cmpsl
pushf
pop
pop
cmp
push
decl
cs
mov
jne
or
or
fimull
add
and
mov
lods
roll
jb
faddp
sbb
xor
icebp
inc
sbb
movsb
shll
lock
int
sbb
in
push
shll
sahf
or
out
add
dec
jmp
dec
add
rclb
add
adc
add
or
xchg
and
add
xchg
fcoml
add
push
add
or
sub
push
xor
mov
pop
ret
fisubrl
ds
xor
vmread
xchg
sub
inc
and
arpl
dec
mov
inc
sbb
mov
inc
mov
add
inc
nop
lea
adc
dec
sub
adc
add
mov
lea
pusha
subb
pop
arpl
or
rorb
sub
inc
jns
mov
push
ds
push
inc
test
adc
xchg
and
add
and
clc
cltd
and
dec
mov
movsb
mov
xor
mov
es
andl
adc
inc
mov
xchg
add
nop
shrl
push
ljmp
cmpsl
mov
xchg
add
mov
ss
xor
xchg
inc
je
outsl
orb
lods
dec
aam
sub
or
xor
and
add
mov
jg
mov
call
rorl
cs
and
cwtl
loop
movsb
or
push
rcrb
and
xor
jo
cltd
or
jo
sbb
addr16
mov
insb
add
or
inc
and
cltd
xor
dec
fidivl
mov
add
adc
push
jb
cmpsb
or
daa
pop
cmpsb
or
sub
adc
data16
cld
inc
outsl
stc
rcr
cmp
mov
adc
out
test
or
popa
xor
int
cwtl
xor
adc
xchg
and
mov
es
inc
inc
mov
inc
push
daa
push
xchg
enter
cmp
nop
andl
not
mov
fcom
mov
push
or
les
xor
in
in
dec
inc
jb
daa
sbbb
cmp
or
or
cmp
mov
push
mov
aas
clc
mov
daa
lret
push
cwtl
push
sti
cmp
mov
add
xchg
mov
das
sub
push
or
adc
mov
fisttpll
or
fmuls
enter
push
mov
jne
cmp
clc
mov
cmpsl
or
xchg
xchg
push
pop
push
leave
add
and
sbb
adc
rclb
lahf
mov
and
jle
jb
adc
out
sub
ret
pushf
test
xchg
jmp
insl
adc
lea
xor
loope
orb
adc
push
rorb
cs
and
dec
or
dec
mov
xchg
mov
test
sbb
sbb
inc
xor
xor
sbb
imul
mov
push
add
jbe
xchg
mov
dec
lods
aaa
inc
or
add
lea
jno
inc
psraw
sbb
fmull
aam
and
rcrb
or
adc
fcom
daa
add
mov
ljmp
xor
aam
and
mov
mov
mov
add
stc
cmp
xor
inc
addr16
mov
dec
sub
mov
sbb
popf
mov
push
gs
fcomps
stos
mov
pop
mov
movsb
mov
stos
inc
mov
mov
sbb
mov
sahf
add
push
push
sub
test
and
adc
inc
and
push
gs
cwtl
lea
mov
sub
movsl
pop
mov
and
in
mov
lock
lea
pushf
imul
pusha
sbb
xchg
sbb
aaa
loopne
sbb
popa
sub
xor
lret
sarl
and
xchg
dec
fndisi(8087
int3
adc
xor
add
sub
movsl
xor
hlt
int
push
es
push
jo
push
dec
push
mov
arpl
test
stos
ret
or
test
dec
mov
int3
mov
inc
mov
jae
test
mov
jns
shlb
xchg
dec
or
jae
mov
add
mov
add
pop
dec
pop
push
xor
loop
cmp
xchg
or
rorl
sbb
enter
mov
add
into
in
bound
lock
movsl
or
jge
and
jae
xchg
sbb
xchg
and
fcmovb
mov
push
mov
xor
xchg
and
inc
cmpsb
sub
jns
mov
xor
divl
adc
icebp
mov
stos
mov
movsb
mov
fs
inc
jno
and
cli
push
push
xchg
pop
cmp
and
fsubs
repz
add
or
xor
xchg
xchg
xchg
faddl
lds
or
xchg
push
dec
cwtl
xor
sbb
movsl
shll
hlt
push
add
dec
ret
loopne
rolb
mov
mov
out
iret
mov
sahf
rcrb
push
data16
and
sub
lea
inc
aam
hlt
lock
lea
cmp
in
je
mov
insl
or
xor
fsubr
and
lea
mov
jo
xor
xor
sbb
mov
ror
sahf
ss
adc
aad
fiadds
pop
xchg
adcb
test
popa
and
imul
xchg
sbb
pop
popf
xor
and
sti
sahf
sub
pushf
jle
jnp
or
bound
add
xchg
xchg
adc
jle
mov
dec
push
in
inc
roll
push
dec
and
bound
lock
pop
js
sub
in
pop
adc
out
and
jg
mov
rcrb
test
add
in
jbe
icebp
in
jo
shlb
and
bound
and
xor
or
loop
inc
cmp
popa
cwtl
mov
inc
mov
fimull
dec
test
inc
adc
shll
in
cmp
call
faddl
testl
jae,pt
sub
out
ret
pusha
mov
adcl
xor
sahf
sti
test
clc
fcomps
cltd
push
inc
jne
or
outsl
sbb
jne
sub
dec
mov
mov
and
fadds
cld
insl
mov
stc
sub
daa
mov
adc
dec
sub
daa
out
jl
dec
mov
mov
ss
mov
pop
cltd
dec
push
mov
into
and
sti
ss
rcrb
xchg
add
enter
scas
jl
and
mov
mov
or
inc
or
pop
nop
xchg
mov
shll
ja
mov
fdivr
or
pop
push
dec
sub
lret
pop
and
inc
frstor
mov
jle
outsl
xorb
int3
test
cmp
hlt
gs
pusha
ja
mov
hlt
pop
sarb
sub
mov
sti
test
push
jo
rcrb
cmp
cmp
cvtpi2ps
xchg
sub
loop
jg
sbb
jmp
xor
stos
repnz
dec
xorb
stos
scas
or
adc
gs
mov
subl
cs
mov
cmc
xor
out
test
mov
add
adc
test
inc
dec
inc
jno
ja
sub
inc
or
and
rol
add
ficompl
scas
ret
mov
frstor
inc
mov
test
and
fs
mov
stos
nop
push
jb
mov
ds
pop
jb
sub
jge
rorb
fistl
cmp
pop
xor
inc
and
into
cltd
clc
cli
iret
pop
scas
mov
sbb
into
and
adc
sbb
jbe
stc
mov
mov
dec
jne
lea
xlat
mov
dec
insb
push
cltd
inc
loopne
fwait
jg
jne
cmp
pop
inc
push
rcrb
inc
pop
adc
sbb
push
dec
sbb
sub
fisttpll
mov
push
xor
sbb
sar
imul
imul
and
shll
xor
push
stos
mov
pop
das
insb
cs
outsb
mov
mov
sbb
or
mov
fcomi
push
fisttps
cmc
fcmovne
jmp
add
push
cmp
adc
out
and
lds
sahf
jge
fwait
xchg
dec
mov
jmp
dec
ret
sub
aad
inc
adc
adcb
cmp
pop
enter
sti
adc
shll
leave
adc
cltd
xchg
and
xor
sarb
lret
cs
dec
add
orb
xor
dec
clc
pop
movsl
mov
push
xor
fldl
add
loopne
and
push
lock
add
pop
testb
enter
mov
dec
fdivrs
dec
inc
mov
mov
jp
pop
clc
and
sub
inc
xchg
dec
dec
and
mov
lcall
bnd
enter
scas
jecxz
xchg
ret
rclb
mov
cli
jecxz
xor
ret
sub
add
jmp
cwtl
fucomip
cmp
cmpsl
add
and
and
adc
shlb
shr
mov
mov
in
push
pop
or
cld
scas
xor
add
sub
adc
imul
cld
sub
lods
dec
std
xor
and
fnstenv
xor
mov
add
shrb
cmpsl
leave
aad
enter
dec
ljmp
sub
test
jno
push
rorl
jo
or
popf
stc
push
mov
pushf
or
mov
stos
loop
lcall
es
sbb
mov
mov
add
push
dec
adc
rolb
xchg
aam
dec
dec
out
pop
push
repnz
pop
mov
lock
or
daa
test
or
push
lea
enter
or
out
fldl
arpl
ljmp
xor
pop
shl
rcl
orb
pop
lods
in
mov
inc
push
popa
jnp
mov
dec
inc
aad
scas
adc
jmp
cmp
fmul
loopne
ja
push
shrb
inc
ja
sub
jo
and
stos
cwtl
add
mov
je
loopne
enter
das
ret
mov
push
inc
jle
dec
or
addr16
in
pop
mov
sbb
push
and
lret
push
cld
imul
mov
mov
in
flds
xchg
or
aas
pushl
orl
mov
xorb
sbb
movsl
gs
test
shll
adc
xchg
fisubrl
fdivs
arpl
jne
addr16
movsb
mov
sbbb
lods
pop
divl
or
jle
lods
sub
in
iret
mov
xlat
dec
cld
lcall
xor
push
addl
cld
outsb
mov
jp
pop
push
jmp
xchg
inc
sub
dec
xchg
mov
and
cmp
ljmp
sub
cli
adc
scas
or
das
lret
test
testb
aaa
fstpt
jecxz
jge
jnp
mov
adcl
cmpsl
pop
aas
cmp
int
mov
stos
sub
sub
stos
xchg
inc
xchg
xchg
mov
ret
jge
loopne
add
test
sub
popf
cmpsb
or
and
mov
and
and
push
cmpsb
push
out
fadd
xchg
icebp
xchg
lds
fisttps
push
cmp
out
jo
inc
rorl
lret
inc
push
cmc
jno
sbb
adc
xchg
pop
rcr
mov
loope
mov
lea
xor
hlt
sub
pushf
pop
xor
orb
les
imul
leave
aam
imul
mov
inc
push
stos
mov
xlat
adc
rcrl
insl
stos
dec
orb
lret
sahf
ljmp
dec
pop
in
cmp
push
aam
aad
xor
rorl
jp
mov
fnstenv
dec
mov
loop
add
dec
jmp
add
mov
adcl
dec
pushf
dec
adc
pop
add
mov
or
and
inc
cmp
sbb
rcr
out
adc
mov
mov
or
fcom
loopne
in
xchg
punpckhdq
cli
loopne
push
mov
sahf
inc
clc
pop
mov
mov
inc
in
in
mov
dec
mov
cmc
shrl
cmpl
ret
sub
cmp
rcrw
sbb
lock
push
movsb
dec
or
clc
dec
sbb
lret
push
xlat
ss
sti
cmp
orl
aas
inc
or
jge
pop
lods
sti
push
stc
outsl
sbb
ljmp
push
dec
mov
push
mov
fldl
inc
mov
and
add
jno
xlat
cmpsb
push
lahf
shlb
js
dec
sbb
and
adc
push
sbb
inc
mov
dec
add
call
sbb
and
fst
loopne
mov
in
jno
jle
jae
mov
push
bound
mov
push
adc
mov
inc
pop
fwait
ret
cmpsl
mov
sbb
xchg
fs
dec
bnd
repnz
push
xor
pushf
sub
aas
idiv
stos
add
loope
bound
push
pop
imul
pushf
aaa
mov
daa
lea
and
xchg
dec
std
andb
mov
sbb
push
fbstp
and
add
cli
mov
xor
lret
mov
pop
or
and
xchg
dec
icebp
inc
test
dec
and
lods
adc
add
dec
xor
xor
call
xchg
sbb
adc
inc
add
cmpsb
add
cltd
sub
out
scas
cld
cmp
or
jo
fcmovne
push
or
insl
lcall
mov
sar
add
add
nop
fldcw
pop
adc
jne
pusha
jg
adc
and
nop
push
sbb
adc
jge
lods
leave
lahf
mull
mov
jne
add
jno
sarl
test
dec
xchg
push
or
mul
stc
scas
into
push
sbb
sbb
and
xor
mov
mov
stos
mov
mov
roll
cld
nop
enter
shll
clc
pop
sub
mov
mov
sub
and
push
or
push
int3
mov
xchg
or
mov
loope
push
mov
xchg
insb
sbbl
stc
pop
jno
fists
jecxz
in
mov
loopne
cli
dec
fdivr
sub
or
pop
sub
andb
push
add
and
pop
pop
adc
mov
in
test
dec
and
ret
out
mov
push
push
cmovno
rcrl
repz
lds
mov
daa
and
inc
dec
sbb
fwait
imul
lods
out
out
and
aam
sar
insb
insb
and
cli
pop
xchg
outsl
pop
stos
cmpsb
push
cwtl
jbe
mov
sub
jmp
xchg
add
aas
push
and
roll
les
and
outsb
ret
cs
aaa
mov
or
pop
or
lahf
add
inc
mov
sahf
ret
push
pop
xor
cvtpi2ps
test
xor
pop
loop
xchg
imul
sti
pop
pop
pusha
jg
addl
xor
lea
add
cmp
add
cmpsl
xor
cwtl
iret
outsl
aam
xchg
add
adc
test
xor
mov
jmp
adc
pop
shrl
fs
ss
dec
push
cmp
mov
adc
push
lea
aam
pop
sub
push
aas
jmp
rcrb
test
aam
loope
mov
insb
jg
mov
xchg
mov
repz
outsl
js
sub
jne
pop
dec
gs
ficoms
test
sbb
mov
sub
sbb
sbb
or
test
add
inc
je
sbb
dec
test
pop
push
je
add
arpl
mov
push
lock
ret
cli
xor
mov
pop
sti
lret
adc
sahf
sbb
stc
pop
sbb
ljmp
jmp
loope
jmp
push
or
sbb
jmp
mov
orl
or
add
ficompl
adc
loop
adc
cmc
sti
lds
push
ss
bound
in
icebp
and
mov
xor
push
cmp
push
test
dec
lahf
mov
mov
pop
mov
ljmp
cmp
push
mov
cli
pop
mov
fs
push
and
insl
xor
ret
or
icebp
cmpsl
mov
sbb
dec
test
xor
in
mov
sub
sar
jne
int3
movsl
out
push
imul
mov
stos
or
jne
dec
shll
jmp
jne
mov
fnsave
pop
fwait
mov
mulps
mov
scas
inc
in
mov
push
sbb
in
push
or
lahf
inc
inc
ljmp
leave
mov
sbb
push
cs
or
or
dec
fnsave
test
mov
mov
pop
jge
dec
mov
push
jmp
fnstenv
mov
jne
mov
xor
outsl
push
cmp
add
xchg
pop
and
cmp
movsb
loop
les
outsl
adc
or
loope
sbb
xchg
hlt
pop
inc
or
push
xlat
jg
ja
dec
outsb
jne
mov
ss
jge
mov
mov
sbb
popf
lods
idivb
je
stc
mov
into
ljmp
jle
mov
sub
fs
loop
push
xchg
pop
jnp
icebp
bound
sub
pop
sub
or
xlat
adc
jb
mov
outsb
stos
movsl
add
mull
push
int3
testl
mov
cld
mov
xor
mov
xchg
sub
aam
mov
in
pop
push
fwait
popf
and
dec
punpckhdq
and
cmp
mov
aad
mov
dec
jl
xor
rorb
inc
or
in
mov
shld
push
or
subb
and
or
jae
call
rclb
xchg
xchg
or
cwtl
push
push
xchg
jne
dec
bound
shlb
fldenv
push
rorl
fisubrl
loope
inc
insl
lods
scas
dec
nop
f2xm1
push
dec
or
sbb
adc
adc
in
pop
push
sub
push
popa
lret
mov
xchg
adc
mov
or
or
call
or
cwtl
xor
sub
and
lahf
js
cmpsb
add
stc
mov
insb
lahf
scas
push
rorl
push
inc
popf
adc
repnz
es
push
pop
shl
mov
inc
adc
mov
jns
mov
jge
inc
inc
enter
lcall
iret
or
emms
cmp
cmp
outsb
mov
imulb
mov
ss
repz
sub
popf
push
mov
push
mov
ret
das
mov
les
icebp
dec
push
jge
outsl
push
lret
cwtl
pop
sahf
add
clc
mov
jge
jae
inc
dec
dec
xchg
nop
cltd
pop
pop
call
xchg
adc
pop
mov
andb
clc
lods
mov
cld
mov
sub
jle
imul
int3
xchg
mov
clc
pop
clc
test
add
sub
lock
push
push
mov
scas
mov
mov
pop
lahf
or
sbb
pop
pop
mov
aam
ret
fadd
stc
push
or
pop
dec
mov
mov
cmpsl
lds
sub
sbb
and
mov
push
add
mov
imul
pop
adc
rcl
orb
shl
mov
mov
imul
sub
insl
insb
arpl
pop
mov
push
mov
sahf
xor
push
or
ret
push
mov
fcoms
sub
mov
popa
out
dec
ss
mov
xchg
fdivrs
lea
mov
jae
cs
pop
ljmp
stos
push
jp
adc
jo
js
hlt
shll
adc
scas
loop
xor
push
dec
push
in
mov
imul
lret
rcrb
daa
shrb
push
add
mov
pop
mov
push
sbb
sub
shlb
dec
jg
add
call
loope
cmp
ds
fs
mov
pop
push
lahf
jmp
xchg
dec
nop
leave
jbe
xchg
adc
mov
stc
mov
dec
shrl
xor
mov
mov
orb
add
cltd
sub
popa
push
out
sbb
pop
pushl
jl
xchg
mov
pop
pop
addr16
sbb
xchg
sub
and
jmp
out
ret
push
adc
scas
cmp
mov
in
sub
out
xchg
push
jo
das
jne
inc
fwait
sbb
push
lods
insl
inc
test
or
fsubrs
jae
mov
or
dec
xchg
out
cmp
jp
outsl
adc
adc
js
into
dec
sbb
sbb
push
xchg
out
xor
cmp
ja
mov
les
pop
cmc
outsb
mov
ror
push
dec
xor
cld
jmp
xchg
incb
push
cmp
or
fs
aas
push
leave
pop
push
and
adc
ds
int3
push
push
dec
pop
push
inc
mov
popa
dec
mov
mov
cmp
cwtl
xchg
mov
les
xchg
xchg
imul
mov
cmpsl
mov
inc
cmp
xchg
sub
lcall
sub
insb
addr16
xor
test
add
popa
add
sbb
xor
jmp
mov
push
pop
std
notl
lock
shr
lcall
inc
aaa
hlt
and
jno
call
adc
int
cld
ja
and
addr16
scas
push
mov
neg
in
out
push
adc
ljmp
icebp
pop
fsub
ret
sbb
out
and
or
into
ja
inc
mov
jl
mov
mov
cmp
mov
xorl
loopnew
cmpsl
xor
fwait
pop
push
pop
andl
add
mov
outsl
fdivl
mov
fdivrl
rorl
stos
inc
pop
in
out
xchg
mov
loope
ret
cmp
and
or
js
movsl
push
repnz
out
popf
adc
fstl
sub
jns
pop
jae
jecxz
gs
add
pop
loope
mov
xchg
scas
lret
outsb
inc
mov
adc
leave
addr16
adc
push
fsubrl
jmp
mov
pop
add
push
add
sbb
enter
int
int
adc
pushf
add
cmpsl
add
cmp
test
inc
sbb
hlt
xchg
stc
pop
aad
loop
sub
sbb
xchg
in
add
mov
push
inc
stos
orl
in
cli
test
movsl
in
cmp
mov
ss
push
push
xchg
inc
or
sbb
push
push
stos
fstpl
inc
add
mov
aam
mov
stos
int3
scas
fisttps
push
push
mov
lods
xor
std
push
loop
xor
and
jae
ja
jecxz
or
xlat
xor
sub
ret
ja
sub
hlt
leave
sti
loop
clc
aad
je
int
add
pop
out
mov
mov
pushf
jl
pop
mov
lock
push
outsb
mov
or
cwtl
pop
sub
jle
add
push
mov
xchg
jmp
and
sub
pop
push
inc
adc
mov
add
iret
sub
rcll
push
adc
jecxz
movq
mov
jge
jno
movsb
and
icebp
cmp
inc
call
cmp
lahf
je
adcb
inc
adc
mov
lds
add
mov
repz
or
sbb
test
mov
aaa
add
xchg
daa
push
loop
mov
stc
jne
and
sub
or
xor
ljmp
mov
mov
inc
or
mov
sub
xchg
out
add
mov
xor
cli
les
or
mov
std
cmp
and
and
dec
shlb
lcall
fcomp
add
inc
loop
je
push
stos
sub
pushf
pusha
loop
adc
xor
test
push
fbld
adc
mov
mov
xlat
loope
pop
mov
add
xchg
insb
fwait
test
sbb
int
jecxz
adc
pop
adc
dec
cmpsb
mov
ret
loop
les
mov
inc
loop
or
mov
add
xor
lea
add
sbb
hlt
popf
inc
cmp
in
into
sbb
add
xchg
push
mov
sub
imul
sub
and
sub
and
inc
pop
test
jge
sub
add
jmp
jge
sbb
dec
cmp
decb
aam
nop
mov
adc
int
sbb
test
pop
or
push
popa
cs
add
adc
dec
inc
aad
pop
add
inc
sub
dec
mov
rolb
fsubrs
not
or
dec
imulb
pop
popa
idiv
aam
jg
or
aad
ja
lahf
mov
mov
shrl
jmp
les
sub
add
jne
xor
adc
cmp
bound
mov
inc
xor
sbb
jb
and
xor
stos
mov
add
pop
loopne
jo
mov
les
pop
xchg
pop
scas
sbb
test
pushf
stos
mov
dec
repz
adc
jns
pop
mov
cmp
mov
xor
adcb
mov
xchg
popf
stos
sbb
inc
sub
in
mov
inc
push
aas
or
push
in
jno
sub
mov
adc
sbb
js
fcoms
sti
xchg
mov
or
test
dec
notb
mov
mov
mov
arpl
fs
or
je
sti
mov
push
rclb
aam
imul
das
filds
or
cwtl
bound
out
flds
addr16
xchg
push
scas
jecxz
push
cmc
sub
jo
cmp
dec
fnsave
int
dec
fsubrl
inc
adc
xchg
out
mov
mov
pop
inc
repz
xlat
movsl
dec
and
jne
mov
rcrl
pop
out
les
inc
lock
sbb
push
inc
mov
inc
sub
call
sti
push
int
jae
xlat
outsb
pop
sbb
and
push
stos
cmp
xchg
mov
xlat
les
and
out
push
ja
negb
push
cmc
jge
pop
xchg
push
cs
gs
mov
hlt
mov
icebp
mov
xchg
xchg
rcrl
mov
ljmp
push
or
leave
or
push
stos
incb
and
test
loope
loope
jl
ret
mov
shll
arpl
aaa
aad
jge
adc
adc
mov
cmp
mov
outsb
sti
cwtl
cmp
or
mov
jns
daa
dec
scas
dec
push
sbb
outsl
scas
arpl
insl
jg
mov
in
mov
adc
sub
aam
jmp
clc
sub
push
sub
jg
pushl
insb
iret
xor
and
jo
push
movsb
mov
mov
lods
mov
xchg
push
mov
insl
and
insl
pop
push
fdivrs
daa
sbb
adc
aaa
mov
aas
jmp
repz
dec
sbb
cmpsb
xchg
pop
sbb
jg
subl
popl
dec
xor
test
ss
fwait
in
jmp
mov
aad
add
add
inc
in
mov
adc
cmc
and
fcmovnu
ss
pop
fidivrl
dec
cmpl
dec
pop
xchg
jmp
das
andnps
imul
push
pop
adc
rolb
jns
cmpl
mov
push
push
stos
shrb
nop
dec
stos
test
dec
sub
ljmp
inc
test
jnp
inc
jno
cmp
lea
jb
push
add
jmp
mov
mov
sub
les
ss
xchg
fimuls
push
cmp
adc
xchg
jno
add
mov
mov
in
ret
lahf
lds
jae
les
inc
mov
dec
popa
cli
pushf
or
pop
and
mov
int
add
pop
and
test
xor
aaa
movsl
mov
xor
dec
sbb
dec
mov
adc
ss
mov
sub
pusha
jae
sub
sub
cmp
pushf
push
xorl
out
mov
es
test
inc
push
fsubr
xchg
jne
push
mov
and
adc
pop
fs
sbb
hlt
dec
push
mov
in
mov
aad
sub
adc
and
imul
test
decb
fidivs
nop
push
xchg
xor
cmp
cwtl
add
mov
jp
sbb
mov
stc
pop
notb
jo
lahf
js
pushf
jne
gs
les
xor
and
insl
sbb
inc
jbe
jbe
inc
push
mov
inc
cwtl
pop
jae
mov
loope
xchg
lret
xor
data16
jmp
jmp
and
push
adc
xchg
cmpsb
push
pop
clc
out
sub
xchg
and
mov
sub
pusha
mov
psubusb
or
mov
mov
fidivrl
cmp
daa
lahf
push
xchg
decl
cltd
jno
insl
fimuls
aas
xchg
xor
stc
lods
lcall
shll
push
inc
rclb
mov
mov
repnz
fbld
push
fisubrl
orb
sub
fidivs
es
addr16
and
aaa
and
push
xchg
xlat
xor
push
push
mov
cmp
or
add
repz
push
mov
leave
dec
inc
loope
and
inc
in
or
je
jae
clc
test
xorl
push
insb
mov
ret
scas
xchg
mov
adc
insl
mov
mov
repnz
outsb
inc
test
cltd
lock
adc
cld
cli
out
jg
pop
adc
into
sub
adc
ljmp
lock
push
addr16
jb,pn
push
sub
lds
pop
sub
dec
xchg
jo
out
jmp
adc
adc
in
jb
lret
stos
inc
lcall
in
outsl
pop
loope
addr16
push
fisttps
jmp
push
adc
inc
les
lock
inc
icebp
movsb
sub
leave
fsub
gs
and
je
ret
sub
pop
mov
fsub
mov
aad
es
or
or
icebp
rorl
cli
enter
push
and
pop
movsb
and
sbb
xlat
inc
jno
or
mov
or
ret
inc
jecxz
ret
cmc
jno
pop
bound
sub
jp
outsl
mov
jmp
or
ret
dec
out
je
int3
insl
subl
js
lret
xor
cmpsl
and
pop
or
fsubrs
mov
xor
xchg
jbe,pn
add
mov
xor
and
xor
icebp
mov
sti
inc
add
pop
in
push
mov
icebp
fldl
xor
jne
push
add
jne
mov
or
mov
shll
mov
sub
adc
fstl
inc
sbb
bound
loop
and
and
mov
int
andb
push
xor
xor
lds
push
testl
scas
push
rclb
sbbl
jle
test
test
mov
mov
cs
fwait
jbe
and
push
out
movsl
xor
mov
sbb
dec
pop
push
jmp
mov
inc
sbbb
or
popa
inc
adc
adc
jmp
pusha
adc
xchg
mov
test
jnp
cmpsl
xor
xchg
aaa
jmp
dec
arpl
popf
push
popa
inc
mov
add
inc
and
mov
enter
and
loop
fstpt
push
fisttpll
outsb
mov
cmp
jg
mov
mov
adc
nop
mov
leave
scas
or
sbb
fidivl
cmpsb
sub
fnstsw
xlat
mov
stc
out
imul
sbb
in
mov
subb
in
rorb
nop
and
test
dec
inc
adc
pop
fadds
jmp
out
push
cmp
pop
add
push
push
inc
inc
sbb
jne
or
or
gs
sub
fwait
mov
mov
xor
sbb
iret
mov
mov
pop
stos
xor
rcr
add
lcall
or
dec
arpl
inc
xchg
sbb
xchg
pop
stc
loopne
aam
out
les
mov
jg
lds
ret
aas
xor
mov
adc
aad
out
je
lea
rcl
mov
and
inc
bound
mov
jl
push
pop
jmp
testl
xchg
scas
fs
adc
xchg
sub
pop
inc
nop
mov
jne
push
cmp
xchg
push
xchg
mov
pusha
test
adc
cmp
push
inc
jb
add
repz
xlat
jle
clc
cmp
dec
es
sbb
into
sub
mov
xor
add
dec
mov
push
jge
push
decb
int
sbb
cmc
pop
lods
rcll
xlat
pusha
or
leave
xchg
mov
and
inc
or
jge
xchg
imul
xchg
mov
dec
xchg
aas
sub
iret
lods
pop
frstor
mov
xchg
outsl
dec
push
add
xor
je
sub
xor
inc
insl
cmp
add
jae
add
cltd
jae
sbb
fidivl
repnz
dec
pop
rclb
pop
sub
sub
arpl
ljmp
sub
sub
jl
push
pusha
pop
xchg
mov
outsl
xor
push
mov
imul
adc
rcrb
pop
fsts
push
push
xchg
fdivrl
dec
sub
cmp
push
jmp
inc
jg
lods
or
out
and
adc
jle
mov
jbe
add
ja
hlt
adc
fdivl
push
movsb
jg
lahf
outsl
or
inc
dec
sub
popa
xlat
mov
mov
lds
pop
inc
inc
call
pop
cli
sbb
stos
xchg
mov
sbb
cmpsb
pop
xchg
fs
inc
addr16
andb
mov
loope
aas
sbb
dec
fsubl
test
subb
fidivrl
xlat
inc
cmp
pop
and
sub
jbe
xchg
sbb
cld
or
inc
sub
xchg
push
mov
sahf
jb
das
or
xchg
inc
xchg
enter
push
or
icebp
outsl
inc
cmp
in
xor
enter
or
push
popf
inc
xchg
push
clc
iret
ja
pop
pop
shr
mov
push
mov
push
stos
fs
sbb
insl
inc
test
stos
jecxz
fldl
inc
jne
out
in
cmp
movsb
adc
jns
pop
xchg
mov
fwait
dec
arpl
cmp
push
xor
pop
les
jno
cmp
pop
ljmp
ret
inc
and
sbb
arpl
idiv
push
mov
inc
mov
ss
stos
sub
or
rcll
mov
sti
mov
sbb
mov
pop
mov
movsb
push
into
jne
lds
sub
cmp
stc
inc
sub
cltd
cmc
out
int3
or
pop
adc
jae
ret
push
mov
sub
mov
mov
loop
mov
cmpsl
cmp
clc
sar
fdivrl
cli
mov
add
jge
inc
cmp
cwtl
cmp
jbe
out
negl
dec
fisttpl
add
pop
enter
scas
push
xchg
shr
stos
idivl
js
imul
adc
cwtl
outsb
add
or
js
addr16
icebp
pop
add
lcall
test
pop
das
sti
jle,pn
out
and
inc
inc
pop
sti
sahf
dec
addb
and
push
xor
mov
push
adc
pop
and
sbb
fldl
dec
test
mov
pop
cs
rcr
ljmp
or
aas
clc
lcall
xchg
enter
mov
cld
adc
ret
dec
ret
dec
add
dec
add
cmpsb
ljmp
or
add
sub
xchg
repz
xchg
add
mov
test
mov
jne
mov
negb
or
xchg
push
cmp
mov
mov
cli
ret
insl
rcr
fildl
dec
cwtl
dec
lods
push
std
pop
cwtl
out
sub
and
dec
sub
rolb
cmp
xor
and
adc
addl
and
dec
test
or
lds
stos
mov
clc
cs
jbe
lods
or
jecxz
push
jecxz
xchg
and
fsubrl
pop
or
les
popf
push
mov
enter
mov
push
mov
ret
push
pop
scas
sub
mov
push
mov
orb
ds
xlat
ret
jne
or
pop
fbld
jg
mov
mov
leave
pop
loopnew
mov
nop
jge
and
mov
jb
lcall
ret
aad
mov
jmp
dec
xchg
mov
xchg
arpl
insb
adc
cltd
popa
pop
lock
add
push
mov
pop
gs
jl
std
enter
negl
stos
pusha
jg
jne
sub
jo
jb
pop
repnz
in
mov
pop
add
enter
pop
in
popa
lods
lea
lea
jg
sub
out
aas
cmc
stos
test
in
pop
or
cs
push
sbb
jb
jno
xchg
and
pop
imul
cmpsl
frstor
xchg
inc
stos
inc
cld
mov
push
xchg
push
and
cmp
dec
mov
mov
push
dec
call
std
mov
loop
cmc
jg
pusha
daa
ds
mov
push
sub
clc
bound
pop
and
or
mov
leave
aad
pop
sbb
sbb
out
pop
sub
pop
xchg
cs
push
test
jnp
movsl
dec
jne
jbe
push
sbb
mov
pusha
and
stc
pop
dec
aad
pop
sub
inc
pop
orl
inc
pop
std
movsl
cwtl
fidivl
bound
fbstp
push
scas
cmp
mov
push
lods
sbb
adc
inc
cmc
fdivs
sbb
mov
cs
push
sbb
mov
dec
pushf
xchg
dec
gs
push
cmp
dec
rcrl
or
shll
popf
mov
out
lock
movsl
in
je
fucomip
mov
mov
mov
pop
sub
cmp
orb
data16
aam
stc
stc
cmp
les
and
inc
pop
jecxz
repz
ret
movsb
add
ja
movsb
fsubs
rorl
xchg
inc
in
push
int3
mov
mov
dec
sbb
push
aas
sub
cs
nop
movsb
xchg
add
scas
sahf
jl
addr16
outsb
lock
sbb
mov
test
cmc
dec
rolb
ljmp
pushf
ret
add
sub
mov
int3
inc
je
xchg
cld
pop
icebp
cmp
inc
shlb
inc
jecxz
pop
stc
sti
das
ss
mov
jg
push
fbld
imul
insb
fbld
push
test
js
pop
in
sub
mov
negl
mov
andb
or
imul
call
aas
mov
inc
push
cld
pop
or
push
mov
mov
adc
icebp
adc
popa
test
subb
divl
pop
pop
or
push
cmpsb
jae
dec
adc
xchg
sub
cmc
jne
in
popa
xchg
or
loopne
mov
xchg
push
orl
xchg
cs
movsl
mov
or
daa
lods
xor
push
shl
inc
pop
sbb
mov
xor
lea
adc
popf
enter
jg
cld
mov
mov
or
push
test
shrl
sub
xor
pop
clc
inc
cld
adc
add
lea
and
inc
pop
insb
fisubs
imul
jge
or
stc
sub
sbb
fwait
sub
inc
jecxz
sub
data16
lea
jp
cltd
mov
sbb
mov
stos
add
mov
repz
sbb
cmc
inc
js
imul
int
push
xchg
cmpsl
mov
in
adc
add
push
sub
inc
movsl
popa
inc
test
cld
dec
push
std
dec
add
xchg
mov
pop
clc
sti
ljmp
cli
int
mov
adc
xorl
mov
push
lea
popf
ljmp
mov
xchg
adc
cmp
sbb
stos
pushf
mov
mov
lcall
and
clc
stos
sub
loope
add
test
icebp
addr16
xor
aad
nop
cmp
push
mov
mov
lock
mov
sarb
dec
xlat
add
lret
sahf
push
cld
mov
inc
xchg
xorl
cltd
cld
push
rolb
inc
cs
inc
mov
aad
loopne
dec
xchg
sbb
movsl
adc
movsb
and
addr16
enter
or
int
ja
insl
push
sub
mov
or
outsb
je
test
xchg
lret
xor
inc
sbb
cmp
in
int3
push
clc
mov
pop
and
sub
je
arpl
or
jle
or
sub
and
adc
pushf
or
xchg
into
nop
jae
inc
push
mulb
lret
xchg
outsb
ja
jle
nop
xchg
mov
in
and
jl
repz
mov
cmc
add
repz
int
sti
je
pop
cwtl
jnp
xchg
or
mov
mov
call
fbstp
xchg
and
mov
cld
or
sbb
mov
stos
loopne
mov
and
cmp
out
aas
stos
into
xchg
xlat
rolb
push
mov
inc
gs
adc
mov
push
xchg
lret
sub
sub
cmp
cmp
jno
dec
aas
in
out
inc
inc
mov
inc
movsb
mov
es
or
push
aad
lods
cld
nop
cmp
cmc
fidivs
jns
xor
mov
inc
lcall
mov
cmpl
repnz
sub
and
add
les
push
pop
mov
push
test
bound
pop
outsb
push
push
fwait
mov
inc
push
stos
lahf
sub
inc
adc
or
scas
pusha
push
add
or
mov
sub
inc
push
pusha
mov
pop
cmp
jg
aaa
lret
dec
and
mulb
sbb
sbb
add
add
and
or
push
lods
push
ljmp
pop
pop
dec
dec
mov
cmp
sbb
jge
mov
jge
into
push
dec
sub
fimull
jmp
sbb
push
jge
xor
sub
or
test
cmc
dec
arpl
push
mov
arpl
rcrl
out
add
fisttpll
cs
jne
cmc
lea
or
inc
outsb
test
std
icebp
sbb
fnsave
lret
pop
push
fwait
sub
fimull
lea
and
leave
sub
jno
test
pop
jns
insl
inc
pop
aad
cmpsb
data16
or
fisubl
faddp
or
bound
and
fcoml
mov
or
inc
and
push
mov
sub
sbb
cli
in
mov
xchg
lea
pop
push
sbb
faddl
movsb
pop
cmp
or
jg
lods
scas
stc
jmp
adc
dec
shlb
adc
movsb
sbb
aaa
sub
nop
or
out
or
out
jns
shlb
xor
in
fwait
loope
inc
arpl
or
out
mov
mov
and
aam
in
sub
popf
ret
jne
and
popa
addr16
cs
pop
popa
and
jbe
push
mov
les
mov
jecxz
fisttpl
imul
jne
cmp
mov
aad
push
mov
repnz
sbb
lret
dec
mov
adc
mov
mov
cltd
mov
cmp
ja
cwtl
pusha
and
xor
fisttps
cmpsl
movsb
push
and
adc
add
fiadds
dec
jo
sbb
sbb
enter
xor
xor
outsb
loope
cmp
popa
mov
and
jno
daa
jbe
dec
popl
adc
and
lods
orl
and
lds
insb
inc
fs
dec
fmuls
out
jns
dec
pop
test
data16
or
push
mov
mov
inc
mov
add
fisubrl
fs
mov
pushf
sub
lea
in
sbb
stos
fistps
rorb
addb
dec
call
dec
xchg
inc
insl
out
nop
adc
loop
sbb
inc
sarb
fwait
or
mov
push
imul
aad
xor
sub
ret
xchg
sahf
inc
scas
test
in
cmc
dec
bound
add
pop
cmp
push
lods
bswap
aam
mov
cmp
test
add
or
adc
xor
fdivrl
call
out
inc
das
mov
adc
leave
xor
dec
sub
fwait
bound
cmc
sbb
push
sub
in
ljmp
mov
xor
dec
jne
cmp
cmp
bound
stos
or
pop
in
mov
inc
xchg
rep
decl
fisttps
hlt
push
sub
jl
pop
sbb
loop
pusha
stos
inc
mov
mov
cmpsb
or
cmpl
mov
pop
push
movsl
jns
movsl
xchg
xchg
repnz
fistpll
clc
jae
add
xchg
daa
add
push
fbld
mov
fdivs
push
push
jne
flds
lahf
mov
or
out
inc
imul
and
jge
adc
or
jge
or
fwait
shlb
inc
or
popa
sbb
decb
mov
hlt
and
push
xchg
js
jb
jns
js
dec
aam
pop
mov
pop
xchg
xor
or
and
mov
cmp
and
lcall
cmc
or
ret
mov
mov
jne
cmpsb
aad
shr
push
xchg
mov
js
int
jo
std
or
fbstp
sub
xor
mov
stos
adc
js
or
lret
loope
loopne
push
push
out
call
into
outsl
mov
xchg
xor
addr16
push
movsb
sub
sbb
out
movsb
push
cmp
push
and
push
adc
testb
ficoml
push
add
fcomps
jb
mov
adc
out
and
mov
jb
test
scas
dec
add
xor
dec
xchg
lret
push
adc
and
dec
jmp
and
out
add
mov
sbb
sub
loope
mov
mov
mov
or
push
sbb
dec
jle,pn
and
xchg
ljmp
dec
adc
jg
inc
dec
mov
cmp
push
inc
or
add
scas
testb
add
lahf
mov
xorb
movsb
repz
pop
jb
outsb
xor
notl
ror
mul
pop
es
and
cli
mov
push
movsl
dec
stos
cs
lock
aaa
js
in
cmpsl
mov
or
fistpll
js
lock
cli
mov
and
inc
dec
cmp
pop
jmp
mov
shrl
or
test
shll
pop
xor
inc
mov
mov
sbb
mov
xor
dec
clc
mov
sbb
aaa
fiadds
lea
stos
sahf
push
xor
out
pusha
mov
or
or
inc
lret
lahf
cmp
add
enter
rolb
icebp
inc
sbb
adc
mull
push
lods
pop
and
or
stos
cmp
mov
imul
jno
add
pusha
xchg
cmp
movsl
sbb
or
push
popf
add
cmpsb
add
inc
or
je
cmp
sti
fs
call
add
push
enter
repz
xchg
je
aaa
cli
in
outsb
sub
mov
inc
mov
ret
jne
sub
mov
xchg
add
inc
loop
xor
fwait
adc
or
add
add
or
add
push
scas
push
inc
cli
dec
push
push
inc
push
jo
pop
add
jne
bound
lods
pushf
fadds
push
ljmp
dec
ret
xor
data16
xchg
test
add
clc
push
sbb
mov
inc
mov
sbb
popf
cmp
dec
lea
mov
mov
cltd
cwtl
mov
pop
add
data16
aam
mov
push
cmp
mov
xchg
pop
in
lock
push
std
fstpt
adc
mov
cmp
push
or
mov
loope
mov
dec
mov
jo
test
push
xlat
sub
loop
inc
aam
mov
xor
rcr
and
loop
mov
pop
pop
fimull
out
rcll
sbb
cmpsb
mov
cli
daa
cmc
sbb
mov
mov
int
push
pop
and
push
xchg
fnsave
sub
inc
mov
push
push
aas
push
inc
sbbl
jno
orl
adc
in
inc
popa
cli
push
into
xor
mov
adc
sbb
cmp
push
pop
js
movsb
xor
and
fildll
dec
push
mov
inc
leave
add
div
ret
mov
cmp
movl
sub
ret
insl
fimull
lods
pop
dec
or
loopne
or
fdivl
inc
les
inc
sub
mov
bound
inc
mov
hlt
outsl
inc
push
mov
sbb
sub
call
add
cmp
sbb
mov
cmpsl
test
adc
and
sbb
xchg
sbb
out
shlb
and
dec
int3
push
or
cmc
outsl
daa
ljmp
mov
or
test
xchg
dec
add
add
and
dec
inc
add
add
add
add
mov
sbb
inc
mov
push
push
xchg
nop
dec
inc
push
push
sub
dec
and
mov
sub
mov
sub
mov
mov
shrb
dec
pop
and
mov
pop
xchg
rorb
push
push
sub
outsl
and
loopne
xor
xchg
sub
mov
sub
xchg
lock
mov
sarb
dec
jg
adc
pop
or
inc
cmp
sbb
test
or
jp
cmp
add
movsl
mov
test
sub
sbb
lea
jns
cmp
dec
sub
and
cmp
cltd
xchg
sub
xchg
dec
xchg
pop
dec
sub
jp
mov
xor
cltd
xchg
fsts
sub
cmp
popf
sub
xchg
jp
je
sti
push
or
and
sub
shll
mov
lcall
pop
adc
sbb
or
mov
imul
ljmp
imul
push
inc
pop
add
bound
xchg
cmp
insb
jmp
push
push
and
sbb
add
sahf
push
xchg
jno
adc
pusha
lret
xor
sub
in
outsb
loope
add
lock
faddl
fldenv
push
push
and
xlat
dec
sbb
pop
mov
inc
ret
dec
ret
add
jae
enter
movsb
rcrb
fs
stos
rol
int3
rorb
rolb
sub
andb
xchg
add
push
adc
mov
cmpl
add
loope
inc
mov
fidivs
btc
pop
ljmp
scas
add
mov
and
add
mov
xorl
and
dec
or
es
rolb
test
je
sbb
jne
adc
je
xchg
pop
test
inc
sbb
mov
adc
stos
xor
sbb
inc
add
adc
lock
fcoms
and
sub
jecxz
lret
insb
adc
addb
leave
mov
cmpb
mov
in
inc
sub
mov
xor
cs
add
and
mov
dec
mov
cltd
dec
dec
cmp
sbb
and
movsl
enter
test
pop
mov
jbe
outsb
or
push
xchg
sbb
movsl
cs
add
and
xlat
xchg
mov
adc
rolb
lock
aam
push
mov
inc
pop
dec
push
pop
pusha
or
and
sub
jp
pop
add
and
inc
leave
add
dec
and
test
pop
xor
scas
sub
clc
dec
add
adc
inc
movsb
push
aam
ss
leave
and
or
dec
data16
pop
pusha
add
xchg
or
adc
add
inc
inc
add
add
add
mov
and
mov
dec
insb
repnz
dec
pop
in
xor
pop
scas
pop
jl
push
rclb
cwtl
sub
test
xchg
and
pushf
sub
ret
push
and
movsl
aad
jae
ret
in
jge
mov
leave
je
aaa
mov
imul
push
clc
in
and
lea
xchg
jnp
loop
adc
dec
mov
out
push
adc
stos
pop
or
shl
pop
or
fcmovne
fmuls
mov
int3
dec
push
push
jecxz
jb
xor
jne
idiv
pop
xor
xchg
jnp
loopne
sub
rcr
inc
pop
sub
xor
into
mov
into
adc
sbb
add
popa
xor
add
lock
popf
and
xchg
fimuls
fldenv
xlat
jnp
sub
sarb
leave
adc
add
out
sub
cmpsl
scas
mov
not
inc
daa
cmp
sbb
sub
pop
notb
add
or
inc
call
aaa
scas
push
out
pop
loop
jmp
mov
pop
mov
inc
rolb
mov
mov
les
subl
dec
addr16
mov
jecxz
aad
imul
stc
test
loope
and
or
cmc
xchg
cli
pop
xchg
mov
sti
cmc
sub
jp
xor
pop
sub
mov
int
fwait
push
shrb
dec
cwtl
inc
inc
jns
pop
int3
pop
js
rcrl
cmp
ss
sub
push
jne
wrmsr
ljmp
or
cmpsb
sbb
lea
leave
aam
cld
jle
or
add
inc
test
push
or
movsl
insb
sahf
test
push
in
call
sbbb
test
out
cwtl
jo
pop
repz
or
jle
orl
cmp
add
adc
cmpb
inc
add
mov
cmp
mov
xorb
jae
adc
mov
mov
sub
sbb
inc
daa
push
push
popa
dec
mov
push
adc
adc
pusha
out
sbb
add
cs
push
jg,pn
or
mov
out
es
cwtl
xor
mov
lret
push
out
add
pop
dec
push
ret
lods
cmp
movsb
or
mov
fmuls
repz
cs
adc
add
and
mov
xchg
add
sub
test
push
pop
push
insl
or
sbb
in
or
jbe
xor
push
mov
add
call
inc
or
fiadds
subb
add
xor
add
sbb
adcb
mov
inc
shll
xorl
orl
jns
adcb
arpl
lret
fwait
movb
mov
xchg
popa
sub
imul
lret
push
or
push
push
das
add
push
aad
cmp
inc
lods
dec
stc
in
sahf
inc
rolb
xlat
xor
loop
lea
mov
sub
mov
sbb
mov
inc
add
movb
loop
test
mov
jmp
loop
add
loopne
pop
xor
std
sub
add
xchg
inc
pop
into
dec
xchg
cmp
or
lret
mov
and
es
sbb
sbb
mov
lds
push
shrl
mov
and
mov
push
add
mov
and
fs
test
adc
mov
sbb
test
adc
je
call
pop
jecxz
daa
lcall
jne
cwtl
xchg
cmpsb
xor
scas
xor
cmp
mov
loopne
sbb
mov
test
jns
inc
pop
inc
insb
fstpt
push
es
push
daa
mov
loopne
or
movsb
test
jbe
adc
test
sub
imul
rclb
hlt
push
dec
push
leave
adc
xor
cmpsl
add
inc
xor
data16
jo
push
mov
dec
cmp
push
insb
into
loop
or
xchg
add
sub
xor
sub
into
test
jge
mov
fisttpll
mov
shll
sub
dec
jno
rcr
fsubrs
fxch
adc
jo
or
mov
xchg
xor
sahf
pop
cwtl
fs
dec
inc
test
js
jle
flds
push
mov
sub
pop
sbb
aaa
imul
sub
push
jmp
adc
and
in
in
dec
xchg
add
mov
fidivl
and
sub
je
sub
lahf
movsl
lret
or
ret
inc
push
sub
inc
push
sub
add
adc
push
dec
xor
or
adc
cmp
bound
andb
jp
dec
dec
or
rcr
add
int3
cltd
xor
push
inc
and
and
inc
and
cwtl
mov
test
inc
cltd
mov
push
test
add
cmp
xchg
cmp
mov
inc
mov
xchg
cmp
fld
xor
movsl
gs
or
sbb
lcall
mov
ret
xchg
xor
jnp
insb
push
and
inc
sbbl
pop
scas
sub
and
add
push
inc
push
mov
dec
add
arpl
sbb
and
movb
inc
or
xor
adc
mov
mov
mov
mov
arpl
outsl
cltd
xor
jnp
xchg
dec
test
loope
scas
ds
mov
or
mov
mov
xchg
adc
add
add
xchg
stos
imul
pop
dec
roll
pop
sub
adc
pop
loop
xor
lcall
rolb
repnz
cltd
mov
add
es
add
cmp
mov
xchg
mov
mov
dec
add
mov
es
cs
ss
and
dec
push
adc
mov
lret
cmp
mov
out
or
or
sub
push
pop
clc
jne
test
js
dec
test
sub
xchg
imul
jno
xchg
mov
cmp
mov
jae
mov
mov
or
pop
cmp
mov
stos
insb
push
daa
or
ds
aaa
add
inc
mov
insl
xchg
inc
rolb
cmp
popa
mov
stc
jmp
xchg
inc
in
push
arpl
ficoml
sub
aam
sti
inc
inc
das
xchg
cmp
push
pusha
xchg
dec
aam
andl
xchg
and
enter
sbb
adcb
and
jmp
inc
pop
sbb
orl
frstor
fmulp
nop
sbb
rol
cs
push
pop
mov
cmpsb
pop
andl
push
xor
aaa
js
cmp
xchg
cmp
cmp
jnp
sub
into
lret
mov
sbb
fwait
add
xchg
fs
icebp
mov
psubb
popa
adc
fcomps
sbb
shll
jo
and
mov
or
pop
ljmp
adc
les
cwtl
sarl
cmp
sbb
jmp
or
inc
mov
mov
int3
xlat
mov
sbb
inc
mov
stc
and
adc
test
xchg
mov
test
mov
popa
push
in
andb
out
outsl
add
int
pushf
xchg
jns
fcmovnb
mov
mov
pop
out
int
and
ss
push
out
cmp
mov
mov
test
scas
jecxz
data16
push
dec
dec
push
inc
cmp
add
ljmp
adc
pop
test
adc
dec
cmp
push
aas
ret
xchg
sub
pop
cltd
subb
cmp
repz
lret
lret
aaa
stos
pop
test
ffree
repz
push
and
popa
mov
lea
mov
std
cmp
pop
fadd
rcr
push
dec
xor
icebp
sti
sarl
jle
mov
nop
outsl
fnstenv
push
jnp
cmp
data16
and
out
icebp
lea
sbb
adc
mov
cmp
mov
push
ret
rclb
pop
into
or
rol
iret
mov
test
inc
mov
sbb
dec
jmp
adc
out
mov
out
xchg
rdpmc
cmp
lock
jmp
pop
sub
pop
sub
fdivs
inc
sub
cmp
pop
mov
sub
arpl
mov
adc
aam
test
test
sbb
cmp
mov
mov
cmp
or
add
sub
adc
add
push
mov
loope
push
lods
inc
xor
inc
push
jg
push
mov
lahf
xchg
xchg
pusha
cmp
sahf
insb
xor
sub
mov
sarl
rorl
enter
int
lahf
enter
leave
test
sbb
jns
and
cmpsb
inc
test
je
pop
pusha
pop
pop
dec
xchg
push
cmp
mov
fmuls
bswap
xchg
repz
cmp
cmp
arpl
into
mov
aam
fadds
icebp
sbb
sub
cmpsl
insb
data16
push
pop
cmc
adc
jecxz,pn
sbb
bound
loopne
les
sub
lock
jmp
in
fadd
xor
dec
int3
rcll
cmc
push
js
pop
add
fwait
mov
mov
mov
pop
sub
popf
sub
xchg
pop
daa
inc
xor
add
cmpsb
mov
stc
sub
mov
in
mov
call
std
fiadds
in
adc
xor
pop
cwtl
pop
cmp
ret
in
dec
dec
cltd
ss
iret
lret
mov
aas
add
aad
and
add
fstpl
jb
lret
push
mov
cmp
popf
imul
push
xchg
pop
into
push
or
call
xchg
lds
sbb
lds
inc
dec
dec
fmuls
pop
add
into
and
xlat
cli
cmp
mov
push
mov
das
mov
inc
ror
popa
pop
add
inc
pusha
jo
xchg
mov
pop
sub
and
xor
clc
and
andb
loope
mov
test
mov
std
int
popf
andl
xlat
adc
and
and
cmp
movsl
add
add
cmpsl
int3
faddl
push
or
add
inc
stos
je
push
push
push
adc
cmp
and
outsb
xor
fildl
push
nop
mov
xor
into
sbb
arpl
or
and
fcomps
pushf
int
xorl
out
jns
popa
push
out
test
test
repnz
int
ret
xchg
mov
pop
push
lock
push
cmpsb
or
xor
push
mov
test
jo
add
fwait
out
mov
bound
ret
jae
sbb
dec
out
push
js
pop
fnstsw
pop
js
lea
xor
lds
clc
subl
mulb
orb
cmpsb
popf
iret
mov
daa
rcr
cmc
aad
loope
cmp
sbb
pop
loop
into
cmp
jae
adc
and
test
pusha
add
lock
xchg
outsb
add
pop
cmp
xchg
and
cmp
mov
mov
insb
test
pop
cli
push
add
mov
mov
add
push
or
dec
cwtl
pop
in
mov
mov
out
pushf
and
cmpsl
into
sub
mov
in
pop
cwtl
add
test
jmp
xchg
push
and
leave
pop
jle
pusha
jno
lahf
push
outsl
out
jge
jnp
push
repnz
orl
jmp
bound
icebp
jmp
or
cs
push
xor
int
inc
sahf
ret
mov
loopne
add
test
cmpsl
cwtl
addl
icebp
mov
mov
sbb
mov
xor
push
mov
dec
sub
sbb
addl
pop
mov
add
pop
aam
dec
aam
adc
push
cmp
fwait
and
cmp
pushf
mov
lahf
push
out
mov
add
sub
cs
mov
mov
pop
daa
lea
mov
or
daa
inc
popf
cs
imul
mov
push
xchg
inc
repz
dec
movsl
jmp
std
cmp
sbb
jle
add
add
scas
rolb
mov
ss
dec
inc
ror
int3
push
enter
pop
mov
out
xchg
cs
lea
push
cwtl
loopne
jg
adc
loope
cmp
rcl
xor
push
scas
sahf
push
push
mov
lret
sub
lea
dec
test
sub
out
push
pop
cmp
vcvtsi2ssl
jp
pop
fsubrs
pushf
pop
test
jne
stc
push
push
add
mov
ret
imul
fnsave
add
jl
or
out
cwtl
orl
push
sub
mov
sbb
and
pusha
mov
mov
or
mov
das
cltd
test
fiaddl
scas
pop
popa
push
and
jmp
fdivp
xchg
stos
mov
jle
sbb
and
aas
repnz
lret
add
cs
inc
movq
jae
lods
insl
roll
call
mov
out
pop
push
pop
sbb
push
inc
xor
push
pop
scas
push
cmc
inc
or
adcb
pop
push
imul
cmp
in
xchg
push
adc
push
adc
inc
pop
xor
in
ret
add
pop
mov
adc
lock
sub
and
dec
fidivl
aaa
jg
or
in
or
sbbl
popf
pop
xor
add
cmp
std
sahf
cs
lahf
jno
jo
lcall
xchg
in
xchg
xlat
int
xchg
adcl
insb
jno
mov
pop
popf
add
rorl
pushf
lret
adc
popa
pop
xor
ss
push
stos
dec
inc
cmp
cmp
mov
add
sub
pop
adc
popa
xlat
dec
adc
rcrl
xchg
push
popa
push
or
or
jecxz
sbb
out
jns
inc
push
int3
ja
mov
dec
mov
xlat
adc
pushf
out
push
sbbb
sbb
push
xor
mov
gs
mov
lds
adc
int
xchg
adc
fldenv
pop
add
pop
nop
popa
dec
push
or
lret
xor
inc
sbb
add
ja
mov
xchg
addl
cwtl
rclb
test
inc
add
call
roll
push
pop
inc
out
lret
popf
adc
jmp
inc
sbb
adc
add
enter
fldt
nop
sub
or
ss
clts
xor
rclb
jmp
push
lcall
xor
lcall
test
sub
xchg
add
mov
xor
cmp
dec
pop
ret
add
xor
shr
dec
pop
push
push
or
out
mov
cmp
stos
inc
xchg
test
push
cmp
popa
mov
loopne
imul
cmp
xor
xchg
lret
and
mov
test
mov
mov
aad
adc
xchg
push
dec
sbb
jge
inc
push
lods
add
push
addl
mov
jnp
add
loop
shrb
cld
loope
jae
nop
cmpsb
adc
mov
add
lock
lcall
add
and
andb
xchg
iret
clc
outsl
ret
jl
inc
pop
jmp
test
inc
pop
ljmp
imul
imul
mov
mov
test
ficompl
xchg
ss
xchg
sbb
mov
stos
jp
push
pop
xor
xor
unpckhps
push
push
and
fistpll
and
in
mov
into
mov
dec
leave
vmwrite
cmp
sti
clc
imul
repnz
cmp
lods
adc
or
cmp
ret
in
dec
ja
cmp
cltd
push
xor
adcb
push
xor
dec
out
or
add
add
sbb
and
mov
fs
push
lcall
inc
add
add
mov
push
js
push
mov
sbb
cmp
dec
push
and
roll
test
aas
pop
mov
lea
inc
pop
xchg
xchg
add
in
adc
push
in
or
out
fimull
addr16
sbb
mov
andb
imul
aad
shll
int
mov
lret
rcr
cld
lods
xchg
push
into
cmp
dec
mov
jo
cwtl
cmp
ret
pushf
mov
pop
xchg
xchg
imul
cs
xchg
rclb
add
mov
das
xchg
add
sub
mov
jecxz
arpl
inc
push
fisttps
enter
adc
add
adc
fisttps
les
dec
push
inc
jo
inc
ds
lods
push
xor
rol
cltd
xchg
xchg
sub
jmp
add
jb
test
mov
es
dec
or
fimull
pop
lret
adc
test
sahf
push
vunpcklps
cmp
cmp
push
push
jo
fildl
int
inc
mov
dec
lock
push
xorb
cmp
xlat
enter
xchg
push
mov
dec
jno
inc
scas
les
cmp
leave
shrb
fcompl
inc
arpl
pop
push
hlt
rcrl
inc
popa
pusha
pop
bound
int
rorl
shll
cmp
dec
adc
xchg
adc
inc
or
daa
xchg
popa
cwtl
mov
int
cmovl
mov
mov
inc
cld
add
test
test
clc
pop
pop
jnp
loope,pn
jbe
or
pusha
xchg
fisubs
xchg
dec
mov
add
out
pop
repz
pop
jo
inc
test
mov
mov
stos
mull
imul
in
sub
sub
and
mov
and
cmp
dec
mov
sbb
jmp
xchg
or
push
cwtl
adc
fs
and
int3
aaa
or
xchg
andl
and
dec
pop
mov
aas
xor
mov
mov
ret
lock
insl
xor
sbb
xchg
inc
and
jecxz
addb
adc
out
pop
inc
loopne
hlt
leave
add
push
mov
or
fildl
addl
cltd
add
bound
je
mov
test
sbb
adc
cmp
add
outsb
or
cmpb
sbb
ret
pop
and
fcom
cmp
rcrl
or
dec
in
adc
rolb
and
cwtl
xor
lret
pop
fsts
sub
sub
xor
stc
jo
insb
pushf
add
and
or
jno
test
add
insb
cwtl
popa
sahf
bound
out
add
adc
loop
push
iret
sbb
ljmp
pop
pop
push
xchg
add
sbb
and
icebp
je
orl
inc
clc
push
sub
mov
or
cmpsb
fildl
xchg
jle
movsb
test
adc
roll
jae
lods
adc
in
adc
addps
xorb
pop
jnp
rclb
aaa
push
cmpsl
into
cmp
arpl
jo
xor
inc
movsb
pop
inc
xchg
sbb
add
inc
scas
mov
inc
xor
mov
insl
sbb
xchg
xor
push
sbb
fnstenv
cmp
nop
adcb
sbb
cmp
add
std
and
repz
rolb
dec
ret
test
cs
test
push
pushw
mov
addl
ss
mov
inc
push
xchg
sbbl
adc
cmp
xchg
add
pusha
dec
inc
ja
add
adc
cmpl
cmp
test
fs
and
inc
add
jae
insb
dec
pop
inc
cmpsl
dec
xor
add
xor
cwtl
mov
sub
loopne
lods
sub
mov
adc
rcrb
or
mov
inc
cmp
test
divpd
mov
and
hlt
divb
pop
jne
mov
lcall
dec
pop
into
gs
imul
pop
cmpsb
add
adc
icebp
and
std
add
jnp
test
insl
and
bound
push
adc
dec
inc
gs
and
in
pop
pop
imul
pop
test
test
add
incb
push
adc
xor
cmp
test
imul
arpl
sub
mov
xchg
xchg
gs
cmpsl
cmpl
adc
je
nop
pop
pop
mov
push
pop
mov
lea
dec
add
push
and
push
sbb
and
fwait
xor
in
cmp
mov
push
je
aad
adc
inc
add
repnz
int3
nop
sub
inc
mov
bound
mov
mov
shrl
add
xor
cmc
adc
push
push
inc
aad
pop
int
mov
mov
pop
bound
and
rcrl
mov
int
push
repnz
add
push
adc
out
xchg
add
push
push
fnstenv
lock
in
or
mov
pop
cmp
sub
in
mov
lret
adc
scas
stos
sub
mov
cs
mov
adc
sub
aaa
xchg
lret
xor
ret
fmul
dec
ret
out
out
inc
addr16
aam
xchg
xchg
sbb
mov
mov
dec
aam
popf
push
mov
ret
cwtl
xchg
lods
xlat
push
sbb
insb
push
mov
jecxz
test
cld
loopne
jo
push
ljmp
cmp
outsb
adc
ret
sub
add
push
dec
fidivl
pop
add
push
test
sbb
or
sbb
aam
adc
pusha
lret
movsl
push
mov
into
in
add
mov
xchg
inc
xchg
pop
mov
or
mov
and
mov
pop
pop
add
jl
insb
sbb
adc
add
fwait
sub
push
push
imul
cmc
mov
cmp
dec
add
inc
popa
fidivrl
hlt
nop
dec
mov
repz
jne
inc
and
cmpsb
xchg
inc
fstps
mov
fidivs
sbb
ja
or
xor
jo
mov
xchg
test
push
jl
push
cld
adc
pop
and
in
je
lea
jb
add
add
push
clc
and
in
mov
icebp
fs
push
pop
shrl
incb
xchg
cltd
testb
sub
jns
xchg
lods
stos
call
inc
adc
andl
or
scas
sub
xchg
bound
mov
inc
mov
push
cmp
xor
jne
adc
sbb
dec
cs
mov
push
jecxz
jmp
mov
pop
mov
push
cld
xchg
insl
je
int
shll
mov
lea
scas
addl
xor
mov
clc
ret
push
jno
xchg
sbb
jo
rorl
dec
es
ljmp
xorb
sahf
push
add
cmp
call
and
loopne
lds
lods
dec
or
cli
cmp
adc
dec
sub
mov
mov
push
sbb
imul
mov
jmp
mov
jno
gs
popf
xor
loop
inc
clc
mov
jae
mov
mov
sub
in
mov
test
pop
lods
mov
pop
xor
mov
inc
dec
mov
adc
dec
cmpsl
adc
mov
cmp
leave
ficompl
jg
mov
lods
xchg
adc
sbb
or
cmc
iret
gs
add
popf
jnp
push
push
add
adc
sub
dec
cltd
fcmovb
mov
sbb
push
pop
mov
add
fidivs
sarb
and
sub
mov
jecxz
movsb
jb
add
enter
xor
push
push
push
pop
sub
sbb
mov
lds
popa
jbe
push
jo
adc
push
mov
shrl
adc
cmpsb
jne
and
inc
popf
push
test
sbb
or
pop
clc
je
adc
adc
or
nop
rclb
and
xor
push
mov
das
xchg
pop
adc
movsl
push
pusha
idivb
fstpt
mov
push
pop
mov
fcmovnb
pusha
push
cmp
inc
stos
gs
dec
sbbl
call
xchg
push
out
dec
mov
mov
jbe
and
xchg
pusha
and
popa
or
and
fdivrs
ja
mov
sub
mov
daa
jp
cmpsb
cwtl
outsl
daa
insl
adc
mov
lret
add
jle
clc
push
mov
xor
mov
iret
sub
xor
jge
adc
sbb
jnp
mov
mov
xchg
cmp
or
out
aad
push
mov
cmc
rcrl
or
xlat
cmpsb
or
je
adc
lret
aam
loopne
shlb
movsb
rcrb
stos
cltd
mov
pusha
push
popf
jbe
dec
sbb
mov
inc
and
push
test
sub
hlt
sub
sbb
sbb
sbb
adc
daa
pop
jo
sbbl
or
add
sub
xor
add
xchg
imul
adc
out
adc
lcall
xor
or
inc
or
mov
adc
fs
movsl
insb
sbb
gs
lcall
push
sbb
sbb
dec
and
pusha
mov
push
mov
stos
mov
mov
xor
shrl
jmp
lcall
cmc
mov
loopne
in
push
dec
cmc
inc
test
scas
mov
scas
xor
inc
xchg
sub
movsb
lret
xchg
add
ficomps
inc
add
test
xchg
pop
bound
shll
lods
ret
ficoml
sbb
clc
shrb
xorb
je
jge
fildll
add
mov
add
inc
icebp
push
add
pop
cwtl
pop
adc
or
push
xor
push
add
std
cmp
icebp
push
or
icebp
xchg
mov
les
mov
pop
pusha
bound
add
push
inc
js
in
pop
mulb
push
shll
inc
aam
xchg
stos
mov
pop
mov
push
aam
or
inc
dec
jbe
dec
pusha
push
cmp
shrb
cs
cmp
call
sub
mov
aas
das
mov
jne
dec
xchg
mov
sarb
mov
push
mov
jle
mov
xchg
push
pop
xor
stc
sarl
aad
daa
lret
mov
add
out
pusha
add
jg
lock
mov
test
add
notl
sahf
lods
mov
mov
scas
pop
mov
sub
ljmp
sahf
fstpl
movb
imul
xchg
lret
mov
mov
scas
mov
pop
stos
mov
push
jb
cmp
aad
je
xchg
icebp
lcall
lock
stos
cmpb
mov
out
or
das
mov
scas
lock
hlt
sbb
mov
push
das
jmp
mov
stc
jmp
lret
mov
loope
sbb
ja,pn
pushf
dec
lds
test
adc
lret
cmp
jle
sub
lahf
shrb
sbb
lods
cld
aas
cmp
jmp
mov
inc
jbe
cmp
or
jo
mov
dec
add
ret
push
or
sub
add
push
inc
inc
sub
shlb
mov
pop
add
adc
pusha
dec
mov
xchg
or
adc
loopne
js
add
mov
cmp
pusha
dec
test
sub
adc
and
push
lea
xchg
int3
lea
enter
or
and
movsb
insl
or
shrb
inc
pop
xchg
add
inc
jmp
add
lret
push
lret
jne
cmp
lret
jne
cmp
lret
jne
cmp
lret
jne
cmp
lret
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
dec
jae
cmp
add
ds
in
jmp
cltd
cmp
push
ljmp
push
jb
rcrb
xchg
pop
pop
adc
jne
xchg
mov
stc
mov
jmp
imul
mov
rorb
mov
loopne
int3
push
pop
push
pop
add
icebp
sbb
test
push
mov
scas
adc
add
mov
inc
int
enter
testb
aas
daa
mov
push
lret
dec
ja
cmp
push
cmp
popa
adc
mov
decl
adc
lds
fwait
mov
inc
rcrl
aam
sarl
out
shlb
mov
dec
pop
test
loopne
mov
adc
adc
xor
and
jnp
test
mov
mov
adc
in
ret
popf
sti
jne
bound
xchg
jno
push
into
lods
stos
mov
out
cmp
jecxz
push
xor
testl
in
popf
aam
repz
push
popa
inc
dec
sub
jns
pop
sti
into
test
fs
push
jo
ficomps
fdivrl
jns
pushf
addl
pop
sahf
jnp
mov
test
and
mov
test
insb
mov
addb
bt
test
pusha
push
lahf
insb
push
ret
dec
push
cmp
adc
das
inc
or
scas
scas
sub
sub
daa
jo
movsl
stos
fdiv
loope
add
jne
add
adc
popf
sub
je
pop
sahf
andb
push
ret
xchg
filds
mov
mov
xor
pop
xchg
pusha
jmp
mov
or
repz
fwait
mov
sbb
sub
ret
loope
jne
or
adc
cmp
popa
into
hlt
add
push
adc
movsl
cmp
mov
push
inc
add
push
stos
fsts
aad
pop
xchg
xchg
sbbb
xor
push
sbb
stos
movsl
fstl
in
mov
inc
push
aam
ja
insb
int
fldt
fisubs
mov
cmpb
dec
push
sbb
data16
xor
pop
or
adc
inc
mov
stos
cmp
in
xchg
add
dec
adc
xor
fsubl
mov
bextr
fsubr
pop
daa
out
les
outsl
movsl
dec
xchg
loop
jae
mov
repz
aas
mov
sbb
inc
pop
nop
mov
cmpsb
mov
rcrl
out
aam
cmpsl
jmp
sti
dec
movb
test
lcall
imul
mov
addb
xor
rorl
lahf
std
jno
arpl
pop
sub
jns
shrb
sbb
scas
sub
sub
cmp
cmp
sti
out
cli
pop
aam
outsl
pop
shll
jmp
repz
insl
popf
sub
int3
hlt
test
xor
adc
push
lods
xchg
out
jnp
jle
data16
jnp
inc
gs
mov
arpl
repnz
dec
decl
push
test
xor
int
aas
fistl
jp
dec
dec
and
jns
sti
in
orl
push
in
jg
jo
jge
negl
or
hlt
mov
fisubrl
mov
sbb
aaa
cmp
sub
decl
sub
xor
stc
add
aam
cld
sti
call
xchg
jg
inc
adc
insl
mov
sbb
mov
mov
sub
add
out
mov
loop
lcall
pop
in
rorb
fst
pop
rclb
scas
adc
scas
push
dec
mov
out
push
lea
sub
xorb
xchg
push
pop
mov
add
or
int3
sub
cs
mov
lret
cli
orb
cli
push
push
or
and
push
movsb
cld
outsb
enter
pushw
push
xchg
sbb
mov
mov
stos
inc
adc
push
xor
cmp
cli
push
lods
or
mov
jg
mov
adcb
pop
sarb
dec
push
dec
or
and
push
shlb
mov
adc
andl
mov
sub
test
or
rolb
ds
dec
movsl
imul
loope
sbb
loop
or
xor
insb
inc
or
and
shlb
and
inc
mov
pop
inc
xor
loopne
cmpsl
pop
inc
or
orb
addb
into
out
mov
mov
jg
cmpl
das
dec
jle
xchg
xor
xchg
dec
sub
jl
dec
jecxz
and
std
jno
add
push
mov
lock
sub
in
cmp
hlt
jnp
inc
and
mov
push
or
and
inc
sbb
stc
cmp
and
push
test
sbbb
add
mov
inc
ret
inc
out
add
faddl
test
and
popf
flds
mov
cmpsb
xchg
mov
hlt
sti
setle
add
mov
addl
push
movsb
das
dec
das
or
dec
std
ja
add
inc
pop
or
std
xchg
mov
pop
add
pop
addr16
rcl
imul
ret
fdivp
call
std
jns
scas
or
dec
aaa
dec
mov
dec
push
pusha
cmpb
push
aad
lock
pop
stos
mov
mov
jnp
imull
xchg
call
jae
in
add
mov
jle
dec
int
insb
mov
pushf
movsl
mov
fcmovb
fnstsw
mov
fimuls
adc
ret
jge
mov
std
jae
sub
pop
decl
pop
loope
mov
inc
imull
fucompp
sub
mov
imul
mov
mov
addl
adc
add
repz
jbe
stc
sbb
hlt
stos
sti
imul
movsb
mov
xlat
jmp
cmp
insb
push
fiadds
sub
leave
int
xchg
dec
stc
shrl
subb
inc
adc
xor
lahf
dec
das
stos
cmp
rorb
shl
ficoml
add
sub
cli
inc
loopne
out
shr
repz
mov
sbb
fsubrl
xor
mov
dec
lret
out
jns
enter
mov
sub
fwait
push
call
fwait
sub
mov
cmp
xchg
cmpsl
iret
ret
sbb
mov
push
xlat
das
dec
mov
adc
ja
xchg
mov
cmp
inc
add
cmp
inc
dec
mov
fwait
cmp
push
les
pop
hlt
nop
sbb
in
dec
mov
jb
subb
imul
daa
outsl
xor
imul
sub
aam
mov
test
mov
lds
jp
cmp
xor
cs
repz
in
lea
sbb
sahf
mov
cwtl
push
cmp
push
cmpsb
arpl
test
out
int
dec
xor
or
lret
in
repnz
xchg
cmpsl
aaa
mov
pop
fnstenv
lods
fistl
dec
cmpsl
call
les
aad
xchg
sahf
xchg
aaa
das
pop
test
push
pushf
inc
jns
xor
mov
cwtl
hlt
and
es
es
sbb
bound
into
dec
pop
jnp
test
test
dec
imul
out
sbb
xchg
dec
mov
push
into
sbb
mov
in
int
xor
fwait
jo
push
cmp
aad
adc
push
imul
pushf
mov
mov
rcrb
movsl
mov
lahf
mov
mov
andb
adc
xchg
xchg
push
adc
mov
hlt
mov
push
push
rclb
dec
int
lds
xchg
out
mov
leave
int
cltd
jae
pop
lcall
mov
mov
es
andb
sub
jb
jmp
rorl
pop
jno
flds
mov
push
cmp
mov
inc
mov
rorb
adc
lea
push
movsl
loop
inc
mov
sbb
in
mov
lods
fnstenv
insb
adc
jns
jo
or
jns
pop
xor
and
cmp
adc
xor
arpl
cmc
jle
pop
sub
repnz
lahf
mov
cld
pop
fildll
add
xor
push
cli
xor
cs
cld
inc
cmp
push
loop
dec
cmpsb
loopne
fwait
cli
dec
lahf
lds
pop
cli
dec
sbbb
adc
sar
xchg
and
add
xor
mov
dec
fldl2t
push
add
outsb
call
aas
and
cmp
xor
xchg
fistpll
shll
rolb
inc
jb
mov
and
or
jmp
xor
fs
adc
addr16
mov
call
dec
or
data16
sbbl
and
push
and
in
sub
movups
lret
bound
mov
pop
adc
lahf
lods
mov
sbb
movsl
cli
xchg
inc
movsb
push
lahf
dec
rcll
int3
iret
mov
or
dec
jnp
lahf
sub
pop
xchg
and
jmp
mov
xchg
les
mov
or
xor
repz
rorb
mov
xor
push
frstpm(287
push
andl
int
leave
sbb
sbb
test
jae
ret
inc
xor
cmp
nop
or
or
add
jg
sbb
int3
lock
sub
dec
lret
xchg
sbb
xor
das
jns
sub
jbe
movsl
rclb
and
push
mov
daa
in
stc
aam
sub
xor
push
xor
dec
or
enter
xor
data16
insb
push
dec
cmp
jo
xor
int3
pop
push
pop
push
fwait
rsqrtps
aaa
jo
pop
push
adcl
jg
mov
xor
or
nop
lea
push
sub
add
xor
mov
adc
push
dec
aas
xchg
and
es
gs
cmpb
fisttpl
sub
cmpsb
sbbl
add
fwait
mov
and
mov
and
cmpsl
and
lea
jmp
jg
push
mov
out
dec
sbb
clc
fcmovne
loop
sbb
sbb
and
data16
adc
dec
out
mov
cmp
sub
movb
cltd
jg
or
fs
mov
jno
xor
adc
test
dec
ja
jbe
xor
dec
jmp
lahf
test
mov
dec
mov
hlt
idiv
jecxz
fisttpl
imul
sbb
in
cmp
scas
jle
cmpsl
sub
shrl
icebp
dec
push
out
sti
xorl
shrl
mov
mov
sbb
aas
aas
push
ffree
jmp
pop
aas
hlt
sar
sub
lds
aaa
into
je
ja
cmpsl
fnsave
and
pop
or
sti
ret
adcl
imul
fidivrl
mov
dec
sub
dec
fcompl
xchg
xlat
mov
inc
and
pop
in
pop
data16
xor
add
inc
and
jns
push
inc
es
cwtl
stos
movl
fnstsw
add
dec
enter
js
push
mov
sbb
jne
sbb
test
fbstp
add
add
jp
out
out
test
jp
fstps
lret
adc
mov
lds
js
loopne
in
imul
cwtl
cmpsl
ja
sbb
inc
jbe
test
jecxz
and
xlat
jae
pop
adc
fidivrs
popa
push
jo
xchg
popa
pop
sub
mulb
sarb
mov
cmpb
inc
daa
lea
cmp
and
ljmp
xor
aad
mov
mov
loop
sub
or
in
ljmp
call
dec
dec
stc
jmp
mov
push
xchg
mov
or
test
int
xchg
inc
jg
lret
ret
loopne
mov
dec
add
add
add
add
add
add
add
adc
repz
lahf
sub
arpl
add
test
mov
pop
mov
jne
jae
adc
mov
movsl
pop
idivb
fisubrs
and
adc
inc
add
adc
cmp
add
ja
xchg
nop
push
jo
xor
push
outsl
pop
stos
adc
mov
pop
dec
pop
add
sbb
test
test
mov
sub
or
xchg
and
aad
xor
pushf
or
or
enter
sti
ds
and
out
add
push
add
add
add
pop
std
lock
pop
repnz
add
hlt
jb
or
push
clc
pop
cwtl
lods
daa
jmp
mov
scas
sbb
rcrb
jg
lods
mov
cmpsl
sbb
inc
sbb
ljmp
cmp
test
sbb
leave
cwtl
jle
shl
and
jmp
faddl
push
push
iret
add
and
xor
roll
mov
clc
mov
outsb
pop
cmp
pop
popa
fsubrl
rcr
cmp
ja
das
ficoms
cmp
sub
adc
outsb
push
repnz
jmp
inc
pop
jg
xchg
rol
xor
inc
push
cmp
xchg
jg
pop
adc
push
mov
clc
mov
roll
js
pop
xchg
sub
cmp
arpl
mov
hlt
sub
add
ss
call
add
adc
adc
adc
add
cmp
jb
aad
movsb
aad
sbb
sub
cwtl
mov
inc
push
jle
fisttps
int3
push
aas
jle,pn
xor
cld
jl
je
inc
jg
lret
mov
or
pop
lret
jl
into
iret
subps
cli
out
xchg
add
loopne
dec
cmc
push
adc
jno
jne
ja
out
rorb
dec
arpl
inc
cmpsb
adc
dec
sahf
adc
sarb
es
xchg
jle
add
data16
dec
mov
pop
push
fwait
xor
sarb
imul
in
vmwrite
add
push
ret
repz
sahf
cmp
repnz
mov
or
cmp
insl
xchg
iret
xor
push
jl
out
addl
xchg
jg
das
pop
xchg
cmpsl
addl
pop
pop
int3
pop
mov
sbb
adcb
xchg
push
ja
dec
dec
mov
xchg
mov
lods
sbb
jbe
xchg
xchg
mov
or
lcall
sbb
sar
cmp
pop
movsb
jo
jmp
stos
push
lods
push
push
or
test
or
dec
fstpt
mov
shll
push
and
xlat
sbb
pop
or
xchg
out
or
mov
js
mov
sub
jo,pt
push
mov
call
pop
pusha
sbb
lock
mov
outsl
mov
dec
push
jle
outsl
int3
mov
jg
fucom
fmul
ljmp
sub
cmp
testb
xchg
rolb
stos
cmp
iret
es
xchg
adc
iret
mov
xchg
sarb
mov
xor
into
fsubs
cwtl
and
into
push
xchg
pop
fincstp
jmp
leave
jbe
loop
sti
and
mov
or
repz
cld
push
nop
add
rclb
notl
inc
idiv
pop
or
test
sub
movd
testb
pop
push
cmp
or
xchg
and
cmpsl
add
fnsave
jp
data16
xchg
dec
fcompl
cmp
mov
cmp
mov
jge
mov
movsl
pop
lea
push
xchg
xor
inc
in
rorl
test
push
cltd
lahf
ficompl
or
std
xlat
xlat
shrl
mov
fneni(8087
push
mov
dec
mov
or
push
push
in
mov
shll
movsb
insb
sbb
pop
test
rcrl
cmc
mov
nop
ret
sub
mov
mov
inc
sbb
fimuls
cld
adc
jns
rcrl
into
push
faddl
sub
pop
in
arpl
mov
out
jle
mov
or
insl
adc
jb
aad
xchg
xchg
jno
jl
icebp
and
jge
mov
push
aad
push
jl
cs
inc
test
loopne
fisttps
int
pop
jb
aas
push
cli
inc
pop
cmc
mov
push
repz
mov
push
xchg
fists
repz
sti
leave
nop
and
movsl
mov
fidivs
mov
divb
mov
loop
ret
inc
daa
xor
jle
or
xchg
dec
iret
mov
enter
filds
push
sub
fcomps
push
xchg
pop
adc
jecxz
scas
and
lods
sar
arpl
add
cld
dec
jge
mov
inc
stos
hlt
cltd
cli
cmpsl
call
gs
or
in
push
test
pop
pop
push
es
mov
mov
cmp
mov
mov
sbb
sub
sub
xor
repnz
pop
mov
fsubp
cs
lcall
divl
sbb
push
shrb
pop
cmp
mov
es
cmp
sub
xchg
in
popf
test
in
cmp
jp
cmp
adc
adc
xchg
jge
fs
push
test
push
pop
push
cmp
or
negl
rcrb
jnp
cld
sub
out
mov
cli
push
or
stc
loope
das
or
xchg
jne
inc
bound
xchg
sub
insl
pop
sub
fwait
xchg
mov
cmp
adc
mov
xchg
add
loope
xor
pop
sarl
ret
repnz
arpl
push
xchg
push
jne
cmp
dec
lea
stos
sbb
or
xor
adc
pop
cmp
add
inc
xor
dec
pop
mov
pop
cltd
mov
cmp
lock
jmp
hlt
pusha
sub
or
mov
test
mov
fisubl
xor
cmpsl
mov
fadds
sub
adc
push
push
sbb
adc
mov
iret
xor
xchg
sti
cmc
jne
jae,pt
add
jbe
stos
loopne
adc
scas
pop
cmp
cmpsb
das
sub
mov
jmp
mov
ds
xchg
push
sub
xchg
adc
imul
lock
ret
push
lcall
sub
idivb
adc
insl
cltd
loopne
mov
sub
xor
scas
dec
or
andb
add
lret
fwait
repnz
push
mov
xchg
je
jmp
sbbl
jecxz
jno
pop
js
addr16
push
sahf
xor
jmp
dec
sti
fdivrp
jo
lret
pop
addr16
jge
cmpb
push
dec
dec
aas
or
push
add
pop
add
inc
inc
or
sahf
addr16
sbb
das
mov
mov
ret
test
js
imull
scas
lret
pusha
sub
bound
repz
repz
shl
adc
mov
push
mov
sub
xchg
push
mov
push
ror
push
fs
outsb
stos
pop
adc
cltd
bound
sti
lret
jp
cmpsl
fstl
out
jo
sbb
aam
add
es
fsubr
jno
add
out
cmp
stos
sahf
cmp
add
jge
and
das
test
mov
and
jge
mov
push
pop
push
daa
aas
je
out
xor
jge
mov
das
pop
jg
hlt
incb
mov
xor
enter
xchg
fisttpll
push
mov
outsl
pop
jg
and
fiadds
ror
sti
mov
lock
mov
push
or
rcll
loopne
imul
dec
mov
ret
mov
repnz
jmp
outsb
xchg
pusha
loopne
popf
loopne
and
cld
in
xchg
and
lds
sahf
xchg
in
insl
dec
ret
repnz
mov
cli
enter
adc
out
out
cli
jbe
bound
outsb
addr16
cmp
iret
sbb
pop
icebp
inc
imul
movsb
test
scas
cmpb
mov
jno
push
cmp
lret
mov
pop
or
mov
jae
dec
fs
jl
outsl
fcompl
jle
sub
add
add
jbe
sub
into
pop
cld
test
xchg
sub
mov
inc
push
sub
mov
iret
sbb
pusha
and
sub
pop
loopne
es
in
cmpsl
pusha
jp
out
dec
sbb
push
push
jecxz
push
mov
jmp
mov
out
adc
ret
inc
inc
push
out
cmpsb
test
jecxz
in
roll
icebp
stos
lret
pop
into
sarb
cmp
pop
fs
cmc
fildll
imull
sub
repz
test
push
pop
sbb
fists
xchg
test
cltd
hlt
dec
and
sahf
sbb
sub
xor
cmp
lahf
mov
ljmp
xor
adc
push
mov
call
add
neg
fildl
daa
loop
loopne
pop
hlt
ss
in
dec
out
enter
cmp
xlat
or
add
pop
xchg
add
add
xchg
pop
dec
xlat
out
call
adc
jno
add
cmovo
or
add
add
lea
inc
jne
xchg
cmpsb
adc
cwtl
lods
or
les
lods
stos
sbb
inc
jbe
les
push
add
mov
out
fisubrl
mov
add
xlat
test
mov
iret
push
stos
sub
test
and
lods
or
pop
jl
or
sub
fnsave
adc
cmp
push
lahf
jle
mov
or
mov
fcmove
fistps
jecxz
test
mov
cld
mov
xchg
jl
dec
adc
ljmp
cmpsb
in
mov
divl
imul
insl
ljmp
add
icebp
mov
std
test
mov
inc
and
push
xor
iret
divl
mov
xchg
add
stos
pop
sub
fdivr
ss
insb
das
xor
jae
stc
adc
sahf
stc
sahf
fcmove
inc
lcall
loop
sub
mov
mov
fimull
mov
or
xor
add
mov
inc
push
bound
dec
pop
add
lock
in
fiadds
xchg
cltd
jae
mov
jecxz
or
xchg
push
mov
out
push
xchg
dec
jmp
xor
add
mov
xchg
cs
je
iret
or
sti
xchg
daa
dec
mov
sub
dec
lret
mov
jle
cmpsb
mov
es
mov
inc
insl
insl
dec
push
pop
pop
repnz
shlb
shl
orb
test
dec
push
addr16
pop
or
jnp
out
mov
imul
hlt
sbb
test
sbb
fsts
mov
sbb
mov
mov
push
cmp
jl
lahf
clc
das
andl
xchg
shufps
pop
mov
mov
inc
jnp
ja
stos
jmp
pop
adc
das
ljmp
shll
in
add
mov
dec
xor
xor
mov
mov
mov
cli
adc
jecxz
shrb
insb
push
out
push
test
nop
fldt
mov
rclb
mov
addr16
jnp
ljmp
jmp
scas
fwait
add
xor
arpl
ljmp
outsl
cmp
mov
jg
jae
mov
fwait
lcall
jp
into
lods
mov
dec
imul
pop
xchg
mov
jbe
sub
scas
jp
scas
shll
xchg
pop
mov
pop
movsb
sbb
add
add
jmp
push
dec
cmpsb
rol
push
push
sbb
nop
sarb
xchg
adc
in
push
test
adc
jmp
jmp
rorb
in
push
jle
adc
rcrl
add
jmp
call
aaa
xchg
mov
mov
push
xor
xchg
and
bound
in
pop
subb
xor
sbb
push
aaa
scas
fsubl
xchg
xor
dec
sub
or
pusha
jns
mov
fdivs
callw
push
add
lcall
push
fcoms
into
or
jne
inc
cmp
mov
stos
ffree
divb
sub
hlt
push
into
bound
call
jecxz
cli
mov
sahf
mov
test
push
mov
iret
cltd
sbb
xchg
sub
aad
mov
pop
in
and
shll
add
inc
imul
stos
fnstsw
pop
movsb
je
mov
lods
dec
inc
and
lods
xor
mov
jnp
out
ds
or
cmc
push
in
xchg
mov
cmp
bswap
lods
mov
fcoms
pop
les
xchg
pop
mov
rcl
popf
or
out
jbe
inc
add
xchg
dec
push
adc
fiadds
loope
mov
inc
push
jmp
add
sbb
mov
push
dec
dec
sbb
xlat
scas
mov
push
out
sbb
data16
adc
fsubs
pop
mov
inc
jp
adcl
and
lock
lea
dec
or
dec
sub
xchg
jge
cmp
adc
pop
ljmp
mov
enter
paddd
jg
out
ss
push
mov
lea
adc
xchg
mov
jle
loope
dec
mov
mov
cs
push
cli
mov
into
xchg
addr16
icebp
xchg
imul
mov
xor
leave
pop
push
aam
out
sub
mov
cmp
aad
daa
fcmovb
pop
xchg
test
cs
mov
scas
adc
std
inc
in
jge
jge
in
inc
js
repz
fdiv
mov
pop
aaa
stos
and
fcomip
lahf
push
pop
jecxz
testl
enter
push
xor
ss
add
push
sbb
mov
outsb
mov
sahf
pop
pop
sub
sbb
test
bound
xchg
clc
jge
push
jp
in
rolb
lock
je
pop
sbb
mov
in
aad
insl
ret
scas
enter
mov
mov
mov
add
pop
add
hlt
add
xor
inc
daa
jb
adc
fstpt
mov
in
inc
jmp
lds
das
cmp
subl
mov
clc
xchg
into
mov
aam
xlat
and
mov
ljmp
mov
jno
mov
push
add
pushf
dec
adc
mov
popf
or
pop
loop
shlb
xchg
mov
popa
xor
js
rclb
adc
stos
mov
ljmp
mov
push
data16
mov
sub
flds
lret
cs
inc
bound
jge
xor
jecxz
stc
mov
and
cmp
clc
and
aaa
mov
add
std
mov
mov
das
mov
xor
movsl
cmp
xor
in
test
fmull
cmp
push
mov
js
fsubrs
es
sbb
test
xchg
mov
lret
nop
addr16
out
inc
inc
fimuls
imul
shrl
cld
adc
cmp
sub
pop
dec
cmp
divl
adc
adc
jle
push
inc
adc
adc
xor
push
sahf
pop
fistpl
rolb
and
and
or
mov
adc
or
inc
add
mov
sbb
or
mov
xor
popa
push
orb
mov
pop
mov
sbb
cmc
add
jmp
dec
push
mov
add
lea
fldenv
xchg
scas
sbb
or
sbb
bswap
movl
mov
xor
sahf
mov
cmp
loop
movsb
sub
ficomps
jns
lock
pushf
or
imulb
inc
inc
sub
jns
mov
ficoml
sbb
sbb
push
push
or
clc
adc
adc
xor
pusha
insb
test
pop
idivb
mov
rcll
jp
push
sbb
fwait
and
sub
dec
fsubrl
pop
pop
faddp
cwtl
add
jns
ja
dec
clc
adc
cmp
mov
or
xor
dec
insb
orl
sbb
push
sub
xor
xor
adc
mov
shrl
adc
pop
adc
adc
cmpsb
xorb
and
xor
sar
rorb
sbbb
imul
mov
int3
subb
mov
in
rorl
fmull
or
fildll
pop
xor
test
pop
in
testl
xchg
mov
jb
test
pop
push
sub
jle
imul
rorl
add
mov
jmp
fmul
or
mov
ljmp
pop
adc
and
pop
mov
outsl
stc
jmp
js
sub
push
jnp
sbb
cli
sub
or
inc
jbe
lcall
pop
or
ljmp
insl
mov
xor
icebp
enter
repz
outsl
aaa
ret
loopne
add
xchg
arpl
leave
add
inc
mov
sbb
fnstsw
mov
xchg
push
in
shrb
dec
mov
add
inc
cmpb
addl
scas
pop
xor
or
pop
cmp
mov
enter
xor
cmpsl
test
add
mov
dec
addl
loopne
imul
push
pop
testl
add
jns
lret
sub
sbb
or
popa
mov
add
pop
test
jo
inc
cltd
gs
or
add
push
or
scas
add
sub
lock
or
sbb
fbstp
and
xchg
inc
mov
int
inc
xchg
test
xor
lret
and
push
sbb
cwtl
fbstp
or
inc
mov
mov
cmp
sbb
jecxz
xorl
and
imul
fadds
push
testb
test
imul
mov
mov
adc
scas
adc
or
repnz
pop
mov
rolb
rclb
std
int3
and
jns
sbb
test
movsl
lds
scas
and
int3
sbb
test
xchg
mov
negl
xchg
cwtl
nop
ljmp
inc
sub
push
ret
call
stc
or
sbb
sub
hlt
cwtl
sbb
sub
es
lret
imul
xor
cmpsl
sub
out
xchg
adc
sub
sub
mov
js
lods
push
int3
add
dec
daa
xlat
fldt
dec
loope
sbb
sub
repz
je
in
test
xchg
adc
sbb
pusha
jae
dec
fs
aas
mov
pop
cld
fs
enter
jnp
push
jns
aam
push
movsl
lods
shrl
fcompp
faddp
pop
shll
jo
mov
push
clc
mov
mov
dec
aas
mov
loopne
push
int
add
mov
fidivl
xor
or
mov
and
pop
roll
mov
adc
adc
xor
fwait
mov
pop
jmp
je
sub
movb
mov
daa
mov
sub
sbb
addr16
jecxz
ljmp
jge
mov
je
in
clc
mov
dec
sub
shlb
jne
test
nop
pop
cmc
add
cmp
mov
loopne
or
add
movb
lods
push
mov
sbb
enter
test
pop
scas
pushf
idiv
lcall
jbe
push
lds
gs
sub
xchg
inc
out
add
mov
fcoms
jle
in
test
negb
cmp
pop
aam
stc
stos
mov
divl
pop
xchg
pop
shrl
je
mov
cmp
popf
fwait
add
insl
out
pop
roll
fstps
dec
and
mov
jle
pop
cwtl
aaa
out
xchg
aas
pushf
xchg
cltd
add
cmp
fstpl
jle
scas
lock
mov
stos
cmc
ds
std
dec
pop
or
sub
das
pop
lret
pop
mov
pop
ja
std
std
pop
push
xchg
addr16
or
out
push
push
lcall
int
mov
mov
loop
out
or
mov
mov
xchg
xchg
xchg
daa
push
mov
insb
xor
incl
fdivrs
test
data16
pop
out
rorl
outsl
cld
xor
jg
dec
mov
pop
mov
mov
mov
pop
add
and
insb
jl
lret
dec
in
int
pop
xchg
pop
out
out
rcl
adc
fisttpll
xchg
sub
cmp
mov
ret
pushf
dec
push
aas
popf
out
ret
adc
push
in
ret
sub
cmpsl
adc
fmull
sub
inc
lea
cmp
shrd
xor
mov
xchg
adc
sti
add
push
mov
pop
lea
adc
lds
jp
xchg
xor
and
ljmp
xchg
lret
adc
ret
pop
sahf
mov
filds
mov
dec
jge
mov
push
and
adc
xlat
jecxz
cltd
cli
mov
sub
xorb
lods
sub
push
outsb
ficomps
mov
loop
add
lea
adc
imul
in
shll
jp
shrb
cld
leave
scas
add
roll
add
enter
mov
cltd
stos
in
out
push
mov
adc
pop
in
inc
cmp
fwait
lea
leave
pop
xchg
adcb
pop
ss
mov
dec
xor
neg
push
sbb
stc
sahf
das
and
xor
mov
jae
cmp
xchg
cmp
shrl
loop
jmp
and
leave
mov
das
mov
cmp
shll
and
xchg
das
leave
cmp
fdivl
imul
test
fisubrs
cmpsl
imul
test
mov
pop
fdivrs
inc
rcr
lds
xchg
or
mov
push
mov
repnz
fxch
jbe
jno
sub
xchg
inc
mov
mov
jl
das
inc
in
push
aad
stos
pushf
negl
shll
mov
mov
push
lds
mov
inc
sbb
fstl
insb
ror
and
push
sub
jbe
lea
sbb
aas
pop
lret
mov
pop
sub
and
outsb
inc
sbb
cmp
std
push
mov
loope
dec
dec
mov
push
lcall
and
mov
xchg
mov
testb
push
insb
idivb
cmp
pop
cmp
xlat
and
mul
dec
insb
jno
ret
rclb
mov
push
xor
rcr
insb
xchg
pop
jg
aaa
sub
mov
daa
dec
fcompl
pop
xchg
mov
loopne
pop
pop
jbe
jnp
popa
shrl
aas
ljmp
ret
lods
fisttpl
dec
in
cmp
in
cmpsl
mov
lods
lea
jecxz
ret
xchg
cmp
stc
xor
pop
adc
or
std
cli
jmp
loopne
popf
in
mov
cmp
cs
data16
xor
xor
popa
hlt
lret
lea
hlt
sbb
fcmovu
mov
mov
pop
and
cwtl
fwait
mov
dec
xchg
or
or
cld
mov
in
dec
call
gs
pop
add
or
push
lods
fidivs
addr16
and
out
in
mov
inc
sbbb
inc
imul
dec
fadds
mov
lock
and
daa
insb
sbb
daa
fldl
test
mov
nop
or
adc
test
in
leave
je
and
cmp
pop
mov
mov
loopne
lods
out
adcb
gs
movsb
add
mov
mov
xchg
jge
add
aam
ja
mov
hlt
jb
aam
hlt
sub
or
adc
mov
mov
push
sub
inc
movsl
dec
dec
dec
or
in
inc
cmp
jo
or
dec
push
dec
mov
nop
xlat
mov
push
mov
sbb
jmp
lods
fcmove
mov
inc
insb
rcrb
js
push
push
pop
mov
std
jnp
out
out
pop
fs
ja
xchg
sarb
push
test
add
or
inc
cld
rcrb
cmp
nop
pop
subl
dec
js
push
add
aas
mov
dec
fnstenv
stos
mov
push
clc
addr16
lret
jnp
ret
rolb
pop
mov
push
outsb
mov
andb
stos
cmp
leave
mov
jg,pn
mov
jo
xor
pop
into
rorb
daa
lea
pusha
pusha
js
xlat
flds
pop
ja
push
sbb
xchg
dec
stc
enter
inc
sti
cmc
mov
sbb
in
push
fstpt
in
jmp
inc
mov
xchg
sub
stos
push
call
sarb
icebp
adc
in
mov
add
stc
cmp
sahf
frstor
outsb
ds
xorl
mov
jae
jp
pop
ja
into
cmp
sub
jl
mov
iret
cmc
jmp
sbb
fcompl
pusha
popl
mov
push
jecxz
test
and
push
leave
je
out
xorl
mov
fdivrs
out
or
pop
out
hlt
jmp
sub
pop
es
adc
xchg
rcll
ret
arpl
mov
sub
fimuls
push
pop
xchg
xchg
lret
repnz
and
xchg
pop
xor
rolb
cmp
out
mov
mov
add
jbe
movups
lock
out
clc
dec
les
repnz
inc
sbb
out
icebp
xchg
insl
push
jne
push
in
shl
pop
dec
outsl
fadds
sbb
fmull
fwait
xchg
rclb
daa
lods
or
mov
movsb
scas
cld
rcrl
xorl
jmp
sub
pop
jmp
inc
mov
pop
aaa
outsb
mov
pop
jp
call
jl
movsl
xlat
mov
pop
std
and
fiadds
scas
cmpsl
rcrl
pop
fiadds
fdivrp
dec
pop
das
inc
lock
in
es
adc
ljmp
or
adcb
jne
into
xchg
mov
mov
lds
mov
fsincos
in
mov
fcmovnb
mov
adc
movsl
dec
daa
sub
jo
fstl
mov
iret
push
sbb
jmp
loope
pop
icebp
movsb
push
jb
pop
jns
cwtl
fwait
jmp
jne
cmp
jp
or
int3
jb
test
mov
lods
cltd
dec
mov
lea
push
and
pop
outsl
pop
in
sbb
add
lret
sub
push
jnp
and
jge
mov
sbb
pop
dec
fnstenv
lock
cmpsl
insb
push
and
shll
mov
sub
and
push
pop
fldt
std
sti
adc
push
gs
jle
jo
imul
movl
jl
and
and
sub
jle
jecxz
pop
jge
jecxz
mov
add
stos
sbb
add
mov
imul
add
shl
lods
in
or
cmp
push
lods
popf
mov
mov
fistpll
push
push
cs
dec
xor
ficoml
mov
outsl
outsb
mov
lock
test
popw
cwtl
fisttps
mov
mov
ja
push
pop
jmp
sahf
nop
int
xchg
adc
xchg
aaa
mov
push
frstor
mov
jge
mov
dec
adc
mov
addr16
mov
mov
dec
adc
imul
repz
cmp
sarb
dec
xor
cmpsl
ret
les
test
loope
clc
pop
into
sub
push
ss
mov
xor
jo
inc
xchg
rcl
out
mov
cli
mov
icebp
inc
push
mov
cmp
sarb
pop
lods
or
jnp
loop
in
jp
test
fnstsw
jmp
or
cli
inc
pop
xchg
int
add
xor
xor
pop
xor
cli
push
sbb
mov
adc
scas
sbb
outsb
les
jnp
fwait
xor
call
ss
cmp
icebp
loopne
bnd
lods
dec
dec
aam
sub
mov
mov
addb
xchg
lods
pop
mov
mov
fidivrl
push
jae
lahf
xor
cmc
push
mov
cltd
pop
clc
sub
fbld
fnstcw
sub
or
ds
jl
arpl
add
test
movsl
dec
jns
mov
inc
mov
mov
xchg
jl
mov
sbb
sub
bound
pop
out
test
mov
jl
ljmp
sahf
lock
adc
adc
insl
or
insb
out
pop
pushf
pop
leave
leave
mov
out
aaa
inc
add
ljmp
int
lods
mov
pop
mov
cmpsl
aaa
into
mov
push
push
cs
mov
cmp
sar
pop
aaa
mov
stos
add
inc
loope
adc
pop
je
push
stos
sub
mov
or
jnp
push
add
adc
mov
pop
pop
lds
adc
jo
js
push
hlt
and
les
imul
aad
pop
repz
mov
jg
test
test
jns
push
xchg
mov
xchg
pusha
repnz
outsl
shrl
test
inc
pop
or
lock
addb
hlt
xor
xor
or
cmc
dec
xchg
xchg
xchg
nop
cmp
arpl
test
adc
sbb
jo
add
or
cmp
scas
push
adc
sub
lret
add
or
sub
jg
dec
scas
sbb
push
inc
jne
jmp
inc
push
outsl
das
into
pop
lods
lret
push
mov
or
xchg
mov
jno,pn
and
cmp
cmp
clc
stos
push
mov
daa
jns
push
mov
pop
add
sub
adc
jbe
jne
outsl
add
insl
push
add
or
sub
jns
filds
scas
aad
mov
ljmp
lds
ss
cmpl
ljmp
lret
jo
mov
push
in
lret
lcall
cld
rclb
mov
mov
or
aam
or
mov
jg
jg
jbe
lds
pop
jle
jbe
lcall
sbb
and
iret
das
add
in
pop
adc
pop
jg
jo
jecxz
inc
inc
push
or
sbb
xchg
mov
cmp
outsb
insb
lea
add
daa
xchg
xor
addr16
mov
dec
and
aam
out
cmp
push
cmc
adc
adc
jle
ljmp
les
cmpsl
pop
fidivl
cmovno
sub
cmp
cmp
rcrl
in
imul
adc
daa
imul
xchg
sti
sub
sbb
sti
into
xchg
adc
xlat
jge
rorb
stos
xor
dec
lret
daa
xor
inc
inc
jg
mov
mov
repz
cmpsl
dec
or
lock
out
pop
cltd
aaa
shufps
adc
mov
jle
mov
push
test
mov
xchg
jo
int3
mov
lea
and
aam
stc
xchg
enter
lea
nop
jne
lahf
jo
ljmp
mov
xchg
sahf
sbb
in
fsubrs
add
push
pop
pop
pop
dec
mov
lock
ret
call
js
jp
bound
mov
pop
js
cltd
push
inc
jbe
fildll
push
push
mov
sbb
pop
inc
add
lret
or
imul
shll
fisttpll
and
inc
call
faddl
lahf
jb
jbe
pop
pop
call
repnz
movsl
xor
out
mov
lahf
mov
fstpt
sbb
pop
rol
sahf
dec
sub
mov
mov
mov
jl
mov
out
cli
inc
lea
scas
cmpsl
clc
jge
rolb
pushf
sbb
iret
pop
out
fimull
in
add
xchg
pop
shll
nop
fimuls
mov
cmpsb
jle
push
clc
popf
add
fstps
push
lock
mov
pop
add
xchg
mov
mov
dec
pop
outsl
adc
call
cmove
or
es
testb
pop
sbb
push
out
fwait
imul
or
pusha
sti
sbb
rorb
push
pop
call
jge
stos
inc
outsb
ja
xor
jp
hlt
test
lea
jmp
pop
mov
inc
test
rclb
ds
std
mov
sbb
sub
cs
xor
and
inc
popa
push
add
jg
mov
add
out
mov
repnz
inc
stos
mov
mov
push
pop
clc
or
push
test
insl
xchg
cltd
ljmp
and
repz
cs
popa
lds
and
test
mov
icebp
add
jg
ja
sub
ret
cmpsb
repnz
imul
jecxz
jl
or
popf
mov
sub
mov
push
pop
call
pop
mov
push
aad
addl
cmp
jle
cmpsl
nop
or
cmp
add
jmp
jbe
sub
cmc
sar
inc
je
xchg
sbb
xchg
lea
mov
dec
push
xchg
adc
push
inc
pop
ljmp
jmp
insb
mov
test
xchg
cmp
aam
fstpt
lods
aam
jle
dec
divl
in
std
ja
jmp
adc
loope
inc
lret
incb
mov
jecxz
es
ljmp
lret
pop
das
mov
mov
inc
jmp
dec
es
test
pop
shl
dec
in
in
jo
cmc
mov
mov
push
push
test
cld
mov
inc
mov
jne
jp
mov
inc
mov
leave
shll
mov
ret
mov
or
sub
sbb
xor
hlt
jns
cld
daa
dec
pop
cmp
jecxz
ja
and
sub
sbb
mov
adc
pop
dec
sbb
es
iret
mov
rcll
in
mov
jge
das
add
inc
hlt
pop
adc
pushf
push
push
sbb
neg
add
adc
push
mov
pushl
cmpsl
addr16
or
xchg
push
into
ljmp
push
adc
adc
aam
dec
jae
xor
fstl
lock
mov
cmp
sub
hlt
adcl
xor
xchg
stos
jmp
inc
dec
cmc
orb
and
stos
repnz
xor
decl
lock
ret
adc
push
cld
loope
mov
pushf
sub
pop
sbb
add
pop
lahf
mov
and
cmpsl
pop
outsb
int3
out
imul
inc
jmp
je
loopne
xchg
sub
lock
or
jno
test
sub
cmpsl
pop
dec
or
mov
pop
add
into
icebp
sti
sub
mov
mov
pop
pusha
loope
loope
pop
mov
xchg
fisttpll
sub
xorl
rorb
pop
pop
shlb
je
or
mov
cld
shrl
pop
xor
cmpsb
ds
cmpsl
and
jl
dec
add
clc
cmc
das
outsb
pop
jmp
iret
mov
adc
sti
push
pusha
cmp
mov
and
add
add
fwait
sub
imul
mov
bound
dec
aas
nop
mov
push
pop
mov
xlat
mov
rolb
test
cli
push
iret
rorl
mov
xchg
fcmovnu
les
out
cld
fstpt
xchg
ret
adc
sbb
popf
mov
mov
in
adc
out
frstor
loopne
nop
xor
pop
mov
mov
ds
bound
cmp
rcl
ret
dec
fucomip
sub
adc
mov
add
jo
xor
jo
jecxz
cmp
pop
ja
in
imul
pop
dec
fstl
jnp
xchg
test
pop
pop
stos
popa
faddl
xrelease
jle
and
sub
test
sub
add
in
std
js
movsb
aas
jg
adc
mov
adc
mov
test
cmc
dec
cmp
outsb
ffreep
jmp
adc
mov
movsl
inc
jmp
xchg
mov
push
shr
loopne
shrb
fsub
js
push
sbb
insb
xchg
insl
rcl
and
push
shlb
pop
scas
mov
xchg
test
cmp
xchg
jb
push
xchg
dec
xlat
push
pop
aad
nop
test
mov
lcall
jbe
jl
xor
cwtl
imul
mov
mov
aam
sbb
test
cmp
adc
xlat
add
test
mov
mov
jbe
cmp
push
add
mov
mov
fidivrs
ss
enterw
inc
out
bnd
cmp
cld
jg
roll
es
sub
pop
popa
int
add
std
fnsave
mov
imulb
jp
xchg
mov
sub
mov
loope
cmc
push
insl
aad
insb
call
add
insb
popf
ds
test
jnp,pn
push
pop
out
dec
aas
xor
orl
xor
jle
xchg
in
and
in
push
push
out
add
push
repnz
fs
popf
inc
mov
pop
test
pop
fwait
push
push
lea
mov
push
add
mov
in
xchg
clc
mov
pop
leave
xchg
add
sub
pop
inc
int
repz
shrb
push
aam
mov
mov
jno
sub
push
out
or
jne
insl
les
rcll
pushf
mov
icebp
repnz
xchg
stos
inc
mov
sub
icebp
xchg
clc
mov
loop
dec
jmp
cmp
popa
lock
lahf
cmp
lret
cmpsl
repnz
or
daa
dec
cs
lods
mov
adc
lods
fildl
in
jecxz
mov
mov
mov
push
mov
jmp
push
in
pop
mov
pusha
ds
in
cwtl
xchg
lock
push
dec
aam
mov
scas
test
mov
pushf
scas
outsl
mov
inc
mov
cwtl
sub
mov
lods
push
aas
jmp
pop
and
cmp
sbb
xchg
cmc
int3
sub
and
outsb
or
cmc
dec
pushf
lds
jmp
sbb
mov
sti
add
ret
jnp
xchg
and
movsl
cmovl
rorl
int3
in
push
and
inc
pusha
mov
and
stos
push
pop
mov
out
out
iret
rorb
cli
inc
shrl
xchg
cltd
inc
mov
mov
xor
mov
push
iret
sub
les
xchg
test
scas
mov
sub
clts
lcall
cli
test
inc
mov
mov
cltd
jmp
sub
jno
lods
int3
scas
ds
cmpsb
mov
dec
push
mov
cmp
jecxz
loopne
ljmp
scas
call
pop
test
dec
jmp
fists
sub
fucom
push
sti
or
jns
xchg
div
mov
shrl
dec
pop
repz
int
jle,pn
cs
cwtl
stc
jecxz
jle
ret
add
stos
js
fidivrl
sbb
push
mov
imul
andb
mov
ds
push
pop
push
into
sbbl
fcoml
cwtl
dec
mov
faddp
fs
add
daa
jnp
or
mov
fmull
cmp
out
int
lods
sbb
add
cmp
xchg
call
mov
and
add
aas
mov
xchg
mov
push
popa
inc
xchg
mov
push
clc
jno
imul
jo
mov
in
mov
out
hlt
test
stos
mov
and
mov
jmp
stos
adc
out
ficompl
int
sub
cltd
int3
clc
push
bound
mov
jns
ss
loop
mov
jl
out
hlt
push
pop
and
sub
stos
jl
and
pop
mov
loop
adc
xchg
sti
shlb
sbb
mov
jb
pop
jmp
pushl
push
test
insb
push
mov
rcll
mov
lea
mov
add
sbb
into
sbb
push
add
sub
mov
fucomp
mov
test
in
push
js
mov
inc
lret
add
pop
jbe
jne
ljmp
stc
add
lret
dec
push
xor
mov
dec
mov
mov
fstpt
rorb
cmp
sub
data16
repz
into
mov
and
inc
iret
pop
cmp
jno
add
rcrb
adc
jo
je
in
daa
mov
xchg
addl
jns
cld
iret
dec
mov
cmp
adc
mov
inc
push
cmc
lret
xlat
mov
ds
ret
pop
movsb
js
add
adc
sahf
sbb
int
push
aad
adcl
sbb
cmpsl
inc
pop
sti
aad
into
adc
outsb
outsl
scas
xorb
rcrl
pop
jmp
out
das
add
xor
outsl
cmpsb
icebp
mov
xchg
push
xchg
jae
mov
xchg
ljmp
or
pop
sbb
jp
sbbl
icebp
adc
icebp
int
lahf
dec
cmp
cmp
lods
jge
xchg
mov
fmull
sub
inc
andl
push
xor
cld
jnp
mov
dec
adc
pop
pop
scas
add
jecxz
sub
jmp
movsl
dec
cltd
addr16
add
out
cmpsl
nop
out
push
icebp
sti
push
cwtl
cmp
stc
cmp
cmp
push
lods
neg
mov
pop
addr16
pushf
inc
imul
push
out
cli
mov
adcb
pusha
pop
or
xlat
push
icebp
daa
addb
dec
mov
outsb
mov
filds
dec
mov
sbb
mov
jle
xor
cmc
scas
adc
mov
icebp
add
lock
or
dec
pop
in
sub
out
jb
add
ljmp
dec
adc
jns
fcompl
mov
mov
jp
sbb
lds
inc
pop
sahf
out
pop
into
inc
js
loopne
jo
int
fwait
loop
pop
std
xchg
mov
jno
stos
test
scas
ret
sub
mov
frstor
adc
aas
imul
xorl
dec
jmp
mov
and
cs
mov
iret
push
pop
mov
das
repz
out
dec
xchg
cmpsb
mov
neg
ret
adc
arpl
cwtl
icebp
sub
cmp
pop
clc
mov
lret
fldt
pop
push
into
pop
push
mov
adc
pop
xlat
das
push
jnp
jb
pop
sbb
cmpb
lock
aaa
pop
cmp
mov
jnp
rol
adc
aas
jns
xor
pop
adc
cmp
test
stos
repnz
pop
add
push
lods
out
adc
or
sub
pop
test
mov
in
pop
sub
mov
sbb
pop
aam
adc
rolb
mov
in
repnz
daa
sub
js
cmc
sub
mov
inc
sbb
cs
fisubs
movsl
mov
push
bound
or
dec
pop
shl
adc
js
or
out
clc
push
xchg
je
pop
js
stos
push
pop
popf
mov
subb
and
mov
push
repz
xlat
or
loopne
adc
jo
loop
pushf
xorb
and
xor
sti
pop
or
pop
jnp
xchg
mov
repnz
mov
test
aaa
ljmp
xlat
mov
test
and
mov
incl
push
mov
arpl
aad
fcomps
pop
push
mov
roll
push
loop
jne
push
sbb
std
jno
lea
inc
test
bound
in
dec
test
cmp
lods
jge
mov
loop
push
iret
add
mov
jmp
add
sub
dec
mov
and
paddb
std
ds
push
pop
cmp
subb
inc
loop
pop
shrb
iret
pop
cmpsl
or
pop
add
ss
adcl
jmp
mov
pusha
cmp
test
idivl
insb
cltd
iret
mov
xchg
mov
fnstenv
shlb
mov
mov
pushf
cmpsl
mov
inc
jo
sub
xor
mov
testl
mov
jle
clc
sbb
imul
insl
jns
inc
inc
push
int
fs
fs
cmp
push
cmp
outsb
incl
dec
push
jge
mov
dec
mov
enter
scas
mov
push
mov
mov
xchg
push
imul
xor
jmp
cmpsl
unpckhps
xor
sub
ja
xchg
insb
adc
sub
lods
sarl
cmc
cmp
cmp
into
sbb
inc
test
inc
movsl
push
mov
pop
lods
in
pop
lret
ljmp
mov
mov
cmp
jge
mov
inc
cmc
pop
xor
in
scas
push
test
repz
jbe
jno
dec
mov
gs
dec
xchg
iret
cmc
cmp
fisubl
jg
push
cwtl
jb
inc
lret
mov
dec
mov
inc
std
mov
call
leave
sbb
stos
sub
lods
mov
inc
cmp
loop
negb
sbb
loopne
mov
adc
cmp
mov
dec
mov
mov
push
push
add
in
ret
mov
mov
add
aas
roll
fstp
bound
lcall
add
lds
push
sbb
mov
fwait
pop
das
pop
cmp
aas
lods
mov
jae
stos
ja
add
sbb
fcoms
push
outsb
in
aam
lods
mov
xor
int3
loope
addr16
cmp
add
sbb
xor
mov
icebp
and
sub
out
stos
sbb
dec
loopne
fildll
dec
sub
sbbl
rcr
std
mov
mov
inc
push
in
cmc
mov
mov
inc
ficoml
pop
fildl
sub
sub
aad
sub
mov
subb
fistpll
loopne
pop
or
adc
mov
mov
js
push
push
ljmp
push
inc
enter
cmpsb
pop
insl
lahf
cmp
xchg
sbb
fnstsw
sub
mov
jp
adc
adc
xchg
xor
pop
cs
leave
pop
pusha
inc
sti
movd
pop
int
lds
cmp
mov
mov
push
mov
sbbb
gs
add
pop
mov
insb
sbb
fstl
pop
pop
test
cmp
popf
push
pushf
jns
mov
test
pusha
adc
mov
loope
fidivs
and
mov
push
jno
lret
clc
jae
mov
sbb
scas
es
mov
push
xchg
imulb
movsl
mov
dec
sbb
jle
in
mov
add
insb
xor
push
mov
cmc
dec
sti
cmpl
xchg
and
xchg
test
popa
xchg
mull
test
dec
imul
sub
cmp
push
ret
repnz
pop
mov
mov
insl
xchg
inc
sub
mov
sti
into
stos
push
in
add
add
cld
mov
cmp
shlb
jge
rcll
jle
push
mov
dec
out
aad
dec
xchg
insb
jmp
scas
pop
int3
shl
enter
lret
add
dec
pop
pop
movsb
dec
xlat
test
lret
jmp
push
movb
aaa
in
pop
jne
repz
xor
int
je
sti
pushf
insb
push
jno
pop
mov
cmpsb
imul
inc
out
xlat
pop
push
fimull
daa
jmp
loope
das
or
and
imul
out
push
adc
push
std
mov
mov
lods
mov
sbb
dec
lea
jp,pn
js
enter
mov
dec
out
pop
mov
dec
out
pop
dec
mov
mov
xchg
mov
insl
add
or
mov
shl
aad
mov
or
in
pop
pop
mov
dec
cmp
dec
fucom
loopne
jne
cld
shll
jbe
sub
xchg
sbb
inc
sbb
shl
jbe
xchg
sub
imul
scas
inc
mov
fwait
xchg
xor
ror
lret
out
mov
sub
cmp
sub
enter
nop
pusha
dec
fmull
popa
subb
cwtl
push
out
rolb
stos
sbb
xchg
pop
cltd
jbe
pop
jge
fcoml
mov
jnp
enter
mov
sbb
mov
mov
cmpsl
cmpb
aas
and
cmp
ja
adc
fildl
popf
mov
ja
fdivrp
cmp
fwait
sbb
imul
mov
stos
inc
orb
xchg
nop
mov
popa
jecxz
jl
inc
and
and
pop
scas
jno
add
xchg
lds
mov
adc
inc
push
and
cmpsl
orb
insl
out
out
stos
sbb
jbe
movaps
test
gs
push
push
add
out
pop
pop
cmp
pop
push
xor
mov
push
pop
fs
out
cwtl
xorb
jl
pop
push
test
mov
imul
clc
and
testl
call
adc
in
lret
lds
pusha
xor
call
add
inc
sti
mov
out
xchg
push
adc
mov
int3
xor
les
pop
mov
movsl
push
jbe
rclb
fimuls
xchg
mov
cmpl
lret
pop
scas
imul
das
mov
cmp
xor
js
mov
repnz
jmp
cwtl
jo
jle
cmp
scas
outsb
sar
lods
clc
mov
roll
jno
sbb
roll
adc
nop
mov
aad
xor
decl
inc
jge
pop
nop
test
dec
cwtl
out
movsb
dec
add
lcall
or
xor
mov
mov
xchg
jne
test
cwtl
xchg
push
pop
pushf
ficoms
cmp
pop
call
call
stc
fs
mov
pop
in
pop
addb
dec
mov
push
xchg
dec
dec
ljmp
jl
mov
test
shl
push
mov
lods
sbb
sub
dec
in
sub
sub
cmc
lds
or
xchg
or
inc
mov
xchg
mov
xor
and
inc
mov
push
mov
mov
rcrb
mov
shlb
repz
add
aam
mov
mov
inc
xor
imul
cmpb
pop
lock
mov
stos
lea
lea
cmp
cmovg
xchg
cs
mov
pop
push
mov
icebp
mov
bswap
mov
ret
leave
rcll
inc
lcall
sarb
xlat
jno
mov
push
stos
ja
ffreep
cli
outsl
or
xor
lret
fwait
outsl
xlat
stos
aam
pop
mov
mov
add
adcb
mov
mov
mov
jge
cltd
push
les
jg
mov
pop
stos
inc
or
mov
cmp
inc
xchg
rcrb
ds
mov
dec
adc
in
sub
mov
mov
outsb
enter
out
orb
push
sbb
out
or
mov
aam
pcmpgtb
rclb
mov
imul
xor
out
or
arpl
sbbb
cmc
mov
jp
pop
xchg
out
pop
ds
pusha
push
and
add
xchg
sub
sbb
ret
call
sbb
adc
daa
lea
mov
xchg
negl
pop
lea
cmpsl
cmp
and
mov
ljmp
test
xor
mov
xor
pushf
mov
out
or
and
xor
daa
inc
sbbl
cmp
or
mov
dec
sbb
push
mov
ficoms
push
inc
lcall
sub
sub
test
push
std
repnz
lret
xor
repnz
lods
outsl
cmp
mov
mov
sbb
stos
repz
es
or
js
pop
cmp
xor
cmpl
jbe
fucom
dec
mov
jo
int3
pop
inc
jmp
add
mov
sbb
jmp
push
dec
outsl
cmpsl
ljmp
pop
gs
jae
sub
out
iret
aas
clc
and
or
jmp
stos
sahf
adc
adc
das
sub
cmp
mov
mov
das
mov
jo
lcall
cmp
fldenv
push
mov
dec
test
ret
inc
test
repnz
xor
xchg
xorl
aaa
jnp
mov
movsl
push
outsl
in
push
mov
fnsave
stos
jne
rol
lds
cmp
sbb
inc
sbb
mov
inc
aas
outsb
hlt
std
imul
mov
inc
andl
jae
mov
test
xor
add
pop
into
lcall
clc
and
cmp
sbb
jne
xchg
jo
lret
push
inc
hlt
mov
xor
idivl
stc
or
inc
cmpsl
mov
pop
cmp
shrl
xchg
loop
pushf
into
inc
jnp
push
mov
push
xor
les
add
pop
or
add
nop
divl
cmp
in
fsubs
xchg
sahf
in
xchg
aas
jb
daa
inc
rcr
mov
xchg
test
mov
hlt
test
loop
stos
jns,pt
out
gs
aad
inc
push
incb
cli
jle
pop
lea
xor
ss
sub
xchg
pop
xchg
ljmp
xorl
ret
test
mov
mov
mov
loop
mov
pusha
xchg
mov
adc
into
dec
cmp
mov
xchg
jle
inc
mov
sbb
xorl
dec
sbb
inc
les
sub
lea
lock
mov
mov
aad
cmp
mov
scas
xor
cmpsb
mov
push
ret
lahf
mov
mov
jo
aaa
add
jo
mov
ljmp
adc
push
inc
out
leave
sub
dec
cmpsw
inc
scas
jno
jne
push
mov
push
mov
pop
cli
mov
lcall
std
scas
lock
fwait
cs
ret
jl
loope
pop
test
lds
dec
add
jecxz
pop
hlt
dec
in
mov
mov
jge
sub
out
mov
xor
in
lods
cwtl
lds
pop
sbb
cmp
push
outsl
out
sti
xchg
ss
es
xchg
push
or
fsubp
cmc
xchg
rorb
outsb
xchg
daa
add
ds
mov
mov
mov
inc
insl
mov
push
pop
mov
into
sub
cmpsl
ss
repnz
imul
mov
mov
mov
or
xlat
mov
jle
dec
pop
shl
pop
and
or
rcrb
clc
into
sub
push
lret
pop
imul
adc
mov
xchg
and
popf
mov
aaa
cld
inc
lock
xchg
mov
pop
idiv
test
stos
pop
cmp
jecxz
jne
adc
lret
sbb
fwait
cmpsb
fiaddl
scas
loopne
pushf
fldz
jnp
push
mov
arpl
jnp
jbe
xlat
ljmp
add
add
sub
sub
dec
or
add
xor
pop
pop
inc
pushf
mov
jb
xchg
inc
daa
cmp
jno
loopne
xchg
imul
sub
dec
xlat
pop
out
int
inc
outsb
add
jb
aaa
xlat
lock
fisttpll
faddl
or
out
add
add
xor
jle
sub
pandn
ret
out
hlt
xlat
imul
stos
out
pushf
in
mov
mov
lret
enter
int3
test
ja
repnz
sbb
push
in
inc
rcll
jb
dec
je
inc
sbb
xlat
fwait
jge,pn
in
sbb
rolb
cmpsl
adc
jg
cmp
outsl
fdivl
jle
mov
imul
in
jns
mov
test
or
loopne
addr16
jl
and
adcl
loopne
jle,pt
cmp
mov
lock
push
cmc
cs
push
push
scas
pop
stos
dec
stc
push
cld
pop
iret
mov
pop
sbb
nop
jl
mov
out
icebp
sub
and
int3
outsb
stc
or
inc
sub
std
jae
sub
cmp
push
ja
push
lret
fstpt
mov
xor
popf
xor
in
aas
int3
sbb
mov
pop
pop
push
ret
scas
js
cltd
cmp
das
mov
fld
mov
mov
sarb
push
es
lods
inc
add
adc
pop
gs
cmpsb
call
mov
loop
and
int3
popa
ficomps
and
pop
dec
mov
mov
dec
push
add
or
and
inc
mull
in
xor
push
jge
sub
loop
cmp
mov
jae
add
mov
lods
out
jno
mov
fbld
not
js
add
les
sub
ficoms
xchg
and
add
imul
jb
stos
pop
test
outsl
loope
cmpl
add
inc
out
cmc
lahf
sub
pop
adc
pop
xchg
jbe
xor
mov
inc
mov
sarl
mov
lock
and
add
mov
or
cs
dec
mov
loope
call
int
fdivrl
xchg
mov
inc
fcoms
lock
out
cli
and
jns
cmp
es
sub
loop
aam
dec
hlt
sub
xor
sub
movsb
xor
lds
ljmp
pop
cmp
add
test
pop
jge
pop
or
jbe
or
sti
lahf
in
rcrl
xor
push
pop
fs
lock
jnp
push
dec
mov
push
and
sub
lods
sti
push
push
test
scas
out
cli
data16
mov
and
sarl
mov
mov
cld
or
jne
outsl
cmpsl
repz
outsl
mov
pop
xor
pop
jle
loopne
jnp
xchg
jb
inc
es
or
xchg
into
push
shll
mov
jb
leave
cmpsb
push
out
push
mov
test
ficompl
test
lock
loop
jge
clc
adc
xchg
sbb
addl
pop
cltd
shrd
les
test
aaa
ljmp
out
sub
lock
jns
stos
xlat
nop
call
or
decb
out
push
push
bound
ljmp
jp
push
cld
or
out
pusha
lea
std
sbb
mov
inc
ja
es
sub
sub
mov
cmp
vpaddw
dec
call
and
xchg
jmp
fistpl
jnp
loopne
addr16
jno
fwait
cmc
mov
cltd
mov
mov
or
cmp
inc
sub
mov
xlat
inc
sbb
sti
adc
cmp
jmp
stc
xchg
ljmp
es
fbstp
mov
xor
sbb
fs
sahf
cli
inc
sti
nop
outsb
sti
cmpsl
pop
daa
ret
in
adc
mov
or
xchg
arpl
xlat
lock
xchg
xchg
mov
push
inc
in
adc
sub
imul
pusha
insl
pop
jnp
in
xchg
pop
xchg
jmp
xor
fisttps
mov
test
mov
es
sbb
mov
mulb
xchg
dec
lcall
pop
push
das
lock
dec
and
xor
add
mov
mov
dec
sti
mov
jp
clc
fsubrs
int
cld
pop
xor
mov
int
sar
or
pop
fsubl
jp
ja
jl,pn
adc
pusha
icebp
xor
cmp
jecxz
clc
mov
jb
jp
jle
inc
mov
roll
jle
ficoml
les
dec
cmpsb
imul
sbb
adc
dec
ljmp
cs
xchg
dec
into
mov
shlb
push
sub
dec
mov
mov
pop
sbb
xlat
fstpt
lods
pop
inc
inc
push
pop
mov
loopne
ja
push
cmp
push
in
fstpt
scas
sbb
shr
adc
or
lods
into
rclb
add
rorw
or
and
shll
std
sub
push
lock
loopne
sarl
inc
pop
mov
xlat
sub
fidivrs
push
dec
pop
inc
jge
mov
leave
in
inc
jbe
xor
inc
mov
in
dec
in
mul
mov
cmp
rorl
cmp
mov
pushf
lcall
xchg
xor
test
mov
push
pop
xlat
outsb
add
out
ret
mov
xchg
cmpsb
insl
mov
push
cld
sarb
cmp
ret
pop
sub
push
ds
div
out
sti
mov
ja
adc
adc
aam
push
mov
mov
lea
mov
pop
jmp
mov
mov
aas
lods
mov
mov
or
xlat
cmp
xor
repz
cmpsb
jno
inc
sbb
mov
xchg
adc
jp
sbb
insb
push
sbb
lock
iret
sub
stos
sarb
adc
inc
jbe
lods
cmp
pextrw
fidivrl
cwtl
stc
dec
xchg
std
adc
inc
shll
lods
xor
cmpsl
xor
mov
loopne
insl
lods
subb
jne
jo
xor
sub
fstpt
clc
test
sbb
in
cmp
cmp
insl
or
fs
sti
cld
mov
add
cld
adc
push
jge
mov
mov
aad
iret
mov
stos
ljmp
sub
andb
aad
adc
xchg
stc
xchg
scas
mov
int
push
cmp
imul
sarb
push
xlat
mov
dec
jp
add
and
and
push
jg
addl
neg
xchg
mov
push
adc
push
add
or
push
scas
hlt
stc
jbe
adc
jbe
mov
xchg
adc
aam
addb
dec
pop
sub
movb
xchg
and
jp
cmpsl
sub
icebp
lds
das
fcmovu
mov
pop
rolb
mov
in
ret
inc
add
ljmp
pop
cmpsb
push
arpl
insl
jns
and
rclb
out
dec
mov
sahf
mov
jp
xor
fiadds
sti
sub
push
and
lds
imul
and
pop
jbe
aam
jge
leave
idiv
adc
dec
push
or
xchg
sub
push
stos
das
loop
dec
push
lret
ss
or
ret
sbb
xlat
sub
push
outsl
jne
mov
je
mov
aad
shlb
sub
ret
inc
jge
mov
cmpl
out
sbb
push
adc
repnz
lahf
out
in
fcomps
cmp
hlt
mov
pop
out
ret
push
aam
fldl
in
inc
insl
mov
aas
cmp
sbb
lock
mov
pop
lcall
loopne
pushf
testb
lods
cmp
fwait
pop
add
loopne
ror
cld
adc
pop
sub
pop
cmp
xchg
scas
ljmp
shll
cmp
cmp
cmp
clc
xchg
xchg
rol
cmc
andl
mov
mov
sti
or
js
mov
push
in
pop
lret
mov
insb
pop
imul
fldenv
stos
push
xor
sbb
shr
jo
sub
fimuls
rcrl
xchg
pushf
add
pop
add
fucomp
sub
mov
sahf
dec
push
scas
mov
sbb
arpl
ja
icebp
xchg
rol
or
mov
push
imul
aaa
push
stos
repnz
push
pop
into
pusha
scas
repnz
in
pop
mov
cmp
ret
pusha
ljmp
test
stos
xchg
popa
or
mov
in
dec
adc
inc
imul
int3
bswap
addl
jnp
scas
jmp
pusha
pushf
cmp
dec
leave
roll
adc
xor
stos
bnd
dec
out
sub
subl
inc
into
cmpsb
mov
lahf
icebp
ret
clc
std
cmpb
cltd
hlt
sub
mov
push
imul
sar
cmp
sub
xor
xor
repnz
into
out
orl
notb
lock
fstpl
push
fisttpll
fiaddl
sbb
push
push
sub
push
mov
icebp
fnstcw
sar
jne
cli
lahf
mov
mov
mov
sbb
sub
scas
repnz
cli
mov
push
push
xchg
in
test
xchg
jns
jne
lret
popa
int
and
and
or
fwait
inc
jle
out
orb
mov
pushf
sub
xor
sub
lods
sbb
dec
jecxz
cmp
call
lahf
adc
stos
push
dec
sbb
imul
xchg
or
dec
sub
push
mov
jle
sbb
nop
mov
push
jnp
ret
xchg
add
jg
fbstp
cmpsl
mov
pop
or
inc
push
adc
mov
and
movsl
cmp
movl
sub
xchg
subb
xchg
add
pop
jmp
outsl
lods
dec
pop
xor
movsl
jp
cltd
sbb
pop
out
icebp
lods
jge
es
mov
xchg
push
add
enter
in
mov
inc
sbb
js
push
int
xchg
pop
jns
add
fstp
xor
xchg
cmp
adc
mov
mov
arpl
fcomi
sub
cmc
das
sbb
fdivrp
icebp
inc
rcrl
pusha
mov
test
add
shr
xlat
lret
repnz
push
insl
ret
in
in
pop
sbbb
lret
hlt
fistl
popa
mov
repnz
pop
xchg
shl
sbb
pop
fcomps
pop
pop
aad
add
outsl
pusha
aas
pushf
enter
xor
repz
push
testl
dec
movsb
shl
notl
fadds
push
out
leave
jl
xchg
mov
jae
addr16
ja
shl
outsb
cld
adc
pop
dec
cmpsb
insb
xchg
lret
jnp
loop
shl
loopne
mov
sbb
ljmp
jp
jmp
inc
xchg
daa
test
cs
or
cmp
xor
pop
test
lods
mov
aad
sti
jle
jbe
aad
mov
xbegin
mov
repnz
aad
fwait
testl
jb
lcall
call
cwtl
adc
fisubrs
ror
scas
cmp
int
push
icebp
mov
sbb
adc
mov
jae
lahf
pop
inc
int
mov
xchg
jb
xchg
leave
into
pop
insl
repz
test
lds
sub
mov
mov
pop
lret
cmpb
ds
jmp
cmc
test
push
jnp
xchg
cmp
cmp
fdivl
and
lods
imul
dec
scas
xor
lds
inc
cmc
cmp
pop
adc
mov
paddw
adc
rorl
sub
inc
lock
sbb
fisubrl
mov
dec
inc
rol
or
imul
xchg
scas
xor
inc
pop
mov
int
insb
hlt
into
xchg
mov
stc
push
test
lcall
cmpsl
add
dec
jnp
scas
mov
xchg
fildl
in
or
mov
push
test
lods
xlat
fmull
insb
push
scas
mov
xor
lods
out
lock
repz
mov
jb
and
faddp
decw
rcrl
das
add
mov
int3
push
sub
addr16
ss
fimull
dec
pop
in
fidivrl
pop
mov
out
mov
adc
sahf
push
jo
call
mov
or
ss
ja
loop,pn
adc
xor
dec
fadds
sahf
icebp
inc
in
lds
mov
push
icebp
inc
add
repnz
aaa
jg
mov
push
fcmovu
in
bnd
sub
push
mov
iret
sbb
imul
mov
shrb
outsb
sbb
mov
in
or
popf
add
mov
mov
pop
cmp
or
inc
ds
cmp
cmp
jmp
andl
imul
loopne,pn
pop
es
stc
out
mov
xchg
sub
lahf
dec
test
pop
cmc
add
xor
lcall
dec
mov
sbb
push
mov
jge
jo
mov
testl
mov
aam
pop
das
cmp
in
movsl
repz
and
flds
int
scas
adc
sub
test
in
push
xor
mov
stos
dec
pop
inc
js
cmp
mov
test
mov
insl
mov
jnp
iret
push
add
jp
out
out
shlb
jp
ret
xor
push
leave
push
lds
inc
pop
movsb
cwtl
mov
mov
sub
dec
adc
sbb
cwtl
dec
ja
xor
les
cli
daa
mov
pop
lret
decl
les
mov
shr
insb
imul
adc
xchg
std
pop
gs
je
cmp
or
add
adc
lret
nop
mov
push
and
lods
dec
mov
xchg
mov
and
mov
pop
lods
mov
shrb
out
pusha
xor
pop
xchg
mov
sahf
lods
cltd
call
mov
into
mov
lods
fistpll
lcall
test
shr
dec
rorb
pop
mov
dec
cs
adc
and
jg
mov
jge
sbb
lahf
jae
lods
cmpsb
dec
mov
ss
shlb
pop
gs
shrl
adc
cmp
mov
mov
mov
ror
pushf
lret
sub
add
movl
fcomp
mov
cli
decl
test
pop
inc
dec
sbb
jle
pop
cmc
outsb
mov
lods
jns
pop
jb
ja
xchg
icebp
xor
jae
ljmp
mov
ss
sub
cmp
xchg
rcrl
ss
jg
std
imul
mov
outsb
mov
sbb
call
cmp
fs
adc
mov
mov
sub
mov
ffree
lret
lods
lock
sub
push
xor
push
mov
pop
cwtl
call
or
push
cwtl
cmp
pshufw
inc
hlt
inc
sub
das
xchg
sti
push
cltd
cmc
push
cmpb
out
push
push
aas
cwtl
and
jb
push
setl
mov
out
test
in
into
push
mov
pop
lds
push
pop
loope
and
lcall
and
add
jnp
mov
mov
loope
sbb
jne
pop
mov
out
repnz
push
dec
jns
dec
mov
cwtl
data16
cmp
inc
jb
popf
xchg
stos
xor
pop
mov
sarl
mov
sbb
mov
push
sub
push
in
xlat
stos
aas
int3
stos
mov
adc
aas
add
pusha
bound
mov
sbb
mov
mov
repz
cmp
data16
push
mov
push
and
inc
movsl
mov
std
stos
lret
cmp
inc
adc
mov
adc
pop
xchg
loope
pop
mov
insb
and
popaw
mov
mov
sbb
xor
xor
pop
xchg
movsb
int
popf
inc
fisubrl
mov
push
cli
bound
xchg
dec
mov
fisubrl
fcmovu
scas
pop
mov
das
fisttps
xor
inc
movsl
push
jno
xchg
call
outsb
xchg
stos
push
ljmp
cmpsl
adc
inc
lret
add
xlat
mov
fsubrl
mov
and
lahf
loope
adc
scas
scas
sbb
cmp
call
hlt
arpl
jne
mov
lret
les
cmp
es
jnp
in
inc
push
ljmp
add
push
mov
pop
mov
jbe
push
dec
jnp
cs
js
jge
sub
push
in
dec
call
xor
mov
dec
sarb
cmp
mov
aad
and
push
sbb
jb
popf
cmp
in
js
fchs
mov
test
sahf
fsts
xor
and
sbb
xchg
fisttpl
aam
pop
shll
mov
sbb
adc
mov
cld
pop
add
out
mov
pop
pop
roll
ja
xchg
loopne
cwtl
scas
or
pop
jno
out
loope
adc
outsl
push
insb
lods
repnz
in
add
ret
push
into
push
rclb
aam
ret
adc
lret
cli
xor
jbe
in
adc
xchg
pop
insb
jb
lock
jg
push
xchg
pop
jb
push
pop
mov
add
sub
xchg
cli
jbe
jge
movl
orl
int3
xchg
sub
dec
mov
cmp
xchg
xor
repnz
mov
andb
iret
xlat
je
ret
popa
aad
popa
ror
repz
ficompl
sbb
inc
icebp
pop
pop
cld
mov
ret
rcrl
lret
and
push
movsl
push
sbb
dec
es
pop
fldcw
aaa
mov
mov
shll
mov
or
mov
push
xorl
outsb
ljmp
jbe
movsb
ja
pop
popa
inc
fiaddl
jmp
repnz
mov
mov
lcall
fs
das
xchg
mov
dec
sub
or
scas
lods
mov
lcall
stc
divb
imul
jecxz
mov
nop
push
popa
outsb
fwait
loope
setl
shll
ds
push
fbstp
clc
jne
mov
into
rcll
into
cmp
mov
outsl
iret
push
add
mov
inc
pop
jl
rclb
stc
or
adc
scas
jae
pop
sub
push
ja
ss
outsb
int3
adc
add
jnp
mov
in
scas
movsb
cmp
in
sahf
xor
xor
mov
mov
and
cmpsb
jge
pusha
aas
sub
push
mov
sub
mov
cmp
in
fisubl
mov
outsl
mov
inc
mov
in
aad
shlb
ja
addl
push
in
add
call
outsl
loope
push
out
clc
lods
push
pusha
push
fs
xchg
imulb
shr
ja
sahf
xchg
xlat
push
in
out
mov
push
stc
ficomps
add
pop
iret
pop
push
movsb
and
or
arpl
lret
outsb
mov
jo
sub
loopne
mov
in
mov
ja
sbb
sbb
sbb
mov
psrld
push
mov
xchg
mov
stos
jnp
mov
lret
jge
stc
pop
cmpsb
jae
dec
in
add
insb
mov
mov
sub
push
xlat
lcall
seta
fcompl
sbb
outsb
jecxz
mov
clc
mov
push
fistps
shlb
test
popa
out
sub
sub
dec
sbb
jmp
lret
dec
adc
xchg
clc
mov
cmc
xchg
aad
jecxz
sub
xchg
fwait
fwait
rolb
sub
xor
rorl
sti
jg
dec
jno
xchg
leave
pop
add
xor
test
inc
mov
jle
mov
lcall
rorb
maskmovq
xor
ficoml
ficomps
xchg
push
sub
aad
cmp
mov
or
cmpsb
mov
add
push
pop
dec
vpsrlw
push
out
pop
push
pop
outsl
cmp
outsb
mov
sub
repnz
pop
dec
lea
test
sub
in
pop
ljmp
sbb
pusha
dec
adc
aas
mov
int
or
mov
push
pop
test
shll
fidivs
pop
cli
stos
adc
cmpl
jecxz
mov
outsl
cli
int3
xchg
push
scas
sbb
stos
add
mov
js
push
inc
test
lock
iret
pop
js
je
dec
negl
mov
sbb
add
imul
inc
mov
out
xor
ljmp
leave
stc
push
pop
sub
daa
mov
leave
jnp
mov
inc
ss
fidivl
sub
jl
adcb
xor
or
xchg
inc
adc
cmpsl
push
jae
jge
jp
push
xchg
pop
loope
dec
jno
push
lock
cmc
mov
out
jge
pop
filds
insb
in
pop
pop
jmp
pop
cld
xchg
add
stc
stos
sti
ds
scas
ficoml
nop
add
icebp
aaa
pop
pop
outsl
jmp
xchg
repz
lds
addr16
stos
mov
shlb
dec
add
add
addb
scas
ret
aad
aas
adc
xor
or
jp
xchg
jl
ds
bound
pop
cmpsl
out
pop
repnz
rcll
cmc
pop
or
cwtl
cwtl
fs
jo
aad
out
ljmp
add
in
push
adc
nop
xchg
push
imul
mov
movl
clc
pop
sbb
ljmp
adc
and
jbe
mov
sub
pop
loope
movsb
test
mov
sub
sahf
xor
div
repnz
lcall
pop
mull
mov
lods
cwtl
pop
xchg
adc
ss
dec
or
andl
inc
scas
std
push
mov
xor
fisttps
lcall
mov
loope
arpl
or
loop
lahf
js
in
adc
gs
cmpsb
mov
sbb
push
pop
push
jb
mov
dec
fsubl
mov
mov
push
dec
sub
adc
outsb
jle
cmp
mov
pop
int3
into
pop
mov
decb
mov
adc
lret
ds
pusha
into
jl
jne
rorl
aaa
push
ja
adc
push
les
pop
xchg
xor
mov
sti
mov
inc
xchg
imul
enter
shlb
dec
adc
insl
cltd
lea
out
sbb
jecxz
pop
dec
lods
sarl
nop
movsb
loop
push
cmp
inc
aas
jo
test
push
out
lahf
adc
sbb
xchg
repnz
mov
daa
jbe
pop
in
push
sub
and
xor
sub
lds
aas
pop
clc
xchg
cmpsb
outsl
pop
aaa
mov
mov
bound
fidivrl
jb
stc
mov
push
jo
push
fcomip
mov
stos
or
mov
mov
pop
xchg
negb
int
lret
ljmp
jo
fisubl
lea
adc
cld
bound
push
sub
sbb
aaa
lods
push
adc
or
sbb
sahf
stos
mov
jge
out
mov
xchg
xchg
sbb
xchg
pop
jmp
bound
jne
add
lret
push
scas
loop
mov
mov
adc
test
loope
sbb
stos
mov
stos
or
pop
sbb
stos
and
pop
stos
dec
xchg
sub
sub
add
mov
out
xchg
ss
or
push
inc
lahf
fcmovbe
out
add
push
adc
sbb
add
sarb
ss
and
lea
pop
jnp
xor
xor
jmp
outsl
out
lock
push
not
fstp
adc
sbb
mulb
sub
movsl
scas
imul
insl
cld
lock
scas
or
mov
loop
xor
out
cs
mov
in
mov
out
lcall
out
pop
sub
push
ret
shrl
jg
shlb
mov
outsb
hlt
cmc
mov
mov
call
sbb
cltd
mov
sbb
pop
xchg
mov
fsubrs
orl
pop
divl
hlt
dec
lahf
fstp
call
lods
and
push
adc
jg
and
mulb
pop
mov
jb
mov
and
dec
mov
mov
addl
jp
sub
and
test
addr16
daa
in
sahf
pop
scas
sub
cmp
das
test
jmp
inc
insl
fs
mov
ljmp
shlb
loopne
cmpsb
fldt
sbb
cli
insb
pop
loope
in
imul
push
fcomp
inc
mov
ret
inc
je
mov
pop
mov
lods
std
in
lock
inc
push
stc
add
ljmp
imul
mov
hlt
in
test
add
int
lods
imul
aas
repz
sahf
cli
in
pop
stos
iret
lods
dec
icebp
enter
loopne
cwtl
loopne,pt
ret
lds
insl
stos
jg
push
addr16
leave
mov
aas
rcrl
mov
scas
and
int
ret
dec
lea
sub
aad
fpatan
xorl
sbb
jne
push
dec
jg
sub
pop
cmc
lock
mov
sahf
stos
pop
jle
and
mov
push
adc
aas
push
fwait
test
xor
jo
int
movb
aas
add
fsubrs
loop
test
sub
adc
daa
das
pop
jg
add
pop
mov
pop
fdivr
mov
aad
shl
cmp
sub
cltd
inc
ror
pop
out
adc
add
dec
rcl
lret
inc
sub
mov
decl
mov
stos
addr16
mov
lds
xor
adc
stos
jl
mov
mov
mov
lea
bound
cmpl
icebp
push
or
sar
pop
mov
jmp
ret
aad
cmp
mov
jae
jge
sbb
inc
push
add
sti
out
imul
xlat
pushf
cwtl
neg
fists
cmpsb
adcb
jbe
mov
bound
lds
and
sti
mov
sub
imul
stos
idiv
jmp
popf
sub
jp
cs
adcl
pop
popf
fstps
popf
jmp
rcrb
mov
inc
mov
xor
push
pop
shll
adc
inc
pop
pop
jmp
call
add
sub
lock
inc
push
cmp
pop
mov
cli
js
cmc
cmpsl
ljmp
push
xor
movsl
inc
into
fldcw
push
or
pop
sbb
sub
fabs
dec
fisubrs
dec
xor
sti
mov
mov
sti
sbb
ficompl
jnp
or
mov
lcall
sbb
shlb
stos
adc
in
orl
dec
push
fwait
mov
daa
cmp
leave
mov
fistpl
jp
sub
cmpsb
push
call
sbb
cmp
mov
jns
xor
xchg
jl
fimuls
clc
popa
out
stc
aam
sbb
mov
xchg
mov
push
push
add
and
mov
jle
fsub
mov
cs
jle
jg
pusha
sbb
in
das
mov
ljmp
mov
cmpsl
cmp
cmp
pop
fstl
mov
jnp
rorb
sbb
pop
stos
imul
fsts
mov
ja
push
jo
pop
ror
jne
pop
cs
xor
push
ss
js
pop
nop
in
jo
cli
add
jle
ja
jg
in
cs
je
xchg
lock
leave
xchg
push
int3
rol
add
neg
cld
xchg
fistl
and
stos
stc
lock
jg
pop
repnz
int3
das
mov
xchg
outsb
je
push
fistps
sbb
mov
push
push
add
mov
mov
mov
popf
cmc
or
dec
and
push
adc
dec
jge
mov
lock
fadds
out
lds
lret
rcrl
jbe
pusha
arpl
mov
sub
daa
add
leave
lds
jp
pop
test
mov
sarl
push
nop
add
addr16
xor
fmull
ljmp
push
popf
or
aad
xchg
clc
pop
sbb
xchg
push
xchg
mov
add
mov
mov
call
pushf
mov
dec
mov
insb
dec
jp
jnp
xor
mov
test
mov
ret
push
hlt
lods
mov
pushf
mov
or
push
adc
dec
push
jne
dec
pop
xor
lret
lds
or
mov
and
xor
mov
aad
mov
mov
dec
push
pushf
call
mov
push
jo
cmc
jo
jo
hlt
adc
push
sbb
je
sub
mov
fdecstp
or
pushf
cmpsb
pop
ret
push
push
push
jbe
sub
sbb
mov
stc
es
add
sbb
push
pop
lods
outsb
mov
stc
repnz
out
shrl
jmp
cmc
in
sti
ss
cmp
ss
stos
mov
ret
xchg
push
pop
sbb
inc
xchg
add
xchg
adc
push
mov
and
outsb
pop
popf
fcoms
gs
fcmovbe
cmp
xor
fadd
pop
jbe
call
out
sub
stc
mov
stos
out
notl
mov
call
mov
lods
stos
rcrl
ljmp
jge
mov
pusha
sti
inc
and
inc
out
movsb
imul
fistps
pop
inc
jbe
loope
bound
test
rol
push
inc
push
fidivrs
clc
jae
jle
mov
push
in
stos
mov
scas
lock
mov
push
cs
pop
xor
sbb
sub
int
or
jns
mov
mov
push
mov
mov
xlat
test
inc
daa
mov
push
ds
scas
test
in
mov
data16
fiadds
movsl
cmp
movsl
xor
pop
ljmp
fistpl
mov
push
mov
outsb
mov
pop
cmpsl
rorb
aaa
inc
jmp
cmpsl
fistpll
repz
jecxz
mov
out
mov
push
xor
lods
les
xchg
loopne
add
jecxz
pop
aad
push
arpl
in
sub
insl
hlt
sti
subb
test
push
loopne
ja
jl
mov
mov
sbb
shr
test
int3
fisttpl
fldcw
clc
sbb
jno
movaps
sbb
movl
dec
mov
in
pop
repnz
ja
sahf
mov
lock
in
mov
orb
loope
xor
lret
movsb
mov
jnp
pop
xor
aad
repz
sbb
rorb
gs
xor
scas
sub
in
fldl
out
jl
pop
mov
into
imul
jmp
mov
roll
push
pop
or
or
cli
mov
nopl
sub
popf
outsb
sahf
jge
aaa
fimull
lds
imul
addr16
mov
push
inc
ss
subl
mov
adc
mov
pop
lret
aaa
mov
or
sbb
mov
leave
subb
push
pop
test
out
test
imul
loopne
cmp
dec
sahf
mov
daa
pop
push
fcomp
cmp
mov
icebp
adc
stos
mov
inc
repz
cli
lods
inc
mov
daa
arpl
lret
or
inc
lea
mov
data16
call
push
gs
cmp
cmpsl
add
fdivrs
or
and
stc
xchg
mov
pusha
clc
sbb
xchg
dec
pop
adc
test
cmp
cld
mov
mov
fidivrl
leave
into
out
mov
int3
lds
rorb
shll
ss
mov
divb
mov
jnp
addr16
cmp
sub
cli
loope
lret
xchg
fwait
dec
cmp
imul
ljmp
xor
push
loopne
stos
jl
cs
pop
push
pop
jns
popl
into
adcl
popa
mov
mov
insl
std
push
jge
daa
shll
into
orl
lret
sbb
xor
xchg
cmpsl
scas
lret
rcrb
insb
jg
mov
shl
mov
pop
lea
cmp
es
xchg
test
loopne
xchg
loope
aad
aad
out
jo
cmp
lcall
inc
test
jge
mov
sahf
repz
fwait
loop
mov
pop
mov
fs
test
pop
ret
fcompl
inc
ja
lahf
out
mov
push
dec
xor
mov
rcrl
sarb
cmp
shl
push
sub
in
ja
push
pop
inc
cmp
push
mov
cli
movsb
xchg
cmp
testb
mov
mov
cmpsl
mov
inc
or
mov
stc
sbb
push
inc
push
push
add
ljmp
stos
lcall
mov
mov
add
cmp
xor
mov
leave
fcmovbe
ljmp
ss
pusha
in
sbb
mov
lock
test
xor
xor
push
jnp
cmp
scas
xchg
sub
xchg
nop
scas
xchg
out
ds
popf
xchg
add
xchg
push
jae
das
xchg
inc
out
lds
jle
loop
aad
fcomps
test
push
iretw
inc
jae
mov
push
sub
rcrb
icebp
test
add
jns
adc
outsb
mov
push
sbb
repz
jnp
ja
daa
pop
add
pop
roll
stos
aas
or
cli
rcrb
dec
pop
lahf
mov
jno
add
jmp
adc
inc
cld
jo
ljmp
sbb
roll
push
pop
cltd
loopne
fists
rolb
mov
clc
dec
fistpl
dec
into
js
xchg
inc
mov
dec
add
jle
imul
inc
scas
jge
cmc
mov
insl
adc
mov
ljmp
rcrb
mov
push
push
movsl
ret
xor
mov
mov
sarb
or
sub
fisubrs
ret
mov
aad
add
mov
sub
jge
mov
pop
or
push
out
popa
pop
lods
stos
data16
xchg
ljmp
fnstsw
sub
push
inc
imul
jl
lods
es
xor
fdivrs
xor
test
mov
movsb
mov
xorb
decb
jp
push
jle
sbbl
push
shrb
cmp
out
jl
mov
bswap
pop
cmp
ds
xor
xlat
push
aad
and
fs
fwait
add
int3
add
cmp
idivl
pop
outsb
adc
jl
pop
xor
xchg
loop
ret
fsubrl
imul
addr16
std
mov
jb
sarl
fs
in
sti
pop
mov
neg
jb
stos
sub
fcoms
int3
mov
ficomps
jp
xor
pop
popl
pop
mov
scas
adc
adc
scas
and
inc
lods
lret
sub
lret
pusha
push
aad
ja
pop
lret
sub
fmuls
sti
pop
movq
lods
data16
sbb
sbb
xorl
jns
repnz
lret
or
repz
jns
mov
dec
jg
in
ljmp
lds
pop
cmp
adc
cmpsb
movsl
dec
jmp
loop
sti
scas
movsl
xchg
lret
enter
pusha
mov
mov
pop
aaa
mov
insb
aad
sbb
jmp
jae
adc
loope
pop
stc
es
outsl
xor
fidivs
adc
adc
xchg
cmp
sub
and
cli
pusha
sbb
shl
loop
popf
andb
jnp
stos
pop
xor
jmp
loope
xchg
testl
sarl
bt
jg
fistpl
push
fdivrl
out
mov
fcompl
lods
cwtl
push
jp
int3
popf
outsl
cli
mov
xlat
js
sub
push
dec
fdivrl
fdivp
insb
into
sbb
xchg
ja
mov
dec
and
clc
loopne
sbb
xchg
sbb
scas
inc
dec
adc
jne
push
xchg
adc
push
dec
insl
lret
aam
push
adc
mov
inc
and
ret
ss
sub
pop
lea
and
rcr
xchg
inc
cmc
lahf
xor
mov
mov
hlt
or
push
imul
pop
je
shll
jbe
and
xchg
cwtl
lock
push
jmp
insb
and
sub
cmp
push
fnstsw
addl
cmpsl
icebp
mov
ror
jbe
and
loopne
pop
lcall
cli
mov
mov
lock
sbb
fdivrl
xchg
adc
push
dec
pop
or
aaa
and
mov
lea
out
test
mov
js
pop
cs
dec
push
pop
clc
mov
cltd
cmp
mov
dec
push
insl
pop
dec
mov
fwait
movl
outsb
mov
inc
imul
dec
and
pop
scas
lods
imul
outsb
xchg
sbb
outsb
ss
loop
mov
push
sub
jp
cmp
or
or
test
mov
push
mov
pop
bound
jmp
movsb
pop
lea
xchg
push
lds
jecxz
dec
rdmsr
insl
jns
sub
test
jb
push
pop
pushf
adc
cli
jne
dec
mov
pop
js
and
cmc
adc
mov
mov
pop
inc
jmp
cs
push
inc
sbb
mov
pop
xchg
int
jl
ss
xchg
repz
xchg
std
pop
clc
andl
xchg
inc
rcl
ja
jb
ss
rcr
nop
cld
aam
ja
push
xchg
clc
push
push
and
clc
out
xor
cmc
popf
es
push
cmpsb
mov
imul
ret
imul
and
outsb
xchg
test
mov
arpl
repz
ret
mov
int
pop
test
cmpsl
mov
adc
push
jecxz
sub
adc
push
push
sahf
xor
pop
jnp
les
lahf
adc
cli
inc
pop
push
jle
or
adc
push
push
pop
xlat
adc
mov
cmc
jle
and
or
pop
adc
cs
lss
or
ror
in
jmp
lret
fistl
pop
decb
insl
sbb
mov
outsb
hlt
jecxz
push
mov
jg
jmp
jb
out
jecxz
addr16
lods
iret
loop
mov
mov
sub
ja
es
inc
add
lret
jge
dec
xchg
stos
mov
sbb
push
sub
mov
in
push
shlb
add
data16
pop
test
mov
sub
repz
out
jo
mov
movl
push
test
mov
xchg
fstpl
mov
pop
xchg
icebp
addr16
hlt
xchg
xor
add
sbb
pushw
pop
pop
scas
dec
mull
xchg
dec
pop
cmc
icebp
push
mov
sub
push
sbb
fwait
bound
popa
out
aas
dec
cmpsb
ss
dec
test
imul
xor
mov
fsub
ja
pop
arpl
leave
xchg
shl
inc
insl
dec
ljmp
popf
in
les
fidivl
mov
dec
jg
dec
push
cmp
aad
push
je
pop
test
stc
sub
sbb
push
in
xlat
in
lret
aam
popf
sub
shl
cmp
sti
push
hlt
aam
dec
add
cmc
jp
out
cmpsb
movsl
jbe
cmc
sub
jo
lods
pop
pushf
dec
cltd
je
dec
push
cmp
ds
inc
aad
pop
addr16
mov
cmp
xor
or
mov
daa
pop
stos
cs
pop
out
cmpsb
mov
push
add
dec
aas
int3
aam
lret
add
mov
jp
cmp
push
mov
outsl
pushf
add
dec
add
inc
into
xor
out
mov
xchg
xlat
cld
inc
fwait
add
imul
jecxz
add
cmpb
setl
xchg
mov
or
shl
fcoml
jns
jmp
xchg
dec
mov
lods
dec
popf
stc
mov
jnp
cmp
push
aaa
repnz
stos
in
insb
movsl
ja
mov
sub
ja
jge
xchg
add
jae
mov
icebp
ficompl
sub
fcomi
fwait
pop
mov
ja
or
scas
std
sub
pop
ret
leave
test
sub
movsb
xchg
and
call
push
out
xor
cmp
pop
jge
cwtl
dec
ss
pusha
cmp
ja
sub
jnp
rorb
test
enter
mov
loopne
repz
jl
pop
mov
dec
es
fists
fcompl
mov
aam
sub
xor
adc
scas
out
mov
sbb
push
lea
cmc
and
mov
lcall
stos
stc
dec
inc
inc
cmp
les
sbb
in
bt
mov
rcll
or
sub
sti
pushf
jge
jo
fcomip
sbb
push
add
jg
sbb
aaa
cld
imul
fsubrs
sahf
add
pushf
inc
out
mov
jle
mov
out
mov
jb
cmpsb
dec
pop
xchg
outsl
push
mov
ret
shrb
loop
fstpl
fwait
out
add
popa
lods
mov
ja
rcrl
loop
jns
imul
pop
scas
mov
or
pop
outsb
test
adc
das
lcall
shlb
and
cmc
fwait
lock
pop
pushf
lds
push
mov
shlb
mov
xor
cmc
cli
or
pop
mov
inc
mov
lock
mov
iret
insl
bound
pop
push
jb
mov
mov
or
xchg
pop
sub
or
dec
call
clc
pushf
mov
shl
cli
push
ret
out
and
push
add
notl
mov
pop
mov
fsubl
ss
jae
shrb
sahf
mov
jge
xchg
mov
and
mov
jns
fistpll
mov
add
fstpt
clc
cld
and
aad
lahf
jg
xlat
mov
insb
jne
shr
sub
pop
inc
cmpsb
mov
stc
stos
bound
sbb
daa
dec
cld
nop
outsl
lock
fimuls
pop
sbbb
scas
pop
jle
sbb
iret
in
addl
idivl
jp
adc
jle
js
neg
stos
mov
stc
out
cmp
push
cltd
clc
repz
lock
test
cmpsl
sbb
test
or
dec
pop
out
add
inc
out
arpl
insb
inc
icebp
mov
mov
sbb
xor
mov
out
shll
ss
sub
scas
mov
daa
jae
jb
out
pusha
jns
ds
shrl
js,pn
mov
sbb
lock
adc
xchg
ljmp
pop
sub
inc
push
in
pop
or
and
xor
mov
inc
mov
pop
movsl
sub
mov
cli
das
xor
xchg
repnz
sti
les
je
dec
std
fsubl
movsl
xor
sbb
cmpsb
fdiv
outsb
mov
and
jecxz
sti
inc
inc
pop
pop
nop
add
add
push
add
add
add
push
mov
add
cld
push
push
push
mov
mov
mov
mov
cmpw
jne
add
movl
xor
mov
inc
xor
call
jae
mov
call
add
stos
jmp
call
jb
call
jae
mov
call
dec
je
jns
call
jae
push
mov
call
mov
inc
dec
jne
call
jb
pop
jmp
mov
call
add
mov
movb
cmp
je
call
mov
jmp
mov
call
push
mov
call
mov
inc
inc
pop
or
je
mov
jmp
cmp
je
inc
call
mov
jmp
call
dec
loop
mov
call
jmp
dec
mov
push
mov
mov
xor
shl
call
or
pop
mov
call
cmp
jae
cmp
jae
cmp
jae
cmp
ja
inc
inc
inc
inc
push
mov
sub
rep
pop
jmp
mov
pop
pop
pop
jmp
add
jne
mov
add
stc
adc
ret
mov
call
ret
xor
call
adc
loop
ret
xor
inc
call
adc
call
jb
ret
mov
pop
ret
nop
dec
inc
jecxz
add
add
add
cli
enter
inc
jo
movsl
data16
bound
or
xchg
jae
sarl
and
daa
leave
lock
sbb
stos
imul
test
movsl
gs
jmp
jbe
pop
std
jle
adc
push
xor
orb
inc
loopne
inc
lock
loopne
sub
sub
mov
mov
out
popf
sarb
and
out
dec
in
addr16
sub
cltd
inc
xor
mov
cmp
xchg
xor
xchg
lahf
cmp
clc
mov
out
or
enter
out
mov
add
out
out
js
inc
pop
jg
xchg
rcll
sbb
push
notb
test
insl
cmp
imul
or
lret
pop
cmp
jnp
fimuls
push
xchg
add
push
add
xchg
hlt
fwait
test
mov
pop
fs
stc
lcall
lea
fiadds
pop
xor
mov
mov
bound
mov
adc
daa
push
loopne
sub
leave
cmc
aam
cmpsl
mov
into
rorl
loop
xchg
and
adc
add
movsl
inc
add
lret
sahf
xor
pop
jb
mov
add
dec
cmp
add
xchg
lock
mov
and
pusha
dec
mov
fidivl
and
je
and
loopne
lock
loopne
cmovl
ja
adc
icebp
mov
xchg
inc
jge
out
xor
testb
mov
and
sub
sub
loope
mov
pusha
jecxz
inc
inc
xor
mov
movb
rorl
out
cmpl
ljmp
idivb
fidivrl
sti
pop
sbb
out
pop
xchg
aam
jl
fs
decb
cwtl
lahf
pop
aad
ja
std
loope
in
pusha
lods
mov
into
shr
lret
inc
ret
xor
stos
inc
cmp
sbb
pop
cmp
outsl
cmovb
insb
popf
fcompl
mov
pop
jno
fadd
jl
in
inc
mov
jnp
stos
mov
mov
mov
jmp
add
push
sbb
push
data16
movsl
int
je
pop
pop
std
jg
dec
mov
mov
pop
sbb
cld
lahf
adc
int
lret
daa
movsb
daa
and
mov
push
movsl
add
push
add
pop
mov
mov
pop
mov
cmp
push
clc
scas
clc
xor
sub
mov
xchg
mov
jecxz
imul
mov
mov
mov
jae
and
cltd
add
mov
or
mov
loop
dec
mov
sbb
imul
mov
push
mov
push
adc
cmp
or
or
mov
imul
aaa
push
cmpsb
daa
lcall
pop
dec
repnz
xorl
xchg
les
mov
jne
inc
mov
or
adc
test
je
pop
mov
lcall
scas
jle
cwtl
add
mov
push
push
cmp
jbe
pop
cmp
jo
out
pop
inc
repnz
cmpsb
or
sub
out
bound
push
pop
imul
aas
mov
int
ja
adc
lock
insl
fdivrs
cli
cltd
and
das
test
xor
lahf
mov
decl
mov
add
xchg
cmp
mov
rcll
lcall
pop
scas
adc
mov
pusha
push
cltd
jmp
adc
dec
int3
inc
inc
cltd
xchg
xor
pop
data16
js
pop
outsb
cs
adc
and
out
and
ret
mov
aam
roll
sbb
inc
or
cmp
push
bound
and
data16
enter
xchg
pop
aas
insb
pop
jl
daa
sahf
sub
dec
sub
push
sbb
jp
mov
cmp
inc
or
xor
sbb
rolb
movsl
adc
mov
imul
mov
test
mov
fcmove
icebp
pop
dec
xorl
repnz
pushf
lea
lock
mov
roll
jns
cmc
sahf
jg
into
scas
nop
cmp
jp
lret
jae
sub
sbb
test
inc
push
xor
stos
mov
or
call
jmp
mov
outsb
and
mov
scas
add
cmp
jecxz
sbb
gs
sub
mov
jle
xchg
push
add
sub
push
pop
push
rcrb
add
mov
sbb
int3
jge
cmp
add
xchg
arpl
arpl
mov
js
inc
xchg
xchg
dec
inc
aaa
or
mov
xchg
cmpsb
stc
inc
mov
popf
cmp
push
andb
jns
push
sub
aam
mov
xchg
sub
mov
sub
xor
iret
fisubrs
scas
sub
fmuls
xchg
mov
ja
pop
loop
out
hlt
inc
pop
cmp
and
dec
ror
lock
or
sub
jp
pop
mov
je
jg
shr
addr16
inc
mov
add
push
xchg
rcrl
ds
adc
scas
cmc
mov
cmp
push
dec
loopne
repnz
jne
test
push
sub
cmp
pavgw
cli
lods
shll
push
push
jle
lea
jge
mov
jp
or
cltd
push
test
mov
dec
sub
push
hlt
push
inc
mov
jmp
sub
movsb
imul
out
mov
in
iret
jmp
aas
ss
fnstsw
mov
enter
add
pop
ds
lret
jns
test
add
mov
dec
push
jmp
das
aas
cmpsb
mov
xchg
mov
adc
dec
aad
ljmp
xchg
aas
mov
sar
popa
dec
jb
mov
popf
sub
push
stc
mov
cmp
sub
iret
mov
push
pop
xchg
cli
mov
jno
inc
xchg
out
hlt
pop
sbb
sub
test
pop
cltd
roll
push
pop
inc
gs
sbb
xchg
rorl
lret
fstpt
mov
pop
lret
push
sub
add
or
dec
adc
push
mov
fidivrl
pop
push
xchg
enter
push
dec
loopne
mov
xchg
add
lahf
test
inc
lret
jb
cmp
sbb
pop
in
imul
cld
leave
lods
cs
fistps
push
add
jg
icebp
sub
and
xchg
ret
lahf
lock
dec
sbbl
or
xchg
xchg
adcb
lahf
fidivrs
push
cmpsb
inc
fnstsw
out
and
inc
mov
loope
mov
mov
dec
stos
mov
lea
insl
jo,pt
inc
push
jb
outsb
shr
das
inc
pop
sbb
daa
mov
and
sbb
nop
and
xor
movsb
mov
sbb
fldt
leave
inc
imul
pop
dec
mov
icebp
xor
and
sbb
arpl
inc
cmp
adc
leave
lods
sbb
ljmp
xlat
adc
cmc
les
xor
jecxz
mov
jae
inc
dec
jge
cmp
sahf
fs
mov
lock
stc
repz
jb
mov
bound
into
cmp
sbb
pushf
adc
pop
dec
fstps
aad
mov
stos
xchg
test
jg
cld
push
jns
inc
addr16
sti
mov
insb
jp
shlb
popf
push
das
out
xchg
sub
aam
sti
leave
aam
testl
dec
dec
bound
sti
bound
xor
xchg
jb
sbb
sarl
sub
lret
and
int
repz
rcr
inc
lahf
test
push
lods
mov
add
xchg
xor
mov
outsl
js
push
stos
xchg
cmp
fstpt
dec
sbbb
addb
nop
nop
sbb
fildll
lret
mov
mov
fnstcw
push
stos
scas
pop
ja
scas
mov
jbe
dec
into
lock
mov
rol
push
dec
out
mov
ss
incl
pop
sub
test
push
dec
scas
nop
and
sbb
scas
inc
pop
inc
popf
jp
lcall
leave
jp
xchg
add
mov
jg
and
cmpsl
xchg
dec
fcompl
loope
popa
ja
bound
xor
in
mov
cmpsl
jbe
loop
pop
inc
mov
test
push
stos
push
dec
outsb
jo
mov
dec
jle
clc
into
sbb
imul
cmp
dec
hlt
sub
jnp
jle
jno
in
mov
push
inc
sub
jns
out
roll
das
jbe
iret
mov
or
mov
push
scas
test
mov
pusha
push
shll
adc
xchg
sbb
out
pop
imul
jl
imul
xor
sti
sub
loop
pop
in
flds
jb
and
jmp
cmp
sahf
rorl
enter
fdivp
into
push
into
cltd
pop
stos
fwait
std
inc
xor
fcomip
stos
xor
pop
enter
pop
mov
jp
outsb
push
clc
dec
sub
mov
movsl
cmpsb
fldt
mov
je
inc
repz
lcall
push
jno
sub
cmp
mov
adc
push
inc
push
mov
cmp
je
out
lret
dec
test
and
hlt
or
adc
lret
adc
pop
cmp
push
inc
andl
pop
mull
xchg
loope
mov
addb
cmp
mov
jb
push
sbb
or
sbb
sub
or
or
cmp
xchg
add
and
or
xchg
adc
jnp
fcmove
testl
das
in
xchg
mov
adc
repz
outsl
sbb
inc
adc
int
shr
dec
push
xchg
cmp
js
pop
cmp
cmp
push
rclb
add
test
push
inc
xchg
adc
ret
sbb
or
dec
or
jnp
mov
ret
inc
fwait
jo
mov
mov
add
pop
hlt
lods
cmp
sub
loopne
xchg
add
in
sub
iret
pop
cwtl
mov
sti
push
scas
push
rcrl
mov
out
mov
xor
jbe
in
push
call
mov
hlt
js
adc
clc
xor
and
mov
inc
xchg
add
aad
sbb
cmp
cli
fnstcw
mov
in
pop
icebp
out
xor
call
mov
ds
out
pop
popf
in
or
pop
mov
lods
or
daa
adc
icebp
ret
out
sbb
loop
xchg
das
repz
add
xchg
push
movsl
dec
les
pop
lods
inc
xor
and
pop
pop
cmp
dec
inc
je
push
lock
adc
dec
pop
scas
dec
jae
ret
mov
mov
rcrl
mov
sbbl
shrl
or
mov
call
std
daa
punpckhwd
js
sti
mov
ds
push
fwait
or
xor
adc
adc
xchg
outsb
xchg
xchg
xchg
in
stc
dec
and
add
pop
scas
jmp
push
je
jmp
addr16
cmpsb
push
xchg
lahf
cmpsb
test
sbb
mov
pop
cld
jge
enter
sbb
pop
mov
inc
insl
adc
mov
sub
mov
xor
lock
scas
push
push
fdivs
sub
addr16
push
stc
in
inc
mov
jg
sbb
mov
popf
and
lods
test
cmp
pop
outsb
out
hlt
or
fisttpll
push
mov
and
outsb
sahf
sbb
pop
fcmovb
cli
sbb
mov
sbb
lock
mov
popa
adc
ljmp
shll
or
xor
fisubs
or
test
arpl
fimull
mov
popf
jns
push
or
sub
xorb
movsb
sub
cs
push
mov
out
sbb
cmp
mov
xchg
inc
hlt
inc
out
hlt
or
ret
hlt
aad
sahf
dec
mov
aam
rcll
mov
std
xor
xchg
pop
int
mov
fidivl
into
je
notb
lret
push
xor
jmp
mov
sar
inc
mov
mov
mov
pop
movsl
add
mov
lahf
or
insl
shlb
and
test
dec
push
in
int
jne
aad
adc
sub
subb
jmp
mov
push
push
pusha
addr16
hlt
and
xor
cmp
fs
mov
int
cmc
test
xchg
sarl
idivb
adc
add
loopne
int
mov
cli
lods
xchg
stos
aad
fidivrl
inc
pushf
out
mov
pushf
sbb
lds
inc
sub
stc
mov
aam
mov
insl
inc
mov
lcall
mov
and
push
fcmovu
mov
xor
jb
push
cmc
xor
pop
jbe
cmp
sub
xor
sub
out
sarb
rclb
rcr
fsubs
stos
sub
movsl
or
jae
into
call
jl
cmp
add
push
fimull
inc
enter
cmp
arpl
out
cmpsl
iret
fs
in
cmc
std
stos
pop
pop
rcll
push
sbb
inc
xor
mov
lahf
push
sub
mov
mov
fbld
mov
adc
cmp
lahf
mov
jle
call
sub
cmpsb
loope
pop
cmp
dec
jo
xchg
jg
cmc
and
jl
add
pop
stc
scas
adc
xor
addb
pushf
and
cmp
cmc
das
push
dec
in
ds
sti
leave
mov
xchg
loopne
dec
clc
fisubs
je
pushw
mov
sbb
sti
out
pop
adc
mov
sbb
push
fwait
mov
ss
sub
cmp
les
je
sar
add
xlat
push
inc
enter
xor
sub
popl
xlat
jp
sti
rorb
mov
xchg
dec
adc
or
scas
xor
out
fadd
dec
inc
iret
mov
leave
adc
fdivs
fistl
jge
dec
xchg
inc
cmp
sub
cmp
arpl
push
outsb
out
fisttpll
ret
pop
xchg
push
rcrl
push
insb
and
mov
icebp
sub
lods
imul
sub
pop
pop
add
dec
sub
fadds
out
cmp
add
mov
push
push
sub
mov
mov
push
imul
push
insl
push
mov
sub
aad
outsl
stc
jle
scas
cmp
push
push
xchg
outsb
bnd
dec
stos
incl
mov
adc
mov
mov
ljmp
incb
test
in
negl
fcomps
in
xor
andb
pop
pop
push
dec
pop
dec
add
or
and
dec
pop
hlt
pop
or
adc
pop
lods
fcomps
lret
hlt
into
pop
inc
enter
and
imul
cmc
aas
dec
sarb
adc
imul
pop
mov
subl
movsb
aaa
inc
icebp
lret
test
comiss
popf
int
stos
push
repz
xchg
push
jl
ficoml
and
loopne
icebp
in
sti
das
dec
jg
das
fs
insb
fsts
aam
xor
cmc
idivb
push
mov
nop
or
pop
cld
scas
mov
je,pn
cmpsl
cmpsl
fsubr
insb
dec
and
movsb
mov
dec
mov
jl
cmc
push
stos
push
lods
shll
test
dec
sbb
xchg
scas
pushf
adc
fsubrp
daa
incl
aad
stc
js
test
lods
cld
push
lcall
jl
fisttpll
pushf
imul
pop
push
or
aaa
cmpsb
and
adc
cmp
jmp
push
js
add
outsb
cmc
add
pop
mov
mov
xchg
xor
stc
inc
push
xchg
push
shrl
pop
push
or
sarb
repnz
daa
mov
outsl
adcb
mov
push
sub
mov
lods
mov
std
loopne
add
movsb
stos
cmp
and
mov
orb
lods
cld
pop
sbb
scas
pop
ljmp
cmpb
fbld
ja
and
mov
xchg
cwtl
mov
je
jl
mov
mov
mov
dec
sub
and
xor
xchg
shlb
fbstp
int
inc
mov
das
icebp
test
xchg
aad
pusha
movl
mov
or
lret
jno
imul
lea
loope
add
cmpsb
ret
lret
mov
mov
xchg
jne
add
or
mov
lods
xor
mov
inc
mov
inc
mov
sub
std
mov
mov
push
shlb
sbb
gs
fstps
cmp
stos
dec
push
cs
adc
or
dec
cmc
cmpsl
sti
or
in
inc
mov
xorl
ljmp
and
add
outsl
vmovaps
mov
push
jbe
adc
cmp
iret
fwait
stos
scas
push
js
fidivs
inc
mov
outsl
gs
aas
movsb
jmp
mov
shlb
or
mov
add
ficompl
into
jecxz
ja
push
pop
inc
and
xchg
out
adc
test
jp
int3
pop
push
call
mov
lcall
xchg
iret
call
cltd
push
jg
loop
adcl
xchg
ja
mov
pop
jno
in
ja
ljmp
fisttpl
add
in
push
cld
rolb
push
roll
insl
pop
cmp
mov
jp
shll
inc
sub
in
add
hlt
insb
jge
mov
in
mov
push
imul
xchg
cmpsl
pop
lods
jns
ds
dec
push
fidivrl
push
in
ss
popa
rdmsr
dec
sbb
push
adc
sub
and
mov
in
inc
or
test
stos
mov
jl
adc
out
dec
inc
shrb
inc
inc
mov
rorl
mov
fbld
lcall
sbb
mov
fists
xor
in
jl
adc
aas
adc
or
mov
mov
cmp
sub
sbb
fprem
inc
sub
cld
stos
jb
mov
insl
decl
outsb
andb
pop
mov
pop
andl
xchg
xor
and
into
mov
jbe
mov
push
lock
test
sub
mov
cld
jo
push
aad
adc
hlt
and
pop
aaa
lret
dec
pop
xchg
popa
js
jle
ja
jmp
adc
test
loope
inc
std
cmp
in
mov
jmp
mov
xchg
aaa
mov
pop
mov
clc
jg
xor
ljmp
cmp
xchg
roll
jb
out
scas
imul
jae
les
nop
push
sti
stc
push
fnstenv
lods
cmp
test
iret
pushf
and
shr
fstpl
stos
xchg
mov
nop
mov
negl
lds
incl
pop
sbb
xor
clc
sbb
rep
aas
pop
roll
cmpl
push
lret
or
xchg
lds
and
outsl
shrb
movsl
push
cli
pushf
xor
ret
ljmp
stc
mov
mov
xchg
stos
je
cmp
pop
in
out
insl
inc
adc
addl
cmpsl
stc
push
jecxz
adc
lcall
mov
rol
lahf
push
xchg
xlat
adc
sbb
push
pop
xor
mov
dec
aad
dec
adc
lods
in
xor
std
ja
mov
popa
jp
shrb
es
pop
sti
addl
mov
pop
loop
punpcklwd
sub
add
jp
std
dec
and
sbb
or
jae
pop
fcompl
ja
pusha
fdivl
sahf
or
jge
int
cmp
adc
les
ss
jmp
call
cs
call
into
cmp
push
mov
shlb
test
inc
out
jge
push
push
dec
lods
fsubl
push
xchg
xchg
aad
incb
mov
pop
cmp
shr
fdivp
pop
adc
lods
cmpsb
jbe
pop
bound
pop
popf
jp
lret
stos
xor
iret
mul
xchg
pop
pop
out
sbb
dec
sub
outsb
cli
imul
and
mov
out
leave
xor
push
icebp
test
lods
push
in
orb
pop
jge
xchg
out
call
sbb
gs
mov
cmpsl
out
xlat
jbe
or
sub
fs
adc
inc
test
push
iret
or
mov
adc
mov
mov
fldenv
mov
xchg
xchg
das
xchg
out
adc
sbb
adc
lods
mov
cmpsl
inc
mov
filds
imul
aam
in
jb
je
jge
pop
in
cmp
add
jno
loope
rolb
ret
in
pushf
repnz
addr16
loop
mov
ljmp
add
imul
mov
lret
cs
adc
mov
in
push
sbb
mov
mov
jl
fildl
and
push
mov
pop
ret
pusha
addb
test
cli
mov
pop
lods
push
sbb
insl
jne
inc
outsb
clc
mov
outsb
lea
sub
scas
stos
pop
push
pop
daa
dec
xchg
ja
cs
es
fcompl
or
int3
stos
dec
lcall
lods
sbb
mov
icebp
mov
fistpll
cmp
pop
sub
sub
jmp
add
inc
sbb
fcomps
pop
jb
mov
aad
lret
add
ja
gs
dec
lock
adc
dec
or
out
aad
test
cmpsl
ds
dec
mov
push
fcoms
jp
ja
aaa
ja
fcoml
push
xchg
sub
scas
dec
imul
pop
pop
cmpsb
inc
lret
in
push
adc
push
fimull
ds
call
cmp
sbb
jg
push
ss
jns,pt
scas
in
cwtl
mov
dec
in
addl
imul
lea
ja
out
mov
xchg
mov
fwait
mov
js
push
mov
push
movsl
sahf
mov
push
dec
add
cmc
mov
out
jl
not
insl
and
je
stc
sbb
popl
inc
pop
mov
stos
cli
test
std
test
push
in
or
cmp
out
mov
jnp
lock
lcall
lahf
mov
or
jg
and
stos
pop
lds
xor
dec
ljmp
lret
mov
pop
add
dec
pop
jecxz
cmpsl
filds
int
inc
push
dec
pop
xor
push
aam
scas
insb
add
cmp
or
jecxz
imul
ss
xchg
and
xor
loop
sarl
aaa
addr16
cmc
movsl
inc
scas
dec
pop
push
lds
mov
cld
push
jb
xchg
xchg
loopne
hlt
push
sahf
jo
roll
addb
dec
aaa
std
mov
jo
and
je
inc
inc
jp
stc
sti
cmpsl
sbb
aam
push
sbb
jmp
iret
int3
pop
fistpl
fistpll
repnz
movsl
jge
std
loop
stos
mov
push
lahf
jnp
out
daa
mov
mov
stc
push
jp
int
out
shl
fiadds
jl
clc
mov
fisubrs
lcall
in
inc
aad
sbb
out
in
inc
pop
add
xchg
lcall
sbb
loope
jl
or
mov
clc
mov
ljmp
clc
adc
lret
xor
add
xchg
lret
aam
insl
aam
xchg
xchg
test
dec
cmp
sbb
stos
lods
sti
push
jb
pop
xchg
xor
pop
inc
lods
sub
mul
test
inc
fwait
es
jno
jbe
pop
sarl
mov
rcrl
enter
lret
push
popa
dec
scas
add
cmpsb
push
mov
pop
cltd
mov
lahf
mov
inc
lods
arpl
hlt
add
cli
xchg
pusha
sub
push
cmp
mov
test
inc
ror
int
decl
push
into
orl
shlb
pop
loopne
lret
cmpsb
pushf
mov
cwtl
or
fnstenv
outsl
jp
lds
cmp
out
sub
cmp
inc
rcrb
test
push
loope
call
mov
mov
loopne
fucomip
sbb
fnsave
sbb
or
jne
ret
xor
adc
iret
test
call
jae
inc
mov
jge
mov
cmpsl
jns
sub
aam
xchg
dec
cmp
in
inc
inc
lds
lods
push
mov
dec
pushf
inc
ljmp
xchg
jmp
jmp
cs
test
dec
inc
sahf
jns
icebp
xor
or
inc
push
aam
push
ja
adc
clc
repnz
ja,pt
mov
in
sub
mov
add
stc
inc
insb
xchg
lret
or
adc
lret
cmp
outsl
arpl
fisttps
cmp
jae
movsl
popa
enter
lock
pop
mov
popa
or
push
mov
testb
repz
test
cld
pop
outsl
icebp
icebp
or
jp
mov
stos
jno
scas
cwtl
sahf
jae
sbb
dec
outsb
int3
fcomps
inc
pop
sub
push
lods
out
movsb
bndldx
loop
jl
xchg
jb
jns
je
dec
mov
xlat
aam
fnstsw
out
sub
jge
jno
insb
test
or
daa
bound
leave
idivl
shr
or
popa
loopne
and
sti
fistpll
sahf
push
mov
or
push
push
inc
out
lock
testb
icebp
loop
jbe
hlt
mov
loop
ljmp
add
cmp
push
dec
or
roll
icebp
loope
subl
dec
fcomip
cmp
adc
pop
and
dec
add
out
add
jge
xlat
push
test
or
mov
jo
or
dec
add
mov
mov
sbb
loop
icebp
out
roll
sbb
adc
xchg
jbe
mov
lods
mov
sub
xlat
xchg
scas
mov
cld
or
jbe
cmp
and
movsb
jmp
pop
mov
mov
and
out
add
push
push
cmp
xor
add
mov
push
cli
leave
push
popa
add
and
adc
dec
cmp
nop
mov
mov
xor
aad
cmpsl
adc
jecxz
inc
insl
xchg
and
add
add
mov
fstpl
imul
pop
imul
dec
xlat
add
jae
test
mov
subl
push
jg
mov
ffreep
sub
repz
cltd
xchg
arpl
fimuls
ret
mov
adc
enter
negb
lahf
adc
cmp
mov
cld
xor
in
mov
adc
outsl
test
in
insl
aam
mov
pop
cmp
adc
lock
add
outsb
cmp
in
addr16
scas
cmp
ja
in
dec
insl
repnz
aaa
outsb
repnz
outsl
aad
bound
jg
out
xchg
out
lcall
in
int3
dec
arpl
out
mov
fs
loopne
pop
lahf
sbb
or
add
sub
sub
loope
out
arpl
and
cmp
shrb
jo
xchg
fimuls
jl
adc
pop
push
add
mov
clc
outsl
lcall
mov
outsb
add
and
scas
js
or
adc
cmp
mov
cld
adc
rolb
xchg
cmpsb
mov
fisttpll
es
jno
or
test
in
pop
mov
sahf
roll
cmp
dec
pop
in
pop
imul
lods
jp
adc
or
in
xchg
iret
das
out
add
dec
fwait
ret
sub
push
fadd
cli
mov
xor
mov
jne
cltd
jecxz
out
xchg
dec
cmc
xchg
outsl
ret
xor
popf
mov
pop
roll
mov
cmp
imul
xor
jge
insl
add
lahf
dec
cmc
push
add
push
rcpps
inc
mov
fimuls
or
or
sub
cmpsl
dec
aad
lahf
gs
mov
dec
pop
inc
jb
mov
in
xlat
and
add
xchg
lods
cmp
rclb
sahf
pop
cld
pop
push
dec
push
lock
jp
in
das
mov
mov
lods
sbb
inc
fsts
bound
xorl
dec
jge
sbb
test
push
arpl
inc
inc
daa
mov
xchg
loope
ja
sbb
or
aas
push
dec
mov
add
sbb
loopne
sti
decl
cmpsl
leave
mov
stos
inc
notl
xchg
cltd
jle
leave
lock
push
adc
leave
mov
dec
xchg
sbb
add
aam
loop
mov
jns
in
cmc
jbe
popa
js
inc
out
mov
lods
pop
pop
jecxz
xchg
push
add
loopne
gs
pushl
cmc
sti
aaa
shrb
mov
mov
aam
test
stc
clc
jbe
loope
fisttpl
enter
subb
rcr
int3
pop
mov
inc
stc
sub
dec
das
jno
sub
mov
mov
sti
test
sahf
xchg
decb
inc
lea
dec
sbb
popa
add
dec
out
mov
cmp
mov
mov
fs
adc
push
cmp
cwtl
pop
out
fsts
inc
mov
xlat
gs
cmovg
fisttps
scas
cmp
push
mov
stc
pusha
xor
inc
ret
dec
shl
shrd
test
mov
jb
sarb
dec
mov
inc
adc
dec
inc
lock
test
sbb
clc
les
test
cmp
cmp
xor
add
es
push
adc
stos
cmp
enter
jl
inc
mov
jle
push
sub
dec
hlt
jle
or
mov
jmp
xor
mov
push
mov
rolb
mov
fsub
inc
push
or
pop
pop
decb
sub
mov
or
and
jo
xchg
mov
popa
cs
xchg
aad
push
xlat
jle
adc
jp
popa
pop
mov
cmp
xor
add
jl
inc
je
inc
test
enter
push
xchg
popf
lret
cmp
dec
mov
jge
arpl
scas
popa
jge
mov
push
mov
jno
into
inc
mov
inc
out
mov
lds
fistpll
das
sti
pop
ret
inc
fbstp
cmpl
add
addr16
fs
mov
shlb
add
pushf
and
adc
andl
pop
xchg
and
gs
loopne
push
ljmp
pop
lock
rcll
sub
sbb
loopne
gs
xor
adc
xchg
and
jno
in
fcmovnb
repz
cmp
into
out
inc
mov
pushf
pusha
clc
push
pop
inc
xlat
inc
inc
ffreep
mov
jae
xor
xor
xlat
popf
xor
pop
lea
add
lret
loopne
xchg
mov
stos
dec
mov
aad
mov
fiadds
xchg
dec
mov
aaa
push
mov
mov
jae
cmpsl
ret
repnz
pop
jne
fisttpll
jbe
jno
das
jmp
pusha
push
add
cmc
or
stos
fnstenv
repnz
popf
push
in
mov
inc
cs
mov
testl
pop
xchg
test
aam
xor
lret
sbb
add
insb
js
cmpsb
and
jo
mov
jne
das
fimull
bound
mov
adc
ja
inc
repz
daa
xor
jb
decb
loope
mov
cmp
rcll
or
gs
pop
push
out
mov
out
cltd
les
mov
push
add
jns
push
cmpsb
mov
into
lcall
add
popa
scas
mov
mov
addl
and
loopne
inc
cwtl
arpl
xchg
xchg
outsb
xchg
je
cltd
incl
hlt
or
cli
and
popf
mov
ds
cmc
shrb
xchg
inc
push
push
cltd
sbb
lds
gs
sbb
out
dec
add
jae
test
in
push
adc
pop
xchg
mov
xor
dec
stc
bound
iret
mov
lock
shll
pop
inc
sar
ss
imul
mov
pop
and
dec
aaa
xor
popf
mov
popa
adc
sti
pop
movsl
xchg
mov
inc
outsl
inc
stos
test
movsb
jge
cmc
xchg
les
shr
lahf
and
mov
xlat
aaa
cmp
mov
push
xor
pop
add
lcall
loopne
js
cltd
lds
xor
push
jno
mov
sbb
in
cmp
mov
sbb
cmp
lods
sub
sub
daa
and
dec
pop
lods
sub
imul
jmp
dec
into
imul
ret
mov
loop
xchg
jmp
sbb
stos
repnz
loopne
fucomip
daa
mov
movl
cmp
loop
lahf
and
pop
xlat
push
sar
nop
scas
int3
lock
lcall
jp
in
outsl
dec
les
lret
cmp
cwtl
or
scas
jge
pop
mulb
push
or
xor
lret
mov
stc
cltd
sti
lds
sub
idiv
inc
cli
jl
jb
cmpsl
in
fcmove
sbb
jp
rorb
stos
repnz
cmpsl
outsb
movsl
xor
in
cmc
add
outsb
gs
jp
in
xchg
outsl
mov
dec
push
mov
and
inc
scas
ret
in
out
ss
aaa
movsb
pushf
imul
notl
movsb
repnz
in
in
loop
enter
sub
cmp
pop
shll
je
sarl
xchg
inc
push
cmp
pop
adc
jle
insl
xchg
sbb
xchg
daa
xor
and
inc
xor
adc
and
add
mov
testb
das
or
xlat
adcb
mov
lea
int3
das
pop
jmp
mov
in
sbb
mov
mov
mov
xor
clc
or
pop
xchg
mov
xchg
xor
add
cs
cmc
popf
cmp
leave
test
xchg
mov
add
add
pop
push
push
push
push
push
mov
sub
mov
push
push
push
push
push
mov
mov
call
pop
mov
add
push
push
push
mov
mov
cld
rep
mov
add
call
pop
mov
push
push
push
mov
mov
call
pop
pop
pop
sub
movb
inc
mov
add
movb
or
je
mov
call
cld
lods
cmp
je
push
mov
add
add
add
lods
cmp
jae
and
jmp
add
or
jp
lods
and
jmp
lods
dec
and
cmp
jne
pop
pop
pop
pop
pop
ret
or
push
jb
addr16
insl
insl
and
outsl
je
arpl
and
je
and
push
inc
inc
dec
push
push
inc
push
inc
inc
and
jo
and
and
inc
inc
jb
jo
outsl
jb
or
incl
jmp
call
add
jmp
call
lcall
