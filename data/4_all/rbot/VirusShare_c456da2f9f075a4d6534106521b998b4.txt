cmp
lods
rcrl
pop
and
sti
sbb
jno
jae
jecxz
stc
cwtl
outsl
mov
fldt
outsb
xlat
mov
or
rorl
pop
push
inc
dec
test
inc
push
test
pop
sub
cmp
jge
jl
test
mov
and
inc
and
pop
inc
dec
xorl
xchg
or
pop
aad
nop
adc
popa
cmp
xor
mov
mov
xchg
int3
add
pop
ljmp
lock
mov
icebp
mov
inc
mov
into
mov
mov
adc
pop
add
fists
aas
imul
push
mov
sbb
out
push
stc
cs
xor
adc
nop
inc
sub
push
inc
movsb
les
xlat
jecxz
or
add
push
adc
sbb
dec
inc
data16
rdtsc
xchg
dec
aam
mov
or
call
in
lea
clc
xor
adc
cmp
test
dec
insl
test
or
in
shl
pop
movsb
insb
les
aad
stos
jb
and
mov
and
inc
addr16
int3
sbb
push
in
aaa
or
icebp
aad
push
pop
adc
insl
mov
popf
inc
dec
inc
fstpt
jns
mov
cmp
lods
addr16
push
mov
mov
hlt
sub
fdivr
pop
mov
ret
cmp
out
insl
sub
dec
pusha
aas
repnz
stos
lcall
push
iret
jge
pop
xchg
addr16
push
adc
sub
mov
inc
mov
jnp
inc
push
or
jecxz
mov
add
imulb
inc
fs
lods
dec
xchg
xchg
jp
push
les
inc
push
pop
ss
pop
out
test
sub
jns
mov
push
cmc
ficoml
cmp
popf
iret
push
or
add
jl
inc
cmpsb
sub
lods
andl
xchg
pop
and
jmp
nop
xchg
xchg
sbb
mov
enter
mov
mov
mov
inc
imul
or
cmp
pusha
insb
lods
es
push
inc
sbb
test
dec
and
mov
hlt
or
into
pop
insb
negl
xor
inc
cmp
addl
je
lcall
mov
dec
sub
push
xchg
sbb
inc
inc
mov
inc
jb
lahf
shrb
cmp
cmpsl
bound
loop
dec
cmpsl
movsb
test
mov
cmc
enter
js
mov
jp
stos
cmp
inc
xchg
dec
cmp
fiaddl
sahf
cmp
push
test
outsl
pusha
cwtl
sti
push
sub
and
out
clc
inc
enter
pop
sbb
jno
add
mov
test
add
inc
lock
neg
lock
sti
inc
nop
mov
bndstx
pop
aaa
sub
filds
push
shlb
pop
cmp
test
rcr
aam
push
jmp
jo
hlt
cmp
scas
rcll
xchg
call
test
popa
aaa
outsl
decl
jno
test
lods
outsb
sbb
sub
loopne
mov
rep
test
aaa
int
addl
cmp
inc
add
cs
data16
test
sub
scas
push
das
dec
insb
jmp
sbb
or
or
aaa
shlb
imul
pop
cmp
mov
push
stc
jo
cs
xor
xlat
daa
xor
fistpl
dec
test
aaa
clc
es
rorb
movl
pop
mov
mov
repnz
xchg
ds
data16
aaa
inc
and
dec
cmp
push
xor
dec
add
into
xchg
sub
push
nop
adcl
das
jne
enter
jmp
jbe
testb
idiv
sub
adc
iret
stos
dec
xabort
orb
inc
sbb
sbb
enter
or
or
jmp
repnz
add
mul
xor
outsl
out
cmpsl
repnz
jnp
jge
cmpl
push
dec
mov
push
inc
insl
clc
push
mov
push
push
sbb
jl
pop
xchg
adc
in
jge
push
aam
dec
adc
test
push
xchg
frstpm(287
pop
dec
inc
sbbl
jno
fisttpl
stos
test
test
test
out
rorb
psraw
dec
enter
jge
jmp
movsb
pop
sub
test
jle
push
pop
mov
dec
push
data16
bound
fcom
jle
or
cmp
je
or
into
enter
mov
clc
xor
data16
insb
dec
or
insb
pop
jno
and
or
fidivl
rorl
or
push
jmp
loope
jl
mov
mov
lret
lock
dec
xchg
xchg
push
call
ja
dec
and
lret
in
jnp
or
sbb
cmp
bound
mov
dec
mov
outsb
outsb
cmp
cltd
and
jecxz
aas
imul
call
fdivrs
xchg
data16
stos
push
cmpsb
lsl
push
mov
jmp
rcrb
mov
in
lret
stc
daa
rcl
jno
imull
imul
mov
dec
mov
repnz
out
jg
cmp
iret
pop
cmp
push
jo
inc
sub
in
inc
stos
rcr
ffreep
les
cmp
bound
adc
in
and
lock
rorb
leave
or
push
push
test
ja
ljmp
dec
not
lock
or
add
stos
mov
inc
cs
lret
out
lahf
mov
push
sbb
jb
pop
ret
dec
lock
sti
sbb
aas
add
int3
jge
rorl
sbb
pop
aam
dec
mov
aaa
mov
jmp
adc
mov
xchg
or
and
push
jmp
shrl
sub
add
sbb
mov
mov
cli
add
bound
les
dec
sbb
sbb
add
mov
dec
scas
push
addr16
stos
pop
push
outsb
dec
sub
fcomps
jecxz
icebp
leave
xor
int
movb
push
les
pusha
out
pop
mov
fs
scas
cs
cs
sbb
into
into
or
or
lret
movlps
mov
pop
out
arpl
dec
cmp
dec
sbb
dec
shrb
adc
test
in
dec
jle
push
add
xchg
in
shr
dec
adc
pop
or
or
test
test
mov
xchg
dec
push
dec
repz
xchg
out
mov
dec
mov
or
popa
jno,pt
roll
int3
cmpsb
test
xor
insl
enter
cwtl
pop
clc
add
sbbb
icebp
or
push
or
int3
and
add
fidivrl
lds
cmp
scas
xchg
dec
or
aad
xchg
push
xor
ds
mov
sar
repnz
mov
add
int3
into
cmp
mov
stc
imul
lret
and
cli
lea
jae
mov
das
push
jbe
lods
pusha
mov
xor
std
imulb
ljmp
es
loope
jp
or
out
mov
mov
movsb
mov
lods
or
mov
mov
loop
mov
fcmovnbe
repz
sbbl
add
mov
or
add
push
movsb
insl
xchg
out
jl
mov
es
jo
fcmovb
or
rolb
sbb
bound
add
jo
cltd
fcomps
pop
int3
stos
leave
add
and
in
sahf
mov
test
movsb
movsl
sbb
hlt
pop
mov
pop
out
lret
hlt
mov
nop
mov
scas
call
cmp
cmp
popa
jae
and
xchg
inc
ret
jns
in
inc
mov
pop
test
mov
sub
outsl
push
pop
push
aas
call
loopne
gs
loop
dec
jp
dec
shl
notl
sbb
adc
mov
push
fiadds
rorb
adc
test
inc
movsb
icebp
gs
cmc
lods
mov
hlt
lds
inc
notl
or
push
mov
mov
daa
aam
pop
iret
nop
rorb
scas
out
jge
add
jmp
add
inc
sub
sub
std
jo,pn
xor
rcl
inc
mov
ret
mov
outsb
and
jge
xchg
lret
insb
mov
inc
inc
sbb
addb
inc
repz
mov
clc
lret
xchg
loope
sbb
lret
decl
or
cmpb
pop
jae
mov
pop
fdivr
ficompl
rcll
mov
loope
mov
repz
xchg
pusha
xor
out
mov
inc
movl
ret
rolb
lods
push
lods
loope
sub
pop
sbb
jne
aas
mov
or
xlat
nop
mov
xchg
test
outsl
mov
loopne
jno
gs
cwtl
cmp
sub
jmp
imul
pusha
cmc
push
cmp
dec
hlt
xchg
pop
sbb
inc
push
mov
jno
hlt
add
ljmp
inc
lret
pushf
fbld
je
pop
add
pusha
cmp
sbb
sti
iret
imul
dec
mov
or
int
and
xchg
xchg
int
loope
push
je
dec
add
xchg
add
or
jp
cmp
sbbb
jmp
sub
jp
xchg
fimull
jb
sub
xchg
jecxz
sub
xor
mov
jl
mov
test
add
inc
dec
or
mov
cmp
lret
iret
out
hlt
jne
pop
or
or
hlt
pop
test
iret
mov
adc
and
ja
add
loop
aas
or
or
dec
inc
dec
hlt
lock
xchg
aad
imul
dec
sub
xchg
stos
sarb
xchg
push
into
shlb
dec
in
dec
jp
ret
xor
pushf
daa
or
arpl
mov
mov
sti
dec
mov
stc
insb
cmp
or
mov
clc
or
inc
test
pop
pop
and
insb
lea
sarl
pop
rep
lock
enter
pop
test
pop
in
jp
and
or
xchg
inc
push
mov
xchg
inc
outsb
adc
das
jns
mov
cmpsl
js
xchg
movl
std
add
int3
push
int
jb
sub
xchg
fidivs
jnp
mov
inc
jne
lret
lods
jnp
sub
or
sbb
data16
pusha
adc
xor
sbb
iret
xchg
inc
nop
xchg
xchg
push
xor
dec
bswap
jmp
cmp
inc
adc
loop
ds
sub
sahf
lahf
push
or
push
jo
push
mov
test
lcall
pop
js
stc
jne
inc
outsl
ljmp
sti
pop
shlb
icebp
xor
jae
adc
dec
lcall
push
adc
dec
sbb
sbb
call
in
test
insl
or
and
lods
push
cmp
push
xchg
mov
dec
pop
jecxz
inc
insb
and
mov
sub
xor
call
pop
push
pop
sbb
or
out
nop
fnstenv
repnz
push
stc
lods
outsl
nop
sub
icebp
push
mov
add
sub
mov
push
and
fsubs
jnp
rcrl
rcr
out
jle
popa
push
mov
out
mov
repnz
test
lret
sbb
pop
mov
loop
xchg
test
mov
popf
ljmp
jl
es
inc
ljmp
dec
adc
cmpsl
add
sbb
hlt
inc
mov
fwait
pop
pop
enter
fs
push
mov
loop
les
cli
pop
sbb
push
push
mov
in
push
leave
push
in
xchg
dec
paddsb
add
mov
dec
loopne
in
xor
stc
mov
aam
jns
call
adc
xchg
jbe
or
and
outsb
adc
mov
into
jns
jbe
outsl
xlat
popf
sub
mov
xor
sub
push
inc
les
dec
push
pop
mov
pop
pop
out
pop
cmpsl
sbb
adc
dec
stos
out
lods
pop
xchg
loop
xchg
addb
mov
add
pop
push
rclb
bound
int
dec
add
sub
sub
sbb
adc
dec
pop
dec
jge
inc
leave
jp
outsl
sbb
lock
xchg
mov
loope
cmp
jo
lea
mov
dec
daa
jg
pop
xchg
stos
sarb
push
xchg
pop
repz
push
mov
or
mov
adc
out
cli
nop
pop
leave
sbb
shl
push
test
popa
xor
inc
into
add
repz
sbb
insb
aad
inc
ja
jecxz
lods
push
xlat
xchg
and
cli
jp
add
in
adc
cmpsb
sbb
and
daa
inc
xor
cli
out
push
imul
popf
xchg
mov
and
test
pop
insl
repz
lret
dec
jnp
dec
xchg
stc
push
rcl
fwait
ret
test
adc
pop
icebp
fcomps
xchg
xchg
pop
pop
outsb
pop
adc
adc
sub
pop
sbb
or
not
sbb
addr16
cmpsb
test
stos
and
xchg
mov
mov
outsb
cs
inc
cltd
or
push
daa
push
out
lret
arpl
rorl
pop
sub
data16
xor
out
icebp
test
jmp
aam
fs
lock
repnz
out
add
repnz
pop
inc
ljmp
shl
fisttps
into
lcall
popf
insl
ret
inc
lock
addr16
or
repz
or
pop
lahf
lods
jnp
add
enter
outsb
xchg
jo
cmp
push
sbb
imul
pop
jp
sti
sub
pop
int3
shrb
mov
pop
push
add
and
adc
movsl
jb
les
xor
push
push
xor
mov
push
decl
inc
jle
iret
imul
loop
gs
lds
inc
mov
jp
pushf
xchg
jle
adc
and
mov
pop
mov
loop
cli
jp
inc
dec
mov
mov
loop
sahf
fisubs
call
sbb
cmp
jmp
imul
pusha
lea
push
xor
adc
pop
adc
push
lock
hlt
or
test
add
push
and
int
or
fcoms
push
xchg
ljmp
xor
fsubrl
cltd
rclb
lcall
xor
pop
inc
lea
cmpsl
cltd
outsl
aam
fcmovb
mov
rorb
adc
inc
test
hlt
dec
imul
mov
jns
mov
cld
dec
mov
mov
lds
mov
or
adc
push
aas
push
fdivrl
push
jb
mov
pop
cmp
fs
icebp
push
adc
lahf
adc
aas
mov
xor
in
push
jno
mov
in
cs
aaa
repnz
push
push
adc
dec
dec
popf
or
sbb
loop
mov
cmp
lret
mov
lahf
push
add
test
lret
xlat
push
loope
fimuls
loop
xchg
in
cmp
sub
fprem1
dec
imul
push
sbb
jno
bnd
pop
sbb
popf
leave
cmp
jge
dec
xor
and
movsl
in
adc
or
push
repnz
mov
outsl
sub
or
mov
enter
sahf
add
jb
movb
inc
in
int
ss
sbb
sbb
pop
adc
adc
lods
orl
add
jg
sub
jne
mov
iret
push
movsb
xchg
popf
lahf
pushf
lock
iret
lea
stos
imull
xor
pop
mov
sbb
test
enter
and
cmp
mov
xchg
mov
test
and
mov
jne
insb
gs
mov
int3
add
cs
add
inc
add
cli
iret
lcall
add
add
ret
jo
xor
in
fistpll
shll
add
dec
xchg
push
sbb
arpl
sbb
ret
in
int
shlb
repnz
xchg
sahf
int3
xor
aam
and
daa
push
xor
cmp
fimuls
sbb
cmpsl
negl
mov
inc
mov
ljmp
pop
cmpsb
mov
cmp
and
and
mov
dec
andb
adc
aaa
int
fisttps
jmp
lods
xchg
and
mov
mov
stos
outsb
jge
les
inc
loop
adc
inc
mov
or
push
rcrb
int3
stc
dec
inc
pushw
pop
and
adc
or
loopne
pop
mov
and
adc
stos
stc
fnstcw
sbb
or
or
insb
sbb
je
mov
and
lock
mov
dec
push
out
xor
imul
sub
stc
test
push
mov
adc
test
or
xor
dec
loopne
mov
scas
mov
rclb
testl
add
push
xchg
lods
shl
jle
mov
cmpsb
fs
fisttps
mov
add
xchg
xor
cli
fs
pusha
jle
xchg
movsb
mov
in
out
sbb
js
je
movb
inc
cmp
fmuls
sub
inc
mov
pop
std
leave
dec
cli
push
push
add
adc
mov
aam
add
push
movl
push
and
cmp
xchg
in
mov
lods
std
rorl
ret
add
outsb
dec
xchg
rclb
sbb
inc
cmp
std
sbb
mov
xlat
push
rorl
data16
xor
mov
cwtl
aam
cmp
dec
sub
or
push
xor
dec
or
scas
lods
sbb
add
cmpsb
aas
and
jp
outsl
in
adc
out
mov
jmp
mov
xchg
clc
stos
mov
xchg
nop
aas
je
mov
test
push
xor
jbe
inc
mov
push
adc
in
xchg
jb
adc
or
sbb
mull
push
fcompl
fs
mov
mov
push
cmpsb
stos
push
int3
mull
dec
dec
lret
nop
fdecstp
hlt
adc
imul
lock
popa
cmp
mov
inc
mov
sarb
ret
scas
mov
add
mov
shl
push
enter
jo
push
insb
mov
call
mov
mov
pop
mov
sub
add
les
inc
inc
mov
nop
outsb
cmp
aam
fs
stos
push
imull
push
int
sbb
pop
adc
nop
mov
ss
push
les
imul
pop
das
cmp
add
in
hlt
sub
and
daa
ds
sub
dec
stc
sub
fmull
imul
nop
dec
icebp
shl
dec
rorl
iret
add
bnd
into
dec
mov
mov
in
push
fs
das
or
test
mov
sbb
or
and
push
xorl
clc
data16
cltd
push
or
xchg
pop
imul
push
cmpsl
lock
lret
addr16
jb
dec
pop
fwait
inc
mov
or
mov
pop
sub
push
into
test
or
addb
jge
lods
xor
insb
adc
sub
shll
je
int
mov
ljmp
fldl
fcompl
adc
mov
dec
js
adcl
outsl
mov
sbb
data16
mov
or
dec
cmp
mov
mov
gs
hlt
mov
push
cmp
push
rcrl
rcl
movl
pop
leave
inc
fistl
rclb
mov
int3
dec
lds
repnz
stos
mov
add
lods
cs
inc
and
pop
arpl
push
mov
mov
add
mov
add
stos
dec
test
cmp
lea
insl
sub
xor
pop
push
jo
dec
fcomip
dec
cwtl
inc
int
leave
fs
and
adc
arpl
adcl
sbbb
incl
mov
and
push
jmp
mov
mov
mov
mov
shl
out
decb
clc
and
adcl
popf
ljmp
xlat
inc
inc
movsb
test
add
ss
shll
rorl
jnp
popf
daa
or
mull
add
dec
mov
jmp
adc
roll
mov
dec
icebp
insb
test
cmp
pop
imul
stc
aaa
xor
sub
or
inc
mov
stos
pop
pushf
rcrb
lcall
xchg
ret
push
xor
pop
adc
cmp
mov
jo
insl
notb
into
jp
insb
adc
scas
loopne
test
or
push
sub
sbb
stos
pop
movsb
imul
stos
xchg
sub
ljmp
andl
pop
dec
das
ficomps
push
or
sahf
xor
pop
je
adc
aad
jge
adc
hlt
lds
push
shr
int3
stos
adc
icebp
hlt
loopne
adc
loope
test
dec
push
mov
imul
dec
pop
scas
push
sub
stos
lret
insb
dec
daa
add
fcoms
ficoms
sub
mov
xchg
lcall
xor
leave
ret
pop
or
icebp
and
jmp
lcall
orb
mov
call
jne
xchg
ficoms
dec
mov
and
fisttps
push
pop
inc
lret
inc
pop
pusha
nop
fbstp
jns
stc
outsl
inc
push
fstl
mov
test
cld
fdiv
xchg
mov
je
add
dec
adc
push
lcall
push
nop
lds
int
jne
jno
mov
sahf
jne
call
out
outsl
fcmove
pop
stos
mov
adc
fst
movsb
xor
mov
in
dec
es
cmp
inc
in
or
pop
add
out
jnp
mov
out
stos
dec
pop
sub
shrl
sti
pusha
movsl
inc
clc
xor
cmp
test
sub
and
ficomps
aad
pop
xchg
or
ljmp
adc
inc
sahf
data16
push
pop
or
push
pop
ret
cmp
testb
icebp
icebp
mov
or
test
adc
sti
fstl
jne
sbb
mov
push
daa
int
cld
fmul
pop
add
shlb
or
into
addr16
fdivl
jmp
jbe
xchg
lods
int3
outsb
or
push
or
test
push
or
aad
inc
aas
call
sbbb
fs
sbb
insl
dec
pop
rorl
insl
mov
cs
stos
jae
fstpl
outsb
popf
jae
repnz
rolb
out
mov
sti
sub
in
jle
sbbl
adc
xchg
add
or
mov
divb
loop
in
cmp
fcomp
into
mov
or
dec
lods
inc
fisubrl
mov
leave
lret
data16
lods
pop
push
jecxz
lret
pop
movsl
lds
cmp
stos
cmp
stos
mov
int3
pop
loopne
xchg
lods
sti
int3
icebp
loope
mov
rorl
mov
inc
xor
dec
sbb
fmull
adc
xlat
or
and
xchg
cwtl
jne
mov
lds
sub
mov
nop
add
inc
lahf
sub
std
adc
psrld
hlt
cmp
and
pop
nop
sbb
mov
xlat
sub
pop
inc
push
adc
dec
mov
int3
data16
enter
xor
sbb
push
jb
cld
cld
sahf
mov
ja
xor
fistps
jno
add
les
inc
or
out
mov
sub
insb
and
mov
nop
mov
sbb
sub
push
xchg
enter
jb
adcb
jbe
loopne
fsubl
sbb
jp
xchg
push
shlb
cli
sub
mov
cmp
stc
cmc
test
sbb
insl
jmp
and
xchg
sbb
jmp
in
jp
xchg
insb
lret
out
fninit
xchg
push
cmp
sub
sbb
addr16
shll
sbb
or
fidivrs
lret
lret
mov
or
and
enter
mov
ror
cmp
rorl
push
cmc
xchg
jle,pt
mov
sub
pop
adc
sub
jns
xchg
loope
or
mov
adc
pop
cmp
sbb
fildll
cmp
out
dec
sti
loope
cmpb
mov
mov
ret
jmp
scas
stos
ljmp
xchg
add
jno
add
outsb
test
aam
or
cmp
add
xchg
lahf
movsb
repnz
insl
adc
mov
insb
sbb
inc
mov
ret
pushf
mov
aas
sub
je
mov
fs
and
data16
out
add
icebp
jge
add
ja
pusha
outsb
das
sub
cld
xchg
cwtl
clc
push
sub
lds
icebp
or
test
fdivr
push
mov
or
ret
xor
in
mov
movsb
jl
int
addr16
and
into
sub
out
shll
rcrl
enter
jmp
pop
adc
push
cmpsb
add
mov
add
mov
std
or
xchg
jnp
pushf
outsl
data16
hlt
adc
push
bnd
pop
decl
add
adc
sahf
jge
inc
inc
das
cmp
xchg
pop
mov
loop
xchg
cs
and
mov
and
adc
in
out
in
lea
das
in
add
sti
add
jg
xchg
dec
lods
push
jp
push
mov
out
and
hlt
xchg
dec
xchg
cmp
cmp
jno
xor
loop
bound
xor
int
jg
push
daa
jb
scas
lea
aad
adc
mov
outsl
jl
pushf
dec
xchg
icebp
sbb
inc
ficoms
addr16
dec
xchg
rclb
sub
loop
bound
das
sbb
jnp
stos
xor
adc
mov
outsb
inc
sub
daa
adc
jne
pop
push
gs
pop
xchg
lcall
movsl
imul
cmpb
shl
dec
out
int3
sbb
or
sbb
xchg
outsl
arpl
push
addr16
mov
aam
adc
outsb
pop
outsl
sub
repnz
pushf
add
add
scas
push
push
cmpsb
or
jp
add
stc
dec
js
lret
push
sub
jl
jl
stos
push
push
leave
sub
xchg
fildll
loopne
jne
cmp
dec
inc
dec
inc
dec
and
sbb
xchg
or
iret
dec
out
insb
pop
dec
aam
pop
mov
xchg
daa
lock
add
gs
les
mov
outsb
into
xchg
mov
xor
dec
cmp
xchg
or
mov
pop
scas
mov
xor
inc
pop
xor
push
mov
mov
ficompl
sbbb
lret
lret
mov
hlt
es
sub
test
cmc
fisubs
dec
jno
jl
mov
jnp
inc
dec
insb
pop
popf
dec
add
idivl
add
arpl
shll
dec
hlt
stc
lock
ds
or
lcall
mov
mov
gs
mov
dec
cmc
push
iret
dec
xor
stos
pop
test
gs
inc
stos
faddl
adc
dec
dec
pop
test
stos
ss
mov
sti
lret
pop
dec
loope
push
dec
inc
mov
jg
sbb
add
add
jge
imul
fdivl
out
test
xchg
mov
sbb
add
leave
cmc
sahf
in
sub
cld
cmp
clc
push
mov
jp
imul
into
loopne
mov
xchg
fs
mov
and
sbb
pop
insl
iret
fcomi
lret
xchg
stos
xlat
push
shlb
imul
pop
push
mov
popa
sub
sbb
sbb
fldt
pop
imul
pop
rcrb
sbb
in
int3
scas
lods
notb
leave
adc
iret
ja
xor
jmp
mov
push
aas
lea
inc
int
fmul
or
xor
hlt
loopne
push
mul
mov
ret
insb
push
dec
int
jmp
mov
dec
and
lds
out
push
adc
mov
pop
xor
xlat
in
iret
test
jne
sbb
add
cmp
imull
fyl2xp1
out
mov
jbe
out
dec
dec
adc
scas
leave
aad
les
add
pop
jecxz
xor
adc
fisttps
mov
in
jle
push
rclb
jp
gs
clc
sbb
jl
add
enter
cmpb
pop
rcr
jl
mov
je
pop
pop
sub
xor
or
rol
jb
mov
push
mov
mov
movsb
cli
or
jbe
push
sarl
adc
lods
stos
fildll
xchg
pop
sub
mov
and
jb
leave
mov
or
test
mov
clc
mov
or
dec
add
lods
flds
lret
cwtl
or
orl
data16
fdivrl
addr16
adc
call
pop
xchg
sbb
sub
repnz
pop
out
rcr
pop
cmp
sbb
aaa
mov
lods
ja
jmp
push
scas
mov
dec
popa
sbb
in
push
push
mov
or
dec
jno
loopne
xor
jne
ret
lea
mov
dec
jnp
clc
and
sub
out
repz
push
cmp
push
inc
imul
xor
pushf
lods
or
push
sub
fsubl
xor
adcb
mov
out
dec
mov
cmp
hlt
jo
scas
add
lret
adc
jge
jae
xor
adcb
bound
pop
sub
int3
bound
daa
add
roll
push
xor
cmpb
lret
call
ljmp
out
jo
call
ret
cmp
jmp
lock
addl
dec
ret
cli
inc
out
pop
fmull
push
imul
and
sbb
mov
jnp
xor
xchg
sbb
outsl
fldl
xor
iret
stos
sub
test
fldcw
inc
xor
rcr
aad
aad
xchg
or
sti
sbb
sbb
imul
aam
sbb
lods
cltd
lods
fs
aaa
test
int3
sub
pop
gs
stos
shlb
popa
add
into
dec
mov
mov
dec
sahf
xor
dec
xchg
addr16
sbb
mov
jmp
add
aaa
xchg
lcall
std
outsl
out
dec
loop
push
add
fsts
mov
mov
sbb
into
add
inc
sub
insb
jp
cld
or
call
add
iret
dec
and
sbb
fimuls
ret
divl
push
inc
cmp
pop
fdivrl
xchg
mov
push
xchg
jbe
pushf
mov
ret
push
push
shlb
imul
push
push
lret
pop
rcl
lret
sbb
or
xchg
ret
in
out
ds
dec
cmp
rolb
gs
clc
aam
xchg
cld
jbe
repnz
and
rdmsr
add
test
inc
add
lock
cld
mov
sub
insl
outsl
mov
cmp
ss
cmpsb
je
dec
in
ss
in
adc
pop
jbe
ds
mov
sbb
out
dec
int3
inc
jmp
cs
lret
or
push
nop
mov
or
jo
xor
nop
out
sub
pop
push
sub
mov
in
aad
jbe
cmp
shl
repnz
and
jmp
test
or
imul
sti
lcall
sbb
out
sub
sbb
jo
xor
xchg
int3
xchg
mov
or
push
xor
xlat
dec
cmp
xor
pushf
sbb
mov
jg
adcl
movsb
rep
outsl
in
add
cmp
lret
ds
jp
sbb
sbb
sbbl
sbb
in
ja
cmp
xchg
mov
les
inc
fstps
adc
loop
dec
push
push
cmp
mov
jg
pop
lods
or
cmp
xor
addl
jbe
test
xchg
add
cmp
fisubl
xchg
or
lock
pusha
sbb
sbb
inc
ret
clc
mov
jno
and
arpl
shl
adc
dec
nop
pop
das
es
pop
push
or
int
js
aam
hlt
shrb
ss
mov
mov
arpl
jg
sbb
add
xor
call
aam
adc
dec
inc
inc
inc
icebp
sub
mov
arpl
dec
imul
shrl
imul
jl
js
jmp
fs
add
jg
ljmp
cmp
dec
cmp
ss
sub
mov
aam
adcb
hlt
xor
les
and
cld
out
add
movsl
shll
es
pop
fnsave
aam
dec
notl
orl
scas
std
dec
dec
test
xor
dec
notl
lock
mov
mov
sub
pop
push
or
ss
mov
roll
out
mov
fadd
push
jmp
sub
popa
lods
ficoml
xchg
mov
movsb
sub
push
cmpsb
fldt
add
push
data16
or
fcmovne
mov
mov
push
aad
je
mov
sti
mov
in
push
out
enter
fsubs
adc
hlt
mov
sub
pop
aaa
inc
mov
jg
cwtl
into
pop
leave
lret
int3
ror
jp
lcall
sub
sbb
fisttpll
jns
sbb
ror
out
subb
sub
push
in
adc
mov
push
lds
xchg
adc
imul
fstpl
cs
out
inc
xchg
pop
sbb
fs
pop
push
inc
enter
outsb
push
jge
jno
dec
jmp
inc
mov
mov
fists
in
data16
stos
sub
aam
mov
ficoml
sub
and
pop
mov
add
mov
adc
loope
hlt
out
mov
lret
xlat
sbb
scas
pushf
sub
icebp
mov
loop
sbb
mov
call
clc
or
mov
xlat
pop
push
out
mov
dec
or
mov
inc
mov
pushf
sub
jns
pushf
dec
or
inc
inc
mov
ljmp
ja
pop
mov
push
outsl
rol
sbb
notl
hlt
out
dec
jp
sub
fcomps
mov
ss
icebp
das
or
or
jb
test
dec
rcrl
or
vsqrtsd
fcoms
icebp
in
adc
loop
enter
ret
and
dec
pushf
stos
enter
sbb
popa
jo
arpl
xchg
mov
pop
out
xchg
adc
call
push
or
insb
or
in
and
sub
xor
add
dec
or
sub
mov
pop
ds
int3
cmp
mov
test
out
test
sub
mov
js
pop
pop
jbe
push
cwtl
fcoml
outsl
pop
push
aam
testb
mov
cmpsb
orl
enter
insb
and
add
stos
xor
pop
xor
dec
out
mov
clc
pop
dec
add
and
inc
adc
out
test
sub
cli
xchg
aad
sub
lea
push
sbb
jge
outsl
test
xor
dec
push
jl
add
jno
testl
cwtl
enter
iret
mov
inc
pop
add
xchg
lahf
loopne
test
int3
jle
popf
mov
jae
pop
fsts
and
hlt
test
sbb
inc
call
adc
inc
cmpb
cmpsb
lock
out
lret
and
hlt
jne
xor
sbb
out
loop
cli
pop
icebp
and
jge
cmc
repz
jno
sbb
sbb
inc
iret
pop
jecxz
add
std
fldcw
out
adc
popa
pop
and
je
lock
rcr
icebp
or
stc
cmpsb
int
dec
popa
push
jne
addr16
lret
mov
in
push
inc
sub
pusha
loop
push
out
push
mov
sbb
pop
pop
jo
jp
cmp
shl
and
cwtl
cld
pusha
movsl
lods
push
dec
shlb
sbb
clc
pushf
imul
into
ret
xchg
xor
push
xchg
pop
ljmp
dec
push
mov
sbb
dec
loop
jge
out
les
ret
insl
sbb
push
sbb
pop
sub
shll
in
adc
dec
adc
in
outsb
loopne
xor
push
insb
pop
push
xchg
icebp
fistl
adc
mov
gs
push
loope
adc
aas
and
aad
idiv
in
test
ljmp
movsb
movsl
sub
scas
in
xchg
add
jns
addr16
push
inc
push
out
mull
iret
or
mov
sub
iret
sub
lods
shrl
sub
pop
pop
out
sub
out
push
jge
sub
inc
xlat
or
pushf
mov
inc
addr16
sub
push
jp
aad
mul
insl
mov
lods
clc
sub
into
inc
cli
push
lock
enter
mov
mov
push
imul
fcoms
les
jmp
add
addr16
int3
int3
out
loop
sub
sahf
sub
inc
cmp
aam
jle
pop
stos
adc
pop
and
and
cmp
test
test
mov
sti
pop
and
mov
dec
outsb
lret
sbb
mov
jns
push
aad
push
jge
int
inc
jb
rcr
jb
push
xor
repnz
mov
xchg
push
sti
cmc
shr
and
leave
mov
cs
fldcw
jae
cli
jns
imul
aam
hlt
not
jne
pop
outsb
js
mov
or
add
pop
enter
aas
pushf
jne
mov
inc
lcall
xchg
sbb
fsubl
shll
cli
roll
xor
repnz
bound
lret
dec
les
shr
jne
aam
jmp
outsb
and
shrb
in
cli
add
dec
sbb
mov
lret
outsb
fwait
mov
decb
xchg
sub
mov
decb
jmp
sub
setbe
mov
psraw
adc
add
std
push
push
inc
aaa
xchg
pushf
cmc
mov
push
out
dec
fildl
daa
mov
and
sub
cltd
add
cmp
imul
iret
fidivrl
xchg
inc
sub
adc
mov
stos
rclb
lahf
add
lret
inc
sqrtps
leave
mov
adc
jle
leave
in
fistpll
pop
xchg
shll
sub
and
inc
out
mov
pop
or
lds
sub
jmp
lret
sarl
cmp
jo
pop
into
push
jmp
mov
or
mov
pop
dec
loopne
addr16
jp
insb
adc
dec
ljmp
insl
es
aam
mov
or
rcrl
add
jnp
test
fdecstp
enter
dec
movsb
xchg
add
dec
or
js
test
sahf
dec
inc
shrb
hlt
jb
push
dec
outsl
pop
cmp
adc
jle
sub
data16
aad
adc
popa
sub
mov
jno
xchg
out
movsl
push
push
adc
mov
rorl
and
sub
pop
movsl
or
jp
lods
jns
cmp
movsl
mov
ja
mov
add
das
cmp
popf
and
int3
aam
imul
mov
aaa
dec
dec
fdiv
xor
adcb
jbe
jle
dec
pop
or
mov
addr16
sub
mov
pop
jb
adc
test
push
push
iret
sarb
adc
and
xor
pop
fsubrs
or
sbb
flds
hlt
mov
inc
shlb
aaa
xchg
leave
das
lret
popa
out
pop
xor
pushf
xchg
push
rcrb
mov
sbb
roll
sub
xchg
pop
aam
icebp
std
push
sti
push
fldl
dec
inc
loope
ja
fidivl
rol
fs
lds
dec
decl
dec
mov
aaa
sub
push
out
xor
pop
stos
cltd
push
iret
data16
dec
dec
pop
negb
pop
or
dec
popa
dec
jl
sub
or
mov
xchg
pushf
dec
xor
push
mov
add
jne
mov
sub
push
xchg
inc
in
fildll
push
loope
les
mov
mov
inc
sub
sahf
jne
xor
or
sub
lahf
sbb
cmpsl
pusha
mov
sbb
adc
mov
jne
lock
and
mov
or
xor
mov
push
les
mov
add
aas
xor
mov
cmp
mov
xchg
add
mov
clc
inc
mov
mov
sub
aam
cmp
jecxz
inc
cwtl
and
add
dec
adc
mov
pop
rorb
rorb
mov
out
mov
popf
or
push
inc
jo
insb
ret
add
movsl
and
sub
fistps
xchg
dec
cli
das
iret
dec
movsb
xchg
loopne
sbb
inc
imul
lret
dec
insb
leave
xor
dec
push
int3
adc
outsb
add
xchg
inc
push
into
sub
xchg
mov
call
mov
sub
in
arpl
sarb
xchg
dec
bound
sub
xchg
mov
arpl
inc
inc
loop
mov
add
jle
mov
mov
inc
mov
sub
out
dec
mov
and
out
mov
inc
dec
sbb
es
testl
push
jmp
push
add
dec
cmpsb
jb
push
pop
scas
push
mov
mov
aam
cld
rcl
push
xchg
cld
hlt
lahf
lock
or
setno
shlb
outsb
in
cmpsb
mov
aam
mov
pusha
out
je
sbb
lcall
testb
xchg
dec
xchg
jo
in
cmpsl
mov
jl
jo
lahf
call
sbb
mov
loope
adc
fstpl
loopne
cmpl
jge
shl
cli
adc
pop
or
lock
rcr
imul
adc
cmp
mov
call
test
inc
mov
xchg
adc
push
jb
fcmovne
outsb
mov
xchg
lea
jmp
push
cld
dec
cltd
test
mov
iret
push
jl
in
push
jl
xchg
inc
sub
repz
xlat
sbb
lret
mov
push
xchg
fsubp
stos
xchg
push
push
pop
pop
lcall
cs
mov
clc
aam
add
sub
cmp
shl
ljmp
inc
jns
add
clc
test
into
sub
cmp
leave
pop
dec
leave
aas
pop
adc
sbb
sbb
test
inc
push
in
nop
jno
fdiv
inc
nop
shl
mov
cmpsl
sub
dec
mov
mov
sti
push
jl
icebp
inc
cmc
jg
insl
sub
sub
jo,pn
setbe
loope
out
pop
lret
fisubl
push
sbb
popf
pop
adc
push
icebp
out
aad
fsub
aas
inc
sar
cmpsb
out
test
nop
fistpll
xor
leave
je
nop
int
sub
or
jle
dec
cmc
mov
mov
popa
test
jbe
jo
xor
cmp
fmulp
push
bound
jp
push
jns
fmuls
dec
iret
jb
call
call
ja
cltd
mov
out
mov
pop
lock
push
push
and
out
hlt
jnp
aad
scas
push
sbb
push
test
mov
ret
cs
push
iret
lret
or
xlat
sbb
adc
mov
cmp
or
fsubrl
cmp
shll
lods
inc
cld
cli
and
jns
pop
subl
sbb
test
scas
sbb
inc
push
das
and
sbb
in
or
loope
movsb
out
dec
jp
dec
shlb
dec
mov
stos
ficomps
sbb
inc
mov
cmp
clc
js
cli
lcall
mov
pop
mov
xchg
ljmp
test
jge
aas
mov
std
aas
pop
adc
out
movq
lret
loopne
xchg
add
mov
push
fcompl
jns
in
ret
test
push
shll
xchg
push
pushf
cmp
add
mov
or
mov
aam
push
fdivs
js
or
out
adc
cmp
imul
push
imull
daa
xor
dec
pop
dec
hlt
push
enter
pop
mov
xor
call
xor
rcrb
icebp
jle
std
js
scas
cmovo
lcall
bound
daa
adc
out
fstps
or
push
xchg
int3
pop
movsl
out
mov
jle
mov
es
mov
ja
imul
dec
dec
loope
xchg
sub
push
pusha
bound
mov
xor
sbb
arpl
jp
xchg
popa
xchg
roll
or
gs
ljmp
push
pop
pop
idiv
repz
push
adc
mov
push
cmp
psubsw
es
sbb
imul
es
pop
lcall
inc
scas
push
mov
mov
jno
xor
xchg
in
cmp
outsl
mov
pop
fnstsw
fimuls
mov
inc
add
lret
xor
mov
mov
dec
lcall
or
mov
ret
dec
dec
push
pop
aad
push
outsl
adc
add
dec
mov
outsb
fs
mov
cmp
add
mov
add
sahf
fsub
test
xchg
jle
cmp
es
pusha
push
mov
sub
daa
xor
sub
cmp
cmp
clc
cmp
shlb
call
pop
mov
rclb
mov
mov
jnp
out
xchg
orl
insl
outsl
xor
cld
sub
test
in
ss
or
pusha
jb
testb
cmp
pop
or
shl
dec
ljmp
shlb
mov
dec
lds
icebp
popf
push
movsb
icebp
push
hlt
lahf
sub
add
and
pushf
xchg
lret
jo
aad
out
cmp
hlt
xorl
movsb
push
jmp
dec
xchg
imul
out
xchg
pop
mov
in
movsl
lods
outsl
sbb
dec
jo
nop
ds
xlat
shlb
loope
push
sbb
stos
fisubl
sbbl
sub
pop
push
out
push
aaa
test
cmpsb
fisttps
mov
mov
jmp
fisubs
aad
out
idivb
cmp
pop
outsl
lahf
add
arpl
push
in
ret
sub
lret
in
pop
ret
pop
xor
shll
test
xlat
retw
inc
jnp
shlb
int3
cli
mov
cmp
jecxz
and
sbb
jne
jp
mov
pushf
jmp
scas
pop
outsl
lcall
adc
fldcw
loope
push
call
rclb
sub
push
xlat
enter
sub
xor
loop
insb
push
dec
out
sbb
push
sub
or
mov
jmp
cmpsb
push
adc
stos
mov
push
pop
leave
mov
sub
pop
ficomps
clc
adc
insl
icebp
xorl
cld
inc
int3
sti
fwait
popf
mov
fimull
push
sti
and
cli
arpl
out
mov
xor
push
cmp
in
sbb
es
rorb
lds
sbb
aam
stos
sahf
cli
scas
mov
stos
or
lahf
loopne
ret
or
sbb
mov
adc
fldl2t
sbb
std
loope
fldenv
pop
lods
bound
dec
cmp
popa
js
pop
cmpl
or
adc
xchg
push
ret
outsb
and
je
nop
dec
lea
sub
test
inc
adc
cmp
shlb
xor
adc
cmc
loop
and
test
test
adc
std
stos
imul
add
jle
push
push
add
dec
popa
rcll
pushf
sbb
fstps
or
jmp
cmp
ficoml
fwait
xor
and
push
movsl
sarb
jnp
push
out
push
add
cli
mov
fs
sbb
mov
je
mov
jge
xor
lahf
mov
lret
xor
push
enter
and
imul
repnz
mov
and
outsl
mov
insl
dec
gs
xchg
xchg
int3
cmpsl
cli
jle
mov
adc
xchg
outsl
jle
cmp
ret
mov
mov
cli
cmpsb
push
sbb
test
aas
dec
mov
loop
aas
xlat
or
loop
pop
in
test
out
ret
outsb
inc
hlt
mov
xchg
jmp
and
arpl
sbb
fstpt
ljmp
add
xor
icebp
mov
jne
je
push
outsb
mov
xchg
negl
jo
fistl
or
sub
into
or
mov
aas
pop
call
dec
jg
into
aad
xchg
add
inc
ss
xor
dec
sti
sub
jnp
repz
mov
adc
xlat
inc
adc
xor
negb
stos
pop
loope
pop
aaa
mov
push
ss
cmp
out
mov
jecxz
fwait
push
aam
sarb
cmp
sub
mov
sub
test
push
fsts
xorb
clc
aad
fildll
in
ret
sub
xchg
mov
mov
test
add
aad
jg
cmp
cmp
adc
es
cmp
jo
sub
sahf
push
cmp
xor
mov
in
and
es
cmp
insb
ljmp
xchg
out
sub
pop
stc
je
fsub
hlt
psraw
sub
push
mov
xor
inc
dec
and
out
mov
or
add
repnz
outsb
mov
and
sub
inc
cwtl
dec
test
movsl
aaa
mov
xor
lcall
push
xor
in
cmpsb
jnp
mov
nop
xor
mov
fcoms
jno
pop
enter
pop
out
or
sar
imul
cmp
ljmp
mov
lods
out
xchg
mov
outsb
icebp
stc
and
fwait
xor
mov
hlt
cmc
mov
sub
push
cli
cmp
stos
sub
movsl
hlt
sub
cltd
das
inc
dec
cmc
outsl
jmp
into
pop
ficompl
mov
and
dec
inc
sub
cmp
aaa
add
stos
mov
fwait
lods
xor
pop
dec
pop
andb
jl
dec
cli
lods
dec
aas
or
test
add
pop
outsl
aam
pop
daa
sub
repnz
popa
in
mov
push
or
inc
repz
mov
push
ds
ljmp
js
lods
inc
adc
lods
mov
jne
shr
pop
inc
daa
in
gs
adc
mov
clc
test
sbb
ss
and
stos
jmp
repz
jmp
add
mov
ret
fmull
add
fnstenv
push
cmc
mov
outsb
pop
call
fmul
pushf
jae
stc
and
lds
inc
rolb
aas
cmp
dec
push
mov
idivb
push
push
push
xchg
call
les
xchg
mov
enter
cmp
cld
stos
lcall
in
push
test
pop
aaa
xor
mov
out
xor
pop
pop
shl
outsb
add
int3
aaa
fdiv
sub
loope
push
popf
or
mov
das
mov
sub
nop
cmp
add
bound
cmp
pusha
xchg
sbb
dec
xchg
mov
mov
push
enter
aas
dec
cli
lcall
clc
xchg
xor
aas
adc
bound
pop
mov
into
lock
add
and
pop
stos
rcl
mov
les
in
pop
mov
jno
inc
xor
in
pop
cmp
das
fxch
xor
dec
hlt
jl
shl
or
addr16
lds
cwtl
mov
imul
fnsave
into
and
fs
and
xor
xorl
add
xchg
xlat
or
sbb
std
outsb
lock
push
inc
and
sub
dec
mov
or
rclb
outsb
cld
push
mov
in
ds
int
call
dec
add
push
int3
hlt
sarl
cld
mov
rcrl
test
sbb
cli
call
sub
clc
movsl
xor
stos
push
repnz
aas
imul
ret
das
push
cli
dec
int
mov
or
xor
loop
pop
xor
jne,pt
fs
test
aad
js
std
dec
mov
stos
movsl
push
dec
jecxz
sbb
int3
inc
fstps
lret
mov
sbbb
sbb
dec
lcall
fs
popa
shlb
add
js
aad
inc
sub
sbb
inc
xor
mov
loopne
add
add
mov
mov
cmc
dec
das
push
psrlw
stc
inc
arpl
cltd
xor
push
mov
cmp
adc
jno
sbb
pop
je
mov
rolb
cmp
out
out
jo
mov
inc
or
loope
repz
test
adc
iret
push
fs
push
daa
fs
lods
stc
push
xor
out
mov
gs
push
xchg
jg
xchg
mov
repnz
or
inc
xor
and
call
repnz
inc
inc
les
fwait
stos
jmp
and
mov
incl
sub
push
popa
pop
cmp
add
aas
test
jmp
add
jl
mov
xchg
enter
adc
repz
mov
icebp
xchg
jne
repz
pop
outsl
dec
and
repz
stc
int3
imul
pop
jge
pop
add
pop
mov
gs
xor
push
pop
mov
test
cld
ret
int3
outsl
xor
fsubrl
push
jmp
inc
mov
push
dec
scas
inc
inc
xor
arpl
push
inc
cmp
daa
adc
push
mov
push
pop
push
iret
and
xor
clc
sahf
and
pmaddwd
jmp
imul
mov
push
imul
jl
push
xchg
stos
cs
mov
sub
mov
daa
dec
loop
jnp
fisttps
stos
stos
xor
imul
pop
mov
mov
push
inc
dec
pop
sub
jns
je
mov
dec
dec
cmp
push
cmpsb
mov
mov
lret
mov
push
push
push
pop
dec
push
and
inc
int
xchg
lcall
fisttps
push
xorb
maxps
out
outsl
jne
mov
xchg
outsl
shr
out
movsb
jno
jne
shll
stos
dec
jmp
cmp
sti
fimuls
ja
xchg
scas
dec
dec
push
push
shll
dec
push
cwtl
push
das
test
lret
inc
xchg
dec
fists
mov
mov
lahf
or
hlt
dec
stc
dec
xor
pop
cmpsl
push
xchg
gs
push
push
push
push
mov
idiv
jns
push
xlat
xor
jb
mov
mov
push
pop
jl
cmp
icebp
inc
inc
add
add
dec
cmpsl
lods
jns
stos
pop
pop
or
out
dec
pop
imul
pop
dec
cmp
adc
je
add
pop
push
dec
push
pop
mov
out
pop
fmull
push
inc
add
push
inc
pop
and
enter
mov
rol
lret
sub
enter
nop
jl
pop
sub
les
lret
int3
xlat
shlb
aam
repnz
stos
in
loopne
sbb
icebp
and
sbb
add
sbb
test
mov
dec
cmp
bound
pop
adc
mov
xchg
pop
std
add
lods
cmp
inc
cmp
push
rclb
test
scas
arpl
stos
or
in
das
mov
ljmp
aas
fs
add
mov
push
mov
push
flds
jl
hlt
stc
shll
sbb
adc
and
fidivl
cmp
inc
js
in
lret
and
push
mov
xor
sti
fcomi
idiv
push
fs
cmp
ret
and
cmp
ds
pop
fmul
daa
mov
daa
cld
enter
repz
out
push
mov
and
ljmp
xlat
js
sbb
dec
into
insl
cmp
pop
add
xor
scas
dec
orb
bound
xchg
sub
push
in
mov
loope
ds
rorl
xchg
xchg
out
es
push
jecxz
out
stc
cmp
test
aad
jo
mov
jnp
fdivs
enter
add
mov
fs
xor
and
xchg
add
push
mov
sub
sub
shrb
pop
mov
nop
mov
cmpsl
push
or
repz
test
xor
es
bound
mov
sub
dec
mov
inc
cmp
push
adc
sub
cmp
mov
cmp
repnz
js
mov
sub
test
popa
dec
test
scas
les
outsb
ja
lea
mov
push
rdpmc
es
int
jle
je
into
jo
psubusw
test
into
pop
or
sahf
sub
pop
mov
xchg
mov
mov
adc
dec
testb
cmp
out
cld
ds
sti
push
add
dec
and
pop
movsl
push
int3
jo
dec
jns
dec
imul
cmp
dec
lcall
out
lret
push
inc
aas
jb
mov
cmp
lcall
aas
sbb
add
pop
push
cmp
sub
jl
inc
test
in
lahf
stos
movsb
fs
inc
jle
dec
or
test
mov
dec
ljmp
pop
jecxz
mov
mov
mov
fimull
or
sbb
es
dec
add
adc
sti
cmpsb
pop
inc
jae
sbb
mov
pop
cmpsl
call
es
dec
and
nop
jns
enter
stos
adc
fimuls
mov
or
sub
fisttps
cmpsb
sbb
or
cmp
dec
xchg
aam
mov
sbb
fs
iret
es
dec
and
inc
jb
add
outsb
mov
mov
loop
test
cmp
bound
sub
add
sbb
sbbb
pop
pop
cmpsb
clc
in
leave
cltd
dec
movl
dec
and
ds
call
std
add
push
enter
stos
xchg
mov
mov
jne
push
test
lods
sbb
push
mov
insb
add
xor
xchg
inc
fs
or
mov
orl
inc
sub
inc
je
push
sub
lea
popa
aad
mov
push
ret
cwtl
jo
mov
jno
xchg
xchg
lock
jbe
sub
popf
mov
mov
pop
rorl
aas
sub
mov
xchg
or
fdivp
hlt
in
test
pop
rcrb
lock
dec
xlat
add
aad
inc
xchg
enter
lds
xchg
aam
inc
dec
jl
movsl
std
sub
push
stos
repz
xor
jnp
cmp
and
shlb
xchg
mov
out
dec
ja
pop
aad
arpl
stos
clc
cmp
ss
cs
bound
dec
jns
xchg
ljmp
pop
pop
and
and
lock
sbb
pop
adc
dec
lcall
leave
stos
dec
push
sub
hlt
and
jg
push
xchg
jmp
inc
in
pop
xchg
mov
ljmp
das
sub
pop
push
xchg
sub
test
and
mov
pop
sub
adcb
jmp
push
push
mov
in
add
imul
imull
loopne
mov
sbb
sub
fidivrs
aad
sub
dec
imul
movsl
adc
daa
xchg
pop
sbbl
fmull
sbb
test
jo
daa
fwait
out
mov
and
inc
add
xchg
mov
and
and
xchg
add
int3
lods
insl
inc
adc
pusha
mov
push
ja
xchg
and
notl
stos
dec
divps
movsl
xor
iret
stos
movsb
dec
cs
popf
iret
xchg
fsubl
jmp
pop
leave
mov
cmc
rclb
push
aaa
enter
mov
push
push
inc
cwtl
pop
pop
inc
push
loopne
aas
lcall
cmpsl
or
sbb
aad
jo
jmp
inc
or
jge
pusha
test
rorl
subl
cltd
mov
mov
dec
cwtl
mov
sarl
push
mov
test
cli
adc
lock
cmpsb
insl
loop
mov
push
dec
hlt
mov
jp
nop
mov
xchg
xor
addr16
shll
pop
loopne
addr16
hlt
decb
je
test
enter
or
and
stos
xchg
cld
push
sbb
mov
imul
gs
lods
or
push
repz
dec
push
loope
test
inc
xchg
repz
xor
mov
enter
cmp
rcll
push
cmp
or
repnz
stos
dec
mov
cmp
mov
aad
rcrb
andb
dec
mov
or
xchg
push
inc
xlat
lcall
cmp
push
js
lret
cmpsl
jbe
cmc
inc
push
mov
inc
pusha
push
cmp
pop
hlt
call
xor
and
push
xor
pop
fsubl
icebp
fnstcw
addr16
push
add
cmpsb
push
add
cs
sbb
ljmp
push
sub
push
pop
stc
pop
add
jne
and
xchg
push
les
add
or
gs
add
jbe
aaa
adc
push
inc
mov
jg
lea
pop
fs
inc
insb
hlt
data16
adc
mov
sub
je
inc
in
mov
loop
faddl
test
jmp
add
xor
mov
lret
lods
push
out
and
ds
mov
lahf
fdivl
orl
xchg
in
jle
lcall
jl
out
sahf
mov
sub
and
or
cmp
sarb
inc
mov
stos
cmpsl
shlb
cmp
push
stos
in
push
push
mov
push
push
test
mov
iret
add
and
pusha
gs
in
pop
imul
es
jne
or
jle
cmp
adc
lret
dec
pop
and
mov
push
push
pushf
in
dec
lea
aam
enter
dec
sub
lret
dec
lds
repnz
sbb
rorb
add
xor
insb
pusha
jbe
pusha
enter
aaa
je
in
inc
outsb
add
mov
mov
push
dec
mov
lds
mov
sub
push
push
mov
xchg
incl
popa
daa
sub
stos
mov
pop
cltd
dec
insb
clc
pushl
int3
pop
daa
sub
push
loope
jnp
sub
and
lods
mov
lea
push
test
cltd
sub
arpl
sub
push
aam
fistl
pop
mov
out
pop
cld
fwait
into
fsubrl
lahf
inc
loope
push
inc
bound
push
stos
or
sbb
mov
outsb
pop
jnp
fldl
cmpb
loope
cmp
and
loop
xchg
loope
push
xchg
inc
andb
inc
lock
daa
pop
in
out
cmp
out
dec
sub
sahf
jnp
std
adc
test
mov
push
mov
pop
ds
scas
xor
add
je
push
inc
lcallw
dec
mov
rcr
lods
decb
cltd
add
test
or
push
aas
jp
sub
insl
xor
and
push
xchg
cmp
sub
or
add
dec
and
andl
mov
pushf
dec
loope
aad
push
xchg
es
cmc
stc
push
sub
hlt
xchg
call
lock
push
sub
int3
jo
and
cmpsl
inc
faddl
dec
je
cltd
loop
pop
fwait
inc
je
mov
js
sub
adcb
pop
mov
test
ret
div
inc
in
cmp
sub
inc
lds
pop
mov
aad
in
sbb
mov
pusha
add
stos
ss
stos
mov
es
jg
push
fsubrp
xchg
dec
cwtl
movsl
fs
test
cltd
jae
mov
xor
sti
mov
inc
loope
pushf
and
or
movsl
add
fbld
xor
xchg
test
and
mov
ljmp
jp
test
outsb
daa
add
lds
es
loopne
hlt
ret
and
push
pop
cmp
mov
dec
add
movl
gs
nop
int3
hlt
testw
es
stos
mov
inc
xlat
mov
mov
insb
imull
jbe
inc
call
in
adc
out
mov
jecxz
loopne
popl
insb
out
adc
out
cmp
addb
mov
mov
fs
dec
sub
and
gs
cmp
push
inc
shl
inc
mov
nop
bound
sub
adc
or
hlt
aad
int3
int
adc
inc
xchg
ja
lret
mov
inc
add
push
jmp
mov
xchg
jmp
cli
into
addl
jmp
out
jge
cmp
fs
push
inc
pop
inc
jg
into
sub
test
test
nop
sbb
clc
outsl
cs
loope
stc
jb
inc
data16
cs
push
add
pop
xchg
out
pusha
out
inc
cmp
push
int
movsl
sbb
dec
testb
les
xor
shll
stos
dec
icebp
sti
je
or
sub
pop
mov
push
mov
arpl
add
push
into
xor
xchg
enter
cwtl
insb
xor
jl
push
push
sub
inc
dec
mov
nop
push
inc
inc
pop
pop
xor
and
fsubl
jbe
and
pusha
into
jnp
stc
test
push
add
cmp
push
sbb
mov
scas
mov
fs
jbe
jmp
inc
pop
cmp
dec
ffree
jge
lcall
mov
xchg
movsl
call
mov
and
add
leave
call
insl
inc
aad
mov
mov
sahf
jnp
pop
dec
bound
cmp
jecxz
mov
dec
popf
ret
push
pop
bound
or
xor
leave
test
popf
clc
jl
mov
sbb
dec
xor
lea
cmpsl
jle
mov
lds
xchg
mov
and
clc
push
addr16
push
dec
movsb
adc
jne
subb
lock
jecxz
xor
jle
push
dec
insl
ljmp
enter
fbstp
rorb
mov
jno
add
stos
cmp
test
outsb
cwtl
mov
test
fs
dec
or
jb
test
ret
mov
inc
sbb
fildl
mov
adc
sbb
add
xchg
std
pop
sbbl
cmpl
lahf
add
mov
mov
push
push
fldl
lcall
imul
sarb
addr16
out
adc
jno
sbb
xchg
push
add
scas
cmp
dec
push
arpl
add
push
adc
pop
aam
xchg
lcall
xchg
pop
rolb
rolb
lahf
jg
lods
hlt
mov
out
loope
mov
adc
fst
rcl
xor
mov
jmp
inc
adc
mov
dec
cld
outsl
ss
aaa
sbb
fsubl
andb
dec
insb
daa
repz
bound
add
push
sti
scas
lcall
and
loop
test
mov
adc
adc
push
rcll
out
stos
adc
pop
mov
hlt
pop
push
jb
add
or
dec
addr16
scas
in
test
fldl
out
mov
ss
sub
cmp
push
mov
cmp
and
cmpsl
mov
add
lea
push
addr16
cmc
sbb
iret
push
mov
rcll
std
test
sub
out
push
cmpb
dec
sbbl
addb
mov
fwait
daa
jl
xchg
add
movb
hlt
add
mov
cmp
into
sbb
xchg
lret
hlt
sbb
push
push
nop
xchg
test
out
loope
leave
enter
jns
or
leave
das
test
imul
jmp
xor
imul
enter
rcrb
or
mov
fisubs
arpl
loopne
xchg
xorb
adcb
dec
jmp
pusha
add
pop
addr16
xchg
inc
lea
or
and
xor
stos
sbb
std
inc
fsubrs
cltd
dec
fdiv
mov
jb
adc
mov
xor
dec
std
push
js
dec
pop
idivb
scas
add
inc
mov
insb
jmp
loope
pushf
dec
mov
outsb
iret
outsb
jo
loope
mov
mov
sub
insb
addr16
push
jno
push
in
pop
xchg
in
pop
stos
ret
pop
mov
sub
out
pop
sub
out
dec
or
and
shrb
xchg
jbe
mov
adc
imul
xor
and
jb
xor
xlat
push
pop
bound
daa
imul
pop
loopne
or
pop
nop
test
repz
fisubrs
aad
out
dec
rclb
mov
dec
and
hlt
shr
inc
dec
or
icebp
rolb
leave
cmp
orl
in
pop
xchg
lods
js
mov
mov
imul
jae
negb
cmp
cld
stos
repnz
fisubrl
jecxz
xchg
xorl
daa
lret
mov
xor
fsub
jmp
or
dec
pushf
fs
sub
lods
test
popa
lods
das
adc
shr
dec
xor
push
nop
scas
notl
xor
lret
mov
aaa
fdivl
dec
adc
aaa
lret
inc
adc
or
inc
rcrb
cld
dec
loopne
clc
pop
pmuludq
icebp
pop
nop
test
icebp
stos
push
call
sub
pop
enter
insb
or
lahf
sbb
or
sub
mov
divl
test
jno
adc
adcl
iret
fwait
push
push
mov
addb
sbb
xchg
in
cmp
es
jecxz
add
lea
call
mov
test
lods
or
test
inc
xor
pop
push
out
stos
mov
dec
stos
aad
icebp
fisubrl
adc
and
cmp
hlt
push
cmp
andl
jb
jg
ffree
jo
cli
sub
add
pop
rorb
mov
das
fnstsw
push
in
lret
push
lea
add
xlat
inc
or
lods
scas
dec
shlb
es
jg
aam
pop
stos
movsb
add
es
stos
repz
pop
call
mov
je
sub
dec
js
cmp
cmp
lcall
adc
mull
inc
mov
and
dec
mov
mov
jmp
xlat
insb
jg
xchg
aaa
jecxz
test
mov
testl
mov
orb
in
sub
scas
push
cmp
push
ja
xor
aaa
nop
jge
add
push
pop
imul
movzbl
nop
sarl
nop
xchg
mov
jmp
sub
and
or
stos
xor
outsb
jg
xor
pusha
mov
and
sub
cmp
mov
jmp
push
pop
fucomi
sbb
add
arpl
insl
sbb
pop
add
out
dec
or
mov
fnsave
jnp
dec
adc
insl
jb
enter
nop
frstor
ds
loop
pusha
add
test
repz
add
nop
enter
push
idivl
dec
sub
add
push
mov
fsubl
mov
jne
add
nop
xor
jle
rorl
aam
fs
cld
test
fstps
push
adc
add
or
or
add
arpl
shrl
lret
jno
xor
test
or
pop
subl
insb
decl
fs
clc
pop
mov
inc
lcall
push
adc
inc
add
shlb
push
cmp
mov
insb
mov
add
sahf
cmp
push
pop
jb
repz
sbb
rol
jge
mov
clc
stos
sahf
je
mov
and
sti
into
push
lods
sbb
pop
dec
push
cmp
or
stc
scas
mov
aad
ja
cmp
cmp
sbb
iret
jb
mov
jmp
stc
iret
jno
and
dec
das
mov
sbb
into
pop
pusha
lea
push
cltd
in
lods
jb
out
cmp
jmp
jge
enter
and
test
mov
sbb
popa
sbb
popa
jcxz
filds
ret
cmpsb
mov
int
shrb
xor
outsl
mov
shrb
pop
test
mov
or
xchg
ljmp
jge
in
push
add
bound
in
dec
jge
enter
fsubrs
push
aad
push
push
adc
aam
inc
cmp
loopne
xchg
push
and
jnp
clc
popf
xchg
outsb
add
aas
mov
pop
jl
ja
mov
data16
addr16
adc
sbb
xchg
dec
adc
fwait
mov
mov
sub
and
fidivs
subl
ffree
add
or
pushf
mov
leave
mov
jo
inc
add
add
xor
mov
out
mov
int3
pop
push
push
fnstenv
xor
out
insb
outsl
testl
mov
push
or
push
test
sub
mov
mov
lock
mov
popf
xchg
out
xchg
jno
cmp
stos
pop
adc
shll
mov
pop
int
cli
and
xor
xchg
cs
mov
iret
cltd
imul
int3
pop
and
stc
inc
jp
xor
imul
shlb
and
mov
out
mov
sub
inc
clc
in
push
mov
test
adc
loopne
data16
mov
and
push
push
dec
pop
loope
add
les
sub
push
cmp
cmp
and
pop
loop
cmpsb
fcompl
push
loop
shll
cli
es
add
pusha
inc
lret
and
movsb
jp
sub
mov
xchg
or
and
data16
subl
rorb
or
push
insb
repz
add
xchg
mov
fisttpll
in
jb
mov
fidivrs
aaa
jnp
test
lods
loop
ds
cwtl
inc
push
sub
push
mov
push
push
and
test
pop
jae
sub
dec
or
lds
and
mov
and
outsl
nop
add
addr16
xchg
sub
daa
jge
mov
enter
adc
inc
xchg
inc
in
and
push
dec
adc
push
mov
and
pop
xor
xor
lret
gs
and
unpcklps
xchg
mov
lods
mov
lret
repz
dec
aad
imulb
mov
inc
lods
xchg
lock
push
ja
xor
or
inc
out
leave
mov
xchg
pusha
imul
and
popa
jmp
or
cmc
cmp
or
jb
dec
leave
push
ficoms
dec
and
addr16
das
dec
cwtl
pop
xchg
ret
jbe
and
jge
inc
lds
pop
sarl
ljmp
je
cmpsl
dec
adc
push
lds
mov
add
and
mov
movb
mov
jne
iret
scas
lahf
mov
adc
outsl
xchg
loope
jg
hlt
and
xchg
imul
jno
ret
insl
xor
inc
nop
and
cs
jno
in
push
out
pop
cmpsb
add
cld
je
in
and
in
insl
cs
push
pop
push
icebp
test
and
sahf
lret
insl
pop
push
je
xor
in
jecxz
xchg
dec
mov
clc
sub
mov
scas
dec
dec
adc
insl
cltd
idivb
int3
and
out
pop
cld
sub
outsb
mov
iret
xor
sbb
sub
test
rorl
jle
dec
cld
pop
pop
into
mov
stos
and
push
sbb
push
adc
leave
or
push
jmp
lods
ljmp
enter
cmp
clc
data16
aad
mov
bound
dec
pop
xor
push
mov
jg
sbb
fs
leave
fidivrs
or
scas
xlat
sahf
loope
sbb
push
jl
jo
int3
test
sub
mov
hlt
or
clc
das
sub
sbb
cld
ja
sbb
inc
cmp
movsl
xchg
adc
daa
movntps
imul
pavgb
sbb
xchg
enter
pusha
clc
xchg
in
cmp
nop
xchg
xor
push
sbb
arpl
mov
fwait
lahf
push
push
mov
js
xor
js
ret
pusha
sub
mov
inc
pop
pop
repnz
adc
push
pusha
clc
imul
add
in
mov
cmp
cli
pop
nop
and
jg
push
enter
loop
aad
jns
cld
mov
pop
insl
lret
fs
pop
mov
push
sbb
test
sbb
inc
push
push
cltd
gs
push
outsl
xchg
xchg
xor
notb
xor
dec
pusha
jns
xor
mov
fiadds
jmp
adc
sub
lea
push
push
out
adc
loope
push
ss
sbb
push
pop
pop
sahf
and
dec
loopne
gs
clc
arpl
xor
jnp
cmp
sub
and
in
rorb
push
sub
mov
shlb
xor
or
mov
jecxz
inc
push
leave
sbb
mov
outsl
rorb
xchg
pop
lcall
xchg
jo
les
hlt
push
imul
or
shrb
mov
sbb
jbe
imul
call
and
pusha
inc
cmovns
lds
inc
ret
dec
test
int
push
aaa
fwait
loop
ja
pusha
xchg
pop
sub
ja
decb
aaa
adc
dec
push
push
cmp
dec
insb
mov
xor
mov
xchg
inc
in
add
mov
rcll
sbb
mov
iret
int
call
push
mov
push
std
or
adc
xchg
cmp
pop
sbb
and
cmp
out
inc
out
jo
or
faddl
xor
daa
xor
mov
pop
leave
xor
dec
sbb
jl
aaa
jle
mov
mov
aaa
test
gs
outsl
push
or
sbb
xchg
jmp
hlt
dec
movsb
hlt
fs
out
out
lahf
mov
popa
xchg
sub
je
int3
fsubl
call
test
xor
adc
imul
ja
push
and
aad
jp
and
dec
push
nop
and
or
pop
jno
or
mov
jno
mov
roll
push
pushf
sub
inc
jne
lcall
inc
add
pop
pop
jmp
mov
outsb
add
xchg
psubusb
xchg
dec
rep
clc
stos
leave
dec
mov
sub
enter
xor
cmc
pop
aad
sahf
rclb
lcall
or
fsubs
sti
rcr
lods
or
mov
inc
jo
lea
or
or
ret
insl
aaa
stos
and
int
and
insb
push
ficoms
mov
cmpsl
pop
cwtl
ljmp
jbe
imul
stos
adc
decb
cmp
push
push
insb
cmp
dec
add
sbb
xchg
xchg
sbb
nop
ret
xor
in
es
dec
sbb
mov
das
paddusw
sub
sbb
inc
pop
sub
fiaddl
out
gs
fnstcw
jo
xchg
jnp
adc
outsb
add
sub
and
sbb
adc
mov
cmp
fwait
xchg
int
pop
lahf
push
je
insb
nop
xchg
push
add
sbb
popa
mov
loop
mov
jmp
insl
xor
aad
fsubs
imull
nop
add
mov
sarb
mov
gs
mov
push
add
std
mov
or
inc
add
outsl
mov
aam
ficompl
or
insl
jne
mov
fiaddl
mov
dec
sbb
lods
movsl
push
cmp
aam
scas
sub
adc
repz
sbb
call
or
cli
xchg
or
rep
aad
stc
lret
int
test
cs
dec
mov
lods
pop
mov
dec
mov
sbb
je
mov
cltd
outsl
xor
test
pushf
es
mov
add
outsb
fdivrl
push
das
pop
daa
cmp
popf
into
push
clc
imul
and
loopne
cs
xor
popf
mov
adc
inc
in
push
push
subl
adc
fisttpll
pop
mov
clc
divb
xchg
or
test
xchg
aam
lahf
jb
push
cmp
pop
push
out
loopne
inc
ljmp
rorb
addr16
enter
into
hlt
sub
cwtl
add
pop
push
nop
dec
mov
mov
push
fidivrs
jmp
push
add
xchg
dec
sub
xor
dec
adc
fidivs
xor
call
out
mov
daa
sahf
dec
bound
adcb
mov
mov
jmp
or
mulb
cmpxchg
sbb
push
pop
outsb
and
mov
and
mov
ljmp
out
gs
cwtl
int3
sub
test
xor
scas
jecxz
dec
sub
ret
jno
pop
pop
jmp
scas
jecxz
jbe
mov
mov
shr
inc
sub
cmp
add
out
pop
jns
adc
pop
push
rolb
fprem
les
mov
fdivrs
push
div
dec
push
push
addr16
ds
in
adc
pop
sub
adc
imull
sbb
lret
dec
hlt
cs
cmc
adc
cmpb
cmp
daa
inc
or
mov
dec
push
xor
dec
stos
and
xor
movsl
ret
mov
add
int3
and
mov
loopne
test
repz
hlt
stos
mov
movsl
fmuls
stos
cltd
xchg
xchg
addr16
pop
dec
xlat
mov
adc
call
pop
mov
cmpsb
xor
and
int3
mov
aad
push
imul
or
xor
ljmp
sbb
mov
popfw
test
pop
cmp
insb
idivb
scas
sbb
xchg
test
and
xor
das
push
mov
fldenv
sub
daa
dec
push
mov
push
dec
jecxz
imul
cmc
push
test
out
lahf
cmp
arpl
inc
outsb
in
subl
cmp
cltd
sub
std
gs
and
adc
orl
sbb
sbb
in
pop
sub
lcall
addl
mov
ss
loope
fs
cwtl
push
pop
test
ljmp
dec
popw
xor
xchg
sub
add
push
xor
mov
add
stos
insb
xorb
inc
mov
add
inc
sub
sub
add
scas
inc
lret
cli
aas
fwait
sub
nop
ljmp
push
addr16
jo
out
add
loop
jbe
rcrb
jae
das
sbb
cmpsl
adc
movb
mov
dec
adc
jbe
xor
pop
nop
popa
add
fs
out
pop
push
loope
in
inc
lods
pop
pop
add
mov
pop
add
enter
outsl
or
or
jecxz
adc
mulb
inc
out
pop
pop
pop
dec
dec
das
fisttpll
scas
popl
out
fcmovnu
xlat
dec
cwtl
data16
aad
jbe
mov
mov
and
scas
xchg
les
aas
lock
fiaddl
sub
popw
and
in
loop
dec
xor
ret
movsl
sub
sbb
sti
mov
or
popa
imul
jg
mov
sub
pop
xor
addb
fists
xor
and
out
lods
loope
outsb
in
outsb
in
mov
pop
or
mulb
push
dec
addr16
ret
lret
enter
jle
xor
cmc
dec
xchg
xchg
cltd
inc
and
sub
xor
lds
cltd
dec
bound
pop
add
dec
cmp
out
scas
add
dec
sbb
pop
movsb
test
xchg
xchg
sub
push
mov
pop
das
dec
lock
stos
sbb
xchg
lret
fs
popf
sti
mov
sub
sbb
leave
sti
lret
push
aas
imul
pop
je
clc
mov
loop
fs
mov
repnz
mov
push
dec
jbe
add
adcl
pusha
imul
jp
dec
mov
iret
cld
mov
push
cli
pop
dec
add
fs
and
mov
fisttpll
mov
int
jmp
cmp
pop
mov
xchg
inc
push
mov
push
mov
pop
mov
push
mov
ss
out
push
push
xchg
dec
insb
push
mov
push
or
jae
leave
push
jbe
pop
rorb
call
insb
dec
and
ret
and
nopl
push
dec
adc
pop
int
cs
sub
pop
sbb
jle
pop
out
xor
flds
push
out
or
mov
mov
jp
push
ds
insl
adc
pusha
push
stos
push
or
enter
out
clc
enter
push
outsb
jl
hlt
sbb
jns
push
and
jno
cmp
mov
fcom
aaa
dec
fnsave
mov
mov
adc
fdivl
sub
in
push
jecxz
pop
push
push
mov
jecxz
adc
xchg
leave
adc
jne
rol
fisubs
xchg
mov
into
hlt
fcmovbe
mov
xlat
mov
sub
leave
pop
loop
enter
sub
in
cli
lcall
lret
sub
pop
jae
dec
inc
jae
fmull
mov
hlt
pop
push
daa
orl
jp
insb
dec
sbb
pop
mov
and
js
dec
in
ret
sbb
adc
test
ja
outsb
pop
adc
mov
clc
shlb
fs
xlat
jmp
mov
stos
adc
inc
pop
lods
jl
notl
lock
push
pop
adc
mov
mov
fmuls
leave
js
push
test
lret
jo
mov
enter
xor
pop
icebp
push
mov
sbb
and
sbbb
pop
adc
je
pusha
mov
pop
mov
xchg
popa
push
ficoml
xchg
pop
movsl
in
repz
sub
jl
fucom
jns
jge
test
xchg
push
add
clc
cmp
aas
xchg
ret
mov
iret
in
inc
dec
xor
repz
adc
lods
inc
out
fcomi
mov
mov
cmp
push
add
bound
add
hlt
cmp
or
add
into
push
sbb
lods
sub
rcll
int3
push
and
repnz
testl
outsl
inc
test
and
daa
lret
test
inc
push
mov
xchg
test
and
xor
sbb
cmc
push
jnp
xchg
cltd
push
shlb
call
loopne
movsl
push
arpl
je
rorl
or
cmpsb
pop
rcrl
mov
scas
jae
cmp
xchg
icebp
xchg
bswap
push
das
testl
push
enter
mov
jp
mov
aam
mov
dec
ror
test
inc
ss
push
and
bound
test
hlt
push
mov
iret
dec
inc
sub
dec
jb
es
cs
adc
mov
nop
xor
jno
or
push
xchg
add
das
lret
xor
imul
pop
pop
add
rorb
sub
add
repnz
decb
in
adc
pop
jno
loope
pusha
push
cmp
lret
test
jnp
xchg
mov
lcall
cmp
icebp
sbb
andb
pop
int
mov
adc
add
jno
jbe
mov
xor
call
mov
push
adc
xor
into
lret
aad
test
iret
insb
or
xor
mov
jecxz
pushf
ret
pop
pop
iret
add
aad
es
repz
jmp
mov
rorl
add
les
inc
pushf
lret
cs
out
pop
jmp
push
shlb
addl
pop
mov
test
inc
shrb
or
movsb
lods
pop
shlb
sbb
lret
mov
dec
fs
adc
cmc
lret
data16
jne
push
ljmp
add
psubd
ret
xchg
sub
sbb
pop
mov
xor
adc
jno
out
pop
aaa
xchg
rcr
adc
sub
fs
in
fs
cwtl
jmp
push
pop
shll
incl
cld
test
enter
cwtl
or
mov
or
push
dec
sbb
fstl
mov
into
or
pop
enter
pop
or
xchg
mov
daa
adc
clc
dec
and
stos
jmp
add
add
test
pop
cmc
dec
out
and
pop
test
mov
add
add
push
mov
shrl
xchg
mov
test
jecxz
mov
outsl
cmp
push
xchg
les
scas
sbb
or
daa
push
call
iret
pop
inc
xor
sbb
test
add
mov
xlat
or
in
sub
push
jmp
ljmp
cmc
enter
dec
popf
xchg
sbb
stos
dec
call
inc
in
cwtl
rclb
push
push
js
cmpl
mov
jb
dec
lea
jae
cmc
jb
pop
add
enter
int3
idivb
push
xchg
cmpsl
divps
mov
ja
mov
jns
fstl
dec
nop
adc
pop
insl
cltd
outsb
xor
cltd
sbb
aam
popl
cmp
dec
mov
aas
out
mov
ret
pop
out
imul
daa
xchg
push
mov
xchg
sub
mov
or
mov
mov
fs
ficompl
lock
and
push
sbb
dec
stos
dec
lret
sub
push
mov
xchg
loop
and
daa
neg
mov
out
lret
mov
or
cmp
cltd
dec
adc
xor
sub
imul
pop
inc
movzbl
push
jge
add
push
int
push
mov
fsubr
sub
call
fs
jae
out
outsb
ficoml
pop
dec
or
fimull
dec
cmp
xchg
inc
into
inc
fldl
pop
int
inc
lods
ds
add
and
mov
test
cmp
cmp
or
dec
lock
or
or
and
fstpt
sbb
dec
and
push
jg
add
sarb
push
call
xchg
ret
aam
orb
sbb
fstpl
leave
dec
cwtl
pop
leave
xchg
shlb
icebp
sbb
xor
inc
jno
and
mov
dec
pop
push
fldl
orb
inc
cld
add
data16
aas
gs
sbb
in
push
mov
pop
inc
in
stos
dec
sbb
sub
jno
and
xor
dec
rcll
gs
fsubrl
mov
pop
dec
sub
or
lods
jle
xchg
or
jp
mov
or
fwait
mov
sub
dec
pop
sbb
adc
push
roll
and
push
hlt
es
imul
dec
jno
cmp
mov
dec
test
and
xchg
mov
or
or
inc
cmpsb
fcmovu
push
ja
sub
push
jge
loop
popf
data16
dec
out
xchg
jns
in
or
faddl
add
lahf
and
and
ret
stos
mov
adc
xchg
lcall
xlat
and
insb
dec
test
or
add
rclb
stos
inc
leave
or
xlat
jns
sub
mov
roll
test
jb
sub
inc
bnd
inc
or
aas
adc
lods
test
jp
es
inc
stc
mov
arpl
inc
adc
dec
icebp
aas
mov
mov
sub
imul
in
daa
pop
add
test
push
ss
jl
loopne
jmp
andl
pop
mov
adc
lods
add
dec
xchg
int3
aam
and
ljmp
sub
imul
loopne
sbbb
gs
adc
sub
mov
clc
add
test
incl
popa
pop
push
mov
fnstsw
jne
mov
pop
dec
addr16
mov
pusha
sub
sahf
add
mov
aas
iret
mov
push
jno
xor
pop
push
or
flds
add
lahf
sbb
aas
add
lahf
pop
insb
jmp
xor
or
mov
in
inc
push
add
scas
sarb
fs
stos
sub
cmp
adc
int3
outsb
xchg
sub
mov
adc
dec
pop
out
iret
and
enter
add
leave
aad
sub
push
pop
aaa
leave
sbb
jmp
into
fdivrl
pop
outsl
cmc
jne
jno
pop
and
es
cmpsl
inc
mov
pop
gs
call
insb
pushf
out
les
add
and
cmp
push
cmp
test
add
ret
lret
jp
orl
sti
mov
sub
addr16
outsb
inc
gs
test
rolb
shlb
enter
fwait
movsl
adc
xchg
mov
inc
sub
es
sti
xchg
sar
xor
subl
cmpl
add
cmc
subl
dec
idivl
aas
rorb
enter
imul
cmpsl
fldl
inc
scas
addb
pop
push
lcall
int3
adc
loop
mov
sbb
scas
mov
out
lret
push
dec
cli
push
fsubrl
ja
int3
jmp
in
pop
mov
aam
scas
inc
int3
ror
xchg
mov
xchg
aam
call
inc
or
mov
sbb
lds
push
movb
mov
mov
testb
mov
nop
insb
mov
xchg
iret
sbb
nop
xchg
push
mov
loope
shlb
push
es
sbbb
push
jg
mov
dec
addb
sub
adc
aas
call
pop
fucomp
xchg
jmp
aad
dec
and
mov
pop
insb
mov
mov
test
mov
jnp
inc
mov
mov
stos
arpl
iret
test
mov
jl
movsb
inc
adc
jge
mov
sub
in
jl
jg
sub
add
jle
pop
xchg
adc
and
enter
push
stos
and
mov
inc
mov
inc
xor
mov
cltd
les
cmp
pushl
xor
imul
pop
mov
sub
lock
jno
mov
fmull
and
cmpsb
sub
jp
cmc
xchg
fisubrs
inc
test
adc
les
sbb
lock
jg
mov
mov
mov
clc
and
pop
mov
testb
movsb
psrlw
dec
mov
out
mov
dec
clc
divb
loopne
int3
mov
lret
gs
jp
fidivs
jge
sbb
push
add
out
in
inc
push
mov
or
inc
push
or
lret
lahf
mov
dec
dec
icebp
sub
mov
sbb
push
outsb
adc
xchg
insl
add
sub
rolb
jo
ljmp
and
dec
dec
dec
mov
xchg
lret
fldt
imul
inc
adc
test
pop
jae
push
in
dec
test
mov
fmuls
jge
addl
shufps
or
mov
adc
pop
sub
in
and
pop
outsb
mov
call
adcb
xor
outsb
mov
cmp
bound
sbb
or
and
or
dec
mov
xchg
push
loop
mov
out
push
pop
push
push
sub
out
lods
aas
adc
push
shll
ret
sub
and
cmp
sbb
sub
sub
jl
stos
lock
in
cmc
mov
push
lock
mulb
daa
mov
push
inc
or
mov
insb
out
popa
mov
shrb
lret
dec
int3
pop
in
aas
sbb
jmp
pop
inc
xchg
mov
or
mov
iret
ss
cmc
xchg
sbb
in
sbb
pop
and
mov
sub
jb
cmp
or
cltd
iret
roll
mov
cmpsb
jne
jmp
int
rol
jne
or
xor
cmp
test
and
rorb
and
xor
sbb
jg
jmp
iret
and
into
add
std
into
push
sahf
std
ror
movsb
popa
mov
push
popf
outsb
test
or
fildl
out
adc
mov
lcall
dec
push
fbld
sub
shll
cld
pop
aaa
arpl
and
mov
push
les
lods
shrl
add
aas
jno
push
sbb
lock
imul
mov
ljmp
pop
loop
pop
or
fs
push
roll
cmpl
in
mov
push
push
jecxz
test
arpl
pop
aas
popf
data16
or
push
sub
addb
mov
sub
jmp
and
mull
push
sub
rorl
into
push
test
es
int3
imul
addb
push
xchg
sbbb
sbb
scas
cmc
dec
sub
dec
mov
loopne
mov
cli
in
in
mov
clc
bound
stos
push
jmp
hlt
jo
inc
sti
int
sub
scas
mov
mov
push
test
push
pop
adc
pop
jle
lret
dec
add
ds
test
sbb
sahf
push
cmp
mov
cmp
sbb
dec
jle
dec
jle
fs
mov
dec
dec
fwait
inc
dec
insb
mov
sub
int3
push
adcb
push
sbb
cltd
fisubrs
dec
das
in
dec
in
push
inc
test
adc
add
pop
out
xchg
jge
shl
lea
mov
fmuls
xchg
into
push
inc
fisubrl
jp
push
jl
in
stos
clc
mov
fsubr
stc
das
inc
imull
mov
xor
and
fstps
repnz
std
shlb
in
add
jae
xor
mov
call
inc
add
cmpsb
into
fmuls
enter
fdiv
dec
adc
sbb
adc
dec
xchg
mov
inc
push
mov
dec
fs
mov
jnp
jecxz
adc
push
push
rcrl
inc
shlb
xor
mov
sbb
sti
push
sbb
mov
xchg
pop
dec
insl
push
lods
iret
push
rol
xchg
les
mov
adc
or
xchg
dec
push
pop
stos
into
adcl
or
mov
fildll
inc
in
cmpb
jae
dec
or
or
or
adc
or
mov
push
mov
push
test
push
ret
pop
fsubs
test
ret
and
or
mov
imul
in
pop
pop
mov
add
pop
adc
icebp
cld
mov
inc
lods
fistps
jmp
pop
daa
sar
xor
push
sbb
mov
imul
inc
and
xchg
insl
xchg
xchg
lods
sub
jno
lret
adc
and
sub
or
dec
cmp
sub
inc
push
insl
jg
jmp
mov
pop
aas
push
push
dec
ret
sbb
jno
inc
jg
sbb
es
mov
mov
aaa
into
cmpb
jmp
jle
fldlg2
xlat
jl
es
pop
lret
cmp
push
jae
repz
push
mov
test
push
xabort
inc
push
fstpt
ret
scas
cmpsb
xor
jmp
jno
adc
or
inc
insl
test
sbb
pop
and
xchg
into
out
xchg
ljmp
fwait
adc
mov
mov
add
mov
dec
or
mov
daa
adc
sub
ds
mov
push
pushl
lods
push
xor
dec
aas
pop
jge
out
fbld
push
mov
jecxz
push
or
push
and
push
fmulp
nop
cmp
inc
and
mov
add
aaa
inc
addr16
fs
adc
fidivl
jecxz
cmpsl
xchg
cs
push
mov
idiv
lret
int3
adc
sub
gs
call
daa
arpl
stos
ljmp
dec
stc
jb
int3
incl
cmp
dec
xchg
mov
or
test
int
fsubl
cli
test
cmp
mov
test
push
xchg
imul
mov
xchg
incb
and
into
push
mov
sarb
pandn
rol
scas
mov
in
cmp
test
mov
lds
loopne
add
cmc
cmpsb
addr16
or
sbb
shlb
dec
aas
inc
push
jae
mov
cmp
jg
mov
jnp
lahf
inc
int3
subb
jo
pop
out
pop
dec
rcr
lods
shlb
sbb
loop
repnz
lret
ljmp
cmc
dec
dec
inc
sbb
inc
sub
jb
ljmp
mov
pop
sbb
lret
imul
popf
rcll
enter
cwtl
cs
rclb
test
or
push
shll
into
push
leave
mov
or
xor
inc
jne
dec
cwtl
test
adc
push
pop
pop
fsubp
jbe
mov
mov
mov
hlt
mov
shl
cmpsl
cmp
rcll
sub
dec
cs
inc
mov
lret
jns
or
mov
sbb
jge
inc
push
and
out
scas
adc
int
jle
mov
and
mov
and
lret
outsb
fsubrs
jle
imul
imul
xchg
sub
test
jnp
das
fs
inc
lods
xor
daa
stos
ret
pop
loope
dec
mov
cmc
push
fisttpll
ficomps
imul
mov
xchg
xchg
rorl
inc
cmp
int3
insb
dec
mov
jecxz
test
stos
mov
mov
mov
int
ja
stos
lret
sbb
add
cmp
dec
mov
mov
cltd
outsb
mov
in
popa
push
sub
ja
sub
adc
test
sbb
aas
sub
or
repz
mov
mov
in
mov
out
stc
sti
adc
mov
lds
mov
arpl
cmpsb
jo
sti
jg
cmc
inc
test
lods
adc
loopne
call
popa
or
jb
out
subb
aaa
adc
ficomps
sbb
inc
outsb
fiaddl
add
or
adc
lods
stos
xchg
leave
xchg
jae
add
jne
stos
dec
jno
gs
stos
loope
mov
jg
xor
insb
mov
ljmp
adc
scas
pop
inc
xchg
xchg
invlpg
jne
jns
fcmovnb
fisubrs
dec
hlt
push
aam
data16
jne
or
push
aam
imul
cmp
add
sub
mov
sbb
mov
push
or
lods
add
repz
icebp
push
adc
inc
jnp
xor
call
sbb
pop
addb
sbb
leave
mov
or
cmp
das
inc
jae
sbb
rclb
xor
stos
repnz
arpl
rclb
les
inc
push
cltd
cmpl
sub
dec
lahf
pop
xor
xchg
inc
cltd
mov
in
lret
push
cs
inc
imul
dec
movsl
repz
inc
cmp
fs
and
pop
aam
lcall
cmp
push
jno
add
push
shlb
push
stos
jne
or
out
push
lods
ss
dec
sub
or
cltd
add
mov
push
dec
fsubrs
push
inc
pusha
jle
mov
cmpsl
xchg
jnp
out
cmp
xor
mov
daa
mov
arpl
sub
and
popf
outsl
stos
jecxz
dec
and
loop
in
and
xor
xor
inc
mov
les
adc
pusha
fdivs
imulb
xlat
subl
movsl
loope
cmc
and
mov
orl
inc
push
jmp
mov
hlt
cld
sub
imul
inc
sbb
loop
std
sub
jmp
stos
lcall
std
mov
flds
cmp
icebp
xor
pushf
push
push
nop
push
scas
pop
mov
leave
repz
orl
push
adc
adc
in
mov
pop
dec
jecxz
lret
xchg
sub
cmp
mov
ljmp
mov
je
mov
mov
push
aad
and
and
pop
mov
rol
cmp
outsb
lea
xor
cmp
scas
int3
cltd
fmuls
pop
es
mov
nop
mov
pop
or
test
sub
mov
cmp
xchg
gs
or
push
loop
inc
cs
loop
cmp
jnp
add
int3
mov
pop
adc
cli
sub
adc
xor
arpl
testb
or
lods
xor
jmp
and
adc
cwtl
xchg
or
rorb
ja
adc
hlt
icebp
daa
lcall
cmp
push
mov
mov
and
scas
or
orl
or
mov
inc
dec
in
je
dec
xchg
jo
test
xlat
decl
sub
adc
add
adc
sub
lret
add
xor
mov
es
pop
arpl
cli
add
loopne,pn
imul
inc
arpl
ljmp
es
ds
fildl
push
loopne
es
sub
add
or
lcall
leave
xchg
or
out
adc
int
or
out
aaa
shll
xor
cmc
xor
aad
es
arpl
filds
loopne,pt
pusha
es
arpl
adc
fstpl
adc
pop
cmp
packuswb
je
into
sub
xorl
inc
or
dec
xchg
pop
mov
gs
ret
outsb
cmpsb
jns
std
test
dec
jmp
insb
sbb
pop
mov
mov
fs
sbb
pop
stc
fcompl
arpl
dec
push
sub
push
inc
cmc
dec
icebp
outsb
lods
popf
gs
xacquire
jle
add
mov
inc
xchg
mov
out
addr16
pop
fcompl
cmp
mov
out
sbb
add
xchg
popf
jecxz
mov
insb
push
mov
rorb
push
jo
adc
push
fcmovu
dec
inc
adc
jmp
iret
call
dec
push
or
int3
repz
fidivs
mov
js
jno
sub
adc
call
pop
out
ret
add
cmp
push
dec
aam
xchg
mov
inc
add
shrb
push
ds
cmp
mov
jae
mov
add
shl
sbb
loopne
ljmp
mov
mov
and
int3
aaa
pop
or
xchg
cs
rorl
sti
sub
xchg
pop
fcmovb
inc
jne
pop
cmp
inc
in
imul
inc
jmp
out
cli
ret
push
out
push
mov
test
xchg
jge
jmp
xchg
movsb
xlat
ljmp
pop
test
pop
sub
cmc
ds
stos
mov
cli
movsl
aam
pop
push
dec
cmc
in
sub
push
adc
push
mov
jmp
lods
dec
shl
push
test
je
mov
xchg
pop
add
lea
pop
mov
shlb
addl
dec
dec
lret
hlt
cltd
xchg
push
pop
xchg
cli
in
xchg
mov
cmp
inc
sub
scas
mov
inc
pop
dec
bnd
dec
and
pop
jno
ljmp
les
aad
inc
dec
aad
mov
pop
into
push
inc
mov
xlat
add
cmpsl
repnz
out
sbb
lret
cld
add
in
mov
cmpsl
inc
push
ret
movsb
cld
fmuls
xchg
fnstsw
jae
mov
out
das
push
mov
ds
popl
nop
neg
shlb
mov
adc
xlat
shll
iret
adc
ss
imul
adc
jmp
subl
pop
inc
test
repnz
into
push
addr16
mov
push
cld
aaa
leave
loop
nop
jmp
jle
loop
out
push
rcr
stc
notl
or
fldcw
xor
pop
adc
mov
push
je
cwtl
push
addr16
daa
cmp
xchg
icebp
push
sbbl
dec
xchg
mov
jns
jp,pt
dec
in
inc
imul
ret
pop
push
mov
insb
inc
or
mov
mov
dec
inc
lret
lock
dec
loopne
addr16
repz
pop
sub
lret
test
ret
mov
cli
sahf
sub
dec
notl
adc
out
pop
jbe
adc
dec
popa
mov
andb
jmp
or
mov
sahf
pusha
push
dec
in
dec
inc
mov
sub
pop
testb
lret
fst
jae
xlat
lock
das
ljmp
ret
xchg
repnz
lock
jns
pop
adc
pop
push
lods
mov
test
out
stos
or
data16
inc
jne
test
cwtl
push
push
jo
add
xchg
jecxz
fcoml
movsl
lahf
shr
lret
popf
cwtl
dec
mov
jno
sar
fstl
bound
mov
lret
pop
add
push
test
test
rorl
xor
loopne
adc
mov
movsl
je
fbstp
mov
dec
pop
push
jp
imul
cmpsb
cwtl
sarb
jo
std
jne
push
inc
sbb
shlb
cld
rcpps
icebp
stos
stos
pop
cmc
ficomps
scas
out
ljmp
cltd
psubsb
aad
xchg
sub
mov
lock
int3
sbb
out
inc
add
fidivs
inc
fidivrl
mov
cld
xchg
fs
add
aaa
ret
daa
div
movsl
hlt
jge
sbb
ss
push
sbb
cmpsb
into
fwait
sbbl
xchg
sub
cltd
add
call
in
movsl
or
data16
push
sbb
xor
sub
lods
and
hlt
int3
lcall
push
inc
adc
xor
dec
ljmp
cli
mov
mov
dec
and
xchg
sbb
fidivs
aam
stos
mov
outsb
add
outsl
push
mov
pop
or
addr16
pop
mov
ss
push
stc
popf
std
mov
popf
adc
shll
lods
scas
hlt
daa
xor
cld
loope
vpmacsswd
fcmovne
ss
outsl
idivl
shr
sbb
in
jge
test
test
dec
or
movsb
pop
push
pop
inc
daa
sti
pop
clc
loop
xchg
fsubrs
int3
addr16
les
lods
addr16
mov
es
popf
push
hlt
adc
xchg
or
test
pop
dec
outsb
int3
and
fists
pop
add
or
bound
enter
jo
and
push
pop
pop
ret
je
fmul
fmuls
cmp
ror
sub
mov
mov
inc
push
jle
jecxz
push
sbbl
repnz
mov
fwait
inc
jg
xchg
aas
add
dec
xchg
hlt
imul
and
mov
daa
fisttpl
xchg
jo
imul
sbb
pop
inc
into
cmp
stos
mov
mov
jo
mov
pop
pop
jmp
push
fdivl
and
rcll
lcall
inc
pop
push
mov
inc
or
pop
dec
xchg
cmpsl
mov
scas
sub
shll
icebp
lock
pushf
jb
jecxz
daa
mov
test
sub
test
nop
je
frndint
push
scas
aad
js
lea
push
sbb
stos
mul
ljmp
js
pop
or
int3
and
inc
xchg
es
add
adc
jp
and
addr16
add
push
fs
out
int3
mov
jge
jb
xchg
add
jae
jl
mov
jb
notb
ds
int3
insl
int3
rcrl
stc
add
dec
in
mov
push
adc
mov
push
das
xor
dec
bnd
jbe
xor
pushf
jb
pop
dec
icebp
fldt
mov
dec
test
insl
in
or
test
movl
push
mov
cmp
push
into
out
rorb
les
dec
imul
repnz
pop
aaa
pop
add
test
jecxz
dec
outsb
and
shrb
sti
loopne
xor
lods
mov
rorl
push
xchg
sub
pop
adcl
inc
add
pop
jb
stos
shlb
ret
cltd
xchg
sbb
inc
sub
scas
push
jae
inc
push
insb
mov
xor
imull
dec
ljmp
adc
sub
pushf
leave
push
dec
xor
stc
mov
fidivs
xor
sub
pop
add
aaa
sub
insl
test
jno
push
adc
xchg
gs
mov
daa
mov
jb
popa
dec
js
sti
and
mov
fiadds
pop
fs
mov
mov
sbb
hlt
notb
fcomp
call
movsl
sbb
nop
int
je
pop
dec
jno
test
inc
inc
xor
ficomps
icebp
mov
xchg
jmp
jp
sbb
xchg
pop
mov
sarl
rcrb
popf
call
lret
inc
lsl
jnp
movsl
outsb
lret
ret
push
out
jp
pop
addb
cs
pop
sbb
add
outsl
push
jo
xor
leave
into
nop
mov
fidivrl
pop
lea
mov
push
dec
mov
inc
add
jb
fnstsw
in
adc
sub
clc
stos
cmpsb
inc
int
out
jb
pop
sbb
aaa
and
xchg
rcr
rcl
push
push
fsubl
lods
dec
insb
push
into
pop
add
dec
das
xor
xchg
sub
push
fists
xor
mov
pop
cmp
push
and
jecxz
call
shrb
popa
dec
aas
xchg
mov
repnz
push
adc
outsb
ja
int3
jae
or
sub
mov
inc
cmp
mov
aam
out
add
dec
cltd
jge
out
cmp
cmp
int3
shlb
popf
mov
ja
leave
clc
js
push
leave
cltd
mov
pop
stos
xchg
push
setle
mov
add
leave
mov
adc
stos
inc
rorl
inc
cwtl
push
lock
frstor
scas
daa
mov
and
mov
daa
cmpsl
mov
xchg
sbb
call
loope
mov
nop
fs
aam
and
inc
sbb
adc
push
pop
stos
xchg
jl
and
into
add
lret
sub
cmp
dec
and
jno
ds
or
mov
pusha
lret
jge
js
cli
mov
enter
cli
push
push
lock
cmp
jmp
or
into
jp
push
lret
in
mov
lret
mov
rcl
shrb
pop
icebp
rcl
into
push
aad
xchg
xlat
sbb
inc
add
adc
jmp
lods
sbb
xchg
pushf
outsb
and
add
loopw
les
xchg
ds
leave
in
js
shll
sti
hlt
add
or
es
mov
out
push
into
insl
mov
movaps
jg
jl
repz
testb
and
inc
ret
dec
jne
shr
dec
xor
bound
cwtl
mov
jno
fistps
sbb
mov
addr16
fisubrs
mov
dec
gs
or
out
add
xchg
fwait
in
pop
bound
add
jl
icebp
std
dec
pop
cld
cmp
addl
pop
push
int3
mov
sbb
dec
sbb
int3
mov
pop
mov
inc
out
frstor
mov
add
test
lock
nop
add
pop
lret
insl
pop
loop
xchg
add
sub
dec
seto
hlt
xabort
add
mov
js
adc
mov
xchg
shl
xchg
or
ror
or
inc
rcrl
mov
mov
pop
fwait
movsl
and
jnp
test
lahf
xchg
mov
push
mov
jo
add
or
call
out
jne
push
sbb
or
call
mov
xchg
push
mov
sub
movsl
lock
dec
lret
mov
sar
dec
or
imul
sbb
lcall
jge
stos
push
adc
xchg
idivb
xor
inc
xchg
jo
xor
mov
adc
add
mov
xchg
mov
imul
inc
or
pop
bound
out
adc
int
inc
pop
xor
cmc
out
sbb
mov
call
out
push
out
lahf
adcl
sub
imul
into
xchg
das
loop
imul
pop
imul
test
addr16
lret
leave
je
lcall
mov
test
hlt
imul
jp
cltd
xchg
loopne
aas
loope
push
aam
or
add
lock
scas
int
jb
roll
ret
pop
or
nop
out
push
aas
cmpsb
mov
push
lock
out
movsl
loope
dec
dec
cs
pop
or
jp
lock
cmpsl
mov
jl
cmpsl
movsb
sub
jge
mov
push
mov
outsb
cs
sarl
test
and
pop
rcll
lods
or
in
das
gs
cmp
sti
and
jl
stos
mov
push
lods
lea
leave
out
jecxz
cld
xchg
mov
fidivs
repnz
or
pusha
stos
xchg
out
or
mov
sbb
aad
sti
stos
call
hlt
sub
imul
adc
jmp
ds
je
push
or
mov
arpl
lret
sbbb
xchg
xor
fldenv
sbb
xchg
mov
xchg
scas
addr16
push
cmpsb
add
pushf
jb
in
mov
leave
mov
gs
jnp
ficomps
fdivl
and
mov
push
icebp
roll
push
push
jns
repnz
xchg
daa
xor
xor
pusha
sbb
inc
adc
sub
into
mov
adc
mov
testb
arpl
jne
ret
xchg
imul
push
dec
jmp
or
scas
add
shl
hlt
dec
adc
ja
iret
imul
sub
adc
ja
les
pop
xor
loope
out
mov
sti
stos
hlt
xchg
push
jae
sbbl
sti
pop
cmpsl
shll
popf
adc
loope
sti
cmpsl
rclb
fcoms
mov
pop
xchg
shrb
pop
push
dec
add
inc
add
je
mov
mov
or
test
add
cmpsb
mov
jmp
mov
cs
shlb
push
push
add
es
and
mov
stc
bound
pop
stc
add
xchg
pop
iret
das
enter
sbb
iret
data16
add
lret
or
xchg
daa
sub
mov
mov
mov
mov
fiadds
adc
push
out
loop
pop
jle
fwait
iret
repz
je
jle
shl
das
fnop
mov
lret
test
popf
inc
adc
sub
jno
and
jmp
outsb
fs
inc
pop
and
dec
jl
dec
mov
adc
jbe
push
jmp
dec
mov
pop
andl
cmp
inc
out
pop
repz
add
rolb
pop
leave
add
shr
lods
pop
lret
jne
mov
imull
ficoms
ret
shrl
fidivs
mov
loop
mov
push
mov
jnp
add
nop
cli
push
pop
pop
shlb
fisubrl
xchg
or
mov
adc
add
test
sub
mov
fisttps
jmp
rolb
xor
nop
jae
fs
lds
outsb
outsl
es
in
xchg
fisttps
inc
lret
push
push
push
jg
xchg
sbb
add
mov
out
mov
push
fwait
sbb
es
mov
and
es
adc
adc
push
push
aad
xor
lahf
icebp
dec
enter
jp
dec
pop
leave
push
ret
lahf
hlt
inc
fistl
das
push
stc
test
loop
outsb
add
cmp
add
fwait
push
fnstsw
inc
aam
movsl
ret
xchg
dec
into
int
subl
push
sub
or
lret
orb
sbb
pop
mov
cmp
jnp
push
cwtl
push
fmul
cmp
push
or
sti
cmp
mov
sub
xor
mov
jmp
mov
lods
cmp
movsb
das
dec
mov
int3
pop
push
js
lds
es
xchg
sbb
mov
out
dec
adc
inc
in
hlt
repz
repnz
sbb
aam
sbb
jl
movsb
jno
aas
loopne
mov
jnp
add
mov
sti
aam
jns
xor
dec
sbb
dec
in
xchg
add
je
imulb
ss
or
loopne
xchg
push
ucomiss
test
sti
into
dec
inc
rol
add
push
dec
jno
adc
jmp
test
xor
inc
dec
jnp
outsl
outsl
lahf
sbb
add
mov
cmp
movsb
or
or
hlt
mov
push
in
and
push
cli
neg
out
dec
pusha
enter
inc
or
cmpsb
cmpsb
iret
cmp
cmp
push
adc
mov
int
mov
clc
scas
icebp
loope
jnp
mov
aaa
sub
aam
or
cmp
test
ljmp
in
insl
adc
imul
push
pop
in
movsb
fbld
sbb
lea
inc
add
stos
lock
fidivl
xchg
imul
xor
nop
jae
fsubl
xlat
out
in
fbstp
sub
sbb
imulb
jecxz
mov
orl
cmpsl
inc
sub
cwtl
cmp
js
mov
jg,pt
dec
lds
adc
or
iret
adc
xor
mov
push
cwtl
mov
enter
test
sbb
mov
or
mov
cmp
repz
mov
int3
cwtl
rcl
xchg
dec
ja
shlb
mov
push
cmp
sbb
ret
mov
xchg
inc
push
cltd
push
add
cld
ret
loope
pop
sub
lock
dec
push
lret
push
cltd
sbb
aad
pop
es
faddl
stos
bound
jae
and
cwtl
push
ljmp
addr16
jp
add
jl
call
fists
aam
lcall
int3
xchg
pop
in
inc
xor
push
lahf
shlb
push
jecxz
adc
pop
pop
inc
js
enter
push
add
es
clc
xchg
or
push
loop
loop
sbb
aam
sub
xlat
iret
clc
stos
and
cwtl
dec
insb
ret
push
mov
xchg
xchg
and
jnp
iret
sub
jno
inc
lcall
adc
sub
sub
dec
out
mov
and
pop
daa
mov
push
into
sbb
cmp
lods
enter
movsb
dec
sbb
rorl
mov
stos
fcomp
les
test
push
xlat
pop
int
stos
out
dec
dec
cmp
gs
and
xchg
sbb
jne
cmc
scas
push
mov
sub
mov
enter
jl
repnz
shrl
into
xchg
rclb
mov
mov
xor
outsl
pusha
pop
mov
mov
imulb
fldt
test
repz
lret
scas
xchg
in
push
ljmp
and
dec
call
subl
pop
xor
aam
daa
mov
hlt
jle
aam
out
and
int3
push
and
test
xchg
lods
ss
imul
mov
lods
mov
push
not
js
sbb
cmp
dec
data16
push
stos
sub
jp
inc
in
rorb
cmp
jl
imul
test
inc
loop
rol
xchg
jg
push
mov
pop
xchg
adc
xchg
imulb
int
xor
shrl
mov
xor
add
das
mov
test
jecxz
add
jle
adcb
adc
push
iret
incb
dec
scas
movsl
pop
jb
push
and
mov
push
jbe
test
stos
adc
add
ljmp
jle
mov
pop
jbe
mov
cmc
aaa
add
fsubrp
lods
cld
mov
cmc
lahf
lcall
adc
jmp
dec
cmp
les
mov
push
mov
mov
pop
sbb
mov
push
insl
ds
xlat
mov
pop
lods
movsl
mov
cli
or
addr16
mov
pop
rcr
mov
ljmp
add
int3
movsl
pop
outsl
pop
inc
dec
xor
cmp
xchg
aas
sahf
pop
iret
mov
in
and
pop
pusha
enter
add
mov
sahf
stos
and
out
inc
mov
clc
xchg
and
mov
mov
cld
mov
sub
jp
mov
mov
sbb
iret
adc
scas
arpl
pusha
xor
add
subl
mov
movsb
inc
in
mov
jge
and
jbe
mov
pop
aas
add
xchg
mov
jp
or
cmpsb
push
rcl
pusha
sbb
push
mov
or
jmp
aaa
xchg
dec
add
push
pop
adc
loope
insb
mov
inc
int3
call
mov
or
repz
jbe
lods
outsb
sti
cs
cs
loopne
es
jb
jo
cmp
pop
stos
stos
push
push
stos
je
cld
inc
and
outsl
mov
lret
imul
dec
test
add
das
je
test
and
xchg
push
adc
imul
inc
sbb
push
outsl
push
mov
ffree
loopne
sub
push
int3
jmp
xchg
fldcw
out
mov
lret
lods
nop
cld
jmp
xchg
or
dec
jnp
ret
mov
push
add
jl
loope
mov
mov
push
es
push
pop
mov
bndstx
xor
in
sbb
lret
rolb
jle
pop
push
repz
xlat
lea
dec
dec
test
js
sbb
lods
inc
test
dec
sub
fmulp
and
jg
in
movb
mov
int3
aad
xor
adc
inc
in
out
mov
mov
je
test
xor
jnp
or
jg
mov
xchg
ljmp
insl
pop
adcl
or
pop
push
sub
add
jmp
leave
sub
je
shll
fsubrs
push
jle
push
sbb
lea
mov
xor
mov
call
in
iret
pop
outsb
cld
dec
sbb
scas
add
cld
mov
push
test
xor
dec
cltd
fwait
push
cmpsb
push
outsb
int3
insb
outsl
adc
pop
push
nop
adc
lcall
mov
nop
pop
shl
loope
insb
mov
cmc
jns
sub
cmp
inc
sub
icebp
mov
mov
adc
test
test
cld
idivl
and
pop
jnp
test
dec
cmp
shll
sbbb
cwtl
rol
loop
mov
test
push
dec
nop
mov
jns
dec
or
inc
push
test
or
mov
push
push
mov
inc
out
jecxz
fwait
push
sbb
mov
movsb
push
sub
sbb
inc
shr
loop
push
in
sbbl
jae
lds
cmp
mov
mov
or
xor
lcall
push
adc
adc
test
inc
xchg
push
push
jmp
push
xchg
clc
gs
and
sub
push
xor
push
test
lcall
adcb
test
push
xor
push
jg
jb
rorb
decl
and
pushf
or
out
sbb
push
aas
lods
pop
cmp
sub
sub
xor
ja
dec
sub
out
jecxz
or
stc
test
dec
ret
add
enter
call
andb
fs
sub
push
and
pop
sub
sub
ret
es
pop
test
adc
les
and
sub
inc
clc
lcall
idivl
fwait
movsb
pop
addr16
jns
jae
jmp
mov
sbb
into
pop
ljmp
in
push
rcrb
mov
mov
cmp
push
push
shll
or
out
sbb
mov
mov
shll
lods
cmp
stos
xchg
stos
xchg
jae
and
or
sbb
push
and
and
dec
pmuludq
jp
in
inc
or
cwtl
adc
pushf
shll
sub
pop
cmovo
sbbb
stos
into
adc
mov
shll
adc
lods
scas
fisubrs
inc
push
mov
mov
jg
jb
iret
je
test
clc
mov
mov
fidivrs
rorb
jl
inc
dec
movsb
arpl
test
xor
cmc
pop
push
jecxz
mov
out
dec
aad
push
sbb
push
arpl
or
xchg
enter
xchg
repnz
dec
fcomi
cmp
jecxz
movsl
sbb
or
dec
insb
inc
push
push
push
hlt
mov
add
xchg
gs
push
repz
jmp
sarl
dec
or
gs
mulb
iret
sub
test
loop
jns
pusha
pop
pop
imul
cmp
sub
ljmp
shrl
aaa
iret
dec
xor
xchg
loopne
push
dec
je
mov
mov
mov
mov
popf
mov
in
and
hlt
dec
sbb
add
adc
lock
pop
dec
in
push
div
mov
mov
pop
aam
or
daa
add
push
adc
leave
jg
push
cmpsl
jecxz
push
lcall
push
pop
xor
mov
iret
push
dec
jb
jo
imul
mov
inc
or
rolb
xchg
mov
cld
movsl
movsb
dec
inc
roll
adc
jp
jo
pop
aad
sahf
into
sbb
inc
hlt
push
jp
cmp
mov
add
and
and
shll
inc
iret
sti
or
mov
lret
stos
fcomi
mov
loop
jns
inc
repnz
divb
push
or
icebp
inc
mov
xor
push
sub
lock
mov
jb
orb
xchg
jecxz
push
xchg
and
sahf
or
nop
aad
dec
test
hlt
and
in
imul
inc
sub
and
pop
insl
push
lret
mull
and
loopne
pop
dec
nop
sub
jle
hlt
lret
data16
fistpl
mov
hlt
and
into
sbb
scas
pop
sub
push
jbe
enter
and
push
inc
dec
add
loop
insb
outsb
dec
mull
push
loop
jns
addb
jne
insb
fmulp
hlt
lret
fisttpl
sub
les
pop
into
sub
loopne
in
cmp
dec
adc
clc
jmp
cmpsb
shrl
mov
mov
shll
in
push
sub
pop
and
rorl
jae
aaa
mov
xor
mov
in
mov
inc
mov
fs
sub
clc
xchg
sbb
pop
insl
loope
out
arpl
pusha
dec
jle
hlt
mov
mov
mov
inc
push
adc
mov
mov
jae
fmuls
scas
inc
push
xchg
mov
subb
jp
mov
and
inc
sub
lret
mov
cwtl
jbe
sub
in
fdivrs
call
insb
xchg
xchg
int3
insb
enter
mov
sbb
push
xchg
divl
jns
cmc
bound
adc
and
add
cmp
adc
into
nop
sbb
pop
pop
cld
inc
inc
inc
je
sub
rclb
test
enter
mov
add
inc
ret
and
sub
clc
repz
adc
xchg
add
int3
sahf
mov
jl
cmpsb
cld
loopne
movsb
cmp
imul
mov
dec
aaa
pop
repz
or
movsb
lret
movsl
loope
add
mov
not
jmp
and
int
aas
imul
xlat
sbbl
add
je
mov
jecxz
bound
push
cmp
cmp
xor
mov
mov
xsaveopt
bound
push
cs
pop
pop
pop
push
out
arpl
xor
fiadds
sbb
daa
adc
xchg
sub
mov
sbb
bound
daa
sub
ljmp
jo
sub
xor
loope
jecxz
jo
loope
xchg
xchg
dec
movsb
mov
repnz
cmp
pop
jmp
dec
fs
inc
daa
aaa
iret
out
mov
xchg
xchg
leave
fstps
adc
stc
imul
iret
pop
clc
pop
mov
insb
fisttps
and
cmpsb
inc
hlt
out
sbb
jle
mov
outsl
cmp
dec
int
mov
push
jecxz
dec
imul
push
or
push
test
sbb
loopne
insl
flds
jge
loope
xor
inc
scas
out
das
or
sbb
hlt
lds
ss
icebp
call
rcrb
sub
mov
icebp
cmp
je
jg
and
insb
pop
enter
outsb
into
aaa
adc
fadds
in
stos
pop
sbb
inc
pop
xchg
call
add
insl
push
adc
popa
cmpb
inc
xchg
inc
mov
push
or
stos
in
sbb
test
add
std
mov
adc
aad
idivl
in
mov
mov
push
lds
in
mov
test
inc
mov
fs
xchg
ja
stos
movsl
push
fisttps
mov
push
clc
ret
fs
repnz
outsb
dec
inc
sbb
dec
popf
js
mov
cmc
movsb
outsb
push
in
xlat
mov
xchg
mov
test
mov
sub
dec
outsb
lahf
mov
push
inc
mov
test
add
les
insb
enter
xor
in
jecxz
rorl
rcrl
in
cmp
inc
sbbb
cmp
push
mov
lock
arpl
aad
das
cwtl
hlt
sbb
test
jne
xchg
dec
add
add
push
out
adc
xchg
xor
sti
aad
cmp
add
or
jb
and
decl
adc
xor
das
add
jge
pop
int3
xor
out
imul
pop
fstpt
hlt
dec
dec
lret
scas
loop
les
enter
ljmp
scas
sub
pop
or
add
pushf
repz
daa
add
xchg
sti
push
repnz
pop
mov
inc
mov
das
flds
pop
inc
add
sbb
iret
mov
stc
mov
sbbb
ljmp
xor
pushf
je
jae
into
into
mov
or
mov
inc
imulb
cmpsb
push
test
repnz
pop
xor
inc
cwtl
rcrb
js
mov
dec
xor
aas
jle
mov
movb
jmp
jo
lret
dec
or
cmc
mov
lahf
scas
mov
push
bound
in
cwtl
in
xchg
int
pop
push
popf
jl
pushf
jecxz
ret
fldt
or
sbb
sub
xchg
inc
hlt
test
jl
fs
repnz
jns
and
mov
mov
xor
dec
push
les
dec
xchg
addr16
sub
enter
pushf
mov
lahf
dec
imul
cmp
rorl
dec
inc
cmpsl
int
es
jbe,pt
dec
cmp
int3
test
jmp
in
aad
jae
cmp
loope
add
mov
inc
icebp
repz
outsl
push
mov
hlt
aas
xlat
aad
in
sti
mov
sbb
int
pop
idivb
pop
xchg
icebp
cltd
in
outsb
xor
aaa
das
jg
jns
mov
sub
jno
jns
cwtl
pop
inc
mov
hlt
cld
and
repz
dec
cmpsb
push
stos
xor
in
sub
ret
lret
outsb
inc
cs
push
in
adc
imul
xchg
dec
adc
pop
test
xchg
jae
add
inc
out
pop
fisttpll
mov
shlb
push
test
pop
push
cltd
mov
out
imul
dec
loopne
cli
imul
gs
and
sub
cmp
add
mov
and
nop
mov
mov
mov
xor
cmp
pop
cmp
push
hlt
ljmp
inc
xorl
sbb
popf
mov
test
mov
dec
mov
cltd
pop
call
push
ss
outsb
movsl
pop
mov
pop
xor
push
out
insl
cwtl
and
inc
sub
or
push
lahf
test
push
adc
jmp
in
dec
cwtl
nop
int
sbb
add
mov
hlt
mov
mov
fs
loope
mov
int3
dec
xchg
fwait
jle
fsubl
ljmp
cmpb
cwtl
xchg
stc
in
push
inc
mov
adc
es
push
xorl
cmc
adcl
lock
pop
inc
add
mov
hlt
aad
or
jno
mov
jbe
fcoms
shrb
push
add
sti
pusha
std
lret
mov
jns
xchg
jecxz
push
dec
lock
cmp
cmp
sbb
nop
je
add
cwtl
adc
ret
icebp
sbb
cld
mov
dec
stc
jae
test
sbb
xchg
cltd
jbe
popa
nop
mov
pop
out
mov
or
sub
push
xor
add
mov
in
les
and
push
addl
aad
aam
add
int3
push
adc
add
inc
and
daa
push
loope
cmc
mov
jle
es
mov
enter
lds
fst
shll
pop
ret
pop
xchg
lcall
xor
push
push
aaa
test
jo
xchg
mov
js
xchg
lret
fisubl
inc
inc
scas
test
push
cmp
sti
mov
aam
push
cmp
insb
arpl
sbb
fs
adc
cmpsl
pop
add
in
popf
sub
pop
out
or
out
and
xchg
mov
jne
rolb
fistpl
aas
stos
loopne
sbb
inc
xlat
fnstenv
sbb
mov
push
add
lret
out
push
sysexit
aaa
mov
stos
stos
xchg
push
dec
push
adc
int3
inc
sbb
xor
out
xor
adc
adcb
xchg
outsb
test
cmc
or
sub
cld
cli
int
loopne
in
xchg
lock
imul
jg
loop
mov
into
adc
pushf
mov
lds
sub
cmp
call
call
cld
popa
dec
add
push
sahf
gs
cmpsb
xor
rorl
in
into
mov
pop
or
adc
mov
fwait
stos
pop
mov
push
loopne
sub
or
shll
hlt
dec
inc
inc
mov
cmc
inc
gs
dec
jnp
mov
std
rcrl
cmp
ret
aaa
xor
xor
add
push
sub
insl
inc
push
rorl
js
daa
insb
fisttps
xor
sbb
and
lcall
nop
jo
int
sub
aad
jge
call
jno
outsb
mov
rorb
dec
int3
cwtl
int3
arpl
xor
enter
inc
repz
add
testb
out
push
and
repz
addl
or
hlt
adc
sahf
mov
sbb
imul
fsubr
adc
push
cmp
lea
out
xor
aam
fcoml
testb
mov
pop
push
add
jecxz
xor
or
mov
scas
mov
sub
ss
test
leave
lock
mov
into
or
lret
mov
jmp
lret
pop
sub
jae
xor
mov
adc
jecxz
notb
mov
pop
mov
and
cli
pop
mov
sbb
aam
pop
jno
or
push
push
push
int
and
add
lret
cmp
xor
sub
cmpb
xchg
faddl
inc
aad
clc
jl
adc
test
mov
pop
and
mov
mov
mov
mov
dec
inc
push
pop
dec
dec
and
and
ds
fdivrs
lea
fcoml
jle
in
pop
sub
lds
or
dec
jo,pt
test
fisubs
mov
adc
hlt
insb
sub
mov
pop
jmp
add
pop
int
js
mov
das
xor
push
add
repz
fdivl
lods
adc
adc
shr
dec
lea
adc
ficompl
push
mov
fstpt
cmp
ss
or
shlb
push
mov
in
stc
jne
ret
add
sbb
add
fistps
jecxz
imul
ficoml
loope
cmpsl
jne
and
cmp
sub
xchg
mov
push
lret
cmp
dec
or
mov
sbb
pusha
test
dec
push
rorl
add
mov
hlt
out
pop
cmpsl
cltd
psrld
inc
enter
jbe
test
lcall
lcall
xor
cmpsb
xor
push
xor
mov
inc
lret
add
lods
daa
add
stos
addb
mov
clc
std
lds
cld
iret
add
cmp
dec
aad
jmp
sbb
and
fildl
xchg
in
nop
mov
xor
mov
lahf
test
lods
xchg
int3
aad
mov
mov
mov
sbb
add
int3
inc
ror
addb
out
pop
clc
mov
jmp
or
call
fs
inc
jae
push
push
and
rcr
mov
dec
xchg
ja
scas
push
ficoms
mov
adc
fidivrs
inc
adc
xchg
pop
and
pop
adc
push
jae
mov
adc
aas
orl
mov
iret
jmp
out
mov
inc
in
cmp
pop
inc
dec
into
cmc
shlb
dec
ds
aaa
and
std
sbb
leave
and
push
add
sub
lea
cmp
adc
inc
in
sbb
xor
xchg
xchg
bound
loopne
dec
adc
int
cmp
push
pop
sub
sub
psrad
ds
mov
add
popa
or
pop
sbb
pop
hlt
sub
mov
and
jns
adc
pop
stos
add
gs
fisttpll
pop
ja
add
push
mov
sahf
jge
pop
dec
push
mov
outsl
sub
popf
rcll
add
stc
xchg
std
mov
sub
rclb
stos
mov
rol
and
stos
or
ret
pop
iret
mov
mov
mov
push
pop
push
dec
pop
dec
xor
lahf
aaa
imul
out
mov
lret
daa
add
sbb
adc
adc
cmpsb
or
xchg
dec
mov
lahf
push
rcrl
shrb
cwtl
cld
cmc
mov
cld
daa
dec
addb
mov
imul
js
in
sbb
shlb
or
das
xor
push
add
xchg
daa
xlat
in
cs
call
sbb
mov
test
pop
out
and
mov
mov
std
insb
push
add
mov
or
push
nop
inc
or
dec
dec
push
ljmp
push
xor
repz
mov
pop
lret
push
sub
pop
push
sub
lret
pop
pop
jmp
inc
push
jae
loope
ja
and
pop
leave
and
xchg
call
inc
mov
icebp
jge
fs
in
outsl
adc
fldt
xchg
push
lea
add
jo
xchg
inc
leave
and
push
adc
sbb
rorl
call
push
cmpsb
or
bound
adc
insl
xor
dec
mov
add
jp
dec
add
mov
mov
hlt
stos
xchg
mov
jae
sub
fcmovne
inc
test
lret
pop
jb
test
mov
stc
gs
imull
stos
sahf
fidivrl
rolb
mov
out
push
stos
into
cli
daa
xor
enter
mov
testb
ja
or
ds
shrb
dec
pop
hlt
orb
ja
jg
fistpll
dec
nop
lods
cs
mov
dec
out
in
mov
scas
push
push
xchg
dec
cmp
fisubrs
or
arpl
hlt
call
outsl
aas
adc
lcall
mov
cmc
mov
fisubl
pop
test
adc
or
jo
int3
clc
fsub
mov
sub
sti
mov
xor
jne
sbb
stos
pop
mov
lahf
dec
adc
mov
repz
or
mov
call
lock
test
adc
ret
xlat
xchg
arpl
cmp
cs
jb
decl
test
pop
lcall
xchg
jne
sbb
lock
loop
cmp
ja
fwait
add
mov
call
jnp
and
sub
push
fdivs
add
inc
add
xchg
jb
mov
dec
addr16
stos
mov
mov
add
inc
dec
sahf
bnd
mov
mov
xor
or
jne
and
out
or
push
mov
cli
xchg
mov
sub
xchg
jne
and
outsb
mov
leave
cmp
outsb
adc
enter
pop
or
pusha
mov
stos
lods
test
cmp
popa
cltd
iret
dec
lcall
jp
gs
rclb
lods
xchg
mov
mull
push
loop
pusha
jmp
adc
pop
out
jge
xchg
and
xor
fisttpl
push
mul
icebp
sarb
push
es
lock
add
dec
sbb
clc
out
fadds
jae
sbb
push
cmpsb
lds
push
daa
repz
mov
lret
orb
stos
jns
cmp
rolb
push
pop
jmp
sahf
mov
cmp
inc
dec
cltd
push
fcmovb
bound
iret
out
lret
push
shl
icebp
inc
std
adc
pop
push
mov
in
adc
clc
lcall
ror
pop
lds
adc
add
rcl
dec
sti
int
and
adc
sbb
inc
mov
xchg
sbb
daa
bound
dec
and
sbb
add
shrl
out
mov
lahf
scas
push
fcmove
outsl
pop
sbb
lods
mov
mov
dec
das
adc
mov
test
les
push
testl
loop
je
and
xchg
lock
adc
cmc
popf
stos
in
out
loop,pn
and
sub
mov
mov
push
icebp
dec
mov
stc
adc
iret
and
xchg
push
sub
outsl
adc
out
jb
pop
int3
and
dec
pop
fsubr
imul
or
sub
test
cs
lods
aam
loope
or
enter
jecxz
pushf
stos
iret
in
inc
outsb
or
insb
and
fstps
inc
jge
dec
inc
data16
mov
shrl
ror
pop
push
jae
mulb
push
je
dec
hlt
shrb
jmp
jle
jno
ss
pusha
push
mov
mov
pop
test
mov
mov
stos
stos
inc
jne
mov
imul
sub
inc
fadds
mov
xor
ror
imul
mov
out
dec
dec
lock
cmc
xorl
pushf
ja
int
rcrl
sbb
fs
daa
arpl
cld
dec
andl
hlt
repnz
sub
mov
jle
dec
es
jecxz
pushf
mov
in
subb
dec
and
je
pop
xchg
inc
jmp
dec
jnp
push
or
out
rep
in
rclb
imul
dec
das
negl
sub
cmp
jne
fchs
inc
push
test
push
ljmp
or
mov
cmp
test
movsl
mov
aad
dec
movsb
sub
into
jo
jge
stc
not
or
mov
fidivl
pop
jo
bnd
lret
int3
pop
add
jnp
addb
or
xor
cmp
adc
adc
sahf
mov
loop
dec
mov
sbb
mov
xor
scas
cmp
adc
sub
mov
sbb
fdivl
int3
loop
xor
push
push
adc
lret
lods
or
pop
sbb
jmp
push
dec
es
push
cmp
inc
push
sbb
inc
dec
xor
test
adc
sbb
dec
nop
dec
insb
push
mov
xor
rcrl
inc
dec
sti
arpl
xor
and
aas
fs
cmpb
mov
cmc
xor
lret
mov
sub
sub
rorl
dec
push
push
subb
test
dec
das
negb
and
jl
xchg
dec
orb
push
or
or
mov
ljmp
out
icebp
fs
cmc
int
inc
inc
add
adc
adc
test
cli
mov
pop
push
xchg
je
enter
shrl
insb
adc
dec
sbb
sub
fucomp
cmp
clc
add
xor
or
fwait
test
in
lods
ror
test
xchg
sbb
pop
fs
pop
cmc
addr16
jge
lcall
daa
xor
push
icebp
xor
repz
push
cmpsb
icebp
sbb
repz
push
push
psrlw
loope
lcall
adc
gs
cmc
sar
jb
pop
mov
mov
test
lods
mov
push
outsl
rorl
push
xchg
jmp
imul
flds
cmp
test
jnp
or
pop
mov
or
pop
dec
dec
sub
dec
inc
arpl
xchg
movb
dec
cmc
xor
sub
jnp
jo
dec
sub
jne
insl
dec
xor
cmc
xor
sbb
sbb
js
pop
fnsave
enter
sub
sub
fdivrl
stos
or
and
and
dec
cmp
jmp
or
xchg
in
call
in
jnp
jno
sub
test
rolb
aam
lret
jbe
add
mov
add
sahf
int3
or
mov
push
sbb
fdivp
out
push
and
outsb
and
mov
repz
cmpsb
out
sbb
cltd
int
out
pop
repnz
in
sarl
inc
shll
add
mov
mov
adc
xor
cmp
inc
jne
jno
pop
lahf
push
inc
call
mov
sub
adc
and
hlt
sub
fisttpl
flds
mov
dec
test
fisttpll
lds
mov
or
bound
loope
push
lahf
add
out
fisubrs
mov
xor
adc
add
movb
jb
test
push
testl
ficoml
or
and
jo
jle
mov
cmp
fs
aaa
cltd
test
insb
aaa
arpl
icebp
pusha
in
adc
mov
clc
ror
mov
in
inc
clc
sub
bound
shr
mov
adc
sbb
lret
call
add
mov
cmpsl
push
cs
int3
das
shrb
lods
pop
jl
cmp
hlt
sbb
aas
jnp
test
lcall
divl
pop
sarb
mov
pushf
push
subl
sub
mov
iret
pop
fistl
in
cmp
ljmp
lret
imul
lret
ljmp
sub
sti
aam
bsf
cmp
mov
push
js
sbb
push
and
fwait
pop
in
nop
push
fwait
bound
pop
push
dec
jo
scas
push
jmp
cld
ss
iret
adc
mov
sub
lods
adc
insb
loopne
push
lods
pop
jmp
sbb
adc
mov
inc
mov
cmp
sub
int3
test
xlat
addl
or
pushf
dec
add
test
in
cmpsl
test
inc
or
jp
add
sub
das
mov
add
push
push
push
test
or
and
adc
adcl
and
mov
inc
sbb
add
xor
mov
inc
imul
jp
popa
fst
push
dec
cmp
or
mov
mov
dec
jb
jae
clc
lahf
inc
adc
leave
ja
test
push
cltd
call
mov
pop
push
xchg
sub
pop
sti
lret
dec
inc
lods
es
xor
mov
dec
loopne
imul
and
jg
push
dec
inc
push
nop
addr16
inc
dec
imul
jp
dec
les
stos
movsb
cmpsb
jae
add
push
ds
sub
stc
les
ds
jae
push
add
sbb
xlat
inc
mov
sub
push
loopne
dec
loope
xchg
mov
cmc
push
lret
aad
rorl
mov
xchg
or
cltd
repz
aaa
out
lahf
stos
sub
rdmsr
or
scas
pop
clc
pushf
mov
int
mov
adc
push
sahf
fsubp
xchg
int
jmp
push
mov
mov
cmpsb
lret
int3
xor
xchg
inc
xchg
inc
mov
pusha
dec
inc
mov
stos
push
sarl
clc
xchg
test
sti
stos
cmp
decb
or
adc
push
daa
fsubrs
push
in
push
gs
add
ja
leave
add
cmp
pop
shl
inc
lock
xor
out
fimull
pop
out
pop
cli
pop
sti
inc
dec
icebp
xchg
arpl
cs
popf
lock
cli
sub
negb
sbb
pop
push
out
cmp
xor
out
cmp
jnp
loop
jb
cmp
mov
lods
adc
add
xchg
test
add
pushf
int3
adc
std
dec
or
shlb
add
ja
cmp
fldt
push
loopne
cmp
lea
loope
push
call
inc
mov
add
out
ljmp
jecxz
push
loope
idivb
mov
push
adc
sbb
push
sub
test
clc
nop
nop
leave
insb
push
sbb
sete
decb
test
out
sub
dec
inc
inc
pop
or
xchg
imul
or
stos
ret
ret
xor
jmp
jno
inc
wbinvd
es
mov
je
pushf
push
and
sub
inc
mov
sbb
shlb
addr16
ljmp
pop
add
in
outsb
sbb
sub
sub
adc
fsts
aam
in
test
pop
sub
test
adc
mul
ljmp
testl
rorl
inc
mov
add
lahf
cmpsb
les
cmpsb
outsl
aam
test
imul
testb
aas
push
shl
lea
push
cmp
lahf
push
clc
pop
test
movsb
test
adc
cmp
add
push
lcall
adc
cmc
divb
je
test
dec
push
push
cmp
call
ljmp
cmpsb
dec
xor
jo
add
jp
cmp
pushl
inc
fildll
cmp
lret
pop
fwait
xchg
cltd
cmp
fdivrs
test
popa
in
fsubrl
and
das
mov
or
push
in
shll
shll
xchg
hlt
xor
mov
mov
loope
push
pop
mov
dec
cmpsb
and
mov
daa
int
cmc
test
adc
testl
mov
sub
push
in
and
notb
push
mov
stos
mov
mov
jmp
jb
push
and
int
sahf
push
in
dec
jae
test
dec
and
push
fisubrl
getsec
test
das
cwtl
in
or
inc
or
shr
hlt
test
testb
sahf
lcall
scas
sti
in
pop
fcoms
aad
push
jae
push
cmpsb
dec
pop
scas
aas
in
cmp
jg
inc
loop
test
fs
cmp
jns
lods
cmpb
or
add
and
das
hlt
add
push
cmp
sub
fiaddl
test
jb
pop
shrb
pop
mov
lea
mov
and
dec
pop
xor
arpl
pop
jecxz
dec
shrb
jnp
rcrl
or
sbb
fisubrs
mov
and
mov
int3
call
or
add
je
add
int3
into
lcall
ret
fcompl
sub
or
inc
aad
jae
sub
xor
loop
insb
xlat
sbb
cmpsb
lods
cmc
cmc
scas
pop
test
cwtl
cmc
mov
sbb
aas
jmp
push
lods
aas
push
aaa
ret
sbb
test
inc
pop
outsb
fwait
bound
mov
test
aas
pop
mov
out
dec
or
enter
mov
xchg
cmc
pop
push
out
fwait
test
add
add
cwtl
ret
inc
lcall
and
push
jge
inc
mov
je
add
nop
popf
insb
loop
push
out
mov
fldenv
push
out
loope
pop
stos
lods
lret
xchg
jg
rcll
fsub
mov
loope
pushf
call
and
dec
enter
sub
mov
test
push
test
cmp
imul
imul
mov
in
sbb
xchg
scas
and
pop
jle
in
cld
and
push
mov
inc
pop
test
jmp
shrl
mov
test
xchg
adc
out
mov
pop
dec
sbb
pop
xchg
stos
sub
mov
das
pop
dec
popa
inc
insb
enter
mov
out
addr16
mov
fwait
out
je
mov
ficoms
jo
pop
int3
sub
int
in
out
add
fldl
cmp
mov
xor
push
iret
popf
testl
repz
inc
in
gs
or
imul
incb
cmpsl
xchg
dec
add
xchg
movsl
and
or
loope
push
mov
loopne
dec
in
ja
jg
notb
loopne
adc
leave
test
test
mov
in
push
int
insb
into
or
sub
mov
mov
mov
fs
mov
mov
pushf
out
frstor
mov
pop
fwait
mov
out
shrb
push
into
add
mov
xchg
jb
push
in
lods
rorb
fs
mov
in
orl
add
adc
loop
and
add
adc
arpl
sub
scas
push
adc
sti
notb
loop
add
mov
xchg
inc
xor
fadds
std
jnp
pop
es
das
jg
jl
inc
data16
pop
out
mov
das
mov
sar
xchg
clc
lahf
loope
sbb
dec
notb
sbb
sarb
sub
cltd
jmp
dec
add
push
add
inc
orl
and
call
dec
shrb
cli
push
sbbl
or
mov
loope
fs
mov
jo
adc
and
push
mov
add
mov
lds
add
pop
xchg
sbb
fdivs
fsubrs
jp
or
sbb
lret
sub
pop
pop
xor
mov
push
sub
dec
push
cltd
je
inc
test
add
out
fstpt
dec
mov
loop
insb
mov
aam
xor
dec
inc
imul
or
add
pop
add
pop
nop
inc
in
mulb
es
adc
sbb
adc
mul
int3
push
mov
out
pop
sbbl
movsl
or
push
pop
pop
out
add
or
mov
js
add
mov
dec
cmpb
sbb
jecxz
and
in
lds
je
shrb
dec
repz
pop
lds
mov
mov
insb
mov
xchg
aas
or
fisubrl
je
mov
in
jcxz
mov
xchg
adc
test
inc
jbe
cs
adc
cmp
inc
nop
hlt
pop
mov
dec
in
xchg
add
data16
arpl
cmp
cltd
dec
mov
cmp
mov
inc
dec
cmovl
push
push
dec
dec
adc
pop
push
xchg
add
fs
mov
test
enter
pop
pusha
imul
in
mov
xchg
mov
jmp
pop
sub
push
or
in
out
lock
in
or
or
pop
leave
dec
and
cmpsl
fs
push
adc
add
xchg
bound
xchg
jo
mov
stos
pusha
adc
test
xchg
aad
sbb
pop
outsb
stc
fsubrs
stos
mov
popf
mov
test
cli
fcomi
insb
shl
xchg
gs
push
pop
sub
out
sbb
pop
jno
out
xchg
add
cld
dec
mov
enter
int
mov
daa
cli
loop
mov
loopne
inc
pop
cli
pop
test
pop
and
dec
add
fadds
cs
sbb
lcall
imul
mov
sub
lret
dec
jge
je
jb
fmull
jb
mov
jmp
shrb
dec
mov
lret
pop
dec
sti
jge
fsubl
jecxz
xchg
outsl
push
or
fwait
icebp
push
or
cmp
stos
cmp
ss
xchg
mov
icebp
cltd
mov
or
addr16
movsb
lds
mov
mov
cltd
pop
lahf
mov
dec
into
and
test
rclb
movsb
aad
jae
cli
call
ret
aam
and
mov
addr16
out
jle
adc
stos
pop
aas
cltd
mov
pop
ret
and
push
scas
shl
clc
cli
lods
mov
mov
sbb
xchg
push
xchg
decl
push
sub
repz
pop
lret
gs
and
jecxz
lcall
in
add
push
jnp
pop
aas
movb
shrl
enter
shl
inc
into
movsb
outsl
sub
xor
je
jo
imul
gs
ds
psrad
insb
icebp
xor
push
or
cmpsb
mul
cmp
dec
roll
pop
mov
ljmp
fsts
pushf
push
jg
repz
ret
pop
mov
push
hlt
jnp
fisttpl
loopne
std
jno
adc
sahf
sub
mov
mov
mov
mov
loopne
xlat
mov
and
dec
xor
or
ret
adc
mov
inc
jecxz
ja
popa
or
pop
fists
js
dec
add
push
pop
xchg
sub
mov
pop
push
and
lcall
faddp
push
popf
pop
mov
dec
mov
dec
sahf
pop
mov
stc
or
fwait
adc
sti
bound
lahf
dec
jmp
dec
mov
sarb
mov
pusha
pop
xchg
into
push
leave
mov
ljmp
test
iret
inc
ljmp
pop
xchg
sub
or
stos
ret
stos
in
stos
lret
mov
test
cmc
clc
rorl
mov
sub
sbb
cmc
outsb
push
data16
xchg
mov
xchg
jnp
lret
arpl
cmp
ret
push
in
jnp
pop
adc
test
dec
ds
in
or
and
mov
or
cmp
out
fidivrl
mov
out
pushf
jg
fdivrl
stos
sbb
ds
pop
cmpsl
xchg
loop
inc
nop
cmpsb
mov
sub
in
cs
sbb
sbb
les
pop
mov
sub
test
pop
or
add
inc
fdiv
cmp
push
or
test
rcrb
and
xchg
lahf
into
nop
insl
cmpsb
shrl
repz
js
xor
call
sbb
cli
cmp
sub
or
dec
and
out
and
pop
jbe
dec
bound
jmp
lock
lret
repnz
or
cmc
mov
test
xorl
fstl
fwait
imul
in
jp
jmp
out
imul
xor
push
lcall
cmp
inc
dec
out
pop
jb
ljmp
push
mov
inc
adc
xchg
je
jl
sbb
fst
lods
or
lods
int3
outsb
ss
push
test
sub
sahf
push
repnz
xor
inc
lret
cmp
push
leave
mov
out
cmp
aas
outsl
imul
adc
imul
stc
cmp
icebp
sbb
sbb
add
jae
xchg
push
pop
insb
sbb
push
xchg
mov
ds
dec
jb
cmp
xchg
add
lds
orb
mov
push
test
arpl
out
cmp
rorb
popa
push
inc
mov
jmp
xor
jle
inc
lea
rorb
or
mov
sbb
push
cmp
fiaddl
pusha
xchg
iret
mov
mov
fucom
aas
das
int
inc
pop
test
xchg
lcall
iret
mov
and
dec
pop
adc
mov
test
test
leave
pop
lahf
push
dec
adc
fbld
sub
imul
mov
dec
cmp
inc
xor
repnz
push
mov
pop
add
mov
sub
pop
push
mov
xlat
and
call
mov
fcompl
push
adc
xchg
call
loope
ja
push
fs
jl
cmc
repnz
mov
mov
out
imul
cmp
jg
dec
xor
pop
dec
int
fisubl
xor
outsb
push
xor
mov
subb
push
pop
sbb
xor
inc
adc
lret
aad
dec
ret
roll
loopne
std
mov
cmp
call
sbb
rolb
add
fwait
lret
scas
in
cmpsl
push
movsl
out
pop
add
cmp
imul
stos
xor
dec
into
mov
adc
fistl
mov
test
cwtl
sub
mov
dec
cmp
pop
leave
xchg
out
stc
push
outsl
nop
and
xchg
and
outsb
adc
enter
jbe
outsl
arpl
in
rclb
sbb
inc
jmp
xor
out
pop
inc
xor
cld
sub
push
pop
nop
leave
fwait
lahf
loopne
inc
int
aam
sub
lret
sub
and
popa
pushl
cli
jns
shll
jle
ja
mov
hlt
lea
insb
divb
jns
adc
repz
fisubrs
cmp
repz
ficomps
imul
in
add
aad
call
dec
jecxz
adc
sbb
xchg
xor
pop
loop
dec
mov
test
jecxz
shrb
xor
std
stos
out
imul
push
mov
jnp
push
cld
sub
in
jno
mov
mov
enter
mov
add
adc
shlb
push
xchg
es
test
imull
test
jnp
push
mov
aam
daa
pop
clc
testb
test
add
insl
sbb
mov
dec
into
aam
adc
out
sub
jno
fxch
inc
lods
xchg
loop
add
push
sbb
inc
jecxz
mov
loopne
stos
and
xchg
mov
xor
fists
shll
ret
icebp
sbb
push
stc
rorl
push
fdivp
leave
imul
jg
in
das
ds
cmc
testb
nop
rcll
sbb
fstps
int3
xchg
or
lcall
push
cli
push
dec
push
test
mov
cmpsl
sbbl
movsl
rcl
out
or
inc
add
and
call
cltd
rclb
cmp
push
enter
loope
inc
call
das
xor
pop
add
aaa
fsubs
inc
clc
cmc
bound
in
jb
mov
mov
stos
enter
mov
adc
adc
inc
test
cs
icebp
pop
sbb
iret
ja
cwtl
pop
pop
dec
arpl
pop
int
add
les
movsb
pop
dec
jmp
push
and
call
mov
lea
sbb
fwait
adc
pop
and
sub
mov
or
push
hlt
bound
mov
ret
xchg
xorb
dec
cwtl
push
mov
sahf
lcall
mov
jl
divl
jbe
int3
in
cli
mov
xor
xor
push
pop
les
sbb
scas
pop
inc
jbe
add
jecxz
jmp
js
lcall
push
fnsave
mov
das
sti
mov
sbb
data16
aad
dec
push
jnp
shrb
and
ss
mov
mov
addl
dec
xchg
out
rolb
mov
dec
int
jle
jmp
xor
call
cld
dec
jge
jle
idivl
sub
adc
sub
mov
mov
or
nop
dec
cli
lods
sub
sub
lods
lock
mov
cli
loope
adc
cs
sub
js
xchg
mov
hlt
dec
jmp
xchg
sub
arpl
mov
js
je
lods
aam
popl
faddl
or
sub
pop
jb
icebp
push
xchg
push
cmpsl
xchg
dec
adc
add
and
dec
adc
dec
icebp
or
ds
mov
fs
dec
iret
imul
frstor
inc
sarl
ja
mov
imul
in
sub
outsb
mov
dec
pop
mov
push
xchg
mov
and
decb
jge
adc
pop
pop
stc
fs
mov
push
mov
lods
fcomi
push
shl
mov
out
push
int
fildl
adc
pop
dec
push
sarb
xchg
call
pop
push
mov
add
movsl
mov
pop
jns
sub
out
add
rorl
sub
fildll
inc
scas
jne
faddl
fidivs
fnstenv
adc
aaa
aad
push
cmp
sbb
adc
imul
sub
push
int
ds
jno
sub
mov
incb
into
filds
or
dec
int3
jg
mov
push
lret
sti
ficompl
scas
les
dec
cli
out
sub
out
lret
and
dec
loopne
mov
idiv
jl
test
cli
imul
mulb
or
bsf
cli
jo
rcrl
sub
sub
ficomps
sub
xchg
push
in
mov
dec
cld
loope
popa
stc
in
push
mov
xor
insb
add
mov
dec
dec
outsb
pop
jp
dec
lods
dec
push
in
push
push
or
arpl
hlt
stos
mov
rclb
stos
mov
xor
jnp
or
add
addr16
dec
arpl
sub
gs
in
test
inc
popa
add
and
dec
mov
js
xchg
test
outsb
cmp
xchg
pop
fwait
decb
cli
sbb
push
mov
leave
lret
pop
enter
or
out
mov
nop
pop
sub
mov
ret
mov
inc
jmp
and
push
cmp
mov
pop
xchg
cmp
test
cmp
push
enter
insl
clc
lahf
cs
addr16
push
sub
daa
or
dec
pop
and
mov
xor
mov
pop
and
push
ret
hlt
loop
fimuls
leave
mov
push
scas
dec
jo
dec
shl
in
mov
cmp
xorl
mov
add
fs
shlb
or
nopl
inc
pop
adc
cmpsb
and
or
pop
fiadds
sbb
lock
orl
insb
cmpsb
stc
cltd
aaa
stos
push
push
ljmp
pop
sbb
insl
dec
cmp
jmp
sbb
dec
cli
popf
sbb
sub
pop
in
dec
bnd
adc
pop
enter
lret
arpl
popf
fidivrs
or
adc
jge
dec
or
and
mov
fs
fildll
add
cli
adc
fcomip
bound
imul
addr16
pop
and
push
mov
cmc
cmp
mov
xchg
push
shrb
inc
int
in
push
adc
loop
les
sub
out
out
push
adc
mull
arpl
pop
fcomi
mov
jb
das
push
icebp
pop
inc
pop
and
xorl
inc
loop
divb
rcrl
cltd
adc
aam
ja
lock
add
push
int3
sub
ja
jne
ficomps
cli
mov
dec
test
cmp
sbb
jo
adc
mov
and
xchg
xchg
aaa
pop
mov
ss
or
mov
xchg
repz
inc
lods
rcrl
xor
js
and
ret
push
pop
insb
negb
xor
iret
popf
add
jae
pusha
stc
xor
insb
jb
daa
movsb
rcrb
ja
int
add
clc
into
outsb
loop
xor
pop
shlb
pop
mov
js
out
pop
std
jecxz
push
lods
aas
arpl
loopne
fldcw
cli
pop
aaa
push
bound
movsb
flds
jb
mov
cmc
pop
movaps
inc
xchg
pop
and
pushf
dec
mov
outsb
iret
cmp
push
and
jg
rcrl
cmp
xchg
adc
jne
test
dec
mov
in
aaa
addb
sub
pop
inc
outsb
fistps
xchg
fs
adc
adc
push
das
out
lods
pop
sub
test
sbb
loopne
or
loopne
es
mov
ja
cmp
and
jecxz
adc
lret
cmp
enter
sub
mov
sbb
and
popa
mov
pop
adc
sbb
std
mov
rcll
inc
pop
popa
pop
out
push
je
icebp
lret
jg
xor
popf
ljmp
xorb
mov
rcrb
pop
push
push
lcall
jnp
mov
xor
cmpsb
shlb
add
cli
out
ja
mov
add
mov
mov
or
dec
jnp
dec
sub
and
push
test
mov
dec
aam
push
cs
into
mov
lds
int3
sub
xchg
int3
arpl
mov
xor
mov
xchg
mov
test
int
insb
xor
sar
jmp
mov
push
inc
test
xor
lock
add
ret
add
outsl
les
xchg
jge
repz
gs
test
movsb
int
in
pop
dec
adc
add
dec
test
or
jmp
iret
adc
stos
outsb
scas
mov
mov
sahf
insb
shl
outsl
gs
mov
push
test
cmp
icebp
dec
aaa
and
push
mov
xor
add
test
ljmp
sti
fidivrl
push
jb
sub
adc
sbb
idivl
test
sub
push
push
data16
jl
push
add
push
shr
adc
loop
inc
scas
dec
lret
out
pop
subl
xor
add
push
and
or
pusha
jne
cmpsb
gs
jecxz
adc
test
sbb
scas
or
pop
jle
adc
inc
jmp
push
adc
jo
mov
xor
pop
or
js
cli
sub
sahf
adc
xlat
adc
sbbb
cmp
test
roll
pop
or
jbe
pusha
lea
fsubl
outsb
jmp
push
arpl
lock
in
xchg
insb
sbb
fs
xor
mov
mov
je
enter
pop
dec
imul
pop
shlb
sbbl
fninit
ds
dec
or
fisubrl
mov
jae
push
sbb
ljmp
pushl
ret
std
sub
shlb
jo
push
les
push
cmp
mov
insl
jne
xor
inc
pushf
adc
jnp
jo
dec
xor
sbb
stos
repz
loop
pop
cs
mov
add
jecxz
fisttpll
sub
jle
jmp
sub
sub
xor
ljmp
mov
cmpsl
mov
loope
mov
add
mov
mov
popf
outsb
jmp
decb
sbb
mov
jecxz
fwait
mov
enter
sub
std
xchg
jbe
out
xchg
dec
sub
pop
fs
cli
in
repz
in
and
add
cmc
dec
arpl
sub
movsb
inc
adc
pushl
les
xchg
repnz
cmp
mov
enter
sub
mov
cwtl
xor
inc
or
int
jbe
lret
push
in
ja
mov
mov
push
mov
xor
cmova
mulb
rorl
outsb
jno
dec
or
cmc
pop
adc
add
out
insl
push
xchg
sub
jnp
mov
cli
dec
ds
xchg
mov
pop
fs
push
xor
popa
daa
into
icebp
mov
and
dec
inc
inc
push
ret
dec
pop
mov
dec
pop
out
push
int
adc
test
mov
nop
pop
push
lcall
xchg
xor
stos
subb
cwtl
push
mov
loop
xor
cmc
dec
mov
aas
sti
jno
inc
lcall
aam
std
and
add
das
jecxz
call
cltd
cmpsl
adc
mov
jo
sbb
jecxz
out
stos
ja
sahf
scas
ds
cli
outsb
mov
faddp
repz
dec
leave
jge
subb
arpl
mov
mov
ljmp
mov
pop
sbb
mov
jl
in
lret
mov
sbb
cs
xlat
dec
sbb
pop
mov
imul
xor
ljmp
stos
repnz
testb
cmp
imulb
dec
clc
fwait
adc
enter
cmp
fs
lcall
dec
mov
adc
dec
lock
xchg
dec
xchg
aam
sub
inc
leave
push
cli
inc
test
xor
and
shll
aas
dec
and
xchg
xchg
pop
test
ds
call
adc
sbb
and
cmp
sbb
out
int3
xchg
inc
cmp
and
test
inc
pop
popa
adc
out
adc
sbb
call
sbb
out
mov
jbe
loope
mov
inc
insl
es
or
add
cli
pop
inc
stos
shlb
fxch
ret
push
icebp
fidivl
pop
cli
inc
je
iret
rcrb
fsubrs
subl
jmp
mov
std
mov
mov
aad
fwait
push
sti
rorb
push
call
mov
fisubrs
lods
sub
roll
push
in
dec
out
clc
outsb
in
pop
adc
inc
pop
test
mov
mov
push
lcall
mov
dec
jg
and
fildll
les
insl
pop
lret
iret
xchg
cmp
lods
mov
aad
pop
or
repnz
and
mov
push
add
mov
jge
push
outsl
inc
sar
pusha
and
ja
int
mov
xor
ja
fdiv
jae
cmpsl
push
mov
lcall
int3
pop
sub
clc
je
in
pop
movsl
and
loop
push
push
js
cmc
or
and
ret
rcll
cmpsb
pop
xor
aam
and
mov
jg
add
nop
sti
aaa
adc
push
mov
adc
cltd
mov
dec
pop
adc
div
call
add
jne
aad
xchg
push
adc
push
push
mov
xor
or
data16
lcall
sub
test
addl
xchg
lcall
cmp
into
mov
insb
out
cmpsl
dec
sub
dec
sub
data16
xor
jp
inc
daa
adc
or
lods
xchg
sbb
icebp
inc
inc
aam
pop
inc
push
jae
hlt
mov
addl
cld
vmovhps
call
shlb
sbb
cmc
adc
jg
enter
add
pusha
pop
push
in
je
cmc
sub
push
inc
mov
movsl
lret
jge
sbb
loopne
xor
in
mov
stos
lret
fisttpll
or
xchg
bound
mov
mov
sbb
inc
sbb
mov
and
and
xor
sbb
dec
cwtl
mov
jmp
pop
stos
push
int
loopne
jecxz
dec
sbb
jmp
xchg
insl
ror
add
mov
cmp
pusha
push
cmpsb
popa
xchg
test
nop
stos
pushl
in
dec
xor
or
push
sbb
scas
ljmp
add
repnz
lods
call
in
adc
das
call
adc
lret
and
sbb
cmp
lret
xor
lock
push
jbe
dec
fildl
xchg
fsub
scas
ss
sub
loope
pop
addr16
push
cs
or
mov
mov
push
pushf
clc
or
pop
xor
mov
popf
jl
sarl
push
pop
push
mov
mov
sbb
jmp
push
dec
je
pop
mov
adc
pop
push
cmp
bound
lods
scas
fisubrl
cmpl
arpl
inc
cmpps
je
rcr
in
iret
popf
dec
shl
mov
xor
mov
imul
xchg
faddl
push
into
add
cwtl
lods
out
adc
sbb
add
cmp
call
pop
pop
xchg
dec
pop
in
cs
inc
adc
lock
cmpb
inc
int3
dec
xor
xchg
icebp
insb
mov
shll
or
mov
roll
xchg
mov
inc
sahf
mov
in
sub
shll
sub
ror
jnp
cmpsb
hlt
inc
or
rcl
int3
lods
sbb
call
daa
inc
push
inc
movsl
push
movsl
out
retw
cmpsl
fsubs
mov
hlt
dec
fimull
dec
shll
pop
in
in
dec
call
decl
xor
pop
loopne
mov
fiadds
in
fistpl
mov
in
pop
sub
inc
or
enter
mov
adc
int
jp
xlat
out
jl
lods
mov
arpl
push
push
mov
dec
lea
xlat
ret
stos
popa
inc
mov
repz
call
push
jge,pn
addr16
test
sarb
das
ret
int
pushaw
mov
les
xchg
mov
hlt
out
pop
adc
mov
sahf
xchg
mov
pop
rcl
and
sub
mov
xchg
test
mov
adc
xchg
cmc
sbb
int
inc
maxps
call
push
sub
add
sub
sub
pop
xchg
xchg
add
push
insb
lods
dec
stos
push
andb
jo
cmp
inc
cmovle
int3
test
test
addr16
or
fs
cmp
in
mov
aaa
ret
out
sarb
aad
out
rcrb
jmp
inc
mov
adc
mov
adc
out
in
jno
aaa
nop
push
mov
sub
icebp
aas
test
loopne
mull
push
mov
dec
loope
test
frstor
mov
inc
insl
insb
cmp
fimull
add
jge
imul
mov
lcall
hlt
ror
test
lcall
push
hlt
insb
or
push
sbb
pop
pmulhuw
outsb
sub
sub
xchg
add
lcall
cld
int
or
cld
dec
shrb
dec
int3
sahf
xchg
dec
mov
jmp
add
cmp
pop
dec
mov
adcb
adc
pop
push
sti
shlb
cmpsl
or
in
cmp
push
mov
stos
rcll
xor
and
pop
mulb
movsb
cmp
cltd
repz
std
insl
pop
inc
out
clc
inc
movsl
mov
or
cmp
xchg
mov
and
and
jbe
leave
adc
jp
outsb
inc
dec
dec
pop
sub
and
shrb
adc
insb
inc
mov
or
mov
sub
mov
lret
inc
or
pop
dec
xchg
call
add
lock
fsubp
cmpsl
out
aam
inc
adc
and
fstps
sbb
pop
mov
mov
test
dec
notl
cmp
sub
shlb
sbb
jns
or
icebp
scas
pop
cmp
xchg
fcomps
mov
dec
jns
jp
aam
lret
dec
pop
cmp
adcl
mov
cmp
push
aaa
pop
mov
inc
iret
inc
pop
shll
mov
cmp
stc
sub
int3
imull
test
mov
mov
stc
mov
push
mov
int3
fsubrl
and
adc
lods
pop
or
mulb
cltd
cli
in
adc
mov
mov
push
test
pop
jle
call
hlt
push
push
pop
lods
stos
xorb
loope
test
insb
fadd
lods
call
mov
inc
inc
xor
adc
movsb
pop
movsl
repz
arpl
or
push
mov
icebp
dec
push
sub
cli
and
aad
add
stos
ljmp
out
push
pop
aam
mov
es
push
and
sub
dec
push
call
jg
cmp
pushf
gs
imul
pop
sub
xor
sbbl
or
clc
xchg
cwtl
cwtl
xor
adc
test
sub
rcr
xchg
aad
ror
std
mov
mov
call
adc
adc
pop
jns
shrb
fldt
out
and
call
mov
push
int
cmp
or
fstl
jecxz
ret
xchg
loopne
sbb
and
sub
mov
out
jo
out
push
adc
pop
cmp
pop
pop
mov
rcl
sub
dec
bound
mov
add
in
push
dec
mov
out
imul
test
lahf
iret
hlt
fisubs
dec
int
in
push
outsl
inc
sub
fucomi
ret
or
outsb
xchg
dec
pop
lcall
inc
arpl
dec
int
sti
shll
testl
daa
pop
iret
push
repz
fs
das
push
popf
push
jg
out
xchg
jns
pop
ret
sbb
fsubl
sbb
jnp
das
pop
pop
mov
aaa
xchg
stc
lods
enter
test
int3
or
icebp
cwtl
or
leave
or
push
lds
xchg
vunpcklps
inc
push
push
aam
sbb
dec
sahf
xor
fcoms
out
push
and
adc
pop
or
gs
rcrb
or
mov
mov
bts
mov
out
iret
dec
adc
xor
push
dec
dec
add
adc
stc
push
cmp
lret
mov
fcom
movsl
cmp
out
loopne
mov
or
dec
into
mov
adc
push
movsl
cmp
xchg
js
jns
dec
pushf
and
rcl
inc
jnp
test
mov
sbb
cmp
cld
or
mov
and
rcrb
call
mov
cmp
std
mov
cmp
cmp
je
test
sub
jl
mov
stc
test
addb
xchg
mov
xchg
cmpsb
add
dec
pop
and
cmp
xchg
idivl
xchg
add
inc
bound
cmpsl
imul
jb
adc
mov
clc
insb
mov
outsb
dec
dec
clc
mov
add
jg
repz
mov
pop
jmp
lret
js
aas
rorl
cmp
incl
pusha
repnz
stos
dec
mov
fiadds
dec
jp
testl
sbb
push
inc
sahf
xor
xor
mov
xor
pushf
aam
mov
test
test
or
mov
cmc
jnp
loop
or
or
stos
mov
dec
xor
cmp
xchg
addr16
cmc
mov
cld
push
pop
sub
push
ds
jns
popf
or
loop
popa
sub
dec
jne
aas
jge
lret
mov
aad
push
lock
in
out
adc
test
mov
dec
repz
pop
and
stos
push
and
arpl
dec
lods
int
pushf
testl
jmp
dec
int
dec
xchg
insl
int3
or
xchg
rcrl
cmp
in
inc
mov
or
pop
daa
outsb
sbb
ret
mov
sbb
and
push
inc
dec
xchg
aas
aad
pop
outsb
jp
test
add
mov
mov
popa
fsubrs
and
xor
xlat
movsb
xor
push
ljmp
and
fdivl
aam
cmp
or
jb
push
outsl
cmp
mov
inc
mov
add
pop
cmp
inc
pop
adcl
pop
jp
dec
movnti
sub
fldcw
or
or
mov
mov
cmpsb
push
imul
aam
xchg
jb
push
call
sub
dec
rcrl
ret
sbb
push
pop
addr16
push
xchg
sti
inc
mov
and
jle
pop
inc
movsl
iret
aas
int
out
adc
in
or
fimuls
sub
pop
ja
popf
bound
xor
int3
aaa
xlat
push
stos
ss
inc
xchg
jnp
cmp
cltd
ret
mov
inc
add
pop
and
push
lcall
lods
int
test
int
add
clc
mov
mov
jmp
in
cmp
pop
xchg
movl
bound
inc
stos
push
xchg
sbb
sti
mov
xchg
add
nop
sub
sub
or
xor
jnp,pn
xor
xchg
jb
push
jl
subb
leave
mull
fwait
es
sub
push
mov
lret
adc
pop
xor
in
jnp
scas
bound
push
push
push
hlt
lret
or
fs
xchg
movsb
or
mov
adc
in
push
jnp
and
dec
inc
dec
in
std
test
sub
leave
int3
jns
cmp
or
xchg
push
clc
mov
dec
sub
lock
or
andb
and
jb
xchg
call
nop
mov
xlat
mov
or
push
adc
jb
pop
dec
cmp
in
sbbb
orb
mov
sub
push
pusha
xadd
insb
cmpsb
popa
adc
adc
das
lcall
inc
int
in
push
insl
incb
arpl
xchg
test
iret
addl
xor
aam
add
lahf
xorb
ficomps
pop
xchg
icebp
sub
fldt
imul
jbe
xchg
fcoml
outsb
xchg
mov
hlt
sarb
movb
jl
mov
fisubrl
pop
in
in
or
pop
xor
out
push
push
adc
mov
xchg
scas
in
inc
cld
push
outsl
aam
out
mov
fildll
loopne
push
xchg
out
aas
lds
mov
sub
mov
bswap
push
jp
or
pop
cwtl
add
out
adc
xlat
xchg
pop
mov
nop
cmpb
xor
inc
mov
cld
dec
test
mov
cmp
das
xchg
punpcklwd
inc
push
xchg
push
and
dec
ss
mov
and
xchg
rcrb
cmpsl
arpl
mov
fst
or
inc
shll
dec
lods
push
sub
or
mov
ljmp
popf
mov
push
scas
fcmovnu
stos
jle
jp
dec
sub
adc
ss
xor
add
adc
lods
int
leave
push
stos
data16
jno
push
loopne
mov
add
cmpsb
sahf
jp
push
dec
mov
mov
and
mov
cmpsl
and
icebp
mov
fs
call
mov
pop
imul
and
or
push
mov
jb
push
mov
xor
jge
cmc
je
sub
ret
push
jmp
outsl
and
jne
cmpsl
mov
mov
lock
cmp
ret
ret
sub
or
sub
or
ja
mov
sti
testb
lcall
clc
xchg
mov
push
jbe
or
notb
xchg
icebp
add
push
push
in
dec
cmpsl
xlat
je
dec
push
pop
sti
lea
sti
push
push
fidivrl
adc
in
mov
cmp
stos
push
xlat
and
adc
or
push
repnz
movb
ja
adc
and
aam
scas
fcoml
mov
or
repnz
push
mov
out
inc
cwtl
inc
scas
cmpb
push
int3
arpl
out
or
lods
std
jl
push
and
icebp
inc
pop
sub
push
pop
xor
iret
add
pop
dec
jo
xor
icebp
and
fs
aam
lods
sbb
pop
pop
in
mov
shrl
addr16
arpl
movsl
adc
dec
arpl
dec
xorl
xor
daa
pop
nop
stos
pop
rcrl
xchg
and
push
rcrb
inc
leave
das
mov
fbld
lcall
mov
das
push
leave
add
xchg
jns
stos
and
in
push
js
out
jmp
arpl
dec
mov
insl
arpl
adc
jl
or
sete
fcmove
sub
ljmp
and
clc
jmp
pop
mov
pop
push
xor
cli
inc
ds
int3
subl
dec
bound
dec
jg
or
mov
mov
das
sbb
mov
arpl
mov
mov
nop
dec
dec
mov
jl
shrb
or
pop
xchg
or
dec
icebp
cld
test
pop
dec
daa
pop
lret
xchg
ss
or
call
fmuls
fstpl
cwtl
aam
cwtl
pop
dec
hlt
sub
pop
test
pop
cmp
out
dec
push
aad
adc
mov
jmp
js
stc
outsb
testl
outsb
loope
mov
push
dec
xor
stos
test
dec
mov
into
inc
cmp
dec
mov
mov
add
arpl
jo
lret
repnz
mov
stos
enter
pop
jmp
push
pop
sub
dec
xchg
lods
add
or
inc
push
xchg
xor
add
or
jnp
add
xor
in
pop
inc
mov
int
fcoms
sub
jmp
xor
push
ror
push
pop
xchg
les
jp
sub
pop
repz
push
ret
lret
int3
push
inc
ss
push
je
ljmp
testl
lds
lcall
ss
sub
in
inc
jno
or
ss
jle
xchg
int
iret
push
xlat
es
add
cmp
ud2
mov
xor
lds
out
jecxz
dec
cmpsl
dec
adc
and
enter
lea
push
jecxz
gs
fbld
flds
ss
gs
out
adc
mov
add
push
mov
pop
into
cld
pop
das
push
inc
sub
pop
pop
pop
xchg
test
inc
xchg
cs
jge
mov
jne
sub
inc
adc
sbb
test
jg
dec
mov
xchg
imul
xchg
aad
fwait
or
mov
pop
jl
xchg
movswl
dec
pop
inc
add
xlat
in
ffree
adc
clc
nop
cmc
or
into
es
dec
xchg
je
cmp
pop
lret
sbbb
lock
call
or
or
je
scas
imul
ja
les
filds
and
outsl
and
dec
or
jne
movsb
pop
mov
or
lret
dec
or
insb
mov
adc
ret
test
push
sahf
test
je
sub
or
pop
mov
sub
in
into
push
xor
sub
clc
movsb
cmp
outsl
mov
cltd
fisubrs
loopne
jnp
mov
insl
fs
hlt
jno
rcll
ss
loop
jae
sbb
lods
test
dec
push
and
outsb
push
adc
loop
xlat
ss
mov
add
fsts
in
cmp
push
int
sub
icebp
push
jns
mov
in
ret
cmp
inc
mov
fidivl
test
lock
imul
in
and
popf
mov
push
pop
imul
out
jge
shr
test
adc
jle
repz
test
outsb
out
pop
inc
sub
repz
xor
outsb
incl
into
pop
iret
pop
jl
hlt
push
sbb
iret
xchg
sar
mov
pop
adc
push
call
or
dec
movsb
in
sub
ret
mov
sub
cmpsl
fcmovnb
scas
je
out
mov
push
sub
or
sbb
pop
push
test
jmp
sub
cs
orb
adc
incb
fdivs
mov
sub
mov
ss
mov
xchg
push
xchg
int3
ja
mov
push
sub
mov
les
pop
in
mov
out
stos
pop
mov
out
mov
lcall
push
dec
stc
pop
jge
dec
xchg
mov
dec
adc
loopnew
stos
xchg
pop
fiadds
dec
cwtl
sbb
jecxz
xor
adc
fidivs
int3
jecxz
push
dec
push
mov
sub
add
adc
pushf
ficoml
subl
mov
cmovne
inc
sbb
xor
fisttpll
sbb
shld
mov
push
lret
mov
inc
sbb
sarb
and
mov
mov
sub
adc
test
mov
jmp
and
xor
inc
jnp
jo
jmp
jge
add
stos
mov
shlb
nop
add
imul
loope
mov
inc
fsubr
lods
nop
scas
cs
ss
in
mov
pop
cmpsl
dec
push
pop
ja
xor
jl
sbb
adc
pusha
add
in
mov
idivl
mov
push
fsubrs
xlat
lock
and
loop
sbbb
int
cs
lcall
enter
lea
and
cli
jns,pt
lds
jno
ret
insb
notb
jl
or
cmc
push
sbb
mov
sbb
lret
mov
loopne
cmp
stos
addl
xor
bnd
std
int3
xor
rcrl
in
aad
mov
lock
pop
lods
sbb
scas
pusha
fcompl
adc
fsts
jl
lcall
mov
aam
pop
into
leave
mov
in
out
int3
cs
adc
lahf
xor
inc
hlt
pop
fwait
push
idivl
shlb
pop
push
add
sbb
ljmp
dec
fcomps
inc
int3
out
out
sbb
or
lods
inc
sbb
mov
cmp
outsb
xor
test
aam
inc
bts
mov
xchg
xchg
mov
inc
shrb
outsl
scas
test
hlt
lods
lock
out
or
cld
jne
mov
or
inc
call
cmpsl
pop
jne
pop
negb
sub
pop
mov
add
xchg
jb
dec
loop
jb
cwtl
popa
inc
xor
add
out
sbb
add
xchg
or
mov
mov
xchg
push
jmp
test
loop
shl
cmp
gs
xchg
neg
mov
push
in
mov
subb
inc
mov
pushf
mov
pop
or
or
lcall
jne
push
and
outsl
mov
add
test
les
xchg
inc
xor
rcll
xchg
cli
cld
insl
sub
add
mov
mov
test
leave
data16
les
fisubrl
int
lahf
or
lods
sub
push
or
testb
rolb
je
call
sbb
adc
jne
insb
add
xchg
mov
sbb
push
adc
sub
pop
fcoml
push
sbb
lods
push
mov
mov
xor
sub
mov
sbb
sbb
lock
pop
test
in
mov
xor
loope
jnp
or
inc
rcrb
push
and
fwait
mov
mov
xchg
dec
arpl
es
push
cmp
dec
fisubrs
dec
dec
enter
aaa
add
adc
add
push
xchg
leave
mov
cmpsb
inc
or
xchg
loope
movsl
cmp
hlt
ret
aam
jecxz
mov
lret
add
std
jmp
sub
add
lea
cmp
call
or
xor
dec
mov
mov
adc
or
dec
popa
jo
mov
dec
and
outsb
sbb
mov
cmp
or
inc
cld
stc
cmp
scas
and
dec
mov
lahf
lret
pushw
cmp
lret
or
imul
inc
je
negb
dec
mov
mov
insb
mov
sub
outsb
cmp
gs
mov
jo
test
mov
lods
shll
xor
pop
push
add
in
sub
and
stos
xor
ja
nop
or
xchg
bound
adcl
inc
sar
mov
push
mov
add
popf
scas
in
cmpb
aad
sbb
pop
sti
out
imul
or
mov
std
dec
inc
xchg
div
jg
pop
cmp
sarb
sub
pop
xor
out
bound
ljmp
or
xchg
xor
lea
addb
shlb
dec
mov
icebp
insl
das
mov
adc
aam
mov
or
lds
dec
outsl
pop
sub
sub
stc
lahf
add
add
jno
xchg
lcall
shrl
dec
pop
into
movsl
xchg
iret
adc
iret
mov
into
add
jg
icebp
adc
mov
mov
cmp
int3
inc
shll
pop
dec
and
aaa
mov
ret
imul
lahf
mov
push
push
orb
mov
decl
jbe
icebp
cmpsl
sbb
dec
les
in
or
out
or
scas
cld
gs
mov
push
testb
mov
test
pop
xchg
push
jae
mov
test
leave
std
rorb
xor
test
enter
cmp
mov
sbb
ds
fwait
call
cmp
lret
mov
xchg
pop
xchg
sbb
or
dec
xor
push
in
loope
out
xor
inc
dec
sbb
inc
mov
mov
pop
jo
aaa
xor
dec
inc
rorl
mov
push
addr16
push
jo
cmp
sub
cmp
fiadds
add
mulb
aaa
fcmovu
mov
enter
repnz
sub
xor
jns
mov
push
mov
add
mov
fmull
push
adc
insb
imul
xor
fwait
test
aad
and
hlt
bound
js
cs
mov
mov
xchg
test
stos
sub
imul
int
notb
pop
mov
jns
inc
sbb
repz
pop
push
sub
ret
mov
lret
mov
arpl
dec
fwait
and
mov
das
arpl
outsb
inc
push
loop
jae
les
inc
clc
cmpsb
dec
dec
sahf
and
cmpsw
hlt
hlt
sarb
fnsave
cmc
inc
addr16
pop
dec
mov
pop
aad
lcall
sbb
pop
or
cmp
jae
call
and
mov
mov
out
mov
movsl
jns
sbb
cli
or
test
rorl
xor
les
inc
xchg
sub
subl
xor
inc
test
xor
pop
inc
movsb
sub
xchg
std
and
add
int
dec
adc
jbe
pop
lods
add
jecxz
adc
mov
mov
add
lret
popa
xorl
test
out
cmp
pop
fst
ret
sarl
jbe
sub
mov
jae
or
filds
jo
add
inc
sbb
outsb
hlt
lock
jno
mov
jbe
or
jle
xor
sti
push
rcr
loopne
sbb
loope
lods
push
push
fmul
sbb
mov
xlat
imul
fisubrl
push
or
stos
test
dec
pop
mov
cmp
mov
clc
iret
popf
out
decb
frstor
and
dec
pop
addr16
insl
mov
lret
add
in
stos
mov
arpl
and
cs
data16
pop
sub
push
sub
into
in
pop
xorb
pop
push
jmp
push
dec
clc
clc
aaa
les
jnp
dec
inc
push
cmpsl
mov
dec
insl
filds
and
pusha
mov
iret
fs
std
adc
cld
mov
cmp
mov
jge
adcb
push
pop
dec
out
ret
sub
inc
stc
cli
xchg
add
mov
and
fisubs
es
cmpsl
out
sahf
jle
lahf
jp
loop
xchg
jle
dec
in
out
mov
xchg
xchg
mov
mov
cs
dec
inc
outsl
mov
sbb
mov
adc
adc
adc
mov
sbb
fnsave
insl
lock
out
push
lock
push
outsb
rol
xor
loopne
int3
das
jecxz
sbb
iret
push
imul
fstpl
jnp
call
into
in
ret
cs
stos
sub
ss
push
ja
pop
addr16
loope
imul
invd
cmp
mov
pop
sbb
fidivl
sarb
jg
adc
jbe
jno
movsb
outsl
push
jb
pop
lret
cs
clc
jge
mov
push
mov
adc
shrl
add
push
xor
movsl
in
je
cmp
enter
mov
cmp
hlt
jp
repz
push
xchg
adc
cwtl
test
mov
add
push
les
jo
sbb
test
stos
add
inc
mov
scas
rcrb
dec
push
pop
ja
jp
in
lcall
in
sbb
xchg
fldl
test
mov
fdivrl
add
jb
inc
jns
inc
jge
ret
xchg
dec
enter
and
lock
insb
xchg
add
aad
fcoms
dec
out
xchg
push
jg
gs
mov
int3
sbb
pusha
mov
int
and
test
fsts
or
stos
xchg
mov
xor
dec
scas
rcl
call
lcall
out
nop
lret
xchg
adc
imul
int
jo
ja
jmp
push
sbb
int3
cwtl
aam
les
hlt
cmc
pop
pop
or
push
or
inc
dec
xor
cld
add
inc
or
test
jmp
cmc
mov
lds
in
cmpsb
cltd
push
sub
cmpsl
dec
jnp
sub
xor
xchg
js
movsl
iret
scas
sbb
nop
mov
into
mov
out
jl
movsb
subl
dec
jo
lret
test
mov
fwait
mov
xlat
scas
aaa
movsl
adc
mov
ljmp
xlat
cmp
inc
push
jb
sbb
fimull
jmp
bound
or
or
arpl
mov
dec
push
sarb
loope
hlt
push
jecxz
mov
nop
outsb
testl
data16
pop
dec
or
or
jg
data16
ja
or
push
jmp
and
mov
push
or
mov
push
sbb
push
mov
jge
jnp
and
sub
pop
or
rorb
xchg
push
add
mov
mov
xlat
ss
les
rcll
imul
xchg
sti
clc
mov
imul
mov
fscale
stos
mov
stos
sbb
daa
xor
iret
sbb
push
in
bound
adc
adc
sub
mov
or
pop
enter
and
insb
mov
add
push
push
stc
push
aas
div
adc
xor
xchg
imul
pop
aas
test
filds
test
inc
subl
into
xchg
push
ds
xorl
sbb
jbe
add
add
push
loop
pop
pop
mov
movsl
insl
pop
push
stc
dec
or
xchg
sbb
or
sub
adc
incl
ja
shrl
xor
mov
pop
out
xchg
stos
adc
push
dec
dec
ljmp
jo
daa
inc
jns
inc
or
or
cld
cmc
add
adc
xchg
popf
gs
aad
shlb
cmc
adc
cli
sbb
js
inc
clc
adc
movsb
mov
inc
adc
outsl
xor
and
mov
in
ret
mov
aaa
into
pop
xchg
jge
lds
int3
cmp
into
sub
aaa
xchg
hlt
push
xchg
push
das
dec
push
push
int
add
jne
sub
xchg
enter
aam
insb
adc
push
aam
cmp
jl
psubsw
fisttpl
mov
shll
sbb
lds
adc
adc
inc
mov
pop
rcrb
scas
push
adc
sub
inc
sahf
insb
pop
movsl
maxps
sar
and
ljmp
push
fst
out
adc
mov
xor
xchg
fistpll
push
dec
mov
or
and
outsb
sbb
push
and
add
mov
pop
repz
mov
repz
mov
cltd
leave
add
xchg
call
jp
jl
roll
add
fwait
or
adc
mov
fdivrl
in
aam
shl
adc
aas
pop
popf
add
adc
aad
inc
insl
cmp
in
adc
push
cli
lods
aam
or
xor
or
inc
jge
cmp
sub
adc
test
adc
aaa
dec
mov
int3
insl
mov
xchg
inc
dec
cld
imul
and
lea
insb
push
int3
add
dec
pop
pop
aas
mov
aam
jecxz
dec
cmpsl
mov
or
cs
aaa
xchg
push
inc
mov
cli
stos
cmc
mov
nop
sbb
aad
push
aas
sahf
dec
adc
fsts
jo
jns
xchg
test
lods
pop
xor
mov
push
orb
icebp
imul
cmpl
ret
mov
sti
movsb
add
dec
aam
test
dec
scas
les
push
test
pop
push
fwait
jae
push
fsubrl
int3
or
lret
jns
xor
or
sti
inc
mov
adc
xchg
add
loop
xchg
ds
inc
jp
mov
dec
mov
pop
data16
or
mov
xchg
mov
cs
les
daa
cmp
scas
xchg
movsl
out
xor
sub
cmp
hlt
cltd
or
cmp
xor
xchg
mov
cmp
jp
or
jmp
test
jmp
or
jb
or
sub
dec
sub
cmpsl
xor
daa
rcrb
dec
sti
push
sbb
push
fsubrp
pop
xchg
sbb
scas
test
cli
sub
movsb
ret
push
add
adc
iret
pop
stc
jle
pop
adc
pop
fstpl
lahf
in
cmp
xchg
add
movl
or
pop
pop
add
stc
jecxz
sub
jae
int3
loop
adc
mov
test
pop
or
cs
mov
lock
divb
andl
repnz
pop
loopne
sbb
sub
cmpsl
jmp
pop
outsl
cmp
hlt
nop
jmp
into
lds
and
outsb
dec
push
shrb
fistl
mov
xor
adc
mov
pop
push
and
push
push
add
test
inc
mov
sub
adc
mov
shlb
imul
adc
mov
sub
inc
out
mov
hlt
sahf
mov
repz
mov
cmpsl
push
test
dec
or
push
ds
jl
rorb
xlat
jmp
hlt
dec
out
mov
adc
rorb
add
xor
int3
xchg
inc
sbb
inc
sbb
les
xchg
mov
dec
lcall
stos
push
rorl
and
pop
jae
inc
in
cmpsl
xchg
mov
clc
jbe
cmp
pop
pop
iret
shl
mov
fistpl
dec
test
add
mov
xchg
div
ret
int
rcll
cmp
cld
push
mov
push
gs
hlt
jne
in
nop
roll
xchg
scas
mov
xor
in
and
sub
nop
and
fidivrl
das
test
cmp
mov
les
jge
sbbl
jle
cmp
movups
xor
clc
dec
int
ds
push
push
popa
orl
fcomps
in
mov
in
hlt
or
int
mov
or
mov
sbb
dec
lock
aas
sub
mov
stos
or
add
lret
jp
call
repnz
add
jl
cltd
aam
cmpsl
js
jle
jne
xor
fisubrl
mov
mov
fmuls
cltd
push
fsubrl
or
push
and
outsl
pop
icebp
das
inc
push
jl
push
lret
jae
addb
rorl
ds
fdivs
and
stos
add
inc
adc
xchg
sbb
xchg
cltd
fldt
mov
jp
push
dec
sarb
test
xchg
lea
mov
mov
divb
stc
in
cmp
jl
lods
pop
cli
shll
mov
inc
or
pop
sub
mov
pushf
and
sbb
iret
mov
int3
cli
and
inc
sub
fs
push
or
or
aaa
testl
outsb
repz
mov
arpl
insb
add
add
repnz
xchg
scas
add
mov
xor
cli
inc
dec
push
mov
movsl
mov
dec
pushf
pop
and
pusha
fcom
jge
mov
popf
ret
rorb
xchg
xchg
int3
xlat
jmp
and
call
cmp
dec
movsl
fstps
movsl
push
mov
cltd
push
push
cmp
adc
jno
sub
aas
mov
mov
daa
pop
cmc
popa
sub
hlt
dec
xor
or
cmc
cmpsb
std
dec
adc
iret
xlat
pinsrw
imul
xor
cmp
sub
test
jle
pop
sbb
or
lods
iret
sti
add
ret
sub
mov
adc
jg
test
mov
cmp
lret
xor
inc
cltd
ljmp
add
push
cmp
cltd
dec
ljmp
daa
or
rorb
imul
fidivs
aad
cmc
cmp
test
cld
and
or
leave
push
cmp
hlt
push
xor
push
push
xor
mov
jp
adc
pop
hlt
sub
shll
out
xchg
lods
test
inc
shrl
xor
enter
add
add
adc
pop
or
mov
dec
inc
sub
push
add
int3
lahf
scas
mov
push
xor
data16
jno
xchg
xchg
cltd
out
mov
outsl
dec
fisttpll
mov
xlat
cmp
repz
push
sub
test
add
cmp
cs
mov
out
fwait
mov
into
into
mov
jle
push
in
insl
stc
addr16
inc
push
cmp
movsb
or
jo
test
sti
mov
pop
sbb
inc
lret
andl
adc
cmpsl
lods
pop
shrl
mov
jmp
lea
pop
mov
add
ja
loopne
dec
push
add
adc
or
and
stos
arpl
jb
jne
or
mull
mov
imul
sub
xchg
mov
in
leave
out
mov
rolb
cli
inc
test
daa
stos
scas
fisubrs
aam
fcomp
pushf
in
xor
pushf
mov
sbb
ficompl
loop
daa
cmpsl
xchg
outsb
and
push
fidivs
cmpsb
ret
ljmp
cmp
rcll
out
out
pop
mov
addr16
aaa
addr16
lods
xor
xor
out
pop
pop
je
aaa
mov
jb
inc
fbstp
in
mov
jne
arpl
sbb
mov
in
sub
insl
mov
push
jne
cltd
test
fdivl
das
jge
icebp
push
fstpl
cmpl
popa
lock
repz
mov
aad
xor
test
movsb
lahf
adc
sar
enter
adc
cli
dec
std
xor
shl
xor
fistl
xor
add
jo
scas
inc
sbb
inc
sub
stos
movsl
pop
jae
rol
ret
enter
stos
dec
cltd
or
jecxz
fwait
in
jecxz
cld
cmpsl
cwtl
jae
adc
rcrb
add
mov
xchg
or
out
ror
aam
ljmp
fsts
or
push
sub
jbe
adc
mov
pop
jbe
jno
imul
loop
xchg
das
test
mov
inc
hlt
loop
xchg
push
jae
icebp
ret
push
je
testl
dec
and
and
addr16
idivl
lret
jmp
xchg
inc
pop
loope
nop
push
push
in
mov
jg
cmpsb
rorb
mov
cmovnp
fs
push
or
arpl
inc
xor
inc
scas
dec
and
js
notl
inc
cwtl
test
lds
stos
and
scas
cld
push
out
or
notb
ret
movsl
and
daa
dec
into
mov
xchg
jmp
aaa
mov
lret
in
fmul
push
repnz
add
inc
movsl
dec
int3
or
push
push
jne
push
mov
ret
out
sub
inc
iret
pop
andb
imul
adc
stc
fs
int3
adc
cmpb
add
vpsllw
cmp
incl
aad
pop
xorb
mov
add
sub
jns
mov
aam
jp
repnz
std
arpl
and
jge
daa
push
pop
in
or
xor
into
dec
out
xor
lahf
mov
or
ss
ss
adcb
sub
pop
mov
sub
mov
xor
dec
mov
inc
fistps
xchg
cs
out
lods
stc
aam
fs
fists
daa
aam
leavew
inc
int
cli
xchg
addr16
sbb
or
lahf
loopne
int3
inc
mov
subl
mov
call
pop
xlat
hlt
push
and
hlt
out
pop
cmc
add
inc
mov
xlat
cmc
lret
lods
lcall
lods
jp
scas
pop
push
xlat
push
sub
sub
rcr
sti
mov
cwtl
jmp
pop
adc
in
lods
push
aaa
aad
test
cmp
dec
mov
mov
mov
ret
adc
sti
sub
or
mov
add
pusha
cmpsb
insl
pop
mov
scas
xor
mov
test
hlt
mov
shl
rcrb
into
pop
push
les
cmp
test
push
shll
insb
cli
outsl
fmul
mov
jecxz
push
xor
das
ljmp
lcall
mov
push
and
pusha
loop
and
icebp
cs
popa
add
sub
mov
shlb
lret
cmp
aad
dec
lods
arpl
sub
mov
sahf
mov
xchg
lock
dec
insb
cmpsb
shll
push
fsub
inc
in
sbb
dec
cwtl
jno
mov
cltd
icebp
cwtl
lret
jnp
fisttpll
jge
js
dec
cmp
jmp
or
and
aas
cli
jae
add
arpl
insl
shrb
aas
adc
mov
dec
movsl
pop
aas
shll
pushf
inc
out
call
loop
add
leave
cmc
and
icebp
pop
sub
inc
mov
sbbb
sbb
pop
push
mov
inc
mov
pop
xor
orl
sti
mov
push
xchg
loope
push
push
xchg
jno
dec
sbb
loopne
daa
cmp
out
or
cmp
xchg
addb
add
mov
xor
call
dec
adc
jne
and
dec
or
inc
sbb
or
or
dec
add
or
mov
mov
sbb
lock
sub
add
mov
jno
je
ret
js
test
leave
mov
fs
inc
push
mov
ljmp
jecxz
mov
push
adc
push
xor
rorl
fldenv
sbb
sub
das
ret
or
lock
imul
bnd
dec
or
shlb
or
les
pusha
out
movsb
in
xchg
rolb
push
sub
jo
das
push
mov
aaa
add
arpl
shlb
push
and
push
cmp
add
sbb
hlt
push
call
mov
std
cmp
sub
push
push
sub
or
sub
ror
sub
mov
or
ret
ljmp
jge
dec
cmp
push
xchg
and
push
sahf
test
sub
mulb
enter
adc
or
sbb
mov
aas
icebp
pop
xchg
adc
dec
and
mov
ret
mov
mov
mov
mov
or
out
jl
lret
mov
movb
scas
std
jnp
inc
inc
cs
repz
int
xchg
jno
push
cmp
insb
insb
jo
jecxz
je
imul
inc
sbb
xchg
mov
sub
or
shrl
push
popf
jl
sbb
shl
arpl
lods
es
adc
stos
push
sbb
xor
scas
mov
mov
loop
sbb
pop
ret
add
push
sub
js
in
and
push
sbb
jl
sbb
test
mov
sbb
push
ljmp
and
in
cmpsb
pop
dec
pop
fs
dec
pop
stos
cmpl
int
adc
bound
cwtl
stos
or
dec
repnz
es
outsl
xor
jge
scas
sarb
push
dec
mov
in
sub
sbb
cmp
outsb
shr
jecxz
stc
sbb
ficoml
xor
lret
mov
in
push
movsl
jmp
xor
ja
mov
paddq
or
dec
rcrl
in
push
mov
test
call
call
push
xchg
cmc
sub
imul
xchg
les
xchg
int
xchg
fs
push
mov
jno
aas
adc
or
or
iret
ja
aad
mov
mov
gs
cs
shl
lock
xchg
sti
dec
sub
int
jmp
sbb
loop
int3
mov
xor
dec
mov
pop
pop
dec
add
inc
push
in
iret
sahf
push
cli
xchg
xor
xchg
sti
loopne
xchg
stos
aad
jae
jle
xchg
loope
repz
push
mov
adc
pushf
mov
ljmp
and
iret
sub
fsubrl
cltd
rorl
inc
cs
xchg
or
cltd
sub
andl
scas
aam
push
loopne
je
sbb
adc
shr
gs
inc
es
adc
test
and
push
cmc
dec
inc
mov
adc
stc
xlat
repnz
int3
insb
mov
lds
inc
add
in
rolb
lea
pop
repnz
jp
add
ds
add
ljmp
push
hlt
jne
inc
addr16
hlt
leave
mov
jo
and
lock
add
sbb
icebp
cld
push
les
test
mov
lret
bound
cld
dec
fcomi
pop
xchg
dec
or
add
pop
adc
sub
sub
int
insb
inc
test
pusha
dec
daa
push
dec
bswap
fistpl
in
ds
xchg
push
in
insl
xchg
and
js
jbe
pop
dec
ljmp
add
mov
push
into
cwtl
push
push
movsb
ret
push
jg
fistl
repz
test
adc
xchg
push
sbb
or
imul
fs
icebp
jle
in
push
push
test
fistpl
mov
sbb
icebp
pop
fnstcw
shl
cs
jecxz
das
in
jg
sub
cs
ret
sub
inc
adc
sub
movnti
xchg
pop
outsb
in
dec
out
in
add
mov
adc
movsb
xchg
pop
daa
ret
ja
dec
test
xor
cmp
and
or
mov
sbb
pop
stos
movsl
push
mov
and
mov
rclb
and
add
add
sete
adc
pop
es
push
push
cmpsl
jno
sbb
push
sub
aas
mov
fs
dec
arpl
hlt
loopne
and
xchg
jl
sub
ret
lea
mov
push
sub
xor
enter
mov
fnstenv
sahf
stos
fldenv
fstpl
inc
addr16
cmp
test
enter
inc
sub
xchg
or
dec
add
pop
mov
rorl
adc
dec
jbe
sub
xchg
lcall
pop
push
jmpw
insl
mov
iret
imul
pop
test
std
xchg
ljmp
jb
inc
gs
pop
sub
rcll
shll
inc
pop
pop
jo
sbb
cmc
lret
rol
popa
ss
test
and
add
in
mov
mov
pop
pop
pop
jb
cli
push
dec
sub
xchg
ror
pop
ret
int3
lret
popa
and
dec
inc
or
cltd
xor
inc
pop
mov
imul
repz
xchg
cld
test
mov
push
and
adcl
xor
cmp
into
int3
add
push
pop
add
inc
xchg
ret
or
or
inc
mov
push
push
leave
out
adc
lret
insb
dec
sbb
lret
lods
insb
xlat
lcall
xchg
lret
jno
cmp
mov
jne
sarl
lock
das
ss
insl
mov
not
notl
cmc
adc
jmp
inc
shrb
push
orl
mov
fldcw
popa
sub
sbb
inc
bound
sarb
adc
xchg
outsl
adc
add
mov
test
mov
mov
dec
push
sbb
push
adc
in
es
sbb
hlt
add
test
call
enter
cmp
dec
adc
dec
cwtl
dec
loop
fstps
iret
int3
lock
dec
jbe,pn
xor
and
jp
int3
daa
fstl
mov
sbb
arpl
jmp
mov
jmp
add
jne
imul
push
mov
xor
mov
mov
inc
and
sub
jmp
sub
imul
or
inc
sub
dec
popa
dec
lcall
adc
mov
inc
fsubl
stos
ret
cmp
fidivrs
repz
mov
ja
xor
loope
repnz
loopne
mov
stc
xchg
dec
fnstsw
xchg
inc
outsb
adc
xor
xchg
leave
or
inc
insb
pusha
push
inc
add
xchg
fnstsw
mov
push
repnz
cli
int3
stos
xchg
insl
out
scas
jno
xchg
outsb
xor
movsb
mov
adc
jns
push
adc
sub
dec
pop
push
adc
outsl
loop
jo
pop
add
pop
push
cld
adc
jo
mov
popa
push
outsb
or
into
or
push
in
ljmp
fisubrs
ja
stos
out
mov
loopne
pop
cld
leave
sti
int
inc
int3
adc
adc
jecxz
xor
xchg
lret
jl
cmp
jb
add
jmp
loopne
sub
mov
adc
cmp
outsl
add
xchg
outsb
lea
jno
xor
out
insb
mov
xchg
cmp
test
mov
and
lahf
push
and
cmpsb
jle
imul
fcompl
push
enter
test
xor
mov
mov
popa
sub
repz
add
aam
adc
int3
movsb
jl
mov
outsb
adc
or
int3
xchg
push
dec
add
popa
ja
divb
jo
out
mov
jle
push
lock
test
add
mov
in
cmp
dec
dec
cli
or
rcr
cmc
dec
iret
push
pop
mov
inc
sarl
mov
in
add
mov
es
fs
loopne
outsl
pop
or
dec
dec
call
inc
adc
in
dec
mov
pop
rcl
out
bound
and
outsl
sbbb
inc
iret
and
xchg
xchg
xor
in
iret
in
cmpb
dec
orl
hlt
mov
add
push
icebp
lods
or
shlb
cmp
push
push
push
dec
lret
xlat
pop
scas
std
decl
mov
sub
dec
addb
sbb
xlat
test
push
dec
mov
xchg
push
mov
adc
cwtl
sbb
outsl
cmc
ror
xor
jne
lock
pop
add
push
les
imul
xorb
enter
es
dec
outsl
das
popf
sub
les
pop
fs
sbb
mov
dec
xor
es
sub
sbb
xchg
das
mov
xchg
mov
repnz
rclb
clc
push
inc
sahf
pcmpgtb
lods
int3
ds
jge
cmp
push
fucompp
xor
ds
les
mov
je
fsubrs
dec
sbb
jns
ffree
aaa
cmc
enter
loope
and
movb
sbb
in
clc
cmpsb
pusha
fs
scas
out
scas
ret
cmp
adc
pop
push
or
cli
sub
pop
mov
loope
xor
mov
mov
sub
enter
or
insb
add
dec
ret
repnz
sbb
xchg
sahf
clc
mov
xchg
scas
push
xor
js
imul
xchg
shrl
cld
xor
ja
adc
jp
cli
jecxz
pop
sub
aad
inc
je
sbb
or
and
push
jmp
addr16
scas
xchg
pop
jmp
jae
pop
fcoms
test
cmp
in
popa
fnclex
and
sbb
shr
stc
stos
add
inc
sbb
out
lret
cmpl
aam
pushf
enter
ficoml
pop
rcl
jnp
iret
push
and
addr16
mov
pop
or
sub
in
in
ret
inc
add
scas
fimull
addl
mov
push
enter
call
add
imul
cmpsl
pushf
jle
test
xchg
dec
add
ret
iret
call
cmc
popf
repnz
sub
mov
lret
pusha
iret
iret
sar
jns
aam
sti
nop
mov
inc
add
or
jb
mov
lock
out
gs
cmp
adc
loope
dec
pminub
fldcw
lret
add
popa
mov
insb
fwait
jmp
andb
mov
xchg
lds
arpl
adc
push
or
aad
in
jno
mov
xor
in
pop
stos
mull
aam
dec
xchg
mov
adc
inc
jmp
inc
cmpsl
add
andl
sbb
and
inc
dec
je
jge
sbb
out
inc
lods
gs
out
dec
sub
cmp
dec
cmp
sbb
or
insb
inc
sub
stc
in
or
sbb
pop
outsb
fdivrl
and
mov
xchg
and
dec
int
jl
mov
pop
test
push
add
push
xor
pushf
das
imul
jle
enter
xchg
js
mull
lds
mov
sbb
inc
mov
adc
adc
repnz
lds
lods
mov
mov
movsb
mov
cmp
fistl
pop
dec
dec
loopne
imul
push
and
hlt
outsb
jnp
imulb
loope
int
sub
fisubl
mov
push
adc
lret
popl
adcl
push
adc
es
push
xor
fs
in
insb
xor
sub
or
stos
add
aam
inc
mov
mov
pop
pop
stos
adc
xor
andb
je
jb
dec
mov
stos
lcall
cmp
xchg
je
fdivl
lds
sbb
das
inc
int
dec
fwait
inc
inc
mov
imull
or
dec
or
lcall
sbb
pop
xor
sub
push
cmc
mov
clc
pop
leave
out
cmp
push
adc
in
ds
inc
je
ja
or
push
or
add
stos
fistpl
orb
push
fnstenv
insb
sub
cwtl
dec
pop
cmp
cmp
adc
sahf
stc
nop
xchg
dec
test
inc
jmp
ret
mov
cld
xchg
enter
sub
fwait
mov
test
test
cs
stc
ret
cmpsb
pop
dec
stc
mov
arpl
push
paddusb
push
mov
push
icebp
inc
out
mov
fisubrs
dec
pop
adc
push
sti
movsl
push
dec
hlt
adc
push
ljmp
ljmp
adc
sbb
mov
pop
add
jle
cmc
in
push
xchg
movsb
lcall
add
js
cld
je
mov
mov
dec
pop
in
push
sbb
mov
inc
mov
aas
add
push
cmp
add
std
lret
sbb
fistpll
xor
test
imull
stos
mov
mov
cmp
inc
add
loope
sub
jmp
inc
inc
out
in
je
lods
fs
and
jl
subl
leave
xchg
ja
pushf
add
cmp
fimuls
inc
loopne
xor
dec
push
lea
push
rorl
xchg
in
lcall
je
loope
cwtl
repz
insb
mov
dec
adc
sub
xchg
sahf
xchg
xor
pop
push
imul
dec
inc
xor
inc
jle
add
insb
push
pop
dec
push
xor
std
and
or
push
adc
mov
in
and
dec
add
pop
fdivrs
lret
cmp
mov
imul
stos
push
es
inc
lcall
add
or
shl
push
ss
and
les
and
xor
insl
pop
dec
call
es
pop
shlb
lcall
adcl
or
jne
movsb
pop
out
call
incl
es
popf
mov
mov
or
fadd
ljmp
lock
das
xchg
out
mov
ljmp
or
jne
addr16
ljmp
jne
out
xchg
adc
adcl
cmc
mov
daa
lods
das
daa
lods
mov
inc
jnp
js
icebp
xchg
push
addr16
loop
inc
inc
adc
int
sub
ds
cs
mov
push
aas
add
repnz
lock
adcl
inc
ds
and
cmp
inc
xor
sub
mov
loop
lds
sub
cmp
push
inc
test
pop
test
add
sub
imul
pushf
out
push
lea
test
or
fiaddl
aaa
lea
out
mov
lock
pusha
xchg
sarb
adc
int
mov
xor
jns
mov
mov
pop
loop
arpl
stos
dec
fists
xchg
shlb
rolb
pop
adc
adcl
aad
push
lret
repz
pop
sub
jo
xchg
shll
sbbb
mov
icebp
repnz
ret
mov
aam
out
mov
add
or
jns
inc
mov
cmp
cmp
rcrl
or
mov
push
add
xchg
jmp
std
sbb
cmc
dec
xadd
pop
dec
jmp
or
fcoml
or
jecxz
xor
ljmp
mov
les
add
mov
std
mov
incb
adc
aaa
out
mov
push
or
jmp
test
cmp
push
mov
xor
xor
jmp
test
iret
dec
ljmp
or
sbb
fidivl
inc
pop
or
adc
int
adc
scas
xchg
sti
mov
test
shr
sbb
pusha
and
push
add
loopne
pop
mov
ret
xchg
ss
es
mov
dec
pushf
aam
out
mov
sahf
mov
xchg
cmp
divps
stos
jecxz
imul
icebp
out
xor
dec
test
sub
lock
clc
inc
test
rcr
data16
mov
sbb
adcl
das
xchg
pop
cli
loope
sub
popa
dec
outsl
or
repz
sbb
or
pusha
inc
pop
xlat
ja
mov
mov
push
jns
popl
fmull
push
enter
lds
aas
test
push
cmc
sbb
push
scas
les
xchg
lock
loop
sbb
xchg
lea
loope
mov
sub
rcll
lds
addr16
lds
push
pop
cmp
das
out
jns
pop
xchg
stc
mov
sbb
into
push
cld
shr
inc
popf
mov
lea
stos
push
mov
xchg
cmp
in
inc
in
push
mov
cmp
mov
ret
out
push
sub
std
mov
insl
dec
clc
cmp
adc
or
lcall
ret
mov
jg
inc
push
jl
lock
and
sub
cld
and
adc
or
dec
dec
or
add
xchg
addr16
repnz
shll
lods
bound
push
mov
pop
dec
mov
push
lock
popa
xor
push
shl
dec
adc
aas
push
gs
fisubs
dec
adc
push
arpl
mov
add
dec
dec
ja
std
subb
icebp
push
cmp
in
xor
inc
fwait
enter
ret
cmpl
test
xlat
push
jae
cmpsl
adc
scas
mov
push
xor
mov
stos
popa
jl
push
movsb
lret
xchg
mov
out
imul
lds
push
sbb
adc
dec
and
enter
popf
icebp
into
cmp
enter
cmp
xor
cwtl
mov
loope
subl
pop
and
xor
add
and
inc
decl
into
std
repnz
xchg
push
enter
int
cmpb
outsb
xchg
fsubrs
sbb
sub
push
pop
shlb
push
pop
imul
dec
add
push
ljmp
pop
pop
loop
mov
repz
and
mov
adc
inc
inc
add
jbe
add
mov
fisubs
iret
movsb
dec
enter
inc
dec
cmp
push
out
outsb
lods
icebp
xchg
add
ljmp
pmulhw
cmp
daa
pop
adc
push
xchg
or
pop
xlat
pop
leave
sub
or
int
gs
pop
dec
mov
mov
test
or
adc
ss
enter
pop
leave
push
push
popf
insb
bound
inc
repz
out
sbb
lods
sbb
imul
sub
adc
sub
in
add
into
popa
stos
and
jp
movsb
inc
inc
pop
mov
mov
or
popf
pop
sub
fs
and
push
repz
mov
popa
movsb
mov
dec
roll
xor
fisttpll
out
or
aam
jmp
jno
cltd
xor
jae
mov
push
cli
icebp
sub
ret
jp
das
mov
lret
dec
push
lds
pop
inc
insb
add
cwtl
pop
jl
out
out
mov
test
or
sub
inc
lahf
sub
cmp
add
adc
bound
aam
lods
cmpb
les
jge
mov
jl
lods
jns
ret
sub
stos
push
xchg
or
push
inc
int3
xchg
add
repz
out
jmp
inc
mov
imul
enter
cmp
pop
loop
and
xor
int
outsb
loope
xor
hlt
jb
push
jno
fstpl
push
jb
xor
jo
leave
sub
lcall
pop
das
pushf
call
call
mov
nop
imul
loope
pop
cltd
out
pop
int
dec
ficomps
or
inc
movsl
out
mov
and
sub
cld
mov
nop
push
cld
popf
mov
dec
xlat
xlat
pop
mov
dec
ss
xchg
xor
add
sub
mov
dec
mov
fdivrs
lret
mov
in
push
dec
mov
or
fcmovb
hlt
popa
lahf
xor
ds
mov
sbb
cmpsl
jg
int3
into
adc
pop
xchg
dec
jo
int
or
test
addr16
into
leave
jp
push
fwait
inc
clc
nop
pusha
jo
xorb
mov
dec
repnz
movsb
arpl
pop
shlb
cwtl
ret
pop
das
xchg
int3
js
out
mov
fnstcw
or
push
outsb
mov
les
jmp
pop
out
or
push
sbb
fcmovne
sub
js
sbb
push
nop
arpl
icebp
or
jb
outsb
mov
outsl
and
in
loope
adc
xchg
lock
test
scas
mov
dec
rorl
aaa
jle
mov
popa
add
sahf
dec
add
fnstsw
cmp
es
stos
iret
shll
test
int
cltd
sbb
les
shl
add
pusha
push
stos
push
inc
stc
sub
test
sti
dec
sub
jnp
jno
cmpsl
jle
int3
cmpl
and
push
pop
call
sub
add
in
jns
mov
sub
mov
xor
cmp
pop
push
ret
or
shrl
popa
cld
sub
sbb
dec
add
cmp
shll
push
clc
pop
push
les
lahf
mov
dec
xchg
push
push
cmpsb
add
push
mov
xchg
inc
out
movsl
push
or
mov
sub
dec
pushf
sti
mov
fdivp
or
cmp
adc
loope
add
cmp
je
pop
mov
sub
rorb
mov
cld
jbe
lret
pandn
clc
in
xor
call
xchg
jecxz
jae
inc
popa
jp
dec
cmp
sub
sub
jecxz
cmp
test
sbb
mov
popf
xchg
xchg
xor
add
pop
divl
sti
stos
loop
dec
out
dec
mov
sbb
mov
call
mov
data16
push
std
popf
divl
add
dec
clc
inc
leave
xor
push
pop
testl
pop
cmp
xchg
add
stc
push
add
dec
shrb
cmp
popaw
movsl
xchg
pop
mov
stos
sub
pop
addb
push
fnclex
int3
push
fsts
jno
cmp
stos
add
cmp
push
fnstenv
push
orl
cltd
test
pushf
mov
sbb
dec
adc
mov
addr16
mov
xchg
repnz
mov
dec
xchg
or
mov
or
daa
jne
sbb
fstpl
dec
imul
fildl
adc
cmpsl
outsl
test
dec
push
sub
dec
repnz
shrb
xchg
sub
dec
push
cmp
jb
jecxz
int3
fadds
mov
out
pusha
adc
pop
jg
adc
inc
push
add
mov
mov
int3
xor
mov
xor
add
pop
sbb
icebp
popa
pushf
movq
mov
add
test
xor
inc
mov
push
or
adc
dec
test
int3
pop
xchg
sbb
dec
sub
lahf
ja
imul
into
int
jae
test
dec
test
out
mov
dec
mov
out
cmp
lea
inc
pop
xchg
lahf
mov
outsl
enter
xor
jle
jg
out
std
sub
enter
push
xchg
adc
xlat
andl
dec
ret
mov
sar
add
add
mov
pop
push
iret
aam
imull
insl
push
in
lods
push
dec
pop
stos
inc
push
call
in
inc
or
outsl
mov
push
sub
cltd
sub
enter
inc
iret
outsb
mov
sub
rol
stos
sbb
cmp
popf
dec
mov
push
gs
es
and
sarl
sub
lcall
mov
ret
lock
adc
subb
or
das
inc
fldcw
ja
pause
or
adc
js
test
pop
cmpb
lods
push
imul
addr16
sub
lahf
push
sbb
sbb
in
lret
xchg
push
dec
shlb
lcall
pushf
in
or
add
mov
pop
adc
adc
or
xchg
or
ret
scas
cmp
out
xor
inc
in
nop
int3
adc
sahf
jmp
movsb
popa
xor
add
jno
xor
loopne
cltd
pop
mov
mov
jno
dec
add
sub
arpl
or
jp
dec
lods
call
into
push
mov
adc
xorb
xor
jl
push
rorl
lahf
sbb
push
sbb
inc
aaa
or
xor
mov
aam
jg
mov
or
mov
mov
sbb
lahf
cli
push
dec
enter
sub
inc
aaa
push
dec
loopne
pop
stc
xor
out
sub
cmp
jns
repz
loop
test
or
mov
stc
mov
rcrb
jecxz
test
add
xchg
imul
sub
mov
xorl
sub
mov
in
xchg
fsub
mov
xor
int
arpl
mov
das
cwtl
ja
iret
lahf
dec
sbbl
xor
mov
loope
leave
add
in
aas
imulb
retw
out
xchg
faddl
fdivs
mov
out
fwait
aam
push
out
mov
adc
ljmp
aas
xor
fadds
arpl
ror
xor
leave
or
test
aaa
aad
out
cmp
push
xchg
iret
cmpsb
jae
jb
push
out
hlt
push
sbb
or
rorb
jle
dec
ja
pushf
jl
int
mov
mov
ss
popf
lods
push
and
into
push
or
lods
push
and
neg
aad
scas
jo
and
sbb
std
std
movsb
sti
xchg
mov
cli
jbe
inc
shll
nop
ss
and
icebp
fidivl
or
aad
lret
ss
pop
data16
rclb
pop
adc
icebp
clc
aaa
xor
mov
jmp
cmp
addb
pop
in
imul
dec
subb
xchg
aas
je
inc
jmp
push
aad
mov
cmp
in
or
aaa
es
aam
mov
test
lret
pop
imul
sub
push
mov
or
lret
sbb
push
mov
and
cwtd
sub
adc
fs
xor
cli
pop
imul
das
inc
lea
cmpsl
jecxz
loope
in
mov
dec
sub
mov
ret
adc
test
lock
mov
jge
loope
xchg
jmp
bsr
jbe
imull
jb
aam
loopne
add
pop
subl
jb
iret
out
aam
mov
xchg
loop
push
popf
jae
jp
cwtl
lock
dec
aaa
iret
push
das
test
fsubl
leave
xchg
push
iret
xchg
out
loopne
dec
rolb
pop
dec
sahf
lahf
lods
lods
xchg
bsf
loop
dec
pushf
pop
mov
jnp
icebp
orl
jo
loope
and
movsb
stc
iret
icebp
add
shll
or
insb
call
scas
sub
stos
xchg
or
sti
cmp
aad
pop
js
sub
or
das
pop
in
jl
inc
mov
push
xchg
push
fs
xchg
dec
pop
fdivrl
testb
das
je
xlat
xchg
cld
and
cmc
xor
cs
sub
test
movsb
mov
arpl
divb
push
sbb
sti
mov
mov
xchg
jbe
cmpl
or
adc
movq
adc
gs
lock
rorb
mov
and
into
fdivs
mov
loope
push
dec
andw
push
cmp
loope
adc
push
scas
push
das
outsl
mov
push
scas
mov
push
scas
rolb
jns
adc
test
dec
adc
or
jno
push
add
leave
mov
lock
dec
adc
enter
nop
fsubs
pop
aam
adc
mov
mov
inc
mov
das
xor
ds
nop
fcom
jmp
imul
add
mov
addb
clc
xor
or
es
iret
push
mov
sbbb
movsl
xorb
jmp
movsb
pop
mov
nop
mov
fidivrl
xchg
push
mov
stc
dec
adc
test
dec
inc
mov
dec
stos
dec
xorl
add
pushw
std
nop
cmp
dec
outsb
jne
jecxz
aad
push
insl
inc
xchg
mov
inc
int
loopne
sub
decl
stc
jno
jmp
aad
push
fsubp
mov
std
sub
cmpsl
icebp
dec
or
push
add
and
aaa
nop
mov
out
jbe
xor
imul
fbld
mov
mov
push
jp
cmc
roll
push
lcall
aaa
pop
mov
push
ss
mov
ror
push
cmpsl
adc
negl
or
daa
xchg
mov
add
inc
daa
add
and
unpcklps
mov
inc
and
xchg
and
mov
add
or
add
cltd
mov
mov
xor
rclb
pop
jg
xor
push
dec
cmp
das
xchg
lods
leave
inc
cwtl
aas
jmp
int3
stos
sub
xorl
and
data16
sbb
popa
dec
sub
andl
iret
stos
popa
adc
pop
std
cmp
inc
jno
pop
xchg
push
cmp
and
lcall
cli
adc
leave
or
stos
sub
sbb
test
dec
or
dec
flds
clc
xchg
adc
push
fists
push
xor
push
add
xchg
mov
adc
adc
xor
cmp
leave
or
adc
and
shl
subb
stos
imul
std
shrb
add
push
inc
aaa
insl
inc
xor
shr
inc
sub
mov
xchg
add
push
leave
lods
push
sbb
movsb
fbld
add
lods
fcom
test
or
cmc
xor
popa
add
cmpsl
push
xor
loop
lcall
loop
jmp
sti
ss
jl
enter
clc
sbb
pop
cmpl
cmpsl
nop
xchg
jmp
je
mov
sbb
pop
popa
cmp
pop
and
hlt
and
add
fidivrs
dec
lock
inc
mov
sub
adc
addr16
in
dec
mov
mov
or
mov
ja
enter
dec
in
mov
call
rcr
xor
mov
sbb
cmp
pop
testb
inc
enter
inc
add
mov
mov
int3
bound
adc
jne
mov
cli
add
out
mov
sbb
sbb
sbb
lcall
or
jb
adc
sub
sbb
or
sbb
in
mov
or
ss
iret
ficoml
repnz
or
mov
imulb
stos
mov
push
sbb
pop
sub
call
inc
in
dec
dec
ljmp
aam
pusha
cmp
add
nop
jno
xchg
xchg
push
in
mov
pushf
popa
mov
ficompl
arpl
icebp
add
sbb
insl
jns
int3
pop
cli
cltd
mov
les
or
dec
or
outsb
sbb
lods
cmp
das
in
ljmp
shr
iret
jle
sub
xor
push
inc
std
movl
rclb
call
sub
sub
xor
inc
jnp
add
decb
jno
pop
pusha
add
shr
xchg
or
lea
subb
mov
fwait
inc
rorb
sub
jno
nopl
push
or
mov
in
push
call
outsb
setg
dec
mov
scas
or
call
pop
jecxz
dec
lock
jg
in
sub
mov
inc
push
adc
and
dec
push
pop
and
int3
push
shrb
mov
mov
mov
insb
sub
sar
mov
xchg
lret
outsb
std
sbb
into
loopne
in
mov
adc
mov
inc
lcall
mov
cmp
lret
ja
sbb
and
insl
push
inc
ret
pop
test
fmuls
jno
mov
jne
sub
lea
xchg
sahf
mov
add
adc
dec
stc
fnstenv
loopne
mov
sbb
mov
rcll
push
inc
fs
sub
push
push
and
enter
test
pop
push
lods
hlt
lods
sbb
movsl
adc
or
imul
sbb
cld
jge
inc
mov
insb
dec
movd
adc
mov
pop
xor
jo
sarl
in
add
lea
xchg
lret
or
and
mov
pop
lods
mov
icebp
push
decl
jo
int
out
cltd
cmp
jae
in
out
arpl
hlt
pop
pop
cld
outsb
lret
in
cmpb
scas
out
mov
xchg
jecxz
adc
scas
jo
add
fcmovbe
sub
push
xchg
fldt
bound
addr16
jno
shr
nop
push
pop
adc
ss
loop
out
xchg
out
cmc
mov
into
or
or
push
movsb
out
int
cwtl
out
shl
add
addr16
lret
jg
in
cmp
xor
add
movsb
pop
mov
clc
sub
loope
and
loope
mov
jb
or
aam
lcall
popa
out
push
cmp
cli
inc
and
or
icebp
dec
nop
pop
outsl
mov
push
push
adc
cld
push
and
add
fwait
movsb
add
daa
jnp
push
or
outsl
fiaddl
add
push
lea
add
daa
outsb
lea
xchg
mov
sbb
lret
std
push
insb
mov
mov
outsl
adc
jne
shll
ror
pop
clc
xor
daa
dec
sub
mov
sbb
das
imul
add
pusha
push
inc
mov
jne
dec
xor
movsb
fwait
aad
cmp
sti
repz
enter
push
shll
mov
dec
faddp
sbb
repnz
addl
iret
addr16
ret
je
sbb
lock
pop
std
lret
add
sub
stos
fisttpll
inc
stc
pop
dec
gs
mov
imul
sbb
jg
into
xchg
push
adc
cwtl
inc
out
and
daa
test
jo
push
mov
mov
popa
sbb
or
mov
icebp
xchg
xchg
rorl
jns
test
sub
mov
mov
sahf
aas
xor
rorl
sbb
popaw
mov
sti
cmp
jne
out
mov
lods
xor
jne
mov
jp
sarb
push
jnp
decl
arpl
pop
or
mov
mov
mov
decl
daa
jle
mov
xor
xorl
std
mov
test
mov
jns
aas
stos
out
movsb
push
mov
jle
insb
mov
or
mov
and
insl
cmp
adc
ja
mov
push
and
lods
push
inc
int
xchg
mov
push
dec
mov
outsb
lods
cltd
mov
loopne
dec
sub
jo
stc
push
das
xor
in
test
sub
roll
xor
or
xchg
out
jmp
stc
or
cld
cmpsb
popf
aas
stc
push
pop
sub
rorb
or
jmp
fmul
lods
shll
mov
push
iret
push
pusha
int3
xor
pop
ficompl
mov
xchg
mov
dec
test
or
dec
insb
fucomi
cli
and
and
cmp
sbb
movsl
out
jmp
popa
xor
leave
daa
aam
mov
and
rolb
aad
jae
jo
sub
xor
mull
add
dec
inc
cmp
xchg
shrl
repnz
out
inc
push
adc
mov
je
mov
sbb
push
fiaddl
movsb
fstpl
push
and
sub
jne
mov
leave
pop
jmp
xlat
jecxz
mull
adc
xchg
mov
insl
jle
cmc
pop
xchg
add
out
ret
ds
push
mov
pop
nop
ja
movb
ja
in
push
add
fildl
inc
push
xor
loop
pop
cmpsb
movsb
rol
bts
adc
cld
or
push
inc
mov
iret
adc
lods
sbb
pusha
pop
xchg
arpl
loope
cmp
xor
sub
jle
add
cmp
inc
pop
in
push
dec
cmp
repz
mov
shl
imul
daa
sarl
pop
pop
add
jl
out
sub
xchg
xchg
fisttpl
push
out
das
jnp
addr16
or
mov
movsl
mov
mov
pop
ja
mov
mov
xchg
fs
decb
add
movsl
fisttps
jge
pop
adc
xor
je
into
cwtl
jae
sbb
dec
mov
dec
pop
ficoml
stc
fwait
add
stos
xor
mov
dec
fwait
lods
pop
push
xor
cmp
imul
jl
add
adcb
orb
cltd
les
jle
in
add
jmp
adc
sti
lea
push
mov
imul
aas
sar
mov
insb
mov
daa
xchg
push
in
adc
xlat
gs
inc
inc
sub
mov
dec
adc
movsb
mov
push
jne
cmp
sbb
dec
enter
push
test
jns
test
push
push
fistl
mov
xchg
repnz
test
clc
shrb
xchg
ret
xor
jo
pop
xchg
shr
adc
pop
cmp
cmp
push
enter
or
mov
sbb
xchg
cli
testb
outsl
jb
add
int3
popa
out
push
out
lcall
inc
shrb
add
shll
jmp
nop
dec
call
dec
test
sbb
in
dec
out
in
fidivrs
xchg
lcall
fwait
mov
push
iret
dec
xchg
xchg
lret
xchg
mov
inc
xchg
jl
ds
sbb
sub
cli
movsl
int
dec
iret
loope
sbb
pushf
inc
lret
das
loope
push
loopne
fwait
xor
jg
pusha
or
xor
adc
shr
inc
push
adc
iret
insb
lds
or
cld
inc
in
and
mov
adc
sahf
loopne
sub
lds
aam
mov
fadds
fdivs
mov
xor
cmp
sbb
and
push
fwait
xchg
nop
pop
pop
xchg
test
imul
push
adc
and
aaa
std
clc
out
cltd
shll
addb
xchg
push
push
jb
cmp
jnp
jns
test
push
enter
fdivrs
into
addr16
jno
mov
push
icebp
cmpsb
sbb
out
pop
pop
xor
mov
adcl
mov
mov
jbe
cmpsb
icebp
ret
inc
adc
stos
adc
ss
aas
imul
ror
jns
in
jge
pop
jns
sbb
loopne
fcomps
sbb
mov
int3
mov
popf
sub
inc
jne
and
rclb
ss
clc
rorb
outsb
ret
sbb
arpl
stos
adc
movsl
rolb
mov
rolb
inc
out
or
jo
mov
jg
leave
outsb
jge
sti
das
fiaddl
pop
add
cmp
popa
dec
xor
lods
sub
rolb
cmpsl
push
jle
hlt
pop
clc
insl
mov
cmp
or
arpl
sbb
mov
or
test
jg
sets
js
in
sbb
jecxz
xor
push
jecxz
jns
out
jle
sub
in
mov
repz
outsl
adc
out
std
xor
pop
addl
inc
fsubl
xor
cltd
lret
lds
lahf
sub
sub
sti
pusha
mov
bnd
xor
push
insb
cmp
or
divb
xor
fs
out
stos
or
mov
lods
xor
outsb
setnp
mov
outsb
push
jb
popa
lret
adc
push
mov
add
hlt
stos
les
stos
rcr
jbe
test
pop
jne
enter
and
int3
push
xchg
imul
mov
add
loopne
je
imul
imul
push
push
add
push
add
imul
add
xor
outsb
and
lock
cltd
jns
mov
fwait
push
pop
shll
out
divb
dec
faddp
xchg
gs
sbbb
out
or
shrl
scas
out
addr16
inc
xor
cmp
hlt
jno
and
popa
nop
leave
dec
xchg
inc
inc
out
pop
xchg
jno
call
mov
and
outsb
test
mov
mov
rolb
jg
and
js
call
adc
dec
push
aas
lcall
add
movsl
dec
xchg
jl
xor
jecxz
sbb
lods
hlt
adc
sahf
lcall
int3
mov
push
add
pop
loop
fmull
xchg
push
mov
push
jae
inc
adc
test
out
outsb
enter
popf
push
xchg
enter
mov
sarb
xchg
test
lcall
xor
cmp
adc
test
cltd
fwait
insl
lods
fimuls
pop
jb
aas
or
push
stos
popf
inc
rolb
and
inc
pop
iret
jecxz
notb
fmul
cmp
lods
lock
into
or
out
mov
dec
push
lock
dec
js
orb
add
adc
imul
xor
jp
add
mov
mov
sbb
stc
loope
xchg
fisubrs
das
inc
das
inc
lds
arpl
inc
fcmove
lret
clc
lds
mov
mov
js
inc
lret
insb
test
repnz
popa
cmp
cmp
mov
enter
xchg
gs
sbb
xchg
loope
inc
out
lea
cmp
das
adcl
imul
nop
dec
stc
popl
mov
push
mov
and
push
mov
or
fadds
outsl
mov
data16
push
push
pushf
mov
xor
mov
pop
add
out
lods
fs
imul
in
lock
in
mov
cmpb
ffreep
insb
call
mov
adc
neg
into
stos
and
gs
mov
push
xchg
push
insb
lods
or
jecxz
xlat
inc
ljmp
in
jne
aad
sub
sub
push
xlat
add
call
xor
cld
sub
ret
inc
push
in
sbbb
lea
sti
push
scas
mov
adc
sbb
sub
sbb
clc
mov
cmc
int3
insb
repnz
arpl
sub
ja
jo
sub
push
inc
call
hlt
sub
cmp
sbb
imul
sub
rcll
insb
movhps
xchg
int3
mov
adc
or
adc
push
dec
dec
sbb
sub
mov
movl
jle
lret
insl
inc
aam
inc
push
stc
pop
outsb
sub
dec
test
xchg
inc
movsb
lret
adc
lret
dec
xor
pusha
pop
loop
hlt
xor
aam
ret
movsl
faddl
xor
push
call
enter
sub
jmp
arpl
jmp
movsb
dec
sbb
ss
loopne
inc
arpl
and
mov
fwait
mov
pusha
mov
ret
pop
in
daa
nop
mov
lock
jne
pop
cmpsl
imul
fst
mov
mov
icebp
sbb
pop
adc
fstl
arpl
mov
out
add
movl
addr16
enter
inc
jnp
jae
xor
lret
loopne
jae
cs
filds
add
out
xor
and
pusha
fisttpl
add
adc
rcll
loop
add
sub
sub
jae
jecxz
mov
push
test
sahf
add
jl
cmp
mov
fisubl
clc
and
sub
lock
pop
inc
push
inc
or
sub
hlt
imull
adc
insb
out
popf
and
push
xchg
adc
ss
and
cmp
popa
inc
scas
es
lock
xchg
fcomip
sti
push
pop
cs
fiadds
jne
mov
lret
mov
inc
test
cltd
and
aad
lret
jae
imul
in
aad
cmc
jp
shlb
push
lods
add
repz
nop
xchg
outsb
dec
js
leave
pop
xor
push
xor
fimull
xor
push
dec
js
mov
pop
outsb
push
hlt
cmpsl
test
sbb
or
cmp
xchg
outsb
xchg
xor
jae
clc
data16
into
pop
shl
enter
pop
push
ret
inc
test
call
mov
sub
and
xchg
insb
mov
push
fwait
mov
cmp
xor
inc
pop
jo
mov
pop
inc
adc
dec
cmpsl
mov
int3
sarl
mov
push
clc
sub
repnz
xor
lods
gs
xor
out
mov
dec
repz
loope
andl
pop
cld
movl
push
or
mov
movsb
enter
adc
mov
pop
out
sbb
in
inc
clc
leave
jo
pop
dec
add
push
rolb
jecxz
dec
or
adc
outsb
mov
cmp
jmp
ja
imul
fsubrl
or
cs
gs
push
lret
shlb
cmp
test
sub
enter
adc
xor
bound
mov
pop
out
fbstp
out
lds
scas
pusha
xor
sub
hlt
in
adc
xchg
ret
pop
stos
in
mov
cmp
jno
pop
pop
stos
push
clc
out
call
dec
xchg
xor
adc
jle
std
mov
sub
and
int
sbb
stc
and
pop
push
bound
les
lret
popa
cld
push
cli
mov
pop
xchg
mov
ja
loopne
mov
xchg
push
dec
jno
dec
mov
sbb
loopne
or
mov
ret
ljmp
rorb
sub
hlt
inc
push
jl
aad
pop
jecxz
lds
push
mov
std
mov
imull
xchg
jg
ljmp
ror
pop
shr
lret
sbb
push
jp
xor
imulb
subl
pop
push
fmulp
jmp
pop
cmp
or
stos
xorl
pop
imulb
sti
xor
or
mov
icebp
sub
nop
fisubs
aad
jl
test
inc
or
andl
inc
shlb
xchg
sbb
insl
sbb
dec
jae
xchg
clc
ret
out
icebp
testb
or
lock
mov
icebp
fisttpl
insl
inc
or
sbb
cmp
jnp
and
and
jnp
adcl
es
xchg
call
or
addr16
push
jge
or
add
hlt
divb
cmp
aad
xor
inc
scas
jmp
es
pop
cli
xchg
das
stos
jo
cli
cmp
sub
mov
insb
ss
aad
and
loope
mov
xor
hlt
aam
insl
roll
and
cs
mov
mov
mov
push
dec
mov
cs
imulb
fucom
aad
or
mov
mov
dec
jne
icebp
or
xchg
pusha
cmp
or
in
pop
jmp
or
xor
push
aam
mov
popa
xchg
in
icebp
mov
push
clc
jno
or
nop
pop
cmp
ret
loopne,pt
aad
push
cmc
clc
mov
int
adc
gs
xchg
mov
aaa
loop
mov
pop
mov
ss
xchg
inc
cmp
xor
aam
daa
fucomip
push
push
mov
scas
imulb
enter
xor
out
xor
call
pop
andl
mov
xchg
out
or
fiaddl
lock
add
call
rcll
loopne
mov
stos
gs
and
outsb
cwtl
sub
xchg
stos
imul
mov
jb
movsl
mov
dec
scas
stc
lcall
dec
int3
lret
xchg
mov
sbb
imul
sbb
jl
push
add
shll
pop
mov
iret
mov
push
cmp
daa
add
into
and
push
int3
mov
push
insl
shlb
pop
jle
insl
dec
dec
mov
pop
xchg
loope
dec
inc
or
and
mov
mov
sarl
pushf
inc
out
sub
mov
jnp
cmpb
arpl
add
jnp
cmp
inc
push
add
das
pop
jne
xor
cmp
adc
mov
gs
cltd
sbb
test
mov
ret
dec
push
fsubp
cmp
fmull
out
rcrb
andl
jne
mov
gs
mov
mov
int
add
iret
jb
popf
lock
mov
pop
mov
popa
andb
mov
pop
sbb
xchg
out
loop
aam
cmp
jnp
sub
jg
sbb
enter
out
in
js
or
sbb
adc
jge
sti
sub
ret
inc
or
mov
pop
cld
js
into
and
repnz
test
jl
clc
sub
push
cld
outsb
mov
push
in
cltd
xor
or
sub
clc
add
sti
push
xchg
cli
pop
test
dec
loopne
loope
cmp
and
test
fstpl
rcll
repz
sub
xor
xor
out
sbb
xchg
fwait
es
cli
mov
cmp
int3
lods
xor
loope
mov
aad
inc
mov
andb
in
mov
inc
les
ret
mov
and
mov
clc
mov
add
test
rclb
add
push
faddl
or
adc
or
out
lock
jns
xchg
jo
xchg
mov
cltd
jg
ljmp
mov
pop
inc
lret
in
mov
pop
cli
shrb
subl
sahf
sti
cmpsb
cwtl
mov
pop
sbb
push
cld
bound
mov
or
and
push
xor
inc
mov
mul
dec
add
cmp
jl
out
shlb
xbegin
mov
jecxz
pop
push
dec
jae
fildll
sbb
loop
dec
sub
sub
aad
inc
lea
pop
stos
jge
dec
shl
mov
data16
xlat
les
movb
jnp
cmp
inc
inc
arpl
pop
fnsave
daa
sbb
dec
cmp
addr16
jmp
pop
sbb
jmp
bound
xchg
cmpsl
jo
xchg
mov
fcoms
pop
push
into
push
pop
pushf
ja
mov
out
add
mov
or
xor
ficoml
jne
jnp
xor
mov
pop
lret
iret
push
jg
jp
adc
push
das
push
cmp
aad
sub
sub
xor
int
mov
in
stos
std
pop
push
imul
pop
cmpsl
push
scas
xchg
loope
out
push
std
sbb
jp
mov
fwait
add
cmp
testb
xor
leave
adc
add
mov
fldenv
movsb
cltd
mov
lret
sub
fidivl
les
push
or
inc
lret
pop
hlt
cmp
mov
lret
jg
sarb
xchg
mov
adc
push
scas
lock
dec
or
xchg
and
aas
adc
mov
sbb
pushf
xchg
adc
daa
repz
fidivrs
ret
dec
out
int3
pop
push
out
mov
insb
sub
roll
push
mov
mov
sbb
and
insb
jno
mov
push
in
movsl
pop
jecxz
push
pop
inc
sbbb
jns
add
stc
lret
bound
fisubl
pop
adc
enter
daa
sub
sbb
push
faddl
inc
pusha
test
leave
jns
jle
xor
mov
push
lret
aad
dec
cld
aam
std
cmp
jbe
fimull
lahf
jmp
loope
push
aad
sbb
int
jmp
xchg
pushf
aas
fsubrp
js
jae
sub
ret
subl
add
mov
and
xchg
push
icebp
sub
push
ja
enter
adc
pusha
and
mov
rolb
and
and
push
enter
mulb
xor
cwtl
mov
repz
jno
pop
jne
shll
push
test
loop
filds
cld
out
arpl
aaa
pushf
pop
les
push
dec
clc
mov
lock
imul
pop
pop
cmp
pushf
rcll
sbbb
push
jae
xor
call
mov
adc
cmp
sub
dec
rorb
cmp
ret
xchg
lods
adcb
mov
js
mov
dec
leave
sbb
icebp
arpl
mov
out
imul
dec
aas
adc
ljmp
or
shll
or
fbld
pop
dec
mov
sbb
xor
and
lret
jmp
push
iret
jmp
popf
cmpsl
push
jle
dec
dec
sbb
cmpsb
dec
sbb
adc
xchg
stos
add
or
jne
dec
and
xor
stos
adc
aad
mov
nop
and
push
nop
mov
add
adc
je
push
and
dec
ret
lea
push
lahf
cmp
push
repz
aam
sub
push
icebp
add
insb
insl
and
mov
out
lods
or
cli
mov
pop
aad
stos
pop
mov
les
push
test
pop
jge
sub
and
push
jecxz
lahf
shl
ret
pusha
shl
xchg
repnz
lret
sbb
push
cmp
shrb
rcrl
fs
adc
dec
rcrb
sbb
push
xor
popa
mov
xchg
fcmovnu
ljmp
rorb
popf
push
adc
outsl
fcom
cmpsb
jae
leave
ret
mov
mov
in
insb
inc
aam
mov
setne
sahf
mov
iret
xor
xor
adc
inc
mov
movlps
cmp
add
jnp
ret
iret
int
cltd
jno
loopne
pop
movsb
cld
adc
sbb
mov
push
rcll
inc
lcall
outsl
push
xor
jno
lds
out
out
inc
push
sbb
loop
fmul
push
xchg
loope
into
jge
add
mov
push
aaa
dec
add
mov
popa
fisubrl
pop
add
subb
mov
add
push
jnp
out
jge
in
sahf
enter
mov
adc
test
push
rorb
push
dec
ret
movntps
xchg
and
xor
sbb
fcoms
add
push
push
jo
push
cmp
mov
xor
lods
jbe
lods
arpl
push
int3
pop
out
in
push
mov
andl
test
fsubrl
aad
stos
lods
adc
adc
push
js
icebp
data16
sbb
dec
add
xor
xchg
mov
mov
jb
imul
sub
and
imul
test
pop
imul
scas
cmp
rorb
push
inc
pop
mov
inc
mov
mov
ret
jbe
xor
xchg
push
mov
or
adc
pop
xchg
cmpsb
xchg
aas
cmp
inc
or
incb
data16
test
lret
repz
call
sti
add
pop
cwtl
lock
lahf
sbb
daa
fsubrl
adc
mov
in
pop
insb
rorl
jg
fwait
or
repnz
loop
jns
leave
popa
push
popa
dec
pop
loope
outsb
rol
xchg
cmp
xorb
inc
pusha
cmc
lock
aas
mov
pushf
pop
inc
sbb
iret
pop
push
fisubrl
xor
sub
js
fiaddl
adc
into
sbb
inc
clc
pop
and
add
xchg
lcall
lret
lds
mov
lcall
jecxz
push
lret
stc
cmp
cwtl
sbb
mov
mov
cld
adc
mov
dec
pusha
pop
cmc
out
mov
inc
scas
ret
sbb
xor
out
mov
sub
adc
sub
pop
jb
repnz
or
or
ljmp
cwtl
mov
aad
or
cmp
xor
ljmp
lahf
inc
dec
js
mov
inc
into
sahf
pop
insb
sbb
enter
lcall
xchg
add
sbb
out
mov
or
popf
mov
mov
fdiv
fisubrl
dec
inc
xchg
insb
lds
out
nop
mov
xchg
xor
jne
cs
hlt
insb
lea
sbbb
sub
mov
pop
mov
mov
addb
push
ffree
mov
jmp
jb
jle
jge
sbb
lret
or
push
inc
xor
fld
sbb
sub
push
mov
les
sbb
out
fisubs
ret
pop
jmp
stos
outsw
movsl
mov
out
clc
adc
inc
mov
sbb
adc
pusha
mov
jno
subb
adc
and
fadd
mov
jae
lds
xor
sbb
xchg
push
or
movsb
xor
cli
fld
cmp
rolb
sbb
clc
sbbl
push
outsb
lods
mov
dec
jmp
adc
inc
ret
fwait
arpl
mov
sub
mov
cltd
cmp
test
cli
lods
or
push
or
fmuls
cmpl
dec
sbb
not
jecxz
cmp
lods
or
mov
fsub
aad
js
xor
push
push
cmc
pop
sbb
pop
cmp
fmull
cmpl
aaa
and
pusha
xlat
or
aas
dec
inc
sbbl
loopne
sub
dec
std
lcall
cs
add
mov
add
jne
sti
mov
fs
or
aad
cmpsl
rolb
inc
test
sub
xor
pop
outsl
out
mov
inc
in
push
xor
jecxz
adc
outsb
dec
ds
hlt
cs
add
push
jp
mov
xchg
ss
int
push
sbb
out
bound
lods
aam
sub
dec
int3
push
push
adc
repz
lahf
hlt
jns
or
in
pop
lahf
pushl
mov
pusha
sub
paddb
mov
mov
xor
mov
popa
out
sbb
pop
cmpsb
sbb
xor
jg
aam
cmpsl
jbe
cmpb
lea
add
dec
fsubl
inc
iret
pushf
sbb
sti
loope
push
arpl
mov
push
sarl
inc
cmp
aas
xor
mov
shrl
in
jmp
mov
dec
push
test
mov
je
cmp
pop
add
insb
imul
imul
cmpl
adc
sbb
pmullw
adc
mov
dec
mov
mov
mov
lods
loopne
dec
int
outsl
sahf
fisubrs
scas
fmull
hlt
aad
movsl
and
mov
das
push
jb
push
aam
inc
inc
repz
stos
popa
rclb
push
jp
and
inc
xlat
push
cli
ret
cltd
test
push
gs
adc
sbb
ret
push
sbb
jecxz
aad
or
sbb
test
fmuls
cmp
pop
mov
xor
dec
int3
ret
movsl
fucom
and
test
lea
push
ret
add
pop
lods
inc
aas
add
adc
xchg
xchg
lock
outsb
sahf
lea
mov
int3
sbb
xchg
popf
xchg
jne
cmp
mov
pop
fwait
sub
adc
iret
imul
stc
testl
imulb
jno
inc
mov
out
xchg
scas
cmpsb
or
and
dec
test
pmaxub
add
fisttpl
or
int3
dec
inc
or
imul
add
jp
sbb
aas
int
mov
inc
ror
addb
cmp
sbb
jle
outsl
xorl
hlt
dec
and
sub
xchg
lret
lods
stos
cmp
lea
mov
mov
cltd
fmull
or
add
mov
or
mov
mov
icebp
xchg
mov
jb
xchg
dec
push
mov
imul
stos
cld
lods
inc
ja
fs
stos
sub
test
mov
outsl
insb
stos
je
mov
loop
popa
mov
or
and
iret
push
out
sub
sub
sub
nop
in
arpl
push
or
das
shll
std
and
arpl
movsb
in
xchg
and
push
xchg
fstpl
or
xor
push
pop
xchg
dec
and
enter
sub
sub
out
fisubl
mov
mov
nop
bound
ret
pop
lret
out
lahf
imul
and
imul
outsb
dec
push
or
cmp
xchg
add
mov
pop
icebp
inc
mov
dec
sub
stos
cs
push
cmc
pop
jmp
pop
mov
pop
xor
into
mov
fucomi
ret
lahf
or
pop
push
sarb
enter
sbb
push
sub
sub
in
jp
cmp
call
ljmp
mov
in
ret
out
stos
sti
pop
insb
in
fwait
cmpsl
dec
into
adc
rol
out
popa
jmp
insb
pop
xor
imul
cltd
push
mov
xor
jne
xchg
dec
sub
lods
sub
xorl
aad
dec
adc
enter
sbb
ret
sbb
pusha
mov
xchg
loopne
cmp
popf
fldenv
push
lods
sbb
cli
fldenv
sbb
push
jae
xchg
mov
iret
mov
pop
subl
or
call
and
fisttpl
shlb
inc
mov
std
or
ds
sbb
lods
jae
mov
add
test
mov
adc
mov
push
ret
jne
mov
xchg
mov
out
lods
mov
aaa
cmp
pop
xchg
js
fcomps
cltd
cld
push
mov
int
dec
mov
pop
cltd
test
fucomp
shl
inc
adc
mov
mov
mov
addr16
jp
ss
inc
dec
pop
orl
ror
sub
das
xor
dec
cli
push
push
pop
mov
cmp
sbb
lods
mov
stc
int3
xchg
hlt
testb
push
sbb
jecxz
mov
stc
fimull
icebp
adc
dec
push
jge
test
into
jne
iret
sub
out
inc
out
insb
sub
popa
test
sarb
gs
inc
sbb
or
cld
sub
stc
into
into
stos
loope
ja
int
imul
inc
xor
push
mov
adc
xor
cmp
ds
imul
mov
xchg
shrb
int
pop
not
out
rcrb
orb
gs
mov
dec
fwait
xor
xor
call
dec
mov
into
in
push
std
mov
mov
adc
sub
jno
and
xor
push
xor
push
fucomip
scas
lods
adc
es
dec
fidivrl
dec
out
and
push
dec
jo
in
xor
jmp
aas
or
rcll
test
or
jp
add
mov
mov
dec
or
nop
dec
ljmp
stos
mov
push
inc
in
bound
sbb
sub
mov
fiaddl
cld
sub
push
rolb
jge
movsl
or
xchg
lods
out
inc
inc
andb
movsb
lret
loop
loope
pop
js
loop
inc
mov
and
cmp
dec
fistpll
ljmp
xchg
fmull
mov
bound
gs
das
test
cmp
cmpl
lcall
cmp
je
imul
mov
push
in
pop
add
add
stos
mov
sub
inc
dec
js
dec
xchg
fwait
cwtl
fcmovnb
or
sub
push
sbb
and
dec
inc
clc
dec
es
imul
outsb
sub
dec
xchg
ja
lcall
lock
cmc
sub
push
jle
scas
shlb
dec
pusha
aaa
push
clc
icebp
stc
jbe
dec
add
dec
vmaxsd
xchg
inc
dec
inc
xchg
cmp
pop
mov
test
popf
and
xchg
or
out
push
movsl
inc
xor
arpl
dec
inc
xor
icebp
mov
sbb
loop
xorb
pop
dec
pop
pop
ficoml
mov
dec
inc
fisubrs
mov
lds
cmp
jnp
mov
aas
inc
jge
dec
clc
loopne
int3
or
mov
cltd
stos
add
inc
aam
adc
mov
cli
inc
dec
jle
push
xchg
clc
dec
aad
cwtl
cwtl
pop
icebp
dec
cmpsl
mov
push
jl
enter
std
dec
push
mov
adc
pop
clc
and
sub
cmp
sub
xchg
and
push
xchg
outsb
lods
loopne
sub
mov
out
sti
cmpsl
data16
insb
inc
xchg
das
je
repz
fdiv
inc
push
fnsave
cmpsb
push
ret
or
jecxz
mov
mov
ret
loop
movsl
outsb
call
mov
mov
inc
sub
mov
push
data16
outsl
mov
jl
push
fisttpl
mov
mov
adc
and
pop
jo
mov
xchg
jns
adc
mov
cmpsb
xor
leave
out
int
mov
cli
pusha
push
inc
ljmp
push
mov
sbb
in
repnz
xchg
xor
lea
xor
pop
mov
mov
and
pop
mov
xlat
mov
sbb
or
enter
repnz
pop
push
in
sbb
mov
inc
out
xor
les
mov
push
int
or
imul
sub
pop
mov
rcrb
sbb
adc
add
or
push
inc
mov
add
cmpsb
pushf
cltd
sahf
hlt
push
rclb
out
fcomps
jle
cmp
pop
sbb
icebp
jno
xchg
mov
xchg
test
es
adc
dec
mov
leave
mov
pop
imul
lds
push
pop
inc
cli
mov
inc
xchg
mov
push
repnz
int
nop
int3
iret
mov
cmpsb
div
ja
adc
and
into
imul
fistpl
std
or
scas
xor
decb
out
or
add
add
roll
orl
push
aam
call
out
xchg
push
xchg
hlt
outsb
xchg
add
xchg
jno
cmp
dec
lods
call
popa
pop
xor
mov
adc
das
jge
fisubrl
xchg
inc
outsb
shl
pop
mov
cs
xorb
and
xchg
imul
push
mov
mov
xchg
mov
hlt
loop
add
fdivs
adc
mov
adc
cmpsb
mov
or
lret
adc
cld
inc
xchg
push
icebp
push
push
xchg
movsl
mov
or
insl
xor
into
xchg
fmuls
adc
in
sbb
cwtl
roll
push
jmp
addr16
imulb
subl
gs
filds
inc
mov
dec
test
imul
lods
je
push
in
inc
lock
jecxz
jae
jno
cmp
mov
xor
jae
icebp
xlat
adc
cmp
xor
xor
pop
add
arpl
lret
push
imul
imull
fsub
loopne
xor
sub
cmp
aas
loopne
jb
mov
xor
pusha
or
dec
stos
push
pop
out
jne
cmp
andl
inc
xor
xor
lret
and
add
jae
adc
mov
test
sbb
xchg
and
int3
sbb
sub
sbbb
adc
push
dec
lret
icebp
loop
pop
je
lock
ja
jo
sbb
jo
enter
dec
cmp
add
mov
cmpsl
ss
out
cmc
bnd
dec
aam
sbb
pop
fwait
mov
push
ret
nop
jno,pn
push
and
ljmp
cwtl
arpl
repz
lcall
jnp
add
pusha
mov
lods
push
int3
mov
ljmp
adc
cmp
mov
scas
dec
mov
or
adcl
dec
mov
fisttpl
jne
cmp
repnz
xchg
nop
sub
in
or
jnp
in
sub
lds
flds
fdivrs
testl
xor
in
fsts
mov
push
sahf
inc
dec
fcompl
iret
lock
fldenv
or
or
add
add
cmc
fmuls
pop
in
fsts
sbb
sub
or
test
insl
in
insl
imull
shrl
cs
fisttps
xor
jbe
lea
jge
aad
in
cmp
imul
stc
xlat
xor
mov
cmp
sub
xchg
cmp
mov
mov
shr
mov
aaa
das
push
repnz
lret
push
or
adc
fs
jge
or
or
lcall
das
outsb
xor
inc
ds
fmull
pushf
mov
adc
loope
lods
loope
lcall
add
xor
lods
lods
repnz
xchg
ficompl
inc
lret
inc
rolb
xor
pop
fdiv
cmp
enter
xchg
or
push
jo
fcoms
mov
jb
pop
mov
das
pop
outsl
sub
and
fcomps
mov
ror
or
mov
popf
inc
jecxz,pn
int3
or
testl
add
out
insb
or
in
ret
or
loopne
mov
aaa
lods
subl
aam
mov
push
lea
fwait
lret
in
das
jbe
cmp
push
sub
nop
das
or
push
test
inc
fistl
testl
call
fs
pop
sbb
adc
push
and
jnp
mov
in
cmp
cltd
jbe,pn
imul
xor
add
scas
insl
and
enter
mov
jno
xchg
sub
dec
fidivrs
and
gs
jb
mov
push
adc
add
orb
or
negb
sbb
mulb
cmpsb
push
dec
lret
mov
cmp
or
dec
daa
scas
movsl
and
adc
jmp
fdiv
push
xor
hlt
inc
out
insl
and
stos
leave
sbb
test
xchg
mov
or
mov
push
test
leave
dec
cmc
mov
ja
dec
jl
test
mov
in
popf
sub
xchg
sub
pop
pusha
lock
mov
or
and
aas
lods
leave
rcll
adc
jbe
les
mov
sub
or
sub
mov
cltd
daa
mov
and
xlat
dec
push
adc
add
mov
inc
mov
loope
dec
jmp
inc
stos
fwait
mull
lret
mov
mov
imul
cs
jp
or
inc
out
and
mov
mov
pop
mov
out
aam
cmp
pop
lret
iret
adc
sub
or
mov
outsl
aaa
push
int
int3
push
dec
scas
clc
push
sbb
outsb
test
pop
lret
xor
stos
sub
sub
cmp
movl
sbb
xchg
and
pop
notb
sar
pop
shll
cmp
hlt
push
dec
push
in
push
xchg
cli
sub
xchg
out
enter
lret
movsb
ret
dec
faddl
stc
dec
mov
jne
aad
pop
mov
sahf
adc
arpl
pop
adcl
subl
inc
add
mov
mov
in
push
push
sub
orb
cwtl
inc
jo
xchg
pop
movups
adc
cs
pop
dec
cmp
or
int3
int
cmp
jns
mov
nop
imul
hlt
mov
dec
xchg
pop
out
sub
pop
in
dec
pop
xor
in
xor
in
push
mov
fiaddl
dec
mov
or
push
orl
mov
cs
xchg
jae
xor
fcoml
fsubrs
mov
ss
rcl
dec
in
outsb
cltd
dec
xor
stos
sub
lret
cmp
or
iret
inc
add
in
daa
dec
es
sbb
adc
lea
jae
stos
xor
dec
pop
arpl
bound
dec
inc
push
loop
test
leave
jmp
out
xor
mov
cmp
fwait
adc
fsubl
mov
and
adc
pop
xor
and
inc
movnti
or
dec
or
mov
dec
lods
pusha
jbe
jmp
mov
sub
jl
inc
xor
addr16
out
pop
test
push
mov
and
jmp
shll
push
push
out
ficomps
cmpsb
aas
xchg
pop
pusha
bound
jecxz
xchg
add
insl
push
frstor
xor
stos
rep
scas
shrb
popf
das
inc
jnp
cmpsb
xchg
push
sbb
dec
adc
test
xchg
fadd
push
ret
or
fsubrs
adc
push
sub
jo
sbb
sub
jno
cltd
in
sub
mov
int3
aas
pop
add
xor
jle
lock
push
or
xchg
outsl
add
std
sarl
jge
aas
in
stc
ja
js
xor
lret
inc
fwait
ret
add
outsl
mov
dec
les
push
xor
ret
pushf
call
mov
cwtl
stc
mov
movsb
dec
push
or
dec
adc
mov
sbb
addr16
push
rcrl
call
mov
aas
adc
fwait
sbb
pop
xor
pop
inc
or
stc
pushf
dec
jmp
sub
icebp
adc
mov
in
dec
rolb
push
push
adc
lret
outsb
jnp
push
pop
sub
and
xor
ret
hlt
iret
pop
gs
mov
mov
shl
fnstenv
or
sbbb
lock
and
test
adc
decb
push
jb
jne
inc
push
rorb
test
and
shr
bound
mov
mov
add
dec
leave
into
daa
adc
add
pop
mov
aaa
cmp
pop
insl
xor
jecxz
dec
mov
push
popf
xchg
inc
adc
ffreep
sbb
dec
xlat
cmpsb
arpl
insl
pop
jbe
add
adc
int3
icebp
sahf
fsts
and
mov
pusha
popa
sahf
push
cs
clc
jg
sbb
jo
cli
fs
mov
loopne
sub
scas
lods
jae
aas
out
mov
and
mov
call
adc
sbb
cwtl
push
std
ljmp
lcall
movsl
jg
jbe
data16
jne
push
xor
cmc
pop
sbb
sub
jb
adc
je
dec
jno
jle
jnp
inc
lea
sbb
push
sbb
dec
sub
or
sub
mov
mov
or
repz
xchg
mov
jle
daa
cwtl
repnz
js
cmpsl
cmp
inc
lds
pop
arpl
xor
outsb
dec
adcl
or
mov
mov
ja
ret
add
cmp
jle,pn
mov
sbbl
dec
cmpsb
aaa
dec
in
data16
xor
jo
je
ds
test
enter
hlt
dec
mov
mov
cmp
lds
mov
pop
xor
or
scas
popl
int3
adc
neg
jmp
pop
pop
inc
pop
inc
shrl
cmp
jmp
lahf
shrl
je
call
leave
ret
fiaddl
scas
mov
jp
pop
and
xor
out
scas
cmp
mov
adc
fadd
dec
cld
jnp
cmp
pop
test
pop
sbb
inc
pop
out
xchg
int3
loopne
leave
les
pop
mov
pusha
adc
push
inc
dec
insb
inc
mov
js
mov
test
dec
rcll
push
sbbl
mov
xor
mov
jnp
arpl
xchg
rorl
fidivrl
in
testb
push
cltd
push
movsl
adc
mov
inc
int
es
testb
inc
cmpsl
push
xchg
dec
add
mov
add
imul
mov
or
mov
push
sub
cwtl
push
aam
jp
dec
or
mov
inc
call
ljmp
andl
test
jb
out
xchg
ret
or
inc
cmpsb
pop
dec
inc
xor
lods
mov
sahf
iret
popf
xchg
fwait
pop
fildll
inc
stos
mov
or
lahf
fidivs
ret
icebp
mov
push
out
push
xchg
add
sub
stc
push
mov
stos
mov
mov
or
hlt
push
fs
dec
out
rcrb
adc
xchg
clc
stos
dec
into
int
pop
push
enter
ficomps
or
int3
jmp
popf
jge
push
lahf
pop
loopne
and
pop
xchg
jg
or
jmp
mov
repz
xchg
rcl
push
pop
mov
shl
push
in
push
mov
mov
pop
xor
out
jmp
xor
cmpsb
movsb
mov
add
stc
push
jl
adc
outsb
xchg
adc
lods
mov
cmp
xlat
lahf
lret
clc
lods
bound
in
mov
dec
mov
jbe
xchg
or
xor
lods
pop
outsl
push
test
or
fwait
push
or
ret
sbb
and
push
or
dec
out
inc
xchg
pop
pop
sbb
mov
cltd
or
scas
test
outsb
and
sbb
xor
xorl
sub
or
out
add
push
test
sbb
stos
or
add
sub
dec
mov
mov
push
mov
pop
adc
pop
mov
in
popf
mov
rcrb
es
jne
outsb
mov
fcmove
enter
cmp
leave
pop
stos
cmpsl
fdiv
pop
adc
sbb
call
jl
divb
cmpsb
aam
jecxz
jmp
sahf
cltd
mov
sbb
xor
pop
ds
orb
sbb
sbb
xchg
jl
lret
dec
adc
test
jp
mov
adc
mov
mov
mov
xchg
aaa
rolb
and
syscall
pop
iret
cmp
dec
repz
mov
test
and
lods
xlat
adc
push
dec
sub
test
nop
fdivr
or
sub
lock
outsb
cmp
fwait
add
bnd
sub
aad
hlt
sub
notl
adc
push
sahf
clc
out
adc
push
lret
and
arpl
enter
dec
xlat
xor
dec
lock
movsb
jb
xor
out
test
jl
sub
outsl
fs
xchg
sti
mov
adc
in
add
scas
cltd
cltd
mov
pop
test
in
pop
sbb
stos
loop
pop
xor
dec
test
push
aaa
std
mov
mov
sahf
pop
dec
stos
cmpl
test
hlt
arpl
and
sub
adc
push
mov
cs
jb
daa
mov
jae
js
je
mov
ja
dec
dec
les
push
arpl
insb
mov
mov
push
imul
jb
and
mov
add
and
out
xor
xchg
addr16
ror
pop
int3
insb
push
mov
sahf
mov
adc
xchg
and
out
fwait
xchg
aam
pop
out
jl
dec
lods
push
add
jnp
out
sbb
retw
inc
shll
inc
rorb
in
leave
xchg
pop
das
mov
cmp
stos
aas
pop
add
mov
add
hlt
jno
pusha
add
popa
xlat
adc
enter
sbb
add
inc
inc
add
pop
jb
sub
sbb
cmc
or
incl
push
scas
adc
dec
jl
mov
into
movsl
shll
inc
aam
fwait
cmp
xchg
jne
xor
sbb
cmpsb
sub
into
jl
jle
xor
jne
iret
cmp
mov
test
cmp
popa
mov
add
push
or
fdivs
or
add
pop
and
sbb
bound
xchg
in
mov
fdiv
fs
aad
xor
xchg
push
jns
aam
or
adc
or
add
outsb
aaa
pop
adc
sbb
or
xchg
hlt
dec
sbb
and
shlb
mov
cmpsb
push
enter
jo
mov
aas
xchg
sahf
mov
xchg
negl
mov
inc
push
ret
inc
int
fs
mov
dec
sbb
insl
enter
and
push
xor
or
mov
cld
jmp
xchg
pop
inc
sahf
push
lret
mov
popa
or
sub
push
jge
mov
jp
mov
or
mov
nop
push
mov
mov
mov
sbb
arpl
pop
inc
int3
iret
jnp
adc
dec
inc
xor
movsb
pop
push
sbb
out
pop
icebp
rcrb
adc
pop
sbb
int3
jp
sti
inc
iret
lret
sahf
mov
ds
and
adc
in
mov
pop
mov
popf
sbb
ja
cmp
insb
xchg
mov
les
xor
bound
add
and
xchg
outsb
clc
push
daa
sub
push
pop
push
xchg
cmpsb
sub
xor
mov
sbb
jo
cmp
or
call
and
jbe
pop
stc
sbb
inc
xor
sar
ja
js
or
xor
mov
pop
adc
addr16
sub
push
mov
sbb
loope
mull
ja
out
inc
pop
lret
mov
jge
int3
cli
mov
sub
outsb
push
popf
inc
fdivr
fstps
lock
dec
ret
iret
lcall
xchg
and
push
cmpsb
sahf
fs
xorl
xor
adc
sub
nop
out
xor
and
jmp
fsts
dec
mov
or
nop
cmc
sub
push
popa
call
push
sti
jb
add
daa
sbb
jp
in
jne
mov
inc
repz
cmp
aas
fidivrl
hlt
iret
clc
xchg
adc
cltd
repnz
mov
dec
icebp
popf
aas
ss
xchg
pop
dec
push
xor
aam
pushf
jle
mov
push
ret
sub
cwtl
int3
adc
and
push
push
dec
adc
popf
sbb
xlat
add
sbb
cltd
dec
das
mov
xchg
cmp
mov
orb
loopne
push
loopne
imul
inc
popa
mov
loope
pop
mov
mov
int
push
popa
sub
ss
shlb
cmp
rolb
and
fimull
pop
es
cmp
sti
adc
lret
lret
pop
sahf
fiaddl
mov
or
call
loop
jne
je
xchg
pshufw
adc
and
mov
xadd
jne
sbb
data16
push
daa
adc
and
sbb
xchg
arpl
lea
std
repnz
out
dec
adc
sub
xchg
jb
int
daa
lods
les
outsb
insb
or
in
cmc
add
inc
sbb
idivb
aaa
inc
dec
push
jmp
mov
mov
daa
jne
aam
loope
rol
push
sbb
insb
jmp
cs
shl
sub
and
test
icebp
adc
add
scas
in
push
mov
daa
mov
loop
mov
aas
dec
ret
dec
push
or
pop
mov
xchg
or
enter
aad
jne
ja
mov
cmpl
pop
sbb
jo
xchg
xchg
push
mov
loop
fcmove
xor
adc
ss
popf
dec
xchg
mov
scas
lcall
inc
xchg
jl
jo
mov
cli
data16
sbbb
je
sub
mov
imul
ret
jnp
push
push
cmp
aam
shll
and
pop
rcrb
sbb
movsl
fdivrl
push
sar
xor
dec
lcall
mov
popa
sahf
es
arpl
pushf
in
rcrb
xor
sub
cs
in
cmc
push
int
or
lcall
dec
clc
outsl
push
movsb
xchg
pop
stos
adc
jo
int3
jg
adc
inc
cmc
cmpsl
adc
mov
jp
jmp
jne
test
lret
or
out
cmp
jle
outsl
test
adc
dec
push
out
dec
cmp
dec
fcompl
push
jle
xchg
push
mov
mov
js
icebp
mov
push
and
mov
enter
shr
pxor
sbb
pushf
cmp
loop
test
jo
das
mov
add
lock
lret
push
inc
pop
lods
or
xchg
mov
sbb
mov
pop
mov
loope
mov
in
in
add
enter
enter
cltd
adc
loopne
push
ret
mov
sbb
loop
enter
pop
xlat
fsubl
aaa
push
jb
lea
je
mov
pop
cld
in
add
loop
mov
icebp
inc
mov
fmulp
imul
lods
cld
lods
xchg
sbb
into
lahf
pop
xchg
xchg
push
pop
push
aas
jnp
ss
orb
jne
mov
push
mov
pop
inc
popa
movsb
xchg
je
out
inc
xchg
ror
nop
lret
xor
test
mov
cmp
fldl2e
push
in
das
jmp
in
les
inc
mov
lea
cltd
sti
test
adc
xor
push
pop
in
pop
pop
ds
inc
pop
mov
jbe
xor
cli
dec
int3
sbb
lret
add
dec
outsl
mov
iret
aam
xor
xchg
int3
dec
mov
xor
lods
orb
ret
scas
push
mov
mov
push
inc
pop
or
or
adc
mov
sub
pop
lea
mov
imul
rcr
leave
jp
mov
outsl
aaa
out
cs
addl
icebp
cmp
ror
inc
cmp
aad
xor
inc
fcmovbe
gs
cmc
rcr
mov
fisubl
adc
adc
xchg
push
sub
and
push
out
ficoml
nop
jmp
dec
pop
mov
mov
push
int
cwtl
imul
mov
in
int3
mov
add
loop
fcmove
jmp
sbb
insb
pusha
fcmovu
push
repz
push
ret
push
aam
movsb
xchg
mov
push
mov
pusha
mov
insb
lods
push
add
jp
xchg
rcr
add
rorb
out
xor
icebp
aas
lcall
dec
test
sahf
and
pop
outsl
insb
fsubrs
mov
cmp
stos
lods
push
push
sub
push
push
test
mov
ljmp
stos
in
test
and
scas
lock
pusha
inc
adc
out
int3
push
cld
inc
or
or
mov
add
ret
testb
adc
jne
push
xor
insb
sti
xchg
add
popf
adc
outsl
mov
das
imul
mov
pushf
push
test
cmp
xor
rcrl
mov
xor
adc
adc
daa
notl
jmp
dec
push
stc
dec
adc
clc
sub
outsb
cwtl
adc
sub
push
out
imul
loop
or
sub
mov
dec
lds
andb
insl
repnz
jbe
cmp
xchg
push
icebp
lcall
aam
mov
fstpt
addl
and
sbb
inc
mov
roll
sub
dec
inc
mov
pop
loope
ds
pop
sub
cs
sbb
cmp
jbe
filds
jg
or
jns
shrl
ret
ret
out
nop
cld
std
daa
insl
sti
jle
sub
fbstp
lods
cmp
fnstenv
and
repz
insb
mov
rolb
pop
push
in
dec
sub
cmpsb
jo
push
cmp
sub
ja
xchg
adc
shl
mov
and
cmpxchg
addr16
add
push
mov
iret
notb
lahf
repnz
call
push
bound
and
fmul
decl
add
sub
inc
push
mov
inc
insb
rcl
in
cwtl
popa
jg
xchg
inc
inc
pop
repnz
jnp
das
jns
and
push
mov
outsl
hlt
xchg
sub
movsl
out
mov
rclb
adc
ret
jl
adc
cli
das
mov
inc
test
and
push
test
adc
rcll
push
cmp
cmp
add
aas
inc
repz
and
sahf
cwtl
mov
pop
test
pusha
dec
jp
push
mov
shr
push
insl
push
loopne
test
out
mov
inc
sti
sub
dec
cmpsb
or
pop
bound
imul
or
js
out
inc
out
sbb
xchg
fdivl
xchg
dec
cmp
lods
out
fisttps
xchg
cmc
repz
mov
pop
into
test
sbb
das
fs
fwait
stc
pop
or
xor
add
sub
lock
jle
arpl
add
pop
pop
push
ret
inc
or
pop
mov
jmp
sarl
adc
addl
push
repz
lock
test
cmpsl
mov
dec
push
imul
ror
or
cmp
jb
or
inc
pop
enter
pop
icebp
ret
xchg
push
fisubrl
lcall
cmp
cmp
fistps
cmp
pop
ret
inc
enter
enter
cld
mov
arpl
imul
add
push
jmp
push
xor
ljmp
adc
adc
iret
out
add
dec
out
add
jb
dec
out
or
shrl
or
and
dec
dec
es
clc
add
mov
sti
rorb
sub
adc
sub
mov
dec
xor
mov
inc
adc
rorl
xchg
or
push
aad
push
cmp
push
push
push
jmp
loopne
pop
xlat
je
sub
je
ret
xchg
and
imul
adc
push
jb
sbb
les
popf
enter
jge
pop
adc
pop
and
pusha
inc
inc
stc
inc
dec
fldcw
and
cli
pop
adc
jb
push
mov
pop
inc
cmp
dec
jo
inc
xor
test
jb
fs
fldt
call
push
das
loope
mov
sahf
loopne
test
mov
pop
es
ljmp
xchg
rol
xchg
ljmp
add
jne
cld
push
lods
or
out
movsb
xchg
test
push
xchg
inc
push
push
inc
xor
icebp
pop
jne
out
imul
sbb
pop
fsubrs
rcrb
mov
je
or
sub
cs
lock
hlt
cmc
pop
mov
clc
out
fcomi
and
in
push
mov
pop
fadds
or
dec
in
cmc
fisttps
in
add
xchg
push
cmp
and
dec
jne
inc
inc
mulb
push
dec
je
sub
dec
stos
push
jmp
scas
or
sbb
jp
fcoml
test
hlt
and
faddl
mov
cwtl
ficoml
mov
mov
ficoml
lds
push
jo
lea
je
into
push
mov
shll
int3
push
rclb
push
xor
mov
pop
or
add
mov
adc
js
jo
repnz
sub
push
in
xchg
dec
cmp
and
iret
dec
and
sub
or
or
fisttps
sti
sub
inc
data16
dec
lcall
out
cmpsl
dec
push
adc
adc
dec
mov
and
jl
sub
jle
mov
cmp
icebp
mov
cli
cmp
jnp
mov
xchg
xor
fldl
mov
sbb
nop
push
dec
orl
cmp
stc
les
cmc
aam
fildl
cmpsl
cmp
test
cmc
pop
nop
ret
cmp
jbe
iret
int
pop
insb
test
clc
dec
lcall
fists
mov
cwtl
pop
adc
sub
sub
les
mov
jp
dec
int3
push
pop
roll
lods
pusha
adc
daa
inc
push
add
pop
sub
dec
push
adc
sbb
es
cmpsl
int3
pop
xor
dec
jmp
pop
pop
les
jg
mov
pop
mov
dec
jns
pop
adc
cld
or
push
lret
sbb
adc
inc
push
xorl
rorb
ss
enter
pop
sub
shlb
lret
adc
or
xor
xor
or
aas
push
inc
adc
fisttps
ja
in
repnz
out
stc
push
int3
iret
arpl
xlat
lret
hlt
sbb
dec
je
out
data16
sbb
pop
jg
mov
push
push
int
xor
outsb
push
push
push
into
push
imul
out
loop
and
adc
pushf
sub
push
push
cmc
push
add
sar
cmp
arpl
cmpsb
and
or
or
aam
shll
xor
cli
adc
inc
nop
push
dec
sbb
fdivr
mov
out
popa
and
into
aam
pop
loop
sub
pop
iret
inc
enter
enter
add
js
jnp
jne
sub
inc
in
rcrl
add
cs
ja
test
and
loope
mov
mov
add
cmc
fadd
test
adc
aaa
lods
mov
dec
arpl
jno
adc
xchg
pop
dec
adc
cmpl
pop
cmp
loope
mov
aaa
adc
into
mov
dec
mov
inc
lcall
addr16
sbbl
push
fisubl
xor
jb
int
jg
ret
push
xchg
call
cli
pop
cmp
cs
xchg
into
gs
sbb
pop
cmp
add
and
jno
mov
data16
jno
clc
mov
dec
cmovge
xchg
dec
movsl
cmp
testb
adc
das
and
fistl
loopne
mov
testb
ljmp
push
mov
int3
int
mov
pop
add
and
mov
stc
shrl
ret
out
inc
cmp
scas
push
or
popa
cmpsb
pop
cmp
int3
jno
mov
std
iret
imul
hlt
in
add
out
lods
and
clc
and
xchg
es
out
jbe
ret
or
loopne
push
and
fbld
jmp
xchg
je
lcall
sub
xchg
in
xor
mov
popa
fisttpll
orl
int3
ret
mov
push
loopne,pn
jns
adc
jo
dec
jne
dec
push
imul
adc
jno
cld
xor
or
ds
mov
mov
ss
inc
mov
push
int3
pop
dec
inc
sub
arpl
orl
test
xchg
xor
lock
out
xchg
lret
push
scas
int
sbb
mov
jno
lahf
cmc
fmuls
jge
push
movsl
mov
xchg
add
cmc
adc
sbb
mov
sbb
test
int3
fnstsw
push
sbb
jle
clc
outsb
xchg
jns
dec
jecxz
std
push
iret
sbb
out
mov
adc
or
mov
mov
lds
cld
jl
in
push
jbe
ss
fs
fwait
hlt
xchg
and
push
stos
pop
stos
ss
lea
loopne
cltd
sub
mov
mov
in
push
adc
push
dec
dec
iret
popl
in
ss
and
or
lret
je
nop
stc
inc
dec
iret
xchg
outsl
add
mov
iret
cmpl
sti
popf
or
std
jbe
inc
inc
aam
lods
lds
out
jl
pop
pop
push
cs
cli
test
xchg
lret
int3
es
ror
sbbb
and
scas
dec
xchg
enter
adc
and
cmpsb
icebp
dec
dec
or
lock
xlat
push
pushf
mov
sti
fadds
out
lock
popf
pop
pop
sub
je
testl
out
dec
or
int
or
pop
jecxz
stos
cmpb
in
lea
sub
imulb
loop
fcmove
or
fnstcw
mov
lret
imul
mov
rclb
rcll
in
int
popa
add
inc
int
mov
xchg
jg
popf
mov
inc
or
push
sbb
inc
push
mov
jmp
scas
mov
iret
inc
outsl
and
outsb
ret
dec
adc
inc
push
shr
aam
xchg
sub
and
imul
out
ljmp
lock
inc
insl
sub
inc
mov
xor
mov
xchg
scas
loop
shrb
inc
rolb
fwait
test
mov
in
pop
out
xchg
in
test
add
gs
aaa
lcall
mov
in
faddl
test
rcll
or
cmp
shlb
popa
rorb
sub
push
inc
or
or
out
xchg
aas
mov
sub
cmp
push
rorl
call
aam
jecxz
leave
and
dec
aam
das
sub
dec
pusha
cltd
or
sub
adc
mov
cmp
movsl
add
shrb
xchg
sbb
bswap
mov
bound
loopne
mov
xchg
rcrb
pop
mov
pop
iret
add
inc
xor
cmp
adc
xchg
jbe
idivb
cmpsb
lahf
inc
pop
sbb
xor
xor
out
lods
in
dec
cmpsl
insl
jbe
or
loop
jmp
inc
jno
jbe
xchg
cmp
adc
pop
out
push
pop
cli
pushf
jbe
cmp
popa
inc
nop
mov
lcall
clc
jge
add
dec
cmp
mov
repnz
push
mov
and
xor
mov
aaa
push
pop
imul
adc
repz
xchg
clc
jecxz
arpl
aad
in
cmc
ret
out
iret
aam
xchg
daa
pop
stc
ret
jge
leave
push
daa
push
inc
ja
bts
aas
or
dec
cmpsl
inc
xchg
pop
xor
dec
xchg
ljmp
lods
iret
scas
cmp
es
pop
xor
sbb
mov
push
mov
pop
jmp
into
pop
je
rclb
mov
imul
push
not
mov
sarl
xor
dec
lret
mov
aam
mov
mov
test
pushf
imul
and
nop
or
testb
dec
movsl
inc
js
xchg
jle
mov
into
inc
shl
inc
aaa
sbb
cmpsb
pop
ds
or
push
test
cmp
cltd
dec
ss
dec
in
subl
sahf
mov
sbb
inc
xchg
cmpsl
lds
xchg
pop
in
or
je
shlb
movsb
inc
push
clc
jo
mov
xor
repnz
dec
or
mov
xor
es
popa
sbb
and
dec
push
in
loop
arpl
mov
decb
pop
in
imul
jns
cmpsb
mov
addr16
push
adc
sub
test
movsl
and
push
lea
cmp
sub
stos
std
cmc
gs
jnp
notl
test
sub
jno
pushf
inc
fs
jb
inc
sbb
mov
add
mov
rclb
js
fwait
lahf
cmp
pop
pop
cmpsl
dec
pop
xchg
xlat
pop
jmp
jmp
cmp
xchg
cmpsl
out
dec
dec
ret
dec
pop
or
call
and
jl
test
mov
sbb
in
out
or
push
dec
sub
xchg
mov
xchg
out
in
aam
pushf
test
mov
pop
je
or
mov
push
xor
mov
inc
ret
mov
dec
cmp
dec
add
sbb
push
decb
mov
roll
lea
fisubrl
mov
scas
xor
sti
jne
in
mov
fs
mov
lret
pop
fs
cmp
cmp
in
std
lods
out
push
icebp
dec
es
add
adc
push
mov
sub
icebp
movsl
add
xchg
sbb
xchg
push
movsl
fsubs
push
outsb
pop
loop
or
xor
push
dec
mov
or
xor
bound
loopne
xchg
pop
popl
add
lock
pop
clc
inc
jmp
sub
sbbb
sub
cmp
xchg
sbb
sbb
pop
mov
rdpmc
das
dec
les
std
movsb
imulb
ret
gs
mov
inc
and
push
popf
jbe
fnstsw
cmpsb
mov
popf
cmp
push
and
sub
cmp
call
fldt
add
mov
popf
iret
jmp
stos
and
repnz
cmp
aaa
or
rorl
aad
mov
mov
sbb
sbb
in
dec
cmpb
inc
mov
or
fs
sahf
mov
push
in
xchg
mov
test
sbb
out
mov
dec
or
insb
sti
xchg
inc
mov
mov
or
dec
ds
insb
fcomip
dec
call
dec
repnz
enter
fsts
sbb
xor
xchg
add
mov
and
push
xorl
outsl
xchg
lock
adc
loopne
xchg
mov
inc
add
in
cmpb
nop
inc
iret
pusha
or
inc
mov
push
stos
in
xchg
icebp
bound
loopne
adc
push
dec
out
add
inc
sub
loope
mov
cwtl
jp
into
sbb
cli
push
popf
adc
mov
int3
test
xchg
inc
dec
and
in
imul
lock
push
rol
push
into
jo
stos
es
cwtl
inc
in
arpl
movsl
movsl
pop
scas
sbb
std
xor
push
pop
in
xchg
mov
in
xchg
xor
jb
lret
out
sub
xchg
mov
add
xchg
mov
mov
lods
loope
out
out
add
test
mov
jns
xchg
sbb
mov
add
mov
gs
mov
dec
sub
push
sub
sbb
out
jmp
divb
xchg
jbe
mov
iret
adc
sti
sub
out
shrb
andl
or
icebp
pop
test
icebp
rorb
mov
shlb
lret
clc
xorl
movsb
aaa
popa
popa
mov
add
or
or
cmp
mov
mov
adc
xor
in
cltd
fnstenv
mov
adc
rolb
jmp
xchg
imul
adc
mov
sbb
not
sbb
jno
inc
ret
dec
lret
lock
sub
ffreep
cltd
fidivl
negb
push
push
stos
out
cmc
rol
sbb
mov
lcall
in
int
xlat
push
shr
inc
xchg
test
and
stc
nop
dec
push
mov
rcl
cmpsl
orl
inc
dec
popf
sti
bound
int3
dec
pop
xchg
push
je
lret
dec
fmull
mov
xor
rorl
out
inc
sub
mov
jnp
inc
and
into
sarl
arpl
and
inc
sub
dec
lret
shrl
in
sub
or
mov
lea
pop
mov
lods
mov
fwait
lcall
inc
adc
clc
jns
push
cld
mov
ret
push
es
or
movsb
or
sub
xchg
xchg
pop
in
xlat
adc
mov
and
stos
pop
and
cmpb
xor
je
sub
ret
jg
sub
mov
les
insl
leave
mov
jmp
mov
sbb
mov
jo
cmp
push
cmp
aas
sbb
fstpl
lahf
pushf
inc
ret
push
lods
push
xor
aad
push
jno
cmp
add
mov
xchg
jb
sti
xor
imul
outsb
dec
adc
stos
lahf
mov
push
adc
test
push
mov
and
repnz
mov
shrb
mov
xor
xor
pushf
or
rcrb
rcrb
cmp
lret
or
call
popa
adc
ja
orb
mov
les
jnp
dec
loope
into
adc
test
adc
les
mov
in
cs
push
lods
mov
dec
add
cltd
sarl
fldl
push
and
popl
fnstcw
shlb
mov
inc
cmc
int3
fsubrs
xchg
adc
int3
ret
int3
movsb
pop
push
push
xor
out
lcall
add
aam
imul
data16
movsl
mov
test
mov
add
je
dec
insl
dec
mov
js
xor
add
or
test
push
jle
test
pop
hlt
mov
dec
push
xor
iret
xchg
adc
inc
sub
or
gs
adc
cmp
mov
adc
in
roll
and
test
test
ja
push
sub
adc
add
lods
pop
add
jge
insb
add
inc
mov
xchg
xchg
or
outsl
jg
and
sahf
maskmovq
imull
and
movsb
mov
out
or
cmp
mov
div
add
pop
xor
or
add
mov
mov
arpl
mov
pop
xchg
or
cld
xchg
push
stc
add
and
mov
in
mov
push
mov
dec
aas
add
and
jge
pop
pop
insb
sub
xchg
repnz
aas
mov
or
in
stos
jns
aaa
mov
fwait
add
xor
or
dec
adc
mov
shr
mov
adc
imul
push
mov
stc
aam
call
clc
and
inc
inc
xor
xchg
cmp
pushf
mov
jno
dec
out
testb
dec
iret
stos
les
cld
andl
movb
movl
pop
out
or
pop
push
daa
shll
push
es
scas
dec
ljmp
jbe
aam
push
out
pop
loope
ljmp
mov
ss
loope
push
cmp
sub
clc
mov
sbb
inc
xor
xor
je
fs
mov
leave
aas
mov
ss
cmp
mov
rcrl
int3
mov
adc
scas
in
jo
push
cmpl
in
sub
out
dec
pop
and
xchg
mov
adc
scas
lods
mov
pop
fildl
in
mov
push
scas
sub
xlat
add
mov
xor
ds
cmpsb
sbb
test
mov
xor
or
add
lock
xchg
lock
sti
xchg
popf
xchg
ret
nop
xor
jae
outsl
repnz
filds
mov
push
aas
xor
xor
pop
lods
das
xchg
adc
pop
idivb
iret
stos
or
ja
pop
lcall
cmp
mov
inc
add
sbb
and
pop
push
xor
dec
fndisi(8087
jp
or
mov
dec
xchg
out
imul
add
jmp
rorb
xchg
xchg
mov
add
add
mov
scas
ret
iret
fmull
fs
push
mov
or
insb
add
cwtl
shlb
int3
hlt
test
in
es
call
cmp
lahf
lret
sbb
popf
lret
in
mov
mov
xlat
xor
dec
lahf
push
out
sbb
pop
fidivrs
cmp
xchg
dec
int
and
mov
jle
lods
shl
sub
sub
loope
mov
sub
adc
insl
cs
shrb
shl
inc
bound
push
jae
xchg
out
and
orl
pop
xor
jl
inc
les
push
outsl
and
xlat
and
mov
sub
sarl
and
ret
xor
test
xor
divb
push
in
jp
xor
dec
dec
ret
ret
data16
scas
repz
xchg
dec
jmp
and
sbb
push
dec
mov
fs
or
js
add
addr16
subb
and
es
rorl
jb
shrb
push
out
mov
sarl
lock
into
push
adc
test
imull
js
mov
nop
sub
push
mov
mov
ror
cwtl
ja
addb
add
leave
pop
sbb
inc
jb
cmp
jb
sbbl
sbb
fchs
push
ja
sub
sti
mov
hlt
pusha
int3
xchg
ljmp
fnsave
test
ret
cmp
mov
fadds
stos
cs
xchg
mov
push
xchg
adcl
jb
or
test
mov
lret
jg
pop
ret
mov
mov
gs
pop
xchg
sub
imul
push
xchg
cltd
cmp
xor
mov
cwtl
mov
inc
push
or
jp
jecxz
mov
data16
mov
outsb
out
mov
cmp
stc
dec
es
cmpsb
push
out
outsl
adc
std
scas
push
leave
xor
or
pop
cmp
stos
aaa
push
les
ds
add
fs
xchg
loop
and
mov
test
cmp
and
jb
or
mov
into
sarl
mov
inc
jnp
mov
jne
cli
scas
push
int
lcall
cmpsb
insb
sti
pop
mov
jmp
jmp
in
dec
subl
jo
or
and
fdiv
mov
divl
xor
mov
lods
or
out
xor
loopne
xchg
push
in
sbb
mov
mov
addb
push
out
adc
rcrl
lods
ss
mov
out
mov
bound
lock
pop
push
adc
je
mov
xor
inc
ds
mov
es
imul
je
push
pusha
insl
inc
test
test
mov
movups
pop
mov
fucomp
xor
int3
add
push
sub
in
pop
cmp
scas
xchg
in
xor
call
cwtl
xchg
pop
test
outsl
jne
call
or
in
icebp
out
sub
sub
push
mov
sub
pushf
sbb
in
push
bound
sbb
xchg
push
shr
popf
lock
xchg
daa
xchg
repnz
stc
and
push
insl
xchg
and
dec
lods
in
xchg
sbb
or
hlt
test
cli
mov
in
and
bound
pop
test
xor
je
cmp
pop
adc
xor
jecxz
fcmovne
test
sbb
sbb
push
xchg
pop
mov
xchg
adc
adc
pop
lock
xor
rorb
pop
mov
ficoml
loop
je
sbb
pop
dec
sbb
bound
aad
movsl
rorl
pop
sub
lds
dec
cmp
dec
mov
mov
sti
xlat
dec
sbb
jmp
inc
pop
sub
dec
and
inc
stos
lock
es
mov
cmp
es
push
cwtl
mov
mov
testl
dec
or
aad
mov
aaa
push
xchg
push
jmp
xchg
clc
cwtl
push
popa
rcr
push
test
aam
ror
mov
push
xchg
out
mov
and
mov
pop
xor
jno
ss
push
jle
cmpsl
fidivrs
loopne
mov
push
jb
lods
pop
jae
mov
xor
or
frstor
call
mov
insl
movsl
dec
ret
lods
out
sub
xor
xchg
push
mov
cwtl
adc
mov
stc
out
fs
adc
adc
sub
fcompl
enter
push
sub
out
pop
xchg
lret
pop
lret
xor
dec
outsb
jnp
xlat
dec
stos
insl
dec
sbb
or
mov
cmpsl
mov
mov
mov
insb
cltd
mov
adc
decb
jnp
pop
xchg
lea
sbb
les
lds
repz
add
push
xchg
dec
repnz
and
es
inc
cmp
aas
mov
shll
lret
stos
add
movsl
pop
xor
inc
sbb
mov
mov
mov
addr16
clc
in
sbb
sbb
lds
imul
xchg
cmpsb
mov
pop
movsb
push
sbb
dec
adc
xchg
push
lods
in
push
int
push
push
xchg
cmp
js
jmp
stc
fs
inc
lret
lock
ret
test
mov
push
test
and
push
ds
jg
cmp
mov
sbb
pop
push
or
fidivrs
sub
dec
out
testl
movsb
insb
fbld
leave
es
daa
ss
test
sahf
sbb
aas
stos
inc
and
jo
mov
sub
inc
pushf
or
xlat
nop
fs
movsb
mov
ss
enter
out
cltd
inc
out
int
xchg
adc
xorb
lret
lret
hlt
lock
hlt
rol
rcll
dec
or
sub
inc
xchg
pushf
loop
sar
adc
sbb
in
in
pop
xor
sub
cli
dec
cmp
mov
shrl
mov
inc
jl
xor
mov
addr16
fucomi
in
out
iret
jecxz
scas
inc
mov
xor
inc
mov
insl
or
std
insl
aad
shll
addr16
dec
inc
lea
test
lea
jmp
cwtl
jg
fwait
js
iret
adc
or
or
mov
imul
aaa
repz
aam
std
cmp
adc
dec
mov
mov
inc
push
mov
or
divl
mov
dec
jl
or
ja
inc
add
and
adc
fs
hlt
lret
sbb
popf
jg
add
pop
icebp
adc
clc
pusha
std
lods
popa
xor
pop
pop
shlb
or
int3
mov
mov
xor
lods
xchg
adc
int
push
popa
or
lcall
int3
stos
lods
call
stc
xchg
loopne
jmp
inc
enter
aas
dec
mov
adc
lods
push
lock
aas
xor
sub
jo
out
push
add
jg
dec
xor
inc
addl
int
xchg
popa
or
xchg
sub
shll
outsl
pop
mov
call
inc
push
push
jg
int3
adc
sub
adc
or
ret
push
xor
jmp
cld
ds
nop
mov
pop
adc
out
dec
mov
pushf
mov
or
inc
int3
fistpll
sti
cmp
sbbl
sti
dec
in
mov
and
jmp
xor
dec
jbe
in
mov
jp
in
jne
inc
xchg
or
lret
mov
int3
lret
sbb
jecxz
addr16
adc
adc
and
out
nop
or
pop
and
in
xor
mov
stos
fisttpll
push
mov
or
mov
popa
into
in
mov
mov
lcall
xchg
sub
fnsave
mov
mov
push
js
popf
andb
or
ror
and
pop
cld
jbe
dec
or
lea
roll
or
cltd
dec
sbb
mov
je
call
int3
shr
push
push
fcomps
push
xor
out
sub
call
inc
push
mov
out
bound
adc
push
es
cmc
xchg
sbb
call
xor
nop
cmpsl
lret
ds
pop
jle
hlt
sbb
int
mov
jno
nop
jo
clc
leave
adc
pop
lahf
or
les
clc
lock
psubb
xchg
cmc
aad
xchg
sarl
adc
mov
mov
out
popf
mov
cmp
or
dec
jne
enter
sbb
push
dec
clc
inc
xor
adc
ret
inc
jnp
shrl
lret
xor
push
adc
mov
pop
mov
aam
pop
ss
jp
nop
or
sub
mov
test
mov
xor
push
jmp
dec
sbb
out
sub
cltd
fsubl
lret
inc
mov
cmpsb
call
outsb
pusha
adc
aam
into
sub
jmp
inc
mov
cld
mov
mov
sarl
pop
out
in
testl
shl
push
dec
mov
sub
iret
imul
sub
movsb
lret
jle
js
aaa
jge
pop
mov
pop
rorb
mov
inc
cmp
pushl
push
jg
dec
shl
jae
out
adc
lods
inc
mov
int
cmpsb
inc
and
or
mov
cs
cmpsb
into
and
out
push
out
jns
sub
push
or
mov
cmp
add
js
sub
mov
adc
cwtl
jle
int
adc
movsl
jb
lock
daa
lock
aaa
inc
ja
mov
lahf
push
or
add
out
int
pop
or
int
push
leave
dec
outsl
xor
pop
cmpsl
out
xor
add
add
mov
out
into
mov
xor
repnz
ljmp
out
adc
push
pushf
inc
icebp
pop
incl
out
int3
cmp
pusha
cmp
cli
shl
popf
push
inc
repnz
sbb
lods
fsubr
sbb
fisttpll
push
sbb
ffree
xchg
mov
cmc
rcrl
jbe
outsl
dec
mov
xor
and
inc
leave
push
mov
bound
mov
jne
out
mov
jbe
in
pushf
pop
mov
xor
xchg
mov
pop
mov
and
mov
push
cs
xchg
popf
fdivrs
enter
imul
popf
xchg
int3
pop
cmc
and
pop
fisttps
mov
cmc
or
lods
adc
insl
sahf
ss
adc
ss
sbb
dec
sbb
pop
dec
mov
cmp
sub
cmp
xor
xor
into
push
jge
imul
dec
in
push
pop
dec
push
fwait
int3
or
outsl
cvtps2pd
cmp
lret
inc
shll
es
mov
add
jae
enter
negl
nop
xor
sub
mov
adc
scas
adc
pop
mov
mov
inc
push
shlb
icebp
lret
movsl
aas
pop
loop
sub
ret
enter
movsl
loop
mov
jbe
lds
stc
sub
pusha
dec
outsb
in
imul
test
fwait
pushf
xlat
mov
setge
and
insl
adc
dec
ja
sub
inc
jno
int3
and
mov
or
int3
push
cmp
daa
xchg
mov
xchg
jg
or
sub
jne
push
lds
imul
cmpsb
mov
roll
insl
gs
loopne
lret
mov
sbb
and
mov
ret
hlt
inc
inc
xchg
jno
sbb
pop
out
xchg
sub
pop
and
push
cmp
stc
or
push
lods
lcall
ja
unpcklps
and
arpl
aaa
xchg
fcmovu
add
fmuls
dec
inc
push
add
xor
jmp
pusha
call
inc
xor
adc
push
push
or
dec
sbb
inc
ljmp
pushf
push
fistpl
jbe
out
jbe
in
push
fwait
addb
push
je
mov
push
xchg
lcall
nop
inc
sbb
mov
cmp
mov
in
inc
out
xchg
in
cmpsb
mov
mov
lar
or
sub
jnp
cmp
call
ja
cs
outsl
call
dec
cmpsb
cmpb
dec
lret
nop
sub
mov
push
scas
outsb
adc
sub
mov
scas
sub
or
mov
or
fidivl
mov
pusha
mov
cwtl
jnp
add
sbb
xchg
jns
and
shlb
inc
js
lret
fwait
testl
mov
test
xchg
add
iret
gs
cwtl
cmp
sbb
jae
mov
cmp
mov
pop
push
push
aad
xchg
inc
aam
out
frstor
div
xor
dec
or
add
push
jo
iret
or
cmp
mov
jl
jge
sub
sub
fisubrs
jnp
inc
outsl
inc
cld
incb
rolb
and
call
les
clc
xlat
mov
mov
pop
imul
leave
jle
rorl
add
jp
arpl
cs
mov
cmpsl
lds
gs
in
pushf
fwait
inc
repz
lret
and
adc
pop
mov
inc
dec
jmp
sbbl
cmp
ds
cmp
lods
sub
adc
push
pop
mov
xchg
out
dec
mov
loopne
xchg
xorb
inc
jae
jb
loopne
cmpsl
and
out
es
fadds
mov
mov
sarb
aad
push
int3
inc
fdivrl
cmp
cld
sub
sti
cmp
ds
xchg
dec
scas
pop
ds
mov
call
loopne
xor
lods
pop
mov
cmp
push
xor
lcall
subl
sti
add
mov
jae
bnd
lret
hlt
add
fxch
adc
aas
jb
ss
inc
scas
in
sti
and
js
cltd
xor
push
iret
ret
fildl
jge
shrl
mov
shl
mov
mov
lods
inc
add
add
pop
loope
out
out
ss
sub
lock
inc
mov
xor
mov
jae
mov
push
fs
cmp
daa
fisttpll
sub
aas
cmp
mov
pushl
ss
push
jno
dec
imul
push
add
das
mov
xlat
mov
test
lret
add
shll
cmc
cmp
bound
nop
cltd
mov
xor
dec
in
fldcw
sub
add
lea
jl
hlt
in
xchg
add
xchg
inc
out
les
or
jle,pn
lea
sbb
cmp
int3
sub
rclb
call
scas
das
or
add
jo
out
pop
cmp
push
stc
into
pop
push
int3
mov
mov
movsb
loopne
xchg
cmp
out
xchg
loope
cmp
push
push
dec
pop
sub
xor
test
mov
inc
ljmp
mov
stos
dec
mov
inc
or
mov
mov
or
bnd
cmp
ss
movsl
and
adc
pop
dec
inc
mov
dec
mov
or
into
push
xorl
ja
or
addb
mov
rcrb
dec
sub
sub
xchg
sahf
mov
test
fs
das
dec
pop
pop
mov
mov
call
notl
xor
fs
insl
xor
test
in
lret
hlt
push
icebp
jae
mov
xchg
jo
pop
test
cmp
push
dec
rcr
test
or
adc
enter
or
add
sbb
lahf
mov
pusha
dec
leave
adc
popf
inc
in
mov
xchg
pop
in
xor
loop
inc
into
bound
aam
push
dec
lahf
jge
in
cltd
outsb
cld
pop
fbld
gs
push
inc
fldl
aam
jno
or
mov
into
les
scas
subb
je
mov
bound
test
jmp
xchg
and
repz
pop
xchg
cmp
cld
mov
jne
jg
push
and
bswap
lcall
push
cmp
xchg
xor
out
movsb
in
push
push
or
or
add
fstpl
nop
lret
push
mov
mov
xchg
xor
xchg
and
jge
dec
les
and
push
arpl
mov
clc
pop
ret
sub
clc
adc
push
hlt
dec
mov
pshufw
test
outsb
adc
or
dec
sbb
inc
outsb
jo
xlat
jecxz
insb
mov
xchg
mov
arpl
or
mov
jmp
mov
loopne
inc
rclb
lret
test
mov
test
sub
and
mov
or
lahf
loop
jae
pop
jns
jmp
dec
pop
std
or
out
xor
in
push
fcmovnu
bound
cmp
lds
into
add
cld
push
cmp
mov
call
mov
add
rorl
enter
push
push
mov
ret
stos
adcb
lods
mov
jbe
andl
std
xchg
nop
push
insb
insl
sub
push
jo
fsubrl
xchg
loop
dec
pop
out
dec
ror
jo
js
cli
push
dec
inc
xchg
sahf
or
lock
lret
xchg
test
push
sbb
cmp
fwait
and
xchg
push
xor
mov
repnz
popf
aam
fchs
imul
lea
pop
mov
pop
pop
pop
xchg
push
cs
scas
lret
sbb
dec
xchg
bound
jge
sbb
lcall
int
call
or
pop
push
mov
dec
adc
stos
jne
mov
xchg
xor
xor
dec
or
inc
or
or
pop
aam
sbb
push
mov
aas
vfrczsd
pop
cmp
inc
cmp
and
xor
lahf
add
aam
jbe
dec
je
push
cld
mov
xchg
pusha
xchg
cmovg
mov
lods
lock
movsl
push
cmpsb
into
xchg
leave
xchg
cmpsb
jl
mov
out
sbb
scas
push
sub
push
loopne
dec
aam
js
rorl
rclb
xor
frstor
je
push
xor
fsubrs
in
fistpl
push
adc
push
outsb
popa
jno
jge
and
jmp
pop
push
xchg
and
dec
pop
or
mov
inc
das
jae
xchg
test
jge
loope
mov
in
int3
sub
sahf
and
insb
mov
pusha
pusha
ds
or
sbb
inc
pmulhuw
mov
mov
or
std
fstpl
mov
sub
jp
or
xor
jno
cltd
rol
xchg
mov
in
sub
xor
rolb
std
test
add
add
les
push
mov
adc
idivb
lock
inc
mov
and
ret
sbb
mov
sbb
cmpsl
xchg
xchg
add
xlat
repz
jb
or
inc
fadd
xchg
mov
mov
call
pop
clc
in
xchg
sub
xor
bound
adc
inc
ljmp
inc
lcall
pop
jecxz
mov
pop
js
jnp
popf
mov
loope
lods
fists
daa
xor
push
cmc
pop
cmpsb
pop
and
out
testb
mov
out
sub
repnz
jo
hlt
dec
jb
int3
mov
mov
push
fnstcw
cs
dec
pop
cmp
in
fimull
sahf
fildl
sbb
fistpl
sub
outsl
cmp
jmp
sbb
and
pusha
sbb
in
jp
sbb
mov
testb
add
xchg
cmp
lds
xor
mov
xchg
pop
push
daa
mov
xchg
gs
xor
mov
inc
xor
push
sub
or
mov
ret
ljmp
and
dec
dec
mov
adc
sbb
sub
mov
fwait
xchg
xor
cwtl
push
inc
sub
and
sub
and
repz
stos
push
sbb
cmp
cmpsb
int
dec
dec
jle
das
xchg
fimuls
enter
ficoml
jnp
lock
scas
movsl
sub
fsubrs
movb
mov
xlat
repz
add
pop
loopne
or
ds
cmpsb
xlat
in
test
inc
call
xchg
dec
imul
xor
add
mov
and
adc
int3
pushf
imul
inc
test
push
dec
ds
mov
cmp
adc
mov
in
adc
add
repnz
scas
xorb
xor
inc
mov
test
adc
mov
mov
pop
pop
cld
sub
mov
sub
xchg
cwtl
xchg
or
iret
ret
push
mov
xor
arpl
sbb
pop
int3
pop
fimull
test
jmp
out
mov
stc
jl
ret
pop
fnsave
inc
inc
mov
mov
or
jae
orl
push
in
jbe
outsb
loopne
adc
dec
es
push
mov
inc
test
aas
xchg
dec
push
cmc
iret
inc
rcrb
daa
or
or
adc
cmp
mov
push
cwtl
test
fnsave
and
and
and
enter
mov
pop
test
cltd
ret
adc
pop
pop
xchg
mov
repnz
pop
cmp
cmc
pusha
sahf
dec
pop
jl
loop
je
cli
push
push
xor
and
iret
sbb
test
jl
adc
cmp
lahf
data16
dec
filds
add
lret
and
js
push
rclb
add
shl
jno
imul
aad
inc
int
lea
jmp
or
xor
jmp
mov
jmp
mov
adc
inc
pop
dec
pop
pop
mov
and
cmp
jnp
cmpsb
inc
in
inc
dec
icebp
mov
test
loopne
sub
imul
or
lret
int3
nop
pop
cmpsb
xlat
leave
sbb
imulb
inc
aas
test
test
ja
arpl
in
into
test
lahf
daa
loope
or
hlt
in
jo
int3
xchg
fcmovu
stos
push
rcr
sti
js
sbb
orl
in
leave
xchg
or
int3
je
cmpb
cmp
lea
jno
data16
add
push
mov
jecxz
sub
andb
out
and
scas
sbb
dec
stc
mov
sbb
push
pop
or
lods
mov
jecxz
push
cs
in
add
ljmp
shll
and
adc
sbb
add
test
dec
movsl
adc
sub
filds
add
jo
sub
mov
xlat
in
and
call
inc
bound
cmpsb
lods
sbb
movb
sbb
xchg
int
push
push
out
hlt
out
cmp
pop
shrl
dec
push
popa
or
mov
int3
iret
or
es
out
lds
mov
xor
mov
shlb
mov
adc
cwtl
insb
jecxz
das
sub
test
inc
add
cmp
cmpsb
pusha
int3
or
test
adc
subl
pop
xchg
outsb
sbb
mov
pop
and
pop
out
aas
jp
xorb
cmp
divb
lahf
movsl
xor
imull
test
add
out
sbb
ds
movsb
cmc
jg
cmp
lea
stc
arpl
movsl
jg
fcmovbe
insl
jge
xor
mov
stos
lds
jmp
subb
cltd
xchg
cmc
mov
jb
xchg
mov
sbb
mov
std
dec
xor
nop
mov
popa
stos
mov
mov
das
mov
js
push
cmc
es
inc
pop
ficoml
sub
add
int3
rorl
shlb
out
in
or
push
rorb
syscall
mov
jl
sub
insb
aas
xchg
repz
icebp
lods
in
cmp
rorb
pop
clc
jge
in
pop
lods
stos
sbb
repnz
movsb
lods
xchg
mov
jp
scas
jo
fs
aas
jne
jle
xchg
pushf
mov
test
shll
es
xchg
and
pushf
pop
jo
add
mov
xchg
dec
or
adc
cld
out
aas
adc
lcall
and
addr16
fyl2xp1
call
bound
jo
dec
sahf
ljmp
movsl
sbb
inc
fsts
xchg
mov
fisttpll
movsl
mov
sub
sbb
dec
sbb
pop
fsts
gs
lds
dec
mov
cmp
push
inc
lods
jo
adc
das
mov
fsubr
aaa
sbb
push
push
jge
add
shll
push
mov
insl
sub
jp
ds
jae
call
mov
add
xchg
out
xchg
test
imul
sub
sbb
ret
cmp
sahf
jbe
or
test
xor
popa
inc
test
xchg
add
sub
inc
push
daa
cld
or
push
cmc
mov
es
addr16
setns
mov
nop
mov
adc
dec
sbb
add
fdivp
lret
nop
mov
out
int3
mov
or
dec
cltd
sbb
adc
push
push
orl
outsl
movsb
mov
fucomi
push
aam
fsub
jb,pn
jmp
test
ret
out
aam
je
movaps
pop
adc
popl
cmp
push
lods
int3
pop
shr
lcall
or
mov
test
dec
push
sub
adc
ja
dec
mov
dec
std
call
or
xchg
test
lds
cld
cmpsb
loopne
sub
fistps
mov
cli
or
and
imul
pop
shrb
in
jl
repz
push
ss
outsl
push
mov
xchg
push
shrl
xchg
imul
add
ljmp
inc
movsl
dec
out
cmpsb
cmp
inc
xlat
aam
in
sub
sbb
pusha
popa
dec
call
sub
sub
mov
das
xchg
and
pop
in
or
sbb
daa
cmc
js
sub
and
pop
xchg
xchg
mov
cld
iretw
xor
pop
loop
mov
rorb
jbe
aas
cmp
push
cli
outsl
adc
sbb
mov
jecxz
jg
pop
mov
gs
fsubl
dec
sbb
decl
out
mov
jmp
shrb
sub
es
sub
add
mov
in
mov
mov
mov
xchg
ljmp
pop
add
xor
jg
clc
xor
rcrl
push
shrl
sub
and
xchg
jb
stc
aaa
repz
inc
enter
mov
enter
addr16
pop
xchg
scas
sbb
sbb
frstor
add
mov
lahf
fsubrs
dec
cmp
test
test
sbb
xchg
jae
dec
test
addr16
and
xor
sahf
dec
cltd
sbb
nop
xorl
mov
in
adc
cltd
xchg
cs
mov
and
mov
rolb
mov
jmp
sub
pop
adc
push
lods
jge
out
push
sub
adc
jg
insl
test
or
std
imul
mov
shrb
in
inc
adc
or
cmp
aas
test
cli
aaa
addr16
lcall
cmc
iret
rol
and
mov
sub
outsb
jnp
or
jnp
pop
decl
pop
gs
mov
sahf
jg
scas
out
cwtl
loopne
cmp
shlb
movsb
sti
orb
dec
scas
dec
sbb
jno
inc
or
push
incb
das
sti
or
insl
inc
orb
out
sub
out
jge
cmp
rol
ss
pop
mov
in
sub
outsl
test
shrb
les
lret
jp
mov
mov
cmp
fst
scas
sbb
stos
add
pushf
jnp
xor
pushf
mov
inc
cmp
addr16
cmp
sti
mov
adcl
ret
lret
jmp
inc
fmuls
mov
xorl
gs
push
mov
add
sub
arpl
mov
jbe
call
mov
xor
xchg
inc
nop
pop
mov
sub
add
mov
jnp
sarb
lods
push
sub
xchg
xchg
sub
iret
or
out
add
lods
fs
cltd
dec
or
pop
or
add
lock
and
add
xchg
sar
shlb
jl
std
pop
mov
push
mov
fisubrl
adc
cmp
out
pop
clc
or
mov
fldt
idivb
pop
or
mov
or
cs
divb
xor
xchg
imul
lret
int3
mov
int3
xchg
cmpsb
adc
insl
mov
jp
or
gs
push
fdivl
sub
push
hlt
xchg
in
jp
push
lods
adc
dec
sbb
or
xchg
jmp
orl
aas
or
lret
inc
ss
mov
dec
das
loop
xor
mov
xor
and
sbb
rcll
mov
mov
in
push
pushf
fnsave
cld
mov
xchg
imul
jle
bound
adc
push
js
stc
xchg
out
fdiv
ret
test
ret
and
pop
pop
add
adc
mov
ds
gs
cs
push
inc
aad
inc
inc
insl
lret
sbb
clc
xorb
mov
mov
sti
in
aas
sbb
dec
mov
pusha
or
or
or
std
xor
pop
lock
mov
and
rcrb
in
inc
fcoml
mov
test
xchg
sar
adc
pop
dec
sbbb
rorl
dec
mov
cwtl
fsubl
add
stos
ljmp
jo
jecxz
pop
loop
icebp
sbb
mov
fnstcw
jne
ljmp
add
cmp
movsb
out
jb
popa
loope
dec
pop
daa
ljmp
loope
mov
push
out
popa
push
inc
add
xchg
outsl
mov
sub
jns
sbb
addb
clc
adc
movb
iret
mov
push
xor
movlps
cs
push
sub
out
arpl
fs
ret
es
pop
mov
popa
pop
out
push
std
int3
and
sbb
pop
pusha
nop
lds
mov
or
movsl
divl
repnz
xchg
adc
jnp
cmpb
or
das
add
out
enter
pop
ds
sbbl
push
mov
out
test
jno
fxch
add
je
js
das
pop
and
or
or
xor
outsl
dec
push
lcall
xchg
mov
pop
cmp
dec
jge
enter
ds
pusha
adc
or
mov
jp
push
xor
rol
add
jmp
adc
dec
inc
mov
pop
sbb
repz
sbb
mov
jmp
rcrl
stos
xchg
cmpsb
dec
xchg
scas
xor
cmp
pop
std
jnp
push
xchg
adc
jmp
inc
add
mov
jmp
sbbb
pop
cli
dec
and
lods
enter
xchg
xchg
xor
into
and
mov
mov
cmpsl
in
mov
fstps
ss
addb
push
loopne
sub
xor
jae
orb
loope
cwtl
insb
popf
xor
mov
inc
mov
cmp
push
sub
dec
int
popa
mov
in
les
insb
mov
dec
insb
cwtl
sub
cmpsl
fdivrs
add
nop
push
sub
xor
ljmp
pop
cmp
jl
sbb
xchg
push
add
jmp
push
out
es
or
xor
test
or
call
sbb
inc
xchg
fists
jp
out
int3
mov
filds
sbb
divb
mov
dec
pop
leave
outsb
inc
sbb
or
pusha
mov
and
push
jb
pop
jnp
dec
and
xchg
into
enter
dec
rcr
sbb
int
outsl
mov
int3
outsb
inc
xchg
or
test
fldenv
shl
into
cltd
bnd
add
scas
lret
or
dec
push
clc
sub
push
push
push
mov
mov
insb
pop
pop
dec
adc
inc
es
sub
jns
daa
add
jb
aaa
adc
mov
in
std
ja
iret
dec
pop
or
jecxz
xor
jnp
dec
out
sub
ja
js
stos
aam
cmp
mov
daa
xorb
ds
jg
pop
insb
hlt
mov
dec
in
andb
nop
int3
repz
jge
hlt
arpl
mov
call
stc
dec
xchg
aaa
mov
fmull
add
rcll
xchg
cmp
or
sub
das
outsb
mov
xchg
rcrb
jae
into
repnz
ljmp
in
pop
cmpsb
mov
nop
jge
cmpsb
push
push
les
imul
inc
push
add
mov
loope
and
pop
xor
stos
fidivrl
or
and
faddl
push
push
mov
popf
mov
js
push
movsl
imull
add
shrb
push
cmpxchg
arpl
mov
cmp
sti
stos
jg
push
sub
jmp
lock
or
mov
addr16
movsb
and
iret
in
xor
sub
sbb
aas
stos
push
gs
jne
insl
jb
sub
mov
lods
jge
daa
cmpsb
jp
pop
mov
cmpsl
insb
lea
cli
mov
or
addr16
xchg
mov
or
push
pop
aam
insl
int3
cli
daa
xchg
out
in
dec
ret
test
cmp
push
dec
mov
cmp
mov
xlat
imull
mov
cmp
pop
repnz
jns
sti
insb
pop
inc
mov
cmp
lret
mov
pop
int3
pop
push
into
adc
or
icebp
cmc
rcpps
push
add
inc
pop
pop
jecxz
sti
cmpsb
inc
outsl
popa
lret
scas
inc
clc
xlat
shll
sub
enterw
jns
mov
add
jnp
rcl
cmp
cmp
adc
add
push
out
insb
cltd
jl
and
push
pop
push
adc
lret
sbb
lods
sbb
mov
lock
hlt
jb
mov
loope
sbbl
out
adc
inc
xor
ljmp
inc
xor
sub
adc
lods
loopne
out
jo
aaa
dec
xchg
or
out
sbb
rol
dec
inc
xor
jge
scas
adc
bound
push
jne
push
xor
inc
das
pop
ljmp
jmp
ds
jo
mov
mov
sbb
xor
pop
or
xchg
jo
pop
test
mov
sub
mov
test
test
test
mov
add
cmp
out
inc
xchg
loop
cmp
sub
dec
cmc
out
mov
xorl
jp
add
mov
xchg
xchg
inc
mov
push
jb
pop
les
js
test
sahf
je
mov
dec
sbb
cmpsl
insb
test
mov
lea
out
sub
pop
mov
mov
add
loopne
jp
call
sbb
mov
lods
mov
sbb
lret
lds
sub
add
xchg
sahf
ret
push
pop
cmpb
or
xor
mov
xchg
xchg
jge
adc
mov
cmp
add
adc
jmp
jne
movsb
dec
sahf
and
push
sahf
cmp
add
xchg
outsb
test
pop
in
movsb
xor
in
nop
xor
pop
jae
int
cmpsb
and
adc
clc
rorb
mov
push
je
insb
test
or
call
sub
lods
pop
sub
popf
fistps
pop
movb
sub
pop
cmc
sub
cwtl
and
test
xor
mov
loopne
repz
jne
jmp
insl
pop
xchg
cld
std
mov
xchg
xchg
pop
adc
cwtl
sub
fistps
mov
mov
or
xlat
mov
xchg
mov
push
jmp
jns
cmpsb
cmpsl
outsb
lds
and
into
ficoml
sub
cmp
xchg
pop
sbbl
pop
dec
pop
jecxz
xchg
xchg
push
add
mov
into
cmpsl
adc
mov
subl
pcmpeqw
inc
out
cli
jle
hlt
sub
loop
leave
jne
and
xor
lea
xor
pop
adc
sub
and
push
push
adc
jge
adc
pop
add
and
cli
sub
rolb
push
dec
loope
dec
in
adc
sbb
mov
inc
fcoms
mov
jno
dec
xor
aam
mov
mov
push
or
stc
sahf
and
pop
loope
iret
daa
in
and
xchg
addr16
sahf
rclb
push
in
add
inc
inc
pop
aam
scas
or
insb
adcb
jno
daa
cs
inc
rorb
ljmp
stos
test
je
inc
pop
mov
enter
clc
adc
mov
sahf
jb
inc
fmull
mov
sbb
xor
icebp
inc
fcompl
jae
cltd
or
sahf
xor
pop
shlb
cwtl
sub
std
aad
mov
js
ret
or
in
lret
in
stos
addr16
lret
xchg
inc
lea
jb
or
fwait
push
imul
std
adc
loop
ljmp
xchg
jl
push
xchg
shll
inc
xchg
ret
and
movsb
in
cmpsb
repz
dec
or
inc
test
orps
inc
sahf
into
sub
push
std
push
dec
popf
sub
aam
ret
inc
cmpsb
in
mov
scas
and
and
xor
mov
fmuls
pop
call
sti
enter
iret
in
int
xchg
test
test
pushf
add
mov
sub
xor
push
xchg
fistps
aam
adc
inc
mov
fiaddl
mov
push
xchg
adc
fiadds
aaa
fstl
in
loopne
sbb
js
sbb
push
movsl
add
pop
xor
shrb
or
test
ret
inc
lret
mov
inc
sub
lcall
in
mov
into
fldl
jl
loopne
push
pop
xlat
jo
imulb
jae
addb
mov
cld
loopne
sti
repz
push
lds
and
ret
test
adc
loopne
pop
sub
call
mov
lret
inc
es
inc
pop
cmpsl
lcall
popf
lds
adc
push
sbb
mov
out
rep
popa
xchg
iret
aam
fsubs
leave
outsb
mov
pusha
push
mov
cmp
imul
jb
arpl
pop
sub
and
int3
pusha
cmp
pop
outsb
das
ret
cld
decl
add
xlat
mov
out
test
push
xchg
test
leave
cwtl
sbb
clc
mov
and
mov
testl
cmovae
cwtl
xor
outsl
fimull
add
push
divb
cwtl
into
daa
mov
xchg
rclb
jle
mov
fisubl
ret
inc
jne
sbb
push
int3
mov
dec
lret
lahf
cld
sbb
out
xor
sti
add
lret
call
divl
shr
mov
and
aad
cltd
into
movsb
cltd
adc
outsb
ret
mov
in
repnz
xchg
jae
lea
jo
jns
stos
out
insl
push
push
pop
inc
jmp
fcomps
cmp
cmp
jb
fcoms
add
movsl
fwait
xor
pushf
pusha
fs
out
push
add
xor
jae
stos
je
in
es
cli
add
mov
mov
mov
ds
jo
jecxz
inc
ret
ljmp
pop
dec
rorb
xchg
jbe
and
rcrb
rclb
mov
xor
addr16
ljmp
sub
shrb
xlat
outsb
rcrb
lahf
and
inc
cwtl
sbb
pop
shlb
xchg
jecxz
ss
mov
iret
outsb
add
mov
je
dec
cmp
ret
mov
pop
rol
lds
mov
test
js
movsb
lret
inc
outsb
sbb
sbb
or
cwtl
in
int3
cmpsl
cmp
lds
pop
xchg
scas
out
or
push
mov
xor
arpl
std
stos
xchg
pop
or
pop
push
xor
cs
pop
insb
out
inc
jp
dec
js
and
cmpsb
jb
push
mov
div
pop
xlat
and
outsb
loope
es
xchg
sub
rep
jae
dec
xchg
sbb
inc
xchg
cs
jae
jmp
sbb
ljmp
lcall
jp
lods
lods
mov
dec
sub
lods
dec
xor
jge
daa
xor
xchg
pop
aam
setae
mov
loop
xor
pop
cmp
popa
jnp
sub
es
pop
adc
or
add
imul
stc
add
adc
mov
xorb
push
adc
xor
or
movsl
jnp
and
xor
outsb
xor
jno
jae
lcall
subb
or
mov
push
je
mull
insl
sub
scas
jbe
frstor
faddl
imul
fsubl
inc
inc
mov
push
dec
mov
in
dec
or
arpl
xchg
mov
and
push
and
xchg
imul
cmp
imul
lret
imul
sbb
push
mov
mov
jge
xchg
dec
call
and
and
inc
pop
sub
jbe
clc
adc
stos
mov
decb
xor
jg
mov
adc
push
push
mov
sub
ljmp
push
jne
sbb
sub
das
mov
rcl
jb
xchg
scas
inc
fcoml
xchg
xor
aam
dec
and
outsl
shrl
in
mov
cmpsl
pop
adc
je
addr16
xchg
leave
outsl
mov
and
add
cltd
and
decl
push
in
divps
and
icebp
pop
es
dec
mov
add
nop
movsl
pop
mov
and
pop
mov
sub
pop
in
jmp
pop
sub
adc
imul
pop
ret
pop
sub
aad
add
adc
or
pop
je
or
xchg
dec
enter
xchg
cmpsb
outsb
test
add
fs
cmpsb
in
loopne
push
adc
pop
je
aam
ja
cmc
lods
js
loope
test
or
push
outsl
xor
push
std
push
stos
pop
int3
adc
dec
or
mov
cmp
mov
es
mov
xchg
fdivrl
daa
jp
scas
repnz
mov
stos
jnp
repz
andb
adc
pop
aaa
sub
jmp
dec
add
pop
pop
xchg
lods
daa
xor
fs
je
out
mov
mov
les
push
add
pmuludq
dec
adc
imul
jle
stos
xor
pushf
mov
cmp
jae
cmp
pop
push
leave
xlat
xchg
xchg
sbb
pop
inc
sbb
sub
ds
cmpsb
jecxz
sbb
and
mov
or
repz
pop
ds
xchg
out
pop
movsl
xor
pop
aas
jg
pop
dec
lods
dec
dec
mov
sub
mull
sbb
dec
pop
mov
mov
pusha
xchg
push
push
pop
jecxz
addr16
mov
xchg
in
popf
insb
jne
cwtl
ror
sbb
daa
add
lcall
mov
mov
enter
outsl
push
push
cmp
adcb
pop
mov
mov
test
outsb
cld
xor
xor
push
and
mov
mov
icebp
daa
sahf
fmul
jae
xchg
data16
fdivl
js
hlt
enter
push
lods
std
stc
fdivs
jmp
mov
nop
lret
in
pushf
into
fistl
mov
rclb
adc
gs
rolb
push
fwait
mov
dec
dec
addr16
test
dec
inc
sub
push
push
gs
cmp
call
sub
xchg
pop
ret
sti
es
imul
out
or
rcr
inc
hlt
les
or
add
add
xchg
jmp
notl
daa
mov
dec
mov
mov
cmp
inc
ja
sarl
repz
enter
sbb
jnp
push
dec
mov
mov
mov
xchg
inc
push
add
jmp
pop
xchg
aad
push
repnz
pop
call
inc
sub
pop
scas
adc
jnp
inc
ss
fidivrs
sub
push
pop
jo
pop
negl
xor
xor
push
es
sbb
jb
jle
fdivrs
sbb
sbb
push
push
xchg
aaa
or
cmp
std
mov
and
jne
and
adc
fnstenv
lods
imul
cltd
sti
popf
pop
ja
add
sahf
js
test
testl
orb
push
stos
bound
out
xor
mov
cs
sub
rorb
or
pop
in
lds
shrl
leave
mov
int3
xchg
repnz
add
enter
pop
cld
dec
mov
mov
test
or
jns
and
jae
push
in
sbb
xor
jmp
and
mov
pop
pop
fisubrl
repnz
shll
add
clc
rorb
outsb
mov
or
dec
bound
or
test
mov
sub
jg
sbb
push
popa
popa
incb
jae
xor
or
xchg
addr16
aad
repnz
sbb
loope
cmp
push
int
sbb
mov
fnstsw
mov
test
lock
sub
xor
dec
push
in
fcom
shlb
loope
adc
sub
lds
add
std
adc
sahf
and
push
es
je
lret
and
mov
pop
pushf
outsl
orb
pop
inc
leave
add
lock
lds
pop
add
lret
stos
mov
iret
pop
xchg
dec
imul
or
mov
iret
xchg
mov
fcoms
push
fnstcw
mov
scas
popa
int
stc
inc
fimull
or
hlt
and
hlt
sub
psubd
test
jo
and
loop
xchg
mov
cld
push
mov
inc
iret
cmp
jbe
outsl
xor
sub
movsb
xchg
idiv
adc
negl
dec
mov
or
outsl
xor
push
jo
lret
dec
outsb
ss
xor
nop
clc
pop
jb
mov
xchg
aaa
int
clc
movsb
jge
daa
cld
dec
adc
cmp
mov
daa
pushaw
adc
xor
jo
push
ret
rcll
in
cltd
and
dec
push
es
lds
push
push
daa
mov
ret
clc
xchg
push
add
imul
repnz
sbb
or
mov
pop
pop
jmp
in
jp
call
pop
clc
or
pusha
outsb
xorb
jp
lods
insb
mov
jp
lahf
push
test
xor
fs
push
adc
ss
movsb
fdiv
fldcw
data16
repnz
inc
adc
cmp
fisubs
scas
mov
and
and
je
jl
fmul
pushl
pop
subb
or
xor
inc
stos
ficoml
jp
sub
xchg
outsl
pop
je
daa
iret
ficoms
push
movsb
sbb
mov
xchg
clc
test
in
jl
and
sub
jmp
jne
mov
dec
mov
in
mov
sub
mov
cs
stc
push
sub
clc
sub
or
xchg
add
sbb
pop
in
push
jle
cmp
cmp
adc
das
test
fmull
shlb
sbb
xor
insl
insl
addr16
add
push
cmpsl
int
in
mov
cmp
outsl
jle
int3
fwait
pop
sbb
sbb
mov
scas
sub
inc
adc
pushw
jge
mov
int3
dec
sti
jg
pop
xchg
test
int3
mov
dec
dec
sub
int
sub
adc
and
adc
je
mov
push
sub
add
and
xor
sub
push
shr
or
pop
or
orl
lahf
push
push
pop
push
xor
push
adc
adc
pop
pushf
sub
gs
mov
mov
add
divl
bound
push
xchg
dec
mov
inc
sbb
sbb
lock
fwait
mov
test
insb
adc
sub
or
iret
scas
jge
sar
push
jb
xor
lods
daa
jecxz
sbb
xor
xor
cmc
mov
jmp
pop
and
adc
push
cld
popa
dec
and
adc
add
inc
in
out
push
sub
push
ja
push
adc
xchg
mov
les
xor
outsl
out
push
ljmp
mov
sub
imul
imul
xchg
or
mov
mov
xchg
xlat
rorb
cmp
imul
mov
shll
out
adcb
call
std
bound
pop
push
pop
jo
push
std
push
outsl
sub
mov
lret
push
sub
push
mov
push
dec
sub
cmp
adc
loop
dec
cmp
into
es
lds
dec
enter
mov
mov
or
add
mov
hlt
adc
movsl
cmpsb
test
pop
mov
mov
mov
fs
push
in
dec
sub
or
sbb
add
adc
sarb
cmp
pop
cmp
insl
insb
fsubs
and
clc
mov
hlt
and
hlt
cmp
mov
aam
adc
xchg
hlt
iret
push
push
hlt
lcall
fprem
rcll
hlt
aad
xor
jae
push
xchg
je
xchg
decl
pop
int
xor
sub
or
pop
adc
subb
mov
call
ds
pop
and
mov
leave
stos
push
popa
mov
push
in
mov
scas
adc
daa
push
dec
or
cmp
inc
sbb
sbb
push
cld
in
lock
add
xor
lret
or
andl
sbbl
lret
sub
fabs
mov
pop
jg
jno
loopne
fdivrl
dec
das
int3
sbb
xor
mov
xor
sbb
mov
mov
lret
dec
insb
sbb
aam
cmc
xchg
clc
rorb
das
in
repnz
sbb
cmp
fsubr
jp
push
mov
push
add
pop
int3
xor
adc
hlt
inc
push
add
pop
adc
je
push
and
stos
dec
xor
pop
adc
sbb
sbb
pop
fsubrl
cmp
outsb
je
out
psadbw
into
cmp
sub
enter
into
jns
sti
jle
xchg
icebp
adc
xor
addr16
lret
add
jns
test
push
xlat
push
jns
rolb
out
rorl
rorl
push
dec
mulss
adc
data16
mov
push
mov
inc
sbb
imul
push
jne
pop
daa
add
icebp
push
pop
xor
adcb
dec
jae
call
test
les
push
es
divb
sbb
mov
data16
cwtl
or
inc
arpl
cld
dec
leave
pop
and
aaa
jecxz
xchg
js
vmovhpd
add
pop
fcomps
push
je
roll
sar
pop
lcall
cld
mov
xor
repnz
mov
fdivrl
lea
movsb
pop
arpl
les
push
in
mov
xchg
jmp
ja
mov
pop
xchg
or
popf
sub
bnd
cmpsl
loopne
mov
lock
mov
fdivs
cmp
fimull
or
dec
sbb
lock
inc
sar
adc
js
out
cli
imul
sub
add
outsl
pop
idivb
rcrl
pop
add
dec
int
sbb
jle
ss
sbb
hlt
adc
add
ds
sbb
dec
dec
push
xchg
arpl
adc
inc
lcall
xchg
icebp
jae
insl
call
adc
and
xor
jl
jmp
xor
or
mov
jno
jg
mov
hlt
cmpb
sub
pop
js
dec
add
xchg
adc
mov
imul
outsl
lahf
call
sub
xlat
cs
mov
test
sbb
js
iret
xlat
and
lods
aaa
addb
or
cmc
lret
mov
pop
jp
mov
std
negw
dec
jb
cmpsl
or
and
dec
and
jl
imul
cmp
adc
inc
inc
xchg
add
push
push
int3
and
sbb
lcall
sub
mov
push
adc
xchg
das
stos
sub
sbb
outsb
rcrb
jg
movsb
lcall
inc
mov
mov
push
jg
adc
jp
insl
add
push
mov
testb
push
mov
cmpsl
iret
xlat
fwait
adc
xchg
push
dec
cs
adc
dec
ret
dec
push
push
data16
lret
in
mov
mov
out
stos
cmp
sub
inc
sub
sub
mov
jne
sub
and
leave
sub
push
xor
xchg
in
mov
repnz
inc
cs
xlat
add
sub
mov
loope
cmp
xchg
jae
aam
sbbl
or
dec
push
or
adc
xorb
in
jbe
fsubrs
mov
test
adc
loop
xchg
lock
iret
icebp
test
rcr
gs
add
test
dec
adc
cmpsl
xchg
mov
inc
push
inc
roll
or
push
orl
push
pop
dec
int3
or
push
jecxz
fucomi
mov
mov
loop
fmuls
dec
cld
hlt
mov
cld
mov
dec
int3
add
add
add
repz
push
mov
or
push
or
ss
jg
loope
je
sub
sub
iret
and
xor
ja
je
sahf
cmp
int3
les
sub
or
jbe
add
pop
fbstp
test
pop
pusha
out
cwtl
negb
inc
add
jae
or
or
and
mov
fsubrs
insb
in
cli
mov
push
mov
or
push
sub
and
push
ret
cld
lcall
pushf
mov
popa
in
pop
jmp
in
jge
push
test
push
movsl
pop
jl
lock
ljmp
pop
add
popa
fbld
xor
cmp
add
arpl
leave
xchg
add
loop
popf
movl
scas
jno
fnsave
sbb
xor
xchg
dec
xlat
mov
test
inc
inc
in
les
aad
push
inc
mov
lods
adc
push
test
test
dec
int3
dec
jo
sub
sahf
movb
pusha
pop
into
sbb
jge
aas
jle
das
mov
adc
pop
cmpsl
and
out
jl
pushf
inc
shl
xor
clc
dec
fdivs
inc
mov
jnp
repz
jae
cmp
dec
nop
jne
ss
dec
xor
rolb
nop
outsl
jbe
mov
cmp
push
gs
test
xchg
xor
fadds
jl
out
xchg
stos
leave
xchg
fdivp
cmp
and
cmpsb
sahf
into
iret
scas
outsl
and
jno
stc
aas
mov
adc
push
sbb
leave
mov
stc
in
insl
mov
sub
push
or
mulb
daa
neg
cmp
push
pop
insb
sbb
loopne
lea
out
cwtl
push
cli
outsb
xchg
inc
jno
int
cmpsb
jl
dec
xchg
icebp
pop
ds
pop
sub
cmc
cwtl
sbb
fistl
pop
lahf
sbb
cmp
mov
mov
test
or
loopne
push
popf
gs
mov
mov
gs
mov
aas
xor
add
mov
ss
xor
mov
cmp
popa
pushf
mov
mov
jbe
mov
pop
adc
mov
andl
stos
mov
cmp
cmp
dec
ja
and
or
sub
dec
pop
mov
cmp
jmp
cmp
test
loopne
fimull
inc
test
mov
mov
ficomps
rep
fbld
sbb
daa
outsb
stos
je
divl
orb
rorl
sub
inc
push
jl
repnz
lock
cmp
mov
decb
jae
mov
and
xchg
xor
push
lahf
jae
mov
push
push
enter
sub
mov
out
mov
pusha
test
cltd
or
cmp
cmp
test
stos
mov
outsl
out
mov
xchg
cmp
lret
sahf
cmp
cmp
popf
fcmove
inc
imul
cmp
ss
clc
mov
lret
mov
push
mov
insb
adc
add
filds
fs
jecxz
sbb
fbld
je
push
xor
nop
and
push
lahf
pop
adc
pop
repz
dec
nop
dec
or
sbb
mov
outsl
push
adc
in
notb
or
test
mov
scas
aad
mov
xchg
pop
mov
push
loope
mov
imul
dec
inc
lea
lret
push
and
sbb
sbb
adc
outsl
xchg
xor
or
xchg
sub
je
mov
sub
scas
jge
xor
mov
insl
cmp
jp
inc
call
sub
mov
stos
outsb
mov
mov
rdtsc
ret
ljmp
adc
push
mov
in
jp
mov
jb
out
and
cmp
hlt
jne
lret
push
aas
pop
ret
push
or
enter
test
bound
pusha
dec
and
cmpsb
cltd
daa
add
popf
ja
inc
std
mov
cmc
jne
repz
pop
sbb
imul
pop
add
sub
fwait
sahf
adc
test
or
mov
bound
sub
push
push
mov
sub
imull
push
mov
pop
cmpsl
adc
cmpsl
imul
mov
ss
out
mov
cwtl
lcall
sub
fldcw
mov
je
stc
push
bound
fbstp
fimull
fsts
or
insl
xchg
or
cmpsl
xchg
and
sub
insl
hlt
push
mov
and
add
push
xchg
sarb
push
cmp
enter
xor
mov
add
or
inc
sub
rcll
subb
in
mov
xor
loope
xor
mov
cmpl
or
test
dec
cmp
push
popf
mov
inc
or
imul
xlat
fadds
sbb
inc
cmpsl
cmp
rclb
insb
bound
or
jl
inc
pop
and
arpl
fidivrl
push
std
add
push
and
xor
xchg
dec
cmp
jbe
in
push
aam
loopne
addr16
xor
stc
pcmpeqd
sahf
cmp
sbb
cld
rolb
sbb
sbb
fmuls
cli
dec
push
add
xchg
out
fnsave
out
or
sub
scas
sarl
fmuls
xor
loopne
cmp
daa
popf
sub
mov
dec
mov
mov
cmp
bswap
pop
pushf
push
xchg
or
addr16
inc
adc
dec
mov
or
cmpsl
faddl
pop
movsl
or
int3
and
and
dec
call
push
xorb
push
inc
add
or
dec
outsl
adc
jb
xchg
jl
inc
xor
or
jp
loop
adc
or
nop
jo
inc
xchg
inc
adc
lds
out
outsb
ss
or
cld
mov
jo
adc
mov
or
push
sbb
push
pop
in
test
imul
adc
je
mov
stos
push
or
cwtl
cli
out
xor
stos
xor
adc
cmp
sbb
addr16
data16
je
xchg
or
sub
mov
out
lret
sbb
xor
jp
mov
push
lret
imulb
repnz
cmp
and
loopne
xor
xor
xor
add
mov
shrb
iret
push
lea
xchg
leave
adc
xor
push
in
daa
push
xchg
wbinvd
xor
pop
sti
jno
fs
fisttpl
adc
inc
dec
adc
test
leave
cmp
loope
xor
arpl
dec
out
rol
test
test
and
mov
test
push
scas
enter
and
pop
adc
out
mov
ljmp
jb
push
jbe
testl
push
out
cwtl
gs
out
stos
jp
mov
outsl
xor
hlt
rclb
or
jmp
repz
add
sub
pop
add
outsb
xchg
es
leave
clc
add
mov
jbe
sbb
ljmp
movsb
push
or
test
cltd
adc
je
iret
push
xor
pop
xlat
xlat
shrb
pop
daa
pop
fldcw
mov
jl
sub
push
stos
inc
sub
pop
adc
xchg
test
jmp
xchg
nop
rorb
cltd
shrl
add
rcll
mov
shrl
jmp
xor
and
inc
popf
add
orb
daa
jo
cmp
push
adc
js
in
sub
sbbl
inc
pushf
out
mov
movsb
jmp
xchg
fs
jecxz
sbb
lahf
xchg
sub
sub
lods
mov
xchg
jns
popa
lahf
movsl
lods
popa
xlat
arpl
shlb
fstpl
mov
xchg
in
loope
dec
lcall
inc
lea
xchg
dec
int3
leave
shl
lahf
imul
jo
add
or
hlt
mov
dec
cmp
arpl
ljmp
pop
adc
dec
pop
outsl
adc
xchg
dec
push
aas
mov
xor
cmovb
jecxz
jne
aaa
push
out
sbbl
dec
enter
push
std
rcll
loope
gs
rclb
ljmp
in
lret
xor
xchg
xchg
shlb
fs
int3
xor
shlb
cltd
add
adc
adc
enter
repnz
push
loope
dec
cmpsl
enter
shrl
xchg
ja
out
dec
inc
in
loope
or
add
pop
lahf
mov
push
dec
jbe
in
dec
and
mov
mov
xchg
xchg
push
add
or
jns
in
pusha
pop
pop
pop
xor
push
mov
xor
js
les
int3
jnp
repnz
sbb
dec
sbb
pop
enter
cmc
and
jg
popa
jnp
clc
cmp
inc
xor
xor
add
sub
aam
jecxz
push
cmp
push
and
mov
out
push
out
adc
aas
mov
mov
pop
loopne
fimull
lret
mov
mov
or
out
inc
hlt
stos
add
jmp
jbe
test
xor
cmp
jp
xor
adc
inc
cwtl
js
aaa
movsb
aas
dec
push
sub
xor
push
xchg
xor
fisubs
push
jbe
mov
and
jns
das
or
mov
jbe
pop
fistpl
xchg
nop
xchg
mov
and
dec
jge
cld
sarb
and
adc
inc
pop
sbb
sbb
pushf
lcall
sbb
stos
sub
stc
mov
mov
hlt
push
jp
adc
les
and
in
mov
xchg
stc
pop
push
cltd
imulb
jl
xor
ret
mov
pushw
or
into
mov
loopne
mov
xor
addr16
lret
sub
or
pop
mov
ljmp
fistps
push
sub
imul
sbb
cli
mov
rclb
add
popa
add
lcall
or
sub
mov
sub
test
add
sti
fistps
gs
addr16
or
cwtl
jbe
outsl
test
add
loopne
push
frstor
in
jp
sub
dec
ds
sbb
mov
fidivl
icebp
out
sarb
hlt
jno
pushf
or
stos
stos
xchg
clc
loop
pop
add
out
imul
popa
cmp
push
ret
jnp
mull
xchg
mov
push
jg
rorb
xor
movb
pop
push
mov
div
mov
ljmp
fnstsw
add
jno
xchg
fildl
adcb
cltd
enter
mov
int3
imul
cmp
lea
sub
dec
movsb
ss
call
or
jmp
add
add
pop
test
pop
mov
add
pop
dec
addr16
and
cmp
mov
cmp
cs
jmp
mov
sbb
outsl
lret
or
in
inc
popa
add
jmp
push
xor
mov
ret
adc
mov
mulb
repz
out
adc
sbb
adc
sbb
pop
int
xor
jns
jl
and
jge
jge
icebp
jp
jmp
icebp
cmpb
jmp
or
cmp
ss
pop
push
movsl
arpl
xchg
cmp
je
mov
push
and
aas
jne
das
icebp
call
mov
pop
call
insb
cmp
xchg
inc
sub
mov
pop
or
mov
sbb
or
out
dec
jmp
or
js
jg
ds
push
mov
stc
call
mov
pop
call
push
les
adc
callw
mov
pop
adc
bndstx
test
add
mov
inc
out
lret
pop
pop
or
dec
lret
sub
xor
xchg
shl
dec
sub
cmp
adc
out
push
pop
sbb
decl
add
adc
mov
or
xchg
comiss
xchg
nop
out
adc
jmp
or
xor
in
dec
jmp
pop
pop
cmp
cmp
dec
call
dec
leave
dec
insb
adc
in
das
leave
dec
dec
dec
sarl
sub
dec
dec
shrl
adc
out
xchg
sub
das
dec
pop
sub
roll
pcmpeqd
push
out
lret
pop
jp
dec
inc
clc
ds
or
and
out
dec
pop
loop
outsb
pusha
ror
dec
outsb
sarl
or
dec
push
shll
imul
lret
mov
xor
cmp
nop
sub
or
insb
cvtps2pi
mov
push
mov
jle
pop
mov
xorb
out
inc
pop
clc
push
inc
es
jbe
jb
pop
leave
aas
xchg
jg
inc
imul
call
outsb
cs
test
or
and
mov
dec
dec
fistps
fcmovnb
outsb
mov
popa
push
dec
rdtsc
mov
jp
inc
push
sbb
dec
xchg
lods
fiadds
or
push
jecxz
rol
add
sub
cmp
add
dec
dec
xor
mov
mov
jno
dec
or
or
lahf
dec
dec
cmp
je
sbb
xor
stos
or
sub
jl
and
pop
inc
xor
out
dec
pushf
js
inc
fisubl
andb
or
push
clc
test
lds
dec
and
and
and
dec
loopne
add
jl
aam
stos
mov
sahf
clc
mov
mov
mov
in
out
add
mov
lods
les
sbb
int
ret
cmp
dec
ljmp
cltd
fisubs
sbb
test
das
and
mov
test
aas
cmc
fwait
jmp
test
sbb
lcall
imul
push
dec
xor
aaa
pop
sub
jb
push
mov
mov
lea
mov
push
lods
or
cli
xor
cmp
pop
shrl
sbb
mov
sbb
or
xchg
mov
pop
nop
dec
std
pop
jno
sbb
loop
out
mov
jmp
mov
pop
cmpsb
sbb
push
gs
jne
out
ljmp
jb
mov
jns
and
andb
jle
push
psubw
insl
lahf
pop
jmp
lock
pop
sub
pop
jmp
mov
imul
cs
test
nop
add
fdivrs
std
mov
sbb
fsubrl
les
cmp
or
push
sub
cmpsl
iret
and
mov
hlt
scas
adc
mov
out
lods
push
scas
lock
pop
cmp
call
aad
imull
add
xlat
dec
aam
and
add
cmp
pop
push
adc
push
dec
xor
aaa
jmp
in
loop
and
mov
push
sub
xchg
or
push
imul
outsb
sub
iret
add
lcall
pop
hlt
clc
cmp
push
or
lods
lret
sahf
xor
sub
stc
xchg
aaa
in
or
xor
in
or
xlat
pop
aad
adc
dec
mov
and
out
orl
pop
cmp
in
or
push
daa
jae
cmp
cmp
xor
lahf
stos
adc
push
pop
test
sti
dec
pusha
adc
es
out
mov
imul
sbb
sub
jg
mov
sub
je
jbe
cmp
and
mov
out
aam
jmp
sub
push
ss
jnp
dec
nop
push
dec
mov
mov
lods
xor
mov
std
dec
sets
cmpsl
dec
popf
in
mov
jl
psubusw
cmp
xor
xor
lcall
push
xor
mov
push
adc
sub
insl
hlt
xchg
cltd
xor
sbbb
adc
push
xor
jno
sbb
jg
insl
push
adcl
mov
and
xor
add
mov
daa
gs
or
jecxz
cmp
negl
sti
dec
mov
js
xchg
subb
loopne
scas
dec
enter
pop
pop
xchg
clc
push
adc
ljmp
sbb
push
or
mov
sbb
xchg
jnp
dec
jg
dec
dec
jg
push
out
sahf
mov
sub
int
insb
jge
movups
mov
xchg
cmp
dec
dec
jl
cmpsb
rorb
lret
xchg
pushf
insl
daa
sbb
in
lds
sub
dec
push
cs
sub
sub
xchg
hlt
push
jnp
shll
pop
or
jb
push
xchg
insl
mov
dec
push
jne
sub
out
mov
in
mov
push
enter
fdivrs
pop
push
les
sar
data16
or
ss
xchg
insl
xchg
sbb
or
sub
sub
mov
push
cwtl
gs
adc
test
xor
dec
cmpsl
bswap
sub
xchg
rolb
push
dec
fmull
int3
xor
sbb
pop
xchg
sbb
cmpsl
dec
sub
push
mov
jo
lcall
repz
jl
or
nop
sub
cwtl
movsb
push
das
dec
mov
int3
add
call
push
dec
loopne
jae
cld
loope
push
in
mov
push
mov
iret
push
neg
sub
xchg
jl
pop
dec
mov
out
or
aam
loop
and
in
push
push
in
mov
push
or
add
xor
cmp
in
dec
das
add
pop
out
aam
sub
lds
out
in
ret
or
pushf
mov
cmp
clc
jbe
inc
cmp
sub
mov
push
sub
js
jp
cmc
add
dec
ret
xor
stos
push
test
in
pusha
mov
ror
fildl
xor
fcompl
adc
mov
cwtl
faddl
add
xor
xchg
rcr
pushf
ja
leave
adc
xor
aaa
mov
inc
pop
or
pop
repz
iret
mov
sbb
pushf
mov
dec
xchg
sub
cmp
pushf
xor
adc
loop
xor
and
cli
dec
cmp
int3
mov
jne
repz
ja
imulb
cmp
jecxz
jnp
lock
mov
aaa
scas
push
or
test
jecxz
inc
mov
ds
outsl
mov
enter
adc
mov
arpl
mov
outsb
push
aaa
dec
mov
addr16
xor
jp
out
stos
jae
pop
lods
pop
dec
sub
xchg
adc
push
adc
or
cmpsb
and
das
mov
xchg
jp
in
push
jnp
dec
push
imul
cli
push
pop
or
or
mov
sub
adc
pop
cmp
xor
jb
xor
sub
pop
cmpsb
mov
pusha
cli
lods
mov
mov
mov
hlt
xchg
rcl
inc
lods
fimull
mov
lahf
cmp
scas
jnp
cld
mov
das
push
dec
movsb
mov
mov
jmp
push
notb
push
sahf
repnz
das
pop
pusha
inc
bnd
pop
pop
repz
xchg
std
stos
lret
ss
out
lret
enter
sbb
cmp
inc
mov
push
xor
in
jle
lods
ja
es
push
xchg
pop
pop
or
jae
int3
je
orl
in
sbb
jecxz
arpl
lock
mov
aad
sub
es
push
push
or
nop
mov
cld
mov
fisttpl
sbb
push
scas
mov
or
movsb
lret
rclb
or
in
and
sub
test
or
cmpsl
ja
dec
pop
enter
cli
mov
scas
add
outsb
xchg
push
inc
jns
dec
fwait
daa
mov
or
and
dec
mov
adc
fwait
std
test
int3
cmp
scas
and
xchg
jne
addr16
cmpsb
mov
jnp
mov
std
inc
inc
xchg
push
hlt
arpl
adc
lcall
icebp
js
xor
leave
lock
ss
push
or
es
je
add
mov
imul
arpl
push
int3
cmpsb
lock
sub
cmc
lds
out
xchg
hlt
xor
mov
jmp
inc
push
test
xlat
fdiv
fidivs
xor
mov
mov
cmp
sbbb
jnp
and
cmp
add
adc
fcom
inc
jmp
dec
mov
pop
insl
jb
xor
fninit
pop
adc
jge
pop
pop
adc
push
push
adc
lods
rcrl
dec
push
mov
adc
outsb
fcoml
js
cld
ja
mov
push
test
je
xor
dec
push
mov
inc
jmp
enter
sarl
push
adc
lret
push
adc
lods
xchg
shrl
add
rcrl
push
add
daa
jg
adcl
sbb
outsl
aas
fisttpll
jne
dec
mov
hlt
pop
pop
in
and
mov
jne
pop
mov
mov
and
mov
mov
movsl
movsb
push
pop
dec
dec
or
xor
test
dec
adc
mov
test
sub
mov
pop
cs
test
pushf
les
dec
inc
push
jmp
pusha
jecxz
push
or
lret
or
ss
cmp
xchg
or
push
xor
fs
add
or
and
cld
push
sahf
and
mov
xor
jge
jle
pop
sub
stos
hlt
aad
aad
mov
sub
lahf
test
out
nop
adc
in
adc
stos
call
pushf
dec
mov
cltd
mov
insb
mov
mov
adc
dec
data16
adc
sti
mov
pop
loopne
cmp
lret
push
jb
or
outsl
rcll
add
ja
mov
xor
mov
add
mov
fxch
and
and
arpl
dec
adc
adc
sub
das
adc
in
dec
mov
cmp
or
push
and
pop
shrb
mov
mov
sub
cmp
xchg
or
repz
mov
rcll
mov
mov
mov
xchg
mov
cmpl
mov
jmp
xchg
pop
rclb
ss
xor
cmpsb
scas
outsl
mov
in
add
in
mov
fcoml
in
jecxz
push
and
sub
test
xchg
mov
mov
xchg
jb
ljmp
xor
or
leave
dec
out
aas
dec
xor
sbb
jmp
stos
push
xor
nop
push
lret
and
push
divb
inc
lock
xor
xchg
cli
mov
xor
mov
into
mov
and
xchg
jle
mov
test
sbb
data16
outsb
push
imul
sbb
inc
sar
dec
sbb
sbb
cwtl
push
push
or
negl
jmp
inc
pusha
push
arpl
mov
dec
fcompl
jl
push
cmpsb
outsl
jge
adc
rcrl
xor
sbb
loopne
cs
and
inc
inc
test
lcall
mov
cmp
inc
add
loopne
push
sbb
ljmp
inc
dec
add
add
imul
fidivrl
cwtl
mov
int
lret
leave
popa
mov
push
bnd
jnp
adc
rorl
pop
lods
lahf
and
stos
xor
sub
pop
test
pop
test
dec
insl
sbb
aas
loopne
cmp
ror
sahf
sbb
mov
fistpll
adc
cmpb
push
mov
sbb
add
jmp
xor
xlat
push
les
scas
aam
xor
data16
inc
add
ljmp
fs
jmp
cmpsl
jae
cmp
dec
cmp
mov
xchg
pushf
fiaddl
mov
lahf
and
loopne
and
mov
and
mov
aam
jg
gs
sub
jno
xor
mov
nop
or
xchg
pop
aam
xlat
les
icebp
or
sbb
inc
xor
xchg
mov
out
inc
movsl
xor
ja
xchg
sahf
adc
jmp
cmp
push
push
addr16
and
cltd
loopne
sti
jne
and
stos
test
cmp
ljmp
sbb
test
xchg
gs
mov
cmc
jmp
aaa
pop
adc
pushf
jmp
push
in
xor
into
mov
xchg
adc
insl
into
push
aas
jbe
push
mov
xchg
push
div
daa
popf
cs
add
test
push
cmp
fs
push
add
das
std
stos
aam
int3
inc
call
cmpl
push
lea
dec
jmp
daa
add
mov
mov
xchg
xor
int3
scas
jmp
sbb
push
sbb
push
cmp
mov
movsb
dec
mov
inc
xchg
sbb
outsb
and
outsl
ror
pop
sub
push
dec
jp
int
xor
pop
pop
das
jg
sahf
dec
mov
push
insb
mov
fmull
inc
dec
adc
cmp
pop
shll
test
lahf
mov
lods
stos
sub
fucomp
lret
adcl
xchg
jo
sub
inc
add
xor
bound
jp
or
and
dec
int3
outsb
test
mov
lds
shrb
xor
repnz
idiv
test
inc
xchg
adc
push
je
stc
add
jg
lahf
or
dec
dec
adc
xchg
das
add
xchg
fsubrs
jl
imul
push
adcl
push
aaa
cmp
pop
jns
mov
add
rcll
lcall
gs
iret
faddl
sub
out
pusha
adc
shl
mov
cs
push
out
mov
lods
les
or
je
push
add
mov
scas
inc
sbbl
pminub
shll
sbb
sub
repnz
dec
sbb
jge
movsl
xchg
xor
sbb
into
and
ds
call
bsf
adc
jl
leave
or
ret
outsl
into
fstpl
push
js
frstor
adc
loopne
push
jnp
nop
in
adc
jno
cwtl
pop
or
lahf
push
loop
test
scas
xlat
test
and
adc
aam
push
push
mov
sbb
push
bound
pop
bound
or
mov
jg
mov
dec
jl
fwait
es
inc
push
cltd
xlat
popf
adc
sbb
mov
or
mov
jl
push
in
inc
mov
adc
jecxz
sub
js
cmp
mov
sbb
mov
dec
or
adc
lds
in
mov
or
arpl
jb
xchg
loopne
sbbb
xchg
xchg
mov
outsb
arpl
imul
push
dec
shlb
push
dec
jge
or
flds
mov
and
inc
xchg
cmp
gs
xlat
iret
ljmp
xor
mov
cli
dec
cmp
pop
out
push
insl
dec
scas
sbb
popf
push
fsubl
sbb
mov
shl
pusha
jae
sub
xor
xor
xor
jge
aam
outsb
mov
icebp
pusha
cmp
adc
pop
cmp
mov
sub
mov
popf
testb
nop
push
addr16
push
lods
jnp
mov
push
jae
insb
xor
stos
mov
push
dec
xchg
arpl
inc
enter
or
gs
sbb
fld1
xchg
push
aam
mov
pushf
jbe
jle
sbb
in
xchg
ds
clc
cltd
mov
test
jb
loope
int3
dec
sahf
xor
lret
sbb
pop
mov
int
dec
mov
in
sub
xor
stos
xor
push
mov
adc
aad
or
iret
or
hlt
int3
xchg
fidivs
in
or
push
paddd
push
and
lock
adc
cli
push
outsl
adc
fildl
lea
jbe
mov
jle
and
xchg
dec
pop
and
xchg
inc
pop
orl
in
out
cmp
jnp
dec
adc
pop
sti
popa
or
push
rorb
ljmp
mov
gs
mov
enter
jae
aaa
or
notl
in
mov
push
or
jl
cld
add
cmpsb
cld
xchg
mov
shll
lods
addr16
cmp
in
mov
mov
into
nop
out
push
arpl
imul
mov
adc
repnz
or
xchg
in
jnp
pop
out
aam
push
in
push
adc
xor
ss
je
cpuid
pop
aaa
dec
cli
in
and
jp
jg
dec
mov
cld
xor
xchg
imul
inc
cmc
mov
push
push
push
mov
out
or
lock
inc
sub
sbb
add
clc
nop
andl
or
mov
xor
fcomps
xchg
dec
dec
mov
dec
mov
adc
sbb
mov
sbb
cmp
push
push
sub
ja
or
xchg
cwtl
sahf
dec
jmp
push
and
mov
movsb
dec
add
sub
bound
jbe
lcall
stc
sub
push
or
xlat
push
imul
std
popf
mov
fdiv
cld
xchg
push
mov
xchg
lret
xchg
jbe
cmp
outsb
sbb
pop
test
shlb
xchg
dec
pop
mov
cld
or
jg
mov
rol
mov
mov
jnp
sub
jbe
mov
lock
add
mov
xor
mov
sbb
push
sbb
sbb
xor
jmp
pop
lea
or
cld
imul
xchg
enter
leave
lock
shrb
out
bound
pop
push
mov
mov
jg
dec
stos
pop
cmc
out
sbb
inc
insl
cmc
xchg
jge
push
mov
pop
push
dec
xlat
and
or
cmp
mov
jge
xor
add
aaa
jo
adc
shll
mov
mov
hlt
xchg
es
mov
sbbl
int
adc
mov
lret
iret
sbb
mov
jns
jge
lea
cld
xor
aaa
repz
dec
sbb
pop
and
sub
push
dec
subps
aas
mov
push
ja
jge
adc
pop
cmp
aas
loop
or
mov
pop
mov
mov
call
mov
mov
stc
cmc
les
mov
fcoms
dec
ljmp
pop
loope
push
push
mov
jb
je
repz
sbb
pop
pop
and
add
pop
jns
sub
into
fneni(8087
and
dec
subl
xlat
inc
cwtl
sahf
mov
nop
imul
hlt
stos
inc
mov
sbb
inc
lds
and
shll
aam
insl
clc
jno
pop
cmp
aas
cmp
imul
push
insl
ret
in
loopne
push
rcrb
pop
scas
pop
aaa
mulb
adc
mov
mov
gs
data16
jbe
mov
jle
add
pop
inc
push
lea
gs
jle
sbb
outsb
dec
int3
mov
add
xor
adc
inc
push
mov
scas
rcrl
sbb
mov
push
push
and
pop
push
enter
das
sbb
push
iret
push
in
lods
adc
inc
add
jmp
jns
not
pop
cmp
cmpsl
push
inc
clc
sbb
cmp
mov
dec
sub
out
or
dec
addr16
pop
out
cmp
mov
cmp
add
xchg
loope
sub
out
adc
ficoml
mov
jo
adc
out
cmp
loop
loop
int3
movsl
mov
out
stc
std
popa
adc
jmp
or
shrl
cmp
stc
sub
sub
adc
stos
std
sbb
xor
in
test
cs
daa
pop
mov
push
lds
addr16
loop
fdivs
xor
dec
jle
pushf
and
sub
fcomps
mov
jge
push
or
push
mov
xor
pop
adc
or
fsubl
stos
roll
sti
test
xor
pop
in
je
popa
popf
jb
cld
adc
int
insl
mov
outsl
imul
out
insb
ss
cmpsb
shll
into
mov
bound
sbb
rclb
mov
adc
or
mov
adc
cmp
imul
sbb
mov
aam
cmpsl
xor
repnz
repz
lea
cmp
cli
aas
addl
mov
mov
cmp
dec
sub
scas
mov
int3
pushf
sbb
lods
and
stos
mov
jae
pop
push
add
add
sahf
mov
and
sbb
xchg
jae
daa
je
jne
cmp
lcall
mov
and
jbe
adc
mov
cltd
sbb
sub
jae
pop
jp
hlt
test
xor
inc
mov
stc
call
inc
sarb
push
dec
lods
jp
insb
adc
push
pop
xor
mov
mov
arpl
adc
out
lret
fcoml
ror
dec
mov
add
inc
add
push
push
jle
mov
dec
dec
and
adc
out
jns
fs
ja
sub
sub
xlat
xchg
lea
outsb
sti
add
fdivr
push
adc
insb
clc
dec
popa
jbe
and
cmc
mov
push
pop
scas
mov
pop
test
pop
test
movsb
adc
out
jns
jl
cmp
mov
cmp
and
mov
inc
dec
mov
in
emms
inc
scas
pop
adc
lea
mov
les
mov
fs
sahf
mov
arpl
sub
push
push
mov
pop
es
jge
lcall
loopne
add
mov
mov
push
lock
mov
inc
dec
mov
xor
out
xor
inc
and
arpl
jge
jp
out
aaa
sub
or
test
push
xor
jnp
cltd
sub
sahf
jb
lret
dec
xor
mov
mov
je
das
pop
mov
push
das
sub
gs
xchg
iret
imul
adc
inc
mov
out
add
cmp
les
jb
in
xor
mov
push
testb
aas
adc
add
movsb
push
cmp
mov
out
leave
ljmp
sub
cltd
rorb
cld
loopne
popf
push
dec
xchg
jne
push
xchg
sbb
push
pop
pop
fsubrs
repz
aaa
test
xchg
push
mov
aad
jle
lds
cmpsl
inc
adc
xchg
lret
in
leave
int3
xchg
imul
inc
inc
lock
js
popa
stc
jle
shr
iret
cmp
stc
pop
jle
jmp
ror
sub
adc
xchg
push
pop
and
lahf
mov
arpl
jo
mov
mov
mov
cld
sbb
les
and
mov
sbb
pop
out
adcl
rep
push
repnz
or
in
int
push
divb
xchg
into
push
loope
cs
fistpl
jge
aam
xchg
lods
cmp
pop
mov
jg
xchg
mov
arpl
dec
sub
dec
add
leave
pop
mov
adc
mov
test
pop
pop
ja
push
icebp
cs
out
pop
and
xor
loope
mov
dec
fsts
adc
ret
aaa
push
jnp
adc
out
lcall
mov
or
adc
sahf
pop
and
push
mov
pop
mov
xchg
push
mov
push
in
push
xchg
addr16
xor
in
lods
in
notl
les
ljmp
pop
jne
outsb
inc
dec
xchg
cli
outsl
popa
arpl
lods
xor
out
adc
in
bound
and
insb
dec
psubd
arpl
and
jnp
fsubl
pop
jp
jl
repnz
and
jge
dec
out
aam
je
hlt
std
push
ja
sbb
loope
lods
dec
adc
cli
sub
adc
push
pop
push
sbb
es
cmc
pusha
shrb
sub
call
les
mov
test
xchg
psubsw
out
cmpl
fildll
mov
lcall
sbb
popa
sub
adc
cmp
add
sub
gs
insl
push
dec
cmp
pop
add
fisubrl
stos
shlb
cmp
or
imul
aaa
fisubrs
mov
movsb
jno
inc
outsb
push
or
out
loope
mov
repnz
pop
imul
jmp
or
jne
xchg
leave
arpl
call
dec
cmpsb
jbe
data16
shrb
ret
or
add
pop
int3
dec
xchg
hlt
mov
and
rorb
add
sub
ret
sti
int3
sub
jp
push
repnz
mov
xchg
mov
popf
xchg
mov
push
mov
fs
icebp
pop
cmp
std
dec
push
cmp
jo
xor
pushf
mov
insl
push
mov
push
lods
sub
bound
lahf
or
mov
push
jp
ljmp
and
push
int3
sub
mov
outsb
jnp
mov
ss
hlt
dec
lds
sub
adc
into
rcl
das
xor
dec
es
xchg
push
xchg
gs
jmp
mov
mov
xor
or
sbb
xor
rclb
into
jecxz
aam
ret
xor
mov
jecxz
das
mov
jo
dec
inc
mov
lods
test
mov
push
in
add
f2xm1
fdivrl
cwtl
jl
xchg
movzbl
and
pop
jb
mov
pop
adc
mov
dec
aam
push
les
xchg
andb
shrb
push
pop
xor
dec
xor
addb
ljmp
mov
fdivrs
es
lock
jmp
adc
mov
jge
xor
sub
outsb
out
dec
adc
out
es
aad
scas
dec
imul
icebp
jbe
jbe
push
ja
cmc
push
jns
sbb
sbb
popf
repnz
adc
pop
sbb
or
jo
call
out
and
jo
lret
pop
in
xor
enter
les
stos
inc
mov
inc
xchg
inc
cmp
inc
out
subb
fcmove
ss
in
lahf
jo
mov
sbb
jge
dec
push
mov
and
xor
subb
shrl
mov
cmpsl
sti
jbe
xchg
pop
ror
daa
sbb
xlat
and
ds
sarb
jns
and
dec
rorb
inc
jecxz
xchg
aas
in
das
mov
jp
lock
aaa
call
sub
int
stc
mov
les
pushf
je
mov
mov
xchg
push
inc
ret
add
and
popa
inc
or
mov
ror
mov
imul
and
rclb
fdiv
ljmp
xor
cwtl
and
movsl
or
in
imul
jno
enter
sub
movsb
adc
pusha
vmwrite
mov
pop
aam
and
sbb
sahf
je
xchg
into
add
adc
in
aaa
jo
mov
rorb
test
push
xor
es
out
jno
out
adc
mov
imul
jg
jo
and
mov
jmp
test
inc
push
outsl
in
notl
add
mov
jae
xor
stos
sbb
or
movsl
lods
cmp
sub
inc
bound
push
xchg
jge
imulb
inc
xor
push
lods
out
adc
fs
and
pushl
aaa
pop
stos
lds
std
pop
clc
popf
dec
mov
int3
inc
mov
jae
arpl
push
lret
outsb
jmp
xor
sub
mov
xor
and
pop
cmpb
lcall
dec
mov
mov
daa
inc
xchg
inc
xchg
fsubrs
pop
cld
jle
or
hlt
rorb
orb
push
jl
inc
out
mov
stc
xor
pusha
shr
mov
mov
add
bound
xchg
and
push
and
stos
add
clc
or
dec
pop
or
push
add
mov
lahf
and
out
gs
loopne
iret
ss
dec
test
sub
arpl
bound
pop
test
into
cmp
inc
or
jbe
add
sbb
sub
xor
mov
and
idivl
ja
jns
es
addr16
mov
aam
add
ds
rorb
fisubs
fcoms
dec
jno
adc
out
or
arpl
in
adc
cmp
bnd
cwtl
and
cmp
lds
jle
std
lea
jmp
pop
push
jle
sbb
xor
shl
dec
les
loopne,pn
xchg
push
dec
push
pop
pushf
mov
repz
jg
cmpsb
jne
jge
jbe
mov
frstor
jecxz
fsts
ljmp
pop
adc
push
addr16
insb
mov
call
negb
insb
out
das
sbb
sub
sub
xorb
add
xchg
push
and
ret
pop
dec
insl
rcr
xor
sbb
aad
mov
cmp
dec
xchg
orb
dec
les
push
rcrl
in
and
mov
fwait
rclb
adc
xchg
push
sub
arpl
sbb
and
insl
jp
ds
mov
or
dec
jb
dec
xchg
jbe
and
movsl
mov
sbb
jbe
dec
push
sti
xor
loope
aas
inc
or
sub
mov
jecxz
xor
push
movsb
pop
add
cmp
xlat
pop
adc
push
shrl
mov
add
imul
push
jg
pop
and
je
jg
xchg
xchg
adc
adc
lock
sub
mov
cmp
pusha
stos
cmp
push
inc
cmc
hlt
mov
fisubrs
testl
roll
push
or
jnp
and
mov
add
bndstx
inc
xchg
in
popa
add
cli
dec
cmp
fdivrs
xchg
jecxz
sub
push
mov
or
pop
fsubrl
mov
dec
dec
iret
shll
imul
mov
loope
cltd
movsl
cmp
gs
xchg
add
xchg
sbb
mov
aad
xchg
sub
jno
int
daa
sub
insb
test
sarl
out
push
adc
inc
adc
pusha
iret
xor
pop
add
mov
pop
mov
add
cwtl
stos
add
icebp
test
js
xchg
shrb
arpl
add
outsb
dec
andl
mov
sbb
fwait
mov
pop
push
jp
inc
push
jns
push
or
mov
inc
pop
aaa
inc
dec
cmpsl
xchg
adc
pop
test
int3
sub
xlat
pop
sar
inc
lods
sub
inc
scas
pop
out
mov
inc
popf
in
divb
call
ja
dec
pusha
ds
dec
xor
fwait
inc
push
dec
push
push
mov
dec
dec
lock
sub
pop
dec
cmp
jge
add
pusha
dec
push
xchg
movsb
jle
int3
pop
fwait
dec
and
fmull
mov
mov
mov
jmp
or
inc
cmpsb
push
xchg
fcoml
sub
jo
int
add
jg
frstor
testb
xchg
mov
aas
jp
in
lds
sub
ret
mov
mov
mov
mov
dec
addr16
subb
ret
jae
lods
fsubrp
push
push
jle
pop
push
push
iret
adc
inc
mov
dec
push
ds
mov
sub
in
aaa
fadd
aad
inc
add
mov
scas
mov
add
mov
or
cmp
cli
push
sub
adcl
hlt
loopne
adc
icebp
xlat
jno
repnz
add
mov
fwait
push
mov
push
sub
jmp
test
mov
inc
xor
push
sub
sub
cmp
push
push
lret
push
xchg
add
clc
push
add
int3
mov
stos
int3
mov
dec
call
sbb
das
inc
mov
mov
hlt
mov
das
jae
dec
pop
movaps
push
xchg
mov
dec
add
test
in
gs
les
push
out
and
push
bound
sbb
push
test
neg
xor
lea
push
js
int3
fildll
fdivrs
mov
dec
inc
ret
jge
test
xor
hlt
fs
jns
adc
and
not
lods
into
inc
call
xchg
sbb
pop
dec
in
leave
insb
jb
int3
pop
jp
cmp
pusha
inc
pop
lock
dec
or
iret
sub
dec
mov
es
ror
and
cmpsb
call
mov
jno
lods
call
and
mov
cld
and
lahf
ret
mov
dec
clc
xchg
cmc
dec
sbb
sbb
mov
mov
pop
push
inc
lret
push
adc
jge
jne
ja
ja
lods
aaa
mov
sub
cltd
mov
loope
xor
addr16
maskmovq
idivl
rcrb
mov
arpl
stos
dec
jp
mov
pop
hlt
ficomps
js
cld
pop
mov
xor
outsl
rclb
jo
push
cmp
xor
lea
clc
pop
jl
js
cmp
stos
mov
pushf
jo
sub
cmp
fs
cmp
jge
add
mov
mov
inc
in
adc
test
aad
pop
xlat
loopne
xor
shrl
cmp
imul
cmc
ss
inc
int3
lea
sbb
push
mov
and
mov
push
adc
mov
iret
ret
mov
push
pop
add
sub
pop
mov
cmp
int3
into
mov
les
fdivrl
aaa
add
jge
add
aam
out
mov
add
cmp
gs
popf
int3
mov
out
out
test
adc
leave
mov
adc
mov
push
insb
scas
lea
pop
jns
mov
inc
stos
dec
fwait
mov
adc
mov
shlb
in
push
nop
and
cmp
ret
dec
push
or
test
sbb
xlat
movb
mov
jmp
repnz
push
sub
jb
adc
ficomps
int
movsb
popf
ja
inc
inc
sbb
stos
dec
insl
xchg
hlt
and
pop
xor
jg
ss
cmp
dec
shll
pop
mov
jns
ja
push
sbb
xchg
adc
push
push
add
add
into
jecxz
lods
imul
mov
aam
xchg
push
mov
mov
stc
push
movsb
lods
inc
fldl
loopne
cmp
push
xchg
xchg
iret
lahf
and
pusha
or
bound
shrb
fisubrs
rcll
sub
popa
mov
js
aam
adc
cmp
or
xchg
push
xor
mov
and
hlt
and
sub
jns
sub
mov
test
sbb
pop
pop
add
and
adc
mov
call
sidtl
shlb
push
xor
dec
jno
jg
sar
xchg
cmp
sbb
fucomi
inc
or
push
mov
push
in
mov
add
mov
sub
adc
add
clc
pushf
lds
add
cmpsb
das
outsb
mov
add
dec
aad
sub
cmp
divl
ret
cmp
jbe
fidivrl
lods
mov
movl
mov
in
or
in
arpl
cltd
push
adc
or
pop
jnp
ficomps
jae
test
adc
lret
inc
xor
ss
divl
ljmp
and
mov
sbb
lods
daa
pop
and
loopne
fidivs
ds
call
daa
xor
rol
dec
cmc
js
dec
or
out
sbb
ds
dec
scas
mov
jne
out
popf
inc
sbb
out
in
pop
fldcw
mov
jecxz
mov
lock
adc
jno
out
xchg
addr16
pop
push
adc
sbb
es
jg
inc
je
mov
push
push
addr16
pop
in
adcb
loope
inc
loopne
int3
mov
mov
push
inc
std
lods
xorb
repnz
push
insl
adc
and
xor
les
aaa
mov
mov
jnp
enter
lock
test
jb
pop
mov
push
int3
dec
es
call
or
das
lds
or
loope
sarl
push
add
into
nop
sub
out
in
pop
jbe
inc
outsb
test
push
jecxz
jge
jns
lcall
mov
push
pushf
xchg
lods
mov
sarl
push
mov
aad
in
fstps
push
mov
out
fldcw
and
inc
adc
jecxz
lret
jle
sbb
mov
inc
lret
xchg
add
dec
or
push
inc
push
xor
xorb
inc
fwait
das
mov
int3
sbb
mov
popa
data16
adc
sub
sbb
mov
adc
or
cmp
fisttpll
mov
mov
inc
lock
push
in
movsb
or
mov
inc
or
add
imul
inc
test
shrl
xchg
sub
roll
inc
jle
nop
xor
ret
pop
pop
xchg
and
sbb
xchg
out
out
cltd
jne
inc
icebp
inc
inc
sbb
push
gs
pop
arpl
jnp
mov
loope
pop
xchg
sub
dec
adc
inc
pop
cld
notb
ret
outsl
addb
insl
push
and
rcl
inc
xchg
cld
pushf
pop
jbe
xchg
inc
pusha
cmp
xor
dec
pushf
insl
std
jo
test
lods
add
movsl
orl
or
lods
jl
decb
popf
push
clc
dec
push
and
rcll
jp
or
or
and
out
inc
and
push
and
pop
jns
push
push
hlt
xchg
ss
sbb
inc
aad
sahf
je
dec
test
push
mov
mov
imul
test
add
mulb
mov
push
mov
push
movsb
ret
xchg
and
jecxz
inc
xchg
jo
cmp
push
push
mov
sbb
dec
outsl
loop
cmp
add
mov
pop
mov
gs
aas
mov
jo
sub
roll
sbb
fidivs
out
mov
pop
sub
ret
leave
add
mov
arpl
ds
call
or
adc
test
xor
hlt
in
dec
sar
hlt
fsubr
fs
push
xor
in
inc
ljmp
sti
inc
fs
dec
sub
xor
addr16
in
stos
dec
mov
push
cld
ret
push
pusha
sub
fidivrl
inc
xchg
enter
mov
in
stos
adc
mov
and
mov
das
cld
or
jb
in
mov
add
mul
add
pop
mov
das
push
cmpb
mov
mov
test
pusha
or
gs
jmp
jl
imulb
test
lods
jnp
iret
adc
out
push
lahf
adc
fsubr
mov
sub
divb
mov
xor
jne
lds
pop
and
ret
dec
adc
mov
cli
push
xchg
sbb
in
sbb
pop
inc
insb
and
pushf
movsb
jnp
mov
test
xor
rclb
cwtl
mov
je
add
ja
je
les
push
push
mov
cli
push
sbb
inc
pop
sbb
mov
popa
dec
insl
xor
in
int3
cmc
inc
adc
mov
sti
outsl
xchg
lret
pop
mov
outsb
stos
xor
add
nop
insl
dec
lahf
int
push
and
out
fisubrs
jo
lcall
out
int
mov
adc
mov
and
subb
xor
sahf
int3
xor
xchg
xor
pop
pop
aam
or
outsb
mov
push
insl
xor
xor
roll
outsb
xchg
dec
ja
sbb
cltd
lahf
cmpsl
jl
jo
inc
fwait
xchg
mov
imul
outsl
jno
cmpsl
stos
dec
push
mov
sub
ljmp
mov
in
xor
bound
std
cwtl
xchg
jmp
std
lods
add
test
int3
jbe
hlt
in
cmp
push
or
aam
in
sbb
sahf
mov
scas
fnstcw
push
and
xchg
jp
ds
dec
enter
int3
test
lahf
adcb
scas
push
lock
pop
addl
je
mov
mov
jns
push
movsl
pop
imul
jne
push
mov
es
mov
out
ret
sub
inc
xchg
icebp
insl
mov
notb
insl
les
aaa
cltd
in
ljmp
sbb
pop
sti
mov
fstl
pop
sbb
xchg
mov
movl
mov
cld
sub
ljmp
push
jl
loopne
loope
inc
ds
sub
loop
notl
add
or
mov
jbe
stc
scas
pop
xor
loope
hlt
mov
shrb
xchg
test
sub
jecxz
xchg
insb
or
hlt
jno
cmp
sbb
or
xor
push
hlt
cmc
push
ljmp
or
mov
mov
lock
nop
pushf
or
je
jne
aam
sbb
lret
mov
xorl
push
jo
push
out
lock
jns
nop
cli
cmp
faddl
loope
lret
cld
in
ljmp
jb
cli
lock
push
cli
pusha
add
sbb
push
cmc
mov
aad
lds
aaa
xor
push
cmc
dec
and
fcmovnb
inc
fwait
hlt
sub
or
sub
cli
pop
mov
push
inc
xor
or
push
lcall
pop
or
jb
sub
sbb
push
jo
xchg
cmp
mov
jne
mov
fld
mov
scas
push
mov
adc
cmp
xchg
pop
into
test
std
js
fs
cmpsl
jne
aam
push
push
and
imul
imul
ss
cli
adc
mov
es
shr
iret
sub
pop
pusha
cmp
es
push
cmp
xor
pop
xchg
dec
js
test
xor
popw
and
cmp
scas
scas
dec
dec
push
out
and
push
adc
cmp
into
mul
xchg
ds
sbb
sub
xor
inc
stos
cs
pop
je
xor
pop
out
inc
imul
pop
fimull
imul
cld
les
mov
xchg
cmpsl
loopne
loope
mov
xlat
addr16
mov
xor
aad
push
enter
ds
dec
test
jb
inc
push
int
incb
adc
fsubrl
sbb
or
in
push
push
cmp
cmpsl
shlb
push
sbb
mov
sbb
test
jbe
pop
aam
mov
mulb
pop
in
or
and
movsl
out
mov
sub
data16
xchg
sbb
popa
adc
pusha
xchg
dec
mov
sbb
pop
dec
scas
loopne
lock
jmp
adc
pushf
xchg
cli
jle
je
mov
lock
std
fidivrs
add
push
mov
es
scas
mov
mov
mov
enter
popf
repz
jg
jp
icebp
cmp
xchg
fidivrs
loope
fisttpll
mov
dec
xor
or
pop
mov
out
or
xor
loop
les
xchg
pop
aad
dec
dec
bswap
mov
fcmove
or
call
or
pop
or
mov
sub
inc
pop
mov
sub
push
mov
xor
out
int
scas
sbb
sahf
bnd
inc
sub
jne
xor
and
add
inc
jle
push
sbb
and
les
mov
scas
xchg
shl
call
cld
out
cmp
out
addb
cli
pop
push
cltd
cwtl
inc
jge
aad
lcall
jb
fwait
scas
sub
fsubr
push
stos
inc
jne
xchg
out
outsl
je
xor
lock
sub
aas
pusha
pop
mov
pop
xchg
jmp
sub
cs
mov
sub
call
jmp
lahf
xchg
inc
dec
aam
push
xorb
jmp
jp
sarl
jmp
in
sub
pop
ds
bound
pop
sub
sub
push
into
insb
jg
cmp
pop
lret
push
sti
cmp
test
repnz
repnz
in
xchg
add
int3
dec
mov
stc
push
out
cli
push
lahf
add
mov
jge
fadds
mulb
pusha
mov
mov
or
add
push
icebp
mov
dec
fdivl
jg
clc
insl
scas
mov
jns
mov
mov
and
push
pop
ljmp
jns
fcom
mov
mov
out
mov
jmp
jmp
add
add
sbb
push
jbe
and
aaa
inc
test
xor
stos
push
mov
pop
in
es
dec
and
insb
dec
mov
xor
lret
jns
cwtl
jne
ficompl
shl
movsb
cmp
mov
sub
pop
mov
sti
js
cld
push
hlt
je
push
jge
loop
jmp
inc
bound
lock
jp
fwait
mov
pop
mov
clc
xchg
bound
sbb
push
cli
sub
mov
jbe
xlat
jg
addr16
pop
add
xor
inc
add
sti
fnsave
pop
xor
jns
push
add
xor
xorb
dec
mov
jns
jle
mov
stc
stos
sbb
or
fists
adc
add
lds
aam
jle
mov
cmc
popf
aaa
cli
push
adc
fs
add
cld
repz
in
lock
or
out
imul
jae
mov
push
pop
mov
in
sub
xchg
mov
std
adc
lret
scas
pop
dec
cmp
test
sbb
jbe
or
lcall
pop
dec
lahf
inc
and
pop
xor
pop
fld
xlat
pop
mov
mov
roll
jge
fwait
push
inc
adc
mov
jge
test
leave
das
mov
mov
pop
push
ljmp
xor
sbb
cmp
pop
dec
loopne
dec
add
repz
imul
push
test
ljmp
sbb
andb
pop
lea
stos
sub
fildll
inc
and
movsl
daa
sub
fcompl
or
push
repz
add
aam
mov
mov
into
jge
adc
lock
xchg
push
data16
test
jmp
and
xor
mov
pop
pop
inc
out
mov
jo
xlat
int
test
mov
mov
leave
shrl
sub
arpl
mov
sbb
sub
ss
stos
adc
je
xlat
add
cmp
out
jmp
mov
push
movsl
cltd
cli
mov
ds
lock
mov
ret
xchg
mov
sub
sarb
insl
js
lds
mov
adc
pop
stos
push
inc
or
or
and
mov
sbb
sub
pop
out
adc
shlb
or
popa
inc
xchg
or
aaa
cmp
xor
xor
fcmovbe
pop
add
jmp
sbb
adc
sub
mov
mov
out
dec
test
rorb
pop
mov
test
lret
sarl
lods
xchg
sub
cmp
inc
or
add
das
push
loop
xor
call
imul
inc
mov
pop
hlt
hlt
mov
xchg
inc
adc
inc
ficomps
adc
into
ret
inc
loopne
enter
inc
add
subb
push
xchg
lcall
cmc
sahf
test
es
inc
pop
xchg
jmp
and
in
ss
test
int
shlb
cmp
xchg
addr16
mov
cmp
loopne
xchg
popf
test
mov
or
sub
cmp
push
jle
cwtl
pop
mov
in
ljmp
call
es
lret
dec
les
fcomps
aad
aad
pop
push
in
push
movsb
add
ja
jnp
mov
add
xor
je
adc
push
inc
jbe
lds
pop
or
fs
add
dec
pop
testb
sub
xchg
enter
lret
adc
aaa
pop
inc
add
push
lods
sbb
push
sbb
cmc
xchg
sbb
and
daa
dec
aaa
js
jecxz
aam
mov
imul
pop
pop
pop
in
cltd
push
and
pop
sub
add
jns
dec
push
lock
mov
inc
add
mov
sub
lcall
out
xor
adc
fsubr
movsl
adc
ret
pop
daa
inc
ret
or
inc
cs
in
dec
dec
test
inc
pop
lea
hlt
inc
jmp
stos
dec
in
ret
movsl
mov
fs
scas
addl
lcall
add
insb
sub
adc
add
stc
dec
popl
sub
pusha
je
cmpsl
lret
or
mov
mov
out
mov
insb
aaa
ds
inc
es
adc
jp
xchg
and
adc
pop
sbb
sbb
mov
loope
daa
xchg
cld
je
xchg
push
aad
add
or
mov
sbb
or
xchg
shr
fs
inc
add
stos
ror
stos
xchg
adc
add
pop
push
push
cld
push
into
jecxz
pop
dec
pusha
dec
outsb
sar
data16
aam
add
loop
mov
sub
jecxz
lret
mov
icebp
sbb
movb
loopne
mov
adc
sbb
ss
test
cmp
adc
pop
dec
dec
or
dec
ds
int3
cld
movsl
mov
dec
outsl
pop
pop
clc
sahf
push
xchg
adc
push
dec
sub
mov
pop
adc
and
lods
cmpsl
dec
add
xchg
pop
add
outsb
jns
add
rorb
pop
imul
in
push
or
xchg
xchg
pop
pushf
popf
dec
xor
shlb
sbb
adc
pop
lock
loope
push
push
xor
push
imul
push
push
push
in
insb
aas
add
push
shll
dec
into
lret
push
sbb
or
addb
adc
adc
test
inc
mov
sbb
pop
adc
and
ret
mov
test
dec
hlt
mov
mov
xchg
dec
lret
xor
cmp
mov
mov
lret
jae
es
in
jb
shr
pop
pop
and
inc
push
call
dec
xor
cmp
pop
das
cmp
es
jae
cmp
sbb
addr16
hlt
jb
push
and
xchg
cs
pop
pop
mov
stc
iret
adc
cmp
mov
ss
dec
in
mov
repz
pop
pop
ss
outsl
test
adc
stos
leave
mov
movsb
sti
repnz
sbb
sbb
xchg
mov
jg
jo
popf
push
in
outsb
xor
movsb
jl
inc
jmp
cmp
push
mov
out
dec
or
mov
pop
arpl
cmp
push
lcall
jae
sub
pop
pop
sbb
fs
repz
push
adc
ds
test
js
inc
mov
push
sub
push
cmpsl
das
add
call
cmc
xor
pop
push
mov
mov
sbb
dec
mov
jmp
pop
xchg
pop
mov
inc
insb
fmull
xor
stos
mov
dec
test
adc
pushf
dec
mov
add
mov
jmp
hlt
or
loopne
aaa
xor
movsl
lahf
ljmp
mov
pop
enter
aam
int
enter
fisttpl
ret
jle
sub
inc
add
test
dec
xor
dec
cmpsl
add
pop
aam
dec
dec
les
cli
sbb
cli
movsl
mov
adc
add
nop
dec
rolb
jl
mov
add
inc
dec
pop
repnz
out
lea
in
cmpsb
cmp
xchg
dec
and
enter
call
add
sbb
adcb
pop
cmp
clc
ss
jg
sbb
sub
xlat
inc
pop
pop
data16
mov
dec
in
lods
loop
in
adc
push
dec
xchg
aam
negb
insl
rep
mov
testb
mov
cmp
mov
and
cmpsl
push
mov
rcrb
sub
sub
in
js
js,pt
mov
out
outsb
inc
pop
jno
fadds
es
test
repz
cmp
loopne
pop
sub
sub
xchg
rolb
dec
dec
loopne
xor
pop
dec
mov
sub
cwtl
push
mov
nop
mov
add
fisttpl
cmp
mov
and
mov
inc
gs
add
jg
lock
call
push
inc
ffree
mov
ja
les
fs
ffree
push
roll
cmp
pop
divl
cmp
jmp
out
xchg
dec
add
pop
repnz
add
loope
pop
aas
mov
add
in
stc
adc
jnp
mov
dec
cmc
inc
pop
lock
xchg
dec
sub
mov
jle
nop
xchg
xchg
adc
push
out
in
xchg
frstor
inc
int3
or
add
fists
in
xor
leave
iret
inc
addr16
shr
inc
xchg
pop
loopne,pn
inc
fldenv
mov
rorb
jmp
repz
xor
mov
loopne
xor
jmp
test
mov
xchg
lsl
in
pushf
xchg
jns
adc
jmp
add
addb
daa
data16
aad
and
lods
jecxz
dec
fistps
das
stos
and
dec
int
iret
pop
sahf
scas
shlb
aas
dec
jmp
ja
pusha
test
popf
jb
add
cmpl
dec
popa
in
jge
mov
xor
push
imul
mov
jl
repz
icebp
addr16
inc
push
cmp
dec
and
bnd
stos
sub
xlat
lock
inc
jl
iret
or
pop
add
ljmp
xchg
xor
mov
test
aad
sbb
inc
lods
mov
arpl
adc
inc
xchg
testl
in
mov
fmull
out
in
nop
rol
or
or
adc
in
lea
in
inc
xor
dec
frstor
in
mov
pop
and
jnp
sbb
cmp
xorl
sbb
shlb
insb
add
scas
scas
in
lods
jbe
scas
mov
jmp
add
std
mov
sbb
and
aad
inc
pop
aaa
mov
ljmp
nop
lret
fsubr
cmp
mov
jnp
mov
negl
xor
daa
in
lcall
xor
in
int3
mov
inc
into
xorb
shlb
aam
cmc
rclb
or
jbe
sbb
mov
pop
or
push
cmp
dec
mov
pop
incb
or
mov
pop
aaa
addr16
cwtl
inc
push
addb
push
pop
andb
xchg
shlb
inc
add
fdivrp
ror
shr
mov
leave
lods
ret
fmull
pop
inc
sub
cmp
repz
pop
fsub
aam
push
scas
sub
lret
movsb
lcall
push
and
lods
adc
push
xor
sub
jbe
adc
pushf
or
mov
in
popa
ds
xchg
pusha
movsb
cmpsl
insb
popf
pop
push
and
adc
push
push
das
test
and
inc
xchg
outsl
ljmp
pop
mov
iret
repnz
lods
cwtl
out
push
pop
mov
in
lds
pop
popf
jle
xchg
mov
jecxz
push
push
pop
in
sub
in
sub
jbe
jb
cld
outsb
or
mov
