mov
mov
push
xchg
sahf
cmc
and
jge
into
pop
sub
fisubl
adc
mov
loopne
aad
mov
push
lret
lahf
sbb
aas
sbbl
jmp
jne
push
gs
pop
xchg
mov
icebp
push
neg
aam
mov
ficompl
pop
mov
fs
ja
js
out
cli
ret
outsl
pop
test
cmp
imul
std
sbb
stc
call
imul
mov
inc
inc
sbb
sub
notl
loop
xorl
test
push
clc
mov
aam
and
xor
xchg
or
call
int3
xchg
jl
or
pop
aad
sti
add
or
shrl
mov
pop
or
or
loop
scas
xchg
cltd
lcall
pop
pop
mov
mov
push
jmp
das
add
mov
jmp
jl
pop
pop
and
repz
mov
orb
in
hlt
xorl
jg
xlat
pop
leave
xlat
dec
out
mov
adc
scas
mov
outsl
jmp
sub
addr16
mov
negl
mov
xchg
mov
push
pop
push
lahf
lea
cmpsb
xchg
lods
loop
adc
sbb
int3
dec
aaa
pusha
mov
xchg
mov
out
push
rcll
dec
addr16
mov
add
cli
nop
cmp
xrelease
cwtl
push
or
push
scas
outsb
arpl
xor
pop
test
orb
sub
iret
ficomps
int3
fsubrl
iret
sti
nop
test
jns
nop
out
cmc
hlt
cmpsl
pop
xchg
rorb
jmp
xchg
mov
mov
ror
clc
sub
dec
pop
ss
repnz
push
sub
jmp
push
mov
js
xor
sub
sbb
addl
xchg
xchg
mov
cld
out
cli
jne
pop
mov
jge
ja
xchg
arpl
loope
lods
cs
in
outsl
shrb
xchg
mov
sub
stc
enter
push
outsb
or
lea
adc
data16
das
pop
or
dec
jnp
icebp
inc
mov
fisubrl
push
fsub
jg
mov
jecxz
push
mov
leave
mov
ljmp
sub
insb
sahf
dec
push
daa
xorb
movsb
cmpsb
movsb
pop
sub
jae
iret
xor
jbe
stos
js
jecxz
pushf
lcall
stos
mov
xchg
xchg
test
cmpl
mov
mov
fcompp
hlt
fwait
mov
add
hlt
xorl
lret
mov
xor
jnp
xchg
pushf
or
sahf
jle
push
mov
shll
push
cltd
cmp
inc
scas
scas
inc
push
aaa
sub
ficoml
in
push
insl
lods
mov
mov
mov
dec
out
dec
out
push
cmp
adc
xchg
pop
add
sub
mov
xchg
js
jl
push
sub
pop
ja
add
lea
loop
jecxz
scas
je
stc
popa
mov
xchg
movb
sbb
adc
mov
inc
or
sub
call
push
push
inc
pop
pop
push
cmp
pop
je
rol
stc
jne
mov
cmc
stc
mov
mov
je
clc
add
push
add
cmp
cmc
dec
inc
clc
call
push
jp
sub
pop
nop
or
push
popl
and
push
jl
pop
mov
movl
push
mov
call
out
mov
dec
push
xorps
xchg
in
inc
sub
or
add
mov
pop
add
stc
nop
sub
stc
jmp
jle
jns
add
test
clc
push
pop
shl
push
dec
pop
cld
lea
mov
test
jae
jns
jp
xor
jp
sub
cmc
or
and
test
jne
jmp
push
pop
push
push
pop
pop
stc
test
and
push
add
pop
loop
jecxz
fld
xchg
std
pop
or
xor
movsb
inc
push
jbe
scas
cmp
xchg
adc
out
and
mov
call
sahf
pop
xchg
insl
cmpsl
jecxz
fs
inc
or
repnz
jb,pt
pop
pushl
xor
pop
nop
push
push
rol
pop
pop
or
push
sub
pop
jo
push
inc
pop
stc
cld
mov
inc
inc
inc
inc
jo
jno
cmp
push
call
jbe
adc
pop
push
sti
daa
dec
cmp
push
push
repnz
sbb
jns
push
fcompl
fcompl
xchg
xor
int
gs
in
movsl
push
sub
sub
adc
gs
andl
mov
mov
pop
sub
cmc
push
movzbl
push
push
add
pop
pop
test
jbe
push
mov
pop
cmp
test
nop
loop
pop
or
jns
push
mov
pop
push
cmp
pop
stc
je
sub
clc
cmc
dec
jne
ja
push
push
sub
pop
pop
nop
push
jno
push
push
sub
pop
pop
pop
push
push
push
and
pop
pop
pop
cld
pop
jmp
clc
push
call
loope
aam
inc
aas
jg
jo
jo
movsb
cli
push
push
or
cmp
jge
push
popa
fdivl
rcrb
cmp
rol
jmp
repnz
into
adc
adc
into
dec
divb
xor
mov
out
and
mov
call
arpl
sbb
and
add
jmp
push
cmp
pop
push
mov
jmp
divb
fs
jne
pop
cmpsb
push
dec
outsb
dec
mov
mov
out
insb
push
inc
outsb
xchg
inc
sbb
cmp
adc
pop
mov
mov
xchg
sub
mov
sbb
adc
mov
pop
pop
cmp
ret
lret
jae
rolb
mov
in
pusha
or
popf
jmp
cmp
add
loopne
movzbl
loop
pop
push
push
or
pop
pop
jl
ja
push
push
pop
pop
push
push
pop
call
sbb
mov
iret
push
test
jbe
fbld
adc
jb
push
adc
xor
aaa
std
aas
and
ljmp
std
out
and
mov
int3
sarl
dec
inc
fcoms
enter
cmp
dec
push
in
mov
icebp
pop
loope
mov
adc
jp
or
out
xchg
inc
and
xchg
jecxz
fcomps
je
les
push
rolb
pop
mov
xor
repz
inc
je
sti
fnop
pop
cwtl
in
ret
and
pop
mov
xchg
sahf
js
fs
xor
lea
and
ret
pop
pop
pop
push
in
xor
push
cmp
jb
cmp
sbb
je
or
inc
test
movsb
fisttpl
mov
fildl
je
call
loop
xchg
loop
add
push
int3
xchg
dec
sbb
pop
xchg
pop
or
or
std
loop
mov
jb
pushf
mov
ja
cltd
mov
push
xor
ja
sub
testb
fstpt
pop
je
ret
ret
mov
aam
xor
dec
fwait
repnz
xchg
shlb
jno
push
cli
mov
xchg
mov
out
push
push
fs
or
in
inc
cltd
imul
pop
stos
or
scas
mov
out
mov
aam
mov
dec
ds
aas
xor
in
ljmp
cld
xchg
cltd
jl
cltd
lcall
xchg
sbb
sub
repnz
pop
or
gs
mov
xchg
mov
sbb
mov
add
push
jb
push
jmp
popf
jecxz
or
in
push
lock
int
xor
jecxz
and
into
fstpt
mov
orb
inc
insl
add
xchg
sti
sub
daa
sub
insb
xchg
fadds
pop
and
and
outsb
jb
lret
mov
repz
inc
outsb
mov
fcomp
subb
orl
dec
adc
cmp
mov
in
fnstenv
pop
hlt
subl
mov
shlb
jae
add
shlb
or
pop
enter
xor
lods
lret
adc
pop
jb
pop
leave
imul
dec
out
lcall
jae
mov
xchg
inc
or
dec
imul
imul
lret
or
scas
pop
mov
xchg
mov
xchg
popa
mov
ficoml
pop
lods
sub
mov
inc
leave
fiadds
or
dec
loop
xchg
loop
subl
or
xchg
lret
or
pop
add
cltd
or
jl
mov
mov
jb
pop
xchg
into
pop
aad
stos
aad
lret
sti
aas
popa
sti
add
arpl
mov
sti
add
lods
or
cvtps2pd
inc
outsl
inc
inc
xchg
push
xchg
xchg
shlb
ret
push
jo
push
mov
sarb
sub
pop
inc
adc
mov
pop
push
mov
or
orb
push
out
pop
xor
mov
aad
xchg
aad
xchg
cltd
sti
loop
lcall
xchg
iret
imul
sub
sub
je
pop
insb
mov
pop
lods
arpl
pop
movsl
mov
lcall
leave
mov
leave
push
icebp
adc
jmp
mov
mov
es
jmp
cmp
add
push
and
into
pop
sub
mov
add
mov
out
add
in
jmp
jbe
and
adc
aaa
repnz
xadd
xor
push
repz
jns
fidivl
test
sub
dec
dec
adc
stos
jge
out
mov
ret
cmp
and
mov
dec
sbb
add
add
xchg
data16
insb
mov
xchg
sbb
sub
in
outsb
xor
lcall
call
pop
xchg
push
lcall
repnz
mov
add
mov
xor
pusha
movsb
cmc
mov
or
roll
jbe
aam
imul
imul
xor
rcrl
sbb
lock
repz
pop
test
outsb
xlat
mov
mov
xchg
outsl
xchg
out
sub
adc
cmp
mov
lret
fxch
int
mov
inc
jg
sbb
cmp
push
mov
dec
push
dec
mov
enter
jle
test
push
subb
mov
addr16
xchg
jp
mov
pop
xor
pop
dec
sub
cwtl
adc
adc
pusha
js
loopne
js
loop
push
out
aad
jmp
inc
cli
decl
das
in
sahf
xor
dec
adc
rorl
or
rcl
leave
jns
xchg
jno
or
xchg
fnsave
add
shrl
and
jle
sub
clc
sbb
inc
insl
iret
push
adc
cmp
pop
iret
fsubl
pop
repz
outsl
mov
or
mov
jno
mov
pop
jns
cmc
ds
icebp
and
bound
bound
imul
call
and
adc
divb
jb
aas
out
dec
js
jnp
jmp
mov
add
mov
and
cmp
mov
adc
aaa
push
or
xchg
imul
sbb
fdivp
lods
push
sbb
push
xchg
xchg
push
sbb
xor
je
sub
jb
cld
popf
jp
xor
scas
inc
sbb
push
cmp
mov
ret
das
jp
lcall
aam
sbb
jle
out
cmp
mov
mov
push
cmpsb
insl
rcll
jg
enter
mov
into
mov
roll
js
sbb
pop
mov
mov
hlt
inc
inc
xorl
adc
push
pop
mov
mov
icebp
rorl
std
jle
add
cmp
adc
cli
jecxz
jne
fnstenv
jg
jns
cwtl
mov
or
cltd
mov
test
xor
or
dec
imul
in
ja
cmp
mov
sbb
pop
adc
or
std
gs
nop
bound
and
add
mov
pop
mov
imul
add
testl
push
mov
jl
lock
flds
push
cwtl
pop
ja
dec
mov
adc
cmc
sub
insl
xchg
fistpll
add
lods
push
dec
ss
or
xchg
jne
aaa
clc
push
inc
clc
mov
stos
insb
insl
arpl
push
mov
xchg
das
add
add
cmp
stos
jns
roll
pushf
daa
or
inc
fdivrl
push
xchg
imul
cvtdq2ps
pop
push
dec
testl
push
stc
jae
sbb
sti
adc
in
push
cltd
mov
jb
pop
jle
in
nop
jl
cmp
adc
test
lahf
xor
js
mov
negb
pushf
pop
loop,pt
insb
mov
dec
mov
int
jne
pop
pop
sbb
push
test
xchg
cld
in
push
je
mov
xchg
adc
or
js
sub
jge
xlat
adc
out
pop
test
add
jae
mov
out
fwait
dec
mov
rolb
out
xor
test
inc
jmp
mov
mov
mov
js
mov
push
lea
pop
xlat
dec
or
fstpl
jp
int
in
sub
in
mov
jno
lret
xlat
flds
inc
xchg
jmp
or
dec
imul
pop
and
xor
xor
je
mov
dec
push
fisubs
loope
mov
fldcw
xchg
mov
and
xor
lock
jp
pop
inc
mov
pop
leave
sbb
push
jbe
adc
shrb
dec
cwtl
xchg
js
mov
movsl
scas
push
and
shrb
mov
xchg
xchg
insl
sub
jp
or
xchg
lock
or
and
imul
lret
out
adc
out
or
adc
pop
pop
mov
dec
dec
xchg
sbb
mov
popf
outsl
add
sub
imul
std
push
scas
inc
arpl
fcoms
insb
jl
insb
lahf
gs
inc
imul
imul
rcll
lods
push
dec
icebp
inc
mov
jecxz
lds
fistl
ss
or
mov
loopne
bound
mov
mov
cmc
push
imul
daa
fnstsw
ficoms
mov
loop
inc
inc
push
jae
jmp
jnp
xor
addr16
test
lcall
es
cmp
loopne
mov
insl
es
xchg
imul
sub
addr16
rol
or
mov
lods
push
jae
jmp
mov
xchg
ret
sub
sub
out
cmpsl
fidivs
jmp
aas
pop
xchg
pop
dec
and
int
cs
loope
sbb
push
xchg
lock
movsl
and
add
mov
negb
jp
xchg
cmp
or
and
mov
insb
push
and
mov
popa
dec
or
ds
push
dec
testl
js
jne
sub
xlat
subb
mov
push
mov
mov
test
jbe
add
loopne
daa
mov
dec
movsb
loope
test
aas
xor
pushl
mov
lahf
sub
pushf
jmp
hlt
mov
inc
and
into
jecxz
push
and
scas
ss
xor
shll
jnp
aaa
cmp
mov
dec
jno
pusha
dec
inc
sarl
lret
jl
lahf
push
sub
xchg
mov
lea
shlb
ror
push
loop
xor
mov
inc
adc
in
push
lds
mov
aas
and
mov
je
lods
add
xchg
push
sub
bound
lods
xor
js
lcall
int
jecxz
and
andl
or
cmp
mov
aaa
enter
pop
cmp
adc
adcb
test
pop
dec
xchg
pop
repnz
mov
jne
jle
das
jb
jecxz
mov
xchg
lahf
in
mov
mov
jmp
imul
mov
xor
mov
mov
and
fnstenv
dec
ljmp
xchg
mov
shl
cmp
cli
or
xchg
pop
icebp
fst
les
mov
mov
push
clc
xchg
in
repz
mov
push
ss
pusha
mov
icebp
mov
aam
repz
fcompl
scas
xchg
or
out
and
aaa
sub
mov
xorl
jb
pop
int
or
inc
stos
aaa
cs
pusha
mov
and
add
adc
jmp
into
test
jnp
add
sub
loop
pop
enter
pop
add
and
inc
es
adc
mov
adc
push
push
cmp
pop
cmp
loopne
pop
hlt
cmc
xor
movl
mov
fidivs
or
cltd
iret
push
popa
jmp
mov
loopne
pusha
mov
cs
xor
lock
inc
into
lahf
in
and
add
out
mov
pop
inc
push
push
mov
stos
outsl
bound
outsb
xor
jl
push
rolb
fdivrs
call
negb
outsb
jg
push
pop
xchg
lea
push
cld
les
ret
std
jmp
test
pop
mov
icebp
push
imul
inc
ljmp
ret
stos
loope
mov
shrb
pop
in
jg
jno
pushf
jle
cwtl
ret
cmpsl
mov
and
mov
xchg
mov
jo
mov
cmp
pop
sub
sbb
mov
enter
push
lods
dec
add
sti
mov
lods
ret
test
ljmp
leave
sbb
dec
mov
mov
mov
sub
lods
and
sahf
sbb
push
sbb
inc
in
mov
ret
arpl
mov
xorb
dec
mov
jnp
lods
mov
dec
jae
sub
sub
push
xor
inc
loope
sahf
push
aaa
lods
bound
mov
jmp
fdivl
es
pop
add
sub
fildll
inc
push
push
adc
enter
xlat
lock
enter
inc
mov
mov
mov
int3
cmp
test
add
aas
or
cmc
add
xchg
test
xor
xor
cs
jnp
test
push
xlat
pop
fisubs
mov
lods
outsl
sbb
sub
sub
xchg
les
add
or
shll
mov
pusha
fdivrl
cli
adc
fwait
mov
and
mov
add
xor
jo
xchg
daa
mov
imul
xchg
xor
inc
pop
mov
aas
test
mov
pmaxsw
cmp
pushf
lods
xor
pop
scas
and
xchg
leave
mov
arpl
pop
test
mov
jp
sub
cmp
jb
js
fisttps
cli
clc
xor
mov
adc
sahf
and
and
cmpsl
repz
cmc
dec
mov
ret
jp
aam
lods
xchg
out
or
mov
push
jae
in
xchg
xchg
xor
add
loope
lods
leave
or
push
stc
jle
sub
sti
xchg
out
xchg
xchg
cmp
aad
sub
out
das
and
or
mov
insb
movsl
adc
push
and
xchg
es
mov
leave
fcomps
int3
or
fs
push
mov
jnp
mov
xor
inc
push
psrlw
mov
inc
shll
arpl
or
push
cld
mov
xchg
ja
jge
lcall
jg
rol
cltd
out
rcl
pop
imulb
fwait
and
outsb
xchg
test
mov
push
pop
int3
aam
lds
lcall
dec
mov
adc
gs
push
cmp
sub
xchg
popf
pop
call
cmp
dec
loop
dec
jae
in
pusha
or
inc
out
pop
inc
xchg
test
movsl
dec
add
lahf
or
scas
into
movsl
add
sbbl
xor
pushl
mov
add
aam
pop
cltd
sub
inc
lret
outsl
aad
mov
cmp
aaa
dec
adc
jo
enter
gs
or
sbb
iret
mov
adc
insb
cmp
mov
mov
jo
xlat
gs
subl
jecxz
dec
test
lock
insl
xor
or
lcall
inc
ficoms
adc
cmp
addr16
cs
and
adc
mov
cmc
out
xchg
xor
mov
repz
xchg
inc
jo
or
roll
lea
lahf
shll
int3
ret
dec
or
or
xchg
clc
jp
push
pxor
add
mov
pop
push
sub
sahf
push
fnstenv
mov
call
xchg
jp
rol
nop
or
div
xor
xchg
in
cmp
cmp
dec
fistpll
add
pop
popf
xchg
das
push
ret
mov
xchg
mov
jmp
push
jo
mov
xchg
iret
mov
xor
aaa
inc
mov
push
add
push
data16
out
pop
pop
mov
rcr
jp
or
call
push
aad
aas
adc
pop
mov
cli
lock
pop
mov
rcrb
inc
jmp
push
ret
xchg
mov
xor
sti
pop
hlt
das
jmp
pop
into
jg
and
lcall
jl
clc
in
scas
add
shrb
add
cltd
roll
adc
sbb
jo
dec
add
push
mov
xchg
nop
ss
push
jbe
cmp
mov
cld
out
adc
cmpsl
pushf
inc
aaa
pop
cwtl
mov
popf
pop
ficompl
or
lds
lock
xor
rcrb
popf
aam
lret
enter
add
in
inc
popf
stos
and
repnz
pop
stos
loop
shlb
orl
in
mov
fwait
xor
mov
movl
sub
pop
lea
fisubrl
cmp
idiv
lret
lret
jbe
dec
mov
jno
icebp
push
push
leave
in
push
mov
int3
push
mov
mov
or
or
jbe
nop
hlt
aad
negb
sub
cmpsb
dec
or
inc
mov
cmpl
pop
out
ror
or
outsl
in
mov
pushf
les
xchg
mov
jne
in
wrmsr
mov
cmpsl
push
xchg
pop
jnp
test
stc
jp
enter
push
xchg
outsl
add
cmp
es
mov
shlb
stos
shrl
leave
mov
movsl
scas
fs
adcb
mov
adc
pop
mov
mov
in
xor
mov
in
test
mov
push
dec
cltd
fimull
fisttpll
sarl
sti
cltd
stc
xor
out
loopne
aad
movsb
xlat
mov
das
adc
in
out
ds
pop
mov
fidivl
das
popf
xchg
mov
mov
or
add
rclb
push
out
dec
shll
cltd
mov
fcompl
stos
ficoms
repz
sarl
js,pn
popa
lods
mov
shrb
sub
int3
and
mov
mov
imul
cmp
gs
ss
test
cmp
into
or
rorl
bound
mov
xchg
js
out
sbb
mov
test
jge
jae
std
inc
and
ja
fidivrs
aas
adc
and
jne
cmp
jp
push
xorl
push
ljmp
ret
cmpsl
dec
or
mov
call
mov
unpcklps
scas
pop
cmpsl
test
dec
xor
push
sub
jmp
pusha
fisubl
mov
mov
or
or
js
jmp
add
jg
sub
daa
add
mov
dec
mov
out
rcr
mov
mov
bound
sub
or
test
ret
aam
fs
or
or
push
andb
mov
sbb
hlt
cmp
outsl
punpckldq
ficompl
mov
arpl
imul
jmp
xor
mov
cmc
lock
jmp
jg
inc
and
nop
mov
dec
les
jnp
fnsave
mulb
or
add
mov
andb
std
ficoml
inc
jmp
mov
lret
xchg
cmpsl
cmp
mov
xchg
std
ficoms
leave
mov
cmpsb
pop
in
in
jmp
movsl
insl
xor
xor
icebp
jno
pop
push
outsl
test
adc
enter
xor
xchg
sete
loope
pop
cmp
pushf
outsl
or
in
dec
inc
arpl
loope
mov
add
test
out
pop
sbb
dec
orl
cmp
loopne
lods
cltd
loopne
jge
xchg
mov
lock
push
sub
pop
mov
dec
add
sahf
jecxz
pop
ss
cmp
inc
sarb
mov
pop
mov
sahf
or
xchg
dec
jno
xchg
lock
xchg
stos
sub
adc
out
sub
cmpb
adc
jno
cmpsb
push
lahf
arpl
inc
lret
repnz
push
lret
test
int3
cmp
xor
je
cmp
leave
mov
and
leave
cmpsb
mov
mov
sbb
enter
add
xlat
fldenv
pop
daa
adc
aas
jmp
scas
inc
push
fildl
mov
push
jecxz
je
mov
lret
adc
xchg
sub
add
outsb
mov
xlat
mov
jb
fcoml
pop
mov
cli
jmp
in
clc
test
push
adc
push
xchg
out
arpl
movb
das
dec
testl
cld
pop
mov
push
mov
loop
mov
arpl
inc
cli
dec
jmp
out
and
in
or
ss
in
and
lcall
fstpl
mov
outsb
push
sub
fstpl
xchg
jge
out
mov
or
insl
ret
sbbb
test
pop
pop
orb
out
dec
mov
mov
loop
aas
ss
sub
insb
lds
mov
mov
ja
outsl
lock
dec
popa
adc
sub
push
mov
mov
add
dec
fidivrl
out
testb
or
sahf
cmp
jl
mov
fs
add
lret
stos
dec
xchg
sbb
jb
push
xchg
les
cld
push
aaa
sahf
sub
pop
ds
popf
sbb
pop
lret
mov
xor
pop
leave
loopne
push
mov
xor
push
aad
pop
xchg
or
outsl
xchg
sbb
je
scas
test
push
scas
or
or
pushl
and
pop
sub
mov
or
fcompp
xor
sbb
insb
nop
gs
push
sub
daa
jp
les
popa
sar
lock
test
outsl
leave
push
jbe
std
and
je
leave
mov
rclb
cmc
dec
int
mov
xchg
push
pop
int
and
inc
std
or
xor
dec
jb
mov
lcall
adc
inc
sub
mov
inc
daa
jne
mov
je
dec
pop
push
fstl
add
sub
enter
aaa
pop
movsb
cmp
negb
mov
test
testb
lea
pop
not
inc
ds
dec
xchg
inc
xchg
cs
leave
imul
sub
repnz
pop
sbbb
cmpsl
test
pop
movsl
dec
cld
fs
das
fadds
pop
cmpsl
das
ss
and
dec
or
loop
bound
xchg
out
data16
ja
bound
insb
sti
aam
adc
or
adc
xor
sub
or
cmp
push
mov
mov
cld
mov
adc
mov
stos
fld1
int
fildll
dec
in
adc
add
xchg
sbb
push
decl
cwtl
arpl
fwait
leave
das
repnz
push
js
mov
add
pop
out
lds
clc
xchg
test
xchg
xchg
jae
incb
imul
lahf
mov
sti
fcoms
mov
shlb
movsb
cld
insl
mov
jnp
aam
cwtl
sbb
pusha
and
cmp
lock
std
ja
xchg
lods
leave
scas
test
pop
mov
xor
sbbb
sub
jecxz
cmp
subl
pop
aad
mov
mov
dec
popf
das
movsb
push
mov
int3
sti
inc
testl
and
in
pop
sbb
cltd
jle
cli
add
popa
in
push
cmpsl
or
int3
dec
jns
inc
lret
mov
addb
cmp
pop
jle
mov
jg
fs
jae
cmpsl
cmpsl
mov
ljmp
sbb
pop
cmp
clc
mov
push
ret
icebp
adc
jo
inc
inc
jb
and
outsl
mov
push
fxch
int3
xchg
ret
xorb
mov
or
dec
shrl
sub
inc
cmp
sub
sbb
test
sbb
lea
lods
xor
push
add
xchg
inc
xor
cwtl
jg
mov
xor
shll
sub
insl
cli
adc
sub
repnz
std
das
icebp
ds
sahf
adcl
sbb
lea
mov
fs
push
sti
adc
push
out
dec
sub
mov
mov
mov
data16
in
inc
leave
jl
ljmp
movsl
and
fstps
rclb
subl
xchg
shrl
and
mov
sbb
pop
outsb
pop
add
mov
add
push
mov
data16
ja
push
hlt
jno
fisubs
lret
mov
call
inc
dec
sahf
shrb
pop
xchg
loopnew
mov
pop
mov
sbb
xlat
inc
adc
in
add
mov
je
push
ret
mov
mov
ja
jl
mov
mov
addr16
xchg
jne
or
mov
out
ud1
cld
and
push
xchg
icebp
pop
adc
mov
arpl
outsl
test
jno
xchg
popa
pushl
popa
add
adc
sub
daa
and
sub
inc
xchg
ret
mov
push
xchg
xor
icebp
pop
jae
lahf
and
mov
jge
pop
inc
adc
xor
and
jbe
repz
xor
inc
push
pop
inc
push
fdivr
dec
aam
mov
push
adc
or
cmp
out
push
fidivrl
aad
mov
push
les
clc
out
xor
fldenv
mov
aam
ss
xchg
lahf
ffreep
cwtl
mov
fs
movsl
insl
cld
in
cmp
lcall
sbb
mov
pusha
cli
insl
daa
pop
movsb
fildll
inc
adc
dec
cmp
ffreep
and
sub
cmp
xor
mov
xlat
subb
call
dec
mov
cli
jge
iret
push
outsl
mov
xor
cmpb
inc
fdivr
add
enter
lcall
loope
sarl
xchg
in
shll
push
mov
repnz
pop
notl
and
cltd
cmc
mov
pop
pop
xchg
mov
ror
cmp
mov
sbb
adc
xchg
push
loopne
rcrl
arpl
loope
and
std
adc
loop
dec
rdmsr
sub
lahf
nop
sub
repnz
sarb
jmp
mov
sub
inc
imul
ljmp
scas
jns
xchg
jne
adc
leave
mov
outsb
fnstenv
adc
dec
or
iret
push
popf
test
sahf
push
hlt
and
cmpsl
hlt
jb
dec
sbb
push
into
aam
lods
xor
adc
lahf
imul
ja
fstpt
add
pushf
push
push
jmp
sub
aas
and
jl
pusha
pop
push
xchg
repnz
ja
adc
add
mov
add
mov
mov
pop
in
leave
ja
mov
or
imul
mov
xorb
repz
imul
mov
mov
cmc
cs
imulb
pusha
js
xchg
loopne
ss
cmp
out
enter
pop
add
lock
iret
mov
cwtl
pop
rorb
dec
inc
mov
lock
inc
mov
jp
or
adc
fwait
inc
dec
out
mov
fsubrs
stos
insb
mov
lret
xchg
repz
in
mov
mov
mov
imul
popf
inc
pop
add
push
loopne
push
out
pop
pop
mov
jle
inc
add
aam
scas
mov
das
push
mov
cmp
lods
mov
cmc
mov
rorb
pop
mov
push
lahf
push
and
imul
and
mov
cmp
mov
mov
dec
out
js
sbb
mov
lods
mov
jb
ljmp
or
adc
add
test
cmpsb
pop
xchg
adc
xor
lock
lods
out
cltd
fs
mov
lods
mov
scas
repz
pop
push
sub
mov
mov
dec
fwait
push
jno
cmpsb
jns
push
int
or
and
jmp
or
xor
leave
lahf
cmpsl
push
stc
pop
imul
hlt
sbb
pop
and
dec
mov
mov
movsb
sub
out
push
loop
loopne
xchg
inc
pop
adc
aas
sbb
jb
mov
rorb
pop
cmpsb
ljmp
pop
xchg
dec
cmp
lcall
pop
idiv
aas
xchg
cmpsb
pop
mov
and
in
push
and
int
and
outsl
xchg
push
xor
movntps
xor
and
cmp
pushf
pop
insl
lahf
mov
pusha
addl
sti
sar
xorl
adc
fcomi
jge
pop
push
jmp
shrb
dec
sbb
inc
popa
cmp
shlb
ret
bound
ss
xor
push
add
sahf
pop
into
push
or
ret
jecxz
push
repz
mov
jecxz
mov
push
inc
mov
cmp
jno
and
mov
dec
jge
mov
idivl
insb
push
imul
ja
sbb
push
mov
jae
fcompl
imul
fcomps
xor
je
cld
cs
sub
movsb
retw
fimull
hlt
mov
in
shll
enter
scas
dec
xor
into
push
jmp
jb
das
or
pusha
or
into
lahf
push
push
add
jae
xchg
add
cmp
popa
cmpl
int
push
push
mulps
stos
out
pop
sub
es
int3
aad
lds
or
fmuls
pop
xor
mov
fnstenv
sub
sti
and
neg
imul
lcall
pop
fldenv
stos
sub
adc
popf
rcr
rolb
xchg
adc
dec
call
push
dec
jns
xor
mov
and
outsl
roll
push
loope
push
pop
pushf
andb
repnz
inc
or
jns
sub
sbb
and
fnstcw
inc
rorl
xor
clc
leave
and
adc
repz
and
lock
sub
mov
cmp
pushf
mov
xorb
mov
repnz
sbb
xchg
xor
jg
inc
xchg
and
pop
dec
out
jg
stc
push
rorl
jno
and
testb
add
and
dec
inc
aas
pushf
into
fists
arpl
pop
mov
repnz
test
gs
daa
sarl
jl
adc
popf
out
mov
jp
push
xchg
add
inc
cmp
mov
or
unpcklps
test
xchg
adc
cmp
int3
gs
push
aaa
sub
movsl
dec
stos
or
in
cmpsl
mov
popf
lcall
lcall
fcmovb
popf
sub
mov
inc
mov
repnz
ss
push
mov
cmp
pop
adc
fwait
stos
mov
test
jp
pop
cmp
mov
cmp
push
inc
bound
divb
pushf
sbb
jb
int
pop
loopne
mov
push
xchg
sub
mov
cmp
push
push
pusha
out
cmpsl
pop
ds
fcompl
insl
rcr
add
sub
sahf
and
dec
icebp
iret
mov
aaa
push
je
test
pop
pop
mov
or
mov
xchg
mov
arpl
mov
cld
fwait
pop
mov
pop
jg
jne
fnstcw
daa
xchg
xor
in
lock
jbe
and
cs
cmp
int
jae
add
sub
fdivs
sub
bound
iret
push
add
jge
aad
iret
insl
addr16
cmc
mov
jg
lahf
ficompl
fisubrl
cmp
mov
cltd
adc
pop
push
addr16
or
inc
mov
push
testl
push
dec
mov
mov
push
nop
inc
loopne
and
mov
insb
dec
jns
adc
cli
inc
lcall
add
jae
mov
cli
cld
cmp
cmpb
cmp
add
pop
pop
pushf
mov
lock
push
loop
icebp
iret
mov
test
or
ja
popf
mov
hlt
ds
mov
call
or
aaa
jo
cmp
and
nop
adc
imul
test
mov
dec
inc
dec
arpl
std
push
rorl
mov
stos
cs
mov
aam
jecxz
adc
cwtl
sbb
mov
sub
sub
xor
mov
mov
inc
push
loope
pushf
push
sbb
ficoms
push
bound
sbb
xor
popf
adc
push
in
rorb
adc
fisttpl
push
mov
xchg
or
mov
imul
clc
movsl
pop
adc
dec
xlat
loopne
jne
cmpsl
sti
imul
add
or
scas
aad
sbb
shll
pop
xor
aam
je
jne
xchg
jp
mov
fcomip
lods
mov
stos
pusha
or
jp
jp
sub
push
sbbb
rorb
lcall
pop
sub
and
int3
mov
ficomps
sarl
cmpsl
jmp
or
jg
dec
outsl
cld
shlb
jnp
in
jle
repz
ret
lret
or
imul
int
cmc
jo
push
or
clc
cld
pusha
push
xchg
es
int3
icebp
mov
adc
scas
sahf
fcmovnb
cwtd
push
jne
sub
pusha
xchg
nop
mov
lods
or
insl
les
mov
shlb
movsb
mov
and
lmsw
add
pushf
in
jae
dec
lods
sbb
test
or
lea
jle
push
sbb
and
loope
mov
push
cmp
scas
icebp
cwtl
dec
mov
filds
and
jle
cmp
mov
jae
adc
mov
or
pop
lcall
jmp
push
sub
dec
in
cmp
nop
je
pusha
out
ficoms
xor
in
inc
out
out
xor
aas
out
enter
push
jae
arpl
or
inc
stc
xchg
adc
jle
sbb
jno
add
nop
mov
stos
pop
fs
lods
mov
sub
sti
and
mov
cmp
pop
arpl
lahf
xlat
sub
jmp
xchg
out
dec
mov
mov
cli
loopne
gs
push
jecxz
xchg
mov
and
fistl
inc
rcl
cmp
in
jb
push
pop
clc
enter
jp
fstl
lcall
ss
fstpt
xchg
jne
mov
inc
cld
stos
enter
mov
cmp
xlat
mov
xchg
jl
enter
sbb
xor
adc
aaa
sti
scas
sbb
fwait
cld
mov
inc
insb
sub
mov
shlb
adc
mov
mov
les
adc
mov
cmp
sti
repnz
ss
cs
popa
add
or
and
iret
shlb
jmp
movsl
xor
inc
mov
popf
ds
dec
sub
lahf
hlt
cmpsb
std
sbb
je
adc
rclb
nop
shlb
mov
fsubp
jnp
mov
xor
lods
pop
pop
inc
adc
hlt
xchg
inc
push
pusha
bound
int3
sbb
pop
addb
push
test
adc
push
es
push
push
add
lahf
dec
into
mov
int3
daa
cmp
nop
adc
ljmp
and
mov
mov
rolb
xchg
lahf
clc
push
add
mov
call
add
cld
jecxz
arpl
shufps
mov
jo
filds
xchg
das
xor
cmp
ret
mov
cli
lcall
sub
pop
xchg
sbb
adc
nop
xchg
rcrb
sub
add
movsl
movsb
hlt
outsl
jg
rcrb
in
add
call
jne
mov
sarl
rclb
adc
pusha
or
jnp
imul
pusha
mov
sbb
mov
sub
sub
adc
push
mov
je
sbbl
sahf
leave
xchg
cmp
sub
popf
jne
shrb
mov
fisubrs
xor
test
jbe
not
aad
mov
sarb
shl
xchg
sub
xchg
insb
js
push
std
aad
xor
push
mov
cwtl
dec
mov
xchg
sarb
mov
cmp
aad
ror
enter
dec
jle
xlat
cli
test
xor
sbb
outsb
sbb
fwait
jge
gs
ds
push
scas
add
jge
mov
xchg
or
shrl
cwtl
std
mov
fsubp
xor
fstps
inc
dec
push
out
mov
fistpll
popf
inc
test
daa
push
sub
pop
or
pop
inc
mov
jbe
push
popa
adc
lret
mov
xchg
lret
outsl
xchg
inc
scas
test
mov
inc
out
jge
pop
mov
bound
cmp
push
cmp
mov
shrb
inc
gs
mov
loop
test
aaa
call
add
or
adc
shl
push
cmc
inc
cmp
js
xchg
lahf
mov
xor
add
xchg
aad
mov
add
ret
aam
fnstenv
ja
xlat
imul
lds
mov
fwait
pop
pop
jmp
jecxz
lock
pop
mov
cmp
pop
stos
xchg
inc
adc
gs
imul
lods
movsb
sbb
cwtl
imul
or
ds
into
jae
hlt
rol
xchg
mov
push
jle
push
mov
xchg
lds
jb
test
dec
enter
and
sub
mov
shll
push
sbb
and
xchg
push
dec
jle
lods
sbb
repnz
xor
aas
pushf
xor
push
fldt
push
jae
mov
ficompl
and
pop
push
sub
xor
add
rcrb
fistpll
mov
btr
je
push
roll
cmp
xchg
cmc
stc
dec
repz
out
mov
cmc
cmpsb
xor
ret
fildl
mov
cwtl
mov
and
add
es
mov
add
in
test
jmp
shl
in
shll
xor
notb
roll
pusha
inc
enter
out
jo
jbe
pop
pop
dec
cmpsb
mov
sbb
xor
xor
push
mov
lock
adc
loop
int3
movsl
pop
inc
repz
ficoml
xchg
in
mov
xchg
into
out
and
jae
shld
aam
mov
sbb
inc
int3
frstor
dec
sub
stos
mov
mov
jl
sbb
out
jne
mov
xor
nop
aam
cltd
mov
push
jp
enter
jo
clc
or
xchg
push
stc
out
push
xor
or
invd
mov
mov
jno
inc
insb
push
and
punpcklwd
out
lahf
sbb
fnstcw
andl
aad
and
pop
mov
ja
dec
and
mov
daa
data16
sbb
mov
dec
call
loop
leave
mov
push
mov
rcl
in
ret
inc
movsl
jno
rcll
stos
cwtl
adc
stc
cli
adc
push
out
mov
lods
loop
xchg
sti
push
sbb
xchg
and
inc
sbb
sbb
test
call
push
popf
iret
mov
and
and
cltd
pusha
mov
cwtl
xor
and
cmp
jne
dec
adc
xchg
dec
and
push
cmp
push
fnstenv
pop
cmp
loope
fldenv
orl
sbb
cltd
push
scas
inc
jecxz
mov
mov
sbb
jmp
int3
test
push
fstpt
jb,pt
test
mov
pop
fistpl
dec
lahf
roll
int3
loop
push
mov
add
dec
inc
aaa
pop
and
jp
cmpsb
push
fisttpl
popa
scas
cmp
xor
pop
and
imul
dec
leave
xchg
jge
cmpsl
xchg
lret
push
test
stos
pop
insb
xchg
mov
pop
fistps
xchg
fwait
mov
testb
sub
pop
cmp
addr16
mov
fsubrp
mov
mov
adc
lcall
andb
pop
mov
mov
dec
std
sbb
and
inc
mov
lret
mov
ss
stos
imul
push
cmp
call
idiv
fistl
mov
mov
repnz
addr16
or
shlb
jecxz
rorb
ljmp
lcall
fistpl
rolb
or
mov
aam
fwait
popf
jno
test
inc
mov
in
shrl
sarl
imul
out
dec
ret
jmp
shrl
xor
cltd
mov
mov
test
popf
and
icebp
pop
ja
inc
icebp
sbb
out
test
repnz
dec
bound
xchg
cli
xor
punpckldq
add
or
outsl
sbb
xchg
les
push
add
jns
dec
bts
testl
push
daa
movsb
xor
jmp
jmp
or
sub
push
mov
xorl
stos
cwtl
rolb
dec
dec
arpl
cmp
jle
insl
adc
sub
in
enter
push
rorl
fisubs
sbbb
jecxz
in
adc
pop
ja
mov
jle
aam
int3
xchg
fiaddl
add
stc
popa
loope
loopne
idivb
jnp
or
fsubrs
or
fildl
aad
loope
push
add
fcmovbe
push
shl
out
mov
mov
test
and
jle
mov
adc
movsb
add
mov
movsl
or
cmp
fisubrl
mov
ljmp
mov
pop
push
jne
loop
addr16
add
lret
push
and
mov
xor
or
nop
xchg
stos
push
xor
fistl
push
mov
sub
mov
dec
mov
mov
push
mov
or
leave
jmp
mov
fs
leave
hlt
repz
cmp
push
jae
dec
mov
lea
dec
dec
or
dec
stos
and
sub
pop
xchg
jne
push
mov
push
imul
daa
push
pop
cmpb
leave
in
lahf
or
add
test
adc
jns
enter
pusha
and
jae
ss
test
sub
stos
leave
cli
pop
pop
push
test
ficoml
inc
add
std
push
ljmp
mov
jecxz
push
add
adc
and
fsubl
push
pop
lods
js
mov
sbb
shll
test
popa
push
icebp
daa
rcrl
stos
mov
adc
outsl
jmp
jno
xlat
add
add
jmp
fs
rcr
repz
mov
inc
add
aam
xchg
sub
add
sbb
mov
fsts
mov
jle
inc
in
enter
leave
pop
outsl
enter
in
mov
and
stos
sti
fdivr
add
sbb
cmpsl
dec
xchg
int
or
daa
aad
fs
cmp
jb
int3
outsb
xchg
iret
sbb
adc
fwait
or
sahf
pop
mov
lahf
fcmovnb
xchg
xchg
aad
mov
and
mov
sub
mov
mov
test
mov
enter
aad
sub
sub
std
add
lcall
mov
decl
int3
adc
adc
mov
ret
shll
sti
mov
xchg
cld
or
push
or
inc
mov
mov
pop
xor
stos
pusha
jo
test
mov
cmp
dec
dec
mov
jbe
or
rorl
cmp
push
orb
dec
add
inc
jp
or
jb
movsb
mul
mov
cmc
sbb
push
cmp
fwait
add
sbb
int
xchg
cmp
push
cwtl
mov
sarl
cmp
enter
push
stos
adc
int
popa
hlt
cld
adc
push
and
inc
mov
imul
mov
sarb
mov
icebp
insb
or
iret
stos
mov
jecxz
sbb
test
sub
ja
aas
push
and
xor
test
scas
adc
sti
loope
dec
lods
push
daa
xchg
fbstp
pop
adc
push
fs
push
test
test
pop
push
fninit
fbstp
fmuls
aad
and
std
aad
xchg
movsb
mov
cld
jne
push
leave
jp
lahf
imulb
fnsave
xchg
popf
jecxz
shll
es
stc
jno
imul
test
dec
fidivrl
pop
adc
push
orl
mov
xchg
sbb
outsb
fwait
es
cmp
dec
int3
sub
mov
dec
and
popa
enter
pop
fnsave
cmp
inc
mov
cltd
je
adc
mov
push
jecxz
mov
ds
pop
fcoms
or
cmp
push
cli
xchg
lret
daa
clc
movsb
subb
xlat
push
addb
pop
cli
mov
add
ret
aad
int
pop
or
mov
pop
xor
lea
mov
data16
add
pop
xchg
mov
in
adc
aaa
in
xchg
int
xor
in
sbb
imul
pop
rclb
cli
incl
fistps
push
lds
mov
or
jle
jns
mov
pop
push
add
xor
fwait
cld
bound
dec
outsl
sub
test
fistl
jne
jmp
rorb
adc
sub
loopne
push
clc
jp
jecxz
xchg
push
pop
fidivs
rcll
cmp
pop
sub
xchg
xchg
jecxz
mov
mov
ja
ja
and
pop
inc
adc
xchg
inc
dec
mov
pop
mov
mov
pavgb
mov
jns
inc
imul
in
out
adc
out
push
sti
ja
mov
cmpsb
mov
mov
mov
mov
aad
mov
inc
les
data16
pop
scas
sbb
scas
pushf
mov
sti
call
mov
mov
sbb
test
or
xchg
dec
inc
adc
rolb
repnz
jne
add
fdiv
outsb
movsb
sahf
inc
mov
cmp
fxch
sti
mov
neg
aas
xrelease
mov
clc
or
lods
pop
lock
enter
and
add
sti
xlat
mov
or
mov
fwait
pop
ljmp
jl
sahf
push
mov
fdivrs
idivl
fistl
inc
ljmp
mov
dec
sbb
cmpsb
mov
push
jno
inc
mov
mov
mov
xchg
xchg
test
dec
adc
dec
popf
add
dec
xor
dec
mov
push
push
push
icebp
xor
push
out
gs
add
int3
push
out
fsubrs
shlb
fldt
pushf
ja
aas
sub
xchg
jb
xlat
pop
lcall
xor
push
stc
sbb
push
lret
or
mov
adc
pop
in
aas
gs
push
jae
xchg
lahf
adc
sub
aas
mov
sub
jns
jns
sahf
fistps
imulb
hlt
lahf
dec
inc
je
aas
ret
add
xchg
sub
pusha
rcl
sti
pusha
sbb
test
cmp
jnp
jno
movsb
mov
push
cmp
jl
mov
inc
test
sub
lods
push
jle
add
jecxz
repz
sbb
sub
in
adc
test
lds
push
mov
in
mov
fdivr
sub
pop
cmpl
xchg
pop
xchg
push
inc
sub
push
dec
cld
mov
pop
ret
imul
jb
out
mov
fbstp
mov
add
cli
jle
pop
call
add
lods
popa
sub
xchg
shlb
xor
lahf
dec
sbb
adc
aam
lea
movsl
fwait
lret
fs
out
mov
lret
cmp
push
int3
xor
adc
mov
loope
mov
aad
push
sub
addl
inc
enter
test
int3
cmp
lahf
cmp
sbb
lds
cli
xor
out
icebp
daa
repnz
stc
xlat
or
in
xor
insb
push
push
mov
mov
adc
sbb
fwait
popa
or
popf
jmp
mov
dec
outsl
cli
cmp
mov
cmp
sub
mov
adc
xor
pop
lahf
repnz
sbb
fimull
and
push
rcrb
push
fldl
pop
adc
mov
add
sti
mov
push
les
push
cmp
add
cwtl
xchg
dec
orl
inc
cmpsl
nop
sbb
add
inc
lods
fsub
mov
cmp
mov
shr
mov
add
out
mov
jne
outsl
mov
test
sbb
int
xchg
sbb
lods
fsubrl
jmp
out
cmp
aam
call
sahf
outsl
pop
adc
adc
das
mov
sbb
subl
ret
addr16
and
lock
enterw
cmp
daa
cmpsl
hlt
mov
pop
or
jecxz
sub
and
aaa
mov
inc
pop
xchg
pop
pop
idivl
call
mov
mov
push
dec
mov
mov
mov
aad
dec
and
inc
push
cmpsl
int3
sub
popf
lock
gs
cmp
jns
fs
dec
call
pop
loope
and
into
ja
das
ljmp
pop
cmp
mov
mov
xor
call
subb
xchg
iret
dec
orb
imul
pop
jle
inc
scas
dec
enter
mov
inc
jb
mov
dec
mov
xor
sub
push
test
pop
mov
dec
jle
xor
cmp
add
cwtl
cmc
sbb
int3
mov
mov
pop
imul
repz
pusha
testl
enter
aas
jae
add
adc
outsb
and
dec
jnp
test
sbb
repnz
mov
fsub
cmpsl
sarb
mov
sbb
in
pop
adc
or
in
shlb
imul
mov
inc
xchg
ljmp
inc
xchg
sahf
pushf
jnp
imul
in
or
sbb
pop
mov
push
adc
jns
imul
sahf
push
gs
ror
push
or
fldenv
jb
inc
sbb
xchg
lcall
sub
add
lret
inc
xchg
sub
shlb
jmp
pop
pop
mov
iret
leave
xchg
ret
stc
xchg
pusha
movsl
xor
jae
mov
arpl
rol
ret
or
jns
mov
hlt
or
add
int
shlb
cmpsl
cmp
push
enter
mov
es
pop
pop
cs
or
cmp
stos
push
xchg
or
idivb
jmp
inc
daa
inc
add
mov
adc
push
xor
jb
divl
test
inc
xor
aas
mov
rorl
or
mov
xor
pop
sub
mov
lods
add
sbbb
mov
sub
ret
repnz
jge
inc
neg
push
dec
lret
lahf
ja
and
adcb
xchg
hlt
xlat
shl
mov
mov
repnz
sbb
lea
mov
cmp
or
inc
xor
jnp
sbbl
mov
scas
test
sbb
add
into
inc
add
cmc
lock
mov
sar
push
mov
popf
mov
lods
nop
out
mov
push
in
push
xor
xchg
and
cli
es
push
push
pop
insb
in
test
sbb
dec
fsubs
mov
sub
notl
sti
push
adc
out
arpl
repz
clc
xor
lcall
push
loope
lea
cltd
sub
sub
jo
stc
adc
inc
rol
xchg
push
loop
aas
add
test
es
mov
loop
jge,pt
out
xor
jae
enter
cmp
xchg
mov
mov
ret
das
inc
sub
sbb
xchg
xchg
cli
mov
shl
or
repnz
ret
sub
xorb
inc
mov
mulb
decb
mov
nop
jb
call
mov
or
adc
in
sbb
sbb
aas
xchg
mov
leave
mov
aas
inc
mov
icebp
sti
and
adc
mov
adc
mov
jecxz
or
pop
out
in
call
pop
or
sbb
test
cmp
pop
lea
push
aad
movsl
xor
mov
sbbl
lods
adc
sub
scas
dec
push
movsl
aam
call
addr16
es
and
in
iret
mov
fs
mov
cmpsl
lods
repnz
xchg
lea
imul
mov
fsubr
mov
loopne
cmpl
cwtl
mov
sbb
pop
test
ds
or
rcr
mov
mov
cmp
sub
stc
sbbl
call
addr16
icebp
dec
or
adc
stos
adcb
pop
sahf
xchg
call
mov
incl
pop
add
sub
inc
in
mov
scas
and
push
je
push
xor
mov
test
add
mov
cltd
neg
int
and
mov
rclb
push
jge
mov
or
imul
test
movsl
or
mov
stos
xlat
fwait
sysexit
loop
add
pmaxsw
jle
mov
sarb
push
xor
testl
push
jb
mov
lea
jo
inc
xor
mov
cmc
loop
xchg
mov
add
int3
lock
push
push
inc
pop
mov
ljmp
mov
add
add
adc
xchg
mov
mov
add
scas
xchg
fwait
cmpsb
stos
orl
outsl
xorb
insl
nop
sub
mov
mov
int
pop
lock
pop
insl
adc
or
dec
dec
movsl
xor
fdivrl
adc
out
outsl
addr16
inc
dec
sub
cmp
arpl
popf
sbb
cmp
icebp
xor
dec
jae
xor
divl
mov
mov
mov
xchg
jle
dec
adc
stos
pop
push
or
jle
dec
stos
and
mov
push
pop
mov
or
ret
push
xchg
call
test
ja
inc
xor
adc
fiaddl
inc
cmp
add
dec
xor
stos
cld
push
sarl
std
push
cmp
pop
adc
sub
mov
rclb
xchg
cmc
testl
inc
inc
cmpsb
pop
sbb
mov
adc
js
dec
or
andl
enter
lret
rcll
or
cmp
and
pop
jbe
cmpsl
pop
das
adc
sbb
js
add
cwtl
inc
mov
xchg
sbb
out
insb
stc
dec
addb
xor
repz
int
dec
idivb
loope
dec
and
push
mov
shl
pop
repnz
push
imul
cmp
shrl
xchg
inc
inc
jne
ror
clc
dec
jnp
rcrl
loope
xor
inc
repz
pop
cmpsl
scas
sbb
jb
int
inc
ljmp
cmp
mov
bound
scas
lods
fnclex
sbb
mov
push
lods
xlat
jbe
int3
dec
es
loope
mov
xorb
or
ja
or
sub
or
mov
pusha
sub
in
mov
int3
xchg
test
mov
pop
cmp
pop
insb
shr
mov
mov
jb
xchg
rol
and
cmpsb
out
nop
xchg
dec
outsl
jle
mov
js
les
std
movsl
adc
or
mov
inc
sub
shlb
push
add
sbb
test
push
test
mov
push
repnz
imul
mov
or
xchg
xchg
aaa
mov
les
popf
cli
xchg
and
dec
lock
in
push
popa
imul
push
ret
add
out
repz
nop
loope
cltd
push
mov
inc
fs
cmpsb
jge
das
aad
mov
adc
pushf
ja
es
adc
and
adcl
notl
push
and
arpl
push
inc
icebp
dec
movsl
and
mov
test
and
adc
inc
scas
idivl
loope
cwtl
xor
sbb
sbb
inc
push
sub
jl
lods
aas
mov
xchg
dec
test
int3
mov
or
dec
and
pop
int
fistl
push
insl
xchg
fwait
xchg
jnp
leave
xlat
ljmp
inc
lret
push
pop
fsubs
roll
add
out
mov
inc
add
arpl
mov
push
imul
shll
add
inc
mov
adc
fs
xor
mov
dec
int
mov
popa
sahf
outsb
cmp
jp
hlt
hlt
pushf
xchg
inc
sbb
sarl
inc
dec
test
daa
xchg
or
shrl
mov
leave
jns
nop
roll
cwtl
fs
lock
pushf
nop
mov
push
pop
jge
in
test
add
lds
or
popf
push
test
popf
mov
fadds
out
pusha
loope
mov
mov
shlb
push
sbb
cmc
inc
push
sbb
cmp
push
adc
xchg
lds
mov
aas
loopne
and
fidivl
mov
fbld
adc
pop
xchg
roll
pop
mov
push
pop
xchg
popf
pop
sub
sub
mov
add
test
imul
jne
in
pop
fwait
mov
cmp
sti
fcomp
push
add
push
mov
ret
popf
bound
lret
fxch
decb
flds
dec
scas
sub
les
push
inc
mov
adc
cmp
out
nop
adc
test
fidivrl
mov
or
mov
fcoml
push
imul
push
cmp
sbb
xor
cld
dec
test
cmpsb
in
movsb
jmp
test
jae
mov
adc
scas
mov
xor
lods
movsl
popa
fsubs
nop
popf
pop
push
mov
rorb
mov
orb
and
lret
and
lret
hlt
loop
icebp
xchg
jb
pop
pop
jns
push
out
jl
es
ret
xchg
scas
and
sahf
push
pop
inc
outsb
pop
scas
add
pushf
sbb
or
mov
arpl
adc
jg
hlt
add
imul
mov
jecxz
hlt
push
xchg
test
stos
pop
inc
rorb
sbb
add
js
decl
ret
xchg
push
push
sub
add
mov
sub
hlt
add
and
mov
popf
and
iret
rorl
data16
out
mov
cmp
shll
push
fcomps
inc
cmpsb
jae
das
add
and
cs
jne
mov
ja
int
leave
jmp
js
adc
scas
in
fcmovne
inc
cmp
imul
xor
jo
push
out
inc
xor
imul
add
fsubrp
push
loopne
jg
inc
mov
gs
mov
push
fwait
cmpsb
push
sbb
or
push
adc
xchg
jecxz
sub
jp
lret
xlat
movb
and
bound
leave
ffree
cmp
adc
sub
lret
cmp
out
mov
xchg
pop
js
movb
xor
mov
mov
pop
lock
imul
data16
rcl
lret
shrb
das
xchg
in
hlt
sbb
int
or
stos
imul
or
aaa
mov
add
sub
lock
jg
mov
push
out
imul
sub
loope
stos
pop
or
je
es
mov
dec
push
mov
xchg
mov
gs
inc
aas
es
sahf
add
inc
pop
pop
lods
inc
in
xchg
sub
mov
or
call
pop
inc
push
push
pop
push
cmpsl
adc
xchg
insb
mov
test
stos
es
mov
dec
jo
into
pusha
fbld
mov
pop
ja
in
mov
push
rcll
pop
fiadds
inc
push
xchg
out
pop
stc
dec
add
repnz
iret
sbb
sbb
jecxz
sbb
xchg
mov
aad
jmp
jno
sbb
shrl
aas
push
es
jp
inc
sbb
pop
xchg
mov
pop
fcomip
mov
pop
mov
repnz
ret
data16
fmull
mov
outsl
int3
test
jbe
addr16
jg
inc
mov
stos
add
or
std
ds
ljmp
in
pop
pop
adc
incl
add
mov
pop
xchg
jne
inc
dec
xor
pop
test
jns
adc
aaa
push
imul
jmp
test
xor
push
jne
cmp
mov
xchg
jno
xchg
iret
push
mov
test
fwait
jns
dec
sbb
outsb
pop
out
pushl
and
insl
jmp
xchg
ret
jb
mov
or
mov
mov
cmp
mov
scas
add
inc
out
mov
enter
and
fsubrs
and
mov
adc
das
and
sahf
daa
mov
push
aas
dec
aam
aaa
pop
and
push
jmp
jb
dec
inc
push
adc
out
inc
rcrl
pop
push
popf
ljmp
cmp
shll
fisttps
in
lds
addr16
cltd
fistpll
and
jle
movsb
jns
fstpt
lods
and
test
mov
xchg
filds
and
ja
out
test
arpl
out
mov
mov
enter
gs
jns
xor
js
mov
sti
xchg
jp
mov
and
es
mov
dec
pop
out
sahf
pop
fisubl
xor
loope
jecxz
push
icebp
mov
mov
out
int
inc
add
dec
add
cmp
mov
fimull
or
orl
mov
pusha
aas
fstpl
dec
inc
mov
in
in
je
sub
iret
aaa
ljmp
adc
das
imul
icebp
cmp
andb
imul
fwait
mov
pop
cltd
in
ret
mov
jnp
mov
repnz
fiaddl
mov
xor
lret
fs
rcr
inc
dec
aaa
fildll
sub
dec
mov
dec
cli
test
or
iret
sub
and
jg
inc
test
and
adc
pop
clc
sub
xor
rcl
jbe
mov
inc
inc
mov
mov
insl
mov
fildll
insb
pusha
cmpsb
stc
cld
sbb
dec
mov
xchg
iret
roll
xchg
les
adc
pop
loop
xor
cmc
shll
jg
cltd
cmpsl
xchg
jne
mov
dec
callw
addl
repz
and
sub
arpl
fxam
js
xor
cmp
cmp
jae
jae
iret
or
movsb
xor
popa
in
and
add
and
add
jae
hlt
add
sarl
lock
and
in
scas
mov
dec
mov
mov
and
je
jl
mov
cmpsl
jl
add
pop
cld
or
inc
popf
mov
outsb
inc
std
jge
insl
mov
mov
push
jbe
les
mov
mov
sbb
cmp
dec
notl
out
mov
sub
lcall
add
pusha
popf
lcall
cmp
mov
and
inc
mov
dec
mov
insb
divl
sub
gs
mov
test
enter
imul
movsb
jmp
sub
push
les
jp
or
lds
mov
scas
mov
add
repz
mov
loope
mov
push
xor
mov
and
cwtl
inc
add
or
cmc
or
pop
adc
arpl
movsl
xchg
jne
aam
inc
fsubrs
mov
xchg
ja
mov
lret
mov
adc
mov
int3
in
pop
xor
xor
inc
jb
rcrl
or
in
aaa
das
pushf
mov
inc
jmp
jp
faddl
jns
mov
pop
filds
daa
xlat
outsl
and
or
or
mov
ja
enter
shll
sti
das
addl
movsl
xor
int
jbe
fildl
xlat
pop
das
xor
gs
xor
mov
stc
sbb
in
test
push
lret
outsb
cmpsl
ds
inc
and
scas
add
mov
xor
popf
xchg
cmp
add
inc
arpl
dec
ja
and
enter
add
pop
test
pop
sbb
addr16
sub
loopne
xchg
xchg
rep
mov
aas
aad
loop
dec
mov
setbe
sub
sub
shl
xor
test
loopne
jns
sbb
lea
xor
sarl
in
mov
scas
loopne
push
push
and
pop
cmp
sub
sbb
cmp
jmp
cs
out
pop
rolb
push
push
je
dec
sub
pop
loopne
mov
mov
cmpb
call
or
adc
sahf
pop
fistpll
stos
mov
andb
data16
jl
loop
movsb
jg
xor
pop
sbb
xchg
dec
scas
gs
stc
pop
dec
adc
xor
add
xor
imul
movsl
add
add
cmp
push
xorb
scas
sti
ss
mov
and
test
push
test
imul
loope
sbb
arpl
das
adcb
mov
push
scas
adc
out
test
arpl
out
hlt
in
push
mov
hlt
pop
je
xchg
div
mov
fidivrl
cmpsl
push
sbb
inc
clc
dec
push
xchg
ljmp
in
mov
insb
insb
sub
movsl
aas
es
sti
cmp
mov
jns
imul
in
push
xchg
mov
imul
in
sub
push
scas
xchg
addr16
stc
pop
out
inc
inc
xor
fcmovnbe
jne
imul
pop
fidivl
scas
xchg
pop
or
push
add
scas
je
xor
popf
loop
fidivl
or
mov
xor
ss
xchg
orl
pop
mov
dec
push
push
mov
sub
aad
lret
mov
lds
inc
mov
fildll
cmp
je
jg
push
hlt
movsb
mov
mov
gs
aas
pop
push
sub
mov
jnp
lods
mov
aaa
stos
addr16
loop
cmpsb
in
dec
popa
push
inc
xor
and
aas
jno
enter
inc
insb
mov
out
loope
insb
add
js
popa
push
bound
aad
outsl
loop
loopne
fdivs
addb
inc
and
in
loope
arpl
ficompl
xchg
ss
das
dec
arpl
inc
mov
mov
inc
cmp
loopne
cmp
push
fcomi
lds
fmulp
fs
dec
inc
pop
jns
nop
leave
hlt
xlat
aad
mov
pop
lahf
dec
int3
dec
push
in
add
in
mov
jno
jp
lods
int3
lods
mov
lcall
lret
insl
out
stc
inc
xchg
outsl
push
xlat
sub
inc
inc
out
adc
fwait
sub
iret
cli
rcrb
mov
mov
testl
pop
fldenv
outsl
mov
cs
jmp
dec
sub
add
sub
jb
cwtl
lret
pusha
lahf
fwait
scas
rorl
sbb
push
test
sub
imul
push
daa
loop
loope
test
sti
lcall
cmp
mov
arpl
stos
pop
sarl
inc
lds
sahf
or
inc
mov
inc
sbb
pop
add
orb
inc
xor
cmpsb
fcoml
pop
jnp
loop
orb
inc
sbb
mov
sub
inc
inc
mov
rcrl
add
jne
mov
daa
cmp
or
or
or
sbb
xchg
lret
fs
or
or
aaa
mov
or
dec
int
inc
push
or
dec
imul
loop
push
insl
icebp
shrl
mov
les
add
dec
mov
call
js
cltd
mov
fmuls
xchg
adcl
xchg
cmp
out
push
inc
lds
daa
inc
adc
dec
dec
idivb
imul
jbe,pn
jno
dec
fldt
push
aad
jne
ret
inc
rcll
lret
sbb
pop
lods
sbb
mov
push
test
bound
add
xor
in
xor
movsb
add
ss
imul
push
xchg
vaddsubps
stc
int
push
imulb
pusha
stc
mov
mov
bound
jne
mov
leave
out
aam
fiadds
ret
inc
test
and
mov
cltd
push
inc
sbb
fwait
and
clc
jle
jp
xor
addr16
fbld
jp
cmp
test
sub
push
xor
int
rorl
xor
mov
pushf
add
popf
xchg
fucom
mov
pop
dec
out
adc
in
lods
jle
ret
add
pop
ja
lahf
push
scas
inc
push
mov
ss
fstps
adc
sbb
jno
pop
push
loop
cmp
push
mov
dec
shll
xor
mov
lock
dec
outsb
es
dec
cmp
jno
mov
imul
outsl
add
mov
or
mov
loope
cld
out
stos
push
push
add
gs
dec
xlat
mov
add
shr
cmp
adc
shl
loope
rolb
dec
js
cmp
inc
lods
mov
mov
call
xor
jle
pop
out
sbb
cmp
pop
clc
xlat
adc
push
jb
adc
inc
dec
cmp
outsl
in
loop
fidivrs
mov
dec
xor
popf
pop
push
inc
dec
or
and
bound
pop
shlb
pop
jmp
insl
adc
pop
pop
aaa
mov
call
xor
pop
dec
orb
aaa
sti
les
shll
fsubs
ret
inc
jb
jno
insb
and
aad
sbb
stc
or
pop
pop
pop
mov
repnz
outsb
outsl
adc
mov
dec
cmp
test
shr
inc
fidivl
dec
outsl
rep
mov
in
out
adcb
xorl
push
sub
xchg
sub
hlt
sub
iret
ret
movsb
pop
ret
lods
ds
and
xchg
hlt
ljmp
pushf
adc
stos
mov
fs
cmp
mov
and
cwtl
int3
sbb
negl
into
mov
add
sti
mov
cli
jle
push
imul
mov
sub
sarl
or
lret
sub
loop
jne
xchg
inc
imul
dec
cli
mov
outsb
sbb
push
js
jno
test
rcrl
out
dec
adc
outsl
sbb
aam
lret
and
sbb
sub
lods
and
add
lret
in
mov
clc
add
jae
icebp
sub
mov
jmp
or
add
push
cmp
sbb
jg
jb
shll
mov
fwait
jno
xor
aam
sub
jno
jp
call
fwait
outsl
sbb
loop
adc
push
xor
arpl
mov
push
add
test
push
addr16
out
addr16
in
test
lahf
pushf
mov
inc
aas
loope
fadds
mov
pushf
jge
xchg
scas
xchg
cmpsl
and
and
inc
repz
fwait
in
inc
jle
dec
mov
xchg
mov
mov
fiadds
bound
cmp
adc
ret
out
out
cmpl
fnstcw
xchg
inc
lea
lahf
rorb
xchg
imul
outsb
adc
stos
daa
cmp
lea
mov
div
jp
sbb
pop
cmc
movsl
push
mov
out
loopne
les
ljmp
pop
lock
push
jae
cmpl
sti
pop
mov
pop
fcoms
xchg
pop
jbe
fwait
lods
mov
add
sub
test
es
or
popf
cmp
xchg
push
and
fdivr
movl
mov
not
mov
jns
cmp
jmp
jns
fnstenv
daa
and
inc
sbb
and
cli
ljmp
mov
out
sti
push
cwtl
sbb
aam
mov
mov
jmp
jg
pop
pop
lods
mov
adc
xchg
fldcw
push
cmpsl
popf
call
add
push
mov
bnd
out
mov
mov
rorl
mov
pop
js
fldt
fisttps
popf
cli
inc
xchg
jecxz
out
or
subl
iret
pop
xchg
pop
xlat
inc
or
es
and
xor
cli
xchg
repnz
mov
inc
movsl
dec
insb
out
sbb
inc
mov
cltd
shl
jle
cmp
mov
arpl
sub
sbb
inc
mov
gs
es
jp
xlat
int3
inc
cmc
xor
test
sbb
mov
xor
add
aas
test
xor
pop
fdivrs
and
jg
out
lock
stos
or
mov
cmpsb
adc
lods
jg
jp
add
sub
pop
notb
popa
pop
fs
movl
adc
daa
mov
push
cmc
nop
jp
mov
imul
inc
ja
fs
dec
inc
imul
in
mov
dec
mov
fwait
mov
adc
fsubs
and
in
jbe
push
pop
pop
popa
inc
lret
cld
rcr
inc
xchg
push
push
jle
adc
push
ja
rorl
ret
test
nop
aas
arpl
mov
call
inc
add
push
jns
xor
and
xchg
pushf
push
pop
std
pop
shrl
outsl
adc
and
xchg
inc
sub
popf
sub
inc
sbb
mov
mov
cmc
out
addr16
mull
lea
cmpsl
je
sbb
lea
mov
or
rclb
mov
movsb
lods
fcoms
pop
mov
pop
jns
jmp
sbb
shrl
shrb
or
mov
ret
flds
and
add
out
inc
dec
pop
aaa
nop
arpl
push
les
les
mov
filds
sbb
cwtl
popl
gs
cmp
lock
xorl
loope
adc
cmp
dec
rcrb
cmpl
loopne
push
xchg
mov
or
sar
sbb
xorl
pop
fwait
repz
movsb
xchg
es
jno
stc
xchg
cmpsb
iret
lock
sahf
outsb
sti
mov
sub
out
stos
xchg
lcall
popa
sub
lds
test
cli
out
sbb
fcoml
mov
sahf
bound
jecxz
cmp
xor
xchg
cmc
xor
inc
or
iret
mov
add
or
je
mov
mov
mov
fimuls
arpl
out
mov
xchg
inc
jge
sbb
add
fisttps
cwtl
leave
push
add
notb
dec
movl
and
sbb
jno
jmp
popf
push
jb
xor
push
xor
inc
ljmp
push
loope
pop
adcb
adc
movsl
jne
pushf
push
push
stc
les
lahf
lock
orl
mov
mov
cmpsl
in
xchg
std
fs
adc
repz
adc
xchg
cmpsb
ret
push
mov
in
pop
inc
enter
call
mov
cltd
or
stc
xchg
inc
cmp
pop
sarl
lock
pop
enter
pop
jno
les
xchg
mov
or
test
adc
or
inc
sub
call
jbe
lock
xor
loopne
xchg
dec
inc
loopne
cmp
in
add
cmpb
sub
jne
sub
imul
stos
mov
test
adc
mov
movsb
mov
mov
adc
fimuls
stos
pop
push
dec
xchg
sub
repnz
pop
push
decl
cmc
pusha
cmp
xchg
mov
jns
aam
loopne
das
fwait
mov
sub
mov
xor
push
inc
or
push
mov
xor
aaa
loopne
stc
adc
inc
jne
std
jb
jno
in
cwtl
push
sub
mov
cmc
aaa
mov
js
mov
cmp
scas
rcll
xor
test
into
outsb
xchg
enter
xchg
or
inc
or
call
fisttps
sbb
dec
mov
dec
mov
enter
push
jne
pop
pop
mov
std
shlb
cmp
lahf
frndint
cli
insl
and
mov
push
jne
sbb
pop
push
clc
int
stos
dec
dec
xchg
test
and
loope
rep
pop
shl
pop
cmpsl
xchg
pop
jl
lods
adc
pop
jo
sbb
js
lods
cmp
adc
into
xor
movsb
jg
sub
jge
cmpsl
xor
inc
or
outsl
ljmp
stos
je
lret
in
outsb
add
ljmp
scas
pushf
sub
outsb
cwtl
loop
sbb
icebp
insl
mov
lds
sti
add
repnz
xchg
int
xor
pop
lods
leave
cwtl
test
icebp
sbb
in
mov
sbb
fnstsw
mov
inc
cmc
mov
fldcw
cmp
mov
gs
jp
fadds
cld
hlt
test
pop
leave
sbb
imul
scas
cmp
or
pop
pop
sub
jno
sbb
add
dec
js
es
add
add
in
mov
into
or
imulb
and
push
push
cltd
int3
push
dec
jmp
mov
sarb
js
mov
pop
arpl
lret
cmp
add
in
sub
movsl
mov
inc
dec
mov
and
dec
mov
jle
cmpsb
lret
scas
or
mull
mov
inc
and
js
in
movsl
inc
jno
mov
mov
adc
xor
or
xor
inc
cltd
stos
movsl
mov
cmpsb
jle
std
push
and
push
xchg
jns
xchg
or
fsubr
mov
pop
xchg
or
mov
dec
es
jecxz
jo
add
movsl
repz
imul
jmp
push
outsl
test
xor
mov
cmc
push
test
js
or
mov
sbb
scas
cmp
adc
inc
into
push
mov
dec
bound
pushf
repz
and
outsl
stos
insl
cmp
xchg
xchg
repz
sbb
sub
mov
add
dec
mov
movsl
pop
call
mov
ss
ret
dec
or
sarb
js
sbb
sbb
push
cwtl
out
jbe
push
mov
push
mov
sahf
inc
jo
dec
repnz
jae
cld
je
sti
cmp
arpl
lret
stc
andl
pop
jle
push
lcall
mov
xchg
xor
aad
cli
jne
stos
fldcw
mov
idivb
movsb
cltd
loope
and
jo
sahf
enter
jb
mov
daa
mov
jns
xchg
sbb
lcall
std
shlb
mov
fdivrs
nop
and
push
js
fstl
adc
movb
xchg
rolb
repz
fsts
sbb
dec
mov
inc
or
icebp
mov
cmpsb
insb
mov
aad
out
pusha
xor
xor
cmp
and
aad
orb
mov
test
push
xchg
loope
pop
adc
das
pop
xchg
daa
push
mov
inc
mov
shrb
sbb
jp
dec
ljmp
cmp
add
cmp
imul
pop
xchg
adc
out
insb
pop
mov
sub
push
dec
jge
lahf
add
jl
fdivl
push
dec
mov
xorb
hlt
imul
push
lods
les
inc
outsb
pop
or
push
add
xlat
loopne
jo
data16
in
das
stos
cmp
popa
push
dec
cs
jge
xchg
ret
push
lods
add
pop
lods
lods
mov
in
dec
pop
pop
or
es
pop
rcll
pop
and
cmp
xlat
xlat
cmp
jp
pop
cmp
fildll
popa
xchg
lds
loop
jmp
shl
popf
repz
aaa
inc
cmp
int
aaa
sub
test
mov
or
cli
clc
fnstsw
pop
cs
sub
xor
pop
sti
fs
xchg
pop
stos
add
icebp
inc
and
bound
sarl
mov
xlat
in
xchg
mov
cmp
pop
inc
or
jne
push
lods
xchg
rolb
cld
mov
lret
mov
push
andb
mov
sbb
mov
sbb
and
xchg
push
mov
xor
mov
sbbl
xchg
into
jecxz
mov
fadds
sbb
insb
imul
xchg
push
outsb
cwtl
sub
cld
mov
lods
in
mov
stc
inc
ror
cs
jb
xchg
xchg
mov
xchg
pop
mov
shll
pop
pop
movsb
les
lret
call
inc
inc
call
push
lcall
cmp
scas
sub
pop
rcrb
call
mov
daa
or
sub
adc
lds
jl
or
and
cli
push
es
psrad
in
stc
arpl
repnz
fistpll
cmp
jbe
ljmp
dec
daa
xchg
xchg
add
outsb
rcll
sub
jge
iret
ss
xchg
inc
push
imul
int3
cld
loop
iret
shr
and
fsubrl
aas
and
mov
or
shrb
mov
sub
xlat
nop
rcr
dec
mov
jnp
dec
cwtl
xchg
jb
jge
mov
ljmp
sub
into
sub
inc
out
rcl
jb
loop
ljmp
outsb
fdivs
push
mov
mov
xor
xchg
xchg
dec
gs
bound
test
sahf
jb
js
xchg
inc
push
lret
jae
lahf
and
lcall
mov
or
mov
jg
xchg
push
add
dec
lods
cltd
mov
dec
sub
mov
inc
addr16
ss
mov
mov
outsb
adc
lret
sub
xchg
mov
ljmp
fwait
imul
adc
out
add
cld
lods
pusha
aam
je
adcl
in
insb
pop
adc
add
adc
fwait
scas
idiv
push
lods
pop
aam
cmp
xor
outsb
and
movsl
mov
pop
movsl
outsl
push
prefetch
clc
xor
mov
pop
add
dec
in
sbb
mov
xchg
leave
dec
adc
out
mov
frstor
jp
imul
or
push
repz
loopne
std
and
dec
stc
call
bsf
js
mov
popf
fdivrs
movsb
test
adc
mov
jne
mov
out
shll
cmp
push
xchg
imul
pop
xor
movb
mov
cmpsb
push
into
repnz
push
hlt
out
fistps
in
mov
lds
or
pushf
mov
mov
cli
pop
les
sbb
xchg
push
cmp
push
out
dec
outsb
repz
hlt
jb
jge
sti
rcll
dec
sbb
fsubs
and
pop
shl
movsb
aaa
sub
stos
lea
subb
pop
pop
loope
mov
insl
sub
cld
addr16
dec
push
adc
dec
mov
inc
aam
scas
dec
cltd
mov
inc
jl
pop
xchg
js
xchg
aam
pushf
scas
les
dec
aad
outsb
iret
push
test
push
inc
bound
jle
jns
in
fisubrs
fmuls
xchg
in
fsubrp
jbe
test
cld
iret
sbb
mov
bound
decb
mov
mov
imul
daa
ja
xor
mov
mov
add
lahf
insb
mov
movsl
inc
add
ficomps
call
leave
dec
in
adc
adc
mov
or
js
outsb
mov
mov
jg
sahf
ficomps
cmpsl
sbb
out
imulb
lahf
mov
mov
push
les
mov
ss
imul
jo
fisttpl
js
sub
add
pop
mov
xchg
leave
cld
inc
mov
pop
lret
or
or
lret
lret
clc
lods
js
sarl
mov
adc
mov
sub
mov
sbb
xor
add
iret
mull
sub
inc
dec
rorl
fdivrs
push
and
xor
lods
stc
cmpsl
mov
in
loope
rorl
push
iret
inc
mov
andb
pusha
push
pop
pusha
int3
adc
push
mov
mov
mov
sub
outsl
adc
mov
sti
cmp
cld
mov
cmp
sbb
mov
sbb
fildll
xor
mov
pop
jge
xchg
fstpl
and
std
xor
aam
fcomi
add
pop
push
int
jnp
inc
out
cld
out
inc
pop
xor
and
aam
mov
stc
cmpsb
cld
popf
mov
add
repnz
cmp
and
push
in
mov
inc
mov
nop
andb
inc
jae
adc
adc
xlat
mov
ret
jp
jno
cmp
jl
je
into
rorl
daa
dec
mov
js
and
push
out
iret
divb
xchg
inc
je
fistpll
sbb
test
ficoml
adc
lods
movsb
stos
jne
xor
fstps
js
and
pop
xor
push
aad
and
jne
sub
lcall
aaa
jb
mov
andb
sbb
fs
inc
das
insb
cmpsb
aam
inc
adc
dec
mov
mov
mov
fisubrs
xor
xchg
mov
adc
stos
gs
xchg
rclb
or
adc
mov
sub
jno
and
cmp
shll
dec
loopne
stos
aad
nop
sbb
dec
or
icebp
and
movb
iret
pusha
sub
hlt
dec
ja
cmp
jl
xor
xchg
fs
adc
les
sub
push
stos
push
add
dec
push
push
in
lods
stos
js
in
cmpsb
es
sub
gs
cmp
insl
push
subl
test
lret
pop
mov
aad
and
pop
sbb
push
stc
popf
rcrl
ret
xor
mov
add
shlb
dec
xchg
imul
popa
lret
and
mov
and
adc
into
mov
mulb
add
pslld
lock
push
push
mov
sti
add
in
adc
xchg
movsb
mov
adc
in
insl
jecxz
fistpl
cltd
enter
in
xlat
movsb
popf
test
add
ljmp
pop
mov
cltd
out
xor
xchg
lcall
mov
jmp
mov
push
push
loope
cs
mov
cmp
cmpsb
dec
push
jo
dec
imul
mov
dec
jo
push
add
movsb
sti
test
fdivr
cwtl
int
mov
jno
mov
mov
ret
lret
incl
mov
loop
push
in
pushl
cld
fiaddl
inc
arpl
xchg
mov
pop
pop
cli
lret
adc
je
mov
outsb
or
xchg
sub
xor
xchg
gs
and
stc
fldt
mov
mov
iret
xor
xor
rcl
pop
dec
pushf
in
int
roll
lods
mov
lods
xor
jbe
bt
lods
push
push
or
aas
clc
xor
mov
in
mov
in
pop
cltd
pushf
jle
push
out
push
out
sbb
pusha
mov
mov
loopne
pop
fimuls
fwait
mov
mov
inc
insb
inc
xchg
mov
mov
inc
fdivl
mov
and
jnp
sbb
push
sub
cmpsl
sub
aam
popa
dec
mov
aad
xor
mov
bound
test
mov
arpl
xor
or
movsl
lret
into
mov
cmp
fldl
xor
add
push
fildll
jns
and
pop
dec
add
idivl
insl
cli
jp
daa
xlat
fmull
sub
js
outsl
into
inc
ret
adc
sar
xlat
dec
mov
imul
stos
jecxz
sbbl
sub
mov
adc
psrad
imul
xchg
add
lcall
dec
sbb
dec
scas
into
or
ficoml
jno
xor
xchg
rorl
inc
mov
jb
adc
js
xor
fldt
push
shrb
stos
mov
sahf
out
jnp
ficoml
sub
std
push
aaa
mov
push
movsl
push
mov
sbb
aam
out
into
inc
out
shl
mov
cs
and
repnz
pop
or
xor
xchg
jne
push
jno
xchg
aaa
adc
sub
add
loope
pop
inc
mov
fists
push
in
pop
jle
imul
in
cmp
inc
inc
jecxz
mov
add
jmp
imul
popa
sbb
nop
clc
imul
xchg
add
push
es
loopne
pop
rol
loopne
sbb
inc
add
test
js
fistps
push
sub
bound
push
sub
cmp
mov
sbb
std
ja
add
add
pop
mov
test
jbe
das
push
ljmp
push
je
aaa
jp
loope
xchg
movsl
mov
jmp
pop
mov
jno
je
out
shrb
vmread
bound
into
mov
cmp
shll
xor
aas
mov
mov
xchg
push
jne
int
xor
mov
insb
push
cmp
int3
rolb
mov
adc
shrb
out
aad
cmp
or
push
push
lock
and
push
cli
imul
jnp
sti
enter
push
mov
push
std
jmp
movsl
arpl
insl
iret
ss
inc
mov
xor
mov
and
jb
push
lea
and
adc
xchg
add
or
pop
aad
scas
outsb
jle
pop
jbe
cmp
out
sbb
pop
and
mov
loopne
dec
into
adc
lock
std
dec
xor
mov
sub
sbb
jp
mov
push
jne
mov
call
sub
add
inc
cmp
mov
mov
daa
xlat
test
mov
sbb
mov
sbb
popf
inc
mov
ret
ror
jmp
inc
xchg
or
mov
lods
cwtl
cmpsb
sub
cltd
mov
movsb
dec
lea
fidivrs
imul
out
ss
fisubrs
sub
shll
sarl
out
dec
or
push
inc
mov
pop
push
dec
and
or
stos
fildll
sub
adc
xor
out
lret
nop
jg
popa
sub
mov
addl
and
mov
xlat
out
xchg
push
mov
out
inc
scas
pop
data16
jne
loop
pushf
ret
dec
cmp
jns
and
ds
dec
inc
fsubs
js
lcall
xchg
or
repnz
xor
mov
lock
sub
sbb
out
xor
adc
xchg
push
inc
cwtl
push
in
dec
xchg
clc
std
icebp
lret
rcl
imul
divb
dec
sub
inc
mov
inc
in
pushl
or
push
add
mov
push
paddd
filds
adc
add
pop
rcl
lods
mov
lahf
dec
cld
add
insl
mov
mov
fisubl
imull
int3
dec
das
stos
add
ss
and
insl
pop
pop
cmp
es
int3
cld
mov
sahf
ficompl
call
popa
fwait
add
jg
mov
mov
push
adc
sahf
inc
cmc
je
int3
lret
pop
add
in
scas
mov
testl
cmp
in
jno
jns
pop
or
sbb
inc
dec
outsl
adc
fbstp
ja
dec
jnp
cltd
leave
mov
or
popf
sub
repz
push
mov
lods
lods
pusha
loop
movsb
imull
fisttps
mov
insb
ret
clc
test
fwait
mov
out
pop
xlat
cwtl
cmpsb
push
cmp
scas
xchg
adc
jns
push
loope
pop
in
sub
push
arpl
mov
dec
and
in
mov
pop
out
aad
inc
cmpb
mov
stos
xlat
test
pop
insl
inc
jle
cmpsb
das
in
enter
jae
bound
stc
push
loope
insb
and
mov
imul
sub
dec
inc
out
dec
sbb
test
mov
out
mov
mov
mov
sbb
sub
xor
fcmovnbe
inc
pop
imull
sbb
inc
mov
adc
out
adc
or
aam
nop
test
sarl
std
fsubp
arpl
sub
jl
sbb
and
clc
adc
or
mov
inc
xor
cmc
and
mov
in
pop
sub
inc
xor
mov
pop
push
push
outsb
inc
scas
mov
popf
ret
jne
test
les
fwait
sbbl
push
sahf
aaa
adc
inc
cld
out
push
xchg
xchg
pop
push
mov
add
sbb
sub
daa
ret
fisubrs
push
pop
or
std
dec
aad
pusha
fwait
sub
movsl
sub
xchg
pop
out
hlt
pop
notl
stos
push
cmp
mov
lcall
insb
jno
ret
mov
and
pop
cmp
into
out
jecxz
pop
pop
jbe
mov
or
inc
lock
pop
mov
inc
fs
jno
adc
push
mov
inc
clc
xchg
repz
xlat
outsb
dec
mov
orb
scas
mov
lret
push
stos
ja
push
adc
test
imul
sub
adc
adc
out
je
in
shlb
xchg
and
cld
insb
testb
jle
cli
loopne
sti
lret
cli
repnz
aaa
mov
mov
mov
adc
std
fidivl
mov
cs
push
push
jl
stos
xchg
enter
sub
xchg
ret
jp
inc
pop
pusha
jns
mov
mov
jne
insb
dec
mov
push
lcall
out
jge
push
mov
dec
out
inc
inc
cmc
add
loope
pop
and
pop
pop
mov
sub
sbb
inc
cmpsb
and
pop
mov
xor
inc
sahf
pop
addr16
aam
pop
mov
std
xchg
popf
mov
add
cmp
je
and
clc
sti
jo
pop
call
rcrb
jge
adc
mov
mov
aad
mov
lahf
fs
push
lahf
sbb
jne
add
pop
mov
dec
jo
jl
sbb
push
mov
mov
xor
in
xorb
cmc
shll
ja
roll
cwtl
mov
xchg
adcb
and
jl
mov
pop
dec
xchg
imul
test
test
jo
outsl
jbe
add
push
dec
xchg
jp
mov
lods
inc
cwtl
nop
scas
iret
mov
sub
sahf
add
je
in
mov
aaa
sub
out
pop
popf
icebp
ljmp
rcll
push
insl
push
loopne
nop
fisubrs
es
jae
lock
ds
stc
add
sahf
jb
mov
dec
cli
adc
sub
aam
push
xlat
fmulp
push
mov
cltd
dec
xor
into
and
inc
into
outsb
jb
loope
ret
jmp
int3
pop
adc
mov
imul
lcall
jnp
mov
loopne
sti
scas
push
adc
imul
xor
cmp
es
lds
test
es
daa
dec
dec
pop
or
push
adc
pushf
js
adc
and
data16
test
pusha
or
jb
and
mov
add
xor
xchg
bound
push
cmp
cmc
dec
sbb
test
stos
sbb
pop
jbe
dec
stos
or
push
inc
push
dec
outsb
xchg
pop
sbb
inc
mov
loope
fnstsw
data16
pusha
fcoms
pop
int3
sub
and
inc
rcl
leave
loop
neg
outsl
mov
xchg
xor
sub
mov
adc
push
lret
fstpt
xor
out
idivb
gs
mov
cld
inc
jmp
je
out
dec
mov
sti
dec
inc
mov
outsl
insl
testb
leave
je
xchg
xlat
jno
int3
push
jp
push
out
pop
push
imul
mov
pushf
jecxz
repnz
sbb
es
add
je
shlb
or
or
jge
out
jge
xchg
pop
cmp
sbb
inc
insl
int
out
xchg
mov
leave
lcall
pusha
mov
and
rorl
mov
in
dec
or
cmc
scas
out
arpl
xchg
movsb
xor
xor
pop
aad
mov
repnz
pusha
sbb
pop
xlat
loopne
bound
addr16
fwait
dec
pop
idivb
shll
pop
test
dec
fisttps
jo
lds
add
or
jl
fmuls
adc
jle
mov
pop
and
out
or
lret
or
inc
addl
bound
mov
popa
fnstenv
lcall
aam
and
je
and
sub
testb
loopne
sbb
pop
in
sub
cmp
repz
je
sub
mov
nop
xchg
xor
pop
dec
jns
popa
cltd
xlat
pop
sti
mov
mov
sbb
jmp
mov
mov
sbb
adc
test
jb
imul
sarl
adc
cmp
add
sub
sbb
sub
add
dec
mov
push
jp
in
inc
mov
dec
mov
push
xchg
sbbl
mov
ficomps
cmp
mov
lea
js
fst
xchg
xchg
push
mov
cld
jle
sbb
cmp
sbb
decl
pop
ficompl
cmp
pusha
mov
movsl
rorl
mov
mov
mov
mov
andl
dec
lock
sub
adc
cltd
jp
rolb
int3
es
xor
aaa
push
in
test
mov
enter
das
inc
mov
push
outsl
or
leave
or
cli
sub
sub
lret
repnz
lret
aaa
sahf
and
into
in
sbbl
outsb
mov
nop
adc
mov
sbb
adc
jne
cmpsb
adc
sbb
add
add
addr16
mov
lock
testb
mov
test
xchg
push
call
sti
dec
notl
in
add
sti
xchg
lea
push
sbb
into
fs
push
pop
xchg
out
pop
js
in
mov
and
mov
xchg
decl
inc
ss
sub
int
sbb
mov
adc
dec
mov
rorb
loope
clc
insb
out
cmp
rcrb
pop
aas
sub
loopne
sti
lahf
xlat
dec
out
fsubl
ja
mov
mov
bound
lcall
sub
outsl
aad
iret
loope
mov
ja
call
shll
imul
repz
aam
xlat
cmp
test
roll
std
xor
dec
mov
jl
popf
cmp
lcall
sahf
mov
mov
jae,pt
push
mov
cmp
addr16
xlat
sub
pop
xchg
mov
sub
testl
js
je
jnp
fdiv
cs
popa
int3
dec
xor
inc
arpl
xchg
jmp
dec
jmp
inc
das
rorb
pop
cmc
js
popa
push
out
cltd
jle
ja
xchg
push
add
push
inc
in
sub
cmp
dec
and
sub
cmpsl
add
repnz
jns
out
test
jbe
lahf
and
out
inc
out
call
insl
mov
add
mov
arpl
add
xchg
out
test
push
jo
mov
or
fs
es
dec
dec
cmpsb
test
inc
ret
movsb
inc
imul
push
lods
ss
test
and
xchg
fisubs
xchg
add
addr16
dec
adc
bound
aaa
inc
add
and
xchg
push
sbb
incl
fisttps
push
cli
ljmp
fildl
mov
inc
cltd
mov
cltd
cmpsb
les
mov
inc
pop
pusha
or
orl
sbb
lds
je
add
sub
faddl
and
xchg
test
cmpsl
sarl
pushf
xchg
jle
outsl
push
fsubrp
xor
mov
std
inc
out
xchg
test
in
jmp
xchg
sub
pop
xorl
gs
bnd
and
cmpsl
jmp
mov
xchg
cmpsl
inc
cmpsl
and
mov
xor
adc
xchg
xchg
ds
pushf
jno
mov
pushf
inc
insb
pushf
dec
sbb
scas
mov
mov
push
lret
adc
ja
xor
push
pop
cmpb
pop
cmp
pop
gs
fwait
inc
mov
sub
insb
pop
cli
pop
jo
add
mov
or
pop
aam
and
mov
xor
stos
xchg
dec
aas
fidivl
or
stos
aad
mov
stc
xchg
jb
sar
jne
scas
out
mov
push
das
xchg
aam
mov
insb
sbb
pusha
aaa
push
push
inc
mov
push
addr16
stos
es
je
pusha
std
mov
lahf
add
xor
stc
push
aam
push
lods
repnz
and
xor
fsts
andl
imulb
and
jns
icebp
jmp
stos
imulb
cli
mov
shrb
xchg
mov
pop
mov
or
add
add
dec
sbb
adc
pop
cwtl
and
adc
nop
adc
mov
mov
xor
jne
adc
scas
and
jae
or
jle
movsl
add
jl
sub
mov
xor
dec
cmp
jne
sub
hlt
mov
lock
test
and
jne
dec
neg
mov
inc
mov
pminub
stc
mov
jne
push
push
lds
xchg
mov
shl
rcrl
and
stc
dec
push
and
daa
dec
fs
dec
jno
adc
int
hlt
clc
test
push
pushf
pop
rorl
fcmovbe
mov
test
add
or
xor
jno
adc
adc
cmp
neg
sbb
adc
popl
test
or
pop
in
ss
mov
decb
ret
jl
mov
into
mov
es
mov
mov
add
out
mul
xor
outsb
pop
cwtl
mov
cmp
xor
xor
clc
mov
scas
sbb
cli
xchg
aas
mov
adc
sbbb
outsb
inc
cmp
lcall
jle
xchg
ficomps
xchg
cmc
add
test
dec
test
pop
sarl
cmpsb
xor
jb
mov
loop
pop
test
or
cmp
lahf
inc
pop
jp
xchg
inc
mov
push
jp
popf
out
fnstsw
jnp
sti
inc
cwtl
sub
and
loopne
sahf
and
add
out
xor
insb
fimull
sbb
test
add
dec
popa
sbb
call
ja
cli
xor
lds
lock
out
dec
pop
mov
jae
xchg
cmp
xchg
aad
nop
push
mov
fscale
mov
dec
gs
push
lea
mov
shl
jns
int
stc
sub
xlat
dec
mov
fildll
in
ds
pop
movl
mov
push
xorb
mov
daa
mov
and
mov
xchg
shrb
pop
cs
cmp
aad
ficomps
in
adc
fs
jle
jno
add
out
jle
and
xor
ret
mov
fisttpll
sub
lods
mov
mov
ret
sub
xor
into
popf
add
loopne
lds
rclb
cmpsb
lahf
inc
push
std
or
jp
mov
xchg
in
je
xchg
cmp
and
inc
nop
xchg
jns
dec
push
shll
mov
sub
sbb
cld
test
push
fildl
mov
out
mov
mov
and
cltd
push
aaa
icebp
test
xchg
jo
ja
xor
mov
stc
mov
inc
sbbb
sub
divl
test
js
xor
push
xchg
enter
inc
mov
add
in
pop
rol
ljmp
insb
loop
lods
fildl
lahf
xchg
femms
push
adc
fcmovnb
jmp
fsubl
xorl
adc
mov
lret
test
pop
dec
cld
movsb
cwtl
mov
and
push
push
push
mov
sub
mov
jle
imul
outsb
stos
sub
add
add
sub
jno
push
lods
rorl
aas
push
push
lds
pop
jge
lahf
leave
mov
xor
cmc
andl
mov
sti
cmpl
jg
cmc
insb
cmpb
mov
push
scas
mov
push
mov
push
lods
push
leave
addl
roll
rclb
mov
xlat
test
jl
in
lock
insb
fildl
sbb
repz
sub
ret
push
mov
inc
cli
shrl
jp
clc
pop
add
enterw
xor
cmp
nop
cltd
xchg
and
pop
cmpsl
popf
mov
cli
mov
sub
cmp
scas
sahf
jl
or
dec
dec
or
adc
rol
sahf
mov
push
mov
pop
jb
push
ljmp
insl
pop
ljmp
pop
and
push
add
adc
push
dec
movsl
xchg
inc
rolb
mov
mov
sub
lds
out
mov
sbb
addr16
fcomps
fstpl
shll
mov
sbb
adc
shlb
sbb
cmp
fldt
add
xchg
sbb
jp
stos
in
mov
repnz
int
sub
fmull
sbb
xchg
fdivp
xchg
push
pop
ss
jle
rorl
test
pusha
andl
repz
pop
fnstsw
adc
lods
mov
xchg
stc
jno
dec
adc
push
mov
cs
or
mov
xor
sub
add
mov
push
sbb
addr16
repnz
lahf
loopne
popl
mov
jae
and
or
mov
add
sbbb
or
add
sbb
mov
mov
mov
popa
mov
dec
ja
daa
xchg
push
rorl
push
mov
and
data16
push
fwait
and
test
cmp
add
mov
sahf
shll
xchg
jo
sbb
inc
add
cld
jb
ja
or
adc
cld
xchg
out
out
jnp
push
arpl
lahf
hlt
push
adcb
sbb
std
cmpsb
cmp
clc
in
add
pop
mov
lds
mov
mov
nop
fcoml
xlat
test
ret
dec
add
rcrl
cmp
sti
adcl
lea
xor
rcrb
int3
or
out
rcrb
imul
xchg
mov
xchg
xor
lret
and
xchg
xchg
insb
cli
sbb
jno
mov
das
ljmp
or
jecxz
imul
jns
mov
dec
data16
popf
inc
testb
add
fnstenv
pop
fmull
enter
pcmpgtd
shlb
or
pop
push
pop
call
fwait
std
test
mov
aaa
in
test
imull
lret
cmpb
xchg
jns
pushw
and
mov
adc
je
mov
ficoms
clc
negl
ret
cltd
jbe
into
mov
push
or
dec
and
das
fwait
icebp
mov
test
sub
sar
inc
out
jl
xchg
jp
push
in
mov
or
dec
mov
pop
cwtl
jbe
sub
push
ret
in
dec
lret
popf
stos
test
xchg
pop
mov
inc
inc
call
adc
mov
xchg
pop
cmc
movsb
fprem1
xchg
pop
in
xchg
movsl
dec
call
and
std
sti
sahf
pop
inc
loope
dec
cmpsl
dec
dec
aaa
add
in
cmc
rol
mov
pop
or
pop
inc
mov
cltd
dec
jg
inc
xchg
inc
lods
sbb
dec
iret
sti
je
in
ja
dec
repnz
add
sarl
and
push
shrb
pop
mov
or
nop
mov
lahf
int3
or
xor
fnstenv
std
call
sbb
ss
cmp
pop
mov
mov
cltd
popf
jl
sbb
jnp
mov
dec
mov
cmp
lea
xor
adc
sub
mov
lods
insl
js
jmp
fdivr
cmp
sti
adc
sbb
icebp
aam
loopne
iret
sub
inc
mov
out
inc
inc
sbb
xchg
popa
adc
mov
lahf
and
pop
data16
fs
or
aas
xchg
fidivrl
xchg
iret
xchg
mov
lret
cmc
push
ja
pop
xlat
gs
ja
test
mov
sahf
mov
in
inc
inc
jp
lcall
and
inc
xor
jecxz
or
push
mull
pop
and
aam
shld
cs
sub
movsb
test
les
mov
gs
adc
pop
sahf
mov
jmp
and
movsbl
into
push
sti
dec
mov
jns
sbb
mov
xchg
adc
popa
mov
lret
mov
pop
pop
lcall
shr
adc
outsl
mov
in
bound
pop
mov
fldcw
notl
jecxz
dec
adc
jg
jge
dec
lods
pop
push
jmp
cli
xchg
xor
mov
fstps
aas
adc
mov
fwait
inc
push
bound
pop
shrb
test
in
div
scas
sahf
imul
mov
ss
shl
pop
out
push
dec
loope
xor
pop
repz
sub
loope
mov
enter
xlat
pushf
pop
and
or
fs
xor
xchg
fisubs
sbb
stc
jnp
cmpsl
pop
icebp
jmp
das
mov
xchg
mov
pusha
mov
ja
incb
cmp
push
adc
cmpsl
loopne
iret
data16
enter
mov
or
mov
inc
dec
lret
dec
add
dec
rcrl
lret
dec
mov
sbb
sub
cld
sar
sub
cmpsl
aaa
loopne
stos
scas
dec
and
push
outsb
mov
inc
pop
push
ret
dec
adc
and
sti
lret
js
mov
lret
pop
mov
loope
jb
jmp
pop
lcall
jp
mov
loope
inc
fdivr
cmpsl
xchg
and
cwtl
jle
test
pop
jmp
movsl
insl
jbe
std
test
cwtl
jg
leave
test
mov
mov
in
jecxz
mov
jb
xor
pop
sbb
lcall
cmp
mov
xchg
enter
pop
mov
mov
add
jno
aam
inc
test
cmpsl
cmp
mov
xchg
test
jp
pusha
ja
dec
jbe
and
insb
sub
lods
push
mov
push
mov
inc
outsl
outsl
xor
inc
decb
cltd
fwait
bound
scas
sub
lcall
decb
inc
add
dec
or
or
mov
aas
gs
cmp
rolb
repz
pop
mov
fildll
jge
jle
add
stos
sub
jp
addr16
pop
push
and
hlt
pop
jb
test
push
xchg
cs
sar
or
cmp
jno
adc
stc
dec
and
jmp
jmp
nop
ds
or
mov
lret
xor
fstpt
out
jge
stos
or
inc
pop
stos
aas
addl
mov
xchg
adc
mov
aaa
pusha
xchg
push
repnz
rolb
mov
scas
push
jb
aam
add
ret
das
aas
sub
insl
fdivrp
lret
sbb
leave
int
shl
pop
rorb
imul
nop
xchg
push
call
jne
mov
call
loope
arpl
rcrb
int3
inc
jbe,pt
psllw
push
fmuls
push
dec
push
jecxz
icebp
inc
testb
jns
int3
mov
fdiv
jne
popa
iret
out
push
push
mov
dec
xlat
push
adc
cmp
push
pop
push
cmpb
xorb
mov
lock
stos
mov
into
inc
mov
imul
xchg
push
mov
cmpl
shlb
ljmp
dec
xor
cs
stc
stos
scas
or
pop
inc
xor
lods
add
adc
pusha
lret
jmp
cmc
aam
lret
mov
push
movb
jne
ret
adc
cmp
popa
push
adc
lods
loope
pop
out
mov
inc
xlat
test
shll
div
out
arpl
jnp
adcl
aam
cmp
mov
insb
dec
or
fwait
push
lds
jbe
dec
cld
or
por
das
cmpsb
mov
mov
sete
jp
xor
add
aaa
mov
outsb
cmp
shrb
and
shll
sahf
insl
arpl
mov
repz
xor
inc
pop
jge
not
pop
imul
test
cld
aam
sub
insl
notl
xchg
pop
out
stc
mov
pop
xchg
mov
pop
jbe
movsb
test
or
sub
lods
and
cmp
div
addr16
lret
arpl
adc
xchg
mov
lcall
adc
xor
js
lret
jne
popa
jbe
into
inc
in
mov
add
pop
pop
dec
mov
popa
test
mov
jle
pop
out
imul
xor
sbb
pushf
call
jbe
outsb
lcall
out
cmp
shr
aam
test
inc
adc
ljmp
dec
mov
jecxz
xor
cmp
fs
fistpl
rcll
rorl
inc
fstps
lods
dec
loopne
cmpsb
test
fsubl
cmp
daa
inc
dec
cmp
cmpsb
mov
bound
xor
xchg
lahf
sub
pop
cwtl
movq
std
int3
push
jne
shrl
cmc
cwtl
jg
cmp
scas
out
in
ffree
push
leave
fldenv
enter
sub
sub
cltd
enter
fdivrs
out
stos
lods
push
leave
fmul
int
xchg
inc
lret
call
outsb
fmul
loopne
sbb
out
xlat
sar
fadd
push
rorb
dec
mov
dec
push
jo
fnsetpm(287
pop
fs
into
adc
mov
push
popa
shlb
mov
xor
jnp
shrl
loope,pt
lret
pop
aad
or
sub
mov
add
jnp
mov
dec
or
add
mov
rol
lret
inc
pusha
pop
pop
and
xor
pop
jle
push
mov
inc
rolb
leave
mov
jb
ss
inc
add
jb
jo
and
scas
pop
addb
pop
sbb
push
pop
mov
mov
insl
add
mov
in
sbb
mov
or
xchg
popa
pop
mov
xorb
mov
test
mov
icebp
dec
xchg
clc
cmp
movb
jno
xor
das
shlb
sub
mov
or
movsl
scas
jecxz
fsubs
lahf
add
add
cwtl
sti
mov
daa
xchg
adcb
sbb
leave
jbe
pop
mov
les
arpl
gs
lahf
sub
adc
cltd
and
mov
jb
mov
mov
and
cmp
sbb
add
jle
mov
xlat
mov
inc
in
pop
das
xor
in
aam
sub
mov
mov
addr16
in
xchg
jmp
cmp
jnp
in
sub
stc
pop
repnz
pop
mov
xor
cld
movsl
iret
cmp
pop
sub
cltd
shlb
inc
stos
pop
xchg
mov
jbe
out
mov
cmpsb
sahf
out
cltd
into
push
notl
cmc
aas
enter
cmp
cmp
cmpsb
movsl
into
cs
or
lock
testb
int3
icebp
sbb
push
xor
xor
ds
les
adc
shl
call
scas
das
jmp
mov
movsl
sub
popfw
imull
pop
pop
xor
mov
fwait
pop
xor
pop
mov
mov
mov
xchg
enter
shll
pop
pop
ljmp
push
sahf
aam
clc
inc
xorl
sub
mov
popa
popf
sahf
xor
mov
cmc
dec
aas
in
push
inc
mov
rorl
or
cmp
lods
push
or
pop
in
shrl
scas
cmpl
aaa
in
loop
cmp
sub
fldenv
subl
push
mov
push
es
fwait
hlt
jne
inc
fcomip
jne
ds
mov
stos
cli
cmp
jmp
fldl
cltd
inc
pushaw
sbb
pusha
push
xchg
jno
or
cmpsl
lods
mov
cmp
fsubrs
daa
movsb
sti
jno
pop
xor
pop
popa
out
cmp
fists
leave
push
push
adcb
xchg
cmp
push
into
pop
adc
pop
fsubs
out
pop
test
sbb
pop
sahf
push
repz
out
mov
xor
cmp
daa
ficompl
out
movsb
inc
lods
test
pushf
shll
adc
sbb
pop
xor
adc
or
aas
jle
orb
jbe
pop
push
das
xchg
ret
mov
mov
imul
jge
dec
addr16
and
sbb
outsb
xchg
pop
into
ret
popa
sub
mov
in
js
mov
idivl
out
pop
jmp
test
dec
dec
mulb
dec
jae
cmp
cmc
sub
add
jb
shlb
adc
fistpll
xchg
fildll
mov
xchg
int3
sti
cmpsb
sbb
out
stc
push
jne
and
idivl
xor
and
test
jns
xchg
mov
aam
cmpsl
push
jae
dec
push
inc
pop
bound
mov
loop
leave
lret
stc
mov
xchg
orl
out
sbb
mov
mov
sbb
xor
jle
or
pop
in
pop
cmp
rcll
add
and
aad
stc
test
test
mov
data16
cmpsb
mov
popf
adc
pop
jg
push
pop
xchg
adc
xchg
sub
in
lods
cwtl
imul
rcr
addr16
or
dec
xchg
inc
mov
push
fidivrs
or
popa
cmp
adc
test
xchg
add
sub
jo
jp
xchg
add
call
fdivrl
pop
mov
mov
fimull
cld
inc
roll
mov
mov
and
repz
or
ds
xor
enter
lea
xor
inc
dec
movsb
enter
in
das
loop
pop
scas
fwait
push
push
fimuls
scas
cld
push
fwait
mov
jns
dec
and
pop
pop
call
out
std
sarl
adc
adc
xchg
inc
inc
repz
mov
push
adc
aas
orl
insl
push
jne
xchg
sub
loope
lds
ss
add
adc
pop
fidivs
mov
leave
test
test
rcrb
lret
je
icebp
and
xlat
pop
test
push
enter
sbb
mov
pop
jbe
dec
sbb
mov
int
xlat
int
push
sub
jge
jle
cwtl
hlt
dec
rorl
xchg
push
or
pop
jns
mov
jnp
mov
daa
cmc
in
in
cmp
cmp
sub
inc
lret
aam
nop
clc
insl
shlb
jmp
mov
loope
mov
addr16
pop
hlt
adc
fisubs
imul
sbb
pushf
xor
clc
xor
in
outsb
pushl
push
repnz
sub
cmp
mov
jo
rcl
xor
int3
inc
lods
or
push
rcll
ret
xchg
jbe
push
aas
cmp
pusha
ljmp
clc
jge
sbb
shl
daa
test
xchg
push
jle
jno
xlat
mov
pop
jp
test
stos
adc
rcr
ss
cld
xor
sbb
push
inc
outsb
sarl
inc
call
add
dec
add
imulb
cld
mov
cwtl
cmpsb
sub
out
pop
aas
cmp
inc
stos
enter
mov
out
xor
out
cmp
ljmp
sbb
jmp
sahf
out
daa
push
popa
sub
stos
adc
inc
dec
or
dec
mov
outsb
xchg
push
hlt
mov
call
test
sub
push
inc
and
scas
pop
jae
fbld
subb
fdivl
repz
cmpsb
andl
movsl
daa
or
cld
repz
sbb
adcb
scas
stos
inc
in
or
jb
cwtl
pop
subb
inc
cmp
xchg
cmp
rcll
jmp
fstps
mov
lods
push
scas
mov
or
lahf
stos
sti
aam
in
popa
lds
push
pop
lahf
dec
cmp
sub
pop
outsb
aad
inc
in
xor
stos
dec
iret
mov
ljmp
push
add
push
jle
dec
push
cli
fwait
mov
cmp
cmp
dec
or
adc
push
xchg
insb
mov
sbb
cli
js
rorl
insb
cltd
dec
fwait
in
sbbb
or
ljmp
dec
jo
mov
out
das
mov
push
sbb
add
ret
lret
fiaddl
jmp
xor
repnz
push
adc
scas
xchg
imul
cmpsb
add
fildl
inc
or
popa
push
pop
int
aam
xor
out
lods
pop
sbb
cmp
jns
nop
adc
repnz
aaa
dec
lahf
out
ret
js
cmpsb
mov
adc
dec
sbb
dec
sahf
inc
sub
sbb
cmp
leave
mov
add
jno
cmp
imul
adc
sti
lret
mov
rorb
ja
xchg
imul
sbb
icebp
xchg
sub
mov
imul
test
loopne
lahf
cmpsb
push
push
push
cwtl
cmpsb
out
sbb
push
xor
test
cmpsl
cmp
sub
loope
sti
pop
xchg
roll
shr
fdivrs
sbb
cmpsl
hlt
aaa
or
cmpsb
gs
jl
sub
inc
or
and
int
repz
xchg
nop
and
mov
insb
jg
dec
bnd
rorl
dec
fwait
ljmp
dec
push
imul
mov
cmpsb
lcall
scas
iret
adc
cmp
mov
xchg
push
mov
mov
dec
out
test
inc
add
fisubl
data16
inc
lds
in
add
out
add
outsl
push
mov
xor
push
adc
adc
or
sar
add
testl
sub
sub
mov
and
icebp
sbb
addl
insl
scas
sub
mov
dec
sbb
and
cmc
mov
xchg
adc
pop
test
add
outsl
cmp
les
movsl
mov
push
int
lahf
push
xchg
out
push
sahf
cli
mov
pop
stos
jnp
mov
cmp
jnp
mov
inc
add
stos
mov
sub
rol
rcrl
ret
icebp
movsl
cmp
out
and
hlt
fcompl
fcmove
leave
cwtl
push
add
ficomps
test
push
popf
xchg
aas
jo
and
lcall
pop
mov
mov
and
pop
mov
pushf
jbe
dec
cwtl
push
je
adc
fnsave
movsl
jne
insb
enter
icebp
cmpsb
inc
arpl
and
fldenv
add
sub
mov
jne
shll
add
sbb
jle
dec
xorb
jecxz
xchg
rolb
jl
or
pop
xor
xor
fs
mov
hlt
mov
pop
ljmp
stos
mov
or
mov
daa
jne
in
and
push
push
pop
sub
cmp
in
push
xchg
ljmp
xor
gs
rorb
inc
inc
or
sub
adc
push
pop
xor
mov
inc
pop
scas
scas
add
aas
or
scas
inc
sbb
push
sti
or
cmp
sbb
subl
push
sbb
cld
js
add
cmp
mov
cmc
daa
xchg
repnz
cwtl
outsl
outsl
cmp
sahf
xchg
ret
repnz
xor
sbb
push
mov
ja
xchg
push
xchg
ss
icebp
mov
mov
inc
aam
mov
mov
sahf
fstp
imul
xchg
pop
repz
dec
and
push
leave
into
icebp
leave
pop
bound
fs
pop
jecxz
fwait
test
stc
addl
fwait
fwait
push
es
movsl
adc
incb
jno
test
fcmovb
mov
test
pop
xor
cltd
add
and
jmp
or
pop
or
xchg
repz
mov
daa
cmpsl
mov
jne
addr16
ret
push
push
adc
sub
fldt
mov
jmp
adc
adc
push
dec
clc
lods
fstl
jns
js
xchg
bound
xchg
inc
xchg
pushf
sbb
mov
or
dec
jns
in
mov
cli
add
xchg
fcmovnu
xor
adc
sbbb
pop
rclb
xchg
inc
add
lods
repnz
rcll
cmpsb
mov
pop
stos
ljmp
mov
lods
fs
hlt
loop
jbe
mov
mov
daa
fisttpll
sub
pop
push
movsl
jno
out
loopne
lea
inc
pop
lret
and
orl
add
xor
sbb
or
pop
loope
and
jp
xchg
out
sbb
xchg
xor
add
jbe
jle
fadds
jb
xlat
ret
jmp
xchg
movsl
inc
push
push
lret
lds
aad
divb
popa
mov
lock
mov
lret
or
scas
xchg
and
add
or
repnz
add
xchg
dec
xor
and
mov
dec
out
cwtl
xor
push
push
mov
xor
test
test
aad
sbb
inc
int
lret
jle
aam
addr16
lods
sub
or
xorb
call
mov
push
imul
addr16
fistpll
aam
test
push
cli
nop
popa
inc
and
in
xor
dec
sbb
dec
pop
sub
or
fbstp
aas
dec
adcb
mov
mov
push
lds
ret
mov
lret
aam
push
mov
imulb
jo
shlb
aas
mov
adc
icebp
lock
rolb
push
fwait
data16
fs
xor
cmp
jae
pop
sub
fs
jo
and
lods
mov
and
nop
fdivrs
rclb
pop
mov
pop
xchg
dec
xchg
sbb
mov
insb
ljmp
ret
xor
ja
and
fadds
fs
push
dec
cmp
sti
cwtl
arpl
aas
jle
inc
in
pop
xchg
das
insb
ret
jecxz
fldcw
sub
out
fnstsw
lock
insl
mov
not
mov
lds
rcr
push
pop
push
jnp
lods
push
pusha
or
xchg
into
cmpsb
loopne
loope
pusha
mov
lret
or
icebp
dec
shrl
pop
mov
jge
mov
in
mov
shlb
sub
pop
mov
cmpsb
movsl
in
lret
ljmp
enter
and
pop
in
inc
xor
push
cmp
mov
ja
test
mov
lods
es
mov
mov
mov
mov
jne
ss
push
dec
mov
into
push
xor
int
inc
fwait
imul
jae
push
push
loope
xchg
out
add
dec
rcrb
mov
les
xlat
ret
and
iret
xchg
shll
mov
dec
popf
and
push
fcoml
push
sub
imul
pop
sbb
and
loope
test
ss
in
stos
and
lods
insb
push
test
outsl
jl
pop
sub
dec
call
test
mov
cmp
mov
mov
hlt
out
and
sub
aam
out
jae
mov
push
es
xchg
outsb
fldl
mov
pop
aad
sahf
jbe
cs
orb
je,pt
lea
rclb
xor
aaa
sub
cld
mov
clc
dec
outsb
xchg
dec
mov
hlt
in
mov
cmp
and
mov
aam
sbb
js
gs
add
push
inc
push
loope
loop
mov
loopne
xor
sub
outsb
lea
es
stc
xlat
lea
jae
jb
fwait
and
adc
in
fwait
stos
mov
jle
xor
mov
mov
xor
cmpsl
rclb
mov
mov
xchg
sbb
mov
loope
es
fsubrl
xchg
out
out
popf
cmp
pop
add
adc
or
and
xor
and
pop
idivl
dec
pop
loop
repnz
inc
ret
lret
xchg
mov
dec
sub
dec
ret
push
rolb
pop
mov
adc
pop
and
and
pop
jp
pop
rcl
gs
push
fists
jns
scas
push
xchg
mov
pop
adc
xchg
les
cmpsl
je
mov
aaa
fs
daa
clc
mov
xchg
xchg
shl
loope
xchg
shll
mov
outsb
aaa
mov
and
addr16
fmull
cmp
mov
and
imul
pop
sbb
jge
cli
cmp
test
sbb
lea
xchg
sub
and
xchg
std
stos
sahf
jg
push
ss
in
sbb
and
sbb
pop
into
push
insl
inc
in
add
jmp
xchg
sub
add
mov
cmp
hlt
test
mov
mov
mov
dec
sarb
xchg
push
xchg
sbb
fdivrl
pop
inc
mov
pop
sbb
std
jne
ficompl
mov
xchg
in
sbb
cmp
repz
mov
lods
mov
fistps
arpl
pop
sub
mov
cmp
inc
pushf
clc
and
push
stos
xchg
loopne
imul
mov
mov
pop
inc
out
cmp
mov
mov
leave
insl
sub
scas
stos
aaa
cwtl
notb
or
lods
pcmpgtw
xchg
mov
repz
xchg
sub
pop
inc
xchg
cmp
dec
fistpl
xlat
push
mov
adc
loop
outsl
sbb
dec
lcall
jns
mov
in
sbb
arpl
shlb
sbb
xchg
test
sar
sbb
cli
push
adc
ret
dec
lcall
shl
cwtl
in
xlat
adc
xor
mov
int3
add
xchg
mov
out
cltd
sub
test
out
or
clc
nop
cmp
dec
cmp
xchg
loopne
cwtl
fst
push
mov
into
popa
fstpt
js
fxch
mov
push
loope
sub
das
mov
clc
push
push
in
and
mov
sub
cmpsl
ss
push
jno
xor
xchg
ds
negb
lods
xlat
xor
pop
inc
push
fidivl
push
dec
push
jp
adc
sbb
lret
push
fwait
outsb
cs
mov
mov
insl
mov
stos
add
vxorps
xchg
add
mov
mov
iret
outsl
test
inc
jge
sub
push
sbb
add
lret
scas
fdiv
rcrw
std
hlt
cmpsb
hlt
mov
jae
jo
sub
xor
xor
xor
icebp
jecxz
jns
outsl
adc
mov
adc
leave
sarb
xchg
mov
sti
shl
notl
push
in
ljmp
outsl
daa
sub
inc
dec
dec
xor
add
lds
mov
ds
pop
sub
sub
lods
clc
sarb
nop
lcall
sbb
pop
iret
xor
adc
push
sbb
adc
outsb
push
mov
stos
lret
mov
xor
je
nop
pop
or
mov
stos
fsubrs
lea
mov
loope
iret
dec
test
push
ljmp
enter
sub
add
mov
mov
clc
or
xchg
mov
xchg
flds
not
loopne
xchg
jge
int3
shll
xlat
xor
adc
cmp
int3
lds
mov
es
xor
xchg
sbb
shl
cmp
sbb
cmpsl
add
insb
imul
inc
sub
inc
inc
push
call
insb
sub
lret
inc
xchg
and
lret
rcll
jl
test
test
mov
loop
pop
addl
aas
dec
adc
pop
push
adc
lods
in
incb
and
inc
call
sbb
mov
lahf
movsb
xor
fbstp
outsl
shll
insl
pop
rcr
and
xchg
xchg
pop
rcrb
mov
xor
fnsave
mov
cmpsb
hlt
std
jnp
mov
mov
hlt
loope
jae
or
jnp
sti
ret
pop
faddl
addr16
pop
dec
mov
das
fwait
add
dec
lret
mov
inc
jg
loopne
dec
inc
pusha
and
ret
mov
xchg
fiadds
psrlw
aaa
cmpsl
ficoml
xchg
xchg
jno
add
fisubrs
testl
repnz
test
out
sti
xchg
aam
add
pop
add
add
pop
push
test
jns
mov
sub
subl
xor
das
cmpsb
jp
aam
and
pop
call
js
std
sub
dec
popf
cwtl
lret
xor
out
push
push
daa
out
xchg
jns
aad
in
sbb
inc
xchg
das
xchg
fistl
xchg
bound
test
fidivs
xchg
shll
insb
aam
mov
adcb
mov
pop
mov
aam
fbld
fstpl
cmp
in
jp
inc
sbb
jo
xlat
push
jns
imul
sbb
aam
ja
xor
xchg
push
test
nop
push
xchg
or
inc
sub
test
out
insb
inc
sbb
cmp
lock
push
cmp
xchg
outsb
sbb
dec
mov
mov
pop
push
loope
mov
push
mov
sub
sub
ret
fdivr
fnstenv
fidivrl
popa
mov
mov
mov
dec
fwait
xchg
es
lcall
pop
stos
rolb
xchg
fistl
jmp
inc
xchg
push
lock
out
dec
inc
addr16
xor
lret
fwait
and
enter
pop
push
cs
dec
in
lods
add
movsb
test
adc
js
mov
das
push
or
dec
and
jp
outsl
add
xor
pushf
push
lods
arpl
ffree
cmp
pop
or
dec
mov
inc
ss
fs
jae
push
sub
in
add
stc
xor
sarb
negl
outsl
mov
fnsave
mov
mov
pop
pop
and
popa
lds
push
daa
xchg
jecxz
dec
mov
and
imul
inc
sahf
xchg
call
cmp
xor
in
imull
popf
loopne
pop
clc
push
fs
addl
das
lahf
jns
push
das
pop
idivl
jb
mov
xchg
cmp
rcrb
aaa
pop
out
scas
fdivs
sbbl
pop
jle
jle
int3
jo
adc
clc
cld
arpl
inc
icebp
mov
daa
inc
cld
add
add
xchg
das
enter
sbb
xchg
cwtl
jl
sub
xor
cmp
sbb
cli
negl
cwtl
pop
loop
ss
jg
push
enter
pop
js
arpl
jg
fs
in
mov
adc
out
outsb
aas
scas
add
out
xchg
pop
xchg
lods
jmp
push
in
cmpsl
dec
mov
pop
inc
push
sbb
xor
sbb
sub
sbb
dec
cmc
add
outsl
mov
faddl
fisubl
insb
lods
xchg
mov
xchg
gs
ds
push
lret
push
lret
mov
ja
jno
add
xor
aaa
repz
clc
xchg
add
push
aaa
ljmp
pop
in
or
shll
das
pop
add
push
je
sbb
aaa
xchg
in
mov
sub
sbb
jg
ds
mov
and
or
sub
fs
cmpsb
sahf
rcr
shlb
jl
mov
in
divl
or
jmp
mov
fidivl
data16
stos
aad
aad
xchg
shll
inc
jno
inc
test
dec
sub
lea
inc
mov
mov
pop
push
and
lret
scas
mov
sti
andb
pusha
adc
mov
lea
imul
jb
cmpb
cmc
pushf
fcompl
int3
add
in
cmp
cmp
dec
pop
ret
and
ret
sub
jge
mov
arpl
push
lods
lret
ds
sahf
mov
jno
xchg
fisubl
in
or
out
inc
and
cmp
push
sub
movsb
stos
stos
adc
idivb
add
sub
sbb
add
sbb
add
mov
sbb
dec
inc
adc
fcompl
iret
sbb
cwtl
or
jle
jp
sub
insb
xchg
or
js
push
push
into
pop
or
flds
int
mov
push
xorl
cmp
ret
push
inc
jge
std
shll
popf
ss
xchg
std
bnd
hlt
mov
inc
jae
fs
push
loopne
insl
je
cmp
jnp
push
leave
and
adc
add
sbb
sbb
orb
pop
frstor
cmpsl
sarl
mov
mov
sub
movsl
popa
fdivrl
xor
imul
jb
insb
sub
pop
or
cmp
cwtl
es
cmp
sbb
mov
cmp
xchg
rclb
arpl
push
or
int3
push
fwait
sub
dec
or
sub
stc
pop
xchg
sbb
add
and
push
enter
or
les
andb
mov
cwtl
xchg
jnp
test
outsb
movsl
mov
jmp
jecxz
leave
and
movsb
subb
push
pop
aaa
mov
subl
jns
inc
adc
loopne
adc
test
les
rolb
int3
aaa
ss
aam
dec
negl
lds
jg
sub
ljmp
shrl
push
jge
fld
push
lods
mov
scas
pop
jge
out
sub
flds
pop
or
js
mov
addr16
pop
into
stos
xor
movsl
test
dec
and
sub
sub
xor
push
rcr
adc
pop
and
fisubs
mov
mov
jp
repnz
mov
push
push
jbe
xchg
sbb
xchg
jns
insb
movsb
adc
dec
cmp
xchg
out
aam
xor
pushf
out
or
lahf
dec
lds
adc
cltd
sub
xor
pop
and
stc
lahf
mov
push
in
push
push
enter
add
repnz
inc
test
and
ror
loop
sbb
stc
push
inc
inc
jae
repz
sub
repnz
loop
push
cmpb
insb
push
xor
push
inc
js
ja
xor
cwtl
es
leave
movsb
or
push
jg
pop
sbb
xor
sbbl
pop
add
xor
push
cmp
cltd
lret
or
lret
ds
sar
ss
inc
in
arpl
leave
jg
ss
mov
iret
mov
out
sub
jge
pop
mov
ds
push
pop
adc
add
mov
repz
mov
jnp
out
in
push
test
push
cli
nop
test
mov
loopne
cld
xchg
pop
fldcw
fsubrl
xor
shrl
lahf
out
loopne
adc
loopne
push
or
fistl
mov
repz
dec
mov
stc
fildll
mov
cmpb
inc
dec
mov
rcl
ljmp
push
push
daa
xchg
xchg
mov
decl
mov
push
fsub
pusha
jecxz
cwtl
into
mov
jo
mov
mov
cmc
push
or
lahf
mov
xor
lcall
loop
push
fstsw
xlat
stc
xlat
push
aam
test
push
out
pop
out
insl
out
sbb
cmp
out
lret
mov
mov
pop
imul
dec
inc
icebp
inc
mov
fwait
daa
ret
mov
out
dec
jmp
subb
imul
adc
or
or
mov
mov
notl
mov
xor
cmp
adc
pop
inc
cmp
pop
mov
push
test
mov
out
out
enter
xor
inc
mov
lods
aad
dec
mov
inc
mov
outsl
gs
nop
out
sub
inc
mov
and
out
js
adc
mov
loope
ja
and
int
imul
mov
jmp
add
pop
jp,pt
out
sub
add
aad
repnz
inc
dec
je
lods
movsl
xchg
aam
add
pop
xchg
mov
add
mov
sub
cmpsl
sbb
nop
and
pop
mov
sub
repz
in
mov
cs
inc
push
movsl
jle
xor
scas
cmp
inc
cmp
jle
add
popf
stc
gs
push
and
add
pop
pop
mov
sbbl
popa
mov
inc
push
sub
jae
cmova
push
push
jae
xor
inc
xor
sub
imul
clc
and
push
pop
fs
sbb
adc
mov
scas
lods
jmp
in
xlat
push
add
add
and
dec
cmp
in
ljmp
sbb
sbb
xor
push
sub
loope
adcl
pop
xchg
cmp
arpl
cmp
and
cld
arpl
mov
inc
mov
push
push
loop
sbb
imul
std
dec
jp
leave
loopne
mov
mov
js
int3
xchg
ret
xchg
sbb
sbb
cmp
fimull
jae
sahf
xchg
sbb
test
loope
cwtl
aas
rcrb
sub
mov
jb
movsl
mov
mov
fisubrl
jecxz
repz
sahf
push
jb
push
adc
int3
push
add
js
lds
popa
pop
lret
xlat
dec
lods
pop
lods
in
pusha
pop
popa
insl
cmpsl
addb
push
sahf
mov
dec
sub
xchg
test
lods
sti
flds
lret
int3
jns
cmp
testb
bnd
orl
test
cmp
mov
adc
andb
push
arpl
je
dec
dec
ficomps
and
xchg
add
push
sahf
push
sub
insl
cmpsb
jnp
ret
sahf
cmp
xor
cmp
add
xchg
outsb
jl
test
das
inc
pop
sub
sbb
movsl
adc
rcl
push
mov
dec
xchg
test
dec
add
dec
adc
sbb
pmaxsw
sbb
mov
fcmovne
push
push
sub
in
and
or
imul
shll
sbb
mov
stc
pop
addr16
xor
incb
rolb
fxch
xor
in
dec
gs
hlt
xchg
push
jge
vmread
and
inc
jbe
cmpsb
test
xor
add
mov
in
ja
sbb
push
lcall
dec
xchg
jecxz
std
mov
fsubr
dec
adc
adc
xchg
sbb
out
std
ret
fs
pop
mov
jne
pop
inc
or
mov
rclb
jle
cmc
mov
cmp
cmp
xchg
arpl
lret
or
adc
cmp
jb
mov
cli
pop
xor
pop
mov
call
mov
fadd
adc
add
cmp
push
mov
daa
cs
xor
mov
adc
mov
push
or
mov
add
aad
daa
das
xlat
sub
mul
lds
mov
pop
push
repnz
andb
inc
push
lods
outsb
es
je
pop
push
xchg
inc
mov
jb
in
test
add
insb
popf
rclb
dec
jecxz
mov
pop
lods
jmp
mov
ret
decb
pusha
mov
loop
imul
js
in
mov
gs
fistps
sbb
jne
rep
mov
mov
aam
scas
pop
add
subb
inc
jmp
lea
in
cmp
adc
stos
pop
or
sbb
lahf
movsl
xlat
mov
xchg
test
addr16
cmp
dec
je
push
out
add
popa
mov
sahf
mov
and
in
jecxz
jne
das
fisubrs
aaa
and
hlt
adc
mov
movsb
sarb
xchg
mov
push
ljmp
sub
push
pushf
pop
cmp
dec
adc
pop
stos
cltd
mov
cmc
mov
jmp
inc
adc
jp
mov
stc
stos
jae
xlat
fdivrl
push
push
xor
nop
jmp
jl
test
push
inc
aaa
fsubr
aas
mov
std
push
lea
sarl
xorl
or
fwait
shrl
xor
gs
call
fldenv
lcall
adc
out
mov
jp
gs
nop
in
dec
mov
push
push
xchg
popa
shl
bound
sbb
pop
inc
push
outsb
loopne
jb
inc
add
notb
add
jne
cwtl
mov
xor
xchg
cmp
fs
pusha
aam
loop
das
jns
sub
jl
mov
insb
xor
enter
outsl
sub
test
fimull
mov
stos
popa
pop
add
call
lods
sub
gs
mov
pop
jecxz
subl
pop
mov
adc
cmp
push
sbb
mov
fistpll
ficomps
xchg
cmp
jbe
cmp
inc
pop
call
add
cld
popf
fnstcw
mov
dec
int
and
push
test
xchg
or
stos
push
mov
sbbb
lea
cmp
mov
movsl
test
inc
or
xchg
out
repz
add
sub
and
dec
xchg
or
xor
mov
xor
insl
push
fstpl
xor
in
jmp
mov
add
mov
push
push
movsb
idivl
sub
stos
sbb
mov
pop
and
outsl
fdivs
jg
or
pop
out
lods
rol
push
push
das
mov
add
xor
xchg
in
sub
test
mov
fs
pop
or
pusha
mov
xor
repnz
jg
or
or
mov
fwait
mov
or
inc
std
mov
cmpsb
pop
out
xlat
push
or
push
jmp
cld
jbe
mov
sbb
mov
mov
push
outsl
jmp
mov
test
jge
mov
sbb
and
ja
sub
mov
dec
mov
stos
data16
ljmp
xchg
xor
xor
out
dec
fdivs
jb
mov
aad
xorl
mov
lea
mov
push
jle,pn
gs
push
sti
das
jle
mov
inc
sub
jmp
fldcw
or
lock
inc
mov
mov
or
mov
cli
js
inc
add
jecxz
in
aas
or
xchg
push
int3
mov
test
xlat
sub
sarl
xor
mov
xchg
push
push
stos
test
sarl
js
aam
call
sbb
add
lock
test
jle
es
sahf
push
aad
scas
sbb
inc
dec
adc
lds
xor
ja
ret
or
shr
and
or
outsl
inc
jb
jmp
sahf
sahf
notb
loopne
add
and
outsb
lods
ror
in
xchg
out
test
nop
push
dec
mov
je
fisttps
or
ljmp
rcrl
add
dec
pop
ss
pop
test
fidivl
and
sbb
call
mov
mov
aam
nop
add
mov
cmpsb
xor
adc
inc
or
stos
xlat
lret
outsl
pop
sahf
push
adc
daa
and
jmp
mov
jo
cmc
or
adc
jg
sub
jge
inc
mov
mov
gs
pop
push
mov
adc
ljmp
sub
shll
aam
iret
pop
or
test
or
mov
pop
mov
outsl
adc
mov
mov
mov
xor
mov
jae
hlt
sub
pop
das
insb
leave
cmp
xchg
in
xchg
sbb
movsl
test
call
in
cmp
adcl
sub
mov
in
lds
jne
pop
je
jo
inc
out
xlat
rolb
xchg
pop
out
gs
imul
lret
push
outsb
mov
mov
sub
or
in
and
pop
xor
insl
test
ds
xchg
mov
jno
repnz
sub
pop
xorb
xchg
mov
ss
xchg
cmp
pop
into
movsl
jbe
imul
stc
sub
fwait
andb
fdiv
lods
out
jmp
fidivrl
addr16
hlt
movsl
test
lcall
cmp
je
test
sbb
mov
cmp
ds
addr16
scas
ja
dec
ret
lock
xchg
mov
mov
cmpsl
push
adc
aad
jle
jl
es
inc
addl
xchg
pop
leave
fisubs
movsl
dec
xchg
xchg
out
mulb
jbe
jmp
push
or
sti
icebp
data16
inc
cltd
rcrb
les
adc
mov
sub
or
lret
enter
push
cmp
cmp
xchg
sub
jno
ljmp
mov
inc
fbstp
cmpsb
pop
fstl
out
repz
or
adc
int
jle
sbb
sub
sub
and
mov
lds
jae
xchg
mov
and
outsl
add
xchg
pushf
mov
addb
in
ret
enter
and
cmp
mov
inc
lods
daa
mov
mov
divb
lahf
mov
sti
jl
cmp
ret
popf
mov
int3
notb
mov
iret
pop
jne
push
fsubl
mov
movsl
or
popf
or
cli
je
mov
xchg
cmp
stos
into
add
and
mov
shlb
cmp
outsb
scas
or
pop
cmp
inc
sbb
dec
adc
mov
pop
aad
scas
dec
add
gs
cs
loope
int
jae
xchg
cmpsb
push
addr16
mov
push
lea
jno
sarb
iret
sbb
cmp
xor
leave
andl
xchg
int3
rolb
iret
movsl
mov
xchg
mov
and
fcmovu
xlat
scas
das
and
outsl
lods
jmp
jnp
xchg
loope
dec
shl
rcrb
push
xor
mov
mov
stos
cmpsb
mov
fnstenv
loope
cltd
cmp
jle
xchg
stc
push
es
push
inc
ret
mov
mov
lahf
jmp
shll
push
xchg
cmp
jle
inc
insl
jmp
insb
cmp
out
xor
xchg
or
cmp
gs
cli
jnp
clc
popf
mov
jg
out
insl
lock
mov
push
fisubrs
int3
negb
add
pop
sub
or
movb
stc
loope
mov
inc
cmp
lret
call
jno
xchg
enter
jne
popa
adc
in
xchg
push
or
and
push
rol
cmp
leave
int3
lcall
std
sbb
inc
mov
shll
pop
addr16
and
cwtl
lods
dec
fiadds
pop
lret
xchg
inc
mov
push
pop
mov
mov
lret
sub
loop
sbb
push
sbb
dec
mov
icebp
or
mov
jecxz
wrmsr
push
mov
divl
mov
xchg
mov
test
dec
or
mov
js
xor
mov
movsb
xor
pop
repz
lret
aad
push
cwtl
fmuls
mov
shlb
jp
cli
popf
movsb
mov
in
stc
fdivl
and
mov
and
inc
pop
imul
insl
mov
test
sbbl
mov
jp
js
mov
scas
roll
push
iret
ja
ja
mov
mov
dec
jnp
data16
iret
decl
cmc
and
adc
in
clc
inc
adc
pop
lret
sub
sarb
sub
mov
mov
sub
jle
push
cltd
aaa
repz
orl
loope
mov
nop
cmp
jne
pop
xchg
lods
rcrb
adc
mov
jne
dec
das
adc
push
xchg
sub
in
inc
daa
mov
test
inc
cwtl
cmp
bsf
js
sbbl
hlt
insb
idivb
xor
xor
aad
into
mov
mov
int
hlt
push
push
jo
push
cs
dec
negb
call
setne
push
pop
mov
lret
enter
mov
fistpl
pushf
dec
cmpsl
shlb
iret
fstpt
enter
xor
scas
cwtl
inc
push
daa
dec
rcrl
std
or
pop
jecxz
jae
inc
cmpsb
push
arpl
aam
jne
sub
cs
sub
lods
or
out
out
or
loope
inc
adc
mov
call
push
nop
xchg
push
add
pop
jb,pn
pop
mov
pop
shlb
cmpsb
xchg
push
jle
mov
xchg
mov
test
out
mov
xchg
jbe
xchg
sti
pushf
sbb
setge
leave
loop
jle
aad
test
out
jnp
outsl
jno
loope
test
mov
cmpsb
sarl
mov
movsl
pop
rcl
outsl
out
mov
pop
sub
xor
push
push
jno
lods
fists
pop
and
dec
jns
mov
fistpl
aaa
or
mov
mov
lock
add
jl
addb
mov
iret
mov
fcomps
sti
or
fisubrl
lret
fstpl
push
dec
fmuls
test
lcall
fwait
jp
aas
incl
mov
xor
andl
movsl
cmpl
mov
leave
iret
cs
xchg
mov
inc
aaa
inc
sub
mov
aas
je
mov
xor
and
and
int
das
dec
inc
mov
mov
stos
pop
add
pop
jns
loope
mov
scas
sbb
aas
popf
fcmovnb
jp
jno
xor
shlb
cs
mov
pop
dec
addr16
cld
push
sbb
xorl
mov
int3
ss
pop
pop
mov
sub
mov
mov
fdiv
push
mov
test
xlat
outsb
jns
inc
mov
enter
test
mov
xchg
add
negb
mov
adc
dec
mov
mov
ljmp
dec
lock
ja
aam
sub
inc
jnp
xchg
fidivrs
std
dec
and
out
dec
int3
cltd
inc
dec
loop
mov
je
imul
jne
dec
mov
inc
mov
movsb
mov
dec
mov
test
push
push
dec
clc
icebp
vmptrst
and
mov
fcoml
int3
imul
es
push
cmp
pop
cmp
out
leave
icebp
lods
in
pop
out
jge
in
inc
stos
hlt
cmp
negb
inc
cmpl
jne
pop
stc
inc
push
cltd
ljmp
orl
sti
cltd
scas
fwait
pop
xor
mov
negl
cld
repnz
cmp
imul
imul
mov
sahf
sub
sbb
sbbl
decl
stos
decl
les
clc
jae
and
dec
xchg
aas
jmp
sbb
jmp
dec
gs
daa
sti
add
lods
mov
aaa
mov
sbb
push
test
jae
int3
mov
dec
loope
stos
hlt
jecxz
int
add
adc
xor
xchg
loope
and
stos
shl
mov
hlt
in
cmpsb
mov
jle
cs
xchg
dec
adc
sarl
inc
aad
mov
cmp
das
filds
push
jb
mov
push
test
sbb
sbb
push
pop
test
leave
ret
xor
lds
inc
cltd
xor
fcoms
and
inc
ljmp
movsl
inc
outsb
hlt
stc
jns
mov
dec
push
cmp
outsl
ljmp
mov
mov
push
lret
out
xchg
add
mov
inc
sub
jge
push
push
adc
and
pop
stos
adc
orl
and
xchg
sub
add
lods
stos
mov
ljmp
push
inc
dec
cmp
dec
stc
inc
es
popa
xchg
sbb
insb
dec
ret
inc
hlt
jecxz
pop
mov
inc
xchg
push
pop
test
popa
push
dec
xchg
outsl
mov
push
nop
or
push
xchg
popa
push
xchg
sbb
or
push
adc
lds
rol
fistpl
orb
push
mov
add
mov
loopne
cmp
repnz
hlt
enter
mov
mov
call
popa
jle
std
xchg
in
addr16
inc
jl
in
inc
rcrl
mov
arpl
inc
xor
dec
push
adc
lret
loop
xchg
push
push
js
mov
sub
jae
decb
clc
mov
xchg
pusha
cmp
mov
cmc
adc
cmp
test
inc
ja
or
push
test
fmul
cmp
stos
iret
cmp
test
enter
mov
mov
pop
mov
mov
mov
icebp
loope
lea
sub
push
mov
je
and
add
idivb
mov
push
mov
mov
mov
sub
lds
jle
mov
xchg
jb
ds
daa
sub
sbb
mov
pop
cmp
mov
aad
movzwl
in
mov
mov
insb
jo
push
cmp
fdivs
scas
outsb
jmp
fucomi
jbe
inc
and
shr
shlb
ja
mov
mov
rcrl
out
adc
xor
mov
cmp
in
inc
fbstp
addl
daa
mov
inc
js
jne
out
scas
pop
les
push
repz
pop
xor
pop
mov
pop
or
scas
jns
mov
push
jns
and
mov
popf
jge
andl
inc
pop
dec
shll
mov
adc
add
roll
clc
cmp
push
out
fs
ficoml
mov
in
and
aam
and
inc
popa
pop
sub
jo
fstl
inc
inc
outsb
popa
shlb
ds
sarb
dec
int
insb
xchg
ss
ss
cmp
hlt
xchg
fistl
pop
adc
or
sub
inc
lods
and
push
mov
mov
mov
sub
enter
lock
dec
ret
sti
loopne
sti
jbe
pop
sbb
xchg
pop
sub
out
jb
mov
negb
sahf
xor
repnz
or
xlat
addr16
mov
xchg
pusha
pop
aaa
sbb
ret
fcmovne
dec
fucom
mov
les
out
out
jne
fmull
pop
add
popf
sbb
imul
inc
xchg
sar
xor
lret
in
push
mov
jp
xlat
cmp
out
test
sbb
jne
mov
rclb
and
call
aaa
xchg
in
push
pop
push
dec
or
pop
fimull
scas
cmpsl
add
sbb
xor
ds
add
sub
mov
jp
jbe
xchg
pop
dec
sub
fcomi
jae
jle
pop
movsl
enter
divb
push
jb
rolb
dec
daa
mov
repnz
sbbl
sub
aaa
jno
sbb
xchg
mov
repnz
test
sub
mov
add
iret
aam
bound
mov
in
frstpm(287
or
xchg
mov
push
cmp
cmpsb
fs
stos
sub
lods
lea
adc
int3
mov
ja
dec
jns
jne
and
lods
imul
push
sub
push
dec
imul
xchg
sbb
divl
aas
jnp
add
jge
push
addr16
test
mov
stc
insl
lea
bound
xor
movsl
lods
xchg
and
sbb
fcmovne
mov
icebp
loope
and
outsl
mov
bound
or
outsb
sub
push
pop
pop
mov
aam
mov
pop
pop
lea
push
cmp
jb
roll
leave
rclb
and
sbb
clc
or
cltd
or
mov
fcoms
popf
push
mov
cmc
inc
pop
lds
jg
mov
cmp
mov
pop
shrl
xlat
xchg
pop
push
push
cmp
js
out
ret
mov
ja
pusha
push
fistpll
inc
xorl
sti
rorl
iret
sbb
jecxz,pt
js
dec
fs
cmp
popf
sbb
ret
test
pop
movsl
lods
jne
inc
scas
xchg
push
fisttps
add
mov
enter
nop
cltd
faddl
mov
jnp
xor
orb
cli
sarb
test
adc
pop
mov
fisttps
repz
lods
adc
push
and
pop
shrl
addr16
sub
iret
jp
loope
pop
ftst
jmp
lret
test
cli
adc
push
dec
mov
jp
adc
ret
inc
lcall
lret
jmp
fcompl
add
scas
inc
je
stos
dec
jnp
and
mov
int
jns
sub
test
in
cmp
sub
popl
mov
repz
adc
cli
ja
dec
pop
in
out
inc
je
or
lds
ds
push
out
mov
push
and
lret
mov
ret
and
int3
sbb
add
fdivs
adc
ret
inc
insl
out
jns
push
sub
mov
bnd
lods
pushf
push
xor
mov
imul
fdivrl
push
int3
inc
hlt
xchg
gs
cmp
out
cmp
cli
icebp
cmpsb
sahf
cmpsl
ficoms
sar
mov
outsb
out
outsl
xor
fdivrp
fnstcw
jne
arpl
pop
or
sub
pop
sarb
repnz
mov
aad
test
mov
outsb
enter
ja
add
shlb
sub
sub
arpl
in
add
push
mov
test
or
cwtl
push
lock
fadd
push
leave
movsl
add
je
sub
pop
enter
and
and
ja
loope
incl
push
stc
or
ret
jge
sbbl
and
loope
dec
scas
jg
adcb
arpl
inc
sub
arpl
jg
bound
addl
xchg
xor
rcrb
insl
sub
pushf
imul
xchg
pop
xchg
int3
push
clc
inc
mov
call
in
lock
lds
pop
out
cld
push
cmpsb
icebp
xchg
jp
jo
in
xchg
hlt
mov
push
rcl
cmpsb
mov
inc
jo
js
add
inc
bound
ljmp
stos
jmp
imul
das
add
ja
jo
fidivl
inc
fcoml
sbb
push
fucomp
aaa
push
mov
xchg
push
inc
mov
out
outsb
shlb
mov
nop
nop
mov
divl
les
fisubs
ds
lret
fdivr
xlat
sub
jne
dec
arpl
mov
pop
push
add
iret
test
inc
inc
out
inc
sti
test
aam
cli
sub
lahf
cmp
sub
add
sub
inc
pop
jge
xchg
aad
jl
cmp
jb
inc
push
lea
sarl
jmp
push
dec
mov
mov
adc
pop
mov
incb
in
lds
jmp
dec
jge
xchg
mov
or
lods
sbb
push
and
call
je
mov
out
cmc
cld
push
inc
cmp
add
sahf
es
xchg
xchg
sub
lret
pop
push
fbld
ror
cmp
cmp
mov
ss
push
cld
idivb
scas
inc
insb
sbb
in
mov
cmpb
je
fsts
cld
sub
cmp
mov
sarb
or
movsl
push
jmp
fmuls
arpl
push
jmp
out
or
mov
or
inc
stc
dec
pop
fsubrp
jo
test
ja
je
popf
add
sbb
int3
mov
cltd
xchg
xchg
add
fs
in
or
gs
sbb
add
jle
adc
in
filds
test
cmc
in
cli
shr
jne
or
in
push
mov
mov
xchg
pop
negb
dec
add
xchg
mov
lds
test
pop
pop
fstpl
daa
pop
sbb
in
mov
int3
xor
cli
xchg
out
cltd
not
cmpsb
add
in
incl
mov
cmp
pop
adc
orl
push
pop
mov
fistl
or
cmpl
movsl
or
or
je
mov
jg
mov
and
push
mov
fidivs
xchg
mov
jecxz
repnz
dec
aam
movsl
lahf
inc
call
push
aas
sub
or
mov
movsb
pop
lock
addr16
shrb
pop
xchg
cmp
sti
lock
push
pop
scas
lock
out
test
push
aam
mov
inc
pushf
repz
fimull
mov
push
and
out
sbb
sub
shll
test
mov
aaa
scas
lock
mov
adc
pop
jmp
aam
popf
aad
xor
neg
jnp
fildl
jle
mov
mov
insb
jmp
pop
bound
fcoml
les
mov
jno
sarl
dec
ljmp
adc
les
in
fs
test
inc
popa
ret
push
inc
xchg
mov
inc
loop
es
inc
repnz
xchg
les
inc
add
out
fildl
fcoms
sahf
xchg
adc
xchg
loop
jge
stc
int
loopne
jnp
mov
cmp
mov
std
scas
pusha
or
jmp
loop
push
and
sbbb
adc
call
mov
ret
jb
dec
xor
push
jmp
add
mov
fidivl
and
sub
jge
pop
and
aam
jmp
dec
ja
shlb
jl
cmp
and
xchg
dec
add
leave
mov
lret
mov
aaa
fisttpll
push
cltd
pop
or
cmc
inc
aas
xchg
movl
cwtl
xor
xchg
mov
test
adc
cmp
inc
imull
sub
and
movb
data16
arpl
fidivrl
cmp
pusha
mov
cmp
int3
nop
jae
js
daa
call
or
cwtl
sub
mov
out
dec
mov
popf
mov
dec
rcrb
jo
sub
xchg
cwtl
xor
inc
subb
es
daa
jle
sbb
out
out
stc
jnp
loop
ret
popf
cld
adc
lods
test
aaa
sbb
aam
fimull
and
jae
adc
int
push
pop
ret
shrl
push
repnz
aad
lea
jle
sub
push
in
jle
xor
add
sub
jg
jno
cmp
push
jbe
adc
mov
orl
je
aad
jecxz
in
out
jnp
outsb
dec
push
loopne
out
rcrb
stos
dec
inc
repz
lods
loop
sub
xchg
mov
pop
je
mov
push
repz
in
mov
testb
fdivrs
aas
inc
orb
push
fwait
push
subl
adc
jecxz
jmp
pop
push
and
js
fdivl
sahf
clc
adc
push
pushf
andl
lea
and
shl
mov
xchg
inc
nop
lods
xchg
sbb
xchg
popa
fisubrl
jno
int3
push
loopne
xchg
xor
add
scas
stos
mov
in
pop
mov
and
and
adc
mov
jle
mov
out
int3
shrb
mov
xorl
lock
out
pop
jmp
pop
addr16
mov
xor
or
jge
ljmp
inc
xlat
ljmp
push
sub
ret
hlt
fwait
or
ret
stc
mov
add
cmp
insb
cmp
test
aam
adc
pop
push
das
mov
outsb
dec
cmp
loopne
xchg
cmp
add
lret
bound
mov
lock
loopew
pop
test
inc
in
xor
lock
cli
popl
nop
insl
nop
test
pushf
lock
hlt
or
jne
rep
lods
adc
xor
cmp
or
into
mov
xor
and
and
lea
out
cltd
mov
mov
push
mov
movsb
pop
jne
popf
cmp
fsub
jl
xchg
lcall
pop
insb
enter
push
jb
loope
mov
fldenv
or
add
push
xchg
outsl
fdivl
lods
mov
pop
fwait
andb
idivb
xchg
sbb
icebp
cmp
pushf
sahf
sbb
repz
mov
data16
lds
push
dec
loopne
pop
out
fcmovnbe
lcall
jnp
inc
adc
test
ret
xchg
cmp
movsb
mov
inc
mov
cltd
pop
pop
fcomi
add
push
mov
stos
repnz
dec
inc
mov
shl
outsl
repnz
std
ret
push
inc
inc
leave
aam
testl
push
sbb
cmpsb
jmp
mov
adc
pop
outsb
jb
or
fildl
test
xchg
stos
mov
add
shl
lods
les
scas
push
sbb
xchg
push
pop
and
ret
loopne
or
xchg
jnp
jb
int
mov
insl
adc
imul
cmpsb
xchg
ret
xchg
xlat
jle
dec
das
pop
rclb
ja
icebp
lods
pop
push
les
push
pop
dec
push
addr16
adc
cmp
fistl
pop
pop
mov
fs
scas
and
jge
cwtl
push
push
imul
jo
daa
add
call
xchg
sahf
cmp
xor
push
push
lret
or
push
or
xchg
inc
cmp
iret
push
repnz
pop
pushf
mov
incb
xlat
mov
jno
lea
arpl
fldenv
in
pop
cmp
inc
xorb
xor
dec
ds
aas
orb
xor
mov
shl
lret
popa
stos
ja
pop
xchg
shl
lds
inc
inc
iret
inc
pop
test
pop
xchg
iret
stc
pcmpeqd
jl
shlb
lahf
xor
mov
cmpsb
mov
mov
jmp
mov
mov
xchg
mov
cs
fs
pop
icebp
sub
push
ret
mov
sbb
pushf
inc
mulb
adc
xor
pop
xchg
inc
jmp
lds
hlt
pop
ret
xor
insb
mov
fistpll
fsubrs
or
xorl
lret
decb
xor
lods
loope
jg
popf
pop
nop
loop
les
dec
pop
and
cli
cmpsb
call
dec
fadds
jl
xor
or
outsl
push
mov
dec
icebp
push
test
out
xchg
jbe
xlat
jg
mov
cmc
adc
jo
jle
jge
sbb
rclb
js
sbb
xchg
add
mov
mov
push
movq
push
repnz
push
int
loop
sbb
pusha
daa
push
mov
cs
inc
shl
cmp
mov
mov
add
dec
xor
lea
cs
sub
arpl
push
mov
lds
xchg
cmpsl
sbb
dec
jae
jo
cmp
jbe
jg
or
xchg
dec
lahf
inc
mov
inc
shlb
xchg
mov
fidivrl
lret
xchg
das
xchg
insl
mov
xchg
xchg
movsb
and
addr16
sub
xchg
in
sub
fs
push
ficoml
in
nop
push
push
push
pop
push
int3
mov
inc
xchg
rolb
ss
loopne
fstl
shl
cmp
fadds
push
xchg
xlat
cmc
or
add
push
add
nop
scas
jb
repz
cmpsl
sahf
jns
cpuid
sbb
enter
or
push
movsl
shll
out
js
je
test
push
xchg
push
or
inc
inc
adc
xchg
xor
lods
ret
pop
ljmp
push
cmpl
cmp
mov
and
and
iret
movsb
lret
leave
xchg
pop
dec
ss
incb
mov
mov
shr
test
pop
icebp
mov
lcall
leave
jmpw
sbb
inc
out
mov
sbb
fsubrl
mov
fwait
ret
jnp
scas
test
iret
sub
cmpsl
xchg
or
es
insl
out
std
ljmp
fistl
in
sbb
orl
outsl
add
neg
mov
std
das
test
repz
mov
lods
shrl
sbb
xchg
add
sbb
outsl
mov
xor
push
push
cmp
jge
stc
lds
mov
push
xchg
and
xor
les
cmp
repz
jp
ficoml
fadds
mov
mov
cld
fildll
repz
icebp
inc
inc
and
lods
fcomps
movsb
jge
leave
sbb
repnz
fcomps
icebp
hlt
mov
enter
mov
push
frstpm(287
mov
fnstcw
inc
inc
fmull
cmp
sub
ljmp
gs
imul
roll
ret
pushf
inc
mov
call
cmp
jb
push
push
int3
and
out
push
cmpsl
sub
push
imul
mov
outsb
and
std
das
xchg
lret
sbb
cmpsl
dec
out
or
fiadds
lds
arpl
sub
add
rcll
nop
ljmp
aas
cli
inc
jno
mov
sbb
dec
sub
mov
cmp
js
add
cli
cmpsl
push
iret
stos
addr16
xor
rorb
inc
cmp
sti
lret
in
idivl
aam
lahf
arpl
clc
mov
nop
icebp
testb
ret
pop
push
adc
cmpsb
insl
pop
sbb
or
cmp
push
lret
cmp
adcl
es
int3
mov
cld
xor
cltd
mov
icebp
aad
mov
inc
cltd
stos
xchg
adc
loopne
ds
mov
inc
stos
hlt
cmp
sub
mov
push
cmp
mov
div
aad
ljmp
xor
lcall
cmpsl
mov
fnstsw
mov
dec
mov
iret
jne
addr16
cli
test
ret
sbb
jns
into
repz
test
inc
cmc
testb
cmc
jne
fstpl
xor
dec
lret
sbb
push
push
sbb
or
mov
mov
add
rdtsc
fstp
das
xor
movb
pop
jmp
adc
rcrl
xlat
jno
test
sbb
stc
push
dec
aas
nop
inc
xchg
int3
into
add
fimull
mov
inc
mov
in
negb
xchg
cwtl
pop
push
outsl
xchg
mov
pop
or
sbb
cwtl
jbe
leave
popf
out
pusha
lock
xor
and
mov
inc
mov
clc
sbb
fsubrp
xchg
mov
or
cmpsl
ljmp
stos
repz
shlb
mov
pshufw
inc
ret
lcall
das
xlat
scas
shrl
add
fnstenv
out
scas
cmp
enter
mov
cmp
cmp
out
loope
mov
dec
out
les
das
out
int3
test
mov
pop
add
and
out
push
jbe
sub
rcrb
out
stc
cmovle
nop
add
ja
subb
gs
sbb
xor
insb
pop
and
pop
dec
mov
mov
fisttpl
pop
test
jecxz
dec
test
inc
out
push
mov
or
mov
mov
adc
ss
leave
push
aam
cmpsb
arpl
adc
daa
stos
insl
sti
insl
loop
xor
test
stos
insb
push
jae
sub
mov
sbb
in
xor
sub
lea
movsl
or
add
add
xor
out
dec
pop
movsl
insl
cmp
push
mov
out
push
pop
jbe
cltd
ret
out
add
ret
fiaddl
push
push
loop
mov
popa
jo
out
inc
fdivp
enter
vmovsd
dec
pop
inc
lahf
jl
aad
dec
mov
mov
mov
scas
dec
aad
and
push
cmp
aaa
mov
jae
push
lret
gs
sub
cmp
pushl
loopne
stc
aaa
je
dec
out
jmp
push
sbb
das
pop
hlt
into
jnp
jmp
icebp
movsb
shrl
vshufps
aam
mov
into
pop
das
push
out
cltd
adc
clc
or
pop
shlb
sbb
sub
sbb
dec
fs
cmpsl
test
mov
in
cmc
std
pop
inc
cmp
mov
movsl
in
fs
andb
mov
in
bound
repnz
add
int
repz
dec
push
push
rolb
cmp
sub
mov
fld
sub
sarl
cld
scas
cmpsl
lds
fcmovne
mov
out
inc
sbb
subl
negl
test
xchg
ljmp
icebp
mov
cmp
cwtl
nop
jecxz
lret
cmc
ljmp
sub
aam
mov
pop
adc
popf
jecxz
xchg
ljmp
pop
fs
aas
push
insb
mov
outsl
iret
sub
mov
jl
dec
sbb
jns
adc
inc
out
mov
xchg
inc
mov
xchg
mov
or
xchg
clc
decb
nop
pusha
jae
outsl
pop
leave
inc
inc
into
aas
push
test
punpckhbw
iret
xlat
rcrl
jge
bnd
dec
pop
in
xchg
xchg
pop
test
stos
inc
cli
fucom
sti
cmc
push
mov
fwait
xchg
dec
mov
das
repz
dec
inc
jns
inc
xchg
mov
xor
sub
xchg
mov
lds
inc
das
rcll
pop
adc
shrb
jecxz
push
jo
lds
arpl
fdecstp
mov
int
ss
push
ljmp
lods
add
and
pop
or
cs
sbb
lea
pop
nop
pop
adc
inc
push
test
mov
and
pop
mov
mov
xchg
shll
jmp
int3
aad
fldenv
jmp
nop
stos
stc
push
pop
xor
push
test
lds
pop
push
sub
xor
rcl
pop
insb
jne
fidivrl
inc
sub
out
lea
aaa
or
cmpxchg
xor
dec
andb
or
push
jl
fs
cmp
lods
rcll
dec
cmpsb
cmp
mov
in
adc
lea
aad
xor
mov
lret
xchg
fistpll
xchg
lods
lods
jo
mov
jae
es
cmp
sbb
inc
inc
test
int
push
pop
mov
stos
xchg
push
and
jmp
clc
popf
adc
pop
or
ret
jg
aaa
dec
pop
popa
mov
fnstcw
imul
test
hlt
mov
adc
mov
mov
test
loopne
mov
cltd
mov
fcmovbe
rol
jmp
fstpt
aad
mov
xchg
ja
or
rolb
or
fistpll
arpl
or
cli
or
arpl
pop
icebp
add
int3
mov
mov
inc
mov
lret
fst
push
xor
inc
jae
pop
jb
es
xchg
es
pop
loop
fadds
and
das
loopne
jne
jns
sti
xchg
lock
loop
pop
jecxz
adcl
dec
dec
or
inc
mov
add
pshufw
out
add
pop
push
lods
dec
pop
int
in
test
and
xor
fbstp
es
lea
cli
js
clc
sub
cmp
mov
data16
dec
shr
ds
mov
xchg
cmpsb
pop
push
mov
subl
adcb
dec
add
les
test
dec
icebp
dec
insl
scas
and
mov
adc
fnstcw
scas
out
adc
add
adc
mov
inc
pop
dec
mov
sbb
mov
push
or
scas
je
cs
fnsave
out
inc
add
xchg
and
pop
mov
repnz
mov
ret
ss
push
mov
push
popa
lcall
icebp
xor
out
je
pop
add
fisttpll
dec
aad
mov
cmp
divb
and
mov
into
test
hlt
in
leave
aam
pushf
ret
inc
inc
dec
mov
and
jns
push
pushf
and
testb
mov
mov
dec
rclb
mov
popf
jo
mov
cmc
mov
daa
jo
pop
test
pushf
lahf
leave
ret
aam
ja
cmp
cmp
lahf
inc
pop
add
jb
icebp
cmpsl
out
push
daa
mov
dec
xchg
xor
mov
mov
mov
inc
lret
addl
stos
clc
popa
jae
pusha
inc
sbb
jae
call
push
jl
daa
adc
adc
out
jp
xchg
jp
inc
enter
adc
xchg
inc
or
sub
shl
adc
mov
pushf
ds
or
in
jecxz
jle
outsb
out
popf
xor
pop
lock
call
pop
imul
pop
jecxz
cmc
xor
ljmp
or
clc
jmp
cltd
mov
xchg
jmp
stc
xor
mov
orb
or
mov
cmp
out
aad
lea
notl
inc
mov
data16
outsl
sbb
cmpb
pop
sub
cmpsl
sbb
or
push
jno
fistpll
xor
jle
xchg
in
int
lods
dec
lahf
mov
push
mov
mov
cld
push
pop
or
je
insl
or
mov
lods
das
in
jnp
test
xchg
enter
jg
push
or
bound
push
sbb
dec
inc
lea
sbb
mov
sbb
pop
ss
fimuls
jo
ljmp
xorb
andl
adcl
inc
mov
lds
shlb
cli
lds
sub
orl
daa
cmc
clc
dec
cltd
sbb
rep
loope,pt
mov
aad
ds
push
lret
stos
push
ret
pop
lret
or
mov
gs
addr16
pop
mov
sbb
xchg
rcll
add
dec
addr16
xor
xchg
cmpxchg
mov
arpl
fsubl
add
mov
gs
and
outsb
out
stos
sahf
xchg
xchg
ljmp
bound
dec
push
pop
sub
sub
or
xor
ljmp
cmp
sub
xchg
ret
push
add
rorl
or
int
loopne
push
xlat
dec
mov
or
lahf
mov
add
xor
jne
fiadds
fstpl
ss
es
outsl
repz
inc
mov
sti
into
mov
movsb
mov
mov
clc
js
pop
xchg
xchg
scas
push
push
push
mov
cmpsb
dec
sahf
out
adcb
test
sbb
xorb
andb
mov
push
dec
sbb
and
cmpsl
push
imul
ja
jge
popa
xchg
rorb
mov
xchg
or
cmp
or
add
outsl
pop
cmp
adc
cmp
stos
cmc
xlat
mov
dec
cltd
out
aad
cmp
cld
pusha
dec
sbb
das
jbe
and
lods
insl
stc
lret
cmp
dec
mov
movb
test
lea
fbstp
xor
sbb
sub
cmc
test
push
pop
cli
jbe
xor
push
or
dec
mov
movsl
dec
out
mov
sub
xchg
int
push
jg
mov
mov
in
out
fcoms
inc
cld
dec
stos
aad
add
cmp
adc
fcomi
inc
loop
cmp
popf
cmp
mov
mov
fidivs
out
shl
cmpsl
cli
mov
xchg
xchg
push
negl
and
pushf
pop
mov
ss
pop
mov
stos
mov
ja
jmp
or
cmc
decl
xlat
cmp
pop
cli
sub
mov
into
mov
add
aas
xor
jp
out
loop
pop
xor
mov
mov
mov
mov
lcall
aas
dec
pop
inc
sbb
pop
fsub
mov
xchg
adc
inc
das
pop
lret
adc
adc
mov
insb
in
bound
jo
sbb
sbb
mov
or
xchg
or
in
dec
adc
mov
adcb
fstl
iret
aas
or
push
out
and
push
rcrl
arpl
sbb
inc
dec
call
movsl
push
sub
idivb
xor
pushf
xlat
ja
xor
and
xor
adc
sarl
inc
sub
sbb
andl
sbb
cltd
pop
inc
iret
fsts
jae
xorb
jmp
fstl
arpl
imul
sarl
mov
out
and
divl
mov
call
push
xchg
pushf
push
xchg
mov
jns
pop
in
dec
adc
rorb
xchg
push
dec
jo
inc
repz
leave
ds
pop
in
or
mov
fsubs
out
pop
cld
in
outsb
out
push
das
inc
xchg
call
stos
jno
je
mov
mov
les
gs
es
roll
jo
mov
js
stos
fwait
mov
in
popa
dec
fwait
add
fmull
and
mov
outsl
aaa
mov
int
pop
cmp
xor
shl
xchg
cs
pop
or
gs
or
data16
pop
clc
cmpsl
ss
lds
into
std
sub
mov
sub
int
out
add
fcoms
fld
aam
pop
mov
jae
ret
xor
xchg
xchg
lret
mov
cld
adc
lcall
jne
sbb
dec
aad
lds
out
negl
stc
in
inc
sbb
cmp
loope
cmp
stos
sbb
mov
pop
into
sub
sarb
jns
mov
pop
rorb
cld
data16
in
add
push
cmpsl
xchg
out
dec
push
stc
fimuls
dec
lods
or
cmp
repnz
dec
lods
push
icebp
xchg
loop
clc
mov
xor
imul
pop
xor
or
adc
cli
sub
or
les
push
add
dec
leave
lea
fdivrs
pop
scas
and
mov
in
fstl
inc
insl
xorl
mov
pop
mov
or
mov
loop
aas
rcr
sbb
lods
dec
movsb
dec
fwait
ret
pop
decb
sbb
outsb
lret
stos
mov
pop
lds
shlb
pop
cmp
pop
pop
sbb
mov
les
loopne
ss
int3
adc
mov
adc
in
mov
jne
dec
xchg
cmpb
push
mov
pop
test
in
orl
movsb
or
jmp
sbb
add
lods
decl
pop
or
stos
dec
jne
out
jecxz
cmp
lret
adc
jmp
shlb
addr16
jns
roll
xchg
mov
push
cltd
xchg
pop
icebp
jnp
repz
jno
repz
fstps
mov
hlt
xchg
call
fsubrl
push
pop
pop
push
jns
or
pusha
adc
repz
cs
pop
pop
sbb
test
add
stos
loop
adc
jg
orb
cmp
out
sub
push
divb
ja
hlt
enter
ficomps
out
sub
inc
and
loope
cmp
imul
xlat
outsl
js
push
in
hlt
es
and
or
pop
and
pop
fiadds
insl
dec
scas
rorl
dec
pop
add
movsl
cld
mov
testl
pop
mov
fucomp
push
push
call
ret
popf
pop
idivb
push
rorb
sub
pop
push
fbstp
and
lahf
ds
or
int
mov
sahf
dec
jg
add
sub
fwait
ds
sub
dec
insb
push
imul
fidivl
lret
aas
repnz
mov
dec
test
xchg
aad
sub
call
gs
jmp
or
fcom
out
int
inc
adc
add
or
mov
rep
xchg
or
sub
mov
cmp
inc
pop
fimuls
mov
push
sub
test
add
aas
lret
mov
sub
jle
not
mov
lods
sbb
rcrl
sub
cs
outsb
xchg
adc
mov
jo
xchg
hlt
xchg
fisttpl
stc
mov
cmp
jbe
stos
push
mov
pop
mov
xor
shl
push
shrd
out
xlat
insb
inc
je
aas
test
lds
xor
fucomp
sub
add
imul
shlb
push
cmp
aaa
arpl
ljmp
addr16
inc
or
jg
push
mov
push
sbb
notb
mov
jae
insl
or
cli
adc
into
cmp
xor
and
loop
xchg
pop
jnp
dec
jnp
jp
sbb
test
into
adc
jae
sti
xor
aas
scas
lock
xchg
jns
out
nop
popf
lock
stos
xor
sbbb
pop
shll
push
stos
mov
cld
add
xchg
jno
fcoml
shl
push
mov
scas
mov
add
aad
out
test
and
xchg
rol
add
jecxz
cmp
xchg
push
pop
jne
pop
and
pop
jb
mov
popa
push
xor
jbe
dec
mov
lahf
jno
push
mov
fidivrs
xor
push
in
pop
cmc
fdivs
and
or
nop
test
mov
out
ret
in
flds
inc
mov
adc
les
push
xchg
ljmp
sub
and
pop
and
jmp
lret
dec
mov
scas
jp
out
adc
pusha
imull
or
cmp
mov
jbe
aaa
orl
mov
xor
pop
enter
mov
cmp
mov
rolb
iret
jno
push
les
js
cmp
jl
mov
push
sbb
lret
sbb
inc
into
jbe
in
inc
sbb
mov
push
inc
xchg
out
test
and
push
aad
lds
or
mov
sbb
mov
dec
add
in
faddl
pusha
mov
sub
icebp
or
int
xor
lock
mov
into
fwait
sti
loopne
mov
dec
or
imul
adc
arpl
cmp
nop
cmovg
outsb
rolb
add
jns
adc
sub
xor
push
mov
lock
int3
mov
lods
lahf
fcompl
rcr
push
fbstp
jmp
or
or
jl
dec
mov
cld
sbbl
push
cli
jecxz
aad
movsb
xor
add
push
ret
loopne
dec
fcoms
mov
cmp
push
aad
pop
sub
insb
inc
inc
dec
fdiv
popf
jo
cld
cmp
add
and
mov
jl
dec
fdiv
fadds
lret
andl
mov
add
push
pop
in
mov
cmp
jnp
lods
xchg
or
mov
cmp
push
sub
and
pop
add
push
mov
pop
lea
lods
mov
pushf
sub
lea
mov
rcll
pop
popf
nop
inc
call
push
cwtl
pop
jmp
xchg
mov
sbb
cld
popf
dec
call
or
je
hlt
psubb
fcmovu
mov
or
cmp
ljmp
mov
mov
dec
xchg
lds
rcl
jne
fistps
pop
aas
fwait
lock
pusha
push
cltd
sar
test
fldcw
enter
cltd
jnp
inc
gs
mov
cld
mov
xchg
mov
dec
not
xor
mov
jge
dec
pop
pusha
push
lret
inc
popa
or
pop
mov
push
into
sbb
mov
cmovno
fidivs
out
int
jmp
mov
aad
xor
in
in
xor
into
out
xchg
pop
cmp
mov
pop
insb
jecxz
sub
addr16
cld
out
dec
inc
inc
jno
cmpsl
or
movsb
mov
aaa
inc
xchg
std
ljmp
cmc
leave
xor
or
mov
jg
adc
inc
pop
and
inc
cwtl
cli
aad
sbb
shrl
rep
and
and
fdiv
outsl
jns
mov
test
xorb
mov
sbb
mov
pusha
out
sbb
andl
rcll
sbb
inc
jno
inc
push
pop
jns
mov
fs
sbb
cmp
mov
and
in
mov
cmp
out
shll
or
sbb
xor
xchg
adc
out
push
jmp
pushf
dec
and
cmpsl
xor
insb
test
jecxz
movd
xchg
loopne
jmp
or
int
mov
sub
jge
sbb
and
in
push
push
repz
and
outsb
rorl
iret
jo
repnz
push
mov
cmp
lcall
test
sbb
lret
cmp
loope
xor
mov
lock
jle
jl
jns
adc
divb
test
mov
xor
lea
jl
movsl
mov
das
add
fcmovb
and
sub
cmp
dec
in
push
pusha
push
cltd
cs
mov
inc
mov
jl
or
sbb
fcmovnu
xchg
pop
les
cmpsb
add
xchg
pushf
xchg
pop
add
push
push
push
adc
cmp
ljmp
imul
adc
or
xchg
pop
daa
or
sahf
add
pusha
outsl
jmp
or
push
mov
inc
and
repnz
push
inc
insl
cmc
iret
pmaxsw
jg
xchg
cld
cmp
or
inc
add
push
subl
sub
add
inc
jmp
aam
lds
pusha
add
adc
int3
int3
outsb
sub
lret
inc
push
lret
ds
lock
loop
xchg
cmp
push
xorl
test
jo
scas
andb
mov
xchg
fstpl
movsl
outsb
repz
fs
repnz
pmovmskb
arpl
xor
sub
jg
repz
jbe
sbb
popa
inc
rol
xchg
mov
sahf
and
cmp
xcrypt-ctr
cmpsl
sbb
mov
mov
push
mov
lock
cli
add
sub
mov
adc
mov
dec
jb
xchg
arpl
outsl
iret
cli
xchg
movsb
or
inc
xor
dec
pop
nop
arpl
push
lcall
icebp
lock
jne
ficomps
jne
lahf
or
pop
push
aaa
jbe
int3
loopne
in
jne
outsb
jne
fistpll
test
cld
adc
xchg
imulb
pextrw
mov
pop
xor
fidivrs
stc
aaa
cmp
into
test
mov
sbb
out
lret
and
in
in
int3
adc
sub
push
loope
xchg
fadd
test
inc
outsb
adc
xchg
xchg
adc
add
aaa
push
mov
test
add
int3
or
sub
sbb
jge
test
adc
mov
xorl
mov
xchg
jo
call
sub
jp
push
pusha
lods
lea
mov
inc
push
mov
gs
push
dec
mov
sbb
mov
jl
leave
sub
je
inc
push
push
inc
xorb
fcomi
sahf
xchg
fsubrs
push
sbb
insl
jae
insb
jnp
xchg
negl
cmp
filds
imull
outsb
je
dec
out
jle
or
shrl
cmp
inc
pop
sahf
mov
and
add
imul
sbb
mov
data16
cmp
dec
gs
add
mov
xchg
int3
mov
xchg
add
addb
mov
repnz
in
nop
aas
sub
mov
cmp
cmp
jo
and
pop
enter
loop
inc
iret
scas
fwait
cli
xor
mov
nop
xchg
dec
xchg
push
popf
insb
add
pushf
int
xchg
out
pop
xchg
dec
pushf
push
cmp
jnp
std
popf
sbb
push
add
je
xor
cltd
xchg
mov
and
jns
and
lods
xchg
sub
aas
cltd
pop
orb
mov
lahf
jp
add
xchg
inc
aaa
ss
jl
mov
adc
inc
add
pop
scas
aas
mov
aam
ficoml
hlt
cmp
inc
xor
adc
mov
test
xor
insb
mov
mov
loop
ja
test
outsl
jns
xchg
js
xorl
sub
leave
outsl
dec
ret
ja
and
or
movsl
mov
push
jge
setl
inc
sti
lds
inc
mov
insl
sbb
pop
sbb
adc
dec
fiaddl
pop
stc
sbb
mov
cld
stos
fcmovne
scas
test
movsb
inc
nop
pop
or
fisttpl
sub
or
popa
cli
js
repnz
fistps
ljmp
loope
and
push
mov
push
shll
inc
jge
arpl
pop
hlt
xor
dec
adc
push
xchg
cmp
shlb
mov
popf
push
mov
xchg
movsl
add
fstps
jnp
add
pop
in
lea
es
pop
or
jecxz
adc
jbe
aaa
test
mov
bound
jb
pop
ja
mov
pop
into
and
outsb
mov
repnz
loopne
inc
mov
pop
mov
ret
std
xchg
adc
and
dec
mov
fxch
sub
pop
dec
sub
sbb
loopne
sub
repnz
xor
xchg
ss
xchg
mov
lret
loope
div
ficompl
mov
cld
inc
push
inc
pop
sbb
test
es
stos
xchg
ljmp
jp
xchg
lahf
cmp
inc
jae
hlt
call
mov
pop
or
cmc
dec
adc
xor
loop
repz
mov
cmpl
inc
sbb
jle
lods
mov
push
addr16
inc
aam
mov
push
ret
cmpsb
mov
adc
shll
outsl
mov
cmc
ret
add
data16
into
pop
and
cmp
mov
jo
xor
xor
mov
movsl
adc
pop
inc
roll
xlat
daa
xchg
mov
cmp
add
xorb
pop
pop
push
push
sub
mov
push
das
aaa
mov
xchg
sub
pop
add
popf
out
pop
es
add
lds
or
es
or
dec
sub
or
dec
fidivrs
mov
daa
jecxz
mov
cmp
or
cmp
xchg
leave
aad
fdiv
pop
push
push
popa
ss
xchg
ss
mov
jns
push
frstor
pop
aaa
pop
adc
xor
mov
leave
or
inc
pushf
xchg
out
pop
jo
outsb
or
loope
ret
test
lcall
cmp
mov
and
or
dec
aas
cmp
cmc
in
fnstcw
fiaddl
popf
pop
inc
mov
xchg
scas
or
movsb
mov
inc
lea
push
mov
adc
gs
cmp
das
jp
fnstsw
sahf
xchg
inc
dec
cld
mov
das
xchg
mov
push
loop
ljmp
fs
and
fadds
push
inc
orl
or
or
mov
dec
add
lock
aas
ss
and
add
mov
or
inc
xor
arpl
adc
stc
in
mov
gs
and
sub
icebp
and
mov
addr16
mov
pop
mov
dec
pop
push
lods
rol
adc
dec
xchg
dec
int
int
mov
lret
pop
js
mov
jl
pop
sub
pusha
adc
and
push
mov
aam
mov
sbb
aam
loope
jp
je
cmp
dec
fs
lret
mov
jg
cmpxchg
iret
xchg
push
enter
add
push
cmpsl
and
jb
sbb
push
call
into
sub
outsb
dec
cmp
divl
out
cltd
test
test
push
xor
inc
jg
fs
push
inc
and
test
fistl
jbe
hlt
mov
dec
rorb
rorl
pop
fwait
loop
inc
sti
notb
xor
inc
lock
loop
cmp
loop
cli
xchg
sbb
in
roll
call
hlt
add
popf
sbb
lods
mov
xlat
test
insb
ds
enter
inc
xchg
movsb
sub
inc
das
mov
fwait
test
aas
or
mov
adc
push
hlt
test
repnz
call
inc
jmp
jne
js
push
dec
fisubrl
cmp
xlat
icebp
cmpsl
ror
mov
adc
lds
cmpsl
imul
mov
insl
push
fninit
mov
leave
dec
fsub
or
xchg
sbb
sbb
adc
insb
rclb
fmuls
or
cmp
mov
pop
adc
cmpsb
add
mov
loop
fnsave
fstpt
dec
mov
xor
in
data16
push
and
inc
int3
xor
hlt
addl
jle
mov
inc
add
xor
fs
std
dec
pop
movsl
pop
add
xchg
mov
outsl
orl
imul
and
in
mov
stos
cmp
mov
sub
cmp
fs
pusha
cltd
push
cmp
mov
mov
fsubrs
lahf
xchg
cmpsl
ret
push
inc
cmpl
cs
fisubrs
and
pop
sahf
push
pop
jl
push
or
pop
cs
push
add
push
xor
movsl
pop
cwtl
ds
scas
mov
push
adc
cmc
and
adc
push
adc
addl
in
aaa
sbb
aad
cwtl
aad
dec
lcall
mov
and
insb
mov
or
xor
mov
sti
rcrb
mov
or
cmp
pop
and
adc
dec
push
or
aam
mov
push
jge
cmpsl
xchg
or
pusha
cmp
inc
pop
mov
mov
xor
mov
xchg
std
push
hlt
lcall
cmp
xchg
loop
leave
add
popf
add
jmp
cmp
bound
in
in
cltd
sbb
add
shl
push
push
lret
inc
movsb
adc
push
icebp
mov
xchg
jmp
sbbl
test
fldenv
iret
pop
and
inc
inc
cmp
adcb
movsl
mov
cmpb
pop
rclb
mov
ret
fcoms
leave
inc
cmpsb
das
lret
or
push
lret
es
mov
call
in
ja
xor
jp
cli
add
enter
sbb
jmp
inc
hlt
cmp
cmpsl
mov
icebp
aas
pop
push
lahf
icebp
inc
sbb
mov
mov
lahf
sub
dec
dec
xor
push
jge
xor
daa
cmpsb
ljmp
adc
adc
mov
mov
cmp
add
jno
push
push
leave
push
and
xlat
fstpl
fcomps
daa
sub
cmp
cmc
imul
std
push
push
dec
daa
shr
and
nop
add
xor
ljmp
mov
scas
cmpsl
cmp
cmp
nop
sub
cmp
inc
out
fs
jp
pop
out
jo
aaa
fimuls
fdivrl
jmp
lret
sti
jne
into
arpl
popf
pop
xchg
lea
inc
sub
dec
push
imul
das
lods
mov
rcr
gs
cltd
or
pop
mov
pop
lods
xor
das
std
jp
xchg
fwait
outsb
add
sub
add
sub
pop
cltd
jg
fwait
pop
push
adcl
pop
jp
je
in
and
test
fs
sub
mov
or
mov
cmp
cmp
loop
imul
mov
hlt
and
or
inc
out
jge
mov
es
push
push
fsubrp
inc
or
push
enter
data16
loope
add
stos
pop
or
ret
mov
outsb
lock
jns
addr16
out
or
cli
xchg
ja
movsb
std
inc
adc
xor
popl
pop
pushf
mov
scas
mov
inc
push
jge
inc
lock
mov
fwait
inc
js
jno
jle
cwtl
data16
in
pop
jnp
or
fwait
inc
scas
mov
iret
adc
and
test
arpl
fcmovbe
in
leave
mov
adc
data16
andl
add
push
nop
ficomps
add
inc
mov
mov
data16
inc
rorb
je
enter
jg
push
inc
in
pop
cmp
push
mov
pop
xchg
jmp
insb
in
cmpsl
outsb
ja
js
pop
shll
mov
pop
int3
stc
xchg
sbb
xor
lods
dec
lods
mov
enter
mov
cli
adc
xchg
add
push
shlb
andb
jne
xchg
mov
mov
sar
mov
and
pop
adc
push
mov
les
loope
cmp
xchg
push
mov
sbb
mov
scas
cmp
pop
pop
fisubrs
ficoms
rorb
call
out
cmp
sub
aam
test
call
int3
adc
xor
lahf
add
pop
aas
rol
leave
or
cmp
hlt
push
lret
mov
call
dec
add
cmp
es
jg
inc
jle
xor
xchg
ret
pop
es
xchg
jl
lock
mov
pop
mov
popf
sub
out
sbb
adc
sarl
adc
jno
inc
data16
les
hlt
ret
xchg
inc
push
pop
shr
push
popf
cmp
fsubp
cwtl
outsb
inc
pop
cli
or
insb
aas
add
mov
rcrb
jnp
shrb
popf
or
and
sti
and
lret
mov
jb
mov
out
adc
sbb
daa
aam
inc
mov
pop
dec
push
in
clc
pop
test
sbb
movsl
gs
rolb
test
mov
sbb
das
jg
daa
mov
test
rcrl
sub
lret
mov
js
psubsb
pop
add
mov
jb
fcompl
mov
jmp
push
insb
jae
adc
push
ds
ljmp
lret
repz
in
adc
inc
fildll
lcall
inc
pop
pop
xorl
adc
adc
sub
arpl
int
xorb
repz
popa
lcall
iret
push
xchg
es
mov
push
mov
cmc
ljmp
aam
into
xchg
aas
addl
jbe
cmp
test
jbe
and
sub
cmp
sub
mov
push
mov
lock
aad
pop
and
jno
loop
xchg
test
aad
sbb
repz
scas
aaa
test
scas
xor
jmp
in
pop
ret
dec
adc
xchg
stos
cmpsb
jge
repz
test
inc
ss
cs
pop
sbb
sub
mov
xchg
xor
jne
test
rorb
mov
fadds
int
add
jb
mov
sbb
xor
out
std
mov
and
push
iret
sbb
into
test
int
cld
push
out
cmpsl
imul
jp
push
pop
xor
xchg
repz
loop
mov
cli
lock
lahf
push
inc
xchg
inc
sub
adc
mov
adc
cmc
dec
inc
fldl
addl
jo
imul
or
pop
in
jmp
mov
std
mov
adc
cmpsb
sub
cmp
je
int3
test
lds
cmpb
cli
int
add
jo
sbb
fwait
int3
sbb
test
rorb
pop
sub
xchg
je
mov
jg
icebp
xchg
in
cmpsl
je
inc
push
leave
cmp
jns
and
dec
int3
stos
int3
inc
neg
int3
mov
lea
push
jne
xchg
jb
into
sub
fiaddl
ss
mov
cmpsb
mov
dec
icebp
push
inc
in
push
dec
inc
cwtl
movsl
push
adc
pop
popf
data16
testw
pop
mov
mov
xlat
push
sti
or
adc
lods
outsb
inc
out
pop
aas
sub
sbb
inc
in
jl
pop
pop
mov
sub
ret
insl
aad
cmpsb
in
xlat
in
lcall
or
dec
mov
outsb
leave
inc
mov
fistpl
xor
pop
loopne
shlb
mov
insb
lock
test
scas
int
mov
in
ljmp
dec
subl
push
aam
stos
sbb
inc
jecxz
jne
in
sub
jo
jmp
scas
mov
inc
ret
cmp
sub
dec
and
dec
outsl
lock
loop
cmc
ret
xchg
xor
pop
int3
out
inc
sub
inc
aas
das
js
sahf
mov
mov
mov
test
inc
shrl
call
fisubs
fcomps
js
sub
pop
xlat
sbb
ds
aad
cld
lods
outsb
jno
and
fiadds
loopne
repz
jmp
mov
mov
test
das
mull
dec
cmp
addl
aaa
nop
sbb
dec
cmc
movsl
cmp
jg
loope
loope
adc
dec
outsl
repz
jnp
dec
popf
daa
mov
aam
ret
inc
jg
fistl
jmp
out
adc
mov
add
daa
xchg
cld
adc
push
and
iret
mov
jg
jp
mov
sub
je
jae
cwtl
jo
mov
lret
mov
jno
mov
jne
mov
incb
pop
jo
dec
gs
jbe
movsb
lret
fidivrl
gs
lods
sbb
xchg
sub
test
mov
mov
mov
or
lds
ljmp
sbb
cmpsb
imull
in
ds
inc
jle
arpl
jns
enter
sbb
push
and
adcl
add
jmp
out
add
jg,pt
push
and
pop
add
decl
lods
testb
add
mov
loope
xchg
js
and
mov
and
pop
jo
pop
insl
jmp
sbb
xchg
push
inc
xor
or
sub
shrb
inc
rcll
lret
or
notl
sbb
sub
addr16
test
gs
std
repz
jmp
inc
cmp
cltd
sbb
aas
xlat
insl
push
sbb
push
or
pop
cs
xor
repz
xchg
adcb
mov
mov
and
fisubs
or
nop
in
data16
roll
pop
movsl
jae
adc
and
fdivl
cwtl
rorb
mov
pop
add
mov
hlt
sbb
pushf
in
cmp
lcall
push
fwait
ja
dec
test
pop
in
fadd
sar
hlt
fs
sub
inc
or
fimull
lods
cmc
cltd
popf
or
iret
push
and
push
nop
sub
jne
cli
or
xlat
loopne
notl
mov
pop
repz
gs
cmpsl
mov
imul
adc
fldt
cmp
orl
fwait
int
adc
or
out
test
fs
mov
test
jbe
push
sbb
and
hlt
xor
sub
aam
mov
sub
iret
jge
cs
or
scas
xor
ja
adc
outsl
int
xor
jl
add
jns
pop
jmp
sub
rclb
cmp
xchg
fnsave
mov
lret
inc
shld
cmpl
scas
mov
loopne
inc
cmpb
pop
jle
std
cmp
and
fiaddl
mov
jb
or
pop
mov
jns
mov
rolb
xchg
inc
js
lds
scas
movsb
mov
jp
into
xor
xchg
loope
outsl
cmp
out
mov
dec
mov
cmp
xchg
mov
sbb
inc
mov
mov
mov
adc
mov
lcall
cmp
imul
fs
hlt
push
mov
cmp
cmp
mov
xor
cmpsl
cmp
dec
in
insb
adc
addr16
mov
clc
jnp
dec
xor
jmp
mov
lea
out
or
push
pop
js
or
xchg
bound
mov
xchg
outsl
lcall
out
dec
test
jg
sub
test
jno
mov
inc
ds
test
jle
pop
mov
popf
pop
daa
mov
cmpsl
icebp
adc
xor
in
cmpsb
push
rclb
jecxz
dec
or
sar
add
dec
adc
or
pushf
addb
out
xlat
or
pop
cmp
jae
xchg
out
jo
dec
loope
cwtl
gs
and
es
xor
xlat
hlt
int3
mov
inc
inc
pop
std
jg
and
bound
adc
xor
or
rclb
scas
roll
iret
imul
pop
xchg
push
insb
jl
sub
scas
adc
mov
fdivrl
stos
mov
jo
pop
jnp
and
into
dec
inc
shll
incb
decb
loop
cwtl
cmp
mov
out
das
ret
test
jecxz
mov
jmp
sub
mov
mov
mov
mov
mov
xchg
in
cmpsb
cmp
xorb
jmp
imul
jmp
add
push
sub
mov
dec
dec
fmulp
or
inc
mov
cwtl
and
or
arpl
push
pop
push
out
xor
push
mov
cmp
push
mov
cmp
ja
mov
xor
sbb
sti
mov
push
pop
sbb
lcall
add
sub
mov
xchg
hlt
mov
shrb
icebp
lds
mov
inc
mov
testl
rcll
test
stos
mov
jmp
enter
js
push
xchg
mov
repz
imul
xchg
xor
pop
movsb
scas
lcall
test
jecxz
mull
enter
incl
xor
adc
sub
xlat
push
cltd
mov
add
jae
push
movb
outsb
stos
mov
cltd
psrad
dec
jnp
inc
into
jecxz
adc
je
stc
mov
mov
je
fisttpll
loopne
sbb
shlb
push
mov
push
ja
add
iret
xor
jne
mov
push
mov
fmuls
pop
cmp
or
aaa
mov
cmpsb
sbb
cmp
outsb
ret
jne
imul
inc
lea
aam
pop
fs
test
stos
mov
vmread
out
and
xchg
push
push
push
das
jbe
push
mov
int
sti
push
sub
stc
outsb
mov
std
addr16
movsb
xchg
aad
lods
and
incb
pop
mov
dec
xchg
and
push
cmp
mov
mov
and
inc
fyl2xp1
leave
fstpl
pop
shrl
insb
or
jl
scas
imul
fisttpl
dec
fcmove
mov
rcll
mov
jne
cltd
and
testb
das
mov
inc
mov
lods
outsl
bswap
mov
xor
movsb
mov
in
mov
xor
sub
push
push
insl
in
pop
dec
xor
mov
adc
test
dec
jns
jp
dec
sub
lods
imul
cmp
mov
test
repnz
js
enter
shll
es
cs
xor
inc
adc
xlat
out
fmulp
aam
xchg
aam
test
mov
frstor
ficomps
sub
mov
clc
in
sarl
and
aad
lds
mov
subl
pop
out
sub
mov
filds
lret
mov
repnz
xchg
mov
cmp
leave
repnz
lahf
xchg
mov
inc
idivl
mov
xchg
dec
dec
sbb
fsubrs
adc
adc
push
push
ficomps
xchg
push
mov
adc
popa
loopne
sahf
popa
and
stos
stos
hlt
sub
sub
adc
push
adc
cmp
mov
mov
clc
cmp
push
int3
test
push
jmp
cmpsb
out
mov
lods
ds
fists
cmp
mov
iret
jo
sbb
es
ror
adc
mov
pop
scas
cmp
ja
pushf
mov
outsl
mov
out
cmp
dec
je
int
xchg
jmp
idiv
cmp
dec
cld
mov
mov
sarb
and
mov
rclb
dec
fwait
xor
repnz
lret
in
movsl
jmp
push
xchg
pushf
ficoml
sub
jbe
loope
pop
mov
popf
clc
xor
in
fwait
aas
imul
cmpsb
scas
pop
xchg
mov
mov
stc
jl
jle
add
cltd
cld
or
mov
jnp
scas
jnp
jb
aam
or
adc
cmpsb
jb
les
addr16
test
sbb
mov
mov
rcl
aad
and
nop
and
jo
test
rcrb
je
mov
jnp
shll
sub
xor
rcrl
les
jne
pop
aas
adc
pop
cli
inc
adc
sub
push
out
push
lcall
les
loope
cs
sti
xchg
lea
mov
shrl
loope
sti
pop
or
out
je
movb
sbb
gs
lods
aam
add
push
xor
lods
push
mov
frstor
call
test
lahf
xor
dec
mov
jno
shrb
fucomp
arpl
sbb
fistl
mov
in
fstl
push
sbb
shll
inc
xchg
movsl
out
xor
xor
ds
arpl
je
dec
sub
sub
add
dec
xor
adc
rcl
add
roll
jbe
push
cmp
mov
push
aam
sbb
xchg
jmp
sub
aaa
je
jp
dec
pushf
in
adc
dec
rcll
jecxz
jg
xor
cmp
mov
ret
outsb
or
or
aaa
jle
xchg
movsb
inc
push
inc
nop
sub
mov
pop
aas
mov
mov
stos
test
aas
jle
jecxz
xchg
push
sbb
movsb
out
mov
sub
aad
sahf
pop
jmp
mov
mov
nop
scas
push
sub
andl
jle
adc
loop
ljmp
fmul
lahf
repz
movsl
sbb
xor
imul
add
sub
pop
cmp
add
mov
xor
cmp
out
mov
add
cmp
mov
mov
fmul
jmp
fcoml
lret
fidivrl
xorb
mov
insb
mov
adc
cld
jo
mov
push
jle
es
icebp
daa
fimuls
pop
mov
out
xchg
mov
movsb
or
rcl
and
aad
hlt
lahf
imul
push
addr16
stos
push
cmc
xchg
adc
movsb
mov
sub
jmp
into
and
in
mov
and
cltd
scas
xlat
sbb
imul
inc
pop
sbb
lock
adc
sub
enter
aam
sub
clc
lret
mov
and
and
cld
cmpsl
cmp
inc
mov
pop
mov
push
sbb
adc
fwait
data16
jp
xchg
cmpsl
sbb
cli
loope
insb
daa
bound
dec
push
setp
mov
out
das
pop
inc
adc
js
mov
lods
cli
mov
xor
add
sbb
xchg
lret
out
push
jl
pop
push
jb
dec
mov
loopne
mov
sbb
mov
fwait
iret
dec
jns
jp
in
sub
xor
fwait
cwtl
cmp
cli
mov
inc
pop
dec
inc
jno
mov
pushf
pop
dec
adc
leave
clc
mov
inc
hlt
lcall
jne
push
gs
or
push
ds
sub
fs
xor
mov
or
stc
mov
jmp
mov
cmpsl
fxch
das
lcall
add
add
arpl
mov
push
dec
scas
fwait
push
lea
rcr
adc
lods
pop
loopne
push
add
insl
idiv
adc
xor
je
adc
or
and
ror
mov
jp
test
mov
sbbl
mov
movsl
repnz
icebp
add
push
jno
lcall
xor
pop
ret
lock
pushf
xchg
xchg
mov
test
inc
or
jmp
aad
adc
ret
dec
aaa
int
and
icebp
sbb
inc
mov
movl
push
sub
test
adc
rcrb
jge
in
or
inc
addb
inc
pop
mov
daa
pop
ret
push
sub
add
xchg
mov
mov
mov
inc
and
lods
jnp
test
adc
popf
cwtl
mov
pop
out
mov
andl
lret
mov
inc
lea
inc
cmp
mov
mov
inc
xchg
das
push
push
mov
rclb
clc
mov
insl
pop
push
sub
aam
stos
mov
pop
fcomps
jg
cmp
push
lret
mov
std
cmp
je
shl
shll
mov
mov
das
or
sbb
jle
ss
and
push
xchg
adc
mov
adc
and
outsb
or
mov
add
inc
bound
inc
mov
xor
pop
in
sub
lret
or
in
aad
mov
push
mov
inc
dec
xchg
xchg
add
insb
cmp
mov
fistl
jmp
insb
cld
out
mov
mov
jl
lods
push
sbb
xchg
push
or
int
mov
sub
push
lahf
xor
pusha
rorb
fwait
leave
hlt
push
adc
dec
cwtl
mov
sarl
hlt
mov
inc
int3
adc
cmp
mov
push
mov
insb
sbb
not
lret
jp
aad
adc
aas
dec
mov
int
shr
or
add
cli
hlt
add
mov
mov
gs
in
pop
lret
mov
xor
cld
pop
lods
mov
repnz
std
divb
loopne
scas
dec
shlb
enter
movsl
sub
shr
or
push
push
and
cmc
hlt
sbb
aaa
xchg
add
push
adc
lahf
test
push
dec
call
insb
mov
mov
iret
popa
dec
cltd
dec
jb
dec
jecxz
dec
jmp
frstor
xor
adc
jecxz
cmp
add
ljmp
fwait
jae
xor
in
push
cs
fdivr
or
aam
shr
sbb
pushw
in
dec
add
pushf
mov
scas
mov
cltd
sbb
scas
xor
outsb
adc
pushf
add
dec
jmp
pop
inc
mov
adc
bnd
add
and
and
dec
sub
adc
jns
icebp
push
jge
pop
and
and
cmpsb
adc
popf
xor
ljmp
sub
xchg
xchg
mov
arpl
push
and
inc
iret
aad
sbb
les
and
xchg
mov
mov
stc
add
orb
jb
add
jb
push
and
jp
pushl
dec
iret
aaa
das
xlat
or
pop
cmp
mov
and
stos
xchg
fidivs
dec
xchg
ret
lret
pop
mov
repnz
adc
dec
lret
pop
mov
iret
outsl
jb
popa
cld
xor
std
cmp
inc
aaa
dec
addr16
dec
fldl
lods
push
push
add
dec
push
push
sub
sub
negl
or
push
lea
and
inc
ljmp
dec
sub
jne
push
xorl
mov
push
mov
dec
mov
pop
sub
in
inc
int
add
mov
jae
dec
outsl
lahf
inc
and
lret
xor
into
xor
adc
insl
sub
scas
cmp
push
xchg
cmp
jae
pushl
fdivrs
test
cmpsl
add
push
repnz
lods
lea
fwait
sub
and
loopne
inc
or
lods
mov
xchg
add
mov
cmp
jmp
mov
dec
mov
cmovs
cmc
inc
inc
sub
insl
test
mov
mov
loopne
xchg
jno
push
jg
insl
lods
pop
fmulp
jp
sbb
xchg
sub
in
dec
push
push
jno
and
ret
mov
adc
dec
mov
inc
sub
jle
fildl
pop
inc
dec
mov
shl
pop
or
mov
dec
pop
cwtl
mov
mov
iret
stos
outsl
aas
mov
sub
push
fldcw
adc
cmp
jp
inc
adc
mov
xchg
data16
xor
sub
jo
jo
add
inc
push
cmp
sub
inc
xor
xor
jmp
iret
fcoml
mov
rclb
sbbb
push
movsb
pop
jbe
les
add
mov
xor
filds
mov
push
jmp
dec
inc
js
lds
pop
xchg
push
inc
adc
dec
mov
fiaddl
add
ss
cltd
push
into
xchg
and
dec
ja
push
pop
cmp
mov
jnp
push
gs
or
fwait
inc
iret
pop
push
andl
sbb
cmp
jle
lods
mov
add
shll
jp
sahf
mov
xchg
adc
mov
pop
push
orb
repz
in
imul
add
cld
push
aam
jae
mov
adc
push
jbe
mov
sarl
xchg
push
stc
jle
sub
ss
or
add
incb
test
ret
pop
inc
and
ret
adc
inc
xor
gs
bound
mov
icebp
divb
je
test
sub
out
and
lret
or
aad
pop
jnp
and
xor
xchg
sbb
mov
rol
mov
call
bound
test
cmp
idivb
adc
call
push
imul
imul
out
adc
in
pusha
aas
lods
cli
fcmovnb
mov
mov
add
jns
mov
jnp
inc
xor
mov
imulb
cmpsb
xor
ljmp
sub
in
inc
sti
ja
sti
orb
imul
inc
movsl
xchg
loop
int3
and
test
cmpsl
sti
sar
lock
ret
outsl
rclb
outsb
ja
xorb
call
inc
out
mov
xor
sar
shrl
rcrb
aas
lret
or
lret
shlb
mov
dec
pop
outsb
fbld
or
mov
icebp
xchg
ret
and
sub
xchg
filds
stos
pushf
sub
lods
or
xchg
cmpsl
call
mov
call
orl
loop
lcall
cmp
rcrl
xor
pushf
cmp
mov
mov
adc
mov
es
idivb
cmp
xchg
bound
jne
jecxz
mov
jne
pop
and
xchg
push
fldt
fwait
dec
adc
jg
pushf
mov
out
xchg
inc
mov
pushf
jns
sbbb
sbb
cltd
imul
jnp
push
pushf
daa
popa
ret
divl
mov
push
enter
inc
xchg
stc
data16
les
mov
mov
in
jae
out
mov
cs
jae
aam
dec
sar
push
xchg
aaa
add
pop
fs
test
pop
pop
clc
dec
loopne
mov
adc
mov
mov
inc
cmp
ja
fistpll
jbe
pop
ss
mov
nop
add
sub
mov
loope
gs
js
pop
test
xchg
mov
mov
call
inc
lret
scas
ss
xchg
int3
add
ds
dec
call
sub
ret
lsl
sbb
dec
into
pop
cli
pop
or
mov
pop
adc
fsubl
enter
push
clc
lea
adc
mov
jp
inc
add
fidivl
adc
adc
mov
es
add
hlt
mov
aas
sub
fucom
xor
mov
mov
sbbl
test
sub
adc
xor
pop
hlt
ret
rorl
fnstenv
cmpsb
or
or
jecxz
inc
aad
mov
jae
inc
cltd
jae
ja
movsl
mov
sub
cmp
pusha
cmp
lahf
iret
or
pop
sub
push
pushf
xor
mov
jg
xor
sar
sbb
xchg
add
xlat
mov
jns
inc
mov
push
ffree
inc
sbb
pop
js
test
inc
pop
ret
adc
mov
push
test
icebp
fadds
sub
ja
add
add
mov
mov
les
dec
mov
push
in
xor
push
mov
adc
pushf
add
xchg
stos
rcrb
fwait
xlat
shlb
add
rol
aam
sti
mov
lret
fcompl
xor
pop
push
cmp
outsb
insl
mov
das
add
xlat
inc
push
dec
cmp
jbe
lea
stc
mov
shrl
bound
popa
push
xor
and
pusha
or
jg
daa
pop
adc
inc
js
mov
mov
into
mov
into
pop
sbb
mov
sarb
scas
mov
mov
iret
fnsave
loop
dec
test
stc
popa
insb
add
repnz
or
dec
jle
ret
add
ret
icebp
ret
orb
cltd
jle
xor
fs
leave
push
mov
iret
call
cwtl
dec
cmpsl
das
out
icebp
out
or
lock
mov
push
sub
lret
add
cli
mov
shlb
std
hlt
xor
sbb
lea
xor
nop
stc
dec
add
and
push
aaa
add
jmp
scas
stos
sarl
sub
and
push
push
sub
mov
and
push
push
insl
fsubrl
clc
ja
lahf
and
orb
dec
add
or
cmp
xor
in
jg
and
dec
ficompl
hlt
stos
sub
mov
push
pop
xlat
dec
push
inc
notl
std
inc
fiadds
xor
pop
ds
lret
test
inc
arpl
shrb
cmp
mov
aas
repnz
jo
mov
mov
insl
ja
jecxz
in
bound
inc
mov
or
cmpsl
in
call
xchg
jmp
test
push
xor
xchg
popa
push
js
inc
std
xlat
push
cmp
and
jmp
std
lods
sub
in
andl
testl
and
adc
inc
movb
and
sbb
mov
stc
pushf
idivb
mov
pusha
pop
jp
and
data16
stos
mov
call
lret
ror
mov
add
std
add
popf
fcmove
cwtl
push
repz
push
sub
pop
push
das
aaa
aam
mov
xchg
pop
addb
mov
mov
cmpsl
dec
daa
inc
cmc
insl
jae
mov
dec
mov
sub
mov
insb
add
pop
insl
push
xor
jmp
gs
xor
push
jl
stc
add
pusha
or
into
mov
mov
xlat
js
lods
jnp
jp
movsl
addl
lahf
loopne
dec
push
add
jg
sahf
jg
and
dec
jbe
mov
jcxz
stos
jno
push
or
inc
or
sub
dec
inc
rcll
out
pop
out
jbe
xorb
daa
outsl
mov
lods
mov
cmp
out
lea
out
pop
stos
in
sar
aad
cld
jnp
mov
pop
xchg
push
leave
hlt
cltd
cltd
in
popf
stos
test
int
and
jae
inc
test
testl
push
fwait
jae
cmpsb
inc
leave
je
dec
fwait
stos
mov
mov
mov
imul
add
in
outsl
das
div
fidivrl
jge
js
jmp
outsb
int3
pop
gs
xchg
xor
sub
push
or
imul
call
out
add
mov
lret
js
pop
enter
dec
stos
in
xchg
xchg
or
std
xchg
pop
test
pop
insl
cmp
aas
mov
outsb
and
test
mov
stos
repnz
leave
xchg
imul
ja
outsl
test
pop
mov
mov
sbb
mov
pop
bound
pop
and
pop
imul
insb
pop
xchg
sbb
mov
mov
mov
lcall
ja
jo
les
cmpsb
or
dec
pop
sbb
jecxz
jb
jnp
jbe
jno
fxam
or
je
xchg
ja
xor
add
or
pop
dec
jbe
outsl
jne
inc
subb
pop
imul
jno
pop
sub
push
out
sti
test
mov
enter
cmpsb
addb
mov
and
sbb
jl
dec
adc
mov
mov
cli
or
mov
iret
xor
pusha
xlat
test
add
pop
insb
xor
leave
sbb
lods
lcall
out
push
mov
or
out
js
sub
sbb
lea
or
addl
jge
cli
mov
xchg
fwait
gs
lds
mov
dec
mov
ja
imul
push
cltd
mov
mov
shlb
lret
dec
mov
cwtl
dec
mov
and
xchg
add
push
jle
mov
lret
std
cmpsl
inc
sub
fucomi
mov
loop
mov
icebp
in
sub
mov
negl
sbb
insl
or
cmc
adc
jmp
movb
pop
loopne
lret
stc
sbb
xchg
push
xor
ss
mulb
cmpb
pop
push
scas
sub
mov
je
cs
fneni(8087
dec
jmp
fcmovnbe
pop
or
xor
inc
fdivp
sbb
xchg
shl
jl
mov
jb
inc
cmp
adc
lahf
jb
decl
inc
jno
sub
in
jge
insb
arpl
imul
fstpl
mov
cltd
loope
bound
lds
push
loopne
push
push
add
inc
into
int
hlt
or
mov
jecxz
push
std
xchg
mov
out
imul
sbbb
push
repnz
add
jmp
mov
mov
inc
mov
mov
push
fisubrs
inc
xchg
push
ret
cld
je
clc
push
inc
sub
or
popa
mov
pop
xchg
xor
inc
outsl
jno
inc
je
rcll
lcall
jp
fildl
cmpb
lret
int
dec
stos
xlat
sub
test
push
ret
adc
sub
sub
filds
push
mov
std
cwtl
inc
xchg
pusha
test
add
or
sub
outsl
out
xchg
mov
testl
mov
push
cld
mov
js
movsb
mov
mov
mov
test
inc
and
mov
aaa
sti
loop
bound
scas
int
jnp
mov
in
xchg
jns
mov
pop
cmp
dec
push
js
pop
test
pop
roll
pop
add
fsubr
pop
mov
add
push
or
out
cltd
enter
in
pop
pop
in
adc
inc
jo
sub
jmp
mov
outsb
xor
fmull
in
pop
sbb
lahf
and
pop
rcll
push
jle
roll
rorb
pusha
clc
push
xchg
mov
sub
adc
add
jno
dec
xor
movsl
jp
sbb
cmp
scas
divl
jl
fwait
std
xchg
lret
rol
jle
jl
sbb
ffreep
sub
test
xchg
or
lods
inc
outsl
sbb
xchg
ficompl
movsl
sbb
inc
pushf
pop
mov
xchg
int3
mov
add
outsb
loope
jmp
fdivr
lea
clc
fimull
bound
xor
stc
or
fisttpl
test
mov
bound
jg
pop
outsl
test
mov
mov
cwtl
jno
les
jmp
lock
sbb
xchg
lods
pop
movlps
repnz
mov
scas
add
jbe
pop
lcall
add
int
leave
loope
and
ljmp
mov
xchg
and
xchg
push
pop
test
test
test
inc
sub
stos
adcb
and
in
nop
cmp
ja
insl
fdivrp
lds
rcl
mov
fwait
push
add
jnp
mov
into
cld
jle
sub
push
cmp
sbb
fwait
cltd
xchg
and
or
les
mov
dec
fists
ds
sbb
cld
cmp
pop
add
sub
cmp
sbb
add
nop
pop
cld
lods
or
out
daa
dec
inc
in
pop
mov
mov
shlb
call
int3
adcb
cmc
fstps
popa
mov
aas
pusha
mov
pop
outsl
test
roll
dec
inc
into
push
cs
jae
jns
mov
xor
dec
es
or
mov
add
jne
xor
pop
mov
pop
call
mov
jnp
and
fs
xchg
xchg
sbb
push
in
adc
adc
jecxz
ja
negb
mov
xor
loope
lods
movsl
emms
stc
mov
std
insl
je
insb
loopne
mov
movb
aad
mov
addr16
in
fbld
clc
mov
adcl
xor
xor
mov
sub
popf
popf
es
jnp
push
pusha
fdivp
pop
sbb
or
mov
addl
add
lret
repnz
lret
cltd
xor
and
mov
pop
adc
icebp
add
cwtl
loope
cmc
sub
into
pushf
pop
jl
cwtl
and
jne
sub
xor
sub
mov
or
in
add
lcall
fldl
fistl
loopne
test
cld
ds
sub
dec
xor
xchg
mov
jne
mov
inc
outsb
roll
sub
or
aad
jp
xchg
loope
lea
stos
mov
sbb
test
mov
add
cmp
out
or
int3
dec
dec
push
xchg
lahf
cmp
pop
pop
fisttpl
mov
cmp
aaa
pop
lods
dec
lret
scas
mov
outsl
loope
fsubl
insb
jae
mov
fstpl
and
shll
sbb
sti
mov
lea
cmpsl
inc
push
jo
mov
icebp
ficompl
mov
sbb
mov
int3
xlat
vmwrite
outsl
cpuid
xor
repz
out
add
mov
repnz
push
xchg
movsl
aas
aad
push
sahf
push
test
ds
dec
jns
mov
and
mov
mov
add
fwait
mov
jnp
enter
cmp
pop
mov
xchg
ljmp
sbb
sbb
into
fidivrs
add
or
push
dec
gs
add
xchg
mov
subb
mov
cld
ret
cli
add
in
inc
ret
push
jbe
jo
arpl
aaa
imul
into
and
clc
es
insb
popf
cmp
je
dec
inc
jb
xor
xchg
xchg
or
into
sub
mov
loop
rclb
mov
mov
gs
inc
rorb
push
dec
sub
jmp
jbe
mov
xor
iret
jp,pn
mov
sub
rorb
shll
loope
xor
sub
pushf
push
inc
das
cs
frstor
pop
or
push
std
push
push
push
sub
out
cmp
cltd
add
dec
dec
cmc
xor
pop
mov
sahf
xchg
fcomi
sahf
mov
inc
mov
jnp
cmp
xor
sbb
push
scas
sub
cmp
inc
mov
lcallw
xor
mov
rorl
xchg
mov
sbb
rclb
imul
cmc
jge
xor
push
mov
add
jge
jp
jae
shlb
xchg
mov
cmp
mov
xchg
cld
hlt
mov
mov
hlt
xchg
addr16
pusha
pop
xor
sub
mov
stc
fistpl
mov
adc
out
adcb
fucomip
and
inc
and
xor
jmp
ss
dec
aas
pop
inc
mov
hlt
push
sub
xchg
hlt
sarl
jnp
lcall
and
dec
adcb
push
mov
dec
loope
jns
mov
clc
es
pop
cmp
push
sbb
hlt
das
sub
add
imul
push
push
popa
ret
push
or
cmp
pop
add
sub
imul
mov
or
ficoms
cmp
cmp
divb
nop
fwait
es
sub
push
faddl
push
or
adc
cmp
dec
lret
mov
or
mov
sbb
sbb
ja
sbb
jo
lahf
fisttps
push
lock
pop
inc
xchg
mov
push
pop
sbb
lahf
cmpsl
or
les
xor
cmpl
pop
pop
cmp
or
dec
mov
adc
sub
xor
fnstsw
mov
fisttpll
jge
loopne
xlat
mov
cmp
xchg
sbb
ret
sub
push
shrl
aad
sbb
lea
pop
lock
scas
add
ljmp
inc
out
push
mov
gs
inc
into
inc
mov
popa
mov
sbb
xor
adc
stos
repnz
or
xchg
mov
cmc
enter
imul
fstp
and
std
insb
pop
and
out
xor
lcall
push
shrb
push
inc
inc
inc
add
rcl
dec
mov
pop
add
jge
mov
fcomps
push
push
push
jge
mov
sbb
sbbb
pop
fidivs
push
mov
xchg
or
mov
out
pop
jns
inc
rol
test
push
push
subl
gs
stc
cmp
and
ljmp
xor
test
jb
jae
inc
inc
pop
hlt
jae
std
add
lahf
lret
sub
xchg
shl
in
pop
dec
movsb
pop
pop
mov
das
scas
jnp
cmpsb
test
or
dec
ja
cmpsl
cmc
mov
mov
push
out
sbb
and
test
movsl
out
jb
cmpsl
test
lret
into
hlt
js
adcl
rcrb
lret
and
dec
push
xchg
in
inc
repz
sub
ret
push
rorl
cmp
xchg
scas
out
sbb
fldl
jo
call
std
mov
je
mov
sbb
es
mov
mov
add
adc
ja
enter
jecxz
repnz
outsb
add
out
mov
or
mov
add
pusha
out
mov
lods
push
subl
ror
cmp
mulb
daa
dec
ljmp
and
je
imul
xchg
pop
shl
loop
and
mov
out
jo
sub
xchg
jecxz
loope
cli
decl
inc
inc
adc
ret
push
popf
loop
jno
repz
or
mov
push
xchg
mov
jge
push
xor
js
add
sbb
push
fwait
cmpl
outsb
ret
out
dec
inc
sbb
shll
fsubs
rcrl
mov
test
adc
je
add
ss
fwait
sahf
mov
out
daa
xor
repnz
in
cltd
jp
cmp
aad
jnp
mov
mov
xor
xor
movsl
xchg
lahf
dec
daa
daa
adc
xchg
ss
add
rcrb
dec
repz
mov
push
jmp
sub
lret
mov
fisubrs
adc
and
mov
push
add
mov
stos
ret
cmp
out
push
lods
xchg
mov
pop
push
mov
mov
movsb
leave
arpl
dec
enter
sahf
or
jne
in
rcrb
pop
std
push
call
xor
push
test
mov
dec
cltd
shll
in
inc
in
lcall
adc
xor
jp
test
hlt
test
mov
fidivrs
test
pop
lret
sub
sbb
outsl
inc
cli
hlt
imul
ret
mov
cmpl
jle
add
xchg
inc
mov
je
xchg
je
mov
lea
dec
inc
adc
push
lret
pusha
stos
fwait
jmp
popa
movl
cmp
add
mull
cld
lds
hlt
aam
dec
stos
inc
shrl
jne
mov
lret
cli
cmp
dec
fld
cmp
insb
daa
and
cs
stos
pop
pop
xor
xchg
insb
icebp
sarb
scas
out
xor
pop
std
xor
rcrl
add
jbe,pt
xor
mov
xchg
fisubl
dec
sub
cli
xor
and
repnz
push
inc
pop
pop
xchg
cli
fstpt
xorb
mov
addr16
push
adc
sub
lods
mov
or
xor
mov
sub
ret
icebp
daa
cmpsb
jne
int
sbb
jnp
jl
imul
sahf
test
adc
movsl
sbb
pop
xchg
int3
inc
sub
push
adc
jecxz
dec
pop
ret
js
jne
movsl
lcall
mov
dec
jne
fisttpll
sub
in
insb
call
mov
xchg
and
fistpl
lret
cld
popa
clc
lret
loopne
xchg
inc
jg
inc
je
jp
lcall
aad
and
and
jg
inc
or
stos
pop
ja
inc
and
cmp
cmpsl
xor
insb
push
clc
push
xor
cmp
add
mov
loope
ja
jp
xchg
xor
push
cmpsb
push
stos
aas
int3
mov
bound
xor
out
sub
or
mov
push
and
mov
xchg
sbb
dec
xchg
and
loop
cmc
daa
mov
mov
push
xor
das
fdivs
aam
out
bound
lret
xorl
pop
rcr
stc
rcr
xchg
jne
loop
cld
jge
dec
xchg
sub
in
jne
mov
movl
cmp
test
cmpsl
inc
pop
push
xor
repz
mov
loope
cmp
sub
mov
mov
pushf
stos
jb
inc
pop
jg
and
mov
push
mov
pop
push
shll
mov
popa
fs
cs
js
add
cltd
bound
mov
test
sti
push
pop
mov
xlat
stos
pop
dec
ret
je
add
loope
repnz
insl
fdivs
out
test
xor
or
dec
cmc
dec
xchg
popf
jns
push
dec
cmp
repnz
jne
pop
mov
jle
adc
fists
leave
fmulp
mov
sarb
repnz
mov
js
gs
nop
cmp
sub
call
arpl
pop
fwait
adc
jnp
pop
ret
push
jne
cmp
mov
dec
mov
dec
popa
in
sbb
cmp
mov
jl
daa
mov
and
sbb
add
mov
mov
pop
inc
into
notb
arpl
sub
mov
pop
or
test
sub
lods
cmp
add
js
fisubs
adc
int3
xor
dec
stc
mov
push
icebp
jne
rorb
pop
popl
push
cli
sarb
cmp
shlb
jg
ret
fisubs
mov
loop
jno
adc
shrb
add
dec
add
sahf
adc
stos
popa
inc
push
sbbb
xchg
nop
push
fwait
mov
mov
loop
imul
in
js
mov
mov
push
jecxz
out
inc
cmpb
orl
or
ja
push
loope
shll
fdivs
scas
xchg
dec
cltd
jmp
cmp
cli
pop
mov
cmp
pop
pop
sub
adc
ret
push
shll
sub
jo
dec
fistps
jae
or
pop
imul
mov
xchg
int3
mov
movl
mov
insb
mov
jbe
and
loopne,pt
enter
jg
in
inc
test
out
mov
lret
nop
sti
jl
rolb
ret
repnz
pushl
pop
outsl
dec
hlt
ja
add
mov
adc
push
xor
inc
pop
sub
sub
loope
testb
leave
das
dec
popf
and
mov
int
inc
mov
inc
adc
pop
popf
jp
xchg
sbbb
jl
cmp
xchg
hlt
push
stos
sbb
imull
cmpsl
lock
jns
jge
ficoml
lahf
pop
jo
hlt
orl
xchg
cmc
and
dec
iret
pushf
jmp
icebp
out
popa
lret
sbb
dec
and
in
es
push
sub
cs
int3
or
cld
and
mov
das
adc
mov
mov
or
or
shll
imul
jnp
mov
sbbl
jle,pn
dec
jmp
std
sbb
sbb
cli
and
icebp
enter
jns
cmpsb
jb,pt
jne
icebp
test
mov
adc
jbe
repz
shl
pop
in
shl
aaa
add
jno
xchg
popa
or
add
lods
aas
adc
cs
std
inc
sahf
stos
cmp
sbb
scas
fists
sub
pusha
add
ljmp
push
mov
out
mov
fcmovu
out
inc
loopne
jo
jmp
and
sub
ss
xchg
stc
adc
push
shl
xchg
scas
imul
jb
rolb
lods
lods
sub
pop
jnp
pushf
mov
mov
or
add
pop
idivl
add
in
dec
leave
jne
ja
fs
pop
xchg
imulb
into
adc
cmpsb
mov
fidivs
pop
insb
outsb
in
mov
jns
adc
and
inc
fwait
imulb
inc
cmp
lods
fsubs
pop
push
pop
push
ret
mov
adc
and
mov
enter
dec
in
sbb
ffreep
mov
aas
into
xchg
mov
dec
sbb
int
xchg
push
jae
dec
pop
cltd
push
adc
or
insl
subl
sub
adc
adc
lcall
fldl
iret
mov
cmp
lahf
cmpsb
in
shlb
xchg
js
test
push
cmp
push
add
add
or
xor
mov
jp
sbb
pop
mov
push
cmpsl
and
test
subl
cmpsb
aaa
in
divl
adc
add
je
aam
in
add
mov
or
stos
xor
and
jnp
fs
aam
jle
adc
inc
mov
or
fcmovb
push
xchg
dec
xor
dec
mov
out
push
sbb
mov
cmp
lds
shrb
shlb
sti
lods
xchg
out
daa
jns
insb
aam
sub
js
xor
pop
loopne
push
pop
mov
loope
imulb
inc
shll
mov
lret
mov
xor
mov
mov
adc
ficoml
loopne
mov
lahf
add
jns
xchg
fisttpl
xor
mov
push
mov
std
cltd
movsl
mov
push
insl
jg
xor
mov
sub
push
leave
adc
shrb
jl
dec
hlt
jge
shlb
cld
sub
jno
scas
push
or
movsb
notb
xchg
pop
gs
mov
pop
sbb
dec
enter
sbb
and
push
adc
push
aas
sub
pushf
jo
insb
cmp
or
pushf
sbb
dec
sub
dec
and
xchg
xor
jae
fstl
xchg
or
repnz
out
cli
aad
cmpsb
dec
push
ret
and
mov
add
inc
pop
div
pop
fdiv
ds
jo
fucomp
rclb
adc
ja
inc
sbb
sub
lret
dec
cmc
imull
adc
ss
cmpl
data16
aaa
int3
mov
cmpsb
mulb
out
orl
ror
fabs
aas
lret
out
loop
scas
push
les
mov
outsb
xchg
je
xor
jo
or
and
dec
pop
pop
inc
push
xor
in
xchg
add
cmpsl
cltd
faddl
scas
hlt
jmp
scas
xchg
fstl
in
and
insb
lods
adc
cltd
loopne
stc
sbb
push
mov
icebp
dec
popf
mov
and
inc
xor
imul
mov
aam
add
jno
add
mov
jno
or
add
cmpsl
aas
rclb
leave
shl
pusha
mov
xchg
xchg
lds
sub
push
adc
push
sub
push
mov
inc
iret
pop
sbb
mov
mov
jns
push
out
jl
or
dec
xor
aas
xor
and
std
cmpsb
ljmp
dec
sub
std
aad
ds
loope
xchg
pop
lahf
mov
mov
ja
test
mov
sub
fcompl
shr
addb
lock
add
adc
cmp
mov
movsl
les
xor
sbb
cmpsb
inc
out
std
mov
ret
jb
xchg
ret
fwait
cmc
mov
or
stos
pop
push
jl
sarl
mov
xchg
test
sbb
jmp
lahf
stc
xorb
xchg
jmp
jae
int3
push
adc
xchg
icebp
pop
sub
jge
imul
xor
push
add
nop
add
jp
fs
jb
fistpll
lahf
mov
test
sbb
rclb
leave
rclb
inc
gs
jge
es
sbb
push
dec
jp
jbe
daa
cmp
ds
inc
mov
jmp
push
xlat
arpl
and
adc
movl
mov
pop
mov
gs
mov
mov
fnstenv
or
or
repz
sbb
mov
lods
repnz
mov
das
pop
push
popf
jnp
and
mov
dec
and
fistps
imul
subb
out
rolb
lds
push
push
popa
mov
xchg
mov
cmc
mov
cmpb
mov
ret
pop
jnp
xchg
test
xor
jl
adc
dec
test
sahf
push
data16
movsb
add
insb
inc
movsb
je
add
adc
push
idivb
ret
ja
je
add
adc
xor
in
lock
shrb
fdivrs
lods
ficompl
or
std
loope
push
pusha
dec
pop
lods
push
inc
push
mov
insl
cmp
sub
fnstenv
mov
push
in
jne
daa
jb
sbb
pop
xor
sbb
push
repnz
xchg
push
js
pop
mov
cmc
fdiv
pop
inc
loop
sti
dec
dec
xor
call
mov
fsubs
stos
test
xchg
sbb
fistpll
or
lret
push
mov
mov
div
out
jmp
imul
ljmp
or
push
mov
movsb
pop
cmc
jmp
pop
pushf
popa
mov
mov
int
or
xor
cmpsb
sub
in
mov
cld
xor
mov
scas
testb
lahf
mov
xchg
loope
xchg
jp
out
lock
fimull
sub
push
call
inc
lock
maxps
popf
lods
test
into
or
jne
cmp
dec
rcrb
and
sar
push
cmc
jno
xor
dec
jle
push
xchg
std
sbb
mov
pop
add
add
push
xchg
fcoml
imul
scas
test
mov
ficompl
imulb
push
adc
xchg
mulb
je
mov
or
mov
push
test
movsl
rcrb
lods
sbb
shrl
div
loop
sub
in
pop
jp
adc
insl
sub
adc
insl
addl
adc
xchg
cmp
push
adc
pop
ja
jle
push
xchg
jl
imul
add
mov
loope
mov
stos
push
inc
leave
call
loope
repnz
cmp
jp
imulb
loop
inc
mov
aas
gs
call
lods
sahf
or
out
mov
pop
or
inc
pop
pop
out
jae
pusha
in
loope
dec
push
jns
out
inc
dec
cmovle
scas
lcall
pop
adc
jl
dec
data16
in
repz
pop
xchg
shr
lcall
pop
jle
sub
mov
cwtl
inc
outsb
sub
cmp
fldt
jbe
or
mov
arpl
pop
je
in
push
fisttps
jl
ss
ss
jns
sbbb
jl
mov
pop
mov
mov
sti
cld
xcrypt-ctr
cmpsl
pop
ficoms
jbe
jns
movb
movsb
mov
sub
stos
in
cs
push
popf
mov
xchg
jb
cmpsl
xor
jbe
stos
fmul
ljmp
inc
into
inc
subb
xchg
inc
fidivl
aad
cmp
or
movsl
cmp
cmc
mov
addl
movsb
addr16
popa
mov
stos
jl
int
addr16
add
sub
pop
push
fbld
adc
xor
cmpsb
ss
outsl
pop
roll
and
fldt
aam
cmc
lods
fcoml
stc
or
mov
and
and
add
stos
in
fildl
push
push
sbb
repz
inc
lock
push
out
sub
in
xor
xor
inc
or
sub
shlb
imul
das
jecxz
pop
lret
arpl
or
jp
dec
jge
push
test
dec
ss
test
jns
push
popa
out
inc
adc
scas
icebp
jnp
cltd
inc
iret
lret
mov
mov
hlt
stc
movsl
enter
insb
les
fcmovnu
or
xchg
adc
inc
dec
addb
and
movsb
ret
or
movsb
add
xchg
xor
ljmp
popf
mov
pusha
outsb
aaa
xor
bound
lock
jo
cmp
and
jp
ret
jecxz
loope
xchg
push
ljmp
or
xchg
test
xchg
fiadds
mov
aas
in
push
pop
mov
lcall
adc
pusha
adc
scas
fadd
mov
into
jbe
dec
dec
lods
cmp
or
int3
cmc
nop
inc
js
sub
xchg
inc
loope
repz
stos
xchg
repz
sbb
xlat
fcmovnbe
xor
dec
adc
mov
xor
xor
jne
sbb
xor
clc
pop
shrl
xchg
lods
clc
sbb
lret
out
add
jg
out
push
int3
pop
sbb
jp
leave
pushf
aas
pop
pop
loop
jnp
jnp
loop
push
push
add
pop
ja
mov
js
adc
mov
or
jnp
daa
fwait
cs
push
cld
scas
add
mov
cwtl
popl
into
ret
shl
mov
cwtl
inc
inc
mov
xor
stc
jb
jbe
adc
lds
loope
pop
push
inc
add
pop
cld
lods
rcll
fidivrl
and
adc
dec
mov
or
or
push
push
mov
inc
add
fs
adc
lahf
out
pop
jmp
leave
adc
pop
mov
sbbb
in
das
adc
fistpl
pop
mov
and
ret
sti
bound
sub
insl
push
jp
lahf
xchg
pop
lods
inc
aad
inc
jnp
insl
sbb
cmp
sbb
sub
jmp
jecxz
clc
movsl
mov
and
push
xchg
xlat
movsb
adc
and
inc
addr16
mov
inc
cmc
adc
or
stos
adc
lds
std
push
ficoms
inc
adc
pop
popa
call
into
call
pop
cld
mov
cmp
in
sbb
cmpb
mov
sahf
and
cmpsb
fdiv
int
jmp
loope
sbb
push
push
fildll
add
push
push
std
repz
cwtl
mov
pop
cmpsl
dec
insl
jo
adc
mov
and
rolb
js
ja
orps
pop
fdivs
loop
add
sub
mov
sbb
aaa
dec
or
jp
adc
sbb
mov
ds
pop
and
shrl
shl
adc
adc
push
pop
in
pushf
mov
ret
adc
push
jb
dec
out
testl
mov
sbb
mov
xchg
dec
leave
dec
movsb
iret
adc
test
shl
dec
in
shrl
mov
sahf
test
hlt
push
imul
sub
mov
scas
je
sahf
sub
xchg
pop
inc
pop
mov
jbe
push
mov
fdivp
jge
lods
mov
arpl
xchg
insl
shll
push
mov
cmp
push
shrb
nop
lret
hlt
popl
mov
jno
js
test
jge
orb
imull
stos
and
inc
sbb
cmc
dec
movsb
sbb
pop
inc
adc
cmpsl
and
fldenv
loopne
cwtl
fwait
pusha
nop
movsl
decl
fneni(8087
sub
cmp
jnp
fildll
push
pop
sar
leave
and
adc
mov
cmpsb
gs
and
ret
je
or
clc
minps
dec
pop
cmp
aam
pop
sub
test
out
rorl
adc
les
push
pop
iret
xchg
js
sbb
inc
cmp
and
mov
popl
aam
adc
sub
lcall
lret
pop
jne
add
pop
mov
in
bound
sub
sbb
mov
and
stos
push
scas
mov
lds
xorb
inc
out
lds
fbld
inc
jo
mov
sarb
xchg
test
pop
cmp
mov
cmp
mov
cmp
cmp
or
add
jo
sahf
mov
loope
mov
dec
and
jns
daa
cmp
fdivrl
test
repnz
cmpsl
out
cmp
popa
jne
pushf
cmp
popf
ret
sbb
ret
sub
out
test
dec
add
cmpsl
movsb
dec
leave
xor
arpl
and
in
cmp
rorl
hlt
addr16
add
je
ljmp
ljmp
out
jmp
pop
sbb
into
cmp
xchg
sub
std
jl
or
dec
xchg
sysret
push
xchg
mov
mov
xor
lds
fucomi
fbstp
and
test
cwtl
push
xchg
fcmove
ss
xor
mov
jle
aas
fisttpl
mov
adc
ja
mov
clc
pusha
lcall
stos
stos
add
push
xchg
ss
iret
inc
xchg
lea
std
pop
sub
jmp
popa
notb
jb
or
shlb
dec
cmc
or
mov
mov
dec
shl
daa
mov
jmp
dec
xchg
adc
aaa
ss
jge
and
cwtl
aam
pushf
adc
cmp
mov
ss
sbb
jl
xor
inc
ja
in
fs
sti
out
sbb
test
pop
mov
cmp
jle
aad
jnp
jns
pop
inc
lock
xor
ljmp
lods
imul
loop
call
in
sbb
jecxz
push
into
xor
and
xlat
adc
cmp
xor
ret
xchg
jb
fucomp
out
fldl
xchg
fstps
jmp
ljmp
add
xchg
test
mov
das
mov
jmp
gs
or
sbb
fists
sub
inc
dec
adc
xchg
lea
add
sub
mov
lcall
push
decl
pop
xchg
leave
test
mov
add
mov
ds
in
sub
int
mov
fistpll
add
lock
jns
std
test
xcrypt-ctr
cmpsl
pop
jecxz
jge
aas
xor
jb
push
pop
cmp
pop
sbb
cwtl
shl
or
ds
dec
push
repz
mov
jp
out
sarb
dec
add
xchg
sub
fadds
lods
in
mov
movntq
cmp
push
clc
loopne
inc
mov
lds
je
and
pop
jg
ret
sti
ficompl
lret
sub
rorb
pusha
cld
inc
call
inc
xchg
and
sbb
test
mov
bound
test
mov
nop
sub
movsb
mov
xchg
js
bnd
dec
lcall
mov
lahf
pop
aas
sarb
add
jae
ja
stos
test
lahf
jp
xchg
icebp
fwait
into
sub
aam
popa
cmpsb
sbb
add
sub
dec
xchg
push
sti
xchg
inc
sbb
mov
divb
jg
mov
xchg
mov
lret
test
out
add
jno
pop
push
xor
in
inc
pusha
add
dec
inc
sahf
sarl
add
lret
jns
into
mov
clc
test
pop
mov
inc
xor
xor
sbb
mov
sbb
pop
sub
jo
hlt
xor
mov
lock
rorl
pop
bound
out
xchg
insb
dec
aas
push
push
loop
or
mov
in
lcall
jge
fidivrl
cli
pop
inc
jbe
bound
test
ret
test
adc
push
shlb
sub
xor
or
mov
es
rcrl
sbb
fists
cmp
sub
sub
add
rcrl
aas
and
hlt
xchg
mov
xchg
in
cld
sahf
pop
mov
jle
dec
mov
xchg
sti
inc
mov
push
xor
call
jmp
xor
mov
sub
dec
jns
mov
negb
scas
hlt
sub
xlat
jecxz
insl
mov
push
mov
notl
jle
push
dec
test
iret
mov
pop
adc
fmul
xchg
bound
movsb
fldl
dec
ja
enter
clc
repz
mov
or
inc
mov
outsl
sub
push
pop
ret
sub
std
xchg
mov
lret
jb
cmp
mov
aas
dec
jae
push
cmpsb
xchg
cmp
or
aaa
icebp
sti
cld
data16
xchg
adc
push
inc
xchg
dec
outsl
xchg
jl
fwait
mov
sahf
push
lds
into
sub
inc
sub
call
enter
lcall
add
dec
in
dec
je
hlt
mov
adc
mov
mov
pusha
stos
pop
or
cltd
rep
jno
in
cmpsb
inc
aad
add
and
mov
imul
jmp
inc
jmp
loopne
sub
jl
ret
pop
adc
pop
and
pop
and
and
mov
adc
add
repz
hlt
insl
mov
mov
sbbb
orb
dec
adc
adc
in
cmp
push
ret
hlt
insb
pop
hlt
andl
mov
ss
mov
je
lcall
pop
jg
sbb
xchg
jg
xlat
test
fistps
fcoms
push
pop
leave
xlat
aam
xlat
dec
inc
fmuls
cs
out
in
mov
in
pop
out
mov
cmpsb
sub
cmpsl
dec
imul
imul
sbb
jge
ss
inc
aas
scas
mov
scas
mov
outsl
push
sarb
sahf
imulb
or
xor
jo
mov
call
xchg
and
adc
push
test
xlat
cmc
sbb
cvttps2pi
jl
jae
sub
aad
repz
xchg
mov
mov
push
out
inc
sti
pop
jnp
pop
aad
pop
aad
mov
adc
sub
add
mov
in
pop
lods
pop
pop
lods
or
clc
or
inc
xchg
ds
xchg
rorb
rol
outsl
pop
ret
pop
jo
shlb
mov
inc
cld
pop
inc
mov
xchg
pop
or
or
inc
xor
or
or
or
loop
out
mov
jecxz
scas
sbb
xchg
cltd
in
cltd
lcall
xchg
mov
sub
push
sub
push
push
pop
xchg
pop
pop
mov
pop
mov
xorl
leave
fwait
mov
push
fcmove
push
jmp
push
jmp
jne
scas
cmpxchg
lock
lock
xor
das
add
dec
add
inc
mov
ljmp
jmp
inc
jmp
pop
jmp
jl
sub
jl
pop
xchg
xchg
fwait
pop
pop
and
and
and
xor
repz
repz
rep
add
insl
mov
outsb
mov
jp
filds
ljmp
cmp
cmp
sbb
in
inc
in
hlt
jmp
hlt
andl
xorl
xor
jae
mov
xor
sub
add
add
xor
add
dec
push
add
pusha
push
add
add
add
dec
push
add
pusha
push
add
add
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
add
dec
outsl
popa
fs
imul
