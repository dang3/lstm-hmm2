sub
jge
and
dec
pop
push
in
cld
loope
mov
pop
call
inc
cmp
adc
rcrb
call
cli
pop
or
movsl
sub
icebp
in
data16
enter
xor
dec
pop
loope
mov
adc
sub
push
faddl
andl
stos
sti
vpaddw
inc
hlt
pusha
pushf
test
pop
imul
lods
out
popa
notb
arpl
mov
outsl
cmc
nop
mov
mov
lods
pop
es
jno
sti
int3
xlat
imul
dec
loop
push
gs
push
xchg
mov
scas
mov
jecxz
xlat
or
gs
iret
sbb
loop
sub
hlt
adc
sahf
fwait
pop
sbb
out
movsb
fimuls
cmp
jmp
sarb
or
jmp
test
jno
and
add
push
mov
test
decl
and
repnz
aad
data16
jle
jle
xchg
cltd
in
test
ss
pop
adc
mov
or
stos
add
adc
mov
or
out
xor
mov
pop
cmpsb
or
mov
cmc
out
and
mov
cmc
loope
out
adc
mov
cmc
in
out
or
dec
or
adc
in
fcomps
lret
mov
add
sbb
into
sbb
mov
inc
loopne
shll
aas
aad
add
lds
cmc
clc
repnz
cmp
leave
es
cld
sub
ljmp
imul
pop
pop
inc
std
add
mov
cmp
adc
cmc
dec
incl
cmp
inc
adc
sar
sbb
fsubr
push
or
pop
or
xor
push
out
xor
sub
adc
addl
inc
jecxz
dec
inc
jecxz
jbe
sbb
or
rorb
mov
outsb
aaa
inc
lahf
sbb
cmp
push
fisttpl
pop
aad
xchg
out
jg
adc
jg
mov
push
leave
jmp
or
sbb
or
add
pop
jp
icebp
incb
js
push
xor
fxtract
push
adc
sub
mov
mov
scas
push
or
pop
mov
adc
clc
flds
out
sbb
adc
daa
arpl
sub
lahf
mov
sbb
mov
sub
sbb
jmp
in
or
cwtl
imul
jmp
and
sbb
push
repnz
push
lcall
push
idiv
add
sub
mov
push
pop
pushf
add
lahf
xor
cmp
xchg
push
scas
mov
inc
or
sub
adc
adc
sub
xor
jnp
pop
pop
loop
xchg
in
in
cmp
sti
cmp
clc
movsb
inc
stc
push
mov
cmp
xchg
sarb
dec
jecxz
xchg
int
cmp
mov
pop
in
sub
xchg
mov
inc
mov
xchg
sbb
sahf
mov
jecxz
or
or
in
rcrl
gs
jne
xlat
ljmp
in
cmc
xor
movsb
pop
into
pop
pop
clc
repz
mov
pop
xchg
jl
in
idiv
jp
push
out
xor
cmp
push
shr
xor
add
jbe
xchg
cs
cmp
rolb
jns
dec
ret
or
outsb
cmp
add
pop
xchg
in
enter
jge
in
inc
lods
inc
into
testl
mov
fstl
mov
fcoms
lret
pop
mov
fimull
lods
addr16
stos
jmp
jns
out
sbb
popa
std
and
dec
aas
push
dec
fwait
cmpsl
sbb
aas
lock
jo
popl
addr16
cmp
cmc
stos
pop
pop
jmp
add
das
add
icebp
cmp
adc
xor
cwtl
aam
mov
push
inc
cmp
push
mov
sbb
dec
repnz
ja
mov
movsl
inc
mov
jbe
dec
in
xor
hlt
push
imul
scas
jns
dec
push
xchg
push
cmpsl
fwait
xchg
lret
nop
out
cmp
mov
les
jmp
jns
ja
divb
pop
in
pop
shl
in
cli
sub
loop
xchg
ljmp
xor
clc
sbb
push
jmp
jle
stc
and
ret
or
jp
loopne
or
sbb
fcomps
xchg
xor
pop
hlt
addr16
dec
js
add
mov
fstl
or
outsl
adc
dec
dec
nop
adc
out
mov
sub
dec
mov
sar
imul
hlt
nop
mov
jmp
ja
sbb
or
pop
daa
mov
pop
in
sbb
xlat
mov
das
cmp
hlt
adc
in
add
adc
int3
orl
pop
cmp
inc
mov
sbb
lods
push
inc
fisttpl
xchg
sbb
pop
cmp
and
daa
jnp
popf
push
loopne
adc
inc
add
pop
xchg
iret
insl
outsl
je
sbb
aaa
xchg
push
stos
in
pop
dec
mov
inc
mov
bound
xchg
iret
testb
addr16
fcmovnb
pop
ja
jo
xor
jg
repnz
mov
mov
ss
testb
jecxz
push
mov
std
adc
popl
lret
jae
repnz
add
sub
inc
shl
daa
jae
addr16
pop
cs
std
in
cli
or
inc
rcll
cmc
and
add
add
sbb
pop
jp
pop
adc
xor
mov
stos
aad
add
outsl
jae
cmp
push
lahf
pop
decb
lods
cmpl
test
mov
idiv
dec
add
call
pop
sub
jnp
xor
out
cld
xor
push
ret
scas
dec
inc
das
or
inc
hlt
cli
cmp
fdivrs
jecxz
cmpsb
xchg
push
std
adc
ljmp
mov
or
or
adc
rclb
sbb
xlat
push
inc
and
lds
lret
pop
repnz
jecxz
mov
cmp
fisttpll
arpl
mov
ds
push
mov
imul
sarl
push
bound
std
push
dec
adc
ljmp
push
inc
clc
daa
sar
adc
mov
bsf
push
xor
pop
daa
test
into
js
out
jmp
pop
mov
adcl
and
addr16
cmc
ret
or
push
xor
rcr
and
xchg
push
and
inc
mov
fwait
sub
mov
fwait
test
pop
dec
fcoms
jne
or
notb
ficompl
jmp
push
loopne
adc
dec
mov
adc
dec
aaa
insl
push
pop
in
xor
jb
aaa
stos
inc
hlt
xchg
xchg
xorb
or
ret
sub
pop
pop
jecxz,pt
das
cmp
cmc
sbb
cmc
jp
push
mov
lret
mov
imull
addl
pop
add
inc
or
lea
shlb
push
and
adc
lock
sbb
int
mov
cmpsl
inc
jg
testb
enter
rorb
nop
xchg
mov
jmp
imul
jns
adc
ds
fstl
in
adc
xor
bound
mov
mull
dec
jbe
mov
outsl
push
adc
jns
filds
aas
or
bound
pop
push
push
push
adc
mov
out
or
and
in
sbb
xchg
fucomi
pop
push
dec
insl
sbb
cmp
out
inc
jecxz
aam
aaa
jo
fwait
and
sti
rorl
aaa
xor
mov
ret
test
xlat
inc
adc
daa
xchg
cmpsl
jecxz
ds
adc
imul
push
daa
jne
test
add
pop
push
sub
in
pop
add
daa
cmc
jle
out
dec
push
cmc
rorb
repnz
out
pop
fwait
lret
mov
ja
les
repz
decb
mov
sarl
faddl
add
pop
clc
adc
push
ss
imul
push
jecxz
adc
inc
frndint
push
dec
adc
pop
mov
int
push
test
push
and
dec
and
out
xor
popa
xchg
bndstx
sub
and
cmpsl
sub
jo
repnz
pop
add
adc
fcmovne
into
jns
pop
in
dec
iret
es
aaa
aaa
xlat
or
lods
xchg
je
dec
repz
pop
divb
push
push
stos
adc
push
add
push
jnp
pop
insb
add
fwait
xor
fwait
insl
sub
sbb
movsb
lcall
idivl
jecxz
in
mov
inc
sbb
repz
mov
scas
inc
xchg
cmovns
push
outsl
pop
lret
aad
dec
addl
lret
cmp
arpl
add
aas
jne
mov
push
mov
mov
add
in
adc
inc
into
out
mov
push
jae
lahf
pop
adc
mov
imul
sub
mov
jno
sub
aad
and
sbb
or
add
jp
jecxz
push
pop
jp
sub
or
mov
mov
cmpl
inc
popf
cmp
xchg
lret
addr16
inc
dec
mov
jbe
jecxz
push
sub
inc
inc
cmpsb
lock
stos
cmp
lcall
test
add
out
fucompp
iret
and
cmp
sub
add
std
sbb
jno
push
test
out
sub
repz
scas
je
mull
and
xchg
mov
sbb
xchg
pop
test
fs
mov
push
lods
test
and
test
loopne
add
imul
push
rolb
push
cmp
inc
lret
xor
mov
stc
mov
sub
sub
ss
jo
xor
mov
mov
add
sub
sub
push
sbb
cltd
addr16
jle
cmc
mov
adc
shrl
cmpsb
pop
fstp
sub
cwtl
in
fstps
cmpsl
cmp
inc
lret
push
lods
mov
sub
pop
shrb
push
pop
pop
fwait
cmpsl
push
repz
iret
insl
adc
sub
js
adc
xor
sub
dec
lret
andb
lods
jmp
mov
push
in
movsl
jno
sbb
cmp
sub
mov
mov
inc
sti
jl
xchg
sbb
rcrb
popa
xor
jmp
mov
in
movsb
imul
mov
stos
test
xor
sub
pop
vpsrlq
dec
test
jno
or
cmp
out
adc
xlat
std
mov
pushl
insb
jae
loop
xor
or
gs
xor
imul
mov
jbe
movsl
fcoml
push
movsb
push
jge
int
push
ret
pop
pusha
ss
push
hlt
mov
push
sti
imul
pop
out
test
decl
inc
and
or
daa
or
adc
jp
xchg
inc
sbb
aam
fstps
fsubp
pop
lret
repnz
stos
mov
add
aas
fsubs
cmp
pop
sub
and
push
add
out
or
aad
stc
lods
iret
mov
adc
iret
clc
test
nop
enter
call
clc
and
xchg
sbbb
stc
ljmp
pop
dec
inc
sub
pop
test
scas
xor
add
in
sub
cmp
ja
test
mov
jne
cs
add
sub
inc
fsubl
cs
mov
fstpl
xchg
jge
push
add
into
hlt
mov
pop
add
cs
push
jne
cs
inc
hlt
iret
add
addr16
inc
sub
push
sub
daa
and
dec
out
dec
cli
pop
mov
or
sub
sbb
sub
sub
sti
push
push
negl
jmp
ret
lcall
mov
push
test
pop
cmp
out
pop
push
cmpsl
push
mov
sbb
enter
fstpl
mov
aas
push
out
jp
dec
sbb
or
out
jne
sbb
jae
pop
repnz
xor
repnz
pop
out
jnp
mov
testb
dec
cmc
call
mov
lcall
cmp
or
xor
inc
pop
jb
hlt
or
in
inc
dec
sub
jnp
pop
hlt
je
sbb
pop
pop
jnp
xor
xor
jo
inc
adc
pop
push
daa
cmp
jecxz
loop
jmp
std
imul
cmp
and
arpl
mov
sti
jp
sti
dec
arpl
mov
jb
jle
pop
xor
adc
push
rorl
fbld
cmpsl
jg
icebp
cmovae
fisubrl
jnp
xor
or
fistpl
pop
popa
mov
add
adc
js
test
ja
push
jmp
cmp
ss
jmp
enter
inc
stos
in
sub
pop
mov
adc
or
scas
and
jge
xchg
mov
add
mov
sub
jo
sbb
xchg
or
int3
inc
data16
daa
imul
sub
or
cmpb
push
cs
stos
fwait
sbbl
pop
xor
das
jno
aad
ficoms
adc
push
inc
sbb
outsl
mov
dec
pop
mov
out
int
jb
push
adc
inc
mov
and
gs
scas
gs
ljmp
movsb
imull
cmp
inc
and
and
xchg
sub
add
je
clc
insl
adc
lods
or
pop
test
repnz
push
xor
sahf
xchg
push
push
sbb
xlat
adc
bound
lods
sub
ret
pop
inc
inc
arpl
jg
mov
sbb
fistl
jb
push
movb
lock
sub
jno
mov
outsl
insb
add
pop
lea
fisubrs
fdivrl
fld1
call
cs
dec
enter
xchg
arpl
dec
fucomi
dec
pop
cmp
mov
add
fsubs
fistl
gs
repz
in
mov
adc
add
jne
daa
inc
jecxz
fistpl
dec
sti
neg
cmp
arpl
mov
jecxz
fimuls
adc
mov
fsubr
add
out
and
je
test
std
xchg
push
cli
sub
fisubl
outsb
push
sbb
insl
mov
pop
inc
sbb
jl
clc
leave
les
insb
mov
xchg
lahf
and
in
in
fdivrl
fwait
xor
cmp
lcall
movl
popa
dec
sti
hlt
cltd
mov
into
sub
sub
shl
ficomps
mov
adc
outsb
sub
cmp
xor
cld
lock
push
pop
mov
mov
jo
cmp
test
inc
shl
dec
mov
jmp
push
into
and
inc
outsb
fiaddl
push
pop
out
cmp
leave
int3
and
mov
cmp
cmc
movsb
mov
fisubs
in
sbb
hlt
cmp
call
lret
or
fldt
xor
and
std
shll
clc
subl
xchg
sbb
ret
push
inc
xor
mov
mov
call
push
push
mov
fisubrl
or
out
cmp
arpl
aad
dec
pop
das
mov
test
stc
push
xor
fbstp
mov
add
dec
cmp
xor
and
sub
mov
mov
loop
das
fst
enter
jbe
int
xchg
outsb
lcall
subb
clc
push
sbb
adc
dec
idivb
jecxz
in
xchg
aas
jl
push
mov
mov
ret
mov
aad
xchg
sub
insl
orb
lea
jmp
ja
mov
add
bound
jns
cmpsb
out
rol
mov
js,pt
fistpl
inc
mov
pop
and
xchg
ret
push
cmp
jg
pop
es
ljmp
in
add
pop
ds
daa
not
pop
ds
xchg
sub
daa
sub
in
lret
push
push
adc
xlat
clc
cmp
in
adc
loope
and
fsubrs
jno
insb
mov
push
js
pop
movzwl
ss
lods
pop
or
adcb
lea
push
sbb
sub
adc
in
clc
mov
stos
sub
ljmp
insb
rorb
orb
frstor
popf
or
ljmp
adc
cmpsl
cmp
adc
lcall
dec
mov
lcall
mov
jecxz
pop
and
pop
mov
in
mov
sbb
pop
dec
cmp
sti
adc
cmp
rorb
and
js
daa
sbb
push
jns
jle
xchg
mov
push
mov
adc
cmp
xor
daa
mov
jnp
dec
inc
jbe
lcall
or
xor
mov
cwtl
fwait
push
fucomi
xchg
push
out
adc
xor
add
scas
out
push
and
fldenv
mov
dec
imul
add
or
repnz
lock
sbb
daa
adc
outsb
mov
call
and
mov
fcomi
shll
daa
push
xor
xor
push
sahf
popf
adc
iret
xlat
push
outsl
dec
inc
inc
pop
in
sti
xchg
sbb
insb
adc
dec
subl
incl
push
test
push
adc
movsb
jb
out
repnz
fbstp
sbb
jae
andl
jecxz
jp
xchg
pop
cltd
dec
lret
sub
jl
mov
mov
dec
adc
jno
push
push
pop
outsb
fwait
sbb
or
mov
aad
inc
hlt
negl
jne
add
jbe
inc
or
sub
scas
xor
outsb
arpl
cmp
push
pop
lds
shrb
xchg
xor
jp
xchg
rolb
loop
pop
mov
bndstx
dec
add
jecxz
sub
xor
cmc
cmp
arpl
mov
pop
sbb
dec
xor
daa
out
jp
sub
and
cmp
insb
es
xchg
lret
into
xor
adc
jno
xchg
xor
mov
fisubrl
pop
add
fnstcw
mov
adc
out
pusha
adc
das
mov
push
les
dec
fisttpl
faddl
daa
testl
pop
decl
lea
xchg
mov
dec
ret
and
movzbl
pop
popf
aas
je
out
push
stos
call
ljmp
or
aaa
jae
and
mov
cmp
lret
pop
or
or
into
sub
das
ja
mov
cmp
mov
pop
mull
inc
std
inc
sub
inc
daa
cli
jbe
cmc
rclb
jb
out
mov
and
and
sbb
push
mov
and
pop
fistps
jl
orb
out
repz
imul
mov
pop
outsl
in
sbb
jae
sbb
add
jns
add
pusha
mov
cli
or
jae
xchg
repz
push
or
cltd
sub
mov
add
jg
sub
data16
and
or
xchg
xchg
sahf
fstps
add
pushl
sub
daa
je
cmp
mov
mov
std
aaa
adc
dec
xlat
mov
xor
and
ja
mov
cmp
inc
fisttps
adc
dec
cmc
jbe
icebp
mulb
jp
jecxz
push
mov
or
ljmp
imul
fmull
adc
xchg
dec
pop
jb
and
jecxz
sbb
and
push
in
xor
mov
cvtdq2ps
imul
das
dec
push
int
dec
ja
clc
jg
adc
mov
std
insl
sbb
inc
add
and
inc
sbb
xchg
cwtl
out
in
mov
andb
jmp
clc
and
mov
mov
pop
mov
cltd
clc
mov
fs
xor
mov
fidivs
push
and
sub
xchg
lock
pop
jne
addr16
cmp
inc
xor
push
fidivs
mov
push
push
ljmp
sbb
arpl
cmp
addl
icebp
push
cmp
enter
sub
adc
xor
xor
daa
inc
xlat
ret
xchg
pop
aad
out
stc
mov
jmp
addb
lods
jmp
mov
add
fdiv
sbb
pop
pop
mov
sub
xchg
push
fisubl
ret
mov
mov
test
fdiv
and
ds
or
mov
mov
add
daa
mov
jnp
mov
pop
or
sti
in
push
pop
ss
das
push
mov
fcoml
fadds
push
std
adc
push
nop
add
add
incl
inc
jl
cmp
pop
movsl
sub
sbb
sbb
mov
sbb
rorl
fdivrl
cmc
adc
sahf
jae
or
call
pop
lret
pop
xor
mov
adc
jae
lock
shlb
aam
ljmp
sti
scas
ret
pop
aaa
sbb
jns
and
push
and
or
fsubrl
cld
pop
push
mov
and
shll
add
lahf
nop
loopne
lods
outsl
rolb
cmc
adc
div
xchg
cmc
pop
or
shrb
je
pusha
insb
jl
push
ret
sbb
loop
pop
sbb
outsb
cmp
mov
push
pop
in
sbb
add
sub
repnz
insl
sub
int3
imul
arpl
dec
loope
mov
push
pop
jnp
push
sub
lock
push
inc
cmp
std
pop
or
push
sti
in
and
dec
fcomip
jp
sarb
push
xor
mov
jmp
sbbb
orb
scas
dec
jecxz
inc
decb
sub
enter
pop
in
push
cld
notl
push
lcall
aad
movsl
int
and
xlat
mov
stos
in
dec
adc
test
sub
fisttpl
mov
sahf
push
out
push
push
jne
jno
inc
xchg
fcmovnu
cmp
js
dec
add
and
cmpl
nop
into
dec
xchg
or
push
jne
dec
testl
fildl
jge
cli
pushf
mov
mov
inc
paddusb
sub
nop
cli
sbb
sub
inc
mov
jo
sub
add
or
jnp
jb
fimuls
les
cmp
fs
pop
jp
sbb
cs
push
inc
fldt
jne
cs
cmc
xchg
cs
fsts
jno
mov
pop
xor
xor
outsl
and
push
gs
repnz
jno
cmp
mov
jmp
xchg
and
popf
enter
add
pop
mov
xchg
jl
nop
mov
call
pusha
cmpl
push
push
add
or
cmp
ljmp
in
sti
mov
inc
and
es
sti
pop
jne
into
fwait
sub
jge
adc
mov
inc
push
push
push
ja
shll
incl
dec
mov
adc
adc
fists
fucomip
adc
arpl
ja
mov
in
dec
icebp
add
fsubs
push
xor
sar
mov
and
in
add
fildl
or
adc
jg
pop
in
push
mov
mov
jnp
adc
xchg
sbb
popa
push
push
int3
jp
or
add
repz
adc
pop
loop
add
in
insb
imul
movsb
sbb
lret
call
nop
pop
pop
arpl
fstpl
xchg
sub
fdivl
stc
lods
add
sbb
cs
push
xor
push
and
xor
mov
pop
cmp
sub
dec
in
add
shl
xor
mov
icebp
xchg
xchg
mov
int3
pop
daa
jecxz
adc
dec
jmp
xor
inc
movsb
in
or
sub
inc
aam
push
push
adc
jp
pop
dec
lahf
sub
jbe
cmp
in
push
sub
pop
jecxz
xor
insb
adc
push
icebp
dec
stos
test
getsec
jecxz
outsl
push
aam
mov
insl
call
xor
leave
pop
jmp
xor
daa
xor
mov
adc
pop
mov
je
lea
clc
fisttpll
cmp
aad
fisttps
sub
sub
fcomip
xchg
mov
std
xor
push
xor
cmp
mov
inc
daa
xlat
jl
pop
call
pop
idivl
mov
testb
in
shll
push
and
and
fmulp
xchg
add
inc
pop
cld
mov
outsb
outsl
stc
push
das
dec
imul
lods
andb
stos
push
push
mov
push
push
push
jb
les
mov
cmp
sub
xor
daa
or
pop
mov
sbb
sub
push
mov
inc
or
lods
shll
hlt
pop
test
data16
rcl
dec
outsl
pop
outsl
pop
stos
add
cmp
mov
push
daa
adcl
loopne
mov
cmc
jl
xchg
mov
pop
pop
daa
out
pop
ds
xor
fists
aad
das
jne
cld
call
sub
out
daa
aaa
daa
add
testb
hlt
test
jl
push
ja
mov
addr16
add
mov
pop
xchg
add
out
mov
adc
mov
xchg
es
jne
mov
and
subl
mov
sbb
daa
cltd
clc
add
fbld
pop
jne
imul
dec
xchg
or
xchg
dec
es
cmpsl
dec
mov
mov
fmul
negl
cltd
sub
mov
stos
daa
jo
jnp
pop
fs
sahf
fmuls
xchg
lahf
in
ss
push
notb
push
cli
insl
xor
dec
push
mov
cmp
lea
imul
sbb
pop
push
pop
in
adc
push
ja
scas
or
mov
aam
dec
insl
pop
lods
icebp
jb
adc
insl
adc
xchg
push
daa
xchg
or
sub
xor
jo
iret
add
ja
xor
scas
cmc
and
dec
imul
je
mov
or
and
pop
mov
ror
dec
jno
ret
pop
stos
lock
sub
jmp
push
daa
mov
sub
adc
fdivp
fimuls
imul
adc
loope
pop
jecxz
dec
and
sub
push
or
jmp
dec
incl
lock
sub
add
in
jns
rep
push
jno,pn
es
sti
stos
mov
lcall
cmp
pop
mov
mov
adc
popa
xchg
push
add
sub
pop
call
dec
dec
add
cmp
imul
push
test
movsl
adc
imul
stos
mov
and
add
fildl
call
cmc
jp
lock
out
and
fstps
dec
in
fistl
cmp
das
popf
cmc
push
out
sti
mov
dec
dec
sti
data16
sub
testl
push
sarl
xor
jmp
and
fiadds
mov
push
icebp
inc
mov
inc
adc
daa
xor
jb
jnp
cli
jne
daa
pop
into
dec
imul
sti
adc
fstps
mov
adc
out
in
sti
xor
mov
sbb
jae
hlt
leave
dec
cmp
out
out
lds
divb
sub
add
hlt
popf
mov
inc
dec
jbe
loop
pop
xor
push
int
mov
push
fdivr
pop
mov
cmp
mov
dec
lods
or
lea
cmp
pop
or
sbb
in
in
mov
add
addr16
push
pop
pop
or
xchg
mov
outsl
lahf
testb
out
sub
inc
repnz
mov
xor
outsl
jnp
les
pop
push
loope
nop
mov
sub
arpl
data16
fisttpl
jae
les
scas
xor
fnsave
mov
aaa
mov
cmc
cmp
fldl
push
or
add
loop
sub
mov
jmp
or
jno
jo
out
fcmovu
add
jl
das
stos
ljmp
cmc
adc
js
push
sbb
pop
dec
inc
mov
cmc
loopne
pop
add
or
arpl
jl
outsb
in
stos
js
out
dec
sbb
stc
stos
daa
fdivs
push
repz
lods
inc
or
inc
sbb
jmp
shl
xchg
leave
fwait
mov
and
fisubs
dec
sub
or
daa
sbb
pusha
cltd
adc
shr
inc
mov
sbb
clc
inc
gs
pop
loope
test
movl
into
fistpl
dec
sbb
pop
push
js
jnp
test
cli
int3
push
xchg
pusha
xchg
std
sub
repnz
pop
mov
jo
sub
hlt
xchg
adc
jle
lret
add
icebp
mov
inc
push
push
loopne
arpl
arpl
int3
push
pop
xchg
aaa
cmp
cmp
dec
xor
inc
mov
xchg
and
cmp
mov
push
fisubrs
es
out
or
aas
xor
ret
pop
cmp
pop
sbb
call
jno
out
inc
ss
imul
adc
add
push
or
dec
inc
shl
loope
or
mov
fistps
jge
imul
fiadds
add
lret
xchg
rclb
mov
call
hlt
dec
cmpsl
xor
or
sub
loopne
dec
xchg
test
jbe
repnz
dec
ja
jl
push
fmul
addb
adc
lret
call
sub
mov
int3
lcall
mov
dec
sbb
lahf
mov
cmpsb
mov
clc
leave
mov
arpl
nop
push
lea
cmpsb
imul
xchg
test
xor
mov
jg
push
lret
dec
out
mov
sub
mov
cltd
jg
adc
xchg
clc
hlt
cmp
push
xbegin
fsts
nop
lds
cmpsl
jb
pop
das
pop
push
sub
push
aas
fistpl
sub
mov
pop
pop
mov
cwtl
into
pmaddwd
jns
mov
iret
dec
adc
imul
pushf
pop
or
xlat
and
lcall
addr16
gs
mov
sarb
push
arpl
cmc
add
mov
dec
notl
adc
add
out
fisubrl
test
or
jne
jae
add
and
mov
pop
adcl
jmp
lret
adc
scas
sbb
mov
gs
out
pop
mov
daa
mov
cmp
test
sub
lea
xchg
inc
xor
push
hlt
outsb
push
add
fwait
lret
pop
or
adc
cld
dec
mov
imul
aam
adc
jmp
mov
xor
leave
dec
ss
outsl
lret
cli
outsl
popf
lea
ljmp
out
jle
call
dec
lods
lret
xchg
sbb
add
adc
mov
aaa
fwait
std
cli
cmc
mov
repnz
push
loop
pop
xchg
and
loopne
sti
inc
cmpsb
pusha
jge
jecxz
mov
dec
ss
xor
mov
sub
popa
popf
adc
fcomps
mov
adc
fisubl
mov
add
pop
fistpl
fimuls
jne
arpl
aam
and
pop
jmp
and
fidivl
ss
pop
or
cli
and
in
cmp
out
fsts
scas
adc
xlat
or
xlat
sub
mov
fs
xchg
mov
in
fcoml
adc
jns
inc
add
fsub
push
mov
push
js
outsl
mov
daa
add
xchg
mov
fadds
jmp
adc
adc
aaa
fcmovu
cltd
jae
adc
int
in
xlat
pop
daa
lock
loopne
jns
lea
addr16
or
je
inc
dec
pop
fsubrl
mov
repnz
rol
pop
lret
sub
andl
mov
cltd
jp
sub
out
or
pop
dec
or
inc
xor
xor
xchg
cmp
adc
and
lret
test
ret
mov
xor
dec
sbb
sti
jge
xor
into
push
cmp
sub
pusha
into
xor
add
adc
fwait
adc
bnd
insl
cli
mov
mov
push
inc
pop
icebp
decl
inc
add
daa
stos
add
xchg
mov
and
mov
adc
sti
push
xor
pop
or
ficompl
push
flds
stos
xchg
xchg
gs
mov
cmp
add
fcompl
add
inc
daa
daa
stc
mov
stc
lcall
xchg
push
mov
lcall
sbb
push
or
pop
jns
outsb
add
sub
push
js
or
push
push
mov
dec
cmp
jo
inc
scas
in
cli
pop
sbbb
mov
sbb
push
sub
arpl
ret
int
pop
rcll
or
repnz
sbb
scas
cmp
sub
lret
pop
xchg
fcompl
and
inc
mov
into
add
popa
mov
lcall
loop
cltd
aad
mov
push
out
jno
rep
adc
stos
dec
sbb
aam
adc
mov
mov
in
pop
dec
mov
jbe
and
push
sahf
out
dec
xlat
popa
xor
test
push
mov
jp
sub
jg
test
push
mov
in
jne
mov
dec
outsb
subl
xor
mov
mov
mov
hlt
call
xchg
dec
pop
inc
lods
in
gs
stos
outsb
icebp
int3
cmpsl
bound
aad
ja
pushf
jo
add
mov
or
dec
jne
es
sarl
push
inc
jl
mov
pop
lcall
pop
add
into
aaa
cwtl
jle
mov
mov
in
iret
stc
push
out
cmc
push
push
mulb
ja
cmp
inc
cmpb
push
sub
fisttps
in
orb
fnsave
or
and
and
xor
out
lret
leave
pop
sbb
dec
pop
outsb
and
mov
sarl
mov
dec
int3
add
in
inc
aaa
stc
loop
xor
push
std
or
int
inc
mov
iret
sub
xchg
lcall
ja
cmp
add
sbb
pop
sar
int
pop
loop
jmp
push
out
mov
orl
xchg
insb
add
jecxz
dec
mov
in
data16
shr
mov
shrb
lods
dec
ja
int
out
cmp
or
cmp
mov
repnz
cmp
outsl
insb
adc
ja
sub
and
dec
inc
ret
nop
jne
out
enter
mov
and
sbb
aad
scas
cmp
ds
jbe
int3
ds
nop
pop
in
hlt
leave
out
sti
fbld
cmp
push
insl
jmp
pop
and
loope
call
fmul
fistps
sub
inc
sbb
pop
jae
sub
add
push
push
call
push
jne
xor
xchg
pop
mov
cld
xchg
stos
mov
loope
jae
mov
cmp
add
sub
cmp
pop
cmpb
push
sub
in
sub
adc
mov
pop
cmpsl
int
sbb
test
andl
hlt
das
test
mov
fimuls
int
repz
push
test
jne
popa
sub
aad
aam
pusha
sbb
out
jecxz
push
jns
call
mov
or
cs
sub
pop
test
test
xchg
fadd
clc
cmpl
cmp
dec
loope
or
mov
das
push
inc
xor
jbe
decl
xor
cmpsb
jmp
aad
in
dec
sub
xchg
xorb
loop
addr16
loope
stos
pop
pop
mov
ja
sarb
int
popl
inc
jmp
lock
xchg
lcall
lock
in
cmp
pop
mov
mov
cmp
and
inc
push
xchg
push
cmp
int
xchg
xor
and
dec
pop
xchg
mov
cmpsl
xor
cli
int3
push
dec
cmp
jp
jmp
rol
outsl
pop
xor
stc
fldt
fdivl
sub
pop
xlat
int3
pslld
lock
cmp
nop
jno
out
les
mov
dec
icebp
mov
inc
pop
inc
out
push
mov
fadds
dec
mov
mov
sti
or
fdivr
pop
and
or
and
jmp
iret
sub
push
lock
pop
bnd
push
mov
in
divb
mov
push
call
cmp
or
test
lea
sti
imul
xor
adc
jle
sub
pop
push
fwait
cmp
shlb
cwtl
jb
aaa
pop
out
xchg
mov
inc
das
sbb
jp
mov
mov
test
mov
sub
lock
ljmp
xchg
jo
lahf
pop
mov
xor
push
push
int
mov
lret
mov
inc
dec
loop
pop
orl
leave
dec
jg
lock
mov
aad
aam
icebp
cmp
loopne
scas
clc
mov
mov
outsl
imul
test
jg
jecxz
sti
mov
sub
ljmp
inc
cltd
cld
out
lock
mov
popf
sti
dec
pop
fsubp
sbb
mov
mov
ja
xchg
pop
adc
jecxz
mov
sub
add
dec
fdivrp
int
inc
lds
mov
dec
incl
adc
and
inc
inc
add
cmp
hlt
add
pop
cld
out
iret
push
inc
call
xlat
push
push
ficoms
lds
or
xor
push
ja
push
sub
arpl
jp
pop
jns
push
inc
xchg
pop
push
fsubl
std
sahf
mov
mov
fistpl
and
inc
cmpsb
mov
adc
pushf
push
outsb
repnz
jp
imul
cmpsb
shr
xchg
dec
js
mov
lcall
push
scas
adc
ret
xor
adcb
ljmp
push
lcall
lret
cmp
ret
pushf
mov
push
and
mov
data16
das
mov
xchg
and
dec
popf
daa
mov
fwait
cmp
inc
incb
in
aas
xor
mov
sbb
dec
push
dec
lcall
and
lds
dec
cld
lods
push
addb
pop
rorb
sti
lods
push
daa
xor
mov
jnp
and
adcb
pop
mov
clc
jp
pop
loopne
addr16
js
push
popf
adc
mov
ds
and
imul
push
test
stos
dec
fwait
test
push
adc
cli
mov
xchg
pop
xor
mov
pop
es
fisubrl
push
sbbb
pop
adc
insb
rorl
mov
pop
sub
sbb
enter
cmp
push
lahf
and
fists
mov
jbe
xor
mov
mov
ja
repnz
mov
fwait
adc
adc
pop
push
jl
and
xchg
sub
cs
repnz
adc
ljmp
ret
call
shlb
movsb
push
in
cmpl
mulb
adc
jecxz
ja
lea
lahf
push
aaa
inc
push
cwtl
fnstcw
shlb
outsl
pop
sub
in
inc
adc
das
ds
sbb
push
in
mov
lret
cmp
dec
inc
pmuludq
mov
add
decb
add
dec
push
rorb
lahf
ds
mov
test
and
jmp
js
test
and
scas
mov
push
int
out
jae
loopne
jmp
jmp
ja
aaa
xchg
hlt
mov
pop
hlt
in
popa
inc
xchg
lods
sti
iret
divb
cmp
shrl
pop
sti
and
sub
cmpsl
xor
lods
dec
mov
mov
dec
xor
inc
push
loope
jp
mov
inc
scas
jnp
je
jecxz
scas
repz
jmp
shlb
inc
and
lcall
movsb
add
stos
icebp
mov
out
adc
arpl
sbb
jg
xchg
push
daa
hlt
loop
jne
mov
daa
mov
stos
dec
xor
outsl
divb
jae
mov
stos
hlt
jl
or
xchg
add
fdivp
jecxz
pop
cltd
aaa
je
adc
arpl
in
ret
xchg
test
add
fiadds
or
mov
lds
mov
adc
lret
jnp
sub
mov
mov
es
out
outsl
ds
adc
imul
daa
pushf
pop
sti
or
xchg
decb
fwait
stc
ss
vmwrite
add
add
fucomi
ja
cltd
lods
pop
dec
cltd
pop
daa
mov
les
adc
popf
lods
jns
pop
pop
test
push
push
push
orl
lock
jnp
sub
sub
aaa
stos
and
es
mov
cmp
sub
sub
idiv
adc
jne
enter
jecxz
sbb
negl
adc
mov
dec
adc
inc
push
add
out
sahf
mov
fidivrl
sub
jnp
mov
pop
std
mov
dec
push
fcompl
in
or
pop
inc
mov
jg
adc
leave
mov
das
fiaddl
in
jecxz
fs
call
jge
out
mov
inc
pop
aad
out
dec
xor
sbb
lahf
inc
jecxz
sub
add
repz
notl
mov
xor
adc
test
pop
stc
cmp
push
jnp
in
sti
sbb
int3
sahf
sub
loope
push
fldl
inc
test
jb
ljmp
jecxz
sahf
call
or
mov
clc
xchg
mov
ret
sahf
ret
jb
out
pop
je
pop
push
xchg
negb
add
lcall
repz
pop
adc
paddusw
out
out
jmp
sub
jge
ljmp
or
in
dec
sbb
cmc
data16
jno
jl
call
mov
push
aad
dec
dec
rorl
aam
jo
popf
jnp,pn
lock
add
stc
pop
sahf
sub
mov
mov
xchg
inc
ds
aaa
aaa
incl
dec
cli
stc
stos
test
outsl
pop
inc
sub
and
sub
and
sbb
xor
inc
pop
mov
out
push
insb
xchg
mov
sub
mov
inc
pop
ds
divb
fistpll
cmp
mov
imul
pop
cli
xlat
int3
loopne
outsl
cmp
and
cltd
mov
clc
xchg
inc
or
imul
mov
jl
outsl
dec
dec
push
ss
pop
or
into
adc
fwait
stc
out
xchg
mov
daa
dec
push
adc
xchg
jecxz
imul
sbb
jp
cltd
je
lcall
shlb
mov
push
dec
gs
addr16
mov
sub
out
xor
out
ret
and
inc
cmp
movsb
adc
bound
pop
cmp
mov
inc
push
mov
dec
push
or
mov
loope
xlat
lods
push
stc
fcmovnu
fistps
in
xor
in
sbb
pop
popa
add
add
adc
outsb
divl
pop
xor
and
pop
or
int3
scas
push
pop
fnstsw
push
incb
fucomi
adc
push
idivl
push
sahf
jl
xor
mov
cs
jp
shll
dec
filds
dec
lock
int3
sub
and
add
sub
add
stc
out
push
cmp
mov
sub
ss
xor
out
cs
pop
sbb
daa
push
add
pop
pop
adc
adc
out
scas
jnp
adc
lcall
test
cmp
mov
movd
ret
or
sub
cmpsl
cmp
cmp
add
setbe
mov
or
add
cmp
cmp
neg
fs
xor
xor
mov
punpckhbw
jp
and
into
add
adc
sbb
xor
fcoml
dec
clc
push
mov
dec
jmp
inc
sbb
push
sbb
push
sub
pop
cli
jle
daa
mov
and
mov
sbb
or
mov
idivb
xchg
xchg
fdivrp
aad
ljmp
xchg
in
mov
ficoms
inc
pop
arpl
iret
daa
sbb
cs
sti
xor
enter
or
pop
jae
testb
cmp
stc
adc
mov
pop
add
daa
fxtract
xchg
mov
pusha
push
mov
dec
ds
and
push
and
sub
sub
push
dec
outsb
out
or
dec
in
lods
inc
ljmp
pop
push
pop
test
jne
sub
or
push
xor
xchg
xchg
ss
pop
in
cltd
mov
push
lret
sbbl
adc
jecxz
movsb
cmp
cld
dec
mov
inc
adc
daa
jecxz
jnp
sub
adc
in
push
dec
add
push
popaw
daa
addr16
ret
shl
cld
outsb
mov
adc
push
xchg
push
daa
popf
lret
push
xchg
in
push
lahf
add
pop
popa
pop
mov
cmp
js
testb
sbb
sub
jo
mov
and
push
jl
loope
popf
inc
cld
sub
stos
add
fiadds
ficoml
xchg
std
jle
cmpsl
push
movsl
push
push
rcll
outsb
lock
cmpsl
and
push
push
mov
test
std
xchg
or
jecxz
rcl
repz
jle
aad
mov
in
cmp
pop
mov
xor
clc
cmpsl
and
daa
in
cltd
jae
xchg
xor
ja
adc
xchg
dec
xor
inc
jmp
cmc
test
jno
jecxz
pop
dec
pushl
in
movsl
outsb
pop
je
std
push
cmp
push
hlt
jl
insb
and
inc
stc
data16
pushf
inc
movsl
stos
jmp
mov
sbb
scas
gs
or
shl
cmc
jg
cli
mov
jg
and
ja
pop
cmp
sbb
cmp
cwtl
mov
pop
cmpsl
dec
and
cmp
ja
and
adc
sub
ja
sahf
push
add
dec
fs
sbb
sahf
cli
popa
sbb
xor
xchg
enter
xchg
ljmp
into
repz
xor
sub
daa
div
and
in
imul
aad
adc
mov
cmc
adc
mov
sti
ret
jmp
sub
divps
or
repz
push
pop
jbe
jo
xor
gs
dec
repz
sbb
and
cltd
cmc
sbb
sti
cmp
pop
add
test
xor
ss
fistl
es
sarl
fwait
push
mov
jge
mov
pop
cmp
hlt
test
mov
mov
call
or
out
lcall
xor
cmc
invd
pop
test
orb
js
sbb
shrl
leave
fnstsw
movsb
push
jb
daa
push
dec
insl
and
xchg
sub
pop
testl
cmp
mov
lods
sub
ret
repz
xor
jge
out
add
xchg
pop
in
pop
jo
faddp
dec
mov
dec
loop
pop
dec
shlb
jge
mov
jo
mov
int
push
lea
es
pop
fimuls
rorl
ds
jo
aaa
mov
es
cmpsl
out
or
xor
mov
je
pop
sbb
cmp
jo
in
mov
bound
les
add
mov
mov
fsub
jecxz
cltd
into
xor
add
in
xchg
mov
jg
aad
inc
inc
push
cmpsb
xchg
or
gs
jp
addl
imul
les
rcll
mov
sub
pop
aas
and
int
jmp
arpl
lods
or
or
addl
mov
je
pop
pop
cmp
pop
cltd
push
repz
adcb
push
cmpl
lea
sub
pop
xchg
sbb
pusha
fsubp
mov
dec
out
jbe
add
ret
cmc
adc
cs
pop
mov
jne
pop
ret
sbb
jo
and
fbld
inc
push
inc
mov
pop
push
out
adc
insl
insb
add
ljmp
repz
or
repnz
insb
inc
dec
inc
xor
jg
aaa
test
jecxz
hlt
test
repz
xor
les
shr
mov
pop
les
pusha
xchg
mov
into
pop
push
push
pop
ret
adc
xlat
push
sub
cmc
jae
pop
movsb
test
js
push
adc
loope
je
fildl
push
out
pop
subb
pop
jo
test
add
test
mov
sbb
out
fwait
arpl
call
fisubl
sub
out
cmc
out
loope
testb
push
sti
arpl
push
ret
imul
pop
jecxz
jge
mov
or
test
xchg
push
cmp
and
clc
fcoml
inc
ja
mov
pop
sbb
clc
jge
cltd
bound
or
xchg
add
jle
sbb
inc
sbb
jno
cmp
jmp
sahf
cltd
push
pop
inc
dec
stc
sti
dec
fnsave
notl
pop
arpl
imul
mov
sbb
pop
fisubrl
pop
add
jg
outsl
push
lods
rorb
aad
pop
notb
in
jle
jb
pop
xchg
mov
xchg
jp
cmp
aad
sub
and
arpl
lods
cmp
sti
mov
sbb
ljmp
jae
mov
arpl
xor
jg
movsl
or
pop
hlt
dec
xchg
rcll
daa
stc
arpl
pop
rcll
cli
cmpsl
cmpsl
adc
sbb
pop
test
xlat
add
callw
outsl
xchg
dec
adcl
push
mov
xor
and
test
loope
in
xchg
and
mov
sbb
fsubrs
push
adc
jmp
paddsw
roll
or
int3
jo
out
cld
sub
add
pushf
or
mov
add
stos
std
andl
add
jae
outsb
mov
test
push
add
cld
je
repz
or
pop
into
imul
adc
repnz
setb
pop
mov
ja
ss
xchg
xor
stc
dec
jns
fistl
les
mov
xor
out
test
jmp
mov
fdivrl
cmp
dec
aas
sub
jnp
call
aad
cmp
xchg
pop
jbe
iret
xchg
adc
mov
dec
xchg
shl
sbb
jmp
sbb
jnp
pop
ljmp
data16
push
hlt
outsb
movsb
movsb
aad
fstl
xor
mov
inc
test
gs
fs
push
xor
sbb
inc
call
jmp
int3
dec
imulb
push
sahf
sbb
dec
xchg
push
jns
dec
out
ja
in
fdivrl
out
in
test
cmp
stos
ds
fidivrs
xor
js
adc
movsb
xchg
adc
in
dec
jecxz
mov
sti
adc
sahf
add
and
ljmp
js
movsl
bound
popa
gs
push
jb
jns
or
sbb
fcomp
xchg
pop
dec
or
aad
mov
fistl
cmp
jnp
lods
add
pop
not
mov
mov
jg
outsl
or
mov
lret
cmp
adc
xor
cmpsl
mov
out
push
push
jl
pop
je
cld
jns
cmp
mov
ja
pop
std
mov
popa
out
enter
fwait
and
pop
xchg
fdiv
icebp
ds
jno
and
lock
gs
xlat
popa
pop
lds
and
jle
xchg
xchg
or
jnp
xor
in
adc
decl
pop
cmpb
jbe
scas
mov
pusha
loop
mov
ja
mov
incb
or
add
arpl
xor
xor
pop
xchg
ja
mov
movsl
out
push
fwait
pmulhuw
mov
cs
xchg
xchg
loope
and
repnz
shlb
rcrb
out
xchg
int
or
pop
repnz
jp
mov
adc
inc
sub
xor
jecxz
xor
sub
je
mov
sti
cmc
adc
hlt
add
dec
pop
fisttps
stos
mov
rcll
adc
stos
jg
adc
cmpsb
dec
imul
sub
jg
pop
sbb
jae,pn
xor
sub
js
aaa
adc
out
jno
out
adc
pop
jb
ss
push
sbb
cmp
push
popa
sbb
cmpsb
in
add
jl
sti
xchg
lret
jne
adc
xchg
clc
das
mov
imul
adc
rorb
cltd
pop
fs
out
cmc
imul
xchg
icebp
jb
dec
imull
jns
hlt
imul
and
cmp
shll
inc
xchg
cmp
fldt
cltd
cs
call
sub
ficoml
pop
push
pop
dec
mov
ss
enter
rcrb
sbb
jo
shll
stc
push
fwait
mov
adc
cmp
or
js
repz
mov
arpl
sti
mov
call
fdivp
insb
push
lcall
int3
or
xchg
addr16
add
add
je
fidivs
loopne
xchg
test
int3
or
cmc
jo
adc
stc
test
fsubl
or
rcrl
mov
or
sti
icebp
lret
inc
cmpsl
rcll
hlt
pop
inc
or
test
fisubs
bound
movsl
fcmovb
mov
icebp
mov
sbb
inc
mov
push
or
lods
push
mov
outsl
xlat
test
adc
pop
dec
and
sbb
out
out
cmpl
mov
mov
jecxz
mov
fs
fwait
shlb
sub
insl
pop
pusha
in
cmp
cmpb
in
pop
mov
out
pop
stc
cmp
aad
aad
iret
cmpb
sbb
and
pop
movsl
addr16
dec
add
or
push
aam
sbb
out
mov
add
xchg
cmp
pop
cs
pop
cmp
mov
not
push
inc
xorl
mov
fiadds
aad
fidivrs
jl
xor
cmp
or
mov
push
in
jb
jnp
or
cli
lea
mov
je
int3
adc
push
xor
aaa
ret
mov
mov
repz
jbe
xor
shrb
pop
nop
bound
mov
inc
mov
jle
add
mov
fwait
xchg
push
call
rclb
push
mov
jbe
add
pop
sub
pop
cmp
shr
mov
ret
sub
int3
loope
mov
push
test
out
jae
push
outsl
mov
cmpsb
mov
xchg
in
daa
out
jl
xlat
push
jns
aaa
mov
mov
popw
outsb
out
in
hlt
xchg
xlat
mov
cmpsl
pop
repz
mov
push
rclb
mov
and
sbb
es
sub
sahf
xchg
lret
divb
leave
pop
xchg
fstl
icebp
add
clc
out
dec
sub
jmp
push
daa
or
jmp
outsl
mov
xorb
into
and
add
stos
cwtl
imul
mov
jno
pop
sub
push
sbb
mov
mov
pop
xchg
and
cmp
ds
or
cmp
sub
jg
aaa
clc
add
lcall
lods
sub
xchg
pop
imul
dec
repnz
aam
daa
fmull
add
jmp
pop
outsl
pop
pop
mov
or
addr16
fs
push
outsl
ja
scas
test
cwtl
adc
sub
out
hlt
xor
adc
mov
in
pop
mov
jae
scas
out
ja
rcrb
jno
xor
cltd
daa
adc
or
xchg
adc
dec
ss
xchg
jns
je
adc
pop
lret
rcll
jnp
repnz
jae
xchg
or
xor
dec
iret
dec
sbb
ret
inc
std
jle
int3
sbb
jno
lret
clc
or
fbstp
xchg
sahf
and
je
add
jp
mov
mov
add
xchg
push
cmpsl
push
pop
shrl
sub
push
movsl
in
bound
imul
push
leave
leave
cli
cs
adc
sbb
sub
shrl
cmp
jnp
ficoms
repnz
test
push
lea
inc
lods
and
mov
ja
push
test
test
mov
jns
lock
mov
jmp
repnz
mull
insb
fwait
clc
cmp
pop
test
je
cltd
pop
cld
je
in
xor
jl
enter
ret
dec
xor
dec
sub
inc
add
aad
mov
es
mov
mov
xchg
fistl
pusha
sbbb
ljmp
ljmp
mov
or
test
in
cmpsb
jge
xor
mov
push
and
shll
into
pop
cmp
lds
push
push
popf
gs
roll
sarl
call
jae
inc
scas
and
sbb
fcomps
das
and
inc
xor
push
xchg
int3
sub
adc
pop
repnz
aad
sbb
and
and
mov
cmpsb
inc
sti
xor
add
stos
dec
pusha
ljmp
lea
lea
or
ss
jne
mov
js
push
rcrl
jno
push
xchg
and
insl
pop
mov
xchg
cmp
pop
mov
data16
xchg
lock
pushf
adc
test
push
mov
push
testl
push
push
pop
pop
adc
sbb
cmp
push
mov
das
nop
pop
mov
mov
mov
sbb
push
rcl
lret
insb
jmp
jp
xchg
scas
loop
push
in
xchg
add
stc
mov
loop
iret
stos
mov
fisttpl
or
jb
push
fs
lahf
sbb
test
sub
in
and
mov
or
inc
in
test
pop
mov
mov
pop
jp
imul
mov
sbb
inc
hlt
repz
in
in
or
les
daa
mov
mov
mov
bound
rorb
mov
sbbl
add
ret
push
sbb
scas
ret
mov
loope
mov
dec
jb
in
cmp
inc
mov
iret
lret
pop
ficoms
pop
arpl
jno
dec
gs
cmp
inc
mov
add
shll
sbb
push
mov
popa
xchg
faddl
loope
fmull
int
pop
pop
cmpl
adc
push
jp
es
addr16
rcrb
jl
daa
add
mov
push
mov
icebp
data16
movsl
daa
lret
jbe
es
xchg
rcrl
jnp
test
out
sbb
in
cmpl
mov
add
inc
pop
sub
sub
mov
or
xor
aam
inc
aam
adc
imul
sub
cmp
jno
xchg
adc
push
aaa
rorb
xor
repz
sub
es
adc
cmp
fs
jo
inc
sub
aaa
jl
fucomi
adc
fidivs
add
cld
ficoml
jnp
push
cmp
sbb
je
ljmp
pop
and
fcoms
sbb
test
js
pop
sub
lock
or
sbb
adc
pop
mov
jl
sub
add
sbb
sbb
pop
pop
mov
xchg
and
gs
and
jno
and
imul
aaa
addr16
jo
insb
and
imul
jmp
test
lods
pusha
hlt
fidivs
lret
push
into
gs
inc
cmpsl
inc
sub
test
adc
neg
mov
gs
shll
inc
cli
mov
mov
dec
lret
gs
iret
fisttpll
je
fidivl
pusha
je
jl
pop
dec
ficoms
aaa
fsubl
add
outsb
mov
cmpsl
sub
cmpsb
pusha
sbb
add
pop
and
xor
push
or
fwait
push
jae
outsb
pop
je
inc
sbb
ret
cltd
pop
in
dec
shrl
outsl
out
pop
mov
sub
xchg
push
sbb
dec
in
cmp
sub
das
cmp
mov
movsl
xor
bnd
xchg
vpmacsswd
arpl
cs
aas
add
or
cs
or
int3
pushf
xchg
add
icebp
cmc
test
mov
in
dec
imul
jnp
fisubs
imul
mov
iret
data16
cmp
nop
and
cmp
inc
dec
dec
sbb
addr16
repnz
jmp
add
hlt
stc
std
mov
sbb
invd
adc
mov
add
dec
xchg
addr16
push
clc
aaa
pop
sbb
shlb
or
pusha
mov
popf
loope
fwait
add
inc
push
repz
inc
testl
mov
shll
pop
loopw
jae
jecxz
les
cmpsb
jmp
pop
sar
pop
sti
pop
push
dec
push
adc
xchg
push
je
adc
sub
into
insb
cmp
or
in
addr16
dec
stc
push
cmp
mov
inc
out
ja
jp
sub
jge
mov
pop
out
mov
pop
pop
pop
fnsave
cld
imul
scas
addr16
sub
or
adc
outsb
push
or
xor
lret
push
and
hlt
and
dec
loopne
xchg
xor
fmull
push
in
scas
stos
pusha
dec
jns
repnz
imul
nop
aam
mov
push
dec
sahf
push
cmc
push
outsb
aas
adc
aaa
rol
xchg
fiadds
aaa
cmp
pop
lods
jnp
or
out
outsb
mov
outsl
mov
cmp
xor
pop
cmp
jl
cltd
push
pop
sub
syscall
call
adc
jmp
hlt
out
rolb
pop
pop
cmp
sbbl
and
add
ljmp
rolb
mov
xchg
out
notb
out
jbe
mov
pusha
cmp
push
push
rorl
insl
leave
sbbl
pusha
ror
xlat
lds
jb
popa
pushf
sub
adcb
add
lods
push
mov
outsb
in
movsb
fildll
push
mov
dec
decl
jmp
sub
and
pop
pop
out
xchg
out
pop
lds
faddl
xor
icebp
mov
pop
sub
dec
jp
xchg
aad
cmp
mov
pop
hlt
sbb
iret
dec
ljmp
sbb
push
or
and
pop
fcmovu
inc
fmulp
add
push
inc
ljmp
cmpb
push
hlt
push
pop
jle
cmc
sub
mov
jmp
inc
jg
sub
ficomps
adc
insl
fstpt
rol
in
push
out
sub
pop
and
push
add
pop
sbb
ja
or
xchg
mov
ret
jp
push
pusha
sti
aam
in
out
push
inc
adc
popf
push
stos
jg
leave
jae
adc
cli
stos
push
pop
pop
and
mov
mov
jg
rorl
cli
pop
aas
xchg
xor
push
jbe
sahf
icebp
enter
out
stc
push
mov
jmp
aaa
int3
jb
inc
xchg
and
mov
xchg
popf
out
out
xchg
jle
add
outsl
and
lods
push
inc
or
pusha
scas
or
div
frstor
cmpb
push
idiv
jl
pop
mov
mov
cmp
mov
addr16
testb
lret
pushf
sahf
push
add
inc
fwait
sub
sbb
aaa
mov
aam
loopne
popf
and
dec
std
stc
pushw
std
in
pusha
inc
mov
mov
pop
lcall
pop
xor
pop
and
pop
lret
mov
and
jge
aaa
das
xor
pop
dec
aad
sub
push
jg
or
add
pop
fmul
out
jp
adc
mov
das
xchg
in
outsb
jle
pop
mov
nop
dec
mov
xor
xchg
jae
or
mov
repz
pusha
fcmovb
jno
pop
mov
ret
ljmp
int
mov
aas
mov
pop
mov
arpl
fwait
adcb
aaa
push
push
lds
in
ret
insl
stos
xor
shll
repnz
arpl
out
lcall
adc
js
jmp
ljmp
cltd
out
dec
add
xor
lahf
jmp
jge
sub
add
push
ret
les
imul
pop
adc
adc
or
jp
jne
cwtl
inc
pop
jg
fistl
decl
dec
mov
dec
jns
add
out
adcb
fwait
sub
mov
lds
sub
adc
dec
mov
adc
jecxz
lcall
jb
call
sub
out
pop
xchg
mov
or
pop
das
push
popl
ljmp
in
dec
mov
jg
and
mov
dec
out
jmp
scas
outsl
and
dec
xchg
jge
movsb
mov
jmp
or
mov
dec
fistl
sbb
jg
sub
fwait
enter
or
xchg
fs
cmp
aam
stc
or
ljmp
repnz
push
adc
rorb
inc
jo
inc
scas
jae
lock
push
jmp
daa
lahf
out
cmp
stos
adc
fs
into
dec
cmp
lret
in
cmpsl
jmp
mov
clc
fcoml
pop
movsb
mov
arpl
add
rcll
xchg
mul
gs
ror
sbb
jae
jl
xchg
inc
lock
incl
xor
ud0
repnz
push
addr16
pop
std
imul
pop
orb
push
enter
daa
and
rolb
push
int
dec
popa
dec
leave
daa
test
or
pop
out
ret
xchg
jl
fnstsw
xor
push
sbb
fwait
sub
mov
pop
mov
inc
and
sbb
cmp
jecxz
test
sbb
inc
movsb
cmp
pop
shlb
and
out
es
cmpsl
adc
or
or
or
sahf
stc
adc
add
cmpb
jle
test
lcall
enter
mov
hlt
dec
addb
cmpb
pop
dec
cmp
fcompp
dec
inc
inc
test
or
cmp
fimuls
dec
inc
jcxz
outsb
and
pop
dec
jle
sbb
or
inc
xchg
in
fdivp
xchg
jnp
sub
push
gs
pushf
inc
adc
outsl
dec
mov
mov
jp
repz
mov
push
xorl
pop
dec
sbb
xchg
popa
push
leave
jb
mov
mov
aas
in
fmul
js
lcall
jo
jne
out
pop
les
fimuls
push
out
dec
inc
test
add
adc
or
push
ljmp
std
jp
or
cmpsb
jecxz
aas
or
imulb
dec
and
sbb
pop
jnp
adc
mov
clc
push
or
xchg
insl
and
stos
mov
or
jno
cmp
inc
leave
mov
lahf
push
sbb
insl
sbb
or
push
cmp
pop
or
cmp
mov
lret
out
shrb
stos
aam
sbb
lret
inc
mov
mov
push
xlat
push
aad
lret
pop
and
daa
jo
testb
dec
ja
daa
in
xor
push
in
inc
push
repnz
jbe
push
mov
push
stc
adc
sti
jg
dec
inc
add
mov
fmul
push
sub
lahf
or
and
ficomps
inc
adc
outsb
jge
test
je
adc
pop
gs
insb
pushf
xchg
xlat
mov
movsb
dec
lret
bound
inc
mov
xor
xor
or
inc
mov
mov
or
cmp
and
sbb
hlt
clc
ljmp
push
dec
cmp
mov
movsb
adc
sbb
icebp
les
pop
das
jnp
sarb
sbb
cmp
dec
fwait
scas
ret
push
push
cmp
out
add
dec
lds
cmp
out
mov
push
adc
pop
jbe
mov
mov
jb
jp
psubq
push
test
xchg
pop
adc
inc
movb
push
lret
sub
or
mov
jne
push
xchg
je
mov
hlt
xor
sub
dec
pop
cmpsl
and
js
push
xchg
push
in
jmp
cmp
lret
cwtl
into
mov
out
cmpsb
imul
xchg
inc
add
inc
addr16
clc
jae
cli
inc
jb
ja
leave
sarb
insb
sub
mov
jmp
jae
int3
xor
xchg
or
or
leave
sub
inc
add
lds
xor
sbb
out
xor
xchg
int
mov
scas
mov
mov
es
cmc
fldenv
ret
fs
pop
fstpl
adc
mov
dec
inc
movsl
pop
or
adc
jnp
leave
jl
add
xchg
int
inc
jo
cmp
cmc
je
adc
sti
xchg
cmpsl
repnz
and
fistpl
cmpsl
dec
mov
mov
outsl
adc
or
add
pop
stos
sub
xchg
jp
adc
addr16
mov
adc
rolb
sbb
jl
dec
or
fistpl
jb
mull
pop
cwtl
repnz
bswap
inc
mov
jecxz
scas
cmc
dec
jl
leave
fidivl
sub
cltd
cmp
mov
push
cmp
dec
jge
push
sub
cmp
sti
ljmp
daa
mov
push
jge
icebp
push
jne
or
fcomps
mov
icebp
push
add
push
lods
pop
lcall
push
outsl
aaa
sub
add
dec
test
jge
xor
das
cmpsb
lahf
push
adc
out
jbe
xor
mov
rcrl
cmc
clc
js
cwtl
setp
sub
mov
insb
or
jb
and
sbb
mov
cmp
inc
out
into
xchg
mov
testl
xor
maskmovq
xchg
mov
add
and
dec
insl
mov
repz
jbe
push
pop
cld
sub
and
xchg
fmuls
sbb
and
stc
push
push
data16
sahf
jo
data16
test
and
sub
lock
popl
jae
fadds
cwtl
cld
xor
popa
pop
pop
hlt
push
ja
pop
notl
jmp
pop
sbb
and
push
add
cwtl
inc
push
bound
add
adc
mov
pop
push
inc
stos
sub
test
lock
iret
mov
mov
fistpl
and
jno
or
sbbb
dec
or
sbb
mov
add
ds
aad
xlat
sub
add
js
push
cmp
xchg
dec
xor
int3
pop
ss
push
xor
push
xor
add
push
daa
adc
jge
fcmovu
scas
test
sub
les
nop
xor
and
pop
xchg
out
mov
das
lea
push
or
mov
xor
hlt
in
imul
lods
lea
pop
loope
lds
adc
sbb
xor
rcrl
jl
pop
lods
mov
cmp
jbe
leave
adc
push
adc
sbb
lahf
xor
lods
inc
sub
or
outsb
add
xchg
out
xor
add
sub
popa
rcrb
pop
out
cmp
in
pop
sub
cmc
adc
nop
mov
test
dec
ljmp
icebp
fsubrl
es
jmp
adc
mov
std
xlat
not
mov
jno
int
mov
add
sub
mov
incl
ljmp
xchg
loopne
jb
adc
dec
loop
or
add
sbb
sbb
mov
or
repz
jp
sbb
in
mov
push
int3
adc
jecxz
and
lea
repz
mov
loope
test
or
iret
pop
lods
push
mov
cs
mov
add
pop
sub
sub
scas
aaa
sub
shl
sbb
jb
push
or
lret
push
stos
push
hlt
es
jp
mov
lret
mov
xchg
or
or
pusha
or
call
adc
pop
sub
icebp
sbb
imul
repnz
jnp
js
pop
repz
pop
xor
ljmp
cltd
mov
call
sub
jno
fcoms
in
fsubl
xchg
dec
lret
imul
repnz
or
mov
jmp
pop
int
insl
div
dec
repnz
jae
and
push
stos
xor
push
fldl
jmp
xor
xor
mov
mov
sbb
sub
or
push
lds
movsb
movsl
xchg
sub
xchg
pop
out
loop
paddusb
jbe
inc
inc
and
pop
jmp
xor
inc
icebp
add
push
jno
sbb
and
sti
jnp
fists
enter
dec
cmp
pop
pop
push
popf
sahf
or
int3
jge
sar
mov
ss
xor
mov
addr16
imul
cmpsl
lods
dec
testb
add
sub
cmp
jl
scas
jne
adcl
scas
js
cld
xor
inc
fwait
pop
push
les
pop
dec
mov
sub
testb
call
add
xchg
sbb
mov
xchg
scas
push
pop
push
inc
jb
aaa
inc
sbb
outsl
jnp
or
xchg
testb
mov
daa
cmpsl
lret
int
or
loop
pusha
out
adc
dec
scas
sub
ret
add
pop
xor
dec
in
gs
iret
jbe
popf
mov
pop
imul
sarl
movsl
adc
hlt
fcmovb
lods
pop
or
addl
sbb
gs
iret
test
or
popf
repz
cmp
repz
sbb
push
mov
mov
aad
lret
xor
cmpsl
jmp
orl
dec
xchg
sti
and
cltd
sub
shrb
xor
xor
xchg
es
sub
adc
jg
sti
sbb
mov
xor
ficoml
out
rolb
xor
iret
add
push
bound
push
mov
inc
hlt
adc
push
addb
pop
stos
sti
fwait
mov
dec
cmp
in
lock
shlb
imul
or
popw
mov
loop
lret
jge
mov
push
cld
testl
stc
pop
jbe
sbb
in
push
cltd
jmp
aaa
aas
imul
fwait
pop
test
sub
pop
insb
jns
cmp
dec
fimuls
xchg
jmp
dec
pop
jbe
or
insl
adc
cmpsb
icebp
lret
xor
inc
sub
mov
xorb
hlt
sub
stos
xchg
aaa
push
jb
sub
negl
dec
jg
sarb
mov
lcall
icebp
ljmp
cmp
jo
out
ret
and
pop
cmpsb
sbb
cmp
pop
in
adc
bound
and
decl
test
pop
cmp
add
fnstsw
sub
mov
scas
mov
je
push
outsb
xchg
shlb
repnz
add
cmp
xchg
push
inc
lcall
cld
inc
dec
daa
mov
xchg
push
sti
dec
inc
inc
and
cmp
xchg
gs
std
addr16
fsubrl
adc
pop
sbb
lock
push
ja
adc
mov
sub
dec
mov
cltd
sub
sbb
xlat
pop
and
fistpl
pop
pop
in
adc
clc
sbb
fcompl
mov
int3
scas
cmc
pop
aas
push
test
in
clc
ds
jns
insb
jmp
or
sti
mov
hlt
dec
pop
cli
mov
daa
jmp
pop
imul
or
adcl
pop
xor
cmpsb
std
fisubrs
paddd
and
xchg
xchg
adc
jecxz
ja
sub
xlat
ja
jmp
fisubrl
cli
sub
or
adc
or
cmp
inc
sub
cmp
icebp
sbb
jecxz
fcmovbe
sbb
and
hlt
mov
pop
pop
push
dec
dec
mov
or
pop
std
mov
out
iret
adc
xchg
dec
fnsave
aas
pop
push
mov
ret
mov
ficomps
and
scas
out
aaa
push
fwait
jmp
sbb
lea
testb
adc
jbe
xor
out
pop
xchg
add
fcompl
icebp
lock
hlt
rcl
out
lock
push
sub
hlt
insb
dec
and
ja
push
aaa
inc
pushf
xor
mov
mov
cwtl
and
xlat
mov
rorb
add
or
push
sbb
sbb
and
lock
cmc
outsl
pop
push
mov
jno
and
xor
ret
add
je
jle
adc
inc
int3
sbb
loopne
std
out
or
dec
test
sbbl
jl
add
and
fldl
mov
out
xor
ret
mov
sbb
fwait
jmp
or
out
inc
fxch
clc
and
insl
not
divl
sbb
movsb
outsb
cld
loopne
mov
push
jns
divl
sbb
dec
inc
jnp
sbb
fcoml
mov
mov
das
mov
sub
test
sub
pusha
mov
adcb
outsb
jb
insl
push
incb
lds
repnz
mov
sub
ss
mov
jb
fs
cmc
sub
push
int
imul
or
je
lock
int
aam
jecxz
xchg
fisubs
hlt
mov
cmp
fdivrl
out
mov
int
lock
rclb
negb
icebp
and
leave
mov
jo
pop
and
pop
es
add
gs
stc
mov
stos
cmp
test
aas
incb
adc
mov
push
lods
jecxz
movsb
daa
inc
cmp
notl
and
sbb
insb
popf
cltd
mov
jo
push
ret
adc
ja,pn
out
mov
push
dec
out
fwait
add
bound
and
adc
jle
hlt
data16
sub
mov
lods
sub
jnp
dec
push
sbb
cld
mov
lock
dec
sub
jmp
ja
aas
imul
and
or
xchg
fcoms
push
pop
dec
mulps
nop
sub
dec
mov
xchg
dec
jbe
nop
sti
adc
xor
scas
pop
sbb
mov
add
dec
add
adc
sbb
jg
testl
xchg
pop
test
mov
push
cmp
mov
lcall
ds
loope
out
js
jbe
push
aad
sbb
hlt
jg
push
cs
pop
fnstcw
fcomi
cmp
xor
xchg
jp
cld
div
cmc
jns
or
cmc
sbb
push
dec
inc
jb
or
into
jbe
in
and
pop
int
inc
lds
cmovle
or
adc
loop
mov
das
jbe
and
pop
dec
inc
xor
mov
outsb
or
add
xchg
or
out
mov
por
mov
xchg
in
mov
icebp
push
nop
outsl
sbb
std
repnz
sub
jge
mov
sti
stc
rorb
icebp
push
mov
pop
mov
addr16
ror
sbb
push
xchg
mov
xchg
cmc
stc
arpl
pusha
jnp
cmpsl
add
cmp
push
lea
lret
fistps
cmp
int
and
out
mov
fs
xchg
pusha
adc
lods
add
push
leave
adc
in
ja
or
shrl
out
mov
sti
cli
out
gs
shlb
mov
dec
cmp
and
adc
dec
mov
push
pusha
pop
and
stos
push
xchg
arpl
push
lock
aas
popa
std
je
lock
test
lods
ja
lret
fucomi
sbb
add
dec
pop
insb
and
pop
cwtl
mov
mov
lods
leave
mov
pop
psubsw
mov
mov
ficompl
outsl
ds
in
aad
lds
mov
lock
mov
jo
imulb
aad
pushf
insl
jecxz
dec
sub
cld
negl
xor
stc
imul
and
sti
lahf
sahf
push
xchg
sub
fcompl
and
stos
loop
dec
test
daa
ret
jp
add
push
lock
leave
cs
loope
std
lods
mov
ficompl
out
repz
scas
or
iret
xlat
test
push
and
push
sub
lret
sub
dec
pop
fs
adc
pop
push
xor
sub
cmp
pushf
mov
xchg
mov
lcall
ret
inc
xor
sub
jecxz
sbb
leave
shlb
scas
adc
inc
pop
icebp
test
jl
fnstcw
arpl
leave
fnstcw
inc
inc
bound
mov
or
cli
xchg
mov
dec
gs
mov
dec
es
sub
jae
add
lea
aaa
out
clc
jbe
fcomps
or
pusha
test
mov
add
adc
cmc
movsl
aam
lods
out
in
xor
stc
push
dec
push
mov
in
pop
mov
push
push
xchg
clc
fdivrl
insb
pop
and
add
push
aad
adc
subps
push
push
gs
pop
in
lahf
dec
push
lds
cs
inc
cmc
jns
iret
imull
dec
add
fmul
gs
mov
mov
inc
ds
imul
push
sub
sbb
mov
adc
adc
adc
aad
mov
in
ret
lds
iret
and
xchg
fstl
cltd
push
out
sbb
add
out
repnz
clc
push
mov
pop
test
dec
int
dec
push
imull
mov
sbb
sub
xchg
add
jo
dec
aam
lea
cltd
or
outsb
xchg
mov
xchg
add
cltd
xchg
testb
pushf
add
adc
pop
pop
dec
shl
xor
in
dec
push
jmp
cmpsl
xor
repz
cmp
xor
cmp
lods
je
adc
and
sti
pop
cmp
pop
add
in
test
popf
xchg
sbb
cmp
cmp
dec
cmp
pop
push
bound
mov
xchg
loope
int3
movaps
mov
stos
aas
ret
ja
lahf
popf
pop
mov
in
js
js
pushf
cmp
fisubs
fcmovne
sub
fildl
mov
inc
pop
cmp
pop
sbb
aaa
pop
cmp
and
hlt
or
cmp
sbb
jecxz
sar
jb
popa
addr16
jb
inc
jnp
mov
dec
pop
inc
xchg
or
icebp
pop
mov
pop
out
lret
push
pop
or
aas
xchg
xchg
cli
fcmovnbe
jp
das
cmp
fwait
add
pop
push
mov
sub
aam
xchg
dec
out
xlat
xorl
mov
aad
arpl
clc
mov
pop
repnz
nop
in
into
jae
ds
adc
push
pop
pop
dec
sahf
xchg
in
cmp
cmp
dec
mov
mov
daa
sbb
cmpsb
test
jecxz
pop
mov
adc
dec
in
dec
outsb
popf
mov
rclb
dec
push
jmp
cmp
filds
adc
imul
or
sarl
jmp
psubw
mov
imul
mov
lods
rcrl
sbb
inc
mov
cmp
push
mov
pop
mov
pop
sar
mov
lock
mov
pop
aad
adc
mov
jecxz
pop
push
add
in
cmp
in
test
mov
push
mov
cmp
sub
rcr
xor
ds
stos
lds
rclb
inc
xchg
jl
ds
sbb
call
nop
jecxz
ja
and
inc
mov
mov
xor
nop
fdivp
mov
icebp
addr16
in
out
sbb
lods
add
dec
cmc
jp
dec
imull
xchg
jg
mov
aaa
xchg
test
pop
jmp
or
sub
in
push
push
sbb
stos
and
lret
in
add
mov
jne
nop
adc
push
movsb
add
pop
inc
inc
stos
xchg
push
test
sub
or
mov
mov
mov
add
mov
jle
adc
ret
aaa
ss
outsb
dec
adc
es
je
jae
jnp
ja
mov
imul
mov
xchg
jge
adc
shlb
in
dec
jo
int3
mov
sbb
xor
cmp
std
jnp
lods
test
lcall
inc
or
icebp
test
imul
sub
in
out
loopne
add
std
dec
aad
add
push
xor
mov
clc
cmp
stos
es
cli
inc
pop
or
xor
movsb
in
push
fs
jle
jnp
xchg
sti
out
cmp
mov
ljmp
push
jmp
mov
and
fistpl
xor
push
sbb
stos
lret
pop
push
lds
jns
mov
xorb
sbb
lds
popf
sub
xor
fsubl
gs
aad
xor
mov
test
xor
hlt
js
std
push
and
dec
jmp
mov
lcall
pop
cmc
dec
loopne
dec
imul
movsl
mov
sub
push
sbb
mov
lock
dec
mov
and
mov
es
cmp
dec
sbb
mov
dec
mov
pop
ret
cld
sub
stos
mov
lahf
sbb
les
sbb
inc
dec
xor
sbb
dec
cmpsb
int
gs
and
mov
pop
lods
int3
test
testb
rorb
and
mov
xchg
mov
xchg
and
test
push
es
cli
and
sbb
jmp
out
incb
add
mov
cmp
and
shlb
push
or
and
mov
inc
cmp
mov
or
cwtl
jb
pop
push
out
cmp
les
test
or
out
jno
push
scas
mov
call
pop
cmpsb
into
pop
mov
dec
adc
add
iret
loop
push
sbb
sti
and
cmp
sub
loope
mov
outsl
and
mov
in
pop
xchg
mov
cmp
ficomps
out
int3
or
daa
jmp
mov
jge
outsb
popl
stos
mov
add
in
aaa
inc
nop
add
mov
jecxz
dec
scas
pop
sub
int3
mov
xchg
cwtl
popf
dec
and
cld
mov
dec
inc
mov
adc
pushf
dec
inc
adc
outsb
sahf
int
fs
mov
cld
call
ja
bound
dec
xor
pop
icebp
jmp
fidivl
loope
sub
lods
nop
or
add
out
mov
fcmovb
sbb
stos
push
icebp
icebp
ss
sub
dec
sub
xor
jnp
jecxz
and
xchg
insl
loope
call
xchg
stc
or
mov
ja
repz
mov
dec
or
leave
test
jmpw
xor
and
shrb
adc
dec
fdivr
shll
and
xchg
ret
insl
jne
mov
icebp
fisttpll
cmp
or
mov
js
push
mov
ud0
rorl
cmpsl
dec
out
jge
xchg
sub
repnz
pop
dec
stos
dec
mov
clc
out
mov
sub
mov
out
push
pop
mov
lahf
negb
pop
js
test
add
scas
cs
jb
add
or
inc
push
inc
outsb
daa
pop
jl
in
pop
mov
cmp
fldt
or
test
in
cmp
push
xor
rol
and
and
cmp
pop
jg
cs
divb
push
in
add
sub
test
sbb
shl
and
mov
data16
xchg
fbld
push
adc
cld
pop
mov
stc
inc
divb
xchg
mov
pop
push
int3
dec
movsb
or
mov
scas
xor
ss
fisttpl
arpl
xchg
hlt
insb
addl
push
push
push
arpl
adc
jecxz
jnp
aaa
or
sub
lcall
sub
mov
scas
in
scas
add
call
mulb
mov
xchg
dec
in
and
scas
xchg
adc
movsb
shlb
pop
sub
icebp
cmp
pop
xor
fisubrs
daa
lret
cmp
inc
cmp
ret
sub
inc
cvtpi2ps
mov
inc
mov
stc
jnp
mov
test
arpl
xorb
hlt
or
sysret
bound
cli
daa
sbbb
jle
mov
adcb
notl
mov
sbb
les
enter
and
sarl
xchg
or
cmpsl
nop
call
cltd
add
stos
shr
roll
mov
push
dec
xor
addr16
sub
sbb
fdivl
out
fnstsw
into
fs
sbb
and
movsb
cmc
xchg
cs
jge
sbb
xor
lods
sub
pop
adc
and
leave
das
popl
dec
cmp
pop
arpl
or
fucomp
daa
outsb
ret
dec
sub
testl
fdivr
loop
or
cmpsl
push
daa
push
movsb
dec
mov
and
insl
fadd
xchg
pop
sub
lret
add
push
pushf
xor
push
sub
mov
mov
fisubrl
test
cmp
mov
mov
fcoml
and
icebp
call
ljmp
push
dec
inc
iret
das
les
and
sbb
imul
in
pop
and
shrb
cmp
ret
es
adc
aas
xchg
push
push
pop
mov
fistpll
xchg
push
xchg
dec
arpl
dec
addb
hlt
insb
dec
rorb
sbb
pop
ret
loop
leave
cs
clc
fidivl
fcoms
aaa
sub
test
cmc
adcl
les
xor
pop
cmp
pop
pusha
addr16
cmpl
push
dec
xlat
pop
not
movsb
jnp
or
pop
cmc
pop
jle
movaps
push
xlat
loop
call
jbe
sub
pusha
incl
cmp
xor
mov
xor
dec
sti
ds
int
or
mov
jne
inc
mov
dec
ds
jge
sbb
out
cmpsb
divb
movsl
das
xchg
push
xchg
pop
mov
repz
xor
mov
jae
push
pop
out
and
in
xchg
or
es
rcll
outsb
dec
ss
or
lods
fisubs
out
leave
dec
gs
pop
pusha
addr16
sar
in
cld
add
dec
jno
or
insl
sub
popa
std
jmp
aaa
cmpxchg
xor
ss
and
pop
addb
sub
push
or
sub
mov
xchg
ss
lcall
and
cmc
in
cwtl
sbb
xor
jo
shlb
and
cmp
sbb
jnp
jg
or
jmp
push
pop
fwait
int3
jl
pop
cmpsb
push
xor
les
int
xlat
ds
fistps
lcall
das
mov
or
add
pop
icebp
mov
dec
mov
jno
cmpsb
xchg
mov
pushf
pop
js
add
cmp
pop
sbb
fistpl
cmp
add
outsb
sub
cltd
int3
inc
add
inc
or
push
pop
pop
or
inc
std
lea
aaa
cmp
dec
ja
in
in
fwait
push
int
sub
gs
inc
sbb
clc
lods
rol
add
test
jbe
hlt
ror
fs
fisubs
cmpsl
popa
xchg
xchg
adc
lea
fsts
inc
dec
arpl
loope
insl
cli
inc
jb
add
add
inc
inc
mov
cmp
int3
popa
sbb
add
popa
pusha
xchg
jecxz
cmp
sbb
adc
mov
adc
xchg
adc
dec
sub
mov
or
loope
jg
jbe
jl
xchg
xor
fistps
xor
jl
lea
divb
insb
pop
dec
pop
jg
sti
pop
pop
lods
dec
scas
pop
mov
add
push
insl
divl
imul
hlt
cmp
mov
ds
pop
cmp
call
jne
and
inc
arpl
iret
pop
in
pop
aaa
xchg
push
mov
cmc
and
movsl
imul
and
mov
fs
pop
dec
mov
lods
insl
pop
dec
arpl
mov
cmc
mov
pop
test
pop
pushl
imul
ficomps
push
xor
jne
mov
lock
cmp
inc
cmc
push
and
sbb
aam
push
dec
test
movsl
xor
popf
iret
sub
ret
jl
adc
and
mov
cmc
xlat
in
loope
add
jl
jmp
sbb
pop
dec
push
sbb
mov
mov
scas
push
and
daa
jp
decb
rolb
imul
add
out
sti
sbb
pop
inc
push
popa
sarl
xchg
cmp
cmp
push
jmp
hlt
sub
jbe
ss
and
out
daa
cmp
push
jnp
pop
inc
cmp
aam
getsec
mov
sbb
adc
xchg
sub
sub
dec
mov
dec
dec
daa
add
push
add
push
pop
cld
adc
and
lds
ss
sub
cwtl
pop
mov
arpl
dec
sub
add
jmp
shll
les
mov
repz
add
mov
mov
daa
push
sti
mov
inc
fucomp
jmp
loopne
dec
xlat
lds
movsb
dec
in
mov
mov
lock
ja
mov
add
inc
adc
aad
dec
les
bound
insb
ja
test
aaa
imul
movsl
aas
or
inc
push
xchg
and
sub
push
and
mov
add
cmpsl
jns
or
fwait
push
lahf
xchg
scas
jl
pop
push
ret
js
int3
pop
adc
sti
mov
loop
dec
mov
clc
stc
fbld
sbb
push
out
xlat
lcall
xchg
out
mov
pop
test
mov
add
sub
pop
adc
or
outsl
in
or
sub
pop
je
and
es
out
or
mov
testb
cmpsl
leave
or
mov
jnp
mov
cmp
push
jne
xor
int3
add
scas
or
or
pop
jbe
mov
mov
push
aaa
pop
mov
xchg
cmp
pop
mov
sub
and
cmpsl
sahf
rorl
mov
sbb
adc
lods
mov
enter
cmp
ss
outsl
rcr
repz
cmp
pop
sbb
enter
shrb
and
das
das
ret
xor
repnz
dec
add
ss
dec
ss
xor
dec
out
adc
mov
inc
pop
dec
fistpll
ja
cmp
push
xchg
jmp
pop
push
enter
xchg
inc
faddp
outsl
and
jcxz
or
inc
je
push
aaa
and
and
loope
push
lahf
rolb
jp
push
xor
cmc
ror
pop
and
push
fcomip
cli
push
xchg
in
dec
add
shrb
pop
repz
out
push
int
cmc
bound
dec
adc
mov
cwtl
xchg
imul
dec
lahf
xor
mov
ss
mov
fcmovnb
dec
lret
jge
in
or
fisttps
call
ljmp
jb
mov
idivb
sbb
idivl
push
cmp
push
aad
aaa
push
and
add
push
sbb
xlat
shlb
stos
in
in
mov
loope
fisttpl
xorl
loopne
repz
testl
imul
xchg
gs
movsb
xchg
inc
mov
cmpb
cmc
loop
leave
pop
and
std
dec
shlb
inc
sbb
pop
sub
stos
inc
and
rorl
jnp
jno
add
enter
jne
mov
mov
test
aam
je
cmp
int
lds
sub
into
push
add
xchg
and
mov
lods
in
lods
cmp
pop
cwtl
sbb
mov
add
jl
pop
in
adc
rorb
jge
dec
jne
xchg
test
mov
or
aad
and
icebp
pop
insb
mov
imul
test
je
je
dec
dec
movl
pop
repnz
pop
test
popf
loopne
inc
or
or
push
arpl
xor
nop
test
icebp
ljmp
and
jbe
and
cltd
adc
inc
test
aam
mov
sub
rcrl
fstpt
sub
mov
ljmp
dec
int
fildl
test
push
out
lock
push
std
sbb
dec
push
popa
xor
addb
mov
and
repnz
jl
cmp
decl
mov
scas
outsl
dec
lea
inc
mov
cli
mov
jo
loop
subb
imul
push
push
lods
jmp
call
mov
out
add
sti
mov
iret
push
or
fwait
aad
mov
adc
cmpb
scas
mov
push
call
mov
aas
cmc
cs
push
hlt
jae
push
aaa
icebp
mov
fdivl
cmp
or
testb
push
inc
lcall
sbb
test
push
enter
push
aam
sub
push
pop
or
sub
subb
mov
pop
dec
pop
cmp
adc
mov
subb
jge
dec
loope
ret
push
faddl
data16
fiadds
pop
ss
sbb
jl
in
push
ds
push
loopne
sbb
pop
dec
add
lock
and
adc
gs
js
pop
xchg
das
mov
rorl
loopne
test
out
stc
pop
add
add
inc
fwait
out
sarl
pop
loope
sbb
push
test
cli
loopne
jle
movb
or
outsb
mov
cli
cwtl
scas
jne
mov
dec
or
pop
cmpb
add
mov
pop
repz
mov
loop
or
fldl
shrl
mov
loopne
aaa
popa
negb
sub
dec
pop
lahf
ds
xor
xor
insb
ss
dec
incb
push
xor
test
icebp
sub
cmp
sbb
out
adc
int3
mov
adc
lods
in
stc
cmp
pusha
scas
inc
mov
add
or
outsb
add
cmpsl
sub
add
int
pop
sub
jp
clc
in
iret
enter
cmp
in
push
mov
jbe
add
add
stos
ret
testb
mov
cmp
xchg
xor
pop
sub
mov
xor
inc
outsl
out
fsubrs
jo
xorl
out
jae
sbb
mov
and
fadds
lods
lret
sbbb
pushf
gs
jb
jecxz
mov
push
fwait
sub
cmp
add
add
adc
ss
std
sbb
pop
xchg
push
inc
insb
pop
arpl
mov
mov
into
loope
add
repz
out
outsb
ret
jns
cmp
xor
scas
and
pop
xlat
repz
sub
out
ficoms
into
icebp
adc
jle
sub
jp
rorl
outsb
shlb
sub
lds
movsb
push
or
out
movsl
pop
imul
sub
jge
mov
fsubrs
popf
and
jmp
or
adc
adc
and
push
lds
or
sub
mov
xchg
fisttps
push
add
fcomi
ret
add
push
std
add
pop
or
fildl
xchg
ds
jne
jb
pop
daa
bound
sub
xor
add
es
mov
mov
xchg
es
fadds
adc
cmp
push
sub
push
xchg
notb
xlat
adc
mov
test
out
or
lods
or
loop
jo
clc
xlat
add
adc
lret
mov
test
jecxz
xchg
xchg
adcl
mov
les
pop
jae
je
test
xchg
push
shll
loope
jbe
rclb
repnz
je
int3
out
out
mov
or
insl
subb
inc
xlat
repz
xor
push
call
shrb
or
hlt
sbb
test
adc
mov
sbb
pop
adc
and
lods
call
out
jl
xchg
jbe
pop
add
add
sbb
arpl
inc
xor
cmp
shlb
setb
imul
inc
in
out
push
add
fnstsw
cmp
shr
shll
popa
xchg
jns
jae
cwtl
lods
in
ja
loop
or
cld
xlat
push
and
push
hlt
push
loopne
popf
or
insb
push
lock
jne
pop
add
popf
cmp
pop
or
add
aaa
push
jmp
subl
out
subb
sbb
mov
jne
imul
and
push
jno
je
filds
roll
and
xchg
and
lret
test
dec
mov
test
sbb
sub
cmp
jg
les
sub
jmp
scas
into
mov
ror
testb
mov
imul
sub
ret
fbld
lods
xor
adc
mov
push
imul
fcomps
sbb
cmp
or
xchg
in
add
mov
xchg
std
leave
add
sbb
aam
test
ss
mov
lods
xor
fnstcw
xor
push
scas
push
cmp
scas
jp
jecxz
mov
es
mov
and
out
adc
cmp
pop
scas
nop
push
add
ret
jle
pop
dec
iret
mov
lods
push
or
xchg
pop
jg
cmpsb
psllw
inc
xor
loope
jge
mov
ss
jnp
nop
or
loopw
lret
je
push
jle
das
loope
out
hlt
xchg
dec
push
addr16
repz
xchg
jmp
and
inc
dec
mov
xchg
or
jecxz
aad
jp
imul
icebp
sub
movsb
test
add
pop
call
jo
cs
dec
sbb
stc
dec
adc
sar
mov
sub
sbb
xchg
movsb
dec
jmp
sub
mov
push
mov
and
stos
xchg
and
fsubl
fldt
into
shr
dec
xor
in
addr16
pop
clc
out
ret
xchg
xchg
mov
jo
loope
mov
out
mov
xchg
or
popf
push
icebp
pop
sbb
jmp
xor
cwtl
jae
cmc
cwtl
mov
push
ja
xchg
orb
sub
adc
out
inc
xlat
addl
out
sub
adc
mov
negl
push
and
xchg
add
pushf
lock
sbb
adc
int
cmp
scas
int
adc
inc
mov
dec
or
movsb
shl
inc
adc
shl
call
xor
call
in
dec
add
pfrcpit2
adc
jl
rcrw
imul
movb
in
bound
sbb
testb
sub
cmpb
adc
nop
mov
inc
dec
imul
xor
inc
jno
cli
add
fisttps
incb
pop
icebp
out
dec
and
sub
mov
xchg
jo
adc
pop
xchg
mov
cmc
leave
sbb
rcll
ss
xor
in
les
in
sub
aam
dec
fsubr
add
jl
divl
and
je
das
pushf
lahf
gs
js
cmpsl
xchg
xor
jecxz
mov
loop
test
adc
ljmp
xchg
inc
clc
jb
sbb
adc
into
cmovno
add
sub
sti
pop
pusha
adc
xorb
ds
sub
xlat
int
in
push
push
push
jmp
adc
cmpb
sub
lds
jmp
cmp
xchg
pop
fimuls
or
and
testb
popf
jmp
stos
out
bound
mov
js
jl
stos
addr16
and
xchg
xor
push
and
xchg
xchg
sbb
repz
jae
sub
in
emms
adc
pop
sbb
sbb
ljmp
xor
sub
testl
lahf
gs
outsl
sub
aas
dec
fstpt
ds
jl
mov
scas
ret
jnp
mov
mov
cmc
popa
stos
cmp
jl
je
or
cs
dec
bound
arpl
sub
mov
outsb
movsl
jae
cwtl
dec
adc
mov
xchg
sub
fcoml
negl
fmuls
xchg
lea
push
and
into
pop
andl
aad
imul
push
out
sbb
pusha
inc
push
mov
cltd
pop
lds
cmpsb
cwtl
jle
mov
test
icebp
div
div
insl
sti
fisubrl
in
and
not
and
gs
push
imul
jl
cld
mov
ds
xchg
gs
out
cltd
jmp
das
push
repnz
mov
sub
les
add
sub
cli
inc
mov
aaa
lcall
mov
push
hlt
adc
fistpll
push
repz
inc
jae
loop
sbb
jnp
movsb
mov
sbb
aaa
icebp
mov
cltd
xchg
sti
sub
add
jae
fildll
mov
xchg
inc
les
cli
dec
cli
stc
test
in
pop
leave
insb
cmp
jno
movsb
adc
scas
inc
inc
pop
fsubs
sbb
es
lret
adc
xor
mov
xchg
xor
stos
adc
push
hlt
movsb
jp
dec
and
fimuls
adc
fnstcw
jnp
mov
mov
gs
dec
mov
enter
pop
push
and
xchg
mov
jb
push
mov
sti
bound
nop
jbe
or
push
sbb
jge
jg
pop
dec
xlat
xchg
inc
lcall
pop
ljmp
push
addl
out
sub
push
into
cmp
pop
pop
pushl
add
out
repnz
pusha
xor
cld
iret
cli
push
jmp
mov
sbb
lock
popa
push
push
leave
sub
je
push
fcmovnb
lock
test
dec
sbb
cwtl
andb
fistl
sbb
jecxz
jge
push
sbb
xor
mov
out
sahf
cmc
and
and
stos
mov
dec
pop
and
pusha
xchg
mov
adc
or
and
jge
mov
jnp
out
add
lret
or
test
outsb
add
lods
dec
repnz
cwtl
outsl
push
mov
fstpl
in
fsubrs
inc
pushf
pop
xchg
adc
sub
mov
cmp
fsubr
sbb
mov
loop
sub
dec
inc
cwtl
or
pop
dec
out
adc
jnp
and
push
sbb
jo
sbb
insb
lcall
or
aaa
dec
sbb
adc
xor
pushf
or
out
loop
out
call
psrlq
pop
insl
adc
rorl
mov
out
xor
fs
imulb
loope
rsm
cmp
stc
rcr
and
int3
in
add
push
jb
dec
inc
std
lock
out
leave
into
pushf
iret
dec
sbb
movsl
clc
xchg
insb
mov
leave
pop
daa
lea
ficomps
daa
shrl
nop
out
jnp
rcrb
mov
repz
jbe
push
aas
and
lahf
xchg
push
mov
sbb
dec
es
pop
sbb
rcl
fistpll
lea
push
push
mov
dec
cmp
arpl
mov
popa
aaa
xor
nop
and
dec
adc
imul
dec
out
inc
adc
movsb
mov
jbe
and
out
mov
scas
mov
add
test
add
std
xorb
inc
lahf
pop
aam
xchg
xor
repz
mov
or
adc
xor
dec
out
mov
fucom
imul
pop
pop
or
out
andb
dec
jecxz
aas
sarl
stos
cmp
cld
inc
jo
dec
popfw
lds
shl
push
pop
push
cli
add
push
push
dec
and
xor
std
insl
jecxz
mov
xchg
jno
dec
dec
or
xor
nop
enter
or
gs
scas
jne
pop
pop
cmp
leave
cmp
insb
jbe
pop
fwait
mov
gs
push
insb
in
and
push
idivl
lret
jge
std
adc
adc
int
push
cmpsb
popa
add
and
jecxz
pop
cmp
fld
dec
imull
sub
push
scas
and
inc
int3
ret
jle
insl
sub
repz
bound
inc
add
hlt
lds
xor
andl
pop
clc
dec
pop
aaa
mov
xor
adc
cmpsl
pop
pop
mov
sbb
das
mov
mov
dec
std
pop
gs
and
sub
addr16
xlat
cs
jns
jne
adc
divb
imul
inc
or
xor
es
lds
stos
rcrb
daa
sbb
adc
and
push
bound
xor
insb
jne
sbb
dec
orb
mov
mov
mov
movsl
and
dec
adc
xchg
push
lock
jb
icebp
fs
xchg
lods
gs
add
sahf
lock
orb
faddl
repnz
xor
jecxz
add
ss
in
fsubr
lcall
xor
cmp
lods
mov
pop
in
push
inc
jmp
xchg
cmp
and
jmp
mov
ss
push
scas
lea
inc
int3
add
sti
pop
cld
cs
ret
push
mov
sbb
cmp
jmp
pop
jb
mov
out
popf
arpl
pop
mulb
cmp
iret
aaa
xor
and
jb
sbb
push
add
add
and
or
mov
test
add
mov
ret
into
push
and
jmp
sahf
jl
cmp
and
and
adc
push
and
adc
stos
adc
ss
pusha
cltd
pop
push
cmpsl
mov
ret
xlat
and
sbb
and
outsl
cmc
fs
int3
and
mov
xchg
jnp
nop
addr16
cs
pushf
outsb
jne
flds
std
mov
mov
cmp
mov
mov
adc
and
dec
sbb
movl
lods
ret
jo
mov
cmp
mov
push
and
jno
adc
repz
push
incl
pop
cmp
sahf
add
or
mov
dec
std
mov
pop
sbb
gs
imul
test
or
xchg
jecxz
cmp
xchg
jb
pusha
loop
filds
ds
pop
pushf
aas
movsl
jmp
jl
or
or
xlat
test
add
fwait
cmp
mov
seto
out
pop
xor
inc
sarl
jp
jmp
pushf
jge
enter
push
push
mov
js
inc
mov
dec
dec
lock
add
and
stc
jg
aas
jle
daa
out
repnz
cs
popf
cli
mov
addb
sbb
mov
pop
adcb
adc
xor
sub
dec
mov
dec
inc
pop
inc
cmpsb
inc
jmp
and
out
icebp
bnd
or
pop
outsl
pop
repnz
inc
push
leave
movsl
insl
mov
js
sarb
rcll
mov
xchg
add
jns
jbe
in
jmp
repnz
inc
inc
mov
fwait
aad
imul
or
or
mov
cmp
outsl
imul
repz
js
mov
sbb
mov
push
daa
int3
jle
jecxz
xor
out
data16
dec
notl
sub
int3
clc
jmp
test
ror
shlb
stc
jle
jns
push
jnp
dec
cmp
add
sbb
add
dec
gs
mov
jl
in
insl
cmp
flds
inc
mov
jp
jmp
pop
push
adc
aam
mov
outsb
jmp
aaa
inc
idivl
sub
hlt
add
jl
or
push
enter
jno
dec
psrad
adc
cmp
pop
push
mov
pop
pop
idivl
hlt
rcrb
fisubs
in
sub
jmp
or
stc
sub
cs
insb
add
in
sub
imull
push
jle
pop
push
popf
jns
adc
fmuls
push
mov
xor
cmpb
fwait
push
psraw
mov
shr
inc
mov
loop
mov
sbb
repz
aaa
loop
fidivrs
xlat
les
daa
aas
or
inc
and
adc
sbb
lods
push
dec
stos
dec
mov
mov
sbb
sub
dec
mov
push
cmp
push
test
in
jne
jp
pop
imul
inc
jge
dec
in
adc
aas
cmp
lahf
js
loope
push
clc
and
fstps
jnp
hlt
mov
sbb
cltd
xchg
push
outsb
mov
inc
cmp
es
loope
cli
rep
jle
loopne
mov
sti
fisubl
sbb
test
lods
adc
lahf
movsb
out
daa
jge
jmp
shlb
xchg
pop
negb
or
ret
repz
lods
movsb
adc
push
clc
and
mov
jbe
cmp
loopne
adc
or
mov
fnclex
inc
enter
std
cmpsl
push
mov
aaa
jmp
dec
pop
ret
dec
cld
sub
clc
inc
inc
clc
inc
mov
pop
push
pop
adc
lock
ja
ret
bound
adc
call
int
jg
aad
inc
scas
sub
fimull
mov
int3
jno
test
test
in
sbb
addr16
or
imul
xchg
pop
and
jl
sbb
dec
sbb
sub
ss
inc
sub
xor
fimull
or
iret
es
outsl
lock
or
pop
mov
adc
pop
les
push
addb
jae
loop
mov
inc
mov
call
bnd
mov
cmpsb
dec
fcompl
addr16
and
jo
jl
adc
mov
add
push
fs
inc
jnp
rolb
mov
ds
pop
xor
sbb
or
cmp
and
dec
idiv
inc
pop
xlat
lret
mov
add
daa
int3
ret
mov
inc
mov
pop
sub
sbb
push
add
jge
fs
adc
add
dec
jmp
or
adc
sbb
stos
pushf
jp
insl
dec
into
clc
sub
push
cmp
push
sbb
repz
lcall
dec
test
dec
addl
subl
enter
or
fldt
inc
cmp
mul
negl
xchg
icebp
ret
test
addr16
clc
addr16
mulb
or
or
aaa
sbb
jbe
fcomi
inc
scas
in
push
push
dec
jbe
das
in
imul
xlat
push
mov
movsb
imul
test
mov
xor
pop
jne
sub
testb
dec
js
out
jno
js
arpl
in
sti
mov
ficompl
cmp
mov
add
mov
sar
lods
pop
rcll
xchg
mov
mov
mov
inc
jecxz
add
or
mov
add
cmp
popf
push
lret
in
inc
or
mov
inc
popa
jmp
cmc
ret
dec
scas
push
and
cmc
adc
inc
sti
inc
add
or
lea
in
scas
pop
push
movsl
adc
xchg
pop
out
jge
fs
add
repnz
loope
jnp
add
out
push
or
and
sbb
daa
icebp
pusha
and
cld
adc
gs
in
in
cs
in
andl
insl
cld
pop
jg
xchg
dec
xchg
inc
mov
sub
or
or
lods
pusha
fnstcw
dec
mov
pushf
arpl
insb
adc
pop
pop
inc
add
out
jno
xor
pusha
fstp
sub
pop
sub
sbb
xor
mov
xor
xchg
arpl
out
das
jmp
scas
in
sbb
jae
cmp
sbb
cmp
sbb
or
ss
xchg
fndisi(8087
xchg
call
ss
and
mov
push
pop
sbb
inc
inc
xchg
dec
xor
sub
sti
or
je
jge
int
sbb
xchg
cld
lock
or
jp
and
or
sbb
popa
rcrl
in
lcall
pop
notl
or
dec
mov
addl
jmp
dec
test
jne
mov
xlat
jbe
outsl
or
adc
pop
push
dec
or
xchg
sbb
js
arpl
movsb
fisttpl
pop
xor
out
insb
lcall
sub
cli
inc
xor
ret
outsl
sub
add
inc
adc
cmp
xchg
xor
notb
pop
mov
or
pop
jp
push
jl
out
sbb
sbb
iret
add
pop
shrb
mov
xchg
pop
push
popa
loope
xor
sti
pop
jl
test
aaa
scas
iret
cmp
adc
ret
sub
out
sub
mov
push
jne
stos
pop
dec
ljmp
mov
daa
aas
xor
icebp
lcall
fisttpl
sbb
ret
mov
jmp
lock
jle
mov
jmp
mov
or
lcall
fistps
ret
in
scas
pushf
cmc
adc
insb
test
insb
into
pop
mov
cmp
mov
jge
or
sub
lods
out
outsb
jbe
or
ret
into
fstpt
dec
pop
or
fisttpl
loopne
orb
stos
ljmp
fidivrs
arpl
xchg
pop
idivl
in
sbb
cltd
xlat
xchg
repz
or
cmp
dec
mov
stos
jmp
lahf
mulps
push
push
ror
xor
lock
loope
popa
movsb
mov
loopne
add
xor
repz
dec
push
mov
xchg
in
jg
cmpsb
mov
add
pop
inc
mov
adc
xor
in
ficompl
scas
cmp
mov
jb
int3
or
call
loop
push
cmp
push
outsb
and
push
jbe
mov
ret
fstpt
sub
dec
hlt
xchg
push
aad
dec
sub
pop
repnz
add
sti
mov
add
in
dec
loopne
sbb
push
mov
sahf
sbb
sbb
jnp
ficoml
sub
xchg
imul
out
out
dec
out
outsl
sbb
sbbl
jecxz
mov
mov
inc
mov
or
jecxz
cmp
or
mov
xchg
and
push
push
loopne
or
jg
mov
push
mov
ljmp
push
xchg
pop
sti
imul
inc
orb
in
push
adc
ss
dec
out
pop
fiadds
push
les
jns
push
push
xchg
scas
rcrl
mov
lock
repz
jnp
out
in
dec
sub
pop
shlb
sub
sti
iret
stos
add
sub
js
inc
sti
fildl
sbb
lds
mov
in
add
xor
push
mov
dec
in
fmuls
icebp
clc
or
sti
jno
jecxz
sub
or
jae
jne
test
ret
sti
jns
jno
fs
or
fsub
mov
xor
push
daa
sar
adc
and
int
stos
jbe
and
pop
dec
andb
outsb
mov
adc
scas
icebp
jl
stos
aam
jmp
push
xchg
ja
or
out
mov
mov
out
daa
fstpt
cli
jnp
paddw
or
xchg
divl
fcos
dec
mov
adc
sbb
and
orl
sarl
cli
inc
add
loop
mov
mov
sarl
mov
push
push
leave
stos
mov
push
adc
mov
sar
xchg
push
daa
mov
data16
sub
das
mov
mov
xor
lret
mov
flds
ret
fmull
int3
inc
or
sbb
clc
inc
lcall
jp
inc
testb
int
cmc
sbb
int
jnp
push
add
into
inc
scas
adc
lods
jg
movl
mov
xchg
sub
cltd
sub
call
push
pop
and
mov
jno
stos
push
dec
mov
dec
pop
inc
call
add
mov
cltd
push
xlat
scas
mov
rorb
jle
imul
ror
inc
pop
mov
mov
lock
pop
xor
inc
repz
dec
sbb
and
adc
ja
into
dec
pop
add
jns
cmp
sbb
sbb
mov
mov
dec
sarb
adc
pushf
pop
jne
mov
pop
dec
sti
adc
cmp
int3
and
je
jae
lret
push
and
mov
leave
stos
jge
pop
sub
mov
std
mov
xchg
push
pop
in
sbb
mov
push
mov
dec
xlat
int
xchg
into
push
mov
out
adc
mov
fstp
adc
scas
jo
mov
je
outsl
sarb
add
mov
cs
or
adc
aad
jae
add
ja
fistpl
dec
stc
loopw
add
push
mov
out
pop
sbb
pop
lcall
mov
jl
jne
fists
jmp
repnz
or
inc
rcrb
into
adc
int3
pop
fbld
es
popa
roll
push
jecxz
push
xor
mov
pop
adc
or
int
cmc
xor
pop
sbb
ss
fmul
push
not
ffreep
jbe
ret
shlb
ja
imul
jge
jb
jmp
mov
and
mov
stos
scas
xchg
enter
out
push
xchg
adc
dec
data16
cmp
adc
pop
mov
mov
lret
dec
cmp
mov
aam
test
add
faddl
dec
mov
push
lahf
xchg
push
add
and
dec
lods
aas
in
push
inc
jo
sbb
je
add
adc
js
aas
ret
fwait
pop
mov
mov
dec
mov
push
vandnpd
insl
add
imull
push
push
es
jns
push
stos
xor
jg
das
jnp
xchg
pop
lock
adc
mov
js
jno
cmc
test
pop
pop
cmc
icebp
pop
pop
movsb
sbb
ja
sbbl
and
ss
out
adc
pop
pop
adc
lret
out
hlt
pop
outsb
fucomip
rcll
dec
cltd
and
sbb
fcompl
call
or
jb
lahf
call
rorb
lods
scas
jge
xchg
or
xchg
xchg
dec
aad
cmp
adc
clc
mov
cmp
ret
popa
mov
shlb
add
and
xlat
sbb
sbb
loopne
jo
jmp
jne
sub
mov
xchg
int
imul
pusha
mov
mov
jbe
mov
stos
dec
cltd
out
inc
mov
add
es
dec
push
cli
scas
fnstcw
std
sbb
insl
nop
xchg
push
jo
scas
lcall
or
xor
and
add
es
xor
push
sub
xchg
and
mov
pop
sbb
mov
dec
icebp
fs
push
push
push
pop
dec
aam
fcomi
out
into
inc
mov
lock
inc
pop
pop
das
or
stos
pop
sbb
push
insl
jle
ja
and
pushf
pop
add
loope
ja
arpl
test
vpackuswb
push
inc
inc
bnd
and
js
out
mov
mov
out
ret
lcall
dec
push
stc
xchg
and
jb
out
push
mov
jnp
push
scas
mov
xor
xchg
in
es
jle
lahf
push
jl
jnp
sbb
adc
xor
mov
into
and
fcomps
jo
dec
jae
clc
int3
xor
outsb
pop
lea
iret
jbe
mov
pop
add
dec
jae
pop
or
scas
fwait
jno
push
push
adc
ja
das
insl
mov
scas
mov
imul
lcall
add
adc
icebp
ljmp
xor
loopne
pop
test
adc
pop
pop
push
daa
cmp
or
jge
aaa
mov
pop
jnp
aaa
imul
mov
xchg
daa
stos
jecxz
push
out
xor
dec
sub
add
add
xor
sbb
sbb
addr16
inc
ds
pop
test
ja
vmovhps
into
jg
ljmp
addr16
xor
sub
ret
leave
pop
and
jo
fistpl
xlat
xchg
dec
push
or
push
cmc
neg
push
inc
test
add
fisttpl
es
sub
mov
dec
iret
push
pop
mov
jmp
ja
fxtract
scas
sbb
mov
ljmp
sti
and
aad
and
cli
adc
adc
lds
push
sti
sbb
add
arpl
aas
aam
dec
in
inc
hlt
cld
add
ja
adc
jp
repz
sbb
sbb
sub
add
mov
xlat
and
sbb
sbb
jnp
xchg
and
xor
mov
sbb
and
push
mov
push
adc
or
add
stos
adc
daa
cli
stos
repnz
out
xor
pop
push
adc
cmp
sahf
lock
notl
dec
inc
mov
sti
shr
test
and
test
test
pop
xor
nop
cli
popf
scas
pop
pop
mov
jle
daa
mov
push
addr16
pop
jmp
fcompl
push
lahf
test
das
adc
sub
or
cmp
in
adc
stos
test
dec
push
inc
cwtl
and
es
pushf
filds
pop
addr16
call
adc
dec
mov
fucomip
xchg
inc
and
push
jg
mov
gs
scas
push
pop
add
and
cmp
mov
sub
or
es
out
and
scas
lea
cmc
aam
inc
popl
clc
into
out
repz
mov
roll
mov
out
arpl
bound
mov
jge
fwait
roll
jmp
push
lds
test
rcl
or
fbld
cltd
mov
negl
cmp
push
nop
shl
jo
loopne
cmc
je
pop
add
test
inc
pop
sahf
cld
mov
xchg
inc
dec
js
cmpsl
movsl
std
dec
lds
push
sbb
nop
test
rorb
jge
insb
aad
add
xlat
pop
lahf
and
push
loope
fcmovne
add
scas
jle
dec
jne
into
stc
jl
ljmp
push
sar
add
into
pop
hlt
xlat
insl
jns
aad
lds
stc
pop
loope
xor
adcl
add
cmp
push
scas
fiadds
push
lret
inc
aam
adc
inc
push
test
out
cwtl
or
sub
icebp
outsb
pop
push
xor
lock
int
push
in
sub
pop
xchg
loopne
imul
mov
inc
stc
jl
adc
add
insb
sbb
xor
test
cmp
jmp
sti
or
or
pop
dec
add
outsb
xor
sbb
and
mov
lods
pop
push
add
out
cmp
sti
mov
aas
icebp
clc
pop
enter
sub
sbb
xchg
rcr
pop
fbld
dec
cwtl
out
cmp
imul
sbbb
sub
and
mov
sub
ret
xor
mov
sub
and
movsb
mov
inc
pop
pop
xor
cmovp
adc
or
sbb
push
sbb
mov
nop
mov
addb
decl
jmp
add
sub
fistl
push
in
inc
repz
andb
lock
mov
push
or
adc
pop
imul
lret
pop
cwtl
dec
sti
mov
jo
mov
sti
scas
fwait
shl
mov
add
out
pmaxub
pop
xchg
mov
addl
sarl
sahf
call
fwait
addl
std
scas
iret
add
jp
dec
mov
scas
mov
mov
xor
push
cld
mov
mov
das
lret
aaa
adc
shlb
inc
lahf
shll
lods
sbb
lret
push
or
imul
xchg
fistpl
adc
mov
dec
push
rolb
fdivrp
inc
lock
lret
dec
jecxz
fimuls
popa
cli
inc
enter
pop
pop
out
in
jle
mov
mov
data16
repz
fidivrl
rclb
add
jmp
or
cs
mov
imulb
cmp
pusha
sub
xchg
ror
xchg
in
outsl
cmp
push
mov
pop
int
fcompl
push
sbb
jo
pop
in
mov
fucomp
rcrl
in
lods
add
sahf
adc
sub
cmpsb
in
loopne
push
push
stc
jle
decb
or
jae
add
push
or
pop
cmp
or
cli
push
xchg
and
fistl
int3
push
add
mov
jbe
push
rorb
inc
add
outsl
roll
icebp
repz
pop
mov
and
mov
fcoms
gs
cmp
inc
inc
fisttps
fs
push
jg
xor
pop
clc
lods
sub
notb
cmc
data16
and
fcmove
jb
push
out
mov
das
push
mulb
sub
and
mulb
out
in
pop
insb
cmc
clc
pop
pop
inc
lret
mov
add
jae
scas
jl
jb
cld
out
xor
add
inc
in
cmpsb
fisttpl
in
push
in
pusha
pop
ret
add
iret
dec
pop
pop
cmpsb
and
mov
mov
adc
and
shll
adc
xchg
pop
pop
xchg
dec
mov
hlt
cmp
outsl
jl
pop
dec
loopne
inc
lret
push
loopne
shrb
cmp
cmp
add
ficompl
out
xchg
js
sbbb
into
mov
mov
popa
adc
cmp
scas
inc
inc
int
and
dec
paddusb
cld
add
cld
push
pop
std
negb
pushf
push
adc
pop
or
imull
xor
in
insb
xchg
jnp
fsubrs
cmc
pop
push
std
stos
mov
sarb
sahf
cmp
push
fbstp
scas
jo
push
in
lahf
je
push
mov
rep
add
pop
cmp
negb
jecxz
add
int3
sbb
insb
dec
ds
and
cmp
dec
ljmp
mov
ja
subb
mov
or
into
xchg
sbb
push
push
xchg
add
aas
fstps
in
cmp
push
mov
dec
jmp
andl
dec
divb
imul
nop
mov
and
out
in
mov
fcmovnu
popf
js
cmp
add
fistps
das
push
add
testl
jnp
dec
jae
fildll
js
adc
cmp
rcl
scas
in
push
pop
lret
es
loope
test
aam
adc
out
cs
sub
mov
or
adcb
cmc
mov
jbe
insl
pop
inc
pop
sub
jmp
and
or
fiadds
and
adcb
dec
dec
push
and
fsubr
popf
mov
and
and
cli
push
lds
adc
into
jno
sbb
mov
dec
repz
andl
inc
andb
jbe
and
adc
loopne
test
cwtl
call
les
dec
nop
scas
lods
pop
push
or
sbb
enter
cmc
lds
push
sub
jns
cli
shll
mov
gs
fdivs
push
add
jge
dec
mov
clc
adc
aad
or
pop
jb
daa
daa
fcmovu
fs
cmp
pop
in
sbbl
ret
call
ja
cmp
pop
aad
mov
cs
adcb
sub
cld
daa
es
xlat
jne
int3
mov
push
aaa
push
jbe
sarb
sub
jp
add
in
lea
dec
repz
clc
sbb
ja
lea
sub
movsb
cmp
mov
jnp
cmp
cmc
mov
pop
jge
mov
xchg
mov
out
or
sub
scas
push
adcb
adc
cmp
leave
sub
arpl
test
pop
arpl
insl
je
jl
adc
repz
in
jb
xchg
pop
xchg
jle
mov
pop
mov
idiv
sbb
inc
popa
cmp
call
inc
aaa
aad
loop
mov
out
outsl
dec
push
stc
cmpsl
divl
pop
aad
rcl
mov
sbb
xchg
xchg
xchg
jo
call
jae
sub
or
out
insb
jne
test
lds
dec
pusha
daa
jns
jb
out
lock
jb
or
stc
loop
dec
cmc
cld
stos
jp
inc
aas
mov
mov
jg
dec
pop
jecxz
and
inc
add
cmpsl
sbb
pushf
hlt
sbb
addr16
xchg
addr16
sbb
jnp
mov
orl
paddsb
bound
mov
dec
mov
and
xchg
lcall
repz
pop
arpl
insb
ficoms
les
bound
pop
nopl
or
divb
cwtl
shr
cld
and
sbb
in
xchg
mov
in
dec
pop
sub
aad
sub
repz
mov
fdivrs
and
lret
mov
sbb
xchg
arpl
mov
dec
jecxz
aad
bound
add
cmp
hlt
out
adc
xor
das
fstpl
pop
out
repnz
hlt
push
leave
les
sub
adcl
cmp
outsb
dec
mov
fs
ss
test
mov
rorl
addr16
shl
jl
jmp
mov
pop
lock
mov
add
das
fldcw
push
add
mov
out
xchg
sbb
inc
icebp
sahf
test
xchg
aaa
mov
adc
sbb
sti
or
loop
test
pop
sbb
xor
dec
incl
add
dec
inc
cltd
xchg
and
pop
subb
mov
dec
mov
daa
inc
push
out
mov
cmp
fcomps
mov
adc
test
outsb
jns
mov
hlt
enter
push
shlb
cltd
adcb
adc
sub
std
push
mov
pusha
push
mov
mov
int3
rorl
shll
pop
test
mov
movsl
dec
dec
push
loop
add
push
cmp
repz
add
sub
add
push
icebp
add
fidivs
push
mov
nop
leave
push
ficomps
icebp
pop
stos
decb
out
divl
jl
pop
sbb
mov
cmp
mov
xchg
pop
push
icebp
jne
xor
push
lret
shl
sbb
pop
pop
aam
pop
mov
mov
pop
mov
cltd
leave
adc
or
or
add
cmpl
subl
jnp
fsubl
out
jmp
lea
out
cmp
sub
push
fbld
dec
push
scas
xor
inc
lea
pop
mov
sub
sbb
ja
mov
jbe
scas
sub
clc
into
xor
scas
jg
dec
sbb
stc
mov
adc
cmpsl
ret
gs
aaa
int
lea
mov
push
addr16
mov
add
mov
fcompl
insl
xor
add
or
inc
inc
arpl
fidivs
mov
nop
popa
jmp
mov
xchg
dec
repz
jge
lods
pop
mov
xor
push
xor
ds
adc
ds
jecxz
push
cwtl
int
xchg
pop
data16
out
mov
pop
scas
adc
inc
cmp
jae
xchg
rorl
cmp
int3
lods
sbb
add
cltd
sub
out
fs
push
xor
xchg
into
outsb
arpl
inc
stos
cs
xor
xor
outsl
imull
adc
out
sbb
hlt
les
jle
jne
cltd
and
mov
and
and
mov
mov
cmp
or
test
je
xor
lods
iret
popf
pop
fisttps
mov
push
pusha
imul
mul
and
pop
mov
adc
xchg
jl
xchg
sub
pop
and
sbb
mov
dec
dec
lret
mov
and
mov
rol
jae
pop
inc
jecxz
cmp
fwait
cs
fwait
lahf
popf
mov
cld
gs
push
and
addr16
sbb
add
inc
cs
jge
mov
dec
je
xchg
clc
pop
int
sbb
xchg
inc
jl
rolb
addb
ss
movsl
sti
sbb
dec
das
sbb
and
test
out
pop
movl
sbb
in
and
push
aas
cmp
ljmp
int
sub
jge
call
inc
and
push
repz
inc
jp
push
inc
dec
and
xor
adc
jns
pop
and
or
adc
push
fmul
es
jns
mov
icebp
push
xor
sarl
inc
out
fstl
xor
inc
sbb
mov
mov
dec
sti
adc
or
loope
imul
cmp
stos
jmp
test
clc
adc
ds
cmp
rorb
lds
mov
stos
xchg
dec
and
adc
movsb
rcrl
in
xor
inc
xor
das
pop
or
fiadds
sub
dec
enter
insl
jge
inc
das
inc
dec
push
lds
loopne
sbb
in
and
pushf
cmp
stc
adc
xlat
movsb
mov
sub
test
pop
lcall
add
or
or
push
daa
fidivrs
adc
ret
clc
fimull
mulps
fnstsw
lea
or
push
lea
and
ds
rclb
pop
stos
xor
mov
lods
mov
repnz
pop
outsb
or
pop
pop
daa
add
jmp
adc
jo
add
gs
int3
aaa
mov
iret
imul
xchg
call
dec
sub
leave
push
cli
pushf
adc
jnp
inc
into
in
and
mov
xchg
push
test
or
dec
mov
mov
cmp
mov
orl
inc
or
mov
aas
pop
ficomps
iret
xchg
push
inc
adc
imul
jnp
adc
aaa
std
inc
fildl
in
inc
loop
rcrb
mov
mov
mov
pusha
aas
je
or
push
sub
pop
rcrl
leave
phaddsw
pop
int
mov
js
push
fisttps
ljmp
out
sbb
in
inc
sub
dec
cmp
add
imul
cltd
xchg
adc
mov
rclb
mov
jb
addr16
mulb
or
cmp
es
sti
sub
xchg
mov
jmp
push
out
in
lret
or
sti
cli
imul
push
push
xchg
cmp
sub
fistps
test
inc
stos
mov
mov
sbb
push
xor
jg
jecxz
push
fmull
xchg
mov
sti
lahf
inc
sahf
fidivrl
sub
cmp
add
fwait
push
add
sub
icebp
repz
jmp
jo
cmp
push
loope
mov
jne
adc
icebp
add
mov
dec
inc
or
dec
popl
or
arpl
es
test
std
sahf
jo
ljmp
lret
add
divb
clc
rclb
fucom
in
cmc
jmp
cmc
lea
xchg
cltd
pop
cmc
dec
aaa
pop
fimull
sub
adc
pop
dec
xchg
lods
cli
js
loop
sbb
mov
adc
imul
les
movsb
sti
rcr
pop
push
stos
mov
loope
mov
cltd
imul
push
mov
jae
fcomp
in
jae
clc
pusha
insb
push
inc
add
aas
cli
imul
push
ret
out
pop
gs
sbb
and
outsl
pop
pop
sti
test
ficomps
popf
xchg
in
fcomps
sub
mov
sbb
sub
pop
call
sub
adc
out
repz
pop
mov
es
push
inc
fdivr
lea
add
pop
incl
in
pushl
and
sub
cmp
or
sahf
mov
add
daa
sub
jae
xchg
loop
stc
lods
mov
push
cmpsb
push
rcrb
push
in
sub
nop
xlat
sub
adc
lods
repnz
and
and
push
pop
push
inc
outsb
pop
in
adc
icebp
aas
fimuls
push
ja
int3
fistpll
push
int3
and
add
loopne
out
adc
sbb
push
sub
loopne
inc
sbb
mov
xlat
sbb
sub
sub
es
test
loop,pn
fistps
jnp
loopne
push
jecxz
xor
dec
mov
out
or
push
adc
mov
cmpsl
fidivs
and
out
loopne
cli
mov
pop
fidivl
jns
inc
jecxz
je
nop
and
shlb
cmp
popf
mov
xor
clc
in
into
add
sarb
testb
imul
cmp
repz
fstpl
dec
jo
js
ljmp
aas
loopne
pop
and
std
cmp
pop
enter
jecxz
decb
fimull
dec
add
xor
outsb
push
int3
pop
fimull
inc
fimull
mov
pop
mov
lcall
pop
jnp
testl
outsb
imul
dec
and
xor
icebp
out
dec
and
sti
add
insl
adc
dec
sub
xor
rcrb
or
xlat
dec
scas
or
fsubrl
mov
out
xor
cwtl
sbb
xlat
adc
lret
pop
std
lods
stc
les
pop
sub
loopne
mov
xchg
or
jb
aas
sbb
or
sub
dec
jl
lret
lock
and
fisubl
xor
and
push
lods
les
into
or
add
inc
jb
mov
ucomiss
and
adc
and
xchg
lds
js
push
in
lock
push
pop
addr16
repz
cld
hlt
in
repz
scas
lret
add
cmpsl
xor
mov
and
dec
or
sahf
je
outsl
imul
cmc
sahf
jmp
xchg
pop
pop
bound
cmc
mov
pushf
or
push
inc
sub
nop
inc
mov
popa
mov
lods
mov
hlt
mov
into
imul
lret
jnp
dec
add
mov
mov
out
or
inc
out
in
xor
ljmp
sub
int
xlat
jmp
pop
out
jns
cltd
scas
jl
sub
inc
xchg
js
push
out
push
sbb
fdivrs
jmp
sbb
stos
js
sbb
sub
sbb
xchg
xchg
adc
cmp
movsl
gs
mov
sbb
cli
test
add
jp
mov
fdivr
fsubr
mov
mov
mov
mov
pop
inc
adc
das
add
mov
adc
inc
or
cmpsb
xchg
or
dec
jmp
adc
rcl
dec
push
ja
dec
cmpl
jbe
insl
jmp
hlt
cmp
jle
cmpsb
nop
rclb
lret
ficomps
jmp
mull
jg
pop
shll
cmp
enter
int3
inc
cmp
mov
dec
fildll
mov
jb
lods
incl
in
clc
lock
xchg
inc
arpl
or
mov
mov
fcompl
aas
lret
shr
mulb
mov
xchg
ss
dec
and
sub
fimull
cmc
inc
pop
push
cmc
mov
add
test
mov
cmp
pop
xor
mov
lds
cli
es
leave
push
sub
rcrl
xchg
bound
add
pop
or
add
xor
xchg
sub
pushf
faddl
mov
xchg
xlat
dec
or
cmp
js
jb
cmp
fs
ljmp
sub
sub
test
pushf
fmull
lret
push
add
iret
adc
jecxz
int
inc
lcall
das
in
cld
lea
lahf
cltd
mov
jge
negb
leave
dec
movb
xchg
add
xchg
cmc
mov
imul
out
jne
nop
fwait
jo
adc
add
mov
jbe
push
and
ljmp
outsb
sbb
lcall
rorl
dec
out
and
cmp
mov
outsb
cmpb
add
cmp
pop
call
shll
jnp
fcmovnu
mov
pusha
xchg
mov
dec
call
xchg
jmp
popf
xor
pop
fucomip
pusha
cmpsl
mov
cld
mov
lret
push
fwait
xchg
int
pushf
mov
jns
jnp
stc
cmp
rorb
testl
mov
mov
xchg
and
add
xor
lahf
scas
pop
dec
movsb
cmp
jecxz
bound
pop
mov
jne
shl
adc
xchg
negl
clc
into
xlat
xor
jecxz
mov
cmp
arpl
int
push
dec
stc
cmc
das
sti
dec
pop
insb
sbb
jnp
out
in
push
dec
mov
notb
adc
add
stos
lock
cmc
add
lret
test
add
push
jge
mov
add
int
ljmp
mov
push
mov
imul
cmp
push
dec
adc
xchg
push
or
jo
cld
cmp
out
xchg
jne
stc
pop
in
mov
popw
cmp
in
inc
dec
jmp
jb
sub
dec
out
mov
push
lods
jae
sub
inc
jns,pn
jl
xor
xor
jp
xchg
adc
cltd
or
inc
or
addr16
lods
inc
jb
or
xor
fbstp
ljmp
es
test
popf
aaa
imul
and
jp
lcall
int
leave
cmp
cmp
jbe
cs
dec
and
out
or
in
data16
clc
dec
add
loop
jecxz
jp
push
push
sti
jb
push
leave
insb
cmp
dec
jne
repnz
inc
push
jmp
jnp
inc
or
bound
int
imul
jp
imul
icebp
jmp
push
or
cmp
psubw
push
arpl
jp
fs
xchg
add
mov
cld
shll
inc
jg
xor
pop
inc
sub
scas
sti
sub
jno
clc
inc
and
mov
mov
inc
sbb
sub
jno
loopne
mov
idivl
fisubrs
stos
test
push
leave
push
pop
and
ss
js
fildll
cmpsb
push
daa
pop
cmpsb
test
aam
icebp
pop
inc
stc
adc
xor
inc
aad
clc
sbb
pop
or
ljmp
ljmp
cwtl
sysret
xchg
xchg
rcr
inc
aad
dec
push
push
xchg
adc
inc
mov
roll
xchg
jp
cli
scas
rcrl
test
aas
xor
mov
fisttps
mov
fcoml
jmp
cmc
xchg
jno
fsubp
cltd
and
mov
icebp
repnz
mov
out
test
lods
popa
iret
push
xchg
or
jp
sub
movsl
and
mov
std
jmp
inc
stos
in
insl
shll
push
das
ret
xchg
inc
outsl
stc
mov
hlt
jmp
loop
addr16
xchg
outsl
fistpl
mov
adcb
push
sbb
push
mov
test
int3
push
dec
data16
mov
add
mov
lds
sub
add
pop
mov
stc
xor
lea
into
jecxz
pextrw
scas
ret
aaa
std
push
gs
aam
stc
jp
jo
pop
test
adc
mov
pop
pop
cmpsb
jbe
negb
pop
xchg
mov
das
outsl
cld
and
xchg
inc
test
movsl
mov
push
and
cmp
add
push
andb
out
sub
int3
sub
call
out
int
add
jp
push
jo
lret
xchg
jg
loop
mov
cmp
xor
repnz
aaa
xor
push
imul
cmp
inc
mov
mov
aam
daa
pop
push
mov
repz
shld
ljmp
cmp
pop
scas
cmpsb
aam
bndstx
std
push
xor
sbb
outsb
xchg
int
mov
hlt
mov
dec
mov
hlt
sub
ss
adc
imul
xchg
fnstcw
jmp
dec
lds
jp
pop
add
xchg
pushf
cmp
xor
hlt
xchg
inc
mov
icebp
and
or
and
arpl
popa
in
jp
inc
push
out
dec
cmp
xor
std
cmp
cld
mov
lcall
dec
enter
and
dec
add
fiaddl
pop
in
jl
push
jmp
stos
in
cltd
lock
nop
mov
mov
push
jp
pop
aaa
lea
or
pop
dec
insb
aad
in
inc
add
or
imul
icebp
add
or
clc
jecxz
pop
xchg
rorl
stos
or
mulb
sbb
outsl
jg
inc
aaa
js
out
cmp
jo
xchg
dec
clc
add
sbb
fldt
cmpl
inc
iret
insl
mov
icebp
adc
movsl
aad
fdivr
jnp
push
adc
ja
idiv
mov
sti
fisttpll
mov
ret
out
mov
jo
fwait
movsb
out
sti
jmp
jge
jecxz
fcoml
mov
add
adc
mov
cmp
pop
jno
dec
in
movsb
in
jo
xor
fimull
push
into
push
dec
stos
aam
add
imul
mov
sub
out
push
adc
inc
into
icebp
xor
movsb
cmpsb
dec
jecxz
fists
popf
fucomi
mov
into
in
inc
pop
xor
push
push
sbb
jb
and
jb
cmp
aad
inc
or
push
pushf
loope
sti
or
je
js
lods
or
mov
out
outsl
cwtl
std
sbb
dec
pop
xor
out
pop
repnz
ljmp
pusha
push
mov
imul
mov
dec
pop
je
jnp
arpl
addr16
sbb
pop
std
sbb
cld
jno
inc
push
sti
jb
loopne
dec
or
push
adc
add
sbb
shrb
nop
insb
testl
adc
xor
cmc
mov
cmp
aaa
sti
sbbl
pop
es
dec
inc
pop
into
push
popl
pop
add
adc
and
inc
sbb
dec
adc
jns
adc
and
xor
inc
pop
aaa
popa
xchg
mov
xchg
icebp
jns
push
xor
sub
repz
xchg
pop
inc
xor
inc
dec
aaa
pop
push
les
jb
mov
in
lret
jmp
subl
aad
jb
aas
push
sbb
stos
xchg
pop
f2xm1
sub
loopw
cmpl
pushf
push
lahf
js
cmc
std
jmp
out
mov
fldz
lahf
mov
mov
shl
sbb
out
push
jb
or
mov
shll
jmp
ja
push
and
push
inc
insl
inc
add
mov
pusha
mov
cmp
in
lods
cmc
mov
sub
ja
jle
push
xchg
cmp
stc
movsl
push
gs
push
xchg
xchg
shlb
push
mov
popa
cwtl
ja
xor
sbb
mov
sbb
sub
imul
push
cmp
mov
push
push
mov
bound
in
or
dec
push
scas
and
sub
sti
xchg
popf
add
push
fsubr
pop
arpl
pop
jle
cmp
sbb
insl
jmp
sbb
out
jns
cmc
ficompl
nop
push
popf
xchg
fdivrl
jnp
cmc
lock
dec
pop
mov
aad
icebp
in
pop
scas
fwait
rolb
xchg
out
int3
lcall
addr16
add
aad
hlt
fucomip
mov
call
dec
cmp
nop
repnz
mov
xor
xchg
cmpsb
icebp
or
subl
add
scas
inc
in
cld
mov
and
repnz
lret
testb
sbb
xor
inc
hlt
inc
dec
mov
fwait
push
outsb
add
fidivs
or
gs
cmc
inc
arpl
xchg
data16
mov
cli
std
cwtl
sub
sbb
jmp
rol
push
dec
fdivl
pop
push
repz
xor
test
gs
mov
cmp
int
rcll
sub
int3
xchg
jo
sbb
dec
mov
sub
hlt
popf
xchg
push
pop
mov
push
sbb
aad
mov
jae
mov
call
sub
pop
les
xor
dec
lock
rcr
inc
adc
repz
jecxz
cmp
xchg
int
cli
fwait
fs
pop
loop
mov
movsl
out
test
xchg
sbb
leave
adc
test
pop
lods
outsl
push
inc
fildll
cmpsl
dec
inc
and
mov
add
jmp
push
dec
daa
or
fcompl
scas
jno
imull
test
stos
out
cli
jmp
stos
rorb
sbb
arpl
and
sub
pusha
imul
ret
outsl
mov
lahf
fsts
lret
repnz
or
outsb
aaa
add
out
dec
inc
cmp
mov
cmp
cmpsb
push
dec
pop
int
dec
xor
and
in
cs
imul
out
dec
pop
jno
iret
mulb
fstl
sub
aas
adc
mov
add
xor
rorl
inc
imul
test
loopne
xchg
test
push
aaa
and
shl
pop
dec
outsb
fwait
push
push
mov
repnz
sbb
dec
mov
clc
adc
xor
push
xchg
cmp
inc
sbb
xor
push
inc
rorb
in
push
lret
into
ljmp
mov
aam
gs
cmp
xchg
shl
sbb
inc
xchg
lods
cmp
push
gs
xchg
jbe
enter
xor
sbb
or
push
add
jmp
cmc
sbb
rorb
mov
imul
out
mov
and
sbb
mov
shl
nop
or
xchg
loope
roll
testl
sbb
push
repnz
ficoml
ret
mov
lahf
mov
shlb
mov
mov
sbb
adc
shlb
movsl
fsub
bound
xchg
jmp
add
loop
pop
mov
jnp
inc
fcompl
and
xchg
popa
pop
lea
lods
add
mov
sub
xchg
or
and
fisubrs
xor
push
fimull
mov
xor
pop
ret
stos
jns
test
fwait
jmp
clc
filds
adc
hlt
push
scas
imul
adc
pop
jmp
inc
and
inc
aad
scas
mov
sahf
or
lods
lret
out
dec
popf
add
ret
push
sub
and
mov
je
push
mov
jo
aad
mov
cmc
push
and
mov
dec
push
and
push
sub
and
lds
sub
cmpsl
lahf
mov
mov
sbb
and
adc
sbb
add
arpl
cwtl
in
push
jo
mov
add
clc
addr16
add
fbstp
mov
les
scas
pop
in
mov
xchg
pop
cmp
xchg
jecxz
mov
leave
sub
loope
pop
mov
dec
add
aad
mov
and
sbb
pop
mov
jnp
and
ja
daa
mov
in
xchg
or
lahf
js
mov
push
add
stos
popa
loop
mov
out
cmp
stc
mov
nop
push
enter
arpl
add
xchg
repnz
xor
lds
sahf
sbb
and
jnp
add
mov
or
js
hlt
test
icebp
cmp
ret
cmpb
popa
adc
jecxz
cli
mov
xor
notl
inc
jnp
mov
adcb
push
jp
out
xor
das
push
mov
ja
jle
sbb
arpl
adc
sub
fldt
divb
mov
or
mov
mov
lret
inc
jge
pop
orb
movsb
inc
dec
lock
leave
or
into
sbb
imul
adc
sbb
and
movsb
das
add
add
leave
sbb
test
push
sub
mov
mov
into
add
xor
mov
test
imul
int3
std
dec
mov
mov
and
pop
push
pop
ds
jle
addr16
jne
enter
xchg
inc
outsl
xchg
sub
inc
push
mov
push
scas
push
cld
cmc
sub
jne
in
jecxz
sub
sbb
icebp
outsb
cli
cmp
xchg
mov
insl
ret
xor
clc
adc
dec
sub
mull
xor
adc
stc
out
in
mov
pop
aam
mov
push
loope
in
cmc
add
test
adc
repnz
mov
int
xor
xor
in
sbb
aad
dec
loopne
int
fsubs
lods
mov
out
mov
repnz
push
cmpl
mov
rcr
test
rcrl
repz
mov
or
cmp
pushf
dec
icebp
sub
fldenv
faddp
fistpll
push
mov
les
adc
jns
cmp
or
call
mov
ja
cmp
cwtl
mov
mov
mov
lock
add
stos
fwait
icebp
ljmp
fstps
test
ja
dec
icebp
xor
cwtl
cmp
xchg
arpl
aas
lret
add
ret
jle
xchg
add
fildl
subb
sbb
shll
add
xchg
out
sub
pushf
pushf
add
popa
mov
and
js
mov
mov
jb
or
mov
jne
mov
adc
jns
jmp
in
inc
xlat
adc
in
in
dec
roll
or
xchg
xchg
inc
ret
dec
mov
push
jg
xchg
repz
jns
adc
or
outsl
push
mov
or
arpl
jle
shl
cwtl
stc
mov
repz
mov
mov
mov
mov
dec
add
jmp
out
ficompl
lods
mov
pushf
mov
pop
push
cli
xchg
fildl
stos
cmp
pop
jmp
mov
jae
mov
gs
inc
sub
les
push
out
in
pop
mov
xor
sar
loop
les
rcrl
mov
jne
data16
jle
fs
out
mov
cmc
mov
std
aad
rorl
mov
dec
sti
mov
mov
lock
or
adc
ljmpw
mov
sarb
sub
pop
or
push
test
ret
clc
mov
cld
repnz
cmc
ja
mov
lret
aas
das
adc
push
mov
push
fldenv
aaa
sub
jb
lods
hlt
aaa
rclb
orb
les
std
sti
addb
push
xor
dec
call
sub
fidivrs
jns
mov
in
lock
jbe
mov
adc
and
lahf
jbe
int
and
xchg
cmp
sahf
or
jecxz
movsb
into
cld
push
js
ret
xchg
xor
ss
loop
dec
insl
jae
add
mov
cmpsl
faddl
adc
sbb
lcall
sbb
arpl
mov
idivb
inc
or
subb
stc
push
ja
in
gs
ret
xchg
sub
xorb
imul
divb
add
mov
ret
sub
dec
dec
les
jne
es
push
push
xchg
clc
add
mov
or
sub
or
test
or
scas
mov
mov
sarl
clc
fidivrl
mov
mov
cli
cmc
imul
shl
or
or
cltd
sbb
jo
sub
fisttpll
testl
fs
iret
fisttpl
jp
mov
into
icebp
imul
mov
ret
in
or
icebp
in
jge
add
nopl
adc
insb
mov
xchg
cmp
rcll
repz
mov
rcll
outsl
clc
ror
es
cmp
fcoml
cmpsb
xchg
into
xchg
mov
mov
pop
jns
mov
cmp
mov
mov
and
clc
cmp
scas
je
jbe
es
pop
lret
test
jnp
dec
pop
bnd
jb
xchg
push
mov
ret
cld
dec
xchg
and
adc
roll
insb
sbb
sarb
out
adc
dec
shrb
enter
out
inc
daa
shll
adc
orb
insb
cwtl
lret
scas
inc
mov
or
out
push
push
inc
mov
or
xor
dec
mov
jnp
lea
movsl
arpl
divb
fstps
xor
inc
int
bound
push
adc
cmc
inc
movsb
push
data16
and
outsb
je
fwait
xchg
push
pop
ret
mov
movsb
sub
adc
xor
and
mov
xchg
xlat
and
pop
add
pop
pmovmskb
fidivrl
add
or
adc
mov
mov
lret
cmp
mov
add
inc
adc
cmp
jecxz
outsl
jae
loop
push
add
xchg
popa
lods
int
jp
aam
jne
clc
cmpsb
in
adcl
inc
fadds
sbb
sti
lret
insl
add
jbe
mov
or
cmp
fcmovnu
fsubs
std
sub
shrb
lods
adc
cwtl
jle
outsl
sarb
mov
dec
or
jmp
xorl
mov
pop
mov
jmp
in
adc
xchg
push
fwait
cmc
loope
lahf
stos
ret
inc
divl
adcl
inc
fsubp
mov
xor
stos
outsb
push
sbb
clc
cwtl
call
jmp
aaa
push
pop
add
arpl
pop
rcrb
cwtl
sbb
cmpsb
push
ret
clc
mov
inc
cli
push
cmpsb
xchg
push
mov
addl
or
fs
aaa
mov
inc
test
imul
jl
lret
or
push
push
dec
mov
push
fs
jno
test
jns
lods
and
hlt
xchg
lods
mov
inc
and
stc
inc
sub
popf
dec
icebp
push
adc
cmpsb
hlt
aaa
sbb
pop
in
movsb
pop
dec
test
add
lahf
lods
jne
ror
pop
fmull
dec
fwait
icebp
push
pop
addr16
push
xor
cmpsl
add
imul
or
loopne
sbb
pop
xchg
movsl
or
xchg
fldenv
jnp
push
add
cmp
push
aas
repnz
test
out
cmpb
xchg
add
cmp
push
fcmovnu
mov
mov
push
aaa
mov
pop
iret
mov
mov
mov
jl
out
jns
mov
dec
sub
arpl
sub
sbb
dec
in
testb
xchg
cmc
lock
clc
inc
jg
cmp
xchg
pusha
mov
lret
xchg
lea
insl
pop
ljmp
rcrb
daa
ss
les
sub
icebp
fdivs
aas
test
and
pusha
fwait
aam
lahf
push
inc
push
les
inc
hlt
mov
xlat
pop
mov
mov
dec
aas
mov
pushf
cmpsb
leave
mov
dec
das
mov
hlt
dec
int3
fmul
movq
es
test
push
in
add
cmp
mov
push
repz
lods
push
call
mov
imul
int
or
lds
or
push
pop
jae
in
imul
dec
dec
ds
test
rcr
pop
aaa
wbinvd
outsb
fcmovnu
cmp
call
leave
testl
and
inc
cli
loope
cmp
icebp
mov
sub
adc
push
loop
ja
in
out
js
jns
clc
stos
stc
adc
outsb
loop
mov
xor
lret
adc
leave
pop
cwtl
and
stos
sub
sar
mov
loopne
xor
rcrb
std
mov
sub
cmp
clc
adc
or
mov
lahf
lret
out
mov
fidivs
sub
inc
dec
mov
imul
xor
es
flds
and
xor
mov
addl
test
dec
dec
fs
pop
sbb
dec
mov
xchg
jo
mov
popf
sub
hlt
pushf
das
lea
faddl
lock
rol
lock
xor
push
aas
jns
in
lret
sub
mov
fmulp
negl
dec
push
lods
loope
add
mov
jns
mov
stos
add
clc
mov
mov
xchg
mov
mov
or
jbe
and
and
adc
jo
mov
es
jl
jo
or
repz
sbb
test
test
call
sub
or
insb
sub
pop
sub
arpl
mov
sub
mov
ss
test
ja
and
pop
icebp
sahf
dec
pop
cmc
mov
pop
jecxz
mov
inc
mov
mov
adc
popf
xor
adc
adc
out
lret
add
inc
repnz
out
test
lret
ljmp
mov
xor
inc
fstpt
mov
imul
and
cmp
cli
push
and
pop
adc
lds
sub
cmc
and
sbb
call
mov
mov
cmp
pop
xor
adc
sub
push
jmp
outsb
xchg
inc
adc
add
lcall
sbb
outsl
or
fndisi(8087
std
sub
mov
scas
or
pop
jbe
xlat
inc
out
jns,pn
push
pushf
decl
inc
mov
sbb
nop
jnp
out
in
outsb
lods
cmp
gs
cltd
ja
push
xchg
adc
and
pusha
and
mov
aad
in
int3
inc
adc
test
test
xchg
add
pop
icebp
imul
pop
jmp
or
fmulp
dec
push
outsb
icebp
imul
adc
test
add
push
sbb
mov
cltd
sarb
icebp
push
mov
pop
push
mov
push
test
cmp
xchg
sbb
inc
insb
fs
adc
mov
jl
sbb
and
scas
cmp
pop
and
cwtl
stos
xchg
inc
fisttpl
xchg
dec
adc
pop
lahf
loop
dec
cs
imul
aas
out
hlt
jp
int
inc
idivb
int3
push
jecxz
xchg
cltd
movsb
mov
stos
xor
cmp
shl
and
out
test
xchg
shlb
jne
xor
inc
xchg
xor
cmc
add
out
mov
iret
aaa
mov
adc
out
sahf
cld
fiaddl
ljmp
imulb
js
mov
adcl
and
xchg
mov
daa
fs
xchg
mov
stos
cwtl
jnp
sbb
insl
cld
lds
clc
popa
jae
xchg
lds
xchg
pop
adc
fcompp
test
mov
mov
pop
fnstcw
hlt
negl
mov
jge
pushf
pop
hlt
ja
divl
dec
call
std
pop
cmp
and
push
sub
sbb
push
pop
movsl
push
and
mov
jmp
jae
fistl
push
and
dec
pop
xchg
dec
out
daa
cmp
lret
jmp
inc
or
push
and
pop
adc
pop
cmp
xchg
clc
test
pop
xchg
mov
xchg
mov
mov
gs
cmp
movsb
cs
es
mov
rorb
mov
out
inc
int3
gs
inc
rorl
rolb
ret
sbb
dec
inc
adc
or
inc
iret
test
push
insb
notl
cmc
imul
pushl
add
jns
mov
fimuls
cmp
push
mov
or
sahf
adc
dec
mov
jp
call
pop
jle
inc
and
sub
pop
and
lods
dec
lea
in
xlat
ljmp
dec
dec
and
js
es
iret
outsb
adc
pop
mov
mov
testl
jecxz
or
outsb
pop
pop
cmp
clc
clc
testl
cmp
xor
xchg
mov
dec
sahf
xor
sub
mov
mov
in
popa
fs
push
leave
movsl
out
loopne
test
imul
clc
popa
xchg
nop
push
xchg
push
dec
negb
rorb
pop
adc
scas
mov
mov
loopne
xchg
mov
aaa
jp
pop
jae
inc
xchg
je
ljmp
lds
push
push
inc
stc
sti
push
push
mull
loop
pop
aaa
mov
pop
sub
pop
out
xor
sahf
sub
adc
dec
jl
cmp
aad
jmp
lods
lea
imul
adcl
sub
adc
imulb
mov
iret
imul
push
das
and
inc
stos
pop
ds
xchg
inc
push
jae
sbb
jecxz
pop
fdivp
jbe
scas
or
mov
push
fisttpll
mov
sub
stc
pop
cmc
jne
loop
jecxz
or
out
cmc
and
jne
aad
mov
test
test
jbe
loope
sub
sub
fwait
ret
scas
sub
call
dec
jl
pop
add
mov
jae
push
fdiv
xor
jg
jp
add
jnp
aam
test
or
mov
std
data16
sbb
mov
push
cltd
imul
sbb
aaa
adc
stos
jbe
frstor
fisubl
adc
int3
loope
xchg
xchg
aam
mov
pop
ja
or
xchg
push
lds
sub
inc
inc
shrl
mov
dec
mov
adc
mov
mov
lcall
and
push
repnz
push
addr16
fldl
sub
or
pop
push
cmpsb
mov
push
push
fnsave
outsl
jge
mov
cmp
sub
pop
lret
pop
and
pop
add
out
push
ret
xlat
sbb
inc
jmp
std
sbb
add
add
pop
fwait
mov
sbb
cmp
inc
int3
sbb
jmp
cmp
cmp
repz
out
mov
inc
mov
mull
pop
adc
clc
add
fldcw
and
into
je
clc
sub
jo
or
hlt
movsb
mov
lret
mov
add
iret
shr
stos
hlt
jns
push
xor
cli
bound
scas
fildl
mov
xchg
push
jecxz
mov
and
dec
mov
push
push
pop
xchg
ljmp
aad
add
clc
pop
mov
and
sbb
rorl
outsb
inc
arpl
repnz
dec
cmc
adc
testl
sbb
scas
push
push
add
ss
test
daa
inc
sbb
adc
in
adcl
popf
pop
jmp
add
adc
pop
lret
daa
push
push
xorl
ficoms
test
push
pop
stos
iret
es
cmpsl
lock
imul
pop
das
icebp
ds
pop
and
add
inc
mov
pop
cmp
es
push
test
jecxz
xchg
cmpsb
push
pop
or
call
call
adc
adc
and
andl
cmp
or
pusha
aam
fimull
outsl
dec
testl
lock
push
pop
and
dec
adc
repnz
int3
sbb
inc
idivb
dec
pop
lock
dec
adc
jecxz
fsubl
es
sbb
fdiv
jbe
sub
pop
mov
fiadds
icebp
in
movsl
cmc
mov
ret
jae
nop
test
jecxz
out
jle
add
dec
and
cmpsl
mov
jl
sub
outsl
push
or
push
lret
xchg
sbb
push
fbld
cwtl
cmp
jecxz
push
dec
shlb
or
push
sbb
jo
cmp
add
add
sub
into
xchg
mov
mov
test
jp
imul
lods
daa
or
rolb
sub
jmp
cvtdq2ps
or
cltd
sub
addr16
push
add
std
pop
lods
test
outsl
or
stc
cmp
rolb
imul
xor
fiadds
sarb
push
hlt
mov
icebp
daa
or
xchg
fdiv
jne
jmp
mov
bound
movsl
sbb
dec
das
lods
inc
inc
pusha
out
inc
xor
inc
mov
adc
movsb
cmp
int3
push
inc
push
lods
in
scas
cmp
xchg
inc
pop
cmpsb
gs
push
fidivrs
sbb
pop
or
add
test
xchg
xor
sub
xor
test
push
jge
mov
icebp
pop
adc
cmp
xchg
or
loope
pop
clc
lods
in
lock
sub
inc
sbb
shrl
sub
push
hlt
sbb
or
fdiv
fsts
pop
in
pop
push
in
xor
mov
js
adc
in
sbbb
fs
dec
add
dec
push
daa
outsl
dec
cmp
daa
daa
shlb
ret
dec
sub
es
ss
xor
sub
mov
mov
or
sti
sbb
push
rol
and
shrl
mov
and
scas
add
mov
pop
jge
push
lods
pop
push
popa
pushf
out
jns
int
adc
cmp
mov
jecxz
je
mov
push
pop
fcoms
clc
inc
sub
mov
pop
outsb
shl
enter
xor
icebp
test
cmp
imul
xor
xor
loop
pop
imul
loop
cmc
push
cmpsb
loopne
in
mov
xchg
das
xor
fimuls
inc
pop
jnp
cltd
std
cmc
adc
mov
mov
add
mull
push
push
leave
nop
ror
sahf
sub
daa
mov
int3
push
and
mov
lcall
in
repnz
test
and
cmp
xchg
push
imul
insb
setb
or
xor
out
push
jl
sbb
repnz
call
jb
repz
cs
sahf
outsb
mov
fldt
idivb
pslld
shrl
repnz
hlt
mov
out
int
ds
cwtl
fistps
jne
mov
sbb
int
call
pushf
sti
outsb
jmp
test
adc
cmp
sbb
jp
clc
hlt
or
shll
pop
clc
cmpsl
test
les
xchg
nop
dec
lahf
aam
jecxz
icebp
cmp
and
adc
adc
inc
mov
fiadds
jno
pop
jo
nop
dec
inc
aad
sbb
push
sbb
xchg
cli
andl
lahf
bnd
subl
je
fwait
push
aam
or
mov
push
xor
pop
dec
ss
loop
stc
pop
icebp
push
jmp
mov
xor
lcall
aaa
xchg
lret
sub
out
mov
divb
or
call
sub
xchg
dec
sub
leave
data16
in
loope
cmc
and
add
jbe
dec
pop
inc
cmpsb
sbb
cli
sbb
mov
int
fs
cltd
jecxz
test
lahf
mov
xlat
xchg
xchg
mov
fstps
insl
stos
inc
or
sbb
adc
mov
add
and
sti
je
inc
push
lds
fmul
dec
pop
pop
inc
jl
jl
cmp
orl
icebp
in
nop
shll
inc
mov
bound
inc
pop
cmc
push
int
adc
xlat
je
pop
pop
arpl
cmpsl
es
sub
xchg
rolb
xor
cltd
repnz
out
das
clc
loopne
push
mov
dec
xchg
lds
jno
testl
popa
int3
ljmp
rolb
cmp
jecxz
xor
enter
cmp
xchg
push
clc
mov
push
jne
daa
stos
jbe
fs
add
or
jecxz
std
jbe
pop
notl
aam
ss
inc
push
adc
push
dec
nop
subb
addr16
testl
fs
cmp
pop
add
jecxz
add
mov
dec
sbb
enter
lods
lret
aad
sbb
dec
adc
imul
pop
mov
add
inc
cmpl
daa
or
nop
cmp
aad
dec
icebp
sarb
mov
push
inc
mov
arpl
add
fistl
sub
pop
add
jo
or
mov
sahf
push
int
daa
mov
lahf
pop
add
add
orb
jno
bound
pop
adc
jmp
sbb
push
jmp
pop
dec
cwtl
inc
shll
mov
mov
xchg
jle
push
sti
es
add
pop
mov
bound
pop
inc
jbe
or
adc
ljmp
lea
xchg
cli
jns
ret
pop
in
cmovs
pop
sub
cwtl
adc
xor
es
js
fidivs
sub
iret
add
lret
push
xchg
mov
hlt
or
sub
inc
int
pop
lods
push
pop
mov
add
push
in
ficoms
fs
jnp
lahf
popf
fistps
ja
inc
push
aaa
pop
mov
push
adc
outsl
pmovmskb
add
ret
push
imull
sbb
xchg
inc
test
fisttps
push
mov
mov
fnstenv
or
stc
test
xchg
adc
mov
or
out
push
or
adc
inc
cmpsl
inc
out
in
lret
inc
aam
rcll
ss
decl
divl
and
push
aaa
jnp
mov
fwait
or
mov
nop
cli
dec
cmp
xchg
fdivs
mov
and
out
mov
insb
pop
lcall
in
xchg
xor
jmp
mov
ljmp
ficoms
cmp
jo
sbb
outsl
push
dec
jg
xchg
add
inc
xchg
add
sarl
sbb
sub
push
scas
push
cli
adc
shl
and
aam
cs
hlt
pusha
jecxz
mov
js
jp
fldcw
xchg
push
jle
in
and
inc
pop
inc
dec
pop
mov
movsl
adc
or
insl
into
pop
jb
jno
inc
mov
test
cmc
dec
xlat
adc
mov
or
add
dec
adc
out
ljmp
std
int3
push
movb
xor
rorb
das
xor
pop
pop
repz
adc
popa
xchg
in
in
jae
sarl
or
out
jp
pop
test
dec
into
adc
sbb
mov
xchg
stos
in
lods
cld
adc
loop
push
cmc
std
aam
xchg
stos
push
enter
loopne
test
btc
dec
pop
imul
out
push
add
mov
dec
pusha
mov
mov
repz
scas
jb
or
dec
push
dec
jecxz
pop
mov
cmpsl
in
out
imul
pop
and
repnz
aad
jle
push
push
pop
pop
adc
mov
pop
push
out
out
mov
and
mov
hlt
dec
lret
pop
mov
out
or
daa
fwait
xor
adc
sub
pop
jno
or
popf
jl
xor
outsb
daa
aad
lahf
pop
push
add
sub
push
sti
jno
aas
jae
pop
sbb
pop
std
xlat
jmp
pop
cmp
in
cmpsl
push
sbb
loop
and
cld
sub
gs
out
push
pop
jae
lahf
and
arpl
fsubrp
dec
clc
call
cld
stc
xor
notb
stc
and
pop
adc
dec
int
fidivl
sub
add
mov
jl
add
pop
jmp
es
sbb
add
mov
inc
push
jo
insl
cmp
mov
or
pop
idivl
jne
es
jmp
ss
outsb
xor
out
sub
cmp
sahf
out
loop
jns
xor
and
sbb
es
xchg
lods
out
pop
or
push
outsb
sub
lods
dec
xchg
mov
jp
push
addr16
repnz
sub
scas
or
adc
pop
cmc
adc
mov
orl
out
jp
push
push
popf
jnp
push
push
arpl
dec
push
lcall
ja
ds
fwait
popf
mov
inc
mov
mov
sub
jne
add
imul
pop
add
jae
cmp
hlt
mov
sub
call
cmc
lahf
scas
mov
xlat
sahf
lret
push
stos
js
das
rolb
adc
mov
pop
ds
data16
cld
cs
pop
cmp
and
jne
repz
dec
faddl
and
pop
xor
xor
push
stos
xor
jno
int
xchg
iret
rclb
xor
cmp
imul
sbb
pusha
data16
xchg
xchg
repz
jb
push
addr16
dec
jbe
sti
int
nop
push
jg
repnz
jg
add
pop
pop
sahf
ret
pop
shlb
stc
inc
stos
add
push
push
outsl
add
sbb
xchg
xchg
jle
pop
outsl
movsb
std
iret
mov
ror
outsl
out
xchg
in
mov
jne
out
lods
push
das
adc
or
add
pop
add
jno
mov
dec
lcall
xor
pop
push
fxch
fmul
sbb
jge
dec
push
push
add
lods
ss
jo
in
pop
push
ret
adc
mov
mov
or
dec
mov
cmp
xor
lea
bound
add
ret
cli
aam
mov
sbb
int3
pop
repz
clc
add
call
xor
in
fwait
mov
shlb
ficomps
jl
mov
push
sub
dec
jecxz
in
pop
pop
jne
and
incl
jge
mov
adc
pop
pop
inc
push
sahf
jo
outsl
int3
xor
mov
rolb
das
lea
dec
lcall
or
or
add
sti
push
shl
dec
out
aaa
in
lcall
shrl
xchg
pop
outsb
fimuls
sbb
push
addr16
in
fnstenv
das
sub
and
loopne
arpl
orb
dec
mov
mov
insl
negl
jp
and
sti
xor
push
jecxz
inc
push
adcl
test
push
scas
icebp
jecxz
es
dec
jbe
dec
in
idivl
lea
repz
inc
rorl
and
push
outsb
sbb
sti
jae
or
push
icebp
dec
adc
das
insb
in
or
adc
mov
test
fsub
cld
pushf
cmovns
sbb
pop
inc
dec
dec
jg
dec
add
add
das
add
aas
int
dec
je
sub
sub
jle
into
ja
adc
jecxz
xchg
dec
cmp
and
fcoml
nop
push
mov
jmp
pop
and
and
and
mov
inc
push
pop
jmp
nop
jo
jecxz
mov
jmp
and
mov
into
xchg
mov
jl
ret
inc
pop
sbb
or
xor
xchg
mov
adc
xor
or
dec
out
lret
inc
xchg
cld
mov
dec
inc
and
sub
xor
xor
add
and
pop
rcrb
leave
sub
pop
out
jle
sub
jae
jnp
dec
sbb
add
pop
mov
in
sbb
push
lock
imul
mov
jecxz
cld
and
or
xchg
adc
pop
icebp
inc
adc
jno
pop
push
adc
adc
mov
pop
add
insb
mov
movsl
popa
incl
movsb
int
out
outsb
jne
mov
push
mov
jg
or
add
and
jg
or
pop
aas
push
lods
stc
sbb
adc
xbegin
ret
pop
add
xor
and
or
sbbb
lea
nop
cmpsl
dec
filds
xor
das
mov
xor
xor
add
clc
jns
jo
xchg
xlat
sub
jl
iret
or
inc
cmc
pop
pop
inc
inc
shl
icebp
aaa
cs
insl
mov
pop
mov
mov
cmpsb
cmp
clc
sti
sub
adc
daa
sub
mov
cwtl
sarl
pop
test
addr16
pop
dec
dec
mov
adc
bound
and
outsl
sbb
pop
sub
cmp
fcoms
fwait
jl
pop
sbb
test
lock
inc
adc
cmc
fmull
std
or
popl
aam
pusha
icebp
mov
inc
outsl
pop
pop
mov
mov
pop
es
scas
inc
add
jmp
fcoms
inc
dec
rolb
xchg
pop
les
in
lahf
cld
imul
mov
add
mov
jns
xchg
mov
ja
lock
pop
js
sub
lds
add
mov
fdivs
mov
jecxz
outsb
jnp
sbb
mov
imul
xchg
outsl
add
movsl
or
mov
pop
xchg
jnp
sti
in
es
lret
movsl
xchg
std
inc
repnz
mov
mov
xlat
cld
jno
lret
hlt
push
aad
es
std
or
sbb
dec
fsts
push
cltd
scas
hlt
jmp
into
cld
dec
aam
mov
stos
arpl
sar
scas
inc
sub
xchg
das
enter
add
insl
ss
mov
push
push
mov
push
adc
shlb
out
das
push
xlat
xor
mov
aad
pop
int3
jecxz
scas
sub
cmpsl
arpl
pop
cmc
add
cmpsb
cmp
mov
int3
aas
push
dec
adc
not
cvtdq2ps
pop
sub
add
test
dec
xchg
fimuls
fmull
sarb
fistpl
mov
dec
addr16
les
or
mov
sub
adc
aaa
cmp
xchg
sti
push
out
push
out
popf
fcoms
jmp
cmc
mov
mov
stc
clc
pop
bound
lock
xchg
push
lcall
arpl
enter
dec
in
loopw
mov
outsb
pop
and
cmp
mov
sbb
shrb
arpl
cmp
out
fucomip
jo
mov
inc
lret
mov
pop
insb
loope
adc
jg
ret
add
pop
pop
mov
sahf
dec
mov
adc
sbb
repnz
mov
add
sub
add
cs
jg
jecxz
dec
cmp
loop
jno
ljmp
cs
ljmp
popa
out
jge
aam
cli
movsl
loop
rcrb
push
int
dec
je
fldl
xchg
das
push
sub
adc
adc
mov
pop
sbb
inc
rol
lods
and
and
push
add
jo
mov
cmp
lods
cli
pop
fsubrs
cmp
cmp
loope
push
sbb
inc
repnz
jnp
cmp
je
cmc
push
out
aaa
inc
das
jle
cmp
popf
push
add
pop
mov
aam
push
adc
lcall
or
dec
jl
shlb
stos
mov
cmpsl
add
adc
je
mov
add
repnz
aam
dec
adc
and
sub
adc
es
xchg
pmovmskb
sub
rclb
xor
cmpb
add
mov
sbb
xchg
and
sbb
loopne
xchg
addl
mov
jl
xor
push
movsl
aad
dec
xor
std
icebp
mov
fsubs
sti
in
sub
das
std
int3
pop
and
mov
mov
push
pushf
out
scas
pushf
xlat
fcomip
jns
xchg
out
mov
gs
sbbl
iret
jns
arpl
xor
shll
ljmp
ss
or
sub
sub
dec
add
mov
popf
jl
pop
js
pop
or
pop
cmpsb
mov
adc
les
sub
mov
mov
test
add
lods
mov
xchg
jnp
jo
es
das
insl
insb
cld
std
adc
push
xchg
mov
cmp
cmpsb
outsb
adc
fsubrl
sbb
cmp
ss
add
mov
push
lahf
jne
sub
mov
push
dec
loopne
mov
pop
cmp
pop
testb
lds
mov
sti
icebp
pop
rcll
sbb
push
dec
and
ret
adc
stos
pop
cltd
xrelease
cmp
sub
icebp
add
cmc
divb
mov
mov
and
sub
in
adc
lea
test
jp
adc
jns
ja
out
jp
daa
push
in
mov
popa
outsb
sbb
ljmp
mov
pop
push
jecxz
dec
xchg
or
cmpsb
dec
cli
and
je
insb
mov
rclb
sub
and
sbb
push
jae
dec
cli
repz
popa
insb
out
rcrl
inc
mov
mov
dec
jb
jg
test
clc
pop
ljmp
adc
pop
and
push
xchg
xor
lea
aam
outsb
std
sarl
sub
ja
add
xor
sti
jbe
popa
and
cmp
push
leave
and
icebp
lret
push
stos
push
repz
xor
push
outsl
sub
dec
xorl
mov
push
or
and
std
andb
mov
rorl
mov
mov
lcall
outsb
sti
push
in
sub
pop
pop
nop
mov
leave
pop
mov
mov
pop
clc
fdivrp
dec
cmp
jo
iret
dec
lods
xchg
push
xchg
inc
adc
xchg
xchg
cmpsb
adc
lret
stos
ds
mov
cmp
cmc
jb
lds
sti
sub
aas
stos
xor
dec
sbb
mov
aad
cmp
ds
out
jno
xchg
sub
add
push
push
pop
add
gs
leave
push
rclb
xchg
and
jge
fistpl
and
flds
mov
cs
fdivr
xor
in
inc
and
jl
add
sbb
aas
mov
cmc
shrb
mov
mov
mov
adc
mov
sub
xchg
adc
mov
mov
jbe
cmp
pop
xor
cmpsl
int3
xor
es
sahf
and
jle
divl
cmp
popa
jge
sbb
ret
or
nop
daa
add
lret
push
ljmp
pop
add
jo
fimull
sub
cli
pushf
lds
sbb
outsb
pop
aaa
add
testb
jae
push
lods
outsl
icebp
push
mov
dec
push
pop
sub
add
inc
hlt
inc
in
pop
add
push
out
decl
sbb
cs
dec
ret
sbb
xor
pop
sbb
data16
ficoml
dec
jg
ffree
je
dec
imul
movsb
ds
stos
inc
and
out
jle
imul
jo
in
cmc
jl
stos
in
mov
dec
inc
fcomip
sbb
repz
cmp
dec
and
xlat
push
in
mov
or
fs
sub
xchg
xor
add
lods
call
in
out
pop
div
sub
dec
daa
loope
inc
or
cmp
jns
int
je
mov
fidivrs
cmpsb
xor
sub
hlt
jecxz
adc
xor
jno
adc
xchg
push
adc
mov
mov
adc
fdivl
push
xor
xor
lock
lock
data16
inc
push
imul
test
notb
data16
lods
push
xor
popa
jb
jmp
dec
xor
or
in
movsl
mov
add
push
ljmp
int
and
jb
pop
cwtl
mov
and
out
cmpb
sbb
mov
jge
arpl
ljmp
fsub
push
adc
cmp
addl
pop
loop
mov
test
shrb
in
in
stc
subb
cltd
fstpt
xchg
pop
lahf
dec
xchg
fadds
fildl
pop
pop
inc
lds
lahf
jno
cmc
jmp
addr16
dec
scas
je
or
sub
push
jne
sub
inc
mov
out
into
sbb
dec
cli
xchg
dec
add
pushf
leave
jmp
or
and
mov
push
mov
push
inc
fidivl
roll
mov
push
mov
aaa
pop
in
mov
cmp
push
jae
sbb
inc
leave
sub
fcompl
adc
dec
outsb
aas
jecxz
shlb
jmp
pop
adc
std
mov
push
push
aas
loope
shr
sbb
jp
fld
mov
pop
movsl
es
test
popa
loopne
lahf
xchg
in
je
cltd
insl
push
add
lods
shrb
jnp
stos
out
je
addr16
outsb
xchg
sub
pop
inc
mov
xchg
pusha
xlat
andb
and
jno
push
icebp
out
push
xchg
cmp
sbb
pop
movsl
out
jmp
push
pop
repz
xchg
push
aaa
in
mov
or
addr16
out
cli
or
xchg
inc
cmpsl
mov
dec
jnp
lret
xchg
lods
add
pop
cmp
xchg
xlat
je
adc
test
sti
sbb
cmp
fs
lock
inc
push
pop
cli
pop
notb
not
popa
gs
dec
in
inc
sbb
add
cmp
adc
xchg
push
lret
mov
jp
sqrtps
mov
fs
xchg
jmp
cmp
ja
cmpsl
test
sub
rclb
inc
idivl
sbb
pop
imull
scas
mov
lea
das
dec
in
adc
gs
test
sbb
sub
leave
or
call
jnp
bound
mov
mov
and
jne
sub
pop
out
mov
in
mov
sbb
or
mov
dec
add
and
repz
push
dec
fs
loopne
add
jbe
ljmp
rorb
cmp
mov
mov
hlt
mov
fsubl
jne
imul
loop
mov
mov
xchg
xchg
add
sub
jb
cmp
dec
rcl
cmp
pop
xchg
cli
lahf
clc
or
js
cmpsb
pop
cmp
pusha
mov
ds
mov
sub
scas
sbb
jne
inc
sbbb
pop
pop
jmp
jbe
push
pop
or
inc
pusha
das
sarl
cmpsb
add
sub
jecxz
lret
mov
xlat
testl
sub
loopne
cltd
std
movsb
nop
mov
dec
arpl
pop
minps
push
adc
sub
test
sbb
mov
mov
mov
aad
stos
js
sub
pop
mov
inc
shll
mov
insb
test
inc
mov
and
into
movsb
js
xchg
testl
popa
rolb
sub
and
popa
mov
ret
mov
scas
loopne
cld
pop
pop
xchg
mov
shl
and
pop
lret
push
sbb
aaa
sub
or
lcall
adc
push
fidivrl
sub
cmc
cmpsl
jle
pavgw
jns
lods
mov
sub
pop
and
cmc
lods
push
fwait
xchg
mov
leave
in
mov
push
les
add
mov
mov
jno
xchg
je
pop
mov
inc
and
add
fwait
push
push
sbb
and
inc
mov
aaa
jns
fildll
cmp
mov
imul
std
or
pop
leave
fmulp
ud1
repnz
aam
stc
repz
ljmp
cld
or
pop
scas
pop
lcall
icebp
jmp
jl
bound
xchg
xchg
stos
or
rorb
cli
dec
xor
enter
lods
xorb
cs
loop
xchg
imul
inc
out
sub
imul
lods
push
out
mov
cli
clc
insb
cmc
cld
inc
int3
out
cmp
lahf
jns
pop
adc
call
dec
mov
in
sahf
mov
xchg
ja
jg
cwtl
mov
in
shll
addl
cltd
mov
push
adc
sub
push
and
mov
mov
sahf
inc
popa
test
imul
movsb
imul
add
xor
test
lods
xor
lret
or
xchg
pop
adc
jnp
icebp
stc
cmp
jl
int3
cmp
or
hlt
fstl
mov
adc
andb
push
and
daa
jnp
or
sub
sti
stos
adc
lods
popa
mov
xor
fmul
mov
es
sti
cmp
mov
in
in
in
int
jl
mov
cli
push
aam
cmc
push
jg
clc
or
jmp
or
cmp
rcrl
cs
cwtl
iret
add
stos
mov
pop
mov
daa
jmp
test
jb
mov
push
and
aaa
sahf
cmp
iret
insl
add
adc
jp
mov
sbb
mov
repnz
mov
jns
repz
sbb
or
out
or
in
adc
dec
out
and
repz
xor
and
movsl
pop
xchg
cmpsl
outsb
push
add
sbb
push
daa
xchg
xor
dec
loope
stos
sub
and
lods
out
pushf
push
hlt
or
cltd
or
imul
bound
outsl
stos
lahf
hlt
add
inc
dec
sbbb
push
xor
cmp
adc
dec
mov
mov
ljmp
pop
shlb
dec
sbb
fldt
push
xor
cld
push
jb
push
jmp
jnp
fldt
pop
fstpl
test
xchg
mov
sub
ds
movsl
sbb
js
insl
daa
jmp
mov
das
adc
adc
mov
outsb
mov
xor
xchg
cmp
rorb
mov
mov
fiaddl
insl
out
out
dec
sti
jb
jge
andl
repnz
test
sub
sub
fcoml
cmp
xor
mov
mov
addr16
into
inc
scas
call
push
adc
ret
ss
lods
dec
push
cmp
push
sub
sub
or
push
cmp
out
icebp
or
ss
sarb
test
dec
cmc
out
lea
mov
push
mov
dec
jl
jnp
push
mov
test
cltd
hlt
int
fldl
mov
bound
js
ss
out
inc
mov
addb
in
jge
or
push
mov
movsl
test
sti
push
shrl
dec
xor
in
push
jne
cmp
outsb
movsb
cmp
xor
cmovno
test
or
jle
sbb
fistl
dec
das
lods
jmp
arpl
cs
lock
out
mov
jl
fcmove
ficompl
pop
cmpsl
mov
addr16
out
or
outsl
mov
repz
sub
push
jo
inc
inc
jle
xchg
jb
or
pop
add
mov
test
mov
pusha
repnz
cmp
adc
or
add
lret
dec
cwtl
pop
cmp
and
pop
lahf
dec
mov
cmp
cli
or
pop
popa
jns
add
into
ds
or
stos
addr16
cmp
sub
mov
arpl
mov
dec
adc
xor
push
inc
popa
mov
dec
divb
push
fcoml
fimuls
add
mov
and
adc
cli
or
sbb
adc
imul
pop
pop
jl
pop
adc
push
and
in
test
aaa
push
test
popa
xor
mov
test
in
call
lret
decb
dec
fidivrl
movsl
add
into
inc
cmpsl
xor
dec
push
ljmp
sub
cmc
add
dec
outsl
lea
xor
jns
mov
push
sti
dec
aaa
sbb
adcb
imul
sub
xor
add
in
ss
jge
dec
pop
sbb
adc
dec
mov
jecxz
loop
pop
cmp
stc
icebp
mov
add
pop
aad
fistpll
stos
jl
sti
sub
and
cmpsl
aaa
stos
xor
xor
cmp
fwait
lods
pop
mov
or
mov
and
cld
add
pushf
push
fidivl
push
shrb
pop
mov
ss
xchg
xor
push
sbb
movsl
dec
or
pop
mov
or
inc
xor
stc
pop
es
adc
pop
push
xlat
push
repnz
aaa
pop
mov
xor
cmp
fwait
cmp
add
add
cmp
add
push
lods
pop
ljmp
ss
add
xchg
out
daa
daa
jnp
ficoms
dec
add
pcmpeqw
inc
sub
sub
cli
add
pop
jne
into
inc
cmp
lock
push
subl
mov
push
inc
xor
icebp
call
repz
pavgw
mov
push
xchg
inc
mov
add
push
lahf
xchg
dec
cmpsb
testl
sbb
out
and
dec
fistl
or
mov
jecxz
sbb
push
clc
xor
push
test
fwait
ja
shlb
out
wrmsr
xor
or
jne
xlat
in
aas
cmpsl
sbb
xchg
push
icebp
sbb
and
inc
cmc
out
mov
push
outsb
imul
xchg
dec
xchg
pop
xor
sbb
jne
adc
inc
xor
std
ja
rclb
push
mov
pop
xchg
inc
in
add
ja
sub
mov
mov
xchg
cs
sahf
insl
mov
jecxz
xor
xchg
fldcw
pop
xchg
mov
pop
dec
jp
addb
sub
std
or
int
cli
cmp
clc
repz
loop
mov
fistpll
xor
iret
pop
pop
aaa
vpshufd
cmc
addb
fs
inc
or
mov
in
imul
xchg
mov
negb
shlb
out
xor
inc
sahf
mov
jp
adc
dec
push
cli
mov
repnz
xchg
sub
ret
ficoml
mov
aad
sub
popf
imul
leave
pop
or
out
pop
fs
jl
xchg
cmp
or
div
in
in
adc
mov
and
cmpsb
sti
loopne
cs
xor
mov
fcoml
lret
push
aam
lcall
pop
adc
dec
fs
inc
xlat
fcmove
out
push
sbb
push
inc
push
repnz
jecxz
xchg
daa
in
sbb
cmp
test
imul
dec
sbb
mov
jl
sbb
adc
jno
ss
ss
ret
cs
ds
das
lcall
mov
stc
jge
push
std
push
sbbl
sub
popa
mov
or
sbb
fistps
jne
lret
out
negb
popf
mov
mull
xor
stc
xchg
sbb
cs
es
mov
cmp
cmc
in
mov
stc
xchg
xor
dec
pop
sbb
jecxz
sub
into
xlat
push
stos
das
lret
in
lea
add
es
mov
daa
jnp
bt
int
dec
sbb
dec
cmc
xchg
push
jb
jle
cmp
dec
arpl
out
into
sub
fstps
sub
rcr
adc
inc
inc
and
movsl
hlt
lea
sti
cmpl
addw
jo
pop
outsl
rcl
cwtl
push
stos
pop
data16
lea
xor
add
sub
add
mov
adc
popf
lcall
movlps
sub
or
inc
sbb
or
jne
insl
mull
add
jle
mov
xor
cmp
les
sub
clc
add
std
sahf
add
call
adcl
lcall
out
mov
push
push
outsl
dec
push
es
pop
push
sub
hlt
aam
enter
jle
mov
loopne
das
repz
mov
and
adc
stos
adc
test
push
in
adc
and
nop
out
dec
pop
in
shll
lcall
stos
or
cmp
mov
sbb
cmp
fstpt
pop
jecxz
jmp
jg
mov
push
cltd
mov
cmc
pushf
cmp
xor
cli
dec
mov
dec
sbb
jmp
jae
push
add
or
pop
test
adc
nop
arpl
adc
mov
jbe
lcall
mov
aas
ja
aad
fisubl
or
movsl
mov
fsubrp
or
js
xor
imulb
fnstcw
add
mov
lock
push
pop
jg
cli
xchg
pop
imulb
insl
gs
dec
push
xchg
xor
pop
loop
and
insl
test
cli
mov
cwtl
add
enter
adc
jge
ljmp
rcrb
push
paddsw
adc
ljmp
and
and
xchg
ja
mov
mov
in
jp
cmp
adc
add
xchg
cs
aas
jnp
jg
aas
xchg
mull
mov
mov
popf
inc
mov
jge
sbb
iret
nop
mov
dec
imul
out
pop
add
inc
fwait
outsb
push
xor
out
xchg
loope
push
out
bound
jp
cld
mov
repnz
test
stc
fstpt
mov
xor
les
or
in
dec
push
push
mov
adc
cmp
dec
sbb
scas
jmp
sub
cmovnp
dec
mov
sbb
int3
lahf
mov
pop
insl
lea
and
xchg
adc
dec
sbb
ret
test
jp,pn
mov
in
jnp
add
inc
inc
inc
or
ljmp
outsl
jno
add
push
mov
jo
jl
adc
inc
cmp
xchg
or
or
pop
lods
stc
shll
lods
lds
xor
int
dec
and
jne
inc
mov
pop
xlat
iret
fildl
bsf
shll
lret
mov
mov
in
testl
push
adc
cmc
xor
jp
cmp
push
sti
push
or
aaa
push
fwait
push
mov
adc
mov
loop
or
jge
mov
dec
sbb
jl
popf
and
jno
jnp
adc
pop
fcoml
jge
mov
and
or
push
pop
adc
or
inc
push
mov
outsb
xor
dec
and
in
fisubl
add
mov
sub
out
outsb
psubw
jo
inc
int
mov
cmp
mov
adc
push
pop
sarl
adc
mov
jecxz
mov
es
xchg
push
add
data16
sti
mov
lcall
pop
lret
mov
nop
outsl
jns
xor
mov
jb
mov
ss
subl
clc
sbb
cmp
xchg
push
mov
fimuls
or
testl
je
jae
or
das
aas
faddp
es
cmp
mov
sub
dec
sarb
inc
insb
cmp
movsl
fsave
inc
out
outsb
jae
xchg
and
lods
and
imulb
mov
sub
pop
jnp
xchg
xchg
aaa
outsb
inc
xor
fsts
dec
fidivs
xor
clc
mov
les
fwait
out
ret
ficoml
ja
arpl
pop
push
ret
rcrb
das
push
es
call
sub
into
repnz
int3
or
push
xchg
mov
xchg
add
xchg
mov
movsl
outsl
shll
dec
rorl
dec
jnp
stos
adc
ficoms
movsb
arpl
mov
test
pop
outsb
and
jg
orb
or
imul
xchg
and
shr
sub
movsl
ja
adc
push
popa
cmp
dec
dec
pop
dec
test
jbe
popf
stos
pop
mov
add
sub
imul
adc
es
adc
roll
test
sub
rcrl
xor
adc
jl
push
out
mov
cmp
les
jle
sbb
push
lahf
loopne
imul
xchg
movl
mov
xchg
aam
or
jbe
sbb
mov
mov
add
stc
sbb
add
xchg
mov
testb
mov
push
pop
nop
pop
fdivr
adc
xlat
cmpsb
inc
mov
add
lods
jbe
aam
fbld
into
es
cmp
and
scas
push
cmp
cmpl
shl
add
xor
clc
std
pop
pop
and
dec
push
xor
popf
mov
aam
jge
fsubp
cli
fs
push
push
adc
push
sub
lret
repz
shrl
xor
and
sbb
mov
jmp
add
cwtl
pop
push
je
mov
add
or
dec
push
add
ljmp
push
mov
dec
push
icebp
push
cltd
in
mov
in
sub
lods
popf
cmpsb
stc
daa
add
int
add
test
push
jl
cmp
jbe
das
and
jmp
add
sub
pop
jb
pushf
shrl
dec
leave
add
and
aaa
loope
out
scas
in
outsl
mov
xchg
push
pop
shrl
adc
mov
jbe
outsb
dec
add
fistpll
add
clc
into
push
jno
icebp
or
fisttpl
or
sbb
stos
mov
shlb
leave
pop
sarb
xchg
jp
cmc
loop
push
fldz
testl
adc
icebp
xor
mov
add
jmp
lret
push
mov
out
sub
push
call
sti
cmp
inc
mov
shrl
jne
jmp
xor
push
stc
add
sbb
ret
sar
xchg
insl
or
pop
js
add
cmc
out
push
mov
repnz
jns
popa
pop
push
outsl
lret
rolb
and
add
je
mov
add
rcl
lcall
pop
pop
cli
push
out
or
movl
push
adc
test
sub
aaa
push
mov
mov
aaa
push
mov
xorb
jecxz
xchg
ja
mov
adcl
lret
adc
fnstenv
jmp
adc
sti
insb
fildl
roll
ret
dec
jns
pop
jnp
push
jo
aas
dec
ja
mov
mov
push
clc
sub
cld
leave
fiaddl
addl
loopne
in
out
lret
call
lret
sub
clc
rcrl
inc
rolb
daa
pop
or
jecxz
mov
xlat
leave
xchg
cmp
mov
or
mov
into
aaa
sub
sub
cs
dec
ljmp
pop
pop
cli
cmp
jnp
sbb
cmpsb
pop
cmpsl
add
mov
das
sti
push
mov
js
or
lret
adc
stos
push
pop
and
mov
out
pop
or
push
ss
xchg
cmc
push
adc
and
pop
sbb
adc
testl
icebp
sub
push
outsb
cltd
mov
push
pop
roll
add
ret
mov
dec
faddl
loop
adc
sarl
jno
xor
cmp
jmp
dec
or
cmp
cmpb
mov
xor
add
daa
stos
loopne
dec
cmp
ljmp
sub
inc
or
fs
xor
xor
mov
ja
pop
stos
rcrb
aaa
jmp
push
int
sbb
sub
xchg
pop
inc
int
ljmp
jmp
daa
iret
aaa
push
stc
cmp
dec
es
sti
imulb
xor
mov
js
addr16
push
xor
int3
sub
ja
sbb
sub
add
notb
aaa
out
in
adc
clc
out
gs
test
les
ljmp
outsb
adc
test
jl
add
add
push
shlb
jno
pop
jecxz
nop
inc
pop
or
dec
lahf
in
pop
and
ja
pop
out
xor
push
add
std
sbb
inc
adc
sub
pop
cld
sub
cmc
inc
pop
sbb
sub
push
cmp
je
in
sbb
push
sub
cmp
add
outsl
inc
inc
pop
and
pop
mov
repnz
add
add
inc
mov
dec
es
ljmp
adc
mov
fimuls
andl
cmp
inc
dec
pop
lret
mov
adc
inc
mov
push
shr
push
ficompl
mov
fisubs
mov
ret
jbe
push
aas
leave
mov
shll
push
into
mov
xor
jp
push
arpl
lds
pop
test
dec
inc
sub
sbb
imull
aaa
leave
xor
pop
mov
add
mov
insb
jbe
inc
add
jmp
mov
fisttps
cmpsl
push
mov
pop
divb
lret
xor
add
mov
fbstp
mov
push
leave
sub
mov
cs
or
ss
in
stos
xor
or
into
hlt
mov
cmp
sbb
mov
add
imul
ljmp
xor
add
dec
das
sbb
out
adc
sbbl
lcall
addr16
sub
fwait
lods
add
push
push
aas
xchg
leave
daa
hlt
lds
imul
mov
sub
je
sbbl
outsl
fbld
mov
mov
pop
shrl
mov
and
dec
jno
jbe
imul
out
dec
shlb
daa
aam
dec
shll
out
add
mov
out
sbb
mov
imul
filds
jle
lret
cwtl
push
xor
divl
adc
push
push
pop
lock
dec
out
push
mov
pop
cmc
imul
fld
je
cwtl
addb
jg
stos
push
xchg
and
push
push
cmp
dec
add
cmp
xchg
xchg
adc
icebp
xlat
dec
mov
out
sbb
in
iret
dec
lods
outsb
test
sbb
dec
mov
popa
cmp
push
ja
loop
mov
add
and
mov
incb
xchg
rcrl
stc
rclb
iret
pop
xor
sti
inc
xchg
stos
int
out
dec
fwait
adc
cmp
enter
xchg
push
add
loop
out
neg
sti
scas
adc
int
add
xor
aam
jecxz
mov
nop
add
in
dec
lods
cld
fidivrl
jge
or
cmp
mov
in
loopne
rdtsc
lcall
jge
cmp
iret
and
loopne
ljmp
mov
xchg
les
add
cmpl
sbb
add
pushl
mov
xchg
and
mov
push
inc
sbb
enter
add
jmp
pushf
or
push
add
aaa
dec
adc
lock
imul
repz
jnp
dec
arpl
ret
cmc
sub
daa
xchg
pop
data16
and
in
mov
push
push
jno
icebp
inc
sub
pusha
scas
pop
pop
inc
outsb
out
insb
loop
bound
or
mov
pop
jle
pop
inc
sti
out
jp
sub
imul
out
cmc
nopl
or
ss
call
sub
outsl
in
inc
pop
arpl
out
sub
fbld
add
xchg
nop
xlat
mov
or
fmuls
das
sbb
jg
mov
mov
or
iret
add
bound
jecxz
add
push
shl
outsl
add
xchg
mov
scas
xor
push
pop
lods
lds
sbb
dec
push
pop
lahf
jge
std
jns
ds
mov
test
hlt
aaa
cmp
out
add
sub
rol
test
mov
jo
and
nop
dec
add
inc
neg
dec
push
mov
pop
fs
mov
push
adc
sbb
mov
pop
mov
cwtl
shlb
sbb
xor
lock
cltd
sub
sub
in
push
insl
repnz
or
add
pop
add
in
add
dec
lods
add
test
pop
ret
in
call
stc
mov
cmp
roll
mov
aaa
loopne
sub
and
push
sbb
push
cmp
into
inc
daa
push
pop
push
loope
mov
out
aaa
clc
loope
push
pusha
jb
adc
fldl
hlt
xchg
mov
cmp
lahf
push
xor
add
sub
xor
inc
icebp
into
mov
pusha
cmp
stc
adc
mov
push
jbe
xchg
mov
push
cmpsb
add
cmp
stc
mov
imul
negb
and
lds
leave
lret
rcrb
xor
loop
jmp
out
data16
or
xchg
or
fdivrl
pop
aas
cltd
and
cmp
adc
lock
pop
ret
pop
lock
test
inc
lcall
inc
std
xchg
adc
aas
inc
stc
jl
adc
aam
adc
clc
adc
mov
mov
add
mov
repz
scas
sbb
inc
int
xchg
adc
dec
cmp
in
dec
clc
add
iret
out
icebp
mov
stc
sbb
add
add
daa
xchg
inc
js
sahf
movsb
fcom
pop
adc
inc
divl
pop
mov
sti
pop
mov
sub
rcll
cmpsl
push
mov
fsubrl
test
popf
and
jne
mov
nop
fadds
sub
or
cmp
test
std
out
mov
xor
enter
and
dec
and
mov
inc
sub
in
test
cmp
aad
or
pop
push
dec
push
xor
cli
cmp
addr16
rolb
adc
and
bound
jecxz
jge
stos
inc
jo
jns
and
divl
push
xchg
sbb
push
fldt
adc
fcmovu
shlb
mov
sbb
pop
gs
mov
add
je
add
jge
cld
lock
cmp
push
sub
bound
sbb
sbb
xor
ret
add
xor
and
mov
sub
or
cli
repz
in
cmp
cli
pop
aad
jmp
mov
push
testl
rcrb
out
or
fimull
cltd
or
adc
mov
ljmp
pop
mov
loop
jp
mov
lcall
adc
adc
mov
jle
hlt
js
sbb
arpl
mov
adc
add
daa
cmp
imul
lds
imul
insb
pop
and
mov
loop
and
in
in
mov
out
mov
xchg
sti
fbstp
add
pop
mov
mov
add
sbb
jge
outsb
call
or
int3
lods
imul
pushf
movsl
add
stos
rcrb
outsb
fistpl
mov
add
mov
out
imul
in
add
dec
aad
cli
jns
test
sub
divb
dec
mov
push
fldt
incl
outsb
fucomp
push
out
int3
and
scas
out
pop
fs
and
gs
lcall
sbb
and
fwait
in
push
loopne
imul
push
imul
fcomps
dec
orb
bound
cs
mov
add
add
pop
aad
sti
roll
jg
adc
xor
lcall
std
inc
mov
cmp
mov
mov
or
sub
cmpsb
pop
cmc
add
pop
repnz
jnp
sub
adc
xor
adc
jnp
loopne
add
in
jae
pop
sub
jne
sbb
jecxz
add
fcmovu
jp
or
imul
jg
andb
jmp
jmp
dec
cmp
outsl
or
int3
jg
push
push
adc
add
test
iret
pop
repnz
cmp
adc
sbb
inc
or
mov
mov
inc
movsb
data16
sti
repz
in
inc
lods
cmp
loop
cwtl
push
in
or
jecxz
repnz
dec
xor
ficomps
sti
sbb
push
int
cmp
negb
cmp
push
es
jns
mov
pop
xor
mov
and
xlat
arpl
cli
std
cltd
sub
mov
shr
sbbl
stos
ljmp
andb
and
int
sbb
mov
jmp
or
cmpsl
ljmp
xlat
lcall
aad
pusha
addr16
lods
jecxz
xchg
mov
push
push
andb
insl
mov
pop
add
push
or
inc
int
out
movsb
js
pop
mov
push
dec
xchg
stos
push
fistpll
pop
scas
das
in
sub
test
mov
mov
adc
test
imul
loope
in
or
imul
and
int
ret
not
xor
mov
mov
xchg
jmp
adc
lret
repz
dec
sti
dec
sbb
sarl
and
sbb
dec
out
es
sbb
std
lcall
xor
cwtl
inc
data16
cmp
out
sbb
lret
sbb
cmp
jmp
es
mov
mov
inc
int
xchg
cmpsb
es
or
push
clc
inc
into
lahf
inc
jns
fisttpl
mov
dec
in
fisubrs
adc
cmp
bound
leave
xchg
pop
xchg
cmpsb
xor
inc
sub
cmp
dec
jecxz
cmp
sbb
xchg
xchg
jo
js
mov
dec
loop
jbe
push
push
gs
ss
cmp
adc
adc
and
imull
sbb
pop
inc
mov
pop
call
cs
sbb
and
mov
imul
or
imul
aas
pop
loopne
push
lods
cltd
add
sarb
and
cli
addr16
aaa
fldl
pop
insl
in
daa
dec
mov
or
add
mov
into
lret
mov
repz
cld
addr16
notb
insl
inc
sahf
mov
test
into
xchg
xchg
mov
vmread
pop
adc
imull
dec
lret
idiv
repnz
in
add
push
adc
mov
out
mov
mov
xchg
cltd
xchg
cltd
stos
pop
js
xchg
jnp
pop
negb
int
mov
cmp
aas
je
add
lds
or
loop
cmp
dec
addl
mov
mov
cmp
leave
sahf
aas
pop
jns
je
adc
push
inc
hlt
sub
repnz
sbb
cmpsl
movsl
xor
pop
insb
pop
out
popl
xchg
pushf
xor
or
loop
xlat
imul
cmp
popf
lds
push
movsl
adc
adc
jcxz
loop
push
out
and
mov
mov
lea
lods
pop
outsb
xchg
pusha
cs
iret
xor
xor
jmp
insb
popa
out
lea
ret
out
xor
testb
push
and
inc
xor
popa
rdmsr
adc
sub
push
mov
add
outsb
sub
or
sbb
push
out
xchg
fnstenv
jno
ss
push
fisttpll
push
mov
mov
push
push
push
inc
pop
rep
mov
cmovl
lcall
xchg
aad
mov
xchg
xchg
adc
cmp
aaa
xchg
repz
roll
ljmp
das
cmp
or
or
add
pop
outsb
mov
add
push
inc
aaa
jmp
mov
cmp
es
xchg
ficomps
in
inc
sbb
push
sbb
jle
inc
js
es
stos
push
jnp
dec
es
pop
rcrb
insl
ds
insl
push
es
or
aam
xor
add
add
mov
std
mov
sbb
dec
popa
push
mov
stc
sti
sbb
cmp
cmp
xor
pushf
adc
shlb
push
out
loop
ret
sahf
pop
push
adcl
cmp
pusha
ret
add
pop
popf
dec
fcoml
xchg
imul
jno
dec
jle
js
sub
dec
mov
pop
ja
mov
dec
out
jae
insb
fwait
xor
setp
idiv
cld
jae
lahf
jno
out
xor
in
cwtl
aaa
rcrb
stc
sub
mull
sti
xor
mov
xlat
mov
lods
mov
push
fdivrl
scas
ljmp
fbld
cmpb
call
repz
push
hlt
filds
int
rol
aaa
int
cmp
out
mov
add
pushl
or
mov
inc
inc
and
inc
push
xchg
out
sbb
cmp
pop
bound
call
sub
imul
popa
and
std
mov
mov
inc
sbb
sarb
loop
pop
dec
add
xor
jo
movsl
scas
mov
ret
aam
jmp
jecxz
loop
jp
aam
xchg
add
xchg
fstps
ficoms
call
jno
pop
cld
xchg
adc
dec
movsl
xlat
lea
sbbl
sti
enter
and
and
cmp
dec
pop
dec
mov
adc
xchg
sbb
lret
cmp
into
outsb
out
xor
fs
repz
clc
lcall
aad
xor
fisubs
flds
leave
push
inc
jo
cmp
xor
data16
insl
push
lahf
decl
adc
cld
dec
in
out
jnp
sub
icebp
push
dec
push
sbb
pop
xchg
lea
dec
pop
pop
sub
inc
sbb
mov
inc
aad
jp
scas
inc
xorl
mov
shll
test
cld
imul
jle
pop
das
add
lods
movsl
push
push
pop
cli
fcomip
or
out
push
adc
repz
dec
xchg
adc
dec
xchg
inc
repz
sti
pop
orl
outsb
icebp
mov
lods
sbb
jmp
cmp
ss
loop
mov
xchg
push
frndint
andl
mov
pop
mov
push
inc
fdivr
inc
and
in
in
mov
mov
push
shl
dec
insb
mov
and
push
mov
sbb
add
pop
mov
inc
inc
test
stos
cli
sub
leave
mov
sub
int3
sub
mov
std
jg
idivb
stos
lret
dec
mov
jle
jp
mov
mov
xchg
dec
dec
adc
les
push
sub
lea
cmpsb
rclb
hlt
fstpl
ss
cld
jo
adc
add
add
in
xchg
jb
adc
add
in
imul
sbb
shrb
pusha
cmp
sbb
test
scas
in
add
in
fstpt
jae
xchg
jle
test
push
jo
add
cli
popa
sahf
push
out
push
push
ja
dec
dec
mov
dec
cmp
pop
js
jp
pop
push
outsl
inc
xchg
push
movb
and
xchg
pop
mov
daa
xchg
js
or
decb
mov
call
rorb
cmp
push
xor
dec
jae
ljmp
push
lret
jmp
sarl
sub
jp
xor
pxor
jno
aaa
out
dec
aaa
inc
cmc
sub
sbb
test
loop
lea
cmpxchg
push
lcall
mov
in
adc
mov
adc
jb
dec
dec
pop
and
dec
sub
pop
pop
xchg
out
notl
aad
pop
cwtl
aad
push
jbe
xchg
decb
cwtl
in
push
test
and
cwtl
cmp
pop
jnp
iret
cld
out
sub
ljmp
lcall
outsl
cwtl
add
adc
inc
aaa
cmp
dec
and
fwait
push
inc
and
insl
gs
cmp
sub
pusha
sbb
lds
enter
lods
outsb
aaa
xchg
xlat
adc
test
xchg
imul
sub
in
aaa
adc
repz
dec
push
xchg
add
or
arpl
inc
push
call
inc
shll
cmp
fs
aaa
sub
in
ds
jecxz
fisttps
sarl
adc
mull
outsb
outsl
adc
loop
faddl
mov
jne
adc
pop
dec
sub
aas
or
out
adc
adc
pop
or
divl
lds
ret
and
jmp
pop
mov
popa
pop
xchg
insb
cmp
cmp
push
les
in
jns
adc
fdivrs
add
out
cmc
push
sub
xchg
mov
push
push
sub
stos
inc
decl
xor
rcll
imul
inc
js
jl
sahf
pop
pop
lods
inc
pushf
xchg
jbe
les
loopne
mov
addr16
outsb
fwait
xor
addr16
je
cmp
cmpsl
data16
int
dec
pop
repnz
jns
dec
aad
or
cmp
decb
inc
dec
and
mov
jmp
push
stos
mov
hlt
hlt
imul
jmp
push
and
xor
mov
pop
mov
ret
sbb
mov
add
jle
mov
mov
sub
daa
push
dec
sbb
fidivrs
inc
add
shlb
stos
pop
or
mov
insb
enter
xlat
xor
jp
sub
dec
mul
or
fists
xor
sbb
xchg
dec
mov
jns
and
mov
stos
push
popf
mov
mov
lods
in
pop
das
jno
jecxz
push
and
or
sbb
add
lock
dec
fstpl
fwait
inc
push
mov
rcrb
repz
sbb
mov
je
fidivrs
or
adc
xchg
outsl
xor
xchg
push
and
sub
dec
cmp
fimull
jge
jne
mov
mov
and
flds
cwtl
insb
pop
jge
and
dec
fs
jno
push
add
adc
data16
push
pop
insl
aas
or
test
mov
pusha
push
mov
adc
into
sub
sbb
pop
cli
stos
jnp
or
push
pop
hlt
insl
out
loopne
lds
stos
fistl
xor
fldt
and
ret
sbb
jae
sbb
xor
pop
rolb
mov
outsb
xor
xor
pushl
cmp
aaa
xor
sub
test
aad
add
scas
mov
mov
fidivs
or
fisubrs
adc
xchg
rolb
xor
pop
scas
pop
subb
loopne
addl
mov
out
popw
mov
jns
xor
add
jmp
inc
ja
xchg
gs
cmp
inc
dec
adc
jg
dec
mov
dec
repz
out
push
popf
negl
and
xchg
mov
enter
dec
test
sbb
adc
mov
pop
pushf
fisttps
sbbl
lds
pop
jbe
dec
out
jle
in
adc
data16
pop
or
xor
and
pusha
aad
mov
pusha
decb
xchg
fstps
movsl
lods
js
mov
sub
jecxz
stc
pop
hlt
mov
div
cld
inc
in
mov
nop
cltd
pop
aad
add
ds
jp
add
in
mov
and
fimuls
push
int
dec
or
lods
stos
mov
fnstcw
shll
addb
out
pop
xor
push
push
pop
add
movsl
sub
sbb
repz
addr16
cmp
jnp
movsb
sbb
iret
cmp
lea
xchg
or
xchg
rcr
jge
iret
insl
add
mov
nop
add
aaa
rolb
push
xor
xlat
inc
xchg
cmp
cmpsb
jnp
in
sbb
xchg
dec
mov
loop
jmp
fwait
inc
pop
lret
icebp
dec
adc
lds
lods
push
pop
das
cmc
sub
cs
pushl
sbb
and
push
or
inc
icebp
repnz
in
insl
fcoml
mov
inc
notb
inc
mov
pop
jle
and
add
shll
sahf
pop
stc
mov
and
pop
xor
cld
pop
std
lods
in
or
push
xlat
pop
in
hlt
dec
sbb
in
xchg
fwait
pop
leave
jae
hlt
add
cmc
jns
sbb
mov
push
cmp
pop
jno
xchg
repnz
rol
xor
imul
testl
jg
cs
outsl
loopne
into
xchg
pop
push
xchg
rcll
adc
js
movsb
cli
andb
lods
cli
mov
push
sbb
out
adc
into
hlt
shlb
dec
andb
inc
lret
and
lds
xor
push
and
imul
push
pop
adc
inc
sub
test
iret
mov
xor
push
into
enter
js
cwtl
in
adc
mov
jb
js
outsb
add
jmp
xchg
ss
mov
mov
mov
sub
clc
adc
adcb
and
cmpsl
xchg
ds
call
sar
push
jl
popa
sbb
andb
enter
repnz
dec
in
ja
or
pop
shlb
sbb
out
frstor
lods
jbe
addr16
repnz
dec
add
or
jg
lret
jg
pop
xor
testb
or
stos
xor
sub
test
sbb
cmp
rcrl
loop
push
and
cwtl
shrb
lahf
or
sub
and
dec
clc
inc
fadds
dec
inc
mov
outsb
js
cmp
inc
js
mov
mov
mov
movsl
push
adc
negb
push
xchg
stos
push
cmp
xor
adc
stos
in
fwait
lds
out
fucomi
xchg
repz
push
fnstcw
pop
mov
cmpsb
push
aaa
idiv
lods
out
sti
bound
cmp
ss
push
mov
cli
xchg
in
adc
cli
cmp
adc
ret
fwait
fs
rolb
adc
adc
fimuls
or
and
dec
ss
cmc
jb
and
pusha
idivb
jmp
and
jo
sbbl
sbb
mov
pop
mov
sbb
pop
repnz
pop
pop
sub
shlb
push
out
fisubl
jl
jl
les
sbb
mov
and
test
push
shrl
sub
or
jle
jg
loop
sbb
mov
fsubrl
imul
mov
in
lcall
cs
lods
mov
cmp
pop
sbb
push
xchg
cs
cli
pop
imulw
xchg
in
stc
jmp
add
push
fwait
jne
push
push
nop
fldcw
xchg
xchg
in
jbe
test
rorb
icebp
xor
inc
adc
inc
xor
and
inc
mov
lcall
add
dec
rcll
fs
dec
rorb
outsb
inc
sbb
adcb
lahf
test
or
cltd
push
mov
or
add
enter
adc
in
add
cltd
test
adc
call
stc
jecxz
movsl
cmp
outsb
xchg
std
in
jnp
sarb
xchg
in
or
mov
mov
or
repz
sub
leave
in
repnz
fistl
out
mov
adc
lret
mov
lds
arpl
ret
xlat
mov
xor
jmp
hlt
jo
insl
cmc
push
or
cs
sub
in
adc
in
sub
imul
std
inc
outsl
adc
ds
mov
fmull
xchg
rorl
push
fmulp
mov
pop
out
bound
adcl
sbbb
adc
add
inc
es
pop
push
and
add
test
int
mov
shlb
push
dec
inc
add
pop
sub
setp
ret
jge,pn
jecxz
jp
lahf
add
sub
add
pop
shl
mov
push
ret
push
xor
add
roll
clc
pop
shl
fucom
cmp
and
fcmovnbe
push
in
aaa
test
xchg
pop
ficomps
in
loope
xchg
push
aad
fwait
cmp
ficoms
sbb
pop
hlt
iret
pop
cmpsl
add
dec
and
pop
jecxz
in
sub
add
pusha
ret
sti
adc
dec
daa
js
outsb
sbb
or
pop
add
jo
div
sbb
jae
mov
jp
sub
out
sub
mov
or
dec
jg
jae
xchg
sbbl
adc
imul
cmp
lcall
mov
pop
pop
sbb
out
inc
out
dec
push
xor
std
or
pushf
or
call
xor
adc
fs
and
xchg
push
in
addr16
stc
sub
lds
aas
inc
dec
or
cmp
jne
or
in
xchg
push
outsw
mov
fwait
xor
pop
add
out
lock
bound
sar
insb
clc
std
aam
sub
inc
and
fisubrs
or
dec
cmc
sbb
loopne
mov
in
mov
ds
insl
arpl
mov
sub
arpl
jbe
stc
pop
push
aad
jp
cs
shlb
xor
in
dec
jnp
std
stc
mov
pop
stc
sbb
xchg
mov
in
inc
cmp
or
inc
fwait
arpl
fisubrs
cld
xlat
shrb
int3
and
lcall
push
lods
jg
outsl
dec
aaa
call
inc
ds
mov
xor
xor
sbb
xchg
cli
xchg
push
fs
aaa
dec
xor
pop
rcll
arpl
fsubr
ds
dec
inc
inc
xor
jns
adcb
bound
aam
or
xlat
mov
or
dec
jecxz
mov
sub
fcoms
negb
adc
mov
jmp
and
xor
and
clc
adc
dec
sbb
shrb
test
mov
xor
push
pop
xchg
ja
jmp
data16
lods
jle
mov
movntq
or
ficoms
mov
jae
dec
fnstcw
gs
inc
jbe
sti
and
or
das
xor
fisubl
xchg
push
pop
adc
inc
scas
xchg
in
out
add
pop
decb
dec
push
mov
stos
sub
cmp
pusha
bound
dec
push
jns
shl
pop
iret
add
sub
sub
push
sbb
stos
xlat
mov
or
xlat
push
in
mov
sbb
hlt
jle
insb
pop
and
push
pop
mov
out
xchg
ljmp
outsl
and
fnsave
in
inc
and
jmp
dec
xchg
in
pop
mov
cld
inc
mov
cld
imul
fldenv
or
sbb
test
xchg
cmp
insb
test
mov
jle
dec
pop
out
cs
or
pushf
mov
sahf
jecxz
in
xor
push
aas
add
add
stos
pop
int
sti
fcomp
mov
pop
add
adc
xor
pop
pushf
pop
xor
cli
inc
outsl
sub
loopne
lahf
out
into
and
mov
adc
push
stc
cltd
xchg
xor
ja
jle
adc
out
push
cmp
pop
sub
movl
sbb
xor
push
add
or
fiaddl
xor
jl
in
lret
push
out
je
sbb
mov
and
inc
mov
xlat
xor
xchg
fisttps
test
xchg
cmp
je
inc
pop
and
dec
test
aaa
add
jp
cli
int3
inc
pop
jg
stos
sbb
popl
in
push
js
stc
inc
sub
lcall
jb
ja
dec
add
repnz
push
leave
icebp
xchg
jno
pop
jmp
decl
fs
out
leave
sbbb
cli
pushf
pop
call
lods
in
sbb
mov
xor
inc
or
cld
push
hlt
outsl
xor
cld
xchg
sbb
aad
lds
or
mov
out
cld
sbb
and
push
popf
adc
daa
pop
sub
adc
out
gs
and
xor
in
sbb
int3
test
daa
add
push
fidivrs
fs
mov
fsubl
aaa
push
enter
mov
mov
dec
lahf
jae
push
je
or
ljmp
sub
or
lret
push
das
sub
iret
or
mov
inc
pop
push
mov
push
lea
lods
int
or
mov
adc
xor
loop
cmp
mov
mov
fists
cli
stos
sbb
dec
mov
repnz
xchg
xor
pop
xor
dec
mov
sbb
push
xchg
add
icebp
mov
xor
mov
out
mov
into
std
sbb
scas
in
add
in
stc
jns
cmp
sbb
push
push
cs
fdivs
and
mov
pop
xchg
dec
mov
dec
sub
push
cmpsl
loop
adc
int3
mov
loope
jb
mov
icebp
sbb
shl
testb
mov
adc
movsl
adc
sbb
hlt
mov
dec
test
lret
pop
aas
jle
addr16
push
add
cli
xor
in
lret
mov
cld
lret
sbb
shll
js
mov
movsl
orb
jmp
push
loope
aaa
dec
adc
xor
mov
sub
sbb
xor
lods
rol
dec
scas
cmp
sub
mov
push
sub
xchg
in
push
jp
aam
call
repnz
jle
ret
push
mov
or
mov
gs
arpl
popa
mov
out
sub
inc
sbb
ds
sbb
cmc
sbb
pop
roll
jbe
movsl
inc
xchg
arpl
mov
notl
jge
lahf
cmp
std
push
aas
sub
mov
and
sti
or
pop
mull
and
lods
mov
out
fnstcw
mov
out
and
out
fisubs
in
or
sub
push
test
popf
mov
cwtl
outsb
repnz
xor
dec
dec
fsub
adc
js
leave
pop
push
ss
and
mov
xor
pop
push
sub
out
pop
xchg
xor
pop
push
dec
or
mov
jns
in
pop
mov
and
mov
pop
jecxz
sti
mov
pop
hlt
out
outsl
pop
movl
xlat
cwtl
add
sbb
push
sbb
into
divl
shl
cltd
lods
and
es
loope
lret
inc
arpl
sbb
out
divl
psubsw
les
aam
push
sub
out
cwtl
mov
sar
jno
dec
pushl
jl
cltd
adc
mov
lcall
mov
emms
sub
jg
push
popa
jge
in
xlat
movsb
je
sub
int3
fcompl
mov
into
add
mov
jb
xor
adc
lret
pop
std
mov
or
or
dec
fstpt
cmp
in
fiadds
sbb
mov
daa
lock
xor
and
mov
gs
adc
icebp
out
ljmp
push
loopne
dec
add
or
sbb
jecxz
sub
xor
aas
jle
jl
setae
push
push
fstpt
test
pop
ja
loope
ret
lcall
push
jg
loope
cmc
mulb
in
inc
or
loop
test
testl
jl
in
sbb
into
in
lods
dec
out
xchg
dec
jecxz
aaa
adc
cmp
lea
notl
repz
arpl
dec
pop
cld
lea
cmpl
mov
dec
imul
pop
or
scas
dec
vmovdqa
push
or
dec
sub
dec
xchg
subb
jecxz
scas
fdivrl
pop
xor
inc
xchg
sar
aas
mov
mov
pop
xchg
xor
pop
clc
add
pop
adc
mov
adc
call
cmp
add
repnz
sub
xor
push
push
loope
dec
jg
pop
push
xchg
and
dec
dec
mov
mov
dec
inc
xlat
lcall
cmp
mov
out
inc
and
or
lahf
and
gs
mov
xor
add
mov
adcl
lods
or
shll
out
mov
sub
xchg
mov
stos
in
cli
adc
loopne
and
jb
hlt
imul
icebp
mov
jno
rclb
movsbl
inc
les
dec
je
idivl
lods
out
idivl
testb
fsubl
les
dec
cmpb
call
aaa
adc
inc
pushf
repnz
mull
cmovl
lods
fcmovnb
jecxz
rorl
fs
fmull
jbe
jp
add
adc
sub
sbb
fbld
jl
in
jnp
fistpll
mov
xlat
fists
aam
jle
jbe
arpl
pop
pop
add
dec
std
sbb
mul
mov
gs
adc
or
in
test
inc
inc
mov
xor
fwait
rcl
ret
add
lahf
popa
movsb
or
lret
add
movsb
movsl
in
add
or
out
ss
pop
mov
popa
std
cmp
ljmp
je
or
out
and
lods
pop
push
mov
xor
add
stos
or
outsl
in
int3
sbb
push
adc
mov
xchg
jecxz
mov
inc
or
testl
sbb
test
call
mull
add
fucomi
add
pop
xor
mov
mov
into
jmp
mov
inc
jmp
scas
mov
xchg
fisttps
adc
fisttpl
es
cmc
mov
push
pop
adc
inc
pop
jnp
inc
mov
jge
pop
inc
xor
movsl
sbb
fcomps
dec
ficoml
add
mov
add
jl
add
pop
mov
add
jmp
pop
xor
jmp
jb
aas
xchg
je
into
xor
xor
push
jae
adc
sub
push
jl
cwtl
adc
add
push
daa
add
mov
je
inc
add
cmp
cmp
mov
add
pop
out
lea
xor
xor
aad
cmp
out
push
mov
xor
or
lea
add
cvtpi2ps
adc
jl
imul
lret
push
ror
out
jecxz
addr16
jmp
fstp
outsl
adc
push
std
repz
and
cmc
add
xchg
cwtl
xchg
pop
adc
int3
sub
gs
es
and
mov
lret
xchg
xchg
adc
lds
and
ss
out
jnp
aad
mov
shl
fs
push
mov
mov
mov
iret
test
out
fwait
cmp
aas
xchg
flds
mov
cmp
movl
mov
out
xor
mov
xchg
xor
es
sbb
pop
mov
les
mov
dec
xchg
or
cmc
or
jnp
cmp
push
sbb
test
xchg
mov
lret
mov
push
inc
je
adc
add
pop
jbe
dec
push
mov
inc
mov
xor
aaa
andb
pop
sub
imull
pop
push
add
jns
movsl
cltd
lahf
mov
lock
xchg
adc
xor
out
mov
jge
aam
sbb
cmc
jne
rcrb
sbb
xorb
lock
push
pop
cmp
stos
pop
push
push
cmp
lret
sbb
ds
xor
jecxz
cmp
ja
jmp
pop
or
xor
data16
jge
xlat
push
in
add
xchg
popa
adc
lret
data16
fists
test
arpl
xchg
repnz
es
mov
cs
mov
fbld
jb
insb
inc
sub
into
insl
xchg
clc
cmp
popf
xor
aam
in
push
push
add
int
lods
repz
into
mov
daa
mov
cmpsl
inc
and
and
or
incl
xor
push
jecxz
aas
dec
pop
jl
lret
pusha
pop
lret
sarl
cmpsl
int3
dec
lahf
arpl
mov
fstl
loop
xchg
sbb
loop
daa
notb
repnz
stos
xchg
pop
mov
jle
cld
mov
mov
pop
fdivr
clc
mov
push
cld
cwtl
xchg
xor
stos
cmp
daa
pop
sbb
popf
int
dec
mov
adc
add
pushf
jo
pop
pop
xor
lret
pusha
add
test
mov
pop
xchg
call
adc
pop
es
cmp
pop
inc
and
outsl
aad
cmc
jnp
xor
mov
jmp
arpl
mov
std
out
push
add
lcall
push
ljmp
notb
jl
fstps
xchg
setnp
negb
or
pop
notl
pop
xchg
mov
mov
jg
sbb
shlb
insb
mov
cmp
fimull
lahf
adc
movl
inc
movsl
jmp
xor
add
rol
jno
and
xor
or
cs
push
aam
lods
push
fwait
cmp
cmovnp
mov
pop
cs
pop
popf
iret
and
xchg
jl
rcrl
ss
mov
pop
ja
xchg
in
iret
dec
xor
cmp
pop
mov
imul
lea
dec
ret
imul
or
imul
mov
push
xor
outsb
pop
and
icebp
fnsave
cld
daa
sub
ds
jmp
dec
popa
imul
jp
pop
sarl
push
and
pusha
out
inc
leave
or
sub
push
adc
mov
sbb
add
xor
xchg
stos
mov
push
sbb
inc
cmp
push
in
notb
fsubp
into
test
cmc
rorb
push
imul
dec
xor
mov
cmp
fdivrl
sub
fsubrp
fdivr
xor
sub
movsb
cmp
movsb
cmp
hlt
inc
mov
pusha
test
push
pop
jg
cmpl
xor
es
mov
fisubs
sub
jl
inc
mov
out
jecxz
adc
int
shlb
mov
xor
subb
frstor
and
and
stos
icebp
inc
sbb
sbb
xchg
mov
cltd
sbb
mov
popf
inc
fld
jbe
iret
shll
push
cwtl
xchg
jle
xchg
and
sahf
repz
mov
ret
mov
imul
repz
sahf
in
and
xor
sarl
hlt
andb
int
pop
adc
inc
jle
movsb
xor
aaa
pop
cmpsb
jb
sub
dec
and
mov
aad
mov
sbb
dec
orb
push
cmp
fsub
cmpsl
fmul
out
push
xlat
outsl
push
test
repnz
xlat
jns
mov
pop
dec
out
xor
lahf
cwtl
jnp
js
sbb
jbe
iret
xor
loop
fiaddl
dec
jle
adc
jbe
xchg
mov
push
cmp
in
sub
inc
pop
push
or
inc
add
cmp
lcall
push
pusha
jbe
iret
sub
cli
fimuls
icebp
fidivs
pop
call
sbb
insl
jg,pn
jae
scas
xchg
add
in
cs
shrb
shr
mov
cwtl
in
ret
repz
pop
jmp
or
jecxz
data16
pop
psadbw
add
push
add
outsb
dec
pop
push
mov
push
jne
adc
out
push
push
pop
aaa
lcall
push
pusha
adc
and
cs
loop
jno
insb
jp
ljmp
das
push
faddl
mov
or
fsubrl
iret
das
rcrl
fstpl
filds
push
out
cli
mov
xchg
clc
jb
pop
daa
xor
mov
xchg
jb
popa
mov
and
dec
mov
stc
mov
pop
sub
sbb
inc
cld
mov
or
shlb
jecxz
mov
ret
xchg
mov
jge
nop
mov
xchg
sbb
and
dec
lret
aad
or
mov
ficoml
ficoms
lds
xchg
sbb
test
push
mov
fisttpll
push
mov
imul
stos
xlat
testb
lret
jne
cmc
js
pop
iret
repnz
mov
push
sub
gs
jns
mov
mov
inc
out
nop
dec
or
push
fdivr
adc
sub
sti
sub
out
mov
pushf
xchg
outsl
dec
mov
sub
and
call
push
pusha
xchg
in
ret
out
push
outsb
mov
sti
pop
cmp
cmc
and
stos
sbb
jl
pop
das
mov
pop
testb
js
sti
dec
outsl
ljmp
adc
mov
push
jo
dec
jae
test
out
movsl
mov
cmp
adc
sarb
cmc
out
mov
pmuludq
push
std
mov
mov
fdivp
add
nop
jbe
cs
shlb
xchg
add
xchg
sub
mov
mov
sti
and
ljmp
popa
out
mov
fninit
mov
sub
lea
in
cli
push
cmp
or
scas
adc
popl
inc
inc
adc
ljmp
push
test
pop
mov
into
cmp
hlt
dec
les
int
inc
ss
jo
mov
jge
sbb
insb
mov
push
mov
dec
stc
inc
jne
jmp
inc
div
addr16
sub
cltd
out
adc
mov
lahf
jg
in
fiadds
jmp
bound
es
pop
out
fmul
scas
mov
fisubrs
fldl2e
stc
pop
aad
les
cmp
or
mov
adc
ss
fistpl
sub
hlt
push
jg,pn
dec
sbb
xchg
pop
pop
adc
and
bound
call
pop
add
in
adcl
fildll
arpl
or
sbb
sub
bound
fsubs
lcall
sbb
mov
pop
jo
sbb
fadd
pop
lahf
sbb
mov
cld
aam
std
or
sbb
dec
push
lock
xchg
and
jge
xlat
inc
rolb
mov
into
dec
les
and
std
push
sbb
add
and
mov
mov
subb
cmp
or
mov
adc
pop
pop
sub
dec
es
jmp
jb
fbld
mov
pop
out
iret
push
fadd
and
and
push
fcompl
scas
out
sbb
cmpsl
sti
insb
xor
repnz
in
insl
or
and
cwtl
push
pop
scas
or
mov
jb
xchg
es
push
cmpsl
rol
adc
icebp
fwait
sub
pushf
mov
dec
scas
cwtl
lds
mov
stc
jae
xlat
shll
fcmove
sbb
into
xchg
out
lock
dec
push
outsb
or
jge
jecxz
scas
cmpsl
jb
mov
adc
xchg
push
dec
mov
xchg
and
jnp
sbb
xor
icebp
and
jl
aaa
out
add
into
and
stc
loopne
mov
leave
mov
mov
push
lahf
xor
mov
push
cwtl
aaa
test
mov
addr16
inc
sub
pop
inc
mov
jns
push
lret
mov
call
push
mov
sbb
not
leave
sub
mov
push
cmpsl
sub
fistpl
push
popf
dec
cmp
inc
ret
mov
dec
sbb
test
in
stc
push
xor
mov
sub
mov
cld
loop
cltd
ljmp
push
or
mov
stc
cltd
fldenv
and
push
fs
jbe
in
jge
xchg
js
xor
lock
fs
out
cwtl
cmp
iret
jno
mov
cmpsb
movsl
testl
inc
lret
adc
mov
in
pop
xor
jae
dec
test
cmc
movsl
icebp
cmp
pop
pop
mov
lds
sub
or
fldt
add
xor
aad
test
xchg
into
mov
xor
lds
push
fmul
add
iret
cmp
adc
xchg
rorl
cmp
push
fists
iret
inc
inc
pop
inc
es
sbb
leave
lret
in
jl
inc
in
cwtl
ret
icebp
in
lcall
mull
jne
or
pusha
jmp
js
ds
hlt
adc
hlt
sarb
sti
repz
cmp
dec
sbb
and
sti
mov
gs
pop
sti
adc
sbb
add
test
icebp
aas
ret
or
dec
test
cmpsb
pop
out
pop
push
ds
fdivr
mov
fstpt
or
lret
cld
add
sbbb
call
and
or
mov
dec
jecxz
push
jae
out
adc
xor
andb
repz
add
ds
mov
push
shrl
xchg
mov
jbe
out
mov
jmp
movl
scas
mov
xor
mov
fdivs
fsts
je
xor
testb
jo
xor
jno
ds
out
mov
mov
cmpsb
xor
push
mov
jge
sbb
mov
sti
or
fisttps
sbb
cmp
inc
mov
ret
loop
sub
sub
add
inc
xchg
jp
stc
ret
fildll
add
add
mov
addr16
cmc
pop
push
jno
or
out
inc
mov
inc
jmp
jp
adc
into
icebp
xor
test
in
adc
outsl
jb
lcall
or
pusha
mov
pop
push
in
mov
xchg
cwtl
fists
dec
pop
lcall
in
dec
fstpl
xchg
lock
or
add
fnstcw
js
insl
jl
loopne
inc
ret
les
je
out
cmp
cmpsl
pop
xchg
andl
jmp
stos
shl
dec
push
xchg
pop
pusha
mov
pop
mov
ficoms
out
in
sub
pop
loope
add
xor
xor
sbb
inc
adc
sub
xchg
cmp
inc
xchg
pusha
outsl
js
jecxz
nop
dec
cmovge
scas
pop
add
pop
jmp
div
dec
pop
xchg
or
and
outsl
mov
jbe
addr16
sbb
or
filds
divb
dec
xchg
mov
adc
push
and
int
test
push
xor
cld
sbb
sbb
or
rolb
and
call
lds
or
dec
cmpsl
nop
ss
or
fidivl
dec
pop
ss
mov
lret
pop
addl
mov
fdivr
jge
pop
int
sbb
add
cli
push
push
mov
dec
outsb
sub
lds
xchg
test
cmp
das
sub
cmp
popf
ret
sub
das
mov
inc
mov
mov
mov
jmp
pop
or
mov
cmp
cwtl
rcrb
xlat
pop
mov
addr16
inc
sub
inc
cmc
mov
das
out
test
aaa
popa
fcoml
dec
push
addr16
jb
cwtl
jbe
adc
inc
cmp
pop
xchg
cld
aam
popa
adc
les
xor
inc
pop
aaa
pop
add
mov
ret
and
jmp
jbe
cmp
mov
fdivs
pushl
cli
mov
cmp
xchg
scas
sub
pop
fdivp
shr
icebp
out
or
adc
push
in
mov
stos
ds
mov
jmp
or
pop
add
dec
test
push
fiadds
xor
dec
ljmpw
decb
ret
inc
sbb
sub
xor
jecxz
icebp
paddb
push
shlb
xor
xchg
cld
push
add
shll
pop
or
dec
aas
xchg
lods
pop
jl
xchg
mov
lcall
sub
fsts
iret
jmp
jp
push
sbb
add
or
jg
pop
or
cmp
push
or
fbstp
stos
cmc
pop
cmp
icebp
nop
cmp
jb
hlt
dec
cmp
testl
dec
cmp
divl
nop
aaa
and
in
out
dec
ficomps
popf
loop
test
add
sbb
hlt
je
mov
and
stc
mov
lcall
adc
push
lods
add
push
dec
roll
push
ljmp
std
les
add
or
pop
sub
sub
xor
into
cs
cmp
scas
adc
shll
lea
das
and
fsub
push
test
add
shlb
fnstenv
jge
fyl2x
test
inc
add
dec
negb
int3
inc
xchg
jne
call
and
pop
cli
xor
rorb
push
ljmp
daa
and
cwtl
dec
int
pushf
xor
fstpt
jae
out
int3
popf
jae
mov
xor
and
std
inc
xchg
sbb
adc
dec
stos
and
and
inc
xor
aaa
int
sub
pop
dec
xor
cmp
pop
jecxz,pt
dec
mov
orl
aaa
outsb
push
sbb
cmpl
add
gs
pop
add
dec
jmp
sti
sbb
mov
je
jge
adc
push
leave
push
dec
inc
dec
mov
outsl
adc
add
fidivrl
mov
sub
rclb
sub
jg
insb
xor
ja
shr
mov
and
loopne
in
pop
popa
inc
lret
hlt
scas
insb
nop
call
mov
push
and
push
xor
inc
int3
jnp
cltd
add
mov
jg
and
cmp
and
fcoms
and
rcll
in
test
or
pop
push
and
pop
or
xchg
xchg
and
fistps
lea
scas
jp
or
mov
add
faddl
paddusw
cmp
xor
add
es
adc
inc
sbb
out
hlt
xchg
mov
cmp
sub
or
rolb
mov
cli
add
loopnew
xchg
mov
dec
pop
jbe
or
arpl
inc
adc
push
int3
shll
scas
mov
loop
aaa
mov
lds
ja
push
mov
push
lods
fdivl
lahf
pushf
pop
mov
adc
xchg
or
add
xchg
sub
jnp
cmp
cmp
push
pushf
sbb
fiadds
dec
sub
xor
inc
test
stos
f2xm1
rolb
jnp
xchg
sahf
inc
hlt
add
call
or
add
adcb
ds
xchg
enter
xchg
hlt
dec
das
cmpsl
pop
fistps
mov
dec
clc
dec
xor
loope
insb
repnz
fucomip
dec
outsl
arpl
inc
and
sub
aam
rcrl
and
fildll
in
xchg
dec
stc
inc
insb
jbe
jae
xchg
add
scas
fwait
push
adc
insb
es
cli
cmc
movsl
ds
jmp
add
inc
enter
or
push
add
sar
cmpsb
jp
mov
out
xchg
cmpsl
testl
ret
mov
stc
xor
popa
push
jmp
jle
das
scas
mov
outsl
in
fdiv
fs
sbb
lods
jl
push
ljmp
call
mov
push
push
test
jo
push
mov
fnstsw
jbe
loopne
xor
das
lea
cmp
cmp
cmp
imull
xor
inc
sub
notl
addr16
cmp
or
inc
jb
xchg
push
sub
dec
in
outsb
xchg
inc
cmp
aad
bound
dec
sub
jmp
jmp
icebp
pop
jmp
push
rcrl
repz
push
pop
das
mov
cmp
mov
sub
rcll
cmp
je
jge
imul
push
lods
shrl
or
into
outsb
dec
out
dec
daa
stos
mov
add
bound
sbb
pop
xor
jl
push
or
out
xor
sbb
clc
xorl
add
mov
les
lods
sub
xchg
push
or
fildl
jno
dec
add
mov
mov
mov
mov
aad
sbb
sbb
pop
cmp
addr16
push
rcrb
add
cli
popf
fldenv
dec
xchg
loope
mov
pop
push
out
xchg
sbb
xchg
test
mov
roll
arpl
add
aad
in
inc
iret
jecxz
xor
rcl
loope
xchg
call
mov
adc
dec
call
fnsave
mov
inc
sub
fidivs
sub
pusha
in
fistpll
jbe
xchg
insl
aam
adc
pop
mov
inc
push
addr16
mov
out
xchg
xchg
in
in
rcl
jne
dec
in
popf
ficompl
lar
dec
pushf
add
pop
std
out
sub
pop
ss
cmpsb
xlat
adc
adc
mov
add
xor
lret
push
cld
bound
push
movsb
dec
push
es
sub
int3
and
daa
repz
jecxz
jo
jecxz
imull
aam
in
in
add
inc
and
in
in
add
popf
andb
sbb
sbb
test
mov
cmp
daa
or
bound
adc
add
in
les
cmp
imul
loope
enter
fidivs
fidivrs
into
cmp
int
aam
mov
dec
cltd
outsb
mov
push
or
fadds
into
mov
inc
pop
addr16
fcmovu
jp
fmull
push
dec
sbb
stos
adcb
cmp
or
call
sbb
ror
repz
pop
jp
ss
adc
fiaddl
mov
inc
inc
jge
sub
data16
cmc
cli
scas
rcrb
jecxz
jp
jns
xor
pop
xlat
addr16
aaa
adc
add
lods
push
xchg
mov
rorb
adc
into
jge
icebp
fnstcw
loopne
stc
hlt
into
sbb
js
mov
dec
stc
cmp
pop
xchg
cli
mov
into
bound
cmp
ja
cmp
sti
xchg
or
adc
movsl
jl
fisubl
push
xor
sub
pop
lods
cli
cli
lcall
stos
idivb
stos
dec
mov
data16
sbb
pusha
push
iret
into
push
dec
aad
jne
out
lret
jg
xor
insb
dec
push
aam
cld
sarb
ljmp
sbb
std
cli
stos
push
lret
dec
or
cmp
mov
jae
and
jae
fiaddl
push
jb
loope
cmp
ss
adcb
adc
movsl
fisttpll
xor
mov
mov
sub
out
sub
mov
push
test
push
fistpl
pop
jge
sub
fld
pop
sub
notl
insl
iret
or
xor
push
mov
lcall
ds
lods
mov
arpl
ljmp
xchg
lret
sub
into
call
iret
or
mov
es
sbb
vmwrite
mov
leave
push
pop
xchg
mov
xor
or
rorb
rclb
mov
cli
aas
in
mov
jae
fldt
push
in
pop
mov
push
sub
add
push
pop
divb
pop
push
insb
mov
mov
ja
push
std
jmp
inc
and
fs
insl
add
int3
out
mov
xchg
in
mov
sbb
xor
scas
or
popf
hlt
add
fmuls
ficompl
fdiv
cwtl
data16
fimull
scas
into
push
pop
and
sbb
lea
in
sbbl
test
push
or
push
pop
push
mov
fidivs
pop
ret
clc
pushf
or
jle
std
fidivl
lods
je
adc
mov
sub
test
nop
loop
jae
in
enter
jge
iret
add
jg
orl
cmc
xor
xor
notl
sbb
sbb
cs
lods
fnstsw
adc
jne
in
sbb
loope
pusha
adc
andl
cmp
mov
stc
xor
pop
adc
push
cmc
fldenv
lcall
addr16
and
cmp
out
clc
mov
emms
sub
int
dec
rcrb
lcall
mov
js
lods
fsubrs
out
cmpsb
divb
ret
pop
xchg
es
cltd
fnsave
sbb
or
jge
lcall
or
push
xor
lods
and
xchg
pop
and
aas
or
lods
ja
pop
cmp
icebp
jns
or
push
mov
outsb
add
push
mov
ret
cmpl
mov
ja
inc
push
lahf
popa
push
mov
imul
xchg
push
sub
push
push
cmp
call
push
mov
les
lret
dec
fcompl
js
out
cwtl
bound
mov
add
mov
in
mov
loop
mov
or
sbb
leave
pusha
jno
dec
je
jnp
fbld
or
enter
addb
shrl
ficoml
or
mov
inc
fwait
jle
push
sub
sti
dec
and
in
dec
sbb
jl
pop
cs
mov
into
cmp
and
pop
jns
mov
pop
push
dec
fldenv
mov
loop
stc
gs
loopne
enter
fsubrs
sub
pusha
mov
sbb
pop
loop
mov
pop
iret
sbb
jmp
popl
insb
cmp
jmp
std
iret
jmp
lds
lret
es
shl
dec
std
lock
testl
sub
mov
sub
icebp
cltd
push
outsb
jb
jns
lret
lods
das
outsl
inc
into
mov
insl
inc
pop
call
jbe
and
iret
mov
out
cmp
cmc
add
lcall
xor
mov
push
test
int3
jmp
jl
push
cmp
xchg
dec
movsb
push
inc
inc
sub
fdivrs
cmp
pop
add
mov
fbstp
and
push
or
xchg
fs
fimull
xor
lahf
popa
lea
mov
xlat
das
mov
mov
jp
idivb
faddp
int
iret
add
add
test
ret
loopne,pt
lret
pushf
mov
jns
in
and
les
add
lds
icebp
lret
xor
ficompl
mov
movsl
fnstsw
sbb
mov
add
jle
mov
push
out
cli
enter
lock
sub
and
mov
add
sahf
pop
xchg
sbb
imull
mov
fimuls
add
enter
cmp
sub
and
fidivrs
push
sub
test
and
cmpsl
cmp
xchg
lcall
addl
lods
rcr
fs
into
push
mov
repz
add
std
inc
adc
sbb
test
xchg
insb
daa
hlt
dec
in
sub
sub
jno
inc
pop
out
sub
pushf
xor
call
jl
jg
pop
rcll
std
fwait
mov
bound
mov
mov
sbb
enter
and
ret
aaa
inc
mov
test
cltd
and
cld
pop
pop
and
mov
push
xor
jns
popa
aaa
xchg
add
jae
aas
push
imull
pop
popf
xchg
movsl
rorb
sti
icebp
rorb
push
insl
bnd
jb
inc
aas
mov
rcr
iret
or
gs
pop
in
stc
es
pop
dec
push
push
xchg
xchg
adc
and
sub
or
inc
xchg
imul
dec
sarb
pop
mov
cwtl
pop
call
pop
aas
xlat
pop
and
aad
dec
cmp
hlt
pop
movsl
decl
mov
cmpsb
sub
add
cld
bound
inc
xlat
aad
dec
cs
jb
sti
dec
add
push
test
sti
xor
add
or
sbb
in
mov
sbb
xlat
xchg
in
xor
push
fiadds
add
in
cmp
shrl
dec
inc
rorb
mov
adc
pop
cmc
xchg
push
int3
or
sub
test
je
loopne
sbb
lret
outsl
mov
movsl
fcomip
into
outsb
outsl
xchg
test
xchg
inc
xchg
sbb
push
shlb
les
into
push
add
xchg
es
mov
sti
mov
cmpsl
fsubrp
mov
xor
or
ret
fists
adc
xorb
scas
int3
push
push
outsb
push
lahf
push
js
roll
xlat
pop
inc
shrb
mov
js
popl
aaa
mov
xchg
iret
add
sub
testb
xlat
and
dec
jp
cmp
sbb
cwtl
dec
out
into
mov
movsl
sahf
loop
pop
rcll
pop
xchg
push
xor
xorb
sbb
xor
stos
adc
in
ljmp
shll
sbb
pop
add
jno
je
pusha
icebp
ret
and
xor
decl
dec
outsl
into
hlt
and
pop
fucomip
test
stos
and
cmpsl
imul
lock
sbb
add
or
cmp
xchg
mov
orl
cmp
out
and
sti
sbb
xor
xchg
sbb
lods
mull
data16
in
and
or
or
sti
dec
push
fisubrs
aaa
nop
adcl
lcall
jl
pop
push
and
fists
pushf
or
mov
cld
frstor
dec
xchg
jno
je
das
push
mov
adc
inc
pop
and
push
add
div
in
mov
jecxz
mov
outsl
inc
arpl
lods
xchg
cmp
fstpt
das
pop
lea
pop
mov
fdivrl
cld
xor
out
outsb
xchg
es
sub
arpl
std
popf
popa
jl
mov
pop
mov
jp,pt
pop
sbb
xor
lock
aad
out
and
mov
clc
pop
sub
jb
mov
inc
push
mov
jnp
daa
stos
push
lcall
ss
adc
pop
sti
xchg
pop
or
sub
and
jnp
aam
idivb
and
stc
test
lods
out
lds
out
cld
bound
sbb
popf
lcall
mov
cmp
pop
xor
cmpsb
mov
ds
dec
testb
add
jecxz
and
or
pop
jno
aaa
hlt
xchg
jecxz
xchg
push
mov
mov
xlat
and
cmpsl
jl
lret
inc
pop
sbb
in
stc
lea
dec
and
adc
syscall
add
daa
pop
ret
adc
adc
out
add
into
sub
cmp
pop
ljmp
ja
sbb
outsb
lret
loopne
repnz
push
pushl
repnz
mov
add
and
daa
int
mov
pusha
push
or
inc
mov
push
les
ficoms
insl
add
add
mov
xchg
and
fdivs
xchg
cld
lret
and
jecxz
sbbl
mov
push
fisubrl
nop
cmpsb
lds
inc
jb
addr16
push
pop
push
xor
adc
cmc
jecxz
sar
inc
cmc
repz
icebp
testl
sub
stos
leave
jno
and
xchg
or
fs
test
dec
shrb
push
movsl
icebp
fisttpll
and
ret
jge
push
sub
lds
movsb
int3
jmp
cmpsl
cwtl
scas
movsl
hlt
xor
ljmp
jns
frstor
add
mov
pop
loopne
push
sub
push
mov
nop
sti
cmp
bound
or
pop
mov
mov
add
fcmovnu
or
jae
lods
std
cs
pop
inc
cmpsb
cmp
add
jne
into
mov
aas
test
aaa
lds
bound
iret
pop
or
ljmp
stos
inc
xchg
into
push
ret
lds
jb
cmp
mov
inc
cmp
dec
mov
xor
fdivp
xchg
cli
in
jle
out
sbb
mov
cmp
fistpll
aam
push
pop
cmp
fs
mov
mov
in
ljmp
lods
mov
in
or
scas
push
orl
aas
in
dec
sub
push
mov
aaa
rcrl
push
xlat
cmp
fisubl
mov
jge
leave
orl
add
pop
and
xchg
add
loopne
out
out
push
shl
or
push
inc
cmp
inc
adc
test
push
mov
and
push
mov
jo
pop
mov
push
or
mov
sbb
push
lea
jbe
in
loopne
subb
sub
and
sub
fistpll
fdivrl
mov
xorl
mov
fisubl
xchg
sbb
bound
daa
pop
mov
pushf
adc
mov
call
sbb
sub
xchg
adc
imul
jnp
and
pop
jae
shr
sub
inc
and
pop
push
cmpsl
ficompl
cmc
sti
nop
jmp
inc
push
clc
jge
mul
cs
adc
add
je
lret
lods
push
out
push
sub
and
lock
ficoml
and
xchg
stc
ljmp
jns
push
xchg
pop
jecxz
lret
lods
xchg
sbb
jne
dec
movsl
mov
pusha
sub
add
and
dec
mov
lahf
cmp
ljmp
inc
cmp
push
daa
mov
lahf
data16
int
adc
fidivl
jnp
mov
das
pop
cwtl
xor
aas
cs
push
pop
mov
jg
jecxz
pop
sbb
pusha
or
test
arpl
div
je
mov
ret
fs
cwtl
jbe
cmp
pop
shr
mov
xor
pushf
push
pop
cmp
daa
push
and
pop
in
je
add
cmpl
or
sbb
clc
jge
jge
out
inc
xchg
pop
sub
sti
repz
and
pop
mov
xor
test
mov
cmc
mov
jae
pop
jl
sub
lods
xchg
ja
jl
in
out
adc
jns
hlt
icebp
lods
xor
pop
cmp
icebp
add
sti
mov
mov
xchg
or
or
inc
xorb
nop
cmpsb
and
xchg
into
adc
lock
leave
cmp
lods
rclb
aas
pop
push
dec
and
sti
sbb
in
and
rcrb
loope
cmp
xor
xor
mov
jae
mov
push
jmp
ss
iret
inc
xchg
cmp
cli
push
aaa
popf
inc
pop
ss
icebp
sbb
push
mov
sub
ret
and
out
push
pop
popa
xor
les
fsubr
out
mov
or
mov
in
repz
in
adc
mov
xchg
cld
jp
stc
popf
sub
jo
sub
mov
adc
sub
mov
inc
xchg
sti
mov
int
js
daa
test
pop
and
out
or
test
jns
pushf
jecxz
mov
idiv
daa
fisubrl
adc
cltd
or
rorb
jl
daa
icebp
or
out
pop
jae
add
hlt
mov
pop
jmp
add
pop
aad
sbb
incb
pop
hlt
in
imul
lods
xorb
movsl
xlat
adc
mov
fwait
iret
adc
cmp
push
push
push
stos
xchg
xchg
push
sbb
mov
mov
hlt
je
loopne
paddsw
jae
jnp
dec
or
mov
or
mov
jle
or
das
dec
movsb
fwait
or
adc
push
std
out
dec
push
fmulp
sbb
jg
pop
loop
cmp
mov
sub
movsl
push
add
push
out
gs
jmp
sbb
xabort
add
pushf
mov
js
xchg
inc
popf
inc
push
movsl
pop
fadds
ret
aaa
rclb
sbb
loope
js
mov
adc
lock
orps
add
stc
negb
push
jecxz
mov
or
mov
adc
clc
into
pop
in
xor
movsb
pop
ret
push
xchg
outsl
lcall
stos
fmulp
lods
iret
and
add
xor
mov
sub
or
jb,pt
je
sbb
outsb
loopne
dec
fildl
add
gs
inc
mov
add
sbb
sbb
pop
rclb
scas
stos
cmp
pushf
iret
xchg
scas
sbb
xchg
jg
js
iret
add
or
mul
stc
cmp
repnz
sub
daa
sbb
mov
mov
fisttpl
call
jo
inc
add
je
adc
push
push
adc
call
cli
out
sbb
cs
and
cmpsl
xor
ds
push
mov
rcll
cs
dec
jnp
mov
ret
addb
dec
shlb
push
push
xlat
test
imul
cmova
test
adc
fsts
sbb
outsb
mov
es
xchg
jae
es
out
rcrb
or
loope
clc
fwait
xchg
xor
or
add
mov
jg
adc
fpatan
add
jp
lahf
cwtl
xchg
orb
xchg
iret
cs
imul
clc
gs
cwtl
push
adc
xchg
or
xchg
andl
lcall
fistl
lret
push
sti
sub
test
sub
mov
add
pusha
sub
mov
xchg
cmp
outsb
push
popf
fs
add
popf
aaa
or
mov
out
adc
jecxz
lock
mov
or
xchg
jnp
sahf
in
add
nop
lock
inc
addb
dec
je
or
bound
mov
adc
ret
ss
mov
mov
faddl
popa
push
aaa
out
pop
push
insb
jnp
adc
sbb
lds
fs
pop
pop
push
iret
xor
dec
aas
mov
pop
inc
scas
ss
fcomps
cmc
pop
or
sti
jle
mov
xor
jb
bound
enter
andl
cmp
mov
mov
ret
xchg
cwtl
sbb
jge
or
inc
push
xor
mov
arpl
xchg
pop
in
mov
push
es
cmpb
inc
xchg
jg
das
into
js
scas
push
cmpsb
sti
xchg
popl
in
loop
sbb
mov
pop
iret
je
mov
fists
aad
and
addl
lahf
icebp
and
xchg
push
jecxz
ljmp
hlt
xor
leave
test
nop
mov
push
fldt
out
push
scas
jo
or
mov
sbb
clc
stos
jne
nop
sbb
idivb
jns
ljmp
xor
cli
rorl
out
gs
push
add
lea
xchg
xorb
pusha
inc
insb
add
ret
push
and
mov
adc
repz
mov
dec
ja
outsl
xchg
bound
imul
aam
push
mov
ficoml
pop
cmpsl
aas
dec
out
mov
sub
or
aam
mov
into
pusha
sbb
frstor
xor
stc
je
mov
add
std
dec
inc
fdivrp
sub
or
adc
jecxz
imul
mulb
icebp
sbb
js
dec
insl
adc
add
sahf
std
cmp
dec
push
adc
adc
jbe
pop
jno
jbe
or
ljmp
ret
xchg
and
push
sub
testb
mov
mov
iret
lahf
movsl
jmp
ret
leave
hlt
adc
ficompl
mov
aaa
mulb
mov
aam
add
fwait
add
dec
jno
insb
ficomps
mov
xor
inc
aam
pop
sub
cmp
popl
jb
nop
ljmp
test
out
xchg
dec
sbb
hlt
inc
clc
jg
pop
les
xchg
xchg
hlt
mov
fmulp
add
sub
rolb
sti
lret
pop
loop
jae
sub
xchg
inc
out
adcb
aam
and
cmp
or
aas
call
lret
in
add
add
scas
mov
dec
pop
sbb
adcb
out
stc
fmull
xchg
shr
mov
xor
add
leave
arpl
add
xchg
das
jg
repz
das
pop
mov
repnz
gs
push
lcall
xchg
fistpl
leave
xchg
push
mov
ficoml
jno
stc
lcall
lret
pop
pop
cwtl
lret
push
add
int3
popa
loopne
cltd
mov
dec
pop
mov
movsb
mov
adc
push
fdivs
mov
jle
dec
arpl
sbb
subl
inc
jnp
cmpb
daa
outsb
lahf
dec
or
mov
jl
leave
rcr
cld
in
dec
movsl
push
mov
lea
stos
jno
es
popa
or
pop
decl
pop
leave
jl
push
jp
inc
push
fs
in
pop
arpl
pusha
cmc
mov
movsl
or
gs
or
pop
sub
clc
add
popa
psubq
call
pop
or
insb
aad
push
pop
mov
mov
push
es
pushf
mov
pop
jp
repz
and
scas
outsb
inc
mov
or
ret
lret
idivl
mov
roll
fildll
lcall
mov
add
push
dec
sbb
or
call
cmp
mov
gs
cmp
pusha
sub
cmp
cmc
shrb
xor
sbb
sbb
or
push
popa
sbb
jae
add
jecxz
fcom
xchg
or
fildl
bound
or
and
pop
pop
rcrb
outsl
in
icebp
je
cs
add
or
in
mov
mov
scas
adc
insb
add
lcall
xchg
add
bound
or
add
repnz
pop
lcall
nop
pop
push
or
mov
ja
sub
movsl
repnz
xchg
jecxz
pop
bound
lret
dec
jp
sti
jno
and
je
mov
out
fistl
call
xor
or
clc
cmpl
xor
mov
pop
jb
bound
cmp
sub
adc
icebp
or
jp
in
aam
imulb
cmp
adc
roll
dec
std
add
lods
je
mov
cmc
es
loope
push
fisttpll
xchg
pop
dec
push
or
sbb
xchg
loop
mulb
jmp
xchg
xchg
cli
xor
sbb
inc
and
addr16
or
int
dec
std
xor
inc
ja
pop
pop
decl
mov
pop
add
por
ret
xchg
hlt
clc
fnsave
cwtl
push
mov
xchg
and
add
andl
add
hlt
hlt
jmp
pop
xchg
adc
dec
mov
aaa
into
pop
push
ret
mov
int
rcll
pop
jmp
testl
mov
pop
das
icebp
std
jl
mov
mov
cs
pop
repz
mov
rcll
push
pop
dec
mov
push
lahf
pop
jge
cmp
jl
stos
xchg
or
push
push
add
add
lahf
ss
pop
and
icebp
je
pop
jmp
shlb
lcall
das
aaa
dec
ret
sbb
dec
out
jecxz
outsl
mov
sub
arpl
or
inc
outsl
fildl
sub
icebp
and
pop
rcl
int3
leave
lret
cli
mov
sub
or
mov
jge
leave
lret
call
mov
xchg
cmc
mov
fdiv
cli
neg
fstl
int3
mov
hlt
in
or
xchg
push
mov
in
loopne
outsb
mov
popa
jo
fdivrl
xchg
pop
iret
sbb
icebp
sbb
and
aad
outsb
or
lds
cmpsb
inc
add
idiv
xor
repz
cmpsb
imulb
push
adc
into
push
lcall
push
and
nop
pop
popf
mov
push
and
nop
cs
test
xchg
adc
and
lcall
push
push
adc
pop
cmpsb
xchg
fisubrs
sub
and
je
bswap
hlt
sbb
jge
call
push
insb
inc
jnp
adc
mov
dec
mov
nop
jg
in
jb
dec
xlat
mov
sbb
sub
adc
repz
test
jle
dec
sbb
sbb
insl
or
sbb
add
div
dec
out
daa
and
push
mov
cltd
std
mov
outsl
push
lret
add
cmp
stos
jnp
xor
lods
cmp
cli
xchg
pop
stos
mov
repnz
jae
aad
sub
loope
into
sbb
arpl
dec
cwtl
in
or
sbb
rclb
xchg
idiv
lcall
test
inc
pop
dec
aas
sub
sub
jmp
dec
jno
gs
repnz
cmp
or
add
pusha
adc
shl
addl
pop
ljmp
fwait
sarl
das
sub
dec
push
comiss
and
int3
in
lcall
fldl2e
pushf
push
cwtl
cmc
cmp
aaa
push
in
jae
imulb
add
int
sub
cmc
mov
push
sub
mov
gs
movsb
imul
cwtl
cwtl
xchg
jnp
add
nop
inc
gs
sbb
insb
aas
pop
aad
sbb
rcl
es
cmp
adc
mov
inc
push
cmpsb
jmp
mov
testl
adc
push
nop
loop
jb
aad
inc
dec
xlat
repz
fisttpl
fsubrl
clc
icebp
dec
cmp
fimuls
and
jle
dec
jg
fdivrp
addr16
das
inc
sub
adc
ss
cld
fistpl
repnz
and
adc
cwtl
movsb
mov
mov
inc
mov
mov
leave
mov
out
pop
xor
adc
mov
pushf
int3
aam
push
gs
jmp
cs
rorl
pop
cltd
push
push
or
fwait
cltd
cli
push
push
mov
adc
leave
jnp
fmul
inc
gs
sbb
jmp
imul
mov
jecxz
aas
popa
push
mov
adc
pop
aad
daa
fldl
std
cmp
push
mov
xchg
test
imul
ret
loop
fmul
sub
mov
inc
stc
mov
jp
testb
jg
push
loop
xor
cmp
inc
pop
cs
inc
pop
icebp
xchg
push
sub
jae
mov
repnz
out
sub
fisttps
xchg
call
mov
sub
insb
cld
push
pop
cmp
iret
loope
dec
pop
pop
push
lcall
pop
leave
xlat
pushf
test
cld
sbbb
jne
push
adc
leave
push
xchg
adc
clc
dec
out
cmp
roll
cmp
js
loop
stos
xor
ss
adc
pop
cmpsb
pop
cld
out
inc
cmp
mov
dec
ror
std
inc
sub
lea
repnz
ror
xchg
xchg
xor
dec
movsb
xor
rclb
outsb
movsb
out
mov
add
scas
fnstenv
mov
inc
mov
pop
sub
xchg
je
mov
mov
daa
dec
xchg
scas
adc
dec
cs
repz
push
xchg
stos
jp
cmc
xor
jecxz
push
inc
pusha
cmc
cli
lea
mov
and
push
popf
pushf
icebp
xchg
stos
mov
or
int
mov
sbbb
shlb
pop
push
or
sbb
jecxz
movsl
out
call
or
dec
pushf
add
lret
testl
addl
outsb
jns
mov
sbb
faddl
pop
fucomp
repz
out
or
mov
push
cli
or
in
mov
mov
fwait
in
push
mov
and
xchg
stos
addr16
jl
imul
mov
jnp
addr16
and
jp
icebp
sbb
sbb
add
fstpt
and
orb
adcb
mov
xchg
mov
jb
and
push
sbb
out
mov
vsqrtsd
sahf
dec
inc
aam
jo
sbb
in
and
fsub
fs
cli
pop
push
shl
scas
push
out
adc
pushf
inc
aaa
test
or
adc
pushf
fisttps
pop
aad
aas
jno
or
pop
cld
xor
dec
insl
pop
sbb
bound
sbb
hlt
sbb
lods
dec
pop
pop
and
stos
ficomps
ficomps
fwait
cmp
cmpsl
arpl
mov
cmc
dec
hlt
ret
ret
lods
cmc
mov
pushf
lret
iret
sub
dec
inc
and
xor
push
dec
and
xlat
pop
aad
sbb
sub
push
push
cmpsb
fwait
jl
xchg
xor
cs
je
cld
add
and
pop
sbbb
dec
mov
fidivl
outsl
test
scas
cmp
std
xor
xor
dec
and
adc
ret
push
mov
cmp
cmp
test
repnz
lcall
lods
popf
addr16
out
in
mov
stos
lods
std
push
jno
xchg
cmpsl
xor
ficoms
mov
push
imul
lods
inc
stc
frstor
mov
mov
push
popl
xlat
and
mov
xchg
push
push
ret
out
sub
xchg
ja
and
mov
mov
out
mov
pop
es
add
jg
fisubrs
jmp
insl
fwait
lcall
arpl
cld
jge
dec
sbb
imul
lcall
and
jno
xlat
dec
mov
lea
stc
mov
jge
add
enter
lret
pop
lods
jle
dec
xchg
push
ret
jae
sub
inc
scas
pusha
out
loopne
dec
sbb
cmpsl
pushf
xchg
out
js
aam
in
adc
cwtl
cmpsl
movsb
jb
xchg
sub
inc
mov
lock
adc
cmp
dec
jb
inc
and
int
test
cmp
in
lahf
mov
daa
out
mov
pop
imul
clc
or
add
hlt
or
pop
cmp
out
daa
mov
xlat
cmpsb
pop
add
ret
or
pop
pop
and
lcall
call
ja
jl
fmuls
push
popa
imulb
push
popa
int
loope
testl
lret
push
jg
xchg
fstl
lds
pop
in
jg
pop
out
pop
push
into
mov
fcoml
ja
out
adc
out
cmp
insb
hlt
mov
dec
imul
add
pushf
orb
xor
es
lock
pcmpgtb
aaa
push
dec
push
dec
repnz
jb
loope
sub
xor
push
jbe
xor
or
cmp
stc
xchg
rorl
call
and
push
xchg
adc
jae
mov
cmp
inc
push
inc
test
jae
adc
out
stc
sub
test
adc
mov
dec
jnp
push
sub
inc
das
push
ljmp
or
es
jge
insb
jo
fistpll
pushf
dec
mov
fstpt
xchg
cld
sub
lret
dec
pop
jl
sbbl
jge
pop
jb
and
xor
sbb
add
xor
push
cmp
cltd
leave
fsubr
out
test
adc
dec
std
stc
mov
sbb
push
shr
imul
in
push
jne
cmp
sbb
push
ja
pop
xlat
es
jl
out
data16
in
jb
jecxz
cltd
stos
sub
stos
and
lds
push
daa
out
test
imul
ss
jge
jo
test
jnp
sbb
in
sub
fstpl
bound
sbb
fnstenv
push
dec
fcoml
sbb
lret
fisttpll
xlat
mov
add
jle
xlat
fstpt
sub
jmp
in
xor
ja
and
mov
divb
add
cs
fmul
mov
xchg
movsb
nop
mov
test
testb
pop
cmpl
jnp
shll
xor
dec
jmp
arpl
lock
jno
or
inc
testl
daa
lret
notl
ljmp
iret
pmaddwd
sbb
cmp
dec
or
mov
and
add
and
jl
xchg
rorb
push
call
je
cmp
mov
add
hlt
ret
arpl
xchg
mov
es
fwait
sbb
jb
test
cmp
in
adc
and
sub
sti
pop
cmp
mov
repnz
pop
loopne
or
inc
pop
jne
mov
lcall
aam
scas
lods
lahf
scas
mov
out
mov
and
ljmp
xor
imul
idiv
push
sub
adc
push
leave
loope
mov
scas
adc
jg
sub
inc
icebp
xor
mov
ret
out
icebp
repz
or
sbb
pop
push
add
test
pusha
lds
add
jno
pop
fs
cmp
insb
in
xor
push
sub
add
pop
insb
sbb
icebp
mov
sbb
je
adc
sub
clc
insl
clc
mov
pop
sbb
or
pusha
out
xchg
adc
es
cmpsl
push
in
adc
inc
movd
fistl
notb
jbe
push
xchg
mov
jns
sahf
pop
xchg
push
in
or
in
xor
mov
push
lds
pop
ljmp
int3
clc
in
mov
in
sub
mov
test
cmp
pop
dec
or
ficompl
es
sbb
ds
test
xchg
adc
sbb
out
lds
cmc
and
jp
xchg
add
sub
and
cmp
icebp
repnz
mov
cmp
cli
gs
push
cld
mov
xor
and
insl
sar
dec
and
jle
das
and
call
or
in
pop
xor
fistpl
adc
imul
pop
jmp
cmc
mov
sub
es
sbbl
ret
add
aaa
adc
pop
lmsw
mov
and
ss
es
cmc
inc
and
add
lock
adc
daa
or
pop
and
arpl
sub
fimull
jg
ljmp
lea
pop
imul
pop
pop
sub
mov
cmp
out
pop
sbb
adc
jno
loope
sti
in
pop
je
int3
xor
rclb
fucom
or
mov
push
fwait
icebp
out
push
xchg
push
outsb
lods
in
xchg
dec
cmc
out
loope
inc
and
je
jge
loopne
adc
pop
push
push
add
dec
mov
push
mov
pop
or
in
pop
scas
cld
xchg
cld
dec
jno
jl
in
and
adc
jns
jae
jno
out
imulb
dec
in
movhps
sti
xlat
aas
hlt
rcl
in
hlt
stos
loop
cmc
push
cmp
push
ret
scas
or
mov
push
movsbl
mov
cmp
pop
adc
or
cmp
in
sub
fcomip
add
clc
or
in
neg
in
sti
paddusw
ljmp
popf
inc
push
lds
es
or
ss
sub
iret
sahf
jb
adc
push
push
lret
xor
in
inc
add
inc
fdivrp
fs
mov
cmc
mov
int
lahf
es
xor
inc
shrb
stos
mov
arpl
into
or
repnz
sbb
or
mov
adcb
mov
push
mov
push
out
faddl
cs
js
rcll
xlat
pop
xlat
rcrb
pop
jmp
ficoms
xor
inc
div
and
insb
sbb
int3
mov
imul
stc
add
sub
xor
outsb
sub
fwait
pop
ljmp
pop
call
shlb
inc
in
sbb
push
lock
mov
mov
je
cmp
push
ja
jmp
or
sbb
jmp
and
mov
sbb
ljmp
imul
push
cmp
imul
xchg
pop
cli
cltd
jl
lods
inc
out
or
add
jle
daa
inc
jnp
push
scas
dec
inc
int
ficoms
je
scas
lods
into
fs
cli
stos
out
xchg
pop
pop
mov
mov
jg
stc
mov
push
xor
adc
cmp
hlt
adc
inc
or
notl
movaps
xchg
fnsave
xchg
pop
add
add
mov
xchg
loope
pop
push
lods
push
jae
leave
jne
inc
jecxz
xor
cmp
xchg
iret
sub
or
repnz
jae
push
test
rcrb
fsub
sub
int3
popa
lock
and
leave
xchg
leave
loopne
ret
add
ja
xchg
adc
test
test
lcall
pop
jo
pusha
sbb
xor
mov
push
adc
in
inc
jbe
idivb
mov
jb
lea
xchg
in
mov
jne
pop
inc
pop
add
xor
das
test
push
xor
cli
and
scas
jno
or
mov
jle
cmpsb
adc
adcl
cwtl
sbb
fwait
test
push
dec
cwtl
jno
pop
or
pop
fstpl
adc
push
push
out
test
jne
cmpsb
dec
jmp
ret
sar
iret
lea
jl
xor
jg
adc
mov
jbe
push
fnstcw
insl
mov
and
mov
mov
nop
aas
dec
sbb
jb
xor
cmc
cmpb
addr16
push
jecxz
fld
into
jle
pop
lcall
pop
cmp
dec
or
adc
jbe
or
inc
lds
jb
lock
or
lret
mov
shrb
or
pop
scas
sti
xchg
inc
lods
lret
dec
xor
leave
cmpsl
cmp
push
pop
push
hlt
lock
lock
inc
mov
sub
aam
dec
mov
test
icebp
add
xor
jmp
add
or
jle
jecxz
cmpsb
adc
add
sub
das
mov
fucomp
cli
add
push
push
int
iret
cmpsl
mov
mov
pop
adc
cs
pop
daa
mov
imul
ja
mov
insl
cmp
dec
pop
dec
out
subb
mov
aaa
push
dec
mov
dec
cld
fimuls
mov
mov
pxor
dec
out
sub
mov
add
imul
jbe
fwait
sub
sbb
out
test
add
xchg
xor
xor
pop
stos
loopne
jp
imull
jno
popf
sbb
xchg
lock
jb
lea
sub
jmp
sbb
pop
in
sbb
sti
push
ljmp
addl
call
jb
or
jno
add
xor
repz
test
sbb
out
rorb
ret
sub
and
sbb
adc
negb
or
rol
sub
adc
mov
scas
loope
or
or
mov
data16
into
fwait
push
xchg
fbld
insl
dec
sub
ljmp
mov
mov
test
fldl
mov
outsl
cmp
sbb
movsl
add
mov
jne
xchg
sarl
push
cli
mov
dec
addr16
pop
add
repnz
int3
and
out
add
add
cltd
cmpsb
lret
xchg
testl
pop
sub
lods
ja
cmp
imul
or
jp
jae
lahf
outsl
push
jne
loope
icebp
jmp
mov
into
ljmp
dec
push
pop
es
repz
dec
jge
xchg
test
gs
inc
imul
inc
icebp
cmp
ss
sub
or
out
imul
inc
inc
shll
mov
imul
sahf
add
mov
add
stc
mov
out
fldl
push
sub
repz
lock
loop
xor
call
xchg
insb
inc
jo
cmp
adc
sbbb
and
loop
cmp
mov
inc
push
jbe
sbb
stos
lahf
cld
jecxz
aaa
decb
cs
xchg
mov
jo
add
sbb
sbb
cmp
adc
sbb
test
or
jbe
lds
jge
mov
pop
test
ret
adc
in
test
and
cli
xor
push
icebp
mov
vunpckhpd
cli
int3
pop
jns
repz
fisubrl
or
shll
int3
push
js
icebp
push
cmp
sub
lret
pcmpeqb
insl
push
js
jne
push
or
out
sbb
pop
push
repnz
shlb
mov
push
fcmovne
inc
sbb
sub
insb
les
jg
sub
ret
mov
push
mov
cmc
adc
or
movl
cmpl
js
test
sbb
lds
mov
cmp
add
xlat
push
pop
clc
xor
mov
lods
dec
fdivrs
insb
pop
push
addl
inc
inc
insl
loope
and
push
jo
jg
push
push
jmp
push
sub
loop
mov
pop
loop
cs
xor
insl
or
movsl
xchg
sahf
sbb
push
add
cld
hlt
lock
enter
adc
dec
cwtl
cmp
dec
into
add
mov
stc
xor
adc
push
and
pushf
hlt
mov
sahf
push
mov
xchg
addr16
hlt
dec
arpl
sbb
sti
pop
cli
add
mov
ja
jp
mov
jne
movsl
jne
jns
add
and
in
fs
push
lods
push
xor
jae
test
cmpsb
daa
dec
lock
xchg
pop
pop
dec
mov
ja
out
pop
mov
mov
and
stos
movsb
lea
mov
cmp
negl
xchg
cs
pop
insb
aam
mov
sbb
add
fs
iret
sub
lock
mov
sti
or
dec
popa
les
push
mov
mov
push
push
mov
add
jb
lods
jbe
cmpsb
mov
addr16
sub
in
dec
push
negl
mov
gs
xchg
pop
mov
jmp
inc
xchg
fnstcw
ljmp
lret
push
imul
xor
rorl
fimull
outsl
adc
hlt
int3
clc
imul
push
aas
int
ret
sub
addr16
cli
ret
sbb
mov
push
xlat
cmc
invd
pop
in
sub
add
ret
add
jp
push
nop
dec
ret
mov
loop
jns
jno
xchg
mov
sub
mov
sti
dec
pop
stc
clc
dec
adc
lds
sti
mov
jns
imull
adc
out
push
std
cmp
stc
repnz
sbb
pmaxub
or
dec
sbb
and
cmp
lock
push
mov
daa
xor
xor
js
out
int3
shlb
lea
and
xchg
lahf
jnp
fistpll
mov
aaa
clc
cs
or
jecxz
nop
push
mov
nop
addl
adc
dec
in
xchg
or
mov
sub
push
xchg
rorl
lahf
ret
int3
sub
and
nop
push
setge
addr16
loopne
push
dec
icebp
pop
jmp
xchg
mov
in
out
cwtl
loop
and
mov
xorl
out
arpl
movsb
inc
addb
inc
xlat
loop
out
jl
fdecstp
or
pop
jns
push
cmc
xlat
or
sub
cmp
and
sti
data16
popf
loopne
fiadds
push
out
xor
outsl
add
inc
dec
fdivrs
sub
push
nop
sub
push
call
movsb
sti
and
jbe
std
cwtl
xor
xor
shl
push
movsb
adc
mov
jo
cltd
lods
cmpsb
arpl
and
adc
imul
out
addr16
das
mov
xor
or
repz
sbb
mov
scas
adc
dec
pop
pop
add
arpl
js
jl
xchg
cltd
addr16
push
clc
repnz
sub
mov
xchg
mov
sbb
pushf
inc
xor
mov
adc
xor
ds
test
sti
cld
jp
mov
mov
lods
in
dec
enter
addr16
jp
orl
jno
out
ss
loope
rcrb
push
push
dec
imulb
inc
popf
xor
lods
adc
or
in
xchg
inc
cli
push
into
mov
fmul
mov
xchg
fdivrl
lds
mov
sub
int3
ds
je
xchg
out
jecxz
out
jl
daa
and
aas
or
stc
jge
xor
add
js
mov
sub
sbb
sub
mov
popa
test
pop
adc
fbld
popf
adc
pop
imul
int3
push
and
mov
adc
imul
xchg
xor
push
mov
loopne
push
mov
fcoml
inc
cmp
icebp
cmp
sbb
sbb
out
scas
aas
testb
mov
jne
out
jp
popf
jo
in
out
sbb
loop
mov
inc
sbb
je
jnp
sahf
mov
cwtl
std
cld
call
mov
sar
rcl
stos
add
push
fscale
adc
out
sbb
xor
icebp
faddl
pop
xor
or
or
clc
mov
icebp
adc
repz
movsb
popf
mov
stos
lcall
filds
cmc
dec
inc
push
fisttpll
idivl
dec
sub
scas
xchg
dec
fldl
add
jg
jno
fwait
push
bound
jb
lret
and
js
and
sti
inc
mov
icebp
fnsave
sub
mov
jmp
in
pushf
inc
xor
add
outsb
push
rorl
stc
mov
add
add
adc
popf
mov
lods
or
xchg
pop
cmpsl
int
sbb
or
xlat
scas
jbe
cli
xchg
jge
pop
pop
or
and
lods
gs
in
cld
fcomps
mov
mov
pusha
cmpsl
imul
lret
std
sbb
inc
stc
cmp
rorl
mov
mul
cli
sbb
popf
adc
mov
xchg
lds
adc
cmp
int3
shrl
inc
add
sbb
enter
jbe
or
and
sbb
adcb
in
push
sub
sbb
xchg
sub
int
cmp
xor
lds
lret
mov
xchg
add
hlt
sub
les
pop
enter
icebp
bound
aam
push
insl
or
int3
inc
leave
jecxz
ret
stc
arpl
repnz
je
dec
xchg
mov
adc
lret
xchg
cmp
not
insb
repnz
or
filds
js
dec
pop
jae
mov
pop
fists
fsub
nop
mov
pusha
loope
movsb
int
lcall
call
ficomps
sbb
jae
leave
cs
aad
cmpsl
mov
daa
cli
mov
aas
mov
es
addr16
mov
mov
dec
stos
and
xchg
test
jecxz
mov
repnz
mov
mov
test
adc
rcll
insl
pusha
sbb
popa
jae
js
xchg
test
pushl
adc
mov
and
dec
mov
jmp
jae
sub
ds
xor
push
cld
xchg
sbb
push
aas
aad
sbb
push
mov
and
jne
int3
scas
dec
clc
cmp
and
call
adc
rorb
inc
jle
and
push
mov
lods
clc
and
int
daa
lods
mov
cltd
adc
pop
mov
push
dec
or
out
outsb
jo
inc
cmc
xchg
call
ja
out
jo
add
fwait
leave
rorl
pop
cwtl
add
sub
test
sbb
mov
in
push
dec
ficompl
mov
jg
push
fsubrl
aas
jbe
stos
popa
dec
adc
arpl
dec
jae
or
or
insl
mov
sub
or
xchg
cltd
pop
xor
mov
and
aam
fwait
mov
popa
xlat
mov
push
loope
cmp
aaa
fdivl
dec
lds
fisubl
insb
loopne
imul
mov
jle
pop
and
inc
lods
inc
mov
sub
fldl
cmpsb
rclb
inc
mov
jne
addr16
dec
les
push
fsubl
dec
jge
stos
adc
xor
sub
lcall
frstor
mov
or
fdivrl
or
or
imul
cli
lret
lea
pop
ret
ds
and
sbb
mov
nop
push
dec
popa
js
mov
movsb
ds
ss
mov
mov
sub
pop
adc
fbstp
xchg
push
stc
fnstsw
icebp
mov
push
xchg
mov
adc
cmp
inc
out
xchg
shlb
dec
in
mov
add
shlb
pop
cmp
mov
mov
pop
or
add
ss
pop
outsb
sub
push
xchg
dec
mov
hlt
xchg
es
and
cltd
loop
clc
shrb
jmp
and
in
push
lds
pop
or
out
ds
ss
ljmp
fimull
sti
jns
xlat
push
stc
adc
stos
xor
outsl
jmp
jbe
mov
jl
fiaddl
mov
mov
push
xchg
or
mov
and
mov
nop
in
lcall
push
push
je
popf
dec
add
jno
movsl
jl
frstor
out
cmp
mov
dec
ds
rcrb
aas
pop
pusha
iret
xchg
xchg
xor
in
xchg
stos
les
dec
dec
test
rcrl
push
jmp
addb
add
out
daa
nop
inc
jmp
cli
ja
xchg
cmpsb
fists
cmc
xorl
pop
push
movsb
mov
movsl
push
cmpsb
mov
xchg
jae
xchg
adc
mov
jno
mov
cltd
sub
sahf
cltd
mov
mov
jo
or
mov
insl
bound
loope
cmp
jl
cmpsl
int
or
mov
mov
cpuid
or
loope
inc
aam
out
bound
icebp
xor
adc
xor
xor
xchg
call
nop
xorl
jae
lea
std
mov
push
int3
in
out
sti
push
sub
lahf
push
cmp
jns
adc
sti
gs
adc
dec
lahf
inc
or
inc
call
dec
dec
jg
adc
out
and
xor
leave
pusha
or
mov
in
adc
push
mov
push
movsb
cwtl
push
xor
aaa
add
sbb
testl
sahf
nop
xchg
sub
ljmp
and
sarb
mov
or
xchg
fstpt
mov
sbb
mov
int3
insb
rclb
pop
scas
int
sub
nop
jmp
andb
cld
push
inc
sub
cld
mov
mov
movsb
scas
jle
and
push
sbb
decl
nop
push
jae
lods
loope
sbb
cmpl
daa
sub
into
push
mov
inc
or
std
dec
pop
push
jo
add
fwait
mov
rorb
jle
lods
cmc
fwait
adc
add
imul
push
jns
mov
xlat
jae
imul
ja
jge
hlt
jmp
xor
loopne
fisttpl
mov
jmp
fldenv
into
add
cwtl
fimull
cmp
push
es
popa
push
lahf
inc
xor
dec
xorl
inc
test
jne
fidivl
mov
negb
dec
inc
pop
icebp
jb
jnp
sbb
pcmpgtw
je
ret
push
xchg
add
sti
inc
mov
ja
xor
mov
test
subb
add
sub
mov
mov
push
push
pop
sti
sub
andb
imul
sbb
in
mov
pop
mov
movsl
mov
imul
scas
sub
or
mov
push
jecxz
out
loopne
test
arpl
mov
mov
adc
and
pusha
xor
sarb
lahf
cmc
jb
mov
int
pop
mov
stc
jae
sahf
cmp
push
inc
out
insb
bound
cmp
dec
out
out
hlt
pop
or
inc
aas
jns
ds
jo
iret
pop
insl
add
push
inc
mov
inc
xlat
pop
hlt
xor
clc
loope
push
adc
sub
outsb
jmp
loop
decl
orps
xchg
lret
adc
mov
push
popf
mov
pop
pop
out
lock
mov
jmp
call
add
lods
addr16
sub
call
pop
test
and
fcomip
repz
pop
push
xor
sub
xchg
dec
stc
lret
stc
out
mov
loopne
jle
in
movsb
pushf
xchg
sti
xchg
call
dec
cmp
mov
pop
into
add
repz
push
into
loopne
test
shll
dec
xchg
or
xor
sub
cmpl
jmp
pop
loopne
jmp
in
cs
aam
jecxz
cld
lods
pop
imul
sti
insl
pop
sbb
pop
nopl
cmc
adc
xchg
push
iret
dec
adc
sar
loope
add
addr16
es
jne
inc
filds
std
fwait
pop
sub
cmp
jmp
sbb
jg
or
into
adc
aaa
pop
jmp
jmp
das
jb
adc
cmc
sbbl
push
mov
fwait
jae
mov
loope
add
xchg
jl
aam
cltd
adc
pop
imul
mov
fdivrp
dec
in
adc
sbb
xor
dec
pop
inc
cmp
lret
clc
movb
fucomip
lods
xor
mov
mov
add
popf
jno
push
add
dec
mov
jo
loop
es
add
xor
push
stos
outsl
nop
jg
loop
aaa
in
ljmp
enter
stc
add
add
push
enter
cmc
pop
dec
scas
pop
adc
adc
inc
push
jecxz
or
sub
mov
iret
test
push
push
fsubrl
xor
xchg
dec
xchg
ds
fdivp
sbb
mov
testb
andb
add
mov
xchg
cmp
ret
add
movsb
mov
in
adc
mov
cmp
daa
mov
mov
cmc
repz
and
or
jnp
xor
mov
mov
dec
dec
cmp
es
xchg
inc
cmp
stos
aad
or
je
movsl
sbbb
and
jo
push
push
out
jmp
hlt
pop
fstps
call
mov
and
cmp
sbb
fstpt
push
cmp
sub
test
xlat
movsl
fisttpll
xchg
pushf
jmp
aad
ficomps
or
iret
movsl
lahf
adc
xor
xchg
int
addr16
icebp
pusha
pop
cmp
jbe
rorl
cmp
loop
je
xlat
in
js
or
xor
jle
fadd
lret
adc
leave
out
lahf
cli
sbb
sub
hlt
adc
xlat
adc
xorl
sub
loopne
leave
cmp
out
sub
mov
aam
and
jb
jno
dec
aad
add
aas
mov
lods
xor
sti
cmp
push
test
fsubrl
sbb
sub
mov
add
das
daa
mov
sbb
fisttpl
inc
cmpb
pop
jns
mov
push
ja
aad
hlt
push
loop
popa
xor
and
insb
push
test
into
push
sti
add
lds
jbe
push
cld
inc
push
jbe
cmp
sti
adc
or
scas
sbb
sbb
add
pop
lods
adc
jecxz
rcll
and
imul
out
or
stos
xchg
fnclex
scas
or
sar
out
rorl
and
adc
xchg
cmpsl
stos
dec
in
mov
out
cwtl
adc
popf
adc
or
xchg
daa
fwait
mov
fiadds
mov
xchg
xchg
jae
xchg
ret
xchg
inc
aad
adc
pop
adc
xchg
push
cmc
xor
xor
cmovnp
in
pop
in
leave
push
adcl
aad
jae
adc
ja
and
in
push
aad
add
ss
xor
ljmp
mov
repnz
jne
aam
add
scas
repnz
dec
push
sub
mov
aas
jle
lds
insb
mov
xchg
mov
dec
add
jae
sub
xchg
fidivs
int3
out
cli
mov
mov
inc
or
pop
xor
cmp
jecxz
mov
xchg
in
fidivs
mov
stc
out
dec
or
mov
ja
xor
aas
popa
fistpll
mov
or
shrb
jge
mov
or
jp
pop
push
ret
jmp
sub
movsl
insl
xchg
jo
push
mov
js
les
xor
das
xor
xor
in
aam
cld
cld
les
repz
lret
das
or
mov
and
subl
mov
lock
mov
repz
sub
add
sub
fstl
adc
jmp
rcr
scas
fdivr
sub
mov
sub
xchg
rorl
fstps
jmp
push
lods
mov
call
out
cwtl
cmpsl
mull
hlt
bound
push
add
cmc
inc
js
mov
lds
push
bswap
push
xor
ja
hlt
ja
cmc
or
aad
jge
shlb
test
pusha
dec
dec
jae
dec
xor
icebp
or
mov
dec
loope
sub
jg
push
test
mov
mov
mov
jecxz
push
pusha
xchg
lahf
jo
out
cmp
arpl
lret
mov
and
cmovne
or
loope
aas
stos
pop
icebp
sbb
loopne
es
imul
and
sub
stos
sub
inc
or
lock
cmp
adc
repz
or
add
mov
in
dec
push
sub
jecxz
dec
aad
ds
fnstsw
cmc
xor
push
push
lcall
sbb
loopne
pop
push
fldcw
cltd
arpl
test
or
mov
negl
std
mov
mov
jb
fsub
sbb
mov
pop
and
inc
sarb
pop
or
sub
jecxz
adc
imul
push
gs
cmp
icebp
or
xchg
loope
mov
out
xchg
aam
xchg
cwtl
xchg
and
xchg
repz
pop
movsl
shrb
jnp
add
les
rcrb
cmp
mov
and
ja
pop
cmp
out
and
into
call
and
cwtl
sub
movb
and
cmp
pop
jmp
leave
xchg
xchg
adc
jp
paddusw
test
mov
cmc
addb
jg
insb
nop
sub
lcall
mull
fdivrl
in
stos
sub
lret
push
mov
mov
popa
jmp
xor
lock
sub
hlt
gs
std
xor
cmp
aas
mov
push
out
add
int
push
fsts
aam
jnp
push
cld
repnz
inc
test
mov
ret
fwait
adc
pop
jp
inc
icebp
jb
pop
or
xlat
mov
idiv
adc
in
mov
jmp
mov
out
clc
fidivl
mov
cmp
fs
outsl
pop
or
cmpsb
fldcw
sub
inc
sar
out
cmc
and
lahf
pop
mov
jae
cmp
mov
jne
mov
push
cmpl
mov
sub
cmp
lret
in
add
scas
jb
push
cmpsb
sti
or
ja
adcl
cmc
jo
dec
hlt
fildll
jmp
sub
popa
dec
mov
sub
jnp
push
pop
icebp
mov
or
cli
jne
popf
mov
jbe
js
mov
sarb
jge
dec
and
hlt
ds
test
mov
mov
cmp
lret
iret
xchg
mov
icebp
repz
dec
pop
sbbb
jp
mov
cmpsb
inc
andl
xchg
fistpl
add
repz
aad
xor
lahf
in
push
imul
fwait
movsb
out
xchg
pop
mov
in
ljmp
lahf
test
ds
aas
movsl
xor
mov
popf
jecxz
cmp
inc
xchg
push
dec
mov
mov
sbb
data16
sub
sub
sub
mov
pushf
jecxz
mov
cmp
and
test
push
fmull
repz
arpl
and
jb
imulb
icebp
test
sbb
cmp
test
dec
push
add
and
xchg
rcrl
xor
dec
leave
add
mov
ds
and
lods
out
in
add
xchg
mov
mov
sbb
fs
int3
xorl
lods
nop
adc
stos
jmp
std
cmp
ret
or
aad
sub
mov
bound
pop
mov
sbb
leave
xchg
push
pop
sbb
push
push
mov
mov
jecxz
push
push
stc
das
in
jecxz
push
gs
mov
xchg
stc
lock
outsl
push
pop
pop
adc
inc
lret
inc
orb
sahf
lret
fisubs
sbb
sub
dec
cmp
xor
push
fnclex
add
test
dec
lock
hlt
jae
pop
cmp
inc
xchg
add
icebp
fistpll
pop
outsl
clc
inc
xorl
mov
rolb
stos
fwait
mov
dec
bound
lcall
adc
stos
or
sbb
and
dec
sbb
negl
arpl
addr16
xlat
inc
push
adc
and
adc
enter
ret
lock
sub
scas
das
sbb
into
aaa
ss
mov
pop
scas
or
or
lahf
hlt
mov
pop
adc
out
insb
repnz
out
xorb
inc
leave
lock
sbb
les
mov
or
add
push
ds
fisttps
dec
adc
pusha
in
fs
ror
dec
push
mov
mov
adc
sub
and
pop
shlb
hlt
fnstsw
adc
pop
jnp
add
es
out
jmp
jb
adc
cli
ja
push
scas
ret
sub
maskmovq
divl
pop
push
lret
and
sbb
fdivs
vmulsd
sbb
xor
xor
cmp
add
cmpxchg
jle
mov
mov
int3
pop
add
insb
adc
arpl
cli
push
pop
push
jns
lds
pop
jle
jle
test
adc
int
leave
jle
sub
push
mov
aas
inc
sti
decb
xchg
movsb
mov
pop
cmp
stc
sbb
adc
add
jmp
add
aas
xlat
shlb
mov
fldl
push
int
je
arpl
mov
inc
cmp
xchg
push
je
pop
add
or
mov
inc
push
push
fisttpll
add
es
add
and
jo
idiv
adc
push
mov
jl
hlt
inc
jg
jecxz
in
cmp
mov
pushf
movsb
ja
fs
add
mov
out
mov
out
fimull
fimull
fsub
lods
xor
pop
xchg
cmp
mov
push
lret
jecxz
push
pop
mov
push
push
dec
push
mov
pop
mull
cmp
movsb
xchg
dec
fwait
jns
xchg
stc
jg
lds
rclb
mov
out
test
lock
mov
lret
cs
repnz
xlat
sti
enter
icebp
pop
pop
push
ja
imul
xor
mov
xchg
mov
cmpb
push
dec
adc
and
int3
adc
pop
mov
outsb
repnz
out
shlb
xor
pop
scas
xor
imul
xor
push
call
mulb
mov
lock
outsl
ja
add
mov
aas
inc
imul
and
or
push
mov
dec
xlat
scas
sbb
jl
insb
push
jno
rep
call
outsb
sarl
mov
sub
inc
sbb
sbb
xor
ljmp
int
dec
or
pop
mov
sti
dec
mov
shll
out
fdivr
adcl
sbb
mov
push
xchg
sub
adc
nop
add
dec
aad
outsb
sbb
or
jmp
and
out
jg
push
cli
pop
pop
into
inc
xor
mov
mov
lahf
mov
mov
hlt
lds
push
inc
daa
jmp
orb
lods
jmp
lcall
arpl
pop
dec
out
dec
and
adc
dec
fistpll
hlt
hlt
add
rcrb
sub
aam
pop
arpl
jle
cmp
in
ss
xchg
jno
pop
adc
mov
jbe
push
push
lods
in
paddd
mov
cmp
sti
lods
and
dec
lcall
xor
movsb
jmp
stc
lcall
jne
mov
test
mov
std
xchg
push
jnp
into
sbb
aaa
xchg
aaa
jnp
jae
sbb
jbe
movsb
mov
inc
stos
lret
sub
into
test
shrb
cmp
jb
cmp
lcall
add
int
add
push
push
adc
aas
jge
mov
mov
mov
flds
out
fstl
cmp
dec
xor
sbb
lahf
sbb
mov
inc
jecxz
rcl
mov
sbb
fists
in
sbb
adc
sarb
pop
fists
and
stos
stc
push
dec
stc
or
and
jns
adc
lahf
lret
adc
adc
inc
mov
stc
lods
jno
cmp
cmp
jl
arpl
dec
je
mov
and
mov
icebp
mov
pop
push
aas
fcmovnb
test
inc
mov
and
loop
cmc
loop
sbb
and
dec
in
lahf
push
aaa
mov
or
jl
cmp
inc
dec
jb
xor
frstor
mov
mov
add
imul
mov
sbb
es
enter
cmp
out
aaa
and
push
pop
inc
fmull
pop
xchg
xchg
fdivl
dec
cli
xor
or
sub
add
addr16
xor
in
icebp
pushf
sub
push
cmp
cli
and
je
cmp
dec
adc
pop
sti
ud0
and
fimull
inc
adc
addr16
stc
mov
lret
sub
addr16
jge
xor
mov
rcl
add
pop
mov
add
hlt
pop
dec
xorl
call
cmp
sub
xchg
fdivs
clc
push
insb
fistpll
pop
leave
leave
jl
repz
ljmp
pop
adc
loopne
xor
xorps
mull
iret
pop
and
in
add
jge
or
inc
xchg
ficoms
xor
negl
dec
xchg
xchg
cmp
pusha
push
nop
and
jle
add
in
lahf
lcall
xor
jbe
push
push
lahf
inc
xchg
jns
add
or
sbb
cmc
movsb
in
or
test
into
xchg
cld
adc
pop
cmp
stos
out
inc
xor
jp
das
xchg
adc
stc
repnz
push
dec
sbb
fstp
push
pop
jl
push
sbb
rcr
stos
test
cltd
sub
sbb
jo
sahf
mov
jle
jbe
mov
scas
dec
ja
mov
jmp
mov
sub
fstl
push
and
jecxz
pop
jge
inc
xor
jl
stos
negl
fnstsw
es
xchg
pop
push
arpl
cmp
sub
and
cld
push
cwtl
test
bound
aam
push
pop
cs
mov
xchg
sub
pop
mov
aam
mov
sti
adc
out
outsl
mov
inc
or
cmc
xchg
mov
mov
stos
jecxz
test
leave
sub
pop
insb
aaa
lock
lea
enter
adc
js
jecxz
adc
cli
lods
jo
sub
stc
icebp
sbb
daa
lahf
scas
mov
mov
lret
orl
loop
fstpl
ljmp
xchg
jmp
ret
test
imull
sub
inc
fucom
xchg
lret
xor
rcrb
push
int
pusha
lret
push
andl
sub
add
mov
call
and
push
cmpsb
out
or
lcall
in
aas
divb
pop
fidivrs
daa
repnz
ss
inc
pop
jle
add
pop
add
push
push
cmp
or
add
and
inc
inc
jno
data16
lea
dec
push
repz
xor
inc
push
repz
inc
xchg
std
hlt
imul
mov
jns
inc
sbb
es
daa
sbb
scas
stos
xor
mov
or
arpl
arpl
push
pop
inc
inc
sti
cmp
inc
inc
or
pop
cmpsb
insb
adc
push
dec
pop
fcompl
enter
pop
jne
push
movsb
scas
loope
xchg
xor
jecxz
inc
pushf
outsb
es
mov
and
mov
ret
xor
mov
jp
hlt
rclb
pusha
fadds
pop
cs
stos
inc
jl
cmp
dec
pop
insl
push
out
es
adc
outsl
or
sub
pushf
aam
stos
stos
mov
les
out
je
or
dec
xchg
dec
lret
sub
in
and
sub
test
cmp
and
std
jge
neg
repz
ljmp
push
scas
jno
les
mov
ljmp
lods
pop
xchg
loopne
lret
xor
cmp
push
and
jae
xorb
in
daa
or
dec
lcall
push
int
in
shll
int
insb
add
or
fisubrl
in
and
pop
cmp
pop
test
fs
add
and
ljmp
enter
jb
imul
out
shrb
lret
xchg
dec
and
orl
jns
out
into
mov
or
mov
aaa
push
sbb
cmp
scas
lret
xchg
fimull
je
cmpsl
sub
jb
mov
adc
loope
jp
pop
jecxz
gs
pop
push
ja
stc
js
jne
test
mov
sub
sub
jae
ljmp
sbb
pop
psadbw
adc
adc
popf
sbb
jb
mov
fimull
lahf
mov
into
jecxz
or
lret
push
pusha
lcall
add
fcompl
sbb
imul
fidivl
in
lods
js
and
push
cmp
fcmove
and
mov
push
jbe
adc
pop
ljmp
je
aas
daa
repnz
pop
push
test
xor
jecxz
clc
cmp
inc
aad
sbb
jp
sub
int3
data16
jl
loope
jecxz
push
inc
xchg
dec
sbb
lret
ret
adc
rcll
or
leave
mov
mov
sti
xchg
sub
lock
lds
cs
dec
pop
dec
pop
xchg
xchg
sub
jnp
dec
push
mov
push
icebp
mov
jg
mov
sub
and
jmp
mov
arpl
mov
test
cld
pop
add
iret
push
outsb
aas
daa
sub
jmp
lret
xchg
add
out
sbb
jp
aas
dec
jnp
jno
int3
ja
rorb
outsb
arpl
orb
pushf
addr16
stc
jle
sti
vsubsd
and
orl
mov
jl
adc
or
mov
sbb
cmp
clc
push
add
pop
repnz
mov
jns
pop
fucomi
pop
sahf
sbb
into
leave
rorl
jl
cwtl
idiv
or
xor
cmp
jae
pop
or
jle
xor
push
imul
mov
cs
int3
mov
mov
scas
jae
pop
cmp
add
rorb
push
lock
jmp
hlt
rcl
in
and
mov
mov
mov
and
stos
adc
xchg
mov
fidivrs
lret
cmp
jecxz
cmp
sbb
sbb
mov
mov
xchg
inc
adc
cmc
pop
dec
and
cmp
popa
mov
insb
test
jp
gs
or
ds
cwtl
enter
negb
cmp
xor
out
outsl
and
pop
jnp
add
neg
fdivp
icebp
enter
cld
ja
inc
daa
out
and
push
or
pop
push
dec
sub
cmp
sub
jp
push
movsl
sti
popf
out
xchg
mov
daa
in
mov
dec
outsl
mov
inc
and
je
lcall
xor
stos
decb
and
cmp
inc
cmpsb
movsb
scas
imul
mov
dec
jp
sbb
xchg
fstpl
test
lock
xchg
or
push
sbbl
cmp
sbb
in
jne
inc
push
mov
stos
sub
dec
cwtl
xchg
mov
movsb
sbb
push
cmpsl
add
jno
pop
or
cmc
lds
jg
pop
add
fwait
xchg
cli
push
js
subl
icebp
or
in
cmp
out
push
out
sub
insl
in
in
sub
repz
cmc
nop
cs
lods
mov
add
xor
out
sbb
push
repnz
push
fstl
sub
cmp
cmp
out
js
pmulhw
or
out
je
cmc
cld
jp
adc
sub
lods
clc
pop
sbb
add
mov
cli
mov
jb
addr16
pusha
cwtl
testl
or
xchg
mov
or
test
and
push
mov
cmp
les
jnp
add
pop
xor
or
lea
je
or
cmp
popf
test
jecxz
cld
iret
int3
out
and
adc
adc
stc
and
jl
push
scas
adc
push
cmp
enter
hlt
adc
dec
jmp
subl
jb
loop
jae
jl
jmp
mov
shll
mov
hlt
popa
repnz
add
scas
int
add
pop
out
push
mov
mov
fs
outsl
jg
hlt
ljmp
sub
push
je
repz
repnz
shlb
sbb
sti
lods
mov
mov
mov
in
dec
in
ret
arpl
dec
adc
sub
mov
data16
mov
push
push
loop
loope
bnd
repnz
mov
idivb
xor
sbb
adc
ss
push
adc
sbb
mov
outsl
sti
sub
mov
mov
nop
pop
ljmp
popa
dec
xchg
pushf
push
mov
pusha
or
and
cmc
jmp
jp
pop
jecxz
pusha
sub
in
cld
mov
pop
push
bound
stc
js
addl
mov
mov
push
inc
add
dec
add
dec
jnp
cmpsb
dec
sub
popf
dec
test
jae
mov
repnz
int3
or
insb
ss
and
mov
jmp
jl
stc
add
mov
mov
andb
mov
jge
sub
push
xchg
cwtl
pop
pop
mov
jbe
xor
dec
ljmp
ja
cld
add
das
ret
mov
cmp
dec
arpl
rcll
cmp
lcall
icebp
add
sbb
clc
hlt
les
pop
fildl
push
sub
pop
jg
adc
sub
and
gs
shr
inc
sbb
sub
mov
hlt
push
filds
pop
leave
add
cs
mov
les
testl
imul
lahf
loop
std
sbb
cmc
into
sti
mov
push
cmc
imul
xchg
or
mov
adc
es
lret
pop
int3
cmp
add
fs
adc
lock
sbb
xchg
clc
iret
jne
fwait
pop
sub
mov
mov
jl
xlat
ret
and
aas
push
daa
fistl
rcr
cmp
adc
jb
dec
cld
jne
aaa
lret
push
roll
fcoml
mov
movsl
adc
sbb
xor
mov
cmp
and
cmpsl
clc
shr
clc
push
adc
add
mov
jp
fdivr
rep
jmp
mov
movl
sub
sub
jae
cli
int
push
pop
sti
dec
fcoms
xor
sbb
out
dec
jg
dec
test
cmp
or
ljmp
cmp
fldl
jl
pop
fstpl
pop
fcmovu
add
mov
sub
popf
pop
in
jle
loopne
add
sbbb
push
movsb
daa
fs
out
mov
push
dec
std
sub
and
push
xor
sahf
add
or
adcb
cmp
les
jb
call
lcall
lods
xchg
aas
dec
es
je
xchg
das
repz
push
and
push
push
andl
and
dec
mov
sbb
inc
inc
hlt
cmp
sbb
push
cmp
rolb
sbb
xchg
push
insl
pop
push
and
push
cli
adc
pop
dec
scas
ret
sub
push
ret
lds
mov
shlb
ret
push
jle
scas
xchg
mov
cmp
mov
mov
jp
rcr
arpl
adc
jp
fisubrl
imul
xchg
xchg
sbb
adc
lods
sub
std
frstor
jp
sub
notb
fnsetpm(287
adc
int3
icebp
jnp
mov
sahf
xchg
nop
out
add
pop
dec
add
pop
pop
sbb
and
push
dec
mov
cmp
adc
lods
fisttpll
enter
and
into
pop
es
sbb
shll
push
mov
push
lods
mov
mov
and
and
jnp
mov
fwait
arpl
jb
popf
dec
pusha
outsb
arpl
xor
jb
adc
movsb
shl
sarb
xor
aas
fildl
std
fucomp
pop
btc
fcompl
jp
int
dec
or
dec
jg
fwait
inc
inc
mov
jg
pop
lock
cld
fs
es
cmp
sahf
cmp
int3
inc
fildll
lret
push
dec
pop
adc
int3
mov
mov
nop
and
bound
and
inc
movsl
arpl
push
cmp
stc
out
in
and
mov
test
sub
mov
iret
fiadds
sbb
or
sub
jl
retw
add
ret
mov
mov
fdivr
out
adc
in
sub
mov
pop
iret
out
sub
sahf
movsb
cli
sub
scas
sarb
sbb
xchg
lret
nop
adc
mov
pop
sti
int
pushf
mov
sub
mov
jns
cmc
mov
mov
jp
jbe
push
ret
mov
rorb
cld
insl
sbb
jp
loope
nop
ficoml
sub
mov
dec
add
add
and
cmp
inc
inc
loop
sub
pop
jb
and
and
mov
dec
xchg
sub
cli
xchg
inc
fsubs
cltd
mov
adc
push
nop
mov
jmp
mov
and
cmpsb
unpcklps
pop
mov
pusha
lahf
sub
pop
push
adc
cli
sub
es
inc
test
dec
xor
add
cld
jp
cmp
loope
das
xlat
sbb
outsb
nop
repnz
les
or
and
push
pop
out
pop
mov
adc
loope
adc
jb
scas
bound
inc
fisubrs
mov
insl
jmp
stos
jecxz
add
add
lret
lret
or
adc
mov
add
out
mov
adc
pop
lret
and
jle
ret
in
add
repz
popa
jno
dec
push
mov
icebp
lahf
jbe
push
mov
fmull
ja
mov
mov
enter
lret
jae
push
or
pop
test
sbb
pop
rcrb
pop
xor
add
xor
dec
add
sbb
fdivp
sbb
loopnew
in
inc
nop
idiv
ret
jl
sub
and
and
scas
fbld
mov
lret
je
cmc
incl
out
inc
push
sbb
scas
pop
sbb
xor
in
ss
inc
andb
hlt
pop
les
and
cmp
dec
daa
cld
lret
mov
neg
xlat
int3
dec
inc
test
js
or
inc
out
dec
dec
sub
in
pop
scas
sahf
pop
add
adc
shll
std
imull
in
dec
xor
inc
xor
inc
std
pop
call
inc
mov
mov
inc
pushf
test
mov
cmp
or
or
sbb
xor
adc
ss
cwtl
in
stos
adc
idivb
je
test
xor
loope
cmp
mov
adc
pop
push
loope
add
mov
or
test
popa
int
jecxz
cs
stos
cmp
add
dec
cld
dec
inc
enter
in
xchg
scas
pop
into
gs
jp
add
movhlps
repnz
push
mov
inc
push
fidivrs
mov
inc
clc
xchg
xchg
mov
fwait
aaa
cmp
adcl
push
adc
push
jbe
mov
clc
adcl
push
lret
mov
cmpsl
stos
mov
jnp
xor
fcmovu
sbb
cld
in
mov
pop
lods
xlat
push
in
pop
cmp
gs
ret
cmp
push
xchg
outsb
mov
not
and
fimull
sti
daa
lret
push
loopne
icebp
push
mov
insb
shll
loop
mov
pop
pop
mov
dec
cmp
sti
cli
notb
sahf
mov
bound
iret
xor
cmp
lret
inc
pop
enter
leave
shll
pop
mov
enter
das
xchg
cmc
sbb
push
clc
loope
das
adc
lcall
inc
inc
sub
sbb
cmpl
or
mov
lret
jno
ret
ret
int3
mov
das
jmp
into
sarb
adc
and
or
sbb
push
aaa
pushf
jmp
add
jae
out
test
cld
stos
adc
imul
pop
adc
dec
sti
scas
xor
push
pop
ss
imul
or
jge
mov
mov
idiv
or
add
adc
push
cmp
daa
mov
inc
rorb
repz
cwtl
xchg
ficomps
mov
cmp
pop
mov
push
sbb
inc
in
add
addl
in
das
mov
xchg
mov
or
pop
sub
mov
mov
gs
cmp
and
xor
adc
inc
outsl
sahf
sbb
sbb
orb
push
mov
test
andl
mov
add
imull
roll
pop
icebp
idivb
icebp
cmc
mov
adc
hlt
jns
mov
sbb
out
add
fwait
mov
xor
in
scas
stc
ljmp
scas
negb
cmpsb
adc
lock
imul
stos
clc
loope
mov
xchg
xlat
outsl
jecxz
in
xchg
add
xchg
clc
int
ja
mov
mov
insl
mov
mov
test
jno
repz
lahf
mov
sub
dec
sbb
fnstsw
je
xchg
sbb
out
or
test
mov
cmp
mov
xchg
aad
add
imul
cli
js
push
jmp
pop
add
shlb
jns
ljmp
pop
xchg
mov
jle
cmc
out
sbb
pop
cmp
lea
imul
sbb
push
and
dec
inc
xor
sbb
icebp
js
ds
sbb
push
push
ja
sti
clc
sbb
cld
and
insl
mov
xchg
aam
add
lods
testl
sahf
jnp
adc
sbb
mov
push
scas
pop
aas
sti
push
mov
loope
xchg
lods
jno
add
arpl
push
data16
cmp
push
arpl
adc
jecxz
inc
mov
repz
cmp
jge
dec
js
ja
lret
imul
sbb
adc
imul
std
pop
je
add
outsb
sbbb
rolb
int
filds
push
inc
fs
push
xor
add
add
clc
ret
nop
data16
jl
mov
enter
mov
out
sbb
jnp
in
cmp
das
add
mov
xor
jecxz
inc
je
pop
mov
and
iret
pop
cmp
mov
dec
mov
insl
js
inc
sub
ret
sbb
sub
add
push
hlt
jecxz
das
cli
pop
xor
call
sub
mov
mov
std
and
push
xor
test
push
fucomip
mov
push
add
jl
int
mov
cmp
in
pop
in
sbb
imul
das
add
adc
movsb
arpl
pop
iret
add
mov
sbb
cmp
dec
and
mov
mov
out
icebp
decl
lea
inc
push
repz
fisttps
fdivrl
outsl
stos
aam
shlb
enter
pop
mov
repz
cmp
mov
mov
lock
int
xchg
push
xlat
scas
hlt
mov
cli
test
mov
mov
shrl
cmpsb
mov
jge
std
sub
dec
daa
js
xor
and
ret
push
out
fs
sbb
outsb
xor
cmpsb
test
es
outsb
jae
adc
subl
mov
pop
xchg
cld
sarl
fldl
je
fsub
or
aaa
sti
and
add
sbb
nop
mov
push
rcll
fistpll
jb
dec
jmp
sbb
jae
add
scas
ror
int3
loop
ja
xor
jecxz
scas
test
ret
hlt
jne
mov
fwait
int
xchg
inc
hlt
add
xchg
push
arpl
sbb
sbb
pop
add
mov
jbe
push
scas
jns
push
add
out
test
add
fs
stc
out
movsl
cs
adc
out
aam
mov
push
xor
mov
testl
pop
stos
test
jmp
rolb
cmpsl
mov
test
push
mov
mov
test
rcr
fmuls
pop
enter
cs
inc
add
mov
aam
out
pop
into
es
jle
pop
test
outsl
push
lock
out
dec
jge
icebp
xchg
xchg
sbb
mov
mov
xchg
pop
push
in
dec
dec
cmp
mov
pop
loop
mov
and
push
vpshlq
adc
jo
iret
sbb
cmpsb
pop
lcall
pop
mov
nop
mov
sub
push
outsb
pop
pop
insl
in
push
mov
ss
hlt
sub
adc
xchg
sub
es
aam
mov
ljmp
push
lret
fucomi
sub
pop
out
iret
adc
enter
outsb
shlb
add
or
repnz
lock
test
push
mov
movsb
jns
das
into
cmpsl
inc
add
pop
jmp
aad
pop
lcall
roll
inc
cld
popl
cmpsl
jp
cmp
cwtl
or
jl
mov
jnp
orl
sbb
jge
sub
icebp
movsb
inc
das
or
xchg
mov
fidivrl
fists
xchg
mov
jbe
push
mov
mov
outsl
les
out
xchg
mov
fiaddl
icebp
sbb
icebp
fsubrs
add
inc
pop
dec
mov
ljmp
or
outsl
mov
pop
sub
scas
cmp
scas
mov
adc
and
leave
fimuls
scas
icebp
out
and
rclb
mov
movsl
sbb
scas
jnp
or
mov
jecxz
in
mov
dec
aam
mov
sub
jno
pop
inc
mov
xchg
stos
int
mov
mov
call
cmp
push
push
fwait
std
jns
mov
fisttps
pop
cmp
mov
ja
lret
mov
push
xchg
mov
cwtl
into
icebp
or
addr16
sbb
xor
testb
mov
lods
inc
mov
cmp
sub
or
sahf
leave
lcall
and
insb
mov
adc
xchg
add
das
out
jmp
je
push
xchg
inc
jle
movsb
enter
rep
push
outsl
sahf
mov
adc
aas
std
dec
sbb
mov
and
out
pop
lcall
sub
add
dec
cmpsl
std
push
and
sti
and
test
and
mov
icebp
cmp
mov
push
incb
xchg
push
mov
scas
mov
icebp
clc
mov
mull
inc
lock
lret
xchg
repz
insl
hlt
lock
mov
xor
add
and
adc
and
cs
in
sbb
push
sbb
inc
outsl
and
add
cmc
fstl
fisttpll
mov
aad
pushl
mov
xchg
add
ficompl
push
jbe
sub
das
in
add
push
stc
frstor
sub
dec
dec
push
jp
sub
and
sub
mov
jbe
or
mov
xor
xor
in
outsl
testb
bound
xor
fnstcw
pushf
adc
sbb
push
push
movsb
mov
int
sti
fcoml
in
mov
jmp
mov
cld
arpl
cvtdq2ps
push
jb
inc
and
in
pop
push
mov
hlt
jmp
divl
pop
stc
push
jl
ficoms
std
in
arpl
sbb
jmp
xchg
or
push
cmp
xor
xchg
loope
into
aam
xor
add
or
mov
idiv
cltd
sbb
ljmp
xchg
xchg
popf
rol
and
fistps
mov
xchg
sbb
popf
repnz
mov
push
mov
sbb
rolb
mov
push
repz
fsub
aas
jle
push
push
and
in
les
mov
lods
dec
pop
and
or
push
cmp
int
stos
leave
loope
pusha
out
mov
in
sbb
jo
mov
xor
cwtl
sti
je
jbe
fistps
in
and
sar
sub
mov
mov
jmp
mov
outsl
xchg
inc
repnz
add
mov
cmc
mov
lock
scas
cmp
lods
dec
mov
ret
incl
loope
xor
out
and
pop
arpl
imul
push
fcmovnbe
sub
jno
mov
add
sahf
clc
mov
hlt
sbb
and
aam
inc
shlb
jle
sub
mov
or
dec
lock
dec
push
ss
je
inc
add
sbb
cmp
push
push
shlb
sub
lock
icebp
fiadds
inc
aas
adc
sbb
mov
ds
je
sub
outsl
out
fistpl
and
and
dec
sbb
stos
push
jle
add
divb
cmp
mov
sbb
and
inc
pop
add
scas
mov
cmpsl
cld
icebp
jmp
dec
sub
bswap
or
adc
jmp
jmp
xor
jl
push
and
imul
bound
out
xor
adcl
jp
mov
pop
pop
popa
dec
xchg
jno
in
adc
pop
mov
fistps
mov
and
mov
fsts
sbb
sub
into
inc
in
mov
sti
push
or
sub
push
stos
xchg
jp
mov
addr16
fistps
dec
inc
adc
lds
fmull
sbb
sub
sub
cs
mov
xorb
sub
outsl
or
pop
sbb
lcall
xchg
stos
sub
pushf
aas
sbb
mov
adc
cmp
jae
outsb
xor
or
xor
or
gs
sub
test
mov
sub
push
xorl
cmc
pop
das
push
pop
jl,pt
mov
xchg
out
dec
mov
aaa
dec
aaa
push
pop
fs
sbb
inc
gs
pop
adc
adc
mov
mov
mov
jle
sbb
aad
jecxz
mov
jmp
movsl
xorb
hlt
or
and
std
int
call
jmp
push
iret
aaa
adc
or
mov
arpl
lahf
inc
repnz
nop
fnsave
clc
lods
xchg
lods
in
iret
cli
loop
mov
xor
pop
out
inc
enter
sbb
in
jnp
dec
mov
xchg
inc
insl
xor
inc
push
jnp,pt
xchg
jb
fstl
jmp
or
sbb
lahf
mov
clc
ficompl
fisubrs
dec
or
insb
inc
ja
sbb
ret
test
test
in
sub
sbb
dec
decb
xchg
neg
inc
addr16
xchg
adc
movsb
xchg
pop
fldt
mov
std
rcrl
jb
sti
add
int
mov
cmp
push
mov
add
xchg
xchg
std
mov
and
clc
mov
cmp
clc
cmp
dec
pop
jns
and
jae
adc
jnp
gs
ror
fs
pop
jno
mov
push
add
iret
mov
mov
push
sbb
sub
pushw
pshufw
and
test
push
shl
in
xchg
pop
lret
cmpsl
loop
sbb
pop
add
ficomps
repnz
mov
xchg
push
js
cltd
adc
loop
ss
movsb
in
call
jo
xchg
jp
pop
daa
frstor
sbb
in
daa
not
or
rorb
outsb
xchg
aad
in
cmp
je
sbb
adc
stos
out
and
and
lret
sti
add
dec
jg
sbb
in
inc
cmp
aam
shl
loop
mov
pop
negb
mov
xor
or
cmp
lods
hlt
inc
or
inc
pop
cld
adc
cmp
lcall
pop
xchg
jb
dec
imul
orl
xchg
es
adc
lock
push
loope
idivb
enter
lods
mov
xchg
test
negb
cltd
icebp
pop
sub
cmc
sbbb
fnstenv
je
fstps
mov
push
push
or
mov
sub
sub
inc
movsb
pop
add
stos
ja
xlat
and
jb
xchg
fstpt
test
mov
dec
mov
dec
cld
push
inc
es
pop
add
sbb
xor
cmp
sbb
cmp
sbb
inc
add
inc
push
bound
pop
cmpsl
or
lahf
sbb
sbb
outsb
inc
dec
push
cmp
stc
sub
cmpb
push
jp
mov
and
pop
and
jmp
ja
popa
cltd
push
lods
and
mov
push
jl
xchg
sbb
adc
repnz
lea
push
or
pop
push
dec
fdivp
cs
xchg
and
sbbl
dec
call
inc
pop
stos
lock
and
xor
dec
pop
insl
cmp
lock
inc
test
and
test
loopne
sbb
sub
clc
mov
rol
out
cmp
and
mov
iret
fnstsw
fidivrl
xlat
cmp
cmpsb
and
aaa
iret
repnz
push
and
out
and
push
fadds
mov
xor
outsl
jno
add
xor
sbb
ss
adc
movsb
rcll
xor
push
mull
xchg
divb
out
push
gs
sub
dec
test
pop
mov
or
dec
xor
add
insb
dec
or
loopne
ljmp
ds
push
push
xor
mov
call
push
xor
mov
add
mov
sub
add
lock
add
cmp
push
int3
jb
mov
xor
jnp
int
jg
xlat
cmc
in
mov
in
loope
inc
stos
add
in
inc
pushf
xor
adc
push
in
iret
xchg
cmp
jge
rorb
push
push
mov
add
jmp
out
or
lret
notb
data16
or
sbb
ret
xor
out
cli
adcb
lock
out
and
inc
cmp
push
call
scas
push
repnz
idivb
cmp
dec
cmpb
add
push
inc
jo
fists
clc
push
mov
add
xchg
ljmp
repnz
push
sbb
ja
imul
hlt
leave
mov
pop
add
andb
dec
push
pop
dec
cs
or
testb
adc
xor
push
cmpsb
mov
stc
cmp
cmp
and
cld
push
je
add
outsl
and
sub
mov
sub
inc
xchg
sub
cmpsb
arpl
xchg
cmpl
js
inc
pop
sub
mov
push
shrl
add
hlt
sub
pusha
mov
add
cwtl
xchg
jb
xor
enter
push
sbb
hlt
mov
cld
push
xor
pop
ljmp
mov
repz
out
add
addr16
xorb
pop
outsb
ja
or
repz
in
jg
test
xchg
sub
gs
shrl
mov
iret
negb
mov
or
mov
jecxz
xchg
fwait
lret
imul
add
mov
scas
or
cs
aaa
out
es
div
out
pop
int3
push
or
ficompl
lcall
hlt
arpl
sub
or
and
sub
repnz
sub
out
mov
jl
lock
or
jnp
xchg
and
int3
jge
sbb
sub
stc
mov
pop
or
mov
and
xor
orl
test
cmp
mov
arpl
cmp
enter
fnsave
adc
sub
jle
inc
stos
scas
out
ret
mov
add
test
or
xor
xor
aad
movsb
dec
dec
cmpsl
dec
lret
aaa
fcompl
sub
insl
hlt
mov
iret
sub
mov
dec
cmp
push
mov
fists
outsl
push
xchg
jo
addr16
adc
rorl
pop
jne
mov
fsub
sti
and
dec
xor
push
or
aad
pop
push
in
mov
dec
mov
xchg
xchg
xchg
mov
outsl
mov
push
clc
mov
pop
add
lret
cmpsl
xchg
jg
mov
xor
push
lods
pop
push
adc
jmp
arpl
sbb
loope
dec
mov
or
imul
not
in
mov
xchg
std
sbb
or
mov
mov
push
daa
test
lods
xorb
inc
mov
inc
cmpl
lods
repz
cmp
imull
mov
js
aam
shl
mov
mov
ret
sub
jo
loope
push
or
nop
pushf
mov
icebp
push
loop
rcrb
daa
stos
shlb
insl
aaa
ljmp
sbb
sub
pop
enter
pop
xor
pop
lcall
pop
daa
mov
fcompl
sar
int3
int
std
jnp
xor
roll
mov
or
movsb
imul
iret
int3
nop
icebp
loop
xchg
xor
scas
add
xlat
jp
clc
xchg
xor
xor
mov
loope
loop
popf
es
or
notl
outsl
sub
ss
lods
mov
imul
sub
shrl
adc
gs
add
enter
cmc
push
test
lock
mov
xrelease
dec
mov
mov
aad
test
movsl
icebp
xorl
fldz
ret
cld
xchg
gs
or
dec
jge
pushf
rolb
stos
in
dec
notl
jl
fs
push
lods
mov
adc
adc
je
jl
into
dec
inc
nop
fldl
out
jmp
push
and
or
xchg
push
cmp
add
pop
test
and
push
adc
int
das
mov
jb
mov
or
push
or
int
pop
dec
cwtl
call
mov
inc
cmc
lock
sub
mov
fmul
shlb
xlat
sahf
jbe
or
adc
cltd
loop
mov
xchg
mov
dec
dec
xor
imul
and
pop
xchg
mov
inc
and
leave
mov
and
or
gs
daa
jns
iret
outsl
cmpsb
xchg
sti
iret
adc
sbb
add
push
push
negl
jbe
pop
fbld
test
or
inc
call
rcl
sarl
and
data16
lahf
int
jmp
cld
and
mov
fdivp
pop
sbb
xlat
dec
push
cld
je
out
ficoms
inc
push
and
test
cmpsb
xor
mov
insl
in
adc
bnd
add
add
mov
fistl
sahf
outsb
push
loop
out
cmp
outsb
inc
push
out
popa
pop
lea
mov
aad
jnp
adc
add
pop
cwtl
inc
or
int
js
notb
fstps
ljmp
mov
or
aas
push
push
or
hlt
mov
mov
add
js
repnz
sahf
int
jle
rorl
lret
cmc
and
mov
adc
jp
mov
push
mov
loop
add
dec
mov
cli
xlat
mov
lahf
shll
testb
and
xchg
sbb
testl
icebp
rolb
divl
dec
inc
fnstsw
mov
push
or
clc
fmul
jmp
sysexit
add
imul
pop
adc
loope
cld
iret
lods
jno
xlat
clc
push
shrb
inc
notb
out
xor
test
cmp
test
out
xorl
jbe
mov
xor
inc
popf
pop
cltd
or
stc
pop
push
stos
mov
xor
jne
dec
pusha
or
inc
out
mov
cmc
cmc
add
inc
jg
dec
cmp
push
mov
repz
loopne
jne
cmp
dec
mov
clc
xchg
mov
cwtl
aas
cmp
and
cmpsl
dec
add
mov
inc
movsb
cmp
and
cs
adc
movsl
stc
xchg
loope
pop
icebp
adc
inc
cld
int
div
daa
jae
jmp
roll
mov
push
xchg
out
fimull
sbb
xchg
imulb
xchg
enter
sub
pop
es
cmp
and
mov
into
loopne
dec
popf
clc
jne
push
sub
or
push
xchg
cmp
push
dec
data16
mov
sub
jo
mov
pusha
lahf
jno
or
and
xchg
sbb
sbbl
pushf
and
sub
ret
dec
repz
iret
jns
mov
nop
xlat
stos
xchg
iret
daa
xchg
cmc
jnp
jbe
mov
cmp
xor
aas
adc
mov
pop
adc
push
nop
out
mov
dec
mov
and
cmpsl
jne
xor
dec
not
push
cmc
loop
cli
jge
stos
ja
fstp
lea
stc
icebp
js
es
xor
clc
aam
outsl
jp
mov
inc
mov
add
mov
out
adc
inc
jae
fidivrl
sti
or
xor
cmc
std
inc
adc
mov
je
jo
push
pop
mov
mov
fcmovnbe
pop
jecxz
hlt
or
cs
bound
and
sahf
add
scas
jecxz
inc
in
push
addl
daa
icebp
cmp
adc
xor
int
or
cmp
clc
push
jae
sub
lcall
mov
daa
hlt
adc
test
ljmp
mov
ljmp
test
inc
jns
add
jle
dec
loope
inc
aaa
sbb
cmp
and
sbb
nop
pop
xor
mov
cli
cmp
sbb
adc
pop
push
or
loope
ljmp
mov
sbb
dec
inc
repz
sbbl
pcmpgtw
je
sub
je
ret
and
or
fistl
xlat
push
add
jmp
mov
je
out
mov
ss
adc
dec
and
dec
pop
idivb
into
xor
dec
mov
xor
fwait
add
sub
push
test
dec
dec
pop
push
mov
das
in
ljmp
xor
dec
dec
cmc
push
or
dec
cmp
sub
sbb
jb
jae
lds
aas
inc
out
or
mov
and
or
push
lahf
sbb
in
enter
sub
mov
outsb
ljmp
xor
fwait
or
arpl
xor
mov
sub
out
popf
mov
cmp
int
dec
adc
lret
sub
hlt
mov
jnp
pop
or
xchg
ljmp
push
je
pop
sbb
inc
add
cs
in
sti
in
pop
outsl
icebp
sti
cltd
jl
in
jne
adc
fldt
in
push
cmp
std
cli
hlt
pop
pop
jecxz
cld
ret
jl
xchg
add
pop
xchg
dec
lahf
and
adc
mov
test
idivl
add
add
dec
sub
xor
or
xchg
jmp
out
adc
add
push
not
jnp
daa
jmp
jae
pop
jb
mulb
int3
push
subb
cmp
sub
pop
adcb
in
dec
fisttps
cmp
popa
sub
push
in
cmp
test
ret
mov
insb
daa
dec
pop
neg
lea
or
pop
jb
lcall
adcb
repnz
mov
je
lea
pop
lods
and
loope
les
lcall
push
popa
cmp
aas
int3
dec
xor
jmp
nop
inc
inc
adc
movsl
adc
push
rol
sbb
jmp
mov
aam
sub
inc
xchg
push
test
mov
hlt
adc
lcall
inc
add
cmp
jecxz
lods
xor
ds
jne
push
dec
sub
push
movsb
pop
lret
popa
scas
or
sub
cmp
xor
inc
leave
arpl
cmp
sub
jbe
pop
jecxz
push
sbb
sbb
jl
notl
sub
je
insl
clc
adc
out
lds
mov
cli
mov
outsl
mov
hlt
lods
js
xchg
pop
stos
mov
jp
js
dec
inc
mov
pop
scas
inc
pop
jmp
insb
stos
je
nop
incb
pop
push
jp
dec
inc
call
adc
andb
xor
je
imul
ljmp
push
jmp
inc
inc
ss
adc
jne
dec
fildll
push
andl
pushf
out
mov
and
mov
cltd
add
sub
jb
add
add
mov
loope
cmpsl
sub
pop
pusha
iret
pusha
inc
mov
cltd
push
mov
mov
icebp
and
icebp
nop
sbbl
rorl
mov
std
lods
mov
cs
xchg
mov
out
shrl
xchg
push
imulb
faddl
sbb
mov
test
ret
les
jbe
sbbb
mov
into
cmp
jno
xchg
rolb
mov
sbb
in
mul
rclb
cmpsl
add
adc
inc
sbb
inc
rclb
nop
xor
sti
call
mov
test
dec
dec
pop
test
xor
add
dec
jmp
out
aas
in
out
mov
add
ds
sbb
hlt
push
icebp
pushf
es
xor
aad
xlat
xor
subl
stos
push
mov
decb
jne
leave
sbb
ret
scas
js
cld
xorb
cmp
pop
out
xlat
xor
push
fwait
mov
orl
and
pop
push
dec
fsubrl
arpl
or
inc
mov
cmp
sbb
addr16
cmpsb
shlb
fcoms
jnp
xchg
dec
ss
jp
stos
dec
push
pop
ss
icebp
adc
fstpt
push
out
xorb
nop
fisubs
bound
jno
and
rcll
mov
pop
data16
cmc
ret
inc
or
ja
xlat
daa
cmp
je
cmpsb
cmpsl
dec
push
lods
add
repz
xlat
pop
add
movsb
jmp
mov
outsb
mov
into
movsl
fldenv
ds
mov
call
in
mov
pop
mov
cwtl
ror
add
xchg
outsl
mov
out
mov
mov
mov
out
sub
insl
clc
pop
mov
mov
cwtl
nop
stc
xchg
ljmp
mov
subl
lret
aas
jmp
test
mov
popa
js
mov
xchg
aad
fwait
mov
mov
mov
test
push
mov
outsl
sub
scas
push
in
inc
int3
imul
cmp
push
cmpb
icebp
sub
lock
sbb
lahf
xchg
sbb
clc
inc
in
inc
imul
popf
xchg
push
out
dec
xchg
sub
sub
push
data16
cmp
ficomps
test
jb
push
xchg
add
pop
nop
xchg
or
pop
test
test
sbb
jg
sbb
test
push
mov
adc
call
pop
imul
outsl
fidivs
mov
test
popf
repnz
sub
clc
iret
sub
mulb
xchg
sub
js
dec
jo
cmp
or
jne
mov
into
add
sub
lcall
push
lods
clc
dec
mov
int3
movntq
out
adc
sub
inc
aas
sbb
mov
mov
cmp
and
lahf
test
cmpl
in
hlt
adc
jmp
pop
in
aam
repnz
adc
stc
inc
call
pop
in
pop
cmpsb
mov
leave
adc
or
test
xchg
xchg
in
inc
xor
xor
jmp
xlat
sbb
pop
fcmovnb
frstor
push
mov
lock
dec
cmc
and
stc
inc
repnz
je
outsl
xorl
xchg
or
ljmp
out
xor
cmp
jne
xor
and
test
cmp
xchg
xchg
popa
sti
pop
shrb
add
fwait
dec
mov
xchg
sbb
outsl
fwait
adcb
sbb
pop
xchg
adc
in
icebp
into
mov
clc
xchg
ret
int3
mov
inc
inc
sub
in
cmpsl
xor
and
pop
imul
sbb
mov
enter
fmull
loope
mov
add
aam
loope
or
inc
push
adc
daa
outsb
lahf
xor
lcall
lds
jle
inc
xorb
jp
fidivrs
subl
gs
or
pop
jb
ficompl
adc
push
mov
and
sub
and
or
xor
test
xor
fnsave
outsb
mov
jno
xor
add
or
xlat
int3
and
shll
fiaddl
and
add
bound
aam
daa
cmpsb
mull
in
sti
sub
sub
fxch
pushf
sub
arpl
scas
inc
xrelease
arpl
pop
sbb
imul
imul
es
jne
test
lock
iret
in
and
shrb
fs
ret
or
out
jns
jle
je
hlt
aam
aad
clc
push
filds
cli
dec
xor
and
xchg
dec
xchg
xor
fmull
imul
mov
stc
ror
and
sub
cwtl
sub
fucom
mov
insb
lods
mov
ficoms
mov
aam
cmpsb
sub
insl
jle
out
mov
out
pop
xchg
out
outsb
sub
pusha
sub
jbe
dec
in
cmovne
pop
push
sti
mov
scas
mov
insl
popf
adc
mov
push
fldcw
out
fildl
dec
repnz
sbb
orl
sti
push
jg
ss
hlt
movsb
mov
cwtl
sbb
dec
dec
pmaddwd
pop
cmp
cs
pop
aaa
scas
and
dec
adc
push
add
mov
out
pop
stos
mov
fidivl
fmuls
add
jl
mov
popf
dec
in
psubusw
cld
xchg
or
adc
jbe
or
mov
imulb
nop
pop
push
adc
pop
gs
scas
and
xor
push
xor
sbb
push
cli
ss
push
mov
pop
xlat
push
pop
lods
loop
icebp
xor
cmc
pop
shl
pop
out
pop
xor
or
fs
data16
or
hlt
jmp
adc
pop
and
in
imul
imul
lods
or
mov
insl
add
mov
mul
jno
push
jge
cmp
mov
das
dec
daa
in
aad
hlt
xor
add
xor
dec
cmp
popf
test
mov
dec
or
cmp
imul
mov
dec
insl
inc
sub
sti
mov
xchg
and
aas
sub
mov
je,pn
mov
or
xchg
xor
jle
inc
ss
dec
cmp
jae
fidivrs
push
inc
push
arpl
add
xchg
test
add
mov
je
and
mov
push
scas
jp
add
mov
push
cmp
adc
jle
test
ljmp
std
or
sbb
dec
pop
pop
mov
mov
lret
push
jne
and
scas
sbb
jmp
pop
dec
jecxz
sti
dec
or
pop
dec
test
pop
push
ret
cmp
cmp
test
xchg
pop
jmp
pop
movsl
movsl
fdivrl
cmp
in
int
mov
add
pop
dec
jle
push
mov
aas
ficompl
cmpl
xor
jp
in
xchg
shl
push
pushf
call
mov
or
or
addr16
pop
cmp
popf
pop
sbb
in
and
imul
int3
mov
inc
data16
int3
lods
js
dec
loop
in
dec
or
dec
dec
dec
lds
loop
inc
xlat
js
mov
fs
or
mov
ljmp
mov
loopne
xchg
adc
xchg
adc
test
jno
adc
cmpsb
lret
loop
mov
ljmp
push
stc
sub
cwtl
sub
aam
ljmp
jmp
insb
xor
cmp
clc
lods
push
or
and
or
dec
fsubrp
repz
je
ja
lods
repz
shl
mov
mov
add
fdivs
push
sub
cwtl
xorl
popf
sub
in
adc
ret
sbb
std
cmp
xchg
adc
xchg
pop
and
fistpll
mov
xor
dec
sbb
xchg
iret
in
hlt
je
xor
xor
and
cmp
rclb
add
mov
mov
das
lods
cwtl
mov
add
and
mov
or
add
jl
inc
push
and
cmpsb
movsl
fmuls
adc
mov
lods
insl
mov
or
add
out
sub
push
sub
xor
sbbl
rclb
movsl
sti
je
jg
adc
cmp
stos
setle
repz
push
idivl
jecxz
sbb
out
jmp
shll
dec
jl
push
cli
sarl
aaa
in
out
cmp
repz
jmp
lods
cmc
jmp
shrb
xlat
sub
out
jbe
push
or
cld
cld
mov
xchg
les
or
push
cmpsb
imul
repnz
lock
push
scas
xchg
push
push
aas
xor
ljmp
xchg
add
mov
lods
jecxz
in
cmp
cli
lds
pop
jecxz
addr16
inc
cltd
sbb
scas
xor
std
push
adc
flds
jl
shrl
in
iret
enter
fiadds
dec
clc
fisubl
jg
and
cmp
movsb
inc
lods
in
xor
fmuls
mov
add
pop
test
pop
mov
gs
arpl
dec
in
xchg
js
fwait
enter
enter
cmp
add
sub
enter
es
adc
or
in
fildll
xorb
pop
push
filds
mov
lods
out
fsubr
clc
xchg
pop
movsl
pop
jge
aaa
aad
outsb
push
ds
xchg
arpl
pop
cmp
inc
fnstenv
enter
fwait
ja
mov
sub
pop
cmp
leave
aaa
rolb
push
sbb
sarl
fbld
test
or
pop
jmp
add
into
in
fwait
dec
add
push
push
dec
fs
dec
jae
ljmp
jb
lcall
imul
jno
pop
popa
jmp
dec
leave
or
pop
jp
pop
xor
mov
into
jns
adc
mov
daa
lret
movsl
rclb
repnz
ds
ret
sahf
push
outsb
aaa
das
das
xor
ret
mov
mov
ss
add
aas
popa
mov
rclb
cmc
aas
test
sbb
test
cmp
mov
hlt
in
ja
sarl
or
inc
aam
cmpsb
imul
jmp
adc
mov
inc
adc
sub
mov
or
adc
pop
lahf
psrad
gs
xchg
cltd
mov
sbb
dec
sub
xchg
roll
das
add
push
push
xchg
adc
std
sub
cmp
xlat
xor
fsubl
push
nop
in
popw
xchg
fdivs
stos
sub
or
orb
cwtl
out
pop
lea
dec
pop
mov
mov
inc
and
js
push
mov
imul
jns
and
int3
push
aam
mov
inc
imul
mov
push
push
mov
ud0
loop
push
sahf
pop
out
mov
adc
pop
push
adc
add
imul
sbb
rcrb
cmp
sti
sub
shlb
and
sti
mov
imul
push
xchg
and
push
push
or
std
sbb
sahf
mov
xlat
inc
std
push
lret
gs
fldl
sub
ds
xlat
rcrl
dec
fwait
sbb
xor
out
push
inc
push
iret
cltd
jnp
cmc
loope
and
pop
or
dec
push
pop
fidivrs
nop
enter
add
test
lcall
jmp
inc
and
push
inc
sarb
popa
xchg
out
imul
jle
sbb
xchg
sti
xor
movsb
daa
lock
int
lahf
fdiv
sub
and
mov
rorb
xor
dec
loop
out
lret
lock
scas
in
call
out
lock
dec
adc
out
addr16
popa
xchg
negb
sbb
mov
push
xchg
push
pop
inc
pop
jb
jmp
and
fnstcw
adc
insb
xchg
mov
mov
iret
xor
xchg
fwait
stos
lahf
lds
outsb
add
scas
mov
pop
insl
push
repnz
or
pop
cmpsl
xchg
movsl
sub
icebp
adc
fisubs
fnstsw
and
sub
out
add
jecxz
cltd
and
mov
dec
xor
add
shr
push
xchg
cmp
cmp
push
outsl
and
aaa
push
mov
sub
xor
xchg
mov
push
fcomp
cmp
pop
rclb
xchg
adc
xchg
js
jae
inc
out
sbb
xor
push
mov
out
jne
clc
jecxz
adc
loop
jae
jecxz
ljmp
mov
sub
es
pop
outsl
out
and
xor
jecxz
xchg
jge
pop
sbb
push
stos
mov
imull
movsl
add
xchg
pop
sub
mov
mov
sub
jge
lret
hlt
pushf
lods
push
jb
adc
sbb
xlat
sub
xor
out
push
xor
mov
adc
int3
ud0
rcrb
dec
hlt
in
adc
sbb
out
pop
or
add
dec
ret
or
push
inc
jnp
and
in
push
shr
jp
shl
bound
pop
outsl
mov
fildl
push
icebp
add
movsb
rcll
jl
in
push
and
add
lock
dec
sbb
enter
push
jg
xor
out
jno
shl
and
mov
push
xor
push
loope
fstpt
mov
insl
sbb
mov
lahf
std
scas
sti
pop
jge
repnz
mov
movsb
clc
shl
xchg
lret
ds
mov
psrlq
push
pop
lret
outsl
pop
cmp
imul
frstor
sub
int3
and
insl
out
xor
lods
xchg
sub
gs
sbb
test
add
fstp
and
pop
je
or
cmp
pop
push
add
add
xchg
lods
fidivrs
stc
xchg
xor
push
ret
add
stos
xchg
pop
scas
push
rorb
mov
out
cld
inc
nop
sbb
pop
das
add
mov
dec
and
dec
fiadds
dec
stc
jmp
cmp
jo
adc
cmp
daa
push
int3
cmp
lret
add
sbb
popf
mov
inc
movsb
jnp
and
jl
inc
sbb
pop
dec
insb
test
test
add
push
hlt
mov
repz
icebp
aaa
imul
push
into
add
fwait
sbb
mov
lds
fdivrl
jbe
xchg
out
xchg
ret
inc
push
mov
aas
push
bound
je
inc
sahf
push
ljmp
fsub
nop
inc
xor
add
cmpsl
xchg
sub
jne
push
push
mov
js
mov
xor
sbb
repz
adc
dec
mov
cmp
aad
sub
scas
xchg
stos
idivb
dec
adc
jecxz
es
pop
jne
arpl
push
xchg
pusha
inc
punpckldq
enter
cmpsl
lods
add
push
push
mov
xchg
push
jl
mov
out
sbb
sbb
mov
dec
inc
mov
test
in
into
and
pop
push
leave
shlb
pusha
rcll
xor
imul
les
sub
adc
jmp
cwtl
cs
hlt
rorb
pmulhw
movsb
adc
xchg
sub
and
rcrl
jge
mov
loopne
or
test
jecxz
sbb
sarb
pop
andb
addb
fnstsw
dec
cmp
lods
dec
call
dec
push
ss
je
mov
pop
adc
sbb
shlb
sahf
xor
mov
mov
iret
sub
add
mov
jnp
sub
popf
ljmp
es
mov
jmp
or
mov
ljmp
scas
jae
repnz
mov
push
and
xchg
xchg
xchg
je
or
mov
hlt
jbe
dec
dec
sbb
pusha
push
push
lods
test
test
in
or
xlat
hlt
xchg
lret
fstpt
or
add
sbbb
jge
pushf
stc
jo
sbb
loopne
xlat
sbb
push
repnz
movsb
pop
pop
out
xor
pop
rolb
add
jecxz
addr16
pushf
addl
ret
xchg
mov
in
push
int3
lret
xchg
push
rcr
xchg
cmp
xchg
movsl
popl
sub
je
mov
fcmovnu
dec
mov
xor
movsb
aam
fistl
mov
xor
and
sbbl
loope
and
xchg
fwait
pusha
bswap
xlat
and
xor
lret
pop
std
sub
cmpsl
sub
out
loop
and
adc
cmp
sbb
mov
and
pop
pusha
add
roll
jmp
ja
ljmp
sbb
sub
sbb
mov
xor
xchg
rcl
ljmp
ss
rcll
movsl
push
outsb
sbb
clc
cmp
notb
add
xor
lods
push
imul
push
stc
adc
or
jno
xchg
adc
movsb
ret
cmp
into
lret
sub
xchg
add
movsl
in
imul
daa
loop
mov
out
cmp
or
mov
cmp
push
cs
mov
cmpsb
and
add
cmp
add
aaa
adc
mov
into
mov
scas
lds
inc
sahf
out
leave
imul
lret
addr16
pop
scas
stos
inc
fdivr
cmp
shrl
xchg
sub
cmp
cmp
lods
or
add
or
lds
mov
mov
xor
adcl
jg
cmp
stc
mov
sub
sub
lods
sub
mov
leave
in
jmp
popf
mov
addr16
xor
vmptrst
xor
inc
aad
jns
das
add
xchg
and
test
enter
pushf
add
iret
outsl
jg
or
dec
cmp
sbb
cmp
lods
sbb
std
sti
pop
xor
int3
sti
addr16
inc
hlt
jg
and
cwtl
sub
dec
mov
cmp
and
leave
aas
pop
add
test
dec
push
mov
fnstenv
fdivrs
jg
adc
pop
js
outsb
mov
sbb
insl
or
mov
or
clc
pusha
mov
ror
push
in
arpl
sub
rcr
xlat
ja
out
rcl
xor
insl
aam
sub
test
js
inc
sub
das
rcrb
adc
in
rolb
or
xor
insl
sub
or
sbb
xchg
fcoml
mov
lds
movsb
cs
or
jle
fucomi
cmp
fstps
dec
shll
mul
push
xchg
out
push
cmp
add
jle
daa
adc
mov
scas
dec
lcall
add
pop
add
fnstsw
inc
lods
addr16
jmp
test
mov
adc
xchg
cmp
or
pop
popf
repnz
cltd
dec
cmpsl
aas
sub
out
nop
sbb
jg
mov
inc
cmp
adc
inc
imul
repz
mov
xchg
icebp
gs
es
fiaddl
pop
inc
pusha
cmpsl
xchg
ret
out
xor
push
push
xorb
loopne
cmp
imul
aaa
inc
add
fwait
ret
dec
xor
push
dec
fnsave
fisttpl
mov
sub
mov
xor
iret
push
jge
hlt
seto
cmp
xor
push
push
and
and
mov
lahf
sbb
popa
mov
mov
lea
and
cmc
arpl
aam
fwait
pop
pop
lock
nop
fcoms
scas
pop
idiv
hlt
mov
pop
pop
xchg
xchg
lahf
xor
mov
add
cmp
je
in
inc
in
loop
imul
xchg
jbe
test
cmp
daa
data16
or
jbe
adc
arpl
xchg
jo
arpl
mov
test
or
sub
sub
outsb
mov
iret
cmp
push
movsl
arpl
aas
dec
sbb
mov
mov
mov
insb
lret
add
cmp
mov
andl
mov
pop
pop
cmpsb
out
es
mov
je
lods
imul
test
call
add
test
pop
push
dec
cli
mov
sahf
push
mov
push
fstps
mov
out
fisubrs
cmp
rcrl
push
ds
cmc
mov
mov
sbb
or
jl
lds
pop
pop
rolb
negb
sbb
or
scas
xchg
in
mov
push
rcl
imul
out
dec
nop
das
sahf
cs
push
leave
cmp
ret
sbb
push
lcall
or
pop
outsb
mov
sbb
jb
fwait
sar
stos
mov
cmp
adc
sbb
push
jecxz
icebp
mov
lret
loope
sbb
dec
jl
adc
cmp
sub
test
sbb
or
or
push
push
push
mov
jne
mov
std
inc
cmpl
fldt
dec
adc
out
orl
not
and
push
or
and
dec
xlat
mov
in
sub
fs
int
loopne
cmc
jmp
ret
mov
mov
aas
mov
mov
xlat
pextrw
and
sub
das
lods
cmp
jle
dec
call
jnp
or
pop
mov
arpl
out
fimuls
dec
loopne
cmp
add
pop
or
mov
xor
jecxz
jae
je
sbb
and
jg
add
cmp
scas
dec
xor
xor
insb
sahf
loopne
lret
hlt
pop
sbb
push
lret
icebp
xchg
jbe
push
sub
icebp
mov
loop
dec
out
dec
inc
leave
mov
sbb
das
ud2
lcall
fcoml
jmp
test
fisubs
ds
std
mov
push
xor
insl
xor
or
out
int
pop
aad
in
in
in
cmp
push
pop
stos
xchg
dec
fcomps
lods
int
mov
mov
mov
enter
imul
jb
or
fiadds
int
mov
sub
jo
dec
sahf
imul
mov
and
iret
inc
cli
sub
aas
outsl
bound
pop
bswap
into
daa
ja
or
pop
rcrb
push
and
dec
push
jae
jmp
fs
call
pop
jg
icebp
arpl
sub
sub
mov
es
add
aaa
add
jb
sbb
mov
xchg
out
add
xchg
ja
add
sub
xlat
push
pusha
and
ficoms
add
es
imul
es
outsl
cld
pop
lcall
xor
sub
ljmp
mov
mov
pop
add
xchg
cmpsb
sub
sub
mov
lahf
out
xchg
pop
mov
ds
lret
fs
in
sbb
mov
push
idivl
pop
daa
out
or
jmp
out
or
fucomp
adc
fcomip
add
adc
add
jmp
out
jno
jecxz
and
jno
mov
add
push
sbb
imul
movsb
pop
jo
out
ffree
into
adc
sbb
gs
sbb
rol
cmp
inc
fistl
lcall
sbb
bound
sub
and
sbb
repz
xchg
faddp
sbb
testb
movsb
jl
jbe
fnsave
add
jb
inc
js
sarl
mov
loop
jp
mov
dec
into
mov
ljmp
js
mov
dec
decb
repz
js
mov
dec
ja
aaa
dec
imul
aad
cltd
dec
push
loope
rorb
ret
sbb
loop
jecxz
imul
pop
xchg
cmp
ficomps
in
pop
cltd
push
les
mov
adc
iret
popf
outsl
and
int3
movsl
movsl
sub
rcrb
sbb
fcmovnb
call
pop
and
sbb
imul
pusha
and
pop
insw
hlt
cmpsl
je
pop
icebp
push
hlt
xor
int
cmc
test
es
outsl
mov
testl
xor
fadd
fstpl
shll
imul
and
or
daa
mov
cmp
inc
inc
and
cmp
dec
mov
xor
fiadds
out
jno
fcoml
test
out
push
xor
sub
and
push
dec
jae
pop
fsub
sahf
lock
jns
mov
xchg
lods
ljmp
and
adc
arpl
jbe
int
pop
pop
clc
dec
adc
cld
fadds
xor
dec
clc
lock
testl
jns
jg
jle
inc
mov
cmp
xchg
mull
jge
cltd
cmp
add
jne
xchg
fsub
jns
shlb
rcll
mov
cmp
in
sbb
sub
mov
sbb
inc
loopne
adc
add
cmp
lods
lods
repz
mov
and
push
out
and
mov
push
fsubs
imul
mov
mov
push
fisubrs
dec
xchg
enter
mov
out
sbb
bound
or
xchg
scas
icebp
sbb
aam
inc
fwait
jne
popf
in
xor
dec
nop
mov
mov
cltd
gs
inc
mov
jge
dec
push
jle
xchg
call
cli
mov
push
sti
add
in
mov
mov
insl
add
or
std
push
out
pop
aad
sbb
or
ljmp
adc
adc
sbb
inc
fsubrl
jl
out
xchg
imul
sub
shrb
scas
loop
push
shll
clc
faddp
mov
cmp
xchg
jbe
mov
mov
sbb
jle
xchg
jecxz
push
mov
fs
sbb
or
pop
cmp
iret
mov
es
push
jmp
test
daa
mov
out
loop
test
dec
dec
add
mov
jbe
push
adc
jns
adc
and
adc
mov
jne
mov
jecxz
mov
aad
fildl
adc
inc
shrl
fsubrp
mov
push
mov
lret
push
pushf
cli
mov
jnp
xor
fimuls
roll
mov
call
ljmp
adc
arpl
es
test
fwait
mov
movsb
xchg
jp
addr16
adc
aas
imul
mov
gs
daa
inc
xchg
inc
inc
ss
jg
sub
es
jecxz
shlb
call
cmp
xchg
rorb
lahf
jnp
out
or
or
push
cwtl
insb
pop
movl
call
jmp
divl
push
pop
divl
pop
push
add
pop
into
stos
js
out
loop
xchg
in
loope
push
pusha
aas
jo
mov
sub
bound
pop
out
jne
jl
push
lods
fs
ret
dec
sti
aad
shl
flds
mov
cmp
and
push
push
loope
gs
stos
inc
int3
xor
push
cwtl
add
and
iret
sub
xchg
sub
orb
rclb
or
in
rcll
enter
flds
dec
hlt
loope
lods
testl
ss
sarl
lret
stos
pop
push
in
pusha
seta
sub
sub
insl
imul
cmc
repz
mov
inc
jl
pop
mov
push
push
and
rcll
xor
jno
cltd
fcmovb
xchg
sarl
dec
pop
shrb
and
lahf
lods
movsb
popf
std
inc
cmpl
jnp
xor
cmp
cli
sub
lret
add
adc
or
inc
adc
lds
adc
mov
sti
in
adc
aad
or
fs
icebp
iret
or
js
xor
adc
cmp
into
xchg
hlt
mov
push
repnz
or
cmp
pop
gs
add
and
add
fisubl
mov
add
adc
inc
imul
test
xor
je
or
adc
add
sbb
into
xchg
pushf
xor
sub
insl
add
mov
jmp
or
pop
cmc
xor
xor
sbb
pop
add
mov
mov
sahf
test
adc
xchg
ljmp
hlt
dec
decb
xchg
daa
mov
cld
nop
sahf
in
jns
push
fs
repnz
rolb
scas
jecxz
les
xchg
and
fstpl
sub
inc
leave
mov
mull
dec
jb
or
inc
cmp
jecxz
add
mov
mov
jp
adc
lahf
je
sub
xor
js
mov
sub
in
xor
gs
incl
fcoml
fs
pop
lcall
mov
xchg
push
clc
int3
mov
into
and
adc
push
mov
popa
jb
mov
mov
push
cmp
xor
jno
fldcw
mov
cmpsl
xchg
ret
out
add
sub
popf
add
jecxz
iret
cld
jmp
xor
addl
dec
es
scas
xor
mov
mov
addr16
add
sub
sti
add
stos
dec
subb
push
push
sbb
fisubl
inc
fcmovnu
add
pop
pushf
ss
jno
xchg
lods
popf
test
and
xor
cmp
xor
jmp
gs
xchg
mov
push
sbb
cld
sub
add
shll
mov
outsl
mov
call
push
aaa
fisubrs
cmpsb
in
filds
xor
and
push
ljmp
mov
mov
xor
into
dec
dec
pop
xchg
ret
mov
add
adc
in
pop
dec
pop
or
sbb
stos
das
pop
inc
roll
pop
stos
insb
fidivrl
adc
jmp
mov
test
or
fildll
xchg
popa
cmp
shrb
dec
or
xchg
loop
push
sbb
jp
ret
sub
push
xchg
or
mov
push
test
mov
xor
add
movsb
dec
jp
jns
push
in
pushf
clc
adc
adcl
mov
jnp
addr16
fcmove
negl
lea
scas
cmc
mov
in
gs
xchg
in
cmp
repnz
movsb
cmc
int
adc
xor
xchg
int
push
scas
inc
mov
inc
xor
sbb
push
stos
push
std
push
cmp
imul
cwtl
lods
xor
lret
mov
xchg
rcrb
into
push
in
xor
mov
push
iret
pop
add
or
movsl
or
arpl
adc
cmp
push
or
bound
mov
xlat
xor
repz
push
cmp
ret
dec
push
bound
adc
or
jg
pop
lret
jp
lock
test
filds
and
xlat
jb
in
pop
add
movsb
adc
push
xchg
cmpsl
sub
and
inc
push
cltd
mov
leave
jle
jb
pop
dec
sbb
jmp
fbstp
cld
test
add
mov
add
mov
mov
xchg
repnz
jecxz
pop
shlb
dec
sarl
ret
xchg
pop
mov
mov
add
adc
pusha
xor
sub
rcrl
fadds
lahf
push
lods
repz
test
pop
imul
ss
or
xchg
cmp
out
xor
out
fnstsw
out
jle
divl
pop
push
test
clc
pop
lret
shll
ljmp
cltd
xor
jp
aaa
xchg
loopne
ret
ja
lcall
xchg
pop
ss
dec
fwait
jns
xor
adc
mov
adc
jmp
repnz
fidivs
iret
xchg
xchg
shr
test
cwtl
dec
push
mov
pop
fsubrl
cmpsb
or
stos
push
ret
push
mov
add
push
xchg
dec
rorb
dec
cmp
out
or
out
lock
inc
stos
addr16
shr
shlb
rorl
shlb
call
sbb
cmp
add
xchg
push
sbb
jae
fistps
mov
test
sub
adc
cmpb
ds
jl
pop
orb
pop
fiaddl
iret
fnstenv
pop
mov
add
cli
push
jno
and
aaa
ss
cltd
pop
lret
testb
xchg
insl
cmpsb
pop
les
orb
and
jl
gs
rolb
xor
fldl
rcl
notb
or
int3
jge
sahf
cmp
sbb
pop
imul
sahf
test
sbb
loop
addr16
or
cmpsb
dec
aaa
vpshufhw
clc
jbe
push
xchg
push
pusha
xchg
test
outsb
sbb
adc
and
pop
icebp
std
fcomip
dec
xlat
jo
fmull
rcl
mov
arpl
fists
mov
adcb
cmp
scas
jno
cmp
mov
test
inc
das
nop
jae
aaa
jecxz
andb
mov
jns
movsl
cmc
cmp
out
xlat
push
sahf
fsub
and
fidivs
add
cmp
dec
sbb
shr
jg
lds
imul
mov
push
or
cmpsl
stc
lea
jle
adc
dec
test
cmp
inc
clc
aaa
pop
sbb
mov
imul
mov
mov
sbb
pusha
jg
adc
jecxz
ja
fisttps
movsb
jecxz
inc
mov
mov
and
and
sbb
roll
out
imul
push
cmpsb
dec
lds
mov
testb
loop
arpl
push
jo
push
rcll
jmp
and
data16
aas
pusha
pushf
ljmp
push
adc
and
adc
popf
add
enter
pop
add
mov
xchg
jb
adc
les
out
in
fs
sbb
xchg
pop
dec
lret
jbe
cmp
dec
sti
pop
sti
pop
mov
sub
xlat
int3
jecxz
jge
push
dec
ss
mov
js
push
cs
ss
pop
sub
jae
into
or
cmp
push
in
enter
ror
cmpsl
dec
xlat
push
sbb
xor
leave
xchg
push
aam
sub
loop
xchg
sbb
pop
push
ss
mov
mov
in
scas
in
mov
cmp
push
aas
aad
icebp
inc
push
imul
sbb
mov
sarl
addr16
outsl
sbb
ret
popa
push
dec
decl
in
xor
inc
insb
std
jp
mov
fistpl
sbb
aam
cltd
cli
xchg
sbb
push
mov
movsl
pop
push
dec
dec
lret
daa
fildll
ret
pop
pushf
mov
imul
push
push
pop
jmp
scas
and
adc
jno
ss
mov
or
lods
lea
sub
sub
fmull
cmp
mov
jno
push
jge
loope
fsts
mov
jge
xor
js
or
cmp
pop
lods
aam
sub
and
xor
sub
lock
sti
outsl
or
imull
xor
loope
dec
fiaddl
fwait
divl
cmc
xchg
jge
xor
mov
out
xchg
push
dec
dec
sbb
xchg
pop
push
pushf
add
fadds
lock
xchg
push
mov
cmc
inc
les
fstpl
mov
xchg
dec
fcoml
xor
aad
icebp
pop
dec
mull
gs
jno
lret
das
xchg
mov
test
ds
or
mov
sarl
orb
outsb
and
cmpsl
sbb
jnp
jmp
movsl
pop
pop
popl
mov
outsl
int
push
test
or
jecxz
aam
xchg
jo
inc
int
pop
cmpsl
jns
adc
call
pop
ss
push
adc
int3
cld
sbbb
cmpb
lcall
in
pusha
movsb
loop
shlb
stc
inc
ds
fbld
lahf
repz
pop
xor
cs
sub
repz
mov
ljmp
and
ss
adc
and
sbb
pop
movaps
push
lahf
ret
sub
shll
inc
cmp
pop
push
sub
aad
es
dec
dec
in
mov
ja
jl
cmpsb
clc
and
aas
adc
mov
fimull
xor
xchg
ret
stos
out
aam
test
sub
xchg
scas
rclb
ds
clc
and
inc
insl
and
shrb
addr16
pushf
mov
es
addr16
mov
inc
pushf
outsb
cld
hlt
sbb
adc
paddusw
test
movsl
ret
mov
pop
fwait
daa
lcall
lods
xor
inc
js
ss
popa
ss
in
fbld
xchg
shll
scas
xchg
leave
inc
lock
adc
lods
hlt
pop
inc
insb
pushf
push
in
and
int3
pop
sar
fstpt
cmp
mov
mov
mov
xor
roll
xchg
jae
setp
xchg
cmp
xchg
jae
push
or
pop
gs
adc
or
add
cmp
jo
shl
mov
in
cmp
js
lock
adc
lea
daa
sub
pusha
add
jge
lcall
js
stc
add
dec
fst
orl
xchg
test
jns
xchg
inc
jge
jp
add
ficoms
dec
lret
and
mov
inc
push
mov
jae
mov
imul
loopne
jb
jge
cld
cmpsb
add
cmpsb
sbb
loop
arpl
pop
mov
and
pushf
stc
jnp
fldt
loope
mov
lret
add
data16
cmp
popf
movsl
push
dec
adc
cs
out
mov
movsl
iret
es
das
movsl
ss
call
leave
adc
dec
jl
and
dec
dec
fucomp
adc
jo
inc
mov
jecxz
daa
mov
test
adc
mov
pop
sbb
adc
int3
inc
or
dec
push
inc
int
sar
push
mov
inc
out
repnz
fcmovbe
fiadds
mov
mov
pushf
mov
dec
cmpb
push
dec
xchg
int
add
cli
mov
mov
nop
mov
rep
aad
clc
data16
int
dec
jg
leave
mov
mov
xchg
jb
adc
xchg
ss
andb
das
ds
orb
cs
inc
repnz
push
adc
lea
lret
addr16
out
cmp
ret
xor
xor
lods
cmp
add
and
mov
stc
insl
xor
or
lods
and
cmp
mov
lea
dec
cltd
cld
sbb
push
mov
enter
push
and
mov
ss
sub
inc
xchg
xor
or
ret
push
insl
mov
mov
xchg
push
mov
scas
into
cmp
sahf
clc
cmp
and
out
out
icebp
push
cmp
gs
mov
sbb
mov
sbb
sub
sub
dec
xchg
das
idivb
cmp
and
fsub
je,pn
xor
pop
test
leave
sub
push
cmc
in
xor
or
sub
out
xorl
add
adc
nop
xchg
jbe
testl
pop
mov
les
mov
xchg
push
js
sub
or
out
mov
iret
fcoms
push
and
mov
adc
js
mov
lcall
fisubrs
push
or
hlt
das
xchg
mov
adc
sbb
mov
xchg
fsubl
cwtl
xchg
mov
xlat
or
jno
sub
lock
xchg
xor
aas
and
mov
dec
fildll
clc
imul
js
jmp
xor
shlb
jecxz
push
test
sub
addr16
loop
stos
adc
test
or
add
lret
aad
push
push
daa
lret
mov
rorb
ret
das
imul
cmpsb
das
div
es
call
test
jecxz
lahf
sbb
loop
in
pop
xchg
mov
fidivrl
mov
popa
nop
je
pusha
stos
imull
insl
mov
push
mov
ljmp
sbb
mov
leave
mov
ret
addb
int3
xchg
movsl
xchg
push
aam
sub
movsb
and
dec
sub
repz
mov
pop
xor
and
dec
pop
ds
ret
test
mov
mov
test
xchg
sti
in
repz
xchg
call
push
adc
cmpsb
sub
add
mov
insl
jnp
fdivrs
cmp
sti
fidivl
popf
mov
ret
adc
and
jmp
je
push
ljmp
xlat
lret
ret
cmp
add
mov
jmp
clc
fwait
je
dec
fwait
xorl
pop
or
scas
cmp
iret
cs
fistl
push
into
fistps
dec
inc
xor
movsb
cmp
xor
pop
inc
or
fiaddl
decl
xor
fs
push
lods
jmp
mov
mov
adc
pop
stos
pop
ret
in
cld
mov
cmc
pushf
mov
in
and
cmp
pop
sbb
fwait
int
adc
dec
call
adcl
adc
ja
and
ficomps
sbb
mov
mov
push
inc
repz
sub
inc
dec
sbb
nop
stos
push
sbb
dec
es
push
adc
lahf
notb
jge
lret
cmp
in
cmp
fsubrl
add
popf
iret
inc
dec
add
adc
mov
test
xor
mov
roll
jo
push
lods
stc
mov
xor
push
loopne
iret
cli
jmp
arpl
mov
pop
imul
jnp
repz
pop
push
pop
xor
pop
out
pop
or
dec
repz
loop
call
push
repz
cs
aas
ljmp
pop
test
xlat
testb
loop
adc
mov
mov
cmpsl
sbb
imul
inc
loop
scas
mov
test
cmp
rolb
sbb
xlat
lahf
lods
or
ljmp
mov
cltd
repz
lods
or
addl
fadds
stos
pop
push
mov
push
and
shll
pop
pop
jle
push
adc
pop
insb
mov
loop
jmp
jbe
out
movsl
jge
or
mov
jecxz
mov
mov
push
mov
mov
xor
jp
sahf
loope
scas
adc
dec
jb
adc
pushf
aas
in
xchg
aam
push
in
ss
inc
push
xchg
mov
mov
sbb
insl
stos
aam
mov
pop
xchg
hlt
out
lods
xchg
pop
push
and
stos
sbb
pusha
jnp
iret
les
jecxz
in
cmp
lods
cli
in
cmpsb
jno
push
aam
out
pop
xor
inc
aam
adc
test
adc
stc
in
mov
mov
ja
out
cmpsb
dec
repz
cmp
out
filds
cmp
pop
dec
mov
jns
adc
dec
mov
in
adc
outsl
adc
xor
inc
aad
add
repz
mov
fdivrl
push
push
mov
jge
fisttps
xchg
cmpsl
scas
stos
lods
or
loopne
and
mov
lods
rep
pop
rcrb
mov
sub
test
mov
push
stc
mov
data16
out
push
jmp
adc
pop
jae
mov
dec
aad
adc
cmp
fdivl
mov
out
mov
dec
shl
loop
jbe
jns
rcl
hlt
and
cmpsl
stc
outsb
xor
dec
push
push
push
add
ds
imul
mov
pusha
dec
mov
shrb
les
popa
sub
ljmp
test
movsb
xchg
pop
kandnw
cmp
rep
mov
cmpsl
inc
push
sbb
adc
xchg
jmp
adc
mov
ret
pop
lock
fwait
popa
push
and
xchg
dec
repz
pop
cwtl
push
shr
addr16
push
popl
aad
shll
mov
mov
dec
fsubp
lods
mov
stc
jmp
lods
lret
sti
fdivl
mov
das
mov
add
cmpsl
and
mov
mov
dec
mov
dec
repz
outsl
mov
dec
out
test
stc
push
leave
and
cmp
iret
js
ficoml
jbe
in
xchg
popf
repz
adc
fistpll
fsubs
mov
ror
stos
cmc
scas
popa
adc
scas
and
fstps
jns
mov
in
xchg
rep
inc
push
mov
push
inc
sbb
inc
push
testl
arpl
in
rorb
jmp
fsubp
imul
sbbb
xchg
push
cmpsb
xlat
pop
push
xor
repz
pop
aad
jae
repz
loopne
inc
mov
xor
addr16
dec
lcall
sub
dec
scas
in
je
das
pop
xlat
add
pop
adc
mov
pushf
lret
jno
repz
mov
dec
mov
add
ret
hlt
outsb
mov
popf
leave
xchg
xchg
clc
cmp
in
das
sub
inc
lds
mov
pop
mov
xchg
out
outsb
xor
jne
push
sub
ficomps
mov
mov
dec
xchg
ret
xor
xor
rorb
jl
shlb
pusha
cmp
cmp
sbb
cvtps2pd
adc
inc
add
and
frstor
jns
pop
adc
stos
pop
inc
dec
jl
inc
dec
insl
addr16
je
or
out
or
jge
mov
orl
or
and
pop
stos
sti
aam
testl
cmp
xlat
sub
dec
inc
fucomip
add
add
jae
divb
adc
push
add
jb
fwait
pop
xor
cmc
add
adc
inc
add
dec
push
pusha
add
xchg
sub
cmp
jp
sub
mov
out
test
jae
push
sub
sbb
or
in
pop
std
lahf
cld
cltd
sub
jae
icebp
aas
inc
dec
pop
adc
bound
cmpsl
dec
popw
xor
ret
ds
addr16
inc
push
mov
push
nop
and
mov
pop
pop
dec
scas
dec
jg
es
push
mov
or
std
dec
pop
ja
fsubrs
push
adc
test
sbb
pop
jns
cmp
and
inc
pop
outsb
fsubr
bound
call
pop
jbe
aas
mov
or
xor
xor
bound
clc
xor
and
push
sbb
fistpll
pop
xor
stos
pop
cmp
pop
push
push
cmpb
sbb
and
and
std
sbb
xorb
aas
add
pop
or
ds
dec
sti
push
or
adc
push
sub
push
ljmp
aas
sub
mov
inc
pop
sbb
push
cltd
insb
dec
test
xchg
notl
jbe
pop
sbb
push
fwait
dec
gs
std
sahf
inc
je
aad
sub
std
push
add
aad
test
cmc
xor
imul
outsl
adc
fnstcw
or
mov
scas
mov
dec
jecxz
in
xchg
aas
pop
fdivl
jo
ljmp
and
ja
jle
inc
sbb
fwait
push
or
pop
inc
adc
pop
lahf
dec
mov
aad
sub
ss
pop
fnstcw
and
int
out
push
imul
mov
jbe
cmc
cmp
inc
call
pop
or
imul
das
sub
in
test
jb
push
mov
mov
mov
adc
test
push
sbb
lods
inc
mov
aaa
sbb
imul
adc
movsl
adc
cli
jne
mov
dec
dec
mov
adc
fisubl
sub
dec
inc
arpl
shrb
stc
pop
repnz
mov
int3
jnp
jecxz
repz
jecxz
adc
jle
cmp
push
and
aam
cmp
xor
inc
pop
movsb
cwtl
pop
out
lods
xor
sbb
add
pop
je
mov
rcr
sbb
ja
loopne
add
mov
inc
mov
sbb
imul
out
push
mov
sub
rolb
sbb
sub
aaa
outsl
cmp
xchg
ds
mov
lahf
loopne
or
jo
sub
add
test
pop
xor
pop
push
jno
stos
fidivrl
cmp
push
or
or
ss
and
outsb
sub
clc
imul
sub
pop
mov
popf
iret
xlat
rcrb
sbb
test
lcall
jp
push
loopne
sbb
lods
jle
xor
sti
inc
jl
sbb
inc
fisubrs
pusha
mov
adc
loop
gs
cmp
dec
nop
call
aas
lcall
push
jnp
mov
cmpsl
or
mov
inc
mov
cwtl
or
mov
inc
sbb
in
hlt
add
cli
inc
and
cltd
push
sbb
cmp
ja
inc
or
insb
pop
insl
stos
in
push
idivb
mov
sbb
and
push
cmp
mov
sbb
pop
inc
ja
dec
daa
xor
insb
jb
sbb
adc
mov
cltd
out
or
lcall
lock
fcomps
push
add
xchg
push
push
pop
mov
sub
out
xor
pop
sub
in
mov
div
dec
jb
push
mov
pop
or
stos
in
adc
adc
push
pop
lcall
mov
roll
daa
dec
es
sub
cwtl
sbb
fldenv
jb
cs
xchg
mov
xor
xor
std
jle
sub
cld
mov
xchg
aas
mov
dec
ss
test
je
push
pop
and
dec
mov
and
scas
inc
popf
repnz
push
sub
and
cmp
js
ljmp
out
cmp
sub
enter
daa
sbb
push
lods
clc
dec
cmp
xchg
push
stc
push
pop
inc
cmp
sub
adc
cmpsl
cmp
pop
mov
push
jmp
mov
nop
fildl
cmp
out
inc
xchg
insb
adc
cmp
xlat
aas
or
dec
popf
rolb
push
mov
xchg
or
add
dec
sbb
xchg
xchg
jno
mov
cmp
insb
push
fsubs
fcompl
enter
pop
adc
dec
dec
je
in
push
aas
lds
pop
or
arpl
das
pop
inc
sbbb
pop
mov
lock
mov
push
push
popa
pop
imul
mov
push
mull
jmp
adc
add
add
sub
push
xchg
xchg
mov
repz
dec
aad
repz
xor
cmp
ret
add
pop
add
dec
daa
xchg
lret
xor
push
xchg
sub
add
std
pop
fidivrl
fidivrs
stos
pop
mov
or
sub
xchg
scas
mov
xor
addb
adc
add
inc
arpl
lret
adc
mov
xchg
ss
pop
xor
outsl
stc
or
in
adc
mov
mov
sbb
testl
dec
sbb
add
or
adc
cmp
pop
repz
imul
fstpt
adc
les
adc
lea
xchg
in
jne
cs
xchg
jae
inc
push
fstl
pop
shrl
push
inc
sbb
sbb
mov
mov
add
and
fsubrl
aad
test
pop
rorl
sbb
test
ljmp
jg
sbb
sbb
es
and
sbb
imul
jle
loop
lock
cmc
xchg
jnp
addr16
mov
push
inc
push
in
sbb
inc
push
cmp
in
or
adc
das
cmp
mov
xlat
add
pop
xor
add
xchg
push
jne
ss
pop
or
aam
imul
fnstsw
loope
loopne
dec
inc
push
mov
cmp
push
sub
sub
sbb
adc
shlb
and
stc
lret
fildl
xchg
push
cmp
or
out
add
addr16
pop
or
sbb
xchg
daa
pop
mov
arpl
dec
sti
or
notb
in
mov
jecxz
lea
cmp
jne
inc
inc
popf
incl
aam
add
rclb
xor
test
push
movsl
sub
loopne
pop
push
negl
push
jbe
fnstsw
push
fcompl
and
xchg
jns
nop
loopne
adc
test
out
push
out
pushf
mull
xchg
pop
pop
ss
fistpll
push
xor
out
fs
dec
jae
lret
add
aas
lock
daa
sub
divl
adc
sbb
pop
xor
inc
stc
imul
xor
pusha
jl
movsl
cmp
add
daa
push
sbb
push
lret
outsl
adc
mov
in
arpl
sub
push
cmp
lret
or
leave
xchg
or
sub
outsl
movsb
js
pop
vmwrite
jb
inc
jmp
cmp
xlat
push
ja
jg
mov
pop
push
push
aaa
or
jmp
jge
loope
and
xchg
dec
int
pushf
ljmp
sub
xor
pop
clc
pop
pop
aad
sub
push
inc
or
jnp
xchg
or
out
adc
mov
sub
pusha
gs
xchg
lods
pop
das
imul
adc
lock
dec
sarb
xchg
lahf
fs
sub
ja
cwtl
pop
test
adc
xor
and
inc
dec
mov
sub
scas
movsl
xchg
pop
or
xchg
sbb
testb
test
add
daa
adc
mov
mov
jecxz
dec
pop
xor
push
sbb
fdivrp
dec
and
dec
sbb
push
xchg
es
dec
inc
inc
mov
js
sti
and
inc
inc
gs
and
cmp
outsb
ss
cmp
repz
in
cmp
cmp
inc
dec
inc
movsl
cmp
push
arpl
inc
inc
fsts
pop
fdivs
pop
jbe
out
push
inc
pop
aaa
in
andb
shll
aas
xchg
mov
pop
cltd
sbb
pop
or
fisttpll
icebp
push
xchg
push
mov
lods
xor
sub
adc
daa
pop
adc
cmp
add
test
ds
adc
inc
outsb
sbb
lods
fwait
cli
and
push
sub
inc
jb
sub
xor
clc
addr16
sub
pop
fmulp
cmp
out
lahf
jnp
sbb
add
cmp
inc
xchg
xor
add
and
inc
cmpsb
pop
daa
mov
inc
aaa
pusha
das
sub
jbe
add
sbb
xchg
xchg
test
es
mov
sbb
out
sbb
sub
jg
lcall
mov
shrb
les
mov
repz
xor
cmp
ret
sbb
dec
pop
cmp
in
div
jge
sbb
mov
aaa
pop
test
andb
sbb
push
push
ds
stc
lea
sub
xor
adc
inc
gs
add
jle
cmp
cmpb
push
movsl
adc
inc
outsb
jecxz
adc
mov
fdiv
lea
and
add
dec
fnstenv
adc
lods
pop
jp
cmp
arpl
outsb
iret
sub
fnstsw
pop
rcrl
xchg
pop
out
rorl
cltd
loop
push
push
aaa
pop
in
loopne
aaa
xchg
out
call
jp
ret
fwait
cmp
insb
jo
loope
pop
or
jl
pop
es
ret
jecxz
ret
jae
cltd
jae
add
gs
push
notl
jae
aas
adc
or
add
inc
cmpsb
cmp
jg
push
cmpsl
mov
decl
imul
cmc
insl
jmp
sbb
cmp
ret
std
fs
clc
mov
xchg
add
sub
add
jge
xchg
sub
dec
push
test
fildl
and
adc
inc
sbb
mov
scas
or
testl
aad
push
shl
mov
cmc
jge
icebp
filds
jle
inc
adc
xchg
mov
push
add
dec
or
xor
inc
fbstp
xchg
sbbl
dec
mov
xchg
out
ja
sbb
imul
inc
xor
cmp
js
mov
jnp
mov
sarl
nop
mov
das
das
test
adc
out
mov
sbb
jg
das
orl
rorl
enter
mov
insl
shll
in
jmp
or
iret
scas
fimuls
jecxz
ret
mov
popa
cld
xchg
les
dec
test
mov
out
js
fucomip
inc
dec
and
xor
test
pop
ret
sbb
repz
push
ucomiss
dec
sbb
aaa
fwait
es
add
push
das
in
out
push
or
add
push
test
ret
out
fadds
sub
inc
xor
cmp
add
lock
pop
cmp
push
jecxz
fs
cmc
xchg
adc
in
push
xchg
sbb
je
mov
add
ret
or
cmc
dec
pop
adc
testl
sub
inc
daa
mov
or
add
out
sub
pop
data16
decl
add
icebp
inc
jnp
out
mov
cmc
cmc
sbb
in
cmpsb
mov
and
inc
add
sbb
testl
jp
out
gs
iret
dec
add
fisubs
sbb
add
lret
inc
adc
jns
sahf
lidtl
sub
sub
xchg
lds
sub
push
gs
inc
pusha
push
rolb
cld
cmpsl
ja
jns
and
ss
push
cmp
repz
xchg
or
add
mov
dec
enter
and
cmc
dec
addr16
popa
fisubrs
jae
movsl
dec
sub
and
mov
push
jecxz
in
jb
jnp
and
in
cmpsl
and
cmp
mov
jge
clc
add
lret
ss
out
and
pop
push
sti
xor
push
ret
int
pop
lahf
sub
enter
cmc
sbb
push
mov
pop
cmp
in
in
mov
mov
fwait
sbb
es
add
cld
aad
sub
test
testb
push
and
dec
add
cld
push
pop
out
cmp
es
or
sbb
cmp
insb
test
push
out
lcall
int
sbb
icebp
push
xchg
in
sbb
out
cmp
repnz
inc
cmp
cmp
mov
cmp
or
ss
cmpsl
cmc
cmpsb
into
aad
jnp
addr16
je
cmp
lea
lock
hlt
xchg
div
jbe
inc
xchg
mov
hlt
pop
clc
adc
dec
daa
insl
lcall
xchg
iret
mov
call
jnp
insb
push
aam
addr16
and
out
je
pop
outsl
out
sub
add
pushf
jne
sbb
enter
xchg
jge
icebp
push
jae
add
mov
or
adc
pop
jp
jg,pn
jne
inc
mov
push
jae
jp
stc
lds
out
or
cmp
add
and
push
adc
stc
or
in
push
sbb
and
das
mov
pop
xor
cmc
mov
std
push
xchg
push
daa
xor
adc
cmc
or
jecxz
push
xchg
xor
sbb
jno
sysexit
inc
jbe
xor
jb
imul
add
aas
jb
mov
aas
js
outsb
je
out
lock
ret
es
and
and
out
cmp
and
and
in
je
punpckhbw
and
imul
jno
and
push
inc
pop
pop
arpl
pop
sbb
aaa
jle
es
push
cli
push
pop
inc
aad
aaa
popa
inc
test
data16
jmp
test
mov
sbb
add
out
xor
out
orl
mov
repz
dec
or
movsl
and
xor
mov
inc
daa
jb
sbb
push
sub
mov
aaa
sub
lret
out
loopne
testb
lcall
test
xchg
push
mov
sbb
dec
adc
out
mov
adc
or
fstpl
or
gs
sub
sub
inc
mov
cs
fidivrl
inc
mov
imul
frndint
mov
jecxz
ret
mov
idivl
cmp
jns
js
cmc
clc
je
xor
jns
mov
cmp
xor
sub
push
outsl
repz
inc
cmp
addr16
and
das
dec
dec
pop
out
push
xchg
push
sbb
push
adc
inc
push
pop
push
xor
je
add
mov
stc
js
xchg
adc
loope
pop
aas
negl
nop
lods
add
pop
lods
add
jb
sahf
adc
fsubrp
push
je
xchg
cmp
jmp
add
lods
jg
fsubrs
inc
lret
pop
jge
dec
and
push
pop
inc
imul
inc
js
sbb
pop
jb
cmp
ret
push
arpl
inc
pop
jb
cwtl
or
repnz
bound
loopne
dec
sub
daa
popl
cmp
xchg
or
sbbl
arpl
xchg
xchg
pop
push
push
insb
out
dec
pop
adc
sbb
cli
jbe
nop
fildll
imul
or
mov
pop
mov
pop
adc
fsubs
sub
into
test
cmc
xlat
popa
mov
pop
dec
push
jecxz
aaa
xor
repnz
stc
or
push
gs
arpl
pop
icebp
cmp
pop
push
dec
cmp
pop
inc
in
xor
sub
jns
test
cmp
mov
inc
jg
jl
sub
pusha
inc
filds
pop
idiv
mov
xor
pop
jecxz
inc
lcall
ret
adc
jno
jo
jmp
insl
mov
inc
insb
adc
mov
sub
adc
dec
xor
and
xchg
pop
dec
mov
push
clc
mov
addr16
jne
out
or
insl
lret
nop
pushf
sub
cli
cmpsb
fistpll
in
mov
sub
cmp
push
xchg
sbb
cmp
pushl
and
xor
cmc
cs
jle
sub
add
repnz
sbb
scas
insb
sbb
and
and
xlat
adc
es
inc
mov
clc
ss
lds
aaa
mov
cmp
jne
mov
ds
xor
es
push
mov
mov
inc
fisttps
xchg
sti
ret
jns
je
cmp
sbb
mov
bound
das
aam
pusha
jne
fwait
pop
push
pop
cmc
lds
dec
adcl
xor
lcall
es
imul
mov
faddl
xchg
jne
lret
sub
lea
push
sub
aaa
popf
sub
and
fisttps
scas
pop
pop
sahf
mov
std
pop
repnz
mov
pop
aam
dec
mov
xor
add
lret
sbb
xor
sub
aad
add
nop
lods
xor
mov
out
dec
cmp
push
or
adc
push
mov
aam
js
aaa
jl
fists
and
loope
lock
jne
dec
sahf
xchg
mov
imul
stos
push
addr16
cmp
or
imul
xor
dec
cmp
adc
hlt
inc
pop
push
mov
daa
sahf
push
xchg
xchg
daa
xor
xor
test
adc
jbe
and
aad
xor
jmp
mov
jae
mov
mov
mov
lret
in
and
faddl
push
ljmp
jnp
adc
cmp
icebp
das
aas
mov
sub
pop
dec
jnp
in
sub
and
in
sub
ss
mov
and
pop
addr16
out
out
adc
adc
popa
loope
and
and
inc
xchg
xor
sub
dec
or
idivl
pop
xchg
daa
stc
xor
inc
pusha
cmpb
cvtps2pd
sbb
repnz
repnz
inc
jns
sub
push
push
add
and
out
das
popf
ds
and
sbb
js
aaa
and
xlat
or
cmp
inc
pop
jnp
clc
fnsave
jno
sbb
push
and
xor
dec
push
sahf
push
enter
test
sbb
pop
push
add
inc
jno
or
outsl
xor
andl
hlt
adc
sub
notb
sti
shlb
jo
shlb
imul
sub
push
add
pop
stc
inc
push
fsubs
in
adc
adc
loope
pop
dec
enter
insb
es
mov
aad
nop
out
aaa
ss
mov
fcoms
jge
jns
inc
dec
cmpsl
popa
jg
adcl
adc
iret
dec
inc
jne
sysenter
cmp
out
testb
inc
repz
push
jge
das
pop
jnp
jae
clc
pop
add
push
pushf
pop
xchg
loope
and
pop
inc
aam
repz
and
add
into
aaa
cmp
sub
cli
int3
std
and
pandn
add
sub
adc
fmuls
xor
xor
add
lock
stc
push
mov
pop
cmp
dec
cmp
out
nop
cmp
jle
daa
push
pop
cmpsb
mov
dec
jo
and
cs
pusha
inc
or
inc
push
sbb
dec
ljmp
leave
pop
push
and
jge
xor
sub
popf
sbb
inc
and
xlat
adc
dec
mov
dec
clc
loop
stc
dec
in
sbbb
mov
out
dec
jp
push
xchg
in
out
je
jbe
xor
popa
pop
sub
jle
mov
dec
jmp
xor
mov
rdpmc
sbb
mov
std
and
xor
xor
aas
sub
orl
jl
in
pop
ret
test
cmc
mov
out
lret
adc
inc
cld
lock
cmp
popl
jp
popl
ffreep
adc
daa
in
test
arpl
daa
push
cmp
sub
pusha
sbb
or
pop
add
cmp
pop
dec
or
sub
adc
movsl
mov
add
aas
push
add
push
mov
psubb
ret
push
fstl
pop
or
psubd
shrb
cmc
fcmovne
ficoml
jecxz
push
ds
stos
fs
js
stos
mov
je
push
sbb
sub
inc
add
mov
imul
pusha
lcall
sti
sbb
push
push
in
popa
inc
int
or
sbb
insb
jge
ss
or
jecxz
pop
xchg
fistpl
lds
lods
add
arpl
int
daa
arpl
shrl
push
xchg
jo
repz
jge
pop
push
aaa
lea
xlat
cmpsl
jle
jno
jne
cmp
mov
jb
pop
or
inc
repz
movsb
adc
cld
sbb
adc
aas
pop
outsb
jle
push
jecxz
fisttpl
enter
es
sahf
adc
test
pop
dec
or
stos
ja
repz
jnp
ficoml
or
cli
xor
xchg
fidivrs
pop
cmp
mov
sbb
add
inc
je
inc
cmc
aad
push
mov
cli
rclb
faddl
add
lock
stc
pushf
push
mov
xchg
sbb
repnz
call
dec
arpl
pusha
fstpl
les
dec
xlat
repz
adc
sub
push
cwtl
adc
sbb
xor
ljmp
push
sbb
jb
cltd
negb
push
xlat
addr16
adc
add
pop
notl
mov
mov
ficoms
filds
stos
mov
repz
mov
lahf
outsl
push
out
push
pop
jbe
sub
xchg
scas
pop
cltd
add
fisubl
out
leave
fisttpl
lret
inc
add
in
ss
out
insl
sbb
pop
or
gs
aas
pop
pop
inc
add
jp
popa
adc
jae
lcall
pop
mov
loop
les
repnz
jnp
adc
sub
sub
mull
dec
fs
pop
aas
mull
inc
sub
jae
push
jno
lcall
test
xchg
outsb
mov
dec
mov
xlat
sub
jmp
add
jmp
adc
adc
jl
in
pop
push
dec
test
pop
aaa
adcb
sbb
lahf
dec
xchg
sub
flds
or
adc
xor
mull
dec
fs
push
cmp
bound
dec
sub
orl
jl
in
pop
ret
daa
push
fmul
dec
mov
in
insl
lret
adc
adc
jle
push
adc
arpl
ss
sbb
leave
std
cmp
cli
inc
shll
rcl
scas
inc
fcoml
imul
and
sbb
cld
jge
push
xchg
push
pop
add
aas
push
mov
imul
cmp
cmpl
sbb
fstps
cmp
sub
mov
mov
aaa
sarl
adc
sbb
test
add
ficomps
ja
es
orl
push
and
pop
cmp
imul
pop
cmp
sarl
inc
cmp
dec
enter
and
sti
dec
sbbb
fwait
dec
push
cmpsl
outsb
xor
ss
loopne
ss
mov
pop
push
inc
add
jno
ret
sbb
ds
cmp
and
jp
lods
outsl
sbb
setg
adc
pushf
mov
loop
add
cld
cs
int3
cltd
sbb
lock
sbb
cmp
pop
jns
adc
insb
cmp
das
push
jne
push
or
sti
test
sbb
xchg
xor
adc
stc
push
mov
jne
enter
das
push
outsb
cs
dec
arpl
pop
aam
inc
pop
adc
inc
pop
sbb
sti
cmp
lret
mov
das
loop
aam
pop
inc
fs
into
test
sub
jl
mov
mov
inc
stos
mov
and
mov
jecxz
and
push
jmp
pop
push
popf
push
mov
push
dec
das
stos
or
mov
cmp
jnp
mov
out
dec
out
aam
dec
and
dec
xchg
fwait
sub
sbb
mov
cld
repnz
inc
out
adc
imul
jge
jb
xor
pop
and
sub
or
dec
push
dec
ret
fisttps
addr16
mul
jne
sbb
cmp
fisubrs
addr16
sub
jo
mov
insb
cld
shr
dec
jae
pushf
sarl
daa
xor
inc
sbb
mov
ljmp
push
sti
dec
dec
mov
ja
push
outsl
stos
and
and
jmp
dec
or
xor
jle
pop
cltd
in
test
bound
push
pop
jae
subb
imul
cmp
cmc
cmp
shrl
aad
jns
add
mov
lret
add
pop
push
dec
dec
rorl
push
mov
std
js
and
subl
test
in
rcll
ffreep
aad
mov
add
es
sub
cmp
stos
cmp
mov
popl
mov
arpl
orl
mov
and
add
push
add
dec
add
inc
xchg
repnz
push
sbb
insl
cmpsl
push
cmpsl
fiadds
xchg
insb
imul
mov
cld
push
push
jle
aam
cmp
push
dec
adc
cmp
cmp
jb
inc
xor
pop
mov
pop
dec
dec
ljmp
sahf
sbb
cmpsb
inc
dec
popf
jp
test
inc
jne
dec
es
pop
je
pop
roll
and
cmc
cs
jns
xor
es
sub
inc
inc
cmp
pop
sub
fiadds
insb
mov
mov
js
inc
daa
decb
xor
dec
daa
decl
cmp
inc
inc
pop
and
jbe,pt
dec
sub
jg
pop
cmp
add
out
sub
cld
jo
pop
insl
mov
fdivrs
aaa
push
adc
push
add
mov
xchg
jl
inc
and
sbb
cwtl
jo
push
jns
ret
pusha
outsl
sub
cmp
dec
lds
mov
es
inc
jnp
pop
bound
daa
ficompl
ss
dec
mov
push
fwait
xlat
adc
stos
pop
inc
or
push
cmp
push
xor
in
add
inc
clc
pop
jle
shrl
lret
sub
adc
ja
mov
push
mov
and
pop
sar
sub
pop
mov
daa
push
cmp
sbb
xor
inc
pop
adc
lret
fiaddl
sarl
pop
fsubs
outsb
jmp
push
adcb
pop
lahf
imul
jl
cld
call
divl
es
push
ficomps
pop
testl
xlat
sbb
cmp
aas
jne
aas
es
dec
sbb
mov
rorb
pop
sti
sbbb
dec
out
cli
cs
cmp
bound
stos
fidivrs
aaa
push
xlat
xor
adc
je
iret
cmp
pop
jns
lds
pop
pop
sbb
xor
outsl
aaa
out
sbb
inc
jmp
xchg
in
fwait
and
mov
sub
mov
and
pusha
jnp
xchg
pusha
insb
popf
inc
xchg
sarb
in
and
sbb
adc
adc
xchg
jbe
cmp
sub
insb
jne
push
push
and
stos
add
and
adc
cmpsl
pcmpeqd
insl
xchg
cmp
loop
push
add
nop
test
ss
fisubrs
out
jbe
loope
mov
pop
ja
adc
jge
push
push
in
pop
jmp
outsl
adc
xor
sbb
outsl
xorb
add
cmp
andl
adc
repz
je
mov
rcrl
jno
pusha
mov
into
pusha
xor
or
mov
lds
jge
jbe
xor
cmp
cmp
dec
jmp
les
and
mov
xchg
mov
and
sub
sbb
xor
push
mov
outsl
hlt
pusha
adc
pop
scas
cld
push
sub
inc
fbld
mov
pop
inc
push
out
dec
mov
fsubrl
and
or
out
inc
inc
pop
outsb
sub
movb
fstps
ret
ljmp
mov
adc
or
sar
cmp
lret
and
cli
inc
xchg
add
xlat
repz
shrb
jae
xchg
jo
lods
nop
dec
in
fmulp
scas
or
mov
jp
scas
movsl
adc
cmp
push
or
outsb
dec
mov
mov
jp
ja
rorl
pop
add
fdivrl
push
movsb
es
sub
idivl
jae
xchg
adc
mov
fdivrl
filds
or
movsb
pop
fdivrp
and
push
push
aam
lea
das
mov
mov
inc
pushf
or
sbb
mov
cwtl
xor
in
int3
int3
pusha
daa
insl
imul
xorb
and
push
insl
sub
test
cld
pop
sub
insb
push
imul
stos
xchg
sub
stos
loopne
xchg
es
push
rorb
inc
rdpmc
sarb
xor
jo
je
ja
sub
pop
mov
cwtl
xchg
xchg
mov
mov
enter
les
and
mov
fstpt
jae
push
fdivrs
sub
lcall
dec
push
mov
mov
mov
dec
sub
mov
arpl
mov
cmp
popf
pop
sub
cmp
add
stos
bound
fwait
je
xor
and
scas
push
xchg
pop
in
cmp
sbbl
push
cmp
mov
lock
rorb
xor
and
cmp
jl
mov
ds
lret
cmp
sti
addr16
mov
iret
cs
clc
mov
xchg
xchg
jg
cmp
insl
jb
cmp
add
or
xchg
dec
push
xor
cli
dec
movsb
push
imul
mov
cmp
mov
pop
out
jp
push
fiaddl
push
dec
add
dec
cmp
sbbl
das
loop
pop
xor
into
and
loop
out
mov
jge
lahf
mov
sbb
pop
or
fwait
dec
cmp
js
add
ror
int3
inc
cld
je
mov
and
pop
xlat
jge
inc
adc
mov
sbb
cmp
add
mov
dec
add
inc
pop
pop
sbb
sbb
push
sahf
mov
test
sbb
inc
insb
mov
fdivrs
mov
or
xor
stos
sbb
and
imul
sbb
rclb
out
adc
push
sbb
inc
data16
ds
or
mov
dec
scas
lods
nop
xchg
adc
int
fistpll
push
jge
mov
inc
adc
xor
xchg
sub
lahf
test
outsl
sbbl
mov
adc
push
and
sub
mov
adc
lcall
sub
fadds
xor
mov
push
ret
mov
mov
shl
add
jno
add
js
pop
in
sbb
mov
or
sbbb
and
repnz
lods
jns
repz
pop
mov
ds
adc
iret
cmp
jp
daa
jecxz
das
inc
push
xchg
lds
adc
fcmovnu
dec
aas
and
jno
add
xor
mov
addr16
sbb
das
int
test
adc
dec
movsb
mov
xor
jle
dec
sbb
cmpsl
or
lock
adc
and
iret
mov
pop
daa
pusha
jmp
pop
jae
mov
aaa
pop
jge
sbb
and
mov
ss
push
cwtl
inc
repz
mov
xchg
push
je
cmp
cld
stos
lock
pop
stc
inc
mov
mov
out
pop
icebp
and
push
xlat
aas
in
dec
cmp
inc
jl
scas
aas
pop
lea
ja
and
cld
dec
ljmp
rorl
sbbl
mov
hlt
jmp
lds
xchg
notl
movsl
inc
into
aas
jno
add
movsb
and
jp
and
inc
push
rorb
gs
out
imul
aad
lea
mov
cmp
cmp
cmp
xor
jnp
pusha
dec
sbb
add
ja
inc
cmpsb
add
inc
push
pusha
jns
repnz
mov
mov
shll
or
fstpl
fcomip
insb
and
push
loop
idivb
inc
add
dec
pop
xor
lret
lds
or
out
paddusb
add
jo
push
xor
test
in
mov
mov
pop
fcomi
sbb
sbb
or
xchg
or
loope
clc
fldl
outsb
sbb
dec
mov
out
push
out
dec
mov
out
hlt
cmpsb
cmp
xchg
jno
push
mov
cmp
fs
shrb
dec
popf
xor
aaa
mov
cmc
mov
arpl
les
loope
lret
pop
mov
js
or
ja
pop
mov
sbb
std
dec
jae
pop
dec
outsb
mov
dec
adc
scas
ja
pop
cmpb
ds
xor
shll
lds
into
adc
loopne
mov
cmp
add
lcall
sbb
and
in
add
add
movsl
out
fidivrl
xchg
incb
cmp
mov
jne
xchg
sbb
push
daa
inc
dec
mov
xchg
fildll
jge
and
sub
test
jmp
jbe
fs
imul
or
sbb
jle
ret
xchg
lock
pop
jmp
pop
gs
xchg
aam
push
cli
cmp
dec
adc
int
inc
add
gs
imul
dec
gs
dec
sub
pop
loope
shll
pop
js
outsb
es
cld
lea
mov
into
lods
xchg
jbe
ljmp
cmp
xchg
nop
inc
push
adc
cld
pop
and
and
mov
mov
mov
fs
mov
cmp
xchg
cmp
mov
inc
pop
jns
push
les
sbb
cltd
insb
pop
testb
scas
mov
lods
push
aad
pop
and
push
mov
outsl
mov
mov
test
and
jbe
lds
pop
mov
sub
inc
mov
sbb
and
movsl
dec
cmp
xor
movsb
jle
adc
popa
dec
outsl
iret
dec
sub
push
subb
xchg
xchg
mov
sub
enter
enter
add
roll
scas
jne
sbbl
sti
push
lahf
and
dec
xor
ror
pop
jne
push
push
jne
outsl
movsl
cmp
mov
fidivrl
js
movsl
in
or
scas
int
jmp
test
pop
rorb
sub
sub
mov
jns
xlat
xor
dec
pop
mov
out
mov
arpl
jmp
and
int
js
stos
mull
dec
pop
lea
push
lods
ljmp
dec
sbb
xchg
fs
shrl
or
xor
push
clc
pusha
pop
repz
les
dec
or
xor
mov
fucomp
mull
adc
jg
daa
mov
repz
and
addr16
mov
cmpsl
fdivr
es
jmp
idiv
test
push
add
cmp
lret
test
int
nop
cmovle
pop
push
shrl
insb
out
in
cli
or
es
jecxz
xchg
pop
xchg
mov
inc
mov
scas
pop
mov
inc
lea
dec
and
test
adc
movsl
mov
push
pushl
mov
inc
mov
cmp
dec
dec
and
mov
adcl
jo
stos
out
filds
popf
mov
jo
xchg
cs
or
aaa
call
cmc
cld
adc
sbbb
mov
sbb
add
pop
cmp
aaa
ds
xor
scas
stos
sahf
cmp
jecxz
testl
cmp
popl
ljmp
sarl
dec
mov
push
in
pop
test
stos
jmp
or
inc
push
adc
repz
adc
pop
push
cmp
sub
hlt
dec
xchg
loope
push
sub
xchg
dec
rcr
add
lret
dec
cmp
out
cmpsb
push
int3
ss
ficoml
fstl
lcall
adc
and
xchg
cmp
inc
push
adc
dec
pop
sahf
imul
ds
mov
mov
stos
nop
mov
push
fs
xchg
sar
mov
jns
mov
mov
and
addr16
and
jo
adc
rcrl
outsb
iret
cmp
outsb
and
push
mov
push
jbe
dec
inc
test
scas
insb
leave
mov
jb
iret
clc
sub
inc
je
xor
pop
inc
or
jle
out
push
sahf
fsubrl
mov
xor
int3
das
and
push
jmp
out
inc
push
pushf
or
mov
dec
bound
push
cmp
push
pop
mov
test
cmp
mov
out
fs
xchg
pop
scas
scas
and
and
scas
cmp
jno
js
mov
xchg
xor
shlb
stos
adc
xchg
mov
das
push
lock
pop
dec
lret
shlb
stos
mov
scas
adc
fildll
fbstp
add
sbb
out
jne
push
and
or
inc
fadd
jmp
adc
adcl
scas
and
or
sbb
test
mov
cmp
sbb
enter
mov
push
mov
fldt
movsl
clc
lods
test
fldl
jnp
xor
sti
pop
test
clc
push
jno
sbb
xchg
mov
and
ljmp
pushf
stos
scas
or
test
jg
mov
add
mov
mov
dec
pop
pop
cmpsl
pop
repnz
insl
dec
mull
call
push
les
mov
popa
je
rcrl
sbb
inc
repnz
fistpll
mov
popf
mov
mov
aam
mov
lcall
test
in
inc
push
jg
xchg
sub
sbb
cs
inc
sbb
jae
pop
fistpll
std
jo
pop
xor
out
daa
pop
xchg
loopne
pop
sarb
mov
xor
sti
es
pop
cmp
pushf
ja
push
jecxz
inc
mov
xor
movsb
pop
mov
inc
ret
adc
push
xor
inc
push
jns
cwtl
and
sahf
and
inc
jmp
jmp
xor
mov
andl
pop
sub
lods
cmpb
ljmp
push
popa
in
scas
jbe
add
dec
sbb
push
push
cmpsl
cmp
repz
mov
sti
mov
repnz
adc
inc
jg
add
dec
fimull
xchg
lret
jb
xchg
inc
mov
and
adc
out
dec
fneni(8087
jno
sub
repnz
insb
xlat
or
adc
ret
es
cwtl
cmpsb
pop
test
aam
mov
adc
js
pop
dec
or
cmpsb
movsb
dec
cwtl
mov
mov
or
cmp
in
sub
ficompl
movsl
pop
or
into
or
fimull
iret
sbb
xor
cmp
rorl
dec
cmp
cmc
inc
or
jmp
cwtl
je
push
adc
jmp
cltd
loope
ss
arpl
fisttps
add
js
xchg
imul
push
shrb
cltd
sbb
movsl
jp
or
push
pop
cmp
ja
mov
inc
or
dec
movsb
fnstsw
repz
xchg
insl
xchg
sub
mov
sbb
dec
dec
jg
xchg
cmp
sbb
fdiv
ret
cmp
xchg
pop
mov
mov
jns
cmpsl
adc
pop
sub
sahf
loop
pop
adc
sbb
mov
inc
lahf
cmp
mov
or
push
iret
and
push
mov
push
aaa
sbb
sti
mov
sbb
adc
sub
sahf
push
jnp
sahf
dec
xor
fdivrs
pop
inc
pop
aaa
mov
cmp
and
outsb
decb
adc
dec
dec
in
stos
fistpl
pop
aas
push
sbb
ficoms
stos
xlat
shrb
sarb
js
repz
push
std
sahf
or
push
pop
cs
sahf
daa
adc
fs
and
cmp
aam
stc
inc
dec
sbb
out
pusha
mov
ficoms
and
ljmp
jo
cmp
cmp
scas
sti
sub
inc
in
insb
imul
popf
ret
call
jp
sar
sbb
cmp
out
aam
lret
or
lret
std
lods
xor
pop
adc
sti
dec
sbbl
stos
push
dec
xchg
dec
mov
sub
jo
mov
test
insl
jmp
cmpsb
bound
sub
push
mov
pop
repnz
cmpb
sbb
mov
dec
ficompl
mov
jbe
push
sbb
push
xchg
leave
fildll
cltd
ret
popfw
das
stos
aaa
arpl
mov
cmpsb
jp
test
repz
xor
sbb
mov
outsb
cmp
sub
push
cmpsl
popf
push
push
jle
xor
popf
std
pop
push
pop
add
outsl
sub
arpl
cmpsl
jnp
dec
pop
push
jge
dec
inc
and
mov
jo
xor
out
cmp
xor
mov
mov
add
adc
mov
inc
shlb
scas
sub
mov
dec
das
cmpl
neg
push
std
lock
mov
gs
mov
fcomi
outsl
popaw
lahf
or
push
mov
daa
push
and
and
dec
inc
dec
cmp
out
cld
sbb
xchg
inc
push
cmp
mov
sbb
and
push
sub
pop
dec
test
lods
daa
xorb
shll
mov
dec
dec
fsubl
inc
add
inc
mov
rclb
add
fcomip
popf
fs
jbe
int3
dec
jae
pop
jl
jle
sbb
mov
dec
setb
imul
dec
test
test
pop
pushf
adc
xchg
std
jae
inc
cmpsl
sbb
arpl
xor
jae
mov
dec
ja
sahf
mov
movsl
xchg
push
sbb
and
cli
jnp
xchg
js
lret
std
testb
push
add
mov
jp
pop
aaa
jl
inc
mov
xor
xlat
rcrl
mov
adc
outsb
xchg
setae
push
cltd
inc
push
push
js
lcall
mov
sti
shll
rolb
sub
push
das
daa
cmpb
leave
mov
inc
lret
xor
dec
lcall
mov
sub
dec
dec
add
push
xor
xchg
pusha
stos
dec
sbb
notb
in
and
xor
mov
jp
or
outsl
pop
mov
outsb
pop
in
jo
xchg
ds
orb
sub
mov
dec
cli
cmp
and
sbb
xor
imul
pop
daa
in
lahf
cmp
out
lret
inc
shr
lds
and
lds
push
jl
jbe
inc
xchg
jns
lcall
lods
push
ds
pop
ret
cmpl
jnp
push
addr16
sahf
rolb
fisubrs
jno
mov
in
mov
inc
int3
je
pop
sub
scas
cmp
cmp
cmpsb
andb
mov
test
fcmovb
scas
out
clc
sarb
fcompl
fmuls
cwtl
in
ljmp
mov
aad
xor
data16
pop
mov
inc
aad
xchg
repz
mov
adc
cmp
mov
and
es
aam
sti
sbb
push
mov
das
xor
lcall
test
std
movsl
pop
popa
dec
rolb
insb
test
or
fadd
jle
adc
jb
xchg
cmp
imul
push
or
into
pop
fistpl
add
int
mov
push
stc
lods
push
inc
push
push
cmp
cmc
cs
cli
roll
es
cmp
mov
icebp
inc
das
insl
fisttpll
push
out
pop
push
jnp
lea
mov
insl
sub
push
xchg
sub
aad
pop
stos
fistpl
inc
shll
call
push
sub
lock
inc
fildl
bound
jmp
adc
pop
inc
adc
int
mov
out
data16
sti
sub
or
push
outsl
xor
sti
and
insb
pop
cmp
mov
das
in
cmpsb
jbe
icebp
pop
addr16
adc
jg
add
subb
mov
pop
outsb
outsl
insb
icebp
push
jmp
pusha
xor
mov
push
add
or
jl
mov
shlb
imul
adc
jno
push
aaa
aaa
insb
push
add
dec
jl
sub
and
push
pop
enter
jmp
pop
mov
pop
ret
imul
sti
aad
sahf
xor
xchg
jne
push
sti
jns
popl
push
int3
push
cmp
push
dec
imul
mov
sti
jae
dec
adc
out
dec
push
xchg
add
imul
daa
pushf
iret
scas
sub
fistpl
aas
and
jl
sti
das
inc
xchg
adc
daa
or
in
pusha
fs
jns
mov
fstl
adc
addr16
jo
jae
mull
pop
inc
in
popa
mov
rorl
jns
jle
push
scas
add
xor
xor
shrl
jg
popa
jo
neg
stos
push
xchg
cmp
cmpsb
ss
mov
arpl
mov
popf
push
and
mov
cs
sub
adc
push
icebp
xor
cmp
js
dec
fistl
push
js
xor
pop
and
mov
sbb
add
das
lahf
or
add
pop
jne
lret
cmpsb
add
dec
pop
mov
and
jns
cmp
push
dec
add
nop
arpl
add
push
push
fcmovnb
shrl
cld
hlt
scas
cmp
cld
test
cmp
and
jge
adc
pop
pop
mov
pop
in
mov
div
add
cmpl
sub
clc
add
xchg
push
test
ds
ror
and
sbb
inc
or
cmp
jne
cli
pop
sbbl
movsb
or
dec
imul
and
push
js
dec
cs
sarb
push
pop
inc
jge
out
cwtl
or
mov
cld
and
mov
daa
jecxz
sbb
dec
out
add
test
in
push
sbb
fistl
mov
jge
int
pop
dec
sbbl
out
xor
test
imul
fwait
xchg
mov
sti
leave
cmp
pop
adc
add
push
daa
lahf
push
cmp
cli
cmp
out
cli
pop
cmp
outsb
insl
mov
sbb
push
and
and
addr16
and
dec
adc
pop
jecxz
arpl
dec
inc
pop
aas
pop
sub
pop
and
pop
mov
pop
repz
cli
cli
push
in
aaa
jo
mov
and
and
out
js
je
sbb
push
inc
dec
xor
sbb
jecxz
mov
sbb
mov
add
pop
add
or
nop
out
jne
mov
mov
out
jb
sub
adc
mov
std
sbb
cmc
fwait
inc
jae
frstor
shrb
and
cmp
xor
fidivrl
dec
std
in
icebp
add
pop
xchg
repnz
mov
inc
popf
sbb
gs
push
rcll
push
iret
scas
or
cltd
add
cmpsl
outsl
mov
sub
fsub
out
push
lret
mov
xchg
stc
js
push
push
dec
std
mov
jbe
fwait
xchg
pop
pop
nop
cmpsl
pop
jecxz
sub
in
fs
imul
jno
lret
push
fidivl
cmp
js
dec
fbstp
das
pop
fildl
insl
pop
fisttps
push
stos
js
pop
xor
push
stos
fwait
icebp
jne
jmp
and
sti
std
or
das
inc
add
xor
inc
and
gs
inc
mov
imul
nop
ffreep
movsb
scas
lods
ss
push
push
enter
sub
jmp
inc
push
inc
negb
pop
dec
inc
dec
sbb
add
mov
xchg
loope
push
sti
mov
aaa
sti
call
push
repz
and
pop
mov
push
xor
xor
mov
cmc
sahf
jg
cmc
faddp
enter
push
aas
call
movsb
andl
stc
cmp
popa
lret
scas
and
cmpsb
add
jno
inc
push
jns
push
sbb
fdivrl
inc
cvtps2pi
dec
arpl
imul
cld
cltd
es
xchg
adc
repz
idiv
into
pop
sbb
push
push
js
and
sti
or
adc
inc
adc
rcl
xor
insb
or
sti
fwait
jp
das
mov
arpl
sbb
pop
dec
dec
lidtl
mov
aas
shll
sub
psubq
sub
sar
cmp
rcrb
addr16
pusha
inc
add
jecxz
add
test
xchg
cld
lock
pop
push
lea
fcmovnb
out
add
xchg
push
ret
test
mov
and
test
cwtl
push
mov
pop
pop
fistl
sti
mov
sti
jae
test
mov
push
xchg
icebp
popf
push
cmp
cmp
pop
xchg
jmp
dec
push
dec
adc
iret
pop
in
push
dec
pop
popf
ds
inc
xlat
push
push
icebp
lds
mov
sub
cmp
pop
add
mov
addr16
xlat
jo
pop
out
ja
add
notb
push
inc
pop
mov
cmp
sub
pushf
xlat
mov
insl
rorb
pop
push
cmp
sbb
pop
inc
pop
cltd
call
push
fs
test
mov
out
dec
mov
cmc
sbb
clc
pusha
jno,pn
imul
cmp
ret
daa
push
test
mov
xchg
fsubr
mov
call
lods
cmc
loop
jmp
arpl
sbb
in
pop
mov
push
adc
lcall
xor
mov
ds
mov
add
insb
inc
cwtl
xor
push
pop
ljmp
fcoms
cmp
shll
imul
or
es
dec
lea
lahf
call
decl
mov
jns
push
adc
sub
pusha
pandn
repz
hlt
pop
mov
jmp
adc
cmp
or
mov
ret
pop
pop
mov
es
jb
jno
mov
out
mov
mov
mov
das
mov
inc
xor
jp
pop
jmp
stc
addl
cmpsb
sub
jge
sbb
add
sub
hlt
jne
and
addr16
mov
outsb
jle
sbb
xchg
andb
fisttps
popa
xor
das
mov
and
push
cmpsl
les
test
sub
rolb
fwait
dec
or
cld
or
and
pop
mov
dec
stos
jecxz
sbb
add
imul
into
jae
and
addb
push
inc
pop
cmp
sbb
lods
lds
test
loopne
hlt
adc
lret
push
jecxz
aas
mov
lea
adc
dec
and
inc
adc
adc
dec
inc
sbb
or
lods
std
jg
test
cli
fiadds
pop
icebp
xor
add
je
push
fcmovbe
in
jg
outsb
cmc
pop
outsl
cmp
add
inc
xchg
cmp
jmp
jbe
dec
inc
adc
inc
sub
in
cmpsl
push
imul
lods
rep
orl
pop
dec
adc
adc
fistps
push
dec
outsl
pop
pop
inc
sbb
lahf
scas
lods
or
loopne
jmp
inc
add
push
data16
dec
leave
xor
cltd
decl
push
ljmp
divb
and
test
inc
dec
out
inc
std
jno
not
xchg
inc
testl
fldt
jl
out
pop
fucom
mov
push
inc
in
cs
sbb
pop
daa
cmp
cmp
pop
jb
mov
sbb
inc
js
jmp
lods
xchg
pop
jo
push
popa
inc
or
pop
mov
cwtl
or
and
enter
mov
jbe
adc
sbb
incl
sbb
push
pop
sbb
test
pop
dec
ret
add
dec
xchg
jg
push
fdivrs
movsl
out
aas
movsb
out
sub
pusha
mov
mull
push
push
dec
imul
daa
in
les
sti
ss
adc
stc
mov
jecxz
pop
pop
mov
push
pop
outsl
subb
sub
std
adc
sbb
push
rcrb
cld
push
mov
sti
subl
mov
lahf
cmpsb
in
lock
inc
in
movsl
addr16
cmp
add
pop
pop
cmp
push
mov
xor
stos
cmc
in
xor
aad
hlt
push
xor
retw
add
dec
outsb
daa
push
jbe
pusha
push
sbb
inc
faddl
rorl
sbb
inc
arpl
int
in
jns
mov
in
adc
push
in
lock
ljmp
mov
ja
popf
push
loope
and
loopne
mov
dec
cmp
lea
lock
mov
stos
pop
insb
add
jmp
dec
pop
pop
xor
rorl
dec
cmc
lcall
cmp
sub
push
jne
pop
push
enter
pop
sbb
pop
in
popa
call
add
jnp
sub
fucomi
cmp
add
fstpt
and
sbb
test
xchg
cmc
test
stc
pop
mov
ficoms
in
clc
mov
cmp
pop
push
pop
pop
popf
push
mov
and
xor
xor
jge
lds
mov
fninit
push
jb
mov
insb
mov
inc
ret
lock
add
out
fisttpl
jb
cmp
push
add
sbb
pop
xor
pop
dec
xor
inc
and
sub
lock
xchg
jo
shlb
divl
sub
imul
cld
mov
sub
pop
sub
mov
mov
addr16
gs
scas
ret
cli
loop
jo
jne
in
xchg
add
cli
jns
out
adc
cmp
sub
in
cmp
dec
aam
lea
pop
adc
into
repnz
pop
dec
shll
add
sti
icebp
cmp
pop
ret
cmp
js
sti
aaa
ds
bound
fistpll
sbb
jl
fistl
bound
sti
mov
jb
add
mov
pop
push
adc
clc
push
lahf
outsb
jmp
sti
jmp
sar
mov
push
adc
push
sub
pop
rcrb
es
pop
mov
bound
and
jg
in
ret
mov
mov
pop
xor
fs
xor
fiadds
gs
jle
iret
inc
sbb
ret
jmp
pop
iret
in
mov
movsb
cmc
loop
jecxz
aaa
sarb
pop
ljmp
mov
jb
sub
sub
add
push
cli
lds
jmp
loop
push
ds
pop
mov
push
inc
inc
add
sbb
dec
ret
cld
sbb
add
fistl
nop
push
aaa
inc
popa
repz
mov
in
scas
add
fcompl
inc
sbb
arpl
js
int3
sti
dec
jnp
sti
and
arpl
jae
cmpsb
cmp
lock
add
in
fxch
add
ficompl
sub
lods
xor
sbb
std
or
push
mov
inc
rcll
jecxz
mov
mov
or
aad
daa
push
nop
sti
cs
pop
sti
sub
push
push
pop
clc
mov
sub
pop
pop
lds
adc
movsb
test
jnp
call
push
cmp
int
mov
dec
lods
pop
loop
idiv
xchg
addr16
sbb
into
push
xor
push
sub
push
cmc
loope
negb
scas
negb
addb
clc
das
hlt
sub
push
shrb
nop
scas
inc
notb
in
xlat
in
dec
fwait
and
cli
pop
xor
add
xor
sub
outsl
xor
psubq
icebp
aaa
jnp
in
pop
das
pop
pop
sbb
or
fstl
dec
inc
dec
push
sti
jle
and
fwait
popf
mov
dec
inc
cmp
xchg
adc
inc
and
mov
mov
push
jmp
dec
or
outsb
push
pop
push
pop
repnz
out
xchg
push
pop
outsl
sti
aad
imul
loopne
div
pushf
std
xchg
in
les
push
fisubl
outsl
cmp
xchg
mov
filds
repz
repnz
mov
sub
adc
xor
xor
push
sub
and
and
push
adcb
fisttpll
cmpsb
testb
pop
pop
xor
push
dec
pop
jg
sahf
push
cwtl
mov
jg
dec
jecxz
inc
dec
xchg
sbb
pushf
outsb
call
loopne
ss
test
cmp
sub
mov
das
cmc
fsubrl
add
add
or
xchg
jae
inc
inc
dec
inc
mov
mov
out
cmc
sub
xlat
jb
pop
cmp
jnp
jg
mov
pop
push
cmp
sub
and
dec
stos
jae
xchg
push
movsl
inc
mov
clc
clc
loop
pop
leave
ss
inc
clc
stc
pop
push
adc
cmp
cmc
icebp
mov
jge
sti
mov
inc
ds
sahf
add
mov
std
jbe
pop
std
addr16
aaa
aas
fsts
out
mov
pop
push
outsl
adc
adc
jp
ss
push
cmp
dec
out
lea
push
cld
cmp
decl
movsl
sti
xor
adc
dec
pop
push
mov
test
inc
mov
ds
xor
or
inc
daa
pop
lret
test
mov
repz
lahf
call
ret
cmc
push
test
push
xor
nop
xor
push
adc
popa
push
or
fidivs
cmpsb
mov
push
inc
shrl
pop
dec
pop
pop
mov
loop
push
xor
insb
fwait
push
imul
adc
push
add
add
pop
loop
add
and
lods
inc
test
pop
push
cmp
and
push
jmp
mov
push
outsb
push
arpl
dec
dec
icebp
push
mov
aaa
cmp
pop
fsubs
jbe
push
jp
jnp
in
pop
push
sar
sbb
pop
enter
cmp
fdivrl
adc
lahf
fistps
insb
push
insb
jne
mov
pop
int3
outsb
jnp
pop
das
sub
jg,pt
or
lcall
or
int3
ret
add
xchg
cmp
jbe
cmp
and
imul
imul
in
fdivl
inc
mov
push
in
dec
nop
icebp
lea
dec
popl
loopne
xlat
cmp
push
popf
dec
fstpt
xchg
fcmovnbe
test
push
aad
pusha
mov
fcmovnbe
and
stc
rcrb
jne
jne
sub
sar
in
push
and
decb
add
xlat
dec
imul
arpl
inc
cmc
cmp
pop
insb
cmpsl
mov
ljmp
cmc
push
push
mov
mov
jmp
mov
fmuls
dec
outsl
xchg
mov
or
clc
jno
insb
cmc
push
scas
jo
mov
push
popf
mov
mov
inc
adc
lods
fdivrp
push
dec
pop
dec
mov
imull
test
mov
jl
push
push
mov
in
decl
popa
cmp
push
add
cwtl
inc
into
mov
xchg
in
ss
push
jl
pop
pop
jg
lahf
jle
jecxz
xchg
xor
cmp
jb
jns
es
cmpsb
fsubs
dec
les
loope
outsb
adc
add
inc
pop
mov
pop
pop
cmc
gs
hlt
roll
sub
sti
idivl
pop
sub
cmc
mov
inc
pop
pop
and
gs
adc
adc
or
lret
sahf
lcall
push
lcall
and
inc
pop
add
pop
dec
sbb
push
sub
dec
cmp
or
test
cmp
insb
xor
cmp
inc
dec
push
pop
es
in
push
dec
rclb
cmc
mov
std
cld
out
pop
cwtl
scas
cmc
mov
pop
repz
inc
popl
iret
cmp
mov
mov
lds
cld
cwtl
mov
test
inc
jp
dec
rcrb
add
imul
es
je
sub
outsl
mov
dec
cltd
push
mov
cmp
pop
push
outsl
cmp
movsb
lret
sub
das
popf
fisubs
xchg
test
in
cmpsb
pop
add
loop
hlt
cmc
push
dec
vphaddudq
cli
and
adc
mov
jno
sbb
dec
dec
pop
lcall
add
dec
xorl
xchg
aas
xchg
fs
pusha
sbb
jle
test
pop
aam
dec
sbb
cmp
sub
mov
ss
in
mov
inc
sbb
shlb
pop
pop
jae
add
pop
xchg
push
jg
cmpsb
outsl
jmp
outsl
or
pop
data16
and
lahf
ret
adc
pop
xchg
adc
dec
das
ret
mov
cwtl
dec
lea
mov
mov
stos
xor
mov
inc
adc
or
popf
xchg
or
jno
pop
jbe
imul
inc
outsl
inc
sbb
jo
push
je
cmp
mov
out
les
aad
dec
mov
test
shl
push
add
iret
test
pop
xchg
ret
imul
mov
adc
sbb
jno
pop
xor
bound
sti
push
loop
lea
es
cmp
sbb
jecxz
test
in
sub
cmc
push
test
push
aad
xlat
sub
jecxz
pop
fidivrl
jmp
xor
fisttps
sbb
faddl
lock
add
lds
pop
adc
sti
sbb
mov
ret
pop
xor
hlt
sub
cmp
xor
cwtl
lahf
sbb
in
aad
jmp
fwait
xchg
adc
inc
popa
pop
shr
push
jg
test
rclb
jno
mov
and
sbbb
leave
pop
addr16
adc
jle
sbb
mov
push
cmc
or
daa
mov
int
sub
xorl
jae
xchg
xor
inc
out
xlat
push
ljmp
inc
pop
js
sbb
test
ss
cmp
negb
aas
ss
mov
std
imul
lret
pop
mov
jp
ja
mulb
sti
out
aas
pop
xchg
dec
sbb
and
dec
add
out
sti
dec
sub
cli
jmp
les
js
dec
fbld
dec
lahf
movsb
idivb
mov
add
sahf
sbb
mov
hlt
pop
push
inc
sub
xor
pop
adc
inc
cmc
rorb
and
sbb
fstpl
movsb
out
iret
sub
mov
mov
jmp
jg
nop
fdivrl
shrl
cmp
sti
xlat
out
jge
ja
loop
push
push
cmpsb
repz
jne
outsl
xor
hlt
in
push
jge
dec
lcall
clc
pop
das
in
add
pop
push
jae
mov
fcomps
inc
push
and
test
pop
add
xor
and
in
push
jno
cmc
aad
dec
fs
lods
aad
pop
xor
nop
outsb
and
dec
jb
and
insl
ret
inc
xlat
aam
aaa
pushf
dec
push
cwtl
inc
dec
push
jecxz
imull
or
jb
inc
insb
mov
adc
sub
shl
and
rol
mov
imul
cmp
icebp
icebp
add
pusha
les
or
in
imul
inc
dec
mov
cmp
xor
push
imul
sbbb
pop
mov
push
push
cmc
lods
sbb
dec
pop
lds
aaa
icebp
pop
jb
popa
dec
pop
aas
xor
cmc
add
push
lods
js
das
imul
cmpsb
jns
rolb
sbb
aam
xor
pop
pop
lret
insl
or
add
push
js
pop
jecxz
xor
aas
sub
xor
xchg
stc
jns
lods
bound
fwait
inc
jae
cmp
pop
cmp
pop
cmp
dec
ret
and
or
outsb
xchg
je
sub
js
push
pusha
aaa
dec
clc
in
clc
mov
lods
xor
gs
pop
jne
pop
adc
cmp
repz
fiaddl
xor
xor
push
js
dec
add
pop
pop
pop
dec
xchg
mov
out
mov
cmp
pop
ficoms
into
in
xor
inc
add
testb
push
add
enter
sti
push
sti
sarl
test
sub
ret
xchg
xor
push
je
sub
dec
pusha
pop
ret
out
sbb
inc
sub
aas
dec
cmp
push
inc
cmc
push
outsb
sarl
or
lods
movsb
out
divb
incl
fsubr
xor
testl
das
test
pop
testl
jle
imul
xchg
popl
mov
lahf
mov
pop
cli
sbb
jnp
ja
daa
out
adc
pop
sbb
push
pop
inc
push
popl
push
push
sub
popl
sbb
aaa
fidivs
or
dec
fisttpl
adc
sbb
inc
sub
sub
outsl
dec
push
jne
mov
sbb
aaa
fisubrl
or
dec
iret
insl
sti
stos
in
adc
pop
adc
xchg
sub
push
dec
aas
popa
jl
in
pop
cmpsb
sbb
aaa
shlb
or
dec
ret
jbe
push
fisttpl
pop
push
sub
sub
dec
dec
aaa
push
jl
in
pop
mov
jne
sahf
cmc
mov
mov
outsb
mov
lahf
or
dec
mov
fldt
ret
sub
or
fcompl
in
sub
and
pop
dec
inc
popa
jl
in
pop
lcall
aaa
mov
mov
jbe
sub
sub
jl
in
fs
or
imull
pop
cmp
out
xor
popl
outsb
sub
xchg
xchg
pop
out
int
cli
cmc
loopne
or
cmp
sbb
test
sub
pop
das
outsb
push
sbb
or
dec
jbe
sub
scas
pop
xchg
add
rcll
lea
push
push
sub
adc
dec
dec
xor
jbe
pop
pop
xchg
insl
test
jnp
cmpsl
sbb
jbe
sub
loope
push
jg
fmull
out
adc
sti
sub
cmp
out
xor
popl
push
push
sub
mov
jecxz
mov
cmc
mov
out
iret
pop
sti
mov
clc
cmp
adc
daa
testl
dec
pop
jae
pop
jne
mov
sbb
aaa
fidivs
or
out
xchg
int3
sub
hlt
ss
rep
pop
sbb
or
gs
aas
pop
pop
inc
add
jle
gs
jnp
cmpsb
sub
pop
lret
dec
mov
jl
in
and
xor
daa
out
ucomiss
mull
dec
fs
arpl
pop
sub
xchg
dec
jg
jl
in
pop
ficomps
lds
push
pop
std
add
notl
cmp
and
xor
pop
sub
ja
pop
pop
dec
ja
pop
mov
cmc
mov
out
iret
pop
divl
or
pop
testl
inc
pop
imul
jl
in
pop
cmpsb
sbb
aaa
lret
sbb
jbe
push
fistl
adc
movsb
pop
inc
dec
das
dec
jl
in
pop
xchg
imul
xchg
mov
fwait
jbe
sub
loope
or
out
push
sub
sub
add
xor
pop
fs
adc
pop
testl
dec
xchg
lods
jl
in
pop
out
sbb
test
cmp
clc
push
and
or
aaa
inc
sbb
sbb
or
aas
jbe
sub
ja
pop
jns
mov
xchg
test
mov
xchg
mov
ret
fwait
out
adc
adc
pop
push
push
test
fs
mov
mov
jae
fwait
dec
xorl
fwait
sub
ficompl
ljmp
test
es
or
push
test
xor
xor
pop
sub
jae
pop
pop
xchg
mov
pushf
pop
lret
test
cmc
mov
jecxz
lret
adc
mov
pop
std
adc
or
inc
dec
sub
jbe
pusha
pop
mov
jne
mov
outsb
mov
lahf
or
dec
scas
jbe
sub
sub
or
popf
decl
sti
sub
xchg
or
xor
xor
pop
outsb
sbb
jle
push
mov
jae
lahf
dec
xchg
sub
lds
pusha
jmp
add
pop
leave
push
sub
cld
mov
popa
cmc
inc
aaa
outsb
inc
outsb
imul
or
arpl
sub
mov
shl
mov
adc
inc
cmc
jnp
in
pop
sbb
aaa
dec
and
sbb
or
inc
jbe
sub
xchg
mull
ficoms
lret
div
rcl
push
sbb
add
int
inc
dec
sub
sub
imul
mov
mov
cltd
adc
scas
not
sub
cmc
cli
shl
ss
insl
and
unpcklps
sub
sub
pop
push
add
mov
sahf
pop
mov
sub
pop
xlat
dec
ret
fnstsw
nop
callw
out
cmovle
jne
sub
loop
push
idivl
fs
adc
arpl
mov
jnp
mov
dec
lahf
mov
pop
cli
sbb
orb
mov
jle
xor
mov
sub
sub
pop
push
add
mov
lcall
mov
xchg
cmpsl
pop
iret
dec
mov
jl
in
and
xchg
idiv
daa
jecxz
or
pop
adc
cmp
xor
pop
popl
jb
pop
sub
fwait
dec
andl
ficomps
leave
test
cmc
loopne
push
xchg
sub
and
cmp
and
dec
cmp
dec
divl
pop
sub
fwait
dec
sbbl
cmc
mov
jmp
xlat
movsl
cmc
adc
clc
cmp
or
xchg
sub
push
dec
cmp
jle
fs
mov
jne
sahf
cmc
test
scas
subl
xchg
or
sub
sub
xchg
out
sub
sub
xchg
repz
sbb
and
sbb
test
inc
aaa
jb
outsb
ja
pop
or
sub
cmpsl
pop
lods
add
out
int
cli
pop
loope
inc
xchg
icebp
jnp
in
push
sbb
test
cmc
sbb
sbb
or
das
jbe
sub
sub
pop
imul
mov
lahf
test
xchg
lret
dec
and
sub
sub
xchg
pop
pop
xor
cmp
pop
jp
popa
test
jae
fwait
sbb
movsb
mov
pop
mov
cmp
fldl
or
add
adc
xor
push
sbb
or
dec
jbe
sub
xchg
mull
ficoms
ret
imul
xor
stos
add
cmc
clc
ss
insl
pop
sbb
adc
sub
sub
pop
dec
add
xchg
lcall
scas
sub
pop
xlat
dec
mov
callw
jmp
adc
jne
sub
sub
pop
dec
add
mov
mov
xchg
scas
sub
pop
xlat
dec
mov
in
mov
dec
out
jne
sub
sub
add
xor
pop
fs
adc
push
idivl
addr16
cmpsl
dec
xchg
jecxz
sbb
aaa
test
sti
into
mov
adc
cs
adc
adc
sbb
or
aaa
jbe
sub
jae
pop
jne
sahf
testl
ret
stos
not
sub
add
iret
mov
mulb
sub
sub
inc
dec
das
dec
jl
in
pop
mov
jno
sahf
cmc
mov
mov
mov
jbe
jbe
mov
mov
notb
sub
sub
xchg
or
push
in
pop
bound
dec
test
pop
aaa
xchg
sbbl
or
sub
mov
cmp
xchg
push
aad
movhps
sub
adc
push
dec
cmp
jle
fs
mov
jne
sahf
cmc
test
scas
subl
xchg
or
out
int
div
fmull
mov
add
dec
fists
js
adc
arpl
dec
sub
and
adc
or
ds
sub
cmc
sub
popa
xor
cmp
dec
add
aaa
inc
shll
out
repnz
int3
in
sbb
mov
fimull
ficomps
adc
fs
cmp
imul
stc
jne
xchg
call
fcmovne
cld
sysret
subb
cs
popf
test
jle
adc
push
in
cld
sub
je
fcomip
jae
frstor
test
pop
cmc
clc
push
sti
or
inc
movb
jg
sahf
pop
scas
pop
repnz
cmp
sbb
test
fsubr
adc
cmp
lret
lods
imull
xor
hlt
enter
xchg
jmp
adc
xchg
cmp
jbe
daa
gs
xchg
iret
jb
jnp
in
stc
jge
aaa
mov
aaa
fs
or
sbb
aam
inc
pop
shl
enter
js
xchg
xchg
push
add
bound
push
cmp
mov
and
inc
fistps
xor
movsb
fistps
cmc
mov
shrl
xor
std
adc
jo
paddsb
incb
popa
jp
pusha
imul
pop
and
or
dec
dec
sub
adc
ss
and
jp
fsubl
addr16
adc
xchg
adc
std
inc
out
or
cmp
add
sarl
pop
push
imul
pop
aad
jns
dec
push
adc
xor
adc
jae
pop
dec
xor
inc
lret
ret
aam
fnstsw
gs
pop
in
and
xor
out
jno
inc
pop
add
aaa
imul
jne
scas
jge
adc
lahf
add
mov
in
dec
gs
lret
adc
and
add
rcrl
enter
cmp
jg
xor
ja
pop
out
mov
add
or
es
or
ljmp
adc
push
hlt
mov
sbb
leave
jbe
mov
call
mov
aaa
push
lods
mov
cltd
jge
mov
fs
daa
aaa
inc
sub
repz
and
sbb
pop
adc
loopne
cmpsl
sbb
pop
add
mov
jb
int
sti
jbe
xchg
sub
push
je
jl
sahf
sbb
outsl
push
add
addb
and
dec
inc
and
xor
inc
lea
inc
test
ficompl
jbe
paddw
or
inc
pop
inc
add
xchg
mov
and
mov
push
and
je
mov
and
and
popa
repnz
pop
lret
repz
divl
ret
adc
test
sbb
sub
pop
fldl
imul
inc
dec
adc
ret
int3
xor
xchg
repnz
push
lock
mov
cmp
sbb
xor
add
xor
and
hlt
test
out
mov
and
setl
loope
or
jns
push
not
daa
mov
jbe
inc
leave
iret
adc
mov
flds
stos
jb
jp
mov
sti
jns
or
jl
jo
pop
loopne
push
stos
or
jbe
cmc
mov
ret
insl
add
dec
call
jmp
and
sbb
mov
xor
aad
ja
lret
in
js
or
dec
shrl
and
sub
call
mov
jle
pop
mov
testl
mov
adc
mov
cmp
jcxz
cld
pop
mov
sbb
xorl
inc
sbb
sbb
push
cmc
insb
mov
f2xm1
sar
sub
ja
nop
sub
cwtl
rcll
jmp
pop
push
xchg
in
mov
dec
pop
negb
inc
pop
cmc
mov
out
repz
in
int
lock
sbb
std
dec
rclb
xchg
scas
jecxz
loopne
adc
mov
loopne
js
lds
jns
aam
lods
xchg
ds
clc
subl
ret
fadd
out
enter
mov
jmp
jno
faddl
mov
test
mov
lea
add
rorl
xchg
sub
cmp
sahf
dec
out
clc
jle
in
push
jne
xor
inc
pop
add
jno
daa
test
imul
cmpsl
out
sub
fcompl
testb
lea
mov
jle
pop
cmc
lcall
addr16
push
dec
add
add
dec
dec
aas
adc
jbe
jge
dec
sbb
divl
push
push
cmp
daa
fwait
ljmp
cmpl
clc
int
cld
dec
divl
sti
push
mov
mov
lods
ret
push
int3
pop
outsl
fildl
clc
cmp
std
clc
fmul
cmc
mov
inc
adc
inc
movsb
dec
add
mov
out
test
jae
add
insb
int3
jmp
iret
cwtl
jbe
push
cli
jp
mov
nop
adc
xor
pop
call
jecxz
imul
pop
or
and
js
xchg
mov
inc
mov
mov
add
dec
pop
sbb
cld
xchg
adc
fdivl
inc
dec
sbb
cmp
push
or
repz
sbb
mov
sub
jb
xchg
jno
daa
mov
cmp
in
shll
insb
pop
xor
xchg
hlt
pop
js
das
adc
outsb
mov
stos
pop
std
sbb
sbb
gs
ja
cld
pop
mov
pop
xor
cmp
das
repz
add
sub
in
inc
xor
comiss
outsl
shlb
adcl
jecxz
cmp
mov
inc
cmpsl
mov
cmp
cld
sbb
adc
addr16
rcrl
and
sub
adc
xor
fsubl
cmp
in
shlb
pop
mov
jg
in
push
stos
pop
imul
sbb
je
cmp
cmp
xorl
add
imul
gs
pushf
dec
cmc
sarl
sub
pop
sbb
sbb
fists
jns
mov
out
addr16
int
push
into
xchg
dec
mov
scas
stos
data16
dec
lahf
je
mov
xchg
xor
imul
mov
sbb
outsb
or
push
incl
ret
and
fbld
adc
imul
dec
jae
adc
adc
mov
or
jbe
mov
xchg
out
sbb
fnstsw
and
ja
mov
sub
push
xor
sub
inc
xor
push
jbe
sbb
sub
sbb
mov
and
loopne
add
jecxz
icebp
dec
js
xor
movb
scas
mov
mov
int
inc
pop
lret
dec
loop
int3
dec
pop
test
frstpm(287
std
sub
or
test
xchg
inc
and
movsb
aaa
or
rcl
xlat
and
aad
arpl
fistps
jl,pn
and
and
in
std
das
daa
stos
ret
push
and
mov
rclb
push
call
cld
test
mov
or
pop
addr16
test
xchg
sbb
mulb
outsl
fisubs
pushf
testb
mov
sub
or
fldenv
aad
push
sti
fildll
fldenv
repz
shlb
arpl
mov
xor
push
fs
push
cmp
add
add
pop
add
les
cwtl
jo
add
out
cld
loop
xor
aam
rclb
fisubs
push
sbb
imul
xchg
adcb
and
cld
or
aam
dec
negl
add
dec
stos
pop
cltd
nop
jge
push
test
sbb
adc
mov
mov
cmc
xchg
xchg
fs
stos
adc
into
jge
stc
jns
out
ss
arpl
sbb
or
add
mov
push
jmp
imul
pop
sub
loope
sub
xchg
shl
adc
fistpl
fistps
lret
sahf
inc
js
push
movsl
negb
aam
push
std
ss
jae
mov
daa
pop
mov
inc
lea
fnstsw
fwait
and
mov
je
ljmp
lahf
adc
jge
inc
pop
js
aad
xchg
inc
mov
push
or
stos
mov
int3
adc
cmc
fldt
loop
push
adc
adc
insb
xchg
mov
je
adc
adc
mov
in
xor
aaa
or
sub
or
popa
or
fstl
pop
xor
dec
add
pop
mov
mov
or
jb
xchg
jmp
ret
mov
sti
dec
fbstp
xchg
repz
mov
or
sbb
int3
and
loope
xor
cli
ss
push
loope
inc
or
popa
push
pop
add
jno
xchg
out
call
outsl
inc
mov
pop
rol
repz
sub
sbb
pop
push
mov
xor
hlt
mov
sahf
repz
cwtl
mov
cld
add
icebp
push
inc
push
outsl
int3
add
and
fwait
and
je
imul
dec
fstpl
cmpsl
iret
jg
push
jl
gs
xchg
push
dec
mov
sahf
fisubl
imul
mov
push
jo
jbe
push
mov
inc
jmp
push
xchg
xlat
test
pop
pop
mov
sbb
push
mov
mov
mov
adc
push
int3
mov
into
lret
mov
adc
ror
pop
inc
adc
cmp
dec
fists
push
addr16
jecxz
clc
xchg
jmp
ucomiss
sub
mov
mov
leave
ds
add
xchg
inc
fucomip
ror
aas
xor
push
mov
adc
and
lds
add
push
out
xchg
jle
in
js
mov
fcmovne
je
shll
rcrl
repz
test
dec
xchg
inc
jnp
add
and
mov
push
int
adc
idiv
daa
push
mov
in
mov
inc
rcrb
fistps
loop
sbb
out
in
gs
adc
popf
sbb
and
inc
cmp
fwait
mov
inc
push
pop
ljmp
dec
lret
jae
xor
mov
cmpl
int
jge
or
testl
pop
mov
es
std
pop
sbb
pop
sbb
aaa
add
out
loope
inc
jbe
jmp
pop
ss
jle
iret
mov
jle
jno
test
add
pop
into
orl
das
pxor
fldl
rcr
fistl
aaa
pop
es
add
movsl
mov
in
mov
mov
ret
jnp
hlt
test
sbb
jg
push
in
pop
aas
jecxz
aam
add
dec
pop
inc
dec
push
and
hlt
test
or
ljmp
jb
imul
out
cli
jns
add
xor
inc
add
cmp
pop
jae
dec
icebp
fisttpll
or
or
aam
out
and
mov
loope
add
pop
sbb
pop
ss
int
xchg
in
sub
loope
out
fnsave
mov
out
cltd
es
in
aas
mov
dec
pushl
movsl
and
jnp
scas
adc
lds
in
dec
xor
mov
pop
lods
nop
push
dec
mov
jg
fstpt
cmc
dec
push
xor
push
sub
in
ss
aas
lcall
fdiv
push
aaa
cmc
stos
pop
mov
imul
into
jecxz
arpl
add
sti
call
addr16
mov
push
push
iret
xchg
ss
negb
aad
push
mov
sub
adc
and
shr
pop
sbb
ror
into
fildl
cli
pop
roll
push
cmp
and
pusha
or
lret
and
sub
add
xor
adc
cmpsb
jmp
pushf
repz
mov
in
stc
incl
mov
js
xor
aas
jae
int
xchg
jae
lds
jle
popa
popf
push
data16
mov
add
jnp
and
push
add
fcom
sti
clc
xchg
scas
bound
addl
cmp
adc
pop
add
jg
and
jnp
popf
es
fsqrt
jne
outsl
cmc
lods
loope
cmp
pop
add
ja
fldl
aam
leave
lret
daa
gs
pop
xchg
ds
add
movsb
fistpl
mov
mov
pop
mov
push
cmp
mov
in
call
into
dec
dec
hlt
push
inc
lock
rcl
xor
fistl
sbbb
sbb
jge
ficompl
inc
sbb
ja
ljmp
push
cwtl
dec
cli
loope
gs
push
mov
jg
repz
lcall
inc
call
jl
or
dec
and
add
mov
inc
cmp
add
add
aaa
add
rolb
sub
out
sbb
pop
fisttpl
js
push
and
jae
sbb
imul
jnp
cmp
test
mov
jbe
cmc
in
sub
out
ret
outsl
push
cmc
pop
jmp
call
stc
mov
jnp
inc
and
fsubs
sbb
gs
inc
stos
jae
icebp
pop
int3
xchg
movsl
xchg
in
cwtl
lods
out
repnz
lcall
orl
xor
into
ljmp
cmc
or
adc
loop
scas
loop
add
push
inc
popa
cwtl
push
out
xorl
rcrb
mov
push
xchg
pop
out
lock
dec
out
mov
mov
dec
ret
nop
sub
fdivr
clc
xchg
in
in
sti
pop
mov
cmp
fwait
scas
and
push
movsl
push
fld
pushf
adc
jecxz
and
pop
rcrb
mov
pop
push
ret
outsb
dec
add
ja
mov
movsb
out
mov
mov
push
cmp
pushf
pop
mov
and
js
push
rcrb
pop
mov
icebp
dec
sahf
divb
xor
dec
mov
pop
mov
fs
int3
js
dec
xchg
mov
mov
mov
divl
mov
mov
inc
std
lods
or
mov
pop
xor
xor
outsl
cmp
xchg
jp
xchg
xchg
push
push
adc
sbb
xorl
jo
push
rcrl
xchg
cld
pushf
adc
aaa
pop
pop
sbb
fcomps
cmp
pusha
cmp
adc
cmp
ret
inc
int3
add
std
add
mov
pushf
xor
out
rorl
in
outsl
orb
adc
dec
jne
sar
loope
cmp
shl
cld
shrb
jg
lds
adc
jmp
xor
mov
lods
test
cmp
in
push
sbb
dec
push
and
dec
cmp
lahf
push
and
je
push
push
mov
cld
xchg
inc
in
dec
mov
jo
es
jbe
add
adc
sub
cmp
jg
sbb
add
mov
ja
cmpl
std
shl
repnz
sbb
push
frstor
stc
test
xchg
jae,pt
mov
mov
in
rcrb
xchg
add
sbb
pop
push
jns
pmulhw
aad
std
or
push
clc
cmp
pop
inc
add
sbbl
adc
lods
leave
dec
xor
mov
stos
sarb
lods
divl
cmp
hlt
and
or
xor
push
out
mov
or
sbb
inc
or
in
pop
cmp
ucomiss
hlt
pop
pop
mov
sub
cmp
notl
mov
add
xchg
push
int3
sbb
pop
cmp
out
imul
dec
adc
add
adc
in
into
or
fbld
push
mov
push
or
dec
dec
imulb
fucomip
cmc
push
arpl
pop
pop
mov
jae
mov
std
push
inc
or
cmpsb
jnp
add
out
cmp
das
push
movsb
sbb
ds
es
mov
mov
daa
cmp
adc
xchg
ret
and
jg
pop
xchg
xor
xor
pop
jb
xor
lea
push
test
xor
or
or
pop
insl
xor
or
add
jne
xchg
xor
outsl
jbe
xor
sti
jl
outsb
bound
xchg
pop
js
push
nop
dec
lods
es
aam
jecxz
jnp
add
shl
add
add
fsubl
jo
push
daa
lods
lods
leave
shr
sti
insl
fildll
add
dec
psrad
adc
add
mov
pushf
inc
pop
pop
cmc
or
aas
sub
pop
push
jg
nop
dec
sahf
xchg
out
jae
jo
aam
das
into
or
in
xchg
icebp
clc
xchg
inc
jns
and
mov
rcrb
in
insb
jae
stos
andb
dec
das
push
add
adc
xchg
dec
scas
or
adc
sbb
stc
or
stos
xor
subb
iret
lods
fisubl
xor
xor
mov
push
insb
push
rorl
or
mov
pop
jbe
push
lods
icebp
flds
mulb
enter
outsl
mov
add
in
or
leave
outsl
jp
pusha
sti
enter
out
repz
icebp
sahf
mov
mov
addl
lahf
add
shl
repnz
pop
arpl
sbb
push
mov
int
movsb
xor
pop
push
cmp
push
sahf
aaa
daa
cmc
jne
sub
adc
pusha
add
hlt
outsl
sub
pop
jecxz
je
push
cwtl
lret
xor
outsb
pop
sub
clc
mov
add
jmp
sub
mull
insl
push
ds
scas
jge
cmpsb
outsl
and
add
mov
cli
push
and
or
inc
jne
call
testl
out
loopne
pop
or
gs
jmp
fdiv
arpl
cmp
or
es
dec
xor
leave
fstpl
adc
or
loop
lods
fcmovnb
mov
in
rorb
outsb
inc
mov
in
lahf
or
push
xor
push
sbb
sub
cld
pushf
fwait
test
lods
data16
faddl
inc
sbb
ret
shl
mov
addl
cltd
loope
loop
jecxz
xor
fwait
adc
inc
mov
sbb
in
mov
sbb
es
pop
idivb
cmp
cmp
fwait
testl
pop
lods
jmp
fsubrl
dec
sbb
jecxz
sub
lret
jbe
pusha
inc
pop
ret
sbb
lea
add
pop
imul
jp
into
and
icebp
in
dec
cs
pop
cld
insl
cmp
stos
jmp
jo
jmp
ret
pop
add
xchg
addr16
sub
aaa
enter
pop
adc
dec
and
jb
fisttps
mov
mov
adc
and
mov
call
cmp
and
mov
rolb
es
dec
test
sub
mov
cli
ss
repz
inc
lods
das
xchg
sub
out
int
stos
cmp
inc
ja
jp
mov
adc
adc
daa
ds
jge
sahf
inc
ret
cmpsb
adc
out
cld
cmp
cmc
loope
out
in
daa
jecxz
sbb
cltd
push
and
push
and
cmp
sub
push
push
cmp
cmp
shl
inc
loopne
fimull
push
dec
adc
test
shlb
xchg
cmp
dec
sbb
mov
dec
cld
and
mov
jnp
dec
in
inc
test
pop
aas
or
ret
aad
jno
add
fisttps
sbb
jecxz
mov
mov
mov
pop
pop
nop
nop
lcall
aaa
xchg
xor
icebp
and
icebp
jge
repz
dec
or
jle
div
jg
dec
in
jne
pminsw
out
in
lods
imul
jmp
inc
aam
test
fdivs
fsubl
int3
mov
pop
addb
daa
imul
aaa
je
pop
xor
push
lds
stos
jl
ret
xchg
stos
imul
in
aas
in
pop
idiv
fmul
jmp
int
dec
stc
shr
pop
into
enter
xlat
cmp
push
push
sbb
and
das
je
xor
cmp
insl
fstpl
sti
loopne
test
sbb
pop
iret
fcoml
aam
es
rolb
jmp
rorl
mov
lds
xchg
mov
add
popa
pop
sub
cmp
dec
movsb
adc
jne
and
jge
mov
inc
mov
bnd
shrl
out
out
popl
loop
and
push
add
insb
xchg
ja
mov
pop
or
dec
cs
mov
das
pop
mov
and
ss
push
jle
rcl
adc
in
fistl
xor
add
leave
inc
adc
cmp
mov
jecxz
adc
lock
in
mov
adc
or
mull
das
adc
pop
fmuls
cmc
movsl
xlat
inc
popf
ss
push
push
es
adc
inc
cmp
adc
mov
push
cmpsb
ljmp
mov
jge
ljmp
mov
sub
stc
adc
cli
imul
fmuls
xchg
xor
sub
mov
out
in
fisttpll
aam
fcompl
adc
insb
inc
in
and
imul
push
sbb
adc
lods
and
inc
push
pop
enter
ror
xchg
cmc
dec
incl
fwait
call
xor
jae
sbb
shrb
jle
arpl
inc
cmpsb
add
test
fwait
dec
icebp
sbb
rorl
pop
xchg
adc
add
adc
jae
gs
push
sub
or
mov
int
xchg
les
mov
scas
pop
fcmovu
orb
xor
pop
push
mov
out
cmp
push
push
or
arpl
je
fiaddl
adc
mov
testl
cmp
test
int
call
dec
pop
xchg
mov
pop
or
and
and
jp
fldl
movsl
add
aas
roll
gs
hlt
dec
xor
icebp
testb
addr16
cmp
xchg
push
push
insl
pop
jb
inc
cmpl
inc
push
dec
dec
xchg
jecxz
pushf
inc
scas
loope
add
test
add
cmpl
pushf
sbb
outsl
xchg
push
jb
mov
sbb
daa
xchg
pop
cmp
sti
push
mov
sbb
aas
jg
negb
add
enter
test
cltd
rclb
leave
and
ljmp
mov
popa
mov
and
adc
jae
pop
adc
or
adc
pop
sub
cmp
sub
int3
sbb
adc
cmp
dec
popf
sti
nop
in
cmp
repnz
sub
or
icebp
test
dec
aas
mov
push
xchg
dec
fnstsw
mov
mov
push
das
mov
push
push
cmp
scas
mov
inc
mov
stc
xchg
data16
popa
aaa
sbb
inc
jnp
sti
push
bound
icebp
mov
andb
and
xor
arpl
mov
sub
movsl
and
adc
iret
cli
jnp
adc
or
xchg
dec
jb
jo
push
lods
sbb
sbbb
jmp
inc
push
mov
in
cwtl
mov
sti
push
push
imulb
imul
ret
add
lea
sbb
sahf
and
sbb
push
push
jae
sub
mov
movsb
sub
inc
or
dec
xor
dec
cmp
dec
pop
inc
jg
push
testl
in
xor
call
jb
fwait
jecxz
fadds
sub
inc
mov
pop
insl
outsb
in
in
and
stos
mov
lret
push
outsl
xor
mov
add
jle
or
outsl
cltd
cmp
sub
and
inc
flds
loop
ret
fs
aam
call
jo
or
leave
or
outsl
in
and
and
add
test
ret
mov
inc
cmpsb
in
xor
mov
fs
mov
xchg
cld
dec
or
cmc
aas
xor
sub
repz
adc
add
movsl
orl
arpl
xchg
enter
ret
add
out
xchg
test
mov
in
cmp
mov
arpl
lret
in
inc
outsl
sub
call
in
and
insb
ljmp
movsb
mov
testl
push
adc
mov
add
btc
adc
xchg
outsl
xchg
adc
in
ljmp
ss
xor
inc
add
aas
adc
lock
xlat
xchg
iret
sbb
pop
out
sub
notl
jecxz
rcll
dec
or
in
cld
sbb
negb
dec
rcrb
lods
pop
push
mov
xchg
jo
daa
push
push
jae
repz
fwait
outsl
lret
nop
xor
in
pop
int3
in
das
dec
sahf
shr
shl
in
mov
adc
sub
insb
repz
or
out
fisubrs
lahf
ror
pop
pop
and
xchg
fwait
test
repz
and
dec
mov
mov
xchg
mov
mov
sbb
shrl
or
cmpsb
aad
ficoms
adc
xorb
repz
lret
push
sbb
xchg
sahf
out
mov
call
pop
jbe
out
enter
fs
aas
push
push
lret
scas
jg
repnz
xor
out
or
sub
mov
pop
repz
push
into
mov
jne
sbb
in
xchg
add
push
pop
mov
or
je
cmp
fs
lds
sbb
mov
gs
cwtl
shll
sub
mov
sub
test
xchg
lds
rorl
xor
enter
or
sub
dec
cmp
xor
pop
add
ret
out
add
xor
adc
push
mov
rorb
fs
repz
loopne
add
daa
lock
inc
loope
out
adc
mov
in
dec
arpl
jge
sub
jbe
mov
popf
sub
push
jnp
push
jne
into
mov
push
gs
call
insl
cmpsb
loopne
arpl
push
into
xchg
mov
xlat
loop
loope
dec
aaa
xchg
sbb
popf
and
inc
inc
add
aad
repz
xor
hlt
jecxz
adc
rcr
bound
pushf
stc
jle
and
and
js
mov
adc
jecxz
push
faddp
and
cmp
call
jg
loopne
xchg
rorl
jae
fwait
pop
lds
xor
into
inc
roll
rcll
xor
or
lret
cmp
cmp
adc
inc
fists
inc
mov
pop
cs
xor
fs
in
cmp
mov
mov
cmpsl
push
rep
fisubs
add
jnp
xchg
pop
shrl
adc
adc
jo
dec
lahf
xchg
outsl
jg
repz
sbb
cmp
add
push
rclb
std
add
push
jnp
fildl
sub
inc
sbb
xchg
cwtl
repz
mov
in
push
xchg
inc
lret
js
push
mov
and
aam
adc
imul
arpl
inc
lea
pusha
in
sbb
aaa
inc
inc
dec
push
repz
lret
nop
xchg
inc
push
mov
push
or
mov
inc
pop
push
out
sbb
movsl
sub
addr16
stos
clc
mov
sbb
jg
ss
loopne
mov
sbb
push
in
mov
and
adc
mov
insl
les
fildll
jle
add
dec
fdiv
mov
out
jg
inc
jmp
sahf
das
jbe
adc
add
jmp
or
cli
gs
repz
mov
push
mov
add
scas
add
negl
mul
push
js
dec
sub
fsubl
pop
jecxz
xor
mov
int3
xchg
push
cmc
mov
jnp
std
pop
ret
dec
aad
inc
test
ja
inc
stos
test
test
adc
sbb
push
js
fmul
pop
lret
jbe
dec
mov
repnz
repz
jns
cld
adcb
or
cmp
and
push
scas
push
jp
pop
inc
nop
cmp
aam
mov
adc
loope
sub
sub
ss
inc
mov
dec
add
popl
jl
imul
ds
imull
xchg
xorl
pop
aaa
push
jl
arpl
jmp
sub
mov
in
mov
adc
pop
pop
push
xchg
enter
mov
in
push
aad
in
push
nop
jns
mov
out
clc
in
jne
insl
mov
and
int3
loop
sar
pop
add
or
cmpsl
js
and
ja
pop
lret
add
fbld
xchg
jecxz
xor
push
add
xchg
jecxz
pop
fwait
jne
and
inc
imul
rcl
dec
das
dec
inc
out
in
test
cmc
pushf
aaa
mov
insl
movsl
sti
pop
push
add
imulb
lock
fwait
jb
dec
xchg
mov
mov
jo
test
inc
push
jns
leave
mov
push
in
push
shlb
cli
in
sub
ds
mov
hlt
push
mov
daa
sub
rorb
mov
insb
test
andb
adc
fldcw
mov
pusha
call
adc
jae
and
pop
bound
push
adc
xchg
sahf
jnp
dec
xchg
jnp
push
pop
psrlq
dec
lds
xchg
fisttpll
paddsw
sub
fildll
cmp
cmc
xor
inc
mov
dec
ret
fmull
push
lock
and
inc
outsl
inc
lahf
data16
mov
test
dec
jmp
insl
jl
inc
adc
cmp
idivl
inc
xchg
adcl
out
xor
loopne
add
cmp
mov
add
mov
ret
jecxz
lods
push
push
hlt
movb
mov
fistpll
lahf
pop
int3
mov
nop
push
lock
movsl
aaa
xor
nop
sub
stos
das
adc
js
dec
in
jnp
and
jmp
in
lods
shll
add
cmc
mov
xor
xchg
push
push
pop
pop
push
mov
and
incl
push
adc
pop
lds
jae
clc
push
sbb
fwait
sbb
sbb
mov
push
frstor
push
cmp
shl
jmp
stc
test
cmpsb
ss
xor
rcrl
pop
mov
xor
xor
ror
loopne
mov
in
hlt
xchg
mov
imulb
iret
ficomps
gs
push
icebp
repz
cmpsw
mov
cmp
add
fnsave
mov
push
cld
imul
mov
mov
aaa
in
sub
fadds
arpl
xor
cmp
push
fdivrs
ret
dec
icebp
lock
enter
clc
and
ficoml
or
pusha
into
pop
dec
and
jns
ret
cmp
cld
loop
jmp
xchg
repnz
lret
enter
xchg
iret
pxor
in
cmp
inc
ds
rclb
push
ja
mov
leave
inc
and
mov
int
lea
lods
pop
pop
mov
dec
sbb
test
out
hlt
dec
les
and
aad
ficompl
cmp
ja
fildll
mov
jecxz
cmp
push
shl
sbb
jae
pop
daa
les
and
sub
push
or
xchg
mov
cmpsb
mov
xchg
sahf
pop
stos
scas
jbe
push
mov
push
shr
mov
lods
sbbl
pop
shl
out
das
in
push
pusha
push
scas
add
repnz
and
mov
mov
push
ds
cmp
in
rolb
mov
cmp
lcall
iret
mov
in
cmc
in
inc
dec
adc
cltd
push
sbb
push
fs
iret
mov
rorl
psrlq
shrl
jbe
pop
imul
xor
mov
push
ret
inc
adc
decl
cmovl
popf
sub
lea
sub
iret
movsb
dec
sub
push
pop
gs
adc
push
insb
ljmp
jno
adc
icebp
sbb
xor
lahf
aaa
movsb
stc
dec
mov
sbb
inc
dec
sbb
jle
push
lahf
xorl
jmp
add
rorb
add
push
in
xor
insb
mov
aas
ds
push
cwtl
ja
test
sbb
jle
in
add
outsb
test
inc
pop
xor
lods
sub
cmpsl
fndisi(8087
std
data16
pmuludq
xchg
leave
andb
and
lahf
sbb
fldl2t
xchg
inc
icebp
repnz
das
scas
pop
outsb
jmp
jp
sub
repnz
mov
ljmp
xchg
loope
movsl
lahf
push
loope
lods
push
pop
lock
xor
jo
loope
adc
clc
and
test
imul
aam
shrl
cmp
sub
movsb
testb
stc
fstl
out
repnz
pusha
outsb
mov
addl
lds
or
out
es
inc
mov
xlat
push
enter
cmp
stos
xchg
or
push
and
pop
jge
gs
sahf
clc
bound
popa
dec
das
adc
mov
xor
ljmp
and
fidivs
lock
aad
pusha
notb
out
cmpsl
outsl
lret
int
out
rorb
jne
jl
es
mov
dec
mov
imul
cmp
cmp
testb
push
int3
inc
inc
and
or
cmpsb
dec
mov
jne
inc
out
mov
lahf
aas
mov
not
aad
and
popf
dec
dec
xor
dec
pop
xchg
inc
xchg
movsl
idivl
repnz
push
iret
in
les
jecxz
sub
adc
mov
cltd
pop
aad
cmp
jmp
not
divl
dec
sub
enter
pop
movups
sbb
scas
loop
xor
jle
mov
inc
sbb
cmp
imul
arpl
mov
inc
xor
xchg
or
and
or
adc
cld
cmpb
sbb
pop
adc
cmp
int
inc
xor
push
add
rclb
mov
or
pop
and
out
push
into
fwait
cwtl
push
addr16
or
sbb
into
pop
arpl
cmp
sbb
xchg
or
sub
out
out
mov
mov
bound
or
and
xlat
sub
fistl
and
mov
sbb
into
pop
ret
cmp
mov
dec
ret
scas
and
dec
faddl
in
fisubs
adc
or
sub
pop
int3
and
mov
push
andl
ret
cmp
or
loop
inc
or
mov
insl
xchg
mov
and
popa
jno
cmp
pop
and
pop
leave
pop
inc
hlt
dec
in
imul
pop
test
dec
in
or
ret
xlat
imul
jg
add
clc
cmp
imul
push
imul
pop
push
inc
dec
pop
es
jmp
or
mov
xor
aad
jne
cs
cmpsl
and
ss
pop
or
shrl
dec
mov
test
fwait
and
sbb
sbb
lahf
mov
scas
jecxz
daa
adc
jl
repz
jnp
dec
outsb
in
adc
jp
daa
pop
jne
mov
setge
cmc
imul
and
insb
cli
in
sbb
in
and
jle
aad
test
add
pop
push
imulb
xchg
cmp
pop
popl
cmpsl
jp
addr16
shr
jnp
mov
xor
add
hlt
inc
xlat
ljmp
xlat
adc
aad
dec
imul
xchg
xchg
mov
sbb
sbb
pop
outsb
cmpsb
adc
fwait
popf
fwait
xchg
add
hlt
and
insl
nop
and
cmp
and
or
push
cmc
xchg
ds
add
inc
xchg
jecxz
jg
pop
jbe
push
arpl
add
xchg
sub
mov
and
jecxz
outsb
or
in
pop
push
pop
sbb
out
loope
inc
dec
push
lods
pop
xchg
xor
jnp
jae
add
sub
lock
ss
daa
adc
ret
jne
neg
push
hlt
adc
repnz
push
btc
arpl
outsb
pop
popf
add
push
push
cmp
xchg
jge
mov
sbb
mov
jp
mov
sub
je
loop
pop
daa
dec
adc
inc
sbb
and
test
aad
imull
pop
addl
mov
sbb
inc
or
adc
andb
pop
aad
cmp
jbe
ret
andl
negb
xchg
jae
negb
mov
or
push
or
pop
cmp
test
enter
sub
and
push
or
cmp
fs
outsl
sbb
insb
mov
xor
insb
test
cld
out
jne
test
scas
cmpsb
lahf
push
push
adc
out
enter
sub
test
das
daa
sub
icebp
adc
push
adc
inc
jnp
call
jecxz
push
sarl
sahf
adc
adc
pop
cmp
lret
arpl
push
sub
dec
pop
add
and
hlt
pop
add
xchg
lret
das
sbb
xor
bound
xchg
cwtl
int
popa
test
daa
dec
mov
lahf
mov
repz
xor
inc
daa
lcall
sbbb
outsl
pop
mov
pop
in
insb
mov
out
fwait
into
enter
cmpsb
adc
inc
fnstenv
and
je
push
cmp
push
push
insl
pop
pusha
addr16
lods
cmp
popf
sbb
xlat
sbb
ret
icebp
jge
addb
dec
std
ds
and
add
mov
add
cmp
in
pop
in
clc
inc
dec
jmp
cmp
pop
mov
into
lret
fists
and
data16
sub
cmc
adc
push
mov
mov
div
sub
xor
aam
inc
mov
adc
jmp
sbb
push
dec
and
adc
in
sbb
popf
sub
in
xchg
enter
push
test
pop
cs
add
xchg
inc
mov
inc
add
sub
sbb
xor
es
sbb
xor
scas
test
jb
and
imul
test
movsl
inc
test
pop
mov
adc
adc
xchg
es
adc
dec
add
xchg
negl
inc
cs
mov
and
inc
pusha
mov
adc
add
loop
out
out
bound
scas
or
dec
addr16
cmp
lcall
and
adc
cld
xor
fucomip
imul
sbb
faddl
aaa
jecxz
adc
sub
mov
in
cmpsb
cmpsl
add
fcmove
or
dec
cmp
pushf
pop
idivl
loop
xor
cmc
adc
pop
les
inc
pop
cmp
insl
mov
call
lea
jae
mov
add
sbb
lcall
sub
pop
sti
shlb
mov
add
shr
push
stos
jp
dec
sbb
xor
daa
push
lods
sbb
adc
mov
pop
in
stos
push
adc
adc
les
and
mov
cmp
adc
clc
push
and
and
mov
imul
pop
mov
sbb
add
adc
add
add
inc
pop
cmc
xor
adc
cli
mov
lret
xchg
mov
je
sub
nop
xchg
stos
mov
inc
out
jmp
scas
aaa
rolb
cmc
push
xchg
notl
ds
pop
mov
call
stos
int
ret
adc
xlat
pop
jge
xchg
dec
mov
cmp
jb
or
inc
adc
mov
sbb
aaa
xchg
fcmovnu
add
test
hlt
inc
ja
cmp
orb
inc
adc
call
and
sub
adc
sub
rclb
pop
gs
and
lods
pop
cmp
pop
add
pop
sbb
daa
dec
or
pushf
inc
into
sub
inc
lret
bound
sbb
sbb
bound
sti
outsl
sub
adc
inc
mov
dec
rclb
push
mov
and
mov
pop
and
xor
pop
pop
mov
scas
push
cmp
fmul
pop
mov
xor
adc
mov
insb
sbb
shrl
xor
fnsave
adc
and
inc
xchg
xor
shl
es
into
cmp
lea
stos
and
xchg
xor
push
data16
pop
cs
add
cmpsl
pop
andb
xor
cltd
pop
repnz
loope
add
rclb
push
aas
xor
push
adc
loop,pt
sbb
jno
pusha
sub
dec
mov
dec
mov
pop
cmp
cld
push
mov
nop
mov
icebp
incl
fiadds
cmp
cmp
mov
ja
jb
push
jp
cmp
push
cmp
out
ss
cltd
or
int
add
inc
sbb
nop
push
and
inc
es
enter
mov
fldl2e
jecxz
not
inc
daa
aas
xchg
dec
les
or
inc
fdivl
loope
rorb
inc
mov
mov
xor
or
sahf
cmp
cmpsb
repz
sbb
xchg
xor
and
push
scas
cmp
push
sahf
mov
mov
and
fisttps
pushf
leave
cmp
enter
sub
xchg
stos
adc
adcb
fstpt
adc
ret
fwait
inc
xor
gs
ljmp
clc
pop
je
imul
cltd
dec
xchg
pop
or
and
rcl
mov
xor
inc
test
scas
pop
nop
jp
or
xchg
mov
or
and
rcrb
jle
nop
aas
pushf
insb
push
cmp
mov
out
push
jle
mov
jmp
mov
mov
mov
pop
mov
jb
out
xchg
xchg
repnz
and
out
sub
xor
adc
out
push
test
mov
pop
push
adc
loop
cwtl
fcomi
and
imul
lock
out
cld
mov
pop
in
rorb
testl
mov
push
fadd
je
inc
stos
in
sub
pop
mov
pop
imul
loop
inc
mov
push
inc
cmp
push
mov
mov
inc
dec
mov
loop
jbe
and
sub
dec
pop
push
inc
jnp
and
iret
cmpsb
xchg
push
push
jae
int
test
push
lahf
movsb
pop
dec
bound
xchg
arpl
int
mov
push
push
cmp
xchg
sub
lret
pop
dec
push
add
stos
rolb
xor
jmp
and
pop
cmp
sbb
daa
jp
jae
sahf
pop
jp
rol
jb
lods
out
pop
enter
jp
ror
push
dec
js
sub
cmp
cli
add
jb
pushf
dec
xchg
hlt
mov
iret
test
cmc
jge
outsl
mov
adc
xchg
push
test
lods
dec
lds
sub
sbb
lcall
sub
lods
enter
lods
pop
or
test
mov
mov
cmp
ss
push
mov
dec
nop
inc
jg
push
push
inc
movsb
out
inc
test
in
les
and
mov
push
es
gs
sub
fcoms
aaa
popa
push
mul
out
push
lea
xor
cltd
pop
jl
xor
cmp
fdiv
divb
cmp
into
sbb
sti
movsb
xchg
mov
ja
add
jle
cmp
fimull
and
jmp
push
jl
out
jbe
sub
js
and
inc
mov
cmp
repnz
cmp
or
add
leave
jns
iret
aad
add
aad
pushf
adc
fildl
adc
pop
or
loopne
jmp
jge
subl
xor
jle
xchg
jno
sub
inc
xlat
jno
test
fwait
movsl
test
hlt
jo
jmp
and
lods
call
inc
or
sbb
sbb
insb
pop
sti
ljmp
sbbl
in
xlat
cmp
jmp
inc
cmp
fcmovne
sub
out
sub
aas
call
cltd
or
mov
sub
pop
scas
movups
xor
stc
sti
mov
adc
shlb
in
fimuls
and
jmp
ficoms
loop
sub
dec
or
loope
out
sub
push
lock
fidivs
fistl
cmp
test
add
cmp
cmp
daa
aam
inc
cmovb
pop
aam
popa
pop
lock
scas
cs
scas
jmp
ret
push
in
fadds
jnp
repz
jmp
or
add
fiadds
push
das
fdivp
repz
cld
in
pop
adc
ret
dec
push
cmp
inc
sub
outsb
js
adc
cmp
cld
outsl
cld
out
add
jo
sub
sahf
pop
out
pop
push
fisubrs
hlt
mov
sbb
push
sbb
clc
dec
pusha
jecxz
aam
dec
push
mov
sub
pop
lock
cmp
pushf
adc
stc
inc
sbb
decb
inc
lock
push
aam
cld
xor
pop
aaa
out
add
daa
xchg
sub
pop
add
loop
inc
addl
and
aad
dec
sub
inc
rcr
iret
ret
sub
jmp
push
cs
adc
push
sbb
jge
xchg
sbb
or
leave
or
cmp
mov
sub
roll
sub
pop
inc
ss
pop
jb
cli
int
mov
dec
sbb
sahf
or
bound
bnd
mov
ds
repnz
adc
daa
cmpsl
mov
cmp
xlat
int3
inc
dec
sbb
and
mov
add
xchg
arpl
insb
pop
and
or
or
pshufw
mov
jno
mov
xor
mov
and
popa
divb
pmaddwd
add
push
and
out
adc
aad
insb
out
sar
cmp
loop
hlt
dec
shl
push
pop
scas
push
mov
test
test
add
aas
in
inc
pop
out
jecxz
aad
push
push
out
dec
mov
pop
add
ljmp
cmp
rcrl
sbb
or
inc
sbb
repnz
mov
popf
cmpsl
jmp
inc
push
add
cmp
add
fisubrs
sbb
fldt
dec
adc
test
imul
cmpsb
or
push
jno
adc
pop
and
pop
leave
sbb
push
in
xor
lods
push
test
adc
adc
adc
push
call
mov
mov
mov
or
and
int3
or
into
clc
bound
lds
adc
mov
xor
add
dec
adc
adc
sbb
pop
leave
adc
adc
add
adc
push
and
sbb
xor
adc
sbb
xor
and
das
add
inc
iret
and
ljmp
add
repz
xor
inc
data16
mov
cld
mov
clc
add
push
and
inc
and
mov
xchg
jmp
pop
lea
pop
jmp
pop
leave
pop
inc
hlt
or
std
ret
bound
xchg
push
xor
neg
sbb
shlb
push
stos
das
or
aam
cld
mov
daa
in
inc
push
sbb
movsl
dec
pop
adc
inc
push
bound
xchg
jno
test
push
sbb
inc
pop
es
dec
dec
pop
std
push
jbe
pop
sahf
or
lret
add
stc
push
js
cmp
pop
adc
push
rcll
inc
push
mov
push
mov
sub
ds
aam
and
xor
jle
cmp
push
add
notl
mov
or
xor
popa
and
addl
loop
push
jae
data16
dec
push
in
shr
shlb
mov
mov
lcall
mov
mov
out
pop
sbb
sbb
cmp
dec
es
addr16
loopne
dec
andb
sub
xor
xor
jecxz
or
adc
lods
push
mov
dec
cmp
aaa
pop
inc
in
push
and
adc
addl
push
push
in
mov
stos
sti
das
pop
add
push
sub
pop
js
cmp
icebp
test
sbb
xchg
cmp
push
sub
or
add
or
inc
pop
pop
xor
pop
sub
jl
xor
jmp
sbb
into
mov
fcoms
xor
ret
inc
shlb
jae
cmp
hlt
aaa
xor
or
rol
and
enter
lods
daa
inc
cmc
sub
push
nop
push
sub
and
and
sbb
and
adc
push
and
add
mov
popa
insl
scas
pop
jo
jle
loope
adc
stos
mov
sti
sbb
jl
xor
and
adc
je
outsl
popf
lret
inc
pop
cs
stc
cmpsl
adc
cmp
mov
enter
das
mov
lock
test
dec
jmp
dec
cld
adc
lcall
aas
daa
xchg
inc
or
repz
mov
jl
push
popf
mov
rcrb
out
push
xchg
xchg
mov
lret
pop
sub
sbb
mov
insb
adc
and
movsl
notl
sbb
and
mov
dec
cmp
adc
ror
scas
mov
jbe
jp
xchg
insl
jnp
add
xlat
enter
lret
loopne
movsb
mov
and
shll
jo
loopne
inc
arpl
fcmovb
rcll
add
cli
pusha
loop
or
stos
arpl
in
dec
pusha
xor
test
sbb
mov
push
repz
push
mov
mov
xchg
ret
jae
imul
lret
shlb
lret
pop
pop
xor
cs
scas
or
mov
and
rcrb
mov
cwtl
mov
mov
pop
push
pop
ret
ficomps
cmc
das
mov
cmp
mov
and
pop
sub
xchg
add
sub
stos
insb
cmpl
sti
or
stos
mov
push
cmc
lret
pop
xor
xor
push
sbb
push
mov
sti
push
sbb
or
sahf
sub
sbb
push
mov
ja
stos
insb
lds
pop
or
xchg
xor
sub
andl
mov
shr
mov
imul
cmovge
mov
xor
arpl
scas
cmp
hlt
je
xor
andb
rolb
mov
or
and
fcomps
xor
xor
inc
aas
jge
mov
adc
xchg
adc
xor
xlat
push
pusha
enter
outsb
xor
push
xlat
sbb
jno
mov
ss
es
nop
jge
pop
and
in
sub
pop
jl
icebp
icebp
cmp
jecxz
ds
push
js
ret
lea
popa
pushf
adc
test
sbb
roll
out
test
dec
cmp
push
push
mov
sbb
sub
out
jae
sub
cmp
nop
inc
in
pop
imul
cmp
lods
sqrtps
enter
sbb
pop
xor
dec
fsubl
es
and
repnz
sbb
sub
dec
int
sub
sub
jae
adc
adc
bound
push
cmp
pusha
sbb
push
std
sbb
popf
sbb
fsts
push
mov
sub
mov
aas
iret
fdivrp
push
jns
aam
fnstsw
dec
mov
mov
xor
or
cmpsb
add
add
scas
dec
fwait
and
into
xchg
out
sub
add
es
xor
in
sub
lcall
sbbl
imull
cs
xchg
les
adc
sbb
mov
adc
adc
pop
iret
mov
or
testb
cmp
jb
push
sub
or
xor
sbb
push
pop
jp
lods
sbb
mov
add
cmp
daa
sub
ljmp
stos
cmp
xchg
lock
leave
jnp
rclb
push
outsl
ss
jnp
dec
pop
bound
sarl
add
dec
nop
dec
dec
aam
out
aas
mov
cmp
int
fstps
lds
cmp
jbe
in
fnsave
lret
inc
ja
inc
testl
add
xchg
sub
inc
push
rcrb
push
jnp,pt
pop
jbe
add
in
cs
lea
sub
leave
das
out
sbb
xchg
fsubrl
das
out
cmp
sbb
stos
jmp
ljmp
mov
inc
pop
daa
add
cltd
es
clc
cmp
jb
xor
push
sub
ss
jb
add
mov
mov
out
sub
and
insb
test
push
fucomi
add
repnz
pop
je
cmp
mov
push
jmp
mov
inc
jg
push
inc
mov
mov
divl
cmp
or
mov
inc
xlat
fimuls
sub
nop
or
iret
push
xor
pop
mov
pop
cmp
pop
xchg
cmp
arpl
jnp
pop
push
sub
dec
push
mov
frstor
push
cmp
into
sbb
aad
jg
data16
sbb
sub
lods
jno
jbe
push
lock
xchg
pop
pop
leave
addr16
subb
push
push
ljmp
pop
pop
push
call
cmp
out
add
ret
fwait
dec
mov
daa
sbb
jnp
enter
cmp
push
movsb
sub
mov
mov
pop
pop
and
into
push
cmp
dec
pop
fs
and
dec
cmp
insb
es
inc
test
dec
inc
add
pop
daa
or
inc
xor
es
and
gs
fsts
inc
inc
sub
add
cmp
pop
sub
jbe
aaa
xor
nop
in
push
pop
dec
pop
cmp
mov
jl
push
add
inc
sub
fs
fstl
dec
push
bt
shll
dec
fstpl
popa
xorb
xor
jl
mov
mov
pop
aaa
js
pop
js
scas
sub
xorl
pop
js
cmpsl
and
or
or
mov
pop
pop
sbb
cli
jp
mov
inc
push
dec
arpl
xlat
sbb
enter
adc
sub
lret
xchg
pop
fwait
mov
adc
mov
add
dec
jnp
outsb
jmp
data16
or
jb
push
enter
and
ds
inc
pmaxub
loop
push
pop
sbb
lock
sbb
les
push
adc
xor
sub
jp
cmc
pop
push
inc
loop
cld
mov
test
shlb
dec
mov
mov
outsl
divb
inc
pop
cmovg
les
addr16
iret
test
das
sbb
out
les
js
xlat
cmp
xchg
push
add
dec
jns
cld
mov
jge
mov
shrb
push
das
xor
mov
jae
int3
bound
sbb
xchg
mov
xchg
sub
out
xor
pop
in
insb
push
sub
cmovo
sub
sub
bound
sub
lahf
into
fwait
insl
incl
aad
sbb
daa
scas
cld
gs
jg
xchg
clc
cmpsl
pop
sti
sbb
jge
inc
fsubrl
push
cmc
inc
xchg
and
xchg
nop
jl
in
xor
dec
jnp
push
je
outsb
hlt
dec
test
mov
xlat
sub
sub
test
mov
xchg
mov
arpl
push
jl
mov
aaa
bound
outsb
jg
cmc
nop
aaa
jae
je
or
dec
popa
aaa
sbb
pop
ret
jl
in
je
push
push
adc
in
cmpsb
push
aaa
mov
cmp
fwait
push
ja
jnp
sub
testb
icebp
pop
sbb
dec
or
mov
cmp
in
negl
ljmp
ja
cmc
sub
in
dec
or
sub
fldt
xlat
imul
lahf
hlt
xor
pop
cs
adc
pop
jne
xchg
adcl
and
pop
mov
sub
or
neg
aaa
push
pop
dec
add
in
cld
inc
notl
sub
ja
jnp
cmpsl
sub
jnp
cmp
jb
outsl
adc
and
aad
mov
mov
push
arpl
adc
dec
add
jp
and
add
push
repnz
std
push
stos
adc
xor
push
adcb
repz
xor
and
arpl
mov
ja
cmp
xchg
lret
xchg
lcall
dec
xchg
cmp
scas
cmp
sub
dec
lods
or
in
movsl
adc
fmulp
lret
add
aaa
xchg
dec
jl
adcb
lock
stc
add
pop
out
out
push
dec
fsubr
push
xor
xchg
sub
jle
cmp
pop
sahf
push
jle
inc
sti
inc
and
mov
test
ror
movsb
mov
jmp
loop
fs
test
jg
pop
mov
jo
or
jl
cmp
cmp
loopne
xor
cmp
adc
jne
add
clc
pop
pop
aas
jne
out
js
mov
mov
mov
xor
adc
aaa
sub
or
jp
push
push
je
aad
nop
loop
call
or
jle
pop
sbb
inc
fistpll
lods
xor
jl
jbe
xor
jecxz,pt
in
fucomp
push
idivl
hlt
pusha
test
fistl
dec
lock
nop
out
xchg
jb
inc
mov
js
xchg
rclb
out
jmp
push
xchg
adc
and
lock
enter
lret
push
mov
xlat
cld
pop
xor
flds
iret
pop
jo
inc
into
jg
outsl
dec
mov
mov
xor
testl
movsl
aam
push
sarb
insl
cmp
fsubl
leave
pop
aas
cmp
push
fildll
pop
hlt
adc
bound
adc
sub
orb
inc
jae
lcall
or
xchg
lcall
into
arpl
adc
xor
lock
xchg
cmp
jne
cmp
mov
adc
into
jge
sub
pop
out
push
jnp
out
inc
add
aas
xor
out
hlt
adc
jno
or
and
pop
nop
xchg
pop
dec
cmp
test
sbb
push
sbb
fsubrp
jb
add
inc
insl
es
xchg
pop
scas
push
fcomi
pushf
or
fimull
mov
stc
mov
adc
shrb
xchg
sub
sbb
or
into
mov
sbb
fildl
adcl
inc
neg
cmp
inc
jp
addr16
iret
sub
pushf
and
scas
dec
xchg
pop
inc
out
mov
mov
sbb
add
mov
lcall
xchg
pop
inc
cmp
xorl
cwtl
jg
xor
lret
hlt
pop
ret
mov
imul
dec
and
js
add
cmp
mov
xor
arpl
cld
push
repz
pusha
push
out
out
and
xor
cld
push
fs
movsb
dec
imul
pop
sbb
ljmp
mov
iret
or
sub
dec
jecxz
inc
push
arpl
dec
lds
xchg
add
and
xchg
cmp
sbb
mov
sbb
xor
dec
loope
add
add
repnz
pusha
loope
add
cmp
inc
divl
inc
push
mov
daa
mov
stos
xchg
aas
mov
xchg
pop
jl
dec
jae
dec
and
dec
aas
fcoml
hlt
adc
sbb
testb
and
cmp
and
aas
mov
jno
push
notl
add
and
adc
inc
outsb
enter
scas
repz
jno
adc
lods
ljmp
pop
jp
cmc
sbb
mov
inc
push
add
jns
sarl
pop
fstpt
sub
push
mov
push
xorl
push
shr
mov
movl
call
aaa
jnp
clc
subb
dec
mov
pop
mov
fmull
mov
inc
dec
xlat
nop
fidivrl
cmp
sbb
cmp
jns
sahf
mov
test
aaa
in
pop
sub
or
mov
cmp
jle
sbb
sahf
mov
adc
cmp
lahf
xchg
in
cmp
cs
pop
inc
mov
cmp
loopne
xor
es
pop
jae
mov
daa
mov
loope
rorb
push
ret
jno
or
fdivr
dec
es
adc
push
and
fadds
jl
aas
jae
xchg
mov
rcrb
adc
aaa
dec
and
sahf
mov
sbb
arpl
repnz
mov
sbb
pop
andl
inc
pop
mov
lret
push
inc
or
sbb
js
arpl
mov
push
push
sti
inc
sub
xor
fdivl
repz
jg
push
popa
inc
push
pop
pusha
pop
sub
push
cmp
adc
cmp
inc
xor
inc
insl
mov
repnz
dec
and
adc
dec
add
jo
call
cs
adc
add
dec
dec
mov
stc
pop
std
mov
std
add
or
cmpsl
push
pop
bound
cmc
lcall
jae
ret
cmp
sub
jne
pop
iret
cmp
loop
mov
jge
add
outsb
pop
cmp
push
hlt
rcll
test
aam
sbb
lret
mov
inc
mov
xchg
mov
cmc
push
int
lcall
inc
addr16
xchg
sbb
jae
in
insb
decb
test
xor
cwtl
and
push
mov
ja
push
sub
ficoml
lahf
pop
jmp
pop
sbb
into
pop
jge
jb
es
push
jo
push
and
dec
xor
dec
in
inc
push
filds
cs
mov
andl
sarl
xchg
insl
popa
lods
outsb
lock
xchg
jbe
xchg
mov
test
inc
dec
sbb
push
or
dec
sbb
and
or
and
pop
dec
jp
fcmovnb
jne
sbb
ljmp
push
es
pop
gs
sbb
aam
lret
sub
cmp
sahf
pop
popf
inc
nop
mov
adc
aaa
daa
adc
mov
jmp
sahf
pop
pop
cld
movsb
test
and
push
fsubs
or
push
push
clc
push
or
push
loope
dec
mull
xorb
pop
ja
fildl
pop
push
leave
pusha
cmp
movsb
loopne
and
mov
gs
xor
scas
cld
xor
mulb
sbb
js
arpl
cmp
cmp
inc
xorl
cmp
lds
push
mov
popa
sub
push
and
lret
sbb
out
ss
mov
xchg
or
sub
mov
fdiv
mov
adc
mov
aam
mov
fsts
mov
pop
cli
sbb
test
cmc
fidivs
add
jo
mov
fs
push
pop
out
decb
in
pop
xchg
jmp
add
adc
cmp
and
xor
sbb
imul
jnp
arpl
mov
negl
adc
mov
sub
mov
cmc
add
add
sbb
or
das
jbe
sub
sub
pop
jne
sahf
testl
cmpsl
not
sub
cmc
mulb
out
insl
sbb
add
das
dec
sbb
sub
sub
pop
pop
add
mov
mov
idivl
xchg
mov
fisttps
cmpsb
xchg
shrb
cmp
and
aaa
outsb
pop
sbb
ja
arpl
sub
fwait
mov
mov
cmp
lds
movsl
aad
push
push
sbb
andl
or
or
sbb
or
sub
sub
sub
pop
imul
scas
pop
cltd
mov
lahf
test
xchg
ret
pop
out
fildl
push
inc
dec
imul
lods
cmpsb
xor
adc
add
insl
mov
jl
push
dec
push
outsl
outsb
mov
jnp
call
addr16
push
in
pop
push
push
ret
xor
outsb
cmp
les
pop
mov
bound
sub
push
insb
bound
push
or
sbb
dec
push
loop
dec
dec
imul
subl
push
repz
add
bound
jl
adc
jle
or
into
pop
push
pusha
insl
or
iret
insb
mov
cmp
jnp
mov
jle
lret
fwait
push
jg
add
loop
pop
mov
test
aad
inc
xor
push
je
dec
push
mov
xlat
xor
mov
pop
pop
fstpt
or
mov
stos
add
pop
inc
ficomps
sbb
inc
push
pop
adc
je
sbb
inc
inc
inc
jo
mov
mov
sub
cmp
scas
dec
push
iret
ret
pop
fistl
fwait
sub
mov
test
sbb
pop
fimull
or
and
hlt
imul
add
ret
outsb
sub
push
sub
or
xor
pop
sub
push
pop
cmp
jb
pop
adc
notl
sub
lods
dec
mov
pop
lret
test
cmc
scas
aaa
shlb
or
dec
test
sub
out
movl
repnz
aad
iret
stc
jbe
test
lock
in
push
sbb
aaa
cmp
outsb
sub
cli
out
jmp
hlt
mov
div
daa
fsubr
pop
dec
cld
cs
dec
pop
cmp
inc
sbb
sub
lahf
idiv
push
aas
mov
jp
in
mov
into
in
out
mov
pop
pop
orl
jle
sbb
aaa
xchg
outsb
mov
dec
mov
aas
std
incb
js
cld
sub
es
push
dec
fsubl
push
lcall
outsb
adc
inc
sarb
jmp
add
or
inc
inc
add
inc
dec
subl
paddusb
mov
xchg
push
arpl
repnz
scas
or
xchg
dec
outsl
push
jl
mov
sub
push
lcall
scas
negl
negb
adc
inc
sbb
in
pop
lock
ss
outsb
mov
mov
popa
mov
lods
bnd
sub
lcall
aaa
pop
lret
pop
mov
mov
cmp
popa
push
pop
push
into
loopne
lea
divb
mov
pop
repnz
aas
or
mov
xchg
stos
ss
cli
pop
insb
jbe
xor
jne
aas
sbb
inc
mov
scas
gs
in
std
dec
add
test
xor
sub
xor
aam
inc
sub
outsb
cmpb
sub
clc
sbb
dec
cmpsl
arpl
sbb
mov
test
rorb
jnp
jb
je
mov
shl
iret
pushf
fs
js
adc
inc
inc
cmp
mov
inc
adc
cmp
int
fadd
cmp
es
add
xchg
mov
pop
jecxz
es
shrb
filds
out
cltd
ljmp
mov
jecxz
sti
imul
push
adc
mov
cmp
mov
loope
leave
pslld
add
pushf
xchg
idiv
cmp
clc
sti
int
add
pop
sti
in
pusha
mov
mov
xor
lea
push
xchg
daa
push
mov
push
add
pop
je
xchg
xor
mov
or
add
xor
std
or
bound
inc
imul
sbb
mov
adc
les
dec
and
jge
decb
pop
mov
in
mov
cmpsb
or
or
jg
push
jge
xchg
push
pop
adc
adc
pop
push
sbb
leave
leave
mov
imul
daa
sbb
cmp
stc
inc
dec
fbstp
cmp
loop
push
cmc
ret
test
adc
stos
jp
jb
icebp
lret
mov
xor
pop
sub
jb
adc
std
cmp
js
ret
sub
dec
lea
adc
inc
push
bound
sbb
js
fcoml
push
das
mov
mov
xor
pop
cmpsl
inc
gs
inc
dec
mov
add
jnp
stos
ret
xchg
xchg
dec
add
test
inc
or
cmpsl
sub
movsb
cltd
cmp
mov
inc
insb
rclb
mov
xor
push
and
insb
mov
aaa
stos
inc
push
loop
sub
ret
enter
leave
lea
mov
sub
jno
jns
push
aam
push
fisubrs
lea
add
or
std
ja
in
imul
pop
ret
fdivr
pop
or
fdivl
xchg
sahf
mov
nop
inc
fidivl
loopne
jb
pop
lds
mov
mov
inc
mov
mov
push
cld
je
les
push
push
add
call
jmp
in
jo
fbld
inc
pop
cmc
lock
jmp
mov
mov
xchg
cmp
popa
inc
negl
xchg
push
fcmovb
rolb
push
lcall
sub
bound
pop
or
cmp
add
sub
jae
dec
push
pop
loop
decb
dec
mov
clc
xlat
mov
inc
into
pusha
ds
and
add
and
sbb
jnp
lock
jns
sub
scas
adc
sub
lcall
dec
popa
scas
sti
xor
ja
pop
sub
ret
push
fcomip
out
stos
cmp
nop
sbb
pop
hlt
push
mov
jge
push
insb
push
imul
idivl
decb
push
dec
cmpsb
xchg
jg
jp
stos
sub
ds
sub
xor
gs
lret
push
xor
inc
mov
sbb
ss
sbb
sub
adc
pop
push
div
gs
cmp
pop
out
pop
mov
cwtl
mov
sub
mov
push
fisttpl
add
imul
neg
pop
fsubl
xor
jle
adc
scas
dec
mov
fwait
and
inc
jno
das
mov
shll
and
inc
mov
scas
cmp
loopne
sbbl
addr16
mov
insb
adc
mov
add
cld
inc
push
outsb
cmp
popa
jbe
xor
mov
jbe
mov
or
pop
scas
mov
icebp
mov
xchg
push
and
pop
pop
loope
iret
dec
inc
push
hlt
xlat
mov
cmp
adc
mov
sbb
pop
loope
lret
sbb
push
jnp
pop
gs
das
loopne
shl
and
in
dec
and
aaa
mov
mov
adc
sub
adc
pop
fsubl
add
inc
outsl
and
sbb
arpl
xchg
pop
outsb
xchg
movsb
fcmove
mov
imul
test
add
stc
pop
addr16
lret
adc
in
jbe
push
idiv
cmp
dec
xchg
xor
out
loop
dec
lock
inc
pop
xchg
xchg
lods
repz
ljmp
dec
lods
inc
and
push
and
or
mov
cmpsl
pusha
fcomp
cmp
mov
inc
mov
ja
jnp
xchg
or
xorl
es
mov
xchg
lret
ljmp
mov
sbb
test
lea
jle
dec
filds
stc
loopne
push
pop
movsb
pusha
pop
inc
xchg
pop
add
jl
rcrb
add
je
aaa
incl
ret
add
clc
mov
es
icebp
or
pop
repz
or
aaa
xor
gs
imulb
icebp
fldl
insl
repz
inc
sbb
inc
push
sbb
int
into
ss
sbb
add
pop
push
push
sub
and
es
pop
and
test
scas
mov
stc
loopne
aas
das
jg
arpl
mov
lcall
add
mov
dec
out
jns
sbbb
pop
push
dec
rcll
adc
sub
and
int3
sbb
shl
cmpb
sub
cmpsl
dec
xchg
mov
out
fcoml
dec
divl
sub
sub
pop
pop
dec
add
mov
stos
sbb
mov
adc
xor
sarb
xchg
rcrb
and
sub
fidivs
sub
inc
ret
inc
jle
jle
imul
js,pt
inc
mov
mov
xor
mov
mov
push
jge
mov
mov
inc
test
lahf
js
pop
push
jns
xchg
pop
pop
lods
ret
fs
cmpsl
push
jb,pn
jnp
jo
cmp
jo
iret
inc
pop
cmp
call
jns
out
mov
xchg
xor
push
adc
add
dec
hlt
cli
add
mov
roll
out
leave
cld
in
pop
roll
push
push
push
mov
mov
out
fmull
es
fnstsw
sub
in
outsb
sub
les
mov
mov
fsubs
ds
out
push
sti
cmp
das
out
xor
push
pushf
loope
pusha
cwtl
jnp
cmp
cmp
mov
out
and
and
shlb
xor
fldt
cmp
aaa
adc
pop
out
and
es
stos
push
mov
les
inc
mov
shl
or
jl
lds
push
clc
cmp
push
adc
insb
in
sub
pop
mov
pop
lods
iret
jecxz
pop
xchg
dec
pop
fwait
mov
sbb
push
mov
xchg
cmp
or
inc
mov
rclb
rolb
cld
into
popf
stos
or
insl
test
lods
ss
cs
aaa
add
mov
dec
pop
shlb
cwtl
mov
inc
xor
push
lret
sub
popf
mov
mov
xor
arpl
aad
aaa
jo
jmp
fwait
push
adc
jae
sbb
movsl
dec
imul
es
mov
jecxz
ror
add
add
movsl
js
test
repnz
es
cmp
insb
adc
dec
fildll
pop
or
cmp
fs
mov
mov
nop
in
add
lea
adc
mov
gs
xor
inc
inc
cmp
jne
xor
insb
sbb
add
jl
mov
inc
xchg
lods
xchg
inc
data16
add
xchg
int
cmc
pop
dec
push
push
aas
push
inc
lahf
int
lods
popa
pop
mov
xor
pop
jbe
and
jne
ficoml
and
insb
arpl
arpl
dec
pop
test
or
cmovns
pop
ds
jp
pop
cmp
jl
jg
mov
xor
orl
lods
int
xchg
sbb
sbb
stc
daa
fisttpl
rorl
sarb
aad
leave
mov
adc
add
and
push
cltd
inc
inc
xor
lea
movsb
push
sub
int3
pop
in
add
popa
pop
gs
dec
outsl
dec
cld
xor
mov
sub
cmp
dec
adc
xor
adc
movsl
stc
jbe
push
hlt
pusha
adc
adc
out
adc
repnz
fldcw
xor
add
mov
cmpsl
xchg
pop
add
adc
adc
loope
in
stos
movsb
cmp
mov
shrb
movsl
xchg
ja
xor
inc
outsl
inc
push
pop
inc
pop
addr16
loope
repnz
out
jb
pop
xor
pop
es
push
or
push
xchg
or
dec
cli
inc
jg
jge
dec
and
lock
xchg
mov
mov
icebp
sahf
arpl
cwtl
rcrl
in
or
xchg
xlat
sbb
xchg
jns
mov
and
sbb
je
pop
test
sub
jge
push
movsb
stos
inc
fbld
add
outsb
jmp
movsb
sub
adc
out
and
sar
div
out
testl
in
sub
mov
rclb
adc
push
cld
and
sbb
roll
and
sbb
arpl
pop
jmp
rcl
push
jns
dec
mov
mov
sub
hlt
or
in
xor
dec
fwait
mov
mov
push
xor
push
xlat
push
ss
adc
sbb
adc
incb
adc
fdivs
data16
mov
mov
cmp
cmp
and
icebp
push
aam
bound
daa
outsl
hlt
push
repz
adc
inc
test
push
adc
push
ss
sbb
into
mov
xchg
dec
ret
push
arpl
js
inc
pop
and
cmpsb
push
push
lcall
pop
repz
cs
aam
in
add
adc
gs
or
mov
adc
or
std
stc
xor
cmp
cmp
sub
out
sub
ja
cli
gs
pop
xlat
daa
jns
sbb
mov
cli
cmpsb
js
je
mov
ja
adc
sarb
mov
jbe
cmp
jnp
cmp
and
cltd
mov
test
push
in
repnz
aad
in
dec
fcoml
push
fnsave
push
pop
xchg
inc
int3
jo
pop
incb
int3
gs
ja
push
pop
fdivr
cmp
mov
or
dec
fdivs
sub
sub
or
icebp
add
or
push
adc
adc
clc
add
cmc
push
push
cs
daa
popf
sbb
push
push
ss
and
daa
pop
jns
inc
pop
fisttpl
outsl
sarb
std
push
jae
lret
mov
inc
out
push
sbb
lahf
or
adc
je
cld
adc
aaa
jbe
das
addl
je
fsubrs
mov
aam
add
stc
filds
xor
icebp
dec
out
cli
insb
cmp
out
xchg
pop
jge
push
cmc
cmp
mov
add
sbb
daa
pop
or
out
idiv
xor
pop
add
hlt
jnp
in
adc
out
adc
jbe
sub
sub
negb
out
imul
cmp
fs
adc
pop
add
in
idivb
xchg
jmp
stos
dec
jmp
mov
sub
mov
outsl
outsl
add
ret
fs
lret
sub
das
ret
jg
sub
fcomi
sbb
fstl
xlat
inc
cmp
xchg
cmc
aas
inc
movsb
out
xchg
push
nop
xchg
ds
add
cli
shrb
mov
sub
push
mov
push
sbb
jo
fldt
jnp
inc
testl
and
lea
in
icebp
daa
test
gs
xchg
dec
andl
out
ljmp
and
movsb
out
aas
pop
cmpsb
dec
and
cs
rorl
jb
pop
cmpsl
mov
sub
mov
mov
push
xlat
pop
pop
pop
dec
divl
xchg
rolb
mov
enter
int3
and
cmp
jg
or
and
add
arpl
cmpsb
aas
jecxz
and
pop
cmp
or
mov
mov
fadds
test
test
and
pusha
xchg
pop
das
sub
add
adc
push
lahf
and
and
pop
or
push
mov
out
jle
push
or
imul
iret
jl
pop
ds
add
push
ss
xor
fmuls
push
adc
sbb
xchg
add
cmp
adc
adc
pop
leave
cmp
fldt
pop
mov
test
sub
mov
push
bound
add
pop
dec
aaa
adc
leave
or
and
push
sub
or
adc
hlt
adc
dec
sub
iret
mov
sub
cmp
sahf
xor
inc
in
mov
xor
rcr
xlat
insb
push
lcall
push
ljmp
adc
dec
ret
sub
pop
fdivr
sub
and
dec
es
std
aaa
in
xchg
aas
adc
xchg
iret
imul
pop
inc
addl
dec
negb
inc
and
and
sub
dec
in
inc
push
sbb
cmp
dec
push
sbb
dec
dec
out
xorb
pop
daa
and
out
dec
push
sub
iret
pop
cmp
xchg
in
out
or
mov
inc
stos
scas
cld
and
inc
int
and
pop
sub
mov
push
pop
daa
sub
in
mov
jge
and
inc
repz
and
cmp
cmp
das
sub
cmp
xchg
rcrb
add
sbb
rcrl
or
dec
daa
movsb
adc
xchg
roll
and
mov
mov
cwtl
dec
notb
daa
dec
call
fisttpll
cmp
xchg
lahf
xchg
xchg
sub
inc
push
mov
jge
orl
scas
sub
data16
jmp
cmp
in
push
movsl
call
adc
iret
add
pop
sbb
xor
mov
push
xlat
dec
fstpt
push
xchg
in
ss
aas
push
mov
push
dec
push
stc
push
mov
or
lret
sti
outsl
and
ja
and
popl
push
push
mov
sti
inc
rclb
insb
xor
push
and
in
aas
add
inc
xchg
insl
xchg
pop
and
adc
cmc
arpl
fbstp
adc
popf
pop
repnz
jp
mov
sub
mov
scas
pushl
lret
pop
aaa
xchg
testb
mov
mov
out
or
pop
cmc
push
jle
add
mov
sbb
pop
mov
jmp
divl
icebp
dec
jae
sbb
cmp
adc
lcall
mov
push
addl
sub
ja
fs
push
push
cmovns
bound
mov
jl
femms
popf
and
jmp
sbb
xor
xchg
jae
stos
idivb
add
stos
lahf
fisttpl
push
push
daa
and
jle
leave
jge
fistl
xchg
idivl
cmp
xor
sbb
inc
scas
or
add
jno
test
sti
dec
jne
sti
popf
scas
cmp
push
adc
testl
andb
jnp
jnp
ljmp
outsl
and
jmp
add
mov
icebp
jecxz
add
sti
dec
cld
call
mov
es
out
ss
outsb
pop
sbb
or
sub
sub
sub
ss
or
cmp
fs
adc
pop
in
notb
fcmovnu
test
cmc
aam
repnz
lret
sbb
sbb
mov
mov
sub
outsl
xchg
inc
pop
push
dec
sub
push
xchg
or
xlat
test
out
dec
xor
mov
aad
stos
adc
in
dec
iret
outsl
icebp
std
or
neg
xor
sahf
jmp
mov
mov
xchg
aam
cmpsl
movb
lcall
jo
repz
loop
jmp
jmp
push
in
iret
jbe
inc
jnp
fwait
aam
add
pusha
push
mov
or
loopne
in
mov
test
stc
aam
adc
frstor
cltd
lds
push
scas
cmp
shll
inc
cli
in
xchg
lret
adcb
in
mov
and
xor
rol
push
repz
sbb
hlt
or
jge
mov
add
fsubr
xchg
pop
push
lahf
lods
test
xchg
xchg
pop
loop
xchg
dec
loopne
or
dec
data16
dec
in
dec
and
cmc
ds
sbb
mov
fistpll
jno
dec
add
rep
repz
js
sub
loop
js
in
sub
outsb
in
loope
hlt
lcall
out
push
in
push
pushf
orb
xor
rcl
jmp
fs
fnstsw
ljmp
xor
popf
inc
divl
mov
in
fcos
dec
or
sub
or
loop
ja
inc
add
mov
mov
xchg
mov
or
sbb
ret
insl
jmp
jns
fdivrl
in
addr16
imulb
jle
jmp
shll
dec
out
test
fxch
emms
hlt
pop
push
pop
aaa
shl
fmull
insb
lea
dec
addb
jge
fstl
adc
mov
and
pop
pop
in
sub
repz
push
xchg
inc
and
push
stos
in
xor
pop
cli
sub
pop
sub
mov
scas
std
in
mov
leave
scas
push
pusha
cmp
mov
xor
in
shl
cmp
shlb
xchg
gs
inc
in
pop
push
sub
clc
and
jg
icebp
movsb
sbb
stos
push
sarb
push
out
xchg
fucomi
pop
mov
cmc
cltd
imul
lahf
dec
sbb
pop
add
es
mov
out
shl
dec
arpl
sub
pop
mov
cwtl
mov
xchg
mov
mov
pop
ds
push
jecxz
sbb
adc
cmp
xor
mov
jmp
mov
into
int
and
sbb
sub
in
mov
cld
inc
push
cmp
add
jae
or
bound
das
ret
xchg
aam
lods
mul
clc
mov
ljmp
xor
dec
inc
jle
jge
negb
das
loop
flds
rcrl
and
push
inc
or
test
ja
adc
cmp
and
inc
mov
cmp
dec
aam
loop
mov
hlt
ret
shl
ss
mov
out
add
ret
inc
aam
repnz
out
cmc
ror
outsb
pop
loopne
pusha
out
xchg
push
xlat
call
sbb
dec
pop
jecxz
sub
test
repz
