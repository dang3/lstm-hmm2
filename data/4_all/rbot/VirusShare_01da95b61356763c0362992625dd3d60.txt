and
imul
fs
push
mov
loope
test
mov
subb
or
out
ret
mov
xchg
div
insl
push
add
jmp
in
pop
adcb
pop
testl
sti
mov
inc
loop
hlt
fsts
push
mov
fldz
add
xchg
test
notb
pop
cmp
push
mov
cmp
stos
ret
imul
bound
cli
cmp
in
mov
lahf
icebp
mov
adcb
ja
mov
rorl
cmpsl
inc
pop
jmp
inc
xchg
push
mov
mov
push
in
or
sahf
out
add
iret
insl
pop
nop
and
jg
fnclex
xchg
jl
loope
mov
imul
cmp
mov
jo
test
lcall
shlb
mov
xlat
movsl
jg
pop
test
or
fistps
ret
fimuls
sub
cmp
mov
fisttps
cmp
mov
loop
sarl
dec
les
cmp
out
pusha
imul
and
xchg
mov
inc
clc
mov
lds
dec
pushf
shll
lods
jecxz
and
inc
sbb
lahf
mov
cld
outsl
fs
or
sbb
mov
and
ds
and
scas
lock
in
push
cld
xchg
mov
sbb
mov
xchg
mov
pop
xchg
push
sbb
shll
pushf
ffree
xor
mov
push
push
insb
jae
outsl
cmp
pop
in
aas
jecxz
inc
xor
addr16
rcrb
sbb
call
lcall
hlt
in
mov
pop
cmp
jmp
and
test
insl
js
out
and
jns
lods
jmp
xor
jp
je
in
divb
and
lret
push
cmpsb
pop
dec
dec
xor
cwtl
mov
inc
lret
cld
lret
stos
jp
in
adc
cmpsb
sbb
aam
icebp
dec
repnz
test
leave
xor
jl
dec
cmpsb
xchg
pop
and
sub
xor
daa
or
push
or
gs
xor
xlat
mov
sub
jnp
sub
insl
testb
xchg
and
notb
add
sub
fcomp
mov
imul
mov
push
in
repnz
popf
scas
in
mov
push
sti
jns
xor
fnsave
xor
shrl
lahf
outsl
add
mov
jmp
xorb
inc
or
outsl
cmp
mov
pop
addr16
push
inc
ljmp
mov
loope
xor
add
jo
sub
adc
es
pop
push
jecxz
sbb
mov
scas
pop
jnp
mov
pop
adc
dec
mov
das
nop
cmpsb
mov
movsb
mov
rcl
pushf
js
cmp
arpl
popf
or
mov
cmp
jns
cmp
movsb
sub
and
add
pop
clc
in
jbe
mov
mov
bound
mov
sbb
add
nop
mov
adc
and
cmpsb
popl
inc
test
sbb
mov
cmp
jae
jmp
lahf
jae
fsubl
cld
icebp
adcl
add
push
adc
into
jae
dec
mov
jno
dec
add
lahf
pop
xlat
in
xchg
inc
xchg
imul
or
mull
gs
pop
lgs
mov
lods
push
jp
dec
popa
add
subb
inc
jg
dec
mov
addr16
pop
fsubs
adc
out
pop
popa
data16
cld
addr16
daa
mov
imul
mov
inc
std
test
popa
jp
xchg
xorb
out
fdivrs
orb
imulb
pop
jb
loop
jne
adc
js
cld
jge
or
add
jo
out
push
mov
adcl
jmp
and
aas
daa
adc
mov
sub
jns
in
mov
sub
adc
lret
outsl
rcrb
mov
or
xchg
repnz
jge
add
ret
xchg
mov
bound
rorb
sbb
pop
push
fsubs
add
cmp
int
inc
insl
xchg
stos
fdivr
scas
adc
outsl
cs
sahf
hlt
mov
cld
mov
mov
fwait
cmp
test
jnp
cmc
nop
stos
push
aas
dec
in
negb
int
pop
inc
cmpsl
cs
mov
loop
aad
or
pushf
sub
inc
push
xor
das
pop
cs
ret
data16
fimuls
mov
lea
out
in
push
shll
xchg
ret
pop
pop
xor
push
push
repz
sub
sahf
hlt
mov
or
inc
add
call
push
addr16
dec
xor
mov
shll
out
loopne
sub
lret
enter
cld
push
rolb
in
dec
out
in
fistpll
fistpll
insl
shlb
sub
pop
pop
dec
mov
xchg
imul
es
aaa
mov
mov
popa
fisttpll
cwtl
mov
pusha
adc
pop
push
repz
fs
jmp
mov
iret
sub
and
cltd
and
or
movsb
xor
mov
add
sub
add
int
or
sbb
cmpsb
mov
sar
cmp
mov
lea
pop
push
jo
push
mov
cmp
inc
mov
jecxz
cmp
inc
incl
ja
insb
mov
stos
cmp
test
push
bound
cli
adc
adc
xchg
test
fwait
icebp
add
int3
shlb
add
mov
or
mov
test
insb
stc
add
fs
inc
and
pusha
sti
insl
sub
xchg
stc
aaa
inc
add
scas
sub
xor
das
mov
call
and
les
pop
sbb
sbb
mov
nop
mov
pusha
sbb
in
out
fcoml
jae
das
push
dec
nop
aaa
shrb
fldcw
insl
lahf
xchg
xor
push
loopne
cmpsl
mov
adc
add
push
rcll
scas
outsl
movsl
pop
scas
cmp
movsl
jle
xor
imul
jmp
aas
cmp
cmp
out
into
pop
out
jg
repnz
sbb
rol
dec
ret
aam
lcall
insb
cmc
mov
ret
popl
notl
add
pop
fsubs
inc
scas
mov
stc
or
cmp
adcb
int
mov
ret
jae
jo
gs
mov
lahf
dec
push
cli
jle
loope
mov
and
and
pushf
jbe
outsl
push
mov
add
push
xchg
mov
xor
and
in
lock
testb
xchg
sbbl
shrl
insb
jecxz
add
xchg
push
push
in
xor
jl
pop
repnz
mov
cli
xor
js
sbb
inc
clc
and
ss
push
ror
pop
sub
and
scas
out
fcoms
inc
ret
xchg
sub
push
and
int3
lret
es
fs
push
loop
mov
sub
mov
and
fdivrl
push
sub
movsl
mov
sarl
imul
pop
jo
test
out
imul
enter
dec
hlt
mov
mov
xor
mov
aas
xor
in
lret
sbb
mov
xchg
mov
cli
adc
enter
test
mov
xchg
lock
push
jno
pop
push
in
call
hlt
mov
cld
in
inc
jmp
mov
shll
fidivrl
out
test
jmp
fldt
loopne
sub
dec
in
push
jp
ljmp
fwait
lahf
and
mov
xor
outsl
hlt
mov
push
inc
out
xor
leave
test
jb
out
or
pusha
and
aam
in
aad
out
jmp
pop
lahf
in
stos
dec
lahf
sub
testl
popf
aas
mov
cli
insb
in
aam
data16
fs
shrb
push
jnp
pop
mov
cmc
stos
mov
inc
fdivr
push
jge
sbb
mov
mov
mov
cmp
mov
in
mov
xor
mov
into
movsb
lods
in
or
sub
mov
or
pop
dec
out
pop
inc
adc
sahf
jnp
xor
loop
sub
cli
cmpsb
xchg
test
cli
xchg
cmp
mov
sti
xor
div
xor
andl
inc
mov
fmulp
push
notb
out
cmp
inc
sahf
jl
repnz
jae
popf
repnz
add
and
push
cmpsb
push
push
mov
movsl
lret
pop
mov
or
scas
mov
iret
adc
pop
test
cmc
outsl
iret
pushf
outsb
orl
and
jb
and
les
imul
movl
xor
fldenv
inc
mov
cmp
cmc
leave
int
clc
cmpsl
mov
popf
or
xchg
mov
dec
cmpsl
bound
lods
repz
and
inc
adc
int3
stos
xor
scas
adc
out
lahf
pop
dec
rcrb
aam
in
mov
inc
arpl
mov
or
arpl
jl
sbb
clc
xchg
sub
adc
ret
mov
xchg
jmp
lock
in
jno
icebp
jnp
imul
or
mov
rcl
sub
inc
add
loope
dec
mov
add
mov
mov
push
xchg
lock
iret
jp
jae
sbb
jmp
iret
movsb
out
jl
rclb
in
mov
insl
inc
daa
ret
sar
nop
mov
push
cli
lods
jno
enter
cmp
mov
sarb
xor
fistps
jb
rclb
lahf
enter
mov
mov
loope
shll
nop
int3
pop
imul
cmp
mov
addr16
jp
adc
dec
pusha
add
sub
int3
and
pop
cmp
sub
scas
sbb
insb
icebp
mov
sbb
stos
xchg
subb
aas
mov
pop
and
ja
dec
outsl
push
adc
mov
dec
sub
xchg
mov
pop
ja
fs
or
push
int3
call
cmp
cmc
outsl
mov
push
cmpsl
fcompl
out
jmp
stos
jg
pop
dec
mov
fistpll
add
mov
push
les
rolb
addr16
dec
leave
and
add
sbb
dec
ficoml
mov
pop
sbb
push
inc
repz
xchg
cmp
addr16
sar
repz
mov
cmp
imul
push
lds
mov
addr16
mov
cld
xor
push
and
shlb
mov
je
daa
stos
xchg
push
cmpsl
xor
fldcw
notb
and
popa
mov
mov
enter
xorb
bound
movsb
in
incl
cwtl
test
pop
push
in
int
or
jnp
jnp
xchg
aad
lods
mov
dec
pop
or
jp
mov
fmul
scas
add
das
sub
pop
push
cld
fsubrs
mov
add
lret
jmp
cwtl
in
xchg
jb
sub
mov
dec
test
aaa
pause
addb
out
roll
sahf
ljmp
fmull
fwait
pop
bound
in
test
push
lods
in
lcall
xchg
sbb
sbb
lods
ds
push
push
lcall
loopne
push
dec
jecxz
mov
shl
cwtl
sub
dec
lea
push
lock
cli
add
xor
xchg
lea
sahf
or
fs
cmpsb
cmp
or
cmp
jp
cmc
fdivl
push
lcall
add
mov
imul
jle
jbe
scas
stos
sub
iret
fmull
stos
lcall
jmp
in
or
dec
mov
sub
stc
jne
loop
rorl
imul
xchg
inc
push
sbb
inc
adc
add
daa
notl
mov
out
les
mov
pusha
pop
imul
test
in
add
leave
sub
sbb
gs
ss
cmp
sahf
pop
lds
testb
mov
leave
repnz
addr16
jle
mov
clc
push
stc
push
add
testb
inc
sbb
xor
les
xor
xor
sbb
xchg
popf
mov
ret
jp
mov
test
xor
sarl
inc
and
pop
fdivrs
in
mov
fs
mov
pusha
inc
pop
imul
jge
mov
pop
dec
sbb
sbb
mov
icebp
das
push
hlt
jne
insl
arpl
je
sub
push
fsub
lods
stos
sti
push
sbb
in
clc
fsubp
bound
sbb
int3
cmp
aas
stc
xchg
adc
push
dec
shll
push
fcoms
imul
mov
mov
pop
not
jb
mov
icebp
ss
dec
leave
repz
push
and
and
mov
add
lret
ret
xor
cmc
in
lock
aas
push
dec
ret
cmp
pop
add
inc
fsub
mov
pop
inc
sarb
push
icebp
jl
stc
test
push
mov
insb
cmp
out
cld
add
add
and
add
cltd
mov
mov
lods
out
jl
shll
mov
or
mov
cmp
push
mov
mov
inc
adc
adc
mov
jbe
xchg
mov
roll
dec
movsl
mov
mov
mov
push
and
or
mov
sub
iret
lret
inc
adc
stos
mov
fwait
xchg
mov
loop
iret
mov
aaa
shrl
push
add
cmp
jmp
xor
mov
mov
movb
sahf
fsubp
movsb
pop
imul
push
scas
dec
jnp
subl
jge
repnz
mov
jecxz
adc
out
data16
jmp
jecxz
test
les
adcb
push
xsaveopt
jecxz
pop
mov
js
inc
es
cs
bound
sti
and
repnz
cmpsl
add
or
cmp
arpl
dec
add
mov
clc
push
shl
jg
lret
adc
out
cld
jo
in
shll
inc
push
imul
and
rcll
sub
shlb
pop
in
sbb
push
mov
faddl
jmp
fidivrs
or
in
mov
pop
mov
addr16
stc
adc
fwait
out
sub
mov
pop
jg
pushf
rorb
stc
lcall
in
enter
out
lods
imul
cmpsb
mov
and
mov
add
movsb
push
jmp
les
and
sub
xchg
shrl
out
clc
push
mov
cli
jge
cmpsb
jno
je
sahf
cmp
subl
push
rcrb
fcompl
dec
cli
loope
lock
jl
xlat
mov
pop
clc
mov
sbb
and
dec
fmul
daa
jb
inc
int
mov
jbe
cmp
filds
jmp
inc
sbbb
cmpl
jno
and
arpl
jmp
hlt
ds
fldt
cwtl
and
popf
inc
imul
fidivrs
lret
cmpsl
lock
stos
pusha
xchg
mov
or
mov
xor
mov
add
cmp
in
push
das
push
out
movsb
jns
xchg
dec
lods
sbb
out
push
jbe
mov
sub
lds
add
into
mov
or
xor
jle
ljmp
iret
pop
or
jbe
sti
cld
ds
in
sub
scas
gs
push
popf
sbb
cmc
test
dec
cmp
push
stc
mov
push
rorl
xor
push
pop
sarl
jno
std
test
stc
adc
mov
fcoms
jecxz
dec
out
loope
shlb
clc
fsubl
dec
loopne
inc
dec
push
dec
lret
jmp
sbb
test
js
add
jbe
pop
shrb
and
and
mull
add
das
sbb
lcall
adc
mov
inc
mov
mov
pop
xor
push
sbb
sbbb
dec
test
aad
mov
movsl
cmp
lret
push
jg
mov
xchg
fwait
movsb
cld
pop
push
mov
mov
push
mov
scas
inc
or
ljmp
push
add
call
inc
cmpsb
in
mov
cmp
xchg
or
mov
mov
bound
stos
or
jg
push
mov
xchg
mov
mov
fsts
scas
push
jl
mov
test
aad
jb
push
sbb
pop
xchg
push
mov
cmpb
lret
push
inc
add
imul
pop
enter
mov
test
push
pop
fistpl
lds
lret
cld
icebp
jge
cmpsl
test
cmp
push
insl
add
or
pop
mov
sarb
sub
fs
adc
in
mov
push
jb
push
mov
hlt
push
mov
imul
jno
pusha
xor
mov
lock
inc
pop
xchg
iret
dec
mov
test
ret
arpl
into
shll
jle
imulb
cmp
fadds
jae
stc
insb
bound
das
inc
dec
shl
mov
mov
add
test
sub
adc
jnp
add
push
mov
xor
inc
inc
das
mov
fdivs
push
cwtl
mov
hlt
sub
push
inc
arpl
push
clc
in
lret
mov
pop
pop
jg
loopne
je
or
outsb
fmuls
push
test
pop
cmc
daa
arpl
cmpsb
lock
xor
scas
addr16
ffree
call
jbe
repnz
lods
enter
enter
fbstp
dec
mov
je
push
dec
jp
mov
leave
dec
push
sub
xchg
mov
adc
lret
mov
inc
inc
repz
dec
xor
out
imul
mov
cmp
mov
repz
push
aam
pop
push
ss
insb
imulb
jo
ficomps
jnp
jl
outsb
pushf
test
movsl
lods
lods
ret
mulb
jmp
push
mov
stc
lret
mov
xchg
adc
pusha
jecxz
mov
lock
repnz
cli
mov
mov
mov
nop
shlb
jb
into
sub
mov
and
cmpsb
cs
test
or
push
lahf
sarl
and
imul
test
ds
shll
and
lahf
rcr
inc
push
lret
psadbw
push
aad
jmp
inc
pusha
lret
xor
divb
dec
and
mov
addr16
les
pop
stc
cmpsl
sbb
sbb
fsubr
inc
aas
int3
cmp
incb
sbb
xor
inc
jmp
ljmp
push
adc
mov
mov
leave
insb
popa
cs
jns
jns
xor
add
loop
icebp
fisttps
and
frstor
sti
das
std
in
popf
mov
aam
iret
push
leave
arpl
xorl
jp
and
pusha
lock
xor
mov
dec
movsl
xchg
adc
cmpsb
add
pop
cmp
lahf
sbb
cld
lahf
mov
mov
pushf
ret
mov
xchg
inc
lret
add
aaa
dec
xchg
out
jnp
ret
aam
jmp
iret
stc
test
addr16
mov
movsb
insb
sub
xchg
push
push
mov
inc
ret
lock
fs
fistpll
cmp
mov
jmp
in
faddp
test
out
push
fs
sbbl
add
fistps
dec
movsb
inc
xorl
int3
jecxz
in
rcrl
rcr
add
lret
add
lcall
pop
gs
lret
xchg
fsincos
xor
mov
jbe
xchg
inc
adc
mov
xchg
mulb
out
scas
in
sti
xor
mov
push
mov
andl
cltd
cmc
fcompl
sti
sub
mov
adc
lret
stos
mov
push
ljmp
mov
cmc
inc
mov
fisubrl
pusha
push
dec
mov
hlt
pushl
mov
fistl
out
pop
nop
rclb
out
test
mov
mov
xor
mov
mov
mov
mov
sbb
push
mov
sub
test
add
inc
mov
cmp
cmp
ret
xchg
fdivl
addb
sub
lods
mov
cmpsl
ds
cld
mov
mov
inc
mov
sbb
and
add
repz
scas
lds
add
mov
mov
pop
jmp
out
sub
jmp
adc
lock
mov
adc
pop
xorl
xor
bound
das
add
mov
bound
testb
ljmp
pop
popa
mov
xchg
or
sub
leave
mov
out
cmpsb
cmp
rcll
cmp
fdivrl
out
mov
jmp
adc
inc
iret
frstor
xorl
pop
and
inc
inc
mov
jp
lods
mov
xor
lds
dec
cmp
dec
push
test
lret
adc
xchg
iret
ret
int3
mov
mov
sar
mov
aas
mov
jnp
scas
push
xor
adc
inc
rcrl
aam
xor
xchg
lret
push
sbb
test
mov
and
xchg
add
fs
loope
mov
push
xchg
push
sbb
rcrb
or
pusha
pop
inc
out
cmp
mov
sub
sub
ret
lds
or
dec
popa
xlat
ret
shrb
add
aas
mov
ss
lahf
add
dec
fwait
iret
incl
loop
sbb
ret
pop
inc
or
and
cmp
loope
cmp
mov
dec
pop
mov
push
addr16
cmp
cli
mov
cld
inc
jmp
out
xor
mov
mov
or
xchg
cmpsb
push
repnz
add
push
jno
or
test
adc
jne
jecxz
xor
je
test
xchg
push
lock
movsl
xor
inc
pop
js
in
stos
push
in
add
dec
popa
pop
cwtl
sub
movsl
addr16
daa
mov
std
push
dec
loop
testl
jl
repz
xlat
addb
hlt
roll
call
cwtl
push
les
mov
jmp
fstpt
jae
es
pop
loop
jb
cmpsb
jnp
jb
dec
push
push
inc
dec
call
cltd
mov
ljmp
pushf
pusha
ljmp
jecxz
fists
dec
mov
xchg
cmpsb
mov
fldenv
frstor
dec
movsl
lods
mov
jecxz
mov
fmull
pop
shr
dec
adcb
test
xor
test
es
fidivrl
sbb
out
adc
cmc
out
pop
mov
or
fstps
icebp
push
mov
cli
cmp
mov
lcall
add
scas
push
push
nop
lods
jae
out
fists
inc
scas
cld
lods
cwtl
sub
push
push
mov
jmp
xchg
push
sahf
in
out
mov
sarl
mov
mov
lret
gs
ret
mov
sub
fimuls
fs
push
add
fldcw
xchg
stc
mov
pop
mov
iret
inc
aaa
mov
or
pop
xchg
xchg
leave
int
sti
das
sbb
pop
decb
sarb
dec
lock
push
pop
shrb
out
stos
nop
cmp
xor
mov
xchg
fcmovbe
xor
push
lret
pop
fwait
daa
ficoml
add
jl
cli
lock
stos
push
inc
lret
sbb
popf
xor
push
pop
mov
in
mov
add
sbb
push
pushf
cmpsl
lahf
xor
push
add
fcoml
jne
xchg
xchg
outsl
and
andb
lcall
jg
test
sbb
loope
out
in
orl
shll
jecxz
fldcw
cmp
jbe
clc
add
mov
pop
lock
in
daa
subb
ss
aas
adc
jne
imul
inc
xor
dec
pop
mov
xchg
sahf
idivl
mov
fidivrs
xchg
clc
mov
mov
pop
inc
adc
stos
adc
cmp
rcr
das
loope
push
je
mov
xor
mov
rcrb
or
fildll
or
mov
and
scas
ja
lret
ja
add
xchg
push
aad
cmp
imul
and
loop
dec
ss
mov
inc
jl
in
sub
or
addl
imul
push
add
notb
shl
jg
xchg
fidivl
test
mov
cmpsb
ret
imul
mov
stos
xor
sbb
mov
sub
loope
or
push
movsb
pop
lret
cld
jnp
int3
sub
cmpsl
mov
sub
pop
sub
xor
pop
cmp
mov
lret
jne,pt
stos
out
addr16
ja
push
adc
fisttpll
inc
jb
daa
inc
jnp
adc
out
repnz
push
roll
in
sub
add
hlt
insl
xchg
sbb
pop
lahf
rcrb
in
adc
xor
xchg
rorb
fs
mov
add
jmp
inc
jl
lock
js
cmp
in
mov
xchg
iret
push
inc
fidivrl
jecxz
test
xlat
pop
insl
sbb
outsb
in
clc
sahf
incb
jae
push
lock
sub
add
fs
jo
loop
mov
inc
in
cli
test
sbb
pop
lock
arpl
mov
cmp
mov
shrb
ret
in
ljmp
mov
mov
or
fadds
aam
lahf
addr16
insl
stos
mov
outsl
mov
inc
cld
xchg
dec
mov
pop
pushl
fildl
popf
cmpsl
mov
add
mov
jno
cmpsl
aad
push
add
inc
and
push
xchg
lds
mov
sti
push
inc
mov
sarl
and
xor
pushf
dec
rcll
aam
rclb
pop
mov
adc
mov
push
dec
stos
lret
push
sub
lods
jo
adc
inc
dec
push
divl
mov
xchg
enter
mov
inc
sarb
mov
inc
jns
aam
sbb
jecxz
lods
pusha
add
lret
jecxz
shll
aas
mov
sbb
sti
jp
inc
ds
mov
shll
dec
adc
les
nop
out
xor
inc
cli
or
mov
push
rcr
in
sub
ret
xor
push
sbbb
sar
jg
addr16
mov
cli
dec
and
shl
movb
jo
in
jl
je
mov
or
lds
fildll
push
imul
jg
pop
mov
fcmovbe
xchg
jle
push
inc
stos
adcl
xor
mov
adc
xchg
inc
push
mov
sbb
push
dec
fld
cmp
push
ja
mov
or
mulb
out
aaa
push
mov
sbb
cmp
in
std
add
daa
popa
aaa
pop
ret
shrl
ret
scas
out
and
stos
stos
pushf
dec
and
add
faddl
dec
hlt
jecxz
pop
insl
inc
inc
ret
inc
push
pop
icebp
xchg
mov
lock
adc
in
enter
test
iret
push
adc
test
data16
in
std
rcl
sarl
sub
rcrl
shl
fiadds
mov
iret
xchg
loopne
fwait
mov
int
adc
add
stos
dec
push
push
loope
fs
xchg
cmp
cmp
ror
mov
in
out
fcoms
in
push
cmp
pop
popf
outsl
xor
xchg
fcoms
add
mov
repnz
jb
mov
mov
cmp
pop
add
push
pop
shl
test
lahf
call
loop
insb
in
xchg
jle
pop
js
imul
inc
push
aam
mov
ljmp
dec
bound
js
cmp
add
cmc
lds
icebp
sbb
ret
arpl
mov
and
in
and
fdivl
pushf
fsubl
popf
xor
fcomps
push
lahf
cmpl
mov
popa
mov
add
in
push
dec
push
lea
inc
aad
adc
mov
jl
imul
sub
push
mov
sub
mov
xchg
mov
jns
push
xchg
sbb
in
adc
lret
cli
and
movsl
or
mov
mov
pop
int3
fldcw
lods
and
lds
out
pusha
aaa
icebp
push
xor
pusha
push
fstps
jo
sub
xor
sub
aas
ljmp
cmp
ret
and
std
ja
je
jno
shll
js
sub
stc
add
shrb
aaa
jne
insb
ljmp
vpsllw
ljmp
mov
stos
mov
mov
mov
mov
inc
sahf
in
ja
and
pusha
mov
rcrl
push
or
addr16
ret
xchg
cmp
sub
ficomps
jg
dec
je
sub
mov
mov
fists
jl
loope
notl
mov
shlb
dec
test
movsl
loope
mov
cmpsl
add
jno
jne
cmp
shrb
push
fcmovnbe
mov
outsl
clc
lret
xor
and
lret
clc
outsl
xor
std
add
mov
cmp
sub
sub
sbb
repz
or
sbb
inc
pop
lods
cmpsb
shr
mov
sar
ret
fisttps
sahf
cld
mov
dec
bound
and
aam
stos
ret
fmuls
gs
test
addr16
int3
pop
in
pop
sub
lret
les
pop
idivb
sbb
out
out
imul
ss
push
cmp
mov
xchg
cmp
adc
popf
cmpsb
enter
loope
push
out
pop
ja
mov
and
out
out
cmp
fsubs
cmpsl
ret
out
mov
popf
xchg
dec
xchg
addr16
enter
out
sbbb
comiss
dec
fucomip
adc
fcompl
das
jns
int
adc
xchg
push
std
sbb
ret
lret
mov
ret
lcall
mov
gs
stos
or
cld
inc
cmp
sub
dec
rorl
outsl
cmp
cmp
jbe
sub
ficomps
shrb
shlb
lods
dec
enter
jb
mov
sbb
fsubl
push
or
int
enter
in
insb
shrb
mov
inc
sbbl
out
ror
jge
enter
adc
test
orl
out
pop
and
or
repnz
mov
cwtl
inc
fidivrs
lods
push
cmpsl
push
jge
lret
lds
lea
jo
subl
xchg
pop
divb
sti
add
pop
cld
xchg
idivb
mov
int3
mov
and
sahf
lea
test
mov
cmp
mov
mov
hlt
xor
insl
icebp
in
mov
js
jmp
sbb
and
mov
movsl
sbbb
pop
por
xlat
in
mov
mov
dec
push
cmp
pop
test
or
jbe
pop
cmp
hlt
pop
leave
fnstcw
and
lock
jg
imul
mov
xchg
pop
rclb
push
push
cltd
push
cmp
mov
mov
push
and
int
inc
mov
dec
mov
les
inc
test
data16
subl
dec
insb
xchg
push
mov
and
pushl
cld
iret
jge
jb
popf
pop
xchg
xor
out
jecxz
call
push
push
jle
dec
test
cmpsb
dec
mov
push
push
ds
call
xchg
mov
pop
std
call
in
push
adc
add
lret
adc
outsl
cmp
sti
cmp
cld
and
add
arpl
decb
daa
popa
inc
cld
aaa
inc
lds
in
icebp
rcrl
scas
lods
cmp
lock
fdivrl
inc
xchg
xchg
imul
incb
inc
clc
jl
les
inc
shlb
outsb
dec
add
shlb
enter
std
sub
xchg
adc
pop
add
insl
mov
nop
inc
jae
pop
jp
dec
aad
sbb
lds
sbb
insb
mov
pusha
fs
aad
fucom
cltd
fbld
fdiv
push
test
hlt
and
repz
ljmp
inc
and
xchg
inc
int
mov
cmp
popf
or
rcrb
out
pushf
call
fistps
repz
pusha
rcrl
test
add
push
fldt
jnp
out
push
aaa
push
loope
jmp
in
cmp
sarl
lahf
leave
movsl
out
push
ja
cmp
inc
ret
inc
xchg
jp
and
cmc
adc
nop
dec
insl
xchg
ljmp
pop
mov
pop
jnp
fiadds
cmp
aaa
cmp
inc
jnp
repnz
je
gs
mov
subb
fwait
ret
xor
add
pop
lret
cli
lock
pop
mov
pusha
push
inc
pop
mov
jge
jae
jle
pushf
daa
inc
loopne
das
jp
andl
loop
pop
sbb
and
jnp
fmuls
movsl
imul
add
insb
dec
push
pop
inc
sbb
push
sbb
push
rcrl
lret
hlt
shl
adc
xchg
rcrb
test
lods
add
or
mov
xchg
in
arpl
out
popa
mov
and
jp
aaa
push
mov
js
pusha
pop
imul
push
repz
dec
dec
pop
je
shrl
ds
movsl
repz
add
insl
and
xor
and
cwtl
sub
mov
cmp
mov
dec
sbb
fsubs
lret
mov
push
mov
mov
jle
shl
cli
and
sub
sbb
mov
les
or
and
add
xor
jb
cmp
pusha
out
push
lds
out
jl
fisttpll
mov
dec
out
adc
loopne
cli
mov
loopne
lret
push
insb
rol
dec
mov
into
push
enter
push
lahf
shlb
outsb
arpl
les
xchg
mov
fs
rorb
repz
stc
dec
jno
mov
ret
lret
cmc
loopne
outsb
xchg
sub
mov
jp
sti
jge
jo
mov
mov
mov
pusha
test
daa
imul
pop
cs
inc
loope
stc
adc
jle
imul
or
sub
jecxz
outsl
outsl
pop
and
mov
and
add
lret
popf
sub
adc
gs
sbb
ret
rcrl
sub
adc
test
in
mov
xchg
jle
push
in
jecxz
and
dec
mov
push
shll
fisubrl
pushl
add
push
mov
inc
mov
mov
jne
mov
lret
sub
push
fucom
adc
leave
adc
jge
sbb
ss
xor
sub
mov
in
mov
addr16
stc
mov
jb
adc
lahf
frstor
xor
ret
inc
scas
enter
int3
js
inc
sub
stos
icebp
jmp
in
pusha
adc
xor
ret
or
xchg
daa
repz
sub
test
mov
mov
das
add
aad
fsubrs
cmpsb
js
jl
pusha
icebp
or
in
push
daa
mov
fdivs
dec
sarb
fdivs
mov
test
addb
inc
jp
jge
repnz
push
leave
adc
fdivr
cs
xchg
pop
jg
push
fiadds
mov
push
sbb
jp
out
xchg
pop
mov
fsubrl
in
adc
xchg
fucomi
stos
sub
dec
call
mov
loop
movsl
ja
jp
inc
rorl
mov
sub
sub
insl
sarb
xchg
addr16
hlt
shlb
pop
ljmp
inc
gs
sarl
outsb
insb
popf
outsl
leave
push
xor
xchg
fistl
and
pushf
push
add
adc
cltd
cmpsb
dec
xlat
in
les
pop
inc
or
flds
loop
in
mov
mov
fstpl
mov
shlb
and
and
pop
sahf
mov
push
cmc
lock
mov
sbb
mov
mov
test
mov
mov
or
out
mov
ja
ret
call
mov
mov
and
cmpsb
jl
mov
loopne
mov
mov
das
xchg
shl
movsl
jnp
stc
lock
fdivl
clc
and
mov
sbb
xchg
ds
test
sahf
jecxz
inc
sbb
inc
push
push
lock
icebp
cmc
add
push
mov
jge
ffreep
add
repz
mov
xorl
enter
mov
pusha
popa
gs
sub
mov
int3
adcb
lret
or
testb
inc
lret
cmpsl
int3
clc
orb
dec
mov
pop
mov
lahf
fbld
mov
movsb
ss
icebp
pop
test
in
inc
rcrl
push
mov
dec
pop
push
jecxz
mov
pop
mov
out
push
popa
pushf
sti
mov
add
cs
pusha
mov
inc
mov
es
repnz
add
daa
mov
stos
sub
cltd
pop
xchg
add
pop
push
jb
in
loop
and
es
into
out
mov
mov
sbb
sub
sbb
xor
sarb
nop
xchg
mov
iret
cmp
mov
pusha
sbbb
cli
filds
fimull
imul
incb
jle
inc
daa
lock
jmp
push
dec
ret
ljmp
mov
pop
mov
or
ljmp
test
adc
pop
xor
push
repnz
pushf
jmp
dec
sub
pop
in
out
cmp
and
icebp
and
insb
sbb
imulb
imul
xchg
inc
rcll
push
push
mov
outsl
into
mov
pop
pop
pop
insb
xchg
mov
push
jge
aas
hlt
add
mov
cmp
mov
aad
mov
repz
out
xchg
sahf
xchg
mov
push
lock
inc
sub
mov
arpl
jmp
add
outsb
arpl
dec
aad
loopne
pop
cltd
lcall
mov
in
ja
mov
std
inc
jne
js
push
sti
push
fbld
pop
push
adc
cld
lret
xchg
bound
outsb
sbb
push
push
fwait
inc
jp
sub
ret
xor
push
jge
mov
add
into
push
push
push
adc
mov
test
jecxz
dec
in
xchg
sub
inc
xor
fistps
bound
out
mov
fisttpll
lds
lret
and
xchg
adc
and
dec
arpl
push
pusha
bndstx
mov
std
sub
xchg
pop
mov
adc
sbb
test
jp
mov
mov
cli
gs
lods
push
imul
bound
sbb
cmc
sti
je
mov
sbb
xor
daa
and
andb
popf
dec
mov
adc
xchg
lods
and
ret
dec
ja
cli
sub
and
pop
notl
xor
add
rcrb
fidivl
movsb
negb
mov
mov
inc
sub
and
push
mov
sbbl
pop
stos
push
sub
fs
movsl
bound
stos
sub
repnz
enter
mov
cmp
jns
cmp
sub
mov
mulb
gs
pop
mov
or
imul
or
adc
cmp
stc
mov
ret
cwtl
push
scas
insb
cwtl
pop
mov
sbb
stos
in
xchg
ljmp
mov
cmp
into
fdivs
and
mov
add
ljmp
movsb
push
daa
repnz
popa
mov
sub
imul
jmp
lcall
and
subb
jb
lods
in
cs
sahf
in
rorl
pop
sub
outsl
add
push
xor
mov
push
dec
xor
sti
jmp
mov
test
stc
divl
pusha
dec
xchg
aad
das
cmpsb
dec
and
faddl
push
sbb
and
xlat
fincstp
lret
inc
push
lock
add
lcall
jecxz
rol
or
data16
xchg
out
or
stos
call
vcvttsd2si
arpl
add
jle
jmp
jmp
inc
aad
psrld
js
leave
xor
hlt
insb
jmp
std
mov
lock
hlt
sub
pop
call
hlt
pop
fmuls
lds
negb
outsl
mov
adc
dec
pop
getsec
icebp
shlb
cmc
mov
repz
push
filds
lods
loop
loopne
mov
rcrl
rcrb
mov
aaa
lret
ficomps
and
mov
clc
pop
imul
pop
out
enter
das
mov
movsl
iret
and
cltd
jecxz
jecxz
inc
mov
xor
mov
add
mov
lahf
arpl
cmp
xor
fisubrs
repnz
mov
cmp
mov
and
cld
addr16
lock
dec
faddl
xor
push
test
mov
cli
jns
std
lods
pop
sti
and
fidivrs
enter
mov
call
repnz
and
sub
mov
f2xm1
jp
lods
bound
es
cs
insb
dec
and
into
and
pop
adc
adc
pop
xchg
daa
popf
ficoms
mov
pusha
ret
aam
push
repz
icebp
dec
mov
push
scas
fsubr
addr16
sub
xor
push
into
mov
rep
dec
ds
jo
loop
adc
enter
or
xchg
clc
jecxz
add
pusha
imul
mov
mov
ja
sahf
loop
insb
into
inc
xchg
xor
sbb
clc
int3
test
push
mov
lods
dec
mov
inc
sqrtps
insl
xchg
mov
imul
xor
pushf
cld
sub
out
aam
lcall
loop
mov
lds
movsb
jle
sbb
sub
int3
adcb
or
jmp
pop
clc
jl
adc
and
movsl
sbb
js
sahf
and
cmpsb
pop
inc
pop
push
arpl
mov
mov
sub
or
ljmp
das
fs
lds
cmp
fsubrs
fwait
mov
rorl
jge
adc
shlb
ret
fdivr
out
add
lea
outsb
adc
test
in
pop
addb
mov
mov
out
sarl
fldcw
jne
push
stc
sbb
out
data16
mov
mov
test
xchg
jl
push
dec
and
xchg
pop
sti
enter
xor
or
or
cmp
xchg
xor
sub
leave
es
leave
cld
lock
inc
mov
mov
dec
or
nop
pop
jbe
std
mov
les
invlpg
daa
shl
loope
mov
dec
fwait
mov
stc
mov
ds
sbbb
sbb
add
insl
push
stc
aad
xor
in
mov
jl
sbb
out
adc
xorb
call
scas
loop
inc
jno
arpl
pusha
scas
les
mov
xchg
mov
int3
jnp
ja
xchg
or
out
outsl
cs
mov
mov
addr16
push
lock
adc
pusha
js
push
xchg
out
jne
or
test
stc
sbb
and
popf
jle
sub
sbb
mov
fadds
jbe
in
mov
push
mov
das
lock
xchg
ljmp
cli
push
pusha
add
rclb
fdivrp
into
dec
jle
loop,pn
insl
or
pop
jle
in
stc
cmpsb
push
cs
imull
dec
ja
addb
data16
imul
jmp
cmpsl
pop
dec
ds
nop
add
gs
sbb
cmc
shlb
push
scas
loope
scas
adc
cmp
jno
cmp
mov
mov
dec
mov
add
gs
cmp
fisubs
push
mov
jae
test
pop
test
xor
mov
dec
xchg
pop
test
imul
push
jae
adc
inc
jne
dec
cmp
push
push
data16
in
fcoms
dec
ds
loop
outsl
sbb
fcoml
dec
out
js
pop
push
mov
jmp
inc
stos
data16
jecxz
leave
call
je
mov
push
cmp
lahf
loop
mov
cmpsl
cmp
js
inc
adc
xchg
inc
out
push
hlt
and
aaa
jnp
mov
mov
test
ss
lods
sar
push
xchg
and
or
xchg
cmp
and
adcb
rcrl
xchg
inc
dec
scas
xor
mov
nop
jle
jmp
pushfw
lods
and
xor
sbb
jmp
in
stc
add
xor
cmpsb
mov
mov
ret
nop
das
arpl
push
push
repz
pop
loop
leave
and
out
dec
addr16
xchg
stc
mov
sub
lret
dec
mov
jne
leave
mov
pop
xchg
mov
pusha
adc
xchg
jbe
jp,pt
xchg
mov
loopne
pop
cli
scas
pop
jae
pop
lds
pop
fwait
ret
mov
stos
lret
negb
push
leave
mov
mov
movsl
lar
dec
scas
sub
scas
and
push
add
cmp
pop
stos
xor
sahf
in
shrb
pop
xor
lret
push
adc
cmc
out
cmp
pop
add
or
das
pop
stos
jl
xchg
cltd
jmp
xor
rcrb
repnz
addr16
jae
popa
pop
push
sbb
in
and
jg
jp
pushf
sub
dec
in
rclb
push
loop
into
lea
push
push
jns
mov
xchg
and
mov
add
add
out
js
cli
cmp
and
adc
ror
roll
sar
stos
in
imul
sub
adc
ja
sbb
lds
sbb
push
mov
enter
pop
shr
pop
enter
fadds
mov
lret
cmp
popa
out
shll
xchg
dec
mov
rcll
test
testb
xchg
push
jp
sub
jno
repz
call
filds
and
stos
imul
pop
inc
and
xchg
and
std
mov
faddl
xchg
and
sahf
test
pop
test
adc
add
mov
pop
sti
lret
pop
lods
mov
cmp
pusha
mov
fisubrl
jmp
add
jp
or
xbegin
sti
pushf
shl
xor
je
lret
mov
pop
sbb
cmp
int
inc
add
pop
or
iret
repnz
push
push
out
mov
test
xchg
add
xchg
push
call
out
mov
pop
popa
pushf
mov
ficoms
aaa
mov
test
xchg
bnd
jo
push
cmp
fisubs
data16
sbb
xchg
pusha
push
stos
imul
scas
test
mov
leave
repnz
jl
int3
sub
lods
popa
ljmp
xor
js
clc
cmpsl
cmpsb
mov
jbe
ds
stos
sbb
cld
or
lea
in
jno
int3
movsb
icebp
cld
fsubrs
lods
xchg
shrl
int3
jns
xor
mov
daa
stos
jnp
stos
fs
jb
jecxz
sbb
adc
in
aad
lds
lret
push
pop
sbb
pop
jle
push
jbe
pop
push
shl
mov
mov
push
lods
lahf
data16
push
movsb
out
jne
cmp
cli
out
mov
add
add
and
mov
pop
mov
push
les
outsl
inc
shl
push
cmp
outsb
pop
jmp
pop
cli
fdivrs
push
xchg
sub
and
xchg
ljmp
mov
inc
lock
inc
enter
push
xchg
fdivrl
mov
sbb
popa
cmpsb
sbb
js
das
div
push
push
dec
jbe
negl
jo
lcall
sbb
pushf
out
xchg
fdivrl
les
xchg
pushf
push
imul
ja
xorl
sbb
sarl
les
in
shlb
filds
cli
clc
pop
loope
ret
adc
dec
rcl
daa
jp
pop
lods
adc
pop
sub
loopne
sub
in
test
xchg
pop
mov
iret
lahf
mov
cld
int
aad
test
dec
dec
lret
push
popa
mov
imulb
mov
ds
ret
jl
testl
pop
dec
repnz
inc
fsubl
pop
and
clc
fmul
fidivl
stc
cmpsl
sbb
and
mov
sub
pushf
mov
xor
lret
in
cli
or
in
orb
pop
or
adc
dec
pop
cmpsl
xchg
mov
inc
jp
jo
pop
jnp
pop
sar
mov
jecxz
add
out
in
or
call
out
jo
into
or
add
mov
sub
cmp
sbb
pusha
add
mov
movsl
xchg
adc
rcrb
jge
mov
lock
sub
mov
das
mov
add
jo
test
push
pop
enter
jmp
aas
stos
jb
lods
imul
testl
adc
dec
jp
repz
push
call
push
inc
cmp
jb
aad
push
ss
es
cmp
cmp
mov
mov
mov
ret
add
add
add
adc
mov
insb
adc
sbb
inc
lahf
jnp
out
mov
push
fsubl
lock
movsbl
outsl
daa
jl
push
cmp
sub
lret
sbb
test
adc
xlat
dec
subb
mov
cmpsb
inc
jg
mov
push
outsb
push
add
jo
hlt
push
or
imul
ds
loope
add
fnstenv
ljmp
iret
daa
jno
div
repz
js
insb
pop
test
xchg
add
int3
pop
push
mov
inc
mov
orb
jae
into
xor
jno
call
sti
jg
fists
mov
in
jmp
jge
xchg
enter
mov
mov
popa
inc
in
into
mov
jns
sub
push
mov
jnp
mov
jne
or
pushf
jmp
mov
mov
dec
lock
lods
pop
jge
out
push
mov
fmuls
xchg
cli
enter
rol
insl
sub
jae
mov
push
sub
mov
xlat
sbb
jns
mov
push
inc
pop
decl
adc
ret
or
ret
cltd
into
roll
add
call
incb
es
xor
not
push
sub
gs
je
xchg
xchg
je
jbe
lret
in
js
sub
outsb
lea
inc
repz
aam
push
ret
test
call
jae
mov
mov
out
push
xor
rcll
aam
outsb
idiv
cmpl
push
aaa
push
mov
xor
cmpsl
sbb
xor
xor
faddl
cld
ret
in
insb
jo
test
shlb
mov
and
mov
cmp
lret
hlt
xchg
jl
stc
je
sub
faddp
std
or
dec
ror
sub
lods
icebp
ss
leave
jg
push
and
mov
out
mov
js
mov
pop
add
stos
pop
sub
pop
push
cmp
lret
pop
insb
cmpsb
lahf
push
jne
fwait
and
div
inc
movsl
inc
jo
adc
push
mov
xor
out
data16
mov
and
push
in
fistl
int3
mov
push
pop
into
inc
sub
test
xchg
cmpsb
push
arpl
sub
xchg
and
ja
fiadds
scas
leave
les
test
scas
pop
frstor
fstps
and
xor
adc
out
out
pop
push
push
jbe
loopne
push
jns
mov
repnz
mov
push
mov
test
addr16
rol
and
cmp
fsubrs
jmp
lods
fmuls
sbb
jbe
xchg
dec
loop
mov
clc
arpl
mov
fidivrl
mul
bound
adc
mov
in
aaa
das
sarl
adc
add
jg
in
push
mov
movsb
fstpt
and
pop
inc
mov
repz
push
insb
cmpsb
mov
repnz
in
fucomi
fcmovnb
test
sub
cmpb
sbb
add
jne
jo
add
pop
jp
cmp
mov
repz
enter
push
pop
jno
cld
dec
test
and
cld
int
xchg
test
test
cmp
popa
mov
jmp
mov
fwait
insb
out
data16
cs
cs
push
repz
pop
in
orl
add
mov
mov
push
in
inc
js
shll
in
not
jp
pop
in
mov
cmc
insb
jno
jns
cltd
push
mov
mov
cli
sub
sbb
out
fdiv
sub
out
lods
cmc
cmp
adc
xor
call
fistps
cmc
inc
xor
mov
sbb
mov
dec
adc
in
jecxz
out
adc
ret
lods
fdivr
mov
sub
xchg
add
dec
inc
sbb
mov
ja
xchg
add
in
xchg
inc
das
arpl
enter
add
fdivrs
fwait
adc
mov
ret
dec
loope
in
mov
xchg
stos
xchg
mulb
test
stos
xchg
adc
hlt
adc
test
clc
pop
arpl
enter
inc
push
dec
xchg
ljmp
mov
push
sbb
xor
lret
iret
mov
enter
jbe
mov
es
sub
pusha
psllw
push
mov
mov
mov
fs
addr16
test
nop
cs
subb
adc
popf
jl
aaa
push
ret
lahf
fs
sub
mov
rcrb
inc
outsb
in
imul
and
sbb
les
clc
xor
jbe
leave
cmp
out
push
clc
sub
jg
and
pop
xchg
mov
enter
xchg
out
insb
adc
bound
mov
mov
inc
lods
shl
jg
or
mov
hlt
xchg
jo
mov
test
or
jg
ficoml
lock
test
pop
loop
cmp
es
mov
nop
xchg
aam
incb
xor
outsl
or
sahf
stos
xchg
lret
mov
ds
cmpsb
lahf
jns
and
inc
ret
js
rcll
cli
lock
cld
js
movsb
test
or
pop
cmpb
and
hlt
or
loopne
jp
out
or
mov
sub
jl
outsb
es
gs
fstpl
sub
mov
xchg
jmp
shll
dec
fildll
movsl
add
push
mov
lock
sbb
pop
mov
dec
xchg
je
cmp
push
stos
sbbb
add
inc
jecxz
shll
ret
xchg
jecxz
leave
add
sar
jmp
cli
sub
push
stos
jo
xchg
pop
cmc
xchg
cmp
lods
lret
ss
sub
out
div
mov
and
pop
bound
push
and
cli
sarb
lcall
or
pushf
cmpsl
mov
xor
cwtl
fs
ss
dec
pop
cli
test
inc
icebp
ss
out
add
xchg
popa
mov
push
sub
sti
stos
push
rcrl
mov
lcall
cmpsb
pop
push
pop
jnp
mov
pushf
pushw
mov
icebp
xor
idivl
mov
lret
adc
mov
fsubrl
loope
popa
adcl
data16
push
cmpsl
mov
incl
dec
fcoml
shrb
imul
mov
mov
mov
loope
shlb
jecxz
das
and
andb
cmpsb
xor
daa
jmp
out
fstpl
jmp
xchg
ret
sahf
ret
hlt
out
adc
mov
add
push
in
mov
in
test
movsb
add
into
add
popa
sub
jp
stos
jns
enter
loope
shll
stos
stos
rcll
movsb
and
pop
mov
aad
ljmp
mov
xlat
dec
sbb
or
pop
push
arpl
fcmovnb
pusha
pusha
in
fcmovbe
mov
push
push
repnz
xor
xchg
and
adc
dec
fcmove
mov
orl
sbb
cmpsb
push
fimuls
dec
movsl
push
dec
cmp
mov
xchg
mov
jno
pushf
out
test
pop
mov
xchg
pushf
mov
jp
adc
in
popa
push
imul
cmpsb
mov
dec
jp
adc
lock
inc
push
jo
lret
sbb
int3
sahf
aad
sub
mov
jne
push
adc
in
enter
test
mov
mov
jl
push
mov
jecxz
and
xchg
mov
mov
add
mov
into
fsubrp
ja
clc
add
popa
es
xchg
imul
hlt
adc
test
out
ljmp
lret
stc
sub
into
mov
shlb
lds
and
jo
ret
cli
jl
inc
movsb
jl
mov
jge
fildl
lcall
sbb
aad
ret
popf
clc
push
and
and
jp
inc
pop
addr16
outsl
imul
aam
cmp
jno
popa
lcall
add
lods
arpl
out
sbb
inc
xchg
pop
arpl
mov
and
jmp
rorl
mov
stos
jnp
sbb
dec
sub
fs
mov
jnp
adc
arpl
and
stos
ficomps
loope
add
notb
push
cwtl
jae
das
mov
mov
cmp
mov
jecxz
sub
inc
pop
jmp
pushf
addb
into
lret
enter
loope
lock
das
pop
sbb
sbb
ret
or
pop
lahf
fstl
jmp
xor
hlt
cwtl
mov
xchg
and
mov
cmovg
jb
sahf
jne
rolb
mov
shrl
cmpl
push
sub
xchg
repz
lahf
out
ficompl
sbb
pop
js
pop
scas
ss
mov
rol
sub
pop
out
mov
sar
hlt
sub
loop
inc
pop
push
mov
jnp
stos
fildl
dec
movsb
sbb
fnstsw
aaa
leave
into
fnstenv
sub
push
add
lds
std
xchg
push
push
loopne
mov
bound
in
fisubs
stos
xchg
adc
cmp
subl
mov
mov
lret
mov
push
cmp
nop
fsubl
test
loopne
inc
lock
enter
pop
adc
cld
mov
cmp
loopne
push
jno
pop
daa
int
pop
ja
or
pop
outsb
decb
push
in
mov
pushfw
andl
pop
jmp
xor
pop
ljmp
pusha
icebp
or
pcmpgtd
mov
mov
push
hlt
data16
repnz
xor
push
jbe
es
mov
sub
stc
fdiv
add
mov
and
dec
cltd
add
fs
outsb
pop
gs
jge
loop
xchg
pop
sahf
pop
mov
dec
xchg
and
and
cmp
cmp
mov
loopne
pop
and
or
jmp
orl
in
push
loopne
mov
pop
and
and
imulb
push
movsb
dec
test
cmp
dec
sbb
sub
and
out
dec
pushf
xlat
pop
sub
test
sub
in
dec
cwtl
out
lahf
leave
mov
sbb
jne
out
sarl
jecxz
push
repz
clc
inc
mov
mov
sbb
jnp
ret
push
fcomip
repnz
cltd
mov
mov
cltd
push
inc
pop
ljmp
fisttpll
test
test
adc
xchg
call
out
xchg
loopne
stc
stos
push
andb
pop
or
out
cmp
inc
out
pusha
dec
mul
add
stos
test
xorb
icebp
adc
jbe
jb
xor
in
and
inc
xchg
je
sub
xor
movsb
jae
push
push
jmp
test
nop
fcoml
sahf
mov
push
leave
lock
mov
icebp
iret
lock
mov
pop
lods
mov
xchg
rcll
sub
cli
test
and
pop
mov
es
pop
cmp
in
mov
and
gs
ret
adc
cmp
or
sbb
mov
stos
loopne
stos
mov
add
mov
cmpl
leave
clc
sub
lret
mov
pop
or
mov
leave
leave
mov
cld
out
mov
and
outsl
stos
lods
insb
mov
mov
xchg
std
lods
push
cwtl
xchg
add
mov
lahf
mov
outsb
into
xchg
lcall
xchg
or
aad
rol
pop
ss
jae
inc
jecxz
mov
mov
push
sub
lock
pop
stos
sti
sub
in
xchg
add
fstl
push
pop
fmul
inc
xchg
jmp
ss
add
cmp
jns
mov
xchg
mov
test
repnz
push
jns
push
sub
xchg
add
call
xchg
jne
es
lds
enter
ds
add
or
cmp
cmpsl
and
jg
push
dec
mov
xor
pop
sub
mov
lret
xor
add
sbb
adc
jmp
xchg
inc
jae
rcll
push
imul
lret
dec
dec
int
rorb
mov
ret
repz
js
cmpsb
dec
push
fisttpll
cmc
cmpsl
sub
mov
or
cmp
or
mov
imul
int
jmp
dec
loopne
mov
setne
mov
cmp
stos
imul
pushf
fsub
scas
mov
daa
faddp
insl
dec
in
push
or
insb
in
insl
in
ret
mov
dec
sbb
xor
loop
mov
and
fwait
cmp
negb
jo
test
ss
push
pop
in
and
mov
aad
and
sbb
das
adc
jnp
mov
add
mov
mov
cmpl
xorl
movsl
sub
mov
or
cmp
xchg
mov
sahf
shr
shlb
fs
inc
int
insb
lods
sti
mov
mov
imul
cmpsl
pop
xchg
push
xorb
mov
add
jns
mov
ljmp
call
call
call
inc
clc
fnstcw
fiaddl
in
in
arpl
call
mov
mov
push
mov
mov
push
and
or
sub
in
inc
ret
cmp
adc
fadds
adc
adc
adc
out
and
popf
mov
cmp
in
inc
fildl
int3
jmp
mov
sub
add
jl
popf
ds
inc
sbb
mov
dec
mov
cmpsb
imulb
test
fbld
shr
push
or
cmp
cmp
or
daa
xorb
test
enter
cmpsb
out
lods
or
arpl
jmp
mov
inc
xor
push
insl
jo
ret
sahf
sbb
lods
pop
leave
xchg
gs
fnstenv
fbld
pop
aas
test
sub
push
and
in
popa
dec
mov
xchg
push
mov
std
jmp
jae
or
xchg
and
sbb
adc
mov
and
or
fmul
out
add
imul
inc
orb
in
pop
aam
scas
xchg
sub
enter
dec
sti
add
mov
dec
or
aad
add
out
fisttpl
cmp
lds
negb
hlt
adc
sub
ljmp
cltd
lods
mov
push
popf
xor
xor
iret
dec
outsb
movsb
loopne
data16
notb
icebp
leave
push
repz
loopne
imul
int3
movsl
jmp
push
fsubl
inc
fcomps
shrb
mov
jb,pn
jle
imulb
icebp
rcr
stc
mov
mov
dec
stc
in
icebp
push
scas
push
mov
cli
mov
push
cmpsb
inc
fs
sar
clc
leave
or
inc
lahf
jmp
iret
cs
outsb
leave
xchg
das
out
in
inc
lahf
call
mov
dec
repnz
push
std
rcl
in
xchg
mov
jge
iret
out
sub
xchg
mov
sbb
clc
xchg
cmpsb
pop
ret
hlt
cmpb
mov
mov
out
aad
fdiv
dec
sbb
xor
lret
sub
outsl
test
add
pop
push
push
jae
sub
fwait
adc
lods
add
mov
lret
fwait
mov
push
lret
mov
sbb
sub
sti
xchg
sub
inc
sub
jae
imul
mov
push
addb
dec
aam
dec
fs
insb
cmc
insb
add
rcrl
mov
hlt
jno
leave
push
in
sbb
arpl
xor
push
fildll
int
pop
cmpsb
fstl
js
arpl
rolb
in
sahf
xchg
mov
cltd
fdivl
add
shr
lahf
sbb
in
popa
pop
pop
jp
or
ds
sbb
inc
stc
ss
dec
bnd
push
ss
add
xlat
enter
inc
push
call
push
xchg
mov
pop
cmp
fmul
ljmp
enter
xchg
sbb
repz
inc
gs
adc
ss
pop
fildll
mov
pop
add
mov
les
pusha
inc
pushf
xchg
xchg
inc
popa
lea
loopne
out
pop
push
in
lahf
inc
js
test
rclb
fs
push
ss
lcall
outsl
pop
bound
insl
je
sub
sarb
inc
shlb
jp
jmp
xchg
aaa
lds
ret
cli
pusha
xchg
sub
mov
pandn
push
or
out
repnz
fs
jmp
mov
xchg
jge
popf
int
sbb
pop
xchg
pop
sti
hlt
aad
jecxz
push
sti
push
inc
int
mov
es
or
xor
icebp
pop
ret
jb
dec
das
subl
inc
arpl
nop
jns
pusha
das
repnz
xchg
xchg
int3
mov
mov
idiv
inc
jle
and
stos
pop
xorl
push
mov
xchg
dec
lds
int
enter
pushf
and
in
pop
add
or
sbb
fmul
adc
sbb
dec
sbb
cmp
pop
rclb
movsl
out
inc
dec
mov
stc
aad
sub
mov
ds
push
jecxz
bound
sbb
popa
mov
pop
dec
mov
xchg
push
push
pop
mov
push
cltd
gs
jle
test
dec
ds
lds
push
cmpsb
ljmp
pusha
mov
add
cmpb
jle
addr16
xchg
sbb
addb
cmp
push
popf
mov
test
and
inc
dec
pop
fistps
fs
mov
inc
add
and
and
jbe
inc
cmpsb
iret
and
mov
inc
mov
sub
scas
pop
imul
loopne
cwtl
add
js
pop
das
push
mov
mov
and
lds
xchg
insl
push
ss
mov
inc
push
or
popf
xor
mov
orb
sub
add
cltd
pop
inc
call
mov
clc
or
pop
jge
push
lcall
push
inc
dec
push
ljmp
lods
repz
pop
xchg
shll
clc
sarl
inc
orl
cli
test
pop
push
arpl
repz
mov
test
mov
pusha
sbb
or
nop
mov
push
mov
sub
fs
jecxz
add
mov
jbe
and
push
nop
or
pusha
xorl
xor
and
fs
pop
jmp
repnz
xchg
mov
hlt
popf
test
pop
fmull
sar
jmp
sub
testb
addl
xor
xor
inc
pop
sahf
test
loopne
push
mov
inc
jg
je
arpl
cmp
je
ja
inc
xchg
je
test
add
xchg
dec
and
aad
mov
jo
add
pop
loop
ret
insb
mov
clc
clc
mov
push
jle,pt
push
les
push
lock
jg
or
call
jae
lret
addl
insb
sahf
roll
mov
jae
imul
sub
push
inc
sub
jl
in
icebp
mov
xor
or
mov
pop
pop
shrb
pop
xchg
nop
cmp
andb
jae
idivl
push
push
adc
subl
int3
cmp
mov
pop
sti
xchg
cli
and
push
lods
mov
push
ljmp
xchg
rcrb
dec
jge
and
data16
iret
adc
add
adc
in
mov
js
mov
std
dec
mov
clc
ret
sub
or
fdivs
jle
jge
xchg
jns
jg
cmp
movsl
sub
icebp
lods
out
jbe
mov
mov
cmpsb
stos
or
mov
xor
lds
lods
push
iret
sarb
shrb
clc
lret
stos
mov
inc
daa
aam
mov
sbb
das
jecxz
sbb
adc
sub
outsl
std
mov
xor
mov
mov
lret
cmp
adcl
adc
jg
cld
pusha
mov
bnd
fs
insb
mov
and
loopne
add
jae
mov
aam
mov
push
xchg
and
movsb
pop
cltd
dec
xchg
mov
mov
or
les
or
fcompl
xorl
rcrb
mov
cld
ds
fisubs
dec
or
rcl
pop
xor
int3
test
outsl
lods
divl
je
ss
lods
and
pusha
lahf
fmull
add
cs
stc
xchg
sub
mov
daa
mov
xor
xor
jno
sub
mov
scas
pop
push
aam
mov
movsl
inc
rol
jb
sub
jmp
cmp
sti
in
pushf
dec
fnstcw
out
sub
enter
pop
clc
inc
xor
sub
lret
adc
and
sub
out
les
insl
dec
mov
push
mov
in
jnp
jle
cltd
cmp
or
fnsave
lcall
pop
xor
pushf
inc
mov
and
add
int3
mov
fnsave
lcall
xchg
mov
dec
and
jecxz
jne
jl
iret
and
jge
sti
jp
sbb
or
add
inc
int
sub
push
jne
xchg
push
imul
xchg
inc
push
lods
lret
lds
adc
dec
push
push
insb
sbb
jg
lods
cwtl
push
gs
imul
mov
pop
mov
xchg
sbb
testl
sti
call
adc
pop
imul
jb
fwait
push
jo
inc
and
cmpsb
push
lcall
and
adc
cwtl
pop
or
je
jno
jne
test
les
and
mov
inc
adc
xchg
xor
jmp
jg
mov
push
jnp
inc
outsl
cmc
jmp
in
xor
arpl
mov
arpl
mov
xchg
mov
lret
cmp
mov
lods
imul
xchg
ret
scas
or
data16
cmp
rolb
fsubrl
fidivs
dec
fcompp
dec
add
jmp
nop
dec
mov
mov
movsl
xchg
xchg
loope
incb
ljmp
xor
or
adc
mov
or
clc
mov
loop
pop
xor
cmpsb
daa
add
data16
adc
push
xor
arpl
lock
add
or
or
xchg
or
es
repnz
leave
adc
or
push
shlb
icebp
and
lock
mov
mov
ficomps
bswap
push
xchg
jle
cwtl
pop
leave
cltd
sbb
jge
scas
push
xchg
and
inc
cmp
data16
lcall
insb
xor
or
push
scas
loop
push
jb
not
sub
xchg
pusha
or
clc
pop
scas
xchg
lret
mov
into
lods
pop
fidivs
sub
rcrb
daa
mov
outsl
out
cmp
insb
cmc
cmp
movsl
push
mov
mov
mov
fsubl
imul
out
mov
cltd
in
mov
sbb
addr16
xchg
je
loop,pt
repz
cltd
ret
rep
dec
dec
or
rcll
pop
mov
popf
dec
leave
add
fucomi
cmc
popf
fistps
or
mov
sub
and
test
stos
enter
push
cmp
mov
daa
dec
stos
push
mov
sar
out
dec
cmc
jne
xchg
sahf
aad
movsb
sub
enter
sbb
sbbb
fs
mov
popw
add
ljmp
mov
repnz
push
mull
and
jmp
dec
enter
push
fisubrs
andb
insb
adc
push
leave
out
mov
adc
xor
lret
mov
jno
in
mov
adc
cli
iret
mov
inc
mov
pop
push
mov
cmp
xchg
rolb
and
cmpsl
dec
cmpsl
push
xor
mov
stos
movsl
push
inc
cmp
stos
lret
adcl
or
dec
xorl
scas
mov
cld
ljmp
sbb
sarl
jmp
cmpsl
add
add
imulb
mov
pop
sarb
faddl
cli
bnd
pop
addr16
ss
icebp
fimuls
psrad
jbe
add
push
inc
push
in
mov
sub
dec
std
test
insl
sarb
sub
mov
xchg
add
mov
xlat
imul
xor
sbb
orb
dec
xchg
popa
inc
xchg
dec
movsb
fadds
push
stos
in
push
xor
fisttps
cmp
push
cmc
maskmovq
negl
sub
cmp
in
cld
in
cmpsb
test
in
and
jg
imul
push
mov
push
cmpsb
lcall
mov
mov
fdivr
loop
cltd
mov
cwtl
in
test
xchg
in
mov
aad
andl
add
scas
jl
jo
insb
lret
jb
mov
mov
cwtl
into
add
mov
mov
pop
sub
enter
pop
fs
rcl
stos
sbb
push
dec
addb
sbb
fbld
pop
xchg
fistl
xchg
mov
test
jo
dec
and
push
cld
jbe
jmp
adcb
inc
repz
mov
mov
adc
int3
imul
arpl
test
out
inc
repnz
loop
insl
leave
loope
cli
jl
cwtl
push
in
mov
pop
cld
out
outsb
pop
pop
shl
dec
daa
mov
cld
mov
repnz
fistl
imul
mov
sbb
scas
pop
das
add
imul
mov
push
dec
mov
outsb
ret
xchg
adc
and
jns
hlt
ficoml
sub
push
xchg
pop
gs
push
insb
mov
xor
in
outsl
add
xor
mov
mov
repnz
cmc
adc
cmp
fmulp
xchg
push
pop
cld
pop
rcr
in
mov
fcmove
push
orb
pushf
mov
aaa
adc
xor
pop
xlat
and
jo
movl
push
jecxz
das
jg
aaa
shrb
jbe
add
es
out
imul
mov
pop
push
push
xor
setge
in
cmp
mov
mov
leave
mov
loop
adc
test
outsl
cmp
mov
lret
stc
mov
les
ds
in
jnp
mov
add
neg
adc
sbb
in
mov
xchg
cmp
jle
cmc
insb
mov
or
fcoms
shlb
les
iret
mov
shrl
outsb
lcall
lods
add
ja
stc
dec
out
push
les
insl
dec
adc
int
mov
callw
in
sbb
push
pop
fstps
insb
adc
jbe
mov
lds
sbb
loopne
pushf
pop
outsb
ss
push
and
int3
pop
add
rcll
add
lret
cmp
push
xchg
icebp
scas
cmp
sub
in
mov
add
push
loop
add
out
ljmp
inc
dec
addr16
pop
cmp
add
gs
call
adc
adc
pusha
add
gs
jl
fs
lahf
xor
sub
iret
and
mov
cs
in
repnz
xor
push
idivb
sub
mov
sbb
ficoms
mov
test
mov
cmpsb
push
and
bound
lahf
ret
mov
inc
cli
fbld
out
pusha
adc
push
lods
shll
cwtl
cmp
popf
mov
data16
sbb
mov
imul
push
lahf
enter
aam
mov
mov
jns
ljmp
shrb
xor
pop
inc
insb
rclb
daa
and
push
adc
mov
jns
mov
sub
roll
mov
out
dec
cmpsb
adc
out
inc
jl
xor
and
push
sti
jmp
mov
addr16
stos
push
mov
xor
sbb
push
or
sbb
mov
cwtl
jle
dec
test
in
cltd
bswap
sub
repnz
sti
movsb
push
jns
mov
mov
inc
push
mov
andb
out
or
pop
cmpsl
jo
xchg
pushf
arpl
pop
fimuls
dec
testl
sbb
xchg
cmp
mov
xchg
mov
or
cmp
das
sub
pushw
fistps
je
lret
xchg
ret
mov
cmpsb
mov
xchg
xchg
dec
push
js
cmp
mov
sbb
sbb
test
rclb
aam
scas
insb
dec
mov
push
call
mov
je
aam
push
fsubp
out
lahf
or
push
lret
ret
jl
jge
cmp
jg
fdivs
mov
enter
dec
mov
into
stc
imulb
jbe
mov
mov
xchg
loope
mov
ret
imul
jo
out
mulb
jg
cli
jle
mov
jb
and
push
sahf
mov
inc
scas
pop
pop
dec
testl
das
xchg
js
or
insb
xchg
mov
and
in
xchg
stos
and
test
fisubl
lock
jo
lcall
and
pop
lea
mov
adc
mov
push
push
adc
int3
js
mov
dec
cli
and
mov
fdivrs
out
dec
adcb
jmp
outsl
out
adc
and
xor
scas
pop
sbb
xchg
arpl
xchg
lea
cmp
je
pop
cltd
push
sub
inc
test
je
mov
les
ljmpw
add
int
jb
decb
mov
cli
aaa
lret
xchg
jo
xchg
ja
loopne
inc
push
mov
addb
mov
out
inc
popf
sbb
sub
lock
sti
das
fnstcw
das
mulps
push
leave
out
test
jmp
mov
ret
or
fcomps
mov
sti
sub
rorb
mov
fs
jnp
arpl
mov
fisttpl
add
xor
outsl
mov
test
je
mov
cmp
xor
jb
sub
jae
sub
cmp
or
ljmp
jmp
push
into
mov
lret
movsb
mov
arpl
sbb
dec
sub
loopne
into
aad
sbb
mov
jns
and
lahf
push
arpl
mov
mov
cmp
fwait
pop
mov
sbb
popf
sbbb
mov
lock
call
lock
push
cwtl
inc
sub
mov
inc
aas
scas
mov
mov
pop
test
cmp
fdivr
lcall
pop
int3
loop
and
aam
jns
cmp
inc
outsb
aaa
outsb
adc
add
sbb
mov
sahf
cli
jecxz
push
icebp
mov
xchg
jae
mov
push
mov
pop
mov
std
xchg
repz
mov
fs
jns
flds
popa
stos
sahf
popa
push
xchg
jp
leave
andl
insb
mov
lods
pavgw
test
mov
clc
jg
repnz
jmp
lret
pusha
out
pop
in
push
sub
mov
jnp
nop
aad
arpl
adc
fildll
and
mov
scas
and
push
sarb
mov
sbb
sub
test
jp
out
push
push
sbb
hlt
aam
adc
lahf
add
orb
push
sar
sub
mov
movsl
adc
lret
pusha
mov
je
shrl
adc
movsl
repz
mov
sti
lds
enter
cwtl
mov
push
shll
or
fiaddl
xchg
repz
lock
cs
dec
or
data16
orb
aam
scas
rolb
sub
jecxz
xchg
sub
jae
into
dec
cmpsb
test
sbb
daa
pushf
cmp
je
adc
jp
push
pop
mov
insl
push
fiadds
cs
call
lods
xchg
int3
test
insl
loopne
mov
jb
jle
insl
stc
jle
cmp
and
xchg
mov
loop
push
xchg
cwtl
out
mov
mov
ljmp
pop
push
shrb
lods
mov
sub
pop
mov
loopne
xor
adc
lcall
les
pop
add
repz
imul
imul
scas
push
sbb
jne
mov
call
inc
pop
ficompl
stc
icebp
mov
loope
leave
and
jb
cmpsl
push
out
les
cmp
test
cmp
lahf
dec
mov
lret
pop
jno
sub
mov
aas
js
dec
add
stos
push
ss
imul
aad
in
push
mov
mov
or
loop
pusha
mov
imul
popf
jecxz
scas
sahf
sahf
stc
add
mov
out
and
pop
mov
and
fcoml
mov
xchg
jmp
leave
popf
pusha
lods
push
mov
sti
and
adc
js
clc
pop
adc
sbb
sbb
xchg
mov
outsb
call
test
movsb
sub
pop
sbb
ds
fs
outsl
xor
mov
add
mov
decl
orb
lret
adc
in
jns
adc
pop
loopne
xchg
les
aam
lret
cmpl
rcrl
sub
insb
and
movsl
cmp
pop
mov
lret
push
sahf
loopne
and
lods
dec
adc
stos
in
out
repnz
test
pop
loop
sahf
out
iret
adc
dec
hlt
fisttpl
aam
pop
aad
out
sbb
test
rol
cs
fwait
xor
cli
pop
and
jae
jnp
cmp
pop
mov
test
aam
sbb
adc
lahf
sbb
cmp
lds
leave
pop
mov
lds
clc
mov
mov
mov
mov
sbbb
jl
stc
cmc
int
mov
fs
xor
or
cs
mov
lahf
push
mov
push
jo
cmp
arpl
and
mov
mov
shrb
and
jb
sahf
popf
add
scas
out
sub
cli
inc
rcrl
aas
xor
insb
xchg
in
lret
mov
shll
sub
mov
add
inc
add
add
pusha
out
push
jbe
lahf
jo
enter
fsubs
and
je
push
daa
hlt
fistps
xchg
inc
and
jnp
stc
outsl
imul
cwtl
imul
popf
cmp
imul
jl
repnz
mov
insb
adcl
dec
leave
mov
push
lret
sarl
xchg
xchg
and
mov
into
loopne
cmc
in
xor
mov
mov
arpl
and
cwtl
mov
mov
xor
pop
insl
aas
pop
sbb
push
cmp
jne
cmpsb
cmpsl
mov
int3
mov
fs
inc
jecxz
bound
push
adc
sbb
dec
in
push
mov
enter
enter
icebp
aaa
pop
cmp
stc
dec
add
mov
in
sbb
xor
aad
sbb
xor
push
lock
mov
inc
ds
sti
popa
cli
push
push
les
xor
fdivrs
in
in
push
pushf
aad
pop
push
fs
lock
int3
call
inc
jmp
lcall
jns
xchg
aas
movsl
subl
push
in
std
mov
dec
out
leave
sbb
mov
jecxz
inc
gs
pusha
les
sub
rorb
lock
jnp
pop
stc
xchg
lret
imul
subb
push
ja
adcb
cmc
call
xor
mov
xchg
sti
stos
pop
movsb
xchg
das
pop
mov
in
cmp
push
nop
pop
bnd
jbe
jbe
sti
es
pop
mov
out
repnz
fs
setg
mov
sti
dec
sti
mov
pusha
inc
gs
imul
stc
pop
jae
mov
mov
xchg
push
adc
sbb
repnz
jnp
aad
mov
bound
pop
sub
xchg
xchg
jge
iret
lahf
test
adc
test
push
add
call
mov
cs
mov
ret
inc
mov
js
jg
adc
aas
and
popf
mov
in
push
out
leave
sbb
mov
repnz
mov
hlt
mov
pushf
fidivrs
fldcw
pop
jp
xchg
scas
mov
add
dec
dec
push
out
mov
subb
jmp
adc
cmp
jle
mov
cmp
int
adc
jmp
insb
enter
insb
mov
cmpsl
sbb
pusha
rcrl
push
xor
rcrb
mov
mov
insl
testl
mov
mov
and
dec
add
lods
inc
dec
xchg
jle
pop
outsb
insl
notb
add
and
fistpl
mov
arpl
dec
jmp
cmp
lds
mov
stos
sub
jo
clc
xchg
fwait
push
xor
mov
aaa
pop
ret
lahf
mov
rclb
inc
sub
mulb
jnp
xor
push
ret
pop
nop
sti
sbb
or
lods
cmp
data16
test
mov
loope
push
and
addr16
push
inc
repz
lock
lods
pop
cli
test
fimull
out
lret
les
jle
pop
fistpll
call
fcoml
sarl
pop
leave
pop
mov
mov
dec
das
jp
cli
jbe
jle
div
sbb
icebp
imul
xor
cmpsb
pop
pop
mov
cmp
outsb
cmpsl
lahf
cld
sub
inc
xchg
inc
rcrb
mov
insl
hlt
fistps
stc
dec
cs
leave
daa
adc
jle
xchg
xor
out
push
sarl
ret
movsb
pop
sbb
push
mov
pop
fcomps
pop
fcmovnbe
gs
jb
mov
and
pusha
lea
icebp
mov
mov
jno
adc
pushf
push
xor
cwtl
int3
repnz
movsb
push
add
das
pop
int3
dec
jno,pn
cmp
fwait
test
xlat
mov
xor
jae
push
movswl
adc
xchg
push
inc
cmc
mov
push
es
out
pop
fs
sub
lcall
adc
std
repnz
pusha
pop
popa
mov
sbb
push
in
mov
mov
fcoml
aam
out
push
and
cld
ficoml
jnp
into
outsl
sbb
cld
es
lock
jl
fcoml
push
adc
jmp
mov
aaa
mov
rorb
dec
test
and
addr16
jnp
lods
push
inc
dec
jae
int
fldenv
in
fmuls
add
xchg
test
fs
cld
mov
jecxz
push
data16
push
cmp
addb
xchg
mov
mov
pop
cmpb
into
push
pop
jb
insl
lcall
dec
pop
pop
cmc
xchg
in
clc
adc
icebp
sub
pop
pop
out
jl
outsl
xchg
and
es
xor
fs
sub
test
push
mov
mov
rclb
lret
movsb
in
xchg
add
pop
lcall
mov
dec
mov
add
inc
rclb
cld
push
inc
lret
jno
xchg
jo
xchg
arpl
or
call
inc
repnz
pop
gs
sub
test
std
sbb
gs
add
dec
push
mov
cmp
push
push
cli
lods
sub
push
add
pop
leave
push
clc
jno
xchg
cmp
iret
aam
icebp
push
push
and
add
xor
xchg
xchg
mov
cwtl
nop
cmpsb
cltd
xor
sahf
push
out
hlt
ret
or
into
add
idiv
hlt
out
cmpsl
push
in
sbb
lods
cltd
mov
sub
nop
push
cwtl
mov
and
cmp
int
enter
inc
movsl
mov
mov
cld
mov
xor
mov
arpl
clc
lret
add
push
lds
fnclex
int3
sub
push
repnz
mov
das
dec
sbb
mull
imul
daa
addr16
imul
push
xchg
arpl
jmp
jg
push
repnz
imull
sbb
pop
xor
fs
mov
or
test
enter
xor
ljmp
test
insb
push
nop
cmpsb
lods
out
inc
fwait
cmp
fidivl
scas
lods
adc
mov
inc
out
lret
rcll
test
pop
xor
inc
add
lds
imul
outsb
in
adc
jl
gs
mov
push
cmpsb
inc
inc
mov
push
repz
cmp
insl
andb
jb
enter
jbe
push
ljmp
xor
in
sbb
adc
inc
adc
mov
xor
push
cmp
jle
das
jmp
loop
pop
xor
fldenv
xorl
call
adc
mov
add
movsl
mov
mov
mov
jmp
shl
std
xchg
pusha
add
xor
sahf
dec
sahf
xchg
mov
fldcw
shrb
out
inc
pop
clc
enter
sub
mov
lahf
mov
cmp
ljmp
fldl2e
ja
icebp
sbb
push
jnp
out
outsl
xchg
xchg
lahf
mov
out
dec
or
out
mov
push
fldcw
or
repnz
ret
ror
cmp
push
sbb
inc
inc
add
mov
mov
lcall
ret
jmp
bound
out
xchg
push
mov
call
jl
push
xchg
cwtl
sti
std
out
cmpsb
insl
scas
jg
ret
add
out
push
sar
xchg
pop
shll
cld
dec
fwait
ror
adc
imul
daa
mov
testl
arpl
push
ljmp
mov
movsb
pop
roll
testl
lds
hlt
mov
xchg
arpl
jae
gs
add
mov
push
or
outsl
ret
out
les
mov
imul
lret
sbb
cmp
and
rolb
or
cmpsb
lret
and
push
nop
adc
cwtl
shr
cmp
insb
or
hlt
icebp
add
in
lret
negb
xchg
and
in
xor
add
push
stos
inc
mov
jnp
insb
push
outsl
out
mov
dec
adc
push
stos
inc
in
or
shrl
mov
call
stos
push
inc
gs
lods
cwtl
idivl
aaa
popa
lcall
loope
inc
scas
dec
mov
and
sar
fwait
sti
sti
ret
pop
dec
sbb
fcoms
sti
xor
leave
inc
gs
dec
out
out
or
sub
pop
test
cwtl
hlt
icebp
mov
add
xor
xor
dec
dec
in
mov
hlt
icebp
into
js
dec
es
jb
or
clc
mov
clc
ja
ret
fdivs
inc
add
pop
or
out
mov
inc
pop
dec
xlat
shrb
push
shlb
ret
push
mov
xchg
cmpsl
dec
leave
sub
mov
bound
hlt
ljmp
fwait
sti
sti
dec
pop
xor
xor
push
or
stc
lods
insl
shlb
scas
fidivrs
add
repnz
cmpsl
popf
cmc
adc
adcb
mov
cld
xchg
loop
sbb
cmpsb
jbe
gs
xor
out
ss
sub
inc
inc
gs
insb
xchg
add
cmp
inc
nop
addr16
sbb
cmp
mov
push
test
aad
dec
cmpsl
mov
or
or
stc
loop
lahf
jp
jp
jns
nop
mov
nop
scas
daa
mov
dec
mov
mov
sahf
andl
pushf
jo
mov
out
dec
xchg
dec
call
imul
int
or
imul
xchg
mov
stc
test
stc
jae
cmpb
incl
int3
cld
sti
mov
pop
add
test
push
js
clc
xor
std
popa
lds
jnp
and
leave
pop
sbb
jecxz
cmp
pop
sub
cs
adc
inc
insl
jmp
mov
jge
mov
js
addr16
test
lahf
sub
mov
daa
push
pop
popa
push
stos
mov
mov
inc
aaa
sub
inc
pop
pop
inc
add
popa
jb
into
jmp
cwtl
das
mov
lds
push
arpl
outsb
icebp
xchg
mov
cmpsl
sub
hlt
inc
mov
imul
pop
sahf
dec
mov
out
fisubrs
rorb
in
push
pusha
pusha
das
iret
testb
push
and
jg
jl
pop
das
lahf
loop
push
inc
mov
mov
xchg
cs
clc
rorl
test
in
jge
inc
xor
xchg
orl
adcl
and
es
addr16
bound
dec
pop
mov
fistps
mov
shrb
or
inc
sub
dec
xchg
out
jbe
jg
cmc
pop
loop
xchg
push
lret
cwtl
cmp
paddsb
shll
repz
dec
or
mov
pop
lahf
es
xchg
xor
jno
mov
jle
pusha
xchg
je
cltd
mov
loop
cmp
push
push
push
ds
lcall
mov
pusha
test
aad
stc
mov
fcomip
jecxz
clc
aaa
stos
push
fadd
mov
cmp
dec
mov
add
subb
cmp
or
cmpsl
mov
lds
xchg
pop
bound
mov
stos
or
mov
iret
fs
fbstp
mov
inc
xchg
mov
mov
mov
insl
repz
imul
dec
mov
and
pop
les
andb
inc
dec
cli
mov
mov
cmpsb
and
sahf
sbb
popf
inc
jb
sbb
xor
pop
jbe
ds
inc
adc
sub
hlt
sahf
sti
jnp
sbbb
mov
jb
jge
jl
xor
out
fisttpll
jecxz
mov
inc
rol
xor
iret
lret
dec
or
xchg
movsl
or
enter
jno
inc
test
insb
push
mov
jb
and
pop
jmp
addr16
aam
clc
adc
pop
cli
mov
jae
les
iret
adc
mov
hlt
sbb
dec
sub
fcmove
shrb
out
fnstenv
mov
jae
arpl
ret
push
jnp
mov
pusha
loop
out
in
push
mov
cmp
push
mov
aad
aaa
lahf
aas
cmp
and
mov
pop
and
push
fcmovne
sti
pushl
out
push
and
inc
out
or
das
std
xchg
testl
inc
lret
jne
xchg
sbb
imul
mov
push
xchg
ds
pop
xchg
push
shr
mov
pop
clc
and
add
jno
cmp
sub
mov
fildll
push
xor
mov
mov
pop
outsl
and
mov
iret
sbb
lods
repnz
jmp
and
inc
and
jb
adc
mov
mov
repnz
std
popa
sbb
adc
clc
iret
test
int3
stos
mov
movsl
ret
ror
jo
movsl
clc
hlt
adc
imul
xchg
adc
aaa
inc
jae
pop
add
addr16
andl
iret
push
push
inc
outsb
loop
jnp
repz
xor
call
cmp
jl
loope
add
mov
stos
push
scas
iret
ljmp
pop
cld
ja
hlt
jecxz
pop
aas
pop
mov
pop
sahf
sarl
mov
xchg
jnp
sti
jns
in
insb
pop
and
movsb
mov
loop,pt
add
test
pop
mov
sbb
mov
ret
sbb
stos
repnz
mov
daa
add
xchg
jmp
fwait
jmp
loope
notb
in
testb
cli
jecxz
mov
adc
inc
movsb
roll
adc
subl
pushf
push
mull
adcl
icebp
pop
push
xor
mov
les
clc
inc
xor
sbb
inc
cmc
mov
dec
xchg
aas
das
sub
jp
pushf
fadd
aam
movb
std
inc
adc
mov
xchg
lret
cmc
push
or
lock
cs
jge
mov
pusha
mov
mov
pop
fcoms
pop
movsl
popa
bound
pop
popf
aam
sbb
xor
pop
push
aaa
ja
cmpsl
aad
fistpl
out
or
sbb
xor
xchg
cmp
pop
add
adc
and
dec
xchg
xor
repz
adc
or
bound
push
out
cmp
decl
adc
fadds
rcrb
dec
dec
adc
sbb
fpatan
sarl
call
aam
es
stos
jmp
jg
movsb
mov
xchg
dec
shrb
dec
pushl
into
loop
test
inc
mov
stc
loop
es
add
icebp
je
mov
or
sbb
push
call
adc
cmp
add
into
mov
cltd
daa
adc
dec
push
js
lock
jp
std
loop
mov
jbe
test
push
popf
jno
ss
cmpsb
adc
cmp
nop
daa
jo
inc
sbb
pop
loopne
jns
cmp
lods
jne
shl
fisttpll
push
and
loop
and
push
es
cmp
fnsave
cs
clc
pop
xchg
out
mov
sub
out
mov
test
xchg
xchg
movsb
out
xchg
jo
inc
xchg
cs
xchg
pushf
js
xchg
js
inc
call
mov
fcoml
or
icebp
clc
insb
dec
sub
jle
sarl
mov
pop
rcl
mov
xchg
push
out
iret
mov
mov
out
xchg
gs
xor
loop
xor
movsb
sti
or
pop
out
hlt
inc
fsub
push
adc
xchg
xor
aam
xchg
rolb
inc
or
pop
inc
or
xor
movsb
es
orl
scas
sub
lret
sbb
mov
stos
adc
sahf
mov
xchg
shrl
das
mov
leave
mov
daa
xchg
mov
mov
js
push
lock
inc
testl
jecxz
cmp
stc
jno
or
jmp
test
int
pop
cld
loope
stos
sub
pop
lods
insl
jmp
and
ja
jl
sbb
mov
fistl
stos
cmpl
test
and
pop
jl
sbb
push
adc
das
xor
ret
call
fprem1
enter
jbe
mov
scas
jno
testl
add
add
mov
aas
push
fildll
jo
insb
mov
mov
or
jb,pn
das
ss
push
cld
push
cltd
aas
adcb
movsb
cmp
sti
popa
and
mov
icebp
loop
cmp
pop
data16
aam
and
xchg
insb
es
sahf
push
aas
add
mov
pushf
nop
push
jmp
xchg
jb
mov
xchg
jmp
arpl
and
jmp
rol
fwait
aam
fsubs
call
popf
int3
adc
push
mov
jp
jb
mov
inc
scas
add
xchg
pop
push
das
xchg
test
iret
sbb
jne
scas
pop
aam
jecxz
jns
cmpl
xchg
mov
and
lds
adc
rorb
push
jns
outsb
and
xor
cmp
test
and
push
pop
mov
call
rorl
xor
push
pop
mov
mov
push
and
mov
outsb
cmpsb
adc
dec
dec
mov
jl
rcrl
nop
push
jno
cltd
std
mov
pop
xorb
xchg
or
adc
iret
jp
sub
mov
popa
stc
enter
sub
jno
jl
fs
push
push
pop
pop
xor
cld
inc
pop
sbb
add
pop
push
out
adcb
leave
xchg
cmp
jnp
inc
subl
pop
outsl
mov
add
sbb
mov
mov
pusha
pop
repz
mov
inc
push
insb
sub
pusha
xor
movsl
and
pushf
mov
ret
or
cs
jmp
mov
cli
cs
in
xor
push
jecxz
add
push
cmp
fstl
and
hlt
mov
mov
add
mov
dec
or
mov
mov
les
xchg
mov
es
repz
sub
inc
mov
lret
loope
or
negb
inc
es
inc
or
and
ffree
popa
fld
xchg
adc
jns
ror
sbb
mov
fs
mov
in
xchg
pop
mov
enter
ror
cli
call
xchg
popf
lds
add
aam
mov
int3
repnz
push
dec
and
dec
push
cmpsl
push
jle
adc
jbe
out
or
push
movsb
in
imul
mov
into
adc
cmp
xchg
ret
mov
pop
add
orl
cltd
jecxz
or
ds
push
out
sbb
divb
or
repz
jmp
in
repz
pop
xlat
rcrb
xchg
xchg
mov
mov
addb
mov
push
test
mov
mov
xchg
sub
xorb
je
inc
add
sub
push
js
adc
popf
cld
jmp
ljmp
mov
lret
pop
mov
adc
add
sbb
or
inc
push
lret
gs
movsb
pop
pcmpeqb
jns
test
pushl
or
loopne
mov
mov
push
mov
cmp
mov
shrb
add
inc
pop
xchg
test
repnz
push
mov
dec
lcall
mov
shl
insl
add
mov
ja
lods
pushf
jg
or
inc
pusha
fs
test
setae
mov
outsb
mov
aas
jbe
mov
mov
fdiv
test
mov
ja
enter
lock
bound
inc
lret
or
pusha
and
xchg
stos
xchg
mov
out
or
aas
inc
lods
mov
int
adc
mov
add
test
or
add
stos
push
outsl
xor
mov
xchg
repnz
lret
sarl
fwait
xor
adc
popa
push
aaa
stos
fucomi
mov
xchg
out
repnz
loopne
mov
fistpll
movsl
iret
enter
jbe
sbb
mov
loopne
lods
xlat
and
mov
adcb
add
push
mov
rcl
rorb
cmp
sub
jecxz
pop
enter
xlat
xor
cli
icebp
mov
es
cwtl
insb
pop
mov
mov
dec
lods
call
es
pop
fsub
and
dec
lahf
inc
int3
in
xor
loope
lock
or
mov
lds
mov
sbb
aas
insl
push
mov
cwtl
shrl
jle
addr16
and
push
sbb
iret
inc
sti
dec
loop
adc
dec
insl
mov
js
push
jg
movsb
leave
stos
cli
call
mov
nop
push
cli
adc
icebp
imul
dec
je
cmc
insl
cmpsl
cld
add
ds
filds
lahf
mov
mov
shrl
cmpsw
or
mov
test
cmpsb
push
mov
xchg
pop
fstpl
add
lock
sar
push
negb
xchg
repz
and
pop
test
loope
call
push
ret
divb
insl
push
inc
test
mov
in
mov
pop
fnsave
mov
xor
aam
loope
into
add
in
bound
jb
mov
pop
int3
ja
outsl
jbe
pop
stos
jl
and
xlat
mov
xchg
xchg
dec
cli
cmp
pop
sub
adc
in
out
loopne
push
ret
xchg
xchg
test
jne
stos
pop
and
and
js
jmp
mov
sti
push
sbb
iret
sub
sbb
jnp
subl
lcall
xor
xchg
push
fnstenv
mov
xor
push
and
sub
mov
loope
std
icebp
mov
sbb
sbb
dec
outsl
sbb
pop
jno
sub
add
sbb
jmp
pop
mov
scas
cli
loope
sbb
fadds
jmp
xorl
fcoml
outsb
dec
xchg
jecxz
les
jb
add
mov
mov
in
mov
in
cmp
aas
dec
loope
pop
xchg
add
nop
pop
out
cltd
mov
rcll
out
ljmp
or
outsb
mov
std
and
cs
sub
cmp
xor
cld
outsb
mov
xchg
pop
insl
adc
add
and
lds
jge
jmp
lahf
jecxz
jbe
sub
ret
ret
outsb
lret
fsubs
sbb
iret
or
sahf
icebp
cmp
and
cld
adc
andb
paddsb
sbb
arpl
jb
ss
subl
insb
push
es
ljmp
fnsave
in
xchg
mov
sub
popf
mov
sbb
push
push
mov
sub
cwtl
nop
ss
mov
mov
pop
lods
push
gs
ret
dec
sub
ja
test
sbbl
popf
hlt
push
mov
jg
adc
out
int3
sti
mov
cmpsb
and
fidivl
aad
and
xchg
loope
sub
iret
dec
mov
dec
mov
outsl
adc
lret
pushf
inc
outsl
out
and
sub
cmp
add
adc
out
fisubrl
lock
or
add
cmpsb
or
sar
test
lods
sar
fbstp
or
lcall
int
fsubl
shrb
xchg
testl
sbb
sti
out
push
mov
push
mov
pop
mov
pop
jecxz
push
xor
xor
mov
and
enter
rclb
or
popf
jmp
decb
dec
fnstcw
leave
push
les
in
stos
daa
leavew
jb
mov
addb
icebp
das
jne
sbbb
xchg
sub
ror
jns
sti
jmp
inc
sbb
and
aaa
cmc
ror
cld
pop
mov
sub
shr
pop
fidivrs
addr16
and
das
push
xor
rolb
jb
clc
sbb
aas
add
xor
xor
in
xor
mov
int
std
xchg
aam
xor
jl
insb
fs
mov
inc
push
push
bound
andl
leave
or
mov
sbb
lret
adc
push
adc
clc
cwtl
and
test
mov
push
test
stos
shrl
mov
mov
mov
push
int
add
jg
daa
into
js
pop
mov
into
sub
sbb
push
dec
das
xor
ficoml
addr16
mov
jge
cmp
andb
mov
dec
fs
je
push
mov
insl
and
enter
pushf
xchg
cmp
mov
inc
fwait
jecxz
gs
xchg
inc
test
imul
inc
aam
add
scas
iret
lock
aas
dec
sub
repnz
in
idivb
pop
leave
mov
iret
out
das
xor
xchg
xor
hlt
scas
inc
sub
xchg
pop
call
test
cmpsl
xor
inc
sbb
ds
repz
data16
push
add
jle
scas
lds
stos
test
mov
adc
fnstenv
cmp
imul
push
push
ljmp
in
push
or
outsb
fidivrl
test
or
loopne
adc
leave
sub
and
stos
icebp
clc
cld
sub
adc
xchg
xor
imul
pusha
pop
cld
push
mov
push
pop
outsb
icebp
jb
sbb
stos
mov
pop
cmpsb
stos
out
push
cwtl
js
insb
push
jnp
jns
pusha
inc
mov
adc
mov
sub
sbb
mov
mov
cwtl
mov
cmp
jns
pop
cld
xchg
inc
xchg
test
dec
dec
push
rcll
rclb
add
stc
fdivp
dec
add
scas
lret
enter
mov
add
or
add
mov
sarl
lret
and
fdivr
addr16
xchg
addr16
test
das
sub
push
imul
icebp
inc
xchg
popf
mov
mov
jb
dec
jg
push
pusha
ficomps
into
push
pop
jne
ret
adc
inc
mov
rcrl
inc
scas
and
imul
push
outsb
test
lods
out
daa
fidivrs
mov
rep
adc
and
or
addl
flds
xor
fwait
aam
lahf
inc
and
movb
adc
ret
xchg
inc
imul
filds
or
xor
inc
jecxz
adc
add
popf
add
pop
mov
cmp
stos
mov
popf
sbb
movsl
lahf
imul
cmp
cli
rcr
mov
test
insb
sub
and
jmp
insl
jg
imul
out
mov
in
pop
imul
mov
std
cs
sbb
loope
in
adcl
pop
jmp
out
add
mov
xchg
out
lahf
and
cmp
xor
and
push
jmp
testl
lods
jns
inc
sbb
add
lahf
xor
adc
test
js
and
mov
dec
dec
pop
mov
jg
adc
cmp
mov
data16
push
sahf
daa
addr16
aas
inc
aas
inc
arpl
inc
cmpsl
lret
aas
aas
sbb
dec
mov
loop
push
repnz
and
or
jnp
ret
xchg
mov
ret
cmc
xchg
ds
out
loop
xor
and
push
pushf
or
mov
xor
popa
sub
rcr
jmp
lret
pop
into
push
lret
mov
fwait
mov
xlat
arpl
add
int
rcrb
pop
sar
or
ds
out
into
push
jne
xchg
lret
jp
adc
inc
dec
adc
sub
outsb
jp
in
js
rdmsr
sub
cmc
imul
adc
add
sub
repz
pop
push
cmp
push
out
sbbb
adcb
jo
sbb
pop
inc
fisubs
stos
jle
push
pop
int
scas
les
lahf
push
or
repz
cld
lea
and
lahf
shl
test
notl
pop
xchg
decb
lret
in
insb
fcompl
jecxz
imul
fldt
push
daa
mov
test
popa
aaa
clc
xchg
fnstsw
sbb
push
arpl
fwait
mov
out
aas
lret
xor
shrl
ja
imull
or
mov
dec
sti
fildl
shll
incl
int3
mov
ret
mov
xchg
mov
jnp
fmulp
lret
dec
sub
push
jmp
cmp
mov
ret
mov
cltd
jmp
cmp
iret
jnp
jmp
jb
clc
iret
popa
js
fstpl
mov
inc
jp
inc
mov
jle
mov
push
push
mov
dec
pop
popa
iret
pop
enter
es
int3
jb
push
fcomps
test
decl
stos
xchg
cs
imul
outsb
das
pop
and
pop
bound
or
hlt
mov
popa
std
jmp
xchg
xchg
push
les
xor
fstps
in
cld
dec
push
rolb
sub
gs
jl
push
pop
aad
cli
or
jb
mov
lcall
and
daa
les
int3
ljmp
and
inc
xor
inc
lahf
sbb
cmc
in
js
std
sub
xlat
jge
loop
popf
das
in
jb
out
jae
out
insb
test
aam
ds
push
into
sbb
add
test
movsb
mov
loope
sub
jl
bound
nop
ljmp
ja
shrb
mov
icebp
pop
push
xlat
or
outsl
push
incb
xor
repnz
insl
bound
out
xor
test
cmp
fcoml
call
hlt
scas
or
rol
rorb
sarb
into
mov
xchg
ja
ss
push
lea
jnp
xchg
cmp
inc
or
fsubrl
mov
xor
mov
pop
lods
inc
adc
mov
xlat
mov
enter
pop
jbe
pusha
rcrl
shrl
sbb
add
test
outsl
sahf
das
add
adc
aas
sbb
jge
sub
imul
add
lock
repz
mov
fstl
lret
mov
fistps
bound
pushf
and
mov
mov
popa
repnz
aas
lret
xchg
sub
mov
negl
jns
inc
mov
add
sub
sub
dec
les
daa
pop
fwait
dec
mov
and
jl
push
iret
sub
sub
pop
test
push
dec
jne
or
int3
frstor
jg
mov
mov
inc
dec
andps
jmp
jbe
loope
mov
push
mulw
jnp
fisubrs
imul
cli
xorl
sti
lahf
cltd
push
mov
inc
cltd
test
sub
hlt
mov
inc
jb
out
das
sub
std
mov
cmp
test
enter
cmp
rorb
subl
mov
lds
je
sbb
aad
aad
mov
ret
stc
popf
jg
and
cmp
jns
cmp
cmp
mov
movsb
icebp
in
sub
es
int
mov
add
jmp
es
test
ja
fidivrs
sub
jmp
dec
sub
xchg
shl
or
xlat
popa
sub
les
loop
arpl
lret
and
mov
mov
sbb
iret
imul
mov
or
iret
movsl
sub
pop
add
insl
mov
repz
out
or
lods
xchg
adc
in
jb
mov
sbb
bound
mov
pop
xchg
jnp
ss
pop
xor
fisubs
gs
enter
arpl
dec
mov
adc
mov
aas
jmp
pop
sub
add
dec
js
lret
mov
iret
dec
repz
and
mov
ret
gs
lds
sbb
push
ficomps
test
addr16
ficoml
movsl
int
and
test
rorl
icebp
sahf
nop
sbb
repz
push
les
xor
xchg
test
push
fstpt
test
clc
sbb
das
mov
lods
sub
div
or
mov
outsb
add
xchg
push
pop
scas
les
and
fmul
xor
mov
sti
mov
mov
jg
shrb
test
test
push
mov
cmpsl
negb
sbb
fimull
sub
cs
into
hlt
je
cli
mov
jge
fidivrs
sti
cmp
js
imul
pop
int
lcall
and
xchg
pop
lret
mov
push
jle
jae
ljmp
out
invd
add
filds
push
outsb
mov
inc
out
mov
or
mov
shrl
push
push
scas
daa
inc
ret
iret
in
sbb
cli
test
outsl
inc
cmpsl
jecxz
into
fistl
pop
enter
ret
jecxz
test
jmp
nop
or
mov
xchg
push
shrb
fwait
jnp
xchg
cli
test
outsl
xor
xchg
mov
or
mov
movsb
icebp
inc
daa
and
pop
mov
int3
pop
mov
insb
daa
aad
aaa
lock
pop
xor
daa
sub
cmpsb
lds
jno
jle
sbb
jbe
bound
lock
inc
loop
cmp
mov
xlat
sub
dec
xlat
jbe
adc
enter
mov
loopne
sarl
jl
test
push
arpl
imul
and
adc
out
scas
jmp
subb
dec
mov
movsl
mov
out
movsl
xchg
testb
cld
lahf
add
jge
push
mov
popa
sbb
and
rcrb
push
and
mov
sub
js
mov
test
sbb
in
jnp
loopne
cmp
push
jmp
mov
icebp
sub
sahf
sbb
xchg
fisubrl
loope
jle
gs
pop
pop
clc
rcll
jle
pop
and
repz
lock
adc
out
mov
sbb
or
add
ret
sahf
xchg
in
xchg
cmp
hlt
cmpsl
int
dec
or
inc
idivl
mov
fdivrl
rolb
pop
lea
hlt
dec
push
add
mov
pop
shll
mov
jle
jg
imul
out
lret
rcl
stc
xor
jmp
test
push
pop
and
sub
jle
faddl
jno
jge
mov
jb
inc
insl
push
xchg
decb
imul
jg
pop
pop
test
sub
mov
and
aas
adc
sub
sbb
and
nop
lock
xchg
cmc
jp
pop
pop
cmpl
jg
and
xchg
cltd
imul
pop
push
test
mov
cmp
pop
dec
adc
ljmp
in
aaa
adc
push
push
loop
jo
int3
fnstcw
mov
inc
bound
pusha
cltd
jl
notl
sahf
leave
mov
out
jp
push
push
cmp
loop
lahf
out
jecxz
mov
adc
mov
call
pop
mov
test
or
addr16
nop
mov
adc
push
fs
pop
sbb
les
call
in
mov
mov
add
fisubrl
gs
jnp
fs
add
mov
cmp
lret
imul
cld
jge
mov
fildl
mov
gs
insl
push
movsb
jno
clc
mov
fstpt
pop
bound
cwtl
jp
mov
sbb
inc
repnz
idiv
inc
in
and
loope
adc
cmpsl
int
inc
in
out
pop
repz
cmp
jae
jg
inc
pushf
pusha
sub
sub
and
add
cmp
ret
adc
imul
cmp
fnstcw
popa
add
cld
pop
jmp
jg
or
mov
loopne
and
dec
mov
int
adc
ja
movsl
in
decl
pop
ror
mov
push
flds
jge
jle
lock
das
adc
jne
adc
rcrl
lahf
adc
jns
std
push
addb
mov
fisubs
add
mov
loope
addb
mov
ja
icebp
pop
fs
div
and
mov
push
test
mov
pop
out
mov
ret
push
inc
inc
inc
idivb
cmp
pop
pop
scas
aaa
scas
cmpsl
push
or
mov
es
cmp
adc
lods
xor
sub
and
mov
pop
dec
or
and
aad
inc
xchg
xabort
cmpsl
push
test
pop
xchg
mov
xchg
cmp
cli
jle
imul
mov
push
dec
sbb
rorl
pop
inc
fwait
stos
push
ret
imul
jg
push
jne
mov
cmp
repnz
bound
fwait
or
mov
cld
out
stc
add
in
stos
mov
xor
or
call
mov
cmp
sarb
sahf
popa
pop
ret
mov
mov
lret
stos
stc
inc
je
notl
xor
out
in
movsl
xor
xchg
pop
repz
lds
xchg
mov
push
ja
je
xor
mov
imul
ljmp
cmpsb
loope
add
pop
push
jl
inc
xchg
xchg
stc
and
mov
jl
insb
mov
lret
pushf
cmc
addr16
and
push
push
into
mov
pushf
mov
in
push
out
notb
cmp
or
jbe
push
mov
pushf
lds
jle
xchg
push
push
jb
jbe
mov
js
jo
cs
or
add
add
pop
in
je
loop
add
cmp
movsl
cmpsl
leave
lahf
pop
cmp
jb
clc
mov
push
sub
sub
aaa
mov
pop
repnz
add
lret
dec
fnsave
out
int
fs
sub
pop
neg
loope
adc
cmpsl
bound
xchg
in
frstor
ror
jmp
push
pushf
rcll
sub
cmp
sub
sti
icebp
outsl
sub
push
add
xchg
je
imul
sbb
push
stos
jg
mov
and
push
mov
mov
dec
movsb
popa
lods
mov
push
test
xchg
jmp
sbb
popa
sbb
popf
loop
test
mov
cld
cwtl
ds
lahf
stos
mov
or
aam
shrl
push
xchg
in
inc
jmp
inc
sub
movsl
xchg
mov
push
aam
push
adc
mov
pop
unpcklps
add
std
lcall
stos
or
inc
les
mov
dec
inc
push
mov
mov
cwtl
arpl
jg
in
sub
push
push
and
jnp
pop
iret
enter
outsb
add
add
ret
mov
mov
dec
outsl
pop
add
pushf
inc
popf
inc
fildll
dec
adc
jecxz
mov
inc
push
sahf
adc
sbb
cli
fmuls
rclb
cmp
cmp
jg
pop
pusha
call
sbb
ret
mov
push
adc
aam
mov
clc
inc
inc
movups
into
pop
push
sbb
daa
idivb
jecxz
mov
in
clc
test
fwait
test
aas
push
xchg
mov
sbb
cmp
pop
lahf
cli
jae
push
or
leave
shl
cli
cwtl
lahf
aam
jecxz
pop
cltd
mov
sbbl
nop
jns
mov
cmp
inc
ret
pop
lock
or
iret
sarl
dec
mov
adc
mov
lock
fbld
sbb
mov
push
jge
pop
add
ss
mov
add
mov
jge
sub
jg
mov
jl
loope
push
jle
outsb
inc
xlat
ljmp
dec
icebp
push
hlt
xchg
iret
jmp
imul
pushf
nop
mov
mov
ficoml
mov
test
add
aaa
or
xchg
ja
movsb
nop
cmpsl
in
ss
std
xchg
push
push
xor
test
sub
fistpl
adc
mov
xor
xchg
add
shlb
and
push
clc
mov
mov
cmc
icebp
in
pop
dec
aaa
xchg
adc
xchg
shl
enter
sub
push
add
push
mov
hlt
push
sbb
xchg
data16
cmp
addr16
xchg
dec
andb
pop
pop
addl
mov
jle
pusha
lahf
push
lods
xchg
fwait
add
push
dec
lods
mov
cwtl
jno
push
rcpps
aaa
cmc
add
dec
jg
dec
rorb
pop
jp
cmc
push
adc
lret
fldl
cmpsb
ret
test
dec
mov
add
xchg
xchg
in
mov
and
pop
fidivl
sahf
sub
adc
xchg
ljmp
jne
in
mov
fwait
gs
insl
mov
jae
cs
arpl
stos
add
xor
aam
lcall
xchg
dec
movsl
push
aad
push
aam
jno
add
dec
test
scas
xlat
lds
aam
xor
scas
fbld
lods
push
sub
xchg
cld
mov
mov
je
lret
lret
sub
fists
xor
xchg
dec
scas
mov
les
aaa
ret
fs
and
outsl
inc
sahf
dec
enter
mov
mov
xchg
shlb
cwtl
and
or
mov
dec
jns
lds
push
fsub
mov
or
lods
lock
aad
ficompl
lds
in
or
inc
out
jl
or
sbb
je
and
xchg
mov
push
mov
sub
inc
pushf
jne
mov
mov
pop
or
shl
and
outsb
cmpsb
sub
das
call
or
dec
adc
cmc
jp
jmp
lea
arpl
or
hlt
imul
sub
fisttpl
ja
fistps
push
imul
cmp
mov
lods
shll
movl
add
imul
lret
ljmp
jo
shl
mov
ljmp
insb
mov
mov
lret
xor
je
ret
sbbb
mov
lods
cld
xchg
fisubrl
lret
mov
pusha
dec
ret
arpl
push
arpl
hlt
mov
jl
jae
out
in
bound
xor
dec
ret
push
xchg
mov
or
mov
and
sarb
cmpsl
ljmp
or
mov
out
pop
pop
repnz
mov
jmp
testl
xchg
in
imul
push
adc
hlt
nop
lds
jb
push
in
pop
jne
aas
out
loope
into
dec
jne
into
or
add
and
fnstsw
xchg
mov
mov
fidivrs
clc
int
sahf
pop
mov
lea
cmp
jbe
loop
xor
stos
addr16
mov
and
xchg
rcrl
push
roll
or
negl
push
sub
sub
arpl
cmc
pop
or
dec
and
out
pop
stos
fs
sbb
notb
in
hlt
daa
ss
or
call
sbb
jp
mov
mov
add
pop
cli
fisttps
das
or
fistl
aaa
xchg
or
sub
arpl
xchg
test
stc
fists
cli
xchg
jge
stos
stos
shr
cmp
fisubrl
jl
and
sbb
dec
mov
mov
jge
push
lahf
movsb
pop
fnstenv
mul
into
out
jecxz
jle
lret
cmc
xchg
push
push
aam
sub
dec
in
pop
mov
sub
int
push
cmp
mov
sub
lret
mov
jmp
sbb
push
lahf
lock
imul
jae
mov
outsl
cmp
sbb
jnp
cmp
inc
mov
and
lods
test
out
lods
out
fistl
outsl
loope
adc
out
and
add
insl
xor
xor
mov
in
pop
pushw
mov
pop
mov
fisttpll
inc
fnsave
and
mov
and
call
imul
insl
xchg
js
cmc
aas
push
test
lds
insb
adc
mov
loopne
mull
pop
in
sbb
push
push
fnstsw
ja
inc
stc
xor
push
jno
std
loop
lcall
sbb
ficompl
pop
adc
mov
jb
stc
push
mov
mov
test
jae
stc
lret
pop
ds
loope
cmp
and
mov
shlb
inc
icebp
push
dec
xor
fs
cmp
push
adc
mov
shll
jbe
lret
repz
dec
mov
lds
popa
sub
mov
sbb
xchg
mov
add
insl
test
sub
loopne
bound
push
mov
je
inc
lret
xor
jg
dec
out
jecxz
popa
add
xor
out
bswap
and
shlb
jmp
aas
cmpsb
sarb
mov
add
sbb
ret
mov
divb
fnstcw
lahf
or
or
data16
ja
daa
mov
rcrb
jecxz
add
cmpsl
shl
adc
add
adc
pop
jmp
dec
dec
lret
insl
jb
insl
movsl
xchg
pop
mov
jge
dec
mov
out
cmpsl
add
adcb
divl
cmp
ljmp
addr16
add
int
inc
jne
mov
mov
je
ss
and
fs
dec
lret
mov
icebp
mov
sahf
sbb
in
pop
sbb
jecxz
mov
xor
lods
test
clc
and
jg
jnp
clc
sbb
mov
inc
xchg
sarl
dec
lods
fisubs
loope
scas
js
out
and
scas
push
cmp
fdivs
call
test
subl
dec
outsl
push
add
mul
sbb
push
ret
mov
out
and
out
push
popf
dec
push
ficompl
fisubl
cmp
filds
sti
sub
adc
jmp
jge
push
pop
movsb
lods
loope
stos
dec
pop
aad
stc
xchg
sbb
movsb
adc
sub
insl
test
in
mov
jbe
fs
shlb
jo
xor
loop
movsb
mov
cmc
jge
movsb
sbb
lock
ret
jp
lret
imul
hlt
pshufw
sbb
in
xchg
pop
mov
mov
aam
cwtl
adc
test
pop
mov
inc
sub
js
test
sbb
pop
stos
add
jae
in
icebp
dec
mov
push
sbb
movsb
test
fwait
jb
xchg
hlt
cmp
lahf
in
sbb
pop
outsb
rorl
bound
xor
loop
les
or
xlat
aaa
and
xchg
ret
xchg
in
sahf
rcrb
movsb
sbb
xchg
insb
pushf
pop
ret
jo
push
push
inc
jnp
scas
cs
xchg
jg,pn
mov
clc
jecxz
pop
call
mov
mov
push
sahf
imul
add
sarb
mov
dec
jb
imull
aas
pop
repnz
and
or
pop
jno
sahf
cli
inc
push
xchg
inc
int3
sub
jne
inc
sar
loop
lahf
mov
das
jmp
call
ljmp
clc
lds
and
push
pushf
in
push
ss
popa
aam
cli
arpl
mov
pop
adc
decl
jns
out
xchg
stos
cltd
repnz
push
imul
xchg
xchg
enter
xchg
dec
mov
push
addr16
inc
jbe
insb
sbb
jp
fdivrl
jecxz
jo
add
js
cmp
xchg
mov
ret
ja
ljmp
mov
jge
add
dec
mov
lods
jp
sahf
fcoms
out
in
xchg
mov
jnp
in
out
outsb
pop
jo
and
ja
or
or
mov
fstps
in
fnstcw
xor
push
pmaxsw
jg
ffree
add
imul
sub
cmpsb
pop
inc
out
sbb
pop
data16
lahf
loop
lods
mov
xor
pushf
add
cmp
cli
dec
pop
gs
xchg
in
push
xchg
dec
push
lcall
lret
and
je
xchg
inc
mov
add
xchg
scas
mov
mull
xor
dec
jl
ljmp
iret
inc
xchg
sbb
cmp
xchg
lcall
xchg
enter
fmul
xchg
lahf
and
xor
mov
xchg
stos
add
adc
push
popf
lret
or
cmpsl
sub
add
and
push
fcmovnu
stos
jb
les
cmp
sbb
jecxz
les
mov
gs
xchg
outsb
jge
popf
rclb
testb
or
fstpt
inc
jp
cli
test
add
mov
push
testl
inc
mov
ss
test
xchg
add
or
and
or
add
ret
call
jae
xorl
subl
sub
out
pop
jne
fimuls
out
enter
adc
adc
xor
or
insl
fwait
jecxz
add
push
pop
mov
scas
hlt
xor
repz
je
fldcw
and
insb
mov
loopne
xchg
sbb
js
or
pop
inc
pop
call
jns
lcall
jp
xor
mov
xchg
and
push
cmp
mov
cmpsb
mov
cmpsl
cwtl
insb
fcoms
dec
jmp
jns
and
pop
jl
add
stos
stos
hlt
lahf
jno
xor
mov
mov
repz
stc
and
clc
fmul
in
sub
sub
sbb
cmpsl
and
dec
push
push
push
popa
ds
sti
push
pop
repnz
lock
addr16
xchg
xor
inc
mov
lods
cwtl
fadds
inc
jbe
xchg
movd
enter
mov
inc
data16
mov
xchg
add
sub
flds
rclb
xor
fcmovbe
inc
sub
push
xor
clc
in
inc
dec
shll
push
nop
inc
pop
and
mov
int
xor
inc
mov
or
cmp
lock
adc
xchg
aaa
cmc
push
inc
ja
or
jle
jb
popa
adc
ss
adc
inc
cmc
mov
mov
movsl
adc
sahf
mov
rcll
jb
inc
sub
xor
or
xchg
dec
adc
xchg
sub
cwtl
xor
mov
mov
ds
sbb
fs
fildl
mov
mov
insl
aaa
inc
mov
mov
push
sbb
push
sahf
jne
ret
and
lock
push
daa
mov
mov
dec
cwtd
cmpsl
pop
mov
xorb
ds
out
cmc
jnp
loope
sub
sarl
jl
mov
sti
mov
xor
pop
xchg
mov
ret
lock
and
push
mov
ja
jle
rolb
xor
adc
push
mov
in
loopne
aas
out
dec
hlt
je
pop
repz
in
enter
repz
xlat
pop
hlt
ja
mov
repz
fsubp
popa
xorb
mov
xorb
pusha
sbb
adc
mov
pop
stos
xchg
adc
mov
outsb
out
sbb
xor
call
xorl
sbb
sti
lds
and
scas
daa
adc
add
inc
push
movb
xchg
xchg
lret
mov
loope
sub
mul
jae
or
push
sub
jecxz
lock
push
push
mov
mov
mov
sbb
cmpsl
xor
int3
adc
add
dec
mov
sti
rcl
dec
sbb
sub
xchg
ja
fcoms
rcrb
incb
xor
popf
test
fsubs
aad
xchg
ret
xchg
mov
popf
aad
or
mov
ror
and
dec
inc
pop
sbb
or
push
sub
mov
dec
inc
pop
repnz
jge
xlat
mov
sub
fistpl
pslld
testb
mov
insb
arpl
xor
loope
jle
shll
ret
dec
and
les
jne
pop
push
fmuls
btc
xchg
mov
add
stc
clc
mov
jecxz
jle
mov
jle
insl
mov
imul
xor
bound
es
dec
jno
cmp
lret
xchg
mov
cmp
mov
mov
out
cmp
loopne
hlt
cwtl
mov
jae
inc
std
jle
sbb
daa
scas
push
call
js
push
mov
cld
adc
lret
insb
jne
cltd
cmp
jbe
out
sbbb
mov
mov
pop
testl
adc
rcrb
loope
stc
out
push
out
cmp
sub
cmp
xchg
test
andb
lahf
scas
and
push
mov
hlt
xchg
std
adc
je
loope
xor
fisubl
cmp
imul
push
fidivs
push
jle
mov
cmp
lock
int3
pop
dec
cli
jnp
xchg
xorl
call
xchg
shll
push
mov
mov
test
jl
mov
jle
les
add
ficoms
jg
or
shl
into
repnz
mov
in
push
xor
add
mov
rclb
pop
lds
jns
hlt
push
or
ret
pop
mov
mov
call
adc
mov
in
add
in
pop
adc
daa
sub
mov
dec
js
inc
mov
cld
test
mov
lods
inc
xchg
ficompl
xor
mov
jg
pusha
mov
xchg
test
push
ret
jge
out
dec
cmp
mov
mov
negb
mov
mov
jecxz
lahf
dec
jnp
cmc
pop
scas
lret
mov
scas
les
xchg
fs
mov
clc
mov
mov
mov
mov
mov
mov
mov
push
test
jge
mov
inc
outsb
les
sub
ds
out
push
add
mov
push
jmp
add
movsb
xor
adc
fs
iret
jge
bnd
fwait
rorb
sbb
in
ror
cmpsb
fsubl
loope
push
mov
sbb
and
adc
mov
mov
pop
nop
mov
test
repz
ja
sub
shlb
in
pop
std
iret
cmpsb
ss
add
in
xor
xchg
or
jle
stos
adc
dec
ja
adc
xchg
ficompl
repnz
in
addr16
shl
mov
lods
pop
fisubs
lret
and
xchg
dec
mov
inc
mov
mov
sub
insl
xchg
rol
and
leave
xor
xor
push
fisttpll
ret
inc
out
cld
cld
sbb
shl
pop
sbbl
adc
iret
lock
xor
outsl
lods
mov
jb
push
sub
xchg
fidivs
push
rclb
outsl
cwtl
sub
mov
enter
out
in
xchg
ror
dec
lds
mov
xor
vphaddubq
ja
jle
pop
push
dec
jno
sbb
cmpsl
out
inc
imul
loope
cld
lods
mov
sub
daa
xorb
inc
jo
aam
lret
addl
lock
fdivl
ljmp
xchg
movsl
pushf
out
push
dec
js
mov
jge
out
js
jmp
aaa
jnp
in
push
insb
add
adc
hlt
or
xchg
mov
sub
dec
cwtl
scas
sbb
testb
lcall
xchg
lret
pusha
jmp
jmp
jb
popa
stos
inc
sub
gs
add
push
push
ljmp
les
enter
adc
pusha
mov
sbb
int3
mov
cmp
sbb
out
sbb
jbe
addl
fbstp
sti
add
add
cmpsb
aad
rcrb
mov
jecxz
push
sahf
cmp
jle
jle
adc
push
pop
xchg
fs
shrb
sarb
mov
pop
pushf
inc
sub
mov
rcll
stos
outsl
add
fabs
in
fcoms
inc
outsb
movsb
notb
test
in
arpl
aad
repz
inc
movsb
testl
cld
data16
mov
out
cwtl
jno
cmp
mov
xchg
loop
add
pop
push
aaa
dec
jecxz
sub
cwtl
sub
sbb
scas
adc
jbe
or
scas
push
bound
ljmp
call
repnz
js
ds
in
mov
js
and
fwait
add
aaa
imul
xchg
sbb
stos
movsb
leave
pop
clc
cs
sar
es
lock
mov
xor
in
mov
xchg
int3
mov
mov
push
icebp
fstps
bnd
and
push
xor
xor
add
lds
mov
popf
mov
fwait
cs
loope
in
xlat
lahf
pop
inc
in
lods
add
push
mov
into
mov
aam
nop
mov
pop
ret
jmp
push
add
mull
inc
xchg
mov
outsl
pop
xchg
imul
mov
mov
jl
in
mov
loopne
popa
lret
push
and
add
shll
cmpsb
jnp
xchg
pop
rcr
outsl
out
dec
mov
insb
push
push
mov
mov
xlat
lcall
push
push
sahf
out
cmp
mov
push
xor
incb
sub
add
xchg
push
push
push
or
std
mov
adcl
movsb
dec
in
lcall
sub
and
in
pop
mov
and
add
or
push
add
cmp
lds
add
testl
lods
ljmp
or
adc
nop
xchg
lds
rorl
jnp
jns
pop
lcall
in
adc
adc
jns
js
push
rcl
cld
xchg
adc
xor
sti
cmp
add
adc
inc
int
addr16
ret
or
shl
insb
dec
xorl
xlat
jnp
loopne
shlb
mov
lds
add
mov
outsl
xlat
daa
cld
jne
sbb
into
xchg
insl
arpl
and
call
inc
sbb
dec
cmpb
jnp
sbb
dec
push
jb
les
xor
or
xchg
xor
jl
jbe
mov
push
clc
push
ret
movl
aaa
pop
scas
sub
mov
in
insb
or
cmpsb
mov
popa
cmp
add
fbstp
mov
ficompl
jp
jb
inc
pop
xor
push
jo
das
out
in
sbb
fstl
test
push
dec
es
cmp
lock
subl
xchg
or
enter
fnstsw
enter
jle
dec
pop
call
jge
into
fiadds
jecxz
add
cmp
xchg
push
sahf
shrl
push
or
dec
cmp
js
addl
lods
fistps
xchg
out
push
loop
jmp
movsb
xchg
ret
sarb
loope
xchg
cmp
adc
pop
and
jp
cltd
jne
nop
inc
es
loop
mull
pop
xchg
sbb
sarb
pop
hlt
nop
pop
shl
xor
push
mov
mov
daa
xor
das
push
sbb
xor
mov
mov
mov
push
adc
mov
vpaddusb
xor
mov
lock
lret
fnstsw
push
xor
hlt
push
test
es
jle
popa
ss
out
xchg
lret
push
fmuls
dec
jl
push
pop
hlt
or
mov
loope
mov
mov
jnp
inc
test
movl
push
ja
sub
in
lock
ja
sub
out
push
push
repnz
int
fisttpl
adc
jmp
jle
repnz
scas
rorl
ljmp
arpl
inc
sub
push
in
and
inc
mov
sbb
mov
in
jge
imul
dec
ss
mov
xor
mov
jbe
out
and
popf
push
subb
mov
les
aad
aaa
xchg
jmp
ja
mov
shrl
push
cwtl
xchg
cmp
mov
addr16
lods
das
and
jg
jg
movsb
popf
jne
addr16
test
adc
and
hlt
inc
jno
mov
mov
mov
loop
jae
jecxz
mov
mov
inc
pop
dec
inc
in
outsb
xchg
mov
ds
jns
call
fdivrl
into
xor
loope
adc
and
insl
out
out
test
int
js
imul
adc
loope
popf
jmp
add
xor
fdivl
xchg
and
mov
fdivl
jecxz
push
in
int3
aas
popf
call
icebp
pop
gs
push
pop
xor
xchg
push
xchg
nop
mov
dec
dec
mov
and
movsl
cmc
inc
movl
xor
jne
push
push
push
movsl
xorb
sarb
out
adc
jnp
adc
scas
xchg
jl
cmpb
cmp
lods
cwtl
ror
mov
sbb
mov
dec
push
cs
mov
shlb
repz
xor
mov
and
push
enter
nop
mov
movsl
sbb
push
cmc
and
cmp
mov
clc
aas
inc
dec
mov
loopne
fstpl
jmp
push
xchg
out
stc
mov
mov
paddsw
xchg
push
cld
shlb
lds
cld
rcrl
dec
lods
sarb
lods
rcrl
out
adc
lcall
les
dec
adc
call
push
popf
iret
adc
sub
movsb
pop
movsb
adc
mov
fidivrs
xchg
cmpsb
xchg
pusha
std
leave
cld
mov
je
push
sbb
subb
insl
jo
pop
nop
lds
jg
inc
dec
insl
xor
stos
aaa
or
sbb
dec
insb
inc
or
xor
js
dec
mov
addr16
popa
loop
inc
pop
add
mov
call
sbb
adc
add
not
cltd
int3
xchg
cmp
test
iret
xchg
fs
dec
mov
pop
jg
popa
int
jmp
adc
push
mov
mov
rcll
mov
ja
lret
push
lcall
jae
out
lea
lret
cmpsl
add
xlat
stos
pop
adc
imul
outsl
jno
ds
int
adc
imul
addl
mov
add
scas
movsb
decl
mov
out
imul
call
cltd
mov
shl
rclb
add
mov
push
add
xchg
lahf
fsubs
loop
loope
aam
lods
in
xchg
inc
jae
rcrl
fsubrs
mov
sahf
arpl
je
ss
repnz
aam
mov
push
push
fimuls
data16
out
mov
pop
pusha
leave
jae
mov
push
sub
inc
testl
mov
aas
imul
or
loope
ret
ret
adc
fisttpl
arpl
insl
adc
loope
loope
and
sarl
out
cmpsb
cmpb
dec
inc
lcall
scas
inc
add
xor
pop
sbb
ret
xor
xor
and
jl
dec
xor
aad
xor
adc
aam
sub
inc
push
jnp
in
in
fwait
cwtl
xor
les
shrl
lahf
sahf
mov
sub
aaa
xchg
push
mov
adc
xchg
sub
jne
sbb
pop
or
lret
loopne
std
aad
cld
insb
sub
cmp
icebp
cmp
lret
into
ljmp
sub
test
xor
inc
arpl
sahf
xor
mov
push
mov
hlt
sti
fs
cli
cmp
cltd
lods
mov
adc
push
jno
mov
dec
lds
mov
sub
mov
cmp
hlt
into
sbb
mov
ss
iret
fcoms
fs
mov
lret
dec
xlat
insb
call
adc
out
es
dec
pushf
ja
imul
imul
in
movsb
sub
and
insl
cmpsb
mov
adc
in
imul
mov
jne
pop
ret
mov
divb
pusha
mov
movnti
shll
jne
xchg
fisubrl
rcrl
and
gs
jl
sub
in
sub
roll
sbb
xchg
jmp
arpl
in
jnp
mov
xor
out
rorb
mov
loope
and
cmc
in
rol
xchg
push
add
add
loopne
test
int
cltd
pop
push
xchg
cmpb
jb
mov
mul
fcmove
pop
and
adc
xor
shll
sbb
insb
popf
push
mov
in
push
cld
rsm
push
xchg
test
sub
or
scas
rcrl
sub
mov
mov
dec
jbe
lret
push
movsl
adc
jle
test
push
xchg
shll
addb
or
mov
cmp
dec
cmp
push
xor
fwait
aad
jmp
roll
std
fmuls
xor
add
jp
adc
push
lcall
jecxz
add
iret
mov
push
mov
jle
mov
lods
add
adcb
test
lahf
mov
xor
idivb
leave
ret
cmp
insl
or
or
sbb
or
inc
iret
lods
or
pop
add
iret
cld
lahf
inc
dec
inc
jg
js
sub
andb
bound
in
fistl
arpl
loopne
mov
jg
xor
pop
jae
aaa
fsts
in
out
sbbl
addb
mov
repnz
adc
test
pushf
mov
ds
ret
jo
in
push
int3
aaa
out
stc
imul
testb
mov
and
and
negb
stc
int
lds
pop
outsb
cmpb
bound
dec
fnsave
xlat
andl
pop
jg
cmp
sub
insl
sti
xor
inc
adc
or
orb
or
das
inc
loopne
jmp
jbe
or
push
icebp
fisttps
sub
xchg
and
and
fdivp
cmpsl
js
and
dec
inc
test
and
xor
mov
dec
and
pop
test
movsb
hlt
in
les
rolb
rorb
jle
icebp
mov
cmp
out
fs
out
sbb
xor
or
dec
int3
shrl
shll
out
cmpsb
cmp
jl
push
pop
jp
cmpsb
pop
inc
repz
sbb
xor
int3
dec
pusha
cmc
cmc
adc
jno
adc
mov
and
aam
arpl
jl
mov
adc
dec
rcrl
add
gs
mov
in
fs
xor
jp
or
jg
add
mov
pushf
rcrb
ljmp
cmpsb
adc
mov
mov
ficompl
call
aas
mov
pusha
lods
dec
cld
js
xorb
sbb
dec
xchg
aam
lock
push
in
push
repz
jmp
enter
inc
cld
pop
out
sub
or
outsb
pop
push
cmc
cmpsl
xlat
pop
popf
in
cwtl
xlat
shl
cmp
pushf
mov
dec
cmp
ret
dec
mov
popa
out
adc
stos
outsl
ljmp
pusha
jbe
bound
outsl
testl
not
jle
out
ja
out
push
out
mov
push
test
mov
sub
lods
call
sbb
test
push
dec
out
cmpsl
push
lret
dec
loopne
jge
in
repnz
push
std
add
imulb
add
mov
pop
jp
rcl
mov
push
push
imul
add
fists
sub
ja
addr16
mov
inc
and
enter
pop
sbb
lea
pop
lahf
add
adc
inc
push
adc
cmpsl
out
enter
enter
cmp
lods
les
sbb
sar
push
fnsave
cmpsl
sbb
pop
push
sub
loope
decb
test
fimuls
add
xchg
dec
into
in
mov
lret
push
and
mov
cli
jg
test
sahf
cwtl
lods
dec
mov
daa
sub
cld
sub
out
test
mov
mov
jp
xchg
or
ret
xchg
gs
rolb
cmc
in
data16
and
xor
rorb
nop
inc
push
in
stos
daa
adc
imul
enter
movsl
dec
pusha
push
jbe
jg
pop
fidivrs
lcall
out
xlat
xor
jnp
add
sbb
dec
xchg
cmc
xchg
mov
pop
inc
mov
lret
xor
pop
add
mov
dec
mov
rcll
dec
sbb
xchg
popf
or
mov
es
in
dec
add
pop
or
fs
adc
int
shrb
insb
mov
aam
push
xor
fldl2e
mov
sub
mov
popf
loop
ss
mov
mov
dec
test
or
or
movsb
sahf
rol
jmp
add
cli
imul
jnp
pusha
push
pushf
fst
imul
adc
ljmp
ljmp
fwait
cld
pop
cmc
gs
rcr
ret
daa
push
cmp
sarb
out
daa
enter
int3
sub
sub
pop
push
cmp
add
repnz
jo
sub
in
cmc
or
xchg
dec
sahf
mov
lcall
mov
rol
cli
xchg
and
int
jns
fcmovne
pop
mov
addb
lock
ss
outsl
xor
clc
data16
ljmp
xchg
int3
ja
mov
les
mov
xor
add
or
xchg
dec
mov
in
adc
pop
out
inc
mov
repnz
sbb
fists
loope
fmulp
popf
mov
pop
pop
cltd
ficomps
sbb
jbe
push
cmp
mov
call
cmp
push
lret
sub
fistps
lahf
push
pop
pop
fsubs
aad
sahf
in
jae
mov
arpl
add
fidivl
test
lods
cli
shrb
jns
push
out
pusha
ljmp
cmp
jp
in
dec
cli
mov
arpl
icebp
les
gs
xor
dec
out
cmp
repnz
fisttpl
xchg
aam
or
jmp
xchg
je
imul
loope
mov
sub
xor
jl
shrl
movhps
test
and
mov
xor
loope
inc
cmp
fs
add
rorl
mov
out
iret
lahf
pop
inc
cld
scas
icebp
out
hlt
mov
imul
push
out
inc
inc
faddl
mov
out
test
rsm
mov
sbb
add
sub
mov
imul
xor
jg
lret
mov
jg
rorb
lods
inc
push
in
adc
cmp
cltd
mov
sub
outsb
lock
jge
test
scas
mov
cs
filds
out
shlb
pop
inc
jbe
dec
mov
sbb
stc
xchg
pop
shrl
and
je
lds
and
iret
fbstp
mov
dec
sub
xchg
or
fldz
xchg
inc
rorb
sub
adc
jg
repz
add
std
push
xchg
jmp
xor
loop
xchg
cmp
pushl
cmp
ja
cmpsl
in
sub
jecxz
pop
mov
pushf
aad
jecxz
push
inc
loope
dec
popf
mov
lahf
or
inc
pop
sub
pop
adc
loop
movsl
mov
or
ret
xchg
push
adc
pop
movsb
adc
cld
shlb
lret
lahf
xor
std
popf
pop
dec
out
mov
mov
push
ret
mov
pop
loopne
jecxz
xchg
or
mov
aam
stc
daa
inc
in
inc
jl
lea
shl
hlt
mov
mov
dec
and
imul
push
stos
fcmovnb
pusha
jo
or
shrb
push
lea
loope
sub
xorl
mov
aas
jmp
leave
mov
ljmp
or
loopne
mov
xchg
jle
jnp
cs
inc
and
fnsave
imull
mov
pop
add
stc
testb
nop
or
mov
adcl
imul
imulb
mov
ja
mov
mov
lret
pop
cmp
inc
jecxz
dec
movsl
shlb
cltd
add
js
mov
jmp
pop
mov
dec
dec
pop
popa
inc
pusha
imul
into
and
mov
call
cmp
xor
testb
add
mov
fbstp
mov
pop
mov
push
mov
mov
mov
loope
and
out
mov
out
inc
shll
lods
lods
sti
pop
clc
jmp
mov
add
add
pop
push
aas
jle
xchg
sbb
out
movsb
gs
mov
repnz
inc
lret
fldln2
mov
sbb
stc
mov
pop
pop
and
push
es
in
dec
pop
cmpsb
and
mov
fbld
jbe
mov
out
push
stc
int3
pop
xchg
popf
cmp
pop
xchg
nop
fidivrl
jmp
fsubr
mov
adc
xchg
add
aaa
add
je
imul
loopne
jo
add
lret
cmpsl
lret
shrl
xor
cmp
dec
jns
int3
pop
clc
add
mov
fsubr
scas
orl
pop
sarb
in
inc
push
xchg
test
cld
fcoml
or
ret
and
inc
fisttpl
mov
dec
pusha
imul
pusha
jecxz,pn
add
test
lahf
out
mov
or
repnz
jb
loop
int
adcb
dec
dec
xor
mov
cmp
test
outsb
lock
fidivrl
adc
push
inc
pop
mov
jb
jl
push
outsb
dec
repnz
xchg
xor
mov
cmpsl
int3
or
faddl
loope
aad
xchg
hlt
pusha
out
adc
cwtl
xor
jne
pop
lock
mov
cs
xlat
mov
push
dec
push
sub
ficoml
sbb
xchg
dec
cmp
movsb
iret
clc
pop
pop
jb
mov
or
or
loopne
icebp
xor
cmp
jp
xor
fisttps
cmp
lock
push
rorb
popa
lods
outsb
push
add
jecxz
xchg
mov
in
cmpsb
xlat
icebp
pop
aad
sub
sbb
cwtl
imul
dec
outsl
or
inc
rclb
lahf
mov
or
sbb
cltd
mov
xchg
push
repnz
jmp
lcall
push
mov
and
jb
xchg
inc
pop
cmc
or
push
arpl
fcomps
inc
stos
in
lea
mov
fildl
outsb
data16
aas
inc
pop
mov
movb
sbb
fidivrs
test
enter
cmpsl
js
mov
rcl
sub
call
xchg
shl
cltd
or
mov
not
jl
adc
fdiv
daa
xchg
ret
add
imul
adc
call
sbb
push
lret
jbe
push
rcrl
std
out
out
mov
out
arpl
xchg
iret
imul
imul
push
outsb
inc
jg
add
pop
jnp
xchg
les
dec
xchg
daa
add
push
rcl
mov
fcomps
cmp
cmp
jnp
jecxz
dec
cli
pop
jp
mov
dec
inc
outsl
pop
sti
inc
cmp
sub
insl
imul
sbb
push
ret
jo
mov
mov
stos
add
or
rolb
into
mov
ja
insl
in
std
mov
in
movsb
pusha
adcl
ja
rorl
pushf
fbstp
rcrl
push
pop
cltd
mov
sahf
das
cmp
or
lock
mov
movsb
xchg
push
aad
outsl
stc
pop
test
adc
sahf
or
in
push
pop
jne
jge
xchg
xor
pxor
test
cld
repz
jb
mov
daa
mov
lret
std
fnsave
clc
fidivl
int
jge
jle
shrl
lahf
shll
xchg
lea
stc
out
inc
lret
hlt
jno
inc
mov
pushf
and
inc
add
idivl
in
nop
stos
gs
pop
mov
clc
jo
insl
cmp
movsl
sbb
xor
xchg
jns
call
lret
push
jle
int3
mov
js
jae
inc
mov
sti
imul
jno
in
popa
lret
jbe
cmc
insl
fcomi
or
fistl
sub
mov
cmc
lcall
mov
xlat
mov
imul
sub
xor
inc
es
shlb
subl
rcl
ret
movsb
dec
push
arpl
stos
jp
ja
sub
or
daa
pusha
fldt
xchg
push
mov
xchg
lds
out
test
imul
addr16
out
cmpsb
shl
hlt
stos
insb
in
imul
call
mov
fiadds
ret
nop
jg
pop
stc
mov
dec
int3
rcrl
in
mov
sub
mov
adc
lea
in
popa
push
and
test
roll
fldcw
repz
inc
add
push
push
in
cmc
lret
mov
jo
pop
xchg
stos
mov
xchg
aad
popa
cmp
cmp
dec
fstp
add
and
pusha
ret
xchg
out
bound
lret
add
add
add
mov
mov
inc
add
pop
aas
or
imul
insl
add
mov
in
cmp
shl
add
mov
mov
cmp
pop
jo
sub
in
leave
dec
je
ret
mov
mov
leave
add
mov
jp
out
sub
jb
and
push
or
xchg
inc
sbb
repnz
xchg
push
jp
pop
push
push
xchg
jge
fiaddl
jno
inc
xor
fucomp
xor
mov
movl
decb
cs
iret
div
loop
stos
inc
push
xchg
in
lahf
sbb
or
jno
mov
mov
mov
fisubs
dec
fmuls
sbb
subl
or
push
or
imul
mov
add
push
mov
lock
mov
out
pusha
push
cmp
and
mov
cmpsb
std
cwtl
mov
stos
daa
xchg
sub
pop
adc
in
cmp
stos
fcompl
loop
int
sub
add
or
xchg
jp
lret
cs
hlt
cli
adc
icebp
push
pushf
adc
imul
arpl
out
test
fldenv
ja
mov
and
cmp
mov
push
add
rolb
and
cmpb
stos
fidivrl
pop
cltd
stc
hlt
int
mov
sub
push
fdivrl
ja
cmpsb
sub
movsl
xchg
sti
out
mov
lods
int
ret
ret
cmp
xchg
aam
sub
xchg
call
sbbb
mov
push
in
ret
push
mov
imul
xorl
imul
mov
scas
mov
imul
out
sbb
pop
push
ds
data16
rclb
xor
stos
inc
dec
repz
into
mov
cltd
mov
cmpsl
sti
mov
clc
push
arpl
jno
daa
sub
shll
repz
push
dec
loope
mov
mov
in
add
lods
mov
ficoml
repnz
mov
xchg
in
xchg
lods
or
pop
popa
mov
fstpl
jmp
sub
xchg
push
pop
aad
xor
and
and
in
aas
mov
adcl
das
data16
mov
sub
mov
addb
hlt
sub
das
jge
out
repnz
mov
jno
or
jg
and
pop
dec
jbe
jmp
mov
imul
cmpsl
int
repnz
cmpsb
in
lcall
xchg
pop
cmp
xchg
cmpsb
rolb
stos
test
dec
jno
lods
pop
test
sti
cmc
js
xchg
dec
adc
and
jbe
rcr
ret
adcl
lret
pop
and
cmpsl
add
dec
inc
xchg
jbe
jle
insl
cltd
xchg
lret
push
orb
idiv
stc
push
dec
bound
data16
jge
int3
das
or
in
mov
sub
aam
movsl
lods
loope
fcomps
pushf
aam
out
into
xor
testl
or
or
dec
rcl
pop
lcall
ss
aad
in
jmp
add
sub
xchg
jbe
andb
lcall
jno
inc
mov
andb
or
ret
shr
out
popa
sbb
cli
xchg
std
push
out
mov
push
push
mov
add
ret
imul
and
popf
stc
cmp
iret
aam
xchg
in
jno
adcl
or
xor
inc
add
fnstcw
adc
clc
and
divb
arpl
in
in
jnp
enter
push
xchg
push
cmp
fs
push
push
mov
pop
push
sbb
push
add
shr
mov
adc
cwtl
in
and
stos
or
mov
andb
in
adc
add
pop
and
int
mov
adcb
push
sbb
or
movsb
cmp
pop
ds
lds
movsb
push
enter
shll
fdiv
sub
cld
movsb
add
jo
cmp
in
pop
add
mov
push
std
js
sub
cmc
cmp
mov
sahf
std
arpl
jno
or
icebp
outsl
push
mov
sbb
dec
mov
out
xchg
outsb
mov
shll
out
scas
shlb
cmp
xchg
xchg
mov
fistps
pushf
out
cmp
add
mov
and
push
cltd
call
and
pop
cmp
xchg
and
mov
inc
iret
sub
repz
in
adc
pop
insl
jecxz
test
popl
mov
jbe
ss
add
out
sub
scas
pop
inc
ficoml
out
bound
sub
es
xor
repnz
jle
loope
out
les
mov
gs
jo
push
sbb
push
dec
jns
sarb
cli
jmp
push
into
xor
movsb
cmp
lahf
and
and
pop
scas
rclb
insl
les
xor
adc
popf
inc
push
fcoms
mov
clc
out
pop
dec
lret
js
bound
dec
stos
mov
or
stc
popf
cmpsb
ret
push
fwait
cmpsb
cmp
fsts
push
jle
sbb
dec
stc
into
cmp
sbb
lds
in
enter
mov
add
roll
test
xor
add
cmp
pushf
iret
xchg
test
adc
and
cwtl
push
inc
clc
inc
push
je
mov
cmp
xorb
or
cmc
push
xchg
orb
jmp
sbb
dec
dec
cwtl
jo
xlat
andb
sub
imul
rcrb
xor
ss
push
js
xchg
pop
cmp
add
inc
std
mov
add
leave
xchg
jmp
mov
push
inc
mov
sub
cli
daa
add
add
jle
xorl
xchg
and
cld
xchg
ret
inc
ficoms
repz
inc
outsb
jmp
push
cli
andb
in
jnp
jecxz
fcoms
in
pop
or
aad
pop
mov
notl
sbb
jmp
cmp
std
fsubrs
sub
lret
mov
pop
test
cmp
and
mov
mov
push
jp
daa
jno
sbb
scas
cmc
dec
push
fstps
int
imul
popa
xchg
sub
mov
int
loop
lcall
xlat
jmp
fnstcw
pop
inc
jg
dec
mov
xchg
add
hlt
in
ja
jne
out
and
cmp
fcmovnu
imul
lret
pop
mov
cmp
or
test
mov
out
jnp
int3
pop
fistl
test
pcmpeqb
ficompl
out
imul
gs
pushf
in
add
dec
scas
mov
dec
mov
xor
movsb
test
adc
cmp
aad
add
pop
and
dec
jb
sahf
ljmp
mov
pop
and
sub
sbb
jno
ljmp
push
loopne
add
fcoms
roll
xchg
stos
rcll
movsl
push
shlb
dec
fsubp
sub
pop
sub
mov
cmp
fcomp
mov
inc
jno
pop
mov
in
stc
mov
in
jne
pusha
mul
jb
mull
mov
mov
jb
dec
pop
cli
or
pusha
pop
nop
jbe
popa
sub
lock
sahf
fists
clc
divl
sub
xchg
adc
xor
mov
lcall
je
pushf
int
mov
rolb
mov
push
pop
insb
stc
add
cmp
xchg
into
test
scas
fsubs
xor
clc
icebp
mov
pop
pop
dec
dec
roll
or
stos
insl
cmpsl
iret
ret
daa
sbb
cmp
dec
cmc
dec
cwtl
ja
dec
fcmovnu
or
xchg
add
ret
mov
arpl
outsb
add
mov
imul
test
gs
mov
in
imul
cmp
iret
pusha
jbe
notl
rcrl
pop
call
or
push
jnp
mov
mov
shlb
jnp
pop
ss
sbb
mov
aad
sbb
int
adc
xchg
push
mov
mov
push
cld
push
xorl
push
repnz
mov
stos
jge
push
arpl
mov
cmp
ljmp
fistpl
js
in
push
dec
adc
adc
adc
addr16
and
jo
cmpsl
fistl
mov
ja
pop
cld
xchg
or
aam
das
pop
aam
pop
sahf
stos
cmc
in
mov
fdivs
fcompl
cmc
dec
call
popa
push
inc
add
mov
enter
adc
ljmp
addr16
jg
call
insl
shll
push
shlb
leave
pop
jecxz
mov
shlb
sbb
sub
int
and
mov
cmpsl
icebp
adc
xlat
rcll
movsb
aaa
pusha
clc
push
bound
xchg
out
mov
add
mov
jae
movsb
hlt
xchg
lahf
iret
in
push
cmp
pusha
inc
shll
dec
sti
sub
cmp
stos
inc
and
mov
pop
in
add
xchg
push
ror
cwtl
lds
pusha
out
js
mov
push
dec
iret
mov
negb
cld
repnz
stc
jge
jae
pop
inc
into
push
xlat
push
sub
mov
inc
add
mov
adc
shll
nop
shll
push
mov
and
inc
push
and
testb
fwait
push
jle
mov
mov
pop
cli
mov
adc
jbe
pushf
adc
test
cld
call
jno
testl
leave
add
or
inc
and
movsl
and
xor
jp
scas
fstl
push
clc
or
pusha
cmp
movsb
popf
lret
push
pop
add
mov
in
and
push
mov
nop
aaa
dec
dec
xchg
pop
or
aam
orl
and
and
jg
sub
movsb
sub
arpl
jle
push
fsubrs
loope
out
loopne
xchg
sub
faddp
mov
cmp
fisubs
pop
bound
repnz
hlt
loop
sub
cmpsb
dec
xor
fwait
in
inc
loop
sti
sti
clc
xchg
inc
out
ret
mov
jmp
ja
sub
lock
xlat
and
cwtl
fst
dec
xor
lahf
dec
push
jae
int3
push
repz
cmc
cmp
repnz
mov
fildl
pusha
cld
movl
gs
jge
in
mov
arpl
mov
and
xchg
cli
xchg
cmp
xchg
scas
jo
std
xor
push
push
sub
inc
mov
ret
sbb
or
push
xchg
std
in
mov
mov
inc
imul
aas
popf
cli
push
cmpsb
jb
sbb
adc
sbb
sbb
clc
aas
sti
js
sub
js
dec
rcr
loope
cmp
ret
ss
push
jbe
sbb
sub
fsubr
int
inc
push
aas
xlat
mov
fbld
pop
push
add
cs
mull
jge
ret
es
in
xchg
sti
and
push
push
push
aad
jp
push
push
or
int
or
mov
jns
arpl
dec
in
mov
imul
xchg
sbb
xor
xor
mov
ljmp
xor
pushw
lret
cmp
imul
aad
pushf
cli
mov
arpl
test
add
fs
inc
daa
push
shr
popa
bound
xchg
call
int3
mov
fisubrl
in
push
cmp
mov
int
jmp
ja
enter
mov
not
jge
xchg
leave
hlt
movsb
jmp
fdivr
in
add
aam
loopne
and
loope
jbe
divb
jae
cs
or
fistps
in
dec
mov
lds
leave
sub
call
jecxz
test
push
mov
sbb
jl
ficoms
pop
mov
mov
in
test
pop
arpl
inc
lods
int3
mulb
add
in
loopne
mov
fs
sti
xor
mov
push
jno
pop
push
cltd
std
jl
sbb
sub
in
inc
int
inc
or
ss
aaa
sbb
jne
jno
xchg
mov
add
cmp
sub
or
add
stos
xchg
and
adc
icebp
andb
and
or
jbe
insb
xor
cs
and
inc
jbe
dec
xchg
add
inc
out
fwait
sub
or
jne
mov
addr16
das
rorl
xchg
jmp
lahf
mov
flds
psubsw
jae
scas
lock
addb
popf
enter
mov
aam
xchg
jp
popa
push
sbb
test
pop
call
xchg
xor
leave
mov
mov
cmp
push
cli
hlt
bound
sti
dec
add
idivl
jmp
loope
sub
xchg
fmuls
inc
push
push
nop
sahf
lret
mov
cmp
js
test
sbb
testl
sarb
into
in
popf
mov
jl
pop
dec
popf
movsb
fwait
inc
shlb
ret
sub
shlb
shl
jp
push
mov
jns
add
rorb
sbb
sub
pop
int3
xchg
cwtl
pop
sub
sub
jbe
mov
stos
cltd
mov
in
jns
ja
rcrb
testb
loope
jp
mov
hlt
out
adc
shrb
mul
push
cltd
jo
push
icebp
loop
sub
xchg
cwtl
fbstp
mov
jno
push
jb
lcall
in
loope
sahf
fcoml
push
push
popa
lcall
jmp
rcrl
lds
je
inc
shlb
xchg
pop
insl
push
and
cmp
inc
cs
stc
pop
mov
fsubl
add
adc
pop
arpl
pop
xor
push
std
add
in
out
add
out
cmp
mov
inc
push
rcrb
push
lock
xorb
std
clc
jmp
jno
arpl
in
jl
or
imul
dec
sub
add
idivb
aas
inc
call
lods
imul
inc
sahf
sub
loope
lret
sbb
push
int3
test
pop
inc
adc
pop
out
dec
popf
sub
jae
das
sti
or
ret
out
stc
test
hlt
es
loop
pop
imul
dec
add
mov
aam
jge
sub
mov
aas
or
xchg
fiaddl
cli
inc
clc
dec
push
out
icebp
xchg
mov
sbb
jp
and
fidivrs
punpckhwd
es
scas
stc
add
inc
inc
cmpsl
mov
or
sub
daa
push
cmc
lods
xlat
or
jmp
sub
and
lcall
fistps
call
mov
lds
mov
hlt
iret
adc
lock
mov
push
mov
inc
push
jnp,pn
jne
xor
or
and
movsb
adc
xor
scas
rcr
sbb
sub
cltd
push
pop
xor
mov
in
jp
adc
dec
and
sbb
cmp
mov
pop
aaa
mov
adc
jnp
lret
out
loope
aam
cmp
xchg
lods
cmp
fsub
into
adc
pushf
dec
push
xor
inc
jae
and
and
inc
or
mov
std
jmp
ds
int3
mov
jb
movsb
dec
jg
js
call
xor
cmpsb
mov
sub
imul
xchg
lock
xor
jbe
icebp
adcb
cmp
or
jne
xchg
arpl
pop
sub
loope
pushf
pop
jnp
jb
fcomps
repz
push
lahf
xchg
add
sub
aaa
mov
fidivs
cmp
inc
cwtl
pop
cmp
adc
xchg
dec
xchg
hlt
lahf
jns
insl
mov
xor
xchg
mov
nop
repz
pop
pop
dec
out
popf
or
mov
popf
ret
mov
push
push
sub
xchg
sub
xchg
push
int
pop
sub
stos
fisttpl
jo
jg
test
in
clc
mov
ret
mov
or
movsl
pop
js
and
test
ss
andl
cmp
sub
sar
repz
in
and
and
inc
jl
cli
push
sti
daa
imul
rclb
or
mov
mov
js
cmpsb
shll
ret
xor
xor
sbb
xchg
jns
popf
cmp
and
fs
sub
jae
imul
mull
int3
jo
push
nop
icebp
outsl
push
stos
pop
lahf
dec
pop
popa
sbb
call
scas
pop
mov
shlb
int
and
inc
popf
xchg
test
pop
xlat
xor
and
cmp
inc
adc
jecxz
lret
int
dec
mov
adc
xlat
mov
ret
mov
lds
lret
in
or
xor
fsubl
push
arpl
test
and
xchg
out
ja
shr
cld
ret
cmp
stc
push
cmp
les
fidivrl
adc
cs
rcrb
pusha
repnz
or
jbe
out
lods
decl
ja
dec
ret
push
lods
stc
in
scas
cmp
mov
mov
dec
jns
fwait
xchg
add
test
dec
stc
dec
and
pop
mov
popf
imul
inc
leave
sbb
mov
ja
idiv
outsl
mov
xchg
cmovp
inc
insl
adc
test
mov
mov
or
fprem
mul
mov
rorb
int3
lahf
mov
popa
out
pop
cltd
lds
or
les
fisttpl
ret
lret
les
mov
and
movsl
sahf
sarb
clc
sbb
pushf
sahf
mov
sub
mov
test
push
sub
js
jl
xchg
add
pushf
ja
repnz
daa
inc
pop
dec
pusha
jns
jecxz
fdiv
aad
psrad
jbe
mov
stos
fists
jg
pushf
icebp
cmpsb
jbe
icebp
xor
mov
imul
fbld
mov
add
mov
hlt
ret
or
movsl
add
scas
aaa
dec
ds
mov
std
xor
mov
and
iret
xlat
stc
mov
mov
lahf
ret
sub
insl
out
rcrl
addb
mov
jecxz
mov
cld
lock
push
jl
dec
les
fbld
sbb
push
clc
xlat
imulb
and
and
adc
xchg
xlat
mulb
nop
push
movsl
adc
dec
pusha
in
mull
fisttps
in
mov
cmpl
pop
mov
and
popf
scas
jge
pop
aas
cmp
or
push
pushf
mov
lds
ds
xor
and
fchs
push
sub
mov
insl
push
mov
mov
movsb
mov
mov
enter
repnz
test
pop
movsl
add
repz
lock
pop
and
pusha
scas
add
jg
iret
imul
fstpl
mov
jo
mov
enter
jge
jns
nop
orl
hlt
xchg
outsb
pop
stc
mov
insl
les
out
and
js
adc
xchg
mov
call
and
fucomip
mov
aaa
fdivrl
jmp
sbb
xorl
cmc
mov
loopne
ficompl
cmp
lds
xlat
fisubrs
push
xlat
jns
sbb
lcall
add
push
dec
dec
mov
or
adc
in
daa
test
fildll
out
aam
inc
mov
lahf
arpl
jl
sbb
out
sti
cmp
flds
ficoms
adc
add
mov
arpl
adc
mov
and
jo
movsb
jecxz
add
lret
div
sahf
rep
loop
inc
add
std
int3
inc
cmp
add
and
add
jmp
in
sahf
lret
xor
inc
push
int
in
test
inc
sahf
cmp
mov
mov
or
pop
rorb
xor
loop
add
das
or
jle
cltd
mov
out
adc
add
repnz
ffree
cmp
sbb
test
hlt
mov
cwtl
fcmovu
out
cmp
scas
inc
sti
les
cmp
popf
cli
push
mov
shll
mov
ljmp
das
inc
es
or
int
xor
xor
inc
lahf
fcoms
push
jne
sarl
jb
xor
mov
xchg
fstps
jae
xor
mov
jle
push
pop
ror
sahf
inc
mov
shufps
rcl
jae
xchg
jne
or
mov
add
andb
shlb
pop
inc
test
lock
fldcw
repz
cld
hlt
dec
and
pusha
arpl
mull
inc
push
mov
or
and
jg
out
outsl
mov
xor
fadds
ret
cmp
lahf
test
lret
xchg
push
pop
mov
call
jecxz
outsl
addl
or
jge
and
and
mov
cmp
jmp
fcomps
std
shrl
mulb
nop
ret
mov
movsl
hlt
cmp
lock
sahf
lock
and
cs
mov
xor
fwait
push
and
mov
in
sub
int3
dec
mov
sarb
nop
or
shl
loope
xor
out
inc
scas
push
xor
jne
mov
ja
gs
sbb
jle
js
out
movsl
mov
sbb
in
xchg
push
pop
movsl
push
mov
fnstcw
xor
test
add
outsb
fdivrl
ja
push
mov
ja
sub
jns
lods
nop
aaa
cmpsl
jecxz
aaa
aad
sub
mov
cmp
sahf
jae
sub
xor
scas
xchg
or
pop
loopne
arpl
test
xchg
sbb
pop
sahf
xorl
sbb
aam
in
cmp
lods
arpl
push
lock
mov
int
ja
mov
insl
popf
ficoms
or
loope
xchg
clc
adc
loop
inc
out
sahf
mov
mov
inc
shrb
inc
fs
jno
xor
mov
pop
aas
movsl
clc
cld
call
loop
daa
jmp
fs
and
pusha
loop
xchg
shrl
jmp
aam
into
jne
lock
test
adc
test
sahf
jbe
jns
push
cmc
mov
sub
clc
or
and
cmp
jl
push
and
sub
mov
pop
decb
les
icebp
xchg
xor
sub
cmp
push
in
push
push
dec
mov
cli
call
aas
ror
shll
jge
stos
cmp
pop
ljmp
sub
and
jae
pop
mov
cmp
jnp
shll
dec
mov
sbbb
sub
mov
xlat
aam
test
in
test
sahf
mov
in
into
lods
push
cmpl
mov
lods
mov
xchg
push
test
js
aam
pop
add
cmp
aaa
dec
push
lock
adc
aas
lods
xchg
and
add
je
sbb
mov
lahf
in
scas
jb
shll
cmpsl
push
adc
adc
mov
dec
xor
das
jmp
imul
in
js
push
inc
pop
or
push
repnz
daa
jo
xchg
shl
scas
mov
in
cltd
pop
loope
mov
imul
push
insl
cs
jmp
ret
jmp
mov
nop
add
mov
dec
imul
adc
out
add
jle
inc
push
test
jp
push
adc
jnp
mov
out
loopne
fists
and
test
mov
rcrl
sub
inc
xchg
fcomp
sbb
jno
xorb
lods
outsl
pop
lods
push
sti
repnz
int3
scas
mov
cli
ss
cmc
fcomp
add
inc
or
and
stc
pop
faddl
add
push
ljmp
xchg
shlb
and
jg
add
jge
mov
aam
lds
xchg
int
push
std
push
mov
ret
mov
repz
shl
es
rol
cmc
pop
push
mov
inc
pop
xchg
mov
ret
mov
add
mov
mov
pop
fs
cmpsb
add
dec
push
mov
hlt
adc
xlat
and
xchg
incl
out
data16
xor
push
pop
es
mov
adc
inc
js
clc
test
adc
js
aam
es
rorb
mov
clc
push
rclb
ss
ja
jg
mov
into
push
xchg
and
pop
out
fidivl
jno
das
sub
push
xchg
aas
mov
addr16
test
pop
test
lret
sub
je
sub
int
gs
adc
mov
popf
xor
test
loop
mov
dec
mov
fcomps
call
adc
ror
imul
js
fs
dec
mov
cmpsl
shll
in
popa
inc
xchg
lahf
inc
pusha
ret
mov
xchg
adc
mov
push
jae
clc
adc
mov
cs
jg
mov
mov
rol
adc
stos
or
mov
hlt
test
and
shr
shrb
mov
addr16
scas
lahf
and
mov
rorl
in
or
fwait
int
sub
mov
push
out
mov
push
and
cmp
sahf
fimull
popf
in
fucomip
mov
fsubl
shrl
or
mov
aaa
push
movsb
popf
shl
cmp
roll
sub
mov
add
jmp
negl
xchg
jge
push
stos
jl
dec
movsb
xchg
push
popa
xchg
or
pop
movsb
popa
and
imul
jecxz
jno
push
in
jmp
ret
jecxz
scas
xor
xchg
int3
cli
pushf
mov
add
cmp
out
xchg
es
in
in
outsb
mov
ja
imul
sbb
fwait
cs
jecxz
pushf
les
test
sbb
mov
lods
fldcw
fdivp
cmp
mov
jle
mov
scas
sub
inc
mov
scas
xor
adc
clc
push
test
fbstp
loope
jp
iret
pop
mov
sub
mov
jmp
xor
push
stos
dec
inc
push
cmp
inc
rol
loopnew
pop
xchg
ret
mov
mov
lret
dec
xor
adc
arpl
iret
sub
push
jl
xor
dec
dec
jecxz
hlt
in
in
jne
sbb
cmp
es
add
test
fisubs
mov
insl
mov
and
xchg
negl
dec
pop
ret
call
ljmp
daa
arpl
xchg
adc
outsb
cmp
mov
cwtl
sbb
ret
fsubrs
inc
or
sub
xor
pushf
iret
outsl
out
repnz
icebp
pop
aaa
cmp
xchg
jg
daa
add
pop
in
pop
loopne
popf
lods
pop
push
test
pop
scas
cmp
inc
movsl
lods
mov
lods
mov
imul
mov
jnp
push
fildl
aad
cmpsl
sahf
rolb
or
ljmp
stc
fsubrl
popf
sbb
loopne
mov
dec
xor
xor
pop
cmc
xor
sub
dec
push
xchg
into
ret
roll
push
push
out
loopne
test
daa
fsubrs
adc
mov
mov
add
fs
fisubs
test
mov
adc
or
in
add
leave
mov
out
rorl
orb
dec
pusha
repnz
in
xchg
push
mov
adc
or
xchg
mov
sub
daa
sbb
cs
xor
fyl2x
pop
adc
mov
pop
jo
sub
dec
arpl
xchg
int
jge
push
pushf
jmp
or
xor
xor
jnp
das
pop
shrl
mov
out
add
sub
pop
jae
adc
jmp
cltd
mov
mov
mov
adc
test
push
xor
pop
inc
scas
lea
bound
das
enter
rclb
xor
fildl
into
mov
sub
sub
insb
je
adc
icebp
pop
jecxz
adc
jno
pop
xor
stc
jp
pushf
sbb
adc
jb
aad
xchg
loope
pushf
sarb
mov
insl
pushf
jg
and
or
les
imull
mov
into
lret
stc
ret
mov
aad
and
aam
repnz
ja
jmp
das
push
xlat
rep
hlt
imul
or
lret
adc
imul
push
add
mov
std
into
imul
add
stos
mov
jo
lret
lea
repnz
ja
outsl
cli
pop
inc
lcall
nop
aaa
pushf
outsb
mov
mov
xor
js
jb
adc
cmc
inc
xchg
test
out
push
adc
das
out
push
enter
sub
adcb
inc
sbb
push
loopne
cmp
mov
cs
add
movsl
cmc
xchg
clc
and
sarb
popf
sbb
fstps
ds
lret
pushf
test
pop
dec
push
xchg
fwait
push
pop
dec
fistps
mov
mov
divl
adc
dec
xchg
test
sub
xchg
pop
jg
xchg
shrb
sahf
and
xchg
mov
loopne
xchg
pop
stos
in
mov
not
fs
mov
inc
out
xchg
imul
fisttpll
les
out
xor
push
push
iret
in
movsb
pop
pop
test
mov
pop
jns
cmc
ds
rclb
xchg
jae
add
mov
adc
xchg
icebp
rcl
and
hlt
xchg
icebp
mov
jge
icebp
loope
push
xchg
call
imul
jmp
hlt
push
fwait
and
arpl
jmp
jnp
jns
inc
in
jg
rcll
ret
ret
mov
xchg
iret
xor
je
callw
mov
xlat
fidivl
popa
jne
adc
mov
inc
popa
bound
jne
fxch
ret
hlt
mov
ror
in
mov
mull
outsl
pop
jg
push
cmp
shll
add
and
xchg
sub
pop
cmpsl
or
call
jge
sbb
lock
dec
xchg
dec
pop
out
out
push
fsubrs
mov
mov
and
loop
cld
or
std
add
cmpsl
jle
adc
shl
pop
fwait
mov
cmpsb
decl
fldpi
ss
out
movb
xchg
das
sub
add
sub
mov
dec
test
adc
or
jecxz
shlb
dec
lods
sub
inc
pop
mov
in
mov
iret
ja
mov
mov
aam
dec
lock
fnstcw
adc
xchg
or
xchg
mov
loope
jbe
cmpsl
rcrl
in
mov
xor
push
pop
insl
stos
mov
pop
push
pushl
mov
cmp
scas
out
pusha
mov
movsb
xchg
cmc
rcl
repz
into
int
add
mov
pop
bnd
ds
cmpsb
fnstcw
cmpsl
fcmovnu
adc
cmpsb
fadd
xchg
and
push
pusha
rcl
es
dec
sub
xchg
xorb
mov
mov
xor
xchg
cmc
lcall
imul
cli
cmpsl
ficoml
jbe
push
mov
in
rol
xchg
add
negb
int
cmpsl
jmp
cmp
cmpsl
xchg
mov
rcrl
outsl
cwtl
jmp
scas
push
ret
inc
xor
mov
jno
dec
xlat
xor
jg
mov
addb
push
lcall
add
cltd
std
mov
ret
inc
push
xchg
cmp
jo
jb
ret
scas
inc
testl
sahf
or
in
adc
scas
dec
jbe
ja
pop
imul
sahf
jge
and
out
aaa
push
aas
cmp
cwtl
sbbl
push
push
vcvtsi2sd
aam
mov
push
aas
push
cltd
inc
mov
daa
imul
or
pop
les
push
negb
popfw
cmp
or
mov
push
fbld
cltd
ret
sti
cld
sar
je
ljmp
add
dec
call
movsl
fidivl
notb
shlw
or
push
or
fnstenv
xchg
gs
jbe
insl
mov
xchg
xlat
and
fcoml
loopne
jnp
in
pop
repnz
inc
push
loop
pop
cmp
stos
sahf
shlb
and
sbb
xchg
dec
in
push
xor
call
test
mov
test
arpl
fwait
pop
xchg
in
pop
jno
fldt
inc
mov
and
mov
iret
dec
add
ja
push
xor
out
add
fstpl
lock
mov
jmp
shr
js
push
das
mov
xor
jle
adcl
dec
jge
lods
sbb
cmp
jo
cmp
pop
pop
stc
cmpsl
cmp
sti
jb
stc
arpl
popa
xor
shll
test
jns
icebp
cld
imul
jo
hlt
cmp
dec
jb
stc
fidivs
rorl
inc
lds
mov
sub
jne
pop
repnz
ror
adc
push
popf
aam
pusha
jb
pusha
test
mov
xor
pop
sbb
sub
push
jo
and
xlat
enter
dec
dec
push
pushf
rcrl
outsb
addr16
add
dec
repnz
jns
outsb
lahf
mov
and
and
inc
icebp
out
frstor
jb
loopne
jo
adc
mov
scas
mov
call
lods
and
cmpl
dec
cwtl
dec
ret
jns
int3
out
jb
pop
mov
lds
or
loop
mov
adc
cli
std
ds
int
xor
xchg
cmc
jb
or
sub
out
lahf
adc
outsl
jo
mov
jbe
div
xor
lock
push
inc
insb
push
xor
daa
aaa
mov
or
pusha
out
stos
jl
sahf
pop
dec
dec
pop
cmc
mov
jnp
mov
lock
pusha
push
mov
adc
scas
adc
in
div
cmp
cmp
js
das
pop
ljmp
imul
scas
aam
push
call
and
test
pop
mov
cmp
pop
mov
or
fcmovu
int
sub
xchg
push
pop
enter
jg
mov
xor
mov
sub
sub
cltd
xchg
in
add
js
fs
push
jno
popf
cmc
in
sarb
fsub
mov
adc
or
dec
inc
lret
sub
jmp
cmp
mov
mov
dec
filds
scas
mov
inc
stos
enter
movsl
loopnew
lods
add
scas
dec
dec
add
cld
rorl
lods
out
push
mov
jb
lahf
pop
cli
jge
or
mov
in
mov
les
std
cs
gs
cltd
test
adc
xor
inc
jmp
and
stos
pop
jne
ja
fstpl
adc
jmp
cmpsl
xchg
inc
clc
outsb
cmp
sahf
push
jl
lock
add
add
hlt
lea
cwtl
out
sub
mov
pusha
adc
jmp
ss
lahf
movsl
pop
lock
fcmovne
sub
arpl
rorb
sbb
jnp
cltd
mov
dec
test
loope
and
scas
insl
or
daa
sbb
fs
das
imul
mov
mov
adc
js
cmp
jno
sub
inc
lds
mov
or
dec
in
aas
arpl
sar
jecxz
jle,pn
daa
ret
test
fidivl
sbbb
jb
xchg
ror
mov
imul
lret
adc
adc
cs
xchg
mov
or
out
adc
mov
loope
ret
mov
cwtl
push
into
xor
js
int3
add
loop
mov
out
scas
jno
xchg
fwait
loop
je
add
mov
pop
test
adc
lods
and
jmp
fdivrs
movsb
das
pop
add
xor
imul
mov
pop
loop
aas
sbb
and
imul
ss
adc
xchg
lods
inc
cmp
xor
mov
ljmp
repz
imul
repz
jg
xchg
orb
pop
dec
mov
jno
mov
xchg
frstor
ja
sub
pop
lock
adc
push
outsb
shlb
sbb
sbb
ds
out
sti
andl
shll
nopl
test
orb
in
ja
pushf
rol
shl
jecxz
and
fistpl
cmp
pop
shl
into
cmp
adc
clc
mov
fsubs
mov
aaa
out
shl
add
push
lock
mov
xlat
mov
loopne
addr16
div
out
ljmp
fldl
loopne
pop
ds
and
mov
and
adc
je
js
cmp
icebp
ljmp
mov
insb
pop
pop
movsb
jg
enter
mov
push
sbbb
es
pop
out
fld
add
insl
aas
cmp
cld
enter
mov
jmp
enter
mov
aam
enter
add
mov
gs
and
cmpsl
or
xor
inc
scas
in
jle
shr
in
push
int
popf
sbb
repnz
rcll
ffree
repz
insb
mov
mov
jo
sti
and
dec
sahf
ffree
jne
mov
stc
popa
or
mov
ds
test
jle
mov
cwtl
out
fnstsw
xlat
dec
cmc
xchg
out
and
clc
sub
and
in
mov
fldl
arpl
ljmp
sub
hlt
push
sub
push
pop
imul
mov
arpl
dec
imul
shlb
add
xor
jge
pushf
xchg
mov
and
jp
cmp
mov
fidivs
dec
out
fldt
popf
repnz
ret
cmp
push
mov
ja
je
in
or
jg
inc
arpl
dec
lret
stos
cmpsb
outsl
rcrb
pop
lods
mulb
pop
push
rcr
mov
lahf
dec
jbe
xchg
mov
mov
or
mov
ds
loope
nop
push
pop
bound
add
rorb
jns
in
cmp
mov
test
dec
enter
pop
scas
and
pop
fdivrp
xor
xlat
sub
outsb
data16
sbb
int3
jecxz
enter
adc
nop
dec
loope
jae
and
int3
rcl
ret
lret
cmc
mov
mov
xor
lods
into
data16
mov
cmpsb
mov
jns
inc
and
js
loop
inc
mov
push
mov
imul
movsl
in
jle
in
clc
fsub
sub
movsl
jecxz
pop
cmpsl
mov
inc
pop
jle
out
xor
or
popa
jg
mov
popf
sti
fbld
lods
les
or
sarl
lret
in
xchg
ja
int
fldl
adc
rorl
pop
pop
jnp
in
test
aas
cmp
xchg
cli
pop
repz
push
jmp
jg
cmp
std
sub
fadds
xor
rol
push
icebp
push
ret
xor
inc
inc
ds
loop
popf
jg
jle
bound
xor
xchg
in
mov
sub
mov
repnz
add
out
xchg
es
mov
fs
mov
outsl
xchg
cmp
mov
jo
adc
idivb
fcomp
in
shr
push
shlb
mov
adc
sti
call
popa
jmp
fbstp
lods
xchg
sar
gs
sahf
fdivl
lds
in
pop
pop
aas
aam
stc
dec
icebp
repz
mov
mov
mov
mov
push
inc
icebp
pushf
mov
sub
das
jne
imul
sbbl
add
loopne
xchg
adc
ror
insl
mov
ljmp
rolb
push
inc
add
cmp
int
pop
add
pop
loopne
repz
push
jbe
or
inc
jnp
call
and
stos
adc
jle
push
pop
push
in
sti
inc
addr16
inc
xor
stc
or
push
out
dec
lret
es
mov
jne
fcoms
imul
mov
clc
push
xor
imul
js
push
rclb
stos
push
or
ret
test
and
sahf
cmp
fsubrl
icebp
inc
lods
rcrb
call
cltd
inc
fimuls
push
movsl
sub
sbb
loope
fists
lods
movsl
push
mov
fldt
or
xchg
lods
adc
lods
push
scas
lret
sub
fcompl
sbb
add
jecxz
lahf
add
pop
aam
fstl
pop
ret
mov
mov
arpl
inc
movsl
out
out
cmp
bnd
outsb
mov
std
call
xchg
notl
ljmp
test
pop
xor
imul
in
in
mov
das
mov
es
inc
pusha
add
inc
adc
enter
inc
bndstx
scas
xchg
push
psrad
sbb
sbbl
push
add
xor
cmp
mov
dec
inc
xchg
sub
dec
and
mov
out
jns
jl
mov
lret
fisubrs
imul
stos
xchg
sbb
jecxz
add
jbe
sbb
pop
stos
sub
xchg
mov
arpl
xchg
out
sbb
cwtl
leave
into
xor
cmp
mov
js
in
divb
data16
pop
out
xchg
lret
mov
daa
loope
rcll
mov
bound
sub
lret
int3
lret
mov
push
cmp
mov
dec
jl
int3
jo
cld
popa
xchg
in
adc
or
cmp
mov
push
mov
iret
test
push
aas
mov
dec
xlat
andb
pop
pop
sub
jmp
les
adc
pop
in
mov
sbb
leave
int
mov
out
enter
in
jmp
gs
push
mov
xchg
adcl
in
lds
sti
cmp
lcall
arpl
ret
sar
mov
mov
and
dec
out
mov
sbb
xchg
mov
xchg
add
addb
mov
dec
adc
dec
inc
adc
sti
lods
int3
pop
xchg
mov
inc
stc
popa
hlt
push
jecxz
in
add
xchg
outsb
je
pop
imul
xor
aaa
pusha
movsb
xor
in
xchg
mov
cwtl
int3
and
xchg
rorb
gs
int
es
leave
out
int
lock
clc
add
jnp
icebp
in
mov
stc
or
inc
out
ret
popa
cmc
jns
xchg
out
mov
fisttpll
jno
roll
mov
adc
jp
pop
cmc
pop
mov
pop
aam
lret
lea
orb
mov
adc
mov
andl
nop
enter
mov
mov
or
cmpsl
jmp
fildll
sub
pop
pushf
and
mov
mov
repnz
out
cmp
lret
jl
xchg
dec
in
mov
in
addb
mov
repnz
mov
cmp
and
mov
mov
xor
mov
orl
lock
push
loope
jbe
inc
fcmovne
aad
out
push
insb
cmp
loope
in
mov
mov
sub
mov
cs
outsb
out
cmpsb
movl
mov
xchg
mov
movsl
repnz
dec
push
jge
out
xchg
or
daa
stos
and
or
xchg
gs
rcr
push
repz
push
leave
adc
or
subl
mov
stos
jmp
cmp
jno
inc
out
push
outsb
push
sbb
pop
in
mov
mov
cld
mov
ffreep
cmp
insl
mov
nop
pop
stc
mov
popf
pop
shl
mov
add
addl
js
mov
and
push
jge
sti
pusha
aam
add
icebp
shlb
stos
inc
icebp
cwtl
int
imul
mov
enter
ja
push
mov
fisubrs
call
fmul
add
fldl
stos
loope
fs
out
push
not
shll
push
mov
lcall
xchg
dec
and
cmpsb
xchg
into
repz
test
mov
inc
lret
pop
xor
sub
lret
push
in
out
fldenv
or
cld
mov
pop
push
repz
sub
sbb
push
xchg
sub
fstl
ljmp
cmp
mov
psubq
inc
rcr
sub
or
cs
push
mov
ja
int3
dec
or
cmp
sub
imul
adc
nop
outsl
rcll
adc
push
adc
imul
jno
mov
int
fldcw
faddl
ret
adc
je
and
inc
popa
or
std
mul
lods
popf
insl
xor
out
gs
xor
stos
adc
clc
mov
cs
rcrl
dec
add
ljmp
loopne
adc
cltd
imul
fmuls
xor
pop
adc
into
out
out
sti
out
loope
mov
and
sbb
shlb
sarl
jecxz
push
test
gs
sbb
xchg
jo
into
imul
and
sbbb
jp
adc
lock
push
mov
das
or
andb
jns
xor
push
lahf
test
mov
inc
mov
test
cs
jge
pop
sysenter
mov
ljmp
les
add
addl
cmp
and
dec
andb
call
sahf
loope
sbb
scas
pop
sbb
push
lea
scas
mov
push
add
f2xm1
mov
sbb
loop
or
es
nop
test
jl
xchg
fnclex
mov
lods
cmp
adc
les
cwtl
cmp
mov
shl
js
mov
inc
mov
mov
cmp
cmpsl
or
sbb
push
cmp
clc
and
xor
sub
testb
mov
cli
outsl
or
nop
clc
push
add
shlb
xor
lods
mov
repz
and
stos
ja
lret
xchg
aas
rcr
and
idiv
scas
call
sbb
fnstenv
mov
hlt
jnp
dec
ret
or
pop
jo
pusha
xor
inc
fimull
or
repnz
pop
inc
subl
int
fidivs
sarb
rcrl
cli
mov
mov
add
lock
bound
rcrl
jne
sub
mov
jecxz
add
jae
enter
scas
adc
icebp
fildll
jmp
push
pop
mov
pusha
testl
ds
ss
fdivrs
mov
mov
mov
scas
out
mov
pop
xor
insl
mov
popa
gs
out
jb
xor
and
adc
sub
mov
and
pop
ljmp
xor
out
sahf
in
arpl
mov
ret
sub
pop
aas
mov
repz
adc
or
aas
rcr
cld
cld
mov
or
add
add
cmpsb
xchg
mov
popf
xchg
das
aas
push
dec
jl
fldcw
dec
hlt
or
xchg
and
dec
push
push
dec
cld
inc
lods
xchg
xchg
shll
mov
sub
add
adc
rcll
ret
loope
cs
mov
dec
adc
ss
fcomip
push
insl
sub
mov
sbb
lds
push
xor
sub
fsubp
cmp
dec
gs
lret
and
enter
push
test
xor
push
dec
mov
ficoms
jne
lahf
in
push
push
decb
adc
jge
jo
adc
pop
cld
mov
shll
mov
imul
ds
adc
popf
mov
mov
xchg
xor
test
cmpsl
adc
inc
adc
xchg
mov
in
ja
das
popf
int3
fldt
lods
inc
cmp
leave
mov
cmp
loopne
xor
cs
leave
or
push
dec
jmp
loope
repnz
xchg
cmp
lcall
push
jl
push
aaa
xchg
and
test
pop
shll
lahf
xchg
xchg
faddl
in
lcall
mov
cmp
push
fidivl
sbb
adc
jbe
shlb
pop
push
push
mov
push
push
aaa
repz
sbb
mov
inc
testb
shll
jno
test
xor
lret
call
negl
aas
dec
lds
or
enter
popfw
call
and
test
push
xchg
shrl
ds
cmp
sarl
test
shll
sbb
out
mov
cltd
aas
mov
xor
sub
and
in
in
or
imul
inc
cmpsb
lret
dec
lock
popa
xchg
mov
jne
or
int3
or
lret
into
push
cmp
ljmp
adc
and
mov
cmp
rol
stos
cli
cmp
das
pop
or
xor
lret
sub
shl
sbb
push
in
out
sbb
loop
out
iret
lds
aas
out
mov
call
mov
or
mov
inc
or
jnp
out
mov
loope
jnp
rclb
gs
imul
xchg
fstps
lret
mov
xor
mov
dec
data16
loop
mov
xor
or
xor
adc
out
cmc
pop
xchg
jo
repnz
inc
js
mov
mov
jmp
pop
shl
cmp
in
iret
lock
cld
pop
mov
mov
add
xor
pop
xchg
clc
xchg
repz
cli
push
sub
pop
cmp
mov
sbb
jmp
jno
orb
push
xchg
mov
mov
push
popf
adc
pop
mov
int3
repnz
xor
cmp
cmp
and
repz
dec
out
fsubrl
dec
int3
pop
cmp
shll
sahf
repnz
cs
fstpl
out
cmp
and
inc
xchg
in
or
mov
mulb
mov
jmp
or
imul
pop
js
imul
lahf
xor
jp
cmp
sbb
pop
xabort
mov
pusha
and
test
push
sarl
mov
hlt
xchg
xor
cmp
mov
es
mov
push
sbb
jle
xor
ret
or
mov
jnp
lea
dec
sub
stc
jae
adcb
push
movsl
ljmp
jge
jno
cld
pop
mov
subb
sbb
and
add
add
cmc
out
mov
inc
pop
orl
xor
imul
cwtl
cmc
aas
out
sbb
cld
out
jne
cmp
adc
mov
ja
or
fsts
inc
and
mov
lahf
add
xor
aam
clc
mov
push
mov
mov
dec
pushf
movsl
xchg
fistpll
sub
and
or
mov
add
aas
shll
mul
leave
movsb
popa
shl
adc
test
cmp
xchg
test
add
push
mov
and
xchg
or
xor
xchg
les
or
and
dec
lods
pop
sbb
in
pusha
stos
sahf
pop
sbb
push
add
pop
fiaddl
leave
jnp
ret
sub
scas
and
gs
clc
inc
xchg
in
cmp
and
stc
and
imul
movsl
ret
aas
mov
inc
fbstp
out
adc
inc
icebp
lds
push
std
sbb
sbb
add
pop
mov
dec
jle
test
cmp
sbb
and
in
sbb
cmpb
icebp
les
lahf
hlt
jbe
mov
mov
dec
out
out
pop
je
divl
mov
je
lods
cmc
xchg
es
aad
test
mov
xor
inc
xor
cltd
adc
lret
push
and
ljmp
add
fisttpl
popa
aad
dec
mov
pop
scas
cmp
in
mov
inc
in
dec
cli
test
cmc
out
push
xchg
fcomi
mov
inc
jl
jmp
push
scas
cmpsb
call
les
sbb
aad
jne
mov
jo
add
push
insl
test
aad
mov
sub
and
and
in
out
mov
pop
push
push
or
push
mov
push
cs
jno
lock
ja
mov
cli
sub
out
push
mov
add
inc
xchg
lods
lret
outsl
pop
mov
out
or
cmpsb
cmp
push
orb
leave
stc
push
scas
inc
out
int
aam
vpaddb
sbb
hlt
dec
pop
enter
and
es
popf
mov
adc
pop
push
lock
ret
inc
stos
xor
pop
les
fsubl
jbe
inc
sbb
xlat
andb
testb
jae
fcmovnbe
in
repz
fs
leave
mov
mov
lret
inc
out
int3
and
jae
sub
icebp
sub
imul
repz
icebp
mov
cmp
mov
sub
scas
fwait
lret
out
sub
stos
bnd
pusha
sahf
sti
inc
das
jl
and
mov
jl
inc
inc
shrb
popa
scas
inc
adc
inc
fwait
outsl
je
push
fbld
lcall
lret
push
lahf
fnstcw
or
mov
mov
inc
repnz
repnz
jno
ljmp
js
loopne
inc
jmp
cmp
fildl
dec
xchg
sarb
enter
gs
ja
and
int
cld
fidivl
xchg
adc
xchg
imul
jo
out
sbb
jmp
mov
jl
inc
xchg
jmp
mov
jl
fwait
rorb
imul
in
loope
jl
mov
mov
arpl
icebp
mov
mov
fcoml
imul
mov
mov
mov
cs
in
jecxz
movsb
outsb
call
mov
clc
rorl
cld
test
jmp
cld
mov
sbb
lahf
loopne
fldlg2
xchg
and
push
inc
out
sarb
arpl
out
pushf
add
xlat
jbe
cs
pop
and
pop
shll
jno
and
or
jecxz
xor
jg
fcmovb
jae
push
loope
dec
aam
jge
push
dec
sbb
lds
cs
mov
inc
shll
addb
mov
scas
jns
adc
ficompl
adc
jp
mov
xchg
dec
insl
jg
pop
out
mov
pop
push
in
or
lds
add
icebp
jp
in
xor
push
cld
push
xor
iret
mov
sub
mov
mov
or
mov
fcmovnb
inc
std
jle
mov
pusha
sti
scas
lret
pop
loop
je
sar
pusha
and
jbe
lds
in
adc
adc
mov
repnz
fisttps
cmc
xchg
cmp
mov
inc
shr
fcomp
jge
cmc
mov
rolb
xchg
fs
jecxz
js
outsb
out
outsl
std
mov
sub
xchg
fwait
mov
adc
push
clc
fcmovnbe
inc
add
jge
addr16
mov
es
lahf
pusha
out
sti
mov
add
jg
jnp
popf
mov
cwtl
pop
adc
fsub
mov
out
scas
out
fstpl
mov
inc
pop
mov
and
and
nop
enter
arpl
movsb
js
out
push
or
add
jo
mov
mov
roll
lret
test
push
add
movsb
pop
pop
jmp
push
test
xchg
cmpsl
rolb
hlt
jbe
lret
mov
sbb
sbb
pop
stc
mov
daa
sbb
js
and
pop
les
jo
out
fldt
or
adc
lret
xchg
add
mov
add
push
movsl
dec
int3
mov
sbb
icebp
cltd
lds
or
xchg
mov
fdivl
js
les
or
scas
fisttps
movsl
in
inc
popf
sbb
loopne
leave
fbld
in
call
add
pop
pop
adc
xchg
pop
sub
push
repnz
add
roll
mov
jle
xchg
mov
loope
sbb
pop
int3
xor
sub
aam
das
ds
xchg
insb
mov
mov
mov
insl
mov
aas
dec
mov
jg
jecxz
sub
into
lcall
sub
sbb
lret
movsb
pop
mov
cmpsb
cs
fcoms
jp
insl
xor
ficompl
and
dec
mov
pop
and
loopne
jae
cwtl
mov
xorl
in
jl
mov
lret
and
daa
rcll
jbe
and
nop
mov
fs
pushf
lret
fmul
pop
pusha
jmp
lret
mov
jmp
push
shll
enter
or
jbe
jno
das
mov
xor
pushf
test
enter
out
adc
cmp
mov
pop
into
sbb
mov
mov
ljmp
add
sub
imul
cli
push
jae
fsubrs
lods
mov
ret
push
pop
adc
cmp
xchg
cli
xor
movsb
stos
add
cmc
push
das
mov
push
ja
adc
cld
sub
pop
ljmp
mov
mov
repz
xor
into
gs
stos
outsb
rorl
cld
fldcw
out
or
inc
dec
adc
pop
push
in
cmpsb
xchg
push
inc
arpl
mov
aam
sbb
jns
or
xchg
fiadds
jae
clc
mov
mov
jmp
inc
daa
or
hlt
jb
inc
stos
inc
lret
push
push
rcll
fimull
test
test
loop
jl
sahf
lds
cld
lods
js
adc
cwtl
repz
icebp
loope
jmp
and
mov
mov
add
rcrl
mov
mov
out
popa
adc
pushf
or
es
rclb
out
sbb
inc
das
mov
add
xchg
lret
add
push
lahf
test
fildl
imul
leave
lds
fdivl
mov
xchg
sub
cli
or
out
and
enter
or
push
or
mov
clc
loope
popf
or
mov
pop
mov
or
clc
insl
cwtl
mov
insb
adc
jb
xchg
in
fs
cs
test
jno
adc
mov
or
and
clc
out
pop
xchg
dec
push
sbb
pop
in
sarl
ret
pushf
fpatan
lret
lahf
ficomps
enter
loopne
out
add
mov
mov
mov
shrb
outsl
iret
shrb
outsb
add
xchg
iret
mov
cmp
rcll
mov
in
ds
inc
or
lock
sbb
scas
pop
cmp
lret
enter
or
hlt
lods
or
and
mov
mov
fnstsw
xor
jmp
xchg
xchg
fdivs
xor
mov
fsubr
xchg
ret
pop
rorb
xlat
jecxz
cmpb
jge
test
push
add
fdiv
dec
mov
push
pop
xlat
and
pop
sbb
xchg
jp
xor
sub
lret
jns
sbb
ja
jbe
xchg
repz
insb
call
cld
ljmp
cli
or
push
jl
decb
xor
adc
and
push
lcall
sti
scas
cmp
or
fdivrs
pop
ss
push
pushf
xor
cmp
or
es
push
jg
xor
loopne
inc
jo
cmc
sub
arpl
cmp
jmp
xchg
mov
cmpsb
jb
mov
xchg
jle
or
sti
xchg
jbe
xchg
adc
mov
jmp
xchg
call
arpl
push
into
pop
lahf
xchg
jnp
mov
adc
mov
and
out
mov
push
mov
es
xor
aaa
js
add
sahf
jecxz
pop
cwtl
clc
or
cmp
mov
cmp
sub
out
cli
lahf
out
in
mov
cmpsb
int
leave
lock
cli
sub
mov
ret
insl
mov
aam
ljmp
jo
pop
fildll
pop
lods
hlt
add
jo
in
add
adcl
xchg
int3
adc
mov
xor
mov
filds
jle
push
xor
mov
mov
testl
push
cs
sub
popf
mov
add
ficompl
in
popa
ficoms
and
mov
test
rcl
adc
jmp
fstpt
mov
orb
push
sub
cltd
push
xchg
xor
sub
daa
cmp
adc
lret
sub
wbinvd
mov
rolb
imul
mov
add
cmp
sub
scas
push
adc
xchg
jo
sub
aam
xchg
out
jl
stos
cld
fs
push
mov
push
scas
ret
ja
lahf
sbb
add
push
addr16
sub
lahf
add
bound
neg
xorl
fs
sahf
fcmovu
imul
xor
movsb
ja
xchg
subb
sahf
xchg
lea
pop
data16
push
cmp
xchg
jecxz
fists
jne
dec
bound
sub
rolb
jle
jmp
pop
lahf
push
and
xchg
cs
je,pn
insl
pushf
jo
shr
mov
xchg
fcomps
add
dec
sbb
mov
cmpsl
imul
testl
lea
mov
imul
cmpsl
jb
icebp
das
xor
or
fisubl
aas
out
sbb
jecxz
push
adc
xchg
shl
mov
fptan
inc
clc
add
push
out
cli
jp
mov
inc
into
mov
push
in
lahf
fdivrp
mull
ret
ret
aaa
lock
sbb
nop
sbb
xchg
fistpl
dec
in
mov
lods
ss
pop
mov
adc
outsl
jge
jmp
and
jae
mov
push
jb
mov
mov
scas
and
enter
mov
imul
fcos
aad
inc
cld
repnz
fcmove
orb
xor
cmc
add
fisubl
repnz
test
push
outsb
stos
in
xchg
adc
cmp
repz
imul
pushf
xchg
pop
testb
push
fisttps
mov
push
push
jmp
cwtl
sub
into
out
or
adc
push
adc
add
jmp
xchg
pop
aam
dec
add
das
pop
pop
bnd
out
aam
sub
ret
rcr
mov
pop
lea
or
inc
cs
add
dec
movsb
out
cs
lods
out
or
pop
mov
dec
lea
lods
fildll
xor
jae
mov
mov
lahf
out
stos
mov
xor
cmp
divl
aad
lret
pop
pop
std
or
out
xchg
sbb
mov
jle
outsb
adc
in
push
xchg
jle
sbb
mov
and
mov
mov
in
out
push
int3
add
ret
inc
and
repz
add
add
pusha
sub
or
subl
mov
pop
add
add
daa
jmp
fcmovb
fucompp
cmp
test
mov
filds
test
inc
in
js
lods
pop
push
jmp
push
test
sti
loop
or
cmp
or
inc
adc
lds
dec
push
insb
push
xchg
push
xchg
mov
cs
in
jbe
mov
cs
aas
ljmp
push
clc
test
out
mov
jbe
push
out
and
cld
jle
fmull
iret
bound
push
adc
rcll
test
mov
jae
fld
fsubp
push
cld
int3
rdmsr
leave
js
loope
incl
jle
test
xor
and
mov
mov
movsb
or
push
cmc
fadds
rclb
and
stos
xor
in
xlat
or
lahf
aad
ss
test
xchg
repz
imul
inc
xchg
xor
in
add
dec
sbb
fimuls
cmp
inc
xor
in
dec
xchg
int3
scas
sbb
sub
lock
insl
movsb
loop
nop
jmp
sarl
sbb
inc
pop
push
cmp
daa
fists
imul
test
sarb
sbb
bound
in
insb
hlt
inc
enter
imul
jb
xchg
sub
repz
mov
pop
fidivs
jmp
xchg
jnp
fsubrl
sub
push
mov
stos
addb
aas
mov
push
test
daa
cld
pusha
mov
xchg
or
cmp
das
cltd
rolb
pop
fwait
gs
add
push
sarl
pop
push
scas
adc
push
out
ljmp
icebp
sub
mov
and
arpl
add
aaa
push
pushf
fisubrs
sti
daa
pop
pop
aam
mov
push
inc
leave
push
add
pop
aas
enter
xchg
jl
pop
push
mov
mov
outsl
xchg
push
es
imul
les
push
ret
sahf
push
xlat
ret
mov
in
fcompl
fstl
imul
mov
roll
mov
and
or
xor
fisubl
mov
movsl
or
adc
gs
shrb
icebp
and
or
cmpsl
lahf
sbbb
cli
dec
enter
test
inc
clc
inc
jb
mov
xchg
push
sub
insb
out
or
out
ljmp
mov
fcoml
jb
data16
pop
rorl
loop,pn
push
aam
sbb
outsb
mov
fimuls
pushf
int
fcomp
jmp
fs
mov
xlat
or
fmuls
imul
roll
repnz
inc
jno
data16
addr16
add
and
movsl
loope
fimuls
xor
dec
mov
leave
jge
aas
loope
pusha
mov
roll
rcll
xchg
jae
mov
push
sub
int
inc
sbbl
mov
shll
sbb
xor
sub
cmp
imul
sub
leave
andl
lods
idiv
lret
daa
mov
pop
rclb
sub
loop
xchg
icebp
cmp
mov
or
es
icebp
mov
call
jns
lret
mov
ljmp
jbe
push
pop
les
pop
xor
lahf
das
aad
add
sub
in
adc
out
nop
lret
jbe
xor
mov
stc
add
stc
orl
hlt
gs
dec
jmp
stos
popa
lods
xchg
mov
adc
inc
out
add
leave
mov
in
cs
cld
push
imul
into
stos
jns
mov
dec
or
arpl
out
ficoms
fcomps
jecxz
pop
insl
jmp
xchg
repz
mov
ja
mov
sub
lds
mov
daa
push
mov
cmpsb
jp
fdivrl
inc
cmpsl
push
jo
in
ficoml
and
dec
cli
roll
adc
or
subb
fldt
arpl
rorl
mov
push
loope
arpl
roll
mov
aam
aaa
mov
icebp
xchg
les
jmp
insl
and
and
cli
pop
mov
fcomi
cli
shll
xchg
scas
call
sbb
sbb
jp
lock
int
xchg
iret
mov
and
shl
and
or
xor
aas
pop
mov
lahf
inc
mov
inc
outsb
mov
ljmp
xchg
push
test
dec
push
mov
mov
mov
mov
aas
movsbl
mov
cmpb
mov
cmp
add
aad
sbb
sub
sub
add
dec
sub
mov
cmp
mov
imul
fcompl
outsl
jp
cmp
in
fwait
pop
pop
sbb
and
sub
out
xor
out
lahf
rol
pop
popf
mov
inc
adc
insl
push
mov
xor
mov
lret
adc
fsubrs
stos
mov
mov
jp
lret
aaa
jmp
and
pushf
xchg
pop
ja
lret
add
cwtl
jecxz
pop
xor
popf
lahf
mov
push
inc
mov
pop
scas
pop
mulb
xchg
fstps
mov
mov
in
xorl
inc
mov
cmpl
adc
mov
push
lea
lods
lahf
push
xchg
adc
ds
js
aaa
jmp
sub
xor
push
jl
push
dec
shlb
xor
insb
in
mov
adc
fdivs
lret
push
repnz
xor
clc
fidivrl
xor
icebp
and
sti
push
sub
inc
nop
sbb
insl
adc
int3
ljmp
sbb
or
jnp
mov
mov
jns
jo
divl
add
jle
imul
test
or
inc
push
or
js
or
xchg
mov
outsl
test
or
inc
inc
call
cmp
sahf
mov
push
xchg
pop
cmpsb
mov
sbb
int3
jne
mull
fldenv
in
aas
fisubrl
inc
cs
fistpl
insl
push
dec
andl
imul
jns
jmp
shlb
or
mov
mov
fdivs
aas
mov
out
sub
add
cli
push
sub
inc
sbb
push
adc
mov
pop
sbb
leave
fucomip
stc
push
notl
xor
inc
and
fnstsw
sbb
sub
cmp
repz
mov
push
test
jmp
jne
cmpsb
mov
fmuls
jle
stos
push
mov
cmp
addr16
add
jmp
call
mov
fbstp
sahf
inc
test
mov
pop
in
ljmp
popa
jge
mov
test
mov
call
inc
pop
mov
lret
arpl
xor
movsl
push
add
mov
push
loop
sbb
cld
and
shlb
mov
mov
cld
enter
inc
push
movsb
aam
rorb
cmp
jo
outsl
xchg
xchg
daa
insb
ret
xchg
mov
xchg
mov
ret
jl
hlt
addr16
adc
cmp
sub
dec
dec
nop
jmp
jmp
dec
or
outsb
sbb
add
xor
es
test
imul
test
dec
addb
das
mov
xchg
ss
lea
jge
in
push
imul
pop
dec
fs
jg
jmp
add
sbb
fmull
out
xchg
sbb
imul
sbb
pop
jl
xchg
ret
gs
xlat
fidivrl
inc
out
push
xchg
xchg
xchg
out
enter
repnz
jg
add
pop
mov
dec
lds
fdiv
dec
mov
leave
sbb
fwait
and
cs
insb
decl
ljmp
sbb
mov
test
jo
cmp
pop
inc
sub
call
mov
repnz
out
fiadds
cmpsb
or
lock
add
lcall
dec
aam
decl
lock
int3
in
inc
cld
loop
adc
jo
imul
or
jnp
test
lods
aas
es
xor
jb
cmp
jns
pop
jae
jp,pn
push
and
lret
xor
pop
call
decl
dec
ljmp
nop
call
sti
lcall
mov
sub
sub
push
das
pop
pusha
push
xor
sub
imul
and
lcall
adc
call
push
loop
nop
enter
jmp
shr
dec
repnz
push
fs
inc
inc
jg
dec
fsubr
lods
sub
push
add
and
xchg
dec
mov
lea
je
add
fsubr
and
jmp
clc
test
dec
sub
pop
call
mov
push
xor
in
mov
movsb
and
adc
testl
ljmp
mov
xor
cwtl
dec
or
mov
xorl
xchg
or
fldt
sub
in
mov
or
push
cld
loop
jmp
inc
push
pop
jne
cltd
loope
dec
dec
push
outsl
iret
sub
rclb
xor
or
cmp
dec
inc
daa
in
pop
aad
jb
xchg
std
sub
lods
xchg
incb
xchg
dec
sub
test
add
push
stos
jne
imul
out
shl
mov
pop
into
sub
lret
idivl
cli
sti
dec
stos
insb
lock
in
pop
adc
adc
mov
arpl
inc
repz
jbe
push
or
call
add
push
push
lock
sub
cmp
lea
jg
jmp
inc
aas
repz
test
mov
icebp
pop
and
not
dec
in
hlt
lock
mov
jmp
ret
ljmp
out
dec
sub
adc
sbb
fs
call
negb
sti
mov
mov
fldl
jmp
dec
xor
in
push
pop
jle
sbb
xchg
cmpl
sahf
sbb
call
inc
dec
xor
test
push
push
stc
es
sub
in
sub
sti
nop
lock
repnz
cs
lret
xchg
mov
push
xchg
dec
pop
bound
ret
hlt
inc
cli
call
xor
xchg
lock
ret
pop
push
inc
cs
pop
lock
ror
add
je
mov
popf
cli
mov
dec
loope
adc
out
scas
cs
in
pop
pop
mov
dec
mov
stos
inc
fistpl
jmp
imul
cmp
mov
inc
aaa
sub
popf
or
lods
or
sub
mov
inc
mulb
xchg
push
and
stos
or
ds
lahf
ljmp
mov
cmp
adc
dec
adc
test
dec
movb
mov
and
call
daa
jg
in
lock
adc
into
xchg
sub
pop
out
cltd
movsl
mov
dec
mov
mov
notl
sub
aaa
repz
dec
orb
cltd
push
add
aam
fsubr
fxtract
pusha
jp
repz
cmp
ficompl
ljmp
rorb
daa
out
mov
xchg
repnz
mov
push
lock
sub
xor
mov
sub
ficompl
jecxz
mov
cld
call
les
bnd
ljmp
dec
in
adc
jmp
adc
test
imul
jp
icebp
and
in
cmp
ljmp
push
ffree
pop
enter
jno
test
cmp
enter
cmpsl
rcll
cmp
inc
lods
pop
repz
arpl
sbb
mov
and
in
push
and
shlb
popf
jae
arpl
fsts
rorb
dec
scas
mov
int3
add
scas
pop
stos
movsb
inc
or
mov
enter
sahf
and
lock
cmp
fldcw
and
xchg
insb
push
orb
push
mov
mov
popf
mov
lahf
leave
cmp
dec
xor
dec
cmpl
add
clc
push
pop
cmp
jbe
sub
mov
orl
fsubl
sbb
cld
test
decl
mov
or
xchg
icebp
jnp
test
mov
add
jns
push
jp
insl
sti
xor
aaa
pusha
xchg
add
ret
sbb
fstl
jns
pop
jl
dec
jle
and
clc
push
and
push
cmp
inc
cmp
popl
cpuid
fdivrs
jne
xchg
mov
std
fstps
xchg
push
cmp
xchg
shrb
and
adc
add
shlb
mov
icebp
jecxz
rolb
sub
scas
inc
xchg
es
sbb
adc
scas
push
and
loop
fs
in
pop
dec
mov
adc
rorb
fstps
push
out
adc
xlat
pusha
cwtl
enter
add
push
inc
cmc
test
sbbl
mov
pop
ds
adc
shlb
fistpll
stc
orb
cmp
inc
shl
add
sub
int3
fstl
rol
sub
jge
loope
xchg
pop
in
xchg
mov
rcll
pop
xor
push
dec
pop
in
mov
or
lret
enter
and
add
or
xorl
sub
rorb
sub
call
sub
ljmp
pop
lret
outsl
movsb
adc
arpl
xchg
leave
jnp
cmp
jb
mov
mov
movsl
ss
add
nop
jns
mov
gs
das
inc
sbb
pop
adc
int
pop
in
mov
sub
pop
pop
rolb
outsl
mov
xchg
aaa
cld
jl
add
dec
pop
lods
mov
sub
aam
sub
fisubrs
lret
aam
int
or
mov
lds
jno
shl
mov
jg
lea
pop
setp
mov
popf
mov
daa
ss
sub
test
stos
scas
mov
imul
add
nop
pushf
mov
pop
push
sahf
dec
sub
jmp
pop
jecxz
popa
cmp
stos
sbb
movsb
mov
dec
xor
sarl
add
mov
cmovl
push
sub
sub
or
inc
in
adc
fnstenv
addl
sub
arpl
js
ss
push
cwtl
loop
stc
test
and
fabs
popa
aas
cmp
dec
aas
and
dec
pop
jb
push
dec
imul
sbb
cli
sbb
js
arpl
daa
ficompl
repnz
add
addl
mov
push
jmp
or
xor
adc
inc
fimull
sbb
js
in
repnz
or
add
loope
pop
in
gs
pop
cli
outsl
and
lcall
js
icebp
fdivrs
pop
rclb
lods
and
aas
mov
cld
out
movsb
pop
or
or
test
push
shr
arpl
push
mov
push
and
adcl
or
fimull
push
cwtl
rcll
push
iret
jns
dec
nop
sub
inc
hlt
add
mov
fisubrs
sbb
inc
and
mov
fimull
call
and
mov
and
xchg
gs
push
mov
xchg
mov
fdivrs
cli
fmuls
and
clc
or
mov
xorb
cmp
popa
mov
xor
mov
stc
scas
jmp
hlt
mov
or
adc
mov
jns
mov
jb
dec
cmpsl
les
les
jae
sub
xor
jmp
cli
mov
sub
jg
loope
inc
cmc
lcall
inc
lahf
cli
dec
cwtl
ljmp
sub
mov
insb
mov
sub
loope
fildll
rcrb
mov
push
jno
out
ret
adc
cltd
rcrb
xlat
stc
ficomps
lret
out
dec
dec
lahf
push
les
lret
sbb
push
dec
mov
test
shlb
xchg
cmp
jbe
push
decl
mov
in
adc
push
and
adc
popa
lea
aad
imull
push
mov
fldcw
jae
pusha
lahf
jbe
scas
mulb
in
popf
and
cltd
mov
xchg
jecxz
mov
dec
cmpl
add
adc
hlt
lret
in
mov
add
xchg
adc
mov
add
and
add
pop
std
push
add
xchg
add
loope
test
in
inc
leave
mov
mov
inc
scas
mov
test
rcl
cmpsl
mov
mov
adc
push
pop
cmpsl
cltd
xchg
jo
ret
pop
mov
xchg
jo
ret
rcrb
xchg
jo
ret
aaa
loop
out
mov
cmpsl
add
fsubp
inc
push
jecxz
out
mov
mov
dec
sbbb
jmp
mov
mov
enter
pushl
sub
shlb
mov
pop
cmpsl
add
hlt
xchg
mov
loop
popf
lahf
cwtl
int
jo
fwait
dec
arpl
cmp
enter
dec
xchg
mov
out
shl
push
lret
out
push
pop
gs
rol
popa
or
rorb
xor
repnz
xor
jecxz
jbe
leave
xchg
ret
jbe,pt
leave
xorl
xchg
dec
mov
loop
xchg
push
jno
dec
xlat
dec
sub
popf
jno
lea
xor
repnz
pop
idiv
sbb
pop
scas
sub
mov
mov
mov
mov
das
or
xorl
lret
aaa
and
clc
lret
loopne
loopne
std
data16
test
mov
jno
fs
subl
mov
lock
xchg
ljmp
sbb
jae
test
loope
gs
arpl
dec
cwtl
add
ret
jae
xlat
cld
imull
mulb
orl
jae
pop
lods
adc
outsl
jmp
xlat
mov
ret
int
mov
ret
iret
jns
lret
cmp
mov
lret
jmp
and
lret
pop
jnp
icebp
scas
pop
mov
mov
xchg
in
mov
adc
or
jmp
sahf
movsb
xor
jns
outsl
movsb
and
push
call
xchg
call
test
cld
jecxz
pop
mov
ret
mov
mov
je
repz
sub
pop
mov
fdecstp
ret
fildl
pop
std
xchg
mov
and
mov
notb
cwtl
mov
jecxz
mov
and
shrb
movsl
aad
ds
mov
push
sbb
mov
cmp
xchg
aaa
sbb
pop
loop
jle
shlb
ja
hlt
inc
or
jns
popf
jbe
pop
mov
ret
mov
xor
aam
jl
inc
xchg
dec
negl
cmp
push
jecxz
inc
mov
mov
shlb
repnz
ficomps
mov
imul
inc
pop
pop
push
stos
sahf
mov
mov
rclb
push
shl
mov
dec
mov
push
mov
adc
sub
shl
mov
lods
stos
add
leave
fwait
int3
jl
dec
mov
mov
ficomps
pop
or
jge
push
repz
js
out
int3
jno
and
in
in
js
ret
cmp
sub
cld
stos
out
rcr
and
in
rolb
push
jns
fcmovbe
or
adc
lods
shlb
int3
mov
mov
lea
add
jp
and
dec
popf
push
mov
cmc
push
out
lcall
in
fwait
cmp
pop
ss
dec
nop
negl
add
or
pop
test
lds
inc
push
mov
in
xchg
lds
iret
mov
adcb
and
dec
xchg
stos
mov
inc
in
mov
cmc
push
ljmp
nop
mov
jge
jmp
xor
cmp
sub
orl
pop
pop
mov
in
cs
pop
cwtl
mov
jmp
mov
lds
iret
les
pop
sbb
subl
dec
adc
ret
outsl
adc
rclb
fisttpll
ret
rcl
xor
in
push
bnd
push
scas
pop
orb
jmp
xchg
xchg
cmc
test
ljmp
popa
out
ja
sub
xchg
mov
jmp
repnz
nop
mull
ret
sbb
sbb
push
sbbl
add
lock
lcall
shlb
icebp
jno
xchg
outsl
je
shl
add
sarl
mov
aas
inc
cltd
sarb
sbb
mov
icebp
imul
mov
jne
test
aaa
movsl
mov
sbb
lods
inc
pop
mov
jmp
test
mov
xor
xlat
adc
movsl
stos
nop
dec
mov
sbb
adc
out
arpl
add
mov
roll
shlb
testb
lods
adc
cmpsb
je
inc
addr16
pop
shrl
sub
push
in
leave
incl
cmpsl
rcrb
jne
stc
insb
adc
sbb
push
xor
pop
push
pop
insl
mov
push
mov
lds
fwait
xor
and
sub
xchg
add
pusha
push
scas
mov
or
adc
fdiv
add
mov
rolb
cmp
jno,pt
iret
cmpsb
fs
in
push
lock
ljmp
lock
dec
mov
jb
ds
jmp
xor
push
jno
xchg
or
xchg
js
cmp
ret
outsb
mov
test
lods
cmpsl
mov
pop
cmp
mov
lods
dec
xor
mov
jbe
xor
jge
adc
push
push
jmp
adc
pusha
cmc
mov
in
dec
out
xchg
inc
push
cmp
jecxz
xor
int
mov
dec
or
fadds
ret
and
xor
out
jecxz
bound
nop
aam
ror
mov
es
sub
push
repnz
leave
fmull
push
stos
flds
mov
sub
jmp
out
push
int3
mov
mov
mov
lock
dec
jbe
daa
and
inc
call
cmp
sarl
pop
ror
andl
push
dec
mov
sar
out
insl
mov
jl
or
cmp
sbb
jmp
dec
jno
iret
cmp
xchg
jmp
mov
repnz
cli
in
sbb
and
xor
adc
in
aad
sbbl
in
ds
sarl
fistpll
mov
arpl
fdivrs
cmpsb
enter
ja
mov
hlt
popf
jno
fidivrl
gs
mov
mov
pop
sub
jg
mov
dec
mov
out
int3
xchg
pop
xlat
and
pop
enter
enter
cmp
dec
jp
mov
inc
and
lds
cli
or
out
in
lods
and
mov
dec
or
cmp
lods
pop
lahf
pop
fsubrs
imul
arpl
or
cmpsl
inc
rorb
adc
cmp
xchg
cmpsl
or
es
dec
subl
pop
dec
into
lret
mov
dec
cld
pop
jne
test
push
popf
mov
call
push
add
cld
jae
pop
and
or
cmp
sahf
repnz
incl
adc
out
jmp
je
pop
xchg
inc
jae
jae
push
testb
int3
mov
and
xchg
inc
jmp
stc
cmp
mov
inc
iret
faddl
pop
and
scas
mov
jle
andb
int
jno
xor
negb
scas
scas
jl
dec
lods
xchg
mov
or
pop
in
lret
mov
pshufw
nop
push
inc
not
pop
inc
xchg
negb
jp
jp
dec
out
jns
cld
in
mov
pop
dec
sahf
adc
ret
jb
xchg
bound
loopne
rep
inc
sub
dec
icebp
and
mov
push
movsl
fcmovb
and
outsl
cs
mov
sbb
sahf
mov
and
sti
iret
sub
repnz
nop
repnz
es
cli
insb
dec
clc
xor
cmp
inc
jae
adc
and
imul
mov
rcrb
sbb
xor
daa
fs
cmp
enter
lret
mov
and
cmc
dec
sarl
add
lods
cmp
in
popf
outsb
in
mov
in
xchg
mov
loope
xorb
mov
ja
shll
or
mov
sbb
jnp
arpl
bound
fistpll
stos
movsl
das
cmp
outsb
js
sub
mov
loope
xchg
cmp
jp
mov
insb
add
testb
in
pop
sub
lods
out
fsubp
sub
mov
pop
mov
ret
cmp
pop
or
xchg
add
dec
shrb
mov
mov
mov
in
stc
sub
imul
mov
andb
push
mov
in
stos
stos
and
push
dec
aad
xor
pop
sub
cli
enter
test
movsb
imulb
bound
push
or
ficoml
out
cmp
nop
mov
xlat
push
mov
lret
mov
les
ror
pop
push
sub
pop
ret
lods
outsb
in
add
jle
decb
add
push
cmp
ret
inc
aas
inc
push
push
or
pop
aad
arpl
divb
xor
test
sbb
mov
and
idivb
movsb
jb,pn
pop
rcr
int
xchg
or
sbb
fstpl
jne
hlt
fmull
mov
arpl
adc
fsts
les
ret
pop
shll
mov
into
hlt
add
mov
ret
repz
mov
mov
mov
std
out
xchg
addl
or
dec
shl
das
jne
repnz
sub
sub
push
clc
jp
jb
rcrl
sbb
sub
mov
and
aam
and
aas
jg
add
push
ljmp
loop
in
repz
js
cmp
enter
xchg
into
cmpsl
aas
hlt
test
mov
popf
pop
mov
repnz
pop
popa
clc
xchg
pop
cltd
push
mov
mov
cmc
imul
and
fnsave
aad
lods
js
scas
sbb
lds
bound
outsl
push
aam
lea
mov
loope
lds
imul
push
jge
jge
loope
ljmp
andl
pop
ret
cmpsl
push
adc
pop
fnstenv
test
aas
aam
cmpsb
add
ss
sbb
add
cmp
mov
jmp
mov
inc
lds
ficomps
jno
sahf
push
sub
and
repnz
lcall
mov
jno
pop
pop
xchg
inc
shll
mov
adc
jle
pop
add
rcrb
cltd
adc
repnz
in
in
rcr
stos
ret
out
sub
jns
xorb
cwtl
cmp
aad
xor
push
out
clc
daa
jne
shlb
sarb
xchg
push
test
inc
mov
cltd
inc
mov
cmpsb
aas
test
mov
jge
lea
and
pop
test
out
lds
push
repz
mov
les
and
loopne
or
mov
es
adc
iret
fwait
push
fists
dec
cli
push
pop
or
aam
mov
scas
shlb
je
fwait
mov
aam
mov
mov
repz
cmpsl
jno
xor
push
inc
mov
mov
mov
jg
cli
add
insb
daa
xor
ret
mov
mov
fstps
test
xor
cmpsl
and
mov
cs
mov
mov
in
cmp
addl
es
bnd
xchg
call
shrl
movsb
sbb
mov
test
lds
filds
add
inc
mov
mov
xor
fldcw
xor
inc
inc
lcall
lods
pusha
addr16
sub
mov
mov
mov
jnp
inc
addr16
xor
inc
popl
je
adcb
bound
cmp
popa
inc
data16
mov
add
sub
or
jo
or
shrb
popa
jae
xchg
decb
xchg
mov
test
xor
loop
out
push
or
jno
out
es
lcall
sub
or
jmp
icebp
sub
inc
shll
mov
mov
sub
adc
sbb
sahf
cs
jbe
shlb
xor
cmp
pushf
imul
pop
jnp
mov
or
incl
cmp
arpl
jns
repnz
pop
jae
imul
jmp
inc
push
mov
cmpsb
addl
sub
out
push
nop
fstl
and
clc
les
lea
sub
jne
cmc
push
xor
xorl
mov
jne
es
inc
loop
add
pop
loope,pn
icebp
and
pop
cmp
xchg
mov
popf
icebp
test
div
in
mov
and
push
add
mov
mov
cmp
sti
in
clc
pop
jmp
pop
dec
orl
das
rcl
fistpll
xchg
lcall
mov
lds
test
pop
add
add
push
pop
clc
mov
and
addb
pop
push
lret
aam
xchg
enter
test
rorl
mov
mov
in
daa
sub
jo
cmpsl
mov
dec
insb
test
sub
jl
sar
outsb
out
pop
in
or
xchg
cli
repnz
mov
fwait
dec
lods
loope
sub
push
outsl
stc
adc
pop
loopne
lods
adc
mov
popf
daa
cmpsb
and
pushf
loopne
mov
xchg
mov
xchg
fisubrs
popf
push
push
daa
clc
movsb
loope
push
lcall
shrb
aam
je
in
ret
mov
ret
xchg
mov
mov
fs
mov
movsb
mov
inc
mov
xor
cmpsl
test
inc
adcl
fdivl
sub
ja
test
adc
mov
fdivr
test
jo
jl
stos
scas
xchg
mov
xchg
les
cmp
sbb
add
sbb
rcr
out
notb
popa
push
aad
xor
mov
lret
rorl
and
icebp
or
lret
xchg
and
into
jno
fmul
into
adc
lods
mov
lock
fcmove
xorb
xor
lahf
rolb
stos
xor
ret
lock
adc
das
sbb
inc
inc
mov
mov
lock
popa
nop
push
call
push
and
jno
mov
lds
loop
mov
adc
rolb
pop
adc
fcoml
pop
mov
sarb
cli
pushf
rcl
xchg
mov
sbb
hlt
std
and
adc
ret
outsb
addl
clc
and
out
cmp
les
inc
xchg
pop
pop
inc
mov
mov
jp
stc
scas
jmp
shll
pop
add
ljmp
cmp
push
out
shl
xchg
inc
test
out
fucomip
addb
or
sbb
dec
sub
jecxz
stos
pop
cmc
xor
inc
mov
or
mov
cld
xchg
push
fistpll
shll
xchg
cmp
in
repz
jecxz
in
ret
pop
enter
sub
cmp
nop
jne
add
xchg
icebp
sbb
mov
mov
xchg
inc
xorl
clc
test
and
push
leave
mov
sub
aaa
ret
jp
mov
loope
push
test
arpl
xor
aad
dec
dec
inc
jl
jle
mov
iret
or
in
sub
xchg
outsl
mov
scas
lret
movl
cltd
xor
aam
add
fld
in
jo
mov
cmp
aad
cmp
ja
pop
push
out
dec
xor
jb
push
enter
test
in
and
hlt
mov
in
cmc
aaa
sbb
nop
inc
lods
ljmp
or
insl
cmc
ds
jl,pt
pushf
dec
or
xchg
gs
roll
pop
loope
ss
adc
push
and
sbb
mov
stos
aad
mov
inc
jp
lock
mov
inc
test
sbb
repnz
fildl
mov
scas
ss
push
cmp
outsb
mov
stos
jnp
sub
daa
cmp
test
sub
dec
movsb
js
mov
push
sbb
xorl
mov
xor
cmp
pop
enter
aad
out
lret
sbb
int
int
test
cmp
mov
rolb
xchg
mov
jecxz
sub
inc
popf
pop
cmp
pusha
adc
xchg
pop
fmul
in
mov
in
or
in
test
cmc
push
lock
pop
xchg
xor
call
inc
adc
xchg
hlt
sbb
add
je
data16
xor
movsb
mov
push
mov
pop
add
mov
pop
scas
mov
mov
arpl
sbb
cmc
dec
sahf
sub
jbe
pop
stos
enter
fiadds
std
in
push
jae
jecxz
shrl
add
stos
sbb
sub
lahf
lcall
xlat
jecxz
cmp
inc
push
add
mov
lods
cs
movsb
xchg
and
pop
outsb
pop
stos
mov
dec
outsb
xlat
pop
movsl
inc
stc
dec
dec
cld
fwait
outsb
mov
xchg
repnz
dec
lea
xchg
mov
ds
xchg
scas
ja
mov
and
push
jmp
xchg
lea
movsl
lock
popf
stos
test
push
pushf
sub
inc
mov
rorb
lock
fwait
in
in
cmp
ljmp
cltd
jnp
out
fists
out
ja
xchg
repnz
movsb
scas
into
inc
add
jb
in
shll
push
or
push
in
fs
jmp
inc
gs
call
iret
lods
imul
mov
or
insl
adc
rorb
aad
mov
jecxz
stos
lret
int
in
pop
xchg
pop
jge
jnp
mov
mov
xchg
add
int3
xchg
lock
call
xlat
pop
push
fmulp
push
leave
mov
lcall
jbe
loopne
cli
inc
jbe
mov
adcb
xor
cltd
mov
addr16
aam
sbb
xchg
mov
in
fwait
sbb
mul
lret
scas
iret
sahf
loope
xchg
cmp
ror
jae
push
hlt
xchg
push
add
and
mov
inc
jnp
mov
jle
hlt
mov
xor
mov
cmpb
subb
repz
mov
and
sub
cmp
mov
jbe
jb
aad
adc
fmull
and
insl
hlt
sbb
mov
and
cwtl
jns
enter
nop
jmp
mov
push
add
push
mov
pop
xchg
lcall
and
add
std
rclb
test
mov
sbb
outsb
mov
sub
movb
scas
cwtl
mov
cmc
mov
mov
sub
inc
iret
bound
pop
inc
mov
shl
adc
mov
pop
mov
in
ss
outsl
out
cltd
scas
out
ss
notl
xchg
inc
and
dec
inc
divl
inc
xor
sahf
mov
push
push
scas
out
and
imul
cmp
cli
addr16
xor
push
adc
dec
and
add
adc
cltd
arpl
inc
shlb
mov
movsb
mov
data16
ds
fsubrl
mov
repnz
divl
lcall
inc
in
pop
sbb
cmp
inc
pop
dec
in
inc
aam
pop
mov
inc
inc
sub
adc
mov
cmp
cmc
xchg
cmpsb
cmp
rcrl
xchg
xchg
mov
add
shrl
mov
popf
and
in
outsl
jns
mov
mov
pop
inc
out
or
subb
repnz
clc
add
jge
popf
test
mov
stc
pop
add
cmp
aas
fstpt
out
int3
stc
lret
and
repnz
iret
jns
pop
mov
repnz
in
cs
jns
lds
movsb
add
shlb
and
popf
xchg
xchg
mov
loopne
mov
gs
aam
mov
rclb
out
and
lcall
fldenv
mov
pop
std
dec
mov
cmc
test
fmull
adc
dec
insl
cmp
mov
pop
loope
add
lahf
lret
jns
int3
jl
dec
sub
jmp
pop
xor
push
mov
addr16
js
cmp
fndisi(8087
adc
cmp
hlt
mov
dec
sbb
add
or
lods
sbb
or
pop
test
lahf
rcll
dec
inc
cwtl
in
lret
xchg
push
adc
sbb
out
gs
push
xor
and
mov
push
or
jo
sti
mov
das
xchg
sub
dec
mov
jbe
fwait
into
jne
pop
loope
in
jmp
icebp
rcr
insl
out
mov
xchg
nop
xor
push
adcb
rorb
out
and
cmpb
and
jnp
xchg
mov
cs
popf
mov
mov
adc
jns
or
test
cwtl
icebp
push
enter
lods
mov
nop
mov
clc
add
jl
lods
scas
sub
std
add
ljmp
mov
jns
pop
and
inc
cmp
shrl
inc
xor
jns
pop
mov
lea
lods
add
mov
push
push
lcall
scas
bound
dec
xchg
es
es
pushf
shrl
inc
xchg
testb
test
inc
loop
insl
jmp
sbb
mov
xchg
inc
rcrl
mov
xchg
mov
lea
mov
xchg
inc
xor
mov
lea
lret
outsl
jnp
sarb
sahf
sbbl
dec
mov
jnp
push
adc
sbb
repz
xorb
lret
inc
fnstenv
inc
xchg
dec
das
fucomi
push
mov
rcrb
fcomip
jl
sub
sub
rclb
cmpsl
push
sub
in
xchg
adc
cwtl
push
popf
inc
stos
inc
idivb
mov
popl
out
lods
movsb
shl
shrb
lret
cs
mov
gs
xchg
pop
dec
movl
xor
daa
outsb
xlat
pushf
jmp
push
fmull
into
pushf
std
daa
sbb
inc
sub
sbb
loop
adc
xchg
fstps
push
adc
push
adc
mov
inc
mov
insl
and
dec
stc
aas
jmp
jns
in
cmp
aad
dec
sbb
xor
xor
out
or
cmp
test
clc
dec
mov
outsb
cltd
popa
movsl
clc
mov
inc
clc
sbb
mul
ljmp
repnz
sbbb
and
adc
les
out
es
pop
leave
mov
and
test
les
push
mov
sarb
int
inc
arpl
out
test
sbb
xor
divb
fcomps
ficompl
stc
add
shll
cmp
mov
pop
rcr
imul
or
js
push
mov
lds
pushf
loopne
lods
cltd
in
cmp
xchg
imul
and
jmp
sbb
stc
cltd
repnz
test
insb
lahf
cmc
jmp
inc
xor
mov
in
sbb
hlt
cs
movsb
aam
ret
cmp
pop
dec
cmp
sti
sbb
xchg
in
scas
add
ret
testl
mov
lock
mov
cs
add
dec
push
dec
out
and
movsl
out
fmuls
inc
loopne
sub
push
int3
sahf
xchg
mov
std
call
cmp
cltd
pop
pop
or
mov
jecxz
fistps
inc
jecxz
int
jmp
testb
dec
add
lock
add
xor
dec
pushf
out
mov
addr16
sub
pushf
or
xchg
int3
aas
or
rorl
call
out
and
mov
lcall
lock
fiaddl
and
mulb
and
int
xor
nop
pusha
push
and
mov
fldl
sti
fldl
out
xor
lahf
xchg
jno
gs
cmp
push
push
xchg
movsl
jae
mov
xchg
dec
push
mov
adc
jge
cld
mov
mov
adc
jp
loope
nop
andl
jecxz
int
cwtl
adc
xchg
cmc
push
orb
or
cs
popf
int
dec
scas
xor
jg
clc
mov
adc
hlt
sbb
sub
fwait
cld
mull
add
pushf
inc
jmp
mov
push
pop
unpckhps
mov
aam
and
jns
jecxz
hlt
mov
fisubrs
add
fisttps
lods
xor
and
adc
pushf
jne
stc
test
movsb
xlat
rol
enter
xchg
or
xor
adc
dec
rcl
mov
push
push
std
and
dec
clc
lahf
inc
hlt
mov
cld
sbb
cmp
nop
mov
push
in
lret
cwtl
adcl
cmpl
popa
mov
or
cmpsl
out
xchg
rcl
pushl
sahf
ds
stc
repz
xor
aad
mov
sbb
sub
lea
xor
xchg
mov
push
push
and
stos
mov
ljmp
xchg
pushf
ret
mov
xor
or
and
popf
sbb
addr16
fcmovne
xchg
scas
xchg
loopne
cs
fdivl
xchg
mov
xor
orl
js
in
mov
das
mov
gs
sub
add
push
mov
inc
in
xchg
outsb
shll
sbb
pop
repnz
cwtl
mov
loopne
sbb
cmp
call
add
popa
adc
imul
in
int
fstl
int3
dec
mov
xor
fldt
test
clc
push
sbb
xor
fmull
in
les
test
cltd
inc
sub
lock
or
pop
gs
mov
arpl
and
out
jg
mov
lods
mov
mov
xor
movsb
pop
iret
pop
in
jp
lret
in
mov
test
pop
aam
es
stc
outsl
xor
sahf
loopne
int3
or
xor
add
jle
outsl
add
lods
mov
imul
adc
out
adc
cmp
mov
xor
mov
mov
in
mov
movsl
fisubs
pushf
sbb
cli
dec
pop
lock
test
div
dec
aam
sbb
ret
idivb
inc
push
mov
adc
inc
call
aam
test
ret
pop
sbbl
mov
sbbl
out
insl
scas
int3
pop
pop
fdivp
mov
rcll
lock
lock
addr16
repz
loop
cli
sbb
mov
in
movl
cmc
cmp
jns
pop
ss
jecxz
mov
aam
pop
push
in
xlat
mov
push
ljmp
xchg
dec
xchg
pop
mov
sub
outsl
arpl
stc
dec
lret
ljmp
test
and
repnz
sbb
decb
lock
xchg
add
sub
cltd
repnz
movsl
ja
pop
inc
sbb
repz
clc
in
pop
data16
loopne
addl
in
push
dec
jecxz
imul
lret
mov
adc
pop
fcoml
mov
in
nop
mulb
mov
pop
add
mov
cli
addr16
out
ds
pop
aaa
pop
sbb
jmp
sub
jmp
cltd
pop
ret
lahf
negl
lock
mov
pop
sbb
popa
das
fiadds
push
xchg
ret
dec
push
sub
pop
mov
in
fsubp
inc
mov
std
dec
mulb
std
pop
mov
insl
aam
fistps
dec
pop
popa
mov
or
enter
iret
and
test
xchg
mov
in
mov
pushf
mov
repz
test
push
shrl
xor
sub
dec
jmp
adc
push
sbb
jp
mov
sbb
int
bound
sub
add
mov
dec
bound
pop
test
xchg
mov
int3
inc
mov
int
push
loop
xor
adc
mov
xor
out
arpl
lods
xchg
aad
testl
pop
loop
mov
test
loop
in
jle
sahf
imul
out
add
sub
ljmp
es
jmp
pop
adc
pop
mov
in
xor
sub
retw
push
cwtl
repnz
int3
in
pop
add
mov
rcl
movsl
and
rorl
push
ficoms
hlt
outsb
je
mov
addr16
fsubrp
std
cli
cmp
in
imul
ja
xor
insl
aam
iret
loope
nop
mov
jne
mov
xchg
cld
dec
xlat
push
shll
iret
movsl
addr16
push
sbb
cmpsl
jbe
sbb
push
sbb
movsl
xor
mov
cmc
rcrb
hlt
mov
fcos
nop
lret
imul
ds
sub
mov
jge
in
addl
jo
test
ja
daa
sub
rolb
cmp
mov
push
fimull
cld
std
shl
cmpsl
mov
mov
outsl
push
fldl
scas
push
ds
test
pop
lret
fstps
in
jmp
addr16
push
mov
and
inc
aaa
sbb
aas
xorl
loopne
ret
or
xlat
push
adc
dec
test
mov
cmp
test
inc
in
xor
mov
outsb
clc
es
std
push
adc
add
outsl
addr16
daa
les
mov
aas
fucomp
and
push
cltd
and
push
insb
lea
cld
movsl
mov
push
pop
or
pop
sahf
push
jmp
frstor
jmp
inc
or
stos
adc
mov
cld
sbb
mov
xchg
cmp
mov
negl
xor
cmpsb
pushf
mov
outsb
mov
dec
lea
insl
leave
pushf
je
inc
lock
mov
orb
rcrl
sbb
mov
imul
negl
mov
fldl
xchg
out
and
jp
setp
xchg
shll
mov
and
fwait
and
sarl
ret
sbb
xor
in
inc
rorb
xlat
or
pop
mov
cmpl
push
add
dec
jge
xchg
in
mov
mov
dec
inc
jmp
lock
stc
test
lods
push
jg
xchg
ljmp
mov
adc
xchg
mov
mov
shrl
out
sub
sbb
loope
scas
and
inc
ss
icebp
inc
out
push
cmp
and
ljmp
fwait
xlat
movsb
mov
out
xchg
call
mov
out
sub
sahf
or
sub
in
cmp
inc
pushf
scas
fwait
hlt
dec
sahf
push
in
icebp
sbb
imul
div
xor
ret
das
push
call
adc
add
xchg
call
iret
out
adc
jnp
aad
push
imul
out
push
cmc
shrl
iret
dec
das
dec
or
adc
imul
xor
jecxz
jl
addb
dec
ds
jecxz
in
cltd
and
rcrb
mov
lea
cmp
and
subb
in
clc
jge
call
and
jge
lret
jnp
sub
mov
lret
and
mov
push
inc
in
out
adcb
pushl
mov
ljmp
add
sub
cmp
push
xchg
mov
inc
fwait
shll
mov
dec
or
mov
sarb
fiaddl
out
jg
inc
pop
nop
mov
out
sub
cmp
adc
cltd
addl
stos
lods
push
cmpsb
popf
aad
shll
enter
lcall
test
loope
fcoml
mov
aad
adc
jmp
mull
out
loop
insl
cmp
test
cmp
rolb
mov
cld
lcall
pop
mov
test
adc
pop
testl
es
mov
mov
test
loopne
pop
xchg
hlt
inc
shlb
or
cmp
add
or
fistps
test
pop
xor
lods
inc
addl
pusha
add
pusha
inc
punpcklbw
xchg
decb
out
mov
aad
push
inc
sbb
sub
std
cmovns
mov
and
add
pop
lret
pop
rcrb
jae
mov
call
aad
mov
jecxz
mov
and
das
in
inc
add
insb
enter
ficompl
mov
and
mov
jae
aaa
scas
pop
jecxz
inc
es
ja
sahf
lock
pop
mov
cmp
sahf
inc
push
loopne
ret
sahf
int
mov
mov
test
cmp
mov
fstpl
dec
lea
sub
xchg
sub
sahf
scas
pop
mov
ficompl
std
shl
je
call
push
push
in
cs
mov
add
jp
cmp
mov
lret
jmp
int
aam
lret
cmp
push
cmp
sahf
aaa
and
lods
cmp
mov
notl
lret
aad
mov
pop
mov
test
inc
mov
outsl
jb
ret
xchg
decl
mov
fistpll
pop
mov
add
ds
je
mov
inc
mov
les
aad
cli
pop
xchg
xor
xchg
add
push
and
pushf
nop
out
cltd
nop
sar
and
sub
mov
or
jo
push
fidivrl
xchg
insl
lahf
cmp
pushf
inc
mov
leave
add
cmpsl
add
adc
sub
into
push
mov
lock
out
std
mov
stc
xchg
pop
fists
adc
cmp
testb
pop
add
outsl
je
sub
je
shll
ljmp
jp
adc
xchg
cmp
out
pop
sub
pop
stc
mov
test
shrl
data16
test
pop
icebp
iret
xchg
movsb
cmp
or
call
sbb
cltd
adc
mov
icebp
jl
add
stos
mov
inc
sub
xor
cli
fsts
sub
dec
inc
inc
jbe
xchg
or
xorb
pop
std
dec
sbb
cltd
out
popa
imul
je
pop
mov
test
ljmp
test
and
add
inc
mov
repz
or
insl
cmpsl
cmpb
addl
inc
adc
xor
add
cs
aas
mov
outsb
jp
lcall
push
out
add
inc
xchg
incl
push
xor
movsb
xor
push
mov
add
loopne
dec
xchg
into
push
jl
sub
sub
dec
repz
add
or
push
nop
nop
sub
add
inc
mov
ss
pop
sahf
mov
push
fimull
xor
iret
out
and
dec
in
push
dec
lcall
stc
addl
pop
pop
sub
cmp
mov
out
cli
inc
mov
mov
lahf
push
add
ret
mulb
lock
or
stos
lods
cltd
imul
jne
ljmp
lret
mov
pop
aad
divb
push
test
call
arpl
xlat
in
repnz
cmp
add
call
push
xor
stos
int
pop
dec
push
inc
in
ss
in
cmpsl
xor
mov
addr16
shll
sti
cmp
add
es
fwait
daa
mov
fs
and
out
xor
in
cwtl
cmp
mov
ss
repz
jle
lds
push
xchg
lcall
xchg
outsb
sbb
lock
outsl
out
cmp
xchg
xchg
in
pop
cmc
cmp
aas
lcall
movsl
dec
into
fdiv
fildl
loopne
jns
sbb
inc
pusha
fcmovnu
stc
cmpl
push
ds
fisubrs
dec
dec
rcll
pop
mov
sub
xchg
adc
out
pop
inc
test
mov
jnp
xor
pop
daa
jecxz
out
jle
loop
sbb
mov
and
in
fdivrs
das
ss
mov
insl
jmp
in
stc
pop
leave
dec
adc
sbb
ret
out
out
rcrb
mov
adc
lea
enter
xchg
push
dec
mov
pop
or
sbb
push
pop
push
cmpsl
enter
ljmp
sub
jo
cmpsl
dec
mov
jmp
xchg
fistl
jecxz
xor
lcall
mov
and
xchg
xor
out
std
test
lret
cltd
aas
push
aam
dec
or
gs
mov
aaa
cmp
pop
call
xchg
fsubl
es
cmp
lock
stos
dec
add
push
ss
jne
les
push
fcmovb
shr
cli
pop
dec
pushf
pop
sahf
xchg
or
mov
sub
cs
das
dec
out
sbb
jecxz
cmp
mov
jb
lods
dec
or
clc
pop
cmp
decl
pop
jle
test
and
mov
fdivrl
xchg
lret
sub
push
gs
pop
cmpsb
push
inc
cmp
in
repz
in
daa
and
lock
adc
inc
sbb
sbb
frstor
out
adc
nop
ljmp
fdivrl
out
adc
add
add
aaa
lds
or
ror
and
sbb
adc
lahf
xchg
mov
or
repnz
jo
jle
icebp
mov
dec
pop
xlat
xlat
push
adc
mov
out
xchg
icebp
loopne
pusha
mov
sbb
leave
movsb
jecxz
pushf
push
rcrl
xor
test
xchg
fadd
mov
fstpl
out
mov
sub
push
push
cmp
int
xlat
sbb
sub
mov
mov
mov
lcall
dec
jl
jmp
fwait
or
cmpsb
pop
adc
mov
xor
sub
loop
sbb
ret
pop
in
loop
jbe
iret
decl
adc
dec
mov
add
pusha
mov
gs
push
jo
lods
out
xor
push
add
icebp
scas
je
add
sti
out
es
outsb
push
out
and
int
cs
aaa
jae
and
clc
loopne
xchg
add
mov
mov
pop
xor
movsl
gs
inc
push
aaa
dec
xor
sub
stc
adcl
jg
mov
mov
ljmp
test
sub
mov
lods
ret
mov
popa
notl
iret
jmp
mov
xlat
mov
rorl
cld
daa
sub
out
and
push
and
cmp
jns
push
movsb
js
xchg
test
iret
data16
lcall
sub
jo
mov
es
in
in
sti
or
sub
and
or
mov
cwtl
ret
test
scas
mov
test
in
je
mov
test
aam
or
sbb
sub
inc
xchg
scas
jns
and
cmp
add
push
sbb
xor
loope
test
cmpsl
or
and
loope
push
fildll
inc
mov
decb
xor
inc
pop
or
jnp
push
lret
pusha
xor
cli
aaa
fwait
mov
xchg
jmp
fucom
or
inc
mov
push
xor
mov
jbe
xchg
cmp
ficoml
inc
sub
mov
cmpsb
xor
xchg
stos
or
jns
das
pop
repnz
push
pop
stos
loope
cmc
inc
cltd
pusha
test
pop
mov
fidivl
roll
xor
xor
pop
call
sub
mov
jle
push
xlat
data16
mov
inc
mov
xchg
mov
add
scas
xchg
cmc
xchg
icebp
sti
loope
in
push
icebp
sbbb
mov
into
sub
push
push
jns
pop
push
imul
dec
std
jne
int3
jp
add
bound
xchg
dec
loope
lds
lret
imul
fdiv
push
cmc
sbbb
cltd
out
sub
mov
xor
mov
mov
cmp
mov
xchg
push
in
into
and
cmc
jp
sti
adc
xorb
leave
mov
subl
xchg
mov
dec
addl
cmp
ljmp
push
fdivrs
popa
subb
call
sub
mov
dec
xor
xchg
mov
in
pusha
cmc
out
in
lea
push
popf
mov
jbe
xchg
rcrl
fnstenv
pop
fadds
insl
xorb
call
cmc
mov
pop
cmp
mov
sbb
xchg
sti
cltd
fadds
jecxz
mov
push
jnp
fadds
subb
call
sub
mov
dec
xor
xchg
mov
std
pusha
loope
in
cmp
mov
jle
into
jecxz
fwait
and
jo
mov
add
cmpb
and
mov
push
mov
xchg
xor
xchg
and
test
pusha
xchg
out
mov
add
xor
mov
add
ret
xchg
cmc
pop
sub
xor
or
shr
std
ss
sub
mov
out
xor
xchg
fsubp
jle
jmp
cs
in
call
popa
into
cmp
ficoml
pop
xchg
cmc
dec
fstp
rcll
icebp
jecxz
call
sub
mov
fidivs
xchg
into
xchg
mov
sbb
cmp
sbb
sarb
pop
mov
xchg
dec
in
push
and
stc
sti
in
jmp
jecxz
call
sub
mov
ja
and
loope
add
pusha
sub
pop
and
mov
push
cmp
in
cmp
mov
sti
test
mov
mov
push
loope
jge
popa
pusha
or
pop
add
mov
or
xchg
xchg
cmc
and
mov
xchg
push
cltd
cmpb
mov
out
dec
cmp
jge
jge
gs
mov
xchg
push
in
loop
dec
xchg
cmc
mov
icebp
push
std
and
call
subl
inc
pop
push
xor
mov
xchg
adc
mov
daa
mov
mov
push
ljmp
loope
fldl
pusha
in
out
cmc
cmp
pop
cltd
push
test
mov
xchg
into
loope
xchg
ret
push
call
sub
mov
push
ljmp
aad
aad
stc
cmp
pop
jmp
inc
cmp
mov
xchg
shr
bound
into
mov
nop
call
sub
mov
or
xchg
cmp
sub
out
and
xor
mov
sbb
xchg
sti
popf
fadds
jecxz
call
pop
cmp
ret
inc
push
imul
sub
mov
mov
push
xchg
cmpsb
loope
in
inc
icebp
pusha
std
out
loope
lea
push
xchg
mov
jp
xor
ss
adc
mov
jb
ret
loope
sub
pusha
cmp
and
push
mov
xchg
imul
inc
and
xchg
fisubrs
insb
mov
adc
mov
sbb
pop
xor
mov
push
xchg
xchg
in
and
xchg
sti
cltd
fadds
jecxz
mov
inc
push
pop
fucomp
sarb
xor
xchg
push
out
inc
and
out
sarl
fstpl
push
in
mov
cmp
in
pop
and
xchg
fisubrl
outsb
mov
push
loope
jge
popa
pusha
or
pop
add
mov
push
xchg
mov
xchg
cmc
mov
push
xchg
cmpb
mov
xor
push
call
sub
mov
outsb
xor
xchg
pop
loope
xor
pusha
fucomp
sarl
pop
cmc
push
stc
mov
push
xchg
in
bound
ret
inc
shlb
mov
push
xor
xchg
push
loope
add
out
cmp
push
int
rcrl
cmp
in
and
sti
xchg
fdivrs
decl
push
mov
xchg
ret
jne
jns
sub
mov
push
xor
xchg
inc
loope
lds
pusha
aad
stc
cmp
pop
jmp
inc
cmp
mov
xchg
fsubrp
jle
mov
test
sub
mov
sbb
pusha
and
pop
fstl
mov
adc
sahf
mov
xchg
mov
inc
and
xchg
mov
mov
fldl
pop
sar
adc
sbbb
and
add
push
cmp
in
and
addb
cltd
fadds
jecxz
ficompl
xchg
loope,pt
push
inc
jns
gs
insl
cmp
sbb
sarb
push
mov
xchg
inc
in
repnz
fdiv
push
cmc
sbbb
xchg
shrb
mov
xor
xchg
cmp
mov
xchg
add
mov
jb
ret
add
push
cmp
aad
fldcw
cmpl
xchg
loop
push
test
in
imul
dec
gs
jo
mov
adc
pop
xor
xchg
dec
loope
roll
in
out
cmc
cmp
pop
in
mov
mov
and
xchg
ss
inc
and
mov
add
xchg
jle
ficoms
out
sub
xor
mov
push
cmp
in
dec
and
xchg
out
mov
push
mov
pop
pusha
mov
sub
stos
popa
inc
insl
pusha
or
pop
add
cli
cmp
or
xchg
xchg
cmc
xchg
sti
mov
xchg
push
xchg
cmpb
mov
in
inc
inc
dec
pusha
push
out
jge
popa
pop
insl
push
jno
sbb
rclb
inc
xchg
cmc
mov
sti
aad
stc
push
in
jmp
ss
sub
mov
xor
stos
ss
adc
push
xor
xchg
push
loope
add
out
cmp
push
xor
mov
xchg
sahf
in
cmp
mov
sti
xchg
fdivrs
xchg
mov
out
inc
cmp
jne
jns
gs
mov
xchg
push
in
loop
inc
xchg
cmc
mov
cmc
push
stc
and
mov
xchg
ss
ljmp
in
call
lods
ss
sub
mov
or
xchg
data16
sub
pusha
xor
pop
leave
push
aad
stc
cmp
in
inc
and
xchg
shlb
jg
sbbl
or
out
add
sub
mov
add
mov
in
and
addb
cltd
fadds
jecxz
negb
pop
ret
dec
sti
push
fdivrs
popa
subb
call
sub
mov
mov
push
xchg
cmpsb
mov
push
mov
mov
mov
mov
ljmp
dec
rcrl
hlt
sbb
cmp
gs
add
push
mov
xchg
inc
in
repnz
stc
sti
in
jmp
jecxz
call
sub
cmpsb
ret
mov
scas
lods
mov
xchg
jle
ficoms
out
sub
xor
mov
push
cmp
in
ss
xchg
out
sti
lods
fdivs
cli
dec
ret
mov
xchg
and
xchg
imul
cmp
pop
or
loop
inc
mov
xchg
mov
add
scas
xchg
cmc
sahf
jmp
push
addl
xchg
adc
push
xorl
sub
pusha
xor
pop
leave
push
aad
stc
cmp
in
pop
and
xchg
fisubrl
or
mov
ss
adc
mov
jb
ret
loope
sub
pusha
xor
fnstsw
rcrl
rorl
mov
xchg
cli
in
pop
and
xchg
mov
fwait
xchg
and
pop
and
loope
sub
pusha
xor
pop
int
rorl
mov
xchg
repnz
inc
and
xchg
fisubrs
ja
sbbl
jne
sbb
out
or
push
and
mov
xchg
scas
in
and
popf
sti
popf
fadds
jecxz
mov
push
pusha
pop
out
jns
gs
insl
push
jno
sbb
rclb
inc
xchg
cmc
mov
stc
push
in
jmp
ss
sub
mov
sbb
andl
lods
xchg
stc
push
xor
xchg
or
lret
or
cmp
pop
sub
add
mov
in
and
addb
cltd
fadds
jecxz
ficompl
xchg
loope,pt
push
inc
jno
jge
popa
cmp
mov
out
cmp
notb
cmpsb
xchg
cmc
xchg
cmc
sti
stc
fsub
push
test
mov
jbe
movsb
rcrb
push
push
xorb
call
sub
mov
inc
xor
xchg
mov
add
inc
lds
out
in
cmp
jg
or
in
jbe
test
inc
and
mov
or
xchg
sub
cmp
pop
int
rorl
mov
xchg
repnz
inc
and
xchg
fisubrl
repz
inc
jnp
addb
call
sub
mov
push
xor
ljmp
jnp
out
aad
fstps
push
in
jmp
inc
xchg
out
in
push
fiaddl
mov
adc
xchg
add
mov
inc
adc
cmp
pop
sub
mov
push
cmp
in
and
sti
lods
fdivs
decl
dec
jecxz
and
sti
jns
gs
or
add
cli
mov
cmpsb
xor
xchg
sahf
loope
cmc
inc
cltd
pusha
test
mov
xchg
pop
mov
mov
dec
jnp
out
inc
cmp
jno
jge
popa
into
cmp
ficoml
pop
xchg
cmc
mov
sti
lds
xor
cmc
call
sub
mov
ret
dec
movsb
pop
fwait
and
insl
pusha
jno
sbb
push
adc
mov
xchg
mov
xchg
cmc
lcall
popf
addb
mov
into
push
cmp
jns
mov
cmp
ret
in
shlb
push
xchg
cmc
dec
fsincos
rcr
push
roll
loope
sub
mov
fidivs
xchg
into
test
cmp
mov
xchg
sbb
mov
jbe
cmc
bound
push
xor
call
sub
mov
xor
xchg
out
loope
movsl
inc
lods
arpl
cmpsl
adcb
xchg
or
cmpb
lds
cmpl
xchg
repnz
cltd
inc
mov
cs
ljmp
pop
cmpb
call
sub
mov
push
xor
xchg
pop
loope
xor
pusha
fldz
stc
cmp
pop
loope
mov
mov
xchg
fsubrp
jp
ss
arpl
inc
imul
add
xchg
push
loope
cmp
out
fnsave
ret
loope
roll
pusha
loope
jmp
push
mov
mov
xchg
ret
inc
ret
push
call
sub
mov
outsb
xor
xchg
inc
loope
lds
pusha
aad
std
cmp
pop
in
push
lea
mov
xchg
ret
inc
ret
pop
call
sub
mov
jbe
xchg
data16
sub
push
xor
arpl
ret
sub
out
and
xor
push
lds
rcll
xchg
mov
xchg
xchg
and
mov
xchg
fdivrs
jecxz
call
push
push
scas
sbb
cmp
sahf
mov
and
sub
inc
jnp
fdivs
jge
popa
jecxz
call
sub
mov
pop
or
cmp
out
inc
cmp
icebp
inc
xor
mov
push
out
ret
ss
fucomp
mov
dec
fyl2x
push
mov
inc
in
mov
xchg
cmp
mov
push
enter
pop
pop
inc
push
imul
in
fisubl
push
ljmp
aad
aad
call
sub
mov
ljmp
mov
cmp
scas
cmc
sbb
jno
sbb
adcb
sub
repnz
cmpsb
xor
xchg
stos
loope
loope
in
sbb
insl
jnp
pop
lea
mov
jbe
xor
call
mov
lods
mov
xchg
jbe
lret
xchg
hlt
push
loope
push
mov
jmp
imul
aam
jns
inc
loopne
lods
notb
scas
xchg
cmc
sahf
jmp
push
test
cltd
and
sbb
jne
mov
jle
into
mov
pop
call
sub
mov
push
xor
xchg
jle
ficoms
out
sub
xor
mov
push
cmp
in
ss
xchg
out
sti
lods
fdivs
cli
dec
and
xchg
inc
jno
jge
popa
cmp
mov
out
cmp
xchg
dec
in
push
adc
sbb
jnp
scas
inc
inc
cwtl
stos
mov
xchg
ret
lods
add
pop
lods
xor
inc
mov
cmp
outsl
add
sbb
sbbb
xchg
and
xchg
sbb
add
mov
ljmp
shll
or
nop
push
mov
jnp
inc
repnz
xchg
and
in
mov
popa
mov
data16
stc
xchg
add
out
fstpl
lahf
xchg
mov
jns
test
push
sub
addr16
dec
mov
stos
cmp
mov
xchg
push
in
mov
cmc
jbe
sti
sbb
xorb
int
sub
mov
xchg
xor
xchg
mov
dec
mov
pusha
popf
out
cmpl
test
into
mov
cmp
dec
arpl
sub
mov
adc
xchg
add
mov
inc
sbb
cmp
mov
loop
inc
mov
xchg
mov
push
and
stc
sti
in
cmc
push
std
sub
icebp
call
sub
mov
fidivs
xchg
ret
jae
pop
cwtl
mov
in
lcall
jno
jge
popa
push
jno
sbb
or
adc
out
mov
inc
xor
xchg
mov
or
inc
aad
fldz
lds
jmp
mov
ss
mov
xchg
cli
in
pop
and
xchg
shlb
push
mov
pop
fwait
mov
and
xchg
push
inc
jge
popa
out
insl
cmp
gs
or
outsb
mov
xchg
push
in
ljmp
xchg
push
xorb
fldcw
cmpl
xchg
loop
outsb
movsl
inc
test
lcall
xchg
jns
gs
or
add
cli
mov
movsl
gs
sub
lret
mov
or
inc
test
xchg
std
test
pop
mov
daa
push
xchg
jle
lods
mov
popf
inc
push
fcmove
insb
adc
enter
sahf
add
mov
movl
adc
aam
lret
lahf
xchg
inc
test
aad
sub
push
cltd
mov
mov
je
sbb
scas
cmpsb
cmpsl
iret
dec
scas
bnd
sbb
aas
jle
notb
ds
pusha
mov
mov
dec
ret
jnp
scas
divb
mov
or
mov
and
aam
shll
mov
jns
mov
or
or
push
in
xchg
jp
add
out
fwait
shrb
ret
jp
mov
push
pushf
mov
aas
mov
sarb
mov
repnz
ror
jae
ret
push
shll
test
push
lods
not
ret
test
lret
lods
scas
xchg
repnz
sbb
imul
add
shll
xor
mov
inc
mov
loopne
mov
mov
sub
push
lahf
int3
jae
ret
xor
ror
fdivs
jmp
mov
add
sarb
xor
rol
imul
movsb
jp
jmp
test
inc
enter
rcrl
adc
mov
cmpl
test
or
sbb
pop
xchg
add
imul
nop
jne
adc
popf
sbb
ret
adc
add
xchg
pop
and
movsb
enter
mov
arpl
mov
ljmp
add
mov
mov
scas
js
in
hlt
jns
jle
int3
or
sbb
mov
lret
xchg
and
push
jp
ret
test
inc
cwtl
repz
jle
mov
jae
testb
add
ret
cli
xor
mov
loopne
stos
xlat
testl
popa
loope
loop
cmp
cld
inc
mov
mov
daa
cld
mov
xchg
add
lock
fisubs
inc
cltd
stc
xchg
aam
iret
hlt
jno
mov
addb
xchg
mov
xor
push
xchg
mov
xor
outsl
jg
cmp
mov
inc
dec
or
adc
into
divb
pushf
inc
lods
sub
arpl
sbb
push
repz
outsl
push
icebp
popa
add
xchg
jbe
or
cmp
nop
mov
sar
pop
fstpt
or
aaa
xchg
inc
rcrl
adc
ret
ds
ret
fcomi
jge
arpl
jp
mov
or
mov
aad
and
jecxz
sbb
das
xchg
jp
add
cltd
cld
push
push
jl
lock
mov
push
lret
insl
int3
mov
popa
lea
dec
sbb
scas
nop
add
xchg
mov
ljmp
mov
test
outsb
pop
ror
mov
push
push
or
sbb
cwtd
cmp
xlat
xchg
jb
push
rcll
jp
dec
pushf
mov
loop
inc
xchg
jge
push
rcll
xchg
mov
loop
inc
daa
ljmp
mov
test
xchg
mov
ljmp
mov
test
outsb
push
test
imul
sarb
rorl
sub
addl
jle
ficoml
js
mov
sbb
pusha
mov
xchg
cmp
xchg
out
loopne
out
xchg
outsl
scas
lret
mov
xchg
das
xchg
push
mov
push
test
push
mov
clc
cmpsb
push
sub
sti
outsb
xchg
inc
out
sub
popa
imul
pushf
sarl
sub
mov
xchg
test
loopne
inc
mov
xor
mov
jbe
lods
scas
mov
xchg
andl
mov
imul
mull
stos
lods
or
cmpsl
lret
shll
cmp
scas
mov
mov
addr16
scas
movsb
fisttpll
fisttps
add
jl
imul
add
or
inc
stos
jp
fdivrl
mov
ficomps
arpl
or
test
fimuls
sbb
and
cmp
mov
and
jle
pop
mov
ja
dec
add
dec
lret
jnp
ret
imul
and
lods
imul
xlat
jle
mov
ss
leave
adc
int
lds
iret
notb
movsl
xchg
into
sarl
inc
addr16
and
mov
test
clc
sub
enter
shlb
lcall
sahf
mov
and
cmpl
mov
mov
inc
cmp
scas
sarb
add
test
or
add
jp
cli
enter
loope
ficompl
mov
leave
stos
adc
mov
sarl
fisttpll
in
sbb
mov
sbb
jb
push
xlat
mov
pop
and
in
test
xor
lea
pop
aaa
push
test
loopne
pop
mov
jecxz
clc
or
test
adc
jle
rclb
lock
jbe
movsl
incb
add
stos
xchg
inc
movsb
cmp
or
ret
loope
sub
jg
call
pusha
mov
mov
mov
cmpsb
mov
mov
movl
fcoms
nop
cltd
imul
rcrl
sub
sbb
shrl
cmc
int
push
adcl
adcb
shrb
mov
lods
arpl
jle
lods
lods
adc
xlat
pop
movsl
mov
sbb
aad
jle
fmull
js
inc
sbb
ret
cmp
test
cwtl
dec
mov
pop
mov
test
xor
dec
xchg
sbb
rclb
dec
xor
testb
xchg
cmc
test
idivb
dec
push
imul
sbb
xchg
inc
add
lods
mov
mov
pop
jbe
pop
inc
push
in
lahf
mov
fsubp
cmpsb
mov
add
mov
inc
addl
xchg
jecxz
pop
loope
jb
or
popf
pop
loop
idivb
dec
sbb
fcmovu
lahf
ret
loopne
outsb
icebp
adc
ret
rcr
push
mov
imul
push
add
or
inc
data16
lock
rol
pop
hlt
xlat
mov
xor
in
jp
arpl
jmp
jbe
xlat
mov
jle,pt
fistl
pop
rclb
jecxz
add
scas
arpl
pop
lahf
mov
cmp
dec
sbb
adc
ret
sub
add
movsl
jb
enter
test
add
repz
subb
adc
dec
jp
xor
jp
jmp
push
or
mov
or
stc
js
sar
xchg
mov
loopne
add
in
out
loopne
out
push
cli
jb,pt
test
fiaddl
mov
lods
mov
arpl
aam
lea
mov
jns
out
pop
and
adc
lods
and
mov
aaa
jg
mov
mov
lcall
xchg
fimull
xlat
insl
outsb
mov
push
fdivr
xchg
push
aas
clc
pusha
pop
jecxz
ret
inc
mov
scas
cmp
pop
inc
pop
shrl
insl
pop
jb
mov
pop
shll
nop
mov
xchg
daa
mov
mov
mov
stc
scas
scas
or
rcrl
cmp
subb
lock
xor
inc
xchg
punpckhdq
mov
jle
ret
and
fdivp
lret
cmpsl
mov
sub
xchg
lret
scas
pop
faddp
dec
pop
push
sub
or
stc
gs
pop
jp
cmpsl
jb
pop
fcmovne
call
jle
shl
push
std
jns
xor
lahf
lods
xor
add
jle
mov
pop
scas
xorb
out
loopne
dec
xchg
mov
inc
into
sbb
cmp
leave
pop
test
push
dec
pop
xor
test
lock
test
out
push
aas
out
and
in
push
push
adc
in
mov
bound
test
call
sbb
sub
cmp
stos
and
and
pusha
ja
scas
into
push
xchg
inc
lea
and
sub
mov
fsubp
cmp
adc
ret
aam
and
and
mov
adc
pop
fbstp
stc
sub
stos
cmpl
sub
sbb
push
lock
ret
test
xor
cmpb
loopne
pop
lods
sbb
inc
xchg
aam
scas
stc
mov
movsb
andl
sbb
in
xor
mov
cwtl
out
and
pushf
and
ret
pop
or
inc
sub
test
shrl
inc
int3
add
adc
repz
jp
mull
cwtl
setbe
jecxz
pop
cld
jp
fildll
enter
adc
or
inc
and
sub
ds
mov
stc
fmulp
nop
enter
aam
lods
mov
addr16
mov
arpl
test
leave
mov
xchg
aad
jns
adc
sarl
inc
test
jno
or
fstps
or
lods
add
dec
adc
mov
push
es
icebp
bound
ljmp
ljmp
xchg
loop
into
mov
cmc
add
arpl
push
fsubrl
mov
ja
lds
stc
jmp
data16
jno
addr16
adc
cmp
xlat
aaa
cmc
repnz
cmp
cwtl
mov
ret
pop
sub
mov
imulb
pop
lods
push
lods
stos
notb
mov
ret
pop
fiadds
jp
cmpsb
sub
rolb
sbb
jecxz
fisttps
mov
push
push
data16
or
pop
ret
enter
pop
fstpt
mov
add
mov
ret
addl
setnp
sbb
push
push
pop
mov
mov
js
clc
idivb
maskmovq
mull
cvtps2pi
mov
rol
jne
pop
rcrb
js
das
repnz
mov
das
arpl
xor
ljmp
xchg
mov
adc
loopne
lahf
arpl
movb
ret
scas
test
enter
add
jmp
jp
ficoml
out
movsb
push
test
int3
xchg
add
mov
cli
xlat
mov
enter
sub
xchg
lods
mov
sbb
cmpsb
dec
aas
mov
sub
inc
sbb
xor
push
xor
mov
ficoml
inc
cli
xchg
mov
inc
cmc
bound
cmpsb
push
cli
add
aad
mov
loop
scas
jecxz
cmc
fwait
lds
repz
pop
mov
xchg
mov
test
scas
mov
jle
sbb
xorl
and
push
loop
or
imul
aam
andb
shll
cwtl
aaa
inc
repz
jmp
into
sub
sub
inc
mov
lcall
adc
jmp
sbb
mov
idivl
mov
aam
test
and
leave
push
test
xchg
lcall
gs
mov
dec
jmp
lods
lea
pop
stos
mov
scas
sti
push
mov
mov
sahf
leave
mov
popa
cmp
icebp
jp
push
lret
pop
int
insl
jmp
js
ret
cmp
xchg
sub
leave
cwtl
sub
shrb
cmc
jp
pusha
mov
mov
mov
mov
stc
add
shr
test
incb
out
leave
sub
test
or
mov
nop
adc
sahf
lods
bound
outsl
loope
mov
ret
test
ret
leave
mov
sbb
inc
jne
cld
mov
sbb
subb
dec
fisttpll
lods
loop
pop
push
add
test
jmp
adc
push
cmpb
lea
inc
and
mov
pop
int3
add
fldl
sbbb
sbb
mov
and
mov
aam
out
rolb
sti
lock
lea
pop
add
aam
call
cld
jecxz
shll
mov
sahf
test
and
xchg
fisubs
xchg
cmp
xlat
clc
arpl
stc
out
shll
xorb
mov
dec
sub
ret
rol
jae
mov
in
push
cmp
in
jp
mov
sub
jecxz
jle
mov
insl
test
mov
adc
ret
out
mov
out
mov
add
lock
fisubrl
mov
aad
mov
fwait
lods
inc
stc
gs
sbb
insb
lods
xchg
mov
push
add
in
jp
sub
inc
add
dec
add
int3
movsl
sbb
mov
arpl
mov
popf
outsb
xlat
mov
add
mov
add
inc
loopne
sbb
shl
sbb
jb
and
add
sti
out
adc
dec
addr16
xchg
jae
jp
ljmp
out
test
jl
mov
inc
push
imulb
je
add
ret
push
daa
insb
dec
bnd
xchg
fisubrl
push
xor
and
mov
xchg
mov
mov
cwtl
mov
ror
shll
ja
ficomps
or
adc
popa
shll
or
adc
mov
js
aad
lret
sub
mov
pop
mov
fiaddl
push
daa
cli
or
push
fsts
bound
and
test
cmpxchg8b
jle
arpl
ret
insl
daa
or
or
and
pop
in
les
push
mov
jmp
jbe
outsb
call
cmp
ret
mov
mov
sbb
loop
jmp
pop
bound
lods
rcr
and
cmpsl
ficomps
cmp
jmp
fstps
xchg
aad
jp
leave
imul
aad
leave
pop
ret
in
mov
test
mov
aam
sub
imul
into
add
adc
push
aam
or
arpl
fcmovb
loopne
addr16
fidivs
movsl
add
sarb
push
fldenv
pop
scas
popf
xlat
xchg
cmc
mov
arpl
push
or
cmp
imul
neg
fcompl
stos
mov
inc
outsl
shrb
out
add
pop
pop
add
leave
pop
lods
xor
adc
test
in
into
push
or
inc
pop
xor
mov
aad
mov
mov
mov
sub
add
sub
into
mov
loop
cmpsl
test
std
or
adc
outsb
adc
leave
cmp
int
aam
jb
mov
lods
pop
std
jbe
inc
lret
addr16
fs
inc
mov
out
jecxz
stc
inc
and
add
call
jne
push
mov
daa
cmp
in
bound
rcr
mov
fcmovnbe
iret
dec
xor
outsb
dec
xchg
pop
into
jns
cmp
ja
push
out
ss
sbb
in
mov
xchg
ret
fcomp
dec
push
data16
dec
mov
sbb
dec
cmpsb
lcall
adc
aaa
jmp
fldl
or
aas
ja
mov
push
test
inc
dec
cltd
pop
ret
cld
frstor
xchg
mov
insb
lea
movb
mov
jp
out
aam
sub
aam
sub
fwait
bound
test
mov
ret
decb
pop
inc
mov
push
sbb
jnp
incl
lods
cmp
ss
fidivl
stos
mov
out
jle
fiaddl
rcll
xchg
arpl
pop
xor
lcall
jp
mov
std
cmp
ficomps
adc
lods
adc
out
pop
clc
loopne
jp
xor
cs
push
int3
sbb
js
sbb
xchg
in
stos
and
inc
cld
js
pushf
inc
jb
mov
repnz
stos
jbe
js
lock
in
popf
sbb
jmp
cmp
sub
jge
push
and
cmpsl
mov
test
adc
fldt
outsl
subl
inc
test
ror
mov
ret
les
xor
mov
sbb
das
aad
or
movsb
test
adc
mov
and
loop
test
lahf
lods
cmp
ret
adc
sarl
mov
xor
jp
movsl
punpckldq
push
jo
adc
sbbl
andl
repz
add
pop
js
mov
xchg
push
lods
test
daa
in
push
out
ret
jo
sbb
sahf
jbe
sub
std
lods
jp
ror
inc
popf
test
jbe
test
mov
and
mov
iret
xchg
fadds
test
popf
mov
adc
ja
les
add
insb
lods
xor
mov
push
mov
add
rcrb
test
dec
lods
adc
ret
push
jmp
aas
test
jle
ret
lds
mov
gs
insb
or
ret
es
push
loopne
mov
popa
frstor
call
pop
arpl
test
adc
ljmp
arpl
adc
adc
cwtl
mov
mov
les
add
fists
mov
mov
or
movsl
js,pn
ret
lret
lods
pop
cmp
lods
fistpl
cld
adc
std
clc
test
bound
jp
add
leave
sub
inc
mov
in
jmp
imul
sbb
mov
or
stos
mov
xchg
ret
movsl
mov
mov
enter
mov
jg
add
lods
xor
lods
xchg
xchg
shl
leave
or
jb
jmp
mov
scas
fdivrl
cwtl
fidivl
mov
xchg
bound
int
fisubrl
popf
in
cli
inc
mov
mov
insb
mov
aas
test
mov
data16
bound
mov
cwtl
nop
xor
aad
mov
fcmove
sbb
xchg
scas
shlb
lcall
mov
adc
cmpsb
mov
pop
div
bound
aad
xchg
popa
lret
clc
enter
push
and
jp
jbe
cmp
xchg
les
outsl
ret
int3
or
sub
fsts
pop
xor
xor
inc
rcr
jno
or
jp
in
es
push
rorb
push
ret
mov
jns
leave
lret
inc
nop
out
mov
mov
stos
pop
and
pusha
pop
lret
enter
mov
int3
push
aam
jge
cwtl
fst
pop
sbb
stc
pop
pop
test
mov
add
fcmove
test
fstpt
adc
bnd
rcrb
adc
ss
push
fildl
jp
inc
inc
imul
and
out
out
pop
push
xlat
enter
clc
lods
insb
loopne
mov
cltd
cld
mov
lahf
cwtl
mov
sub
leave
add
jle
ret
sub
cwtl
and
out
int3
movsl
or
inc
and
data16
lods
call
mov
push
jno
pop
cmpb
ret
ret
lods
pop
or
movsb
fsubrl
mov
jge
push
cmp
fdivrs
mov
ds
mov
jle
ret
sahf
mov
mov
test
loopne
in
jp
xor
mov
mov
fstpt
cmpsb
sbb
mov
jo
in
mov
mov
outsb
mov
fnstsw
sbb
jp
xlat
push
sbb
out
fninit
push
fimull
daa
dec
mov
ret
std
rol
cmp
sub
sub
sbb
bound
mov
jmp
mov
daa
mov
ret
out
lcall
aam
xchg
and
jmp
lock
repnz
mov
test
lods
bound
adcb
jo
popa
dec
jecxz
lods
and
hlt
xchg
bound
jmp
xor
push
pushf
cmp
mov
xchg
adc
and
daa
fstpl
outsb
xchg
sti
push
fcmovnu
xor
fiaddl
xchg
cmc
scas
shl
std
lods
pop
sbbl
sbb
les
or
ret
sbb
ret
sbb
add
cmp
jbe
add
push
sbb
pop
mov
push
leave
fbld
addr16
test
loop
cmp
ror
jp
dec
cmp
xchg
or
xchg
ret
int
mov
sbb
cltd
push
fidivrl
cmp
fisubs
pop
dec
out
gs
add
cmpsb
add
jno
push
test
mov
lods
outsb
fsubrl
lods
fdivrs
lods
inc
adc
sbb
dec
sub
test
push
ret
fsubl
aam
sbb
ret
data16
lods
push
xorl
lea
cmc
scas
lret
push
imul
fldt
mov
sub
push
xchg
adc
and
movsl
jle
data16
lods
shll
jne
mov
add
and
jae
mov
push
arpl
mov
add
sbb
adcl
fidivrl
push
stc
pop
adc
mov
push
mov
mov
and
xchg
aaa
pop
or
push
or
mov
in
enter
mov
ret
int
lods
leave
movsl
push
cmp
sbb
pop
and
sbb
mov
push
cwtl
cmp
mov
or
push
push
mov
test
shlb
arpl
and
pop
xor
fisubrl
and
lret
push
cmp
je
nop
data16
jmp
fdivrs
pusha
jae
or
jp
enter
jg
out
mov
int3
pop
movsl
in
rol
loopne
adc
ret
mov
daa
popf
loope
adc
jle
popf
pop
lcall
int
int
pop
movsl
movsb
mov
cmp
into
icebp
data16
sub
lret
fwait
pusha
lods
xchg
mov
jno
jle
pop
mov
sarl
sub
pop
lcall
fwait
outsl
mov
xor
lahf
enter
fdivr
push
loopne
jp
add
out
jecxz
push
xchg
out
hlt
adc
scas
fsubrl
mov
adc
jp
dec
shll
cmpsb
pop
test
pop
and
das
call
iret
mov
shrl
mov
daa
adc
movsb
jge
popf
mov
mov
dec
jle
lret
jg
mov
imul
jae
and
lods
mov
sti
mov
lcall
clc
pusha
mov
lods
mov
pop
ds
arpl
int
xchg
or
ret
lds
scas
jle
ret
inc
pop
in
loope
dec
les
sub
ret
inc
jae
add
inc
add
mov
test
push
sbb
sarb
fwait
movl
loopne
sbb
fimuls
adc
mov
dec
loop
lock
mov
add
les
aad
shlb
repnz
leave
loopne
lock
jmp
or
mov
popf
and
push
daa
mov
mov
loope
dec
in
push
adc
mov
mov
sti
shll
fdivrs
cmpsl
mov
push
adc
mov
mov
mov
add
shl
or
or
push
sbb
jne
pop
movb
dec
mov
mov
int3
sti
js
push
pop
mov
push
add
bound
jle
scas
lods
stos
lds
lret
jg
fxch
adc
rclb
call
cli
out
test
fstpl
out
xchg
aas
xchg
test
adc
mov
cld
adc
jl
adc
cld
adc
ficoms
test
jecxz
mov
enter
pop
shl
add
lahf
cmpps
mov
nop
popa
pop
les
leave
xor
dec
mov
ficomps
push
mov
cmp
out
pop
lods
sub
test
or
into
sti
fmulp
add
mov
mov
movsb
pop
test
mov
dec
inc
sbb
jo
and
inc
test
adc
stc
stos
nop
jle
mov
mov
loopne
sbb
xchg
arpl
lods
mov
mov
push
mov
jb
mov
loop
out
or
push
mov
fidivl
jnp
movups
mov
data16
cld
data16
rolb
mov
fiaddl
and
inc
aam
xor
jp
sarl
movsl
push
lods
loope
sti
repz
cmpsb
test
adc
xor
mov
in
bound
dec
push
push
out
push
test
test
dec
xchg
sub
into
mov
mov
or
data16
pop
sub
dec
or
imul
sbb
push
dec
inc
fidivrl
imul
shl
jecxz
sti
addr16
ficoml
mov
jns
mov
cmp
daa
mov
outsb
pop
int3
fcomp
sahf
out
xor
and
jb
xlat
xchg
notb
inc
cltd
sbbb
outsb
cli
test
aad
mov
popa
adc
inc
push
inc
lcall
faddl
leave
sbb
push
jo
loope
xlat
mov
jnp
or
mov
ror
fisttpll
jecxz
mov
lods
jecxz
jg
ret
andb
jp
add
js
movsl
lods
cmp
lods
loop
pop
dec
cwtl
je
aam
or
push
pop
shll
sub
cld
push
fsts
in
enter
rcrb
scas
mov
movsb
mov
mov
ret
xor
aam
test
pop
clc
ret
jecxz
mov
mul
ret
sarb
inc
sbb
push
fiaddl
sbb
fcmovb
or
push
mov
mov
sbb
adc
cld
mov
mov
icebp
jp
inc
outsl
ffree
in
loope
gs
jle
ret
push
pop
fsub
movsl
dec
inc
pop
ja
mov
fbstp
sub
mov
loopne
bound
push
jge
and
dec
cld
cmp
lahf
fdivrl
push
mov
and
repnz
add
aad
adc
fbld
jp
and
lret
and
mov
cmp
icebp
inc
mov
test
std
mov
mov
push
xchg
jne
pop
mov
or
lock
clc
std
xchg
ret
ret
aaa
jmp
js
push
sub
bound
dec
test
dec
adc
lods
xor
mov
mov
dec
mov
cli
mov
xchg
pop
sbb
adc
inc
sub
mov
mov
jge
setne
push
jp
adc
jp
rcrb
cmpsl
fnstsw
in
pop
in
insl
mov
in
frstor
addr16
lods
out
jbe
xchg
inc
jecxz
lret
and
out
sahf
test
jge
jle
fisubrs
add
scas
imull
cld
lods
bound
sbb
add
and
adc
pop
ret
add
testb
xchg
dec
add
or
ret
xor
outsl
lods
pop
out
pusha
test
adcb
mov
movsl
ret
sub
int
outsl
jle
fwait
xor
ljmp
pop
mov
cmpsl
shll
mov
lods
call
mov
lods
push
push
mov
addr16
shlb
ret
mov
test
in
pop
and
arpl
daa
mov
or
loopne
lds
xchg
in
and
inc
fs
loopne
cltd
jne
or
rcrb
std
je
push
xor
call
sbb
cmp
push
sbb
jnp
arpl
call
mov
cmpsl
movsl
scas
lods
or
lret
test
mov
pop
adcl
lea
jne
sbb
addb
nop
sub
adc
out
fwait
dec
pop
mov
outsb
fldl
ficoms
mov
cmpsb
xchg
imul
popf
pop
jb
xor
ljmp
or
je
adc
fadd
ficomps
mov
xorb
xchg
stc
mov
lods
add
imull
daa
bnd
push
xchg
bound
data16
mov
jp
push
hlt
jp
xchg
aas
int
les
cmp
lods
and
loop
lods
cmp
ss
and
rcll
xor
aaa
out
sbb
and
jge
ja
sbb
add
data16
mov
cmpsb
in
sub
mov
adcl
fldl
adc
pushl
push
lret
lods
aad
roll
dec
cmpsl
in
cltd
sbb
xor
stc
popf
inc
xor
xor
dec
xchg
mov
push
mov
push
sub
xchg
aas
out
rol
push
mov
mov
lock
loop
nop
adc
in
pop
scas
sbb
leave
rcrb
sub
pop
xchg
sarb
fldenv
pop
dec
and
push
cmp
repz
mov
jnp
inc
mov
shrb
jae
and
imul
pop
lods
fiaddl
mov
mov
inc
mov
pop
rep
push
fwait
sbb
mov
and
push
mov
cmp
lcall
stos
cmpsl
popl
lods
xor
mov
repnz
andl
outsb
testl
add
es
mov
pop
and
xchg
cmp
push
cmp
aas
jecxz
push
fwait
cmc
push
xor
addr16
testl
mov
cmp
in
and
cltd
jmp
inc
adcb
and
subb
jl
push
pop
xchg
mov
inc
pushf
push
repz
dec
stc
sbb
add
xchg
mov
xchg
pop
into
fistpl
jne
mov
daa
lods
leave
mul
daa
xchg
jp
cmp
dec
rolb
mov
in
in
pop
in
and
xchg
mov
gs
icebp
xor
ss
lret
xor
push
movsb
out
push
pop
ds
out
in
dec
lea
jnp
jg
mov
das
xlat
pop
xchg
ja
lock
and
in
cmp
jg
mov
test
lcall
or
pop
xchg
fisubl
and
adc
cli
inc
jp
js
call
enter
and
fs
dec
nop
sub
adc
ja
in
incl
jnp
shrb
cs
test
lret
pop
sbb
js
adc
push
jge
inc
mov
mov
dec
xor
scas
pop
iret
pop
lock
pusha
push
add
pusha
int3
jl
scas
imul
subb
pop
imul
mov
add
stc
jo
cmp
sbb
int
out
pop
sarb
xor
sahf
pop
aaa
lock
mov
mov
out
pop
mov
and
mov
out
pop
pop
sbbb
clc
loop
dec
push
inc
sub
mov
jg
in
lods
enter
pop
ljmp
das
pop
aam
mov
jo
mov
imull
inc
sbb
sbb
in
cmp
pop
dec
mov
hlt
daa
clc
or
dec
ret
outsl
mov
mov
mov
add
addr16
pop
addl
add
mov
inc
mov
add
std
arpl
fmulp
sub
jno,pn
lods
cmp
lock
jmp
inc
divl
pop
sub
lea
rorl
ficoms
mov
cmp
pop
sahf
cwtl
data16
loopne
push
pop
dec
in
lock
cltd
shrb
push
fstpt
xchg
or
xchg
cltd
mov
xor
andl
add
or
mov
jno
pop
loopne
mov
dec
sub
decb
gs
mov
int3
aam
enter
js
ret
jl
xor
and
call
aaa
fdivrl
push
leave
inc
sub
lret
push
sbb
clc
cmp
pusha
push
leave
arpl
mov
adc
test
lds
add
fstpl
fs
jmp
lds
mov
jnp
inc
mov
sbb
pop
dec
es
pusha
push
mov
mov
mov
repz
loope
lcall
pop
sbb
dec
sub
in
test
xchg
das
cmp
and
ret
adc
sbb
fstp
loope
sbb
xchg
push
push
add
push
inc
mov
les
adc
add
popf
iret
xchg
mov
push
ss
sarl
and
daa
sbb
push
jmp
sub
jg
adc
orb
scas
lahf
shlb
pop
clc
addr16
fidivl
cwtl
out
test
cmp
dec
pop
push
scas
in
inc
ss
jns
movsl
clc
mov
test
in
out
in
inc
testb
adc
mov
into
sub
push
push
add
fldl2e
pop
cli
cmc
or
mov
jne
imul
push
fsubs
decl
sbbb
in
iret
out
sbb
fcoms
in
fldcw
cwtl
repnz
mov
sbb
adc
out
jbe
inc
and
in
jnp
xchg
or
mov
xlat
lcall
xchg
outsb
int3
xchg
lods
cmc
mov
roll
pop
test
xlat
movsb
pop
int3
das
imulb
das
push
add
sbb
mov
pop
and
cltd
lahf
scas
aaa
leave
jnp
adc
add
fcoml
jmp
sub
xchg
movsb
or
pop
pop
ret
hlt
xchg
not
out
mov
clc
and
roll
stc
sahf
out
adc
or
sbb
jb
subb
fidivrs
call
xchg
stc
adc
dec
sti
xor
outsb
lahf
push
aad
popf
inc
lock
popl
flds
xchg
orl
pop
cltd
mov
fdivl
fbstp
outsl
test
cmp
or
ljmp
xchg
lcall
outsb
or
push
sub
fstps
negb
or
int3
lcall
dec
andw
sti
negb
out
push
orb
popf
mov
js
sahf
sahf
cmpsl
pop
push
mov
cli
stos
xchg
adc
add
sbbl
jb
jmp
cmp
out
add
mov
leave
les
add
das
fisttpl
sti
add
les
adcl
inc
shll
xchg
int
add
cld
push
sti
xchg
lock
jmp
mov
jnp
sti
and
mov
hlt
cld
jmp
leave
ret
insl
mov
dec
andb
insl
pop
or
mov
pop
popf
jl
add
ja
adc
in
xor
lret
push
pop
sbb
test
jmp
mov
imull
push
cld
insb
fucomip
outsl
fdivrs
std
ja
loop
cwtl
adc
loope
xchg
and
xlat
test
out
ds
lock
sbb
push
cmovg
xor
fcomps
dec
clc
fndisi(8087
mov
or
pop
mov
sub
stc
sub
lea
popf
and
mov
iret
lcall
pop
xchg
fwait
pop
sub
repnz
pmaxsw
or
lret
into
jmp
lods
andb
movsb
rclb
push
std
mul
mov
add
fisubs
test
int3
cwtl
js
inc
pushf
pop
push
hlt
idivb
loope
cmc
sbb
mov
cmp
sbb
sbb
xchg
sub
hlt
shrb
movsb
jbe
mov
cmp
das
adc
stc
mov
das
aaa
test
ficoml
sarl
pop
mov
and
mov
test
cwtl
cli
test
jl
or
add
addl
lods
shll
adc
insl
lret
xchg
adc
and
cmpsb
lret
lahf
mov
jmp
sbb
sarl
pop
add
cmc
cmp
es
or
xchg
popa
in
int3
or
stos
push
cmp
jns
pop
int3
and
aad
jbe
sub
fistpll
pop
xchg
mov
sti
add
jno
lahf
mov
fmuls
add
cmp
shrb
sub
ljmp
fisubs
and
xchg
sbb
mov
mov
push
xchg
inc
out
lock
js
or
int
loopne
add
ja
cwtl
cmp
into
aaa
lcall
sarb
repz
add
mov
enter
fsubrl
mov
gs
fdivrp
insl
push
mov
jecxz
stos
cmp
xchg
sub
call
ljmp
sbb
xchg
mov
gs
cmc
jl
cwtl
push
cwtl
js
js
inc
cld
les
pop
in
test
add
adc
enter
in
fdivrp
ficoml
ret
and
gs
pop
loope
aaa
icebp
in
in
lods
mov
loopne
mov
in
push
nop
cltd
call
xchg
cli
divb
mov
shll
pusha
xchg
jle
sbb
mov
nop
stc
ljmp
idivb
lods
test
gs
jp
sbb
jle
mov
sbbb
sub
mov
add
sti
clc
or
and
and
xlat
pop
adc
mov
or
fisubl
sahf
fsubrs
lock
sarl
dec
pop
lods
add
push
xchg
xor
cmp
add
out
sub
xchg
daa
mov
dec
mov
into
push
movsb
add
push
jnp
repnz
roll
inc
test
fidivrs
scas
lods
enter
loope
sahf
test
pop
fsubl
adc
pop
adc
lret
xor
mov
sub
faddp
pushf
add
jmp
pop
mov
ljmp
jp
mov
mov
push
movsb
popa
push
dec
and
adc
into
cmc
out
or
sub
lock
in
sbb
push
inc
ret
lahf
cmp
adc
pop
lea
fisubl
jl
enter
add
push
fwait
mov
jl
insb
push
movsl
push
xchg
cmp
cmp
fisubs
icebp
and
cmp
fnstcw
and
shlw
ret
mov
repz
mov
pop
xor
push
loope
fstpt
cmc
or
pusha
ss
mov
inc
movsb
out
aaa
xchg
outsl
into
pop
pop
in
sbbb
pop
dec
je
dec
lea
fldenv
loope
or
sbb
imul
pop
cltd
mov
repz
or
inc
mov
xorl
add
orl
cmc
nop
lock
outsl
jle
outsb
leave
xchg
ret
push
lret
ss
stos
int
rcrb
xchg
fwait
ret
xor
mov
testb
leave
scas
leave
insl
sub
xchg
and
aam
push
push
sbb
lods
mov
pmullw
leave
in
dec
lret
inc
or
push
insl
aad
ffreep
iret
pop
lods
in
outsb
and
jnp
add
inc
sar
push
fidivrs
idivb
ljmp
int
sub
fiaddl
rol
shl
inc
sahf
negl
inc
add
adc
lods
push
sarb
xor
fldt
push
sub
fcompp
outsb
or
jl
clc
add
xlat
idivl
push
pop
xchg
mov
adc
rol
fsubr
in
es
imul
xchg
jle
mov
inc
ljmp
mov
fcmove
ret
mov
and
push
test
fisubrl
rcll
std
ds
frstor
inc
in
gs
dec
cmp
mov
sbb
cltd
push
jnp
mov
loope
cmpsb
sub
xchg
das
cli
cmp
arpl
pop
or
ret
stc
adc
fisubrl
mov
add
push
leave
stos
and
and
push
inc
mov
push
dec
lods
in
and
mov
repz
add
push
loope
imul
cmp
subl
lea
inc
xlat
js
or
stos
neg
movsl
ror
xor
mov
jp
add
adc
pop
xchg
movb
jge
aas
jge
fisubrl
outsb
ljmp
jg
test
cmpsb
aaa
dec
dec
push
pop
test
orl
xor
add
pop
ret
movsl
out
push
sbb
dec
xor
les
xchg
faddl
push
mov
lods
aad
fsin
jl
sub
rcrb
push
loop
adc
scas
xor
das
xchg
int
adc
cs
or
cmp
xor
xchg
fdivrl
stc
mov
mov
test
mov
rcr
lret
sbb
mov
das
sub
dec
dec
push
xchg
cs
lods
testl
rolb
hlt
dec
sti
pop
jo
pop
and
daa
cmc
lcall
pop
mov
pop
loop
cmp
pop
fisubrs
loope
and
out
xlat
out
aad
insl
lds
push
ss
jne
es
pushf
cmpsl
cltd
dec
mov
insb
sbb
jnp
cmpsl
sbb
push
ss
sub
js
aam
adc
arpl
cmpsl
xchg
loopne
inc
hlt
push
or
inc
xlat
mov
popa
mov
test
and
sahf
mov
or
push
sub
test
ret
fcomp
into
cmp
shlb
bound
add
mov
data16
nop
and
adcl
popf
jge
popa
lods
std
jl
jge
push
pop
sbb
adcb
into
mov
xchg
mov
sub
sbb
dec
rcrb
mov
xchg
inc
adc
cmc
xchg
dec
shll
insl
insl
cmp
mov
mov
pop
inc
or
pop
xchg
shl
popaw
jge
out
cmpsl
adc
mov
inc
cli
push
dec
shrb
jecxz
in
dec
daa
clc
aad
pop
pusha
scas
data16
sbb
sahf
daa
cltd
out
rcll
push
cwtl
sub
adc
pop
fsubl
xor
test
pushf
lcall
jle
je
xor
pop
or
xor
push
xor
sub
cmp
cmpsb
pop
push
and
xchg
inc
adc
inc
pop
cmp
addr16
pop
mov
or
jecxz
cs
lret
js
xchg
loope
mov
ss
mov
cmp
sahf
fnsave
cmp
pop
dec
mov
pop
pop
rep
xor
gs
vmread
sbb
cwtl
inc
xchg
out
push
cmp
sbb
sub
mov
fs
add
and
xlat
xchg
mov
mov
pop
fldenv
int3
out
scas
xor
insl
cmpsl
neg
mov
sbb
test
ss
sub
in
sub
cmc
imulb
mov
enter
fsubp
jno
popf
dec
push
jecxz
test
loopne
scas
jp,pt
jmp
test
ret
mov
sub
loopne
arpl
movsb
and
lods
sbb
sbb
mov
adc
mov
or
ss
arpl
and
aas
lods
sub
mov
sub
mov
out
cmpsb
orl
int3
int
not
sub
mov
aaa
jg
fisttpl
dec
loope
inc
sbb
mov
inc
stos
shlb
in
inc
fninit
jp
daa
lahf
js
aad
out
data16
bound
push
movsl
movsl
ret
push
push
in
negb
mov
icebp
mov
aas
inc
xlat
push
out
mov
add
andl
in
xchg
xabort
sti
xchg
adc
aad
outsb
jmp
mov
xchg
bound
cmp
jp
push
in
inc
jecxz
out
std
adc
aad
dec
loop
sarb
inc
ret
jno
cmp
lods
adc
fs
in
fwait
jmp
repnz
and
push
stc
xor
sahf
out
jge
and
push
push
push
pop
int3
xor
pushf
cmc
lcall
aaa
sub
loopne
xchg
outsb
fcmovb
movsl
mov
jns
pop
pop
mov
mov
dec
or
push
adc
fwait
dec
imul
js
fmuls
out
cmp
popf
mov
push
rcrl
sti
push
cmpb
in
sbb
shl
and
push
stc
fwait
out
int3
pop
outsl
lahf
sbbl
jmp
lock
cli
xorb
addl
push
popa
popf
les
cwtl
fisttpll
adc
data16
hlt
push
iret
fwait
je
push
testb
cs
aas
lods
out
add
aad
hlt
adc
int3
out
cmp
imul
fwait
shll
and
push
notl
mov
out
popa
test
popa
mov
pop
ret
orl
movsb
inc
sbb
sbb
or
sahf
int
scas
add
insb
aaa
add
jmp
flds
adc
loope
cmp
leave
test
cld
sarb
cs
insl
fdivrp
stos
ljmp
pop
adc
loopne
mov
imull
pop
lret
cmp
js
pop
mov
cltd
cltd
insb
jo
and
in
in
push
cmpsb
mov
imul
jl
movsb
push
cmp
mov
andl
out
into
out
test
fstpl
lahf
orb
add
enter
cwtl
jmp
adc
push
outsb
mov
loop
mov
mov
xchg
or
imul
shlb
adc
lock
mov
pop
inc
incl
fwait
adc
pushf
adc
call
movsl
mov
ljmp
or
xor
lcall
cltd
test
sahf
fnstsw
xor
xor
cmp
movsb
lods
xor
lret
lahf
add
mov
mov
mov
mov
mov
arpl
cmovae
jo
or
in
gs
xlat
xchg
and
sub
cmp
les
outsl
xorb
dec
imul
lret
call
pop
sbb
outsb
mov
jle
sbb
lods
mov
jmp
add
imul
out
push
xchg
fmuls
lods
stc
les
mov
mov
mov
loop
pop
fwait
xchg
loop
jns
mov
push
paddusb
sahf
call
stc
mov
test
jl
sub
xchg
adc
xor
adc
xor
xchg
sub
enter
sbb
jl
adc
pushf
adc
jecxz
bound
iret
outsl
sahf
out
rcll
jecxz
movsl
lcall
test
push
adcl
mov
pushaw
sub
lea
cmp
pop
and
lock
loop
inc
out
add
cmc
arpl
or
mov
pop
jecxz
jb
jns
jbe
or
lret
decb
and
imul
add
xor
pop
inc
mov
push
pop
notl
or
inc
mov
add
inc
rcrb
pop
pop
lahf
stos
dec
pop
in
data16
and
fadd
cltd
faddl
cwtl
hlt
xchg
xor
mov
or
mov
jge
lea
mov
stos
clc
arpl
daa
lret
sbb
lcall
push
lods
call
sar
sub
dec
pop
outsb
fiadds
mov
sub
mov
jae
pop
lods
mov
fdivs
and
pop
aad
int3
fnstenv
cmp
mov
pop
loopne
dec
lds
lds
out
fmuls
or
push
pop
psrlw
sbb
movsb
rcr
xor
jle
bound
ret
mov
dec
in
std
andl
gs
mov
sub
pop
push
fadds
out
mov
lahf
outsl
loope
ja
adc
sbb
popf
inc
pop
xchg
or
mov
loopne
cmova
mov
add
mov
cmp
or
jecxz
push
clc
cli
sub
sbb
pop
in
cmp
lods
ror
stos
es
cmp
adc
test
push
inc
sbb
fildl
mov
repnz
clc
mov
fcom
xchg
test
mov
mov
xchg
or
dec
cwtl
fnstcw
shll
outsl
f2xm1
sbb
in
out
and
xlat
mov
xchg
sbb
push
dec
pop
mov
cld
dec
jo
iret
dec
mov
cmpsl
sub
les
nop
dec
push
mov
inc
mov
xchg
mov
leave
in
leave
xor
xchg
inc
jp
ret
mov
push
mov
add
mov
lock
ret
xor
cmpb
fsubl
mov
enter
leave
shll
xchg
mov
gs
or
testl
jb
ret
cmp
mov
in
sahf
and
jl
int3
dec
gs
jae
out
scas
jns
mov
xor
or
sub
lcall
cmp
sub
icebp
bound
sbb
adc
and
mov
test
icebp
jne
icebp
divl
ret
xchg
cmp
cltd
popf
pop
addr16
push
cmp
mov
pop
outsl
sbb
les
jp
jbe
lock
mov
test
imul
pop
lock
jnp
mov
inc
in
cmpsl
loop
jge
and
pop
dec
and
mov
movsb
or
mov
gs
mulb
mov
xchg
mov
mov
lcall
dec
xchg
mov
psubusb
ds
data16
jge
repz
push
popa
cmpb
jno
sub
mov
les
xchg
loope
mov
out
xor
push
scas
mov
pusha
cmp
push
xchg
mov
jle
mov
mov
aad
mov
jecxz
call
sub
mov
sub
inc
xchg
inc
xchg
pusha
xchg
out
mov
xchg
pop
lea
mov
push
or
je
xchg
bound
ret
cmc
shlb
mov
jbe
push
cmc
jae
mov
fidivl
xbegin
jae
into
cmc
jp
outsb
les
stos
daa
or
jmp
jp
imul
xor
mov
push
or
test
lods
jne
xor
jp
adc
adcl
push
ret
cs
lcall
hlt
js
iret
sub
xchg
cld
mov
sbb
mov
imul
jecxz
pop
cmpsl
jbe
leave
lods
push
mov
mov
ss
sub
mov
ret
pushf
js
scas
cmc
and
jecxz
sub
pop
mov
rolb
mov
loope
xchg
and
shl
aam
cltd
repnz
shrb
and
xchg
cmc
xlat
fcompl
dec
adc
xor
outsl
lock
scas
add
jecxz
in
sbb
lret
and
add
inc
repnz
jecxz
push
and
test
loope
push
mov
cmc
and
jp
inc
push
std
scas
mov
jge
pop
inc
jno
push
scas
sti
cmp
rolb
jbe
shl
sbb
ss
mov
lahf
fisubl
cmp
insl
cmp
lods
or
rcll
les
repnz
stos
xchg
mov
test
frstor
shlb
or
sbb
ss
or
icebp
jae
push
jns
mov
insl
mov
inc
pushf
pop
imul
sbb
xchg
cmp
call
sub
mov
sub
jnp
leave
push
inc
cmpsl
dec
out
dec
test
mov
repnz
and
sahf
cmp
dec
fsubrs
push
xchg
mov
cli
cwtl
fisubrl
mov
nop
mov
jnp
call
or
sbbl
inc
sti
lock
push
sbb
inc
stc
lods
loopne
xchg
xchg
leave
rcrl
push
jo
test
ja
movb
out
push
jb
les
fsubrs
fs
ljmp
push
add
rcrl
ret
jae
jmp
xchg
cmp
ficompl
cmp
fmul
jne
dec
out
inc
push
pop
dec
movsl
add
sbb
mov
mov
jne
ss
lods
daa
lret
jle
cltd
cmpsl
pop
add
fisttpll
push
movsl
arpl
js
pop
loope
lret
xor
lock
mov
test
sub
xor
sub
mov
and
imul
cwtl
in
jb
in
loope
mov
fs
xchg
je
pop
repnz
insl
jno
inc
and
mov
mov
mov
stos
aam
push
xchg
adc
jecxz
xor
test
add
andb
and
sahf
jne
jb
lahf
loop
in
in
mull
pop
inc
cmp
mov
add
jno
add
std
les
imul
jle
sbb
jne
in
sbb
jns
js
filds
test
mov
lds
out
rorb
adc
mov
aad
mov
push
sub
lret
incb
sbb
dec
flds
aam
inc
sub
lret
xchg
dec
loop
push
mov
and
xor
jl
push
push
int
iret
xchg
xor
xor
jne
xchg
inc
or
jg
mulb
cmp
aas
jne
xor
push
mov
or
leave
testb
push
subb
enter
fildll
out
xchg
sub
mov
sti
stc
lret
cmp
or
cltd
fldenv
xchg
push
movsl
pop
lret
mov
aaa
mull
add
into
testl
push
mov
jne
in
or
mov
dec
mov
lahf
imul
xorb
lret
jmp
mov
es
data16
jns
jmp
and
pop
leave
pop
mov
dec
loopne
mov
cmp
xchg
jle
mov
aam
arpl
push
inc
mov
in
loop
repz
bswap
gs
adc
nop
mov
pop
arpl
cwtl
cmp
call
out
in
xchg
pushf
cld
cmpsb
inc
cltd
or
lret
outsl
or
mov
movsl
insb
das
sub
cltd
jb
lcall
lea
mov
outsl
push
imul
adc
jns
and
dec
lock
rorb
test
in
test
xchg
push
mov
sub
cmpsb
lock
into
popa
test
xchg
mov
je
jg
push
fwait
adc
insb
adc
cli
jmp
xchg
stos
jns
movsl
aas
roll
add
push
add
add
push
add
roll
add
add
add
add
add
add
add
add
add
roll
add
add
add
roll
add
add
add
addb
add
in
rolb
add
rolb
add
rolb
add
push
add
push
add
push
add
roll
add
push
add
roll
add
push
add
roll
add
push
add
push
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
xor
aas
adc
xor
sub
cmp
add
mov
or
fisubl
out
inc
push
xchg
inc
pop
add
loopne
andl
adc
inc
shlb
xchg
dec
adc
pop
rcrl
sbb
xchg
and
add
mov
mov
and
and
dec
dec
adc
mov
xor
shrl
adc
or
jno
das
cmpsb
cmp
adc
sub
sahf
loopne
lret
mov
mov
jo
bound
push
add
push
pop
cltd
gs
add
stos
test
cmp
test
jns
inc
inc
mov
jo
inc
xchg
aaa
int3
inc
sbb
test
push
mov
mov
sub
or
push
jp
add
cwtl
mov
adc
jmp
repnz
out
cwtl
jns
mov
pop
test
jb
dec
lock
les
das
or
cmp
int3
jns
mov
or
lods
push
push
bound
push
outsb
adc
add
adc
dec
add
add
add
pop
test
imul
xorb
dec
add
in
xor
hlt
fnstsw
dec
add
test
in
cmp
pop
add
jl
sbb
or
ret
ficomps
mov
mov
aam
orb
mov
sub
lds
out
nop
cmp
repnz
sub
xor
loopne
lods
mov
and
inc
call
test
fst
fsubrp
xchg
adcl
mov
cmpsl
pop
sarb
xor
pop
syscall
movsl
mov
test
inc
std
rorb
adc
mov
aaa
xlat
sub
and
push
add
cmp
adc
ss
in
adc
inc
fdivrl
add
popa
popf
pop
cmpsl
adc
cmpb
push
fistpl
push
pusha
add
jmp
push
and
inc
and
or
and
push
lock
xor
or
or
jo
out
mov
aas
add
xor
fcomps
sbb
sub
or
nop
movsl
and
shlb
add
dec
fdiv
lcall
add
shl
push
mov
scas
xor
enter
mov
push
mov
adc
dec
cmpb
and
aam
inc
pop
hlt
mov
or
cmpsl
pusha
mov
sarl
test
scas
jns
lcall
jb
lea
pop
or
xchg
ret
sbb
jle
and
shrb
or
or
sub
adc
adc
xchg
and
and
test
inc
pop
inc
inc
pusha
inc
fs
xor
pop
jo
inc
js
fs
jl
dec
jle
cmp
add
orl
addb
out
and
test
cmp
mov
shlb
or
push
cmpsl
and
and
xor
sub
mov
push
or
mov
aad
sub
inc
adc
xchg
dec
and
icebp
loope
and
into
sar
push
sarb
xchg
adc
sub
push
in
in
adc
ljmp
jns
mov
nop
testb
pop
mov
aas
or
inc
add
and
inc
add
sbb
out
in
aaa
or
dec
mov
popa
ds
inc
adc
mov
or
sbb
sbb
xor
push
dec
sub
sahf
add
adc
pop
or
cmp
xchg
ss
int3
push
add
adc
lahf
cmp
add
sbb
out
ja,pt
dec
pextrw
cmp
fimull
test
stos
adc
xchg
and
sub
roll
xchg
pop
or
adc
pop
inc
in
mov
mov
mov
mov
add
arpl
and
ljmp
adc
adc
aaa
adc
sbb
adc
sub
cmp
insb
pop
add
bound
lds
lcall
jo
js
adc
je
cmp
ds
mov
push
inc
jle
inc
orb
inc
movsl
cmp
aaa
inc
test
mov
or
enter
cwtl
leave
enter
int3
sbb
or
enter
pop
jmp
clc
or
cli
or
test
int
jnp
or
mov
lret
mov
or
or
adc
and
adc
adc
aas
push
adc
sbb
add
push
sbb
outsb
and
outsl
and
out
and
data16
int
add
je
add
add
loopne
dec
enter
rcrb
or
sbb
add
jnp
sbb
push
jb
and
inc
mov
inc
call
jno
loopne
mov
push
or
cmp
pop
or
xor
cli
push
imul
mov
test
add
or
push
ljmp
repnz
xor
sub
add
mov
or
popf
add
lahf
add
movsb
add
test
and
mov
cmp
ja
or
cmpsb
xlat
or
aas
add
add
add
jg
pop
inc
rcrb
inc
aas
xor
in
xor
sub
mov
or
adc
ja
mov
int
repnz
into
mov
cwtl
add
pop
xor
lods
outsb
stc
jb
outsl
add
jns
push
mov
xchg
daa
or
push
cmpsb
movsl
sahf
mov
adc
popf
push
mov
adc
fstpt
add
pop
int
and
leave
add
mov
pop
add
jb
push
jae
push
je
cmp
pop
movb
sbb
mov
xchg
roll
and
pop
add
cmc
mov
pushf
cmp
in
dec
loopne
pop
xor
dec
nop
lret
or
xor
out
lods
or
add
cmp
call
orb
jbe
add
xchg
aas
testl
loope
inc
jne
inc
jp
jl
punpckhwd
add
add
lea
stc
adc
lret
in
adc
adc
sahf
inc
call
mov
mov
xor
inc
movl
jmp
ret
pop
cli
add
add
mov
mov
xchg
sahf
and
adc
adc
mov
push
inc
sbb
inc
sbb
sbb
inc
and
fildl
fadds
adc
xor
or
jbe
or
ja
sub
mov
enter
loope
or
ret
fld
sub
sbbb
adc
add
cmpl
mov
cmpsl
xor
push
pusha
push
sahf
test
ret
sbb
out
adc
je
and
inc
jge
mov
add
sub
xchg
cmpsb
adc
stc
and
dec
adc
xchg
andb
inc
lret
or
mov
adc
push
loopne
aad
dec
xchg
mov
inc
adc
repnz
and
jo
aaa
test
mov
orb
pusha
push
adc
inc
fcoml
or
in
orl
add
and
inc
sahf
dec
push
mov
das
ja
or
add
aam
fisttps
out
add
mov
mov
cmp
pop
cld
add
fidivrs
lds
mov
js
sub
aam
adc
jae
cmp
cs
add
add
xor
add
cmc
mov
sub
fmull
gs
add
xchg
sbb
jmp
ljmp
stc
or
add
repz
sbb
scas
in
mov
hlt
fs
mov
iret
add
or
cs
nop
push
xchg
iret
adc
and
cmpsb
test
add
xchg
pop
rcrb
sub
lods
cmp
xchg
sbb
fwait
pop
and
push
and
ja
adc
push
out
add
or
adc
push
xor
daa
fnstcw
add
repnz
add
aaa
jle
or
cmp
addb
add
inc
pushl
mov
pop
jns
adc
lods
addl
es
jbe
movsb
dec
daa
cmp
add
add
nop
fiadds
imull
mov
push
mov
mov
inc
out
mov
dec
mov
les
das
testl
scas
cmp
add
mov
out
pop
icebp
ficompl
jo
and
inc
xor
xchg
push
movb
jnp
scas
mov
andl
jo
push
push
push
pop
mov
push
mov
add
out
sti
lret
adc
xor
fsts
or
dec
fsubl
loopne
lret
push
rclb
psubq
mov
sbb
sbb
cwtl
mov
push
pushf
mov
mov
lahf
fildl
or
pop
test
adc
nop
and
nop
add
mov
enter
lcall
insl
mov
lcall
popf
daa
or
cmc
imul
jge
mov
push
fldenv
push
add
lea
gs
dec
xor
pop
shll
enter
xorb
sbb
dec
mov
lahf
data16
fldenv
arpl
and
test
xchg
sahf
mov
sub
or
add
movsl
sub
sbb
loopne
leave
xor
or
adc
push
lods
jmp
js
ret
imul
daa
xor
movsb
movsl
mov
lock
pop
stos
or
enter
add
cmp
add
lock
lods
cmpsl
aas
add
add
and
ds
in
test
cwtl
xchg
xor
jnp
cmpsl
push
or
stc
xor
pop
xor
xor
ror
ret
loope
or
test
icebp
mov
add
mov
mov
ret
mov
xor
cwtl
pop
xor
aas
sbb
lret
inc
loope
sbbb
insl
adc
adc
dec
enter
dec
daa
int3
or
jmp
or
int3
incb
dec
mov
push
int3
enter
inc
adc
push
jns
cmp
jbe
aam
and
inc
sti
and
mov
cmp
es
adc
or
xchg
sbb
xor
pop
repnz
int3
hlt
lea
leave
dec
sbb
jg
dec
xorl
andb
adc
adc
dec
mov
cmp
push
cmp
and
add
mov
xchg
inc
jo
gs
add
add
jne
in
mov
inc
clc
jmp
mov
or
sub
cmp
ds
xor
out
add
aad
add
pop
movsb
inc
mov
cwtl
or
lea
mov
and
loop
test
daa
lock
dec
inc
enter
jbe
fisubrl
adcb
pop
add
pop
jns
inc
xlat
sbb
lock
test
inc
mov
dec
add
cmpsl
dec
add
or
cld
dec
adcb
push
jo
fisttpl
push
dec
xchg
or
out
lea
mov
outsl
or
mov
leave
mov
sbb
inc
cmp
repnz
out
dec
scas
stos
sbb
lret
loop
test
inc
xchg
lea
push
or
mov
mov
scas
inc
cmc
cwtl
imul
cld
testb
push
or
add
stos
js
push
out
add
mov
imul
sub
cmp
ljmp
xchg
push
add
sub
xchg
les
flds
out
or
push
dec
pop
insb
add
sub
sub
movsb
fbstp
in
or
aas
sub
dec
test
jnp
and
pusha
cmp
xor
stos
add
je
aaa
repnz
lods
xor
cmp
add
sarb
mov
add
push
inc
daa
push
pop
pop
add
mov
xor
fidivl
div
sub
ljmp
stc
dec
pop
mov
xorb
std
sbb
push
push
shlb
inc
xor
stc
sub
mov
sbb
adc
or
add
mov
sub
int
and
and
cwtl
and
cltd
je
mov
add
xchg
or
jns
clc
inc
xchg
push
mov
out
inc
push
icebp
fwait
inc
or
add
loope
mov
xchg
sub
mov
push
movsl
mov
pop
adc
xchg
lds
sbb
mov
sbb
dec
jl
and
and
mov
pop
lcall
push
jecxz
mov
push
inc
xor
add
lret
mov
imulb
jle
out
gs
mov
and
inc
add
mov
and
pop
jp
dec
aaa
xor
or
aaa
ret
adc
and
mov
add
out
push
cltd
adc
inc
xchg
in
add
mov
dec
iret
cmp
add
mov
cmp
lock
adc
cli
lods
dec
idiv
int
adcl
pop
loop
mov
lea
add
incl
rolb
jo
rolb
out
and
in
sub
setb
call
inc
or
not
jmp
xor
ds
mov
sbb
ret
mov
pop
and
shrl
push
mov
mov
icebp
jecxz
push
inc
adc
push
sbb
mov
or
or
inc
cmp
int
nop
movl
into
iret
jb
lret
in
cmp
call
xor
push
pop
orl
cli
jmp
rolb
test
test
bnd
les
or
ds
nop
lds
jae
or
push
mov
lock
inc
pop
addl
mov
sub
cmp
call
push
imul
jae
sbb
out
lods
pop
mov
iret
add
fsubs
jne
pop
dec
jle
adc
call
xchg
push
mov
not
inc
fucomp
mov
sbb
adcl
jmp
jbe
xlat
shrb
or
or
jp
notl
mov
sub
add
inc
mov
sub
dec
shl
add
xor
adc
add
out
mov
mov
arpl
mov
adc
lods
repz
stos
inc
add
or
inc
not
mov
and
enter
aaa
xlat
cmp
sbb
dec
mov
mov
push
out
adc
lds
add
adc
pop
jp
cmp
dec
addr16
jns
push
push
pop
pop
subl
mov
add
mov
push
pop
inc
add
cli
nop
in
or
insb
mull
add
ffree
popf
fcoms
movl
push
pop
pop
mov
loopne
or
and
pop
sbb
jo
xor
jae
push
jns
fldl
or
dec
mov
movsl
pusha
jg
out
and
jo
push
inc
jle
mov
insb
mov
sbb
add
sbb
mov
push
adc
aaa
inc
jmp
insb
das
push
add
add
xchg
push
jnp
fdiv
mov
inc
push
out
and
mov
lret
test
push
xlat
pop
xchg
cs
sbb
enter
mov
ret
xchg
mov
xor
add
popa
adc
and
inc
inc
jae
out
and
push
cmp
shrb
pop
pop
test
dec
inc
dec
addb
das
ds
repnz
rolb
insb
xor
xor
push
adc
fcoml
push
pop
adc
pop
cmp
stc
sbb
pop
testl
jns
jmp
out
addl
dec
subl
movsl
stos
outsl
add
adc
inc
xor
sbb
lret
push
jecxz
xchg
les
jg
jns
or
dec
ja
insb
mov
rcrb
pop
push
pop
loope
cwtl
mov
inc
int
inc
icebp
xchg
repz
mov
and
test
xchg
pusha
mov
loop
out
ja
cmp
add
jmp
xchg
mov
push
add
add
xchg
dec
orl
ret
dec
aam
test
push
nop
pop
dec
mov
xchg
mov
add
mov
ljmp
xchg
and
lds
inc
mov
je
imul
pusha
aad
mov
outsb
out
add
call
dec
cwtl
push
add
xchg
push
push
pop
imul
cltd
and
call
ret
xor
stc
ljmp
fstpt
inc
mov
mov
jo
setae
sub
cwtl
mov
jbe
mov
ret
sbb
mov
aaa
inc
or
push
test
mov
or
movsb
xor
add
mov
add
adcb
adc
stos
mov
push
jbe
shrl
mov
pop
ret
adc
ljmp
pop
pusha
scas
lods
sub
ds
and
push
push
ret
loopne
out
das
es
pop
imul
mov
push
dec
popf
mov
lahf
or
insb
and
test
and
neg
data16
int3
jmp
test
fimull
xchg
xor
out
out
and
pusha
mov
movsb
lds
sbb
in
add
push
addl
or
sbb
dec
adc
add
sbb
push
sub
cmp
adc
idiv
movb
loop
das
int
jnp
mov
sbb
popa
push
add
inc
and
adc
sti
lods
mov
dec
pop
sbb
mov
rorl
popl
adcb
pushf
mulb
lret
push
cmc
xlat
and
jp
out
sub
add
pushf
rorl
rclb
jecxz
daa
mov
mov
neg
dec
popf
push
or
mov
mov
dec
sub
mov
mov
xlat
or
add
mov
mov
sub
xor
into
mov
lcall
push
pop
pop
add
test
sub
pop
sti
xor
ljmp
fs
and
or
mov
mov
lret
mov
sub
adc
mov
sahf
cld
rcr
daa
rcrb
out
inc
std
call
push
pop
pop
sub
push
inc
pusha
mov
sbb
insb
andb
add
rorb
push
add
out
cli
dec
mov
repnz
xchg
and
cmp
testb
pop
add
jmp
cli
or
fwait
pop
data16
jp
aaa
add
push
pop
sub
jmp
imul
and
mov
mov
or
neg
dec
xor
push
nop
arpl
mov
xchg
jno
pop
jp
ficompl
lds
or
jl
je
push
cmp
mov
loop
sbb
add
sbb
xor
sub
out
jmp
rorl
sti
dec
fs
dec
adc
mov
pop
pusha
pop
dec
add
js
mov
inc
push
cmp
pop
pop
or
mov
mov
test
add
shll
xchg
or
in
aam
aam
and
shrb
faddl
ss
sbb
inc
push
leave
cmp
sub
adc
shlb
shl
xlat
addr16
mov
mov
add
xchg
push
mov
add
call
movl
mov
sub
mov
jnp
jmp
scas
dec
xchg
inc
inc
dec
adc
test
and
push
in
sub
lret
or
push
xor
enter
inc
add
add
test
or
push
pop
or
xchg
rolb
orl
jmp
mov
xor
mov
int3
movsb
add
mov
pop
inc
les
add
pop
inc
std
sub
out
mov
rcrb
hlt
and
push
inc
jae
push
add
out
repnz
and
test
jns
out
inc
inc
jle
cmpsb
push
popa
lock
mov
xor
or
push
sub
out
adc
sbb
lock
lea
mov
test
add
cmp
add
sub
test
mov
adc
cmp
inc
sbb
push
pop
inc
or
and
xchg
and
jbe
mov
movb
inc
dec
sbb
or
cmp
jns
and
adc
push
xor
test
cmpsl
shll
cmp
add
pop
movsl
xor
addr16
sar
jmp
aas
cmp
inc
bound
sbb
int
and
stos
mov
shll
test
dec
pusha
leave
cmp
xchg
cmp
mov
and
xchg
lds
xlat
push
or
cmp
push
or
nop
xchg
mov
ret
js
inc
xchg
aas
jbe
push
mov
inc
ficomps
mov
add
jae
sarb
dec
js
or
leave
xor
adc
push
pop
dec
pop
sbbb
add
sub
aas
add
out
int3
mov
mov
push
outsl
or
pop
pop
add
ljmp
dec
ret
repz
mov
mov
stc
repnz
adc
pop
ret
pushf
inc
cwtl
lret
inc
mov
cmpl
adc
int
mov
int3
push
and
leave
movsb
push
lock
xchg
dec
pop
iret
shlb
popf
cmpsb
fdivl
test
cmp
test
nop
and
add
dec
popf
aas
test
int3
aad
ljmp
mov
or
leave
adc
int3
pusha
jne
push
mov
test
mov
mov
pop
sub
mov
xchg
mov
add
jl
push
mov
pop
push
lds
jmp
testb
pusha
sub
shll
pop
push
pop
xchg
adc
mov
test
mov
inc
dec
montmul
cmpsb
ret
push
outsl
xchg
cmpsb
xchg
or
aad
xlat
inc
loopne
jg
mov
sub
push
hlt
jmp
push
sub
cs
shll
sbb
divb
push
lds
xor
fcmovnb
es
sub
loope
inc
ret
rclb
pop
pop
imulb
sub
loope
push
fisubrl
outsb
out
ja
sub
lods
sbb
fmull
out
push
jnp
ljmp
roll
cli
adc
mov
add
in
jno
mov
cmpsb
testb
sub
loop
mov
js
mov
aas
sbb
ret
cmp
data16
repnz
lahf
adc
inc
out
mov
movsb
mov
add
iret
jl
push
into
das
xor
pop
pop
stc
push
int3
not
dec
mov
icebp
sbb
enter
mov
testb
xchg
imull
jns
rcrl
scas
or
mov
mov
loopne
push
inc
jnp
iret
dec
dec
dec
shrl
xchg
lcall
dec
xor
pop
push
adc
not
push
jle
test
inc
adc
adc
sbb
lods
dec
push
push
jno
fcoml
jbe
fs
lret
mov
ljmp
xor
mov
push
in
xor
negb
jmp
xchg
mov
pop
mov
sub
cwtl
cmc
or
pop
test
cmp
and
int3
mov
cwtl
call
rcll
mov
test
add
ficoml
and
rolb
loope
or
sbb
insb
sbb
ret
jle
add
cmp
adc
cmp
push
js
add
ret
nop
jns
sub
inc
push
push
sbb
pop
mov
negb
inc
call
jae
fs
or
jp
cmp
movb
shlb
inc
bound
pop
and
roll
ss
push
and
mov
iret
dec
pop
pop
dec
xlat
in
jp
call
xor
inc
jnp
jl
pop
ret
repz
adc
pop
adc
rcrl
inc
pop
add
inc
jp
cmp
xlat
ret
pop
inc
mov
dec
aam
sub
adc
addr16
addb
subb
gs
addr16
les
inc
and
lods
inc
ja
jge
mov
and
por
loopne
sbbb
pop
jl
lods
out
adc
mov
cmpsb
jbe
sbbl
mov
fildl
repz
add
cltd
mov
testb
push
cmp
jl
in
es
dec
sub
inc
scas
and
pop
xor
cwtl
andb
push
dec
mov
sti
cmc
jo
scas
cmp
adc
add
fistps
dec
shl
add
int3
jg
add
inc
inc
xor
clc
jo
addl
mov
gs
mov
jb
mov
xor
add
inc
popf
pop
sbb
sub
and
mov
cmp
inc
repnz
and
jns
mov
mov
pusha
outsb
jno
dec
popa
pop
gs
push
inc
shr
mov
cwtl
inc
or
incl
lret
lods
dec
pop
pop
mov
pop
push
mov
cwtl
shrb
adc
test
inc
xor
out
cmpsl
cmp
out
push
enter
push
lods
neg
inc
adc
out
rcll
push
add
stc
sti
pop
push
dec
push
mov
or
scas
pop
jne
faddp
cmpb
adc
xor
xchg
scas
sbb
cmc
inc
and
add
sbb
faddl
fs
test
bswap
pop
das
cs
nop
mov
push
pushw
cwtl
lret
and
mov
lods
push
mov
sbb
test
sub
add
add
pop
dec
and
test
dec
js
add
sbb
cmp
nop
rcrb
inc
cmc
mov
rorb
pop
jecxz
pop
mov
lret
adc
or
cwtl
mov
pop
push
out
mov
rcl
lea
jo
adc
arpl
or
push
push
movsl
dec
mov
orb
sub
loopne
dec
ja
mov
movsl
mov
mov
dec
cmc
mov
cld
lods
dec
lds
dec
mov
add
jo
ret
mov
enter
ror
xor
popa
mov
sbbb
es
cmpsl
test
jo
push
mov
pop
insl
iretw
push
jp
dec
add
pop
mov
rorl
pusha
add
push
sbbb
lods
inc
cmpsl
add
lret
mov
and
lret
jmp
lahf
add
dec
ret
cld
mov
arpl
xchg
pop
jo
dec
mov
jecxz
rorb
dec
add
mov
mov
xor
cli
inc
inc
xchg
fmuls
jbe
lds
pop
xor
aaa
push
xor
jae
shlb
ret
and
aam
pusha
jg
mov
or
pop
loopne
stc
mov
add
out
mov
add
xor
sbb
adc
mov
dec
mov
add
ret
sub
lret
mov
jg
mov
adc
push
push
std
popf
xchg
popf
sub
xor
sbb
aad
jle
testl
xchg
xor
repnz
not
pop
or
cmp
js
inc
jmp
int
iret
mov
imul
pop
xor
stos
pusha
xor
bound
sahf
rolb
add
lea
jo
fldt
ss
jae
add
or
or
dec
fidivl
ror
and
negl
int
and
pop
hlt
mov
jns
add
inc
mov
pop
adc
dec
xor
faddl
and
inc
fwait
jge
adc
dec
cmp
inc
testl
in
test
xor
movsb
push
lret
or
lea
mov
mov
mov
add
or
dec
stc
sub
aam
stc
push
mov
xor
ds
test
out
or
pop
mov
es
and
jns
add
inc
iret
mov
inc
stc
xchg
push
pop
pop
outsl
inc
out
push
arpl
inc
and
push
test
scas
or
jle
cmp
mov
or
push
pop
pop
add
data16
cwtl
mov
inc
mov
addb
sub
aad
sbb
sub
cmpsb
out
add
test
mov
pop
push
and
cwtl
cmp
pop
adc
mov
stc
mov
sbb
pop
andl
pop
inc
mov
xorl
jp
in
and
outsl
add
cmp
jecxz
add
fcoms
inc
movsl
ret
jae
sub
inc
push
push
xchg
mov
cwtl
outsl
add
mov
push
add
xor
inc
add
inc
xor
adc
inc
adc
lret
cmp
xor
repz
dec
mov
imull
push
add
push
cmp
dec
inc
ret
xor
test
cwtl
je
mov
mov
out
imul
hlt
daa
or
add
dec
or
mov
hlt
pop
xorl
test
xor
leave
cwtl
rol
loop
push
xchg
ja
lods
call
inc
sub
add
cmp
test
push
cmp
jp
scas
pop
push
imul
push
lret
cwtl
iret
adc
and
fiaddl
mov
inc
lods
rorl
out
xchg
sbb
ljmp
add
popa
pop
inc
loopne
inc
adc
ror
cmp
jo
lahf
add
popa
clc
adc
push
push
add
adc
mov
adc
outsl
adc
insb
jae
jo
negb
add
dec
dec
neg
xchg
sbb
push
lods
sub
cwtl
ja
sub
push
loope
sub
rorb
leave
push
lods
mov
sbb
mov
push
lret
and
add
movsl
cmp
xor
jne
dec
int3
cmp
and
adc
push
lock
jae
or
addb
push
dec
rcrl
cmpsb
fstpt
push
lods
adc
mov
mov
sbb
xchg
pusha
popf
and
pop
jmp
mov
mov
sub
xchg
push
test
fimuls
xor
sub
add
addr16
xchg
scas
btr
sub
sub
dec
imul
imul
roll
das
jl
repnz
pop
lret
sbb
movsl
sub
test
es
pop
xor
gs
ret
mov
adc
mov
fsubs
adc
fcoms
cmp
iret
mov
mov
frstor
lcall
sti
or
je
mov
leave
xlat
xchg
sbb
cs
or
cli
out
mov
sub
xchg
fs
aam
and
movsl
ret
cmc
inc
std
and
jne
sub
xor
sbb
out
addr16
fadds
push
and
dec
divb
xchg
or
sarb
cmpb
nop
shll
add
mov
xchg
pop
or
and
repz
or
test
adc
sub
dec
pop
jp
pop
add
mov
add
dec
stc
inc
inc
push
add
lods
add
test
push
stc
lret
cltd
xchg
mov
test
rcrb
add
push
test
test
gs
rol
cld
bswap
pop
std
add
jmp
test
aam
cmpsb
mov
mov
rol
lret
test
sbb
adc
sarl
movsb
jmp
pop
add
dec
sti
pop
and
inc
mov
cmp
incl
std
and
add
dec
ret
call
jge
add
imul
lret
loopne
pop
and
mov
and
shlb
mov
subl
incl
xchg
adc
std
push
sub
dec
xchg
sahf
test
xchg
dec
out
dec
pop
sub
mov
arpl
sub
idivb
xor
inc
push
xchg
ss
add
push
jmp
movsl
dec
inc
cli
mov
sbb
or
rcl
lock
mov
add
lds
out
sbb
jo
add
pop
mov
not
cmp
dec
or
sbb
push
loopne
jns
stos
xor
jns
jl
inc
and
shrb
pusha
addl
jp
icebp
add
mov
mov
adc
dec
and
xor
inc
xchg
pusha
push
sbb
and
sbb
arpl
lret
dec
neg
push
addr16
mov
jne
rolb
mov
cmp
rdpmc
cmp
pusha
psubusb
repnz
cmpsb
mov
sbb
adc
fbld
add
iret
orl
fadds
sub
jb
jnp
into
push
mov
stos
inc
inc
add
jno
pop
sti
push
pop
fisubs
ret
pop
add
sbb
push
ss
xchg
mov
mov
dec
dec
mov
inc
jg
dec
rolb
xchg
bt
pusha
push
stos
pop
test
shrl
push
mov
jmp
ror
mov
sub
shrl
lret
cmp
in
out
orl
jae
cmp
sti
mov
pop
sub
call
shl
cwtl
jmp
hlt
inc
push
dec
xchg
xchg
es
jle
inc
jl
cmc
lahf
not
leave
ret
pop
sub
pop
icebp
test
cwtl
subl
sbb
mov
push
inc
and
or
stos
shrb
sbbl
inc
mov
dec
sbb
inc
cs
cmp
add
and
into
adc
jo
inc
cmp
jae
cwtl
or
adc
cli
and
add
or
loope,pn
jns
cltd
adc
test
adc
xor
push
or
pop
or
test
dec
divb
popa
inc
sub
and
inc
or
addl
es
lods
mov
shlb
mov
mov
movsl
sub
in
xor
in
fstp
dec
jbe
mov
ja
sub
int
pop
mov
sbb
xchg
add
cld
xor
jbe
or
aaa
js
cmovle
mov
int
fs
cmpsb
add
jno
push
and
jns
mov
pop
mov
and
sbb
and
loope
dec
movb
lea
test
add
sub
movsb
enter
jo
adc
sub
mov
sub
sbb
dec
cmp
mov
and
data16
pop
pop
adc
sub
or
loope
test
sbbl
cmp
push
stos
inc
xor
or
cmp
adc
push
gs
xor
adc
lret
add
dec
mul
leave
add
pop
cmp
push
jmp
movsb
call
mov
adc
sbb
aaa
cmpsl
push
rolb
mov
rcr
int
fsubrs
cltd
mov
adc
xchg
mov
mov
pop
imul
xchg
adcb
pop
sub
out
jb
pusha
mov
jb
push
mov
shrl
les
jecxz
fistps
fimuls
in
out
mov
adc
test
or
and
sub
mov
pushf
hlt
imul
xchg
push
movsb
aas
test
sub
pop
pop
ret
ljmp
outsl
mov
jnp
xor
push
rorb
or
ljmp
push
cmpsb
adc
dec
or
ret
cmp
dec
jl
loope
hlt
inc
push
popf
cli
xchg
iret
sahf
mov
test
sbb
push
scas
outsl
sub
fwait
popa
lods
xor
mov
inc
adc
aam
fnsave
sbb
addb
xchg
push
xchg
or
mov
or
iret
daa
inc
sub
xchg
repnz
out
jp
orl
pop
xor
mov
sub
into
popf
jnp
in
sbbb
popa
pop
aaa
push
sbb
xlat
and
jg
dec
sbbl
data16
lret
pusha
mov
shlb
les
mov
xchg
mov
es
imul
rcrb
cli
sbb
icebp
ret
pop
mov
andb
outsl
sbb
adc
push
leave
or
pop
mov
push
jnp
jl
add
xor
cmpsb
fildl
rcrl
test
je
andl
das
jae
jecxz
mov
push
cmpsb
outsl
nop
shl
test
lcall
xchg
dec
dec
inc
sbb
cmpsl
int3
cs
les
jle
push
mov
mov
push
pop
sub
daa
dec
xchg
add
cmp
pop
or
xor
adc
inc
push
mov
pop
mov
xor
mov
fdivrs
xor
js
and
mov
daa
pop
cmp
sarb
pop
inc
in
repz
dec
and
popf
push
imull
inc
seto
iret
jbe
idivb
dec
cmpb
data16
inc
pop
mov
adc
mov
xlat
lcall
dec
insl
or
movsb
aaa
lock
add
and
xchg
loopne
fldl
cmpsb
mov
xor
ret
das
add
lret
mov
jbe
add
sub
jae
cmp
mov
sbb
lret
stos
mov
iret
jp
dec
rol
xchg
dec
das
cmp
xchg
and
pop
inc
aaa
xor
sub
scas
pop
xor
iret
out
xchg
pop
mov
xor
lock
in
outsl
cmpsl
fwait
loopne
test
aam
pushf
aam
xor
cmp
add
std
out
lock
in
js
cmpsl
mov
out
cmp
dec
loopne
pmullw
sahf
adc
aam
ret
or
adc
daa
pusha
mov
cltd
push
mov
fs
pop
fstpt
call
adc
mov
sub
inc
mov
lret
daa
push
jnp
sbb
or
inc
push
inc
ja
add
inc
xchg
mov
push
fsubrl
cld
out
or
mov
fdivl
iret
je
pop
ret
jbe
into
add
dec
mov
jmp
les
lea
and
cwtl
outsl
in
cld
shll
jecxz
xchg
clc
and
dec
aad
cmp
int
cmp
sub
dec
aaa
popa
sar
adc
sub
inc
fildl
out
sub
dec
pop
rcrl
out
mov
cmpsl
pop
test
add
and
sub
mov
popf
test
or
push
cmc
jbe
lret
popa
fmul
lds
aad
adc
mov
fnstcw
jmp
das
jbe
loopne
sub
int3
mov
jo
mov
mov
add
cltd
inc
jbe
mov
inc
test
data16
fstl
dec
xchg
pop
xchg
or
pushf
clc
sub
cmc
sub
inc
mov
cwtl
dec
or
addr16
cs
scas
jb
jae
fisubs
int3
inc
aaa
push
pop
mov
fdivr
aad
jmp
out
push
into
xorb
sub
mov
pop
int3
xor
daa
and
rcl
jae
xor
add
lcall
jne
dec
push
rcrl
jns
inc
xor
xor
and
push
xchg
jmp
psadbw
cmp
jns
pop
xor
enter
mov
inc
data16
shlb
cld
push
sub
xor
iret
clc
sbb
jecxz
mov
sub
push
cmp
add
fsubrs
cmp
add
fstpt
ss
imul
lock
loope
mov
les
xchg
pushl
and
mov
push
out
pop
push
test
inc
loop
sub
sub
xor
in
aaa
movsl
push
pop
pop
hlt
das
hlt
in
out
jbe
cmp
fidivrs
sbb
sbb
test
sbb
dec
movsl
xchg
and
push
xchg
inc
imul
iret
inc
into
testb
or
jns
sub
fidivs
icebp
enter
arpl
jmp
inc
push
xchg
mov
cmovg
xchg
add
cwtl
aam
ja
inc
mov
inc
push
xchg
jmp
add
inc
dec
ss
pop
mov
jne
lret
push
mov
cmp
pop
popf
clc
scas
and
jecxz
sar
fld
pop
mov
sbb
adc
iret
pop
adc
lods
xchg
les
jne
daa
pop
ja
fnsave
or
ror
xor
sbb
test
cmp
jbe
and
mov
fidivrl
pop
cli
repz
mov
jmp
push
cmp
mov
jp
sbb
inc
leave
pop
mov
sbb
xchg
mov
ss
hlt
jmp
sldt
out
mov
lds
sub
lods
ljmp
clc
movsb
add
fcoml
dec
das
mov
lcall
hlt
stc
mov
nop
ret
gs
test
mov
cmp
lods
lret
enter
xchg
and
push
fsubp
and
push
fs
push
popf
mov
mov
cmp
rcrl
mov
mov
lcall
js
pop
icebp
cmp
daa
cmpsb
push
aam
mov
in
push
fnstcw
add
sbb
sub
fidivrs
push
inc
and
xor
pop
es
lea
pop
ret
xchg
mov
inc
int
sub
push
xor
push
shrl
shrb
mov
jg
lods
add
mov
dec
dec
lret
mov
add
xchg
add
xorps
int3
sbb
mov
lret
mov
call
sub
vpshuflw
sarb
xlat
lods
push
jne
iret
and
inc
iret
dec
gs
or
leave
mov
in
loope
inc
or
inc
out
xchg
in
sbb
ds
pop
push
iret
rcl
lock
insl
mov
mov
mov
das
enter
jl
mov
std
inc
sub
test
lock
idivb
mov
dec
gs
aad
lock
cmc
sub
sbb
sub
pop
sti
cli
in
xchg
sub
jg
jle
adc
lret
test
cmc
cmp
in
mov
push
push
push
test
movsb
pop
rcrl
rclb
sub
aad
addr16
test
mov
jbe
add
dec
adc
mov
cwtl
rorb
mov
xlat
hlt
es
out
cmp
fwait
ljmp
and
and
imul
fucomp
sub
pop
xchg
xchg
mov
push
daa
xor
add
rcll
fs
xchg
xor
adc
or
mov
jae
add
jecxz
push
fldt
add
call
int
or
mov
fdivl
xlat
push
xchg
loopne
inc
repnz
lods
insl
mov
add
jg
in
imul
das
xchg
insl
arpl
pop
mov
add
rcrl
daa
xchg
cltd
mov
adc
lds
add
movsb
inc
sbb
inc
aas
stc
repnz
push
xlat
adc
push
mov
iret
sahf
sbb
add
icebp
daa
lret
sub
and
jmp
popa
sub
iret
daa
cmp
mov
popa
inc
aaa
loop
push
sti
lret
sbb
xchg
hlt
jecxz
clc
aam
xor
ljmp
cmp
pushl
stc
jecxz
or
inc
aas
repz
mov
mov
roll
arpl
mov
std
pop
repnz
sbb
pop
sti
movsb
into
sub
out
mov
dec
enter
pusha
imul
adc
mov
push
ljmp
popf
jns
sbb
shll
jge
sbb
mov
lret
pop
xchg
sub
pop
and
addb
xorb
nop
imul
andb
adc
xorl
cmc
bnd
and
push
cmpsb
pop
fdivrl
loopne
out
or
sub
dec
dec
and
push
jns
cmc
fadd
jle
les
or
add
inc
inc
push
roll
addr16
nop
lret
cli
mov
stos
leave
jp
adc
negb
adc
rcll
lds
sub
lret
aad
xchg
imul
xor
imul
ss
jns
fisubl
jecxz
outsb
jge
xchg
int
sbb
imul
outsl
call
fdivrs
push
sbb
xlat
jb
sahf
inc
lock
notb
test
push
lret
sub
jecxz
movsl
xor
pop
jecxz
cmp
xlat
add
mov
sahf
or
sub
mov
jbe
xlat
lret
insb
test
and
in
addr16
mov
lock
stos
jl
fnstenv
xchg
das
inc
je
adc
mov
push
stc
pop
ss
cmpsb
and
in
sub
or
aaa
jb
cmpsl
xor
push
cli
or
inc
pop
aaa
push
dec
scas
popa
push
idivb
adcb
pop
dec
pop
jbe
or
lods
jae
je
jmp
lds
in
jne
xchg
xchg
stos
aad
sbb
dec
ficoml
jbe
xchg
pusha
dec
loope
mov
cmp
mov
jne
lret
ja
jne
xor
enter
xor
fwait
adc
mov
mov
outsl
dec
xor
xor
data16
add
mov
ja
into
fucomip
test
cmp
and
xchg
stos
push
scas
and
in
xbegin
and
pop
cmc
sub
lea
testb
inc
dec
stos
es
jecxz
xchg
leave
add
out
fists
popf
enter
stc
add
mov
xchg
aam
dec
xor
jno
cmp
add
jo
sbb
mov
pop
push
stc
and
mov
and
incb
mov
cs
bound
test
cs
jnp
mov
xor
sarl
jb
sub
std
es
ror
idiv
repnz
jnp
not
xchg
adc
push
sub
fcmovne
jmp
rcrb
pop
inc
pop
int
lock
subl
add
ret
stos
fadd
int
loopne
or
leave
rorb
push
rcl
ds
cmp
sahf
int
dec
and
xchg
cmp
push
enter
or
or
je
popf
lret
mov
inc
lds
sbb
pop
rcrb
std
xchg
and
sub
cmp
ds
gs
cld
fdivl
push
fnstenv
sbb
divb
es
pop
jmp
lds
adc
out
ljmp
push
add
out
imul
cmp
scas
pop
adc
and
imul
lret
popf
lds
push
mov
xchg
xor
sub
notl
mov
sbb
sbb
js
jne
aaa
add
std
into
lea
pop
inc
sub
insl
bound
out
push
mov
hlt
enter
inc
sub
cmp
sbb
dec
mov
pop
fsin
repz
sbb
divl
subl
popa
mov
pushf
movsl
test
and
jl
sub
cltd
or
mov
testb
call
in
mov
ret
xchg
cld
outsl
dec
les
incl
push
cmpsl
iret
mov
out
rcll
or
movzbl
je
ret
das
rcr
lret
add
das
sbb
repnz
scas
mov
xor
lea
dec
into
jmp
add
mov
orl
inc
push
pop
daa
mov
xchg
mov
das
jl
xchg
mov
mov
in
push
inc
adc
mov
fsub
pop
push
xor
imul
xchg
sbb
jns
repnz
jl
cmc
sbb
xchg
jecxz
mov
push
or
push
xchg
pop
adc
push
mov
jnp
fdivl
jae
stc
xchg
fildl
push
sti
xchg
sub
and
adc
int3
lock
fwait
iret
mov
and
sbb
xlat
cmp
movsl
ret
sbb
imul
out
push
sbb
mov
data16
xchg
xor
in
and
adc
js
dec
test
iret
hlt
mov
mov
loop
pop
push
jae
in
jmp
scas
lea
mov
or
out
scas
mov
movsl
dec
fwait
jmp
sub
mov
pushf
jbe
repnz
dec
add
jns
or
vmovsldup
test
sub
cmp
sbb
mov
xchg
and
inc
ficomps
or
fchs
push
std
adcl
aas
fsubrs
int3
push
xchg
jb
leave
push
mov
xor
aaa
call
mov
mov
xchg
dec
cmp
clc
aad
and
sarb
pop
cvtps2pi
lods
pop
jae
out
xchg
cmpb
dec
pop
mov
les
shrl
notb
fdivl
lret
sub
pushf
mov
push
sbb
lods
aam
loope
lods
sub
fldl
inc
or
outsl
out
mov
femms
call
and
sub
jbe
ljmp
movsb
mov
xchg
cltd
adc
jmp
dec
cmpsl
clc
mov
xchg
jmp
sbb
jnp
add
dec
or
push
mov
fnstcw
jno
dec
sub
sub
xor
cmp
mov
ljmp
jl
nop
pop
imul
jmp
fstpt
mov
push
sub
jb
pop
je
rolb
loope
adc
sub
jle
fucom
mov
dec
ds
lock
es
xor
or
lret
mov
fs
cmpsb
xchg
filds
jp,pn
sbb
add
jbe
outsl
pop
jg
ljmp
scas
mov
add
daa
adc
cld
adc
popf
test
add
cmpsl
pop
call
lock
sub
or
jl
mov
mov
xchg
sbb
lds
jne
iret
dec
lock
loop
inc
mov
mov
add
lods
cmp
xchg
imul
mov
nop
mov
xor
sub
sub
pop
sbb
jg
std
daa
jmp
rcr
lahf
loope
push
sub
xor
loopne
hlt
lcall
into
fadds
inc
xchg
adc
and
lods
aad
pushf
out
aam
mov
neg
adc
push
and
loope
rcr
mov
ficoms
jne
sub
sbb
xchg
mov
mov
dec
jle
mov
call
outsl
inc
inc
mov
cld
sbb
ud2
sub
fildll
out
mov
pop
jecxz
adc
test
push
ss
aaa
or
mov
ret
inc
add
fldl
inc
push
inc
fcmove
mov
cmp
imul
or
repnz
jp
inc
lcall
aas
jns
aas
pop
mov
and
gs
sbb
je
mov
scas
lock
push
sbb
ret
jecxz
jle
orb
push
movsb
movsb
xchg
aam
fwait
adc
lods
repnz
dec
fnsave
adc
test
dec
dec
inc
mov
imul
arpl
lock
fcoml
push
fmull
out
scas
sbb
xor
imul
and
cmp
mov
bound
push
pop
xchg
in
xor
add
lret
mov
sarb
jnp
mov
cltd
insl
lods
std
fsubl
repz
jns
mov
mov
in
push
xor
or
nop
jmp
test
cld
inc
pop
add
mov
jb
mov
sarl
test
sbb
mov
testl
fwait
les
dec
push
mov
pop
sub
mov
ja
add
sub
cmpsl
mov
or
clc
into
ret
sbb
add
add
mov
insl
and
clc
jmp
je
les
dec
dec
sbb
and
mov
popf
ljmp
call
aas
arpl
pusha
leave
pop
cli
repz
dec
sub
jp
jl
loop
aad
aaa
cmp
mov
in
pop
sti
inc
inc
jb
movl
bound
sbb
mov
inc
es
add
mov
fmull
push
andl
pop
les
dec
mov
jecxz
pop
xchg
jae
dec
mov
mov
push
xchg
in
push
mov
loopne
and
mov
dec
pop
cmp
int3
sub
subl
fcoml
inc
xor
add
mov
inc
ficoms
mov
fiaddl
jb
rcrb
xorb
insb
mov
fidivl
sbb
xchg
outsl
xchg
sub
lea
mov
pop
test
sbb
mov
test
xchg
insl
out
daa
out
sub
ds
cld
mov
cmp
pop
psrld
fcoms
ds
clc
dec
rcll
lds
lahf
sub
jecxz
fcoms
lods
dec
clc
scas
pop
jmp
xor
add
sbb
xchg
inc
bound
out
sbb
orb
cltd
leave
shll
in
into
pop
out
mov
in
out
int
test
mov
sub
jecxz
sar
nop
add
mov
cmp
push
in
ljmp
mov
push
out
adc
mov
popf
inc
sarl
jmp
outsl
mov
sub
xorb
incl
ljmp
cmp
push
sbb
cli
das
lcall
add
out
mov
cmp
hlt
pop
dec
push
insl
dec
fimull
loopne
in
mov
dec
popl
shrl
push
fs
sub
mov
enter
nop
pop
int
push
mov
push
jge
lods
movsb
sub
dec
add
lock
add
sahf
mov
testb
adc
sub
sbb
jp
cs
testb
cmp
icebp
sub
insl
clc
hlt
rclb
outsl
iret
outsb
mov
shll
mov
fwait
fs
add
fisttpl
imul
cwtl
shl
or
jle
mov
sbb
and
sub
xor
and
and
xor
or
leave
and
gs
cs
mov
outsl
cltd
pop
push
cli
rcrl
pop
and
mov
sbb
outsl
mov
mov
jg
testb
cmp
outsl
outsl
fistl
ret
test
inc
negl
hlt
pop
add
mov
adc
sub
and
outsl
fisubrl
test
lds
nop
sub
in
lcall
int
in
jnp
loope
cwtl
mov
stc
xchg
dec
push
adc
insl
std
test
sub
out
xor
aaa
jo
call
adc
sbb
adc
mov
jmp
push
es
xchg
push
ret
pop
andb
test
arpl
or
loop
adc
mov
cld
icebp
add
cmp
test
test
stos
subb
in
push
outsl
mov
mov
mov
dec
in
jle
in
push
inc
mov
in
fdivrs
call
mov
xor
jg
adc
cmp
lods
aaa
jns
or
xchg
and
jae
adc
add
mov
nop
popf
cmpsb
cmp
mov
dec
push
sbb
int3
aam
inc
or
arpl
insl
test
mov
lcall
lea
fistpl
jae
lock
dec
xchg
lods
xchg
stc
adc
dec
xchg
mov
push
or
je
push
cld
inc
bound
sbb
repz
out
int
call
inc
cmp
add
push
inc
frstor
nop
arpl
test
dec
inc
mov
loope
sub
inc
neg
mov
cmc
jb
dec
xchg
pop
jb
ror
fcoml
push
add
adc
out
lds
mov
adc
mov
or
js
inc
mov
dec
or
cli
push
js
dec
sub
dec
cmp
int
js,pt
dec
cmp
ret
test
aad
xchg
iret
call
loopne
or
insl
std
lret
ret
dec
adc
cmp
jbe
inc
sarb
pop
sarl
dec
cld
dec
ficoms
pop
sub
aam
ret
std
jnp
mov
inc
leave
add
sbb
outsl
add
outsb
xlat
fwait
pusha
push
sub
popf
add
push
shrl
fisubrl
punpcklwd
adc
xchg
lods
out
dec
add
es
les
scas
mov
pause
out
cli
or
insl
call
aad
aam
sbb
in
pusha
mov
incl
loopne
in
xor
mov
and
dec
cmp
pop
inc
jle
adc
fwait
sar
bound
aam
scas
shll
sub
or
idivl
mov
xor
mov
aam
pop
es
popa
loop
sarb
lcall
loopne
sbb
add
xchg
and
pop
insl
cmp
hlt
mov
enter
and
lcall
mov
jnp
adc
dec
leave
xor
push
aad
inc
jno
in
lds
outsl
aaa
jecxz
cwtl
xchg
hlt
jg
lds
dec
dec
out
daa
call
xor
jp
push
push
icebp
repz
push
shlb
xlat
lea
in
popl
sbb
mov
faddl
fsts
inc
int
xor
or
cmpb
mov
test
cld
xchg
mov
stc
dec
xor
mov
jmp
test
in
sbb
aaa
add
and
mov
aam
push
pop
push
xchg
and
cmp
adc
flds
cmp
jge
sub
pop
xchg
arpl
jo
pushf
xor
mov
add
pop
daa
cmp
cmp
mov
test
jb
inc
cmp
xor
xchg
outsb
lods
inc
sbb
xchg
and
gs
or
mov
sbb
xchg
call
lahf
xchg
sti
cmp
fiaddl
or
shrd
dec
movsb
adc
pop
push
cmp
push
push
sub
pop
xchg
lret
fistpl
lods
sub
aaa
sti
mov
out
xchg
sbb
push
add
frstor
push
stc
or
push
outsb
sbb
push
add
inc
cmc
dec
adc
add
and
push
dec
xchg
sub
cmp
lcall
popa
mov
cs
push
mov
mov
pop
mov
inc
jmp
repnz
lods
add
or
sub
xchg
rol
stos
loopne
fwait
cmp
mov
into
or
dec
sarb
sub
add
sbb
in
mov
pop
push
add
bound
xchg
and
leave
and
repz
cmp
lock
add
aaa
dec
sub
inc
and
pusha
sbb
inc
cmc
adc
cmp
xor
jmp
push
pusha
ret
jmp
repz
hlt
sahf
sub
jge
sbb
xchg
out
and
hlt
scas
cmp
inc
cwtl
das
xor
mov
jp
fbstp
fwait
pop
mov
sub
push
and
ljmp
inc
sbb
pand
into
mov
ficompl
and
fwait
sub
ja
stos
adc
out
pop
mov
sbb
aaa
mov
fsubs
fisubrs
mov
cmpsl
popa
ljmp
add
lods
in
cli
dec
pop
sbb
cmp
mov
scas
and
pop
adc
ss
lods
scas
iret
pop
bound
out
daa
insl
add
and
mov
int
in
mov
push
inc
jne
mov
out
xchg
sbb
pushf
inc
mov
dec
pop
xor
in
cmc
add
fs
orl
pop
mov
gs
mov
or
out
ja
add
lret
je
sub
sbb
lahf
adc
sbb
sti
in
ds
ja
and
or
adc
std
mov
lds
das
sti
call
pop
jmp
pushf
pop
jbe
or
insl
stc
push
mov
addl
cmp
mov
test
out
xchg
lods
dec
insl
out
cltd
jg
push
sub
ja
cmp
insl
movsl
aaa
sub
push
jle
aam
test
testl
out
shlb
imul
data16
dec
jne
push
movsb
push
dec
decb
into
fnstsw
fisubl
test
lret
mov
push
rorl
add
xchg
daa
cmp
ret
jmp
jge
shrb
pop
mov
icebp
dec
xchg
push
shrb
sbb
lods
lret
xchg
sbb
leave
inc
lret
clc
out
sbb
cwtl
sbb
sbb
arpl
outsl
andl
mov
loope
jle
ja
shl
aas
cpuid
jecxz
lret
jbe
rcl
outsl
je
xchg
inc
lds
add
pop
inc
sbb
dec
sub
mov
in
xor
add
pop
imul
cmp
push
lret
cmp
movsl
ret
roll
cmp
lret
and
mov
test
aad
aas
outsl
pop
add
repz
inc
int
lret
sahf
push
mov
pop
adc
int
lcall
dec
inc
xchg
hlt
jle
inc
cmpsl
add
lret
sahf
scas
cli
cltd
dec
ja
dec
sub
mov
jns
jecxz
fnsave
movnti
stos
xchg
xchg
in
xchg
sub
jecxz
mov
push
sbb
jne
sbb
pusha
jnp
fadds
jl
lret
sub
push
sbb
dec
mov
adc
call
push
movsl
cmp
jnp
dec
stc
add
das
inc
out
pop
rolb
add
xor
mov
or
sub
add
lret
out
xchg
cwtl
xor
xchg
hlt
cmpsb
sti
sbb
in
mov
add
jnp
adc
ljmp
or
pop
mov
std
push
xor
subl
cwtl
test
rcll
adc
push
adc
push
sbb
mov
push
sti
push
adc
outsb
stos
fidivrl
sub
inc
stc
cmp
cmp
mov
push
jno
or
xlat
hlt
cmp
adc
lea
adc
ret
sbb
sbb
pop
jge
cmc
in
dec
or
push
icebp
fdiv
push
mov
cmp
icebp
and
mov
push
mov
mov
or
sarl
add
mov
shl
fnstenv
and
pop
seta
icebp
inc
hlt
mov
xor
je
test
repz
lahf
movsb
sub
into
pop
or
mov
test
ljmp
cmc
je
sub
or
in
cmpl
pop
dec
mov
mov
addb
sbb
mov
stc
mov
sub
mov
push
fcomps
ss
out
inc
lds
das
aam
and
adc
and
adc
and
adc
and
adc
and
adc
jae
adc
pop
ja
inc
stos
jbe
cld
pop
hlt
mov
sahf
je
or
es
sub
aas
sub
inc
xchg
or
mov
and
mov
shrl
inc
xor
inc
or
out
arpl
lahf
lods
sub
fisubl
pop
insb
pushf
icebp
pop
scas
mov
push
dec
nop
cmp
movsl
add
mov
and
mov
jne
loope
mov
cmp
sbb
das
sub
in
push
adc
icebp
mov
in
sbb
push
adc
and
ja
xchg
add
xchg
cmc
testb
lods
and
cmp
inc
jmp
stc
add
inc
and
push
unpcklps
xor
and
fdivrs
shrb
out
xchg
pop
adc
jno
or
fiadds
xchg
aaa
rcrl
sub
stos
mov
int
scas
jp
es
out
add
xchg
out
leave
mov
xor
subb
mov
mov
rorb
fwait
shll
cmc
cmp
bound
sahf
add
lahf
cli
xor
rorb
cmpsl
mov
adc
rcrl
mov
mov
out
inc
adc
jbe
add
shlb
out
pop
add
lods
es
xlat
push
loope
ficompl
addr16
loopne
test
out
int3
mov
neg
push
mov
leave
pop
data16
ret
add
lock
xor
lcall
push
mov
xor
nop
sbb
jbe
inc
in
mov
insl
pop
shrl
shll
into
sub
notl
and
mov
out
jbe
xchg
in
lret
repz
cmp
imul
and
cwtl
sbb
js
int
pop
rcr
lret
ss
dec
scas
sbbb
test
xor
out
inc
or
push
cs
cmpsb
push
mov
sub
jnp
push
inc
add
sub
inc
or
std
lret
stos
lods
add
cmp
in
test
mov
pushf
jns
sbb
and
addb
lock
scas
mov
fdivrl
lret
pop
xchg
imul
jle
cmp
insl
cmp
pop
and
paddw
and
jns
leave
and
out
mov
ret
leave
inc
or
or
sbb
aas
add
mov
lds
jecxz
jmp
add
mov
cld
fistpll
jns
mov
in
pop
inc
xor
stc
pop
mov
lods
insb
call
jp
jns
xor
sub
not
aas
dec
dec
add
xchg
inc
add
push
adc
sub
xor
mov
lock
dec
pop
or
leave
orl
inc
idivb
or
push
insl
fadd
rcll
sub
icebp
sub
cmp
xchg
testb
mov
dec
add
out
inc
subb
aaa
out
scas
daa
mov
les
incb
outsb
in
iret
mov
inc
jno
ds
lret
add
ror
stos
ds
jo
js
adc
sbb
ja
out
add
cld
enter
add
dec
and
push
cmp
inc
sub
in
rcll
jl
iret
cmp
sbb
in
and
pop
mov
rcrb
xor
sahf
add
int
addr16
dec
shl
push
lock
xor
dec
pop
sbb
adc
xor
rcl
in
push
inc
mov
fs
mov
out
xlat
sbb
adc
jno
in
stc
fdivp
sub
jbe
fsubrs
jg
repnz
jno
sub
inc
jne
mov
into
sbb
call
xlat
les
int3
and
jg
dec
sbb
gs
or
jns
mulb
jbe
sbb
lods
sub
dec
cmp
loope
loopne
mov
add
imul
test
inc
mov
aaa
jae
adc
icebp
sub
pop
fs
sub
fisubs
and
addr16
mov
add
or
fdivrl
mov
adc
enter
call
and
push
xchg
call
pop
in
mov
cmp
push
sbb
repnz
call
fbld
xor
cmpl
and
xlat
push
idivb
clc
mov
inc
or
cs
lock
out
push
mov
and
insb
shll
jg
mov
outsl
fidivrs
mov
or
push
inc
addl
sti
je
inc
pop
jp
out
nop
movsl
popa
xchg
outsb
add
dec
lods
rorb
mov
lods
nop
jae
bound
push
lea
mov
sbb
push
mov
mov
push
and
dec
or
fld
mov
sub
popf
test
in
pop
ljmp
mov
sbb
fs
fistps
or
stc
mov
push
pushf
or
add
mov
sahf
pop
icebp
popa
xlat
lock
mov
movsl
xor
cli
lret
push
push
hlt
sbb
mov
loope
push
out
repnz
push
fiaddl
in
icebp
mov
push
dec
out
dec
aaa
jle
cli
addb
jb
xor
xchg
xor
adc
ja
int
push
sub
test
sbb
out
pop
adc
cmpsl
pusha
jns
orb
out
pop
aaa
adc
outsb
jmp
dec
mov
nop
mov
xchg
pop
sub
mov
stos
test
adc
pop
popa
fldcw
xlat
cmp
dec
mov
mov
fistpl
cmp
mov
sbb
xchg
insl
mov
sbb
adc
clc
push
xor
int
lods
pop
or
fisttpll
jae
xchg
cmpsb
idiv
push
movsl
mov
hlt
shll
mov
xor
jns
dec
push
in
and
outsl
pushl
shrb
add
sub
pop
sub
mov
jl
mov
inc
lock
xor
xlat
outsl
xchg
sti
sahf
push
pop
lods
mov
clc
add
adcb
loop
mov
es
out
fistl
movsl
jo
adc
int
cmp
fwait
in
mov
lds
in
xor
cmpsb
arpl
sbb
test
sbb
push
in
mov
scas
xor
mov
out
in
pop
popf
and
add
push
inc
or
push
cmpsl
adc
hlt
mov
xchg
int3
sub
das
rcrb
jecxz
xor
mov
movl
iret
aam
pop
cmp
pop
pop
dec
xchg
inc
aas
inc
pop
jbe
aam
dec
xchg
pop
dec
sahf
lahf
cs
pop
inc
pop
xor
outsl
or
and
jne
movsl
loope
lods
pushf
rcrb
mov
sub
mov
cli
mov
fwait
insl
sbb
push
vfrczps
jnp
movb
mov
push
dec
dec
cmpsl
sbb
ja
mov
in
mov
or
dec
mov
sbb
dec
test
adc
mull
jno
add
scas
fdivs
jg
cmp
xor
fs
pop
cld
push
or
dec
out
sbb
loop
cmp
xchg
xor
sbb
pop
mulb
daa
fdivr
pop
popf
sub
pop
jmp
sbb
cmp
jmp
xchg
or
inc
andb
mov
sbbb
test
cli
xchg
lds
inc
jo
in
repz
and
scas
sti
aaa
pop
mov
adc
bound
frstor
das
adc
adc
inc
sub
push
mov
das
pusha
pusha
push
enter
data16
mov
lock
sub
pop
sub
ja,pn
addr16
pop
push
sbb
in
roll
mov
fldenv
ret
mov
daa
popa
mov
lods
sarl
or
sub
mov
adc
pusha
push
cmp
test
mov
ljmp
pusha
sub
or
pop
push
xor
dec
scas
pop
and
test
inc
mov
hlt
push
sbb
jl
xchg
fs
or
lcall
xor
rolb
or
mov
fldl
filds
fnsave
and
sub
daa
rclb
sti
push
pop
push
notb
lds
adc
js
sub
imul
loopne
popa
mov
adc
dec
pop
dec
aaa
loopne
jne
or
lahf
xchg
xor
stos
lcall
movsb
lret
pop
scas
movq
sbb
dec
dec
hlt
sbb
mov
sbb
testl
and
lock
cmpb
dec
sbb
daa
out
lods
pop
push
sub
pop
mov
enter
idivl
cmp
test
insb
std
mov
mov
outsl
sti
js
aaa
pop
pop
mov
mov
push
mov
dec
xchg
cli
clc
lret
dec
dec
adc
call
pop
and
andb
loopne
jne
or
add
mov
fstp
fucomip
push
and
or
test
mov
out
daa
sub
or
adc
push
adc
aaa
mov
fadd
ljmp
xchg
out
clc
in
dec
cmp
popf
cmp
sbb
and
add
mov
stc
or
add
mov
ffreep
push
comiss
scas
or
jle
push
jno
push
mov
mov
mov
sub
daa
mov
test
mov
orb
sbb
popf
inc
jb
enter
je
aaa
pop
pop
mov
mov
and
and
mov
lds
xor
je
mov
mov
pop
sbbb
cld
andl
js
push
lods
push
scas
imul
or
sbb
xchg
nop
xchg
mov
add
pop
mov
pushf
pop
arpl
mov
in
pop
xor
out
add
movsl
inc
adcl
sbb
push
in
jg
hlt
shlb
xchg
loop
nop
xchg
dec
jnp
pop
addr16
pusha
dec
push
dec
vmulpd
add
push
leave
aam
addr16
dec
push
fcmovnu
dec
imul
sti
pusha
sarb
movsb
nop
mov
jbe
das
popl
inc
xchg
call
and
xchg
xor
js
mov
pop
pop
cmpsl
lret
push
or
insl
mov
das
enter
movsb
addr16
outsl
adc
popf
in
xor
movsl
pusha
mov
js
popa
lahf
les
lds
sub
mov
pushf
add
das
in
push
decl
pusha
mov
inc
out
dec
push
xor
addr16
das
fsubl
push
ljmp
int3
push
std
push
mov
scas
push
cmpsb
lds
mov
adcb
fdiv
mov
in
ja
add
push
push
mov
jae
movsb
test
test
mov
push
andb
mov
mov
jg
movsl
mov
sbb
jno
icebp
jge
xor
into
dec
cmpsl
push
jns
push
mov
sbb
movsb
repz
sbb
jle
jl
dec
and
mov
pusha
test
mov
fsubr
ja
pop
mov
xchg
pop
inc
call
mov
mov
cmpl
outsl
cmc
inc
sbb
loopne
mov
lret
dec
inc
mov
addr16
mov
mov
filds
add
arpl
clc
arpl
pop
movsb
arpl
je
or
insl
rclb
sub
mov
dec
js
int
xchg
sbb
dec
outsl
mov
scas
sbb
out
scas
sbb
push
mov
mov
notl
imul
test
std
push
ds
sbb
loopne
xchg
xchg
mov
mov
scas
push
loope
mov
rolb
push
sbb
xchg
stos
sbb
call
es
out
pop
xor
aaa
lret
mov
mull
xor
mov
mov
sbb
pusha
ret
sbb
pop
xchg
out
jne
and
xchg
inc
push
xchg
aaa
or
xor
dec
jp
dec
gs
jg
iret
in
divb
sbb
add
enter
pop
xchg
push
adc
iret
pop
loope
mov
imul
jecxz
xchg
neg
dec
rolb
cmp
mov
out
gs
and
mov
out
ds
jne
testb
xor
leave
inc
js
add
pop
aas
repz
fildll
imul
int3
push
lahf
push
or
inc
ret
and
and
cld
xchg
out
popa
jmp
cmpb
and
jnp
xlat
addr16
mov
pop
mov
sub
mov
lret
stos
mov
push
sbb
aam
xor
and
hlt
push
mov
cs
inc
mov
push
je
loop
sbb
out
sbb
jp
and
dec
cmp
xor
and
or
sub
or
pop
cmp
les
lock
sbb
xchg
push
into
or
fwait
mov
les
test
sub
out
adc
cmp
mov
add
and
sub
insb
fsubr
lfs
cmp
xor
xchg
fildll
adc
loop
sbb
cmpsb
insb
shll
lahf
xor
enter
rol
and
nop
pop
fistps
push
sub
dec
stc
xor
test
inc
adc
mov
ss
pop
xlat
in
test
test
dec
ficompl
pop
or
nop
xor
lret
mov
push
aaa
addb
inc
pop
cli
fstp
xchg
or
push
lock
xor
jle
mov
movsl
xor
or
arpl
lahf
ss
test
aas
shll
mov
sbb
push
add
popa
data16
int
xchg
push
test
jg
aas
sbb
outsb
pusha
repnz
ret
mov
test
and
lret
ljmp
icebp
mov
cmp
dec
lcall
aaa
xchg
cld
mov
rcrl
xchg
or
or
and
testl
sbb
pop
rorl
in
dec
pop
adc
push
add
sbb
sub
jge
add
scas
push
sbb
mov
and
sbb
call
sub
fbld
test
scas
cmc
dec
adc
fnstenv
mov
sub
mov
add
adc
dec
test
push
xor
xor
push
test
sbb
jnp
xchg
pop
mov
add
jne
inc
mov
jbe
xor
xor
xchg
data16
lret
dec
dec
or
dec
jnp
popa
xor
fst
inc
popw
lods
jnp
int
cmp
or
cmp
inc
inc
cmpsl
xor
jns
cmp
and
shll
imul
xor
push
cli
or
lods
cltd
mov
push
mov
mov
test
or
jmp
ljmp
jp
sar
lret
mov
pop
add
loop
adc
outsb
and
fdivs
sub
or
sub
loop
mov
sub
dec
pop
xchg
clc
aaa
leave
push
cli
neg
out
inc
mov
dec
pop
xchg
pop
movsl
jns
jo
ss
and
push
aad
jnp
push
pusha
pop
sub
mov
or
outsb
js
fldl
push
pop
les
xchg
xchg
mov
hlt
mov
jb
pushf
lcall
mov
push
sti
add
jmp
add
jmp
mov
xchg
mov
and
das
outsb
dec
enter
dec
outsl
xor
cmp
iret
data16
xor
or
rclb
pop
dec
sti
xchg
cmp
cltd
jnp
dec
jg
inc
stos
fwait
pop
sbb
push
ret
xor
pop
cltd
int
adc
cmp
adc
add
xchg
xchg
ljmp
xchg
insb
imul
daa
adc
ret
cwtl
or
jge
jno
bnd
push
cmp
xchg
cmp
rorb
adc
add
hlt
outsl
ds
in
add
push
mov
out
sub
ret
mov
clc
std
data16
dec
ja
fs
sarl
test
or
arpl
add
jecxz
dec
xor
lock
leave
pop
push
or
outsl
mov
lcall
sub
xor
xchg
xor
mov
dec
in
or
xor
and
add
out
push
call
mov
mov
fs
mov
bnd
cmp
adc
loope
sub
mov
mov
sbb
push
pop
mov
or
pop
in
out
mov
jmp
movsl
adc
push
sbb
add
add
subb
inc
pop
mov
xlat
jns
fbstp
or
fldl
xor
dec
jns
sbb
push
addr16
jno
ljmp
mov
mov
cwtl
fidivrl
out
push
pop
add
xor
push
push
sbb
push
jmp
mov
or
nop
andl
xor
jmp
subl
ret
adc
inc
sbb
sub
scas
push
or
notb
mov
outsb
cli
sarb
push
aam
xor
jns
ja
sub
mov
pusha
fidivrl
inc
enter
pushl
and
clc
inc
cmp
lret
addr16
clc
pop
push
in
mov
cmpsl
inc
mov
and
stos
mov
jecxz
mov
or
ds
imul
mov
out
mov
push
dec
nop
add
ljmp
dec
or
sbb
adc
xchg
in
mov
jp
test
push
push
mov
movsl
repz
mov
sbb
decb
pop
xor
pop
mov
mov
insl
int
dec
sub
outsl
int
test
iret
fsubl
adcb
mov
lahf
push
scas
mov
in
nop
std
jbe
mov
stc
sbb
cli
mov
imul
fisttpl
xchg
outsb
sbb
shl
test
xchg
fwait
outsb
jae
jne
inc
fisttpll
cwtl
out
ljmp
jmp
xor
mov
jmp
cmc
leave
add
cltd
sbb
int
cmp
jb
andl
loopne
nop
aam
add
pusha
popa
inc
mov
inc
and
push
inc
das
and
pop
test
xchg
test
cmp
dec
cltd
inc
push
inc
shll
loop
adc
pushf
mov
dec
aaa
cmp
and
push
ret
jno
out
sti
ds
add
imul
mov
add
sub
push
lods
xor
in
fmul
cmovle
and
push
call
and
adc
je
adc
xor
mov
imul
iret
inc
movsb
in
int
pushf
dec
mov
xor
fdivs
jno
add
stc
dec
inc
dec
pop
sub
daa
in
cltd
das
xlat
push
xchg
cmp
sahf
in
pop
in
pusha
xchg
jmp
push
daa
out
repz
add
xchg
and
sahf
xchg
insl
push
ja
ret
dec
or
in
leave
and
fndisi(8087
adc
js
xor
jnp
fnstcw
add
jb
mov
clc
mov
call
insl
xor
fildll
sub
int
lret
insb
push
or
jno
xor
out
sarb
add
sub
cmpsb
mov
mov
cmp
iret
jae
and
sbb
inc
lret
inc
dec
mov
dec
adc
clc
int3
sbb
decb
mov
sbb
xchg
hlt
in
sub
test
jl
cmpsl
cmpsl
xor
and
jmp
out
pop
xor
insl
fstl
pop
jbe
outsb
pop
mov
mov
ja
shrl
test
push
jp
push
inc
sarl
jmp
in
adc
aas
xor
xor
jle
test
inc
adc
jmp
push
nop
xor
pop
cli
pop
sub
cmpsl
push
inc
nop
xor
divb
test
out
mov
jns
imul
in
inc
mov
call
adc
enter
lret
xor
rolb
and
test
cmp
xor
cmpsl
fiadds
movsb
out
addr16
push
fidivl
fmul
mov
fildll
and
rcll
lock
fisubl
xchg
mov
ljmp
sub
mov
or
push
inc
fsubrs
into
jg
stos
mov
sub
sub
test
mov
fnstcw
js
inc
aas
push
test
adc
cmp
and
fmull
pusha
subl
and
push
adc
roll
sub
sub
add
ret
mov
push
pop
xlat
push
or
sub
push
sub
mov
sub
mov
lahf
les
xor
icebp
cmc
inc
push
sbb
mov
rorb
lret
scas
iret
outsl
sub
adcb
roll
xor
hlt
sub
lret
stos
int3
add
and
clc
test
ret
mull
xchg
in
cmp
pop
roll
leave
gs
jp
hlt
nop
ss
push
movsl
test
mov
ljmp
jg
xchg
add
sahf
in
add
movsl
or
mov
imul
stos
ss
add
add
sub
mov
sub
jnp
in
stos
and
inc
pop
fisttpll
out
and
imul
insb
out
std
push
xlat
cmp
into
aas
sbb
sub
insl
xchg
sbb
shrl
and
cmp
add
lret
cmpsl
adc
popf
cmp
adc
out
jb
or
ss
xchg
por
pop
das
jmp
stos
gs
mov
push
jbe
test
in
out
shlb
add
scas
xchg
lds
leave
cmp
push
je
sbb
mov
jecxz
xchg
xchg
add
pop
sbb
ljmp
sbb
jns
and
push
fcomps
dec
sbbw
in
dec
inc
idivl
les
outsl
in
outsl
cld
call
cmp
sub
mov
mov
xor
and
popf
std
arpl
roll
mov
push
xchg
cmp
pop
push
mov
xorb
sub
pop
loop
lret
stos
shrb
cs
test
lea
les
cmp
cmp
sbbl
aad
cld
jge
movsl
cmp
ficoms
leave
inc
inc
sbb
inc
mov
ds
add
jae
mov
push
mov
gs
jo
shl
out
sbb
inc
dec
xor
and
push
loopne
pop
shlb
int3
mov
jbe
sub
sub
ds
jmp
lock
ret
add
fbld
adc
lods
jle
jb
dec
outsl
or
cmp
inc
sbb
mov
out
dec
int
lahf
pop
idivl
xor
add
or
hlt
js
int
cld
movsb
movsb
jb
movsb
mov
lea
sbb
adc
jmp
dec
inc
ds
add
cmpsl
push
into
loopne
arpl
xlat
cld
ret
or
je
cld
outsb
pusha
cmp
adc
jo
xchg
loop
sub
fdivr
or
test
iret
add
dec
rorl
call
cmc
pop
cld
jb
push
popa
aam
sub
ret
mov
hlt
test
aaa
mov
mov
cs
adc
xchg
call
pop
cmp
cmc
push
add
inc
in
mov
daa
or
sub
iret
movsl
push
pop
xchg
dec
popf
or
push
lret
or
inc
add
repz
adc
aas
into
out
enter
adc
mov
test
stos
inc
pop
and
ja
pop
scas
lds
lods
out
imul
add
je
pop
mov
xchg
mov
imul
push
aaa
hlt
dec
scas
pop
icebp
and
mov
iret
test
xor
in
xor
bnd
aam
popa
ja
sub
sub
lret
dec
jb
xchg
and
shlb
ficompl
push
jns
jle
cmpsb
fldl
xor
pop
xor
les
jae
std
lods
movsb
cmpsl
pop
cld
shl
loopne
out
mov
push
fs
cwtl
das
cmp
lods
subl
icebp
popf
pop
jns
int
test
iret
mov
fwait
pop
into
push
jno
out
dec
cmp
sbbb
mov
cmpb
daa
sub
lods
out
out
sbb
dec
repnz
sub
xrelease
jns
loopne
pop
out
sub
mov
inc
cmp
jne
jno
or
hlt
test
lods
or
xlat
mov
andl
out
push
pop
xchg
push
mov
mov
movl
clc
mov
and
das
adc
dec
sbb
clc
loopne
addr16
test
mov
mov
xchg
xchg
insl
sbb
dec
sub
xor
or
push
sub
cmp
add
mulb
addr16
dec
outsb
stos
sarl
sahf
je
lods
sti
out
es
xor
out
push
mov
in
dec
pop
aaa
int3
sbb
xchg
push
sub
fsubl
adc
les
aas
adc
mov
lcall
fwait
cld
and
clc
les
xchg
jge
mov
iret
lods
inc
lcall
adc
add
dec
inc
lea
insl
clc
insb
ret
imul
sub
push
sub
cmpsb
adc
cmp
xor
jp
nop
pop
jns
out
sub
cmp
call
nop
xchg
and
push
xor
in
data16
cmpl
in
sub
test
pop
push
addr16
and
mov
push
xchg
lret
test
and
sahf
cmc
cltd
jp
sbb
pop
fnsave
xlat
ficoml
test
adc
jnp
add
aam
mov
sub
outsl
mov
call
in
pusha
mov
adc
sarl
loopne
mov
js
push
nop
pop
mov
cmp
test
lea
not
dec
pop
ret
cmp
adc
push
jnp
lret
push
xchg
imul
mov
lret
cmp
scas
fs
in
jnp
stos
out
adcl
arpl
mov
sbb
sbb
lea
xor
imul
sub
mov
int3
mov
xlat
mov
xlat
jp
test
jp
mov
xchg
jecxz
lret
loopne
jge
aam
mov
jns
scas
hlt
cmp
aam
invd
xor
add
mov
shlb
loop
sub
test
mov
clc
pop
scas
dec
pushf
andb
cmp
add
enter
inc
sbb
jle
and
sbb
shll
add
imul
dec
ds
cmp
mov
sbb
addb
and
call
aad
clc
sbb
or
lea
or
xchg
dec
loopne
and
push
mov
jnp
sbb
sub
in
adc
aas
mov
lea
dec
xor
dec
sub
shl
cmc
sarl
and
inc
sub
mov
jne
mov
jp
loop
push
mov
fidivl
cmp
jbe
mov
stos
fcompl
gs
addb
andl
dec
mov
push
push
inc
push
jmp
cltd
adc
mov
and
dec
add
pop
add
mov
orb
mov
jnp
or
mov
dec
or
orb
cmpsb
repz
pushw
inc
dec
mov
pop
cwtl
lret
ja
add
or
popa
adcl
lods
xlat
clc
sahf
rclb
inc
mov
aam
jge
jmp
sbb
jp
jle
pop
xchg
pop
lods
lods
mov
ds
jae
push
out
add
jo
stos
out
inc
jne
push
mov
pop
mov
clc
inc
in
sbb
add
out
push
mov
jecxz
je
dec
inc
xchg
cs
dec
mov
mov
or
aaa
mov
dec
lea
and
xchg
or
js
xchg
or
mov
lcall
dec
testb
call
aaa
xchg
sub
mov
sbb
add
fsubrp
jne
stos
mov
mov
push
mov
fs
adc
sbb
jbe
hlt
outsb
lds
cmp
or
je
std
push
stos
or
stos
cmp
inc
dec
add
imul
ss
imul
or
in
inc
les
adc
ret
lds
add
cmp
lret
inc
adcb
iret
lock
cmp
mov
push
enter
divl
cmc
dec
pop
sbb
push
adc
jbe
xchg
xor
mov
dec
dec
push
lea
push
and
cld
hlt
lret
ds
out
dec
shl
enter
jb
ds
das
push
sbb
imul
movsl
lods
mov
aad
mov
mov
ss
es
jmp
add
ret
jge
lea
dec
mov
mov
aas
shr
sbb
sub
add
in
addl
call
cld
mov
ljmp
lods
scas
daa
imul
mov
sbb
ja
sbb
and
fcomip
je
lods
jge
lods
or
dec
add
dec
rcrb
push
xchg
sub
lahf
pop
int
cmp
scas
incl
inc
mov
mov
inc
sbb
fsubs
pop
out
mov
hlt
call
cmpsl
pop
lret
sbb
adc
sub
mov
jae
xchg
cld
cmpsl
or
cmp
or
cmp
add
ss
into
or
xor
addr16
addr16
dec
mov
sub
adc
sub
xorb
ds
es
lds
mov
push
sbb
add
pop
pop
test
loop
inc
jge
adc
lea
push
roll
ss
cltd
iret
stos
mov
bound
push
mov
rcrl
jmp
push
lahf
inc
pop
movsl
lock
insl
inc
fmuls
push
and
xchg
sbb
enter
xchg
xchg
add
mov
add
hlt
jge
jno
mov
add
inc
add
lods
test
idivb
cs
cltd
imul
scas
push
les
pushf
js
arpl
inc
or
rorl
notl
jge
mov
xchg
test
cwtl
xchg
aad
push
sbb
pop
daa
fwait
pop
aas
popf
sbb
adc
fnsave
mov
nop
and
cs
dec
arpl
fildll
xchg
sub
sbb
call
cmpsl
roll
ret
cld
inc
incl
je
push
xchg
std
fldt
jecxz
enter
addr16
dec
add
push
subl
incb
mov
add
das
add
push
pusha
jle
pop
in
rolb
jnp
or
jp
out
inc
mov
enter
movl
push
xor
jb
xchg
jns
call
adc
xchg
call
out
and
addl
xchg
lret
and
je
test
in
add
pop
jle
fwait
inc
mov
andl
shr
ss
lea
cmp
dec
test
enter
dec
mull
clc
notl
lds
push
in
and
pop
xor
dec
dec
cld
ds
and
iret
sub
out
scas
xor
out
das
imul
out
xlat
mov
lret
mov
mov
notb
push
add
negb
or
dec
aad
inc
enter
mov
inc
dec
inc
mov
xchg
xor
lea
dec
sub
ret
mov
idivb
or
sub
xchg
mov
xor
test
mov
es
mov
inc
stos
xlat
fisubrl
aaa
dec
aas
sub
sub
sar
or
faddl
out
xlat
push
scas
xchg
adc
inc
mov
jne
cmpsl
int3
aas
loope
mov
cmp
mov
dec
sub
out
mov
fsub
out
adc
loopne
adc
and
jae
int
movsb
cltd
xlat
sar
dec
jne
xor
sub
pushf
adc
out
ficomps
xor
sub
dec
js
cmp
dec
and
mov
xchg
push
shll
scas
adc
or
lahf
out
lret
nop
and
cmpsb
lods
sbbl
mov
mov
dec
scas
data16
and
pop
lods
fsubs
movsb
sbb
movhps
sarl
adc
cmp
or
insb
jp
push
cmp
notl
push
test
dec
sub
xchg
sahf
jg
push
sub
and
push
fwait
hlt
sti
dec
les
lcall
push
mov
inc
pop
int3
clc
jnp
fidivrl
jg
into
cmc
jnp
or
adc
scas
ret
sbb
and
call
push
mov
ror
loop
sub
jp
adc
pop
ja
mov
lock
incl
enter
inc
stos
test
les
pop
ror
xchg
mov
push
mov
stos
xchg
stos
jnp
int3
test
sbb
cmp
fiadds
xchg
xchg
repnz
pop
add
pop
test
cmp
cmpl
inc
scas
cmc
adc
jno
fs
push
mov
test
ficomps
dec
add
adc
lods
shrl
pop
int
test
out
testb
movsb
inc
and
data16
cs
and
mov
mov
ds
inc
sub
sub
mov
fildll
lds
pop
inc
lods
pop
inc
fcomip
jo
cld
test
inc
lock
inc
sub
xchg
and
sub
adc
pop
mov
cs
adc
sub
cwtl
ja
data16
inc
dec
adc
xchg
jmp
popa
clc
mov
xor
xchg
mov
scas
data16
and
decl
mov
dec
sbb
popf
inc
sub
adc
inc
or
sub
rorl
mov
push
int
adc
hlt
xchg
xor
push
les
cmpsl
fdivrs
mov
and
ljmp
out
mov
mov
jnp
xchg
or
ljmp
sbb
xlat
clc
in
cmc
or
add
stos
les
out
sbb
and
aaa
andb
and
sub
adc
ljmp
dec
hlt
cmc
add
lret
jns
cmp
and
or
cli
lock
sbb
adc
fisttpl
adc
aaa
dec
sbb
call
into
add
mov
xchg
arpl
push
cmp
ljmp
pop
mov
pop
out
nop
or
xor
pop
scas
cwtl
call
push
data16
dec
dec
loope
fisttps
outsl
jnp
hlt
stos
int3
sub
dec
mov
mov
hlt
jg
das
nop
and
cmp
pop
sub
push
mov
mov
mov
pop
or
xorl
pushf
xor
pop
or
loopne
jns
popf
out
and
jnp
test
inc
cmp
data16
arpl
dec
lea
xchg
clc
rcrl
pop
mov
pop
inc
sub
in
push
add
outsb
stos
xor
idivl
dec
push
mov
fs
adc
addb
sub
cs
jne
pop
cmp
xchg
dec
cs
push
mov
inc
inc
mov
mov
stos
xchg
insb
push
mov
inc
and
xchg
test
inc
pop
rorb
repnz
fsubrl
cmp
imul
lods
daa
push
sub
roll
testb
add
xchg
repnz
jg
push
cmc
movsl
stos
cmp
std
pop
ljmp
pushf
add
roll
cmpsl
call
mov
es
call
daa
sbb
insl
pop
ds
lock
sbb
sub
pop
sub
dec
inc
int3
shll
add
pop
rolb
sub
dec
jae
jo
or
dec
scas
pop
roll
js
cs
js
js,pn
pop
add
cmpsl
sub
jo
xchg
je
outsl
inc
test
dec
test
popl
fs
inc
rolb
test
mov
js
pop
cmp
mov
inc
call
sbb
push
test
dec
js
daa
addl
or
loop
ret
and
outsl
mov
pop
add
rcl
or
hlt
mov
les
push
cmp
mov
testb
and
lea
sub
sbb
daa
rcrl
sub
sahf
push
dec
mov
push
adcl
ja
popf
test
imul
pop
mov
insb
cmp
add
mov
inc
addr16
nop
dec
xor
lcall
adc
dec
je
pop
dec
xlat
push
out
subb
xchg
in
int
jae
xor
imul
mov
orl
push
pop
mov
lods
test
clc
mov
in
pop
in
dec
xchg
sub
dec
rolb
scas
dec
mov
je
std
cwtl
andl
aaa
or
hlt
sub
sti
sbb
add
mov
xchg
jno
pop
or
adc
mov
mov
mov
sbb
jle
jns
add
ret
mov
jne
popf
nop
inc
push
xchg
popf
movsb
cld
mov
fucom
mov
jns
ror
in
icebp
inc
cmp
out
and
rolb
jmp
sbb
sbb
mov
and
and
and
inc
in
movsl
rolb
mov
pop
mov
add
sub
mov
aaa
push
pop
insl
pop
movsl
in
cmpsb
dec
insb
add
adc
cli
popf
repz
sub
jl
mov
into
dec
jbe
adc
xchg
or
xchg
and
ja
sahf
leave
mov
ret
push
push
dec
adc
xchg
mov
sahf
push
cmp
aaa
popf
sub
cli
and
xor
add
divl
add
mov
push
sbb
iret
mov
ss
and
pop
scas
aas
ret
insl
stc
lcall
dec
inc
in
mov
addr16
cmp
sbb
mov
int
dec
cld
inc
out
sub
and
push
adc
sub
cltd
mov
ss
clc
jns
push
out
iret
or
sub
sbbb
and
mov
cld
dec
es
pop
inc
bound
out
cmp
ss
jmp
add
lcall
popa
mov
inc
dec
mov
sub
pushf
mov
popf
notb
mov
xor
add
in
popf
cltd
add
aad
cwtl
and
xchg
sub
dec
and
add
inc
pop
test
aad
add
add
or
cmp
decb
dec
inc
inc
mov
icebp
mov
sub
push
frstor
int
cld
cs
cli
dec
flds
mov
sub
and
dec
cli
sbb
pushf
lock
sbb
push
xlat
outsl
sbb
xor
adc
sbb
inc
daa
sbb
adc
ljmp
mov
or
test
outsb
mov
xchg
lods
pop
movb
or
cwtl
and
xchg
and
std
enter
daa
aad
mov
cs
inc
outsb
aas
dec
repnz
dec
xor
adc
mov
xorb
in
sbb
pop
adc
out
pop
xchg
out
dec
mov
lea
sbbb
daa
sbbl
and
add
andb
shlb
dec
push
cltd
bound
dec
pop
sahf
nop
dec
mov
jp
outsb
sub
mov
rep
mov
out
mov
addr16
inc
jmp
xchg
adc
jne
lea
mov
mov
addb
push
test
mov
pop
enter
xchg
test
das
mov
fwait
ret
in
repnz
xor
jbe
shl
mov
mov
mov
lea
mov
aad
mov
popa
jb
popf
popf
jns
mov
test
imul
push
arpl
fmull
mov
or
cld
stos
adc
and
sbb
mov
mov
divb
fists
lds
das
ljmp
cmpsb
test
adc
jl
push
xchg
repnz
cmp
subl
jge
mov
das
cmpb
imul
inc
mov
mov
adc
push
outsb
loop
sub
mov
popa
push
jo
adc
push
popa
jecxz
cmp
mov
nop
fsubp
pcmpgtb
jbe
adc
cmpsl
iret
loope
pop
push
mov
shrb
icebp
jo
icebp
sahf
lods
test
adc
jge
xchg
mov
sbb
scas
mov
insb
mov
lahf
insl
and
adcl
mov
mov
clc
sbb
iret
sub
xor
or
jb
or
insb
mov
jmp
push
aad
lret
ds
sub
cs
push
imulb
mov
sbb
out
cmp
dec
test
pushf
dec
scas
pop
outsl
pop
xchg
dec
mov
dec
push
pop
fsubrs
iret
push
inc
push
mov
mov
pop
pop
sub
hlt
add
push
es
dec
lret
imul
pop
dec
sbb
test
inc
add
inc
daa
jl
push
cli
insb
clc
addr16
dec
mov
mov
aam
jmp
les
fildl
aam
xor
jne
or
add
mov
add
imul
mov
pop
aaa
mov
and
xlat
xchg
hlt
push
add
jnp
rcl
rol
addl
insb
dec
add
inc
push
js
push
daa
insb
xchg
addr16
pop
clc
ja
dec
movsb
sbb
popf
aam
jmp
les
mov
or
in
idivb
movsl
mov
leave
add
dec
insb
lahf
mov
imul
push
jle
repnz
sbb
and
push
cmpsl
pop
dec
or
dec
jg
sub
test
sarl
sub
push
in
sub
jns
imul
rorl
push
int3
sbb
and
pmuludq
adc
mov
mov
daa
out
sub
lock
and
popa
push
stos
imul
push
or
jnp
adc
sub
loopne
pusha
or
or
mov
sub
or
lret
mov
cmpsb
and
mov
xchg
iret
pop
push
leave
cli
xor
xor
mov
sbb
and
mov
lret
sbb
sub
stos
mov
pop
cmc
test
and
mov
push
shl
shll
test
pop
add
es
mov
out
and
sbbl
sub
jle
jns
jno
inc
cmp
add
hlt
pop
and
insl
cmp
nop
nop
cmpl
mov
or
mov
mov
sub
inc
xchg
test
add
ss
or
cld
ja
push
repz
dec
inc
and
mov
rolb
or
add
cmp
and
jne
sahf
cmp
inc
mov
and
dec
dec
mov
leave
pop
in
aam
sbb
js
xor
push
dec
les
fwait
sbb
scas
cmp
inc
test
add
sub
and
loop
pop
sub
inc
xor
movsl
jp
addr16
xor
jle
out
int
int3
push
in
mov
jmp
mov
cmp
xchg
and
push
adc
cmp
pop
test
mul
xor
in
imulb
in
adc
add
leave
out
cwtl
iret
or
mov
dec
or
mov
mov
out
outsl
mov
jmp
adc
sbb
nop
cmp
mov
insb
ret
dec
sub
les
sub
shr
sbb
in
sti
mov
insl
cli
jbe
js
dec
fld
ljmp
sub
fwait
dec
jle
leave
insb
rcrl
pushf
andl
or
push
push
add
push
in
mov
adc
insl
add
mov
xchg
out
push
jnp
sti
fdiv
mov
stos
pop
stos
sub
lahf
mov
insb
mov
jmp
dec
jecxz
xor
daa
out
inc
pop
sub
mov
mov
or
mov
adc
xor
imul
mov
sub
mov
lea
in
aam
mov
pusha
and
into
call
aad
push
lahf
xchg
jmp
jg
inc
sar
in
fmulp
movsb
hlt
outsl
int3
jns
mov
inc
pop
adc
mov
ror
hlt
rcl
repz
int
sub
std
sbb
subl
xor
lret
add
xchg
shlb
xchg
xchg
push
dec
dec
mov
test
sbb
pushf
iret
into
sub
negb
sub
lahf
int
fdivrs
lods
icebp
das
fimull
or
cmp
das
cbtw
fldcw
pop
fcoms
adc
mov
and
repz
xor
and
mov
bnd
mov
inc
lds
mov
mov
mov
or
dec
out
cmp
cmp
iret
mov
push
sub
cmp
insb
sub
jle
push
daa
xchg
sbb
sbb
cltd
cmp
popf
incl
and
ror
fsubrs
pop
cmc
popa
scas
cmc
xor
sbb
mov
push
inc
shrl
sub
test
mov
jle
mov
fdivs
or
out
xchg
and
lock
aad
or
dec
mov
rolb
popa
sbb
jg
dec
cmp
jecxz
mov
sbb
jmp
cmpsl
inc
rcrl
sbb
pop
xchg
or
adc
or
mov
and
daa
mov
test
jecxz
pop
jg
fcmovbe
pop
icebp
push
hlt
mov
mov
adc
lock
stc
outsl
out
push
dec
out
je
push
adc
hlt
stos
sub
jbe
hlt
mov
loopne
xlat
mov
iret
pop
jne
leave
cmpsl
aaa
pop
sahf
mov
addr16
std
andb
add
call
pop
shll
das
fcomi
mov
mov
insb
and
or
lret
mov
test
push
and
or
mov
or
lds
test
scas
bound
rcll
sub
cmp
or
loope
push
dec
sbb
pop
mov
lcall
mov
mov
cmp
adcl
loope
shrb
je
mov
jge
ret
adc
aam
jl
stos
mov
lret
mov
and
mov
mov
daa
dec
inc
stos
pusha
scas
test
movsb
mov
int3
pop
ss
fdiv
bound
lret
add
push
mov
mov
mov
jge
imul
dec
mov
shll
lret
jmp
nop
sbb
cmp
push
jmp
mov
inc
inc
xchg
cmp
divl
fdivrs
mov
push
in
lds
inc
xor
in
popa
int3
inc
adc
inc
add
lret
lods
mov
xchg
ja
jge
sub
or
pusha
jecxz
nop
inc
sbb
cmp
mov
imul
cmpsb
push
cmp
loop
dec
es
jns
fs
fstl
loop
cmp
sbb
jns
into
jb
fsubp
jge
xor
pop
or
adc
sub
cmp
cmp
jle
jmp
out
pop
mov
cmpsb
xor
mov
jb
movsb
jmp
push
pop
add
ret
adc
out
jge
insb
repnz
cmp
popa
cvttps2pi
cwtl
inc
jae
push
and
test
inc
cmp
adc
movsb
lea
xchg
iret
in
jo
lods
cli
cmp
xlat
jo
and
sbb
cli
xor
ret
js
in
pop
push
enter
inc
lds
push
repz
adc
ret
ds
leave
mov
cwtl
loopne
dec
test
jecxz
or
pop
pop
testl
mov
pushf
and
ret
insl
jbe
iret
orl
lret
sbb
adc
cmp
pusha
in
ret
bound
mov
jo
movsb
mov
in
and
enter
hlt
and
xlat
dec
in
pusha
mov
jmp
inc
pusha
lret
add
inc
nop
pop
adc
xor
mov
inc
test
and
in
call
insb
mov
inc
in
loopne
ret
mov
dec
push
push
popf
in
call
das
subl
push
lahf
or
jl
or
ljmp
push
cld
rcrl
jl
fistpll
or
aaa
out
sahf
movb
mov
inc
outsb
jno
hlt
adc
adc
mov
adc
sub
lods
xchg
and
out
mov
sbb
cmp
jnp
push
cmpsb
iret
pop
daa
xor
aad
xchg
pop
dec
pop
or
mov
jecxz
xchg
mov
out
push
pop
negb
pushf
xchg
jno
iret
jg
or
xchg
xchg
outsb
ja
adc
stc
xchg
test
inc
ja
mov
stos
mov
scas
rcll
cmp
or
push
pop
cmc
xchg
nop
mov
jo
or
xchg
fildll
mov
adc
subl
in
push
adc
out
fcomi
roll
hlt
movsb
fildl
push
cmp
push
mov
lods
jle
idivb
lcall
jecxz
push
stc
push
jecxz
push
out
mov
cmp
xchg
xor
into
mov
insl
push
jno
fcomp
mov
inc
xor
mov
daa
gs
cli
mov
mov
cmc
xor
mov
inc
fwait
cmp
in
cmpsl
idiv
out
sbb
or
xor
mov
es
arpl
out
out
out
mov
fs
fdivrl
movsb
mov
insl
hlt
cmp
sarl
pop
rdpmc
mov
dec
mov
pop
sbb
dec
data16
jnp
xor
aam
xchg
and
push
cmp
adc
or
or
mov
xlat
aas
idivl
rorb
sti
xor
mov
jne
or
jb
pop
mov
nop
pop
mov
cmp
cltd
dec
or
cmp
pop
mov
dec
adc
and
cld
shl
xor
xchg
jns
inc
sbb
dec
sub
insl
xor
dec
sbb
xlat
add
and
movsb
add
jp
sub
sub
popa
xlat
and
sbb
inc
loop
pusha
cmpsl
mov
call
dec
icebp
das
adc
lock
loope
xchg
shrl
push
repnz
sub
stos
ja
mov
aad
in
dec
sbb
stos
insb
jl
mov
lret
or
xchg
sub
jp
inc
add
jge
mov
outsb
lea
sahf
cmp
stos
jne
xchg
lods
adc
rclb
xor
mov
or
dec
adc
lods
int
jmp
push
push
test
addr16
adc
lock
addr16
in
adcl
jecxz
xchg
dec
imul
mov
and
ror
icebp
dec
dec
mov
mov
mov
outsb
cmp
ss
fwait
sbb
lcall
mov
insl
pop
xchg
imul
or
ljmp
or
cmp
icebp
shlb
fldl
cmp
mov
xor
xlat
or
ljmp
mov
mov
inc
cwtl
hlt
cmp
lret
cmp
das
or
xchg
lods
sbb
or
aaa
cmp
dec
push
xchg
leave
pop
xor
lods
lahf
or
sti
lds
test
xchg
add
mov
dec
cwtl
pop
pop
movsb
mov
adc
push
dec
cltd
ss
xchg
add
cmp
inc
mov
xor
in
mov
xchg
jge
pop
xchg
mov
add
dec
sti
testb
push
leave
mov
jecxz
rcr
add
daa
cltd
ret
add
inc
das
test
push
push
mov
or
add
test
lret
xchg
sub
jmp
cltd
jb
jo
ljmp
mov
cmc
cld
pop
ja
add
cmp
pop
int3
sub
scas
cmc
cmp
in
in
xchg
jmp
lods
add
pop
out
push
mov
add
movsb
movsbl
sub
insb
cmp
dec
clc
iret
sti
dec
ret
push
push
insl
jns
inc
xlat
push
mov
mov
fisttpl
sub
add
in
jae
xchg
cmp
inc
bswap
or
imul
mov
push
mov
out
les
cli
xchg
and
fnstenv
stc
outsb
popa
fwait
pop
jg
jne
scas
insl
jmp
fs
dec
test
mov
dec
push
or
pop
sbb
adc
cmpsb
aad
pop
dec
sub
pop
dec
leave
adc
cmp
add
cmp
jnp
add
sbb
mov
jbe
pop
sub
cmp
in
jbe
test
cltd
popa
pushf
loop
inc
rcr
pop
jmp
and
rol
or
sbb
std
pop
jmp
add
in
and
movsl
mov
out
enter
or
jp
or
cmp
add
dec
cld
mov
loope
in
adc
mov
jns
rcrl
cld
mov
xor
inc
int3
xchg
cmp
sbb
loop
mov
inc
mov
jecxz
sbb
das
xchg
or
add
mov
dec
lea
ret
inc
in
sub
or
fisubl
lods
sub
pop
or
xor
fildll
iret
es
out
mov
aas
sbb
cmp
xor
repz
dec
or
in
jmp
inc
aas
push
outsl
in
pop
nop
es
add
data16
push
cs
cld
jmp
mov
add
add
test
sub
out
out
fsubrl
dec
enter
pop
inc
imul
outsb
xchg
pop
in
cmp
jae
bnd
cmp
in
mov
in
ud1
and
sub
jnp
sub
dec
jb
shll
ret
cmpsw
and
or
pop
push
sub
pop
movb
pusha
pop
lret
dec
in
clc
js
cmc
mov
or
gs
hlt
push
push
sbb
mov
inc
rcrb
pop
mov
jmp
pop
stc
in
lods
shl
loopne
xlat
sub
add
mov
roll
push
filds
mov
jno
fldt
sub
or
xor
icebp
and
cmp
add
or
jbe
push
test
test
test
inc
xor
dec
loopne
aam
inc
dec
cmp
sbb
cli
fisubrs
mov
pushf
movsl
aad
in
stos
jo
imul
repnz
mov
out
pop
fsubrs
sbb
jno
sahf
je
mov
rcrb
lods
cwtl
mov
sub
leave
je
add
cmc
xchg
mov
cwtl
lds
dec
dec
lock
lcall
sub
xchg
dec
cmpb
dec
das
sub
or
mov
xor
jmp
sub
rcrb
push
daa
jne
sarb
cltd
pusha
push
fldenv
insl
dec
sbb
push
and
mov
mov
add
xchg
lahf
dec
aam
xchg
test
mov
std
inc
xor
gs
or
mov
dec
test
into
and
les
pop
movsl
dec
dec
fwait
pop
jae
loop
popf
cmp
loope
pop
adc
jmp
movl
ds
arpl
stos
inc
stos
push
adc
adc
or
out
je
mov
push
cmp
xchg
dec
pushf
lock
iret
inc
je
push
mov
jle
jle
hlt
pop
fsts
dec
aad
xchg
aaa
xchg
dec
mov
push
mov
dec
sub
sub
sbb
dec
pushf
shlb
loopne
xchg
fwait
lds
imul
fcompl
test
lcall
in
sbb
inc
dec
pop
pop
jecxz
dec
decb
dec
add
cmp
cmp
test
mov
mov
fnstenv
insl
dec
sub
or
xchg
add
pop
sub
fisttpll
loope
insl
dec
sbb
test
push
pushf
cld
xchg
pop
sti
or
or
outsb
out
push
jle
mov
pop
icebp
add
aaa
mov
dec
pop
dec
cmpsb
sti
mov
push
sti
aaa
mov
inc
mov
test
popl
mov
das
xor
popa
sbb
in
test
push
int3
xchg
xor
outsl
inc
and
dec
jmp
ds
mov
outsb
push
fst
cmp
shll
stos
mov
jmp
loope
insl
inc
sub
or
xchg
push
mov
xchg
inc
daa
lret
fwait
inc
dec
xor
bound
jne
in
add
shll
stos
ljmp
lds
sub
mov
fwait
xchg
repz
and
sti
aam
enter
outsb
xchg
jle
lds
ret
push
sub
xchg
div
xchg
sub
aam
fdecstp
clc
pop
or
repz
cmc
xchg
js
lock
adcb
subb
pop
mov
stos
dec
dec
cmp
cmp
cmp
pushl
pop
fsts
pop
dec
adc
dec
movl
les
cmc
scas
mov
push
clc
add
pop
xchg
dec
das
xchg
mov
ds
push
xor
cmp
cmc
test
inc
ret
jnp
xor
js
sub
mov
ret
jle
xor
nop
enter
dec
jp
scas
add
sti
xor
xlat
dec
xor
dec
int
int
mov
jo
into
add
rcrb
ret
jno
pop
jne
jmp
in
cmp
push
call
std
push
fists
cmp
jae
scas
sub
fnsave
dec
mov
test
mov
sub
arpl
scas
mov
mov
movd
les
je
cld
push
cmp
int
sbb
mov
inc
push
jmp
sti
xchg
dec
lret
imul
pop
in
jg
bound
lods
in
jae
js
insl
dec
enter
testl
or
or
orb
rcrb
dec
fldl2t
cmpsl
jnp
xor
sbb
or
or
in
test
push
insl
lock
dec
add
sbb
xchg
les
lea
in
clc
sbb
mov
into
out
add
mov
daa
outsl
out
sbb
popf
cmp
cli
mov
test
add
fistpl
lret
xor
pop
sar
jns
xor
inc
sahf
iret
hlt
push
mov
cmpsb
fwait
xor
pop
hlt
xor
push
add
xchg
or
insb
push
addl
inc
out
popa
loope
or
sbb
jno
aam
call
das
dec
iret
inc
stc
xchg
fs
mov
jnp
xlat
adc
aaa
mull
popf
imul
mov
push
pop
popf
mov
out
fildl
aaa
cmp
pop
out
popl
cmp
out
dec
pushf
adc
repz
or
popa
loopne
add
and
mov
or
int3
cmp
imul
dec
pop
mov
call
jb
or
jbe
jl
lods
fimull
or
outsb
enter
pop
lea
cmpsl
and
jbe
or
sub
or
jmp
adc
rclb
add
push
inc
in
mov
addr16
jbe
mov
cwtl
mov
in
sub
add
xchg
sub
dec
int3
push
lcall
sub
and
dec
sahf
mov
cmp
and
xchg
in
jne
sarb
dec
call
xor
and
nop
xor
lret
lret
cltd
pop
and
jbe
xchg
adc
leave
and
push
sbb
int
negl
jno
in
add
xchg
sub
sbb
jns
aad
das
xlat
mov
int
add
sub
pop
repnz
sbbb
dec
add
rcrl
ja
pop
sub
or
das
jle
pop
ror
jo
nop
cmp
mov
sar
and
push
lret
lahf
mov
sbb
pop
jnp
add
aaa
xchg
pop
cmpsb
jne
sbb
xchg
sub
into
lret
loope
or
ficomps
mov
mov
sbb
pop
jbe
mov
jnp
int
cli
dec
in
inc
sbb
lahf
sub
das
mov
xchg
js
pusha
pusha
insb
pusha
pop
pushf
or
lret
ds
cli
lods
cmpsl
ss
mov
js
imul
push
addl
mov
imul
movsb
mov
xchg
mov
cs
mov
dec
xor
adc
jae
or
push
xchg
sub
jle
sbb
mov
and
sbb
xor
or
stos
mov
and
repnz
stos
push
insb
leave
test
orl
and
jge
push
fwait
push
sbb
adc
push
popf
sub
lods
jge
nop
outsb
bound
movb
lcall
dec
call
push
dec
lea
mov
mov
xchg
fcomip
sbb
ja
cld
pusha
arpl
stc
inc
push
push
repnz
push
mov
mov
mov
add
test
daa
gs
daa
xchg
out
stos
sbb
repnz
sbb
pop
mov
arpl
int3
mov
pushf
push
or
and
out
mov
inc
jno
cmp
sub
sti
push
dec
jnp
add
nop
cmp
movsb
jmp
bound
rcrb
xor
push
cmpsb
dec
sar
flds
aad
cmp
out
les
and
test
ja
mov
std
lret
clc
loopne
mov
cmp
insl
pushf
std
fnstcw
xor
push
sahf
in
sub
test
js
push
xorb
in
mov
sub
mov
das
out
cli
xchg
pop
lods
and
divb
ret
hlt
jmp
inc
addl
adcb
mov
jge
or
jp
in
addl
stos
iret
lcall
cmp
cmpb
out
or
sub
add
dec
sub
aad
xor
cmpsb
or
xlat
in
imul
iret
xchg
jno
fucomi
ss
jl
rolb
or
jp
xchg
sub
push
or
aaa
cs
addb
xchg
cli
inc
xchg
lret
fistpl
jo
hlt
mov
dec
fstps
jecxz
ss
scas
mov
push
imul
out
adc
sar
fs
in
in
outsb
dec
cmp
sahf
pop
adc
or
ficoml
shll
xor
sub
push
pop
jecxz
arpl
lock
ss
or
pop
mov
xorl
dec
push
movl
push
hlt
adc
push
mov
pusha
jns
xchg
pop
jnp
mov
inc
push
insl
arpl
gs
sub
mov
inc
test
push
ja
pushf
adc
cmp
sbb
cmp
add
lahf
sub
int
test
shrb
pusha
out
xlat
out
daa
sbb
xchg
out
hlt
sub
in
dec
lods
push
cmp
mov
mov
add
add
je
stc
push
adc
clc
xchg
pop
sti
arpl
or
add
nop
or
mov
pop
rcrl
imul
dec
in
out
rcrl
data16
jne
mov
mov
mov
mov
xchg
and
cmpsl
add
iret
clc
andb
push
into
js
iret
aad
inc
dec
iret
out
idivb
fucompp
loope
dec
push
add
cld
sub
es
push
popf
lock
mov
imul
and
insb
pop
fistpl
or
iret
or
lds
in
jmp
inc
lcall
ds
xbegin
notb
popa
cmp
rcl
jnp
repz
je
rorb
call
insb
aaa
mov
aas
mov
movsb
adc
mov
lret
cmp
gs
in
popa
xor
jne
roll
dec
jmp
dec
sar
enter
ficompl
add
shrl
inc
into
mov
popf
inc
and
dec
outsl
xor
call
jnp
dec
fs
or
jb
in
sub
leave
lcall
dec
adc
jge
xchg
clc
jns
in
jecxz
add
cmpsb
out
add
xchg
add
mov
into
inc
cli
hlt
and
jno
sahf
lods
jmp
ja
mov
push
pusha
mov
xor
shll
daa
divl
out
sbb
mov
movsb
leave
lcall
dec
lock
int3
mov
lock
mov
js
mov
ret
fbstp
stc
push
rcrl
push
out
sahf
bound
pusha
xlat
loop
loope
push
lods
imul
insb
scas
repnz
mov
sbb
lea
iret
js
xor
sbb
jp
cmpsl
enter
cltd
sub
je
sub
sbb
daa
lea
in
push
test
lcall
adc
adc
push
xor
scas
add
lds
mov
sub
mov
test
pop
adc
lds
lret
xor
dec
jge
or
push
dec
mov
push
inc
and
sub
pusha
sub
scas
cmpsb
lret
jmp
mov
xor
jnp
popf
push
xor
loop
mov
jl
ret
xchg
imul
xor
push
shlb
add
add
dec
jecxz
clc
jg
jno
inc
inc
fwait
adc
sbb
pop
xor
cmpsl
nop
pop
sahf
int
dec
scas
hlt
dec
sub
cmp
enter
sbb
mov
dec
sub
sub
fbld
or
add
lods
pop
lock
clc
and
rorb
lret
mov
repz
xor
sahf
mov
ljmp
out
shrb
cmp
iret
xchg
lea
ud0
lods
jbe
inc
lds
lods
sbb
mov
xchg
push
xor
pop
pop
pop
es
sbb
aaa
lret
lea
sub
ja
lods
f2xm1
cmp
mov
int
fwait
in
aad
repz
out
notl
pop
jge
sub
fwait
jl
test
xor
fidivs
fbstp
push
clc
ja
hlt
or
xchg
inc
pop
cmp
jmp
into
mov
fisttpl
repnz
xor
subl
jns
mov
sub
std
inc
adc
dec
insb
mov
imul
push
pop
adc
dec
mov
push
mov
call
inc
stos
das
shl
xor
cmp
sub
mov
push
flds
mov
dec
ja
cmpsl
jg
fisubs
inc
inc
test
pop
loop
or
hlt
aas
bound
test
lock
push
push
xor
decl
xchg
sub
sub
mov
sti
subl
mov
pop
test
test
mov
pop
int
lods
sub
js
out
cmpsb
sbb
jae
push
xor
fisubrs
cmc
sub
jmp
jp
mov
insb
popf
or
lea
fadd
sbb
cld
add
aam
js
aaa
imulb
jmp
dec
mov
es
lahf
outsl
cmp
mov
shl
in
addr16
fildll
xchg
pop
xchg
push
loope
sub
mov
xorl
dec
rorb
faddl
cmp
pop
loope
mov
push
dec
lods
dec
lret
or
xlat
xchg
inc
hlt
cltd
pop
shl
in
xchg
imul
inc
cmp
and
jle
mov
add
loop
cmp
add
mov
sub
inc
and
ret
jl
mov
clc
jl
aam
dec
inc
mov
xor
lea
and
in
sub
dec
push
xor
mov
into
jae
xchg
adc
jno
or
jg
sahf
sbb
and
inc
mov
push
inc
and
mov
fistps
out
movsb
cmpb
outsl
test
orb
mov
out
mul
push
push
imul
inc
xchg
testb
xor
push
xlat
ljmp
cmpsl
mov
bound
clc
mov
popa
sub
les
sub
lods
adc
dec
outsb
sbb
mov
inc
jno
mull
jbe
xor
dec
out
xlat
sbb
ja
fildl
imul
mov
lahf
aad
outsb
shrl
in
call
sub
add
aas
arpl
movsl
jge
push
lods
std
loope
icebp
in
iret
dec
sti
mov
ja
cmc
lods
in
out
enter
daa
mov
ficomps
es
mul
adc
jae
fs
add
out
int
insb
dec
mov
mov
push
mov
mov
push
mov
adc
aad
add
sar
xchg
mov
insl
inc
ds
lret
sbb
mov
adc
iret
daa
xorl
shrb
xor
fnstenv
insl
push
les
scas
lret
xchg
sbb
shlb
jmp
cmp
xor
in
cmp
sub
outsb
jge
shrl
or
mov
popl
insl
fisubs
fidivrl
dec
je
jae
sub
xor
fsubs
and
mov
mov
cmpsb
cmp
js
or
xor
imul
push
clc
sub
lahf
push
mov
jl
or
push
or
lock
scas
pop
inc
daa
imul
je
daa
int3
sbb
fwait
sbb
pop
lret
lock
mov
in
jmp
xchg
test
stos
pusha
dec
xor
popa
adc
cmpsl
shrb
lret
stc
icebp
shr
lret
js
popf
jne
jae
gs
in
cs
mov
sbb
pop
dec
shll
sbb
push
jo
push
adc
jge
or
adc
or
or
shr
iret
call
xchg
push
outsb
xchg
dec
jmp
sbb
fsubrl
xor
or
cli
push
sbb
fldcw
fnsave
fcomps
js
ljmp
xor
or
fnstsw
aas
fcoms
subb
xlat
mov
pop
mov
or
arpl
push
xor
xor
push
cmc
es
pop
shl
add
sbb
outsb
fsts
sbb
or
xchg
sbbl
lret
sub
imul
fidivs
mov
mov
mov
xor
dec
or
out
lock
xor
aaa
fnstcw
pop
aaa
scas
js
lret
sbb
or
cwtl
stos
ljmp
jb
scas
js
jp
out
dec
xor
mov
or
push
mov
insb
iret
xchg
dec
pop
pop
inc
jno
pushl
hlt
mov
fcmove
and
lret
je
jl
inc
adc
jae
int
cmp
sub
push
popa
dec
int
iret
add
les
xchg
xlat
mov
sub
test
dec
daa
push
fcoml
inc
shrb
mov
negl
xchg
stc
repz
out
mov
outsl
das
test
pop
je
sbb
and
mov
mov
mov
push
dec
leave
sbb
sbb
push
sub
shll
outsl
sub
imul
push
adc
and
jo
xor
jb
in
cwtl
out
cwtl
xorl
jnp
test
stos
mov
dec
xchg
jne
fisttpl
add
out
test
out
testb
nop
sbb
mul
movsl
imul
std
jle
je
sub
fs
inc
jge
sub
and
inc
sahf
push
adc
cs
jns
bound
sbb
in
sbb
scas
jmp
pushf
scas
imul
outsb
jle
data16
mov
inc
push
inc
inc
enter
in
mov
lock
mov
imul
or
cmp
fiaddl
lret
add
andb
xor
sub
stc
mov
adc
adc
mov
sbb
add
jmp
mov
js
add
stc
sub
adc
xor
push
test
jne
insb
repnz
xchg
movswl
outsb
xor
push
addr16
add
xor
pop
xorb
in
jbe
insl
aad
jmp
dec
faddl
fcmove
std
rcrb
cmp
xor
jmp
icebp
or
mov
aad
mov
leave
jle
jmp
arpl
lods
stos
jl
xchg
pop
cmpl
call
mov
sbb
xor
iret
out
xor
cld
bound
push
or
rcrb
jmp
outsl
das
inc
dec
sbb
sbb
popf
mov
test
sbb
in
xchg
sub
push
dec
adc
sbbb
sbb
mov
cmpb
enter
jae
fmulp
jns
mov
mov
cmp
and
dec
lret
sahf
or
mov
orl
je
movsb
mov
push
popf
mov
mov
fsubrp
mov
jge
iret
repz
out
insb
shrl
push
and
sbb
xchg
in
jo
cmp
int3
inc
dec
and
pop
inc
testl
stos
cmpsb
test
sub
pop
sbb
jmp
xor
dec
lret
jmp
mov
xor
xor
pop
mov
ficomps
add
inc
data16
sahf
dec
inc
adc
add
shll
adc
pop
out
mov
hlt
adc
xchg
leave
cmp
dec
shl
sbb
shll
mov
sbb
aam
sub
stos
cmp
cmp
jo
movntps
inc
push
push
push
jo
mov
sbb
jp
repnz
enter
fidivs
mov
push
dec
jbe
in
and
sbb
jecxz
dec
xor
rorl
xchg
sub
lret
xor
fnstcw
sbb
dec
into
out
and
add
and
pop
xchg
stos
lret
jno
inc
mov
es
outsb
imulb
pushf
inc
insb
cwtl
xor
dec
and
lea
or
sub
or
dec
pusha
mov
ljmp
sub
cmp
aaa
ljmp
pop
or
pop
fidivrs
push
mov
fsubrl
inc
mov
ljmp
lret
or
int3
into
push
mov
mov
jno
sbb
int3
cmp
jns
xor
sub
sub
jecxz
lea
and
cmp
bnd
or
and
xor
fmuls
xchg
frstor
sub
ja
or
loopne
cmp
dec
outsb
push
inc
mov
imul
loope
adc
xor
fistpl
ljmp
inc
xchg
std
lret
or
in
dec
lds
mov
cmp
shlb
loop
roll
xchg
adc
jmp
dec
loopne
mov
mov
movsb
insl
lret
lahf
lret
sub
pop
shrd
nop
jo
xor
sbb
push
cltd
aam
push
add
xor
outsb
aam
lock
in
mov
xor
sbb
jge
inc
cmp
sbb
in
loop
loope
pop
or
or
mov
or
xchg
into
mov
sbb
and
sbb
jne
loope
mov
jg
mov
mov
add
insl
xchg
sarb
push
adc
xor
sbb
rorb
or
ljmp
jl
sbb
xchg
inc
sub
mov
xorl
stos
mov
and
test
sub
sub
adc
add
rcll
rcrb
and
adc
cmp
sub
mov
dec
xchg
inc
dec
divb
push
xchg
cltd
xchg
clc
into
jo
in
std
outsl
js
icebp
sbb
rorb
xchg
adc
lret
cmp
add
mov
mov
add
xchg
scas
mov
lods
insl
xchg
shll
cmpsb
lret
shl
xlat
cs
ds
adc
ds
loopne
lret
pop
jne
loope
mov
sub
sbbb
pusha
dec
push
push
out
lods
inc
push
mov
mov
pushf
jae
pop
sbb
lret
test
int
testl
xchg
cmp
xor
test
sub
clc
popf
cmpsb
sbb
dec
popa
test
mov
and
jmp
jno
pop
sub
imul
data16
and
outsl
aad
xlat
mov
fistl
popf
scas
and
into
jb
lods
cmp
test
insb
pusha
push
jno
mov
cmpsl
sub
daa
jecxz
lea
jecxz
pop
push
sarb
fistpll
push
ds
sub
sub
inc
cmpsb
data16
data16
iret
mov
mov
adc
fldl
cmp
sbb
das
jmp
mov
lds
bound
orb
jno
jmp
stos
add
ds
hlt
pushf
inc
idivb
loopne
pushf
loop
les
arpl
inc
add
andl
push
loope
mov
sub
js
dec
sub
sub
orl
aam
sub
cld
lahf
dec
xchg
not
mov
xchg
andl
jnp
es
sbb
shlb
push
jne
loope
mov
sub
or
cltd
out
ucomiss
mov
jmp
push
adc
push
es
jmp
aaa
mov
clc
cld
dec
loop
adc
xor
hlt
jno
bound
mov
xlat
xchg
clc
fs
test
sbb
mov
js
jecxz
popf
and
fistpl
mov
cmpsb
mov
nop
jl
pop
fcmovbe
xchg
addr16
and
subb
cmpl
jns
js
push
cmpb
or
and
stos
das
sbb
push
jle
orb
xor
push
mov
jae
lret
push
fwait
xchg
dec
std
aas
daa
daa
sbb
jnp
sti
daa
out
mulb
mov
xchg
add
sub
add
sbb
ret
aaa
dec
dec
xchg
clc
xor
lcall
aaa
inc
arpl
ljmp
dec
jmp
out
pop
xchg
lahf
nop
andl
imul
stos
mov
adc
jo
push
ss
or
das
enter
hlt
pop
pop
and
enter
cmp
mov
sbb
mov
push
cmpsb
ss
or
loope
mov
and
movsb
loop
or
in
sbb
xchg
inc
mov
or
push
idivl
mov
fildll
loopne
movsb
mov
in
mov
inc
jge
lds
clc
mov
mov
mov
les
sarb
mov
xchg
pop
loopne
or
das
jne
lret
adc
xor
adc
mov
add
adc
sub
shlb
xchg
cmpsb
push
sbbl
test
and
movsb
test
mov
ret
sbb
loop
test
cli
jbe
add
jns
repnz
xor
and
mov
shll
and
mov
jge
lret
or
xchg
fistpl
cwtl
xchg
cwtl
into
pusha
lods
lret
jo
hlt
pop
call
movsb
bound
lahf
inc
aaa
cmp
cmp
test
xor
adc
sub
sub
sbb
add
repz
push
leave
cmpsb
cmpsb
xchg
inc
adc
dec
mov
dec
cmpsl
pushf
push
adc
push
jo
jg
lods
add
or
xchg
sti
push
std
sbb
bound
lds
xor
add
sbb
into
jmp
add
fsubrs
test
adc
popa
stos
aas
mov
cmpsl
bswap
mov
xchg
push
movsb
test
in
push
into
ret
pop
cmp
inc
dec
subl
xchg
push
pop
es
vphaddubd
pop
divb
clc
pop
insl
lret
add
ret
push
int3
outsl
inc
aaa
jmp
inc
push
push
loop
xor
add
mov
adc
push
cmp
adc
fldt
fstpt
arpl
jnp
outsb
pop
clc
imul
or
push
sbb
jnp
repz
xor
sbb
push
mov
adc
cli
int
xor
lock
fadd
shl
and
fmuls
mov
dec
adc
sub
test
fidivl
or
js
cmp
sub
fwait
and
cmp
xor
enter
add
stos
into
xor
mov
sbb
iret
cmc
inc
inc
or
les
dec
inc
adc
sahf
jbe
pop
or
int
and
lret
imul
test
cld
into
mov
in
addr16
out
out
pop
int
sbb
or
pushf
cmp
loopne
mov
in
sbb
jbe
stc
push
or
sub
rolb
gs
repnz
sbb
das
cmp
pop
lods
jl
in
jno
test
clc
jecxz
mov
jl
push
outsl
adc
cld
xadd
repz
clc
fildl
ss
dec
sbb
jge
cltd
mov
ret
popa
dec
lock
imul
sbb
xchg
into
shlb
sub
or
and
addr16
int
lock
shl
mov
lock
lahf
add
sbb
aam
pop
inc
rcrb
jmp
js
pop
daa
popf
pop
adc
test
lea
enter
sub
out
insl
movsl
subb
in
dec
sub
fcmove
movsb
sahf
fldt
mov
mov
inc
iret
arpl
push
dec
inc
cli
add
aad
out
xchg
add
ja
inc
adcb
fstpl
adc
stos
xchg
icebp
mov
shrl
stos
sub
sub
xor
mov
outsl
add
popf
fsubl
sbb
add
push
std
aam
xchg
jl
lahf
mov
pop
lret
mov
jl
mov
loop
push
sbb
test
leave
dec
cmc
xor
add
rclb
fmull
or
mov
aam
mov
movsb
insb
mov
test
lcall
les
popa
pop
xchg
cld
pop
fisttpl
cmp
out
dec
popa
mov
and
cmp
aaa
leave
popf
out
add
mov
in
mov
mov
jb
dec
xchg
dec
shrb
dec
clc
movsb
mov
nop
jno
arpl
les
movsl
loope
jmp
sbb
ret
shlb
adc
jle
adc
push
inc
lods
jl
push
fidivrs
push
sbb
test
popa
xchg
fnstenv
stos
sbb
pop
and
call
sub
dec
pop
push
or
cmp
mov
bswap
mov
adc
jnp
mov
scas
or
inc
mov
push
cmc
loopne
xlat
test
jae
mov
addr16
das
ret
int3
outsl
xor
inc
imul
and
xchg
pop
xor
movsb
push
bnd
insl
int3
jns
jp
dec
popf
cmp
mov
loop
sti
sub
pop
ss
mov
inc
adc
out
pushf
adc
xchg
stos
inc
and
addr16
popf
add
mov
movsb
pop
fwait
jo
lret
sub
push
pop
adc
push
push
test
inc
in
cmp
xchg
jb
subl
mov
test
rorl
xlat
fcompl
xlat
faddl
lds
sbb
pushf
lcall
movsl
aaa
cmp
fisubl
jp
jno
mov
push
fcmove
loopne
adc
in
ret
sub
in
xor
lret
incb
cwtl
int
mov
push
dec
push
jp
xor
icebp
sbb
fdivs
add
leave
cs
mov
push
push
cmp
push
cmp
nop
ljmp
adc
adc
push
jno
out
scas
sub
jno
incl
pusha
dec
jge
out
ret
add
mov
mov
aaa
mov
jecxz
pop
push
iret
fnstenv
loopne
repnz
mov
cmp
lock
sti
or
and
movsb
lods
mov
xor
jae
dec
mov
loope
sbb
das
pop
inc
aaa
pop
cmc
fisubrs
mov
mov
shll
call
pop
mov
sbb
pop
cmp
sub
icebp
pushl
xlat
test
rorl
lcall
mov
sub
lret
in
add
loop
mov
push
jo
pushf
sahf
cwtl
scas
lods
inc
clc
add
aam
mov
add
das
iret
lea
mov
into
popf
in
sbb
inc
dec
les
js
or
dec
aam
sbb
add
sub
mov
lds
mov
pop
lcall
filds
sbb
cmp
in
dec
jmp
adcl
stos
sbb
add
lock
bound
inc
xor
movsb
jno
xlat
lock
sub
stos
pop
in
leave
mov
arpl
jo
mov
add
sbb
mov
movsb
push
test
aaa
into
cmp
jp
mov
xchg
mov
jnp
pop
push
push
aam
and
lock
mov
sub
popa
adc
mov
test
fisubrl
cli
imul
jp
inc
push
aad
loope
pop
inc
shll
push
push
ss
inc
mov
outsl
or
pop
adc
hlt
movsl
ret
dec
mov
shrb
ja
leave
or
fildll
or
fsubs
dec
mov
dec
cmc
mov
repz
je
roll
aaa
test
imul
enter
mov
and
mov
gs
outsb
xor
icebp
jns
pop
add
xchg
cmp
sahf
aam
dec
mov
pushf
fdivrp
inc
xor
loop
lds
ret
xor
in
stos
test
jmp
popa
cmp
lret
mov
outsl
jns
ror
xor
fldl
mov
adc
jmp
pop
sub
ljmp
xor
xor
loop
mov
or
js
out
je
loopne
add
rcrb
repz
pop
jg
jns
ja
ljmp
dec
xchg
dec
inc
je
mov
mov
push
jbe
push
lea
cmp
xor
scas
and
jo
bound
in
stos
aaa
push
cs
jns
inc
loop
jne
mov
fistpl
js
jge
fwait
dec
jbe
dec
test
adcl
aas
or
fs
scas
rcrl
lret
jno
bnd
cld
popa
scas
lret
sub
push
call
sub
mov
sub
adc
popf
push
leave
imul
or
cmc
or
nop
in
pop
mov
cli
jge
int3
repnz
or
mov
and
push
js
push
xor
lea
cmpsb
lods
sub
hlt
loope
mov
cmp
outsb
ss
mov
xchg
cmp
les
adc
nop
adc
inc
pop
cmp
fdivrl
mov
icebp
std
cmpsb
cli
sub
fsts
mov
sbb
jno
push
sub
or
push
scas
in
or
jecxz
incb
jae
adc
cmp
xchg
jg
in
pop
add
sub
add
fldcw
mov
adc
mov
add
mov
xchg
repz
pop
out
mov
lods
pop
xchg
movsb
pop
loopne
fistpl
pop
data16
push
or
ficompl
mov
sub
xor
jns
outsb
lcall
fcmovne
fbstp
cmpb
pop
xor
mov
lret
das
pop
test
sti
mov
sub
xchg
into
in
call
and
das
ret
es
or
push
cmpsl
sbb
pop
xchg
push
int
lret
push
mov
lds
adc
pusha
pushf
sub
data16
leave
push
lahf
jecxz
mov
shl
pop
in
mov
pop
fwait
mov
and
or
mov
or
jb
nop
fidivs
pop
sbb
subl
cmp
jecxz
pop
add
xchg
inc
subl
jne
arpl
vmwrite
cmp
cs
pop
or
repz
testb
dec
or
dec
add
pop
xor
out
mov
mov
or
cmpsl
aad
push
shll
push
shll
pcmpgtw
rolb
stc
das
enter
out
pop
inc
adc
pop
push
inc
mov
daa
dec
test
dec
mov
test
lods
xorl
in
fildll
jge
arpl
imul
mov
push
cmpsb
outsl
lahf
fistpl
pop
mov
push
dec
pcmpgtd
mov
sub
push
in
cmpsl
int
mov
cmp
pop
sbb
sbb
sub
cli
daa
fistpll
clc
gs
and
shrb
out
sahf
add
loope
dec
shll
leave
sbb
fldlg2
dec
fnstsw
fldenv
sbb
out
std
pusha
pusha
jne
push
pusha
lock
dec
inc
scas
inc
mov
lds
mov
addr16
xor
fisttps
sahf
cwtl
les
xor
cmp
xlat
mov
add
hlt
mov
add
daa
stos
int
jo
xchg
data16
incb
push
cltd
imul
jl
push
stos
outsl
sbb
pop
test
push
mov
leave
or
rcrb
inc
jnp
mov
ja
fmull
movsb
xor
dec
push
xor
xchg
adc
hlt
sub
push
adc
imul
bound
sub
loop
faddl
cmp
jne
les
jg
call
in
cmp
mov
mov
insb
les
outsb
es
into
sub
inc
loop
and
scas
lahf
movsb
mov
test
fists
arpl
add
xchg
fdivr
push
xchg
leave
pop
sbb
inc
add
dec
sub
cmp
mov
push
stos
xchg
enter
rcll
and
xchg
sub
inc
cmc
in
xor
sub
in
adc
clc
int3
xchg
add
in
jne
jo
xor
xor
pop
cwtl
out
nop
in
push
int
insl
scas
pop
int3
ja
cld
dec
add
je,pt
imul
ljmp
mov
xor
xchg
out
pop
xor
aam
add
out
out
stos
sub
push
ret
adc
jns
jbe
repz
xor
pop
out
in
xchg
mov
mov
xor
scas
fadds
pop
jecxz
adcl
xchg
sbb
xchg
mov
xor
stos
sbb
and
fs
jge
test
xchg
sbb
mov
sbbl
xor
lods
pop
mov
or
mov
idivl
xor
cmp
shrb
out
pop
lods
pop
jbe
cmp
cltd
xchg
or
pushf
and
mull
ficomps
lods
push
add
pusha
outsb
adc
push
iret
das
pop
push
insl
pop
add
lods
pop
xchg
xor
lcall
mov
out
mov
imul
movzwl
mov
lock
jle
xlat
push
or
enter
xor
xor
lea
fnsave
fdiv
inc
aas
push
xchg
mov
inc
xor
iret
fistpll
mov
out
pop
hlt
pop
xlat
loopne
daa
push
xor
adc
mov
out
push
les
movsl
mov
hlt
aam
pop
mov
xchg
imul
push
push
out
es
pop
mov
enter
adc
nop
mul
mov
int
xor
push
inc
std
inc
add
in
xor
mov
or
dec
xor
xor
xor
xor
shll
je
pop
movsb
pop
dec
pop
sub
jp
dec
jl
sub
adc
dec
shrl
das
ret
xchg
mov
and
dec
pushf
jge
pop
add
movsl
sub
js
mov
push
inc
sub
fsubrp
movsb
sbb
push
loopne
fcmovnbe
dec
popf
das
push
cltd
pop
mov
repz
roll
jbe
ficomps
jnp
fistpl
mov
stc
push
cmc
dec
rcrb
pop
cs
fmulp
imul
jne
test
xchg
mov
xchg
mov
frndint
pop
aam
jnp
adc
pop
data16
je
pop
fldl
shrl
fwait
test
in
lahf
mov
popf
sbb
xor
mov
mov
mov
xchg
aad
ret
test
push
je
cmc
dec
cmpsl
sub
dec
orb
mov
cmpsl
dec
insl
into
cmp
adc
into
push
fwait
outsb
cld
ds
dec
out
mov
mov
outsl
sub
or
jl
pop
aam
sub
ljmp
mov
fstsw
jnp
lea
mov
jns
inc
mov
int
mov
add
jne
cs
push
les
pop
out
sub
xor
shrl
test
xchg
out
aam
daa
xor
sub
sub
das
pop
imul
inc
push
mov
cmpsl
cmpb
cmpsl
or
adc
and
sub
imul
sbb
xor
sbb
imul
cmp
sbb
cmc
test
jge
push
arpl
and
test
int3
outsl
lea
decb
jg
push
cmpsb
movsl
sbb
mov
insl
mov
rcrb
adc
insb
mov
or
jns
in
xchg
mov
mov
bound
adc
repz
pop
and
sub
mov
adc
rclb
stc
mov
pop
stc
push
mov
js
jg
and
sub
sub
lock
shlb
mov
push
mov
xchg
outsb
es
add
pop
test
stc
xor
sbb
mov
mov
cmp
inc
and
ret
mov
lcall
cwtl
into
mov
pushf
xorb
dec
jecxz,pn
inc
les
jl
xchg
imul
lahf
pop
in
enter
mov
shlb
push
push
add
add
sbb
mov
fidivs
xor
mov
and
or
sub
bound
ret
hlt
loop
aas
mov
enter
fs
pop
or
push
cmp
xchg
stc
mov
or
test
divb
orl
fistl
mov
test
roll
out
mov
pusha
fnsave
fwait
push
cmc
mov
mov
mov
add
pop
mov
xchg
sub
push
cli
in
inc
mov
loopne
mov
pop
fcoml
fbstp
movsl
add
xor
dec
cmp
rcrl
cld
or
inc
dec
les
out
hlt
testl
rolb
mov
in
adc
cmp
or
sub
rolb
xor
movl
movsb
or
or
hlt
lret
or
mov
sub
mov
das
ds
addr16
push
xlat
das
sbb
stos
icebp
faddp
cwtl
mov
cmc
test
xchg
ja
filds
fcmovnu
fs
sbb
mov
fisttps
jl
dec
mov
sub
cwtl
sti
sbb
xor
adc
mov
cmpsl
fcmovnu
jmp
dec
insb
sbb
sbb
negl
jge
xor
mov
out
sar
iret
nop
push
sti
or
inc
es
mov
cmpsl
movsb
xchg
icebp
push
scas
or
cmpsb
sub
push
xchg
sub
and
je
repz
pop
xor
push
pushw
cmp
je
inc
stos
lret
testb
jg
pop
add
pop
ja
or
dec
cmpsb
repnz
jg
mov
out
sti
cmp
cmp
pusha
mov
scas
sub
nop
push
jne
idivl
push
out
repz
or
xchg
je
mov
leave
jno
mov
xchg
push
cmpsb
push
mov
and
inc
fnstenv
jmp
mov
dec
jge
les
or
push
dec
stos
out
jmp
int3
mov
popa
outsl
dec
mov
pop
add
cmpsl
inc
dec
test
ret
hlt
dec
xchg
xchg
or
pop
scas
enter
xor
cmp
sbb
lret
pop
cmp
push
push
lret
mov
pushf
inc
movsl
mov
push
jg
xchg
ret
xchg
bound
pop
xlat
adc
hlt
int
add
inc
add
adc
xor
test
fnstsw
aad
pusha
ljmp
cmp
ret
pop
outsl
mov
sub
mov
lds
adc
xchg
xor
aad
push
flds
call
arpl
inc
pop
xchg
mov
xchg
xor
inc
dec
sub
mov
sbb
or
xlat
shrl
mov
sub
nop
loopne
mov
dec
test
lods
push
ret
push
jno
rclb
lods
cli
push
push
xor
push
jbe
orb
add
xchg
adcl
imul
loop
lcall
sarb
lods
mov
push
push
mov
jl
mov
adc
mov
divb
dec
in
pop
or
cmc
decl
mov
fisttpl
jg
add
sahf
pushf
lods
lret
popa
fcmovbe
nop
pop
stos
fbld
out
popa
push
repnz
xchg
hlt
rorb
mov
mov
dec
push
jg
xchg
fcomps
cmpsl
dec
outsl
in
or
sub
dec
pop
inc
sbb
add
mov
psubusw
push
aaa
pop
and
xchg
ja
hlt
adc
push
data16
sub
mov
out
hlt
leave
sbb
add
mov
daa
fxch
loopne
out
adc
out
cmp
sti
rorl
jae
xchg
dec
pop
push
mov
xlat
xchg
or
sbb
cltd
jno
and
pop
cli
repnz
mov
mov
loopne
sub
mov
imul
pop
push
nop
cwtl
xchg
lret
fidivs
xor
arpl
test
sti
push
iret
jae
xor
add
out
push
sbb
les
pop
mov
jl
xchg
push
imul
jl
mov
mov
pop
mov
xchg
sub
jns
loope
dec
lods
cltd
or
mov
and
rcll
stos
insl
and
enter
lret
xchg
lods
push
loop
adc
orl
xchg
xor
fidivs
push
mov
push
pop
lcall
adcb
sub
add
aaa
ds
gs
dec
mov
test
arpl
je
mov
adc
fidivrl
sub
es
movsb
outsl
mov
gs
push
loop
inc
sbb
mov
xor
sub
add
cmc
test
and
adcb
pop
sbb
test
mov
cltd
andb
cmpsl
jb
push
or
leave
dec
fdivrl
loop
cmp
xchg
hlt
jmp
es
arpl
xchg
mov
sub
clc
lods
sub
jne
mov
push
mov
jnp
jle
pop
push
mov
stos
cmpsl
sub
cmp
adc
sub
mov
jecxz
fs
add
or
inc
pop
dec
aaa
addr16
cmp
dec
pop
test
push
mov
fildll
lret
xor
jnp
sti
rorb
scas
push
xchg
adc
jns
push
or
add
jecxz
xchg
out
arpl
or
mov
cmp
aas
and
jmp
pop
mov
dec
lea
test
lcall
sti
ja
adc
cld
dec
clc
pop
mov
jge
stos
out
push
jg
dec
pop
or
pop
test
jns
sub
mov
pushf
stos
xlat
push
stos
imul
cvttps2pi
mov
inc
jbe
pop
test
ja
dec
xchg
pop
cs
xor
xchg
sbb
das
in
jecxz
fdivrl
out
iret
xchg
scas
adc
andps
loope
mov
ret
xchg
xorl
fs
jge
lock
and
push
out
jl
leave
arpl
or
xchg
fisttpll
outsl
jo
idivl
out
sub
adc
and
fdivl
jno
pusha
xchg
divl
mov
mov
loope
xchg
mov
xchg
sti
psllw
comiss
insb
cwtl
icebp
mov
je
xor
fisubrs
clc
pop
dec
rol
out
fs
sbb
mov
ja
jo
xlat
lret
xor
add
or
cld
pushf
mov
push
push
push
xor
repz
loop
sti
mov
outsl
and
jmp
or
in
incl
xchg
or
pusha
xor
bound
dec
jno
mov
sub
in
dec
lret
jmp
popa
xor
cmc
ja
push
sbb
push
jbe
jp
adc
out
inc
dec
dec
aas
test
cmpsb
aas
adc
repnz
jecxz
in
aas
arpl
mulb
iret
pop
scas
outsb
maxps
aaa
movsb
pop
in
cmp
in
pop
enter
xchg
rolb
xchg
int
sub
jns
push
dec
cmp
mov
out
aas
inc
repz
jns
lret
xchg
or
xlat
adc
mov
dec
push
jnp
pop
int3
mov
mov
push
xchg
mov
jg
lods
sub
pusha
popf
lahf
xor
out
mov
xor
jns
fistpl
out
js
mov
fstpl
fldcw
mov
push
clc
dec
fnsave
outsl
push
popf
mov
sbb
inc
inc
and
ss
mov
outsb
je
fwait
aad
es
addr16
push
pop
stc
push
fdivrl
lret
out
dec
or
push
call
into
push
ror
outsl
and
dec
fidivs
daa
jecxz
ljmp
mov
aad
ljmp
add
das
xchg
pop
lock
or
inc
iret
xorb
adc
and
add
sub
lods
outsl
test
cmp
cmp
jg
enter
mov
stc
pusha
inc
mov
xor
jo
xor
jecxz
inc
lds
stc
shlb
out
in
ficoms
cld
cli
xchg
fsubr
xlat
xor
xor
jo
mov
movb
aaa
xlat
add
or
into
lods
inc
adcl
dec
add
lea
loope
sbb
mov
push
cld
sbb
xor
jle
or
jbe
xchg
je
scas
xchg
sbb
in
nop
imul
xchg
fwait
jo
gs
xor
push
addl
or
addl
sahf
pop
test
aaa
pop
pop
daa
loop
lods
add
xchg
cmp
and
lcall
int
mov
xchg
sbb
inc
incl
jns
stos
jns
lahf
sub
movsl
sbb
mov
cwtl
sub
aaa
shrb
sub
dec
call
fcom
cmp
or
movsb
mov
mov
dec
out
or
dec
fisttps
dec
xor
cwtl
and
dec
and
mov
enter
and
sub
jmp
pop
inc
test
cli
aas
or
xchg
mov
xchg
stos
lods
stc
mov
xchg
outsb
lahf
stc
xchg
add
xchg
xchg
and
sbbl
mov
lret
test
dec
call
xchg
push
mov
loope
pop
std
sbb
sbb
lea
shl
lea
out
out
sbb
test
addr16
jnp
mov
inc
mov
adc
dec
inc
sub
pop
push
mov
xor
cmpsl
into
loopne
in
pop
mov
or
jg,pn
dec
es
cli
and
imul
mov
push
outsl
test
imul
pop
xchg
in
subb
and
jecxz
test
mov
push
pop
xchg
sbb
sbb
xchg
stos
mov
xor
sbb
dec
push
in
fldenv
in
rclb
mov
decb
xchg
lahf
cli
stos
hlt
repz
add
decl
loop
jb
push
mov
ds
mov
jle
jecxz
mov
inc
rorl
ja
cmc
in
decl
iret
jns
mov
and
lcall
subl
push
cmpsl
and
xchg
imul
dec
xchg
jg
jmp
pop
sub
sbb
or
ss
jp
mov
leave
mov
mov
ret
push
sub
mov
cltd
je
xlat
lcall
and
adcb
int3
pop
fsub
and
les
insl
sbb
push
dec
mov
pop
push
or
popf
mov
pop
test
xchg
pop
test
fcmovnb
insb
jnp
xchg
xorb
dec
sub
push
cmp
icebp
cmc
xor
jecxz
inc
mov
in
dec
std
call
lods
jae
negb
outsl
inc
cmp
addr16
jo
int
lret
sbb
js
test
ret
scas
push
xor
sbb
jecxz
mov
notl
jp
jecxz
mov
mov
pusha
xor
push
or
push
loopne
insl
mov
and
mov
mov
push
dec
xchg
mov
inc
std
testl
push
mov
sbb
cs
lds
add
jle
add
outsl
mov
mov
les
push
cltd
in
pop
jl
outsl
jge
mov
push
leave
xchg
xchg
dec
fcmovnu
test
mov
out
repnz
jl
mov
inc
mov
and
jo
sub
push
mov
mov
xchg
and
incl
int3
mov
punpckhwd
les
mov
pop
leave
fsubs
dec
movsb
out
xor
lea
mov
in
xlat
sub
jb
pop
cmc
mov
cmp
into
push
xchg
aam
or
push
ror
fs
sub
dec
xor
adc
in
adc
lds
cld
outsb
mov
in
sbb
mov
lods
dec
dec
mov
xor
test
jnp
push
insb
jge
lcall
cmp
xlat
xor
mov
add
inc
cmp
dec
xchg
incl
out
mov
inc
add
pushl
out
dec
mov
sti
push
fstpt
daa
idivl
lock
push
outsb
dec
or
pop
lods
sub
pusha
rcr
pusha
hlt
xor
mov
in
into
sbb
shrl
inc
mov
enter
cltd
cs
ja
add
lret
sub
dec
iret
pop
mov
dec
inc
sti
push
repz
addr16
xchg
cmpsb
jle
int
jge
add
ret
adc
les
outsb
jge
ljmp
iret
adcl
push
out
je
cmpb
rcrl
jbe
mov
pop
dec
cmpsb
pop
or
add
fdivl
inc
outsl
fs
ljmp
decl
cmpsb
push
hlt
pop
jecxz
add
cmp
pop
incb
ficomps
fdivs
push
pop
xor
cmc
seta
mov
cwtl
push
xor
push
inc
fsub
ss
and
or
sub
ds
pop
popa
mov
insl
inc
int
loope
into
xchg
mov
incl
icebp
adc
jae
imul
jo
jae
and
mov
ss
ja
ror
stos
and
idivb
mov
dec
movsl
sti
jae
dec
imul
sbb
rorb
lea
insb
or
and
push
daa
int3
mov
call
outsl
loop
shlb
adc
sbb
lock
adc
xchg
js
out
mov
and
aam
dec
jno
pop
xchg
scas
leave
xchg
mov
in
mov
cli
or
lods
adc
pop
xchg
sub
xchg
pop
addl
lea
cmpsl
and
push
or
sbb
xor
adc
leave
lret
sub
rolb
and
push
jbe
cmp
jecxz
out
negl
addr16
shll
stos
mov
lea
jb
inc
popa
aad
adc
mov
push
stos
lock
popf
rep
mov
leave
xchg
pushf
pop
out
in
test
pop
sbb
xchg
inc
jge
push
pop
std
hlt
jg
push
enter
cmp
addr16
mov
jnp
ret
fiadds
jbe
jl
out
stc
or
pop
in
pop
sub
lds
mov
pop
lock
mov
mov
mov
add
lock
xor
fs
mov
sub
xchg
fucomp
insb
sti
or
hlt
shl
mov
stc
sub
pushf
in
ljmp
mov
dec
pop
fcoml
mov
sub
mov
jns
sub
pop
cmc
lcall
or
fistps
lds
shll
pop
or
cs
add
xor
scas
cmpsl
mov
adc
sub
jae
xchg
int
jns
jbe
jae
or
data16
orb
idivb
sub
adc
adc
adc
ja
scas
cli
filds
sbb
lcall
mov
test
mov
popa
fcompl
jge
lea
cmp
mov
xchg
cmp
mov
inc
nopl
add
xor
xchg
loop
rorb
sbb
mov
lret
imul
pop
mov
jae
mov
pop
in
test
rclb
pushf
neg
mov
loopne
inc
js
xlat
shll
inc
jno
mov
addr16
data16
mov
inc
call
fdiv
shlb
or
outsl
adc
dec
pop
sahf
data16
mov
jl
lcall
insb
dec
mov
lock
int
dec
sbb
push
scas
shrb
cmp
mov
scas
push
xchg
mov
mov
inc
iret
jae
fiadds
hlt
xlat
leave
xor
cmpsl
mov
xchg
push
pushf
das
xlat
repz
mov
rcll
daa
adc
push
enter
xorl
pushf
xor
sbb
mov
pop
jge
loop
jne
jno
xlat
stos
out
aas
inc
push
ficompl
cmp
or
std
imul
lods
fisttpl
fucomi
cmp
adc
adcl
xchg
aas
call
adc
int
ret
xlat
cltd
imul
jae
in
lcall
mov
push
pop
pop
dec
fadds
xchg
fucompp
or
aad
sbb
out
loop
pop
pop
mov
movsb
jl,pt
push
jb
out
stc
call
fsubl
xor
orl
jge
loop
and
pop
fldcw
sub
mov
sbb
jae
in
or
movsl
mov
push
bound
cmp
sub
test
push
sbb
add
pop
jp
fmul
adc
je
and
addr16
filds
jb
xchg
lock
mov
and
sub
or
mov
cmp
or
out
and
mov
xlat
push
int
jns
test
cld
jnp
jecxz
xchg
je
sbb
push
fisttpll
jmp
add
pop
int3
xchg
flds
in
fwait
stos
call
gs
leave
ljmp
add
stos
mov
push
push
scas
enter
in
cmp
mov
ds
hlt
repnz
daa
cmpsb
dec
fisubrs
jno
das
mov
sub
data16
push
imul
stos
add
pushf
cmpsb
jno
pushf
stos
and
test
jne
mov
jne
stos
push
or
mov
cs
inc
and
xorl
and
adc
out
inc
arpl
lock
cmp
dec
flds
andb
clc
lods
mov
out
jno
imul
test
xor
push
pop
lods
cmpsl
pop
jp
mov
mov
cmc
std
addb
adc
or
outsl
sti
or
pop
xchg
stos
add
imul
stos
das
test
mov
xlat
shll
fwait
shlb
and
add
mov
sti
dec
pushf
jb
xorl
cmc
stos
aaa
cwtl
jge
into
mov
shr
neg
std
rcrb
push
mov
inc
leave
adc
sbb
cmpsb
xor
out
pushf
dec
cs
mov
lock
pop
repz
xchg
dec
test
jge
sbb
dec
in
test
stc
into
in
dec
incl
std
into
and
mov
inc
pop
cs
out
add
fists
daa
mov
dec
js
enter
daa
push
fs
ljmp
sub
push
ficomps
insl
jb
lods
and
scas
mov
cmp
cs
lea
test
nop
loopne
hlt
mov
stc
aaa
mov
adc
stos
xchg
jl
insl
inc
pop
dec
or
iret
outsb
imul
xchg
hlt
pop
insl
dec
sub
mov
mov
add
scas
orb
sbb
xchg
inc
mov
xchg
mov
jbe
add
imul
and
cmc
sbb
adc
mov
dec
scas
fiadds
inc
or
inc
dec
mov
mov
scas
sahf
or
das
jl
push
rcrb
rorl
movsb
test
daa
inc
lea
jne
or
sbb
je
xorb
test
jbe
jne
xor
cmpsl
jae
in
mov
push
or
popf
sbb
sub
sub
add
or
icebp
das
int3
push
add
push
mov
sbb
xchg
push
xor
lcall
mov
popa
iret
push
test
addr16
sbb
xchg
sub
inc
arpl
shlb
aam
sbb
adc
add
jb
das
xorl
test
insb
sub
mov
stc
xor
stc
jmp
imul
sub
fs
xor
push
mov
test
mov
lods
cmp
or
jge
cltd
ret
and
loope
push
popa
or
add
shrb
add
xchg
aas
lahf
and
stos
mov
dec
sub
dec
xor
mov
pop
cmp
test
and
shlb
sbb
push
lods
sub
inc
dec
or
cmp
adc
pusha
push
inc
arpl
mov
int
scas
sbb
scas
shrl
dec
lahf
lock
aad
dec
in
xor
cs
adc
jle
mov
movsb
add
jl
fsubrl
fwait
xor
add
lret
mov
mov
mov
dec
push
cs
data16
in
jmp
out
imul
xchg
into
push
fnsave
mov
pop
popa
and
jns
and
dec
fbld
inc
outsl
outsb
daa
outsl
hlt
sbb
fs
xlat
mov
ss
mov
ss
jne
aad
clc
outsb
mov
je
mov
in
jae
xchg
hlt
xchg
mov
adc
mov
and
scas
cwtl
movb
jmp
inc
dec
xchg
dec
enter
stc
and
cwtl
sbb
outsb
cmp
mov
pop
sub
int3
loop
mov
shll
mov
outsb
xor
sub
push
loopne
rorl
jmp
sub
fwait
mov
subb
popa
dec
sbb
pop
and
dec
test
in
cli
loope
repnz
ficompl
jl
imul
xor
mov
pop
pusha
enter
jnp
cmpsl
cmpsb
insb
inc
in
mov
clc
insl
adc
fcoml
pop
pusha
sbb
mov
cmp
sti
pushf
pop
mov
adcb
enter
orl
dec
jl
sub
pop
dec
push
push
popa
std
pop
push
std
fmull
lret
cmc
dec
sub
pop
pushf
jl
dec
mov
add
ret
stos
pop
xchg
xchg
lds
rep
add
mov
mov
cmpsb
adc
mov
pop
lret
sbb
mov
das
dec
test
pop
and
mov
ds
or
lea
pop
mov
rol
mov
fnstsw
inc
xchg
mov
dec
testb
and
in
pop
sbb
pop
dec
shl
loop
les
or
lods
pop
push
inc
aas
and
jl
mov
sti
repnz
pop
pop
add
rcr
xchg
adc
sub
adc
or
fwait
andl
sbb
xor
movsl
push
rcrb
and
enter
push
or
or
sbb
call
fwait
mov
xchg
xlat
xchg
les
push
jb
xor
fists
cmp
testb
test
push
popf
push
cmpsb
mov
push
jg,pt
jge
popw
roll
jbe
jg
lret
clc
xchg
jnp
jae
or
lcall
add
xor
jl
mov
cs
push
out
insl
jp
aaa
add
into
cs
fucomip
and
sbb
hlt
sbbb
sbb
adc
mov
pop
enter
jb
xorl
or
mov
in
jae
push
hlt
icebp
stc
imul
inc
push
mov
cwtl
cmpsb
push
lds
popa
cli
jl
das
xchg
outsb
or
pop
fucomip
repnz
hlt
sub
sub
mov
jo
mov
dec
pop
fs
loop
movb
dec
add
mov
inc
outsl
notb
jae
xlat
add
lock
das
hlt
bound
arpl
cmc
push
xchg
lahf
stos
mov
mov
xchg
push
je
dec
lahf
adc
pop
ret
xchg
sahf
cmp
hlt
cwtl
enter
ret
imul
inc
mov
popa
mov
je
mov
inc
lret
ret
pusha
scas
stos
aas
jb
cld
sbb
popa
jo
cmp
mov
mov
mov
ds
test
arpl
pop
fsubrs
xchg
das
jge
cmp
pop
dec
mov
pop
fs
sub
lahf
inc
test
lret
aad
pop
add
sbb
aad
lock
jno
inc
pop
pushf
push
hlt
inc
scas
mov
cmpsl
pusha
and
mov
shlb
stc
jp
addr16
xor
xor
adc
loopne
test
nop
pusha
popa
mov
insb
adc
push
dec
inc
mov
sub
cmp
scas
enter
mov
push
xchg
test
rcrb
push
test
arpl
push
cmp
cld
dec
test
das
pop
popa
or
jge
and
stos
addr16
ljmp
or
cmp
pop
notl
rcll
nopl
xchg
mov
jns
ss
arpl
das
sub
push
les
outsb
arpl
sub
mov
mov
mov
dec
and
xchg
and
mov
cmpl
or
mov
inc
aam
pushf
in
xlat
or
aam
mov
loopne
xchg
incl
lea
lahf
push
iret
lea
xor
dec
adcb
sti
ljmp
int
icebp
dec
add
insl
and
inc
bound
mov
adc
stc
addb
push
push
roll
xor
popl
mov
xlat
je
ss
inc
lss
or
pop
xchg
mov
push
lret
dec
dec
cmp
push
xchg
pop
lcall
ret
lds
into
lock
fildll
cmp
icebp
push
push
cmp
pop
stos
and
js
int3
sbb
mov
push
movsl
xchg
fs
int3
loopne
in
xlat
jge
push
int3
dec
push
xchg
addr16
jge
ret
mov
lea
xor
sbb
dec
or
dec
xor
jl
imul
mov
mov
push
xchg
andb
mov
cmc
inc
mov
and
daa
cmp
in
daa
add
mov
lret
loop
jno
int
outsl
or
or
fnsave
pop
xchg
mov
lahf
push
xchg
mov
jne
lret
push
push
loop
jecxz
cmpl
mov
lea
loop
nop
fdivrs
pop
mov
ficoml
sub
or
fwait
gs
addr16
jge
lods
mov
or
add
or
stos
subl
pop
out
jno
scas
xchg
xor
cmpb
sub
aaa
cmpl
addr16
scas
xchg
xorb
pop
cmpsl
dec
xchg
stos
js
push
mov
lds
je
pop
movsl
adc
idivb
nop
mulb
sbb
sahf
jnp
mov
pop
inc
jne
xchg
cs
shlb
in
test
ss
out
test
add
aad
mov
and
insl
xchg
fdivs
pop
scas
rcr
cmp
xchg
cmp
adc
mov
addr16
imul
mov
add
adc
scas
subl
inc
out
jno
scas
xchg
xor
cmpb
pop
mov
hlt
jnp
aaa
std
jnp
jb
ds
pop
sbb
cld
inc
inc
stos
adc
sahf
jnp
sbb
jnp
xchg
scas
jo
fildl
cmc
out
pop
leave
pop
xor
js
fwait
mov
hlt
out
inc
test
inc
dec
pop
les
push
subb
js
add
mov
insb
icebp
xorb
inc
sbb
mov
inc
sbb
mov
gs
adc
js
std
lods
aam
inc
inc
add
push
sbb
unpckhps
add
inc
cli
addb
mov
add
les
cmp
out
xlat
push
arpl
adc
mov
test
mov
push
mov
cs
sub
jno
ffreep
xorb
gs
movl
cltd
mov
std
sub
scas
inc
aad
xor
pop
lahf
and
je
addl
popa
loopne
hlt
pop
insl
add
or
jl
inc
inc
into
scas
inc
ficoml
or
icebp
outsb
sarb
sub
mov
mov
xchg
and
ret
jns
aam
adc
adc
dec
sub
lods
cmp
mov
jb
adc
in
fdivrl
shlb
lock
cmp
repz
arpl
sarl
test
addr16
pop
mov
aas
and
dec
and
xor
andl
cmpl
iret
jno
pop
and
addr16
adc
call
mov
fistpl
sbbl
mov
xchg
ror
and
jno
add
mov
cli
js
inc
xchg
lds
cwtl
or
lea
xchg
outsb
jns
jo
in
inc
mov
cli
nop
mov
pop
inc
pop
clc
lcall
arpl
jns
add
inc
sbb
jo
sti
pop
mov
data16
dec
cwtl
xor
pop
xchg
sbb
cwtl
cmp
gs
jmp
mov
jp
mov
mov
add
inc
sbb
push
dec
test
loop
arpl
setae
into
add
add
dec
mov
imul
jp
test
mov
push
adc
xchg
in
mov
sub
adc
loope
pop
jae
imul
jnp
loopne
stos
xor
adcb
popf
or
rcrl
cmp
dec
hlt
aam
mov
stc
pop
enter
mov
cs
jmp
out
inc
rcl
pop
call
loope
xlat
or
cmp
sbb
xchg
cs
cwtl
imul
int3
pop
bound
out
mov
sbb
jae
inc
pop
sbb
and
js
xchg
mov
inc
loope
mov
pushf
fmull
fucomp
aad
dec
mulb
and
out
ljmp
push
imul
mov
pop
or
xchg
xchg
dec
pop
ljmp
shrb
arpl
and
data16
or
xchg
and
addb
cwtl
pop
mov
pop
dec
orb
xchg
rcrb
mov
mov
jns
rcr
std
pop
mov
pop
lcall
in
cmp
dec
cld
clc
mov
add
insb
jbe
sti
adc
adc
push
insl
aad
into
mov
jno
bound
adc
pop
hlt
cwtl
inc
rcrl
std
or
scas
test
das
insb
das
jp
and
jno
sub
mov
nop
icebp
scas
pop
and
xchg
xchg
aad
mov
inc
jl
lds
cld
movl
test
jnp
lds
pop
dec
cmpsb
mov
das
imul
cwtl
sub
and
mov
in
jp
sbb
rorl
xchg
and
dec
jge
inc
enter
imul
mov
xor
fldl
xchg
in
pop
mov
add
inc
sbb
pop
pop
sti
pop
sub
mov
cmpsl
lods
mov
jg
and
je
jl
adc
scas
stc
and
dec
loope
jb
jle
inc
lret
lcall
scas
push
cli
push
int3
cmp
or
in
sub
int
nop
hlt
ds
xchg
sbb
jno
pop
xchg
mov
mov
sbb
popa
inc
imul
jo
rcl
cmp
push
fwait
cmp
mov
cmpsl
pop
test
adc
jp
inc
aad
stos
inc
dec
lret
add
lds
cwtl
outsb
in
fninit
fcompl
fimuls
push
ss
mov
shll
pushf
insl
jp
stos
sub
or
test
iret
insb
in
movl
in
mov
jae
inc
insb
sarl
push
mov
dec
enter
jg
nopl
xlat
lds
ds
lods
hlt
pop
lret
add
mov
ss
pop
lock
das
sbb
pushf
ss
mov
adc
out
std
das
cmp
pop
mov
in
mov
lods
sti
lret
cmp
cmc
clc
es
sbb
stos
repnz
aad
push
sbb
cmc
xchg
rcrl
or
fildl
mov
scas
out
mov
mov
sbb
cmp
jo
jae
dec
xlat
lds
hlt
pop
inc
add
in
outsl
xchg
les
dec
in
imul
add
inc
pop
outsl
aam
lea
shll
insb
ret
cmp
rolb
in
inc
jb
sti
mov
call
rclb
shrb
fldt
aas
push
ret
sbb
cs
sarl
loopne
in
pop
movsl
std
jmp
aaa
mov
or
out
test
in
mov
aam
mov
mov
add
sbb
jnp
xorb
in
jnp
mov
ret
xor
int
ds
xchg
mov
hlt
dec
sbb
xchg
mov
lret
out
and
das
fwait
or
sbb
cli
mov
cmpsl
inc
in
outsl
mov
loope
mov
sub
pop
popf
inc
sbb
dec
int3
div
out
lods
out
in
out
ror
iret
hlt
sbb
in
aaa
push
sbb
daa
xchg
mov
push
fcoml
xchg
lods
jnp
push
insl
pop
shll
mov
out
lret
or
cmp
sbbb
mov
mov
adc
jns
das
add
sti
push
and
outsl
push
in
shll
push
cltd
lret
das
mov
sub
mov
enter
push
push
fstl
mov
cmp
ss
fistpll
sub
sbb
and
mov
mov
pop
aad
rcrl
cld
sbb
inc
int3
scas
repz
roll
mov
loope
mov
sub
and
xchg
dec
mov
lods
out
in
jmp
fucomp
popf
cmpsb
sub
lods
test
xchg
loope
repz
dec
adc
outsl
fwait
sahf
cs
in
in
popf
nop
mov
add
fs
hlt
aad
mov
mov
and
pop
in
rol
pop
aas
ret
cmp
or
int3
fildl
xor
add
das
rclb
imulb
mov
sub
adc
and
fstl
sub
adc
cmc
test
or
mov
pop
and
push
cmp
dec
out
or
xor
adc
imul
jl
lcall
jp
dec
xlat
jecxz
addr16
inc
jl
rclb
aad
aas
push
daa
test
lret
mov
jb
adc
jne
jl
je
sarl
mov
jge
int3
sbb
or
in
out
loop
pop
popf
mov
clc
and
scas
or
ljmp
addb
in
das
lds
cmp
aad
cmp
stc
in
lret
subl
shll
fildl
jge
popf
adc
add
popa
xor
addr16
xor
cmpl
cmpsl
jno
xor
or
dec
fdivrl
aam
or
or
xor
pop
push
fldz
push
sub
xor
repnz
adc
mov
mov
in
pop
cltd
pop
lock
test
in
jmp
insb
cmp
rcl
aaa
insl
aas
mov
fs
and
jecxz
or
pop
adc
add
in
jbe
loop
daa
mov
mov
cmp
add
int3
orb
jl
and
leave
add
push
add
sti
pop
in
int
and
cmp
mov
cs
cltd
cmp
ja
ds
adc
inc
or
sti
int3
stc
and
jae
in
sub
aam
mov
aas
mov
adc
pop
les
in
pushl
dec
imul
pop
out
ss
dec
ret
mov
mov
jle
or
jne
cltd
cmp
ret
enter
clc
xor
test
icebp
cmp
mov
mov
xchg
aas
out
or
pusha
ret
inc
out
xchg
or
loop
adc
cmp
jge
in
iret
stos
pop
push
add
in
pop
push
mov
int
cmp
lds
out
jae
dec
call
jo
xor
fbld
or
xchg
scas
mov
pop
inc
mov
shlb
pop
movsl
iret
out
cmp
ds
mov
fistpl
in
sbb
sub
jg
aas
enter
clc
push
mov
imul
xor
ljmp
sub
leave
mov
mov
pushf
lret
mov
add
lea
pop
xchg
or
mov
add
lods
jp
jmp
repnz
adc
hlt
repz
adcl
xchg
int
pop
mov
outsl
push
sub
mov
mov
out
enter
xor
int
inc
adc
push
lds
in
sbb
jmp
xor
cmp
insb
sahf
cmp
shll
mov
cmp
mov
and
arpl
mov
cmc
out
mov
xchg
cltd
xchg
xor
bt
mov
sub
cs
sbb
cmpxchg
cmp
push
adc
push
arpl
call
jbe
in
sbb
stc
xchg
sbb
or
sbb
outsl
or
leave
lahf
mov
cld
or
xor
mov
push
jl
lock
jnp
push
xchg
call
mov
lods
into
mov
aas
es
cmp
cld
pop
xor
mov
or
push
inc
sti
repnz
in
cwtl
sub
and
dec
lods
or
mov
repz
push
xor
jne
aas
pop
imul
xor
pop
push
or
sub
or
xor
cmp
mov
xor
adc
aad
xor
test
in
jnp
add
or
jmp
cmp
add
cmp
mov
or
mov
or
dec
into
pop
cmc
repz
mov
or
or
mul
cmp
int
sbb
aad
adc
inc
test
rcll
bound
iret
push
jmp
lods
sti
mov
iret
and
push
imul
das
imul
jno
adc
pop
inc
icebp
add
mov
jl
lret
insb
and
out
in
push
addl
sbb
inc
adc
xchg
loope
xor
in
loope
stos
pop
inc
test
ja
xor
push
mov
je
push
inc
dec
mov
and
xchg
cs
and
mov
add
dec
xor
test
nop
mov
mov
xor
notl
movsb
xlat
roll
jg
and
jle
add
pop
loop
stc
es
sahf
ret
jnp
xor
rorb
mov
cmc
adc
add
mov
sar
lret
sysret
inc
test
mov
dec
adc
clc
aas
jl
daa
loopne
loope
dec
fistps
in
call
fwait
fs
lahf
hlt
push
hlt
popf
call
roll
xchg
mov
xchg
insb
arpl
inc
movsl
notb
es
insl
lods
inc
test
jne
jmp
add
aad
jp
or
dec
adc
stos
popa
enter
inc
cwtl
clts
adc
and
sbbb
cmc
xchg
divb
or
push
sarb
push
cmpsb
adc
fucomp
dec
pop
pusha
jno
out
call
or
adc
sub
cmc
xchg
scas
pop
shll
pop
ljmp
sbb
mov
cmp
les
ss
push
nop
jnp
std
pop
adc
pop
and
xlat
pop
cmpsl
cmp
popf
inc
hlt
adc
call
mov
pushf
cmc
cmpsb
xorb
insl
mov
out
in
enter
lock
daa
or
lock
xor
in
sti
cmp
add
fsubp
leave
movsl
mov
and
cmp
push
xchg
cmpsl
shr
lock
mov
and
rcl
mov
mov
faddl
or
inc
cmc
test
dec
xor
or
dec
sbb
mov
fcoms
mov
lock
push
jnp
sbb
subl
ja
popf
pushf
sbb
dec
mov
cmc
out
lods
sarl
add
sub
roll
pop
mov
mov
test
sub
ret
cs
mov
push
add
sub
fwait
add
pusha
stos
add
scas
lret
aad
cli
clc
and
in
movsl
out
fiadds
call
xlat
js
push
inc
sbb
fisttpll
std
xchg
adc
add
and
sbb
mov
xlat
cld
mov
fnsave
pushf
popf
imul
inc
jl
lods
add
mov
push
add
mov
out
sub
and
pop
push
inc
popa
xchg
mov
push
inc
sbb
sub
leave
out
and
test
sub
mov
dec
jl
dec
mov
stc
icebp
add
sbb
add
in
jnp
cmp
rcll
mov
mov
lcall
adc
fstps
lods
rolb
test
fldl
scas
push
pop
dec
cs
insb
sbb
push
scas
adc
add
xor
movsb
rcr
xchg
repz
mov
ss
popf
jp
outsl
dec
pop
icebp
dec
out
test
or
cmp
inc
shrb
pusha
insl
mov
mov
mov
into
lret
mov
xchg
add
dec
xchg
test
enter
test
cs
std
out
out
lods
pop
push
inc
popa
xchg
mov
push
inc
sbb
and
pop
mov
push
dec
push
js
sbb
mov
sub
test
push
sar
inc
xor
imul
and
outsl
test
nop
stc
xor
les
jl
xchg
sub
adc
jbe
adc
cltd
test
dec
cli
arpl
jle
mov
xor
cwtl
mov
push
cmp
xchg
xor
stos
add
xchg
push
sti
jnp
out
pop
mov
mov
sbb
push
add
push
mov
push
pop
dec
nop
inc
pusha
jle
roll
jg
mov
leave
outsl
xchg
inc
into
mov
lea
insb
popf
sub
pop
stos
lcall
xor
mov
push
rcll
or
in
stc
pop
cmp
ja
test
lcall
pop
test
push
sub
jne
test
jne
out
or
push
xor
xorb
dec
popa
xor
mov
hlt
sbb
sbb
xor
mov
push
sar
mov
or
dec
incl
xchg
or
fnsave
xchg
sti
jle
rclb
jnp
push
push
push
movsb
inc
jns
push
test
push
mov
inc
outsb
mov
mov
dec
lea
repz
sahf
dec
in
scas
enter
mov
bound
dec
mov
add
dec
mov
movsb
ss
jne
sub
roll
imul
imul
dec
pop
pop
insb
js
dec
loope
mov
sub
mov
push
repz
jae
loopne
adc
mov
data16
loopne
outsb
push
inc
sbb
arpl
jnp
aaa
mov
cmpsl
cmp
pop
jbe
push
es
lock
push
sarb
dec
inc
orl
sahf
pop
push
mov
jae
jmp
repnz
test
push
mov
push
enter
and
or
das
xchg
inc
stos
xor
jbe
sub
xchg
xchg
jg
mov
je
mov
pop
fnstsw
mov
fiadds
sbb
fiaddl
aam
push
out
imul
or
sbb
dec
lods
cmpsl
inc
stos
leave
outsb
xchg
inc
mov
arpl
insb
cli
sbb
xorl
outsl
addr16
call
dec
gs
cmpsl
xchg
or
out
ret
mov
inc
xor
movsb
jle
cwtl
sbb
jae
test
jle
mov
add
out
jbe
and
mov
sbb
jge
stos
test
push
rorb
xchg
stos
jl
sbb
xchg
mov
jmp
inc
insl
mov
pop
popa
xchg
mov
jge
jmp
pop
scas
jne
push
scas
push
mov
cmp
sub
pop
enter
pop
push
inc
lahf
sbbl
mov
jne
dec
inc
loopne
js
push
ja
mov
mov
pop
movsl
inc
call
mov
inc
enter
call
add
inc
jb
ficomps
insb
insl
mov
cmpb
imul
loope
daa
pop
lods
es
inc
mov
imul
mov
fwait
mov
bound
inc
stos
fcmovb
push
sub
xor
push
dec
repnz
inc
inc
ret
std
movsb
data16
je
adc
inc
sub
imul
in
sahf
mov
adc
inc
ss
inc
add
cld
test
fildll
cld
in
imul
cmc
fs
xchg
fsubrs
pop
mov
xlat
test
mov
push
inc
orb
lret
sub
sbb
jle
pop
ficoml
sbb
mov
xorb
push
add
repz
in
push
in
addl
jo
and
les
mov
into
cmc
sbb
mov
in
inc
subl
inc
mov
push
movsl
stos
icebp
pop
in
cli
cwtl
fldl
jle
lds
arpl
inc
pop
push
and
cwtl
xchg
stos
push
push
push
fsubrl
std
lahf
enter
mov
fs
pop
mov
mov
subl
sbb
push
sbb
jge
insb
flds
es
ljmp
data16
lahf
scas
xchg
pushf
leave
push
stos
mov
fdiv
or
aad
jbe
cmp
rol
lret
xlat
lods
pop
dec
sbbb
sbb
pop
out
sbb
std
das
lds
rcr
cmp
mov
xchg
nop
mov
fwait
nop
mov
mov
mov
nop
jbe
pop
nop
inc
mov
jns
mov
sbb
push
mov
leave
sub
sbb
sub
sbb
sub
sbb
sub
sbb
sub
sbb
push
sbb
and
or
and
xchg
sbb
xchg
mov
fistps
cmpsl
pop
aad
xor
adc
repnz
xchg
call
popa
fisttpl
jae
call
and
push
call
faddp
add
fnsave
push
sbb
push
ja,pt
push
inc
ja
push
insb
ja
push
jg
inc
push
lahf
ja
push
test
xchg
push
mov
sti
push
ret
ja
push
ljmp
stc
push
add
pop
add
xchg
lods
daa
fiadds
xlat
shlb
xchg
aaa
xchg
lods
pop
mov
add
call
iret
call
pop
fildl
call
fstl
jle
loope
call
ljmp
mov
icebp
hlt
mov
filds
push
aam
jle
dec
xchg
jle
jbe
fisttpll
fldl
popf
xchg
xchg
cld
xchg
leave
filds
or
mov
int
outsb
jbe
adc
sub
icebp
push
aam
mov
mov
dec
adc
dec
es
dec
cmp
loopne
xchg
nop
mov
mov
dec
nop
je
push
nop
inc
mov
dec
sub
pusha
sub
push
sarb
imul
lds
imulb
pop
testb
or
rcl
pmuludq
inc
lods
and
fcomi
call
clc
dec
inc
or
add
xor
sbb
sub
sbb
sub
cli
xor
xor
xor
jno
push
sbb
push
pop
xor
and
adc
call
xor
adc
mov
cli
mov
ljmp
mov
fcoml
je
lock
addr16
insb
add
dec
divb
out
or
push
xchg
dec
mov
xchg
mov
mov
xchg
fwait
mov
xchg
xchg
mov
xchg
stc
mov
test
stos
adc
push
pop
jl
mov
pop
ret
pop
icebp
arpl
cmc
add
sub
das
ret
add
pop
ret
in
ret
mov
in
ret
loop
rcll
or
pop
or
jbe
pop
sub
js
inc
cmp
mov
inc
jne
test
mov
roll
or
fmull
xor
push
mov
lret
daa
cli
pop
fstpl
gs
mov
mov
sub
ffreep
imul
vpsadbw
xor
push
movsl
adc
and
cli
add
popa
xchg
inc
mov
and
or
xor
std
jno
inc
aad
mov
jno
inc
xchg
jno
inc
jbe
pop
inc
dec
jno
inc
jno,pn
inc
jno,pt
inc
push
jno
inc
push
jl
xor
lods
rcrl
into
lods
icebp
sahf
ficomps
scas
lods
xchg
lahf
mov
push
mov
xchg
mov
in
ret
in
ret
std
in
ret
in
in
ret
fucom
out
lahf
cmp
fcmovnu
call
call
mov
cltd
jle
dec
test
jle
dec
dec
inc
jbe
cli
scas
fstl
add
mov
xor
in
mov
add
push
repz
test
cli
push
fstpl
cli
mov
and
cmp
lods
fildl
pop
pushf
jne
pop
cli
dec
fnsave
pop
frstor
insb
fstl
jl
inc
cli
mov
mov
pushf
frstor
cli
mov
xchg
divl
in
loope
mov
xlat
dec
fcmovnu
call
ds
sti
jle
dec
mov
dec
fwait
jle
stos
loop
inc
cli
mov
mov
pushf
frstor
cli
mov
cli
out
in
out
ja
rol
je
xlat
aaa
push
sbb
daa
push
sub
pop
push
cmp
pop
push
dec
xchg
push
pop
sbbb
xchg
dec
lcall
mov
fadd
out
rol
call
rorl
sbb
movsl
stos
pop
lea
stos
jg
dec
mov
in
inc
lods
outsl
cmpb
sub
sub
movsb
ja
push
mov
jno
lds
js
jnp
sarl
pop
add
xor
js
pop
dec
js
pop
inc
js
insl
cmp
pop
push
js
push
push
jle
in
ret
xchg
in
ret
in
ret
xchg
mov
jmp
aam
in
or
cmp
add
xor
sbb
sub
adc
and
sub
inc
in
ret
addr16
ret
pop
in
ret
push
in
ret
dec
in
ret
inc
in
ret
xchg
in
ret
mov
mov
and
ret
sti
in
ret
repz
ret
fucomip
or
aaa
in
ret
das
in
ret
daa
in
ret
pop
in
ret
pop
in
ret
arpl
push
ret
dec
in
ret
inc
in
ret
mov
in
ret
and
ret
sti
in
ret
repz
ret
jmp
aam
jecxz
out
call
fcmovnu
call
int3
fucomi
call
mov
call
pusha
fisttpl
push
fildl
call
xor
pop
call
add
daa
call
clc
sbb
sub
sbb
sub
sbb
pop
push
xor
idivb
lds
lds
lds
lds
notb
lds
pop
and
push
daa
push
arpl
adc
aaa
pushf
in
add
imul
jmp
lods
fisttpl
call
jo
pop
call
inc
fldt
dec
and
and
or
lods
fmul
or
lock
aaa
in
fcomps
xchg
lods
sbb
inc
mov
jno
inc
jo
pop
push
sub
or
mov
mov
mov
cmp
loopne
lret
nop
call
mov
xchg
nop
mov
mov
scas
nop
xchg
test
sub
pop
jno
push
mov
rclb
les
ret
daa
in
rcrb
clc
sbb
mov
mov
lahf
add
push
cmp
repz
or
and
call
mov
xchg
call
test
cmpsb
call
xchg
call
fdivrl
push
rcrl
daa
in
add
lret
add
out
nop
rclb
ss
add
les
aam
stc
sti
push
std
and
out
jbe
fisttps
push
jl
dec
jo
pop
dec
and
jmp
xlat
nop
lret
nop
popa
xorb
out
or
nop
fsubs
push
ljmp
push
fbstp
add
stos
imul
fistl
xor
adc
imul
inc
push
jne
mov
aam
clc
js
insl
js
pop
jp
mov
cltd
mov
int
cmp
inc
adc
mov
inc
lahf
imul
xchg
rorb
xor
ficompl
mov
jo
daa
inc
add
push
add
pusha
add
ja
mov
daa
popf
add
daa
movsl
add
mov
cmpsl
clc
cli
out
fst
cli
stc
mov
add
and
mov
sbb
push
and
mov
mov
fidivrs
daa
test
add
dec
pop
inc
mov
xchg
sahf
lahf
mov
js
inc
in
cld
notl
mov
dec
mov
jle
je
add
in
shll
jno
insb
sub
idivb
lock
inc
xchg
popa
mov
xchg
mov
mov
xchg
hlt
mov
clc
cmp
pop
and
push
push
daa
dec
push
sahf
jp
lods
jle
dec
xor
out
leave
inc
rcrb
lea
outsb
mov
push
lea
jb
pop
stos
lea
lea
stos
lea
and
xchg
int3
or
pusha
ss
xchg
jle
dec
aas
in
frstor
adc
xchg
fldt
int3
sbbl
imulb
push
fdivr
in
loope
scas
sahf
cwtl
dec
push
jb
inc
mov
sahf
mov
ja
pop
fildl
call
bound
sub
and
das
jmp
or
sbb
and
sub
scas
out
push
cs
adcb
push
xor
cwtl
adc
je
adc
mov
adcl
and
rolb
mov
jp
iret
inc
hlt
sbb
sub
subb
xor
jg
inc
in
int3
push
cli
movsl
fisttpll
loop
jmp
shl
sti
fidivrl
fildll
ret
sbb
and
jns
jp
fs
push
movsl
mov
inc
jl
popa
sub
push
xchg
lods
pop
lahf
pop
lods
cmp
pusha
dec
rorb
push
pop
pop
enter
js
pop
xchg
js
pop
lods
js
pop
movsb
js
pop
mov
je
xor
or
pop
fisubrl
nop
insb
mov
jno
pop
mov
adc
push
mov
shll
into
sbb
sub
lods
or
lods
cmc
mov
push
cltd
xor
xchg
mov
in
ret
movsl
in
ret
xchg
in
ret
test
into
ret
cmc
in
ret
in
out
ja
xor
out
fcmovnbe
call
into
mov
nop
scas
mov
xchg
data16
push
jbe
mov
sbb
popf
mov
xchg
lea
xchg
in
lcall
push
cmp
out
leave
inc
jno
inc
scas
sbb
sub
sub
mov
or
nop
fucomp
lret
adc
xchg
and
les
xchg
aad
inc
mov
inc
and
xor
cmp
xor
or
add
and
adc
and
inc
imul
sbb
push
inc
inc
sahf
push
lods
jns
daa
sbb
xlat
shlb
xorb
mov
pushf
push
dec
in
loopne
pop
in
xchg
repz
je
jmp
jbe
add
mov
sub
pop
pop
out
stos
adc
push
out
loope
push
push
insl
aas
int3
out
repz
add
daa
jg
or
fidivl
pop
mov
pop
or
mov
cmp
xchg
mov
push
lods
mov
xchg
mov
mov
cmp
adc
lods
hlt
mov
in
roll
outsl
fistl
jno
fistl
inc
mov
push
fwait
cmp
rclb
xchg
mov
add
push
and
mov
pop
xor
add
xor
sub
mov
jae
pop
call
mov
mov
testb
nop
daa
leave
add
daa
inc
enter
js
push
mov
out
add
daa
lea
fucom
xor
pop
mov
jne
jbe
mov
xor
xor
cmpsl
pop
sbbl
sub
jno
dec
loope
mov
add
aad
sbb
ja
pop
xor
cltd
scas
rep
shl
add
jle
sub
bound
push
notl
xor
adc
lea
cmpsl
mov
jecxz,pt
mov
sub
dec
loope
gs
dec
jle
dec
pop
jle
dec
jae
pop
jo
add
imull
push
cmp
imul
les
ljmp
cmp
pop
push
or
stos
adc
and
in
movsl
sbb
jle
xchg
ss
testb
mov
xchg
fidivs
sbb
inc
outsb
mov
les
incl
divl
mov
xor
jmp
ljmp
je
lock
inc
mov
pop
add
test
xchg
daa
enter
cmp
in
pop
adc
or
pop
repz
enter
fsubrl
and
test
xchg
loope
or
cld
or
pop
cmp
pop
pop
mov
pushf
cmpsb
mov
incl
mov
jae
icebp
mov
fnstcw
cmp
adc
movsl
lahf
pop
or
lret
imul
out
fs
cwtl
mov
mov
inc
push
jo
xor
subb
push
lret
and
pop
ficomps
mov
aam
jecxz
in
xchg
xchg
xor
clc
mul
sub
mov
rorl
outsb
test
add
mov
pop
fwait
in
daa
inc
dec
aam
inc
pop
sub
xchg
push
mov
int3
jae
in
fstp
shl
xchg
std
cld
push
lret
push
hlt
sbb
and
xchg
cmp
clc
mov
idivl
dec
jle
jo
add
jae
pop
add
mulb
and
push
mov
nop
cmp
stos
aaa
inc
inc
insb
jle
pushf
int3
lods
jnp
add
xchg
popf
cld
ror
add
cmc
data16
loop
and
sub
test
loopne
sub
add
xor
pop
stos
daa
lea
adc
mov
lea
or
and
or
fsubl
xorl
lods
sub
fidivs
stc
sub
lahf
testb
adc
sbb
jbe
jmp
add
xor
jo
sbb
add
push
enter
mov
xor
mov
dec
je
and
add
xor
fisttpll
fnsave
jae
xchg
enter
je
push
stos
flds
inc
cmp
jno
dec
in
add
lahf
lds
push
xchg
xor
cmp
inc
ret
xorb
sbb
push
pop
js
inc
and
cmp
inc
fimull
sbb
xor
js
pop
cmpb
test
pusha
push
idivl
xor
popf
shrb
sub
sub
jns
stos
jne
sahf
xor
inc
adc
mov
lcall
test
iret
les
push
and
jbe
sub
push
add
fldl
xorb
sbb
dec
ljmp
outsl
fmuls
lds
jb
jbe
daa
jmp
enter
jb
mov
jnp
mov
lock
loopne
dec
in
sub
outsl
mov
jb
in
fnstenv
add
das
inc
out
cli
sbb
and
sub
mov
in
push
mov
inc
sbb
xor
adc
add
sahf
fistpll
fistpll
mov
and
add
into
xor
fisttpll
cli
dec
ret
data16
sbb
addl
decb
in
les
sub
addr16
scas
pop
aam
daa
aas
add
daa
stos
add
in
rol
out
or
adc
adc
je
jno
inc
xchg
je
jne
iret
sahf
mov
popf
ja
push
into
jbe
xchg
push
clc
or
js
pop
insl
js
push
jns
and
pop
or
xchg
mov
jne
fs
push
cmpsb
mov
xlat
lret
mov
xor
inc
repz
lea
insb
mov
inc
arpl
fldt
pop
fcmovnu
xor
ret
fwait
pop
std
add
or
dec
movsl
cmp
icebp
daa
fisubrl
or
fisttps
xchg
mov
jle
dec
cmpb
xchg
adc
inc
in
out
xchg
lds
push
mov
or
orb
adc
xor
pop
sbb
pop
in
add
pop
mov
mov
fwait
in
stos
fmuls
fwait
mov
out
mov
call
daa
or
cmp
test
xchg
lds
cs
sub
mov
js
pop
fbstp
jb
fdivrp
movl
addb
lds
jae
xor
test
xor
sbb
dec
fldcw
je
subl
add
mov
xchg
mov
mov
clc
xor
sub
mov
and
jecxz
or
cli
dec
frstor
ja
popf
iret
nop
lods
mov
cmp
cwtl
adc
movsl
xchg
insl
lcall
out
jmp
sub
mov
xchg
cmpsb
dec
testb
aad
inc
roll
sub
adc
push
rcll
fsubs
popf
pop
sub
or
or
sbb
adc
repz
cli
stos
xchg
xor
pop
shlb
jle
dec
lods
jle
dec
bound
dec
jp
pop
mov
or
repnz
into
hlt
pop
cmp
dec
sub
int
movsb
in
lret
xor
fdivrs
stc
xchg
sbb
out
fsub
dec
rcr
sbb
mov
ja
inc
daa
jnp
sbb
jmp
test
lds
dec
inc
inc
jg
xorl
dec
cmp
cmpsb
daa
scas
jns
jne
ret
mul
rol
jecxz
aas
xor
shlb
outsb
mov
push
ljmp
dec
dec
push
cwtl
xor
js
adc
call
pop
or
inc
push
cmp
xorl
push
aad
stos
mov
mov
ja
push
mov
xor
sub
or
xor
cltd
jl
lods
insb
in
xor
stos
sbb
cli
call
xlat
adc
fdivl
std
sub
ficoms
sub
fsubr
pop
sub
ret
int
xor
cld
shlb
cmp
loope
jmp
ss
and
mov
je
daa
ficoms
int3
lods
jecxz
pop
stos
push
lea
scas
lea
movsl
aam
fstl
gs
or
inc
cld
pop
push
call
and
jmp
lret
and
fistps
andl
leave
enter
out
movsl
xor
jge
mov
pusha
test
xor
je
test
mov
int
fisubrl
mov
cmp
mov
xchg
dec
lea
lods
pop
in
cmp
inc
ret
lea
mov
xchg
xorl
mov
std
cs
sub
mov
xor
jbe
lea
dec
add
ret
sub
in
inc
fbstp
ret
popa
lods
inc
pop
xchg
js
pop
cmc
pusha
and
cmp
in
movsl
jecxz
out
sub
fchs
mov
fwait
pop
xchg
pusha
mov
stos
mov
cmpsb
and
sub
add
hlt
gs
es
aad
inc
int3
test
sti
sbb
sbb
pushl
xchg
dec
xchg
mov
xchg
in
or
dec
mov
add
shll
adc
bnd
pop
push
push
push
jae
ja
in
pushf
lahf
mov
mov
mov
sub
shrl
push
push
dec
lods
xor
mov
mov
addl
fidivs
repnz
mov
mov
fdivl
fidivs
mov
loope
cmp
pusha
cmp
pop
add
daa
pop
add
push
or
mov
cmp
mov
mov
fwait
jno
fwait
lods
clc
cmpb
test
cmp
pop
sahf
dec
jecxz
adc
daa
nop
adc
ljmp
mov
adc
push
sub
sub
push
sub
xor
mov
std
mov
outsl
mov
xor
sbb
mov
jbe
add
dec
mov
push
xor
dec
or
gs
jle
inc
in
shrl
sahf
leave
addr16
jle
dec
lcall
ss
fistps
inc
data16
repz
mov
lods
sahf
pop
add
mov
sbb
and
enter
and
ror
enter
orb
sbb
insb
adc
jle
jne
push
cmpsb
add
cmpb
jo
outsl
lods
dec
lahf
ja
push
and
mov
out
in
dec
ja
inc
add
mov
cli
daa
jmp
pushl
jg
bswap
mov
outsl
lret
out
arpl
sub
sbbl
sarb
call
jecxz
icebp
adc
adc
lds
int
je,pt
jl
scas
jle
dec
fnstsw
dec
mov
sahf
adcl
rolb
testb
pushf
jno
inc
fs
int
lret
shll
add
mov
sbb
cmp
scas
js
loope
out
fmul
fnstcw
daa
xchg
jbe
pushf
fldl2e
jmp
inc
out
mov
addr16
mov
jns
inc
out
push
xchg
jne
ficompl
fisttpll
ret
movsb
out
push
cltd
sbb
int
ds
cmp
xchg
testb
inc
cmpsl
add
add
in
or
jb
and
mov
lds
sub
inc
in
sarl
lcall
test
nop
xchg
daa
push
pop
jae
repnz
pushf
jg
adc
xor
jbe
inc
inc
sub
sarb
sub
adc
cmpsl
lods
fwait
lahf
push
lods
jp
sbb
jo
add
iret
shlb
push
inc
mov
subl
scas
sub
xor
pop
aad
mov
cmp
sar
or
sbb
cld
push
lock
call
rol
nop
cli
mov
std
lahf
mov
mov
or
cmpb
add
xor
adc
xor
cmp
pop
xchg
mov
xchg
sub
hlt
arpl
aaa
mov
sahf
test
jmp
dec
clc
mov
inc
adc
push
in
shlb
fistl
arpl
push
sub
xchg
jmp
mov
cli
out
ror
pop
clc
sbb
filds
stos
adc
iret
es
cli
cmpsb
jbe
cs
add
out
push
jle
dec
sub
pop
mov
test
and
dec
std
cmc
mov
pop
cltd
call
andb
scas
into
push
mov
jnp
stc
pop
test
jle
sar
lods
pusha
test
mov
pop
fidivrl
xor
cmpsl
mov
push
adc
jecxz
push
cwtl
je
mov
push
in
mov
mov
push
push
loope
sbb
int
jae
mov
cld
ljmp
in
mov
aas
adc
xchg
and
mov
dec
js
pop
pop
jae
jno
lret
dec
les
sbb
jo
pop
sub
outsl
sub
pop
sub
ficoms
sub
sbb
aad
adc
fistpll
hlt
adc
in
testb
pop
lock
adc
loope
pop
mov
lds
and
push
xchg
sahf
inc
mov
xor
jo
icebp
adc
arpl
jae
mov
roll
shlb
sti
idivb
stos
ret
xchg
add
cmp
push
lock
vmovups
lods
shlb
enter
out
in
movsb
sbb
pop
jbe
or
mov
push
push
call
pushf
lods
mov
push
cs
pushf
pop
sbbb
ret
fs
stos
jo
jbe
aaa
or
jne
mov
mull
xor
mov
jle
dec
daa
or
jnp
adc
adc
sub
clc
lret
fstpl
shlb
inc
idiv
push
add
enter
pop
push
jl
cmp
cmp
inc
out
pusha
jg
loopne
push
push
and
adcl
lret
imul
lds
test
jns
std
mov
xor
mov
rclb
rorl
jno
fwait
hlt
mov
sti
mov
pop
push
or
leave
adc
jl
incb
inc
call
sbb
out
das
cmp
and
mov
mov
je
adc
cmp
outsl
xor
mov
inc
add
push
fistpll
das
lret
jge
sub
nop
fstpl
push
dec
add
and
jae
dec
sub
enter
push
adc
pop
mov
mov
inc
inc
mov
pop
add
and
dec
and
pop
or
popf
stos
fucomi
jecxz
movsb
outsl
lea
outsb
loop
mov
in
mov
lahf
push
mov
data16
jb
arpl
loop
imull
add
das
test
mov
cmp
dec
mov
int
inc
jnp
jg
push
lret
push
xlat
mov
mov
lcall
pop
aaa
lret
pusha
jne
ljmp
das
iret
rol
cmp
push
repz
repz
jmp
jns
outsb
jmp
rol
loope
jmp
adc
ds
outsl
adc
cmp
mov
leave
and
xlat
aaa
mov
or
push
ss
pop
ljmp
pop
mov
loop
fsubp
push
sahf
jecxz
sahf
mov
inc
adc
push
scas
aad
inc
xchg
and
cmpsb
repz
jecxz
sub
adc
outsl
xlat
push
mov
loop
xchg
xchg
xchg
popf
loop
push
out
jo
lods
push
gs
xor
jge
mov
mov
push
in
xchg
xor
push
jmp
inc
cmc
mov
jmp
xchg
int3
sbb
nop
xchg
jle
xorb
push
inc
sub
lods
cmpsl
pop
mov
mov
stos
pop
dec
outsl
test
lods
test
xchg
icebp
mov
into
cmp
ret
mov
insl
xchg
xor
cmpsl
pop
mov
xorb
add
adc
pusha
scas
pop
cmpsb
mov
ljmp
jle
addl
std
add
outsl
mov
mov
lods
dec
lcall
xchg
idivl
into
sarl
inc
fwait
push
popa
push
push
in
push
xor
pop
cld
mov
jno
mov
xor
push
inc
pop
in
jb
cmc
cld
xchg
inc
mov
pop
sub
pop
xor
jb
xchg
ss
and
dec
mov
maskmovq
negl
jne
sbb
in
mov
pop
outsl
push
clc
push
adc
mov
and
scas
dec
mov
js
dec
ret
pop
fcoml
sbb
nop
shr
pop
mov
pop
and
dec
sbb
inc
mov
mov
mov
ret
add
ret
sbb
push
ss
lahf
cmc
or
and
shr
sti
int3
aad
test
inc
pop
in
xchg
insl
mov
sub
test
mov
mov
mov
fwait
mov
fildll
ljmp
aaa
movsl
mov
nop
mov
xchg
xor
in
jno
or
movsb
or
insl
rcrl
mov
xchg
adc
scas
out
sbb
stos
push
out
and
aad
or
mov
cmp
xor
lahf
adcb
mov
inc
scas
pmuludq
xchg
fldenv
jnp
data16
jp
and
push
jns
xchg
jg
xchg
pop
arpl
jne
icebp
cmp
ja
and
jg
jmp
push
les
stc
jne
addr16
out
aaa
xchg
shrb
jnp
xorb
push
sbb
cmp
jae
in
aaa
pop
pop
jl
adc
mov
lret
lcall
pop
out
int
sbb
add
jne
sbb
mov
jo
and
dec
inc
movsb
xchg
outsb
das
or
stos
dec
push
push
movsb
in
mov
ret
xor
mov
out
out
pop
sbbl
hlt
and
cli
mov
into
mov
fscale
jle
inc
clc
lods
xorl
je
inc
clc
scas
test
lret
hlt
and
jp
repz
pushf
jnp
push
mov
stos
pusha
std
loope,pt
mov
andb
inc
adc
cmp
pop
sbb
mov
sbb
mov
js
pop
mov
mov
adc
popa
pop
jge
mov
xchg
fildl
adc
lret
psllw
push
and
sbb
incl
test
xor
dec
shll
fcomps
mov
scas
subl
insl
nop
dec
fisttpll
inc
test
jnp
pop
mov
testb
adc
pop
inc
adc
outsl
loopne
mov
pop
leave
sub
dec
xor
jp
push
xchg
mov
sub
jl
ds
ljmp
fs
add
jo
jbe
dec
pop
mov
sar
mov
scas
inc
dec
pop
add
fldt
cmpsl
fisttpll
sti
gs
push
mov
int
outsb
cwtl
jge
xchg
cld
leave
in
jb
pusha
pop
popa
mov
jbe
shll
rolb
call
pop
sub
sub
cmp
sub
mov
bt
cmp
movswl
cmp
test
bt
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
btr
mov
neg
movzbl
bt
bts
or
mov
test
jmp
lcall
ret
or
shr
neg
dec
adc
dec
dec
and
cmp
and
jmp
lcall
xor
add
add
pop
xor
xchg
push
test
or
mov
or
adc
test
cmp
add
call
lcall
incl
ret
neg
sub
add
and
mov
test
cmp
bsf
add
jmp
lcall
inc
bsf
shl
shl
mov
adc
test
and
movsbl
mov
mov
xchg
push
push
xchg
dec
add
add
call
shr
sub
movzwl
and
mov
add
neg
cmp
bts
add
mov
add
test
or
btr
xor
sub
mov
shl
sub
xchg
mov
neg
add
dec
test
movzbl
movsbl
bt
mov
jmp
lcall
ret
or
adc
or
or
shl
bswap
add
and
mov
call
lcall
add
xorl
pop
xor
xchg
push
shl
btr
cmp
test
bts
add
not
bts
jmp
lcall
stc
add
xchg
ret
neg
sub
test
movswl
cmp
and
or
cmp
not
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
neg
xor
add
xor
or
shl
adc
jmp
lcall
push
add
adc
mov
scas
shl
add
movsbl
bts
btc
bt
add
mov
test
bts
btr
or
bsf
btr
mov
mov
shl
call
lcall
add
shr
cmp
and
test
or
or
add
call
lcall
push
add
out
push
cmp
test
test
neg
add
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
shr
xor
bsf
mov
btr
shl
xor
call
lcall
or
adc
btc
bswap
neg
add
shl
bt
add
shl
jmp
lcall
mov
ret
mov
mov
bt
shl
bsf
bswap
mov
shl
dec
xor
cmp
and
sub
cmp
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
test
add
and
adc
xor
neg
add
sub
push
and
cmp
bts
shr
not
neg
test
test
btc
test
add
neg
btr
neg
test
adc
or
and
adc
neg
add
mov
xor
bswap
bswap
btr
dec
adc
cmp
add
bsf
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
add
btc
movzbl
sub
bts
test
sub
not
call
lcall
add
cmp
btr
bts
bswap
and
movsbl
add
and
mov
add
bsf
or
dec
sub
adc
sub
adc
sub
mov
or
btr
sub
sub
bts
or
test
call
lcall
mov
xor
or
bts
btc
bt
shr
or
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
mov
adc
shr
shr
movswl
not
test
shr
shr
xor
inc
movzwl
add
bts
or
bsf
jmp
lcall
inc
xor
shr
test
add
btc
movswl
xor
mov
add
mov
and
inc
test
bts
adc
shr
add
movsbl
call
lcall
add
btr
dec
movsbl
xor
xor
btc
mov
not
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
inc
adc
mov
xor
or
shr
and
test
and
sub
mov
cmp
and
bsf
neg
shl
shl
sub
sub
sub
cmp
movswl
neg
test
shl
and
cmp
or
shr
sub
mov
add
btc
shr
btc
adc
shr
mov
shl
mov
not
lea
inc
cmp
jne
test
and
bsf
xor
bt
and
test
shl
add
add
neg
and
movzwl
sub
bsf
sub
call
lcall
je
sub
cmp
mov
btc
add
bt
and
dec
sub
mov
not
cmp
shl
mov
xor
test
add
call
lcall
mov
test
xor
adc
mov
add
or
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
bswap
and
sub
btc
and
bts
btr
bt
mov
call
lcall
movzbl
add
not
movsbl
and
btr
adc
sub
inc
add
mov
test
bt
cmp
and
shl
shl
jmp
lcall
insb
adc
or
fimuls
mov
mov
mov
mov
add
cmp
add
shl
cmp
and
add
bsf
shr
and
call
lcall
add
bsf
inc
not
and
adc
cmp
bsf
mov
push
pop
inc
add
loop
test
test
sub
cmp
and
sub
bts
bt
push
decl
mov
add
movsbl
mov
xor
and
mov
test
bsf
call
lcall
incl
testl
ret
mov
shl
mov
adc
sub
push
shll
sub
add
movzwl
cmp
add
add
shr
dec
push
cmp
mov
and
shl
or
adc
sub
sub
mov
shr
adc
shl
dec
btr
bts
cmp
or
push
push
pop
add
add
call
test
sub
sub
and
add
btr
btc
xchg
cmp
or
bsf
sub
btc
add
btc
shr
mov
sub
sub
cmp
inc
cmp
add
shr
or
call
lcall
mov
mov
adc
add
btr
shr
and
bts
add
or
and
and
shr
not
bswap
mov
xor
call
lcall
mov
mov
cmp
neg
adc
shr
bt
bts
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
xor
and
not
btc
bswap
bt
sub
movzwl
sub
not
and
test
or
sub
call
lcall
mov
or
xchg
sub
xor
add
btc
shl
mov
sub
shr
bt
test
btr
adc
and
cmp
je
movzbl
cmp
adc
test
test
test
neg
adc
shl
shr
add
sub
cmp
add
test
movzbl
or
adc
inc
call
lcall
bt
shr
bswap
test
bswap
bts
adc
btr
shr
sub
shl
btr
bt
not
adc
bts
xor
and
shl
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
btc
test
cmp
not
shl
shl
bts
movsbl
push
decl
mov
add
test
shr
add
btr
xor
or
push
decl
mov
add
bts
mov
shr
test
add
test
or
inc
add
cmp
or
xor
sub
cmp
not
adc
or
jmp
bts
or
add
inc
cmp
shr
dec
btc
mov
and
or
and
bts
adc
add
bswap
adc
mov
mov
mov
xor
cmp
bt
sub
cmp
add
test
test
or
btr
not
test
shl
mov
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
test
test
shr
movsbl
adc
movzwl
btc
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
xor
bt
bsf
not
or
bts
add
or
push
push
and
or
movzwl
adc
adc
btr
bsf
neg
push
sub
mov
bsf
sub
adc
test
test
inc
adc
shr
mov
shl
adc
dec
shr
sub
xor
btr
call
lcall
js
mov
roll
fnstenv
adc
inc
adc
shr
sub
lea
movsbl
shr
add
test
movsbl
xor
mov
mov
adc
movswl
shl
adc
test
movsbl
adc
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
xor
out
or
sub
adc
btr
bt
sub
mov
inc
bts
mov
cmp
bt
sub
and
test
mov
push
sub
cmp
bt
or
or
movzwl
bt
push
mov
cmp
dec
or
add
bsf
bsf
cmp
sub
push
xor
and
mov
sub
mov
adc
movzwl
call
lcall
mov
bsf
or
mov
bt
bts
cmp
adc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
sub
inc
xor
cmp
cmp
xor
shl
add
xor
call
lcall
sub
loope
adc
bsf
adc
bts
or
and
bswap
add
btc
adc
add
test
xor
bt
test
call
lcall
mov
shl
test
btc
shl
cmp
or
add
inc
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
aad
push
cmp
je
add
xlat
stos
sbb
fistpl
sbb
add
push
dec
mov
les
push
inc
bound
imul
adc
orb
add
bound
push
cmp
push
test
mov
addb
mov
aam
jge
cmpl
stc
xor
xor
xor
mov
add
xchg
das
testb
jae
loope
je
pop
cmp
and
and
sbb
adc
add
pop
shl
rclb
adc
fstpt
je
jo
movsl
add
push
loope
mov
push
or
fisttps
adc
movsl
add
xor
add
and
pop
or
add
dec
fisubs
fsubrl
sbb
loopne
xchg
mov
addl
pop
sbb
or
push
mov
add
lahf
jmp
and
aad
jp
call
pop
add
dec
inc
sbb
xor
inc
aaa
cmp
dec
push
popf
pushf
inc
popl
xor
push
push
dec
pop
notb
push
clc
dec
push
inc
xor
adcl
dec
sbb
pushf
cmp
push
xchg
cmp
adc
jbe
jne
aas
xor
outsl
jle
dec
push
add
ss
push
push
inc
jg
repnz
dec
inc
or
pop
fsubs
sub
cmc
and
inc
pop
or
test
rclb
inc
dec
inc
repnz
pop
dec
dec
push
cmp
push
cmpsl
xorl
ds
enter
inc
sub
push
inc
aad
cmp
pop
mov
push
pop
sbb
mov
cmpl
push
inc
lret
inc
cmpsl
aas
or
push
inc
push
xchg
add
hlt
ss
notb
inc
ret
aam
add
cmp
outsl
jae
and
cmp
cmc
cmp
outsb
cmp
jae
je
int
in
aam
addr16
insl
loopne
imul
call
ja
or
push
inc
mov
outsl
mov
clc
push
sub
nop
aad
imul
xchg
push
and
rsqrtps
in
movsb
idivb
arpl
repz
xchg
lods
push
mov
adc
pop
jb
shrb
cwtl
cmp
ja
gs
popf
sbb
sub
or
outsb
repnz
ljmp
jb
out
and
push
outsl
fs
dec
int
push
xor
inc
xchg
jmp
insl
cltd
sbb
dec
call
jne
fstl
jb
cs
pop
push
adc
jmp
add
in
add
nop
cmc
xchg
clc
adc
xchg
std
mov
inc
loop
sarb
sbb
aas
add
adc
gs
int3
cmp
shll
popa
addr16
add
and
jns
je
pop
loope
insb
repz
imul
imul
inc
and
cmp
bound
sub
jo
insb
pop
fs
dec
push
pop
inc
mov
push
jns
dec
add
rcl
lods
jecxz
inc
shlb
add
mov
push
push
dec
inc
push
push
or
inc
pop
mov
xchg
cli
lret
lods
or
dec
inc
add
pop
