sub
and
or
and
sub
and
mov
xchg
fistps
cltd
pop
inc
cwtl
cs
inc
mov
sub
dec
cltd
sub
inc
out
mov
mov
fsubs
xor
cmp
sbb
or
sahf
clc
jg
inc
add
stos
js
pop
inc
cmpl
shll
fstpt
sub
sbb
mov
in
pop
inc
dec
inc
xchg
sbb
inc
mov
imul
add
inc
cmp
sbb
ja
pushf
insl
sbbl
jnp
icebp
adc
adc
xchg
add
push
pop
push
mov
loopne
fwait
ret
sti
cwtl
adc
add
or
push
cmp
dec
cwtl
mov
adc
cmp
leave
adc
sbb
cltd
aas
mov
sub
std
inc
call
lea
mov
inc
xchg
sarb
repnz
lock
lea
or
mov
and
adcb
xchg
jnp
mov
add
aaa
pop
pop
mov
sbb
in
test
or
cmp
loope
pop
ljmp
jns
lock
jo
jns
ret
xchg
pop
loop
cmp
outsl
or
lea
inc
push
sbb
jbe
ja
cmpb
cmpsb
jge
mov
hlt
push
push
or
lret
jecxz
add
or
add
inc
aaa
adc
mov
and
test
in
mov
mov
or
lea
paddsb
int
sbb
sub
lds
jp
test
call
fisubs
lds
pop
bound
into
aad
loopne
xor
sbb
cmpl
lret
inc
les
inc
cmpsl
sub
mov
movsb
inc
je
aaa
jae
sub
pop
push
push
xchg
mov
sub
lds
cmp
aaa
xor
sbb
out
inc
sbb
mov
cmp
jo
push
shlb
js
jno
ret
test
icebp
dec
pop
mov
sti
inc
jno
push
test
push
out
call
rol
scas
out
fs
out
push
rol
dec
push
sub
inc
enter
rol
xor
or
dec
ss
ljmp
jmp
xlat
push
lds
dec
mov
xor
adc
mov
and
xlat
cmc
cli
or
mov
fistpl
inc
and
loop
ja
jnp
pop
shlb
ret
fcomps
lds
push
stc
push
sub
sub
lret
adc
mov
addl
jbe
shll
dec
push
adc
sbb
and
aad
jge
movsb
stos
adc
rep
imul
pusha
test
dec
bound
addr16
push
add
sbb
leave
mov
and
sbb
fcoml
jnp
cmp
ljmpw
dec
rcrl
or
inc
sub
in
mov
cmp
mov
mov
inc
push
mov
xor
inc
scas
subl
jecxz
push
sbbl
lea
ja
out
arpl
insb
cs
pop
cltd
adc
enter
mov
jb
shll
nop
mov
ret
jno
outsb
adc
dec
add
cmpsb
loopne
sbb
or
ror
xchg
nop
inc
hlt
push
sbb
and
push
mov
jle
mov
fsubs
sub
sbb
cltd
adc
push
pop
cwtl
xchg
sub
jns
ja
popa
jmp
testl
test
mov
xchg
arpl
jmp
cltd
movsb
xchg
pop
stc
push
mov
inc
or
and
sbb
rcrl
cli
push
arpl
insb
test
mov
push
mov
hlt
pop
push
jp
mov
fabs
shll
sub
push
lock
push
addb
sbb
jl
outsl
sub
jp
and
jg
jne
movsb
shrb
fistpll
imul
adc
sbb
push
mov
mov
into
pop
cmpsl
mov
pop
mov
mov
insl
fsts
js
jp
and
fwait
add
jns
jno
iret
or
mov
or
adc
sbb
dec
out
daa
sahf
les
addr16
inc
out
jl
aas
inc
pop
mov
pushf
jecxz
sub
mov
hlt
inc
pop
xor
movsl
dec
dec
inc
mov
icebp
add
sbb
sbb
adc
cltd
push
dec
jne
ret
mov
mov
imul
or
lods
in
movsb
mov
xor
mov
push
push
rorl
imul
ss
cld
test
test
sbb
ljmp
mov
hlt
jmp
dec
xor
hlt
pop
movsl
xor
mov
cmpb
rcrl
ja
push
push
jecxz
aaa
mov
fldt
iret
leave
stos
jns
cs
pop
push
ss
xchg
imul
in
mov
and
lock
mov
xchg
fldenv
ja
mov
jge
jmp
les
pushl
sbb
xchg
xchg
sbb
add
imul
fcomip
das
jnp
out
pop
aam
cmpsb
rorb
call
and
data16
pop
flds
cltd
add
and
push
les
leave
ret
leave
lods
int3
in
sar
dec
rcrl
fldcw
sbb
movsl
cld
into
pop
stc
lea
pop
xchg
inc
cmp
dec
inc
push
stos
pushf
stc
jno
cmc
sbb
int3
in
pop
jecxz
stos
sbb
loop
mov
aaa
mov
dec
push
popf
dec
rcll
and
lahf
aad
xchg
or
shlb
push
ret
push
leave
inc
mov
mov
loopnew
inc
sub
xor
in
js
mov
cmp
sub
push
out
icebp
stc
stos
xor
and
dec
test
mov
movsb
imul
add
mov
int
pop
gs
xchg
mov
movsb
mov
xchg
jbe
ficompl
jge
inc
int
jo
dec
and
sub
lcall
fsubrl
cs
inc
loop
movsb
cmp
sbb
cmp
add
push
fcompl
test
adc
jno
lidtl
ja
add
clc
aad
aas
sub
das
lds
mov
push
mov
xor
sbb
mov
lret
fsub
xor
or
inc
pushf
xchg
movsb
ficomps
lods
andps
lods
and
cmp
aas
aam
add
repnz
ret
and
in
jmp
ss
mov
add
fildll
cld
bound
test
mov
pop
adc
stos
add
inc
lret
dec
sbb
pusha
dec
mov
or
icebp
int
pop
push
dec
hlt
and
lahf
or
dec
fadds
daa
mov
shl
lret
inc
shrl
pop
inc
dec
sbb
jbe
scas
push
addr16
mov
xor
sub
sbb
in
xor
ja
mov
dec
negl
cmc
sbb
cs
scas
xor
cmp
fimull
xlat
adc
pop
dec
jno
in
lret
test
add
outsl
fmull
adc
pop
fdivs
inc
push
push
fisttpll
gs
rcll
mov
inc
adc
and
mov
idivl
shld
lret
pusha
or
mov
inc
in
ret
push
pusha
outsl
out
cld
es
aaa
pop
mov
pop
in
inc
xor
cmpsb
inc
jae
je
iret
mov
bound
pop
clc
in
lock
pop
add
sbb
jl
lea
movl
adc
push
jae
outsl
popf
mov
sub
lods
adc
and
movsb
push
int3
mov
insl
in
cmc
xchg
hlt
mov
dec
das
in
cmp
cltd
mov
daa
sbb
loope
outsb
push
sub
xorb
fmull
xchg
arpl
in
jo
xor
ljmp
push
insb
rcl
aad
inc
bound
mov
popf
mov
stos
rorb
imul
push
dec
mov
test
jg
jb
in
pop
cmp
ret
stc
jp
addr16
push
xchg
mov
sbb
ja
out
mov
push
cwtl
fwait
lock
std
addr16
pop
xchg
lahf
jns
scas
iret
les
mov
pusha
add
cmp
sbb
mov
lock
xor
lea
jecxz
and
imul
add
popf
xor
test
cli
cmpsb
scas
cmp
jns
inc
stos
or
fstps
repnz
mov
cmp
out
push
mov
inc
xchg
pop
pop
xchg
leave
fcomp
dec
dec
or
mov
sahf
pusha
ss
jp
sub
loopne
into
out
cmpsb
scas
or
imul
push
jp
jns
inc
sti
pop
in
mov
and
adc
mov
jo
add
sub
dec
xchg
push
int
mov
pop
ficoml
xor
negl
xchg
push
cs
scas
push
aad
aad
jns
mov
es
jne
pop
or
jbe
ficompl
addl
cs
push
lods
add
xchg
clc
je
mov
lods
aas
jmp
fsts
adc
mov
lret
mov
aad
xor
mov
hlt
mov
data16
mov
fs
xchg
xor
mov
dec
cmp
adc
mov
adcb
addr16
jmp
ljmp
sbb
cmpsb
arpl
lock
loope
pop
cwtl
mov
mov
xor
xor
fbstp
jnp
test
sub
cmpsb
mov
dec
xor
repz
pop
mov
jg
outsb
xor
xchg
sub
mov
jo
jle
cltd
das
pop
ret
mov
mov
mov
adc
sbb
imul
and
push
mov
fs
je
push
cmp
dec
jo
cli
xor
inc
fcmovu
test
sub
fsubrs
aam
mov
movsb
inc
and
enter
mov
push
movl
and
mov
repnz
out
sub
push
cmp
mov
push
divb
sarl
stos
dec
inc
mov
stos
rcll
xchg
jo
in
jmp
push
pusha
mov
xor
lods
test
jnp
gs
testb
fnstcw
mov
in
jae
jbe
repnz
pop
pop
xlat
iret
cmpl
mov
lret
inc
adc
cmpsl
in
xchg
pop
out
add
aaa
xchg
sub
iret
fwait
iret
jo
roll
test
hlt
in
jnp
add
sbb
jmp
lret
test
test
js
imul
mov
xor
das
adcb
jge
sub
add
push
mov
xor
xchg
insl
movsl
ja
inc
aam
pop
adc
and
mov
jb
or
fs
pop
jbe
inc
dec
sahf
push
fcomps
cwtl
stos
jbe
pop
mov
aaa
hlt
jae
or
dec
and
dec
inc
cmp
and
fwait
push
dec
xlat
and
adc
pop
loop
push
in
sbb
sti
jecxz
add
stos
xchg
in
lds
xlat
daa
icebp
fnsave
mov
insb
inc
pop
or
pop
dec
adc
add
sahf
xor
cmp
notb
out
sbb
sub
push
jecxz
mov
or
sub
cltd
dec
in
cld
xchg
repnz
int3
inc
or
bound
and
cmpsl
scas
ret
add
xor
fmul
mov
mov
imul
cmp
push
inc
sbb
push
mov
mov
mov
insb
scas
daa
enter
cmc
inc
cmp
ja
xor
mov
dec
jbe
lds
cs
inc
push
jge
push
enter
popf
cs
add
iret
pop
lock
jns
sysenter
push
sub
rol
mov
xchg
adc
pop
movsb
push
dec
shrb
xorl
push
lret
and
sbb
dec
sti
push
pop
stos
outsl
pop
xchg
dec
add
inc
mov
ja
negl
cmpsb
or
push
repnz
sbb
adc
sbb
xchg
cmpl
mov
jmp
xor
inc
pop
adc
and
sbbl
xchg
jbe
sbb
or
mov
mov
arpl
mov
mov
inc
push
movsl
jae
sub
adc
add
ret
jno
add
retw
adc
dec
jp
mov
arpl
negb
pop
fstl
sub
in
jmp
mov
xchg
xchg
push
pop
notb
adc
stc
sahf
test
mov
data16
mov
andb
js
sbb
jmp
iret
xchg
test
jge
out
daa
mov
mov
lret
or
or
ljmp
inc
xchg
pop
sbb
je
xchg
lcall
jmp
mov
idiv
pop
test
adc
data16
insl
les
push
ja
test
nop
push
clc
and
push
mov
arpl
jp
test
lods
imul
rcll
jmp
rclb
pop
aam
sub
and
mov
popf
icebp
xchg
xorl
inc
repz
jae
mov
and
scas
inc
sbb
ss
loopne
das
lret
cmp
xor
cmc
or
call
mov
jbe
pusha
pusha
xchg
sub
or
pop
lret
xchg
or
push
popa
in
xor
mov
into
subb
fldcw
mov
cli
popf
scas
jl
push
xor
imul
shl
dec
push
shlb
ret
dec
inc
out
cmp
stos
shll
stc
inc
lods
xchg
mov
sub
add
adc
adcb
mov
dec
xchg
js
repz
pop
mov
test
insl
sbb
mov
clc
cmpsb
xchg
pop
testb
aas
mov
data16
shlb
ficoms
inc
into
or
roll
xor
cli
scas
jns
xchg
test
aas
jo
imul
stos
mov
sub
add
clc
mov
mov
jl
adc
int3
in
shll
cmp
sub
xor
mov
lea
enter
imul
icebp
push
cli
pop
mov
ss
xlat
and
scas
in
cmc
and
loop
ret
aam
aad
push
sub
cmp
aam
mov
push
enter
and
mov
frstor
in
out
mov
mov
enter
nop
mov
push
jle
in
push
jge
pop
sbb
hlt
xchg
cwtl
sar
scas
fiaddl
gs
lock
adc
in
jns
out
xorb
popf
cmp
lahf
leave
jne
inc
adc
mov
enter
or
mov
add
ss
ja
jae
mov
outsl
lea
sub
lock
popa
mov
jne
js
xchg
shlb
dec
int
or
into
dec
iret
js
hlt
or
adc
push
lahf
push
lods
sahf
inc
movsl
mov
xlat
and
aam
aad
xor
loop
cwtl
jp
mov
mov
adc
xchg
call
and
pusha
jno
pop
cmp
mov
push
stos
mov
cmp
mov
outsb
andl
inc
push
sub
aam
sbb
and
and
inc
lea
int
mov
mov
outsb
ret
sub
mov
cmpb
xor
subl
lar
pop
mov
pop
mov
inc
jno
cmc
and
inc
call
testb
adc
je
loop
mov
out
ja
inc
mov
aas
mov
mov
repz
cmp
sub
mov
jne
cld
leave
add
adcl
mov
stc
out
jmp
cmp
lret
inc
cli
inc
out
mov
mov
mov
mov
mov
add
in
fs
xorb
nop
pushf
cmp
pusha
clc
out
or
hlt
push
in
sbb
rclb
cmpsb
and
lods
jl
jmp
mov
loop
pusha
mov
in
xchg
sahf
jle
movsb
and
int
les
add
xchg
and
scas
mov
into
mov
pop
sti
adcl
das
lret
inc
lret
add
cmp
mov
add
and
scas
and
mov
mulb
test
fbld
sbb
jbe
es
pop
jg
mov
mov
and
pop
in
call
cmp
clc
popf
inc
fwait
push
popf
mov
rcrl
adc
dec
push
push
adc
xchg
out
sbb
loop
ss
ret
dec
imul
push
add
rdtsc
pop
inc
mov
inc
cmp
pop
stos
sbb
gs
dec
repz
mov
mov
pop
add
push
mov
cwtl
fs
xchg
inc
test
les
imul
gs
push
pop
inc
mov
hlt
jne
in
or
ljmp
insb
in
cwtl
fsubrs
out
cmp
xor
iret
aam
or
call
or
lahf
push
jg
xchg
cmp
movsb
scas
cmpsb
les
decl
jp
sbb
jmp
adc
sbb
inc
jecxz
nop
arpl
aam
leave
push
movsl
ror
ja
jl
leave
dec
sbb
addr16
xor
adcb
push
nop
pop
mov
addb
inc
adc
ficomps
jo
cmp
push
lds
data16
xor
and
fs
lock
iret
adc
xor
push
cmp
xchg
fistl
mov
mov
and
mov
sub
lcall
jnp
shll
xor
lods
scas
cmp
push
ljmp
dec
lds
clc
shlb
or
jne
loopne
mov
dec
dec
sbb
out
sub
cli
jmp
mov
push
and
aaa
add
xchg
cmp
jmp
scas
push
cmp
adc
pop
add
jo
add
rorl
xor
cld
in
push
push
jnp
lret
jge
test
negl
iret
or
dec
pushf
mov
dec
aas
xchg
cmp
push
add
pop
lea
lret
push
xlat
xor
scas
into
enter
gs
xchg
arpl
mov
lods
lret
mov
xor
jp
pop
cmp
mov
stc
jns
ja
jle
sbb
jle
out
add
mov
imul
xor
clc
popf
xlat
adc
inc
frstor
pop
in
popa
test
push
ficomps
mov
fdivr
lretw
aas
sub
add
cld
fisttpl
xchg
iret
int3
dec
scas
addr16
cmpsb
leave
sub
add
mov
ljmp
inc
push
out
or
insb
insb
inc
and
lret
fldt
cwtl
mov
sbb
rcr
inc
mov
call
pop
mov
or
movsb
mov
xchg
sbb
sub
daa
pop
cmp
push
test
mov
sub
das
and
inc
jae
mov
mov
xor
push
jl
ret
testl
int
mov
or
mov
stc
mov
data16
inc
cmp
icebp
in
mov
in
in
adcb
jns
dec
paddusw
addr16
outsb
fsubs
bound
push
popa
pop
mov
js
sub
enter
out
inc
arpl
push
test
test
lcall
iret
inc
push
or
sbb
stc
lcall
cmp
push
xchg
pop
fistpl
cmp
cli
xchg
mov
jmp
ja
js
in
push
es
fwait
xchg
mov
or
xor
add
xchg
rorl
xchg
pop
stc
fmul
xchg
mov
outsb
jae
fldenv
andb
outsl
and
xchg
xchg
test
pop
mov
daa
jmp
mov
hlt
test
or
ja
shll
cltd
add
dec
xor
mov
mov
mov
clc
sub
imul
xor
adc
out
sub
inc
lods
and
or
insl
ret
add
add
or
cmp
in
sahf
ss
pop
jne
das
shlb
mov
add
and
jle
nop
dec
out
sbb
je
lcall
jg
call
popf
cmp
repnz
imull
xchg
scas
fdivrs
lock
jnp
fwait
mov
push
push
sbb
push
enter
lahf
es
xlat
mov
inc
ret
push
leave
fwait
push
cli
xchg
icebp
mov
pop
es
mov
lea
cmpsl
jg
xor
xor
inc
outsb
and
insl
inc
popf
mov
ss
ret
lret
mov
fldcw
gs
sub
iret
fmuls
inc
adc
and
mov
mov
imul
push
fnstsw
rol
repnz
jge
xchg
mov
push
sub
mov
pop
pop
loope
inc
pop
mov
push
jne
jge
cmp
icebp
mov
sahf
call
ds
fcompl
aam
dec
mov
jno
lret
lahf
popa
adc
dec
mov
arpl
push
push
lret
call
lods
leave
sti
jp
sub
sahf
mov
or
xor
dec
inc
fisttpll
pop
mov
jns
mov
clc
push
icebp
int
mov
dec
push
divb
mov
ja
out
dec
inc
std
insb
cmp
pop
loopne
push
mov
mov
mov
movsl
arpl
add
repz
dec
pop
lods
dec
lds
daa
xor
insl
andnps
mov
inc
add
test
xchg
sar
addb
or
push
mov
adc
cmp
vmwrite
inc
cmp
add
data16
enter
lods
addr16
inc
rcrl
mov
sub
jo
addr16
and
dec
movsb
cld
mov
stos
mov
jp
xor
js
mov
clc
mov
mov
pop
ja
push
sub
fcomp
and
das
bound
push
std
movsl
stc
jae
test
dec
xor
push
or
jne
pop
add
popa
divb
mov
rclb
inc
mov
mov
stc
fxch
in
pop
sbb
or
dec
push
fistl
push
call
out
pop
js
jl
aad
ret
loop
ficoml
sti
sti
xor
xor
xor
push
jmp
cld
flds
pushf
hlt
and
xor
cmp
int3
leave
jnp
ja
xor
push
outsl
mov
sahf
dec
mov
fdivs
sub
cmp
add
lahf
insb
pop
jecxz
mov
sbb
ficomps
and
sub
jb
mov
sti
lods
mov
hlt
xor
imul
xorb
aaa
jae
lahf
into
std
add
fidivs
sub
mov
push
mov
inc
mov
or
leave
xchg
xchg
sub
sbb
cmpsb
cmpl
cmp
cld
sbb
inc
and
enter
pusha
jle
insb
cs
loopne
aam
icebp
lock
filds
dec
xchg
inc
or
aad
dec
add
adc
je
xchg
and
les
cmp
dec
shll
test
adc
jns
adc
mov
mov
or
in
mov
jmp
xchg
xor
aaa
dec
mov
mov
test
cwtl
xchg
cmp
aam
mov
jns
bound
sahf
inc
jg
fmuls
arpl
in
jne
dec
xor
data16
inc
xor
je
stos
or
add
jmp
mov
orb
inc
shr
in
lds
or
mov
mov
lcall
fistpll
loopne
jmp
inc
int
mov
into
fisttps
push
inc
data16
js
push
gs
or
inc
mov
cld
pop
xchg
sub
push
mov
fs
jo
ljmp
cld
cmp
cs
rorb
push
arpl
inc
xchg
sub
ret
sbbb
adc
xor
xchg
stc
aaa
adc
xor
fnstenv
xchg
xchg
hlt
ror
mov
pop
push
mov
mov
arpl
jge
test
push
mov
dec
add
adc
mov
sbb
ret
xchg
or
aad
sub
push
cmp
jg
dec
out
mov
leave
call
mov
pop
jb
mov
mov
cli
test
lret
and
xor
jg
dec
nop
icebp
jne
gs
daa
aad
test
xor
out
ficoml
jp
cld
not
dec
sar
sarl
dec
xchg
ret
in
add
xlat
cs
cli
icebp
sub
jge
jb
jmp
dec
sub
jns
and
inc
inc
jecxz
dec
sbbb
cld
icebp
das
or
xor
int
sbb
lret
push
adc
sahf
repz
mov
xor
add
pop
and
lea
clc
popf
enter
push
xor
fstpt
xor
mov
mov
mov
xor
shll
and
pop
sbb
mov
test
fnstsw
inc
sbb
out
pop
cmp
xor
pop
sahf
dec
mov
cmp
or
mov
xchg
aaa
xchg
mov
stc
lds
inc
dec
pushf
lretw
add
fwait
jl
pop
outsl
rclb
push
push
loope
mov
push
lock
lret
add
insb
frstor
sbb
imul
insb
sbb
jge
lret
sbb
fdivrl
pop
jno
mov
pop
or
sbb
mov
cmp
jl
pushf
pop
xchg
lcall
inc
xor
dec
shr
cmpsb
xor
imul
sub
mov
pop
cmp
bound
jo
dec
mov
and
jg
mov
test
xorb
rep
mov
pop
pusha
push
rcrb
rclb
adcb
aas
mov
std
es
sub
mov
enter
push
out
cmpsl
jl
mov
testb
mov
sbb
cmp
call
or
push
int
in
ret
ret
jg
outsb
jne
xor
sub
mov
and
jnp
xchg
mov
out
cmp
into
jae
push
xchg
fwait
int3
sahf
inc
jge
iret
xor
push
js
jg
fisttps
rcrl
mov
push
cmp
icebp
stos
push
add
or
inc
xchg
xchg
stos
std
cmp
dec
pushf
popa
stc
sti
movsl
xchg
stos
sbb
xor
mov
les
mov
cwtl
sarb
dec
mov
jge
in
lock
lods
cld
sar
popf
mov
std
sbb
stc
mov
sub
decb
pop
and
push
lea
mov
sbbl
xlat
aam
mov
cmp
sarb
addr16
mov
in
cs
xchg
fadds
xchg
mov
push
pusha
push
das
mov
xchg
mov
loope
mov
cmp
inc
lods
cmp
jb
mov
js
js
push
sti
mov
mov
test
xchg
add
in
pop
push
pop
out
jg
mov
mov
dec
xchg
jle
pop
push
xchg
fiadds
jo
outsb
xchg
mov
push
dec
cmp
cltd
mov
sub
push
fnstsw
das
mov
add
dec
fisubrl
roll
sti
add
int
test
popa
fdivrl
pop
test
add
inc
out
loop
push
push
lods
adc
stc
cmp
jo
out
in
add
loope
mov
divl
int
repnz
lods
aad
jae
rcrl
jge
mov
sbb
push
jns
or
mov
jno
dec
movsb
mov
loopne
push
cmp
arpl
mov
pusha
loope
mov
xchg
lcall
push
jbe
pop
pop
jno
push
mov
dec
cmp
shrb
xchg
icebp
and
dec
xchg
sub
pop
lds
pop
cmpsl
dec
iret
addr16
pop
adc
adc
pop
cmpsb
inc
daa
or
ret
sbb
xor
cmpsl
jb
mov
add
cltd
jl
or
cmpb
scas
xchg
icebp
sub
int3
psubsw
adcl
xor
aaa
or
loopne
out
out
ljmp
lods
mov
jge
outsl
adc
add
mov
std
shr
mov
fldt
sub
xchg
insl
sub
scas
add
sbb
mov
arpl
les
xor
xchg
sbb
jle
fsubs
cltd
jbe
and
mov
add
out
notb
jmp
push
cmp
nop
xor
in
or
ljmp
stos
xchg
mov
cmpsb
js
cmpsl
cmc
mov
or
aas
inc
in
pop
push
add
jne
popf
test
mov
xchg
andb
lcall
popa
lock
lret
mov
lods
bound
shll
cli
inc
ss
cmpb
sbb
mov
fucom
cmp
push
push
pop
sub
imul
je
test
sbb
test
lret
xchg
push
aaa
divl
cs
adc
andb
push
stc
xchg
ficomps
xor
icebp
scas
nop
nop
xor
out
sub
idivl
pop
or
sub
notl
xchg
out
mov
mov
jo
enter
jl
ret
sub
xorb
fdivs
dec
mov
adc
lea
pop
decb
push
scas
xor
mov
xlat
xchg
hlt
cltd
call
lret
rolb
cmpsb
mov
sbb
pop
jb
rcll
enter
jp
dec
mov
rcrb
inc
sti
faddp
jne
cmp
call
jo
jmp
mov
mov
adc
dec
pop
mov
test
lret
mov
scas
arpl
daa
push
rclb
fwait
push
loop
push
icebp
aaa
lret
fisubl
jne
ja
fcoml
ffreep
ret
push
push
shlb
aad
lahf
inc
imul
into
mov
inc
std
sub
inc
pop
aaa
mov
es
in
call
test
ja
sahf
dec
scas
inc
inc
aas
in
fs
xor
pop
outsl
dec
jno
out
push
daa
ds
ret
sar
dec
mov
leave
adcb
aam
sub
daa
jb
jmp
gs
xor
flds
mov
push
mov
addr16
test
aaa
jg
fstpt
xor
xlat
cmp
arpl
sbb
adcl
pushf
ljmp
shr
loope
sbb
mov
xor
mov
mov
adc
sub
jmp
jmp
or
push
add
rorl
loopne
and
cld
pop
inc
inc
imul
mov
lret
add
adc
xchg
mov
xchg
pop
xorb
les
lods
cmp
add
and
das
fisttpl
imul
ss
addr16
mov
aam
shlb
lock
out
adc
sub
mov
xlat
jg
adc
dec
jb
in
cmp
mov
lahf
add
adc
lods
int3
xchg
cmp
jb
setns
aas
jae
adc
jo
push
jg
push
xchg
out
xchg
popa
popa
add
push
stos
pop
lcall
sbb
out
shlb
pusha
sub
jmp
lock
sub
mov
cmp
sbb
inc
dec
cmpsb
mov
cmpsl
mov
and
cmp
mov
out
pop
adc
push
out
cmc
dec
push
in
loop
cmp
ret
jle
lds
addr16
int
jbe
pop
cmp
mov
fistps
rcl
insl
xor
mov
dec
stos
mov
jecxz
mov
push
aad
out
inc
cli
sub
jmp
inc
test
pop
orl
sub
arpl
pop
jl
lea
adc
xchg
std
or
ret
ret
lods
xlat
and
cmp
jne
jb
lds
cmp
jle
dec
jb
cwtl
aaa
lods
loop
jp
or
inc
xchg
dec
xor
cld
js
movl
fildl
xor
daa
cmp
jle
pop
lcall
push
inc
leave
out
mov
inc
xor
daa
and
stos
leave
push
xor
mov
fisubs
negb
push
insb
jno
push
dec
movsb
daa
pop
sbb
into
enter
push
dec
les
pop
cmpsl
stos
push
inc
mov
enter
out
aas
mov
ja
and
mov
out
std
inc
dec
mov
or
jmp
jbe
loop
jns
pop
lahf
mov
sbbb
mov
or
loopne
dec
dec
jp
mov
aaa
mov
and
add
int3
hlt
rcll
jle
jne
ret
push
pop
inc
jns
je
sub
imulb
xor
pop
mov
out
pop
mov
std
xor
dec
nop
insb
int3
sbb
push
dec
ds
add
add
icebp
adc
lret
adc
ss
cmpsb
xor
push
sub
call
mov
rcll
xchg
jnp
pushf
xchg
loop
lock
or
dec
ret
jle
cld
test
in
add
stos
sbb
pop
add
rcrl
xor
loope
data16
sahf
push
sub
push
mov
mov
flds
das
add
xor
mov
jmp
xchg
cs
pop
push
sbb
xor
push
mov
mov
cmpl
sti
and
bound
rclb
dec
or
inc
mov
mov
or
test
mov
dec
bound
xor
pop
pop
add
pushf
xor
push
xchg
dec
imul
popf
pop
fcoms
adc
mov
out
pop
popf
lret
inc
aam
pushf
xchg
mov
sahf
jle
cmpsb
fnstsw
pop
sbb
inc
adc
push
xor
jecxz
xor
jnp
sbb
pop
mov
xor
fbld
int
loopne
mov
shrl
cltd
insb
pop
in
xchg
lods
in
add
mov
in
or
les
js
and
and
mov
dec
hlt
les
add
clc
lret
aam
scas
clc
lock
js
add
xlat
push
loopne
adc
mov
cli
jecxz
insl
adc
mov
jp
jecxz
sub
inc
aad
xor
or
jge
mov
or
daa
pop
cwtl
dec
adc
xchg
cmp
pop
cld
jmp
or
shlb
fstps
mov
inc
xchg
outsl
fcmovbe
out
sbb
loope
imull
jno
sti
cmp
cmp
arpl
dec
sbb
cmp
push
divb
mov
add
adc
push
push
cmp
bound
or
ret
shr
insl
sub
push
mov
and
xchg
mov
add
nop
out
les
sti
dec
daa
sbb
and
pop
cmpsb
mov
je
add
adc
dec
cli
inc
add
sub
nop
pop
mov
fsubs
or
mov
movsb
dec
or
sbb
addr16
inc
sarb
movsb
lret
adc
jns
mov
xchg
push
and
ret
aam
cmp
mov
jbe
or
mov
cmpsl
cs
mov
fxch
mov
sti
or
sbb
push
push
mov
sbb
frstor
mov
popa
test
popa
inc
pusha
mov
xor
jnp
mov
mov
xlat
dec
sarb
pop
sarb
and
and
mov
mov
push
imul
insl
loopne
add
loopne
jno
or
push
mov
jnp
mov
mov
jne
repnz
inc
ret
ficoml
sub
inc
adc
inc
jecxz
mov
fsubp
inc
and
fnstsw
push
out
push
je
dec
add
cmp
fwait
xor
out
and
mov
loope
and
sub
sub
or
mov
mov
push
cmp
jge
shlb
popa
mov
lcall
cld
mov
and
push
xchg
cltd
xchg
ret
adc
ret
outsb
inc
push
push
shrl
subl
cmpsl
pop
cmp
jge
arpl
xchg
push
push
cmpsb
pop
fnstenv
mov
call
cmc
and
jp
push
pop
dec
jo
shlb
sub
ret
aad
mov
xchg
das
lds
popf
jl
jle
xchg
push
repnz
loopne
aam
or
insb
fwait
into
aas
shr
sub
in
dec
mov
cmpb
in
adc
lcall
xchg
outsb
mov
and
lret
hlt
push
jl
shrb
cmpsl
in
mov
stos
ja
les
inc
js
das
or
fidivl
or
stos
shl
pop
mov
fildl
xlat
and
xor
jl
sub
hlt
sbb
pop
cmpsb
shl
mov
test
fcomp
pushf
pop
fdivl
or
mov
leave
pusha
les
inc
fwait
imul
cmp
mov
lret
xor
ja
addl
stc
xor
push
cmc
pop
cmc
stc
adc
fwait
pop
and
sub
xchg
in
xchg
aaa
xchg
aam
lods
jp
js
fs
divl
in
stos
pop
insl
adc
and
insb
mov
ficomps
xchg
in
fcom
dec
sti
inc
mov
stos
call
sub
out
pop
aaa
sahf
inc
or
jno
mov
cmpl
nop
mov
mov
repz
jno
ficoms
aad
inc
repnz
and
inc
mov
fstps
mov
aaa
imul
or
jmp
dec
loop
scas
int3
stos
lods
xchg
jl
jle
add
lret
mov
lret
xchg
mov
sti
mov
jp
movsl
mov
mov
pop
and
fdivs
fists
dec
xor
arpl
and
jb
xor
sub
dec
test
in
mov
mov
xor
mov
jbe
cmp
roll
arpl
out
push
xchg
cmpsl
pop
fbstp
in
fisttpl
mov
hlt
mov
xor
mov
or
stos
push
sar
shll
adc
or
sub
push
shlb
sbb
rorb
test
mov
inc
imul
rcr
inc
add
test
add
adc
add
dec
insb
in
shrl
daa
cmp
sbb
mov
test
das
arpl
dec
xor
jnp
xor
add
aaa
das
mov
popf
mov
fsubl
mov
mov
js
xchg
popf
push
or
loop
repz
fimuls
pop
add
mov
sub
jle
pusha
add
inc
sub
lcall
test
int3
data16
pop
es
into
shl
sbb
popf
test
mov
mov
mov
push
sbb
push
adc
cmp
inc
xor
outsl
inc
xor
popf
outsl
sti
jp
rorb
xor
push
pop
fwait
mov
add
or
inc
or
inc
loop
sbb
aam
imull
pop
adc
fmull
push
bound
scas
and
out
stc
mov
cmp
gs
orb
clc
outsl
ja
inc
gs
pop
int3
dec
jl
sbb
pop
andl
xlat
lcall
ljmp
es
mov
arpl
in
mov
xor
outsb
out
ret
adc
xchg
movsb
stc
or
add
movsl
xchg
adc
xor
mov
shlb
pop
dec
sarb
faddl
cmp
mov
ja
cli
int3
pusha
add
dec
mov
ja
xchg
mov
shrb
in
fsubp
push
cmp
rol
nop
clc
cmp
insl
loop
lret
call
push
inc
xchg
cmp
pop
and
cs
mov
pop
xor
pusha
push
push
sti
mov
sub
sbb
insl
aaa
fadds
push
in
pop
loopne
pop
xchg
lret
ret
jle
insl
sti
in
mov
arpl
xor
jmp
stos
push
lods
mov
fwait
mov
leave
push
addl
fs
sub
mov
enter
xor
push
rcll
jns
mov
sbb
and
fsubrs
insl
not
lock
gs
fcomps
mov
sbb
out
aaa
sbb
adc
or
xchg
xor
movsl
mov
leave
dec
incl
push
push
adc
cmp
sar
in
into
pop
push
jg
sahf
push
xlat
mov
outsb
insb
loopne
lcall
and
xor
rdtsc
sarl
add
mov
mov
mov
sarl
outsb
push
sbb
sub
cli
push
nop
arpl
jl
sbb
test
fistl
je
jae
push
dec
daa
sti
scas
adc
xlat
xchg
adc
enter
iret
andb
push
outsl
iret
fsubrp
inc
mov
sbb
cmp
fwait
adc
ret
jp
loope
sbb
ja
pop
clc
int3
lock
add
add
iret
jne
shlb
movq
pusha
cmp
mov
and
scas
ficoms
lods
or
out
test
xchg
pop
push
jae
imul
loop,pn
mov
pop
pop
ret
pop
outsl
jno
mov
jae
cmp
movsl
sbb
sbb
xchg
sbb
xor
dec
or
adc
add
lds
movsb
or
cmovb
mov
inc
push
push
sub
inc
jb
lahf
clc
testb
nop
and
xchg
ja
insl
mov
in
cmp
cmpb
ret
jp
jns
mov
bound
aaa
jge
mov
and
lods
shrl
bound
or
lcall
in
push
add
sbb
mov
jmp
or
sub
and
pop
fmulp
lds
mov
shrb
mov
jl
mov
cmpsb
cmp
cwtl
aam
addl
add
cmp
cmp
aam
dec
fwait
les
loopne
jmp
inc
inc
xchg
std
fbstp
fs
sub
mov
pop
lock
adcl
fisttpl
scas
imul
push
adc
std
loop
out
into
int
push
sub
shl
xchg
push
fst
adc
psrld
mov
pop
lock
jnp
std
cmp
lcall
mov
sarl
cmpl
into
sahf
dec
jle
call
xor
mov
push
jne
mov
pop
adc
xchg
les
jmp
add
enter
and
out
jl
jbe
cmpl
in
xor
push
sub
or
mov
stos
xchg
push
mov
rcr
iret
inc
loopne
ja
add
mov
mov
lret
cmp
mov
aad
je
loopne
cmpsl
test
adc
sbb
pushf
scas
sbb
jno
popa
lret
or
fisubl
push
or
les
or
mov
mov
negl
mov
jno
pop
dec
add
sbb
mov
pop
fistpll
push
sarb
lock
xchg
test
xchg
jecxz
mov
mov
mov
xor
pushf
cltd
push
shlb
push
lea
lea
stc
dec
pop
into
add
pop
daa
pop
int
mov
adc
xor
inc
or
repz
ret
popa
jle
pop
add
testl
arpl
push
pop
mov
fidivl
icebp
xlat
xchg
jl
mov
aas
pop
cs
dec
shlb
mov
and
mov
cmp
pcmpgtb
cltd
imul
sbb
decl
fistpll
mov
xchg
adc
das
test
push
sub
and
pop
je
push
scas
adc
dec
push
dec
cmp
push
mov
rcrl
xchg
and
mov
add
inc
int3
push
sub
push
push
inc
pushf
fnsave
fisubs
pusha
pop
ljmp
cmpsb
cmp
je
aaa
adc
bound
test
mov
pop
lock
popf
lea
inc
mov
xchg
lahf
sub
jns
dec
stos
orb
je
mov
and
icebp
shrl
or
jecxz
addr16
sbbb
fwait
sub
mov
and
mov
xorb
rclb
add
push
pop
xor
loop
dec
stos
js
dec
mov
stos
jbe
xchg
push
add
mov
dec
stos
dec
mov
mov
mov
mov
sar
xchg
jbe
xor
dec
mov
inc
mov
fstps
adc
mov
inc
mov
stc
cs
int
xchg
mov
bound
dec
out
test
test
lahf
and
and
sahf
loop
jmp
push
mov
mov
scas
andl
pop
jne
shrl
lock
adc
aaa
mov
and
push
stos
in
mov
or
add
sbb
cld
rol
mov
jecxz
pop
andl
cld
jne
hlt
jmp
dec
daa
cwtl
dec
mov
sti
loope
fwait
js
mul
andl
jno
jno
xchg
int3
das
fidivl
sub
jle
jge
loop
inc
jl
insb
push
dec
add
add
jns
sub
jle
cld
mov
scas
test
daa
adc
ds
testb
fmulp
rcll
add
int
add
scas
cwtl
sahf
mov
cld
and
mov
push
adc
xor
inc
and
shll
out
xor
mov
pop
or
push
add
imul
cmpsb
jg
sti
sub
popa
inc
inc
scas
les
pop
mov
stos
das
sbb
jne
dec
cli
sti
push
aam
adcb
js
pop
cmp
clc
or
dec
pusha
fnstsw
mov
push
test
movsl
xor
lds
jae
add
int3
mov
fsubp
dec
pop
mov
jae
pushf
gs
repz
pop
bound
xchg
adc
int3
sub
pushf
std
inc
push
arpl
dec
cmp
iret
lret
and
rolb
and
push
test
or
cmp
addr16
ret
mov
loope
ss
mov
dec
xor
dec
pop
xchg
dec
dec
in
cltd
and
pushl
lcall
inc
mov
loop
xor
ss
jge
mov
aaa
cld
inc
cmp
enter
stos
sub
dec
or
jb
jp
aam
adcl
ret
pushl
ror
push
dec
lret
sbb
shll
push
push
enter
ljmp
push
adc
mov
jns
ss
into
jmp
xchg
xor
push
inc
jno
cs
pushf
sub
inc
dec
add
inc
mov
std
xor
test
in
cld
inc
add
pop
dec
xor
inc
dec
leave
sbbb
scas
xchg
cmp
data16
sub
xchg
and
push
cltd
sbb
lds
mov
push
and
notb
frstor
popa
adcb
sarl
add
addr16
fnstcw
adc
outsb
ds
fdiv
push
imul
jae
push
mov
shrb
popf
xor
aad
cmp
add
push
not
std
rcll
inc
xchg
pop
hlt
cmp
pop
shrl
mov
sar
and
jecxz
addr16
sbb
fcompl
jmp
leave
jecxz
mov
in
adc
popa
add
sub
xchg
out
leave
ffree
div
add
cmp
aad
inc
add
shlb
xchg
fcmove
or
jno
pop
xchg
inc
fidivrs
call
xor
scas
es
inc
pop
adc
inc
fwait
insb
jnp
or
fcmovu
fisttpll
mov
inc
jmp
movsb
xchg
cld
ficoms
jmp
xchg
sti
in
mov
xchg
push
fdivrs
adc
lea
icebp
ds
mov
xchg
inc
push
or
jle
enter
or
or
aaa
filds
dec
pop
lods
dec
and
xor
inc
test
lds
sbb
mov
add
jecxz
push
fwait
dec
add
ficoml
daa
int
dec
fwait
xlat
in
cmp
int
xchg
cmp
xor
shll
ljmp
lret
mov
jbe
sub
bound
mov
loop
fwait
loop
les
mov
adc
adc
inc
sub
jecxz
fwait
mov
or
daa
daa
dec
inc
inc
sub
push
out
shrd
push
jnp
in
push
negl
lret
insl
and
pop
sub
ljmp
sarb
ds
jbe
bound
ror
dec
aam
cmp
or
fwait
cltd
dec
lret
fistpll
and
cld
push
pop
mov
lods
aaa
addr16
daa
mov
cmp
daa
rorl
push
mov
pop
or
scas
repnz
or
dec
ss
sub
mov
in
xorb
jp
cmpsb
call
push
clc
out
fadds
imul
jle
cli
daa
inc
out
fsts
mov
lea
mov
jo
jae
dec
rclb
mov
push
mov
popf
cltd
inc
arpl
mov
fisttpl
push
lock
mov
int3
shl
dec
pop
outsb
xor
popf
mov
jmp
aas
dec
ss
dec
dec
jge
out
push
gs
jl
rorl
stc
cmp
push
shrl
mov
add
mov
mov
je
push
std
dec
imul
lock
adc
inc
in
icebp
pop
movsb
fdivl
adcb
add
das
call
in
inc
pop
mov
and
add
add
cltd
mov
in
mov
pop
dec
data16
sbb
insl
loop
aaa
sti
inc
mov
xor
jg
cmp
cmp
pushl
insl
ret
or
mov
pop
int
inc
mov
ss
inc
popf
pushf
xchg
pop
pushf
mov
ds
cli
or
ss
sub
arpl
and
not
lret
lea
cltd
mov
and
xchg
fsubrs
mov
pop
mov
jno
movsb
test
jns
out
int3
xchg
fldt
test
loop
mov
xchg
popa
xchg
add
cmp
loopne
push
xchg
sub
fs
jg
cmp
out
pop
popa
jb
mov
push
dec
repnz
add
cmp
das
fstp
jmp
lahf
jb
rorl
pushf
mov
pop
sbbb
push
sub
mov
mov
movsb
testb
stos
enter
add
fdivr
clc
ret
ret
shll
adc
mov
add
push
cmc
sub
xor
pop
mov
and
sbb
bound
cs
sub
sarl
add
ljmp
jno
xchg
je
pop
outsl
sub
lods
cltd
mov
xchg
jl
daa
js
add
jg
fs
out
movsl
xor
sub
add
xor
lcall
sbb
shr
jmp
push
jmp
lds
shlb
and
sbb
pusha
ja
mov
sub
scas
pop
cmp
test
cwtl
jo
sbb
pop
dec
or
inc
sub
inc
xchg
imul
pop
cltd
add
mov
lods
adc
scas
imulb
pop
xor
movsb
xor
mov
cmp
xchg
cmp
movsb
sub
sbb
push
andl
sti
insb
stos
and
lret
daa
idivb
mov
in
pop
xchg
ret
xchg
lret
xor
push
xor
or
add
arpl
lahf
mov
sti
add
jp
or
icebp
jne
rolb
push
nop
lods
repnz
jnp
xchg
xchg
lods
lea
add
in
mov
pusha
hlt
jmp
js
cmp
mov
mov
ja
test
sti
fsubl
les
xchg
xor
pusha
xchg
subl
push
in
addr16
into
xor
xor
pop
mov
push
aad
popa
inc
stc
ret
jmp
popf
xor
dec
les
stc
dec
pop
and
test
out
pop
mov
lret
push
movsb
andb
mov
fs
scas
ljmp
add
popa
cli
ja
out
mov
les
cmp
xchg
fwait
into
dec
jbe
xchg
test
sub
jo
add
sub
ret
loop
jge
mov
pop
xchg
push
pop
loope
sar
in
inc
mov
lret
sub
add
jb
sub
sub
jecxz
push
out
icebp
in
cwtl
out
dec
fwait
mov
iret
and
pop
arpl
stc
ret
mov
or
sbb
mov
push
ljmp
cwtl
mov
sahf
dec
imul
or
adc
ljmp
mov
cmp
mov
sbb
cli
sub
mov
cmpsb
push
rcrl
add
jle
mov
mov
add
mov
stc
das
aam
psllq
fisubrl
lea
mov
mov
addb
test
mul
stos
les
jnp
push
clc
xchg
gs
xchg
or
sub
stc
xchg
jne
es
fbld
idivl
repnz
arpl
jecxz
cmc
jmp
ret
or
movntq
gs
sbb
stc
imul
std
xchg
imul
mov
stos
movsl
adc
dec
jp
and
flds
push
test
and
scas
push
popa
cld
negb
into
inc
aad
test
cmp
clc
in
mov
mov
or
mov
fistps
aam
out
xchg
mov
pop
add
mov
add
fimuls
and
es
testl
movsl
pusha
outsb
insl
in
mov
inc
jbe
mov
rolb
xor
shll
jmp
pop
pusha
pop
lcall
fwait
mov
pop
jmp
outsl
jbe
add
orb
or
or
iret
push
orb
rorl
xchg
sbb
loop
jb
out
push
mov
push
cli
or
test
mov
into
dec
add
pop
jo
inc
das
pop
adc
cld
popa
push
out
call
flds
pop
or
mov
pop
xor
fs
cltd
xchg
ret
fcompl
xchg
mov
sub
push
fdivs
push
inc
jge
pusha
push
loopne
and
pop
int3
push
push
ret
mov
push
adc
add
push
xor
sbb
pop
xlat
mov
dec
imul
xchg
lods
xor
icebp
jl
push
dec
testl
jecxz
sbb
fidivl
scas
jl
sub
in
lea
inc
das
xor
or
imul
pop
mov
add
xchg
mov
pop
fistpl
aad
dec
out
jb
jg
rolb
sbb
notl
paddd
cmp
xor
stos
fbld
jmp
push
dec
sti
pop
lret
popf
xchg
bound
push
aam
fcoml
mov
das
sub
rcrb
das
jp
stc
andl
xchg
scas
lods
inc
call
pop
xor
xchg
imul
call
mov
and
arpl
stos
hlt
movsb
xchg
or
test
lahf
push
pop
push
lods
xchg
fiaddl
pop
sbb
insb
and
dec
mov
imul
xchg
or
xor
sbb
jne
pop
pop
and
popf
cli
fstpt
ja
test
pop
or
sub
sbb
js
orl
jl
or
inc
in
xor
cmc
sbb
inc
test
mov
lcall
fidivrs
mov
ret
mov
ret
xchg
inc
aad
sbb
test
pop
pop
fnstcw
or
clc
fisubrs
std
and
push
jmp
push
jbe
notb
les
das
or
sub
out
insl
mov
pop
mov
adc
sub
test
orl
adc
jno
mov
xchg
mov
add
mov
or
lahf
roll
test
and
push
jbe
stos
jle
shrl
repz
dec
pop
nop
push
movsl
test
or
ds
scas
subl
hlt
mov
fistpl
mov
mov
mov
mov
and
je
inc
add
and
fiaddl
jno
jae
fs
push
ja
xor
jns
sbb
inc
daa
jne
xor
xor
ss
jp
lods
and
xor
nop
xchg
int
adc
movsb
adc
mov
sbbb
cmp
mov
jns
arpl
je
sub
negb
in
add
mov
subl
sub
aas
jbe
sbb
ss
hlt
cmp
push
jg
xor
jbe
adc
insl
add
xchg
push
sahf
mov
xlat
or
push
call
and
jnp
nop
mov
xor
fs
sahf
cmp
insb
movl
test
inc
shll
stos
in
ret
aam
hlt
pop
outsb
sbb
ljmp
les
cmp
shll
jnp
repnz
int3
out
jb
aaa
ljmp
orb
mov
push
add
fidivrl
jg
and
rclb
xor
and
in
in
sub
imul
pushf
pop
pop
insb
test
fs
pop
dec
mov
pop
adc
dec
add
lcall
fwait
repnz
into
sbb
cltd
scas
out
add
mov
test
lods
xchg
mov
push
mov
fwait
lods
dec
cwtl
cwtl
push
push
jne,pn
popf
xchg
shrl
nop
sub
rcll
sbb
push
cmp
lret
ret
inc
cmp
inc
loope
popa
enter
mulb
in
into
jmp
mov
repz
sbb
inc
test
add
dec
ret
loope
adcb
pop
jg
outsl
cmp
mov
dec
mov
pop
stos
sub
into
jae
mov
not
mov
cli
popa
test
xor
out
or
scas
push
out
loop
push
sbb
ret
aaa
in
scas
aas
jge
repz
ja
xchg
add
shrl
lcall
in
push
xchg
cltd
test
lea
xchg
lcall
mov
and
pop
mov
sbb
fdiv
add
scas
sarb
sub
out
shlb
fnstenv
outsb
dec
inc
dec
jmp
aad
adc
aam
testb
sti
push
test
shlb
or
and
pusha
lcall
xorb
dec
dec
int3
cwtl
mov
jno
ret
xchg
push
jp
mov
subb
es
fistl
jno
int
fucomip
pop
mov
bnd
lods
sub
ds
scas
mov
popf
out
enterw
fnstsw
jmp
imul
jp
jge
mov
push
lcall
sbb
mov
jecxz
rcll
cltd
insb
rorl
mov
dec
mov
or
or
imul
shr
adcl
sbb
andb
jg
out
rclb
cmp
mov
push
sbb
fs
enter
into
mov
push
and
sti
inc
jle
repnz
bound
jmp
jns
sbb
sub
fisttpl
jle
push
into
mov
inc
idiv
bound
xor
push
and
push
jnp
jno
sbb
jne
pop
dec
lds
mov
jno
pop
mov
pop
pop
pop
sub
jmp
cltd
mov
and
fildl
aas
pop
jbe
cld
test
mov
jae
push
cmp
mov
loope
imulb
mov
repnz
pop
imul
scas
rcrl
imul
or
adc
test
mov
cmp
arpl
fs
shlb
pop
push
movsb
daa
inc
mov
divb
cmc
imul
bnd
negl
stos
xchg
jae
push
rclb
adc
shll
imul
jge
sbb
cmp
xchg
push
imul
mov
jmp
test
aam
shlb
in
inc
call
fs
adc
pop
push
pop
daa
popa
push
jno
cmp
sub
dec
mov
cmpsl
mov
sbb
jmp
ficomps
pushf
push
mov
mov
lods
inc
jge
arpl
sub
pop
push
lcall
mov
cwtl
in
add
je
mov
push
or
and
dec
inc
jae
out
xchg
pop
and
pop
cmp
sub
add
xchg
js
jg
mov
daa
dec
aad
adc
push
mov
cld
jns
mov
or
mov
fnstcw
popa
xchg
imul
shrb
xorl
cltd
fdivp
or
mov
insb
js
sub
xchg
pusha
jg
xor
push
adc
xor
dec
push
jo
pop
repz
xchg
inc
fwait
jge
or
in
dec
pop
mov
cli
jmp
dec
lret
addr16
cmp
xchg
inc
push
movl
fsubp
lods
addr16
cmc
push
andl
movsb
jns
cmc
aaa
xlat
shll
mov
jne
andb
lcall
add
xchg
data16
mov
inc
enter
jmp
fbstp
mov
mov
das
mov
push
mov
pop
xchg
clc
fldcw
imul
cs
sarl
test
or
push
aaa
lcall
cs
orb
pop
adc
mov
push
add
push
push
mull
fs
mov
mov
iret
in
inc
lds
addr16
mov
fistpl
xchg
or
sub
ds
cmp
test
jae
add
incl
lods
mov
and
cmc
movsl
ja
or
pop
mov
or
and
sbb
jecxz
sarl
enter
xor
sub
add
cld
cld
pop
jns
push
pop
lret
add
sbbl
mov
insb
dec
pushf
mov
dec
pop
lods
adc
test
sub
pop
push
imul
adc
inc
stos
aam
cltd
dec
jp
push
mov
push
mov
or
cmp
les
lahf
add
pop
in
push
std
push
js
je
mov
imul
stc
xor
int
movsl
lret
jge
out
and
in
or
fwait
mov
xchg
ja
adc
xor
rorl
jnp
inc
mov
xor
cmpl
add
mov
movsb
sbb
jbe
roll
pop
dec
mov
inc
mov
push
aam
and
adc
sahf
sbb
cmp
push
push
rol
xor
repnz
popa
jg
sbb
test
lretw
jmp
push
pusha
cmp
dec
out
and
fiadds
pop
and
fwait
add
mov
xchg
sbb
or
xor
and
mov
xor
and
push
or
push
insl
cltd
jo
mov
int3
repnz
call
lret
push
jae
mov
sub
lock
cmpl
or
and
fdivrl
dec
mov
mov
cli
dec
es
fsubrs
icebp
roll
mov
or
sub
clc
adc
sub
or
xchg
data16
dec
stc
xchg
imul
adc
xchg
xchg
mov
shlb
mov
loopne
xchg
out
stos
sub
mov
mov
loop
jl
popa
inc
stos
cld
xchg
lret
mov
sbb
jae
mov
mov
call
ret
rcll
ljmp
push
mov
cwtl
inc
mov
adc
bound
jno,pt
loop
sub
adc
adc
shll
mov
push
pop
lods
xchg
test
jbe
cli
in
mov
outsb
jo
xchg
mov
aas
rorb
mov
push
data16
adc
mov
iret
or
jge
sbb
fistpll
rcrl
and
mov
call
dec
scas
sarb
stos
sub
push
notb
adc
insl
adc
sub
or
js
addr16
ja
int
aam
cmp
rolb
insl
fsts
fsubrp
mov
inc
mov
jge
add
jns
imul
clc
cltd
shr
pop
inc
sub
push
mov
mov
int
push
sub
pop
int
cmp
testb
inc
and
stos
fmull
pop
imul
mov
xor
aaa
pop
mov
sahf
mov
dec
xor
mov
ja
sahf
mov
xchg
sub
cld
and
xor
add
lds
mov
add
jmp
adc
adc
pop
cld
dec
cld
push
dec
cmp
mov
fstl
and
mov
call
push
jge
dec
stos
cmpsb
or
xor
mov
sahf
xorb
int
and
test
jmp
push
or
pusha
enter
lea
fists
mov
jg
xchg
dec
cmpl
xor
fistps
outsb
aad
outsl
lods
es
mov
leave
sub
sbb
sbb
sub
lret
lret
cs
dec
sbb
lods
popa
lahf
rcr
xor
xor
scas
pcmpeqd
cmp
mov
mov
cs
mov
sub
popa
test
shlb
fs
adc
mov
mov
push
mov
out
pop
jns
icebp
rcll
mov
push
pop
dec
xchg
push
je
ljmp
data16
es
mov
shrl
jb
fnstsw
mov
int
xchg
jno
xchg
push
lret
adc
loope
mov
lods
aas
adc
jmp
sbb
stos
imul
push
es
mov
cmp
sub
ja
mov
pop
pop
or
sub
pop
sub
xchg
jmp
dec
push
jmp
dec
lret
push
aad
adc
out
sahf
xor
xchg
pop
js
lret
mov
aaa
insl
inc
xchg
sub
cmp
ss
insl
aaa
sub
inc
lea
lea
cmpsb
pop
int
arpl
mov
xchg
or
aad
hlt
pusha
lea
repnz
ret
pop
mov
bound
jns
outsb
cld
pop
enter
lds
fiadds
fistl
adc
aad
mov
adc
xchg
cld
xchg
mov
jle
mov
push
xrelease
imul
jl
mov
mov
mov
sub
cs
pop
jge
cmpl
shl
enter
sti
dec
push
ds
scas
and
jb
jecxz
mov
clc
mov
push
repz
ja
inc
jns
adc
push
es
sub
addb
cmpsb
outsl
mov
xchg
outsl
repz
das
mov
nop
lret
push
jno
sbb
rcll
pop
andb
push
mov
sub
cmp
nop
mov
adc
cmc
sub
insl
xchg
jecxz
scas
xor
mov
xor
pop
stos
adc
adc
xor
jp
test
sti
arpl
in
sub
mov
imul
in
fbld
mov
pop
pusha
sub
fs
xchg
fsts
je
inc
cmp
mov
or
in
les
out
mull
or
test
incl
dec
sub
test
dec
iret
and
mov
nop
mov
cltd
push
and
popf
loopne
pop
ss
xor
imul
pop
mov
and
cmp
mov
mov
sahf
data16
daa
emms
or
call
pop
into
outsb
std
in
outsb
pop
pop
push
dec
push
mov
jno
inc
xchg
and
adc
xchg
push
sbb
or
xchg
ja
sbb
mov
int
ljmp
pop
es
adc
and
cwtl
dec
xor
sub
dec
movsb
imul
sub
out
pop
bound
or
mov
or
inc
add
mov
in
sbb
push
lret
inc
mov
and
ljmp
pop
dec
pushf
add
jo
pop
clc
add
adc
jge
out
mov
imul
out
mov
xadd
negl
fucom
popa
or
cmp
loop
xchg
xchg
push
push
and
pop
test
movsb
mov
pusha
stc
xor
notb
dec
push
sub
vpaddusb
bound
daa
cmpsl
xor
int
andl
fmull
xchg
ds
dec
decb
mov
test
jae
inc
add
inc
jecxz
popa
xchg
enter
inc
leave
sbb
jb
inc
imul
addr16
js
adc
add
xor
or
xchg
sub
cltd
jae
clc
ficoml
dec
fsubrs
xchg
imul
icebp
jae
iret
cltd
mov
xchg
pop
mov
cmp
cmp
les
lcall
push
sbb
mov
cld
outsb
fistpl
leave
cwtl
movsb
xchg
popa
xchg
mov
and
inc
arpl
mov
add
push
sbb
lea
insb
and
repz
pop
mov
jp
add
mov
in
lds
sub
pop
ljmp
ljmp
ret
popa
pop
inc
pop
out
xor
adc
aam
jge
aad
popf
repnz
test
popa
inc
stos
inc
jg
out
ljmp
adcl
pop
test
pop
inc
add
dec
out
jo
xor
into
add
sbb
mov
loope
xchg
es
movsl
or
out
push
cmp
sbb
jno
xchg
push
lret
inc
mov
insl
hlt
mov
shrl
repnz
or
jge
popf
loop
outsl
imul
and
rcrb
xor
adc
test
pop
cmp
sub
aas
add
jno
sti
add
pop
cmpsl
push
fcomps
add
or
test
out
or
mov
adc
popa
popa
adc
mov
loop
sahf
mov
scas
loopne
pushf
fs
sahf
jns
cmp
mov
or
push
out
subb
sub
jo
cmp
lcall
out
mov
push
dec
jmp
daa
or
jno
fnstsw
lods
movsb
into
fsts
repz
repz
add
ja
fwait
mov
sub
push
repnz
xchg
fstpt
mov
mov
and
inc
inc
mov
mov
std
xchg
pop
ds
xlat
adcb
out
repnz
cmpsb
cwtl
popa
mov
flds
loop
inc
out
mov
cmp
std
jae
xchg
lods
movsb
je
movsl
mov
sub
clc
imul
and
fstl
in
pop
fcomps
daa
or
push
stc
mull
inc
icebp
in
subb
jnp
pop
push
sbb
shrl
xorl
jmp
mov
out
test
cmp
add
sbb
mov
dec
xchg
inc
cmp
loop
jge
clc
insb
sti
daa
into
pop
addr16
nop
sbb
jp
sbb
arpl
jne
shrb
lea
xchg
jnp
lock
lds
in
push
sbb
sete
leave
fsubrl
push
pop
fwait
dec
gs
jmp
mov
sub
movsb
data16
xchg
push
add
sbb
dec
mov
push
addl
sub
jnp
ds
insb
inc
lret
dec
or
jl
fsubrl
fcmovu
lret
inc
je
outsb
aaa
imul
cmpl
out
or
icebp
jp
in
faddl
in
rcr
add
decb
lret
ds
fsubrp
dec
xchg
mov
sar
mov
xchg
test
adc
out
mov
negl
lahf
mov
push
mov
rep
popf
idivl
popa
ja
scas
lret
pusha
add
dec
addr16
divb
dec
movsb
or
fs
sbb
cmc
mov
inc
ja
xorb
push
cmp
mov
inc
repz
aam
jmp
push
call
jge
inc
and
loop
lea
stos
dec
in
jno
iret
mov
mov
lds
dec
push
push
cmp
dec
sub
jo
das
mov
add
test
ss
lret
cmp
ret
in
inc
shlb
rep
pop
aad
and
mov
and
xor
sbb
les
and
or
xchg
ds
dec
daa
fwait
sub
push
push
add
dec
mov
dec
mov
add
sub
loope
xchg
repnz
xchg
movsb
mov
icebp
xchg
jl
fcomp
mov
xor
leave
push
cld
in
fsts
cmc
jnp
pop
aam
cli
adc
ljmp
fnstenv
xor
fwait
gs
pushw
call
gs
repnz
stos
pushf
mov
pop
ja
lods
or
stc
inc
aad
shr
sub
xchg
dec
fwait
mov
lret
and
enter
xchg
daa
sub
mov
shll
push
rcrl
mov
jl
mov
nop
sub
cmp
cli
xchg
pop
cmp
xchg
gs
arpl
mov
pop
mov
insl
jg
xor
xor
inc
xchg
int
out
call
inc
jmp
add
cltd
add
mov
outsb
fistpll
js,pt
mov
xor
int
in
lea
pop
jbe
adc
xchg
sarb
idivl
fldl
loope
out
push
aaa
insl
imul
imul
pop
adc
sub
arpl
shl
iret
sti
sbb
sub
sub
mov
mov
rclb
or
test
cmovno
std
scas
push
outsb
lahf
pop
ret
mov
sbb
mov
je
js
jns
mov
rorl
pop
sub
cmp
jmp
mov
std
mov
jne
loop
aaa
mov
and
xlat
pop
add
shll
sahf
dec
scas
cmp
stc
sahf
dec
cmpsl
fidivrl
icebp
mov
dec
cmp
xchg
mov
lds
xchg
xlat
sti
mov
push
cmpb
gs
add
mov
sub
mov
lret
ret
mov
push
push
popf
adc
movsl
adc
dec
jecxz
or
and
and
xor
jl
push
je
clc
addr16
pop
mov
div
scas
imul
mov
enter
push
in
flds
ljmp
xor
stos
xchg
imul
cmp
mov
dec
pop
mov
loopne
insl
pop
roll
ljmp
pop
xchg
xchg
sahf
jmp
lahf
pop
clc
xchg
pop
fimull
sti
frstor
xchg
ds
cmp
out
ret
sbbl
inc
ret
sbb
inc
xchg
sbbb
xchg
push
xor
movsl
push
jae
fnsave
pop
cmpsl
cmp
or
dec
or
imul
data16
mov
bound
sub
mov
sbb
fisttpl
and
insl
ret
aad
in
cmc
pop
pop
repnz
fwait
xchg
xchg
outsl
aam
inc
out
xchg
sub
test
test
addr16
cmp
sbbb
ret
fwait
ret
jbe
jb
jmp
push
nop
fists
add
xchg
sub
mov
cld
mov
pop
rcr
sbb
lcall
rcll
mov
xor
je
ss
test
xchg
mov
adc
pushf
lds
cmp
push
xor
and
mov
insb
push
lock
int3
jns
jp
jne
sub
mov
mov
push
mov
xchg
enter
sbb
rclb
jecxz
xor
mov
mov
or
mov
or
gs
xchg
push
mov
lret
out
jl
cmp
scas
or
cs
rcll
jge
and
iret
xchg
cmp
test
xchg
mov
jl
lods
sbbb
in
lret
sbb
fcoms
jae
or
mov
in
popf
dec
lea
jmp
jae
arpl
inc
pop
sbb
fidivrl
mov
ret
arpl
jl
and
and
cmpsl
jge
fldenv
sarl
lahf
outsb
mov
jge
add
inc
pop
or
xchg
shll
cmpsb
mov
test
repz
xchg
in
inc
jae
gs
mulb
mov
xchg
into
stc
adc
bound
jo
imul
cmp
ror
loop
lret
fnstsw
mov
xor
loop,pn
dec
lods
ljmp
push
sbb
loop
iret
xlat
jl
mov
inc
aam
call
pop
pop
hlt
mov
aad
inc
push
repz
push
mov
pop
js
in
inc
and
cmpsl
mov
orl
xor
xchg
xchg
popl
popf
sahf
movsl
jb
dec
jmp
dec
std
insl
sub
sbb
imul
popf
fnstsw
pop
inc
dec
stos
sub
icebp
in
cwtl
add
incb
inc
pushf
in
add
cmp
push
dec
inc
lds
sub
pop
jbe
mov
push
jge
pushf
mov
push
inc
fisubl
imul
push
stos
mov
mov
inc
adc
ss
inc
dec
adc
shll
adc
iret
pusha
and
sbb
fsubr
push
sbbl
sbb
push
mov
xchg
sub
rorb
or
mov
sub
adc
test
pop
lcall
scas
daa
add
mov
cmp
rcrl
popa
loope
pop
in
sub
xor
lret
push
sbb
jg
scas
addr16
pop
cmc
xor
adc
inc
sarl
addl
xor
and
mov
sub
cmp
sti
sbb
sbb
mov
scas
add
xlat
sbb
push
leave
dec
or
loopne
out
pop
ljmp
aad
cld
adc
fsubl
mov
repz
and
jae
pop
loopne
loopne
fwait
testl
mov
sub
scas
adc
insb
adc
leave
sub
stos
xchg
push
lds
dec
mulb
pop
cld
cmp
inc
daa
fwait
add
pop
adc
mov
stos
sbb
mov
xor
and
pop
movsl
jbe
fidivs
test
ret
adc
cmc
mov
add
jno
stos
cmp
lret
mov
sbbl
xor
dec
and
adc
subl
imul
push
cmpsl
not
lock
or
in
jns
sub
shr
mov
mov
jge
mov
dec
je
stos
mov
inc
and
repnz
add
pop
test
stos
pusha
shr
push
sub
mov
mov
lea
insb
dec
lods
ds
movsb
test
sub
dec
lea
inc
adc
mov
or
std
imul
cwtl
cmc
sbb
ss
sub
std
arpl
inc
sub
jge
out
push
pop
dec
push
pop
fstpl
fldcw
pop
xchg
imul
mov
adc
dec
in
dec
or
push
add
push
jne
scas
cltd
js
push
xor
je
out
inc
arpl
inc
add
fdivl
not
jbe
xchg
cmp
inc
fs
aas
push
cmp
pusha
xor
inc
std
cmp
fbld
xor
sub
call
pop
in
scas
inc
rolb
cmp
xchg
int3
arpl
sbb
iret
icebp
jp
inc
xor
fsubrs
fisubrl
outsb
movsl
jno
scas
popf
xlat
negl
loope
aam
mov
je
scas
cli
cmp
push
pop
les
mov
fucomi
lods
mov
sti
dec
xchg
test
cmp
cmpsb
jnp
dec
mov
in
or
inc
sahf
ficompl
in
test
pusha
pop
inc
dec
testb
cmc
dec
inc
cmp
and
xchg
in
fbstp
adc
out
jle
orb
or
push
xor
jns
addl
insl
xchg
cltd
scas
lret
sbb
ja
xchg
mov
push
scas
stos
xor
dec
mov
lea
xchg
and
pop
jl
test
jo
push
adcb
shl
push
mov
push
inc
outsb
lret
xor
inc
adc
xorl
jl
lret
push
xor
cwtl
pushf
sub
or
xor
lock
int
int3
adc
inc
bound
pop
dec
hlt
je
mov
ret
and
inc
add
push
lret
ret
dec
lcall
pop
jmp
sahf
or
push
inc
out
stos
fs
xchg
ljmp
outsb
imul
ret
test
mov
mov
push
inc
jno
shlb
rolb
push
pop
fisubs
movb
lcall
dec
push
loopne
sub
ficoms
mov
adc
push
sub
mov
loopne
into
or
sbb
js
sbb
pushf
stos
jbe
pop
cli
jg
test
inc
hlt
jmp
out
pop
xor
outsl
daa
int
pop
popa
clc
jge
mov
je
popf
iret
mov
mov
jecxz
xlat
sub
jns
shlb
mov
lock
dec
sbb
out
mov
icebp
and
jnp
or
mov
negl
push
pop
sbb
cld
les
sub
mov
and
xchg
cli
roll
jl
sub
setge
lahf
data16
pop
push
xchg
dec
ffree
jb
pop
adc
sti
push
loope
dec
xchg
dec
test
push
sbb
pushf
ds
cs
repnz
xchg
push
xlat
dec
ret
pop
out
jae
mov
push
sbb
mov
sub
mov
jmp
and
ret
es
mov
shll
jbe
ljmp
ljmp
pop
add
jg
dec
movsb
jno
add
insl
mov
loop
or
aad
js
cmpsl
popf
mov
jno
sbb
push
rol
repnz
icebp
and
mov
test
arpl
xorb
popf
and
push
and
push
pop
push
shlb
lret
sub
in
inc
in
lods
outsl
cmp
aaa
pop
outsb
jge
test
xor
ljmp
js
cmc
cli
jae
pop
in
js
add
aad
cmpsl
das
mov
aad
pop
aas
push
xchg
jnp
push
xor
mov
push
adc
enter
sbb
das
lods
push
aas
and
jp
adc
lret
test
rclb
leave
mov
push
mov
aam
and
jle
adc
mov
inc
mov
pop
add
jns
xor
js
das
sbb
sbb
outsl
jno
inc
inc
and
dec
decl
into
mov
jb
fisubl
jmp
in
sub
imul
jl
or
pop
rcll
dec
clc
pusha
arpl
int
jbe
push
sub
cli
into
jae
repz
mov
inc
icebp
and
pop
stos
mov
loope
push
xor
mulb
dec
ds
aaa
sarb
and
dec
mov
xor
out
and
sbb
ja
xor
popf
or
cmp
xor
fwait
add
hlt
out
das
loopne
in
cltd
sarl
push
gs
mov
jo
jb
mov
mov
xor
fs
in
icebp
lods
lret
jo
mov
jb
ja
mov
ljmp
jle
ljmp
in
jle
jge
out
mov
xchg
or
scas
mov
cmp
lea
push
gs
sub
call
push
cmc
dec
es
out
add
dec
and
popf
mov
pushw
xchg
pop
daa
adc
or
xchg
repnz
lods
inc
iret
std
repnz
lds
lret
inc
pop
cmp
xchg
repz
xchg
push
sub
rcr
notb
cmpsb
sub
ret
pop
sub
jnp
adc
rolb
je
movsb
rol
mov
mov
sub
jle
lret
fstps
sahf
sub
dec
imul
adc
push
jns
cmp
pop
cmp
jle
sub
adc
and
fnsave
dec
jg
stos
and
lret
mov
sbb
test
bnd
stos
dec
jmp
xchg
bound
jne
ret
in
fsts
subb
lret
sub
repz
xor
pop
pop
sbb
dec
jb
adc
push
pop
adc
idivb
mov
enter
test
mov
mov
sbbl
fmull
cmp
push
rorb
inc
cmp
dec
and
movsb
push
cmpsb
aaa
pop
loope
push
mov
cmp
mov
int3
cmp
out
es
pop
inc
into
mull
fisttpl
cmp
fs
nop
jle
fstl
test
fisubl
mov
sub
or
add
xchg
stos
push
push
mov
mov
fildl
mov
xchg
in
mov
pop
fwait
scas
inc
sbb
inc
push
pop
add
dec
sub
jbe
xchg
out
mov
cmp
int
xlat
push
sbb
jecxz
xor
inc
or
mov
xor
adc
mov
js
adc
mov
ret
or
pop
adc
jl
ja
and
pop
mov
in
lret
in
das
jmp
xor
mov
inc
clc
xor
in
or
lods
cmp
pushf
push
cltd
cmpsb
push
sub
pushf
lods
pop
adc
out
pause
cmp
cs
sub
inc
frstor
lahf
daa
je
pop
or
out
into
adc
pop
daa
jge
pop
xchg
cmp
add
lods
sub
mov
in
test
aas
outsl
sbb
ds
add
clc
cmp
mov
popf
xor
push
ret
jle
pop
mov
lret
arpl
fstp
ds
mov
mov
test
push
and
cmpsb
or
das
mov
xchg
test
adc
push
lret
add
fdivl
or
xchg
push
sbb
adc
ret
inc
inc
adc
mov
mov
mov
xchg
ffreep
pop
andl
cmp
cli
imul
test
sbb
outsb
ficoms
test
xor
mov
ja
inc
int
outsl
pop
push
loop
adc
lcall
sbb
int3
lods
into
pop
jae
std
mov
mov
filds
popa
jle
sub
dec
ds
js
add
sbb
sti
jne
pop
shl
bound
notl
data16
and
les
xor
in
test
push
pop
cmp
in
cmp
mov
or
push
popa
stos
call
in
test
push
icebp
push
stos
push
adc
mov
xor
pop
xchg
cmp
pop
xchg
test
ds
push
mov
mov
mov
cli
test
push
jb
sub
insb
pop
rclb
xchg
addr16
movsb
mov
add
mov
cmpsl
mull
jbe
cmp
mov
movsl
lcall
mov
or
pop
add
lods
cmc
iret
dec
repnz
outsl
push
mov
push
cmc
lret
ret
mov
push
dec
mov
movsl
test
ret
cmp
add
lret
insl
popa
adc
mov
cmp
inc
ds
inc
push
or
cmp
xchg
mov
and
dec
mov
arpl
mov
push
adc
pop
and
and
push
aad
inc
pop
or
fs
jne
sbb
aas
pop
mov
and
fs
int
mov
addr16
lds
pop
add
xchg
cs
sarl
xchg
inc
ss
ss
fldt
sub
ret
push
pop
push
fs
stos
xorl
imul
rcl
stc
sbb
cmc
scas
jl
outsb
fbstp
out
loopne
cmp
icebp
into
subl
fs
cli
jo
dec
popf
cmp
push
stos
add
sub
shlb
test
out
loopne
mov
xchg
shll
cmpsb
mov
insb
xchg
insl
popa
xchg
push
stos
mov
dec
testb
add
mov
mov
add
sbb
in
imul
test
push
mov
push
loop
add
cmc
fstl
sbb
ja
lods
and
int3
jge
es
in
add
loop
mov
xchg
in
mov
and
inc
cmp
mov
dec
fistpl
nop
scas
push
jne
push
lret
andl
out
notl
movsb
enter
dec
adc
mov
mov
mov
testb
xchg
mov
js
xchg
or
inc
mov
mov
clc
sub
dec
jp
loope
mov
jno
dec
loopne
jmp
loop
mov
pop
aas
xor
bound
pop
ljmp
idivl
leave
cmpsb
into
cmp
xor
rorb
cltd
cmp
sbb
sub
gs
and
push
push
sbb
sub
xor
inc
mov
ror
test
cmc
bound
adc
sar
bswap
and
jp
loopne
and
lods
sbbl
mov
sbb
cmp
andb
inc
adc
repnz
insl
mov
aam
mov
and
jae
push
cmpsl
cmpsb
outsb
cmp
inc
adc
cmc
popa
pop
sbb
mov
pop
das
xor
movsb
mov
pusha
mov
or
imul
lea
lds
movsl
adc
sub
jge
jg
sbb
pop
cmpsl
mov
lret
inc
mov
push
pop
subl
push
sub
cmp
push
test
xor
pushf
mov
pop
xlat
pop
mov
push
addl
out
inc
shrb
sub
loope
aaa
inc
dec
jge
and
andb
out
pop
cmp
or
sbb
pop
mov
popf
out
xchg
test
insl
mov
addr16
pop
roll
push
bound
mov
and
push
xor
ret
and
push
push
jge
push
pop
repnz
xor
sbb
mov
test
scas
into
rorb
pop
cmp
scas
pop
and
int
loop
push
jnp
push
shlb
jecxz
jmp
sub
adc
sahf
or
jg
lret
movsl
mov
mov
lea
enter
fisubrl
jmp
cltd
push
sbbb
sbb
cmp
scas
add
aaa
xchg
dec
mov
jecxz
fdivrp
loop
xchg
ficoms
cmp
pusha
lock
rclb
ds
pop
lods
cmp
es
and
adc
cmp
dec
lock
or
popf
mov
inc
in
ret
xchg
xor
mov
mov
xor
add
pop
push
mov
mov
inc
jmp
push
ja
add
adc
sbb
out
lcall
sub
mov
mov
inc
imul
inc
test
dec
sbb
dec
sub
pop
lcall
xchg
xor
add
push
mov
mov
aaa
aam
lock
lock
push
jecxz
mov
pop
enter
int3
mov
sub
test
lock
ret
sbb
daa
data16
ds
sti
ret
mov
cltd
pushl
cwtl
repnz
push
xor
mov
mov
mov
pop
dec
mov
sub
dec
push
sti
jg
adc
mov
das
fisubrl
pop
jmp
ret
cpuid
xlat
sub
je
or
pop
cmpsb
push
mov
dec
mov
or
icebp
mov
xchg
xlat
pop
jb
mov
inc
je
faddl
clc
push
xchg
test
and
cmp
jg
fisttps
fcoml
or
pop
and
xchg
fdivp
test
mov
dec
sub
in
pop
jp
rolb
xchg
cmpsl
sti
fldl
jb
mov
fsubl
cmpsl
xchg
imul
xor
lret
push
or
pop
ret
mov
add
pop
leave
xchg
xor
outsl
clc
sub
aaa
loope
outsl
inc
outsl
or
sti
mov
outsl
pop
jb
add
cltd
outsl
aam
pop
sar
mov
sbb
sub
pop
push
cmp
popa
cmovp
iret
mov
jp
adc
mov
sub
cs
xchg
loopne
aam
mull
pushf
xchg
or
lds
inc
adc
incl
lret
dec
clc
or
test
sub
test
ret
imul
or
enter
pusha
push
ja
push
pusha
or
shr
pop
cld
test
adc
mov
shl
gs
lock
xor
popf
dec
lds
rcll
mov
sub
cmp
push
sti
scas
out
lock
dec
cmc
inc
addb
sbb
stc
mov
clc
or
cwtl
mov
mov
nop
pop
cwtl
iret
add
cmpsb
mov
dec
fs
insb
hlt
lahf
ljmp
sub
xchg
add
inc
sub
jnp
or
push
repz
shrl
stos
or
inc
push
out
xchg
popf
adc
jb
imull
aas
fxrstor
adc
xor
mov
xlat
sub
arpl
mov
xchg
dec
lods
addr16
sbb
and
cmp
xor
inc
or
outsl
ret
mov
test
aad
imul
ret
ret
xor
mov
cmp
mov
jne
adc
outsl
into
fbld
pop
cmp
xor
sub
daa
mov
imul
add
dec
fwait
ja
movsb
out
xchg
js
jg
hlt
dec
push
adc
daa
dec
leave
shlb
push
lcall
andl
fisubs
add
jne
dec
sub
fsubl
test
es
or
insb
bound
inc
mov
xchg
and
aaa
addr16
daa
mul
mov
pop
cmpsl
push
ja
xlat
fsubl
hlt
data16
push
fs
fwait
mov
sbb
and
stc
push
add
cli
ljmp
hlt
and
xlat
push
dec
cmpsl
sub
jnp
pop
mov
sbb
fldt
or
and
mov
mov
sti
add
insl
inc
pushf
sbb
xor
leave
mov
movb
xchg
loopne
in
lcall
ja
pushf
inc
leave
je
js
in
xchg
iret
loope
test
rol
sub
cmp
cld
push
mov
xchg
inc
push
ljmp
or
bound
pop
mov
int
xchg
fldcw
in
xchg
lock
test
mov
push
pop
es
mov
sbb
lods
mov
cmpsb
mov
dec
mov
dec
sti
stc
dec
loop
xor
xchg
cld
add
fwait
out
and
xchg
mov
pushl
lods
mov
mov
lret
lods
mov
out
jle
mov
divl
pop
mov
insl
cmc
pop
hlt
add
or
fdivl
mov
inc
lods
into
jge
ret
sbb
pushl
cmc
cmp
sub
in
jge
push
cmp
loopne
aad
push
cmc
pop
lret
pusha
or
lahf
jge
cmp
pop
jecxz
add
cltd
cmc
xchg
sbb
jecxz
hlt
jbe
icebp
mov
insb
iret
xchg
sub
jecxz
push
clc
adc
gs
cmp
and
shlb
inc
pop
and
mov
lcall
jg
jb
pop
mov
dec
and
pusha
in
jecxz
jae
sub
jns
mov
out
add
jle
mov
cmp
push
push
outsb
out
imul
sahf
sbb
dec
xlat
sbb
jmp
mov
cmp
cmpb
mov
clc
outsl
in
xor
into
leave
sarb
ret
lcall
pop
mov
into
pmulhuw
rcl
mov
sub
cmpsb
aas
scas
jne
imul
dec
cs
jge
out
enter
mov
test
ds
es
rcrl
and
iret
fistl
mov
adc
cmpsl
sbb
mov
add
cmp
push
pop
push
sbb
mov
pop
adc
jno,pn
push
pop
cmp
jb
mov
add
aad
xorl
inc
repz
ds
push
jmp
mov
cmp
icebp
jg
icebp
push
lcall
dec
mov
jmp
imul
or
push
or
fstpl
fs
lods
mov
dec
jb
sub
sahf
fldt
lea
or
aam
sbb
mov
push
inc
mov
test
add
test
jno
jbe
int3
inc
imul
daa
es
icebp
mov
lods
cs
push
insb
inc
movsb
mov
pop
jne
sub
push
cltd
aad
bound
cmpsl
mov
xor
bound
icebp
stos
inc
lret
addl
int3
adcl
mov
lods
std
gs
lahf
sarl
jae
cmp
mov
jbe
out
divb
push
xor
jle
mov
inc
popf
mov
xchg
push
pop
push
adc
popf
into
repz
or
mov
push
jb
pop
fcoml
dec
repnz
mov
sbb
orl
inc
jbe
xor
jg
test
adc
add
pop
cli
adc
out
xor
fiadds
iret
ret
test
ljmp
dec
mov
add
into
aam
inc
pop
adc
sbb
cmp
test
pop
mov
mov
shl
fdivrp
dec
add
shlb
mov
mov
add
add
push
shll
dec
repz
sbb
xchg
rcll
fsin
fstl
pusha
outsb
andl
sbb
out
and
cld
mov
xorb
mov
sar
repnz
das
xor
lret
push
sub
sbb
sub
repz
pop
das
push
xor
les
mov
and
dec
nop
fldl
xchg
inc
xlat
add
xchg
and
and
adc
daa
cmp
aas
dec
aam
jp
lret
sar
gs
jg
jmp
lahf
push
mov
iret
lret
pop
fildl
and
sub
inc
add
sbb
test
or
roll
aas
mov
inc
lret
mov
inc
xchg
pop
nop
xchg
mov
xor
std
inc
sub
mov
pop
cmp
inc
call
mov
mov
add
lock
pop
lret
sbb
or
lds
out
cmpb
mov
notl
xchg
aas
xchg
pop
mov
js
jmp
push
fcmovnu
int3
push
stos
sub
mov
inc
fcoms
imul
pop
sti
aam
xor
or
cmp
sbb
movsl
hlt
xchg
les
mov
imul
lcall
mov
scas
push
mov
mov
test
addb
mov
mov
mov
cmpsl
sbb
mov
lret
shlb
push
mov
mov
and
mov
and
inc
out
dec
push
sbb
cmpsb
pop
mov
in
and
cmpsl
ret
jp
test
xchg
into
int
inc
inc
gs
jnp
jl
add
dec
fsubrl
decl
and
jae
pushf
sub
or
into
divb
pop
pop
fdiv
fmuls
sub
cmc
mov
sub
add
and
lock
pop
mov
cmpsl
adc
add
arpl
push
pop
inc
inc
or
test
fcomi
sbb
xor
ds
fidivl
mov
jle
loopne
xor
and
sbb
or
xchg
jbe
lcall
xor
ja
test
gs
cld
dec
inc
repnz
sub
out
xor
sub
pop
cmovne
in
in
xchg
inc
sub
std
sub
int3
push
dec
shl
dec
jno
pop
sbb
xor
cmpsl
push
jo
sub
lret
push
push
and
push
inc
xor
mov
imul
aas
jo
mov
push
lock
nop
clc
and
nop
or
jne
addr16
scas
pop
jp
adc
addr16
adc
cmp
loop
push
mov
sub
cmp
push
dec
xor
fldcw
clc
nop
pop
outsl
pusha
or
rcll
out
jae
xchg
rolb
mov
pop
enter
lret
xor
loop
or
mov
cmp
or
decl
sub
pop
fisttpll
add
push
ss
push
push
fstl
xchg
sbb
cmp
and
lds
loop
adc
movsl
cs
pop
enter
jg
add
jp
fwait
xchg
cmp
jnp
in
pop
enter
sarb
jo
xchg
das
int
push
invd
mov
test
push
je
sbb
mov
outsl
add
jns
inc
in
xchg
jg
inc
cltd
push
out
aad
out
cld
pop
jmp
js
ret
dec
sub
cs
movsl
pop
test
das
inc
in
dec
jo
mov
push
add
adc
fnsave
sbb
ret
dec
cs
fwait
lods
jg
test
inc
cmp
movsb
xchg
jae
sub
sbb
mov
in
cmp
and
sub
test
or
or
pop
jno
jbe
ret
and
cmpsb
test
add
push
mov
sbb
or
jne
lock
repz
dec
adc
jo
rorb
fwait
inc
dec
mov
fcomps
push
jnp
cmpl
dec
popa
push
insb
data16
jnp
sub
aam
mov
adc
adc
arpl
mov
out
dec
dec
cmp
mov
push
adc
dec
sub
mov
xchg
cmc
fisttps
vmovhps
push
sub
xor
movsl
cwtl
test
mov
xchg
aaa
dec
xor
push
nop
insb
movsb
sbb
jl
push
sbb
icebp
stos
jg
jecxz
fnstenv
out
enter
scas
xchg
lret
mov
add
insl
push
jnp
jbe
dec
xor
mov
push
xor
jge
cmpsb
arpl
push
shr
call
jp
pushf
mov
jp
cmc
arpl
call
mov
stos
jge
mov
pop
fstps
inc
or
dec
push
mov
mov
pop
out
pop
lret
push
xchg
push
push
mov
sbb
mov
push
loop
ds
push
sub
ret
xlat
xchg
data16
fwait
cmc
push
lods
cmp
jle
in
xlat
xchg
inc
push
pop
xor
mov
or
fmull
mov
loop
sub
sub
das
sahf
push
jno
imul
daa
in
sub
pop
fsubl
lret
pop
sub
daa
xor
dec
and
xchg
jl
mov
mov
enter
aam
sub
stos
insl
ja
sub
inc
rclb
pop
add
mov
push
dec
push
mov
popf
pop
mov
shl
inc
push
in
cmp
das
add
faddl
xchg
or
jne
gs
lea
and
js
xor
mov
dec
das
ror
enter
out
fs
inc
je
testb
sarb
pop
imul
outsl
or
sub
fs
xchg
push
pusha
iret
cltd
sub
and
ret
inc
fmulp
pop
pusha
cld
xchg
hlt
or
lods
stc
in
popf
fbstp
push
cld
pop
push
std
add
les
outsb
pop
add
sbb
sbb
lock
bound
jns
push
add
push
das
lret
xor
sbb
stc
jae
and
sbb
daa
std
loopne
imul
sti
or
xor
bnd
dec
mov
jmp
mov
mov
clc
fstpl
shlb
in
fisttps
repnz
adc
pop
repz
xchg
mov
dec
dec
jno
mov
stos
inc
sub
inc
inc
scas
jle
xor
xchg
int3
pusha
pop
sub
icebp
bound
or
mov
test
xchg
jle
xchg
cmp
cmpsb
sub
dec
jmp
dec
cmpb
sahf
mov
cmp
push
imul
cwtl
sub
xchg
pop
inc
inc
pop
test
out
or
nop
idivb
jp
in
loope
mov
cmc
inc
mov
pop
stos
jo
cmpsb
jp
xor
adc
int
cmp
sub
sti
clc
adcb
in
jp
fwait
adc
pusha
gs
dec
push
lea
mov
jecxz
sub
ds
js
sbb
inc
cwtl
xchg
mov
loop
mov
faddp
dec
nop
mov
cmc
jmp
test
ret
shll
bound
fsts
stos
cmp
jns
cmpsl
lock
hlt
leave
movl
pop
call
mov
int3
dec
cwtl
inc
ja
out
clc
daa
aaa
xlat
imull
mov
push
xchg
adc
ds
addr16
fadd
fldl
insl
inc
push
xor
add
mov
jl
out
mov
inc
or
lahf
mov
fsubrs
insb
cli
sbb
mov
mov
pop
cmp
divb
cmpsb
inc
lea
cmp
out
adc
jg
xor
jp
inc
in
ja
lods
push
sbb
xor
lret
pop
sti
and
mov
push
sti
mov
xchg
inc
cmpsl
sahf
enter
sbb
jecxz
lcall
lock
push
data16
fistpll
xchg
mov
jbe
dec
movsl
mov
sub
test
mov
jns
repnz
lahf
jns
cmp
aad
and
fidivl
inc
cwtl
in
dec
mov
jl
dec
xlat
push
rcl
aad
mov
js
and
xchg
xor
orb
lock
lcall
clc
cmp
mov
jnp,pt
fidivl
and
jg
add
pop
fidivs
push
rcrb
idivb
cmp
cmp
push
sbb
jecxz
mov
lret
cltd
dec
rorb
in
mov
mov
out
mov
ret
out
sbb
mov
test
stos
add
fstps
xorb
pusha
cmp
out
mov
inc
pop
rcrb
insb
push
mov
mov
test
pop
shrb
sbb
adc
cli
mov
xor
or
ljmp
dec
inc
mov
dec
xorb
stc
inc
aaa
xchg
out
mov
loopne
aaa
and
lret
fwait
aad
inc
loop
xchg
mov
dec
push
or
sub
xor
lret
aaa
popf
shlb
xor
test
mov
xor
inc
pop
xor
jns
lods
jmp
and
repnz
mov
mov
inc
ss
adc
outsl
repnz
das
je
hlt
mov
aas
inc
in
mov
lds
or
pop
inc
mov
jns
ret
hlt
aad
adc
ficoml
sub
fcomi
or
or
ret
ret
mov
out
sbb
insl
stos
ss
ja
stos
sbb
xchg
sti
jg
cs
adc
inc
jb
inc
dec
sbb
leave
in
out
cmp
xor
mov
cs
inc
and
cmp
xchg
dec
incb
sbb
dec
push
imul
out
cltd
cmp
xchg
mov
cmc
cwtl
push
mov
pop
mov
and
insl
mov
add
ljmp
add
loopne
loope
int
fwait
aam
push
add
inc
addr16
cmp
fists
mov
clc
popl
int
mov
or
sbb
ds
xchg
mov
pop
jne
out
mov
adc
cwtl
jnp
and
mov
xchg
mov
xchg
xor
pop
lret
cmp
enter
jl
push
adc
pop
icebp
hlt
lods
sbb
lds
mov
xor
mov
jb
jo
into
pop
push
adc
pop
lods
in
mov
mov
dec
mov
in
adc
pop
inc
cmp
xor
sub
imul
jmp
lea
push
icebp
jnp
mov
pop
xlat
std
ss
dec
dec
cmp
pusha
pusha
leave
pop
inc
xor
addr16
lret
push
xchg
push
cmp
xchg
sbb
sub
and
rcrb
lahf
iret
fwait
es
mov
mov
pop
sarb
or
adc
cltd
out
jecxz
add
adc
jmp
mov
add
ja
bound
push
icebp
dec
mull
fldl
sub
cmp
leave
jns
cltd
mov
icebp
mov
or
es
push
in
jge
xchg
rcrb
ljmp
and
adc
add
inc
jecxz
pop
sbb
cmp
add
test
sub
adc
xchg
push
sub
leave
or
adc
mov
sbb
fmul
shlb
xor
out
cmpsb
in
repnz
jno
inc
xor
and
into
dec
sbb
push
addb
mov
sbb
dec
fildl
and
icebp
ds
xorb
xchg
rol
or
fsubrl
inc
sub
cld
movsb
dec
cmpsl
mov
das
mov
xor
test
sub
andb
or
sahf
insb
lea
aad
mov
das
add
adc
movsb
std
ljmp
insb
cmpsb
lds
aam
xchg
popa
cmp
push
dec
dec
sub
ljmp
add
scas
mov
sub
and
pushf
pop
and
sbb
les
dec
jae
fnstenv
cwtl
cmp
arpl
nop
in
hlt
aas
test
adc
mov
test
call
jnp
jb
ror
pop
mov
call
pop
adc
mov
cltd
js
push
dec
jl
imul
inc
add
fidivrl
ds
dec
jno
add
xor
jns
mov
mov
rcrb
xor
inc
push
div
mov
cltd
add
dec
mov
cwtl
sahf
or
lret
mov
xor
mov
mov
xor
mov
cli
mov
std
jb
insl
ja
dec
orb
mov
pop
rcl
xor
ficoml
loope
outsl
jle
sbb
sub
ffreep
dec
jne
mov
repz
pop
push
sbb
fldl
enter
xor
mov
aas
xor
mov
subb
push
outsl
xchg
jbe
into
inc
out
outsl
in
add
je
ret
aam
adc
insb
sub
ss
fisubs
iret
push
int3
aas
pop
dec
sub
jl
pop
push
shl
xor
dec
shr
dec
jg
push
pop
dec
cld
inc
dec
arpl
or
cmp
dec
cmp
cmpsb
jb
pop
js
mov
jno
or
clts
int3
inc
pop
and
imul
fcoms
mov
inc
xchg
rclb
lahf
lock
adc
loope
push
cwtl
adc
inc
iret
add
in
push
in
rclb
push
cli
call
roll
cmp
jns
jle
aam
mov
out
call
fs
int
fcomp
xchg
xor
cmpsl
rcl
cwtl
into
enter
cltd
dec
mov
int3
ja
mov
dec
in
scas
sbb
shll
add
jmp
push
sarl
movsb
outsb
lods
bound
dec
cmp
std
xchg
mov
adc
push
fsts
movsb
das
pop
repz
sbb
jmp
jae
push
hlt
mov
push
inc
pop
popf
inc
pop
movsb
sub
push
add
push
mov
add
dec
push
cmpsl
push
repz
arpl
arpl
jo
rorb
adc
xlat
cmp
push
inc
sbb
add
loop
shlb
cmp
and
or
dec
frstor
jmp
movsb
dec
jnp
or
adc
pop
pusha
es
rcl
inc
cmc
cmp
aam
inc
pop
scas
je
cmp
les
add
shrl
xchg
jbe
test
xchg
ret
daa
push
cld
mov
add
jbe
jne
fistps
mov
es
xor
ret
je
jle
int
fidivl
out
test
aaa
dec
add
xchg
fisubrl
jecxz
inc
adc
mov
gs
jno
cltd
pop
pop
push
mov
pop
xchg
inc
push
mov
or
je
add
sub
pop
sub
xchg
popa
rcrb
mov
mov
push
call
cwtl
push
movsb
mov
inc
out
sub
and
mov
mov
emms
arpl
jle
lods
sahf
int
test
lea
cmpl
sub
inc
jae
loope
push
and
jbe
popf
push
push
cs
push
popa
dec
mov
movsb
dec
arpl
pop
dec
shll
push
jge
test
loop
push
call
ja
fcmovnu
ficomps
sub
mov
lret
sub
jbe
xchg
movb
sbb
in
movsl
ja
lock
dec
jmp
jb
xor
add
call
mov
xor
loopne
xchg
cmp
jns
arpl
test
xchg
sbb
and
push
push
mov
or
xchg
fucomp
jl
sub
aam
stos
jo
sti
cmpsl
cmp
sub
lds
sub
sub
loope
loope
pop
lds
lahf
and
xchg
mov
cmp
inc
nop
divb
jno
pop
inc
jle
gs
cs
and
pop
sub
cmp
mov
jne
repnz
sub
hlt
scas
inc
xchg
or
pop
and
fiaddl
insl
movsl
mov
mov
test
cltd
or
inc
cmp
repnz
popa
imul
adcb
jp
div
out
dec
addr16
je
stos
sahf
popf
into
iret
orl
pop
js,pn
addr16
mov
fdivr
int
ds
fmuls
in
insb
pop
inc
inc
xchg
xorb
pop
add
test
loopne
push
and
sub
xchg
es
sub
xor
andl
and
in
inc
outsb
xchg
mov
pop
aas
pop
ja
lret
scas
mov
imulb
lods
sub
jl
test
loop
sub
dec
pop
mov
mov
pop
jne
push
xchg
imul
xchg
push
lods
adc
jge
push
xchg
shrl
rcrl
testl
aas
aam
sbb
jg
loopne
sub
lret
sti
push
test
xchg
pmuludq
push
cltd
xor
cmp
push
sbb
and
scas
push
sub
pusha
in
popa
mov
insb
aad
fcoms
aad
fldl
push
jb
adc
fisubrl
sbbl
je
sub
imul
adc
push
mov
cld
data16
enter
test
push
ljmp
fmuls
leave
mov
adc
test
ja
lahf
call
sub
sub
sbb
or
lret
mov
add
int3
mov
pushf
adc
loopne
xor
pop
fcom
jmp
mov
inc
scas
inc
bound
jmp
insl
or
mov
jbe
xchg
adc
mov
push
push
push
outsb
shl
pop
sbb
loop
call
xor
inc
jo
nop
lret
cmpsl
fbstp
mov
cmp
pop
je
arpl
sti
mov
jge
xor
ja
and
or
in
and
jnp
ret
lret
or
jmp
push
cmpsl
jge
and
shlb
jo,pt
dec
rorl
mov
cmpsl
push
dec
outsl
add
pushf
xchg
push
dec
add
gs
sub
int3
pop
and
or
add
add
adc
mov
lret
repnz
push
stos
lahf
stos
call
push
mov
jbe
pop
pusha
imulb
mov
dec
dec
daa
push
icebp
icebp
mov
jp
test
stc
sbb
nop
out
cmp
pop
call
jecxz
mov
jmp
xchg
std
xor
test
cltd
adc
push
dec
addl
stc
cmpsl
aas
push
arpl
push
out
movsb
inc
add
jecxz
mov
lret
jb
inc
dec
inc
aam
fildll
add
mov
adc
cmp
mov
jns
lea
mov
insb
xor
lods
fmul
das
sub
mov
dec
ja
jae
inc
jp
mov
and
shrb
add
cmp
fwait
adc
rolb
push
cltd
cmpsb
fsubp
sbb
inc
imul
dec
adc
pop
ret
cld
or
lds
jb
pop
es
sbb
addr16
mov
inc
xor
or
subb
inc
es
pop
fstp
pop
pop
lods
fndisi(8087
movl
pusha
sbb
xchg
jl
add
lahf
ret
roll
fs
test
xor
in
adc
xchg
inc
cld
daa
inc
lret
cmp
xor
dec
sub
jne
icebp
je
fcmovne
dec
or
fcmovnb
lret
add
clc
fwait
adcb
mov
mov
mov
shr
insb
test
negl
or
clc
push
jg
push
cs
rep
enter
pop
pusha
mov
adc
mov
je
dec
lock
test
scas
jmp
pop
sbb
inc
cmp
stos
testl
sub
rclb
mov
add
mov
sbb
mov
lods
ja
sub
fs
and
dec
jbe
ljmp
aas
cltd
xor
insb
jge
cmp
mov
add
sbb
pop
mov
push
stos
mov
xchg
scas
cmc
sub
dec
fidivrs
clc
movsl
scas
cmp
pusha
xchg
leave
stos
sbb
and
mov
outsl
outsl
mov
inc
sti
lock
pop
movsb
adc
add
test
jl
and
mov
pop
sub
into
adc
aad
push
mov
das
mov
adc
ret
sbb
add
xor
scas
cld
push
adc
inc
lahf
imul
pushf
jmp
bound
mov
sti
and
outsl
jo
bswap
ret
adc
int3
int3
inc
je
aam
dec
mov
cmp
pop
xchg
test
in
cmpsl
push
dec
xor
gs
push
mov
movsl
pop
push
cmp
push
jecxz
mov
xchg
xchg
mov
nop
xor
xchg
fcomps
out
xchg
push
in
inc
mov
push
imul
insl
sbb
push
jmp
test
sahf
or
call
jecxz
cmp
outsl
hlt
in
insl
and
and
in
lods
in
inc
pop
mov
arpl
jle
mov
arpl
or
mov
ljmp
pop
call
pop
lods
pop
mov
lds
and
sub
mov
dec
adc
sub
inc
adc
push
daa
fisttpll
jo
sahf
outsl
push
pop
mov
fs
sub
mov
dec
jns
mov
mov
and
insb
mov
sub
movswl
fstl
repz
jno
jbe
cwtl
pop
out
xchg
cs
xchg
in
iret
push
ret
pusha
in
mov
out
or
adc
inc
dec
imul
scas
xor
pop
popa
in
jne
jnp
xchg
into
and
je
out
cmp
adc
or
fdivs
or
jecxz
cmpsb
cltd
movsl
aam
out
ret
cmp
aaa
mov
cmpsb
adc
and
xchg
push
mov
sub
out
mulb
xchg
inc
mov
mov
xlat
pusha
mov
xlat
or
mov
cmp
arpl
mov
xchg
into
ret
sub
jns
xchg
pusha
enter
pop
stos
mov
ja
cmp
cs
jg
jnp
jp
mov
cmp
daa
mov
imul
jmp
push
jae
mov
xor
push
daa
fildll
fstpl
inc
cmp
jno
std
cwtl
inc
lods
mov
cltd
push
pop
lret
xchg
aam
sbb
inc
sbb
inc
shlb
mov
and
jmp
es
lahf
mov
cwtl
pop
jg
pop
aam
cmpsl
repz
lcall
test
shl
and
fistl
push
lods
testl
mov
aad
adc
jl
fiadds
cli
fbld
xor
mov
out
test
add
xchg
push
mov
dec
push
mov
pushf
push
not
std
daa
mov
sub
jecxz
nop
popf
mov
and
jecxz
jno
mov
jecxz
cmp
adc
notb
push
pushf
xchg
shl
mov
pop
pushf
clc
repnz
jmp
lock
cmp
aam
adc
imul
shll
jp
pop
xchg
leave
ljmp
sti
call
mov
addr16
shl
dec
adc
loop
int
push
out
lods
mov
es
xor
call
imul
fstpt
fwait
ss
fincstp
nopl
and
test
mov
sbb
mov
les
lods
push
aas
pop
sar
aaa
mov
fisubl
ja
dec
sbb
inc
imulb
lea
or
test
sbb
pop
jp
stc
or
out
push
mov
mov
aad
icebp
add
adc
fadd
adc
repnz
cwtl
ds
or
stc
push
push
outsb
jmp
push
out
clc
mov
sahf
dec
repz
sbb
pop
push
dec
fimuls
fldenv
xor
negb
sbb
mov
dec
xor
push
mov
dec
cmp
push
jge
pop
push
inc
sub
jbe
out
out
lahf
outsl
jbe
pop
fbld
pop
ret
push
mov
mov
pop
jb
arpl
add
and
in
sti
or
add
mov
add
xor
dec
inc
nop
sub
dec
enter
imul
cmp
sbb
xchg
pop
cmpsb
sub
movsb
test
sti
xor
dec
aam
or
sub
andl
fsubs
out
dec
and
out
dec
jbe
scas
sub
aam
cltd
fnsave
jle
push
call
sub
xchg
into
xchg
push
sbb
aaa
arpl
gs
mov
inc
add
mov
jne
xchg
jge
jge
add
xor
sbb
cmpsb
xchg
and
fcoml
mov
out
ds
xor
xor
xchg
imul
sahf
popa
rolb
sbb
inc
sub
lods
test
sbb
cwtl
fistl
scas
scas
aas
call
sarl
stc
insb
add
xchg
stos
xlat
mov
xchg
add
or
pusha
push
test
stc
pusha
lea
out
insl
xchg
inc
push
mov
or
das
cmp
subl
or
jmp
xchg
leave
mov
mov
dec
xor
or
test
stos
ljmp
xlat
mov
or
pop
mov
je
mov
sbbl
les
mov
pop
mov
fcmovu
dec
push
pop
mov
push
ss
and
mov
inc
sbb
in
outsb
fisubrs
adc
mov
and
outsl
addr16
fmull
mov
ficompl
cmp
int
adc
fsubs
das
fwait
jg
stos
mov
pop
dec
or
adc
mov
mov
lret
dec
add
cwtl
mov
xorl
pop
xchg
jae
xchg
out
lods
movsl
xchg
cmpsb
cmp
fimull
nop
inc
xor
add
adcb
bound
sub
xor
or
call
cmpsl
push
inc
push
sub
loop
sbb
push
push
or
cld
test
dec
cmp
adc
daa
sub
inc
scas
jecxz
sub
lock
mov
leave
sbb
lahf
adc
insb
jae
xor
and
imul
int3
xor
ret
jle
cltd
test
or
xor
lret
stos
adc
fimuls
jnp
xor
cmpsl
repnz
dec
xor
fsubl
jbe
xor
fnsave
sbbb
movsb
out
addb
jo
lcall
mov
cmp
rorl
mov
test
fyl2x
push
hlt
cmp
mov
pop
fsubp
jnp
jae
pop
movsl
add
dec
cmp
jb
cmc
test
push
pop
mov
insl
sbb
popa
outsb
push
call
inc
mov
xor
xchg
mov
cmc
lock
test
dec
cmp
mov
push
inc
repnz
or
fildl
xchg
add
loop
mov
gs
adc
mov
test
pop
xchg
cmp
ljmp
push
pop
ret
xchg
lret
cltd
imul
or
xchg
fstpl
ret
sbb
adc
xor
push
rcr
fsubrl
inc
adc
jge
stc
shlb
xor
gs
loop
inc
lods
sub
dec
sbbl
iret
inc
and
aad
mov
rorb
icebp
sbb
dec
leave
inc
cld
inc
in
mov
pop
cld
adc
adc
mov
or
pushf
mov
loope
ja
ds
mov
lret
sahf
negl
pop
sub
inc
enter
sbb
push
test
loopne
sub
xchg
mov
push
outsl
popf
fsubrl
movsb
jmp
std
xor
arpl
notb
add
inc
mov
repnz
inc
dec
push
push
rcll
xchg
push
in
enter
out
pop
movsb
mov
xor
fcmovb
cli
push
mov
lret
ljmp
add
out
adc
cmp
enter
data16
inc
jge
mov
sahf
test
sbb
pop
daa
jp
push
sbb
xor
mov
mov
dec
mov
movsb
pushf
in
ret
push
aad
imulb
negb
in
cmp
stos
cmp
mov
push
jp
dec
jle
mov
cli
jl
icebp
addl
outsb
mov
xor
xor
test
cmovne
imul
pusha
rcrl
sbb
loopne
pop
pop
xchg
repnz
sbb
pusha
incl
btr
icebp
xchg
cs
sub
outsb
aam
jne
mov
mov
add
movsb
mov
cmp
aaa
repnz
and
sbb
and
pop
and
sub
mov
mov
sbb
and
scas
add
int3
cmpsl
in
push
int3
push
mov
push
shrl
fildl
or
xchg
mov
cmpsb
sahf
stos
add
adc
ss
int
mov
push
decl
and
dec
jo
repnz
clc
mov
and
rcrl
lods
ljmp
ret
jns
insb
push
xchg
xchg
inc
pop
nop
in
pop
call
leave
push
dec
xor
sbbb
shrb
shlb
ja
in
out
adc
add
push
cltd
push
dec
jp
adc
cmpsl
lcall
mov
sbb
addb
ret
popf
mov
leave
adc
add
std
cmp
sub
mov
pop
xchg
das
daa
inc
xchg
aaa
jns
mov
mov
ret
inc
jne
divb
loop
pusha
xchg
and
jb
hlt
ret
or
cli
in
jno
mov
sets
adc
out
push
jmp
or
nop
xchg
insb
xor
push
repnz
sbb
jl
inc
and
dec
into
stc
scas
sbb
sbb
cmp
adc
arpl
jecxz
pop
mov
rolb
xor
sti
push
pushf
test
adc
imul
push
cmp
push
pop
mov
clc
out
gs
push
iret
pop
mov
jle
fstl
fstpl
outsl
xchg
cmp
mov
jne
sar
std
add
mov
arpl
negb
pop
imul
dec
mov
jo
cld
daa
push
mov
nop
adc
push
push
xchg
push
jg
mov
jl
sbb
scas
push
mov
mov
jle
daa
shl
inc
enter
imul
and
or
insl
or
imul
lods
out
xor
mov
pop
out
pop
xor
inc
jg
idivl
xor
inc
test
syscall
test
scas
outsl
fisubrs
test
mov
cmp
jle
sbb
xchg
cs
xor
xchg
dec
and
pusha
adc
arpl
sub
scas
mov
outsb
dec
lcall
int3
insb
cmpsl
leave
mov
mov
std
test
sub
repnz
icebp
out
cltd
and
ljmp
into
sahf
cs
xchg
jle
or
jb
fs
adc
repnz
sarb
mov
cmp
dec
lret
out
clc
cli
and
push
divb
dec
lret
scas
mov
mov
aam
mov
mov
adc
fstpt
push
jns
shrb
inc
cltd
inc
push
push
cli
mov
imul
inc
pop
arpl
popa
lods
popa
inc
push
stos
jle
jae
decb
jp
sarb
jns
lea
repz
cmp
xor
test
adc
or
push
leave
mov
sahf
sub
xor
lea
dec
pop
sub
cmp
cli
push
lds
aaa
sti
push
or
push
jecxz
xchg
fisttpl
adc
cli
bndstx
inc
xor
lret
call
call
jle
jno
cmp
adc
mov
nop
ficoms
xor
mov
fstpl
aaa
mov
loopne
inc
scas
adc
mov
sub
int3
and
arpl
sub
add
adc
xor
notl
jae
jb
jecxz
cmp
xor
and
bound
xchg
outsl
dec
add
jae
into
push
push
pushf
data16
out
fcompl
mov
fldcw
fdivrs
cmpsb
lret
cmc
mov
loopne
xchg
xchg
fstpl
jecxz
jns
jne
or
lret
jp
mov
jne
cltd
shll
sarl
mov
jle
cwtl
je
mov
add
jg
jg
push
xchg
wbinvd
ret
movsl
call
sahf
jbe
sbb
and
sar
mov
add
push
jb
xor
popa
cs
xor
sbb
clc
in
popf
adc
sub
aaa
mov
push
das
les
adc
rcrb
jp
mov
xchg
push
scas
push
sub
clc
mov
shll
in
push
mov
or
imull
pop
fstl
sub
xchg
and
movsl
mov
fs
mov
sub
jb
cmpsb
sub
pusha
cmpsb
xchg
out
mov
scas
cmpsl
ds
enter
mov
insb
pop
cmpsb
fwait
dec
enter
pop
mov
loop
shl
fsubl
cmc
popf
xchg
pop
inc
clc
pop
lods
scas
or
push
pop
nop
cmp
sbb
mov
jae
xor
sbb
ja
push
or
rcrl
jecxz
cli
cltd
or
or
leave
sub
shll
jg
cmp
hlt
and
arpl
sahf
inc
in
mov
lahf
push
push
or
cmc
pop
insl
mov
xchg
inc
in
out
push
out
jmp
xchg
sub
pop
addr16
xchg
cmpsl
popf
dec
sbb
adc
stos
mov
jl
xor
in
sub
mov
mov
xor
inc
ja
aas
cmpsb
or
int3
mov
in
jecxz
test
xchg
cmc
mov
jae
mov
test
negl
xor
stos
add
or
dec
pop
jp
scas
outsl
lret
ficoms
addr16
iret
out
push
xchg
cwtl
push
cmp
loop
mov
iret
adc
mov
pop
dec
and
daa
cmpsl
mov
negb
int3
sub
jo
cmpsl
pop
jecxz
lods
add
pop
lods
mov
or
lods
mov
sbbl
and
pop
add
cmp
das
jecxz
loope
popf
shrl
aam
out
jmp
cmp
data16
ret
je
ljmp
jge
mov
mov
clc
inc
les
std
iret
mov
or
dec
jl
lahf
cmc
out
mov
ljmp
add
mov
jbe
aas
lret
add
jne
in
push
mov
pop
cmovnp
sbb
aaa
push
js
lds
lods
mov
sti
cmpsl
aam
inc
adc
dec
add
jno
imul
jmp
test
fwait
pop
mov
mov
push
xchg
iret
fs
sar
cmp
or
arpl
pop
negb
cmp
mov
out
in
mov
and
mov
push
lock
ret
imul
fs
sub
nop
scas
cmp
dec
push
out
add
pop
sti
mov
jnp
lods
or
cmc
sbb
xor
jmp
call
push
je
sbb
aaa
int3
jg
push
pop
mov
adc
xor
in
js
jp
fdivs
pop
inc
test
cmp
testb
mov
movsl
or
lret
outsb
or
mov
jb
dec
cmp
pop
adc
adc
lock
mov
fdivrl
jbe
std
add
pop
mov
cmpsb
mov
aas
scas
mull
cmpsb
adc
pop
inc
enter
bound
mov
jae
fwait
cmp
loopne
out
jecxz
dec
xchg
rcll
sbb
or
leave
inc
add
out
mov
rclb
in
dec
pop
insl
jnp
imull
sbb
mov
push
jne
xchg
sti
movsb
ret
arpl
xchg
sbb
lds
fs
in
push
scas
cwtl
je
jl
out
inc
xchg
out
add
in
sub
in
iret
jns
adc
fistps
push
jo
pop
dec
mov
add
inc
mov
sub
cmp
data16
sbb
pop
js
mov
mov
test
out
push
aaa
pop
mov
filds
shlb
imul
mov
push
jb
andl
push
pop
sbb
push
xchg
shrl
mov
mov
mov
sbb
call
push
repnz
jo
inc
and
popf
add
dec
xchg
jb
cmp
push
mov
aaa
jg
cwtl
jle
and
sub
bound
dec
shll
and
mov
cmp
mov
jecxz
subl
pop
jecxz
mov
mov
cmc
mov
inc
rcrb
or
mov
pop
mov
ds
dec
fstp
push
sub
bound
insb
add
adc
addr16
pop
aad
fldenv
out
cmpsb
out
outsl
aaa
sbb
je
daa
mov
xlat
pop
push
xorb
or
in
sub
lods
add
sub
cli
push
divb
add
pop
stc
mov
ret
addr16
cmc
ret
add
xchg
jecxz
adc
imul
xchg
cmp
lds
out
xor
or
aam
dec
xchg
push
mov
ss
sbbl
mov
call
arpl
mov
ja
xor
mov
adc
or
mov
leave
fnstenv
mov
cmp
dec
mov
int
in
stos
paddd
pop
and
pop
xlat
pushw
sti
cmp
inc
add
jns
stos
lcall
pop
cmp
ds
push
mov
in
out
jmp
ret
prefetch
cmp
xchg
pop
sub
add
ret
dec
jg
inc
test
pop
xor
les
scas
shll
pop
in
movsb
mov
adc
dec
sbbb
lods
mov
out
xor
arpl
jns
pushf
mov
je
outsl
sbb
push
mov
and
shld
or
js
push
aam
cmp
adc
addr16
test
clc
inc
pop
add
scas
sub
daa
pop
sbb
int
cmp
pop
adc
sbb
ss
or
lea
lock
jno
sbb
and
cmp
iret
mov
pop
pop
stos
adc
jne
cmpsb
cmpsb
cmpsb
pushf
ret
xchg
aad
out
mov
in
cwtl
sub
xchg
and
ss
test
out
inc
cli
xchg
cmp
repz
mov
lods
xchg
mov
pop
mov
xchg
lret
jbe
movsl
addr16
repz
fwait
out
jecxz
es
loope
adc
xchg
dec
jo
mov
cmp
aam
test
cmpsb
mov
hlt
lahf
lret
mov
inc
cmp
stos
xor
mov
call
xor
or
dec
add
ficoms
adc
lea
inc
sbb
scas
or
pop
insl
scas
pop
into
add
inc
xor
mov
clc
rcll
push
sahf
mov
jp
mov
mov
pop
push
xchg
pop
sbb
pushf
loop
fisubrs
roll
ficoms
cmpsl
cmp
leave
fmull
adc
int3
xor
mov
sub
insl
inc
sub
out
jle
repz
jg
out
mov
mov
loop
call
dec
sti
push
leave
cmp
lret
test
mov
or
adc
xor
lcall
mov
scas
loopne
push
sarl
cmpl
icebp
dec
out
mov
sbb
pop
dec
adc
xlat
lds
sbb
dec
in
js
inc
enter
lgs
mov
movsb
cltd
mov
lcall
lahf
sahf
mov
imul
mov
xor
jae
call
int
outsb
aad
pushf
mov
mov
insl
ret
bswap
out
lret
das
mov
fisubl
inc
mov
lds
jo
stc
cmpb
shrb
loope
rclb
sub
push
loopne
xchg
adc
enter
and
sub
push
inc
cmpsb
mov
pop
in
mov
adc
ret
mov
out
shl
fxch
movsl
push
in
xchg
pop
lds
popf
leave
mov
imul
popa
mov
popf
sub
daa
push
jle
sbb
pop
xchg
inc
xchg
mov
inc
xchg
gs
addb
cmp
sti
aas
mov
jnp
push
testb
adc
add
imul
push
mov
outsl
cli
xchg
iret
push
xorl
shrl
jge
inc
xchg
aam
pop
mov
leave
lods
test
jno
lds
fistpll
test
loopne
pop
repz
lods
ss
adc
jle
xor
pop
dec
outsb
and
addb
inc
mov
push
shlb
push
mov
cmc
or
jb
dec
and
fadds
adc
sar
inc
mov
pop
mov
repnz
ljmp
or
or
aam
sub
sub
jne
pop
pop
mov
fisttpl
popf
shll
pop
dec
fs
and
dec
outsl
sbb
test
outsb
xchg
xchg
dec
test
es
xchg
mov
push
inc
test
loopne
inc
dec
dec
xorl
jecxz
arpl
cmp
jns
push
push
out
ret
cltd
push
push
gs
mov
fs
shlb
jl
arpl
repz
mov
cmp
mov
cmpsb
movl
pop
xchg
push
insb
fs
pop
adc
repz
inc
subl
lods
jns
mov
cmp
or
mov
inc
cmp
into
outsl
lret
dec
xor
cmp
fld
mov
push
and
gs
inc
addr16
cmp
stos
cmp
add
jae
xchg
jg
cmp
xchg
mov
add
or
push
dec
sbb
vmovaps
jae
rcrb
lret
pop
sub
sub
sub
sbb
push
mov
fcmovnbe
mov
push
out
notb
xor
loopne
sub
mov
jne
xor
dec
js
cli
sarb
mov
push
std
mov
loope
mov
dec
inc
sti
test
enter
lock
pop
fstl
xorb
xchg
out
mov
xchg
cmc
fwait
test
lret
adc
loop
mov
add
dec
mov
cmp
pop
inc
movl
cmc
das
enter
xor
roll
iret
mov
call
adc
test
repz
in
daa
daa
mov
imull
xchg
leave
addr16
xchg
xchg
outsl
push
sbb
sub
xchg
jo
cmp
sub
xchg
ja
movsb
xchg
outsb
scas
enter
cld
cmp
mov
pop
cs
clc
lds
lcall
sub
xchg
mov
lret
push
or
pop
pop
inc
xor
cmc
jo
push
mov
xor
add
andl
out
lret
je
fidivs
mov
cmp
cld
sbb
pop
fstl
xor
movsl
stc
pop
mov
adc
mov
in
cmpsl
insl
cmpsl
fdivl
fimuls
and
iret
aaa
sub
cmpsb
aas
mov
ret
inc
mov
jmp
aam
dec
and
mov
or
or
clc
mov
mov
lahf
lods
enter
test
jo
pop
lea
dec
pop
or
cmpl
inc
jle
mov
test
cld
stos
jecxz
xchg
cmp
daa
or
sub
push
divb
leave
ss
addb
pop
out
or
jecxz
jg
xor
fisubs
in
in
or
xchg
scas
dec
loope
pusha
mov
test
scas
gs
cmc
jmp
cmpsl
in
dec
pushf
adc
mov
ds
mov
loop
adc
aas
jnp
fstpl
int3
lcallw
add
subb
mov
mov
sbb
sub
adc
sbbb
inc
arpl
aaa
packsswb
inc
or
cmp
mov
ja
xor
loope
sahf
out
adc
repnz
test
sbb
or
xchg
cld
fs
pop
cmp
hlt
pusha
in
imul
xchg
mov
jl
inc
roll
xchg
insl
and
prefetch
or
or
ds
adc
icebp
inc
scas
cmp
cmpl
mov
cmp
pushf
lods
jne
loop
in
arpl
mov
lods
xchg
bound
into
mov
sbb
jbe
sub
lret
and
mov
out
xchg
std
ja
push
loope
pop
jmp
mov
hlt
sbb
mov
js
jno
push
loop
adc
loopne
mov
sbb
arpl
pop
or
cli
jp
xor
xlat
mov
dec
push
or
xor
outsl
pop
xor
fbstp
mov
rorl
gs
gs
fnsave
push
xor
xchg
cltd
pop
xchg
ljmp
lock
fstpt
jae
sub
sbb
mov
push
mov
lret
mov
xchg
cld
xor
movsl
arpl
repnz
mov
imul
push
mov
push
test
or
loope
jl
jo
int3
add
lods
pop
sti
jmp
cmp
repnz
cli
mov
jp
imulb
sahf
ss
pop
dec
sbb
nop
sbb
and
cmpsb
add
in
lods
mov
xchg
push
test
add
jae
gs
mov
push
in
jnp
dec
push
push
dec
mov
or
xlat
dec
std
cmp
or
lret
pushf
adc
pop
shll
loop
cwtl
mov
sbb
ret
sub
inc
cmp
xchg
cwtl
xor
out
mov
out
fdivrl
lds
fsubl
sub
lret
xchg
sub
mov
icebp
xchg
in
hlt
cmp
pop
ljmp
lea
lcall
sub
into
in
cmc
test
cmc
push
loop
into
js
mov
daa
xorb
dec
ljmp
fimull
and
add
and
cmpsb
add
push
push
jl,pn
pop
mov
inc
cli
ja
add
insb
inc
push
les
push
cld
or
xchg
ror
sahf
nop
cmpsl
xchg
orl
notb
mov
es
rclb
test
popa
mov
sti
gs
leave
mov
pop
mov
imull
and
xchg
cmp
bound
push
das
sbb
mulb
sbb
lods
mov
jb
cltd
addr16
mov
ljmp
xchg
push
cmp
push
sbb
xchg
fwait
jg
xchg
lret
adc
ljmp
shlb
push
popf
dec
jae
xor
jb
test
cltd
sbb
sub
mov
xchg
jmp
je
mov
inc
ljmp
mov
adc
pop
inc
cmc
and
mov
push
add
loopne
sub
mov
das
push
adc
or
popa
rcl
cmp
lds
jp
cmpsl
cli
test
adc
or
mov
js
xor
or
jb
adc
sbb
bound
js
mov
fbld
inc
orb
mov
sbb
data16
fwait
insl
dec
cmp
imul
les
inc
mov
dec
mov
pop
mov
inc
les
dec
cltd
bound
rol
fiaddl
test
test
sub
loope
jge
cs
and
addr16
cmpsb
mov
inc
daa
int3
adcb
iret
mov
loopne
inc
fstpl
popf
mov
push
subl
lea
push
bound
pop
mov
jg
rclb
repnz
cmp
and
scas
push
inc
and
inc
lock
cmp
mov
xor
adc
jae
in
push
iret
cmp
mov
push
pop
scas
enter
xor
xchg
add
pop
jne
xchg
xchg
mov
std
pushf
push
sub
psubd
push
jo
xor
sub
add
ret
jnp
mov
test
jl
sahf
push
repz
xlat
lahf
rcrl
cmpsl
add
shll
in
jge,pn
xchg
mov
sub
sbb
pusha
cmp
in
sub
bound
dec
pushf
cwtl
dec
scas
sbb
or
outsl
or
arpl
jb
bound
jp
cmc
pop
jp
mov
mov
popa
js
xlat
lahf
fucomip
bnd
das
lret
in
mov
jl
inc
dec
adc
hlt
cmc
xchg
or
in
adc
negl
or
sub
jl
in
loope
ret
repz
jecxz
fwait
cmp
cmc
xchg
xor
enter
cmp
mov
ds
pop
inc
or
mov
pop
pop
adc
dec
fwait
pusha
xchg
inc
xchg
movzbl
mov
into
mov
dec
mov
jbe
mov
mov
push
daa
int
dec
aam
fidivrs
jg
adc
lahf
push
int3
and
test
sti
push
push
cmp
inc
xor
mov
popa
xchg
fs
int3
popf
cli
and
daa
cmp
cli
xor
roll
push
dec
arpl
dec
loop
mov
decl
lret
xchg
rcrl
pusha
clc
pop
lcall
ja
jmp
imul
or
mov
sub
sbb
fmull
add
stc
push
xchg
ljmp
sub
push
sub
xchg
sbb
dec
es
pop
lock
inc
mov
adc
movl
ja
inc
cmpsb
arpl
roll
insb
sbb
cmp
xchg
cmpl
enter
xor
outsb
cli
or
out
mov
inc
bnd
out
gs
and
jp
cmp
inc
mov
adc
and
shlb
rcrl
pop
inc
outsl
dec
xor
mov
inc
push
jle
divb
pop
cmpsb
dec
es
mov
insb
and
pop
fwait
cmovns
test
push
pop
test
insl
call
fldenv
je
jle
test
movsb
inc
cmc
inc
sbb
jg
cs
cs
cmp
test
in
lret
xchg
pop
shll
xor
mov
sub
test
ror
xchg
push
jns
xor
loopne
mov
jb
sub
ret
push
xchg
inc
test
push
add
mov
test
mov
fwait
jb
psrlq
adc
xchg
push
xchg
imul
aas
add
push
and
adcl
adc
xchg
pop
sbb
loop
add
repnz
push
push
cmp
jg
es
cltd
dec
dec
pop
repnz
mov
popa
movq
or
test
inc
xchg
out
xor
das
enter
inc
adc
cwtl
cltd
adc
cmp
push
imul
mov
or
xor
dec
mov
pop
and
ficoms
ljmp
inc
lods
adc
test
addr16
dec
inc
dec
aas
popa
mov
mov
mov
int3
sarb
push
sbb
xchg
and
or
orl
lods
mov
out
mov
stc
cmp
or
push
cmp
pop
push
pop
je
hlt
push
jno
stc
push
or
hlt
mov
in
mov
xor
shl
xor
aad
insb
lahf
adc
xchg
dec
adc
and
sti
scas
or
push
iret
or
xor
or
push
lret
sub
leave
lcall
bound
cmpsl
roll
out
xchg
pop
arpl
in
mov
xchg
ss
fldt
pop
dec
mov
sbb
mov
ficompl
and
push
outsl
pop
mov
popa
and
push
xchg
adc
imull
or
mov
lahf
jmp
cmp
movsl
sbb
cld
in
dec
or
pop
fadds
cmc
stc
sbb
jmp
ss
pop
xor
cltd
fidivs
leave
fiadds
xchg
aam
mov
sub
lds
out
fstps
movb
dec
leave
sub
das
add
jo
roll
lea
call
shrl
daa
xchg
js
in
roll
pop
aas
push
jno
cmp
out
sub
push
loope
aad
mov
add
popl
cmp
push
mov
lods
or
adc
cmp
mov
mov
mov
jp
icebp
das
push
ret
dec
mov
sub
lret
xchg
cmc
adc
mov
stc
pop
int
add
lds
loopne
sbb
cld
movsl
cmp
inc
mov
out
push
insb
add
in
and
dec
jp
ljmp
dec
jnp
in
xor
js
out
mov
imul
std
leave
daa
jns
mov
fnsave
or
jno
rcl
lock
push
mov
adc
add
and
nop
and
inc
pop
and
in
or
xchg
push
shrw
stc
cmpsb
pop
inc
std
repz
xlat
sub
outsb
push
fidivs
add
mov
pop
call
mov
adc
xor
sbb
fs
fwait
sahf
shl
dec
icebp
mov
aas
cmovo
mulb
shr
xor
ds
lahf
data16
pop
mov
aaa
pop
mov
outsb
fdivr
repnz
stos
lock
out
push
xchg
mov
adc
rorl
sti
push
rorl
xor
jp
lret
xchg
push
iret
cs
dec
inc
movlps
adc
jg
test
fistpl
mov
pusha
in
xchg
jmp
push
mov
push
insb
std
mov
clc
pop
jle
jno
js
cmp
xor
sub
fwait
cmpsb
lds
hlt
mov
xchg
xlat
xchg
jno
xorb
ja
sbb
push
mov
ljmp
in
cmp
sbb
mov
stos
jl
pop
fsubrs
mov
mov
jns
xchg
sub
lcall
push
je
test
push
xor
stos
mov
test
push
or
cld
pop
cmp
dec
lods
inc
cmp
cltd
in
test
dec
outsl
dec
rcrb
call
add
lret
into
subl
in
test
push
sub
add
rcll
sub
std
mov
inc
dec
cmp
jp
xchg
sbb
adc
stc
mov
ds
mov
adc
fsubs
mov
data16
in
jg
mov
mov
push
in
push
and
sub
enter
mov
xchg
xchg
icebp
dec
sbb
outsb
mov
stc
add
xchg
add
mov
imul
cmp
shlb
sub
js
stc
push
or
js
sub
cwtl
pop
mov
mov
mov
shll
mov
mov
out
in
xchg
mov
repz
pop
add
in
jne
mov
and
popa
jecxz
xchg
adc
ror
imulb
scas
mov
xchg
shl
xor
lret
push
and
jnp
pushf
mov
lds
fbld
mov
cmp
add
lret
in
in
jo
shll
fiaddl
xor
arpl
cli
fists
push
out
shrb
add
inc
mov
or
shl
and
inc
jmp
xchg
push
lret
aas
push
insl
addl
das
or
test
data16
fwait
arpl
adc
sbb
pop
fdivr
fildll
pop
lahf
rolb
dec
add
or
icebp
ficoml
push
dec
dec
mov
mov
test
or
repz
jbe
out
es
jno
sub
pushf
and
add
imul
pop
imul
enter
mov
imul
bound
adc
ret
push
mov
insl
fcomps
jle
push
xchg
add
and
push
add
imul
dec
add
aam
enter
lret
adc
and
inc
push
xchg
ret
movl
jmp
iret
jb
insl
dec
ret
ljmp
outsb
fneni(8087
dec
cltd
adc
dec
ret
pop
stos
mov
cs
add
popa
testb
xor
ja
inc
dec
rcrl
mov
inc
pop
lods
es
cmp
les
xchg
popa
xor
and
cmc
pop
and
je
lahf
mov
fld
dec
gs
xor
sahf
mov
pop
test
pop
popa
jne
push
jne
xor
test
in
rcl
cmpsl
dec
jbe
push
fxam
repnz
adc
xor
aas
sbb
punpckhbw
push
or
hlt
lret
imulb
push
jmp
ljmp
idivb
popa
jmp
xchg
lods
outsb
leave
mov
stc
mov
jno
push
nop
out
sub
pop
jo
sbb
adc
outsl
bound
inc
popf
xor
and
fistl
test
cwtl
lock
adc
movsb
or
dec
jb
mov
jecxz
fmulp
jg
sub
scas
in
push
dec
push
mov
cmc
outsb
pusha
nop
jns
out
sbb
lret
outsb
mov
mov
dec
lods
out
add
cmpsl
and
icebp
cmp
movl
mov
dec
lahf
dec
mov
sarb
or
divb
aas
test
jle
xchg
xchg
enter
and
lods
dec
mov
pop
loopne
inc
lds
fcomi
and
daa
mov
lret
add
jo
inc
rcll
or
ja
or
je
sbb
outsl
push
ljmp
and
pusha
addl
sbb
mov
iret
and
ret
dec
xchg
dec
scas
stos
test
mov
cmp
sahf
ds
inc
in
loop
cld
and
xlat
sbb
test
push
lea
pop
and
js
test
inc
or
imull
insl
call
mov
loop
jecxz
xchg
inc
mov
adc
movb
mov
inc
sarb
mov
jl
ficompl
jae
repnz
cs
jmp
cltd
jne
xchg
aad
mov
pop
cs
out
or
in
in
fistps
or
fdivl
jns
xchg
sbb
and
je
xchg
gs
ucomiss
loopne
cli
arpl
mov
mov
xlat
int3
dec
in
pop
dec
cli
enter
adc
inc
loopne
lods
dec
pop
and
loop
adc
and
add
and
and
xchg
hlt
xlat
pop
aaa
jno
jb
adc
call
add
cmp
push
sbb
cltd
in
and
pop
hlt
mov
mov
mov
addr16
nop
or
xchg
mov
sbb
xchg
outsl
push
adc
jne
or
fs
mov
dec
in
imull
inc
stos
sbb
xor
push
dec
cmpb
push
jmp
mov
js
fdivrs
cmp
pop
push
in
orb
cmp
lock
fnstenv
inc
mov
mov
mov
adc
aas
adc
flds
rorb
mov
adc
repz
mov
or
movsl
cmp
stc
mov
xor
xlat
cwtl
pop
xchg
adc
ljmp
inc
adc
jmp
dec
icebp
and
sub
outsl
cmp
das
pop
nop
test
mov
cmp
or
addl
divl
lret
addr16
xchg
mov
push
into
sti
push
lret
int3
sub
fidivrs
xorl
in
or
mov
dec
cmp
stc
lret
and
xorl
cmp
addr16
xchg
dec
je
dec
out
cmp
inc
adc
shl
pop
and
ss
sub
fistpll
and
cs
outsb
movsb
sub
lcall
and
test
pop
sbb
rcll
inc
loop
loope
aas
add
cmpsb
mov
mov
mov
mov
cld
mov
enter
sub
mov
lods
sub
jl
jbe
ret
je
ljmp
and
out
mov
in
inc
xor
cmp
out
pusha
sbb
cmp
pop
ret
loop
cmc
cld
cmpxchg
push
lock
mov
jle
in
dec
outsb
imulb
inc
adc
dec
cltd
cmpsb
sub
notb
mov
jno
dec
fldt
sbb
xchg
ja
jns
in
dec
or
fcoms
xchg
and
sti
mov
mov
mov
das
pop
jbe
aam
hlt
pop
mov
cmp
in
adcb
jnp
jne
gs
repnz
add
inc
xor
into
dec
out
mov
test
mov
shrb
cmpsb
and
rcl
mov
inc
inc
add
xlat
movsb
cwtl
xchg
arpl
mov
out
push
sbb
outsl
ss
test
cmc
icebp
out
addr16
push
dec
or
xlat
add
in
data16
mov
mov
aam
lahf
dec
dec
pop
imul
mov
shll
repz
pop
aam
daa
roll
dec
fldcw
inc
push
push
ja
test
scas
mov
push
mov
int3
js
sub
and
iret
mov
or
xor
mul
in
lods
ss
and
dec
pop
cmc
jns
sub
push
or
or
mov
dec
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
out
pushf
daa
xor
jbe
cltd
and
or
sub
ljmp
cmp
sub
xor
xchg
mov
push
icebp
fs
mov
xchg
in
adc
aad
add
or
fldt
lds
add
or
roll
fwait
cwtl
inc
es
jbe
daa
iret
loop
pushl
mov
repnz
pop
rcr
pop
pop
inc
sub
aad
xor
call
aam
orb
push
mov
xchg
fwait
mov
push
push
lret
insl
push
test
xor
sub
outsb
stos
lods
cmp
xor
push
mov
addl
mov
fcompl
dec
aad
xor
icebp
mov
xchg
sbb
imul
call
inc
mov
cmp
cli
adcl
sub
rcl
push
cmp
cmp
xor
push
lock
cmp
lahf
inc
sti
ret
stos
jb
fdivrl
les
jg
popf
loope
pop
int3
mov
pop
jle
sub
std
and
jne
shlb
gs
and
out
outsl
mov
popa
xor
xchg
pop
mov
add
mov
loop
dec
xchg
adc
push
cmp
in
push
xlat
mov
or
out
mov
mov
sub
cmp
xor
mov
outsb
sub
fs
lea
adc
pop
sbb
xchg
sahf
adc
xor
mov
les
push
imul
rsqrtps
aam
cmp
xlat
mov
pop
and
adc
mov
iret
stc
dec
test
mov
cmpsl
icebp
lods
or
cli
orb
mov
jmp
or
out
add
rcrb
dec
aad
push
adc
lret
scas
lods
insb
jp
pop
add
testb
cmp
imul
push
ret
cmp
lcall
aaa
in
scas
lret
and
ja
test
arpl
add
filds
daa
push
rorl
dec
cmp
mov
pop
aam
shl
arpl
pop
mov
loope
push
int
jbe
inc
push
pop
dec
in
lods
xchg
xchg
sbb
lods
hlt
and
repnz
fistl
inc
mov
out
xlat
lret
lret
lahf
xchg
push
and
pop
cmp
mov
mov
jg
jbe
fisubrs
fisubl
sub
dec
push
jb
sbb
loope
adc
inc
int
cmc
mov
cmc
push
lods
int3
sbb
mov
notl
scas
ret
lods
data16
mov
ret
addr16
jo
push
jle
mov
fstpl
mov
pop
pop
lods
idiv
popa
scas
movsb
ljmp
jecxz
rolb
sti
in
std
mov
stos
popf
aad
inc
into
jl
jbe
sahf
push
sarl
pop
ja
xchg
orl
fadds
jno
push
push
imul
ret
inc
enter
jnp
cmp
fcomi
xchg
sbb
jae
push
cmp
in
add
mov
sti
jae
daa
in
and
xchg
inc
lcall
lea
jp
sarl
int3
fmull
push
inc
jecxz
sbb
cmp
cmc
in
bound
or
jg
xchg
sub
dec
dec
mov
or
push
adc
add
pusha
jae
lods
mov
add
mov
lods
mov
pop
xchg
rep
lods
mov
rep
lods
push
xchg
push
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
lea
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
lea
call
push
dec
cmp
jb
push
pop
shl
push
pop
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
mov
pop
stos
cmp
jb
pop
mov
pop
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
scas
sub
mov
loop
mov
mov
inc
lods
or
je
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
push
pop
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
mov
