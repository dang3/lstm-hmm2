repnz
hlt
and
add
jb
mov
sub
or
add
pop
push
sub
jle
imul
outsb
pop
loop
rcr
out
into
and
pushf
repnz
mov
fmul
adcb
aam
sbb
xchg
mov
pop
cmp
outsl
jne
lret
add
or
filds
jl
dec
jle
test
inc
cmp
aam
and
aam
adc
or
repnz
xor
adc
and
sub
pop
stos
insl
push
repz
jge
stos
and
mov
nop
mov
mov
adc
sbb
cmp
shrb
mov
or
jns
arpl
push
adc
stos
sub
mov
pushf
ret
call
fdivs
push
nop
pop
es
inc
lret
adc
mov
stos
mov
jecxz
dec
cmc
sub
enter
movsb
pushf
fwait
shl
test
test
and
or
xor
popf
daa
adc
scas
mov
rcrl
dec
out
push
xchg
mov
xchg
add
mov
test
pop
fwait
push
testl
sarl
pop
inc
push
push
ds
or
sub
xlat
out
clc
out
shrb
add
in
or
add
add
dec
dec
pop
add
js
mov
cmp
add
dec
dec
testl
xor
or
push
lds
xor
jl
push
jp
adc
insb
cmp
pop
cmp
sbb
jb
test
int
insb
xchg
push
lock
xchg
repnz
cmp
pop
push
xchg
leave
xor
push
std
and
test
mov
pop
sti
js
mov
inc
jmp
je
movsb
jg
mov
or
int
imul
jbe
xchg
repnz
dec
xchg
adc
mov
pop
inc
mov
std
ss
and
rcrb
jp
cltd
xor
ds
into
bound
or
cli
dec
mov
movsb
push
aad
cmpsb
popa
jmp
sahf
mov
mov
filds
mov
insl
popf
popa
add
mov
inc
xor
jecxz
xchg
pop
sbb
ret
es
jno
dec
loop
and
and
inc
mov
dec
or
mov
cmpsl
out
fiaddl
pop
xor
arpl
sbbl
mov
cli
adc
lods
mov
mov
pop
mov
add
loope
bound
pop
loope
pop
cmp
adc
test
lcall
add
aad
jbe
push
mov
jae
xchg
popa
sub
cmp
nop
rcll
sbb
push
ljmp
adc
dec
xor
rcrl
mov
leave
das
lret
and
add
ljmp
test
mov
sub
sbb
imul
cmpsl
xor
xor
adc
dec
cmp
xlat
and
mov
add
fs
lock
shlb
ret
sbb
into
inc
fdivrs
inc
fimull
pop
push
jl
pop
sete
dec
cmpb
es
ficoms
pop
xchg
cwtl
mov
stos
dec
int
imul
repz
insb
mov
fsub
inc
mov
lds
nop/reserved
adc
inc
push
add
add
sbb
xor
push
add
adc
sub
push
les
sahf
pop
shlb
test
push
imul
ja
fbstp
and
in
jg
outsl
sbb
daa
dec
mov
scas
fisubrs
mov
push
push
jmp
xor
push
sarb
pop
cmp
les
imul
jb
popa
cltd
in
out
sub
dec
sahf
jecxz
mov
pop
subb
out
cltd
jecxz
enter
xchg
lea
into
idivb
push
ds
push
cmp
pop
pop
jno
lret
pushf
pusha
test
xchg
sbb
cltd
out
gs
adc
mov
push
or
jno
std
sbb
and
add
hlt
add
add
or
xor
repz
jns
aaa
xor
push
pop
int3
std
sbb
add
je
xor
inc
xchg
test
push
sbb
loopne
icebp
pop
sub
pop
xchg
mov
imull
and
mov
jge
adc
xlat
insb
cmp
out
mov
mov
mov
dec
push
fisubrs
fldz
call
pop
cld
cmp
sub
pop
push
inc
or
jb
cld
inc
inc
jb
cmp
out
mov
jge
sub
pop
mov
mov
lahf
xchg
xor
shlb
ficompl
xor
sarl
push
aaa
jo
xchg
jns
lods
fcmovnb
sub
sub
or
and
cmc
orl
das
pop
dec
xor
or
adc
adc
js
jns
jns
ja
jmp
sbb
pop
insl
into
lods
and
jno
sub
xchg
add
cld
cmpsb
lds
cli
fstl
ret
repz
mov
ss
mov
subl
cltd
pop
movsl
xlat
mov
jg
mov
loopne
sbb
lahf
lret
call
iret
add
lret
push
cmp
xor
pusha
pop
push
dec
jne
cwtl
sbb
adc
sub
leave
roll
sbb
mov
adc
nop
fidivrs
sbb
or
mov
sbb
sbb
pop
movsb
mov
mov
jb
dec
lcall
mov
mov
push
lahf
pop
push
out
or
sub
shl
add
mov
inc
inc
xor
sahf
add
jno
inc
xchg
adc
sbb
fwait
pop
popf
popf
fldl
cwtl
push
xor
xchg
lret
adc
je
test
and
mov
pop
mov
test
push
aaa
addr16
add
je
punpcklwd
imul
test
movsb
and
incb
mov
fldl
cmp
jae
imul
std
mov
pop
mov
xchg
popf
cmp
out
cmp
push
add
add
bound
test
push
call
dec
movsl
push
leave
add
andb
repz
test
sbb
dec
cmp
cmp
movsl
sbb
ds
fsubrl
ss
xchg
shl
les
mov
into
lds
xchg
pop
not
iret
sub
dec
cmp
sub
and
cs
es
stc
or
test
mov
in
in
movsl
loope
jnp
add
leave
sbb
and
scas
mov
subl
inc
popa
jecxz
or
jno
dec
lahf
add
call
insb
insl
loope
inc
cmp
jbe
dec
dec
test
mov
hlt
sub
mov
rorl
and
sbb
jge
dec
dec
mov
inc
push
or
fsubl
mov
cli
aam
cmp
mov
sub
iret
mov
mov
pop
das
pushf
mov
in
cmpsb
xor
or
stos
sbb
push
icebp
leave
xor
insb
stos
push
sbb
cmp
dec
gs
hlt
ret
inc
push
pop
stos
insl
sub
stos
pop
insb
adc
enter
xor
mov
xchg
bound
popa
sub
inc
mov
sbb
notl
lea
movq
mov
mov
xor
pushf
arpl
rcr
mov
sub
into
fwait
adc
shrb
adc
pop
or
cmp
add
adc
jne
pop
imul
mov
sbb
insl
lret
test
push
cmpsl
sub
cmpsl
jecxz
movsl
sbb
test
lea
arpl
xor
xor
les
testl
adc
sub
rep
sub
sbb
pop
add
ja
and
push
jnp
fbld
addr16
mov
adc
mov
mov
sbb
push
xor
jmp
insl
jmp
sbb
jne
sub
in
xor
addr16
outsb
call
jno
stos
or
lcall
xchg
popa
shrl
daa
and
fcom
pop
xchg
and
push
leave
xchg
hlt
sbb
or
ss
in
popa
dec
xor
mov
lahf
cmp
dec
test
or
push
iret
add
xchg
push
pop
cmp
xor
adc
mov
test
mov
sub
mov
mov
jbe
shrl
in
sbb
in
inc
repz
imul
inc
pop
mov
fists
inc
pushf
es
or
mov
cmp
adc
mulb
pop
sub
xchg
push
scas
aaa
mov
je
sahf
inc
rclb
and
dec
dec
xchg
dec
sbb
mov
push
ljmp
rorb
das
fnstenv
pop
mov
addb
push
add
pop
push
pop
jo
pop
lods
rolb
aad
popa
cmp
xchg
sar
push
test
andl
lcall
xchg
mov
bound
jns
adc
sub
lahf
and
popa
xchg
adc
test
push
sbb
push
cmp
mov
pushf
xor
dec
and
push
jo
lods
lcall
mov
lock
pop
lahf
ds
fldl
pop
sub
dec
in
cmp
repz
sarl
jnp
call
inc
lds
insb
pop
or
mov
mov
cli
jns
out
sub
inc
push
adc
nop
das
mov
jmp
inc
inc
pop
inc
jmp
add
fs
das
mov
push
fldl
inc
jo
lods
dec
sub
sub
mov
sbb
sbb
lahf
imul
jo
pop
in
inc
shrl
lret
or
sub
mov
lods
xor
loope
rorb
out
sti
daa
cmpsl
add
sbb
into
aam
mov
subl
hlt
hlt
pop
test
sbb
inc
and
lahf
jg
lahf
sub
popa
add
inc
and
inc
sahf
lds
imul
and
push
test
xchg
mov
inc
arpl
shll
cmc
je
push
push
enter
cli
div
nop
mov
enter
lahf
fsts
lods
fcoms
sub
sub
pop
mov
scas
mov
inc
nop
and
xchg
out
in
je
in
xor
out
das
push
cmp
jb
pop
ss
pop
xor
or
je
sub
ret
cltd
addr16
lock
mov
pop
sub
mov
dec
mov
push
call
sub
mov
pusha
scas
sti
jl
jecxz
adc
xchg
pop
mov
jbe
je
insb
out
imul
sarb
mov
and
and
and
cwtl
popa
subb
mov
std
shl
jb
inc
push
daa
mov
pop
inc
jae
into
push
pop
lds
mov
lock
xchg
cmpsl
inc
cli
outsb
sbbl
jecxz
adc
test
pop
mov
mov
ss
xchg
add
in
mov
pop
ds
jmp
dec
lcall
imul
xchg
xchg
inc
inc
lea
and
lahf
xor
cmp
fisubs
lock
mov
sub
xchg
dec
lret
sub
xor
mov
arpl
pop
repz
pop
lcall
mov
cmp
gs
sub
insl
push
sbb
popl
int
mov
sbb
push
xchg
scas
sub
jb
mov
pop
or
and
icebp
mov
inc
cmp
push
data16
add
sub
cltd
push
int3
test
fimuls
das
inc
movsl
mov
pop
mov
mov
mov
movsb
push
std
mov
flds
or
or
mov
clc
push
aad
pop
xchg
sub
sub
mov
daa
xchg
sub
cmc
sbb
jl
xor
pop
mov
xchg
mov
lret
aam
xchg
mov
adc
arpl
mov
mov
lahf
pop
loopne
test
aad
movsl
js
cmp
scas
arpl
enter
sahf
int3
in
sarl
popa
scas
sub
mov
mov
pop
and
and
sbb
lds
sub
xor
mov
ss
inc
sub
shr
jg
bound
repnz
mov
adc
aad
and
daa
xor
jo
cmp
lods
ret
cs
adc
lahf
sbb
std
sbb
rolb
scas
popa
fistl
out
fidivrl
dec
loop
jle
or
jle
or
cmp
add
pop
lock
bnd
jo
add
in
jne
negl
orl
loope
cmp
mov
ss
or
cmp
mov
sub
dec
mov
push
and
adc
js
scas
into
mov
sub
sbb
jmp
pop
or
adc
mov
add
in
cmpsb
push
push
int
sub
iret
sti
sub
in
mov
mov
add
jg
sahf
and
and
sbbl
scas
ficoms
cmc
push
add
or
xchg
adc
pop
movsb
push
insb
ja
cmpsb
jno
popa
lock
ds
or
loopne
adc
ret
ret
int
hlt
loope
arpl
jecxz
add
and
pop
lds
fiaddl
mov
sbb
rcl
sub
push
or
imul
imulb
and
hlt
out
inc
cmp
adc
sbb
sbb
adc
pop
jge
jecxz
cmp
call
dec
sbb
push
xor
and
jp
rclb
daa
jmp
sbb
movsb
inc
scas
ss
in
xchg
jns
cmp
adc
mov
mov
jl
jno
adcb
pop
adc
fisubs
xchg
loop
movsb
repnz
stc
lock
mov
xor
inc
fs
sbb
inc
lock
xor
test
pop
inc
push
or
hlt
jbe
test
dec
cmpsb
loope
cmp
or
push
test
addr16
jo
xchg
sbb
inc
cmpsb
add
gs
out
mov
loop
add
cmp
jp
cmp
cmpsl
sub
sub
mov
push
adc
sbb
movswl
mov
in
lods
xchg
data16
inc
mov
cmp
popl
jb
pop
jge
mov
sub
cld
mov
aaa
les
imul
andb
mov
in
xor
jns
adc
cmp
movsl
add
stos
add
mov
sbb
icebp
or
xchg
mov
imul
mov
cmpsl
movsb
pop
test
cli
imul
andl
mov
adc
mov
sbb
mov
aam
mov
outsl
cmp
aas
mov
or
cmpsb
and
mov
dec
loope
push
ffreep
fwait
orb
jp
xchg
mov
clc
jle
fists
test
lods
outsl
mov
fdivs
leave
jmp
and
ret
xchg
mov
or
cmpsb
mov
push
cmp
icebp
repnz
fbld
jb
test
stc
inc
and
hlt
push
xchg
cmp
rcrl
mov
sub
xor
in
lods
xor
ss
ficomps
sub
add
aad
jl
push
mov
das
test
add
imul
in
pusha
sahf
cmp
cmp
lock
lcall
insl
jl
int
fmuls
add
mov
ljmp
adc
sti
inc
jp
jge
shr
mov
push
lods
add
out
loope
fldenv
shlb
jns
out
cmp
jbe
pop
sub
add
mov
push
jns
insb
pop
push
xor
mov
xor
sbb
pop
shlb
jnp
cli
out
mov
mov
mov
xor
push
ret
sub
xor
cmpsb
enter
sub
push
jle
cld
ret
adc
shll
xchg
and
push
pop
frstor
dec
test
pushf
and
lock
mov
xchg
dec
xor
jbe
mov
incb
stc
shrb
push
mov
xchg
dec
inc
xor
adc
pop
mov
cmp
add
mov
add
mov
xchg
pop
push
xchg
inc
stos
xor
data16
add
scas
test
cwtl
dec
push
add
adc
mov
cmp
adc
cs
push
frstor
jne
mov
xchg
lds
xor
pop
cwtl
fisubs
push
jo
adc
int
jmp
addr16
daa
ret
xchg
xchg
cmpsb
xchg
scas
add
aad
xlat
pop
and
or
pop
and
or
mov
sub
sbb
mov
xor
dec
aam
out
ljmp
jmp
insb
test
jp
insb
gs
sbb
add
inc
pop
in
mov
mov
xor
sbb
adc
icebp
jl
sti
adc
incl
sbb
jo
and
lods
loop
sub
push
cmp
mov
lret
pushf
iret
lods
and
mov
mov
or
push
mov
pop
inc
das
push
cmpsb
stc
pop
sbb
ret
dec
mov
aaa
lret
hlt
add
loopne
push
add
mov
mov
and
xor
call
sub
dec
adc
sub
mov
mov
or
adc
inc
lods
lods
in
and
cmp
fmull
or
jmp
int
mov
addl
add
loopne
jmp
scas
enter
or
lock
xchg
sub
sub
dec
enter
loopne
arpl
lea
insb
fstp
mov
lahf
xor
mov
pop
pop
dec
ret
and
jbe
cmp
cltd
jp
gs
lock
dec
es
sarb
and
sahf
inc
into
insb
and
cmp
mov
sub
mov
enter
cwtl
push
in
push
sub
inc
push
mov
repz
xor
push
mov
mov
pop
jmp
xchg
sub
sbb
dec
cmpsl
aas
mov
loopne
pushf
sub
push
pushf
xor
lcall
fisubrl
fsubrs
sahf
fadds
movsb
dec
loopne
inc
inc
inc
push
sbb
sub
fwait
pop
dec
enter
push
jmp
lods
push
pop
mov
aad
push
mov
divb
les
xor
push
xchg
sub
push
aaa
xor
xchg
sub
popf
daa
cmp
xchg
or
mov
jnp
test
dec
into
movsl
jb
sahf
test
mov
jmp
dec
daa
mov
xchg
ljmp
neg
les
lea
test
and
mov
mov
repnz
roll
xchg
movsl
aam
jg
mov
addr16
popa
push
shl
rcll
addr16
cld
xor
xchg
mov
arpl
insl
push
dec
scas
stos
inc
pushf
clc
test
aaa
and
insb
pop
jbe
xor
aaa
daa
mov
ljmp
aas
cmp
rcrb
iret
sbb
jmp
and
mov
clc
dec
test
mov
daa
xchg
gs
or
test
and
sub
adc
es
add
lret
inc
aaa
xor
jecxz
repnz
xor
jbe
pop
push
shrb
mov
fisttpl
jb
bound
std
cmp
push
xchg
out
mov
mov
enter
movsb
in
mov
scas
jmp
sbb
dec
and
pop
mov
mov
push
adc
lret
scas
xor
sahf
mov
sbb
in
cmc
movsb
lret
and
adc
cmp
cmpsb
addl
int3
and
popa
sub
stc
lock
aas
cmp
sbb
call
in
xchg
rcll
mov
and
shl
sbb
sbb
fisttps
pop
push
cwtl
sahf
imul
mov
jns
xchg
dec
push
sub
xorb
lock
cmp
test
xor
cmpsb
adc
call
stos
test
negb
cmp
outsl
cmc
outsb
orl
push
std
sarb
sub
and
cld
and
sub
jle
pop
or
inc
loop
rolb
push
mov
jg
aaa
leave
push
sub
add
push
lret
lea
inc
mov
jns
xchg
rclb
hlt
sub
enter
pop
test
fwait
and
pop
outsb
push
sub
pushf
insl
sbb
dec
push
inc
and
daa
inc
xchg
test
cwtl
cmpl
int3
pushf
xchg
xchg
subb
xchg
mov
adc
insl
adc
movsl
outsl
dec
cltd
adc
mov
pushf
mov
call
sub
scas
clc
push
xor
inc
push
jo
sub
jo
cmp
xchg
outsb
mov
sbb
xor
push
fisubrl
pushf
add
ret
out
xchg
cli
int3
and
adc
enter
in
orb
xor
and
insl
jmp
mov
add
fpatan
mov
aas
pop
and
sub
cmp
gs
and
int3
pop
ds
adc
mov
and
cmp
dec
lret
lods
or
pusha
or
sub
inc
in
fisubrl
cmp
test
pop
mov
ljmp
repz
sub
sub
sub
xchg
jb
lea
das
stos
fbstp
iret
adc
jl
sub
clc
mov
cmp
inc
xor
pop
jne
into
imul
sti
lods
sub
jle
mov
jmp
pop
and
dec
scas
paddb
mov
cmp
filds
fdivrs
push
mov
out
test
xchg
sbb
mov
gs
mov
lock
push
xor
push
rcr
jae,pn
shll
sub
lock
xchg
adc
test
jo
insb
popf
leave
lods
sub
lret
jp
xor
inc
lods
cmp
nop
daa
rep
lret
dec
xchg
imul
sbb
cltd
out
mov
or
loope
sbb
sub
xchg
adc
rcr
loop
pop
in
lock
mov
xchg
jg
dec
dec
cmpsl
inc
jmp
ss
or
sub
sbb
out
sbb
scas
or
jmp
xor
sub
adc
loope
sub
push
adc
or
mov
xor
inc
xchg
push
insb
cmp
imul
dec
negb
test
jnp
sub
hlt
test
sbb
dec
scas
aam
mov
je
mov
pop
xchg
xlat
adcb
fisttps
cmp
xchg
or
jg
push
jo
out
mov
push
outsl
push
stc
insb
lods
mov
scas
jl
aas
and
or
int
pop
jmp
pop
mov
pop
and
push
push
jo
popa
mov
ds
out
cs
jge
popf
push
imul
imul
mov
inc
xchg
loop
or
idivl
aam
mov
aad
in
in
push
leave
mov
lret
sub
add
pop
sbb
mov
inc
pop
mov
out
out
mov
jle
and
xchg
je
pop
push
pop
pop
cmpsb
notl
mov
jg
dec
mov
lea
popa
sub
cvtdq2ps
mov
lea
pop
jo
pop
pushf
nop
stos
cld
dec
out
mov
int3
scas
out
mov
inc
sub
dec
daa
inc
sub
pushf
pushf
pop
popf
out
test
pop
sbb
mov
cmpsb
or
jmp
xor
scas
and
test
mov
repnz
cltd
xor
xor
or
imul
outsb
mov
jge
add
mov
jge
ret
xchg
lock
inc
insl
xchg
push
cmp
outsl
fwait
inc
mov
test
add
pop
lcall
into
add
push
or
sbb
inc
xchg
out
cmpsb
lret
mov
mov
cmp
sub
jae
and
add
pop
adc
insl
inc
inc
adcb
cltd
inc
xlat
push
ja
into
xchg
xchg
mov
pop
xor
xor
sbb
and
fistl
xor
sub
or
testb
xor
and
nop
jbe
sti
xor
adc
jl
lahf
jl
lcall
aaa
mov
jge
cmp
inc
and
mov
cmp
dec
and
cmpsb
scas
fdivl
fs
es
xor
mov
repz
adc
mov
pop
pushf
adc
inc
clc
pop
cmp
sub
mov
and
out
ret
stc
fimuls
ret
and
xor
and
int
das
shrb
dec
das
repnz
pusha
mov
leave
cmc
sub
mov
cmp
inc
repz
divb
inc
mov
inc
jge
inc
mov
lods
pop
enter
mov
idivl
dec
cs
inc
insb
add
in
dec
and
push
push
cmc
test
movsl
jmp
push
dec
in
lods
das
pop
mov
adc
repz
in
sbb
pop
push
sahf
add
pop
sbb
inc
cmpb
add
sar
jo
fldl
pop
and
cmpb
push
cmpsb
adc
out
xchg
add
gs
or
shll
inc
mov
mov
jmp
imul
lcall
push
mov
cwtl
scas
leave
mov
xchg
adc
loopne
push
dec
nop
adc
mov
out
push
fadds
push
push
and
pusha
jne
shll
add
cwtl
cmp
daa
add
xchg
mov
xor
fildll
repnz
inc
jbe
mov
out
mov
jge
pop
test
test
sbb
sbb
or
and
lods
or
and
aas
fwait
outsl
sbb
mov
xchg
jo
pop
ja
aad
cmp
pop
inc
adcb
test
mov
xchg
adcl
addr16
stos
sub
fwait
pushf
ds
xchg
imul
dec
dec
dec
sub
jmp
adc
iret
jno
lea
sub
push
ds
xchg
lahf
pop
cmp
lock
dec
jbe
cmp
daa
inc
mov
stos
dec
hlt
adc
inc
sti
mov
clc
jle
xor
xchg
jno
sbb
adc
inc
push
int
add
xchg
mov
repz
hlt
ficoml
jp
es
loopne
call
dec
dec
pop
sbb
aam
inc
sub
sub
cmpsb
int
mov
jno
xchg
movsl
pop
adc
push
sbb
mov
push
shr
lahf
mov
jb
in
mov
cs
sbb
mov
mov
sbb
adc
enter
push
pop
cmp
push
dec
mov
mov
loopne
mov
push
add
in
push
push
sbb
jno
jl
mov
push
or
movsb
dec
xor
stos
pop
test
add
xor
inc
pusha
push
lods
mov
mov
sar
xchg
sbb
imul
ret
adc
scas
cmp
sbb
es
xchg
adc
jg
fisubrl
pop
xor
jecxz
xchg
sarb
mov
testl
punpckhdq
sbb
cmp
mov
mov
jo
pop
lds
rclb
adc
bound
sub
mov
insl
sahf
and
insl
inc
mov
mov
or
inc
mov
inc
fildl
enter
xor
int3
mov
xchg
scas
jecxz,pt
scas
cld
or
out
jae
sub
push
into
mov
xor
xchg
sub
jo
mov
adc
sbb
mov
lds
sbb
fisttpll
sahf
xchg
pop
movsl
call
and
stc
loop
adc
test
sbb
subb
jecxz
lea
dec
rorb
lcall
sbb
pop
movsb
adc
loop
jmp
in
dec
add
push
ret
icebp
push
push
in
add
mov
cmp
xchg
das
loope
sub
xchg
es
adc
xor
adc
mov
push
or
pop
pop
adc
inc
leave
popa
add
outsl
flds
repz
add
push
jle
push
cmpsb
pushf
ret
push
imul
addl
jge
jg
fldenv
adc
or
scas
movsl
pop
cmp
jp
fiaddl
lods
icebp
lea
add
cmp
mov
fisubrs
jecxz
mov
jb
inc
outsb
inc
je
and
mov
jp
leave
xchg
enter
xchg
mov
stos
aam
cmp
fmuls
lock
cs
and
xchg
stos
outsl
movsb
sub
rol
xchg
psadbw
adc
cmp
movsl
push
inc
iret
out
repnz
dec
je
lahf
jae
arpl
out
xor
jmp
icebp
jmp
or
add
or
and
nop
cmpsl
cmp
or
jmp
xor
sti
shlb
xchg
cli
inc
stos
xor
test
and
jecxz
xor
into
xchg
das
ror
mov
out
test
or
dec
dec
enter
ret
enter
test
loop
testb
pop
fidivrs
pop
int3
cmpsb
mov
adc
mov
cltd
pop
sti
cltd
leave
cmpsb
or
xor
add
adc
mov
negl
lea
dec
mov
fstps
jo
cmp
jle
sarb
jge
int3
stc
xor
data16
push
sbb
mov
jns
cs
add
xlat
punpckldq
xor
les
imul
test
stos
dec
das
cmp
jg
and
dec
cmpsl
sbb
add
ret
outsl
and
jo
xchg
fucomp
daa
jmp
negl
cmc
pop
lret
sub
shr
push
mov
loop
xchg
shll
mov
adc
adc
xor
test
jb
aaa
fwait
sub
leave
pop
test
push
inc
cmp
jl
xor
mov
xchg
jle
leave
and
xchg
into
cmp
sbb
and
mov
pushf
inc
pushf
xchg
loopne
sub
push
ljmp
scas
nop
push
pop
ds
xchg
cmpsl
jecxz
ss
nop
dec
xlat
imul
dec
push
stc
jne
pop
jbe
pop
cmpsl
sub
sub
aas
sub
xchg
adc
movsl
sub
mov
test
sbbb
sub
in
xor
insb
or
dec
ja
out
loop
cwtl
rol
push
xchg
xchg
or
add
popf
pop
addr16
pushf
hlt
fwait
pop
leave
sub
and
sub
mov
xor
or
shlb
movsb
fstpt
push
test
stos
or
daa
movsb
in
jg
xor
loope
cmp
add
jecxz
and
adc
jecxz
cmpsb
out
inc
xor
fildll
sbb
or
pop
insl
mov
cmp
imul
filds
add
testb
cmp
mov
gs
mov
adc
sahf
sbb
push
inc
xchg
imul
out
mov
sbb
hlt
sbb
adcb
sbb
daa
xor
adc
xchg
or
mov
in
sbb
sbb
test
es
das
xor
lret
fildll
dec
fcmovne
idivb
cli
inc
inc
or
mov
shl
add
aam
jmp
push
and
sbb
in
xchg
push
jl
dec
fadd
in
jno
or
adc
outsl
jb
jnp
push
or
cwtl
ja
aaa
rclb
and
icebp
notl
xchg
sub
and
out
push
add
insl
add
test
push
mov
popf
idiv
loope
in
mov
add
and
xchg
cmp
mov
mov
jl
dec
pushf
xchg
pop
or
lret
pop
mov
jmp
jo
jne
jb
movl
daa
fimuls
pop
arpl
mov
mov
test
gs
adc
andl
arpl
dec
int3
ficompl
adc
mov
cmp
mov
shlb
sub
adc
std
push
mov
or
pop
push
loop
movsl
or
int3
pushf
adc
mov
sub
dec
sub
js
xor
imul
jmp
sub
mov
sub
mov
js
je
imul
add
add
sub
pop
adc
and
or
mov
add
lcall
pop
xor
mov
pop
jnp
xchg
inc
jmp
push
push
sbb
insb
sbb
add
push
das
daa
xor
adc
pop
cs
inc
jle
aam
imul
pusha
adc
testl
outsb
repz
sbb
mov
dec
sub
add
xor
mov
inc
jg
shr
mov
adc
insl
sbb
pop
roll
fnstcw
pop
and
mov
loopne
push
fs
addl
sub
mov
outsb
push
xchg
mov
mov
dec
out
mov
push
out
dec
mov
push
sbb
fwait
xchg
inc
xor
lea
mov
sbb
mov
jbe
mov
sub
sbb
cmp
dec
jmp
sub
cmpsb
xchg
lds
mov
mov
jb
scas
aaa
daa
clc
lahf
ljmp
push
or
jp
inc
xor
out
shlb
in
test
xor
mov
mov
cmp
loope
push
fsts
loope
push
mov
jno
rolb
xchg
mov
sub
push
adc
and
xchg
das
push
dec
out
sbb
adc
mov
pop
fiadds
fidivl
jle
sbb
sub
lods
and
popf
mov
or
mov
jbe
andl
loope
xchg
push
mov
cmp
andl
pop
push
shl
jge
pusha
push
sub
xchg
xor
scas
pop
loop
jbe
fmul
pop
std
mov
xor
cwtl
xchg
sbb
xor
popa
push
nop
sub
add
fdiv
imul
or
or
lock
dec
dec
mov
push
or
sub
adc
mov
push
or
into
inc
pop
stc
cmp
test
or
adc
sbb
clc
jmp
mov
fsubs
loopne
rcrb
dec
xor
xchg
mov
les
lahf
push
popf
inc
mov
xchg
jmp
lahf
insb
push
xchg
pop
and
sub
lds
imul
sub
test
addr16
sub
xchg
int3
inc
jbe
xor
scas
rcl
mov
add
push
cmp
add
stc
stc
fimuls
repnz
jne
outsl
je
add
ret
pop
pop
jnp
sbb
mov
das
movsl
cmpsl
add
sbb
fisttpll
jl
sbb
fildl
jp
xorb
xor
test
xor
daa
mov
call
adc
movsb
out
push
cmpsl
jbe
clc
andl
lods
add
sahf
cs
dec
or
bound
add
or
ja
lret
stos
aaa
cmp
mov
adc
mov
mov
clc
jno
bound
push
push
xchg
cmp
xchg
sbb
sbb
je
xor
pop
std
sbb
push
daa
in
mov
pop
or
adc
mov
lods
xor
gs
negb
inc
mov
clc
test
xchg
cld
sbb
fwait
mov
xor
mov
cmp
loope
xor
scas
jp
mov
dec
std
in
insl
jecxz
lret
push
or
testb
sbb
outsb
mov
loopne
xchg
cmp
mov
test
lahf
fwait
pop
ljmp
xor
push
pop
sub
scas
mov
mov
ret
test
loopne
dec
jge
or
stc
divl
mov
jae
jg
mov
xlat
inc
cltd
pop
cmp
mov
adc
lods
mov
sbb
stos
icebp
sbb
cmpsb
dec
and
and
mov
mov
xlat
aas
sbb
ds
sbb
jb
or
pop
or
shrl
insl
xchg
fnclex
out
test
js
arpl
pop
mov
fs
jle
std
mov
imul
pop
incb
fdivrl
pop
imul
das
fsubrs
popa
lret
mov
fstpt
pop
jge
addr16
cmp
pop
in
pop
mov
test
js
pushf
call
inc
fildll
subb
sub
xchg
sbb
jbe
mov
pusha
pop
dec
lea
dec
add
dec
pop
adc
fs
out
fwait
push
test
sub
cmpsl
pusha
cmpxchg
adc
and
and
test
inc
adc
jb
test
insb
lods
push
inc
ja
xchg
cmpsl
fildl
fs
popa
shrb
clc
out
out
pop
jecxz
cmp
inc
in
imul
sbbl
sub
insl
cs
sbb
mov
mov
sbb
push
test
leave
fists
add
imul
stos
out
loop
and
mov
idivb
adc
adc
scas
icebp
lahf
call
sahf
lods
xchg
dec
or
movsl
mov
xor
xchg
gs
js
sbbl
lcall
jbe
lret
repz
and
loope
jle
mov
adc
adc
mov
aas
mov
xor
int3
fld
inc
jo
jae
push
and
movsl
push
and
sub
mov
in
mov
movsl
lahf
inc
in
cld
loop
push
xchg
adc
xchg
hlt
test
or
clc
into
into
clc
leave
in
out
popf
scas
xor
dec
in
mov
xor
pusha
pop
test
and
pop
insb
lock
or
or
mov
xor
jae
rcr
sub
mov
xchg
scas
or
mov
fs
dec
xchg
lcall
test
add
scas
sbb
xor
jle
mov
fxch
inc
ljmp
lods
jg
dec
aam
inc
push
jmp
cmp
sub
jecxz
mov
nop
xor
andb
test
mov
pop
out
lret
movsl
xor
and
test
insl
mov
push
sub
enter
sub
aaa
leave
iret
mov
aaa
push
fs
add
ja
pop
fiaddl
mov
cmp
mov
mov
cmpsl
cmp
fs
out
mov
cwtl
insl
sbb
pop
and
mov
dec
mov
mov
jne
add
sub
orl
ret
xchg
dec
int3
and
cs
xchg
or
dec
cmp
mov
repz
dec
mov
mov
xorl
xlat
cmpsl
daa
dec
in
sub
pop
andl
dec
cmp
pop
pushf
loopne
andb
cltd
test
int3
dec
js
pusha
jmp
fs
pop
push
fdivl
lahf
es
pop
lret
imul
dec
arpl
push
fidivl
pop
jmp
mov
sti
sbb
out
xor
loope
aad
mov
add
addl
test
cmp
or
mov
mov
cmpsb
insb
movaps
push
mov
dec
insl
icebp
mov
dec
int3
jmp
lock
loope
push
int3
lret
fucom
andl
or
push
add
sti
dec
daa
push
xor
pop
jmp
adcl
daa
scas
push
test
fistpl
xlat
lods
cmp
adc
pop
pop
cmp
and
adc
sub
pop
or
dec
pop
or
push
xchg
dec
jbe
popa
xchg
lods
xchg
sbb
jne
or
test
mov
mov
and
clc
cmpsb
enter
pop
lock
addb
cltd
cmp
pop
xor
int
xchg
jle
mov
adc
shl
rclb
fiaddl
sbb
pop
out
push
adc
pop
mov
ret
adc
lods
mov
gs
pop
jne
repz
push
cmc
push
imul
insl
rorb
aad
loopne
sbb
sub
mov
jg
mov
cmp
data16
inc
repz
push
inc
mov
in
rcrb
sbb
mov
pop
or
and
daa
and
popa
cmp
sti
shlb
pushf
xchg
and
add
jae
add
xor
pop
or
jle
or
mov
and
and
push
pop
pusha
test
inc
jmp
fmul
popf
bswap
mov
dec
repz
jmp
mov
sub
das
mov
sub
fisubl
mov
js
mov
lret
out
xchg
out
lret
cltd
cmc
and
icebp
adc
daa
shr
fcmovnb
push
adc
xchg
adc
fisubrl
scas
dec
mov
pushf
mov
and
popa
dec
data16
stos
orb
pop
mov
push
adc
add
and
ret
and
adc
test
adc
sub
shl
cmp
cltd
xor
loop
mov
daa
and
xchg
fmuls
xlat
mov
sub
movsl
in
add
jo
mov
adc
sbb
lods
fstl
mov
jnp
push
jb
xchg
push
shll
inc
fmul
jmp
sbb
and
fldl
push
pop
xchg
ljmp
test
mov
xor
sub
test
sub
es
mov
lods
into
inc
xor
div
movsl
stos
into
pop
test
jl
mov
xor
ret
push
or
mov
lds
adc
das
jo
cmc
fisttps
mov
gs
jns
dec
mov
stos
daa
test
cmp
cmpsb
xor
or
and
lahf
loope
jmp
add
popa
adc
push
inc
inc
cmp
out
and
es
and
mov
imul
mov
out
inc
sub
jmp
repz
movsb
lods
fistpl
loopne
enter
and
test
daa
push
lock
pop
push
dec
shl
lods
fwait
push
dec
orl
add
inc
push
dec
scas
adcb
xor
sbb
mov
icebp
cmpb
xchg
mov
jl
in
adc
and
push
inc
and
jmp
and
enter
pop
aaa
jg
addr16
mov
xchg
and
lea
mov
xchg
pop
or
mov
shrl
repz
es
xor
or
rorb
js
push
mov
xchg
adc
pop
ret
das
cltd
sarl
cmp
sub
or
push
jle
mov
insb
jne
aas
mov
in
fildll
loope
das
dec
out
rcrb
imul
jnp
mov
xchg
popf
aas
pop
pop
push
inc
ds
jbe
inc
aaa
mov
or
add
les
arpl
pop
or
sub
cmc
xlat
add
ljmp
push
fwait
cmp
jo
jne
xchg
or
repnz
add
mov
mov
sub
lods
test
out
je
inc
adc
out
out
and
loope
pop
movsl
adc
adc
mov
and
cwtl
sbb
dec
push
imul
dec
add
out
popf
add
rclb
add
test
lret
lea
and
pop
test
mov
cmpsb
lret
lret
inc
push
into
mov
xchg
or
pop
lock
cmp
pop
xor
movsl
pop
or
lds
test
int3
dec
idivl
adc
inc
pop
sub
daa
xor
aaa
sub
inc
out
movsl
jae
adc
shl
jge
in
andb
mov
inc
fnstsw
mov
movsl
aad
lahf
mov
and
xchg
sbb
ficoms
insl
leave
mov
jmp
cmp
mov
lea
mov
mov
mov
into
and
xchg
lds
roll
pop
and
ljmp
pop
and
pop
repz
mov
stos
inc
out
pop
jle
in
out
dec
cmpsl
dec
jmp
sub
jne
adc
adc
cmpsb
cmp
xchg
push
clc
test
adc
jne
test
add
test
cs
ds
decb
sub
nop
pop
popa
adc
and
mov
jecxz
scas
in
int
sbb
pop
push
leave
es
mov
adc
and
cmp
sub
shrb
in
sub
and
xlat
cmp
das
mov
jp
fadd
cmp
es
jbe
fdivrl
icebp
dec
sub
loopne
cmp
or
cmc
pop
push
popf
ficomps
lahf
clc
push
or
add
mov
loop
movsl
mov
adc
add
mov
add
sub
sub
inc
lods
add
sbb
sub
aas
lods
or
sbb
sub
xor
or
cli
popf
sub
pusha
and
int
arpl
dec
lock
pop
fmull
pop
mov
mov
mov
hlt
push
add
mov
inc
inc
pop
mov
lret
aaa
shrl
daa
pusha
aas
int3
add
cmp
mov
dec
xor
adc
and
ds
adc
cmp
ja
push
sub
add
movsl
sahf
adc
movsb
mov
je
inc
popf
push
mov
push
cli
push
adc
sub
fcoml
and
mov
vmwrite
jbe
repnz
mov
adc
call
add
gs
mov
fstps
shll
jg
add
pusha
inc
gs
fists
jae
std
push
cmp
jmp
stc
push
test
mov
pop
loop
lock
push
xor
in
sub
bound
daa
xor
repz
jne
sub
sub
rcl
push
add
and
stos
dec
sarb
jp
dec
jns
cmpsb
or
movsl
push
add
jnp
and
cmp
add
inc
adc
iret
decb
sub
push
pusha
sub
stos
test
dec
cmp
adc
stc
into
lea
mov
push
mov
jo
add
mov
cltd
les
data16
xchg
cld
xor
mov
pop
sub
push
lods
lahf
stos
xlat
sub
and
mov
out
lds
dec
adc
bound
and
lret
popf
leave
in
das
adc
movsl
mov
xor
push
mov
fisttpll
cmpsb
fimull
into
orl
mov
jbe
xchg
in
and
int3
pusha
mov
jae
push
ljmp
xor
mov
int
sysret
into
call
cmp
cli
jp
xchg
push
out
aaa
gs
push
add
push
clc
lret
mov
dec
lds
fwait
insl
mov
mov
adc
mov
inc
aaa
push
jae
mov
jle
dec
pop
and
add
lahf
and
inc
pop
pop
push
sub
and
gs
xor
cmpsb
ret
mov
cmpsb
dec
mov
push
adc
sub
subl
push
movsb
mov
out
mov
fdivr
mov
push
mov
cld
or
push
mov
inc
fcoml
jo
imul
test
adc
outsl
test
jp
je
mov
sarl
test
adcb
pushf
dec
xchg
in
lcall
or
lret
adc
nop
sbb
movsb
pusha
int
lds
jecxz
adc
shll
pop
inc
sbb
sub
popa
std
add
bound
xor
arpl
jnp
loop
mov
sarl
stos
add
mov
cmp
nop
sbb
ds
adc
in
mov
dec
outsl
imul
mov
test
cmpsl
xchg
mov
mov
mov
pusha
shlb
aaa
adc
and
push
icebp
cmp
shlb
loopne
pop
fwait
dec
sub
mov
loop
jl
and
and
push
inc
imul
and
add
sbb
outsb
es
push
cmp
sbb
and
es
or
and
mov
stos
dec
insb
jns
adc
cmp
mov
lret
jbe
dec
fildl
dec
in
inc
fwait
pop
icebp
push
fs
jb
movsb
out
hlt
sbb
mov
negl
or
push
xchg
xchg
scas
hlt
push
mov
adc
sbb
xor
lldt
pop
es
push
inc
pop
xchg
xchg
aaa
mov
sbb
cmpsl
mull
lea
test
fsubrl
out
push
in
xchg
pop
and
mov
shll
add
jmp
dec
mov
sbb
sub
and
mov
push
adc
sbb
xor
jnp
and
xchg
xchg
pop
loop
rcrb
repz
mov
clc
or
lret
push
rol
inc
or
cmp
clc
mov
adc
test
adc
imul
mov
mov
or
jmp
lds
sbb
scas
loop
insl
repz
ja
and
sbb
rolb
cmp
repz
enter
push
or
ja
loop
push
rorl
ljmp
adc
adc
stos
fadds
ficomps
dec
mov
push
mov
int
inc
sub
inc
xor
pop
inc
pop
inc
mov
jmp
mov
fisttps
in
lods
cmpsl
jmp
insb
sar
or
add
inc
xchg
enter
adc
push
sbb
mov
inc
mov
add
or
scas
daa
adc
sub
pop
jmp
lods
jns
add
inc
dec
and
mov
mov
test
mov
mov
sti
dec
mov
jo
stos
arpl
mov
sub
inc
sbb
pop
fldl
mov
movsl
jb
mov
shlb
sbb
aam
and
inc
inc
sub
aaa
mov
xor
scas
ss
mov
cmp
pop
cli
movsb
sub
es
cmp
data16
inc
fimuls
fbld
dec
dec
out
xor
xor
add
cmp
je
adc
cmp
adc
xchg
clc
repz
fbstp
pop
inc
test
mov
pop
jg
mul
dec
mov
iret
and
pop
inc
pushf
pop
xchg
ds
int
iret
push
loop
xchg
das
pop
sub
mov
inc
push
mov
inc
out
cld
addr16
call
test
cmp
lret
and
adc
cltd
pop
mov
insb
mov
cmpsl
leave
push
sti
push
mov
aam
mov
push
sbb
daa
in
push
adc
sbb
mov
xchg
mov
adc
bound
ja
push
loop
movsl
push
sbb
mov
mov
xor
pop
div
fsts
mov
fistpl
mov
mov
scas
ja
pop
out
sub
sti
hlt
xchg
mulb
pushf
mov
mov
test
cmpsl
aas
ret
std
sub
mov
add
inc
adc
jmp
je
and
stc
jmp
cli
dec
inc
lods
mov
push
cltd
xchg
out
pop
mov
ds
imul
dec
pusha
pop
dec
sahf
ja
ja
pop
cmp
in
mov
lcall
inc
mov
das
mov
cmpsl
out
fisttpll
or
pop
mov
int
jo
pushf
or
jge
push
sbb
xor
push
pop
stc
fnstcw
jno
icebp
leave
fadds
imulb
sbb
xchg
clc
loop
xor
xchg
adc
jg
call
pushl
loop
push
push
pop
sti
stos
minps
lock
inc
mov
pop
or
add
sub
pushf
scas
addr16
sbbl
xor
inc
sub
jge
ja
xor
das
pop
ss
adc
mov
or
insb
dec
outsb
icebp
cmp
test
push
mov
stos
sarl
and
ficomps
sub
cld
jbe
add
push
and
bound
jae
jbe
jnp
pusha
dec
push
inc
jl
es
push
orb
cmp
mov
mov
adcl
daa
loopne
cmp
mov
add
fnstenv
sbb
sbb
sti
add
lods
sarl
arpl
push
mov
dec
mov
inc
leave
lea
and
inc
in
or
add
test
mov
lret
out
outsb
xor
test
cwtl
jecxz
mov
sub
mov
mov
xor
mov
adc
cmp
cmp
jg
mov
lahf
mov
fstpt
js
lcall
jmp
aaa
lods
mov
jo
push
jb
sbb
inc
xchg
cli
out
test
mov
or
add
and
test
jb
dec
ljmp
ss
add
sub
pop
xor
mov
push
lods
push
xchg
jmp
insb
xor
les
aaa
lret
nop
cmp
inc
test
or
sub
repz
xchg
sbb
data16
frstor
jbe
add
mov
sbb
sbb
ret
mov
add
lds
mov
jmp
push
xchg
enter
ret
xor
jb
sub
lcall
stos
or
push
sbb
hlt
fistps
mov
adc
cmp
aaa
shrl
enter
jl
dec
fisttps
andl
and
mov
adc
dec
rolb
sbb
xchg
hlt
pop
add
pushl
negb
cmp
cmovs
dec
test
ret
xchg
push
and
and
cmp
mov
jae
and
pop
pop
or
lock
xor
push
push
inc
aad
gs
test
ret
mov
aas
xchg
push
flds
ljmp
fsubrp
or
mov
xorb
sub
test
lock
clc
push
scas
das
and
mov
push
int
lods
xor
shlb
lret
rclb
mov
leave
xor
push
mov
inc
push
pop
inc
xor
mov
sbb
pop
dec
aaa
and
es
adc
xchg
je
xor
push
sbb
jae
bnd
es
and
xchg
pop
aam
test
adc
scas
cmp
inc
push
mov
daa
and
in
cmpsb
xor
inc
test
sbb
jp
cli
mov
ficompl
shll
sub
aaa
pop
lcall
les
mov
cmp
scas
in
add
fbstp
mov
xchg
adc
mov
dec
sub
mov
push
push
cs
aas
sbb
rorb
and
and
sahf
sti
sbb
cwtl
imul
jl
push
add
inc
das
andb
test
rcr
and
out
dec
sub
mov
cmpsb
outsl
cmp
inc
push
mov
fs
pusha
push
pop
sbb
push
cmp
sarl
cmp
mov
imul
adc
inc
pop
and
mov
lds
lea
push
xchg
push
cmp
movsb
test
pop
mov
mov
mov
sar
stos
xor
adc
sub
arpl
leave
mov
and
and
push
or
inc
mov
test
and
lock
cs
or
imul
inc
fimuls
cmpl
mov
or
mov
sub
mov
jns
inc
add
xchg
jmp
jnp
push
leave
sbb
lock
insb
sub
mov
mov
bound
pop
jo
sub
mov
les
in
mov
enter
add
xor
mov
int
jg
lahf
push
leave
test
inc
cli
mov
cld
sbb
fldt
inc
jns
push
mov
ja
jno
pop
cltd
jmp
pusha
je
aad
cmpsb
dec
popa
roll
in
add
pop
dec
fidivs
pop
dec
xchg
in
in
mov
sub
adc
xlat
pusha
mov
andl
arpl
xor
mov
jmp
ret
or
jecxz
mov
cmp
lods
lea
mov
imul
mov
aad
sbb
shrb
cmp
cmp
jno
mov
das
or
repz
mov
in
and
xor
jge
iret
ljmp
hlt
lods
lahf
pop
cli
lds
mov
fs
das
insb
add
dec
mov
lock
cmp
push
movsl
jmp
icebp
cmp
cmp
sbb
and
stos
sub
imul
cmp
inc
insb
pop
jle
and
inc
mov
ds
adc
push
lds
shll
fsubrs
out
das
loope
xor
aas
sub
and
cmc
movsl
push
adc
sub
mov
xchg
sbb
test
dec
lahf
and
adc
pop
xor
lods
ret
adc
cmp
sub
sub
shlb
scas
inc
mov
sar
leave
mov
push
add
inc
in
sbb
filds
sbb
fldl
inc
pop
adc
mov
and
jge
push
mov
sahf
mov
push
sub
stos
push
lds
xor
sbb
mov
or
mov
inc
sub
jecxz
imul
mov
jecxz
lds
adc
loopne
sub
sub
mov
pop
hlt
cmpsb
jo
push
xlat
out
inc
mov
cmp
loope
sbb
mov
clc
mov
cmp
xor
adc
lea
push
lods
dec
xor
daa
je
push
sbb
adc
sub
rcl
cs
inc
add
cmp
leave
pcmpeqb
es
push
inc
sub
add
or
inc
inc
push
in
fwait
popf
xchg
sub
xchg
icebp
nop
or
int3
sub
mov
mov
jmp
jmp
mov
and
fs
loopne
push
fst
xlat
cwtl
jmp
jecxz
in
icebp
dec
pop
cmp
daa
scas
xchg
loopne
jns
dec
out
adc
jecxz
adc
dec
stos
push
lods
xchg
pop
xchg
cmp
sub
push
mov
in
in
inc
pop
ret
out
sbb
popa
bound
ss
lods
inc
sub
xor
dec
aam
xchg
pusha
jp
adc
jmp
pop
inc
movsl
mov
lahf
cli
pop
mov
xchg
cmpsb
cmp
jecxz
or
sub
and
and
int
int3
loope
sahf
push
or
inc
adc
ja
enter
aam
addr16
push
add
mov
sub
lahf
nop
jns
fistl
jnp
inc
test
add
mov
ret
jp
xor
shlb
shl
int3
mov
push
cmp
sbb
outsb
dec
inc
mov
sub
inc
aas
adc
sub
and
sub
dec
sub
mov
sub
xor
inc
mov
loopne
inc
dec
or
mov
or
stos
int
sahf
adc
popf
sub
mov
popf
sbb
jle
das
je
push
dec
jmp
xor
lret
and
mov
idivl
sub
push
repnz
seto
shll
sub
pusha
out
sub
in
cmp
pop
mov
ss
jno
data16
ja
adc
mov
cwtl
cmp
fcomps
insl
mov
xchg
mov
mov
mov
dec
test
stos
popa
mov
movsl
add
xor
into
fisttps
call
lods
andl
mov
mov
inc
enter
movsb
cmpsb
insb
xchg
jle
and
dec
mov
sub
fdivr
jnp
mov
in
mov
sarb
imul
or
xor
and
ss
sbb
mov
dec
mov
sub
cmc
int3
fnstenv
xchg
leave
addr16
xor
sub
aad
xor
inc
cltd
iret
push
dec
and
and
cltd
adc
and
sti
sahf
cmp
in
or
cli
sub
nop
repnz
nop
loop
jb
sub
cmp
dec
int
das
dec
insl
cmp
sub
mov
adc
cmpsl
xor
es
sub
push
mov
ficomps
stos
sbb
sbb
stos
cli
cmp
sub
int3
insl
dec
outsb
movsb
test
vunpckhps
stos
adc
xor
movaps
pop
outsb
xor
inc
ljmp
xchg
lahf
repnz
movsl
lea
push
movsl
pop
cltd
mulb
dec
and
cmpsb
scas
dec
push
cmp
daa
and
pusha
adc
pop
dec
fsts
pop
cmp
outsl
add
jno
push
mov
je
mov
mov
in
cmp
andb
insb
cmc
jl
sbb
sub
dec
cmp
data16
mov
dec
inc
mov
mov
sbb
and
pusha
mov
mov
test
ret
jecxz
and
int3
cmp
test
or
add
and
aas
mov
xor
cld
gs
and
and
push
adc
cmp
lock
popa
push
sub
jp
add
xor
clc
ljmp
mov
std
and
and
sahf
xor
mov
xor
push
fisttpll
push
xor
mov
in
sub
sbb
jl
lahf
dec
adc
cmp
mov
ror
out
and
movb
jl
and
xor
xchg
cmp
outsb
popa
ds
popf
out
adc
test
xchg
movsl
sbb
sub
ret
add
xchg
push
sub
mov
mov
sbb
int
push
add
xor
xor
sbb
xor
mov
js
std
adc
mov
mov
and
cltd
scas
mov
sub
adc
insb
inc
push
and
fdivrs
pop
testl
mov
xor
mov
sub
movsb
push
sub
pop
adc
cmp
xchg
fs
jbe
sbb
test
pusha
es
mov
icebp
mov
inc
jl
xor
ror
xor
xor
mov
pop
cmp
mov
sbb
jb
sub
sub
aaa
call
in
sub
xor
or
ror
jg
inc
and
cmp
mov
stos
cmp
bound
dec
test
dec
cmp
or
fbld
aam
imulb
cmp
ficoml
pcmpeqd
cmp
sub
fucomi
push
mov
push
aas
jb
mov
aas
jne
aam
lods
loope
pusha
sbb
lods
adc
or
not
sbb
add
mov
push
sbb
pop
minps
out
sahf
cmp
mov
stc
repz
add
lods
xor
ja
ret
out
cld
jp
push
push
or
pop
dec
xor
jb
pop
outsb
ret
fcmovnu
mov
nop
dec
dec
cld
pop
xchg
mov
add
stos
adcb
and
into
push
mov
add
arpl
and
adc
xor
loopne
mov
arpl
and
fcomps
push
and
es
dec
divl
mov
mov
scas
mov
xchg
in
aam
mov
and
sbb
pop
aas
js
mov
cmp
sbb
pop
sahf
setg
push
inc
mov
add
and
jb
sub
sub
push
iret
xor
cmc
ljmp
pop
aas
sbb
dec
hlt
sub
js
repz
mov
mov
movsb
mov
dec
xor
leave
xorl
lcall
pusha
jae
cs
repz
pop
add
pop
pop
adc
movsl
outsb
sbb
pop
hlt
adc
or
cmp
outsl
mov
movsl
into
add
pop
call
lds
out
adc
repnz
pusha
xorb
cmpsb
sbb
cwtl
xchg
ljmp
sub
sbb
cmp
out
adc
sbb
or
arpl
in
xor
push
cmp
rclb
dec
test
ss
mov
daa
and
and
scas
lock
test
or
xor
jge
lds
and
hlt
rcll
iret
push
add
push
ds
mov
gs
and
mov
push
mov
jle
sarb
sbb
pop
xchg
and
cmp
inc
dec
enter
rorl
jg
mov
lret
jge
add
loop
xchg
icebp
sub
into
ja
shlb
push
lea
add
pop
mov
and
pop
xor
cmp
out
xchg
lods
jecxz
pop
dec
scas
les
not
push
adc
daa
test
cmp
and
sub
fdivs
test
popf
mov
jae
pop
ret
test
sub
adc
mov
ret
push
xor
test
and
lea
xchg
ljmp
leave
dec
ljmp
jge
xchg
push
fdivrl
leave
int3
xor
pop
popa
leave
xor
mov
push
ret
adc
xchg
mov
cs
outsb
outsl
cli
lcall
in
cld
mov
mov
std
test
xcrypt-ctr
cmpsl
push
out
loopne
xor
push
cli
cmp
push
fisubl
dec
mov
out
jle
add
decl
sbb
popl
cmpsb
or
mov
add
xor
jb
movsl
adc
inc
xchg
stos
loop
cli
inc
aam
push
rorb
aaa
int3
add
loopne
add
test
out
inc
and
xor
push
xor
clc
fstpt
jo
stos
mov
jne
lcall
out
push
xchg
jbe
pusha
add
jns
xchg
mov
mov
xor
pushf
pop
int
jae
scas
daa
imul
jg
pop
adc
mov
bnd
xchg
mov
xlat
test
mov
mov
imul
jo
lret
in
xor
add
xor
ds
fcmovnb
mov
sbb
in
lock
rcl
cmp
mov
push
fnstcw
cmp
jl
xchg
inc
add
aaa
leave
dec
gs
imul
aad
mov
nop
dec
insb
xchg
sbb
lea
and
sbb
mov
inc
insl
aad
dec
pop
mov
add
xchg
icebp
out
adc
adc
into
xor
gs
pop
imul
cld
cld
fisubrl
mov
or
test
dec
daa
xlat
test
repnz
in
xor
repz
jl
and
fs
sub
movsl
xor
adc
scas
cwtl
mov
inc
and
jns
pop
add
mov
add
out
fcomps
testb
push
cmp
aam
cwtl
sti
cmp
imul
push
mov
dec
lods
cmpsb
dec
sbb
add
mov
lcall
fdivs
icebp
jge
inc
loop
cmpsl
adc
dec
nopl
jge
mov
test
mov
mov
sbb
mov
and
jp
sub
xchg
and
sbb
test
xchg
mov
and
push
jl
mov
inc
adc
add
ret
and
add
jne
pop
xchg
out
jbe
addr16
or
add
test
shll
outsl
into
shrb
add
push
mov
pop
movsl
mov
adc
add
xor
fsubl
push
sbb
nop
mov
jae
pop
fisttps
cmovno
outsb
sub
lds
push
jge
jnp
sahf
cmp
add
adc
fisubrl
sub
pop
std
imul
lahf
pop
ja
jae
fists
fcmove
and
jp
adc
loop
aam
or
test
lahf
icebp
rorl
pop
pusha
add
dec
insb
test
rorl
movsl
repz
jae
lret
and
sbb
mov
nop
push
cmc
test
xor
jne
cmp
jno
adc
cltd
sbb
sbb
lea
fdiv
loope
repz
lock
cmp
inc
fimull
mov
fimull
arpl
sub
imul
sub
fs
aaa
popf
pop
xchg
and
cmp
lock
jmp
cmp
add
les
add
fldenv
xlat
rcrb
push
jae
test
dec
mov
adc
out
outsl
and
sub
js
or
lods
xchg
nop
addr16
cmp
bound
or
sub
scas
dec
pop
cld
movsb
cltd
fisubs
xchg
sub
js
mov
jno
fistpl
mov
testb
adc
mov
sarl
jno
in
mov
stos
sbb
xchg
and
push
mov
aas
push
and
into
pop
lret
daa
sbb
cmpsb
sub
test
leave
pop
xchg
inc
adc
mov
inc
call
xor
insb
jg
cmp
movb
icebp
xchg
pop
add
scas
or
loope
popf
add
jecxz
aas
sbb
mov
fwait
xchg
lock
sbb
jnp
pop
adcb
fsubs
sbbl
cmp
and
sbb
lods
sbb
loop
add
ret
out
adc
shr
jae
lret
imull
adc
cmp
adc
sti
movsb
fistpll
mov
jnp
lods
and
pop
sbb
aam
fcomps
sbb
cwtl
cmp
pop
jno
fs
push
sti
jbe
scas
lret
scas
pop
sub
pop
push
imul
mov
add
lret
pop
sub
popf
dec
cmpsl
bnd
pushf
add
mov
in
xorb
pop
jnp
clc
fldenv
push
jnp
insl
mov
rcrb
clc
pop
pop
sub
dec
cli
bound
fistps
pushf
mov
ja
or
ss
insb
fdivl
adc
sbb
scas
xchg
cmp
ficoms
gs
out
or
sbb
out
jle
sti
sti
dec
outsl
mov
test
fdivs
loopne
stc
aam
xchg
dec
fdivs
fsubp
ds
xchg
repz
ja
add
aas
mov
dec
pop
xchg
adc
nop
push
stos
popa
and
dec
adc
mov
lods
pop
sbb
inc
popa
xor
aaa
arpl
enter
push
add
xchg
pop
imul
adc
test
pop
scas
push
and
adc
leave
test
repnz
sub
sub
add
xchg
or
in
pop
jo
mov
and
dec
mov
cmp
jne
lret
cli
mov
cltd
jp
hlt
cltd
xlat
add
pop
cmp
and
jmp
mov
call
mov
inc
test
and
outsb
push
fucom
mov
aaa
or
ss
push
clc
sbb
xor
cmp
and
fisubl
push
xorb
push
fwait
addr16
adc
aas
and
ja
sub
sub
sub
insb
daa
jb
cwtl
xchg
popa
jmp
cmp
add
inc
or
pop
ret
dec
lahf
cmp
cltd
mov
in
mov
mov
test
rcll
fwait
jo
movsb
stos
push
in
adc
cld
fs
sub
faddl
lock
pop
push
jp
lret
and
lret
sbb
mov
fwait
jno
adc
sub
lea
jle
add
in
movsb
sarb
adc
mov
inc
sbb
nop
add
and
cwtl
ljmp
pop
sub
test
or
push
push
pop
mov
mov
adc
mov
insl
pop
cmpsb
mov
add
jp
ljmp
adc
icebp
cmpsl
xor
stos
jne
push
pop
mov
daa
out
ficomps
sub
fcoml
mov
fiadds
fistpll
lds
inc
nop
adc
es
jmp
cmp
aaa
add
orb
iret
adc
dec
loop
call
cs
fcomps
stos
xchg
divb
out
add
lods
dec
mov
out
mov
pop
aad
lret
pop
add
jne
shlb
add
add
dec
xchg
int3
xor
loope
jp
jl
jns
mov
lods
scas
in
adc
sub
cmp
add
jg
push
or
insb
ss
bnd
xor
sub
push
ficoms
jmp
movsb
int
push
adc
sbb
xchg
lcall
and
test
and
bound
popf
mov
adc
ljmp
push
call
pop
stc
mov
dec
cltd
nop
mov
aaa
push
dec
push
dec
outsl
sub
fs
xchg
xor
iret
sahf
jle
mov
sbb
hlt
xchg
test
jae
push
addr16
dec
aaa
out
push
mov
arpl
in
adc
subl
ret
jl
test
xchg
push
out
dec
xchg
or
out
mov
call
bound
or
sub
lock
bound
out
aaa
hlt
mov
test
pop
cmp
sub
adc
loop
push
lahf
cltd
loop
pop
sbb
pop
push
sbb
cmp
das
xchg
jne
iret
out
push
adc
cmp
mov
adc
fbld
insl
and
sbb
fsubr
aaa
add
adc
lods
jbe
add
insl
inc
adc
push
pop
jp
fmulp
mov
decb
fcomps
and
arpl
push
sbb
fsts
loope
lahf
jecxz
xor
and
cmp
out
adc
ss
sub
aad
lods
loop
test
adc
xor
push
test
and
pop
pop
test
test
xchg
and
rcl
bound
rol
call
not
push
dec
fbstp
scas
mov
cmp
mov
inc
sbb
rclb
adc
inc
mov
shlb
es
arpl
int
dec
in
ret
and
fmuls
jo
jl
cmp
pop
push
sub
stc
lahf
sub
add
cltd
clc
jo
mov
add
cs
add
loope
push
push
in
and
leave
push
adc
and
cmpsl
jmp
adc
dec
sbb
ret
dec
popa
adc
lcall
pop
das
out
push
push
sub
sbbl
sbb
pop
and
mov
rclb
add
xchg
mov
or
add
sbb
mov
add
dec
fcomps
xchg
sub
sub
adc
icebp
ja
jle
je
jl
outsb
pop
stc
ljmp
lods
mov
stos
fldenv
and
xor
sbb
cwtl
cmp
sub
stos
mov
mov
imul
lahf
and
cmc
mov
add
insl
push
int3
mov
in
push
xlat
pop
inc
inc
les
pop
mov
out
cltd
mov
mov
cmpsb
ds
pusha
or
out
nop
or
jns
dec
movsl
stos
or
stos
or
mov
andb
fpatan
scas
xchg
xchg
fs
or
pop
test
and
add
sbb
jo
adc
lahf
xchg
in
sub
jg
cltd
aas
repnz
jb
pop
int3
jge
je
cmp
push
dec
jns
outsl
decb
jne
les
mov
inc
adc
je
push
inc
lock
push
stc
fcomp
xlat
mov
cmp
fwait
cmp
movsb
sub
int3
xchg
adc
or
subl
push
pop
inc
cli
and
pop
cmpl
notb
inc
push
sub
mov
gs
into
pop
cmp
aad
vmovups
cltd
out
sbb
jmp
testl
sbb
repnz
psllw
inc
push
out
xchg
dec
and
sub
adc
lea
or
and
xor
adcb
mov
out
inc
xchg
aas
into
nop
and
and
pop
add
out
fwait
pop
inc
pop
stos
in
dec
cmpsb
adc
aaa
shr
ljmp
in
or
mov
xchg
loope
pop
ficompl
mov
cmp
sarl
pop
mov
and
scas
pop
or
adc
sbb
or
jmp
out
adc
adc
rorb
ret
ljmp
and
lods
cld
fs
push
push
repz
adc
scas
dec
and
mov
or
ret
popa
sbb
and
lret
lods
push
and
dec
lds
pop
sub
sahf
mov
test
push
inc
ds
xchg
aas
pushf
xchg
cltd
shrl
pusha
lret
mov
sbb
inc
daa
mov
push
es
aad
pushf
fildl
punpcklwd
sub
adc
or
jo
aam
push
pop
sbb
mov
in
lods
fimull
popa
nop
inc
mov
jp
adcb
es
inc
ss
int3
jge
scas
xchg
das
add
repz
js
out
pop
jl
test
std
fstps
sbb
push
xor
push
aaa
push
pusha
mov
jo
and
andb
push
or
fdivs
or
insl
push
popa
popa
pop
aad
ret
sbb
andl
cwtl
loopne
mov
icebp
mov
sub
mov
and
into
sub
ficomps
push
sub
mov
shrb
add
aad
push
or
add
push
aas
fs
and
jns
lahf
cld
dec
stc
pop
and
das
lds
test
test
ret
and
lods
push
lods
dec
xchg
outsl
cmpsb
insl
lret
test
jne
sbb
cmc
bound
std
out
add
add
movsb
rclb
mov
cmpsl
push
frstor
js
int3
fldcw
les
test
out
jle
popa
fcmovnbe
les
mov
pop
addr16
xor
aas
ljmp
lods
xchg
mov
test
cmp
inc
xor
dec
es
push
shl
xchg
mov
xchg
pop
xor
xlat
mov
cmpsb
mov
je
test
roll
or
jge
xor
outsb
cmp
or
push
subl
push
or
lea
sbb
pop
jmp
lret
lea
mov
testb
ss
ret
jle
cmp
dec
push
push
dec
cmpsb
push
xchg
in
jl
xchg
rcrb
dec
push
push
pop
into
adcl
bswap
leave
sbb
mov
xor
lahf
pusha
insb
lea
xchg
cmpsb
mov
cmpsb
jbe
push
pop
xor
xor
add
pop
sub
test
xlat
cld
pop
popa
fadd
pop
stc
mov
addr16
and
ja
jl
fxch
jecxz
xchg
cmp
mov
dec
jbe
push
imul
mov
cltd
movb
fwait
push
push
scas
mov
pop
dec
into
adc
cld
int3
xchg
imul
add
outsl
adc
cld
psubq
inc
fs
xchg
add
jne
int3
xor
clc
sub
or
mov
das
mov
inc
push
notb
inc
xchg
bound
movb
or
pop
pushl
mov
cmp
mov
inc
push
push
ret
mov
mov
inc
sub
into
dec
mov
es
sub
aas
lock
mov
adc
loope
fisubl
mov
in
cld
ds
subl
jns
mov
repnz
and
sbb
adc
lret
popa
xlat
ret
lods
inc
jge
add
sbb
cmp
rorb
in
insb
or
pop
fsub
movsl
imul
add
rorl
push
aaa
dec
jns
mov
push
or
inc
adc
ja
mov
xor
insl
ljmp
inc
maxps
imul
add
les
insb
xor
fs
push
xchg
jl
stc
sub
movsb
xor
into
dec
mov
bound
cmovl
mov
nop
dec
cli
inc
pop
xor
sub
repnz
dec
mov
rcl
xchg
xor
jmp
push
jne
pusha
dec
data16
aas
mov
movsl
ficompl
xchg
xor
das
xchg
adc
cs
mov
scas
pop
pop
jge
out
inc
cld
dec
daa
inc
push
es
mov
mov
sbbb
push
bound
dec
adc
mov
inc
or
cmp
mov
xchg
sbb
stc
mov
ret
out
push
cmpsl
xor
xor
inc
loop
or
lahf
mov
inc
and
mov
pushf
push
lds
test
jmp
gs
cmpb
add
sarl
adc
mov
mov
and
adc
jl
mov
mov
or
stos
xchg
and
cltd
xchg
mov
test
stos
cmp
adc
or
or
pushfw
inc
testl
cwtl
popa
pop
int3
icebp
jp
dec
pop
test
cmp
cltd
stos
js
out
inc
dec
call
lahf
jne
pmaxub
js
jge
mov
sub
inc
nop
cmp
push
inc
call
popa
xchg
push
and
loopne
and
sub
lock
add
cs
out
aaa
jge
dec
jae
pushf
mov
dec
lea
in
adc
and
or
and
insl
sbb
and
sbb
inc
xchg
jno
cmp
inc
sbb
ret
cmpsb
stos
push
adc
xor
xchg
cmpsl
pop
cmp
scas
jecxz
push
mov
mov
jecxz
sub
iret
fstps
cmp
pop
loop
imul
aas
and
or
sbb
dec
out
sub
sbb
js
fldpi
add
push
cltd
jmp
dec
xor
or
xchg
ljmp
test
add
xor
adc
insb
mov
lock
sub
bound
leave
push
rcll
mov
mov
mov
jmp
repnz
inc
imul
push
lods
dec
or
sub
ja
mov
or
xchg
jle
cs
psllw
inc
lret
and
fcomp
nop
lcall
and
lea
adc
mov
rcll
cltd
xlat
movsb
adc
dec
lock
sub
sub
or
xchg
inc
xchg
and
icebp
xor
xchg
out
je
rorl
push
ucomiss
jg
stc
xchg
leave
xcrypt-cbc
cmpsl
xchg
jns
sub
xchg
repnz
jmp
scas
pushf
dec
adc
jmp
rorb
xchg
xchg
and
lahf
mov
xchg
stc
inc
stc
roll
push
pop
pop
shrl
out
movsl
and
ljmp
inc
mov
jle
test
sbb
cmpsb
cmpsl
icebp
into
inc
and
push
scas
insb
pop
jge
add
sbb
fimull
inc
test
jno
cltd
lods
adc
int
sbb
sbb
fcmove
pop
cmpsb
sub
mov
inc
inc
ror
lods
sahf
dec
mov
adc
cmpsb
addb
jbe
and
gs
and
outsb
push
sti
aas
xchg
nop
ss
cmp
fwait
xor
cmp
fs
jbe
mov
mov
inc
in
int3
adc
xchg
out
and
push
jo
add
out
scas
or
lock
mov
xor
popl
loop
cltd
mov
sbb
fisubrl
sub
mov
call
xor
mov
je
inc
lods
sbb
xchg
cmpsb
fwait
sti
inc
sbb
or
aam
adc
movsb
mov
jp
sbb
cmp
daa
xor
inc
push
push
sbb
lcall
push
nop
xor
inc
or
pop
dec
xchg
inc
xchg
and
xchg
pop
push
int3
xchg
fs
pop
repz
aad
add
in
lock
sbb
lods
fimull
mov
or
popa
cmp
ds
adc
std
cli
int3
pushl
push
dec
and
mov
pop
xchg
lds
or
pmullw
jmp
int3
dec
shlb
repnz
in
inc
repz
jns
mov
daa
cli
clc
iret
jge
adc
dec
xchg
pop
sub
lds
mov
repnz
imul
cwtl
mov
sahf
mov
dec
pop
fs
rcrb
xlat
insl
arpl
jecxz
je
inc
push
xchg
add
lock
cmpsb
test
mov
je
mov
jge
call
xor
inc
adc
xchg
jge
lock
bound
or
sahf
ljmp
cmp
inc
insb
push
fmuls
and
scas
or
stc
into
js
add
stos
dec
or
pop
in
scas
push
adc
dec
inc
fcom
pcmpeqb
pop
add
sub
dec
stc
adc
mov
xchg
push
std
icebp
test
sub
inc
add
repnz
or
int3
mov
mov
jnp
mov
add
jle
sbb
adc
out
xchg
outsb
inc
cltd
inc
imul
sbb
xor
adc
pop
push
cli
into
testb
adc
fistps
cli
nop
jo
fs
add
push
mov
ja
push
clc
add
inc
imul
or
sub
popw
imul
arpl
cmpsb
dec
fs
pusha
and
ljmp
je
and
dec
out
ja
xchg
addl
dec
xchg
jb
jo
sub
sti
popf
xor
in
pop
dec
dec
sbb
fcmovbe
fsts
sbb
out
inc
aam
and
pusha
repz
pop
lods
jecxz
sub
or
xchg
mov
mov
gs
icebp
xor
pushf
mov
sbb
push
leave
popa
in
lret
and
sub
fsubrp
inc
aas
push
stos
mov
dec
mov
mov
xchg
outsb
ds
imul
or
stos
mov
push
dec
xchg
sub
sbb
or
insl
push
rolb
xchg
hlt
lods
xchg
mov
lods
xlat
and
sbb
pop
popf
iret
and
or
pop
sub
sub
lcall
push
aas
mov
pop
das
scas
add
divl
ficomps
pop
mov
push
test
daa
push
dec
mov
xchg
daa
fisttps
testb
loope
aas
lods
add
insb
xchg
arpl
rorb
push
lock
and
aas
mov
lret
push
dec
xchg
icebp
inc
dec
movb
push
and
or
add
arpl
lods
sbb
push
mov
daa
sbb
xchg
das
rorb
in
xchg
mov
mov
xchg
fnstsw
pop
loope
lods
dec
and
int3
xor
rcrb
jb
daa
mov
fsubs
out
jo
loopne
int
add
in
push
loope
jns
push
shlb
push
imull
cmp
sub
mov
test
insl
adc
fs
jle
arpl
rorb
xor
popa
rol
sti
jmp
xchg
and
pop
cwtl
dec
mulb
mov
je
inc
pop
fisubs
cmp
call
into
fldcw
daa
pop
stos
cmp
and
pushf
jmp
in
dec
pop
icebp
sbb
jnp
pop
shrb
loopne
lock
xor
outsb
inc
and
dec
popl
into
xor
sbb
add
or
out
js
loopne
push
pusha
push
xchg
xor
jnp
jnp
pop
dec
lods
jge
push
shll
or
push
sbb
inc
cli
and
add
add
dec
in
setno
notb
gs
inc
inc
sahf
add
sub
das
movsb
cmp
jle
imul
mov
xor
mov
movsl
dec
bswap
mov
push
pop
or
es
and
shrb
sub
test
std
sub
sub
sub
test
insb
fdiv
and
cltd
jb
cli
repnz
push
sahf
aad
and
ficoms
add
das
shl
add
pop
push
push
push
mov
sub
adc
clc
mov
adc
sub
and
mov
flds
lods
and
ljmp
pop
xchg
daa
adc
push
icebp
and
push
jge
test
test
fldenv
mov
mov
popa
push
aaa
int
cmp
inc
cwtl
cmpsb
push
push
and
cmp
test
sub
ja
sbb
test
stos
ljmp
cs
jp
dec
inc
pop
clc
test
mov
pop
inc
jne
cs
xor
cld
ljmp
jne
dec
mov
nop
adc
imul
push
sbb
fwait
pop
xor
movsb
cmp
in
mov
mov
rorl
jecxz
push
stos
imul
inc
incb
imul
jge
jne
sub
loopne
jle
jae
test
insl
sub
jbe
pop
ja
sti
cmp
push
or
js
lods
jge
xlat
cmpsl
test
or
js
jl
inc
jbe
or
mov
insl
fwait
lret
inc
xchg
jne
add
adc
and
sbbb
cmpsl
xor
adc
addr16
stos
mov
jno
clc
ljmp
imul
xchg
jno
sub
or
jg
call
jns
adc
sbb
xor
or
test
cmp
and
fsubs
push
or
inc
inc
pop
sti
pop
aam
lock
jo
and
mov
loope
pop
and
sbb
sbb
and
insl
dec
sbb
mov
or
outsb
pop
dec
in
push
xor
idivb
dec
sahf
add
and
out
stos
sub
push
in
inc
sub
sub
sbb
mov
ds
sbb
and
aas
ret
mov
or
push
mov
ret
pop
sarb
shrb
orb
mov
cmp
dec
pop
xchg
pop
rorl
icebp
mov
pushl
fadds
icebp
xor
cmp
sub
outsl
xchg
jns
movsb
sbbb
push
adc
and
add
pop
inc
pushf
dec
inc
jo
ficomps
les
and
pusha
mov
fldl
lea
mov
insl
hlt
mov
mov
adc
mov
in
push
pop
iret
sbb
cmp
test
mov
inc
dec
popf
sbb
pop
add
mov
jb
add
imul
fs
dec
and
sbb
inc
popf
je
fmuls
sbb
add
sahf
cli
rorb
pcmpgtd
lahf
pop
or
ss
pop
jns
aas
xchg
rcll
xor
adc
mov
mov
insb
push
dec
dec
pop
sbb
mov
insl
mov
adc
push
ret
add
jbe
push
push
xor
inc
ficoms
sbb
leave
lea
and
sub
out
jno
jmp
mov
icebp
add
jae
xchg
xor
into
push
aaa
xchg
pop
cmp
ljmp
sbb
dec
cmpsl
jecxz
add
js
inc
test
mov
pop
sbb
mov
mov
adc
or
xor
ret
push
jns
nop
mov
into
fwait
xchg
dec
out
add
and
sbb
sbb
push
fisttps
lret
xor
sbb
inc
sub
pop
imul
dec
inc
fisubrs
cmp
dec
xor
imull
dec
subb
adc
inc
outsb
jo
or
or
and
lret
dec
push
and
jae
xor
jg
lret
xor
pop
mov
xor
nop
out
mov
jg
pop
cmpsl
es
sbb
xor
dec
mov
pusha
pop
scas
xchg
sub
mov
sbb
jo
or
xor
sbb
push
call
imul
outsb
push
repz
xchg
pop
popa
idivl
add
imul
outsb
jne
push
arpl
jl
jge
and
push
xchg
xor
pusha
dec
sbbb
inc
xor
cmc
outsb
push
or
es
lahf
sti
shll
icebp
add
movsb
sbb
adc
or
in
sub
sbb
xchg
mov
sub
jmp
popa
repnz
mov
adc
adc
inc
sub
pop
insb
add
pop
and
pop
test
loopne
add
jecxz
std
add
jns
adc
xchg
cmc
xchg
test
push
pop
mov
inc
in
add
pop
push
dec
and
in
xchg
vmovdqu
mov
arpl
and
movsb
loope
dec
cltd
sub
sbb
stos
add
jl
push
mov
lcall
fildl
cld
inc
mov
and
stos
bound
js
daa
out
flds
fsubrl
push
mov
mov
test
mov
loop
sbb
sub
aaa
sbb
sbb
fnstenv
push
mov
pop
cmpb
jno
pop
and
cmp
loop
movsb
faddl
stos
pushf
leave
repz
push
jle
popa
xchg
jecxz
in
js
iret
daa
dec
sbb
add
and
out
test
idiv
jmp
imul
sti
xor
shll
and
insl
fxch
push
and
lods
inc
jne
mov
jle
leave
lret
cmpsl
mov
push
sub
into
dec
adc
sbb
sbb
jp
mov
rclb
fidivrl
adc
lods
cli
int
lret
mov
aaa
lret
push
stos
mov
pop
add
bound
outsb
push
add
outsb
ret
lret
cmpb
ja
add
icebp
jge
sbb
mov
push
fcompl
rcrl
test
inc
fdivrp
aaa
add
adc
or
lods
loope
fs
jg
bound
popf
sarb
and
jp
xor
mov
jo
pop
in
adc
sbb
addr16
adc
mov
hlt
imul
jmp
add
pop
into
ds
mov
push
outsl
jb
inc
fcmovb
daa
pop
or
arpl
xchg
push
mov
xor
xor
pop
add
cmpsb
in
and
sub
or
lods
arpl
jns
pop
mov
addr16
jg
cmp
aas
pop
add
out
jb
dec
nop
add
xor
bound
aam
js
xor
adc
mov
imul
mov
mov
adc
lret
shlb
pop
or
and
cld
test
mov
pop
sbb
push
loop
pop
insl
mov
push
push
or
xor
movb
sahf
sub
mov
jecxz
rcrl
jne
push
loope
in
jle
sub
jg
xor
pop
and
push
nop
addr16
sub
xchg
cs
rolb
or
dec
pop
adc
out
push
int
cmpsb
jp
insb
and
movsb
cmp
pop
ljmp
in
push
outsb
fisttpll
or
dec
rclb
adc
lods
push
dec
or
imul
scas
les
hlt
int
sub
xor
pusha
pushfw
and
and
or
loopne
or
push
push
xor
add
call
mov
gs
mov
mov
ljmp
and
in
or
mov
je
xor
pop
jo
sub
adc
inc
xchg
xor
cld
push
adc
sahf
es
dec
cmp
xor
mov
add
jp
mov
movsb
sub
mov
cli
into
lds
rcr
sub
dec
movsl
mov
adc
cld
ss
stos
add
call
loope
jnp
mov
cmp
imul
lahf
sbbb
xlat
mov
js
pop
jne
arpl
das
sub
jmp
js
fldcw
pop
testb
mov
stos
mov
cltd
lret
sbb
fdecstp
sub
mov
lds
mov
mov
ret
sbb
adc
scas
ret
xlat
or
lahf
add
push
jno
aas
pop
loope
or
gs
movl
dec
dec
jecxz
iret
push
test
pop
xor
stc
rol
adc
push
xlat
adc
inc
push
shl
rsqrtps
jo
sub
test
or
fadd
adcl
jecxz
divb
inc
aam
inc
jecxz
inc
jmp
and
add
mov
cli
ljmp
xor
and
sbb
push
mov
nop
xor
out
jno
jmp
inc
jno
sbb
cwtl
jbe
adc
jnp
pop
lret
or
xor
mov
dec
jb
xchg
cs
nop
jnp
pushf
adc
cmp
mov
outsl
lret
dec
aaa
cwtl
sub
xchg
push
and
imul
lahf
inc
xor
jmp
push
outsl
inc
or
inc
cmp
arpl
dec
mov
fbld
xchg
adc
lock
mov
cmp
stos
pusha
adc
lea
push
dec
ret
inc
ds
es
xor
adc
inc
jecxz
mov
fs
dec
fsubrl
mov
adc
push
shrb
lock
add
ficompl
pop
loop
jmp
jp
lock
ja
adc
ljmp
xchg
inc
or
inc
loope
mov
mov
push
xchg
pop
and
dec
pop
mov
xchg
cmpsb
test
arpl
aaa
gs
scas
push
lahf
mov
push
ficoms
xor
je
sub
pop
repz
pop
push
cmp
jmp
test
inc
inc
popa
pop
push
popa
in
pusha
push
dec
rclb
inc
mov
jg
jp
iret
jo
sbb
cmpl
insl
addr16
imul
dec
pop
icebp
xor
jo
jecxz
jb
sub
mov
xorl
mov
pop
je
loop
enter
xor
lret
fadds
aaa
sub
mov
sbb
pusha
push
xor
sub
andb
xchg
mov
xchg
sbb
jge
out
pop
bound
or
mov
mov
dec
mov
push
jno
pop
jne
shl
pushf
jle
mov
insl
enter
ss
cmpsb
ss
inc
xchg
ret
int3
inc
sub
sub
sbb
jle
out
data16
xor
daa
adc
or
hlt
dec
dec
jbe
push
push
jg
mov
xchg
cmpsl
and
sub
pop
xor
xor
loop
enter
pop
faddl
xchg
cmpsl
dec
pop
aad
mov
es
and
fldenv
jecxz
mov
lcall
push
pop
xchg
and
popf
inc
or
xor
out
mov
and
in
add
call
mov
movsb
sarb
call
mov
or
lds
sbb
rolb
adcb
test
in
pushf
stc
and
in
jne
push
cmp
add
loopne
pop
push
sbb
inc
outsb
loop
xchg
xchg
fmull
movsl
sahf
je
inc
scas
or
cltd
test
scas
push
subb
mulb
shr
imul
lea
jb
sbb
inc
test
push
ss
sub
imulb
sub
mov
cmp
sub
jl
cs
popf
mov
dec
pop
iret
xchg
jb
sahf
push
repz
xor
andb
xorb
sub
xor
stos
call
push
mov
movsl
mov
daa
push
sub
or
mov
sbb
mov
lods
or
sbb
mov
mov
sub
xor
sbb
fnstenv
xchg
add
pushf
mov
mov
shr
out
cld
push
lahf
or
pop
inc
scas
xor
in
and
push
mov
push
mov
jno
test
test
push
enter
pop
or
es
ficompl
fildll
mov
push
mov
scas
inc
es
cmp
adc
cli
add
or
cs
and
loop
push
or
rcll
ds
ret
adc
sub
cmp
dec
xor
jmp
and
jle
mov
lods
mov
pop
mov
arpl
sub
cs
loop
jb
or
aas
mov
enter
fidivrl
xor
xchg
or
dec
cmc
jecxz
sub
mov
inc
jp
push
jmp
cmp
das
jp
dec
add
rcrb
mov
mov
stos
xchg
addb
add
movhlps
aaa
sub
faddl
jne
dec
inc
xor
sub
xchg
ds
xchg
shll
das
xchg
xor
lcall
dec
inc
repz
sbb
or
jg
ds
or
mov
push
inc
jno
dec
adc
sub
hlt
and
xchg
adc
dec
jge
pushf
jno
jns
insb
push
mov
mov
lock
pusha
lahf
add
jl
aad
lret
mov
mov
push
lock
sub
dec
mov
push
pop
roll
in
cmp
xor
es
dec
mov
add
data16
jo
adc
adc
std
mov
or
in
fcoms
rcrl
jnp
cltd
aad
aas
inc
sbb
mov
push
aam
cmp
movsb
jno
and
inc
bound
mov
xor
orb
or
sbb
mov
fdivrs
insl
pop
rolb
nop
jns
and
fnsave
dec
jmp
popl
ljmp
fisttpl
and
jb
lods
jg
adc
cs
mov
stos
data16
ds
movsl
inc
es
pop
inc
push
sbb
jmp
cs
dec
mov
call
sbb
and
jp
or
in
sbb
mov
lcall
inc
jl
movsl
testl
mov
sub
pop
pop
xchg
mov
xchg
adc
mov
push
push
fcoml
stos
inc
cmpb
cld
jg
jbe
roll
aad
daa
sbb
std
sti
inc
mov
lret
test
fsubs
mov
sbb
push
lock
add
pushf
ret
or
xor
loopne
xchg
aam
sub
int
sub
inc
les
add
in
add
cmp
lahf
push
add
push
sbb
lea
movsb
mov
jg
imul
adc
mov
cmp
fdivrp
xchg
jne
xor
dec
push
pop
testl
mov
call
push
fisubl
add
adc
dec
jle
fcom
mov
push
imul
aad
sub
xor
loope
ljmp
xchg
fisttpl
lret
mov
fsubl
imul
out
js
rcrb
xchg
int3
inc
push
cli
mov
cmp
ljmp
sarl
lret
ljmp
dec
xor
call
mov
pop
or
subb
outsl
imul
fcmovne
sbb
fsubrs
mov
inc
inc
dec
and
mov
arpl
cmp
ljmp
jne
pop
outsb
sub
outsl
add
faddp
inc
rorl
call
lret
jg
mov
loopne
jle
xor
jnp
adc
in
hlt
call
cmpsl
test
pop
push
push
movsb
pop
xchg
sbb
mov
xor
push
jbe
mov
mov
clc
mov
jle
push
adc
sbb
jp
int3
insb
push
xor
sarb
xchg
imulb
mul
movsb
sub
sub
mov
outsb
sbb
imulb
pop
gs
xchg
std
cwtl
mov
addr16
xor
testb
movsl
aam
bound
loop
aaa
fisubrs
int3
lret
aas
loope
mov
out
inc
icebp
shrl
repnz
cmp
inc
movsl
insb
mov
cmp
cli
xchg
mov
cmp
jne
and
in
jne
jo
cmp
push
add
mov
xor
int
popf
imul
pusha
mov
mov
mov
jge
dec
push
rorl
pop
leave
push
dec
in
push
insl
bound
dec
and
outsb
jne
jb
in
jo
pop
lret
fldt
jns
xor
pop
imul
mov
cld
pop
jle
jg
pusha
sub
push
in
inc
mov
mov
xlat
cmc
int3
adc
pop
das
pop
loopne
mov
mov
daa
xor
enter
icebp
push
mov
push
popl
sub
sub
mov
pop
jmp
dec
repnz
dec
dec
in
jmp
dec
in
and
cmp
out
or
popa
sbb
xchg
dec
daa
js
mov
popf
lods
dec
in
dec
cwtl
jo
and
pop
scas
sbb
insb
jp
aad
fwait
nopl
push
lods
adc
jg
aaa
jbe
dec
arpl
in
xor
and
push
lods
jge
fsubrl
das
outsb
xchg
jo
sub
pusha
or
or
push
pop
ljmp
inc
adc
test
clc
pop
int3
iret
or
jnp
xchg
push
sub
aad
out
cltd
test
fiadds
mov
fisubrl
adc
ljmp
in
loope
or
mov
mov
add
js
fnstcw
aam
fldl
icebp
jns
ljmp
push
mov
mov
jns
inc
pop
fnstenv
cmc
je
cltd
fildll
repz
mov
pop
data16
jle
pop
cmc
arpl
or
dec
loope
push
add
test
aam
xor
inc
cmp
dec
mov
xor
outsb
cmp
es
testl
scas
mov
sub
repz
dec
mov
or
jo
addb
hlt
mov
js
jl
pop
mov
dec
dec
dec
icebp
mov
xor
mov
daa
adc
add
push
popf
xor
add
outsl
pop
lcall
pop
cli
int
addb
arpl
jbe
and
or
jbe
inc
sub
sub
int3
mov
xor
dec
jbe
mov
out
adcl
daa
push
stos
add
sbb
stos
sub
and
and
and
jmp
mov
or
sbb
jmp
das
in
pop
sahf
push
lock
push
in
outsl
sub
jae
and
push
in
cmp
mov
int
adc
daa
popw
out
imul
ljmp
sbb
sub
inc
js
mov
push
xor
call
imul
lods
and
lods
push
cmp
jmp
adc
shlb
jle
scas
pop
fwait
or
pop
jp
or
insl
inc
sbb
jbe
loop
mov
daa
js
sahf
jo,pn
xchg
jne
aad
dec
or
shr
push
ljmp
mov
ret
or
lods
push
dec
inc
add
insl
xchg
push
xchg
fistps
aad
sub
mov
sbb
sbb
data16
mov
sub
dec
push
cwtl
pop
push
inc
test
jecxz
push
fnstenv
popf
sub
test
jo
lret
cmp
pop
sbbl
pop
sub
mov
or
adc
or
loope
mov
xchg
push
sub
dec
inc
into
bound
adc
lret
aad
pop
pop
jne
jle
sbb
rorl
xor
lods
sub
pop
test
xor
dec
xor
cmp
icebp
lret
test
gs
sti
xor
stc
js
sahf
sti
pop
je
cmp
aad
pop
loopne
push
mov
adc
fldt
popa
dec
mov
arpl
pop
imul
pushf
push
adc
js
dec
outsl
mov
loopne
dec
das
sub
pop
mov
mov
mov
in
pop
sub
arpl
lock
mov
fbld
push
mov
fcompl
inc
gs
lret
mov
xchg
sub
out
push
ja
or
adc
dec
ss
mov
mov
or
stc
mov
lods
push
adc
pop
dec
xor
jno
je
mov
popf
xchg
sub
and
sub
je
push
in
mov
fwait
mov
dec
aad
arpl
xor
or
mov
arpl
mov
add
insb
and
lea
lds
pop
inc
or
push
sbb
les
or
test
iret
int3
xchg
call
sbb
and
outsb
dec
xchg
dec
loop
call
mov
mov
data16
pop
cmp
jle
xor
push
insl
push
popa
stc
pshufd
fldenv
adc
pop
sub
js
push
test
das
pop
mov
jge
or
mov
mov
mov
dec
das
push
jg
call
cmp
cmp
out
ja
aas
cmp
pop
pop
add
xlat
lret
push
negl
popf
outsl
jns
iret
addr16
mov
mov
lret
jge
pushf
test
fisubl
add
dec
lret
sub
lods
data16
push
fildll
xor
jle
cmp
cmpsb
add
sub
movsl
lods
mov
jns
mov
ds
filds
imulb
xchg
fisubl
push
push
dec
pop
bound
sub
rorl
adc
xchg
xchg
add
cmpsb
hlt
add
in
jp
xor
mov
fdivr
push
xor
xor
sub
or
dec
xchg
mov
iret
jl
insl
adc
cmp
xor
jle
inc
bound
and
es
aas
xchg
jmp
jmp
gs
lret
mov
dec
jbe
cwtl
dec
xor
and
repz
nop
mov
jne
cmp
addr16
mov
mov
jne
and
gs
add
ss
add
stos
mov
sbb
and
dec
push
imull
jns
or
adc
je
fadds
cmp
xchg
adc
push
pop
sarl
daa
mov
lret
xor
xor
mov
sarb
pop
or
mov
das
sub
sbb
push
jo
xorl
lock
xor
repnz
ds
dec
xor
add
mov
test
xor
pop
xchg
cmp
push
and
add
and
pop
pop
fdivrs
lods
dec
fsubrs
mov
mov
mulb
cmovbe
test
lcall
and
scas
rorb
jo
nop
sub
pop
inc
and
xchg
xor
inc
xor
mov
es
push
sub
lea
push
push
add
fwait
and
xor
pop
in
test
jp
mov
pop
pushf
stc
mov
jne
xor
xchg
movsb
ljmp
xchg
lret
and
xchg
adc
notb
cmp
js
in
and
dec
jecxz
scas
movsl
cmp
and
pop
fwait
xchg
fists
jmp
pop
inc
or
add
push
mov
test
push
or
stos
mov
movl
shrl
orl
jnp
lods
mov
inc
lods
or
push
jbe
xchg
sbb
sub
stos
mov
xchg
jle
mov
rcrl
mov
jp
mov
out
outsb
scas
xor
sbb
dec
push
dec
aaa
jle
outsl
dec
dec
imul
mov
dec
jecxz
mov
fdivl
aaa
add
daa
and
repz
fwait
mov
orb
fptan
lods
lods
mov
pop
lea
dec
push
sub
or
xchg
mov
or
push
or
test
pop
sub
mov
pop
jo
stos
outsb
fists
mov
rclb
out
scas
arpl
dec
repnz
xor
push
push
loop
popa
dec
hlt
push
jmp
test
outsl
dec
int
jne
and
jae
dec
jmp
inc
sub
cltd
cmp
pusha
inc
cmc
inc
bound
sbb
sbb
push
test
jno
shll
sbb
cs
sbb
xor
pop
lods
sub
ja
fwait
push
das
mov
mov
ss
test
inc
daa
test
outsb
inc
orl
int
add
sub
xor
adc
inc
sub
add
imul
les
and
or
imul
mov
and
or
dec
cmpsb
cmpsl
mov
popf
fcoms
popa
pop
arpl
pop
sbb
mov
push
aas
lods
fcomps
mov
mov
jo
cwtl
lret
scas
pop
jecxz
add
outsb
adc
dec
ds
popa
or
movsl
cmpsl
push
stos
add
jl
add
sub
sahf
mov
shrb
push
ret
dec
pop
dec
test
sub
xlat
jl
or
add
mov
mov
cmpsb
std
sarb
or
int3
cmp
sbb
stos
clc
daa
ss
dec
or
movsl
add
in
and
adc
mov
fstpt
fstps
jp
xchg
sbb
rcl
add
xchg
loop
sbb
stos
xchg
mov
int3
xchg
pusha
mov
test
mov
pop
aad
into
sahf
add
xor
into
faddl
jne
pop
jmp
cmp
dec
divb
dec
xchg
and
lea
mov
mov
or
push
leave
in
dec
lds
xchg
ret
movsl
je
mov
or
les
pop
rorb
add
mov
into
mov
int
add
jo
push
lock
jmp
jno
jp
dec
cli
mov
enter
rcll
arpl
sarl
add
sbb
jp
inc
inc
xlat
add
les
push
mov
and
pop
outsl
addr16
sbb
mov
jmp
das
lods
pop
push
xor
jno
lds
jnp
movsb
cmp
dec
dec
sub
stos
or
in
outsl
ds
fldt
push
inc
jne
sbb
test
adc
dec
fdivs
icebp
inc
jns
mov
sti
mov
jns
sub
mov
mov
scas
inc
js
adc
inc
outsl
xchg
mov
sbb
stos
in
cmpsb
repz
rcr
shlb
push
shrb
push
push
push
jecxz
pop
add
pusha
pop
je
mov
jnp
arpl
mov
pop
mov
loopne
mov
cmp
std
push
nop
xor
jnp
xchg
lods
int3
add
clc
imul
mov
xchg
vmovntdq
jg
imul
ja
scas
enter
sbb
out
jns
mov
mov
sub
idivl
mov
std
out
and
jmp
std
leave
sub
les
inc
mov
fildl
iret
dec
mov
push
xchg
or
add
fstl
mov
adc
jns
push
pop
cld
adc
lret
out
cltd
cmc
ret
scas
js
cmp
movsb
lret
cmp
xchg
mov
popf
stos
xchg
aam
mov
sbb
sbb
jo
ret
jmp
pop
add
enter
inc
leave
loopne
mov
imul
or
pop
add
lods
js
xchg
cli
sub
xchg
pop
or
push
lret
sbb
jp
xchg
sub
inc
iret
dec
jge
ljmp
lcall
ljmp
test
or
movsb
cmp
stos
xchg
outsl
xchg
adc
sbbb
pop
sub
xor
mov
test
std
inc
aas
sub
pop
leave
and
xchg
mov
sbb
sbb
int
adc
push
pop
out
int3
fdivs
jae
push
pop
cld
cmp
std
leave
sub
pop
adc
fdivrl
mov
adc
pushf
mov
lcall
adc
test
imul
or
out
loopne
pop
outsl
test
jg
cmp
lea
dec
xor
fbstp
fldt
pop
lea
jl
push
fldpi
cmp
aaa
imulb
push
pop
mov
orb
cwtd
stc
dec
push
adc
aas
inc
push
fldcw
and
xor
rcrl
add
and
cltd
mov
adc
clc
dec
fsubrl
call
mov
dec
cmpsb
sub
fs
cltd
sub
xchg
mov
es
xchg
push
mov
movsb
cs
aas
push
push
mov
push
sub
adc
in
xchg
int3
mov
cs
xchg
xor
or
lods
cltd
pop
repnz
sbb
aas
out
xor
xor
jne
inc
and
popl
lods
mov
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
call
push
call
leave
push
popf
clc
in
push
jne
jge
dec
dec
adc
loopne
ss
mov
sub
gs
dec
outsb
jbe
push
arpl
roll
adc
mov
pop
pop
test
mov
sub
das
or
int3
inc
insb
xor
add
out
add
adc
fbld
mov
adc
mov
or
sub
xor
jle
loope
add
cmpsl
xchg
in
lahf
cmp
mov
es
je
dec
pop
sti
add
push
jbe
cmpsl
stos
sub
or
sub
mov
jle
mov
cmc
das
sbb
jns
pop
inc
dec
pop
jge
inc
push
sub
xchg
divb
pop
or
cmp
fists
adc
inc
push
push
xchg
das
repnz
jbe
sbbb
push
fisubs
or
sbb
incb
ja
les
div
rcll
daa
adc
or
mov
mov
mov
dec
jbe
pop
mov
sti
adc
insb
out
out
and
adc
adc
jns
mov
push
sarb
les
insl
sub
or
sbb
or
mov
cmp
fbstp
add
fwait
mov
lods
movsl
sub
stc
mov
mov
in
sbb
inc
dec
cmovge
push
and
shlb
xor
cmp
xchg
push
mov
rolb
cltd
mov
fildl
ss
das
lds
pop
lds
inc
or
lods
fisubrl
sub
xlat
aas
sub
iret
adc
jmp
mov
mov
jecxz
lds
imul
add
mov
pop
xor
inc
push
and
xlat
cmp
loop
lods
add
push
dec
idivl
bound
addr16
insb
aam
dec
push
pop
push
xchg
dec
test
mov
gs
out
push
mov
outsl
stc
sub
cmp
and
dec
jbe
popf
dec
dec
out
imul
dec
mov
jnp
aad
outsl
jne
xchg
aad
aam
and
xchg
adc
sti
mov
cmp
cmc
pop
sahf
jp
pop
xor
