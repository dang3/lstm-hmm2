push
or
add
add
add
orb
add
add
repz
or
add
add
pop
add
add
adc
add
add
add
add
pop
xchg
or
outsb
xchg
or
jg
or
nop
xchg
or
lahf
xchg
or
lods
xchg
or
add
add
mov
add
add
xchg
or
add
add
or
add
xor
or
pushf
nop
or
inc
xchg
or
mov
add
add
or
rclb
add
add
nop
or
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
dec
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
add
push
gs
outsl
arpl
add
add
inc
add
add
mov
add
rolb
je
dec
jle
dec
jne
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
xor
or
add
outsl
std
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
arpl
cld
stc
mov
mov
lcall
inc
mov
pop
cld
fidivs
mov
push
out
cwtl
movsbl
and
cld
test
rep
push
negl
mov
add
sub
jne
sbb
aas
fwait
int
mov
jle
data16
mov
mov
cmpsb
or
dec
out
mov
sub
mov
adc
xor
mov
cmpsl
lret
outsb
in
fistpl
daa
sub
sub
dec
pusha
mov
push
std
and
fst
rcrb
in
adc
fcmove
or
dec
fimull
inc
sbb
inc
dec
fmuls
test
push
insb
adc
aad
sub
mov
jle
cmc
xchg
ret
das
jmp
fdivs
std
fldenv
add
popf
mov
aam
mov
cmp
and
les
sbb
dec
stos
dec
jo
jle
cmp
mov
lahf
mov
dec
pop
xor
jo
stos
push
or
outsl
mov
sti
pop
xchg
adc
mov
inc
sbb
fs
cmpl
lea
ja
push
lods
push
dec
xchg
push
shll
adc
pusha
push
rcrb
pop
pusha
push
xor
scas
int
mov
push
andl
add
lcall
mov
fldenv
js
push
ljmp
or
movsl
mov
addr16
mov
pop
mov
int
jb
adc
stos
cmp
xor
inc
mov
aad
or
jno
xlat
and
cmp
add
sbbb
popf
add
neg
push
mov
daa
xchg
xchg
push
std
add
fimuls
mov
jecxz
mov
mov
pop
in
xor
cwtl
xchg
push
or
rcr
jecxz
sub
dec
jno
in
scas
cs
jecxz
jnp
pop
fidivrl
fsubrl
hlt
mov
mov
insb
sti
mov
add
iret
sahf
fmulp
jl
inc
cld
sbb
andl
jne
fucomip
or
int3
cld
sub
jmp
jbe
test
clc
lods
das
push
cwtl
bound
mov
jge
lock
push
pop
mov
xor
xchg
cmp
mov
dec
or
jne
cmpsl
int
push
jbe
sarb
cmpsb
jl
stos
sbb
imul
sbb
dec
xchg
push
xor
not
add
sub
scas
cwtl
or
paddusb
mov
lock
movsl
cs
fidivl
or
rdpmc
aas
mov
out
cwtl
pop
cmp
inc
push
cmp
dec
dec
cmp
sub
dec
push
sahf
and
adc
and
lods
outsl
mov
movhps
pop
push
int3
div
xchg
inc
or
int
cmp
insb
pushf
les
stos
sub
sbb
push
push
daa
jns
icebp
sub
les
std
stos
cmc
cli
lds
and
cmp
mov
test
into
mov
loope
aas
out
adc
push
push
and
add
add
pop
in
fs
jno
jnp
mov
scas
or
xchg
cwtl
movsb
mov
xchg
aad
call
or
jle
jnp
fisttps
aas
and
lcall
mov
adc
or
push
lahf
cli
inc
shlb
fwait
sti
cmp
push
test
cli
jnp
lcall
sti
fisttps
out
push
and
sub
call
and
push
in
fldcw
rcrb
rcrl
out
imul
sub
xor
aas
test
ss
je
inc
add
push
fdivp
xor
pop
push
sub
dec
mov
or
dec
in
dec
rorl
in
sub
orl
les
xchg
push
sarl
mov
sbb
insl
nop
sub
adc
or
repz
imul
push
pushf
fs
xor
aas
outsl
les
xorb
lahf
adc
scas
xlat
cmp
push
call
inc
and
add
mov
xor
xchg
cld
lock
ret
jle
add
lea
pop
jnp
cmp
inc
xchg
xor
dec
and
sti
sub
decb
add
mov
incb
ja
psubb
fneni(8087
ljmp
je
dec
jle
and
call
dec
arpl
test
stos
sahf
inc
adc
or
pop
js
sbb
jg
mov
in
jno
add
fisubl
add
push
movsb
cs
clc
or
xchg
insb
out
data16
xchg
imul
cli
scas
pop
inc
popf
sbb
push
sub
lods
sbb
jb
dec
and
stc
int
lret
xchg
xor
int
sub
pop
push
cmp
loopne
mov
bnd
lret
cmpsl
repnz
mov
add
sahf
pop
mov
pop
jnp
popf
dec
negb
test
pushf
sbb
or
mov
stc
mov
lea
insl
mov
out
jecxz
jl
divb
and
push
push
push
rcrb
movsb
test
mov
es
je
cld
pop
jb
aad
lea
push
mov
add
xlat
aaa
sbb
push
cmp
fnstenv
mov
xor
add
mov
or
xchg
jecxz
mov
aad
and
lahf
mov
aaa
mov
enter
jp
lock
push
xchg
cmp
cmpb
repz
cmpsl
xchg
out
xor
mov
out
cld
mov
out
and
lret
mov
pop
je
cmp
pushf
sbb
cmp
lods
push
xor
testl
push
lods
sub
cmp
inc
pop
fsubp
xorps
cmp
lods
int3
push
sbb
adcb
mov
inc
mov
pop
pop
xchg
and
pusha
cmpsb
sti
xor
ffreep
outsb
jle
sub
pusha
cmp
js
xchg
divl
adc
gs
ret
das
adc
xor
in
sub
ret
mov
cld
xchg
hlt
cmp
hlt
cmp
jbe
aaa
orl
jbe
mov
pop
push
loopne
frndint
lods
sub
dec
mov
xor
in
setp
adc
adc
sarb
out
cmp
mov
xor
jns
daa
and
xchg
add
and
or
js
cmc
iret
and
fisubrl
jmp
cmp
in
cmp
push
add
das
mov
in
mov
inc
pop
outsb
pop
mov
sahf
pop
pop
xor
cmp
popa
jmp
ret
add
mov
loopne
loopne
sub
sub
lds
xchg
movl
xchg
imul
adc
mov
aam
push
jo
cwtl
pop
push
sahf
cmp
in
test
or
and
sub
inc
shll
popf
mov
aaa
aaa
dec
or
ds
sbb
inc
ror
push
and
into
adc
dec
test
or
fnstcw
adcb
or
in
sub
mov
ror
orb
popf
dec
fdivs
sub
adc
xor
jne
shr
lahf
sub
pop
or
sbb
mov
lcall
jno
daa
leave
or
xchg
push
daa
nop
jp
mov
pop
mov
pusha
mov
jecxz
sbb
sub
cmp
ss
stos
cltd
cmp
dec
lods
jmp
adc
jns
mov
add
inc
xor
push
xchg
jo
ljmp
sub
out
xchg
addb
pop
pop
inc
bound
out
pop
cli
notl
daa
push
out
out
adc
push
test
mov
scas
xchg
jge
dec
dec
push
cmp
cli
or
cmpsb
mov
jno
pop
aaa
pop
jnp
and
lods
and
mov
dec
mov
lahf
adc
ret
mov
fdivr
add
cli
aam
mov
xor
and
add
movsb
xchg
add
sahf
shll
clc
lock
mov
jnp
cmp
in
mov
shr
or
out
ljmp
fmull
mov
jns
arpl
movsb
inc
push
shrb
lea
in
mov
sbb
push
lods
sarb
nop
rsm
fimull
pop
pop
setae
inc
cmp
xchg
iret
cmc
mov
mov
mov
std
sarl
repnz
mov
test
jecxz
cmp
lock
jns
jae
cmpsl
pushf
fdivs
pop
roll
and
ret
insl
mov
cmp
jge
flds
icebp
repnz
dec
out
jmp
jb
jae
outsb
inc
mov
xchg
stos
in
cmp
lret
cltd
les
add
mov
and
adc
xor
or
dec
loope
sbb
cltd
fdiv
pop
cmp
dec
repz
mov
sub
stos
jns
loope
pusha
mov
ljmp
cmc
and
jmp
sub
cmp
push
push
popa
dec
pusha
inc
cmp
push
cmp
xchg
ficomps
jmp
mov
cmp
insb
xchg
xor
aas
andb
insl
or
xchg
xor
cwtl
or
cltd
inc
cmp
pop
rorb
call
stos
push
pushf
fxch
lret
and
inc
out
sbb
mov
aas
jecxz
movsl
push
stos
inc
xor
mov
nop
push
fs
jb
push
leave
inc
lock
lods
sbb
cs
cmp
and
xchg
mov
xchg
movsb
sub
push
mov
dec
ja
cmpsb
ds
dec
lds
push
push
outsb
dec
mov
ss
mov
push
test
adc
iret
sub
hlt
pop
je
ljmp
addb
mov
cmpb
or
add
packssdw
notl
fstpl
push
mov
jg
cmp
loope
xor
aad
popa
dec
mov
addr16
sub
cmp
xor
or
lock
mov
ja
leave
mov
mov
movsl
adc
sti
adc
fs
idivb
insl
scas
sbb
roll
loopne
mov
mov
jo
mov
jmp
pop
xor
scas
xchg
into
outsb
sahf
sti
test
cmp
cmp
jno
mov
adc
repz
jl
sub
and
push
loopne
xor
xchg
jge
mov
scas
cmp
xor
sar
lock
lods
cmpb
xor
out
imull
dec
and
or
dec
add
rorb
rorl
arpl
xlat
lret
or
repz
daa
mov
test
mov
inc
mov
xor
inc
aaa
dec
jle
mov
or
into
insl
aaa
add
sbb
movsb
jae
mov
shlb
push
cmpsl
xor
pop
addr16
es
inc
jl
add
leave
mov
adc
push
push
xchg
outsl
dec
inc
pusha
mov
imul
inc
dec
lret
adc
flds
loope
addr16
mov
adc
mov
push
jne
ja
pop
scas
push
inc
aaa
lock
jbe
mov
add
enter
cmpsl
xchg
sbb
loope
jbe
xchg
dec
pop
push
mov
add
mov
dec
and
inc
ret
daa
cmp
addr16
into
fmul
shlb
fbld
mov
mov
or
jg
pop
ss
mov
and
loopne
repz
and
stos
xor
or
nop
div
fnstcw
addr16
xlat
fimull
inc
js
incl
mov
add
es
addr16
loop
push
cmp
dec
adc
mov
adc
gs
jno
sar
mov
sub
test
add
inc
cmp
or
rcr
adc
cmp
jle
loopne
insb
divl
rcrb
inc
inc
daa
adc
outsb
je
sbb
add
daa
faddl
ficompl
fnsave
std
or
mov
inc
push
scas
ret
sahf
push
out
into
fsts
icebp
call
dec
jns
pop
roll
cmp
lods
cmpsl
xor
mov
pop
push
sub
or
movsb
fistps
fs
jl
sbb
insl
fisubl
out
out
int
xchg
dec
sbb
in
fbstp
fidivs
adc
add
sbb
mov
ret
or
shll
pop
mov
lret
stos
mov
loope
rcrl
xor
add
add
inc
or
les
stos
adc
sub
arpl
pop
lcall
aad
imul
rolb
sahf
cmpsl
rorb
xchg
adc
repnz
aad
rcll
fwait
pop
adc
scas
lret
push
dec
jp
aam
aas
mov
arpl
xor
scas
cmp
mov
roll
test
xor
mov
mov
pop
sbb
dec
mov
aas
fidivrs
popf
xchg
and
mov
cmc
pop
mov
cld
pop
sbb
sbb
dec
mov
js
sbb
jo
mov
dec
jmp
mov
xchg
je
xchg
sahf
adc
inc
ds
pop
push
into
mov
add
sub
inc
orb
xorb
xchg
rcll
inc
ret
rcr
dec
loope
out
lcall
lret
push
inc
daa
mov
jb,pt
cmpsb
lahf
pusha
cwtl
movsb
icebp
xlat
adc
cli
pminub
imul
ja
xor
je
call
add
aaa
jp
pop
lods
push
or
cmc
out
mov
sahf
inc
lret
pop
mov
sbb
movsb
lea
push
sbb
jns
lock
out
or
adc
test
mov
fistpll
lret
xchg
add
movsb
ljmp
shll
test
and
enter
ss
lahf
lcall
subl
pushf
pop
push
jl
jl
push
nop
sar
lods
or
cltd
jns
inc
sbbl
jge
repnz
and
sub
cmp
ds
mov
adc
push
jp
xor
adc
int3
add
mov
mov
pop
imul
mov
jo
dec
mov
dec
repz
cwtl
xchg
mov
fildl
jg
lea
call
jae
shrl
ljmp
and
scas
shrl
sti
sti
fsubl
inc
aaa
pop
push
and
pusha
push
xchg
adc
fnstsw
sub
fdivs
mov
pushf
fldl
or
es
pushf
pop
sbb
pop
mov
fcoml
sti
mov
push
insl
inc
xchg
add
or
jl
shrb
ss
cs
shll
movsl
leave
mov
mov
and
jg
sbb
mov
sbb
sub
rcrb
adcb
icebp
or
sub
add
cmp
pop
lret
lods
cltd
gs
jl
sahf
and
inc
mov
lock
sbb
sar
inc
loop
jne
dec
and
sub
rolb
sbb
arpl
dec
fwait
enter
enter
cwtl
aam
pushf
adc
lock
lret
sarb
xchg
js
add
test
repz
int3
mov
xchg
mov
mov
fimull
repz
push
faddl
mov
imul
jno
push
mov
dec
dec
dec
neg
ljmp
mov
dec
pop
cmc
dec
cmp
sub
jae
push
xor
fisubs
mov
enter
jb
pop
inc
pop
mov
dec
pxor
test
jle
stos
cmp
push
dec
dec
sub
xor
xor
xor
cmpsl
test
dec
testb
cmp
movsb
cmp
cmp
fs
dec
lds
mov
and
add
or
cmc
loopne
out
aas
and
rorb
movsb
movsb
xor
addr16
sub
add
xor
pop
gs
inc
xchg
das
cmp
mov
cmp
mov
xchg
icebp
jmp
sbb
scas
fnstenv
add
jne
mov
lds
sbb
pop
jo
jae
xor
arpl
xor
cwtl
orl
sub
jne
mov
sbb
pushf
and
movsb
test
cmp
imul
gs
xor
inc
dec
and
sbb
jg
gs
push
mull
adcb
xchg
sbb
mov
adc
cmp
xchg
and
std
cmp
xchg
mov
jb
and
loopne
push
mov
loop
fwait
mov
dec
mov
sahf
gs
cmp
inc
xor
sub
mov
jl
xchg
leave
cld
aam
add
push
inc
data16
notb
pop
sarl
mov
sbb
mov
and
pop
movsl
stos
mov
stos
sti
scas
jbe
sti
int
das
mov
dec
sbb
pusha
inc
fldcw
jnp
clc
int
mov
movsb
sbb
push
shlb
std
fnstenv
mov
jmp
dec
hlt
adc
xor
and
adc
jecxz
jno
dec
mov
push
or
sbb
push
mov
add
insl
out
ret
adc
xchg
cmp
sahf
adc
inc
cmp
out
loope
movsb
cmpsb
push
sbb
leave
pop
pusha
jno
xchg
xchg
in
xor
rorb
rcr
or
fisttpll
mov
mov
fcmovnbe
inc
inc
jecxz
or
in
fistpll
mov
adc
sub
cmp
loop
push
sbbb
insl
or
cmp
mov
jmp
mov
call
pop
test
jg
dec
test
mov
push
xor
data16
rorl
shlb
das
mov
add
cmp
cmpsb
xchg
lods
push
jl
push
cmpsl
mov
sub
es
sbb
loope
repz
fcoms
add
nop
stos
int
xchg
or
push
sub
pop
and
es
sub
fcoms
ficoml
mov
hlt
movsl
stc
xchg
push
pop
lcall
pop
or
push
pop
int3
or
std
add
lods
das
fmulp
lds
xor
jge
dec
push
fistpl
inc
sub
repnz
mov
dec
cmp
pop
mov
in
push
scas
add
mov
cs
adc
mov
lods
jle
pop
or
arpl
mov
lock
push
lcall
pop
and
rorb
and
call
scas
repz
inc
test
lea
pushf
aam
push
adc
fsubl
pop
jne
dec
arpl
inc
sub
mov
repz
lret
sbb
xchg
adc
loope
dec
mov
mov
pop
out
cltd
scas
sbb
mov
push
mov
jmp
or
adc
mov
jmp
jnp
xchg
imul
bound
cmp
fdivl
aad
adc
sub
es
ds
xchg
or
sub
in
and
fs
rclb
mov
imul
jecxz
push
insl
stos
mov
fs
xor
push
in
cmpsl
popa
mov
cmpsb
fdivrs
fcompl
xor
add
out
nop
mov
pushf
shll
lock
dec
nop
sbb
pop
iret
fistps
testb
mov
adc
lahf
xchg
sbb
sub
inc
inc
add
cwtl
and
in
or
in
cmp
mov
xor
xor
push
mov
popa
ljmp
pop
fldt
clc
cli
addr16
sub
mov
xor
mov
shrl
mov
jo
jns
pushw
repz
cmpsl
pop
imul
test
fs
mov
in
pop
lahf
ret
dec
adc
xchg
sti
xchg
inc
inc
push
mov
imul
bound
addl
lcall
mov
jno
push
int
cwtl
fstps
cwtl
outsl
fucomp
add
pop
daa
pop
mov
dec
scas
ret
adc
cmp
or
cs
arpl
adc
pop
fucomip
add
jg
xor
pop
cmc
push
pushf
in
daa
scas
fcomps
xchg
int
ds
mov
es
out
sub
cltd
loopne
mov
cmp
mov
jle
out
fcoml
xchg
push
mov
push
in
das
xor
ds
mov
dec
mov
mov
mov
mov
jne
mov
scas
out
cmp
mov
sub
loop
in
inc
add
mov
jecxz
das
xchg
jnp
jecxz
cmpsl
cmp
push
gs
scas
push
sbb
stos
pop
xchg
in
call
and
mov
pop
xlat
inc
inc
mov
scas
mov
arpl
movsb
sub
and
adc
call
inc
lods
imul
and
lar
sti
sub
dec
dec
lcall
and
sbb
xchg
sub
fimuls
cmp
jge
adc
lea
loop
leave
mov
inc
push
pop
mov
pusha
sub
inc
inc
or
iret
xchg
int3
pop
sbb
push
aaa
mov
imul
iret
mov
insb
aad
jmp
pop
mov
xchg
addl
sahf
testl
dec
cmp
fsts
and
cmp
mulb
fidivs
mov
or
mov
lret
or
js
pushf
in
or
adc
data16
aaa
and
js
das
das
gs
pop
mov
bound
adc
lcall
addr16
sub
or
sbbb
add
and
outsb
repz
sahf
and
xchg
pop
push
mov
push
dec
mov
push
xchg
inc
mov
pop
sbb
aaa
jg
push
rorl
jae
cmp
rolb
jg
xor
cmp
mov
jle
pop
bound
jns
mov
bound
or
xchg
xchg
aad
jne
xchg
xchg
xor
sub
imul
dec
mov
add
fwait
push
repz
addr16
xchg
mov
dec
out
iret
ret
das
aas
mov
mov
mov
cmpsl
mov
and
cmp
mov
mov
xor
ss
daa
inc
or
enter
ret
shrb
push
fcomps
bound
mov
std
lcall
pop
in
sbb
iret
dec
jne
mov
fs
js,pt
les
pusha
inc
mov
int
aam
nop
notl
scas
sub
sbb
repz
pop
jno
push
loop
idivl
nop
xor
insl
test
push
or
mov
mov
pop
daa
repz
pop
mov
imul
jl,pn
sub
lods
push
outsb
incl
loop
fisubrs
ficompl
mov
push
js
mov
movsl
pop
popa
jb
jmp
jnp
sbb
inc
xchg
les
xor
sub
pop
pop
dec
mov
lahf
das
imull
dec
sbb
xor
movsb
popa
in
mov
xor
std
in
mov
xchg
sub
sbb
xchg
gs
lcall
pop
movsb
cmp
stos
fcomi
hlt
add
call
mov
dec
sbb
lret
fstps
jae
es
insl
jg
mov
xchg
dec
out
ja
mov
nopl
fisubl
sti
das
ljmp
sbb
mov
add
jne
mov
inc
adc
stc
fidivl
mov
dec
data16
outsb
movb
iret
cmp
mov
addb
cltd
pop
loop
sbb
mov
inc
movsb
pop
mov
insl
pop
push
ret
es
test
clc
lea
inc
push
sbb
or
mov
shll
mov
clc
popf
pushf
cli
jl
inc
jmp
sub
adc
jle
jge
lds
mov
dec
loopne
add
es
test
out
pop
dec
cmp
mov
cmp
mov
fisttps
mov
clc
shll
hlt
in
adc
insb
inc
mov
ficompl
pop
push
out
pop
dec
cld
lahf
insb
arpl
cmp
loop
pop
mov
stos
ljmp
mov
push
iret
mov
xor
dec
cmp
inc
mov
inc
xor
add
mov
sbb
pop
testl
loop
mov
pop
pop
xchg
decb
leave
pop
outsl
out
sbbb
push
mov
sbb
xlat
fidivl
pop
pop
push
enter
aaa
sbb
arpl
mov
loopne
sbb
push
fcmove
dec
or
mov
adc
sub
push
adc
mov
or
mov
mov
push
adc
je
xchg
xchg
clc
fucomp
sub
pop
lock
or
pop
lods
pop
inc
mov
push
add
sbb
mov
push
push
pop
mov
push
lods
into
sbb
pop
add
das
mov
adc
add
jns
push
test
adc
int
movsb
sub
mov
lret
mov
adc
pop
dec
les
jg
xchg
add
call
imul
mov
js
jge
jb
xchg
and
cmp
pop
test
sarb
fcoml
incl
push
xchg
lock
mov
outsb
add
sarb
xrelease
notb
or
ss
dec
and
outsl
jns
aam
jo
jl
pop
div
addb
movsl
fldl
sub
cmp
mov
xchg
xchg
jecxz
gs
in
cmpsb
push
shll
add
mov
cmp
sub
xchg
stc
jmp
mov
cltd
cld
rcrb
add
sub
add
adc
aas
and
mov
dec
inc
mov
pop
ret
jbe
shl
add
jb
ljmp
int3
push
sub
addb
sub
xchg
addr16
addr16
dec
sub
and
cmp
dec
ljmp
shll
hlt
rolb
test
sti
test
movsl
pop
adc
movsb
cmp
adc
shl
and
fnstsw
iret
push
dec
xchg
es
inc
xchg
jno
leave
nop
rcll
push
jnp
mov
dec
out
mov
addl
stos
sahf
ret
and
mov
xchg
out
jl
jb
fsubs
fwait
icebp
mov
or
push
stos
push
xor
xchg
jns
push
fxch
test
inc
cmpsb
cmp
lea
pop
ss
cmc
sbb
dec
cmpsl
loopne
jmp
pop
int3
out
adc
jnp
push
movsl
sahf
stc
ja
xor
push
jbe
sbb
add
cltd
cli
dec
cmp
pop
sbb
test
test
push
mov
pop
xchg
insl
popa
lcallw
or
push
pop
xorl
cmp
cmp
fs
lret
aad
push
jb
mov
orl
lods
lods
xchg
sbb
dec
mov
add
loop
dec
fidivrs
ss
loop
jno
insb
stos
add
insl
pop
popa
cmp
cmp
aaa
mov
xor
pop
or
jle
int
xor
push
push
nop
xor
xor
sub
lcall
dec
sbb
sti
jb
cmp
aad
add
sbb
sub
jb
flds
outsb
out
push
sbb
sub
imul
push
adc
dec
xchg
int
add
push
sbbb
movsb
pop
dec
mov
push
or
inc
sbb
fwait
xchg
mov
cltd
mov
lods
inc
inc
sbb
into
fs
jl
sbb
push
push
scas
push
cmp
mov
imul
adc
hlt
and
cld
sbb
stc
sub
jg
push
fbstp
lock
popa
sbb
ja
or
mov
fwait
out
decl
lcall
jae
jmp
data16
cmp
xlat
inc
inc
lcall
xchg
push
call
adc
lds
mul
fsub
repz
jne
ss
xchg
pop
movsb
out
sbb
clc
out
scas
mov
pop
pop
bound
and
push
push
jno
or
orl
sbb
fistpll
sub
add
xorb
adc
cmp
pop
imul
or
push
sub
aaa
or
subb
outsb
xor
pusha
sub
sti
dec
fistpl
cmp
and
ljmp
pop
push
loopne
xchg
fdivrl
repz
jno
mov
icebp
das
loop
adc
push
jmp
into
mov
pop
dec
xor
xor
lcall
sub
xchg
mov
xor
push
pop
push
sub
imul
jbe
adc
scas
xor
inc
push
in
cld
sahf
stc
imul
sub
and
pop
cmp
std
jg
mov
xchg
xor
stc
xor
xchg
loopne
mov
daa
pop
cmp
ss
jmp
outsb
dec
jno
fwait
stos
shlb
aaa
lret
inc
mov
sbb
iret
lea
es
dec
int3
dec
dec
and
fwait
shl
xchg
mov
xchg
mov
lods
popf
and
call
rcl
push
xorl
icebp
dec
mov
dec
icebp
adc
loop
loop
hlt
mov
sub
jp
xchg
mov
lret
lea
inc
out
cwtl
fcoml
inc
adc
xchg
sbb
js
sub
mov
jmp
movsb
lods
test
repz
and
loop
cltd
arpl
pop
push
in
test
jbe
test
data16
test
out
ja
push
inc
sahf
lods
jge
dec
ds
pushf
cltd
pop
adc
adc
leave
xor
repnz
pop
mov
jne
fimuls
std
push
cmp
insl
push
jmp
lock
leave
fwait
jo
add
and
mov
rcr
insb
jbe
add
ljmp
mov
fnstenv
movsl
cltd
mov
call
mov
fcoml
nop
ret
mov
push
cmovb
and
les
in
add
loop
mov
fwait
sarl
xlat
inc
sbb
sub
mov
pop
nop
xchg
out
repnz
pop
iret
or
push
insb
push
mov
xchg
jmp
or
js
jnp
aad
fstpl
imul
lods
adc
add
hlt
mov
movsb
fcmovnb
cltd
es
ficomps
jge
sub
adcb
and
push
adc
dec
scas
adc
jbe
jb
call
lret
aas
sub
xchg
aas
cmc
dec
mov
cmc
rorb
out
std
popa
pop
stos
jne
xor
lahf
pushl
xor
adc
mov
sahf
es
mov
cwtl
imul
lahf
int3
popf
sub
mov
je
sub
shrd
fcompl
andl
icebp
fisubrs
push
xchg
fwait
mov
push
movsb
mov
xchg
xor
and
xor
pop
lds
sahf
mov
outsl
mov
fwait
jo
mov
test
inc
and
add
dec
dec
pop
mov
call
push
pop
push
pop
or
lds
push
aas
xchg
dec
xor
cmp
repnz
dec
push
nop
mov
into
add
scas
mov
int
mov
mov
sbb
int
mov
jne
lods
push
leave
sbb
mov
insb
jle
frstor
into
fcomps
fnstsw
das
lahf
push
lahf
loope
les
out
addr16
mov
push
push
sbb
dec
into
sti
test
sti
ljmp
dec
sub
cmp
test
hlt
cmp
sahf
popf
inc
cmc
cmp
stos
les
sub
sbb
mov
push
sbbb
int3
inc
icebp
xor
sarb
mov
xchg
jb
xor
xchg
loop
fsubs
punpcklwd
push
mov
std
xor
cmpsb
loopne
mov
xchg
lahf
ret
push
mov
push
shrl
shll
sbb
push
mov
xchg
and
mov
fs
cli
mov
or
in
push
fcmovu
bound
xchg
inc
pop
sbb
jo
enter
jmp
arpl
mov
inc
shl
ds
and
rcl
insb
lock
test
out
lret
jno
jne
out
jecxz
pushf
loopne
cmp
int3
xchg
xor
pop
sub
xor
push
in
sub
movsl
sub
add
xchg
add
pop
jle
aam
inc
int3
mov
mov
sub
enter
sbb
dec
out
cmp
lcall
push
xor
pop
inc
add
or
cmp
and
cwtl
push
sub
movlhps
hlt
outsb
add
push
push
mov
ds
jg
lods
lods
testl
subl
jp
cs
xor
negl
push
pop
sbb
stos
cli
out
sarl
cli
pop
repz
push
mov
popf
or
cmp
testb
sub
mov
sub
and
jnp
jno
adc
jecxz
push
in
inc
rclb
jns
mov
lret
in
and
das
leave
xor
les
cmp
loopne
add
jge
ljmp
hlt
xor
push
fbstp
roll
jp
cld
jnp
sub
sub
jecxz
repz
push
cltd
pop
and
js
test
xlat
mov
push
sbb
jp
lret
jg
or
mov
and
cld
mov
incb
or
shr
push
sub
in
adc
xchg
inc
rorl
mulb
pop
mov
add
cmp
sbb
in
aad
leave
mov
scas
xchg
xchg
sbb
sbb
push
xor
mov
lock
mov
mov
out
clc
cmp
insb
sub
in
inc
fisttpll
daa
push
inc
and
daa
out
fistps
movl
leave
cmp
pop
and
inc
mov
arpl
jp
inc
mov
adc
and
or
arpl
cld
aad
mov
in
nop
push
sbb
aad
stc
movsb
mov
in
int
ljmp
push
cmp
mov
pop
push
mov
arpl
or
jge
mov
mov
lods
lods
sub
lcall
mov
cmpl
mov
cmp
push
or
stos
push
in
ljmp
sbb
fiaddl
scas
ja
sbb
push
ljmp
xchg
faddp
ljmp
and
fistps
dec
inc
push
cmc
mov
das
mov
neg
lea
xor
pusha
roll
adc
int3
call
sub
sub
mov
sbb
push
shll
clc
std
cmp
add
out
adc
jp
push
pop
mov
iret
adc
test
inc
xor
lods
xchg
push
xchg
js
inc
enter
lea
pop
sub
push
movsb
imul
addl
fisttpll
mov
lahf
xchg
in
mov
mov
inc
sahf
or
fwait
xchg
vmovlps
push
jne
int
repnz
cmc
jb
xor
fwait
cmp
xchg
mov
in
push
std
add
xchg
aam
mov
js
insl
mov
es
into
ds
je
and
mov
add
clc
enter
inc
in
mov
jg
inc
xor
adc
out
orb
cmp
enter
sub
fdivr
ret
adc
jae
imul
jo
push
pop
add
adcb
daa
push
fwait
push
fs
rcrb
div
add
mov
xor
bound
inc
sub
into
mov
dec
push
cmp
mov
incb
pop
in
inc
clc
jne
pop
xchg
jns
ret
test
outsb
ror
sbb
outsb
popf
pop
mov
mov
hlt
inc
in
sbb
stos
xor
adc
xchg
loop
and
cmp
inc
testb
insl
idivb
sbb
cmp
mov
stos
xchg
lock
add
decl
fisubrs
bound
rclb
mov
fwait
out
cmp
les
ror
xchg
in
mov
stos
inc
pop
jecxz
push
adc
mov
pmulhw
jl
add
xchg
pop
aaa
jno
shl
sbb
in
lret
sbb
cmp
popf
dec
in
ficoms
mov
rorb
xchg
inc
lea
inc
and
je
sub
jae
movsl
jle
frstor
push
loop
sbb
movsl
std
pop
or
je
movsb
push
pop
adc
in
test
sub
xchg
jnp
xchg
nop
fmul
addb
movsb
frstor
bound
push
lret
sbb
jb
mov
inc
cmp
jne
add
jb
mov
icebp
sbbl
push
push
push
lock
shl
sub
into
jae
ss
mov
mov
and
rcrb
xchg
out
xor
daa
mov
pop
repz
fisubrl
jno
xchg
aaa
fisubl
nop
xchg
push
push
and
pushf
scas
imul
and
mov
es
cli
adc
xchg
iret
sbb
stc
mov
cs
push
insb
bound
and
inc
loope
into
repnz
add
sbb
lret
ds
sti
add
in
sub
scas
pop
iret
cmp
popf
and
pop
lcall
inc
push
andl
dec
xor
cltd
scas
dec
cmpsl
adc
or
pop
jns
es
cmp
out
add
repnz
fdivrl
adc
jg
outsl
lret
sub
outsl
daa
loope
mov
xchg
push
xor
jbe
inc
inc
mov
adc
push
int3
mov
or
push
add
pop
loope
push
repz
or
xchg
adc
fs
jns
andl
adc
movsb
fldl
pop
or
outsb
out
adc
jne
lods
lock
jb
dec
mov
mov
sub
iret
insl
push
xor
mov
into
sub
push
push
and
in
push
mov
scas
fstps
in
add
mov
inc
lods
sbb
mov
mov
cmc
cmp
in
mov
mov
xchg
negb
arpl
movsl
insb
adc
cmc
xor
pop
cmp
mov
imul
in
fcmovnb
sbb
ss
sub
xchg
mov
adc
mov
add
cmp
inc
inc
jg
int
test
loope
mov
adc
cmp
fidivrs
sbb
add
mov
adc
js
cwtl
in
mov
adc
xchg
jge
rclb
int
rcll
cmp
mov
aam
cmp
and
out
fxch
dec
rcr
test
mov
clc
dec
clc
popa
int3
sbb
sahf
push
fidivrs
mov
cmp
loope
or
clc
js
xor
jb
into
fcomi
jg
adc
sahf
inc
cld
loop
adc
pop
push
and
dec
and
sub
scas
cs
pop
sub
shrb
mov
outsl
into
xor
jge
jbe
mov
push
or
ljmp
enter
cli
ret
cmp
jb
xchg
dec
inc
mov
cmp
loopne
sti
lahf
clc
aaa
shufps
leave
add
push
xchg
jo
scas
dec
nop
xchg
lods
aaa
aad
dec
lods
xchg
pop
and
lods
shll
xor
push
idivl
cwtl
movsb
pop
adc
jle
inc
mov
xchg
sub
in
fadds
movsb
sbb
fsub
add
cmp
fisttpll
and
jbe
dec
inc
out
pop
jb
mov
cmp
lahf
rclb
dec
ror
xor
icebp
sbb
cmpsb
into
into
nop
xchg
mov
dec
stc
push
icebp
ljmp
test
cmpsl
sarb
pop
jmp
mov
mov
loope
mov
push
mov
stc
jge
ret
adcl
mov
daa
scas
add
nop
add
imul
dec
ds
mov
roll
cltd
rolb
mov
add
xchg
xchg
sahf
icebp
lds
inc
out
or
gs
pop
mov
out
andb
sbb
push
mov
mov
xchg
or
xchg
loop
es
jp
push
es
push
add
aaa
xor
mov
inc
popa
mov
pop
rorb
insb
mov
xor
cmc
jmp
mov
or
dec
adc
mov
push
sbb
xor
mov
fs
jmp
jnp
cwtl
out
add
es
pop
repnz
push
out
inc
mov
lock
and
leave
out
add
or
xchg
in
adc
xor
pop
aas
mov
xor
mov
push
ficoml
sti
push
inc
loopne
pop
icebp
pop
or
popf
stos
push
pop
pop
dec
jne
push
inc
or
xor
test
push
adc
sbb
sbb
push
xor
jmp
sar
bound
lock
das
out
cltd
sbb
mov
pop
mov
scas
xchg
inc
pop
xchg
mov
out
ror
push
jge
pusha
sub
rep
mov
insb
fmuls
pop
sub
movsl
leave
sti
addb
sub
popf
int
out
dec
dec
int
sbb
clc
pop
setno
mov
out
add
dec
dec
push
ret
fdivrp
sahf
lahf
sbb
cmpsl
dec
ret
fcom
stos
jno
or
inc
nop
sbbl
sub
dec
dec
dec
sbb
mov
jnp
mov
loop
imul
dec
xchg
and
fwait
lret
pop
mov
popf
filds
arpl
push
sbb
pop
dec
lahf
mov
pop
sub
loope
iret
adc
sbb
sub
lcall
xor
cs
filds
int3
ror
push
sub
xchg
rorb
dec
testl
inc
dec
and
push
outsl
fdivl
jle
dec
outsb
dec
je
fisttps
dec
lret
sbb
movsb
adc
out
pop
push
cmp
fcomps
nop
or
mov
jno
sbb
cld
xchg
xchg
call
test
dec
jecxz
sahf
jae
outsl
insb
insb
fs
adc
rol
popf
sub
je
and
fcompl
xor
lret
lods
sti
push
cmpsl
ret
mov
mov
les
shlb
adc
test
ljmp
pushf
mov
scas
push
adc
fdivrl
adc
mov
shrl
push
lods
es
icebp
lret
xchg
in
dec
push
outsl
fsubrs
mov
outsb
xor
pusha
aam
mov
dec
loope
in
xchg
cltd
inc
xchg
jae
mov
mov
icebp
jae
or
push
xchg
sub
arpl
mov
pop
sbb
sub
test
mov
mov
sahf
fisttps
lahf
hlt
push
mov
pop
jbe
mov
int
sub
mov
imul
cltd
clc
jo
push
rcrl
or
gs
xor
xchg
cmpsb
xchg
mov
mov
mov
sub
add
xchg
call
fidivs
mov
add
test
lahf
ja
mov
outsl
and
xor
jnp
cmp
in
pop
jge
pop
xchg
sub
cmp
dec
dec
aaa
sti
cmpsb
aaa
or
in
mov
jbe
push
mov
or
shl
jecxz
imul
lret
cld
xchg
int
dec
mov
sbb
add
test
xor
fimull
add
inc
rolb
sub
xchg
jne
test
shl
addb
imul
sub
fstps
rorb
dec
push
push
xor
subb
int
adc
adc
arpl
add
fsubrl
fldcw
or
mov
xchg
and
cmc
jnp
mov
hlt
sub
fwait
loope
int
inc
pushf
xor
cmp
dec
arpl
inc
mov
dec
or
lea
lret
xor
mov
push
test
xchg
dec
stc
jg
adc
stos
jle
stc
mov
imul
mov
fucomp
insl
push
pop
insb
daa
and
add
and
aaa
int
pop
inc
imul
cmp
pop
cmp
and
push
mov
in
sub
ret
sub
and
lods
mov
and
mov
lcall
lea
xchg
pushf
ds
mov
out
clc
xor
cltd
jno
or
dec
call
pop
cwtl
mov
dec
das
jle
xchg
jbe
sub
lret
cld
adc
mov
adc
add
mov
iret
fcmovnbe
mov
sbb
add
pop
fcmovnu
add
dec
sbb
push
push
insl
or
xchg
adc
jns
jnp
loope
clc
cli
pop
jl
js
mov
pop
dec
or
call
push
add
shl
xchg
xchg
xchg
data16
sub
sub
mov
out
xchg
cli
adc
cmp
push
pop
out
sub
add
push
xchg
sbbb
push
cld
cmp
push
mov
insb
lods
pop
sub
xchg
fwait
sub
fwait
pushf
mov
sbb
sub
or
push
call
ljmp
adcb
in
mov
bound
jae
repz
mov
mov
flds
jb
in
dec
imul
lahf
lods
dec
sbb
add
or
mov
outsl
outsb
jp
xor
mov
and
jl
sub
pop
shl
fdiv
mov
mov
shl
dec
dec
xor
shrl
ret
cmp
push
mov
dec
cmp
sti
outsl
xchg
jecxz
mov
pushf
or
dec
mov
call
dec
adc
add
push
xchg
mov
je
stos
dec
inc
cmp
dec
mov
mov
cmp
jno
lock
push
sbb
pop
mov
or
cmp
incb
out
xchg
jg
repnz
add
add
jns
lea
and
mov
ss
jns
test
sbb
arpl
inc
addr16
dec
in
aas
add
xchg
push
mov
dec
cwtl
pop
or
sbb
cmp
push
push
popf
test
inc
xchg
fistl
mov
mov
add
fwait
in
enter
repz
xchg
push
aaa
mov
push
add
cld
jp
call
lahf
adcl
sysenter
pop
mov
dec
xor
stos
jnp
or
js
cli
jns
loop
ja
add
scas
ret
and
rcrb
sbb
push
pop
or
push
cmp
bound
dec
dec
mov
pop
dec
ljmp
add
pop
fisubl
cmp
mov
ss
add
sub
jae
pop
mov
shlb
bnd
fistpll
dec
sbb
stos
jp
std
push
clc
dec
hlt
icebp
dec
add
fnsave
mov
repz
or
jle
inc
movsb
jle
arpl
lret
fimull
dec
mov
stos
outsb
push
fwait
inc
outsl
or
mov
das
mov
cmp
add
inc
or
sbb
and
ret
into
mov
pop
xor
cmp
mov
cltd
daa
cmp
mov
subl
pop
scas
enter
or
push
pop
clc
cltd
mov
sub
mov
call
sti
push
xor
adc
jge
cmp
push
cmc
sub
lea
out
sbb
inc
lods
std
out
lret
lods
sub
mov
fsubl
outsb
cmp
pop
lahf
jb
cmpsl
iret
pop
sub
adc
cmp
sub
jns
mov
leave
sbb
fsubs
outsb
cmp
repz
add
sub
xchg
lcall
leave
add
ja
push
add
je
pop
shlb
lds
cs
inc
and
pop
subl
jl
mov
fnstcw
imul
in
add
pop
shll
test
jmp
xor
sbb
and
mov
dec
mov
jg
sub
sbb
push
das
test
or
scas
jl
cmp
adc
or
insb
addr16
cli
jnp
int
shrb
push
lahf
add
push
loop
in
jg
addb
fucomi
sub
insl
dec
jns
jl
pushf
iret
push
inc
xor
cmp
dec
jmp
lret
int
cmpsb
mov
cltd
inc
pop
mov
xchg
mov
mov
and
dec
jge
jae
push
mov
inc
lahf
sub
or
sbb
pop
jp
pop
cwtl
cmc
les
loopne
jae
pop
jl,pn
dec
daa
pop
adc
movsb
arpl
sbb
add
fistl
cmpsb
jp
add
jge
ret
sbb
jmp
push
fdivl
outsl
out
mov
xchg
sti
xor
andl
lods
lods
das
sahf
pop
dec
cmc
pop
rep
jge
inc
lcall
mov
pusha
jecxz
push
cmp
mov
xchg
and
insl
sahf
cmpsl
ret
or
and
outsb
and
fimuls
pop
cs
repz
push
cmpsb
jbe
pop
gs
mov
mov
cltd
mov
fcoml
lea
mov
cmpsl
mov
fldt
jecxz
mov
mov
cmpsl
xchg
outsl
mov
mov
adc
repnz
mov
sbb
lds
jb
and
xchg
lods
add
or
outsl
iret
jmp
and
adc
or
inc
popf
pop
mov
and
fucomp
les
xor
cmp
xlat
or
mov
fisttps
ret
pop
jbe
inc
frstor
rorb
xor
mov
push
push
aad
push
test
pop
fwait
or
sub
inc
loop
das
xor
movb
cwtl
stos
popf
clc
leave
fwait
or
insb
outsb
enter
fistpll
cltd
adc
mov
xchg
cld
mov
lret
adc
add
jo
inc
mov
push
repz
cmp
daa
xor
dec
sbb
arpl
adc
out
push
roll
push
shlb
andb
aaa
add
arpl
insb
mov
cmp
adc
pusha
aam
stos
roll
inc
mov
sbb
rcrl
jl
subb
dec
int
fbstp
into
dec
cmp
lds
aad
mov
sub
push
aaa
jnp
sbb
adc
fwait
jne
jo
mov
push
aaa
hlt
jl
test
test
fstl
push
pop
jns
sub
pop
icebp
lds
pop
xchg
pop
push
push
cmpsb
add
lcall
jmp
mov
std
in
or
lcall
or
fnstenv
les
addr16
enter
insl
mov
or
add
mov
mov
add
enter
lret
int3
seto
shrb
push
jns
inc
push
fisttpll
repnz
fidivl
out
jg
and
dec
bound
jne
cs
push
add
fwait
test
mov
mov
mov
mov
mov
jbe
inc
cmp
sbb
das
push
add
jno
mov
fimull
mov
pop
fadds
pusha
fcmovnb
mov
mov
mov
push
out
clc
in
and
sbb
push
xchg
and
jo
fs
fstpl
sahf
adc
out
xchg
jne
shrb
test
mov
push
rorl
push
out
mov
dec
inc
mov
cmp
test
test
pop
fwait
xchg
insb
addl
out
enter
fstpl
lcall
push
or
mov
daa
mov
cwtl
popa
mov
lahf
push
dec
cwtl
mov
mov
das
and
movsb
sbb
ret
push
out
test
mov
lods
xchg
loopne
popa
or
inc
mov
rcrb
gs
out
int3
popf
es
inc
and
pop
sub
in
mov
mov
xchg
pop
or
nop
or
push
outsb
dec
out
int
sbb
push
xchg
out
je
adc
xchg
test
es
mov
mov
sbbl
into
insl
icebp
iret
rorb
stc
negl
loopne
or
mov
enter
test
sub
mov
mov
push
ss
mov
cmp
push
je
mov
mov
popa
or
mov
loope
jns
jmp
sub
repz
es
out
jae
roll
xchg
lods
cmovs
mov
outsb
in
out
and
lret
mull
add
push
sub
imul
mov
push
mov
sub
mov
xchg
or
insb
xchg
and
add
ds
push
sbb
mov
sbb
sbb
adc
push
push
rorl
push
mov
and
or
popa
fimuls
aas
jg
fwait
dec
adcb
xor
push
ds
sbb
jb
mov
lods
mov
repz
cmpsb
pop
dec
inc
divl
and
rcll
test
pop
cmp
js
arpl
jle
dec
push
pop
or
add
jg
aam
cld
cmp
dec
cmpsb
enter
subb
cltd
stos
push
inc
ja
inc
push
popf
or
loope
mov
xchg
rcll
sbb
scas
sbb
cmpxchg8b
pop
sub
cmp
pop
pop
aad
arpl
cmp
and
or
lea
xchg
fwait
jb
js
push
adc
jge
data16
das
scas
arpl
sub
jno
inc
cmp
cld
sub
loope
stos
stos
jge
fiaddl
adc
aam
pushf
add
or
jmp
sub
orb
out
sbb
aad
inc
movsl
sub
out
out
jmp
mov
int3
mov
cmp
into
add
xor
inc
and
popa
sbb
in
mov
add
or
mov
adc
mov
cmp
add
in
pusha
lret
mov
loop
sub
sbb
fwait
stos
test
rcrb
and
cmp
das
inc
movsb
pop
shlb
repnz
std
icebp
mov
rcl
cmp
sub
pop
shll
pop
mov
and
and
sub
sub
cmovae
and
sub
push
and
dec
or
fstpl
stc
jo
outsb
or
jp
outsb
ret
mov
pop
cltd
decb
leave
fldl
ja
call
sub
in
outsl
xlat
fs
pushf
or
push
add
mov
lods
pop
mov
mov
xor
fsubrp
dec
ret
ret
movsl
adc
add
and
cmp
mov
out
adc
dec
lcall
jg
popf
ss
sbbl
out
inc
outsb
inc
pop
movsb
inc
jecxz
cs
ficomps
decl
into
jnp
sbb
sub
js
les
js
mull
or
faddl
ljmp
push
push
stc
test
xchg
ret
shll
scas
or
or
mov
xor
adc
cwtl
outsb
lret
pop
xorl
push
loopne
arpl
mov
mov
push
loop
das
mov
push
xchg
or
push
dec
in
xor
jg
sub
stos
inc
pop
xchg
push
lret
mov
fbstp
scas
ds
adc
sub
fwait
repz
arpl
dec
divps
call
cmpsl
sbb
rorl
imul
or
mov
ds
into
divl
repz
into
or
jb
pusha
hlt
gs
fdivrs
mov
cmp
pop
mov
sub
jno
mov
es
andl
sbb
popf
dec
test
and
sub
cwtl
sahf
adc
fcmovbe
mov
or
inc
scas
cli
sbb
sahf
sbb
lds
outsl
inc
in
loope
ja
ss
pop
shlb
lods
xlat
jb
adc
inc
push
jg
jne
sub
jae
xchg
jo
xor
and
fstl
push
stos
jo
imul
ret
int
cmp
stc
add
stos
jb
pop
push
xchg
loopne
std
fstl
push
add
cwtl
mov
jb
fsts
sub
movsb
pushf
cmc
xchg
ljmp
pusha
adc
pop
xlat
pop
in
xor
xor
cld
ljmp
out
cmp
sbb
inc
jmp
inc
sbb
lret
jmp
or
into
or
in
xchg
dec
mov
jns
sbb
pop
scas
mov
shll
aad
inc
shrl
stos
movsb
movsb
movsl
pmaxsw
lea
nop
mov
pop
ror
ja
dec
mov
pop
mov
movsb
out
mov
sub
mov
daa
push
stos
hlt
sbb
leave
sbb
bound
cli
push
jmp
cmp
mov
xor
push
mov
and
out
cmp
data16
dec
hlt
or
cltd
stc
lea
in
lret
mov
adc
psubw
cltd
popa
ds
ljmp
fldt
arpl
mov
jno
cltd
pop
pop
sbb
mov
inc
lret
xor
hlt
pop
jp
add
xor
xlat
fwait
mov
pop
mov
push
lcall
xor
in
out
push
stos
loopne
adc
lcall
sbb
pop
mov
mov
push
lds
push
ret
sar
int3
scas
push
push
fisttps
popa
loope
dec
cmp
cmp
push
leave
and
sub
mov
clc
xor
xchg
xchg
push
cmpsw
jnp
sub
test
or
inc
decl
nop
mov
imul
push
push
xchg
xchg
sbb
test
insl
aas
pushf
jmp
test
cmp
or
testl
or
frstor
xchg
fwait
dec
adc
dec
cmp
repz
cmp
outsl
inc
mov
mov
repnz
int3
cmpl
jecxz
jg
stc
outsb
jg
adc
fistps
inc
jl
rep
inc
sbb
pop
add
xorb
sub
dec
push
push
loop
add
fnstcw
add
sarl
sub
sub
loopne
decl
mov
inc
mov
ret
andb
sbb
xchg
test
in
sub
ds
clc
arpl
inc
lret
pop
jmp
sahf
xor
imul
test
mov
or
mov
or
xor
mov
mov
nop
scas
dec
push
stc
mov
sbb
aam
cwtl
pop
cwtl
lahf
cwtl
lods
sarb
cmp
mov
loopne
adc
xchg
or
xor
cltd
xor
je
mov
hlt
sub
jmp
mov
pusha
sbb
push
out
leave
sbb
aad
or
and
and
aam
ret
sti
ljmp
ret
les
call
pop
lods
in
aad
adc
pop
jne
scas
xchg
cmc
cli
add
daa
pop
cltd
movsl
and
dec
push
test
xor
cmp
jne
jmp
add
cltd
inc
or
jle
stc
dec
push
ja
rcr
push
push
scas
xchg
xor
mov
repnz
data16
pop
and
pop
cmpsl
push
mov
lods
mov
into
dec
iret
sbb
int
xor
fldl
dec
sar
xchg
leave
cltd
repz
cmpsl
lcall
push
mov
lock
mov
xor
frstor
out
sbb
pop
into
enter
xchg
and
test
or
enter
xchg
mov
jge
jae
mov
mov
jo
adc
mov
popf
fimull
mov
mov
fldenv
rolb
bound
js
and
inc
dec
mov
test
sbb
mov
xor
inc
lahf
add
icebp
orb
daa
cmp
inc
mov
mov
fsubr
cmp
or
test
les
out
add
dec
repnz
imul
mov
negl
out
xlat
sub
cmpsb
aam
mov
mov
push
mov
mov
test
test
and
pop
xchg
sbb
stos
pop
shrb
shrb
movsb
cmpsl
aam
pop
or
cmp
mov
std
sbb
add
mov
dec
jg
xchg
mov
test
in
push
mov
nop
lret
and
insl
mov
int3
pop
cli
orb
mov
popf
in
dec
pop
les
cltd
stos
mov
lods
loopne
pop
loop
ja
loop
mov
movsb
and
lods
mov
jecxz
xchg
sub
mov
add
xchg
lret
rol
stos
out
mov
sbb
scas
stc
mov
mov
mov
sub
cld
je
jae
mov
pop
stc
dec
jbe
ja
sbb
rcll
pushf
fcoms
cs
sahf
mov
ja,pn
pushf
dec
inc
cmp
add
jb
sub
fucomip
std
cwtl
out
aam
cmp
mov
adc
xchg
daa
test
mov
hlt
jg
lds
adc
push
pop
inc
shll
mov
cmpsb
xchg
mov
negl
adc
pop
push
sahf
aas
cmp
xor
xchg
es
lods
ficompl
xchg
sbb
xor
aad
das
lea
lret
cli
or
dec
and
std
call
inc
je
or
fbstp
jmp
xor
push
fnstcw
imul
mov
or
stc
and
push
sbb
or
xlat
dec
cmp
cmpsl
movsl
daa
push
sarb
pop
clc
ret
dec
mov
ss
movsb
orl
lds
jb
push
cltd
mov
sbb
mov
add
mov
sahf
shrl
cmp
outsb
push
push
cs
and
movsl
subl
fnstsw
js
mov
jbe
test
loope
mov
xor
mov
jg
jg
adc
mov
test
mov
inc
push
aad
enter
faddl
std
inc
stos
outsl
rcr
xchg
cmp
sub
cmp
inc
mov
mov
icebp
dec
and
push
pop
inc
insl
mov
daa
sub
fwait
inc
cmp
mov
cmp
ret
repnz
sub
dec
imul
rolb
stos
push
fistpll
mov
push
loopne
cmp
adc
cld
fmull
push
mov
loop
pop
ds
sahf
rcl
inc
movsl
rolb
jns
push
push
daa
roll
scas
in
loop
loop
sbb
stc
bound
push
mov
aam
jbe
daa
aas
jbe
out
mov
stc
cs
or
xlat
or
fists
loopne
stc
mov
xlat
mov
push
cmpsl
cs
jb
arpl
ja
or
stc
in
add
jbe
sbb
xchg
enter
pushf
and
popf
cmp
imul
and
int
push
std
add
push
sbb
movsl
cltd
out
pushf
cmp
or
lods
test
jbe
sub
data16
lret
xchg
dec
in
not
jbe
fldcw
daa
fcomi
add
pusha
pop
int
gs
xor
mov
add
adc
jns
cli
iret
int3
ret
adcb
inc
fimuls
xor
mov
outsb
int3
pop
mov
inc
xchg
and
inc
into
xchg
jge
fadds
mov
pop
and
jnp
cmp
pop
xchg
push
bsr
sub
adc
mov
loopne
sbb
jmp
ret
jmp
sbb
sub
push
dec
inc
add
mov
loopne
lods
int
das
xor
push
in
test
outsb
out
mov
mov
dec
insl
sub
inc
mov
repnz
jb
outsl
push
dec
outsl
xor
aad
jae
push
dec
cmp
ja
movsl
enter
das
or
shll
xchg
or
cmp
pop
dec
dec
pop
jcxz
std
jl
adc
repnz
ret
push
add
cmp
mov
jmp
jmp
or
insb
mov
jnp
adc
addr16
dec
xchg
mov
or
inc
movsl
sbb
loop
cmp
into
pop
xor
push
lods
adc
scas
je
mov
inc
xchg
arpl
outsb
mov
pushf
pop
popf
push
add
ret
loope
jmp
mov
faddp
mov
fwait
sub
bound
adc
cli
int
hlt
mov
fisttpl
in
mov
adcl
cmc
sub
xchg
sub
sahf
add
push
xchg
shlb
rclb
test
lods
lods
sub
pop
sbb
fadd
cmp
push
lock
shrl
cs
andl
push
mov
ja
aam
orl
and
jbe
mov
cld
xchg
fs
enter
adc
mov
cli
faddl
in
fidivrs
pop
push
in
mov
in
cwtl
daa
and
and
sub
pop
inc
std
mov
fs
inc
ss
sub
popa
in
test
xchg
push
aaa
adc
and
cmc
mov
dec
inc
jmp
aad
imull
push
repz
and
fisttpl
popa
icebp
adc
pop
out
aas
sub
ljmp
inc
cmp
cld
js
cmpsb
fmull
cltd
sbb
mov
insl
sub
or
mov
scas
iret
das
push
add
sbb
push
inc
pop
sub
mov
and
adc
in
loope
sub
jecxz
xchg
bound
shll
and
add
sarb
in
cs
test
pop
data16
arpl
mov
dec
mov
push
aad
pop
xlat
inc
inc
pop
or
cli
adc
cmpsb
loopne
stc
movsl
jmp
jge
into
mov
jmp
jb
psubsw
mov
btr
dec
subl
iret
test
enter
dec
loopne
adc
push
xchg
push
xchg
rcrb
fs
sar
das
decl
jne
xchg
and
mov
or
aam
ljmp
scas
mov
daa
and
push
mov
pop
xchg
jns
imul
aaa
xor
push
decl
jnp
xor
add
mov
push
jnp
pop
jnp
inc
dec
pop
testl
jne
js
rcrb
mov
xchg
lods
add
jmp
imul
adc
cmc
fisttps
fwait
inc
ret
sbb
or
movsb
cmp
sbb
jne
inc
mov
mov
cld
fmul
in
xor
loop
jmp
mov
xorb
adc
inc
mov
loope
loop
int
cmpsb
stc
cmpb
or
push
insl
lret
hlt
sub
fistl
lods
xchg
and
inc
xor
out
xchg
addr16
inc
push
shll
cmc
jmp
or
xchg
es
push
sub
xchg
and
movsl
test
jle
ja
mov
sbb
push
cmpsl
mov
lods
mov
cmp
out
clc
std
imul
pusha
sub
push
pop
xor
adc
xchg
xor
dec
movsb
inc
fs
and
inc
xchg
xor
push
inc
jne
iret
push
and
pop
mov
scas
mov
push
leave
push
and
sub
push
inc
lock
insb
rcrl
sub
test
jae
das
data16
add
movsl
pop
pushf
icebp
push
int
js
or
dec
fcomp
loop
sub
push
incb
lret
repnz
arpl
pop
dec
lods
inc
pop
lods
or
xor
and
xchg
clc
out
ss
mov
jae
xor
push
sar
in
mov
jbe
imul
iret
mov
sub
inc
sbb
shll
cmpl
jno
sbb
push
push
inc
aaa
fsub
data16
xchg
imul
mov
xchg
lcall
mov
pop
decb
cli
js
testl
adc
pop
bound
lret
cmp
sub
mov
jp
ljmp
push
js
mov
inc
sub
lret
out
dec
inc
sbb
jg
xor
push
jne
cmp
testl
shlb
mov
sbb
mov
cmp
inc
test
ja
xor
push
mov
sbb
pop
push
lcall
and
push
xlat
cltd
rorb
or
insb
mov
mov
push
mov
mov
jl
push
mov
sti
aam
inc
data16
lods
int
lds
lret
mov
arpl
jnp
fcomp
mov
testl
or
push
adc
jge
lods
dec
jns
xchg
push
test
pop
ja
out
idivl
aad
daa
push
pop
xchg
out
and
mov
jecxz
std
cltd
stos
icebp
dec
jp
enter
pop
or
mov
add
and
mov
push
mov
in
xor
jbe
das
sbb
test
or
jmp
nop
dec
fldcw
and
repnz
mov
jp
enter
das
sub
or
hlt
xchg
std
lahf
fcmove
insb
xchg
lds
xchg
push
xchg
fsubrs
cmpsl
fdivl
rorl
xor
mov
pop
movsl
push
add
jb
popf
xchg
adc
jbe
aad
fldcw
sbb
dec
flds
inc
mov
and
ficompl
les
push
dec
ja
sub
push
orl
inc
outsb
je,pn
icebp
addr16
xor
shrl
mov
xchg
dec
inc
add
mov
cmpsl
int
into
push
cmp
and
repnz
mov
stc
pop
mov
mov
mov
cmpsb
ret
push
imul
xchg
mov
scas
mov
xchg
mull
movsb
daa
popa
jb
or
dec
push
flds
pop
mov
out
hlt
xchg
mov
hlt
push
pop
in
int
cmpb
fsubl
pop
mov
bound
jge
lcall
in
add
adc
fwait
and
sub
mov
lcall
mov
pop
test
test
mov
mov
sbb
inc
imul
lods
xchg
inc
or
pop
xchg
jg
sub
clc
xchg
cmpsb
arpl
leave
mov
movsb
aam
push
shl
pop
dec
aaa
sub
jnp
lcall
out
jbe
mov
hlt
mov
push
lret
sahf
pusha
cltd
in
or
iret
mov
pop
cmp
adc
mov
out
nop
lret
int3
inc
fiaddl
popa
gs
sarb
rcll
or
stc
in
mov
std
inc
mov
dec
push
push
xchg
sub
das
mov
or
scas
add
mov
popf
xchg
arpl
xchg
xchg
lods
mov
mov
enter
pushf
lahf
push
pushf
and
pop
dec
decl
aam
fcmovbe
clc
or
test
jmp
mov
add
xor
xor
test
aam
jge
cmp
push
out
sbb
push
push
ja
ja
mov
and
notb
add
fidivrs
and
xchg
and
sbb
xchg
fwait
loopne
jno
mov
push
std
rorl
push
fadds
lahf
lret
jae
jecxz
mov
icebp
jbe
mov
sub
pop
out
mov
cmc
mov
jo
mov
xchg
inc
aas
lret
push
data16
sbb
sbb
push
adc
jns
gs
push
popf
fs
cmc
jns
mov
mov
scas
in
ror
or
xchg
push
and
mov
addr16
mov
push
inc
outsb
cmp
lcall
or
clc
cmc
nop
gs
inc
mov
jne
in
jb
outsb
out
pop
xchg
call
pop
mov
lock
mov
sbb
sub
into
mov
jle
mov
push
lods
insl
xchg
inc
push
cwtl
rcrb
popa
shll
out
xchg
adc
test
mov
out
loopne
rcrb
test
inc
mov
sahf
fcompl
xor
mov
fldl
stc
cwtl
loopne
cmp
xor
adc
lcall
pop
das
sbb
clc
jnp
push
nop
dec
mov
inc
xchg
lret
pop
dec
cmp
push
push
adc
icebp
leave
fidivrl
data16
mov
movsbl
pusha
outsb
in
insb
mov
addr16
repz
call
jg
divps
lods
dec
xchg
jnp
mov
jecxz
mov
push
inc
sub
dec
mull
fisubs
pop
mov
push
test
lret
cltd
pop
xor
xor
mov
in
bound
popf
fisubl
cwtl
mov
fstl
cld
adc
cltd
push
add
push
test
jg
xlat
mov
adc
sbb
mov
xor
mov
mov
push
pop
scas
movsb
test
cmp
pop
test
inc
ret
push
adc
enter
adc
adc
adc
inc
mov
jb
pop
ret
fisubs
adc
lahf
dec
mov
pop
sbb
in
jcxz
pop
cld
imul
std
mov
jmp
mov
and
jg
mov
sbb
inc
push
adc
cmpsl
push
mov
test
pop
bndstx
nop
mov
mov
lret
mov
test
scas
or
stos
mov
inc
loope
icebp
ds
outsl
stos
xchg
cmp
fldln2
mov
lods
xor
or
fwait
imul
lcall
out
dec
push
push
inc
int3
adc
add
adc
jl
fidivrl
rcrl
sbb
sbb
lock
xor
aad
push
mov
mov
iret
dec
subl
jge
ja
cmp
popf
lds
cwtl
gs
adc
lahf
ljmp
jmp
pop
pop
dec
shrb
sahf
iret
enter
xchg
icebp
lock
push
ljmp
into
dec
dec
adc
bound
fnstenv
xchg
jge
scas
push
adc
add
sub
xchg
imul
mov
pusha
sub
mov
dec
in
sbb
cmc
fisubrs
pop
and
insb
mov
dec
es
out
mov
aad
mov
ficoms
and
mov
les
lock
mov
enter
call
inc
pop
test
inc
mov
outsb
add
jne
std
shll
scas
ffreep
fidivl
dec
sbb
fstps
addb
rolb
jb
cld
inc
cwtl
cmp
ficomps
lret
out
sar
iret
nop
push
mov
mov
repz
sbb
movnti
inc
sub
adc
cli
into
daa
xor
push
scas
sti
mov
inc
insl
inc
mov
insb
pop
pop
lcall
sub
add
inc
hlt
hlt
mov
pusha
movsb
cld
pop
lds
out
jb
daa
mul
xchg
mov
jl
faddl
lcall
cmp
movsb
xchg
ficoml
sub
insb
insl
push
pop
mov
andl
addr16
mov
push
xchg
cwtl
adc
jecxz
lret
mov
inc
lcall
add
sub
inc
fnsave
jge
fdivs
or
pop
mov
xor
nop
out
stos
shrd
lret
int
push
mov
call
mov
out
cmc
sbb
rorl
jecxz
xor
cmp
push
mov
in
das
pushf
iret
loopne
pop
ja
cmp
push
mov
es
sub
lret
mov
out
outsb
mov
dec
das
or
lods
push
inc
incl
adc
jo
mov
sbb
mov
repnz
xlat
out
orl
xchg
mov
outsb
adc
jg
add
cmp
adc
popf
xlat
lock
and
idiv
inc
adc
adc
cs
dec
jmp
aas
mov
adc
stos
mov
inc
sarl
sub
xor
jne
cli
in
jl
jl
sbb
xchg
clc
cli
bnd
jge
mov
jne
lods
data16
dec
mov
mov
loop
inc
ss
imul
jle
cmp
mov
std
loop
ja
dec
test
pop
mov
cmp
test
leave
jmp
xlat
push
lods
xor
mov
sbb
dec
push
push
out
fld
xlat
daa
sbb
push
mov
mov
data16
cmp
xchg
jb
rcll
mov
out
in
into
fs
insb
shr
icebp
rcrl
pop
popa
pop
mov
fistps
les
mov
shrb
jnp
mov
rcrl
add
mov
mov
pop
adc
aas
into
cmp
push
sub
jle
jecxz
mov
pop
ret
add
push
les
loop
insb
aad
test
push
adc
mov
mov
push
stos
push
out
mov
cmc
pop
mov
xchg
mov
dec
mov
jmp
sub
pusha
xor
das
inc
and
inc
push
fdivs
mov
pop
movsl
jp
xchg
in
jle
js
cmpl
cmpsb
inc
fimuls
andb
lea
xchg
inc
pop
xor
shlb
inc
cld
loop
pop
addb
jle
sub
aaa
call
pop
aaa
setge
sub
mov
scas
dec
in
jecxz
push
jnp
or
dec
mov
popf
adc
push
add
cwtl
iret
inc
add
push
je
adc
pop
sub
aas
out
adc
inc
mov
mov
push
stos
filds
test
stos
cltd
sub
aaa
imul
scas
cmp
add
shrb
jae
sarl
inc
shrl
sub
sub
das
sub
outsb
mov
jge
jmp
or
mov
lods
inc
popa
push
xor
cli
push
push
nop
sar
gs
adc
or
int3
or
rclb
ret
test
imul
repz
xchg
jmp
jl
outsl
inc
jae
mov
dec
mov
pop
xchg
sahf
dec
fwait
out
jb
rorb
loope,pn
into
push
pop
fstpl
push
test
xchg
sub
std
mov
out
loope
lock
lcall
bound
or
filds
dec
push
inc
lret
sti
fdivr
test
dec
inc
cmc
dec
dec
mov
sete
test
jl
sarl
xor
insl
sub
fldenv
mov
lcall
lods
mov
adc
jns
xor
test
out
adc
fwait
mov
loop
xor
xchg
cmp
daa
scas
call
lahf
stos
push
iret
xor
ss
into
sarl
notb
dec
push
mov
into
push
push
lods
mov
sbb
out
imul
inc
adc
mov
lret
stos
setle
xchg
imul
xchg
lahf
movsb
dec
call
scas
out
push
xchg
cmpsb
add
add
adc
lock
cmp
shrb
or
shrl
mov
xchg
mov
das
cltd
xchg
mov
mov
push
sbb
mov
dec
shr
sub
mov
sub
sbb
xor
push
add
and
pop
push
jno
mov
jb
xchg
in
mov
mov
inc
rcrb
xchg
fistpl
pop
or
and
in
fidivrs
pop
mov
mov
pop
and
add
jecxz
in
out
or
or
mov
mov
pop
sarl
ret
in
sub
or
leave
xor
cmp
cs
int3
addl
adc
adc
leave
adc
daa
sti
lret
adc
or
mov
mov
cwtl
push
data16
int
ljmp
xchg
ljmp
repz
lea
cmp
and
fmuls
ja
jge
insb
or
hlt
inc
mov
lock
fucomip
stos
dec
daa
ret
mov
cmp
adc
or
jns
dec
fnsave
pop
mov
jnp
call
sub
mov
loopne
insl
test
cmpsl
clc
inc
sti
pop
pop
lods
pop
fs
test
mov
popf
pop
imulb
das
lret
repz
popf
sbb
out
in
mov
outsb
dec
movsb
xor
std
xlat
gs
std
jb
test
call
popa
mov
fbstp
inc
cmpsl
rcl
les
pop
in
xchg
mov
enter
lock
mov
sbb
inc
xchg
fiaddl
or
pusha
data16
lcall
xchg
add
in
inc
sub
pop
adc
jle
and
or
jp
popf
pop
lcall
in
add
jl
in
jo
inc
cmpl
add
xor
aaa
adc
mov
mov
cmp
jne
in
stos
cmp
ret
cmp
lods
mov
stc
lret
mov
adc
or
and
add
mov
and
inc
ljmp
sbb
loop
jno
mov
jl
pop
orps
adc
sti
and
xor
push
lods
inc
in
and
ss
jae
dec
into
xchg
pop
adc
push
adc
cltd
jmp
ss
dec
popf
scas
sub
mov
sub
mov
mov
push
cld
ficomps
loopne
clc
inc
mov
clc
push
scas
mov
mov
divb
test
std
xor
or
sub
cli
stos
cmp
cmp
imull
xchg
iret
mov
bound
push
dec
sbb
fstps
dec
push
in
mov
inc
out
jecxz
outsl
clc
add
xchg
scas
stc
xchg
ljmp
xchg
cmp
jnp
int3
adc
and
addl
mov
pop
adc
test
rcrl
pop
cld
push
or
push
inc
xchg
and
jecxz
clc
notb
aaa
mov
out
scas
cmc
psraw
cmc
inc
stc
lahf
ret
sbb
pop
les
or
ljmp
out
std
push
pusha
add
pusha
sub
lods
cwtl
shrb
mov
dec
rol
cmpsl
cmpsb
cs
pop
jae
lret
xorl
mov
inc
fidivl
or
aaa
push
scas
mov
test
jno
lahf
jno
push
repz
cmp
or
sub
int
aam
xchg
pop
aam
cltd
out
test
push
pushf
and
or
int
in
popa
cmpsb
lods
pop
xchg
cmp
ljmp
ficomps
cmp
aad
scas
stc
bound
pusha
addr16
jp
push
fstpl
dec
lods
mov
jge
out
ljmp
sbb
cmpsl
xchg
push
ja
jecxz
aam
adcb
inc
xchg
mov
push
adc
in
and
sbb
push
dec
jo
shll
hlt
jg
xchg
cmc
mov
cmc
cli
stos
push
in
inc
push
popf
into
cmp
popf
roll
aam
jne
nop
xchg
fwait
xchg
xchg
cmp
test
sbb
fcompl
lea
xchg
cltd
push
gs
out
pop
mov
insb
loope
inc
cmp
lcall
lods
dec
nop
cltd
add
jne
xchg
popf
xor
cwtl
leave
outsb
mov
call
push
and
and
sub
addr16
jge
jge
mov
or
or
out
test
mov
fstps
cmpsb
sub
inc
jp
mov
jmp
outsb
cli
insl
or
scas
fidivrl
xor
int3
add
xchg
or
cmp
leave
fcmovnb
sub
xor
inc
jns
adc
fisubrs
ss
icebp
xlat
push
pop
aaa
sbb
jp
lds
pop
sbb
push
xor
fimull
and
mov
push
aad
aas
pop
sbb
sbb
cld
gs
call
out
cmp
or
int
push
fisubrl
or
ja
or
add
dec
popf
xchg
adc
test
cs
push
push
sub
in
push
sbb
sbb
daa
xor
sbb
push
fadd
jmp
adc
ds
gs
shlb
xchg
aas
mov
pop
mov
push
or
rolb
icebp
sub
punpckhwd
dec
dec
loope
mov
mov
pop
sti
cltd
mov
pop
test
sbb
dec
inc
pop
or
dec
sbb
repz
scas
xor
and
shl
and
and
xchg
test
add
push
xchg
outsb
jbe
sti
movsl
std
inc
and
inc
adc
mov
bound
inc
sbb
lret
push
push
cmpsb
andb
clc
adc
adcl
imul
sbbb
clc
mov
mov
or
outsl
inc
adc
subl
dec
xlat
call
jmp
scas
out
xchg
and
nop
in
xor
std
sub
sbb
sub
out
push
pop
das
int
je
pusha
cwtl
xor
jecxz
mov
and
xor
jp
je
pop
pushl
fidivrs
push
daa
test
clc
imul
pop
xchg
ret
xchg
loope
inc
jg
and
adc
sub
test
dec
notb
push
data16
dec
pusha
push
lret
xlat
cwtl
adc
clc
hlt
pop
jne
mov
popa
stos
into
pop
pop
dec
mov
pop
xor
fdivs
pop
mov
out
dec
cld
xor
in
xor
xor
pop
aam
sbb
outsl
mov
and
bound
push
std
es
arpl
xor
sub
push
cmp
sbb
sar
add
xchg
orb
out
adc
lock
jns
mov
test
or
iret
andl
fs
push
push
mov
pop
js
out
cmp
pop
loopne
add
ja
sbb
sbb
inc
movsl
xor
adc
sub
rorb
cs
jns
push
push
mov
xor
sbb
pop
xor
or
ds
enter
sbb
xlat
movsb
mov
dec
scas
aas
mov
mov
mov
ja
push
push
adc
das
ja
clc
cmp
mov
movsb
adc
cmpsb
ret
jne
push
jnp,pn
jns
std
fistl
or
xchg
adc
mov
sbb
mov
test
push
cld
lock
push
fs
lcall
outsl
stos
mov
and
xlat
or
jbe
inc
fwait
inc
adc
adc
mov
bound
xor
js
cs
int3
or
push
cmpsb
push
stc
add
scas
cmp
out
mov
adc
ficomps
pop
or
adc
and
icebp
push
jl
fcmovne
jae
dec
mov
fcomps
cmp
sbb
add
jo
imul
jno
int
lock
popa
movsl
imul
add
rclb
mov
call
data16
test
cmp
ret
jne
xor
cwtl
mov
pop
jmp
je
sbb
lea
cmp
jnp
push
fildl
pop
dec
jbe
mov
ds
iret
shll
fsubl
push
ud0
and
jle
dec
xor
aad
cwtl
cmp
and
test
ret
int
push
pop
xchg
xor
sbb
bound
dec
or
cmpsl
lock
and
sarl
mov
push
sub
xor
fisubl
push
xchg
pop
loopne
sti
dec
xor
into
cwtl
adc
push
iret
popf
into
push
subl
sbbl
loopne
sbbb
pop
fs
xchg
xor
pop
iret
hlt
shll
xor
inc
scas
cmc
add
and
lods
xor
dec
movsl
sub
cltd
push
mov
shlb
dec
xor
int3
insl
mov
xor
adc
shl
pop
arpl
popa
shlb
inc
pop
mov
pop
jo
xchg
pop
xchg
xlat
hlt
mov
mov
pop
xchg
sub
icebp
fcompl
adc
inc
cmp
leave
xchg
jmp
xchg
loope
cltd
xor
loopne
xlat
adc
adc
add
lcall
mov
nop
xor
cmp
add
sti
popa
mov
jo
jg
xor
nop
insl
mov
test
popa
stos
push
aas
push
cmpsb
jg
mov
push
jmp
adc
out
or
push
sbb
push
adc
rclb
scas
test
dec
outsb
sub
mov
jae
jge
xor
addr16
jl
aad
xchg
lcall
mov
or
mov
gs
or
jo
sub
xor
cwtl
adc
mov
adc
cmpsl
cmp
aas
xchg
inc
pusha
clc
xchg
into
inc
test
scas
pop
stos
cli
loope
movsb
inc
push
pop
pushf
lds
and
xlat
sarb
adc
mov
dec
cwtl
inc
sub
push
aaa
aas
jns
fcoms
les
and
fbld
lods
imul
ds
test
cmp
xchg
inc
psubw
insb
clc
sub
shl
jo
call
mov
roll
mov
imul
push
jne
test
nop
cmc
mov
bound
fsubp
pushf
push
rcrb
and
xor
sahf
hlt
fsubl
pop
loope
jbe
dec
dec
xor
mov
push
mov
adc
mov
leave
popa
cmpl
jno
rclb
rcrb
lds
pop
jmp
or
stc
adc
scas
pop
pop
sbb
scas
mov
fs
cmp
repz
stc
sbb
insl
adc
cwtl
nop
fs
loop
sub
sarl
rcl
sti
repnz
xor
sahf
nop
push
inc
fucomi
cli
je
es
and
lret
cmpsb
jb
inc
mov
inc
mov
sti
fistpl
jge
jbe
mov
pop
lahf
lock
inc
push
pop
test
out
cwtl
pop
push
xchg
mov
jmp
push
pop
out
ror
pop
mov
data16
sub
mov
sar
pop
inc
sub
and
xchg
test
jg
mov
inc
lods
xchg
stc
xchg
sbb
scas
mov
xor
xchg
sub
cmc
sti
or
sub
mov
and
jnp
sbb
nop
test
push
push
xchg
push
xchg
mov
add
jge
in
fdivrp
fimuls
add
dec
out
sti
xchg
pop
inc
dec
inc
or
insb
xchg
inc
in
leave
mov
push
in
popf
loope
mov
sbb
push
ret
jns
fdivs
subb
push
inc
sbb
iret
push
ror
fnstcw
je
sbb
lods
xor
cmpsl
dec
fsubrs
inc
lea
jle
insl
shrl
test
dec
or
push
adc
out
stos
xor
or
dec
out
sbb
icebp
loopne
xchg
jmp
stos
in
ficoml
test
jl
iret
scas
ja
in
popa
or
into
inc
push
jmp
lds
dec
mov
shlb
lret
xor
sbb
rcr
pop
insb
adc
cld
add
cli
lcall
test
in
pop
add
mov
dec
xchg
lcall
pop
dec
popf
cmc
bound
dec
js
push
or
dec
fwait
lcall
cmpsl
out
fidivl
test
nop
test
cltd
int
adc
mov
hlt
lahf
lret
dec
sbb
mov
les
lret
and
adc
mov
jbe
out
push
and
mov
imul
mov
mov
adc
push
lret
leave
sarl
xchg
sbb
fstps
lds
mov
call
pop
es
jae
push
jno
jnp
or
outsl
sar
fisubl
andl
dec
cmpsl
adc
ss
ja
rcl
adc
adc
rep
ljmp
clc
jmp
mov
push
cwtl
stos
sti
dec
pop
and
test
mov
rcrl
mov
notb
push
mov
xchg
mov
or
mov
xlat
jnp
scas
cli
push
add
ret
enter
mov
sarb
xchg
add
mov
pop
lods
lahf
adc
and
je
cmc
or
mov
xchg
or
pop
push
fldt
mov
cmpsb
aad
inc
jo
in
push
push
cwtl
push
and
push
jbe
test
adc
add
in
jbe
insb
lret
scas
xor
push
aam
fwait
or
stos
push
fidivl
jp
push
or
add
mov
orb
sbb
int3
addr16
or
jae
std
cmpsb
out
push
in
inc
lea
push
popa
cwtl
mov
xor
dec
loopne
ficoml
sub
mov
subl
adc
ret
cld
aas
sbb
loope
out
lret
and
xor
jp
mov
xchg
lahf
jne
in
xchg
sbb
mov
sbb
cmp
or
fidivl
fidivrs
push
aaa
xchg
aas
cmc
mov
cs
adc
mov
out
fldcw
xor
imul
fdivl
sbb
inc
in
loope
mov
push
fldcw
lret
leave
mov
pop
stos
dec
rorb
mov
jecxz
push
jo
out
and
push
bound
jle
sub
inc
ds
je
inc
mov
loope
out
lret
mov
insl
mov
push
dec
adc
sbb
in
inc
pop
fs
cs
mov
mov
and
clc
in
rolb
daa
jno
add
sbb
sub
shll
les
stos
inc
push
jmp
insl
cmpsb
pop
lahf
out
jns
aad
adc
mov
or
fldenv
aad
invd
pop
arpl
aaa
in
or
jb
cltd
xor
roll
jo
pusha
push
xchg
mov
inc
lea
movsb
mov
popf
adc
lods
out
adc
add
repz
cmc
pop
jmp
cmc
ja
es
jbe
out
dec
sbbl
enter
sbb
pop
repnz
xchg
cmp
jb
movsb
andb
sbbb
jmp
xchg
iret
aas
lcall
cs
fwait
test
mov
aad
unpcklps
mov
int3
push
jns
xor
dec
std
out
arpl
scas
pop
leave
cmp
in
addb
out
and
bound
mov
sub
jecxz
xchg
inc
pushf
xchg
pop
pop
mov
stos
jbe
xchg
xlat
call
xor
add
pop
push
fnstsw
dec
jno
icebp
push
mov
inc
sbb
cmp
push
cmpsl
sbb
mov
pop
dec
lods
call
dec
push
mov
repz
movsb
ret
les
xor
ja
hlt
sbb
aaa
sub
mov
fnstcw
xor
out
cltd
out
int
xchg
xchg
je
fcomps
pop
shll
pop
popf
mov
cmpsb
popa
sub
jnp
icebp
add
lret
icebp
mov
lock
mov
pop
fsubrs
and
dec
mov
xchg
lea
sub
call
adc
test
or
dec
cmp
sbb
jl
sub
and
sub
and
xor
or
mov
test
scas
add
movd
fsubrp
lods
lret
dec
jnp
cmp
test
ret
mov
jle
inc
xchg
fisubrl
int3
sbb
mov
add
clc
mov
dec
adc
movsl
fnclex
xor
cmp
cmp
xchg
sub
or
stos
into
and
sbb
sahf
add
pop
push
sahf
and
es
xor
aas
clc
out
mov
clc
aam
ret
mov
idivb
cmc
mov
rcll
sub
mov
mov
ss
insl
cltd
mov
hlt
adc
mov
cmpsl
orb
lahf
les
pop
std
push
mov
xlat
in
push
shrb
or
push
xlat
test
sbb
xchg
mov
fmuls
mov
cli
add
xchg
int
push
fimull
add
lods
or
jecxz
fnstenv
jle
push
fdivrs
xor
and
mov
push
adc
in
cmp
lods
mov
sbb
rcll
cli
cmpsb
lods
adc
iret
add
loop
insl
shr
push
or
popl
subl
xchg
pop
dec
daa
jbe
adc
pusha
cmpsl
mov
xor
dec
insb
mov
mov
sub
fildl
pop
mov
stc
xor
cmp
push
int
push
xlat
dec
adc
lcall
add
mov
add
loope
das
pand
xor
pop
push
lahf
and
mov
inc
xchg
xchg
lds
iret
pop
push
or
pop
jnp
dec
dec
xor
aad
xchg
lahf
xchg
scas
or
cmc
xchg
call
loop
fsubp
jb
std
xchg
shlb
popf
jl
loopne
mov
mov
lods
notl
and
sbb
fsubrs
xchg
sub
adcb
lret
int
out
mov
sbb
in
in
inc
push
cmpb
fiadds
mov
and
fldl
xor
daa
jl
aaa
dec
and
js
mov
out
int3
int3
xchg
test
add
cmp
or
ja
sarb
push
cld
pop
cmpsl
xchg
jns
jno
jno
inc
mov
push
xor
test
in
popa
sub
inc
inc
lret
mov
ja
cmpsl
std
scas
fucomi
inc
lods
sbbl
aaa
dec
mov
imul
sub
loope
mov
xlat
rdtsc
fisubs
or
out
jnp
push
jnp
push
add
cs
lock
lcall
test
scas
push
mov
mov
int3
mov
ret
sahf
push
loopne
fsubp
adc
ret
cwtl
int
pop
xor
stos
mov
insb
sub
pop
push
call
mov
clc
repz
mov
pusha
xor
or
pop
fstpl
out
out
sbb
inc
adc
sarb
or
sbb
lahf
mov
fiaddl
inc
inc
jo
adc
adc
out
or
and
mov
gs
mov
and
in
push
fadds
or
sbb
popw
push
call
add
fwait
daa
dec
mov
vpacksswb
repnz
outsb
mov
popf
out
add
jp
ss
arpl
xchg
cmpsl
scas
lods
orb
adc
pop
jo
pop
xchg
outsl
lods
push
cli
lods
bound
bound
testl
mov
mov
push
inc
das
cmp
sub
cld
rclb
mov
ret
xchg
stos
inc
repz
inc
or
enter
mov
sti
add
lret
sub
insb
int3
out
pop
pop
mov
test
das
imul
jmp
sbb
stos
hlt
add
or
call
imul
mov
jae,pn
in
add
pusha
push
push
jbe
xor
adc
out
mov
fcompl
stos
imul
mov
or
pop
into
mov
cmp
inc
cmp
adc
mov
stos
pop
cvtps2pd
dec
push
mov
das
mov
dec
sbb
pop
dec
and
cmp
mov
and
lea
mov
mov
push
or
mov
pop
insb
mov
into
and
fstps
stos
jne
pusha
mov
jmp
dec
sub
mov
pop
mov
push
stos
hlt
mov
add
mov
and
testb
mov
push
test
ret
mov
inc
test
mov
dec
popf
jmp
data16
and
inc
and
xchg
dec
shlb
idivl
cltd
mov
xor
pop
imul
push
jl
mov
in
adc
dec
push
sub
ds
cmp
jbe
mov
loop
cmp
xchg
xor
mov
inc
mov
mov
pop
xor
cld
or
mov
xchg
insl
mov
or
adc
jne
xchg
aas
fiaddl
lcall
adc
cwtl
test
std
xchg
dec
popa
adcl
jp
push
aam
sub
sahf
cltd
paddsw
mov
movl
fnstsw
adc
insl
cli
push
and
xchg
xchg
aad
mov
scas
mov
mov
test
sahf
cli
in
sub
test
xor
bnd
in
push
out
out
pop
loopne
push
fldenv
cmp
mov
cmp
rcrb
ret
xchg
xchg
jmp
testl
cli
addb
mov
das
loop
nop
adc
ret
push
cs
loope
sub
mov
outsl
aas
pusha
dec
xor
sbb
imul
mov
cmp
cmpsb
push
dec
outsl
inc
push
jl
sti
sub
scas
mov
punpckldq
push
test
andb
lret
aaa
dec
lahf
sahf
xor
popf
jb
mov
test
mov
in
lea
into
into
lods
orb
nop
inc
mov
xor
incl
lods
int3
into
test
cmpsb
xchg
jmp
cltd
jmp
jnp
jmp
sbb
sub
pop
fsubr
dec
push
sbbb
pop
lret
xchg
mov
ds
dec
adc
test
mov
sub
subl
cld
cmpsl
cwtl
cld
mov
imul
jl
mov
sbb
sub
push
ffree
and
push
cmp
jecxz
mov
lea
sarb
or
xor
or
mov
dec
mov
ss
dec
cmp
pusha
fimuls
xchg
cld
add
repz
fs
outsb
pop
imul
cmp
mov
xchg
pop
adc
shrb
inc
pop
sub
push
stc
test
cmp
xchg
cmpl
mov
inc
in
inc
jmp
rcl
iret
xchg
add
mov
mov
outsl
sbb
dec
in
gs
push
xchg
mov
mov
out
sahf
adcl
in
adcl
dec
out
xchg
popa
cmpsl
rol
shl
out
js
test
push
mov
enter
lret
arpl
mov
lret
mov
xchg
test
lahf
outsl
pop
and
int
dec
addl
sti
test
xor
inc
iret
inc
leave
scas
mov
mov
fmulp
mov
out
and
lods
call
dec
sub
outsb
icebp
mov
mov
push
and
pop
inc
popa
lock
popa
push
stos
xor
and
in
insb
sub
enter
std
jg
lret
cmpsl
lea
dec
rcrb
rcr
adc
pop
scas
jno
scas
xchg
addr16
or
insb
dec
pop
pop
xor
out
je
add
inc
scas
ja
adc
das
add
dec
ja
or
sub
mov
jo
and
add
pop
ret
pop
dec
mov
and
sub
mov
mov
mov
fldl
xchg
mov
popf
push
mov
add
or
push
xor
lods
dec
sbb
adcl
dec
pop
inc
mov
mov
clc
lcall
repnz
jle
xor
mov
xor
jb
dec
pop
mov
xchg
sub
lods
xchg
mov
ss
cwtl
jns
enter
lock
cmp
aam
repz
push
lret
lahf
rol
jno
bound
dec
adc
shrl
lahf
int
call
push
popa
or
shrb
test
adc
mov
cli
adc
cmc
lret
push
leave
push
test
mov
test
cmp
shll
testb
outsb
inc
pop
inc
sbb
pop
mov
fstl
or
add
cmp
pop
iret
imulb
mov
jmp
or
out
js
jae
pop
cmpsb
inc
call
add
push
cmp
mov
fisubs
mov
aam
movsb
inc
xor
ljmp
adc
and
mov
cwtl
adc
mov
xor
and
inc
movsl
jns
jg
xor
movsb
in
jecxz
mov
cmc
int
adc
xor
fisubs
inc
xor
xor
fxam
mov
gs
push
pop
xchg
push
inc
push
cmc
pushf
nop
mov
push
xchg
mov
fistl
inc
je
xchg
jmp
add
scas
ffree
bound
hlt
leave
jp
rcr
lds
push
std
jns
lret
xchg
mov
mov
xor
js
aaa
nop
xchg
arpl
iret
mov
mov
inc
xor
popf
cmc
ffreep
adc
jns
pop
dec
in
pop
ja
jecxz
push
dec
aas
jmp
mov
mov
jmp
insb
loop
andl
jb
aas
push
and
sub
adc
in
and
pop
lcall
inc
sub
int3
push
call
ret
dec
add
cmp
jno
jbe
inc
imul
addr16
dec
xor
cmp
rcl
lret
inc
push
fsubrp
sub
xlat
cmp
cwtl
inc
dec
test
ss
mov
or
xchg
pop
push
sti
mov
add
fisttpll
faddl
mov
push
cmp
mov
shrb
out
les
dec
dec
fistps
repnz
dec
mov
sub
inc
mov
shrb
sbb
cwtl
xor
push
cmp
out
mov
mov
cmc
jnp
adc
aaa
pop
mov
xor
je
add
adc
negb
stos
imul
loope
negb
jne
dec
aam
xchg
aas
push
jecxz
sbb
jle
or
jecxz
ds
aas
sub
add
dec
mov
sub
or
cmpsl
inc
lret
sbb
add
jnp
rcrl
dec
aad
repnz
stc
and
sub
jle
inc
sub
and
mov
daa
hlt
dec
mov
pusha
xchg
nop
repz
shrl
dec
push
sbb
cmc
and
aad
nop
fwait
add
or
rorb
lret
lahf
hlt
dec
fcoms
sub
out
bswap
test
lods
movq
sbb
sbb
cld
lcall
or
test
jns
or
shlb
hlt
push
push
jb
xchg
and
fidivl
insb
movsb
leave
pop
mov
aad
fwait
mov
or
ljmp
push
neg
push
mov
cltd
mov
xor
inc
test
or
cmp
inc
adc
mov
jmp
or
rorl
mov
cld
xchg
or
ljmp
inc
cltd
add
popf
pop
pop
adcb
jmp
popl
and
pop
das
gs
jp
mov
mov
fdecstp
stos
lock
jne
repz
imul
rolb
dec
sbb
ja
or
cmp
lahf
push
ljmp
fisubrs
test
ja
popa
dec
push
repz
dec
dec
mov
ljmp
push
cmpsl
pusha
daa
shlb
push
cmpsb
int
ror
jp
push
and
test
mov
pop
and
mov
pop
mov
jle
inc
dec
mov
outsl
xchg
iret
inc
imul
imul
mov
out
mov
sbbw
mov
fisubl
fdivs
xor
sub
out
cmp
ret
push
push
xor
and
or
xor
dec
ret
sub
loopne
lds
mov
sub
mov
fnstsw
loope
jo
fidivrl
or
and
sahf
adc
andb
lcall
mov
push
jp
adc
lret
inc
lret
cmp
mov
push
push
mov
add
mull
xlat
push
pusha
push
xchg
adc
jae
es
jns
out
add
into
mov
jo
adc
negb
cs
loopne
bswap
push
inc
in
jb
fisubrl
xor
pop
xchg
mov
pusha
push
imul
pusha
cld
cmpsb
fdivl
addr16
jl
and
ret
std
adc
test
inc
mov
adc
mov
lock
adc
mov
js
stos
cwtl
sbb
int3
ljmp
xchg
leave
and
or
cmp
pop
repnz
xchg
sbb
aam
ljmp
xor
cmp
and
pop
movsb
xchg
scas
sub
add
loope
jbe
sti
aaa
mov
cmp
xlat
jg
sub
pop
in
add
push
mov
push
shrb
mov
mov
mov
pop
mov
lahf
popf
dec
push
mov
out
push
xchg
dec
out
ffree
lods
push
stos
loope
jo
scas
or
aad
sub
jbe
or
dec
data16
xchg
addl
sub
or
mov
fcmovu
popf
inc
shlb
movsl
pushf
mov
dec
rorl
addb
sbb
fimull
and
sub
movsb
mov
add
rclb
mov
adc
pop
mov
or
pop
imul
inc
pop
cli
push
test
push
ret
insl
push
jmp
xor
and
repnz
clc
fdiv
cs
inc
jbe
cmpsb
roll
lods
cmp
ret
rcll
xor
or
add
stos
outsb
out
dec
inc
jle
pop
mov
cmp
mov
pop
nop
ret
in
xchg
or
repnz
pop
cmp
mov
lret
mov
leave
push
push
mov
int
cmp
adc
cld
fnsetpm(287
loope
nop
mov
cmpsl
jae
fcoml
aaa
popf
sub
into
sub
bound
outsl
mov
mov
arpl
cmp
dec
push
and
jb
inc
inc
adc
xchg
mov
mov
cmp
mov
cmp
rorl
lret
jp
push
fiaddl
or
fisubs
cwtl
pushf
dec
clc
adc
scas
push
imul
rol
jnp
add
iret
push
ljmp
lret
lock
js
xchg
loope
mov
pushf
pushw
mov
rcrl
mov
dec
or
pop
dec
sbb
dec
out
sbb
xor
lret
xlat
dec
les
xchg
stc
mov
inc
ret
enter
jle
out
mov
push
nop
and
imul
scas
outsb
aad
cmp
mov
jae
pop
pop
lock
xor
repz
les
fs
iret
and
cmp
xor
mov
xor
mov
add
mov
lret
mulb
in
or
xchg
sub
imul
lock
pop
push
mov
shlb
inc
imul
ljmp
leave
dec
sbb
jmp
addl
sahf
outsb
shll
push
fisttpl
mov
jecxz
sub
dec
testb
les
sub
jbe
sti
add
xor
insl
and
jge
js
xchg
loope
inc
jo
xchg
sbb
dec
xlat
test
or
cmpl
andb
sub
dec
push
std
dec
sub
xchg
pop
mov
xchg
dec
mulb
insb
fldl
pop
mov
adc
daa
push
es
mov
inc
dec
mov
pop
aam
stos
repz
testb
stos
neg
andb
jmp
dec
mov
dec
jp
or
pop
jmp
jbe
xchg
push
jle
jp
mov
cmpsb
xor
into
inc
xchg
push
and
sti
sub
popa
sbb
cmp
jg
push
mov
xor
push
addr16
jne
mov
inc
sbb
add
pop
shr
jmp
sti
mov
das
xchg
xchg
cmp
faddl
jge
pop
decl
rcl
adc
inc
dec
mov
sbb
adcb
push
jge
jae
push
gs
in
or
pushf
cmp
xchg
xor
mov
xlat
in
test
and
xor
test
mov
mov
xchg
jns
repnz
mov
shrl
pusha
fistl
insb
add
push
cli
fisubrs
mov
jg
dec
mov
mov
test
push
push
popa
jns
into
push
push
push
in
call
xor
pop
fs
add
mov
xchg
cli
out
or
xchg
addb
jae
push
or
outsb
inc
ret
int
inc
mov
test
pop
mov
fdivrp
test
fsts
insl
aam
lret
push
inc
loope
add
insb
push
cltd
cwtl
and
pop
add
and
pusha
rcrb
popa
jns
jmp
cmpsb
dec
fwait
jge
stos
xor
jne
data16
push
lret
dec
das
test
fildl
insb
pop
mov
pop
jl
popa
inc
popf
scas
fsubs
andb
pop
push
lret
mov
cmp
fsqrt
push
mov
cmp
xchg
stos
fwait
sub
lgs
enter
incb
sub
jb
rcr
lahf
cmpsl
sub
cmp
xlat
jns
fs
push
cmpsl
inc
enter
fdivs
jecxz
push
imul
and
sarb
sub
outsb
insl
or
lock
inc
rcrl
aas
add
sbb
cmpsb
mov
xchg
jb
call
sub
into
xor
incl
sub
ja
les
pusha
inc
pop
dec
mov
rcll
lods
mov
stos
gs
and
jae
push
addr16
lret
or
sub
mov
mov
mov
mov
sub
mov
dec
scas
push
mov
pop
xor
mov
cmp
cmp
push
xor
mov
push
jne
es
jo
cld
dec
aad
mov
cmp
adcb
fistpll
std
imul
icebp
ss
mov
push
imul
orl
gs
mov
mov
popf
enter
daa
addb
ja
loop
or
roll
icebp
pop
dec
dec
add
push
lock
not
and
adc
jle
mov
into
aaa
cmc
xchg
sub
xor
jg
jb
cmp
sarb
cmp
xor
imull
jnp
call
roll
pusha
xchg
cli
pop
out
xor
rcrl
cli
or
jecxz
rcrl
ljmp
iret
aaa
repz
pushf
insl
fists
ror
shlb
pop
push
and
ja
rcr
jp
pop
hlt
movsb
iret
cld
xchg
fisttpl
arpl
sbb
test
loopne
lods
xor
enter
sub
sbb
mov
mov
jge
in
cmp
ret
repnz
loopne
inc
and
cmp
push
fnstcw
arpl
in
and
xlat
ret
je
jns
mov
and
mov
jp
mov
loopne
cli
insl
lds
or
adc
scas
addr16
ret
cmpsl
fucomp
addl
mov
int
ss
sbb
imul
adc
mull
mov
sbb
xlat
mov
fnstsw
push
push
cmc
push
jo
add
icebp
jns
shr
je
lea
stos
or
xorb
mov
enter
push
icebp
cmp
aas
sub
sbb
mov
cmc
fidivs
mov
in
ret
inc
or
lcall
out
gs
adc
push
inc
adcb
les
push
sahf
mov
jne
scas
leave
test
bnd
or
dec
call
mov
pushf
nop
mov
dec
jmp
or
pop
xchg
xor
xchg
lods
subl
cmp
sub
repz
popa
es
cwtl
jae
into
imul
mov
push
dec
push
test
cltd
fwait
push
inc
xchg
jns
mov
nop
push
jno
dec
scas
out
loopne
push
add
in
pop
test
je
mov
adcl
andb
lahf
fidivrl
push
sahf
dec
addr16
cld
inc
clc
cld
daa
loope
adcb
xchg
sub
xchg
cltd
jmp
fdivp
pop
and
and
xor
and
filds
fldl
fwait
xchg
xorb
lret
mov
movl
negb
mov
or
mov
push
xor
imul
add
out
lock
mov
and
xlat
inc
push
arpl
jmp
mov
ret
or
in
xor
aam
jae
cmp
sbb
in
xchg
push
ljmp
inc
insb
jbe
shll
cmp
cmp
mov
pop
inc
and
sub
lret
outsl
inc
lahf
aam
cli
repz
clc
xchg
in
psubusb
enter
in
adc
cmpsw
out
dec
mov
enter
sbb
xorl
icebp
pop
daa
and
sti
push
mov
icebp
je
sahf
add
incb
sub
lea
mov
push
xchg
int
fstpl
aad
xor
dec
dec
xor
cwtl
add
inc
and
sub
mov
add
or
cmp
loope
test
xchg
jge
gs
mov
notb
pop
inc
mov
bound
int3
rorl
adc
mov
or
pop
fnsave
call
incb
loop
scas
daa
push
mov
arpl
push
call
xor
xor
and
mov
cmp
lcall
pop
mov
mov
xor
sarb
lcall
or
das
inc
or
call
sahf
mov
dec
ficoms
stos
mov
cmp
stos
rcrb
and
into
add
push
xchg
sbb
xlat
push
fdivp
mov
bnd
mov
roll
sbb
xor
lds
jle
test
mov
ss
push
movsb
sbb
lret
sbb
xor
xchg
loopne
jnp
je
jmp
jp
mov
js
dec
inc
push
mov
pop
mov
and
pop
pop
mov
mull
or
punpckhdq
sbb
fldl
test
movsl
shrl
repnz
fcmovnb
push
sbb
mov
sahf
inc
mov
pop
or
mov
jnp
xchg
mov
cwtl
loope
pop
adc
xlat
imul
leave
addb
inc
push
xor
push
gs
mov
mov
dec
xlat
repnz
fwait
sub
hlt
jg
push
sub
mov
push
push
movb
add
sarl
adc
test
inc
add
jnp
sti
push
and
daa
inc
jge
aaa
jo
lret
dec
subb
cmc
pop
fadds
push
push
fisttpll
xchg
pushf
ja
fst
xchg
daa
mov
and
in
mov
jno
jp
pop
fwait
mov
in
mov
push
lods
lcall
mov
jmp
sbb
iret
lret
add
out
adc
inc
repnz
inc
clc
out
aas
inc
mov
jae
scas
int
mov
lret
add
xchg
adc
xor
aad
xchg
xchg
jmp
mov
sub
flds
ss
aaa
jae
fs
fldl
adc
lods
pop
jb
iret
cld
sbb
inc
jl
cs
mov
sub
mov
out
and
lods
xor
fwait
addl
testb
bound
js
push
mov
sub
insl
jo
scas
mov
out
push
fdiv
pop
movntq
scas
rsqrtps
jo
cmp
sbbb
leave
fldl
push
sahf
dec
lods
insl
xchg
dec
sahf
out
es
jne
pop
jmp
dec
xor
mov
sub
jp
mov
outsl
ret
sub
pop
aam
out
int3
cmp
sbb
pop
shrl
jno
lods
add
out
mov
jne
rcr
dec
mov
cltd
sahf
mov
scas
dec
jo
dec
jnp
mov
imul
cltd
adc
fstl
int
mov
xor
mov
add
adc
mov
xchg
fdivrs
mov
shll
adc
aaa
xchg
xchg
movzbl
in
pop
dec
sbb
dec
mov
push
jno
sub
movsl
insb
mov
mov
lods
in
fiaddl
int3
push
cmp
push
sarb
fmuls
lds
gs
addr16
das
enter
jo
leave
pop
xchg
xchg
inc
and
sub
jmp
outsl
mov
mov
cmp
loop
lds
aad
inc
enter
out
outsl
mov
test
pop
cmp
pop
or
jle
ret
mov
and
clc
data16
mov
pop
cli
cs
sub
push
push
jp
push
and
outsb
jns
xchg
inc
aad
pop
lcall
fdivp
or
fucom
outsb
sbbb
imul
adc
pop
leave
popa
fcoms
enter
shll
mov
imul
mov
fsubl
popf
inc
outsl
dec
js
scas
xor
outsb
out
or
cwtl
cmp
jmp
add
rcll
fldcw
add
mov
call
dec
jle
mov
mov
test
adc
fisttps
sahf
mov
std
stos
out
cltd
ffreep
sbb
leave
hlt
addb
pushf
adc
repz
call
mov
lock
cwtl
inc
mov
xor
aam
lahf
cwtl
movsb
mov
int3
pop
adc
dec
jle
movaps
dec
fstp
loope
imul
in
xchg
push
add
cs
lods
xor
sbb
mov
insl
pop
fmulp
cmp
push
loope
sub
add
fstp
pop
sbb
fnstenv
aad
cmp
sbb
add
hlt
sub
cmp
fidivrs
mov
popa
int3
lods
push
add
sbb
jae
dec
mov
xchg
cmpsb
gs
in
in
inc
push
ss
fnstenv
cld
addr16
push
test
dec
rcll
adc
stos
sbb
sahf
pushf
jl
mov
jecxz
out
into
add
pop
mov
pop
mov
cmp
lcall
out
sbb
inc
dec
mov
dec
ret
std
fisttps
scas
add
xor
jno
mov
idivl
out
mov
xor
mov
lret
out
das
mov
pop
imul
dec
pop
inc
into
out
mov
pop
fsubr
into
aaa
inc
dec
fwait
cmp
aas
and
jbe
inc
rolb
xchg
js
or
add
cmp
xchg
xor
sete
stc
sbb
addr16
sub
mov
xor
pop
pusha
sub
out
loope
sbb
stos
in
inc
inc
jg
into
mov
push
movsb
mov
mov
mov
cmpb
mov
add
jecxz
mov
sub
push
jne
adc
rclb
jg
mov
push
lods
int3
fadd
push
push
or
pop
in
sub
pop
pop
mov
mov
arpl
cmp
lcall
inc
fsubs
mov
loopne
pop
mov
xor
xchg
adc
pop
in
hlt
cmp
ret
out
mov
dec
in
mov
lcall
lea
and
cld
test
jl
aam
cs
pop
or
stc
enter
mov
movsl
push
lock
xor
stc
scas
jns
xorb
adc
sbb
in
outsb
sbb
inc
loope
cmc
xchg
jns
add
jb
inc
stos
xor
lds
jbe
inc
push
lods
in
xchg
xor
jecxz
jmp
pop
imul
or
ret
sbb
xor
or
cmc
mov
lock
lret
imul
pop
push
sbb
cmp
les
cli
mov
and
adc
push
xor
mov
nop
outsl
cmp
add
pop
xchg
xor
and
inc
push
push
mov
in
mov
sub
push
loope
push
mov
je
ljmp
mov
cmp
int
cmp
add
ret
pop
ficomps
out
cmp
lea
aas
movsl
push
mov
xchg
push
adc
addl
push
shlb
out
push
xchg
fsts
fcoml
jmp
adc
sti
mov
push
pusha
jnp
andl
in
into
inc
or
cld
adc
or
sbb
and
mov
movsb
in
jecxz
push
test
and
sub
pop
nop
or
ficoms
add
sub
outsl
out
or
in
jno
xorl
out
jnp
bound
lret
push
mov
add
in
repnz
test
pushf
push
xor
ret
lock
jmp
mov
bound
std
shrb
jb
xor
in
and
outsl
popf
mov
lods
mov
mov
int3
test
jb
xor
lret
in
mov
std
add
aam
lods
sub
jg
jno
pop
pop
sub
ficomps
in
pop
es
push
pushf
sbb
cmp
xchg
xchg
es
sahf
adc
pop
ror
push
test
imulb
das
insl
push
test
inc
adc
ja
pusha
ret
dec
mov
cmp
ss
cld
mov
push
inc
ret
or
mov
mov
imul
out
out
pop
add
jne
cmpsb
rorl
test
jae
dec
pop
fnstcw
imul
std
or
std
mov
test
je
push
lds
pop
add
sbb
dec
pop
aad
lret
icebp
xchg
rcr
mov
and
ss
int
inc
push
add
xchg
scas
mov
or
cmp
loop
pop
push
mov
add
test
stc
mov
out
mov
out
inc
jge
ss
icebp
mov
insl
insb
adc
sbb
jmp
daa
jnp
in
rcrb
lret
mov
xlat
movsl
dec
in
push
add
shr
fs
shr
icebp
add
mov
dec
push
popl
inc
mov
sbb
es
sbb
gs
lahf
mov
fwait
sbb
push
in
rcrb
inc
mov
movsl
loope
jecxz
push
lahf
pop
mov
xor
leave
jp
cmpsb
jg
adc
mov
stos
ret
orb
jb
push
add
test
sub
lds
fwait
adc
mov
dec
call
pop
add
icebp
push
test
stos
mov
add
mov
mov
jno
fnstcw
ficoms
pusha
xor
or
jg
popl
push
sub
add
xorl
aas
adc
pushf
into
jl
mov
out
jnp
push
pusha
into
mov
lahf
mov
sub
pop
cld
rcll
xchg
push
out
push
out
inc
fwait
shll
xchg
or
lret
or
pminub
aas
adc
or
bound
cli
mov
pop
scas
inc
je
rcrb
pop
inc
xchg
int3
dec
stos
mov
sbb
inc
aad
add
pop
ret
call
dec
xchg
jae
nop
stc
outsb
dec
divb
lds
sbb
jl
int
scas
jnp
jbe
mov
xchg
test
mov
hlt
or
mov
sub
test
rcr
pop
daa
dec
sbb
iret
enter
add
sub
clc
int3
jle
mov
add
xchg
repnz
mov
bound
mov
or
mov
das
jno
mov
mov
dec
add
addl
stos
jne
cli
notb
es
dec
cmp
gs
pop
jmp
sub
push
test
test
ret
fcmovne
sub
or
movb
loopne
repnz
or
out
enter
fistpll
inc
hlt
lds
xchg
pop
dec
je
popf
mov
mov
jmp
sub
push
xchg
dec
xor
dec
jbe
lret
ds
dec
ja
cmpsb
xor
addb
jmp
dec
scas
xorb
pop
sbb
cmpsb
sub
inc
xlat
lea
loopne
aas
dec
std
jp
add
mov
cmp
add
mov
dec
xor
dec
imul
pop
fisttpll
sbb
jnp
jb
add
ja
daa
pop
dec
lock
xor
lods
jns
jbe
push
mov
jecxz
movsl
mov
je
movsl
in
xor
jmp
in
repnz
lcall
and
cmc
and
scas
test
xor
aaa
push
mov
adc
add
pop
ret
add
cmp
popa
rcr
mov
xchg
ret
fsubrs
and
lahf
pop
inc
ficomps
fildl
mov
jb
jge
rclb
leave
add
lahf
aaa
mov
jge
cmp
ret
lahf
and
jge
adc
mov
or
outsb
xor
sub
cs
mov
sub
xor
and
jbe
dec
stc
lret
mov
lock
aaa
push
aas
jnp
cmp
sub
insb
push
xchg
dec
data16
shl
leave
add
les
xchg
mov
xor
lahf
sbb
fnstcw
jmp
pop
repz
cwtl
hlt
ljmp
xor
and
and
adc
mov
or
cmp
scas
test
or
mov
bound
enter
xor
loope
addr16
lea
fmul
sub
rolb
leave
dec
cwtl
gs
testl
jne
push
add
daa
xchg
lods
sahf
add
cmp
mov
mov
hlt
movsb
sub
inc
bound
add
sti
and
jg
sbb
aas
popa
cmp
movsb
jbe
jle
dec
mov
mov
inc
cmc
sbb
pop
cmpsl
bound
rcrl
xchg
adc
push
adc
add
jbe
test
aas
or
ret
dec
orb
mov
push
sub
inc
inc
lret
inc
or
rcrl
and
mov
jb
and
lret
test
out
filds
sbb
dec
push
decb
cmp
inc
fprem1
push
jl
pop
push
insl
xchg
bound
adc
xchg
clc
stos
je
bound
mov
mov
insb
sbb
mov
xor
rcrb
dec
add
sbb
ret
mov
sub
mov
mov
test
decb
cmc
subb
adc
daa
test
mov
mov
jo
movsl
mov
add
mov
int
xchg
and
and
aaa
popa
imul
lock
mov
pop
lods
pop
lods
mov
and
dec
xorb
enter
dec
enter
cmpsl
dec
push
clc
iret
fists
cmp
test
into
out
iret
push
jbe
sbb
pop
mov
loop
loopne
jnp
mov
addr16
mov
fldt
loopne
xchg
icebp
sarl
jae
xor
add
pop
mov
shl
lcall
cmp
test
fistpll
pop
mov
call
lcall
enter
imulb
push
dec
nop
push
pop
mov
cs
in
cwtl
mov
test
in
add
fimull
nop
pop
xor
inc
mov
cmpsb
lea
adc
int3
cmp
enter
dec
out
cmp
dec
outsl
lods
or
fsts
das
cs
cli
in
mov
cltd
push
jle
jge
movl
insb
pop
mov
add
roll
aas
xlat
ljmp
jo
stos
fs
idivl
mov
xchg
clc
mov
ror
xor
cmpsl
fwait
scas
lret
jmp
mov
mov
mov
xor
adc
fcomps
inc
mov
jo
repnz
xor
mov
rclb
dec
inc
into
cmc
mov
test
jo
mov
mov
stos
fidivl
jmp
fmuls
xor
imul
stc
testl
div
sbb
hlt
sub
out
into
lret
pusha
aaa
xchg
stc
lock
add
dec
fistpl
loopne
aas
inc
inc
daa
mov
cmp
xor
xor
mov
lods
xchg
pop
aad
cmp
sub
cmp
sub
repnz
into
sub
mov
mov
and
jge
cpuid
lcall
ja
stos
cmp
movsl
popa
in
mov
frstor
cmpsb
sarb
inc
xchg
sbb
jmp
jg
test
mov
cmp
sarb
je
pushf
mov
int3
rcrl
mov
dec
mov
orl
add
pop
test
add
arpl
xchg
xchg
fwait
lock
out
les
jl
cmp
inc
inc
ret
loop
jbe
and
stc
mov
jb
push
ljmp
mov
mov
out
mov
shll
mov
inc
sbb
pop
sarb
rol
inc
movsl
dec
and
imul
pushf
add
xlat
jmp
mov
aas
call
adc
push
das
adc
dec
pop
pop
ds
out
jp
xchg
in
mov
push
ljmp
xchg
fadds
mov
ljmp
jnp
fmuls
cmpsl
mov
inc
add
notl
sub
lods
xor
lock
stc
loop
or
and
aad
aad
test
mov
mov
ljmp
enter
insl
movb
cmpsl
and
int3
xchg
enter
inc
or
hlt
stc
hlt
lret
adc
dec
call
adcl
mov
gs
incl
in
cltd
dec
mov
fxch
and
repnz
nop
andb
mov
xchg
outsb
cmp
dec
lcall
in
mov
jae
div
cltd
or
inc
jp
scas
or
mov
bound
and
mov
subl
or
mov
loope
js
cmp
insb
xchg
inc
movsl
out
jg
mov
sub
and
in
pop
jno
ret
fisttpll
bound
das
xchg
call
mov
scas
cltd
jmp
mov
daa
push
jno
mov
insl
ret
ret
sbb
mov
repz
xchg
fs
sub
sbb
mov
mov
int
loop
xchg
jb
mov
xor
and
jb
ss
push
lds
push
lods
adc
mov
pavgb
fcoml
xor
sub
push
and
stc
xchg
push
test
or
dec
fucomp
or
icebp
test
imul
test
or
adc
push
inc
or
test
stos
cld
dec
mov
jl
incl
push
enter
stos
nop
sbb
xchg
cs
aas
xchg
mov
je
fdiv
mov
sub
fisttpll
out
inc
inc
dec
push
cwtl
adc
leave
rcrb
mov
xchg
ljmp
dec
xchg
xor
mov
mov
daa
outsl
cmc
test
test
daa
mov
add
and
xor
ret
xor
popa
rep
iret
xchg
push
or
in
jo
aaa
add
jle
cmc
test
mov
sahf
add
test
insl
xor
sub
dec
or
loop
or
add
mov
mov
add
push
test
jp
in
outsl
stos
jge
cs
inc
xchg
out
aam
sub
ret
arpl
scas
push
inc
xchg
mov
dec
ret
cmpsl
test
mov
movsl
enter
xorl
dec
movb
call
popf
mov
lret
dec
lods
push
addl
push
roll
jne
shll
fsubrs
jnp
mov
lock
pushf
jnp
mov
pop
jbe
sahf
jge
cltd
js,pt
rorb
out
enter
fiadds
fs
jnp
es
call
and
mov
ss
fsubrl
mov
out
fs
popf
adc
aaa
or
jns
mov
or
cld
dec
mov
imul
ljmp
xlat
sub
in
cmp
ljmp
jo
jbe
psubsb
loopne
decb
mov
popf
mov
mov
xor
shl
mov
push
cmp
aaa
jo
dec
fdivrl
lock
daa
push
xchg
movsl
in
push
scas
pop
adc
xor
cvtdq2ps
jmp
out
jnp
mov
sbb
push
sahf
sub
jmp
loope
mov
das
mov
and
mov
daa
cld
mov
push
gs
mov
sahf
add
inc
or
popf
in
ds
jmp
jno
test
mov
lds
mov
out
xor
xchg
xchg
int3
mov
pusha
popf
dec
cwtl
icebp
sub
inc
ret
and
ffree
loop
xor
cmp
adc
fidivrl
or
xchg
sbb
mov
jo
popf
scas
or
jecxz
scas
insb
repnz
ss
popa
mov
xor
jle
jbe
mov
flds
jle
ljmp
into
loope
mov
into
outsl
jg
imul
movsl
mov
lcall
lods
xchg
mov
scas
xchg
loope
pop
pusha
bts
jl
call
sarb
jg
fmulp
imul
lret
mov
xor
dec
pop
popa
insb
lods
jmp
jge
or
and
xor
push
mov
add
inc
daa
and
es
add
lods
movsl
sarl
mov
and
sbb
xchg
fwait
in
mov
popa
lret
sub
xchg
mov
mov
loope
iret
or
mov
cmp
mov
sarl
dec
in
cld
mov
mov
xor
push
sub
daa
or
xchg
hlt
cmc
cmp
dec
std
bound
and
and
xchg
xor
mov
pop
clc
int3
in
add
mov
mov
jae
sbb
adc
sub
push
dec
pop
std
xchg
pop
push
add
roll
rcr
frstor
xor
mov
std
fnstenv
in
jle
jecxz
cmc
mov
or
dec
cli
push
adc
stc
cmp
mov
cs
scas
push
test
xchg
rclb
add
dec
movsl
cmc
xchg
scas
bound
pusha
xchg
sbb
cmp
ds
lds
sahf
jns
adc
adc
data16
or
out
inc
jecxz
mov
push
rclb
call
push
mov
cmp
adc
mov
lea
fstpt
mov
adc
adc
loop
and
in
lcall
mov
lahf
xor
inc
add
add
mov
mov
push
popf
fcmovb
arpl
in
sbb
rcrl
mov
add
ret
dec
add
xchg
push
call
pop
scas
mov
xor
imul
or
xor
jo
jb
addb
jne
jmp
xchg
adc
sbb
jae
fwait
and
mov
andb
or
clc
ret
sbb
mov
mov
inc
adc
pop
lods
dec
mov
movsb
jb
or
inc
ja
les
add
and
les
inc
mov
gs
lea
mov
out
inc
inc
jae
test
xor
out
xor
pop
mov
sub
mov
cmp
in
cmp
inc
mov
ret
push
bound
cmpsb
dec
lcall
mov
push
or
lret
sbb
movl
popf
repnz
sbb
sbb
mov
lock
pop
mov
xchg
aad
dec
push
rcll
push
mov
pop
test
inc
push
dec
cmp
xchg
cmc
jecxz
lea
push
and
fwait
push
rcrb
loopne
cmp
fisubl
mov
sub
dec
jb
ret
sub
lock
loop
mov
jp
arpl
pop
xchg
or
push
lcall
push
lds
data16
xor
aaa
or
lret
scas
in
lahf
sti
fisubrl
shr
fcompl
cmp
mov
sub
xlat
les
inc
nop
pop
mov
jl
pop
and
inc
fldcw
xchg
rorl
jae
mov
cltd
rorl
sub
je
lods
adc
mov
ficompl
imul
js
mov
jmp
xlat
jmp
test
and
cmpsb
fucomp
xchg
adc
mov
xor
cmp
jg
lret
adc
fldcw
mov
and
xor
push
nop
cmc
inc
mov
xchg
push
stc
mov
bound
fnsetpm(287
popa
ret
jnp
inc
sahf
icebp
push
not
adc
aad
add
xchg
movsl
inc
arpl
mov
jl
test
pusha
mov
std
loop
es
sbb
and
mov
or
jb
notb
jmp
imul
es
cwtl
inc
insl
cmpsl
dec
fiaddl
xor
loope
and
fldln2
jne
adc
roll
sbb
in
dec
std
sarb
sbb
push
sbb
or
sbb
add
xchg
add
movsb
mov
pushf
xor
int
push
and
or
xrelease
mov
jmp
xchg
lock
out
dec
jae
dec
fdivs
mov
stc
fcmovu
xor
jne
aaa
shll
aas
pminsw
insl
lea
xchg
inc
xchg
cli
jbe
js
sarb
dec
push
mov
mov
cmp
popf
dec
xchg
ret
push
stos
xchg
es
push
mov
inc
js
pop
xchg
pop
out
das
test
or
xor
mov
dec
push
mov
dec
jae
in
int3
stc
xchg
xlat
cmpsl
or
xchg
jle
je
lea
pushf
xchg
fcmovnb
mov
xor
and
roll
cmp
pop
xchg
mov
imul
push
inc
adc
scas
iret
or
mov
movsl
mov
imul
test
fimuls
mov
outsl
inc
repz
adc
pushf
dec
add
cld
cld
xchg
cld
or
cltd
xchg
lret
repz
sti
cmpsb
mov
sbb
test
in
fists
stos
stc
dec
gs
inc
inc
cs
mov
lea
sarb
cs
pop
cwtl
inc
cli
mov
popf
decb
mov
jne
dec
ss
mov
mov
jb
enter
jno
xchg
ret
fldt
loop
pop
mov
add
aad
ljmp
loope
ret
clc
cmpsb
push
pop
leave
sub
popf
aaa
gs
inc
jnp
dec
sub
xorb
imul
xchg
or
ljmp
mov
lret
cmovne
inc
jp
outsl
add
jne
insb
addr16
mov
clc
mov
outsl
shrb
popa
js
in
outsl
jns
inc
add
cmpb
in
sti
mov
outsl
add
sarl
cmp
pop
test
ret
mov
jge
jp
scas
jae
aam
push
sbb
imull
xlat
stc
sbb
mov
das
sbb
insl
mov
xor
pop
cld
mov
in
add
jle
jno
or
xor
test
test
popa
pop
arpl
push
push
pop
dec
mov
mov
push
inc
cmpsb
mov
jb
mov
cld
push
jo
testb
out
and
dec
test
mov
pop
aas
sbb
test
add
jle
dec
out
lock
sbb
int
lods
mov
jmp
pop
add
push
inc
les
or
mov
jno
and
adc
and
pop
dec
jb
fwait
and
scas
mov
add
aad
or
mov
out
test
push
inc
fdivrs
insl
jns
push
and
sub
cmpsl
mov
dec
push
repz
jae
mov
in
fsubrl
ss
imul
je
pusha
pop
mov
pop
jge
cmp
mov
pop
mov
cmpsl
xchg
sub
jl
arpl
testl
jp
xor
sub
add
ds
push
lods
sbb
sbb
and
cmpsb
test
dec
or
mov
xchg
xchg
push
aam
popa
insb
mov
lods
rclb
cmp
or
mov
lock
cmpsl
adc
cmp
or
cmc
pop
mov
push
lods
or
jle
dec
add
push
mov
popa
ret
and
sbb
jecxz
cmp
arpl
inc
mov
mov
xlat
jnp
xchg
cmp
js
and
sarb
jle
movb
push
adc
sub
xlat
xchg
outsl
das
and
inc
jbe
idivl
jge
ja
mov
lcall
mov
lret
les
lods
sarb
push
ds
mov
repnz
int
orl
add
cmp
xchg
enter
stc
in
xchg
xor
stos
pop
bound
mov
adcl
jb
aad
cmp
inc
adc
pop
fiadds
cli
gs
sbbl
or
xor
xor
and
scas
les
imul
cwtl
jmp
and
inc
push
lret
pop
data16
adc
inc
jo
insl
push
or
mov
mov
ret
inc
jnp
mov
dec
rcrl
cmp
jp
jne
frstor
adc
add
cld
dec
sbb
mov
xchg
xchg
pusha
enter
jns
jns
adc
jecxz
push
movsl
push
inc
xchg
insl
shl
pushf
mov
mov
push
sbb
insl
cmp
loope
or
pop
dec
mov
cmp
or
mov
inc
inc
xlat
and
movsb
xchg
jae
push
notb
movsl
sbb
cmp
mov
js
mov
mov
xchg
xchg
rcrb
std
dec
out
ljmp
mov
ds
mov
and
mov
mov
xchg
sub
xor
and
insb
sub
xchg
lret
adc
sti
jne
add
mov
enter
mov
xorl
shll
je
adc
arpl
fdivp
dec
loopne
xor
psubw
ja
push
cmc
adc
sbb
pop
enter
or
fstl
or
fidivrs
sbb
pop
scas
fdivs
popf
mov
sbb
lea
or
dec
xor
cmpsb
mov
push
inc
or
or
outsl
jmp
jnp
fdivrl
retw
add
call
imul
jmp
aad
out
pop
cmc
cmpsb
dec
pusha
mov
add
bound
lahf
jbe
xchg
sti
std
pop
jnp
movsb
bound
and
dec
shlb
out
iret
sarb
inc
jnp
lods
insl
mov
cmc
xchg
push
cmpsb
mov
je
nop
cmpsl
inc
jno
das
push
shlb
mov
cmp
cmp
add
into
sti
xchg
pop
loope
add
repnz
push
in
dec
mov
lods
cmc
addr16
pop
cmp
enter
jbe
mov
jg
sarl
aas
popl
xor
and
mov
dec
cli
arpl
nopl
cld
ja
cltd
push
pop
xor
or
mov
push
dec
xchg
mov
xor
jge
mov
push
pop
and
cmp
stc
mov
rcll
aaa
jne
inc
mov
lcall
test
adc
jl
inc
int3
lds
push
mov
sub
test
xchg
and
mov
xchg
jnp
iret
push
gs
lcall
xor
cmp
out
les
inc
pop
inc
add
sbb
mov
cmp
pushf
test
pop
mov
and
mov
push
loope
lea
cmc
insl
loope
mov
cmc
pop
push
in
sub
dec
iret
sub
aad
xlat
sub
testb
sub
popf
and
xchg
adc
cltd
xchg
dec
push
xor
mov
mov
push
sub
test
sub
ljmp
cmpl
cmp
push
sbb
mov
xchg
lods
test
inc
mov
pop
pop
xor
aad
jo
push
stos
pusha
enter
mov
push
ja
fists
out
mov
clc
inc
xchg
loope
add
jle
scas
std
lds
or
rol
sbb
lahf
ret
test
cmp
shlb
cmp
test
xchg
stc
xor
aaa
ljmp
call
adc
pusha
inc
orl
addl
rcrl
gs
popf
in
pop
adc
stos
mov
sub
pop
test
xchg
jne
pusha
in
incb
and
js
add
jno
rcrb
mov
jge
lret
out
icebp
fidivs
jg
sub
add
xchg
pop
xor
xor
pop
mov
movsl
mov
test
je
dec
add
rclb
add
jae
mov
add
sarl
ficompl
jbe
pop
aaa
push
in
mov
sub
mov
call
pusha
roll
and
rcrl
cmp
sbb
bound
std
sub
jnp
xor
pop
xorb
std
pop
push
adc
lret
push
outsl
scas
sbb
mov
hlt
lahf
sub
adc
cmp
imul
push
dec
fs
dec
sti
ss
sbb
or
sahf
inc
sub
imul
jno
adc
aad
fildll
push
punpckldq
daa
lea
jbe
sarb
adc
mov
aad
popa
mov
fsubrs
ja
out
cmp
xor
ret
mov
das
and
sub
mov
pop
enter
fdivr
loope
ret
mov
and
push
mov
cltd
rclb
je
cmpl
ss
or
imul
xor
lahf
enter
add
mov
pushaw
in
ret
test
sub
aaa
add
shrl
add
mov
or
cmc
xchg
jge
xchg
insb
test
outsl
lahf
stos
mov
add
fcoms
mov
pop
xor
or
push
aaa
add
jecxz
add
pop
jmp
test
mov
mov
fwait
or
in
ja
xor
jne
inc
add
adc
xor
jns
push
mov
sub
lds
test
stos
out
les
cmpsl
fsubs
scas
popf
xor
xor
push
outsb
and
mov
movsl
test
bound
es
push
jb
test
fwait
xchg
dec
sub
iret
fadd
fsubrl
jnp
pop
jae
jae
mov
pop
cmpl
sbb
std
enter
xor
cmp
stos
hlt
dec
xor
scas
inc
fnstsw
in
inc
andnps
push
and
push
add
push
loop
ficompl
add
dec
fs
ja
cli
inc
sbb
out
ret
xchg
lds
add
ds
addr16
cmpsl
cwtl
imul
rclb
inc
out
cmpl
out
xor
out
and
psrad
mov
mov
inc
adc
shlb
repnz
or
lds
xchg
cmp
xchg
shrb
stos
inc
mov
ret
dec
das
jmp
sbb
jmp
mov
fs
adc
cmpsb
inc
daa
or
adc
xor
mov
xchg
mov
pop
xor
push
test
cmpsb
lret
imull
fsts
mov
mov
add
jle
enter
or
add
es
fstpt
add
jne
jne
dec
cli
mov
pop
cmp
stos
mov
bound
scas
jne
sub
enter
xchg
out
mov
or
and
pop
cmc
mov
xchg
mov
fwait
sbb
mov
xchg
push
sub
fsubrs
xchg
pop
stc
cmpsl
dec
adc
cs
cmp
inc
shll
push
sub
filds
adc
mov
xchg
lea
xlat
sub
push
mov
sti
mov
mov
xor
pop
repz
jnp
pmulhuw
inc
mov
mov
movsl
inc
mov
mov
sub
icebp
pop
push
cli
mov
dec
mov
pop
sub
mov
jb
cmc
fiaddl
outsb
fsts
xor
nop
mov
sub
inc
ja,pt
mov
outsb
jle
fcompl
mov
daa
mov
lcall
test
mov
sti
inc
jmp
fiaddl
inc
push
push
dec
mov
clc
repnz
mov
cmpsb
dec
push
or
mov
push
or
add
jmp
pop
mov
subl
ljmp
lahf
ss
pushf
pop
arpl
xlat
popf
fistpl
dec
adc
sub
daa
das
out
mov
sbb
mov
int3
jg
push
pop
ja
into
dec
lea
dec
test
fisubl
loopne
loop
test
inc
gs
jmp
pop
push
outsb
popa
sbb
cltd
testl
push
es
rcl
or
sbb
xor
stos
hlt
std
call
adc
xor
jmp
sarl
leave
xchg
call
insl
xor
test
push
cmp
loop
fwait
jl
push
inc
jle
lea
incl
lock
cwtl
repz
in
mov
sub
inc
cs
sar
dec
pop
sub
mov
push
ret
cmc
cmpb
std
aad
jl
dec
stc
xchg
or
fmul
mov
xchg
jl
and
jbe
push
cmpsb
jo
lret
pop
lock
data16
pop
jecxz
rolb
or
dec
pusha
sbb
loope
or
xchg
out
rol
push
cltd
xchg
add
xchg
rol
sahf
sbbb
arpl
in
hlt
insb
cmp
inc
imull
test
movntq
push
js
sub
cmp
les
mov
orb
rorl
push
dec
ret
mov
lea
mov
out
faddl
cld
xor
push
int3
fmull
dec
cwtl
jns
jnp
movsl
sahf
sbb
cmp
lret
mov
inc
fs
dec
sbb
xchg
or
ds
iret
scas
xor
stos
add
cmp
mov
bswap
dec
subl
push
xchg
inc
gs
sbb
and
test
shrl
sahf
xchg
out
sub
addr16
pop
xor
test
jno
in
dec
xchg
adc
xor
adc
rcrl
int
xchg
sub
pop
lods
dec
loopne
mov
push
scas
ds
pop
xor
pop
sub
adcb
outsb
or
into
fldt
jg
adc
push
js
in
add
nop
fldt
jno
cmp
pop
lret
data16
insl
pop
test
pop
dec
fisubl
and
and
fdivrp
pushf
loopne
lds
dec
ficompl
mov
out
movsb
lahf
pusha
dec
loopne
testl
lret
jno
outsb
cltd
dec
push
loop
push
add
in
mov
lock
test
and
inc
icebp
fs
hlt
popa
inc
ret
lea
popa
push
nop
in
cmp
vprotq
loope
ja
mov
mov
sbb
or
xor
mov
or
or
mov
nop
sub
xor
sbb
pop
int
add
cmp
or
lods
ss
xchg
jmp
sti
lds
jb
bound
stos
add
cwtl
pop
jnp
loope
mov
xchg
xchg
inc
and
gs
dec
into
mov
repz
jo
xor
in
ljmp
add
mov
xchg
in
pop
pop
sbb
push
nop
inc
loop
imul
scas
add
out
jp
aaa
adc
lea
fwait
jg
dec
jae
cmp
mov
dec
fists
push
inc
pop
xor
mov
xchg
aaa
js
daa
xchg
aas
xor
or
shlb
test
sbb
ret
insl
sub
or
pop
push
fwait
push
mov
jnp
mov
lock
shrl
shr
or
jbe
xlat
mov
lcall
mov
xlat
arpl
jl
idiv
in
xchg
fwait
psubsw
pop
popf
shl
inc
or
xchg
and
call
xchg
mov
dec
cwtl
mov
stc
imul
pop
movsl
aad
into
sub
jge
in
mov
adc
jecxz
pop
mov
jo
icebp
dec
cltd
lock
loop
sub
mov
stc
nopl
repz
test
pushf
push
enter
pop
adc
mov
loopne
arpl
xchg
jne
rorb
cltd
mov
push
scas
xor
jge
and
loope
and
fsubs
or
push
pop
mov
cmp
or
outsb
outsb
or
icebp
add
add
sub
inc
movsl
andl
mov
movl
add
loope
fmuls
bound
mov
jnp
gs
addr16
dec
arpl
mov
test
lea
jne
test
mov
and
andb
cmp
push
hlt
mov
push
push
jno
js
or
cmpb
or
ss
add
pop
mov
cltd
mov
cwtl
aam
lods
adc
arpl
mov
fcompl
loopne
outsl
pusha
es
mov
adc
lods
xchg
fimuls
cs
test
mov
add
jbe
sbb
push
shlb
arpl
sti
and
sahf
ret
dec
fsubs
xor
xchg
pop
fiadds
es
repz
sub
popl
arpl
mov
pop
rorl
jg
cli
cld
stc
arpl
and
mov
repz
lret
addb
dec
push
and
push
movsl
aam
xor
push
mov
cmp
lods
out
xor
sarb
call
ss
and
out
inc
mov
ss
subb
jne
cmpsl
adc
scas
jmp
ja
add
sub
push
xchg
js
idivl
lods
sub
fwait
jmp
pop
pop
or
pop
jg
xchg
mov
loopne
scas
inc
test
push
dec
nop
ljmp
mov
js
mov
adc
xor
xchg
imul
xchg
or
nop
shll
pop
mov
xor
sub
mov
sahf
xor
jg
and
mov
test
xor
mov
cmp
rep
mov
les
sahf
jbe
insl
adc
push
not
aam
fildl
mov
idivl
xchg
mov
cs
cmp
mov
stos
stc
push
jnp
stos
std
das
add
jnp
imul
or
pop
shlb
out
mov
popf
loopne
in
and
scas
inc
out
xchg
mov
ret
adc
pop
cld
jo
push
cmp
mov
mov
aaa
iret
les
stos
call
fwait
inc
pop
dec
ds
int
pop
xchg
mov
inc
add
test
pop
movsl
shrl
ret
dec
dec
xchg
sub
sub
xor
scas
jne
jo
lds
out
sbb
sbb
decb
insl
mov
mov
fmuls
ds
fisttps
lods
mov
rolb
and
pop
sbb
out
ljmp
inc
pop
ret
rorl
out
pop
xor
fmuls
mov
sub
adcb
in
in
cmpsb
and
lods
loop
mov
outsl
pop
pop
es
xchg
mov
xchg
mov
push
stos
imul
adc
or
cmpl
addr16
xchg
aas
mov
cmc
or
lcall
xchg
fidivl
dec
push
dec
push
adc
jae
dec
dec
jle
jecxz
mov
sub
stos
mov
in
inc
out
mov
xor
pushf
mov
xchg
inc
imul
xorl
xchg
aam
dec
push
into
sub
adc
aas
push
sbb
add
fs
mov
jnp
leave
sbb
mov
push
insb
fs
or
cmp
outsl
stos
pop
dec
or
fucomi
es
mov
ret
stos
in
cmpb
push
pop
pop
pop
xchg
stos
push
jnp
movsb
mov
call
dec
das
push
inc
cmp
std
js
and
lahf
setg
or
stos
or
or
into
xchg
cld
add
push
cmpsl
in
and
hlt
loopne
and
aaa
push
sbb
inc
sub
mul
dec
popa
add
sub
dec
out
rcr
sbb
lock
lds
pop
cwtl
xor
and
clc
jl
ljmp
or
or
and
jb
jl
fnstsw
lret
cs
pop
loopne
jle
inc
jb
sahf
test
push
movsl
push
sbb
out
icebp
sbb
bound
imul
mov
mov
in
out
xchg
jnp
orb
jmp
adc
stc
clc
inc
push
scas
js
push
jns
arpl
and
adc
mov
mov
test
inc
loop
and
shlb
lcall
movsb
shl
test
loop
push
js
xor
inc
jno
jb
push
cmp
imul
mov
cli
nop
or
mov
movsl
lcall
adc
xchg
jns
xchg
jge
push
and
fs
inc
mov
imul
jo
fstpl
stos
or
adc
cmp
or
cmpsl
mov
test
insb
xchg
mov
popa
and
cli
xor
aaa
mov
ret
loop
mov
sub
inc
lods
loop
les
in
loopne
add
and
pop
ret
out
stos
mov
cmp
lods
sub
and
dec
int
jbe
jg
stc
pop
jo
push
mov
rcll
cltd
mov
idivb
xchg
jg
or
lods
call
out
push
movsb
and
mov
inc
lret
incl
sar
jecxz
inc
sub
push
std
pop
sub
adc
mulb
xor
arpl
jnp
cmp
dec
jnp
rcll
sahf
sub
add
push
push
hlt
sbb
mov
fucomp
imul
fisubrl
lods
fisubs
xor
sub
ret
mov
push
scas
imul
or
cmpps
pusha
jp
mov
pop
sti
enter
aad
jg
pop
or
loopne
addr16
les
lock
scas
stos
in
hlt
pusha
rolb
jb
adc
imulb
loopne
mov
mov
and
out
repz
enter
incl
add
sub
lcall
in
jmp
mov
inc
pop
fucomi
popa
fiaddl
fsubrp
xchg
mov
push
sub
stc
mov
nop
push
jl
and
cltd
popf
insb
shl
imul
lods
je
lods
cwtl
jmp
dec
pop
mov
mov
stos
sarl
cmp
push
jp
aas
mov
ja
outsl
inc
or
mov
fcomip
mov
sbb
lods
scas
pop
test
sub
and
jp
cmpsl
sub
mov
and
push
and
push
addr16
jne
out
or
or
or
inc
dec
pop
dec
ret
imul
daa
xchg
sbb
idivb
nop
jle
idivb
jnp
icebp
daa
and
ss
icebp
lea
pop
xor
jbe
jnp
mov
xchg
push
push
adc
cmp
jecxz
xchg
dec
or
and
cwtl
lcall
sbb
hlt
xchg
sbb
dec
les
roll
sbb
aaa
push
inc
jmp
xchg
push
pop
jle
jo
test
stc
cmp
inc
pop
xor
adc
int
insb
adcl
lea
sbb
leave
sarb
and
nop
aam
pop
xlat
add
ret
cmp
inc
in
inc
jae
mov
mov
mov
lock
xor
imull
and
xchg
adc
sub
lods
inc
xchg
ret
pop
or
cmpsl
jnp
mov
push
fnstenv
lret
cltd
stc
arpl
out
enter
and
lea
and
std
nop
or
call
lods
push
imul
out
pop
movsb
repnz
and
xchg
hlt
ret
mov
cmpsl
xor
fucomip
or
negb
loopne
mov
int
lods
mov
push
mov
imul
stos
sbb
imul
pop
ss
bnd
sar
in
xor
jmp
mov
fdivrl
cmc
add
jecxz
push
lret
dec
lret
movsl
jecxz
ret
inc
out
dec
mov
lock
sub
inc
mov
fwait
sub
jp
inc
xchg
add
xchg
mov
fnsave
inc
sub
dec
sbb
mov
xchg
lret
adc
in
xchg
imul
push
bound
mov
add
add
jg
inc
aad
pop
mov
popf
lahf
outsb
scas
sti
ret
loope
out
add
out
loop
add
rorl
xchg
jmp
lods
test
cmp
lahf
mov
pop
dec
loop
int3
in
das
and
and
lret
cmpsl
fdivr
add
and
pop
mov
je
push
inc
pop
cmp
sbb
push
sti
xor
and
xor
mov
jo
ja
cmc
jb
and
xorl
insl
xchg
mov
in
sbb
jl
fsubrs
addr16
pop
loope
push
stos
mov
test
add
fiaddl
dec
mov
push
mov
sbb
cld
mov
popf
shll
or
ret
push
add
add
iret
test
cltd
sbb
cs
xor
int3
sbb
dec
testb
insb
cltd
int3
dec
and
aam
cmp
subl
js
imul
adc
inc
icebp
jno
pop
imul
inc
jp
cli
in
lea
add
adc
inc
jnp
orb
cmp
and
cmp
add
nop
test
xlat
int
test
and
sub
ficoml
cld
sbb
repz
mov
std
bound
inc
fldenv
imul
sub
loope
aaa
movsb
js
jmp
cwtl
sti
mov
push
mov
loope
mov
mov
std
dec
mov
jne
andl
mov
fldl
ljmp
iret
fmul
aam
adc
xchg
xchg
push
leave
stos
inc
in
mov
enter
jge
repz
iret
in
lahf
add
xchg
mov
push
pop
out
mov
gs
scas
sbb
push
sbb
or
dec
cmp
out
xchg
cmp
dec
aad
push
jge
mov
out
int3
into
jg
add
js
and
jae
ret
roll
sbb
mov
data16
mov
jmp
popa
cmp
inc
lods
dec
xor
call
push
mov
sub
stc
jo
cmp
xchg
and
gs
adc
inc
lea
cmpsl
decb
inc
mov
push
enter
push
sbb
mov
cltd
and
jbe
cmpsl
lods
mov
dec
xor
and
push
mov
xor
lret
adc
xlat
cld
hlt
push
jns
xchg
jae
int
sahf
or
sub
call
add
jo
pop
in
mov
dec
adc
call
cs
std
lea
cmp
std
lods
in
pop
cltd
xor
daa
xchg
adc
out
mov
je
pop
mov
xlat
cmp
sbb
dec
cli
iret
das
jo
stos
push
jne
sbb
ss
add
int
dec
mov
mov
cltd
notb
mov
inc
leave
sub
xchg
pop
dec
pop
mov
sti
sbb
das
pushf
pop
xchg
xor
sahf
sub
out
mov
mov
push
add
and
xchg
ret
lock
xor
cmp
shlb
mov
sbb
fwait
dec
setle
dec
push
out
add
frstor
cmpb
add
stos
mul
test
sub
cmp
stos
push
jecxz
mov
pop
and
lock
roll
cwtl
icebp
rcrb
pop
xor
nop
test
ficoml
add
xchg
inc
cmp
test
test
sti
and
xchg
insl
jb
mov
cs
cmp
mov
adc
in
cmpsb
adc
rcrb
in
jl
push
popf
loopne
xchg
loop
arpl
mov
xchg
popf
push
sbb
scas
xor
fsubp
loopne
push
mov
mov
inc
and
xchg
bswap
xor
xor
test
and
xorb
mov
adc
push
repnz
add
outsb
or
pop
lds
mov
das
or
adc
stos
test
popf
lahf
mov
popa
cmpb
cwtl
xor
or
lret
mov
xchg
add
sbb
into
xorl
jno
add
aad
imul
inc
pop
jge
pop
jae
xchg
add
cmp
fdivl
in
xor
inc
repnz
mov
or
add
jge
cmp
push
repnz
cltd
and
shl
rorb
push
push
leave
scas
sbb
or
rorl
addb
add
jmp
call
lea
rorl
sbb
or
fsubrs
stos
das
cmp
fildl
pushl
mov
outsl
pop
jmp
pop
xchg
cmpsb
mov
cmp
insb
out
xchg
in
leave
pop
pop
ret
sahf
test
and
ret
out
mov
jae
loopne
push
xchg
push
scas
aas
inc
test
stos
mov
cmp
inc
inc
or
mov
ss
mov
mov
inc
ss
mov
es
cli
push
fidivrs
or
push
mov
in
stos
sub
faddl
into
mov
es
roll
push
loop
int
mov
mov
lods
call
sub
add
fcompl
in
ds
push
pop
inc
mov
pop
filds
adc
ss
sbb
jp
mov
xor
lret
scas
sbb
ss
push
mov
scas
jp
lods
ja
mov
mov
inc
mov
lcall
cmpsl
cld
dec
shlb
push
out
mov
ret
push
xorl
aas
cmpsb
cmp
pusha
fbstp
add
mov
mov
mov
aaa
mov
stc
bound
outsb
lret
repz
jne
int
in
fldl
cli
stos
repnz
mov
cmp
es
xchg
mov
jae
push
jnp
pushf
das
fstl
les
jb
jecxz
je
repz
outsl
popf
mov
fldl
ficompl
mov
push
les
fildl
nop
add
subb
sti
mov
sub
inc
adc
lret
movl
sub
iret
inc
jns
xchg
pop
call
sti
mov
pop
cmp
fisttpl
mov
xchg
and
stos
test
xor
mov
loopne
in
mov
lret
popf
mov
nop
mov
and
inc
inc
sub
pop
pusha
in
jl
mov
scas
jno
pop
cmp
in
popl
ss
imul
pop
xchg
and
andl
dec
lods
les
pop
or
sub
stos
mov
mov
std
inc
push
clc
jno
fisubl
dec
gs
inc
add
pop
mov
imul
add
xchg
fldl
xchg
out
add
pop
or
cmp
add
pop
push
add
mov
adc
out
sbb
cmpsb
fs
into
pop
xchg
fisubl
cld
pop
adc
push
add
or
loopne
bound
push
adc
push
sub
pop
cmpsb
xor
test
cltd
ljmp
test
bnd
xlat
stos
cmpsb
xchg
incb
std
push
pop
add
dec
pusha
js
rclb
sahf
lds
mov
lods
lret
pop
int3
xor
hlt
andl
xchg
mov
ds
pusha
pop
sahf
cmc
fstps
jno
xor
es
ja
fwait
push
jecxz
mov
sbb
dec
pop
loope
cmpsb
mov
aaa
inc
fnsetpm(287
sbb
cwtl
divb
xor
lods
pop
inc
aad
sub
pop
aam
hlt
dec
mov
adc
in
fdivrs
push
loope
push
mov
icebp
cs
cmc
lock
sub
imul
mov
xchg
push
cs
mov
andb
mov
cmc
rclb
je
imul
jge
add
and
and
sub
das
cld
push
xchg
push
movb
jo
loope
inc
pusha
xchg
popa
dec
pop
cwtl
test
mov
daa
adc
test
dec
inc
mov
cld
js
std
push
ficoms
xlat
loop
repnz
sbb
movsb
sahf
out
xor
xor
add
sahf
pop
sbb
idiv
dec
push
inc
mov
jl
int
pop
inc
test
sub
push
jb
mov
xchg
xlat
out
or
adc
pop
lods
push
push
stos
test
adc
or
leave
push
jae
xor
call
sti
pop
inc
fcoms
mov
lods
xor
inc
mov
ret
and
xchg
shlb
sti
jns
xchg
pop
pop
cld
inc
mov
mov
jge
xor
adc
pop
push
stos
jbe
push
iret
leave
sub
pop
mov
push
mov
dec
ret
sbb
jecxz
ljmp
xchg
dec
test
es
or
bound
lea
pop
mov
jl
js
inc
fcomi
adc
sbb
lcall
bound
mov
inc
bound
insb
sti
fstps
push
inc
ret
outsl
mov
test
push
and
push
push
insl
lahf
jo
inc
jmp
repz
mov
xor
cli
cmp
imul
add
sbb
jecxz
jbe
enter
jmp
stos
and
jmp
les
push
outsl
stc
dec
jno
and
dec
dec
xor
mov
stc
sbb
fdivl
pop
sub
dec
cmp
cmp
mov
cmpsl
xor
jg
add
clc
push
aam
fidivl
xor
in
pop
dec
mov
xchg
push
pusha
fmulp
js
in
cmpsl
mov
push
lahf
aad
out
out
sub
jne
scas
jbe
andl
adc
cmp
movsl
std
enter
xchg
arpl
pop
add
jns
addr16
sbb
rcll
nop
jne
xor
imul
call
cmp
jbe
rcrl
je
or
dec
xor
mov
push
aam
gs
lcall
or
scas
out
mov
pop
mov
mov
adc
cmc
test
test
jge
sbbl
sbb
pop
mov
outsb
and
mov
pop
rorb
xchg
lea
cltd
and
xchg
sbb
fldcw
dec
movsb
lods
pop
xchg
xlat
jp
mov
adc
cmp
mov
jmp
lahf
jmp
xor
aad
mov
ss
lds
sub
imul
lock
and
push
sbb
jecxz
add
stos
fisubrs
jmp
mov
mov
aam
add
pusha
lret
push
sub
lcall
rcr
or
jmp
mov
mov
mov
out
out
pop
cmp
add
fisubl
sahf
loope
and
loope
mov
jge
dec
inc
inc
lods
or
imul
es
mov
and
lods
adc
jg
mov
push
inc
pop
xlat
sbb
inc
fwait
cmpsl
insb
dec
das
ljmp
les
leave
cmp
xchg
bound
aaa
mov
sbb
pcmpgtw
icebp
ret
adcl
js
jle
sbb
inc
arpl
or
dec
in
nop
ss
pop
mov
sub
movb
add
jecxz
or
divps
cmc
hlt
xchg
jns
cmc
fdivrp
in
jg
cmp
shl
je
dec
jnp
cmpsb
bnd
xor
or
shlb
data16
scas
sbb
push
shll
icebp
xor
jmp
xchg
jmp
pop
repnz
fwait
mov
jp
bound
ds
mov
hlt
cmp
mov
popa
dec
test
xor
dec
jle
jo
pop
jno
mov
push
xchg
loope
sub
cmp
mov
inc
or
lods
jecxz
fsubs
mov
mov
inc
insl
sub
test
stc
jl
cwtl
inc
xchg
fbstp
sub
push
jle
pushf
stc
outsl
or
fdiv
cmpsl
sub
dec
sub
sub
xchg
pop
insl
pop
mov
sbb
push
push
je
dec
loope
ljmp
cmp
mov
cmp
dec
outsb
xorb
popa
sarb
push
std
xchg
fisubrl
jmp
sub
sbb
sbb
lcall
insb
inc
and
xchg
xor
lods
test
push
jge
and
sbbb
repnz
dec
jne
andl
es
sti
es
movsl
jle
inc
ja
inc
push
fninit
and
xchg
dec
push
mov
inc
jo
xor
sub
adc
add
push
adc
xchg
fdivrl
and
pop
jb
sahf
mov
adc
push
mov
lock
add
sub
and
ret
mov
jnp
xor
call
je
daa
cmc
and
sub
int
cltd
xchg
cltd
in
cli
cmp
sbb
sbb
adc
pop
andb
push
cmp
std
imul
insb
mov
sbb
pop
shrl
pusha
push
push
lret
sbb
xor
rclb
and
adc
xor
fbld
andb
mov
jnp
push
dec
clc
mov
adc
push
adc
aad
push
insl
xor
mov
inc
pop
mov
stc
add
pop
test
daa
adc
int
dec
lcall
in
scas
movsl
xchg
mov
inc
dec
fcomps
das
add
lret
cli
mov
and
and
shlb
call
adc
mov
sub
xchg
dec
and
int
dec
fisttps
dec
sub
rcr
cmp
and
xchg
filds
sbb
out
int3
rcrl
push
mov
jno
iret
pop
loopne
inc
xchg
mov
or
mov
aam
addr16
push
mov
imul
lods
jae
divl
sub
hlt
cmpsb
pop
fcoms
xchg
das
mov
xor
xchg
sub
mov
cmp
inc
movsl
js
out
xchg
out
out
nop
call
dec
jp
clc
cld
xlat
pop
sub
mov
dec
lahf
dec
sarl
ret
inc
repz
pop
add
sbb
mov
mulb
jmp
pop
push
jge
jecxz
rcr
sub
dec
jb
je
add
sub
mov
add
mov
rorb
push
sub
aaa
add
repnz
dec
jmp
sub
fwait
cld
push
push
int3
cmpsl
push
mov
fadd
mov
jne
pop
leave
out
pusha
mov
cmp
xchg
inc
int3
outsl
mov
add
xchg
shrb
jno
push
xor
mov
fwait
mov
and
stc
daa
jle
cmc
cmp
jne
jne
push
in
stc
imulb
or
mov
and
mov
movsb
push
and
inc
jne
xchg
and
mov
hlt
or
push
push
pusha
jecxz
adcl
aaa
repz
pop
fbld
rcrl
lret
mov
jle
jo
fbld
das
icebp
push
add
sbbl
call
cmp
cld
dec
add
mov
arpl
jbe
push
mov
mov
mov
push
rcll
push
gs
out
test
jmp
and
ret
or
inc
push
lds
sub
lahf
test
test
jo
dec
test
notb
sub
mov
jge
test
int3
jbe
out
movsl
xlat
xchg
xor
movsl
adc
js
sbb
fsubrl
sbb
sub
xchg
cmp
stc
push
loope
inc
ficompl
or
or
ja
popf
cmp
ds
lods
inc
pusha
loopne
adc
addl
out
jbe
push
or
aas
mov
jp
cmc
pop
sub
outsl
iret
adc
or
mulb
lods
jle
sbb
ficomps
mov
rolb
pop
push
jbe
mov
cmc
jns
fildll
mov
lock
or
imul
insl
fdivrs
xchg
mov
jae
xchg
das
lods
stos
sahf
and
push
out
ljmp
test
sub
rcr
jle
hlt
jge
push
and
dec
rorl
orb
loopne
push
and
sbb
shrb
out
pop
sbb
and
push
or
int
sbb
int
mov
cmp
jecxz
int3
dec
enter
sbb
dec
inc
and
cmp
sub
iret
lods
push
push
add
stc
mov
mov
shrb
inc
loop
push
add
add
jecxz
imul
sbb
push
fcmovnu
stos
sahf
std
ss
fstl
mov
add
push
popa
or
xor
fisttps
add
and
movsb
stos
notb
std
pop
aam
pop
fnstcw
incl
push
xlat
adc
leave
insl
sti
mov
fwait
cmp
and
lret
loope
and
ret
push
adc
inc
rcll
fstps
mov
lds
lahf
mov
xchg
push
sbb
fwait
jo
and
inc
push
dec
inc
cld
aad
mov
pusha
hlt
inc
clc
cmp
and
stc
fidivs
xchg
pop
test
mov
mov
and
xor
push
or
gs
movsl
rcr
xchg
fwait
add
push
push
int3
int3
fmull
test
xor
addl
inc
es
rcrl
mov
sub
jo
xor
mov
scas
add
daa
push
xchg
mov
sub
out
ss
inc
sbb
dec
adc
les
decb
fcmovbe
jecxz
cmc
adc
lret
notl
outsb
pop
inc
sahf
outsl
std
mov
nop
cmp
sub
lret
mov
cmp
xchg
inc
pop
fs
pushf
add
mov
inc
call
in
cmp
xor
ret
rcrb
in
cmc
pop
jns
adc
pop
xchg
pop
movl
int3
cs
or
in
sub
fisubl
clts
xchg
lsl
jmp
test
enter
js
fbld
ss
jno
mov
jl
mov
jmp
in
add
mov
and
xchg
add
add
sbb
dec
sub
add
scas
addl
ja
insb
dec
fcomp
jmp
repz
arpl
push
xor
mov
ljmp
mov
dec
jg
xchg
lahf
enter
scas
add
rorb
inc
in
jno
ljmp
pop
fisubrl
rorb
daa
adc
mov
mov
test
repnz
adcb
mov
loopne
gs
cwtl
lahf
jb
lods
loop
adc
std
bound
pusha
test
fs
ret
push
iret
adc
int3
dec
jg
inc
movsb
xor
adc
cs
xor
imul
push
das
push
aaa
rorb
add
sarl
sbb
pop
lods
and
rorb
mov
xchg
shlb
fs
add
popf
into
push
cwtl
inc
ret
xrelease
sub
arpl
mov
daa
outsl
mov
cmp
push
mov
out
xchg
pop
dec
or
mov
push
in
ds
push
mov
or
jg
mov
icebp
pop
add
in
pop
out
arpl
adc
movsb
aad
push
cmp
outsl
fwait
jl
push
test
cmp
push
lret
lahf
mov
leave
push
and
popa
sbb
cltd
jo
insl
or
sbb
mov
mov
out
push
sahf
cs
cli
adc
inc
pop
sbb
stos
pop
mov
insb
xchg
data16
outsb
imul
xlat
aaa
mov
sub
sti
sti
sbb
push
leave
or
jo
aam
mov
test
ret
pop
sub
cmpl
push
pop
mov
and
xor
loopne
push
push
sbb
mov
in
cwtl
mov
nop
movsb
push
in
mov
push
sbb
les
nop
cmp
push
inc
roll
or
in
xor
movsl
add
mov
into
insb
int
loop
inc
gs
xlat
xor
test
pushf
ds
xor
xor
cmpl
fists
lods
push
pop
jnp
mov
lcall
loopne
out
lret
mov
mov
scas
andl
cmc
jnp
in
dec
inc
dec
pop
jmp
xor
clc
sub
stos
scas
push
loop
push
pop
inc
jo
aad
add
mov
js
enter
or
inc
loop
jo
fcoms
inc
sbb
ljmp
push
imul
sbb
adc
xchg
aas
push
mov
xor
mov
lds
js
enter
loope
cwtl
scas
movsl
lods
fstp
sbbl
sbb
xor
cmp
out
adc
aaa
ja
das
mov
pop
addl
cwtl
sahf
xchg
cmp
sbb
jbe
mulb
push
je
xchg
arpl
adc
add
je
push
ret
lahf
lret
mov
insb
scas
cld
lock
and
fimuls
std
sub
data16
les
push
mov
or
loopne
cli
insl
hlt
inc
add
push
out
sub
repz
mov
sub
or
inc
push
hlt
popf
popa
sub
jb
pop
sti
add
test
mov
test
push
fs
jl
bnd
lret
lret
cmp
mov
xchg
pop
loopne
dec
mul
lahf
dec
sbb
pusha
outsl
mov
push
shl
cmp
test
mov
dec
in
int
pop
out
mov
fisttpll
xchg
sbb
test
or
adc
jno
or
stos
and
in
ljmp
dec
xor
jnp
insl
test
or
das
and
imul
insb
push
paddw
xchg
pop
mov
into
mov
xor
cmp
sub
add
mov
and
or
mov
add
faddl
dec
shl
sahf
mov
nop
jle
inc
cmc
mov
fldl
cld
mov
fdivp
nop
jl
jp
ljmp
dec
mov
mov
jb
ja
jl
sub
sbb
pextrw
xchg
leave
add
push
sub
test
mov
cltd
or
or
ret
addr16
xorl
mov
xchg
hlt
jno
into
stc
xor
lret
stc
ficomps
pop
cmp
popf
pusha
cmp
jns
mov
leave
and
xor
sbb
cmp
fmull
jo
cmp
shlb
rorb
test
shlb
xchg
dec
pop
jno
and
int3
loope
mov
flds
cmp
rclb
jns
mov
jbe
shll
sbb
ljmp
adc
sub
sbb
inc
sbbl
and
or
rcr
sarl
xlat
jb
js
or
enter
iret
testb
xchg
ficoml
loopne
das
or
inc
scas
rol
cmp
stos
scas
xor
repnz
int3
nop
pop
pop
xchg
data16
inc
lods
xor
mov
mov
mov
mov
daa
push
ret
fisubrl
push
push
das
outsl
repz
sahf
xchg
jecxz
ds
out
mov
sub
lret
in
xor
std
jp
cmp
fistl
mov
mov
scas
or
js
or
sub
and
add
sub
push
sub
fwait
mov
lret
xor
xor
iret
add
lods
pop
and
adc
lea
mov
je
fcomps
inc
xorl
mov
iret
inc
adc
roll
jle
jo
add
pop
pop
insb
inc
xor
dec
scas
or
jne
repz
mov
sahf
test
bound
stc
jae
int
add
adc
mov
and
push
xor
dec
dec
push
jo
push
and
sbb
out
add
pushw
push
in
addr16
jbe
xlat
cmp
inc
test
sbb
stos
push
testl
jne
mov
pop
dec
popa
and
mov
xchg
fistl
dec
repnz
popa
insl
sub
cli
lea
jo
mov
fists
mov
inc
sub
out
mov
pop
inc
lret
jne
mov
xchg
jmp
adc
sti
arpl
std
inc
and
sub
mov
gs
int3
jmp
jecxz
jge
test
lea
aam
les
pop
enter
sub
cmpsb
mov
mov
inc
dec
fcmovbe
adc
inc
or
xchg
cmpsl
in
sbb
pop
add
aam
sbb
sbb
cwtl
mov
pop
sahf
add
xchg
aaa
arpl
imul
add
add
sub
inc
lods
add
inc
push
sub
push
lods
fdivl
sbb
pop
or
fcomip
lods
mov
imulb
ret
mov
add
pop
lods
test
xchg
ret
fcoml
cmp
dec
popf
mov
xlat
jns
adc
lcall
pop
adc
ret
imul
inc
jl
and
pop
cmpsl
stc
mov
in
dec
sub
mov
mov
cmp
adc
cld
pop
iret
add
cmp
xchg
mov
pop
lret
xchg
xor
push
jg
jecxz
iret
push
jmp
sbb
scas
xchg
inc
add
mulb
add
inc
adc
xor
fwait
iret
mov
mov
shrb
pop
std
jg
xchg
cmpsb
lock
mov
jae
mov
push
add
sbb
jg
test
mov
push
call
cmpsb
push
mov
or
sbb
imul
cs
daa
fwait
sub
aad
lds
clc
ds
fidivrl
jae
xor
outsl
cmp
sub
cld
aad
mov
adc
cmp
jo
shlb
jbe
mov
je
mov
addb
jbe
adc
mov
outsl
inc
aas
adc
add
mov
sub
mov
dec
jnp
jns
lods
xor
mov
in
movsb
repnz
bound
jle
sbb
push
sbb
pop
adcw
stos
into
jle
cld
daa
mov
scas
outsl
test
fisttpll
lods
iret
mov
insl
add
mov
xor
pusha
pusha
push
sar
rcrl
or
dec
cwtl
push
mov
jo
sti
xchg
gs
push
in
xorb
sahf
jns
or
xchg
fstp
xchg
jo
lock
and
xchg
adc
pop
pop
and
nop
orl
adc
and
sahf
mov
mov
and
and
aas
popf
cmc
pop
fcmovne
push
sbb
inc
iret
fistps
clc
mulps
stc
add
pusha
loope
push
and
push
sbb
int
xchg
jnp,pt
adc
mov
test
ja
and
inc
out
sub
xor
mov
jmp
mov
cmp
xchg
jecxz
hlt
ss
dec
or
icebp
into
xor
mov
pop
pop
cmp
cmpsb
and
inc
push
pop
inc
ljmp
test
cwtl
push
xor
imul
mov
sarb
mov
imul
inc
mov
popa
lret
movsb
xor
cli
ljmp
sahf
push
orl
out
push
ljmp
pop
dec
and
lcall
jnp
push
adc
mov
fwait
test
mov
je
xor
insl
subb
jbe
gs
cmp
lods
xchg
leave
push
fbstp
push
lea
and
dec
out
loope
inc
ficoml
or
mov
repnz
dec
sub
loopne
lret
in
pop
xchg
mov
sub
ds
subl
mov
jnp
fdiv
pop
fsubl
lahf
cs
pop
push
push
inc
mov
pop
mov
das
and
sahf
mov
shrl
test
add
dec
jns
je
lock
pop
es
std
sbb
cmp
rcr
mov
inc
inc
dec
hlt
or
lahf
xorl
jae
leave
repz
xor
and
insl
hlt
pop
test
aam
push
gs
test
jnp
stos
jp
shll
lahf
xchg
dec
jo
inc
push
jb
push
and
add
pusha
mov
int
jno
pop
pop
test
push
ss
push
sub
dec
and
cmp
or
faddp
jns
sub
mov
pop
mov
lea
dec
iret
mov
sti
fldt
adc
sarl
aam
cmp
sub
mov
lock
mov
sbb
pushf
pop
jbe
lret
call
or
or
shr
xor
sarb
insl
adc
lods
add
mov
jg
mov
out
adc
ret
xchg
xor
ficompl
mov
pop
mov
testb
imul
pop
adc
xlat
dec
test
icebp
jno
repz
std
out
dec
loopne
jge
sub
subb
xchg
scas
outsl
daa
divb
sub
out
xchg
xchg
stos
scas
or
stos
fcomip
lret
icebp
shr
push
cltd
insl
loopne
xor
add
outsb
cwtl
jmp
das
push
in
sub
shl
add
or
pop
mov
jns
and
adc
and
fldcw
mov
mov
mov
inc
dec
add
mov
mov
in
and
mov
mov
pushf
mov
inc
fsts
clc
adc
add
cmp
push
divb
in
xchg
adc
jns
bound
cmpsb
jae
xchg
testl
xchg
or
clc
jnp
or
jmp
jp
cmc
lock
sub
or
sub
decl
jns
sub
daa
pop
int
add
test
mov
in
mov
push
nop
fwait
mov
loop
push
je
cmp
xor
adc
enter
add
incl
ficoms
jecxz
mov
in
data16
mov
jb
cmc
les
aaa
xchg
push
sbb
sub
in
fwait
rolb
shll
mov
fst
inc
pop
jle
out
test
adc
test
iret
pop
mov
mov
mov
into
ret
inc
jo
popa
or
rcl
sbb
xor
icebp
mov
inc
insl
and
icebp
jae
jno
add
inc
ret
les
dec
adc
xchg
add
pop
add
sub
sub
adc
int
mov
pusha
or
js
dec
outsl
into
mov
mov
add
loop
popf
add
fsubrp
jmp
and
pop
int3
insb
std
dec
cmp
rorl
arpl
in
push
jb
movsl
add
xchg
dec
movsb
adc
int
dec
inc
xchg
out
aad
mov
cld
lods
insb
fisttps
xchg
xlat
andb
push
sbb
xchg
xor
outsl
push
push
jne
mulb
dec
sti
xorl
arpl
dec
fimull
mov
testl
lcall
dec
popf
es
xchg
out
scas
popa
stos
int3
cld
stos
gs
add
bound
dec
and
gs
cmpsl
pop
lea
cmp
xor
arpl
xor
test
out
adc
aas
mov
fsubrp
insb
mov
inc
addl
sbb
xor
adc
je
sbb
loope
neg
ljmp
mov
adc
ja
sub
inc
jge
fidivl
je
xor
jb
in
scas
sarb
out
sub
pop
enter
sbb
mov
mov
xchg
jne
jge
inc
sbbb
sub
sub
loopne
imul
push
xor
lods
xchg
cld
cmp
mov
lea
sahf
lea
or
out
sbb
xor
xchg
pop
push
insb
fdivrs
mov
insl
in
jbe
cmp
out
rcrb
lock
adc
mov
cwtl
dec
in
mov
push
fwait
adc
sub
dec
int3
jnp
pushf
aas
int
out
push
cmp
call
inc
popa
jmp
orl
sbb
movsl
mov
rorl
nop
loope
test
ljmp
data16
mov
dec
dec
lcall
scas
fcomps
mov
fld
mov
push
aaa
inc
aam
out
into
in
outsb
lahf
fdivrs
push
inc
pop
lock
dec
scas
push
repz
test
loope
in
popa
jo
mov
jp
xor
int3
leave
xor
loope
sub
mov
divb
xchg
movsb
lds
dec
aas
jno
enter
cltd
adc
push
into
sbb
movsb
jne
int3
cmp
xchg
push
fdivs
addr16
sub
pop
jg
pop
pop
pusha
mov
pop
mov
add
or
jg
addr16
fisubl
stc
neg
and
movsl
xchg
jb
adc
sub
stos
je
into
and
mov
insl
xchg
test
and
jmp
xchg
push
cmp
pushf
fdivl
rcr
orb
icebp
fiaddl
outsb
fsubrl
jecxz
add
fldcw
xor
enter
in
and
insb
lahf
fldl
dec
mov
xor
aad
mov
insb
and
cmp
rcrb
pop
cld
fisubrl
xor
sub
sub
xor
adc
addr16
sbbl
cld
sti
data16
cmp
insb
ret
jmp
inc
cmp
ret
shlb
dec
lds
cltd
pushf
shl
pop
mov
xorb
or
sbb
ret
jp
push
inc
pop
das
xchg
adc
cmovno
dec
xlat
adc
sub
loope
pop
xchg
and
jbe
cwtl
test
in
bound
loopne
jbe
fsubl
jle
xchg
out
xor
xor
jmp
mov
dec
es
sbb
jo
movsb
xchg
mov
inc
lods
xchg
jb
popl
ja
hlt
dec
xor
std
push
mov
sub
enter
xor
and
sbb
pmuludq
push
pop
mov
test
into
or
jmp
pushf
js
negl
loope
mov
or
push
xchg
test
aas
movsb
sbb
pop
je
hlt
mov
sub
mov
ret
popf
dec
mov
fwait
mov
imul
fwait
mov
movsl
jb
sub
cmp
mov
movsb
and
outsb
les
dec
je
push
and
push
push
pop
jbe
pop
shlb
mov
sub
mov
roll
fs
jo
push
test
repz
xlat
dec
cmp
add
loop
cwtl
stc
fldt
jns
imul
lods
scas
pop
xorb
and
sub
adc
shlb
xor
or
mov
mov
inc
cmc
rcrl
call
ljmp
loopne
fisubl
out
lods
jnp
insb
mov
pop
jae
lock
xchg
iret
fsub
popf
add
sbb
mov
or
mov
mov
inc
push
arpl
repnz
inc
mov
and
movsb
pushf
pusha
out
cmp
inc
xlat
jecxz
test
out
dec
aaa
mov
fs
je
pop
jne
add
mov
inc
ret
sub
mov
lods
mov
jb
inc
cmp
out
and
insb
push
data16
push
xchg
mov
insl
sbb
cmp
dec
pop
lock
jnp
sub
insl
mov
scas
out
jb
leave
xor
jle
into
sub
mov
jns
lods
sub
call
ds
lcall
clc
push
out
mov
rcl
xor
inc
popa
mov
das
pushf
lret
and
and
and
mov
idiv
icebp
sub
sub
sahf
mov
les
fisttps
jbe
and
or
lret
mov
dec
mov
jno
mov
addr16
cmp
sbb
mov
negb
mov
push
mov
fcmovnu
icebp
sarb
nop
or
adc
or
inc
sbb
push
ljmp
loop
mov
mov
bound
adc
add
and
mov
inc
clc
and
jo
test
cld
test
aam
lcall
mov
jmp
push
lods
iret
pop
inc
insl
and
test
jae
call
adc
rcrl
jno
jg
add
in
mov
shrb
lret
add
shlb
out
in
jae
lret
out
cld
fwait
leave
hlt
lds
mov
xchg
lock
test
adc
xchg
fmuls
nop
sbb
sub
sbb
jecxz
xchg
adc
inc
mov
std
add
ds
jecxz
xor
leave
ret
outsl
mov
mov
shl
push
popa
sub
int
lret
cmpl
cld
push
mov
inc
mov
int
or
add
dec
addb
into
pushf
cmpb
or
das
pop
stos
adc
cs
xor
add
jl
jno
mov
jmp
mov
cmp
mov
repz
lret
call
pop
push
outsl
je
mov
sbbl
lahf
add
int
adc
ja
fists
xor
push
xchg
jp
pop
out
fisubl
gs
adc
dec
imul
fdivrp
inc
and
pushw
jae
sub
jnp
loopne
adcb
xor
mov
and
and
mov
andl
ret
push
sbb
mov
cmpsl
or
cmc
mov
jne
mov
dec
ret
outsb
insl
push
adc
leave
ret
stc
cmc
stc
xchg
jl
mov
jg
mov
xchg
int3
adc
pop
xor
push
out
push
mov
xor
cmpsb
mov
fsubp
sbb
adc
xchg
dec
mov
dec
push
subb
ja
popa
push
iret
xor
xchg
ljmp
xor
mov
jl
pop
inc
jp
icebp
sub
mov
int3
or
mov
pop
ret
dec
inc
cmp
push
push
mov
fwait
push
cld
jp
mov
aas
push
shl
popf
cltd
sub
stc
les
cmp
mov
xchg
popf
test
cwtl
test
xor
lds
push
in
adc
xor
pop
add
inc
adc
and
mov
push
je
push
cs
lcall
out
add
jbe
mov
not
sbb
adc
std
cs
xor
push
fwait
dec
adc
aad
ret
sbb
or
cs
pop
jnp
rorl
rcrb
aam
inc
mov
das
scas
lahf
xor
out
mov
ret
jg
addr16
inc
cmpsb
into
rclb
in
scas
and
popf
push
fdivs
je
out
pop
adc
sub
xor
stc
adc
je
push
jb
andb
or
in
ljmp
sbb
fs
jg
aam
pop
test
lret
outsl
pop
leave
cmc
popa
sub
xorl
jecxz
push
js
movsl
dec
pop
pushf
jl
sbb
cmpsb
addr16
ret
push
add
xchg
or
xlat
pop
mov
fdivr
in
jle
faddl
scas
negb
icebp
fsubs
or
cmp
mov
push
gs
and
repnz
in
clc
andb
sbb
aam
and
jno
xor
jmp
adc
jne
or
lahf
popf
push
xchg
bound
sub
adcl
cmp
cld
mov
popa
stos
cmp
push
pop
jae
push
lret
mov
les
sub
jecxz
cmc
sar
push
or
rcl
xor
sub
roll
mov
stos
adc
les
das
mov
iret
sub
test
or
pop
repnz
pop
jns
enterw
pop
xchg
jge
lds
adc
and
sub
andb
divl
xor
sahf
mov
mov
dec
ljmp
hlt
out
lods
movsb
mov
pop
rcrl
int
scas
in
adc
cmpsb
dec
jae
sahf
adc
fldlg2
andps
loop
adc
mov
xchg
movsl
imul
imul
mov
jae
je
push
push
rcrl
adc
js
mov
mov
stc
add
push
cld
sub
push
pop
addr16
push
cli
cld
dec
dec
aad
insl
clc
stos
xchg
xorl
jns
cmpsb
fstpt
xlat
push
xchg
fldl
mov
popa
jecxz
hlt
jecxz
and
sbb
das
rcrb
mov
pop
ficoml
fnsave
lcall
pop
cmp
dec
mov
xlat
out
pushf
bound
mov
push
mov
pop
scas
sbb
xchg
in
cmp
or
add
sti
jmp
aam
mov
or
pop
in
dec
jnp
xchg
insl
mov
into
xor
test
or
mov
sti
mov
xor
dec
pop
sbb
ljmp
xor
mov
cltd
xor
repz
mov
mov
mov
add
andb
jbe
repz
into
loope
pop
mov
sbb
mov
dec
xchg
or
ret
pusha
adc
adc
mov
aaa
out
or
call
test
dec
xor
loopne
mov
rol
into
sbb
mov
jb
in
lcall
dec
push
fsubr
sbb
pushf
scas
mov
cmpsl
cmp
cmp
sub
aam
ljmp
lea
movsb
aas
pop
and
jo
test
dec
inc
into
pop
sub
sbb
in
shll
stc
or
sti
jecxz
pop
mov
xchg
push
jg
imul
shlb
out
and
adc
repnz
jnp
aaa
mov
cli
xchg
stos
mov
fucompp
mov
sbb
ret
out
mov
test
inc
cmpsb
pop
jge
dec
or
pop
inc
mov
fld
lock
mov
dec
or
je
cld
aas
lods
xor
dec
mov
inc
inc
int
and
fs
sub
scas
and
mov
cmc
sub
enter
cmpsb
mov
add
sbb
cmp
jno
jle
pop
call
or
scas
out
jnp
cwtl
pop
adc
inc
in
xor
jle
and
dec
stos
dec
xchg
mov
dec
add
or
cmp
mov
dec
xchg
sbb
sti
mov
xor
inc
jno
mov
xchg
push
les
xchg
and
adc
mov
fistl
adc
sbb
jecxz
xchg
in
clc
shll
and
xchg
out
repnz
pushf
imul
insl
inc
insl
fdiv
mov
stc
arpl
xchg
aad
mov
add
lahf
dec
bnd
pop
cmp
pop
jg
mov
mov
and
je
mov
mov
jecxz
stc
loope
cli
mov
cld
idivl
repnz
pop
aam
mov
pop
lods
xchg
jno
push
pop
scas
aad
cmpsb
or
jb
cld
mov
shl
fldl
mov
xchg
fstl
stos
jae
lods
divl
inc
inc
out
out
es
xchg
call
jo
push
cmp
dec
or
nop
jbe
mov
and
dec
in
lds
test
shl
mov
xor
mov
loop
scas
test
cld
push
movsb
sub
test
in
in
sahf
ret
scas
aas
fs
mov
mov
dec
xchg
jb
ret
lahf
in
fcoms
lret
xchg
jbe
mov
jmp
imul
lret
pushf
mov
aad
sbb
inc
les
push
dec
adc
cmpsl
gs
jecxz
std
mov
sbb
loop
adc
icebp
clc
test
aaa
mov
mov
sub
mov
cmc
mov
popf
test
call
xor
xchg
jbe
in
pushl
add
aaa
sarl
dec
xor
clc
ljmp
ret
cmp
mov
add
movsl
das
dec
icebp
jns
mov
push
in
add
adc
test
loop
dec
jno
pop
cltd
pop
xor
in
mov
inc
cld
ret
xchg
out
jnp
in
dec
push
mov
push
cmp
fwait
xor
adc
pop
fcom
jae
and
mov
popf
sbb
cld
pop
out
iret
lods
mov
scas
jp
cltd
popf
loopne
inc
inc
dec
sti
pop
hlt
loopne
mov
and
insb
js
mov
enter
and
mov
dec
fyl2xp1
cmpsl
rolb
jge
mov
cmp
ja
add
ds
mov
or
jmp
lods
outsl
add
pop
inc
mov
adc
lret
movsl
out
int3
pop
push
or
lea
aam
repz
scas
adc
adc
mov
ljmp
icebp
rclb
push
push
pop
sub
mov
adc
movsl
movsb
ss
outsb
pop
jns
je
mov
mov
push
push
cmp
jne
flds
fcomp
les
jno
dec
xchg
lahf
loopne
test
xchg
ss
push
sbb
adc
adc
push
decl
push
xchg
sub
and
push
call
jge
cmpsb
mov
in
ret
add
add
sahf
add
xor
mov
fsts
xor
fucomp
mov
jae
loop
inc
push
jnp
cs
or
and
dec
cmp
push
js
mov
or
dec
or
mov
fstpt
inc
daa
sbb
or
adc
cmp
mov
scas
mov
mov
out
inc
ljmp
mov
mov
sub
xor
int
add
mov
xchg
lcall
movb
mov
sbb
cmp
mov
inc
sub
cmp
pop
cmc
insb
pusha
mov
iret
push
mov
rorl
mov
mov
lds
lcall
mov
insl
in
sarb
lods
ficoml
push
inc
stos
inc
push
fsubrl
or
mov
out
add
int3
jle
mov
repnz
stc
jecxz
push
daa
push
inc
cmp
ss
sub
xchg
mov
les
icebp
lcall
loop
pop
push
mov
jnp
testb
push
sbb
std
or
in
jb
sbb
pop
jge
jge
andl
pop
dec
mov
mov
out
out
or
std
jecxz
fidivs
and
jo,pn
fstpt
jg
mov
jmp
sub
xchg
inc
inc
lahf
nop
shlb
add
or
rorl
add
fsts
pop
gs
inc
cwtl
jnp
add
loopne
lret
jle
mov
outsl
out
inc
mov
xor
cmp
das
xchg
cmpsb
pusha
dec
pushf
lahf
xchg
xor
fstps
sbb
adc
pop
inc
xchg
out
xchg
cmp
jo
dec
lods
or
adc
das
dec
lahf
iret
sub
adc
dec
sbb
add
jl
xor
jle
in
in
sbb
inc
sarb
jne
or
push
mov
insb
xchg
fsubrp
mov
out
and
rorb
pop
mov
loope
movsl
pop
aad
shlb
add
inc
vhsubps
pop
pop
sub
and
jnp
lods
push
mov
jne
dec
adc
ja
jb
cwtl
sub
pushf
jae
sub
cs
cmpsl
test
add
vphadduwd
fists
dec
inc
fisttps
rolb
lea
cmpsl
sbb
mov
testl
adc
lahf
fldenv
sub
je
fldl
and
add
dec
inc
xor
adc
movsl
aam
dec
and
lret
inc
fildl
ja
sub
pop
movl
int
mov
pop
sbbb
adc
lods
sub
mov
push
and
push
fsubs
mov
xchg
mov
cli
incl
cs
xchg
push
mov
pop
shl
inc
repz
jo
add
mov
pop
ja
ja
or
adc
jnp
mov
imul
movsl
adc
cmp
xor
xor
mov
outsb
pop
in
pop
repz
idivb
pop
mov
imul
jle
adc
sbb
dec
repz
out
push
fbld
sub
add
dec
lods
insl
test
cli
gs
sbb
fsubrs
mov
or
rorl
fneni(8087
xchg
push
xchg
sbb
rcl
nop
sbb
sti
arpl
xor
rcrl
sti
xor
dec
xor
xchg
cmp
sub
push
xor
ficoms
pop
cmpsl
dec
or
push
adc
mov
xor
aas
loopne
cmpsb
and
lret
xor
je
and
cmc
cmc
mov
push
daa
aam
cmc
lahf
testb
cltd
lret
addr16
clc
addr16
or
cmp
push
push
pop
sbb
mov
push
cmpsb
imul
ss
fdivl
es
sbb
inc
in
loopne
add
imul
addr16
xchg
push
xor
dec
push
and
xor
add
dec
fmulp
and
popa
cld
dec
push
ret
and
mov
cmp
xor
sub
rcrb
daa
xor
arpl
test
xchg
ja
and
es
call
push
dec
ja
sti
xchg
fadds
cs
push
xchg
addr16
mov
sub
mov
sahf
cmc
push
outsl
cwtl
mov
sub
test
popf
arpl
push
scas
mov
repz
xor
adc
sbb
into
call
xor
rcrb
xor
test
cmpsb
ja
loop
fmull
ljmp
sbb
xor
lahf
dec
fdivrs
adc
outsb
lock
and
or
mov
sbb
insl
testb
and
push
lds
pop
loop
dec
leave
adc
aam
or
scas
call
mov
shrl
and
mov
lret
push
decb
shll
cmp
std
lahf
mov
mov
pusha
cs
mov
adc
adc
icebp
dec
inc
lock
adc
mov
cltd
dec
dec
pop
cmpsb
nop
pcmpgtb
leave
iret
sub
lods
xchg
or
sbb
cs
aad
pop
or
push
xor
xlat
fwait
mov
pop
jle
push
inc
mov
push
fimull
lret
ljmp
dec
lock
and
pop
movsl
scas
stos
mov
add
mov
inc
mov
mov
mov
mov
push
je
adc
test
cli
pop
mov
inc
mov
nop
add
jmp
jno
push
punpcklwd
cmc
gs
sbb
mov
loope
cltd
inc
dec
push
dec
lods
xor
popf
mov
outsb
popa
fnstsw
push
xchg
add
scas
pop
xor
popf
push
sub
adc
add
mov
outsb
cmp
push
cltd
or
inc
or
or
push
loopne
mov
in
xor
xor
rcl
mov
aaa
sbb
sahf
cmp
push
sarl
ljmp
lret
ret
loop
cmpsb
add
xor
data16
mov
fdivr
movsb
mov
push
or
mov
push
xchg
jge
pop
jle
jge
adc
idiv
cmpsl
pop
xchg
fs
inc
fwait
loope
pop
or
adc
out
sub
add
jo
or
pop
push
lcall
sbb
aad
cmp
jl
out
in
inc
mov
jge
outsl
or
shll
push
cwtl
sub
movsl
sub
mov
push
fldt
mov
mov
jnp
popf
and
mov
xor
hlt
sbb
xor
scas
mov
mov
gs
pop
or
loop
or
jb
xor
mov
push
je
jmp
push
push
fs
adcb
lret
adc
mov
add
jmp
test
aam
inc
pusha
test
pop
dec
movsl
sahf
push
xchg
dec
mov
or
cmpsb
or
pop
pop
cmp
pop
or
or
pop
int
fimull
mov
movsl
xor
adc
pop
testb
sub
repnz
nop
dec
stc
stc
std
mov
pop
dec
push
es
mov
fiadds
ja
pop
outsb
push
adc
in
or
mov
fsubp
sahf
outsb
les
mov
push
insb
int
fiadds
jg
cmc
mov
pop
adc
test
mov
jno
push
or
into
cmpsb
xchg
test
mov
movsb
jp
mov
sbb
sbb
pop
sbb
add
push
ss
inc
mov
inc
imul
cmc
push
push
jg
sbb
jbe
les
inc
adc
cmp
hlt
xor
xchg
movsl
xchg
das
popa
push
jbe
fst
les
xchg
mov
add
loop
sarb
cmp
xorb
or
js
sbb
jl
xchg
sub
jl
mov
add
dec
xchg
mov
hlt
cs
adc
shrl
add
das
insb
outsl
xchg
mov
push
stos
pop
std
cmpsl
pushl
xchg
add
lds
lods
sbb
pop
scas
xchg
rorb
push
sti
shll
add
or
arpl
cmc
sbbb
repnz
xchg
into
iret
jl
xchg
xorl
shll
sarb
in
test
test
popa
dec
test
sub
into
mov
add
cmp
call
movsl
add
xchg
stos
out
out
mov
dec
xor
sahf
push
push
frstor
mov
test
cmp
xor
rorl
sbb
rol
inc
jno
dec
mov
cmp
imul
insl
scas
push
or
cmp
shll
daa
subb
xor
dec
sbbl
insl
sbb
cmp
add
aas
mov
pop
and
test
or
adc
rcr
push
pop
dec
xor
ror
cmpsb
dec
mov
shll
mov
cwtl
lcall
push
mov
stc
push
cmp
jecxz
pop
sub
dec
adc
inc
mov
push
in
adc
test
push
inc
xchg
imul
mov
inc
orl
adc
or
das
sub
call
test
push
outsb
mov
jno
addl
sub
mov
inc
xchg
loope
test
lcall
mov
cmp
jbe
sub
sbb
int
adc
mov
scas
cmp
xor
pop
sub
mov
test
scas
sbb
sub
push
cmpsl
test
sub
sub
and
mov
adc
push
imul
insb
xorb
jo
xchg
adc
cmpsb
aad
int3
xchg
into
imul
sbb
sub
out
or
in
clc
lahf
and
xor
test
lahf
lock
leave
outsb
ret
repnz
and
bound
movb
cmpsb
sub
fwait
movsl
popf
mov
push
mov
mov
rorb
sbb
push
and
mov
jne
int
cmp
testl
pop
addl
orl
dec
pop
mov
cmpb
xor
repz
pusha
lcall
adc
pushf
jne
lcall
mov
jb
cli
mov
inc
test
sub
icebp
mov
inc
lods
and
iret
int3
pushf
push
push
lock
push
jnp
cmp
jge
lea
jmp
lret
lods
jl
iret
mov
repnz
push
push
cmp
jns
je
and
std
shll
sbbl
mov
leave
mov
pop
cmp
fwait
adc
faddl
out
aam
call
inc
ss
int
or
xlat
cmpsl
ljmp
xor
inc
mov
pop
pop
test
aas
fwait
scas
pop
shll
fisubrs
or
lock
sbb
inc
dec
add
rclb
das
imul
mov
lea
xchg
imul
aam
push
out
scas
int3
jmp
mov
xor
imul
lds
jecxz
jne
daa
push
cli
mov
in
mov
mov
iret
std
lret
mov
xor
mov
sarl
sbb
clc
stc
push
loope
jle
ret
sub
push
jnp
mov
inc
xlat
adc
cwtl
mov
ret
scas
push
into
out
mov
jbe
add
sbb
ljmp
fstpl
out
sub
push
daa
or
shlb
xor
sub
jnp
inc
sbb
mov
in
pop
fcom
sbb
xor
lret
cmovge
inc
sub
ljmp
in
xor
adc
stc
adcl
div
fnstcw
push
sbb
dec
add
xor
mov
gs
out
mov
sub
out
xor
xor
mov
push
mov
or
je
dec
popf
push
ret
sarb
repnz
inc
mov
int
mov
fidivrs
mov
push
xchg
xor
pop
lahf
nop
push
ljmp
inc
into
push
cmpsb
cmp
loopne
push
mov
aam
adcl
mov
in
popa
push
leave
xchg
pop
sub
adc
inc
and
jecxz
lea
jp
push
sub
add
mov
sbb
mov
andl
bound
mov
mov
dec
sub
call
stc
cltd
cwtl
imul
icebp
jg
cmp
xchg
jno
js
jmp
fsubl
aaa
push
dec
or
imul
ret
dec
cmpsl
adc
leave
cmpsl
jle
out
add
es
sub
fidivrs
mov
xchg
lds
pop
das
mov
and
push
dec
mov
rorb
inc
sub
stos
inc
in
cs
or
jmp
cmp
inc
mov
in
jo
jns
cwtl
js
lock
jge
popa
mov
xor
or
dec
stc
hlt
mov
pop
lock
or
stos
mov
fnop
cmp
dec
lahf
lahf
arpl
mov
test
rcrb
bound
sahf
adc
dec
push
gs
mov
mov
ret
mov
push
xchg
xchg
or
jle
push
add
fcompl
xchg
sbbb
sbb
test
sbb
push
and
sbb
pusha
sub
xchg
lds
fld
ljmp
daa
out
ret
push
loopne
cmp
jg
js
sbb
jbe
sbb
adc
jo
inc
pop
jns
in
gs
scas
les
sub
sti
mov
pop
add
inc
rorb
xchg
sub
and
les
std
sub
call
ficoml
cmpsb
cmpsl
jb
pushw
sub
cmp
fsubl
data16
xchg
ljmp
fstl
movsl
add
sub
push
test
sarb
lret
scas
scas
push
jle
pusha
mov
out
xor
aas
pop
add
mov
lds
sub
xor
pop
push
inc
jl
or
xchg
je
int
cld
inc
stc
mov
sbb
adc
and
in
push
iret
jnp
ret
das
loopne
repz
mov
insl
fs
inc
pushf
mov
ljmp
out
cmp
jmp
mov
dec
cmp
mov
inc
cmpl
int
fldl2t
adc
ja
pop
stc
adc
sti
mov
out
ret
mov
icebp
or
enter
sub
xchg
sbb
xor
leave
loope
mov
jg
lock
push
xor
pop
xchg
into
add
add
cmpsl
addb
pop
dec
xor
out
dec
inc
andb
push
sub
std
push
sbb
in
jecxz
and
xchg
push
xchg
pusha
mov
sbb
or
cwtl
enter
outsl
ret
cwtl
sbb
stos
sti
sub
pop
or
ret
sub
sbb
ret
jmp
les
mov
orl
pop
filds
out
mov
mov
stc
in
xchg
xor
mov
ss
mov
stc
inc
mov
imul
lock
and
pop
popf
jg
sub
ds
sbbl
xchg
out
sub
or
rorl
filds
pop
push
sub
outsb
jl
pop
mov
jecxz
or
mov
sarb
jle
test
dec
sub
loope
jp,pn
mov
sbb
add
sbb
xchg
cs
stc
andb
paddsb
push
in
push
loopne
outsl
sub
loopne
packsswb
and
add
xchg
sbb
lret
jnp
or
inc
icebp
js
push
lds
mov
aam
sahf
xchg
jle
mov
cltd
sbb
nop
hlt
stos
stos
add
subb
ja
cmp
inc
xchg
leave
or
imul
push
fs
xcrypt-ofb
cmpsl
xlat
int3
cli
mov
sbb
mov
add
and
sub
sti
pusha
add
stos
adc
xchg
sbb
sub
mov
xlat
cmp
shlb
lret
out
out
and
sbb
sub
push
adc
push
jns
pop
mov
jle
dec
sbb
fstl
popf
dec
mov
mov
xor
add
cmp
mov
xor
aam
lea
aaa
lea
xor
push
mov
daa
aam
pop
ja
sbb
push
xchg
jo
push
lea
add
mov
idivl
mov
cwtl
nop
sbb
push
xchg
sub
icebp
add
mov
int
mov
add
jnp
push
sub
lea
ss
ljmp
lcall
shlb
mov
inc
ss
jmp
dec
outsl
jp
cmpsb
int
xor
mov
or
ror
in
mov
faddp
jge
icebp
lea
cld
dec
sub
mov
je
shll
loop
mov
inc
cmc
cli
adc
adc
cmp
adc
xor
pop
fsubs
bound
and
pusha
sbb
inc
cmp
int3
xchg
mov
icebp
pop
lahf
xlat
ret
and
xor
addr16
enter
leave
or
mov
enter
pop
lcall
cs
cld
sub
sub
adc
test
arpl
pop
cmc
pop
xchg
test
pop
jno
pop
repz
pop
fildl
insb
cmp
out
pushw
push
shll
sub
or
mov
xor
add
subb
cmpsb
bswap
sbb
adc
push
push
jecxz
push
mov
pusha
sarb
mov
sub
lock
leave
cwtl
bound
imul
mov
dec
mov
das
leave
ljmp
icebp
cmc
out
adc
sbb
pop
or
mov
sbb
dec
sbb
push
hlt
pop
pop
push
leave
nop
pushf
out
in
and
mov
ret
sub
pop
xor
sahf
mov
jb
out
sahf
inc
or
dec
jecxz
lock
popa
cmpsb
jb
push
push
ljmp
incl
sub
sbb
inc
aas
hlt
orl
stos
arpl
jp
fsub
leave
cmp
xor
jge
fs
flds
jle
fmull
aas
in
lds
adc
cltd
dec
xchg
lock
push
mov
or
arpl
std
shrl
mov
aad
dec
inc
and
mov
imul
stos
scas
jae
jns
call
mov
int3
push
jecxz
cmp
sub
mov
pop
stos
ret
repz
pop
insl
jne
inc
push
dec
pop
in
cli
adc
iret
xor
cmpsb
push
pusha
fwait
add
loope
jne
push
cltd
and
stc
std
outsl
mov
stos
lds
adc
or
ja
jae
cmpsl
lock
fdiv
in
out
pop
push
sbb
cmp
jmp
fcmovnu
call
arpl
loop
repnz
mov
sbb
jno
jecxz
xchg
jle
mov
int
fsubrl
sbb
nop
popa
movsb
mov
pop
sbb
test
adc
push
xchg
scas
out
cmp
lock
out
out
pop
inc
sbb
pushf
inc
lret
cld
mov
xchg
fs
shll
mov
nop
lret
adcb
fnsave
sbb
mov
fucom
mov
mov
cmpb
int
sbb
push
mov
into
mov
mov
loope
mov
add
inc
jg
adc
xlat
leave
out
push
cmp
mov
xor
mov
inc
fnstenv
and
sub
cltd
iret
pop
mov
jle
fisubl
in
inc
bound
lret
mov
in
jns
push
fstps
cmp
int
push
jno
stc
mov
rorb
ljmp
les
cmp
andb
push
ljmp
sub
inc
aad
sub
cmc
adc
fadds
cs
into
in
fdivl
mov
lret
inc
sbb
mov
jecxz
cli
or
aas
xor
cmp
xor
lock
lea
push
fldl2t
rol
sub
fmuls
mov
cmp
fidivl
pop
cmp
leave
rclb
mov
mov
fadds
cmp
test
xchg
cwtl
add
mov
dec
xor
pop
fldenv
xchg
repz
pop
push
es
add
insl
or
shll
jno
mov
inc
cmp
iret
lods
or
xorl
mov
add
mov
add
inc
add
dec
gs
sbb
fsubl
ficoms
in
mov
pop
rdpmc
dec
mov
sbb
cmp
lret
test
pop
pop
out
cwtl
jle
mov
fadds
sub
xchg
push
add
sub
cli
dec
inc
pop
xor
lea
sbb
or
dec
or
mov
push
or
lock
lret
shlb
or
push
cwtl
ljmp
dec
out
in
sbb
dec
mov
xlat
std
imul
or
bound
dec
fisubl
push
mov
sbb
pushf
push
xchg
and
std
mov
fmuls
mov
fsubs
iret
into
inc
fists
jnp
inc
stos
adc
pop
push
addr16
adc
cld
cmc
dec
adc
sub
insb
and
data16
aam
mov
aad
in
test
and
loop
fwait
pop
and
push
jge
lea
bound
call
push
and
lds
mov
pop
mov
ljmp
orl
xchg
xor
sbbl
pop
cmpsb
mov
das
cwtl
xchg
cmp
test
shl
in
sub
mov
cwtl
ret
test
xchg
push
pop
add
stos
xchg
out
loope
shlb
jg
cs
push
dec
mov
jne
mov
jecxz
in
pop
jle
or
shr
inc
getsec
xchg
sub
fildll
xchg
xchg
outsl
mov
or
fmull
adc
adc
das
mov
and
inc
push
mov
int
cmp
mov
aam
cmc
jb
pushf
std
xchg
pushf
add
in
lahf
xchg
mov
jo
and
loopne
pop
out
fisttps
dec
loope
loope
mov
sbb
ret
and
inc
add
jge
stc
fiadds
mov
enter
fwait
dec
sub
mov
imul
shlb
int
fwait
push
mov
adc
repz
dec
mov
int
mov
jmp
test
loop
inc
add
sub
rcrb
dec
xor
orl
out
push
ds
jae
fimuls
or
cli
out
hlt
xchg
mov
gs
insl
xor
pop
cmp
pop
std
nop
xchg
sbb
ljmp
jp
mov
cmp
les
adc
gs
add
ds
inc
pop
das
pop
dec
jnp
and
fisttpll
loope
jbe
mov
scas
push
mov
scas
pop
cmp
xor
int
dec
test
fmul
push
pop
or
adc
in
push
fcmove
or
jp
popf
sub
scas
and
lcall
les
decl
inc
dec
call
lea
filds
and
rcrb
cltd
mov
daa
ljmp
adc
fs
pop
in
mov
aam
rolb
sti
ss
divb
pop
jecxz
testb
lret
into
adc
mov
xor
in
orl
or
mov
sbb
insb
clc
fwait
xchg
pusha
dec
cmp
push
inc
movsl
out
nop
mov
cmp
inc
push
in
push
lods
iret
adc
loop
scas
frstor
or
cmp
nop
inc
fnstcw
icebp
ret
adc
push
dec
jl
adc
sbb
rcrb
je
int
movsl
pop
ret
sbb
push
jmp
in
cmp
aas
jb
sbb
inc
mov
adcl
xchg
repz
sbb
pushf
loope
mov
sti
sub
pop
rcrb
pop
mov
in
je
clc
stos
loopne
lret
fdivr
loop
movsb
mov
icebp
pop
addb
jle
jle
stos
cmp
pop
jno
cmp
sub
or
mov
test
mov
or
lahf
and
xchg
pop
xchg
xor
sbb
cltd
bound
add
jmp
out
push
jecxz
aas
xchg
pushf
xor
add
xor
push
sbb
bound
ja
dec
setno
xchg
dec
sub
push
dec
xchg
aaa
scas
inc
sub
sub
fmul
jmp
int
jle
dec
sarb
pop
ret
ret
pop
cmp
out
sti
add
ret
aas
frstor
jb
mov
jno
mov
int3
xor
pop
jge
adc
cmpb
fisubs
mov
fs
push
into
scas
arpl
mov
pop
movl
mov
ja
fs
call
add
mov
lahf
mov
imul
inc
jmp
xchg
xchg
ficoml
sub
mov
push
divb
dec
negb
lret
push
pushf
mov
inc
mov
in
dec
xor
enter
aad
outsl
dec
sbb
push
jl
sub
lods
into
loopne
mov
or
cli
imul
pop
movsb
das
mov
in
scas
inc
xchg
outsb
div
adc
cs
push
adc
testb
mov
pop
inc
clc
bound
stc
mov
arpl
cmp
cmp
test
inc
pop
lret
push
sub
sub
sub
add
mov
sub
add
xor
in
ljmp
cld
outsl
popf
stos
inc
adc
addr16
push
push
jnp
fsts
push
lea
fdivrl
hlt
repz
mov
dec
xchg
mov
imul
push
add
xlat
mov
sbb
rolb
loop
out
es
jne
pop
inc
in
xorl
pushf
lret
xchg
test
adc
out
pop
pusha
cmpsb
andl
pop
push
mov
fisubs
inc
xor
add
out
mov
mov
sub
popa
ret
fwait
sub
sub
jne
adc
sti
and
mov
cmp
insl
roll
ja
call
mov
sbb
cld
mov
push
jmp
jne
or
sbb
out
movsb
and
lock
mov
rcll
stos
xchg
mov
sub
les
mov
cli
pusha
pop
fildll
push
popf
xchg
ljmp
call
leave
and
fidivs
xchg
pop
ds
and
sbb
and
incb
arpl
adc
inc
xchg
fldcw
or
fcompl
mov
orl
xchg
xchg
rorb
ficompl
mov
mov
test
adc
xchg
xor
mov
cmp
lock
repnz
arpl
and
cwtl
mov
leave
stc
lahf
inc
movsl
lahf
or
xor
pusha
rorb
push
mov
repnz
lahf
push
lea
add
or
les
scas
mov
out
xor
jl
cmpsb
inc
push
nop
sarl
int3
jge
sub
test
stos
and
sub
mov
add
ret
fwait
shrl
sbb
jne
or
iret
add
or
cmp
int
or
movsl
sub
dec
inc
and
mov
ss
inc
lock
xchg
and
fwait
into
test
fmuls
fsubrs
test
sbb
adc
dec
pop
test
rcr
sub
add
mov
mov
push
mov
mov
cmp
fwait
aad
mov
insl
adc
mov
les
clc
sub
sbb
fnsave
mov
and
data16
test
loope
sub
lcall
fnstsw
aaa
cwtl
adc
test
cmp
mov
sbb
push
push
pop
sbb
fbld
and
xchg
adcl
xor
push
or
xlat
addb
lcall
lcall
mov
stos
jnp
aam
in
push
pop
push
sbb
jns
jle
jle
dec
pop
pop
mov
inc
out
pop
rorb
dec
inc
pop
or
pop
loope
add
push
leave
xchg
fnstcw
orb
lahf
test
jno
xchg
jg
in
cmpl
out
dec
fdivs
mov
hlt
stos
mov
arpl
int
cmp
icebp
push
mov
sub
add
sub
sub
mov
mull
sahf
xor
mov
sarb
aas
mov
jno
imul
movups
test
dec
or
xor
xchg
hlt
daa
int3
adc
sbb
or
ficoml
xchg
subps
data16
clc
scas
jle
jmp
jmp
xchg
mov
rcrb
fistps
mov
frstor
scas
pop
cmp
adc
sbb
rcll
popa
fsubs
jle
dec
js
xor
aad
mov
mov
std
rolb
or
pop
subb
adc
cli
loope
mov
or
mov
in
stc
mov
adc
jns
mov
loop,pn
icebp
mov
jnp
add
or
repz
jl
or
cmp
xchg
mov
arpl
mov
popf
data16
mov
xor
and
lock
pop
addr16
pop
and
mov
adc
sub
inc
push
cmp
cld
pop
jle
sub
ds
mov
sbb
push
jnp
pushf
mov
sub
fucomi
lcall
xchg
jnp
mov
push
mov
arpl
mov
xchg
loopne
in
add
iret
inc
pop
and
inc
mov
and
or
inc
inc
stos
mov
add
sub
jl
lret
popa
pop
jle
mov
icebp
cs
pop
inc
mov
fdivr
in
xor
pop
fwait
cs
push
nop
mov
cmp
test
dec
fs
push
sub
outsb
ds
dec
divb
push
shll
lods
test
mov
or
sub
cmp
adc
ret
inc
mov
cmpsb
mov
in
jno
mov
ss
sbb
fstps
lahf
jne
je
cmc
mov
dec
add
add
push
mov
pusha
cmp
xor
std
popa
inc
bound
lods
iret
inc
mov
inc
rclb
cmp
arpl
rorb
lahf
cmp
add
arpl
scas
cli
test
cmp
dec
sub
fdivrs
push
testb
xchg
sbb
push
iret
daa
ret
xor
mov
lods
fwait
mov
repz
insl
lods
sarw
sub
mov
daa
scas
ficompl
loopne
int
outsb
fistl
dec
rolb
int3
xor
mov
outsb
in
lcall
pusha
push
test
outsb
adc
cmp
pop
jg
or
out
sub
sti
mov
sub
and
adc
icebp
leave
shlb
aad
jno
jle
notl
test
xor
int
lods
or
push
leave
shll
xor
mov
gs
push
jmp
add
sbb
jo
in
cmp
into
dec
and
and
cli
imulb
sbb
lods
adc
mov
add
mov
jl
loope
inc
jge
fcmovnbe
dec
jo
or
pop
xlat
jecxz
or
cld
lods
into
das
xchg
ljmp
mov
mov
jle
sahf
pop
bound
cwtl
je
in
mov
sub
sub
xchg
and
in
int
jecxz
adc
inc
and
ficomps
pop
pushf
push
cmc
sahf
mov
fists
mov
mov
mov
pop
jl
adc
ret
cmp
xchg
repz
inc
mov
pop
notl
mov
fnsave
pusha
inc
pop
xor
repz
pop
insl
fnstsw
movsl
push
icebp
cmp
xor
mov
lea
jb
cmpsb
mov
cmpsl
sar
sarl
mov
rcrl
jns
push
lahf
mov
mov
jl
lret
scas
or
das
add
subl
pop
dec
mov
sbb
cmp
scas
mov
jbe
jp
inc
aam
sub
shr
push
mov
or
sub
lock
orl
iret
add
imul
addr16
dec
push
stos
fimuls
aaa
xchg
push
adc
fimuls
imul
inc
sbb
pop
popf
cwtl
add
push
out
pop
lock
adc
inc
xorl
int
pop
lcall
lock
pop
xchg
jmp
js
fiaddl
mov
int3
or
dec
xor
jecxz
cld
loopne
loopne
out
cld
or
adc
push
sub
loop
xor
push
sub
ss
adc
jge
xchg
cwtl
mov
or
add
mov
xchg
lcall
cmc
mov
vmovdqu
jns
fnstcw
out
dec
in
insb
xbegin
sbb
insl
fwait
pop
jl
jge
popf
dec
mov
mov
test
dec
mov
divb
xchg
out
fs
cld
pop
cli
xor
pop
mov
sahf
lods
sarl
repz
sub
shll
jl
and
pop
in
jge
jbe
mov
jae
or
ja
xchg
mov
pop
xchg
movsb
ret
push
pop
js
cs
sub
cmp
pop
testl
ss
sbb
jbe
data16
xor
mov
std
js
out
jecxz
cmc
jl
add
lods
dec
sub
cltd
idivl
loop
scas
xor
sbb
push
lods
lods
add
and
add
add
cmc
add
ret
dec
pop
lcall
clc
lret
mov
movb
dec
aas
sub
test
pop
out
add
je
xchg
arpl
cmc
neg
mov
aam
loop
mov
rcrb
addb
or
loopne
adc
sbb
je
enter
pop
mov
or
movsl
outsl
or
es
sub
popa
je
mov
xchg
add
sub
or
jmp
cmpsb
mov
aam
xor
cmp
push
xorb
jno
jp
scas
pop
pop
push
mov
arpl
lret
and
push
or
bound
fmul
pop
push
clc
filds
loop
or
dec
sbb
jmp
cmpsl
inc
pop
xchg
push
ljmp
icebp
cmp
cmp
jne
clc
shll
jge
adc
adc
idivb
sahf
pop
and
in
aam
jae
fiaddl
addb
shrl
ja
push
stc
pop
imul
orl
out
jle
mov
push
sbb
cmpsb
xchg
mov
std
lret
cs
jne
cmpsl
andb
shr
icebp
fdivrs
mov
out
sti
jne
mov
je
cmp
sbb
xor
push
push
les
lds
adcb
sti
jnp
mov
mov
icebp
add
push
emms
repnz
sti
test
push
push
test
test
aaa
adc
test
mov
mov
fcoms
ret
pop
lret
and
cmp
hlt
cmp
aad
into
push
out
daa
les
adc
cmpb
movsb
inc
push
lods
jge
arpl
fwait
xor
inc
cmp
lock
and
jp
sbb
out
pop
mov
mov
adc
shlb
adc
sub
rorb
mov
testl
sbb
lahf
lcall
fcmove
add
jle
mov
adc
xor
jb
scas
or
pop
pusha
sarl
jmp
addr16
dec
push
xor
das
inc
rorb
jne
push
call
sub
inc
push
mov
mov
lahf
cmc
addr16
aaa
sbb
add
out
mov
gs
cltd
inc
pushf
xor
pop
xlat
cmp
or
aam
jne
fisubl
adc
lcall
push
and
mov
leave
push
dec
add
in
mov
pop
xchg
sub
pcmpgtw
push
faddp
ja
push
mov
sub
outsl
xchg
jbe
imul
mov
inc
mov
subb
xchg
iret
dec
fcompl
dec
dec
test
stos
xchg
xchg
enter
xor
adc
dec
adc
sub
decb
pop
xchg
mov
repnz
cld
push
pop
fisttpl
pop
xchg
sub
lahf
gs
js
cmpsl
add
add
subb
out
mov
adc
pop
enter
mov
xor
in
jle
push
add
mov
aad
daa
xchg
mov
insb
or
sub
sub
sbb
mov
notl
rcrb
add
or
dec
mov
int3
mov
hlt
xchg
addb
aad
daa
fiaddl
insb
mov
ss
sub
iret
hlt
subl
cmp
aas
mov
and
insb
mov
stos
and
and
mov
iret
adc
xchg
lret
push
in
in
jo
inc
ljmp
imul
in
aaa
sub
clc
fisttpl
mov
lds
outsl
cwtl
das
mov
loopne
test
daa
xchg
stos
jnp
pop
aam
jne
push
es
cs
cmp
xchg
in
cmpsl
mov
ja
fstpt
popf
xor
xchg
jg
test
push
xor
sbb
test
mov
nop
pushf
sbb
fimull
push
andl
adc
add
shl
shlb
nop
insb
jmp
adc
xchg
xchg
imul
ficompl
cwtl
cmpsb
adc
adc
shll
popa
clc
inc
jne
loop
push
push
cmc
movntps
adc
js
add
dec
mov
mov
sub
test
shrb
iret
lock
adcl
leave
out
inc
mov
fwait
dec
inc
filds
sbbb
cmp
cld
mov
out
dec
jo
int3
fists
fildll
or
mov
jmp
shrd
clc
jecxz
dec
cmp
inc
pop
cmpsb
pusha
negb
jns
neg
xor
add
jo
xchg
js
imul
pop
fnstenv
inc
lahf
roll
and
aam
loopne
sbb
fstps
cmp
cmp
rclb
mov
ljmp
or
jecxz
lret
add
mov
adc
and
lret
loop
inc
ds
movsb
outsl
and
in
jno
sahf
jl
scas
sub
into
leave
sub
mov
sub
or
add
xlat
test
aam
cmp
adc
push
dec
in
mov
push
sbb
sahf
add
lret
adc
xchg
pop
rorl
xor
sbb
mov
shrb
mov
mov
test
hlt
xchg
fldl
and
push
adc
or
jne
mov
sbbb
shl
add
mov
xor
inc
out
pop
iret
sbb
into
out
jns
icebp
mov
xchg
cmp
pop
sub
ja
xor
loopne
pop
push
sub
push
xchg
dec
cli
and
jecxz
cmp
notl
addr16
test
xchg
jle
aam
push
into
inc
xorb
adc
out
jl
adcl
enter
stc
mov
lcall
mov
cmp
inc
xchg
inc
stos
jae
bound
ja
vmovntps
repnz
cmp
or
xchg
add
jp
inc
std
iret
mov
inc
xchg
xchg
popa
pushf
das
sbb
sarl
lods
push
fstpt
addr16
pop
sub
push
and
ffree
sbb
inc
push
mov
movsb
push
outsb
inc
xchg
in
cmp
rolb
cmp
sahf
jecxz,pt
adc
ror
or
sbb
cmc
hlt
push
mov
loope
fsts
jno
insb
jns
jnp
inc
cmp
sbb
sarb
cmp
test
hlt
sub
cld
or
dec
imul
cmp
jae
xor
and
aam
addr16
mulb
push
mov
dec
lds
movsb
aas
inc
jo
cmc
xchg
pop
pushf
jne
mov
jp
rclb
sub
sub
ret
add
adc
push
cli
clc
orl
cmp
rcrl
xchg
movsl
aad
inc
ja
pop
sbb
test
mov
iret
fwait
and
mov
push
aas
scas
cmp
mov
dec
rcll
test
mov
int3
push
movsl
lret
into
mov
cmp
jl
mov
jge
jg
inc
loop
push
mov
mov
mov
adc
mov
leave
nop
and
popa
xor
je
fadd
loopne
sbb
xor
icebp
out
es
xchg
pop
mov
add
aam
movsl
jge
inc
xor
add
std
lahf
push
mov
repz
xchg
cltd
int
decl
sbb
and
xor
out
jl
mov
mov
je
mov
pop
cld
and
mov
addr16
cmovo
push
lock
inc
rep
gs
mov
jge
add
inc
mov
pop
gs
sub
xchg
xor
lods
xchg
and
in
stc
iret
ss
scas
hlt
and
adc
cmpsl
add
mov
rol
cmpsl
and
out
cs
daa
or
pop
lods
jbe
dec
movsb
inc
ja
adc
xor
cs
xchg
jb
fildl
repnz
mov
filds
jecxz
sbb
faddp
adc
scas
mov
daa
lock
pop
push
imull
jle
fistps
xor
mov
scas
in
cmc
xor
ljmp
decb
add
movsb
movsb
inc
insl
cwtl
icebp
jb
pop
lock
lods
jo
ss
mov
mov
cmp
jl
xor
push
or
cmc
ret
dec
inc
jecxz
fistps
mov
ret
popa
dec
mov
push
mov
insb
call
and
inc
jne
mov
jo
inc
dec
out
xchg
nop
std
outsb
cs
mov
pop
mov
mov
mov
jbe
int
fbstp
jno
lods
or
ljmp
scas
or
inc
jne
fistpll
xor
ss
cmc
leave
in
sti
in
lods
addr16
push
jno
xchg
int
xchg
addr16
mov
jl
jmp
sub
jae
mov
and
push
cmpsb
mov
mov
push
mov
xor
fadds
in
sub
movsl
lcall
sti
mov
and
mov
push
mov
add
cmp
cwtl
cld
sahf
hlt
adc
enter
xor
fucomip
sbb
or
push
lcall
mov
mov
dec
ret
imul
push
mov
dec
stos
ja
scas
pop
dec
sub
shlb
jecxz
in
cmp
pop
xor
ds
mov
sub
jg
ljmp
inc
mov
cs
scas
in
scas
push
lds
and
add
xchg
data16
sti
pop
jecxz
sbb
neg
sub
pusha
xchg
push
mov
aaa
mov
int
add
mov
inc
ss
mov
cmp
xchg
in
dec
rcrl
fmul
bound
push
pusha
scas
shl
out
sbb
and
rcll
pop
sbb
mov
push
adc
xor
add
xor
test
lods
mov
std
cwtl
fnstenv
xchg
sub
and
push
aam
add
xchg
push
mov
ja
enter
cld
in
outsb
fcoms
dec
sub
in
dec
pop
das
mov
pusha
push
jecxz
mov
adc
mov
mov
pop
in
pop
movsl
xor
sahf
loopne
in
out
dec
inc
fwait
pusha
into
and
or
mov
dec
cli
mov
cmp
out
xchg
enter
cmp
dec
mov
aam
xchg
je
out
subl
adc
aad
dec
das
fiadds
mov
ja
xchg
push
sub
fildl
mov
enter
in
idivb
fs
push
pop
jo
jle
and
jle
push
jnp
jb
clc
adc
cwtl
or
fildll
aas
sarl
xor
push
xchg
loope
aam
lods
dec
dec
pop
movsl
lret
push
xchg
jmp
in
js
loopne
fwait
sbb
lcall
adc
outsb
mov
mov
or
imul
and
repz
nop
adc
push
mov
pop
jle
mov
jg
xlat
jne
add
pop
int3
sub
imul
rorb
enter
and
pop
stos
ss
sub
sbb
xchg
add
adc
lods
pop
std
add
add
xor
inc
xor
pop
add
aam
pop
jbe
xlat
stc
adc
les
add
fdivr
adc
add
shlb
push
lcall
in
hlt
test
testl
sbb
lock
xor
push
daa
mov
jge
dec
cld
xor
add
xchg
lock
and
std
xor
inc
lea
pusha
test
lcall
mov
mov
xchg
mov
or
aas
das
into
dec
add
push
sbb
testl
pop
inc
imul
or
mov
inc
push
mov
pusha
jmp
lahf
idiv
xor
inc
movsb
movsl
add
sti
xor
js
lret
sbb
adc
pop
stos
xlat
inc
stos
sahf
or
sub
dec
out
sbb
lods
aam
pop
in
je
sbb
loope
inc
or
dec
stc
sti
dec
jae
xor
pusha
in
or
iret
inc
mov
mov
adc
out
test
pop
insb
sbb
nop
add
sarl
jl
mov
sub
xlat
xchg
push
je
or
mov
in
pop
jg
mov
inc
cmp
das
jno
xor
popa
sub
cmp
cmc
sbb
ja
cmp
inc
add
pop
outsl
push
pop
fpatan
into
lods
mov
jns
pop
test
repnz
cmp
nop
and
sbbb
xchg
inc
sbb
movsb
arpl
push
lds
aad
jb
and
and
inc
je
adc
sub
rorb
mov
xor
std
mov
adc
xchg
mov
jb
int
fists
mov
mov
mov
pop
fsubs
movsb
pop
cmp
je
mov
xor
gs
pop
inc
pushf
add
das
shlb
xchg
rcll
cmp
cmp
std
push
lret
mov
cmc
jne
pop
pop
push
or
pop
jl
cmp
inc
push
and
push
scas
daa
psrld
sbb
stc
pop
cltd
loop
into
mov
loop
sbb
mov
movlps
mov
jae
sbb
jbe
pop
jmp
bnd
in
inc
sti
inc
push
neg
stos
lds
push
les
lods
mov
and
and
xchg
stos
jmp
or
jns
ficomps
lahf
lods
jnp
ss
fildl
gs
adc
movsl
jle
fldt
cltd
les
cmpsl
xchg
rcrb
dec
pop
movsb
lods
and
sbb
sub
push
push
cmp
in
hlt
iret
jne
test
popf
jecxz
std
outsl
fcomp
push
jl
ss
push
xor
lods
push
xor
push
pop
and
movsb
mov
mov
add
dec
mov
xchg
inc
lret
test
lret
push
cmp
sbb
jg
les
lcall
jbe
sub
insb
mov
xor
aad
or
adc
sub
push
xlat
stos
adc
inc
aaa
cs
xor
pushf
dec
js
mov
scas
sub
fidivl
dec
imul
ret
mov
loopne
cmp
mov
sbb
movsl
and
hlt
int3
and
dec
lds
sub
loop
pop
mov
pop
imul
fbld
mov
insb
arpl
adcb
sbb
lods
mov
adc
sbbb
inc
push
push
and
loop
add
sub
inc
pushf
or
jae
or
add
ljmp
mov
push
and
push
jl
push
adc
je
push
xchg
cmp
pop
aaa
loopw
je
push
adc
dec
popa
lods
or
popa
inc
jmp
test
rclb
add
cld
fistps
out
sub
mov
shl
jecxz
and
fstl
inc
push
bound
sbb
paddsb
inc
xchg
inc
push
pop
mov
ss
imull
mov
stos
lret
mov
loopne
mov
das
jbe
jl
mov
dec
jge
mov
xchg
jne
sub
flds
gs
out
sar
mov
pop
inc
mov
jl
push
int
sbb
lret
pushw
xor
sbb
mov
push
jmp
inc
pop
stc
mov
out
es
js
je
lahf
js
mov
or
lods
icebp
sub
insl
sbb
xchg
jg
nop
xor
push
add
fcmovne
pushl
xor
ret
jp
mov
pusha
ror
add
popa
es
js
popa
jb
jp
inc
sub
les
xor
jbe
jg
mov
cmp
pop
andl
mov
cmp
inc
popa
cmp
cltd
lahf
or
mov
and
push
pop
pop
pop
outsl
push
mov
shlb
aaa
and
mov
dec
mov
adc
ret
cltd
sahf
rol
and
fs
adc
sahf
popf
fstps
jns
push
fidivrl
xor
dec
les
into
test
pop
mov
pop
mov
dec
ljmp
xlat
mov
out
test
add
lret
inc
xchg
push
and
mov
fsubp
addr16
testl
test
adc
adc
xchg
adc
mov
inc
scas
and
bound
push
inc
insb
into
lahf
in
jbe
loope
shrb
call
mov
xchg
pop
dec
push
pop
stos
lods
lods
dec
shl
push
and
int3
push
addb
outsl
addl
adc
loop
xor
test
sti
dec
jp
movsl
fwait
inc
aam
mov
cmpsl
into
xor
xchg
or
xlat
xor
mov
imul
mov
rorl
lahf
shrb
test
sbb
mov
aam
stos
mov
ja
sbb
jmp
jl
icebp
cmpsb
xchg
or
pop
jbe
enter
push
dec
inc
cltd
sbb
cmp
mov
repnz
mov
outsb
and
sub
xchg
outsl
mov
push
aam
sub
dec
adc
scas
rclb
icebp
adc
imul
mov
insb
insl
mov
and
inc
mov
and
sbb
dec
loop
jb
stos
clc
addb
inc
cmp
jbe
dec
outsl
dec
in
imul
inc
mov
dec
outsl
or
xchg
je
int3
push
sbb
mov
jmp
inc
mov
jp
mov
pop
mov
lea
sti
cld
rol
je
xchg
cmp
pop
ja
xor
sbb
mov
rolb
testb
out
sub
push
scas
lret
jl
cmp
or
pop
test
out
arpl
or
lahf
sbb
inc
fsubp
dec
idiv
enter
shll
loop
push
jle
sbb
jg
in
mov
loopne
js
jne
lock
lcall
lods
std
mov
pop
es
aad
and
push
insl
pusha
jne
mov
cmp
xchg
add
mov
sarl
je
roll
dec
or
jmp
and
rcrl
adc
dec
sub
inc
paddd
fimull
mov
ds
push
dec
mov
rcrl
push
add
nop
pop
jmp
std
std
mov
xor
fs
dec
xchg
cli
repz
iret
into
jns
in
xchg
xchg
sub
jne
push
std
cmp
ss
cli
rcrb
adc
scas
push
mov
int3
sub
adc
shrl
mov
sub
outsb
outsl
jmp
pop
lahf
movsl
dec
cmp
shll
xor
cmpl
push
rcll
hlt
and
into
sbb
testb
je
xchg
mov
or
push
xchg
and
cmp
rsm
xor
sbb
rorb
cmp
stos
cmp
ljmp
mov
push
int
sub
push
pop
xor
fistpll
xor
mov
xchg
or
sti
call
popf
sbb
gs
test
xchg
imul
je
movsl
xchg
mov
rcl
cmpsb
sbb
xchg
sbb
mov
or
test
dec
fdiv
inc
sti
cwtl
push
sub
sub
test
mov
xchg
or
lock
fiaddl
leave
sub
push
pusha
hlt
test
mov
lods
je
aas
jne
popf
push
mov
pop
pop
jo
mov
out
dec
sbb
xchg
push
pop
lret
sbb
sahf
mov
jg
rorb
icebp
lret
inc
xchg
or
xor
push
int3
xchg
or
shlb
adc
repnz
mov
and
loop
cmp
mov
add
adc
mov
sbb
or
or
inc
ret
mov
cmp
mov
inc
repnz
addb
add
sub
cmpsl
or
frstpm(287
inc
cld
sub
cmp
inc
mov
in
pop
lret
fldcw
mov
mov
ss
xlat
rcrl
imul
mov
and
roll
xchg
cltd
aad
xchg
cmp
ljmp
pop
cld
mull
mov
sbb
mov
insb
jmp
push
and
enter
jl
lret
bound
jle
ja
test
cmc
stos
add
cmpsb
adc
pusha
lods
out
inc
xchg
sbb
shlb
pop
inc
dec
mov
aas
mov
push
pop
xchg
fs
cld
adc
hlt
enter
gs
cmp
je
enter
cld
dec
mov
pop
dec
xchg
sbb
ja
jl
jle
mov
mov
fs
sbb
jmp
lret
adc
mov
adc
cld
dec
pushf
leave
movsl
or
dec
pop
sbb
insb
pusha
and
adc
movsb
dec
sub
mov
sub
xor
les
divb
sbb
bound
pop
jo
fcomi
inc
dec
das
imul
fnsave
imul
mov
jno
clc
pop
loope
addr16
jae
pop
lds
sbb
adc
enter
icebp
sub
mov
pop
cwtl
sbb
pusha
pop
into
popf
mov
popa
push
int3
fdivp
add
and
out
mov
mov
loop
pop
hlt
bound
jnp
frstor
nop
pop
jle
loopne
scas
adc
pop
das
loopne
push
pop
push
dec
fisttpll
arpl
adc
push
xor
jo
pop
fdivl
test
cli
pop
inc
out
inc
in
lods
dec
adc
idivl
call
es
xchg
pop
dec
xchg
mov
cs
mov
cltd
xchg
or
xchg
add
sbb
in
sub
cmc
mov
ja
into
mov
mov
pop
or
test
fnstcw
lea
cli
pusha
ficoms
mov
int
push
and
aaa
subb
incb
jnp
and
lcall
push
aas
lret
push
gs
add
test
idivl
mov
ret
xchg
xchg
shrb
std
push
sub
cmpsb
out
mov
jno
iret
mov
sub
xor
sub
mov
rolb
sub
mov
imul
cmpsb
mov
dec
lock
dec
fcom
lahf
mov
sbb
loopne
lahf
cmc
fs
out
mov
ds
dec
push
xor
add
push
pop
shrl
xorl
mov
sub
dec
orb
sub
pop
test
cmp
cld
jno
or
jo
mov
add
hlt
lret
in
and
incl
xchg
or
pop
divl
dec
mov
outsb
popf
dec
shl
mov
sub
mov
jno
aam
mov
out
sarl
orl
sahf
dec
lds
push
inc
pop
mov
movb
outsb
dec
sbbb
or
js
addr16
and
jno
cmc
rcrl
and
mov
das
dec
gs
pop
fbld
jns
call
lcall
push
pop
int
scas
pop
rolb
push
ss
inc
sbb
mov
inc
cmpsb
dec
add
add
dec
shll
xor
add
in
cmp
cmc
xor
loop
ret
jp
and
mov
jmp
pop
mov
inc
cld
dec
fisttpl
push
das
lock
adc
fildl
insb
inc
in
mov
or
stos
sub
in
lods
cmp
pop
mov
popa
cmpsl
or
adc
xor
mov
arpl
adc
jne
push
and
arpl
sub
ljmp
cs
adcl
pmulhw
dec
fcmovu
cmp
jae
xor
add
push
and
addb
xor
dec
xchg
dec
xor
push
popf
xchg
jno
fstl
jge
popa
ficompl
inc
pop
hlt
aas
outsb
fprem
xchg
cltd
out
dec
pop
sub
js
pmullw
xchg
mov
jecxz
jns
mov
fnstenv
pushf
add
mov
mov
mov
aam
repz
sti
inc
adc
mov
pushf
and
and
jge
mov
mov
inc
mov
pop
sbbl
insb
hlt
bound
add
push
ret
jmp
adc
fs
jl
push
jo
int3
inc
jb
stos
adc
outsl
and
mov
cmpl
fistl
stc
pop
add
push
sbbl
sbb
ds
mov
dec
jg
outsl
mov
fs
lcall
out
inc
mov
jp
jne
dec
in
dec
inc
les
jne
lods
sub
test
cmp
into
sbb
dec
pushf
xchg
clc
and
iret
loop
xchg
leave
mov
scas
imul
add
rol
add
icebp
mov
imul
xor
push
aam
popa
lods
mov
ljmp
aam
loop
cmp
sbbl
xor
cltd
lds
test
push
sahf
cli
mov
adc
xchg
or
push
imul
mov
mov
mov
inc
test
ds
sbb
stos
lock
lock
rcll
jbe
pop
inc
sub
pop
mov
xor
leave
addl
xor
fdivrl
or
loop
pop
cmp
in
je
repnz
rorl
dec
movb
or
dec
aaa
cmp
mov
dec
outsl
nop
rorb
push
imulb
push
jae
pushf
add
out
test
inc
outsl
push
cmpsb
xorb
addl
mov
int
roll
mov
jecxz
pop
mov
push
push
rcrl
shlb
loop
jmp
xorb
jae
pushf
in
push
bound
pop
insl
fwait
rcll
ljmp
rep
jbe
add
add
dec
jb
mov
sub
lock
mov
xor
adc
pusha
ret
dec
inc
add
in
jg
imul
stos
testl
outsb
sub
jle
push
dec
movsl
popa
pusha
xchg
cmc
mov
testl
aaa
fxch
mov
dec
jecxz
out
lret
in
ja
aas
sub
arpl
lret
push
sbb
inc
sbb
lcall
push
hlt
ficompl
in
in
mov
cwtl
fwait
loopne
ret
adc
fidivs
repz
mov
cmpsl
sub
pop
adc
add
xor
mov
stc
pop
dec
cwtl
adc
std
mov
hlt
push
out
pop
or
ret
insl
sub
sub
and
inc
sub
js
mov
xor
cmp
push
cmp
dec
arpl
mov
movsl
in
pop
fwait
insb
push
cmpl
or
cmp
pop
sbb
lea
lock
sub
push
popf
test
nop
jmp
and
popa
jmp
xchg
in
jne
push
inc
popf
cmp
inc
adc
jp
fs
xor
pop
xor
lods
bound
xchg
cwtl
lcall
in
data16
ja
or
adc
int3
in
in
adc
cltd
out
lcall
mov
dec
aam
sbb
inc
and
dec
repnz
test
out
or
dec
test
stos
mov
cmp
mov
icebp
mov
insb
dec
in
loopne
sub
xor
repnz
push
push
push
xchg
insb
add
leave
loopne
push
mov
addr16
mov
sbb
add
lock
je
dec
and
xor
stc
mov
loope,pn
nop
or
idiv
in
cltd
in
dec
mov
or
test
pop
push
les
xor
jp
and
in
dec
shll
adc
test
xchg
stos
push
mov
movsl
cmp
cmp
in
rcrl
out
lahf
push
inc
imul
push
movsl
fldenv
lds
cwtl
adc
in
mov
xor
add
andl
mov
inc
out
mov
call
and
icebp
stos
test
mov
sbb
jb
push
inc
insl
xor
ljmp
inc
out
pusha
and
xor
jmp
adc
xchg
pusha
jmp
inc
popa
std
pop
mov
movsb
call
aad
leave
rorb
sbb
hlt
das
addr16
cli
sbb
inc
arpl
js
mov
pop
scas
pop
lods
push
leave
mov
rcll
stc
pop
cmp
es
xchg
scas
or
int
cs
std
insl
mov
mov
into
inc
xorl
mov
lea
or
hlt
ja
jae
mov
les
jg
xchg
in
aaa
fs
cmc
fisubs
jl
addr16
or
mov
push
stos
lds
stos
xlat
stos
push
cmp
outsb
mov
jl
jmp
insl
hlt
iret
fimuls
push
xor
inc
rcl
cmpsb
lock
clc
aas
xchg
push
pop
cmc
repnz
lahf
jle
mov
push
call
and
mov
cmp
xor
out
mov
shrb
nop
or
stos
adc
sti
and
xor
xlat
icebp
pusha
pop
jmp
insl
mov
icebp
push
adc
cmp
xchg
rcrl
sbb
in
loope
xor
push
je
jle
xchg
sub
dec
insl
pop
push
js
imul
shrl
push
shlb
dec
bound
inc
mov
mov
test
pslld
out
dec
sbb
jmp
jns
aad
call
sub
sub
hlt
mov
push
jl
xchg
jbe
jb
outsb
inc
mov
sahf
lcall
pop
stos
mov
hlt
or
popf
ja
fs
addr16
stos
lods
mov
jbe
adc
or
xor
addr16
hlt
sbb
push
xchg
daa
sbb
inc
jl
inc
dec
jg
not
insb
push
mov
cltd
test
stc
dec
aas
xor
loope
xor
add
cmp
lock
jp
mov
jns
daa
jbe
add
mov
dec
xchg
stc
in
jg
arpl
push
in
pop
mov
js
fldl
cs
lea
rorb
xchg
add
add
add
and
or
lret
xor
movsb
adc
movsb
push
inc
gs
jg
add
and
dec
mov
pop
test
cmpl
xchg
fcmovne
sahf
hlt
into
add
mov
cli
ljmp
pop
pushf
xchg
insl
or
push
jae
push
imul
mov
mov
cmp
cmp
lahf
dec
pop
cmp
xor
jl
insl
loopne
sbb
jge
xor
shll
add
mov
sub
and
int3
jecxz
insb
jae
rcpps
lahf
addr16
adc
test
imul
mov
ds
mov
sub
jno
jmp
inc
popf
push
icebp
mov
and
or
and
lods
sub
movsb
in
xor
in
nop
xchg
push
ror
scas
stos
pop
xor
inc
mov
cltd
jmp
clc
add
data16
mov
dec
aaa
ret
mov
add
xchg
pop
mov
pop
out
inc
add
int3
lods
insl
shll
or
or
mov
and
cld
nop
push
cld
fwait
mov
cwtl
mov
addr16
and
daa
xchg
push
insb
mov
mov
or
mov
xlat
jle
mov
iret
ljmp
lcall
ss
aam
es
data16
adc
mov
fwait
xor
adc
sti
jnp
repz
lret
xlat
test
push
daa
xchg
inc
pop
xchg
pop
inc
xor
int3
lods
push
lahf
stos
loopne
push
hlt
mov
xor
or
mov
xor
fistpll
cmpxchg
nop
push
shll
dec
or
inc
loop
inc
xorb
mov
outsb
add
pop
cmpsb
out
mov
push
sbb
ret
dec
pop
dec
dec
push
loope
mov
mov
jmp
iret
test
lock
push
stos
addr16
cld
mov
or
mov
inc
push
sub
mov
mov
test
sub
mov
enter
mov
xor
lret
dec
out
mov
fmull
mov
lods
add
sbb
dec
and
repz
dec
cmc
inc
mov
mov
jns
dec
fbstp
cmpsb
push
ja
push
addb
dec
pop
mov
leave
cltd
mov
jne
sbb
mov
cwtl
pop
je
xchg
lods
dec
subb
movsb
mov
movsb
arpl
lods
jo
lds
stc
cmp
sti
movsb
cmp
mov
cmp
pop
arpl
repz
mov
mov
mov
test
pop
inc
repz
pop
or
pop
sbb
pop
push
sub
hlt
xor
add
xchg
xlat
jo
push
mov
push
stos
scas
imull
jge
lds
daa
push
lods
in
inc
into
lods
push
pop
mov
push
cmp
jbe
push
cmpsl
mov
aad
xor
fisttps
fcomps
jg
mov
nop
mov
dec
mov
ret
jbe
jne
inc
cmp
cmpsl
andb
es
lahf
sbb
pop
jns
addr16
bound
sarl
push
add
adc
or
inc
stc
push
dec
cmc
fsubs
data16
sub
mov
jbe
mov
mov
lcall
pusha
arpl
stos
repz
jecxz
sub
imul
stos
mov
cmp
and
cltd
mov
lahf
sbb
ss
mov
mov
aam
addl
inc
adc
mov
mov
push
inc
jns
xchg
xchg
jne
cmp
test
in
xor
adc
adc
push
inc
das
pop
or
cltd
andb
adc
push
addr16
fs
push
xchg
dec
mov
loop
sub
cli
mov
mov
dec
stc
loopne
loope
or
jae
popl
dec
enter
mov
inc
mov
test
test
inc
mov
out
icebp
into
test
xor
fdivrl
mov
sbb
sti
sbb
sub
popf
out
js
xchg
mov
push
js
lds
push
push
test
pop
adc
mov
add
adc
imul
imul
dec
add
outsl
cwtl
outsl
adc
jle
pop
lahf
out
and
adc
jae
xor
xchg
sub
xchg
aaa
dec
cs
mov
dec
xor
pop
or
aad
sbb
inc
fs
dec
xor
pop
inc
mov
cmp
fistpll
imul
movsb
and
push
xor
push
insl
pop
es
or
and
or
sub
ret
mov
and
dec
pop
mov
ficoms
scas
dec
fwait
inc
out
adc
nop
nop
inc
je
insl
push
mov
mov
or
das
dec
aad
mov
mov
fsubr
mov
push
and
jl
out
aas
dec
or
dec
lahf
orl
push
repz
ds
xor
add
sbb
ret
repz
lahf
lret
sbb
xchg
into
jae
or
dec
scas
adc
dec
sbb
sbb
xlat
mov
cmovg
or
gs
jge
mov
pop
xchg
incb
loope
mov
xor
lods
adc
fisubl
mov
or
add
mov
pop
xchg
xlat
fcoml
fmuls
push
mov
shrb
je
or
fstps
js
xor
inc
mov
mov
xor
sbb
inc
lret
orb
adc
popa
add
out
sarb
gs
or
cmp
lods
js
pop
inc
xchg
insl
repnz
dec
push
adc
subl
mov
lret
jecxz
movsl
adc
adc
xchg
mov
mov
ds
mov
mov
aas
mov
cld
ss
stc
pusha
out
scas
jge
mov
sub
cmp
in
xchg
in
sbb
aaa
cld
pop
sbb
mov
xchg
lret
xor
fsts
loope
in
popa
and
sub
push
scas
mov
xor
pop
sahf
sbb
jbe
stc
pop
out
in
aaa
test
in
lcall
pop
std
sahf
adc
out
and
xchg
test
in
mov
shlb
lret
xor
in
mov
cmc
mov
addr16
ficomps
loopne
dec
push
mov
sti
aaa
and
js
je
loope
mov
sbb
pop
jo
inc
testb
or
daa
or
push
add
lods
xchg
sub
mov
idiv
imul
jecxz
movsb
inc
cs
xchg
aaa
inc
xor
cld
popa
ja
cmp
jl
or
mov
nop
ds
or
inc
int
aam
mov
mov
orl
xchg
lret
data16
repnz
xchg
fisubl
enter
xchg
sub
loope
int3
add
subb
loope
call
adc
xchg
inc
hlt
stc
scas
mov
dec
mov
test
mov
or
or
mov
orb
and
dec
and
outsb
xchg
scas
stc
gs
loope
sub
push
xchg
push
into
aas
pop
icebp
adc
and
leave
es
mov
in
cmp
pop
sub
adc
add
ss
aad
cmp
ja
sbb
mov
add
aaa
adc
shrl
push
push
mov
xchg
mov
ss
sar
out
popf
loopne
aas
mov
daa
sub
dec
mov
repz
test
sub
pop
or
aaa
loope
fnstsw
push
lret
mov
mov
push
repz
push
add
add
cltd
outsl
jecxz
fildl
xchg
mov
dec
loope
in
push
test
xor
mov
sbb
imul
xchg
pop
inc
mov
out
pop
pop
stc
fnstsw
xor
in
mov
push
insb
adc
mov
add
adc
xchg
mov
dec
and
iret
fldt
add
cmp
fiadds
pop
jl
mov
gs
pop
mov
xor
mov
pusha
mov
jp
popa
fdivs
lds
sar
sub
loope
loope
push
mov
xchg
cmpsb
int3
mov
push
jp
inc
mov
fiadds
mov
clc
aaa
pop
into
pop
push
aam
lret
jle
pushf
sbb
mov
lods
adcb
in
adc
das
mull
and
adc
shl
pop
xor
cmp
adc
dec
ljmp
orb
lret
lods
popa
or
cmp
repnz
sub
cmp
cmp
mov
lods
adc
icebp
sbb
mov
push
mov
push
or
lahf
mov
jbe
mov
sbb
mov
fisubrs
arpl
dec
mov
scas
push
pushf
xor
push
pop
push
sti
cmp
and
stc
jecxz
mov
lock
sahf
cmpsb
repnz
stos
aaa
jecxz
xchg
loopne
and
xchg
cli
mov
cmp
add
ja
jmp
lea
in
xchg
loope
insb
adc
dec
jl
cmc
rclb
aad
jecxz
outsb
out
push
rorl
xlat
in
daa
jb
pop
jg
xchg
jl
xacquire
out
and
sahf
mov
shlb
loop
add
and
stos
aas
and
ljmp
das
mov
inc
movsl
pop
xchg
and
inc
test
jae
xor
mov
fildll
xchg
jae
int3
fsts
mov
loopne
daa
and
and
lret
and
push
xchg
mov
pop
pushl
out
loop
and
xchg
or
cld
call
in
push
push
cwtl
sub
push
push
inc
test
out
push
in
or
aas
ljmp
rol
popf
lock
sub
dec
mov
test
sahf
push
fwait
push
xor
bound
in
push
sub
dec
je
test
inc
add
mov
jg
repz
xor
mov
les
push
outsl
mov
lahf
and
xor
inc
enter
ja
jmp
addl
jne
fstps
inc
mov
cmp
or
mov
jb
jg
enter
gs
dec
ret
aas
stc
pop
popa
cmpsl
inc
mov
push
inc
orb
rcrb
cmpsl
dec
loopne
dec
mov
jns
xorl
in
imul
outsb
lock
xchg
mov
jae
mov
and
outsl
cld
cmp
es
cs
rcrb
mov
pushf
lods
xchg
ja
adc
lret
cltd
lret
fsubs
jns
mov
fs
inc
or
aad
movsb
mov
lcall
rorl
or
push
xor
ljmp
repnz
or
or
shlb
adc
bound
or
jg
scas
adc
out
loope
sbb
movsl
sbb
out
adc
push
lods
xchg
add
inc
xor
lock
mov
lods
adc
mov
sti
into
fwait
jecxz
pop
sti
jns
sub
std
push
or
in
ds
movsb
data16
inc
div
mov
scas
sbb
pop
jnp
mov
mov
dec
hlt
inc
cmp
and
imul
or
sub
mov
testb
jbe
outsb
inc
pushf
sahf
dec
ret
sar
jle
loop
fwait
inc
int3
adc
jmp
sbb
popa
les
popf
pop
or
iret
insl
mov
dec
arpl
pop
loop
arpl
ja
sbb
lock
inc
jge
mov
out
push
jge
addl
insb
jae
sbb
sub
pop
test
out
xchg
pop
push
cwtl
jnp
std
dec
adc
jmp
cmp
xchg
dec
push
cmc
js
and
lret
xchg
sub
fisttps
xor
add
in
das
scas
mov
lock
scas
cmpsb
cmp
or
and
mov
lock
dec
imul
test
nop
cwtl
pop
or
add
hlt
addr16
inc
pop
xorb
test
mov
sub
testl
les
icebp
scas
lcall
sub
mov
mov
or
ret
and
sbb
stos
shlb
sbb
mov
dec
sbb
inc
xchg
xor
push
aam
xchg
aas
repnz
add
mov
xchg
insb
jb
xor
xor
mov
mov
int3
inc
add
rcrb
mov
mov
and
jbe
out
addr16
fisubrs
and
cmp
inc
popf
or
add
sti
clc
js
add
gs
clc
mov
gs
xor
ljmp
jno
cmp
jg
xchg
sbb
jecxz
and
enter
xor
cld
adc
push
mov
popf
xchg
xchg
mov
mov
pop
aad
imul
xchg
mov
aam
imul
cmp
push
cmpl
cmpsb
shl
clc
or
icebp
xchg
cmpl
cli
lret
fmuls
xor
sub
pop
push
xchg
mov
shrl
mov
fwait
rorl
jne
pop
sub
loop
push
out
addr16
dec
int3
int3
jecxz
mov
into
dec
pusha
ja
jbe
ljmp
lock
adcb
push
push
mov
loopne
sub
dec
test
push
lret
push
cmp
jle
xchg
ja
cmpsl
add
stos
test
popa
scas
imul
mov
mov
movsl
add
arpl
out
xchg
cmp
call
xlat
cs
test
aad
sbb
cmp
xchg
jne
das
stc
cmp
or
and
popf
out
test
inc
clc
imul
dec
add
or
cmp
and
jle
arpl
mov
out
pop
iret
push
jb
pop
das
mov
movsb
push
push
rorl
xchg
xchg
addr16
cmc
pusha
pop
cmp
mov
dec
push
xchg
sbb
dec
push
mov
inc
cmp
inc
mov
call
icebp
jp
movsb
les
movsl
aad
nop
or
jg
mov
cld
push
sbb
add
xchg
lods
inc
pop
mov
pop
cwtl
daa
sub
pop
jns
subb
sti
jg
mov
shrb
sbb
aad
ja
divl
stc
mov
mov
in
sbb
std
cs
mov
insl
lock
xor
fsubs
jne
xchg
out
cmc
jge
aad
scas
dec
sbbb
insb
push
sub
pop
inc
movsb
pop
mov
or
inc
xchg
mov
mov
leave
aaa
jns
mov
andl
cmp
iret
out
xchg
xchg
inc
pop
negl
mov
jge
jo
and
pop
sbb
sbb
pop
adc
xchg
shl
pushf
pop
mulb
js
out
imul
mov
jae
pop
xor
cmp
nop
and
cmp
xchg
ficomps
aaa
ss
cmc
stos
aaa
andb
and
movsl
cmp
push
mov
aad
mov
pop
adc
pushf
push
lods
ds
jp
push
ljmp
insb
insl
lret
shl
push
lcall
add
fldl
cld
test
jno
fucomip
mov
mov
rsm
scas
idiv
inc
fdivr
rolb
dec
dec
stos
fs
aaa
mov
jnp
stos
imul
loopne
lret
and
add
push
xor
cwtl
adc
and
lret
adc
push
xchg
sub
hlt
les
fcoml
idiv
mov
sbb
clc
stc
sub
mov
pop
jmp
push
aas
insl
dec
sbb
and
scas
iret
or
popa
xor
pushf
mov
jb
pushf
push
test
dec
and
nop
inc
dec
xor
fisttpll
xchg
sbb
sahf
sarb
sbb
fcmovnb
enter
out
cmp
cmpsl
jmp
jne
mov
pop
xor
jns
lock
fdivrp
jo
daa
aad
pop
orl
dec
and
loope
data16
movsl
adc
movntq
das
push
std
dec
dec
inc
mov
push
mov
mov
sbb
mov
scas
jle
pop
push
or
lds
push
xor
push
cs
jns
shl
cli
daa
fs
lcall
or
adc
fistl
adc
add
adc
xlat
in
sti
add
mov
addr16
xchg
js
cmp
cld
popf
jae
or
cltd
jnp
pop
cmp
lret
call
adc
xor
adc
popf
sbb
add
mov
sbb
fwait
dec
pop
insl
push
mov
cmp
cmp
ja
lret
sbb
clc
pushl
mov
adc
cs
pop
dec
outsb
in
inc
fdivr
ds
int
ss
incb
mov
sti
repz
lret
mov
imul
aaa
jbe
xchg
push
add
faddl
clc
insl
mov
insl
add
pop
stos
mov
test
mov
push
xchg
andb
lahf
sub
mov
push
je
rorl
test
aas
xchg
insb
xchg
insl
sbb
mov
xchg
enter
scas
cs
cltd
sbb
adc
fistpll
pop
aas
loopne
dec
mov
mov
jae
in
cld
dec
pusha
rcl
sbb
mov
sbb
lret
add
std
xor
aaa
sbb
test
mov
stos
and
or
push
pop
mov
xor
cmc
repnz
hlt
scas
inc
rol
fwait
sbb
adcb
jl
cmp
cmc
and
jnp
push
mov
aam
xchg
out
inc
mov
repz
xor
test
leave
xor
popa
repnz
mov
push
xchg
pop
and
xchg
lret
cmp
loop
sbb
xor
sbb
test
pop
add
cmp
or
and
and
xor
out
cli
mov
mov
xchg
sbb
out
mov
xor
lret
jbe
mov
aad
stos
outsb
in
leave
shll
loope
addl
addr16
popa
leave
pusha
rol
add
mov
jmp
and
sbb
dec
sub
adc
push
in
cs
ljmp
xchg
mov
pop
sbb
push
add
push
add
jae
push
stc
adc
lock
test
cmp
xor
leave
testb
ret
lds
insl
mov
lock
cmp
dec
pop
cmpsb
out
add
mov
cmp
xor
int
adc
sub
call
cmc
lds
testb
enter
push
adcb
loope
mov
cld
jecxz
loopne
test
pop
movb
mov
cmp
dec
add
dec
jp
jmp
fdivrs
mov
outsb
fst
and
mov
scas
test
scas
sbb
data16
int
nop
icebp
fisttps
inc
and
adc
jge
shrl
jl
mov
mov
idivl
dec
sahf
in
in
mov
pop
out
mov
addl
jnp
popa
jle
lahf
mov
in
idivl
inc
xchg
jno
popf
add
push
rsqrtps
popa
sahf
repnz
int3
into
jne
aam
sub
incl
push
cmp
in
arpl
mov
ja
mov
add
loope
int
mov
cltd
adc
sbb
lods
js
cwtl
loope
xor
xor
les
and
jge
inc
xchg
xchg
imull
ja
mov
pushf
xchg
aad
daa
lcall
xchg
mov
xchg
xchg
std
or
pop
pop
shrb
test
add
mov
and
inc
push
xchg
and
fildll
outsb
sub
mov
mov
xor
ja
test
jo
frstor
and
push
icebp
add
pop
int3
daa
push
push
pop
dec
mov
test
es
mov
andl
sahf
fisttpll
test
push
scas
xor
pop
jp
fmuls
insl
pop
fs
movsl
cmpsl
mov
jmp
or
ret
jecxz
enter
pop
out
pop
negl
icebp
outsl
rcr
mov
arpl
inc
mov
mov
mov
scas
inc
insb
lret
sbb
dec
pop
in
call
mov
pop
mov
outsl
movsb
imul
sahf
push
fimuls
cld
cs
pop
pop
xor
pop
cmp
mov
vmovlpd
xlat
sbb
dec
dec
adc
pop
mov
mov
mov
jbe
lea
ret
imul
movsb
lret
bnd
fwait
clc
fxtract
daa
idiv
scas
jae
inc
sbb
pop
lret
leave
in
inc
insl
stos
dec
sub
pinsrw
rcrb
mov
enter
xchg
arpl
std
add
into
mov
or
xor
mov
jmp
aaa
mov
roll
into
jmp
cmpsb
hlt
push
je
pop
dec
arpl
test
inc
mov
sub
sbb
push
or
mov
cld
orl
cmp
push
imul
dec
call
sub
or
out
or
mov
repz
pushf
mov
aad
fisttpl
roll
xchg
and
cmpsb
push
mov
push
inc
cmp
mov
adc
movb
push
out
ds
outsb
gs
dec
cs
imul
orb
fsts
imul
jo
hlt
popa
shlb
cmp
dec
lods
add
cmp
dec
mov
adc
setno
xchg
ss
repnz
loop
pop
cmc
xchg
add
nop
xor
ret
stos
stos
cmp
jns
mov
pop
push
fdivl
push
jbe
mov
xor
push
das
daa
imul
pop
std
mov
and
stos
push
ljmp
test
jno
aad
cmc
call
mov
pop
jecxz
push
sub
loop
pop
and
sub
outsb
xchg
enter
test
or
dec
jle
outsl
ss
rorl
shll
test
lods
jge
addr16
jb
hlt
mov
pusha
call
jo
fnstsw
or
roll
imul
and
jbe
jbe
pusha
fwait
add
aad
push
push
stc
out
inc
mov
inc
cli
mov
pop
and
out
repnz
fcom
jge
sbb
rol
lods
push
aad
sarl
cwtl
jg
sbb
push
cltd
std
cmp
imul
push
inc
jg
jns
inc
insb
sbbl
mov
ljmp
sub
enter
push
out
xchg
mov
jmp
push
ret
inc
cltd
loop
pop
push
leave
les
adc
sbb
adc
push
cli
xchg
and
in
subb
xor
bswap
mov
or
arpl
add
icebp
out
mov
dec
and
out
int3
cwtd
popf
int3
shrb
sub
inc
and
cmp
in
or
mov
mul
cmpsb
jge
outsl
xchg
fcompl
outsb
or
mov
mov
rcr
push
inc
pop
arpl
push
xor
mov
inc
adc
and
arpl
mov
sbb
out
lret
dec
add
mov
mov
pushf
xlat
or
xchg
and
mov
pop
loop
lea
xorl
mov
mov
mov
mov
mov
mov
pop
dec
int
pop
xchg
out
ljmp
out
sub
mov
mov
daa
rorb
daa
sub
cmp
int3
adc
jmp
inc
fistps
repz
repnz
dec
int
hlt
cmp
or
lret
popa
mov
movsb
cs
stos
mov
popf
or
data16
popa
lods
jbe
sub
xor
aaa
push
sbb
sbb
test
aam
cmp
shl
bound
dec
cmpsb
and
xor
and
lret
clc
popa
mov
adc
xchg
mov
sti
or
push
sbb
or
mulb
mov
mov
repnz
xchg
leave
test
jle
mov
fdivrl
pop
xchg
pop
xchg
aam
push
xor
xlat
push
mov
mov
data16
aam
scas
mov
push
popf
dec
lret
hlt
shlb
popa
mov
loop
ret
adc
add
int
jge
iret
adc
adc
push
cltd
push
adc
sbb
pop
fwait
dec
js
lahf
in
pop
es
orb
adc
inc
push
je
push
mov
xor
rorb
fcoml
ffree
call
xchg
sbb
sub
aas
sub
inc
cmp
xchg
lods
in
cmp
cs
jne
or
cmp
cmp
stc
push
adc
or
pop
add
sbb
sbb
jmp
arpl
cmpsb
jecxz
outsl
and
pushf
jl
loop
mov
inc
out
add
dec
push
test
dec
pop
mov
popa
sub
mov
add
xor
daa
hlt
cmp
lret
dec
cmp
sbb
mov
push
push
inc
cwtl
in
inc
fbld
mov
and
data16
sub
jae
xor
and
ret
jnp
leave
fidivl
repnz
stos
pushl
add
xor
pop
or
imul
mov
and
fwait
stc
pop
mov
inc
pop
out
inc
testb
pop
fdiv
xor
mov
mov
scas
jg
sub
fsubs
test
mov
pop
test
dec
pop
dec
aas
jne
repnz
push
dec
jbe
sub
ja
out
jo
mov
inc
loop
inc
sbb
add
scas
fisubrl
arpl
daa
lahf
addb
loop
movsb
std
xchg
push
rcr
xchg
mov
lcall
mov
adc
sbb
push
mov
sub
mov
ret
sbb
out
lahf
movsb
jbe
jp
ljmp
mov
andb
enter
jo
push
jae
daa
add
scas
and
fldcw
subl
push
dec
std
jnp
fistl
xorb
in
out
arpl
cmp
dec
inc
mov
scas
leave
je
test
add
sub
push
lret
mov
dec
inc
add
or
movsl
pop
icebp
lea
out
pop
xchg
or
mov
add
mov
stos
fisubrs
test
cmp
pop
scas
testl
jno
clc
shll
pop
cmc
shrb
sbb
ds
fisubrs
push
mov
cli
out
movd
lahf
out
faddp
enter
lea
jns
mov
sahf
mov
data16
jmp
or
sub
dec
xor
inc
std
ficoms
fstpt
inc
lock
pop
or
fs
dec
sbb
pusha
inc
sbb
push
dec
sti
andl
daa
mov
clc
nop
adc
gs
cmp
lods
js
movsl
jno
repnz
mov
or
jge
push
lcall
inc
mov
sbb
cmp
in
or
adc
popf
add
test
es
jnp
sub
inc
icebp
flds
inc
push
subb
insl
test
in
pop
adcl
mov
sbb
mov
aaa
xor
adc
dec
push
xor
adc
aas
sub
inc
lret
stos
loop
sbb
pop
divl
popa
push
xor
jns
mov
cltd
cmp
pop
push
ljmp
inc
orl
mov
insb
mov
outsb
xchg
inc
dec
clc
ss
dec
mov
jmp
push
adc
arpl
sub
pusha
dec
in
icebp
fwait
mov
adc
int
lret
shl
inc
xchg
jmp
lcall
popf
insl
mov
shll
loop
stos
mov
repnz
xor
and
sarl
jp
push
rol
ljmp
sub
jns
addr16
int3
pop
xchg
mov
mov
loop
pop
and
add
cmp
loope
or
adc
loopne
pusha
sbb
xchg
subb
loope
xor
pushl
cltd
insb
jo
push
inc
xchg
sub
pop
pop
outsb
sbb
xor
das
jno
add
and
and
out
cmpsl
xchg
int3
sub
loop
outsl
movsl
or
mov
push
cmpsl
fsubrl
mov
xor
lods
push
jmp
push
in
xchg
mov
test
jp
orb
loop
pop
add
push
jne
imul
pop
xchg
push
call
mov
sbb
frstor
mov
cld
jle
pop
inc
fisubl
cltd
cld
pusha
mov
je
dec
cmpsb
incl
cltd
add
cltd
es
repnz
movsl
xchg
xchg
pop
sbb
adc
sar
xor
lock
cmp
into
mov
jecxz
and
loop
push
fdivrl
pop
xchg
ret
rcrl
inc
cmp
push
pushf
mov
add
sbb
aas
jo
and
sbb
xor
mov
mov
mov
and
out
cmpsl
jp
call
aam
push
sub
mov
adc
fldt
movsl
mov
ret
lods
fistpll
sbb
xchg
subb
inc
addr16
roll
mov
fbld
das
jbe
mov
cld
loopne
stos
add
cld
shlb
shlb
jno
dec
lods
pop
movsb
pop
ds
int3
loopne
stc
mov
popa
cltd
add
out
xor
shlb
gs
jae
and
cmp
je
sub
inc
inc
nop
xchg
shrb
inc
adc
inc
dec
jae
dec
or
iret
insl
push
cmpsb
std
cli
adc
mov
daa
pop
imul
mov
adc
cmp
nop
jl
sbb
jge
pop
inc
jl
roll
xchg
cwtl
xchg
lea
iret
or
jno
push
call
xchg
mov
or
jbe
dec
lds
or
jmp
fsubl
rorb
test
xchg
loopne
outsl
push
adcb
mov
enter
add
outsb
lret
ror
loopne
xor
das
scas
mov
sub
sbb
jecxz
pop
ljmp
aad
out
out
cs
cmp
push
pop
enter
out
inc
not
jbe
jle
iret
test
enter
mov
jmp
bound
loop
subl
xchg
dec
mov
adc
movsb
jge
out
inc
xor
xchg
mov
repz
in
fisubrs
push
mov
push
mov
xchg
or
jg
lock
adc
divb
jecxz
sti
cmpsl
std
les
shlb
and
cld
push
call
andl
rcrb
xor
icebp
loope
xacquire
and
sub
cmpsl
or
mov
adcl
sub
mov
je
jb
sub
out
mov
inc
jo
sub
ss
sub
lds
jno
jl
mov
loop
push
jns
in
mov
stos
imul
mov
aam
dec
xchg
icebp
imul
movsl
adc
and
sub
adc
in
mov
lcall
int3
add
addr16
ja
sahf
fldenv
pop
push
xchg
xchg
or
jp
add
loop
push
jne
stos
je
adc
or
imul
xor
pop
mov
mov
fsubrs
push
sbb
or
inc
push
push
jno
dec
sub
fucom
and
xchg
clc
push
je
inc
and
push
adc
insb
sbb
sub
xorb
sahf
xor
xor
sbb
cmpsb
xchg
inc
mov
dec
adcb
sbb
pop
or
arpl
cmp
je
push
add
mov
lods
add
pop
pslld
out
mov
push
sbb
popf
wrmsr
mov
insl
mov
dec
mov
xchg
leave
aad
inc
xor
cld
jnp
stos
mov
push
and
jl
test
popf
and
dec
out
scas
or
das
sbbb
sub
mov
cmpsl
dec
rorl
frstor
jno
das
jo
sbb
out
cwtl
outsl
pop
sbb
push
dec
stos
adc
push
inc
push
jnp
jne
push
movsl
test
xor
inc
stos
sbb
rcrb
mov
ret
mov
insb
dec
jb
jbe
ret
je
lea
fdivl
jmp
dec
lcall
dec
ja
aaa
xchg
and
mov
adc
aad
mov
adc
mov
mov
scas
int3
call
cltd
cmp
dec
fwait
or
inc
pushf
or
int3
jnp
adc
rcll
sti
pop
push
xchg
push
aam
or
shrb
mov
or
outsb
adc
sbb
xor
mov
xor
xchg
push
insb
push
test
pop
mov
inc
dec
je
xchg
sti
adc
out
xchg
push
mov
jecxz
cmp
sbb
aaa
inc
cmp
inc
das
andb
nop
pushf
inc
leave
pop
shrb
push
inc
aas
mov
loopw
sbb
subb
sub
mov
jg
rcr
leave
mov
mov
fimull
call
into
cmp
mov
push
pop
or
notb
sbb
fucomip
push
call
cld
mov
mov
loopne
mov
xor
arpl
add
sub
int
aad
xchg
xor
sub
arpl
xor
xchg
mov
outsb
xchg
push
xchg
jl
ret
out
aad
and
inc
sbb
lcall
adc
jo
jmp
push
mov
mov
lds
cmp
stos
les
xor
outsl
inc
cltd
xchg
pop
and
fidivl
jbe
mov
xlat
jp
sub
or
mov
pop
pusha
mov
test
xor
in
or
aaa
leave
into
jl
push
xor
push
mov
jle
sti
inc
mov
add
sbb
xchg
mov
dec
push
fsts
xchg
add
mov
cmp
loop
idiv
jecxz
shl
or
mov
dec
adc
sbb
fdivl
lcall
ja
ja
xchg
fwait
push
pop
mov
mov
fwait
jle
pushl
fisttpl
cmp
divb
lret
repz
jle
sbb
iret
ja
dec
fildll
xor
jo
cmp
dec
dec
cli
jne
movsb
sbb
js
or
jne
mov
sub
rol
out
scas
arpl
mov
mov
std
mov
push
mov
sbb
jo
neg
ja
add
into
sbb
notb
and
scas
mov
push
xchg
cmpsl
mov
iret
dec
mov
push
in
repz
sbb
mov
mov
lret
mov
daa
call
jge
pop
or
movsl
mov
dec
icebp
cmp
movsl
scas
fisubrs
push
xor
hlt
repnz
repnz
ret
mov
out
int3
push
mov
sbb
jnp
pop
loop
fidivl
inc
jmp
cmpb
or
mov
mov
repnz
sbb
out
push
jb
push
mov
dec
push
inc
xor
movsl
jge
arpl
inc
js
push
imul
nop
scas
in
lea
or
or
push
mov
ja
pop
lods
pop
pop
push
out
xor
xor
dec
fcomps
push
repz
enter
or
daa
leave
inc
in
out
mov
inc
icebp
and
lds
and
mov
cmpsl
movsb
inc
xor
xor
mov
insb
stos
mov
sarl
imul
stc
add
dec
es
repz
jmp
jbe
popf
jl
xor
mov
sbb
scas
sbb
neg
xor
testl
sbb
add
xor
pusha
add
mov
jp
mov
aam
imul
mov
xchg
inc
cs
out
push
dec
clc
fdivr
jp
cmc
mov
jnp
pop
or
out
cmp
pop
push
pop
mov
mov
lds
fidivrs
cmc
lret
cmpsl
pop
mov
jg
inc
in
jno
adc
pop
xor
rorb
add
pop
jle
sbb
sbb
addb
cli
or
adc
test
or
adc
lea
outsl
in
popf
xor
add
lret
sub
or
add
pusha
xor
clc
sub
dec
js
jp
add
andl
jno
adc
movsl
pop
cmp
inc
stos
pop
mov
cmp
push
jp
fadds
sub
dec
icebp
xchg
push
outsb
call
ret
push
mov
add
or
mov
mov
aam
mov
stos
jb
sub
push
das
clc
jo
aad
xchg
sub
loop
mov
sbb
andl
cmc
ljmp
cmc
loop
shrl
in
repz
rorb
scas
mov
call
in
jns
mov
or
clc
push
cmp
in
dec
sub
sub
pop
dec
mov
lods
lahf
inc
scas
lods
jno
leave
add
mov
add
adc
fistpl
stc
das
lds
cmpl
popf
sti
int3
ret
pop
lcall
adc
into
pop
inc
bound
mov
push
mov
pop
and
and
jb
lea
or
mov
str
sub
sahf
iretw
adc
out
jecxz
movsb
sbb
mov
lcall
mov
jle
iret
push
sti
testb
push
mov
repnz
iret
outsb
pop
sbb
aad
cmpsb
mov
mov
fcmovnbe
frstor
xor
jb
loope
call
addr16
add
and
cmpsl
mov
pop
push
cmp
aad
sub
aaa
sahf
pop
mov
int3
shll
jno
push
sbb
lahf
stc
orb
mov
ret
push
cld
cmpsl
ja
fldcw
lcall
adc
mov
pop
ret
cmp
sub
or
gs
cmpsl
stos
inc
or
imul
ret
dec
mov
call
cmc
imulb
adc
dec
jns
push
mov
push
outsl
xchg
xor
addr16
arpl
cmp
sti
loopne
gs
fisubl
sub
mov
ss
test
or
xor
sbb
or
lahf
lret
mov
outsb
inc
loop
movl
fucom
sbb
das
jmp
int
stos
or
fnstenv
insb
cmpsb
das
loope
pop
mov
loopne
sub
sub
sub
test
daa
outsl
xchg
jge
mov
mov
dec
cmp
sahf
cltd
idiv
mov
mov
add
lods
insb
pop
loop
sahf
pop
add
call
shl
lock
cli
push
xor
or
inc
push
stc
push
sahf
test
and
icebp
ja
frstor
jns
adc
fsts
gs
in
mov
mov
pop
fstl
rcr
inc
sub
push
sbb
cwtl
mov
xchg
and
push
in
jl
mov
loop
int
mov
cld
mov
jbe
add
mov
shrb
ds
or
outsb
inc
jae
fs
data16
sarb
jge
lret
jne
add
mov
cmp
fmuls
lock
push
call
jge
fsubs
imul
xchg
cmp
mov
inc
mov
test
sub
push
popf
pop
pop
in
add
sub
push
mov
cs
hlt
test
mov
mov
subl
lea
sub
pushf
hlt
ret
rorl
mov
repnz
push
mov
push
ret
fstps
mov
ret
test
inc
ss
cld
ret
outsl
in
and
sub
arpl
bound
and
push
movsl
mov
stc
mov
cmp
aam
dec
push
fs
jle
shrl
jbe
mov
xchg
mov
jne
mov
adc
xor
mov
mov
or
push
or
les
inc
mov
mov
daa
xchg
mov
fldl
in
mov
mov
jbe
mov
lock
leave
popf
jae
push
shrl
lods
psubusw
jae
rclb
scas
call
sbb
inc
cmp
rcr
adc
stc
popa
ss
xlat
rorb
bound
fdivs
out
lock
loop
jl
out
lahf
cmpsb
cmp
pop
pop
push
and
out
sub
mov
push
and
mov
pushf
pop
xor
inc
sub
cltd
add
hlt
add
xor
scas
xchg
xchg
mov
cmp
jns
xchg
xchg
adc
sarl
jae
adc
cmp
jae
and
inc
sub
jne
jmp
ja
push
mov
pop
inc
push
jo
mov
shl
mov
out
add
lret
adc
push
inc
pop
jno
cmp
ficomps
sbb
and
adc
hlt
in
sub
popa
and
fdivl
jmp
out
ja
push
or
dec
cmp
aam
sub
out
cmp
cmpsl
leave
int3
fildll
mov
icebp
ds
scas
aad
outsb
popa
call
sub
jae
sub
frstor
fwait
enter
dec
sub
fwait
cs
inc
inc
scas
mov
xchg
out
insb
sub
and
popf
rcll
mov
shll
mov
dec
mov
and
push
mov
xchg
add
fiadds
loop
cmpsb
test
sbb
xchg
inc
rorl
jecxz
sbb
sar
xor
ja
imul
sti
xlat
mov
sub
inc
cli
pop
dec
pop
cmp
pop
out
insl
inc
shr
xchg
mov
and
shlb
jbe
cmp
xor
shll
stc
cli
rcll
xchg
add
add
daa
test
cmp
lahf
fldt
das
xor
mov
xchg
adc
addr16
sarb
xchg
push
mov
add
mov
shlb
fsts
mov
inc
mov
lods
xor
mov
in
cs
mov
loope
dec
xor
pop
or
je
imul
int3
sarb
push
ret
in
adc
push
cmp
fmuls
xor
add
ret
xchg
xchg
cmpsl
dec
pop
inc
popf
arpl
jmp
je
clc
push
lret
out
or
mov
pop
mov
dec
ficoml
int3
sbb
push
loop
mov
sbb
das
sub
outsl
adc
pop
mov
mov
add
xchg
mov
lods
push
push
mov
shll
insl
ret
adc
jb
sbb
adc
cmp
pop
stos
cli
mov
pop
xchg
fidivrs
sbb
and
inc
jl
lret
and
xor
mov
mov
xor
pop
jmp
xor
popa
jmp
jae
push
rorb
push
outsw
sbb
ja
mov
adc
xchg
mov
pop
imul
sub
cmp
pop
gs
cltd
inc
xor
xor
aas
scas
cs
sbb
stos
push
daa
mov
mov
imul
insl
pop
pop
xor
rcr
lock
ret
pop
jnp
pop
test
inc
xchg
cmpsb
cmp
sbbl
mov
jmp
and
add
testb
mov
das
jg
pushf
xchg
aaa
rcrb
push
xchg
sbb
nop
adc
cmp
sti
push
outsb
fdivrs
leave
loopne
stos
xchg
xor
cmp
negb
arpl
out
cltd
sub
stc
cmp
jecxz
imull
test
nop
data16
dec
jno
sub
aas
fs
adc
add
iret
movb
cmp
sbb
lcall
xchg
fxtract
sbb
or
enter
in
push
mov
cmpsb
jge
sbb
movsl
xor
or
aaa
inc
dec
dec
sbb
aad
mov
je
add
push
sbb
and
push
inc
jb
nop
xchg
inc
imul
fbld
ror
std
test
adc
and
add
iret
in
jae
mov
and
push
out
jmp
in
xor
shl
sti
push
ljmp
push
jge
dec
mov
dec
sub
jle
not
repnz
mov
popf
addr16
xlat
cmc
jmp
mov
ja
imul
orl
ss
daa
divps
mov
mov
xor
sarl
in
bound
out
loopne
cld
shlb
iret
jmp
mov
inc
or
in
push
push
roll
movsl
cmpsb
or
add
push
sub
sub
jmp
cmp
sahf
shrb
cmp
stos
cmpsl
and
loope
std
cmp
push
iret
push
add
push
jns
outsl
fistpll
imul
jbe
or
xchg
add
push
bnd
adc
fisttpll
mov
jp
xchg
push
jl
dec
out
push
lret
out
cmp
test
das
fistpl
fbstp
xlat
andb
in
jb
mov
les
dec
lods
mov
xlat
add
xchg
hlt
shrl
stc
mov
adc
pushf
inc
cmp
pop
fimuls
pop
sbb
shll
cmp
xor
enter
lds
jnp
jnp
mov
xlat
imul
rcll
std
psubsb
sub
push
push
mov
icebp
in
shrb
das
pop
andb
adc
mov
daa
sub
mov
pop
fnstsw
fs
cmp
xchg
enter
test
jp
mov
xchg
dec
in
mov
xchg
mov
xchg
and
sbb
inc
jns
ret
xchg
flds
popa
test
push
outsl
imull
shll
xlat
mov
and
jecxz
jbe
mov
sbb
adc
push
sbb
fidivs
xchg
and
std
mov
xchg
aaa
cmp
and
push
xchg
adc
or
cmp
sahf
xchg
jae
mov
sub
cs
xchg
jne
rcl
rorl
hlt
or
cmc
ss
mov
aad
cmp
inc
fcom
dec
and
gs
pop
pop
sahf
sbb
aaa
adc
inc
inc
mov
das
aad
lahf
jmp
push
out
subl
hlt
jle
and
in
cld
sbb
setns
popa
inc
cmp
test
lret
jge
push
jbe
dec
and
push
jne
subb
xchg
jg
repnz
iret
lods
loopne
aad
shll
flds
push
jae
iret
aaa
movsl
jbe
stos
fadds
arpl
cmp
xlat
cmp
inc
lahf
clc
push
inc
sub
popf
fistps
jecxz
fcoml
call
push
dec
std
dec
lea
ss
cmp
mov
cmp
std
fwait
outsb
and
cwtl
in
xchg
call
sbb
push
test
mov
aaa
jae
jle
iret
adc
ret
test
mov
in
push
inc
pop
sbb
ds
movsl
jnp
sbb
dec
fldt
mov
fwait
cmc
test
loopne
cwtl
daa
cld
cli
inc
mov
pop
push
idiv
mov
add
imul
mov
out
xlat
jmp
add
mov
inc
lods
lds
cmpsb
mov
xor
mov
js
or
ljmp
js
jnp
inc
arpl
cmp
fstpt
mov
or
scas
lock
adc
and
cmp
lods
cmc
testb
mov
pop
push
das
orb
mov
jl
jae
mov
adc
bound
jg
jns
inc
pop
and
sbb
in
lea
cmp
sbb
dec
jmp
sub
mov
movsb
add
subl
repnz
push
mov
dec
in
sahf
ret
cmpsl
lods
sbb
je
movb
test
jns
xor
arpl
add
add
push
jg
mov
ffree
ja
mov
pop
out
data16
daa
mov
stos
sub
ret
sbb
and
insl
push
inc
jns
pushf
pop
aas
shrb
inc
pop
je
je
inc
mov
xor
in
popa
cwtl
pop
dec
gs
fadd
jg
aaa
in
rcrb
pop
xchg
pop
cmc
lods
or
jmp
jp
and
push
popf
or
sbb
movsb
rcl
xor
jns
push
inc
aam
fucomip
stos
hlt
mov
outsb
mov
mov
mov
adc
push
insb
and
jle
cld
adc
inc
out
sub
andl
aaa
and
fiaddl
pop
sbb
xchg
inc
jbe
int
pop
pop
sub
rcrb
inc
cld
dec
cmpsl
cmp
sbb
xchg
inc
push
cmp
test
xchg
stos
add
jmp
push
pop
lods
sbb
dec
enter
jp
or
iret
aas
adcl
decb
iret
xor
out
lea
dec
pop
pusha
adc
jl
adc
pop
add
loopne
xchg
scas
sti
pop
jo
dec
push
movsl
pop
push
jo
mov
mov
xchg
xlat
jns
fcoml
mov
and
fwait
xor
inc
fs
sub
cmp
jb
inc
pop
mov
jae
mul
mov
xchg
dec
jmp
cltd
sbb
sahf
and
dec
sub
mov
push
push
in
inc
xlat
push
jg
mov
pusha
xor
jl
aam
inc
inc
mov
dec
sub
sbb
mov
mov
or
sub
jns
in
push
int
idiv
pop
dec
dec
scas
xor
gs
add
out
das
mov
sarl
int3
cmp
orb
mov
repnz
and
hlt
movsb
fsubrs
fmuls
out
mov
cmp
add
xchg
mov
and
jae
loopne
mov
mov
mulb
xchg
inc
push
pop
cmp
and
scas
fisttps
cmpsl
insl
hlt
and
pushf
divl
sti
xchg
gs
cmp
push
dec
mov
sbb
or
xor
dec
ss
hlt
push
jmp
or
pusha
mov
push
jno
popf
stos
push
add
scas
xchg
sub
sbb
sub
inc
iret
adc
shl
adc
mov
ja
arpl
and
pop
jp
or
js
repnz
jo
mov
fwait
rcrl
filds
in
add
inc
push
insb
outsl
mov
xchg
inc
mov
es
ja
fstpl
pop
inc
lret
fsubl
jno
incl
inc
int3
shlb
out
xor
xlat
xchg
iret
mov
das
lea
xor
sub
mov
aas
in
lahf
sub
xchg
sbb
dec
mov
in
cmpsb
mov
test
cs
mov
jmp
test
xchg
and
iret
clc
insl
es
dec
test
hlt
adc
jmp
jbe
and
movsl
mov
mov
mov
inc
lret
test
xor
cmc
cmp
xchg
cmp
cmp
xchg
jecxz
sub
sbb
pusha
or
inc
inc
test
pusha
lods
and
fstps
mov
add
adc
pop
fs
or
ja
mov
jge
mov
pop
adcl
test
fdivs
push
scas
mov
ret
and
cmp
and
cmp
scas
inc
mov
sahf
xchg
or
cmpsl
push
jg
dec
xchg
sbb
mov
xor
jle
push
sub
xchg
xor
jns
push
test
lret
adc
sub
pop
dec
cwtl
xor
jp
xchg
mov
mov
mov
xchg
repnz
pop
loope
dec
mov
push
mov
fwait
pop
lods
cmc
fisttpl
orb
or
outsb
dec
cmp
enter
cltd
pop
fists
in
push
ret
lcall
mov
or
sub
scas
mov
dec
test
fcoms
jno
repnz
cmp
sti
stos
push
ja
mov
lcall
addl
jp
call
orb
aad
mov
lds
sub
fisttpl
and
jno
jmp
pop
fstps
dec
sbb
pushl
push
aam
and
pop
je
lahf
aad
sarb
call
clc
insb
mov
pushf
fcmovnbe
in
ja
adc
jnp
pop
mov
test
or
mov
fucomip
jecxz
jg
dec
sbb
adc
mov
push
sub
adc
and
stos
arpl
mov
pop
xchg
hlt
pop
cmp
mov
fadds
call
pop
cmp
test
out
negl
cld
lcall
addr16
insl
insb
pop
int
sub
fistpll
add
nop
stos
rol
iret
inc
mov
push
ss
pop
sub
add
enter
inc
cmp
stos
mov
mov
mov
dec
clc
pop
xor
mov
mov
push
sub
mov
push
or
lret
out
test
cmpsb
cmp
movsl
xor
ss
jnp
shl
movsl
stos
mov
arpl
sub
sti
movsl
inc
jge
adc
stc
mov
je
mov
mov
push
pop
jmp
jp
insb
xchg
xorb
xchg
cmp
cmp
lock
cmpsb
sbb
out
cmpl
or
std
inc
je
testb
dec
lods
jo
addr16
dec
lods
push
lret
xor
divl
adc
sti
cmp
mov
or
popa
cltd
adc
pop
xor
adc
adc
mov
out
daa
popf
sub
aas
jns
mov
out
aam
xchg
jae
test
mov
and
incl
sti
gs
mov
jge
je
push
xchg
inc
sbb
ss
jno
cmc
push
int3
xchg
cmc
movsl
or
popa
in
push
mov
sub
addb
ss
out
inc
jns
jno
inc
ja
sub
add
movsb
pop
ret
js
call
aam
shll
mov
mov
je
push
scas
pushf
setns
daa
add
mov
jae
jmp
pop
xchg
inc
insl
das
jns
adc
jmp
stc
lcall
lods
insl
or
mov
ljmp
sbb
fisubrs
pop
in
sub
decl
lods
xor
dec
sarb
sub
add
in
lock
shlb
sub
aas
pop
sbb
mov
incl
push
repnz
sahf
je
dec
mov
mov
jg
test
movsl
repnz
dec
cmp
clc
icebp
sub
fsts
dec
aad
enter
mov
sbb
ds
gs
movsb
insb
mov
cmc
xchg
mov
pop
fxch
lods
cld
ret
lods
sbb
sbb
es
dec
mov
xchg
add
jp
mov
enter
mov
filds
pop
and
popf
call
jle
pcmpeqd
pushf
or
fsts
add
in
sbb
mov
pop
negb
push
stc
loopne
pop
dec
sub
iret
jbe
cmpsb
mov
std
mov
mov
hlt
sbb
inc
xchg
add
mov
adc
mov
mov
xor
xchg
pushf
inc
mov
sbb
ja
out
nop
cwtl
pop
lods
cmpsl
es
xchg
jle
test
xchg
aas
inc
mov
jmp
mov
jmp
popa
hlt
fdivrs
jmp
int
cmp
lock
push
pop
xor
add
rorl
lods
add
sbb
test
outsl
fldt
and
ds
inc
loop
mov
inc
fistl
xchg
and
es
or
and
cmp
mov
jge
adc
push
mov
xor
pop
pop
cmc
cmp
push
lret
nop
stc
pop
mov
les
xchg
jecxz
shlb
push
les
call
push
mov
imulb
or
and
clc
out
stos
jae
ljmp
dec
lods
lds
mov
xchg
sbb
mov
out
mov
sub
and
xlat
xchg
je
jb
pop
mov
outsl
leave
fildll
enter
mov
mov
fsubrp
cmp
mov
sub
xchg
xlat
addr16
xor
pop
stos
and
into
jge
inc
mov
jae
hlt
in
out
or
subl
sbb
lds
es
sti
mov
or
adc
stos
push
add
popf
cmp
or
andl
push
lods
inc
test
in
push
push
dec
inc
out
xor
cmp
bound
mov
xchg
cmp
push
mov
cmpsb
outsl
push
jle
jg
outsl
sbb
mov
loop
push
xchg
xchg
sahf
adc
addr16
sub
push
es
adc
fs
adc
leave
pop
xchg
int3
sub
mov
sbb
cwtl
inc
rol
insl
lds
sbb
faddl
mov
shlb
out
push
insl
inc
lret
out
xor
push
idiv
and
fiaddl
fs
in
hlt
rorl
mov
cmp
cmp
mov
push
cmc
sahf
mov
push
push
or
mov
imul
cmp
push
dec
mov
sbb
xchg
addb
xchg
mov
mov
pushl
mov
jo
jbe
movsb
je
jae
insb
in
push
jmp
sbb
scas
xchg
or
push
mov
mov
fadds
ss
das
xor
rol
mov
xor
jge
jno
dec
inc
imul
cwtl
sahf
and
ljmp
dec
in
jne
fsts
movsb
sahf
jnp
mov
out
insb
dec
add
out
out
xor
into
xchg
dec
jle
jb
in
lret
gs
mov
push
adc
or
push
sbb
pop
lahf
hlt
pop
fdivrl
pop
mov
and
sub
cmpsb
jo
imulb
jle
sbb
pop
xor
push
sub
push
push
xor
mov
or
or
mov
mov
xchg
dec
fdivrp
pop
inc
and
mov
ss
pop
outsl
sub
adc
jmp
test
sti
pop
out
dec
lds
mov
adc
les
xchg
xchg
out
mov
mov
out
dec
std
mov
ja
sbb
loope
xchg
fisttpl
jge
inc
lods
and
sub
pop
enter
int
outsl
outsl
cwtl
xchg
pop
in
rolb
lcall
dec
xchg
lcall
mov
aas
or
push
ljmp
loope
imul
xor
inc
cmpsl
ret
mov
mov
loopne
test
cs
aam
xor
xchg
call
sub
rcr
inc
insb
mov
lock
into
jge
insl
push
push
das
mov
dec
mov
mov
xchg
loope
mov
mov
mov
dec
push
aad
mov
pop
jns
outsl
std
enter
test
push
dec
inc
fwait
mov
mov
inc
mov
sub
jb
cmp
mov
rorl
pop
mov
dec
mov
das
cmpsl
or
mov
cltd
repz
movsb
imul
rorl
shll
inc
mov
addr16
push
out
into
or
cmpsl
scas
xor
jnp
sub
dec
cmc
addr16
sub
sti
pop
aam
popa
scas
in
lahf
xchg
xchg
repz
sbb
stc
xchg
insl
xor
incl
andb
gs
pop
inc
cmp
pop
xchg
cmpsb
divb
mov
outsb
scas
popa
and
adc
je
roll
pop
popa
inc
and
mov
sbb
xchg
int
enter
cs
mov
mov
dec
ja
scas
aam
popf
les
push
pop
xchg
loop
fnclex
arpl
push
shrb
sub
push
ja
jo
and
das
test
sub
insb
and
xchg
mov
mov
fstpt
add
fbld
dec
add
xlat
xor
mov
getsec
fists
and
insb
inc
js
loop
mov
inc
xor
and
mull
pop
dec
call
push
jge
inc
dec
loop
push
jnp
mov
sbb
int3
out
cli
test
pop
jb
testb
std
dec
sbb
testl
addr16
rcll
bound
nop
mov
mov
cmpsl
sbb
popa
sub
lds
inc
jle
sti
imulb
std
mov
xor
push
and
daa
sbb
loop
xor
jle
loop
xchg
leave
in
push
mov
dec
mov
mov
jg
fld
mov
cmc
in
inc
mov
add
jg
outsb
popf
ds
xor
sbb
jno
test
push
hlt
bound
pop
xor
lahf
popf
cvttpd2pi
mov
fs
in
sbb
je
ja
inc
repz
repnz
pop
push
cld
cmc
push
xchg
mov
lcall
pop
pop
fbld
sbb
fists
xor
push
sti
int3
or
cmp
mov
jmp
add
push
mov
fdivr
add
fnstcw
mov
ret
fcmovbe
frstor
push
xor
pop
push
mov
jg
cmpb
loop
int3
fisttpl
sub
push
daa
lods
leave
jmp
mov
mov
cmpb
jb
lds
ret
mov
cmc
mov
lods
fidivl
mov
cmpl
xor
mov
mov
in
icebp
dec
loopne
dec
jge
lods
mov
mov
sbb
dec
shrb
or
aas
aas
push
mov
scas
xchg
cwtl
aas
or
sbb
cmc
dec
es
mov
ss
js
ret
add
int3
push
push
cmc
aad
call
shl
cmp
dec
ljmp
rorb
mov
loop
imul
jecxz
jbe
lcall
popa
les
jl
cli
cmp
repnz
push
movsb
cld
add
rcl
lret
xorl
js
mov
push
ret
adc
push
idivl
jne
je
pop
inc
jb
das
and
dec
inc
sub
add
popa
mov
mov
mov
arpl
pusha
movsl
mov
jg
scas
das
xor
out
movsl
pop
inc
add
dec
adc
mov
jle
jecxz
in
push
and
aas
stos
sbb
sub
cmp
loopne
mov
mov
inc
ja
adc
or
aaa
mov
cmpsb
inc
mov
outsl
add
sub
lods
insb
rolb
cmp
adc
imul
inc
jae
dec
xchg
insb
icebp
push
iret
js
popa
aad
je
sub
pop
mov
aas
mov
mov
push
or
call
ret
push
push
and
adc
mov
mov
push
imul
cli
mov
test
sbb
xor
test
add
or
inc
sar
mov
insb
dec
push
insb
adc
fcomps
jae
gs
mov
jns
push
jb
mov
lds
jno
in
adc
imul
ficomps
xor
push
cmp
sbb
cmpsl
or
add
fldenv
loop
in
repnz
dec
jecxz
sub
cmp
ficompl
sbb
mov
push
rorl
inc
mov
cmp
jg
pop
repz
pop
test
in
in
popf
loope,pn
cmp
ficomps
insl
ss
std
test
stc
jp
dec
lock
mov
int3
ret
or
mov
mov
dec
ret
and
inc
pop
xchg
insl
in
pop
aaa
add
movsl
mov
lods
je
loop
out
sahf
add
sub
or
jp
push
push
xchg
lds
fwait
xchg
jp
cmc
and
jle
and
dec
mov
outsb
subl
nop
jl
adc
aas
rdtsc
icebp
cmc
and
sbb
icebp
daa
das
sub
outsb
rcrl
add
sahf
lret
test
leave
cli
push
je
jp
push
cltd
or
push
sti
sub
cmpsl
les
pusha
push
xchg
mov
das
pop
cmc
pusha
push
in
stos
rep
push
pushl
jae
icebp
in
outsl
or
cmpsl
pusha
repnz
popf
pusha
add
xor
lcall
dec
rolb
fdiv
repnz
sub
jae
cmp
mov
mov
lock
dec
jl
pop
push
sahf
ja
ret
sti
imul
mov
or
fldl
imul
shl
push
inc
push
enter
xchg
mov
add
andb
lahf
aaa
push
cmp
in
test
addr16
in
test
xchg
xchg
icebp
in
jle
pop
insb
imul
xchg
mov
jb
popf
sub
fsubrs
aas
lcall
ja
mov
jnp
jge
out
test
xchg
xchg
xchg
test
pushf
imul
adc
in
scas
je
cmp
inc
inc
add
adc
repnz
push
ret
rcrb
loope
test
pop
dec
push
repnz
imul
inc
mov
out
mov
aaa
fwait
pop
icebp
push
mov
adc
mul
sub
push
into
test
jno
fcmovnu
add
fmull
into
test
adc
aaa
and
xchg
pushf
or
xchg
mov
mov
mov
adc
scas
inc
mov
nop
inc
ss
cmpsb
add
mov
bound
std
push
inc
push
outsb
inc
scas
jo
jl
add
sub
push
js
popf
push
sbb
addr16
or
scas
mov
out
aas
add
or
add
pop
xor
xchg
test
jl
js
neg
das
mov
rcrb
inc
mov
loope
add
pop
mov
mov
ljmp
stos
rcrb
or
call
aam
or
mov
outsl
daa
int
jb
cli
push
xchg
mov
das
std
aas
sub
lds
jae
out
insl
stos
stos
in
jmp
aas
inc
out
out
es
lds
pop
clc
hlt
cmpsl
pop
xchg
xor
out
inc
les
scas
js
ret
xchg
jbe
xor
andl
stos
mov
mov
jge
test
roll
xor
push
xchg
add
or
sbb
push
movsb
pop
shll
lea
pop
outsl
inc
insb
xchg
jns
call
aas
cmp
js
and
xorl
lods
xchg
loop
shr
popa
jo
xchg
adc
pop
xchg
cld
int
mov
roll
test
sbb
sbb
push
push
mov
adc
lret
push
inc
ja
cld
mov
or
push
pusha
stos
js
lcall
adc
cmc
aas
push
xor
xor
stos
rcrb
in
cli
jno
and
push
push
leave
and
fisubl
mov
sub
ret
push
mov
stos
xchg
push
insl
jg
inc
pop
pusha
push
cmp
pop
jl
push
jno
nop
dec
pop
lods
call
lods
leave
or
dec
jmp
cmp
fs
cmp
jns
adc
idivb
or
sbb
jb
xor
dec
xor
icebp
pop
xlat
inc
adc
gs
les
in
std
cmp
xlat
jns
inc
sbb
leave
xor
push
mov
add
and
inc
xchg
add
sarb
jbe
dec
dec
movsl
sub
push
lods
xor
push
fdiv
or
popa
mov
and
or
daa
into
push
insb
scas
jae
jecxz
std
or
lods
jbe
inc
mov
pop
out
jb
ret
iret
push
jne
sub
rcrb
mov
loop
fsubrs
push
add
fisttps
stc
out
pop
aad
push
pop
dec
mov
subl
jle
and
insl
out
mov
mov
into
addr16
bnd
ja
sub
in
and
fistl
aaa
mov
jno
shll
loop
in
lcall
sbb
outsb
add
xchg
push
push
xlat
in
xor
mov
in
jne
sub
enter
in
stos
mov
iret
inc
mov
push
fstl
xchg
dec
pop
insl
dec
rolb
decb
xor
cmp
std
pop
xor
or
push
jno
imul
cmp
loopne
pusha
in
int
bound
mov
cmp
daa
sub
dec
cwtl
xor
push
mov
icebp
movsl
bound
imul
pop
sbb
or
fsubs
xchg
movl
mov
repnz
lods
push
jno
mov
xor
ja
loop
scas
test
and
or
outsb
push
cmp
and
pop
pop
push
add
jns
test
aad
mov
push
imul
cmp
inc
arpl
sbb
jnp
jg
movb
and
mov
sahf
dec
inc
mov
and
call
dec
mov
subl
icebp
mov
mov
or
imul
fwait
imul
mov
push
adc
outsb
xchg
xchg
or
jge
cli
pop
inc
clc
mov
movsb
xor
and
stc
jecxz
mov
push
or
push
in
rol
insl
add
addr16
popf
push
mov
insb
push
mov
and
std
push
pop
lds
xchg
out
inc
fimull
orb
mov
test
nop
inc
xor
cmpsl
punpckhbw
cmp
das
in
lret
pop
insb
test
sbb
mov
mov
test
fimuls
dec
add
fisttpll
push
lds
mov
sbb
ss
jle
das
scas
jmp
pop
xor
lcall
and
jecxz
mov
inc
push
and
mov
outsl
mov
push
mov
mov
cmc
cmp
test
repnz
test
ljmp
rep
test
pop
fiaddl
in
sub
fstps
jle
push
cmpsl
popf
mov
popf
xor
mov
fwait
popf
add
push
mov
xchg
inc
jae
add
push
sbb
int
rorl
lds
push
push
xor
lret
movsl
addb
lcall
push
cmp
pop
fbstp
pop
push
ljmp
mov
ret
sbb
mov
cmp
xlat
inc
cmpsl
cld
sbb
jae
rclb
bound
pop
fistl
out
mov
loope
filds
test
add
insb
ret
push
je
les
sub
bound
pop
xchg
sarb
loopne
adc
mov
test
fwait
insl
add
inc
ds
push
rcl
test
mov
lods
cwtl
mov
push
or
mov
shl
rorb
mov
ss
add
ljmp
adc
int3
pop
inc
jg
xchg
push
nop
sbb
add
sub
mov
addl
inc
lods
in
xor
mov
gs
test
out
jns
insb
push
jne
clc
push
push
jmp
xor
mov
add
mov
or
shl
sbb
push
sub
lea
lods
pusha
pop
insb
adc
mov
jns
and
je
xor
adc
and
jecxz
out
int
inc
or
mov
xchg
inc
or
sbb
sti
or
cs
lds
fwait
aas
mov
mov
insl
lret
mov
js
and
xchg
rcrl
pushf
outsb
outsb
push
inc
pop
cltd
scas
insl
shl
test
cs
aad
popf
adc
hlt
push
mov
pop
jbe
adc
inc
js
in
ds
mov
inc
icebp
push
add
dec
fiaddl
mov
sub
sub
lahf
pop
mov
inc
mov
mov
mov
mov
popa
loope
imul
sbb
jle
rclb
dec
loop
out
xor
push
std
mov
push
pop
sbb
pop
clc
mov
sub
ljmp
popf
ss
push
loopne
icebp
sbb
xchg
pop
xchg
mov
pop
fcomp
adc
dec
flds
sbb
loopne
dec
lock
mov
loope
mov
unpcklps
pop
sub
adc
int
cld
xor
je
daa
sub
or
fisttps
mov
leave
std
addl
sti
xlat
jbe
cmp
bound
jnp
pop
adc
aam
jge
lds
pop
cld
pop
ljmp
ficoms
jecxz
aam
nop
fnstenv
push
add
stc
jo
pop
in
stos
inc
xor
mov
es
pushf
lea
add
fidivrl
sub
push
jo
rcrb
dec
adc
mov
les
scas
fisubs
test
xor
mov
inc
inc
dec
add
mov
mov
lods
inc
jmp
add
mov
leave
jg
fs
mov
and
or
addr16
rcrb
lcall
dec
sbb
sbb
je
inc
cmp
push
jbe
mov
dec
inc
mov
psubw
jg
das
jmp
adc
jo
out
or
jno
push
cmp
cmp
fnstenv
xchg
add
jmp
inc
mov
add
and
aas
imul
fcomip
ja
movsb
clc
jo
mov
cmp
out
aam
xor
repz
add
lahf
push
test
clc
fadds
mov
jbe
and
sub
jl
scas
lds
lcall
call
cmp
and
cwtl
mov
fsts
sarb
cwtl
mov
into
jae
adc
fistpll
into
mov
xor
cmc
and
andl
or
in
movhlps
int
jl
dec
cmpsb
js
push
jmp
jb
loope
loopne
adc
pop
insb
inc
outsl
push
out
mov
xchg
in
aaa
pop
lods
addr16
clc
ret
xchg
pushf
std
add
adc
cmp
outsl
cld
imul
mov
xchg
mov
sbbl
hlt
lods
pop
mov
adc
or
mov
ror
ror
push
jg
rorl
dec
pushf
clc
xor
rcr
jp
dec
mov
sbb
xchg
mov
mov
fbstp
divl
sarl
in
sub
filds
movsb
cltd
es
or
mov
or
cwtl
fwait
sbb
clc
out
xchg
dec
cmpsb
push
hlt
loopne
xchg
lahf
sbb
adc
ljmp
push
mov
int3
and
mov
adc
lock
sti
sub
adc
dec
push
mov
or
ret
ror
or
and
jp
and
add
dec
pop
scas
cmp
lods
or
mov
arpl
mov
movsb
jo
int3
gs
outsl
push
sbb
enter
sbb
stos
jge
scas
mov
push
xchg
not
aad
mov
jne
sti
movsl
movsb
lcall
jle
mov
xor
into
int3
mov
fwait
lods
push
push
xor
inc
inc
jb
in
fcomps
mov
jmp
sub
inc
stos
lcall
sahf
or
js
or
jl
inc
xchg
sti
jb
das
das
and
or
mov
jo,pt
insl
or
movsb
daa
push
xchg
mov
pop
repz
sahf
jge
lea
and
bound
icebp
push
out
je
jne
mov
mov
outsb
roll
out
std
aaa
dec
jp
mov
mov
out
push
cmp
xor
clc
jb
sbb
inc
cmp
and
add
shrl
inc
sbb
add
pop
andl
cmp
je
int
sti
xchg
lock
mov
pop
je
adc
xsaves
dec
cmpsl
mov
dec
pop
sub
dec
mov
pop
sbbb
sarl
test
in
fdivl
mov
lcall
fists
jb
xor
out
in
std
dec
imul
insl
mov
push
aad
ss
outsb
ret
fisubrl
jge
lea
sub
icebp
sub
pop
lods
and
stos
les
cvttps2pi
pop
hlt
dec
out
mov
ss
in
push
sbbb
daa
jecxz
mov
loopne
sarl
testb
and
xor
add
mov
movsl
add
cmc
lock
notb
pushf
jg
sub
jp
cwtl
cld
stos
mov
push
add
or
mov
push
inc
sar
pop
mov
sub
stos
dec
sub
xchg
sahf
ss
pushl
push
xchg
sub
imul
in
hlt
lret
pop
push
sbb
push
pop
push
ds
pop
push
clc
push
xchg
pop
dec
mov
sub
pusha
mov
mov
cmp
das
sbb
shrl
xor
insl
xor
mov
mov
jb
int3
fwait
mov
cwtl
dec
cltd
dec
inc
jl
and
mov
pop
xor
fwait
or
inc
pop
xor
dec
ret
cs
outsb
ret
cld
imul
pop
cwtl
mov
and
xchg
ret
cmp
daa
sub
stos
jl
or
pushf
jge
dec
test
insl
mov
rol
les
xchg
cmpsb
lods
rcl
clc
add
mov
xor
call
jmp
repnz
inc
pusha
mov
jmp
or
subb
and
fnstenv
cmc
inc
jo
loopne
dec
sub
pop
gs
jl
ss
clc
xor
add
int
decb
lods
jle
aam
and
std
loope
scas
repnz
xchg
repnz
addr16
adc
jbe
xchg
repz
cmp
loope
push
cmpsb
pop
add
push
push
xlat
pop
pop
jbe
xchg
xchg
idivl
sti
cmc
icebp
mov
aad
jge
test
push
sub
out
jecxz
push
aad
jmp
cmp
fidivrs
mov
mov
imul
xchg
cli
arpl
fsts
shlb
xlat
fbld
fwait
lret
cmp
mov
lret
lret
mov
inc
push
arpl
cwtl
pop
jg
out
mov
cmp
loope
fldl
jns
push
aam
dec
push
sub
jmp
jmp
jne
sbb
xor
pop
or
into
lds
rclb
jl
pop
test
aad
push
sub
xor
lahf
mov
push
pusha
mov
and
repz
cltd
sbb
outsb
jecxz
xchg
mov
mov
out
aad
add
lret
or
jmp
xchg
push
push
add
adc
in
pop
adc
push
lods
imul
jb
sub
xor
add
imul
adc
mov
mov
ja
mov
fnsave
dec
sbb
outsb
std
arpl
loop
xchg
roll
mov
into
pushf
pop
inc
mov
dec
fiadds
xor
push
stc
or
testb
pushf
push
jecxz
js
pop
clc
les
dec
xchg
es
jae
fiadds
and
insb
adc
mov
pop
adc
mov
xchg
add
cli
push
lea
dec
enter
ss
loope
inc
lret
insb
in
adcl
and
push
jo
push
sbb
aaa
pop
out
frstor
mov
testl
sub
shll
xchg
push
fildl
lock
call
leave
inc
pop
cltd
xchg
jecxz
aas
push
sti
cmp
lahf
jae
jmp
xor
mov
jno
mov
hlt
sbbb
jle
jg
bound
mov
and
decb
jo
xchg
sbb
pop
fwait
sbb
das
inc
xchg
adc
cltd
pusha
imull
orl
popf
add
stc
sub
push
aam
mov
adc
pop
dec
popf
ficomps
pop
mov
fnstcw
and
and
test
or
fists
lahf
rcrl
xchg
mov
cmp
mov
add
cmc
shl
les
and
fcmovbe
add
push
sub
in
or
mov
mov
das
clc
aam
insb
je
sahf
aas
sub
sbb
push
add
loopne
stos
xchg
mov
mov
test
sbb
mov
test
or
dec
inc
std
ret
jmp
lods
cmp
cmc
mov
pop
int3
mov
dec
pop
jne
out
movsl
jmp
mov
push
add
mov
enter
sarb
cmc
or
add
mov
outsb
ljmp
ds
ss
or
out
idivl
movsl
pop
bound
mov
or
ja
cmp
mov
pop
int
add
movsl
cmpsb
das
or
mov
aam
sbb
xchg
mov
add
xchg
in
pop
mov
or
inc
or
or
dec
push
fs
cs
xlat
dec
jnp
sub
sub
shrb
xlat
add
test
test
icebp
sub
sbb
test
data16
in
inc
pop
test
xlat
xor
lret
dec
cmp
push
rcrl
or
push
xlat
inc
lret
sahf
sub
aam
cwtl
cmc
movsb
inc
imul
push
or
and
test
mov
pop
gs
icebp
sub
xchg
sahf
shrb
lods
lcall
mov
adc
mov
out
lock
lea
xor
outsb
mov
or
dec
xor
clc
add
ret
out
jne
mov
repz
std
dec
and
stos
in
cld
push
stos
mov
mov
pop
mov
mov
loopne
jg
or
sub
in
cmp
sub
scas
or
stc
jge
cmpsb
int3
jmp
jecxz
inc
xor
rorb
mov
or
jns
popa
sbb
mov
and
jne
inc
sarl
push
subb
lds
xchg
mov
mov
add
fcmovnbe
cltd
lcall
rclb
rolb
xchg
movsb
in
jo
sub
in
aaa
jp
push
push
pushf
mov
enter
push
testl
add
add
inc
popa
addb
xchg
fsubs
push
inc
fcomps
clc
sub
mov
mov
and
mov
adc
xchg
cmpsb
ljmp
jmp
xor
loope
and
cmp
adc
fdivs
movsl
dec
rol
add
call
push
sti
add
pop
dec
rcll
shlb
push
jo
pop
mov
jecxz
enter
inc
lahf
pop
push
aam
pushf
push
iret
xchg
sub
add
cmpsb
push
aad
push
xchg
enter
xchg
mov
dec
xor
add
cmp
neg
je
data16
pop
mov
or
mov
jae
add
test
and
mov
cmpsb
lods
xchg
test
jecxz
adc
imul
addl
mov
xchg
pop
sub
aam
dec
pop
xor
popf
sub
test
mov
insb
xchg
xchg
aam
cmp
lds
mov
outsb
orl
jmp
mov
and
mov
or
jbe
imul
imul
and
fistpl
jbe
in
mulb
addl
jo
or
rcr
lret
ljmp
mov
dec
cmpsl
fs
mov
cltd
js
inc
fistpll
pusha
ret
push
mov
icebp
imul
xchg
roll
aam
cmpsl
and
inc
icebp
sahf
rol
sbb
mov
mov
cmp
aad
test
mov
sahf
out
push
cmp
fnstsw
outsl
ret
xchg
mov
jns
push
stos
scas
clc
lahf
and
or
clc
sti
loop
mov
bound
push
adc
sbb
nop
xor
jecxz
lahf
mov
imul
dec
xor
sub
pusha
mov
sbb
sarl
mov
into
sbb
sbb
in
inc
scas
icebp
fstps
iret
push
inc
push
call
imul
sub
jp
jb
xchg
jl
ds
add
mov
add
push
daa
push
neg
aaa
mov
dec
pop
pop
lcall
shll
test
mov
lret
mov
and
cmpsl
cs
xchg
add
jecxz
test
stos
mov
rcl
cltd
or
lods
jns
adc
lret
jno
dec
fdivrs
mulb
das
test
int3
rclb
sbb
addr16
das
adc
cmpsl
data16
imul
imul
dec
or
cs
dec
sar
iret
imul
ds
mov
jnp
inc
mov
and
ficompl
inc
mov
ja
pop
fstp
leave
mov
cmc
fldt
xor
data16
jle
mov
test
rolb
sahf
lahf
aam
mov
icebp
cltd
cmp
cmp
sbb
fiadds
ljmp
andl
aas
sub
sub
es
cld
mov
xor
mov
cmp
dec
lret
xchg
cli
jae
adc
movsl
jb
roll
in
jle
lds
test
cld
mov
das
jb
out
dec
cltd
mov
loope
lahf
call
cmp
das
icebp
dec
loopne
or
jl
mov
rcl
or
mov
out
push
add
adc
in
or
mov
in
dec
sbb
test
or
dec
mov
or
mov
jmp
sbb
jl
inc
mov
incb
inc
frstor
pop
lods
pop
xchg
fisubrs
xchg
int3
sarl
mov
mov
icebp
lods
inc
dec
out
scas
imul
nop
mov
popa
fldl
out
xchg
std
mov
dec
enter
bnd
fsubrl
pop
cmp
out
xchg
fsub
add
xor
hlt
adc
sub
push
popf
jge
dec
jl
sbb
xchg
pop
cmc
addb
mov
fisubl
ss
mov
mov
std
out
out
add
fisubrl
cmp
addr16
push
inc
fs
lret
rcll
test
or
xchg
adcb
int
mov
mov
aaa
stos
pop
sbb
bound
xchg
rorl
sbb
stos
scas
nop
push
pop
xchg
xor
sysexit
call
and
add
rclb
mov
cmp
hlt
call
add
lods
repz
xor
pop
mov
stos
cs
mov
popa
adc
push
mov
push
mov
leave
setnp
lock
sar
cmp
repnz
orb
ficoms
cmp
push
xchg
ret
popf
sub
mov
nop
dec
or
dec
pop
sahf
ficoml
adc
aad
cmp
jb
sbbb
pop
mov
pop
xlat
add
insl
add
fisttpl
push
lea
cli
shrb
rcrl
dec
ja
jp
adc
sub
mov
stc
lods
cmp
xchg
push
das
mov
mov
push
lret
mov
in
sub
dec
pop
push
lahf
scas
out
adc
dec
mov
ljmp
and
popa
gs
jbe
mov
fmuls
orl
and
insb
aam
add
js
pop
jmp
mov
scas
stos
test
push
cmp
sub
dec
pop
mov
xchg
pop
xchg
sub
sub
std
sub
adc
test
ljmp
and
imulb
ds
sub
xor
ds
or
jns
addr16
and
ret
inc
xor
and
pop
sbb
inc
and
aaa
gs
xor
mov
fistpll
imul
inc
sub
mov
das
popl
addl
aas
gs
aaa
outsl
repnz
jl
cli
rep
into
or
out
mov
loope
jnp
sbb
decl
movsb
test
mov
inc
push
cmc
dec
movsl
pop
xchg
in
cmp
pop
dec
and
aas
add
clc
pop
adcl
movsl
mov
cmp
push
xor
gs
mov
js
sbb
cmpsl
stc
or
or
sub
pop
mov
jnp
loope
clc
push
in
sbb
js
data16
lock
dec
es
mov
bound
cmpsb
and
loop
cltd
inc
test
sarb
imul
pushl
pop
rorl
sbb
test
xchg
cmp
movsb
inc
sbb
inc
sub
mov
mov
aad
push
fxch
mov
clc
cmp
xor
or
inc
pop
push
shlb
mov
fwait
xchg
add
ret
add
mov
enter
pusha
repz
stos
add
scas
scas
fisttps
inc
mov
adcl
jl
orl
pop
sbb
ja
sbb
cli
mov
cmpsl
jo
loope
je
mov
enter
das
xchg
dec
add
stc
into
inc
outsl
xchg
and
cmc
popf
mov
icebp
adc
jp
add
or
movsb
mov
pusha
adc
inc
cmc
lods
aad
xchg
aaa
and
das
int
sbb
or
and
jmp
push
bound
jp
in
adc
outsb
jmp
pop
and
mov
jns
out
mov
ret
jb
pop
inc
jmp
or
or
cltd
in
cwtl
lret
mov
fistps
out
cmp
mov
insl
pop
int3
cltd
mov
lods
int
pop
loope
xchg
sbbl
xchg
jp
ret
push
and
and
xchg
scas
pop
inc
push
sbb
cmp
and
insb
and
cmp
imul
and
lret
xchg
loop
lcall
push
ret
ret
scas
cmpsl
mov
stc
or
les
sbb
popf
lock
dec
into
mov
mov
les
xor
outsb
scas
sti
cli
rorl
in
and
xor
jno
pop
cmp
leave
and
lds
push
lcall
and
das
sub
test
inc
jbe
test
repnz
pop
sub
mov
sbb
push
imul
mov
and
enter
mov
mov
fnop
mov
xor
mov
add
pushf
adc
lock
addr16
xchg
xchg
xchg
cmp
enter
xor
mov
loop
movsb
push
inc
call
sbb
xor
inc
jle
fnstenv
or
stos
cmp
enter
dec
jp
gs
or
sub
shlb
sub
test
push
movsb
mov
push
les
cli
lahf
fs
sbb
iret
mov
stos
arpl
pop
inc
cs
jmp
fbstp
sub
jmp
repz
jnp
loop
or
mov
push
mov
mov
xlat
xchg
xchg
out
sbb
out
add
pushl
push
imul
enter
pop
cmc
mov
imul
push
mov
test
adc
int3
jmp
in
xor
jns
arpl
or
mov
pop
cmp
add
jle
ss
inc
push
les
fnstcw
ljmp
stos
xor
adc
cmpsb
pop
pop
xchg
jbe
out
cmp
popf
call
adc
add
cltd
xor
jno
lret
mov
jmp
cmp
movsb
pop
cli
cmp
sbb
sahf
sbb
les
test
loop
sahf
push
xor
inc
pop
push
xor
ret
aam
jp
adc
and
pop
andb
xchg
scas
lods
push
push
xchg
adc
pop
inc
sbb
xor
xor
sub
orb
inc
sbb
aam
scas
ljmp
xor
popa
daa
pop
mov
mov
rolb
mov
inc
push
paddusw
imul
or
mov
out
call
adc
es
sbb
sbb
xor
pop
jp
or
inc
jb
adc
js
sbb
cmp
stos
cld
cmpsl
pop
addr16
lcall
adc
ret
xchg
cwtl
xchg
pop
fdivs
mulb
add
pushl
and
imul
ja
xor
xchg
jmp
js
dec
mov
xchg
imul
push
sub
sub
jg
add
fistpll
dec
mov
adc
out
or
mov
fs
lahf
inc
mov
ss
and
inc
insb
jae
add
into
in
imul
in
int
ret
or
cmp
or
movsl
shrl
cmp
cwtl
arpl
xchg
sbb
adc
cmp
clc
incl
ljmp
lret
mov
mov
das
pusha
in
sahf
lret
sbb
xor
jnp
lret
mov
xchg
sbb
divl
es
sub
cmp
cltd
push
jecxz
lea
lahf
sub
mov
and
and
addr16
add
inc
add
jne
xchg
fldt
movsl
jg
mov
jl
addr16
stc
cltd
jl
fidivs
std
sub
int3
add
or
rcrb
adc
int
insl
and
idivb
pushf
repnz
sarl
das
jne
mov
pop
stc
cld
ret
inc
jg
mov
lock
xor
in
xchg
popf
inc
int
add
inc
ljmp
int3
cmp
mov
sub
cld
pop
out
stc
dec
jae
or
pop
shld
in
xchg
and
addl
inc
xchg
cmp
jo
mov
pop
pop
pop
scas
out
cld
ds
rcl
out
insl
ret
gs
dec
ja
aaa
std
popa
and
out
cmp
cmp
lods
lods
fistl
jle
aas
adc
das
push
jo
aas
enter
ficomps
shlb
and
xchg
inc
mov
inc
daa
out
push
pop
andl
lds
popf
nop
or
ret
stc
cmp
pop
adc
and
inc
or
jne
in
leave
clc
addr16
stc
fdivp
push
into
mov
ds
out
out
dec
cmp
movsl
cmpsl
js
int3
js
inc
jb
movsl
jbe
mov
lahf
es
cmpb
cmp
negb
mov
dec
enter
imul
inc
jle
cmp
add
sub
inc
mov
ret
into
add
gs
push
negl
mov
sbb
enter
scas
jge
outsl
pop
lea
dec
das
xchg
or
jne
mov
fxch
cmp
xor
push
int3
int3
or
sub
addb
inc
and
repz
dec
mov
subl
xlat
out
mov
mov
fs
dec
fists
in
jmp
xor
or
dec
adcb
gs
in
js
inc
outsb
divb
rcrl
cwtl
dec
sbb
daa
cmp
scas
in
sahf
add
xor
fmuls
or
push
data16
mov
sbb
jae
scas
out
cmp
or
test
push
mov
cmp
lea
fcomi
aad
imul
or
rorb
and
icebp
das
sbb
add
xor
mov
lret
xchg
sbb
mov
outsl
cmp
or
das
jmp
fsubrl
jp
rcrl
out
fucomip
jg
cmpsb
sub
enter
push
int3
and
hlt
pop
shll
std
std
outsl
shrb
leave
mov
or
dec
pop
mov
in
mov
sub
invd
test
incl
fnstenv
cmp
xor
mov
bound
ja
in
in
cwtl
aas
hlt
sbb
out
jl
or
adc
inc
dec
lods
in
dec
call
ret
adc
or
inc
jbe
mov
dec
fistpl
push
inc
mov
pushf
adc
xor
mov
cmpsb
mov
cmpsl
dec
jno
in
add
hlt
mov
test
stos
xchg
inc
xchg
lcall
mov
push
or
mov
add
mov
dec
test
gs
clc
testb
cli
into
imul
fimuls
movl
lods
scas
test
push
pop
dec
sub
sbb
xchg
ds
cmp
mov
jo
fs
subb
mov
sub
add
push
sub
inc
out
sbbb
dec
mov
loopne
or
push
cmp
xchg
leave
mov
mov
mov
mov
fisubrl
jmp
fimuls
jo
xor
jmp
sub
ljmp
xchg
out
lods
sub
mov
dec
loopne
jae
data16
out
out
insl
add
mov
insb
cmc
inc
cmp
shrl
pushf
fwait
cmp
xchg
push
mov
mov
mov
sub
xchg
sar
pop
lret
ret
xchg
insb
xchg
pusha
je
iret
hlt
xchg
sub
sbb
neg
mov
push
and
popf
mov
push
stos
cltd
and
hlt
jns
or
push
or
mov
lock
shll
fxch
jecxz
lcall
gs
push
fucomi
call
addr16
xor
push
out
lret
or
xor
lds
dec
push
popa
sub
sahf
fistpl
sbb
nop
xchg
or
shll
cld
and
mov
mov
push
push
orl
dec
sbb
fmulp
popf
mov
inc
push
mov
addr16
imul
lods
pop
int
lret
jle
dec
adc
sar
xchg
pop
repnz
mov
push
sbb
push
cmpsb
inc
test
loope
loope
or
pop
testl
lock
xchg
jb
mov
andb
mov
xor
shrl
pusha
xchg
fisttps
sbb
subb
movsb
lret
mov
test
in
push
push
insb
jl
jmp
pop
int
fisubs
je
repnz
mov
loopne
adc
sub
sbb
add
inc
add
pop
add
inc
push
sub
or
jp
inc
sub
divb
pop
stos
sbb
lahf
jnp
dec
and
cmp
xlat
cmp
push
jb
mov
jno
subl
repnz
mov
cwtl
jb
push
pop
add
dec
jecxz
in
mov
fstps
psubsb
sub
cmp
dec
mov
push
jge
sbb
inc
jnp
dec
fisubl
sbbb
xor
pop
jmp
mov
and
lods
sysexit
pop
dec
lcall
aam
insb
jbe
push
cmp
and
movsl
rclb
daa
loopne
pusha
and
xchg
mov
push
push
aas
push
or
push
mov
and
pop
mov
shrb
mov
sbb
push
jle
mov
mov
call
ljmp
and
mov
stos
leave
mov
into
testb
push
sub
daa
mov
daa
adc
pusha
mov
lea
es
les
pop
mov
sbb
mov
add
arpl
lock
inc
arpl
test
mov
ds
shl
das
pop
jne
out
cmp
aas
inc
sub
cwtl
ja
rolb
lea
cli
add
inc
test
imul
mov
push
inc
cmp
mov
push
repz
scas
rcrl
xlat
aas
jns
stos
push
push
mov
fidivs
push
sub
scas
repz
leave
add
orb
bound
mov
in
mov
int3
das
cs
and
inc
jp
xchg
aas
dec
mov
lds
scas
push
aam
add
xor
popa
jge
negl
or
cmpb
mov
pop
mov
jg
xchg
add
pusha
cmpsb
dec
sub
lcall
ds
stos
loope
pcmpgtd
mov
adc
cmp
cmpsl
mov
and
jl
test
test
clc
pop
repnz
cmp
xchg
dec
cwtl
mov
sub
xor
scas
pop
mov
mov
bound
aas
dec
stos
dec
push
and
push
sbb
leave
jp
cli
sbb
stos
sti
les
cmpsb
sbb
dec
sbb
decb
into
shl
and
stos
imul
ret
cwtl
push
mov
inc
add
jle
and
ret
leave
inc
lds
push
push
shlb
jae
push
test
sahf
loope
iret
pop
dec
aam
bound
insl
mov
jge
jne
pushl
into
fsubrl
add
mov
addl
std
adc
xor
adc
fstpl
push
jne
or
xor
adc
sti
xor
mov
add
mov
mov
gs
mull
