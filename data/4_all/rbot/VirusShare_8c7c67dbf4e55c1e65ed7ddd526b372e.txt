mov
xchg
sbb
jl
lret
push
cmpb
jo
sub
inc
adc
arpl
mov
dec
imul
stos
gs
xor
inc
pop
pop
dec
xlat
cwtl
mov
mov
inc
sub
sbb
aas
lcall
mov
mov
sarb
sub
mov
sbbb
out
out
ss
mov
mulb
xchg
xor
sbb
xchg
sub
std
pop
pop
aad
fidivs
mov
add
mov
inc
fdivrs
sbb
sbb
into
or
test
frstor
testb
cmp
adc
and
iret
cs
arpl
lea
enter
dec
dec
stc
jl
ljmp
dec
ds
xchg
push
outsl
or
xor
jp
int3
movsl
pushf
mov
cwtl
mov
sarb
rcrb
and
mov
pop
xchg
jmp
in
adc
lcall
pop
in
dec
push
jbe
mov
inc
xor
ja
iret
add
adc
int
rorl
or
mov
and
mov
jbe
ds
daa
pop
inc
pop
scas
jne
xchg
scas
adc
in
lods
dec
or
out
out
adc
jae
xorl
or
and
dec
cmp
xor
inc
test
ret
fwait
jecxz
jl
sbb
jo
mov
or
shlb
js
inc
enter
fwait
mov
pop
pop
cmpb
xchg
push
hlt
cmp
incb
inc
cmpsl
jg
in
int3
dec
inc
inc
push
or
mov
inc
jmp
sub
aaa
adc
loop
add
jns
and
xchg
rcll
jmp
pop
cmpsl
cltd
movsl
inc
aad
mov
adc
stos
and
cld
xor
enter
inc
mov
mov
or
mov
loop
or
inc
push
stos
test
dec
mov
pop
mov
mov
push
jle
cmpsl
lcall
mov
loop
lock
jle
mov
xor
pushf
add
fistpll
mov
adc
cmp
xchg
jl
push
mov
xchg
pop
sbb
je
dec
mov
shrb
rcr
pop
in
xor
lcall
ss
test
repz
orl
push
xor
test
mov
mov
or
sahf
loope
or
incb
fisubrs
fs
je
sbb
js
sbb
iret
push
sbb
mov
mov
fsubl
shr
inc
pop
aaa
sbb
mov
mov
rcll
cli
push
outsb
push
outsb
aad
popa
push
inc
mov
mov
push
xor
adc
lret
sub
mov
scas
ret
insb
mov
lcall
pop
mov
jno
out
je
leave
pushf
or
popa
sbb
arpl
xchg
pop
in
or
xchg
dec
xchg
jnp
out
decb
std
jl
cwtl
adc
adc
xchg
dec
mov
pop
shl
insl
inc
popa
lods
cltd
jae
xor
xor
push
or
mov
mov
adc
stos
mov
and
in
loope
jge
in
das
xchg
sub
jmp
xchg
shrl
dec
cmpsl
push
adc
shrb
div
dec
lods
mov
jne
add
xchg
shll
xor
dec
popf
aaa
sbb
adc
sti
sub
in
mov
mov
cmp
outsl
jno
rolb
mov
xchg
cmpsl
push
jp
sub
pop
mov
sbb
or
or
cli
xor
add
xor
cmp
mov
mov
inc
loopne
lds
push
ss
cmp
xchg
adc
push
push
lods
cmp
sub
xchg
out
mov
add
pop
cmp
hlt
mov
adc
aad
mov
mov
mov
aaa
add
mov
jmp
cli
stc
fistl
leave
gs
data16
test
subb
orl
stc
fstpt
mov
rcrb
pop
out
pop
xor
add
bnd
sbb
adc
repz
mov
pop
ror
cmp
jae
test
jecxz
cmp
mov
movsb
js
xor
jp
out
stos
cli
add
xor
lret
pop
dec
dec
loop
cmp
and
in
imul
mov
in
ds
jmp
add
popf
and
out
dec
mov
fld1
mov
xchg
loopne
dec
enter
daa
dec
dec
orl
jmp
lret
fldcw
ljmp
and
cmp
das
xor
push
mov
icebp
add
fisttps
and
enter
jmp
jne
xchg
xlat
and
mov
inc
fiadds
rclb
push
test
clc
push
sahf
lods
mov
das
mov
jnp
jl
add
div
pop
and
lret
test
pusha
mov
mov
cmp
xor
mov
mov
filds
stos
lcall
jo
sub
sub
jne
add
jbe
jno
jmp
cmpb
rcll
adc
dec
jo
push
lcall
dec
dec
sub
insb
fcmovnb
inc
inc
cltd
arpl
dec
test
pop
jmp
lea
mov
cltd
fstp
movsl
jg
popf
pop
jg,pn
andl
aad
ds
loopne
test
dec
imul
out
mov
xor
decb
mov
jne
aad
mov
or
xorl
adc
pop
cmp
out
mov
lock
push
adcb
std
xor
movsl
lret
dec
addr16
jmp
adc
sbb
ja
push
pop
add
into
xchg
lods
ljmp
aaa
push
xchg
xlat
jle
inc
or
xchg
mov
aam
inc
dec
add
or
mov
sbb
sahf
data16
js
aad
jns
cmpb
out
movsl
mov
jo
push
adc
xchg
dec
add
rorb
adcb
sub
into
ljmp
scas
and
leave
aam
xchg
mov
icebp
je
test
push
test
push
push
jb
dec
imul
ja
sub
or
sbb
mov
aam
gs
fsubr
lods
xor
rep
mov
pop
inc
jb
pop
push
xchg
stos
sbb
push
das
stos
pop
cmp
stos
add
dec
mov
insl
imul
jae
hlt
xor
pop
sbb
lods
sub
or
dec
cmpsl
cmp
test
roll
sar
test
aam
and
clc
mov
mov
pop
lret
mov
mov
mov
das
pop
mov
cld
xchg
rorl
add
jae
mov
xchg
js
pop
neg
daa
lret
call
lret
mov
sbb
cmpb
add
lret
jne
stc
jnp
jp
ret
into
jnp
pusha
pushf
jmp
add
iret
mov
incb
pop
rcrl
or
xor
mov
sub
adc
sub
mov
je
imulw
lcall
cmp
xor
lahf
std
aas
stos
shll
sub
mov
js
fldcw
insl
mov
dec
insl
xchg
popf
inc
push
aam
ret
and
je
inc
and
xchg
lahf
sbbl
cmp
and
pusha
add
pop
dec
mov
outsl
sub
mov
cli
pop
dec
mov
mov
mov
repz
xor
mov
scas
push
jp
and
adc
and
lods
push
cmpsb
cmp
fadd
ja
les
shrl
adc
ret
int3
pop
add
sbb
popf
out
ss
jge
dec
cmp
sbb
xlat
jl
mov
out
in
sti
out
lock
dec
test
sbb
dec
dec
mov
es
mov
mov
mov
ja
push
push
cmp
adc
jp
push
call
sbb
jl
pop
jp
mov
lahf
cmp
nop
std
push
pop
push
push
mov
add
jmp
addr16
ljmp
mov
mov
sub
mov
push
arpl
aad
push
mov
insb
stos
and
lahf
dec
or
cwtl
fidivl
lret
scas
mov
mov
pusha
pop
push
add
push
js
in
ja
jl
imul
mov
pushf
pop
pusha
pop
add
pushl
mov
fnstcw
rorl
mov
pop
push
cld
jmp
inc
push
sbb
test
mov
sbb
jl
iret
cld
and
sub
lds
cmp
lods
push
stc
add
test
cmpsl
xor
push
or
adc
xchg
scas
bound
sub
mov
mov
push
scas
ljmp
stos
aam
push
cmpsl
push
adc
xchg
and
pop
or
cmpsb
std
out
jne
movsb
mov
mov
adc
push
cmp
jmp
cmp
ds
lahf
and
sarl
mov
dec
sbb
enter
ja
ds
cmp
sub
inc
or
jns
out
fdivrl
sarl
adc
shll
fistpll
sub
pop
cmc
stos
sub
push
dec
scas
cmp
push
pop
cmp
pusha
adc
sub
push
xor
mov
inc
shl
pop
ret
sub
jl
push
cwtl
mov
in
push
add
and
mov
xchg
rclb
lcall
xchg
dec
sbb
in
adc
push
sub
pop
jbe
pop
mov
movsl
addr16
xlat
stc
sbb
jne
cmp
or
and
decb
sub
cld
loope
push
jl
je
xor
aas
xor
push
jo
jns
in
hlt
fmuls
pop
in
loope
les
pop
push
icebp
jnp
mov
mov
clc
repz
dec
loop
cmpsb
xchg
fiaddl
pop
mov
inc
inc
or
addr16
aam
dec
mov
add
push
or
mov
jb
or
dec
push
outsb
test
icebp
stos
je
cmp
mov
loope
mov
xor
roll
xor
daa
std
inc
jns
push
jo
jo
adc
js
aas
add
mov
cwtl
push
adc
cmpsl
push
adc
jp
jle
or
push
outsb
cmp
adc
fnsave
lds
push
roll
mov
and
dec
leave
inc
push
and
daa
cmc
jg
sbb
push
mov
les
jle
mov
imul
test
cmpsl
or
test
pop
cli
cmp
in
ljmp
int3
clc
mov
push
mov
movsl
fsts
jbe
fnstsw
pop
mov
mov
idivl
dec
xor
ljmp
push
cltd
pusha
rcl
xor
call
test
aaa
insl
and
pop
fmul
idivl
inc
cmp
ja
mov
and
xor
sbb
push
nop
fcompl
fisubrl
cmp
lret
add
pop
add
jecxz
push
fucom
movsb
dec
pmaxsw
clc
cmp
std
adc
test
jno
es
or
ja
sub
jle
xchg
adc
mov
pop
jl
sub
pop
js
ss
adc
add
int3
adc
arpl
fsubrl
imul
jg
insb
pop
imul
mov
aad
cs
cwtl
push
jmp
mov
mov
dec
mov
mov
stos
pusha
scas
ljmp
inc
jge
std
lahf
rorb
popf
mov
cmp
das
jl
arpl
jecxz
sbb
setno
pusha
fs
pop
or
and
sub
xor
arpl
mov
lret
dec
aad
test
rcll
mov
cmp
sbb
gs
pop
mov
push
sahf
push
mov
test
jae
daa
mov
sub
lds
lahf
cmp
aaa
cmpsb
jae
xor
xor
push
jo
jnp
testb
cli
mov
mov
in
das
push
jge
mov
int3
push
lcall
push
insb
xor
mov
out
std
mov
mov
jg
fs
sbb
jecxz
or
mov
into
js
pop
xor
adcl
jp
js
push
mov
mov
mov
sahf
adc
pop
jnp
sbb
adc
push
sbb
push
sbb
push
jbe
lods
ret
xchg
sub
or
push
loopne
aas
jmp
sbb
xchg
adc
or
mov
mov
outsb
and
or
das
or
rorl
jmp
xor
or
push
stos
sub
test
xor
xchg
xor
xor
call
fmuls
out
rcrl
test
dec
sbb
sub
sub
push
mov
mov
xor
pop
cmp
fcoml
pop
lret
cmp
sti
pop
xchg
xchg
nop
adcl
outsl
push
xor
mov
mov
mov
xchg
insb
sahf
push
in
ja
int
push
mov
fsubs
roll
push
cmpsl
sarl
mov
sub
fwait
sub
and
sbb
jo
jmp
ja
inc
repnz
and
sbb
mov
stc
ret
pop
xor
xchg
push
lret
pop
clc
or
aam
lret
stos
cmp
scas
pop
push
popf
mov
call
std
je
outsb
and
and
sub
cli
sub
mov
sbb
add
int
and
daa
mov
push
rclb
dec
lahf
inc
scas
cmp
stc
in
dec
dec
or
cld
mov
rclb
call
hlt
and
jo
mov
sbb
sub
mov
adc
int3
xlat
dec
out
and
pushf
or
stc
mov
mov
data16
sbb
cmp
mov
jae
mov
push
jo
sub
fnsave
adc
out
icebp
xor
mov
jb
and
iret
sbb
jg
mov
or
adc
xor
sub
xlat
popa
in
dec
ljmp
out
sbb
lods
call
sub
fwait
and
mull
or
or
int
add
test
sub
mov
movsl
pop
rorl
outsb
popf
js
inc
push
push
sbb
xchg
adc
lcall
jns
xor
cmpsl
xchg
sbb
filds
sbb
rolb
decb
loopne
xchg
gs
scas
sbb
sub
mov
aaa
lret
push
push
inc
jle
int
inc
adc
sub
addr16
and
or
mov
inc
jo
pop
push
in
dec
mov
mov
int3
jge
test
in
out
inc
outsb
or
and
push
in
in
push
out
xchg
lahf
add
pop
push
mov
fiadds
mov
xor
mov
arpl
mov
push
inc
jne
cltd
xchg
sahf
push
and
push
fistl
lods
inc
fwait
lods
out
jb
xchg
shl
mov
popf
fsts
cmp
fwait
adc
or
push
jne
sub
fisubs
dec
dec
rolb
cli
fdivrl
push
lret
mov
mov
repz
or
mov
pop
dec
lret
push
pop
icebp
push
xor
push
outsl
repnz
test
jno
pop
mov
js
xchg
call
in
xchg
pusha
inc
das
mov
test
xor
les
lcall
out
push
inc
repnz
int3
notb
mov
iret
lods
inc
jge
mov
mov
std
cli
jle
popf
clc
xchg
outsl
insb
stos
bound
dec
add
aaa
pushf
xor
shl
sti
or
fadd
aas
orb
inc
pop
inc
idiv
pop
sbb
xor
sub
fwait
xor
or
jmp
aad
add
jnp
jmp
not
or
lock
lahf
mov
scas
inc
fimull
adc
xor
jno
mov
test
jnp
push
sub
pop
lea
dec
sub
mov
mov
ljmp
pop
cmpsl
xchg
cs
nop
push
jge
fwait
mov
xor
jmp
rorl
stos
icebp
push
ficoml
mov
sub
xchg
bound
dec
aad
cmc
icebp
dec
stos
test
cwtl
pop
inc
fildll
push
icebp
fst
or
sbb
sub
popa
rcrb
dec
cmp
jnp
xchg
mov
das
imul
jle
stc
dec
lahf
enterw
mov
cmp
sbb
imul
stos
dec
fisubs
imul
addb
add
mov
fistpll
xlat
pop
js
mov
popf
mov
xor
mov
pop
pop
loope
popa
loopne
inc
mov
dec
cs
pop
and
in
jns
popa
xchg
andl
fsubrs
push
add
mov
scas
or
push
int
ficoml
mov
lea
out
sbb
repnz
mov
add
add
sbb
push
push
cmp
lods
ret
push
xor
pop
pop
les
xlat
cwtl
adc
add
sbb
cmc
dec
not
mov
movb
aas
testb
divb
arpl
xor
pop
cmp
jae
or
xor
dec
mov
fisubrl
cld
cli
in
lcall
inc
mov
and
jno
and
jg
pusha
mov
jmp
stos
mov
stc
push
mov
ret
dec
and
leave
aas
mov
add
rcll
pop
pushf
mov
jmp
adc
adc
inc
lret
bound
lock
pop
lods
adc
iret
jno
fwait
mov
loopne
out
je
push
pop
or
mov
sbb
in
insl
mov
push
sub
subb
mov
out
xchg
inc
jp
lret
jmp
or
in
or
repnz
push
cmpsb
stc
xchg
mov
or
cmp
mov
dec
adc
mov
xchg
popa
enter
in
fs
leave
lret
fwait
mov
imul
and
ficoml
shll
push
sub
mov
rcrb
lcall
sub
adc
or
adcl
inc
add
push
inc
mov
lods
mov
out
dec
movsl
sub
adc
stos
push
sub
movsl
add
jp
mov
data16
fidivs
out
in
mov
hlt
mov
adc
insb
lods
mov
push
outsb
add
mull
test
push
lods
sbb
aam
xorb
pop
hlt
bound
or
pop
sub
test
adc
xlat
lret
lcall
pop
icebp
cmpl
test
testb
mov
repnz
mov
push
test
lcall
jle
pop
cmp
js
dec
fnstcw
jno
aas
es
add
jl
push
jle
cmpsb
cmpl
xchg
aad
jg
push
jo
or
rcrl
sti
jp
xor
ret
repz
sti
inc
out
sbb
cltd
push
mov
sub
lds
inc
mov
pusha
out
es
shlb
mov
insl
push
push
cmp
jl
push
xor
xchg
out
dec
in
adc
cmpb
movsb
jge
and
inc
xchg
data16
dec
sub
xor
push
or
xor
lea
and
pusha
int3
add
hlt
adc
push
roll
and
dec
js
xchg
mov
imul
in
mov
mov
mov
orb
pop
inc
mov
pop
imul
test
pop
cltd
fisttps
test
jns
shlb
roll
xchg
dec
jbe
cs
sbb
filds
push
or
or
lock
mov
adc
cmpsb
lea
test
stos
cltd
faddl
mov
cmc
shrl
add
pop
jmp
mov
pop
lods
push
cmc
add
xchg
sbb
jae
cmp
cmp
inc
mov
sub
or
pushf
and
repnz
lods
sub
sub
movsb
push
enter
xchg
and
xor
insl
inc
lret
je
add
jge
add
in
dec
sub
cmp
push
xor
xchg
xor
fldcw
clc
push
hlt
mov
and
cmp
int3
aam
or
xchg
mov
xchg
ret
andl
jne
pushf
xlat
dec
leave
cmp
mov
repnz
mov
adc
ss
ss
test
cs
cmp
shl
mov
jl
adc
fs
lods
xor
jle
shlb
sbb
je
loop
fwait
pop
int
add
outsl
int
sbb
imul
mov
loop
sub
gs
mov
sub
or
jl
test
imul
fisubrl
int3
inc
or
and
mov
sub
outsb
add
shll
aad
repz
ja
push
mov
imul
mov
arpl
shlb
xor
fs
push
jmp
out
dec
mov
call
mov
inc
js
xchg
pop
xchg
enter
js
jg
and
rcrl
andl
mov
pop
popa
jge
and
mov
shr
ret
cmp
test
shll
pusha
popa
aas
sub
dec
sub
push
mov
es
ret
inc
fcmovnu
xchg
mov
mov
mov
xchg
inc
inc
scas
pop
imul
lret
dec
xchg
or
xchg
lods
leave
push
jns
test
push
addr16
pop
sahf
push
imul
daa
into
inc
gs
or
xchg
ljmp
xorl
adc
gs
nop
nop
jge
into
mov
pop
sbb
xlat
lahf
and
hlt
daa
shlb
push
jb
cld
sbb
push
inc
jp
mov
push
minps
shll
in
mov
sub
test
int3
int3
cmp
sbb
daa
pop
mov
lock
idiv
lret
addb
aad
xor
dec
dec
mov
test
addr16
repnz
lahf
dec
or
cmp
popa
cmc
pop
mov
or
popa
jb
outsl
sbb
sbb
adc
test
repnz
sbb
out
add
ds
leave
lods
aad
lahf
or
mov
push
das
add
xchg
jae
and
pop
jmp
adc
xlat
adc
andl
pop
int
jb
jg
jge
add
add
dec
pop
jo
icebp
or
jp
add
add
daa
sti
shl
test
mov
nop
ljmp
add
pop
jl
pop
shr
cmp
pop
insb
push
insl
pop
lds
xor
addr16
cmpsl
or
out
cwtl
daa
fwait
push
pop
imul
cmp
mov
mov
lcall
jo
inc
dec
out
hlt
sbb
push
in
ss
xor
mov
ss
push
pushf
jo
scas
jb
insl
push
mov
enter
pop
jbe
sti
dec
push
popf
push
add
mov
lods
lcall
add
fiaddl
gs
ja
lods
movsl
add
ljmp
jp
inc
lcall
add
jno
test
mov
push
test
mov
dec
aas
or
sbb
hlt
aad
imul
cltd
pushf
push
popf
or
and
inc
ret
call
out
ret
sub
scas
cmpsb
pushf
lea
fimuls
fsubrl
pop
pusha
mov
fwait
sub
and
push
xor
stos
push
jecxz
or
push
and
mov
mov
ss
pop
sub
add
push
movsl
sti
loop
fisttps
mov
xor
mov
add
sarb
xor
and
in
xor
rcrl
repz
mov
xor
repnz
loop
xchg
aad
and
sub
js
mov
mov
movsb
push
xor
pop
xor
jnp
mov
push
cmp
out
mov
cld
shrb
mov
roll
fcoms
xor
in
jo
or
in
fwait
popa
mov
sahf
shlb
test
out
fldcw
push
popl
sub
mov
xchg
ja
adc
mov
cmpsl
pop
dec
ljmp
and
arpl
mov
cmc
incl
dec
jo
add
sub
mov
pop
jbe
jecxz
mov
jmp
cld
lcall
and
mov
add
push
es
jl
xchg
push
mov
sub
adc
push
pop
or
add
dec
popa
add
aam
inc
call
in
pop
mov
mov
push
cmp
test
xorl
mov
cld
dec
enter
dec
gs
nop
lods
adc
mov
push
lods
fildll
call
gs
mov
pop
jno
sbb
mov
jne
mov
or
lods
cli
cmpsb
stos
fcoms
mov
and
adc
xchg
loopne
adc
or
jl
and
jg
out
adc
in
movb
out
insl
dec
ljmp
mov
jb
dec
jmp
subl
cwtl
xchg
mov
pop
sti
xor
leave
mov
insl
xor
imul
test
das
push
xchg
cmpsl
gs
aam
std
jnp
lock
adc
cmp
push
insl
inc
pusha
and
adcb
sub
mov
jno
lds
mov
testl
cltd
mov
mov
roll
stos
jnp
mov
push
mov
dec
sub
jl
popf
shll
scas
inc
sahf
fnstsw
inc
push
xor
pop
stos
loope
mov
lods
lret
int3
enter
les
lods
cmp
pop
dec
jae
jmp
pop
xchg
sub
or
jnp
mov
mov
lret
outsb
leave
push
push
cmp
add
negl
popl
pop
cmpsb
push
daa
and
jmp
inc
jmp
rcll
mov
pop
or
sbb
and
adc
inc
mov
and
sbb
enter
jecxz
leave
jns
push
xor
add
call
xor
fwait
cmpsb
aaa
jnp
sub
aaa
sti
mov
aad
shrl
inc
mov
xchg
lds
jae
push
ds
repz
call
in
cmp
popa
stc
cs
xchg
add
int
mov
inc
pushf
or
out
lods
mov
push
aas
inc
stos
mov
inc
and
pop
out
sbb
enter
push
cmpb
pop
sti
jecxz
or
fadds
and
dec
sub
lahf
mov
shll
xor
mov
out
and
loopne
sbb
lahf
test
dec
pushf
scas
add
mov
imul
sub
or
pop
in
xchg
sbb
lcall
push
jo
push
add
add
call
jbe
in
rcrb
pop
inc
push
push
lahf
das
popaw
xor
mov
push
xor
pcmpeqd
pop
add
pop
xor
cmpsl
mov
in
test
and
in
incl
pop
mov
jg
mov
ja
add
xor
jmp
dec
ja
test
cld
push
cmp
mov
pop
lcall
xchg
insb
jmp
cld
lcall
cs
test
pop
xchg
lock
out
cmp
add
lret
clc
out
sub
push
test
repz
add
mov
mov
nop
xor
repnz
out
lea
and
enter
mov
mov
mov
sbb
insb
xor
mov
fidivrs
fs
ljmp
mov
std
lret
pushl
repnz
xor
jne
inc
nop
daa
xchg
and
sahf
add
adc
pushf
cmpsb
mov
mov
lea
mov
cmp
sar
mov
xor
std
in
xchg
scas
rolb
and
pushf
and
jo
sub
xchg
cmp
or
push
mov
lea
fldenv
into
sub
pop
xchg
lcall
cld
sahf
jbe
loop
lcallw
pusha
outsb
movsb
testl
repz
dec
push
cmc
mov
dec
out
shlb
sbb
xchg
mov
test
imul
daa
test
add
jl
cwtl
xchg
loopne
mov
adc
lds
fcomps
inc
cmp
pop
popf
sub
cmc
and
dec
out
adcb
xchg
mov
xchg
in
cmp
adc
or
sub
mov
imul
xchg
dec
lods
jp
inc
pop
inc
mov
fsub
imul
add
jl
cltd
repz
xchg
into
lahf
or
cli
and
shl
lahf
jmp
add
mov
mull
clc
sub
sbb
add
mov
mov
jmp
sub
mov
adc
aam
lcall
and
adc
insb
push
stc
inc
cs
aam
test
fwait
rolb
xchg
stos
lcall
adc
mov
fst
mov
jl
nop
adc
sub
std
mov
jg
mov
ljmp
std
xchg
stos
cwtl
addr16
aam
xchg
xchg
jns
sti
das
and
xlat
addl
rol
push
adc
add
mov
mov
inc
cmp
pusha
ss
mov
int
or
xchg
inc
jns
int3
jnp
dec
xchg
pusha
pmovmskb
fisubrs
pop
add
adc
sub
int
ss
xchg
andb
add
sub
aaa
out
xchg
adc
jnp
push
inc
push
and
jbe
je
push
dec
jns
aam
xchg
inc
daa
xor
mov
sub
pushf
inc
push
repnz
sub
mov
in
dec
add
mov
data16
mov
jne
sub
std
aad
sub
pusha
and
push
pop
out
icebp
sub
cld
pop
scas
xchg
pop
inc
dec
stos
ficomps
xchg
and
das
rclb
enter
cld
or
cli
sbb
inc
lea
dec
dec
call
add
mov
dec
push
sub
aad
push
mov
sbb
add
rorb
pop
pop
adc
sub
jns
test
cmc
jo
cltd
dec
fidivs
leave
mov
pushf
push
xchg
sbb
mov
xor
and
leave
xchg
lock
out
cmp
push
testl
mov
adc
bound
int3
pop
sub
sub
pushf
dec
sub
xor
negl
push
lret
jbe
xor
in
adc
mov
fmuls
or
cmc
out
lret
aas
xor
cmc
or
push
cmp
stc
cmp
outsb
adc
test
adc
sbb
in
pushf
in
movsb
mov
imul
cmpsb
pop
or
mov
test
aaa
fdivrs
jno
dec
xor
pop
mov
lods
leave
dec
jp
add
pop
lds
fs
ret
mov
in
add
inc
pop
push
xor
pop
push
xlat
add
je
sti
mov
pop
lods
orb
dec
pop
inc
inc
xchg
push
out
jecxz
cmp
adc
sub
cmp
push
fidivl
xchg
jle
rep
pop
push
mov
xor
xchg
aad
in
in
sbb
pop
sbb
or
and
ret
cmp
inc
xchg
mov
sbb
xlat
mov
fiaddl
jmp
je
sub
jecxz
jnp
xchg
lcall
xor
pop
movsl
hlt
adc
jne
inc
add
inc
in
cmpl
js
stos
rcr
push
fdivrl
cmp
fsubs
jl
and
iret
out
loop
dec
jmp
jbe
xchg
push
mov
popf
jne
cmp
les
sbb
sub
and
lret
mov
in
jmp
iret
movsl
or
cli
jb
add
pop
scas
sub
or
add
movsl
mov
ret
xor
xchg
mov
inc
stos
add
sbb
add
fwait
jno
lea
adc
lahf
sarb
and
dec
dec
pop
mov
adc
std
inc
pop
push
push
sub
dec
les
dec
mov
insl
and
icebp
jb
add
lcall
sub
jb
mov
ljmp
jmp
pop
push
gs
inc
lahf
cmp
jbe
push
es
cli
test
mov
mov
lds
mov
mov
enter
xchg
mov
xchg
dec
shlb
loop
pop
jge
test
sbb
pop
sub
mov
pop
insb
lds
xor
cmp
icebp
sbb
or
fistpl
mov
fucomp
in
sub
sti
xchg
movsl
pop
loope
pop
sub
add
call
adc
cmpsb
repnz
lahf
pop
pusha
fsubs
call
jno
hlt
ret
fsubp
push
xchg
test
cmp
cmpl
dec
test
rcrb
into
pop
pop
in
pushf
xor
rorl
jne
bound
sbb
adc
adc
std
adc
cli
dec
push
stc
and
mov
enter
arpl
and
mov
mov
ja
jb
addr16
push
pushf
mov
sahf
sahf
adc
xor
mov
push
out
cmp
dec
insb
out
xchg
sub
or
cli
popa
dec
popf
inc
fsub
addr16
outsl
jge
sahf
adc
call
scas
or
punpckhdq
rolb
in
into
xchg
cltd
out
shl
in
mov
mov
out
test
rcrl
pop
loopne
ja
mov
jp
pushf
adc
push
jmp
popa
mov
jge
je
jp
ss
les
fmuls
cmp
fdivs
add
in
mov
fisubrl
lea
pushl
pop
movsl
and
rclb
adc
sar
mov
ja
stos
out
daa
mov
mov
or
inc
adc
lds
pop
into
ss
or
stos
jl
xor
mov
sti
jno
xchg
add
add
orb
mov
pusha
push
and
clc
dec
in
test
cmp
pop
xor
add
or
inc
stc
orl
in
insb
in
fisubl
shlb
mov
ds
hlt
fwait
add
jae
pop
xor
adc
jbe
inc
iret
cmpsl
clc
mov
into
aas
mull
in
mov
mov
adc
daa
and
mov
jae
mov
dec
ljmp
and
mov
add
lock
sbb
and
fidivrs
repz
out
shlb
shl
mov
xchg
cmp
xchg
nop
xor
mov
shlb
adc
les
add
out
add
jb
xchg
and
mov
pop
nop
movsl
imul
bound
popa
sbb
jge
outsb
jbe
mov
loopne
outsb
sbb
sbb
sbb
inc
push
push
xchg
outsl
aas
push
addr16
jle
jmp
inc
fmuls
jl
add
push
aas
adc
test
pop
ljmp
xlat
divb
xchg
push
xorb
mov
xchg
add
push
into
ljmp
loop
xchg
jb
mov
jl
pop
adc
jb
sbb
fisubl
movsl
adc
xchg
insl
pop
pop
mov
push
fdivrl
out
icebp
push
push
push
imul
scas
js
outsb
add
cmp
xchg
jecxz
sub
and
cmp
mov
scas
sahf
in
cmpsb
inc
outsb
dec
sub
fisttps
test
dec
adc
sub
out
mov
lock
mov
insb
scas
into
jne
mov
fbstp
sti
pop
xor
cmpsb
push
mov
insl
push
pop
jns
in
push
jecxz
add
sub
xor
dec
icebp
stc
leave
mov
add
and
xchg
sub
pop
out
mov
add
jnp
jecxz
mov
push
stos
or
shr
aas
and
inc
out
mov
push
shll
xchg
pop
lcall
fmull
jg
in
and
inc
mov
movsl
mov
mov
popl
ss
shl
dec
dec
jl
push
xchg
in
cmp
cmp
xlat
sbb
test
dec
sub
mov
lcall
jmp
lahf
addl
fidivrs
dec
mov
lret
sbb
xor
jmp
dec
adc
sub
push
insl
cmp
xchg
xchg
popf
adc
xchg
fwait
pop
lods
push
fstl
arpl
mov
leave
add
hlt
or
push
cs
pop
or
sub
sti
or
mov
hlt
xchg
jge
cld
or
inc
inc
jnp
pop
inc
xor
rcr
inc
mov
lcall
xor
or
adc
sbb
push
or
stos
inc
pop
out
add
pop
cmpl
cmpsl
das
stos
das
scas
inc
dec
in
in
jnp
sub
leave
pop
imul
repnz
aad
mov
and
leave
pop
mov
imul
out
aad
lcall
jno
jecxz
jb
add
cmp
rcrb
fmuls
out
dec
xor
daa
dec
fists
into
pop
jecxz
push
sbb
add
pusha
push
and
ja
js
and
push
in
rcr
jns
add
mov
shlb
add
pop
ret
cmp
add
adc
nop
adc
ljmp
aam
add
jo
clc
sub
nop
fdivrl
int
dec
cmpsb
xlat
push
mov
push
push
addr16
rclb
mov
stos
outsb
inc
fdivrs
inc
pop
in
push
sub
orb
sbb
fcoml
or
rcl
jge
pop
mov
jl
add
je
aam
push
lret
fdivrs
mov
mov
aaa
cmc
xor
mov
push
xchg
sub
or
ret
testb
fcomi
jo
fs
dec
loope
out
mov
dec
rcrb
les
daa
push
in
lock
pop
jl
test
and
js
mov
in
fld
xlat
addr16
sbb
iret
and
mov
or
rorb
jnp
sub
pop
xlat
mov
sti
fildll
lret
testb
jb,pt
nop
xchg
or
jae
sub
jge
aaa
fsub
mov
pop
push
call
sub
cmp
pop
leave
insl
into
mov
std
in
dec
test
add
xlat
pop
decb
test
sbbl
and
cmpb
sub
sub
xchg
mov
mov
sub
cmpsb
scas
pop
stos
and
inc
add
mov
popf
in
xchg
cmp
int3
repz
fs
gs
rcr
std
sbb
cmp
xchg
cwtl
mov
jne
popf
test
lahf
push
orb
adc
sbb
push
push
aam
xor
xchg
arpl
es
lcall
sbb
roll
fbstp
cmp
pop
and
mov
loope
adc
and
sbb
mov
sbb
aam
mov
and
jecxz
hlt
enter
data16
jns
mov
movb
lcall
mov
ja
push
orl
sbb
push
cld
pop
je
add
mov
andl
mov
gs
ficomps
in
iret
je
loope
lock
fwait
xor
sbbb
and
pop
push
popf
mov
mov
jle
or
or
scas
dec
or
test
aas
ss
js
xchg
leave
xchg
sbb
into
cmc
push
out
cmpsb
lods
out
jo
sbb
jmp
jbe
cmp
jb
cwtl
ljmp
popf
test
pop
sub
or
scas
sti
lret
mov
jg
add
in
es
pop
mov
jge
call
push
cmp
ret
push
mov
test
sbb
pop
mov
push
rcll
or
insl
fcmovnbe
fwait
push
jnp
lods
movsl
les
test
mov
je
std
mov
cwtl
mov
add
inc
mov
add
push
xchg
fadds
mov
push
shll
adc
cli
outsl
mov
imul
jmp
mov
cmp
rep
push
cmpsb
js
cmp
push
insb
dec
xor
sub
inc
cmp
imull
and
aas
push
or
jae
push
pop
mov
insb
lahf
inc
and
adc
or
int3
lret
or
inc
and
scas
jle
mov
notb
xor
in
cmp
fwait
je
loopne
or
out
hlt
sbb
pop
sahf
ljmp
sti
rcrb
loopne
fwait
and
push
cmc
mov
pop
insl
pop
in
add
ljmp
jl
ret
inc
in
test
frstor
pop
insb
adc
or
and
loopne
roll
repz
xchg
nop
stos
xchg
xchg
adc
lret
icebp
and
cmpsb
js
insl
in
lods
dec
leave
adc
cwtl
adc
cs
or
sub
push
fwait
repnz
mov
jle
pop
jbe
or
inc
and
push
repnz
repnz
jbe
rclb
mov
add
cmp
fadds
ljmp
sub
lods
pop
pop
or
leave
inc
xchg
and
jbe
std
push
xchg
pop
das
jno
stos
xchg
add
daa
dec
fcompl
shll
push
xchg
mov
xchg
xor
jno
adc
xlat
imull
and
xor
loope
rol
insb
cmpsb
mov
popl
xchg
xchg
shlb
jge
loop
mov
push
in
scas
adc
lret
mov
push
pop
or
jo
roll
imul
repnz
lea
fcomps
orl
sub
nopl
fwait
pop
fstl
xchg
lahf
mov
xchg
subb
std
repz
sub
aaa
out
dec
fadds
mov
xchg
bound
les
or
mov
imul
push
test
sub
pop
xchg
shlb
push
popa
test
out
jmp
test
dec
mov
xor
cmp
test
inc
les
and
xor
inc
or
ficoml
push
jne
inc
popf
pop
mull
or
cmp
out
dec
cmp
mov
loope
cmp
mov
shlb
sbb
push
and
outsl
jae
cmpsb
add
out
add
xor
rol
loop
aaa
in
push
mov
mov
rcrl
int
lock
sub
repz
cli
movl
push
inc
test
lahf
inc
or
aam
mov
cli
xchg
movl
add
or
jbe
lods
in
shrl
rol
bound
mov
sub
xchg
movsl
jo
jmp
aaa
stc
cmpsl
fnstenv
push
cwtl
pop
test
loope
jnp
dec
xchg
sbb
sub
inc
and
lods
std
sahf
add
jl
xchg
addr16
and
test
in
pop
call
mov
adc
cs
and
loop
pushw
jb
adc
cmp
jno
inc
mov
cmc
lds
pop
mov
fdivrl
sub
inc
cmpsl
dec
push
daa
hlt
ret
dec
ret
mov
aas
jnp
icebp
xchg
pop
dec
mov
xor
fstpl
iret
vmfunc
aas
dec
and
cmc
in
cmp
fs
add
out
inc
stos
mov
dec
shlb
jl
mov
cmp
cmpl
orl
decl
xchg
movsb
and
inc
pop
mov
fwait
adc
sbb
xchg
push
mov
cltd
xchg
push
jnp
addr16
dec
and
adc
loopne
sub
jnp
push
jge
cmp
inc
pop
adc
bound
push
fwait
sbb
daa
ffree
mul
cltd
enter
stos
rcrb
test
stc
jnp
std
enter
out
cmc
push
push
js
or
mov
cmc
push
sbb
pop
adc
adc
mov
cmp
ja
lock
push
add
sbb
mov
sub
je
xchg
cmc
and
inc
dec
jo
leave
out
orb
movl
addr16
push
mov
sbb
gs
int3
iret
out
push
lock
lea
mov
mov
sub
rorb
xrelease
sub
pop
ss
push
cmp
sarb
pop
aad
aad
popa
cmp
arpl
mov
stos
popf
into
out
mov
mov
rcll
sbb
scas
in
negl
xchg
mov
sahf
addr16
mov
push
fsubp
call
pop
test
jecxz
stc
lret
mov
negb
add
call
or
fdivrl
cmpsl
into
test
push
daa
data16
sub
out
adc
jle
shl
inc
jbe
data16
mov
test
arpl
jge
and
jnp
add
cmp
pop
out
pop
fdivs
popf
ljmp
stc
shll
mov
int
adc
xchg
sub
cltd
clc
not
je
cmpsl
repz
push
xor
icebp
loop
cltd
leave
or
ja
or
ret
out
jle
jg
mov
sbb
push
jge
adc
xchg
jnp
mov
stos
data16
pop
mov
inc
sub
sbb
mov
add
adc
pop
dec
mov
jmp
mov
rcl
test
bnd
dec
scas
std
iret
repnz
sbbl
add
hlt
adc
mov
pop
and
sub
inc
dec
loopne
inc
ret
inc
pushf
sub
mov
cmpl
cs
pop
jge
mov
jg
mov
mov
xchg
in
cmp
mov
pop
mov
jae
adc
cmp
outsb
sbb
pop
adc
loop
icebp
scas
jecxz
sbb
negb
adc
daa
xor
push
fidivrl
mov
ja
dec
ror
icebp
cmp
in
loope
jmp
adc
pop
cmp
cmpsb
sahf
leave
arpl
loopne
jbe
outsb
fdivrl
orl
inc
lret
out
mov
mov
je
std
in
cs
imul
aas
xchg
outsl
xchg
pop
data16
call
and
mov
add
in
dec
ds
outsb
pop
in
pop
xchg
jnp
repnz
adc
xor
dec
clc
rcll
aaa
test
ficoms
pusha
scas
fldenv
xchg
cmp
gs
in
xchg
push
enter
hlt
inc
imul
mov
gs
xchg
add
mov
push
lds
int
add
add
gs
loope
test
xlat
mov
cld
inc
in
cld
xchg
adc
xor
stos
or
ret
movsb
test
mov
push
xchg
xor
enter
mov
inc
movsb
add
adc
adcl
cmpsb
jmp
cmc
mov
inc
clc
pop
mov
cmp
xor
xor
out
add
jb
dec
pop
sbb
add
test
inc
lods
call
clc
aas
cltd
in
jl
cmc
adc
testb
adc
dec
xchg
mov
sub
push
and
sub
je
jle
cmpsb
sbb
push
fwait
enter
pop
subb
cs
sub
loop
stc
pop
rcl
jae
inc
lea
xor
cld
gs
sbb
push
ret
dec
fildl
push
push
adc
fs
jb
dec
int3
lods
out
push
addb
xor
jb
lods
popa
movsb
call
arpl
stc
mov
data16
and
out
arpl
cltd
pop
shl
mov
jmp
pop
cmp
jge
cld
mov
in
pop
ss
push
outsl
fistps
mov
jmp
sub
aaa
shlb
inc
fcmovnu
enter
jno
lret
shrb
xor
ds
daa
sub
mov
pop
out
clc
pop
scas
das
sahf
jno
mov
jmp
sar
adc
js
mov
cmp
and
test
lcall
cmp
loope
testl
dec
ljmp
fidivrs
iret
mov
and
out
pop
push
sti
adcb
inc
lods
adc
push
mov
jl
mov
jl
mov
and
out
mov
jecxz
fsubrs
lods
fstp
rol
lea
loope
jbe
jae
xchg
daa
jae
int
dec
js
loope
clc
mov
push
fsts
aaa
ror
push
and
cmp
adc
pop
add
mov
es
bound
cmp
mov
and
ljmp
out
push
shll
xchg
jae
loop
outsl
leave
or
mov
mov
and
les
popa
mov
xor
loop
push
jno
cld
sub
fists
jg
mov
push
dec
mov
inc
jno
addb
inc
imul
call
cs
pop
mov
cmc
push
dec
dec
enter
fnstenv
inc
fmull
in
imulb
test
lea
out
stos
dec
push
int
dec
push
das
arpl
ficoms
rcr
out
stos
or
add
orl
xor
inc
dec
push
notb
add
xchg
pop
push
cmp
inc
push
dec
xor
cmp
push
and
mov
fnsave
and
push
inc
inc
jo
gs
divb
pop
pop
push
dec
jb
inc
cmc
out
mov
rcrb
mov
cmpsb
push
sbb
std
pop
xorl
pop
repz
push
xchg
insb
jae
mov
shll
xor
push
sub
ret
pop
cmpsb
dec
popa
sbb
jae
rorl
mov
add
std
mov
mov
mov
test
adc
dec
ds
xchg
xchg
leave
das
leave
cmpsl
jecxz
jns
add
mov
test
adc
dec
cmpl
mov
fs
aas
jl
rcr
and
iret
test
jmp
das
jle
sub
push
mov
popa
mov
xchg
dec
cmp
xchg
lea
inc
sbb
cvtdq2ps
sub
jecxz
sub
add
aaa
imull
fnstenv
jmp
push
or
les
mov
add
std
rcll
jg
cmpsl
xor
les
int
mov
add
pop
mov
push
ficomps
aad
or
cmp
xchg
repnz
push
mov
sub
stos
cmpsb
addr16
xchg
dec
cs
jmp
xor
mov
ret
movsb
andl
lods
xchg
shl
cld
test
je
push
movsb
jl
and
test
movsb
sbb
into
dec
or
push
daa
gs
mov
push
xchg
jbe
adc
hlt
repz
inc
adc
mov
cmp
lock
notb
xchg
hlt
es
xor
cmp
mov
adc
jnp
jl
mov
scas
lcall
jmp
movsb
gs
cmp
xchg
pop
or
in
je
fisubrs
rclb
sbb
mov
mov
mov
inc
inc
arpl
mov
xor
iret
xchg
lods
cmp
cwtl
jne
mov
dec
testl
out
cmc
ljmp
or
lahf
outsb
aam
push
jne
jae
add
aad
xor
sbb
scas
nop
push
es
insb
scas
xorb
mov
hlt
lods
cmpsl
sbb
leave
test
sub
das
xchg
leave
mov
push
das
mov
mov
wbinvd
and
fisttpl
and
int3
fnstsw
mov
inc
dec
cmp
push
mov
rolb
xlat
pop
jmp
lcall
sub
xchg
lods
jg
jl
push
into
test
enter
sub
inc
lret
loop
xor
xchg
dec
hlt
and
test
insb
push
xor
orb
pop
push
lret
mov
gs
hlt
inc
xchg
movsb
in
or
mov
int
dec
mov
in
and
int
xchg
dec
icebp
mov
inc
add
jecxz
xor
jecxz
in
cmp
add
adc
cmp
shrl
out
mov
xchg
ljmp
mov
fcmovnu
fistps
pop
jbe
dec
mov
push
fstps
dec
imul
jmp
jmp
addr16
or
stos
jmp
iret
mov
sti
inc
inc
ficoms
xor
cs
dec
jne
pushf
mov
lret
loope
nop
icebp
sbb
cmp
and
cltd
in
adc
xor
movsb
hlt
insb
fldt
jmp
sbb
mov
shlb
inc
sub
stos
in
sbb
and
mov
cmp
shr
mov
xor
ja
pop
cwtl
push
out
add
xchg
dec
ljmp
mov
sub
loopne
ds
arpl
outsl
or
or
xchg
orb
mov
xchg
push
popa
lods
stos
sub
sahf
aam
cltd
push
mov
filds
sti
sub
cmp
lahf
sbb
out
jge
fisubl
in
mov
or
aad
add
or
mov
leave
test
cmpsb
mov
std
jg
cs
mov
or
xor
mov
sha1nexte
xor
push
cmpb
leave
mov
ja
inc
imul
and
scas
lock
subb
xchg
ss
pop
in
add
mov
mov
addr16
jae
mov
mov
ficoms
pushf
jno
call
sbb
jb
xor
xor
push
push
mov
sbb
mov
ljmp
cmp
rcrl
and
dec
xor
sub
xor
into
in
dec
sub
push
mov
push
inc
mov
xlat
shl
jmp
mov
in
and
shll
repnz
sub
or
imull
xchg
cmpsl
addl
or
ja
loope
mov
jge
sbb
mov
ss
push
xchg
roll
and
mov
inc
scas
mov
out
jecxz
or
sbb
nop
subl
cwtl
xorb
pop
or
stos
mov
push
push
cld
movsb
hlt
arpl
sbb
xchg
aad
sub
sbb
sub
cmp
loopne
out
das
adc
popf
cmpsl
sub
rcrb
ljmp
adc
cmc
fwait
pop
hlt
inc
lret
or
lods
mov
sar
stos
cltd
pop
pop
out
jne
adc
adc
inc
mov
aaa
push
add
ja
adc
push
sub
idivl
mov
cltd
je
in
jbe
push
and
js
fildll
xchg
cmp
xchg
cld
mov
cmp
mov
mov
mov
pushf
ja
scas
or
test
jl
jo
mov
inc
xchg
pusha
jnp
or
mov
fstp
mov
pop
idivb
lret
shlb
cwtl
cmp
cltd
inc
inc
test
cmp
dec
mov
out
cmp
jne
stc
es
cmp
bound
js
insb
mov
js
rclb
into
pushf
jge
into
repz
daa
jb
test
das
or
mov
inc
inc
sub
addr16
dec
jmp
xchg
ret
cld
in
sbb
mov
push
lcall
test
clc
and
sub
insl
mov
push
xchg
out
into
aas
push
inc
movsb
pop
dec
out
icebp
jmp
mov
insl
adc
out
push
imul
out
push
cli
add
fldl
loope
out
jge
mov
xor
stos
and
ss
xchg
mov
or
jae
sbb
lods
xchg
xor
jnp
lods
cmp
lds
loope
ret
jno
mov
mov
mov
mov
imul
and
orl
outsb
lds
cwtl
fsubs
xchg
pusha
pop
push
push
and
mov
inc
push
sub
jg
test
pop
loop
fwait
jg
pushf
adc
enter
fs
js
sbb
scas
ds
jle
pop
adcl
and
lea
push
xchg
sbb
dec
sub
mov
mov
lock
xchg
mov
push
and
jbe
out
out
add
jne
mov
pop
adc
add
insb
or
or
push
fidivrs
dec
dec
pop
or
mov
push
andl
mov
jle
inc
in
mov
and
mov
add
sub
mov
sub
lock
inc
aam
loopne
xor
lea
nop
rorb
jo
push
or
dec
notl
push
shll
lcall
mov
adc
imull
mov
jno
or
mov
adc
mov
and
scas
fwait
or
pop
scas
mov
fwait
in
pop
or
lods
ret
imull
push
scas
pusha
loope
inc
fs
lahf
cmp
cmp
aas
cmpsl
mov
data16
mov
das
ret
je
inc
subb
outsl
and
jp
daa
xchg
push
jns
adc
ret
jne
adc
clc
push
cwtl
clc
cwtl
xor
aam
xor
movsl
and
or
sub
ds
mov
mov
ja
sarb
dec
or
xchg
imul
or
mov
adc
inc
pop
lcall
jg
cmp
imull
xchg
pop
ljmp
stc
pop
or
shrb
stc
xchg
lcall
mov
sbb
hlt
ljmp
daa
stos
mov
pop
add
mov
inc
push
inc
pop
lahf
in
push
cli
cmc
imul
inc
adc
ffreep
fisttpll
sub
sub
js
cmp
data16
adc
sub
inc
lods
inc
roll
adc
inc
stc
sub
insl
sub
jle
dec
dec
mov
cmp
adc
mov
xor
pop
in
dec
adc
push
fdivs
lds
stos
dec
add
xchg
mov
stos
shrb
adc
jecxz
lret
bnd
insb
push
sbb
dec
js
push
sub
push
inc
repnz
cmp
fmull
imul
in
cmpsb
dec
int
mov
jno
into
repz
lods
jo
jmp
or
adc
add
int
imul
fimull
punpckhwd
sbb
mov
mov
inc
lds
insl
es
iret
ret
mov
insb
pop
fcoms
js
loope
mov
jge
sar
sub
loop
pop
push
ret
jg
mov
jp
cmp
sbb
iret
mov
dec
sub
sub
outsl
shll
push
inc
adc
xchg
fstpt
xchg
and
jns
mov
loope
pusha
lods
fsubs
dec
push
pushf
cwtl
cltd
ljmp
scas
in
xchg
cltd
push
in
xchg
sub
and
jae
xchg
push
mov
mov
push
movb
stc
mov
cmpsb
rcrl
xchg
mov
xchg
and
insb
add
bound
imul
mov
xchg
xchg
mov
ss
test
mov
adc
jmp
mov
repz
and
sbb
push
aas
mov
shll
add
pop
out
das
sti
dec
int3
loope,pt
sbb
test
add
sbb
mov
pop
jge
and
mov
xchg
dec
jb
adcb
movsb
push
cmpsb
lds
lahf
repz
push
loope
cmp
jns
rol
aaa
xchg
xor
lret
js
and
popf
lcall
cmp
hlt
aad
xor
out
icebp
imul
push
nop
inc
popf
popl
mov
xchg
xor
and
movlps
jmp
add
adc
addr16
outsb
loopne
les
or
adc
jb
sbb
push
mov
enter
ss
xchg
push
or
and
cmp
insl
int
sub
adc
adc
subb
scas
in
lods
aad
ja
pop
mov
hlt
dec
jno
jmp
leave
sub
inc
inc
xchg
std
jne
mov
cwtl
das
and
xchg
clc
imulb
dec
jae
aad
gs
or
std
adc
subb
jo
and
xchg
repnz
add
push
xchg
xchg
adc
outsl
daa
mov
push
sbb
ljmp
adc
cmp
int3
mov
sbb
fwait
and
mov
mov
dec
xchg
ljmp
dec
lea
es
mov
mov
dec
daa
mov
sbb
movsl
addr16
mov
xor
repz
mov
xchg
ffreep
or
aam
mov
adc
push
movsl
lods
stos
fdivl
popf
cmpsl
arpl
mov
and
out
dec
or
movsb
cltd
pop
pop
pusha
inc
adc
push
jp
sarl
jo
push
pop
inc
inc
out
jo
or
fcomps
or
gs
aas
sub
jb
mov
mov
mov
es
movsb
arpl
sub
sbb
push
imul
sub
pop
or
lret
cmp
repz
push
jmp
aas
xchg
xor
xor
imul
fstpt
inc
das
cmc
xchg
shll
inc
jp
cmp
outsb
fmuls
stos
xchg
setl
cmc
add
inc
sti
mov
subl
ljmp
fiadds
or
sbb
test
sub
cmp
into
cmpb
popw
test
lea
sahf
mov
ficomps
mov
inc
or
pop
sub
fstpt
mov
adc
aas
mov
out
mov
mov
lret
or
sbb
divl
push
loop
jle
push
imul
and
fsubs
js
sahf
pop
jg
and
loop,pt
dec
push
or
andl
ret
and
sub
rcr
ret
sbb
in
sarb
clc
popa
mov
lock
popf
ret
out
call
add
sbb
mov
lds
add
movsb
mov
cmp
insb
daa
jle
mov
dec
test
push
pop
into
rol
addl
push
push
push
or
int3
xor
xchg
mov
fsub
mov
fbstp
sub
loopne
jns
xchg
mov
sbb
inc
pop
cmp
inc
push
adc
sub
sub
jo
push
adc
fdiv
test
mov
repz
clc
mov
aas
push
lea
and
sahf
mov
cltd
mov
jb
outsb
shl
xchg
loopne
dec
xlat
imul
lods
stc
sbbl
lea
push
imul
or
dec
rcl
sti
ds
in
mov
roll
das
mov
lea
sbb
mov
cmpsl
push
fbstp
shll
addb
nop
inc
or
popa
aaa
or
jnp
xchg
stc
call
sub
cmp
out
or
sahf
inc
mov
lret
mov
ud1
cmp
jne
jp
test
mov
sbb
ss
dec
and
inc
jae
mov
push
ljmp
les
cmpsl
sar
xchg
and
leave
cmc
xchg
fisttpl
push
pop
and
add
out
add
fisttpll
mov
sbb
and
fcom
xor
ficoml
jb
rol
dec
daa
lock
or
test
sbbb
dec
je
xchg
stos
inc
test
out
and
imul
sti
mov
inc
or
or
push
xchg
mov
cmp
inc
pop
fnstcw
or
inc
push
mov
pop
jnp
mov
sub
inc
pop
shrl
mov
daa
jo
push
in
repz
or
cld
pop
cld
dec
sub
pop
lock
lods
ret
in
dec
xlat
emms
cld
adc
enter
cmp
ret
jg
roll
insb
adc
out
push
das
out
mov
and
xchg
push
lods
inc
jo
jge
xlat
out
fcompl
int3
adc
adc
xor
mov
mov
out
fnstcw
add
fadds
aas
in
and
push
push
sub
icebp
inc
pushl
in
xchg
ljmp
cmpsl
cs
mov
cmp
mov
and
or
jbe
jmp
sbb
mov
push
and
dec
imul
lds
lcall
jl
lods
loope
mov
loope
and
cmp
mov
mov
ds
mov
mov
mov
sbb
cwtl
ds
push
push
jne
adc
int
jmp
mov
adc
rcrl
icebp
cmp
dec
scas
push
mov
sbb
inc
jecxz
mov
mov
xchg
sub
scas
push
lahf
jecxz
mulb
js
stos
adc
pop
adc
jl
or
and
mov
sbb
jbe
mov
mov
or
sbb
jnp
jb
xchg
jnp
dec
xlat
add
in
adc
repz
enter
lcall
leave
lock
add
out
jne
imul
dec
mov
pop
inc
popa
or
push
mov
adc
or
pop
jne
movsb
out
insb
pop
aaa
sbb
imul
jecxz
jbe
pop
lods
push
jo
xor
add
xor
sub
ret
lahf
sub
pop
xor
lods
movsb
outsb
lret
mov
jns
stc
mov
mov
cmc
push
imul
push
or
scas
jb
inc
sub
insb
or
and
sub
out
add
mov
incl
icebp
mov
gs
ret
adc
adc
clc
push
dec
ss
cmp
lods
shrd
sbb
xchg
mov
mov
or
fwait
xchg
adc
xchg
rclb
inc
das
imul
push
bound
push
mov
dec
pop
dec
ret
jne
and
pop
jmp
xorl
mov
push
rcrl
sbb
fdiv
cmp
call
push
add
push
lock
mov
in
movsb
mov
jg
fisubl
push
xor
movsl
jge
cmpsl
out
mov
stos
inc
iret
dec
lds
pop
outsl
pop
xchg
pop
mov
mov
lock
loope
aam
outsl
notb
cmp
jecxz
sbb
movsl
sbb
imul
sub
test
cli
inc
bound
mov
xchg
inc
mov
int3
shrb
cmc
int
int
pop
xor
bound
cmc
sub
and
ljmp
xchg
inc
cs
scas
scas
in
dec
lret
rcrb
pushf
sti
adcb
inc
xor
call
pop
ficoml
or
filds
or
jmp
lea
std
mov
loop
les
adc
mov
push
inc
dec
adc
mov
push
rcll
cmp
and
push
xor
popa
xlat
out
add
sub
test
and
jo
jne
les
mov
adc
imul
adc
dec
insb
popa
mov
add
pcmpgtw
test
imul
insb
dec
ss
or
mul
pop
fsubs
notl
pop
arpl
nop
lahf
inc
les
testl
and
roll
mov
xor
scas
in
repnz
mov
in
movsl
shll
push
pop
ret
lret
sub
ljmp
addr16
iret
xchg
out
mov
arpl
mov
or
dec
mov
aaa
aas
add
xchg
or
imul
jbe
popa
xchg
les
lea
mov
pop
cmc
mov
jno
pop
add
in
out
pop
cwtl
mov
jg
fcom
push
or
xchg
cli
sbb
cmpsb
cmp
xchg
push
inc
sbb
mov
pop
idivl
pop
aad
fs
dec
or
mov
sbb
movb
or
mov
imul
and
dec
xor
sbb
xchg
cmp
sub
and
jmp
addr16
sub
rorb
push
dec
or
sbb
rorb
push
push
jno
enter
fxch
mov
stos
inc
push
jmp
cmpsb
pop
fisubrs
roll
or
mov
and
push
repnz
pop
int
dec
adc
ja
push
outsl
lods
fidivl
dec
xor
out
fldl
repz
lds
out
sub
mov
xorl
outsb
pop
nop
clc
inc
pusha
xchg
wbinvd
sbb
sub
xor
jge
sarl
mov
jle
mov
sub
lods
rcr
insb
int
adc
lods
pop
sub
stc
xchg
scas
rcl
sbb
push
repnz
or
fsubs
scas
mov
mov
or
push
dec
push
jp
dec
shll
fcmovnb
sub
imul
iret
test
addl
ljmp
push
nop
fisubrs
and
push
mov
xchg
mov
loopne
mulb
pop
sub
mov
shrb
outsl
fcom
and
fs
add
pop
shr
aas
ljmp
out
shlb
fcompl
andb
jmp
iret
mov
insl
leave
push
mov
outsb
orb
jmp
out
lods
movsb
cmp
dec
adc
loop
xor
adc
das
test
test
fidivrs
jns
jp
push
loopne
or
pop
push
jb
pop
and
xorb
xlat
mov
pop
fiadds
ja
inc
mov
popa
sub
or
mov
std
xor
sub
adc
insb
mov
nop
call
icebp
dec
pusha
mov
dec
or
cmp
xchg
push
mov
ficoms
mov
pop
mov
out
inc
push
sub
sub
aas
fdivrs
add
inc
clc
leave
jnp
jge
dec
or
xchg
jmp
add
inc
mov
jp
jecxz
pop
ret
adc
cli
lret
mov
aaa
jge
push
jnp
adc
sbb
sub
int3
inc
push
dec
cmp
adc
add
in
or
loop
test
dec
adc
pop
ja
lcall
and
outsl
cmp
ret
ficompl
sbb
jl
gs
cmpsl
pop
call
xchg
jns
mov
ret
pop
lea
jg
sub
stc
movsb
adcl
pop
das
sub
mov
lds
pop
iret
lock
out
push
jmp
int3
push
mov
push
mov
aas
in
mov
adc
push
sbb
xchg
lods
stc
xlat
mov
mov
test
push
into
cmp
out
jne
push
loopne
out
xlat
xor
stos
popa
or
insl
add
jno
iret
dec
mov
fnsave
lcall
xchg
aad
xor
test
inc
cmpsb
iret
sub
in
pop
push
fsubrl
leave
cmp
mov
icebp
inc
jg
jp
cmp
icebp
mov
dec
dec
and
rcrl
ds
fnstsw
mov
and
dec
leave
ja
or
insb
xor
lcall
pop
xchg
insb
jg
xchg
sbb
mov
out
push
mov
outsb
movsb
cmp
lea
xor
imul
ficomps
cmp
push
xchg
cmpsl
orb
add
mov
loop
push
mov
into
pop
add
arpl
cmp
lret
out
ds
and
mov
in
cmpsb
imul
icebp
mov
cli
ret
push
mov
sub
and
aaa
jl
jmp
jecxz
in
xor
ret
imull
cltd
or
ret
and
pop
repz
push
xorb
add
in
pop
es
daa
hlt
lea
xor
mov
shlb
and
mov
mov
mov
dec
out
adc
and
xchg
sbb
push
jl
push
xchg
fdivrs
mov
xor
jnp
out
out
inc
cltd
fmull
mov
aam
cmp
loop
ja
xchg
jl
pop
sub
pushf
cmc
add
cli
push
pop
test
ret
xchg
jecxz
pushf
pop
dec
les
out
pop
sub
jnp
inc
mov
enter
enter
movsl
xorl
jge
jnp
jno
pop
call
pop
pop
repz
pop
and
sti
cmp
jns
cmc
movsl
mov
sub
cltd
ds
pop
fsubrs
mov
adc
or
xor
jne
pop
outsl
in
dec
push
push
std
mov
scas
dec
xchg
int3
inc
repnz
push
fcmovnu
adc
aaa
test
sbb
int
leave
popa
fiadds
sub
sub
repnz
mov
dec
push
repz
loop
cmc
pushf
push
mov
jbe
pop
xor
lcall
mov
pop
bound
mov
test
ss
inc
call
popl
mov
pop
mov
add
sub
lds
jbe
inc
mov
adc
shlb
adc
cmc
or
and
xchg
sub
into
push
int
inc
pop
ret
adc
cmp
sub
nop
lret
dec
fs
cltd
into
int3
dec
push
fldenv
jae
pop
fdivrl
fsts
cmpsb
add
dec
push
xlat
cmp
mov
repnz
add
xchg
rep
xchg
mov
pop
pop
add
pop
les
mov
jb
movsl
lret
xlat
mov
addb
ret
insb
sbb
cmp
jno
inc
in
push
add
popf
fnstcw
call
fisttpl
test
jns
pop
call
insb
jecxz
inc
je
test
cld
dec
pop
fnsetpm(287
ret
scas
pop
and
cmpsl
mov
fldl
jns
dec
ljmp
imul
bound
inc
sub
int3
into
xor
push
sub
in
mov
mov
je
ljmp
sbb
pop
jmp
pushf
pusha
movsl
stc
xchg
mov
mov
mov
push
add
dec
lret
jne
dec
jl
popa
push
int3
ror
int3
clc
js
loop
clc
maxps
xchg
xchg
cwtl
inc
cld
jecxz
pop
mov
mov
arpl
cmpsb
sub
dec
sub
sbb
pop
mov
out
andb
adc
out
shl
sbb
xchg
add
xchg
mov
jnp
xchg
in
movsb
add
push
inc
jg
ljmp
cmpsb
and
xchg
jns
xor
das
imul
mov
aas
cld
stc
xor
lea
in
leave
iret
lods
mov
cltd
inc
push
pop
jp
xor
andl
addb
das
mov
sub
add
jecxz
shll
aaa
and
push
pop
fnstcw
push
ds
mov
loopne
fldt
jno
inc
fmul
scas
int3
xchg
and
pop
mov
cwtl
je
sahf
and
sub
inc
mov
bswap
push
add
out
sbb
cwtl
test
test
out
es
adc
sahf
mov
mov
inc
andl
aad
push
mov
outsb
fdiv
scas
jo
shr
xor
fyl2xp1
out
fisubs
into
imul
mov
xor
fidivrs
push
cmp
or
and
popa
enter
push
les
cmc
mulb
dec
pop
dec
dec
push
mov
pop
aam
fists
daa
rcr
jb
dec
sub
fbstp
push
push
push
pop
test
or
imul
jbe
inc
sub
adc
test
mov
int
sbb
sub
adc
xor
xchg
inc
push
test
idivb
scas
in
divb
fidivl
sub
push
push
sbb
leave
push
and
mov
xchg
aas
adc
dec
push
mov
not
repnz
or
in
mov
xchg
lret
pop
aam
clc
in
inc
enter
inc
mov
xchg
hlt
add
xor
push
lcall
fisubrs
lea
inc
mov
or
aad
and
or
scas
adcl
lds
fimuls
mov
inc
jb
push
and
sbb
mov
adc
dec
push
in
inc
stos
aaa
arpl
jbe
cmpsl
jle
mov
xchg
fs
inc
fs
sahf
xchg
cmp
lds
imulb
es
xchg
adc
inc
push
xor
out
pushf
cwtl
movsl
out
cmp
test
jecxz
inc
jno
out
xor
ret
nop
xchg
call
call
loope
fadd
bound
imul
fstp
pslld
cmp
inc
pop
jecxz
movb
jns
mov
push
lret
out
fwait
aam
cltd
mov
out
rol
gs
fwait
push
sub
mov
xor
in
out
xchg
mov
lods
mov
mov
and
jg
mov
shl
out
and
fmuls
push
ficomps
adc
rorl
mov
pop
lret
mov
lahf
add
jmp
xor
out
bound
out
insb
pop
loope
iret
icebp
addb
sub
ja
or
dec
jae
inc
mov
push
cld
mov
mov
fdivl
pop
mov
pusha
inc
mov
xor
test
jge
mov
cmp
ljmp
cmp
ljmp
cltd
js
mov
jno
add
das
fcomps
lods
mov
mov
jo
dec
dec
add
lcall
mov
sub
cmc
and
rclb
adc
adc
pop
push
lock
dec
sbb
sbb
inc
jnp
mov
in
xor
andl
or
out
rcrb
ret
mov
fstp
push
out
idivb
pop
outsl
or
loop
mov
and
xor
popa
sub
inc
ret
dec
in
and
add
pop
cltd
inc
mov
and
jnp
iret
lock
sti
jae
mov
xchg
das
hlt
pusha
jge
icebp
or
push
xchg
sbb
addr16
int3
imul
pop
aas
es
out
fstpt
cmpsl
sbb
sub
mov
adc
mov
inc
xchg
jb
ljmp
jne
jmp
mov
shrl
ror
shr
stc
mov
jp
sub
fsts
mov
push
pop
inc
cmpsl
jge
pusha
push
rol
in
jmp
lret
xchg
jns
push
inc
adc
push
inc
lea
lds
fldenv
leave
adc
hlt
inc
js
imul
ss
sbb
jge
cmp
fcom
outsb
data16
cwtl
mov
xchg
cmp
out
fcoml
mov
push
shrl
xchg
xor
scas
mov
mov
cmp
pusha
imul
cmp
xor
loope
xchg
daa
mov
ret
stos
or
cld
mov
push
pop
cmp
add
and
and
dec
repnz
jno
cmp
add
push
cli
mov
inc
jo
lods
xchg
jecxz
push
inc
inc
ficoml
jl
xchg
in
out
mov
cmc
pushf
clc
fs
mov
iret
cmp
sbb
das
arpl
js
sub
gs
adc
sbb
loop
mov
xlat
fcoms
sbb
mov
lret
or
pop
mov
pusha
cwtl
push
ret
lahf
dec
mov
jle
push
mov
clc
jecxz
mov
or
fisubl
fidivrl
cmp
sub
push
mov
cmc
adc
test
lods
loop
jecxz
push
pop
jno
mov
mov
jb
push
aad
stc
jle
jl
insb
inc
lock
in
pop
imul
add
cmpb
aad
and
fbld
mov
mov
arpl
ret
sbb
repnz
dec
pop
incl
mov
shr
jb
sub
cwtl
into
imul
popf
inc
push
rclb
test
lock
cwtl
scas
iret
jae
cmove
loopne
or
dec
dec
push
inc
jle
popf
imulb
sbb
pop
adc
dec
cmp
add
jp
jbe
and
sbb
fdivrs
addr16
loope
stc
outsl
cmp
pop
mov
hlt
xchg
jno
sahf
or
or
sti
and
dec
xor
ja
sbb
sarb
inc
lds
mov
fwait
es
xchg
xchg
scas
jae
daa
mov
xchg
loop
jno
lahf
xchg
mov
out
loop
iret
and
data16
and
pushf
faddl
lods
push
cmc
dec
jmp
mov
pop
fsubl
mov
mov
xchg
jg
xchg
cli
mov
inc
or
add
pop
cmpsl
pop
mov
ret
pop
enter
push
stos
iret
dec
push
sahf
add
sub
mov
add
jno
in
mov
jle
popf
addr16
repnz
sub
pop
jg
jg
je
xor
pushf
pop
data16
jne
adc
arpl
jp
incl
add
push
sbb
push
inc
xor
jne
movsb
xchg
ret
adc
jl
outsb
sahf
mov
adcl
mov
push
sbb
push
dec
and
lea
jle
mov
sbb
repz
out
adc
sub
dec
pop
mov
adc
adc
cmp
mov
aaa
xor
jb
cwtl
push
xchg
or
jp
ret
mov
add
mov
mov
int
xor
xchg
gs
or
mov
xchg
pop
lock
or
int
ja
jne
int3
push
lds
ret
pop
add
push
rorb
clc
mov
mov
int
mov
adc
inc
add
cmp
movsl
sbb
push
pop
int
xchg
and
mov
gs
pop
aad
adc
pop
outsl
ficomps
jl
neg
cmp
xor
jb
xor
adc
xor
movl
cmp
in
mov
das
outsb
and
mov
loope
push
cmp
es
add
out
sbb
inc
test
mov
lret
inc
popa
test
lcall
mov
test
lret
shl
pop
cmp
dec
jb
mov
in
jo
jg
pshufw
mov
add
mov
jno
adcl
xchg
nop
cmp
jmp
clc
mov
and
cmp
xchg
es
rclb
into
jns
mov
leave
jle
testb
loopne
std
js
push
js
adc
jg
stc
std
jl
sbb
mov
mov
cmp
pop
pop
or
or
fs
fisubl
xchg
invd
sub
jmp
nop
and
pop
cmpsb
lock
jecxz
ja
les
jae
push
dec
lcall
ds
sbb
movsb
and
pop
pop
test
jno
pop
adc
sbb
insl
pop
cmc
adc
pop
xchg
cmpsb
push
je
sub
mov
pushf
stos
cmp
xchg
nop
incb
repnz
mov
test
cltd
loopne
mov
out
shl
stc
ja
stos
and
hlt
push
mov
pop
adc
jge
jp
sbb
es
stos
xchg
repnz
es
push
jge
fists
push
or
fdivrp
pop
mov
gs
ret
test
je
sub
pop
jnp
xor
outsl
cltd
and
jnp
pop
xchg
mov
pop
cmc
push
xchg
cmc
or
test
aas
push
fsubp
jl
loop
shr
xchg
cmpsb
test
and
inc
mov
sbb
repnz
adc
repnz
adc
fsubrl
and
std
jl
add
rorb
jp
imul
and
pop
dec
xchg
lods
push
pop
and
inc
test
call
xor
and
sbb
bound
xchg
popa
je
call
push
adc
or
ja
mov
sbb
test
jecxz
mov
adc
roll
mov
push
add
mov
out
adc
mov
and
jg
fcomip
aam
push
mov
and
test
imul
cli
into
dec
jns
iret
repnz
mov
pusha
cmc
and
inc
mov
jecxz
inc
jnp
rorl
xor
xchg
imul
dec
inc
mov
ja
fdiv
scas
mov
sbb
xchg
fdivrl
rep
cmp
into
repz
adc
ret
fsubrs
test
lods
mov
push
adc
into
add
test
ret
aam
jp
cmp
xchg
push
mov
cmp
leave
out
or
xchg
xchg
mov
pop
jmp
mov
shll
pop
adc
xchg
cmc
mov
adc
and
repz
cmp
in
pop
sub
fwait
xchg
pushf
jl
xchg
mov
out
mov
mov
std
shr
inc
lahf
cmc
push
lcall
les
test
xchg
pop
lods
inc
mov
dec
mov
mov
mov
stos
mov
sbb
fisttpll
test
lds
sub
push
std
jno
adc
test
xchg
jae
mov
sti
cmpsb
and
ret
lods
and
add
les
jb
ret
js
xor
cmp
fadds
push
test
cli
add
ret
dec
cwtl
insl
jbe
add
out
nop
shrl
js
call
push
daa
sahf
out
inc
repz
push
lods
fsts
or
sbb
xchg
loopne
fnstsw
jge
xor
rorl
xchg
cmp
push
out
and
stos
insl
push
and
ss
mov
dec
add
pusha
repnz
loope
jmp
sub
cs
mov
pop
jb
fidivs
and
mov
pop
hlt
mov
jle
xchg
leave
sub
idivb
adc
cltd
sub
int
int3
jbe
add
jmp
mov
test
adc
pop
add
cli
sub
in
ja
cmp
test
xchg
lret
lret
das
int
jmp
sbb
inc
lcall
sbb
jno
stos
jl
mov
addb
xchg
dec
sub
jl
cmpsl
jge
nop
lahf
push
ds
sbb
mov
out
idivb
jp
insl
outsl
mov
cltd
enter
test
lret
outsb
and
mov
and
cmp
jnp
and
mov
mov
aaa
lea
or
orb
ret
sti
daa
jmp
arpl
fs
adc
ss
fldt
jecxz
xchg
stos
xchg
ss
add
push
sub
mov
push
lcall
cmc
push
popa
lcall
jnp
fincstp
dec
mov
int
ficoml
sub
cltd
jae
sahf
fnstcw
sbb
push
bound
lds
int3
cmp
push
add
incb
jecxz
fistl
xchg
outsl
sub
push
pop
js
adc
adc
shr
adc
mov
xchg
scas
cwtl
out
or
pop
mov
out
and
and
adc
in
sbb
adc
dec
adc
hlt
push
cmpsl
test
or
or
in
es
sub
daa
or
xchg
fbld
filds
pop
xlat
outsl
sub
int
sub
mov
in
dec
jle
mov
xchg
lods
mov
push
rol
xchg
dec
dec
push
inc
shll
xchg
mov
sub
ret
aas
xchg
sub
fcoml
mov
sub
mov
fidivl
adc
mov
mov
ja
fbstp
xor
mov
rcrb
mov
adc
fistps
push
dec
jg
sbb
and
cltd
inc
add
xchg
aas
dec
lcall
jno
cmp
aas
mov
data16
cmp
sahf
ss
je
stos
shll
xor
lock
and
xor
pop
sbb
push
movsl
fstps
pmuludq
fnclex
mov
push
inc
iret
loop
mov
int
dec
das
enter
outsb
mov
xor
mov
jb
jmp
test
pop
xchg
imul
lea
fld
mov
lcall
dec
fsubrp
mov
mov
push
pop
out
and
cmp
sbb
push
pop
icebp
cwtl
cmp
stos
daa
out
pop
in
pushf
outsl
sahf
cmc
push
sbb
aaa
test
push
inc
movsb
pop
and
ss
lods
adc
pop
sbb
iret
dec
mov
rclb
gs
outsb
sub
push
jae
mov
scas
adc
loop
xchg
push
add
jb
rcrb
ljmp
mov
int
sbb
push
push
cmp
jo
ret
testb
sahf
adc
dec
xchg
cs
and
pusha
shll
sbb
dec
rol
mov
fsts
mov
jmp
leave
imulb
cmpsl
imul
lcall
xchg
sbbb
xchg
mov
jecxz
ds
movsl
scas
cmp
push
jno
call
push
jb
sub
mov
dec
mov
ss
jmp
jo
imull
std
out
cmp
sub
int
mov
mov
mov
ret
out
data16
lea
sahf
push
mov
scas
into
loope
mov
pusha
div
repnz
lock
sub
sub
jno
pop
adc
or
dec
fstps
inc
scas
test
pop
call
mov
inc
je
nop
xor
roll
in
jnp
ficompl
cmc
pop
std
test
cmp
push
and
js
int3
mov
push
cli
push
add
mov
int
jb
int
loopne
xor
xchg
or
lods
jmp
cmp
mov
dec
and
test
push
incl
mov
xor
int3
pop
cltd
dec
push
sbb
fdivrl
sbb
lock
out
adc
inc
enter
lods
fwait
mov
ljmp
movsl
lea
addr16
mov
pop
je
cmp
popf
les
push
ror
jns
dec
test
inc
push
scas
push
push
cmp
and
imul
or
xchg
insb
cmp
loop
pushf
jb
mov
mov
push
lahf
ficoml
mov
dec
iret
xchg
call
cmp
jmp
daa
push
mov
xchg
mov
cli
mov
cmpb
dec
jg
stos
and
int
dec
push
in
shll
sub
mov
mov
popa
dec
imul
aam
pop
rcrb
mov
sub
mov
bound
pusha
cltd
jg
outsb
cmp
sbb
insb
pop
xor
jne
shlb
pop
mov
add
cld
daa
cli
ror
je
push
mov
ljmp
gs
mov
sub
lret
pop
mov
pop
dec
outsl
mov
mov
ljmp
cwtl
mov
mov
or
and
cmc
push
scas
enter
pop
lock
dec
fs
or
push
cmpsb
inc
adc
xor
aam
movsb
xor
mov
daa
adc
enter
mov
ss
and
lods
aas
int
pop
or
cwtl
jp
push
pop
or
ret
jmp
jmp
dec
arpl
jnp
push
xorb
in
xchg
lock
fnstsw
les
lahf
addr16
hlt
das
mov
sbb
mov
sub
xlat
or
test
mov
cltd
push
add
hlt
js
mov
pop
sbb
add
movsl
scas
inc
out
subl
out
and
dec
test
imul
push
adc
aas
push
jnp
push
pop
iret
mov
push
adc
xchg
mov
int
pop
ret
cs
fld
xor
aaa
xchg
push
repz
movsl
xchg
je
and
rolb
pop
js
xchg
cmp
shll
fs
and
push
mov
add
dec
mov
xor
cmp
lods
dec
mov
loopne
movsl
lea
cmp
ficompl
inc
xchg
jmp
fs
jo
popa
jo
lds
sbb
cld
cmc
imul
jo
test
mov
xchg
push
ret
jns
sub
jge
icebp
int
insb
inc
insb
sbb
push
xchg
mov
cmp
hlt
fildl
mov
cmp
lret
add
sbb
lods
addr16
mov
loope
test
loop
test
bound
or
xor
mov
lret
sarl
adc
inc
fmull
out
sub
mov
imul
sahf
inc
lcall
aaa
in
push
xor
push
adc
les
lgs
aad
sbb
out
jno
dec
adc
add
adc
add
ret
idiv
inc
addb
pop
arpl
test
shr
fistpll
cmp
adc
hlt
inc
cwtl
enter
aaa
insb
fwait
push
xchg
movd
push
sbb
or
or
xchg
sbb
retw
or
mov
pop
rorl
out
jl
mov
sub
sub
sub
mov
pushf
aam
bound
cmc
and
ss
inc
adc
sbb
dec
dec
mov
sbb
dec
rorb
jle
pop
outsb
insl
xor
xchg
int3
xor
jb
cmp
int3
fs
push
cli
test
aaa
insb
bound
jne
dec
rcrl
scas
scas
jbe
sbb
xchg
sbb
xor
or
clc
or
or
pusha
ficompl
sbb
dec
dec
aad
nop
xor
adc
addr16
dec
rolb
fwait
dec
xor
sbb
mov
push
popf
pop
fisubl
sbb
icebp
push
fisubrl
clc
pushf
int
jle
pop
xchg
movsb
mov
mov
rol
aad
cmpsb
hlt
add
xor
in
icebp
daa
pusha
adc
enter
or
lahf
xchg
xchg
jmp
or
add
cmp
adc
repnz
xor
mov
bound
sbb
pushf
sbb
iret
xor
sub
idivb
and
ss
xor
sbb
sahf
and
push
fdivp
mov
outsl
mov
jae
or
in
sbb
minps
sar
mov
or
shll
test
or
loopne
sub
mov
aad
out
dec
hlt
lock
ret
sub
in
pushf
or
lret
mov
filds
push
aam
jae
mov
sub
test
cmp
jb
test
fnstcw
push
cmp
lahf
dec
mov
loope
push
push
ss
jno
jo
in
sub
sahf
leave
mov
push
mov
mov
repz
sub
mov
sbb
dec
xchg
jb
ret
sub
jne
cmp
dec
jae
jle
xor
stos
fcomps
or
push
test
xor
in
hlt
popf
sarl
in
stos
faddl
jae
jge
add
data16
mov
or
clc
push
in
and
addr16
dec
mov
sub
mov
out
call
inc
jb
enter
xor
es
rcr
and
and
xor
ficoms
xlat
and
xor
push
cs
xor
scas
dec
mov
sti
sbb
rol
mov
lret
xchg
sbb
movsb
lods
mov
push
cli
rcrb
popf
push
imul
rcr
sub
test
sub
mov
cli
fwait
inc
xor
mov
mov
jecxz
imul
pop
aaa
jbe
leave
idiv
inc
lods
xor
test
jno
iret
or
pop
mov
sub
mov
rorb
cmp
inc
xlat
lret
gs
cmp
repz
bound
mov
jb
cltd
aaa
imul
clc
out
cwtl
imul
xlat
loope
inc
mov
mov
ss
mov
cmpsl
xchg
std
aaa
fucomp
inc
es
in
sbb
pop
mov
inc
cmp
or
sub
mov
repz
fsts
mov
dec
ss
mov
insw
push
cmpsl
mov
dec
mov
std
push
in
cwtl
mov
shll
or
aad
pop
inc
or
mov
add
xor
nop
cltd
cs
cs
sub
inc
xchg
mov
rcll
dec
sub
mov
jle
push
mov
popa
xchg
ficoms
adc
aad
or
xor
mov
mov
xchg
std
sub
pop
jmp
adc
and
cs
cmp
and
jecxz
movb
mov
ret
pop
cmpsl
movsl
inc
arpl
fisttpll
mov
out
lret
lea
xchg
cmp
rorb
mov
cmc
jmp
mov
xchg
lds
push
out
or
xchg
xlat
xor
repnz
jecxz
js
jne
mov
js
stc
outsl
add
lcall
sbb
pop
mov
gs
pusha
fiadds
bound
xchg
inc
mov
jle
sti
daa
insl
cmpsb
push
jb
inc
mov
fwait
cmp
mov
cmpsb
push
jbe
roll
idivb
inc
fmull
mov
ss
loope
loopne
xorl
lret
push
push
xacquire
mov
pop
enter
add
nop
ficoms
mov
cmpsl
xchg
les
fwait
add
cmpsb
cmp
jle
gs
out
je
jne
idiv
mov
rorb
cmpsl
loop
push
fnstsw
pusha
dec
arpl
sub
push
mov
jo
mov
push
jp
xchg
arpl
gs
jo
out
adc
cmpsl
mov
xor
sbb
xchg
mov
mov
ja
pop
cltd
roll
jle
inc
scas
xlat
pop
fnstenv
testl
pop
inc
je
inc
sub
sbb
inc
pop
mov
or
icebp
imul
dec
push
jns
in
mov
icebp
icebp
jle,pt
adc
in
sbb
in
pop
dec
imul
mov
ja
bound
inc
les
cmp
loop
icebp
jecxz
stos
inc
ficoms
cmp
ret
cmpsb
scas
repnz
loopne
scas
lods
mov
pop
pusha
fs
mov
clc
fidivl
dec
or
rcrl
xor
and
mov
or
jnp
int
pop
inc
repz
imulb
mov
orb
mov
bnd
xor
sahf
pop
outsb
sub
pop
cmpsl
mov
cmc
mov
js
mov
xchg
xor
pushf
xor
and
push
arpl
negb
imul
mov
into
into
push
push
subl
int3
xor
movsl
repnz
adc
dec
fsubl
lock
mov
js
fscale
push
adc
sti
jne
call
outsb
aas
cli
xlat
add
inc
leave
or
test
adc
mov
imul
mov
or
adc
xchg
out
lcall
adcb
loope
ds
push
dec
cmp
inc
mov
in
mov
and
jg
hlt
pop
push
dec
dec
addr16
arpl
jmp
jecxz
push
push
daa
or
pop
ret
xchg
stos
jns
shrb
sbb
scas
mov
test
pop
in
push
cli
popf
mov
cmp
xchg
fmull
ror
adc
call
mov
test
mov
add
push
push
jle
adc
lret
cld
pop
pop
adc
mov
mov
lcall
mov
adc
std
mov
cmc
movsl
xchg
xchg
movsl
and
fsubl
std
dec
clc
out
sbb
test
xchg
fcompl
ljmp
mov
jmp
jmp
and
mov
dec
out
fimuls
insb
adc
jnp
mov
pop
add
rorl
push
fmull
mov
pop
mov
mov
xlat
push
xchg
clc
inc
jg
jne
lret
pop
mov
rol
cmpsl
cli
pop
cmpsl
imul
add
mov
sbb
insb
jne
adc
xlat
loop
pop
mov
addr16
pop
inc
shrb
jbe
or
inc
das
push
dec
jo
mov
sbb
data16
neg
push
mov
sub
xor
adc
into
aam
sub
inc
xchg
jno
je
fisttps
out
push
das
adc
xor
xor
add
movsb
cltd
push
sbb
push
addl
push
jbe
jge
xor
push
bound
out
jb
push
dec
pop
xchg
dec
loopne
mov
push
cs
pop
pop
push
popf
sub
or
daa
loop
popa
js
cltd
mov
fidivs
rcrl
pushl
mov
add
or
push
out
in
sub
mov
pop
mov
pop
inc
test
leave
cli
cmovno
push
lods
mov
jo
xchg
mov
mov
push
add
hlt
test
subl
movl
or
mov
add
mov
aaa
mov
arpl
or
lret
jns
ljmp
ret
xchg
inc
loop
xor
sbb
adc
xor
pop
sub
xchg
mov
mov
fistl
test
cltd
ds
es
jo
stos
adc
mov
pop
or
mov
adc
mov
aaa
push
sahf
fdivr
cmpsb
jmp
sbbl
mov
in
inc
dec
sbb
into
fstpt
lds
mov
movsl
jge
mov
cmp
xlat
xchg
sbb
out
popa
xor
push
es
dec
lret
jle
cmp
sub
inc
aad
movsb
mov
in
inc
repnz
sbb
loopne
xchg
jnp
das
xor
andb
add
popf
add
in
pop
sub
add
or
and
lods
sub
js
icebp
mov
cs
sbb
outsb
inc
xchg
insl
pop
sub
stc
stos
pop
sub
test
ret
and
mov
and
jno
les
imul
icebp
icebp
mov
bound
mov
jne
aad
andl
pop
inc
push
sub
xchg
add
ret
xchg
or
xor
jo
mov
push
pop
mov
cmp
mov
in
pushf
or
insb
lea
adc
xchg
js
iret
pop
mov
in
sub
shll
fcoms
ret
add
xor
test
xor
mov
xchg
stos
adc
push
addr16
jnp
push
pop
cmpsb
sub
sti
ss
aad
cmp
pop
sbb
shll
loop
jmp
mov
repz
cs
pop
popa
in
inc
lret
fst
jb
mov
mov
mov
stos
cmp
shll
xchg
into
or
sub
inc
and
xchg
add
dec
inc
mov
inc
pusha
pop
jbe
mov
and
sbb
test
ss
pop
jae
dec
and
or
sub
cmp
jbe
test
pop
push
cmp
push
iret
jp
and
subb
int
test
out
clc
adc
xor
and
pop
daa
adc
add
pop
xor
scas
lock
inc
mov
fistpll
mov
mov
addr16
xchg
arpl
push
push
adcb
test
fwait
arpl
dec
sub
or
push
inc
xchg
xchg
std
ljmp
pop
data16
and
mov
dec
jno
ret
jl
jbe
mov
jp
ret
sti
add
xor
jns
push
addl
out
pop
add
cmp
mov
fdiv
insb
xlat
and
xor
lds
mov
lret
push
fmuls
jne
arpl
fdivs
inc
sbb
jns
pop
inc
mov
inc
inc
or
stc
sbb
sub
fcomps
mov
mov
jns
dec
cli
enter
std
mov
imul
sbb
sub
ds
sbbb
pop
filds
push
add
out
push
add
loopne
movsb
loop
mov
lods
andb
mov
dec
sbb
mov
fcoml
fmul
and
aad
icebp
dec
pop
sub
cmp
jecxz
mov
push
mov
xlat
das
mov
mov
repnz
pop
jle
mov
fldt
sbb
and
sbb
clc
mov
mov
cmp
xchg
xor
jo
mov
xor
ljmp
shrl
or
iret
ret
rol
adc
pop
aam
fsubs
imul
xor
push
lock
fsts
rclb
lock
loopne
loop
lahf
cmp
sbb
ss
fdivrp
jnp
jae
mov
inc
mov
mov
mov
pop
aam
pop
lcall
arpl
push
enter
xchg
sarb
mov
adc
and
adc
xor
mov
repz
sbb
aam
lcall
jns
cs
icebp
adc
push
xchg
aas
vpshab
fildl
xchg
jb
or
es
push
incb
xor
cmc
testb
or
lock
push
push
cmpsb
dec
jl
xor
test
cli
outsb
rcr
push
mov
rorb
cmp
lock
test
xchg
cmp
xor
xor
mov
std
cltd
icebp
clc
lock
cmp
imul
xor
shl
in
jecxz
js
sbb
mov
jae
adc
jo
cli
iret
jmp
repz
sbb
rcll
xchg
cmpsl
sub
loop
lret
xor
out
loopne
pop
sbb
xor
cli
psubb
inc
inc
xchg
call
jnp
mov
movsl
or
xor
xor
enter
adcl
xor
popa
js
or
xchg
das
mov
jle
es
mov
and
cmc
gs
rcll
push
jb
movsb
in
xchg
cmp
cld
pop
xchg
or
inc
or
xchg
icebp
fisubs
add
pop
pusha
bound
pop
jmp
les
xchg
push
arpl
insl
push
test
jo
jl
test
inc
jae
jecxz
test
sub
dec
add
mov
lock
pop
imul
test
jae
bswap
fidivrl
aas
push
sub
mov
in
loopne
xchg
dec
insb
cmp
fdivrs
push
lods
mov
frstor
pusha
push
cli
in
push
dec
mulb
out
call
lods
aad
mov
add
bound
sbb
xchg
rclb
dec
adc
mov
xorb
bound
movsb
jl
iret
inc
mov
mov
xlat
lahf
out
and
adc
out
mov
sub
das
fwait
icebp
out
mov
arpl
jno
ja
ret
imul
sub
jecxz
outsl
dec
pop
jo
jecxz
dec
jmp
cmpsb
inc
imul
loop
imul
shlb
fucomip
inc
adc
jecxz
popf
add
push
lods
lret
je
mov
and
sbb
inc
lea
out
hlt
and
sbb
stos
aam
out
test
cmc
fmul
out
xor
pop
ss
stc
sbb
arpl
mov
sub
mov
jo
in
movsb
xlat
cld
sbb
sbb
ss
xor
popf
insl
lahf
jb
or
xor
das
push
mov
das
sbb
fnstsw
std
shll
fwait
mov
mov
and
or
inc
and
testl
in
mov
sarl
mov
xchg
jl
outsb
push
push
sub
lcall
xor
lahf
lods
jg
dec
push
test
mov
lds
xchg
outsb
add
jae
inc
cmc
hlt
clc
dec
out
adc
mov
in
stc
jb
rcrb
and
dec
jne
mov
sbb
shll
roll
adc
decb
dec
xor
fmull
cld
jo
je
push
cld
fsts
adc
add
subl
cltd
inc
xor
jnp
outsl
popf
lahf
push
loop
mov
mov
mov
xor
pop
mov
scas
add
and
xor
xlat
mov
andb
pop
adc
mov
mov
popa
lret
loopne
add
push
jp
fldenv
mov
jmp
push
lock
mov
js
add
insb
scas
stc
lods
gs
cmc
outsb
pop
out
in
std
push
dec
ss
shll
subl
cmp
sti
repnz
push
rcl
mov
in
pop
adc
std
repnz
sbb
test
jl
add
je
mov
int3
jns
in
sub
cltd
outsl
xlat
iret
mov
adc
mov
insl
lahf
jo
outsb
sub
xlat
sbb
aas
negl
and
push
pop
and
addr16
push
popf
das
ss
hlt
sub
test
mov
imul
adc
outsb
outsl
pop
popf
inc
int3
jl
push
xlat
xorb
loop
dec
js
jmp
imul
xchg
sti
out
xchg
push
dec
xor
aas
fisttps
ja
scas
cli
mov
xor
stos
out
xlat
lds
call
cmp
fstpt
push
push
cmp
out
cs
inc
hlt
pop
arpl
xchg
cmp
notb
popf
js
movsl
mov
daa
gs
ljmp
cmp
loop
imul
in
sar
int
jbe
and
aas
adc
rorb
add
jg
mov
pushf
xor
pop
call
fwait
xor
rcr
out
jmp
std
add
push
in
sub
je
ret
aaa
or
insl
imul
mov
push
lcall
push
stc
jmp
mov
sub
sbb
xchg
fisttpll
in
test
enter
pop
sbb
jns
mov
fcomp
dec
scas
cmpsl
and
std
pop
sbb
add
pusha
repnz
imul
jmp
pop
sarl
xlat
adc
jns
mov
test
mov
push
mov
mov
pop
sub
arpl
sub
cltd
xchg
mov
push
mov
inc
cli
fistps
add
xchg
imul
or
mov
subb
jmp
loope
lret
push
aam
gs
call
out
push
outsb
sub
aam
and
pop
addr16
push
int3
lret
dec
outsb
ds
or
sub
and
adc
sub
mov
jo
sbb
cmp
and
mov
mov
or
push
push
cmpsb
jle
jo
cmp
jp
addr16
xor
imulb
sbb
cmpsl
dec
dec
mov
out
je
xor
mov
xchg
mov
inc
repz
cmpsb
std
add
xlat
push
imul
repnz
inc
push
int3
nop
xor
xorb
jno
and
inc
addr16
outsl
fstps
sti
data16
test
int3
jno
xchg
rcrb
out
nop
pop
das
inc
jo
mov
popf
pop
jg
fs
push
imul
sub
lea
clc
dec
movsb
iret
inc
mov
test
ljmp
outsl
les
sbb
adc
popa
push
cwtl
in
imul
call
mov
push
jb
xor
es
stos
pusha
movsl
icebp
mov
loope
fistpl
xchg
sarb
add
lods
cmp
push
jns
adc
jmp
cmp
sti
or
xchg
cmp
cmp
cmpsl
in
and
fwait
or
push
jmp
cmpsb
or
in
adc
cmp
clc
jnp
push
shl
dec
imul
dec
mov
arpl
cmp
arpl
mov
xchg
in
cmpsl
cmp
jae
nop
lret
lret
jg
jl
in
in
roll
and
add
xor
ss
sti
sbb
xor
inc
cmpb
ret
pop
jno
cmp
les
lods
loope
lock
repz
cmp
add
jbe
xor
es
push
imul
pop
test
or
cs
xchg
or
sbb
xor
jb
jo
fildll
dec
adc
mov
stos
push
insb
out
cmc
dec
jge
das
sub
and
xchg
jnp
push
jp
ljmp
mov
inc
jmp
iret
imul
pop
pop
imul
push
cmpsb
std
pushf
mov
push
dec
cld
dec
insb
cmp
or
jb
aas
aam
stos
cmp
aaa
dec
cli
mov
es
pop
fiaddl
lcall
mov
imul
out
dec
jne
mov
subb
mov
push
sahf
lock
call
repz
fisubs
imul
out
mov
or
pushf
mov
fisubrl
ret
mov
in
faddp
mov
mov
inc
mov
or
stos
imul
push
dec
push
stos
scas
jmp
test
jne
bound
fistl
leave
test
hlt
add
jmp
inc
pop
xchg
rorl
outsb
fs
jg
xor
shl
sbb
adc
in
mov
popf
cwtl
data16
xor
push
pop
dec
cld
repz
xor
mov
jne
imul
inc
sarl
testl
es
adc
jp
sbb
mov
fnstcw
jmp
dec
and
add
orl
pop
lret
shll
in
push
movsl
cs
sti
or
es
fisubrl
loopne
cmp
adc
adc
mov
hlt
adc
push
rclb
add
pop
or
sub
pop
pop
rep
out
mov
mov
cmp
mov
stos
and
lcall
inc
outsl
pop
cmp
aaa
pop
and
aam
iret
arpl
shlb
pop
cld
push
xor
jg
imul
orl
pusha
or
mov
stc
xchg
mov
sar
sub
lahf
fsubp
inc
cld
xor
stos
mov
fwait
cwtl
xlat
push
pushf
and
and
in
insb
punpckhwd
das
xlat
adc
mov
xor
push
sub
mov
or
shll
and
addl
dec
imul
jl
dec
enter
add
pushf
mov
mov
ss
lea
pop
sub
repnz
out
inc
adc
xchg
imul
jle
mov
dec
ljmp
fucom
aad
test
arpl
aaa
cmp
call
or
repnz
add
fistl
xchg
imul
imull
xor
xchg
stos
or
sub
inc
push
cmp
pop
fsubl
sbb
rcll
jne
add
xor
fidivl
mov
out
dec
aaa
data16
lret
cs
lods
add
and
cmp
jne
test
ret
stc
rcl
cmp
lods
xchg
add
pop
aas
loop
in
cmp
mov
cmpsl
negb
shrb
stos
mov
ficompl
out
jnp
pop
push
xor
sub
mov
sbb
jle
std
loopne
cmp
lods
push
outsb
cs
cmp
jnp
mov
mov
in
jo
mov
jne
fsubp
mov
js
sti
js
in
and
fsubl
subb
lret
fwait
push
jl
sti
add
inc
loope
test
inc
enter
push
movsl
shrl
xor
fiaddl
rcll
dec
push
inc
aad
cmpsl
inc
xchg
jle
out
repnz
mov
jge
and
push
sub
or
mov
inc
add
jmp
es
pop
adc
mov
sub
mov
out
int3
push
and
add
mov
xchg
xor
cmp
mov
adc
shll
pop
out
fimull
nop
push
out
cwtl
enter
xor
loope
iret
shld
js
inc
and
inc
push
in
sbb
pop
jo
inc
std
iret
mov
cmpb
nop
xor
rclb
aam
cmpsb
js
aaa
enter
push
sub
daa
cli
rol
mov
lock
inc
mov
xor
ja
mov
jno
popa
ds
aad
xchg
mov
ret
mov
mov
pop
subl
inc
pusha
adc
ret
loope
fstps
push
jno
out
mov
enter
ss
out
clc
adc
cmp
into
pop
shll
cwtl
popf
or
sbb
sub
sub
mov
adc
add
pop
test
ret
add
inc
inc
dec
popf
add
push
insb
jo
out
int3
aas
lods
pmaxub
xor
mov
in
sbb
jo
in
loopne
rcrb
daa
loop
cmp
xchg
sbb
jno
dec
sbb
sub
push
lods
movsl
mov
push
flds
mov
testb
pop
jmp
into
movsl
in
add
jns
ret
sub
inc
es
xchg
fmuls
jae
loop
repnz
inc
lds
out
cmpsl
mov
fisttpll
movl
movsb
sbb
mov
and
cmp
adc
arpl
cmpsb
xchg
xor
rorl
cmp
add
xlat
test
dec
mov
aad
daa
mov
pusha
push
nop
pop
push
test
pop
scas
push
sbb
sub
mull
sarl
jns
mov
mov
ja
xchg
fcomps
sbbb
js
std
addr16
xor
neg
in
repnz
ljmp
mov
stc
add
mov
pop
ss
jns
aas
mov
idivb
pop
sbb
sbb
jb
cmp
inc
pop
sbb
pop
push
andl
movsb
push
fildll
cmp
out
cmc
add
jmp
ret
shrb
xchg
aad
mov
cmp
push
and
xchg
clc
inc
fdiv
push
cld
inc
push
dec
mov
int
push
pop
push
scas
push
pop
mov
xchg
xor
ja
push
xchg
hlt
pop
fistps
lods
ret
das
mov
sbb
mov
push
sbb
int3
test
out
push
pop
cmp
ret
fnstcw
loope
in
jo
sbb
out
add
pop
adc
push
inc
push
sbb
outsb
add
fiadds
or
mov
scas
aas
ret
in
xchg
xchg
das
lods
fmuls
jle
and
xchg
mov
leave
fldcw
adc
int3
lahf
scas
dec
test
out
add
lock
adc
jecxz
pop
push
cli
push
or
and
jl
jno
mov
rcrb
push
movsb
mov
cwtl
and
adc
xor
int3
ficoms
cmpl
mov
jl
dec
lods
repnz
in
sub
stc
pop
xchg
pop
std
dec
out
push
cmp
adc
mov
cmp
inc
xchg
in
sti
jns
lret
insb
stos
es
push
pushf
lods
out
scas
cli
cltd
cmp
dec
loope
sbb
repnz
ljmp
rcl
dec
push
bnd
clc
imul
mov
add
jo
mov
mov
into
test
fbstp
cmp
xchg
or
mov
pop
fnstcw
adc
in
dec
mov
pop
mov
aam
movsb
or
shlb
push
stc
loopne
lods
icebp
xchg
shl
xchg
sahf
sbb
dec
imul
jne
gs
cld
pop
decb
dec
adc
in
sub
dec
mov
test
xor
or
pop
xor
pop
jne
clc
mov
xchg
stc
into
xlat
dec
shlb
cmp
push
jmp
stc
lret
in
popl
rorb
push
shl
and
shlb
xor
or
dec
mov
pop
ja
enter
fwait
ss
das
aad
mov
mov
xchg
bound
or
aad
and
inc
sub
pushf
call
movsl
xchg
idivb
idivl
lods
and
mov
fdivp
mov
ror
cmp
ljmp
lock
mov
fidivrl
je
mov
fs
cwtl
pop
adcl
adc
test
push
lahf
gs
in
sub
push
negl
pop
imulb
je
lgs
fs
mov
test
andb
mov
icebp
lahf
shrl
pushf
shll
push
shll
ret
adc
mov
stos
pop
dec
mov
aas
sbb
fisubrl
xchg
int
lcall
xor
aam
cmp
nop
mov
fs
repz
in
mov
dec
sbb
repnz
loop
add
and
popw
dec
lods
push
stc
mov
and
insl
dec
stc
and
aaa
xor
std
daa
sub
push
inc
mov
mov
inc
push
jg
jg
cltd
scas
lcall
sub
testb
hlt
aaa
mov
cli
lods
mov
sar
movsb
aam
mov
out
pop
in
hlt
adc
lds
jne
sub
je
mov
aaa
sub
test
inc
insb
scas
or
lock
mov
cltd
imul
fimuls
imul
sahf
cmp
mov
mov
pop
sbb
pop
cmpsb
mov
cs
into
mov
enter
fs
jmp
movd
mov
jo
or
mov
push
xchg
mov
mov
aaa
inc
int3
js
jne
insl
repz
cmp
xchg
adc
lcall
repz
popf
and
lret
push
sbb
xor
shl
ljmp
nop
rorb
or
inc
outsb
mov
xchg
jle
bound
aam
int
cld
adc
hlt
xchg
or
ss
fwait
imulb
push
jge
arpl
jno
push
clc
mov
mov
es
je
push
jb
and
pusha
xchg
pushl
inc
lret
fs
es
test
icebp
sbb
ds
out
loopne
arpl
fnsave
jge
mov
xchg
cs
dec
inc
loop
out
jo
dec
stos
in
xor
icebp
jo
and
frstor
mov
js
dec
outsl
imul
into
or
lahf
sbb
in
inc
jae
mov
add
mov
inc
cmpsb
cmpsb
push
adc
dec
lds
sbb
repnz
int
add
in
push
inc
out
fs
sub
jno
dec
xchg
or
push
add
adc
movsl
fisttpll
stc
pop
push
cmp
cli
jns
pop
mov
push
dec
jle
testl
ret
jnp
es
jp
fildl
sub
rcrb
lock
aam
in
mov
outsl
mov
dec
jo
popf
jns
cwtl
push
das
mov
fwait
sub
sub
add
mov
xchg
cmp
scas
divl
cmp
sub
sbb
stos
inc
xor
ljmp
mov
pop
test
cmp
sbb
sbb
outsl
add
es
mov
add
mov
movsb
and
addr16
loope
and
push
lock
mov
xor
repz
and
sub
lods
mov
lahf
mov
adcb
mov
inc
mov
push
sbb
test
dec
push
imul
push
jno
in
pop
jg
fbstp
mov
hlt
sbb
aam
mov
gs
adc
mov
fdivrs
cmpsb
ret
sbbl
xor
jle
pop
sbb
lods
aaa
push
or
in
cmp
xchg
add
inc
subb
sub
or
adc
mov
jnp
mov
cmp
mov
pop
out
mov
add
adc
sub
idiv
insl
test
sub
mov
data16
iret
push
nop
movsb
hlt
sub
push
mov
rep
sbb
fstl
and
test
and
dec
mov
xor
xchg
or
sub
adc
xor
or
pop
out
outsl
jp
test
adc
mov
shlb
je
mov
movsb
pop
or
or
in
sbb
push
into
in
mov
push
fisttpll
sahf
addb
pop
test
out
mov
pop
scas
jo
lds
inc
mov
jo
inc
mov
rorb
int
rorb
jecxz
gs
xor
imul
jle
in
jbe
jb
adc
add
mov
fldenv
cmc
cmp
and
mov
popa
test
or
mov
push
into
test
movsl
push
insl
add
mov
jmp
scas
xorb
jno
mov
add
mov
xchg
sarb
cs
mov
outsl
jo
leave
cwtl
daa
push
test
dec
jns
xor
mov
ss
cmp
in
lods
pop
adc
cwtl
ret
add
imul
hlt
cmovae
or
cmpsl
xor
aam
loopne
aaa
fcmovu
push
cmpsb
xor
cmpl
int3
fisubl
push
jb
and
std
fisttps
popa
outsb
sub
imul
fdivrs
jb
sub
out
and
cld
inc
sti
xchg
jb
lock
dec
faddl
mov
dec
rolb
cmp
adc
cmp
js
inc
cltd
mov
scas
into
jbe
aam
mov
xor
add
arpl
insb
xor
or
cmc
cmc
pop
fs
sahf
cltd
jl
stc
mov
testl
imul
add
xchg
or
inc
add
sti
clc
sarl
xchg
pop
xor
not
mov
mov
outsl
dec
mov
arpl
adc
mov
mov
add
xor
mov
adc
xchg
add
mov
jl
mov
mov
push
sahf
xor
jp
xchg
mov
adc
or
pop
test
rcrb
imulb
xchg
call
pop
pop
xchg
cld
ret
stos
imul
jb
out
iret
sub
xor
mov
adc
add
pop
das
jo
pop
jle
cltd
inc
loop
dec
cltd
divb
mov
fnstsw
shll
nop
rolb
dec
push
push
sub
and
in
mov
test
cld
lods
lds
push
pop
stos
jl
lea
jmp
sub
mov
sub
xchg
mov
dec
dec
mov
add
popf
adc
int
cmc
adcb
mov
out
cltd
fadd
fisubrs
aad
fwait
xlat
ljmp
pop
stos
push
ficoms
inc
push
notb
dec
pop
and
inc
lret
cld
test
cltd
mov
mov
push
cwtl
xlat
jb
sub
lock
inc
mov
sarb
mov
dec
clc
mov
push
stos
adc
or
pushf
aaa
xor
repz
adc
xchg
adc
outsb
xchg
mov
das
dec
sbb
hlt
push
decb
push
mov
ss
out
jnp
hlt
popf
outsl
sub
leave
clc
in
not
repz
inc
xchg
out
mov
insb
adc
dec
mov
cmpsl
xchg
pusha
daa
sub
fs
mov
imul
jle
push
sub
mov
fadd
jbe
xlat
outsb
shlb
jns
jg
lret
adcl
in
daa
sub
ret
jno
mov
sub
dec
nop
add
repz
mov
subl
xor
dec
leave
add
jmp
mov
adc
xor
and
adc
aad
sub
xor
push
mov
in
test
or
push
dec
stos
mov
fidivrs
sub
subb
push
iret
sbb
sti
xchg
push
mov
mov
cld
out
xor
cmp
xchg
mov
int3
rcr
movsb
fsubrl
xchg
pop
jge
daa
imul
and
sti
push
mov
dec
push
out
lock
mov
fstpl
fldcw
fwait
pop
and
adc
imul
addr16
stc
dec
sbb
sahf
inc
inc
mov
jmp
in
cmp
sbb
adc
jmp
mov
inc
xchg
and
and
jno
lods
mov
jbe
daa
aaa
call
pusha
cmp
cmpsb
ds
jle
pop
adc
adc
arpl
dec
xlat
in
andb
shl
addl
mov
mov
popa
subb
lahf
scas
lahf
or
jae
mov
icebp
push
add
sbb
mov
mov
inc
jae
mov
add
arpl
jno
sahf
mov
rclb
xor
aam
fucomi
jne
ds
dec
mov
and
mov
imulb
dec
ret
cmp
mov
sbb
push
orb
or
or
iret
sub
xchg
and
inc
inc
mov
jnp
outsb
sbb
jbe
mov
movsl
mov
ja
pop
sbb
or
push
dec
dec
jge
inc
out
xor
fimuls
push
aaa
mov
add
scas
rcrl
ret
xchg
das
or
mov
cmc
clc
outsb
idivb
jmp
push
pop
das
mov
push
pop
xor
stos
shl
and
dec
pop
or
mov
mov
mov
into
add
in
shlb
inc
inc
addb
imul
mov
loope
test
inc
xchg
jb
and
loopne
sti
stc
xchg
inc
mov
sub
mov
int
insl
mov
pusha
jo
xchg
call
call
daa
jne
in
stos
inc
cmpsl
pop
test
pop
mov
insl
sub
mov
shll
mov
mov
lea
dec
push
ffreep
dec
jmp
aas
test
pop
imulb
in
data16
mov
aas
mov
es
cwtl
pop
ja
gs
out
lret
lahf
push
or
inc
out
lock
fsubl
xchg
fildll
add
adc
fwait
push
aas
pop
mov
inc
xchg
lods
cmp
and
pop
cmp
dec
mov
aad
add
incl
lret
push
jb
aad
cmovp
mov
loopne
xchg
or
mov
rcr
push
cmpsl
in
lcall
mov
in
int3
sub
stc
mov
add
lahf
adc
loop
sahf
push
push
mov
daa
mov
pop
mov
lds
int3
adc
pushf
mov
leave
aad
cwtl
and
sbb
mov
xlat
cmp
shl
jb
and
and
pop
mov
repz
jg
imul
push
decb
mov
loope
ds
mov
cmpsb
cmpl
dec
faddl
andl
pop
jbe
clc
andb
mov
nop
sahf
fiadds
in
int
sub
sub
test
pop
xchg
mov
outsb
test
xor
fwait
pop
push
les
add
or
sbbl
int
mov
inc
sti
xor
das
bound
out
jmp
sbb
cmc
cmp
sbb
loop
sbb
sub
or
sahf
mov
lret
fstpt
push
push
or
push
fstps
and
decb
int3
inc
ud1
push
xor
mov
xor
push
mov
and
stos
push
jo
cmp
pushf
mov
sub
xchg
testb
sub
mov
dec
outsl
mov
shll
jne
scas
in
imul
ret
iret
lret
mov
clc
cmp
or
inc
sbb
fwait
cwtl
arpl
adc
dec
sub
inc
dec
add
mov
xchg
loope
aad
mov
insl
stos
cmp
mov
mov
pop
lds
stc
fstps
mov
dec
sbb
mov
aam
jns
fpatan
inc
push
push
mov
fs
dec
dec
cmpsb
lods
jnp
and
sarl
sbb
sub
pushf
pop
xor
int3
add
call
xchg
rolb
lahf
in
pushf
cmp
jnp
shll
fwait
shll
jo
loope
mov
popa
mov
xchg
mov
repz
dec
scas
xlat
add
inc
and
push
pop
les
cmp
xchg
into
ss
call
arpl
iret
dec
jbe
xchg
rcrb
xchg
ss
xor
imul
lcall
adc
pop
pop
rorl
clc
loop
push
push
dec
add
aad
jb
retw
mov
adc
repz
je
mov
pop
push
imul
push
int3
int
sub
addb
pop
pop
pop
mov
push
sub
xchg
or
pop
fs
mov
jg
push
call
jecxz
xor
jae
fsts
es
icebp
movmskps
in
add
divl
stos
xchg
mov
xor
mov
cmp
jns
inc
push
test
adc
xchg
inc
imul
test
popf
test
sbb
lret
leave
fdivs
jl
in
and
insb
cli
fsubrs
mov
in
fidivrl
popa
out
adc
repz
pop
mov
into
jl
and
mov
adc
insb
sbb
mov
jge
or
mov
fcoms
push
sub
aas
in
push
sbb
pop
adc
nop
cmp
mov
pop
mov
enter
jle
pop
and
jmp
out
xor
incl
test
and
movsl
pop
xor
aam
notb
inc
repnz
out
pop
pushf
mov
ret
fidivrs
inc
ss
fdivrl
les
in
sbb
xchg
out
jno
or
fs
jae
add
add
mov
aad
xor
loope
dec
nop
mov
leave
stos
mov
call
pop
jno
cmc
ret
shlb
mov
dec
lret
mov
ja
adc
in
sarb
nop
push
pop
sbb
lcall
xor
xchg
lods
aaa
dec
mov
jg
dec
shll
or
mov
in
xor
lret
xor
mov
push
cli
xor
lods
jo
xchg
loope
test
xor
leave
aaa
ret
jo
aam
and
popa
cmpsb
add
sub
mov
stc
fincstp
rorb
addr16
push
cmpsl
aam
sbbb
clc
or
imul
mov
or
lahf
insb
xor
mov
addr16
or
pop
adc
mov
cmp
shlb
pop
pop
sub
push
jmp
pushf
sbb
int
dec
add
lock
push
insl
pop
insb
std
jnp
in
decb
and
push
jecxz
pop
enter
inc
jae
out
iret
jnp
test
pop
xor
iret
mov
sarl
sub
inc
popf
adc
fucomip
pop
pop
int3
push
mov
in
xor
mov
rcll
mov
xchg
sti
nop
sahf
scas
aad
mov
cs
outsl
into
shr
lret
aad
dec
add
pop
xor
rcr
mov
cld
mov
cmp
pop
ja
xor
lret
xchg
loope
add
mov
jg
ljmp
std
mov
mov
das
sbb
dec
adc
test
sbb
ds
mov
je
out
sbb
dec
mov
inc
xchg
and
test
in
repnz
xchg
add
outsl
imul
and
dec
out
sbbl
rorl
add
cmp
hlt
leave
dec
ja
or
xor
and
xor
xchg
add
and
xchg
adc
mov
push
out
int
mov
cmp
dec
jg
adc
int3
pop
mov
pop
add
out
jne
lcall
fcomi
sti
mov
je
sti
dec
addb
cmpsb
xlat
inc
or
psubusb
fwait
push
out
js
fsubrl
xchg
push
inc
push
push
dec
jae
iret
call
xchg
sub
push
sub
in
inc
xor
sub
movsl
movsb
mov
jle
push
int3
sub
hlt
mov
fsub
outsl
mov
pushf
jle
add
xor
mov
mov
cmp
pop
cmp
jl
push
mov
les
arpl
mov
xchg
jmp
adc
dec
popf
xchg
jle
je
inc
shll
hlt
push
xchg
and
xchg
test
lsl
fidivrs
add
int
jno
jg
adc
xchg
shll
paddusb
xchg
cmc
ret
stos
shrb
pop
std
lahf
cli
dec
or
or
inc
outsl
lods
insl
sub
jae
mov
add
iret
arpl
ret
pop
lahf
cmp
insb
pop
clc
cli
mov
addl
rorl
mov
jmp
stc
test
ja
mov
bound
pushf
sub
insl
fistps
inc
sti
sbb
shlb
jmp
push
or
xor
sahf
popf
cltd
lock
addr16
inc
fsts
test
aaa
dec
mov
outsl
pop
lods
std
sbb
stos
hlt
mov
mov
cmpsb
push
or
outsb
je
popl
shll
jb
movb
xor
lock
sbb
lret
push
adc
push
or
pop
pop
dec
movsb
sub
repnz
jge
push
faddl
ss
pop
stos
vpsubb
push
dec
out
xor
mov
lret
enter
pop
cmp
lcall
dec
xchg
cmpl
enter
push
ljmp
mov
stc
shrb
add
or
mov
lock
cwtl
and
pop
leave
jo
out
clc
cmp
add
rcll
pushf
ds
mov
push
jecxz
mov
or
lcall
aad
addr16
ret
add
out
push
mov
jp
add
popf
jns
xchg
outsb
sbb
adc
inc
mulb
jb
pop
jle
jg
or
dec
loopne
cmp
xchg
outsl
daa
cmpsb
je
and
xchg
js
xchg
xorb
sbb
pop
ret
adc
sahf
dec
push
xor
mov
outsb
jg
loop
imul
jle
inc
push
lods
or
mov
mov
inc
xchg
jb
testl
movb
push
pop
hlt
test
ret
and
aas
mov
sbb
hlt
adc
int
or
cmp
jg
je
in
test
and
nop
jmp
pop
fisubrs
sbb
sbb
add
inc
mov
jne
cli
sub
xor
sbb
shl
xchg
sub
adc
in
aad
sbb
inc
fisubs
je
out
sub
lahf
xor
sbb
xor
push
rorb
or
fsts
jg
and
daa
popf
sbb
jno
dec
cwtl
push
and
inc
lods
scas
add
and
mov
mov
jg
cmp
inc
fcoml
imul
pop
or
jp
pop
clc
mov
shrl
xor
push
inc
and
mov
and
jbe
clc
fwait
mov
out
push
iret
dec
and
mov
dec
fsubrs
inc
das
sub
outsb
out
and
lock
movsb
movsl
flds
dec
test
fwait
inc
mov
cltd
pop
push
pop
xchg
orb
dec
cmp
outsl
arpl
repnz
xor
jae
add
pop
adc
jae
lret
mov
dec
stos
dec
push
xlat
fidivrs
outsl
mov
bound
jno
sbb
dec
sbb
clc
push
inc
xor
fwait
cltd
outsb
sti
repz
icebp
mov
jbe
cmpl
adc
jge
xchg
es
push
jle
bound
sub
test
jb
sub
shrb
xchg
sbb
push
cmpsl
cmpsl
mov
fwait
jno
test
movsb
hlt
pop
inc
sub
imul
jne
pop
aad
mov
rclb
scas
or
push
push
jg
hlt
jae
sbb
sbbl
add
je
loopne
shrb
out
mov
sti
into
sub
fwait
test
ja
push
out
jg
jecxz
mov
pop
aam
jo
lahf
sahf
add
cltd
lock
mov
dec
std
repnz
push
bound
dec
fnsave
cmp
jmp
cmp
in
mov
mov
aad
push
mov
lea
repz
test
shlb
ror
jbe
lret
cmp
xchg
xchg
mov
pop
cs
add
pop
aam
sub
hlt
dec
adc
sbb
dec
inc
movsb
add
mov
pop
dec
cmpsl
outsl
pop
test
mov
leave
mov
or
inc
pop
dec
adc
shrl
testb
push
and
fstpl
mov
rolb
in
xor
sbb
lock
inc
ss
scas
cmp
xor
dec
mov
cwtl
loopne
jae
push
aaa
pop
test
push
cmp
cmp
aam
mov
icebp
out
fldenv
dec
xchg
mov
push
or
pop
inc
ret
in
add
cmp
test
jns
daa
addr16
mov
aad
push
pop
lods
subb
je
mov
xchg
push
lahf
cltd
outsb
aas
adc
ficomps
ljmp
mov
sbb
insl
cld
pop
inc
fsubp
test
push
nop
inc
mov
add
xchg
sbb
push
jecxz
jmp
orb
and
push
xor
mov
mov
imul
add
xor
inc
hlt
jnp
mov
or
fisubrl
cltd
rolb
das
sub
cmp
mov
adc
cltd
popf
out
sub
push
es
stos
add
test
xor
xor
jl
xor
mov
mov
fcompl
sbb
mov
scas
cmp
sar
in
jecxz
lds
ret
lds
int
jge
mov
inc
insb
mov
jecxz
scas
lahf
out
mov
ds
shrl
into
cmpsb
lcall
cmpsb
imul
lret
adc
mov
fwait
sub
shll
test
and
add
mov
out
sbb
or
mov
add
jg
aaa
mov
dec
push
popl
addr16
sub
sub
sub
sub
mov
cli
loop
push
mov
shlb
mov
addr16
out
or
sub
popa
xchg
jne
test
pop
out
scas
xorps
or
out
pop
push
pop
inc
in
mov
test
cli
fcmovb
sub
test
jge
xchg
mov
jae
mov
pusha
fisubrl
pop
icebp
stos
dec
jae
out
shlb
divb
inc
loopne
lods
cmpl
dec
mov
cmp
xchg
lea
xchg
mov
cld
mov
push
addr16
xor
mov
sti
jg
adc
mov
sub
mov
pop
aam
ljmp
int
and
fldl
addr16
int3
nop
jb,pt
sub
jg
sahf
inc
pop
sti
cwtl
inc
jp
sub
pop
call
push
js
jg
pop
mov
push
jmp
push
test
sbb
fisttpl
idivl
jbe
lahf
dec
xchg
cmp
clc
and
push
mov
in
adc
adc
insb
or
mov
cmp
hlt
mov
cmpsb
pop
mov
xor
pushf
lcall
push
lds
rcll
mov
jg
jl
lds
sub
daa
pop
filds
sti
sbb
popf
stos
and
mov
pop
push
jmp
mov
jnp
scas
pushf
jns
mov
shlb
out
add
xor
push
test
inc
xchg
dec
js,pn
adc
pop
cmp
or
add
nop
mov
in
scas
add
sub
orl
sub
ss
sahf
iretw
jp
idiv
fwait
loope
enter
mov
add
lods
sbb
mov
push
es
xlat
out
std
inc
sbb
push
mov
push
lock
or
mov
shrb
into
add
and
je
mov
test
push
repnz
js
int
dec
hlt
mov
aas
pusha
fucom
xchg
push
test
mov
adcb
push
test
fwait
divb
gs
adc
es
mov
enter
js
and
xor
add
enter
les
data16
imul
push
lods
jecxz
out
cwtl
lods
rolb
and
je
push
inc
sub
mov
mov
movsl
fsub
sub
mov
dec
fdivr
mov
xchg
push
mov
jp
mov
repnz
lret
stos
stos
popf
in
push
adc
sahf
xchg
subb
inc
subb
mov
clc
icebp
pop
push
sub
pop
scas
dec
scas
push
cs
scas
in
add
cmp
in
push
out
fisttpl
cmpsb
push
imul
mov
inc
jb
xchg
cmp
mov
sbbl
add
pushf
test
dec
cmpsb
pusha
mov
mov
sahf
xor
lods
jnp
popa
dec
ja
sahf
mov
dec
xchg
sbb
fstpt
lds
pop
push
or
add
scas
xchg
jns
cmp
push
bound
pushf
pop
adc
xchg
clc
push
mov
repnz
cmp
pop
insb
cli
pop
insl
jbe
sub
or
add
movsl
sbb
jo
fistl
push
aad
pusha
sub
jge
and
testb
fimuls
cmp
out
inc
clc
std
and
repnz
dec
ds
andl
rcl
pop
ljmp
pop
mov
cvttps2pi
xor
cmp
shr
jp
sbb
add
out
xor
cmovs
jmp
mov
xlat
sbb
addl
pop
in
jno
jmp
xchg
xchg
fdivp
jecxz
mov
sarb
out
xor
mov
and
frstor
iret
push
notl
dec
xchg
jg
ret
stos
lret
outsb
sub
push
orb
xor
or
ja
cmp
jbe
xlat
push
in
jmp
jge
adc
or
xchg
push
cmc
add
sbb
mov
cmp
push
cwtl
movsb
iret
xchg
adc
lcall
dec
inc
inc
xor
cltd
pop
imull
popf
push
mov
jns
in
popf
fadds
jmp
sbb
mov
cmpsl
adcb
mov
pop
pusha
loopne
loopne
push
loop
push
inc
int
xchg
dec
mov
xchg
mov
mov
data16
mov
mov
xchg
aam
arpl
mov
out
movsl
loopne
aas
ret
mov
cmc
rcrl
cmp
mov
adcl
jno
or
mov
jg
jae
mov
jno
cwtl
sbb
jae
orb
in
int3
pop
int
or
rclb
adc
add
mov
dec
inc
mov
inc
das
out
lcall
push
and
jae
dec
mov
repnz
sbb
inc
inc
push
lea
nop
imul
int
lods
hlt
inc
xor
addr16
iret
lea
jp
push
jg
inc
push
push
jmp
adc
insl
nop
lret
movsl
inc
xorb
and
lret
push
cs
jbe
ret
cmp
fdivrp
jne
movb
mov
dec
push
dec
sarl
inc
incl
aaa
jne
lahf
mov
outsb
or
add
jp
repnz
adc
mov
std
or
mov
mov
cwtl
xor
jne
flds
je
dec
gs
sbb
mov
cmp
pop
mov
push
xchg
adc
or
xor
aas
cmp
inc
jne
jne
cmpsb
adc
cmp
and
and
or
adc
cmp
inc
dec
jb
jecxz
mov
or
xchg
sarb
and
lahf
repnz
xchg
and
mov
lcall
mov
push
sub
and
es
call
fldcw
cltd
xor
xor
jge
ja
jge
mov
mov
mov
push
gs
adc
imull
adc
fnstsw
dec
loop
and
and
mov
test
xchg
xorl
js
mov
out
sbb
xchg
cs
mov
int
fmulp
pusha
out
xlat
loop
imul
fsubrp
and
pop
sub
jb
inc
out
push
push
jg
cwtl
ss
xchg
adc
jno
je
insl
outsl
push
inc
push
and
arpl
pop
dec
pop
pusha
and
or
fidivrs
ret
lea
aad
jne
push
adcl
jecxz
sbb
int3
jp
mov
push
pushf
je
sbb
push
push
cmp
dec
outsb
clc
pop
ja
push
add
mov
enter
or
push
loopne
cmp
lea
xor
rol
fisttpll
sub
inc
or
mov
pop
sbb
and
jge
xchg
divl
movhlps
push
mov
negl
push
nop
mov
mov
dec
jae
mov
ja
insb
pop
xchg
jp
push
cmc
clc
jbe
mov
pop
add
out
pop
push
aad
mov
adc
xor
ljmp
cmp
sbb
fmull
jns
sarb
dec
jne
mov
adcl
subl
fwait
and
xchg
sub
cmpsb
pop
outsl
call
pop
xor
sbb
or
pushf
pop
sub
out
mov
loop
inc
jb
jns
pop
cmp
xlat
cmc
lds
xlat
xchg
mov
jmp
inc
or
mov
jbe
mov
pusha
add
mov
lcall
imull
inc
pop
bound
lcall
pop
jns
lahf
rolb
or
xchg
cld
stos
adc
add
push
dec
imul
cld
shr
mov
lret
iret
shrb
push
add
xchg
ja
adc
pop
into
sarl
inc
cs
pop
popf
or
mov
sub
xor
test
outsb
fmulp
inc
or
mov
push
adc
xor
mov
sub
dec
xor
pop
mov
fsubrl
ljmp
and
cwtl
pop
testl
lock
ficoms
push
ret
push
sub
push
add
orl
cmpsl
add
dec
xlat
loopne
inc
and
cmpb
pop
out
fwait
int
jl
ret
in
fstl
pushf
or
shlb
das
loopne
in
subb
nop
xor
in
fwait
das
in
not
push
test
outsl
scas
testl
negl
mov
outsb
dec
inc
or
std
cli
inc
jge
xor
ret
push
lock
out
fbstp
add
fsubs
xchg
inc
push
and
xchg
mov
enter
sti
inc
inc
mov
scas
out
add
mov
lret
pop
lds
cli
faddl
dec
popa
cmp
into
daa
out
fldcw
mov
mov
outsb
rclb
and
je
in
adc
aaa
mov
and
push
add
sub
dec
xchg
out
mov
adc
loop
enter
pop
cmp
xor
cld
pop
clc
sarl
jo
roll
fwait
test
popa
sbb
repnz
lret
lea
rcrl
jo
mov
pusha
jbe
push
lods
adc
out
test
test
or
push
mov
sub
mov
leave
imul
mov
pop
or
scas
bound
and
cmp
xor
mov
ljmp
mov
loope
shll
push
dec
inc
jo
jecxz
dec
sub
adc
adc
sbb
sti
push
test
dec
cmp
fldt
push
cs
mov
xor
jo
loope
cmpsb
xor
push
ds
cmc
jg
hlt
xchg
pop
xchg
jne
out
mov
dec
pop
mov
sbb
jo
pop
xchg
jb
ljmp
scas
xor
out
out
mov
in
push
sub
sub
sbb
add
int3
and
mov
cmp
mov
movsb
sahf
cltd
push
fnsave
fidivl
sbb
cs
mov
sbb
inc
clc
or
cwtl
sub
xor
inc
sub
jbe
pop
popf
cmp
xor
fidivl
pop
pop
popa
lds
outsl
xor
testb
in
les
pop
sbb
outsb
ret
test
cmc
inc
les
dec
outsb
popf
out
jbe
out
stos
push
or
rcrb
fwait
sub
scas
or
arpl
imul
mov
push
jno
xlat
sbb
into
cwtl
pop
pop
jl
add
test
jmp
pushf
cli
loop
xchg
push
into
mov
cmp
lods
pop
icebp
mov
shlb
addb
lock
push
incl
sbb
cmpsl
in
pop
xor
andb
adc
dec
pusha
jp
mov
fcmovnb
adc
jns
pop
adc
mov
sbb
out
adc
cmp
sti
mov
stos
insb
je
lcall
sti
sub
mov
fiadds
and
sub
lret
add
scas
mov
mov
jno
xlat
mov
loop
push
add
jnp
repz
jg
arpl
ret
sbb
add
xchg
or
sahf
fists
pop
mov
jb
popl
stos
data16
in
pop
fcomps
in
push
ficomps
das
inc
call
mov
fwait
sbb
adcl
mov
jl
mov
mov
fcmovnb
aas
mov
pop
sbb
pop
dec
cmp
xchg
jl
loope
out
lds
insb
jbe
adc
aaa
pop
imul
fs
xchg
insb
rep
fbstp
andl
push
pop
inc
cld
sub
fadds
loop
push
mov
aad
mov
cmp
sub
shrb
cmp
ljmp
popa
mov
or
daa
in
jnp
js
int
or
jecxz
cmpl
js
mov
jb
dec
xor
testb
nop
aad
call
or
and
in
nop
imulb
popa
shrb
or
int
jb
cwtl
andb
sti
xor
iret
lcall
fstpt
jp
stc
mov
scas
dec
sarl
jge
mov
and
sbb
insb
aaa
fstps
frstor
xor
addr16
adc
jle
cmp
or
push
mov
ret
push
clc
inc
push
xchg
insb
add
or
pop
jp
mov
loope
dec
call
popa
repz
lretw
xor
add
adc
icebp
ficoml
mov
sub
cmpsb
ret
mov
jmp
sbb
and
cmp
aam
mov
inc
cs
jge
inc
xchg
fldcw
pop
push
mov
sbb
movsb
mov
inc
leave
fisttps
out
dec
les
cs
out
and
pop
fsincos
arpl
out
or
mov
out
xchg
subb
cmp
sbb
decl
add
xlat
adc
mov
xchg
inc
dec
jae
inc
inc
adcl
adc
rorl
clc
sub
cmp
ja
mov
push
pop
cld
dec
pop
mov
test
pop
jl
imull
push
enter
mov
mov
sbb
jl
inc
sub
rorl
stc
cmp
add
out
aas
and
lock
lcall
jb
and
mov
jge
leave
aas
jb
jmp
mov
cwtl
sarb
jbe
adc
dec
add
mov
daa
xchg
xlat
pop
push
inc
aas
mov
sbb
xor
pop
inc
adc
lret
repnz
lahf
test
xorl
or
jge
test
sarl
lea
jbe
sub
push
push
cltd
dec
inc
lods
inc
jne
sub
cmp
fwait
jo
cmp
mov
aam
out
adc
lock
and
int
jge
out
out
adc
mov
test
jl
add
cmpsl
test
outsb
or
xchg
push
jecxz
in
xchg
inc
movsb
xor
jl
adc
xchg
pop
aas
lret
cmc
cmp
pop
sti
mov
and
xor
arpl
cmp
loopne
pop
jle
idivl
into
and
sub
pop
jecxz
outsb
test
into
repnz
repz
xor
popf
jle
bnd
fsubr
xor
out
push
sbb
int
mov
jg
dec
fistpll
popa
cmp
lret
jo
mov
ja
insl
outsb
jg
shrb
dec
mov
les
mov
xor
sub
fs
cmp
lahf
dec
adc
ss
adc
or
inc
jle
mov
pop
pop
push
xlat
jmp
xchg
popa
adcb
nop
jecxz
faddl
dec
ss
fsts
stc
pop
sub
lock
movsl
jl
lock
test
bound
in
or
mov
push
cwtl
push
or
inc
ret
sub
push
aas
jnp
gs
popa
cmpsb
jo
pop
or
loopne
cmp
ficompl
add
ret
lahf
mov
mov
jns
mov
pop
xlat
push
sarl
cmp
shrl
stos
data16
lods
inc
scas
imul
cld
in
inc
cmp
cs
into
dec
xchg
subb
xor
ds
scas
push
jge
jbe
bound
xor
icebp
cmpsl
mov
xchg
sbb
mov
icebp
xchg
gs
shl
push
mov
adc
mov
out
xor
sbb
jp
out
popf
xchg
fld1
mov
dec
and
arpl
or
mov
lret
sbb
add
int
pop
test
cltd
adc
sub
call
data16
cmp
pusha
scas
and
ljmp
stos
fidivrs
jae
push
push
das
adc
jns
fcmovnbe
in
mov
add
push
movsb
out
xor
mov
stos
clc
inc
shll
add
fmul
xchg
test
sub
mov
xor
mov
jmp
nop
nop
cmp
jmp
mov
push
inc
stc
ljmp
leave
xchg
cwtl
into
nop
dec
inc
mov
lods
pop
test
fwait
adc
mov
hlt
mov
fcomps
push
jl
jb
dec
mov
cmc
fwait
inc
adc
dec
push
mov
sbb
mov
mov
pop
ret
mov
adc
xchg
sbb
xchg
out
and
test
jp
pop
mov
jno
sti
insl
jg
push
or
jge
pop
or
dec
shlb
cmpsb
aaa
mov
mov
daa
jns
mov
dec
shlb
mov
sbb
mov
xor
adc
push
ficompl
aad
insb
loopne
cwtl
imul
adc
inc
loope
lcall
insb
jge
push
fimuls
xchg
mov
loop
bound
bound
add
jp
cmp
loope
push
stos
push
sub
cld
sub
lret
add
jnp
push
repnz
inc
pop
js
aam
sub
test
and
bound
xor
push
leave
test
es
stos
mov
pushf
sub
push
daa
mov
aam
jp
sub
loopne
je
daa
xchg
enter
loope
fldcw
mov
sbb
shrb
adc
sti
sbbb
push
out
push
push
popf
insl
and
cmc
in
cmp
push
xchg
and
pop
add
push
sbb
jbe
fwait
mov
jne
or
outsb
loopne
xor
adc
nop
adc
int
scas
or
ret
mov
mov
xor
out
dec
outsb
mov
xor
jne
fisubl
cli
shrl
jge
idivl
mov
out
mov
inc
sbb
or
pop
adc
xor
popa
jmp
adc
jmp
imul
sbb
push
sub
push
add
cmp
lahf
std
test
ss
inc
dec
fs
adc
xchg
push
mov
push
ja
js
push
pop
mov
je
jge
dec
in
dec
test
xor
inc
xchg
cwtl
ja
rorb
loope
int3
cli
in
cltd
cmp
push
shr
pop
sarl
pop
mov
cltd
rolb
jns
lea
inc
add
lods
and
jno
inc
cmpsl
fld
add
push
push
xchg
dec
icebp
lds
and
push
cmp
popa
or
std
and
lret
int
jmp
push
pushf
adc
scas
decb
loope
or
mov
fld
test
fsubrl
lahf
ret
mov
jle
dec
jl
pop
and
jae
cmpsb
jo
inc
movsl
addr16
or
icebp
cltd
dec
or
mov
adc
mov
data16
dec
bound
push
loope
sub
insb
loopw
push
cmp
cmc
and
push
pushf
xor
mov
popf
dec
lahf
xchg
int
sub
int3
xchg
fmuls
pop
adc
scas
cmp
or
js
icebp
xchg
xchg
mov
lret
sarl
repz
fimuls
pop
jmp
adc
cli
fnstcw
sbb
jbe
xchg
cld
mov
das
lahf
fs
ja
les
jnp
sub
cmp
jecxz
icebp
movsb
ja
lea
inc
inc
cld
cli
test
pop
shll
mov
pusha
xchg
fs
je
out
ja
add
dec
ficompl
repz
mov
inc
sarl
mov
fwait
mov
mov
rclb
jmp
mul
dec
rcrb
xchg
sbb
mov
push
lcall
in
push
test
clc
lea
mov
popa
mov
mov
lock
xor
mov
into
pop
int3
dec
pusha
jae
lds
mov
adc
fdivl
cmpsb
scas
sti
push
stos
add
ror
fisubl
or
lods
push
into
dec
add
and
and
mov
xor
into
je
insl
aas
xor
pop
xchg
cs
and
adc
push
mov
mov
dec
jno
cs
jb
adcl
icebp
mov
mov
outsb
mov
inc
inc
scas
mov
incb
mov
mov
jl
adc
push
lea
dec
pop
int3
mov
pop
test
int3
mov
mov
jmp
cmp
lock
js
jo
cmp
ret
dec
mov
inc
out
nop
je
in
push
push
mov
fcomi
pop
lods
lcall
push
mov
mov
shl
push
pop
iret
sbb
jl
dec
xchg
fs
pop
pop
xchg
cmp
dec
stos
xchg
adc
xor
pushl
repz
pop
push
or
insl
dec
fidivrs
xlat
lcall
mov
shlb
ret
mov
sbb
clc
jnp
outsb
add
jge
shl
dec
push
sub
and
dec
stos
xchg
cmp
lea
nop
insl
cmpsb
fdivp
in
mov
jg
int3
mov
clc
push
inc
icebp
pop
into
pop
and
inc
iret
mov
push
out
mov
test
movsl
adc
lret
fcmovb
inc
cmp
repnz
or
icebp
jecxz
sub
inc
or
inc
test
mov
cli
aaa
cmp
es
imul
xor
stc
pop
cmc
inc
adc
jg
xchg
dec
adc
pop
ja
arpl
sub
add
or
mov
lds
mov
mov
ja
and
jmp
xor
dec
and
or
fisttps
aaa
cmp
sub
out
fidivrs
cmp
add
stos
shrb
inc
and
sub
mov
icebp
inc
push
out
ss
xchg
jecxz
movl
push
dec
scas
mov
leave
jmp
outsb
mov
addr16
stos
jns
inc
iret
lret
pop
sbb
add
push
fwait
popa
enter
xchg
ret
xchg
cmp
hlt
mov
gs
dec
pop
xor
repnz
sbb
jge
xor
inc
pop
popa
pop
inc
in
add
idiv
push
mov
imul
stc
ret
jmp
stc
cmp
aad
inc
sbb
jp
mov
mov
ffree
or
outsl
cmpsb
call
idivl
imul
or
xor
sub
fwait
jge
addr16
and
cmc
pop
ret
scas
mov
jns
out
out
repnz
gs
jl
popf
jge
jmp
out
scas
ljmp
lcall
sbb
sub
dec
ljmp
stos
push
sbb
ret
pop
stos
sub
push
movl
mov
enter
adc
pushf
lds
movsl
sysenter
mov
aas
pop
pop
mov
dec
sbbb
push
ss
mov
out
andb
repnz
cltd
jecxz
in
mov
pop
subb
loop,pt
loopne
loop
jno
dec
loop
ss
mov
loope
ret
scas
mov
data16
pop
sub
sub
out
rclb
mov
add
je
fldenv
sub
mov
inc
mov
lcall
cmp
repnz
int3
cmp
mov
jg
outsb
cmp
cmp
push
sub
in
aad
sub
xchg
pop
jmp
dec
dec
adc
or
scas
xchg
xchg
les
jbe
fistps
xchg
insb
xor
sar
sti
and
mov
out
mov
fucomi
cmpsl
ja
daa
fnstsw
popf
lret
sarl
insb
sbb
movsl
or
jo
inc
imul
std
pop
xor
cmp
xor
or
enter
icebp
jae
cwtl
sar
das
cwtl
cwtl
mov
inc
icebp
inc
lds
out
in
decb
cmp
push
xchg
lret
or
cli
push
push
jne
outsb
lret
push
nop
push
dec
stos
xor
xchg
push
mov
imull
call
js
adc
in
mov
lret
ds
lods
pop
jl
test
lea
add
call
negb
inc
mov
lahf
insb
push
push
std
push
push
into
pop
mov
dec
jp
out
pop
mov
ljmp
cmpsl
out
mov
mov
inc
cmpsl
xchg
mov
test
mov
inc
insl
inc
dec
lcall
repz
rcrb
pop
push
lcall
mov
push
mov
xlat
jl
in
dec
shlb
cmp
push
inc
pop
mov
push
add
cmpl
jmp
xor
add
mov
fwait
outsl
pop
mov
inc
pop
out
pop
and
jae
sbb
sbb
fwait
stos
push
mov
pop
fimull
ret
sbb
ds
push
push
xchg
lods
mov
jnp
cmp
es
nop
mull
jmp
add
sbb
jge
int
xor
inc
in
mov
loope
arpl
mov
arpl
lods
aaa
ljmp
mov
sbb
pop
cmc
and
xor
or
fcmovbe
sbb
mov
fldt
push
in
or
dec
push
pushf
sbb
ss
push
lahf
stos
add
cmp
cmp
pop
xor
add
adc
mov
cmp
mov
mov
sbb
xchg
mov
jmp
lret
mov
push
fldcw
xor
and
inc
enter
xlat
jns
push
sub
jge
mov
pop
dec
roll
pop
dec
out
jle
sbb
mov
jge
and
push
mov
repnz
jg
add
in
inc
int
xchg
xor
pushf
inc
mov
sbb
adc
das
clc
in
or
in
add
pop
rol
adc
cmpsb
dec
push
pop
push
cli
lcall
add
out
cmpsl
adc
pop
sub
and
fucomp
int
cltd
scas
out
mov
ljmp
push
sbbb
ds
in
imull
jl
mov
sahf
inc
sbb
or
data16
call
in
int
jb
push
or
sbb
lret
lds
mov
mov
push
mov
push
inc
ss
mov
cmc
push
test
les
lret
in
cli
jge
xor
sbb
outsb
ret
push
mov
mov
rcrl
pusha
jmp
shr
dec
pop
movsb
hlt
gs
lret
loope
out
jmp
mulb
pop
cmp
adc
pop
mov
xchg
push
bound
cli
inc
ret
xchg
mov
xchg
sub
add
ret
mov
cli
mov
hlt
scas
shrb
mov
mov
lods
adc
shll
ror
mov
sub
subb
aaa
mov
jmp
in
movsb
inc
mov
test
adcb
sub
xor
mov
outsb
lods
mov
cmp
inc
xorb
cwtl
into
loopne
xlat
inc
and
test
insl
es
or
mov
movsl
in
mov
add
loop
inc
adc
gs
test
fs
push
cmp
dec
mov
sbb
adc
or
notl
shll
andl
imull
sub
pop
js
mov
ret
test
icebp
sbb
jge
pusha
mov
cmp
push
push
cmp
cmpsl
incl
mov
push
cld
or
test
enter
test
jmp
xor
pop
je
test
ljmp
pop
inc
xchg
mov
and
lods
lret
lds
xchg
adc
inc
jns
daa
and
pushf
push
clc
or
repz
jo
cmp
andb
jns
fidivl
cld
scas
adc
adc
pusha
outsb
fadds
jg
stc
fsubs
xchg
lret
xor
orl
sahf
lcall
lods
out
inc
xchg
add
lahf
icebp
sbb
sub
push
jl
and
fidivl
sub
int
lret
cs
out
cmpsl
inc
pop
aas
rcll
lahf
idivl
stos
xorb
push
scas
inc
xchg
mov
mov
push
or
sub
fwait
xchg
xchg
into
testl
cmc
insb
push
sbb
iret
inc
jno
aam
imul
lods
shll
push
clc
push
out
cmp
frstor
stc
test
fisttpl
or
dec
ljmp
or
mov
movsb
xchg
jg
imul
outsb
and
out
jecxz
add
jnp
push
pop
and
mov
adc
sub
dec
mov
jle
dec
mov
outsl
push
scas
sbb
adc
or
push
jecxz
jg
bnd
ljmp
mov
lds
xchg
sub
jbe
adc
out
shll
jp
in
mov
icebp
mov
push
dec
insl
rorb
movsb
inc
or
pop
clc
fistpll
stc
xor
cmpsl
mov
aaa
movsl
push
sbbl
sbb
xchg
sarl
into
jne
fs
or
adc
sbb
fbld
push
xor
xor
test
add
aas
cmp
push
jl
or
sbb
inc
movsb
sub
daa
movsb
dec
aam
mov
inc
stc
xor
push
cmp
jp
icebp
loop
add
fbstp
jg
out
loope
aas
sub
pop
orl
and
subl
leave
fcomps
mov
sbb
adc
push
push
jle
or
leave
rolb
js
or
and
push
call
mov
mov
fsub
adc
inc
dec
sarb
lcall
testb
lahf
lods
fstl
addr16
imul
jno
call
fistl
out
adc
rolb
xor
loope
imul
cmp
mov
enter
aam
cmp
popa
or
push
push
jecxz
cmp
xchg
jo,pn
pop
loopne
jge
aas
pop
xorl
test
and
mov
sar
cld
out
pop
hlt
rclb
je
push
cmc
enter
pop
adc
xchg
or
jp
popf
cli
sub
jmp
repnz
rorb
imul
aad
sub
add
xlat
sbbl
int
rcrb
add
add
pop
ja
scas
adc
jno
sarl
pop
fsubs
push
xor
dec
push
and
movsb
push
jmp
stos
push
cmp
scas
and
dec
sbb
cs
inc
and
outsl
pop
push
out
clc
inc
movsl
inc
mov
ret
jg
push
pushf
push
xchg
stos
in
repnz
mov
aaa
scas
mov
mov
mov
fldt
mov
lods
test
cmpsb
mov
or
inc
dec
adc
inc
scas
daa
xor
bound
push
aad
adc
cwtl
das
insl
in
jo
jns
pop
xor
add
cmpsl
jo
push
call
adc
pop
mov
jns
adc
push
mov
ret
imul
cmpsb
mov
aad
mov
lds
ljmp
jl
add
mov
test
jg
push
cmp
xor
idivb
push
and
popa
test
inc
shll
mov
sar
lcall
mov
int3
test
inc
adc
cmp
xor
sub
ljmp
flds
cmp
push
inc
and
jg
loop
adc
xor
mov
iret
sti
cmp
or
test
dec
mov
mov
sbb
dec
pop
aad
lods
mov
inc
or
dec
dec
pop
ds
pop
mov
add
loopne
mov
nop
and
movsl
cld
pushf
ds
not
pop
cmp
pop
ficoml
add
into
movsl
sbb
fldpi
add
fidivrs
inc
out
mov
lcall
mov
xchg
loop
and
cli
pop
rolb
sahf
mov
dec
jno
jns
lods
jno
rcll
mov
cs
lods
mov
movsl
mov
mov
lea
pop
or
mov
dec
dec
out
add
sub
push
ss
lock
xor
inc
xor
lret
xchg
mov
test
test
negb
mov
push
popa
mov
je
out
dec
mov
pop
xchg
in
mov
insl
das
loope
inc
xchg
gs
mov
not
outsl
in
je
adc
xor
push
insl
mov
dec
lahf
or
addr16
lock
insb
pusha
lods
ficoml
adc
jle
and
nop
les
popa
and
in
ss
sbb
repz
sarb
mov
push
push
mov
mov
push
pop
cmp
in
lcall
les
in
mov
mov
jns
es
pop
popf
dec
cs
push
sub
inc
mov
adc
sub
adc
scas
adc
inc
fistl
push
bound
inc
sub
fnsave
repnz
shrb
filds
and
dec
inc
sbb
sub
push
sub
cld
sahf
arpl
sti
repnz
clc
xchg
push
jl
call
sub
es
aas
add
mov
and
mov
aad
arpl
loop
push
pop
mov
cli
addr16
cwtl
pop
aas
aas
push
push
in
or
pop
xchg
adc
rclb
aaa
enter
cmp
test
ss
out
outsb
xchg
int
push
lcall
jmp
notb
sbb
or
mov
gs
ljmp
xchg
leave
pop
mov
jg
fsubl
daa
daa
into
outsl
mov
mov
xchg
pop
jbe
popf
xor
adc
xchg
xor
stos
xchg
dec
es
insb
mov
cltd
push
aam
adc
jno
stos
mov
push
test
mov
aaa
fsubrs
inc
into
push
jmp
pop
xchg
push
les
adc
xor
lds
int3
aad
xor
cmp
and
xlat
cltd
xchg
sbb
adc
loop
mov
cli
mov
ja
ljmp
js
mov
rclb
adc
stc
call
or
xlat
pop
aaa
fistpll
movsl
lea
int3
cmpsl
scas
sbb
jl
adc
leave
ja
pop
xchg
lock
js
ja
imul
jle
push
sahf
imull
sahf
mov
pop
cmp
mov
mov
mov
pushf
insb
lret
lcall
mov
cli
das
xor
adc
and
sub
jb
push
ljmp
xchg
push
daa
push
jae
pop
jp
cmp
cmp
adcl
push
sbb
lahf
out
pushf
xor
lret
cmp
jl
out
ret
jnp
sbb
jo
decl
cmpsl
push
dec
xlat
inc
fwait
push
xor
pop
adc
lret
iret
test
mov
cmp
add
pop
addr16
dec
lods
pop
xor
adc
cs
mov
ret
and
daa
adc
shrl
cmc
lds
pop
xchg
and
int
inc
xchg
cmp
movl
mov
cs
and
dec
xchg
repz
stos
lds
std
stc
inc
sbb
ret
pop
les
fsubrl
je
push
sbb
in
ss
or
push
push
cwtl
sub
push
sti
sbbl
sbb
or
add
hlt
mov
push
aad
call
aam
mov
sbb
fwait
stos
test
dec
in
dec
outsl
dec
or
dec
xchg
xchg
push
dec
stc
sbb
fwait
mov
sbb
xor
adc
pop
pusha
dec
push
mov
into
pushf
mov
popa
es
inc
jle
adc
and
and
and
popf
jb
sbbb
sub
mov
enter
lcall
cmpsb
jo
repnz
call
ret
xor
ds
das
lods
popa
enter
insb
dec
mov
add
in
into
negl
and
out
jae
mov
bound
pop
sub
pushf
data16
fcomip
add
mov
xor
aam
fsubs
gs
stos
lods
mov
mov
push
push
mov
push
and
mov
stc
sbb
add
cld
icebp
cltd
ja
mov
mov
mov
testb
mov
cld
inc
and
mov
sbb
lahf
mov
add
add
xchg
cld
add
cli
mov
lds
push
jnp
pop
push
negb
mov
mov
nop
fs
push
cltd
test
mul
xor
push
fwait
jle
popf
inc
lahf
dec
jp
mov
add
cmp
jecxz
cmpsb
jl
sub
xchg
fbstp
leave
lret
int3
sub
jge
int
add
cmpsl
xor
push
push
and
loope
icebp
in
jecxz
pushf
or
xchg
ljmp
pop
icebp
aas
xchg
ss
fistl
movsl
jge
sub
pop
bound
mov
cmp
outsl
aad
or
cwtl
hlt
aam
pop
xchg
mov
dec
cld
addr16
push
jl
fisubrs
scas
xor
and
pop
or
xor
mov
arpl
xor
test
mov
and
data16
scas
cmp
leave
outsb
repnz
and
xchg
push
and
push
push
cmp
inc
test
cmp
inc
lret
cmp
cmpsl
mov
and
xor
sub
xchg
mov
adc
mov
xor
cmp
xor
xchg
ja
outsl
cmp
cwtl
mov
int3
inc
int3
repz
outsb
mov
mov
sub
pop
lods
aaa
cmpsl
pop
mov
jnp
adc
push
inc
or
mulb
aas
or
mov
and
divb
push
sub
je
scas
push
fsubrl
push
out
rcrl
ret
in
ret
lock
mov
adc
sarl
shrl
insl
cmp
add
sahf
cmpsl
out
pop
push
cmpb
mov
or
pop
inc
in
dec
mov
mov
addr16
invd
pop
mov
inc
jmp
mov
in
jo
pop
jmp
push
push
imul
mov
pop
cmp
lret
pusha
fs
mov
stos
clc
sbb
cs
lock
jb
cli
inc
sbbb
test
rcrl
push
clc
mov
sarb
sub
xchg
into
fs
sub
cmp
jo
daa
pop
jnp
inc
bound
sbb
push
and
pop
xchg
jle
scas
cmp
arpl
enter
lret
into
leave
popf
mov
cmp
pop
or
lret
mov
loopne
loope
xor
inc
xchg
int3
jns
ss
dec
add
pop
add
jl
mov
popa
push
cmpsl
arpl
cmc
jo
push
or
loopne
popa
mov
sbb
dec
test
adc
push
ljmp
or
mov
es
sbb
push
lea
cmp
pop
mov
inc
loop
cld
mov
sub
inc
inc
in
xchg
inc
cmp
or
cwtl
pusha
add
mov
stc
inc
les
lret
add
mov
jmp
cli
jle
aaa
in
mov
mov
cmpsb
clc
or
and
mov
pusha
xchg
movsl
xor
aas
xchg
std
jg
clc
cmp
lods
cli
outsl
xor
sbb
cmc
jle
and
or
popf
ss
pop
push
sub
xor
out
xlat
push
daa
adcl
inc
and
cwtl
mov
adc
outsb
gs
rcl
icebp
sbb
ret
lds
push
dec
cmp
jbe
cwtl
xchg
loop
data16
dec
adc
jae
mov
lods
adc
mov
jnp
lds
add
ret
es
std
movsb
ret
loope
dec
mov
mov
mov
mov
sub
fs
jg
push
jo
dec
mov
sbb
mov
or
daa
leave
add
cltd
pop
push
movups
stos
push
or
addb
scas
scas
shll
es
arpl
mov
pop
std
lret
mov
ljmp
jmp
jle
iret
es
mov
mov
aad
mov
notl
in
cmp
push
nop
scas
sahf
xchg
push
push
test
loope
mov
cmp
lcall
and
dec
pop
jbe
mov
movsb
add
and
addr16
dec
xchg
adc
push
dec
xchg
lods
pop
xor
imull
adc
shl
xchg
les
and
or
bound
add
xor
lds
jge
adcb
gs
adcb
add
mov
cmp
pop
jns
jg
out
ja
xor
pushf
scas
loopne
cmp
iret
mov
cmpb
mov
push
lods
xchg
rcrb
lea
out
movsl
loopne
daa
in
movl
and
adc
xor
ret
in
js
scas
aas
xchg
or
movsl
idivl
out
mov
cmpsb
sti
xor
scas
insb
cmp
aas
adc
jne
xor
xor
xor
std
testb
inc
shl
or
arpl
mov
dec
sub
push
xlat
jp
mov
mov
mov
fidivl
adc
sbb
daa
fisubrs
loope
negl
sub
or
jge
xchg
push
push
cmpsb
fsubrs
push
fwait
sbb
lret
push
clc
or
mov
or
adc
pop
mov
dec
mov
add
inc
cltd
jecxz
daa
les
push
sbb
in
sbb
add
into
sub
decl
xchg
sub
pop
adc
test
push
fabs
loope
push
jno
jo
mov
rcrl
lds
cmpsl
mov
and
xor
xchg
jle
push
mov
gs
dec
pop
xchg
inc
xchg
les
inc
jo
adc
pop
jmp
lret
icebp
xor
pop
mov
mov
mov
rorb
das
dec
mov
add
icebp
mov
cmp
and
mov
xchg
insl
repz
pop
ljmp
in
sub
jns,pn
push
xchg
icebp
push
push
jo
cmp
and
or
sub
scas
inc
movsb
pop
xchg
xchg
jo
xor
cli
lods
mov
pop
enter
jge
pop
push
cmc
movsb
and
inc
sbb
add
loop
aam
mov
pop
xor
pop
add
les
and
fwait
push
push
mov
insb
ljmp
cs
movsl
dec
pop
rclb
push
stos
les
stos
js
arpl
ljmp
push
ljmp
lods
jmp
fists
sti
frstor
outsb
pop
jno
je
dec
mov
rorl
jbe
es
dec
dec
out
fdivl
aam
loope
mov
lcall
fmul
jmp
dec
insb
jnp
jecxz
push
enter
jnp
jmp
lock
mov
fidivrl
xchg
insb
scas
cmp
add
jnp
jg
getsec
or
mov
ljmp
add
decb
aam
fcomps
div
adc
sbb
addr16
push
or
insl
arpl
sbb
fsubl
cmpb
out
mov
inc
out
pop
push
fs
scas
adc
mov
xor
mov
stos
cmp
int3
push
mov
ds
jo
pop
add
cmp
fwait
fs
pushf
scas
iret
in
sub
lds
adc
jge
push
cmp
xlat
sbbb
lock
test
pop
lcall
push
ret
xchg
or
and
es
jae
mov
cwtl
xchg
cmc
mov
mov
psubw
adc
jbe
dec
pop
inc
adcb
xchg
mov
popa
lods
add
sbb
sbb
ds
sub
adc
popf
adc
in
sub
test
cs
jp
js
push
fildll
dec
mov
sbb
jno
pop
cmpsl
pop
push
mov
test
rorl
fidivl
insb
imul
rol
into
gs
orl
out
pusha
rcrl
or
xchg
xchg
jp
xchg
mov
and
aam
pop
jb
ja
adc
and
pop
mov
jo
jecxz
sub
mov
call
cmovne
push
es
jg
pop
or
icebp
jne
ja
xor
mov
xor
add
xor
mov
pushf
stc
in
xchg
pop
push
outsb
cs
adc
rclb
add
enter
gs
or
cmp
xor
rorb
imul
imul
sub
jle
lock
pop
outsl
aaa
jmp
pop
xchg
lock
inc
out
aad
es
and
iret
mov
cmp
push
sbb
lcall
and
jge
inc
or
or
push
icebp
jle
clc
sub
inc
or
ss
push
dec
lcall
ds
xchg
fcoml
push
call
insl
pushf
mov
inc
rcll
fistl
pop
cli
int3
mov
test
dec
jg
int3
aam
pusha
xlat
cli
mov
mov
popa
adc
mov
nop
out
mov
repz
in
mov
fmul
xchg
orl
inc
and
mov
pop
cld
and
test
push
pop
rcrl
cmpsl
jns
ret
xchg
sbb
mov
or
cmp
jno
jne
sahf
push
bound
jnp
data16
ja
xor
pop
test
cmpsb
loop
stos
mull
std
xor
ja
cmp
adc
enter
inc
pop
out
push
lods
data16
inc
fsubrl
lahf
adc
or
sub
inc
pop
inc
add
insl
in
xor
jb
add
jg
xchg
or
inc
into
fldl
inc
inc
ds
fcmovnb
mov
mov
out
mov
fbld
xchg
daa
data16
cmp
jbe
daa
les
xor
dec
outsb
pop
sahf
test
xchg
lcall
mov
mov
daa
out
adc
add
js
inc
mov
insl
lock
frstor
push
xchg
and
inc
jne
lods
dec
pop
add
lock
orl
movsl
jae
pushf
fisttpll
or
js
les
fmulp
cltd
xor
fcomp
pop
pop
stos
push
clc
pop
or
xchg
scas
pop
inc
int3
mov
dec
sub
jne
mov
pop
enter
minps
ljmp
jnp
pop
std
popa
stos
outsb
jb
cli
jne
loopne
adc
fldt
or
xchg
cmp
int3
fwait
mov
lcall
loop
mov
inc
jl
testl
int
les
aad
push
bound
inc
stc
fisubl
inc
imul
aam
lcall
test
out
in
push
lods
in
mov
lock
popa
pop
ss
add
ljmp
add
addr16
lcall
push
push
inc
pop
mov
jp
pusha
jae
mov
push
sbb
jns
pusha
lods
mov
jnp
push
push
inc
das
ret
mov
shrb
ljmp
push
xchg
out
mov
clc
dec
stos
mov
lods
ds
lret
xor
mull
pop
sahf
push
je
cltd
mov
or
sbb
jb
push
cmpsb
add
nop
jo
lea
mov
lods
das
bound
jmp
roll
imul
mov
jmp
popl
and
stos
subb
rcrl
mov
test
dec
in
test
lds
jmp
arpl
jle
jns
xlat
test
fildl
mov
mov
cmp
sub
outsb
dec
or
inc
dec
xchg
test
iret
jbe
mov
xlat
lahf
cmp
sbb
lret
mov
data16
or
xchg
sub
out
lock
sbb
cwtl
rolb
enter
mov
scas
adcl
enter
add
pop
das
adc
ljmp
mov
xor
stc
mov
dec
mov
push
mov
pushf
xchg
cmp
out
cvtps2pi
and
jbe
dec
es
addr16
jg
add
ljmp
pop
arpl
sti
test
ljmp
lahf
sub
sbb
pop
xor
rcl
sahf
loop
jb
cltd
jmp
and
and
push
popf
aas
xlat
outsb
pop
or
xor
xchg
sub
outsb
jno
cmp
xor
scas
loopne
sbb
sub
je
test
les
lods
clc
mov
flds
cmp
lahf
fistpl
cmp
rolb
xchg
dec
jmp
sub
push
aad
jne
or
popf
add
movsl
jae
data16
inc
fmull
imul
pushf
popf
mov
push
jl
cwtl
movsb
fsubrl
loopne
dec
add
add
aam
je
test
sub
in
jecxz
inc
push
push
mov
idivb
rcll
pop
outsl
nop
xchg
pop
int
pop
pusha
idivl
cmp
std
mov
or
pop
lahf
test
inc
add
or
jo
dec
inc
scas
dec
push
inc
pop
rcrl
jo
and
pop
jl
leave
out
das
sbb
jg
xor
xchg
pop
cli
lods
cltd
add
and
cmp
aas
jns
das
loopne
fists
std
in
inc
add
jmp
pusha
inc
movsb
insl
lds
cwtl
in
pop
push
or
and
jne
sbb
add
aad
mov
sbb
push
test
jg
insb
inc
add
sbb
in
lcall
daa
adc
sub
mov
jmp
das
rcrl
jp
mov
sbb
dec
inc
fs
popf
add
repnz
test
xlat
pop
fstpt
or
push
xlat
out
loop
push
and
outsb
and
fs
pop
rorb
xchg
sub
jbe
inc
pusha
mov
dec
cmp
sti
leave
add
push
stc
mov
rcll
aaa
clc
ret
pop
push
mov
test
sbb
and
aam
testb
mov
adc
push
shlb
jl
iret
xorb
inc
lea
inc
cmp
mov
cmpsl
pushf
mov
das
ss
divl
arpl
int
outsl
xchg
jne
icebp
or
shll
xlat
adc
aaa
lret
pop
mov
loope
insl
fdivr
std
jnp
gs
mov
push
int
mov
pop
daa
sub
ja
cmp
xor
inc
mov
adc
pop
and
mov
jo
inc
pusha
and
das
jbe
les
jbe
scas
mov
lahf
dec
sub
popa
out
popa
xor
mov
stos
dec
xchg
pushf
mov
repnz
sahf
xor
lret
imul
fucom
pop
pop
insl
in
push
cwtl
and
or
int3
mov
mov
push
and
nop
xorb
or
mov
inc
sbb
jo
dec
jae
add
xchg
ja
inc
sub
jmp
or
xchg
jge
rclb
mov
sub
loope
dec
ret
repnz
popa
insw
ja
add
push
xor
das
mov
sbbb
inc
lret
std
movsb
and
sbb
cwtl
aaa
fwait
mov
gs
jns
pop
ljmp
arpl
cmpsl
adc
xchg
hlt
jb
dec
mov
ja
sub
push
xor
push
movsl
xor
call
push
mov
dec
loop
cltd
pop
ss
lods
and
jo
push
push
and
bound
jns
mov
cld
frstor
test
jp
add
addr16
xchg
shlb
testl
and
and
pusha
push
xor
dec
adc
pop
xchg
loopew
dec
aaa
sarl
in
enter
test
ljmp
imul
xchg
inc
lahf
sub
fmull
adc
mov
inc
pop
inc
dec
enter
loopne
sub
mov
jmp
adc
out
mov
inc
sbb
lock
jle
sub
lods
ret
inc
xor
cld
inc
aad
cltd
bnd
xchg
push
jge
xchg
roll
add
push
jb
push
push
les
outsl
jns
call
jle
cmp
vpshld
fiadds
ret
xor
mov
xchg
dec
mov
movsb
and
xor
mov
out
jb
mov
push
xor
pop
dec
lods
out
or
bound
loopne
subl
mov
or
push
mov
jge
in
xchg
mov
imul
test
testb
rcl
into
sti
cmp
dec
mov
mov
mov
call
pop
dec
jns
shrb
and
int
mov
addr16
fnstcw
fldenv
test
pop
test
sub
push
adc
lds
xor
fists
aam
adc
pop
and
insl
popf
orb
std
jge
cmp
push
sbb
je
stos
imul
sbb
and
ljmp
push
adcb
inc
sub
xor
lods
das
jnp
mov
cld
sahf
outsb
pop
gs
mov
dec
bound
lret
cmpsb
xchg
cmp
push
stc
sub
cld
add
or
enter
adc
or
sub
in
mov
lcall
test
jle
adcl
pop
dec
or
arpl
nop
xor
or
mov
iret
mov
lock
cmp
cmpsb
or
cmp
push
jmp
testb
mov
iret
jb
mov
push
xchg
aad
mov
xchg
inc
and
cs
arpl
push
insl
xorb
and
movsb
shr
pop
dec
fisubs
jbe
outsl
xchg
pop
lods
mov
mov
test
xor
lret
stos
bound
fadds
loop
xor
popa
sub
pop
cli
dec
and
push
jl
fucomip
imul
lcall
mov
sub
xor
jmp
loope
outsb
mov
cmpsl
mov
sbbl
or
dec
mov
adc
sub
pushf
cwtl
jo
mov
xor
jo
cmp
and
or
clc
or
insl
repnz
std
mov
cmc
stos
push
inc
xchg
call
xchg
mov
mov
pop
outsb
pushl
xor
in
jno
std
and
jp
jo
and
in
cmp
test
or
push
cli
shll
in
shlb
sahf
xchg
jnp
daa
add
add
orb
orb
addr16
adc
insb
sar
or
orl
push
pushf
sbb
mov
push
cmc
mov
mov
cmp
xor
and
movsl
ret
adc
xlat
addb
inc
dec
inc
test
cs
xchg
nop
mov
aad
in
add
cltd
mov
mov
xlat
xchg
sub
cmp
inc
inc
sbbl
mov
or
loope
push
clc
inc
dec
sbb
frstor
push
ret
adc
mov
xchg
xor
jmp
les
mov
aaa
push
sub
ficompl
sub
in
or
ret
dec
stos
push
rcl
jmp
sub
test
xchg
ljmp
pop
fisttpl
mov
or
xchg
xor
sbb
inc
hlt
enter
jg
cltd
clc
movsl
je
inc
mov
mov
xchg
mov
orb
push
mov
mov
mov
insl
jmp
imul
add
dec
mov
mov
outsl
ds
sbb
insb
mov
shr
and
push
add
ja
cmp
movhps
lahf
sub
das
pop
mov
lds
adc
fsubr
aam
xlat
fsts
aas
xchg
xchg
xor
push
aam
or
xchg
std
add
and
cmpsl
stos
inc
fs
xchg
mov
cmpsb
imul
and
pushf
ljmp
and
rcrl
mov
jnp
jns
aam
fidivs
pop
jp
rol
hlt
and
mov
les
pop
orb
xor
psubb
and
ret
lret
stos
jbe
xchg
sti
aad
into
stos
insb
cmp
sbb
aas
pop
test
pushl
lock
jo
stc
lock
xchg
jne
cld
push
push
inc
sub
fwait
cmpsl
mov
fnstenv
adc
mov
ljmp
dec
addr16
xor
mov
inc
test
dec
adcb
lods
je
popf
jecxz
adc
jecxz
in
inc
arpl
add
test
mov
enter
enter
popa
cli
adc
mov
add
enter
shlb
rolb
mov
or
nop
cltd
lret
mov
add
or
lods
out
inc
sarb
jo
mov
fwait
adc
scas
and
mov
pushf
mov
fdivl
xchg
insl
mov
add
sbb
popa
insl
mov
jae
fiaddl
cmp
sub
xchg
push
iret
movsl
cltd
je
fbstp
jo
loop
mov
scas
fwait
xchg
call
cltd
xor
push
or
data16
sbb
out
pushfw
jns
xorb
gs
ret
std
sub
cmp
insl
pop
fldl
call
cld
pop
sbb
adc
and
or
std
adc
push
test
or
push
inc
cli
add
stos
out
mov
insl
test
outsb
xor
xor
in
xchg
pop
push
inc
xchg
lods
xor
inc
sbb
xchg
push
add
mov
jne
jo
es
inc
scas
pop
addl
bound
loope
mov
test
add
xor
push
or
push
popa
hlt
nop
jge
es
lds
mov
jns
ss
jae
das
inc
cwtl
int
cmpsb
pop
dec
lcall
shrb
push
int3
push
fstl
adc
cmpsl
mov
outsl
data16
fs
ret
ljmp
popf
mov
stos
mov
insl
and
movsb
mov
jne
sbb
push
pop
ds
sub
push
ret
xchg
mov
std
leave
les
push
aas
push
adc
cs
fsubrp
mov
shlb
in
jb
sti
test
mov
in
and
pop
and
mov
add
lret
dec
loopne
push
jno
imul
stos
movsb
mov
xor
jbe
xor
rcr
pop
or
shl
test
js
sub
add
lock
bound
sbb
push
dec
inc
dec
xchg
call
or
pop
add
xor
aam
cli
xor
and
and
outsb
xchg
sbb
jne
push
jb
jge
mov
dec
pop
inc
loop
jno
mov
nop
lcall
and
sub
leave
dec
addb
jbe
mov
cmp
xor
lret
sbb
bound
enter
xchg
orb
add
and
mov
jbe
sub
fidivrs
dec
popf
inc
and
push
or
mov
xor
mov
mov
cmpsb
dec
je
cmpsl
pop
pop
pop
cmpsb
rorl
shll
lods
mov
js
jbe
in
sahf
sahf
add
or
in
jno
jns
add
jno
inc
loopne
test
adc
mov
xor
sbb
jp
lods
cs
dec
fadd
nop
andl
xchg
fisubs
mov
xchg
insl
mov
mov
xchg
add
enter
fwait
in
sbb
insl
jne
and
jbe
in
mov
sar
mov
cmp
mov
pop
scas
and
mov
popa
pop
mov
jg
rclb
outsb
xor
cmp
test
jl
es
mov
out
mov
push
clc
fiaddl
mov
inc
fs
lods
mov
ss
stc
addr16
cld
rcrl
xlat
popa
or
sbb
push
lock
mov
dec
push
push
push
and
aam
iret
sarb
sub
addl
xor
dec
ds
test
movsl
daa
adc
and
das
push
mov
add
data16
inc
push
outsl
shrl
in
movsl
stos
pop
cmp
out
fucomp
das
mov
or
lea
and
test
ficomps
xor
arpl
xor
mov
rcrb
pop
jmp
clts
mov
je
clc
sub
not
lds
and
ja
pop
mov
adc
jb
shlb
adc
iret
cltd
and
lcall
pop
leave
loope
sbb
aaa
loope
push
insb
mov
mov
adc
test
out
test
jnp
pushf
dec
sub
jno
push
inc
addb
lahf
popf
push
lret
scas
and
pushf
inc
sti
adc
test
mov
pop
lahf
test
sub
and
xchg
mov
mov
scas
jbe
fisttpll
lret
repz
mov
test
mov
jmp
pushf
and
mov
loopne
sbb
aas
cmp
or
lds
mov
inc
or
jbe
sbb
dec
jmp
lods
push
rcrl
inc
js
scas
mov
and
test
add
add
inc
jle
dec
cld
xor
sbb
pop
cli
xlat
mov
push
inc
pop
cmp
out
movsb
jae
mov
jecxz
insl
mov
pop
mov
stos
cs
aaa
iret
cs
stos
das
dec
cltd
ss
mov
or
cmpsl
inc
xor
inc
xor
pop
xchg
mov
jbe
and
push
adc
mov
pop
out
add
shl
jns
inc
jno
pop
sbb
negl
sub
fstp
pavgb
pop
inc
mov
pop
cltd
cmp
inc
jne
jge
xchg
sub
inc
sbb
sbb
jg
bound
push
dec
int
sti
pop
cmp
rorl
and
aas
dec
aad
jno
adc
fists
cmpb
fidivl
cmp
vmwrite
fcomps
xchg
xchg
fisubs
aas
sub
in
xchg
ret
push
dec
mov
mov
mov
inc
and
inc
inc
jl
sbb
mov
fst
and
sub
int3
fld
aam
sub
int3
add
dec
xchg
push
sahf
lea
adc
mov
xchg
loopne
dec
jnp
xlat
sbb
mov
inc
ds
cmp
cltd
mov
jnp
fisubrl
jge
aam
ret
cs
dec
jmp
sub
mov
jecxz
arpl
inc
enter
add
pop
gs
lret
inc
and
sub
sub
iret
stos
dec
mov
in
push
clc
mov
mov
mov
or
ret
es
sbb
test
jnp
cmc
int3
xchg
int
pop
pop
movsb
pop
lea
lahf
out
xlat
sbb
clc
pop
jne
pop
pop
inc
add
mov
push
pop
mov
gs
test
xor
inc
cltd
mov
sarl
addr16
mov
pop
pop
jne
cmp
pop
in
xlat
mov
cmp
aas
adc
mov
mov
int
mov
jg
jp
pushf
cmpsb
add
inc
or
sti
mov
ret
inc
add
jo
mov
and
popa
rorb
test
stos
pop
mov
pop
add
or
dec
fsubrl
out
inc
aaa
mov
jecxz
jle
pop
sub
loop
xchg
sbb
loop
subl
jne
cmp
not
outsb
mov
ret
std
ljmp
popf
mov
xchg
push
dec
xchg
mov
cld
cmp
jns
pop
xor
mov
stos
mov
push
movsl
push
mov
call
inc
cmpsb
std
repz
cli
fdiv
jo
cmp
cld
lods
jg
into
sbb
mov
ja
or
sbb
mov
les
xchg
rol
ljmp
pop
aad
ret
push
stos
fadds
cmp
dec
scas
jge
push
decl
pop
mov
sub
hlt
cli
ds
in
outsl
mov
mov
outsb
add
lahf
or
dec
sbb
cld
repnz
cmc
ja
mov
mov
mov
jo
movsb
mul
pop
subl
lret
lds
bnd
mov
xchg
mov
andl
pop
js
jns
dec
jmp
jmp
mov
enter
sbb
mov
in
out
dec
xlat
cmp
xlat
xchg
adc
out
or
rcl
push
aaa
es
pop
js
lret
es
jl
xchg
les
insl
and
call
mov
ficomps
jbe
ret
pushf
sub
adc
ret
pop
mov
sahf
jns
lea
adc
pop
inc
mov
shlb
push
cmp
je
mov
dec
sub
movsl
mov
subb
fisubrs
dec
and
push
push
repz
jno
ss
add
lock
dec
fsts
in
xchg
push
movsb
imul
xchg
cli
bound
inc
adc
shlb
cld
je
fucomip
clc
jg
psubusw
lods
jp
mov
pushf
out
mov
inc
dec
pop
mov
jp
xlat
cmpsl
lahf
jno
cmp
inc
stos
andl
xor
out
clc
cmp
jmp
mov
and
push
and
xchg
jno
fisubrs
mov
fwait
or
mov
rolb
movsl
jmp
iret
or
pop
ficoms
sub
mov
adcb
in
subb
push
mov
mov
imul
push
nop
inc
mov
push
aas
call
leave
and
mul
xchg
adc
push
and
out
into
inc
add
cld
mov
stos
mov
inc
aad
add
pop
inc
add
adc
mov
mov
inc
mov
lods
bound
xor
xlat
shlb
mov
decb
sbb
test
add
dec
cld
outsl
xor
out
rcrb
popa
ljmp
jnp
mov
jns
fnstsw
mov
push
or
mov
enter
das
mov
in
adc
sbb
inc
sbb
sub
aaa
popa
mov
xchg
std
jge
das
popa
jle
sbb
iret
add
xor
push
jns
in
xor
das
bnd
pop
mov
lock
aaa
shlb
sti
xchg
fwait
sub
adc
in
aaa
inc
jns
cld
stos
dec
ret
push
add
xchg
icebp
adc
sub
pop
subl
push
xchg
xlat
mov
int
inc
push
aaa
push
sub
rcl
notl
jl
loop
sub
sbb
push
ficompl
jmp
insl
iret
push
inc
sub
mov
pop
dec
or
mov
aad
pop
jecxz
sub
fsubrl
cmp
add
xchg
mov
jno
xor
mov
lods
mov
push
ret
sub
mov
jge
cld
in
arpl
or
sti
fwait
sbb
scas
add
cli
mov
test
xchg
mov
cli
dec
outsl
mov
push
cmp
cmp
mov
sbb
in
mov
mov
hlt
pop
or
cltd
mov
stos
incb
in
fistpl
xchg
test
test
add
lea
lods
repz
ret
lret
push
jle
das
and
pop
dec
mov
jo
outsb
push
and
push
out
sarb
int3
nop
pop
add
jae
daa
outsb
lcall
push
mov
movsl
fstpl
mov
fbstp
pusha
mov
cmc
and
inc
mov
mov
push
frstor
iret
ljmp
and
mov
add
in
lcall
push
fs
aad
fimull
sahf
or
jae
fistpl
aad
testb
cmpsl
mov
xor
test
jne
mov
xchg
jbe
lcall
inc
js
jne
dec
addr16
out
jg
fwait
mov
loop
cwtl
bound
scas
fwait
scas
xchg
icebp
xor
sbb
lcall
push
or
aad
jl
test
or
mov
ss
mov
insb
add
out
into
and
les
insl
pusha
leave
mov
gs
mov
cmp
xchg
mov
mov
mov
mov
sbb
push
add
mov
jb
or
cmpsl
pop
xor
loope
inc
ljmp
lds
jp
insl
rcr
jmp
dec
mov
test
daa
imul
es
inc
mov
mov
ficoms
sub
sub
cwtl
scas
loop
leave
stos
stc
lods
aaa
pop
repz
fldenv
jno
add
insb
xchg
arpl
jge
cmp
cmp
or
inc
fnstsw
adc
je
or
rorb
add
cmpsb
int3
rep
dec
adc
mov
arpl
inc
fisttps
add
jg
movsb
sahf
jb
sbb
mov
mov
aas
mov
push
fstpt
jae
jne
std
dec
mov
mov
push
loope
test
fistps
loope
das
push
sbb
movsb
inc
sbb
cmp
lahf
fnstsw
stos
push
jle
cmpsl
mov
mov
cmpsl
inc
pop
mov
inc
repnz
ret
pop
jge
push
sub
pushf
popa
scas
sbb
lahf
mov
xchg
xor
lcall
inc
daa
jns
sub
mov
loop
xchg
sbb
subl
and
cmp
push
inc
push
int
js
ret
mov
mov
hlt
fld
adc
daa
repz
lcall
inc
call
pop
lcall
ja
and
cmc
or
iret
jmp
lahf
pop
incb
push
lds
inc
lock
pop
and
add
cmc
mov
xor
ljmp
adc
pop
xchg
sar
cmp
adc
jnp
jecxz
imul
sub
pop
ret
push
lods
lods
loop
add
sarb
jp
xor
mov
into
imul
pop
xchg
sub
pop
fstpl
and
ljmp
dec
add
cmp
ret
push
mov
nop
push
fiaddl
js
into
xor
int
imul
mov
fstpl
scas
jo
xchg
lret
pop
cmp
push
insl
adc
test
mov
mov
add
mov
ljmp
add
xor
mov
mov
leave
insb
imul
imul
lods
pop
aaa
fisttpl
jb
push
stos
daa
mov
lahf
ds
adc
test
cmp
mov
int
fs
dec
in
add
sub
xchg
or
testb
jns
into
pop
jo
mov
sub
jo
dec
sarb
cwtl
or
imul
sbb
mov
iret
ret
push
dec
test
adc
testb
adc
out
sbb
push
inc
push
pop
mov
or
imul
jnp
mov
mov
shrl
dec
xchg
aam
mov
xchg
pushf
mov
dec
repnz
sti
mov
xchg
hlt
leave
mov
loopne
ss
filds
scas
andb
sbb
shll
insb
and
and
xchg
pop
dec
inc
call
dec
daa
out
inc
dec
outsb
daa
sub
add
lret
or
pushf
jo
xor
mov
xor
inc
in
fiaddl
jle
sti
jae
aaa
sbb
inc
in
stos
std
adc
cmp
stos
inc
and
shr
mov
lods
xor
xchg
dec
icebp
and
insl
pop
fadd
movl
lret
jecxz
dec
push
dec
pop
repz
ds
jmp
leave
ja
mov
sub
jle
int3
mov
dec
pop
div
repz
jo
cli
xchg
sar
dec
inc
xchg
adc
je
scas
repz
cmp
or
test
inc
rorb
in
xor
stos
dec
inc
xchg
xor
push
aad
test
jp
fdivl
outsb
cmp
data16
xor
loop
add
pop
sbb
sub
out
cltd
fidivs
mov
jmp
push
lods
cwtl
cmp
jno
jae
into
mov
fdivl
insl
lcall
mov
mov
xlat
das
test
sar
popa
add
jnp
cmp
cmp
mov
out
outsl
gs
sub
dec
push
lahf
cmpsl
push
cmp
repnz
adc
mov
add
mov
in
xlat
hlt
loope
mov
push
shr
push
sbb
push
jmp
mov
sub
fdivl
pop
and
ja
inc
adc
sub
xchg
or
xor
lock
test
mov
test
mov
or
sarb
jg
jns
fdivl
push
mov
add
xchg
jo
cld
pop
notb
fiadds
cmpsl
pop
or
jns
lds
push
loope
les
rolb
pop
repz
pop
pop
stos
jl
jo
mov
adc
push
dec
mov
and
push
test
mov
int
pop
or
inc
mov
ja
ret
movsl
inc
jo
clc
adc
mov
ds
orb
xchg
imull
shll
cli
mov
cmpl
das
adc
sbb
cli
cmp
mov
add
mov
mov
shrl
xorl
xchg
push
outsl
iret
jmp
xchg
sbbl
imul
out
rcl
inc
mov
cmpb
les
cltd
fcoms
stos
mov
lds
ljmp
mov
or
or
or
and
arpl
fisubl
dec
mov
jae
jo
push
in
sub
jae
cmp
dec
jnp
aas
sub
mov
push
jg
sub
pop
sti
loope
outsl
in
mov
je
divl
mov
adc
cmp
mov
dec
jmp
jp
pop
jne
cs
dec
es
repnz
lds
in
cld
ret
rcrb
sbb
xchg
or
push
mov
cmc
cwtl
or
ja
fs
xchg
sbb
lods
push
cmpsb
sbb
or
add
shlb
add
fidivs
jmp
jle
pop
clc
fnstcw
pop
lcall
ret
outsb
stos
mov
repnz
mov
mov
loopne
mov
popf
es
mov
xor
lock
loop
call
lods
std
mov
mov
gs
in
xor
xchg
jmp
xor
xchg
scas
outsb
push
pop
aad
pushf
jg
sub
sub
cli
imul
mov
push
pop
stos
adc
dec
push
sbb
cltd
in
stc
js
mov
xor
mov
and
dec
loope
xchg
and
test
adc
adc
xor
push
addr16
cwtl
aaa
sbb
dec
shrl
dec
ja
sub
pushf
mov
mov
push
lret
pop
inc
orb
hlt
dec
outsb
sti
jb
jae
jle
cmpsl
adc
ljmp
xor
pop
test
xchg
sbb
sarb
jae
adc
sub
addr16
outsb
js
mov
jg
out
xlat
add
inc
mov
sbb
pop
or
lods
flds
cmp
xchg
sbb
lahf
mov
push
mov
je
push
dec
adc
out
push
pop
or
or
dec
sbb
mov
mov
repnz
fs
inc
pop
nop
mov
push
lahf
and
xchg
mov
pushf
dec
mov
inc
out
lods
rcrb
cmp
fwait
adc
pop
lock
inc
pop
shll
cltd
push
repz
sub
int
push
mov
push
jo
aam
push
ds
in
and
xchg
mov
jno
lahf
mov
and
inc
mov
pop
and
fadds
jns
lcall
aam
push
inc
int
imul
sub
push
cmp
andl
xchg
gs
adc
mov
stos
adc
js
add
gs
mov
mov
inc
int3
out
mov
cmp
inc
xor
psubb
xor
push
cmp
sbb
pop
dec
mov
dec
mov
mov
jmp
add
aad
ljmp
jp
pusha
pop
pushf
mov
jae
sbb
bsr
lret
lcall
popf
cmp
mov
adc
sarl
popl
xchg
xchg
sbbb
sub
nop
dec
adc
xchg
mov
pop
and
cmp
lds
xchg
gs
xor
sbb
add
rol
push
rcll
dec
fwait
dec
cltd
mov
hlt
test
pop
shrb
mov
cmpsl
mov
mov
or
xor
push
mov
adc
adc
dec
xor
jmp
ja
jg
jp
enter
faddl
aaa
push
shr
pusha
push
mov
fwait
test
mov
mov
mov
stc
add
icebp
pop
push
call
nop
pop
addr16
xchg
pop
es
movsb
xor
or
cli
enter
mov
push
sbb
stos
push
xchg
mov
lret
das
pushf
jb
ja
sar
xchg
ret
rcrl
ret
or
xlat
cmp
ja
cmc
push
pop
arpl
pop
adc
je
std
add
lret
cld
loop
lds
jne
ss
fistpll
mov
pslld
lahf
mov
adc
or
loopne
lahf
jno
or
data16
dec
mulb
jne
inc
mulb
lcall
ficoms
je
out
je
xchg
pop
outsl
adc
stc
icebp
mov
out
sahf
xor
mov
adc
pop
pop
lds
sbb
fiadds
jb
stc
sbb
jmp
or
dec
xorb
lods
adc
sbb
es
push
rcr
jmp
sub
les
ja
mov
sbb
pushf
aas
pop
add
mov
lret
popa
jne
adc
fucom
fcomip
daa
pop
jmp
daa
xchg
xchg
add
xchg
and
pop
push
mov
sbb
and
adc
jno
sbb
push
mov
dec
cli
pop
add
ljmp
jecxz
dec
pop
and
inc
or
push
pop
xor
inc
push
in
mov
icebp
jge
in
mov
test
cmp
mov
out
rclb
ja
mov
repnz
clc
das
nop
cmpsb
aaa
icebp
push
stc
xchg
or
ja
fdivr
cmp
add
popa
arpl
jne
mov
mov
xor
jmp
mov
or
dec
sbb
inc
scas
xor
clc
fstps
bound
and
call
adc
mov
std
sti
lcall
pop
push
mov
jns
dec
or
repz
sub
sub
sub
or
mov
insb
test
mov
icebp
inc
repz
inc
sbb
call
roll
sbb
outsb
and
mov
mov
xchg
push
scas
fimull
and
lods
inc
mov
xor
call
bound
push
push
pushf
shll
ss
xor
test
lock
adc
divl
iret
dec
pusha
jno
loope
xor
inc
lcall
bound
rcr
pusha
adc
roll
in
in
cmp
les
lcall
leave
jp
mov
aad
out
cmpsb
xchg
in
dec
push
cmp
mov
xchg
in
call
aad
dec
push
pop
loopne
xor
cli
out
sbb
add
test
mov
les
mov
adc
adc
decb
test
rorb
pop
pop
mov
sub
loopne
jg
sbb
add
inc
aas
js
jg
sbb
and
sbb
lret
xchg
ja
adcb
imul
repz
stos
xor
rolb
pusha
jle
jno
or
or
jo
xchg
gs
cli
mov
nop
insb
xor
rorl
lret
mov
cld
mov
mov
lcall
pop
pushf
jb
dec
or
mov
fstl
push
fwait
push
xchg
test
jno
nop
outsl
pop
shrl
xchg
aam
xor
iret
dec
shl
fistps
test
sbb
or
pop
dec
and
push
dec
mov
inc
push
add
mov
pop
cmpsb
dec
paddb
cs
mov
mov
xlat
mov
push
push
sub
or
add
adcl
adc
dec
push
lock
pop
aaa
dec
sub
or
dec
cmc
push
xor
mov
mov
sbb
xchg
scas
xchg
fucomp
pop
movsl
jl
push
mov
negb
mov
ds
add
add
or
leave
icebp
mov
test
xor
push
subb
sarb
mov
clc
popa
lods
out
insb
jns
inc
push
xor
call
pop
xchg
sub
cwtl
jmp
pop
pusha
pop
lods
fmulp
shll
pop
stc
add
mov
push
mov
mov
and
arpl
sbb
std
dec
mov
test
sbb
inc
push
or
js
sbb
mov
fs
data16
add
out
lcall
xchg
ds
fs
out
fcomps
movsl
xchg
sub
xchg
jae
inc
mov
sub
addr16
in
cmp
enter
ret
push
rorb
adc
test
mov
int3
push
fs
jne
push
push
xor
or
ret
pop
cltd
jmp
in
shll
sub
and
not
and
ror
add
ss
cli
pop
sbb
leave
lds
lea
mov
roll
hlt
imul
rcrl
dec
push
je
mov
out
push
lods
mov
mov
mov
mov
in
sub
aad
gs
push
mov
mov
test
or
adc
sub
sbb
push
add
ds
lock
fistpl
scas
inc
arpl
adc
pushf
inc
aad
mov
add
xor
data16
incl
sbb
or
arpl
push
out
cmp
mov
lock
sarb
fs
and
push
aad
jge
xlat
push
sub
cmp
insb
je
and
add
jns
stos
pushf
and
jp
shlb
cmpsb
movsl
mov
sub
shrb
stos
pop
push
ret
and
pop
imul
shl
add
out
cmpsl
sub
int3
int
xchg
xchg
dec
movsl
pusha
fidivrl
and
mov
lahf
out
lret
pop
divl
jae
dec
adc
dec
push
in
cltd
lret
loope
in
icebp
rol
outsl
or
js
loope
mov
or
popa
xor
aaa
imul
out
add
inc
sub
outsl
inc
add
test
mov
fs
pop
cmp
push
in
insl
ds
test
adc
cmp
add
data16
idivb
adc
jae
sbb
xlat
ret
lds
cmpsl
fdivrl
or
das
pop
js
xchg
mov
jns
inc
std
and
pop
dec
in
pushf
jg
add
inc
lods
sbb
outsb
lds
ss
xlat
push
movsb
pusha
inc
sbb
mov
rcl
push
insb
and
inc
and
test
lahf
mov
addb
stos
or
mov
adc
loope
into
push
rolb
jb
negb
lock
cmp
sub
jb
hlt
sbb
fdiv
rol
xchg
sbb
add
divb
scas
push
mov
fdivs
jmp
add
popf
pop
lret
sub
dec
lcall
and
ja
mov
arpl
test
or
aas
ficompl
or
decb
ljmp
jo
lea
insb
aad
fistpll
into
mov
ficompl
mov
xchg
jecxz
ds
ret
cmp
adc
sbb
mov
in
scas
add
mov
and
inc
dec
inc
loop
xchg
mov
dec
cli
inc
push
sub
xor
out
adc
hlt
roll
xchg
ret
sub
push
pop
push
ja
popa
mul
jae
daa
sbbl
push
out
xor
inc
and
jns
lea
ljmp
mov
sahf
pop
cmpl
jl
add
cmp
das
insl
mov
and
jno
mov
cld
push
imul
lds
inc
cmp
stos
subb
fdivrl
hlt
or
or
int
push
imulb
jo
cmp
or
mov
dec
sbb
mov
mov
clc
xchg
sub
sub
cmc
std
xorl
adc
jo
mov
push
cs
dec
outsb
rol
fdivrs
mov
xchg
push
fcmovnu
sti
mov
lock
in
orb
or
clc
leave
sarb
jo
dec
or
xor
jmp
sbb
jg
inc
mov
sbb
cmp
push
ret
adc
xchg
in
lret
pusha
movsb
cmc
addb
sbb
cmpsl
xchg
test
mov
xor
mov
test
xchg
mov
jno
mov
cmp
cli
jecxz
lea
wrmsr
mov
popa
xchg
or
repnz
shrb
ja
pop
jle
sbb
sbb
jne
mov
sub
jno
mov
sub
lahf
inc
xor
outsb
js
adc
mov
lret
jg
lods
ljmp
and
movsb
ret
jmp
dec
jl
rorl
jecxz
pop
pop
ret
inc
cmp
xchg
imul
aaa
jb
sbb
out
and
and
inc
aad
xor
inc
mov
mov
pushf
repnz
adc
mov
jo
daa
sti
push
xchg
stos
subb
ret
es
mov
cmp
fcmovu
and
mov
mov
stos
dec
push
fisttpll
mov
mov
dec
jae
sub
xor
add
ret
pop
and
pop
pop
adc
ja
repz
data16
xchg
imull
pop
jae
xchg
and
add
mov
shll
stos
shll
out
or
xchg
push
pop
lret
pusha
ljmp
sub
movsl
jo
xlat
mov
addr16
or
and
pop
or
aad
adc
sub
cmp
outsl
enter
stc
or
andl
inc
push
mov
rcrb
js
sbb
adc
fistpll
ds
out
shlb
das
ja
das
sub
inc
das
push
jp
lea
movsb
mov
sub
stos
insl
cmp
popa
pop
scas
repnz
pop
push
xor
jno
std
bound
push
jg
imul
pop
inc
or
adc
cmp
cmp
xor
push
sti
xlat
enter
xor
fisubrl
pop
jae
out
inc
mov
or
mov
lock
push
rol
lret
ret
pop
test
ret
add
fcmovb
sbb
and
ds
dec
jbe
nop
or
in
mov
idiv
stc
in
mov
lret
inc
ljmp
lea
jecxz
cmp
es
adc
push
lcall
and
dec
sbb
jne
push
test
pop
popf
out
mov
jae
loopne
sub
and
lods
jne
mov
test
stos
inc
mov
addl
aad
adc
scas
data16
nop
and
hlt
stc
dec
repnz
subl
or
add
ss
lods
cmp
push
aam
sub
sbb
in
sahf
mov
sbb
push
jne
pop
and
repnz
pop
xchg
or
stos
seto
aaa
in
sub
adc
pop
call
xor
and
inc
inc
add
cmc
dec
std
inc
push
mov
negl
jmp
pusha
add
jecxz
pop
sub
xchg
les
mov
outsl
inc
test
adc
aaa
clc
xor
mov
inc
inc
rol
push
jg
sbb
imul
push
or
inc
scas
mov
or
xor
inc
dec
sub
cmp
pop
cmpsb
add
and
cmpsb
mov
xor
jmp
fsubrl
aam
pop
inc
mov
xor
and
lods
mov
mov
jno
ret
loopne
cli
scas
bound
inc
xchg
jae
stos
or
mov
push
fs
lea
xchg
repz
jo
test
push
or
in
push
mov
mov
pop
adc
lea
and
pop
fildll
loop
std
cmp
xchg
pop
arpl
in
mov
shl
mov
ja
rcr
jae
adc
loope
push
sbb
jp
addr16
sbb
sarb
cltd
add
or
in
fidivs
sub
popf
ret
mov
jb
mov
test
adc
repnz
sti
mov
test
or
shlb
pop
arpl
das
mov
mov
data16
arpl
lods
mov
jne
arpl
js
in
pop
shl
je
sub
orb
sbb
fwait
cmp
adc
mov
movsl
outsb
push
xlat
jbe
or
inc
sbb
inc
psubusb
sbb
aaa
jg
incb
jae
fs
sub
jg
pop
mov
mov
data16
mov
adc
sbb
fnstcw
dec
movsb
push
fisttpl
ficoms
fnstsw
nop
push
cmc
mov
pop
pusha
in
daa
sub
in
xlat
mov
mov
hlt
xor
movl
mov
push
jbe
loope
push
dec
sbb
scas
cld
lods
or
adc
sbb
in
out
std
nop
mov
ficoml
scas
fsubl
xor
adc
cmp
xchg
xchg
incb
daa
pop
gs
mov
cmp
pusha
ss
inc
mov
sbb
inc
adc
test
stos
in
lcall
stc
xchg
imul
xchg
pusha
fidivrs
jge
aad
or
mov
pop
xor
mov
mov
mov
sbb
fsubrs
movsl
push
cwtl
mov
xor
jne
pop
mov
adc
sub
cmp
xor
mov
ljmp
push
aam
mov
or
std
add
loop
cmp
addr16
sbb
jnp
jmp
inc
mov
xor
scas
fistpll
xchg
movsl
mov
addr16
enter
mov
repz
std
pop
addr16
pop
sub
xor
pop
outsb
leave
nop
jl
nop
jl
and
mov
bound
popa
push
sub
mov
cld
fmull
inc
push
xorb
test
test
dec
mov
imul
icebp
rcr
clc
loope
xor
fdivrs
mov
jp
sbb
or
fld
xorb
or
and
pop
aam
sbb
dec
pop
sbb
in
dec
and
push
xor
jns
int3
xor
dec
arpl
and
add
sbb
divl
push
mov
inc
sub
jp
test
std
push
cmp
flds
gs
inc
xor
adc
mov
fisubl
lods
adc
xchg
fistps
imul
ret
push
shll
sbb
cmp
sub
adc
mov
stc
hlt
xor
mov
js
mov
clc
movsl
xchg
scas
pop
nop
dec
add
movsl
jns
mov
out
addr16
mov
in
test
pushf
adc
dec
jno
je
shr
dec
mov
xor
pop
inc
adc
xchg
sbb
mov
rolb
mov
cmp
or
stos
aad
mov
mov
out
inc
and
mov
pop
mov
or
mov
decl
inc
enter
mov
aad
mov
xchg
xchg
out
loop
fs
adc
ljmp
sbb
jo
mov
and
sbb
jmp
or
mov
dec
mov
stc
push
std
movb
cmpb
addl
xchg
inc
outsl
xchg
adc
push
mull
pop
dec
or
mov
jnp
xchg
mov
sbb
addr16
lret
jnp
jo
push
mov
mov
fidivrl
pushf
aaa
cmp
lret
loop
sbb
push
add
lcall
push
fistps
or
jns
in
adc
scas
cltd
or
std
decb
sbb
mov
add
push
scas
cmp
mov
xorb
and
dec
outsb
pop
push
aas
cmpsb
clc
std
jns
orl
out
das
hlt
dec
and
es
mov
add
xorl
mov
add
pop
incb
fbld
bound
mov
outsb
dec
xchg
nop
xor
pop
or
mov
stc
in
sub
in
sub
inc
stos
int
movsl
add
scas
dec
mov
insb
inc
mov
mov
cli
sub
add
stos
sbb
decb
test
or
mov
rcrb
mov
mov
jle
mov
lds
push
sti
stos
rcrl
stos
push
dec
jnp
mov
lretw
push
arpl
mov
inc
jle
fstl
inc
out
movsb
out
and
jbe
mov
push
in
or
xor
mov
movsb
scas
push
fyl2xp1
les
pop
ret
mov
cli
xorl
repz
mov
sarl
xorl
aam
mov
loopne
or
mov
fmull
push
cmp
mov
mov
rolb
push
dec
jo
test
add
out
iret
and
jns
sub
pop
popf
cmpsb
mov
jnp
dec
xchg
jecxz
mov
adc
mov
adc
inc
mov
xor
sbb
fistl
sbb
testl
push
mov
test
xchg
sbb
xor
ljmp
adc
jge
push
test
iret
sahf
mov
jle
mov
sbb
mov
cmp
rcrl
and
mov
push
das
popf
bound
mov
push
cwtl
sti
jne
jbe
test
out
mov
stos
jno
inc
pavgw
sub
in
arpl
leave
test
mov
inc
xchg
xchg
incb
push
adc
les
inc
lods
jl
xchg
or
or
loop
mov
pop
jne
rcr
lea
cs
xchg
cmp
push
jl
imul
aas
jb
mov
ret
mov
fdivr
and
cmc
sub
pop
repnz
je
mov
xor
lret
and
dec
dec
jge
mov
mov
mov
jmp
stos
mov
xlat
pop
aad
adc
mov
xchg
outsb
lods
mov
xor
pushl
pushf
mov
mov
jo
dec
out
xchg
mov
in
loope
inc
call
dec
cmp
pop
inc
loopne
pop
mov
aaa
cltd
std
or
fstpl
je
pop
sti
dec
cmpsl
aam
add
pop
xchg
cs
call
sub
icebp
in
fldl
ja
push
push
stc
or
xchg
jno
inc
iret
ja
cltd
mov
sub
pop
xor
push
add
dec
pop
movsb
mov
jg
rcrl
data16
and
mov
cmp
cs
pop
dec
insb
push
sub
enter
xor
sahf
mov
dec
rcll
out
repz
push
daa
lcall
pushf
addr16
lcall
aad
xchg
fs
or
and
mov
es
xor
das
pop
jno
mov
xor
mov
and
sub
xchg
adc
nop
sub
iret
xorl
scas
jnp
sbb
sti
imul
in
and
stos
inc
xor
aam
push
or
adc
mov
test
lea
inc
xor
push
xchg
dec
sbbl
adc
adc
mov
sub
sbb
adc
mov
popf
aaa
daa
std
push
jns
or
lcall
jmp
cmc
xorl
ret
out
pop
lea
les
mov
fs
or
popf
lods
inc
xor
aaa
sub
jl
jae
data16
in
pop
jle
shlb
xchg
cmp
mov
aas
hlt
mov
adc
lahf
jecxz
popa
jns
cmp
xor
mov
test
js
push
mov
dec
jnp
pop
in
adc
dec
leave
dec
or
cmp
add
sbb
dec
sbb
mov
xchg
dec
cmpsl
sahf
sub
dec
gs
out
shl
jbe
rorl
mov
lea
jmp
mov
movb
xchg
aad
mull
es
in
ss
lock
cwtl
pop
sub
enter
adc
push
and
pop
inc
push
in
mov
adc
push
orl
popl
imul
inc
sbb
mov
into
push
cli
pop
lds
and
stos
lds
ds
in
inc
adc
jp
lds
mov
icebp
pop
hlt
or
or
mov
xchg
rcrl
xor
js
test
dec
pop
fstpt
scas
cmp
jnp
dec
cmp
ret
imul
dec
mov
push
outsb
mov
mov
cli
xchg
mov
push
or
ret
or
mov
sbb
xchg
adc
and
stc
loop
insb
popl
fs
or
sub
aas
xchg
test
mov
sub
lret
mov
jl
sti
ds
movsl
xchg
into
jl
in
rorl
jle
mov
jmp
sbb
mov
insl
inc
mov
nop
jbe
sbb
xchg
popf
push
add
movsl
out
pop
cmpsb
repz
scas
or
push
adc
xor
jg
push
mov
int
mov
test
mov
fsub
outsb
xor
pop
iret
hlt
jle
movsl
in
ds
stc
pop
cmpsb
in
pop
pop
imul
aas
jo
xor
mov
out
push
movsb
adc
outsb
prefetchnta
pop
sbb
iret
push
adc
mov
adc
xchg
in
shr
sbb
cltd
and
push
push
add
cltd
xchg
hlt
pop
xchg
test
push
aam
and
xor
or
adc
fistl
jne
push
and
adc
or
movsb
mov
insb
sarl
clc
test
mov
or
lahf
cli
jo
outsl
push
loopne
ret
sbbb
testb
fwait
in
xchg
imull
add
mov
jecxz
or
cwtl
pop
mov
cmpxchg
ja
dec
and
dec
loope
or
inc
pop
scas
sbb
cmp
cltd
dec
sti
std
adc
xchg
gs
push
xchg
popa
push
nop
and
cmp
and
cmp
fdivr
mov
adc
jnp
aad
dec
adc
mov
pop
les
xchg
inc
fucomi
dec
pushf
testb
lcall
imul
hlt
ret
jae
test
dec
ret
pop
xchg
sub
xlat
loopne
mov
jle
mov
adc
pop
push
dec
sahf
xor
out
xchg
orl
sub
inc
and
jl
mov
sahf
adc
into
or
push
sti
cmp
push
jns
xor
xor
dec
fisubrs
jg
xchg
sbb
stos
sbb
xchg
inc
and
fs
aam
xor
js
mov
and
pop
int3
test
xchg
bnd
pop
sbbb
dec
xchg
dec
push
movsl
push
sub
sub
jp
push
jb
pop
xchg
mov
cmp
imul
dec
pop
jae
popf
xchg
cmp
out
mov
rcll
push
adc
popf
clc
loope
imulb
into
faddl
inc
xor
cli
ret
jecxz
sub
arpl
ljmp
fbld
sbb
sub
es
rclb
test
mov
sub
pop
sub
call
das
dec
and
cld
mov
js
std
mov
pop
sbb
pop
xchg
push
iret
rcl
pop
mov
lcall
testb
in
mov
or
movsb
test
sbb
std
arpl
and
xchg
ljmp
pop
out
insb
jbe
jno
aaa
push
clc
rcll
jl
js
mov
inc
add
jecxz
add
xchg
push
jnp
outsl
jae
popaw
mov
sbb
es
sub
add
mov
test
cmp
adc
cmp
xchg
enter
popf
iret
sub
mov
stc
shrl
stos
sti
sub
jl
xorb
js
cmpsl
addr16
xchg
inc
fimull
adcl
xchg
mov
mov
icebp
cli
lcall
xor
lret
in
push
mov
outsl
not
data16
adc
iretw
cmp
cmp
pushf
ljmp
push
out
mov
cs
sub
mov
aaa
incb
fmuls
dec
mov
addr16
jge
call
aaa
daa
mov
fisubrs
movb
insl
scas
arpl
adc
pop
bound
outsl
sub
gs
cmp
jo
dec
mov
and
and
jbe
dec
cmpsl
int3
dec
inc
ss
xchg
outsb
adc
sub
inc
shlb
cli
rolb
mov
add
int3
dec
call
inc
xor
mov
xchg
push
pop
push
gs
xor
push
sbb
jo
gs
and
xchg
dec
out
xor
lcall
jmp
inc
in
xchg
xchg
mov
mov
cmc
xchg
ficoml
mov
adc
dec
loope
push
inc
push
imul
inc
xchg
xchg
pop
in
jns
add
cmp
sahf
stos
movsb
add
xor
mov
jo
pop
pop
movsl
aaa
out
orb
add
lea
lcall
pop
jecxz
inc
mov
jl
mov
sbb
fwait
pop
mov
add
je
das
into
and
inc
adc
inc
std
pusha
xor
in
or
pop
cli
mov
xchg
in
push
push
xchg
mov
pusha
inc
sbb
repnz
cmpsl
mov
mov
in
adc
mov
or
inc
pop
sbb
das
insl
cmp
bound
dec
pop
andb
add
arpl
orl
mov
push
jo
lds
cltd
xor
jne
mov
or
pop
outsl
fldt
jle
pop
pop
push
xchg
push
push
jl
mov
shrl
lods
mov
add
push
inc
repnz
inc
aaa
imul
dec
jl
sbb
inc
test
insb
lock
sbb
gs
or
lahf
lods
call
xchg
loop
ret
jp
aad
movsl
inc
out
sbb
xor
jbe
xor
adc
add
jg
ljmp
leave
jae
xor
inc
sub
push
mov
inc
bound
out
out
pop
fisttps
inc
push
and
jmp
vmovaps
adc
and
dec
sahf
es
mov
adc
stos
sbb
push
les
inc
push
sub
jae
sbb
xor
imul
xchg
lret
adc
leave
lret
mov
out
ret
add
dec
adc
fsubrl
xorl
in
lods
movl
lcall
loop
add
pushf
inc
and
mov
sub
mov
pushf
repnz
mov
sahf
or
mov
pop
push
mov
ljmp
sub
daa
mov
xor
mov
es
fisubrl
fmuls
lods
jg
mov
xchg
repnz
mov
push
inc
pop
mov
add
xor
mov
dec
mov
jl
sahf
or
mov
jae
call
cmpsl
or
pslld
push
loop
mov
add
lcall
add
movsl
mov
xor
sub
mov
ret
jnp
pop
and
pop
es
mull
test
mov
sub
in
mov
out
popf
mov
test
jne
sub
pop
out
movsl
jbe
add
jge
push
dec
jns
pusha
inc
ss
xchg
test
outsb
sub
add
cmp
into
dec
imul
inc
dec
popa
xchg
sub
dec
repz
dec
rorl
mov
inc
popa
inc
mov
jns
xor
incb
mov
jbe
dec
mov
data16
sbb
rcll
in
sbb
sub
mov
lock
jne
dec
jb
stc
cld
cmp
mov
call
insb
jecxz
ficoml
jmp
dec
movsb
lods
add
or
mov
ret
jne
movsl
dec
pop
sti
lea
cltd
or
nop
sti
mov
dec
pop
dec
pop
xor
std
push
int3
xchg
in
and
fists
push
outsl
fbstp
add
push
sbb
fistpll
pop
sub
imul
xor
stos
adc
pop
addr16
outsb
js
mov
pop
arpl
in
out
je
mov
lret
sub
arpl
sbb
cmc
sbb
imul
jne
sbb
push
dec
lods
lds
fmul
xlat
jmp
popa
out
je
mov
enter
test
jno
mov
adc
cmp
jb
mov
inc
push
or
and
jle
push
movsb
test
push
pop
push
scas
inc
data16
pop
inc
jnp
movsl
mov
rolb
xor
out
sbb
lret
lret
cld
push
mov
push
mov
inc
inc
push
dec
into
adc
lock
pop
lea
sbb
stc
xor
sub
jl
add
xor
adc
jnp
inc
sub
mov
insb
cmp
ret
add
push
iret
inc
sbb
je
add
dec
jns
pop
test
fnstcw
inc
fsubl
imul
and
stos
mov
mov
sbb
out
into
push
in
lods
fcomps
xor
mov
fists
push
addr16
push
pusha
movsb
xor
pop
sub
daa
addr16
cmp
mov
adc
mov
jge
or
and
inc
jae
jae
and
add
iret
mov
xchg
mov
adc
out
cwtl
dec
add
pop
cmp
mov
data16
sub
icebp
and
sbb
pop
push
mov
pusha
call
imul
mov
push
movsl
adc
shlb
loopne
insb
jbe
jle
mov
cmpsl
jb
mov
cli
ljmp
xchg
sahf
ss
pop
mov
fmull
sub
cmp
fistpll
out
mov
and
push
outsb
mov
xchg
shll
test
pop
or
imul
push
leave
push
data16
jp
jne
rclb
addr16
and
inc
xchg
std
pop
inc
mov
xchg
popa
mov
hlt
lea
outsb
cmpsl
push
cmp
mov
mov
mov
jecxz
rcr
xchg
inc
fisttpl
mov
cmp
aaa
call
aam
addb
sub
mov
leave
adcl
jle
loop
popf
xlat
xchg
rclb
mov
adc
insl
arpl
movsb
or
movsl
sbb
or
das
cli
stc
cmpsl
lcall
push
inc
jecxz
xchg
mov
sarb
dec
data16
orb
mov
push
dec
pop
and
push
std
test
movsl
add
aad
test
aad
and
insb
incb
shrb
inc
fiaddl
adc
enter
mov
mov
es
mov
in
aad
ss
pop
test
fcomps
cmpsb
leave
mov
mov
aam
inc
xor
xchg
pusha
cwtl
adc
movsl
jmp
mov
and
mov
lock
cmp
cwtl
and
or
cwtl
add
lret
dec
cmp
imul
mov
or
sbb
adc
sbb
iret
into
push
xor
xchg
shl
cmpsb
rcrb
mov
aas
pop
pop
inc
daa
dec
popf
sub
or
pop
pop
jae
sub
xchg
gs
push
lds
testl
cmp
inc
dec
inc
test
xchg
fwait
outsl
lret
pop
or
pop
jns
fucom
pop
push
jns
movsl
pop
roll
mov
in
inc
insb
pop
mov
sbb
call
js
gs
sar
cmovns
inc
notb
mov
mov
adc
test
push
pop
cmpsl
cli
mov
mov
lods
or
loope
faddp
ret
mov
int
nop
inc
dec
sbb
loopne
xor
or
and
mov
add
add
lcall
ja
push
fs
mov
jns
nop
add
add
dec
sub
cmp
call
sub
in
bound
mov
mov
lret
jns
daa
addb
fidivrs
mov
pop
or
sub
jbe
xchg
in
sub
xchg
or
fcompl
inc
movsb
pop
fsts
xchg
cwtl
popf
into
lea
in
push
mov
sub
cmpsb
les
rclb
stos
imul
lret
sti
pop
dec
inc
pop
pop
in
loopne
push
pop
push
sbb
mov
cmp
adc
int
inc
ficompl
lcall
ret
scas
mov
inc
xchg
cmpsl
sub
aam
mov
fwait
pop
popa
mov
cmp
clc
add
push
cmp
in
adc
mov
enter
xchg
cmp
dec
jg
pushf
jbe
shrl
cmpsb
pusha
lea
test
imul
fisubrs
jb
or
imul
out
mov
xor
repnz
in
orb
mov
ja
pusha
fwait
pop
push
fdivs
cmc
cmp
mov
push
out
mov
or
sub
shlb
xchg
push
je
inc
pop
cli
adc
je
mov
outsb
in
mov
mov
std
sub
xchg
inc
dec
out
clc
push
push
jp
or
jnp
push
int3
and
pop
dec
ret
repnz
fsubrs
xchg
sbb
subl
loop
jno
sti
cld
push
nop
lock
iret
add
hlt
insl
insl
push
hlt
push
pusha
sbb
inc
xor
mov
cli
roll
repz
and
xorb
stos
mov
xchg
popf
mov
adc
loope
repz
xor
jg
sbb
pushf
in
movsb
sbb
mov
push
add
push
xor
and
dec
cmp
mov
and
pop
xchg
sub
sbb
pusha
les
push
imull
inc
fbstp
sub
movsl
mov
add
xchg
adc
xchg
add
adc
xlat
mov
int3
out
mov
aam
adc
jae
mov
adc
xchg
dec
mov
daa
mov
js
mov
or
fistps
push
inc
cmc
xor
mov
sub
je
xchg
jmp
and
lret
test
icebp
xlat
cwtl
pop
shll
rcll
cs
add
in
repnz
in
lret
dec
out
pop
adc
mov
adc
cmpsb
lahf
jo
das
push
xlat
push
test
mov
movsb
insl
sub
shr
repnz
dec
sub
out
dec
inc
aaa
push
cmpsb
fwait
xlat
jmp
mov
lea
mov
xchg
xchg
in
jbe
dec
or
inc
aad
jle
push
dec
stos
pop
movsb
popl
je
loopne
je
push
fnstcw
rolb
xchg
gs
push
outsl
lds
jns
fdivs
leave
aas
scas
int
push
mov
int
mov
stos
pop
ficoml
xor
push
mov
stc
mov
pop
gs
adc
mov
cmpsl
mov
pop
push
xchg
aas
jnp
pop
inc
je
cmp
jp
fcmove
add
xchg
aam
jge
push
mov
sbb
popa
xor
cmp
inc
popf
sbb
mov
lock
and
push
das
cltd
sub
into
mov
push
lds
mov
test
scas
mov
xor
and
cmp
rclb
dec
sub
scas
jg
jmp
cmp
sahf
dec
lea
subb
sub
or
es
gs
cmpsb
or
push
push
rcll
push
xor
dec
push
shll
je
or
popf
inc
mov
sub
test
cs
push
sub
out
inc
stos
adcb
jne
xlat
pop
add
fiadds
sub
add
pusha
out
adc
pop
into
push
dec
xor
adc
imul
cs
sub
adc
divb
ds
or
jno
std
pop
arpl
leave
xchg
out
mov
mov
push
push
add
fstps
mov
stc
xor
outsb
mov
push
add
sbb
jge
mov
cmp
mov
sub
hlt
repnz
cmpsb
and
inc
imul
pop
addr16
rorb
push
xchg
lahf
and
push
pusha
push
mov
mov
jg
push
pop
loopne
mov
adcl
lock
jne
mov
mov
enter
lret
sub
lods
bound
sbb
enter
inc
scas
fs
repnz
cmc
dec
dec
add
mov
mov
xor
orb
mov
add
lret
and
enter
xchg
cmp
fwait
push
push
call
ljmp
and
bswap
mov
loope
std
js
decb
cmp
outsl
mov
popf
adc
rorb
shrl
pop
mov
xor
jb
mov
push
imul
mov
xor
and
and
test
sbb
jg
lcall
ror
jmp
add
repz
scas
add
jne
mov
in
pop
aad
push
mov
push
add
push
mov
push
xchg
test
dec
inc
xchg
xchg
pop
inc
mov
xchg
movsb
das
scas
mov
inc
inc
mov
gs
ja
mov
mov
aam
rolb
pop
scas
pop
mov
inc
imul
cld
dec
gs
sahf
js
jp
or
sbb
xorl
sub
je
dec
jmp
incl
stos
sbb
inc
mov
mov
outsb
push
inc
adc
fnstenv
xchg
or
cmp
or
jbe
add
mov
cld
ds
push
mov
and
push
mov
fstl
sub
mov
pop
mov
push
sbb
nop
out
subb
aam
sub
jnp
cmc
daa
fsubrs
out
add
add
xor
inc
std
mov
sahf
push
arpl
arpl
mov
xlat
inc
fcmovb
shl
inc
insl
jmp
sti
out
push
xor
or
sbb
aam
popa
mov
and
leave
out
mov
and
mov
xchg
sub
push
mov
insl
out
je
inc
cltd
jecxz
stc
je
jns
mov
jmp
pop
inc
cmp
shr
mov
jb
push
jle
movsl
stc
cmpsl
es
cmpsb
dec
and
xchg
dec
hlt
in
test
mov
xor
or
push
mov
xchg
out
dec
movb
enter
cli
pushf
adc
test
fwait
lock
cmpsb
jo
adc
rorb
in
int3
mov
popf
icebp
push
test
clc
inc
gs
mov
pop
ret
cmp
ljmp
mov
and
push
daa
mov
repnz
cmp
daa
mov
xor
je
and
loope
mov
lock
pop
cmp
rclb
inc
or
jle
sti
and
mov
and
pop
jg
mov
cmp
xchg
pop
mov
or
pop
mov
dec
rorb
test
adc
inc
in
pop
addr16
jno
loopne
ss
and
ret
add
lahf
jne
fcmove
cmp
ja
push
fsubl
fdiv
addr16
call
out
dec
loope
insl
push
mov
dec
ss
gs
sub
shll
lock
or
mov
ret
lcall
push
pusha
dec
call
adc
inc
cmp
ss
cmp
adc
aas
xor
push
les
aas
inc
push
repz
xchg
popf
insb
sarb
notl
xchg
pop
cmp
push
mov
jb
xor
mov
dec
mov
mov
jo
sbb
jg
sub
mov
insb
cmpsl
jno
cmpsb
cs
pop
cmc
mov
xor
or
pop
jg
bswap
sub
inc
pop
outsl
ret
rcr
in
repnz
mov
jae
out
addr16
xor
in
mov
aam
jle
push
ja
bound
arpl
xchg
pop
inc
cmp
dec
xor
inc
cmp
cld
pop
repz
pop
xchg
fisubrs
jecxz
or
jp
pop
gs
cmpsb
popa
add
das
lret
test
stos
push
inc
mov
jno
hlt
lcall
and
lea
shrl
lods
xor
xchg
adc
pop
pop
sub
and
insb
shlb
dec
inc
mov
fnsave
call
mov
ret
jle
or
fnstcw
es
and
test
jmp
ss
mov
call
dec
sub
mov
fidivrs
test
lods
sbb
out
adc
mov
mov
lahf
sub
inc
in
pop
mov
xchg
mov
pop
pop
into
mov
mov
bound
xchg
jb
das
jb
ljmp
lret
fsub
shld
cld
mov
ja
ret
sub
push
mov
ret
jae
mov
ja
xchg
push
das
cs
in
lcall
mov
and
lcall
sbb
jo
popa
nop
pusha
xchg
pop
lcall
cmp
movsl
mov
mov
and
jg
mov
mov
inc
mov
and
fisubrs
add
jbe
test
enter
pop
test
call
and
xchg
and
mov
mulps
mov
add
int
shlb
mov
lret
ja
pop
sti
push
lods
outsb
pop
cmp
add
repz
mov
dec
gs
push
popa
jae
scas
faddl
nop
icebp
ret
or
and
outsl
mov
adc
mov
lods
add
xor
rorl
jge
aaa
pop
xor
inc
pop
xchg
jp
push
mov
jae
gs
xchg
fwait
inc
out
jno
mov
clc
mov
and
pop
int
push
push
push
inc
mov
and
int
fistps
scas
in
sarb
dec
fdivr
push
cmpsl
adc
notl
les
push
pop
jae
iret
inc
cmp
and
shll
out
pop
fcoms
loopne
dec
sbb
add
mov
or
pop
scas
cmp
cmp
repz
in
inc
lahf
and
mov
inc
adcb
cmp
xor
test
pop
mov
push
mov
pop
add
popf
pop
mov
in
mov
testb
mov
jl
inc
add
push
leave
icebp
imul
loope
or
cmp
and
test
imul
jmp
arpl
xchg
jns
dec
lret
loopne
inc
call
dec
mov
cmp
push
fistpll
lret
cmp
cmp
mov
movsb
or
stc
inc
xor
mov
push
test
jp
or
sbbb
inc
push
andb
lret
add
imul
cmpsl
push
and
cmp
ds
std
sbb
popf
xor
dec
push
or
jno
mov
icebp
dec
sbb
addr16
sub
adc
inc
popa
repz
add
stos
mov
pop
enter
dec
cmpsb
iret
mov
icebp
or
hlt
fidivs
aam
mov
and
mov
jns
pop
dec
enter
xor
cmp
repz
in
cmpxchg
xor
adc
fdivrs
xor
bound
mov
enter
cmp
jnp
cmp
cmpsb
or
inc
jae
adcb
jmp
push
xlat
scas
roll
inc
mov
push
inc
ljmp
hlt
movsb
loopne
hlt
mov
pop
inc
int
adc
into
mov
mov
jbe
or
inc
sbb
pop
jmp
int3
pop
lods
adc
pop
dec
call
ss
fwait
decb
inc
sub
and
jp
xchg
stc
mov
push
arpl
out
push
dec
stos
mov
mov
pop
pop
int3
mov
push
pop
cltd
orb
inc
or
out
or
movsb
push
adc
and
jge
scas
movsb
int3
pop
cmp
lds
lcall
les
cmpsl
pop
sbb
xor
rorb
mov
cmp
pop
push
int3
jmp
psubsw
jnp
outsl
test
out
pop
pop
push
xlat
xor
fidivl
mov
jnp
ss
sbb
test
and
incb
inc
call
jmp
sub
dec
popf
insb
jg
das
sarb
lahf
or
in
imul
lods
insb
jo
cmp
mov
je
outsl
jnp
js
mov
dec
dec
cli
or
test
test
int
test
jb
inc
cmp
mov
fwait
inc
add
add
repz
std
push
aas
sbb
jbe
iret
dec
mov
icebp
inc
mov
clc
sbb
ret
pushf
packuswb
js
pop
les
pop
xchg
out
push
mov
adc
adc
je
test
cwtl
mov
mov
movsb
push
loopne
outsl
sbb
loope
out
mov
adc
sbb
push
in
add
lret
addr16
push
or
xor
subb
dec
popa
xlat
bound
clc
sub
xchg
cli
adc
aaa
cltd
dec
xchg
jbe
sti
test
in
clc
arpl
loop
sbb
jo
scas
add
les
popf
jb
cmp
push
adc
es
imull
mov
push
stc
leave
fbstp
test
add
std
xchg
xchg
push
sub
sbb
xchg
pop
sbb
dec
push
sbb
test
stc
loope
mov
and
cmp
lcall
popw
lahf
popf
mov
xor
or
mov
int
insl
add
and
mov
movsl
xchg
xor
jecxz
lcall
xchg
daa
adc
adc
pop
dec
pop
add
adc
test
sar
std
inc
mov
mov
inc
ror
pop
xlat
jo
jle
outsl
mov
in
mov
pop
into
mov
and
push
lcall
inc
in
repnz
insb
jecxz
pop
inc
pop
jg
lods
inc
dec
mov
xchg
push
sbb
mov
dec
icebp
push
inc
in
jae
sub
and
es
mov
push
rcl
aad
xchg
pusha
xor
push
out
cmp
js
xchg
out
mov
ss
sub
cmp
adc
cld
push
cmp
popf
pushf
adc
or
cmp
addb
push
jle
movsl
ja
das
movsl
push
sbb
insl
test
push
pop
push
push
jp
lock
mov
jns
pop
scas
adc
rorb
pop
xchg
cld
mov
xchg
movsb
push
sbb
jp
xchg
fsubp
lcall
fdivrl
pop
mov
jmp
mov
hlt
fldt
cwtl
mov
test
xchg
insb
dec
mov
cmp
sbbb
jl
ret
jb
repz
daa
mov
addr16
mov
imul
popa
cld
xor
mov
cmpsb
lcall
pop
mov
shl
pop
mov
mov
jle
es
push
xchg
pop
xchg
aas
xchg
cmp
lea
in
or
je
and
in
enter
rcl
int3
pop
std
es
pop
dec
movsb
rorb
sbb
lock
test
mov
call
jl
mov
cwtl
push
inc
jmp
and
mov
shll
stc
jle
pop
jo
or
ret
movsb
push
pop
add
notl
aam
jp
aam
push
or
mov
cmp
inc
inc
gs
scas
xchg
pop
jbe
in
test
or
ljmp
cltd
xchg
lods
cmpb
testl
arpl
push
inc
pusha
mov
add
lds
sbbl
mov
imul
jmp
push
inc
push
mov
dec
sbbb
das
daa
das
cmpl
cs
fsubl
xchg
mov
bound
pop
sub
out
pushf
sub
rclb
sub
rcrl
stos
xchg
pusha
fwait
lea
hlt
inc
lret
dec
jns
inc
neg
cmp
pop
jp
jb
and
dec
and
mov
es
xor
es
cmp
mov
movsl
push
xchg
lock
cmp
jle
xchg
cmp
outsw
mov
mov
js
adc
scas
push
xor
xor
push
arpl
pop
and
sub
xlat
mov
dec
rcl
push
jne
lcall
mov
loop
inc
xor
cmpsl
jmp
fldenv
inc
nop
jns
fmuls
testl
inc
mov
fsubrl
inc
sbb
mov
mov
arpl
inc
pop
or
pop
jle
cmpsb
sbb
mov
mov
popa
pusha
or
cmp
movsb
je
sub
dec
rolb
push
jne
into
aas
aas
add
adc
pusha
fs
jae
push
adc
inc
jae
enter
ret
sarb
mov
stos
adc
cli
xchg
mov
mov
dec
adc
and
inc
fwait
inc
mov
gs
cmp
xchg
sti
add
dec
notb
fadds
push
outsl
mov
sbb
lret
jo
jge
fcmovnbe
sub
test
andb
and
or
gs
outsl
cmc
cmc
stc
gs
mov
push
lock
sti
add
dec
insb
and
push
cwtl
jb
jle
stos
jl
cli
insb
or
cmp
xlat
jo
cmp
mov
push
push
aas
ror
out
sbb
repz
cmp
xchg
int3
pop
fs
mov
xor
pop
jecxz
inc
jle
test
pushf
or
and
in
mov
outsl
hlt
add
adc
int3
nop
sbb
jl
loope
popf
push
in
sub
cltd
shlb
dec
or
out
daa
aam
in
pop
cwtl
pushf
aaa
out
xor
jmp
ficomps
pusha
dec
cli
sbb
les
lret
mov
nop
push
repnz
mov
xor
push
aaa
outsl
pop
and
in
loope
popl
dec
jp
sbb
cld
fs
mov
int
mov
mov
pop
jae
sub
mov
mov
or
cmp
inc
sti
mov
push
aas
jns
icebp
cmp
jle
push
daa
sti
sbbl
cmp
mov
mov
ljmp
ret
dec
das
dec
sahf
mov
lret
cld
mov
out
imul
aas
aas
fucomi
sbb
aam
je
arpl
sbb
jb
addb
or
sbb
rolb
xchg
sbb
adcl
sub
inc
or
mov
sbb
sbbb
clc
jae
ljmp
mov
leave
je
insb
scas
sub
div
sahf
xchg
pusha
lahf
inc
pop
mov
mov
dec
lret
in
data16
inc
xor
add
cmc
lods
mov
jns
call
inc
xor
int
cmp
iret
mov
in
les
inc
ja
cmpsl
aas
lahf
js
ds
cld
sarb
or
inc
cmc
sti
insb
adc
paddb
je
cmp
sbb
test
or
fistpll
pop
das
lret
mov
adc
inc
out
fmul
mov
mov
xchg
xor
sahf
push
bound
push
xchg
push
in
jle
add
adc
jecxz
pop
push
aad
into
cmp
xor
testb
xchg
sahf
test
popf
push
call
or
mov
jbe
push
outsl
aad
cmp
call
push
js
popa
repz
sub
sub
pop
sub
dec
icebp
imul
ja
xchg
xchg
push
lods
aaa
incb
arpl
in
test
lret
fninit
mov
rdmsr
fwait
adc
aam
pop
dec
dec
sahf
leave
adc
dec
or
jns
pop
mov
sti
ljmp
movsl
mov
cs
int3
jns
stc
loope
loop
jno
out
ljmp
mov
mov
aaa
outsb
cwtl
mov
ret
add
in
inc
mov
xchg
and
push
je
pop
cmc
das
test
mov
adc
outsl
mov
xchg
in
ret
mov
outsl
lods
cmc
lods
pop
dec
sub
inc
lcall
mov
nop
inc
pop
and
out
fsub
inc
adc
sbb
mov
fadds
jmp
xor
mov
and
dec
pushf
xchg
stc
test
out
ja
xor
and
mov
aaa
cwtl
push
sbb
mov
scas
inc
mov
cmpsb
les
call
fbld
jge
sbb
cmpsl
shl
cli
stos
inc
subl
cs
aas
mov
out
test
mov
scas
in
add
cwtl
mov
loope
pop
shrl
scas
or
dec
dec
push
xchg
cs
ret
cmp
dec
lahf
fdivrl
mov
adc
mov
repz
in
aas
or
adc
mov
push
adc
mov
jno
inc
dec
cmp
fisubl
imul
mov
inc
aaa
test
inc
dec
adc
cmp
jae
cld
insl
jbe
lret
inc
ret
mov
xchg
ja
jno
sbb
add
cmc
shll
sbb
and
sahf
pop
fucomp
aaa
and
orl
fisttps
out
xchg
mov
jmp
mov
push
cmpsl
sub
jae
cmpb
sub
xor
jbe
and
mov
repnz
cmc
dec
cmp
push
fnstcw
push
pop
jmp
or
add
sti
push
jae
pop
mov
push
aam
fmuls
adc
test
sub
test
addl
stos
mov
out
sbb
mov
jne
xchg
add
pop
aas
mov
cmp
bound
fisttpll
mov
add
in
and
xchg
sbb
jb
out
aam
pop
jge
mov
pop
sbb
cs
inc
cld
shl
inc
or
dec
ficoml
dec
aam
lds
scas
jg
jecxz
mov
mov
adc
sbb
sub
sbb
sahf
xchg
sbb
mov
stos
stc
mov
inc
mov
or
inc
jnp
push
fisttpl
fstl
adc
pop
jmp
adcl
xor
test
shlb
sbb
mov
int
jno
cmp
insb
jecxz
push
xchg
xor
divl
add
insl
stos
pop
mov
enter
mov
lcall
jae
jb
sbbb
push
sub
adc
sbb
jge
lea
push
repnz
das
push
testl
mov
ljmp
sbb
aad
inc
pop
paddb
push
repz
mov
int3
bound
stos
push
push
push
and
orb
jno
sub
in
pop
insl
stc
mov
xchg
enter
loopne
leave
xor
pop
stos
pop
scas
add
cs
into
add
mov
push
sar
icebp
jl
push
and
rorb
fmuls
or
add
cs
add
or
clc
push
and
and
dec
jns
leave
adc
add
mov
iret
sbb
popa
ljmp
inc
mov
xchg
or
fidivrl
push
fimull
test
inc
scas
xchg
outsb
leave
leave
jl
cmp
shll
into
or
pop
in
mov
dec
cmp
push
sub
outsl
xlat
jmp
sub
mov
loop
sub
jb
iret
scas
pop
sub
in
pop
cmp
xchg
lahf
inc
out
inc
mov
cmpb
mov
lea
push
push
aaa
mov
inc
dec
rorl
sbb
aam
pop
push
movsl
sti
stos
das
xor
fldl2e
jae
and
sti
popf
dec
sbb
pop
inc
icebp
push
push
call
insl
dec
sbb
shr
inc
adc
adc
mov
push
mov
sbb
push
sbb
rolb
pop
fadd
fistpll
andl
xor
mov
fisubl
adc
jns
fwait
mov
fisttps
jge
jp
pop
test
adc
dec
test
loope
jp
movsl
xor
pop
xlat
je
shlb
out
movsl
loopne
lret
mov
push
mov
or
ret
fs
adc
mov
gs
ret
mov
xchg
icebp
pop
mov
inc
xchg
mov
insb
or
popf
xor
movsb
push
add
imul
adc
pop
push
rcrb
xchg
mov
loope
sti
mov
mov
bound
and
push
shlb
int
mov
sbb
xor
mov
pop
push
pop
setg
and
push
or
lret
jbe
jp
cli
shll
out
cld
inc
xchg
push
lods
jne
xchg
mov
cwtl
mov
inc
push
pop
jmp
push
dec
faddl
lea
xor
cmp
rcrb
lods
shlb
sub
xor
adc
nop
sahf
cmp
xchg
cmp
int3
or
test
mov
pop
cmp
pop
pop
jge
xchg
dec
or
mov
push
mov
and
inc
sarb
pop
lea
mov
xchg
jecxz
push
xor
fisubrs
mov
add
hlt
xlat
clc
sti
clc
stos
inc
mov
push
movhps
sub
sub
xor
fidivs
cmp
jl
nop
aad
jecxz
push
lock
and
mov
aad
in
push
das
mov
insb
mov
lcall
into
sub
in
pusha
cmp
out
daa
into
popf
in
and
shll
sub
movsb
gs
push
aaa
or
jp
xchg
in
into
insb
add
es
inc
mov
or
dec
in
test
xorb
popa
dec
in
inc
mov
dec
mov
push
xchg
fbstp
mov
fs
xor
ficompl
lods
adc
push
mov
and
add
mov
cmp
mov
jno
xor
xor
adc
out
mov
and
imul
add
mov
lds
fidivs
dec
orb
sub
mov
jb
inc
mov
mov
in
xor
adc
in
pop
inc
iret
mov
or
fisubl
push
xchg
stos
stos
sbb
add
data16
or
rolb
jmp
scas
or
jae
jg
xchg
adc
mov
xor
es
push
in
mov
sbb
sbb
mov
fs
push
es
pop
call
mov
scas
jp,pt
mov
inc
xor
mov
xor
sub
cmp
push
jae
xlat
jecxz
cmpsl
add
cmc
jle
gs
dec
pushf
and
jo
adc
inc
fwait
adc
mov
mov
adc
xchg
cmovge
push
or
in
dec
push
cmp
mov
jnp
pop
ret
xchg
inc
sub
fidivl
jge
push
dec
adc
outsb
cmc
stos
in
sub
sub
cli
jmp
addr16
outsl
ja
pop
push
jbe
xchg
mov
push
pop
inc
addps
xor
into
addl
outsb
add
cmp
leave
stc
push
mov
xchg
cli
aas
sahf
mov
daa
ljmp
mov
add
mov
mov
rorl
repz
jnp
pop
mov
xorb
jne
push
std
ret
push
imul
fs
inc
mov
jl
je
lock
mov
and
gs
cld
popa
js
imul
stc
push
pop
push
out
test
in
add
cmpsl
stos
or
sarb
std
fcoml
adc
pop
sub
test
imul
cmpsb
push
pop
dec
roll
out
test
cld
sar
mov
pop
jg
adc
lret
pop
test
in
cs
sbb
in
cltd
sub
adc
imul
icebp
push
cltd
jo
aas
pop
xchg
ret
test
sbb
push
pop
movsl
jb
pop
cmc
scas
jns
xor
or
int3
loopne
repnz
rorl
das
fdivl
pop
sub
push
clc
sub
aad
inc
or
out
cwtl
dec
and
cltd
test
lcall
push
sub
inc
mov
push
adc
jecxz
cmpsb
and
imul
mov
fbstp
jg
pop
jb
data16
sbb
es
adc
inc
decb
ret
fs
or
cmp
dec
xchg
xchg
push
mov
lock
or
les
xchg
ss
jp
mov
cmp
icebp
out
cmp
pop
gs
mov
clc
mov
inc
bound
cmpsl
push
in
sub
lods
stc
scas
sbb
lgs
or
pop
dec
cmp
out
dec
ja
ds
add
popf
push
dec
mov
adc
dec
ret
or
mov
push
xchg
xchg
gs
and
push
mov
xor
lahf
jne
add
shll
xchg
jg
scas
sbb
shlb
sub
inc
fldl
sbb
insb
fneni(8087
test
loopne
divl
rcl
imul
iret
sub
mov
cmp
push
cmp
lods
bound
lods
dec
xchg
and
or
adc
pop
cmpsb
push
xchg
sub
jle
out
aam
lods
mov
xchg
inc
mov
inc
xor
sti
pop
cmpsb
sbb
cwtl
fpatan
lcall
dec
cs
cmpsl
xor
out
dec
inc
leave
add
and
adc
pushf
sub
dec
inc
je
adc
sbb
add
push
xor
mov
jns
pop
test
dec
mov
shrl
sbb
and
cmp
loop
xchg
aaa
fdivr
bswap
fdecstp
out
idivl
sub
lahf
cmp
je
lods
inc
sbb
dec
and
subl
jmp
test
mov
inc
pop
cwtl
add
pop
pop
fsubrl
call
cmp
mov
pop
sahf
push
aam
imul
das
sub
adc
imul
lods
jge
or
adc
pop
aad
addl
cmp
push
iret
push
mov
dec
and
das
mov
push
movsl
push
sbb
ficompl
and
aad
mov
sbb
outsl
mov
repz
imul
jmp
clc
cld
call
dec
stos
hlt
xchg
xor
cli
lret
cltd
nop
stc
pop
loop
mov
loope
fcoms
add
mov
jecxz
out
ret
add
and
call
imul
mov
xorb
mov
into
pop
cmpb
mov
clc
and
pop
fldl
cmp
push
sbbb
add
jecxz
mov
xchg
jle
shrl
pushf
pop
cltd
xchg
lret
pop
or
cmp
in
xor
jae
divl
sbb
push
rclb
nop
ja
rorl
ret
push
lahf
sub
out
out
frstor
test
mov
dec
adc
mov
enter
iret
enter
push
dec
fdivr
addb
sub
xchg
les
mov
mov
xor
xchg
inc
hlt
mov
out
xor
mov
std
scas
int3
sbb
jne
or
or
fs
inc
sti
sbb
sub
inc
fnstenv
inc
in
xor
arpl
shrb
mov
mov
cs
cs
arpl
rolb
mov
and
cmp
push
add
lods
hlt
cmp
jns
cmpsl
in
inc
loopne
mov
xorb
scas
xor
mov
push
mov
and
je
jmp
mulb
call
dec
scas
lds
or
sti
pop
mov
push
adc
cmp
push
lea
pop
cld
sbbb
mov
lahf
movsb
rcrb
pusha
shlb
popa
pop
and
in
xchg
jecxz
jmp
leave
lods
dec
lock
sbb
xlat
and
cmc
jmp
das
mov
pop
cmp
add
insl
inc
pop
cld
hlt
stc
or
rcll
xor
or
aam
pop
mov
lods
jmp
aas
out
xchg
bound
cmpsb
sbb
pop
leave
pop
cmpsl
xchg
mov
sbb
stos
pop
test
repnz
call
jno
add
rolb
inc
mov
out
cwtl
ss
jno
mov
ds
cmp
shlb
cmp
sub
inc
icebp
mov
out
js
imulb
or
incb
adc
into
mov
outsb
imul
xchg
fbstp
inc
jbe
dec
movl
rcll
hlt
je
fs
pushf
testl
add
or
rcrb
ret
and
addr16
jo
add
and
pop
xor
popa
fwait
cmp
lods
dec
cmp
xor
inc
fucomip
ljmp
cld
dec
mov
pop
in
inc
clc
add
cmp
roll
pop
aas
leave
mov
sub
mov
jae
and
loop
xlat
rcll
xor
xor
or
arpl
mov
fcmovnbe
mov
lcall
cmp
mov
xor
push
in
dec
inc
xchg
pshufw
mov
insl
std
add
and
scas
out
xchg
cmp
jns
mov
lahf
xlat
sbb
test
xchg
add
insl
add
mov
sub
ficoms
mov
mov
xor
xchg
lret
adc
je
mov
pop
aad
test
sahf
mov
mov
sbb
in
ds
divl
mov
jmp
fistpl
xor
addr16
test
inc
mull
mov
loopne
adc
addr16
out
inc
dec
repnz
xchg
mov
push
mov
dec
mov
xor
xlat
xchg
sbb
inc
addb
mov
js
push
cwtl
lock
movsb
outsb
pop
fnstcw
mov
pop
mov
mov
mov
mov
lret
pop
xchg
pop
cmp
mov
clc
mov
sub
cmp
jno
loopne
aas
jb,pn
aam
clc
xchg
ljmp
dec
push
push
xchg
loop
mov
cmp
push
lcall
cli
push
lahf
pop
lea
inc
fdivl
inc
movsb
fcmove
inc
dec
dec
push
inc
sahf
aaa
in
mov
sbb
dec
add
loop
subb
sbb
jmp
jbe
dec
mov
pop
cli
xor
imul
push
push
xor
adcb
fcoml
outsl
je
into
nop
lahf
xchg
pop
repz
mov
das
lock
sbb
popf
add
fcmovb
out
ja
add
lahf
push
adc
loope
aaa
xor
repz
sbb
sbb
nop
adc
inc
into
test
mov
add
push
sub
pop
dec
mov
cmp
rcr
movsl
sub
add
jno
cld
mov
adc
jnp
es
inc
test
lock
mov
xor
jnp
lock
adc
daa
leave
int3
mov
sub
int3
mov
inc
dec
lods
add
add
and
ficoms
dec
sbb
test
cmpsb
cld
and
sbb
lret
out
fsubrs
and
xchg
jle
lock
leave
mov
inc
and
ss
xchg
xor
inc
js
push
divl
je
pop
jns
sbb
mov
and
xchg
cmp
insl
or
enter
mov
mov
out
test
lcall
addr16
lahf
fstps
test
lahf
dec
add
test
add
aad
cmp
xchg
inc
sub
xchg
int3
out
movsb
cmp
adcl
fildll
roll
shl
stc
stos
xchg
mov
cmp
sbbb
shll
leave
mov
xor
mov
les
hlt
dec
addr16
es
rorl
mov
ret
movsb
jbe
imul
jecxz
leave
pop
mov
enter
mov
shrb
imul
add
push
push
dec
sub
lods
in
lods
popa
sub
lret
adc
mov
pushf
jl
adcb
mov
or
sti
adc
cmp
pushl
scas
jp
mov
mov
sbbb
test
imul
xchg
xlat
add
push
pop
int
xchg
inc
cmp
outsl
or
push
dec
out
inc
mov
fs
xchg
enter
fmull
dec
test
xor
or
daa
sub
pop
jge
push
and
add
roll
je
sbb
popa
or
cmp
mov
lods
mov
loope
mov
lret
loope
xlat
mov
add
inc
xor
std
sub
dec
stc
xor
lahf
loop
loopne
pop
repnz
stos
jb
add
mov
or
stos
movsl
push
sub
or
mov
hlt
pushf
aas
aam
mov
dec
cmp
adc
lods
leave
push
add
cli
jecxz
adc
in
fwait
dec
mov
mov
mov
push
loop
xchg
push
push
sbb
lcall
cs
and
lret
negl
jno
cmp
sub
movsl
xchg
add
cmp
sbb
in
movsb
mov
or
push
push
ds
pop
and
addl
stos
xor
mov
out
dec
add
mov
lock
mov
xor
mov
sub
sbb
xor
popa
arpl
fadds
cs
mov
std
in
inc
nop
gs
push
enter
mov
xor
idiv
pop
data16
data16
test
jmp
xchg
push
shlb
stc
out
pushf
inc
outsl
jae
js
loope
lods
or
or
mov
fisubrl
flds
popf
iret
loopne
sahf
fildl
in
cmp
fwait
add
mov
cmp
lret
sti
mov
and
cmpsl
in
js
inc
movsl
mov
cmp
out
sub
std
fwait
stos
daa
sarb
dec
and
xor
jns
add
sbb
out
aaa
sub
mov
shll
mov
sbb
hlt
fsubl
sahf
mov
test
test
dec
and
sub
stos
mov
push
gs
es
cltd
in
out
sbb
icebp
psrlw
add
xor
fbld
fs
push
inc
push
mov
xchg
and
inc
scas
or
jp
imul
or
daa
sbb
add
loop
pop
lea
loop
adc
xchg
mov
je
pop
jge
imul
jle
mull
mov
sbb
sahf
dec
imul
test
movsb
jmp
inc
adc
das
inc
sub
ret
test
fmul
pop
insb
jne
andl
iret
test
movsl
jnp
pop
stos
xorl
dec
sub
repz
xchg
arpl
ljmp
dec
mov
xchg
xchg
outsb
dec
adc
lret
cmp
xchg
xchg
fchs
test
adc
cmp
rcll
lahf
jge
xor
or
mov
mov
je
pusha
popf
add
fbld
in
xchg
mov
cwtl
clc
adc
sub
test
lock
or
xor
js
or
insl
sub
loope
push
sub
icebp
jle
and
adc
push
dec
mov
out
adc
out
mov
shr
cmpsb
sbb
sub
in
sbb
fsubrs
mov
dec
inc
divl
xor
xor
push
subb
sbb
lods
ret
jl
sbb
sub
aam
lahf
jle
fcomps
imul
jbe
and
mov
fwait
cmp
pop
scas
shl
or
pop
mov
inc
push
xchg
jbe
popf
ficompl
fisttpl
lods
test
out
xchg
test
add
or
std
mov
outsl
imul
mov
clc
addr16
cli
or
fdivrl
adc
loopne
jae
pop
cmc
fldenv
xlat
add
push
sub
int
leave
mov
aas
fdivrs
cmp
sub
pop
cmp
sbb
cmp
rolb
mov
arpl
xchg
xor
fdivrs
hlt
mov
jns
dec
adc
and
push
scas
ss
or
xor
jge
negb
mov
cltd
mov
in
push
inc
jmp
movsl
push
test
repz
fwait
insl
mov
lcall
sbb
pop
mov
xchg
mov
es
data16
xchg
fsubrl
mov
aaa
jnp
cmp
adc
add
mov
xchg
pop
out
mov
mov
mov
adc
aaa
test
adc
mov
sti
add
push
pop
adc
dec
adc
test
ret
sti
pop
push
out
imull
iret
scas
mov
insl
cmpsb
xchg
xorl
inc
les
lret
jmp
cli
cs
jno
in
cmp
es
dec
mov
xor
and
xor
rorb
adc
sbb
mov
mov
push
out
test
jmp
data16
es
enter
sub
or
dec
out
pop
mov
shlb
adc
pop
arpl
push
mov
sub
inc
and
adc
aam
sbb
std
pop
fstps
push
cltd
sarl
imul
xor
into
lcall
movsb
rcrb
inc
mov
fidivrl
mov
shrb
xor
cmc
lods
and
xchg
pushf
shrb
pop
sti
das
outsl
inc
inc
mov
scas
inc
bound
push
int3
adc
aas
adc
js
inc
dec
push
sub
pop
and
leave
mov
mov
add
xchg
xor
push
sub
adc
mov
lock
mov
test
pop
jnp
cmpsb
idiv
gs
ficoml
mov
xor
not
pusha
mov
test
mov
jns
enter
pop
mov
sbb
jae
rcrl
das
xchg
or
leave
and
hlt
dec
mov
jae
das
cmpl
rolb
fld
xor
push
loope
sbb
xor
or
shlb
jbe
add
xorb
jecxz
ss
and
aad
dec
fldl
mov
xchg
mov
sub
mov
lods
not
lret
cmp
or
dec
cmp
xorb
imul
lods
push
roll
pop
mov
push
in
sub
sub
mov
adc
cmpsb
sub
and
add
adc
mov
loope
xor
hlt
push
inc
sub
cmpb
adc
jbe
inc
int3
pop
mov
mov
dec
int
daa
push
adc
popf
inc
pushf
outsb
dec
jo
test
addr16
xor
lret
push
out
mov
and
inc
icebp
stc
in
sbb
xchg
insb
call
pop
mov
mov
jne
cmpb
int
popa
std
pushf
mov
adc
cmc
ja
inc
test
sub
pop
aad
pop
iret
test
jo
fcomip
ds
lret
jecxz
pushf
xchg
mov
ficoms
xor
ss
and
pop
adc
pop
sbb
mov
sarb
and
cmc
mov
leave
outsb
jo
xchg
sbb
lcall
jnp
rcrl
je
fmul
lds
ja
mov
sahf
pop
subb
in
fldenv
add
fsubl
mov
pop
jg
imul
mov
arpl
push
mov
xor
or
jecxz
shll
mov
mov
xchg
xor
sbb
dec
mov
out
sub
stc
out
sbb
and
pop
and
lods
xor
jmp
push
int3
cmc
rcll
scas
cmp
js
in
dec
sub
mov
add
cld
sbb
roll
xchg
jo
fisttps
iret
jmp
add
or
test
xor
cmpsb
clc
mov
pop
shll
shlb
cmp
test
dec
insl
psllq
lds
out
es
out
fisttpll
sub
jnp
fcmovne
lcall
stos
jae
xor
sub
jno
test
in
int3
xor
fcomip
loop
clc
adc
cli
gs
jnp
outsb
pusha
jb
inc
mov
xlat
jnp
add
test
adcb
fwait
mov
mov
add
or
dec
mov
fmull
popf
jae
lods
aad
adc
scas
jecxz
mov
mov
cmovbe
gs
sub
push
inc
push
mov
or
mov
mov
mov
ja
jno
shr
mov
rcll
mov
and
mov
inc
and
popf
or
sbbb
mov
in
jb
cmpsl
push
adc
mov
rcr
test
in
in
jnp
movsb
jno
mov
inc
std
adc
cwtl
das
aad
lret
mov
inc
aad
stos
cmp
dec
out
lret
leave
fmuls
mov
inc
pop
pusha
rorl
std
incl
mov
adc
and
leave
test
xchg
cwtl
ss
and
lock
cmp
ss
ret
movsb
hlt
lea
notl
dec
push
aaa
cmp
sub
push
and
inc
popa
pop
push
mov
sti
aad
xchg
xchg
ss
sub
inc
sub
jo
ret
ss
add
push
inc
popf
sbb
or
gs
jmp
add
dec
aas
rcll
daa
sti
cld
dec
pop
xchg
lcall
negl
addr16
xchg
shrb
and
xchg
push
mov
fsts
mov
outsb
jnp
inc
pop
int
and
call
test
add
je
icebp
add
cmp
int3
xchg
push
jmp
and
andl
into
or
fs
std
fdivl
fs
daa
fadds
jmp
lods
fs
mov
mov
jnp
pop
mov
cmp
mov
call
adc
rolb
fildl
rolb
aaa
lahf
or
push
push
fcomp
daa
push
push
sub
pop
stos
and
lea
popf
xor
jns
daa
jge
in
pop
cbtw
pop
aaa
mov
cmc
lcall
out
movsb
inc
orl
push
jne
sbb
movsl
jbe
jecxz
sub
lock
sub
mov
push
and
xlat
mov
fstps
clc
fidivrs
fidivrs
aad
sub
mov
pushf
aam
mov
jae
jno
cwtl
or
and
out
sti
ljmp
cmpl
or
adc
imul
sub
dec
push
mov
popa
or
shr
mov
mov
cwtl
jl
pop
repnz
insl
adc
dec
mov
mov
mov
pushf
outsb
mov
push
movsl
jmp
jge
sbb
cmp
add
es
nop
and
lods
inc
sbb
or
fisubs
mov
and
out
mov
and
in
ds
xchg
lods
cmpsb
cwtl
sub
add
jne
adc
out
out
pop
loope
push
outsb
orl
les
movsb
pop
fidivl
fldcw
cltd
jb
insl
push
scas
test
push
loopne
add
js
in
nop
dec
jae
lret
movsl
cwtl
loop
clc
in
sbb
mov
mov
das
sbb
stos
pop
push
scas
shll
decb
popa
jecxz
mov
add
dec
cmpl
cltd
xchg
movsb
divl
mov
leave
and
mov
xchg
and
fldt
movsb
std
pop
pop
sqrtps
cmp
cmpb
lock
sub
pop
subl
mov
stc
nop
inc
jecxz
bswap
icebp
mov
lea
sbb
ja
fdivrs
es
adc
mov
aas
push
jle
shrl
pop
push
push
adc
jbe
je
mov
mov
adc
add
pop
lods
adc
pop
mov
adc
mov
push
dec
mov
scas
dec
loop
dec
inc
inc
sar
aaa
arpl
mov
inc
pushf
pop
mov
jg
rorb
or
and
leave
lret
pop
dec
daa
out
pop
outsb
mov
add
shl
sbb
xor
inc
mov
js
sub
and
sub
jnp
and
imul
dec
cmp
mov
aad
mov
pop
test
das
add
mov
jo
push
mov
lock
ret
out
insb
stos
cltd
pop
add
xor
imul
adc
xor
mov
pop
cltd
cmp
pop
ja
hlt
jl
dec
data16
mov
jno
jnp
fcoms
daa
cltd
pop
out
insl
movsl
sub
or
testb
mov
cmpsb
jecxz
jno
adc
loopne
sbbl
das
stos
mov
inc
push
cld
pop
lea
add
pop
dec
clc
add
mov
inc
mov
ret
mov
daa
sti
data16
cmc
negb
lret
outsl
frstor
or
push
pushf
cmpsb
mov
add
iret
jecxz
xor
xlat
iret
das
cmp
dec
mov
lret
jb
xchg
fmulp
pop
call
add
jecxz
mov
and
adc
adc
sti
cmp
mov
xchg
mov
cs
test
repnz
loop
aas
push
pop
sbb
enter
add
popf
mov
in
popf
jns
sbb
add
in
mov
ljmp
add
shrb
xor
scas
add
xor
adc
pop
jecxz
push
insb
sbb
xchg
xchg
sub
imul
rcrb
adc
cmp
jmp
pop
icebp
or
add
dec
dec
insl
xchg
add
outsl
movl
inc
xchg
pop
test
hlt
popa
add
loop
scas
cmc
xchg
jbe
sti
xor
pop
xor
mov
cld
push
fcmovnbe
jl
ret
aad
xchg
popa
xor
xchg
sbb
mov
sub
std
das
aam
push
adc
mov
mov
jge
in
or
and
xchg
xor
inc
jne
stc
jge
sub
mov
test
mov
fbstp
out
jp
pop
mov
xchg
pusha
cmp
daa
dec
mov
dec
fwait
pop
and
and
cmp
std
aaa
aad
sub
mov
imul
out
rorb
int3
imul
xor
inc
aas
ja
lret
fucomp
aam
fnstsw
xchg
jecxz
rcll
jbe
mov
ss
jno
push
sbb
frstor
sub
mov
or
cmpsb
imul
and
and
sub
and
mov
frstor
xor
bound
inc
test
sbb
fcompl
mov
shll
cmpsb
stos
cmp
push
push
pop
rcrb
xchg
mov
scas
mov
setne
xchg
cli
add
jg
into
lahf
jmp
dec
cwtl
stos
ja
ljmp
int
xchg
stos
inc
and
popf
icebp
int
out
push
cld
scas
xchg
mov
inc
sub
fwait
xchg
cmpsb
jmp
lods
push
movsl
mov
add
gs
inc
cmp
push
dec
add
push
out
aad
jp
lea
test
mov
loop
push
dec
test
movsb
test
xor
mov
inc
push
mov
fidivl
sub
push
fidivrs
repz
enter
into
out
and
and
mov
pop
testl
jae
mov
lahf
or
gs
mov
test
push
sbb
movsl
loopne
pop
sub
and
scas
movsl
jmp
and
ret
sbb
fcmovnbe
xor
nop
dec
iret
mov
cld
sbb
loopne
mov
shll
dec
mov
and
repz
add
cs
repnz
int3
adcb
rcrb
out
mov
nop
mov
inc
dec
aaa
sub
cmpsl
cmpsl
add
repnz
nop
into
dec
and
xor
lret
jmp
cld
dec
xchg
adc
insb
inc
mul
cmp
lea
mov
out
dec
jp
int3
add
inc
mov
and
mov
adc
inc
or
mov
mov
vcvtdq2ps
push
pop
and
pop
jl
fbstp
push
fists
iret
cs
cmp
ffree
sbb
ficompl
inc
jae
imul
das
cmc
adc
jne
pop
lret
in
push
jl
adc
add
add
addr16
adc
faddl
pop
and
push
dec
movsb
or
jp
add
pushf
mov
xor
and
into
fs
mov
stos
xchg
int3
sub
repz
popa
pusha
gs
jge
jp
mov
cmpsb
inc
dec
push
or
and
add
or
push
bound
in
or
cs
out
add
adc
aam
and
pop
nop
jge
sub
xor
cmpsb
mov
adc
and
jno
jae
nop
fcompl
push
enter
sti
sub
cltd
subl
outsb
loopne
mov
sbb
and
sbb
mov
jp
add
in
mov
xchg
in
shl
cmpsb
mov
cmc
in
adc
pop
xchg
cmpsl
fwait
test
lods
or
lret
aas
pop
push
loopne
pop
xchg
jb
cmpsb
mov
sbb
push
xor
xchg
mov
adc
ljmp
pop
int
pop
xor
mov
sarb
mov
and
mov
inc
add
xchg
add
rcrb
jo
cmc
addr16
xchg
sbb
xlat
ja
push
pop
pop
mov
jb
fmuls
or
es
inc
fldl
pushf
daa
call
fs
loopne
out
loope
dec
cmp
iret
icebp
mov
ljmp
loope
xlat
mov
scas
jle
dec
cmp
in
shlb
in
push
fnstenv
lods
cmpsb
loope
fwait
and
leave
push
fst
jns
test
in
lret
cmp
cmc
jns
pop
jl
pop
sub
mov
aaa
iret
fiadds
push
lock
imul
xchg
lret
cwtl
mov
cmc
mov
and
xchg
sti
test
cmc
add
sahf
aam
mov
andl
cmc
sbb
adc
pop
mov
into
xlat
xor
jmp
cmp
add
sti
xchg
insb
adc
mov
cld
pop
andb
sti
add
mov
lds
xchg
popf
pushf
add
and
decl
sbb
sub
xor
shll
mov
xlat
das
inc
loopne
and
enter
xchg
sub
idivb
ja
scas
push
push
out
rorl
sub
pop
repz
jle
xchg
cwtl
cmp
fs
jg
or
imul
cmp
add
ljmp
int3
ret
jmp
mov
ss
int3
xchg
pop
sbb
fs
pushf
fsts
repz
ljmp
pop
stos
int
dec
dec
std
inc
cmp
pop
inc
cmp
jno
loop
lcall
ja
arpl
pushf
push
in
stos
sbb
iret
or
adc
jmp
pop
mov
inc
mov
mov
push
cmpsl
outsb
ret
adc
sub
and
mov
add
push
jle
sub
and
sbb
xlat
push
outsb
aaa
out
das
sahf
xor
test
inc
xchg
push
mov
subb
push
and
add
xchg
adc
dec
aam
add
lods
rolb
iret
sbb
adc
mov
xchg
push
xchg
jp
xchg
adc
je
sub
loop
pop
std
inc
popf
in
mov
push
jnp
mov
dec
xor
imul
sbb
sub
or
js
push
and
das
dec
lret
scas
lods
push
gs
dec
aaa
orb
mov
inc
arpl
stc
pop
add
shl
mov
pop
or
stos
adc
sub
push
outsl
xor
xlat
add
xchg
jp
loope
nop
repnz
out
sub
cmp
test
pushfw
testb
and
mov
mov
pop
fiadds
es
std
jo
pop
stos
mov
xchg
bound
lret
fisttpl
xor
insb
jne
mov
lock
cltd
ss
scas
xchg
in
addl
icebp
int3
cmp
rcr
rclb
insl
leave
in
dec
and
or
lcall
or
int
push
pop
movsb
or
mov
incl
je
frstor
jp
addr16
dec
lea
inc
mov
push
pop
scas
inc
adc
push
xor
mov
jb
inc
jmp
push
inc
push
mov
cmp
mov
mov
sbb
std
fucom
nop
mov
push
inc
or
sub
cli
rorb
in
rcr
xchg
mov
jae
xlat
das
and
push
jnp
js
mov
sbb
pop
test
imul
insl
jp
xchg
aas
sub
lods
ljmp
nop
xchg
fwait
xlat
lods
xchg
lret
push
out
or
push
aaa
fwait
push
cmpb
add
icebp
repnz
xor
decb
and
sub
aam
in
push
pop
nop
cmp
pop
mov
lcall
mov
sbb
fists
sahf
push
rcrb
and
sahf
or
or
mov
pushf
and
fistps
ret
mov
jmp
in
lea
push
outsb
dec
loopne
aas
sbb
cmp
mov
insl
add
jg
in
notl
jge
loope
mov
pushf
mov
int
adc
push
insl
cwtl
sti
cmc
push
jge
std
push
mov
popf
push
lahf
mov
or
mov
ds
inc
in
jecxz
xchg
in
shrl
add
xchg
insb
enter
out
sub
test
add
icebp
sbb
jae
sbb
test
in
sti
mov
pushf
sub
stc
push
incl
mov
jb
les
mov
pop
sub
sbb
and
sarb
xchg
pop
stos
sbb
cmc
push
jp
cmpsb
cli
dec
popa
jae
addl
fs
das
setae
in
out
mov
sbb
popf
jp
dec
hlt
xor
jae
mov
pop
scas
mov
xchg
jl
aad
cmp
mov
push
out
pop
adc
push
shlb
push
shrb
xor
adc
add
push
pushf
push
add
push
cltd
sbb
add
dec
into
hlt
and
sub
addr16
mov
jo
and
ss
jnp
push
jle
xor
mov
and
insb
jge
loope
dec
fldt
mov
mov
out
dec
ja
dec
adc
push
rol
lods
add
mov
push
dec
pop
push
aam
mov
mov
dec
test
and
call
adc
lods
pop
dec
dec
mov
int
jg
push
or
fidivl
out
and
fidivs
jmp
scas
mov
push
cmp
jo
icebp
sti
arpl
xor
sub
pop
es
mov
xchg
stos
add
add
fimuls
add
daa
pop
outsl
cmp
add
pop
sub
fstpt
sahf
mov
loop
dec
stc
dec
jb
leave
test
loop
xchg
inc
push
and
aaa
adc
push
dec
cltd
xlat
outsl
add
sbb
ret
mov
jmp
inc
or
jns
adc
dec
clc
dec
push
or
or
mov
mov
es
lods
data16
adc
mov
cmp
rcrb
fildll
jecxz
pop
mov
lds
adc
jmp
dec
js
or
aam
mov
mov
cmp
sbb
cmpsb
into
cmpsl
push
fcompl
and
add
or
cmp
test
fsubrl
lods
bound
push
aas
gs
or
xchg
mov
cmp
pusha
aad
mov
sbb
pop
jns
xor
mov
pop
dec
mov
mov
adc
mov
jp
pop
xorl
or
outsb
xchg
out
sbb
xchg
mov
mov
ss
push
mov
repz
aas
pop
dec
pusha
data16
enter
add
int3
mov
pop
les
daa
jne
and
orb
or
sbb
add
pusha
pop
int3
pop
jb
dec
dec
test
dec
and
inc
inc
xchg
sub
dec
or
lcall
repnz
inc
mov
or
jb
inc
cld
orl
lret
mov
mov
loop
push
push
daa
jp
sub
jns
sbbb
mov
outsb
popf
xorl
adc
mov
add
aaa
fstpl
daa
mov
sub
rorb
push
std
out
divl
mov
outsl
insl
mov
fnstenv
xlat
jae
dec
push
lods
cmp
test
push
dec
aad
sahf
jno
jns
iret
dec
pusha
cmp
movsl
call
mov
push
cmp
push
and
push
cmp
push
std
jge
mov
mov
sub
mov
in
mov
and
cwtd
rcll
decl
add
fistl
out
mov
dec
popa
lods
in
push
sub
cs
cwtl
jne
ret
cli
int
bound
xor
inc
xor
stos
sub
push
xchg
xor
mov
roll
and
shrd
push
cmc
loope
adc
fucomp
aas
sarb
je
sbbl
inc
mov
clc
inc
sub
xor
imul
adc
add
inc
into
je
xchg
push
add
jmp
sub
daa
mov
shll
gs
cmp
sbb
clc
mov
xor
push
andb
xlat
fisttps
hlt
mov
aad
out
jb
loope
lret
xchg
hlt
pop
mov
mov
adc
cmp
cmp
ja
xor
fs
xor
inc
mov
inc
movsl
jae
mov
adc
pop
mov
jae
arpl
filds
cmp
cmp
jno
lret
or
xor
fsubl
mov
push
inc
inc
arpl
and
idivb
xchg
adc
push
mov
inc
in
ds
orb
add
dec
mov
mov
daa
pop
adc
xchg
and
cli
cld
into
pop
out
int
xor
mov
adc
insb
mov
mov
dec
adc
cmp
adc
ja
jb
push
inc
cmp
fs
scas
xchg
out
push
in
mov
pushf
aas
xchg
push
sub
iret
dec
scas
sbb
or
push
mov
mov
mov
push
mov
xchg
pop
rclb
cmp
push
or
subl
lods
or
daa
add
out
mov
inc
out
push
ja
movsb
pop
push
loope
jg
jbe
mov
fidivrl
in
pop
mov
movsb
mov
pop
loopne
xlat
sbb
pop
lods
pop
add
and
out
idivb
push
mov
xchg
pop
js
rclb
cmp
add
daa
push
dec
jne
outsb
inc
jno
movsb
leave
jnp
push
fisubrs
rclb
ds
rol
mov
dec
inc
xchg
mov
sub
inc
adc
decb
dec
sahf
js
lds
adc
jne
clc
pop
rcrl
mov
mov
xchg
pusha
jp
dec
lods
out
nop
arpl
jl
test
jbe
mov
push
mov
dec
mov
xor
rclb
dec
dec
test
cmp
jbe
mov
cltd
push
js
outsl
insl
jmp
sti
jo
test
xor
fs
mov
xor
aam
mov
ds
sbb
lods
jns
repz
xchg
stos
mov
push
fwait
adcl
jns
mov
sub
int
pop
and
cmp
je
xchg
add
loopne
arpl
insl
andb
add
xchg
push
or
mov
pop
movsl
or
cmp
mov
push
dec
mov
xchg
mov
testb
mov
loop
icebp
xchg
push
xchg
xchg
jnp
sbb
sti
push
cmc
jno
out
xor
jne
push
ljmp
push
popf
in
test
jo
and
lea
xchg
cs
and
add
ds
mov
cld
std
fisubrs
push
sbb
push
pop
adcl
dec
xchg
add
pop
push
sahf
mov
cmp
fld
ljmp
sub
and
jecxz
push
mov
dec
jbe
mov
mov
lods
out
or
pusha
lods
jg
or
sub
fwait
stos
mov
xchg
mov
xor
push
lock
jns
negl
fs
aas
ret
inc
xchg
ljmp
shl
add
push
int
dec
out
mov
shll
lock
mov
rcrl
pop
xlat
mov
cmpsb
pop
pop
cmc
mov
mov
push
bound
mov
loopne
xor
nop
jo
push
iret
mov
jmp
testb
popf
sub
push
mov
mov
or
ffree
xor
inc
mov
jl
push
sbb
int3
addr16
inc
in
xor
icebp
cli
adc
cmp
xchg
mov
mov
add
arpl
jle
mov
mov
dec
std
mov
pop
inc
in
mov
adc
frstor
mov
out
dec
insl
mov
push
sub
insb
cmc
push
jno
lea
std
pop
sub
pop
add
leave
sbbl
push
mov
jge
pop
fsubr
and
xchg
lret
add
insl
jecxz
leave
adc
cmc
or
pop
and
lahf
pop
test
out
mov
cmp
in
pushf
adcb
adc
imul
movsl
cmp
fisttpl
int3
and
jb
ja
cmpsl
inc
icebp
xchg
test
sarl
pushf
sbb
je
pop
pop
insl
sub
push
jb
xchg
ds
and
sub
bnd
nop
and
lods
int
shr
loop
xor
testb
pop
mov
lods
and
imul
in
cmp
mov
sub
cs
scas
inc
lock
adcb
mov
mov
stos
mov
pusha
mov
mov
stos
push
pop
js
pop
movl
jmp
jecxz
int3
fmull
dec
jp,pn
mov
inc
hlt
out
jne
in
and
repnz
xchg
stos
mov
jmp
dec
xor
fimull
aaa
ja
ss
inc
mov
cmpsb
xor
jno
movsl
add
mov
jmp
stos
xchg
lahf
mov
loope
out
mov
pop
or
in
jmp
push
pop
adc
cmpsl
inc
mov
les
pop
or
test
push
pusha
inc
fiadds
or
add
mov
movsb
add
decb
cmpsb
pop
inc
imul
outsl
movsl
pop
cli
lea
jge
inc
imul
aad
test
jb
imul
jne
fs
push
loope
xor
or
loope
mov
test
sti
push
aad
dec
das
jnp
ljmp
jmp
dec
mov
push
aad
xor
jmp
xchg
rol
orb
or
mov
into
into
das
lock
and
and
mov
cwtl
lock
xor
movsb
leave
fdivl
mov
out
sarb
jg
mov
ja
pusha
lcall
lret
push
push
dec
iret
xor
fcomps
cld
dec
jno
push
xchg
das
lret
jne
popf
faddl
mov
cmpsl
xchg
addr16
xchg
mov
xor
idiv
sbb
adc
dec
mov
icebp
xchg
popf
dec
movsb
mov
in
inc
mov
sahf
shlb
imul
cmp
pop
sbb
jns
push
or
sbb
mov
repz
adc
gs
pop
clc
fbstp
imul
imul
cmpsb
imull
repz
push
gs
in
lock
insl
arpl
cmp
mov
xchg
xor
in
xchg
dec
mov
inc
lods
loop
mov
push
lock
popf
mov
mov
cmp
out
jecxz
daa
orb
test
add
add
fnstenv
jg
nop
xchg
mov
mov
lahf
inc
jnp
pushl
jbe
insb
stc
ljmp
cmp
pop
out
add
fucomi
inc
stos
cltd
or
out
push
loope
dec
daa
lea
out
repz
xchg
xor
mov
leave
mov
mov
jb
lret
call
push
sub
sbb
and
add
popa
xchg
rcrb
fld
outsw
aaa
dec
js
call
adc
sub
pop
jge
mov
imul
jb
call
add
dec
xlat
cmpl
test
push
fwait
push
stc
or
leave
outsb
mov
mov
mov
push
mov
aam
inc
out
cmp
test
xor
cmpb
fldt
adc
push
jmp
lock
pop
iret
outsl
hlt
shlw
mov
stos
xchg
pusha
pop
mov
out
and
ret
testl
lock
cltd
outsb
jg
loopne
pop
es
mov
std
pusha
int3
aaa
ds
mov
inc
cmp
and
movsb
pop
mov
outsb
mov
xchg
dec
ja
jge
cmpsb
lret
jae
mov
ret
repnz
scas
sub
push
dec
ret
insl
dec
int3
sub
sub
dec
ljmp
jae
insl
test
push
sbb
xchg
inc
pop
inc
cmp
xlat
jo
jmp
inc
jmp
in
iret
shlb
mov
jb
stos
cmpsb
fisubrs
ss
mov
stos
mov
notb
or
adc
inc
stc
mov
sub
mov
repnz
xor
mov
dec
data16
lahf
cld
call
mov
lfs
inc
movsl
jge
ss
mov
adc
pop
and
scas
or
jne
in
gs
lods
pop
lahf
loope
loope
mov
ljmp
addr16
sub
pop
out
sbb
push
or
cs
imul
fwait
fmull
dec
mov
int
cwtl
jg
pop
ret
lcall
loopne
add
out
inc
mov
dec
je
jp
aam
iret
mov
int
cmp
std
lret
ror
add
and
and
and
lcall
adc
mov
jecxz
sub
sub
cmp
add
in
push
lea
in
stos
xor
hlt
xor
jmp
xor
adcb
sahf
jns
addr16
cmc
mov
push
cmpsb
dec
iret
mov
aas
in
fsubr
jmp
mov
cld
shll
nop
nop
jmp
sbb
adc
stos
pop
xchg
enter
jno
xor
enter
jae
or
adc
call
addr16
sub
dec
std
jne
fs
and
insl
shrl
fiaddl
sub
lcall
add
movsl
addr16
and
xchg
je
pop
push
mov
cmp
movsb
inc
sti
ja
int3
mov
enter
in
ljmp
pop
gs
mov
mov
fcomp
shlb
loopne
jb
movsl
xchg
js
inc
adc
arpl
mov
mov
test
dec
addl
jnp
or
cltd
lea
repnz
sbb
and
sbb
add
mov
int
jecxz
dec
int3
adc
jo
shlb
aad
lcall
aam
lea
dec
mov
test
out
daa
gs
sbb
loope
mov
mov
mov
xor
cli
mov
je
lods
sbb
jae
mov
jge
add
add
xor
mov
xor
scas
ret
push
repz
and
imul
test
call
movsl
inc
pop
test
cmp
inc
cmp
rolb
and
repnz
push
sub
mov
negl
or
cs
adc
je
and
rorl
mov
cld
stos
ret
rclb
mul
ds
xchg
jg
movsl
jo
xchg
cmp
dec
and
pop
shll
stc
xchg
xor
clc
data16
xchg
mov
fiadds
dec
add
cld
lret
jle
add
jg
inc
fmull
pop
fs
dec
cmpsb
cltd
adc
mov
pop
mov
dec
xchg
in
dec
popa
mov
jecxz
add
or
test
jne
fwait
dec
push
push
push
aam
out
movsb
pushf
lods
pop
es
out
call
imul
pushf
clc
cltd
sbb
cld
outsb
cld
and
testb
sbb
cmp
cmpsb
lret
add
imul
jno
iret
data16
hlt
inc
subl
fldcw
lock
push
stos
test
and
jle
popa
incb
std
mov
push
outsb
jecxz
movsb
dec
loop
jmp
cmpl
inc
das
jge
inc
push
xor
cltd
sbb
inc
add
cmpb
add
dec
xchg
sahf
sbb
data16
ss
mov
das
sti
aaa
cld
test
out
insl
or
lcall
test
aas
cltd
mov
mov
fsubl
popf
fidivrs
push
jb
movsb
outsb
arpl
int3
fpatan
add
test
adc
inc
cli
and
push
lcall
pusha
pop
cmp
popf
testw
fnstcw
movb
sbb
stos
cltd
jmp
jae
js
jns
stc
sub
pop
addr16
into
fmulp
jg
imul
mov
pop
adc
aaa
xor
lea
add
int3
shrl
rclb
or
mov
push
mov
sbb
sar
lea
xor
mov
pop
add
cmp
into
ret
mov
xchg
mov
stos
repz
enter
ret
and
push
xchg
cs
lea
cli
push
ficoms
jns
cmp
shrl
cli
inc
popa
js
ljmp
sub
into
jge
sbb
sbb
pop
test
fnstenv
add
and
sub
std
mov
in
xchg
push
inc
hlt
mov
add
jmp
les
jo
push
push
hlt
or
pusha
xlat
enter
inc
dec
jl
test
pop
mov
mov
rdtsc
dec
in
mov
cli
or
jae
mov
jge
jecxz
int
repz
data16
stos
add
xor
jne
sarl
imul
stos
rcrl
test
jecxz
dec
pop
imul
mov
push
repz
and
cmp
jns
dec
imul
push
imul
dec
loope
fstpt
pop
loope
bound
jo
les
sub
adc
rclb
es
cmp
repz
adc
movsl
outsb
pop
lods
pop
loop
inc
hlt
inc
ret
ret
insl
pop
sub
in
sbb
cmp
sub
adc
fnstcw
insb
rcll
rorl
and
mov
dec
scas
jp
lahf
aas
bound
aas
pushf
inc
push
enter
pop
shlb
push
enter
mov
mov
movsl
sbb
rorb
pop
addr16
aaa
mov
aaa
pop
push
fwait
clc
sub
cs
or
pop
filds
cli
cmp
push
icebp
mov
jo
or
xor
push
sbb
test
pusha
or
aas
call
xchg
lods
adc
out
scas
sbb
xchg
xchg
mov
mov
in
add
xchg
jg
pop
movsb
and
fadds
or
jno
lahf
sarl
sbb
out
mov
mov
jge
cmc
push
or
shl
pusha
jb
add
gs
jle
sbb
cmc
pop
add
and
adc
enter
pop
mov
sahf
in
pop
gs
aam
xor
cmp
stc
sbb
adc
push
in
pop
int3
mov
jno
inc
mov
jg
cltd
imul
lret
lcall
repz
add
lahf
icebp
leave
stc
xchg
xor
or
dec
and
mov
jns
leave
add
pop
int
leave
jne
xorb
dec
ds
and
repnz
je
or
jbe
xchg
cld
mov
and
pop
push
dec
pop
sahf
add
jnp
mov
cmp
xchg
stos
dec
mov
stc
ljmp
imul
add
cs
repnz
outsl
test
push
sbb
sbb
fidivrs
mov
cmp
inc
scas
xchg
rclb
xchg
jae
out
lcall
pop
in
add
das
fdivrp
cld
xchg
stos
andps
stos
add
into
mov
xor
sbb
enter
cmc
adc
test
jo
pop
jo
int
xchg
dec
xchg
sete
push
hlt
test
nop
jg
subb
ss
adc
cmp
dec
shrb
call
adc
jo
call
xor
jne
jl
mov
faddp
std
aam
lea
insl
adc
xor
jnp
and
add
or
and
leave
aas
add
lods
dec
jp
pop
mov
insb
ret
jb
sarl
pop
sahf
jne
repnz
icebp
jge
sahf
sbb
xor
lea
mov
sar
inc
xchg
scas
dec
hlt
xor
je
sahf
je
xor
mov
add
pop
pop
imul
xor
push
and
gs
push
push
ds
stos
adc
mov
outsb
mov
or
int3
xor
orb
cmp
mov
fdivr
aam
popa
mov
sti
jnp
push
in
ds
outsl
xor
shlb
iret
jg
lock
sbbb
test
or
push
movsb
jnp
loopne
pop
mov
push
add
or
lock
lret
xor
and
sti
shrl
sbb
inc
dec
popa
hlt
cld
out
dec
loopne
xor
push
push
data16
and
push
sahf
jecxz
imul
fldl
mov
lods
jge
test
pop
mov
inc
cli
aad
adc
and
push
xchg
adc
mov
inc
imul
enter
mov
sub
xor
jecxz
and
mov
cmp
stos
push
and
sahf
pusha
xor
push
pop
dec
aam
sub
mov
mov
mov
int3
repnz
push
cmp
mov
jge
rcrb
mov
roll
jmp
pop
adc
mov
add
add
cs
int
ss
inc
fnsave
mov
mov
scas
in
repnz
lock
xchg
shlb
or
insb
aad
mov
rcll
jae
add
xor
movsb
popf
out
shl
mov
and
jbe
mov
jbe
repnz
call
inc
inc
jne
push
xchg
test
insl
pop
ds
leave
push
sub
testl
push
push
push
sbb
movsl
icebp
mov
adc
lahf
xchg
and
mov
mov
aas
add
pop
orb
dec
xlat
lahf
mov
icebp
imul
jne
cmp
cltd
in
adc
mov
andb
xor
dec
push
xor
int
pop
jnp
jg
inc
icebp
ret
or
xchg
jp
lods
xor
pop
lock
add
out
aas
cmp
and
jl
popa
lea
push
dec
jns
xlat
cmp
pop
inc
lea
push
or
or
and
xor
pop
testl
mov
je,pt
ja
clc
add
inc
sub
xor
outsl
xlat
int3
mov
mov
or
lret
out
std
repz
test
lods
jnp
fsubs
mov
dec
pop
fstl
adc
je
push
mov
jp
test
push
push
jb
xchg
mov
adc
aas
lret
rcrb
inc
sbb
cmove
add
loop
sbb
lds
mov
inc
sbb
inc
and
cwtl
sarl
xchg
je
add
loopne
rcll
push
dec
nop
lock
nop
movsl
popw
in
mov
xchg
sahf
adc
pop
fdiv
adc
mov
sbbb
fldl
dec
xchg
std
pop
mov
add
cli
shr
es
test
dec
in
jle
scas
das
push
hlt
mov
and
idivl
ss
xchg
mov
sub
inc
clc
and
mov
adc
sbb
and
fs
xchg
negb
sbb
push
sbb
cmc
popf
lcall
jmp
pop
and
sti
lret
test
sahf
lock
and
and
sbb
orb
aam
idivl
xor
push
pop
cli
data16
outsb
sub
cltd
inc
popf
xchg
cmpsl
dec
and
fnstcw
push
mov
iret
out
data16
sbb
xchg
into
repnz
imul
sahf
push
jne
mov
enter
ds
rcl
inc
add
repnz
es
test
scas
pop
jmp
add
fnstenv
sti
gs
push
or
icebp
mov
cmc
out
cmc
shll
xor
scas
push
imul
lcall
xchg
rorb
shrb
xlat
xchg
das
ja
push
and
xchg
xchg
scas
lea
imul
xchg
test
das
insb
movsl
and
push
adc
pop
pop
outsb
add
fists
and
clc
aam
mov
imul
test
imul
xor
xor
nop
test
popf
xchg
adc
push
sbb
sarl
les
jle
push
pusha
cmp
push
xchg
push
inc
pop
divl
lahf
inc
ja
pusha
fisttpll
xchg
cmpsl
push
jbe
xchg
dec
pusha
repnz
fs
mov
inc
mov
fucom
inc
jnp
movl
jmp
in
out
cmpsl
xchg
add
mov
adcb
in
mov
jne
xchg
jl
push
inc
outsl
dec
adc
out
pop
les
cmp
subl
je
pop
sbb
mov
test
and
mov
lret
repz
push
jbe
xchg
cld
mov
test
es
pop
push
xor
mov
repnz
lock
fisubrs
sbb
cld
jb
add
sbb
pop
push
add
lret
xlat
sub
mov
or
hlt
xchg
scas
sub
leave
xor
icebp
out
and
add
sarl
dec
mov
mov
push
mov
sub
mov
je
std
pop
mov
mov
jmp
push
xor
inc
dec
jno
adc
sbb
ja
or
out
pop
add
mov
mov
into
je
daa
jb
bound
inc
or
sub
fucomip
sub
into
cmp
fsubrl
and
lds
out
mov
mov
in
sub
fwait
insb
sub
jb
jb
jmp
push
dec
push
push
scas
aas
mov
and
aad
mov
imul
aas
movsl
aam
in
mov
call
lods
or
xchg
and
or
fsubrs
inc
je
jmp
cmc
sarb
iret
mov
pop
movsb
stc
dec
jl
xchg
xchg
mov
fidivs
das
test
in
push
add
lds
add
inc
mov
push
fwait
in
mov
push
or
cltd
mov
ds
ret
scas
repnz
les
mov
jb
pop
mul
dec
cmp
mov
mov
inc
and
vpsubq
xor
or
pop
and
jl
xchg
test
push
and
mov
jae
push
lret
adc
ja
mov
mov
loopne
push
test
daa
testb
pop
cmp
fiadds
adc
call
repnz
fsts
iret
insb
incb
xchg
notb
push
data16
sti
inc
mov
jns
ja
pushf
mov
incl
cmp
mov
xor
and
xor
cmp
mov
xor
scas
dec
mov
imul
xchg
pop
mov
lock
xchg
scas
pop
or
jmp
push
mov
jl
aam
gs
pop
mov
dec
mov
push
rolb
pop
xchg
std
popa
outsl
push
iret
mov
out
mov
loopne
cwtl
scas
subb
xor
inc
xlat
imul
lcall
fcompl
jno
aam
in
add
xchg
xchg
arpl
mov
mov
xchg
dec
push
pop
and
lock
cld
ror
cmp
mov
inc
xchg
mov
and
divl
nop
ror
movsl
pop
xchg
loop
aad
das
das
shll
stc
jae
or
icebp
into
pop
lcall
jmp
loopne
mov
shll
pop
and
in
mov
imull
push
adc
mov
and
push
sub
pop
fwait
cmpsl
sub
mov
xchg
jne
jns
adc
outsb
mov
pop
cmp
mov
je
out
sbbb
xlat
add
dec
dec
jecxz
imulb
jnp
rolb
enter
mov
sbb
cltd
movsl
jno
sub
popa
mov
mov
xor
push
cmp
cmp
cmp
inc
sti
pop
ja
arpl
std
loop
xor
mov
mov
sub
roll
or
xchg
es
jg
sti
outsb
outsb
lret
daa
jle
out
enter
addr16
imul
inc
in
stos
mov
clc
xchg
lods
lret
sub
push
jecxz
mov
and
mov
push
and
or
mov
pop
cmovo
negb
sbb
sub
test
movb
lahf
ss
inc
xor
call
mov
xor
mov
stc
push
cmp
jne
aaa
in
mov
mov
xorl
hlt
out
mov
lods
arpl
mov
fsubrs
adc
mov
imull
test
cmp
pusha
push
xchg
jne
popa
mov
inc
fucomip
jmp
fisttpll
lcall
mov
sub
jne
cmpsb
leave
clc
dec
mov
xor
cwtl
mov
or
pop
fldl2e
xchg
mov
outsb
adc
in
fdivrp
sbb
add
lods
js
add
pushl
lret
mov
lret
cmp
bound
pop
push
cmc
or
cli
xor
sbb
push
nop
inc
call
or
insl
std
xor
xchg
movsl
aas
ss
scas
push
mov
stc
test
xchg
add
inc
jp
aas
push
movsb
clc
outsb
cmp
fnstenv
xor
sbb
inc
xchg
out
push
rcll
call
imul
xchg
cmpsb
fbstp
mov
jns
lcall
popf
mov
push
enter
test
in
out
sbb
jno
xor
cwtl
inc
jmp
fldenv
mov
aaa
jbe
aas
imul
jbe
mov
rol
xor
inc
push
ds
cmp
cmp
push
scas
adc
mov
push
inc
out
mov
arpl
sbb
repnz
dec
and
xchg
xor
negl
add
imul
fs
adc
lds
imul
xlat
pop
iret
roll
aaa
stos
mov
fdivrl
jns
pop
fstpl
inc
dec
ret
jne
mov
rorl
cmp
mov
test
iret
push
dec
shrl
mov
psubusb
dec
or
in
dec
xor
aad
inc
ljmp
jmp
inc
int
xchg
in
push
jno
ficoms
cmp
test
jno
js
xchg
inc
sub
fidivs
push
push
aam
data16
mov
data16
arpl
call
adcl
lds
vaddsd
jp
rcll
and
dec
adc
xchg
shll
es
sub
in
frstor
xchg
cld
sahf
pop
jbe
mov
push
loopne
xchg
sahf
inc
dec
test
mov
dec
push
std
int
fs
clc
into
cmp
aad
inc
in
es
int
fcmovne
add
jno
cmp
mov
fidivs
out
lea
fisubl
scas
cmp
cmp
mov
sub
sahf
mov
push
int3
insb
ds
add
test
fwait
cwtl
ror
in
push
or
xchg
xchg
arpl
and
push
aas
lahf
in
xchg
pop
push
dec
lret
mov
gs
mov
jb
mov
shll
push
sub
fwait
sarb
sub
lahf
stc
movsb
std
push
out
lahf
nop
xchg
pusha
out
inc
xor
inc
mov
lret
cltd
lcall
fbld
stos
xchg
mov
outsb
mov
test
push
mov
hlt
testl
mov
std
stos
add
adc
xor
dec
gs
out
push
xor
cs
dec
cwtl
sub
popa
fs
imul
add
je
fldcw
jmp
jae
aas
cmp
pushf
mov
ds
cld
je
add
jo
fadds
cmp
mov
mov
add
mov
jo
xlat
lahf
out
cltd
push
ffreep
pusha
pop
scas
mov
adc
add
fwait
jno
add
jae
jg
xor
shrl
mov
add
mov
mulb
loop
ljmp
jb
mov
jle
test
dec
pop
mov
add
sbb
add
adc
cli
inc
xor
stc
cmp
push
push
ja
test
ret
cmp
cmc
add
jb
add
int
cmpl
gs
xchg
sub
inc
test
add
sbb
push
inc
std
add
jno
inc
clc
hlt
mov
jno
add
rol
add
cmp
jge
aam
in
int3
fdivs
call
xchg
inc
inc
cwtl
pusha
mov
addb
mov
xor
lods
js
insb
pop
les
or
aam
add
sub
xor
and
loopne
mov
mov
sub
xchg
sti
mov
mov
xlat
fdivl
mov
add
stos
push
ret
scas
mov
inc
push
xor
ja
das
sub
push
addr16
add
sahf
cmp
cli
adc
out
scas
and
mov
add
mov
jae
loop
mov
ljmp
loop
add
jp
bound
rorb
jo
jle
xlat
adcb
aam
dec
add
push
or
and
fsts
add
xor
cs
outsb
add
jle
test
add
stc
lea
aad
shrl
add
cmp
ds
test
pop
sbb
pop
jns
mov
stc
loopne
xor
in
ds
cld
add
test
mov
loopne
dec
popa
xchg
fdivrl
cmp
je
insb
mov
in
shlb
les
xor
and
dec
call
add
pop
insb
pop
and
lods
xor
jmp
rcrl
iret
sub
adc
sti
scas
stos
aad
out
lahf
jecxz
dec
lret
sbb
ret
fs
arpl
push
cmpb
add
and
dec
add
pop
adc
adcb
imul
je
add
inc
sbb
pop
ror
in
pop
or
pop
add
adc
xchg
xchg
fcmovb
movsb
daa
jne
jbe
jp
repnz
pop
dec
js
xchg
rorb
xor
pop
andb
jecxz
add
dec
pop
hlt
pop
cmc
neg
inc
es
lcall
lcall
std
cmpsb
push
pop
test
nop
int
xchg
scas
jne
hlt
mov
mov
or
jno
out
add
int
sbb
inc
jns
std
mulb
push
add
pop
and
push
add
or
popa
fiaddl
push
call
clc
gs
testb
add
sbb
hlt
xchg
pop
pusha
jb
test
pop
jl,pt
add
sbb
ss
pusha
xor
ljmp
push
fcomip
cwtl
xlat
xor
mov
iret
and
repz
movl
push
int3
fwait
aas
stos
xchg
enter
cmpsl
xchg
sub
pop
sbb
jnp
testl
and
das
or
pop
orl
mov
out
in
fiadds
testb
shrb
jp
ljmp
xchg
inc
jp
jb
cmp
xchg
into
dec
add
mulb
or
xor
adc
in
inc
sarl
mov
fildll
mov
fxch
xchg
subl
movsl
pop
pop
or
inc
mov
add
xor
sub
push
jno
hlt
mov
add
xor
inc
inc
add
cli
div
out
rorb
jnp
mov
imul
pop
push
push
dec
add
inc
aas
cmp
xor
mov
or
pop
sbb
add
dec
mov
lret
mov
scas
stos
mov
sahf
lcall
jle
pop
jbe
add
sbbb
cmp
add
and
sbb
push
adc
or
add
stc
push
cmc
icebp
in
jmp
add
int
mov
test
xchg
cwtl
jp
mov
jno
pop
imul
inc
cmp
sub
mov
or
lock
call
fcom
ror
enter
mov
add
pushf
shlb
cmpb
insb
push
pop
push
push
dec
dec
add
cmp
sub
add
sbb
adc
or
add
sti
div
out
out
add
fcmovnbe
ror
lret
mov
mov
mov
mov
out
sbb
push
adc
jge,pt
orb
stos
push
add
popa
sbb
pop
or
jp
loope
pop
sub
jnp
adc
push
call
mov
push
mov
xor
and
adc
ret
mov
sub
or
cmc
dec
negl
mov
pop
popa
nop
add
arpl
mov
xor
xadd
shrl
roll
mov
popa
clc
lea
adc
add
in
sar
add
ret
sub
shlb
sar
jmp
jae
int
js
mov
add
sub
clc
add
stos
loop
cltd
dec
imul
rorl
jge
pop
add
dec
xchg
pop
xchg
test
mov
les
sbbb
dec
cld
and
or
xchg
add
jb
shlb
cmp
mov
xchg
adc
and
push
add
pop
xchg
faddl
movsb
loope
ds
inc
pop
or
cmp
shll
addr16
add
add
leave
mov
push
inc
add
cltd
adc
lcall
int
ljmp
scas
or
xor
inc
mov
dec
out
sti
adc
pop
pand
lea
adcb
dec
incl
hlt
sub
fsub
iret
add
gs
pop
nop
xor
add
faddp
adc
orb
fwait
sub
aad
test
ret
roll
mov
fs
push
lahf
imul
sbb
testl
inc
mov
sub
adc
stos
push
lds
add
mov
pop
dec
movsl
mov
mov
or
or
scas
cmp
push
addr16
out
sbb
mov
push
sub
loope
std
lods
jne
jge
insl
jg
inc
dec
scas
sbb
ds
andb
pop
mov
add
push
cmc
std
ds
add
sbbb
fmull
nop
xchg
sbb
adc
mov
inc
pop
mov
in
add
lcall
jmp
mov
adc
inc
cmc
clc
sub
add
popa
sub
neg
mov
xchg
pop
ret
cmpsl
sbb
add
add
add
sbb
nop
push
jb
paddsw
ret
pop
mov
add
mov
add
not
pop
into
adc
add
dec
lock
sbb
rcl
sub
pop
frndint
int3
add
mov
addb
aad
cs
jnp
lods
add
mov
orb
jne
cli
inc
add
cltd
jnp
sarl
add
push
cmpsl
pop
nop
jb
dec
xor
mov
loopne
or
cmp
cmpsb
jns
fcmovb
adc
dec
add
xor
sbb
stos
test
outsl
mov
loopne
push
pop
subb
mov
test
xlat
mov
jg
jae
bound
xor
es
pop
inc
rcrb
jg
leave
add
or
cmp
neg
sub
les
mov
push
in
repz
and
stos
add
mov
add
jno
mov
stos
push
repnz
push
pop
insb
inc
and
xor
dec
xor
aam
push
pop
and
or
mov
xor
stos
jge
aaa
add
push
rclb
movsb
cwtl
add
mov
stos
ret
mov
imul
lcall
xchg
add
pushl
inc
sub
inc
stc
jle
or
and
orb
adc
stos
loop
pop
mov
jmp
add
sub
add
mov
sti
ret
movl
dec
mov
fstpt
sarb
mov
jmp
push
jp
add
pop
call
test
push
jno
sbb
clc
inc
mov
cmp
fsubr
and
ret
pop
xorb
mov
mov
lods
xchg
add
test
enter
add
mov
inc
mov
test
pusha
mov
inc
push
pop
std
dec
in
pop
add
outsb
punpckldq
add
jmp
push
jns
pop
add
sbb
xor
jecxz
adc
or
pusha
shll
dec
lret
add
add
mov
mov
outsl
dec
aad
test
push
add
mov
inc
sub
pop
sub
outsl
movsl
mov
addb
or
add
adc
cli
push
in
add
mov
testb
movb
fdivrl
stos
add
xchg
or
outsl
je
add
mov
bound
xchg
lock
sub
dec
pop
insb
or
lret
out
sbb
test
push
cmp
or
fisubl
nop
add
cmp
scas
add
sub
mov
fimuls
daa
xchg
lods
subl
mov
cmpsl
dec
mov
add
pusha
sbb
mov
pop
es
sub
dec
pop
stc
dec
das
in
pop
in
aam
or
lock
inc
fadds
add
outsb
push
inc
mov
pop
mov
lods
xchg
lcall
jmp
add
movsb
inc
jge
add
push
ret
pop
jno
dec
incb
fldenv
pop
cmp
inc
xchg
pop
cli
add
xlat
stc
rcll
gs
add
lock
scas
jmp
aad
mov
fsubrl
add
popa
dec
mov
inc
add
and
shrb
pushf
jle
push
cmp
add
cmp
pop
or
pusha
sub
jecxz
jns
out
and
add
int3
mov
add
push
js
mov
out
add
inc
add
mov
aas
xchg
call
sbb
xchg
inc
xchg
inc
add
adc
lcall
mov
fisttps
hlt
jo
add
das
adc
pop
add
loop
mov
cli
cli
add
gs
lcall
imul
xorb
gs
sbb
pop
jbe
daa
lcall
movsb
push
repz
aad
and
add
inc
popf
mov
add
loope
xor
xor
add
jg
xchg
out
jb
pop
mov
lcall
inc
daa
add
movsb
add
sbb
cs
xor
jecxz
add
dec
ds
push
sbb
mov
inc
lds
mov
lahf
imul
aaa
cld
inc
dec
xchg
jl
inc
mov
jb
push
push
repz
imul
cmp
inc
sub
mov
adc
rorb
dec
push
mov
mov
rclb
or
adc
aas
mov
cld
ds
mov
push
in
push
cmp
cmp
jg
add
xor
mov
add
push
ds
add
add
roll
test
std
adc
xor
test
inc
xchg
popf
arpl
out
xor
mov
fsts
fcoms
adc
pusha
add
stos
jg
shl
fcomi
sub
xchg
sub
lret
out
adc
and
stos
add
mov
pop
popa
popf
lock
cmc
int
cmpsb
repnz
jl
add
arpl
pop
and
fcoml
push
xchg
add
cmp
adc
sbb
pop
int3
enter
hlt
jecxz
mov
fbstp
adc
mov
andl
and
add
lcall
subb
dec
and
adc
ds
scas
pusha
add
mov
sbb
add
push
testl
add
int3
and
push
mov
add
xchg
adc
jnp
fsubrl
jecxz
mov
adc
stos
pop
add
dec
out
popa
pop
push
add
out
and
xor
sbb
inc
xor
ret
add
cmc
sti
rolb
stos
cmp
rcr
mov
add
repnz
sarb
rorb
xchg
es
mov
and
and
ds
popa
and
add
push
mov
in
inc
xor
int3
and
xchg
cmpsb
cmp
inc
add
push
mov
sub
loop
insb
push
sahf
mov
test
dec
in
pop
add
and
jb
mov
add
xor
fnsave
test
xor
js
ja
into
packssdw
fisubl
bound
jbe
hlt
lahf
jb
stos
aas
dec
mov
loopne
shl
push
insl
mov
aad
push
adc
adc
add
daa
push
stos
xor
jmp
sahf
shlb
push
cmovo
mov
scas
jl
add
sbb
add
cmp
call
popf
add
cli
ret
mov
mov
sbb
subb
adc
mov
add
push
cmpsl
sub
loop
movsl
jbe
stos
add
pop
jne
call
add
ljmp
mov
lock
movsb
add
std
mov
mov
loopne
xchg
cs
scas
imul
cmpsl
fnstsw
jp
add
mov
mov
into
dec
mov
hlt
xchg
add
mov
sub
rolb
in
movsb
push
call
jle
cmp
mov
add
mov
mov
pop
pop
loope
shlb
add
pop
mov
xchg
sbb
inc
mov
leave
push
jno
xor
icebp
push
loopne
xchg
or
cltd
xor
push
fdivrl
ret
pop
inc
jne
ror
add
or
popf
add
loope
xor
shll
js
jp
ds
add
stos
pusha
add
adcb
adc
test
ret
ror
inc
lock
rclb
test
ret
or
adc
scas
xchg
push
jecxz
add
hlt
and
pop
xchg
add
enter
pop
or
lods
movsb
mov
adc
xchg
sti
lahf
mov
ret
hlt
mov
push
test
sbb
and
mulb
pop
dec
xor
pop
stos
jbe,pt
dec
add
int
lret
add
mov
add
movsl
add
rcrb
jge
in
add
dec
aaa
int3
test
cmpsl
in
lahf
outsl
push
popa
inc
insb
add
sub
mov
add
dec
addb
cltd
in
inc
adc
add
mov
mov
subb
add
sahf
inc
inc
fldt
jp
add
into
push
mov
add
mov
popf
jp
ds
cmp
cmp
dec
loop
mov
xchg
or
test
rclb
pop
lcall
add
add
sbb
add
fwait
loope
cwtl
in
and
cmp
mov
xchg
pop
mov
adc
loop
jns
xor
dec
pop
cwtl
stos
add
test
mov
pop
stos
ss
mov
mov
iretw
push
inc
test
push
aas
or
mov
loopne
jg,pt
xchg
ss
lods
mulb
add
mov
test
pop
insb
and
movsb
nop
add
fdiv
xchg
xor
scas
loop
mov
mov
out
lods
cmp
jl
lret
cltd
sbb
orl
fimull
add
sbb
jne
inc
loopne
into
or
es
insl
dec
inc
stos
sbb
add
sbb
pop
inc
add
push
mulb
pop
push
adc
ror
fcomi
add
inc
lret
jno
lds
add
cmpsl
mov
mov
xchg
cmp
pop
push
and
lock
mov
nop
mov
sahf
add
jnp
add
aad
in
sub
pop
aaa
fisttpl
push
add
sbb
xchg
inc
jno,pt
leave
or
add
adc
insb
rcl
int
pop
add
mov
lret
add
inc
ret
lock
mov
cmp
add
sbb
push
xchg
leave
cmp
add
fstl
add
mov
and
orb
sbb
or
push
mov
dec
sbb
stos
push
aas
mov
mov
cmp
or
mov
add
add
push
inc
pop
add
aad
inc
insl
adc
add
xchg
sub
xchg
sbb
fisttps
push
pop
jnp
jae
jns
add
cli
xor
jo
in
push
cmpsl
movsl
push
movsb
pop
xchg
lret
or
push
pop
add
add
push
push
add
dec
xor
mov
lods
out
adc
xchg
mov
xchg
mov
psrlq
jo
nop
push
into
loope
jge
mov
dec
jnp
add
cmp
push
sbb
push
add
mov
jg
orb
inc
and
dec
nop
push
adc
call
cltd
outsb
sbb
or
testl
imul
xor
dec
add
cli
das
sbbb
xchg
add
ja
jmp
add
pop
sbb
pusha
add
es
roll
xchg
sbb
push
mov
popf
fidivrl
push
dec
mov
pop
and
rolb
xor
clc
outsb
add
and
cs
add
xor
mov
enter
mov
pop
pop
pusha
add
adc
pop
push
outsb
pop
add
fst
and
jo
mov
mov
sahf
imul
loope
sbb
xchg
addb
movsl
sbb
cmpsb
and
mov
push
xor
mov
lea
add
add
push
add
jl
sbb
loop
ror
daa
out
xchg
cld
add
dec
jecxz
add
jmp
shrb
add
adc
or
mov
sarb
lock
dec
setno
enter
cmp
sbb
xor
inc
leave
cmpsl
add
inc
xchg
jge
pop
adc
scas
cwtl
loopne
push
jae
popf
inc
mov
add
aaa
dec
in
xchg
mov
add
pop
daa
sub
icebp
add
push
clc
push
xchg
jnp
arpl
daa
ljmp
out
and
ds
rolb
lcall
add
mov
mov
xor
add
daa
pop
mov
push
add
push
stos
push
pop
xchg
lods
dec
rcrb
add
sarl
testl
mov
fdivs
add
test
out
and
add
fsubs
fsub
mov
add
pop
sahf
xchg
xor
and
inc
or
mov
push
mov
adc
inc
ret
add
js
add
lods
test
push
pop
mov
test
push
lods
add
xor
inc
add
sub
loop
aam
jecxz
nop
pop
adc
add
pusha
test
xor
popa
add
in
inc
out
inc
ljmp
jl
scas
push
add
aas
xchg
imul
mov
es
pop
and
xor
dec
lock
shl
cmpsb
mov
ljmp
mov
lret
push
bound
or
jmp
fsub
add
jo
push
addl
enter
add
pop
sbb
pop
idivb
jp
ret
xchg
orb
inc
cld
iret
and
int
int3
sub
popa
shlb
sub
cmp
adc
js
or
outsb
test
push
push
sub
repnz
and
dec
add
mov
nop
mov
mov
sbb
dec
fwait
push
es
push
push
imull
inc
clc
test
mov
outsb
mov
daa
testl
scas
mov
push
add
loope
sti
gs
jle
nop
add
out
mov
movsl
inc
add
sahf
xor
gs
fs
js
inc
es
sbb
add
popf
dec
pop
aam
inc
mov
scas
xchg
add
ss
mov
ljmp
loopne
scas
inc
add
testb
and
pop
jecxz
sbb
loop
xchg
add
mov
and
xor
dec
loope
std
mov
xchg
andl
add
ret
nop
aas
stos
sbb
sub
loopne
repnz
pop
pop
push
frstor
jb
dec
int
dec
add
je
add
fnstenv
daa
xorl
add
leave
rcrl
cltd
in
mov
add
add
lods
push
xor
fisubl
jne
scas
faddp
fwait
xchg
jmp
sti
add
or
jge
test
add
mov
inc
sbb
add
loope
das
daa
ds
out
jb
cmpsb
pusha
nop
test
or
in
pop
jmp
add
xchg
aad
insl
fdivl
add
stos
call
add
aas
xchg
pop
punpckhdq
pop
and
adcb
xchg
lret
fcomp
popf
cmpsb
divl
pop
sub
cltd
add
adc
imul
add
cs
sti
dec
subb
add
inc
sub
cltd
inc
jo
in
jle
push
add
add
test
sti
push
cmp
or
lahf
xchg
jmp
fists
testl
pop
lea
dec
pop
sarb
sub
xchg
fmulp
dec
adc
and
mov
pop
clc
push
mov
jb
insl
ds
xchg
rcrb
fmull
int3
cmc
daa
gs
enter
pop
inc
repz
out
adc
adc
mov
add
fcmovnb
stc
jp
js
xchg
cmp
shlb
lcall
mov
das
mov
jmp
sbb
push
xor
and
out
add
xchg
test
mov
inc
int
mov
adc
add
add
daa
and
push
je
xchg
add
shll
or
bound
int
sub
mov
mov
dec
loope
in
add
imul
or
enter
push
scas
xchg
or
add
and
enter
sbb
add
inc
int3
aad
jo
outsl
add
mov
pushf
out
pop
mov
inc
mov
enter
cmp
cmp
or
rclb
ljmp
push
fsubl
add
mov
dec
cwtl
or
pop
push
xchg
cld
sub
mov
pop
mov
add
add
lea
movsb
bound
push
mov
inc
jo
add
add
add
xor
mov
sub
ss
sub
imul
lds
or
xchg
mov
lods
adc
mov
jo
and
jmp
add
xchg
mov
cli
push
xchg
rolb
xor
mov
daa
push
mov
lcall
fcomps
mov
add
repnz
add
lock
push
lahf
jae
inc
mov
test
clc
sbb
pusha
cmp
jg
mov
mov
push
xchg
enter
inc
test
pop
out
dec
sahf
stos
add
pop
in
xchg
sub
repnz
add
sub
dec
cmpsb
sub
and
stos
pushf
stc
add
lods
sbb
inc
mov
and
xor
cmc
mov
and
or
test
fsubrs
popa
add
addb
cltd
and
or
outsb
adc
add
pop
inc
add
cmp
jmp
sub
adc
dec
lret
push
psllq
inc
mov
add
out
iret
jno
xchg
imul
mov
or
rolb
add
mov
jl
add
testb
mov
xchg
subb
jmp
jbe
or
push
addb
sarb
das
rolb
add
cld
mov
xor
or
cltd
cmp
or
mov
xchg
inc
jp
add
lock
ficoms
push
add
xor
cmp
mov
shlb
nop
js
push
mov
cli
adc
iret
enter
add
clc
frstor
xchg
ficoms
pop
rolb
lea
pop
movsl
and
push
add
xchg
push
addr16
jmp
cwtl
and
pop
out
add
cs
ret
push
inc
std
lds
mov
sub
add
pop
jae
inc
daa
std
subb
add
or
mov
popl
cmp
jb
jns
sub
add
cld
addb
mov
aam
add
cmp
sarb
or
or
fsubs
or
call
push
inc
sbb
ljmp
or
add
add
scas
sbb
mov
push
xchg
inc
push
inc
add
push
cli
sbb
jge
inc
add
mov
rorb
insb
add
push
dec
imul
jo
pop
add
rcr
jb
pop
inc
xor
shr
mov
add
addl
pop
and
repz
pop
sar
iret
and
mov
add
mov
mov
pop
inc
sub
mov
and
add
jb
arpl
sbb
cmpsb
loope
sarl
add
dec
jno
inc
push
adc
or
pop
leave
in
loopne
shrb
jmp
lret
cmp
add
ret
add
decl
add
cltd
mov
movsl
jbe
add
and
adc
cld
ret
cmp
dec
addb
imul
sub
sub
sbb
add
add
jnp
inc
es
mov
add
cwtl
xlat
dec
movsb
jns
out
daa
leave
xor
sti
lds
add
es
insb
jb
cltd
jae
mov
sub
sub
sti
test
shlb
push
add
out
xchg
xchg
pop
dec
sbb
push
mov
addb
or
adc
mov
pop
mov
xchg
or
mov
leave
aaa
push
mov
test
dec
ds
mov
rcrl
and
adc
mov
cld
xchg
ja
ds
stos
fsubrp
sar
push
and
push
iret
in
inc
roll
or
pop
stc
or
jno
xor
and
xchg
orl
add
pop
mov
pop
outsl
andb
out
mov
add
mov
xchg
add
add
xchg
jne
sbb
lret
and
cmpsb
addr16
xchg
pop
ja
fstpt
movsl
or
add
and
cmpsb
testl
inc
fisubl
add
jmp
add
daa
add
cwtl
pusha
dec
nop
loopne
dec
out
add
negb
cmpsl
outsl
loopne
add
jp
out
add
add
mov
xor
sbb
xor
popf
sbbb
xlat
add
sub
xchg
mov
ds
daa
and
add
fadds
cmp
sub
jmp
mov
mov
fcoms
add
jl
sub
shlb
into
pop
mov
jno
cmc
adc
mov
cmp
fwait
xor
and
or
lock
out
mov
lods
imul
push
fadds
jecxz
sub
cltd
in
xchg
hlt
in
add
lock
xor
or
xorb
sub
mov
cmp
daa
push
faddl
jecxz
pop
inc
pop
pop
or
mov
in
movsl
aam
test
dec
std
mov
dec
and
ficomps
sti
add
mov
xlat
add
pop
stos
jge
clc
out
mov
stos
add
mov
rcrb
hlt
sub
cmc
pusha
les
cmpsl
add
push
fists
lods
pusha
xor
jp
add
sub
jle
fbstp
pop
dec
inc
imulb
mov
jno
out
xchg
mov
ja
pop
scas
push
dec
orl
adc
mov
jge
add
aaa
repnz
in
rolb
sbb
sarl
mov
push
pop
mov
add
cmp
loopne
and
dec
cmpsl
and
push
stos
add
sbb
mov
pusha
add
add
fdivl
mov
enter
lret
xor
xchg
addb
jg
jmp
add
movl
pusha
or
es
add
lret
jae
xchg
imul
in
cmc
mov
sub
mov
mov
rorl
jb
cmpsb
lret
push
jecxz
inc
inc
sub
in
addb
adc
repnz
push
sarl
gs
add
leave
lods
jecxz
sub
add
pop
fsubs
add
mov
xchg
push
xlat
rcrb
loop
mov
or
out
daa
fbstp
or
cmp
add
xchg
jl
add
mov
add
aad
pop
and
add
cwtl
hlt
xchg
adc
or
pop
dec
pop
ja
scas
sub
add
sub
add
sbb
outsl
stc
jmp
add
shll
std
push
cwtl
or
or
into
push
xchg
out
lock
jmp
dec
mov
fwait
lods
mov
je
xor
scas
ljmp
stc
daa
sub
cmp
or
mov
mov
add
or
pushf
add
scas
bound
test
lea
sub
cmp
inc
and
mov
add
out
adc
lods
dec
mov
lcall
push
cs
cmp
in
iret
cwtl
fisubrl
add
cmpsb
inc
negb
nop
cmp
cmpsl
inc
das
jmp
sub
jp
lods
cld
outsb
mov
push
gs
fcomi
add
mov
jnp
inc
mov
add
shlb
arpl
jnp
add
je
out
jle
pop
mov
js
xor
mov
pop
inc
loopne
mov
mov
and
pop
add
add
and
cmp
sub
repnz
sbb
lret
shlb
das
or
jb
xor
add
arpl
mov
pop
fidivrl
sahf
jmp
shll
pop
loopne
mov
mov
fistps
das
cmp
mov
mov
add
jns
and
mov
jl
in
cltd
std
xchg
into
cmp
or
mov
pop
sbb
push
and
mov
les
movb
js
push
mov
in
add
gs
inc
lret
test
mov
add
shrb
and
xor
sub
push
mov
xor
rcr
call
cmp
fldenv
mov
sub
cmp
adc
pop
inc
mov
xor
mov
add
les
in
add
into
pop
push
loope
sbb
psubq
push
or
adc
mov
lds
fwait
mov
out
pushf
nop
sub
int3
and
test
xor
push
jnp
sti
mov
xchg
testb
sub
daa
js
add
pusha
add
filds
movsl
scas
addr16
ja
stos
or
xor
jns
push
push
add
into
add
int
sbb
add
dec
and
mov
fs
lods
jmp
jl
call
push
and
push
sbb
lcall
or
xchg
add
sub
outsl
cmp
pop
xorb
push
add
in
out
xchg
jp
pop
push
repnz
add
mov
add
fistpl
test
xchg
add
jmp
lcall
xchg
jb
mov
das
outsb
inc
add
popa
ret
add
mov
enter
testl
sar
popf
add
pop
stos
xor
jle
jno
add
fsubl
test
in
pop
xor
add
add
out
jo
mov
adc
push
lret
dec
adcb
add
icebp
dec
xor
mov
popa
mov
inc
add
cmpsl
dec
aas
stos
cmp
mov
pop
cmp
inc
imul
stos
push
enter
testl
fldl
mov
xlat
jg
adc
or
fisubs
xchg
xlat
sub
into
jns
add
outsl
dec
push
es
aam
pushf
adcb
mov
sbb
in
stos
fadd
cs
add
mov
andb
lahf
pop
and
dec
cmp
or
inc
dec
add
push
jg
jb
test
or
sub
add
add
das
pop
mov
and
popa
mov
es
cmc
pop
cwtl
or
enter
sbb
push
mov
aaa
add
test
push
and
mov
lods
je
gs
lcall
cs
jae
push
lods
pop
mov
test
push
add
shl
cmp
xor
xchg
loopne
pop
mov
mov
leave
in
filds
test
push
std
mov
jb
or
or
push
push
ret
push
adc
push
pop
stos
xor
cmpb
add
and
xchg
or
xchg
rcrb
test
icebp
adc
jne
add
inc
cmp
add
aad
les
sub
fs
loope
or
sub
popa
roll
and
shll
inc
aam
js
dec
add
cmp
xchg
or
cmp
push
cmp
sub
inc
jns
dec
test
in
mov
dec
pop
aam
dec
or
or
stos
dec
add
into
xchg
mov
push
in
rclb
ret
xchg
push
pop
and
add
cmc
or
lods
jnp
add
in
lods
sbb
mov
push
cli
mov
into
stos
sbb
leave
scas
pop
cmc
std
add
pop
jb
push
mov
xchg
fwait
xchg
pop
xchg
out
rcl
loopne
leave
in
cmpb
push
add
test
and
pop
rolb
mov
jo
pmulhuw
stos
lods
mov
jns
outsb
pop
sub
aad
lahf
jo
popa
mov
daa
add
dec
push
aaa
loop
sub
ljmp
add
mov
cld
int
fisubrs
mov
push
adcb
mov
int3
xchg
add
in
scas
add
mov
xor
add
cli
push
subb
pop
xlat
cmp
out
addb
jnp
inc
nop
pop
dec
sub
cmp
xchg
and
clc
or
pop
aam
xor
add
lock
mov
add
push
imul
ljmp
sub
pminub
out
loop
fstl
mov
ret
add
mov
out
std
movsb
mov
stos
lcall
stos
and
add
orl
adc
and
mull
jnp
sub
cmp
subb
jp
inc
dec
sbb
add
dec
jo
add
xlat
int3
cltd
int
scas
notl
out
addl
fistl
jbe
add
faddl
pop
sub
or
hlt
xor
in
filds
sbb
pop
mov
adc
add
dec
idiv
adc
nop
pop
daa
adc
arpl
mov
sub
andb
push
jns
mov
add
mull
sahf
or
mov
dec
cmc
scas
adc
push
or
pusha
xor
aad
int3
bswap
cs
add
inc
cld
adc
scas
lock
sub
addr16
sbb
loopne
nop
push
sbb
dec
sti
ret
mov
add
das
fisubrs
pop
and
ds
in
add
sbb
fsubl
mov
mov
test
push
pop
and
stos
push
mov
mov
add
xor
push
mov
add
dec
mov
add
sub
push
jnp
inc
cmpsb
xchg
add
or
or
mov
xchg
cmp
sub
add
cmpsb
into
and
sbb
or
addps
mov
add
push
sbb
push
cmp
add
ficoms
mov
add
pushf
stc
ret
lret
fcom
add
dec
repnz
ds
rolb
daa
push
aas
shrl
dec
rcll
add
icebp
in
xor
es
xchg
inc
push
das
add
pop
pop
xchg
jmp
shlb
add
and
ljmp
mov
nop
dec
ret
into
movsl
andl
push
add
js
roll
xor
add
dec
cmc
mov
mov
mov
lds
adc
mov
add
fldenvs
fdivrs
add
repz
lock
mov
xor
pop
add
fbstp
cmp
push
fstpl
inc
daa
cltd
push
push
cmp
add
fisttpll
push
pop
in
xchg
das
in
lret
xor
dec
sub
add
ss
add
sub
add
dec
fsubs
add
ds
lcall
movsl
inc
out
std
sub
arpl
out
add
sbb
jb
popa
dec
xchg
popf
xchg
cli
sbb
or
add
test
xlat
add
aam
jle
mov
push
stos
arpl
pop
add
pushf
dec
mov
aas
jbe
xchg
cmp
adc
pop
add
orb
hlt
xchg
rorb
sub
add
dec
stos
push
add
push
xchg
lods
cmp
add
mov
add
cmpsb
in
mov
add
push
repnz
and
sbb
test
rcl
testb
test
jnp
add
inc
iret
aaa
in
addb
add
push
ljmp
imul
loop
adc
ds
xor
add
mov
jmp
stos
mov
mov
dec
lret
add
xor
jns
pop
das
rclb
fcoml
mov
mov
in
xchg
and
inc
jns
cmp
lock
jne
pusha
rolb
jl
stos
push
jecxz
daa
push
daa
dec
and
add
cmp
aad
add
pop
or
popa
cld
and
xchg
add
mov
add
dec
push
or
push
mov
scas
add
xchg
jle
imull
sbb
jmp
dec
add
add
aaa
int3
add
in
daa
sub
add
fmulp
ret
mov
or
nop
push
pusha
mov
adc
mov
add
je
jne
adc
shlb
inc
leave
add
fiaddl
jg
subl
pop
mov
add
lret
add
mov
jbe
add
rcrb
push
jp
add
xchg
adc
inc
add
xor
das
fcomip
add
je
out
scas
pushf
add
push
inc
mov
not
add
cli
sub
movnti
sub
mov
jnp
repnz
movsl
jae
dec
cli
hlt
and
push
push
stos
stos
fwait
add
popa
push
addb
mov
sti
push
lret
mov
dec
add
xor
add
mov
addb
in
in
outsb
mov
and
mov
rcrb
add
in
ret
jbe
cld
pop
cmp
xchg
cmp
dec
cld
enter
hlt
lock
adc
insb
in
add
subl
js
rol
arpl
pop
xchg
pop
ljmp
loop
mov
sti
mov
inc
pop
les
adc
adcl
push
adc
add
imul
adc
xor
hlt
clc
mov
imul
xor
movsl
jne
mov
int3
popf
subl
add
mov
add
fs
cmpb
cmp
xchg
add
xchg
xchg
add
cmp
out
mov
push
testl
xchg
fistpl
jp
add
shrd
imul
call
pop
outsl
xlat
mov
mov
xor
jg
es
repnz
mov
fistps
adc
aas
roll
inc
cmc
popf
sub
add
cmp
add
int3
cmp
loop
add
ss
in
sub
add
std
add
xor
lea
sub
add
out
stos
add
test
ljmp
mov
add
addr16
jno
fimull
stos
mov
out
add
in
mov
add
in
jnp
mov
sbb
add
inc
jmp
mov
inc
add
jnp
scas
in
out
xchg
int
push
ss
scas
fiadds
cmc
insb
mov
inc
ja
add
jmp
sti
sbb
sub
xchg
add
mov
cmp
adc
adc
add
mov
add
pop
and
rcrl
mov
adc
cli
push
push
loopne
mov
rolb
js
sub
add
mov
aas
or
out
out
fidivl
dec
gs
cmp
xor
sbb
cltd
jne
jo
movl
hlt
test
incl
cmpsl
ja
push
ret
jl
mov
andl
shrl
lea
loope
aas
mov
out
fnstcw
pop
cwtl
mov
lods
stos
add
jbe
add
mov
fwait
pop
adc
add
or
add
or
lods
cmp
mov
shll
mov
pusha
aad
jb
rolb
clc
pop
sti
icebp
es
xchg
pop
dec
out
mov
add
fisttpll
add
mov
lahf
sbb
lea
pop
mov
out
jl
loopne
cmc
ret
leave
and
pop
movsb
outsl
sbb
aad
aas
mov
cwtl
ficoms
sbb
inc
or
push
loop
ss
jbe
or
leave
iret
add
xorb
inc
add
sahf
xor
adc
add
daa
call
add
pop
es
mov
outsl
add
iret
pop
pop
dec
fldcw
sub
imulb
jmp
jnp
int3
mov
adc
jbe
mov
das
push
jnp
imul
lock
inc
enter
adc
mov
fbld
mov
xchg
jne
test
sahf
outsl
movl
out
incb
orl
bound
add
aad
ret
mov
daa
mov
jne
add
insl
stos
add
cmp
or
push
mov
push
mov
mov
mov
popa
mov
ljmp
pmaddwd
dec
add
hlt
inc
lea
fldl
xchg
nop
fisubrl
dec
add
push
lods
mov
daa
hlt
rorl
inc
dec
sub
adc
and
add
fildll
add
xchg
fldl
sub
push
testb
out
mov
inc
adc
movsb
mov
sbb
add
pop
call
sahf
inc
in
cmp
enter
addr16
xlat
cwtl
add
ret
frstor
jb
jecxz
inc
mov
rolb
adc
cmpsl
or
add
ja
dec
mov
inc
lret
js
add
into
jne
cmp
xlat
test
add
iret
bound
mov
into
and
cmp
jp
xchg
icebp
clc
mov
or
scas
lock
mov
add
adc
gs
sti
xchg
pop
cmp
mov
shll
mov
movsl
lods
rcrb
shl
daa
test
or
inc
mov
add
jl
add
aad
mov
mov
cmpsl
push
sbb
lds
sbb
outsb
cmpb
push
add
and
cltd
and
mov
lods
iret
jge
jle
movl
push
cmp
add
jb
outsl
add
push
or
add
xchg
cmp
add
push
lock
aaa
add
push
mov
pop
mov
push
ds
mov
adc
inc
inc
add
je
mov
jle
mov
inc
fs
xchg
flds
dec
in
neg
add
mov
add
jns
sahf
imul
mov
add
inc
pop
xchg
mov
mov
imulb
les
push
cld
fildl
sarl
mov
clc
pop
push
mov
add
mov
add
ljmp
add
scas
inc
push
add
decb
jno
and
jno
push
jne
add
jle
sub
mov
mov
lods
jl
add
dec
xchg
mov
pop
add
pusha
mov
cmp
xor
dec
add
and
push
add
rorl
or
mov
xchg
call
pop
gs
xchg
push
fwait
jns
pop
test
pop
adc
add
xor
icebp
push
mov
adc
inc
cs
jmp
adc
lock
jg
mov
rol
pop
inc
data16
adc
dec
xchg
add
test
sub
hlt
inc
je
call
test
lret
bnd
mov
int
inc
icebp
dec
mulb
fs
test
push
mov
imul
out
push
adc
and
pop
push
add
xchg
add
sbb
mov
pop
cmp
cmpsl
add
mov
push
mov
or
mov
movsl
lock
push
stos
test
mov
add
repz
rcl
mov
mov
cld
inc
xor
cwtl
add
aam
add
sar
mov
jge
add
imul
jle
mov
sub
mov
cltd
add
fdivrl
out
xchg
add
pop
int
fstpl
add
cmp
push
jg
cmp
pop
enter
pusha
bound
orl
imul
add
sbb
mov
xchg
loop
lds
pop
push
push
hlt
xor
add
fisubl
idivl
add
add
stos
push
pop
cmp
mov
movsl
cmp
push
or
pushf
addr16
xchg
jnp
inc
ficomps
add
and
test
add
clc
sub
nop
jecxz
and
add
inc
add
add
cmpsb
scas
cld
inc
adc
add
loop
jo
xchg
loop
push
add
in
sub
sub
ljmp
je
sub
add
rclb
aam
fisubs
add
js
lret
inc
add
mov
sbb
outsb
fbstp
dec
mov
ret
lock
rolb
popf
roll
cmp
daa
or
add
popf
inc
add
add
add
push
jp
lds
xlat
mov
add
add
add
or
sub
sbb
cmp
sbb
xchg
pop
and
mov
ret
dec
add
daa
add
stos
add
add
xchg
mov
jle
out
inc
mov
fs
or
xchg
dec
and
mov
jp
add
xchg
js
dec
xor
popl
cli
inc
add
mov
add
insb
insl
lock
rcrb
adc
addb
pushf
nop
mov
or
and
lea
add
or
addb
xchg
out
add
out
sbb
xor
add
mov
test
enter
add
lods
addl
push
push
or
add
push
mov
adc
or
inc
inc
jg
add
out
and
pop
pop
xor
mov
adc
add
leave
std
push
sbb
ds
mov
mov
jno
add
mov
lret
repz
loopne
add
pop
sub
test
mov
push
add
aas
iret
repz
jb
mov
sti
ret
fdivs
add
fnstsw
lods
add
pop
xchg
sbb
xor
sub
and
ds
add
or
xlat
xchg
mov
fildl
loopne
adc
fdivrl
ret
scas
add
sub
adc
xor
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
adc
push
lock
add
add
add
dec
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
push
add
push
add
sbb
jp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
outsb
outsl
jnp
pop
jbe
jne
sbb
pop
jnp
dec
jg
jle
outsb
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jp
sbb
sbb
sbb
push
sbb
sbb
sbb
outsb
outsl
jnp
dec
push
outsb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
inc
fwait
imull
lahf
orb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
outsb
xor
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xchg
mov
cltd
lahf
mov
pop
sbb
fstpl
sbb
sbb
xchg
lahf
xor
pop
sbb
das
or
xchg
lahf
push
or
xchg
xchg
or
dec
dec
in
and
pop
sbb
sbb
sbb
scas
push
or
in
and
pop
sbb
sbb
sbb
scas
push
or
in
and
pop
sbb
sbb
sbb
sbb
inc
jl
and
outsb
sbb
in
adc
rorb
jo
dec
in
push
or
inc
inc
adc
outsl
adc
sbb
push
icebp
into
fwait
arpl
sbb
sbb
push
icebp
rclb
sbb
lahf
sahf
or
dec
jo
jb
or
sbb
lcall
xchg
or
xchg
pop
bound
sbb
adc
sbb
sub
xchg
scas
rorl
sbb
call
or
pop
sbb
xchg
or
dec
in
inc
jnp
fcomps
clc
movb
lahf
sahf
or
dec
jo
jb
or
sbb
lcall
ja
pop
sbb
sbb
fwait
xchg
sbb
sbb
sbb
jo
jb
or
sbb
sbb
sbb
in
pop
or
xchg
ret
sbb
cmp
xchg
scas
xchg
or
xchg
cmpsl
test
enter
sbb
mov
fisubrl
sbb
dec
dec
dec
repnz
ficoms
inc
jp
xchg
test
rclb
jmp
fcomps
clc
enter
or
sbb
xchg
lahf
dec
or
xchg
xchg
pop
sbb
es
xchg
dec
jp,pn
rclb
jnp
leave
outsb
pop
sbb
cltd
and
outsb
and
lret
repz
fsts
adc
fcomi
push
cltd
in
outsl
add
adc
sbb
dec
xchg
lahf
dec
or
sbb
fstps
clc
enter
lahf
inc
or
adc
outsb
or
lahf
inc
or
xchg
cmpsl
arpl
pop
sbb
xchg
scas
jnp
pop
sbb
scas
inc
or
cltd
hlt
push
cltd
fmull
cltd
or
adc
sbb
inc
or
dec
dec
in
das
or
inc
xchg
lahf
jg
pop
sbb
xchg
and
cmpsl
inc
or
xchg
push
or
xchg
inc
or
icebp
or
inc
or
xchg
push
or
xchg
inc
or
cltd
and
add
push
or
cltd
fstps
dec
dec
dec
in
jg
pop
sbb
and
pop
sbb
xchg
sbb
lret
stc
lret
icebp
dec
dec
dec
in
jg
pop
sbb
and
pop
sbb
xchg
sbb
push
cltd
fistpl
icebp
test
adc
sbb
sub
xchg
scas
sbb
pop
sbb
call
or
pop
sbb
xchg
or
dec
in
inc
jnp
fcomps
clc
xchg
mov
xchg
lahf
orb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
popl
pop
sbb
clc
sub
pop
fnstcw
outsb
ds
data16
test
sub
mov
sbb
sbb
sub
bnd
sbb
imul
sbb
sbb
test
repnz
sbb
sbb
fisubrl
outsl
and
push
sbb
sbb
shrl
repnz
sbb
sbb
xor
or
icebp
push
mov
cli
adc
sbb
sbb
sbb
lcall
gs
sbb
xchg
fildll
xor
jmp
sbb
outsl
pop
nop
or
or
fldcw
rcrl
hlt
in
in
shl
std
in
in
call
xor
mov
sbb
adc
dec
push
pop
dec
inc
cmp
jo
inc
add
adc
or
dec
dec
dec
or
adc
dec
xor
inc
inc
or
push
dec
and
xor
sub
inc
inc
sbb
xor
dec
and
inc
add
inc
add
sbb
inc
sub
xor
pop
dec
push
sub
sbb
inc
dec
inc
dec
sub
add
pop
xor
sub
sub
cmp
jl
sub
push
sbb
inc
add
inc
adc
adc
inc
inc
inc
dec
dec
pop
dec
inc
or
cmp
je
sbb
sub
xor
dec
or
push
sub
pop
and
cmp
jnp
push
dec
pop
or
sub
dec
sbb
xor
sub
adc
dec
push
dec
add
inc
dec
or
and
inc
and
dec
add
xor
dec
inc
and
and
mov
pop
sbb
adc
dec
push
pop
dec
inc
cmp
jo
inc
add
adc
or
dec
dec
dec
or
adc
dec
xor
inc
inc
or
push
dec
and
xor
sub
inc
inc
sbb
xor
dec
and
inc
add
inc
add
sbb
inc
sub
xor
pop
dec
push
sub
sbb
inc
dec
inc
dec
sub
add
pop
xor
sub
sub
cmp
jl
sub
push
sbb
inc
add
inc
adc
adc
inc
inc
inc
dec
dec
pop
dec
inc
or
cmp
je
sbb
sub
xor
dec
or
push
sub
pop
and
cmp
jnp
push
dec
pop
or
sub
dec
sbb
xor
sub
adc
dec
push
dec
add
inc
dec
or
and
inc
and
dec
add
xor
dec
inc
and
and
call
pop
add
pop
sbb
adc
dec
push
pop
dec
inc
cmp
jo
inc
add
adc
or
dec
dec
dec
or
adc
dec
xor
inc
inc
or
push
dec
and
xor
sub
inc
inc
sbb
xor
dec
and
inc
add
inc
add
sbb
inc
sub
xor
pop
dec
push
sub
sbb
inc
dec
inc
dec
sub
add
pop
xor
sub
sub
cmp
jl
sub
push
sbb
inc
add
inc
adc
adc
inc
inc
inc
dec
dec
pop
dec
inc
or
cmp
je
sbb
sub
xor
dec
or
push
sub
pop
and
cmp
jnp
push
dec
pop
or
sub
dec
sbb
xor
sub
adc
dec
push
dec
add
inc
dec
or
and
inc
and
dec
add
xor
dec
inc
and
and
test
je
pop
sbb
adc
dec
push
pop
dec
inc
cmp
jo
inc
add
adc
or
dec
dec
dec
or
adc
dec
xor
inc
inc
or
push
dec
and
xor
sub
inc
inc
sbb
xor
dec
and
inc
add
inc
add
sbb
inc
sub
xor
pop
dec
push
sub
sbb
inc
dec
inc
dec
sub
add
pop
xor
sub
sub
cmp
jl
sub
push
sbb
inc
add
inc
adc
adc
inc
inc
inc
dec
dec
pop
dec
inc
or
cmp
je
sbb
sub
xor
dec
or
push
sub
pop
and
cmp
jnp
push
dec
pop
or
sub
dec
sbb
xor
sub
adc
dec
push
dec
add
inc
dec
or
and
inc
and
dec
add
xor
dec
inc
and
and
xorb
pop
sbb
adc
dec
push
pop
dec
inc
cmp
jo
inc
add
adc
or
dec
dec
dec
or
adc
dec
xor
inc
inc
or
push
dec
and
xor
sub
inc
inc
sbb
xor
dec
and
inc
add
inc
add
sbb
inc
sub
xor
pop
dec
push
sub
sbb
inc
dec
inc
dec
sub
add
pop
xor
sub
sub
cmp
jl
sub
push
sbb
inc
add
inc
adc
adc
inc
inc
inc
dec
dec
pop
dec
inc
or
cmp
je
sbb
sub
xor
dec
or
push
sub
pop
and
cmp
jnp
push
dec
pop
or
sub
dec
sbb
xor
sub
adc
dec
push
dec
add
inc
dec
or
and
inc
and
dec
add
xor
dec
inc
and
and
inc
pop
sbb
adc
dec
push
pop
dec
inc
cmp
jo
inc
add
adc
or
dec
dec
dec
or
adc
dec
xor
inc
inc
or
push
dec
and
xor
sub
inc
inc
sbb
xor
dec
and
inc
add
inc
add
sbb
inc
sub
xor
pop
dec
push
sub
sbb
inc
dec
inc
dec
sub
add
pop
xor
sub
sub
cmp
jl
sub
push
sbb
inc
add
inc
adc
adc
inc
inc
inc
dec
dec
pop
dec
inc
or
cmp
je
sbb
sub
xor
dec
or
push
sub
pop
and
cmp
jnp
push
dec
pop
or
sub
dec
sbb
xor
sub
adc
dec
push
dec
add
inc
dec
or
and
inc
and
dec
add
xor
dec
inc
and
and
dec
pop
sbb
adc
dec
push
pop
dec
inc
cmp
jo
inc
add
adc
or
dec
dec
dec
or
adc
dec
xor
inc
inc
or
push
dec
and
xor
sub
inc
inc
sbb
xor
dec
and
inc
add
inc
add
sbb
inc
sub
xor
pop
dec
push
sub
sbb
inc
dec
inc
dec
sub
add
pop
xor
sub
sub
cmp
jl
sub
push
sbb
inc
add
inc
adc
adc
inc
inc
inc
dec
dec
pop
dec
inc
or
cmp
je
sbb
sub
xor
dec
or
push
sub
pop
and
cmp
jnp
push
dec
pop
or
sub
dec
sbb
xor
sub
adc
dec
push
dec
add
inc
dec
or
and
inc
and
dec
add
xor
dec
inc
and
and
jmp
pop
sbb
adc
dec
push
pop
dec
inc
cmp
jo
inc
add
adc
or
dec
dec
dec
or
adc
dec
xor
inc
inc
or
push
dec
and
xor
sub
inc
inc
sbb
xor
dec
and
inc
add
inc
add
sbb
inc
sub
xor
pop
dec
push
sub
sbb
inc
dec
inc
dec
sub
add
pop
xor
sub
sub
cmp
jl
sub
push
sbb
inc
add
inc
adc
adc
inc
inc
inc
dec
dec
pop
dec
inc
or
cmp
je
sbb
sub
xor
dec
or
push
sub
pop
and
cmp
jnp
push
dec
pop
or
sub
dec
sbb
xor
sub
adc
dec
push
dec
add
inc
dec
or
and
inc
and
dec
add
xor
dec
inc
and
and
mov
pop
sbb
adc
dec
push
pop
dec
inc
cmp
jo
inc
add
adc
or
dec
dec
dec
or
adc
dec
xor
inc
inc
or
push
dec
and
xor
sub
inc
inc
sbb
xor
dec
and
inc
add
inc
add
sbb
inc
sub
xor
pop
dec
push
sub
sbb
inc
dec
inc
dec
sub
add
pop
xor
sub
sub
cmp
jl
sub
push
sbb
inc
add
inc
adc
adc
inc
inc
inc
dec
dec
pop
dec
inc
or
cmp
je
sbb
sub
xor
dec
or
push
sub
pop
and
cmp
jnp
push
dec
pop
or
sub
dec
sbb
xor
sub
adc
dec
push
dec
add
inc
dec
or
and
inc
and
dec
add
xor
dec
inc
and
and
jmp
pop
sbb
adc
dec
push
pop
dec
inc
cmp
jo
inc
add
adc
or
dec
dec
dec
or
adc
dec
xor
inc
inc
or
push
dec
and
xor
sub
inc
inc
sbb
xor
dec
and
inc
add
inc
add
sbb
inc
sub
xor
pop
dec
push
sub
sbb
inc
dec
inc
dec
sub
add
pop
xor
sub
sub
cmp
jl
sub
push
sbb
inc
add
inc
adc
adc
inc
inc
inc
dec
dec
pop
dec
inc
or
cmp
je
sbb
sub
xor
dec
or
push
sub
pop
and
cmp
jnp
push
dec
pop
or
sub
dec
sbb
xor
sub
adc
dec
push
dec
add
inc
dec
or
and
inc
and
dec
add
xor
dec
inc
and
and
