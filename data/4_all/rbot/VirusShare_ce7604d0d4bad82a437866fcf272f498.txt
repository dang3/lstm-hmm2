xor
ds
lea
sbb
cmp
xchg
mov
cltd
add
fs
push
cmp
daa
outsb
test
mov
push
mov
ds
push
mov
sbb
rclb
or
insl
pusha
inc
mov
jmp
outsl
mov
ja
test
sahf
adc
xor
push
es
sub
imul
pushf
pop
mov
push
repnz
movsl
jge
add
mov
jle
call
xor
stos
adc
jl
daa
inc
loope
in
sub
push
sbb
push
mov
add
xchg
int3
fsubr
mov
pusha
rcl
imul
adc
insl
notl
sar
js
movsl
adc
ds
out
push
sbb
in
inc
xchg
inc
pop
and
xchg
nop
adc
xchg
je
jecxz
inc
xor
das
xchg
push
xor
push
outsl
dec
sub
insb
fiaddl
xor
sbb
xor
dec
movsb
in
jmp
js
xchg
jo
rorb
push
shlb
dec
in
pop
and
shl
adc
loop
xor
jbe,pt
fucomip
lods
cmp
and
xor
or
call
pop
push
loopne
inc
xchg
jl
das
shrb
push
movsl
rclb
or
arpl
push
xor
pop
xchg
out
scas
mov
lods
aas
push
out
push
mov
jns
jo
ja
gs
add
pop
dec
pushw
cmpsb
jp
mov
pop
adc
mov
jle
pop
out
xor
push
rcl
pop
cmpsb
sub
sub
xchg
aam
push
pusha
das
ficoml
loop
push
add
push
bound
mov
dec
pop
jl
data16
xchg
jg
adc
aas
add
cmp
push
adc
pop
lea
sub
cmp
int
cld
into
ror
ret
aas
gs
sbb
sbb
in
movb
popa
stos
loope
xor
push
inc
rolb
stos
arpl
pop
je
mov
mov
rcll
xchg
in
fbstp
cmpsb
xor
inc
neg
dec
push
addr16
cmp
test
xchg
lds
pop
add
hlt
into
push
push
cmpl
mov
and
ds
gs
movsl
push
adc
xor
pop
lcall
bound
call
inc
aam
nop
js
jle
loop
adc
jmp
int3
mov
or
lcall
adc
hlt
mov
movsb
cld
popa
inc
mov
inc
dec
in
ja
ja
jbe
inc
jg
push
xchg
and
mov
mov
pusha
inc
test
add
and
movsl
and
push
cmp
in
or
cmp
inc
std
xor
loop
xor
push
jbe
pop
push
xor
sbb
xchg
mov
out
pop
dec
xor
jmp
lods
jg
in
mov
sub
imul
mull
mov
jno
cli
push
and
push
es
jb
fisubs
mov
ja
adc
xor
subb
jge
jecxz
fstp
push
in
loopne
push
push
dec
pushf
xlat
lcall
inc
arpl
in
sbb
es
cwtl
bound
add
test
pop
bound
sarb
es
cmp
jmp
clc
cwtl
cmpsl
hlt
andb
push
pop
sub
push
adc
xchg
or
test
push
jmp
push
fstl
push
fs
enter
mov
in
insl
lods
or
loopne
mov
xchg
mov
fadds
andb
in
xchg
mov
jae
inc
pop
or
sbb
stos
xor
sbb
dec
adc
jne
test
and
cmovs
das
dec
arpl
mov
mov
ljmp
adc
mov
es
pop
in
loope
xor
imull
shll
adc
push
fs
adc
test
out
dec
fsubl
mov
sbb
sbb
pop
adc
mov
inc
jmp
test
ret
ja
in
sbb
jns
xchg
mov
cltd
pop
inc
and
cld
and
popa
dec
xchg
mov
dec
xchg
dec
shlb
in
ljmp
es
sbb
jo
dec
adc
in
xchg
inc
mov
jl
jl
cmp
je
mov
or
xchg
and
jl
push
mov
adc
xor
cmp
push
xchg
lock
mov
jmp
in
fidivl
mov
dec
daa
jno
mov
add
test
js
lret
and
loop
push
push
sub
mov
aas
push
lea
pop
out
iret
fnsave
push
jmp
or
xchg
cmc
push
outsb
xchg
xchg
aas
add
ret
fcmovbe
mov
dec
add
cmp
pop
call
faddl
popf
adc
sbb
fs
push
les
out
jne
sbb
clc
repnz
fadd
lods
inc
pop
and
mov
push
movsb
xchg
popa
jbe
je
out
mov
push
clc
mov
push
add
sub
jo
aas
adc
ror
jmp
cld
push
jp
mov
cmp
pop
or
sub
or
aam
dec
jle
cmp
fcmovbe
iret
mov
pop
jo
sti
adc
test
jb
stos
cmc
sub
xchg
popf
jne
fsubrl
ss
fmull
out
or
xchg
out
clc
into
push
pop
cmc
inc
in
adc
inc
jbe
std
jae
lret
dec
out
je
jno
inc
inc
pop
pop
cltd
pop
xchg
add
loope
fucom
inc
inc
xchg
jle
jl
jnp
and
and
inc
cwtl
test
cmp
sbb
inc
cmp
push
js
arpl
pop
xchg
adc
dec
sbb
sbb
shrb
push
arpl
push
pusha
inc
lcall
xchg
mov
adc
icebp
dec
enter
addb
jb
call
dec
repnz
sbb
push
movsb
aam
push
iret
sbb
pop
jnp
and
shl
cmpsb
cmp
imul
inc
xor
sbb
fcmove
fs
sub
mov
stos
add
hlt
inc
xor
imul
in
ljmp
xor
dec
leave
frstor
dec
jl
clc
sub
fbld
dec
add
out
sarb
sti
push
inc
jl
xchg
stos
pusha
mov
aad
sub
push
jg
lahf
jecxz
cmp
and
clc
out
int
push
ds
pop
push
jl
shlb
or
sbb
fldenv
pushl
mov
imull
addr16
std
adc
inc
decl
test
or
test
cmp
cmpb
pop
cmp
imul
dec
outsl
ljmp
fs
fistps
push
and
call
or
xor
cltd
mov
xchg
movb
lds
mov
js
pop
jns
mov
or
pop
sub
dec
push
adc
out
data16
jae
jbe
in
fwait
lahf
loop
jno
popa
pop
and
fcomps
dec
xlat
push
jge
scas
test
jle
popa
mov
mov
push
and
cmpsb
jno
dec
adc
and
subl
hlt
orl
lods
mov
xor
lahf
in
mov
add
sub
inc
sub
jle
popf
fsubs
xor
hlt
popf
sbbl
shlb
lea
sarb
shl
in
int3
mov
out
icebp
jns
loopne
data16
inc
mov
imul
mov
mov
lods
mov
out
in
into
adc
fbstp
cmc
in
int3
fucomip
xor
push
xlat
popf
aas
xchg
divps
std
je
xlat
out
jg
jae
cwtl
ja
xor
into
leave
mov
loopne
jmp
iret
fsubs
adc
movsb
push
repnz
jne
add
mov
es
in
mov
jnp
xor
push
fmull
nop
ss
jns
adc
pop
mov
out
fildll
mov
mov
mov
inc
stc
jb
dec
testb
add
and
mov
add
adc
popf
or
ds
je
push
cmp
in
ss
inc
mov
jl,pn
out
or
fcoms
dec
in
sbb
jns
jle
pop
clc
dec
or
scas
pop
aas
shrl
dec
inc
mov
out
mov
xchg
aaa
mov
lods
dec
dec
fsubp
out
push
jecxz
push
inc
push
dec
in
lcall
and
fisubrs
xchg
pop
mov
mov
enter
mov
jl
mov
andl
inc
jmp
int
jne
mov
dec
add
lret
jp
icebp
and
xchg
push
daa
jge
push
and
inc
mov
lea
int
sbb
into
mov
inc
cmpsl
xchg
inc
push
xor
xor
leave
lds
scas
cli
cld
cmp
push
sbb
sub
mov
jae
inc
or
or
inc
add
data16
shld
pop
daa
mov
adc
xchg
adc
xchg
out
out
cmp
inc
or
aas
aam
add
sbb
lds
xor
push
push
cmp
or
dec
pop
dec
add
outsl
mov
adc
and
mov
sub
xchg
inc
mov
xor
fnstcw
int3
shlb
pop
jmp
in
ficomps
ljmp
daa
push
push
shrl
mov
in
mov
push
xor
sub
dec
jmp
push
xchg
aas
out
dec
adc
inc
out
nop
dec
scas
insl
gs
in
cmpsb
ja
das
lea
xor
out
mov
adc
aas
lods
dec
pushf
mov
and
pop
jns
rcl
out
and
dec
fs
shrb
gs
mov
and
out
cmp
xchg
inc
xor
cmp
jge
inc
jae
mov
cmp
jmp
clc
xchg
and
fldl
lods
xlat
ja
call
std
xchg
and
cmp
es
out
hlt
rcll
gs
fstps
fiaddl
ret
or
sbb
sti
je
test
mov
sub
inc
les
push
xor
mov
add
fwait
xchg
repnz
pop
cmc
jge
cmp
xor
inc
movsb
dec
lods
jns
xor
test
cld
sbb
mov
add
icebp
or
pop
inc
cmp
adc
je
add
aaa
sub
pop
mov
push
dec
push
out
mov
jbe
clc
test
inc
mov
imul
jb
test
xor
xchg
imul
scas
mov
popa
pop
mov
push
push
mov
add
sub
divb
test
mov
jg
fsubp
fwait
cmp
out
mov
jl
lds
mov
hlt
int
mov
inc
and
xchg
ds
push
dec
pushw
sub
push
jns
loopne
jae
xor
add
mov
sub
hlt
cld
cmpsb
pop
lea
fstps
push
loope
jb
std
add
push
cmp
pop
xchg
push
cld
dec
scas
sbb
roll
jnp
mov
pop
push
test
push
dec
xor
lahf
inc
push
stc
push
stos
fsubrl
dec
cmp
fucomp
fsub
fs
xor
sbb
push
test
mov
out
aas
ja
xchg
xchg
repnz
mov
sub
daa
cld
es
or
cmpb
aam
sub
fstpl
dec
insl
int
mov
push
push
inc
subl
push
lds
mov
and
dec
push
fstl
dec
or
xor
divb
cltd
fxsave
popf
pop
xchg
lahf
mov
subl
adc
jb
inc
in
xlat
xor
fs
fbstp
imul
mov
push
stos
adc
nop
inc
jle
cs
cmc
jmp
das
inc
movsb
cwtl
cwtl
sub
mov
mov
push
and
or
xchg
sub
lods
stos
add
mov
les
stc
movsb
lret
jecxz
imul
mov
icebp
jbe
mov
cmp
xchg
cli
push
xchg
inc
cmp
mov
sbbl
outsb
leave
jae
adc
fnstenv
cs
push
adc
xor
cmpsb
inc
cmc
test
adc
fstpt
push
sub
call
mov
jl
fnsave
dec
in
pop
cmp
adc
xchg
or
and
in
out
push
lret
pusha
pusha
jmp
mov
inc
sub
mov
in
sti
leave
xor
pop
and
or
jmp
push
iret
pop
push
cli
fimull
inc
jmp
popf
cmc
mov
ds
push
inc
int3
fwait
jl
pop
mov
cmpsb
sahf
jbe
rcr
and
mov
movsb
adc
or
add
dec
daa
cmp
aas
push
mov
adc
pop
mull
fisubs
arpl
cmpsl
add
cld
decb
mov
pusha
enter
push
popa
ss
mov
ret
jge
push
push
cs
pop
jo
movsb
loopne
rclb
stos
out
mov
lret
les
cmc
adc
adc
push
xchg
enter
les
loope
cmp
cld
push
pop
jge
sub
lcall
jl
mov
sti
jl
out
pop
adc
cld
out
push
mov
insl
lea
lods
mov
nop
movsl
jmp
xor
push
cmp
dec
add
lods
call
sub
sbb
pushf
jl
rcl
push
pop
inc
cmp
pop
shl
je
xor
scas
clc
pop
lea
adc
out
lods
mov
das
lock
mov
mov
enter
mov
in
dec
adc
popf
push
sti
jge
pop
fs
jnp
push
pop
outsl
aas
rep
mov
loopne
ss
pop
mov
aad
mov
pop
loopne
mov
test
adc
jbe
jb
xchg
daa
pop
test
out
ds
and
sbb
cwtl
lahf
cmp
xor
enter
pushf
xchg
xchg
cmp
or
and
inc
push
push
addr16
pusha
or
in
inc
mov
add
pop
insb
xor
stc
out
inc
add
lea
jno
stos
adc
sti
ss
jae
dec
push
lods
stos
inc
clc
in
sbb
pushf
cli
mov
js
clc
outsb
mov
daa
adc
sub
cltd
mov
aas
pop
mov
fucomp
and
cmp
xor
xorl
gs
out
xor
ss
pop
dec
push
loop
cli
inc
into
cmp
cld
mov
in
insl
jle
bound
outsl
jle
mov
ja
mov
lods
movsl
pop
adc
decl
adc
in
pop
dec
xor
sarl
xchg
das
into
das
inc
mov
mov
ljmp
jle
sub
shl
lods
and
loopne
movsb
cltd
bound
jle
arpl
adc
pop
inc
sub
or
out
dec
push
xchg
std
pop
insl
fsubr
rcr
xlat
jns
mov
dec
mov
pushf
sub
jmp
and
sbb
cmp
in
mov
mov
movsl
arpl
xchg
jecxz
ret
pop
pop
inc
pop
mov
dec
pop
add
mov
jge
push
fstp
je
dec
into
sub
jg
mov
jbe
fsubl
das
and
sbb
add
push
inc
int3
sahf
and
xchg
xchg
xchg
cmp
pusha
imul
js
int
xor
lds
in
sub
and
and
fimull
inc
push
adc
mov
sbb
stc
pushf
das
xor
les
cmc
clc
sarl
mov
jp
ficoms
movsb
fbstp
cmc
dec
pop
insb
adcb
divps
rcrl
jae
in
loop
js
aas
pop
or
fdivrl
push
nop
push
ja
mov
daa
rcll
int
mov
mov
loop
jno
jno
mov
jnp
dec
cmp
data16
mov
sbb
lock
mov
mov
mov
pop
cmpsl
mov
sbb
cmpsb
mov
mov
ss
mov
into
aaa
lea
xor
popa
mov
clc
lea
addr16
mov
inc
iret
mulb
and
or
aad
aaa
cmovle
jg
nop
xchg
jno
outsl
pop
ret
je
pop
push
cld
mov
pop
addr16
mov
mov
xchg
mov
cmp
cmc
mov
dec
mov
lea
xchg
mov
mov
and
fwait
andl
arpl
jge
mov
movsl
in
jl
ret
dec
addr16
xchg
dec
mov
sbb
in
loope
jg
int3
push
imul
adc
and
mov
ss
sub
inc
dec
aam
pop
cmpsl
inc
in
push
fists
inc
sti
xchg
xchg
xor
sbb
cmp
inc
and
add
aas
fs
jl
ficoms
jne
out
testl
insl
xor
push
cmp
sub
mov
push
inc
mov
mov
or
jl
enter
sarb
sbb
je
push
in
push
testl
add
inc
mov
jne
mov
stos
ss
xlat
cmp
mov
js
inc
aam
in
and
and
push
jbe
cmp
stos
inc
imull
xor
jne
dec
xchg
push
loop
sbb
les
lea
out
ljmp
cmp
cli
sub
adc
in
dec
stos
xor
and
or
bound
and
and
sub
clc
arpl
sahf
sbb
mov
add
or
dec
pusha
stc
in
aaa
lcall
enter
adc
fadd
sub
loop
inc
lds
push
movl
dec
sar
ret
rcll
pushf
sub
jo
rorl
pushf
fdivrl
popa
xchg
mov
out
cmp
mov
cmp
sahf
inc
mov
inc
cld
mov
lea
dec
clc
stos
lahf
mov
jl
or
sbb
shlb
shl
jmp
lods
fcompl
and
loopne
and
and
arpl
jle
lahf
iret
movsl
std
sbb
pop
add
jl
push
nop
imul
mov
mov
inc
mov
pop
jge
xor
je
xor
mov
and
mov
or
out
in
pop
xchg
pop
ds
sbb
cmp
cmp
jle
sbb
subb
xor
mov
jp
or
adc
rcrb
add
loope
je
push
ss
xor
divl
push
jo
xor
and
add
adc
xchg
insb
lods
cmp
sahf
std
push
mov
jo
cmp
dec
lahf
clc
jno
es
pop
pop
and
push
shlb
xor
out
sahf
mov
pop
dec
test
cmp
cmp
cld
pop
dec
movb
cmp
sub
xor
fdivp
out
or
push
loope
negb
fcoms
mov
jmp
enter
sbb
and
jl
lret
xchg
cmp
rcr
mov
dec
ljmp
movsb
pop
inc
in
aam
lcall
sbb
loope
repnz
not
mov
mov
sub
repz
sahf
cmp
inc
cld
cli
scas
pushf
movsb
mov
and
lock
or
je
add
repnz
mov
imul
push
repz
ss
adc
pop
movsb
and
jecxz
and
pop
mov
in
add
jg
js
xor
movsl
or
and
scas
cmp
pop
xlat
in
jp
rcrl
les
jne
xchg
push
adc
in
cmc
lcall
sbb
push
mov
mov
cmpsl
jge
jg
outsb
pop
xchg
leave
leave
xchg
mov
xorb
js
push
adc
in
sub
xor
jo
inc
aas
insb
jmp
add
clc
mov
adc
jne
sbb
sub
bound
arpl
test
test
jbe
xchg
xor
xor
mov
cmp
lea
push
xor
mov
out
inc
jns
stc
pop
dec
out
mov
push
pop
adc
xchg
dec
xor
popl
rorb
lods
cwtl
bound
testl
dec
icebp
movsb
test
fsubl
mov
mov
push
inc
icebp
movzbl
inc
xchg
adc
jnp
cmpsb
loopne
sbb
add
sub
into
mov
dec
in
pusha
sbb
ret
cmp
insb
in
dec
xor
or
mov
xchg
xchg
leave
mov
cmp
add
dec
jp
mov
clc
adcb
pop
add
sbb
push
inc
out
scas
jl
mov
movsl
jp
arpl
and
cmpsb
mov
out
mov
adc
in
dec
sbb
mov
jl
push
mov
mov
test
cmp
scas
jmp
jle
sbb
mov
sbb
movsl
sbb
out
mov
cmp
inc
or
ljmp
out
stos
cwtl
lods
stos
mov
mov
cmp
add
inc
push
or
shlb
mov
cmpsb
jns
or
mov
sub
cmpsb
lock
push
ljmp
leave
dec
sub
cs
aas
or
in
push
inc
fsub
cmp
lock
in
and
cmp
sti
out
outsb
add
push
fidivs
pop
mov
test
cmp
cmc
call
inc
mov
sarb
pop
push
into
filds
pusha
inc
xchg
jno
imul
in
xor
push
ja
pop
mov
pop
xchg
ret
and
and
divb
mov
out
arpl
cltd
xchg
inc
mov
dec
xchg
stc
xchg
test
jecxz
popa
out
clc
test
xor
dec
jo
test
cs
add
jp
cld
es
adc
leave
ret
data16
mov
inc
adc
mov
call
popa
lret
pop
xor
je
sbb
sarl
cld
or
xor
fdivl
pop
jge
pop
scas
cwtl
inc
movsl
mov
outsb
outsl
dec
out
popa
into
mov
pushl
xor
inc
jmp
add
jge
into
arpl
lea
sbb
push
add
inc
ror
inc
cwtl
adc
mov
rorl
shlb
ljmp
test
and
jl
enter
xor
dec
mov
mov
mov
mov
pop
lret
adc
lcall
push
bound
dec
xchg
into
sub
adc
lahf
sbb
mov
mov
pop
hlt
xchg
dec
or
enter
sbb
jae
sbb
test
jl
es
mov
sbb
jbe
inc
insl
jecxz
sti
nop
in
popa
call
pushf
movsl
xchg
cmp
mov
cli
std
jno
and
into
ja
xor
or
sub
out
out
add
xchg
test
repz
clc
and
cld
imul
xchg
repnz
stos
mov
lods
fldl2e
push
and
or
xor
sub
dec
or
aam
dec
inc
ret
js
in
xlat
sub
mov
into
shlb
cmp
stos
ljmp
and
mov
into
jp
sbb
cmp
or
adc
icebp
sbb
pop
or
jle
in
inc
in
push
call
sub
daa
inc
mov
pop
aas
aam
mov
scas
cmpsb
aas
stos
push
sarb
lcall
and
dec
sub
fs
xor
pushf
arpl
paddsb
mov
ds
std
sub
lock
pop
cmp
imul
or
fsubl
or
jno
push
and
inc
dec
es
js
stos
mov
in
mov
je
repz
push
fcmovu
out
insl
mov
pop
add
cmpl
cmp
rcl
int3
cltd
cmp
shlb
mov
inc
push
mov
iret
mov
push
push
cli
in
lds
mov
out
iret
mov
jo
lods
xor
sti
adc
add
jno
push
push
ror
lret
nop
aaa
aam
add
push
jecxz
lret
into
pop
out
popf
cmp
add
xor
dec
mov
ja
add
inc
imul
sub
aam
lret
jge
lea
int3
pop
loopne
cmpsb
inc
sub
fs
lods
out
stos
sahf
in
nop
push
mov
push
mov
or
lods
inc
fdivs
jbe
pop
pop
aam
call
xor
dec
pop
inc
stos
sarl
inc
lods
sbb
push
sub
clc
push
lret
loop
icebp
add
push
pop
mov
cmp
fcomi
or
int
in
xchg
cld
dec
xor
jb
test
std
dec
pop
in
push
sbb
cmp
add
pop
dec
pop
jmp
aas
movb
test
add
into
inc
sub
mov
mov
mov
insb
ss
les
inc
and
inc
cwtl
push
fs
sbb
cmp
jle
jno
xor
push
xlat
sbb
fidivrl
and
jnp
sub
adc
dec
xchg
or
insl
xchg
lret
movsb
or
test
fdivrl
shll
inc
movsb
repnz
xor
sbb
iret
pop
cmp
aas
mov
add
jmp
inc
cmp
fcoml
pop
cmp
fisttpll
call
adc
hlt
ljmp
cmpsl
out
pushf
push
popa
out
mov
jp
fs
jmp
inc
jecxz
jae
xchg
sbb
inc
xor
mov
lcall
or
les
pop
mov
or
xor
adc
mov
jecxz
mov
xor
outsl
lea
loopne
inc
mov
shll
pop
repnz
pusha
cmc
inc
rolb
add
loope,pn
add
dec
xchg
std
aas
inc
or
sbb
adc
cmp
jl
inc
gs
push
icebp
mov
jb
cltd
into
inc
add
jae
movsl
add
insb
stos
adc
shrb
mov
jge
pop
sbb
add
inc
and
jge
testb
dec
mov
dec
sub
out
inc
movsl
push
loop
aaa
mov
push
std
lret
aad
inc
jle
push
incl
enter
jmp
es
mov
ret
les
sbb
in
js
xor
cli
or
pop
or
xchg
pop
sbb
aam
js
add
adc
addl
cmc
out
daa
fisubrl
inc
dec
jl
pop
add
xor
das
adc
imul
sub
and
shlb
fwait
push
jmp
xchg
dec
cmp
sbb
inc
and
incb
inc
insb
push
fs
imul
jg
or
push
into
sbb
lcall
pop
inc
inc
mov
mov
adc
leave
pop
pop
es
scas
inc
push
cmp
inc
lock
push
adc
repnz
cmp
cmp
cmp
pop
mov
lahf
aaa
mov
stc
sbb
jl
jmp
cmp
jmp
xchg
mov
pop
rcll
or
sbb
mov
inc
cmpsb
inc
cmc
out
jle
clc
mov
mov
dec
jno
and
out
xor
insl
pop
sahf
insl
ss
sbb
lret
add
jp
cmp
sbbl
rorb
pop
das
sbb
aaa
mov
mov
test
inc
mov
std
dec
push
pop
inc
sub
cmpsb
and
cmp
adc
rclb
push
lret
inc
adc
rcrl
ss
test
dec
sub
fisttpll
mov
xor
jne
movsl
push
out
cmp
sbb
rcr
adc
dec
adc
sub
mov
inc
out
data16
fdivrs
int3
je
ficoml
mov
xchg
pop
or
push
clc
sub
adc
ja
push
cld
lods
mov
and
flds
push
imul
dec
aad
call
lock
and
mov
jg
fstpl
pop
std
test
mov
test
dec
int
jle
pop
lods
sub
dec
push
mov
decl
sub
mov
shll
pop
fwait
cmp
xchg
icebp
imul
fmul
repnz
dec
movsb
roll
jecxz
push
dec
dec
xchg
pop
xor
add
or
cmp
sub
ja
iret
xchg
fcompl
jns
fidivs
stos
jecxz
mov
jl
and
inc
adc
vmovntpd
fiaddl
lods
bound
push
xchg
std
popf
rcrl
out
xchg
pop
mov
subb
push
shrb
and
fisttpll
notb
xchg
movsl
inc
xchg
aas
and
iret
mov
cld
cmpsb
popa
mov
movsl
inc
jecxz
xchg
je
jmp
mov
arpl
aam
loopne
sbb
aam
gs
hlt
fildll
lret
repnz
mov
outsb
fnsave
das
enter
push
pop
jmp
sub
jp
pop
mov
scas
shl
fs
imul
outsl
ja
lahf
in
adc
repnz
movsl
lds
xor
fstsw
stc
push
push
sbb
push
push
rol
dec
sbbl
rcrb
punpckldq
jne
dec
add
repnz
sub
fwait
ljmp
cmp
adc
mov
xor
jle
jbe
push
mov
lods
arpl
cmp
iret
mov
imul
and
push
cmp
or
cmp
jp
jbe
mov
arpl
in
mov
sti
pop
repz
aaa
inc
or
test
sarb
dec
testl
mov
arpl
pop
xor
pop
pop
push
leave
jb
push
sbb
jae
ja
outsl
jbe
mov
fcompl
and
in
out
je
cmp
xor
adc
test
or
cmp
mov
daa
mov
sbb
mov
pop
loop
push
cli
push
out
aad
loopne
outsb
push
xor
push
mov
test
in
dec
mov
bound
inc
test
cmp
sbb
push
ret
jns
inc
frstor
test
xchg
xor
and
sbb
loop
jmp
add
test
orb
fsubl
push
stos
dec
or
sbb
pop
jo
xchg
add
ds
mov
leave
and
xor
xor
mov
idivb
ret
sub
add
jmp
iret
adc
dec
sub
ss
add
or
int
pop
xor
lods
pop
xchg
xchg
inc
pushf
inc
sub
inc
sarl
mov
outsb
int
fcomip
out
ja
out
in
and
cmp
roll
mov
lds
scas
outsb
cmp
notl
push
fsts
adc
pusha
push
je
push
sbb
adc
jle
cld
or
jg
cltd
fimull
lret
jl
call
pop
or
in
cwtl
adc
mov
xor
and
daa
adcl
xchg
cmp
popa
cmpsl
mov
lock
push
inc
cmp
sbb
cmp
in
mov
dec
es
pushf
push
xchg
push
sbb
jmp
outsb
inc
dec
out
push
icebp
xchg
cwtl
lret
sbb
or
cmp
xchg
fildll
popa
xchg
aas
test
push
jmp
xchg
fldt
je
push
inc
and
outsl
xlat
sub
or
call
jmp
xchg
dec
inc
push
or
loopne
inc
dec
xlat
in
pop
cmpb
xor
dec
add
inc
call
add
mov
les
test
div
rclb
mov
sub
push
jecxz
and
adc
adc
out
repnz
lcall
inc
jp
lock
iret
push
inc
adcb
mov
subl
sbb
push
or
jbe
out
pop
sahf
stos
ljmp
test
adc
mov
inc
rorb
jecxz
je
xchg
andb
dec
fucom
ljmp
pslld
test
pop
pusha
out
jno
or
and
movsb
hlt
cmp
push
mov
test
mov
idivb
or
xchg
push
mov
inc
stc
push
jb
push
aad
jl
dec
sahf
add
jae
loope
inc
ljmp
dec
lods
dec
inc
je
push
daa
dec
int3
mov
in
and
pop
cmp
ds
dec
stos
xor
icebp
xchg
or
aam
mov
sub
dec
in
xor
icebp
adc
ljmp
aas
mov
mov
pop
das
mov
movsb
push
imul
data16
clc
sbb
fisttpll
adcb
addr16
adc
test
xchg
push
inc
or
std
enter
xor
adc
repz
das
loope
adc
and
js
lods
dec
es
sahf
xchg
dec
add
ror
cltd
inc
leave
rcrl
dec
lcall
dec
imul
daa
in
sbb
repnz
in
xor
cmp
ficompl
push
xchg
fninit
orb
pushf
xor
std
ds
mov
je
in
ret
dec
jae
dec
mov
push
push
xor
sbb
sub
push
and
aas
add
clc
js
jnp
lahf
sub
xor
incl
scas
xchg
std
or
aam
shrl
jl
in
pop
jecxz
aam
out
jne
sbb
in
ljmp
rcrl
or
shlb
and
rclb
imul
pop
and
xchg
xor
inc
and
ret
test
sti
cltd
xchg
pop
std
out
push
xchg
push
push
push
sbbb
pop
push
sbb
add
rorl
popa
xor
xor
dec
and
aaa
and
leave
aas
mov
mov
xor
bnd
cmp
xchg
mov
imul
mov
iret
jle
push
out
push
pop
outsl
inc
mov
repnz
xor
fidivrs
add
inc
lods
pop
fcoms
push
sbb
scas
add
lea
mov
sbb
push
cmp
scas
jge
push
push
dec
add
fadds
in
outsb
mov
ja
cwtl
lahf
int3
imul
testb
push
or
repz
push
cmp
or
jne
pop
mov
js
or
adc
fcompl
and
add
in
fidivl
subl
jbe
icebp
dec
jb
int
into
add
pushf
jb
movsl
lock
gs
push
aaa
cmpsl
ret
into
cmp
ja
cmp
cmp
inc
cmp
sti
cmp
into
cmp
jl
push
inc
call
mov
arpl
inc
add
or
mov
add
lods
sbb
xor
dec
xor
cmp
insb
dec
push
test
mov
ja
mov
and
xchg
dec
loop
lods
dec
jbe
movsb
pushf
insb
add
mov
add
cmp
jns
mov
es
loopne
add
or
xchg
sub
loopne
sub
popw
in
ja
mov
sahf
bound
es
repnz
movsb
ret
inc
cmp
loop
adc
and
iret
jae
imul
and
outsb
imulb
outsb
aaa
scas
mov
sbb
movsl
or
cmc
push
inc
ss
adcb
loopne
imul
pop
mov
or
jl
lods
clc
sahf
sbb
inc
notb
mov
sub
repnz
dec
jp
inc
mov
cmp
dec
ficoml
decl
cmpsl
mov
jmp
jbe
mov
mov
xchg
rep
inc
mov
sub
cmp
clc
add
jg
ret
sbb
push
pop
xlat
xchg
cwtl
jbe
ja
scas
lcall
iret
pop
pushf
popa
jbe
jge
mov
sub
push
ss
dec
add
scas
jg
or
inc
or
mov
jb
mov
sbb
and
hlt
sahf
icebp
and
clc
std
popa
rclb
sahf
push
mov
pop
inc
aam
mov
inc
push
sbb
push
ljmp
std
inc
adc
je
es
jne
sbb
inc
iret
sbb
push
xchg
imulb
ds
pusha
and
mov
add
pop
mov
fistpl
sbb
jge
push
mov
add
xor
mov
jl
and
idivb
xchg
jb
aaa
movsb
sub
and
test
test
lahf
cwtl
or
aam
jl
add
inc
outsb
cwtl
loope
imul
enter
or
jbe
jne
or
ljmp
cmp
mov
push
sbb
sbb
lods
es
sub
or
movsl
sbb
js
scas
inc
jbe
shrb
das
jle
xchg
nop
inc
pop
loop
test
cmp
inc
lods
outsl
push
mov
or
repnz
mov
and
xor
rcrl
jo,pn
scas
fsubl
popf
test
push
push
mov
js
push
sub
push
and
rol
or
inc
mov
jl
or
add
push
pop
push
sbb
jl
xchg
sti
sub
imul
outsb
es
xchg
test
and
in
push
jle
mov
adc
jle
jl
sub
jne
add
fs
xchg
cmp
add
jb
jbe
out
ljmp
std
and
cld
imul
std
mov
and
mov
incb
push
dec
mov
dec
es
repz
imul
mov
xchg
sbb
inc
fnsave
jp
xor
jbe
popa
cmp
popa
or
imul
and
in
pushf
jmp
jmp
and
aad
and
loope
insb
or
jl
mov
jecxz
xor
ds
pop
and
cmp
cmp
pop
cmp
cmp
sbb
sub
scas
dec
push
int3
pop
xor
ja
sbb
icebp
bound
cmc
aaa
movsl
mov
cmp
scas
scas
mov
push
in
gs
punpckhdq
insl
jmp
pushf
xor
adc
ss
inc
outsl
shl
cmp
and
sti
and
push
jg
cmp
pusha
xor
ss
test
testb
out
jecxz
stos
adc
lcall
adc
outsb
cmp
jb
in
sub
dec
xor
shll
inc
in
testb
add
arpl
movsl
xchg
jo
int3
dec
push
insb
in
add
movsb
push
mov
test
das
jge
sbb
xchg
pop
xor
insl
orb
xlat
es
popa
out
cwtl
or
pop
push
imull
leave
mov
dec
mov
and
mov
aam
mov
adc
push
pop
dec
leave
mov
adc
jne
mov
adc
mov
jecxz
pop
pop
pop
pop
aaa
sbb
xchg
ds
ret
mov
rolb
scas
insl
in
sbb
xchg
jns
repnz
sbb
test
jne
jne
pusha
or
adc
jecxz
ret
enter
inc
fs
adcb
jecxz
and
xchg
push
insl
iret
fsts
jns
in
cld
xchg
das
adc
sarl
sub
insl
push
add
lods
sarb
push
lahf
call
je
out
sti
jne
insl
push
fsub
xor
xchg
add
inc
add
cli
mov
xor
sahf
dec
inc
sub
and
cli
mov
inc
adc
fistpll
test
jne
xchg
clc
pop
push
jecxz
lahf
cli
xor
adc
cmp
mov
sub
fistps
mov
es
add
jns
sub
out
dec
cmp
fnsave
jne
imul
jecxz
imul
aad
pop
cs
xchg
sbb
jle
xor
imul
xor
or
outsl
aaa
push
or
mov
mov
push
mov
stos
icebp
cmp
outsb
mov
enter
push
fdivrl
mov
xchg
sub
std
sub
inc
lea
mov
or
inc
mov
loope
fldl
dec
lea
and
cmp
pop
inc
mov
enter
mov
test
adc
imul
mov
cwtl
stos
push
shrb
and
test
pop
dec
sub
dec
mov
out
mov
imulb
push
das
jp
movsl
mov
inc
dec
jo
jnp
dec
je
std
lock
xor
mov
xchg
mov
cmp
mov
dec
mov
aad
lods
inc
jmp
int
xor
mov
mov
adc
movsb
xor
push
cmp
out
mov
aaa
fdivl
aam
add
inc
pop
sub
jmp
mov
inc
call
lahf
cwtl
mov
inc
fwait
popf
pop
int
insl
lcall
cmp
cmp
jg
stos
fs
xchg
inc
addr16
mov
mov
add
xor
sub
je
sbb
push
lods
test
sbb
test
cltd
xchg
ret
pop
test
or
popa
lock
aad
sub
rcr
adc
jmp
cmp
ret
incl
icebp
pop
mov
sbb
not
add
arpl
icebp
add
xor
stos
shr
pushl
and
add
xor
mov
jae
xor
jp
inc
shll
xor
jbe
jbe
int3
dec
adc
in
pushf
adc
mov
pop
xchg
xor
loope
nop
sub
lahf
movsl
mov
jns
hlt
xchg
mov
pop
out
in
mov
sbb
out
mov
push
gs
repz
popa
inc
js
pushl
scas
adc
test
inc
mov
pop
test
cmp
mov
add
mov
out
pop
xor
and
mov
mov
mov
scas
and
loop
xor
cmp
fisubs
fucom
mov
fistps
inc
popf
iret
dec
adc
xchg
das
stos
jbe
mov
jge
push
and
outsl
ret
or
xchg
mov
inc
mov
sahf
jecxz
insl
sbb
push
mov
sarl
dec
cmpsl
in
lods
into
mov
idivl
arpl
push
inc
adc
dec
jnp
cli
push
sub
les
push
loop
sbbb
sahf
dec
inc
push
xchg
dec
jge
stos
dec
jg
mov
nop
sbb
xor
outsl
movsl
dec
xchg
jg
sti
nop
adc
mov
xchg
sub
jl
les
popa
outsl
bound
push
cmp
push
dec
jno
push
insl
jle
cli
cld
xchg
mov
sbb
loope
fcoml
dec
mov
or
xchg
pop
push
xor
mov
imul
adc
mov
xor
repnz
popa
pushf
push
cmp
divl
xchg
and
add
xchg
or
dec
cmp
loop
mov
out
loope
popa
and
inc
add
movsl
push
xchg
les
xor
xor
sbb
push
sub
movl
leave
fisubrl
dec
jo
mov
mov
pop
pusha
dec
test
fsubrs
decl
mov
mov
loop
daa
dec
ret
out
add
aas
jle
jb
sub
and
mov
sarb
movsb
pop
js
call
mov
or
push
jp
dec
aas
push
inc
in
add
roll
push
xchg
xchg
mov
adc
test
xchg
out
mov
jo
adc
test
popa
sub
imul
clc
push
cwtl
xor
push
xchg
xchg
jecxz
addr16
jle
jbe
bound
out
rorb
jnp
add
add
mov
inc
or
jns
addr16
data16
fnsave
popf
int3
ret
sti
or
popf
pop
sub
mov
or
hlt
shl
mov
jo
dec
or
stc
in
cmpsl
sbb
out
cmp
jnp
add
stos
aad
push
push
xchg
in
pop
inc
mov
cmp
and
cwtl
shrb
push
sub
xor
rorb
and
push
push
xchg
xchg
pop
or
inc
jl
add
add
enter
mov
xchg
incl
dec
push
dec
pop
je
mov
loope
xchg
cmpsl
dec
mov
aas
push
mov
test
dec
call
jbe
aas
sahf
nop
add
cmp
dec
xchg
outsb
je
xchg
mov
aam
fstl
jns
pushf
cli
repnz
or
in
adc
dec
pop
xor
adc
mov
inc
jo
lcall
sahf
cltd
inc
xor
xor
jp
faddl
mov
dec
sti
addr16
repnz
xor
cmpsb
add
or
jb
lret
movsb
mov
out
fcmovnu
bound
lds
xchg
imul
movnti
pop
and
call
outsb
xchg
mov
enter
pop
jo
mov
rolb
pop
daa
mov
xor
cmpsb
sbb
push
xor
add
out
add
sbb
lock
sub
mov
dec
dec
movsb
cmp
push
cld
or
add
jmp
subl
aam
fucomp
sub
sub
mov
dec
in
out
cwtl
mov
push
jp
lods
dec
aas
cld
out
adc
add
mov
cmp
or
pop
sarb
enter
flds
mov
testl
in
fisubrs
mov
mov
icebp
push
out
das
push
dec
test
sub
mov
ja
fwait
add
insl
sbb
pop
popa
push
sbb
hlt
loopne
push
mov
dec
jmp
push
cmp
mov
mov
in
xchg
xor
add
sub
add
fsts
test
test
je
addl
mov
xlat
outsl
inc
xchg
and
pop
popf
inc
add
sub
sbb
jne
outsb
nop
mov
sahf
cmp
jge
pop
sbb
adc
lret
lahf
leave
jo
dec
sar
mov
or
sbb
mov
mov
ret
jb
addr16
adc
adc
pushf
adc
mov
arpl
test
sti
mov
out
adc
mov
mov
mov
pusha
imul
pushf
jnp
and
dec
js
movsl
insl
sbb
xor
mov
pushf
sbb
scas
adc
and
xchg
adc
fs
or
iret
and
cmp
adc
je
mov
add
insl
stos
rcr
xchg
or
xchg
cmp
fstpl
les
cltd
and
jb
xor
adc
jl
nop
popf
enter
sahf
fiadds
mov
add
inc
das
popf
stc
repnz
orb
mov
int
int
test
mov
sbb
daa
ret
std
imul
jns
sbb
inc
pop
shll
push
push
aaa
inc
rorb
popf
fs
sub
jp
daa
iret
sub
adc
js
cmp
pop
in
lea
inc
push
int3
fnclex
cld
lods
cmp
hlt
test
test
push
psrlq
sub
jo
push
scas
mov
in
sbb
xchg
dec
cmp
sbb
outsb
pusha
aam
add
sub
mov
adc
pusha
add
jno
and
or
sarb
mov
xor
int3
xchg
insb
cmp
mov
push
dec
adc
int3
mov
arpl
enter
jle
adc
mov
sbb
xchg
daa
dec
imul
daa
movsb
mov
adc
fdivrs
push
add
cwtl
pop
shrb
cmp
inc
jo
cmp
mov
test
add
sahf
sub
sub
mov
je
test
inc
adc
scas
mov
dec
jbe
fstps
jbe
and
sub
repz
rorb
mov
repnz
pop
mov
les
sbb
out
sbb
pop
mov
ljmp
out
xor
or
ficoml
cmpsl
insl
out
xchg
sub
jl
xor
or
or
dec
outsb
cli
neg
mov
inc
aam
sbbl
or
cmpsl
adc
in
scas
jno
mov
call
dec
outsl
jo
inc
or
dec
out
inc
ljmp
lods
add
jle
sub
cmp
mov
push
popf
sbb
sahf
movl
fdivrl
into
je
pusha
out
cltd
aas
mov
call
lcall
shrl
jp
sub
push
int
cmpsb
mov
movsl
in
lock
mov
and
sbb
mov
add
pop
cmp
cwtl
inc
cli
adc
imul
gs
rcrb
mov
jo
mov
or
out
add
fwait
cli
inc
dec
pushf
loope
pushf
or
sub
sbb
xor
pusha
idivb
push
stos
sub
cs
pop
inc
notb
orl
cmpsb
ja
inc
xor
dec
xlat
pop
cmp
int3
xor
mov
cmp
aas
inc
pop
stos
adc
jg
and
push
pushf
in
xlat
rcrb
push
sub
loop
adc
aam
fsubrs
sub
mov
xchg
ss
daa
sub
mov
xor
test
in
mov
dec
pop
ss
inc
push
push
mov
lds
jecxz
mov
cmp
stc
stc
xor
insl
cmpsl
xchg
in
push
popf
in
in
sub
mov
stos
loop
cltd
push
jp
lods
icebp
ds
cmp
rcll
adc
jg
icebp
pop
das
mov
sub
add
pushf
cs
mov
insb
setp
sbb
sahf
inc
xor
mov
xorl
test
movsl
fs
jae
fistpll
sub
add
aaa
je
cld
xor
popf
mov
pop
or
jp
xchg
jns
push
inc
loope
mov
xor
mov
pop
enter
in
lcall
adc
xchg
repz
popa
xchg
add
inc
loopne
and
ret
sub
xabort
dec
fs
sbb
in
xchg
jne
loope
stos
xor
xchg
mov
addr16
cltd
push
adc
cli
add
pop
xorb
loopne
or
das
pop
aaa
test
inc
es
arpl
or
inc
sahf
add
lods
fcmovnb
enter
xor
adc
add
inc
sbb
enter
xor
aaa
sub
dec
xchg
cmp
js
mov
jmp
sarb
xchg
dec
repnz
outsb
loop
mov
aas
mov
lock
dec
pop
lcall
out
scas
ja
mov
and
repz
cs
jg
pop
xchg
addr16
jo
out
push
lret
repz
jmp
mov
pop
xchg
pop
pop
inc
out
aaa
test
std
ss
push
ja
adc
pop
ret
mov
or
xor
aad
int3
inc
mov
js
mov
xchg
jl
sub
sbb
pop
xor
scas
mov
adc
outsb
xchg
jecxz
lods
xor
iret
scas
adc
mov
gs
add
test
outsl
push
push
add
dec
lret
cmp
push
ja
adc
ja
xchg
sub
mov
cmc
mov
mov
inc
and
cmc
or
mov
sbb
mov
lds
push
mov
jnp
dec
fs
xorb
sub
std
sahf
push
push
sbb
fidivrl
popa
mov
icebp
dec
dec
sti
lret
mov
xor
aad
inc
fwait
sarb
and
scas
jo
pop
adc
xchg
cli
fxam
dec
xor
test
daa
mov
pop
iret
pop
jecxz
sbb
movsl
iret
push
pop
dec
mov
xlat
aam
or
jmp
xor
push
pusha
lods
sub
hlt
pop
lahf
mov
push
in
nop
iret
pop
sbb
jne
fwait
mov
rcrb
sbb
add
ss
enter
comiss
test
jne
insb
dec
jecxz
outsb
jg
in
dec
or
repz
sahf
fdiv
loopne
jbe
xchg
in
xchg
add
pop
jmp
jmp
xor
jo
add
sbb
cmpsl
and
push
dec
pop
xor
pushf
std
es
or
sub
popa
lret
mov
sub
mov
fsubl
js
xchg
mov
xchg
jo
inc
fmul
dec
sub
mov
insl
xchg
imul
jae
hlt
pop
and
jle
jns
roll
sub
scas
adcb
fs
inc
sbb
xor
fs
sub
lods
adc
ror
loopne
aam
mov
jmp
cmp
adc
mov
leave
ror
pop
loop
xchg
shrb
jnp
push
add
xlat
sub
popf
add
jns
pushf
test
loope
popf
call
xchg
js
addr16
sbb
inc
bound
fs
push
iret
cmp
fiaddl
hlt
fcoml
push
jns
sarb
inc
shrb
sbb
inc
mov
stos
xchg
cmpb
jge
dec
ss
in
add
jnp
clc
xchg
mov
cmp
and
fdivrs
and
cmp
xchg
fs
call
jl
or
test
cmc
xchg
call
test
dec
test
jecxz
out
leave
cmpsb
in
das
mov
addr16
fwait
mov
cli
xor
sub
lods
dec
out
out
cmc
out
jbe
push
pinsrw
push
push
mov
and
cmp
push
fldl2e
cmp
in
xchg
ret
inc
mov
pop
mov
jmp
xorb
push
ret
mov
xchg
dec
fistl
out
in
out
cmp
shll
jns
test
pop
dec
sbb
lods
add
ss
cwtl
xor
add
or
mov
cmc
sbb
mov
repnz
inc
dec
imul
pop
sbb
stos
jecxz
lret
sahf
lods
jecxz
insl
and
add
fisttpl
and
fiaddl
cwtl
out
adc
jl
xchg
loop
je
push
pusha
dec
sub
pop
and
xor
outsl
es
pop
pop
js
or
cmc
popa
dec
enter
mov
xor
ljmp
stos
pop
in
adc
lods
mov
call
mov
mov
xor
ret
xlat
and
xor
rclb
mov
mov
jle
leave
push
adc
jns
les
cmpsb
lds
lret
arpl
cmpsl
in
jbe
jge
es
or
xchg
ja
inc
pushf
loopne
inc
xor
jle
es
lcall
pop
mov
xor
sarb
sar
sbb
or
addr16
inc
cmp
xor
loop
in
push
sub
fstl
add
stc
nop
xchg
xor
or
pop
push
cmp
inc
push
jle
add
inc
jns
xchg
je
out
mov
fcomip
enter
movsl
or
cmp
lret
ljmp
cmp
adc
xchg
pop
idivl
or
aad
inc
inc
fmull
xlat
loop
mov
aam
jmp
jno
mov
jo
add
push
sbb
dec
lcall
push
mov
inc
sbb
inc
or
xor
mov
test
or
jbe
fucom
out
push
jl
insb
sub
fadds
push
clc
inc
xor
icebp
push
push
push
mov
fs
mov
js
add
inc
notb
testl
jl
add
nop
lret
ljmp
int
loopne
push
jmp
sub
fwait
xor
lcall
out
mov
shlb
daa
sbb
jb
roll
sbb
sub
nop
insb
jg
inc
mov
mov
push
movsb
sub
xor
ss
or
jg
stos
dec
imul
nop
and
sub
popa
cmpb
popa
xor
sub
lods
fsubr
mov
cmp
xchg
pop
imull
push
xchg
sbb
sub
pushf
push
or
insb
fs
push
dec
jg
scas
sbb
outsb
cli
lret
xchg
add
rcrl
cmpsl
in
mov
mov
aas
bound
xor
sub
scas
loop
mov
psubusw
push
pop
xor
fs
jecxz
adc
bound
repz
push
js
jno
in
test
xchg
dec
inc
mov
shrb
adc
jecxz
xor
es
stos
sti
lret
xor
xchg
mov
cmp
fisubs
daa
enter
xor
pop
loopne
enter
arpl
scas
scas
fidivrs
add
mov
repz
popf
lock
int3
out
cltd
mov
inc
and
ja
cmpb
pop
mov
push
popa
add
ja
sub
sbb
mov
jle
loope
xchg
rolb
lods
xchg
push
in
mov
pop
or
lock
dec
popf
loopne
xchg
clc
mov
lahf
jge
cmp
jae
aad
or
lret
pop
aaa
mov
in
inc
mov
mov
lret
jge
imul
jmp
cmp
jge
sar
jb
std
imul
mov
pop
in
inc
rol
cmp
inc
int3
jecxz
mov
rol
in
mov
pop
jbe
cmpsb
popf
neg
std
in
ds
mov
jae
icebp
jb
jge
sahf
pop
test
dec
inc
xchg
lds
fwait
cmp
xor
cmp
inc
pusha
pusha
inc
scas
jp
jne
jae
xor
adcb
icebp
aaa
ljmp
xrelease
lods
pop
mov
bound
or
aaa
lods
fsubs
fs
cmp
mov
sub
stos
dec
insb
test
ds
xchg
and
ljmp
leave
mov
test
mov
imulb
xlat
dec
or
shrl
fdivr
insl
mov
mov
mov
enter
lcall
pop
inc
cmpsb
and
adc
add
es
lret
xchg
mov
and
add
and
lods
int
and
filds
imul
scas
int3
sub
out
sbb
mov
add
out
mov
sbb
xchg
aas
movsb
mov
mov
push
stos
pushf
or
dec
add
cmp
pop
js
adc
xor
insl
lahf
mov
psubsw
fiaddl
in
ffree
ja
addr16
adc
sub
cld
cld
and
pushf
stc
and
ja
add
outsl
sbb
jns
sti
mov
pusha
pop
fwait
movsl
repz
and
sbb
cmp
jl
fcoml
jecxz
xor
cmc
je
mov
pop
cmpb
mov
xor
lahf
out
add
test
test
xor
popa
imul
adc
add
cld
mov
xor
mov
outsl
loop
stos
dec
out
jmp
jb
or
shlb
cltd
mov
in
imul
or
mov
mov
or
loopne
mov
in
es
push
lods
dec
inc
mov
and
hlt
xchg
outsl
jl
repnz
das
shrb
sub
mov
cmc
lcall
cmc
sbb
xchg
sbb
xchg
pop
push
sub
push
jbe
xor
into
arpl
imul
mov
outsb
sbb
xchg
dec
popa
or
mov
xchg
jno
or
sub
mov
sub
js
sbb
fidivs
cli
movsb
jno,pn
xchg
jl
cmc
loope
outsb
jno
sbb
int3
jmp
lret
pop
in
dec
mov
dec
pop
jne
xchg
lret
scas
icebp
aam
pop
gs
pop
mov
cwtl
enter
sub
dec
test
xchg
in
jl
pushf
cmp
sub
es
pusha
cs
cmpsb
cmp
xchg
dec
xchg
out
push
sbb
repnz
andb
push
cltd
xchg
jo
in
iret
inc
push
push
adc
sbb
xor
and
in
pushf
cmp
jecxz
and
pop
and
sub
dec
cmpb
jl
fmuls
stc
fidivrs
cmp
inc
insb
shll
push
lcall
popf
cli
xchg
mov
stc
popa
ljmp
mov
test
lahf
loope
insb
sarb
ficoms
push
cmc
jmp
aad
fcoml
fs
xchg
call
loope
daa
leave
xor
ret
adc
lret
pop
iret
loope
push
add
inc
gs
pop
jbe
sub
cmp
and
mov
fucomi
lods
sarl
in
inc
lret
sti
pop
dec
sbb
cli
incl
jo
jge
cmpb
adc
in
out
shlb
fwait
inc
lock
pop
adc
mov
imul
outsl
xchg
inc
inc
rclb
mov
int
stc
imul
enter
in
mov
xchg
push
push
sarb
aaa
pop
or
mov
xchg
pushf
in
push
or
pop
mov
bound
fldcw
add
pop
xchg
add
stos
cmp
sub
daa
test
dec
pop
sar
shlb
adc
dec
mov
les
testl
lods
jge
sahf
insb
ja
push
repz
jp
andl
movsl
js
fisubl
adc
imul
add
xchg
mov
or
cmpsl
xor
sbbl
test
in
xor
pop
pusha
cmp
in
lods
jbe
jns
inc
test
xor
das
movsl
inc
popf
nop
xchg
push
push
add
push
mov
mov
adcb
cmp
movsl
stos
mov
mov
and
ret
pop
jge
inc
mov
adc
div
mov
loope
mov
cmp
icebp
scas
sub
mov
aam
jno
loope
adc
js
loope
outsl
int3
add
sub
jo
int
sub
das
jb
outsl
xchg
fcomip
fidivs
xchg
stc
pop
or
pop
jmp
pop
pop
jno
pop
sarl
inc
lret
pop
jle
out
aad
fwait
bnd
cmpsl
out
imulb
adc
popf
and
xchg
divl
xchg
adc
test
lock
cmp
cmp
ret
add
test
mov
sbb
repnz
jne
sbb
mov
cmc
pop
xor
pop
daa
cmp
rorb
mov
inc
xor
into
cmp
or
mov
sti
data16
pushf
outsl
sbb
std
test
fldl
hlt
jge
or
push
cmp
mov
mov
cmp
mov
push
and
sbb
lret
xchg
out
rorb
sbb
xchg
and
sbb
inc
push
inc
pop
xor
movsb
pop
jo
aad
dec
mov
aad
cmp
push
pop
cmp
cmp
mov
mov
dec
cltd
sahf
into
cmp
and
sub
add
inc
and
cmp
inc
adc
imul
or
mov
cli
test
roll
hlt
mov
es
fstl
push
add
into
inc
adc
push
mov
push
add
add
aam
lcall
jne,pn
pop
das
inc
dec
call
jbe
xchg
pop
call
xor
add
mov
sbb
sahf
nop
push
int3
dec
xor
fistpl
les
jnp
add
sub
out
in
mov
xchg
push
dec
aad
push
sbb
xchg
jbe
inc
clc
dec
add
and
notb
repnz
mov
inc
je
std
sbb
cmpsl
das
test
and
int3
std
repz
xchg
cmpsb
mov
adc
xchg
lock
add
loope
sub
stc
pop
xor
jle
or
jl
mov
lret
push
add
sub
and
inc
int
fisubrs
in
nop
and
jne
pushf
sbb
bound
inc
fldcw
and
jge
inc
lods
rcll
ds
jle
or
popf
cmp
movsl
mov
popf
addl
inc
sub
sub
push
mov
icebp
pop
dec
cmp
mov
addr16
sub
shl
mov
test
cmp
sbb
popf
cld
imul
adc
inc
aad
hlt
mov
cmpsb
push
mov
inc
in
insl
xchg
lock
enter
js
enter
inc
add
inc
hlt
sbb
sub
es
fwait
cmp
dec
popf
inc
xor
add
clc
mov
sbb
js
js
inc
xchg
adc
add
inc
dec
jg
movsb
push
neg
dec
and
mov
xor
inc
scas
cmp
imul
xchg
les
outsb
dec
daa
fldcw
jbe
and
popf
dec
mov
pop
cs
add
push
inc
dec
rcll
clc
push
imul
xor
repnz
pop
mov
ss
sahf
sub
sub
sahf
adc
gs
in
addr16
push
mov
jmp
push
popa
dec
jae
inc
shr
cmp
fidivs
stc
pop
pop
xorb
pop
pop
push
dec
imul
adcb
push
insl
lret
cmc
test
xor
dec
jmp
sbb
nop
pop
pusha
xchg
out
shr
nop
jns
cmp
out
mov
iret
aas
iret
add
ljmp
xor
sub
stos
push
jp
pop
aam
jp
sbb
xchg
dec
add
jge
push
jl
jl
adc
sarb
pop
ljmp
gs
addr16
inc
push
hlt
jl
ljmp
xor
dec
jbe
dec
leave
jl
dec
mov
loope
jb
mov
pop
addb
addr16
mov
ret
dec
scas
pop
ds
pop
inc
fsubl
js
fsqrt
or
inc
adc
cmc
jmp
adc
mov
lret
lret
shll
and
sti
notb
adcb
ficoms
and
push
dec
push
push
lahf
pop
pusha
push
cltd
pop
dec
push
pusha
icebp
js
lea
sub
shlb
cmp
cmpb
xor
ja
xchg
sub
pop
mov
mov
je,pt
and
mov
pop
adc
repz
sbb
inc
push
jae
and
outsb
and
xorb
pusha
inc
or
add
pop
pop
mov
inc
adc
jb
and
lods
dec
in
aas
sub
xor
mov
and
mov
outsb
out
pusha
mov
cmp
inc
xchg
or
sbb
dec
lds
stos
aam
insb
loop
xor
inc
lock
xor
dec
lahf
jnp
mov
out
sbb
cmp
inc
mov
fs
xlat
xchg
pop
pop
lods
scas
sbb
cltd
arpl
xor
stos
stc
pop
cmpsb
and
lods
loope
or
cmpb
pop
mov
pop
aas
and
jno
lahf
sub
ljmp
inc
sbb
in
cmpsb
decl
out
cwtl
cmovs
sub
cmp
and
mov
cmp
xor
cvtdq2ps
fidivs
nop
add
xor
out
mov
je
jmp
jmp
ret
pop
popl
jmp
push
cmp
enter
push
aas
cli
nop
cmpsl
rclb
adc
je
in
cli
scas
push
add
mov
in
dec
int
push
mov
fucomp
scas
cmp
or
out
bsf
ret
scas
loop
dec
cmp
out
movsb
rol
outsb
call
in
lret
stc
dec
fdivr
xor
and
dec
fisubs
mov
xlat
lods
and
cltd
and
int3
pop
inc
cmpsl
aas
or
pop
call
cmpsl
push
inc
pop
push
sbb
hlt
mov
sub
je
mov
xor
dec
lcall
sbb
push
popa
xchg
mov
adc
insb
ffreep
imul
fwait
shll
add
frstor
lods
pusha
push
jmp
adc
lea
enter
roll
mov
repz
add
popf
lds
xor
inc
icebp
dec
mov
shlb
cmp
cmp
xchg
aaa
sub
pop
int3
jmp
and
lea
pop
jo
xchg
xor
test
hlt
cmp
dec
push
fisttpll
mov
sub
jl
pop
adc
adc
cmp
lock
jo
popf
mov
shr
and
push
adc
or
adc
fbld
out
add
jl
lahf
enter
out
inc
xchg
push
xchg
fsub
jo
jl
fimuls
cwtl
xchg
mov
jg
iret
dec
adc
es
fwait
cmp
cmp
mov
out
mov
push
rolb
mov
out
aam
icebp
mov
sub
xor
in
push
mov
sub
sarb
bound
lahf
xchg
lods
mov
stc
pop
jle
cwtl
cmp
fldt
push
dec
push
jl
or
shll
sbb
mov
movsl
cli
inc
out
xor
imul
adc
and
rolb
xlat
mov
mov
add
jns
fiaddl
in
inc
fbld
and
in
aam
int
push
push
pop
aas
and
push
mov
insl
popl
adc
pop
and
inc
cmp
fstl
lock
out
sbb
pop
sbb
lea
xorl
add
mov
cmp
mov
dec
pop
dec
mov
dec
sub
mov
cs
add
scas
pop
fwait
xorl
popa
inc
or
test
mov
loop
out
into
das
sbb
fnstenv
jae,pn
fiadds
lret
test
cltd
in
in
push
push
dec
sbb
push
push
lods
mov
xor
test
and
cld
xchg
inc
std
sub
and
fwait
jp
xchg
pop
sbb
jne
adc
in
lcall
subb
sbb
nop
jmp
repz
dec
and
dec
inc
lea
jns
pusha
ds
stc
icebp
add
inc
aad
sbb
aas
or
xchg
std
add
into
das
test
int3
inc
push
jle
xor
lds
sbb
nop
dec
divl
push
mov
xor
in
aam
lcall
jl
cwtl
test
jnp
mov
xchg
mov
push
jecxz
xor
mov
bound
jmp
cmp
ss
aas
pusha
nop
adc
test
and
inc
ljmp
pop
cmp
mov
cmpsl
pop
ss
je
int
cmp
xchg
outsb
add
adc
xchg
xchg
shll
push
cmp
sbb
add
jmp
xor
or
addl
in
je
frstor
ror
sub
xchg
hlt
js
jecxz
add
sbb
adc
gs
sbb
push
add
jge
adc
lcall
mov
jl
andb
jecxz
adc
sub
pand
jne
mov
adc
sub
pushaw
mov
mov
mov
repnz
outsb
lods
pop
jne
dec
out
nopl
sub
jl
push
cs
adc
mov
mov
in
repnz
mov
mov
jl
fidivs
sarl
or
scas
fs
cltd
xor
ffreep
xor
inc
inc
mov
out
dec
cmp
ds
mov
xchg
ljmp
jmp
xchg
mov
outsb
scas
push
xchg
jmp
jecxz
xchg
xchg
or
sub
dec
xchg
jl
dec
mov
adc
lret
jp
fld
ss
adc
jae
das
dec
adc
rol
out
adc
mov
inc
adc
push
mov
pusha
mov
lock
mov
stc
mov
aaa
stc
cmp
jno
call
test
push
jne
pop
pop
mov
mov
inc
int
in
outsb
or
jbe
mov
bound
andb
mov
xlat
popa
or
mov
mov
lcall
cmpsl
and
cmp
inc
movsl
idivl
cs
mov
jge
add
or
mov
jle
decb
imul
stos
pop
push
fcomps
jp
jmp
inc
movsl
adc
cmp
sbb
adc
push
in
cmc
bound
js
xor
mov
inc
push
out
enter
cltd
popf
xor
jbe
movsl
je
xchg
xchg
and
and
xchg
cmp
and
mov
dec
insl
sbb
stos
jb
xor
dec
data16
pop
dec
mov
xor
rcr
cmp
mov
xchg
pop
lahf
sbbl
mov
nop
repz
sbb
in
into
data16
lock
fcom
daa
nop
cltd
and
pop
mov
negb
xlat
push
cmp
mov
push
push
push
mov
xchg
jmp
mov
xor
pusha
mov
out
xor
jmp
mov
aad
loope
pusha
in
imul
shrb
pop
cwtl
xor
mov
xchg
inc
arpl
inc
dec
inc
in
imul
cmc
push
push
jp
stos
and
xchg
sti
mov
out
dec
idivl
adc
lcall
mov
mov
sbb
outsl
cs
sbb
push
cmp
dec
inc
or
ret
in
je
mov
jnp
outsb
adcb
inc
jae
gs
in
push
and
inc
adc
and
cltd
xchg
ret
fmul
inc
aas
jno
loopne
mul
fnsave
mov
jp
aas
push
and
mov
xchg
movsl
dec
mov
out
mov
sbb
pop
push
inc
inc
ljmp
pop
test
stos
mov
add
mov
fnstenv
xchg
loope
inc
dec
cmp
aam
sub
std
sbb
add
fs
lret
push
xchg
out
mov
push
aam
inc
pop
jo
into
gs
add
sub
je
mov
mov
enter
mov
adc
and
mov
mov
mov
aad
lahf
push
push
xorl
pop
fldln2
fwait
nop
and
in
dec
push
out
into
jecxz
sub
mov
adc
out
push
mov
adc
orb
inc
jg
jl
insl
aam
ja
in
cmp
int3
in
test
mov
xchg
push
dec
xchg
repz
lret
movsb
sbb
popf
in
imul
sub
push
push
pushf
push
dec
imul
sub
sbb
cs
ret
pop
fcoms
sarb
cmp
sbb
pop
cmc
or
mov
mov
fs
cmpsl
sub
mov
cmp
push
xchg
push
pop
unpckhps
push
sbb
dec
pop
outsb
dec
rcll
ret
mov
adc
cmp
int3
push
repnz
xchg
inc
adc
pushf
in
mov
lock
arpl
andl
push
jb
cli
mov
cmp
sahf
addb
je
or
mov
cmpsb
xchg
xor
aad
push
sub
stos
cld
call
jae
shlb
test
sbb
mov
push
jbe
std
sub
pop
jp
adc
add
fbstp
sbb
das
loope
call
repnz
add
dec
in
inc
std
jo
dec
in
cmp
cwtl
pop
pop
and
mov
lret
out
or
ja
call
xor
rdpmc
cmp
cmp
jns
es
pop
mov
sbb
push
adc
push
jl
jle
scas
push
xchg
push
jb
dec
xchg
mov
cmp
in
pusha
push
fnstenv
sbb
ljmp
jae
adc
insl
js
test
mov
cmp
cli
leave
dec
pop
sahf
shrl
fs
push
jge
inc
imul
push
in
mov
sbb
or
pop
mov
jne
out
mov
inc
jnp,pn
loopne
or
insl
in
pop
inc
hlt
pusha
jge,pn
sbb
mov
adc
mov
sub
ja
push
mov
add
sbb
movsl
in
decl
push
xor
push
cmpsb
push
lcall
lcall
dec
cld
in
outsb
pop
lods
lahf
jge
div
mov
cltd
mov
leave
cmc
fsubrl
mov
mov
mov
push
adc
call
lahf
ds
inc
cmc
push
mov
push
out
push
xor
sbb
pushf
xchg
dec
addr16
sbb
les
xchg
pop
jge
mov
add
adc
xor
bound
adc
dec
popf
dec
ja
pusha
cmpsb
aam
mov
cmp
pop
mov
bound
xor
negb
and
inc
hlt
mov
jae
mov
inc
adc
dec
imul
arpl
sub
push
mull
inc
insl
fs
out
test
mov
arpl
sbb
xchg
enter
cmp
and
aas
out
scas
mov
mov
mov
pop
inc
push
cmp
push
cmp
sbb
leave
cmpl
jns
lock
rcl
push
mov
cmp
fdivs
jecxz
jl
loop
xchg
jp
adc
mov
jno
add
popa
outsl
ss
lods
inc
pop
push
mov
push
cltd
ljmp
jge
xchg
push
bound
insl
es
roll
aas
mov
xor
sti
cltd
dec
stos
mov
je
out
mov
mov
outsb
adc
es
add
sub
lods
jns
pop
dec
imul
mov
and
mov
and
mov
cmpsl
in
mov
xor
pushf
cmp
adc
jae
pop
mov
fs
push
pop
ja
shll
popf
lock
scas
pop
add
mov
imul
mov
mov
aas
movsb
cmpsb
cmpb
push
test
dec
repz
push
cmp
ja
arpl
outsl
icebp
push
pop
cmpsb
add
mov
add
stos
push
inc
mov
repnz
pop
pop
xchg
dec
xchg
fwait
xchg
lahf
and
inc
cmp
insb
or
inc
loope
pop
push
mov
nop
sub
fcoms
xchg
aad
and
push
movsl
in
sub
pop
je
enter
mov
inc
popa
lahf
cld
insl
repnz
je
inc
mov
jge
aaa
xchg
jl
leave
push
loopne
fnstcw
sub
cmpsl
xlat
mov
xor
add
test
sbb
mov
cmpsl
jl
adcb
ss
xor
or
insl
mov
das
pop
adc
pusha
jge
xchg
and
mov
pop
push
xchg
jge
pop
addl
mov
cld
jecxz
add
stc
mov
push
scas
add
imul
mov
and
add
pop
in
mov
imul
pop
faddl
popf
and
or
test
pop
clc
or
nop
aam
fistpll
aad
shrl
sub
and
dec
cmp
mov
mov
stos
mov
inc
out
ficoml
sub
movsl
sbb
mov
sub
stos
push
ret
xchg
inc
hlt
mov
add
xchg
push
pop
sbbb
and
rolb
cmpsl
aas
data16
lock
gs
adc
jge
add
ja
movsb
inc
inc
mov
or
stos
mov
pop
dec
jle
lret
subb
mov
shll
xor
sbb
cld
inc
jecxz
test
jb
add
test
inc
sbb
gs
cld
imul
outsl
imul
mov
imul
outsb
pop
notb
pushf
in
mov
and
jnp
test
lods
in
xchg
sbb
hlt
inc
test
jbe
mov
cld
faddl
mov
dec
mov
cli
dec
ja
rep
icebp
ljmp
adc
dec
mov
jo
das
cmp
ret
in
adc
enter
and
fldcw
data16
daa
mov
sub
lods
xchg
fdivl
mov
jecxz
add
pop
jg
pusha
xchg
in
scas
movsb
sub
scas
icebp
nop
in
mov
push
gs
xchg
push
add
inc
outsl
mov
cld
into
sub
jecxz
xor
push
outsb
pusha
sti
je
loope
and
cld
push
loop
mov
push
or
cmp
lock
test
mov
outsb
es
cs
sbbl
aas
div
cmpsb
or
lods
out
mov
dec
jp
pop
mov
or
adc
push
in
fidivrs
std
lods
sarb
pop
pop
loopne
and
test
test
sub
adc
pop
clc
cmp
inc
jmp
movsb
outsl
dec
and
inc
js
sbb
popf
cmp
js
inc
incl
mov
and
sbb
in
add
std
bound
lock
and
add
inc
jo
pop
aam
mov
cli
in
add
andb
aam
xor
cmc
xchg
hlt
cwtd
fcmovu
sarl
cmpsl
cmp
mov
outsl
mov
xor
adc
xchg
bound
test
xor
or
out
inc
jbe
jmp
jae
out
pop
daa
xchg
sbbb
out
clc
mov
in
rol
jbe
cmc
adc
cmp
es
pop
mov
mov
addb
scas
inc
in
dec
int
sbb
sbbb
mov
ffree
popf
cmp
out
test
mov
or
addr16
cld
test
sbb
inc
int
push
cld
dec
xchg
popf
imul
ss
push
xor
dec
mov
xchg
sbb
xchg
ret
sahf
push
test
cmpsb
and
mov
inc
or
jnp
sbb
scas
adc
ljmp
scas
int
sarb
pop
mov
adc
ss
push
icebp
scas
dec
stos
add
pop
cmp
mov
mov
nop
ss
mov
push
fcompl
mov
gs
out
fcoml
mov
mov
lret
call
and
cmp
sbb
jl
or
jl
cwtl
and
sbb
cltd
adc
lock
push
push
pop
imull
jbe
jo
cs
xor
jge
into
mov
cmp
jmp
and
xchg
ja
pop
and
stos
add
jle
xor
cmp
sbb
gs
push
xor
movsb
outsl
cmpsb
xlat
leave
call
das
push
ret
inc
mov
cltd
ret
fwait
and
xor
imul
bound
mov
fwait
in
xor
in
jle
pop
dec
shll
add
sbb
fsubs
mov
andl
adc
imul
jmp
mov
imul
pop
bound
lret
dec
arpl
leave
sub
movsl
add
or
mov
ja
jne
addr16
pcmpgtw
mov
and
fmull
pushl
add
movsb
and
push
pop
inc
lods
cmp
decb
jle
pop
mov
push
adc
loop
out
aas
mov
fidivrs
mov
scas
xchg
sarl
cmpsl
imul
fs
mov
cmp
icebp
cld
mov
xchg
iret
sbb
in
mov
loopne
int3
cmp
add
mov
inc
iret
push
inc
dec
mov
xchg
int
stc
pusha
shrl
or
jne
sbbl
popf
sub
aad
push
js
test
in
repnz
iret
cmpsl
xchg
gs
hlt
pop
js
lods
mov
into
mov
outsl
push
inc
scas
jo
rcl
push
jle
bound
inc
jle
jmp
xchg
addr16
xor
and
roll
gs
shlb
test
dec
mov
mov
xchg
idivl
outsl
pop
lods
xchg
fwait
xlat
cs
sbb
sub
cli
push
jmp
inc
sbb
xchg
cmpsb
xor
jno
adc
fwait
cmpsl
clc
push
movsb
push
jne
loopne
call
les
dec
jmp
aas
push
movsb
or
dec
ds
mov
pop
test
push
cld
in
mov
inc
xor
mov
movsb
xor
orl
xchg
push
pop
and
das
xchg
popa
fisubs
sbb
or
ds
ljmp
ret
push
movsl
jns
push
daa
or
and
in
je
mov
aam
faddp
sub
mov
call
imull
mov
and
inc
mov
xor
mov
jo
clc
lods
lret
jecxz
xchg
dec
dec
gs
sti
je
jns
or
test
cmc
pop
test
stos
adc
gs
adcb
inc
mov
jg
nop
stos
ljmp
mov
jno
ds
or
add
pop
jns
pushf
fcomps
mov
jno
and
jnp
adc
gs
xor
rcrl
add
aam
shlb
pop
dec
cs
push
test
std
dec
jns
lods
push
add
repz
sbb
sub
xlat
inc
push
int
imul
inc
inc
sbbb
lods
lds
or
cli
shll
or
cmp
fprem1
je
mov
fsubp
xor
pusha
cmp
mov
cmp
jae
mov
adc
jl
ss
enter
test
mov
jbe
sti
loope
mov
gs
mov
push
jb
sbb
pop
jp
popa
cmpsl
add
clc
js
popf
test
mov
rolb
push
shll
out
dec
ds
push
cwtl
sbb
lea
imul
add
xlat
in
pusha
fiadds
call
cmp
enter
sub
dec
pop
or
in
div
push
fidivrs
cli
into
inc
sub
mov
or
in
lret
aas
adc
je
and
sub
xor
stos
sub
test
inc
dec
ret
movsl
out
dec
scas
jno
outsb
mov
or
mov
xlat
movl
xor
in
repnz
pop
stc
xchg
pop
jns
ljmp
mov
nop
xchg
lods
aas
pop
ret
push
lods
xor
gs
jg
mov
add
inc
fists
sbb
and
std
xorl
sbbb
jmp
sbbl
ja
std
repnz
push
cmp
lret
cmpsl
push
arpl
cmp
mov
jb
outsb
xchg
popf
adc
cs
je
xor
mov
mov
inc
xlat
das
jo
js
push
mov
dec
pusha
push
rep
or
mov
dec
cmp
aaa
iret
div
sbb
mov
js
loope
sbb
xor
dec
or
sbb
adc
or
sbb
push
sub
gs
scas
pusha
lea
std
arpl
push
push
lret
bound
mov
jb
adc
xor
xor
aaa
adcl
arpl
cmc
mov
lret
inc
mov
jnp
sub
idivb
mov
xor
xor
ret
test
sbb
xor
in
mov
mov
dec
aad
ret
adc
sbb
sub
pop
adc
jne
inc
sbb
jle
out
sahf
jnp
je
push
in
hlt
outsb
test
mov
sub
or
lahf
dec
or
test
ja
lds
js
ret
xchg
shll
push
stos
fwait
push
ds
fidivs
inc
mov
pop
mov
je
test
lea
rorl
sbb
push
out
xchg
mov
xchg
cmpl
sbb
add
sub
inc
loopne
pop
ljmp
jo
add
cmpsl
push
push
add
pop
out
sarl
lcall
shll
movsl
jmp
mov
pop
mov
mov
mov
insl
adc
dec
xchg
cmp
roll
adc
ds
pop
data16
data16
bound
pop
out
bound
mov
push
aaa
xchg
xchg
data16
movl
xor
adc
in
fistl
adcl
hlt
inc
push
add
mov
mov
jns
inc
mov
and
ret
stc
add
ja
in
and
insl
test
or
pop
mov
les
dec
inc
xchg
cli
orb
pop
add
in
mov
push
popf
rcrb
jle
pop
mov
dec
popa
push
and
scas
int
sbb
pop
mov
aas
repnz
dec
sub
insl
xchg
mov
dec
dec
sbb
arpl
push
addl
lcall
dec
mov
imul
sub
adc
xchg
and
mov
xchg
js
mov
mov
outsb
mov
adc
mov
lcall
xchg
xchg
stc
cwtl
cmp
push
fnstsw
inc
fistl
jns
jns
adc
mov
test
mov
or
mov
mov
scas
cmp
push
out
jge
outsl
xchg
lret
cmc
dec
pop
aad
mov
insb
cmp
mov
and
sub
arpl
mov
dec
pop
test
out
or
cmp
mov
faddl
in
jno
out
imul
scas
sub
sbb
push
pop
mov
mov
adc
js
out
push
pop
popa
dec
clc
pop
repz
repz
xor
call
sbb
sub
je
mov
loope
add
movsl
adc
cli
lea
je
push
and
imul
cld
inc
arpl
loop
clc
insl
or
in
jbe
mov
mov
push
subb
movsb
inc
cmp
out
xchg
aas
imul
hlt
cwtl
ss
and
inc
push
xchg
pop
add
leave
xor
or
test
push
xlat
outsb
jl
imul
outsl
push
push
js
adc
inc
mov
mov
cwtl
mov
in
daa
lea
and
in
fistpll
pop
xor
and
pop
mov
adc
fwait
imul
jne
lock
lcall
xor
adc
out
in
daa
fwait
movsl
cmpl
xchg
xorb
aam
cmpsb
jmp
outsl
pop
pop
lea
rorl
pop
in
je
push
mov
or
mov
addr16
rcrb
cmp
das
inc
sbb
xor
jb
xor
lret
inc
mov
lret
xchg
sbb
or
dec
push
or
and
or
js
and
push
gs
mov
in
xor
jne
out
shll
adc
push
push
lea
ljmp
jmp
ret
pop
adc
popa
inc
inc
mov
pop
int3
jmp
xor
pop
addr16
test
pop
sub
and
adc
and
pop
insl
and
arpl
and
jo
push
ss
lahf
cmp
cmc
bound
test
insb
cltd
mov
out
popa
mov
scas
jmp
testb
cmp
in
inc
ljmp
pushf
pop
cwtl
xor
push
pusha
out
std
pop
cltd
outsl
push
fsubl
inc
adc
xor
out
ret
iret
cmpsl
sub
xor
dec
and
adc
push
adc
arpl
mov
out
dec
adc
xlat
adc
sbb
jmp
dec
inc
or
pop
mov
push
pop
xchg
mov
dec
inc
push
movsl
bound
popa
rclb
repnz
pop
add
aas
jge
insl
xor
fstpl
paddd
rorl
fistpl
flds
rcrb
stos
xchg
rcl
les
mov
jb
mov
sbb
push
sbb
xchg
jbe
jle
insb
jbe
inc
lea
les
push
loop
stc
and
mov
imul
and
push
xor
and
add
jg
in
test
cmc
push
pop
push
sbb
dec
push
cmpsb
cld
pop
hlt
rcl
push
shrb
or
or
shll
punpckhdq
in
pop
int
pop
jb
jg
scas
scas
dec
xchg
push
pusha
lock
faddl
sub
lahf
mov
push
dec
adc
and
inc
daa
inc
cltd
cs
repz
arpl
dec
pop
and
sbb
insb
cmp
mov
repz
jns,pt
add
scas
cmpsl
in
mov
sub
xchg
outsb
out
mov
cmp
jae
cwtl
push
in
xchg
dec
test
pop
in
cltd
and
out
clc
imul
xor
jmp
enter
pop
rol
aas
in
lock
lea
mov
into
add
mov
pusha
popf
push
leave
fs
dec
mov
jg
jle
dec
xor
pusha
xor
pop
loopne
cmc
or
nop
mov
data16
cmp
imul
pop
mov
push
mov
mov
sbb
cltd
lret
mov
imul
mov
xchg
daa
lods
mov
fcmovbe
das
mov
aad
out
stc
pop
mov
idivb
mov
or
pop
push
cmpsb
xor
es
push
pushw
pop
shlb
fdivs
push
jb
das
jp
mov
cmp
jne
orb
cmp
adc
mov
mov
jns
std
xchg
lods
xchg
incl
pusha
pop
mov
test
or
cmp
sub
pusha
outsb
pop
test
mov
xchg
int3
mov
fwait
xchg
sub
or
push
fs
push
sbb
jge
bound
inc
jg
movsl
ja
add
jge
je
mov
sahf
jmp
jne
dec
movsl
cmp
xor
je
xchg
mov
in
push
movsb
mov
jb
sub
xchg
pop
lods
sub
rcll
mov
movsl
dec
popa
push
mov
negb
cmp
sbb
push
mov
or
call
outsb
das
jnp
push
andb
dec
pop
ffreep
push
lret
xor
mov
add
aas
bound
xor
sub
sub
js
xchg
outsl
jno
sbb
movsl
sti
insl
stos
inc
jp
jae
mov
mov
push
es
mov
cmp
pop
in
and
loop
sti
pop
movsl
jg
push
loope
loope
pop
sarb
aam
stos
std
mov
dec
ss
jle
call
xchg
cmpl
pop
pop
pop
pop
or
lods
lret
pop
lahf
mov
fiadds
jl
xor
iret
xchg
scas
jb
inc
sbb
inc
ret
sbb
cld
dec
jle
jno
sbb
cld
jecxz
jge
sub
sbb
cs
dec
cmpsl
rol
rorl
mov
sbb
sbb
pusha
mov
or
and
loop
fs
leave
int3
insl
or
testl
xchg
dec
aad
cmpsl
xchg
dec
cltd
and
xchg
stos
adc
mov
adc
rolb
dec
or
mov
loope
xchg
out
test
jl
aaa
and
mov
and
mov
loopne
xchg
loope
lea
inc
enter
rcrb
dec
add
ljmp
inc
jl
adc
push
mov
or
cmp
xor
xor
jo
mov
sbb
xchg
inc
scas
imul
sahf
fbld
mov
movb
lahf
inc
pop
jno
rclb
mov
cmp
pop
mov
dec
jl
dec
arpl
jo
rorb
dec
ss
fstps
arpl
in
pop
imul
stos
xchg
xchg
jbe
ret
and
inc
cmp
loop
mov
push
in
arpl
push
es
adc
and
ds
sbb
inc
and
addr16
cmc
imul
hlt
jb
mov
pusha
xor
int3
push
cmp
inc
fsubs
jg
add
adc
aam
or
push
ret
cld
lret
jle
add
iret
xchg
movsl
insb
dec
inc
push
stc
add
dec
mov
pop
jmp
dec
pop
sbb
lock
xlat
or
or
xchg
addr16
push
inc
xchg
into
or
add
xor
rcrb
arpl
shl
andl
xchg
repz
or
push
and
mov
or
add
insb
jge
inc
out
cmpsl
fcoms
ret
xchg
inc
mov
lea
xor
dec
insb
dec
inc
mov
addr16
jle
pop
mov
loop
and
jecxz
dec
in
adc
es
or
jle
daa
in
jbe
into
mov
dec
jmp
sub
sub
push
dec
push
cs
mov
je
jne
inc
loopne
jne
pop
inc
pop
mov
loop
xchg
mov
out
or
mov
aas
xor
dec
dec
inc
lock
ss
push
push
sub
add
insl
in
arpl
jbe
in
push
fildll
xor
mov
cld
jp
push
ss
in
sub
das
cmp
in
jbe
pop
inc
pusha
jbe
idivb
or
sbb
iret
inc
sbb
cmp
mov
pusha
push
mov
sbb
je
or
xchg
fs
xchg
and
outsb
jecxz
sub
mov
jns
adc
out
pushf
lds
pop
pop
out
sbb
std
jb
pop
jge
pop
inc
lock
adc
mov
push
xchg
inc
negl
mov
arpl
ss
fists
inc
aam
or
inc
out
pop
jo
dec
test
test
mov
pop
outsl
mov
cli
pop
dec
incl
inc
jecxz
push
mov
inc
cmc
mov
mov
push
adc
into
ja
sub
clc
std
sbb
inc
cld
pop
dec
mov
mov
mov
ja
xchg
dec
push
pop
sub
pusha
mov
ss
scas
ficompl
sub
cld
int
andps
cld
test
data16
mov
cmpsb
fistpl
dec
mov
mov
aad
add
hlt
jae
in
rorb
mov
mov
outsl
mov
in
repz
xor
xchg
mov
and
cmp
inc
mov
jne
add
clc
xchg
faddl
nop
out
into
dec
movsl
arpl
inc
push
test
js
mov
out
add
movsl
dec
push
iret
and
xchg
out
sbb
and
inc
fs
movsb
fs
sbb
add
dec
out
lea
dec
sahf
gs
call
pop
adc
popa
mov
stc
outsb
hlt
loop
or
aas
fidivl
xchg
and
add
cld
sti
sub
mov
imul
push
xor
push
in
mov
xor
imul
mov
cmpsb
movsb
lea
dec
mov
xor
popa
dec
pop
sarb
adc
aad
in
jle
out
clc
push
push
xchg
in
push
mov
adc
dec
testl
cltd
cmpsb
dec
cmp
push
cmp
sub
pop
or
jle
adc
jge,pt
gs
inc
jno
pop
cmp
aaa
inc
xchg
adc
lods
xor
in
or
cmpsb
or
cld
out
mov
mov
test
sbb
shll
leave
push
mov
sbb
xchg
ficoms
fcompl
mov
add
aas
outsl
cltd
shll
das
push
pop
mov
divl
sbb
out
lret
imul
xchg
gs
mov
test
jmp
in
or
movsl
loop
xor
ljmp
into
bound
cmp
xor
sub
xor
adc
int
cwtl
xchg
js
pusha
loope
test
ror
icebp
stc
mov
jae
pop
mov
inc
adc
test
and
add
leave
icebp
hlt
daa
repz
xchg
shlb
adc
xchg
mov
test
push
mov
adc
dec
cs
jle
mov
mov
sbb
pop
imull
adc
cmpsl
jge
xchg
dec
inc
adc
outsl
jmp
in
mov
push
lods
jecxz
mov
push
dec
lahf
cmpsl
inc
fcomp
add
and
mov
cld
aam
push
sub
test
cmpsb
inc
xor
mov
repnz
das
pusha
rolb
jl
dec
insb
js
pop
insb
arpl
mov
js
jbe
xchg
popa
dec
adc
pop
adc
xor
jo
push
ret
es
xchg
jge
test
mov
lods
lods
lods
arpl
fisubrl
add
int
movl
push
subb
inc
aam
mov
in
cltd
imul
in
xlat
cmpl
or
ret
or
in
outsb
ret
sub
pop
fdivrl
mov
pop
daa
cmp
cld
mov
test
aad
cmp
mov
test
jle
cltd
and
sbb
cmp
shl
and
sbb
mull
push
test
sub
outsb
and
cwtl
into
dec
xchg
test
add
test
pusha
or
clc
outsl
xchg
jbe
dec
inc
dec
jmp
scas
push
sahf
call
cmpsb
adc
adc
sbb
lret
orb
mov
mov
fisubrs
push
out
mov
xchg
inc
sbb
das
dec
and
std
push
mov
push
dec
sub
or
aam
pushf
pop
rcr
lock
mov
cmpsl
sbb
les
jge
mov
shll
jle
mov
jo
sbb
cmp
sub
mov
inc
loop
out
mov
jge
lods
test
mov
jmp
jno
gs
cmp
cmp
stc
shlb
push
jne
ficompl
movsb
jge
data16
rol
cmp
std
insb
xor
push
mov
mov
push
mov
xchg
jle
sub
incl
pop
xorb
imul
pusha
das
cmp
xchg
sarb
xchg
jo
enter
stos
in
and
cmp
es
into
xor
dec
negb
xor
pop
cmp
jbe
popf
mov
inc
mov
sarb
scas
jbe
je
push
cli
rorl
stc
daa
inc
dec
movsb
inc
aad
adc
pushf
in
inc
xchg
insb
mov
mov
sub
cmp
adc
pusha
push
rclb
test
in
sbb
das
xchg
cli
imul
xor
inc
outsb
mov
jmp
pop
mov
stos
out
stos
mov
mov
stos
add
lret
test
jle
dec
jo
pop
mov
andb
daa
das
inc
cmp
inc
sbb
mov
outsb
pushl
xor
sahf
jbe
or
test
cmc
lock
jbe
add
jecxz
dec
jmp
pop
inc
push
test
adc
addr16
sarb
scas
xchg
out
add
out
pop
mov
imul
pop
inc
gs
lahf
jbe
shll
rcr
mov
mov
dec
sti
add
lret
push
rorl
or
xchg
int
movsb
pop
scas
and
insl
add
call
popl
cmp
mov
dec
shl
pop
rcll
push
ret
xor
push
jnp
mov
clc
sbb
xchg
add
adc
mov
testl
jae
sbb
xchg
and
dec
stc
mov
dec
inc
xchg
insl
inc
lahf
rol
repz
pop
pusha
lods
xchg
adc
rolb
dec
loop
fs
mov
test
add
fs
je
ret
bound
cmp
cmp
in
and
es
data16
jmp
or
ljmp
int3
mov
aam
and
push
enter
xor
xchg
cmp
popa
jb
lea
dec
aam
icebp
jbe
jno
std
cwtl
bound
lret
or
mov
xchg
rorb
out
mov
add
or
out
xchg
leave
sbb
int3
ljmp
repz
jg
jo
jns
xchg
jg
fs
pop
adc
mov
jo
sbb
std
add
mulb
test
sub
int
sbb
hlt
xchg
pusha
lods
push
mov
cli
mov
cmp
mov
sub
int
sbbl
push
addr16
cmp
lods
inc
fs
js
mov
lods
pop
int3
jmp
mov
insb
cmc
inc
jecxz
mov
cmp
js
in
jg
pusha
sbb
xchg
out
nop
add
stos
fdivp
lret
fxch
movsl
in
mov
loopne
jp
fbld
sti
xchg
jge
imul
fs
mov
rorb
rolb
test
test
mov
loope
sbb
pusha
lods
cmp
orb
nop
and
insb
mov
mov
psrlw
iret
or
fsub
adc
ss
or
into
je
popf
mov
or
scas
lock
pop
dec
daa
and
arpl
les
jle
push
imul
xchg
or
cli
movsb
popf
arpl
rcrl
push
cmp
sbb
nop
jbe
stc
sbb
pop
int3
rorl
xor
inc
and
or
pushf
mov
mov
icebp
lcall
in
lea
es
add
dec
es
ljmp
faddl
and
int
es
sbb
mov
sub
mov
and
adc
pop
loope
sbb
dec
out
xchg
dec
ss
xor
jo
add
ret
cmp
and
ljmp
mul
lds
ljmp
aas
mov
loope
icebp
das
jge
mov
mov
shlb
mov
test
out
add
jae
add
addr16
nop
cmp
or
aaa
sbb
lret
pop
dec
sbb
in
sub
cmp
lods
jnp
xchg
push
xor
je
dec
sub
adc
push
cmp
loope
sti
cmp
test
add
mov
scas
insb
jle
xor
sti
dec
xor
cmp
pop
mov
xor
jnp
nop
loop
inc
sbb
out
pusha
movsb
or
xrelease
or
sbb
sbb
scas
mov
cmpl
fistps
mov
sahf
loope
pusha
sub
xor
pusha
test
int3
cmp
add
xor
cmp
add
mov
sbb
mov
pop
int3
out
cmp
daa
in
mov
push
and
adc
in
xchg
or
roll
loopne
jno
dec
adcl
sub
scas
test
mov
frstor
adc
add
push
bswap
jbe
mov
push
repnz
sbb
lock
orl
pop
mov
outsb
xor
cmp
repnz
imul
lahf
outsl
cmp
ss
and
add
and
ja
jbe
les
xor
fcoml
lods
daa
cmc
sahf
scas
and
add
xchg
cmp
sbb
enter
cmp
adc
push
jmp
test
and
mov
pop
clc
ljmp
lcall
test
leave
adc
sub
sbb
mov
pop
dec
dec
pop
js
and
xor
cmpsb
sub
outsb
sbb
xor
xchg
xor
sub
ret
cmpb
addl
shrb
xchg
inc
fimuls
add
xor
mov
dec
xor
mov
popf
idivb
mov
pop
adc
cld
cmp
jae
and
pusha
mov
pop
xor
lods
mov
push
push
adc
sbb
cmpsl
mov
sbb
mov
xchg
cmpsb
sbb
dec
sahf
loop
mov
lea
xchg
push
fs
ret
loope
or
pop
jae
pushf
xchg
jmp
cmpsl
inc
and
stc
and
mov
hlt
push
aas
popa
test
cmp
lahf
mov
and
test
push
push
jg
add
mov
mov
addr16
je
pop
mov
dec
outsl
push
lret
adc
mov
outsb
jmp
jge
shlb
addr16
push
js
in
push
in
fistl
call
mov
pusha
push
mov
lret
mov
scas
push
loopne
xor
sbb
push
inc
aam
inc
xor
std
push
dec
and
dec
cltd
test
std
add
inc
mov
mov
loop
pop
testb
push
mov
jae
aas
out
popa
dec
icebp
nop
gs
js
xchg
adc
pop
sti
add
or
ds
sub
xor
cmp
out
cmp
cmp
adc
xor
iret
jl
lret
inc
test
test
lock
xor
jp
mov
mov
sbb
adc
mov
jg
cwtl
incl
and
movl
or
idivb
cmp
negb
xor
pop
xchg
sub
pop
xchg
idivb
adc
out
inc
cmpsl
or
mov
les
pushl
push
push
jmp
and
xor
scas
shrb
inc
sub
loop
aaa
sbb
outsl
in
cmp
jmp
inc
and
test
adc
dec
mov
cli
xchg
mov
xchg
cwtl
xchg
cmc
xchg
popw
cmp
pusha
push
lods
test
jo
pop
xor
or
inc
add
ds
push
dec
insb
cli
into
pop
rcr
cli
shrb
ljmp
addr16
cs
dec
lret
cs
sub
popf
lds
xchg
xorl
xlat
fstpt
jg
pop
mov
ss
rcl
ss
in
mov
xchg
pusha
in
jmp
pusha
out
out
sbb
adc
aad
adc
sub
icebp
gs
xor
in
das
mov
push
popl
repnz
je
mov
sub
shll
adc
popa
mov
ret
mov
and
inc
jbe
push
stos
jno
rorb
lahf
pusha
cmpsb
jmp
cmp
pop
jbe
movsl
das
bound
pop
jl
sbb
sbb
roll
into
sub
aam
stos
das
fnsave
adc
xchg
xor
std
stc
adc
fstpl
xor
xor
dec
pop
dec
cs
xchg
out
enter
sahf
inc
adc
inc
mov
int
or
mov
inc
sbb
pop
push
and
mov
and
mov
push
rcr
outsl
rcll
std
hlt
sub
movsl
mov
andl
push
push
movd
xor
inc
adc
les
pop
in
divb
mov
aam
dec
dec
dec
pop
aaa
add
sbb
lods
sbb
aas
mov
shrb
stos
sbb
fnstsw
sub
push
inc
imul
scas
insl
inc
fnsave
mov
popa
mov
lds
ss
outsb
punpckhbw
mov
mov
lds
xor
rclb
imul
divb
mov
in
push
jmp
sub
out
mov
out
cmpsb
add
jl
pop
cmp
sbb
sub
cwtl
das
sahf
adc
cmpsl
sti
mov
movsl
lahf
loop
loope
adc
clc
pushf
in
sbb
and
lcall
loope
and
inc
lds
call
cmpsl
lcall
shrl
pop
mov
gs
ss
pop
dec
push
sbbb
scas
xchg
insb
jg
jg
lea
inc
in
dec
or
dec
xor
cmp
hlt
scas
ljmp
mov
aas
adc
jno
mov
xchg
rolb
cmp
fnstcw
inc
sbb
adc
test
pop
inc
sbb
pop
cmp
dec
popa
dec
ljmp
fisubrs
dec
mov
dec
test
pop
mov
push
mov
js
scas
gs
fdivr
add
hlt
rolb
ds
lods
pop
fwait
mov
sarl
mov
pop
popa
adc
fs
push
leave
jle
rol
push
mov
repz
pop
nop
in
xor
test
mov
cmp
lcall
sub
dec
call
sarb
sti
mov
sbb
sahf
daa
jns
pushf
clc
arpl
or
enter
mull
and
pop
mov
sbb
cmpb
dec
hlt
add
cmp
jge
inc
scas
rolb
outsl
loop
dec
movsb
or
jle
jmp
fs
call
adc
inc
or
xor
cmc
lods
pusha
cmc
mov
fadds
inc
cltd
ret
push
mov
push
outsl
inc
popa
arpl
cmp
ss
xor
cmp
and
je
mov
rorb
ljmp
insl
jge
dec
insl
fs
js
test
ds
push
divl
out
fcmovnu
adc
insl
xor
ja
in
add
shll
and
adc
pop
adc
add
xorb
or
ss
ds
mov
xor
jmp
imul
cmp
and
test
cmpb
cmp
sub
clc
dec
jbe
dec
cmp
cmpsl
jl
das
sub
mov
sbb
enter
in
mov
inc
movsl
push
lea
testb
inc
xchg
dec
lea
push
faddl
in
idivb
stc
jle
aas
cmp
in
iret
xchg
sti
hlt
out
sub
clc
mov
add
cmp
and
jb
mov
pop
popf
pop
mov
push
arpl
in
push
scas
movq
fisubrs
lock
cmp
cmc
fs
adc
insl
push
pop
rcrb
frstor
jne
add
or
loopne
push
add
xor
pusha
fs
push
inc
arpl
add
jp
movsl
cs
out
jnp
dec
imul
test
nop
imul
popf
pushf
imul
pop
orb
mov
adc
ds
sub
mov
adc
or
pop
emms
stc
pop
add
sbb
xor
sahf
mov
and
nop
jne
pushf
sti
mov
and
cld
cli
incb
sub
jle
aam
loopne
outsl
imul
jnp
mov
and
das
ljmp
xor
loop
loop
adc
xlat
sub
insb
mov
pusha
cmp
lahf
adc
out
mov
ja
sahf
bound
jge
dec
mov
inc
mov
pop
dec
addr16
sub
negb
loopne
or
lods
xor
xor
test
push
sub
in
sbb
int3
cmp
test
xor
and
dec
stos
mov
cltd
adc
out
mov
sub
push
mov
inc
call
dec
dec
cmc
fidivl
in
sub
sub
sarb
pop
mov
jne
dec
adc
or
pop
xchg
push
add
xor
jo
sbb
fidivs
cmp
daa
icebp
push
icebp
stc
testb
les
stos
xchg
shlb
call
dec
jle
add
arpl
jnp
sbb
inc
inc
pop
mov
and
pusha
xchg
int3
or
leave
ss
shl
inc
rol
xor
add
stos
lds
test
pop
jge
xchg
insl
ss
adc
lds
sub
arpl
push
push
ret
iret
jnp
repnz
push
push
hlt
dec
or
pusha
xchg
xchg
dec
sub
repz
mov
adcb
pop
jge
xor
dec
test
and
cmp
mov
jno
insl
loop
sub
sub
rcll
sub
mov
cmp
test
aas
xchg
shll
xor
aaa
in
cmp
addr16
fimull
mov
xlat
sbb
sbb
jl
nop
pop
addr16
and
ljmp
dec
jmp
aad
xchg
dec
addr16
add
adc
mov
sbb
mov
ja
xchg
data16
insl
dec
mov
pop
movsl
jbe
dec
adc
or
das
les
cmovge
adc
push
vmovups
mov
push
mov
add
imul
mov
jo
pop
add
mov
mov
jnp
mov
movb
fmuls
rcr
dec
cmp
pop
xor
outsl
mov
fstpt
xchg
inc
outsl
push
adc
jl
mov
aaa
mov
jmp
jle
jle
mov
daa
inc
bound
pop
or
jg
or
jl
sub
std
cmp
cwtl
dec
adc
xchg
sbb
pushf
push
jno
mov
es
jae
into
mov
push
cmc
or
push
imul
xchg
mov
adc
mov
inc
lods
inc
and
ljmp
movsb
sub
sarb
outsl
lahf
pop
sub
in
fs
sbb
aas
hlt
pop
iret
push
jle
or
push
cltd
aas
or
test
or
dec
sub
xlat
imul
subl
sar
call
pop
inc
inc
xor
cs
scas
cmp
or
xchg
mov
insl
popf
mov
enter
pushf
mov
xchg
addl
addb
pop
push
cltd
int3
dec
pop
int3
scas
push
jnp
aaa
rclb
sub
cmpb
imul
js
push
inc
cmp
adc
jo
push
repnz
shll
insb
js
testb
dec
push
jmp
sbb
jns
or
cmp
hlt
cmp
mov
mov
out
in
lods
pop
js
test
adc
aas
je
cmp
int
pop
lret
movsl
int3
push
xchg
js
and
sub
ds
int3
push
mov
sub
xchg
sbb
int
inc
inc
inc
out
enter
xadd
sbb
and
outsb
daa
fcompl
xor
cmp
xchg
adc
aam
nop
cmp
loop
push
fs
insb
imul
sbb
addr16
push
pushf
cmp
jp
dec
jb
mov
or
loopne
jle
mov
inc
out
cmp
lods
pop
jnp
xor
dec
or
sbb
xor
sbb
std
and
and
push
jno
pop
push
imul
movsb
sbb
in
ljmp
xchg
cs
inc
dec
ja
sub
repnz
cmp
jns
xor
cltd
decb
mov
rorl
jp
jns
adc
in
cs
mov
pop
or
popa
pop
jmp
mov
jb
lcall
hlt
test
xlat
lcall
or
xor
js
push
push
cmp
sbb
lock
lcall
dec
mov
xchg
repnz
je
and
hlt
push
sub
out
and
icebp
cmpsb
dec
sahf
mov
out
push
mov
js
inc
inc
sub
inc
out
cmc
pop
stc
outsb
xchg
es
fstps
adc
stos
vcvtps2dq
jecxz
ss
pop
adc
in
push
adcb
out
and
pusha
in
push
rcrb
jl
dec
andb
lods
lahf
add
push
in
xchg
rcll
aaa
outsl
jb
mov
sbb
xor
adc
clc
and
jbe
fsubr
les
movsb
insb
sub
pop
ret
jp
mov
mov
aaa
jb
pushf
sbb
mov
adc
call
cmp
sbb
push
adc
xor
pop
pop
push
push
outsb
cmp
aas
sub
lret
cmp
aaa
imul
ficoms
xor
xchg
cmp
push
xchg
cld
cld
enter
xchg
dec
jp
xchg
data16
pop
push
mov
outsb
mov
dec
fcmovu
lods
sbb
push
test
bound
lods
outsb
mov
clc
cmp
adc
repz
clc
dec
xor
mov
mov
imul
push
push
je
push
jmp
cmp
cs
xchg
test
arpl
jle
adc
cmc
aaa
outsb
and
xchg
movsb
mov
dec
lahf
jno
dec
repz
scas
in
adc
and
sub
xchg
pushf
mov
les
data16
inc
out
sbb
scas
js
in
enter
sbb
xchg
jno
adc
or
sub
jbe
sub
cld
nop
pop
cmp
mov
bnd
and
repnz
xor
pop
add
cld
test
jmp
xchg
xchg
pusha
mov
sub
or
testb
cmp
cmp
pusha
xchg
mov
and
jnp
xor
xor
cmp
sub
out
gs
xchg
orb
sbbl
and
xchg
push
int
scas
and
das
mov
xor
in
cwtl
xlat
cmp
mov
push
movsb
outsl
inc
pop
cmpsb
push
add
and
mov
lret
adc
adc
int
in
sbb
xchg
sub
out
add
adc
aas
dec
push
lods
mov
ljmp
sbb
lock
movsb
fwait
mov
sub
cwtl
fwait
jle
adc
adc
cmp
data16
jle
xor
mov
cwtl
inc
sub
bound
lods
dec
xor
incb
outsl
or
dec
inc
inc
push
dec
mov
dec
adc
xchg
xchg
adc
in
shlb
push
push
fidivl
lea
shrb
inc
pushf
stos
jmp
dec
mov
outsl
jbe
mov
pop
imul
mov
jmp
mov
xor
out
enter
stos
or
jge
arpl
das
jno
push
mov
bound
cmp
aam
jo
adc
in
pusha
pop
push
xor
and
cmpl
push
dec
xchg
sub
fs
jno
sarb
in
pusha
xchg
mov
mov
push
mov
mov
pop
inc
mov
insb
pop
mov
add
imul
dec
in
insb
jne
sbb
scas
sbb
mov
and
mov
lahf
pushf
rclb
xor
adc
inc
mov
xchg
lahf
js
xor
pop
lret
in
movsb
jl
mov
jp
sbb
enter
xchg
or
jg
subl
jl
lods
jp
outsl
dec
imul
push
scas
sub
xor
lods
sub
or
imul
in
dec
push
enter
pop
mov
or
imul
adc
jp
clc
add
in
imul
std
cmp
mov
outsb
lret
cmp
cmp
xor
lock
cltd
fbstp
outsb
or
mov
movsb
push
jno
sub
jg
mov
mov
outsl
mov
sub
pop
or
in
ja
xchg
dec
loop
hlt
test
adc
mov
cld
ret
adc
icebp
mov
inc
mov
mov
jle
rorl
jne
imul
test
es
jb
xor
enter
mov
imul
ljmp
dec
xchg
repnz
in
push
stc
xchg
xor
push
push
pop
xor
adc
aaa
test
cld
mov
into
sub
enter
loope
inc
xchg
mov
sub
aad
push
xchg
imul
shrb
or
or
jge
add
cmp
xor
fidivrs
aaa
insb
pop
dec
mov
repz
cs
xor
insl
mov
nop
cmp
push
xor
pop
jg
cmpsl
dec
mov
xor
jmp
or
lret
adc
dec
jge
jnp
cmp
adc
ljmp
adc
sbb
xor
jge
push
push
iret
out
jecxz
push
mov
jg
inc
int
arpl
xchg
imul
dec
sub
xchg
add
push
out
imul
mov
inc
lds
jge
inc
adc
pusha
and
xchg
jo
int3
pop
sbb
adc
pushf
in
stc
jns
push
call
sub
pop
insl
pushf
pop
add
cmp
fmuls
loope
xchg
fildll
push
mov
pop
push
xor
inc
fldt
shll
scas
aam
in
xchg
cld
push
rcr
test
or
fdivp
xchg
pop
outsl
push
pop
les
mov
push
adc
and
xor
jg
test
in
pop
and
in
adc
pop
pop
insb
imul
inc
fcmovnu
sbb
mov
xchg
add
clc
mov
js
pop
in
cwtl
gs
cmc
push
into
hlt
and
jns
out
addb
dec
mov
sbb
outsl
out
xchg
inc
dec
inc
cmp
les
push
and
push
mov
mov
jae
stc
mov
xchg
cmp
xor
inc
lahf
divb
mov
sub
adc
loop
mov
xor
sahf
repz
aas
sarl
or
loop
push
jae
adc
mov
imul
xchg
mov
je
out
xchg
test
lock
pop
call
mov
pop
cmp
pop
xor
dec
pop
cld
roll
shlb
adc
jg
xor
sub
lea
int3
jge
xchg
es
cmpsb
add
lods
xor
or
mov
jmp
push
fisubl
or
mov
fimuls
test
sub
call
sub
add
add
addb
mov
int
cmp
les
push
aad
or
std
or
out
daa
test
add
push
inc
adc
dec
adc
inc
imul
dec
ror
rcll
dec
adc
mov
push
add
mov
aas
jno
leave
cs
lret
mov
dec
test
aam
xchg
adc
lods
sbb
ds
dec
adc
inc
push
fstp
inc
aad
adc
sub
mov
cmp
dec
ljmp
dec
jbe
mov
push
mov
lea
jecxz
imul
jl
pop
int3
ret
add
ficomps
dec
rorb
stos
jns
pop
push
dec
in
test
stos
inc
call
jl
into
pop
push
insb
in
clc
adc
or
lods
lock
inc
pop
and
es
cmp
mov
push
hlt
dec
lds
test
mov
pop
orl
xchg
sbb
mov
mov
clc
cwtl
out
dec
insb
mov
icebp
das
test
add
mov
xor
inc
das
lds
je
mov
aam
push
clc
test
cmp
rcll
gs
stos
jnp
mov
push
mov
or
mov
rolb
out
jnp
mov
pop
lret
in
aaa
jb
movsl
jg
add
test
inc
idivl
xor
push
add
add
pushf
rcll
call
sub
cmpsb
xchg
mov
and
stos
cmpsl
sbb
aas
fmull
sub
shll
and
sub
fcmove
xor
mov
inc
mov
jmp
or
stos
stos
mov
xchg
xor
shll
push
jnp
jmp
stos
out
es
dec
pop
cmp
sub
lock
mov
mov
test
rolb
loopne
xor
jno
xor
inc
sbb
lahf
mov
aas
test
push
call
dec
cwtl
repz
sub
icebp
outsb
cltd
les
clc
push
out
and
pop
testb
cmpsb
loope
jno
cmp
cmp
push
add
aaa
mov
dec
sub
and
jmp
jns
test
leave
stos
rcll
call
in
lahf
fstp
add
jo
pop
dec
inc
xchg
dec
cmp
bound
mov
push
add
fcoms
aad
xor
mov
jbe
sbb
lret
andl
jl
jp
cltd
rcrl
mov
inc
mov
cmp
sbb
in
push
repnz
hlt
scas
cwtl
sub
jge
adc
dec
xor
mov
mov
mov
push
orb
sbb
xchg
lods
clc
xor
or
cmpsb
add
rolb
loop
loopne
test
mov
pop
hlt
jnp
mov
das
jmp
scas
jecxz
xor
addr16
adcb
std
adc
inc
adc
jo
adc
jno
or
js
clc
ret
jo
jb
test
adcb
test
rcrl
ficoml
mov
int
mov
adcl
xchg
std
inc
mov
push
mov
js
cmpl
sub
lods
sbb
dec
sbb
adcl
push
dec
sbb
stos
ss
and
push
lret
dec
push
mov
outsl
pop
daa
outsb
les
mov
lahf
fldenv
inc
sahf
ret
hlt
xchg
lds
add
adc
xchg
dec
arpl
xor
lcall
jmp
dec
ret
movd
mov
out
pop
jg
adc
test
add
mov
mov
xchg
lcall
jmp
ss
jg
ret
outsl
fdivl
or
shlb
shlb
mov
mov
lea
dec
test
je
mov
jnp
pop
jbe
add
xor
icebp
outsb
iret
sbb
push
and
pop
and
cmpsl
pop
push
les
loope
in
adcl
loop
pop
cs
aad
cli
insl
test
jmp
lret
cwtl
dec
icebp
mov
imul
pop
and
fmuls
dec
cmp
ss
add
sahf
jo
int3
add
add
dec
fidivl
sub
cmc
and
bound
roll
cli
push
ljmp
cmp
cmp
xchg
push
sbb
sub
inc
adc
movsl
out
sbb
mov
outsl
sub
arpl
jns
leave
sbb
adc
faddl
sub
je
mov
xor
popf
mov
mov
jns
mov
mov
movsl
or
jl
cmpsl
adc
pop
jmp
cld
xchg
in
jne
mov
jg
push
mov
push
iret
cmp
daa
outsb
adc
xchg
inc
mov
jbe
in
push
and
sbb
sti
in
or
pop
jle
mov
jle
pop
stc
xchg
roll
je
pop
lods
and
sti
sub
or
arpl
outsl
jb
addr16
sbb
push
movsl
pop
pop
push
lret
out
cltd
pop
dec
nop
sbb
push
xchg
jmp
dec
repnz
xchg
clc
cwtl
faddl
cwtl
in
mov
clc
jae
aas
or
scas
movsb
cli
loop
in
in
cld
mov
push
das
cltd
rcrb
and
jb
cmc
sti
mov
or
xchg
popa
into
push
or
mov
rcr
sbb
and
pushf
mov
sub
xchg
xor
fs
data16
mov
faddl
cmp
inc
pop
scas
mov
insl
xchg
enter
pop
inc
sar
int3
repz
sahf
sub
pusha
mov
and
sbb
and
sub
dec
inc
cmpsl
sub
or
sbb
pop
cmp
push
pop
push
rcll
nop
cmp
pop
sub
outsl
or
and
sarl
std
adc
fs
xchg
cmovle
sub
inc
push
sbb
fldln2
sbb
in
cmpsl
push
test
std
ret
inc
dec
out
push
jp
pop
notl
jg
scas
dec
cmp
fadd
orb
addr16
loope
adc
pushf
jecxz
fwait
adc
jbe
push
stos
js
jbe
stos
mov
rolb
xor
adc
movsb
jo
mov
xor
cmp
jmp
dec
push
or
adc
and
and
je
sarl
and
ja
lret
push
mov
cli
js
push
nop
adc
std
mov
pop
pushf
into
and
push
lock
movsl
inc
xor
sbb
adc
mov
sub
stos
in
xor
sarl
ds
ds
movsl
pop
out
sub
push
add
lret
mov
add
mov
enter
push
inc
xchg
sti
shrb
movsl
jp
sub
in
pop
popa
push
push
ss
gs
pop
add
aas
call
sub
icebp
or
cmpsb
nop
pushf
rorl
add
xchg
pop
in
lods
or
out
out
or
fucomi
or
sbb
sbb
outsl
jae
adc
or
fstps
movq
jne
shl
inc
adc
in
xchg
cmp
cmp
mov
adc
sbb
mov
aad
pop
daa
fildll
sbb
jae
ret
ret
sbb
addr16
sbb
icebp
cmp
sbb
sbb
pop
mov
push
push
push
pop
mov
loopne
imul
mov
inc
dec
cmc
pop
adc
js
add
mov
adc
adc
xor
cmpsl
xchg
imul
dec
mov
pop
pmaxub
rclb
add
xor
fcoml
addb
loopw
inc
test
out
xchg
and
xchg
inc
mov
cmpsb
fldl
inc
cmp
mov
inc
ss
mov
push
xchg
jl
inc
jbe
js
sub
mov
add
fsubl
sub
fldl
xchg
or
mov
sbb
lds
dec
mov
jle
shlb
xchg
shrb
decb
aam
nop
xchg
aad
popf
push
scas
adc
gs
mov
cs
sbb
ja
mov
push
xchg
loope
cmpsb
pusha
fisttps
push
outsb
pop
inc
sbb
jns
cmpsb
arpl
or
add
adc
aad
adc
ljmp
xchg
mov
and
cwtl
hlt
sbb
fistl
add
dec
xchg
je
jecxz
adc
fs
icebp
mov
xor
ljmp
je
pop
mov
and
mov
xchg
push
dec
fwait
jno
mov
outsb
adcl
mulb
outsb
dec
inc
inc
in
jmp
xchg
inc
aam
cltd
enter
fdivrp
adc
and
mov
jg
insl
dec
ljmp
fdivrs
push
rolb
jno
push
mov
jle
rcll
ret
in
inc
je
nop
mov
fs
cmpsl
in
stc
lahf
push
mov
dec
mov
mov
push
sbb
fwait
xchg
inc
cmp
mov
cmp
mov
addr16
jl
xlat
mov
and
dec
fcoml
push
xor
inc
fldl
push
clc
pop
xchg
dec
xor
dec
hlt
push
cmp
inc
cmp
aad
adc
lods
movsb
or
cmp
xor
ja
xor
je
dec
mov
lods
popa
inc
sbb
je
dec
gs
pop
das
mov
inc
mov
loope
mov
popa
cmp
daa
xor
sbb
aad
scas
fdivs
lods
sub
cmp
aaa
or
pop
cmpsb
cmp
xchg
mov
pusha
pop
daa
push
jae
in
les
add
lods
mov
out
lcall
cld
std
outsl
inc
imul
mov
inc
lret
stc
mov
lret
dec
mov
cwtl
jno
lret
cmp
pusha
daa
mov
test
mov
shr
out
adc
out
jns
dec
test
lea
mov
mov
cmp
ds
cmpsl
jecxz
call
pop
nop
jne
mov
inc
push
and
test
lcall
cltd
mov
sbb
ja
rorb
xor
rcrl
ljmp
cmp
sbb
ljmp
jae
scas
or
xorb
dec
xlat
test
dec
ficompl
test
sbb
movsb
and
js
test
hlt
insl
repz
jne
xchg
or
push
push
andb
loopne
and
jg
jno
cmp
out
mov
cmpsl
ds
cmp
mov
mov
sbb
movsb
gs
shl
movl
jns
mov
xchg
inc
mov
cmp
dec
out
and
lea
fs
add
insl
xor
xchg
pop
sub
cmp
dec
pop
outsb
lods
fadds
cmp
xor
or
dec
xor
shll
fsts
xorb
and
pop
shll
xchg
mov
push
mov
push
push
ss
sbb
push
adc
push
addl
and
pminsw
gs
jg
add
shrb
fildl
push
or
mov
mov
adc
adc
popf
inc
sbb
jnp
repnz
mov
push
pop
enter
out
push
jg
xchg
jmp
cs
sahf
andl
cmp
push
sbb
mov
arpl
call
int3
push
mov
xor
push
pop
mov
outsb
or
in
scas
mov
fidivrs
lret
into
scas
test
out
mov
adc
dec
mov
addb
daa
insl
fiaddl
inc
jo
out
push
adc
cmc
sub
in
or
jl
fstpt
mov
jmp
cltd
and
je
mov
or
inc
inc
sbb
jge
or
push
es
roll
mov
mov
or
or
mov
mov
cmp
inc
dec
or
cld
sbb
test
stos
dec
xchg
ret
and
rol
mov
cli
gs
xor
push
mov
das
jae
adc
scas
jae
mov
jecxz
cmp
rcrl
loopne
xor
add
adc
cmpsl
arpl
adc
sbb
fildl
outsl
in
cltd
lret
scas
pop
sbb
popa
xor
lret
cmp
xchg
add
aaa
cmp
fimuls
mov
and
mov
js
mov
mov
inc
add
lea
cli
outsl
or
cmp
cmp
push
mov
out
fsts
cmp
loopne
jae
dec
out
repnz
loope
ljmp
ja
nop
cmc
sbb
add
out
lds
es
and
jne
push
out
sbb
jb
stc
sbb
pop
pop
and
jg
outsb
ret
pop
je
vpmacssdd
jle
add
mov
jne
xchg
jnp,pn
movl
ljmp
lea
idivl
fwait
add
nop
outsl
hlt
icebp
insb
ret
or
push
inc
aaa
jmp
movsb
mov
movb
adc
rcrb
and
cs
in
push
mov
xchg
jp
push
lods
sub
mov
cld
mov
into
and
loopne
ret
fs
cli
adc
mov
scas
xor
sbb
test
scas
insl
loope,pn
fdivs
scas
and
xor
xchg
lcall
adc
arpl
pusha
push
dec
push
mov
lock
incb
push
mov
xchg
add
xchg
in
jbe
in
cld
mov
adc
sub
mov
pop
jp
cltd
add
mov
xchg
ret
cltd
cmp
jmp
hlt
movsb
bound
adc
das
scas
jb
jl
cwtl
sub
xor
push
xchg
lahf
jae
and
in
xchg
inc
fs
faddl
daa
mov
stos
jecxz
sbb
incl
pop
inc
lock
pop
sub
inc
push
adc
push
fwait
cld
or
in
push
lea
cmp
sar
movsl
adc
nop
pushf
jecxz
dec
cs
std
or
mov
arpl
loop
ljmp
bnd
addb
scas
mov
popf
xchg
xor
nop
jl
lds
xor
cmp
xor
xlat
ss
adc
mov
adc
test
hlt
repz
and
pusha
test
push
subb
in
inc
cmp
adc
pusha
mov
adc
jo
pop
cld
dec
xchg
inc
lds
cmpsb
cld
and
mov
pop
push
push
xor
dec
or
sti
inc
aaa
jnp
out
dec
popa
inc
or
fnstcw
out
sub
inc
out
out
xorl
jno
add
jnp
mov
jo
fwait
push
ss
push
das
sbb
aad
insb
sub
sbb
jae
dec
ss
xchg
mov
gs
faddl
sahf
fwait
push
jbe
xchg
xchg
dec
mov
insl
popa
bound
push
fidivl
dec
jge
or
pop
dec
xchg
jl
lds
pushf
push
dec
add
jl
mov
adc
fistps
inc
lea
mov
xchg
sbb
mov
dec
cld
test
jmp
mov
jno
into
cmp
jns
xchg
jo
jnp
jbe
push
push
shll
lahf
icebp
dec
lock
add
call
adc
fcmovu
or
push
mov
or
mov
cmp
jecxz
cmp
sbb
orl
mov
push
test
movl
adc
daa
jl
arpl
out
dec
mov
dec
in
mov
or
inc
idiv
adc
dec
das
cmpsl
inc
jge
aam
aaa
mov
xchg
iret
lds
je
bound
test
shlb
adc
fisttpll
push
mov
push
sbb
xchg
sahf
lds
pop
rclb
lcall
test
dec
int
xchg
cmp
lea
cld
in
cmpsl
mov
std
pop
nop
xor
xchg
cld
jecxz
jl
out
jge
push
cmp
xchg
xchg
jle
xchg
xchg
in
mov
in
in
add
lcall
lret
or
sbb
jmp
ret
bound
fimuls
mov
shrb
rol
je
push
xor
xor
jecxz
ret
popa
mov
clc
fimuls
add
mov
loop
mov
out
cltd
fnstenv
dec
lds
jmp
xor
and
xchg
push
push
fwait
lcall
ret
push
movsl
popa
pop
out
mov
inc
dec
sahf
inc
cmpl
flds
in
das
jmp
pop
dec
out
loop
mov
xchg
lods
cmp
and
scas
cmp
jp
inc
pushf
or
subb
stos
sbb
pop
rcrb
out
pop
mov
das
mov
daa
cmp
dec
es
icebp
push
xlat
ljmp
push
cli
push
loop
jo
mov
sbb
addr16
dec
mov
out
sub
mov
scas
clc
movsl
inc
xchg
cld
push
adc
mov
outsb
mov
int3
pushf
sbb
aaa
je
or
sbb
in
cltd
push
xchg
sbb
xchg
dec
dec
aad
mov
push
aam
clc
dec
add
inc
ret
inc
ret
mov
in
testb
push
cmp
lahf
dec
sbb
pop
imulb
push
jmp
dec
or
js
jns
xchg
push
push
mov
out
xchg
push
xor
out
out
add
fbstp
push
cmp
xchg
mov
sbbl
sub
mov
pop
sbb
mov
cld
push
shl
xchg
jnp
scas
loop
push
adcl
aaa
movsb
ds
call
adc
mov
iret
mov
xor
repz
mov
jge
add
stos
arpl
push
jle
dec
adc
enter
loopne
icebp
push
inc
pusha
mov
jecxz
insl
sbb
clc
ljmp
mov
scas
out
push
outsb
rolb
xchg
std
inc
mov
push
les
push
pop
dec
xor
pop
ja
clc
in
inc
cmp
aas
jno
sub
les
pusha
push
sub
je
push
fs
sbb
out
or
mov
movsb
ljmp
into
mov
adc
cs
inc
sbb
int3
or
aam
mov
push
lods
sbb
fmul
hlt
xor
xchg
sahf
ss
push
xchg
pop
fs
pop
imul
nop
and
jl
aaa
jle
xor
loope
pop
ljmp
push
mov
outsb
out
dec
jns
in
sbb
adc
out
in
mov
jecxz
xchg
and
inc
push
cs
es
xchg
loopne
inc
sahf
mov
and
stc
outsl
mov
dec
xchg
xor
adc
ss
sbb
fldl
xchg
sbb
lods
jl
js
loope
aas
push
push
xor
push
std
add
pop
sub
xchg
shr
outsl
shll
or
cmpsl
movsl
lret
xor
stc
add
negb
dec
sti
adc
test
ficoml
mov
xchg
push
shld
movsb
xchg
or
or
and
pop
loop
pop
and
rcll
icebp
outsb
adc
lock
sbb
inc
cmp
jecxz
lock
dec
data16
xchg
cmp
fstl
int
cs
sbb
nop
bound
xchg
sahf
and
imul
or
xor
aad
int3
adc
imul
pop
loopne
sub
sbb
aaa
sbb
shll
or
adc
inc
dec
aas
dec
dec
mov
mov
pop
jbe
dec
test
jo
fidivrl
xchg
pop
dec
cmp
inc
lock
pop
sbb
push
xchg
jb
in
mov
in
push
test
cwtl
mov
adc
das
adc
test
enter
and
sub
nop
in
into
das
push
loope
inc
xor
jbe
aaa
pop
sub
jnp
sti
push
and
cmp
cs
imul
std
out
and
lahf
push
xchg
or
gs
and
adc
loopne
pop
xchg
stc
out
push
xor
lcall
bnd
fdivrs
mov
fxch
mov
dec
out
dec
pcmpeqb
jmp
test
pop
push
mov
or
fldenv
xchg
js
fmul
daa
js
popf
data16
push
mov
je
popf
lahf
loop
loopne
mov
or
in
sbb
shrb
jns
out
inc
popf
xchg
rcll
pusha
into
pop
fidivrl
fs
cmp
shr
cmp
ds
sbb
jge
ja
cmpb
add
pop
iret
cmp
jp
push
sub
mov
push
mov
repz
out
add
jle
sub
test
daa
in
enter
loope
dec
clc
xchg
mov
jle
addl
jne
inc
hlt
in
add
or
fimull
push
cmp
mov
dec
mov
mov
or
cmpsl
adc
jl
push
mov
cmp
stc
xor
sbb
out
mov
mov
mov
jbe
ss
sub
sbb
lds
xchg
or
or
in
xor
sub
adc
mov
in
sbb
cld
xchg
in
sub
xchg
popf
out
cmp
inc
out
fidivrs
inc
mov
gs
mov
in
in
popa
stc
lar
mov
pop
pop
dec
imul
inc
sub
dec
nop
cmp
jae
inc
dec
out
or
pushl
mov
outsl
arpl
push
inc
sti
push
cmp
ret
in
mov
ja
mov
repz
shl
enter
imul
mov
shll
jge
cmpsb
insl
mov
adc
rorl
push
fdivl
push
int
addb
aad
mov
jb
movsl
jp
sbb
and
addr16
pop
cmp
or
insb
cs
dec
arpl
aam
mov
sbb
mov
add
aam
xor
cmp
adc
xor
mov
push
dec
dec
outsl
out
xorb
sbb
lcall
leave
push
insl
aaa
inc
sub
pop
lahf
push
pop
jns
addr16
lret
stc
in
pop
not
inc
test
ljmp
jbe
dec
inc
in
dec
xor
iret
adc
inc
mov
pop
dec
movsl
ret
dec
push
push
repz
cmpsb
and
pusha
in
jle
add
shlb
cmpsb
jmp
imul
jge
cmc
in
ds
inc
repz
dec
pop
adc
cli
das
mov
jl
cmp
rorb
mov
jmp
neg
xor
adc
std
xor
es
pushl
inc
push
aam
xorb
fildll
sub
sub
inc
fisubs
sub
ja
ds
rorl
xchg
mov
addb
lods
xchg
adc
stc
ljmp
scas
lods
adc
push
xchg
in
xchg
ret
xchg
jle
aas
dec
sbbl
mov
xchg
mov
pop
ljmp
inc
sub
push
scas
add
dec
inc
mov
movsl
inc
in
aam
outsb
dec
imul
sub
sahf
xchg
pop
sarb
hlt
in
mov
dec
and
mov
adc
xor
dec
out
out
pop
pop
sbb
lret
xor
push
mov
dec
mov
mov
decl
sub
movsb
xchg
dec
mov
out
add
cmp
popf
xchg
dec
fcompl
inc
xchg
hlt
xor
lock
xchg
inc
test
dec
pop
and
call
add
cld
dec
sbbl
fwait
je
xchg
lcall
xor
add
dec
mov
mov
pop
inc
adc
dec
mov
pushf
dec
test
fists
daa
loop
shrb
mov
push
sbb
adc
push
mov
loopne
mov
pop
sbb
mov
push
fbld
iret
inc
aad
sbb
rclb
mov
fdivrl
stos
scas
pop
pop
add
shl
mov
popf
insb
pop
mov
in
push
lock
inc
call
mov
push
sub
xchg
mov
imul
or
add
in
repnz
dec
scas
pop
and
std
cmp
imull
dec
xor
movsl
enter
add
pop
enter
push
dec
mov
cld
xor
pop
sbbb
xor
xchg
jne
cmp
fwait
notb
aaa
and
adc
xor
jl
std
or
out
aad
jo,pn
adc
addr16
iretw
sbb
popa
cltd
out
xchg
lea
fwait
loopne
mov
lcall
sub
in
sbb
aas
xchg
movb
push
inc
ja
inc
lea
cmp
cli
sbb
pusha
dec
pop
xchg
mov
mov
cwtl
sub
sbb
idivl
xor
das
loop
gs
adc
xor
cmp
mov
hlt
aas
cmp
push
ds
jne
pusha
mov
out
adc
inc
cmpsb
movl
js
inc
push
add
inc
pop
and
movsl
inc
cmp
sub
arpl
insl
fldenv
ret
mov
add
sbb
outsb
iret
dec
sub
inc
shrl
sub
mov
adc
dec
notb
push
adc
jl
rcrb
pop
inc
fmul
pop
cld
leave
scas
outsb
in
out
in
dec
outsb
lret
outsl
test
push
dec
std
mov
sub
xor
addr16
push
lds
xor
sub
sbb
enter
inc
int3
enter
push
das
jb
pop
aas
shl
mov
push
and
mov
push
push
test
add
in
lods
mov
aam
mov
or
cmp
out
iret
jecxz
fdivs
mov
inc
mov
adc
add
cmpsb
xlat
or
sub
jle
jle
sbb
jno
xchg
repz
jae
inc
mov
adc
insl
jle
mov
cmp
push
aaa
lret
xchg
xchg
mov
adc
lock
sahf
arpl
cmp
mov
arpl
mov
cmp
mov
push
xchg
out
and
mov
popf
mov
push
inc
pushf
shll
pop
or
cli
out
popf
fisttpl
test
popa
ljmp
sbb
pushf
int
xchg
dec
xor
xor
mov
loopne
jo
pop
ficoms
push
outsb
repz
lahf
sbb
cmp
into
xor
lcall
inc
js
mov
lea
ret
std
dec
leave
mov
adc
push
jb
out
pusha
adc
sbb
pop
test
mov
repz
pop
xor
add
sarb
pushf
or
out
scas
dec
sbb
dec
imul
in
mov
mov
cmp
pop
test
cmc
mov
cmpsb
outsb
clc
lret
adc
xor
fisttps
or
cmp
mov
inc
stos
mov
xor
sarl
in
insb
mov
ret
push
subb
push
fnstcw
sbb
xor
pop
mov
sahf
adc
xor
ds
in
mov
enter
add
push
test
out
enter
lret
cld
pop
sbb
add
mov
cmpsb
or
lahf
fsubrp
lret
fdivr
or
add
pop
add
cmpsb
fwait
and
sbb
pop
or
mov
int3
pushf
jne
mov
cmp
adc
shll
loopne
mov
aaa
fcompl
cmp
pop
les
pusha
outsb
pop
mov
ljmp
test
mov
pop
aad
xor
cmc
ss
lret
ffree
dec
cmp
mov
xor
je
daa
sbb
rorl
stos
adc
or
dec
dec
ljmp
xchg
push
push
inc
xor
jns
iret
push
pusha
dec
mov
mov
jge
dec
xchg
inc
mov
sub
inc
and
enter
cld
out
ret
jnp
cmp
jb
sub
js
jne
cmp
jge
lahf
add
xchg
test
loope
dec
jns
pop
xchg
sahf
lret
fdivl
lahf
lods
or
mov
scas
test
sti
or
inc
lods
xchg
xchg
xchg
mov
lret
fidivs
xchg
unpckhps
cld
pop
leave
cwtl
fstps
loop
das
dec
lds
mov
mov
push
shll
xor
mov
sbb
dec
sub
int
jmp
add
cltd
inc
cmpb
pop
push
cmp
push
mov
mov
cmp
inc
repz
ficompl
mov
mov
dec
jmp
cli
insl
ds
inc
push
cmpb
jns
jecxz
or
sbb
xor
inc
inc
mov
cmpsl
daa
mov
pop
decb
dec
sahf
movsb
xchg
in
and
xchg
ljmp
insb
xchg
pop
or
in
imul
test
fwait
mov
movsl
sti
inc
xor
mov
in
xchg
mov
push
cli
ja
insl
inc
push
bound
cmp
loop
push
xchg
mov
out
pop
gs
shlb
mov
ja
mov
bound
fimuls
cmc
dec
inc
xchg
jae
outsb
push
fmul
and
xor
icebp
adc
or
add
in
add
adcb
mov
stc
cmovb
adc
xchg
ss
stos
pop
mov
das
shlb
test
inc
test
andb
push
pusha
cld
cmp
ljmp
movsb
mov
xor
pop
lcall
mov
dec
adc
enter
inc
shrl
cmpsl
inc
mov
xlat
sub
or
js
sahf
sub
faddl
jbe
test
xor
push
repz
sbb
inc
push
inc
hlt
xor
xorb
mov
add
jp
mov
js
in
pop
add
and
ret
jl
mull
and
out
bound
ss
je
shlb
mov
outsl
flds
xchg
fs
xor
stos
adc
xor
xor
add
das
int
jo
xchg
jb
jo
cld
inc
mov
incb
pop
pop
sub
xchg
or
dec
add
sub
jecxz
ja
jbe
jmp
daa
nop
jmp
sbb
sub
adc
dec
gs
stos
jecxz
mov
stos
pop
cmp
mov
lret
sbb
je
lret
cmpsl
in
pop
and
popa
pop
xchg
imul
dec
bound
jmp
push
int3
jae
in
add
jg
in
sub
push
popa
and
mov
dec
stos
fs
inc
stos
jge
jle
xor
movsb
or
mov
xor
push
sbbb
jg
lret
and
lcall
leave
inc
je
scas
adc
aaa
mov
fwait
and
pop
and
stc
cmpsb
cmpsb
popa
mov
mov
movsb
lahf
notb
test
addr16
sbb
in
mov
decl
inc
mov
je
gs
ret
dec
cli
dec
jp
aaa
aad
pop
mov
cmpsl
lret
jl
addb
aas
call
or
fnsave
add
inc
out
adc
add
pop
shll
daa
ret
das
and
arpl
pushf
insl
sub
jecxz
mov
fisubrs
or
dec
pop
cs
sbb
mov
add
push
sbbl
mov
lcall
cmp
data16
mov
jg
ja
jnp
or
adc
test
out
dec
dec
dec
add
and
mov
insl
mov
das
pusha
cvtpi2ps
jo
and
jbe
int
out
hlt
jbe
insl
mov
out
movsb
fnstcw
inc
enter
jle
fisttps
into
cmp
jg
fcoms
imul
mov
inc
int
pop
xchg
fidivrs
pop
add
in
xchg
sbb
out
xor
adc
inc
movsb
inc
jg
cmp
xchg
or
sbb
pop
inc
pushf
mov
dec
pop
arpl
mov
add
lret
pop
xchg
lahf
jbe
lret
xchg
xor
jnp
sub
hlt
sti
inc
inc
push
mov
outsb
mov
push
dec
cmp
mov
dec
pop
test
cmp
push
jp
nop
loope
pop
xorl
mov
daa
jl
cmp
lods
nop
push
pusha
scas
test
mov
push
sub
add
adc
popf
negl
out
bound
fldlg2
and
pop
test
dec
adc
cmpsb
fnstcw
mov
popf
push
xchg
pop
mov
sbb
xor
mov
sbb
jmp
cmc
shlb
test
mov
les
sub
xchg
pop
ja
les
cli
xchg
pop
adc
adc
xor
xor
stos
leave
rorl
add
pop
push
cltd
mov
insl
xchg
test
je
jp
inc
add
ja
mov
push
xchg
lahf
lret
scas
pop
jle
ss
ss
repnz
and
cmc
lock
dec
test
sbb
lcall
xchg
call
insb
loope
pop
insb
xchg
and
mov
hlt
dec
popa
popf
test
pop
and
or
mov
arpl
mov
pop
push
popf
adc
jno
cmp
push
gs
sbb
dec
lret
movsb
push
add
cwtl
pop
add
icebp
pop
jbe,pn
in
mov
push
aam
clc
xchg
movsl
ja
insl
outsl
lea
pop
push
gs
neg
icebp
sub
xchg
jmp
xlat
mov
repnz
pushf
cmp
out
movsl
je
xor
push
sbb
movsl
xor
stos
dec
and
mov
jmp
in
inc
pop
test
sbb
jae
mov
cmpsb
cli
mov
pop
insl
aam
inc
test
arpl
mov
xchg
cmp
xchg
stos
dec
xlat
pop
je
test
gs
pop
imul
imul
xlat
roll
pop
pop
mov
mov
sub
daa
add
out
or
and
adc
pop
jns
mov
push
inc
mov
xchg
adc
push
scas
and
xchg
scas
fcomip
xchg
adc
loop
cmpsl
imul
inc
lret
jno
push
push
cs
cmp
std
movsb
jne
repz
fsubp
pusha
push
ljmp
mov
dec
pop
mov
imul
ds
arpl
mov
push
cmp
repnz
imul
outsl
lds
adc
std
mov
and
mov
pop
out
imulb
pop
adc
nop
shr
mov
pop
inc
xor
inc
mov
push
xor
mov
push
inc
mov
push
jle
mov
loopne
jle
and
xorb
lahf
jne
popf
push
xchg
fwait
out
cmp
mov
out
fwait
cmp
or
stc
xor
push
mov
jp
test
mov
push
pop
stos
cmpsl
fs
mov
testb
mov
mov
cs
add
mov
dec
movsb
add
dec
fs
test
pop
cmp
insl
inc
loop
mov
popf
in
pop
aaa
mov
shl
out
add
cmp
sbb
arpl
jl
xor
fistpll
and
dec
adc
pop
shll
scas
sub
mov
push
jle
adc
adc
push
jno
test
push
loop
jge
sbb
sbb
xor
xchg
mov
push
xchg
scas
fs
sub
mov
fcmovbe
adc
rcrl
sbb
popf
jae
test
or
aaa
hlt
mov
sub
sbbb
loop
mov
lods
jno
xchg
xchg
mov
push
and
inc
or
or
and
sbb
pop
push
push
mov
mov
xchg
ret
fwait
test
in
add
addr16
mov
adc
lock
sahf
cmp
mov
pop
sbb
in
push
sbb
push
not
mov
stc
fadd
stos
inc
fstpt
cmp
or
addb
push
lret
lahf
lods
pop
push
hlt
dec
push
pop
ucomiss
cmp
jmp
movsl
cmp
cwtl
adc
inc
aad
fwait
pop
pop
xor
xchg
out
pop
mov
inc
adc
movsl
movsb
shll
fildll
inc
mov
push
adc
jbe
cs
lahf
cmp
mov
mov
lods
adc
mov
ret
push
fdivs
pop
jle
subb
cmp
xlat
in
in
and
push
scas
and
call
mov
mov
mulb
adc
jp
sub
addr16
sub
aaa
cmp
popa
movb
push
jge
xchg
incl
sub
inc
aas
aas
mov
mov
or
mov
xor
cmc
fsubp
rclb
or
and
cmp
push
jp
pop
outsb
xchg
mov
inc
and
mov
pop
clc
das
in
adc
inc
inc
sahf
xchg
cmpsb
xchg
jle
fildl
push
inc
mov
cmpsb
stos
outsl
add
mov
fcomps
or
xchg
push
orb
xchg
adc
rcrb
inc
mov
cmp
gs
jmp
mov
push
in
adc
jmp
lock
inc
or
mov
call
pop
pop
mov
repz
push
sub
cmc
xlat
adc
jecxz
mov
out
popf
lcall
adc
adc
scas
fwait
aaa
shlb
jl
xchg
in
pop
cltd
mov
sbb
and
inc
mov
enter
pop
push
cmp
sbb
inc
fnsave
lcall
adc
mov
bound
and
outsb
pop
sarl
je
push
shll
mov
push
jle
stos
popa
mov
enter
cmpsb
push
or
sub
or
inc
inc
pop
inc
or
sub
fbld
push
jne
pop
sub
inc
sbb
inc
nop
jge
loope
inc
pop
xchg
mov
and
fildll
test
aas
insb
insl
xor
or
sub
jecxz
push
stos
and
lahf
xor
leave
int
pop
out
popa
inc
lods
js
mov
leave
test
mov
outsl
xchg
outsb
cmp
jmp
pop
adc
pop
push
leave
pop
inc
int
or
dec
push
push
test
popf
sbb
or
xchg
mov
push
mul
mov
push
in
pop
push
pop
cmp
bound
xlat
jmp
cmp
incl
test
inc
out
push
dec
and
fldcw
aas
mov
pusha
daa
loope
das
push
fnsave
icebp
push
mov
fnstsw
dec
cmp
pusha
out
mov
mov
jecxz
shlb
pushf
aas
daa
push
jmp
mov
scas
mov
sbb
imul
pop
lcall
in
arpl
mov
icebp
or
dec
ljmp
ror
mov
xor
mov
pushl
mov
pop
inc
adc
push
adc
and
test
add
inc
ret
sub
jne
pusha
xchg
add
mov
loopne
iret
dec
or
adc
std
movsb
push
dec
je
pop
lds
sahf
jbe
fnstsw
jle
inc
icebp
pop
inc
xor
popa
push
cmp
lcall
pop
mov
mov
cmp
xchg
adc
pusha
loop
mov
stos
mov
imul
pop
inc
je
mov
movl
aas
mov
or
arpl
jle
je
fildl
out
shrb
xor
out
pop
leave
pop
pop
push
inc
jp
jno
outsb
imull
mov
pop
or
sub
dec
rcl
mov
mov
cmp
add
pop
int
dec
adc
pop
xor
adc
dec
sbb
insl
xor
push
loop
mov
imul
cmpsl
dec
dec
jbe
in
pop
rolb
push
lea
lods
push
adc
ljmp
or
add
imul
movsb
int
inc
pusha
imul
dec
sub
push
push
jl
add
or
sbb
and
dec
leave
cmp
pop
sbb
hlt
pushf
leave
inc
addr16
jno
mov
push
dec
popf
push
in
in
push
imul
pop
or
push
push
or
addr16
adc
push
cltd
and
ljmp
xor
mov
mov
sbb
push
fstl
in
inc
popa
ret
jl
cld
jp
popa
stc
stos
xchg
inc
push
fdivrl
jl
mov
cmpsb
loope
xchg
gs
xor
adc
loopne
cs
adc
arpl
fs
call
je
stc
stc
push
stos
inc
addr16
in
daa
dec
adc
imul
test
push
dec
xchg
and
in
or
pop
jnp
popf
out
jecxz
iret
decl
inc
jle
cmp
jmp
adc
mov
jmp
dec
enter
mov
lds
xchg
scas
jae
call
cld
lods
or
sub
pushf
pop
xor
xchg
adc
out
arpl
ss
mov
xchg
or
fdivl
sahf
xor
movsl
cmp
sub
jns
and
inc
mov
dec
fidivrs
repnz
sbb
rcl
dec
jo
ss
iret
lea
sbb
fnstcw
fucom
add
mov
mov
sbb
sarl
int3
insl
mov
push
sbb
inc
cmp
fs
ds
sbb
jne
adc
xchg
or
inc
mov
mov
inc
jae
xor
dec
loop
jmp
or
and
andb
push
movsb
pop
pop
xor
adc
inc
cmp
sbb
sarb
aas
dec
out
xor
es
xor
enter
outsl
dec
xchg
popf
mov
imul
pop
xchg
add
lahf
jno
repz
push
mov
shr
repz
bndstx
add
daa
mov
push
cltd
cmp
adc
pusha
movsb
jmp
mov
js
ret
jbe
jns
push
mov
pop
dec
dec
pop
ds
and
lock
xor
inc
pop
mov
sbb
dec
inc
aaa
jge
pop
mov
push
sub
rorl
jle
mov
lock
jge
adc
xchg
xchg
and
sub
pop
pop
outsb
cli
ret
mov
jmp
inc
leave
mov
mov
in
xchg
jb
call
sbb
bound
or
adc
fucomi
jo
addr16
mov
dec
lahf
into
xchg
sub
xor
pop
jns
movsl
cmc
xorb
aad
mov
xchg
cli
jl
cmc
pop
mov
add
in
push
dec
dec
test
test
paddusb
xchg
out
xor
outsb
pusha
pop
fisubrl
out
ficomps
out
xor
xor
add
pop
paddq
daa
arpl
lock
jns
rcrb
jns
pusha
test
les
cmc
shrb
ficompl
insl
sbb
out
sbb
outsl
and
push
push
bound
jmp
jns
mov
push
dec
pop
loopne
aam
pusha
xchg
dec
pop
sbb
mov
outsl
loop
push
and
xor
js
imul
pop
test
in
bound
jecxz
jge
sub
cmp
and
fsubrl
jns
fdivrl
jl
sahf
sti
rclb
test
imul
pop
or
mov
xor
pop
into
push
mov
sbb
mov
fildll
addr16
jns
sbb
testl
shrb
shll
fs
bnd
scas
fwait
or
jns
push
stos
fisubl
rorb
push
sbb
jp
mov
adc
jg
dec
mov
xor
dec
out
or
or
xchg
ds
aas
shr
push
adc
push
inc
nop
and
loope
add
int
decl
jle
mov
push
push
cmp
xchg
cmp
and
sub
xchg
test
adc
and
pop
inc
outsl
cmc
push
in
sbb
ljmp
fmulp
ret
aad
in
aaa
add
xchg
jmp
push
pushf
adc
xchg
adc
and
sub
mov
dec
jne
pop
xor
inc
cmp
xor
push
dec
mov
gs
jg
mov
xchg
mov
in
pop
xor
ljmpw
rorb
inc
notl
nop
mov
jp
jp
push
fwait
cltd
fstpt
out
in
hlt
lret
daa
jne
aaa
lods
in
mov
ljmp
dec
popf
stos
sub
and
cltd
ljmp
bound
adc
dec
sub
sbb
cs
mov
imul
mov
dec
dec
std
test
cmc
jns
and
pop
xor
lock
lret
or
mov
add
mov
jl
add
push
dec
add
mov
pushl
or
push
pop
pop
pop
dec
into
cmp
popa
inc
hlt
ljmp
dec
ficoms
inc
adc
xchg
sbb
inc
dec
arpl
lcall
pop
add
dec
loope
adc
mov
sbb
fs
lods
sub
push
rcll
xor
fwait
mov
js
test
or
add
out
add
in
outsb
pop
popa
xor
jge
xor
jg
xchg
insl
fmull
xchg
mov
xchg
mov
iret
and
jns
outsb
icebp
icebp
mov
or
test
and
lea
pop
sub
dec
mov
sbb
xchg
xchg
movsl
hlt
jecxz
dec
jae
cmpsb
xchg
xchg
dec
cld
pop
out
add
arpl
sub
mov
mov
add
mov
std
sahf
sbb
das
ffree
xchg
pop
lahf
xchg
xchg
mov
inc
cmpsb
shlb
adc
fwait
add
push
andb
xchg
ja,pn
inc
cltd
imulb
and
fnstenv
lock
popl
or
jae
and
lea
add
jbe
clc
in
inc
in
or
lods
pusha
pop
ficoms
pop
stos
fsubs
cmpsl
rorb
aad
gs
or
popa
mov
bound
out
rcll
nop
cltd
insb
dec
stos
jmp
mov
sti
imul
jns
repz
inc
and
nop
and
mov
jle
pop
mov
outsb
aad
bound
pop
iret
xchg
cltd
jae
inc
jmp
dec
cmc
jmp
out
xor
mov
mov
mov
leave
cmpsl
and
pop
cltd
sti
insl
dec
rcrb
lret
inc
pop
lret
popa
aaa
or
pop
xchg
fs
cld
js
outsb
out
rol
mov
xchg
repnz
fs
mov
mov
imulb
sub
sahf
jg
pop
push
gs
out
inc
or
rclb
nop
xchg
pop
aas
fs
sbb
push
sbb
arpl
outsb
jmp
lahf
outsl
pop
mov
add
mov
inc
aam
idivl
cmpsb
fidivs
jo
lods
push
or
mov
pop
ja
lcall
aaa
cmpsb
fiaddl
and
mov
add
mov
push
fmulp
mov
adc
pop
pop
lods
insl
sbb
mov
and
cmpsl
dec
imul
scas
ret
rcll
sub
stos
adc
enter
mov
rcr
or
sbb
out
xorb
push
in
arpl
pop
pop
jl
xor
outsl
ret
xchg
ret
test
mov
lods
shlb
addr16
and
inc
arpl
ss
addr16
and
stos
ljmp
lahf
pusha
mov
enter
sbb
or
fnsave
aas
push
adc
mov
imul
dec
dec
ljmp
fwait
jg
mov
adc
cmp
adc
pop
out
test
in
lcall
jmp
push
ret
pop
and
bound
mov
stc
inc
mov
gs
dec
loopne
cmp
or
inc
pop
dec
pusha
std
loop
int3
fidivrs
adc
scas
xor
inc
lea
sub
pop
dec
inc
fmuls
ficomps
mov
test
sub
fnstsw
les
add
divl
ficoms
out
mov
ljmp
gs
shlb
int3
sub
insb
sti
mov
add
shlb
fbld
add
pop
xchg
jns
xor
push
xor
add
test
js
or
and
mov
mov
sub
ja
mov
es
les
loope
mov
pop
mov
inc
xor
inc
scas
xchg
jmp
cmpsb
adc
jno
pusha
in
cwtl
push
popf
sub
push
mov
dec
lods
xchg
sbb
mov
push
arpl
lret
or
xchg
sbb
sub
push
nop
xchg
pop
fsubrp
push
lret
xor
xor
mov
pop
push
mov
test
in
push
jl
xchg
test
out
jmp
and
pop
xchg
popa
cmp
punpcklbw
fwait
and
loope
adc
cmpsl
xor
jnp
imul
mov
sbb
pop
lock
or
cltd
cmp
add
outsl
adc
iret
xchg
mov
test
dec
gs
sub
scas
jp
shrl
push
inc
sub
insl
sbb
movsb
test
sbb
fistps
mov
xchg
pop
mov
sbb
inc
lea
xchg
lock
cltd
or
xor
adc
iret
and
cmp
unpckhps
lods
sbb
pop
inc
das
push
push
sub
pop
mov
nop
hlt
pop
lea
push
mov
sbb
mov
sub
cs
sti
rolb
jno
lea
bound
lea
stos
or
fldlg2
insb
dec
jg
jbe
inc
mov
xchg
sti
cmp
iret
popf
sti
mul
push
pop
mov
sahf
adc
addr16
pusha
mov
lret
sti
xchg
lret
stos
std
mov
mov
xor
jp
mov
in
xor
sbb
xor
pusha
call
push
imul
jl
adc
out
loopne
lods
nop
mov
imul
cmp
and
cmpsl
mov
sbb
popa
pop
test
daa
xchg
pop
mov
jecxz
daa
jl
xchg
sarb
out
out
mov
les
and
or
inc
aad
loope
mov
cmpsb
cmpsb
in
or
cmp
dec
xorb
gs
jno
out
ds
jbe
add
xor
inc
subl
jno
jns
fisubs
fcoms
repz
push
shrl
mov
jmp
sahf
popf
aaa
popf
pop
lahf
cld
dec
ljmp
sbb
cmp
idivl
mov
xlat
addr16
stos
int3
int3
xor
inc
add
mov
hlt
mov
or
adc
push
add
jmp
mov
jbe
mov
popf
sar
int3
jl
lods
daa
xchg
test
mov
test
dec
mov
fdiv
aam
andb
sarb
mov
out
push
add
pop
push
rorb
or
sub
jge
aaa
insl
popf
rcrb
out
mov
jo
bnd
dec
mov
inc
push
ret
out
xor
jmp
xchg
push
xor
aam
xchg
dec
xor
pop
pop
cmpsb
gs
sar
pop
stos
fnstcw
lods
and
insl
call
subb
fsubrl
dec
inc
fmul
dec
and
adc
call
jmp
daa
mov
and
sbb
xchg
aam
adc
test
sahf
pusha
fistpll
xchg
in
pusha
lret
jmp
dec
dec
and
addr16
ret
gs
movsl
xor
and
mov
jbe
fadds
push
or
sub
push
shld
mov
sub
and
inc
push
jns
fnstenv
or
arpl
les
add
pop
mov
mulb
bound
fnstsw
in
sub
fsts
add
cmpl
sub
mov
les
push
aam
sbb
out
xor
sub
in
js
push
or
jg
sub
inc
addr16
in
lret
dec
int3
push
inc
jb
inc
adc
mov
xlat
out
inc
pop
punpcklbw
and
mov
pusha
push
lods
cs
and
lock
lahf
mov
roll
mov
cvtps2pi
fcmovnbe
jbe
jb
popa
mov
or
flds
or
push
and
movsl
imul
lods
iret
je
mov
scas
pop
push
mov
shlb
mov
adc
xor
or
add
adc
aad
xchg
adc
inc
inc
jnp
dec
in
fsts
cmp
imul
adc
add
mov
not
cmpsb
rcr
mov
push
sbb
pop
xor
imul
dec
jbe
imul
cld
insl
test
iret
push
ljmp
adc
outsb
in
mov
notl
jo
outsl
lea
cmp
outsl
ds
xchg
xor
ss
int
push
out
push
out
lock
mov
and
and
cmp
add
jecxz
cmpsb
sbb
cmpsb
in
lea
sub
insl
sub
push
sub
in
push
sub
push
gs
arpl
inc
pushf
sub
pop
loope
and
sbb
iret
sbb
test
loope
sahf
jbe
jb
lret
sub
loopne
ja
inc
insb
pop
lods
cmp
add
mov
dec
movsb
shll
ss
push
dec
inc
mov
push
sbb
dec
and
or
mov
mov
push
lahf
jo
adc
imul
mov
xor
shll
xchg
hlt
icebp
mov
and
sbb
pop
add
adc
pop
out
cs
clc
push
or
stos
adc
jae
stos
into
negl
nop
or
xor
mov
push
call
xchg
rorl
xchg
fnstenv
sub
es
add
imul
mov
adcb
stc
aaa
loop
ret
inc
and
je
lods
add
adc
and
push
jecxz
xchg
jge
into
dec
jg
cli
outsb
push
mov
mov
xor
sub
xor
sub
test
cmpsb
push
mov
mov
sub
or
add
shlb
mov
sub
out
ja
addr16
and
cmc
lahf
fnstcw
les
or
lret
adc
mov
insb
adc
inc
in
neg
ret
addr16
int
or
mov
add
adcb
pusha
xor
mov
cmc
pop
push
out
das
sub
lea
sub
nop
shrl
sub
mov
lret
or
push
fcmovnb
aad
adc
xor
sub
test
call
mov
push
pushl
pushf
xor
aaa
mov
sub
loop
ljmp
push
jae
ficompl
add
shl
or
mov
adc
das
sahf
push
xor
add
push
inc
outsb
ficoml
adc
pop
adc
fildll
push
sbb
adc
xchg
aas
inc
out
mov
jnp
test
imul
enter
cmp
or
cmp
imul
adc
and
shlb
push
xor
lret
jbe
push
out
frstor
inc
aaa
and
out
and
xor
adc
fs
xchg
jmp
push
mov
add
out
jl
out
push
inc
nop
adc
inc
mov
fstpl
jge
mov
cmp
outsl
xor
dec
xchg
jp
jmp
pop
or
xchg
rorb
push
pop
aas
shl
fwait
cmp
or
outsl
jb
xor
and
imul
pusha
in
gs
iret
outsl
shl
jge
stos
jmp
jo
and
jo
enter
cmp
mov
sub
jp
push
xor
cmc
data16
cmp
pop
jae
subl
mov
lahf
shll
dec
xor
jo
push
addl
mov
cmpl
pop
dec
xchg
adc
ljmp
fdivrp
loopne
ds
inc
jbe
inc
sub
lahf
test
les
dec
add
cmpsl
adc
outsl
cmp
rcrl
int3
dec
xchg
ljmp
outsl
imul
testl
out
inc
jno
add
sub
mov
insl
es
arpl
aam
dec
mov
out
adc
push
dec
ss
fucomip
insl
inc
out
and
loopne
push
sbb
xor
and
ds
mov
dec
xor
push
dec
mov
jg
cmpl
mov
push
mov
iret
loope
push
in
dec
push
inc
roll
dec
cwtl
roll
neg
xor
lcallw
xor
jp
dec
stos
sahf
jae
push
push
dec
sbb
xchg
test
insl
push
fmull
popa
mov
sub
sub
mov
lret
push
cmp
mov
xor
jns
in
push
cmpsl
rcrb
out
or
addr16
or
hlt
faddl
shlb
ljmp
xor
or
movsl
ret
push
cmp
mov
idivb
int
bound
ret
in
enter
and
pop
sti
ss
xchg
pop
and
xor
bound
push
mov
cmp
rorb
cmp
loop
push
xchg
sub
std
mov
test
mov
xor
mov
ss
jge
int
xor
xor
stc
stos
push
xchg
pcmpgtw
adcl
int
xchg
sarb
lods
pop
cmp
push
lret
in
xchg
jo
add
insl
push
push
or
sbb
loope
inc
mov
pop
fstpt
rorb
lahf
xlat
adc
and
sahf
arpl
mov
inc
adc
or
dec
mov
iret
jne
in
pavgb
loop
lret
addr16
push
aad
cli
cmc
dec
xor
dec
fstpl
loope
jl
lret
jno
sbb
sub
stos
add
adc
scas
push
mov
aaa
das
out
clc
lods
sub
cmp
sti
push
mov
insb
in
or
fdivrs
clc
adc
push
lock
fwait
add
jae
insb
clc
sub
sub
mov
pop
pop
ja
in
xchg
cld
adc
dec
cmpsb
bound
shlb
leave
xor
and
mov
out
dec
dec
scas
jae
dec
and
aam
aad
pop
dec
adc
fsubl
add
cmc
mov
ss
dec
into
sub
loope
dec
lahf
out
decb
fwait
and
cmp
fs
push
stos
or
sub
aaa
loop
sub
adc
pop
or
hlt
push
xor
test
pop
mov
sbb
cli
mov
out
push
adc
and
js
loope
add
jno
das
cmp
inc
rolb
clc
add
addr16
jno
inc
pusha
lods
and
imulb
sbb
xor
out
cmc
xchg
mov
call
sub
pop
xor
mov
adc
pop
into
add
pop
xchg
loope
stos
mov
scas
jo
mov
int3
das
adc
or
adc
sub
jnp
popa
dec
out
inc
or
cs
adc
adc
jb
mov
adc
dec
push
jae
daa
xchg
push
sbb
test
push
aaa
fwait
sarl
callw
sub
sub
sbb
into
pop
sbb
inc
ficoms
popf
pop
or
out
sbb
dec
lea
mov
popf
xor
inc
sbb
or
add
sub
sub
push
out
pop
lds
aaa
inc
ret
jnp
xor
cmp
mov
jno
cmp
xor
aas
cmp
into
push
pop
in
jmp
and
jmp
aam
adc
dec
stc
mov
jo
imul
pop
daa
inc
dec
rclb
ljmp
divl
inc
mov
cmpsb
xor
jmp
add
imul
push
arpl
push
cmp
das
sub
xorb
jg
dec
pop
scas
sbb
pop
pop
sub
push
pop
xchg
fdivp
mov
mov
shr
rclb
inc
fimull
ret
pop
int
sub
sub
pop
leave
inc
pminsw
and
movsl
mov
pop
push
pop
ret
inc
into
cs
jmp
xchg
xchg
insb
out
cmp
ljmp
pop
xor
mov
dec
stos
sub
jb
push
dec
or
cld
imul
lcall
mov
rolb
push
in
add
sbb
mov
das
icebp
fwait
jb
pop
and
outsb
fdivl
xor
ljmp
mov
sub
inc
add
movsb
and
in
je
xor
lahf
jmp
fldt
ss
push
push
cmp
movsb
sbb
mov
ds
fldt
insb
cmpsl
jge
sub
xchg
aaa
inc
push
sbb
push
mov
subl
rorb
push
ds
inc
lret
adc
int3
sub
add
pop
daa
in
sqrtps
adc
andl
test
pop
jecxz
int
mov
das
inc
xchg
ds
es
popa
pushf
and
jo
fxsave
or
jmp
ds
push
idivl
push
xchg
push
adc
insw
jbe
mov
loop
ret
and
and
dec
and
sti
test
pop
ljmp
movsb
ds
xor
repnz
daa
jecxz
je
xor
jns
fucomp
aam
jne
pop
int3
mov
stos
push
cli
and
inc
pushl
xor
addr16
mov
jp
pop
data16
iret
or
lcall
addr16
repnz
pushf
test
jae
aas
push
loop
xlat
adc
aam
cmp
push
cld
push
aad
pop
stos
dec
jno,pn
lods
dec
aaa
hlt
rcr
daa
divl
std
and
jbe
fwait
pusha
lret
cli
mov
push
cmpsb
jb
popa
mov
dec
adc
cmp
mov
dec
jmp
jl
out
sub
dec
dec
pop
and
aas
and
into
pop
in
mov
cmp
lock
mov
push
imul
xor
xor
jne
adc
lret
dec
hlt
xchg
mov
cmp
fcomp
adc
inc
xor
in
inc
and
push
or
push
adc
and
dec
add
or
or
pop
or
hlt
pop
js
jecxz
adc
es
insl
pop
fsubrp
sub
fadds
jo
sub
xor
and
jne
lock
add
xor
iret
and
sub
out
int
pop
mov
and
push
xchg
pushf
adc
ret
nop
into
movsl
lcall
pop
lods
subl
jne
push
mov
dec
addr16
hlt
ret
xchg
sub
insl
fimull
cld
stc
bnd
push
xor
ljmp
mov
jmp
and
mov
sub
mov
mov
xor
dec
shr
cmc
dec
std
gs
hlt
jno
loopne
shr
or
sub
dec
into
add
add
add
sub
sbb
push
jmp
loop
mov
testl
mov
test
fdivrs
sub
xor
lahf
xchg
stos
nop
jns
push
push
mov
pop
repnz
into
pop
xor
xchg
xor
test
insl
and
int3
xlat
sbb
xor
xor
das
outsl
dec
lds
adc
sarb
daa
mov
pop
je
cld
mov
push
sub
dec
sbb
mov
int
or
push
aaa
mov
sub
cmpsl
push
jne
nop
add
xchg
jne
lods
loope
rolb
inc
pusha
or
fbld
inc
leave
loopne
addr16
mov
jl
mov
into
in
fcmovnbe
sub
mov
add
lock
push
add
lds
adc
adc
mov
fs
sarb
out
je
pop
cmp
outsl
sub
and
dec
iret
jmp
dec
or
inc
dec
push
in
rorl
inc
adc
sub
dec
lods
loope
push
inc
pop
sbb
into
push
adc
adc
shll
mov
lret
sub
pop
stos
mov
jne
xor
pop
daa
repz
test
push
mov
insb
frstor
orl
inc
loopne
cvtpi2ps
rcr
mov
insl
dec
pop
xchg
sub
push
inc
pushf
sub
xlat
mov
cmp
mov
jp
sar
xchg
gs
jbe
and
jl
push
loop
or
add
in
pop
repz
adc
add
jne
loop
outsb
ret
lods
mov
inc
inc
push
xor
sub
add
sarl
shl
sbb
rcll
jb
iret
adc
imul
shlb
popa
ret
decb
push
int3
xchg
in
push
shlw
aad
inc
pop
les
cs
inc
loope
stos
xchg
adc
cmp
jle
dec
outsb
add
cmp
scas
adc
aam
mov
cmp
inc
or
cmp
pusha
je
clc
nop
add
inc
ret
inc
sbb
add
fwait
shlb
or
pop
ja
push
hlt
add
dec
iret
mov
or
add
push
out
mov
lcall
pop
fists
mov
xor
inc
test
mov
add
inc
ret
out
mov
adc
adc
cmp
in
push
adc
sbb
adc
jecxz
or
sub
dec
mov
clc
scas
ret
bound
sub
fisubl
subb
xor
xor
adc
outsl
sbb
add
pop
push
stos
nop
fcoms
adc
lods
call
push
daa
cmpsb
mov
cmpsl
repnz
adc
mov
mov
dec
leave
mov
ret
shlb
push
add
pop
lea
and
or
pop
and
aam
ret
inc
adc
imul
xlat
pop
dec
scas
rcrb
push
mov
mov
mov
loope
dec
popa
jmp
inc
xchg
in
xor
xlat
in
sub
nop
jne
mov
push
out
sbb
jmp
or
xor
mov
stos
dec
pop
es
push
insb
sarl
xor
inc
roll
sub
pop
ljmp
sbb
les
dec
icebp
sbb
pop
sub
imul
addr16
aas
arpl
jmp
xor
aas
xchg
mov
cmp
jle
adc
add
mov
imul
push
xchg
cmpsb
lods
sbb
insb
dec
in
adc
or
mov
jmp
cmpsl
in
cs
rcll
sub
pop
ds
push
pop
adc
jno
or
test
push
mov
loope
shlb
es
mov
punpckldq
in
push
mov
adc
adc
pusha
movsl
jg
sub
dec
cmc
call
rorl
inc
mov
int3
pop
stos
push
repnz
jb
mov
sti
push
out
xchg
mov
sub
imul
das
repz
xor
adc
fiadds
jb
sub
sub
push
imul
loop
shll
pop
pop
push
adc
call
shrl
loop
cmp
icebp
movsl
pusha
or
std
adc
jbe
bnd
push
or
sub
fadd
cwtl
popf
mov
sahf
out
sbb
div
jmp
push
push
rorl
push
addl
push
xor
and
adc
xor
inc
insl
push
xor
out
stos
ret
iret
aaa
lea
cltd
pop
sti
inc
inc
xor
xor
adc
mov
push
adc
movsb
aas
je
loopne
add
insl
mov
mov
idivb
adc
xchg
fsubrs
jp
pop
arpl
decb
dec
pop
mov
adc
aas
mov
leave
ljmp
xchg
out
adc
lods
cmp
add
cld
push
in
push
or
repnz
mov
mov
adc
lret
sub
adc
rcrl
rcl
sbb
icebp
xor
bound
sti
push
lea
dec
xor
inc
insb
cltd
jbe
or
dec
int
mov
push
lea
xor
lret
and
adc
mov
mov
decl
inc
stos
adcb
sti
cli
leave
xor
jle
push
enter
fists
iret
sbb
lock
push
adc
sub
fldcw
inc
or
sub
xor
xchg
scas
mov
ljmp
jp
out
mov
xor
xchg
daa
stos
lret
xor
aaa
mov
jne
push
ficoml
push
repnz
inc
adc
cmpl
int3
adc
adc
adc
nop
xlat
adc
loop
push
mov
lcall
int3
imul
bound
out
mov
jne
cmp
fistpll
rcll
jae
dec
je
ret
sub
xchg
cwtl
or
scas
mov
rolb
aaa
stos
push
push
mov
test
adc
outsb
addr16
mov
stc
mov
sub
sub
aam
jmp
sub
popa
int
leave
in
scas
scas
sbb
in
dec
jecxz
jl
mov
or
add
sbb
xchg
pop
xchg
pop
inc
dec
adc
adc
pop
pop
jne
daa
aas
dec
leave
lret
inc
xchg
bound
ret
dec
sar
insl
call
cmpsl
pop
in
sub
mov
or
dec
jge
pop
stos
xchg
and
mov
shrl
shlb
adc
sub
loopne
cmp
xchg
add
push
add
lock
arpl
xor
xlat
dec
loop
sub
out
lods
and
sbb
leave
leave
lcall
leave
loope
aam
mov
lret
push
or
adc
lds
sbb
mov
ret
xor
pusha
dec
adcb
out
lret
xor
fsubl
hlt
ja
sub
aam
rcrl
mov
lods
rorl
sbb
outsl
jp
sbb
adc
lods
xorl
stos
push
leave
mov
push
movsl
popa
cld
das
mov
dec
int
sbb
in
fnstcw
jnp
sbb
mov
scas
xchg
dec
ja
clc
sub
pop
stos
sarb
push
jle
rcll
fisubrl
loope
xor
lods
int
adc
int
mov
aam
sahf
sarb
aad
and
push
push
aam
jmp
mov
sbb
rep
cmpsb
movsb
or
sub
xor
test
outsb
mov
jp
fwait
rcl
xchg
pop
pushf
stos
adc
sti
sbb
adc
push
decb
mov
push
div
pop
clc
movsb
jle
repnz
add
xchg
sub
sarl
xor
dec
sbbb
das
pusha
sub
loop
test
adc
mov
fsubrs
mov
or
icebp
adc
int
int3
xchg
into
call
cmpsb
pushl
mov
nop
inc
xor
roll
cmp
pop
sbb
sbb
movsl
jle
mov
cmp
fstps
popf
and
mov
das
mov
pop
mov
mov
js
fnstsw
in
push
lret
push
imulb
lock
xor
mov
test
push
add
pop
pop
adcl
jecxz
scas
add
push
cmpsl
jl
cmpsl
fsubrs
sbb
cmp
cmp
push
and
test
pusha
push
in
xor
jmp
xlat
and
ds
fistps
xor
push
adc
ljmp
mov
cli
ja
dec
fiadds
vunpckhps
call
repnz
or
xor
vpaddsw
xor
outsl
fstpl
icebp
pop
enter
push
cmp
popa
test
outsb
jg
aaa
cmp
sub
pop
lock
jecxz
push
lret
push
or
or
lods
add
sub
adc
ljmp
dec
or
sub
or
xor
xchg
scas
loop
daa
scas
or
or
and
imul
lea
lock
loope
cmp
shlb
pop
aas
icebp
xlat
cmp
or
sti
scas
sub
scas
xchg
subl
arpl
xor
jnp
jno
cmp
pop
mov
jmp
int
in
and
dec
jae
inc
aam
mov
inc
insl
jno
popa
pop
pop
inc
pop
adc
ja
popf
loope
arpl
ja
scas
bound
mov
sub
add
jno
dec
popf
in
popa
xlat
xchg
add
stc
lock
lods
sub
rep
cmp
ss
rcll
hlt
xchg
dec
mov
xorb
lret
addr16
inc
inc
mov
adc
lods
push
repz
decl
jp
cltd
aad
into
sti
xor
rclb
out
std
stos
xchg
addr16
and
sub
in
and
pop
cmpsl
aas
cmp
pop
pop
cli
cmp
xor
sub
or
mov
mov
frstor
adc
pop
movsb
ss
jnp
adc
jo
in
dec
insb
sub
inc
inc
jmp
notb
imul
ss
mov
sub
or
enter
push
ljmp
cmc
pop
cmp
adc
mov
lret
icebp
xor
lock
aas
into
jbe
xor
jnp
mov
jnp
repnz
outsl
mov
mov
dec
enter
and
leave
inc
or
and
adc
dec
dec
loope
arpl
inc
stos
push
sub
dec
stos
jge
orb
imul
int
mov
push
push
push
push
sbb
daa
daa
and
dec
sbb
add
int
cmp
cmp
pop
aam
dec
in
aam
inc
daa
fists
cmpsb
jmp
adc
in
push
pop
leave
mov
pop
xor
imul
stos
insl
dec
mov
stos
pavgw
sub
sbb
cmc
mov
sub
cmp
mov
ja
bound
test
dec
lcall
ss
addr16
xor
loop
mov
jg
push
cmp
out
pop
sub
or
dec
call
pop
out
data16
mov
jns
aas
mov
push
and
loopnew
stos
lahf
pop
and
lods
mov
push
dec
mov
pop
sub
jo
outsb
aaa
aas
cwtl
sahf
sub
jle
push
nop
scas
inc
adc
in
dec
pop
inc
addr16
sbb
into
outsl
fsubrl
jbe
push
test
call
sbb
icebp
shll
fs
or
inc
jo
outsl
lcall
outsb
jge
out
push
fs
insb
in
test
pop
jp
add
jno
xchg
xor
insl
push
test
enter
push
arpl
paddb
inc
shlb
js
and
sub
pop
js
sahf
gs
fdivl
stos
aaa
cli
hlt
or
cmpsl
push
cmp
pop
lret
cmp
lret
fadd
aam
mov
mov
fimuls
add
loop
jno
xchg
and
idivb
fldenv
fiaddl
cmp
push
test
mov
push
insl
mov
inc
mov
sbbb
shlb
xlat
mov
jae
sub
int3
sub
sub
stos
push
add
jle
pop
js
cmpsl
in
arpl
sub
call
jne
sbb
test
fwait
cmp
xor
jp
cmp
clc
ret
outsb
jnp
test
in
pop
sub
add
dec
cmp
in
cltd
enter
or
dec
push
mov
mov
jbe
int3
or
or
cli
stos
ret
inc
push
push
test
push
sahf
push
xchg
mov
cmp
sbb
ljmp
xor
adc
sub
lret
add
lock
mov
mov
cwtl
pop
leave
loope
lods
lcall
lret
push
lods
std
push
push
inc
adc
shlb
jge
das
ds
jmp
repnz
jl
enter
push
incb
sbb
or
test
enter
xchg
dec
pop
es
push
xchg
mov
jae
sbb
test
adc
cltd
movsl
jl
stc
lods
rcl
pop
jno
js
notl
stos
inc
icebp
mov
cmp
sub
pop
mov
mov
pop
or
push
jns
cmp
push
jb
mov
enter
xchg
sub
push
mov
nop
fwait
js
xchg
and
cmpsb
addl
stos
xor
push
push
orb
and
add
in
push
adc
inc
pop
push
sbb
xchg
xchg
pop
filds
add
push
aas
push
mov
inc
push
or
lods
js
jo
dec
movsb
loop
je
es
popa
sbb
inc
cmpsl
inc
arpl
gs
dec
lods
push
sahf
dec
inc
sub
sub
cmp
sysret
dec
dec
or
repz
outsl
or
mov
jns
push
pop
cmp
or
xchg
or
mov
repnz
sti
push
xchg
lret
add
cmpb
fwait
mov
cmp
jb
sbbl
test
xor
dec
push
adc
xchg
lods
mov
lret
data16
mov
push
sub
xor
mov
js
pusha
rep
imul
push
jnp
bound
jo
lods
xlat
push
pop
xor
movsb
xchg
sbb
sbb
or
push
repnz
xchg
inc
lea
xchg
push
sbb
or
sub
sarl
push
cmp
pop
rclb
fisttpl
push
lcall
test
test
imul
stc
fnstsw
or
sub
pushf
subl
inc
loop
ljmp
add
pop
fsubrl
inc
sbb
add
inc
mov
and
mov
cmc
in
imul
add
dec
roll
call
test
mov
and
mov
lret
mov
push
aam
mov
fidivrs
push
mov
repnz
imul
push
into
or
lds
push
cmpb
mov
test
or
shlb
adc
imul
mov
xchg
push
dec
fcoml
cmpsl
leave
cmp
mov
loopne
test
stos
lret
sahf
or
cwtl
iret
outsl
popf
icebp
pop
add
rcrb
rorl
push
lcall
out
sub
daa
sbb
adc
outsb
mov
jecxz
call
sub
jle
movsb
xor
xchg
icebp
mov
push
xor
and
or
and
lds
sub
movsb
fisubrs
sbb
pusha
test
cwtl
cwtl
shll
cwtl
sbb
xchg
ss
enter
imulb
sbb
dec
ret
mov
insl
arpl
adc
out
insb
sub
push
pop
movsl
push
arpl
cld
jge
adc
sub
repz
mov
push
xor
cwtl
or
enter
adc
xlat
imul
push
pushl
ss
and
mov
mov
fwait
shrb
out
jae
int
cs
inc
mov
mov
mov
aam
xlat
aam
xor
lret
cmp
out
jo
push
imul
fdivrl
incl
xchg
cmp
or
fs
rcrl
push
pop
into
nop
or
jae
inc
pop
mov
add
movsl
pop
fistps
mov
and
jae
nop
sbb
xchg
fstl
push
dec
jle
daa
dec
xor
mov
testl
fwait
aas
aaa
or
mov
insl
jb
les
gs
jno
sti
mov
dec
mov
out
or
lock
xchg
je
add
mov
sti
mov
sub
xor
ljmp
fldcw
aad
icebp
in
push
jnp
push
inc
hlt
push
pop
jns
and
adc
jae
sahf
mov
fnstenv
cld
insl
imul
outsl
lret
jno
iret
xor
mov
leave
add
push
add
xchg
int3
aad
movsl
mov
push
or
sub
mov
imul
dec
sbb
lret
lahf
xor
push
in
sub
push
mov
cmp
xchg
int
rcrb
add
popf
enter
mov
inc
dec
cld
mov
aas
xchg
sbb
lods
xchg
and
push
insb
gs
js
jl
add
xor
cmp
ret
xlat
test
inc
inc
popf
or
and
adc
and
bound
xor
test
pop
adc
clc
popa
mov
in
push
mov
sub
xchg
adc
push
lds
out
dec
adc
jp
int3
popf
into
push
xchg
js
add
adc
inc
dec
sub
dec
popf
add
push
push
nop
mov
divl
in
jae
xor
sub
add
add
dec
inc
jp
mov
or
inc
int
subl
leave
sub
dec
dec
nop
sbb
adc
xor
xor
xchg
mov
sbb
stos
ret
sub
push
or
lret
sub
sbb
inc
out
jo
mov
insl
inc
inc
rcrb
pushf
jp
xor
ss
pop
subl
icebp
aas
stos
into
popf
jae
ret
shlb
dec
dec
xchg
add
mov
mov
cmp
mov
push
or
out
pop
out
out
or
fs
or
inc
push
std
test
bound
mov
pushf
inc
adc
pop
xchg
add
xchg
cmp
pop
lcall
popa
pushf
sub
daa
add
sarl
out
cmp
out
xlat
inc
cmp
push
dec
enter
xchg
adc
int
dec
ret
and
cmp
lret
jo
jge
les
lahf
adc
outsb
push
inc
jo
mov
cmp
in
or
sbb
test
js
pop
push
aas
lods
pop
dec
leave
shl
call
inc
sahf
xor
adc
or
inc
inc
arpl
xor
mov
adc
xchg
arpl
push
xchg
jns
test
daa
scas
scas
or
and
adcl
fisubl
inc
adc
jmp
call
push
test
cmpsb
mov
mov
incb
mov
jno
enter
hlt
jmp
cmp
pop
insb
push
mov
push
sbb
ds
jp
sub
inc
pop
cwtl
lret
jnp
loop
mov
pop
lcall
dec
pushf
loopne
dec
inc
dec
mov
out
paddq
add
incl
bound
mov
add
sbb
mov
outsl
xor
pushf
cmp
es
iret
sub
adc
orb
sbb
and
push
push
sbb
add
mov
aam
and
inc
cmp
fdivrs
repz
xchg
and
adc
fisttpll
mov
mov
mov
mov
pop
adc
cltd
inc
int3
xor
adcb
loopne
push
popf
add
jne
mov
bound
mov
movb
daa
cmpl
adc
pop
xor
repnz
inc
out
push
sbb
imul
sub
add
sahf
scas
das
cli
nop
orl
lcall
addl
fs
adc
push
aad
pop
mov
sub
adc
xchg
or
sbb
mov
pop
mov
das
ds
lods
xchg
lcall
pop
add
push
adc
outsb
pop
mov
lock
lods
and
ljmp
xchg
scas
inc
xor
xchg
cltd
cmpsl
inc
xchg
and
inc
adc
cmp
inc
sbb
ret
mov
dec
lahf
sysret
sbb
xchg
stos
sbb
test
loopne
or
push
xchg
incb
xor
adc
add
int
mov
mov
push
roll
les
xchg
and
and
mov
cmp
dec
std
pop
dec
pop
mov
pop
pop
rcll
enter
xchg
adc
fsubs
and
clc
stos
or
imul
repnz
dec
cmp
fcmovnb
test
and
sbb
inc
inc
repz
jo
std
cmp
and
mov
andb
std
pusha
cmp
ljmp
inc
xlat
ret
ret
mov
mov
sbb
and
pop
cmp
push
lcall
pusha
or
nop
mov
imul
mov
sbb
ljmp
push
xchg
imul
push
aaa
jbe
jp
push
pop
rol
sbb
les
lret
inc
into
fistps
adc
rclb
dec
sti
call
das
jae
jecxz
jg
mov
cmc
cli
cmp
decb
in
std
xor
mov
jl
lods
mov
clc
pop
leave
mov
sbb
ret
adc
rclb
adc
sbbl
dec
mov
sbb
sub
in
mov
jg
mov
pop
sbb
push
out
rcrb
and
add
adc
dec
pop
lahf
in
inc
mov
and
js
cld
fimull
pushf
xchg
test
inc
dec
rorl
xchg
jmp
or
pop
out
or
lahf
or
cmp
push
cmpsl
ja
test
xor
xchg
lea
lret
fmuls
mov
jl
sub
or
clc
imul
push
subl
shrb
xlat
cli
xor
push
rcll
out
bound
mov
mov
pusha
sahf
imul
rolb
sub
add
pop
shrb
push
addr16
jp
xchg
ficoml
mov
push
cmc
mov
pop
imulb
test
inc
vminss
push
daa
shrb
pop
call
mov
in
jp
dec
aad
xchg
das
out
outsl
popa
jnp
mov
pop
or
sbb
cmp
push
loop
je
adc
fidivrs
addb
movsl
pop
sbb
inc
cmp
mov
push
mov
popa
lock
dec
test
adc
jns
pop
mov
adc
xchg
mov
pop
vminpd
lahf
testb
mov
and
jno
push
xchg
cmp
ret
sbb
jne
repz
popf
sbb
lret
icebp
nop
lock
mov
rorl
pop
inc
lret
dec
fldl
gs
adc
mov
pop
xchg
lock
add
jb
ss
fnstcw
add
cmp
lcall
adc
test
testl
jae
prefetcht2
cmp
mov
cmp
pop
in
mov
dec
daa
jne
movsl
mov
pop
push
adc
fistps
inc
outsb
sbbl
in
lods
repz
add
jns
mov
inc
gs
lcall
mov
mov
clc
add
inc
push
xchg
test
lods
fisubl
cs
dec
xor
add
testl
int
pop
testl
test
sbb
inc
lds
push
rol
repnz
xchg
lods
cmp
je
or
out
cs
adc
or
idiv
notb
cmp
jg
sbb
cltd
jnp
addr16
movsb
hlt
push
pop
adc
pushf
rcr
adc
aad
mov
xchg
or
xor
cld
jmp
and
subl
jp
mov
data16
jne
or
movsb
mov
cwtl
mov
mov
out
mov
sbb
nop
inc
sbb
out
xor
fwait
mov
push
fisubl
popf
push
cwtl
lea
and
in
cmp
sarb
insl
inc
ror
fsubs
mov
add
push
outsb
add
or
fcomp
dec
std
popf
xor
leave
test
test
push
ret
sub
xchg
fadds
mov
adc
movsl
hlt
adc
fdivrl
imul
sub
into
ret
mov
xchg
call
jp
popf
pop
push
sbb
ss
aad
adc
pop
js
ljmp
fisubs
inc
pushf
push
pop
enter
aam
add
push
push
scas
lds
cmp
inc
adc
pop
and
stos
add
or
enter
insl
rorb
mov
adc
xor
imulb
or
or
lcall
add
imul
cmp
mov
imulb
fsubp
sub
fcmovb
jge
mov
imul
or
pop
pop
sbb
ss
jmp
push
or
imul
jge
mov
into
mov
xchg
jp
lock
add
push
ds
rcrl
xor
repnz
adc
lret
mov
mov
sbb
shrb
adc
cwtl
mov
add
pop
mov
push
ss
imul
mov
test
std
push
xor
rolb
loop
dec
mov
add
xchg
mov
xor
sti
sbb
and
in
push
into
fsts
mov
into
imul
scas
push
popf
xchg
fwait
mov
and
or
mov
test
ss
or
shlb
dec
rol
fsubrs
mov
add
data16
dec
clc
mov
dec
imul
xor
test
test
push
mov
xchg
mov
ss
xchg
fcoms
dec
pop
movsb
mov
push
imul
adc
mov
imul
inc
scas
test
in
push
into
lds
fiadds
push
or
inc
pushf
data16
or
mov
push
cwtl
leave
xor
ret
test
push
fidivrl
insl
sbb
test
loopne
into
mov
test
cmp
mov
sbb
fdivrp
sub
xor
test
push
xchg
jbe
outsb
push
lods
push
inc
scas
test
stc
ss
fstpl
sbb
cmp
or
imul
dec
aaa
fwait
pusha
dec
adc
aaa
loope
adc
inc
fisttpll
cwtl
pusha
popf
fwait
jl
lock
or
push
cmp
rcrl
mov
lret
sahf
dec
xor
fists
dec
unpcklps
repz
push
mov
push
push
adc
lods
fstl
xchg
pop
sti
or
sub
ret
repnz
fsub
sti
dec
jnp
jp
ret
dec
jbe
call
cli
es
js
pusha
out
mov
jns
ret
mov
jno
call
mov
sbb
sti
cmp
sahf
and
xchg
cmc
inc
jb
stos
sbb
jecxz
ss
icebp
in
aad
fcmovbe
and
call
jp
cmp
cli
inc
dec
stc
sub
hlt
xor
ficompl
cmp
clc
loope
push
push
sahf
inc
sbb
mov
xor
add
sbb
sbb
into
jno
enter
nop
dec
jnp
setl
dec
mov
inc
arpl
repz
pop
fdiv
cld
pop
ret
addr16
sbb
or
ret
outsb
sbb
sti
and
das
sub
cli
popf
sub
jmp
rolb
in
test
arpl
inc
sbb
xchg
arpl
mov
in
negb
lock
stc
inc
cld
fldenv
clc
cmp
xchg
push
test
lret
ja
cmp
rcll
xchg
sub
and
insb
dec
lret
imul
xchg
jno
xchg
lcall
dec
out
mov
out
fisubs
mov
aam
insb
mov
pop
xchg
mov
adc
mov
push
inc
pop
popa
loope
fs
xor
jecxz
daa
test
mov
adc
stos
dec
push
xchg
push
movsb
mov
dec
adc
sbbb
jbe
adc
ficompl
out
and
push
xor
sbb
loopne
lock
dec
inc
inc
leave
jne
xchg
pushf
dec
sbb
mov
xchg
cmp
leave
dec
dec
adc
shr
mov
ss
cs
popa
mov
cmpb
mov
add
cs
pusha
shlb
pop
repnz
addr16
testb
pop
addl
leave
sbbl
shlb
lods
mov
adc
mov
mov
lret
data16
push
sbb
sub
je
adc
or
in
loope
xchg
into
or
mov
xchg
lret
das
mov
mov
sub
lret
mov
xchg
push
pop
cmp
mov
aam
push
xchg
hlt
fidivl
jge
mov
adc
not
mov
fwait
inc
push
jb
inc
push
or
imul
pop
pushf
outsb
aaa
enter
insl
pop
shrb
fmuls
out
or
xchg
scas
push
push
dec
ss
or
imul
xorb
bound
enter
insl
outsb
rclb
call
pop
add
rcrl
repnz
xchg
stos
fcomip
pop
ret
adc
xchg
or
mov
fmull
repz
das
clc
mov
jmp
sbb
mov
cwtl
pop
lods
call
fstl
cs
dec
das
fcmovb
fs
cmp
jmp
gs
pop
sub
pop
adc
sub
test
mov
mov
xchg
insl
xor
cwtl
fdivs
add
xchg
lods
or
addl
add
test
pop
xchg
dec
clc
cmp
push
notb
jle
add
mov
outsb
pop
xor
push
imul
inc
add
mov
cmc
ja
fisttpll
xor
mov
xor
cwtl
sahf
stos
mov
mov
sub
jae
pop
push
sbb
cmp
mov
icebp
icebp
mov
fists
inc
stos
dec
popf
xchg
jecxz
lahf
xchg
xor
xlat
into
stos
mov
sub
sub
mov
loop
pop
rcrl
fldl
sahf
pop
push
aaa
mov
lret
lods
push
call
push
inc
cmp
sbb
mov
push
fdivp
outsb
lods
rclb
dec
and
or
mov
stos
lret
push
add
or
pusha
mov
push
mov
mov
andl
pop
jo
mov
lret
jmp
int
xchg
cmpsl
lods
mov
test
mov
sbb
add
mov
and
jns
and
mov
xchg
pop
mov
pop
lcall
mov
repz
pop
addb
jno
test
sbb
and
divb
inc
lret
lods
arpl
rcrl
xor
mov
sarb
mov
scas
or
or
mov
push
push
bound
lcall
jecxz
lret
leave
call
out
mov
or
mov
pop
dec
mov
jno
push
shrb
cmc
shl
fisttps
inc
mov
sub
jns
nopl
inc
popa
sbb
iret
adc
inc
add
enter
sbb
scas
xor
stc
leave
jno
icebp
mov
shll
ret
shlb
je
fimuls
push
mov
adc
inc
mov
jae
jae
pop
dec
in
imul
add
sahf
cwtl
fadds
pop
scas
cmp
flds
inc
sahf
mov
movsl
sti
je
dec
sub
fs
jb
dec
lcall
jp
mov
loope
dec
lcall
popf
inc
imul
sbb
test
sarl
cmp
js
and
mov
adc
lock
rorl
lahf
repz
jmp
mov
test
shrl
andl
test
bound
out
inc
mov
scas
push
mov
mov
bound
cmc
hlt
mov
jae
inc
ret
mov
push
and
mov
lcall
xchg
mov
in
std
mov
cmc
loope
sbb
in
jle
sub
leave
iret
mov
outsl
lcall
jmp
mov
sub
jo
or
lcall
lds
xor
dec
mov
pushf
lcall
xchg
cmp
dec
adc
push
or
popf
cmp
popa
lcall
or
push
test
add
xor
inc
inc
das
lret
aam
aas
jnp
js
sti
add
lcall
lock
jg
aad
out
icebp
data16
dec
lcall
out
jb
rorl
dec
sub
les
or
call
dec
and
mov
adc
dec
leave
cmp
dec
or
sarl
loop
inc
inc
push
sub
mov
mov
jecxz
dec
clc
stos
testl
out
stos
add
in
cmp
xor
in
pusha
lds
jb
jmp
inc
ljmp
dec
jno
jecxz
jb
ljmp
arpl
push
add
push
add
loope
add
push
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loop
add
add
add
add
or
push
add
loopne
add
loopne
add
loope
add
push
add
loopne
add
loope
add
push
add
add
push
add
push
add
add
push
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
jb
fs
insb
add
xor
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
add
or
daa
repz
or
in
add
push
fildll
push
add
xchg
call
adc
xchg
sbb
repnz
cmc
and
dec
xor
cwtl
cmp
sbb
test
adc
jecxz
imul
dec
or
es
addr16
cmp
or
or
jp
or
fwait
or
pushf
or
lahf
or
or
or
adc
inc
stos
and
push
or
fs
or
mov
push
add
push
mov
xorb
add
int3
push
pop
or
mov
sbbb
adc
and
xor
andl
pop
dec
enter
lea
add
clc
sbb
ret
push
push
sub
and
orb
cmpsb
adc
add
dec
add
add
add
shl
outsl
sub
xchg
jb
push
loopne
inc
adc
mov
hlt
mov
and
fadds
mov
lods
and
dec
jno
or
jb
cmp
adc
adc
dec
leave
xchg
in
sub
pop
ds
jae
or
adc
andb
addb
fildll
add
mov
std
or
xchg
movsl
dec
push
out
xchg
xor
add
add
adc
outsl
adc
je
out
scas
sbb
mov
cld
add
mov
mov
in
mov
jnp
pop
mov
sbb
and
add
imul
rorl
pop
and
mov
imulb
loop
mov
fdiv
sub
push
add
push
add
imul
add
xchg
push
fs
inc
mov
inc
mov
push
push
cmpsb
and
dec
iret
mov
mov
pusha
add
jmp
pop
add
add
aad
mov
bound
sub
incb
rorb
rorb
inc
roll
bound
add
and
mov
mov
add
fnstsw
sahf
mov
rcll
push
adc
add
ds
call
fwait
int
or
test
mov
and
cmp
inc
aaa
push
or
mov
push
or
push
mov
mov
and
ss
stc
xchg
mov
jg
sub
add
roll
cwtl
inc
mov
add
cmp
jmp
sbb
or
orw
mov
sub
outsb
lods
sbb
scas
or
mov
sbb
ds
enter
dec
hlt
je
test
xor
and
into
andl
jno
mov
dec
pop
imul
lcall
add
call
or
sub
imul
adc
outsl
fiadds
pop
add
xor
mov
jo
fwait
insl
add
bound
int3
mov
ljmp
add
subl
push
pop
mov
movsb
movsb
aam
adc
pop
dec
dec
ds
leave
inc
add
sbb
cmp
or
add
inc
fidivs
push
or
fdivr
loopne
gs
loop
fs
pop
and
mov
lret
sub
fdivr
add
mov
xchg
fiadds
fstps
sbbb
adc
mov
test
subl
dec
or
jmp
push
adc
rolb
push
jae
add
pushf
sbb
mov
fistpll
mov
adcb
adcb
or
jno
jb
lods
orb
and
sbb
sbbl
add
add
daa
lock
mov
push
psubsb
inc
les
xor
shl
mov
lds
cwtl
xor
push
das
mov
sbb
push
leave
jno
mov
test
dec
adc
push
or
add
add
xchg
adc
bswap
or
ret
jno
jle
pusha
imul
dec
cmpsb
gs
lret
pop
int3
outsb
and
push
fs
or
or
adc
nop
iret
push
mov
push
cwtl
andl
pop
and
pop
pop
roll
fs
or
mov
push
and
add
mov
dec
dec
adc
icebp
pop
add
and
add
inc
jae
pop
adc
mov
inc
jo
mov
mov
test
ds
out
push
adc
addr16
aas
cwtl
gs
aad
lds
aam
cmovg
testb
xor
pop
jno
sbb
mov
stc
push
add
cmpsb
ja
rcrl
pop
pusha
push
dec
push
xchg
add
cs
gs
or
jne
add
mov
nop
sub
adcb
ret
dec
popa
add
mov
stos
xchg
cmp
add
bnd
jle
sub
inc
sbb
popa
scas
leave
jno
xor
and
sti
shlb
mov
cmpl
cmovne
mov
in
fs
mov
insb
je
movsb
jne
inc
jmp
sbb
sub
add
adc
popa
adc
fiaddl
cmpsb
pop
jl
cmc
jno
mov
jo
xchg
adc
or
stos
or
push
pop
jb
xorb
subl
xor
add
cwtl
adc
jno
pop
cli
cmc
xor
push
inc
nop
adc
inc
jne
insl
xor
push
hlt
data16
loope
xchg
lods
sti
sbb
inc
push
xchg
jp
push
jle
add
sub
pusha
std
push
int
add
xchg
add
add
or
jp
pop
ja
jmp
les
push
xchg
mov
mov
inc
jnp
cmp
add
xchg
lahf
fldenv
vpmulhrsw
test
xor
rcrb
mov
fsubl
xor
mov
es
cmp
scas
scas
add
push
fbld
push
mov
mov
inc
mov
push
sbb
add
xchg
mov
dec
jge
stos
lret
out
mov
mov
pop
les
pushf
test
es
xchg
in
loopne
cmpsb
inc
les
sub
mov
sbb
push
lret
pop
add
and
jbe
xchg
xor
mov
scas
mov
jns
cmpb
sti
add
push
les
sub
es
mov
arpl
in
and
int
cmpsb
arpl
int3
stc
lret
or
xor
scas
repnz
pop
ds
xchg
cmpsb
lock
lret
pusha
push
add
movsl
scas
inc
adc
add
push
push
outsl
hlt
sub
push
sub
xchg
roll
adc
test
sbb
jmp
fmull
xchg
jns
imul
sub
push
repz
cmpsb
add
pushf
std
lds
icebp
out
popf
dec
ret
hlt
sbb
sbb
lods
xor
push
cmc
lea
and
cmp
movsl
sahf
inc
and
or
daa
and
jno
enter
push
and
mov
cmp
cmp
icebp
sub
add
insb
cmp
fwait
dec
or
adc
fnsave
das
push
dec
adc
push
jg
dec
mov
fidivs
or
dec
and
jmp
dec
pop
add
mov
popf
pop
cmpl
sub
mov
inc
jg
and
aam
mov
mov
xorb
imul
push
lock
pop
test
mov
call
pop
cs
out
xor
loopne
pop
fwait
push
add
or
sbb
addb
jg
mov
jb
cmpb
scas
aaa
push
clc
jnp
cmp
pusha
ret
pop
adc
js
or
fiadds
sti
add
adc
xor
jne
mov
gs
sbbb
push
roll
fwait
xor
sbb
es
test
jecxz
jmp
or
cs
or
mov
lahf
mov
cli
leave
add
add
aam
adc
inc
fadd
sbb
mov
cwtl
and
std
sub
loop
add
imul
call
imul
ret
enter
adc
dec
enter
xchg
add
mov
sub
sbb
lret
icebp
and
roll
movsb
int3
pop
add
outsb
shlb
xor
ret
stc
or
cld
add
push
mov
add
mov
jmp
ret
xor
cmp
push
mov
xchg
mov
dec
dec
push
add
insb
push
add
xchg
subw
adc
enter
and
add
xchg
iret
mov
popf
loope
mov
sub
enter
inc
sbb
sarl
add
ret
adc
in
sti
pop
out
and
inc
pop
int
je
pusha
mov
add
sub
out
mov
sub
or
clc
js
cmp
jp
jb
xor
adcb
sub
repz
ss
xchg
les
sahf
sti
inc
or
xor
cltd
jb
add
or
nop
or
incb
or
push
into
outsl
int3
jo
or
cli
and
adc
rorl
pop
inc
inc
div
mov
jmp
push
jg
add
dec
sub
js
ror
pop
sahf
xchg
jge
cmpb
scas
mov
inc
mov
js
or
cs
pop
add
push
aam
mov
hlt
arpl
enter
xorl
jmp
sub
inc
out
jae
mov
cmp
nop
jg
xor
mov
dec
add
jae
xchg
idivl
push
push
adc
push
inc
push
and
add
and
sub
aaa
shlb
xor
cli
or
cmp
adc
sbb
mov
mov
or
inc
aaa
cld
xchg
jmp
and
dec
or
aad
dec
testb
pop
jp
inc
sub
out
add
pop
enter
add
push
sbb
jmp
mov
movsl
inc
dec
ljmp
add
add
dec
xchg
jbe
sbb
push
adcl
and
inc
gs
push
clc
mov
test
adc
sbb
push
test
pop
pop
sub
mov
loop
push
lods
push
inc
adc
fisubl
inc
push
mov
push
mov
and
insb
push
inc
or
sub
or
adc
insb
cmp
cmpsb
and
xchg
add
adc
push
and
dec
push
stos
insb
sbb
test
cs
sub
dec
push
xchg
int3
and
lret
mov
mov
mov
push
loop
data16
inc
sub
sbb
jmp
inc
ds
rclb
add
aas
push
fcoms
and
xchg
ret
inc
jno
inc
dec
xchg
cmpsb
mov
jp
or
in
dec
test
pop
lds
and
push
fisubs
sub
xchg
cld
mov
mov
fwait
mov
pusha
insl
lret
push
mov
rorb
cli
xchg
sub
dec
sub
add
rolb
add
sbb
std
into
out
or
out
adcl
cmp
call
mov
loope
cmpsb
or
call
xor
pusha
push
daa
neg
xor
loop
shlb
cmp
addb
inc
mov
addl
jge
in
push
cmp
add
ds
ret
fmull
jmp
add
mov
loopne
dec
into
mov
in
call
mov
testb
adc
neg
xchg
lods
seto
call
lahf
pop
sub
aas
or
or
shr
add
sbb
cli
push
dec
fbld
lahf
setb
mov
jl
push
jmp
es
cwtl
mov
icebp
push
pop
pop
mov
jmp
lock
adc
adc
push
xor
out
mov
out
adc
add
lret
ret
fwait
addr16
call
mov
test
and
pusha
or
lret
inc
mov
push
insl
mov
sub
ret
push
add
pop
faddp
jb
pop
add
sbb
push
add
inc
push
pop
pop
not
add
call
add
stos
std
std
add
adc
add
xchg
pop
mov
shr
cmpsb
mov
add
testl
and
adcb
fwait
xor
rolb
sub
lcall
gs
pop
dec
ljmp
sti
xchg
inc
inc
add
cmpsb
mov
sub
jecxz
pop
pop
fldl
cltd
sub
fistpl
int
arpl
movsl
int3
xchg
lds
xchg
insl
add
lds
xor
sbb
fcomi
push
pop
andl
std
xor
xchg
or
fisubl
pop
add
icebp
mov
ja
jne
or
jmp
cmpsb
in
add
mov
mov
stos
mov
and
add
push
push
pop
lods
lds
xor
sbb
mov
push
or
pop
loopne
mov
mov
repnz
int
insb
push
mov
xor
fistps
mov
push
adc
sub
addr16
jmp
jle
inc
push
and
mov
mov
add
and
add
inc
push
mov
ljmp
sub
out
ds
jae
jle
add
dec
jb
aam
add
loop
test
push
push
mov
insl
xchg
xor
dec
xchg
inc
add
inc
sbbl
in
cmp
adc
adc
xchg
ret
cwtl
lret
jno
add
dec
inc
test
add
lcall
sub
shl
xchg
xchg
subb
stos
dec
out
invd
mov
call
in
push
pop
adc
cmp
mov
dec
jne
out
popf
mov
orb
lock
mov
cmp
fucomip
or
add
jecxz
pop
pop
popa
out
and
retw
push
enter
leave
jmp
sbb
inc
pusha
sub
xor
and
call
lcall
jmp
rorl
popa
addr16
icebp
inc
add
jecxz
dec
adc
dec
mov
mov
jns
inc
pop
popa
add
loope
ds
aam
out
rcll
mov
ret
and
rolb
push
or
inc
or
jbe
pop
pusha
mov
mov
xor
dec
push
pop
fmuls
pop
pop
adc
andl
cmpsb
int3
add
push
pop
pop
movzwl
cmpsb
movsb
jge
sbb
icebp
lahf
xor
orl
cld
pusha
sub
jmp
and
shr
hlt
inc
fs
jb
jns
cmpsb
cli
sbb
mov
dec
neg
add
cmpsb
mov
int
push
ret
repz
push
mov
out
test
add
cmp
dec
testb
rorl
dec
mov
add
xchg
sqrtps
test
insl
rol
pop
xchg
lret
mov
cs
fcmovbe
rcrl
iret
push
jbe
xchg
dec
stos
ja
and
mov
mov
ds
call
cmp
pop
dec
leave
cmp
outsb
cld
insl
fs
pop
dec
or
xchg
pop
push
mov
mov
xlat
int
insb
test
mov
in
dec
adc
inc
ret
ficompl
cmp
sti
or
stc
dec
cmp
fistpl
mov
push
cmp
inc
outsl
std
cmpsl
aad
or
enter
xchg
sbbb
xchg
out
ds
pop
jge
or
in
leave
aas
jne
mov
rcr
jl
push
dec
js
sub
lahf
push
xchg
pushf
mov
sahf
jl
lcall
test
mov
xchg
mov
sub
cmp
jecxz
lock
add
lahf
jno
mov
xor
push
lea
cli
das
jg
js
ja
movsl
xchg
sbb
ja
movl
inc
test
movsl
lods
rcr
pop
cmpsl
xlat
sbb
movsb
xchg
cmp
mov
lods
mov
pop
fmul
or
movsb
aad
push
cmpsb
xlat
call
push
ja
jno
into
xchg
les
iret
add
data16
pop
cmp
mov
sub
aam
jnp
lds
sti
dec
dec
fs
inc
pop
out
lea
and
shll
out
stos
jl
inc
fwait
xchg
and
out
sti
add
cmc
out
dec
push
inc
mov
gs
pop
fwait
xchg
lods
stos
lock
inc
lea
or
adc
arpl
cmp
imul
mov
add
inc
pushf
push
sub
pop
add
fwait
dec
push
jmp
jp
sti
pop
test
dec
ljmp
cmp
movsl
fucom
inc
xchg
mov
add
push
in
aam
adc
lahf
in
push
pop
mov
inc
sub
ljmp
js
adc
push
pop
inc
or
sub
mov
push
out
cmp
enter
push
loop
cmp
imul
sbb
add
outsl
aad
push
jne
lahf
std
popa
daa
lds
clc
dec
icebp
cld
sub
or
stc
sbbl
dec
cmp
movsl
add
daa
pushf
push
push
ret
lods
stos
repnz
add
cli
and
pop
add
outsb
arpl
out
sub
sbb
adc
add
inc
in
notb
xchg
add
pop
xor
aaa
in
sub
hlt
scas
sbb
test
sbb
mov
movsb
sub
cmp
out
push
push
mov
push
incl
add
push
xchg
addr16
xor
jne
fmull
movsb
leave
jae
adc
je
popa
mov
xchg
dec
aas
int
fcmovnb
mov
cltd
dec
dec
sbb
push
pop
data16
xchg
sub
jne
pop
lcall
aas
ficoms
shll
pop
cmpb
mov
mov
insl
mov
jmp
test
pop
hlt
ficoml
add
stos
cltd
jp
xchg
lea
pop
cmp
pusha
mov
das
mov
or
xchg
jnp
fstpl
jp
cmp
or
jbe
mov
pop
inc
ljmp
mov
int
push
mov
lcall
mov
push
add
mov
or
mov
sub
arpl
pop
es
lret
xchg
int3
and
cmp
and
arpl
push
xor
push
sub
sbbl
scas
cmp
pop
dec
jge
dec
movsb
xor
mov
push
test
dec
and
xchg
cmovbe
fstps
pop
fsubrp
dec
stc
addr16
lret
ja
and
inc
adcl
cltd
insb
clc
pop
jae
or
mov
ja
aam
fs
in
and
adc
sbb
scas
aaa
pop
repz
xor
clc
mov
adc
fs
repz
mov
or
push
xchg
sub
ret
data16
stos
jecxz
push
ret
int
fnstsw
lods
dec
je
fisttpll
cmp
xchg
xchg
and
xchg
pop
fisubrl
out
or
dec
movsl
js
arpl
and
ljmp
mov
and
imul
cli
lret
mov
and
fidivrs
pusha
out
out
sub
xchg
dec
mov
test
pop
push
sbb
shrb
jge
inc
and
jecxz
in
sar
arpl
and
dec
jge
mov
shrl
adc
push
mov
add
jae
lock
or
xchg
lods
or
in
dec
mov
sub
pusha
hlt
inc
pop
pop
or
mov
sub
rcl
ss
sarb
mov
repz
mov
jecxz
rcll
fiaddl
cmp
mov
mov
pop
sbb
mov
frstor
icebp
jbe
sbb
loop
push
dec
push
test
mov
mov
jne
cmp
push
repnz
je
pop
stc
and
addr16
mov
pusha
inc
popf
sbb
enter
or
jmp
das
cmpsl
lcall
sbb
pop
aad
ljmp
xchg
mov
or
add
rcrl
xchg
jg
or
stos
pushf
or
pop
data16
mov
int3
sbb
push
lahf
adc
jp
hlt
repz
outsb
jl
int
aaa
dec
mov
dec
sahf
aaa
ja
call
pop
in
mov
rorb
sub
fsts
subl
jmp
or
ret
cld
jne
dec
push
push
rorb
inc
outsb
int3
xchg
xlat
ret
outsl
push
pop
pop
jg
insb
push
cmp
push
xlat
pop
lods
sbb
ja
int3
icebp
inc
loope
mov
dec
scas
shll
xlat
outsl
push
xor
cmpsl
jp
decl
scas
or
outsb
sub
mov
or
cmp
dec
xchg
mov
push
out
adc
inc
pop
jno
jecxz
sbbl
sbb
push
dec
jl
faddl
push
ljmp
in
dec
jno
xchg
outsl
jle
es
sbb
jge
sbb
inc
or
hlt
pop
dec
lret
mov
dec
bound
fcompl
lea
and
inc
dec
in
pop
mov
push
push
cmpsb
jge
int
mov
cmp
adc
popfw
mov
dec
icebp
sbb
sbb
jmp
out
jnp
adc
adc
push
ror
in
gs
scas
jnp
xor
jno
ret
push
sbb
mov
aas
addr16
repnz
xchg
mov
scas
aad
cmp
push
inc
mov
pop
adc
pop
int
loopne
push
push
out
lock
push
leave
aam
push
and
mov
push
adc
ljmp
mov
mov
xchg
sahf
jl
adc
stos
push
out
mov
frstpm(287
cs
sub
dec
pop
sbb
rclb
push
cld
dec
jg
or
ret
cmp
xchg
sbb
jno
push
inc
lret
or
rorl
into
daa
pop
nop
aad
out
cmp
stos
or
push
cld
aas
leave
aad
test
les
mov
cli
push
enter
mov
cltd
xor
add
fmull
imul
adc
out
fwait
lea
dec
add
mov
and
lahf
and
rcrb
jge
pop
pop
aas
rorl
mov
cmp
xor
rclb
inc
jge
cmp
push
in
dec
adc
push
xor
jno
sub
pop
fistl
push
daa
mov
mov
cli
pop
aaa
inc
sbb
sub
lcall
loopne
pop
push
push
dec
dec
addl
xchg
psraw
in
add
adc
adc
les
and
jns
ret
lret
faddl
dec
aam
push
mov
fcompl
test
ret
imul
jns
cld
inc
movsb
sbb
xchg
push
rcr
push
push
lahf
push
xlat
outsb
push
and
enter
mov
fisttps
outsb
or
mov
je
push
stc
jle
daa
cltd
xor
push
repnz
in
sub
test
je
jge
imul
jmp
test
pop
dec
in
pop
outsb
arpl
fdiv
idiv
or
shr
cmp
cmp
sbb
neg
mov
push
cld
dec
mov
repnz
mov
add
cmpb
dec
inc
xor
mov
xchg
mov
cmp
cwtl
ds
push
cmc
popf
cmpsb
fsubl
pop
or
lret
aam
push
xor
faddl
movsl
pop
dec
xor
pop
ljmp
jnp
insb
cmpsl
inc
aam
pop
sub
fisttpll
jmp
lea
pushf
sub
fcompl
xchg
dec
jno
ret
popa
fistl
insl
flds
mov
xchg
mov
or
out
shll
xchg
sbb
mov
and
pop
shr
sbb
dec
flds
mov
lds
push
bound
xchg
inc
vunpcklps
push
in
push
add
scas
pop
hlt
mov
xchg
std
jle
cmp
cltd
outsb
scas
xchg
jg
lret
cmp
inc
stos
xchg
adc
lods
pusha
pop
mov
pop
movsb
jnp
inc
rcr
cmpsb
xor
and
aas
cmp
int
pusha
lods
push
clc
addr16
cmpsl
mov
push
xor
mov
imulb
pop
fsubrp
add
or
xchg
xor
fabs
ret
out
pop
mov
pop
jmp
mov
ret
stos
jns
sbb
jae
in
fs
movsb
pop
loopne
dec
stos
xor
xchg
std
imul
iret
in
leave
mov
push
in
popf
lea
mulb
jge
pop
fwait
push
lret
inc
mov
cld
test
addr16
sbb
aad
inc
pop
xor
je
cwtl
mov
mov
je
dec
outsl
xchg
push
in
cmp
out
rorb
pop
cltd
int
pop
cltd
add
data16
cmp
xchg
test
xchg
shrb
cld
rclb
pop
sbb
and
push
fistpl
hlt
mov
sub
cmp
mov
pop
mov
fs
adc
aam
icebp
pop
int
push
or
mov
sbb
xchg
mov
cmpl
xorl
outsl
and
or
lods
push
jecxz
mov
cmc
push
xchg
in
repnz
and
cltd
dec
jge
dec
andl
inc
stc
sbb
inc
dec
lahf
adc
pop
sbb
mov
mov
ljmp
cwtl
subb
outsb
outsl
rol
repnz
sahf
rorl
in
out
loope
loop
enter
loope
in
add
inc
xor
mov
mov
pop
daa
jp
mov
popf
lods
aad
pop
mov
outsb
inc
dec
addb
dec
ljmp
mov
push
push
les
in
cmp
push
shl
rcl
xlat
fisttpl
leave
pop
jbe
cmc
cmp
lahf
aad
jo
adcb
push
fsubr
divb
inc
subb
jae
ljmp
pop
jo
iret
fisttpll
push
cmp
stos
pushf
xchg
test
xor
and
inc
nop
and
jge
cli
cmp
add
push
inc
fucomip
iret
dec
fnstsw
loopnew
cwtl
cmpsb
and
sbb
inc
or
and
dec
popf
sub
fcmovnbe
hlt
scas
lods
repz
or
test
fnstsw
dec
push
jmp
mov
add
pop
adc
cwtl
pop
jl
push
mov
pop
jle
fadd
xchg
add
arpl
mov
andl
jno
test
and
dec
lds
inc
cwtl
cwtl
inc
dec
dec
or
inc
push
out
fdivrl
dec
xor
and
add
aaa
jae
fadds
cld
jg
mov
and
daa
jnp
sbb
int3
cmp
dec
loopne
test
push
or
test
loop
push
call
push
addr16
mov
sbb
xor
sub
or
ljmp
pop
pop
xchg
cmp
inc
push
pusha
mov
movsl
push
repnz
push
push
mov
mov
push
cmp
pop
or
in
mov
insl
jle
mov
stc
mov
mov
fistpl
mov
mov
ja
jge
push
mov
cmpsb
lret
xlat
push
frstor
adc
dec
push
loopne
daa
in
inc
push
xlat
repz
loopne
es
or
rcll
mov
xchg
out
mov
testb
inc
lret
jb
add
ja
jae
sub
aad
sub
push
sarb
sub
loopne
add
shlb
jae
push
ljmp
sbb
stos
divb
fisubs
outsl
adc
push
xchg
xchg
sbb
pop
insl
inc
mov
push
clc
ret
fs
movsb
jbe
fistl
bswap
roll
xor
xchg
pushf
sbb
dec
ljmp
pop
imul
and
mov
lret
les
insl
push
xor
and
mov
dec
dec
dec
pop
ret
push
das
sub
add
pop
fdivrs
frstor
outsb
cmp
push
fidivl
pop
dec
shll
aaa
test
pop
int3
and
stos
xchg
sarl
imul
mov
lahf
inc
jge
push
jle
sbb
hlt
push
fcmove
mov
test
sub
pushf
inc
andl
ficompl
mov
lahf
mov
push
xor
or
push
rcrl
sub
cltd
or
sbb
sahf
mov
test
fistpll
hlt
jnp
sahf
dec
ret
mov
pop
or
dec
pop
in
mov
les
sub
cmp
xchg
out
pop
subl
enter
shr
sub
cmp
add
inc
daa
rorl
sar
out
dec
sahf
mov
mov
jg
rclb
inc
sub
mov
push
dec
pop
lret
cmp
jmp
dec
pop
add
xchg
outsl
and
xchg
popf
mov
xor
adc
sub
push
inc
into
mov
cmp
out
jle
mov
rcrl
imul
add
pop
call
pop
std
outsb
jne
scas
popf
call
and
out
mov
pop
dec
popf
pushf
ret
fucomip
stos
adcb
push
fs
cmp
pop
loopne
dec
mov
mov
pushf
les
call
dec
clc
scas
fstps
mov
in
inc
cld
pop
ds
in
sbb
std
fbstp
stos
mov
mov
into
add
loop
pop
movsl
pop
or
sbb
xchg
fimull
xchg
adc
push
push
lret
imul
push
out
push
sbb
lahf
pushf
data16
jmp
jnp
dec
dec
decl
fimuls
jno
jno
fidivs
lret
push
inc
out
add
js
shl
xlat
dec
int3
ljmp
mov
clc
rcll
stos
dec
xor
in
aam
outsb
rorb
push
mov
adc
jecxz
hlt
jle
mov
adc
imul
inc
popa
loope
arpl
cmp
dec
and
mov
jp
insl
adc
pop
and
or
fnstenv
rcrb
xchg
jb
sbb
enter
mov
mov
iret
rclb
cmc
push
dec
and
js
sbb
lret
xchg
shll
decl
enter
outsl
andb
lret
inc
movsb
pop
cmp
jge
xchg
and
cmp
jp
inc
jle
lcall
add
insb
dec
repnz
hlt
fcmovbe
and
ss
mov
rcrb
inc
addr16
ret
shrl
inc
outsb
dec
ffreep
lea
icebp
int3
data16
mov
xchg
push
aad
mov
mov
sub
sahf
sbb
stc
movsl
pop
xor
insl
pop
sub
leave
dec
fidivs
mov
or
adc
jle
aaa
pop
mov
pop
push
cmc
iretw
mov
insl
inc
lods
or
and
and
std
imul
negb
scas
pop
push
iret
js
inc
mov
dec
fidivrl
mov
xchg
and
mulb
jge
outsb
test
add
aas
loop
pop
add
dec
push
fwait
cli
in
mov
nop
cmpsb
lock
mov
mov
aaa
lods
dec
enter
push
adc
pop
dec
pop
jg
pop
int
or
ljmp
mov
push
sbb
cs
das
jmp
dec
stos
pushf
mov
scas
leave
into
fcoml
xlat
pushf
push
dec
push
xor
xchg
xchg
ret
cld
ljmp
js
iret
stc
cmp
popa
lret
pop
mov
cmp
pop
arpl
xchg
jnp
fwait
cld
fdivrs
mov
outsl
ljmp
into
mov
push
punpcklwd
ja
sub
push
daa
insb
push
out
movsl
std
adc
mov
mov
ja
ficoms
lcall
fldl
sbb
es
mov
ds
popf
sbb
mov
mov
sbb
fwait
das
and
fwait
scas
sub
andb
dec
mov
push
stc
xchg
sbb
add
xchg
jecxz
mov
ljmp
push
dec
fdivl
je
gs
loop
rcrb
ret
push
out
and
fimuls
ljmp
leave
mov
sarl
or
or
das
cmp
push
xchg
xchg
or
test
pop
and
lahf
cmp
xor
cmp
xor
push
mov
outsb
das
dec
push
or
pusha
insl
ss
test
sbb
ljmp
pop
push
ror
and
pop
sti
pop
dec
int
push
sbb
insl
mov
scas
es
mov
adc
pop
sub
lret
cmp
loope
lahf
cmpsb
hlt
mov
lahf
insl
and
jle
pop
inc
cli
push
or
cmp
pop
push
dec
fucomi
movsb
mov
aam
cmp
adc
push
out
test
mov
xchg
pop
test
xchg
xor
push
push
mov
xchg
test
incb
push
negb
cmp
xchg
pusha
xchg
je
lds
ja
adc
push
xor
xchg
mov
or
daa
cmp
int3
mov
push
out
or
iret
into
ss
adc
rcrl
lcall
mov
outsl
mov
xchg
ret
sub
fmuls
call
inc
mov
rorl
test
dec
movsl
ja
mov
test
xchg
fnsave
jmp
xlat
mov
lock
sub
dec
jge
scas
inc
mov
fisubrl
mov
popa
mov
mov
aas
mov
pop
cmp
pop
jnp
iret
iret
aam
xlat
dec
data16
lahf
arpl
mov
mov
xor
cmc
cmp
je
cmpsb
or
cmp
push
cmp
jge
xor
or
or
jl
mov
cmp
sub
xor
dec
test
adc
push
pop
jge
jmp
xchg
nop
fistpll
loop
dec
or
xchg
daa
push
push
xchg
push
adc
mov
adc
notb
jl
daa
pop
int3
mov
jnp
fistpll
test
in
inc
sbbl
mov
jge
stos
nop
mov
jl
and
bound
hlt
lret
ret
fs
addr16
fimuls
scas
out
mov
popf
flds
aam
je
inc
push
inc
or
enter
xlat
add
pushf
out
or
mov
mov
data16
xchg
jp
cmp
xchg
insl
out
xchg
xor
icebp
dec
dec
loopne
push
sub
es
push
ja
mov
lahf
outsl
scas
mov
mov
cmp
insb
ret
or
lds
xor
inc
add
aas
test
outsb
cld
dec
out
mov
pusha
out
in
outsl
ljmp
or
ret
push
lea
mov
push
xchg
jbe
add
sbb
mov
cwtl
imul
out
push
jns
push
dec
jnp
fisubs
pop
push
push
shr
add
sbb
ret
mulb
mov
bound
mov
movsl
sbb
pop
mov
jne
sub
push
inc
andl
push
ret
inc
or
jg
push
js
push
movsl
xchg
cmp
xor
pop
loopne
outsl
push
test
addr16
inc
ret
jne
nop
fcompl
sub
inc
xchg
push
lock
jae
push
mov
pop
addb
sbb
sub
int3
mov
les
test
fmull
xchg
xchg
mov
push
push
cmp
sub
jne
or
stos
fistps
xchg
pop
sbb
inc
xchg
mov
mov
sbb
std
addr16
xlat
or
lret
push
movsb
lods
sub
jecxz
pop
pop
cmp
cmp
out
fadd
pop
dec
cli
add
jp
sbb
cmp
pop
fildl
aas
inc
scas
pop
inc
iret
adc
adc
jp
mull
mov
mov
sar
dec
xchg
sbb
out
pop
sub
mov
enter
xor
mov
sbb
mov
shlb
or
lods
lea
icebp
rorb
je
fstl
in
subl
jmp
xchg
mov
push
ret
pop
testl
inc
adc
not
scas
popf
sub
dec
in
aaa
idiv
imul
cmp
dec
lret
lret
bound
icebp
push
sahf
jge
mov
or
push
shrl
dec
in
or
rolb
out
int3
pop
stc
pop
cmp
ret
sbb
pop
std
jne
shll
or
loopne
outsb
mov
ror
aam
imulb
rcll
dec
sub
push
jno
ret
mov
dec
insl
pop
sub
xchg
in
cmpsl
out
or
arpl
mov
xchg
ret
mov
lcall
xor
out
addr16
push
push
fwait
fs
imul
into
xchg
cmp
sahf
or
add
inc
xor
insl
mov
pop
scas
pop
repz
in
sub
mov
daa
mov
cltd
popa
cltd
mov
mov
push
shl
lock
adcl
push
xchg
mov
xchg
mov
and
dec
jmp
pop
xlat
jge
out
jno
cmp
dec
addr16
insl
ja
adc
push
fdivrs
aaa
push
fidivrs
movsb
neg
dec
xor
or
cmp
pop
push
nop
inc
pop
mov
rcrl
inc
clc
ret
xchg
xchg
or
sahf
lahf
push
xchg
jg
test
into
pop
movsb
mov
jge
hlt
jg
mov
ficomps
out
out
push
addr16
in
enter
adc
mov
inc
lods
mov
jb
aaa
adc
scas
xor
mov
jp
cli
aaa
xor
divb
xchg
push
aaa
mov
push
xchg
loope
adc
or
dec
dec
outsl
adc
mov
js
pop
mov
ds
mov
xchg
imul
sahf
out
repz
imul
das
mov
repz
in
pop
pushf
lret
lds
jbe
mov
sbb
sbb
popa
or
cmp
outsb
sbb
loope
jmp
adc
pushf
pop
push
hlt
idivl
cmp
push
jae
aam
jne
fldt
ss
sti
sub
es
inc
sarb
jne
push
andl
mov
pop
repz
push
xchg
jns
xor
outsl
lahf
fs
xchg
jge
mov
sbb
adc
sub
pop
push
or
stos
jbe
hlt
andl
sub
lea
adc
push
pop
or
mov
adc
test
jne
sbb
ljmp
xlat
and
lret
xorps
aaa
push
repnz
xor
add
shll
pusha
pop
outsl
adc
mov
in
push
jmp
in
and
xchg
pop
pop
roll
cs
mov
out
mov
mov
mov
push
push
mov
cltd
cltd
or
ss
mov
cli
mov
push
stos
and
dec
inc
or
mov
cmp
add
sub
outsl
and
out
pop
add
outsl
stos
stos
int
std
leave
push
movsb
jns
sub
cmp
mov
pop
in
loopne
jle
in
lds
jle
test
jb
push
imul
push
out
rcl
and
sarl
jbe
aas
xchg
insl
and
jb
mov
xchg
or
rol
std
fcomps
outsl
loop
push
xorb
pop
int
fs
pop
jne
ljmp
and
pop
inc
pop
sbb
add
cmp
pop
push
xlat
push
divb
iret
in
and
or
cmpsb
add
xchg
pop
push
scas
push
aad
loop
xor
pusha
xchg
inc
leave
push
in
push
inc
aam
fstps
cmpsw
pop
inc
mov
aad
aam
loop
dec
dec
pop
fs
popf
sbb
lahf
push
or
xlat
or
mov
aad
lret
in
xlat
lret
cmp
shll
sbb
pop
sub
int3
sbb
lds
aam
mov
cli
xchg
xchg
lods
pop
cmp
rolb
not
rcl
dec
andb
sbb
cld
bound
addl
mov
test
mov
ret
aaa
push
xchg
les
dec
scas
jg
out
add
dec
mov
hlt
test
push
subl
loopne
push
xor
xor
notl
inc
sbb
xlat
jnp
lret
sub
into
xchg
pop
pop
test
and
fcoms
mov
lret
pop
adc
xor
lret
xchg
cltd
das
ret
mov
and
int3
js
cmp
ds
pop
and
jbe
mov
jmp
addl
jns
fmuls
push
pop
and
test
mov
out
sub
or
outsl
inc
fstps
mov
in
incb
int
outsb
sarl
jns
sub
xchg
adc
mov
mov
mov
ljmp
lods
aas
jns
ret
sahf
orb
pop
xor
aaa
sbb
cld
inc
push
pop
mov
ja
push
sub
sub
stos
in
xchg
sbb
push
mov
fmull
inc
call
enter
stos
lahf
jge
inc
test
lods
inc
pop
add
inc
xor
jns
stos
aam
mov
fldl
add
jge
push
into
xchg
xchg
fisubrs
lea
inc
xchg
mov
xchg
lret
out
and
ds
xchg
cwtl
mov
inc
pop
frstor
dec
xlat
cwtl
and
jle,pt
bswap
jecxz
xlat
ss
fwait
pop
lret
dec
pop
in
dec
add
xor
loopne
or
sahf
ss
mov
scas
push
rcrb
pop
mov
les
fldenv
mov
cmpb
cmpsb
xor
inc
sbb
in
dec
out
xorb
pop
daa
mov
and
jb
inc
pop
pop
jnp
inc
xchg
cmp
popf
mov
sarl
pop
cmp
sub
push
dec
and
cltd
loope
mov
rorl
jp
in
sahf
or
adc
push
jle
push
pushf
aad
sahf
pop
mov
cmpsl
cmpb
daa
pop
testl
cmpsb
sbb
mov
push
or
sti
cmpl
leave
xchg
adc
iret
push
mov
jge
fst
inc
je
sarb
fcmovnbe
insb
je
rclb
jge
jae
and
aam
adcl
dec
aaa
mov
movsb
jo
jmp
insl
adc
and
call
aam
cmp
push
cmc
mov
jecxz
dec
push
repz
das
and
es
add
lcall
je
fstpt
mov
outsb
sub
push
pusha
adc
mov
mov
mov
sbb
mov
outsl
mov
jo
jns
mov
mov
test
xlat
dec
cmpsl
xchg
scas
loop
ret
pop
je
mov
rcll
sub
mov
subl
cmp
ss
dec
lret
cli
ja
sti
jl
in
mov
xchg
int
sbbl
arpl
insb
push
rolb
les
jge
cmp
daa
test
outsl
mov
inc
push
pusha
xlat
inc
and
pushf
xor
mov
push
insl
decl
and
outsl
rcrl
or
rcll
fmull
sub
sti
arpl
aad
arpl
ret
sahf
jmp
sbb
pop
jp
fisttpll
pop
rorb
ret
into
mov
mov
sub
mov
dec
xor
mov
insb
dec
fldl
movsb
sti
pop
pusha
push
xlat
adc
daa
pop
dec
adc
and
dec
pop
pop
cmp
pop
jo
lea
xchg
popa
enter
sub
jl
loope
scas
insl
inc
loopne
and
dec
dec
mov
fnsave
add
push
sbb
adc
xor
arpl
inc
push
sahf
mov
push
lea
dec
stos
pop
into
lret
dec
repz
test
test
lock
mov
push
mov
jge
test
adc
out
jecxz
sub
es
push
imul
pop
std
fidivs
sub
xor
stos
push
jne
pop
cmpsb
nop
add
lcall
push
sub
fdivp
mov
into
jmp
push
jge
imul
fstps
test
popa
sti
pop
inc
loope
js
add
pop
stos
enter
jmp
test
call
pop
jge
adc
stos
fisubrs
push
sub
cmp
push
decl
push
lods
lock
xor
push
lods
ss
rol
xor
je
xor
xor
aam
clc
movsl
leave
addr16
sub
pop
push
shl
dec
testb
pop
clc
or
mov
and
das
daa
loop
pop
int3
inc
or
out
das
xlat
or
jp
lcall
mov
insl
ret
leave
fisubl
cmp
adc
sub
pusha
in
adc
xchg
jmp
push
ljmp
fs
mov
out
es
inc
push
mov
inc
sbb
stos
lock
ret
in
cmp
push
pop
mov
dec
or
lock
cmp
orl
aam
loope
in
pop
faddl
inc
cmpb
jno
xor
call
test
out
cmp
ds
int
xchg
sbb
fmull
inc
cmp
adc
adc
inc
shl
mov
in
cltd
rcrl
aad
aad
or
push
mov
push
pop
xchg
filds
cs
adc
popa
bound
mov
fisttpll
adc
fstl
xor
ret
out
fwait
mov
orb
cltd
sub
lcall
cwtl
addr16
jno
rcrl
ljmp
jno
mov
mov
inc
xchg
dec
pop
movb
and
lods
dec
rolb
gs
dec
jp
sub
in
adc
cmpsl
pop
sbbb
orl
sbb
cld
sbb
mov
mov
movl
jl
or
dec
mov
sub
lret
push
cmp
adc
frstor
xor
faddp
jg
fistpll
xchg
mov
int
addps
jge
rclb
repnz
cld
popf
sarl
aas
int3
addr16
and
inc
mov
stc
fsubs
pop
mov
and
or
push
add
popa
scas
into
xchg
stos
ret
ret
into
mov
sub
in
test
pop
or
pop
sub
shrl
cwtl
aas
adc
cmp
in
lcall
cs
push
or
pop
mov
test
shl
out
aas
in
insb
inc
jecxz
inc
fistps
mov
sbb
sub
in
in
cmpsb
in
out
jecxz
jecxz
cmp
repnz
sub
dec
adc
orl
cmp
cld
add
outsb
shlb
fmuls
xchg
scas
xchg
sub
cmp
mov
bnd
aad
adc
add
pop
lret
std
jno
scas
add
out
outsl
sub
xchg
xor
adc
mov
in
outsb
xor
adc
gs
mov
jo
adc
scas
movsb
mov
negl
ja
int
dec
mov
sub
je
adc
lret
mov
dec
std
roll
mov
adc
pop
sbb
cmp
enter
and
scas
jg
bound
ja
lret
jns
ficoms
or
hlt
sbb
mov
xor
and
iret
xorb
aad
out
sbb
in
xchg
out
mov
jno
adc
ret
sub
and
js
xchg
int3
cmp
xchg
push
in
loope
aas
lahf
fbstp
arpl
mov
sti
fmull
pop
dec
cld
test
imul
sub
mov
xlat
lret
cmp
jnp
rcll
stc
movsl
sbb
pushf
xor
mov
mov
or
add
add
fdivl
enter
shll
sbb
dec
and
aaa
jp
out
pop
testb
arpl
je
and
push
icebp
mov
aam
packssdw
jne
mov
shl
xlat
and
call
push
test
xchg
shl
dec
sbb
push
insb
cmp
fcoml
jmp
in
or
jg
pop
mov
loop
sub
popf
jmp
repnz
inc
mov
xchg
inc
iret
push
mov
add
pop
push
out
push
sub
sub
mov
jbe
pop
dec
fldcw
test
fisubl
adc
pop
enter
stos
sbb
int3
sahf
mov
stc
les
jae
xchg
ljmp
pop
call
aaa
sbb
rcr
or
dec
sbb
jns
pop
adc
in
cmp
mov
or
cltd
shr
outsb
inc
and
dec
adc
subl
mov
arpl
es
out
and
loope
clc
add
mov
test
fnstsw
xchg
jge
js
jl
and
ret
idivb
adc
iret
inc
dec
jb
xchg
into
push
mov
lahf
shrb
int
mov
movsl
repnz
jl
das
add
push
cmc
push
dec
sbbl
xchg
mov
pminsw
dec
jno
sub
xor
and
cmp
jge
repz
sti
xchg
int
pop
ljmp
out
rcr
mov
jecxz
pushf
mov
lahf
es
cltd
push
js
pop
or
hlt
std
mov
push
inc
pop
adcl
ja
aam
add
xchg
mov
imul
stc
xor
mov
lds
or
jl
jl
and
cmp
jne
xor
data16
lock
cmp
mov
add
cld
jp
aad
les
mov
sahf
pushf
mov
xor
clc
xor
ret
loop
add
outsb
nop
mov
cmp
sub
out
pop
jecxz
ret
sbb
fxch
jecxz
or
rorb
aaa
test
outsb
push
movsl
fiadds
fptan
adc
ret
add
pop
into
sub
dec
insb
jne
xchg
fwait
mov
add
ret
fstpt
enter
xor
adc
out
rorl
adc
push
dec
adc
jns
mov
jo
icebp
xchg
loop
mov
das
notb
aas
cli
xor
popa
push
lahf
mov
push
lret
mov
out
popa
inc
and
mov
inc
pushf
out
mov
inc
push
sarl
pop
scas
inc
lret
cs
cmp
je
mov
jo
repz
mull
outsl
into
icebp
push
pop
mov
leave
xor
cmpsb
sbb
cmpsl
shl
ficomps
cmpsl
jno
mov
fidivs
dec
inc
mov
arpl
xchg
lea
loopne
xor
jp
dec
jae
inc
add
pop
fisttpl
repnz
dec
inc
jmp
inc
mov
lock
sub
sbb
scas
jmp
jmp
stc
into
or
popa
or
call
in
fidivrs
sub
popf
pop
mov
mov
sub
movsb
jne
inc
sbb
das
into
mov
sub
mov
sub
cs
mov
nop
lods
mov
out
adc
imul
cmp
mov
push
mov
mov
xchg
sbb
sbb
mov
adc
orl
andl
adc
or
scas
push
or
mov
sbb
xchg
clc
sbb
nop
lea
out
push
fs
out
jnp
fsubrl
jl
inc
ja
shlb
jne
shr
jae
aam
mov
dec
imul
cmp
mov
popa
dec
pushf
or
scas
lcall
sbb
mov
out
adc
xlat
jg
shl
or
inc
xlat
mov
push
sub
iret
cmp
cmpsb
mov
adc
sub
fistpll
test
stc
stos
fiadds
push
mov
or
mov
out
emms
inc
mov
push
ret
sbb
mov
cmpb
mov
fimull
mov
hlt
sub
imul
out
aas
bound
push
sub
xor
cmc
dec
pop
push
push
psrld
sub
lcall
xor
mov
lret
mov
subb
mov
cmc
jecxz
mov
jns
sar
stos
xchg
pop
mov
notl
arpl
lea
xor
xor
add
popf
inc
iret
lahf
cmp
in
jae
and
sbb
inc
ficompl
arpl
mov
xlat
aaa
mov
xlat
mulb
push
and
orb
pop
mov
adc
dec
mov
pop
mov
frstor
adcb
testl
xor
xchg
push
and
por
inc
gs
pop
inc
xor
jp
std
and
xor
dec
in
daa
push
and
scas
cmp
stos
sti
xor
sub
rcrb
aas
in
pop
push
inc
mov
sub
and
xchg
cmp
popf
ret
loop
fbstp
fbld
mov
cmpsl
xor
into
inc
dec
fisttpl
out
jecxz
fimuls
xor
imul
xor
mov
xlat
sbb
out
clc
mov
lret
and
in
xchg
push
and
fmull
sbb
sub
lea
sub
xchg
pusha
loope
inc
pop
addr16
lret
or
mov
xor
push
fcmove
add
inc
push
dec
fistpll
xor
push
mov
lahf
dec
push
jle
out
fisttpll
or
ret
jbe
inc
xor
addr16
dec
push
pop
dec
lods
nop
scas
jnp
mov
xchg
ds
scas
in
adc
fmuls
pop
bsr
sbb
je
push
xchg
xchg
inc
arpl
xor
lods
loop
and
xchg
mov
sbb
rcll
sub
push
loope
pop
add
or
movsl
test
das
mov
in
jnp
jmp
mov
dec
sbb
or
push
mov
mov
mov
js
push
mov
add
nop
ja
cmp
mov
fistl
movsl
dec
dec
xchg
jne
add
addb
arpl
mov
pop
sub
fcomps
push
mov
sahf
push
daa
jp
test
push
loope
or
mov
jo
aas
out
test
sub
inc
rcll
ret
dec
outsb
pop
sbb
and
jg
mov
jg
imul
std
inc
and
lcall
push
and
jge
sub
mov
cmp
mov
mov
push
add
sub
aaa
stos
andb
adc
cmp
fisubl
sahf
xor
iret
jnp
mov
sbb
icebp
lods
fimuls
test
adc
dec
fisubrs
gs
or
popa
adc
ja
shlb
shll
int3
in
outsl
push
push
ja
add
pop
inc
push
sbb
repnz
rcrl
cmp
outsl
mov
data16
negb
xor
mov
inc
cs
pop
sub
adc
iret
jmp
xchg
mov
lea
dec
push
les
aaa
fisubrs
jle
aaa
fimuls
sub
and
or
sbb
js
jns
loop
jl
out
xlat
mov
int3
psubusb
fiadds
cs
inc
test
sbbl
dec
loopne
inc
mov
dec
cmp
sbb
jecxz
icebp
mov
xchg
xlat
int3
lcall
roll
inc
out
insb
sbb
repz
rolb
and
ljmp
and
and
movsb
aas
leave
pop
sbb
or
mov
test
aas
rorl
je
xor
shll
and
aaa
faddl
pusha
ret
or
cmp
mov
mov
mov
outsl
test
xchg
push
int3
fadds
cmc
push
lea
imul
into
gs
fisttpl
shl
out
jge
adc
jmp
sub
ret
xlat
xchg
mov
jnp
dec
dec
xlat
jmp
ljmp
cwtl
push
or
pushl
mov
outsb
jg
cmc
int3
test
es
xchg
xchg
or
les
push
xchg
add
cmc
push
daa
xrelease
pop
fs
lcall
test
sub
scas
sahf
mov
dec
mov
jge
xchg
jne
fldenv
sbb
ds
mov
adc
ds
loopne
scas
and
fcmovu
rcr
out
popf
sahf
push
pop
or
push
movaps
aas
fcomi
or
aam
adc
cmp
sub
adc
fimuls
es
pushf
push
movsl
jle
negb
sbb
repz
enter
lcall
scas
sub
mov
jbe
cmpsl
xchg
icebp
es
or
or
outsl
scas
je
pop
cmp
push
out
into
cmpsl
test
mov
dec
iret
xchg
add
out
adc
pop
incb
jp
lar
add
pushf
sar
add
jo
xchg
or
xchg
into
pop
dec
and
inc
outsl
fcom
jne
sbb
out
pop
adc
jle
mov
mov
adc
mov
sub
out
sbb
push
inc
popa
fcoml
jg
mov
pushf
push
das
dec
mov
pusha
dec
loopne
int3
inc
push
jo
sbb
fisttpl
cmp
int3
inc
xchg
sbb
sti
fwait
or
jecxz,pn
aaa
sbb
lahf
pop
and
arpl
inc
test
mov
adc
inc
mov
sub
cmp
out
add
inc
pop
aam
out
aaa
mov
xchg
cmp
ja
cs
aam
push
push
inc
inc
notb
fisubl
inc
xchg
add
push
subl
dec
sbb
std
mov
leave
inc
add
andl
dec
push
cltd
and
ds
fisubs
mov
cs
das
cmp
sbb
les
leave
jo
and
inc
movsb
pusha
xor
subl
sub
repz
pop
xchg
cmc
movsl
pop
jne
icebp
out
jl
jp
mov
ret
push
inc
cmc
xor
call
jae
mov
xchg
test
inc
xor
icebp
and
incb
faddl
jmp
into
mov
mov
ret
inc
fdecstp
pop
cmc
addr16
dec
ljmp
jmp
xor
inc
inc
idivl
xlat
ljmp
shrl
dec
pushw
icebp
cmpsb
mov
push
jecxz
pushaw
lahf
push
inc
sub
cmpb
test
xor
into
or
insl
lock
sbb
push
jmp
loope
ja
dec
xchg
mov
add
mov
and
dec
cltd
pop
dec
repnz
sbb
xchg
cmp
mov
xchg
pusha
jmp
out
or
lahf
jle
lods
lea
enter
mov
dec
mov
sbb
ror
push
mov
gs
mov
fcoml
dec
xchg
jmp
popf
repz
mov
rorl
lcall
jno
add
cld
fidivs
in
lock
pop
and
rolb
test
sbb
pop
jnp
imul
test
test
cmp
pop
pop
cltd
cmp
out
xlat
sub
dec
xchg
sub
daa
cmp
add
data16
mov
push
out
or
lods
xor
pop
fst
jne
ljmp
in
addb
jb
inc
orb
adc
mul
mov
ljmp
mov
sub
mov
cmpsb
dec
push
and
cmc
in
in
enter
push
or
push
push
xchg
mov
mov
cmp
fisubs
or
test
mov
and
shlb
mov
adc
jp
inc
or
push
movsl
ret
dec
xor
dec
or
cmp
data16
lds
fwait
repnz
data16
movsl
mov
ja
inc
aam
add
nop
pop
in
leave
inc
insb
sbb
fisttpl
xchg
cmpsl
pushf
inc
dec
cmp
dec
sub
lods
dec
popa
roll
mov
imul
mov
call
pop
fidivrs
dec
into
insl
push
push
mov
lea
lcall
notb
rorb
ss
je
and
shlb
mov
fidivl
cmc
lahf
sub
je
add
xlat
hlt
popf
adc
push
in
cltd
repnz
adc
xchg
imul
dec
cmp
loop
addr16
pop
std
add
into
lret
testl
popa
sub
dec
xchg
int3
loope
push
mov
fsincos
cmp
fnstenv
xlat
mov
loopne
inc
insl
sahf
pusha
cmp
lcall
push
addr16
es
mov
int3
cmc
push
xor
xor
test
inc
outsl
stos
dec
popa
inc
scas
xchg
es
mull
outsb
sbb
push
fildll
adc
testb
dec
and
decb
mov
push
lahf
and
pop
in
mov
pop
dec
jmp
jno
test
jns
int
push
pop
pop
popl
daa
int3
xchg
and
sti
xor
push
pop
dec
sub
push
enter
push
push
bound
mov
mov
out
lock
jbe
sbb
mov
fiadds
sarb
ds
pusha
mov
ficoml
inc
hlt
jbe
add
ljmp
or
jecxz
jo
inc
xchg
movsb
pop
clc
jbe
fisubrs
data16
nop
negb
jnp
pop
aad
outsl
lods
push
ret
and
sti
or
mov
adc
fidivl
mov
jae
xor
push
pop
arpl
and
inc
lcall
sbb
mov
inc
fwait
sub
out
xchg
pop
pop
dec
dec
lock
or
aad
cltd
xchg
lahf
shr
in
incl
pop
sub
xchg
incl
pushf
daa
and
int3
clc
sbb
sub
movsl
les
dec
in
inc
inc
xor
cmp
mov
mov
sub
pop
pop
test
pop
sub
cmp
xchg
popfw
mov
lret
and
out
inc
aas
dec
out
push
push
pushf
cmp
cmpsb
inc
dec
repz
and
mov
insl
fdiv
xchg
icebp
lret
inc
jns
xlat
inc
ret
repnz
movsb
jl
iret
jbe
and
popf
mov
out
test
dec
arpl
push
or
sub
aaa
fadd
add
xchg
sub
hlt
popf
pop
imul
int
jne
aam
xor
out
out
and
hlt
cld
out
inc
int3
mov
test
xchg
jecxz
inc
insb
loope
gs
in
push
addr16
out
dec
lret
cmp
out
inc
add
mov
add
repnz
lahf
gs
ret
fbstp
lds
loopne
ljmp
sarl
sbb
xor
inc
fsts
test
inc
push
aad
jae
or
mov
loope
rclb
adc
pop
aaa
xchg
sub
btc
ds
faddl
dec
aaa
cmp
lock
dec
adc
aaa
aaa
sub
adc
add
mov
in
push
mov
jecxz
in
icebp
lahf
iret
lahf
orl
jecxz
neg
and
test
aad
push
adc
rclb
and
push
cli
ret
adc
fmull
fnstcw
pop
adc
cltd
sub
scas
ret
push
fsubl
cmp
jbe
or
inc
out
test
cmp
out
dec
ret
cwtl
sub
or
dec
xchg
test
adc
shl
fmuls
adc
adc
sbb
subl
lret
out
leave
rol
mov
js
icebp
add
mov
adc
push
enter
test
pop
incb
stos
shl
jns
mov
test
jns
mov
mov
push
mov
mov
mov
xchg
outsb
in
insl
and
iret
jbe
jnp
dec
add
dec
xorb
aam
dec
fildl
ss
fnstcw
push
sub
xchg
insl
adc
dec
pop
movsl
cmp
stc
outsb
sub
pop
orl
cltd
cmp
daa
fistpll
jmp
dec
xorb
fs
or
addr16
dec
adc
jmp
sub
adc
and
fwait
or
jl
xchg
add
and
cmp
lret
aad
js
imul
test
pop
clc
pop
xchg
imul
mov
dec
ret
stos
push
sbb
mov
push
mov
arpl
hlt
xchg
mulb
fld
daa
pop
or
test
pop
sub
lcall
mov
push
arpl
sub
shr
mov
adc
in
xor
nop
mov
sub
push
sbb
cmp
andl
and
leave
dec
xor
add
mov
mov
loope
inc
fwait
std
aas
pop
repnz
nop
stos
add
xchg
sub
cld
lret
dec
mov
push
inc
or
cmpsl
sub
mov
push
jmp
jb
loope
gs
sub
les
into
mov
outsl
inc
adc
fcmovb
mov
hlt
mov
mov
cmp
adcl
and
arpl
fisttps
mov
enter
sub
ret
push
ss
push
aam
and
jb
outsl
pop
xor
iret
jp
and
cltd
mov
in
pop
pop
mov
jg
jo
sbb
clc
push
dec
xor
inc
push
js
inc
mov
popa
and
or
popa
xlat
add
shrl
cld
push
popf
sahf
mov
xchg
inc
and
push
sysenter
mov
movsb
mov
fstpl
shrd
and
lods
lods
movsl
inc
hlt
dec
sbb
dec
pop
cmpb
gs
pop
fbld
jmp
popf
aaa
aam
fcoms
xchg
arpl
mov
xchg
xchg
stos
xchg
mov
add
dec
push
popa
int
cmpsb
loopne
jg
ret
sbb
addl
shll
and
pushf
andb
lahf
inc
xchg
loope
pop
xchg
rep
xor
cmpsl
loopne
cmp
jg
cmpsl
xchg
out
and
ds
inc
pop
pop
dec
lret
or
dec
sub
mov
mov
pop
push
pop
stc
hlt
dec
xchg
fcompl
cltd
and
imul
xchg
cltd
mov
fildll
sbb
cld
xchg
into
sbb
ret
lret
out
xchg
sub
int
orb
mov
daa
xchg
jmp
aas
inc
dec
movsb
outsb
mov
jo
add
insl
out
pop
xlat
jb
mov
add
push
cmp
les
dec
mov
sbb
sbb
ds
cmp
xor
stc
lods
jg
scas
imul
push
add
scas
cmc
xor
cwtl
mov
ret
jb
cmpsl
ficomps
out
bound
jmp
pop
insl
cmp
jecxz
jae
fsubrl
mov
inc
mov
in
cltd
and
or
movsl
cs
sbb
hlt
ja
dec
lea
mov
mov
sub
cld
test
outsl
test
sub
pop
arpl
sahf
data16
insl
mov
lcall
pop
out
xlat
dec
push
and
push
adc
fists
sbb
adc
mov
xchg
pop
sti
fistpl
scas
inc
cmp
inc
pop
aas
leave
jl
cmc
or
nop
xor
jle
jmp
mov
gs
push
xchg
cmp
or
sub
xchg
push
jp
stc
inc
mov
test
inc
inc
repz
inc
sbbb
movsl
pop
aas
xchg
decl
add
jns
in
dec
rorl
out
jb
cwtl
test
lds
popf
mov
out
ret
divl
out
cmp
out
fsubl
jecxz
pusha
sbb
sbb
arpl
pop
scas
imul
fdivrs
sub
mov
fisttpll
xchg
ljmp
in
push
inc
and
mov
push
cmc
inc
sbb
jecxz
mov
flds
test
dec
push
lds
sub
movsb
xchg
hlt
xchg
add
jmp
lds
sub
add
cld
insb
fisubrl
sbb
mov
sub
push
jbe
lret
les
ret
mov
cmp
pop
cmp
or
sub
fldenv
aad
mov
dec
js
mov
pop
addb
jnp
mov
xchg
sub
mov
std
sbbb
ds
ret
jp
hlt
adc
rcl
jle
xchg
fwait
sub
mov
aam
push
lock
adc
jae
sti
sbb
dec
mov
pop
ffreep
xchg
ret
jle
gs
sub
test
rcl
in
push
arpl
sahf
pushf
mov
aam
sbb
mov
mov
cwtl
inc
mov
repz
mov
xchg
xorl
push
jno
sub
cmp
cld
add
fisttpl
mov
xchg
repnz
dec
push
insl
psubq
jo
and
dec
popf
add
jp
aaa
call
fmulp
repnz
arpl
or
aad
adc
push
repnz
popf
popf
hlt
lds
lea
xchg
stc
inc
cld
and
inc
pop
pop
stos
dec
mov
nop
dec
je
fldenv
xchg
push
adc
repz
mov
popf
leave
jae
divb
sub
orb
lods
pop
leave
stos
aam
dec
sbb
pop
xchg
mul
movsb
mov
sub
bound
dec
cld
into
ss
fcmovbe
andb
lcall
inc
ja
loope
push
jnp
adc
pushf
inc
je
fadds
xchg
mov
pop
sti
mov
or
std
push
and
mov
stos
mov
movsl
test
cmp
in
pushf
inc
out
cmp
xchg
sti
lds
jns
mov
sub
cmp
out
jp
xor
test
sbb
lret
rclb
or
dec
adc
cs
test
xchg
pop
sbb
icebp
mov
push
es
cmp
addb
test
clc
lods
mov
out
mov
mov
cld
test
data16
fiaddl
mov
jmp
mov
push
test
mov
mov
out
in
outsl
rorl
icebp
push
mov
stos
add
dec
mov
rcll
mov
pusha
test
lods
push
xor
sbb
rol
scas
adc
mov
push
sti
sbbb
rorl
xor
mov
frstor
loopne
mov
mov
pop
ret
inc
shl
leave
arpl
popl
fildll
inc
dec
jecxz
inc
out
mov
adc
sbb
and
or
std
je
inc
fidivrs
stos
shlb
or
jno
pop
out
push
out
enter
pushf
mov
pusha
out
popf
cmp
adc
cld
inc
pop
xchg
push
ja
in
icebp
push
xchg
gs
jnp
fbstp
ret
ja
cmp
icebp
push
add
push
sub
sub
inc
xchg
mov
xor
sub
cmp
adc
subb
lock
add
fsubrl
xor
or
jnp
jecxz
xchg
mov
mov
mov
sti
push
mov
addr16
jne
inc
push
mov
cmp
push
adc
push
pushf
mov
xchg
cmpsl
jg
out
add
jmp
xor
push
fimuls
orl
jne
and
out
in
sub
sbb
inc
sbb
fcompp
mov
adc
pop
divl
shrb
stos
mov
pop
insb
fmulp
dec
outsb
test
pusha
fisttpll
imul
push
shlb
inc
pop
sbb
data16
push
inc
iret
xchg
popf
cmp
jge
lds
gs
std
repz
jle
hlt
push
dec
ss
movsb
sub
mov
push
sahf
ror
dec
popf
adc
mull
sti
sub
scas
call
xor
cltd
mov
jl
inc
inc
dec
test
or
inc
pop
cld
or
push
sbb
std
pop
inc
cmp
loope
shlb
jmp
fstpl
add
cmc
sbb
cld
pop
dec
sub
mov
faddl
ret
sbbl
adc
jge
loopne
in
xchg
popa
mov
leave
stc
inc
pop
and
or
pop
jle
lret
gs
iret
popa
es
sti
mov
mov
and
inc
xor
inc
inc
aam
aad
cmp
jno
mov
sbb
stc
push
or
in
push
sub
mov
dec
popf
xchg
xor
sub
push
inc
movsl
in
in
jbe
fs
push
xchg
add
data16
mov
mov
test
divl
pusha
jl
add
rcrb
mov
mov
inc
rolb
movsb
gs
xorb
adc
or
mov
ds
mov
jge
outsb
sub
mov
xchg
int
repz
rolb
fidivrl
movsb
mov
repz
cmpsb
mov
rorl
sbb
mov
jl
aam
stos
lret
jnp
sub
inc
js
jae
pop
scas
xchg
ret
pop
rcr
dec
jbe
sbb
add
fcompl
xor
int
dec
pop
cmp
out
pop
sub
sub
add
xchg
pop
mov
jae
mov
cmc
mov
inc
mov
jg
push
ja
sahf
cmp
inc
push
icebp
das
cli
insb
mov
and
jns
rcrb
ret
pushf
insl
orl
mov
xchg
movsl
pop
xor
fists
and
ljmp
push
adc
mov
xor
xor
adc
out
mov
sbb
inc
inc
sub
dec
es
roll
mov
mov
in
imul
adc
stos
or
aas
cli
les
and
sar
ret
enter
popa
pop
cld
xchg
ja
enter
xchg
jp
test
jo
lds
insb
sub
and
add
fs
hlt
inc
or
dec
or
movsb
enter
dec
xor
pop
arpl
cmc
mov
enter
pop
iret
ret
sbb
cmp
daa
inc
icebp
fcoml
dec
and
add
xlat
jecxz
sbb
mov
cwtl
dec
lahf
or
or
stos
scas
push
and
ficoms
jae
ss
repz
and
sbb
mov
jo
out
mov
pop
insb
fstp
xchg
inc
cs
jge
pop
adc
mov
arpl
arpl
insb
pop
mov
adc
xlat
cmp
pop
xchg
outsb
cld
into
xchg
int3
mov
sub
cmp
outsl
repz
jg
dec
stos
ror
inc
xchg
sbb
lcall
lret
loope
sub
sbb
inc
push
rcrl
mov
enter
mov
dec
cmpsb
fnsave
mov
sarl
dec
sub
or
jge
adc
insb
jns
mov
inc
je
sub
in
aad
call
pop
les
pop
test
mov
sub
loope
push
jne
and
shll
int
inc
push
push
lret
or
or
cmpsb
xchg
xchg
addr16
mov
lcall
ja
nop
loope
dec
add
inc
imul
pushf
loope
inc
js
sub
cs
out
out
push
inc
lret
inc
push
imul
stos
in
insb
dec
inc
clc
movsl
cmp
mov
sbb
inc
pushf
sbb
fwait
stc
pop
jbe
dec
gs
dec
pop
sahf
inc
pop
ret
aaa
adc
inc
push
pop
test
fdivl
mov
sub
std
je
movsl
jne
jg
lcall
iret
loopne
repnz
dec
and
out
out
ret
jbe
imul
mov
jle
dec
test
push
push
sbb
xor
aas
adc
test
or
sarl
xchg
or
in
mov
and
cmp
movsl
insl
adc
mov
mov
mov
repz
sbb
ret
lretw
inc
inc
jecxz
insl
fnstsw
loope
addr16
jo
fistpll
inc
insb
sar
pop
inc
dec
xchg
mov
dec
xlat
jbe
adc
pop
lcall
rcrl
mov
in
jg
mov
add
in
loop
push
pushl
add
pop
insl
mov
enter
outsb
pop
cmp
sub
sbb
dec
je
test
ret
mov
mov
ficomps
xchg
jecxz
fwait
sub
hlt
cmp
out
jae
lock
dec
pop
or
jmp
mov
push
lods
daa
popf
insb
mov
cmp
xor
add
outsb
push
xchg
hlt
into
mov
inc
js
jl
pop
fdivrp
fldl
ja
test
cwtl
pop
or
addl
nop
xchg
inc
leave
push
add
stos
or
cmpsb
lahf
pop
add
int3
jg
cli
push
mov
and
jge
mov
lahf
adc
jae
loope
pop
mov
lret
cmp
dec
std
fld1
jg
scas
or
jae
call
jns
loope
mov
pusha
or
lret
jnp
fdivl
sbb
push
stos
scas
imul
neg
mov
xchg
hlt
xchg
ds
negl
add
xchg
push
arpl
ds
xchg
xor
mov
pushf
das
or
cltd
cli
jg
and
adc
aad
es
sub
mov
sbbl
pop
dec
fldl
jne
js
test
rol
xlat
pop
push
rol
jge
jbe
into
cmp
iret
dec
sahf
push
idivl
fisttpll
dec
push
xchg
clc
scas
std
sbb
cmpsb
jmp
and
fisttpll
js
inc
iret
clc
out
insl
or
out
cmp
dec
cmp
inc
out
jne
push
ss
shl
fists
xchg
inc
push
sub
fwait
adc
outsb
pop
test
fwait
lret
push
push
cmp
in
sub
movsl
das
push
jo
xchg
pop
aaa
adc
inc
and
lcall
movsl
repz
push
jmp
sbb
ljmp
in
jecxz
or
jnp
repz
insl
gs
jmp
sbb
lret
cmp
ljmp
cs
in
ljmp
pop
in
ret
cmp
ret
jge
aas
ror
loopne
ror
loopne
cmpl
pop
mov
jno
inc
pop
and
lcall
adc
scas
inc
out
sahf
mov
das
loopne
adcl
pop
adc
inc
jmp
lcall
xor
xchg
inc
mov
pop
fisubl
ds
aaa
inc
push
adc
aam
pushf
in
cltd
rorl
dec
adcl
pop
mov
inc
cli
out
mov
xchg
fwait
mov
ja
cmp
or
pop
test
jae
je
and
add
orb
push
pop
adc
jle
xchg
fcmovbe
insl
mov
ret
xchg
int
mov
xor
icebp
arpl
push
dec
pop
stos
and
iret
loope
lea
jge
inc
rcl
push
mov
pop
dec
push
ljmp
shlb
mov
dec
fists
jecxz
repnz
mov
pushf
sbb
mov
and
test
pop
ja
push
cs
pop
and
and
mov
lods
or
xchg
xchg
loopne
xchg
mov
shll
push
adc
inc
xchg
and
sub
add
aam
mov
lret
test
inc
fsubrl
data16
daa
ret
or
cmpsl
push
clc
leave
mov
and
push
in
ja
adc
jbe
test
ljmp
es
cltd
std
subb
lcall
push
inc
orl
enter
pop
push
test
mov
jnp
and
push
mov
idivl
adc
fimuls
mov
lret
out
cmp
dec
or
xchg
fwait
cmp
arpl
test
sbb
push
pop
jb
in
add
lods
inc
stos
and
int
repnz
les
in
cmc
mov
xchg
in
sti
popa
mov
addl
fwait
mov
test
dec
loopne
lretw
scas
adc
or
adc
aad
inc
dec
cltd
mov
inc
jecxz
sub
scas
pop
pushf
or
push
daa
or
in
leave
xchg
jb
jle
push
movsb
mov
hlt
scas
aas
iret
out
es
jnp
pop
aas
cli
mov
shl
fbstp
jmp
iret
popf
ljmp
repz
je
add
shlb
nop
aam
test
repnz
loopne
aas
cmc
jo
repnz
bswap
pusha
imul
and
xor
incl
test
iret
insl
pop
cmc
mov
lock
mov
mov
mov
mov
out
and
out
test
int3
push
in
pop
aaa
fiaddl
pop
dec
les
cwtl
shrl
pop
sub
mov
sub
ljmp
push
call
push
popf
adc
rorb
andl
outsb
mov
in
xor
inc
pop
pop
cmp
lret
xlat
sub
jg
aad
jne
out
inc
js
pop
inc
sbb
movl
xchg
out
sub
dec
hlt
pop
dec
mov
fimuls
xchg
addr16
xlat
jne
add
pop
push
in
sti
pop
inc
sbb
add
mov
cmpsl
or
mov
mov
lods
xor
mov
pop
mov
aad
orb
push
mov
push
sarb
mov
or
pop
xchg
pop
repz
loopne
inc
adc
cmp
xchg
mov
ds
fidivrs
jb
loop
lock
sti
aam
mov
cwtl
jecxz
dec
sbb
cmp
out
push
testb
inc
xchg
mov
sbb
fxch
pop
mov
and
sub
lods
xchg
jmp
mov
out
mov
jl
repz
stos
fsubl
adcl
lahf
dec
test
add
push
mov
mov
mov
push
and
jns
ret
out
xchg
fs
inc
and
es
mov
mov
and
or
cmc
mov
xchg
scas
rcrb
je
push
lret
mov
adc
aad
rolb
mov
mov
mov
ror
sbb
movb
roll
pop
fistpl
or
or
fwait
sbb
arpl
incb
lret
sub
vpunpckldq
lcall
js
enter
scas
and
jg
ja
add
jns
js
ds
outsl
dec
aas
mov
xchg
scas
xchg
test
mov
and
mov
or
int
jle
push
jbe
inc
fistpl
je
outsb
outsl
pop
mov
lret
and
add
mov
pushf
fs
hlt
pop
loopne
stos
sub
or
xchg
adc
pop
push
ljmp
pop
in
add
mov
dec
push
dec
dec
and
mov
std
jns
fnstenv
les
push
inc
push
inc
dec
jle
or
in
cltd
ds
sbb
das
cmpsb
mov
xor
cmp
xor
leave
sbb
cmpsb
mov
out
outsb
lock
dec
jge
dec
aas
js
fwait
mov
mov
jae
dec
scas
movsl
pop
xor
rorb
or
sub
mov
lahf
arpl
int
push
cmpsb
mov
or
xchg
or
sahf
xchg
in
in
or
stos
cmp
vminss
pop
hlt
minps
sbb
das
aas
loope
sbb
jge
xchg
adc
mov
inc
xor
cmovp
sub
idivb
into
inc
sbb
and
es
sbb
push
pop
mov
sarl
xchg
popf
push
mov
push
je
xchg
cmp
test
xorl
push
adc
jl
xchg
mov
decb
out
mov
adc
xor
inc
and
pop
dec
out
pop
outsl
mov
pop
ja
shll
xchg
mov
or
popf
sub
idivl
mov
aas
loopne
ret
xchg
repz
lds
push
loop
pop
mov
icebp
pop
jmp
les
xchg
or
rorl
xchg
aas
outsl
nop
pop
lret
cmp
stos
inc
mov
cmp
in
push
les
pop
loope
stos
cmp
js
mov
idivl
mov
and
test
rcll
sub
aad
das
pop
mov
pop
outsb
movl
fcmove
jl
and
sbb
xlat
dec
pop
or
shll
enter
jl
or
sbb
fcmovb
shrl
insl
lret
test
jecxz
fimuls
divb
cltd
pushf
ds
pusha
sub
xor
pop
pop
fisubl
xor
imulb
add
loopne
jmp
inc
add
ja
aad
dec
xlat
xchg
cwtl
insl
push
sub
adc
cmp
loopne
aad
lods
test
int
imul
mov
push
aad
loop
dec
push
imul
call
outsl
xchg
xlat
jb
test
pop
mov
xchg
sarb
push
push
call
inc
pusha
push
aad
push
cli
xchg
lret
or
int3
and
xor
in
mov
je
dec
in
mov
mov
sbb
or
adc
inc
iret
cli
shll
icebp
cmc
dec
jb
and
ret
sahf
push
and
sbb
mov
pop
es
xlat
mov
into
push
inc
jg
rcrb
lock
push
jge
xchg
inc
pop
dec
and
push
xchg
mov
scas
cld
cmp
lret
or
and
arpl
nop
xchg
lds
repz
sub
xchg
pop
xchg
cmpsl
mov
xchg
addb
shrb
mov
rcl
add
xor
aas
push
pop
xor
gs
les
add
int
lret
inc
mov
into
fcmove
and
pop
leave
sbb
enter
xchg
pop
test
and
decb
test
add
lahf
sub
out
scas
out
add
cmp
icebp
out
sbb
in
pop
shl
or
testb
addb
jmp
cmpsl
inc
ret
lock
pushf
dec
sub
jge
lods
arpl
ret
push
into
mov
sbb
pop
push
insb
jmp
out
cltd
sub
and
imul
lret
mov
gs
pop
pop
int
push
int
pop
inc
stos
adc
adc
stos
xchg
ret
sti
stos
imul
mov
loope
pop
dec
notb
addr16
mov
lahf
aas
data16
cmp
mov
and
sbb
lds
lods
jge
scas
aaa
jo
dec
push
in
lret
nop
jecxz
rorl
cmp
push
scas
or
mov
adc
cwtl
int3
push
sbb
jg
xor
mov
rorb
xchg
mov
daa
adc
ds
mov
addr16
cmp
mov
mov
dec
rorb
and
outsl
enter
xchg
xor
fcomp
xchg
outsl
call
std
or
enter
rorl
repz
sbb
imul
push
pop
je
aas
sbbb
imul
jb
fsubr
arpl
loop
dec
jns
sbb
mov
cmpb
bound
jbe
arpl
push
xlat
mov
mov
inc
repz
into
cwtl
outsl
in
lds
icebp
call
stos
fisubrl
sub
jge
pop
cmc
fdivr
xchg
sarb
adc
push
ret
dec
jecxz
dec
out
cmpsl
cs
mov
aad
mov
jecxz
je
aas
sbbl
inc
in
xor
inc
sbb
pop
xchg
lds
lret
ljmp
jg
fimull
test
dec
jo
fidivl
aad
test
out
inc
pushl
adc
lahf
lds
xor
cs
mov
inc
push
rcrb
out
inc
das
fmuls
shr
lahf
jno
cmpsl
sbb
add
sub
lea
enter
push
repnz
add
test
mov
sbb
shrb
iret
bound
lret
mov
mov
jge
pop
and
test
inc
imul
out
adc
push
jmp
mov
fistl
rcr
lods
in
jl
jno
pop
stos
inc
mov
shll
dec
cld
ds
pop
loope
cltd
mov
cmc
or
and
or
rcrl
sbb
jmp
call
mov
or
jne
fistl
cwtl
xchg
loopne
jl
adc
cltd
sub
lret
fidivs
rol
xchg
cwtl
loop
aas
fldt
stos
mov
xchg
push
ficomps
rcr
insl
fstps
rcrl
nop
push
pop
push
out
pop
push
cmp
pop
mov
dec
ss
out
int3
and
add
push
jecxz
fmuls
lcall
add
pop
dec
in
iret
add
mov
inc
inc
ljmp
in
xlat
pop
dec
fidivrs
jbe
lods
lcall
ljmp
xchg
outsb
pushf
pop
push
imul
fcmovu
pmulhw
pop
dec
xor
sti
cltd
scas
pushf
or
dec
std
jne
in
mov
or
sbb
cmp
icebp
in
mov
jo
push
mov
add
dec
fs
inc
sub
xor
push
push
subl
xor
mov
in
sahf
and
sbb
jle
push
xchg
add
push
aaa
flds
mov
shll
dec
xor
mov
repnz
sbb
and
int
cmp
in
add
in
and
sub
push
inc
sbb
cmp
dec
sti
mov
popf
call
insb
enter
pop
call
shrb
jne
pop
sbb
mov
adc
cmp
sti
push
stos
xchg
and
xor
test
arpl
mov
adc
mov
repnz
mov
or
and
shrb
pop
cmp
and
lea
adc
push
out
mov
xor
je
xor
movsl
xchg
ret
jbe
xor
mov
or
adc
jns
adc
jge
fnstsw
aad
push
sbb
insb
mov
push
inc
xchg
jne
std
cmp
inc
sbb
cmc
pop
hlt
rcr
and
pop
push
or
sbb
jbe
push
ffreep
dec
mov
xor
fildl
fiaddl
in
in
or
push
sub
xor
dec
add
add
xor
push
sbb
jae
mov
jae
cmp
mov
mov
jne
stos
test
addb
pop
test
ds
and
or
push
inc
sarl
sbb
lods
scas
xor
add
cs
dec
xlat
repz
ja
sbb
pop
xchg
lods
lret
icebp
lahf
push
repz
push
cmpsl
add
iret
cwtl
sub
into
inc
dec
xchg
test
jge
fcomip
movsb
cmp
inc
xchg
or
imul
fbstp
and
enter
movsl
inc
clc
cmp
inc
inc
imul
adc
mov
mov
cld
pop
push
mov
lcall
dec
in
push
rcrb
inc
pop
les
push
gs
sub
in
xchg
jge
movsb
lcall
lret
mov
sub
bound
popa
cmpsl
push
lods
imulb
push
mov
frstor
pop
int3
test
cli
stc
xchg
jg
jo
mov
jg
out
adcl
gs
arpl
sub
std
sbb
xchg
jnp
data16
xchg
lods
ret
or
cli
mov
pop
stos
aad
add
scas
dec
repz
aam
push
ljmp
pop
mov
xchg
subb
jbe
sti
imul
fstps
xchg
inc
push
notb
mov
imul
jne
xor
lret
sbb
fsubrl
inc
adc
inc
cmp
pusha
pop
cld
xchg
hlt
inc
in
jo
mov
stos
loope
aam
test
push
daa
xchg
icebp
loop
pop
outsl
or
lock
fstl
popf
pcmpeqd
push
mov
cmp
filds
adc
aaa
subl
aam
adc
mov
mov
xchg
dec
fbstp
jae
loop
add
lret
sub
xor
inc
and
loopne
pop
add
std
insb
imul
negb
sub
mov
sub
mov
and
lahf
push
cmp
xchg
push
mov
inc
insl
dec
inc
in
out
add
rol
lret
xor
xor
roll
pusha
test
cmp
test
dec
inc
enter
rcl
xor
rcrl
push
adc
dec
jge
popa
xor
ret
push
push
pop
push
idivl
xor
daa
dec
mov
add
dec
data16
pop
sbb
xor
mov
std
bound
add
pop
mov
std
jns
pop
divb
pop
ret
leave
dec
rclb
out
sar
repz
cmc
bound
cmp
mov
call
das
sti
add
ss
jp
popa
mov
out
pop
popf
iret
mov
cli
fcom
push
in
inc
xchg
and
movsb
fmull
xlat
andb
mov
mov
inc
jmp
stos
idivb
push
mov
loope
test
xor
sbb
jg
dec
sahf
lea
sub
mov
push
imul
inc
mov
push
jno
or
lods
xor
in
or
fisttpll
inc
insl
movsl
fnstsw
pop
jnp
jo
mov
inc
ret
rol
inc
data16
ja
jmp
nop
push
ds
pop
dec
imul
sbb
mov
xchg
pop
das
push
pop
dec
jmp
push
pushw
and
push
gs
sub
fisttps
fadd
popf
fs
cmp
aaa
lahf
outsl
and
cmp
and
daa
inc
and
mov
ds
pop
in
mov
movnti
das
add
movl
scas
pop
xchg
and
outsb
movsl
mov
sub
jmp
iret
sbb
dec
dec
adc
mov
pusha
push
lcall
xchg
pop
test
adc
inc
or
pop
or
stos
fistps
lea
imul
fisttps
sub
sub
and
mov
mov
aaa
out
out
aas
lods
and
ret
push
adc
ja
mov
dec
outsb
fisubrs
pop
push
pushf
inc
mov
mov
and
push
xchg
add
push
sahf
addr16
mov
aaa
jns
out
inc
pop
xchg
ret
xlat
insl
mov
mov
out
mov
mov
mov
insb
cli
addl
add
sbb
lcall
sub
sahf
sbb
aaa
iret
mov
mov
xchg
sbb
pop
dec
rcr
inc
shll
mov
imul
mov
mov
clc
lret
adc
mov
jno
push
clc
out
je
push
xchg
sahf
into
loop
mov
inc
sbb
shll
rcl
pop
cmp
lods
sbb
ror
ljmp
mov
addr16
les
aad
jmp
outsl
jo
push
and
inc
xor
push
fadds
pop
jge
sub
push
inc
fimuls
ja
adc
fbld
fcoml
pop
push
sti
ret
je
sbb
ret
or
xchg
fcmovne
cwtl
sub
into
dec
dec
cwtl
inc
xchg
pop
shl
movsb
pop
xchg
lock
shl
fsubl
fcmovnb
fs
pop
dec
push
test
in
test
js
fstl
inc
test
pushf
sbb
call
testb
stc
stos
fidivs
pop
sub
mov
fmuls
xchg
adc
inc
nop
push
xor
xchg
cltd
dec
leave
stos
fs
int
push
dec
cmp
in
mov
and
loopne
cld
cmpsb
push
into
pop
sub
lea
cli
xchg
xor
enter
imul
sub
scas
sbb
rol
jae
inc
push
cmp
or
mov
xchg
test
shrb
rolb
pop
sub
jp
scas
inc
push
fucomp
sub
xchg
xchg
adc
cmp
in
enter
lcall
movsw
adcb
xor
and
cld
fidivrl
mov
leave
shufps
jne
scas
stc
lret
cmpsb
lret
sti
jne
xchg
xchg
pop
aas
fwait
jge
in
mov
or
mov
insl
out
dec
loopne
lret
lea
insl
testb
fdivl
imul
push
and
ds
psubd
xor
ret
mov
sub
inc
les
add
sbb
fisubs
adc
shr
cmp
pop
imul
lahf
in
push
mov
adc
movsl
jmp
hlt
adc
push
icebp
mov
cmc
mov
and
les
cli
fistl
sbb
sbb
pop
push
and
push
cld
gs
js
es
xor
fists
add
andl
mov
rcr
xchg
sbb
push
push
aad
cmp
test
adc
add
in
pop
inc
dec
pop
mov
arpl
subb
dec
ds
jno
and
cmp
xchg
lods
push
out
jmp
push
mul
xchg
xor
scas
out
pop
test
sarl
pop
out
jno
sarl
mov
pop
fisttpl
addr16
shlb
cmp
push
jmp
jmp
lret
jle
jle
inc
aas
rorl
shl
dec
ds
arpl
sti
ret
inc
dec
mov
out
hlt
or
pop
inc
mov
push
dec
data16
sbb
and
insl
shlb
repz
testb
lds
rolb
insb
sar
call
jbe
adc
push
imul
inc
and
flds
fcompl
rcrl
rcrl
std
xor
sahf
inc
sti
push
out
mov
pop
dec
dec
fiaddl
push
loop
stos
lds
dec
dec
inc
cwtl
sbb
dec
pop
push
inc
ret
and
fisubrs
xchg
or
lods
sub
xchg
icebp
in
popf
out
push
shrb
pop
pop
jnp
add
xchg
dec
jl
dec
and
addr16
mov
pop
fsubrs
clc
fildl
in
mov
out
notb
test
mov
push
idiv
pop
insb
aas
inc
or
push
or
in
in
sbb
popa
shlb
lcall
lret
mov
xchg
sub
cmpsl
stos
les
pop
shlb
xchg
cmp
push
mov
pop
inc
sarl
out
ror
aas
shlb
xchg
mov
fstp
dec
push
std
hlt
or
out
jp
jmp
out
hlt
or
sbb
jg
lcall
in
cmp
lea
mov
imul
fsts
jne
and
repz
in
inc
test
inc
push
imul
paddsw
jne
mov
push
out
int
fcmove
mov
xchg
push
std
jno
adc
mov
repnz
stos
inc
into
cmpsb
icebp
movsl
mov
je
repz
mov
push
hlt
jl
fldt
mov
ret
xor
adcb
mov
jnp
lds
fidivs
rcrb
sarl
cmp
ret
mov
rcr
mov
mov
repz
ret
dec
dec
mov
inc
out
outsb
dec
push
cmp
sbb
movsl
scas
std
pop
mov
insl
cmp
in
cli
iret
inc
cwtl
sbb
adc
jecxz
rol
test
pop
mov
arpl
adc
fcoms
inc
push
push
mov
sub
xchg
pop
test
popf
shl
jl
pushf
arpl
sti
ret
inc
dec
sarb
fstl
testl
cld
int3
shll
inc
mov
fdivp
or
imul
pop
mov
pop
or
bound
mov
hlt
fwait
decl
mov
cwtl
pop
shrl
xlat
leave
popa
daa
rcrb
push
outsl
repz
push
xchg
data16
stos
inc
sbb
insl
push
test
mov
xor
xchg
xchg
aam
lea
hlt
dec
xchg
sub
adc
aam
dec
sub
int3
aad
inc
daa
sarl
shll
sub
jbe
or
sbb
cmp
mov
ss
add
int3
inc
rcrb
pusha
daa
cltd
push
sub
mov
push
and
pop
or
sbb
jb
fs
mov
add
dec
xchg
mov
cld
in
sbb
sbb
mov
sbb
lret
mov
mov
imul
js
int
pop
movl
xchg
loopne
cwtl
lahf
xchg
aad
cmp
mov
scas
out
xor
shl
aam
scas
lret
cs
inc
out
and
mov
into
ficompl
in
test
push
push
les
ret
sti
enter
out
and
dec
arpl
mov
jle
jg
cmp
lcall
test
pop
xchg
xor
add
in
lret
sbb
cwtl
jl
jns
or
scas
xchg
adc
ljmp
shlb
hlt
dec
cmc
pop
cld
xchg
mov
out
shr
aas
das
das
fstpl
fucom
lret
movsl
call
scas
test
stc
out
fcompl
test
outsb
push
and
push
imul
dec
push
leave
fidivl
pop
pop
fldcw
ljmp
jnp
nop
sub
pop
mov
xchg
mov
test
repz
das
fldcw
enter
aas
mov
sub
popa
pop
push
addr16
call
fwait
orl
lahf
jns
stos
mov
ds
ret
call
arpl
mov
or
jge
push
es
stos
arpl
add
outsl
arpl
stc
or
xor
out
ror
sub
jecxz
movb
xchg
and
ficomps
aad
ret
jecxz
sbb
test
movsl
jne
enter
push
push
and
push
or
repnz
movsb
cmpsb
sub
or
addr16
iret
dec
out
and
inc
or
popa
push
inc
mov
jbe
xchg
fcmovnbe
inc
fcomp
dec
lret
std
pop
cmp
rcll
sub
ret
negl
jecxz
aad
icebp
push
mov
ret
xchg
fsub
mov
jg
pushf
dec
lds
ret
das
and
fidivrl
fimull
clc
fdivrl
lret
das
inc
dec
push
push
les
lret
stos
test
push
jecxz
adc
cli
nop
jno
out
jge
adc
out
nop
fwait
sarb
or
icebp
sbb
popa
sbbb
rorl
ljmp
sbb
std
pusha
mov
lret
mov
dec
cld
jbe
sub
inc
inc
sbb
mov
lea
adc
rcll
loopne
in
jne
xlat
adc
jle
std
dec
int
outsb
sbb
xchg
jmp
cmpsl
ret
inc
jl
pop
js
stc
int
rorl
inc
adc
xchg
and
jmp
outsb
aaa
push
jl
rcll
jne
sbb
mov
mov
mov
cmpsb
dec
icebp
gs
fdivs
insl
mov
inc
push
xchg
in
nop
cld
sub
ficompl
lcall
dec
imul
mul
add
out
dec
pop
out
mov
or
mov
insb
int
xor
mov
mov
adc
xlat
loope
xchg
es
adc
sub
push
aad
adc
xor
adc
ss
fbld
lea
dec
jmp
cwtl
pop
testb
pop
movsl
in
inc
or
mov
dec
dec
xor
cmp
inc
ss
inc
adc
fcmovbe
jl
bound
fmull
adc
fisttpll
mov
sub
out
cmpsl
jo
jge
pop
out
hlt
fsubs
mov
mov
xor
cmc
imul
push
jmp
mov
dec
pop
adc
insl
outsb
xchg
pop
mov
ja
mov
dec
jg
sbb
push
addr16
dec
insb
mov
sub
sbb
in
stc
and
aam
fidivrs
pop
adc
cli
push
addr16
xchg
cmp
lock
push
ljmp
xchg
aaa
cs
loope
cmp
pop
jnp
pop
hlt
movsl
lods
cmp
jbe
in
push
lods
xchg
xlat
popf
dec
mov
aam
cmp
aaa
in
mov
inc
out
subl
negl
aad
push
lcall
loopne
test
jo
xor
stc
cmp
shlb
pop
jns
adcb
outsl
or
sub
pop
adc
adc
sbb
movsb
ret
aas
ds
or
inc
or
daa
ficompl
push
pusha
icebp
jae
aam
inc
std
addr16
mov
outsl
stc
sub
xchg
mov
and
dec
jmp
push
pop
push
jno
cmp
ret
push
int3
cmpl
ror
or
into
cltd
lret
es
sbb
mov
cmc
xchg
lods
mov
sub
inc
stos
xor
pop
ja
cltd
jp
sbb
test
cmpsl
mov
mov
cmpsl
aad
sub
and
pop
sbb
cs
jle
jb
mov
lock
repnz
in
sbb
mov
out
sbb
repz
lea
jge
fistpll
add
in
sbb
mov
cmp
aaa
test
ss
sub
dec
push
stos
mov
xor
jecxz
fiadds
lahf
stos
adc
ja
pop
xchg
test
bound
inc
cmp
cmp
popf
lret
push
fucomp
sti
mov
and
xchg
or
shl
add
int
mov
pushf
dec
jno
jl
repnz
icebp
adc
clc
mov
pop
sub
xor
lods
mov
and
dec
inc
dec
add
sub
repnz
ret
sbb
test
push
les
push
pop
ds
packsswb
pop
loope
dec
out
xchg
bound
ffreep
inc
jg
test
push
jne
add
je
xchg
movsb
pop
ret
adc
adc
pop
xchg
mov
sbbb
ret
dec
stos
xor
and
cmp
inc
aaa
jb
insl
jecxz
cmp
and
hlt
or
mov
into
nop
push
aas
inc
pop
push
cld
add
and
dec
mov
pop
pusha
sarb
dec
mov
dec
pop
sbb
cltd
sub
popa
pop
jnp
nop
lret
cmp
jno
imul
pop
popf
sub
in
cmpsb
iret
fs
bound
mov
push
or
sub
les
jae
repz
popa
dec
push
push
push
hlt
and
dec
push
or
lock
push
jecxz
pop
jp
dec
mov
outsb
lcall
pop
dec
leave
or
loop
enter
lods
fcompl
es
sub
sub
push
inc
das
and
push
mov
in
jl
lea
ret
loope
or
dec
daa
es
push
mov
movsb
fstp
in
icebp
loop
hlt
pushf
mov
mov
repnz
fldcw
jae
cmpsb
pop
xor
xchg
cmpsb
test
popa
repz
loopne
inc
stos
cmp
sub
and
xor
les
pop
enter
pop
and
fildl
add
add
scas
adc
xor
jns
xor
jne
cs
pslld
mov
or
push
and
or
cli
dec
fs
pushf
fildl
daa
ret
dec
mov
pop
das
or
ja
adc
js
enter
insl
mov
adc
call
and
inc
push
or
adc
adc
cmp
push
or
inc
pop
pusha
xchg
fucomp
mov
sarb
out
in
xchg
add
jg
mov
pop
adc
mov
cltd
addr16
notl
das
imul
add
lahf
arpl
pop
mov
adc
cwtl
push
repz
push
mov
imulb
push
xchg
inc
cld
fldcw
es
lods
ret
dec
pop
jbe
pop
insb
dec
sbb
add
sub
push
dec
mov
xchg
loope
mov
jl
testl
rcrl
repz
cmpsb
fidivrs
lahf
pop
int
pop
sarb
aad
dec
jns
xor
enter
mov
repnz
scas
outsb
pusha
sub
das
cltd
test
pop
ljmp
and
test
mul
or
sbb
jmp
adc
les
fs
add
xchg
dec
cmpl
fwait
jecxz
iret
push
in
pop
je
fwait
pushf
pop
pop
inc
iret
and
out
pop
sub
push
push
xor
pop
jge
push
ja
int
cmp
gs
jb
cmpsb
push
sbb
add
mov
mov
cltd
pop
int
add
push
in
fisttpl
jecxz
mov
and
mov
or
rolb
das
nop
jno
jp
jg,pt
xlat
shrb
inc
pop
add
cmp
add
lahf
cmc
ljmp
mov
push
imul
cmpsl
xchg
bound
lcall
sub
inc
dec
push
negl
fnstenv
inc
mov
cmpsb
lcall
mov
push
jecxz
cmp
inc
lock
xchg
jmp
aas
and
pop
lods
xchg
outsb
jnp
dec
ret
pop
in
popf
adc
ret
dec
jg
fsubr
push
jl
mov
sbb
add
mov
sbb
bt
mov
mov
scas
es
dec
pop
push
sbb
ja
or
mov
and
int
jecxz
push
pop
pop
jno
jo
mov
xor
mov
adc
jb
fs
js,pt
jo
lahf
cmp
pop
int
daa
lcall
out
iret
inc
push
xor
adc
gs
les
cmp
jne
lea
sbb
sub
cmp
push
orb
adc
cltd
inc
dec
js
decb
xlat
popf
lret
cmp
pop
test
movsl
out
mov
or
lcall
int3
andl
into
xchg
je
out
xchg
sarb
adc
mov
loop
mull
jmp
xor
ret
pop
stos
mov
push
mov
cwtl
cvtpd2pi
mov
pop
daa
mov
and
call
push
dec
jae
cmp
mov
mov
notb
loopne
repz
outsl
or
cmp
xor
imul
in
inc
jle
push
cmp
xchg
mov
mov
jg
jl
sbb
decb
mov
push
push
sti
inc
loopne
mov
jg
sub
xchg
mov
je
sbb
fcmovnu
setg
push
mov
insl
cmp
dec
and
push
pop
mov
inc
leave
jb
movsb
int3
sbb
xorl
sub
pop
aas
jo
leave
rclb
mov
das
push
jecxz
cmc
pop
jp
shlb
lret
push
sub
adc
je
out
jno
and
ss
mov
sub
pushf
ljmp
dec
xor
lods
addr16
mov
hlt
enter
clc
push
jo
push
cmp
fidivs
jns
sbb
dec
ret
shrl
push
dec
sbb
data16
cmp
adc
inc
imul
stos
nop
andl
inc
pop
xor
iret
arpl
fistps
adc
call
mov
rcr
in
arpl
hlt
or
inc
adc
lret
arpl
in
insb
int3
mov
cmp
clc
fiadds
or
fdivs
arpl
push
add
pop
repnz
or
pand
bound
xchg
cmp
outsl
cmp
push
pop
leave
std
xlat
push
xor
mov
dec
cmp
inc
pop
cmp
lret
popa
pop
push
push
sbb
iret
dec
data16
rorl
push
dec
fildll
dec
jl
jge
dec
push
rcrl
pop
or
out
jle
inc
dec
in
inc
push
sbb
dec
mov
inc
leave
sbb
xlat
fwait
cmpsb
movsl
sti
adc
pop
adc
addr16
scas
push
in
lahf
jno
stos
xor
scas
lcall
subl
ss
negb
pop
pushf
loope
inc
push
pop
sbb
aad
push
add
out
iret
pushf
sub
jo
enter
mov
push
mov
xchg
xor
xor
and
aam
xchg
sbb
inc
xlat
cmp
inc
movl
xlat
fnstenv
adc
adc
int
leave
ficoms
cmp
lds
pop
adc
jecxz
pop
addr16
mov
out
frstor
cmp
lret
add
fcmovb
dec
pushl
jno
rcrl
ret
addr16
xlat
adc
lret
mov
scas
lea
enter
xchg
push
out
xorl
pop
fistpl
pop
imul
loop
loopne
jbe
ss
and
daa
shll
jns
dec
sbb
push
dec
jns
dec
pop
jb
sub
mov
dec
mov
out
push
aas
mov
das
dec
dec
mov
inc
dec
std
lods
pop
xchg
lcall
scas
sbb
es
mov
addr16
ret
cs
clc
insl
xchg
jno
pop
fisubl
xor
imul
loop
adc
mov
clc
insl
push
shll
out
xor
pop
sbb
popa
push
ds
xlat
cltd
test
stos
test
popf
aaa
sbb
mov
loop
cmp
mov
sub
subb
pushf
push
out
aad
mov
add
push
pop
xchg
adc
lods
sti
scas
add
mov
cmp
pop
sub
xchg
loop
mov
jge
sub
out
push
loop
lods
xchg
decb
jmp
rcrl
in
mov
andl
xchg
repz
or
imul
notl
mov
cmp
shlb
outsb
sbb
je
push
je
fdiv
arpl
daa
or
cli
pop
cmp
mov
adc
pop
test
jno
loope
sti
inc
mov
add
push
mov
loop
inc
int3
call
ljmp
push
ljmp
xor
xchg
aad
cmp
pop
in
inc
hlt
in
push
das
mov
mov
xchg
push
mov
ret
push
ss
mov
stos
add
and
addl
mov
xorl
movsb
loop
in
js
and
or
leave
inc
imul
push
sub
inc
cltd
inc
stos
bnd
out
shrl
outsb
fisttpl
xor
inc
push
popf
ljmp
xchg
sar
xchg
add
shr
inc
adc
inc
push
dec
ficompl
pop
int
xchg
push
sub
inc
adc
inc
push
sub
arpl
ljmp
fmull
pop
stos
nop
mov
iret
scas
dec
stos
xchg
lock
lods
mov
push
int
inc
adc
inc
jns
repz
dec
inc
sub
je
daa
jmp
xchg
scas
outsb
inc
cld
es
push
rcrl
je
aad
sbb
insb
pop
fisttpl
cwtl
cld
lock
shlb
mov
add
jne
stos
gs
sbb
mov
dec
subb
cli
mov
inc
subb
sub
ljmp
dec
push
sbb
or
imul
ret
dec
mov
mov
jecxz
push
jae
or
jnp
mov
movsl
aaa
std
add
push
pop
loopne
mov
sbb
scas
jge
sar
sub
and
in
lret
or
sbb
cs
inc
insl
call
pop
cmp
dec
xor
xlat
lahf
jecxz
lcall
inc
mov
lods
jp
stc
stos
pop
cmp
stos
xor
dec
gs
mov
sub
out
daa
dec
cmpsb
notl
jns
fstpl
daa
out
mov
mov
mov
outsb
cmpsl
cmc
pop
sbb
clc
sbb
push
xor
and
inc
mov
jnp
cmpsl
int3
add
pushf
mov
es
xchg
push
mov
arpl
xchg
es
cmp
mov
push
movsl
dec
enter
inc
jo
mov
xchg
scas
gs
das
dec
shll
aam
loope
cmp
sbb
ja
mov
sbb
aaa
mov
pusha
mov
adc
pop
cmp
jle
push
pop
adc
inc
es
int3
mov
push
mov
dec
jg
out
es
loope
out
mov
mov
shlb
mov
out
push
arpl
xchg
xor
negb
sbb
in
jnp
pop
repz
notl
push
jb
movsl
mov
or
xchg
and
into
jo
lods
dec
cmp
pop
cli
cmp
cltd
pop
shll
out
sbb
jmp
sbbl
cmp
xchg
cmp
dec
push
incl
mov
pop
push
xlat
push
adc
out
test
mov
xchg
icebp
push
jns
pop
rcrl
jge
lret
pop
mov
add
jle
daa
cmc
fisttps
sub
ret
adcb
push
icebp
jbe
fstpl
cwtl
popf
jns
idiv
mov
daa
xchg
leave
jge
aaa
xchg
adc
ds
add
jmp
mov
out
aad
sahf
sub
pop
pop
cs
or
cmp
or
in
out
jns
cmp
es
fiadds
jbe
repz
das
stos
fmulp
dec
and
xor
mov
fcmovnbe
out
push
imul
or
pop
cltd
mov
imul
push
in
ret
mov
movsl
aad
out
cmp
mov
leave
fildll
and
push
cld
mov
int3
cmp
js
pand
pop
ljmp
adc
push
mov
adc
or
roll
enter
testl
dec
xor
pop
hlt
push
cmpsb
mov
and
or
ss
mov
and
xor
dec
pusha
xchg
shll
out
push
jne
ficomps
mov
hlt
cmpsl
sbb
in
inc
out
mov
jo
rcrb
add
dec
and
pop
mov
push
ljmp
pusha
addb
mov
out
cmp
sahf
inc
into
repnz
push
cltd
jne
inc
mov
jmp
sub
js
push
sub
push
insb
push
ret
jp
aad
dec
sahf
out
inc
hlt
stc
sbb
adc
test
push
and
mov
adc
repnz
pop
icebp
inc
push
jge
xchg
jmp
insl
fiadds
gs
stos
xor
pusha
xor
imul
stos
mov
cld
inc
outsb
hlt
push
sub
das
add
loopne
movb
mov
das
clc
stos
in
xlat
sub
les
lods
in
lock
dec
cmpl
stos
test
faddp
into
jnp
sbb
inc
jno
jecxz
arpl
xchg
pop
adc
ss
test
pop
adc
jge
xchg
pop
enter
aaa
shll
jle
fistpll
les
jnp
sahf
add
mov
cmp
ja
sbb
sbb
inc
inc
jnp
jmp
and
pop
sbb
or
adc
push
loopne
movsl
push
ror
xchg
lret
jmp
and
fsubrs
pop
xor
cltd
inc
popf
xchg
pop
jp
xlat
sbbl
test
addr16
outsb
shrl
xchg
arpl
xlat
or
popa
mov
into
repnz
in
mov
stos
mov
pop
aam
sahf
sbb
jnp
clc
sbb
sub
repnz
cli
fidivrs
xchg
stc
lock
or
into
jecxz
cmp
jno
hlt
cmp
pop
outsb
add
mov
mov
jmp
mov
mov
pop
add
loop
push
out
test
pop
adc
imul
push
jecxz
es
pop
pop
jge
rcr
stc
lret
push
ret
jae
push
ds
xchg
into
ss
lods
sbb
mov
enter
mov
add
xchg
addb
sub
jbe
rcll
clc
loopne
insl
sub
in
jnp
sahf
aad
jg
fstpl
faddl
jle
lret
mov
stos
in
add
cld
ja
jne
out
inc
in
xchg
ljmp
in
cmp
mull
dec
daa
mov
pop
jmp
mov
adc
mov
int3
filds
mov
pop
fwait
sbb
cmpsb
pusha
leave
push
cmpsl
sub
cltd
stos
mov
popf
and
sub
popa
addl
lods
sub
xchg
mov
inc
das
js
sbb
xchg
mov
mov
xor
loop
imul
jecxz
push
out
mov
popf
adc
sbb
cld
pushf
jno
pop
pop
xor
lods
sarb
loop
ljmp
xor
ljmp
add
and
mov
jbe
jmp
fs
push
mov
popa
in
lret
pop
cld
out
cmp
lea
test
and
jns
jns
pop
mov
mov
cmp
lret
dec
inc
cmc
into
jns
addl
loope
in
mov
xor
or
pop
loop
sbb
jecxz
fldcw
jl
cmp
loope
fstpl
pop
mov
test
out
loop
repnz
popa
mov
jae
das
pop
cltd
sbb
mov
ret
idivl
mov
shl
popf
inc
insb
mov
ljmp
shlb
or
add
sub
ss
pop
int
jns
mov
stos
loop
cltd
pop
dec
push
sbb
leave
into
dec
jle
xlat
sub
xchg
ret
lea
out
or
xchg
xchg
cwtl
ss
enter
mov
cwtl
ss
enter
mov
pop
ss
enter
test
adc
push
jge
daa
sti
mov
nop
icebp
inc
and
xor
das
fistpl
jmp
mov
jae
rcr
mov
leave
dec
ror
jo
fs
and
lea
cmc
mov
sub
pop
xor
pop
popa
sub
orb
mov
dec
popa
hlt
sti
loope
adc
or
sbb
mov
xchg
jle
mov
hlt
icebp
mov
sub
fisubrs
lret
cltd
mov
sub
inc
add
fstpt
sti
mov
and
push
and
or
push
push
sub
rorl
or
cld
sub
xchg
mov
jae
scas
xchg
or
add
or
cld
sbb
inc
cmpsl
ss
fwait
popf
fstp
dec
push
push
xchg
loopne
ret
shr
popf
jl
faddp
pop
imul
js
fldcw
inc
inc
and
bound
ret
daa
xchg
jne
pop
jg
or
std
adc
lods
push
shrl
mov
sbb
lods
mov
sarb
inc
cmp
add
pop
sub
daa
or
ja
jle
pop
and
xchg
out
push
data16
xor
xchg
loopne
xlat
int
jbe
adc
scas
stc
jecxz
sub
adc
sbb
dec
cs
cmpsb
sbbl
scas
mov
sub
out
bound
icebp
mov
and
scas
xor
push
xorl
pop
test
orb
fwait
movsb
loop
pop
fisubrs
pop
rcl
dec
inc
cwtl
movsl
ficompl
jb
push
inc
dec
dec
pop
xor
jecxz
loope
ficompl
pop
xchg
dec
arpl
push
and
sbb
mov
scas
sbb
push
sub
mov
inc
push
xor
jl
lods
mov
addr16
pop
cmpb
dec
cli
mov
daa
daa
daa
subb
negb
sbb
ret
inc
inc
addb
orb
xchg
inc
xor
test
mov
xor
call
xlat
out
cli
aaa
pop
xor
cmp
hlt
rolb
jne
jae
insb
jge
iret
ja
jmp
or
inc
and
mov
in
dec
cmpsb
mov
ret
roll
fdivr
xchg
mov
fimuls
ret
xchg
insl
jg
jno
fsubrl
sub
or
mov
pop
leave
xchg
neg
mov
mov
xchg
pop
inc
sub
mov
lcall
jg
into
adc
lahf
fcoml
fisubl
inc
push
vdivps
pop
cmpsl
xchg
xor
xchg
inc
mov
out
push
std
test
add
push
or
cmp
adc
stc
nop
insl
daa
rorl
jp
push
xchg
nop
test
mov
fisubrs
xor
jb
cmp
call
sbb
ljmpw
imull
fstl
or
inc
sete
dec
dec
fmull
pop
xchg
pop
mov
pop
jno
addb
inc
rcl
pop
push
sahf
imul
dec
sub
stos
add
xor
push
and
sbb
popa
sub
xchg
popa
fcompl
push
ficoml
pop
pop
movsl
pushf
push
mov
mov
sbb
test
sub
mov
sub
hlt
adc
or
mov
insl
mov
rcrl
imul
stos
add
rcll
cwtl
daa
repnz
leave
arpl
loope
sti
std
outsl
insl
imul
jge
ret
loope
pop
add
pop
pop
fnstcw
imul
int
jno
outsl
clc
sbb
xchg
cli
out
int
mov
adc
cli
push
jbe
or
mov
in
inc
imul
ja
jns
paddq
mov
dec
ss
dec
and
pop
push
out
sub
fnstcw
es
in
push
mov
cmp
mov
pusha
mov
call
and
lret
sub
xchg
jbe
fsubrl
pushf
loopew
xor
xor
out
adc
in
push
ja
mov
cmp
les
out
ja
cmp
call
ret
loope
xor
jns
pop
mov
xchg
adc
push
lret
xchg
mov
sub
popa
hlt
mov
outsl
dec
lret
dec
mov
and
test
xchg
cmp
push
and
inc
es
jno
fwait
cmp
or
fcomps
push
data16
sub
pop
repnz
cmpsl
ret
fdivp
into
xor
adc
js
jl
popf
insb
loopne
inc
das
jmp
outsb
cs
push
sub
subb
shlb
out
lret
sub
lods
daa
pop
cmp
dec
jne
and
push
jns
inc
std
rclb
sbb
mov
enter
cmp
into
out
cltd
or
and
mov
sbb
enter
jne
xchg
gs
in
repnz
and
lcall
jns
cmp
popa
dec
ss
aad
pop
pushf
jno
inc
leave
adc
sub
data16
mov
repnz
mov
decl
jle
xor
push
sub
push
ljmp
push
xlat
sahf
psllq
push
cmp
cltd
cmp
pusha
cmp
enter
adc
sub
sub
lods
les
shrl
icebp
sbb
adc
sub
fwait
sbb
pop
pop
es
cli
dec
inc
rcl
or
rcll
xchg
dec
ud0
stos
daa
cmp
imul
bound
xor
xlat
stc
lds
jns
push
daa
xor
fadd
shlb
lods
stc
ds
adc
or
or
xorb
sti
fwait
jmp
xor
lcall
je
sbb
inc
arpl
sbb
mov
icebp
adc
inc
lahf
sti
sbb
cmc
jle
fiadds
or
inc
aas
aaa
push
xchg
pop
dec
stos
xchg
mov
adc
mov
lret
push
mov
cmc
mov
adc
fiaddl
pop
jp
inc
pop
or
mov
je
iret
or
dec
rcll
shr
stos
jns
inc
rcrl
loop
push
inc
xor
jne
sub
aad
push
xor
sahf
push
pushf
lds
jg
dec
orb
loopne
lret
cmp
arpl
hlt
push
pop
divl
jle
xlat
mov
push
cld
nop
sub
je
ds
outsb
mov
ret
lods
ret
or
loope
rcll
and
xchg
pusha
lcall
sub
or
gs
ret
mov
mov
popa
mov
push
cwtl
cmp
aam
les
insb
int3
and
mov
cs
test
and
dec
xor
loop
vmovd
dec
scas
repnz
dec
in
iret
daa
adc
xor
lret
ja
xorl
push
std
and
xchg
pusha
addb
and
jae
lea
mov
mulb
repz
dec
xchg
xchg
jp
sbb
popa
sub
shlb
pop
insl
stc
aam
dec
popf
lds
and
fistpll
jge
lret
mov
lahf
inc
or
push
addr16
je
jp
rolb
lods
int
pop
lret
inc
or
bound
mov
loopne
pop
stc
lcall
push
lret
jns
filds
xchg
lock
fisttpl
popa
fsin
fcomi
jno
xchg
inc
loope
mov
jle
mov
push
xchg
rcrl
ret
pop
xchg
pop
test
test
pop
adc
stc
xor
leave
mov
inc
lock
jmp
gs
pop
popl
add
cmp
dec
fnstenv
mov
arpl
sbb
mov
mov
sarb
and
hlt
leave
sbb
sbb
out
xchg
repz
and
push
aam
adc
aad
sbb
outsb
das
cmp
pop
xor
jge
and
mov
movsl
xchg
lahf
aas
inc
pop
cwtl
pop
mov
or
outsb
jecxz
mov
pop
cmpsb
into
dec
jae
pop
inc
inc
into
jo
fcmovnbe
popa
dec
cmpsl
outsl
xchg
mov
dec
dec
addr16
out
mov
mov
fs
push
popa
lret
mov
repz
jns
rcrl
mov
popa
cmp
xchg
xchg
in
out
js
mov
test
lods
fidivs
loop
js
dec
mov
xlat
jmp
mov
xchg
dec
push
add
int
push
adc
dec
jne
dec
push
adcl
or
jne
xchg
inc
imull
jp
jae
pop
fdivrl
or
aam
push
stc
jb
or
jne
bound
loopne
sub
adcl
dec
lret
ret
das
dec
fistpll
sub
xchg
movsb
shlb
xchg
push
mov
dec
lahf
mov
mov
sti
cs
dec
pop
js
lahf
mov
inc
iret
insb
sub
or
aaa
dec
negl
mov
aam
call
mov
push
push
add
add
in
mov
stos
insb
int3
fiadds
inc
or
lret
bound
fstpl
jecxz
add
test
xor
or
push
inc
adcb
lret
sub
xchg
push
cmp
xchg
mov
out
add
cltd
in
stos
adc
fstps
test
aad
add
mov
rol
push
icebp
fdivs
sbb
inc
ret
push
insb
aam
dec
test
pop
inc
jno
std
inc
xor
and
out
outsb
ja
xchg
jns
enter
sbb
daa
push
sbbl
fmulp
mov
je
jne
into
aaa
jg
push
insl
stc
out
leave
lahf
xor
shr
sub
scas
inc
xor
mov
inc
mov
lea
cmpsl
and
mov
subb
fadd
ret
in
loope
cmp
popf
mov
add
sub
cld
mov
xchg
and
and
cmpsb
fldenv
cmp
add
or
mov
xor
aaa
ljmp
lret
cmpsb
dec
cmp
shrb
int3
lret
push
out
sbb
icebp
imul
pop
mov
leave
aaa
xchg
roll
inc
mov
es
push
ss
out
dec
sub
cld
outsl
xlat
mov
xchg
and
mov
scas
aas
pop
rclb
push
cmp
jecxz
jo
mov
jge
and
mov
loope
stos
popf
push
xor
xor
inc
inc
inc
xchg
popf
xor
pop
shll
mov
cs
lods
fcompl
push
sbb
hlt
xchg
mov
push
ret
fnstsw
cltd
push
sub
push
ss
dec
es
jg
dec
push
inc
pop
push
lret
ja
and
aad
clc
mov
es
mov
into
cli
push
push
add
or
mov
aas
repz
jno
iret
and
jmp
jb
pop
push
int
mov
out
scas
add
inc
push
std
sub
mov
mov
test
bound
cwtl
push
mov
shrl
pop
xchg
xor
stc
int
xor
testb
sub
cmc
clc
loopne
imul
popa
dec
jg
js
mov
cmpsl
sti
push
fsubs
xor
arpl
fdivr
push
je
mov
pop
add
mov
fwait
lea
scas
cltd
imul
orb
mov
adc
sub
pop
cltd
roll
test
loop
in
or
mov
movsl
push
mov
je
dec
xchg
dec
adc
bnd
stos
cmpl
sub
dec
push
jmp
jle
enter
push
ret
cwtl
in
int3
pop
in
lds
aad
mov
arpl
sbb
pop
mov
and
dec
adc
xchg
cmp
pop
ror
rolb
adc
into
sti
lretw
or
mov
aaa
push
les
ret
jno
jbe
cmp
imul
xor
push
ret
sahf
xchg
aam
xchg
dec
and
inc
rol
push
loopne
aaa
outsl
jl
js
int3
dec
cs
inc
lahf
fwait
roll
or
sahf
movsb
js
inc
jg
cmpsl
repz
mov
out
std
stos
push
movb
into
push
arpl
cmpl
inc
pop
repnz
data16
mov
cmp
repz
mov
mov
insb
ja
inc
ret
mov
and
popf
pop
inc
pop
lcall
cmp
jp
shr
jns
icebp
push
or
mov
push
jnp
shlb
insl
mov
add
push
ljmp
cld
addr16
aad
in
inc
and
ret
lret
cmp
and
sahf
repnz
sbb
inc
into
pop
mov
int
lret
fisubrs
hlt
cmp
add
repz
arpl
cmp
jle
in
int
push
fsubp
je
mov
js
sbb
pop
mov
aaa
mov
testl
pop
inc
sub
jae
iret
jp
mov
push
enter
lods
clc
push
push
mov
movsb
andb
dec
repnz
mov
rorl
cmp
cli
push
outsb
sti
imul
mov
sbb
push
mov
dec
sbb
and
scas
jge
fs
cmp
clc
xchg
push
mov
pop
loope
fwait
sbb
ds
jl
fistpll
xchg
ja
mov
cmp
xchg
fwait
gs
mov
add
fldcw
idivb
jbe
fwait
lea
outsb
mov
test
int
push
dec
and
jle
xor
fs
push
jns
add
cmpl
xchg
rcrl
mov
jne
dec
cmp
rcrb
push
xchg
xor
sti
lcall
int3
jne
fbstp
out
insb
inc
cmp
shrb
dec
ud2
dec
adc
out
stos
inc
into
jp
lahf
decb
inc
mov
mov
loopne
cmp
xor
xorb
or
out
mov
cmpsb
sbb
mov
xor
pop
repz
mov
les
clc
push
packsswb
mov
or
mov
xor
cli
xchg
mov
pop
imul
dec
insb
dec
in
xchg
xor
mov
dec
xorl
sub
jnp
xorb
push
jp
dec
jae
sbb
leave
icebp
push
pop
jg
sbb
jmp
in
push
sbb
icebp
xor
mov
cmp
jmp
ljmp
loop
xchg
mov
in
inc
pop
xlat
out
add
aaa
imul
testl
mov
aad
xchg
ja
outsl
subb
dec
fstpl
pop
test
mov
cltd
std
jnp
lret
push
push
xor
pusha
pushf
add
daa
out
fcomps
cmp
mov
imul
jns
ret
aaa
pop
dec
sub
jmp
jae
ret
jmp
in
inc
sti
adc
loop
push
dec
pop
add
sbb
in
lea
xchg
lret
add
sbb
lea
push
xor
cmp
push
les
ss
inc
dec
dec
in
jnp
adc
sbb
dec
push
cwtl
xor
jne
lods
xchg
in
xchg
inc
inc
cmp
push
jg
or
mov
fldenv
sub
lock
loope
stos
inc
pop
lret
lods
push
mov
repnz
push
out
inc
lock
jecxz
daa
rolb
jne
xchg
jge
xchg
les
movsb
hlt
lea
iret
repz
xchg
push
mov
pop
xchg
stos
sbb
popf
push
xchg
and
fsubr
scas
stc
xchg
or
xchg
and
inc
xchg
fiadds
in
jnp
mov
scas
jnp
mov
mov
iret
cmpsl
push
add
add
mov
mov
inc
mov
scas
pop
and
xchg
pop
jle
inc
dec
xlat
mov
push
mov
dec
pop
fisttps
gs
dec
sbb
testl
inc
icebp
ficoml
sub
out
test
jb
fwait
out
xchg
adc
lods
mov
insl
push
outsl
fistl
inc
push
nop
dec
xor
mov
es
lods
bound
fstpl
adc
insb
push
push
mov
dec
push
mov
mov
je
and
gs
out
push
ja
cs
xor
insl
push
sbb
fucomi
mov
cmp
test
into
lods
loop
xor
adc
inc
pop
fiaddl
and
sbb
movsl
jmp
xor
add
popa
cld
rol
sub
jb
and
cmc
sub
pop
xor
data16
xchg
repnz
repz
jns
mov
pop
jb
or
sbb
pop
imul
test
sbb
adc
scas
pop
push
rolb
jg
mov
popf
adc
rol
inc
mov
enter
inc
fbstp
in
pop
stc
repz
pop
clc
jecxz
ljmp
ficoml
das
dec
sahf
insb
inc
and
or
push
das
rorb
sub
lret
sbb
nop
out
fildll
pop
or
jmp
rorb
aad
xchg
dec
and
jp
shlb
cld
or
addl
adcl
add
ret
jl
push
mov
mov
jbe
cmp
dec
push
sbb
and
shl
neg
adc
fidivs
mov
add
ret
ja
popf
frstpm(287
mov
cmpsl
icebp
test
mov
mov
xchg
jns
repnz
lret
roll
cli
out
xchg
jmp
repnz
int
xchg
lret
jg
cmpsb
inc
jl
xor
jp
rorb
imul
pop
pop
mov
outsb
add
shlb
bound
push
dec
sahf
push
stos
sahf
mov
das
loope
pop
mov
test
es
lea
mov
xchg
and
mov
mov
push
loopne
jb
fs
mov
dec
xor
repz
xchg
fwait
das
jge
inc
dec
sbb
sbb
xchg
in
sub
push
arpl
mov
mov
leave
push
sub
inc
div
or
roll
pop
idiv
push
pop
int3
pop
rcrl
loop
xchg
popa
adc
cmp
lds
dec
inc
push
shrl
repnz
jg
not
xchg
mov
jmp
mov
aam
sbb
xlat
push
jno
or
cli
rcl
sub
sti
lods
mov
mov
mov
push
ret
add
fs
fs
cmp
aam
or
fisttpll
inc
out
out
cmp
int
jl
ret
loop
insl
inc
add
rcr
fisttps
mov
push
shrb
dec
fidivl
fidivl
push
sub
xchg
mov
cwtl
xor
mov
sub
jle
dec
sub
loop
fistl
jne
rorb
xchg
fwait
insb
popf
pop
jns
outsl
and
jnp
inc
stos
lahf
dec
rcll
fnstcw
sbb
scas
fdivl
xchg
jno
adc
pusha
scas
sti
cmp
jne
mov
ss
lret
mov
add
xchg
loop
shlb
enter
cmp
out
sbb
cmc
mov
cltd
lahf
sub
mov
mov
xchg
and
cmc
jge
sub
pop
jo
js
dec
mov
test
je
cmpsb
and
dec
andb
sbb
fmuls
push
loopne
das
outsb
mov
cmp
popf
cmpsb
movsl
jp
pushl
lahf
aaa
out
mov
cmp
imul
mov
fmull
mov
lahf
push
sub
push
dec
mov
xor
add
sub
jnp
mov
push
jp
mov
jecxz
stos
negl
mov
sub
inc
pusha
hlt
subps
sub
jae
xlat
cmp
pop
cmp
lea
sbb
subl
mov
nop
in
out
sbb
sbb
jae
pushf
outsl
sti
mov
bound
outsb
cmpsb
inc
xchg
sbb
repz
jnp
adc
int3
push
adc
add
repz
adc
or
jg
cmpsb
mov
xchg
mov
adc
sub
popa
mov
mov
sbb
xchg
gs
push
adc
add
cmp
mov
mov
and
add
hlt
inc
pop
ja
mov
mov
mov
sbb
cld
ret
cmp
cmp
cmp
inc
xchg
stos
sub
jge
cs
incb
dec
mov
xchg
inc
inc
in
pop
lret
idivb
sub
sub
les
cld
pop
sbb
out
aad
cwtl
sub
ds
sub
dec
mov
lcall
lahf
jb
cmpsb
cmpsb
ret
dec
dec
lret
cli
inc
xchg
shlb
lods
lret
dec
loop
xchg
mov
ljmp
jae
addr16
pop
or
fs
fcmovnb
loop
scas
in
jg
cmp
xorb
push
rolb
in
mov
insl
xlat
into
in
movsl
popa
push
mov
xor
mov
cmp
sbb
pop
mov
dec
add
and
cld
ret
shl
aas
into
jge
xlat
inc
lret
ljmp
mov
jo
sub
fs
loope
aaa
les
mov
sbb
les
fldl
pop
fsubl
xchg
push
push
mov
lret
mov
loope
stc
mov
lret
aaa
and
test
mov
insl
vpsubsw
stos
jnp
aad
mov
mov
dec
xchg
push
test
or
out
pop
gs
cld
fdivrs
xor
adc
popa
mov
push
insl
fwait
divl
shll
inc
fstpl
imul
xchg
aad
mov
std
jge
cmova
shlb
sub
in
or
pop
es
push
sahf
test
inc
dec
fnstcw
push
scas
sbb
hlt
divl
xorb
popa
outsb
xchg
clc
jne
and
push
and
aaa
mov
int3
lods
das
or
in
repnz
ret
adc
push
loopne
int3
outsb
sbb
cmp
xchg
inc
cmp
mov
aam
mov
sbb
lahf
mov
push
xor
into
int
jo
into
jb
inc
aaa
ret
or
mov
popa
outsl
sti
lea
sub
jne
or
je
mov
and
xchg
aad
push
negl
ret
inc
rol
cmp
xchg
ret
push
jns
lcall
ljmp
dec
push
or
and
jle
in
and
daa
push
dec
adc
dec
call
cmp
push
subl
lods
nop
sub
jb
scas
jne
xor
es
pop
and
and
int
mov
mov
out
push
arpl
pop
mov
leavew
mov
out
lods
pop
cld
cmp
ret
ret
cmp
fldt
js
aad
sbb
mov
fildl
pop
dec
rcr
push
loopne
xchg
inc
dec
testl
arpl
das
dec
es
mov
lahf
sub
gs
mov
ret
pop
push
shlb
lahf
adc
and
pop
push
es
sbbl
mov
inc
insl
dec
push
dec
loopne
push
mov
push
push
mov
and
dec
mov
xor
jmp
adc
and
popf
pop
pop
aad
imul
lret
gs
xchg
mov
std
and
dec
stos
pop
arpl
mov
push
mov
mov
enter
loope
sbb
mov
and
and
pop
out
rcrl
add
cmp
fucom
mov
test
lcall
ret
leave
push
and
adc
and
mov
xchg
mov
in
jns
movsl
stos
xchg
scas
scas
daa
sti
jle
push
aad
in
inc
addr16
cmp
jbe
and
lret
ffreep
pop
stos
push
loop
jl
lahf
ret
popf
loop
cmp
cmp
lock
add
push
xor
jne
jnp
jp
lea
push
repnz
dec
fsubrl
xor
mov
or
add
xchg
fwait
loope
add
out
cmp
pop
es
or
mov
lods
xor
fstpl
test
jae
mov
lret
ja
lret
in
ljmp
cmp
stc
out
cltd
div
adc
inc
paddusw
fsubl
mov
in
fnstcw
rcll
push
xchg
dec
js
pop
inc
adc
mov
leave
out
imul
imul
dec
ljmp
inc
movsb
popa
test
xlat
aas
shlb
jne
sub
and
negl
repnz
pop
dec
mov
insb
lret
add
stc
push
and
test
test
push
inc
fs
add
mov
test
xor
lods
mov
dec
out
pop
ret
push
pop
fdivl
mul
xchg
xlat
outsl
fildl
jmp
movsb
jecxz
pop
iret
mov
cmp
sub
add
mov
pop
jae
loopne
aas
shll
cld
mov
dec
adc
int3
adcl
cli
ja
negb
in
fdivrl
jne
pushf
adc
pop
xlat
sub
xchg
jge
push
cmp
int3
insb
std
xor
mov
adc
sbb
mov
cltd
dec
dec
jp
xchg
inc
lds
xorb
ds
and
test
fdiv
sbb
stc
inc
adc
and
cld
test
sbb
rol
ret
negb
repnz
jg
mov
xchg
xor
cmp
loope
bound
out
rcll
jecxz
sbb
addb
imull
insb
aam
fiaddl
addr16
push
pop
les
push
or
push
arpl
cmp
in
and
rol
shlb
mov
ja
iret
icebp
lcall
scas
xchg
out
and
jb
orl
push
imul
jb
test
out
cs
lret
je
es
loope
dec
push
shlb
shrb
insl
cmp
cltd
cmc
or
popf
sbb
xor
fcompl
ficompl
pop
addr16
movsl
negl
ret
and
fwait
dec
in
jb
icebp
movsl
sub
cmpsl
inc
mov
shl
imul
inc
out
ljmp
jl,pt
sub
leave
mulb
fstpl
add
push
inc
add
sarb
inc
push
mov
mov
cmp
cli
pop
mov
es
xchg
cmp
outsb
fldln2
cmp
and
inc
mov
xlat
incb
call
dec
std
outsl
adc
pop
stos
inc
popa
sti
xor
mov
jmp
jle
dec
sub
dec
mov
fst
pop
sbb
call
push
lds
mov
fwait
sbb
push
out
mov
sub
xchg
pop
jae
add
jno
int3
xor
jecxz
xor
add
sub
out
jge
mov
fstp
cmp
mov
lods
inc
xor
lret
push
sti
sub
or
xchg
mov
lods
lret
jne
cltd
xor
cltd
xchg
xchg
pop
mov
inc
cmp
jge
mov
shlb
pop
lahf
int
fwait
aaa
loope
mov
mov
adc
imul
inc
and
xor
sub
stos
ljmp
push
loope
pop
and
in
lahf
cmp
xchg
das
jno
xor
in
mov
push
jmp
int3
sub
scas
lret
iret
cmp
pop
jmp
pop
xchg
std
mov
cmc
add
jbe
enter
and
jle
std
and
je
fwait
xlat
xchg
adc
fistl
push
ljmp
cmc
jl
xchg
outsl
shll
shlb
dec
mov
popa
les
adc
xor
daa
sub
lea
lods
mov
and
call
fisttpl
dec
jbe
cli
push
mov
scas
mov
imul
cwtl
dec
xchg
imul
js
lcall
sub
testl
call
or
mov
std
rcrl
les
pop
jge
mov
pop
sbb
xchg
loope
jb
jb
mov
popa
mov
out
into
std
bound
or
inc
mov
jp
inc
imul
jnp
sbb
sbb
sti
inc
lret
or
xlat
jne
fisttps
jnp
adc
mov
shl
fcomp
stos
aam
jbe
repnz
dec
push
mov
test
int
fiaddl
cmpsb
ret
inc
imul
mov
fidivs
mov
cli
jb
jg
daa
push
repz
xchg
out
lods
shrl
mov
cltd
inc
mov
lret
xlat
ljmp
test
jns
in
inc
shlb
testl
pop
imul
dec
dec
das
loop
ret
pop
shrb
pop
leave
xchg
in
pushf
dec
decl
lahf
mov
adc
idivl
inc
cltd
mov
cmp
andl
cmpsb
push
dec
cmpl
shl
xchg
test
push
cmp
into
push
shrb
icebp
ret
push
cmp
mov
adc
rorl
sub
push
add
popf
cmp
roll
fidivs
mov
mov
mov
lret
or
dec
push
adc
mov
cmp
jnp
enter
arpl
movsl
loope
adc
fsubs
insb
inc
int
fnsaves
popf
jb
mov
ds
dec
cmp
std
lret
inc
popf
xor
xchg
sbb
sub
and
inc
mov
fldenv
cmp
shrb
xor
in
lcall
dec
cwtl
insb
dec
xchg
jnp
sti
in
scas
sahf
dec
rclb
xorl
adc
pop
pop
aad
insl
repnz
int
dec
mov
and
stos
into
sbb
dec
jbe
adc
mov
pop
arpl
mov
xlat
ret
jg
push
pop
mov
push
in
pop
push
mov
stc
daa
inc
push
adc
test
sub
out
jle
push
es
std
mov
leave
xor
fs
aas
jp
or
sbb
pop
fs
movsl
mov
movsb
rol
js
mov
push
jge
cmp
inc
mov
push
fsts
fcomp
testb
adc
mov
xor
xchg
test
mov
or
sbb
fidivl
dec
sbb
dec
or
mov
pop
xchg
and
pop
push
dec
push
inc
xor
pop
jnp
add
jae
xchg
cmp
es
gs
cltd
mov
push
stos
cmpsb
push
imul
mov
insb
std
sti
cld
sti
inc
jmp
popa
or
inc
or
mov
shrl
pop
into
sub
daa
sub
insl
xlat
add
jmp
jbe
jne
inc
adc
std
stc
push
add
or
mov
add
enter
lret
jge
inc
add
dec
adc
push
xchg
popf
inc
or
cmp
mov
cld
into
cmpsl
sub
mov
idiv
in
jo
inc
test
imul
mov
jae
push
aad
fildll
imull
bound
mov
mov
cmp
mov
mov
xchg
stos
mov
mov
mov
or
mov
cmpsb
jae
sbb
sub
jge
nop
push
shll
sbb
inc
jb
sub
iret
mov
jo
dec
add
mov
sti
out
stos
cmp
xchg
jbe
insb
mov
pushf
stos
outsb
mov
xorl
push
inc
push
divb
scas
adcb
ljmp
pop
jb
arpl
sub
mov
push
shrb
mov
insl
jae
xchg
imul
lcall
loope
push
dec
adc
sbb
lods
movsl
daa
lret
sub
sbb
dec
jl
mov
inc
jae
push
lret
pop
sbb
jne
push
js
xorl
inc
sbb
sbb
or
mov
je
xlat
sbb
out
fsubs
mov
pop
pop
imul
loopne
test
outsb
add
lods
push
lcall
inc
xlat
jmp
sbb
add
xchg
add
outsl
sbb
outsl
lea
fsubs
rcr
xchg
mov
cmp
leave
sbb
dec
xchg
in
adc
xchg
aad
in
adc
pop
mov
sahf
ret
lret
adc
jno
mov
sbb
xchg
fimull
ja
sbb
out
mov
and
inc
push
ret
cli
mov
aaa
or
push
xchg
xor
stos
popf
mov
je
xorl
fcoms
jg
mov
cmpsb
or
in
jne
mulb
mov
shl
pop
daa
mov
cwtl
stc
mov
or
or
xchg
dec
loopne
ljmp
push
jg
fs
adc
shlb
jp
dec
hlt
cs
or
xor
or
lret
mov
push
ds
sbb
lret
ffreep
cmp
pop
jb
insb
or
rcrb
jne
cmc
in
dec
fdivrl
inc
popa
scas
xchg
in
cmp
jle
test
hlt
pop
pop
jns
out
lods
sar
inc
inc
xorb
rcl
rolb
pop
and
rolb
jno
jle
notb
pop
mov
fucompp
popa
addb
inc
sub
mov
out
inc
fldt
adc
push
jg
pslld
mov
js
test
adc
test
inc
mov
jns
test
xchg
ds
lcall
inc
pusha
or
clc
fbld
and
inc
or
jle
push
nop
or
loop
fisttps
and
mov
daa
sub
cltd
xor
mov
aad
aas
lds
push
ror
leave
sub
xchg
mov
add
jle
xor
jo
data16
jmp
fidivrl
int3
mov
or
ret
inc
xchg
xor
adc
daa
inc
test
pop
push
roll
insl
xorb
sbb
push
pop
and
in
cmp
cmp
imul
call
or
sarb
fsubl
cltd
in
test
out
adc
outsb
push
pop
imul
in
inc
aas
pushf
jns
je
into
pop
outsl
stos
daa
pop
mov
sahf
pop
js
hlt
mov
mov
pop
push
stos
insb
jp
jnp
mov
lods
pusha
ljmp
imul
mov
sarl
mov
das
js
mov
test
add
clc
inc
xchg
data16
loop
ficompl
push
jl
adcl
cmp
add
scas
sub
xor
xlat
inc
jbe
mov
imul
aam
imull
push
addr16
cmpl
push
push
cmpsb
or
mov
mov
stos
std
mov
and
ret
cmpb
add
dec
push
cmp
fildll
ret
pop
test
cltd
pop
stos
adc
lahf
shl
in
cmp
and
mov
loope
lahf
fidivl
cs
stos
fistpl
lret
adc
cmp
lods
pushf
cmp
fiaddl
cwtl
and
iret
pusha
cmp
test
or
inc
cmp
push
notl
enter
dec
ret
mov
sahf
push
push
scas
or
jecxz
loope
clc
lea
push
pop
push
mov
inc
ljmp
cs
fbld
cmp
mov
sbb
ret
lods
xchg
jo
cmp
les
test
push
xor
fstpl
jg
in
lods
aaa
pop
fadds
xor
adc
or
cmp
shrb
lods
hlt
sbb
iret
pushf
jo
ja
or
jmp
xchg
addr16
pushf
fistpl
mov
push
add
jae
scas
js
sbb
mov
aam
dec
and
sub
clc
or
add
xor
fucom
mov
cld
sub
and
sub
jae
sbb
xchg
fisubrl
pushf
std
jle
xor
insl
or
mov
sub
xchg
cs
add
ds
add
or
lods
mov
out
jle
or
das
sbb
jnp
cmp
sbb
jne
push
js
xchg
xor
mov
sbb
dec
jnp
or
out
std
cli
pop
popf
mov
cwtl
cltd
xchg
mov
push
add
cmpsb
rorb
mov
or
pop
xor
dec
adc
repnz
push
in
filds
dec
mov
daa
jg
movsb
enter
cwtl
in
adc
jecxz
sub
sbb
adc
cmp
fs
jbe
lret
push
test
cmp
mull
dec
pop
mov
inc
mov
jle
mov
movsl
or
pop
mov
adc
or
lods
in
push
push
mov
sbb
pop
mov
fildll
rorl
sbb
pop
cmp
insl
sub
pop
xchg
pop
addr16
pop
lret
outsb
adc
cmp
loope
xchg
and
xchg
sbb
sub
mov
cmp
daa
add
arpl
rcr
push
jnp
xchg
dec
cmp
pop
rorb
mov
loopne
enter
push
xchg
cmp
mov
or
movsb
js
xchg
push
cmp
mov
or
cwtl
dec
or
fs
mov
cmpsl
push
add
fiadds
add
fisubs
addr16
or
and
lahf
enter
dec
cmpsl
in
stos
mov
pop
xchg
dec
adc
push
into
mov
jle
mov
loop
je
inc
sub
cmp
jg
sbb
movsb
mov
xchg
or
out
inc
xor
fisubrl
xchg
dec
outsb
pop
dec
cmpsl
inc
mov
add
fcomi
pop
sbb
inc
inc
or
pop
repnz
adcl
dec
xor
shlb
popa
loopne
das
leave
mov
out
or
inc
cmpsl
push
inc
mov
sbb
add
mov
dec
mov
add
sar
mov
add
sbb
cld
aaa
mov
aaa
jb
mov
jecxz
xorl
mov
filds
push
mov
cmpsl
push
in
std
dec
and
inc
or
in
sub
jnp
cmpsb
dec
mov
lods
dec
cmpsl
sub
icebp
das
sub
xorl
adc
mov
push
fs
mov
dec
adc
mov
and
addr16
data16
pop
movsb
and
jg
xor
mov
fs
fistpll
cltd
test
test
inc
mov
in
shl
insb
outsb
aas
sub
dec
inc
add
xor
inc
fistpll
ret
mov
es
jmp
scas
push
jns
mov
fwait
mov
xor
push
cwtl
fldcw
loop
sub
cmp
mov
mov
mov
push
mov
movb
mov
fimuls
mov
xor
std
cmp
stc
jle
mov
fadds
lret
or
xor
push
xlat
push
mov
inc
sbb
push
and
mov
sub
adcb
pop
ret
jns
lods
fs
push
sbbl
cmp
or
xchg
sub
cwtl
cmp
jle
pop
fimull
data16
push
jns
mov
jbe
in
fstl
dec
sbb
push
scas
fwait
sar
mov
push
mov
pop
fcompl
inc
scas
xchg
inc
adc
push
push
dec
dec
andl
mov
xchg
lods
shlb
stos
cmp
dec
push
add
fbld
sub
xor
daa
decl
cmp
popa
cmp
jle
cmpsl
or
and
xor
loope
test
xor
idivl
cmp
mov
in
data16
push
cmc
pop
push
subl
xor
test
xor
ret
cmp
sbb
cmp
cmpsl
cmpsl
std
xor
mov
addb
add
rorb
cmpsl
or
jno
sbb
mul
lret
aam
mov
icebp
push
repz
in
fsubs
cmp
or
fnstsw
inc
sahf
cmc
into
and
daa
roll
inc
and
xorb
pop
sbb
mull
xlat
dec
mov
xchg
cmpl
jmp
fidivl
lods
cmpsb
shrb
cli
mov
inc
mov
mov
mov
xlat
cmp
cltd
push
daa
sub
das
mov
jns
inc
movb
mov
popa
xchg
mov
lret
xor
insl
cmp
xchg
hlt
jl
mov
cmp
popa
mov
inc
jle
mov
push
out
add
sar
dec
xor
popf
dec
xlat
movsb
dec
dec
mov
sub
test
pusha
xchg
or
mov
dec
stc
inc
pop
jns
dec
xor
and
mov
push
adc
xor
imull
xlat
jl
sahf
adc
iret
sahf
cmpl
jmp
fidivl
cmpsb
mov
add
scas
cli
stos
dec
inc
mov
mov
mov
xlat
sub
mov
push
daa
cmp
xchg
jns
inc
pushf
mov
xor
dec
jmp
dec
popa
call
std
pop
out
inc
call
push
push
imul
sarb
mov
and
mov
mov
push
cwtl
mov
inc
dec
adc
jg
jb
cmp
mov
dec
push
lods
add
dec
aam
jle
adc
mov
add
mov
lahf
xor
xor
test
push
movl
and
shll
fldt
mov
repnz
add
in
jg
sar
pop
push
inc
adcb
enter
xor
dec
and
xchg
cmpsb
dec
push
pop
lods
mov
lahf
hlt
in
das
jge
xchg
fstps
mov
push
lret
and
jle
cmpsb
cltd
jl
cmpsb
mov
add
xchg
stos
ds
das
test
sub
mov
mov
and
imul
push
aaa
cmc
in
dec
or
mov
sbb
push
or
adc
push
in
imul
retw
pop
inc
xor
jbe
add
xor
rcl
mov
add
adcl
sti
cmp
pop
push
sub
xchg
push
scas
xchg
fstpl
leave
mov
and
mov
mov
and
mov
aaa
pop
daa
xor
in
xchg
sub
and
test
bndldx
mov
callw
pop
xchg
mov
xor
mov
movsb
sub
adc
pop
std
gs
jo
jbe
into
pop
mov
mov
and
xchg
mov
xchg
out
daa
cli
ret
cmpsb
mov
fmuls
xchg
dec
push
cmp
xchg
jle
test
xor
je
inc
sub
lods
ret
ficoms
test
and
pop
cmp
out
adc
sub
test
scas
push
shlb
mov
mov
out
mov
sbb
dec
lret
jmp
lahf
sbb
xchg
inc
xor
xlat
leave
dec
addl
into
js,pn
sbb
xor
sub
cli
mov
and
sbb
fdivrp
pop
fisttpll
call
ljmp
sub
or
jae
scas
lea
push
lods
inc
jb
jno
push
mov
and
outsl
icebp
insb
aaa
cmp
adc
inc
dec
and
or
mov
out
das
shlb
dec
cld
daa
pop
inc
xchg
cmp
pop
mov
aam
shrb
mov
loopne
jmp
inc
fstpl
in
cmp
cmp
repz
push
push
aad
int
std
adc
pop
stc
ret
mov
dec
mov
ljmp
mov
push
loop
fcmovnu
push
dec
cld
or
dec
jne
mov
cld
mov
ja
lret
loope
sub
mov
repz
ljmp
push
rorb
inc
ja
push
sbb
fnstsw
in
sbb
jo
dec
jmp
dec
push
jbe
lcall
into
stos
scas
sahf
and
sbb
xchg
dec
arpl
dec
bound
gs
sbb
dec
xchg
dec
inc
xchg
aad
es
jae
das
lods
adc
adc
push
mov
mov
fdiv
repnz
in
jl
mov
repnz
in
jns
jne
add
xor
xchg
adcl
das
inc
ja
daa
lods
mov
out
inc
lods
aam
into
push
adc
xchg
gs
xlat
jns
es
inc
fsubs
dec
add
dec
lret
in
in
xchg
pop
jl
mov
cmp
or
popa
adc
stos
aas
jl
inc
cmpb
or
sub
mov
int
aaa
xor
lea
adc
xchg
fwait
pushf
loope
testl
inc
divl
lcall
xchg
pop
mov
jnp
jle
sbb
mull
mov
push
push
or
and
or
adc
cltd
loop
dec
out
push
out
adc
xchg
mov
sbb
mov
dec
lahf
cmp
mov
xor
stos
cmp
lock
mov
sub
lods
fcomps
adc
insb
cmc
lret
lods
int3
fwait
cwtl
push
dec
push
mov
mov
xchg
loopne
filds
aaa
push
test
dec
cmp
mov
mov
xlat
dec
test
push
or
inc
mov
ds
xlat
imull
subl
adc
mov
lret
mov
add
bnd
mov
jb
mov
mov
cmp
adc
add
pop
incb
addr16
adc
fisubrl
sti
loopne
push
inc
icebp
fildll
psubsb
cmp
mov
xor
aam
leave
insl
push
mov
decl
add
pop
adc
outsl
dec
or
xlat
lret
rclb
cltd
pusha
cs
cmpsb
ffreep
out
jns
pusha
inc
cmc
arpl
pusha
mov
mov
xchg
imul
mov
dec
ja
mov
ffreep
movsl
insl
or
inc
jo
xchg
mov
push
rol
imul
xlat
pusha
push
lret
dec
rol
pop
pop
ficoms
dec
into
sbb
push
out
stc
repnz
sbb
loop
dec
insl
hlt
mov
and
rorb
push
push
stos
sub
jg
mov
jle
arpl
nop
repz
or
ss
adc
cmp
jno
imul
cmpsl
jb
xchg
addr16
inc
in
sub
mov
jnp
sbb
sbb
mov
push
xchg
push
ss
pushf
mov
lret
mov
dec
pop
or
mov
pop
jge
lods
push
cmp
lret
push
data16
push
sub
xlat
faddl
and
inc
je
lds
into
mov
push
xchg
mov
mov
xchg
lahf
mov
jo
pushf
fiaddl
push
je
fsts
sarl
or
cmp
cmpsl
sbb
scas
inc
fistpll
jmp
and
decl
mov
rcrl
dec
mov
inc
das
pop
adc
fisubs
popa
inc
fistpll
xchg
out
ja
out
addr16
xchg
pop
sub
les
pop
lock
inc
insb
pop
mov
dec
mov
xor
jo
shll
sub
fwait
stc
cmpsl
daa
jmp
jp
push
xchg
xor
adc
push
stos
jmp
fsubrp
aaa
xor
ret
xchg
test
adc
or
xchg
rorl
xchg
pop
test
xchg
jg
xor
jbe
repz
clc
lret
js
lahf
jnp
jmp
and
pop
mov
data16
push
ss
fldl
testb
mov
xchg
sahf
xchg
into
or
cmpsl
sbb
scas
inc
fistpll
jmp
xor
pop
jg
shl
movhps
loop
scas
mov
pop
jge
aas
fcoms
rcll
inc
sti
xor
es
and
inc
inc
mov
mov
sahf
jne
mov
in
xchg
mov
iret
das
dec
add
sbb
xor
into
dec
dec
add
out
xlat
int
insl
ror
pop
lcall
push
fs
mov
jp
dec
dec
jg
xlat
inc
jae
aam
je
rclb
lret
and
shrl
jb
adc
push
fwait
lahf
push
lcall
cli
iret
cmp
pusha
dec
popa
lods
mov
mov
mov
enter
pop
adc
addr16
adcl
punpckhwd
pop
push
lea
in
jb
fcom
mov
inc
outsb
sub
je
ror
js
fwait
idivb
and
mov
loope
stos
iret
mov
mov
cmp
icebp
mov
movsb
cmp
das
lods
pop
xchg
cmp
cmp
cltd
xchg
pop
outsb
ret
outsl
mov
bound
cmp
fiadds
dec
mov
cmpsb
adc
fnstcw
pop
push
xchg
sbb
popf
xor
fs
ljmp
cli
xor
lea
sub
jae
mov
pop
pop
mov
ret
or
outsl
mov
jmp
fildll
add
dec
or
iret
loopne
and
dec
adc
dec
pop
in
fldcw
push
outsb
push
pop
imul
xlat
insb
mov
mov
or
out
imul
sarb
test
loop
filds
push
mov
leave
cs
jae
dec
add
jne
add
push
push
jle
jbe
jns
int3
xor
mul
sbb
subl
sti
scas
ja
inc
imull
xlat
addr16
je
fs
enter
into
push
out
sahf
xor
jp
pop
jne
cmp
cwtl
or
fwait
cmp
outsl
mov
push
push
iret
or
data16
pop
cmp
fwait
ret
jno
imul
xchg
ret
cmp
mov
add
or
dec
sti
cmc
das
sbb
out
mov
jae
andb
pop
xchg
sub
iret
mov
sbb
xchg
loop
pop
loope
bound
imul
int3
insb
ss
adcl
mov
mov
shrl
insb
xchg
bound
pop
dec
fiaddl
jp
mov
mov
out
xor
xorl
in
fistpll
adc
pop
push
gs
fisubs
fs
mov
ja
test
loopne
fisubrl
out
push
cmp
sub
or
mov
mov
push
shll
or
add
dec
enter
call
shrl
sbb
aas
lret
aaa
imul
ss
cwtl
cmp
jmp
iret
sub
mov
add
iret
dec
movsl
pushf
adc
push
or
nop
fsubs
loope
xchg
lods
call
or
iret
add
push
mov
mov
testl
ds
stc
mov
jp
and
jge
and
push
mov
aam
data16
adc
insl
xchg
or
xchg
adc
je
addr16
out
xlat
mov
scas
xchg
jae
test
xor
aaa
imul
out
aam
jo
ror
or
in
jne
inc
jb,pn
sti
xchg
jmp
shlb
mov
mov
pavgw
or
dec
and
mov
jne
pop
sbb
pop
xor
leave
push
lahf
jmp
dec
cmp
fsubrl
ds
lret
imul
std
jle
push
int
pop
gs
inc
sti
imul
out
xorb
dec
sbb
fimull
iret
aaa
pop
push
adc
pop
call
aaa
mov
sbb
into
sub
data16
xor
xlat
mov
imul
cmpsl
mov
adc
xor
sub
lea
fsubrl
or
ds
mov
test
shrb
mov
mov
mov
or
add
mov
aas
push
push
push
clc
or
push
lcall
jge
andb
loop
pop
or
int3
fiaddl
lret
push
xor
outsl
add
jbe
or
jl
lods
test
lods
aam
aaa
xor
iret
je
cld
clc
loope
bound
out
or
mov
xchg
rolb
cmp
sar
mov
stos
or
outsb
bound
push
xor
sbb
fisubrs
push
pop
xchg
inc
push
cltd
sbb
cvtps2pd
lret
dec
fbld
mov
shl
mov
xchg
iret
mov
push
inc
andl
test
sub
add
add
push
cli
ja
inc
repz
cmp
mov
sbb
dec
into
in
push
sbb
bound
mov
leave
dec
pusha
stos
filds
mov
pushf
xchg
push
out
sub
adc
imull
jo
pop
js
cs
ficomps
jo
or
sbb
add
fbld
adc
aaa
ljmp
cld
pop
xor
mov
or
loope
outsb
repnz
pop
dec
add
in
fildll
movb
inc
add
loope
push
xlat
xor
inc
or
jo
scas
pop
adc
into
jno
xor
add
movb
outsl
ja
popf
pop
xlat
out
je
insl
cltd
out
and
xlat
jns
imull
jbe
out
ss
mov
mov
pop
and
out
mov
inc
sub
jge
xchg
pop
out
xchg
mov
aaa
adc
cmpsb
insb
push
jmp
das
dec
mov
adc
jg
test
popa
jb
xchg
pusha
cmpsb
sahf
lods
outsb
xchg
inc
push
add
insb
dec
mov
cvtps2pd
jecxz
adc
cmp
push
mov
into
pop
dec
lock
mov
test
pop
js
push
outsb
mov
xlat
adc
xor
ret
push
aaa
pushf
dec
lods
sub
cs
mov
pop
lret
daa
jb
mov
cmc
and
out
insl
lds
mov
dec
loop
aad
pop
jg
ret
dec
and
sbb
push
adc
icebp
jg
mov
lea
sbb
push
hlt
mov
mov
inc
imul
adc
mov
dec
push
mov
fistpl
dec
mov
outsb
out
mov
push
les
into
jmp
jo
popf
jnp
jmp
cmp
fadds
jne
xlat
mov
iret
mov
std
jo
sbb
adc
clc
fists
jge
test
inc
jne
daa
shl
repz
gs
ljmp
dec
adc
jne
enter
iret
push
inc
roll
mov
ja
fidivrs
pop
xchg
es
sbbl
fiadds
js
mov
in
pop
add
hlt
sub
cmc
mov
pop
aam
push
jge
out
push
inc
test
xchg
mov
stc
dec
push
xchg
clc
ss
test
jne
inc
insl
jnp
jmp
and
mov
in
mov
outsl
cmp
push
sub
les
into
loope
pop
sbb
bound
jnp
out
mov
dec
sbb
adc
ljmp
js
xlat
dec
je
jmp
sub
into
inc
fldcw
fimuls
pop
sub
pop
pop
rorl
in
pop
sub
mov
ret
clc
loopne
pop
sub
les
rcrl
sbb
fucomip
aad
xlat
lea
test
jge
xchg
mov
mov
hlt
or
mov
sarb
pop
jg
jmp
jge
xchg
mov
stc
dec
pusha
xchg
cmp
mov
sbb
aam
fists
aad
dec
jmp
and
sti
add
dec
mov
cmp
xchg
mov
ds
test
mov
popl
shll
nop
cs
call
push
and
data16
mov
out
sub
xor
outsl
sub
int3
int3
pop
sbb
in
lret
add
stos
cmp
jae
mov
popa
cmpl
insl
subb
out
mov
aaa
gs
cmp
xchg
or
mov
mov
syscall
dec
lea
adc
mov
push
or
fsubrl
popa
insb
ret
or
push
out
fwait
adc
or
dec
jne
jb
cmpsl
cmpsb
jo
xchg
test
scas
dec
stc
adc
outsl
test
or
sub
fidivs
dec
cmp
or
imul
and
punpcklwd
mov
dec
dec
xchg
icebp
inc
sbb
adc
aaa
mov
pop
or
sub
push
ret
ds
xchg
jnp
inc
cmp
inc
sbb
test
and
insb
out
mov
ret
xchg
lods
pop
mov
ret
inc
cmpb
dec
cltd
xchg
out
jno
sbb
inc
mov
fcmovne
pop
es
fstpl
cmp
jo
lahf
cli
pop
jp
pop
xor
mov
sbb
test
pusha
test
es
movb
and
orb
sbb
rcrl
dec
push
jmp
sbb
ljmp
js
ret
enter
scas
and
movsl
xchg
cmp
inc
test
imul
mov
pop
call
cli
ret
loopne
mov
dec
xor
add
sbb
push
cltd
test
jecxz
ret
dec
xchg
and
add
jns
push
es
ljmp
pop
fwait
mov
xor
xchg
or
test
ds
inc
loope
push
or
in
dec
xchg
mov
push
fistpll
sbb
lods
rcrb
inc
sahf
xchg
addb
push
cmp
lcall
dec
lret
mov
icebp
push
imul
lahf
push
or
xchg
push
add
or
arpl
dec
cmp
push
das
xchg
aad
sbb
mov
les
add
bound
mov
js
addr16
pop
notl
and
popa
les
cwtl
dec
sub
addr16
push
mov
and
adc
movsl
mov
jmp
push
mov
sbb
stc
fwait
ret
cmpl
xor
repz
push
dec
andl
sbb
lahf
fcmovb
mov
out
sbb
cwtl
adc
cld
xchg
adc
and
inc
or
pushf
jae
scas
add
sti
mov
cli
xor
push
sbb
mov
cmp
bound
sub
scas
xchg
xchg
or
das
fsubr
xchg
arpl
push
arpl
push
add
pusha
cmp
lret
fst
cmp
inc
test
jl
mov
mov
in
sti
xor
mov
dec
sub
push
in
fisttpl
push
cli
std
lcall
jbe
stos
mov
xchg
mov
sti
cs
dec
push
cmpb
movsl
mov
inc
xchg
mov
pop
or
inc
xor
mov
jge
mov
mov
inc
mov
test
mov
lods
jnp
roll
arpl
gs
or
and
test
cmp
test
test
sbb
jmp
ljmp
loope
addr16
lcall
push
inc
jno
dec
lods
icebp
sarl
sti
sbb
mov
aaa
sub
movsb
sbb
push
push
or
xchg
cmp
pop
test
sbb
fists
add
push
inc
into
enter
fldcw
sub
push
or
jecxz
lods
pop
jae
dec
into
xchg
pop
scas
into
dec
dec
adc
cld
pop
lret
frstor
mov
pop
jae
cmpb
or
xchg
test
or
mov
popf
or
lods
cmpsl
xor
jp
jbe
mov
stc
sbbl
push
std
into
mov
andl
pop
insl
incb
jle
xlat
cmpl
out
dec
mov
push
dec
mov
mov
jns
sti
jge
lret
cmc
repnz
sbb
xchg
cmc
mov
cmc
mov
cmp
mov
push
pop
push
int
dec
push
std
cmc
jl
in
cmc
insb
push
popf
cmc
sbb
cmc
or
mov
cmc
sub
pop
pop
fsubr
dec
dec
int3
call
insl
dec
in
call
or
dec
mov
call
jmp
dec
sbb
mov
out
push
fsubrp
das
dec
mov
sti
sub
mov
fwait
push
dec
push
shlb
cli
adc
push
test
xor
pop
sub
lea
hlt
lea
sub
addr16
gs
adc
fcmovne
dec
inc
std
int3
sub
int3
cmp
scas
int3
cmovne
repz
imul
inc
ja
lods
inc
add
mov
int3
xchg
iret
data16
aad
push
xor
sti
xor
mov
cli
dec
jl
cli
or
sub
push
sub
sub
sub
lea
sub
push
call
mov
popfw
out
xor
jmp
dec
adc
cwtl
push
adc
push
cltd
push
mov
ljmp
and
mov
pop
hlt
pop
sub
scas
movsb
aas
sub
dec
dec
jecxz
pop
inc
test
and
mov
in
outsl
mov
mov
xor
pop
mov
mov
sub
push
add
push
sub
stos
push
fcomi
pop
push
iret
cmc
inc
push
out
sahf
sti
cs
pop
call
mov
mov
mov
push
in
sbb
andl
add
insb
pop
loope
cli
cli
aaa
pop
mov
jl
loop
jge
push
enter
repz
dec
in
push
dec
mov
and
jmp
lods
addr16
push
daa
repnz
cmpsb
push
pushf
mulb
push
dec
idiv
push
insb
negb
lock
rcl
imul
pop
xor
out
sbb
out
adc
xchg
je
mov
iret
imul
mov
add
repz
sahf
rcll
add
sub
rep
push
sub
movsb
jae
scas
movsb
adc
dec
mov
ret
lods
dec
add
lcall
js
icebp
in
js
icebp
pushf
js
icebp
lods
js
icebp
dec
js
icebp
bound
imul
push
or
push
outsb
and
out
leave
push
dec
xchg
sub
pop
call
push
mov
icebp
jp
cmpsb
not
push
sbb
repnz
push
movsb
xorb
cltd
or
cmpsb
push
sub
inc
adc
cwtl
js
xlat
lahf
pop
jl
aas
jmp
call
les
inc
mov
incl
jb
xchg
push
push
popl
cmp
jge
jecxz
adc
andl
movsb
xchg
adc
negb
push
cmp
mov
daa
icebp
subl
mov
sub
push
or
daa
outsb
adcl
daa
and
movsl
sub
icebp
push
cli
les
hlt
pop
jne
in
or
add
add
inc
xchg
out
or
lret
icebp
gs
icebp
jne
stos
icebp
add
js
repnz
pop
push
fsubrl
dec
int3
sub
cld
sub
in
sub
sbb
sub
sbb
aad
insl
retw
bnd
cmc
adc
xchg
cmc
add
test
xor
mov
and
movsl
dec
out
push
in
pop
push
out
adc
out
aad
dec
lock
push
out
cmc
cmp
js
stos
cli
pop
cltd
idivb
adc
hlt
ja,pn
pop
jp
dec
cli
into
sub
push
out
and
lahf
xor
scas
add
mov
data16
pop
data16
out
outsl
shr
jo
scas
push
sub
andl
sub
push
test
out
mov
bndstx
and
out
dec
data16
pop
data16
out
outsl
shr
shr
pcmpgtd
out
das
pop
andl
insb
popa
inc
jno
out
int3
inc
inc
dec
push
inc
cmp
inc
lahf
cmp
movsb
cmpsl
sub
push
sbb
pop
js
icebp
sbb
icebp
adc
icebp
sub
daa
push
push
cmpsb
mov
push
cwtl
repz
cwtl
mov
addr16
adcl
jno
pop
dec
mov
call
mov
inc
jg
fldl
lret
insb
imul
dec
mov
dec
dec
pop
and
ret
cmp
inc
xor
ret
or
adc
scas
push
js
icebp
arpl
icebp
jnp
shl
jae
test
clc
enter
js
icebp
fistpll
icebp
xlat
js
repz
fcoms
icebp
xchg
js
icebp
stos
js
icebp
mov
js
icebp
inc
js
icebp
jg
ja
aad
vmread
icebp
pop
js
clc
enter
ret
js
icebp
fstpt
icebp
sarl
icebp
jmp
inc
icebp
repz
icebp
stos
js
icebp
mov
js
icebp
mov
jmp
icebp
jnp
aad
vmread
icebp
pop
js
icebp
pop
jp
inc
sub
inc
lret
repnz
cli
sub
xlat
sub
lea
sub
lea
sub
lea
rorl
adc
xchg
lea
sub
lea
sub
scas
push
testb
call
jae
out
jno
inc
repz
cmpsb
push
daa
mov
push
push
xlat
mov
inc
push
mov
add
xchg
xor
mov
jbe
scas
fisubl
pop
push
push
push
push
loop
addr16
ljmp
lea
sub
lea
lret
lea
ret
lea
sti
lea
repz
lahf
lea
sub
cltd
sbb
adc
in
lret
adc
icebp
inc
arpl
call
or
mov
cmp
mov
xchg
xchg
int
addr16
lds
jg
fstpl
ja
cmc
push
adc
ror
repz
cmc
ficoms
cmc
push
dec
cmc
into
push
outsl
cmc
xchg
cmc
mov
cmc
mov
aaa
cmc
mov
xchg
in
das
jmp
fs
frstor
sub
xchg
shll
jns
fstpt
icebp
sarl
ja
mov
cli
sahf
pop
or
mov
scas
pop
fdivrp
push
pop
mov
outsl
cmpsb
rolb
out
add
mov
fs
cwtl
cli
add
push
pop
xchg
sub
lea
sub
lea
sub
lea
sub
lea
sbb
sub
aad
int3
out
push
mov
sbb
stc
push
orb
rcll
jne
jmp
push
sub
add
out
cmp
arpl
fs
inc
mov
loopne
xor
push
pop
ret
cmc
test
movsb
mov
push
pop
cld
push
arpl
mov
and
daa
aam
sbb
loop
int3
add
lret
scas
push
popa
adc
mov
aas
cwtl
mov
enter
sub
loopew
adc
fadds
adc
addl
mov
and
dec
scas
ret
push
dec
mov
or
daa
xor
or
push
pop
sar
jne
movsl
xchg
pop
push
jnp
cmp
cmpsb
lea
bound
cwtl
clc
adc
lahf
pusha
sahf
jns
mov
mov
or
mov
mov
in
pop
mov
int
mov
jnp
in
push
sbb
out
sub
xchg
cmp
dec
dec
push
aam
pop
jecxz
fadd
dec
inc
out
push
push
mov
gs
xor
leave
xor
mov
xor
adc
xlat
jne
inc
ret
rclb
test
repnz
sbb
sarb
sbb
and
and
cwtl
or
mov
loop
int3
daa
inc
scas
xchg
adcl
dec
pop
movsb
shrb
aaa
movsb
test
jmp
pop
out
movsb
jb
mov
loopne
ret
jbe
loop
sub
sbb
shll
mov
pop
pop
faddl
adc
popf
fst
stos
cwtl
lea
and
pushf
adc
cwtl
scas
adc
cwtl
imul
cwtl
arpl
fstps
sbbl
fildl
das
xor
rcll
pusha
jl
mov
lcall
adc
pop
xchg
arpl
mov
mov
adc
sbb
outsl
push
bound
jecxz
push
sub
cs
scas
cltd
xor
xchg
mov
icebp
fstpt
repz
int
cli
aad
out
inc
sub
or
mov
push
iret
in
cltd
pop
inc
ja
aad
or
ja
pop
sub
jmp
imul
or
sbb
orl
xchg
push
pop
pop
gs
fs
cmp
out
mov
ja
out
data16
jno
mov
out
sub
lock
shl
dec
dec
lret
dec
out
pop
das
dec
mov
adc
lods
sbb
and
filds
xchg
cli
or
sub
fistpl
mov
dec
lahf
jae
lret
std
dec
push
ret
cmc
dec
outsl
ret
int
addr16
lds
leave
pop
iret
insl
lea
stc
jp
dec
pop
lcall
cmc
fs
in
adc
xchg
cmc
add
test
xor
mov
and
movsl
out
aam
push
inc
rorl
jne
push
cmc
push
mov
mov
cmp
out
mov
jecxz
pop
js
icebp
insl
js
icebp
jge
shl
or
js
repz
movsl
stc
aam
push
les
inc
hlt
sub
mov
push
adc
stos
andb
jmp
inc
int
push
mov
sub
stos
movsb
add
add
imulb
push
faddl
adc
imul
fs
cwtl
xchg
xor
pop
xchg
hlt
pop
cmp
xchg
pop
leave
sub
mov
xor
stos
orl
inc
das
orl
sbb
fidivl
inc
addr16
enter
inc
jp
mov
pop
paddsw
cmp
lret
adc
out
cli
insb
pop
pushf
dec
or
gs
std
fs
xchg
testb
mov
pop
mov
sbb
dec
mov
mov
adc
jecxz
push
add
pop
stos
mov
and
mov
int
cmp
minps
bound
jb
lods
xor
sub
popa
es
out
inc
xchg
bt
mov
sub
sti
movsb
push
pop
inc
ds
repnz
sub
inc
inc
roll
loope
aad
icebp
mov
aam
inc
sub
sar
cmc
jo
sahf
cmc
sbb
ljmp
das
jecxz
shl
or
stos
testl
adc
idivb
outsl
bnd
enter
out
sub
or
mov
xor
mov
push
lea
adc
mov
pop
jp
xor
out
pop
pop
sub
lock
loope
pushf
pop
add
pop
int
lahf
inc
lock
lock
icebp
dec
inc
loopne
fsubr
mov
push
scas
pop
xchg
xor
adcl
pop
mov
repz
adc
sbb
mov
ljmp
xor
divb
push
imulb
fildl
loope
std
pop
cli
popf
pop
subb
mov
shrl
mov
int
dec
mov
loopne
sbb
aas
sbb
ror
or
push
stc
std
cli
jl
in
subb
pop
aas
jg
jecxz
jnp
inc
mov
push
popf
rcll
ret
pop
test
mov
sub
or
iret
shll
cmc
outsb
cli
jecxz
xlat
daa
xor
mov
or
pusha
in
fcmove
je
lods
xor
popa
pop
xchg
sti
xor
lds
cmpl
dec
push
repnz
icebp
aaa
xor
push
push
shl
push
sbb
in
iret
jle
mov
fucom
cltd
mov
ret
mov
out
ss
js
repnz
pop
dec
ljmp
inc
pop
nop
jne
inc
idivl
push
push
push
rorb
inc
pop
jbe
mov
xor
dec
arpl
sbb
daa
fnstenv
xor
test
push
int
sbb
pop
xchg
jge
add
jae
sbb
out
jno
and
mov
or
adc
movsb
dec
sub
stc
fistps
mov
dec
adc
sub
mov
das
cmp
push
es
adc
mov
xor
int
lahf
sti
fisttpll
aam
jp
lods
adc
adc
or
push
mov
ljmp
pop
dec
call
jne
inc
jg
mov
pop
ja
out
das
data16
aad
push
ret
call
aaa
cmpsl
iret
ss
gs
cmp
sbb
mov
pop
es
shll
mov
add
mov
jecxz
outsl
inc
mov
popa
push
xchg
sub
ja
outsb
ja
stos
xchg
test
imul
mov
data16
out
dec
repz
ret
jns
jmp
cli
add
icebp
imul
cwtl
out
inc
cwtl
std
push
sub
popa
adc
mov
ss
push
mov
mov
jne
negb
cmp
ss
addl
in
inc
les
push
lea
repz
sti
push
test
lcall
dec
inc
push
inc
rolb
jp
xchg
jne
les
addr16
repz
and
out
outsb
fmul
mov
pop
es
or
sbb
dec
data16
or
sub
and
adc
xor
push
push
rcrl
pop
cmp
cmp
mov
icebp
adc
leave
lahf
insb
out
jns
and
int3
mov
fildll
dec
mov
xchg
push
sbb
dec
in
ret
or
ret
adc
dec
push
les
fildl
loop
out
out
pop
jnp
les
stos
stos
adc
mov
xor
mov
and
pop
mov
xor
push
cli
pop
fdivs
cs
je
out
push
inc
mov
pop
aas
aaa
ljmp
imulb
push
jnp
out
pop
mov
sub
xchg
es
lods
arpl
dec
mov
mov
xor
mov
push
fcomps
fldcw
or
cmpb
and
lock
xchg
sti
jp
mov
cld
jge
insl
lock
bound
push
ret
scas
mov
out
fnstcw
call
push
push
mov
stos
mov
xor
pop
push
stc
pop
fs
xchg
sub
mov
in
aaa
sub
inc
out
jmp
out
mov
xchg
jmp
dec
clc
inc
mov
test
push
gs
clc
adc
jmp
call
mov
cld
mov
lds
jle
outsb
clc
add
repnz
mov
out
sarl
mov
sbb
mov
daa
mov
xor
lods
or
in
pop
int3
lock
or
inc
pop
dec
xchg
cmp
scas
ret
cmovno
mov
xchg
and
dec
fists
lret
sbb
test
test
push
cwtl
mov
cmp
test
lea
loop
into
mulb
out
sbb
mov
aad
jecxz
push
fcomps
pushl
cmpsl
xor
mov
int
sbb
push
xor
sbb
xlat
data16
dec
push
rcl
in
cmc
insb
push
loopne
sbb
repnz
or
scas
xchg
daa
dec
push
hlt
pushf
sbb
stos
sub
divl
fisttpll
mov
pop
or
rep
add
pushf
sbb
mov
pop
sub
push
ss
xchg
xchg
js
jmp
push
dec
jg
rorl
ret
movsl
dec
sbb
xchg
addr16
rol
pop
aas
dec
dec
cmp
icebp
pop
jle
in
fs
inc
push
mov
fists
pop
int3
scas
sbb
into
cli
stc
jae
mov
pop
push
movsb
jge
sub
movsb
jl
movsl
movsb
sub
loopne
int
lahf
rcrl
inc
out
mov
out
mov
lret
ficoml
sti
lahf
jle
mov
adc
xrelease
js
push
pop
pop
push
cld
push
sbb
inc
ljmp
sub
test
shrb
adc
nop
dec
add
lock
out
out
insl
jns
cmpsb
mov
mov
sub
sbb
movsb
imul
mov
stc
push
negb
xchg
mov
and
ja
icebp
sbb
loopne
negb
pop
stos
sbb
pop
push
testb
or
outsb
fcompl
mov
fwait
stc
addr16
or
testb
arpl
push
cmpsl
cltd
sti
sbb
aad
scas
dec
inc
loopne
cmp
sbbl
mov
push
or
sbb
les
jne
adc
jns
sub
mov
outsb
pusha
jle
mov
repz
imul
mov
iret
stos
fstl
movsb
call
notl
divb
inc
mov
pop
push
imul
jle
test
insb
loop
mov
pop
dec
pop
shrb
fisttpll
aaa
mov
inc
pop
int3
into
inc
jge
nop
inc
lret
insl
data16
mov
dec
mov
mov
out
sub
insb
inc
aaa
pop
into
add
ljmp
push
call
xchg
cmp
add
push
fmuls
imul
stc
data16
sub
loopne
js
mov
xor
mov
lds
ljmp
stos
movhps
cwtl
mov
clc
cwtl
insb
adc
cwtl
push
push
add
inc
cwtl
xor
and
mov
mov
aas
loope
std
negb
call
jae
xchg
gs
cmp
jno
push
enter
add
lahf
fnsave
push
addr16
mov
aas
xchg
shl
adc
fcomps
and
imul
sub
fmul
popa
js
aam
mov
lods
sub
cmpsl
js
lahf
sti
add
inc
outsl
jmp
dec
xchg
sub
push
sub
push
aas
int
add
mulb
mov
movsb
xchg
mov
adc
add
mov
xchg
mov
ret
lcall
mov
icebp
mov
mov
movsl
push
jnp
lods
sbb
int3
and
push
mov
adc
push
gs
popf
aas
les
cmc
xor
jnp
js
fdivrs
xchg
push
pop
adc
jmp
fs
jbe
test
loopne
ret
and
test
push
and
leave
scas
pcmpgtd
lock
cmc
add
cmpsl
pop
push
les
inc
dec
lahf
addl
lea
addr16
push
and
or
jmp
mov
mov
mov
adc
mov
fucomi
sahf
jns
cmp
icebp
add
outsb
cmpsl
xchg
stc
cmp
sub
fldt
les
jmp
inc
enter
pop
jno
mov
imul
outsb
cmc
test
cmc
mov
pop
push
scas
xchg
sti
cmpsb
mov
cltd
cli
fmul
dec
pop
cmc
mov
rorl
out
fdivr
inc
dec
ljmp
inc
sub
xchg
addr16
fstl
out
pop
push
jno
out
adc
jno
add
inc
push
jg
testl
dec
xor
arpl
lods
mov
mov
inc
adc
mov
lea
xor
mov
jp
add
pop
jb
dec
mov
xor
pusha
je
daa
add
or
out
add
push
popa
adc
mov
in
xchg
inc
fldenv
pusha
ret
fs
lret
das
sub
insl
xchg
fistps
add
fstp
fs
dec
and
mov
das
xlat
inc
ljmp
push
jmp
add
lret
roll
cli
pop
pop
int3
sti
inc
sbb
dec
push
cld
cmc
jno
dec
push
cli
das
cmc
and
cmpb
xor
mov
pop
out
mov
xor
xor
pop
lret
rep
fadds
mov
jnp
ss
lea
lea
push
in
jp
xchg
stc
sbb
inc
fsub
test
and
dec
sbb
mov
fbld
inc
dec
and
xchg
xchg
test
push
repz
daa
stos
sbb
pushf
push
ret
int3
in
pop
push
jmp
leave
xor
xchg
dec
xor
pop
clc
insl
clc
pop
pop
repnz
int3
mov
int
mov
push
mov
mov
cmp
pop
xor
call
jge
lds
popa
dec
enter
icebp
pop
js
bnd
iret
or
push
push
push
shrl
push
sub
and
mov
mov
push
push
enter
ljmp
ja
jg
imul
jle
xor
sub
pop
icebp
dec
jp
jbe
test
fstps
jp
rcll
xchg
das
sub
xor
enter
push
and
mov
loop
fldl
inc
arpl
push
sub
mov
push
push
movsb
out
add
adc
pop
in
sti
outsl
aaa
mov
jmp
rorl
jbe
addb
cwtl
dec
jp
loop
ds
addr16
outsb
dec
lahf
mov
imul
adc
aas
inc
pop
mov
mov
lret
mov
sub
xchg
out
cmp
inc
cmc
lock
leave
pusha
xchg
call
adc
jb
xchg
jg
mov
adc
cmp
cmp
jnp
sar
dec
or
loope
push
ljmp
dec
mov
xchg
roll
cld
mov
inc
cmc
dec
cmp
xchg
push
shrb
icebp
jnp
xchg
adc
xchg
ljmp
fdivs
test
push
popf
inc
dec
clc
sbb
pop
inc
imul
and
in
push
push
mov
push
aad
sub
xchg
es
xchg
xchg
or
insl
jno
enter
dec
pop
cmc
stos
loopne
cmovno
cmp
xchg
loope
cwtl
add
lds
rorb
jp
loop
push
jg
mov
xlat
jecxz
lods
xor
xor
dec
popf
add
sub
and
sbb
imul
pop
int
mov
jmp
fcmovu
jecxz
fmuls
enter
jmp
aas
push
xor
or
pop
daa
aam
in
cld
scas
xor
mov
and
and
shr
fisttpl
call
sti
dec
jp
jmp
dec
ljmp
pop
xor
dec
faddp
andl
js
addr16
inc
cli
cs
pop
mov
flds
int3
fmull
cltd
rclb
scas
dec
mov
push
fidivrl
pop
stc
in
mov
lret
jmp
rol
cmc
jbe
sti
cltd
loopne
enter
jp
inc
jno
sti
adc
sbb
lods
jecxz
adc
test
dec
insl
cwtl
adc
xchg
xchg
dec
mov
fsubrs
daa
incb
pop
push
icebp
pop
dec
xchg
sbb
and
pop
fldl
mov
inc
sub
aad
sti
stos
mov
jnp
jge
xchg
loope
pop
loop
lea
jns
pop
cmpsl
sub
stc
and
add
outsb
dec
test
jbe
mov
mov
outsb
stc
scas
add
mov
jnp
scas
jecxz
adc
aas
jmp
imul
sub
imul
adc
fldt
pop
and
inc
loopne
sub
mov
nop
bound
test
outsl
rol
adc
loopne
das
sarl
add
data16
xor
les
xchg
sahf
pop
into
xchg
hlt
das
lret
aaa
add
loop
push
fldz
dec
cmp
add
inc
jge
sbb
leave
fdivs
add
xchg
mov
push
imull
fld
daa
cs
xor
insl
in
xor
jb
cmpsl
add
dec
push
cmp
das
in
loopne
pop
push
movl
jns
mov
dec
inc
mov
and
ffree
vmread
adc
xchg
negl
push
lahf
out
fbstp
cmp
ss
mov
sbb
mov
es
into
sub
mov
ss
shrl
push
hlt
into
mov
sbb
aad
mov
mull
dec
ds
ret
mov
add
add
xchg
outsl
jo
repz
sub
stc
sub
filds
push
lock
cmp
loope
mov
into
sub
test
ficompl
mov
jnp
cmp
movsl
movsl
shrl
push
sbb
cmp
out
push
cld
les
xchg
xor
pop
test
mov
or
out
aad
mov
popa
movsl
in
pusha
push
jb
add
mov
push
jmp
or
test
pop
push
lret
and
enter
in
jge
lret
xlat
pop
add
out
lock
dec
mov
call
mov
ret
add
cltd
cmp
and
cli
mov
sti
inc
cmpsb
push
inc
iret
cmpsb
push
test
sub
sub
jp
pop
cmc
aad
jmp
imul
daa
inc
sar
testl
mov
sahf
push
ja
rclb
jne
lret
aad
pusha
ds
inc
sti
mov
or
xchg
maxps
dec
call
xor
sub
incl
pushf
mov
xor
jo
cmc
icebp
dec
jnp
and
repz
jne
inc
cmp
mov
xor
testb
imul
aad
xchg
mov
fistpll
inc
push
jmp
or
pop
mov
or
jns
mov
push
cli
int
mov
daa
inc
icebp
inc
in
gs
cwtl
inc
negl
int3
xor
dec
daa
jecxz
xor
inc
rcll
push
insb
test
push
shr
rorb
mov
out
push
pushf
xchg
cli
pop
loop
xchg
and
and
jne
or
inc
pop
inc
xchg
test
jns
cmp
jmp
out
xchg
mov
lret
ret
fs
mov
enter
pmaxsw
add
sub
mov
cli
repz
and
aaa
sub
push
cmpl
cli
mov
jl
fnstenv
pop
shl
inc
add
movd
fwait
test
dec
es
js
idivb
cltd
adc
cmpsb
imul
inc
lret
jnp
pop
inc
inc
and
aad
dec
in
dec
xchg
or
mov
mov
pop
cmp
pop
mov
daa
xchg
jnp
shlb
movsl
mov
out
addl
or
cs
jg
mov
mov
mov
mov
cltd
jns
std
loopne
stc
stc
sbb
push
sar
sbb
pop
test
enter
mov
test
mov
push
cmp
xor
sti
mov
cmpsl
das
test
out
add
stos
jae
mov
call
bound
inc
and
adc
out
imul
inc
les
sbb
dec
mov
sbb
scas
jmp
adc
repnz
push
pop
cmp
cmpsl
mov
and
fucomip
out
pop
test
mov
pop
xchg
jns
rclb
pop
adc
pop
mov
jge
push
cltd
negl
lcall
mov
shll
out
lods
pushf
fs
push
shll
adc
inc
sub
inc
push
clc
les
pushf
das
inc
and
inc
stc
xchg
xchg
or
mov
daa
sub
mov
popf
or
push
xlat
pop
imul
dec
fadd
fsts
lock
sub
mov
je
cmp
stc
in
stos
xchg
je
pop
mov
cmp
out
mov
xor
jge
add
pop
in
movsl
ja
popf
xchg
ja
fstpt
cmp
jmp
data16
in
sahf
add
sbb
test
mov
cmp
lret
test
adc
fnstsw
jecxz
testl
stc
inc
test
xor
les
leave
rcl
jb
testl
das
fadds
out
cmpsl
sub
ss
cmp
xor
inc
es
jnp
popa
inc
pop
push
clc
push
mov
push
jae
and
pop
xor
test
stos
cmp
cltd
out
cmp
pop
add
sub
push
inc
lahf
icebp
and
xchg
jne
in
mov
xor
in
rolb
call
pop
sub
sub
not
neg
test
test
add
neg
inc
or
add
shr
and
call
lcall
xor
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
shl
sub
xchg
mov
add
or
sub
xor
or
add
movswl
jmp
lcall
ret
or
adc
neg
shr
or
or
movzbl
xor
mov
jmp
lcall
xor
add
add
pop
xor
xchg
push
xor
bsf
neg
inc
bt
or
xor
bts
add
call
lcall
incl
ret
neg
sub
bts
movswl
movzwl
cmp
mov
adc
neg
inc
xor
jmp
lcall
mov
mov
cmp
bswap
or
add
shl
neg
mov
mov
xchg
push
push
xchg
dec
add
add
call
sub
cmp
test
and
test
not
shr
cmp
mov
add
mov
or
add
sub
inc
bt
test
test
mov
shl
sub
xchg
mov
shl
movswl
shr
and
test
mov
or
mov
cmp
jmp
lcall
ret
or
btc
adc
mov
bts
and
cmp
inc
shl
call
lcall
add
xorl
pop
xor
xchg
push
test
shl
movsbl
shr
cmp
or
and
jmp
lcall
stc
add
xchg
ret
neg
sub
test
not
test
shr
movzbl
btc
test
cmp
shl
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
mov
test
add
cmp
btc
or
test
adc
jmp
lcall
push
add
adc
jmp
test
mov
neg
test
not
neg
adc
add
mov
sub
adc
inc
shl
not
xor
btr
bts
call
lcall
add
adc
adc
adc
adc
cmp
sub
mov
test
call
lcall
push
add
sbb
testl
cs
push
add
shl
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
add
cmp
mov
bt
or
adc
adc
bt
call
lcall
iret
pop
cmp
cmp
bts
and
add
xor
bts
add
jmp
lcall
mov
lret
mov
or
cmp
sub
mov
not
cmp
add
bsf
add
adc
or
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
push
or
mov
bsf
add
cmp
and
xor
push
shr
adc
shr
cmp
bswap
adc
sub
shr
add
mov
btr
or
bt
bts
btr
cmp
cmp
btc
add
mov
xor
mov
not
and
sub
btc
test
shl
jmp
lcall
and
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
xor
cmp
shr
shr
add
sub
dec
call
lcall
add
btc
xor
sub
adc
test
cmp
btc
mov
add
cmp
shr
bts
or
add
cmp
and
movzwl
movswl
sub
mov
cmp
cmp
adc
xor
bts
adc
btr
call
lcall
mov
bswap
bts
add
movzbl
mov
test
bswap
shl
sub
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
movsbl
cmp
test
bswap
xor
mov
sub
test
shr
btc
and
bsf
adc
mov
test
shr
jmp
lcall
shr
and
or
adc
shl
xor
movzwl
mov
add
dec
test
movzbl
shr
and
or
adc
inc
call
lcall
add
test
cmp
and
mov
cmp
add
sub
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
cmp
adc
xor
test
test
bts
sub
mov
btc
inc
adc
cmp
sub
cmp
sub
inc
movswl
xor
cmp
sub
bt
or
neg
mov
mov
add
and
or
xor
bsf
bt
movsbl
sub
lea
inc
cmp
jne
movzbl
xor
adc
test
btc
adc
movzwl
add
bt
btr
mov
xor
bswap
movzwl
movzbl
or
call
lcall
je
or
bswap
dec
sub
or
adc
cmp
shl
shl
sub
mov
shl
bsf
bt
xor
not
adc
cmp
shr
call
lcall
mov
shr
movzwl
not
neg
and
sub
mov
xor
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
movsbl
adc
shr
or
shl
bt
shr
test
bt
call
lcall
or
movzbl
adc
test
neg
test
mov
test
bts
add
test
and
btr
bts
shl
or
bsf
jmp
lcall
into
std
insl
sub
add
neg
btr
mov
sub
mov
add
and
xor
shl
cmp
neg
test
dec
call
lcall
add
inc
bt
btr
not
bsf
shl
xor
cmp
mov
push
pop
inc
add
loop
bswap
sub
mov
test
btc
mov
dec
cmp
bt
push
decl
mov
add
movswl
inc
xor
xor
dec
dec
neg
test
cmp
dec
call
lcall
incl
fbld
rcrb
btc
add
dec
neg
test
and
sub
push
shll
shl
shl
bsf
add
btr
cmp
bts
btc
push
or
cmp
cmp
shl
test
test
not
sub
mov
movzbl
bsf
movsbl
adc
xor
test
or
btc
push
push
pop
add
add
call
movzbl
bt
movzbl
mov
bsf
and
xor
test
xchg
and
movzwl
mov
movzbl
btc
xor
sub
movswl
mov
adc
xor
movzwl
adc
adc
bts
bt
mov
call
lcall
mov
sub
les
enter
mov
shr
and
mov
bts
bt
add
dec
btr
and
shr
mov
neg
add
add
call
lcall
shll
push
shr
movsbl
adc
inc
test
or
mov
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
sub
add
add
bsf
bts
cmp
bt
neg
not
bt
btc
neg
shl
bt
movsbl
bswap
movswl
or
call
lcall
enter
les
mov
and
neg
neg
bts
mov
xor
test
test
movzwl
or
adc
mov
not
cmp
je
test
bswap
adc
inc
shl
btr
test
and
neg
add
xor
and
adc
bsf
movzwl
adc
cmp
call
lcall
shl
or
and
bsf
xor
xor
add
sub
test
add
cmp
and
bts
sub
call
lcall
je
mov
call
lcall
mov
mov
shr
loop
mov
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
and
call
lcall
jne
mov
and
call
lcall
shr
mov
cmp
dec
test
bsf
shr
push
decl
mov
add
movzwl
add
btr
or
shr
inc
test
cmp
shr
push
decl
mov
add
test
add
mov
add
adc
test
movzwl
xor
add
dec
btc
shl
or
and
btr
test
bts
jmp
btr
mov
add
bsf
add
bts
shl
btr
mov
bsf
sub
mov
shr
cmp
or
adc
mov
adc
add
or
and
bt
and
add
test
shl
btr
cmp
and
not
or
inc
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
call
lcall
add
add
mov
jmp
lcall
cmp
jne
call
lcall
add
mov
jmp
lcall
call
lcall
jne
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
cmpl
je
add
mov
push
pop
pushl
pop
add
call
lcall
add
test
add
add
cld
mov
add
mov
or
call
lcall
in
add
or
jmp
lea
call
lcall
mov
sub
mov
jmp
lcall
mov
add
mov
and
shr
adc
add
inc
test
add
mov
add
add
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
jmp
mov
add
call
lcall
jmp
dec
bsf
btc
bts
shl
movswl
mov
xor
mov
push
push
add
xor
btr
test
btr
add
neg
bts
adc
push
sub
mov
cmp
cmp
shr
xor
add
inc
or
add
adc
mov
shl
neg
mov
and
sub
neg
adc
bt
call
lcall
js
in
bsf
sub
bts
shl
add
cmp
cmp
inc
lea
xor
test
bsf
test
or
movsbl
test
mov
shl
btc
bt
neg
sub
cmp
inc
shr
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
call
lcall
xlat
pop
sahf
insb
lret
sub
mov
movsbl
sub
bsf
movzbl
sub
mov
bt
test
adc
bsf
shr
not
adc
mov
test
push
mov
sub
test
neg
mov
add
adc
inc
push
mov
bsf
and
cmp
movzbl
cmp
not
xor
push
test
shr
bsf
test
add
test
btr
xor
call
lcall
mov
test
test
adc
and
xor
dec
jmp
pushl
add
add
jmp
int
mov
addl
xor
ret
add
jmp
call
cs
jmp
add
shr
test
jmp
andl
add
and
add
jmp
rcll
mov
adc
adc
adc
cmp
cmp
movsbl
shl
call
lcall
sub
fisttpl
mov
xor
cmp
bsf
test
test
adc
dec
add
and
cmp
test
dec
sub
bts
test
call
lcall
mov
and
and
btr
xor
add
cmp
or
cmp
inc
jmp
lcall
or
jne
call
mov
xor
xor
sub
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
pop
ret
pusha
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
mov
sub
mov
popa
ret
push
mov
mov
mov
mov
shr
xor
add
dec
jne
pop
ret
and
sub
and
imul
outsl
je
arpl
and
xor
sub
sub
add
sub
sub
fs
insb
outsl
jo
gs
and
popa
imul
imul
sub
sub
and
sub
and
insl
popa
imul
insl
popa
jae
data16
insl
popa
imul
sub
and
sub
and
je
and
and
je
cmp
das
ja
ja
outsb
imul
insl
jne
outsl
insl
popa
jb,pn
das
and
sub
add
sub
sub
push
dec
dec
push
and
dec
inc
push
inc
dec
and
dec
push
inc
inc
push
inc
inc
and
push
dec
and
dec
inc
dec
inc
and
dec
push
inc
inc
push
dec
push
and
sub
add
adc
add
loope
add
ud2
dec
inc
pop
testl
adc
insb
out
popa
in
iret
std
ja
test
pop
rolb
sub
lds
add
pop
filds
mov
out
add
popa
sub
add
add
addb
cmp
enter
xchg
int3
je
sbb
lds
add
out
cmp
sbb
jg
lret
sub
das
and
cmp
push
hlt
xor
and
add
mov
push
stos
or
addb
in
arpl
mov
lock
xchg
lods
test
add
movsb
inc
pop
in
mov
xor
pushf
mov
push
out
adc
fwait
ret
xchg
jns
add
add
sti
test
add
or
add
shlb
in
or
sbb
or
fs
inc
add
dec
or
and
fcoml
fidivs
sbb
mov
insl
fimuls
andb
sbb
or
nop
inc
mov
add
sbb
add
push
call
add
mov
xor
dec
inc
push
dec
push
jo
inc
pop
inc
pop
aaa
cmp
pop
arpl
cmpsl
addr16
and
xor
inc
push
push
cmp
push
add
xor
loopne
inc
dec
jp
pop
push
dec
push
inc
push
outsl
cmp
push
mov
sbb
inc
dec
xor
fstpt
dec
aam
dec
dec
ss
push
pop
push
inc
inc
cld
mov
inc
ret
jbe
gs
dec
inc
add
pop
push
xchg
push
aaa
xor
cmp
inc
addl
fsts
ss
push
jns
iret
ds
xor
pop
inc
dec
dec
dec
adc
aad
cmp
pop
cs
popf
les
xchg
outsb
sub
and
pop
push
inc
repnz
jmp
push
inc
push
in
add
cmp
dec
inc
jo
add
nop
add
cmp
outsl
push
jae
and
jne
push
jb
shll
repz
jg
jae
mov
outsl
addr16
insl
pop
ja
insb
push
scas
outsb
mov
push
push
sbb
or
sub
inc
cli
xchg
outsw
mov
cmp
mov
mov
add
imul
imul
gs
fimuls
dec
mulb
arpl
cmp
outsl
outsb
cmp
es
push
cs
aas
sbb
dec
adc
sbb
sub
das
adc
adc
or
ja
adc
repnz
std
pop
addb
dec
imul
push
outsl
dec
fs
popf
lcall
jmp
jmp
pushw
aam
jmp
cld
fwait
push
shll
adc
inc
fiaddl
stos
and
add
mov
dec
xchg
add
inc
push
push
and
or
std
jb
jmp
add
call
mov
fcoms
push
sub
int3
jne
stos
xlat
mov
outsl
add
test
sbb
jae
in
nop
or
imul
or
test
je
daa
jae
data16
sti
jl
cltd
das
inc
sub
mov
insb
fs
mov
dec
popa
jns
mov
movsl
pop
jecxz
mov
dec
cs
add
dec
rcr
add
push
push
inc
adc
pop
inc
mov
dec
popa
mov
dec
inc
add
mov
